or
sub
adc
jne
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
lea
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
call
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
mov
mov
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
push
push
call
mov
shll
add
add
add
sarl
jmp
cwtl
xchg
ljmp
out
data16
adc
add
ljmp
cmc
add
add
in
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jbe
imul
add
add
add
jle
add
add
test
add
add
stc
add
add
fcomps
jo
cmpsb
jbe
roll
pop
pop
add
add
xchg
add
add
xchg
add
stos
sarb
add
add
add
lcall
inc
in
push
push
push
push
push
push
push
call
pop
mov
add
test
add
loop
xchg
je
filds
roll
add
cli
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
loopne
add
add
add
mov
add
mov
add
rolb
add
in
loopne
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
rcrl
lock
pop
lods
dec
add
mov
mov
mov
in
lods
stc
push
xchg
fwait
jl
cmpsb
xchg
sub
pop
call
push
push
push
push
call
xchg
loop
add
in
add
jbe
fcompl
stos
fildl
jns
test
mov
fiaddl
addr16
lods
repnz
jno
xchg
notl
out
add
cli
add
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
stc
add
mov
mov
add
add
fincstp
cli
mov
lds
jecxz
out
cli
add
mov
add
gs
in
push
lcall
add
mov
add
cmc
out
cwtl
add
jp
rclb
lods
popa
std
je
in
jae
in
fdivr
lcall
cmc
push
add
push
push
push
lea
push
lea
push
push
push
call
add
sar
in
add
add
sti
cwtl
out
add
test
enter
rolb
mov
add
sub
pop
jmp
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
pop
add
add
add
popa
call
lret
jecxz
add
xchg
add
int
add
mov
loop
add
mov
lcall
push
push
push
push
push
push
push
push
push
call
mov
out
add
add
add
xchg
jb
add
icebp
add
xlat
jecxz
add
add
mov
mov
add
add
add
mov
add
pop
nop
mov
add
jp
popa
push
repnz
xchg
add
add
jmp
in
imul
add
lea
jno
in
fcompl
inc
hlt
mov
push
push
push
push
push
push
call
aam
loopne
fiaddl
add
add
stos
add
sub
add
in
mov
sahf
add
add
lock
add
addr16
mov
shlb
sub
pop
add
push
push
push
call
add
addl
sahf
push
add
fiadds
push
rcrb
cltd
iret
add
clc
cld
add
std
mov
roll
fs
hlt
add
lods
jne
jge
xlat
cltd
xchg
in
lahf
sarb
add
fcomi
popa
mov
stos
jmp
enter
les
cwtl
nop
xchg
int
push
add
add
add
xchg
add
ret
hlt
lcall
ret
add
add
push
push
lea
push
push
push
call
add
out
mov
les
add
add
add
add
stc
jb
test
lret
xchg
add
add
int
test
filds
pop
mov
mov
lcall
ret
xor
add
lea
push
push
push
lea
push
push
lea
push
push
call
add
movsb
xchg
push
jge
jge
add
iret
cmpsb
gs
out
add
jne
mov
out
jns
jl
ret
add
loope
add
add
icebp
addl
sub
pop
mov
push
push
push
lea
push
push
push
call
add
mov
add
push
add
add
mov
add
add
add
cwtl
add
lea
cli
imul
lcall
sbb
push
push
push
lea
push
push
push
push
lea
push
call
cld
fstpt
fldl
rcl
jmp
movl
jnp
push
push
outsl
add
fs
pusha
addl
repnz
lock
add
add
loopne
add
push
push
lea
xor
push
or
inc
add
inc
sub
add
pop
not
rol
lea
pop
push
push
lea
push
push
push
call
xchg
add
add
xchg
insb
mov
addl
clc
add
bound
int3
mov
mov
gs
add
mov
add
jne
push
push
call
add
lcall
add
mov
add
in
jle
shrl
pushf
add
jmp
fadds
roll
imul
add
add
mov
mov
sti
add
add
scas
in
pop
add
js
add
mov
push
lea
push
push
call
add
add
imul
jle
mov
xchg
add
push
add
hlt
add
scas
andb
pop
mov
cwtl
stos
add
add
add
jle
sub
pop
movl
lea
push
push
push
push
lea
push
lea
push
call
addl
add
add
push
iret
les
add
add
sti
sahf
add
out
add
add
push
out
jmp
add
add
push
add
in
popl
in
repnz
mov
mov
add
push
imul
call
push
push
push
push
lea
push
push
push
push
push
call
add
fwait
xchg
add
add
mov
test
jle
pop
add
leave
add
cmpsl
add
loope
lret
add
mov
add
call
ja
in
sahf
jmp
add
ljmp
mov
loopne
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
lahf
add
mov
add
lea
jbe
add
into
add
aad
clc
add
mov
icebp
add
roll
add
in
in
movb
or
add
add
mov
lret
add
lahf
add
mov
jno
pop
add
jne
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
jecxz
add
lock
nop
rolb
xchg
test
add
xchg
fiaddl
add
add
scas
mov
in
jbe
out
roll
add
add
in
loopne
lcall
mov
add
jne
push
push
lea
push
lea
push
push
push
call
mov
add
add
mov
stc
add
mov
add
jnp
mov
pop
mov
add
add
lret
push
xchg
add
lcall
jne
push
push
lea
push
push
lea
push
call
mov
mov
add
add
mov
cmpsb
pop
les
in
cmpsb
add
rclb
push
add
add
mov
call
push
hlt
std
add
add
hlt
add
rolb
add
popf
mov
sti
mov
ja
jbe
fldl
test
add
hlt
add
mov
add
add
jp
add
push
push
not
ror
shl
push
and
add
sub
sub
add
pop
pop
push
push
call
jns
fwait
add
add
enter
xchg
out
movsl
add
add
fiaddl
stos
out
add
push
std
shrl
add
jp
jp
add
mov
lock
lcall
jne
push
push
push
push
push
lea
push
call
pusha
add
add
push
add
out
imul
mov
jl
testb
add
pop
add
in
add
add
mov
cltd
fs
fiadds
or
add
roll
in
add
add
add
lret
bound
js
add
fists
jmp
cmpsl
out
jns
add
lcall
test
push
push
push
push
push
push
push
lea
push
call
pusha
pop
add
add
add
xchg
jle
enter
jmp
add
ja
add
add
roll
movl
lods
leave
jle
fistpll
add
add
add
inc
push
push
xor
sub
rol
push
xor
add
xor
sub
ror
pop
add
pop
push
lea
push
push
push
push
push
push
call
add
add
pop
faddl
lods
aam
mul
jp
loopne
rcll
add
add
mov
mov
fcom
add
fwait
test
std
xchg
add
push
push
push
push
call
lods
jmp
add
xchg
lods
mov
cwtl
add
add
add
add
add
nop
stos
jl
jne
adcb
test
addl
jmp
jo
mov
add
rolb
testb
hlt
xchg
cmpsb
jno
add
mov
mov
pop
push
push
push
push
push
lea
push
push
lea
push
call
xchg
add
gs
add
add
add
in
flds
add
mov
test
popf
add
add
push
aad
push
nop
out
add
add
outsl
sarl
clc
out
cmc
mov
jno
push
xchg
imul
xchg
lcall
rclb
cmc
lea
push
push
call
aam
popa
insb
stos
add
fildl
cmpsb
add
add
add
mov
leave
cmpsl
add
add
popa
mov
movsb
pop
add
std
jbe
add
add
add
add
push
add
lcall
clc
push
lea
push
lea
push
push
push
push
call
je
mov
add
mov
data16
add
pop
jge
out
js
enter
add
add
in
add
jne
add
loop
cli
lods
pushf
xchg
insb
xchg
lahf
add
lahf
add
nop
lods
popa
push
xchg
lcall
fadds
add
push
push
push
push
call
add
jnp
xlat
push
add
add
jnp
mov
lods
nop
sti
mov
je
add
add
lods
push
jbe
in
cld
add
hlt
not
std
pop
in
mul
mov
add
pop
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
call
testl
rorl
push
in
rorl
jbe
xchg
aad
sarl
mov
call
add
jp
add
xchg
rolb
mov
add
xchg
les
sub
pop
mov
add
push
push
call
add
add
ror
adcl
add
int3
push
pushf
lods
jnp
add
jp
leave
add
in
lret
add
aad
jle
in
clc
pop
add
push
push
push
push
push
call
mov
pop
add
xchg
mov
cltd
fstp
jle
lea
xchg
mov
add
addb
int
stc
jno
cld
sub
pop
add
push
lea
push
call
cltd
and
add
imul
add
add
lds
lea
cmp
mov
add
add
push
mov
mov
fildl
in
clc
lcall
xor
or
lods
nop
xor
loopne
lods
push
push
lea
push
lea
push
lea
push
push
call
fisubrs
push
xchg
xchg
pusha
xchg
sti
pop
loope
stos
cmpsl
add
fadds
jp
mov
add
jle
mov
mov
ljmp
jp
ja
imul
mov
jl
jge
addb
faddl
add
jnp
jl
add
add
push
fisubl
mov
xchg
sub
pop
xor
push
push
push
push
call
add
mov
imul
cli
add
pop
out
addl
roll
xchg
mov
lret
aam
mov
add
push
fildl
sarb
add
in
push
jns
mov
lcall
les
add
push
push
push
call
add
add
mov
pusha
mov
add
add
sahf
add
mov
add
add
popa
push
add
enter
stos
aad
lahf
jae
xorl
add
add
sti
mov
add
add
stc
add
stos
add
add
add
xchg
fdivrs
add
pop
add
push
push
push
push
call
add
loope
cli
cmpsl
subl
add
icebp
lock
js
imul
out
mov
lock
cmc
mov
add
leave
add
jnp
imul
push
mov
push
push
push
lea
push
push
push
push
call
add
lea
rolb
shr
add
jl
lahf
add
mov
add
into
xchg
mov
into
xchg
fiadds
mov
stos
xchg
fwait
jl
xchg
mov
notl
add
sar
jnp
loopne
xchg
add
add
pop
jecxz
scas
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
cwtl
popf
jle
add
cld
stos
imul
xchg
out
add
stos
aad
addr16
add
pop
add
cld
pop
add
add
add
rolb
insb
gs
mov
add
add
add
add
xchg
add
arpl
add
addl
cmpsl
repnz
pop
add
push
push
push
push
push
push
push
push
call
sbbb
add
clc
mov
push
mov
out
lods
add
out
int
test
add
add
movl
andl
imul
jl
add
in
loopne
add
pop
push
push
call
jnp
add
add
ret
add
xchg
jae
push
jne
cmpsl
sti
add
add
mov
lock
mov
add
aad
addb
lds
popa
add
bnd
xchg
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
cmpsb
cmpsl
add
test
mov
incb
bound
lods
mov
mov
lret
add
aad
into
push
add
add
add
addr16
into
sub
pop
xor
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
add
les
iret
orb
fwait
call
add
add
cli
push
rolb
fdivl
add
add
add
push
call
push
cmpsb
mov
lcall
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
ficomps
jl
jnp
add
cwtl
add
pop
add
mov
add
mov
arpl
mov
repnz
sub
pop
push
push
push
lea
push
push
call
mov
add
add
imul
add
lock
cmpsl
add
add
add
loopne
add
out
je
testl
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
add
add
mov
faddl
add
jp
cld
lret
popa
add
xchg
mov
outsl
add
add
add
cltd
sti
addl
mov
mov
add
add
sub
pop
sub
pop
push
push
call
test
movsb
pop
jbe
stos
scas
add
addr16
adc
stos
jae
add
push
xchg
add
insb
mov
cmc
cli
sub
pop
rep
push
push
call
add
mov
add
aam
add
add
cmc
add
push
mov
mov
stos
cli
add
add
add
in
out
xchg
jns
jne
addl
add
fsubs
jns
in
clc
pop
pop
mov
push
lea
push
push
push
call
xchg
movsb
imul
add
add
cmpsb
add
add
jae
add
lock
add
scas
jmp
add
pop
add
mov
cld
hlt
jae
mov
data16
out
add
pushf
cli
push
negl
add
lret
add
add
sbbb
out
in
lock
add
push
push
lea
push
push
push
push
push
push
push
call
jmp
add
push
cmpsb
add
add
add
add
fcompl
push
sbbb
fldl
add
fwait
push
mov
add
mov
xchg
fs
jecxz
data16
mov
aam
mov
mov
lret
jle
add
movsb
mov
mov
sub
pop
add
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
cld
add
stc
add
add
add
lret
jns
add
cld
push
ja
add
jp
add
add
add
cltd
mov
xchg
loope
fs
mov
push
xchg
add
jmp
add
push
push
jns
push
mov
add
shl
add
mov
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
je
movsb
add
add
sbbb
imul
jge
jo
add
les
xchg
add
add
mov
hlt
cli
add
add
roll
pop
mov
lcall
add
push
push
push
push
call
xchg
mov
add
fwait
mov
cmc
mov
add
enter
push
shll
add
fsubrs
mov
add
in
lock
add
push
push
push
push
push
push
push
push
push
call
add
jge
imul
add
loop
mov
add
add
add
fs
xchg
leave
jns
add
movb
scas
push
add
add
cld
xchg
add
add
flds
ljmp
test
mov
xor
push
push
call
add
std
add
fmulp
jb
add
add
shll
mov
jge
pop
add
movsl
aad
add
sti
fwait
add
loop
push
mov
add
mov
pop
lcall
add
testl
add
lcall
dec
sub
or
ds
or
push
lea
push
push
push
push
call
js
add
enter
push
cld
leave
fwait
add
pusha
add
add
scas
pop
popf
xchg
add
mov
add
ret
xorb
push
add
pusha
add
add
add
mov
rcr
ljmpw
jle
add
add
arpl
jo
test
add
ffreep
add
add
or
push
push
push
push
call
add
add
loopne
add
add
mov
xchg
imul
mov
mov
popl
mov
xchg
int3
jno
pop
lods
jecxz
aad
add
ljmp
pop
add
xchg
movsb
test
jb
roll
add
add
rol
std
sub
pop
add
push
push
lea
push
push
call
aam
add
test
mov
pop
shl
jecxz
gs
lcall
add
pop
std
add
jae
pop
out
out
xchg
add
add
je
add
lea
add
jne
pop
cmpsb
add
cli
les
js
mov
add
add
add
in
lock
lcall
ret
cmp
cli
push
lea
push
lea
push
call
add
add
xlat
mov
out
scas
jne
add
add
xorl
mov
add
mov
aad
jno
mov
scas
cmc
add
jne
in
lock
lcall
rcll
cmp
push
lea
push
lea
push
push
push
push
push
call
lds
add
pop
data16
mov
fadds
lds
jns
mov
mov
stos
out
add
add
ljmp
add
xchg
movsl
imul
add
mov
push
push
add
not
push
or
not
add
lea
sub
dec
add
sub
add
pop
shl
add
add
not
pop
push
push
push
call
add
pop
mov
cwtl
test
jl
add
xchg
add
test
add
add
jmp
js
imul
bound
add
add
mov
loope
mov
add
add
add
add
mov
add
add
fadds
jb
shlb
mov
roll
mov
add
in
hlt
lcall
jne
call
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
lods
out
add
movsb
mov
add
fs
jecxz
add
mov
add
fadds
xchg
mov
insb
add
cwtl
testb
mov
add
nop
aam
pop
add
incb
movsb
in
add
push
add
lcall
add
xor
rol
push
or
not
add
shr
xor
sub
xor
pop
sub
pop
push
push
call
iret
bound
jns
add
add
add
add
test
push
popa
iret
add
add
movl
bound
add
add
mov
add
push
in
add
les
fs
cmpl
push
push
push
push
push
push
push
push
call
add
mov
xchg
mov
loopne
imul
add
add
add
pop
filds
cmpsl
fisttps
fdivrp
call
add
xchg
in
add
sbbb
in
mov
in
gs
fwait
jae
add
mov
add
out
add
add
sarb
mov
pop
push
push
add
pop
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
jp
pop
roll
add
faddl
add
stos
in
out
add
outsl
in
mov
fwait
add
arpl
add
stos
nop
add
add
sub
pop
mov
push
shr
pop
push
push
inc
not
pop
push
mov
push
inc
pop
add
push
sub
pop
add
push
push
push
lea
push
push
push
call
roll
add
je
pop
out
sbbw
adcl
pop
ljmp
jmp
add
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
into
add
lea
sbb
popa
jl
push
jecxz
push
call
mov
add
fmuls
add
fldl
lret
mov
scas
mov
pop
jb
in
add
fwait
sub
pop
xor
push
push
push
push
call
pushf
movl
add
jp
movb
lock
add
addl
add
mov
lret
mov
popf
mov
add
pop
fstp
xchg
lahf
loopne
in
sub
pop
add
push
add
shr
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
pop
std
in
add
loope
add
add
aam
lea
mov
add
mov
adc
add
iret
stos
add
add
test
ret
push
pop
in
xlat
add
add
outsl
mov
add
mov
add
ret
add
addl
in
fdivr
lcall
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
fldl
filds
pushf
add
test
mov
push
add
cld
out
add
mov
aam
mov
in
sti
movsb
ja
in
fdivr
lcall
add
push
push
push
push
push
lea
push
call
mov
pushf
bound
mov
mov
out
add
add
jp
int3
cli
push
add
ljmp
jns
leave
fdivp
add
lock
add
mov
jne
push
incb
in
add
fs
mov
mov
add
sub
pop
add
push
sub
pop
add
push
shl
xor
pop
pop
push
ror
xor
pop
mov
push
push
push
push
call
lods
out
add
add
add
add
add
add
popa
add
xchg
add
pop
movsb
nop
fldt
mov
mov
add
add
mov
add
push
add
sub
pop
xor
push
push
push
push
push
push
lea
push
call
add
adc
add
addl
add
jge
add
add
add
add
add
add
add
sti
divl
add
add
add
add
les
add
push
sub
inc
pop
rep
push
push
push
call
add
out
jecxz
test
pop
mov
lret
test
hlt
hlt
stc
add
hlt
sti
ljmp
cld
rcll
xchg
nop
mov
jp
jns
mov
add
add
cmc
fcomp
mov
mov
movsb
jae
jnp
sub
pop
mov
xor
push
push
push
push
push
push
push
push
call
out
cltd
add
je
in
fdivr
push
add
add
sbbl
mov
add
in
int3
add
xchg
mov
aad
mov
push
add
fiadds
cmpsb
sub
pop
or
je
mov
xor
push
sub
pop
mov
xor
push
add
rol
pop
add
add
push
add
lea
pop
push
mov
xor
push
pop
add
pop
push
sub
pop
rep
mov
xor
push
push
push
push
push
call
jne
test
jmp
add
pop
cwtl
addl
rolb
add
jp
js
out
pop
testl
in
in
lcall
leave
je
push
push
push
push
push
push
push
push
push
lea
push
call
into
xchg
add
jno
enter
addb
pop
add
add
lret
mov
test
add
pop
scas
lcall
jmp
add
jl
add
js
notl
pop
sti
add
std
jne
stos
push
add
popa
mov
lcall
repz
push
push
lea
push
push
push
push
push
lea
push
call
add
jb
jmp
mov
jo
mov
mov
mov
add
add
add
lods
add
add
insb
loope
add
mov
ljmp
call
jge
mov
insb
add
sub
pop
add
add
push
push
push
call
popl
push
add
add
add
add
pop
add
add
add
push
pop
add
add
lods
pop
add
in
mov
add
test
in
hlt
pop
rep
push
ror
pop
pop
push
push
shr
lea
shr
add
push
or
not
add
sub
add
lea
pop
ror
pop
push
add
pop
pop
mov
push
lea
push
lea
push
push
push
push
push
call
add
ljmp
jo
clc
add
add
push
xchg
add
jl
pusha
add
lcall
insl
hlt
mov
push
push
push
push
call
mov
add
add
outsl
push
sti
roll
pop
pop
add
filds
add
add
ror
push
icebp
add
add
lock
jmp
push
inc
xor
sub
pop
push
push
add
add
sub
pop
mov
add
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
rcrb
add
hlt
push
add
mov
push
lock
add
pop
add
add
add
lcall
pop
filds
add
xchg
add
add
add
add
mov
int3
in
loopne
add
je
add
int3
add
sub
pop
push
push
push
call
add
mov
add
add
pushf
add
add
out
xchg
fsubr
add
add
lret
movl
add
mov
faddl
add
add
rcr
stc
out
add
add
add
pop
add
rolb
lcall
shll
clc
pop
push
push
push
add
add
dec
pop
push
mov
push
lea
add
shr
pop
pop
push
ror
add
pop
pop
push
pop
pop
push
push
push
push
call
add
out
add
aad
add
popa
lods
loope
mov
push
stos
out
testl
xchg
jbe
jmp
movsb
add
mov
fcoms
in
lock
lcall
leave
push
sub
dec
pop
ret
push
push
push
push
call
jmp
pushf
add
add
add
ljmp
scas
jl
popa
add
mov
sbb
xlat
add
out
add
add
add
add
bound
add
mov
mov
aad
popl
pop
nop
ja
add
icebp
mov
in
hlt
lcall
in
add
push
sub
add
ror
pop
push
push
push
shl
not
pop
push
push
sub
xor
sub
add
pop
push
movl
push
dec
pop
addl
push
dec
pop
test
je
mov
push
push
push
push
push
push
push
call
add
add
jle
add
scas
add
test
add
loop
insb
pop
cmpsl
add
bound
pushf
xchg
add
add
mov
stos
mov
out
mov
add
add
xchg
fildl
pushf
jae
add
aam
add
sub
pop
pop
pop
push
lea
push
push
lea
push
call
mov
push
cwtl
add
ret
add
out
lret
add
test
add
mov
pop
xchg
cld
add
les
std
fldcw
add
mov
jbe
jns
add
add
xchg
xchg
test
push
lea
push
lea
push
push
push
push
push
call
cmpsl
lcall
add
jp
add
fiadds
pop
add
jae
fucomip
imul
push
jo
mov
add
jl
ja
imul
scas
push
lea
push
lea
push
call
lea
add
add
add
insb
fcmovu
add
pop
add
add
push
rolb
add
add
xchg
add
add
mov
xor
stos
fadds
sub
pop
leave
ret
push
add
shr
pop
push
push
push
call
hlt
add
sahf
js
xchg
push
mov
shr
mov
add
mov
add
mov
mov
arpl
mov
fimuls
add
xchg
fildl
lds
add
andb
mov
fcmovb
add
lcall
in
push
not
add
sub
shl
pop
add
push
inc
pop
push
push
sub
shr
inc
pop
push
push
push
lea
push
push
call
ljmp
loop
push
cmpsb
pop
loope
add
movsb
sbbb
enter
scas
mov
jb
out
add
jo
cmpsb
out
iret
add
sub
pop
push
push
push
push
lea
push
call
clc
push
mov
jo
test
popf
add
add
add
xchg
js
add
add
stc
cmc
out
mov
add
add
pushf
add
add
add
fs
add
add
xchg
imul
push
stos
xchg
add
add
jae
add
add
mov
xchg
sub
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
movsb
add
add
add
add
leave
je
push
roll
add
popf
in
fwait
into
lock
scas
add
enter
loopne
testl
push
push
push
push
push
lea
push
push
lea
push
push
call
movsb
xchg
add
add
pop
add
cmpsb
icebp
add
jl
aad
les
aam
out
add
rolb
inc
or
push
sub
ror
pop
push
push
xor
pop
call
push
xor
sub
pop
mov
push
xor
add
sub
pop
pushl
push
push
push
lea
push
push
push
call
add
add
les
into
testl
lods
add
xchg
mov
pop
add
fmull
add
add
add
xlat
mov
mov
sti
add
in
call
push
push
shl
dec
pop
push
push
add
sub
dec
pop
call
push
lea
push
push
push
push
push
call
add
add
cli
stc
pushf
fildl
cmpsb
add
test
jge
out
xlat
push
add
add
add
pop
add
jge
add
test
das
push
lea
push
push
push
lea
push
push
call
push
subl
add
mov
add
in
mov
mov
stos
std
add
ljmp
add
xchg
mul
pop
add
add
xchg
pop
add
stos
push
js
add
mov
in
loopne
pop
push
sub
rol
pop
pop
push
sub
pop
pop
pop
push
add
lea
pop
leave
ret
push
lea
push
push
push
lea
push
push
push
push
push
call
rcrb
insb
outsl
mov
add
repnz
xchg
add
cli
fwait
pop
add
add
add
mov
pop
mov
js
add
outsl
shl
jl
cld
add
ret
int3
mov
cli
add
out
sahf
add
hlt
imul
roll
mov
arpl
sub
pop
push
push
inc
xor
add
dec
pop
mov
push
push
push
push
push
call
mov
subb
loop
add
into
mov
mov
xorl
test
ficoms
leave
out
add
jns
add
add
lods
mov
add
pop
add
pop
insb
jae
add
sub
pop
add
push
not
pop
push
push
push
add
xor
pop
push
push
lea
push
lea
push
push
call
mov
jl
aam
add
xchg
addr16
add
ret
stc
add
add
jmp
cmc
scas
sahf
add
lret
add
pop
add
scas
add
add
xchg
cmpb
add
add
add
out
pusha
add
hlt
icebp
push
add
lods
sub
pop
push
movl
push
push
push
push
push
lea
push
lea
push
push
call
mov
pop
outsl
cmpsl
push
subb
add
ja
les
std
add
xchg
push
call
add
push
jb
xchg
add
jb
add
lock
mov
push
ljmp
add
lret
jecxz
jl
add
push
push
push
push
push
call
shrl
push
pop
test
fimuls
mov
cmpsl
fnstsw
stos
add
fiaddl
mov
pop
add
add
fsubrl
andb
enter
addl
add
add
lds
add
pop
push
push
sub
pop
call
push
push
add
pop
call
push
push
push
push
push
lea
push
push
push
call
out
xchg
add
js
iret
add
jae
scas
mov
mov
add
jle
add
fstpt
pushf
push
add
push
xchg
add
jb
int3
fldl
roll
mov
add
mov
add
add
roll
jmp
add
in
loopne
lcall
insl
cld
add
ror
pop
cmpl
jne
pop
push
sub
add
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
ficompl
add
js
add
pop
add
add
lahf
rolb
stos
mov
add
add
test
filds
mov
add
add
add
sub
pop
pop
leave
push
rol
ror
pop
ret
push
dec
xor
shr
add
pop
push
mov
push
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
add
in
lahf
test
test
add
movl
add
add
rcrl
add
mov
add
int
add
addl
pop
push
push
inc
shl
dec
pop
push
push
add
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
cmpsb
jbe
cwtl
pusha
add
enter
into
mov
mov
add
js
add
int
lret
roll
fildl
mov
lret
aad
push
pop
add
sarl
add
lcall
push
sub
shl
pop
mov
push
add
shr
pop
lea
push
push
lea
push
push
call
add
xchg
add
sti
test
andl
gs
mov
in
add
xorb
jl
aad
add
jp
lahf
lods
jle
stos
sti
add
call
not
inc
pop
mov
push
pop
shr
push
rol
pop
add
mov
push
add
shr
rol
pop
mov
push
not
ror
add
shl
pop
add
add
push
sub
xor
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
fdivrl
lds
mov
insb
popf
mov
mov
loop
gs
leave
flds
out
add
add
add
in
aam
in
fcomps
nop
nop
nop
nop
push
pop
cmp
jne
cmp
jne
push
push
push
lea
push
push
push
push
push
lea
push
push
call
iret
cwtl
push
add
lods
loope
add
pop
cmc
insb
add
add
jl
add
xchg
stc
loopne
add
xchg
add
outsl
jno
std
loope
fucom
mov
mov
add
out
clc
push
add
lods
add
imulb
fadds
rcll
out
add
add
add
jmp
fdivr
lcall
inc
adc
push
push
push
push
lea
push
push
push
push
call
add
add
pop
xorb
fsubs
jb
lcall
aad
lret
push
add
add
add
add
jbe
lods
add
roll
pop
add
scas
imul
add
add
jns
push
add
add
cli
insb
out
add
mov
add
fcomps
add
add
add
shr
inc
shl
pop
jmp
push
ror
xor
pop
mov
push
lea
push
lea
push
push
call
add
popa
imul
stos
mov
add
jmp
xchg
mov
add
add
mov
test
add
loope
pop
shrl
add
add
xchg
add
push
or
adc
test
add
add
xor
inc
ret
adcb
cmpsb
push
push
lea
push
push
push
call
add
add
add
push
add
add
mov
cli
lds
insb
test
jbe
rolb
add
add
lods
add
jle
mov
add
add
mov
in
fdivr
lcall
inc
adc
add
add
push
push
push
push
push
call
jne
add
mov
stc
fs
mov
jl
add
test
movb
cmpsl
sahf
cmpsl
add
add
imul
push
add
add
push
add
add
lea
add
incb
add
lret
mov
add
mov
xchg
nop
mov
int3
in
hlt
add
jle
in
in
lcall
adc
lea
push
push
push
call
fcmovb
xlat
jns
add
add
push
add
add
sarb
pop
popf
add
rorl
add
jnp
call
add
add
call
in
lock
lcall
inc
cld
mov
push
add
add
pop
cmp
jne
mov
push
sub
ror
pop
movl
jmp
push
push
push
push
push
push
lea
push
push
push
lea
push
call
test
add
mov
mov
push
jo
pop
lret
in
add
mov
test
add
pop
add
push
test
add
sub
pop
mov
push
ror
shl
pop
cmpw
jne
push
push
push
push
push
push
call
cltd
add
lret
pop
pop
out
iret
add
stos
add
add
xchg
lock
ja
add
add
imul
pop
mov
jae
nop
add
fwait
mov
loopne
std
into
push
add
hlt
insb
xchg
add
in
sub
pop
mov
push
lea
pop
movl
push
shl
pop
jmp
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
js
add
clc
add
add
mov
add
ret
add
add
add
aad
add
add
push
add
push
outsl
cltd
movsl
in
sub
pop
pop
mov
push
shl
pop
mov
push
push
call
mov
fsubrp
int3
add
enter
add
add
add
add
pop
mov
into
gs
add
push
push
mov
add
fadds
out
add
mov
into
add
add
add
mov
fldl
push
push
xchg
push
add
sub
pop
mov
push
push
add
xor
shr
push
push
pop
add
sub
add
sub
sub
lea
pop
pop
push
push
lea
push
lea
push
call
cld
push
les
pusha
add
add
mov
cmc
add
add
push
nop
push
std
add
xlat
add
mov
add
negb
fcompp
add
add
add
clc
add
jno
push
addb
std
add
addb
push
push
lea
push
push
push
push
push
call
lret
bound
stc
add
test
incb
add
jne
push
ror
shll
ret
cwtl
add
fldl
arpl
std
xchg
push
mov
int
add
fcoml
jp
cld
ljmp
jge
add
cmpsb
add
add
add
in
loopne
call
cmpl
je
push
push
push
xor
add
lea
add
shr
sub
xor
sub
add
pop
xor
pop
push
push
lea
push
push
push
call
add
mov
filds
out
add
iret
leave
push
add
add
gs
jb
fucomi
add
popl
andl
add
add
fldl
add
mov
add
pop
add
add
lcall
push
push
push
push
push
lea
push
call
roll
add
popl
xchg
fcoml
add
loopne
mov
rolb
fwait
movsl
mov
pusha
xchg
rorl
cmc
push
aad
add
std
mov
xchg
push
data16
fmull
add
shrl
mov
mov
lcall
movsb
test
add
add
pop
jb
add
xor
add
pusha
push
push
push
lea
push
call
mov
lods
add
add
cli
add
mov
fwait
add
ret
add
xchg
into
add
add
into
add
xchg
add
sbb
ret
aad
lods
ficoml
add
push
cmc
add
pop
add
add
lcall
js
int3
fldz
ret
pushf
pop
add
push
push
lea
dec
shl
push
and
add
inc
shr
ror
shr
sub
add
dec
add
pop
pop
push
lea
not
pop
push
push
add
xor
xor
pop
call
push
rol
lea
rol
shl
pop
cmpl
je
push
push
add
sub
push
or
inc
add
shl
dec
inc
sub
add
shr
sub
sub
pop
ror
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
addl
mov
push
mov
xchg
jo
lahf
jbe
testb
faddl
std
add
add
pop
add
add
jecxz
imul
std
scas
jbe
add
add
add
arpl
jbe
add
add
pop
add
sub
pop
push
push
pop
call
push
lea
push
call
jae
mov
push
add
enter
add
lret
stos
add
jo
outsl
ret
push
imul
in
add
add
add
ja
add
sahf
add
add
add
add
imul
pop
cmpl
je
push
push
ror
add
rol
push
and
add
lea
xor
rol
sub
shl
sub
shr
sub
pop
xor
xor
xor
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
ja
mov
into
out
pop
out
ror
rolb
in
rcrb
loope
add
mov
push
push
in
sub
pop
push
push
xor
pop
call
push
push
push
call
add
add
push
stos
jae
pop
lea
mov
push
loopne
add
imul
cmpsb
jno
add
jb
add
mov
fs
ja
sti
jmp
add
icebp
nop
push
push
mov
xchg
ja
lea
pop
push
clc
jo
xchg
add
mov
in
hlt
lcall
cmp
rol
je
push
push
xor
push
or
inc
add
shl
sub
rol
not
rol
pop
rol
xor
rol
pop
push
ror
sub
pop
push
push
push
push
push
call
jecxz
add
add
ja
add
test
add
pop
push
mov
mov
jne
fadds
xchg
add
xchg
add
add
shr
mov
testl
add
cli
lea
pop
add
test
popa
cwtl
pushf
add
sub
pop
call
cmpl
je
push
push
xor
push
sub
add
shl
xor
sub
shr
lea
ror
pop
add
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
sahf
leave
push
out
add
xchg
divl
add
mov
add
add
add
fs
add
mov
add
jbe
add
jne
mov
pop
push
push
not
pop
call
push
push
push
call
pop
add
mov
push
add
jnp
add
add
scas
mov
add
xchg
add
jbe
insb
ficoml
add
add
mov
mov
push
add
mov
stos
jle
add
movsl
loope
xchg
out
lret
aam
add
push
add
fs
enter
pop
mov
cltd
sub
pop
cmpl
je
push
push
add
sub
push
sub
add
inc
inc
sub
dec
lea
pop
not
inc
pop
push
xor
pop
push
push
lea
push
push
push
push
push
push
push
call
arpl
cmc
test
test
lret
add
add
cmpl
add
in
loopne
lcall
hlt
sub
add
loope
dec
sub
sub
pop
cmpl
je
push
push
add
dec
sub
lea
push
or
inc
add
add
sub
ror
shr
shr
pop
pop
push
not
inc
add
add
pop
push
push
inc
sub
pop
call
push
add
shl
pop
cmpl
je
push
push
shl
push
or
inc
add
inc
add
shr
shl
sub
pop
lea
pop
push
push
push
call
movsl
insb
push
add
mov
add
mov
movl
jae
add
mov
add
lea
add
add
mov
in
in
sub
pop
push
call
push
lea
sub
add
xor
pop
cmpl
je
push
push
not
shl
add
shr
push
and
add
inc
inc
sub
inc
shr
sub
pop
add
sub
pop
push
shr
ror
pop
push
call
push
push
push
call
lret
pusha
add
add
add
clc
push
clc
add
jae
std
fistpl
add
roll
call
ficoms
add
add
int
sbbb
sti
lret
in
add
add
pop
add
add
add
js
xor
ret
test
add
push
push
rol
inc
sub
ror
push
push
pop
add
shr
add
sub
inc
shr
rol
pop
sub
inc
add
pop
push
pop
push
push
ror
add
pop
call
push
shr
inc
pop
cmpl
je
push
push
sub
shr
rol
push
sub
add
shl
sub
add
not
pop
ror
lea
shl
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
cld
add
add
rclb
add
xorb
test
shll
bound
add
popa
repnz
sarb
mov
imul
jnp
mov
xchg
out
popf
fwait
jmp
jecxz
add
add
fldenv
mov
add
sub
pop
push
push
not
sub
pop
call
push
sub
shr
pop
cmpl
jne
push
ror
ror
xor
rol
pop
mov
push
push
push
lea
push
push
call
cmpsl
add
iret
add
add
rolb
add
add
jbe
xchg
lahf
add
out
sti
add
fs
add
mov
nop
jecxz
repnz
into
add
movl
add
push
lea
push
call
movsl
jne
xchg
fldenv
push
mov
mov
jecxz
add
add
movsl
test
filds
mov
push
add
mov
mov
pop
test
lcall
add
rclb
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
ret
pusha
out
add
ret
add
add
add
roll
add
jbe
add
add
mov
out
add
mov
bound
jle
add
add
mov
int
divb
pushf
popa
push
add
push
xchg
in
mov
xchg
xlat
sti
pop
out
loop
insb
mov
push
xor
pop
pop
push
lea
push
call
add
mov
scas
add
add
add
add
flds
push
jp
into
ja
hlt
imulb
push
mov
add
push
rcl
lock
add
loopne
push
test
imul
test
sub
pop
leave
ret
push
push
call
pop
scas
mov
ret
cmpsl
xchg
fwait
push
jge
into
je
out
lea
cmc
add
aam
add
fwait
jnp
loope
jno
mov
add
add
add
add
fistps
pop
jb
pushf
add
leave
cld
filds
mov
mov
add
nop
lea
push
add
sub
pop
push
push
sub
add
pop
mov
push
push
push
push
push
call
cld
add
mov
xchg
nop
cltd
lods
xlat
add
mov
jp
add
add
leave
int3
xchg
lahf
jmp
gs
popf
mov
leave
add
add
mov
sub
pop
add
push
push
call
lcall
add
add
pop
loope
loopne
add
mov
mov
fs
push
out
push
add
ja
jecxz
sub
pop
cmpl
jne
push
push
inc
rol
add
rol
push
xor
add
shl
shr
shr
sub
dec
pop
rol
sub
not
inc
pop
push
xor
not
pop
pushl
push
ror
pop
call
push
shr
lea
xor
pop
push
call
push
lea
sub
pop
jmp
cmpl
je
push
push
push
push
push
push
lea
push
lea
push
push
call
add
push
mov
add
add
add
cltd
jmp
xchg
mov
lcall
pop
cmpl
jne
push
inc
xor
ror
pop
mov
push
sub
sub
pop
call
ret
push
add
pop
jmp
push
lea
xor
lea
inc
pop
cmpl
jne
push
push
shl
push
xor
add
sub
ror
ror
pop
add
sub
pop
push
lea
rol
pop
pushl
push
add
add
shl
pop
call
push
push
add
add
add
pop
call
jmp
push
not
not
not
ror
pop
cmpl
jne
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
mov
jmp
shr
pop
mov
add
add
add
jbe
add
add
lods
mov
test
add
add
jl
add
add
add
out
add
add
jmp
add
lret
mov
add
sub
pop
mov
push
push
push
call
pop
add
add
ror
add
rcll
outsl
scas
add
jmp
addl
xchg
add
add
jmp
in
nop
mov
stos
push
stc
mov
jmp
imul
add
cmpsl
pop
jbe
jnp
add
push
push
push
push
dec
not
add
push
sub
add
not
not
sub
lea
inc
sub
pop
xor
sub
pop
push
push
push
call
popf
and
fildll
lret
add
pop
add
leave
in
mov
mov
js
jnp
add
testl
in
add
add
sti
mov
lcall
jne
push
lea
lea
rol
pop
call
push
add
pop
call
push
push
dec
add
push
or
not
add
sub
add
pop
xor
pop
push
sub
pop
pushl
call
push
xor
pop
call
push
push
shr
sub
add
lea
push
or
inc
add
sub
sub
shl
inc
shl
pop
add
inc
pop
push
push
lea
push
push
push
call
pusha
test
mov
add
je
add
xlat
push
cld
mov
cli
testb
add
icebp
xchg
add
add
push
icebp
mov
add
add
outsl
lock
add
add
push
jge
add
jne
call
push
push
call
add
add
add
jge
mov
lea
mov
movl
in
out
mov
jnp
xchg
imul
mov
add
jge
add
clc
pop
call
push
push
add
ror
not
push
xor
add
sub
shl
sub
lea
pop
xor
add
shr
lea
pop
push
push
push
call
push
xchg
mov
pop
fs
mov
cli
outsl
jnp
ret
add
js
jle
add
test
pop
aad
mov
add
add
add
add
jo
add
iret
add
mov
add
loopne
data16
add
imul
mov
scas
stos
mov
add
cli
add
lcall
jne
push
push
push
push
push
push
lea
push
push
call
filds
mov
add
jle
add
mov
jbe
out
rolb
add
stc
add
xchg
lods
sahf
add
push
into
add
add
add
xchg
cld
add
loopne
lcall
andl
out
ror
pop
call
push
push
sub
push
xor
add
rol
shr
add
sub
shr
shr
not
rol
pop
lea
pop
push
lea
push
push
lea
push
call
jne
stos
add
mull
fistl
ja
hlt
jmp
add
add
lret
add
jae
incb
jecxz
bound
out
push
pop
cli
mov
add
pop
fistps
add
push
add
add
xchg
push
mov
jmp
add
int3
lcall
pop
add
sub
pop
pushl
push
shl
shl
pop
call
push
not
pop
call
push
push
inc
rol
add
sub
push
or
inc
add
add
not
sub
pop
sub
shr
shr
pop
push
xor
shr
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
std
add
mov
mov
in
add
mov
xchg
notb
mov
loopne
call
call
push
push
push
push
pop
add
shl
add
shr
sub
rol
rol
xor
not
pop
add
lea
rol
pop
push
push
push
push
call
test
add
add
jecxz
add
mov
add
jp
add
ret
add
add
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
out
add
mov
into
add
mov
add
jle
add
rcrb
xlat
fwait
xlat
lret
mov
add
jle
add
lcall
shrb
xlat
jne
push
xor
push
push
pop
add
shl
shl
sub
inc
add
pop
dec
pop
push
lea
push
call
add
test
pop
add
add
add
stos
lahf
add
pop
add
add
add
jl
stos
stos
xchg
mov
orb
in
fnstcw
jbe
outsl
fadds
addl
add
leave
add
xlat
mov
add
add
add
lcall
jne
push
dec
inc
pop
call
push
add
add
shr
sub
pop
call
push
push
lea
lea
push
sub
add
add
rol
lea
sub
rol
lea
inc
pop
inc
not
pop
push
lea
push
push
lea
push
call
data16
cwtl
add
jl
fisubs
add
add
xchg
insb
cmpsl
mov
add
cli
scas
add
gs
mov
iret
loopne
add
add
lods
je
mov
add
push
mov
pop
mov
mov
jle
lds
in
out
cli
mov
lcall
jne
push
lea
push
push
push
push
push
push
call
add
les
mov
add
jecxz
pop
lcall
add
imul
imul
pop
call
call
push
push
sub
push
push
pop
add
sub
shr
not
inc
pop
not
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
fldl
add
call
add
mov
mov
push
stc
pop
add
xchg
add
pusha
mov
test
add
stos
scas
movsl
mov
fiaddl
add
arpl
fs
mov
add
shrl
les
add
lds
add
add
add
lcall
jne
call
push
push
push
call
fildl
fxch
add
sbbl
fadds
add
push
clc
mov
add
hlt
lds
push
add
into
pop
add
add
push
faddl
add
je
lock
jl
add
lods
pop
jecxz
icebp
mov
add
add
mov
lcall
pushf
and
call
push
push
push
push
lea
push
push
push
call
addr16
mov
into
add
add
fisubrl
add
add
popa
push
add
xchg
movb
les
arpl
pop
add
add
mov
sub
pop
call
push
push
sub
push
or
not
add
add
shl
inc
not
sub
lea
ror
shr
pop
add
pop
push
push
push
push
push
push
push
push
call
push
test
add
lds
add
add
add
loop
xlat
add
push
pop
add
mov
scas
loopne
pusha
add
mov
add
add
je
add
add
push
add
rolb
bound
mov
pop
mov
add
lods
sub
pop
pushl
call
push
push
push
push
push
call
add
lahf
test
add
jns
add
mov
stos
jae
movsb
subb
in
fsubrl
add
xchg
in
movb
pop
incb
shrb
fsubs
rclb
add
mov
subb
and
rol
sub
inc
pop
ror
shl
shr
sub
pop
push
xor
shr
not
sub
pop
pushl
push
lea
push
call
repnz
add
iret
shll
add
jb
add
pop
cwtl
xchg
pop
nop
roll
pushf
mov
stos
add
stc
add
push
add
shrl
popf
jp
add
movsl
sbb
add
repnz
call
push
push
add
push
or
not
add
add
sub
sub
pop
pop
push
lea
push
push
lea
push
push
push
call
insb
fiadds
mov
pop
int3
pop
add
add
xchg
sahf
add
cmpsl
mov
add
jecxz
les
add
sahf
je
add
test
mov
aam
scas
sahf
cmpsl
fistpl
add
popf
sub
pop
pushl
call
push
push
push
call
rolb
add
xlat
push
pop
test
mov
adcb
add
testb
testl
add
mov
add
fcoms
in
mov
test
rolb
jmp
add
add
add
add
add
add
pop
add
cli
mov
sub
pop
call
push
push
shl
add
not
push
xor
add
ror
ror
not
sub
ror
pop
lea
dec
lea
pop
push
rol
ror
sub
pop
pushl
push
xor
shl
pop
call
push
push
ror
shl
push
xor
add
xor
not
lea
sub
add
pop
rol
inc
lea
add
pop
push
push
dec
not
push
or
not
add
lea
not
xor
sub
not
pop
inc
shl
pop
push
push
push
push
push
call
add
sahf
cwtl
enter
add
icebp
mov
add
pop
add
xorl
call
push
push
push
push
lea
push
call
cmpsb
mov
mov
cwtl
add
test
add
cli
ljmp
pop
xchg
fdiv
iret
adc
ja
add
sbb
add
add
add
jmp
lods
add
add
out
mov
mov
mov
push
sub
pop
dec
jne
push
lea
pop
call
push
add
pop
mov
push
sub
not
xor
pop
int
lea
push
push
lea
ror
add
push
xor
add
dec
sub
shr
pop
not
lea
add
inc
pop
push
sub
inc
pop
pushl
push
push
push
push
lea
push
call
aam
push
lahf
aam
int3
sar
xchg
add
stos
jno
xchg
add
pop
stc
leave
outsl
push
les
lret
xchg
add
add
add
jl
pop
xchg
add
mov
fmull
add
add
outsl
insb
popf
add
loope
add
add
add
push
out
add
lret
rolb
scas
mov
add
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
jnp
mov
add
add
sti
icebp
in
xchg
mov
icebp
hlt
add
push
aam
mov
add
add
add
add
mov
sub
pop
call
push
push
push
and
add
inc
ror
sub
xor
pop
pop
push
push
lea
push
lea
push
call
lret
scas
mov
je
fnstcw
popf
mov
filds
add
out
add
addl
add
add
push
stos
lret
add
stos
add
frstor
repnz
movsl
mov
lret
add
add
repnz
add
add
lcall
jne
push
dec
rol
pop
call
push
push
lea
push
push
push
lea
push
push
call
in
pop
sbbl
in
stos
push
ja
pop
add
add
jbe
out
add
add
add
jae
nop
nop
movl
ljmp
pop
call
mov
push
sub
pop
lea
push
push
dec
add
push
xor
add
add
sub
add
pop
lea
rol
shr
pop
push
push
push
lea
push
push
lea
push
lea
push
call
ret
add
add
add
add
add
mov
jge
ja
add
stc
add
add
mov
insb
jno
cli
add
add
in
add
pushl
push
dec
sub
sub
add
pop
call
lea
push
push
push
push
push
push
call
iret
add
push
push
fs
add
add
jae
imul
enter
add
add
out
lahf
mov
stc
add
mov
push
sub
pop
push
push
shr
pop
push
push
push
lea
pop
pushl
push
push
shl
shr
push
or
inc
add
sub
shr
sub
shr
pop
add
pop
push
ror
pop
push
call
push
push
inc
push
or
inc
add
sub
sub
inc
not
xor
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
fldl
stos
rolb
mov
sub
mov
add
lods
imul
jmp
add
mov
add
fmul
popf
stos
add
std
sub
pop
pushl
push
push
push
call
add
xchg
jo
xchg
hlt
mov
lret
add
mov
imul
test
rol
in
add
cltd
add
int
sahf
stos
sahf
cmpsl
leave
testb
xchg
addl
cli
incb
add
bound
push
mov
jmp
add
add
fsubr
add
popa
jge
mov
mov
add
cmc
add
fcoml
add
push
push
not
add
sub
not
pop
call
push
push
rol
rol
shl
push
sub
add
rol
sub
xor
add
pop
add
pop
push
push
lea
push
push
lea
push
push
push
push
call
in
jle
push
in
add
add
pop
mov
out
xchg
add
xchg
mov
add
push
les
cmpsl
jmp
add
add
add
jne
push
add
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
cmc
loope
lcall
les
xchg
in
lcall
pushf
mov
xchg
mov
fs
add
fiaddl
flds
out
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
add
add
std
add
add
ja
add
jle
in
add
add
mov
lcall
pushl
push
push
lea
push
call
add
pusha
add
bound
push
add
xchg
pop
add
lcall
push
jecxz
jp
loope
push
add
add
add
add
pop
jae
fnstsw
aad
add
popf
shrb
jae
mov
add
pushf
hlt
imul
pop
mov
jmp
push
push
ror
push
push
pop
add
sub
sub
ror
inc
pop
not
pop
push
add
shr
add
pop
pushl
call
push
push
push
push
lea
push
lea
push
call
fiadds
jo
mov
jmp
lods
add
leave
add
add
add
add
jnp
xchg
add
add
mov
add
in
call
push
call
push
push
add
push
or
not
add
shl
sub
sub
xor
pop
ror
dec
rol
pop
push
push
call
push
roll
pop
add
add
mov
add
add
add
sarl
into
js
out
add
ja
mov
data16
flds
add
mov
lods
hlt
stos
add
push
add
add
clc
pop
pushl
call
push
rol
inc
shr
pop
push
call
push
push
push
lea
push
push
lea
push
push
push
call
fldl
sti
pop
add
mov
mov
lret
mov
scas
jno
mov
mov
fstl
cmpsl
jmp
add
loopne
mov
mov
add
add
loopne
mov
in
leave
test
add
lock
sub
pop
leave
add
push
sub
pop
pop
push
push
push
push
lea
push
push
call
add
xchg
rolb
imull
add
cmc
add
stos
lret
nop
je
add
insb
add
mov
test
xchg
lods
pop
out
add
cmpsl
add
mov
add
pusha
add
add
subl
stos
test
jo
mov
fiaddl
sub
pop
pop
pop
push
rol
pop
xor
push
not
add
xor
shl
pop
inc
ret
push
xor
rol
pop
leave
push
rol
sub
pop
ret
push
lea
inc
inc
rol
pop
push
push
push
push
push
push
push
push
push
call
aad
mov
stos
push
add
icebp
mov
lea
add
add
sahf
pop
data16
add
add
add
add
jbe
jae
add
jbe
pushf
add
pop
test
jae
add
add
mov
in
loopne
mov
push
push
lea
push
call
add
push
sti
int3
fiadds
out
push
add
add
add
scas
std
mov
add
rol
add
xchg
jbe
mov
jne
add
add
add
add
fisttps
stos
pusha
add
add
jo
add
add
int3
add
push
cmpsb
add
test
lock
sub
pop
cmpl
jne
mov
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
xchg
iret
add
xor
insb
push
add
mov
loope
xchg
imul
add
pop
add
loopne
add
add
cmpsl
mov
sub
pop
jmp
mov
push
dec
pop
and
xor
push
ror
pop
xor
push
shl
sub
pop
add
push
push
push
push
call
test
add
ja
lcall
imulb
xchg
add
pop
pop
add
mov
imul
enter
add
js
fidivrl
imul
lds
js
add
loope
in
lock
lcall
dec
call
mov
xor
pop
dec
push
lea
push
call
add
pop
jnp
movsl
add
add
mov
out
add
data16
rolb
add
in
push
add
push
in
add
jmp
push
add
lea
pop
jmp
push
push
push
call
sar
mov
mov
scas
cmpb
jle
push
add
add
jp
add
mov
js
cmc
mov
add
fistps
cli
lods
loopne
in
hlt
lcall
add
add
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
call
loope
add
jmp
add
mulb
add
out
mov
out
add
mov
iret
add
pop
push
lods
push
stos
add
ljmp
nop
add
in
add
add
add
push
lock
push
faddl
xchg
repnz
mov
mov
push
sub
pop
pop
push
push
call
in
aam
scas
pop
mov
stc
mov
add
pop
add
ljmp
add
add
add
add
aad
out
jb
lock
mov
into
lcall
cwtl
add
add
jmp
mov
iret
dec
divb
outsl
add
lcall
jmp
push
push
call
cli
add
xchg
imul
addb
add
gs
add
add
add
add
ret
jmp
push
rolb
mov
mov
rolb
push
add
subb
je
pop
fiadds
mov
pop
jb
rolb
call
add
fidivl
std
add
mov
lcall
cmp
xchg
call
add
jge
xchg
mov
push
push
push
push
push
push
push
call
imul
add
out
mov
add
imul
add
mov
add
pop
add
cmp
loopne
push
add
movsb
cmc
loope
outsl
mov
add
add
add
stos
add
jp
mov
lret
fdivs
mov
xchg
push
add
mov
in
fdivr
lcall
enter
not
pop
lea
push
push
push
call
lods
imul
add
iret
int
std
add
mov
add
cli
add
add
jle
ret
cld
add
mov
mov
mov
push
add
push
loop
add
add
sub
pop
sub
push
xor
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
fadds
add
imulb
add
mov
addl
pop
jae
add
ljmp
mov
mov
mov
movl
lcall
jmp
push
push
push
call
out
add
add
loope
shlb
push
orb
xchg
add
push
iret
add
mov
add
jb
lret
pop
add
xchg
jge
add
arpl
lcall
jmp
xlat
xor
push
push
push
push
push
lea
push
call
add
add
add
xchg
jae
call
pop
lods
add
add
imul
pop
push
add
add
lret
push
addr16
add
mov
add
mov
test
out
mov
add
add
aad
mov
popf
jp
flds
add
add
in
cwtl
add
sub
pop
pushl
push
lea
pop
pop
push
push
push
lea
push
call
add
mov
out
pop
xchg
sti
clc
xchg
mov
out
lds
mov
mov
add
jno
les
mov
cltd
mov
stos
les
add
arpl
gs
repnz
fstps
push
popa
add
add
add
cwtl
add
mov
add
push
jbe
test
lcall
jmp
incl
add
icebp
dec
pop
sub
push
xor
inc
sub
pop
cmp
jne
push
add
pop
leave
push
inc
xor
add
pop
ret
push
dec
add
sub
pop
push
push
dec
sub
add
pop
mov
add
push
rol
pop
push
push
lea
push
lea
push
push
call
add
push
cmpsb
push
pop
negb
push
add
scas
add
add
jbe
fimull
movsb
mov
add
xchg
add
jo
roll
xchg
sti
jl
add
add
roll
ljmp
lock
lcall
push
push
push
push
push
push
push
push
push
call
je
add
add
add
add
add
push
mov
test
iret
add
cmpsb
in
sti
add
mov
pop
into
add
add
movsb
call
add
outsl
out
add
je
in
pop
sub
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
in
stc
ret
fldl
fdiv
in
rcll
mov
out
mov
add
pop
add
add
scas
enter
sub
pop
mov
lea
push
add
xor
lea
pop
sub
mov
push
inc
shr
pop
shr
push
push
push
push
push
push
push
call
lds
push
add
cmc
add
jo
jbe
add
add
filds
pop
out
add
add
movb
add
push
xlat
popa
icebp
xlat
add
add
mov
push
push
push
lea
push
call
addr16
add
add
stc
add
fcmovb
fcmovnbe
add
add
aad
add
pop
add
enter
mov
add
hlt
add
shll
js
add
ret
mov
ja
fcoms
xlat
add
add
add
mov
add
sub
pop
add
push
sub
pop
mov
push
push
push
push
lea
push
push
call
fldl
roll
add
pop
popf
add
addl
add
in
add
add
jecxz
add
add
add
je
test
bound
cwtl
add
add
cld
leave
xchg
add
jno
loope
push
add
jp
add
add
stos
jmp
add
sub
pop
add
push
lea
pop
xor
push
pop
mov
and
push
add
inc
pop
rol
push
pop
rol
push
shl
xor
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
add
fisttps
jns
bound
add
pop
loope
test
push
jl
add
testl
mov
pop
lret
add
lcall
push
shl
inc
pop
cmpb
jne
push
lea
push
push
call
jbe
je
push
jno
movsl
lret
add
cli
add
mov
push
enter
pop
lods
add
popa
add
add
andl
jne
add
add
hlt
lcall
inc
pop
ss
push
dec
not
sub
pop
cmp
je
push
push
push
lea
push
lea
push
push
call
pop
add
stos
leave
out
pushf
enter
add
mov
jp
xlat
imul
ja
add
lcall
add
adcl
push
lds
out
sub
pop
add
push
xor
dec
pop
cmpl
jne
push
xor
ror
shl
add
pop
xor
push
push
push
call
arpl
xchg
int
xchg
ret
idivb
fisubrs
cwtl
add
pop
test
add
add
add
add
bound
add
jae
add
push
add
aam
jmp
lcall
push
add
shr
xor
xor
pop
pop
push
not
pop
pop
pop
push
dec
pop
pop
push
add
add
pop
leave
ret
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
add
fiadds
in
popa
add
add
add
add
push
fiadds
add
test
xchg
xchg
add
add
lock
ljmp
add
cmpsl
cmpsl
push
push
cmp
insb
mov
mov
xchg
mov
nop
aam
add
flds
lcall
push
adc
push
or
lea
push
push
push
call
xchg
add
ljmp
leave
mov
mov
loop
add
add
rolb
add
jnp
test
in
pop
add
add
out
add
aad
push
add
roll
lods
add
add
data16
icebp
mov
add
insb
add
pusha
mov
add
repnz
imul
lcall
add
lea
push
push
lea
push
lea
push
push
call
add
popa
add
add
add
mov
jecxz
add
add
stos
add
mov
mov
jo
stos
push
adcb
in
lcall
push
lea
push
lea
push
push
call
imul
add
jo
add
add
pop
test
add
push
test
add
mov
ja
add
add
mov
addb
add
add
add
add
cltd
add
into
scas
add
pop
stos
test
add
mov
sbbl
lock
lcall
and
push
push
push
lea
push
call
add
mov
mov
jnp
add
cmpsl
pop
jp
mov
rolb
add
pushf
xchg
rcrl
add
add
stos
mov
add
addr16
rolb
add
mov
add
add
pop
call
pop
push
push
lea
push
push
push
lea
push
push
call
test
xlat
rolb
fnstsw
movb
imul
in
mov
add
add
in
addl
jo
add
les
mov
lret
movsl
sub
pop
call
push
push
push
push
push
call
xorb
xchg
test
add
lcall
add
shrb
mov
add
mov
add
xlat
jge
add
fwait
add
lea
sarl
add
bound
jo
add
add
add
fsubr
mov
add
test
jnp
add
xor
push
push
push
push
push
lea
push
push
push
push
push
call
mov
ret
mov
add
add
addl
pop
push
popl
mov
push
fdivr
lcall
push
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
loopne
add
mov
idiv
add
test
test
repnz
add
icebp
add
stc
push
add
loope
rolb
jo
add
add
add
add
push
add
into
xchg
add
sahf
mov
pop
pop
pop
push
push
push
call
add
cwtl
mov
add
pop
clc
push
push
lcall
mov
add
push
sar
push
sahf
shll
add
mov
mov
add
add
fsts
addl
mov
scas
mov
add
mov
lcall
push
shl
pop
leave
push
shr
dec
add
pop
ret
push
push
push
push
lea
push
call
add
xchg
mov
xchg
mov
hlt
mov
mov
add
jno
jns
add
jb
add
mov
add
add
add
sub
pop
push
push
shl
add
shl
inc
pop
mov
push
sub
shr
dec
add
pop
add
push
lea
push
push
call
sahf
push
xchg
mov
add
add
pop
add
loope
mov
rcl
add
add
filds
add
pop
ret
mov
add
add
sub
pop
push
push
lea
push
push
push
call
add
fldt
add
jl
mov
add
int3
into
add
add
jb
add
add
pushf
aam
xchg
add
jnp
aad
imul
jge
lahf
sub
pop
push
push
push
push
lea
push
push
push
push
call
add
add
add
cmpsb
hlt
add
jmp
lods
add
add
add
add
add
jp
add
call
lcall
push
add
not
pop
push
push
add
ror
pop
mov
push
lea
push
lea
push
call
add
add
lds
mov
fnstenv
add
add
add
filds
add
js
fidivs
insb
mov
stos
add
add
add
cmpb
add
lcall
pop
push
lea
push
push
call
add
add
in
cwtl
in
push
fldl
mov
add
add
in
insb
data16
pop
push
xchg
mov
add
int
js
push
jecxz
push
roll
stos
loopne
add
pop
lea
sub
push
push
push
lea
push
push
push
push
push
call
add
jo
ja
mov
add
mov
add
loop
add
add
mov
add
add
test
mov
add
push
jne
jmp
mov
outsl
push
jge
jge
lahf
add
pop
rolb
add
add
add
into
add
add
mov
ret
ja
sub
pop
mov
push
not
dec
add
xor
pop
shr
push
push
push
lea
push
push
push
call
add
bound
add
pusha
jae
add
ror
mov
je
loope
scas
imul
mov
outsl
add
out
add
add
pop
add
push
rol
inc
dec
not
pop
mov
push
sub
pop
add
push
shl
shl
sub
dec
pop
pushl
push
pop
popl
push
sub
lea
pop
mov
push
push
push
push
push
call
add
std
add
je
mov
mov
add
cltd
pop
popf
fstl
pop
lock
add
push
mov
lea
scas
cmpsl
add
pusha
add
add
xchg
add
add
shlb
add
add
data16
in
in
pop
add
push
pop
xor
lea
push
sub
sub
shl
pop
mov
add
push
lea
push
push
lea
push
lea
push
push
call
aad
fnclex
add
add
in
add
add
nop
popa
movsb
mov
movl
js
add
mov
lahf
movsb
test
mov
xor
push
push
call
jns
jle
mov
mov
pusha
add
pop
xchg
add
popf
add
mov
add
lock
rolb
cwtl
add
data16
mov
lods
imul
pop
push
sub
add
sub
pop
nop
nop
push
shr
inc
pop
xor
nop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
ljmp
fiaddl
push
add
mov
add
pop
insb
addb
add
xchg
je
xchg
add
add
add
mov
push
add
fists
mov
fwait
insb
add
enter
sub
pop
nop
push
not
lea
pop
inc
push
push
lea
push
lea
push
push
push
push
push
call
add
fisubrl
jp
mov
pop
mov
xchg
mov
add
out
add
add
push
cwtl
gs
add
add
mov
mov
popf
add
lcall
push
lea
push
push
call
add
add
jb
pusha
add
add
shlb
cltd
add
xchg
mov
scas
repnz
lret
push
xchg
imul
xlat
add
push
not
ror
pop
cmpb
jne
push
xor
shr
sub
pop
add
push
push
call
add
mov
jp
add
stos
add
arpl
add
ret
addr16
ret
movsb
mov
mov
lods
push
add
stc
add
clc
fisubrs
xlat
add
data16
lds
pop
add
filds
add
jbe
add
mov
in
clc
lcall
push
push
push
lea
push
lea
push
push
call
add
mov
in
add
add
test
pop
popl
mov
xchg
add
out
add
pop
movsb
push
add
stc
sub
pop
nop
push
sub
xor
sub
inc
pop
cmp
je
nop
push
push
lea
push
call
andl
lea
repnz
add
mov
add
mov
add
push
add
lods
mov
movsb
add
bnd
mov
enter
xchg
fldcw
pop
in
lret
xlat
jp
scas
arpl
cmpsl
add
add
jno
xchg
add
lcall
push
push
push
push
push
push
lea
push
push
push
push
call
mov
in
bound
add
add
push
push
fwait
push
add
add
fdivrs
add
imul
test
add
test
decb
add
add
xchg
movsb
add
add
cmc
not
sub
pop
inc
nop
push
inc
inc
sub
pop
nop
push
lea
push
push
call
add
jnp
add
add
bound
add
loop
jbe
insb
add
scas
xorl
cld
jmp
lea
mov
add
add
add
cli
xchg
push
add
add
mov
add
xchg
cmpsl
sub
pop
cmp
jb
push
rol
ror
pop
xor
push
push
push
push
lea
push
push
push
push
call
xorl
mov
lret
add
lahf
scas
imul
add
add
xchg
mov
movsl
add
push
popf
into
add
add
loop
popa
add
add
jo
jb
push
pop
add
add
js
add
push
mov
pop
lods
xlat
add
add
push
add
add
sub
pop
jmp
push
ror
pop
mov
push
push
push
call
sti
loopne
pop
hlt
imulb
mov
mov
in
mov
add
add
lret
add
add
fildl
add
push
out
hlt
add
add
add
fadds
add
add
mov
add
rcrl
add
lcall
rorl
mov
jb
push
push
push
push
lea
push
push
push
call
scas
add
sahf
mov
lcall
jnp
add
mov
mov
add
add
push
add
loope
pop
stos
mov
add
into
add
sub
pop
mov
push
push
push
push
push
push
push
call
lcall
xlat
mov
arpl
testb
fadds
jae
jp
xchg
add
fidivrs
add
outsl
fistl
lahf
fidivrl
out
xchg
imul
lcall
rcll
call
imul
test
mov
add
pop
mov
pop
add
bnd
add
mov
add
add
add
add
mov
mov
add
fiaddl
add
pop
add
add
xchg
movsb
addb
in
add
mov
pop
add
in
add
in
hlt
pop
mov
push
lea
push
lea
push
push
push
call
add
jne
lods
xchg
in
add
repnz
std
movb
add
roll
imul
sub
pop
xor
push
sub
xor
add
pop
xor
push
lea
push
push
push
push
push
push
call
jmp
std
popl
shll
scas
xchg
out
jns
fs
movsb
add
add
add
add
js
loope
add
push
add
arpl
test
shll
bound
xchg
mov
mov
xchg
add
xchg
jnp
pushf
jo
mov
add
add
mov
stc
jb
sub
pop
shl
push
push
push
push
push
call
add
lock
aam
scas
push
add
add
add
mov
add
jle
add
add
add
cwtl
add
lret
add
mov
scas
mov
mov
jb
mov
jb
in
push
jne
push
add
xchg
cwtl
sub
pop
xor
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
add
pop
jns
popf
jns
rcrb
add
stc
add
out
int
push
add
add
add
sub
pop
shl
push
inc
add
pop
xor
push
lea
pop
shl
push
rol
not
shl
sub
pop
xor
push
lea
pop
mov
add
push
dec
pop
pop
pop
push
push
call
mov
lret
pop
adcb
stos
pop
out
add
data16
bound
xchg
les
hlt
sub
pop
pop
push
pop
pop
leave
push
push
push
push
lea
push
push
push
call
push
cmpb
add
add
add
add
mov
xchg
scas
data16
add
jo
add
mov
jns
out
mov
ja
add
subl
stos
xchg
xlat
add
add
ficomps
icebp
add
popf
sub
pop
ret
push
push
push
push
push
lea
push
push
push
lea
push
call
add
jnp
mov
xchg
add
shll
test
cmp
add
cmc
add
add
into
repnz
les
cli
add
sub
pop
mov
push
push
shl
pop
push
push
push
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
in
add
add
add
pop
stos
add
lea
pop
mov
add
ja
cmpb
lock
push
add
sar
addb
jge
push
add
mov
fcomip
jae
push
mov
fdivr
lcall
dec
or
adc
iret
ret
imull
fs
fistps
jge
push
sub
pop
test
je
mov
push
add
not
shl
rol
pop
test
je
mov
push
inc
dec
pop
mov
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
std
fmul
addr16
add
cmpsb
add
les
mov
popf
loop
add
into
add
jmp
add
mov
push
add
jecxz
add
mov
mov
add
std
enter
add
cmc
add
xchg
add
mov
scas
insb
ret
xchg
rolb
sub
pop
inc
cmp
je
push
lea
push
push
call
add
hlt
xlat
push
add
mov
int
add
insb
add
mov
add
bound
add
test
in
hlt
pop
test
je
push
push
push
call
add
lods
mov
add
add
add
jecxz
add
mov
add
aad
add
add
mov
jne
add
push
stos
cld
rcrb
jnp
imul
hlt
lcall
push
push
add
lea
pop
inc
cmp
je
push
shr
pop
test
jne
push
lea
push
lea
push
push
lea
push
call
fsub
add
add
add
imul
xchg
sti
add
add
add
add
xor
pop
push
sub
xor
pop
pop
push
sub
inc
not
dec
pop
pop
push
shr
sub
add
dec
pop
pop
push
push
push
lea
push
call
add
in
cli
push
add
add
xchg
lret
add
add
test
in
add
add
add
add
add
in
add
cli
and
jle
fisubl
scas
sub
pop
leave
ret
push
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
add
in
std
out
add
add
push
movsb
mov
add
jle
add
lods
fsubrl
add
cmpsl
popf
add
mov
stc
int3
imul
test
add
mov
add
std
mov
add
mov
arpl
mov
std
add
jecxz
enter
out
add
pushf
sub
pop
inc
push
lea
push
push
push
push
call
add
addl
loopne
add
clc
add
arpl
add
mull
jmp
xchg
pop
ljmp
add
mov
pop
test
fldl
lock
jge
lcall
add
pop
cmp
jne
push
sub
lea
shr
pop
lea
push
lea
pop
mov
push
lea
push
push
push
call
lcall
add
mov
push
push
add
push
sahf
add
mov
jns
push
xchg
aad
jns
repnz
mov
add
add
cwtl
add
add
scas
sub
pop
test
je
push
lea
rol
sub
pop
mov
push
xor
shr
pop
add
push
push
call
add
add
je
add
and
leave
stos
add
add
add
fnsave
scas
add
flds
fnstenv
jge
xchg
add
add
add
add
add
testl
sti
call
lea
push
push
lea
push
push
lea
push
call
add
mov
xchg
mov
add
movsb
add
clc
mov
add
std
add
movsb
aam
insb
add
add
out
scas
pop
add
add
addb
add
lcall
inc
add
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
js
in
add
add
cli
add
add
stc
add
add
cmpsb
pop
push
js
mov
popf
mov
add
clc
shll
pop
test
add
add
cmc
mov
add
inc
jmp
add
add
je
add
mov
jle
add
enter
lcall
callw
ljmp
add
mov
adc
xor
mov
or
push
push
push
push
push
call
pop
lcall
imul
add
popf
add
push
add
add
add
jge
jae
add
lods
loop
add
add
int
xlat
add
enter
add
bnd
mov
pop
pop
add
mov
add
arpl
add
sub
pop
cmp
je
push
dec
pop
jmp
push
add
pop
xor
push
push
call
mov
add
mov
push
xchg
rcll
add
int3
xchg
jp
in
test
popl
jl
add
add
mov
push
fildl
out
add
mov
aad
mov
jno
jp
je
add
add
aad
add
add
add
lcall
push
lea
pop
pop
push
shl
xor
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
test
jnp
add
add
add
push
jo
add
jns
fcmovnu
add
out
pusha
add
cmpsb
add
xchg
jne
idivl
mov
pop
add
cwtl
mov
jbe
gs
add
aad
pop
jl
add
ljmp
lcall
push
push
push
push
push
call
js
call
add
add
incb
cwtl
test
add
add
fcmovnbe
add
imul
fnstenv
add
mov
xchg
popa
stc
rcr
fs
pop
fldl
add
lds
xchg
xchg
mov
ret
add
fadds
fimull
jae
mov
add
push
push
push
push
push
push
push
push
push
call
cmc
push
add
movsb
add
in
loopne
jecxz
loopne
add
call
js
add
lret
add
idivb
int3
add
mov
add
mov
jmp
add
pop
add
fwait
fwait
scas
add
add
mov
lea
cmpsl
add
mov
in
fdivr
lcall
or
push
rol
pop
lea
pop
push
rol
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
fnsave
add
add
stos
popa
add
imul
pusha
aad
add
in
add
mov
add
add
sti
cmpsl
out
gs
pusha
fldenv
cmpl
xor
std
push
andl
nop
aad
add
lcall
push
shr
rol
add
not
pop
pop
push
xor
pop
leave
push
sub
lea
pop
ret
push
push
push
push
push
push
lea
push
push
push
lea
push
call
ror
pop
xchg
addb
push
addl
hlt
incb
jge
add
add
add
add
add
lds
add
push
add
add
mov
add
rorb
add
mov
add
lcall
pop
push
lea
not
add
pop
pop
pop
push
lea
xor
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
pop
push
cmc
cltd
add
popf
add
stos
aam
lods
add
add
add
outsl
add
add
push
jp
clc
mov
mov
loop
loope
orb
stc
leave
rolb
mov
lcall
ret
cmp
mov
inc
lret
cmp
into
mov
ror
mov
mov
mov
cmc
lret
cld
lret
xchg
lret
or
popa
dec
enter
add
and
movsb
mov
dec
inc
lret
push
lea
pusha
pop
sbb
or
rcrb
cld
mov
call
push
sbb
xor
int3
fwait
push
int3
call
inc
xor
dec
xor
inc
push
xchg
cld
ja
mov
sub
dec
pop
mov
jg
xor
and
sub
add
or
xchg
sbb
mov
push
iret
jp
mov
cmp
mov
or
imul
mov
divb
ret
je
mov
sbb
jb
lret
mov
fwait
daa
dec
adc
and
push
gs
scas
push
out
mov
aaa
hlt
adc
fdivrl
mov
push
scas
lahf
jbe
adc
mov
nop
aaa
or
push
adc
pop
arpl
cmp
jge
push
mov
scas
inc
mov
adc
add
scas
nop
dec
mov
and
jge
loope
inc
push
mov
insb
dec
xchg
inc
aad
test
test
dec
hlt
rorb
dec
fwait
xorb
mov
jnp
push
pusha
xchg
add
or
int3
mov
add
mov
rol
ljmp
inc
mov
push
push
xor
dec
andl
push
lods
addl
sbb
shll
xchg
mov
lock
mov
cmp
sub
dec
push
or
sti
je
clc
stos
movsb
mov
fldenv
scas
cmp
lret
mov
adc
pushf
ljmp
popf
xchg
and
pop
loop
out
mov
mov
mov
pop
lcall
jl
add
push
sbbl
push
in
pop
sub
lret
jecxz
repz
inc
bound
in
push
jmp
addr16
inc
and
jbe
cmp
pop
xchg
jo
inc
mov
jo
lret
mov
push
jbe
add
xor
sti
pop
icebp
cmp
cwtl
js
pop
imul
repnz
push
dec
dec
and
mov
jmp
mov
mov
leave
rclb
push
and
clc
aad
adc
sti
daa
aam
imul
xchg
push
dec
lods
adc
dec
pushf
mov
in
xchg
cld
push
pusha
add
hlt
cmp
cmp
dec
add
xor
xor
ds
mov
cmp
push
enter
ret
add
mov
outsb
mov
das
dec
sbb
or
insl
int3
push
or
add
pop
or
stos
ret
pop
xchg
in
mov
adc
push
cld
add
ds
lret
sbb
enter
jbe
adc
dec
call
cmp
mov
cmp
xor
incb
loop
push
ret
mov
inc
sub
xorb
adc
jle
mov
enter
roll
push
mov
adc
jl
arpl
iret
loopne
pop
dec
and
dec
adc
call
int3
pushf
arpl
sub
jnp
xor
mov
stos
add
lret
loope
push
mov
sbb
mov
arpl
out
pop
mov
mov
orl
ljmp
ss
cs
sub
mov
cmp
ret
dec
repz
ljmp
movsb
cs
mov
icebp
push
out
pop
or
stos
movsb
test
xchg
int3
fdivs
into
xor
dec
imul
cmp
rolb
dec
mov
lds
push
popl
insl
addr16
shrl
sbb
mov
stc
jge
fs
sbb
sbb
mov
inc
rorb
jmp
jmp
jo
or
mov
jge
and
cwtl
insl
popf
mov
jnp
cmp
sti
cmp
push
cmp
scas
xchg
mov
lds
mov
mov
call
push
sbb
cmp
roll
jp
cmp
push
pushf
lock
sub
gs
push
pop
shlb
mov
pop
mov
push
inc
in
shll
lret
out
dec
and
jmp
hlt
cmpsb
jbe
xor
ret
xor
sbb
mov
or
mov
xchg
repz
jns
sbb
adc
das
cli
loopne
and
repz
out
sti
inc
xor
or
leave
cmpsb
inc
pop
nop
aad
sti
faddl
add
lcall
fwait
scas
popa
add
xor
push
xchg
clc
push
int3
jnp
in
fnstcw
fmulp
xchg
sub
insl
pop
das
fcomp
and
adc
adc
pop
dec
outsb
pop
mov
test
or
xchg
jl
push
mov
stos
fistpll
idiv
xor
cmpl
test
xchg
test
pop
pusha
sbb
sub
push
aam
add
push
mov
std
xlat
or
mov
push
mov
aas
fdivrl
dec
lret
lds
repz
and
cltd
jae
shl
mov
mov
movsl
pop
mov
fsubrl
mov
loope
xchg
add
js
add
adc
cmp
jbe
stos
mov
ret
fstl
sti
and
jne
lahf
movsb
sub
mov
adc
rcrl
mov
pop
add
push
or
xchg
mov
jg
movsl
fstp
jno
push
add
lea
or
data16
hlt
inc
les
faddl
push
pop
pop
lahf
xor
jne
popa
iret
nop
imul
mov
sub
inc
mov
sbb
xor
shufps
jl
mov
mov
test
sub
jl
fmuls
sbbl
je
ja
int3
xchg
and
pop
out
stc
inc
pop
add
fcmove
sub
popa
lcall
test
and
sbb
pop
cmp
outsb
add
push
lret
call
cmp
dec
or
mov
mov
cltd
cli
out
sub
inc
push
adc
jb
pushl
inc
push
imul
inc
jp
imul
and
loope
cmp
push
sbb
adc
add
ja
and
inc
dec
push
mov
add
sub
cmp
fdivp
cmp
jo
int
hlt
xchg
sbb
and
xchg
inc
inc
adc
mov
lock
cmp
dec
shll
ret
loop
test
xlat
cmp
or
sub
mov
fstpl
rcrb
ljmp
sarb
loop
mov
roll
or
insb
jp
jecxz
mov
shrb
cmpsb
aaa
in
sub
in
push
andl
xchg
lods
subb
and
popf
sti
xor
and
jne
fbstp
push
imul
or
and
sub
addl
mov
sbb
mov
cs
fistpll
pushf
adc
loope
loope
lret
in
sub
in
gs
push
push
or
cmp
dec
dec
or
mov
xchg
jno
xlat
push
imul
fdivp
scas
xchg
xor
cld
in
test
or
imul
arpl
fbld
mov
lods
jne
hlt
rcr
fadds
aaa
aam
xchg
loop
or
xchg
cmp
inc
mov
inc
mov
inc
cmp
jl
xchg
xor
call
mov
inc
lods
je
xchg
scas
in
test
and
int
mov
loope
xchg
and
mull
xchg
push
and
add
test
and
mov
outsb
fwait
mov
scas
xchg
lea
jbe
ret
xlat
arpl
mov
je
fbstp
and
jbe
add
rclb
lret
ds
imul
test
sbb
cmp
addl
cmp
jp
and
push
lods
ret
gs
dec
mov
loop
insb
pusha
push
mov
mov
test
inc
mov
into
dec
mov
popf
pushl
and
cmpsb
nop
push
or
pusha
sbb
add
jno
rorb
test
jns
xchg
mov
jnp
into
mov
cmc
push
dec
push
sub
icebp
fcmovu
addb
fsubl
dec
pusha
sbb
and
outsb
rcrl
jo
sub
insb
xlat
mov
nop
js
ss
jmp
fwait
mov
add
or
rcll
fs
xchg
or
inc
mov
lcall
pop
rorb
jge
mov
ja
mov
int
or
loop
je
stos
imul
sub
add
popf
mov
jno
aam
or
mov
xor
pop
lea
arpl
cmpb
pop
inc
lahf
ss
cmp
mov
andb
nop
rcrl
add
outsl
inc
and
add
cltd
dec
jae
addr16
test
pop
ja
sbb
xor
movsb
pop
mov
sti
mov
xchg
stos
push
mov
mov
pop
push
imul
lock
test
andb
cwtl
stos
push
xor
sub
cmpsb
popa
sub
mov
sbb
inc
add
shlb
into
sbb
mov
stos
lahf
test
out
dec
push
lcall
xorl
push
test
fisttpl
and
mov
cmp
cmp
repnz
loop,pn
out
dec
cli
shll
sbbl
adc
and
loopne
dec
imul
loope
in
ljmp
or
or
jnp
mov
sbb
mov
mov
mov
aas
pop
loop
aaa
clc
push
rcr
mov
mov
mov
ret
inc
insb
dec
inc
dec
cmpsl
push
push
loopne
enter
xor
jg
jg
push
aad
loopne
in
and
das
push
jo
push
push
aaa
push
sub
in
insl
lahf
sbb
jp
xchg
jmp
dec
ret
inc
pop
jmp
mov
fidivrs
mov
sbb
and
insl
adc
std
pop
mov
mov
jl
lcall
aam
out
stos
cwtl
cmpsb
mov
lcall
fwait
out
dec
call
es
xlat
dec
sub
or
mov
cmp
sbb
outsb
orb
das
inc
gs
mov
jl
sub
xor
pop
pusha
or
insb
scas
cmp
push
and
lcall
or
mov
mov
adc
les
mov
inc
test
push
jmp
mov
iret
xchg
mov
inc
jecxz
mov
hlt
inc
pushf
inc
or
lods
fistl
and
mov
push
xlat
and
arpl
push
pop
cmp
lret
pop
loopne
ss
call
cld
mov
imul
xor
movsb
loopne
xor
push
clc
push
mov
mov
repnz
ljmp
push
pop
push
ret
popa
lods
js
sbb
in
dec
mov
out
sbb
jae
push
push
jae
jg
cli
dec
inc
repnz
push
and
sar
into
clc
out
les
push
pop
ficoml
in
sub
je
rcl
dec
or
mov
shll
cmpsl
fucomip
mov
inc
cld
cld
fsubrs
invlpg
iret
loop
pop
dec
negl
loop
jnp
mov
inc
out
push
incl
sub
jae
or
std
lret
out
sarb
jns
out
xchg
push
test
lock
int
cmp
pop
or
lcall
xor
cmp
and
jne
ficomps
sbb
xchg
inc
js
or
and
dec
insl
dec
add
jbe
test
in
outsl
or
push
shr
sbbb
adc
cmc
jle
mov
imul
push
add
sbb
cmp
xor
lcall
pop
popf
sbb
mov
in
lods
xor
ja
lret
aas
pop
cmp
pop
ss
adc
test
mov
jl
mov
lret
ja
paddd
inc
jb
sub
lods
js
sbb
push
movsb
ficompl
pop
test
sbb
shrl
mov
leave
movsl
popa
lea
sub
mov
pop
sub
push
pop
pop
add
and
test
das
arpl
mov
push
push
clc
hlt
mov
pusha
jge
pop
inc
roll
fildll
out
sub
xor
scas
ds
jns
test
mov
fidivl
mov
xchg
sti
mov
or
pop
push
sbbb
popf
adc
push
aam
inc
sbb
test
xchg
sbb
nop
or
ret
jg
sub
add
cmp
cmpsl
jp
ljmp
movsb
jnp
out
outsb
fldl
js
mov
ret
cmp
push
imul
sbb
arpl
lock
mov
inc
push
add
aam
add
xchg
ljmp
shrl
out
ds
inc
ret
je
cmc
inc
push
push
add
loope
call
jnp
scas
or
lret
lret
push
jae
lret
xchg
daa
insl
adc
test
or
daa
cmpsl
jecxz
daa
arpl
mov
pop
les
jmp
in
psubd
push
insb
cli
in
inc
lock
repz
and
xor
sub
cmp
lret
mov
fcomi
in
in
popa
inc
sbb
adc
add
repz
in
mov
xchg
sub
lods
inc
ret
cmc
jne
sbb
fsubl
cmpb
idivb
cmp
pushf
cmc
out
outsb
pop
cld
push
or
sbb
test
sbb
les
aaa
or
subl
scas
lock
pop
or
lret
leave
pop
sub
mov
cli
ret
das
sarb
loope
fmuls
and
and
hlt
sti
aam
mov
xlat
repz
fabs
mov
stc
mov
scas
jecxz
mov
sub
adc
xorl
cmpsb
mov
pop
sti
mov
mov
adc
push
int
int3
xchg
push
jnp
mov
fwait
stc
movsb
cmpsb
inc
pop
sbb
xchg
cmp
mov
jbe
sub
scas
jae
imul
xor
xorl
adc
adc
rcrb
push
pop
lret
xchg
or
hlt
int
lret
jo
xchg
decb
shll
sbb
cmp
int
repz
mov
xchg
scas
mov
dec
mov
dec
add
push
dec
inc
dec
push
adcb
mov
mov
pusha
test
pop
push
mov
lahf
xor
adc
adc
jae
push
pop
ficoms
dec
jmp
into
testl
sbb
sub
in
aaa
ret
aam
shr
aas
repz
pop
cmp
cmpsb
adc
adc
adc
mov
mov
rorl
test
jne
mov
leave
test
fsubr
sbb
ljmp
aas
in
xchg
dec
dec
mov
mov
dec
in
xchg
inc
and
mov
inc
cld
sub
test
rclb
mov
mov
push
add
dec
and
mov
adc
xorb
pushw
mov
sub
icebp
push
push
mov
mov
mov
xor
xchg
sahf
sub
dec
pop
add
sbb
imul
xor
or
lds
and
lret
in
movsb
test
pop
and
call
pushl
jle
mov
xchg
lret
jo
jmp
cli
aad
out
mov
mov
shll
mov
mov
in
mov
push
add
out
movsb
bound
popa
dec
add
pop
cld
xchg
jb
cs
push
inc
inc
add
inc
dec
into
mov
or
loopne
xchg
push
sar
dec
inc
ret
dec
jle
loopne
pop
push
cwtl
dec
mov
push
jb
je
mov
insl
pop
and
push
ljmp
imul
xchg
sbbb
xchg
add
xchg
push
push
xchg
loop
stc
in
int
imul
fstpt
cmpsl
fcmovne
lds
into
sbb
gs
cmpxchg
insb
lret
div
mov
cmpsb
repnz
push
push
insl
pop
mov
jle
mov
or
sbbl
jo
xchg
cmpsb
fcom
cmp
lahf
or
cs
idivl
inc
sbb
mov
pop
dec
in
call
pop
sub
and
mov
xor
dec
cmp
push
sahf
movsb
jl
cwtl
cmp
popf
mov
or
mov
mov
in
mov
mov
in
pop
ret
ljmp
mov
jmp
cwtl
fistpll
add
xor
ret
jne
pop
xor
and
push
mov
inc
shll
mov
test
sysret
cmc
pop
das
popf
and
in
lret
outsb
lods
aad
daa
push
jne
ljmp
ret
cmpsb
js
stos
fsub
lret
sbb
test
xchg
stos
push
dec
xchg
jge
shll
cmp
subl
push
mov
shlb
pop
inc
sbb
repnz
mov
js
stos
call
lret
popf
adc
fimuls
cmp
and
push
scas
ffree
push
ret
xchg
cwtl
cmp
test
mov
stc
cmp
mov
stos
icebp
push
sub
dec
scas
push
and
testl
aaa
push
pusha
inc
sarb
xor
in
sbb
adc
xor
bound
push
push
xor
adc
aad
adc
jns
adc
pop
out
jg
pop
out
ret
mov
fisubrs
mov
xor
in
lea
or
scas
push
shll
mov
scas
imul
mov
pusha
lahf
in
pushf
jnp
lock
adc
mov
in
xorb
cmpsl
or
push
dec
mov
cmp
cmpsl
push
add
adc
push
xor
inc
jmp
mov
jge
imul
arpl
cmp
rolb
jmp
sub
insb
or
test
ret
pop
sub
dec
fwait
bound
testl
adc
scas
aad
mov
rcpps
lea
cs
push
popa
pop
shll
adc
push
in
js
or
dec
hlt
or
adc
jb
and
dec
pop
dec
add
adc
pop
pop
pop
xchg
rorl
clc
or
aaa
cmp
push
jp
dec
and
sub
cwtl
scas
inc
pop
push
or
xchg
insl
mov
insb
std
popa
les
dec
in
lods
imul
push
enter
hlt
push
cmp
call
fxch
mov
adc
xor
in
sub
xchg
pop
test
shlb
movsl
icebp
notl
ret
push
rcrb
xchg
popa
jl
add
in
sbb
push
sbb
ss
mov
ljmp
rcll
push
jbe
and
sub
add
xor
xor
xor
out
xchg
sbb
stos
cmp
cmp
lods
popf
or
je
jno
dec
sub
fsts
cmpsl
and
popa
xchg
aam
outsb
aas
sbb
ja
dec
enter
stos
arpl
sub
cs
cmp
fsts
or
dec
cmp
cltd
dec
rcl
and
daa
jge
pop
pslld
cmpsb
jb
sbb
std
sbb
mov
cmpsl
ror
adc
mov
lock
pushf
cs
jnp
adc
mov
mov
aas
and
lcall
aas
mov
pop
insb
mov
test
push
out
aas
shr
cmp
fsubr
pushw
in
pop
xor
xchg
and
and
aad
mov
cli
mov
cmp
cld
xor
mov
test
shll
inc
cmp
mov
and
adc
lds
mov
xchg
js
jl
dec
xchg
lods
cmp
lahf
out
xchg
xchg
dec
cwtl
repnz
jb
arpl
or
cmpsl
inc
leave
and
sbb
jbe
cmp
and
dec
dec
insl
push
outsl
out
dec
push
sbb
push
ret
outsb
cmp
out
push
mov
jge
movsb
enter
cltd
popf
lods
loope
fs
xchg
add
rclb
ljmp
push
push
add
dec
popf
add
inc
xchg
popf
jmp
shll
hlt
jmp
outsb
xchg
pusha
popl
push
sbb
inc
jno
push
call
jecxz
leave
scas
mov
push
mov
jbe
mov
mov
ret
jg
adc
mov
push
mov
in
adc
sub
repnz
dec
mov
imul
jno
in
mov
mov
into
scas
and
push
sti
dec
inc
fwait
aam
push
pop
sbb
pop
or
jg
push
inc
test
iret
add
stc
lret
adc
push
decb
and
js
repnz
xchg
mov
jge
push
mov
jae
in
or
pop
xorb
mov
mov
or
cld
es
mov
out
mov
jp
xlat
mov
xor
lret
cmp
stos
or
lds
or
jne
push
fisubrs
mov
fldt
cmp
cli
pop
push
push
ret
repnz
ja
xor
xor
push
lock
push
mov
xchg
sar
inc
sbb
cltd
mov
jl
incl
inc
mov
ret
push
xchg
xchg
aam
push
bnd
xorl
es
mov
mov
in
xor
outsb
dec
stc
fcmovbe
mov
mov
jl
mov
mov
jmp
je
inc
lea
mov
sub
in
cmp
pusha
jo
cmpsb
mov
sub
mov
sbb
add
inc
cs
pop
cmpsl
jg
shll
aas
mov
push
clc
in
mov
loop
and
xchg
lcall
jns
xchg
sbb
xchg
in
add
scas
stc
leave
aas
out
lods
movsb
add
lea
push
jae
ja
pop
adc
pop
clc
or
xor
sbb
mov
sub
into
xor
scas
pop
pop
pop
mov
jns
out
outsb
adc
xchg
daa
pop
sub
xor
cwtl
and
ja
add
push
or
andb
xchg
adc
or
movsl
pop
faddl
std
dec
andb
nop
leave
sti
lds
dec
xor
push
xor
mov
or
mov
dec
push
cmpsb
clc
call
push
mov
mov
jns
sahf
shlb
pusha
sbbl
lock
adc
subb
ds
xor
rcrl
les
jne
fsub
and
add
mov
imul
fildll
sub
orl
dec
in
mov
mov
xchg
ds
adc
aas
cld
aas
lds
jno
lea
stc
pop
cmp
cmp
inc
rcrl
adc
xchg
mov
inc
in
cmp
out
mov
es
popa
mov
dec
hlt
js
add
xchg
adc
dec
aam
cmpsl
cmp
and
mov
cmp
inc
enter
int3
cltd
push
insb
jp
fidivl
sbb
pop
rcr
dec
fsubrl
cmovge
pop
sbb
or
inc
adcl
add
pop
xor
rcrb
imul
das
mov
in
adc
mov
clc
cmp
add
pushl
test
lahf
jne
jbe
xchg
das
fs
adc
pop
hlt
dec
pop
lcall
jle
mov
cmpsl
adcb
int3
das
mov
cmp
in
stos
inc
clc
mov
nop
add
inc
dec
or
or
aam
ret
jecxz
push
test
jnp
pop
cmpsb
fidivrl
mov
add
adc
pop
imul
and
push
xchg
adc
cmpl
push
je
and
mov
fs
cltd
hlt
pop
pop
rcrl
int
jle
cmpsb
sub
imulb
cmovae
addl
loope
mov
xchg
mov
je
adcb
scas
pop
dec
ss
out
decl
cmpsb
addr16
push
xchg
jno
push
std
nop
fidivrs
fidivrl
dec
lcall
into
inc
aas
dec
ss
std
fcoms
mov
in
adc
pop
inc
dec
mov
adc
ret
mov
sbb
incl
pop
lods
mov
shrb
in
mov
mov
aaa
mov
pop
adc
and
fcmovnb
pop
add
jp
mov
mov
jne
ja
mov
inc
daa
fadds
push
mov
ss
popa
hlt
inc
lods
or
xchg
pop
or
mov
outsb
shrb
ss
out
sar
out
pop
or
xor
pushf
notl
sbb
mov
shrl
cld
sub
bound
xchg
out
pop
push
mov
fiadds
sbbl
ljmp
movsb
mov
dec
inc
rorl
adc
in
add
out
dec
pop
mov
push
mov
test
adcb
jbe
mov
mov
je
inc
push
or
or
stc
in
mov
fcoms
rcl
popf
hlt
inc
fcomip
jnp
lock
dec
xor
fsubrs
test
sbb
movsb
mov
imul
push
ja
test
xchg
xchg
sbb
mov
add
inc
pop
add
pusha
add
mov
jb
sti
add
dec
fs
jns
xchg
xor
xchg
add
pop
cltd
sbb
xchg
notb
inc
mov
mov
int
imul
sti
sub
jp
xor
in
dec
add
or
pop
mov
sbb
cmp
cltd
pop
jecxz
sub
ja
sbbb
and
inc
rcrb
out
lea
mul
aam
sar
fucom
add
push
or
jl
insl
sub
mov
insl
je
loopne
stc
mov
cmc
push
cltd
loopne
dec
pushl
out
cs
movsl
aad
cmp
sub
enter
stos
jnp
gs
push
loope
mov
lock
pop
mov
jge
clc
adc
mov
pop
lea
sbb
in
sub
lahf
stos
jo
xchg
mov
loop
inc
xchg
mov
jecxz
in
push
inc
popf
push
cmp
mov
test
add
adc
adc
mov
mov
or
mov
loopne
adc
daa
loopne
or
sub
test
jae
push
rol
out
shl
mov
lea
aaa
in
subb
sbb
inc
pop
sub
and
cmp
loop
fs
dec
outsb
loope
dec
in
out
bound
dec
sahf
sub
jle
sbb
inc
add
movb
push
push
es
mov
and
ret
inc
jbe
hlt
inc
cs
or
test
addr16
xchg
jae
xor
sub
stos
xor
ss
push
push
dec
inc
push
into
cmp
fs
fildll
sub
sub
aaa
shll
adc
fucomip
aaa
outsl
and
xor
dec
popf
ds
mov
mov
xor
xor
cmc
orb
push
sub
xchg
cmpsb
cmp
arpl
pop
das
and
dec
jne
shrd
sub
push
mov
ja
add
subb
das
add
dec
dec
push
loopew
dec
mov
idivb
adc
stc
xchg
call
cmpsl
sub
and
inc
test
mov
cmp
aam
adc
and
insb
in
loop
jecxz
cmp
push
sub
dec
movsb
outsl
cmp
sub
negb
mov
leave
test
ret
sahf
and
jg
movsl
stos
bound
fstl
cmp
lea
or
stos
adc
das
or
lret
imul
ljmp
jle
pushf
jo
hlt
fldcw
sbb
loope
sti
inc
cmpsl
outsl
inc
push
or
pop
dec
pushf
and
mov
push
adc
xchg
push
test
xor
push
cmp
inc
in
int
fcmovnu
pushf
arpl
sahf
cmp
insb
shlb
les
push
mov
fwait
cmpb
and
or
rolb
test
pusha
popf
adcb
repnz
jnp
arpl
imul
cld
ret
sahf
hlt
mov
dec
xor
dec
jo
pop
nop
mov
jge
addr16
jne
pop
icebp
daa
leave
mov
cmp
add
outsl
inc
cmp
pushf
mov
cmpsb
fidivl
les
std
xlat
pushf
jg
lea
ret
or
stc
daa
fistps
and
lods
mov
pop
out
pop
inc
jge
jo
mov
jns
ljmp
mov
pop
das
sub
xor
subl
clc
adc
pop
adc
or
sbb
or
outsl
push
fs
push
dec
in
dec
mov
or
mov
add
nop
cltd
popa
incb
and
movsb
push
xor
jne
lods
push
xchg
ljmp
test
rcrb
pop
ja
insl
mov
lea
pop
enter
imul
or
or
sbbl
pop
mov
xchg
call
adc
in
icebp
sub
xchg
xor
fs
sub
imul
jmp
in
jne
push
movb
cmc
mov
cmc
adc
pop
inc
dec
out
mov
aam
jecxz
xor
jae
lret
les
cmp
jp
mov
stos
loop
sbb
push
daa
out
lea
sbb
mov
adc
int3
sahf
mov
sub
jae
mov
push
push
or
test
xchg
pop
sub
jno
sub
in
imul
out
adc
mov
pop
add
insl
xchg
mov
test
xchg
je
xor
cs
int
arpl
dec
sbb
sub
sbb
js
push
imul
loope
bound
sbb
cmpsb
adc
xor
inc
pop
adc
or
dec
test
loop
loopne
je
mov
test
pop
and
lret
push
dec
ret
movsl
jae
xchg
sbb
pop
leave
sbb
sarb
sub
imul
or
sbb
ja
lahf
and
jne
dec
lcall
gs
xchg
movl
sub
push
ja
mov
add
xchg
cwtl
sub
jle
push
or
jmp
and
xchg
dec
mov
stos
pop
push
mov
jge
pop
popa
cs
lret
pop
shl
jmp
cmc
lds
mov
fst
js
cmpsb
ss
js
mov
cmpsl
pop
sub
arpl
jge
pusha
jo
scas
adc
dec
xor
mov
scas
fs
inc
mov
and
adcb
mov
lcall
jmp
stos
xor
or
mov
push
xor
ret
scas
push
loop
inc
inc
int3
jno
cmp
mov
xor
adc
jbe
es
es
push
inc
pusha
ljmp
adc
gs
iret
adc
cmp
or
xchg
enter
aas
cld
dec
stos
cs
notl
adc
add
fnstsw
mov
or
ljmp
fs
imul
rorl
push
out
pop
cmpsl
mov
insl
lods
dec
scas
jle
out
add
gs
jg
loop
jl
shl
ret
xchg
xchg
movsl
xchg
fidivs
lods
jecxz
cmp
mov
popf
sub
and
sbb
xor
cmp
les
jno
jl
push
xor
mov
aas
in
aad
xorl
stc
dec
int
cltd
movsl
sbb
mov
adc
cli
add
adc
sub
cmp
movsb
in
mov
mov
dec
cld
fadds
or
adc
aas
xor
cmpsl
dec
filds
loope
pop
add
push
data16
repnz
dec
inc
xchg
ljmp
pop
clc
stc
rcrl
jl
cmpsl
add
orl
ljmp
movsl
mov
and
pop
popf
inc
cmp
jp
jne
xchg
in
fimull
mov
sbb
xor
cmpsb
dec
dec
loope
mov
out
outsb
testb
rcrl
xlat
jb
fldl
jbe
jmp
xchg
lea
cmp
mov
test
iret
dec
add
sub
ds
push
daa
aaa
jno
iret
loopne
ret
inc
int3
push
stc
punpcklbw
cmpxchg
mov
aam
ljmp
ret
cwtl
mov
test
call
rorb
mov
daa
dec
daa
dec
add
sbb
xchg
cmp
mov
test
mov
lcall
sarl
xor
jns
pushf
pop
xchg
xor
bound
fsubrs
shrl
dec
mov
lods
ja
sub
sbbb
add
jge
popf
cwtl
aaa
fwait
push
cmpsl
dec
push
dec
cmp
xor
movsl
cmp
mov
xor
cmp
mov
fcomip
test
adc
sbb
jnp
xchg
mov
inc
adc
js
pop
outsb
pop
pop
xorl
sbb
lds
add
fistl
mov
xor
cmpsl
pop
or
inc
cmp
jl
les
xchg
out
dec
mov
adc
loopne
bound
xor
inc
int3
cs
aam
aad
jg
cmc
ret
xor
iret
dec
clc
push
jne
jmp
insl
add
je
sub
cmp
pop
lret
iret
jb,pt
adc
shlb
or
addl
lea
shr
leave
adc
repz
callw
lock
dec
mov
inc
jmp
push
cwtl
or
insl
xchg
mov
xchg
push
sahf
xchg
sbb
push
imul
mov
mov
je
sbb
dec
mov
push
les
pop
xchg
nop
enter
push
inc
rclb
mov
lock
push
cmpsb
out
push
sahf
cwtl
movsl
adc
pop
jae
outsb
or
inc
repnz
shlb
sti
adc
mov
add
dec
cwtl
cwtl
jb
mov
lea
sbb
mov
mov
cmp
push
pop
fwait
sub
pusha
pop
into
jg,pt
popf
sub
out
and
xchg
popw
sbb
jns
cmpsl
ljmp
pop
adc
clc
and
sbbb
xchg
or
inc
jnp
lahf
inc
lock
ljmp
add
mov
cmpsl
or
dec
or
in
daa
mov
aas
ds
aas
mov
push
lahf
sub
data16
fcmovne
icebp
cmp
jecxz
arpl
push
cmp
test
cmpsb
popf
push
loopne
insl
ss
adc
pop
mov
jo
mov
jb
ret
in
mov
xchg
jno
cmpsl
ret
xor
adc
cmp
sub
mov
inc
pop
xchg
push
sbb
insb
stc
test
dec
ficoms
lahf
jne
data16
enter
stos
mov
pop
xor
cmp
xchg
or
push
loope
test
pusha
inc
push
sarb
ja
fs
mov
or
pop
pushf
ret
mov
mov
loop
dec
stc
push
clc
mov
mov
shr
sub
sbb
es
push
sti
mov
std
xchg
call
fmuls
pop
jg
popa
jae
out
adc
sub
jo
push
in
aas
lea
loopne
aas
sbb
jb
fistps
add
fisttpl
push
bound
cs
pop
mov
lahf
movsb
mov
loop
cmp
mov
and
mov
xchg
xchg
inc
add
dec
xchg
in
pop
cli
xchg
jne
and
fxch
movsl
mov
loopne
xor
inc
insl
lock
fwait
scas
pop
add
cltd
js
lahf
mov
dec
jb
adcl
push
cmp
lcall
test
js
xchg
or
insb
mov
push
inc
pop
xorb
xor
in
xchg
sub
lods
popf
dec
fdivrp
pop
andl
shl
fstpt
mov
dec
inc
sbb
pop
repnz
add
push
rclb
push
jmp
xchg
jp
outsb
sub
iret
divl
cmc
fisttpl
inc
and
stc
repz
repnz
sbb
inc
dec
push
push
mov
jp
jl
ss
push
sub
add
mov
fists
std
jns
xchg
push
or
push
mov
adc
cli
jecxz
loop
mov
mov
jo
out
call
mov
fldl
cld
cmp
cmp
jl
push
inc
arpl
pop
call
mov
adc
push
shrb
cwtl
addr16
scas
push
fistpl
out
inc
nop
push
xchg
les
lcall
pop
notb
cmpsl
jg
mov
inc
xor
fs
fs
pushf
into
xchg
sbb
fs
rcrb
sub
or
push
mov
cs
mov
xchg
ret
inc
cmpsl
jg
bound
std
sbbl
dec
test
icebp
iret
daa
test
out
lahf
jg
xchg
loopne
sbb
jl
inc
mov
and
push
dec
ds
sbb
xchg
jnp
iret
pusha
dec
shlb
mov
int3
or
mov
sbb
inc
rcll
aaa
cwtl
mov
inc
cltd
push
sbb
dec
jmp
je
inc
pop
jnp
mov
sub
pop
mov
jp
dec
clc
xorb
stos
jmp
sub
push
hlt
inc
outsb
jecxz
dec
dec
cmp
or
sub
mov
in
jbe
mov
or
push
cmp
mov
les
enter
int3
aad
adc
idivb
aas
shll
addr16
int
add
sbb
mov
inc
daa
inc
icebp
fs
push
cmp
pop
call
fs
addr16
jno
pusha
or
sbb
or
js
inc
cmp
or
nop
ds
xchg
scas
push
mov
mov
shrb
or
rolb
aaa
bound
pop
scas
adc
cmp
cmp
jmp
pop
push
cmpsb
mov
pushf
clc
pop
sbb
sbb
lds
add
adc
pop
cmpsb
push
fstp
cld
insl
aad
and
outsb
scas
mov
in
push
push
hlt
jno
mov
sbb
into
pop
inc
cwtl
push
mov
push
jne
cmp
sub
fistpl
jl
xchg
inc
sti
and
pusha
mov
addr16
xlat
push
xchg
sub
imul
mov
pop
in
and
das
aas
mov
cmpsb
inc
pop
aaa
and
mov
mov
mov
cmp
pop
pushf
inc
push
jl
pop
sbb
fadd
or
repnz
jge
cmc
xchg
add
mov
hlt
jne
and
jbe
xlat
arpl
pop
push
and
add
mov
sarl
jp
fldenv
dec
nop
push
cs
xchg
push
dec
jb
add
jbe
xchg
sbb
outsb
mov
fsubrp
sub
jno
lock
sarl
int
lods
aad
xor
test
pop
cltd
xchg
mov
test
mov
inc
and
hlt
add
insb
push
cmp
mov
pushf
and
mov
loope
or
mov
sub
or
ljmp
test
jmp
insl
stos
push
insb
out
xchg
movups
fistps
jmp
dec
inc
dec
inc
test
jo
aaa
lcall
sahf
mov
imull
sbb
nop
or
outsb
and
mov
xchg
mov
xchg
adc
cltd
in
lea
cmp
mov
in
jb
aad
fldenv
xchg
push
mov
xor
add
test
js
mov
jmp
sbb
mov
dec
jmp
push
dec
xchg
cmp
loop
mov
syscall
mov
call
les
cmc
inc
cmp
adc
cli
pop
dec
mov
mov
mov
mov
insb
jp
ret
ds
outsb
jg
and
sarb
stc
adc
fwait
pusha
sbb
cmp
cwtl
imulb
pop
sub
dec
aas
rolb
xchg
stc
jno
mov
xchg
adc
jno
sub
jmp
adc
mov
fidivrs
and
lahf
aad
lret
jmp
mov
sub
jo
sbb
call
mov
call
mov
rcr
xor
pop
cltd
ss
xchg
mov
stc
jge
sub
inc
call
xor
notl
cmp
movsb
les
cmpsl
jle
xchg
xor
daa
dec
sub
jnp
dec
pop
xorl
mov
or
imul
fwait
adc
jns
sub
mov
addr16
push
xor
dec
xchg
push
mov
clc
test
imul
inc
or
push
rorl
outsl
mov
pop
out
call
sbb
aaa
xchg
push
aad
xchg
fs
cmpsb
xchg
cmp
lock
dec
xor
jne
pop
cmpsl
movsl
aam
mov
adc
movsb
jne
pop
xchg
out
pop
push
sbbl
pop
xchg
outsl
cmp
dec
sahf
cmp
mov
pop
mov
gs
push
rcrb
fistps
jae
pop
jmp
arpl
sti
xchg
lock
pmaxsw
xchg
es
jp
jle
fidivs
das
mov
loopne
or
mov
adc
std
and
xchg
add
jecxz
or
std
test
je
lds
imul
mov
repnz
stos
jae
push
sbb
mov
mov
mov
mov
xchg
fwait
imul
jp
bound
sahf
fbstp
inc
push
and
fildl
adc
imul
dec
mov
mov
inc
push
add
aam
popf
sub
cmp
cli
add
js
scas
mov
and
adc
notb
lods
xchg
scas
dec
sbb
jnp
jne
mov
push
push
mov
movsb
lods
sbb
gs
jmp
lods
sbb
jp
add
repz
sbb
ljmp
es
mov
movsb
mov
in
jmp
xor
mov
cmp
jae
push
cmc
jg
ja
push
add
cmp
inc
xor
inc
icebp
xchg
push
pop
inc
and
fcomip
into
adc
clc
push
cltd
jb
push
jne
rcrb
pop
mov
in
inc
pushf
clc
pop
adc
inc
and
xchg
ret
aad
cmp
aam
push
jge
rolb
xchg
aaa
or
add
inc
clc
pop
xchg
mov
xchg
aaa
pop
sti
aaa
popa
mov
pop
cmp
cmp
ja
lcall
aam
addr16
cwtl
push
cs
add
lds
xorl
ret
aam
inc
cli
add
xorl
jbe
push
inc
cwtl
shlb
pop
push
push
push
sarb
jns
shlb
mov
jge
push
mov
jmp
xlat
cmp
shll
mov
sbbw
iret
inc
aas
std
xor
or
xchg
mov
mov
dec
push
aam
rcr
inc
push
push
jge
or
outsl
jne
stos
pop
pop
or
in
aad
icebp
das
scas
push
ficomps
cmc
adc
mov
and
arpl
or
movsl
xchg
dec
add
fisubrl
or
mov
cmp
rorb
pop
pop
sbb
sahf
dec
push
jae
jecxz
faddl
jbe
rorb
aas
icebp
jge
mov
ret
dec
cmp
dec
add
aas
rol
push
sub
push
mov
scas
addr16
mov
out
out
add
adc
mov
loope
sub
sarl
fmuls
sti
mov
mov
mov
shlb
icebp
shlb
mov
sub
add
arpl
insl
in
insb
cmp
icebp
daa
xor
pop
test
clc
notb
loop
fwait
ljmp
cld
pusha
flds
insl
push
mov
or
in
xor
in
cli
test
mov
scas
lods
pop
les
cmp
in
fisubl
adc
cmp
xchg
flds
daa
and
iret
sub
xor
lock
ljmp
mov
mov
cltd
fcmove
cmp
call
pop
sbb
iret
and
xchg
xor
les
mov
insl
rcrl
pop
adc
and
fcomps
paddq
adcb
mov
mov
or
fldt
sbb
lds
mov
lcall
ljmp
mov
sub
cld
adc
icebp
aaa
movsb
ljmp
xchg
insl
dec
sbb
mov
or
subb
mov
mov
cmp
add
je
ret
jge
les
stos
mov
in
push
push
add
in
and
dec
cld
jne
das
jnp
add
and
pop
pop
sbb
out
mov
aas
loope
pop
pop
int3
arpl
push
cld
or
rorb
daa
xchg
cltd
popf
incl
adc
jecxz
xor
add
pop
push
fwait
jge
cmp
cltd
repnz
push
mov
mov
mov
sbb
mov
test
pop
xor
ds
fdivl
test
mov
je
cmc
mov
rcl
loope
add
mov
xor
mov
icebp
push
movsb
xor
in
loop
cmp
pop
xchg
imul
frstor
adc
loope
lret
les
aas
mov
add
in
and
dec
and
lock
cmp
pop
lret
out
jp
or
cmpsl
push
int
test
aam
clc
adc
test
outsl
cltd
rorb
adc
fcmove
leave
inc
test
push
pop
jns
push
jno
pop
loopne
orb
xchg
push
mov
jp
std
repnz
sbbl
icebp
scas
xor
pop
lcall
into
test
adc
jne
test
mov
std
pop
std
push
push
adc
sbb
inc
and
mov
jge
orl
ds
popa
pusha
cmp
mov
ds
shr
or
fldcw
pop
test
jns
or
fs
xor
lods
mov
cmp
mov
xchg
push
mov
push
jmp
inc
rcll
dec
push
es
inc
cmp
jecxz
outsl
mov
mov
scas
lret
les
out
fwait
jne
jbe
jns
mov
dec
and
out
push
in
push
xchg
mov
or
xchg
mov
pop
inc
mov
push
divl
push
mov
out
mov
push
popf
leave
adc
iret
bswap
mov
pop
rorb
push
cltd
fwait
bound
pop
inc
cmpsl
or
mov
mov
push
rcrb
in
jp
push
sub
int
stos
mov
xchg
dec
dec
inc
insl
into
pusha
inc
ja
das
movsl
lahf
cli
and
xchg
pop
push
push
dec
inc
inc
pop
sub
mov
xchg
push
mov
push
sahf
and
cltd
xor
mov
into
mov
mov
push
sub
ds
pusha
add
push
rcrl
cmpsb
mov
ficomps
sti
cld
xchg
das
negb
scas
std
push
cs
insb
stos
faddl
xor
cmc
pop
std
jle
in
cld
xlat
cmpsb
mov
mov
ret
push
cwtl
div
mul
aam
outsb
imul
mov
xor
out
cmp
sbb
in
sub
mov
cld
out
lock
xchg
push
push
lods
loopne
test
out
jecxz
gs
lock
das
or
insb
js
ret
pop
or
test
jbe
ja
mov
int
or
out
add
imul
loopne
xchg
cltd
std
cs
je
roll
movsb
push
adc
mov
mov
insl
adc
out
div
pop
inc
out
jl
loop
lcall
jne
push
or
pop
jge
into
ucomiss
jnp
fwait
or
mov
ds
test
icebp
pop
inc
add
lahf
imul
jo
imul
loop
and
repz
push
inc
mov
xor
push
cmp
mov
adc
jle
fcom
cltd
cmpsb
pop
lahf
fsubrl
test
xor
mov
es
pop
repnz
xchg
in
push
pop
and
cltd
test
mov
icebp
dec
dec
mov
ret
sbb
push
pop
movsb
add
xchg
hlt
gs
out
jae
outsl
xchg
stc
jmp
jecxz
dec
pop
xor
inc
sub
pop
mov
jle
in
jecxz
or
incl
icebp
adc
sarb
or
fwait
pushf
inc
jp
inc
cmpsl
dec
adc
xchg
inc
insl
mov
andl
add
pop
inc
dec
dec
loope
push
sub
dec
mov
mov
jp
sti
jg
mov
js
jmp
aas
xchg
mov
and
mov
sbb
addl
xor
sbb
lock
inc
xchg
mov
dec
shll
cmp
in
xor
jnp
ret
adc
jge
daa
mov
into
fimull
mov
xor
pop
fidivs
cmc
xchg
repz
ret
push
mov
lods
test
leave
rorl
push
ja
sahf
add
test
pop
xor
pop
xor
jge
pushf
push
cmpsb
adc
add
out
push
dec
fmull
stc
mov
lods
aam
icebp
adc
loope
js
sub
mov
pop
fisttpl
in
pusha
ja
pop
fidivl
pop
shlb
dec
and
dec
mov
lods
sbb
pop
cmpsb
stos
xor
jge
inc
jp
cli
jp
lock
pushf
jecxz
mov
in
outsb
xchg
sub
inc
mov
mov
cmpsb
push
pop
push
mov
dec
add
cmpsb
pop
shr
imul
or
enter
pop
loopne
sbb
mov
sbb
test
xlat
adc
mov
cmpsb
mov
and
mov
pop
ss
sti
or
mov
loope
les
aaa
xchg
test
adc
cmpsl
push
shl
add
loopne
add
xor
push
mov
dec
ret
push
aam
arpl
mov
call
mov
cmp
insb
xor
rclb
stos
push
mov
inc
add
push
rcl
pop
mov
mov
loop
adc
mull
xlat
xchg
jns
in
or
dec
mov
jge
das
rcrb
xchg
in
mov
and
sub
and
je
imul
test
ss
int3
ret
pop
lea
movsb
and
adc
out
popa
sub
xchg
push
xor
lret
pop
movsl
popf
aad
outsl
dec
js
movsl
push
adc
in
mov
pop
or
jmp
cmpsb
shrl
mov
mov
mov
inc
mov
adc
jge
daa
add
push
xchg
xlat
imul
icebp
mov
clc
xor
out
enter
dec
sub
cmp
ja
adc
ds
push
out
scas
mov
shl
and
add
sub
aam
lahf
xor
leave
outsb
mov
xchg
pusha
and
repz
dec
dec
fistpl
out
cmpsb
mov
loope
inc
push
inc
push
jns
inc
das
stos
add
insb
call
daa
sbb
cld
jg
pop
repnz
xchg
push
mov
xor
xchg
xchg
movsb
dec
cwtl
lds
test
pop
aas
ret
mov
xor
fiadds
lcall
adc
js
lret
stos
out
jb
mov
std
lcall
or
fs
lds
mov
pop
push
pop
mov
mov
lds
xor
daa
imul
add
into
mov
and
nop
cs
loope
push
mov
mov
in
arpl
jo
add
ss
inc
dec
sti
or
pop
mov
test
cli
in
or
loop
pop
push
je
cmp
sbb
mov
inc
push
fwait
mov
mov
aad
lret
push
mov
ja
push
scas
adc
dec
repnz
mov
push
push
mov
imull
add
inc
lret
js
lods
inc
inc
sub
out
fistpll
in
pop
mov
mov
pusha
xchg
xor
or
ljmp
mov
sbb
inc
jmp
inc
mov
inc
sub
dec
es
mov
mov
loopne
stc
ret
jo
cmp
cmp
xor
fidivrl
and
xlat
ss
jge
and
aad
or
add
stc
push
mov
fs
sbb
nop
or
js
outsl
inc
lods
cmc
inc
jb
and
fidivl
int3
aam
icebp
and
iret
sahf
xor
jp
and
fs
mov
mov
and
cmp
jbe
mov
adc
and
push
lret
push
inc
mov
jns
lea
jne
mov
inc
and
insb
lea
fdivrl
in
mov
addr16
dec
orl
ss
jnp
subl
pop
stos
mov
jne
xchg
orb
std
jbe
scas
mov
mov
mov
popf
add
loopne
and
daa
push
loop
add
test
inc
repnz
xchg
dec
or
insl
and
cltd
and
xchg
adc
out
pop
dec
jmp
pop
popa
es
jmp
pop
push
mov
negb
push
add
cmp
setbe
inc
cmp
std
ljmp
out
and
sub
repnz
insl
test
lahf
push
mov
sub
addr16
mov
test
fwait
push
lret
pop
pushf
int
fsubl
jl
add
sbb
sarl
push
sbb
and
xchg
sub
mov
dec
jmp
out
inc
and
lahf
test
test
inc
xor
ret
in
sub
mov
xor
or
subl
cmc
popf
cmpsb
out
loope
fisubs
inc
and
icebp
enter
mov
mov
jl
or
sbbl
or
dec
inc
pushf
fsubrs
movsl
fs
in
pop
pop
pop
jnp
cmp
or
pop
loopne
jmp
and
lret
dec
push
sbb
adc
add
mov
insb
mov
pop
push
mov
xchg
jg
or
pop
pop
repz
mov
mov
jno
xchg
cld
lods
loope
repnz
scas
mov
fisttpl
scas
hlt
aam
lock
enter
jp
int
mov
outsl
divl
xlat
or
das
fiadds
loopne
insb
pop
fninit
or
xor
sub
or
fisubrl
xlat
repz
pop
ja
imul
cmp
xchg
fstl
or
sbb
push
mov
jne
cmp
xor
and
aas
aad
loope
decl
js
ljmp
push
div
pop
ljmp
movl
or
mov
or
std
sbb
mov
es
pop
mov
fcmove
sahf
push
js
cwtl
xor
in
lahf
mov
push
insl
lret
into
mov
cmc
push
gs
push
je
or
imul
ret
cmp
push
cwtl
push
sub
or
jp
mov
ja
fwait
inc
pop
xchg
push
and
negl
lret
mov
sarl
jnp
inc
lock
mov
mov
mov
inc
lret
lock
jge
insb
add
lods
push
cmp
out
pop
inc
mov
test
jno
jmp
scas
mov
ret
xchg
mov
ljmp
inc
icebp
and
andl
popa
or
lods
sub
fcmovne
scas
sub
adc
div
outsl
or
sbb
out
insl
scas
xor
xor
add
sti
sbb
fimull
test
xor
xor
shll
jo
adc
sub
fstps
pop
setbe
adcl
mov
lock
fnstenv
test
filds
or
jnp
xor
cmpsl
cli
jmp
inc
pop
cmpsl
cmc
out
cwtl
notl
mov
add
sub
jbe
out
xchg
out
sub
mov
cmpsl
sub
sbb
scas
push
es
mov
ds
sub
and
addr16
in
cwtl
inc
and
cmp
cmp
shrl
fs
int
jns
inc
or
cmpsb
mov
xchg
xlat
int
add
scas
mov
lret
pop
dec
pop
bound
aas
mov
iret
stc
daa
hlt
jg
and
lods
mov
mov
pop
imul
inc
int
xlat
cmp
dec
aaa
aad
jo
push
add
jno
xchg
mov
cmp
jne
call
pop
int3
mov
stc
daa
mov
cmp
lcall
add
xchg
ds
lods
inc
sbb
popa
pushf
sub
push
xor
or
cmp
xor
fimuls
xchg
mov
cmp
and
mov
xor
or
jbe
dec
lock
xor
cmp
jmp
fnstsw
or
push
or
popa
pushf
scas
mov
mov
xor
and
sub
in
dec
popf
faddl
sub
xchg
push
adc
adc
or
insl
mov
dec
pusha
mov
push
and
and
movsl
push
xor
cld
sti
or
dec
push
jge
add
mov
int
adc
ds
adc
sti
pusha
inc
mov
jg
xchg
lret
shll
addr16
test
mov
sub
cmpsb
or
dec
dec
mov
mov
xorl
inc
sahf
inc
out
rcrl
mov
mov
das
cmc
cmpl
push
jo
mov
scas
jnp
sbb
in
mov
nop
fwait
lds
jle
push
movsl
sahf
mov
mov
cmp
mov
lcall
cmpsl
jne
scas
arpl
cmp
hlt
mov
repz
add
sbb
push
mov
daa
out
shr
mov
xchg
xchg
stos
stos
daa
mov
hlt
push
ficoms
in
push
cmpsb
lock
lods
test
jno
fildl
clc
sub
cmp
fwait
lret
adc
aas
and
push
cmpsb
filds
lods
xchg
fcompl
mov
xchg
adc
mov
jb
jne
add
dec
lahf
in
and
bound
or
inc
es
mov
push
out
cmpl
imul
jl
dec
inc
adc
mov
fmull
sbb
jae
sub
xchg
int
dec
jp
cwtl
jne
inc
jp
loopne
jmp
xor
mov
push
sbb
adc
aas
stc
adc
cs
loop
jecxz
and
ja
jnp
fldenv
xor
decb
mov
outsb
pop
pop
pop
and
out
aas
sbb
fistps
shlb
adc
outsb
repz
sbb
add
mov
daa
lods
paddsw
push
out
push
repnz
int3
lods
xchg
mov
inc
orl
inc
sub
and
cmp
xor
add
inc
test
stc
inc
fstl
das
dec
mov
movsl
pop
dec
dec
adc
repz
cmc
mov
sub
and
cmp
and
xlat
push
sbb
dec
push
sub
jno
or
mov
ds
movsl
sbbl
pop
into
mov
dec
adc
push
fwait
int
push
xchg
test
mov
and
jne
mov
rclb
test
jae
push
adc
inc
clc
jp
sbb
roll
lods
rclb
das
fstpl
xor
fs
mov
dec
in
xchg
mov
dec
test
cmp
fimuls
cmp
cli
repz
mov
or
pop
dec
xor
lods
dec
jbe
loope
popa
fstps
cld
dec
push
adcl
adc
mov
int
aas
stos
jg
shr
mov
shrl
cmpsl
lds
adc
cmp
leave
push
inc
add
adc
jnp
lods
aas
dec
mov
repz
xor
fld
and
cmc
or
add
mov
mov
xchg
mov
popa
lock
shlb
mov
js
out
rcl
mov
sub
negb
out
push
add
sub
cli
fcompl
xchg
mov
inc
test
sbb
push
mov
push
imul
lods
xchg
nop
scas
divl
pop
loopne
mov
stc
jb
xchg
movsl
sub
syscall
mov
jge
fwait
jno
cmp
cli
sbb
pop
pop
aam
cli
push
cmp
jb
mov
bound
xchg
fsubrs
cmp
push
fdivs
aad
and
dec
in
loop
mov
jge
and
adc
xor
dec
sbb
neg
mov
mov
mov
fiaddl
mov
and
push
mov
fildl
push
icebp
pop
mov
sub
insl
fiadds
mov
int3
or
mull
mov
lcall
call
ss
jae
fsubp
sti
dec
push
or
fmull
jp
xchg
inc
add
fstl
xchg
in
jns
dec
ds
cmp
jnp
scas
inc
inc
mov
sbb
cmp
mov
or
int
push
and
nop
test
or
ss
cli
jmp
arpl
ds
and
cli
movsb
inc
add
mov
mov
and
sbb
test
out
add
dec
inc
lret
jge
ds
shl
int3
ds
mov
loope
add
jle
jns
sbb
pusha
mov
add
xlat
or
mov
jae
ljmp
in
or
outsb
mov
jecxz
push
les
pop
pusha
daa
aam
daa
mov
popf
sahf
dec
fcoms
dec
push
daa
add
adc
ror
sbb
xchg
fstpt
add
leave
data16
bound
imul
test
dec
lret
test
pop
test
jp
sub
test
data16
cmc
cmp
sahf
sub
out
pop
out
cmp
dec
pop
or
into
pop
xchg
add
stc
adc
push
jo
arpl
mov
das
and
std
or
das
mov
out
fsubrs
in
pop
adc
xor
pop
loop
adc
xor
jnp
mov
andl
and
cmp
xchg
mulb
add
divl
mov
aaa
mov
mov
rclb
dec
xlat
jno
outsl
xor
rcrl
cwtl
je
push
or
gs
mov
or
sub
pop
in
dec
inc
sub
xor
sbb
xor
iret
loopne
repz
jmp
xlat
mov
pop
loopne
mov
dec
loope
gs
mov
loope
fidivrs
aaa
test
cltd
adc
inc
and
mov
xor
out
push
mov
and
imul
outsl
cmp
sub
pop
pop
sub
into
mov
das
jp
fwait
mov
fisttps
fbstp
add
cmp
adcl
inc
int
mov
insb
pop
cli
sbb
addl
push
gs
das
ja
inc
sub
dec
add
loope
stc
scas
test
mov
mov
xor
jp
xchg
stos
faddp
adc
cmpsb
lods
mov
sbb
sub
push
lret
adcb
push
pop
jmp
loop
repz
jne
inc
scas
push
jge
dec
addr16
xchg
in
test
xchg
mov
cltd
cmp
push
xchg
and
xor
xor
mov
push
out
add
xor
push
notl
ljmp
pop
sbb
rcrl
cltd
mov
movsl
xchg
fsubs
sarb
sbb
mov
fimuls
mov
cmc
push
adc
ret
lret
xchg
mov
xlat
pop
mov
push
lret
jno
pop
fs
cltd
fisubs
sti
jo
cmc
outsb
fdivrs
cmpsb
push
js,pt
jbe
decb
add
repz
fscale
sub
test
sti
and
push
dec
pop
mov
outsl
js
lock
push
jl
das
push
jp
leave
scas
ja
jo
jle
dec
jp
shl
pop
push
push
into
into
loope
pop
and
fsubrl
jecxz
xor
mov
test
incl
out
push
arpl
test
fnstenvs
xchg
mov
insl
or
ror
push
sub
orl
cli
push
fwait
ss
popa
pop
and
clc
jne
enter
jge
add
cmp
add
inc
adcb
nop
mov
adc
cmp
hlt
mov
mov
or
aas
inc
mov
cmp
xchg
lcall
enter
mov
or
fldl
enter
mov
lods
into
sbb
or
lock
mov
movsb
rcrb
addl
cmp
cmpsb
cwtl
sub
xchg
jp
cmp
daa
popf
mov
pop
jp
add
mov
dec
adc
jmp
push
shll
pushf
test
inc
pop
sbb
enter
call
leave
ljmp
dec
or
xor
dec
loopne
sbb
outsb
or
dec
sbb
adc
fdivl
fs
loopne
sbb
mov
stos
push
movsl
mov
jne
fistpl
inc
jle
pusha
and
push
daa
jns
pop
orl
cmp
or
adc
sbb
sbb
aam
je
lea
enter
mov
ja
cmpsl
aas
mov
xchg
mov
cltd
xchg
cmp
adc
out
mov
mov
fwait
push
aam
movsb
mov
mov
mov
inc
xor
sbb
mov
dec
inc
lcall
pushf
fsts
shrl
pop
xchg
and
add
dec
pop
xor
mov
mov
cmp
cli
cwtl
test
repnz
xor
mov
cmp
cmp
jo
mov
inc
cli
push
ret
cmp
jb
lret
sub
xchg
jne
movl
mov
push
jmp
mov
addr16
jo
lret
push
mov
mov
ss
aad
daa
inc
cmpsb
cli
xlat
inc
mov
adc
imul
xor
xchg
stc
cmp
mov
incb
fsubl
jecxz
or
call
xor
icebp
popa
xchg
ljmp
in
cli
bound
mov
mov
mov
or
inc
clc
rorb
mov
xchg
sub
pop
int
inc
ja
loop
sub
xor
push
loop
sub
mov
jle
or
sbb
andl
lds
inc
imul
pop
ret
leave
nop
xor
lcall
push
rcr
and
pop
enter
int3
mov
mov
mov
fs
push
cmpsb
test
ja
adc
ret
xor
or
pop
stos
sarb
into
mov
mull
sbb
sub
out
fnstenv
xchg
xor
imulb
lods
popa
adc
aaa
inc
or
mov
sub
std
adc
cwtl
addl
roll
lcall
lahf
mov
mov
cs
daa
popf
inc
push
loope
mov
arpl
movb
jne
cmpsl
jb
addl
xchg
insb
testb
xchg
daa
test
push
xor
pop
push
icebp
pop
imulb
insl
aam
int3
add
gs
jl
or
cmpsl
jecxz
jae
lods
lods
lods
aas
pop
js
push
aad
lods
test
and
les
jne
std
mov
cmp
pop
pop
fsubr
stos
sub
ds
dec
sub
rcrb
loop
push
out
nop
es
or
repz
ss
sub
adc
cltd
dec
sub
stc
gs
jns
cmc
repnz
or
inc
mov
aaa
into
cmpsb
insb
dec
push
fstpt
jg
iret
or
lret
adc
adcl
xchg
jl
inc
push
fs
sbb
cmp
das
sahf
sub
shlb
push
mov
push
aad
mov
in
sbbb
loopne
mov
add
push
dec
jge
mov
sbb
lea
bound
sub
pop
sub
aam
lods
fdivs
jno,pn
push
push
jge
call
popf
scas
loope
daa
int3
xchg
xchg
sub
addl
sbb
add
outsb
adc
pop
mov
xlat
adc
arpl
test
inc
and
cmpsl
xchg
xorl
push
or
divb
or
rcrb
mov
add
adc
push
lods
pop
out
repnz
hlt
je
push
lods
xor
es
dec
adc
js
xorl
add
sbb
addb
xor
dec
imul
insl
dec
mov
test
or
ds
and
imul
adc
adc
mov
jmp
inc
rorl
sub
jge
lea
outsb
fs
stc
fildl
ficompl
push
aam
cld
mov
pop
rcrl
leave
stos
or
mov
mov
push
aaa
dec
hlt
and
lea
mov
xchg
cmp
pop
xor
test
ljmp
in
clc
mov
xchg
push
mov
xorl
dec
js
mov
adc
sub
sti
ficoms
sbb
xor
pop
nop
pop
pop
xor
push
sub
cmp
adc
sub
mov
jae
iret
out
shll
leave
les
scas
cwtl
or
xchg
add
fisttpll
push
inc
icebp
mov
jns
jne
mov
pusha
test
es
lea
xchg
mov
jg
mov
push
or
stos
push
push
out
mov
icebp
and
push
sbb
inc
jbe
adc
roll
cs
aad
loopne
sub
test
or
lret
setns
and
mov
cwtl
aas
xchg
scas
dec
daa
sub
and
mov
out
jnp
adc
jns
int
stc
xor
cmp
loope
dec
add
shll
sti
push
push
andb
es
stos
xor
lea
push
sarb
shl
insb
sbb
popa
loopne
or
enter
and
scas
aad
inc
subb
and
pusha
xor
sbb
adc
inc
iret
cmp
adc
push
and
push
les
or
pop
jge
xor
rcrb
insl
fs
mov
mov
pop
out
mov
loope
imul
sbbl
imul
or
adc
pop
cld
rcrl
aaa
jns
inc
cmc
mov
push
adc
push
pop
push
mov
xor
or
mov
sub
cmpl
xlat
mov
cmp
or
fs
mov
les
or
lret
inc
fdivr
mov
sbb
pop
andl
in
nop
add
jb
mov
int
inc
daa
dec
cmc
dec
mov
inc
es
test
xchg
lods
mov
popa
xchg
fdiv
out
fistpll
or
or
cmp
jne
mov
mov
sbb
repz
ret
lods
mov
push
inc
enter
cwtl
jbe
pop
pop
push
les
or
cmp
mov
lcall
hlt
sbb
aas
pushf
xchg
mov
push
push
shrl
jns
push
shr
test
pop
cltd
xor
fdivrs
iret
mov
inc
add
shrb
test
mov
add
fsubs
dec
inc
aad
mov
and
lret
scas
adc
fldl
mov
dec
out
xlat
xor
dec
out
nop
sub
mov
lret
and
call
sbb
jne
pop
dec
lods
insb
jnp
and
mov
xchg
loopne
xchg
cmp
test
sti
cltd
lods
outsl
sahf
repnz
mov
dec
mov
fisubl
das
mov
in
bound
jl
adc
in
mov
dec
test
ret
jl
xchg
mov
sub
loope
out
push
fldenv
sbb
inc
in
sbbl
add
sub
popa
sbb
or
ljmp
test
xor
push
imul
push
stc
loop
out
subl
ljmp
cmp
add
je
icebp
in
pop
pop
and
test
out
fsubs
pop
push
outsl
mov
loop
push
inc
sbb
inc
icebp
add
mov
rcll
and
mov
out
cwtl
mov
jmp
cmp
out
repnz
dec
lcall
pop
mov
push
insb
inc
sub
mov
xor
ror
or
add
scas
mov
sub
ret
movsl
xor
cmp
out
dec
pusha
fwait
aad
fbld
cltd
or
cmpsl
lock
insb
push
push
aas
jl
call
add
dec
int
clc
jg
lds
hlt
push
sbb
xchg
or
repz
int3
out
fwait
and
mov
mov
sahf
or
push
fcmovnb
les
in
outsb
pop
ret
cmp
add
and
pop
cmp
inc
in
aas
adc
mov
inc
mov
mov
dec
sarl
jecxz
icebp
sbb
shll
and
shrb
rcrb
in
fdivrl
pop
and
sbb
jno
pop
jno
mov
fs
sub
into
adc
jnp
out
push
cmp
nop
pop
lock
sbb
push
mov
pop
lahf
clc
sbb
jbe
push
mov
jl
subb
mov
inc
add
movsl
dec
adc
daa
mov
cmp
mov
mov
sub
or
repz
cltd
roll
jb
js
or
and
scas
ds
fstpt
and
inc
arpl
insl
imul
into
xchg
and
adc
xor
jbe
stc
and
mov
aas
in
jge
out
test
jns
das
push
pop
orb
pop
pushf
push
lods
aam
sti
sbb
xor
test
mov
hlt
in
stc
pop
fsub
or
dec
in
test
and
push
out
mov
pusha
jp
jo
and
pop
mov
sbb
mov
xchg
jg
or
bound
sbb
add
lret
mov
stos
movsl
pop
movsb
push
cmpsl
repnz
jns
loopne
inc
adc
movsb
or
cltd
jecxz
lea
xor
or
aas
adc
push
mov
adc
cmp
inc
inc
mov
adc
int
test
inc
shrl
push
push
xchg
aas
mov
dec
adc
or
aam
xchg
in
in
das
loop
loop
scas
and
cmp
adcl
shrb
dec
xorl
rcrl
leave
mov
push
in
cmp
pop
jne
sub
and
push
push
fstps
hlt
dec
sub
lret
adc
gs
enter
inc
clc
sbb
and
iret
mov
repnz
orl
movsb
inc
clc
add
pusha
clc
xchg
mov
and
push
xor
jne
xorl
xor
insb
mov
sarl
fildl
test
clc
cmpsl
jns
in
lods
sub
cmc
xor
inc
ljmp
or
and
mov
and
lret
roll
decl
dec
or
add
or
and
pop
sub
sbb
xchg
xchg
mov
ljmp
mov
bound
sub
loop
push
enter
shrl
lret
push
pop
enter
xor
xchg
mov
je
or
sahf
or
iret
icebp
daa
or
adc
in
call
dec
je
and
pop
hlt
call
jg
stos
cmp
pop
fcomip
push
xchg
sbb
ss
inc
lret
sbb
ror
divl
lods
arpl
insl
fidivrl
cmp
aas
sub
jne
pop
mov
jne
pop
xchg
add
fisubrl
into
and
jns
gs
xor
xchg
into
and
cwtl
lret
mov
mov
test
pop
jmp
cli
mov
jp
push
sub
adc
divl
insl
pop
mov
sbb
fistps
or
cmp
int
test
iret
cmpsl
addl
sbb
dec
jne
sub
mov
out
in
push
inc
jge
mov
pop
out
dec
mov
add
pop
sub
mov
rclb
enter
inc
mov
mov
lods
pop
repnz
push
icebp
inc
mov
js
imul
fisubrl
ret
or
xchg
inc
and
mov
fs
js
pop
lcall
pop
mov
push
xchg
pop
sbb
and
loop
jge
clc
xor
jecxz
add
sub
orb
jecxz
pop
cmc
mov
add
fadd
or
or
jne
or
xor
or
push
or
jns
xchg
lods
dec
sbb
lods
outsl
push
xor
dec
cs
xlat
dec
les
pushf
pop
jo
lock
lods
mov
addr16
pop
pusha
xchg
sarb
cmp
cmpsb
xchg
imul
loope,pn
std
add
sub
xor
imul
insl
xchg
fs
outsl
lock
imull
lea
sbb
cli
insl
mov
inc
and
jb
outsb
and
loopne
inc
ss
xor
push
lods
aas
cmp
arpl
sub
emms
aaa
int
push
mov
dec
adc
and
xlat
add
leave
sahf
jo
mov
jno
mov
test
add
xchg
iret
xor
cwtl
jno
aad
dec
inc
iret
cmp
and
mov
sub
fiadds
mov
notb
pop
loope
out
call
cs
mov
jge
pushf
jae
lret
pushf
fistpll
push
add
ja
cli
xchg
inc
add
push
fstpt
mov
or
in
enter
scas
jge
pusha
inc
push
out
xchg
les
and
inc
inc
pop
daa
jle
push
popf
push
aas
jecxz
add
repz
imul
inc
sbb
lret
adc
push
adc
cltd
orl
push
scas
add
pop
mov
popf
andl
xchg
ret
inc
test
cmpsb
aad
fdivrp
inc
fistpl
or
inc
loopne
mov
dec
mov
jecxz
cs
xchg
mov
sub
and
sahf
push
sub
bound
sub
mov
imulb
lods
xchg
jmp
gs
test
xchg
push
cmp
mov
aas
arpl
sahf
scas
rolb
xor
xchg
shl
es
inc
sub
fs
shl
mov
xchg
xor
bound
into
mov
int
dec
push
and
stos
sbb
lcall
fisttpll
cmp
adc
mov
pop
and
dec
mov
lock
ss
and
jo
jae
sbb
or
imul
xchg
pop
adc
or
iret
movsb
sub
mov
lret
or
pop
jae
shll
mov
aad
or
mov
mov
push
sbb
push
sub
sti
inc
pop
bound
add
mov
adc
js
fdiv
repz
nop
mov
and
lcall
call
push
aam
mov
adc
inc
mov
in
enter
cmp
aaa
imul
adc
and
cld
dec
pop
stos
lret
add
gs
sbb
gs
mov
mov
call
fadds
xor
cmp
into
mov
ja
push
sbbb
sub
jecxz
jecxz
xchg
filds
arpl
iret
or
sbb
mov
inc
fyl2xp1
call
jge
inc
inc
fistl
aam
cltd
dec
arpl
imul
jne
push
adc
icebp
add
popa
or
sahf
sub
aaa
push
adc
pushf
fs
pop
fisttpll
lahf
adc
xor
cmp
push
and
mov
fsubrl
insb
int3
jge
dec
push
mov
fdivr
in
dec
das
or
dec
adc
inc
and
movsl
lea
fistpll
out
mov
or
sbb
add
mov
inc
push
aaa
repnz
shlb
sti
test
mov
repz
xchg
fmuls
bound
inc
sub
in
cmp
aas
std
push
jmp
sbb
inc
and
dec
test
jge
adc
jb
pop
push
mov
icebp
cli
pop
mov
in
movsb
jle
xchg
and
sbb
inc
sub
xchg
clc
jb
aas
cmc
cwtl
and
or
lds
fidivs
sbb
mov
in
repz
hlt
mov
test
xchg
mov
divb
pop
int3
gs
dec
sub
scas
push
pusha
inc
xorb
inc
sub
inc
nop
or
xchg
fwait
pop
mov
cltd
sbb
push
dec
int3
jg
sti
mov
scas
xor
bound
xor
inc
int
out
and
jnp
test
push
inc
test
or
mov
xor
mov
clc
addr16
icebp
jmp
xchg
or
push
cmp
adc
or
lods
in
jnp
mov
cmpsb
pop
jo
aas
stc
andb
cwtl
bound
mov
imul
sti
loopne
rclb
sbb
sub
test
pop
fsub
jmp
lahf
push
push
jmp
pop
lret
jno
cmp
add
xlat
sti
add
dec
mov
add
fiadds
pop
jecxz
pop
and
sti
mov
lcall
lret
pop
imul
xlat
jb
orl
stc
push
pushf
in
mov
lret
repz
dec
mov
mov
repz
in
es
xchg
out
sub
test
sbb
or
xchg
in
xchg
add
fbld
incl
fs
mov
jbe
sub
mov
fcmovu
into
mov
int
sti
jg
test
mov
mov
cmpsl
imul
stc
fstpl
dec
outsb
jae
inc
sub
push
repnz
xor
loop
sbb
mov
sbb
lods
inc
mov
push
mov
jo
mov
pop
mov
icebp
leave
and
fdivrl
std
cld
gs
mov
jno
andb
insl
jle
test
mov
popa
mov
jecxz
inc
cs
jl
pop
xor
fisubrs
inc
outsl
jmp
push
sbb
or
sub
mov
in
pushw
lods
es
fsubrl
inc
and
push
and
dec
xchg
jo
mov
mov
nop
mov
push
or
aaa
adcl
adc
jae
int
add
scas
add
jmp
decb
push
fists
inc
ss
or
subb
repnz
in
mov
roll
fs
sbb
or
bound
add
and
aas
mov
test
dec
sub
test
iretw
cmp
xchg
or
cld
cmpsl
decl
push
mov
sub
add
fwait
sbb
mov
sub
inc
jmp
sub
and
mov
lods
mov
pop
push
cltd
cmc
xor
or
push
je
jg
outsb
stos
cwtl
lret
fistpll
xor
std
bound
adc
setae
dec
push
jecxz
dec
fisubs
push
and
rorb
mov
xchg
outsl
fsub
shrb
and
aas
cld
xlat
addr16
or
in
push
shrb
out
cmc
mov
adc
sbbl
inc
lds
xchg
insl
out
sbb
mov
mov
push
sbb
mov
and
xor
sbb
fisubrl
mov
dec
xchg
fidivrl
fnstenv
mov
cltd
inc
mov
xor
in
idiv
xor
stos
or
aam
call
pop
sahf
sahf
mov
int
jl
icebp
loop
filds
mov
sahf
and
xchg
daa
sbb
in
inc
mov
stc
ss
jecxz
or
leave
pop
dec
mov
push
cwtl
test
loop
loop
cwtl
pusha
inc
sti
mov
mov
jecxz
cmp
popl
and
cmpsb
out
jns
mov
xor
dec
clc
cmpsb
sbb
push
leave
mov
mov
push
popf
pusha
ret
xor
shll
insb
fdivrs
xor
add
test
mov
sahf
lock
or
pop
push
lock
jp
sbb
mov
call
lret
inc
jg
xchg
add
add
test
add
sbb
pop
add
sub
test
or
jle
cmp
loopne
cmp
inc
xchg
jmp
xchg
xor
inc
jp
mov
add
rcl
xor
popf
shrl
rclb
cwtl
inc
jb
xor
push
out
insb
add
rdtsc
dec
shrl
rorl
outsb
std
add
mov
jne
outsb
fbstp
imul
pushf
fadd
cmp
mov
pop
loop
test
addb
lea
aaa
into
push
push
add
mov
dec
mov
mov
mov
fnstsw
dec
mov
scas
fldcw
xchg
sub
xchg
jns
icebp
out
jp
jge
cmc
and
mov
jp
fs
push
mov
xor
cmpsl
dec
hlt
out
insb
cmp
mov
or
fnstcw
mov
inc
push
shll
inc
lahf
jbe
data16
loop
mov
dec
add
cwtl
jo
pushf
sti
dec
rorb
inc
jne
mov
loopne
out
cmpl
sbb
shlb
push
lcall
popa
push
dec
xor
xor
lock
sti
lods
xchg
jns
clc
lock
mov
fcomi
push
mov
push
pop
xorl
jecxz
or
test
fucomp
inc
cmp
mov
imul
out
dec
add
dec
call
test
lods
fistps
cwtl
mov
add
dec
call
loop
mov
int3
icebp
pop
or
adc
mov
pop
xchg
pusha
cld
sbb
and
add
ss
sub
mov
jbe
shl
xchg
dec
mov
orl
lret
jae
adc
cs
adc
into
dec
push
mov
aaa
mov
or
push
mov
js
cmp
xor
stos
adc
sbb
xor
cmp
js
in
arpl
loop
inc
or
push
es
pop
rclb
jl
repz
aam
mov
jae
mov
in
pop
test
rolb
fisttps
fs
cltd
push
mov
loopne
mov
ljmp
lods
outsl
sub
or
jnp
add
cmp
mov
pop
cmp
dec
cmp
data16
add
mov
add
ret
push
inc
add
cli
pmulhw
jnp
sbb
inc
pop
push
stc
cld
mov
add
sub
in
add
push
jo
or
data16
stos
rol
push
ljmp
mov
movsl
ret
lahf
fsub
mov
les
nop
hlt
xchg
stos
in
and
into
cmp
in
fsubl
jp,pn
jnp
push
outsl
cmp
lahf
insb
sbb
test
movsl
imul
adc
mov
mov
pop
mov
int
jno
push
imul
pop
es
fwait
pop
or
jmp
xchg
dec
or
lea
js
mov
and
ja
pop
pop
jb
adc
push
mov
mov
jnp
aam
pop
push
mov
in
xchg
adc
xor
mov
nop
dec
in
dec
cmp
shld
inc
sbb
jmp
pop
mov
out
lea
and
or
fldt
mov
adc
xlat
add
adc
cmp
add
mov
mov
insl
jecxz
adc
push
frstor
popf
or
addr16
andb
adc
xchg
call
frstor
adc
adc
or
dec
pusha
mov
hlt
popa
or
push
and
leave
adc
std
xchg
mov
jb
stos
dec
loop
mov
sub
adc
mov
ja
or
not
xchg
pusha
sub
shlb
xchg
out
push
push
stos
arpl
adc
fsubrl
test
sub
dec
cmp
out
jecxz
arpl
and
cli
popa
loope
adc
sti
dec
daa
sarl
or
mov
or
cmpsl
and
dec
mov
xor
sub
scas
gs
mov
fildl
adc
shrl
jbe
sbb
popa
outsb
push
sbb
repnz
mov
popf
add
add
mov
std
mov
mul
orb
mov
addr16
jnp
sbbb
mov
jmp
jmp
and
les
or
sbb
dec
adc
dec
xchg
push
pop
mov
fists
adc
es
int3
daa
mov
add
jg
mov
mov
inc
and
pop
sub
jp
imul
adc
aad
repnz
inc
scas
cmp
popf
xchg
lds
mov
push
add
fwait
sbb
sbb
mov
inc
and
shl
push
out
mov
mov
scas
test
aaa
loop
orb
arpl
std
xor
or
sbb
mov
ljmp
lds
lods
cs
xor
shrl
dec
xchg
ss
lret
pop
cmp
test
jne
sbb
mov
mov
testb
adc
jg
and
loope
sbb
xchg
mov
cmp
dec
std
or
xchg
mov
dec
sahf
xchg
loope
sbb
fucomip
pop
orb
fstpt
sub
and
cmp
ljmp
and
iret
shl
dec
aam
xchg
or
pop
adc
notb
mov
inc
pop
test
ss
mov
sbb
pushf
mov
pop
mov
xchg
cmp
xchg
je
mulb
inc
and
stos
and
test
cs
movsl
jmp
adc
adc
jb
and
jg
or
lahf
clc
insl
mov
or
mov
push
stos
iret
push
inc
int
lret
fs
and
mov
and
or
xchg
jge
jb
enter
data16
scas
push
adc
push
sub
outsl
mov
pop
les
sub
adc
inc
cmp
lahf
jbe
push
jl
shrb
xchg
les
dec
adc
jle
push
jl
cmp
cmpl
sub
call
mov
scas
addb
cmpsl
cmp
inc
testb
and
je
sbb
fcmove
mov
shl
adc
dec
adc
cmpsb
sahf
aaa
mov
pop
adc
clc
inc
inc
icebp
ret
jbe
insb
pushf
in
rorb
mov
outsb
clc
stos
add
inc
imul
sbb
stos
cmc
outsl
dec
ds
mov
stc
in
push
mov
insb
jp
scas
mov
sub
test
nop
xchg
push
in
into
push
in
sub
adc
imul
cvtdq2ps
dec
sbb
add
mov
in
fcoms
xchg
cwtl
push
mov
push
inc
lahf
lahf
ret
jnp
outsl
dec
in
call
scas
imul
bound
cmp
loopne
test
and
stc
sbb
gs
stos
add
sbb
push
cld
cmpsl
adc
dec
pop
jns
xchg
cli
enter
rclb
inc
sub
xchg
push
xchg
xchg
fldt
stos
in
cmp
xchg
je
es
repnz
xor
pop
sub
push
mov
test
xchg
xchg
jl
jmp
mov
sub
xchg
scas
int3
enter
daa
cmp
leave
cmp
je
inc
dec
jo
pusha
dec
sub
jb
cmp
xchg
test
rol
pop
mov
push
test
mov
inc
fsubl
bnd
outsl
ss
repz
je
sarb
push
int
xor
push
in
pop
int3
fs
cmp
cmp
pop
test
xchg
ss
leave
sbb
mov
test
cmp
push
pushf
sub
xchg
push
into
nop
es
lret
sub
in
mov
mov
push
ret
jae
sbb
sar
push
dec
loope
cmp
cli
xor
add
js
adc
cmp
hlt
and
jle
fwait
adc
and
adc
in
inc
add
add
je
mov
push
push
xor
dec
jecxz
test
mov
or
and
je
dec
imul
in
pop
inc
cmpsb
add
in
dec
loope
rcrl
nop
out
cwtl
sub
ficoms
jp
xor
and
ljmp
fchs
push
insb
andl
sub
push
jo
mov
fsts
jmp
mov
jle
cmpb
sahf
or
xor
push
pop
jg
mov
lret
pop
roll
leave
xchg
xchg
mov
lahf
pop
out
xor
test
popf
xlat
xchg
ja
lock
int
mov
test
movsb
xchg
sbb
cld
ja
inc
mov
pop
mov
into
adc
pop
sub
push
xlat
shr
nop
push
pop
repz
rcrl
das
daa
pop
jle
orb
push
xchg
pop
roll
loopne
lock
jo
lea
daa
das
cmp
xor
push
sub
out
xchg
je
insl
lods
push
in
jo
ja
cmp
in
mov
xchg
adc
mov
aas
mov
xlat
mov
or
fmull
dec
push
cmp
mov
daa
imul
movswl
cmpb
into
mov
shlb
mov
pop
in
jecxz
dec
roll
or
sti
enter
int
aam
and
lods
test
clc
mov
popa
les
adcb
jg
pushf
mov
cmp
int3
push
mov
insb
push
cmpb
ds
sub
mov
push
icebp
pop
rclb
mov
jmp
out
cmp
xor
xchg
hlt
pushf
ljmp
outsb
divb
or
fs
xchg
into
cmp
add
push
and
rclb
jnp
ds
add
cwtl
lods
add
popa
in
mov
inc
push
sub
mov
mov
and
cli
jae
pusha
out
cmp
sbb
sub
pop
bound
push
dec
push
cmp
dec
roll
adc
imul
xor
and
pop
or
mov
scas
cmp
mov
jge
inc
sbb
andb
divb
movsl
mov
cltd
lcall
sbb
icebp
jne
sbb
cltd
loopne
cltd
push
jns
inc
adc
or
jo
sbb
add
mov
arpl
jg
in
xchg
push
mov
cmp
fwait
jg
addl
cwtl
flds
out
mov
mov
xlat
adc
xchg
gs
jl
pop
lahf
clc
sub
and
inc
cmpsb
jecxz
dec
lret
idivl
pause
test
sub
jbe
sbb
pop
or
jg
repz
jge
popf
mov
sub
das
addr16
cwtl
mov
pushf
cmc
xchg
cltd
iret
or
pop
xchg
lods
jle
mov
push
xor
outsl
pushf
sbb
out
inc
dec
dec
sub
sbb
jne
mov
adc
jne
adcl
test
inc
add
push
jno
cld
mov
mov
or
mov
loope
lahf
xchg
mov
xchg
push
jno
je
xor
shrb
ljmp
inc
pop
sti
jmp
mov
mov
xchg
lahf
pop
movsb
icebp
js
push
dec
das
movsl
ljmp
mov
negl
out
shlb
jnp
xor
push
sub
hlt
les
push
sbb
lods
push
addl
bound
lret
popf
hlt
jo
and
or
xchg
fcoms
or
lock
xchg
shrl
sti
scas
ds
in
inc
fmull
dec
jmp
insb
pop
cmp
xor
add
clc
orl
push
or
test
std
dec
jnp
popf
jno
mov
push
pop
loop
nop
or
rorb
insb
bound
jo
das
cs
xorl
addl
out
bound
inc
fisttps
test
xor
mov
pop
xor
sbb
sub
cld
sbb
sbb
loope
orl
dec
arpl
ficoml
fucom
fstpl
fdiv
dec
push
and
repz
mov
lahf
cld
inc
mov
dec
test
mov
frstor
add
popf
int
sbb
add
push
in
sub
sbb
push
test
fisttpl
sub
adc
ds
sahf
mov
test
nop
and
out
mov
or
pop
int3
cld
je
cmp
lahf
push
fs
and
cli
pushf
divl
lcall
pop
inc
aaa
jo
clc
cmp
lods
inc
fcomps
sbb
addb
pop
adc
or
aad
mov
outsl
pop
sub
lea
mov
mov
jge
psrlw
jecxz
repnz
jb
andb
mov
xchg
push
adc
aad
cmp
loop
les
ret
pusha
dec
in
lods
lods
jbe
mov
mov
movsb
mov
inc
mov
aad
inc
and
push
mov
jl
jp
add
or
add
popf
ljmp
in
mov
or
push
call
and
add
pop
ret
and
out
pop
loop
ljmp
pop
shll
or
popa
cmpb
inc
clc
cmp
push
xlat
and
fs
add
mov
sbb
xchg
imul
push
ret
jp
sub
mov
jno
fiadds
mov
jl
or
aad
cmpsb
sbb
rcr
sub
mov
jne
sbb
out
add
jo
pop
in
xor
lahf
jecxz
js
scas
test
push
mov
fdivr
repnz
jmp
out
lds
xor
pop
inc
loopne
adc
outsl
sub
ljmp
dec
jno
sbb
dec
sub
xchg
jo
stos
push
or
cwtl
movsl
dec
outsb
dec
out
mov
mov
leave
int3
and
ljmpw
and
jbe
cmp
jb
in
push
cmc
lea
in
and
subb
in
data16
mov
xchg
inc
hlt
cmc
mov
jle
and
daa
icebp
xchg
subl
jns
jg
mov
cmp
push
repnz
cmpsl
hlt
movsl
scas
mov
mov
fadd
add
pushf
push
mov
mov
push
stos
or
mov
cmp
mov
popf
push
cmpsb
pop
cmp
xchg
sub
fmuls
push
ret
test
jne
pop
dec
adc
cmc
bound
bound
and
or
fidivrl
gs
sbb
pop
sbb
sbbl
insl
cltd
jg
cltd
sub
and
push
inc
sbb
cld
lods
xchg
xchg
lds
sti
adc
push
sub
ja
sahf
mov
das
xor
pop
jle
pop
or
mov
xchg
hlt
and
push
fsubl
sub
pop
into
popa
into
pusha
mov
inc
sub
lret
jle
mov
mov
insl
adc
mov
push
xchg
lahf
negb
mov
xor
nop
decb
enter
adc
pop
xor
aad
xchg
xor
sub
enter
iret
sti
cwtl
jge
cmpb
mov
xor
mov
xor
insb
int3
dec
scas
cwtl
int3
push
mov
inc
sub
pop
aad
mov
push
leave
jnp
test
xchg
test
and
xchg
xor
repnz
sti
jp
lods
cmc
shlb
cltd
out
lea
aam
mov
adc
cwtl
into
cmp
sub
cmp
cmp
cmp
dec
lcall
pop
scas
push
xor
jo
test
mov
shl
xchg
rorb
xchg
or
cmp
movsl
xor
jbe
outsl
add
jb
adc
movb
scas
cmp
sbb
adc
rcpps
std
jge
loopne
and
out
mov
popf
inc
aaa
mov
inc
mov
push
or
mov
pusha
dec
lock
mov
mov
sub
add
imul
push
jl
lret
sbb
das
jge
xchg
cli
decb
jmp
std
hlt
add
xor
psubd
lret
jb
mov
stos
data16
shl
push
cs
cld
cmp
push
cli
sub
lds
mov
pop
loope
mov
lds
rorl
lcall
fnstcw
xchg
clc
cmp
mov
jb
fwait
adc
jl
ret
nop
shlb
sti
cmp
jmp
adc
stos
pop
cmp
pushf
loop
in
jb
xor
popf
adc
in
push
lcall
cmp
xchg
cmp
push
sub
cs
lods
sub
test
pushf
push
pop
test
outsl
insb
add
push
sbb
std
aad
add
mov
xlat
pusha
sub
stos
jl
stos
pop
in
sbb
fsubr
xor
int3
dec
ja
mov
outsb
jo
in
jb
leave
xor
pop
out
pop
and
jle
std
loop
sub
xchg
xchg
je
aad
lahf
mov
jns
push
add
mov
movsb
pop
and
test
lahf
cmp
jge
sub
dec
rcrb
inc
mov
dec
cmp
xchg
es
ja
leave
mov
mov
or
jnp
cmp
dec
enter
mov
xchg
xchg
push
sahf
cltd
sbb
jmp
push
mov
test
dec
jg
adc
xchg
adc
jg
pushf
loope
andb
gs
mov
loopne
push
push
scas
je
dec
imul
mov
mov
inc
jecxz
mov
sti
xchg
aaa
mov
adc
pusha
lods
jnp
fcom
gs
scas
stos
enter
ret
xor
mov
push
mov
movsl
icebp
add
and
jae
cli
addr16
loopne
or
lcall
cmp
in
subl
cwtl
cmp
sahf
or
inc
inc
push
or
call
dec
adc
imul
aad
stos
mov
xor
add
and
jle
or
loop
dec
pop
loope
leave
and
nop
pop
test
adc
xchg
jae
fmul
sahf
pop
or
dec
push
inc
adc
add
arpl
cltd
and
cmp
mov
shrl
jmp
out
repz
ret
mov
inc
or
insl
mov
xorl
ds
xor
mov
in
xor
sahf
popl
sbb
add
adc
cmc
leave
rcrb
push
mov
lock
xor
sbb
lcall
aaa
jp
test
or
test
lret
pop
adc
xchg
cmp
je
and
jne
lea
sub
xchg
push
aad
in
sbb
pop
jnp
lods
sarl
sbb
in
lret
jg
dec
sbbl
xor
cmp
xor
insl
xor
rcl
scas
insl
cmp
cmpsl
cmpps
push
popf
sub
push
mov
adc
popa
icebp
fsubl
push
insl
add
push
xor
mov
mov
stos
mov
sbb
leave
vhsubpd
icebp
pusha
mov
sahf
mov
jbe
sub
mov
fld
cmp
push
pop
out
rclb
adc
ss
mov
aad
arpl
lcall
sub
lock
sub
jp
mov
push
jmp
push
shlb
fwait
pop
movsb
scas
jecxz
or
mov
xadd
mov
mov
vpsubsb
cmp
into
arpl
sub
sahf
lret
fs
scas
pop
call
mov
mov
adc
or
or
outsb
mov
mov
daa
cmc
insb
push
and
jns
push
xlat
dec
mov
pop
mov
repnz
cmpsl
mov
adc
mov
movsl
mov
fsts
push
pop
xchg
insl
dec
fcoms
inc
stos
sub
stc
in
xor
decb
aam
mov
lret
sbb
and
int
sub
xchg
mov
dec
cli
loopne
mov
fisttps
shrb
dec
mov
mov
aam
outsl
jecxz
addr16
leave
nop
jge
cs
push
push
push
push
push
xor
mov
push
pusha
out
jae
shrb
clc
inc
or
loop
mov
es
test
mov
movsb
arpl
fst
notb
aad
inc
repz
adc
mov
addl
lods
mov
in
push
ljmp
mov
push
mov
mov
dec
arpl
nop
lret
mov
popa
fcoml
test
dec
jge
lret
hlt
ss
push
jp
dec
je
fimuls
jg
pop
int3
jp
xchg
pop
out
and
enter
lock
or
fisttpll
mov
jp
out
push
dec
jp
push
movl
push
mov
fsubrl
inc
jp
mov
jbe
loopne
cmp
pop
ficoms
pop
jae
into
sbb
jb
andl
cmp
xchg
add
sbbl
push
lock
xor
movsb
int3
lret
cmp
jmp
pop
mov
adc
lock
xor
push
into
sub
add
cwtl
dec
add
pop
mov
imul
ja
xchg
ret
pop
filds
xor
pushf
adc
test
pop
scas
mov
fdivs
cli
sbb
imul
scas
movsl
call
mov
mov
cmp
dec
mov
sbbl
insb
aam
dec
cmp
icebp
xor
dec
mov
push
dec
inc
and
fwait
lods
sub
push
lret
js
pop
scas
jmp
jl
scas
jmp
push
les
out
cmp
lret
mov
mov
push
xor
fisttps
and
jle
jmp
mov
out
adc
arpl
fisttps
jns
adc
cmpsb
lea
cwtl
cmp
imul
xchg
mov
pop
stc
pop
inc
jl
cmp
jmp
lods
mov
xor
icebp
mov
sahf
jne
sbb
inc
dec
xchg
in
test
mov
gs
test
mov
mov
leave
popa
jo
dec
xor
loopne
ljmp
leave
xor
add
mov
adc
xor
sbb
and
push
std
stos
cmpsb
stos
sti
or
cmp
fisttps
xchg
cmp
int
mov
push
push
xchg
stos
mov
fabs
in
dec
sub
and
mov
js
and
adc
mov
lds
jnp
ja
pop
stos
les
stc
cmpsb
push
mov
int3
xchg
out
xchg
adc
orl
xor
cmpsl
cmpl
call
xchg
ja
jg
mov
insl
shrb
xor
into
jge
add
dec
adcl
xchg
mov
das
je
scas
add
es
pop
std
pop
js
int3
loopne
into
xor
loop
cmc
and
lret
in
cmp
push
mov
ret
pop
sub
mov
mov
mov
or
mov
sar
mov
jo
jbe
ret
in
mov
lret
sbb
jp
jnp
lret
negl
sahf
hlt
and
inc
inc
jno
test
add
stc
out
dec
leave
jae
cli
aad
xor
aas
repnz
shrl
adc
cltd
xchg
xor
fsubl
mov
insb
xchg
adc
dec
les
in
mov
xchg
add
mov
movsb
mov
pushf
mov
cmp
dec
sbb
xchg
xor
or
call
jmp
xrelease
mov
mov
or
je
xor
orb
jo
pop
insb
lret
jo
repnz
or
sbb
sbb
iret
xchg
sbb
adc
cmc
popl
xor
mov
adc
enter
and
mov
dec
shl
sub
mov
js
jnp
fucom
sub
repnz
dec
and
jae
ss
mov
adc
scas
cmpsb
xor
mov
xor
jns
adc
repnz
pop
movsl
push
imul
mov
xor
xchg
push
push
movzbl
roll
popa
mov
add
adc
gs
jo
repnz
rclb
dec
popa
ret
in
xchg
pop
or
sbb
shrb
cmc
sar
sub
dec
loop
mov
lds
add
and
or
sbb
mov
mov
cmc
stos
push
mov
inc
pop
repnz
pop
shll
push
xor
and
sahf
adc
imul
xchg
aaa
sbb
sbbl
outsl
mov
push
out
sub
mov
xchg
mov
pop
adc
lock
test
jne
popa
test
lret
mov
adc
out
shlb
mov
out
dec
ja
cli
ja
lock
fdivr
int3
outsl
mov
sarb
fwait
jns
xchg
ljmp
mov
adc
loop
mov
jne
mov
xor
cmp
fwait
push
cmp
scas
fsub
jl
popf
lret
popf
inc
mov
jae
adc
add
add
imul
rcl
mov
mov
test
lcall
mulb
mov
jl
sbb
rcrl
add
adc
or
inc
negb
mov
mov
mov
push
fs
pop
xchg
sbb
cs
stos
test
aaa
sbb
nop
push
sbb
xchg
out
sub
push
scas
push
sbb
or
insb
andb
mov
mov
mov
decl
mov
pop
jecxz
push
arpl
fstl
add
lret
call
rcrl
inc
int
sbb
ss
inc
and
mov
ret
fwait
addr16
add
jmp
pop
mov
call
cli
or
into
pop
scas
dec
mov
push
pushf
mov
loop
xor
aad
scas
push
ds
dec
cli
lea
jge
xor
in
adc
mov
lcall
aas
ret
and
arpl
cmp
data16
dec
ss
adc
sub
pop
lods
inc
pop
xchg
push
jb
pop
mov
sub
incl
mov
loop
test
repz
shrl
cmp
or
sarb
jl
pop
int3
js
call
out
mov
xchg
inc
int3
cmpsb
push
jno
popf
fidivl
and
mov
adc
pop
mulb
push
cmp
mulb
idivl
xchg
int
test
mov
bound
cmc
push
xor
sahf
fimull
aad
xchg
lahf
clc
mov
add
fisttpll
mov
call
fwait
mov
xor
xchg
inc
lret
push
and
mov
sahf
leave
sbb
cmpsb
icebp
pop
imul
fcoms
data16
xchg
add
adc
push
adc
jbe
jp
js
mov
gs
test
or
dec
jne
pop
sahf
push
dec
push
rcrb
pop
cmp
add
sahf
test
jg
dec
rcl
xor
incl
xchg
fwait
mov
lea
push
sub
orl
push
sub
fildl
ror
cmp
scas
xchg
popa
or
adc
sarl
movsb
fldenv
cs
and
add
mov
xchg
jo
pop
sbb
fwait
dec
leave
lea
adc
fmuls
adc
jmp
fnstenv
xchg
inc
dec
out
push
sbb
inc
sbb
cmpsl
out
mov
popa
outsb
and
unpckhps
inc
push
pop
or
js
dec
or
push
fists
daa
aam
mov
dec
into
dec
adc
inc
mov
jle
push
push
mov
notl
jae
sbb
mov
mov
mull
popa
sub
jb
sbb
stos
push
xchg
push
sub
cmp
xor
mov
fistl
mov
rcrb
enter
jbe
pusha
or
or
movsl
lcall
pop
test
loopne
and
fiaddl
and
cmc
jne
lret
dec
les
push
mov
shrl
ficoml
addr16
stos
cmpb
cli
cmpsb
into
push
cmp
push
mov
xchg
lret
lods
call
pop
pop
xchg
sub
inc
fcomip
sub
push
mov
inc
add
sti
enter
mov
add
adc
or
mov
sarb
in
enter
jne
push
dec
jne
or
inc
cmp
sub
jne
adc
bound
mov
pop
mov
loopne
sti
xor
inc
lcall
xchg
and
cli
mov
fstl
dec
cmp
push
int3
push
cld
in
push
fldt
hlt
mov
cld
xchg
dec
fdivrs
xchg
adc
out
push
and
cmp
insl
jb
lds
adc
xor
shl
inc
jg
push
mov
jbe
push
dec
aaa
roll
lds
mov
je
push
pop
mov
int
or
sub
inc
jp
clc
add
push
push
loope
and
lock
add
stc
xchg
jne
jns
out
rcll
test
stos
mov
push
mov
push
in
sub
rcll
clc
enter
inc
push
adc
jle
out
mov
push
inc
popa
mov
cmp
popa
gs
mov
jne
jbe
icebp
jo
in
test
inc
adc
dec
push
sbb
iret
test
dec
push
nop
mov
mov
mov
sub
shl
rcll
push
cmp
stos
dec
jne
mov
push
pop
dec
in
or
xchg
mov
aad
pusha
mov
mov
jb
dec
lahf
sub
mov
inc
loop
cwtl
mov
mov
leave
and
pop
xchg
adc
push
lret
pop
ret
fistpl
ret
lods
imul
movsb
mov
lds
imul
jb
fs
pop
shll
add
leave
ljmp
xor
mov
pop
int3
sub
adc
cmpl
cwtl
pop
je
fldl
or
out
inc
iret
ret
add
mov
loope
mov
mov
call
aas
jp
out
jle
jnp
mov
clc
fildll
mov
inc
popf
pop
xchg
xlat
cli
std
fistps
fs
jb
aaa
adc
push
lcall
shrb
pop
jne
or
mov
int
jns
clc
test
xchg
cltd
gs
pushf
push
enter
lret
dec
movsb
rclb
loop
dec
sub
cwtl
cli
ja
into
outsb
hlt
cmp
imul
pop
inc
xchg
cli
push
xchg
scas
mov
mov
mov
cld
xor
xchg
aas
inc
aad
dec
mov
mov
inc
pop
mov
push
sbb
lods
adc
dec
or
mov
imul
lret
inc
das
or
pop
iret
in
cs
faddl
sarb
cmp
sbb
dec
loop
aad
imul
push
push
leave
sub
mov
rcr
mov
iret
mov
das
cltd
or
sub
lret
inc
lss
outsb
pop
pop
and
clc
inc
pop
aam
sub
mov
dec
inc
adc
push
clc
insb
popf
jo
mov
int
mov
and
sbb
inc
sbb
or
fsub
je
jnp
add
addr16
lock
imul
mov
sahf
xchg
scas
mov
cmp
shlb
mov
faddl
out
dec
nop
aas
mov
xchg
cs
ss
dec
hlt
push
adc
fisttps
cmp
pop
loopne
out
xor
aam
inc
inc
loop
imul
jbe
cmp
cmp
roll
insl
xchg
cmp
imul
sub
mov
aad
imul
outsb
repz
cmp
push
mov
pop
xchg
hlt
mov
xor
movsb
jne
push
stos
mov
push
stc
into
push
fidivrs
movsl
inc
inc
inc
shrb
cld
les
xor
or
mov
and
mov
lea
out
xchg
addr16
mov
lcall
dec
insb
push
int3
push
in
mov
clc
subb
mov
xchg
out
pop
jp
sar
add
cmpsb
push
andl
popa
pop
xchg
pop
aaa
insl
jae
mov
daa
aas
cmpsb
cs
jnp
adc
push
js
std
sti
sbb
inc
std
add
rorb
mov
shlb
out
shrl
xchg
dec
push
mov
je
push
xor
je
in
inc
mov
repz
and
in
jg
call
pop
pop
fstl
shl
inc
xchg
or
addr16
or
cmp
sahf
sbb
mov
cmpsl
mov
push
je
jp
das
push
movsl
xor
mov
add
push
add
clc
mov
sub
pop
ss
adc
cmp
bound
mov
dec
subb
fwait
dec
stos
pop
aaa
push
mov
leave
and
daa
mov
test
push
mov
push
jne
mov
mov
fnstcw
pushf
popa
sbb
lcall
test
push
fdivs
and
inc
or
sub
lods
push
push
dec
out
stos
or
mov
push
movsb
lahf
icebp
scas
aas
ficoms
push
sbb
push
aas
repnz
mov
lea
dec
mov
lods
or
loop
fs
leave
sub
int
test
adc
pop
orl
push
loopne
jno
sti
jg
lret
loopne
bound
loop
cmp
js
jmp
loop
mov
mov
push
je
test
pop
jg
repz
orb
mov
mov
fisubl
push
pop
mov
out
sub
xor
ret
int
or
sarb
lret
add
scas
mov
out
inc
push
or
xchg
icebp
repz
jge
or
mov
sub
or
jmp
xchg
gs
fimuls
jp
ljmp
cwtl
fnsave
push
mov
push
add
es
stos
shl
xor
fs
shll
jbe
cmp
sub
add
out
adc
or
sbb
jp
fbld
aad
add
aam
sbb
test
dec
sbb
xchg
mov
xor
enter
mov
clc
push
dec
fs
das
push
mov
dec
in
xor
outsb
leave
test
mov
test
jecxz
stos
xor
xchg
push
lea
and
imul
out
sub
aaa
pop
adc
outsw
je
jnp
iret
lds
add
push
add
mov
sub
jl
sbb
pop
xchg
jmp
fcmovb
vcvtps2pd
mov
movb
jne
xchg
das
sahf
pushf
push
cmp
sbb
mov
adc
stos
test
inc
pop
pusha
xchg
sbb
movsl
dec
xchg
inc
push
xor
xchg
in
xor
stc
mov
adc
arpl
cmp
ljmp
mov
jg
out
pop
inc
xchg
aas
mov
inc
enter
sarl
movsb
jmp
test
mov
je
and
push
sarl
in
xor
mov
repz
mov
repz
bound
xor
out
lock
cwtl
adc
mov
pop
sub
mov
out
hlt
or
pop
sti
xchg
sub
call
add
das
cltd
and
stc
insb
loop
cmc
in
in
in
mov
fwait
xlat
aas
sti
pop
mov
scas
ficoml
mov
in
cmp
clc
push
inc
or
pop
mov
pop
je
lret
sub
fcoms
leave
and
das
xchg
xlat
dec
or
mov
in
mov
scas
lcall
pop
inc
pusha
lret
lods
push
jle
xor
sub
inc
push
sbb
dec
clc
mov
lock
in
push
js
cmp
cmc
les
dec
dec
outsl
je
or
testb
xchg
inc
dec
pop
push
test
push
lret
pop
and
loop
jb
cmpsb
mov
cmp
push
insb
cmc
nop
cmp
outsl
rcll
or
lahf
sub
or
pusha
mov
dec
in
xchg
adc
int
aaa
nop
aad
fiadds
mov
pop
adc
mov
pop
ficompl
jecxz
movsb
adc
mov
faddp
inc
push
pop
mov
push
fisubrl
into
mov
sbb
adc
inc
stos
std
dec
mov
xchg
xchg
jg
scas
repnz
cmpsb
rorl
popf
clc
mov
mov
or
lds
loopne
push
mov
loop
fists
jnp
stos
es
xchg
sub
mov
shrb
pop
jae
inc
call
dec
imul
and
jl
sti
sbb
push
ljmp
dec
inc
push
rcll
adc
mov
add
or
cmpsl
pop
addr16
inc
jne
add
ljmp
fldcw
and
and
int
xchg
arpl
dec
insb
popa
mov
ficomps
jbe
lahf
testb
dec
stos
pop
push
pop
sti
mov
les
mov
jne
pop
dec
pushf
xchg
add
dec
js
leave
pop
dec
dec
mov
sbb
push
push
or
push
and
jmp
cmp
lock
xor
lock
sti
jp
in
sti
add
sbb
inc
or
xlat
push
lea
shll
xchg
sar
cmp
stos
xchg
xor
adc
fidivs
jns
scas
imul
lock
mov
pop
fldcw
lahf
push
and
push
xchg
sub
fcoml
stc
icebp
cmp
xchg
pop
xor
push
arpl
stos
sbb
mov
jae
lea
and
sub
add
mov
in
cmp
int
push
into
test
jne
or
pop
scas
stos
lret
dec
dec
adc
sbb
cmp
cld
lods
sahf
push
rcrl
dec
cli
xchg
aaa
xchg
stc
ds
pushf
sbb
mov
xor
add
mov
lret
lahf
fcomps
mov
aas
imul
arpl
mov
movsb
cmp
push
adc
mov
jae
pop
mov
cmp
in
sub
mov
cmpsl
xor
mov
xchg
je
test
mov
hlt
sar
xor
add
inc
push
lea
jmp
ret
jmp
mov
cltd
mov
test
cli
pusha
and
push
jns
cmp
stos
xchg
sarl
loop
lahf
and
adc
and
mov
icebp
dec
sbbb
arpl
add
leave
call
push
dec
dec
xor
ret
mov
out
stos
mov
xchg
jbe
xor
pop
cmp
icebp
clc
idivl
std
test
xchg
jl
and
das
rcll
rclb
in
sub
mov
xchg
std
cmpsl
mov
xchg
dec
add
xchg
push
push
xor
add
jae
or
neg
mov
repnz
lret
xchg
roll
sbb
mov
fildl
sbb
mov
cli
jp
fcomps
jo
push
sub
inc
mov
scas
mov
rcll
aas
shrb
fsubr
arpl
jle
daa
push
aaa
pop
popa
lods
mov
imul
aaa
sbb
push
lcall
pop
ljmp
ror
push
sub
lock
outsl
mov
jae
fs
add
adc
out
xor
mov
inc
add
sub
mov
imull
mov
leave
sub
sbb
push
or
inc
xchg
repz
lods
sub
sub
mov
mov
jo
iret
lea
in
dec
mov
scas
jge
movsb
mov
jp
jns
out
fnsave
cmpb
push
sahf
xor
mov
jae
aaa
pop
dec
mov
jbe
fbld
scas
mov
jns
inc
mov
dec
adc
push
sub
and
and
data16
daa
cltd
xlat
pop
jb
fcmovnbe
mov
out
mov
addb
pop
jb
fisttpll
add
pop
mov
push
mov
fstl
adc
ret
add
ret
mov
dec
pop
out
fwait
and
inc
int3
sbb
lds
add
std
jp
xchg
addr16
ljmp
cmpsl
mul
xor
rcrb
xchg
mov
push
sub
mov
push
std
pop
movsb
mov
outsb
push
ret
lds
into
mov
outsl
pop
sub
cmp
jo
dec
fmuls
mov
into
clc
aam
rcll
mov
mulb
and
sub
outsl
in
lea
inc
adc
hlt
call
arpl
jge
movsb
xchg
aad
dec
inc
mov
mov
icebp
pop
jb
popa
lcall
sbb
int3
push
sub
xchg
pusha
fwait
mov
inc
mov
dec
xor
ret
pushl
iret
movsl
or
mov
lods
or
mov
fdivrl
mov
and
xor
rcrl
int
les
pop
int3
dec
mov
mov
out
call
out
mov
push
dec
rcrb
pop
fidivrs
push
or
or
push
stos
mov
mov
adc
stos
ljmp
adc
pop
pushf
adc
or
jns
mov
adc
out
push
add
aaa
test
fxch
sub
ljmp
daa
pop
fsubl
ljmp
sbb
fdivs
push
pop
daa
mov
xchg
fcoms
add
mov
fistps
in
cmpsb
je
test
aas
push
add
add
add
mov
mov
xchg
fdivrs
dec
daa
cmp
loop
fcmove
and
dec
jmp
jg
and
std
jbe
or
xchg
add
popa
jae
sbb
andb
dec
push
mov
mov
jnp
pop
add
mov
out
movntq
int
xor
xchg
push
addb
jmp
movsl
inc
imul
cltd
decl
mov
add
sub
in
je
stos
das
xor
mov
repz
and
ja
cmc
and
cmp
loopne
mov
rcrb
adc
icebp
inc
and
lret
pop
sbb
mov
sbb
into
loope
sbb
fnstenv
testl
imul
cmp
add
fmuls
xor
jl
and
xchg
out
xchg
pop
std
insl
mov
jnp
aas
xchg
or
pop
mov
cli
call
fildl
xor
stos
mov
or
pop
sub
loopne
in
jmp
ja
mov
add
in
xchg
mov
sbb
rcll
or
daa
cltd
pop
clc
lret
mov
push
je
aaa
sbb
fistl
adc
pop
pusha
or
outsb
adc
test
clc
lods
push
sub
sbb
sub
bound
cmp
daa
ljmp
icebp
mov
daa
mov
mov
xor
xor
inc
inc
or
sbbl
ret
stc
pop
xchg
sbb
clc
iret
test
sti
pop
cwtl
pop
enter
push
mov
test
lret
lock
insl
sti
cli
inc
daa
add
bswap
cmp
loope
cwtl
mov
and
stos
mov
out
xchg
cld
cmpsl
push
mov
or
mov
and
fldenv
loop
std
cli
or
pop
jl
in
jmp
jns
jecxz,pn
outsl
lods
dec
xor
bound
push
jmp
inc
pop
cmpsl
imulb
stos
lret
jb
loopne
loope
add
xchg
dec
sub
cmpsl
pop
fsubp
inc
xchg
cld
lods
aaa
mov
cs
cmc
sbb
jmp
jle
out
push
sbb
lcall
leave
sbb
sub
ss
rcrl
sahf
fidivrl
std
shll
or
xor
loopne
sbb
mov
cmp
out
cmp
je
das
jae
stos
push
cmpsl
xchg
jns
repnz
jmp
aad
and
fistps
mov
test
mov
movsb
mov
mov
xor
test
test
sti
pop
and
push
mov
mov
icebp
cmp
add
cwtl
in
push
jmp
ret
cmp
cmp
dec
jo
je
lods
andl
mov
push
loope
xor
mov
mov
sbb
fadd
mov
adc
sub
inc
test
lret
test
mov
mov
dec
lret
xchg
outsb
pushf
cmp
in
nop
jge
push
js
loope
sub
popl
mov
out
je
lock
push
addr16
jo
int
jmp
mov
xchg
dec
push
outsb
cwtl
inc
dec
popa
aam
das
lds
ss
insl
push
jmp
mov
pop
sti
mov
in
int3
mov
insb
and
adc
or
pop
test
adc
and
ds
fstpl
repnz
mov
mov
call
xchg
loop
daa
dec
add
shlb
fidivrl
bound
or
push
in
out
mov
hlt
movl
mov
jb
sub
test
add
or
jmp
pop
push
mov
mov
dec
adc
fwait
std
dec
pop
jp
push
data16
fcmovu
lea
jne
test
mov
imul
or
xor
fdivrs
or
add
insl
cmp
adc
cmpsb
popa
lret
movsb
sbb
mov
dec
not
xchg
jg
in
jns
add
mov
mov
dec
inc
mov
fisttpl
or
jge
lds
jmp
push
add
shll
sub
or
adc
dec
cmpsl
pop
aad
int
mov
adc
ja
out
fsubrl
lcall
repz
arpl
sbb
lret
subl
mov
inc
xchg
mov
cmp
mov
scas
sbb
leave
push
jo
test
aas
outsb
cmc
add
or
and
call
mov
mov
test
mov
xor
mov
cli
mov
cmp
mov
mov
pop
push
dec
pop
inc
push
xchg
push
lods
inc
sub
mov
jb
lock
sub
test
lds
xchg
and
or
imul
dec
push
jle
fstl
insb
push
xor
pop
dec
lret
cmc
out
add
mov
cltd
inc
xorb
data16
xchg
adc
fsubs
fwait
mov
inc
rclb
clc
xchg
mov
loopne
jbe
cwtl
mov
jl
mov
cwtl
inc
out
pushf
push
jecxz
and
clc
push
mov
push
fsubrl
imul
mov
jmp
push
rorl
and
je
jo
popa
pop
jmp
mov
cltd
adc
lds
in
xorb
cmp
aam
sub
xchg
das
sub
and
lock
sub
add
cmp
test
sbb
cmp
xlat
int
je
rolb
jp
mov
inc
addr16
movsl
xchg
push
cmp
push
dec
or
push
mov
xor
mov
bound
shrl
test
sub
inc
or
pop
aaa
pop
cltd
arpl
jg
shll
jnp
or
sub
pop
jecxz
daa
cmp
movsl
call
call
inc
and
pop
aaa
in
stos
leave
or
out
dec
jnp
mov
out
mov
sub
in
out
mov
ret
enter
push
sub
mov
popa
stos
rcl
xor
in
dec
addl
pusha
stos
mov
cmp
and
mov
lock
and
test
lods
mov
cmpsl
pop
fdivrs
popa
sti
xor
fisubrs
jne
arpl
adc
add
jle
or
sbbb
or
fprem1
mov
fcomps
push
lahf
xchg
test
dec
stos
or
in
aad
sti
pusha
js
fcmovu
dec
pop
flds
in
inc
xchg
add
mov
popa
xchg
ds
or
mov
rolb
xchg
shll
imul
mov
xchg
xor
mov
xchg
cmp
jmp
icebp
pop
mov
sbb
int3
xor
mov
das
clc
fsubs
inc
sbb
fstpt
jecxz
xchg
aas
sbb
shl
shll
scas
mov
fistps
test
es
adc
mov
sub
sub
repnz
dec
outsb
movsl
addr16
pop
jb
sub
pop
into
sub
jl
add
test
es
dec
shll
ret
xor
fisubrl
js
outsl
cmc
mov
scas
inc
cmc
sar
sbb
pop
scas
pushf
cmp
jp
and
flds
xchg
shrl
pop
data16
jae
aad
popf
or
mov
loope
into
mov
mov
inc
fsubl
xchg
ds
xor
xchg
fwait
flds
cmpsl
inc
jae
and
dec
mov
movsl
inc
adc
scas
into
pop
decb
adc
and
jp
rcl
xchg
sub
adc
rcrb
push
divl
sbb
inc
addr16
mov
adc
insl
mov
mov
push
lret
push
jo
sbb
inc
jmp
jb
pop
je
hlt
sar
dec
push
cli
push
ds
sub
stos
movsb
mov
in
adc
pop
daa
mov
jg
scas
ljmp
pop
adc
sbbl
add
mov
lods
cmpsb
popa
xor
test
adc
jmp
aad
bound
dec
inc
xor
jecxz
dec
rcrl
jmp
jbe
mov
mov
jmp
push
mov
leave
scas
mov
adc
cmp
jo
inc
mov
sub
jge
cwtl
fstl
cmp
pop
shll
mov
sub
sub
push
xchg
mov
mov
ficoms
add
jge
cltd
test
and
jae
lret
dec
mov
and
bound
xor
js
nop
adc
mov
mov
lret
push
sub
lds
in
outsl
int3
dec
fistl
fsubp
sarl
daa
mov
movsb
mov
sti
pop
imul
movsb
sub
stos
cmpsl
sbb
xlat
xor
inc
push
insb
sub
lahf
not
or
ds
adc
idiv
loop
push
mov
filds
or
loopne
sub
add
add
xchg
dec
inc
call
push
jbe
push
push
int3
out
fcomps
lret
and
cmp
aam
push
lods
cmp
sub
sub
adc
loop
outsb
loope
mov
fsubrl
repz
or
dec
xlat
and
rol
rorb
dec
addr16
test
repz
out
add
je
mov
jle
hlt
roll
xor
mov
push
mov
adc
movsl
xchg
enter
mov
jne
call
inc
jne
and
out
subb
sub
inc
and
loop
and
jmp
jmp
sbb
pushl
cld
push
test
lret
je
dec
jl
arpl
sbb
push
jb
popa
aaa
or
ljmp
xchg
mov
jne
cs
push
sbb
out
mov
inc
cmp
cmc
js
pop
jo
xchg
stos
mov
repnz
pop
jecxz
cmp
mov
pop
jmp
cmp
mov
mov
aaa
es
out
cmp
repz
jb
mov
dec
bound
gs
ret
iret
adc
lret
add
loope
pop
or
loop
cmp
xor
lods
outsl
mov
andl
cmc
add
aas
mov
flds
stos
ret
pop
jns
in
pop
sbb
cmp
push
adc
sbb
pop
cmp
mov
and
push
inc
jno
cmc
cmp
loopne
jl
arpl
pop
lock
fisttpll
mov
adc
hlt
mov
mov
xchg
or
xlat
fimuls
shr
stc
insl
push
mov
es
int
push
adc
and
push
jne
pop
loope
xchg
xchg
movsb
fisubrl
jg
sbb
jb
add
mov
fs
or
push
notb
jno
mov
sarl
loope
fdivl
xlat
mov
push
add
jns
xchg
jo
ljmp
les
cwtl
sub
and
ljmp
fsubs
hlt
add
cld
in
jnp
mov
pop
mov
in
lcall
dec
popf
cmp
jnp
pop
pop
mov
enterw
sub
pop
ja
insl
push
daa
mov
ret
add
jmp
fldenv
xor
dec
dec
addr16
sub
out
leave
push
inc
and
xchg
xchg
xchg
loope
lcall
gs
lea
int3
sti
push
iret
mov
addr16
jnp
fwait
test
in
idivb
sub
imul
mov
jae
or
inc
mov
xchg
mov
lret
pop
mov
sub
les
aad
or
fwait
outsb
aas
or
lods
fisttps
jns
das
sbb
addr16
les
andl
add
cmp
icebp
jp
xor
lods
pop
ss
or
mov
popf
das
mov
add
rol
shl
or
and
inc
sub
outsb
and
or
hlt
xchg
jge
out
lds
mov
nop
je
lret
pop
mov
or
dec
cmp
add
and
sti
adc
std
stos
subb
lea
fimull
xor
ja
dec
cltd
in
cmp
je
sbb
std
mov
jecxz
cmpsl
and
pusha
fdiv
aaa
mov
jg
in
repz
ss
pusha
fisubrl
jle
repnz
dec
push
xorl
sbb
jmp
cmp
jmp
add
or
mov
movsb
push
jb
stos
lret
mov
and
rorb
out
xchg
jmp
std
pop
into
mov
mov
into
xchg
fwait
mov
jb
pop
ljmp
dec
pop
mov
test
mov
or
jp
fsubp
and
inc
mov
das
call
cltd
jl
js
mov
sub
popl
fcmovnb
sbb
icebp
jns
dec
push
aam
cltd
mov
jp
or
dec
lods
fs
repnz
jno
mov
dec
push
scas
mov
xchg
mov
icebp
mov
ficoms
dec
fiaddl
in
mov
neg
push
aam
sahf
mov
jg
jo
mov
movsl
jb
or
inc
mov
mov
inc
mov
dec
mov
cltd
scas
pop
imull
daa
lods
push
aas
push
jae
add
das
divb
das
in
punpckhwd
scas
jbe
xlat
inc
mov
mov
jbe
cmp
test
or
daa
add
frstor
call
sti
ds
and
push
jg
js
lret
ss
sbb
pop
and
or
decl
addb
jl
stc
mov
dec
in
mov
js
mov
ljmp
inc
inc
fcoms
xchg
jne
cmp
aaa
mov
pop
sbb
rcll
xchg
inc
in
lods
pop
pusha
pop
xor
push
in
push
imul
cmpsb
repnz
dec
shl
fcomps
jge
insl
sahf
xor
shll
lret
cs
sub
icebp
jnp
ret
mov
sbb
jg
and
jo
xchg
bound
insl
outsl
and
sbb
iret
inc
mov
ljmp
xchg
movsl
xor
shl
fldl
mov
ds
jmp
cld
into
imul
addr16
mov
mov
push
cmp
cld
mov
test
popf
mov
jnp
in
sbb
fs
or
inc
mov
lcall
sbb
dec
pusha
punpcklbw
jbe
cmpsl
rolb
adc
xchg
outsl
pushf
daa
sbb
into
call
scas
loop
xchg
xor
mov
mov
fstps
inc
je
dec
scas
pop
push
sub
sbb
int3
lcall
mov
dec
xchg
push
jbe
aad
adc
test
pop
cmp
push
into
jmp
cmp
aam
pop
and
mov
mov
and
loopne
adc
mov
mov
lret
push
push
gs
outsb
pop
adc
addr16
aas
rcr
sub
sbb
jg
jae
and
mov
sbb
cltd
ja
and
add
jns
add
add
lret
or
mov
aam
icebp
jne
ljmp
mov
add
icebp
push
out
imul
xor
sbb
lahf
pop
outsl
nop
pop
adc
adc
stos
adc
stc
lock
adc
sarl
call
mov
xor
lcall
lods
mov
push
sbb
fs
stos
push
push
inc
packssdw
std
adcb
add
xor
cwtl
call
pop
mov
test
xlat
repz
ret
jg
lds
rclb
add
loope
sub
rcrl
pop
mov
mov
adc
int
cmpsb
pop
mov
jp
imul
orl
push
leave
icebp
mov
pop
xchg
daa
insb
in
add
lods
leave
iret
icebp
sub
xor
cli
lock
adcl
sbb
sub
mov
adc
iret
out
fs
mov
mov
int
adc
pusha
cmp
rcl
sub
and
test
in
clc
cmp
in
fdivl
ficompl
aaa
frndint
dec
test
cmp
jnp
in
push
jnp
testb
sub
adc
mov
add
and
adc
mov
mov
jnp
call
mov
dec
outsl
inc
test
jl
cli
leave
or
add
bound
inc
pop
mov
pop
fdivp
fsubs
pop
jecxz
mov
loope
sti
jle
loop
add
into
and
sub
dec
mov
mov
mov
stc
xchg
inc
push
fdivrl
pop
pop
jbe
push
xor
push
imul
je
std
movsb
andb
fcomps
push
cmpsl
adc
xchg
pop
jg
out
add
sub
aam
lahf
sti
xchg
xchg
cmp
fadd
js
or
sub
rolb
enter
insl
xchg
popf
or
int
jne
push
cmpsb
pop
push
mov
xchg
jns
lret
jb
add
test
ja
jnp
jne
push
jbe
jp
sub
adc
cmp
repz
lret
pushl
push
shll
hlt
xchg
scas
cmp
out
inc
ss
pop
xchg
fildl
mov
lods
jo
mov
cmpsl
dec
loop
mov
xchg
es
pop
push
ja
adc
dec
dec
scas
inc
jg
das
push
inc
jb
adc
xchg
xchg
push
stos
xchg
jno
push
mov
mov
adc
sub
lock
mov
push
repz
pop
cmp
rcrl
clc
push
mov
mov
add
push
repz
popf
jbe
rorl
mov
lods
mov
cmp
loop
outsl
mov
jae
popf
push
lods
fsubl
scas
mov
mov
sbb
fdivr
testl
test
mov
insl
mov
fsts
xor
aaa
jle
inc
outsb
xchg
pop
sbb
mov
lock
repnz
xchg
rcr
fisubs
or
std
xor
clc
cld
lahf
in
mov
mov
sbb
xchg
sbb
std
mov
dec
mov
ja
add
mov
dec
dec
mov
out
mov
xchg
cmp
mov
shll
push
lcall
mov
dec
adcb
imul
xor
in
cmpsb
push
das
dec
test
loopne
add
rol
test
stc
sbb
xor
gs
lcall
inc
fidivs
push
cmp
mov
xchg
pop
mov
inc
leave
xchg
adcl
dec
inc
jg
add
xor
test
aam
pop
roll
or
xchg
ss
jo
sub
or
xor
sub
xchg
mulb
ror
enter
insl
mov
mov
jmp
sbb
aas
xchg
add
aas
lret
sahf
or
jg
rcll
test
pop
and
inc
mov
lea
mov
jle
inc
pop
or
or
mov
cmpsl
sahf
sbb
pop
int3
incl
mov
aam
sub
push
cmp
mov
mov
icebp
out
rcrb
push
sub
mov
add
in
lods
dec
icebp
fisubs
adc
mov
xchg
xor
fdiv
out
xchg
pop
mov
cld
loope
jb
or
mov
imul
fdivrl
xchg
mov
mov
ret
lahf
enter
adc
nop
mov
xor
lcall
repnz
push
shlb
repz
pushl
sub
aaa
xchg
imul
repz
repnz
cmp
mov
push
xor
jbe
jg
je
mov
aas
setno
cmp
xchg
xor
dec
test
inc
out
mov
pop
movsl
out
notl
pushf
sbb
jb
and
xchg
fsubr
adc
pop
xchg
mov
imul
shll
push
or
sub
inc
in
mov
mov
mov
inc
jg
mov
pop
xchg
pusha
cwtl
inc
aad
and
cli
pushf
ret
sbb
aam
das
sub
js
movsl
mov
les
subl
ljmp
ss
sti
in
pop
mov
mov
in
lea
in
push
mov
mov
in
add
or
mov
clc
pop
sub
lds
test
std
pop
out
xchg
pop
adc
cmp
mov
sbb
cmc
xor
lret
add
pop
movsl
mov
imul
pop
pop
es
push
push
sub
lea
jg
fcomp
cmp
mov
push
daa
and
pop
enter
xor
or
add
pop
out
pushl
sar
imul
mov
cld
loopne
jb
jp
jnp
xor
xor
cwtl
test
mov
roll
movb
dec
test
sbb
int
fnsave
jne
ljmp
pop
or
mov
xchg
aam
fstl
mov
pop
dec
dec
les
scas
lds
ret
xchg
xor
fcoms
lods
sub
adcl
pop
addr16
fldl
inc
or
stc
or
sbbb
xchg
add
fwait
pushf
add
xchg
out
pop
jle
cld
test
imul
pextrw
mov
push
or
popa
dec
pushf
out
loope
lcall
scas
jb
fs
xchg
jp
add
rclb
lret
insb
dec
rcl
ret
loope
sbb
loope
sbb
mov
adcl
test
xchg
and
loop
lods
lcall
insl
scas
aam
xchg
cmpsb
cmp
pop
outsb
lcall
es
sarl
inc
ror
sahf
scas
cmc
sub
ljmp
andb
pushf
sbb
aam
fisttpll
xorl
das
push
xchg
arpl
sbb
cmpsl
inc
and
fdivl
dec
mov
pop
or
mov
cli
xor
stos
paddusb
outsl
inc
fstpl
jae
pushf
mov
mov
out
cmp
xchg
int3
fnstenv
sahf
dec
dec
xchg
cld
xor
out
inc
cmc
daa
in
jb
inc
jl
outsb
stos
arpl
sahf
dec
xchg
aaa
mov
pop
punpcklbw
push
inc
mov
aad
nop
inc
in
jb
xchg
cmpb
je
add
sub
fs
lods
movsl
loopne
lcall
ret
pop
inc
repnz
mov
sbb
mov
push
pop
addr16
lock
or
imul
int
int3
jb
lods
pop
and
fistl
ret
sub
add
xlat
fiaddl
cmp
and
xlat
adc
arpl
movsb
adc
test
stc
adc
insl
iret
ljmp
cmp
xor
sti
pop
mov
frstor
shr
inc
push
sbb
mov
sbb
out
pusha
cmp
loope
xchg
cmp
std
mov
push
ret
adcl
jae
add
sahf
mov
repnz
jb
fdivl
rcll
leave
clc
lret
mov
push
adc
into
pop
aaa
ljmp
fs
jp
pop
jecxz
inc
add
mov
out
loope
jmp
pop
cmp
popa
bound
lret
lret
call
nop
jne
outsb
popf
in
in
lret
add
push
testl
rcrl
jbe
sub
mov
add
inc
xor
pop
aas
in
fcoml
cmp
xorl
pop
jle
mov
sbb
pop
aam
xor
cli
outsb
insb
sub
cmp
call
mov
adc
inc
adc
jo
cmp
or
mov
mov
ficompl
pop
imull
mov
lea
in
fnstcw
ret
sub
or
movsb
call
xorl
aad
cmp
mov
in
or
fldl
sbbb
add
popf
movsl
sahf
loopne
sar
pop
add
shll
cmp
in
leave
mov
cmp
xchg
sbb
add
inc
cli
pop
sbb
aam
ljmp
rcrb
dec
adc
xchg
aas
stos
xor
cmp
jmp
xchg
mov
sub
sub
xor
inc
lahf
int3
pushf
out
or
sub
cld
xlat
push
jo
sub
das
dec
shrl
scas
cs
mov
or
dec
push
movsb
dec
mov
outsb
lea
rcl
and
call
xchg
dec
sub
out
in
mov
lods
mov
add
dec
cli
and
pop
push
addl
mov
jmp
add
jne
xor
sub
imul
cld
popf
xor
push
xor
in
mov
xor
je
mov
shll
sub
inc
or
imul
int3
or
add
mov
aad
stos
outsb
cld
pop
pop
inc
fiaddl
test
pop
sarb
in
sbb
das
insl
mov
sub
xchg
in
jge
sub
mov
inc
stos
call
aam
imul
test
ficompl
fsubrp
add
and
jg
int3
inc
cli
nop
in
xlat
or
insl
das
enter
fwait
or
xchg
loop
xor
xchg
jmp
or
xor
insl
pop
and
mov
js
or
mov
scas
pop
sbb
cmp
insl
add
lret
mov
jbe
cltd
out
mov
lds
push
inc
cmpsl
rcll
insl
xchg
dec
dec
in
push
jo
mov
push
pop
add
jne
adc
xchg
xchg
mov
stos
adc
cmp
xchg
mov
mov
movsb
cmp
test
or
das
push
inc
testl
das
add
jecxz
rol
xchg
addr16
jo
mov
pop
ret
insl
push
push
scas
mov
sbb
popf
sub
jl
mov
adc
or
or
xchg
sub
inc
call
jmp
jo
sub
xlat
push
sbb
and
jo
push
and
and
adc
aaa
imul
mov
vpunpckhqdq
xchg
popa
cwtl
fldenv
xor
add
dec
daa
inc
add
mov
scas
or
sbb
es
adc
xchg
push
push
jne
mov
push
pop
xchg
push
sub
cwtl
xchg
lahf
adc
pop
jmp
shlb
movsl
inc
aam
push
dec
lret
adc
fimull
std
mov
xlat
adc
jmp
insb
push
andl
inc
fwait
test
xchg
add
out
mov
mov
sbb
shrl
sub
fimull
lcall
test
enter
add
sub
jb
cmp
jp
adc
jbe
pusha
or
cmp
movsl
mov
idivl
call
repnz
test
enter
xchg
adc
lea
pop
inc
xor
mov
sub
adc
into
inc
mov
shrb
or
pop
pop
loope
hlt
or
aaa
mov
dec
stc
inc
daa
or
xor
inc
gs
push
les
dec
shlb
pop
cmpsl
idivl
imul
addl
repnz
popf
push
push
sbb
xor
push
xor
pushf
xor
int3
mov
push
mov
in
imul
fs
stos
cmp
sub
lret
sbb
addr16
push
inc
icebp
fsts
sbb
mov
jnp
lahf
xchg
test
dec
fadds
xor
lock
imul
test
cmp
mov
mov
dec
cmp
aaa
outsl
sbb
push
jne
popa
js
cmp
or
mov
fstpl
lret
insb
fldenv
inc
fistl
pop
lods
mov
pop
sub
xchg
sbb
push
or
jl
inc
imul
pop
shll
push
sub
hlt
in
pop
cmp
insb
mov
xchg
stos
and
pop
mov
je
std
movsb
fs
inc
cmpsb
adc
aas
mov
enter
aad
mov
push
xchg
enter
push
dec
daa
lds
add
andl
mov
mov
ret
out
and
out
cld
and
sub
sub
xchg
aad
xor
in
xor
mov
push
dec
testb
mov
addb
and
call
lcall
out
stos
push
mov
test
aas
loope
cmp
pop
out
inc
inc
jnp
mov
fwait
and
push
pop
fsubrl
scas
mov
pop
dec
jl
add
cmp
xchg
cld
adc
sub
cmpsl
scas
es
pop
fisubs
out
das
push
cwtl
sahf
pusha
jns
sub
test
in
roll
insl
arpl
mov
sub
xchg
dec
imul
push
adc
sahf
test
rolb
cmpsb
mov
pop
or
out
inc
adc
push
pop
adc
push
push
lds
jle
or
pop
movsb
inc
fisttpl
cs
sub
test
lods
xchg
cmp
popa
test
sti
mov
fdecstp
testb
test
cmp
mov
ja
dec
hlt
outsb
popa
fiaddl
rolb
jo
or
jns
lods
adc
xchg
pop
xchg
movsl
xorl
imul
jnp
xchg
push
cmp
push
sub
xor
ds
pop
cmp
aam
cmp
or
jne
stos
push
push
xor
fiadds
pop
dec
out
jg
mov
out
loope
xchg
movsl
ds
int
scas
flds
adc
in
or
xlat
add
dec
test
popf
and
jns
fstpl
or
pop
aad
rcll
jne
je
fisttpl
out
out
xor
pop
in
dec
xchg
inc
mov
leave
into
lds
imul
mov
data16
add
push
adc
jbe
sbb
loop
andl
call
push
jle
xor
repnz
mov
xorw
in
cmpsl
sbbl
loopne
pop
into
fdivr
add
push
loopne
adc
sbb
jmp
fisttpll
call
test
dec
pushf
or
mov
sub
sub
dec
ret
out
nop
pop
loope
in
push
pop
aas
mov
adc
adc
test
pop
cltd
ret
sarl
dec
dec
das
test
inc
in
dec
sbb
pop
mov
add
push
mov
mov
pop
push
xor
pop
sti
jl
adc
dec
pop
or
int3
pushf
ret
popa
stos
and
pop
call
or
ljmp
push
shl
sub
divb
call
jle
xchg
push
push
imul
call
sub
inc
in
pusha
hlt
outsl
roll
and
js
adc
and
out
repz
sti
enter
leave
cmpsb
jno
jo
loop
loopne
enter
pop
gs
int3
push
push
jno
pop
leave
push
xchg
out
fwait
mul
push
repnz
cwtl
rcrb
mov
cli
add
and
jp
add
jo
mov
out
mov
dec
ret
repz
mov
loope
fstl
adc
cmp
outsl
or
mov
jne
fildll
adc
popf
jp
sbb
jle
pushf
lcall
inc
dec
lock
push
mov
fildll
sub
dec
sub
adc
dec
xchg
add
push
xchg
dec
dec
push
je
pop
inc
and
xchg
mov
lret
cmp
addb
pop
mov
hlt
into
jns
or
xor
xor
lock
lret
dec
frstor
push
addr16
pop
xor
jmp
mov
std
add
addr16
mov
adc
add
mov
enter
shrl
cmp
incl
mov
jmp
push
jmp
pop
ret
sub
nop
les
test
enter
jne
xchg
push
loope
add
rcrb
std
mov
les
mov
outsl
push
inc
pushf
push
gs
arpl
or
push
jmp
jecxz
scas
ficompl
mov
cld
xchg
sbb
leave
jl
rolb
jo
in
sbb
push
or
push
xchg
add
dec
out
dec
enter
pop
fidivrs
shrb
push
xchg
shlb
shr
dec
inc
hlt
push
push
pop
inc
sbb
pop
sub
movsb
mov
repnz
addl
js
mov
xchg
jle
pop
push
aas
jecxz
sbb
in
cmpsl
pop
loopne
xor
dec
and
or
fmul
add
pop
xchg
hlt
xchg
negl
ficoml
imul
sub
cmp
push
inc
scas
sub
inc
mov
mov
mov
fisubs
xchg
adc
sub
fcmovbe
out
inc
jl
movsb
sbb
adc
imul
daa
sub
cltd
decl
sbb
mov
sub
and
inc
or
jmp
mov
imul
idivb
push
sbb
inc
pusha
fwait
or
aad
arpl
xchg
cld
fistpl
int3
jmp
xor
cltd
ja
std
cmpsb
imul
mov
pop
and
pop
and
inc
xor
rolb
inc
movsl
push
xchg
pop
mov
outsb
aam
xchg
iret
repnz
mov
push
cmp
fnstenv
xchg
test
inc
das
jo
jns
push
inc
mov
ret
fsub
out
ret
rcrl
pop
stos
push
push
mov
test
int3
mov
lcall
inc
setbe
rcrb
push
cltd
and
xor
je
inc
dec
sahf
sub
sbb
lcall
lahf
shrb
mov
adc
mov
js
fldcw
outsb
dec
cmpsb
ds
xor
ds
jmp
jl
cmpsl
cld
aad
and
test
popf
mov
adc
xchg
adc
cmp
xchg
ss
js
ss
cmp
cs
push
mov
fldenv
pop
hlt
mov
js
cmpsl
clc
pop
in
popf
push
call
push
jns
mov
lret
pop
push
dec
and
scas
out
mov
push
ljmp
call
add
push
mov
jo
xchg
inc
pop
out
add
imul
jle
xchg
adc
adcb
test
jle
test
shll
jae
xor
les
inc
jo
and
popf
ror
inc
in
xchg
pop
or
add
in
push
sbb
add
mov
inc
and
sahf
mov
jne
lock
dec
and
in
sbb
hlt
stc
or
mov
mov
push
mov
ret
frstor
lahf
sti
insl
jno
or
adc
sub
sbb
pop
xchg
sbb
cs
psubd
inc
dec
imul
push
pop
jg
cmpsb
xor
lret
adcb
xabort
adc
subl
shrl
jo
push
aam
pop
add
and
iret
jo
ret
in
mov
out
push
push
jae
popa
fmuls
cmp
icebp
mov
clc
mov
lcall
add
mov
pushf
mov
rorl
rep
push
or
pop
pop
lret
pusha
xchg
hlt
out
in
lahf
mov
fsubrl
cmpsl
lret
rclb
jp
sbb
mov
push
inc
xchg
mov
push
xor
lds
hlt
mov
adc
mov
dec
nop
sub
and
out
ljmp
out
insb
cltd
cmpsl
cmp
ficompl
in
popf
jl
dec
stc
aam
pusha
nop
ljmp
mov
xchg
je
sub
inc
pop
jae
iret
in
rorl
xchg
pushw
adc
outsl
pop
notl
call
sub
mov
lods
xor
int3
das
pop
fwait
fldenv
clc
test
test
cmp
mov
cltd
sub
test
push
mov
mov
arpl
jne
test
cmp
xchg
and
jmp
je
subb
lahf
pushf
sbb
test
stos
and
dec
mov
push
mov
in
leave
inc
push
pop
push
cmpsl
sbb
lcall
das
inc
repz
jecxz
ret
xchg
cmp
gs
push
sbb
out
mov
test
outsb
adc
clc
push
out
int
dec
push
and
cmp
sbb
xchg
jnp
push
sbb
mov
es
arpl
mov
and
repnz
jmp
dec
cwtl
or
mov
xor
ret
stc
ljmp
cld
hlt
dec
out
xor
inc
pop
mov
add
push
lods
addb
daa
push
ja
or
pop
ret
pop
sbb
inc
xchg
cmp
push
xchg
imul
fbstp
and
xor
sti
dec
lods
xchg
lea
outsb
ja
dec
pop
aam
das
sub
dec
pop
fnstsw
hlt
xchg
addr16
push
add
cmpsl
scas
jl
xor
jg
pop
add
das
int3
movzwl
or
out
cmp
mov
jbe
sbb
push
sbb
sub
or
sbb
sub
test
jg
es
aaa
push
lods
decl
or
pop
mov
mov
movsl
frstor
das
stos
and
nop
push
in
loop
dec
fldt
ljmp
leave
scas
sub
sbb
mov
clc
dec
mov
jnp
adc
cmpsb
mov
sti
mov
mov
imul
neg
fprem1
xchg
mov
inc
int
fldt
loope
push
jo
nop
add
push
mov
imulb
xchg
sub
sub
mov
or
xor
leave
jecxz
rorb
jp
pushf
add
in
xlat
mov
sahf
stos
mov
mov
out
sti
lods
adc
jle
push
scas
xor
or
clc
jae
repnz
popa
push
mov
iret
inc
cmp
lret
and
xchg
sub
dec
subb
popf
mov
sbb
sub
xchg
mov
out
es
in
and
insb
popf
rep
movsl
leave
andl
push
jno
dec
in
jnp
mov
int
jae
loopne
pop
pop
mov
inc
popf
xor
push
push
add
adc
nop
jecxz
pop
mov
and
testl
pop
aad
mov
fists
fisubrs
scas
cmp
popf
ss
xchg
sbb
cmp
push
mov
cmc
push
mov
rcr
loope
push
add
mov
scas
cwtl
stos
pmulhuw
xchg
or
xor
pusha
inc
test
popf
fwait
arpl
fistps
mov
movb
imull
ja
mov
jge
es
popf
dec
stos
push
ljmp
push
add
in
sbb
test
fmul
cmp
fs
movsl
in
lock
dec
dec
inc
pop
lahf
std
push
imul
jo,pt
ret
sub
push
cld
insl
xchg
mov
lret
push
ror
jno
xor
stos
shll
sub
in
outsl
sbb
mov
mov
mov
sbb
adc
test
xorb
jo
subl
mov
xor
jl
push
pushf
or
lret
push
push
jle
call
ljmp
inc
sub
pop
lahf
roll
mov
jns
mov
push
outsb
jne,pn
imul
into
mov
xchg
cmpsl
or
shlb
ret
inc
lock
sbbb
jno
and
inc
add
add
mov
lret
mov
inc
clc
xchg
push
or
lret
scas
lcall
mov
sbb
iret
rorl
leave
lods
push
dec
pop
int
push
iret
movsl
dec
xchg
lea
pusha
mov
scas
cmp
dec
nop
mov
out
shlb
jnp
subb
mov
push
test
push
pop
cmp
jnp
cli
repnz
xor
inc
rcrl
cmp
xchg
and
jle
mov
leave
in
mov
pop
mov
cmpsl
inc
mov
scas
lret
ret
loop
out
jl
add
inc
popf
popf
aaa
aas
rcrb
xchg
and
ds
xchg
loope
test
mov
sub
sbb
xchg
nop
jp
add
inc
cmp
ret
mov
pop
xchg
mov
pop
push
shl
and
mov
and
iret
scas
and
mov
ds
xor
arpl
daa
dec
fwait
cwtd
xchg
jne
dec
pushf
ja
sahf
jns
fwait
aad
sbb
popa
jbe
leave
mov
stos
sbb
aaa
pop
repz
mov
cld
jo
sbb
bound
mov
test
lret
enter
cmp
out
and
test
mov
in
lock
and
cs
call
sub
adc
fwait
adc
scas
cwtl
out
test
cmc
and
lret
jp
enter
std
into
loope
lret
mov
sbb
dec
shlb
cli
daa
xlat
xchg
and
mov
test
rorl
rol
call
adc
jecxz
mov
inc
or
fnstsw
lods
dec
sub
gs
push
aas
fwait
jg
and
sbb
adc
icebp
adc
leave
dec
mov
cmp
stos
xor
pop
jp
je
or
ret
jg
jb
xchg
dec
xchg
call
test
sub
pop
fadd
xchg
lods
adc
cmp
mov
and
push
arpl
nop
mov
dec
mov
jnp
sub
fildll
mov
xorl
jnp
pop
insb
movsb
adc
pop
pop
fs
xchg
test
push
pop
stos
out
jne
fs
inc
sub
pop
std
shll
daa
test
ljmp
sub
push
out
push
addb
mov
cmp
mov
xor
sub
pop
imul
dec
mov
cmp
scas
and
sbb
or
std
pop
test
xorl
pop
or
sti
adc
xchg
adc
lcall
popa
cmp
shlb
pop
inc
adc
xor
push
cwtl
loop
jp
xchg
add
fwait
cmp
adc
xchg
push
push
sub
cmp
push
in
dec
cmp
rclb
movl
xchg
shl
sub
ss
jb
mov
jp
ret
nop
in
sub
add
es
mov
xor
iret
add
cmpsl
jae
scas
cmp
xor
std
js
inc
cmc
test
fcompl
xchg
or
jae
shll
cmc
jbe
sub
xchg
xor
test
lret
lahf
sub
inc
xchg
pusha
push
fucomip
stos
push
incl
dec
ss
test
adc
aad
fsubr
clc
and
bound
pop
js
pop
jle
jae
loopne
push
lock
out
lods
jl
aad
ljmp
and
sbb
mov
and
cmp
sbb
inc
xor
stc
outsb
mov
bound
sub
pop
mov
cmp
shrb
mov
out
cmp
ds
push
out
gs
sub
or
mov
mov
mov
sarl
adc
imul
cld
mov
mov
mov
pop
sub
mov
fldln2
sbb
lcall
push
mov
mull
lock
pop
daa
insl
and
mov
dec
mov
js
sub
mov
sub
sub
jne
dec
popa
xor
cmc
mov
jecxz
jo
and
popf
rolb
jmp
imul
das
mov
jns
jb
mov
inc
jp
inc
pop
push
cmp
aam
enter
loope
mov
fmul
xor
jg
mov
in
test
add
lcall
sub
push
push
jmp
push
pop
lahf
fwait
lcall
sub
jmp
dec
xchg
sub
outsb
loop
cmpsl
pop
jbe
jnp
pop
fiaddl
mov
bound
mov
popa
xchg
push
imul
and
jo
jg
ljmp
mov
mov
out
fsubrl
jp
dec
nop
xor
movsl
lret
daa
jecxz
movsb
mov
or
add
pop
flds
jae
cmpsl
dec
lret
int
jecxz
jle
pop
push
jge
bound
in
or
dec
sbb
add
pusha
rclb
loop
jno
mov
fs
dec
pop
dec
ds
aam
dec
icebp
ljmp
mov
fmull
data16
pusha
lea
sub
mov
je
subb
inc
sbb
rcr
cmp
fisubrl
mov
test
out
popa
mov
xor
and
and
stos
dec
cltd
push
mov
dec
fadds
xchg
sub
push
mov
fldcw
mov
test
cli
dec
xlat
out
lcall
sbb
inc
test
adc
clc
mov
and
inc
scas
inc
stos
inc
mov
pop
lret
fs
es
iret
or
mov
push
push
sub
addr16
stos
add
push
xchg
outsl
in
pop
mov
push
int3
xchg
mov
mov
fidivrl
icebp
test
movsb
fstp
pop
ror
mov
xchg
jae
xor
xchg
popa
loopne
outsl
jecxz
xchg
insl
ss
mov
es
outsb
scas
pop
xchg
sahf
in
push
rolb
add
pop
fimull
jno
ret
dec
push
adcl
lods
jb
js
sub
or
xor
cmpsb
cmp
mov
xchg
int
add
jb
scas
pushl
in
pandn
or
in
mov
in
cs
cli
cmpsl
aam
and
jbe
fs
mov
mov
mov
mov
movsl
inc
loopne
adc
in
movsl
mov
adc
pop
mov
jae
lods
test
scas
nopl
sub
or
lahf
or
lcall
stos
push
sub
lahf
stos
mov
imul
dec
repnz
dec
test
fcoml
pop
ja
sub
mov
fistps
sbb
xchg
sub
inc
jge
jge
mov
movsb
ljmp
icebp
cmp
out
repz
les
cli
mov
lahf
movsb
in
xchg
push
sbb
adc
sub
data16
jo
cli
stc
mov
mov
iret
mov
sub
idivl
xorl
roll
xchg
mov
jo
or
shll
stc
loopne
mov
pop
outsb
xchg
sub
push
rorb
cmpsb
fsubl
inc
aaa
jl
gs
aaa
xor
sbb
lock
adc
jle
sub
in
mov
lea
add
xor
lods
dec
ret
and
ds
fwait
dec
gs
sbb
xchg
andl
pop
stc
dec
mov
push
pop
mov
pop
mov
je
aad
iret
into
adc
push
xor
push
jg
adc
stc
xchg
lea
jae
js
lahf
ja
jbe
pop
out
mov
lods
add
mov
lcall
popa
pop
arpl
in
addb
sub
sub
imull
sbb
inc
cli
loop
pop
cmp
repz
jle
sbb
aas
jp
sahf
mov
es
rol
jl
push
int3
mov
outsl
bound
mov
cmp
mov
aam
adc
or
xchg
sbb
jge
arpl
iret
adc
ret
cmp
mov
cltd
nop
jne
or
or
in
roll
mov
add
fcomi
mov
ljmp
mov
sub
add
mov
fnstenv
andl
outsb
jle
out
mov
jl
mov
sbb
add
into
adc
orb
push
jbe
out
lods
fdivl
popf
cmp
or
loopne
push
pop
and
dec
outsb
mov
and
lret
les
shll
xor
dec
or
aas
xor
shl
popf
cmp
sub
das
lds
cmp
sbb
int3
cltd
jmp
sub
in
aam
mov
fcoms
mov
nop
push
and
scas
jb
xor
mov
sub
rcrb
push
sub
dec
cwtl
ret
cmpb
xchg
decb
and
pop
jge
cmpsl
movb
push
data16
push
xchg
cmpsl
sbb
xchg
scas
cmp
cmpsl
dec
jno
jnp
or
mov
and
ja
pop
out
inc
cli
cmpsl
cmc
enter
stos
sbb
pop
sbb
rclb
or
xor
dec
cmp
adc
incb
enter
sbb
adc
sbb
stos
lock
add
pop
push
popf
outsb
in
pop
add
out
or
les
xchg
repnz
in
test
ljmp
call
stos
push
cmc
xchg
call
sarb
adc
outsb
in
cmc
cs
jmp
or
gs
push
loop
mov
pop
fxch
scas
mov
add
aam
xorl
inc
sub
outsl
pop
cld
test
icebp
test
iret
hlt
nop
mov
ja
out
daa
mov
mov
in
shll
cld
loopne
stos
popf
mov
push
pop
pop
pop
mov
cmp
xor
bound
add
mov
sbb
push
push
pop
push
rorb
push
dec
data16
lcall
imulb
ja
push
or
lods
sti
mov
es
bound
push
xor
aad
dec
or
test
test
ds
sbb
sub
cwtl
aam
lea
inc
inc
mov
out
test
das
fstp
out
js
dec
xchg
in
sub
push
pop
and
sbb
enter
push
pushf
fimull
mov
mov
adc
adc
int3
add
push
cmp
inc
xor
jecxz
jne
daa
pop
and
and
sarb
in
mov
inc
inc
and
je
movsb
add
cmp
popa
ficomps
or
dec
and
test
in
loope
xchg
mov
sub
fwait
jmp
stos
dec
push
ret
inc
mov
add
and
mov
cltd
scas
gs
push
in
cld
nop
sbb
in
push
mov
ljmp
xorl
and
xor
or
xor
cmp
andl
mov
or
add
stos
jo
stos
stc
sub
add
jbe
push
or
popa
cwtl
add
lret
xchg
push
mov
in
repz
push
sub
fwait
scas
nop
mov
testb
push
xchg
ljmp
enter
in
inc
cli
jne
pop
inc
mov
xor
push
popa
pop
push
sbb
ficoms
dec
sub
arpl
bound
icebp
pop
lds
leave
sahf
ret
test
xorb
jbe
jo
cmc
aam
daa
ficoml
outsl
push
sbb
arpl
lods
sbbb
pop
cmp
dec
in
mov
cmp
lea
jmp
mov
cwtl
cld
mov
mov
xlat
jle
pop
loopne
cmp
dec
enter
dec
repz
mov
or
in
mov
xor
add
mov
test
push
pushf
loop
pop
pop
mov
out
pop
ds
dec
loopne
outsl
mov
mov
xor
and
nop
sub
xor
movsb
xorb
pop
jge
push
jge
xor
aaa
xor
mov
js
mov
mov
xorb
add
in
std
nop
push
addr16
sbb
jge
test
cmc
into
inc
movsb
lods
std
in
dec
and
mov
fnstcw
fistps
sub
sti
loop
repz
pop
xor
sub
std
xchg
sbb
ret
xchg
lds
jns
inc
cli
out
sub
je
jae
nop
or
add
xor
or
mov
sbb
sti
outsb
mov
sub
dec
les
jnp
sqrtps
cmp
loope
je
pop
out
cmc
pop
cmp
in
push
mov
hlt
hlt
jno
dec
incb
nop
push
sub
dec
mov
out
push
mov
out
jne
xor
repz
fwait
pop
inc
prefetch
or
and
out
mov
insb
int3
cwtl
pop
js
cmp
int3
mov
or
repnz
imul
add
int3
sbb
mov
xor
out
mov
push
ret
push
cmc
lock
jno
ljmp
loop
sbb
cmp
data16
fs
fldlg2
leave
mov
adc
inc
mov
mov
rcrb
pushf
pop
sbb
int3
dec
xchg
sub
jb
cmp
out
or
inc
out
sbb
pop
inc
shr
fwait
sub
fadds
mov
dec
jns
jbe
pop
je
sbb
decl
push
in
push
mov
lods
iret
arpl
sub
pop
pop
loope
imul
sti
and
mov
push
xor
js
loop
or
adc
and
cmp
adc
or
repz
pusha
cld
sub
imul
mov
mov
cmovno
jecxz
or
push
pop
cmp
addb
xor
sti
rcrl
and
cmp
mov
xor
pop
cmp
arpl
inc
dec
aaa
cld
mov
cmp
or
scas
xor
scas
cmp
mov
jb
icebp
adc
cltd
icebp
aam
lods
inc
in
dec
or
ja
lret
testl
cmp
jp
lods
add
das
push
fisttpll
jecxz
add
cmc
adc
and
sar
inc
out
out
mov
fldenv
fmull
outsl
sbb
pop
pop
stc
pop
call
das
je
xchg
lds
or
gs
mov
dec
xchg
outsb
mov
icebp
adc
in
xlat
mov
add
sbb
xlat
loope
ja
loopne
ja
cmp
int3
mov
loopne
pop
daa
mov
shl
imul
or
inc
movl
inc
mov
in
loopne
add
push
inc
insb
mov
popf
outsb
mov
jae
leave
xchg
sti
jecxz
adc
sahf
mulb
int3
mov
jl
hlt
in
jnp
les
aaa
xchg
sub
repnz
sbb
pop
sbb
dec
jne
pop
mov
cmp
cwtl
jmp
je
lcall
call
xchg
adc
mov
test
addr16
mov
movsl
int
adc
ljmp
jmp
jns
mov
cmp
iret
cmp
pop
mov
outsb
xchg
shll
and
int3
or
mov
daa
sbb
je
mov
xor
test
mov
scas
jns
fistl
imul
push
cmc
mov
mov
jle
sbb
cmpsl
cld
or
lcall
inc
mov
jo
mov
cmp
mov
movsl
jnp
pushf
ja
stos
test
jl
addr16
mov
iret
sti
repnz
aaa
sbb
lcall
mov
lcall
in
dec
lods
iret
pop
jle
sbbb
xor
in
inc
mov
out
push
dec
inc
sub
lcall
pushf
int
testb
and
mov
outsl
lds
test
jo
repnz
inc
or
pusha
xor
sahf
jmp
fwait
int
push
out
dec
cmpb
enter
fistl
jo
scas
inc
mov
stc
sub
in
cmpsb
popa
add
xor
inc
sub
pop
stos
jns
fs
jg
popa
and
mov
or
mov
fisttps
insl
push
lret
loope
dec
mov
push
mov
cmp
sub
cmpsb
outsl
cmc
sahf
or
dec
mov
mov
sub
nop
shrb
rcrb
gs
push
stc
mov
ss
fstps
mov
test
mov
fsubs
mov
lea
inc
and
xorl
cli
hlt
jge
insb
xorl
mov
dec
push
insb
cld
fwait
sahf
inc
dec
xor
ret
std
add
cs
rclb
leave
movsb
popf
fsubs
hlt
jle
pop
cmp
and
enter
clc
add
insl
fcmovnu
je
jg
inc
int
mov
jns
icebp
xor
sbb
mov
mov
cmc
xor
push
adc
xor
in
fistpl
inc
xor
mov
mov
add
scas
add
push
jge
in
and
int3
rclb
test
pop
repz
pop
cmp
inc
push
je
xchg
int3
dec
pop
shl
jo
imul
dec
inc
cltd
fdivl
stc
sub
add
js
dec
xchg
or
icebp
mov
xor
ffreep
das
jne
icebp
addr16
cltd
xchg
dec
rcrl
mov
pushf
mov
lea
mov
imul
out
sbb
push
movsl
sti
std
adc
test
out
pop
or
jl
pushl
sbb
jecxz
jecxz
sub
cli
test
push
rclb
cmc
adc
jle
push
out
sbb
jnp
movsl
inc
mov
add
ljmp
mov
scas
loop
mov
pop
sub
enter
mov
mov
inc
ret
out
imul
sbb
in
jno
test
fldcw
stc
adc
mov
mov
hlt
repz
shrb
in
push
cmp
lahf
xor
or
inc
xor
mov
mov
sbb
lock
jge
lods
out
sub
inc
aam
jp
mov
test
lahf
adc
pop
dec
movsl
mov
cli
adc
xchg
jne
push
sbb
mov
dec
xchg
fs
scas
out
cwtl
movsb
mov
inc
popf
inc
xchg
jbe
dec
insb
push
xorb
sbb
mov
mov
pop
xchg
scas
and
nop
sbbb
pop
xchg
xchg
push
mov
repnz
popf
push
and
movsb
sbb
jno
and
add
sub
test
xor
dec
mov
jp
call
incb
in
cltd
cmp
in
mov
ret
std
test
ror
popf
out
mov
stos
mov
rcll
xor
test
leave
scas
and
rorl
sub
jle
insb
dec
cs
ret
shl
pusha
in
push
jno
das
rcll
mov
call
call
rcr
stos
pop
inc
xchg
xor
mov
push
repz
test
pop
dec
mov
mov
xchg
imul
mov
mov
sub
bound
mov
lods
sbb
xchg
out
mov
hlt
and
inc
addb
adc
adc
push
fistps
or
dec
xor
dec
callw
xchg
pushf
test
mov
jg
push
mov
in
rclb
mov
cmp
imul
push
mov
out
into
xor
push
stos
dec
mulb
dec
mov
ljmp
inc
add
arpl
in
xor
out
bound
leave
cmp
and
push
pop
jne
jo
add
pop
xor
jg
lahf
cmpb
cmp
lahf
jo
scas
mov
xchg
mov
daa
xchg
ret
ficoms
cmc
aad
jp
mov
xlat
fidivs
xor
add
neg
ret
add
repnz
leave
ja
test
jecxz
lock
xchg
outsb
negl
das
popa
mov
sbb
fisttpl
stos
jns
jno
int
sub
icebp
dec
movsb
push
gs
out
mov
cmp
push
lahf
cmp
push
ss
mov
adc
imul
mov
push
jbe
pop
inc
or
cmp
enter
out
xchg
rcll
ljmp
hlt
xchg
dec
imul
cwtl
lret
nop
std
cmp
mov
test
movsb
dec
cs
sub
ficoms
out
push
pop
das
dec
dec
out
sti
dec
mov
xchg
sahf
out
lret
cmp
inc
lock
sbb
add
xchg
inc
mov
push
ss
sbb
dec
jbe
push
xlat
shrl
pushf
cmp
inc
outsl
adc
xorl
sarb
shlb
dec
in
dec
mov
lock
cmp
outsb
cwtl
pop
sub
xor
imul
mov
fadd
fildll
iret
stos
dec
xchg
inc
std
fiadds
jl
xchg
jo
icebp
dec
or
rep
mov
jo
in
add
mov
dec
pop
int
ss
fnstsw
fwait
test
or
jmp
mulb
imul
or
popa
pop
mov
xlat
loopne
or
dec
cmp
mov
movsl
mov
lcall
adc
jmp
ror
sub
rcrl
pusha
adc
into
mov
scas
cmc
ds
mov
cwtl
jg
insb
cmp
adc
ds
xor
std
jl
mov
sbb
or
jmp
or
mov
dec
mov
insb
leave
int
jns
lock
and
mov
lcall
cwtl
in
add
cmp
add
xor
or
pop
rorl
pop
imul
fwait
rep
enter
cmp
int3
in
jns
lret
fldl
ljmp
out
or
loopne
std
dec
inc
bound
mov
dec
dec
orl
sub
push
insl
and
mov
sub
mov
sahf
xchg
test
xlat
js
inc
mov
aas
dec
jo
iret
xorb
sub
xor
mov
add
dec
cli
fs
mov
stc
popf
mov
xorl
cld
sub
mov
dec
pusha
testb
push
insb
cmc
jb
mov
xchg
push
lds
gs
in
insb
outsl
mov
push
and
inc
outsb
mov
std
xor
sub
in
sbbl
faddl
punpckldq
lea
leave
jge
xchg
lahf
out
cmp
aas
push
cmp
incb
dec
pop
fidivrl
xor
cwtl
and
ret
cld
push
jns
fidivs
dec
lods
outsb
push
addr16
jb
mov
xchg
jecxz
jbe
outsl
adc
xor
add
ljmp
subb
adc
push
mov
sbb
pop
dec
inc
insl
mov
xor
inc
outsb
fistl
and
mov
or
mov
and
shrl
mov
cltd
and
and
cli
sub
inc
sahf
jne
mov
push
mov
adc
test
jns
mov
stos
mov
mov
movsb
sub
and
ret
into
es
pop
sti
lcall
fwait
imul
pusha
mov
cmp
clc
add
repnz
fadd
inc
mov
imul
pop
jp
dec
sbb
test
jae
xlat
lahf
je
pop
jno
movsb
mov
ret
mov
push
in
jl
test
cmp
push
and
jns
mov
sbb
sbb
xchg
and
mov
mov
loope
rcll
mov
push
insl
gs
shll
sub
push
jp
pop
adc
dec
rcl
ds
cwtl
lret
rcll
fsubrp
jecxz
add
repz
lea
insl
int
lock
dec
lcall
xchg
sub
cli
sub
int3
sub
push
mov
loopne
sbb
test
dec
enter
cmpl
cmc
jge,pt
dec
or
push
inc
nop
shll
xor
and
jmp
cld
dec
pop
cwtl
in
pop
jno
sbb
push
xchg
sahf
mov
mov
sub
pop
cmp
mov
mov
cltd
scas
jns
jno
aam
sbb
cmp
mov
ret
mov
roll
dec
shrl
imul
xor
add
mov
out
xor
int
fs
adc
je
repz
mov
fnstsw
jns
mov
adc
ffree
pop
mov
dec
or
sbbl
jmp
cmp
fsub
cli
movsb
aaa
scas
cmp
lods
or
scas
sbb
fsubrp
cmp
push
cli
mov
dec
popf
xchg
push
mov
pop
push
inc
add
call
jl
xlat
into
ret
mov
loop
fwait
xor
enter
xchg
cmc
pop
outsl
push
sbb
xchg
mov
ret
fcmovnbe
loope
push
pop
cmpsb
out
lcall
xchg
push
xorl
and
fiaddl
popa
jns
lods
inc
into
cmp
cmpsl
inc
loope
mov
setnp
mulb
push
and
pop
call
mov
mov
lods
mov
test
mov
into
xor
test
fs
or
xor
inc
loope
and
ds
fists
scas
mov
fwait
jns
mov
pop
or
or
rcrb
sub
lcall
or
nop
xchg
outsl
mov
cld
sahf
xchg
dec
jmp
sahf
cmpsl
movsl
jmp
xchg
push
cmp
std
sbbl
jae
add
ret
outsl
xor
adc
popa
imul
into
addr16
mov
adc
lock
dec
mov
ja
mov
xchg
push
push
cmp
gs
add
stc
add
test
pop
mov
adc
cmpsb
mov
xchg
mov
xor
sub
sbb
adc
push
int
dec
stos
push
sbb
mov
lret
cli
push
pop
aaa
fimull
inc
adc
adc
pop
divb
cwtl
scas
cli
xchg
adc
cmp
and
adc
imul
xorl
lahf
out
mov
testb
xor
enter
lods
pop
das
or
sbb
jg
pop
inc
or
or
ds
movsb
stos
pop
icebp
or
sbb
js
inc
jo
jmp
bound
mov
adc
mov
ror
and
cmp
mov
hlt
pop
cmpsl
mov
adc
xchg
xor
jecxz
fidivs
gs
xchg
adc
lock
test
lds
clc
add
adc
hlt
sbb
jnp
lret
loop
scas
subl
cwtl
ljmp
sbb
fstl
cmp
push
out
cmp
loope
sub
push
pop
sbb
adc
bound
mov
repz
cmp
sbb
sub
add
cmpsb
loope
ss
fiaddl
xchg
mov
add
fistpll
movsl
jbe
xor
std
pop
jns
fidivs
push
sti
and
movsl
jp
aaa
mov
mov
xchg
pop
add
popf
into
sbb
testl
inc
es
pop
mov
jnp
popf
call
and
lods
rolb
push
push
mov
xor
mov
cltd
cld
push
xchg
das
hlt
adc
and
sbb
orb
clc
outsl
adc
mov
mov
mov
jno
xchg
jb
jecxz
jl
jnp
ds
push
das
movsb
out
mov
sbb
in
into
sti
inc
test
loop
les
xchg
incb
aas
jno
adc
xor
inc
cmp
xchg
xchg
pusha
mov
aam
lret
stc
rcrb
in
cmp
add
dec
fwait
cli
and
inc
cltd
test
xor
add
and
cld
mov
push
sbb
cmp
push
std
xor
jne
fbld
jbe
sbb
iret
outsb
rorb
insb
push
sbb
pop
jnp
or
or
sbb
pop
mov
xchg
dec
xchg
int3
mov
ret
das
cmp
pop
cs
roll
pop
das
stos
sub
push
push
mov
insl
test
jb
dec
lock
inc
dec
push
movsl
insb
jge
mov
xchg
mov
shlb
sbb
aaa
aad
out
cwtl
push
movsl
shrb
jbe
test
adc
jnp
fdivrs
rorb
push
pop
inc
dec
or
cmpl
pop
jge
jg
movsb
or
in
or
push
in
nop
mov
insl
cmp
test
arpl
xor
xorb
popf
adc
push
imul
jle
int
or
mov
add
arpl
adc
jno
xchg
jae
daa
stos
lods
test
xorb
jg
mov
pop
mov
push
or
push
adc
jg
add
cwtl
int3
and
xor
mov
cmc
cmp
scas
insb
push
mov
add
outsl
xor
fisubs
insb
adc
test
orb
aad
sub
mov
mov
bound
inc
out
and
ss
outsb
push
sub
xor
xor
pushf
jb
subb
mov
jb
in
je
sub
and
data16
jnp
rolb
jb
mov
aas
test
mov
out
dec
sub
dec
rcr
enter
and
pop
rcr
pop
lds
push
outsl
aas
and
pusha
push
xchg
dec
adc
out
scas
and
icebp
lods
and
sbb
hlt
inc
jns
shl
clc
xchg
jb
mov
or
fsts
repnz
bound
mov
inc
clc
push
ss
xor
lcall
ja
call
pop
and
add
push
enter
jbe
mov
clc
neg
lcall
pushf
in
dec
add
mov
ss
jnp
das
dec
mov
nop
test
sarl
stc
push
sbb
repz
lahf
aad
jo
dec
pop
shr
cltd
ret
movsb
in
test
push
in
loop
jl
xor
lods
cmp
out
push
addl
imulb
xor
cmp
iret
and
in
cmc
adc
adc
jle
xor
fistpl
sbb
stos
pop
sbb
adc
xchg
icebp
push
mov
int3
and
fcompl
add
cli
ss
or
push
mov
adc
imul
push
je
fisubs
rol
or
cmp
jg
sbb
push
in
and
pop
and
push
int
jecxz
pop
ficomps
cs
dec
mov
scas
sbb
es
sbb
push
jns
ja
iret
add
pop
sbb
fistps
ljmp
cltd
push
cmp
scas
inc
adc
mov
je
into
aaa
xor
push
imul
mov
xlat
imul
ret
mov
data16
pushf
bound
jmp
push
or
sub
mov
sahf
test
nop
movb
mov
push
in
push
cmpsl
loopne
add
adc
mov
add
add
into
push
insl
cmp
outsl
ja
jo
mov
or
into
lcall
fstpl
lcall
shrl
xchg
pusha
mov
inc
and
arpl
int3
pop
mov
push
xor
test
cmp
inc
xor
mov
sbb
icebp
adc
mov
mov
or
addr16
pop
cltd
aas
sahf
pop
xchg
push
dec
adc
dec
cwtl
push
stos
push
xchg
and
add
mov
cmp
clc
push
jge
xor
sarb
sti
add
xor
pop
adc
inc
inc
jae
outsl
adc
push
notl
mov
inc
jl
cmp
mov
xorl
dec
push
lret
gs
mov
aaa
lods
xchg
dec
out
lds
add
stc
into
mov
lock
rcll
jns
sti
repz
push
or
xor
loop
mov
leave
scas
jae
fsubrs
andb
ja
call
fldl
push
decb
push
pop
add
xor
fs
add
sti
adc
push
xchg
pushf
cmc
sbb
gs
int
add
xchg
mov
and
gs
rcrl
xchg
adc
into
pushl
mov
jge
xor
or
sbb
out
sbb
dec
das
ret
mov
or
xchg
inc
pop
xchg
shlb
fildll
push
mov
dec
stos
sbb
mov
jg
rcrb
in
sub
icebp
icebp
xchg
jle
arpl
cmp
sarl
loop
jno
insl
xchg
insl
cs
in
add
notb
inc
enter
xchg
dec
repnz
xchg
movsb
sub
stc
shrb
adc
shlb
imul
pop
or
dec
push
add
fnstcw
cmc
sub
popa
test
jle
inc
cmp
gs
sarl
pop
fmuls
jo
mov
push
lahf
pop
xchg
add
add
das
pop
adc
pop
add
lret
add
sbb
mov
and
sub
jno
adc
sbb
mov
add
dec
mov
push
fwait
gs
xchg
rorb
mov
cltd
inc
fstpt
clc
out
add
icebp
dec
inc
add
cmp
daa
sub
xorb
and
pop
mov
lcall
outsl
mov
adc
mov
push
sub
jnp
stos
xlat
mov
out
xchg
dec
imul
fisttpl
pop
dec
dec
mov
test
dec
addr16
pop
lahf
jg
inc
lea
aaa
mov
jp
mov
scas
sub
jg
out
push
sub
or
shlb
and
push
adc
cwtl
js
xchg
sbb
jg
inc
fnstsw
inc
push
sbb
jo
outsl
in
push
mov
lock
or
mov
rorb
ret
cs
add
popf
xchg
lods
adc
cmpsb
sahf
rorl
repz
pop
dec
jne
pushf
test
add
adc
ficomps
loop
imul
sub
sbb
sbb
jge
inc
in
mov
arpl
icebp
or
fcomps
loopne
jmp
push
add
bound
xchg
xchg
pop
pusha
hlt
iret
jae
jecxz
mov
jecxz
inc
add
out
fs
fwait
mov
cmc
lret
pop
sub
adc
or
test
repnz
arpl
js
cmpsl
jns,pt
ficoml
addl
in
insl
mov
movsb
das
into
pop
pop
loop
adc
js
pop
jle
or
sbb
clc
mov
mov
adc
push
pop
addr16
negb
pop
clc
add
test
std
or
lods
mov
dec
adc
fs
push
jge
fs
inc
sbb
and
insl
rcrb
and
mov
stos
push
iret
cmp
add
out
jnp
adc
xchg
mov
push
insl
stc
adc
fldl
sbb
arpl
fdivrs
daa
arpl
fistpll
and
in
dec
jle
lods
pop
and
stc
out
clc
rclb
into
mov
or
in
into
inc
repnz
nop
shlb
jle
xchg
mov
push
sahf
lock
dec
cmpsb
xchg
xchg
loopne
xchg
movsb
test
mov
dec
mov
lcall
dec
mov
adc
dec
push
push
jae
int
pop
shl
jp
pop
and
or
loop
lcall
popf
ljmp
iret
lahf
add
and
popa
pop
mov
push
jne
mov
outsl
ss
sub
in
fstl
inc
dec
js
testb
sub
test
cmpsl
popa
mov
inc
cmp
out
xor
popf
imul
cmp
movsb
jo
sub
push
mov
jmp
lock
cli
push
pop
lods
movsl
hlt
insl
adc
add
jne
jnp
push
pop
std
pop
addl
in
loope
mov
sub
sbb
sub
or
lea
out
and
xchg
lds
cmc
insb
jbe
fstp
sub
push
outsb
roll
mov
fstpl
push
in
fidivrs
cmp
cli
or
imul
iret
mov
imul
ja
stc
scas
push
fdivrs
adc
pop
mov
mov
xchg
or
lcall
xor
xchg
or
fdivl
pushf
inc
adcl
fisubrs
jno
stos
mov
nop
mov
out
out
bound
add
add
fimull
out
sahf
xor
ljmp
neg
das
cmpsl
pusha
ja
call
aaa
sub
sub
and
xchg
cmp
fstpt
mov
or
js
adc
dec
test
ret
arpl
or
aas
push
lahf
call
jg
pop
repnz
lods
sbb
scas
out
jecxz
int
ret
and
mov
imul
insb
mov
cmp
orl
jecxz
std
pop
loop
inc
nop
mov
outsl
lret
insb
ja
push
outsl
mov
outsb
and
scas
xor
dec
out
xchg
lock
push
and
jb
fdivl
pop
stos
sub
popf
dec
das
inc
xor
es
gs
xor
mov
xchg
lds
and
pop
mov
mov
lock
add
mov
pop
enter
and
xchg
ret
loope
jae
mov
lcall
outsb
cs
push
fcmovne
jle
xor
xchg
xchg
das
ret
loopne
enter
inc
cmp
insb
sbb
pop
pop
mov
ljmp
cmpsb
inc
jge
das
in
cmp
mov
pop
call
xor
push
mov
daa
or
sub
sbb
push
fdivrs
ret
shlb
inc
imulb
sbb
in
mov
and
sub
pop
sbb
mov
cwtl
loope
or
test
ljmp
dec
xchg
pop
cmpsl
out
ds
cltd
lock
jno
int
sub
cmp
sbb
daa
add
mov
arpl
sahf
push
pop
loope
jg
cmp
lahf
mov
xchg
test
inc
aam
andl
add
icebp
movsl
out
and
stos
mov
pushf
loopne
jecxz
loopne
pop
in
outsb
stos
pop
mov
and
cs
xor
scas
leave
jae
stos
lock
mov
lret
and
stos
inc
pushw
lds
and
sti
or
pop
or
addr16
mov
imul
in
and
fildl
mov
pop
pop
push
daa
adc
mov
pop
push
dec
mov
xchg
filds
inc
pop
dec
sub
das
out
dec
fisubrs
outsb
sub
jb
icebp
and
test
ja
pushf
or
sbbb
jmp
xor
inc
cmp
and
push
push
out
mov
xor
lds
pop
mov
fidivl
jmp
jl
jns
xor
pop
ljmp
or
jecxz
aam
mov
hlt
xchg
mov
lds
sub
push
incl
in
or
mov
mov
dec
int
fisttpl
jns
movsb
lcall
test
jmp
clc
loopne
in
pushf
mov
lret
movsl
test
cmpsl
in
repnz
xor
dec
loopne
daa
and
jb
ret
jbe
nop
shlb
sahf
jecxz
stos
cmc
xchg
les
lret
sub
shll
jb
test
dec
fistps
sbb
fldt
dec
mov
push
pushf
mov
cmpl
mov
out
mov
outsb
das
mov
imul
adc
dec
lea
test
adcl
decl
push
add
xchg
out
xor
std
sub
into
push
lcall
ret
call
push
mov
cmp
subl
cwtl
inc
pop
dec
arpl
hlt
push
mov
cmpsb
movsb
test
in
gs
scas
std
jbe
pusha
xchg
rolb
mov
sub
jb
movsl
fwait
pop
repnz
stos
cmp
dec
dec
pushw
sti
sbb
sub
add
lods
xchg
je
roll
ja
cmp
arpl
inc
imul
hlt
test
repz
or
pop
push
push
pop
adc
sbb
xchg
dec
aaa
jne
inc
aam
cltd
mov
cli
mov
jnp
inc
bound
mov
and
das
mov
sbb
add
movsb
daa
fildl
es
mov
popa
sub
lods
xorl
ja
add
aad
and
ret
clc
lahf
imul
fldt
fisttpll
sub
xorl
movsb
cmp
fisubrs
das
dec
movsl
push
inc
mov
lret
pop
pop
ret
sub
pop
mov
in
push
mov
cmp
cmp
push
push
scas
hlt
inc
cmp
and
rclb
mov
test
sub
jp
shr
test
cmp
pop
add
mov
test
fldt
enter
fnsave
cmp
push
inc
xor
push
pushf
inc
mov
data16
pop
in
test
push
lret
repnz
cld
lahf
in
push
inc
mov
push
mov
les
jle
sub
xor
aad
xchg
lds
shll
loop,pn
pop
sub
loopne
scas
mov
fld1
sub
jae
jmp
ret
push
rcrb
sbb
mov
sub
mov
jl
and
std
das
adc
pop
fucomip
or
comiss
test
cmpsb
arpl
in
nop
mov
xchg
movsb
aad
mov
into
cmpsl
aam
push
xchg
sti
dec
in
sbb
push
aas
adc
repnz
jmp
ds
xor
fs
arpl
and
cli
sbb
test
sbb
xlat
push
inc
and
pop
ljmp
cli
roll
pop
push
inc
inc
decl
imul
lock
ja
fdiv
lock
insl
push
lahf
aad
fistpl
imul
rcr
ds
int3
int
data16
imull
jge
out
and
add
push
fs
mov
jge
fcmovnu
xchg
mov
mov
stc
push
push
lods
movsl
push
sub
jmp
pop
adc
repz
cmpsw
test
adc
movsb
lds
test
sub
loope
mov
xor
jbe
ds
mull
xchg
jo
mov
lock
shlb
dec
data16
sub
hlt
sbb
ss
ja
orb
divb
dec
xor
dec
mov
test
cmp
dec
gs
adc
cmp
decb
xchg
into
sbb
mov
mov
rcrb
test
dec
jle
or
mov
and
mov
jnp
dec
mov
fadd
jecxz
pop
pop
jno
xchg
gs
push
stos
pop
mov
or
fcoml
jge
jl
sub
mov
mov
aam
dec
xchg
push
xchg
jnp
movsl
pushl
mov
pop
cmp
push
lcall
inc
cld
fs
mov
push
into
pusha
xor
adc
aam
mov
add
jbe
stc
stos
loop
in
xor
or
shl
imul
pop
dec
xor
test
ss
mov
sbb
cmp
adc
inc
sub
imul
rorl
fsubs
popa
xor
mov
xchg
imul
jnp
mov
xlat
pushf
push
and
pop
pop
mov
dec
push
sub
daa
into
jae
in
adc
cmc
sub
enter
pop
js
push
das
out
addr16
arpl
leave
and
xchg
popa
fldl
mov
test
lcall
aam
loope
adc
shll
inc
and
inc
in
leave
dec
xor
or
xor
das
and
cmp
push
jge
fsubs
hlt
adc
sub
jp
out
mov
xchg
call
out
std
dec
daa
in
mov
xor
add
test
push
ss
arpl
push
push
mov
add
jp
dec
cli
sbb
pop
rcrl
ds
jge
sbb
mov
lods
xchg
shr
push
jmp
out
jbe
cmpl
test
test
fldcw
mov
mov
add
push
ret
jno
arpl
dec
lods
mov
inc
push
ror
gs
insl
jp
js
mov
xchg
jp
pop
sub
pop
fmul
sarb
adc
pop
mov
into
and
xchg
sbb
fs
pop
lods
push
sub
cmp
mov
inc
lock
iret
cmp
mov
add
adc
jg
xchg
mov
xor
dec
inc
mov
sub
in
les
in
mov
popf
pop
mov
mov
leave
pop
sti
hlt
lret
ljmp
and
test
push
lods
mov
cmpsl
or
jecxz
repnz
call
imul
cmp
xchg
cmpsl
sti
pop
inc
pop
mov
and
les
out
dec
sub
and
fidivl
xor
sbb
and
imull
je
sbbb
dec
enter
pusha
inc
outsb
movsl
hlt
and
pop
jne
push
out
mov
mov
mov
push
mov
in
inc
ljmp
push
fs
jle
inc
jp
and
pop
andb
push
shrb
icebp
mov
loope
pusha
and
xchg
std
ret
lret
mov
sbb
adc
adc
and
inc
ss
ret
jecxz
pop
imul
insb
sbb
lea
jb
jne
xlat
jl
insb
sbb
and
test
add
jmp
dec
mov
xchg
in
lcall
out
adc
mov
jae
cwtl
gs
xchg
dec
lock
jo
pop
into
pusha
xchg
imul
sub
ja
lods
arpl
loope
fwait
sbbb
pop
xor
test
loope
pop
fwait
jne
adc
cli
pop
push
pop
jl
mov
push
jecxz
cmpsb
xor
cltd
or
ret
das
cwtl
outsb
push
dec
popf
movsb
mov
rsm
stos
cli
gs
test
cmp
aam
loop
cs
ss
mov
mov
push
push
movsl
cmpsl
sub
lods
cmc
fcoml
xchg
sub
stc
jge
or
jnp
or
sbb
pop
sbb
mov
xor
push
inc
popf
lret
ret
ljmp
arpl
pop
in
out
iret
mov
clc
lock
fs
loop
sbb
outsl
cld
mov
pop
sub
pop
dec
dec
out
pop
cmp
mov
xor
les
push
in
imul
int
ja
iret
das
xchg
loop
insl
insb
adc
mov
je
stc
mov
jbe
mov
jno
and
inc
in
adc
push
pop
int
fdivs
adc
mov
subl
fwait
sbb
sub
push
dec
jae
mov
inc
xchg
insl
pushf
xchg
push
es
dec
ret
and
pushf
push
les
jne
js
xchg
dec
arpl
cmp
xchg
cmp
adc
xchg
mov
scas
jb
adc
es
notb
fwait
cmpsl
xor
pop
xchg
hlt
push
adc
add
rcr
cld
popa
ljmp
mov
mov
cli
je
pop
in
das
popa
cmp
pop
sub
clc
stc
dec
sbb
sbb
enter
sbb
push
ja
in
mov
xchg
and
push
xor
xlat
ret
pop
test
pop
jnp
adc
lock
cwtl
mov
and
add
lcall
inc
idiv
out
ljmp
aaa
fldl
stos
jae
cmp
testb
stc
js
add
into
add
je
lret
sti
mov
sub
xor
pop
hlt
mov
xchg
idiv
lcall
imul
gs
stos
dec
or
mov
std
jo
dec
jge
dec
cmp
or
xor
cmc
xchg
inc
call
add
mov
orl
aaa
lret
lcall
xchg
es
jecxz
jmp
mov
push
pop
rorb
stos
lea
inc
xor
and
aad
sbb
jb
xor
stc
sub
je
mov
frstor
jnp
adc
adc
insb
sbb
sahf
dec
bound
fisttpll
out
popf
es
sub
js
in
fcoms
lods
lds
and
sbb
pop
js
mov
xor
or
bound
icebp
add
xor
mov
fdivl
pop
enter
cmp
push
test
cmpsb
jns
fiaddl
or
xchg
leave
fs
adc
cmp
sbb
ja
push
xchg
or
push
xor
pushf
mov
aad
mov
test
test
call
mov
fmul
in
mov
inc
fcmovbe
dec
pop
dec
dec
push
test
je
nop
aam
or
test
neg
test
arpl
rcll
ficoml
push
inc
iret
repnz
pop
gs
repz
pop
stc
pusha
inc
and
xor
mov
xchg
pop
xor
xor
iret
push
mov
enter
add
aad
sbb
xchg
frstor
push
adc
add
sub
adc
testb
test
mov
add
add
mulb
mov
ret
mov
push
xchg
pop
jnp
xchg
stos
mov
xchg
push
fimull
mov
pop
stc
inc
loop
ficoml
mov
cmp
mov
mov
adc
xor
or
cwtl
xor
mov
cmp
push
push
jb
xchg
enter
inc
or
es
sbb
cmpb
add
bound
adc
pop
repz
mov
test
push
jb
pop
push
jb
adc
xor
jmp
xchg
fstps
add
bound
test
jnp
mov
inc
ficompl
pop
mov
push
xchg
loopne
pop
push
mov
sahf
xchg
mov
sub
mov
repz
mov
mov
cli
xchg
call
xchg
xchg
add
sbb
xor
dec
or
adc
ljmp
inc
inc
push
das
sbb
scas
add
mov
jecxz
aas
das
and
cmp
fs
stc
mov
pushf
fidivrl
mov
lret
inc
test
push
and
das
pop
cmp
pop
out
add
dec
sarl
xchg
push
popf
nop
mov
push
xchg
sti
loope
mov
lea
lret
inc
popa
sub
fcomi
sbb
push
scas
jg
sbb
and
mov
mov
xchg
push
insl
push
dec
jle
lea
dec
dec
stos
mov
rcl
xor
sbb
in
cmp
shlb
pop
mov
and
mov
test
int3
inc
and
lret
mov
dec
hlt
ret
dec
out
add
addr16
inc
addr16
rcll
pop
jmp
movsb
mov
and
shl
hlt
add
loope
bound
fcompl
out
and
stos
in
rol
mov
std
sub
mov
lcall
lret
push
pusha
push
daa
mov
xchg
xchg
cmp
outsb
add
movb
inc
jne
sbb
push
jne
stc
fiadds
test
fnstcw
jb
xor
add
and
pop
lds
hlt
fwait
lret
shl
ja
lods
push
call
mov
fnstcw
cmp
icebp
popa
arpl
dec
aam
repnz
repnz
and
or
aad
mov
pop
inc
fbstp
bnd
mov
push
adc
mov
mov
sar
int3
push
adc
psubusw
xor
dec
push
je
and
lds
mov
jne
xor
pop
rcrl
inc
or
cmp
loop
fmuls
nop
aad
out
fists
cs
stos
js
cs
sahf
ss
enter
cld
out
mov
insl
sbb
push
cs
insl
xchg
js
popa
fwait
and
mov
sbb
es
dec
cli
fisttps
ficomps
lahf
aaa
xlat
push
pop
insb
sbb
and
clc
out
xchg
dec
nop
mov
lock
inc
stos
fisubrl
inc
sbb
inc
fimuls
rol
mov
lods
test
outsb
out
scas
enter
mov
pop
aad
push
ja
mov
and
nop
xor
lcall
popa
mov
push
pop
xlat
mov
movsb
and
mov
or
sti
mov
pop
xchg
dec
call
repz
xor
sbb
mov
scas
cmp
xchg
inc
adc
xchg
or
dec
insl
jns
jae
jnp
cltd
and
fnstsw
inc
pop
test
mov
sti
push
push
add
push
sbb
rolb
xlat
push
outsb
jnp
mov
icebp
in
mov
cmp
inc
je
push
mov
xor
lea
dec
sbb
stos
bound
mov
mov
jmp
push
mov
int
int
pop
fadd
xor
arpl
mov
mov
dec
aaa
sub
pushf
repz
mov
or
fcmovne
out
inc
pop
daa
xchg
dec
adc
call
test
mov
ja
or
xchg
xchg
insb
sub
mov
add
cmc
mov
daa
lcall
pusha
fwait
or
dec
ljmp
inc
loop
mov
mov
jae
imul
xchg
mov
fmul
imul
fadds
push
mov
inc
lret
sbb
loop
sbb
add
cmc
popa
xchg
mov
mov
out
dec
mov
jmp
bound
sbb
rcrl
add
inc
push
stos
mov
jmp
out
rorb
test
pop
inc
shrb
out
pop
mov
fwait
adc
jb
scas
dec
outsb
push
mov
out
test
xchg
rcrb
xchg
mov
out
pcmpeqd
fimull
mov
int
mov
sbb
mov
cmp
test
aad
pop
xchg
mov
pop
inc
inc
pop
inc
shlb
xchg
leave
nop
int
adc
shld
xor
sbb
dec
or
in
stos
jp
lea
cmp
add
mov
mov
mov
mov
mov
shlb
pusha
cli
mov
test
pushf
or
mov
mov
fcom
imul
pushf
sbb
mov
or
jbe
dec
js
cmpsl
cmp
mov
jl
and
cmp
adc
outsl
mov
mov
imul
scas
mov
add
into
mov
shr
lds
mov
sbb
add
jg
outsl
mov
push
xchg
jno
testl
xchg
call
jg
sbbb
lds
out
cmp
fucomip
fistps
lods
jne
dec
repnz
dec
and
mov
daa
mov
push
dec
mul
add
cmp
xchg
mov
xchg
imul
fdivr
imul
sub
xchg
adc
rol
sbb
rolb
mov
gs
mov
fdivp
xchg
in
sbb
cmp
repnz
fs
cmpsl
sub
popa
mov
sub
pop
mov
pop
movsl
addr16
test
out
xchg
mov
or
pop
mov
or
sbb
add
test
in
cmp
push
xchg
push
shll
push
push
ret
xlat
sub
xchg
or
ja,pn
xlat
xchg
add
loope
lcall
pop
pmaxub
xor
or
push
push
jl
repz
add
notl
loopne
popf
jae
cld
adc
adc
insl
add
xlat
push
pop
or
rcl
jle
mov
sarl
dec
sub
repz
xor
mov
or
add
and
sahf
inc
cmp
mov
cmpsl
lds
xlat
jo
add
pusha
cmp
sbb
xchg
sbb
stc
outsb
call
popl
mov
jle
dec
and
or
jmp
xchg
inc
lret
mov
sbb
aaa
in
cmp
or
int
jns
mov
dec
lret
test
scas
iret
xchg
enter
mov
cmp
outsl
mov
shlb
push
scas
jp
add
jp
sub
jo
lret
int
sub
stos
fistl
loope
int3
test
pop
repnz
pushaw
push
bound
jno
push
sbb
add
xor
and
js
mov
cmp
mov
dec
xor
xor
push
lahf
inc
sbb
ds
pop
out
in
mov
cs
push
jns
mov
jne
push
or
lds
add
or
jne
in
cmp
and
xchg
mov
scas
xchg
pop
clc
and
pop
test
hlt
mov
call
jbe
pop
es
adc
int
fldenv
xor
mov
lods
fnstenv
sub
es
fs
sub
jb
jmp
inc
mov
rolb
add
faddl
jnp
mov
or
cmpsb
les
adc
xchg
inc
sbb
mov
fbstp
push
fs
cmp
cmp
test
jo
mov
or
les
xchg
push
ss
sub
gs
mov
stc
adc
shrb
movl
cld
jmp
push
or
lods
data16
shl
mov
jle
fistpl
push
mov
pop
jne
jb
arpl
jae
outsb
addl
push
push
add
dec
cmpsl
fstpt
pop
stc
gs
sarl
pop
push
ss
push
mov
and
dec
in
cmp
xor
test
insb
in
mov
lcall
or
xchg
ret
ret
pop
mov
les
dec
mov
pop
inc
dec
pop
out
push
adc
mov
fisttpll
and
inc
dec
sti
test
mov
fcomi
iret
mov
loopne
outsl
xchg
insb
jp
in
bnd
xchg
sti
push
popf
jg
add
xchg
adc
aaa
and
sbb
pop
dec
sbb
cmpsl
jae
in
popf
dec
mov
dec
mov
mov
push
ret
xchg
sub
movsb
cld
mov
imul
loope
pop
scas
mov
loopne
jle
jo
sbb
xor
fidivl
xchg
sti
pop
push
ret
lods
adc
cmp
cmp
loop
and
or
jmp
adc
dec
popf
cmc
int3
imul
xorl
jne
clc
pop
jp
mov
inc
repnz
pop
push
imul
xchg
adc
xlat
iret
das
mov
adc
adc
mulb
cmc
scas
inc
out
add
mov
xor
mov
mov
mov
test
into
sub
adc
inc
xor
daa
sub
insl
xchg
jb
insl
or
fdivrl
ret
sbb
jbe
scas
add
mov
ja
arpl
jno
add
xchg
push
out
gs
in
add
sbb
adc
xor
int3
mov
cltd
daa
cltd
ljmp
add
ror
mov
stos
les
pop
lds
jge
mov
hlt
loop
mov
lret
push
xor
jb
addr16
push
mov
and
outsb
dec
push
pop
repnz
pusha
insl
in
mov
xor
push
incl
xor
mov
imul
shll
aas
xchg
inc
lock
in
stos
push
sarl
add
lea
popf
inc
cmp
imul
and
and
sti
emms
and
cmp
in
gs
xor
xor
mov
and
jbe
push
jnp
fwait
shrl
dec
mov
mov
sub
or
imulb
mov
mov
sbb
or
movsb
pop
dec
add
lds
out
and
inc
scas
loope
mov
fs
inc
push
bound
xchg
dec
cltd
push
xor
sub
mov
xor
inc
xor
add
aaa
mov
imul
or
into
pop
mov
cltd
and
push
arpl
add
mov
mov
leave
test
inc
stos
outsb
adc
jnp
iret
sub
movsl
cmp
cwtl
dec
xchg
jne
cmp
mov
or
jle
mov
in
mov
or
inc
mov
mov
test
jb
js
pop
lds
add
jmp
xchg
mov
js
pop
xchg
enter
bnd
sbb
sbb
sbb
sbb
sahf
stc
xor
jle,pt
fnsetpm(287
pop
mov
mov
push
icebp
out
cmp
pop
inc
add
aaa
xor
rcrl
sub
pop
hlt
inc
or
aaa
inc
push
dec
xor
push
jae
pop
scas
or
mov
test
bound
mov
fisttpl
mov
xchg
inc
xor
insl
movsl
test
mov
inc
jno
mov
js
xor
cld
test
in
jg
test
inc
inc
stc
jae
jmp
mov
lahf
cmc
jmp
es
ret
xlat
jae
in
push
add
push
rorb
movsb
in
js
je
in
xchg
pop
push
mov
lea
enter
xor
gs
push
aam
mov
les
js
loope
pop
dec
pop
mov
and
mov
loop
or
or
and
imul
sub
pop
push
imul
ret
shl
cwtl
pop
xor
cmp
add
aad
jbe
clc
xor
sahf
out
xor
lea
push
inc
cmp
loopne
cli
rolb
mov
jns
test
into
mov
lret
pop
xchg
mov
xlat
mov
rolb
lea
lods
sahf
lea
jno
mov
jl
jmp
popf
xchg
push
add
pop
add
inc
sub
lods
shlb
mov
or
xor
mov
inc
add
mov
sbb
and
fcompl
icebp
and
xchg
xlat
test
daa
add
xor
or
test
sbb
sub
xchg
xchg
scas
sbb
or
push
push
push
dec
mov
shll
pushf
mov
mov
mov
adc
push
das
mov
push
inc
fidivs
dec
adc
outsb
cltd
fucomip
add
lret
test
cmpsb
fwait
pop
mov
pop
aam
decb
or
fidivs
stc
push
std
mov
xchg
jb
or
jnp
ret
inc
enter
push
or
adc
sbb
sub
stos
inc
jecxz
ret
outsb
shlb
cld
lcall
adcl
mov
dec
jo
dec
ret
inc
xchg
sbb
jno
fcomps
mov
jne
push
pop
repz
jl
push
add
repnz
mov
pop
je
sbbb
push
and
jo
iret
fldt
mov
mov
and
mov
and
mov
xchg
mov
mov
repnz
jae
imull
xchg
roll
out
mov
sub
mov
pop
xchg
scas
dec
xor
cwtl
add
or
std
mov
das
jne
cmp
mov
cmp
cmpsl
dec
inc
mov
and
inc
les
dec
std
xchg
sbb
stos
cmp
and
pop
xor
inc
aaa
cmc
pop
sahf
xchg
fsubrs
incb
inc
popl
imul
push
jne
nop
pop
int
inc
arpl
cltd
add
sub
adc
icebp
in
cmpsl
or
fisubrl
inc
lods
xchg
mov
fldl
xchg
inc
es
arpl
das
fmuls
push
lock
sahf
or
jl
mov
jle
pop
inc
xchg
jnp
push
neg
xor
incl
inc
jmp
shlb
or
insl
pop
enter
cmc
lahf
or
mov
cmp
and
jmp
or
add
xlat
and
push
and
outsl
mov
or
mov
or
sarl
das
xor
lea
push
cmp
repz
jbe
aam
push
or
push
add
push
or
push
jmp
cmpsl
sahf
adcl
aaa
push
xor
imul
mov
bound
aas
jmp
jb
sub
cmp
orb
push
or
adc
xchg
lea
outsl
int
movsb
sti
in
mov
test
les
or
into
and
jae
sbb
cmp
jo
pop
ss
inc
xchg
js
ljmp
push
arpl
or
inc
arpl
jmp
add
je
push
fcomip
out
mov
and
or
dec
sub
ror
mov
andb
cmc
popf
adc
jbe
movsb
dec
cwtl
sbb
into
or
subl
mov
mov
xchg
and
pop
mov
mov
mov
xor
test
mov
faddp
imul
or
lea
cld
adcb
mov
cmpsl
push
sub
xchg
pop
int3
pop
xor
dec
int3
mov
or
jbe
mov
push
and
inc
push
test
aam
and
ja
pop
repz
jl
inc
jg
sbbl
mov
shlb
rcrl
fiadds
push
pop
clc
cmp
jle
arpl
lods
js
aaa
dec
and
nop
mov
popf
pop
popf
dec
push
imul
iret
and
rclb
mov
sub
out
sti
test
inc
neg
lods
insb
dec
aam
jns
lds
loope
orb
adc
push
inc
jg
jne
bound
sub
jmp
mov
mov
les
and
pop
mov
sti
xor
sub
jmp
int3
fdivl
xchg
lret
das
hlt
jge
outsl
xchg
rorl
pusha
dec
mov
jle
inc
adc
sbb
lods
xor
sarl
add
lahf
aam
adc
arpl
push
ret
mov
test
pop
test
push
add
divb
sbb
scas
fsub
sbb
scas
sub
sbb
test
fnstsw
push
or
cltd
mov
pop
jb
dec
jl
dec
fabs
adc
data16
stos
decl
mov
and
mov
test
dec
inc
roll
mov
jl
jne
sub
cmc
mov
es
stos
gs
jle
addl
mov
std
subb
xchg
inc
jns
aas
mov
rclb
sahf
lea
stos
inc
jge
add
xchg
jecxz
jmp
outsb
xchg
shll
mov
je
adc
stc
xchg
stc
inc
scas
ret
ja
lods
enter
xchg
mov
push
in
pop
aad
int3
lret
nop
dec
adc
ret
mov
ds
fmull
je
scas
inc
fisubs
fcompl
xchg
ret
cmpsb
faddl
faddl
cli
cs
pop
pop
add
sbb
sbb
or
aas
add
inc
push
xchg
mov
jge
sbb
and
jnp
arpl
push
std
jge
ret
jecxz
mov
imul
out
cmp
rcrb
cmpb
mov
hlt
add
dec
mov
push
pop
sub
loopne
push
fxam
mov
cmp
jmp
shll
pop
mov
ss
into
or
out
xor
inc
cmp
jo
cmp
and
jecxz
in
xlat
cli
addr16
enter
jecxz
hlt
sbb
mov
sub
jae
gs
push
ss
jno
add
mov
jecxz
jno
push
loopne
gs
daa
xor
xlat
push
fbstp
js
sar
cli
enter
mov
adc
sbb
ja
filds
loop
fnstsw
pop
ret
xchg
cmpsb
xchg
pushf
xlat
xchg
jg
loopne
loopne
lods
ficomps
and
scas
jne
sub
pop
int3
add
call
dec
das
push
rcrb
test
jl
das
lds
aaa
inc
pop
leave
bnd
mov
push
inc
ds
or
js
int3
xlat
add
push
addb
inc
pop
into
data16
cwtl
sbbb
lods
mov
and
lret
push
cmp
adcb
pop
and
add
stos
xor
dec
jb
aad
mov
mov
mov
push
and
cli
pusha
and
xchg
mov
popa
dec
dec
push
xor
ret
int3
movsl
xchg
dec
fdivp
das
pop
mov
pop
jmp
pop
mov
jnp
test
mov
mov
jmp
add
pop
lock
push
xchg
int3
xor
pop
dec
lock
loope
inc
mov
bound
or
or
cmc
or
mov
fcoml
subb
pop
mov
cmc
push
sarl
daa
int3
jmp
inc
or
lods
mov
cmp
mov
or
pop
andl
imul
pop
xor
and
jle
dec
ljmp
add
adc
lds
pop
jmp
fwait
xchg
or
jl
dec
cmc
xor
cmp
or
lock
sbb
mov
fdivrs
clc
dec
inc
push
sarb
push
inc
testb
cmp
out
jp
lods
aam
inc
sub
gs
clc
adc
mov
jne
test
xchg
lods
xchg
inc
push
push
pusha
outsb
ret
add
or
rep
insb
das
test
mov
std
pop
add
hlt
aad
or
jnp
call
ror
test
push
sbb
cs
dec
xor
ficomps
dec
imul
or
jnp
cltd
icebp
xor
popf
jg
add
mov
pop
lea
pop
rcl
shll
dec
or
outsb
lret
fbld
cmp
int3
in
test
loop
lods
out
stc
xor
pop
test
pop
dec
push
mov
bound
or
ret
push
jae
mov
in
lcall
xchg
jnp
mov
xor
rorl
and
stos
lods
push
scas
jl
pop
sub
test
or
push
les
nop
xchg
pop
cmp
test
adc
cmc
mov
ljmp
pop
jecxz
add
in
aam
and
nop
enter
fldl
push
pop
xor
sub
push
lods
and
daa
into
ljmp
into
mov
negb
cmp
sub
sub
push
repnz
mov
cmp
std
jb
or
mov
cmp
jno
inc
adcl
sbb
push
cmp
push
cld
xchg
jmp
pusha
stc
push
inc
scas
jecxz
and
add
push
xlat
addr16
xchg
and
pop
mov
int
into
repz
sbb
sub
es
mov
sub
or
scas
push
insl
imul
dec
lods
inc
nop
incl
stos
adc
inc
nop
gs
mov
mov
ret
jno
scas
sbb
out
call
xor
nop
fxch
push
inc
and
dec
shll
stos
pop
lahf
lods
cli
scas
sahf
mov
mov
pop
lret
stos
js
cmpl
pop
push
mov
leave
dec
mov
imul
inc
cmpsb
aaa
jno
fcoml
jg
dec
fistpll
imul
jmp
lods
adc
push
aaa
xor
fs
xchg
lret
or
idiv
xorb
out
push
mov
add
mov
pushf
scas
jl
aaa
mov
inc
in
mov
and
and
emms
in
lret
push
movsb
rclb
in
subl
xchg
aad
pop
or
or
pop
lret
cmpl
cmpsb
dec
adc
lret
cmp
ficoms
ret
imul
test
add
ret
cmc
push
cmp
jno
dec
pop
and
das
add
add
adc
mov
push
cmpsl
pop
das
dec
dec
daa
fs
sub
scas
push
sarl
int3
je
sub
dec
pop
or
addr16
push
ret
sbb
jg
sbb
pusha
add
jnp
shll
leave
pop
jp
iret
fsubr
cmp
rolb
xchg
lret
dec
mov
xor
scas
repz
outsb
repnz
je
sub
les
mov
js
inc
or
mov
add
add
repz
jecxz
xor
xor
int3
inc
pop
aam
mov
xor
dec
fsts
cmp
mov
push
mov
pop
inc
arpl
ret
dec
xlat
and
mov
or
rep
test
bound
and
je
xlat
jp
clc
xchg
mov
lahf
add
inc
xlat
cmp
rorb
sub
push
in
in
ljmp
lcall
fs
pop
xor
lahf
cmp
mov
xor
mov
cmpsl
adc
inc
and
cmp
mov
mov
fdivs
push
pop
faddl
dec
mov
out
int
cmpsl
jle
shl
orl
sub
mov
imul
and
mov
scas
jmp
rcrb
xor
pop
stos
aam
add
add
add
pop
rep
and
lods
call
nop
xchg
insl
jge
push
push
cmpb
daa
sub
lock
and
lcall
lea
repnz
xchg
add
adc
mov
fucomip
mov
fdivs
mov
sbb
cmp
mov
inc
sub
pop
mov
mov
jl
mov
pushf
xchg
mov
xchg
adc
or
pop
in
fistpll
jg
inc
jge
mov
lods
xor
xlat
lret
xor
cld
int3
out
mov
inc
pop
ret
xchg
jl
sbb
aad
cwtl
mov
out
mov
in
shr
pop
hlt
add
lret
cld
mov
pop
dec
sbb
ret
jp
lods
push
pop
xchg
sbbl
sub
add
or
add
sub
jb
pusha
push
popa
iret
or
dec
outsb
xor
xchg
xor
mov
sbb
pop
pop
mov
ss
aam
cmpl
xchg
pusha
pusha
test
lahf
sbb
adc
push
jno
jae
popa
inc
add
data16
cld
orb
dec
js
lret
push
pop
jns
out
cltd
mov
or
push
cmp
mov
cmpsb
or
or
call
push
out
jnp
adc
dec
sbbb
jecxz
inc
daa
add
jns
ret
and
roll
pop
insl
push
dec
add
add
jle
adc
push
icebp
and
clc
test
dec
cmp
or
fcmovnb
call
cmpsl
xor
mov
daa
sti
shld
movsl
rolb
or
inc
cmp
shl
pop
fcom
pop
xchg
fisubrl
aam
cltd
xchg
insb
mov
push
mov
push
pop
ficoms
jns
cs
push
jge
adc
jle
dec
out
inc
pop
sti
fidivrl
mov
scas
les
bound
pushf
popl
fiadds
mov
add
pop
cmpsl
ljmp
loope
shl
or
loope
push
cmpl
jae
xchg
sub
jg
adc
les
mov
xchg
arpl
mov
xchg
les
jno
sbb
dec
aad
in
cmp
fbstp
add
mov
mov
subl
cli
cld
movsb
fs
jmp
add
jle
sub
lahf
in
add
xchg
call
test
addr16
cwtl
stos
shrl
mov
cwtl
popa
jae
or
test
push
fsubrs
lock
test
mov
repz
sbb
push
test
out
xchg
xchg
enter
jge
pushf
mov
mov
jle
lcall
jge
or
xor
in
sbb
push
or
movsl
and
jl
imulb
add
inc
dec
add
xchg
rcrb
jecxz
cmpsb
cmp
jns
inc
mov
adc
or
jecxz
xchg
push
lret
dec
loop
mov
cmp
add
adc
cmp
adc
lcall
mov
lods
jle
mov
outsb
mov
cld
cmc
fcomps
imul
in
pop
addr16
fistl
popf
push
add
jne
add
xchg
inc
and
dec
or
xchg
and
shlb
addr16
jno
push
mov
mov
add
insb
dec
or
cwtl
cmp
xor
xchg
cmp
adc
pop
cmp
xchg
or
pop
sub
pop
test
jle
aas
or
shlb
or
jg
add
sahf
xchg
mov
xchg
sar
xchg
dec
xchg
imul
insl
add
ja
pushf
aaa
test
in
push
cmpl
fisubl
dec
inc
addr16
xchg
pop
jnp
rcrl
and
aam
dec
mov
arpl
roll
mov
cmp
mov
rcrl
aam
cmpsl
mov
push
int3
pop
xchg
mov
lahf
pop
mov
xchg
push
add
cmp
cltd
shlb
cli
imul
dec
mov
xor
out
jmp
push
dec
outsl
inc
std
jb
dec
inc
push
dec
test
mov
in
pop
mov
mov
cmc
xchg
jge
nop
notb
mov
data16
mull
push
insb
adc
in
lahf
repnz
mov
out
loope
xlat
dec
mov
pop
inc
mov
enter
or
or
movsl
xlat
rcrb
jnp
or
in
outsb
jno
mov
or
inc
fnstenv
movsl
pop
adc
jnp
pop
mov
lods
dec
nop
mov
push
subl
mov
sbbb
add
jmp
push
cli
jo
lds
out
out
loopne
dec
or
pop
ds
loopne
mov
add
xchg
ljmp
cmp
sbbb
loopne
xchg
push
adc
xchg
dec
lahf
xchg
scas
mov
cmpsb
mov
aam
popf
addl
add
clc
sub
add
jne
push
pop
jg
cmp
fsubs
arpl
iret
jb
pop
mov
insl
jecxz
xchg
scas
int
jmp
ret
cmp
mov
lret
push
int3
jle
mov
dec
fdivrl
jge
mov
popf
push
pushf
sub
outsb
mov
push
add
out
adc
fmull
or
gs
inc
aam
aaa
ja
jnp
popf
popa
fcoms
dec
fnstsw
sub
adc
jecxz
push
scas
enter
mov
cli
popa
imul
jne
xchg
lock
lds
sub
xchg
or
pop
pop
repz
mov
xor
xor
sbb
inc
push
int3
int
int3
add
stc
add
fwait
xchg
jle
dec
xchg
mov
cmp
ljmp
dec
fimuls
xor
cltd
test
cmp
loopne
push
call
cmp
pop
cmc
push
sub
adc
jo
daa
adcl
fildl
cmp
and
ja
popa
imul
push
mov
cs
mov
mov
test
jmp
push
loope
inc
pop
ss
pcmpgtd
cwtl
insb
push
adc
pop
out
push
decl
aad
ds
push
cld
sub
outsl
sbbl
test
xor
or
mov
dec
push
and
xchg
dec
jne
loopne
dec
mov
aaa
outsb
mov
popl
aad
gs
xchg
dec
add
and
xchg
clc
addl
adc
pop
pop
int3
sbb
int3
fwait
imull
xchg
push
outsl
repnz
aam
popa
stos
xor
in
mov
push
mov
and
xor
loop
lods
pop
lds
cmp
mov
je
jl
mov
ror
sub
jnp
jle
and
fdivl
jbe
fcoml
rcl
sbb
andl
out
ss
mov
test
pop
mov
push
mov
push
inc
stos
mov
sub
arpl
lea
mov
mov
neg
faddl
jecxz
push
dec
cmp
out
jge
push
push
mov
test
xchg
push
les
arpl
out
sahf
mov
popf
cmp
in
aam
test
fisubrl
subl
sbb
das
jp
pop
daa
or
jecxz
fsubrl
dec
aam
addl
aam
xchg
imul
loopne
xor
xor
jecxz
xor
or
sub
push
mov
mov
in
mov
mov
xor
cld
cmc
test
lock
jne
mov
pop
mov
sbb
fsts
dec
fldenv
xchg
loopne
xor
das
cs
dec
mov
fdivr
fdiv
lret
mov
les
rol
fadds
inc
inc
xor
movsl
add
mov
mov
lahf
lock
push
mov
hlt
out
cli
mov
shr
mov
out
js
pop
jbe
lret
inc
imul
xor
jno
and
movsb
push
aad
data16
loopne
aas
mov
ljmp
jae
inc
call
xor
iret
out
jb
in
jg
gs
cmc
sub
add
outsb
loopne
or
jge
frstor
jge
xor
out
inc
mov
pushf
lea
push
int3
mov
mov
xchg
xor
pusha
sub
sbb
testl
rclb
mov
fildll
xchg
in
cmpb
mov
inc
mov
incb
dec
jae
pushl
dec
xor
repz
lods
push
mov
add
push
ds
mov
fildl
sbb
arpl
enter
scas
or
sar
jl
fcomp
adc
pop
fucompp
mov
push
push
and
mov
fnstsw
lcall
and
push
mov
inc
or
dec
fisubrs
les
loopne
std
rcrl
cmp
arpl
cmp
push
inc
jge
lret
int
popa
and
adc
jae
xlat
outsb
lods
mov
push
and
and
push
inc
push
shrb
repz
push
call
icebp
js
mov
fs
add
mov
cmp
sub
mov
xchg
or
mov
cmpsb
push
push
push
jge
lret
jmp
mov
ret
adc
shlb
enter
xchg
xlat
clc
sbb
jge
mov
sub
mov
cwtl
mov
pop
dec
les
cmpsb
dec
mov
mov
test
dec
jno
xchg
jbe
jge
or
ljmp
orl
and
sbb
jno
cmp
cmp
fbstp
lret
pop
cld
adc
mov
ret
out
mov
sbb
xlat
in
or
push
mov
mov
pop
sub
pop
fnstenv
loope
or
loopne
test
std
outsl
xchg
outsl
mov
mov
scas
dec
outsl
xor
es
and
gs
insl
or
sar
cmp
dec
dec
push
rcll
insb
inc
popf
rcrl
mov
popa
mov
inc
into
inc
sbb
pop
push
ds
test
test
mov
les
jle
outsb
das
out
out
cmp
add
cltd
jno
les
xorb
push
mulb
mov
cltd
test
mov
jg
sbbl
ja
inc
push
mov
movsl
cmp
pop
ljmp
adc
ja
cmp
push
imul
ret
and
idiv
mov
sete
pop
out
lcall
xchg
testb
addr16
scas
das
inc
sub
xor
ret
push
mov
dec
ficoml
ffreep
xor
das
iret
and
cmp
push
ret
lret
sub
addr16
ret
aas
sbb
aaa
pop
sbb
mov
jg
mov
aas
loop
dec
sti
add
push
into
jne
adc
xor
les
dec
sbb
cmpsl
xor
cmc
arpl
mov
inc
leave
repnz
popa
sub
sbb
leave
call
cmpsl
push
push
popf
lahf
pop
inc
sub
subb
jbe
pop
insb
inc
jns
cmpl
mov
inc
sbb
daa
fwait
pop
mov
add
cltd
int
dec
adc
insl
adc
mov
cmp
pop
mov
add
fs
push
and
adc
and
gs
or
mov
enter
xchg
xchg
add
xchg
lods
pop
pop
repz
add
les
or
xchg
pop
ds
xchg
pop
push
mov
add
loopne
mov
jbe
idiv
repz
test
push
push
jne
cmp
in
xchg
adcb
add
das
jecxz
enter
jb
jp
mov
sub
push
in
sub
mov
jge
pand
sub
je
or
std
xchg
int3
hlt
or
cmp
call
cmp
xchg
mov
cmp
in
push
mov
add
mov
push
pop
xchg
jno
inc
sbb
push
push
ret
and
outsl
jecxz
add
fimuls
loop
jo
cmc
xor
mov
pop
pusha
pushf
loope
imul
enter
pop
aaa
cmp
fdivrs
mov
add
out
daa
sub
outsb
fbstp
mov
jo
xor
and
add
aas
lcall
ror
jae
lahf
dec
or
repz
fwait
and
imul
stc
int3
in
mov
jae
loope
xchg
pop
xchg
and
sub
sahf
mov
xor
mov
aad
jmp
push
jo
insl
lret
lahf
jbe
ja
into
shl
add
dec
adc
xor
xchg
lea
and
add
cmp
xchg
add
fmull
xchg
cmp
jo
add
cmc
call
dec
add
mov
jb
adc
test
lcall
out
mov
rcr
inc
push
pop
stos
xchg
mov
jo
jmp
jecxz
mov
imul
stos
jmp
mov
jmp
inc
add
or
cmp
jns
stos
std
sub
push
dec
pop
pop
sbb
imul
in
push
imull
mov
sti
jnp
push
insb
out
sahf
adc
pop
incl
fwait
add
dec
pop
clc
push
cmc
push
jle
mov
je
mov
inc
mov
add
inc
mov
mov
push
fnstsw
cltd
shll
xor
or
push
lea
mov
jp
lods
fcoms
push
jns
inc
inc
ss
loope
mov
jge
lret
inc
push
fsubs
cmpsl
inc
fwait
push
mov
in
push
std
sbb
je
pop
or
or
repz
mov
lods
mov
test
roll
bound
in
cmp
and
sbb
ljmp
mov
cmp
xchg
mov
es
outsb
out
mov
orb
testl
push
fistps
fmuls
ss
shll
push
out
out
repz
out
jb
sub
lock
mov
fdivs
mov
sbb
pop
cmp
add
stos
jp
mov
adc
fcmovne
aaa
into
push
call
ror
add
test
stos
adc
pop
pop
push
test
adc
pop
test
xchg
cld
rcr
push
sub
xor
mov
push
or
push
and
fmulp
test
lods
sub
mov
xchg
test
fimull
rclb
pop
mov
jb
and
sbb
jge
jnp
scas
dec
jne
cmp
enter
jg
and
clc
or
xchg
sub
cli
and
cltd
add
fsubrs
data16
or
adc
imul
mov
sti
sbb
aaa
out
xlat
repnz
push
mov
inc
in
dec
or
adc
dec
cmp
and
insl
movsl
negb
into
frstor
popf
xchg
push
jno
ficomps
or
addl
repz
in
push
sti
sbb
xchg
mov
enter
adc
and
es
sbb
inc
icebp
push
enter
fadds
add
push
out
stc
xchg
xor
test
push
adc
rcrb
or
cltd
mov
ljmp
punpcklwd
inc
jb
mov
push
mov
or
xchg
rolb
pop
or
out
stos
sbb
call
sbb
cli
pop
in
or
mov
pushf
sbb
jns
pop
xlat
push
ds
shlb
fimull
enter
dec
add
fmuls
scas
sbb
mov
adc
js
aam
sub
pop
cmc
shll
or
mov
test
sti
mov
xchg
jb
pop
mov
js
adc
adc
repz
lods
in
fnstenv
dec
mov
ret
jge
cmp
sub
dec
jo
add
fnstcw
lods
cld
adc
int
push
div
stos
icebp
sub
cltd
movsl
xor
dec
cmp
cmpsl
les
or
fwait
rorl
fucom
pusha
test
imul
xchg
push
loope
mov
and
test
adc
rcrb
xchg
push
sub
jp
inc
add
pop
push
bound
dec
sub
cmc
adc
pop
push
mov
inc
call
popf
push
in
adc
rol
adc
mov
pop
outsl
repz
mov
outsb
popa
pop
fcmovne
push
outsb
cmp
mov
lcall
or
push
mov
inc
dec
jp
lock
sub
sbb
sarb
mov
push
popa
jbe
addr16
js
xchg
and
loopne
sbb
cmc
pop
pop
dec
inc
xchg
dec
inc
add
jecxz
xor
sbb
jg
mov
addb
fmul
jnp
jmp
or
inc
inc
adc
fwait
mov
test
fwait
or
xchg
xlat
inc
adc
lret
inc
cld
push
mov
hlt
insl
xlat
ret
pop
sbb
stc
xchg
inc
cwtl
imul
inc
jb
into
sbb
enter
test
add
es
mov
stc
lods
aas
or
jo
adc
or
cmp
push
stos
shr
movsb
mov
mov
sbb
inc
jb
push
and
add
or
popf
sub
add
sub
sbb
push
mov
or
sbb
xchg
mov
jns
jbe
xchg
sub
sbb
mov
pop
scas
adc
sub
leave
ficomps
xor
scas
mov
mov
push
std
fucomip
div
xchg
outsl
jmp
pusha
mov
subl
jp
out
and
pop
out
mov
je
in
shrl
lret
into
ret
mov
int
sbb
jne
pop
jo
aas
cld
lret
mov
mov
jg
sbbl
jle
insl
ret
popf
scas
int3
xor
cmp
scas
jns
aas
mov
popf
subb
into
mov
lds
data16
jns
and
fcoml
mov
inc
push
repz
in
mov
pusha
outsl
addr16
add
gs
xor
xchg
daa
dec
cwtl
adc
fistpll
jp
and
cld
mov
shl
jae
in
fcmovne
cmpsb
je
dec
or
inc
cld
push
xor
push
or
mov
clc
aaa
push
rcrb
ficoms
fcoml
xchg
gs
push
xor
movsl
push
jle
out
push
imul
adc
add
std
mov
cwtl
fistl
pop
test
jne
and
pop
call
ljmp
mov
add
pop
mov
xchg
adc
or
lods
in
pop
or
or
pop
lds
mov
sahf
push
or
jo
inc
int3
je
inc
add
jg
enter
popf
inc
push
inc
test
mov
push
lds
scas
aam
push
ljmp
mov
leave
cmpsb
pop
mov
cmp
lret
lds
insb
xchg
ljmp
jl
inc
repnz
and
bound
sbb
les
cld
lret
dec
adc
sbb
imul
sub
mulb
add
cwtl
adc
std
push
popf
in
in
jg
or
pop
fs
stos
repz
xor
hlt
cmpsl
pusha
pop
std
cmc
pop
inc
xchg
adc
xchg
or
sub
sub
lds
mov
or
notl
push
lcall
cmpsb
rep
or
dec
ficoms
mov
dec
push
lods
fisubrs
xchg
shlb
jae
lock
js
jnp
icebp
sti
and
icebp
flds
sub
cmc
dec
repnz
push
cmp
not
lds
insb
jge
outsb
jecxz
std
loopne
ret
adc
xchg
sbb
push
push
leave
pop
mov
pop
outsl
jae
cs
add
scas
jle
push
mov
cmp
hlt
sarl
icebp
add
scas
mov
jae
out
mov
push
movsl
test
fs
adc
jp
push
lds
lods
in
les
jl
stos
cmp
lahf
mov
dec
sbb
out
nop
sar
mov
push
loope
movb
and
stos
xchg
sbbl
jmp
mov
cmp
rclb
or
dec
or
jbe
cmc
movsl
xchg
rcrb
loop
and
xor
sub
lods
push
hlt
in
inc
inc
xor
pop
fisttps
xchg
fldl
testl
push
aad
lods
rep
inc
add
dec
sbb
dec
dec
pop
pop
and
call
sub
dec
inc
mov
jmp
cs
or
int
mov
lcall
stc
cmp
pop
addr16
push
or
loopne
sti
scas
fistps
test
cmp
push
push
pop
mov
mov
pop
sbb
dec
ss
ret
test
out
lds
fisttpl
push
mov
jb
mov
add
mov
scas
jb
xor
repnz
out
movhps
pop
and
div
testl
popa
ljmp
sub
add
sub
inc
jno
push
ds
imul
sbb
shl
sbb
xor
xchg
repz
push
jno
jge
jg
and
pop
mov
clc
cmp
jge
sbb
into
push
pop
pop
jg
stos
dec
jo
add
jo
jnp
adc
lea
and
jb
cmp
movsl
push
movsb
js
push
xchg
sar
cmp
mov
sub
data16
in
inc
loopne
xor
lret
leave
lods
add
xchg
cmp
add
mov
inc
idivb
bound
call
mov
test
lds
mov
mov
cli
dec
mov
sbb
and
jno
out
pusha
loopne
adc
xchg
pop
sbb
mov
fistpll
stc
pop
hlt
pushf
callw
or
xchg
mov
movsb
sbb
xor
jle
mov
dec
mov
lea
sub
mov
jo
pusha
push
pushaw
jecxz
bound
in
mov
xor
lods
sub
mov
jns
and
mov
rolb
cmp
pushf
loopne
xor
lock
jge
mov
xlat
cwtl
mov
mov
dec
jecxz
and
out
movsl
cmpsb
in
cmp
xchg
adc
sub
cmp
mov
aas
cmc
or
sub
cmp
adc
mov
sub
pop
sti
cltd
inc
sbb
dec
pop
xlat
push
dec
in
xchg
and
and
mov
or
cli
adc
cli
xor
scas
jae
mov
gs
push
repnz
mov
cmp
lea
sub
dec
orl
dec
in
lahf
popf
repnz
dec
adc
inc
inc
inc
jmp
lods
jge
sbb
leave
sub
fcmovu
or
cs
outsb
adc
ljmp
jmp
lea
divb
and
lock
test
push
sti
dec
push
sub
jo
scas
xor
bound
loop
sarb
lfs
pop
ds
es
mov
movsl
add
jae
leave
sbb
xlat
hlt
cld
pusha
sub
fimuls
dec
jae
scas
sbb
inc
lock
popf
cmp
xchg
lods
mov
aam
xchg
lea
pop
add
xlat
jl
insb
ss
adcb
arpl
and
mov
push
cltd
imul
sbb
outsl
fistl
push
xchg
xlat
sbb
push
push
jne
jl
data16
and
mov
mov
add
lods
dec
stos
jge
cmp
test
push
jne
push
loop
outsl
xchg
adc
stos
adcb
mov
or
idivb
aas
dec
mov
ficompl
stc
in
pop
js
mov
in
mov
mov
fistl
inc
mov
loopne
lahf
insl
andb
cmpsb
repz
mov
imul
std
je
inc
add
xchg
pusha
add
fcom
jns
fnstsw
xchg
insb
js
decl
mov
push
sub
addr16
jnp
imul
pop
mov
xchg
jnp
jbe
jg
mov
push
sbb
jne
adc
arpl
ja
push
mov
jbe
or
jb
and
insl
add
movsb
pop
dec
mov
outsl
scas
lods
stos
inc
addr16
sbb
push
ja
push
mov
pop
sahf
rclb
and
ljmp
adc
loopne
cld
jg
xor
fdivrp
jmp
jae
cmp
jno
jns
pop
inc
aas
pusha
sarb
gs
mov
xorb
idivb
sbb
xchg
inc
jmp
xchg
fdivr
jb
in
push
pop
mov
mov
fwait
sbb
sti
insb
icebp
ljmp
imul
jecxz
addr16
mov
jb
in
es
sub
dec
mov
scas
loop
out
mov
inc
mov
fildl
inc
inc
dec
cwtl
mov
loope
mov
add
mov
es
sbb
lret
xor
push
and
xor
das
jl
mov
testl
sti
cmpsl
test
mov
mov
jecxz
cs
repnz
or
movsb
lret
dec
mov
adc
fstps
into
dec
mov
sbb
inc
loop
mov
adc
je
cs
pushf
daa
push
push
dec
cmp
mov
mov
adc
lock
jmp
movsl
clc
mov
mov
cmc
jp
stc
xchg
mov
js
jbe
xor
dec
jno
jb
push
sbbb
ret
insb
mov
scas
mov
jge
dec
js
xchg
sub
push
faddp
movsb
fs
push
cmp
cli
xchg
fwait
mov
rorb
sbb
push
fnstsw
and
jbe
imul
and
jne
scas
xor
nop
outsb
adc
gs
sub
add
cmp
fld1
fildll
adc
push
pop
mov
adc
lds
gs
or
inc
xchg
subl
and
fs
dec
mov
pop
shlb
and
idivl
ss
and
cmp
iret
jb
mov
pop
mov
jle
movsb
dec
cwtl
push
loop,pt
popa
vpmullw
aaa
and
and
push
xlat
xor
mov
in
in
mov
jl
test
in
xor
stos
and
test
divl
stc
sar
jns
mov
mov
adc
push
hlt
das
lahf
xor
add
inc
fwait
out
sahf
mov
pop
insb
test
cmpsb
mov
ret
loope
shll
pushf
mov
push
mov
push
and
pop
sub
aam
cmp
leave
push
insb
pop
cmpsb
add
stos
add
add
sbb
cmc
das
fstp
xor
jecxz
repnz
shll
xor
fnstsw
das
pop
fiadds
sbb
jb
xchg
iret
sbb
jg
xchg
in
adc
aas
jmp
push
repnz
pop
aas
jg
rclb
xchg
int
cld
mov
cmp
jae
mov
xlat
cmp
into
insb
mov
xlat
jge
mov
sub
xor
adc
adc
repz
mov
xchg
int
or
or
arpl
pop
sub
pop
xor
add
sti
jne
sbb
sti
lods
clc
cld
pop
pop
mov
jecxz
mov
mov
pusha
mov
and
sbb
in
ret
std
push
dec
xorl
js
and
fildl
and
pusha
cmpsb
inc
dec
jae
loopne
inc
push
or
push
addr16
fxch
push
xchg
test
sub
testl
jno
jle
mov
and
pop
pop
push
in
add
jg
int
faddl
cmpl
fiaddl
mov
cmp
addr16
fprem
lods
add
dec
mov
mov
loop
into
cmpsl
mov
and
and
loop
and
popf
xchg
inc
and
adc
inc
jnp
or
sahf
rorb
ss
jo
mov
aas
nop
test
mov
in
push
lock
xchg
or
mov
arpl
mov
cmp
dec
iret
mov
jae
add
sbb
add
cli
cmp
mov
xchg
sbb
outsb
xchg
add
das
adc
loopne
xchg
jp
lret
mov
outsl
out
cmp
arpl
loopne
xor
add
mov
jns
hlt
jmp
lods
add
enter
pop
aad
push
adc
jmp
sbb
mov
push
rclb
mov
aam
lods
dec
and
xchg
mov
inc
cmp
cmpl
mov
stc
sub
lock
mov
fcmove
mov
popf
enter
roll
aad
dec
mov
lahf
dec
lcall
imul
sbb
inc
lret
jge
cmp
idiv
mov
lock
add
xchg
dec
fcompl
outsb
jge
sti
jp
xlat
int3
test
sub
or
je
adc
jge
mov
and
adc
fidivrs
cmp
insb
sti
cmp
shll
cmpsl
icebp
dec
or
orl
cmpsb
and
xchg
lret
pop
sbb
shr
jle
ret
gs
lret
or
xor
insl
or
stc
xor
mov
sbb
and
adc
shlb
push
add
cs
testl
xor
push
out
and
das
or
or
dec
mov
insb
mov
test
mov
sarb
imul
movl
mov
push
xchg
or
pop
lods
pop
dec
cld
fsub
push
lods
fdivr
xchg
loopne
and
call
sub
ss
xchg
cmp
lds
dec
or
mov
cmp
jecxz
fnsave
mov
popa
lret
add
mov
and
xchg
test
xchg
mov
sar
add
bound
pop
decl
ds
push
cmpsb
cmp
cmp
mov
fwait
addb
sbbl
inc
mov
test
mov
adc
repnz
lret
add
pop
and
and
and
popf
int
imul
xor
jae
cmp
jle
outsb
ja
mov
nop
popf
pop
ret
jno
xchg
mov
jp
std
xchg
xor
sbb
mov
mov
ret
out
cmp
add
cmovo
gs
leave
es
add
mov
das
mov
pop
adc
test
sub
mov
jecxz
lods
xchg
jb
das
in
sub
data16
mov
inc
jnp
xchg
add
rolb
sarl
orb
clc
out
je
and
sbb
add
jbe
ret
scas
je
scas
test
mov
add
in
xlat
ror
shll
dec
jg
mov
push
inc
push
sarb
je
sbb
mov
cmp
ffree
int3
jmp
push
xor
pop
jo
dec
adc
pop
shl
mov
dec
cld
mov
mov
push
mov
push
hlt
push
subb
jg
cs
std
into
jecxz
std
push
es
jge
dec
jae
push
daa
subb
in
cmp
rcll
jae
fwait
mov
in
loop
inc
mov
mov
repnz
or
adc
test
or
icebp
adc
scas
fdivl
or
inc
incl
inc
pop
lcall
mov
cmpsb
adc
mov
sbb
clc
int
js
cmc
mov
test
in
adc
and
push
ret
adc
out
xchg
out
xchg
add
inc
jmp
rclb
pop
pop
scas
stc
pop
fsubl
sub
clc
adc
popa
inc
pop
dec
adc
ror
outsl
sub
sarb
dec
je
movzwl
aam
jno
pop
test
adc
sbb
sbb
test
xlat
imul
inc
pushf
jge
cmpl
nop
shrl
pop
mov
dec
mov
pop
imul
dec
and
repz
cltd
or
decl
decl
rcrl
test
mov
js
xor
data16
stc
fwait
popa
inc
neg
and
lret
scas
sbb
call
mov
push
jp
andl
push
lock
jae
inc
push
jbe
mov
dec
fdivl
jns
fcoms
movhps
enter
lods
cwtl
es
pop
int3
push
mov
cmp
test
sbbl
insl
dec
stos
cs
dec
adc
mov
xchg
mov
mov
test
fwait
stos
lds
sub
pop
jmp
loope
inc
xchg
jno
cmp
loopne
js
fnsave
imul
sahf
shll
orl
int3
add
jg
ret
xchg
inc
dec
stc
sub
and
lret
adc
pusha
gs
int
cmp
dec
inc
outsl
jbe
xor
cltd
aas
sahf
mov
adc
rclb
stos
ror
mov
cmovb
pop
and
lea
in
testb
mov
icebp
addb
fwait
dec
xorb
sti
xlat
sbb
leave
cmp
xchg
outsb
dec
popa
sbb
lret
insl
sbb
xor
add
in
call
inc
push
sub
mov
inc
jmp
add
daa
mov
pop
cmp
dec
mov
fstps
inc
in
pop
test
mov
cld
ljmp
cmp
stos
lods
movsl
mov
out
inc
stos
mov
lret
int3
mov
into
pop
sub
mov
inc
enter
push
jo
adc
jmp
xchg
loopne
lea
jle
push
push
sarb
arpl
scas
jae
icebp
outsb
rorl
sub
adc
adc
jl
dec
mov
dec
and
hlt
pop
mov
push
and
or
jg
mov
das
loop
mov
lds
mov
jne
loope
adc
push
ljmp
xchg
and
and
add
cmc
mov
outsl
nop
idivb
test
sbb
xor
fwait
jns
sub
dec
push
outsl
enter
mov
call
in
out
rolb
sub
adc
sub
pop
movsl
sbb
negb
xor
sub
inc
sahf
or
shlb
mov
out
sti
sbb
test
out
xor
imul
dec
ret
ljmp
push
das
outsb
fsubl
fs
adc
jno
jo
pop
outsl
dec
inc
ja
mov
mov
or
neg
lea
cs
test
cmc
bound
pop
jmp
mov
sub
cmp
xor
jnp
call
jg
fwait
loop
into
shrb
xchg
add
add
sbb
inc
ud1
or
test
add
dec
in
xor
lcall
adcl
adcl
fidivrl
and
mov
int3
rcll
subb
pop
push
mov
adc
iret
lahf
je
lret
cmp
jle
push
push
je
or
adc
sbb
outsl
and
fwait
lea
adc
dec
jns
lahf
js
cli
push
inc
mov
int
inc
jmp
mov
xlat
xor
mov
andl
or
inc
sub
add
lret
or
lahf
fstpl
jae
push
mov
mov
negb
and
ja
arpl
xor
das
shll
push
mov
mov
clc
lahf
ds
enter
popf
sbb
andl
mov
add
mov
jne
pop
in
cmp
stc
das
hlt
mov
ja
adc
fdivrs
insl
movb
mov
inc
stc
outsl
popf
loop
jle
sub
scas
mov
insl
faddl
add
jb
shll
pop
inc
stos
pop
out
mov
shrl
je
fcoml
je
icebp
push
loop
sub
mov
cmp
mov
jp
imul
out
add
xchg
leave
and
push
call
push
push
jb
pop
xor
popa
mov
imulb
repnz
shrb
fwait
cmp
push
push
sahf
or
sbb
movsb
aam
dec
out
insb
and
and
mov
mov
das
loopne
pushf
imul
push
jo
cli
jge
jno
outsb
stc
imul
mov
pop
mov
add
daa
add
sub
jmp
push
xchg
insl
icebp
push
jp
xchg
cmp
ja
mov
jge,pn
add
sbb
and
lahf
inc
push
pop
and
sbb
jecxz
sub
dec
imul
int3
pop
cmp
pushf
add
cmp
pop
in
sarb
stos
ficomps
addr16
dec
ljmp
dec
clc
inc
sbb
or
fisttpl
push
out
xchg
xor
pop
xchg
mov
sbb
pop
cmc
fisttps
inc
add
lcall
mov
stc
add
sbb
pop
les
idiv
sbb
pop
mov
imul
cmpsl
mov
dec
and
mov
dec
mov
adc
test
stc
jnp
mov
xor
dec
and
stc
push
ds
aam
jae
sbb
jg
xchg
xchg
arpl
and
cwtl
cs
stos
xlat
imul
jb
loopne
sahf
outsb
mov
mov
mov
imul
aas
test
int
ds
test
out
pop
lcall
icebp
cltd
jo
xor
cmp
daa
xchg
call
add
mov
xor
add
sbbb
pop
jno
push
insl
adc
mov
outsb
cmp
jge
es
jae
push
ss
sub
lock
fisttps
ja
mov
sbb
call
int
mov
cmp
pop
clc
xor
jne
push
inc
dec
imul
adc
int3
in
repz
shlb
xchg
sbb
push
add
push
orb
in
mov
test
loope
sarb
insb
flds
or
cmp
and
sub
testl
adc
adc
call
xchg
adc
jge
jmp
add
movsb
aas
cs
andb
and
cmpsl
inc
clc
outsb
fnstsw
xchg
adc
bound
mov
push
push
jnp
mov
js
dec
fdiv
in
f2xm1
dec
xchg
out
xchg
pop
into
movsb
or
mov
es
mov
js
dec
adc
sub
jecxz
ja
mov
test
fdivl
push
inc
sbb
pop
stc
inc
sub
in
xor
and
push
sub
sub
loopne
pop
pop
sub
inc
adc
leave
xchg
push
or
sub
pushf
sbb
ss
add
std
mov
test
popa
sahf
ja
les
fs
inc
push
test
hlt
jp
xor
mov
xor
sahf
mov
mov
xor
xor
sar
gs
out
cmp
lahf
dec
mov
shll
xor
sbb
xor
inc
out
cmc
pop
jo
dec
mov
fcmovbe
or
xchg
dec
or
js
ret
pop
jno
adc
mov
mov
mov
shll
xor
xchg
or
sbb
xor
pushf
sub
cmp
cmpl
arpl
push
aam
outsl
or
mov
data16
loopne
cwtl
push
and
lret
addr16
lods
lret
rcrb
inc
inc
andb
aaa
push
outsl
enter
xchg
imull
cmp
stc
pop
in
pop
loopne
jne
and
pushf
repnz
fs
adc
mov
aam
sub
jno
mov
fwait
pop
movsl
jns
jmp
jge
xchg
sub
xor
xchg
stos
lock
lds
add
mov
mov
adc
lret
mov
popf
pop
push
shrb
xlat
push
mov
das
int3
jge
scas
xor
lahf
pop
mov
das
jns
jnp
lret
inc
das
xchg
outsl
xor
add
repnz
stc
jge
sti
es
movsb
mov
xorl
jns
mov
test
outsb
lret
in
repnz
push
mov
fstpt
arpl
insb
outsl
sub
rcl
arpl
mov
pop
pop
mov
inc
sub
or
pop
add
ja
push
xchg
mov
stos
jle
std
fidivl
sbb
inc
aad
add
push
negl
pushf
in
sub
sub
into
cld
rclb
int3
pushf
mov
adc
rcl
dec
inc
fwait
and
sbb
xor
pop
push
jbe
cs
add
pop
push
push
and
dec
xor
fists
fldt
or
dec
xchg
stos
ljmp
push
cltd
and
daa
mov
jns
xchg
pusha
das
inc
cmc
pop
adc
xor
and
add
icebp
addl
in
dec
aam
xchg
mov
imul
pop
inc
inc
fdivrl
orl
xchg
xor
adc
xchg
mov
push
xchg
mov
scas
jl
cmc
sbb
push
push
jb
mov
in
ret
and
push
js
repz
sub
ret
or
add
mov
sar
inc
shlb
pop
jnp
sub
dec
cmpsb
cltd
js
cmp
ret
test
lock
repz
and
imul
into
int3
push
stc
imul
adc
cmp
shlb
push
cmp
shlb
push
pop
mov
pop
xor
or
push
mov
mov
insb
int
filds
sub
mov
out
test
aas
add
loop
cld
sub
mov
iret
mov
sahf
add
arpl
jecxz
repz
mov
mov
fsub
pinsrw
js
pop
jmp
dec
push
das
arpl
mov
and
pop
jecxz
adc
jo
inc
cld
dec
push
or
inc
das
mov
jbe
xor
pop
adc
pushf
mov
mov
lods
addl
icebp
mov
dec
sbb
hlt
adc
out
je
xchg
lds
popf
pop
gs
xchg
mov
hlt
mov
cmp
mov
ret
sbb
inc
push
in
imul
cld
adc
xchg
mov
jns
int3
pop
stos
jge
mov
sbb
pop
aaa
jno
mov
or
xor
inc
jno
int
and
cmpl
mov
jg
pop
adc
movl
ljmp
adc
push
mov
mov
xor
fadds
pop
inc
add
mov
ds
repnz
mov
stos
jb
notb
jmp
sub
ret
mov
movsb
cltd
jmp
repz
xor
jbe
cld
lahf
jl
jnp
mov
and
andl
xchg
fisubrl
jbe
test
ljmp
xchg
mov
fldt
jl
aas
dec
stos
push
fsubl
daa
fistl
or
ds
dec
movsl
dec
pusha
pop
dec
js
div
xor
inc
mov
test
int
sub
pop
gs
sub
push
push
data16
push
cmp
out
xchg
cmp
in
push
out
pop
fs
sub
mov
rcr
rcrb
loope
scas
les
xor
pop
mov
xor
js
js
in
js
out
push
pop
dec
mov
ret
repnz
pop
sub
and
pop
xor
add
iret
sbb
je
jnp
int3
and
xchg
jl
or
push
and
inc
enter
mov
or
dec
icebp
scas
int3
lock
bound
sbb
fisubl
sub
testl
repnz
in
push
push
pushf
ljmp
bound
push
inc
mov
xchg
daa
test
xor
mov
sbb
push
shlb
push
dec
cmp
in
lea
clc
fcmovnbe
jp
xor
cmpsl
outsb
jns
jmp
popf
mov
movsb
dec
adc
adc
mov
lods
lahf
cli
jns
xor
lcall
pop
mov
ja
mov
bound
repnz
sub
test
or
pop
fldl
mov
icebp
push
cs
es
push
in
xor
sbbl
jns
mov
push
push
xor
inc
test
insb
push
mov
dec
mov
xchg
outsl
sahf
loope
mov
out
adc
jnp
loop
xor
or
jl
sub
std
mov
fcompl
mov
xchg
mov
je
or
sbb
stc
pop
cmc
fninit
and
sub
cli
mov
jge
lahf
in
outsl
dec
lret
xor
cwtl
iret
lock
xchg
arpl
mov
popl
in
pop
pushf
pop
pop
pusha
mov
ret
jno
sbbl
in
jg
xor
movsb
push
and
insl
rcr
mov
adc
push
dec
in
in
xchg
incb
sbb
dec
imul
or
push
les
cld
test
jg
lock
push
insb
sub
ljmp
sbb
xor
or
jecxz
mov
hlt
scas
lret
aad
sbb
mov
adc
or
mov
xlat
mov
fmul
mov
nop
xchg
loop
das
lcall
lods
pushf
in
dec
pop
and
inc
mov
push
outsl
fistpl
fdivr
xor
jae
cmp
push
stos
jne
mov
into
nop
pushf
mov
lcall
shl
jne
stos
imul
aad
aas
xchg
repnz
ret
adc
jbe
and
mulb
xchg
imul
outsb
in
aam
cld
fsub
pop
call
mov
test
add
inc
mov
lods
pushf
cwtl
adc
cld
lods
xchg
xchg
fwait
cmp
sbb
divps
loopne
push
cmpsb
mov
xchg
cli
add
xchg
mov
adc
out
mov
add
lcall
es
mov
inc
inc
cmpsl
nop
in
loop
sbb
add
and
shr
push
mov
mov
mov
je
les
push
pop
lea
sbb
enter
jno
inc
lods
mov
cmp
push
inc
stos
dec
std
and
movsl
mov
cli
orb
out
imul
pop
pop
adc
fcoms
std
fdiv
pushf
shrl
jl
xlat
sbb
cmp
daa
stos
mov
arpl
test
imul
or
lea
cmp
cmp
jne
mov
pop
or
xchg
gs
add
gs
xor
xchg
or
roll
dec
inc
rorl
lea
out
sbbl
mov
cld
adc
mov
ret
int
mov
xor
and
cmp
in
in
sbb
mov
repnz
repnz
pop
inc
imul
or
je
pop
cld
xchg
push
pop
or
jb
and
jecxz
clc
out
out
sbb
mov
fiadds
fdivp
insb
subb
lods
in
adc
mov
mov
xchg
add
dec
aaa
leave
stos
adc
sub
push
jo
mov
adc
and
rcl
scas
in
cmpb
inc
into
bnd
xchg
mov
and
adc
jge
addr16
push
mov
mov
shll
outsl
shl
or
xchg
xchg
icebp
adc
add
jl
mov
fcmovb
mov
jb
movsb
and
aam
and
es
pop
sub
movsb
nop
test
test
les
or
mov
mov
add
aam
adc
in
mov
add
mov
dec
ss
ljmp
push
dec
ljmp
daa
mov
fs
hlt
notl
pushf
jno
roll
jns
iret
pusha
out
lock
lret
addr16
nop
int3
xor
icebp
mov
pushf
loop
nop
je
sub
nop
aam
cmpsl
push
cs
push
popa
mov
add
in
ret
inc
or
out
lock
scas
jo
dec
cmc
test
add
dec
nop
in
mov
outsl
mov
cmpsb
les
js
mov
sbb
ds
cmp
pop
sbb
cld
mov
leave
jno
cmp
xor
jns
test
pop
scas
das
pop
dec
inc
xchg
aas
push
push
sub
add
add
fisubl
and
adc
dec
mov
imul
in
push
out
add
or
and
outsb
sbb
data16
xor
or
xchg
dec
iret
lods
add
bound
dec
imul
mov
jb
aaa
gs
dec
testl
push
mov
cmc
loopne
pop
xchg
scas
mov
lret
cmp
into
fadds
pushf
mov
rcrl
sbb
out
mov
and
cltd
test
movsl
jo
xor
xchg
xor
pop
call
enter
push
sub
cmp
pop
jns
mov
ljmp
andb
imul
insl
cmp
scas
lods
inc
into
jne
aad
adc
lret
dec
ficompl
aaa
and
sub
pop
js
lahf
push
cmpsl
inc
addr16
mov
jecxz
and
insb
push
rcr
inc
jns
jp
mov
pop
sbb
push
cltd
lock
negb
into
mov
es
lea
aam
stos
pop
stc
fnstenv
lret
dec
pop
adc
or
bound
inc
sub
cmp
sbb
sub
pop
movsl
sti
add
or
xchg
sarb
pop
xlat
mov
imul
aam
pop
into
mov
mov
jbe
jp
add
mov
aad
mov
fcomip
pop
mov
sbb
mov
xchg
ds
pop
mov
dec
dec
ss
push
sub
mov
fs
fs
rcll
gs
xor
sbb
sbb
xor
cld
fistpl
rolb
dec
push
out
xchg
testl
xchg
mov
add
mov
jb
jo
inc
pop
and
or
fnstcw
repnz
mov
push
xchg
out
mov
andl
mov
movsl
imul
and
lcall
sbb
push
dec
enter
scas
jecxz
rorb
ficoml
out
js
pop
pop
jno
jo
repnz
cmp
enter
das
xor
adc
push
les
adc
loop
xchg
cmp
enter
xchg
ss
div
testl
adc
cmp
mov
mov
sub
inc
push
sub
enter
int
inc
aad
mov
jb
dec
pop
cmp
mov
shl
lahf
lahf
mov
es
test
mov
xchg
push
push
fbld
cli
pop
jmp
es
pop
stos
push
shr
cltd
and
movb
clc
daa
in
fwait
mov
mov
bound
pop
stc
pop
inc
pop
pop
xchg
hlt
cmp
inc
ja
mov
inc
stos
xchg
clc
mov
pop
jl
cmp
ret
clc
scas
add
in
fadd
xor
add
fildll
add
sub
loop
push
out
aas
iret
out
cltd
pop
mov
mov
or
ftst
scas
dec
mov
sbb
scas
lret
fdivs
aas
int
cltd
add
sbb
jb
sub
inc
ja
mov
or
xor
loop
xchg
ljmp
ret
hlt
mov
push
in
iret
outsb
push
dec
scas
shrl
xchg
andl
adc
sbb
lcall
mov
xchg
and
push
inc
xchg
xchg
js
jo
push
clc
mov
ret
neg
add
imul
mov
cs
pop
hlt
add
in
or
and
cwtl
mov
jno
in
pop
dec
pop
lods
pop
sti
sbb
inc
in
lret
gs
scas
cli
inc
and
push
or
inc
mov
shlb
mov
inc
push
fcmovb
std
movsb
sbb
pop
dec
bound
pop
mov
sahf
repz
repnz
aad
ss
xor
pop
shl
rcll
xor
out
mov
je
cmp
jb
pop
pop
aad
scas
or
cwtl
out
in
xchg
sahf
sbb
out
jb
aaa
xorb
sub
mov
push
xchg
int3
sbb
fld
mov
popf
pop
cmc
addr16
or
imul
lcall
push
out
xor
cmp
xor
sub
mov
mov
ficomps
pop
mov
mov
mov
into
ljmp
xchg
mulss
movsl
sbb
cld
push
out
loop
lret
push
imul
clc
scas
stc
cmp
mov
fstpt
arpl
ss
aam
xchg
or
pop
add
adc
or
inc
lcall
mov
mov
fisttps
aaa
fwait
out
dec
cwtl
sub
or
gs
gs
mov
insb
stos
add
mov
into
mov
mov
into
cwtl
aam
scas
xor
jnp
int
mov
dec
test
sarb
cs
or
lock
bound
int3
movsl
scas
pusha
lock
cmc
mov
rcll
test
dec
dec
sbb
outsl
jne
test
cmp
outsb
mov
cmpsb
jae
aas
sbb
xchg
push
xor
rcrb
jg
test
xlat
cld
adc
cmp
sbb
mov
jp
fsubr
or
cltd
mov
int
aas
xchg
pusha
enter
or
andb
into
push
gs
inc
pop
dec
cmpsl
mov
push
push
loop
out
dec
xlat
fstpt
push
adc
lds
in
and
sbb
dec
jno
fsubp
cmp
movb
xchg
insl
movsb
cmp
mov
xor
jg
fdivs
cmc
jns
xchg
add
fcompl
push
adc
inc
mov
push
ret
loopne
addr16
pop
in
mov
xor
mov
mov
mov
xor
pop
push
lods
add
das
mov
lcall
inc
sar
fistpl
repnz
lahf
je
subb
pop
repz
push
or
sub
cmp
xor
adc
inc
sbb
andb
push
pop
and
fcomip
jnp
stos
cmp
jb
inc
pop
push
fbstp
mov
stos
dec
push
push
add
idiv
push
mov
jbe
lret
xchg
add
ljmp
ffreep
test
nop
mov
rcrb
sahf
jge
inc
in
fucomi
out
test
xlat
loop
call
aas
iret
xchg
or
pop
and
stc
icebp
lret
pop
cmpsb
cli
mov
stc
movsb
cli
insl
repz
es
sub
icebp
fmull
in
addr16
sahf
das
dec
jnp
stc
arpl
mov
pop
dec
pop
fadds
nop
sub
loope
inc
jb
in
das
dec
inc
adc
ss
push
movl
enter
cmp
gs
sbb
daa
jbe
sahf
adcl
aad
pop
jne
mov
mov
ljmp
push
inc
out
shrl
ffreep
in
and
loop
dec
sbb
iret
hlt
loopne
adc
movb
pop
sbb
cs
dec
repnz
push
lods
mov
out
int
scas
sti
mov
leave
cmpsl
stc
add
std
inc
xor
cli
pop
push
incb
push
int3
lock
movsb
dec
mov
fcomps
mov
les
mov
pop
xchg
out
jne
roll
and
jae
sub
fwait
push
mov
and
cli
dec
arpl
fwait
jnp
add
loopne
jnp
and
or
mov
xchg
inc
lods
sbb
pop
mov
mov
js
xchg
sbb
or
dec
ss
or
lea
push
pop
mov
aaa
popf
dec
jp
test
adc
xchg
xchg
pop
fs
sbb
lods
test
inc
inc
incb
clc
mov
inc
lret
shlb
add
mov
xchg
push
pop
mov
pop
imul
adcb
pop
push
sbb
mov
in
xor
xlat
and
or
cmp
lods
outsb
dec
icebp
lahf
push
and
cs
fidivs
es
ret
subl
paddsb
jnp
dec
in
imul
add
xchg
mov
sbb
cmp
repnz
jg
pop
out
lods
ret
nop
jg
fstps
cmp
ret
lret
adc
jo
or
rcrl
jbe
jl
inc
das
sbb
repnz
lods
jno
dec
das
aaa
fistl
jb
sbb
push
test
fldlg2
sti
clc
sbb
mov
scas
cmpsl
sbb
test
icebp
jns
outsb
push
xchg
fwait
inc
inc
mov
lret
sti
fwait
mov
dec
rclb
mov
test
and
test
cmpb
sahf
fbstp
fistps
mov
mov
lea
jg
cmpsb
data16
shrl
cli
sbb
push
lds
jecxz
and
aam
nop
rol
mov
call
pop
mov
fsubr
pushf
scas
xlat
jo
cmp
pop
adc
sub
xchg
in
or
cs
jge
pop
mov
push
test
push
sti
pop
sub
mov
cmpsb
jbe
sbb
add
inc
mov
jne
xchg
dec
subl
aad
inc
or
jecxz
test
insl
das
mov
or
pop
test
subl
dec
xor
mov
std
pop
inc
push
mov
inc
mov
jmp
xor
addb
jno
xchg
cmpsl
fdivrs
cmp
jo
decl
dec
xor
es
scas
sbb
or
mov
mov
xchg
adc
out
pop
gs
sbb
mov
xor
xor
dec
sbb
cmp
inc
mov
xchg
jge
ret
xor
add
sbb
sbb
scas
cmp
inc
in
out
jnp
out
pop
inc
and
sahf
insl
inc
addr16
mov
popf
jno
jne
and
lret
cmp
std
gs
xchg
rolb
hlt
jg
mov
mov
sub
sbb
fs
in
xchg
addl
dec
mov
lea
lds
xchg
loope
pop
push
mov
jle
sub
mov
shrb
cmp
push
sbb
das
mov
push
xor
into
das
jg
and
sbb
sbb
jae
sub
pop
jae
cwtl
in
decl
out
cld
popf
fwait
jae
lds
repz
and
movsb
mov
loop
jmp
test
mov
leave
in
sbb
mov
ja
or
jne
mov
dec
andl
jg
jg
sub
cmp
fistpl
call
stc
jp
pusha
lcall
add
cli
stc
xor
jp
aad
mov
mov
sbb
push
push
xchg
dec
repz
push
jmp
or
int3
mov
jmp
cmp
mov
or
sub
out
sbb
repz
stc
xchg
mov
ljmp
cwtl
scas
mov
inc
jb
xchg
and
mov
sti
xor
jne
adc
iret
jecxz
dec
sbb
icebp
lret
int
mov
cwtl
repnz
cmc
repnz
pop
dec
pop
fcmovbe
mov
in
mov
out
lods
sarl
and
js
addr16
movsb
xchg
fstpl
jmp
add
xchg
sub
mov
adc
movsl
sbb
xchg
xchg
je
cmp
stc
inc
pop
mov
add
xchg
addr16
inc
out
movsl
sbb
cltd
cmovbe
xchg
aaa
pop
int3
adc
inc
dec
fdivl
ret
stos
xor
dec
sub
lea
popf
loope
mov
imul
aam
mov
cld
pop
inc
out
mov
iret
mov
cmp
dec
shll
arpl
int3
fnsave
mul
mov
inc
shrb
push
and
adc
nop
jmp
shrb
imul
shlb
dec
inc
stos
in
ljmp
lds
imulb
cmpsl
inc
fidivrs
pop
xor
leave
cltd
repz
or
enter
insl
cmp
mov
leave
lret
and
test
xor
dec
addr16
mov
push
xchg
popa
fistpll
mov
lahf
mov
js
and
jnp
fiadds
fdivs
xchg
and
sbb
add
mov
nop
out
jle
jne
mov
movsb
pop
lret
adc
cli
push
fsubr
lds
icebp
fcmovne
lds
test
push
adc
stos
mov
lret
gs
jmp
pushf
jge
mov
clc
in
test
movsb
push
pop
dec
or
aad
mov
stc
pushf
and
shl
movsl
sub
cs
jo
in
hlt
jecxz
add
mov
jmp
mov
aam
iret
jp
cmpsb
jle
jg
mov
add
dec
imul
inc
arpl
test
arpl
xlat
les
in
out
push
pop
pushf
fisubrs
adc
adc
or
jne
dec
pop
out
lea
push
pop
xchg
fwait
mov
scas
daa
out
test
pushf
pusha
cld
xchg
rorb
mov
out
nop
inc
fisubl
sti
sub
dec
or
mov
dec
inc
ss
jle
cmp
mov
cmp
xchg
icebp
enter
push
mov
ljmp
xorb
lahf
nop
arpl
adc
nop
mov
stos
or
pop
dec
sub
sbb
in
icebp
int
repnz
aad
adcl
xorl
std
push
rcr
jmp
sub
lret
andl
pop
adc
mul
sbb
popa
cltd
lods
into
mov
repz
xor
int
fnstenv
push
jo
inc
in
or
inc
dec
cwtl
gs
lea
pushf
shlb
or
fbstp
out
cmp
je
xchg
sbb
jae
and
ffreep
push
cld
dec
sbb
call
push
inc
or
sub
sbbl
ja
adc
sbb
fildl
cli
sub
out
pop
movb
dec
jae
xchg
ljmp
sbb
cmp
jb
inc
or
inc
add
test
adc
movsb
popl
repz
sub
stc
mov
gs
sahf
ja
das
jle
stos
mov
inc
dec
insb
sub
mov
leave
scas
dec
adc
repnz
pop
cli
or
mov
lret
iret
ds
fimull
pop
fxch
push
pop
xor
or
adc
das
adc
dec
lods
mov
aam
lea
fsts
xor
mov
mov
and
and
mov
test
sbb
xchg
les
push
jg
inc
push
push
sbb
mov
push
rorb
xlat
dec
scas
sbb
or
sub
push
jmp
popf
xor
xor
rcll
icebp
ljmp
inc
mov
pop
mov
jmp
sti
frstor
sub
aaa
shll
lock
xchg
pop
mov
mov
lods
pop
je
xchg
or
shlb
in
aaa
fcmovbe
test
sbb
sub
mov
push
shl
bound
lahf
out
gs
jae
and
jo
pusha
sbb
sahf
data16
int
mov
insb
pusha
dec
lods
push
pop
xchg
ret
pushl
xchg
jmp
xor
pop
aas
enter
dec
add
push
ficompl
jno
push
loop
mov
in
sbb
movsb
fs
lock
xchg
push
cmp
mov
xchg
mov
rcll
sub
cli
pushf
fidivs
jbe
add
xchg
or
andb
adc
add
shl
stos
addr16
cmp
push
jmp
cmpsl
les
shrb
xchg
push
pop
xor
push
adc
mov
and
jbe
ja
push
mov
cmp
cs
or
mov
ja
push
adc
loopne
dec
call
jno
cmp
push
dec
xor
push
adc
mov
push
jno
rcrl
andl
iret
sub
lea
sub
or
mov
or
mov
mov
mov
push
lret
or
in
xor
and
cmp
inc
lret
dec
aad
in
or
stos
xchg
and
cmpb
add
cmp
popa
xlat
cs
ljmp
outsb
jns
xchg
int
push
adc
xchg
jle
xchg
dec
adc
mov
dec
mov
arpl
fimuls
test
adcl
sub
fstps
lods
sti
adc
mov
clc
mov
leave
rorl
out
sub
sbb
cmp
scas
mov
cmp
jns
outsl
xchg
lea
push
sbb
mov
dec
popf
xchg
lods
pop
rolb
leave
dec
cmp
rolb
xor
ret
addr16
xor
loope
std
loop
je
fwait
inc
or
call
out
or
xchg
aaa
mov
mov
pop
pop
push
daa
xchg
pusha
jnp
lds
cs
das
std
dec
cmp
adc
xchg
jge
dec
cwtl
out
insl
movsb
insl
fs
lods
and
push
daa
outsb
outsb
in
stos
subl
ret
lock
movsb
in
sbb
sahf
mulb
mov
cmovle
jle
pop
ja
cld
pushf
dec
sub
shrb
mov
mov
inc
int3
xlat
mov
cli
int3
xor
add
mov
dec
add
push
call
mov
insl
mov
mov
cmpsl
je
pop
mov
adc
out
fstpt
xor
call
aad
sbb
mul
lahf
sarl
jecxz
add
sbb
fildll
xlat
cmp
or
nopl
xor
xchg
aam
rolb
mov
lock
pushf
stos
adc
dec
mov
or
adc
adc
mov
dec
fwait
dec
adc
mov
push
int3
push
aam
or
mov
and
out
fstcw
das
out
xor
cwtl
iret
sbb
dec
mov
cmc
pop
aam
ljmp
rorb
or
daa
fidivrl
clc
hlt
addr16
in
mov
sbb
jl
rcrb
mov
inc
addb
mov
fs
cmp
call
cmp
cmp
sti
pop
push
shll
popf
lret
clc
mov
push
icebp
cld
pop
or
jb
inc
sbb
inc
xor
cmpsb
cmp
inc
stos
aad
pusha
inc
in
push
jne
xor
inc
push
adc
mov
out
xchg
push
js
xor
cmc
mov
xchg
test
int
push
adc
aas
push
jnp
jne
sbb
fldt
inc
std
add
fdivl
mov
outsl
mov
addr16
jnp
mov
movsl
gs
gs
sub
cmpsb
cmpsb
cwtl
xchg
not
scas
adc
mov
mov
jnp
rolb
xchg
inc
or
out
in
add
sbb
in
xchg
lea
add
nop
in
push
push
dec
jae
stc
int
es
outsl
fcompl
xor
test
or
xchg
or
adc
xorl
jne
sar
push
push
andl
sub
arpl
outsb
orl
sbb
push
push
movsl
pop
add
jns
mov
jns
loope
gs
add
sahf
mov
push
mov
dec
adc
mov
rorb
movsl
pop
lea
ja
sub
and
orl
pop
insb
pop
and
clc
mov
inc
rolb
int
js
xchg
mov
sbb
dec
fstl
jl
les
adcl
cld
xchg
adc
xchg
pop
or
jne
popf
jnp
addr16
outsl
jg
dec
add
pop
cmpsb
mov
pop
test
adc
xor
xchg
lret
add
sub
cld
shl
inc
add
lock
and
repz
cmpsl
jb
dec
cs
hlt
jnp
mov
or
mov
not
sub
into
ja
sub
add
mov
xchg
ja
adc
mov
adc
jecxz
fstpt
out
mov
js
or
ds
gs
xor
mov
xchg
stc
adc
xchg
ror
push
and
fs
fildll
xchg
jo
stos
mov
xor
inc
push
jl
stc
shlb
aad
pop
xchg
mov
mov
in
adc
lahf
mov
shll
xchg
cmp
test
shl
addr16
mov
xor
incb
popf
fstps
imul
cli
pop
mov
or
jo
in
inc
sub
dec
push
lock
std
mov
xor
lods
sbb
adc
arpl
and
leave
shrl
xchg
cmp
movsb
loope
pop
adc
or
dec
lods
in
ja
xchg
mov
xor
and
push
insl
out
jl
mov
scas
fmuls
cli
xor
mov
testl
push
cmp
pop
xchg
sub
cmp
pop
inc
divl
ss
cs
ss
repnz
adc
adc
insb
outsb
popa
sarl
cltd
rcrb
mov
inc
std
add
and
insb
xchg
in
lahf
out
mov
js
les
sbb
icebp
push
in
push
xor
jl
jns
inc
dec
pop
or
xchg
xor
enter
imul
cld
push
xor
mov
and
xor
cmp
jmp
sub
addb
mov
rorb
add
inc
add
movsl
sysexit
cmp
aam
lock
pop
shrb
sub
dec
and
add
mov
iret
ficoml
cld
es
jmp
jnp
cmpsb
es
aad
mulb
les
lret
repz
xorl
es
mov
mov
fcoms
sbb
jle
push
sbb
xor
cmpsb
add
cmp
int
sbb
jl
mov
push
mov
or
in
adc
adc
js
dec
jnp
mov
aaa
std
lods
adc
inc
repz
and
mov
and
xchg
or
cmp
das
add
add
cmc
push
pop
ds
cmp
pop
rclb
inc
sahf
sbb
popa
add
lea
js
cli
push
inc
int3
addr16
add
jo
sbb
jno
ret
shl
mov
or
add
jno
in
out
push
add
pop
test
inc
lds
mov
popf
jge
arpl
jb
push
aaa
cwtl
push
inc
enter
insl
mul
inc
pop
popf
pop
fnstenv
push
gs
pop
sqrtps
mov
imul
adc
pop
mov
fmull
adc
bound
clc
mov
pop
int3
das
es
cltd
ds
xlat
aad
les
out
insl
js
xchg
inc
hlt
mov
pop
inc
lods
lret
inc
js
jle
push
jb
and
leave
mov
xor
pop
lcall
daa
sub
ror
gs
sbb
insl
rolb
mov
das
sbb
push
frstor
push
push
mov
or
jno
scas
mov
into
lret
loopne
ret
sbb
jnp
nop
and
sub
sbb
pop
and
mov
or
adc
stos
cmp
xorb
mov
ljmp
sbb
shrl
mov
push
lea
sbb
aaa
subl
ret
sbb
sub
mov
sbb
cmp
fwait
xor
cmp
add
inc
pop
ss
push
ljmp
jb
js
jnp
push
frstor
sbb
out
and
ficoml
xor
inc
mov
xchg
mov
stc
jp
pop
mov
push
sub
lds
mov
out
repz
push
test
mov
push
jmp
jle
daa
negb
or
rclb
test
add
push
aaa
jg
xor
popa
push
adc
inc
mov
sub
sti
xor
jp
mov
mov
xlat
push
xchg
scas
addb
fmuls
repz
xor
mov
lahf
or
jmp
mov
stc
lea
lret
sub
clc
add
cs
mov
or
packssdw
xchg
sti
pop
fisttps
outsb
test
neg
cmpsl
lret
xchg
mull
insl
ficomps
add
mov
mov
inc
cmc
pop
lcall
xchg
jno
movsl
cwtl
and
mov
push
pop
fistl
jmp
sub
stc
je,pn
dec
stos
stos
in
es
jge
loopne
repz
push
dec
imul
xchg
shrb
jle
lret
test
aas
xchg
or
mov
into
and
out
dec
mov
jns
dec
fstps
addr16
push
mov
shlb
lahf
and
mov
in
or
mov
sbb
sahf
push
in
inc
inc
adc
rcrl
aas
pop
arpl
cmp
and
sub
sub
lea
lea
fimuls
stos
loop,pt
sbb
lods
push
or
dec
jecxz
pop
adc
adc
dec
je
push
sbb
jno
jmp
js
mov
pop
aad
inc
jb
mov
pop
int
xchg
mov
adc
ja
fdiv
mov
cmp
mov
stos
mov
lcall
add
sbb
adc
in
sbb
addb
aaa
mov
jbe
jb
sub
imul
add
enter
mov
push
lahf
imul
sub
inc
lods
out
stos
inc
push
daa
inc
push
adc
in
push
mov
jns
inc
sbb
loope
inc
xchg
fstl
adc
mov
push
xor
mov
int
push
js
xchg
dec
pop
inc
adc
incl
js
das
and
in
rolb
xchg
cs
sub
sti
out
sub
add
inc
add
mov
cmp
hlt
sbb
mov
or
jo
das
mov
lret
pop
pusha
xor
out
ret
pop
aad
push
fstpt
orl
stos
imul
cmp
xor
sub
fs
scas
out
mov
inc
push
inc
std
insb
popf
cli
jne
notb
or
sub
cmp
mov
les
cltd
into
jle
mov
stos
das
jl
nop
lahf
dec
aaa
adc
sub
das
jl
cmpl
push
std
cmpsl
test
dec
lret
cltd
rclb
pushf
pop
pop
je
dec
jecxz
cld
sbb
jle
pusha
jb
loop
lods
lods
xchg
idiv
mov
mov
and
clc
sbb
in
mov
dec
xchg
aam
lret
push
pop
pop
ljmp
ja
pusha
mov
jns
ret
je
xor
cmpb
scas
inc
xchg
adc
aas
and
cmp
lods
out
shl
jg
data16
adc
js
popf
sbb
cmp
adc
sbb
jmp
pop
enter
xor
xchg
dec
add
cs
jp
aam
aam
pop
fwait
and
dec
or
jle
xor
mov
aaa
jns
bnd
mov
stos
insl
dec
fidivrl
cmpsl
pop
cmp
push
loop
sahf
cmp
int3
lock
xchg
sbb
icebp
in
jp
xorl
shll
fistl
sub
sahf
icebp
sbb
daa
jae
push
mov
negb
sahf
fldt
out
or
adc
mov
daa
inc
pop
jl
aad
aam
lds
mov
lods
xchg
or
push
pop
push
sbb
add
ds
pop
das
les
daa
into
jge
das
cmc
cmp
jno
test
es
xor
lcall
loop
and
jno
neg
xor
sub
jl
ret
cltd
jg
pop
sbb
sub
lods
jp
mov
lods
fists
dec
pop
inc
pop
jge
lods
xchg
mov
pop
sub
push
stos
cmp
hlt
and
sbbb
and
dec
repnz
dec
fists
pop
mov
addr16
push
loopew
ja
pop
dec
push
scas
add
inc
jmp
in
xorb
movsl
fiaddl
pop
std
hlt
nop
and
dec
les
inc
scas
roll
inc
ret
xor
sbb
inc
pop
out
push
cmp
lret
mov
lods
sub
sub
dec
mov
arpl
test
mov
or
in
loop
dec
dec
dec
faddp
pop
out
in
push
stos
lea
jns
pop
and
test
mov
xchg
add
lods
nopl
mov
mov
xchg
cmpsb
and
iret
cmp
inc
lods
add
pop
mov
cmpsl
jne
adc
sbb
mov
daa
shrb
sbb
xchg
cmp
dec
pop
aaa
jmp
popa
std
popl
inc
inc
adc
notl
jns
data16
or
pop
aaa
push
in
ret
jmp
movsl
insl
push
dec
lret
mov
sarb
bound
lret
cltd
dec
inc
lret
sbb
jl
mov
or
dec
mov
xchg
adc
lret
push
incl
mov
shlb
clc
lahf
xor
cmpl
in
mov
imul
testl
inc
xchg
adc
inc
cmp
fists
xor
xchg
fwait
out
int
mov
rcrb
stos
add
cmpsb
cltd
mov
lock
sbb
lret
mov
sti
fsub
pop
mov
loopne
xchg
std
cmp
mov
mov
adc
pop
popf
loope
dec
in
ret
sbb
ficoml
inc
mov
ret
cmp
test
sbb
xchg
push
pushf
cmp
cmpsb
or
push
pop
jbe
xchg
push
sbb
inc
cmp
loop
fbstp
adc
pushfw
ret
add
xchg
xchg
aam
xor
push
ds
push
inc
loopne
popa
sbb
sub
stc
sub
and
sub
fnstenv
pop
sub
lock
dec
dec
in
inc
inc
movsl
xchg
and
mov
pop
push
jge
cmp
jns
jns
lcall
sub
int
add
push
xor
push
sbb
or
fcoml
dec
leave
fiadds
sub
dec
in
mov
mov
or
shrb
mov
in
push
incl
cmp
iret
cld
sub
addr16
sti
fs
ja
mov
aad
test
dec
mov
jmp
or
xchg
sbb
leave
mov
xorb
and
enter
cs
andl
pop
jg
lret
push
lods
xor
js
and
jp
lahf
das
dec
dec
add
cld
leave
and
gs
dec
push
repz
repz
push
cmp
sahf
sarb
sub
mov
out
inc
sbb
xor
mov
fists
mov
xor
inc
mov
addr16
mov
imul
lods
push
add
faddl
pop
scas
test
js
push
fldcw
xchg
mov
and
loop
cmp
and
imul
lods
sub
cmp
js
les
dec
xor
and
sub
inc
int
pusha
push
adc
or
test
lcall
lods
lods
movsb
sbb
pop
cmp
jmp
pop
adcl
scas
ss
ret
int
push
pushf
sub
movhps
std
sbb
lods
push
ljmp
lcall
mov
pop
sbb
scas
push
in
aaa
fdivs
lret
xchg
aad
cmpsb
pop
inc
imulb
inc
mov
jle
jg
lods
stos
sub
pop
push
pop
jbe
mov
fucomp
jnp
dec
dec
stos
fildll
cmp
jo
dec
push
out
outsb
movsb
ljmp
bswap
orb
inc
out
jo
sbb
outsl
rol
jbe
xchg
cltd
adc
and
mov
data16
jmp
inc
lock
in
pop
jbe
push
lret
mov
add
or
inc
inc
jbe
or
addb
pop
add
data16
fnstsw
clc
sahf
pop
hlt
and
sarl
cld
xchg
arpl
lcall
mov
xor
mov
out
xor
arpl
movsl
push
aad
test
mov
fdivrl
mov
repnz
and
das
xchg
js
push
sbb
faddl
pop
lods
mov
pop
enter
mov
scas
pop
leave
inc
ret
mov
test
jno
scas
fwait
jno
push
cli
mov
rcr
jecxz
stc
push
xchg
or
pop
lea
scas
ret
push
arpl
push
pop
hlt
xlat
mov
push
xchg
hlt
pop
mov
fdivrs
cmp
push
push
out
ss
mov
mov
and
sub
xchg
std
sub
or
out
nop
loope
or
ret
mov
inc
scas
cmp
adc
cmp
xor
imul
cmpl
loopne
mov
adc
inc
ds
or
idivl
push
adc
mov
iret
jns
inc
mov
inc
mov
mov
xor
ficoms
outsb
sbb
dec
push
inc
subl
push
outsl
mov
movsb
cmpsl
push
into
lahf
sub
movsb
das
js
hlt
xchg
ret
test
pop
gs
mov
cmpsl
cmp
jl
ljmp
xchg
inc
je
fcoms
iret
call
lea
xor
outsl
and
and
cmpsb
xor
cmp
repnz
push
sub
pop
leave
shl
fadd
popa
int
inc
fimull
cli
xchg
sbb
cmp
scas
divb
inc
test
sar
or
ljmp
insl
pop
jbe
pop
negl
test
lcall
lods
mov
stos
xchg
or
dec
into
push
repnz
call
add
popa
add
pop
jno
pop
mov
push
jnp
xchg
jecxz
scas
pop
loopne
test
fbstp
xor
sub
mov
repnz
iret
mov
inc
dec
mov
push
nop
popf
in
mov
in
add
jo
ret
aad
test
cs
lods
mov
xchg
testb
outsb
cs
por
xor
pop
lea
and
test
out
test
pop
mov
sti
jne
insl
mov
push
mov
aaa
jnp
mov
or
or
pop
pop
outsb
lcall
jl
nop
imul
or
fs
lcall
nop
sbb
lea
xchg
pop
dec
insb
enter
dec
push
nop
rclb
lds
int3
push
outsl
decb
push
fildll
sahf
jge
ljmp
cmp
rcl
sbb
sub
jbe,pt
push
add
or
or
or
dec
mov
push
js
push
sbb
lock
mov
pop
or
repz
add
das
outsl
stos
xchg
pushf
xor
movsb
jne
pop
pop
scas
push
xchg
adc
jle
add
push
jge
rorb
sbb
imul
cmovnp
mov
movsb
xor
es
or
ds
imul
xchg
test
cmp
jno
mov
out
mov
fcoms
iret
int
addr16
xor
popf
aas
pop
pop
mov
adc
aam
xchg
xchg
xor
aas
xor
xlat
aam
sbb
dec
es
pop
mov
out
test
out
xchg
iret
aaa
aad
add
clc
pop
pop
pop
je
sub
pop
sti
sbb
pop
sbb
inc
ret
mov
adc
cmp
ja
cld
mov
pop
bts
negl
andb
je
shll
or
lahf
cmp
fwait
stc
test
jle
push
lret
les
in
and
std
lods
fiadds
fnsave
xlat
scas
push
mov
outsb
cli
sub
or
lock
xchg
inc
js
dec
in
pop
jl
cld
test
add
mov
sbbl
sub
dec
jne
or
sub
jg
js
or
ja
xchg
sub
popf
or
dec
leave
pop
arpl
sub
ret
lock
fistl
jle
mov
rcrb
mov
mov
cmp
push
in
cmp
dec
jns
sub
xchg
ret
push
add
inc
js
xchg
mov
jne
mov
inc
sti
aam
jmp
test
mov
outsb
sub
xchg
xor
std
out
orb
or
add
js
jno
fimuls
jns
mov
mov
jb
icebp
call
aad
xor
out
es
xlat
outsl
data16
push
push
and
int3
leave
arpl
shrb
mov
lods
add
pop
add
and
push
arpl
xor
jle
mov
xchg
lret
int3
jne
mov
push
jae
xchg
or
test
cmpsl
and
dec
inc
sbb
or
lods
lret
es
jecxz
add
xchg
sub
ret
outsb
in
sbb
xor
mov
xchg
in
sub
jecxz
push
adcl
cltd
cmp
add
and
imul
icebp
mov
pop
and
jae
mov
xor
xchg
mov
and
dec
jns
jp
mov
dec
test
or
mov
pop
cld
add
jno
xor
push
jb
mov
scas
test
and
mov
dec
pop
enter
popf
ret
xchg
jnp
or
subl
je
repnz
and
adc
les
push
mov
add
and
hlt
fnstsw
sub
fsub
inc
stos
cmc
adc
mov
push
andl
or
in
loop
jecxz
addr16
enter
mov
xor
fwait
push
hlt
jbe
lods
xchg
push
bound
pop
ss
sbb
wrmsr
das
mov
addr16
mov
in
bound
mov
add
and
sbb
cmp
pushf
dec
mov
movsb
pop
cli
push
mov
movb
adc
out
in
push
pusha
pop
dec
in
test
imul
xor
cs
stc
lahf
mov
xor
lea
fbstp
out
dec
stos
aad
mov
push
xchg
mov
rol
jb
faddl
mov
mov
mov
jge
sbb
push
mov
inc
mov
out
or
sub
cmpb
cmpsb
cli
negb
push
outsb
mov
int3
inc
inc
add
adc
add
daa
dec
sbb
mov
mov
outsb
fmuls
rorb
in
dec
push
inc
lret
aas
imul
loop
adc
ja
adc
addb
jo
xor
mov
je
aaa
sahf
ds
and
mulb
test
add
popa
sbb
jge
in
sbb
adc
out
adc
cmp
and
inc
gs
pop
push
mov
pop
gs
sahf
stc
fsubrl
ds
add
inc
adc
pop
xchg
bound
int3
mov
daa
into
cmpsl
sbb
setle
jg
popa
negl
arpl
jmp
outsb
and
rdpmc
lret
pusha
mov
int3
outsl
xchg
adc
enter
movsl
xor
pop
repz
push
inc
in
stc
dec
adc
rcll
pop
push
mov
leave
xor
xchg
xchg
pop
iret
push
mov
popf
mov
push
jp
push
inc
xchg
fmulp
int3
outsl
mov
inc
mov
icebp
cli
fcmovnbe
std
adc
and
adc
add
xchg
xchg
jno
andb
icebp
cld
mov
xor
into
push
push
cwtl
or
lcall
popa
cli
int
xor
fstps
jbe
pop
roll
mov
loope
movsl
test
test
into
mov
sub
dec
imul
pop
inc
stc
xor
inc
das
mov
rcll
mov
xchg
add
rcll
xchg
push
xchg
rolb
int
mov
daa
test
fisubl
cs
sub
cs
and
push
clc
mov
fwait
in
das
shll
adc
or
pmaxsw
in
jne
mov
jno
je
dec
inc
xchg
sahf
and
je
add
ja
aam
mov
xchg
cmp
jle
data16
lods
xchg
lds
pusha
lods
mov
inc
int3
or
ret
leave
fists
sub
cmpsl
jecxz
icebp
jmp
or
dec
xchg
sub
sbb
push
xchg
xchg
fnstcw
dec
cltd
arpl
adc
xor
testb
scas
cltd
jne
lock
xchg
sub
daa
cltd
lcall
testb
test
pushf
cmp
jns
fwait
pop
push
mov
rcr
adc
mov
inc
sbb
insl
scas
je
and
push
outsl
imul
fs
loop
leave
jno
mov
and
mov
jbe
pop
stos
stos
aas
sahf
out
andb
mov
ljmp
aas
sub
stos
out
or
adc
inc
cmpsb
in
inc
std
nop
scas
addr16
mov
xor
rcr
leave
sarb
sub
movsl
ret
insb
mov
and
xchg
or
sub
sbb
ds
xor
rorb
xchg
pop
sub
fistps
cmp
leave
mov
sub
push
hlt
loopne
movsl
popf
and
cld
shlb
lods
dec
repnz
xchg
sub
pop
lcall
mov
aam
sbb
or
mov
shl
or
cmp
sub
icebp
jp
sub
mov
rolb
fs
lcall
loopne
push
or
push
mov
pop
scas
pop
or
ds
sbb
ret
or
push
data16
add
adc
lds
icebp
cs
aad
pop
loopne
scas
insb
movsl
xchg
xchg
daa
xorb
jge
adc
fdiv
mov
mov
stc
push
or
cld
ds
sti
or
mov
shl
xchg
icebp
pop
jae
or
pop
outsb
fmuls
arpl
mov
repz
mov
pop
lods
stc
cwtl
mov
mov
jne
ss
jge
push
out
aas
or
in
lods
xchg
sbb
cmpsl
bound
or
pop
inc
aam
loop
xorb
popf
into
inc
mov
mov
mov
js,pt
fidivrs
mov
jo
inc
subl
rolb
cmc
popf
popa
loopne
call
out
sub
mov
sub
mov
or
pop
daa
xchg
jecxz
fwait
dec
andl
dec
stos
or
insl
lds
faddl
lret
and
cwtl
gs
jecxz
movsl
pop
in
stos
test
fsub
inc
and
jnp
mov
test
test
or
loope
dec
adc
mov
pop
mov
xchg
fiaddl
aad
push
push
add
sbb
mulb
cli
es
pop
movsl
mov
fsubl
mov
and
insb
xlat
sbb
or
adc
hlt
stos
iret
inc
jb
lret
ljmp
mov
mov
mov
stos
outsb
adc
jl
inc
cwtl
pop
sub
loope
adc
push
or
es
pop
sahf
loope
cltd
ja
arpl
mov
aaa
push
enter
fadd
shrl
cmp
fisttps
xlat
mov
add
or
xchg
fsts
and
push
mov
fcomps
mov
adc
mov
sbb
out
test
fs
push
loop
loopne
test
mov
bound
jge
ret
jo
repz
out
and
addr16
enter
daa
and
stos
outsl
rcll
sub
mov
pop
fldl
mov
or
and
mov
or
sbb
sbb
stos
mov
cmp
sub
xchg
cli
cltd
fdivrp
mov
cs
adc
es
inc
push
mov
inc
call
xchg
xchg
fnstenv
call
mov
pop
imul
adc
sbb
lcall
push
push
mov
or
out
jp
xchg
cmp
ja
cmp
jecxz
dec
addb
xchg
ss
test
dec
int
xor
xlat
or
push
lahf
icebp
js
jle
mov
jmp
or
das
xor
test
flds
sbb
popa
orl
pop
inc
aad
jge
jecxz
movsl
out
jnp
call
pushaw
pop
add
push
repnz
xchg
jl
mov
push
insb
les
inc
arpl
jnp
xchg
inc
xchg
jle
add
push
fld
fiadds
shll
jbe
cmpb
shl
rcrb
cmp
xchg
pop
add
pusha
adc
add
outsb
test
push
shrl
jae
add
outsl
or
fisubrs
or
mov
jb
inc
lds
jbe
cwtl
mov
push
or
pop
adc
int
lods
push
or
lock
inc
aam
cld
inc
and
test
gs
add
adc
nop
adc
scas
aaa
push
pop
sbb
cmpsl
mov
adc
and
dec
hlt
stos
notl
xchg
jl
xor
sbb
jge
adc
stos
popa
or
pop
dec
aam
arpl
pop
fsts
stos
mov
roll
fisubs
jp
int3
mov
add
ret
icebp
sub
mov
orl
jae
call
stc
stos
jle
sub
push
mov
or
lds
iret
loop
out
sbbb
mov
sahf
mov
or
cld
mov
pop
das
cld
scas
add
mov
pop
mov
pop
mov
mov
in
cmpsl
xlat
push
addr16
call
jo
sub
adc
mov
and
in
fucomip
inc
lods
icebp
nop
fdivs
push
cmp
adc
inc
jnp
cmp
and
shrb
pop
dec
js
adc
sbb
lock
adc
adc
xor
and
cmp
sub
push
rorb
mov
inc
loop
dec
ret
int
outsl
stos
push
xorl
sbb
rolb
insb
aaa
and
and
iret
repz
push
shl
fsts
inc
ja
push
cmp
jmp
shlb
out
cs
xchg
inc
stos
seta
addb
int
out
cmpsl
jle
bound
imul
add
xor
lahf
aaa
arpl
loopne
orl
jne
mov
call
push
imul
std
leave
cmp
xor
sbb
add
dec
inc
xchg
dec
mov
pop
mov
ljmp
icebp
cmc
idivb
insl
dec
mov
mov
jno
jae
adc
cwtd
jecxz
ljmp
lret
cld
addr16
mov
adc
mov
xor
sahf
gs
lods
add
js
fs
flds
test
inc
push
and
mov
stos
push
xchg
or
in
fxch
cmp
mov
mov
movsl
push
popf
leave
and
and
pop
cmpsl
insl
mov
fidivs
jp
mov
or
sub
repnz
mov
cmpsl
add
add
out
push
sbb
in
fs
loopne
sbb
orb
mov
mov
cmc
lahf
mov
push
mov
push
sub
test
pop
nop
or
mov
repnz
daa
test
mov
inc
xchg
ja
fdivr
adc
sahf
cmp
jne
mov
int
mov
jecxz
aam
dec
cmp
pusha
insl
mov
mov
subb
cmp
mov
mov
aaa
lods
mov
js
mov
xor
push
hlt
xor
popf
sahf
mov
mov
push
jg
dec
inc
or
sbb
in
imul
dec
test
icebp
inc
sub
push
mov
in
outsb
mov
stos
mov
or
cwtl
add
xchg
adc
loop
addl
adcb
in
loopne
mov
fistl
test
inc
cmc
or
cld
add
xchg
cmp
mov
xchg
icebp
add
dec
sahf
or
inc
push
or
jns
imul
jbe
ja
lds
jp
add
dec
push
aas
aas
xchg
aad
jns
fidivl
ds
movsl
cltd
dec
add
sbb
mov
testb
dec
jb
femms
jnp
addr16
in
fisubl
or
cmpl
fidivrs
or
fs
adc
inc
push
and
lds
sub
pop
push
mov
mov
dec
sbb
mov
repz
pop
push
xchg
loop
aam
push
adc
movsb
shll
xchg
shl
inc
stc
add
sahf
ss
leave
out
and
stos
lock
push
mov
pop
or
sbb
pop
shll
es
cmp
dec
lods
pop
fldenv
aam
lds
pop
int
shl
shrl
inc
xchg
data16
cmp
sbb
push
hlt
adc
and
sub
pop
dec
cmp
psadbw
adc
sub
pusha
idiv
inc
ret
adc
aaa
stos
out
cs
jns
aaa
xor
inc
cld
pop
ds
push
stos
out
fnstsw
sbb
imul
xor
inc
mov
lods
rorb
dec
push
inc
xchg
sub
sbb
mov
add
in
lret
shrl
out
aas
fstps
pop
and
faddl
cwtl
mov
testb
xchg
push
stos
cmp
je
mov
inc
cltd
adc
sub
xor
add
jnp
pop
enter
lds
fcompl
mov
aaa
cld
mov
mov
scas
jo
inc
test
in
mov
imul
fadd
clc
test
ds
movsl
hlt
mov
subb
sbb
or
rolb
mov
out
pop
insl
frstor
shrl
xor
jecxz
adc
inc
ror
dec
sbb
in
cmc
add
cmp
push
lret
sbb
out
sbb
mov
mov
xor
dec
fdivrs
mov
sub
fbstp
nop
data16
hlt
jnp
scas
jb
push
pop
stos
and
sbb
or
fucomi
pop
addr16
rorl
out
out
pop
imul
fldcw
subb
mov
idiv
shlb
sbb
iret
add
enter
dec
fisubl
adc
aaa
sbb
pop
add
mov
pop
ds
fwait
lods
push
mov
sarb
add
fdivr
sahf
mov
popf
push
aaa
lods
push
sub
adc
inc
inc
push
gs
pop
loop
das
sbb
add
hlt
cld
int
mov
cmp
xorl
or
push
sub
add
into
inc
xor
xorb
in
cmpsb
pusha
jnp
and
sub
scas
stc
movsl
fcmovne
fs
inc
xor
mov
out
push
dec
jl
pusha
pop
stc
inc
in
push
shr
dec
mov
das
and
icebp
sub
mov
pop
sbb
in
fisttps
push
fucom
and
and
cmp
add
je
jle
pop
in
pop
jg
mov
js
mov
repnz
in
sbb
lcall
push
dec
daa
in
xchg
and
add
leave
icebp
push
jo
scas
outsb
das
fsubs
inc
idivl
int3
xor
ljmp
xchg
loopne
insb
nop
icebp
je
mov
pushf
cli
je
lods
idivb
mov
push
jmp
repz
fnstenv
lahf
sbb
mov
lcall
lods
je
mov
push
add
loopne
cmc
inc
cmp
adc
scas
push
sbb
mov
sbb
jmp
jmp
cli
loope
xchg
jl
gs
push
lahf
stos
fisubs
orl
sarb
mov
inc
lds
xor
repnz
test
pop
jle
pop
xchg
pop
adc
loop
or
rorl
lahf
xchg
sti
aad
mov
jne
divb
or
cmpsl
and
pop
scas
xorb
cmpb
mov
fiaddl
jmp
cwtl
fnstenv
adc
cmp
jne
enter
pop
pop
cmp
add
scas
std
aam
mov
imul
cs
mov
int3
clc
jne
pavgw
lea
out
mov
lock
arpl
enter
adc
outsb
pop
test
sbb
push
adc
test
mov
push
loopne
jmp
jmp
or
out
orl
xchg
lret
mov
negb
call
scas
in
arpl
xchg
sbb
pop
flds
cli
outsl
pop
insb
jg
sti
shrl
inc
aaa
dec
push
mov
popa
imul
jmp
xchg
lret
mov
movl
mov
and
test
dec
loope
cmpsl
clc
cmp
mov
jp
stc
mov
outsb
popa
rcr
mov
cmpb
add
sbbb
outsl
xchg
ficomps
cmp
stos
in
push
pop
adc
xorl
inc
xchg
cmc
jp
inc
xor
cli
out
sbb
in
gs
test
push
push
cmpsl
inc
fisubs
mov
stc
mov
lods
mov
or
add
pop
fdivrs
sub
pop
std
push
jg
nop
cli
push
pop
xor
pop
bound
cmp
jb
int3
mov
jg
cwtl
or
shrl
adc
and
out
jge
inc
inc
adc
loope
cld
xchg
push
into
and
adc
inc
mov
and
and
insb
outsl
ss
mov
insb
loopne
popa
add
pop
push
fcoms
int
mov
push
out
stos
sub
adc
ficompl
inc
pop
test
xchg
fidivrs
insb
cmpb
sbb
mov
mov
inc
rcrl
bound
inc
add
fninit
or
call
aam
ljmp
sti
cmc
sbb
incl
push
pusha
jnp
cmp
jg
fisubrs
cld
dec
cwtl
mov
fidivrs
pop
scas
rorb
dec
add
lods
aad
pop
out
aam
jmp
mov
in
jge
adc
pop
mov
movsl
inc
notl
test
sti
nop
adc
leave
call
jle
xor
popa
stc
iret
pop
sub
lret
mov
jns
out
out
lea
mov
lods
test
dec
sahf
xorb
cmp
push
adcb
jecxz
jb
inc
cmp
mov
ret
mov
mov
jmp
inc
mov
sbbl
scas
hlt
pop
jne
addb
add
inc
xchg
sahf
inc
jo
dec
lahf
lcall
push
icebp
mov
and
or
xor
lods
cltd
or
mov
xchg
push
xlat
add
insb
pop
mov
call
std
sbb
cmp
in
scas
dec
pop
inc
call
es
fidivrl
inc
xchg
popa
jbe
jmp
lahf
dec
aad
loop
xchg
pop
cmc
fsubr
add
add
sbb
in
sbb
lahf
lods
aam
dec
mov
mov
lods
jne
jne
imul
add
dec
and
in
pop
mov
push
jnp
cmp
scas
adc
pop
pop
add
iret
and
dec
xchg
push
pop
pop
jo
jecxz
and
js
jb
push
cmpsb
xor
dec
arpl
sub
outsb
add
mov
add
mov
loop
sub
pop
sub
cmp
jb
test
add
repnz
call
cmp
inc
outsl
mov
mov
rcl
repnz
scas
pop
cmp
std
inc
nop
inc
lahf
jnp
inc
cmp
movsl
popa
mov
push
call
hlt
sub
cmpsl
insl
mov
insl
and
ljmp
xchg
mov
xlat
popf
cld
mov
test
cwtl
cld
inc
and
xchg
and
test
inc
in
adc
cltd
adc
test
push
and
bound
adc
bound
cmp
add
shll
loope
jb
movsb
into
test
js
sarb
sbb
push
in
jmp
hlt
or
mov
mov
out
cmc
mov
out
dec
xchg
mov
dec
jp
lea
push
cmp
sbb
jae
cmpsl
push
jo
sbb
ss
lds
cmp
xchg
lret
in
and
or
filds
cs
xchg
lret
in
lcall
inc
xchg
add
mov
clc
xlat
adc
fsubrl
xchg
cmpl
dec
ret
pusha
lds
ret
sbb
mov
ret
jo
aaa
test
sahf
pop
in
in
ja
jns
and
xor
mov
jns
pushf
fidivrs
adc
je
outsb
inc
icebp
out
sbb
push
mov
pop
sub
std
mov
or
sbb
mov
scas
jmp
dec
cmp
stos
mov
push
popa
out
dec
dec
repz
popf
ss
xchg
dec
pop
inc
and
fcmovb
rclb
ret
test
es
mov
out
xchg
fs
mov
push
dec
mov
and
push
shll
mov
adc
push
sbb
sbb
scas
mov
loope
xchg
data16
rcrb
in
imul
loopne
mov
xchg
sub
push
sbb
adc
daa
pop
sbb
fldenv
adc
or
inc
jg
mov
inc
push
dec
sub
push
mov
iret
mov
push
addr16
jne
and
inc
mov
inc
inc
xchg
imul
cmp
jle
movsl
in
jnp
test
and
test
jne
in
ret
stos
jne
fimull
push
sub
or
inc
int3
cld
or
test
sbb
dec
enter
mov
pop
in
cmp
cmp
lods
inc
call
sahf
rcrb
add
and
ret
or
outsl
cltd
adc
int3
jae
add
mov
insl
in
sbb
inc
push
sahf
leave
inc
xchg
jl
add
xchg
push
popf
rol
ljmp
add
call
out
pop
sub
mov
iret
int
and
loopne
jg
stos
imul
mov
mov
pop
xor
scas
insb
inc
or
xor
shll
or
sahf
or
addb
fnstenv
outsl
adc
test
popa
cmp
add
pushf
xchg
and
out
cmc
push
or
dec
sub
inc
aad
lock
sbb
movsl
jle
push
mov
das
in
and
cmp
movsl
popf
jne
add
add
sbb
out
jle
adc
mulb
or
xchg
divl
insl
add
jb
jns
xchg
pop
outsl
lahf
imul
mov
add
out
pusha
repz
add
mov
and
mov
mov
int
jmp
rcl
imul
rcr
lds
movb
mov
cwtl
or
das
out
xchg
repz
xchg
inc
inc
dec
jne
cmpsb
xchg
je
int3
pop
sti
stos
pop
xchg
pop
out
inc
movsb
xchg
leave
aam
adc
sbb
rcrl
dec
fnsave
cmp
frstor
aam
push
or
xor
push
sub
mov
leave
int3
inc
arpl
xor
push
inc
mov
jo
outsl
push
mov
and
leave
andl
add
jo
mov
nop
popf
xorl
and
outsb
mov
cmpsb
push
push
jecxz
and
lret
jns
mov
jo
pushf
outsl
cmp
test
aad
mov
cmp
dec
fcomps
dec
cmp
add
gs
mov
xchg
mov
mov
repnz
xchg
push
sahf
iret
and
jl
add
rcll
lods
insl
cmp
jnp
jne
aaa
out
mov
jp
in
mov
adc
lock
fisttps
jp
pop
or
fwait
mov
je
cmc
je
lret
int3
cld
jno
popf
sub
pop
jmp
sub
or
das
bound
jae
stc
pop
fcompl
cld
xor
pop
sahf
adc
fbstp
rcl
sub
lds
mov
es
mov
bound
cmp
cwtl
adc
shlb
aas
sbb
jnp
shlb
test
jb
int3
lock
out
inc
cli
outsb
pop
inc
mov
lds
sti
aaa
lea
adc
subl
dec
cmp
inc
in
and
adc
mov
fcomps
das
push
scas
xchg
push
iret
outsl
push
cmpsl
push
mov
inc
jns
adc
adcl
jns
outsl
jae
pusha
lret
or
lock
sahf
mov
dec
jns
fidivl
in
xchg
mov
and
outsb
jl
sbb
adc
inc
sub
pusha
fildll
jecxz
mov
fistpll
mov
jle
stos
pop
and
mov
pop
or
sbb
mov
inc
pop
icebp
rclb
pusha
pop
fucom
cmp
lds
push
ja
xchg
inc
ret
cmp
add
add
pop
out
test
pop
aas
pop
pop
jg
nop
fwait
shll
lods
cs
mov
stc
mov
or
inc
outsb
enter
mov
data16
mov
adc
popf
dec
jl
inc
and
shr
xchg
jmp
stos
adc
xor
xchg
icebp
dec
insl
dec
iret
or
push
sbb
fstpt
xchg
pop
ja
rcr
inc
ret
mov
jb
mov
jl
or
sahf
ljmp
push
sbb
mov
and
loop
or
and
push
cmpsl
test
stos
daa
jecxz
push
aaa
scas
scas
dec
scas
aad
pop
sub
xorb
cwtl
jo
push
sub
dec
push
add
leave
lcall
add
sub
mov
lret
test
fimuls
dec
jecxz
or
push
cmp
ds
gs
mov
stos
mov
push
sub
movsl
mov
inc
int3
pop
clc
lods
loop
dec
pop
gs
jb
add
lea
mov
adc
lahf
sub
ljmp
cmp
fs
iret
cmp
test
mov
dec
push
mov
sbb
sbb
jno
jge
lret
mov
jo
sub
imul
inc
sub
sub
xor
mov
sarl
fistpl
mov
push
rcr
xor
cmp
mov
popf
sub
sub
mov
subl
cmpsl
jp
fcompl
fbstp
mov
lds
pop
inc
scas
dec
mov
jns
mov
leave
pop
sub
in
fimuls
je
dec
add
hlt
iret
fldcw
and
sub
sbb
in
mov
push
or
cmp
xchg
mov
add
adc
push
xor
cmp
out
pop
insl
ja
xor
jg
rolb
enter
fwait
shll
jle
pop
mov
sahf
or
pop
or
rol
or
shlb
sarb
add
add
or
or
push
clc
lahf
sub
aam
xor
mov
xchg
adc
mov
jnp
jno
or
imul
outsb
or
push
rorl
js
test
inc
lock
dec
repnz
insl
or
xchg
lock
cwtl
jg
outsb
idivb
stc
xchg
imul
cli
or
repz
and
fcom
or
xchg
sub
test
mov
push
jg
mov
pop
fbld
pop
or
pop
or
fnstsw
xor
enter
jne
mov
cwtl
ret
sub
gs
pop
enter
jp
ljmp
xor
cs
sub
gs
fcmove
ror
mov
aas
gs
es
mov
push
in
fcompl
sbb
mov
sti
sub
cmc
sub
cmp
mov
lret
mov
les
xchg
xchg
mov
addr16
or
add
push
push
dec
sbb
lods
pop
sbb
inc
nopl
addr16
cwtl
mov
xchg
mov
and
add
mov
outsb
out
aam
xchg
pushf
or
cmpsl
cmp
fcoml
not
in
fcompl
lret
xchg
ja
in
pop
scas
fiaddl
rorb
loop
lcall
fnstenv
push
cmp
les
andb
cmp
add
push
es
add
repz
shl
scas
add
stos
repz
pop
js
xchg
mov
std
xor
mov
in
inc
je
xor
orb
outsl
loope
dec
out
int
shlb
push
fists
test
arpl
fbstp
ret
mov
cmpsb
pop
inc
adc
idivl
shr
imul
fists
ret
inc
fcomps
stos
jl
insb
sbb
pop
fcomi
and
jne
aad
add
push
je
ja
aaa
jmp
enter
xor
clc
mov
push
dec
push
pusha
xlat
sbb
mov
scas
jle
pop
adc
pop
paddusb
jns
cmp
add
mov
mov
or
imul
inc
xor
cs
jl
je
jmp
lahf
insb
add
divb
pop
xchg
clc
sbb
in
popa
pop
mov
sbb
xor
push
pop
loope
mov
cwtl
lods
jns
scas
cmp
fnstenv
cltd
mov
in
daa
in
xchg
pushf
xchg
in
xlat
xor
cltd
xor
jmp
fwait
insb
push
xchg
test
push
dec
add
stos
rorb
push
add
ljmp
pop
adc
jg
add
push
sbb
xchg
mov
sbb
data16
xorb
cmpsl
bound
imul
je
popf
adc
pushf
pop
packsswb
mov
jns
push
insb
jl
dec
pop
pushl
sbb
sti
loope
movsb
nop
mov
in
push
xor
lods
cmp
test
or
push
inc
out
or
adc
jns
repz
and
in
int3
cwtl
call
sub
insl
dec
pop
xor
mov
lret
jae
aas
mov
shl
xchg
outsb
ljmp
inc
cmp
loopne
test
and
insl
adc
cwtl
loop
lods
push
fistl
mov
popa
in
xor
adc
mov
inc
adc
mov
aad
mov
pop
add
cld
jo
shrl
sub
sub
mov
pop
loop
cmp
sbb
inc
loopne
or
in
fnstenv
mov
int
jae
sbb
ret
fiadds
cmp
and
or
sub
test
pop
repz
out
nop
insb
dec
xor
sub
stos
jg
and
insb
lock
insl
call
and
inc
mov
xor
scas
mov
cmpsl
xchg
fsubl
dec
stos
popa
es
inc
inc
sub
clc
movsb
and
dec
fmull
jecxz
dec
mov
mov
add
aam
xchg
nop
loope
icebp
data16
cmp
stc
cmp
lret
hlt
ret
or
das
aad
out
mov
jle
jecxz
adc
xchg
outsb
xchg
imul
dec
nop
aad
mov
mov
out
jb
sar
popf
mov
and
jge
pop
pop
imul
sti
or
and
movsb
mov
frstor
mov
xchg
faddp
fadds
shll
icebp
daa
sahf
push
jbe
clc
xchg
add
and
jmp
pop
mov
xchg
cmpsl
in
sub
mov
int
aad
jmp
mov
add
pop
and
pop
lea
sbb
es
jg
jge
adc
ja
rorb
add
mov
add
loop
mov
test
xor
test
mov
in
or
mov
nop
push
sbb
lock
xor
mov
test
shl
test
and
pop
push
xor
sti
rclb
ja
xchg
push
loope
mov
jp
aam
add
addl
xchg
outsl
pusha
sbb
sbb
sbb
imul
and
xor
cli
dec
cs
daa
dec
sbb
sbb
sbb
xchg
lods
repz
mov
fwait
xlat
pop
aas
add
adc
jecxz
pop
mov
push
mov
push
fisubrs
xor
dec
jno
imul
pop
subl
idivl
push
mov
inc
mov
hlt
push
fcmovb
adc
sbb
push
sub
out
jmp
in
daa
fsubs
sbb
and
mov
cwtl
out
leave
lea
stos
push
sbb
lods
xor
pop
scas
pop
pop
in
adc
push
data16
ljmp
add
mov
test
stc
xchg
aas
cs
jmp
mov
jl
push
imul
push
scas
lock
lret
fwait
pushf
xor
in
inc
mov
movsl
fwait
xchg
cwtl
divb
push
cmpsb
aaa
cli
loopne
add
add
and
fwait
push
roll
add
aaa
in
cld
pushf
fnsave
adc
arpl
or
and
and
or
lret
daa
inc
mov
jb
and
or
cmpsl
pop
stc
rcrl
lret
inc
sub
ss
and
incl
ja
out
not
add
stos
mov
out
repz
adc
popf
flds
arpl
fisttps
cmpsb
cwtl
add
lahf
popf
loop
dec
xchg
jecxz
outsl
mov
mov
inc
inc
or
mov
push
or
cmp
xor
mov
xor
mov
pop
mov
fisttps
dec
and
jo
es
stos
push
les
inc
adc
stos
pop
insl
adc
inc
mov
out
loop
imulb
push
inc
addl
dec
sub
adc
in
ljmp
sbb
cltd
pop
cmpsb
jnp
xlat
loop
ret
mov
xchg
mov
mov
xchg
dec
ja
mov
jno
cmpsb
mov
inc
pop
leave
add
mov
dec
fidivrl
test
mov
mov
loopne
jle
cmovbe
stc
psubsw
xor
jge
dec
sub
js
jecxz
inc
add
test
inc
mov
ret
fsts
sbb
sub
rcrl
pop
pop
loop
fbld
lds
lahf
insb
dec
sub
mov
push
fisttpll
or
aad
leave
popa
push
mov
or
inc
insl
insb
loope
mov
adc
mov
mov
inc
clc
mov
imul
inc
mov
scas
mov
dec
repnz
iret
inc
jne
mov
rol
shlb
inc
cmp
adc
jmp
mov
xchg
mov
xchg
nop
jg
sub
pop
mov
sbb
push
dec
ljmp
jle
mov
inc
out
sarb
dec
cmc
call
add
inc
lods
push
mov
adc
rcl
stc
ret
push
lea
mov
subb
dec
ljmp
xchg
lds
jnp
and
pop
out
stos
dec
jbe
pop
pop
cmp
mov
mov
scas
loopne
jle
cmpsb
sub
jo
fwait
lahf
ja
mov
xchg
mov
das
and
pop
rolb
xor
xlat
xchg
cltd
and
jg
sub
push
rol
addb
popa
cmp
mov
push
daa
cmova
addr16
xor
mov
mov
popf
adc
sub
push
jmp
fiadds
lock
leave
adc
jmp
lods
shll
cmp
ljmp
and
enter
push
xchg
ret
cmp
cmp
movsb
sub
test
sbb
es
das
xor
pusha
inc
dec
aas
and
sub
es
movsl
adc
in
les
test
dec
mov
xchg
and
adc
cmp
out
push
mov
mov
aad
pusha
mov
mov
push
std
cld
or
ds
ret
mov
push
jnp
push
cli
jb
pop
outsb
or
test
xchg
xor
inc
push
add
stos
insb
xor
xchg
decl
add
out
shlb
lea
mov
dec
sarb
dec
std
orb
movsb
pop
btc
xlat
lcall
xor
lods
inc
cmp
arpl
cs
cs
cmp
in
ret
mov
jmp
xor
lret
iret
pop
stos
jl
int
pop
test
scas
leave
adc
mov
xchg
fsubr
adc
mov
push
xor
push
je
mov
and
sub
adc
mov
mov
and
mov
add
and
jbe
xchg
iret
sti
stos
push
int3
xchg
xchg
fadd
aas
mov
mov
shlb
fadds
jbe
xor
imul
adc
pop
hlt
dec
movsl
loop
imul
lret
mov
mov
mov
daa
xchg
in
lock
sbb
mov
cwtl
dec
clc
int3
push
xor
sbb
notl
lock
lea
orl
je
gs
dec
mov
sbb
sub
fldt
or
stc
pop
mov
fadd
orps
dec
in
aad
mov
cltd
mov
push
jae
sub
pop
repnz
or
out
leave
cs
and
rol
jmp
sbb
clc
call
int3
sub
mov
push
lds
outsl
rclb
jecxz
lcall
call
xchg
mov
pop
sar
stc
mov
fisubl
insl
xorl
jae
cmpsb
dec
xor
lret
sahf
rcrl
jecxz
mov
inc
sub
lods
sbb
add
mov
test
repnz
stos
scas
cmp
mov
adc
movsb
and
in
push
les
jmp
or
add
jle
rorl
pop
lret
lcall
sbb
ja
out
outsb
ljmp
ret
adc
sub
in
cmp
mov
push
sub
enter
pop
xor
out
lea
mov
mov
sub
and
jbe
daa
test
dec
les
pusha
pop
lods
aas
push
aam
int
outsb
ret
lret
imul
loop
sti
sub
ss
cltd
xor
and
sub
or
cmp
or
mov
dec
int
or
inc
imul
pop
sub
fs
andb
cmp
mov
fwait
lea
call
test
jmp
jle
mov
and
cmpsb
pushf
mov
icebp
or
unpckhps
dec
std
add
mov
gs
cs
lods
stos
pop
add
jmp
testl
mov
iret
lret
icebp
stos
mov
and
mov
cmp
out
push
addl
sarl
xor
mov
lods
pop
push
add
daa
leave
sbb
or
dec
or
pop
aaa
cld
jo
loop
imul
push
mov
test
adc
xchg
imul
ret
jecxz
inc
call
add
and
pop
cmp
pop
sub
idivl
xchg
es
pop
lods
and
test
add
daa
jecxz
in
xchg
push
pop
rcll
es
inc
push
fimull
repz
mov
add
lcall
dec
xchg
mov
jg
arpl
xchg
out
mov
push
or
cmp
or
popf
data16
add
jle,pn
add
loope
xor
pusha
mov
mov
fisubl
mov
push
nop
mov
push
push
pop
cwtl
in
scas
test
dec
sub
call
adc
mov
loop
pop
stos
pop
ljmp
add
es
in
jg
cmpsb
rcrl
or
in
data16
jmp
push
dec
cmp
data16
mov
jmp
sub
pop
and
out
push
ja
insb
adc
lret
stc
fwait
mov
or
loopne
push
dec
lds
rorb
jp
sub
lock
mov
xchg
ret
cs
add
sbb
mov
loope
stos
fsubl
dec
pop
jo
sti
inc
faddl
std
jne
jbe,pt
and
sarb
inc
enter
mov
repz
add
mov
jnp
outsl
push
or
mov
ret
incl
faddl
leave
or
push
fwait
cltd
push
imul
outsl
std
cmpsl
add
mov
dec
imul
xchg
cmp
pop
repz
mov
mov
stc
xchg
lahf
mov
and
gs
repz
sub
cmpb
mov
fs
xor
and
mov
test
xchg
lcall
pushw
or
mov
ret
push
sub
lcall
jae
fwait
xchg
adc
pop
fsubrs
mov
rclb
mov
fcomps
sbb
xchg
mov
xor
repz
ss
hlt
ds
es
inc
cmpsb
aam
dec
mov
cmp
icebp
sbb
dec
pop
dec
mov
push
jmp
scas
xor
mov
pop
mov
xchg
mov
and
add
mov
or
mov
in
push
int3
or
gs
dec
cli
pushf
leave
add
ds
das
jle
ja
add
push
loopne
push
mov
push
jmp
and
mov
scas
jno
cmc
xor
push
cs
jb
jae
in
jb
lea
xor
addr16
es
movsb
jns
xchg
xchg
test
daa
sbb
scas
mov
push
dec
pushw
mov
sbb
insl
fnsave
lods
xorb
mov
mov
sbb
xor
nop
subb
cld
inc
popf
bound
push
adc
dec
scas
and
push
xor
lods
out
lock
xor
mov
mov
idivb
std
jae
or
and
ljmp
sbb
sub
jecxz
loopne
out
and
jne
outsl
pushf
leave
icebp
and
pop
add
add
jge
xor
push
test
orl
add
mov
xchg
out
out
aam
mov
fildll
fadds
in
movsl
jae
in
bound
dec
and
fldt
outsb
aad
popf
ja
sub
or
mov
cli
adc
mov
dec
enter
cmp
mov
xchg
rcrb
mov
pop
pop
or
inc
dec
jno
test
sbb
daa
cmpsb
lock
bound
cmp
mov
mov
jg
sbb
or
xchg
add
test
in
add
stc
in
dec
lods
lods
cmc
adc
pop
lcall
sub
insb
add
inc
in
mov
cmp
lods
xor
jl
icebp
adc
jns
minps
ror
or
pop
clc
outsb
push
out
jno
jnp
repnz
mov
popf
lahf
lret
mov
xchg
aam
fldenv
jmp
mov
pushl
inc
cmpsl
shlb
mov
push
sbb
testl
adc
push
jno
aad
ret
push
push
mov
sahf
mov
mov
sub
shlb
rcr
push
fwait
sbb
stos
daa
lret
lret
cli
out
scas
lds
mov
sub
push
jns
inc
imul
xchg
jg
xchg
fsubs
push
push
testl
and
add
mov
popl
inc
pop
sbb
and
test
xchg
in
add
loopne
mov
mov
hlt
cmp
push
xor
int
cli
xchg
lods
rolb
jg
add
push
aad
call
cmpsb
sti
mulb
lods
daa
popf
mov
test
xlat
test
sbb
sbb
hlt
aam
insb
cmp
lret
xor
adc
rcl
mov
out
or
push
mov
leave
sub
jl
mov
jmp
getsec
sarb
jmp
and
pop
push
cmp
fadds
aas
cmp
cmp
pop
jbe
ds
jp
sarb
push
lea
add
outsl
ss
pop
int3
jno
pop
inc
int
imul
in
aas
push
adc
decb
mov
out
dec
mov
or
push
cltd
cmc
mov
jns
sub
rcrb
addr16
add
stc
xchg
enter
sub
std
pop
hlt
jecxz
pushf
nop
test
dec
or
insb
mov
push
xor
js
push
mov
pop
aad
pusha
lods
mov
pusha
test
dec
stc
in
cmp
mov
jb
pop
rcrb
mov
add
test
outsl
icebp
jo
leave
sbb
push
aam
xor
push
in
cmp
pop
stc
lret
cmp
pop
jl
inc
fsubp
out
mov
xchg
out
movsl
mov
dec
aas
mov
ljmp
push
test
test
pop
int
shlb
cmpsb
mov
test
aas
push
movsl
stos
out
push
or
xorl
imul
adc
jle
push
adc
cmp
loopne
bswap
jbe
gs
stos
fs
insl
inc
jns
or
ljmp
scas
xor
insb
cmp
jge
mov
dec
shlb
leave
ret
mov
mov
movsb
gs
cld
lds
jmp
mov
or
mov
mov
sub
test
mov
pop
xchg
loope
sub
xchg
mov
fidivrs
jg
test
push
mov
test
jp
aam
scas
xchg
adc
and
mov
xchg
inc
xor
add
ror
add
pusha
hlt
in
mov
xchg
stos
jo
sahf
push
out
cmp
and
mov
inc
adc
lods
out
icebp
inc
xor
push
pop
js
shrb
mov
mov
in
lods
jle
xchg
dec
enter
mov
data16
in
add
aaa
add
int3
add
in
popa
popf
adc
jl
pop
not
pusha
fsubl
movl
lock
push
and
out
imul
mov
or
frstor
icebp
dec
mov
loope
scas
aas
loope
or
push
pop
lds
xor
mov
jge
adc
xchg
mov
mov
or
lahf
stos
mov
repnz
pushf
sbb
inc
pop
adc
and
in
lds
out
mov
out
mov
xchg
stos
sub
mov
mov
cmp
sbb
icebp
sub
sub
xchg
xchg
ror
fwait
mov
inc
push
cmp
or
pushf
mov
imul
or
js
or
gs
push
rorl
xchg
lret
lock
mov
aad
push
fcoml
push
xchg
aas
mov
mov
movsl
test
and
test
fcoms
repz
xlat
ret
outsb
jle
mov
scas
push
iret
push
into
adc
mov
ret
cld
xor
stc
add
cld
push
stc
or
movsb
sbb
fs
out
jmp
adc
jno
int
pushf
fsubrp
scas
faddp
in
popf
pop
mov
xorb
add
mov
or
in
fisubrs
out
sub
scas
in
in
cmp
mov
test
and
test
adc
gs
jbe
inc
cmc
inc
sbb
or
lea
mov
outsl
dec
adc
push
mov
movsb
add
sarb
push
sbb
sbb
repnz
xchg
inc
xchg
add
xchg
shl
iret
scas
std
ljmp
ret
mov
addr16
jbe
mov
sub
lret
or
or
dec
xchg
je
inc
lds
popf
call
or
pop
cmp
cmp
and
ficoms
test
ret
fisttpl
or
aam
sub
jg
sbb
and
xchg
stos
xor
adc
xor
clts
dec
fdivr
sub
imulb
sbb
sub
mov
dec
jb
add
shll
push
jp
cmpsl
pop
cmc
sbb
jle
inc
cmp
repnz
sbb
insb
xor
mov
popf
imul
mov
xor
jo
push
ret
push
clc
loope
jecxz
push
fists
cmp
add
adcl
dec
stos
jmp
or
inc
mov
mov
push
sub
jl
adc
dec
mov
notl
mov
je
jb
push
sahf
sarb
dec
xlat
inc
xchg
sub
icebp
test
mov
push
mov
cmpsl
repz
ret
not
lret
or
mov
cmp
dec
xchg
les
into
sub
jmp
or
lds
sarl
inc
xor
lret
sub
mov
aam
xchg
xchg
imul
mov
cwtl
pop
pop
inc
push
fimull
dec
xchg
cmpsb
pop
adc
push
ja
xchg
dec
pop
mov
cmpsl
cmp
add
std
and
push
std
andl
aad
in
push
cld
jp
dec
test
idivb
dec
xchg
and
mov
jge
ss
cld
mov
stos
pop
jne
popf
mov
jb
call
and
adc
inc
inc
jb
mov
jmp
das
xchg
jg
ja
mov
loopne
insb
xchg
or
inc
jo
cmc
ds
inc
clc
dec
mov
insb
mov
mov
enter
imul
aaa
repnz
dec
popf
inc
lods
int3
dec
cmp
out
aad
faddp
sub
mov
and
ret
mov
mov
movsb
rol
and
push
repnz
adc
pop
or
dec
push
fcomi
push
aad
sbb
lcall
scas
psraw
inc
fisttpl
and
lods
pop
cld
dec
lods
xor
add
xchg
mov
xor
cmp
frstor
mov
leave
mov
ljmp
ret
dec
js
push
cld
pop
cmp
shll
dec
mov
xchg
aaa
jge
mov
mov
and
repnz
sbb
repnz
push
mov
lahf
jle
out
fucomp
stc
dec
flds
cltd
rorl
stc
mov
int3
sbb
xor
pop
mov
xor
xor
xchg
xor
stc
lods
ljmp
lahf
iret
out
cmpsb
and
pop
fnsave
inc
mov
in
out
sub
dec
ljmp
push
fidivs
fidivrl
add
loopne
sti
jmp
sahf
lret
fmull
fildll
sub
ret
and
mov
or
mov
jg
cmpsl
test
pop
std
rorl
sbb
dec
sbb
cli
popa
and
xchg
lds
xchg
push
outsb
cld
mov
cmp
mov
pop
xchg
outsl
rcrb
test
jae
out
push
xor
xlat
rcr
sti
push
outsl
add
insb
and
sbb
mov
inc
add
pop
push
les
pop
push
outsb
in
scas
mov
and
sbb
clc
dec
cld
jae
jno
mov
cltd
or
decl
ljmp
rcr
fisubl
xor
mov
dec
out
cwtl
je
daa
inc
mov
sbb
out
xlat
sbb
inc
ljmp
mov
push
loop
mov
cs
jge
js,pt
cli
fadd
mov
push
pop
stos
push
cs
jge
xchg
out
sbbl
es
lcall
gs
ss
fistl
inc
and
mov
aam
les
rcrl
add
cli
test
mov
lret
negb
mov
sub
mov
in
sub
test
je
inc
gs
sbb
mov
aaa
rcrl
subl
mov
mov
sbb
sub
xor
shrl
xchg
adc
rcll
loop
cmp
xchg
rcll
ss
popa
jge
xchg
push
jae
adc
sub
mov
xlat
jae
dec
test
mov
mov
inc
push
dec
or
lods
in
mov
mov
pop
pop
fsubl
inc
lret
xor
mov
dec
jle,pt
idivb
push
lahf
cmp
mov
loopne
or
xchg
cmp
push
mov
dec
sub
in
out
rcl
add
orb
das
ficoml
int3
dec
test
dec
xor
imul
mov
pop
cli
pop
or
test
icebp
jmp
sub
lods
dec
aam
test
negl
testb
rolb
outsb
cmpsb
mov
dec
jecxz
add
roll
test
int3
loop
mov
lods
mov
jmp
scas
nop
mov
outsb
lock
add
cld
mov
lods
push
in
pop
jo
xor
push
mov
insb
dec
rorl
inc
lods
mov
lods
jo
inc
repz
stos
int
mov
clc
inc
dec
mov
sbb
pusha
aas
loop
jmp
inc
jmp
in
inc
lea
aam
lds
and
add
call
repz
test
adc
or
mov
daa
cltd
xchg
sbb
add
hlt
mov
int
ss
xchg
add
push
xchg
xchg
addr16
cli
std
adc
addr16
xchg
fs
cli
push
mov
aas
or
pop
push
mov
subl
repz
pop
cmp
mov
into
notl
aam
stos
inc
dec
xchg
dec
pop
pushf
mov
xor
xchg
mov
ror
mov
sub
jbe
dec
idiv
sub
mov
fldcw
jg
ljmp
stc
lea
mov
cmp
nop
push
or
call
cmp
imul
or
clc
inc
shrb
jge
jns
lret
xchg
push
shrl
enter
jp
cmp
scas
push
test
xor
xchg
clc
ss
movsl
push
mov
movsb
inc
add
subl
shlb
sub
ss
mov
sub
jae
sub
jl
adc
xor
lock
loop
test
and
xchg
pop
stos
sti
cwtl
insb
xor
cmp
scas
cmpb
cmpsl
adc
insl
xor
repnz
fcmovnbe
add
mov
clc
inc
scas
dec
cmp
lods
cmpb
push
xor
fadds
pop
out
sbb
adc
xor
push
and
pop
and
cmpsb
sbb
cmp
jno
icebp
xor
aaa
sub
hlt
and
and
xor
mov
fcompl
cmp
leave
push
and
jmp
ret
sti
enter
inc
stos
fimull
adc
push
mov
and
imul
sbb
aam
jno
xor
xor
mov
adc
movsb
xlat
dec
ret
push
cli
ljmp
popl
out
jns
xchg
decb
sbb
sub
push
bound
jl
adc
mov
mov
cld
dec
mov
mov
xchg
rcrb
roll
mov
neg
jbe
cld
dec
push
mov
movsl
jne
push
cltd
test
sti
leave
push
inc
or
fldt
jg
hlt
cmp
js
stos
ljmpw
cmp
mov
pop
sub
ret
rorb
iret
pop
stc
incb
ja
pop
roll
popf
out
mov
nop
push
loop
adc
sub
lods
ljmp
inc
xor
sahf
cmp
xchg
aad
iret
cmpsb
and
mov
push
popf
add
adc
sbb
bound
dec
ss
bound
push
in
mov
and
rolb
dec
jb
adc
push
out
sbb
or
push
fildl
cmc
pop
mov
ja
push
adc
inc
inc
into
jb
cmp
and
or
stc
out
shlb
lahf
xchg
dec
pop
inc
pop
add
cmc
xchg
enter
pop
xor
test
pop
adc
mul
jnp
pop
ret
mov
adc
lock
das
push
stos
insl
idivl
mov
in
adc
stos
adc
adc
ljmp
jecxz
add
mov
xchg
sarb
fistpll
dec
sub
fcomps
pop
aaa
jae
mov
into
daa
and
iret
mov
mov
mov
mov
std
jne
mov
push
repnz
hlt
mov
adc
sahf
cmpsl
dec
inc
xor
mov
push
imul
sbbb
fisttpl
or
imul
and
xchg
aad
ret
icebp
xchg
out
and
std
add
sahf
pushf
xor
ret
xor
and
mov
test
adc
mov
cld
dec
rolb
dec
adc
fisubrl
or
leave
push
xlat
test
stos
pop
cmp
out
stos
pop
popa
out
pop
mov
and
fsubp
xor
in
inc
xchg
cmc
sbb
mov
popa
sub
mov
add
addr16
add
mov
aam
xchg
fsubrl
enter
lret
jp
or
aas
sub
dec
or
lret
cmp
lds
cs
mov
dec
hlt
jmp
pop
and
cmp
fs
aam
mov
xlat
mov
dec
sar
imul
xor
fsub
push
adc
dec
sub
pushf
test
mov
jne
outsl
fidivl
cwtl
push
or
sbb
push
dec
xor
jb
popa
cmp
sub
js
push
out
aaa
mov
mov
add
movsb
cmpsb
gs
unpcklps
outsl
lcall
stos
jb
xchg
popf
mov
std
sbb
xchg
adc
add
pushf
and
mov
cmp
mov
mov
dec
and
pop
sbb
pop
jo
dec
xor
sbb
je
ljmp
loopne
int
test
inc
push
push
xor
cwtl
addr16
jl
inc
add
add
int
and
push
aad
jne
fcoml
stos
mov
dec
and
sbb
cmp
jbe
mov
sbb
mov
xlat
inc
add
mov
sbb
mov
mov
inc
mov
data16
inc
pop
flds
inc
push
daa
pop
push
not
add
cmc
rorl
data16
adc
int3
push
inc
pushf
sbb
or
or
cmp
out
mov
out
fnstenv
xor
pop
xchg
and
xor
cli
add
sub
popf
sbb
mov
pop
jmp
cmp
mov
adc
imul
add
outsb
fcoml
iret
dec
in
and
inc
jp
and
hlt
jns,pn
mov
xorl
adc
lea
out
insl
lods
outsl
push
pop
xchg
mov
xor
repnz
cld
cmpsl
mov
outsl
and
rcrl
lahf
sahf
fs
cmp
xor
scas
xor
mov
out
mov
repz
inc
mov
adc
sbb
mov
sbb
lock
push
fdivl
mov
and
xor
fwait
mov
push
jne
sbb
inc
mov
imul
mov
cmp
mov
mov
and
mov
inc
stc
test
repz
mov
push
mov
mov
jmp
lea
pushf
sub
mov
mov
or
mov
pop
insl
test
push
ret
or
cli
mov
mov
inc
or
popf
aaa
dec
into
jecxz
mov
sub
stc
pop
cmp
test
push
dec
lcall
xchg
mov
mov
imul
jnp
push
aam
xchg
in
xchg
sub
push
push
xlat
push
xchg
xor
mov
cmp
test
leave
sbbl
movsb
xor
inc
lcall
xchg
xor
stos
pop
inc
xchg
sbb
sub
mov
mov
fstpt
mov
lock
pop
clc
xor
in
mov
jno
jg
addr16
stos
mov
cld
clc
xor
scas
jge
lods
inc
icebp
dec
adc
lock
cmpsl
stos
add
jl
icebp
dec
std
lds
xchg
cmp
jp
push
push
out
daa
outsl
add
gs
dec
jb
lcall
cmp
cld
ds
jle
in
stos
and
ret
cmp
lods
sbb
mov
and
sar
ds
push
or
cwtl
dec
sub
add
dec
incb
out
xchg
mov
outsb
in
xchg
sub
in
and
inc
int
into
mov
sub
mov
adc
or
pop
sarl
fdivrl
mov
daa
dec
adc
lock
fsts
mov
popa
flds
jle
pop
in
rorl
mov
sbb
data16
andl
call
icebp
les
ror
std
bswap
loopne
dec
sti
pop
je
in
shll
sbb
mov
and
and
mov
lds
xor
or
sub
jle
cs
sub
mov
pushf
xor
dec
pop
xchg
ljmp
adc
sub
std
xor
mov
popa
mov
jg
fidivl
add
and
rcll
sbb
sub
stos
movsl
mov
lods
fistl
iret
cmp
test
lods
and
lea
mov
fildll
ret
lahf
push
pusha
or
mov
notl
adc
and
test
adc
cmp
xor
out
dec
jge
addr16
jge
sbb
or
cmp
push
aam
xchg
mov
insb
xchg
gs
lret
loopne
add
inc
movl
or
jp
nop
jmp
icebp
mov
enter
jne
stc
push
dec
test
std
xor
ljmp
mov
pop
or
cmpsl
sub
les
insb
sbb
in
sahf
idivl
add
and
mov
jg
cli
std
out
dec
cmp
and
jecxz
arpl
add
clc
aaa
adc
cmp
mulb
imul
addr16
push
es
mov
aas
sub
ret
pop
add
pop
cmp
dec
stos
inc
sub
popf
mov
hlt
lds
sub
into
pop
xchg
sbbl
in
mov
mov
jne
pusha
fiadds
out
fnstcw
nop
dec
mov
push
fs
add
mov
lock
fidivrs
shrl
loope
push
mov
fistps
ret
lahf
jno
sub
push
js
in
sub
ret
pop
rcrb
or
adc
rorl
sti
xchg
sub
push
mov
and
mov
add
ljmp
push
lret
mulb
nop
cmc
cld
mov
mov
dec
cmpl
stc
lea
lods
pop
xor
adc
jno
cwtl
shlb
mov
insb
sub
xor
inc
jmp
jbe
xchg
mov
add
fdivrl
and
mov
mov
ret
xor
inc
pop
aaa
pushf
xchg
or
int
add
addr16
push
in
cli
repz
inc
nop
sbb
inc
dec
int
lahf
mov
xchg
mov
xor
stos
fldenv
shrl
push
int3
cmpsl
xor
movsl
pop
push
cli
adc
dec
sbb
jnp
add
in
sahf
cmp
sbb
cmp
push
repz
mov
xchg
fisubl
ds
cld
mov
paddsb
push
push
push
adc
adc
cli
jne
scas
pop
mov
dec
movsl
pop
arpl
out
cmpb
mov
inc
imul
dec
add
stc
mov
jg
xchg
test
jg
daa
or
cwtl
dec
dec
jmp
int
inc
dec
add
nop
push
sbb
fisubl
and
and
les
loopne
int
inc
js
push
stos
shlb
fmull
repz
inc
add
bound
stos
in
ret
pop
mov
dec
cmp
mov
imul
push
clc
inc
mov
icebp
arpl
fnstcw
out
and
push
test
fs
int3
jnp
jge
push
push
gs
push
cs
sub
test
stc
mov
sub
out
mov
xorb
sbbl
clc
adc
inc
pusha
nop
dec
cmpb
repnz
sub
xchg
jmp
in
sub
cmpsl
dec
fisubrl
addl
hlt
cli
popa
orl
xchg
aaa
mov
push
cmp
cmpsl
pop
add
dec
rcrb
rcl
pop
imull
sbb
clc
inc
testl
addl
xor
imul
cmpsb
cmp
jnp
mov
xor
test
jae
cmpsb
out
int
inc
cmp
cwtl
add
rcr
aas
in
pop
bound
shl
dec
subl
dec
add
mov
scas
pushf
loope,pt
cmpsb
jae
push
repz
mov
pop
push
adc
sti
inc
arpl
jecxz
sar
in
xor
dec
repnz
mov
iret
addr16
cmp
or
and
or
fcomp
cltd
jecxz
and
push
leave
std
cmp
and
fidivrl
mov
add
fs
push
push
int
pop
ljmp
xor
mov
mov
in
sub
repnz
inc
test
push
sub
push
daa
dec
xchg
pop
movsb
movsl
hlt
lahf
out
push
inc
xor
mov
scas
dec
es
daa
xchg
push
das
cmpsl
adc
notl
addr16
mov
inc
fimuls
mov
adcb
outsl
mov
enter
and
push
lea
cli
das
hlt
mov
jae
sarb
adc
and
shrb
xchg
int
add
sub
ja
imul
xor
mov
xchg
cli
push
lea
dec
insb
and
nop
xchg
mov
out
mov
sbb
pop
xchg
out
and
movsl
popf
xor
addr16
inc
loopne
scas
in
jmp
aad
jecxz,pn
inc
pop
out
mov
pop
jo
loope
lret
or
xchg
fistl
mov
xchg
lcall
adc
enter
cmp
rorl
and
pop
mov
in
and
pusha
imul
cmova
sarb
lods
sub
sti
test
adc
loope
xor
jl
inc
fcomps
insl
test
xlat
cltd
sbb
dec
dec
push
mov
push
loopne
xor
fdivrs
or
out
movsl
mov
cmp
xchg
loope
cmp
xchg
pop
or
int
loope
adc
ficoms
pop
jle
sbb
push
ja
lret
and
jns
mov
mov
inc
lahf
cmp
mov
push
outsl
push
jnp
shll
xor
loopne
js
add
lods
jo
push
sub
or
ror
stc
repz
cmp
ss
inc
sar
aam
imul
and
or
dec
ret
imul
cmp
or
xorb
dec
orb
adc
arpl
pop
and
insb
aam
mov
addb
popa
mov
jge
fs
lahf
xchg
clc
in
mov
dec
es
js
gs
rolb
filds
add
mov
pop
mov
loope
data16
sbbb
mov
out
hlt
clc
imul
outsb
mov
xchg
lods
mov
gs
dec
cmp
sbb
xor
sbb
push
fisubs
mov
push
test
mov
lea
push
push
std
sti
dec
sbbl
jb
mov
jg
outsb
push
dec
xlat
cli
in
in
or
ss
push
stos
nop
sbb
inc
scas
les
jo
and
negb
sahf
ds
cmp
clc
mov
mov
dec
mov
data16
mov
mov
cmp
ret
jnp
and
stos
test
sub
pop
adc
hlt
mov
pandn
adc
int
ret
into
lea
shrb
aam
cmpsl
in
dec
loopne
or
hlt
lahf
xchg
cmp
sbb
dec
sbb
mov
jo
in
sbb
mov
imul
adc
cmp
xchg
dec
mov
sbb
loope
mov
lahf
pop
fwait
cmp
inc
or
sbb
int3
repnz
lcall
out
mov
or
gs
loopne
and
or
xor
imul
shlb
movl
fnsave
adc
sub
jl
pop
mov
cmp
jns
stc
cmp
or
xor
xor
mov
ds
and
push
pushf
lcall
inc
xchg
lods
pop
int3
div
pusha
cs
xchg
mov
out
loope
repz
xlat
sbb
pop
loopne
test
jae
lock
bound
or
inc
bound
lods
jno
out
xor
repz
stos
mov
xchg
sarb
push
jo
push
movsl
xchg
xchg
or
xlat
ds
mov
pop
push
ds
ja
cs
inc
sub
sbb
mov
cltd
cmpsb
mov
shlb
scas
enter
sub
push
ja
rorl
mov
mov
and
jecxz
out
fmuls
insl
dec
pop
inc
add
sbbb
cmp
insb
mov
repnz
and
outsl
and
sub
sub
cmpsl
xchg
loop
sub
adc
inc
mov
pusha
repnz
incb
and
adc
movsl
add
add
xchg
movaps
bound
mov
in
iret
scas
xor
push
cmp
mov
dec
add
or
cmp
shrd
and
mov
mov
lods
adc
lods
xchg
hlt
xlat
mov
and
mov
dec
or
sarl
adc
xchg
sub
inc
popf
mov
shlb
push
add
xchg
cmp
imul
adc
insl
fwait
mov
jp
adc
lods
in
cmp
ds
add
lock
xchg
lcall
ljmp
sub
js
cmp
imulb
pop
adc
in
sbb
pop
mov
in
sub
push
inc
sti
cvtdq2ps
and
dec
mov
xchg
cmp
mov
in
push
iret
jne
mov
cltd
stos
xchg
jge
or
fstpl
movsl
enter
in
std
jmp
or
dec
cmc
sahf
and
push
imul
loop
xor
xchg
in
lods
ret
cmc
dec
fisubrl
arpl
jge
inc
add
bound
popa
and
dec
or
mov
pop
loop
cwtl
daa
push
jno
or
outsb
xor
push
sarb
jmp
dec
mov
jg
inc
xor
sub
inc
jle
jae
lods
mov
out
xor
inc
add
ljmp
lods
mov
fwait
push
xchg
xlat
adc
mov
outsb
jo
lds
dec
cmp
mov
fs
or
push
jl
ror
sar
repnz
into
loopne
jns
mov
jno
out
es
scas
cmpsb
lods
popa
mov
push
xchg
leave
and
mov
mov
loop
sbb
je
addb
dec
fldt
cmc
sub
ret
aad
xchg
lods
iret
inc
mov
mov
jl
xlat
pop
test
arpl
hlt
inc
jbe
shl
test
mov
mov
ljmp
mov
iret
bound
not
loopne
mov
negb
incl
movsb
dec
sub
loopne
dec
dec
mov
iret
mov
cmpsl
popa
push
rolb
mov
sub
cwtl
into
fldcw
lcall
dec
mov
scas
or
je
mov
pop
loope
adc
pop
shlb
mov
shll
fstpt
and
fidivrl
sbb
push
sahf
mov
pushf
movsl
inc
jo
push
movsl
jnp
pop
fs
lea
lea
sbbl
int
mov
dec
fnstenv
xchg
xchg
orl
gs
push
push
or
push
fstpl
stos
jb
inc
add
lahf
xlat
js
mov
shrd
cmp
nop
or
xchg
cmp
std
mov
cwtl
adcl
mov
daa
std
and
test
out
jmp
pushf
xlat
cmp
inc
adc
mov
inc
call
and
insb
push
xor
hlt
push
adc
mov
cmp
icebp
push
jnp
jge
dec
test
add
dec
mov
rol
shrb
out
jmp
hlt
jae
sub
pop
cmp
iret
adc
adc
adc
mov
loop
mov
in
mov
test
dec
sub
punpckhwd
jno
xchg
cwtl
cmp
addl
or
dec
or
pop
inc
pop
mov
mov
and
sub
sub
jl
aas
cld
out
inc
xchg
lods
inc
push
cld
jl
aaa
out
mov
loop
cwtl
mov
mov
xchg
cmp
shr
int
adcl
cmp
arpl
mov
jns
dec
repz
sbb
in
xorb
out
inc
repz
mov
bound
popa
pop
ja
ljmp
xor
mov
roll
stos
call
push
loopne
mov
cltd
pop
call
jae
loope
arpl
pop
sbb
aas
mov
pop
sub
sub
jp
test
dec
fs
pop
mov
mov
and
bound
out
cwtl
or
lods
mov
fwait
cmpsl
push
or
hlt
out
andl
push
mov
jnp
mov
insb
xor
into
jg
pop
jge
repnz
scas
lods
or
add
cmpsb
add
popa
xchg
pop
push
jg
out
pop
xchg
divb
clc
cmp
daa
mov
leave
iretw
and
scas
and
popa
pop
pop
push
jbe
lods
mov
adc
push
out
aam
les
gs
repnz
mov
jp
pop
sahf
add
popa
inc
dec
sahf
and
cmp
icebp
int
out
sti
pop
jge
mov
loope
scas
xor
pushf
popa
or
mov
adc
leave
add
dec
xor
add
ret
mov
push
add
test
jbe
sub
jg
popa
mov
add
cmp
xor
xlat
iret
sbb
lret
aad
xor
push
lret
fs
mov
scas
out
flds
lock
jp
fstps
enter
mov
add
xor
xchg
test
out
push
dec
out
cmp
add
sbb
pop
cld
mov
mov
and
pop
fwait
sbb
xchg
sbb
ljmp
pop
mov
call
mov
movsb
enter
or
push
jnp
pop
xchg
dec
leave
js
or
or
mov
push
pop
gs
sbb
pop
add
dec
ja
sub
xor
xlat
pop
stos
pop
push
mov
in
cmp
in
stos
dec
hlt
into
push
pop
jl
daa
shl
sbb
scas
inc
rolb
aad
push
fwait
aaa
mov
addr16
jnp
or
mov
mov
cmp
insl
cmc
pop
and
push
sub
in
mov
or
inc
fcomps
push
or
arpl
xchg
mov
sarl
mov
fmulp
mov
jo
mov
pop
lock
mov
cli
stc
scas
call
xchg
mov
push
cmp
popf
dec
pop
lods
and
pop
nop
push
pop
into
out
jmp
cmc
cs
neg
jne
xor
inc
ljmp
orb
cwtl
xchg
pusha
das
pop
mov
lahf
mov
out
jns
jle
in
outsl
jno
out
add
aad
sbb
les
sub
inc
sbb
adcb
jo
xor
xlat
out
and
aad
rolb
mov
mov
adc
int
stos
hlt
in
mov
push
aas
sahf
ret
add
push
mov
arpl
subl
mov
mov
sbbb
sar
rclb
and
mov
test
sbb
cmp
and
ljmp
in
adc
mov
stos
out
inc
cli
imul
mov
ja
call
cmp
ret
pop
iret
cmp
or
cmpsl
int3
mov
inc
and
jnp
faddl
lret
pop
cmp
lret
jle
mov
mov
shll
cmp
in
sbb
ja
mov
outsb
out
lret
add
mov
xor
mov
fwait
cli
scas
mov
sbb
xchg
mov
leave
pop
test
sub
sub
pushw
in
jne
fdivrl
adc
jge
out
and
popf
cld
inc
out
inc
dec
call
fstpt
lods
inc
les
stos
dec
mov
jbe
leave
orl
cli
ja
outsl
movsb
jp
add
push
fldenv
pop
enter
je
jns
or
in
cmpsb
stos
xor
decb
pop
add
jo
pop
or
out
insb
je
xor
sbb
cs
xchg
jg
jmp
shlb
jb
add
ss
lahf
jmp
shrb
push
pushf
aam
call
testl
add
mov
cli
xlat
mov
rorb
test
inc
pop
movsb
popf
cltd
xchg
xor
je
jecxz
loopne
xor
mov
sub
push
es
cmp
lret
jle
dec
jne
pusha
ret
or
in
cmpsl
jmp
mov
rorb
dec
adcb
sub
cmpsb
add
inc
jmp
xchg
mov
xor
add
cmpsb
in
out
xchg
mov
ljmp
mov
push
inc
pop
movsb
xor
stos
mov
sti
cmovae
addb
sbb
cmp
popf
lret
pop
jge
xor
xor
cmpsl
push
outsb
jecxz,pn
inc
test
or
mov
orb
fnstsw
test
adc
pop
adc
jge
inc
in
cld
jae
repnz
sarb
sti
out
icebp
mov
mov
sahf
cmp
fbstp
fstpl
cmpsl
or
loopne
loopne
add
mov
std
jmp
adcb
std
cli
inc
scas
out
jg
dec
mov
mov
test
test
or
pop
ss
inc
loope
and
xchg
and
pusha
test
movsb
or
cmc
dec
jg
and
call
mov
leave
imull
out
add
jo
fildl
fdivrl
sarl
cmp
push
add
cmpsl
push
and
inc
pop
leave
jle
xor
adcl
xor
jp
xchg
aas
enter
pop
sbb
adc
lret
out
icebp
pop
call
bound
sbb
std
mov
add
testb
jl
test
mov
aaa
std
mov
mov
jnp
pop
jge
test
gs
sub
add
sbb
ljmp
and
xor
push
lock
or
inc
daa
sbb
or
roll
adc
decl
dec
inc
cltd
jmp
lea
sbb
pop
dec
push
adc
and
fsub
ret
inc
dec
xchg
mov
test
js
movsl
xchg
adc
cld
inc
jns
pop
cli
add
insl
dec
push
sbb
stos
faddl
cmc
scas
adc
jmp
cmpb
add
in
mov
adc
dec
jmp
inc
lret
enter
mov
addr16
sub
in
pop
cmpsb
pop
pop
mov
mov
xor
js
add
mov
lcall
xor
test
jo
mov
dec
leave
pop
inc
call
loop
je
movd
fs
es
sahf
enter
out
dec
sbb
jl
repz
rorl
test
dec
mov
js
push
or
xchg
jb
fsts
lcall
cmpsl
jle
bound
test
add
stos
and
mov
notl
fisttpll
cmp
push
pop
sbb
dec
fcompl
into
es
ficoml
int3
inc
loopne
sbb
jb
out
inc
inc
movsl
add
add
cmp
cwtl
mov
stos
push
shr
fadd
add
push
jge
xor
insl
call
scas
rolb
mov
aam
lcall
push
sbb
push
daa
dec
je
movsb
call
sub
mov
cltd
sub
sarl
mov
dec
fistps
xor
and
push
jmp
jl
push
sbb
shlb
imul
sub
mov
andb
sub
rcr
mov
mov
gs
mov
xchg
aas
sub
push
push
mov
enter
jo
rcrb
lret
popf
out
cmp
push
movsl
inc
adc
add
sbb
pop
mov
push
xor
jno
loope
cli
push
call
fsub
stc
sbb
xor
adc
jp
shlb
aas
and
or
scas
lahf
out
popa
stos
pop
fstl
fdivrp
mov
xlat
mov
cmpsl
sbb
mov
pop
push
pop
das
outsl
pop
xchg
test
mov
out
test
push
mov
push
push
mov
mov
mov
sub
ds
adc
popf
aaa
and
out
aad
push
in
into
and
pop
repz
dec
mov
cwtl
jnp
jno
pop
mov
nop
adc
and
push
popf
ljmp
std
inc
or
or
in
lea
in
leave
loope
in
inc
push
dec
mov
mov
fnstsw
jg
ret
inc
push
add
adc
sahf
pusha
sbb
test
xchg
push
dec
loopne
xchg
enter
and
loop
push
addr16
xlat
jno
jmp
inc
mov
jae
test
in
dec
je
cmp
mov
mov
std
test
stos
cmp
clc
and
in
rep
mov
inc
rolb
ja
repnz
and
cmp
push
int
jno
adc
pop
lret
pop
ret
xchg
add
pop
test
cli
movsb
mov
stc
arpl
flds
push
add
mov
inc
fcoml
idivb
jge
or
pop
and
sub
out
or
sarl
loope
jns
out
xchg
sbb
fwait
mov
xor
cmp
popa
std
mov
fsubl
rcrl
loopne
push
sbb
xchg
xchg
arpl
xor
jmp
fdivrp
sbb
or
mov
mov
adcb
iret
aas
inc
add
nop
or
dec
add
dec
mov
mov
xor
dec
into
jecxz
inc
ds
popa
add
fisubrl
adc
lods
cmpsl
mov
insb
xor
outsl
clc
sarb
mov
pop
es
dec
xchg
call
arpl
inc
ss
dec
xchg
pop
xchg
xchg
sahf
mov
stos
xor
mov
or
xlat
cltd
in
insl
nop
sub
lcall
cmp
jnp
enter
and
sbb
incb
loop
icebp
aas
mov
sbb
and
pop
imul
mov
xchg
sti
cwtl
cmc
xchg
xchg
jge
lcall
int3
pop
stos
or
inc
and
lea
ss
insl
divb
fildll
push
movl
xor
add
and
push
test
or
push
mov
add
mov
int
fdiv
mov
int
hlt
inc
dec
lea
jp
daa
mov
daa
aam
jnp
int
js
inc
push
push
push
enter
std
stc
inc
xchg
aaa
or
or
shrb
insb
cmc
daa
mov
cmc
sbb
leave
cmp
mov
lea
pop
or
adc
ds
mov
push
mov
add
negb
cmpsl
out
or
mov
jo
into
dec
outsb
cmp
mov
sub
add
lods
dec
ja
xor
mov
jg
push
and
pop
xor
inc
and
xor
sbb
pop
mov
sahf
jle
stc
jmp
jnp
imul
pop
pop
fwait
outsb
icebp
pop
je
adc
enter
shl
jne
fstpl
cmp
idivl
filds
add
cmc
adc
xor
addr16
mov
xchg
dec
lds
push
movl
adcl
mov
mov
insl
lret
gs
lret
mov
dec
daa
aad
fwait
outsl
mov
sub
or
push
adc
sub
sbb
sti
add
mull
inc
aam
mov
dec
out
mov
cmc
mov
jo
repnz
sbb
mov
int3
xlat
xor
jns
stos
int3
lret
and
daa
mov
jg
mov
push
push
push
jl
add
and
out
iret
cmpsb
adc
and
mov
lods
adc
xor
or
push
jns
imul
popf
lcall
add
fistl
push
and
out
fstl
or
adc
cmp
fdivrs
cmp
push
sbb
loop
pop
lahf
sub
fcomps
std
mull
or
rorb
inc
jno
xlat
outsl
mov
cmp
in
out
push
fldl
and
pop
push
jne
stos
fs
fs
ljmp
xchg
sub
insb
aam
and
test
lcall
test
mov
cltd
xor
js
loopne
ljmp
popf
adc
mov
lods
dec
mov
ret
sbbb
mov
idivb
es
xchg
inc
cmpsl
fidivrs
mov
data16
xchg
cs
push
pop
and
nop
adc
cltd
sub
add
push
and
push
out
rcrl
push
push
push
out
addb
fwait
xchg
sbb
inc
loop
xchg
je
xchg
or
test
mov
testl
add
sub
pop
jo
inc
mov
sti
inc
test
sbb
lret
fwait
cmp
jge
cwtl
push
sbb
pop
scas
xchg
mov
hlt
insl
mov
and
and
dec
and
adc
adc
mov
dec
mov
mov
inc
in
mov
stos
jp
enter
mov
out
xchg
and
in
int
lahf
and
jbe
jle
jecxz
or
mov
lcall
aad
mov
lods
adc
call
fildll
lods
cwtl
xor
lcall
mov
cwtl
xor
jmp
repz
jge
std
sub
lea
sbb
xchg
jl
je
lea
fstl
or
in
fmul
test
mov
add
or
rorb
int3
dec
xchg
adc
out
lahf
loopne
mov
pusha
pop
fisttps
mov
test
aaa
mov
in
add
push
or
addr16
pop
jne
pusha
rcrl
push
idivb
inc
in
cmp
in
outsb
fdivl
sbb
aaa
cmpsl
xor
push
xchg
ljmp
pushl
jmp
mov
cmp
jne
lret
cmpl
fs
icebp
pop
shll
or
nop
xor
inc
xchg
pop
and
adc
in
addr16
jns
seto
add
push
leave
and
mov
iret
and
inc
and
sbb
pusha
push
ret
cmp
cmpsb
aad
ss
mov
lods
cld
fptan
sub
aaa
inc
pop
sub
sti
sub
mov
mov
push
xlat
icebp
jecxz
push
dec
ret
xchg
sarb
jecxz
out
inc
out
push
or
xchg
stos
lds
mov
into
push
scas
mov
ljmp
fsts
cmp
lds
fstps
pop
jne
je
mov
lret
iret
sub
push
out
jmp
cmp
stc
sub
pop
roll
lahf
into
cmpsb
bound
and
enter
sbb
int3
daa
mov
fs
cmpsl
adc
and
daa
mov
xor
pushf
cmc
sahf
repnz
rolb
mov
imul
push
jmp
push
ja
jl
out
stos
adc
sbb
or
out
sbbb
movsl
push
xchg
dec
push
jle
mov
and
xor
mov
or
cmp
mov
mov
cmpsb
push
mov
inc
push
stc
inc
lods
dec
leave
jne
subl
lock
fstps
movsl
add
mov
cmp
addr16
cwtl
jecxz
xor
ds
push
popf
xchg
out
mov
push
or
mov
pop
faddl
xor
scas
push
push
test
xchg
xor
jnp
shr
ret
mov
adc
or
lock
cwtl
out
addr16
fcompl
insl
cmp
imul
cmpsb
push
jg
or
xchg
and
and
push
lahf
inc
xchg
cwtl
pop
les
orl
and
subb
std
jl
cmpsl
pop
pop
daa
push
and
xor
repnz
xor
pop
dec
pop
popa
hlt
xor
lods
sti
dec
nop
icebp
fidivrl
lds
rcll
jge
mov
jmp
int
and
jmp
sub
jmp
pop
and
cli
mov
test
sbb
test
rcrl
int
insb
inc
ss
push
inc
lods
xchg
mov
pusha
mov
jo
jno
adc
cmpsb
mov
xchg
adc
out
sbb
mov
pop
ljmp
inc
or
popf
push
pushf
mov
jecxz
rclb
push
mov
sbb
inc
ficompl
ficoms
push
aaa
inc
xchg
or
jne
js
dec
inc
loopne
push
push
cmp
jnp
les
popf
add
flds
ds
mov
sub
cmpsl
lock
mov
push
fmuls
hlt
mov
iret
inc
cwtl
push
sbb
ss
cs
or
pop
lahf
push
lods
repnz
xchg
push
movsb
mov
mov
mov
and
add
fstpl
jnp
jmp
fisubrl
cmp
xor
mov
dec
dec
pop
scas
xchg
mov
pushf
or
xor
xor
push
arpl
filds
cli
push
mov
dec
test
cmc
xorb
aad
xchg
xor
fisttps
outsl
jmp
fisttpll
mov
xorl
mov
mov
xchg
mov
jmp
pop
dec
xor
inc
adc
pop
mov
mov
mov
popf
and
dec
and
xorb
inc
ja
test
lds
and
mov
adc
xchg
jns
cmp
adc
jnp,pt
dec
jne
mov
dec
sbb
dec
cld
jge
jg
inc
js
xchg
bound
flds
movsl
mov
in
clc
xor
lock
and
push
pop
cmp
ja
out
pop
fistpll
and
push
fidivl
xchg
fwait
add
addr16
fs
add
cmpsl
and
movsl
popf
and
ret
push
icebp
sub
fwait
xor
jns
movsl
sti
scas
xchg
ljmp
nop
dec
add
repz
xchg
push
mov
enter
sub
enter
inc
push
pop
out
xchg
push
jmp
out
shr
hlt
pop
aad
xor
push
and
push
movsb
imul
testb
push
xchg
lret
lcall
addl
sub
leave
dec
push
sbb
je
insb
xchg
mov
xchg
stos
bnd
or
mov
addb
push
mov
sub
adc
mov
les
outsl
pop
rol
ret
sbb
scas
bnd
popa
ret
dec
mov
add
lahf
setne
pop
aam
lea
scas
pop
sbb
fsubrs
lcall
lds
in
js
pusha
adcb
jns
repnz
pop
arpl
testl
inc
cmp
jo
inc
xchg
scas
pushf
outsl
gs
hlt
inc
ja
sbb
cmp
out
sub
call
push
cmp
mov
lret
fdivl
dec
pop
sub
je
mov
clc
movsl
shlb
in
mov
push
mov
pop
ja
insb
push
mov
std
hlt
mov
loope
cmp
aam
outsl
xchg
dec
dec
cmp
inc
int3
cmp
fwait
mov
cmp
add
pop
push
jo
loope
insl
sub
loopne
pop
jge
sub
xor
dec
or
add
push
out
mov
pop
dec
push
in
xchg
sarb
ret
lahf
cmp
jno
cmpsl
mov
push
ficomps
iret
push
cmp
sub
fstp
js
mov
cmp
je
cmp
aaa
mov
sbb
push
fcmovbe
push
xor
fimull
stos
and
insl
rorb
push
inc
jno
in
mov
mov
ja
rcl
xchg
cmp
jle
scas
fwait
xor
mov
sbb
sbb
inc
jns
idiv
cltd
popf
xchg
cmpsb
push
add
fsubl
addb
add
nop
adc
sub
repnz
sub
imul
push
fmull
outsl
mov
cmp
daa
pop
jge
jbe
mov
pop
cs
sbb
orl
jb
sbbb
aam
push
cmpsl
mov
push
das
clc
das
mov
mov
iret
insb
lahf
inc
in
lret
jle
imull
ljmp
adc
out
iret
push
dec
sub
sbb
test
pop
insb
mov
out
or
pop
mov
cmp
dec
push
fwait
mov
xchg
daa
fimull
dec
push
ss
test
mov
icebp
mov
and
popa
lcall
ljmp
stc
add
jo
xor
lea
aaa
lret
lea
cltd
enter
push
jmp
pop
xor
notl
add
std
lock
mov
rcl
or
cmp
sti
cmpsb
aas
jnp
fprem1
cld
js
rorl
xchg
fiaddl
xchg
pop
push
add
fisubs
inc
aaa
fsubrl
pop
das
inc
xor
pop
mov
js
jge
push
fsubs
cmpsl
pop
mov
inc
sub
insb
and
and
inc
dec
ja
jmp
call
mov
dec
std
addb
add
cmpsl
mov
subl
nop
aaa
xchg
jb
or
jb
sbb
mov
aaa
lahf
fdivl
xchg
add
mov
push
inc
das
cmp
add
daa
inc
movsb
mov
jo
or
mov
or
mov
cmp
test
push
sti
push
cmp
mov
mov
xchg
sbb
std
jmp
std
pop
insb
fwait
int3
popa
pop
inc
sahf
notl
mov
push
push
je
lods
ljmp
inc
fbstp
lods
xor
sub
pop
lods
lret
fcmovnb
fstl
xchg
jecxz
les
jg
sti
outsl
xchg
mov
mov
mov
pop
mov
shll
repnz
sbb
push
aaa
lcall
jne
add
adc
aaa
inc
les
xlat
cmp
fidivrs
cmpsb
test
ja
clc
add
inc
push
mov
nop
call
pop
ja
sub
and
jne
pusha
adcb
js
or
mov
insl
and
jl
inc
cli
mov
xor
push
fwait
jge
or
rorb
and
pop
das
sub
mov
sbb
fwait
pop
lea
fnstenv
jmp
jae
cmpsb
in
cmp
or
inc
inc
shrb
fsubr
test
cmp
movsl
fld
push
and
stos
lods
jb
mov
inc
cltd
test
inc
and
pop
frstor
out
cmp
imul
movsb
lea
js
pop
jo
in
jne
or
popa
mov
cs
lods
outsl
mov
adc
xor
fsubrl
pop
sbb
jp
push
pop
or
in
imul
enter
subl
subb
jl
pop
and
dec
pushf
add
lock
das
cmp
stos
filds
push
dec
stos
adc
xchg
sbb
jmp
fldt
insl
and
sbbb
bound
sbbl
adc
popa
mov
cld
rcr
mov
dec
xor
ss
push
and
fbld
mov
out
mov
movsb
sub
mov
out
ds
cmc
pushf
ret
subl
jl
jp
xor
leave
push
imul
lret
scas
cmp
sti
mov
sbb
fwait
repnz
insl
sub
dec
adc
mov
mov
test
repnz
cmp
mov
icebp
and
orb
in
pop
jb
out
push
jbe
std
jbe
leave
pop
push
inc
jns
shl
loope
rcll
inc
mov
push
jbe
and
sbb
sub
mov
jge
mov
adc
pushl
ds
test
mov
add
addb
les
stos
loope
lcall
add
mov
sti
inc
lret
lret
inc
stos
xchg
or
imul
jle
mov
es
pop
pop
loope
int
xchg
cmp
call
mov
mov
jb
movsl
test
fstps
lret
mov
ret
iret
ss
mov
push
mov
das
push
mov
adc
push
dec
lcall
shlb
cmp
repnz
test
push
add
jo
aaa
mov
xlat
fisttpl
test
mov
xor
sub
insb
lret
xor
push
into
cwtl
aam
repz
repnz
lahf
fcomps
pusha
cmpsb
or
shlb
mov
int3
stc
popa
cmp
mov
rolb
adc
dec
aad
loope
pop
lcall
das
mull
jp
mov
ret
ljmp
testb
xchg
push
pop
adc
xchg
adc
stos
xorb
sbb
shlb
lock
xorb
jno
jge
adc
cmpsb
mov
lret
popa
add
test
xor
cli
xlat
add
mov
dec
or
dec
xlat
mov
leave
push
stos
jbe
insb
stos
aad
sbb
fbld
mov
mov
push
and
dec
mov
add
fistpl
lahf
fs
jo
pop
pop
mov
jecxz
outsl
imul
and
outsb
mov
jbe
pusha
icebp
pop
mov
xlat
repnz
lret
pop
xchg
jbe
sbb
cwtl
jl
pop
and
out
lret
fwait
out
push
xor
jo
adc
cs
arpl
xor
jne
mov
pop
ljmp
lret
lcall
mov
mov
jnp
cld
push
call
dec
xchg
push
dec
int
jle
lds
jle
lcall
add
or
orl
rolb
test
adc
mov
mov
clc
xor
mov
in
xchg
fcmovu
cmpsb
int
inc
dec
and
push
pop
add
cmc
int3
push
xchg
adc
rclb
jnp
insb
push
xlat
xor
inc
xchg
adc
in
pop
xchg
sbb
call
dec
stos
loope
js
xchg
or
test
pop
mov
ja
cmp
adc
lret
arpl
pop
push
es
sti
rcll
push
rcll
mov
movsb
adc
mov
out
lods
cli
shlb
jbe
jl
pop
ja
aam
sbb
xchg
test
scas
test
jno
mov
inc
sub
and
cmp
mov
adc
pop
jmp
mov
sub
fcmovu
jge
bound
dec
loop
push
pop
out
inc
sbb
inc
icebp
movsl
jl
mov
das
nop
out
loop
ljmp
push
aaa
adc
das
aas
cmp
daa
push
clc
insl
nop
push
les
xor
call
sub
fcmovne
repz
inc
cmp
es
into
ja
shrb
stc
xlat
sbb
add
js
inc
out
mov
xor
sbb
inc
out
pushf
aaa
ret
mov
in
push
test
dec
jno
pop
lods
push
inc
sub
aad
addr16
jmp
or
or
adc
mov
iret
ret
inc
push
pop
mov
sbb
xchg
add
mov
dec
sahf
mov
mov
nop
pop
fwait
ss
out
cmpsl
mov
push
insb
jecxz
mov
mov
mov
jmp
jp
cmpsb
fsubrl
push
ret
and
pop
cli
lcall
out
shlb
inc
mov
in
ss
adc
daa
jg
pusha
add
cli
lock
into
xorb
pop
aad
mov
repnz
jp
inc
clc
sar
add
and
mov
mov
mov
loopne
inc
cmc
jnp
xchg
push
rolb
sti
adc
fsubs
push
les
mov
je
rclb
lret
sub
punpcklwd
xor
xchg
mov
es
scas
push
out
test
lock
sub
loop
mov
in
fistps
sub
inc
imul
mov
jo
sbb
lret
out
gs
xor
sbb
shl
imul
pop
sub
xchg
std
and
movsb
pop
and
or
decl
lds
lds
fwait
bound
int3
adc
add
mov
ljmp
mov
jecxz
cltd
and
fucomp
mov
call
or
dec
lods
clc
hlt
or
sub
scas
lahf
jecxz
pop
inc
sbb
loopne
stos
or
pop
dec
iret
jbe
inc
inc
or
lahf
rcl
outsb
mov
aam
push
jp
cli
push
vmwrite
pop
cld
int
notb
out
stos
scas
aaa
push
push
cld
add
pop
cli
iret
lock
in
jno
into
ret
fsubr
loopne
adc
out
lods
adc
dec
sbb
enter
xchg
mov
pop
loope
sub
pop
notl
negb
cwtl
xor
hlt
aad
add
sarb
in
sub
fs
cld
cmp
test
out
out
add
xor
mov
cmc
mov
out
fs
mov
out
xchg
fnsave
or
sub
jno,pt
cmovg
shl
lcall
in
push
inc
xchg
or
fld
fldcw
loop
stos
jg
scas
pop
mov
lods
leave
push
shr
mov
cli
orl
rcrl
in
sub
xchg
divb
aam
aam
or
hlt
sbb
dec
push
nop
mov
xor
rcrl
adc
add
scas
cld
push
call
in
jno
fisubrs
lahf
inc
sub
xorb
int3
mov
jmp
jmp
shll
stos
xor
fdivrs
mov
pop
push
add
les
sbb
adc
in
hlt
stos
insb
sub
mov
push
sub
dec
xor
pop
insl
dec
test
add
pop
and
sbbb
mov
xor
sbb
sbb
mov
xchg
mov
pop
or
scas
mov
push
cmp
xor
jb
jl
xor
in
arpl
js
xchg
xlat
fsubs
into
mov
clc
test
sub
cmpsl
mov
sti
cmp
testb
rorb
daa
test
mov
jle
and
mov
inc
int3
insb
pop
push
inc
xchg
ret
sbb
pop
je
dec
test
push
push
xor
dec
repz
jne,pt
movsl
jge
inc
cli
scas
add
shrb
lahf
and
adc
xchg
xchg
jl
ss
into
push
inc
mov
popa
xlat
pop
movsl
inc
sbb
or
jp
xor
out
lock
les
inc
shl
jnp
pop
xor
inc
inc
dec
imul
mov
xchg
loop
test
movsb
adcb
sub
or
cmp
negb
mov
repz
call
xchg
loop
push
les
stos
loope
mov
push
test
fidivl
int3
xchg
int3
in
xor
cld
stos
in
jp
dec
aaa
mov
idivl
mov
adc
gs
sbb
dec
push
test
sysret
add
sahf
pop
inc
cmp
rorb
hlt
in
sbb
pop
sub
xchg
inc
nop
inc
cld
int3
lock
mov
cmp
mov
xchg
test
mov
pop
outsl
frstor
push
out
out
notl
lods
sub
stos
jg
cs
les
pushf
jmp
push
ret
sbb
cmp
add
push
outsb
stos
icebp
pop
sbb
pushf
loope
add
xlat
sbb
orb
sub
mov
inc
mov
dec
mov
loopne
cwtl
add
scas
inc
pop
aas
fistpl
in
lret
xchg
lcall
jmp
cmp
and
push
cmc
std
mov
xor
jnp
sbb
push
mulb
iret
sahf
push
inc
mov
dec
add
adc
pop
sti
jns
fbld
add
mov
mov
dec
xchg
fmull
cmpsb
lds
stc
jo
sbb
js
std
push
mov
out
xchg
mov
xchg
lret
dec
mov
xorb
inc
sarb
fmulp
mov
in
shl
shlb
xor
or
sbb
mov
jge
xor
sub
cmp
adc
lea
ja
add
dec
or
mov
std
add
testl
aam
cld
lock
push
push
jno
mov
jns
jo
test
stos
sbb
xlat
jne
test
dec
xchg
imul
inc
loopne
mov
cmpsl
mov
outsb
fidivs
arpl
movsl
addr16
in
loop
roll
mov
je
add
inc
add
mov
add
clc
cmpb
mov
testl
push
or
sahf
xor
or
pop
mov
and
jp
dec
ljmp
jnp
fistpll
call
and
push
out
cmp
mov
fdivl
dec
jp
pusha
fwait
jo
mov
lds
mov
push
sbb
dec
cli
fisubrs
and
stos
push
shrl
mov
cmp
dec
mov
xchg
push
adc
xchg
adc
pushf
xor
fimuls
in
pop
xor
pop
incl
mov
icebp
mov
test
rol
mov
popf
sbb
xchg
mov
outsl
mov
and
subb
jmp
out
ja
xchg
orb
scas
cli
jp
fidivs
xor
fstpl
repz
enter
ficomps
or
cmp
add
jecxz
mov
loop
mov
mov
or
dec
xchg
fstps
inc
push
mov
adc
lods
or
stc
cli
sbb
xchg
repnz
iret
es
sub
incl
inc
pop
dec
fisubl
rorl
xor
mov
ffree
push
jmp
sbb
aas
xor
aas
add
ficompl
push
xchg
mov
pop
in
sub
into
jo
push
xchg
bound
sub
lods
sbb
xchg
jbe
aas
cmp
int3
outsb
mov
or
lock
gs
xor
push
test
mov
imul
or
jbe
daa
aaa
arpl
fistpll
jl
out
or
addr16
xor
pusha
orb
call
push
in
cwtl
loopne
popa
fistpll
inc
int3
sarl
sbb
bsr
and
xchg
push
lods
mov
inc
sahf
popf
adc
sahf
icebp
adc
out
lret
mov
xchg
adc
insl
xor
dec
fidivrs
pop
cmpsl
pop
add
xor
and
out
xor
es
sub
or
mov
in
jnp
mov
cmp
pop
sub
ret
pop
jl
adc
shll
mov
or
insl
lahf
or
repnz
cld
jne
dec
mov
imul
dec
adc
cs
xchg
imul
imul
lret
mov
adc
loopne
mov
popf
lea
inc
dec
xchg
int3
adcb
popf
xchg
mov
jl
leave
jecxz
cmp
lret
cmc
jb
push
lods
pop
mov
sbb
or
mov
cli
mov
sub
inc
fcmovbe
inc
into
ret
push
cmp
jbe
aas
sub
mov
sbb
mov
dec
loop
jle
mov
cmpsl
jae
or
aad
ret
push
data16
outsl
idivb
std
pop
imul
int3
aas
pop
mov
ficoms
lret
mov
and
cmpsb
das
sbbb
jo
sahf
testl
xchg
pop
in
adc
adc
push
cli
test
fisttpl
add
sbb
ficomps
test
xor
sub
cmp
mov
ss
addr16
in
ret
push
insl
mov
adc
inc
add
mov
sub
aad
mov
scas
add
popa
fsubrs
mov
pop
scas
cmp
mov
fstl
sbb
pop
rolb
cmp
cld
arpl
and
sti
scas
sbb
arpl
sbb
sbb
stos
cmp
xchg
cli
aas
std
loope
or
aaa
and
sbb
pop
imul
icebp
jmp
cmp
xor
cmpsl
pop
test
pop
sub
mov
call
fsubs
mov
lret
push
pusha
ficomps
mov
push
sbb
rep
lods
sbb
notl
aad
inc
pop
mov
cmp
scas
in
iret
push
outsl
xchg
hlt
and
and
fistps
jns
es
mov
push
push
arpl
mov
or
mov
sub
pushf
lahf
pop
cmpsl
mov
xchg
cmp
push
sarb
imul
push
add
or
sub
sahf
jge
fisubrs
push
scas
inc
out
push
fistl
mov
insb
inc
xchg
lret
xor
cs
mov
icebp
push
sub
xlat
sbb
cmc
insl
push
xor
ljmp
cmp
rcll
fdivl
aaa
mov
mov
lret
movl
cmc
cmp
dec
out
pushw
sahf
popa
arpl
push
jbe
add
cli
ds
loopne
xchg
xorl
repz
aam
push
or
xor
sub
cmpsb
mov
push
movsb
xchg
pop
fnsave
or
or
add
xchg
pop
cmp
push
js,pn
loopne
icebp
std
or
and
and
or
or
outsl
push
ret
fsubp
jns
popl
xor
add
shll
bnd
xchg
scas
dec
out
xchg
ret
shll
int
push
mov
lret
cltd
mov
xchg
pop
xchg
and
scas
or
ljmp
mov
pop
enter
das
jns
cmp
cmpsb
fidivl
aaa
and
std
aaa
leave
fmull
cmovb
je
int
addr16
mov
mov
adcl
and
cmpsl
fmul
pop
adc
adc
xlat
ja
mov
call
in
xchg
cmpsl
and
ret
ja
in
in
js
data16
test
fldl2t
or
sahf
xor
orb
sub
mov
test
mov
andl
les
inc
sbb
cmp
mov
ror
lea
iret
adc
cltd
fisttpll
and
sti
je
stc
sbbb
add
xchg
dec
jg
ja
ret
lods
add
cmc
xchg
movsb
mov
rclb
lret
sub
incb
pushf
jbe
mov
adc
rclb
into
mov
icebp
into
pop
lcall
push
add
cmp
cmp
and
or
or
sar
sbb
adc
or
adc
fdivr
xor
xchg
rcrl
sub
mov
call
push
push
cmp
out
and
sub
movsl
outsb
mov
ljmp
in
mov
imul
ret
enter
pop
fistps
pop
lret
add
dec
ds
cmp
dec
rolb
add
sub
sub
xchg
add
shl
sbb
adc
js
cli
sbb
nop
rolb
cli
hlt
xor
cmpsl
pop
jns
mov
sub
lcall
sti
cli
ja
pop
outsl
jmp
xorl
sub
cmp
or
cmpsl
imul
pop
shll
fcmovbe
mov
pop
push
fildll
jo
xchg
jo
movsl
mov
add
das
push
lods
push
jecxz
mov
scas
xor
add
push
loope
cwtl
cmp
insl
or
jecxz
mov
mov
add
std
sar
pop
pop
mov
enter
ljmp
fmull
xchg
xor
xchg
or
mov
sbb
outsb
add
insb
sub
roll
or
imul
pop
sbb
adc
stos
fsub
in
ficompl
sbb
jp
aas
lcall
sub
mov
cmpsl
pushf
pop
xchg
popa
and
sbb
test
es
xor
imul
push
mov
mov
mov
sub
pop
shlb
ret
mov
ljmp
mov
test
iret
rcr
jmp
dec
shrb
jae
pop
shr
std
cmc
pop
or
test
movsb
ljmp
dec
fstps
xchg
xlat
or
add
add
cmc
xchg
cwtl
adc
xor
push
sbb
add
js
mov
sub
push
nop
stos
dec
add
push
cwtl
fcomps
in
cmp
jecxz
call
mov
adc
push
inc
push
dec
js
sub
push
cs
ljmp
add
push
std
adc
repz
aam
adc
xor
faddl
ret
mov
mov
or
popfw
and
jnp
insl
gs
sbb
je
mov
ret
loop
outsb
jo
aam
jmp
ret
sarl
fldenv
adc
int
pop
fldt
inc
sti
lcall
sbb
outsb
adcl
xchg
sub
push
mov
in
xchg
fmuls
popl
bound
mov
xor
stos
jecxz
push
or
inc
pop
out
xchg
icebp
testb
mov
std
stc
in
add
out
mov
cltd
or
or
push
mov
stos
sub
and
lods
jge
xchg
and
mov
cs
andb
std
cmp
aaa
adc
mov
xchg
test
and
or
pop
sub
sub
ja
xlat
xchg
iret
pop
jg
cmc
mov
sbb
push
mov
mov
or
js
cmc
insl
fsubp
in
out
repnz
inc
xor
jmp
pusha
xor
movsb
push
cmpsl
cltd
sub
loope
lahf
scas
jg
sub
xor
outsl
jge
and
out
jns
xchg
inc
dec
xor
call
cmp
mov
mov
or
adc
ljmp
rcrb
xor
add
and
loopne
dec
mov
fists
mov
adc
dec
in
add
mov
gs
insl
out
incb
lock
in
nop
mov
cli
lret
jb
daa
sarl
xor
mov
inc
pop
mov
pushl
dec
int
ljmp
test
push
and
std
repz
outsb
loopne
popa
xlat
in
mov
dec
sbb
in
mov
js
decb
ss
lahf
clc
mov
xor
cmp
or
addr16
add
movsl
add
sub
push
push
mov
jae
mov
gs
out
add
andl
adc
mov
xbegin
popa
lods
xor
add
dec
dec
sbb
out
xchg
pop
xor
xor
push
shl
push
sub
into
push
xchg
jmp
add
sub
mull
clc
ret
fcomps
push
ja
call
in
js
jp
cs
lcall
cli
cmpsb
pop
pop
hlt
enter
repnz
iret
iret
or
jo
test
fwait
mov
or
add
xchg
mov
outsb
aam
pop
xor
push
lret
mov
jbe
test
fcoms
jne
sub
sti
mov
mov
push
mov
cmp
nop
into
lahf
ret
imul
roll
pop
pop
xor
add
push
pop
or
pop
xchg
aam
xchg
pop
insb
cmpsb
adc
jecxz
add
test
cltd
or
std
jge
in
push
cmp
and
pushf
push
sbb
dec
add
cli
add
and
push
dec
xchg
mov
push
cwtl
jo
outsb
loope
js
inc
sub
in
or
cwtl
outsb
cmpsl
inc
andl
push
ret
clc
jae
xor
add
test
jb
popf
es
or
inc
pop
setl
jge
enter
xor
stc
shlb
lods
sub
sub
outsl
cli
lds
aad
sbb
rol
pop
pop
mov
mov
sub
xchg
mov
lret
push
popl
pushf
and
mov
fsubrl
daa
mov
scas
and
cmp
mov
add
mov
clc
repnz
or
stc
rorl
ret
movsb
inc
mov
in
cltd
push
push
mov
add
popf
adc
sbb
sub
sub
add
cltd
mov
std
sub
mov
insl
xor
stc
shlb
xchg
frstor
dec
jns
js
fwait
xchg
adc
lods
mov
pop
fnstcw
std
and
lcall
cmp
add
clc
dec
les
sub
push
fsubrl
lock
or
rclb
es
dec
jne
mov
ljmp
lcall
fsts
aaa
add
dec
stc
repz
add
push
out
mov
cld
push
faddl
cmc
xchg
lret
push
adc
sub
lahf
repnz
push
jns
mov
aad
test
add
mov
dec
push
pop
rcrl
popf
inc
jecxz
lahf
out
in
aas
stc
lods
cmpsl
por
sbb
jmp
cmpsb
data16
in
cmp
sub
fucom
mov
mov
sahf
xlat
adc
xchg
jnp
and
testl
pusha
dec
call
mov
jnp
adc
cmpsb
push
daa
mov
rorl
movsb
mov
mov
aas
pop
ret
ljmp
mov
cmp
sub
pop
stc
sub
xchg
push
pop
push
mov
mov
ljmp
and
push
dec
pop
sbb
pop
jge
mov
aad
and
js
out
movsl
pop
ret
mov
cld
test
lock
dec
loope
movsb
push
pushf
inc
orb
pop
mov
dec
fldt
jno
mov
push
js
adc
xchg
and
mov
push
mov
adc
movsb
push
ss
cli
push
movsb
rcll
cmpsl
aad
inc
jle
dec
imul
sbb
cmp
ret
cltd
cmp
out
and
ds
cmp
test
jb
mov
adc
cmc
mov
fadd
pusha
mov
cltd
repz
xchg
stc
xor
cmc
dec
aam
sub
adc
divl
push
push
icebp
test
jge
out
pop
add
ds
sub
sbb
jmp
sti
pop
movsb
jae
and
movsb
mov
dec
xlat
inc
stc
in
orb
jp
mov
mov
mov
mov
icebp
popa
fldcw
push
jno
testb
or
outsb
push
xor
fdivr
jno
ja
push
cmp
jo
in
pusha
xchg
mov
inc
dec
inc
xor
lcall
mov
fdivrl
jle
lahf
leave
clc
cmpsb
lods
cmpsl
pusha
add
nop
mov
or
test
pop
stos
es
test
mov
mov
popa
leave
xchg
in
lcall
cwtl
sub
jne
clc
addb
iret
jno
faddl
loope
addr16
jne
test
mov
push
push
leave
or
fsubrs
jmp
cmc
enter
pusha
dec
notl
arpl
xor
lcall
mov
call
enter
test
fwait
rcrb
in
ljmp
push
sahf
xchg
mov
outsb
inc
sbb
test
popa
pop
pop
pop
adc
pop
enter
xchg
ss
sub
add
sahf
jp
pop
out
mov
mov
pop
sbbb
push
pop
jb
or
stos
adc
adc
adc
inc
sbb
test
rolb
scas
push
scas
lea
lahf
popf
mov
mov
int
cmp
mov
xchg
cmpsl
sarb
xchg
jo
jmp
leave
fwait
loop
dec
std
jmp
in
push
stos
cmp
into
lret
into
inc
jg
jb
call
pop
fldl
or
add
test
in
je
addr16
popf
repz
xchg
jle
sub
xchg
push
jbe
jmp
outsl
in
xchg
ja
cltd
cltd
or
addr16
pop
mov
jbe
movsb
mov
mov
jle
push
pop
sbb
add
pop
mov
fiaddl
mov
enter
jb
jns
decl
pop
jp
mov
adc
rorb
gs
push
nop
mov
and
test
cs
lret
js
roll
and
jns
cmpsl
cmp
loopne
les
stos
adc
push
test
sub
inc
inc
mov
in
mov
sbb
inc
iret
test
sub
push
test
or
cmp
cmp
sahf
nop
pop
pop
xchg
push
jl
std
pop
mov
jne
cld
and
mov
sub
out
dec
dec
mov
fwait
mov
in
loope
inc
or
push
pop
and
nop
ja
js
mov
cmp
and
mov
dec
lret
addr16
xchg
cmpsl
lcall
pop
addr16
fstpt
xchg
lods
inc
movsb
stos
push
cmp
push
inc
lock
mov
decb
test
push
adc
imul
cmpsl
sbb
hlt
das
jbe
shrb
mov
scas
ljmp
into
push
movsl
xor
jmp
dec
dec
adc
pop
ja
mov
frstor
cmp
outsb
adc
push
rorb
mov
mov
sbb
cli
xor
lea
sub
mov
cltd
mov
btc
cmp
rep
clc
cwtl
pop
ret
mov
scas
inc
and
scas
mov
lret
lock
add
add
aam
lret
test
arpl
bnd
push
push
insb
sbb
adc
ljmp
test
enter
inc
les
mov
add
iret
cld
jmp
xor
dec
cmp
lock
sub
mov
call
outsl
or
test
dec
mov
ficompl
cld
xor
mov
or
ss
inc
movsb
mov
or
mov
inc
test
mov
adc
adc
je
es
mov
pop
icebp
or
push
cmp
cmpsb
lret
push
jl
out
adc
or
rolb
or
or
and
sbb
fistps
xchg
jge
or
sub
dec
add
int
das
fninit
xchg
or
sbb
or
xchg
sbb
insb
jle
popf
sub
hlt
mov
data16
mov
jl
dec
mov
popa
fnstsw
clc
dec
adc
push
jnp
push
jmp
xchg
or
and
jno
sub
inc
cwtl
xchg
inc
inc
in
xchg
lahf
lahf
inc
addr16
stos
out
icebp
cmp
loopne
inc
xchg
mov
sub
out
mov
int
iret
fcompl
mov
xorb
ja
and
cmp
in
cwtl
je
pop
mov
clc
mov
cmp
sbb
popa
sbb
mov
fstpt
jge
ds
addr16
fwait
xchg
insl
es
mov
test
mov
cmpsb
fdiv
dec
pushf
cltd
dec
pusha
call
dec
dec
pop
inc
cmc
push
lods
inc
pop
mov
fs
std
verr
cmpsb
leave
mov
push
mov
xor
decb
adc
out
clc
jp
xor
repz
or
xchg
nop
xchg
push
mov
push
f2xm1
cltd
pop
pusha
scas
arpl
pop
mov
lea
ss
pop
mov
xchg
lahf
ds
dec
jo
pushf
pop
cs
outsb
xchg
cli
jecxz
mov
xor
mov
adc
dec
fistps
lds
cld
push
cs
hlt
subl
sarb
inc
lret
add
push
jmp
call
lret
imul
arpl
shll
and
mov
xor
push
out
inc
adc
jg
sbb
stc
push
jecxz
jae
cmpl
fdivrs
and
mov
cmpsb
stc
pop
out
lea
daa
mov
pop
hlt
ud1
xor
sub
pop
adc
insb
mov
jns
repz
and
ja
cmp
movsb
outsb
imul
stos
push
fwait
sahf
mull
leave
mull
dec
lea
lods
cwtl
fnstsw
jecxz
mov
es
and
int3
popl
ss
aas
mov
and
fildll
xchg
insb
jne
xor
jne
inc
cmp
out
unpckhps
jecxz
ds
repnz
cmp
arpl
addr16
sub
pop
fdivs
push
pop
shr
aam
sti
mov
addb
mov
push
stos
xchg
dec
xchg
rcl
mov
push
mov
out
inc
lock
jae
lahf
jge
loop
test
mov
fistpl
clc
and
movsb
xor
xor
push
mov
pop
xchg
and
push
jo
movsb
lret
int
lret
mov
push
popf
movsb
and
push
outsb
add
cwtl
iret
xchg
into
bndstx
in
hlt
jbe
pop
outsl
mov
out
cmp
shl
xor
jns
xchg
subl
pop
and
xchg
ja
pop
sub
aad
in
idivb
mov
into
dec
pop
sbb
hlt
push
adc
push
ja
or
fs
lret
outsl
cltd
loop
jae
aad
inc
mov
mov
push
mov
mov
or
movsb
adc
sarl
cmp
xchg
mov
jo
pop
bound
es
je
int
jmp
cmp
cmp
xor
leave
movl
and
out
into
in
xor
jnp
clc
clc
pop
and
fs
mov
loope
add
lock
mov
out
cmpsl
orb
or
stos
outsb
out
aad
and
int3
push
fmul
xchg
js
pop
sti
and
cmp
fdivp
pop
popl
inc
clc
clc
lcall
adc
ds
dec
mov
xor
test
push
xchg
adc
mov
cmp
test
sub
idiv
pusha
xor
int
cmp
push
outsb
lahf
xor
decl
push
je
mov
repnz
mov
pop
aaa
sbb
pop
dec
cmp
in
daa
fcoml
popa
jno
ja
and
dec
sbb
cwtl
subb
and
or
lods
mov
jp
insb
aad
add
pop
fbld
push
sub
cmp
cli
dec
or
add
push
or
std
lahf
cs
ljmp
jo
lcall
adc
dec
scas
cwtl
out
es
cmpsb
pop
inc
sahf
call
nop
insb
adc
mov
jg
adc
lods
idivb
mov
cmp
arpl
adc
cmp
push
lea
sub
in
push
or
les
mov
sub
pop
dec
lret
pop
stos
xchg
xor
stos
add
mov
jo
xchg
loop
sbb
not
mov
mov
aam
and
or
add
pop
mov
push
pushf
cmc
inc
iret
das
fadd
jge
decl
mov
stos
aas
fisubl
xchg
out
adc
or
jae
lcall
and
inc
and
leave
pop
lods
sub
dec
aas
dec
bound
into
popf
jne
jae
dec
inc
and
and
outsb
fwait
push
add
into
lcall
inc
dec
xlat
data16
jp
in
pop
dec
orl
je
movsb
adc
pop
pop
hlt
mov
xor
faddp
jmp
jle
icebp
push
js
cmp
iret
and
and
xchg
stos
jmp
into
and
add
adc
lahf
adc
adc
fstpl
mov
xorl
push
lcall
adc
cmp
repnz
dec
sub
mov
jno
sbbl
cs
int
test
cwtl
mov
and
loope
clc
jns
adc
and
aas
sub
scas
xchg
push
or
testl
nop
shll
cli
roll
ret
push
rcr
enter
loope
sub
cmp
popaw
popf
push
push
jnp
pop
imul
mov
mov
fs
dec
mov
pop
sarl
lock
cs
push
xlat
addl
and
sti
add
cs
and
cwtl
mov
or
rol
cmp
pop
xchg
cwtl
mov
mov
mov
sahf
jo
out
rorb
xchg
mov
jns
or
stos
lods
push
into
into
jp
movsl
lods
ds
sarb
jnp
cmpb
dec
dec
jbe
and
aam
adc
pop
jo,pt
sub
lea
out
idivl
jg
push
sbb
push
jge
mov
pop
jae
xor
movsb
ret
sahf
xchg
scas
and
les
or
pop
push
inc
push
cmp
xor
xchg
shlb
icebp
mov
sub
cltd
dec
mov
addl
and
and
insl
arpl
icebp
dec
shrl
cwtl
mov
lock
dec
popa
add
xchg
sahf
lcall
xlat
cld
xchg
dec
xchg
jle
shrb
cmp
sub
inc
dec
jl
jno
icebp
inc
data16
pop
adc
push
jb
xchg
dec
inc
fs
dec
shl
bswap
mov
pop
lods
or
loop
push
sub
xchg
jmp
insl
lcall
rorb
cmp
dec
jne
mov
jl
jg
cmc
jnp
push
xor
fwait
std
xchg
xor
or
and
pop
and
inc
dec
xchg
mov
jmp
dec
lea
xor
enter
shl
mov
inc
mov
dec
lods
mov
inc
jne
pop
jl
mov
aad
testb
jae
repz
lock
sbb
test
loope
adc
sub
in
dec
loop
mov
xor
mov
xchg
test
xor
pop
cwtl
xor
ss
fsubrl
fstpt
enter
sbb
aad
jmp
cmp
scas
and
out
push
call
hlt
add
jmp
mov
and
mov
cmp
jns
mov
daa
jae
jbe
nop
insb
pop
leave
dec
aaa
fidivrs
mov
ds
inc
sbb
pop
mov
mov
scas
jecxz
sub
lods
cli
dec
pop
inc
pop
js
xchg
jo
stos
sub
mov
mov
mov
sub
lret
mov
or
daa
jb
adc
dec
lret
popf
push
push
cltd
sub
pushf
cmp
xchg
push
add
push
sbb
clc
dec
js
push
inc
jmp
cwtl
sahf
sub
xchg
filds
jl
enter
std
pop
rcll
dec
inc
lods
dec
add
dec
add
mov
addr16
stc
test
mov
push
pop
mov
xchg
les
push
mov
mov
and
stos
and
xchg
and
lret
pop
mov
cmp
loopne
dec
cmp
pop
add
sub
lods
rcll
or
pop
in
es
stc
jno
cmp
jno
jge
jecxz
lahf
xlat
cmp
imul
xchg
scas
out
jmp
icebp
lahf
xchg
mov
push
stc
ds
cmp
lods
outsl
mov
insb
mov
rcrl
pop
pop
out
or
jecxz
mov
push
pop
jb
test
inc
andl
push
inc
cwtl
sahf
xchg
push
xchg
int
das
das
sub
dec
loope
aad
inc
mov
sbb
xlat
jecxz
ret
or
xor
xor
jmp
cmp
cmp
sub
sub
loopne
push
push
pusha
cs
jmp
xor
fiaddl
notb
inc
mov
add
add
sub
jle
add
ret
mov
shlb
bound
imul
dec
add
jp
adc
add
xlat
adc
adc
in
and
sbb
jle
adc
jo
sub
add
push
xor
cmp
fnsave
cld
push
enter
mov
adc
push
test
mov
mov
xchg
enter
and
ds
lock
mov
insl
in
out
sbb
jb
inc
xor
push
xchg
jno
fiaddl
fldpi
and
push
in
movsb
hlt
or
sub
dec
mov
cwtl
cmp
push
push
or
or
jno
shl
jno
hlt
or
rcr
pop
sti
shl
mov
pusha
add
shll
mov
sub
mov
scas
shlb
imul
push
add
xor
dec
sub
add
loope
popf
outsb
xchg
dec
rclb
divb
loop
mov
sbb
dec
xchg
adc
xchg
insl
adcl
andl
add
mov
lret
es
xchg
testb
lods
xor
shrb
imul
stc
cmp
imul
les
sub
xchg
mov
and
cmp
lds
out
inc
std
add
arpl
push
out
xchg
xlat
xchg
pop
jp
pop
sbb
outsb
sub
cmp
add
enter
jmp
cli
adc
mov
adc
push
adc
and
pop
add
dec
div
jo
xlat
arpl
sub
cld
rcl
aas
in
orb
orl
xor
mov
xor
clc
sub
imul
xchg
int
cs
xchg
lds
adc
mov
hlt
mov
lea
add
adc
rep
sar
and
cs
push
and
inc
cmp
in
icebp
add
mov
jecxz
xor
les
xchg
push
ljmp
out
scas
jbe
mov
ljmp
mov
out
xor
test
xor
lahf
jmp
ficoms
jle
pushf
xor
pop
pop
insb
outsl
fs
ds
pop
jp
arpl
jl
and
push
xchg
fists
jle
stos
lds
push
dec
imul
cli
je
jb
sub
jns
push
into
mov
enter
and
imul
repnz
push
push
subl
cmp
clc
int3
vpunpcklbw
xor
addr16
mov
add
add
fucomi
push
ret
pop
xor
inc
mov
or
sub
lea
in
andl
test
in
push
dec
stos
iret
rcrl
aas
nop
in
sub
icebp
fstl
and
adc
aam
pop
out
fwait
lods
cmp
stos
orb
cs
dec
aad
fldt
pop
push
lret
push
jbe
pop
push
jp
inc
jb
and
cltd
jb
or
addl
xor
femms
push
bound
cmp
cs
jecxz
movsb
pop
sub
ret
nop
jo
lahf
popa
std
imul
mov
into
push
dec
cmpsb
jno
mov
rcr
inc
cmc
pop
xchg
inc
in
mov
cwtl
or
cmp
xor
sti
ss
sbb
inc
out
inc
into
fdivrp
add
mov
sub
xchg
das
bound
mov
xchg
cmp
mov
lea
jb
sbb
arpl
push
sub
pop
pushf
js
rcr
sbb
mov
mov
push
mov
outsb
pop
or
test
and
or
shll
push
jp
leave
loop
out
mov
ljmp
dec
mov
mov
mov
lret
cmp
jb
push
jge
ficoms
cmp
mov
dec
push
stc
outsl
push
es
push
cmp
sbb
sti
add
stos
out
idiv
pop
cmpsl
ljmp
imul
ss
fstl
push
xchg
pop
daa
cli
imul
inc
mov
cmp
dec
and
in
xor
add
push
sbb
int
loop
pop
je
xor
aas
jp
inc
dec
icebp
hlt
mov
pop
sub
sub
xor
cwtl
jecxz
cmp
movsb
dec
test
lods
or
jbe
jmp
push
jecxz
dec
lahf
loop
and
dec
pop
cli
xor
push
dec
cmp
sub
xor
sbb
jb
cli
add
lcall
add
jnp
xor
mov
dec
out
mulb
adc
popf
inc
jno
jecxz
cmpsb
dec
xchg
iret
mov
bnd
adc
mov
cld
pop
test
scas
add
push
jne
mov
push
push
lods
arpl
xchg
dec
nop
repz
sub
outsl
iret
cmpsb
leave
xchg
in
mov
or
test
push
and
fisubs
xor
cs
and
enter
push
outsb
sub
ja
mov
cmpsl
jb
or
movsb
pop
dec
mov
inc
pop
mov
sbb
jne
in
stos
and
nop
popa
fcoms
in
and
stos
repnz
mov
pop
scas
inc
xor
mov
sub
cwtl
movhps
push
push
and
xlat
jne
repz
xchg
cmp
shr
sbb
mov
jae
ret
aas
or
dec
sbb
ret
push
shlb
movsl
xor
mov
xlat
fildll
aas
xor
mov
insb
int3
in
sub
decb
mov
dec
fistps
and
inc
add
not
jbe
hlt
or
xor
push
test
and
sub
or
shll
test
into
pop
rclb
add
mov
adc
cmpsl
jl
jmp
mov
add
jge
enter
mov
sbb
andb
cli
xor
or
sarl
mov
ficoms
sti
cli
mov
faddl
dec
nop
and
shl
ret
imul
cli
repz
pop
mov
aad
in
ja
lods
lods
jne
push
adc
sub
scas
lea
icebp
fsub
dec
add
mov
je
adc
mov
pushf
and
or
es
faddl
push
inc
sarb
cmp
sub
push
xor
pusha
mov
inc
jl
dec
mov
sbb
push
adc
push
jecxz
das
add
xchg
andb
pop
ljmp
dec
outsl
adc
mov
mov
dec
dec
lods
add
inc
pop
pop
add
jmp
subl
mov
sbb
dec
inc
jnp
testb
dec
sbb
ds
sti
cmp
push
pop
sub
sub
clc
loopne
or
mov
add
mov
and
outsb
sbb
sbb
and
adc
fwait
mov
into
fdivrp
xchg
add
imul
xchg
xchg
jmp
inc
movsb
xchg
nop
push
push
xor
scas
int
mov
mov
stc
xchg
mov
xchg
push
mov
ret
mov
sbbl
movsb
jne
adc
rcrb
scas
mov
bsf
adc
cmp
lret
mov
mov
pop
dec
push
lods
dec
iret
lock
aam
ja
inc
shl
mov
adc
mov
jne
pop
push
stos
dec
jb
mov
stc
std
loope
clc
jl
mov
mov
fistpl
testl
and
stc
pop
andps
jle
sbb
mov
insb
int3
lods
jl
xor
scas
rcrl
jecxz
xor
das
scas
out
sbb
and
pop
in
rol
push
outsb
fcomp
mov
clc
xchg
or
push
jge
mov
jge
xor
dec
and
dec
mov
ret
test
mov
pusha
rcrl
shll
test
cmp
lods
pop
mov
imul
sbb
adc
pop
scas
aas
sbb
jecxz
dec
pop
and
stos
cli
imul
pop
add
pushf
call
je
add
cmp
adcl
imul
lea
lret
cmpb
ret
into
out
xor
shrb
aaa
cmp
xchg
gs
jae
ds
dec
mov
int
mov
push
cld
add
dec
pop
pop
cmp
inc
mov
or
jl
push
jg
mov
and
or
aaa
test
adc
in
sbb
mov
imul
or
and
xlat
lahf
out
outsb
sub
lock
in
cmc
mov
mov
mov
sahf
fsubl
repz
in
pop
mov
ja
mov
ja
xor
and
gs
lahf
testb
sbb
mov
and
cmc
mov
sbb
jmp
add
test
add
dec
mov
push
cld
outsl
dec
pop
fdivs
inc
mov
ja
push
outsb
loope
inc
mov
and
sub
cmpsl
pusha
sbb
jb
lods
ror
inc
out
cmpsl
arpl
sbb
pusha
xor
jb
mov
jg
xchg
xor
pop
xchg
in
data16
jecxz
jo
push
stos
stos
inc
mov
das
sarb
mov
scas
sub
sub
arpl
lcall
movsb
xchg
pop
jecxz
jno
inc
adc
jae
add
in
sub
aaa
pop
loop
add
or
inc
repz
push
adc
fwait
rcll
mov
lahf
mov
ret
fwait
sbb
xchg
stos
aaa
jecxz
cmp
cmp
mov
xchg
addr16
inc
fsubs
mov
cmpl
addb
sub
addr16
iret
xchg
adc
mov
push
leave
mov
adc
inc
jo
sahf
mov
lret
add
insl
lahf
mov
xchg
mov
imul
mov
lods
jo
mov
roll
push
cmc
xor
lcall
scas
fwait
pusha
mov
push
std
mov
fldcw
gs
lahf
cmp
jae
ret
shlb
ja
lahf
movsb
add
mov
mov
icebp
xchg
das
cli
repz
mov
js
pop
mov
jge
xchg
jo
sbb
dec
aad
jnp
imul
leave
adc
bound
scas
daa
rclb
mov
dec
js
xor
xor
lock
jp
push
fldl
push
push
subb
or
adc
and
mov
ret
inc
pushf
push
test
fwait
es
fnstcw
std
cld
das
in
aad
sub
pop
and
xchg
ficoml
stos
scas
fidivl
idiv
pop
data16
ret
mov
adc
mov
add
sbb
xor
daa
ficoms
test
push
mov
dec
mov
push
jp
xorl
push
aam
mov
sbb
test
push
iret
mov
push
fwait
jp
pop
mov
add
sub
jle
dec
pop
rcll
fldcw
jb
das
xchg
jp
push
hlt
push
dec
dec
mul
push
xor
es
push
movsl
inc
pop
adc
cmp
fwait
into
dec
imul
inc
mov
fildl
mov
mov
fnstcw
push
in
jne
mov
ror
sub
ds
adc
mov
push
mov
mov
sbb
lock
xchg
mov
stos
call
fistl
andb
sbb
arpl
mov
orb
push
mov
loope
push
add
dec
dec
mov
pop
pop
cmp
adc
ss
push
outsl
push
push
hlt
sti
pop
stos
idivl
xlat
ljmp
ljmp
jbe
sbbl
adc
cmc
bound
jnp
ljmp
call
jns
rolb
cmp
or
nop
push
xlat
pop
cmc
js
mov
adc
mov
xchg
and
pop
push
out
pop
mov
jle
xchg
sbb
add
pop
sti
inc
dec
in
aam
push
jnp
mov
xchg
sbb
inc
dec
and
xchg
daa
nop
push
push
jle
add
push
test
mov
iret
lock
lds
xor
or
sbb
insl
jp
outsb
add
xor
xor
loopne
push
jne
jp
cmp
or
and
cli
mov
xchg
shrb
pop
clc
aas
cmp
int3
mov
shlb
scas
cmc
mov
lret
fldenv
ror
repz
scas
mov
out
lea
push
mov
jnp
out
cmp
lea
lret
leave
scas
sarb
xor
stos
out
popa
push
cmpsb
bound
cmc
in
cmpsl
push
pop
add
mov
sbb
adc
add
in
fistpl
mov
xchg
jle
into
xchg
add
add
fwait
gs
xor
outsl
out
leave
lods
lods
xor
stc
jmp
scas
jl
in
enter
cmc
adc
fisttpl
in
jle
mov
stos
xchg
int3
push
sbb
sub
mov
mov
lds
mov
mov
jmp
mov
aaa
mov
jg
dec
xor
lcall
dec
and
mov
fldenv
cld
or
cmp
cmp
fldt
and
fsts
mov
mov
fidivrl
fs
and
xchg
add
sbb
mov
xchg
and
push
xchg
push
lcall
mov
inc
jp
out
sub
pushf
arpl
push
push
aad
cwtl
shrb
push
arpl
xchg
pop
xor
or
sbb
pop
popw
popf
lret
sub
daa
jno
or
cmp
rclb
orb
out
test
or
lock
lahf
mov
mov
gs
xor
jg
shl
cld
sub
stos
dec
mov
fisttpl
sbb
shld
mov
cmp
int
adc
jge
stc
dec
jl
mov
mov
mov
ljmp
or
pop
call
push
xor
dec
push
insb
and
leave
mov
adc
aad
pusha
fistl
fwait
jnp
inc
fwait
and
in
mov
mov
clc
sti
pop
ret
sub
or
stc
pusha
movsb
add
mov
adc
or
add
jg
mov
loop
mov
icebp
movsb
mov
daa
pop
aaa
jg
add
xlat
pusha
gs
stos
mov
sti
or
mov
in
fmull
daa
pop
push
mov
cld
and
mov
and
adc
stos
push
stos
xchg
insb
or
into
rol
sub
dec
mov
mov
sbb
lret
xchg
outsb
cmp
mov
decb
xor
movsl
push
mov
pop
xchg
mov
into
sub
xchg
adc
push
rcrb
and
mov
fimull
jns
and
in
mov
inc
push
xchg
iret
jmp
pop
loop
mov
shl
int
mov
sarb
xor
jb
in
fadd
sbb
imul
rcll
pop
dec
xchg
sbbb
mov
cld
xchg
addb
aaa
adc
sbb
fs
lock
loopne
and
pop
and
cmp
call
cltd
pop
mov
jp
std
lock
mov
mov
or
pop
dec
arpl
push
mov
sub
sbb
test
pusha
fidivrs
cmpsb
xchg
sbb
or
loop
pop
movsl
arpl
addr16
insb
sarb
xchg
add
xchg
nop
sahf
jb
xor
xchg
inc
in
pop
add
jl
mov
movsb
outsb
je
jae
and
adcl
mov
mov
je
add
sub
sub
das
push
arpl
in
push
sbb
mov
scas
sub
mov
sbb
xlat
jae
sub
or
movsl
int3
pop
add
push
add
push
test
mov
mov
inc
dec
mov
out
test
xor
adc
dec
dec
test
mov
jae
int
inc
addb
xor
or
js
lods
dec
and
push
xor
inc
gs
pop
mov
jo
imull
sub
ljmp
push
push
je
ret
test
jmp
jo,pt
add
fdivs
out
pop
sub
and
add
or
mov
pop
mov
sti
xor
movsl
int3
xor
adc
sub
test
pushf
icebp
lds
jle
jb
lahf
and
sbb
in
sub
std
movsb
popf
jo
dec
fcmovnbe
add
test
jp
dec
cmp
outsb
dec
add
add
cmp
decb
int3
cmp
data16
mov
jecxz
xchg
xor
add
lds
gs
cwtl
push
push
or
xor
sarl
lcall
inc
popf
lret
mov
mov
je
mov
mov
arpl
dec
and
and
add
or
push
jmp
sub
mov
and
jbe
dec
cltd
mov
dec
jge
aam
push
popf
je
aas
mov
pop
push
push
and
sahf
mov
test
pop
in
out
adc
addr16
inc
and
loope
int3
lea
cmc
fisttpll
push
inc
imul
cmp
sbb
jns
out
push
stc
mov
sarb
in
sub
or
mov
mov
cmc
push
movsl
pop
jge
and
aaa
int3
add
and
mov
or
loope
pop
jmp
adc
out
rcr
aaa
jg
add
push
jmp
inc
push
out
imul
lods
insb
jbe
fstps
jl
jnp
pop
and
jmp
es
cmp
mov
addr16
xchg
rorb
xchg
add
rclb
bound
nop
xor
jae
pop
push
cmp
movsl
mov
mov
add
hlt
mov
cmp
test
or
push
call
sbb
mov
icebp
hlt
mov
sti
add
into
cmp
jge
dec
dec
push
push
push
xlat
lods
xchg
cmp
pop
and
call
mov
iret
shr
inc
pop
dec
inc
mov
arpl
mov
dec
xchg
sub
movsl
push
cltd
divl
fdivr
sbb
mov
fincstp
xchg
cmc
sub
sbbl
repnz
push
out
xor
in
mov
mov
repz
cmpsl
xchg
dec
xor
sub
mov
sahf
pop
aad
mov
mov
call
mov
inc
repz
test
sbb
cmc
push
fdivp
cmp
mov
ret
lods
push
sbb
xor
sahf
stos
leave
jae
jno
call
dec
mov
sbb
jge
mov
popf
xor
jmp
add
or
mov
sub
repz
mov
inc
mov
jecxz
mov
push
xchg
mov
jb
aam
push
into
stos
xor
lahf
xchg
cltd
cli
mov
pop
xchg
mov
xor
rorb
cld
sub
popf
mov
xor
or
arpl
inc
inc
cmp
fsubrl
fcmove
aam
les
push
adc
inc
jl
add
mov
mov
mov
repz
sti
negl
add
shl
imul
adc
and
cmp
ljmp
mov
inc
rclb
or
add
into
jmp
lods
pop
jno
out
test
or
adc
imul
fwait
aad
outsl
cmc
mov
lret
push
outsl
push
cwtl
pop
roll
ljmp
movsl
mov
fldl
adc
mov
sub
leave
xor
cmpsb
sbb
loopne
jb
popf
cmp
mov
cwtl
xchg
adc
orl
lock
jl
push
stc
scas
jae
out
sub
ret
push
push
jns
repnz
xor
in
std
lret
xor
ds
movsbl
mov
jb
inc
nop
in
push
sub
fsts
jge
mov
xor
insl
imul
add
mov
and
pop
sub
adc
jbe
sbb
mov
sarl
arpl
sti
mov
cmp
jecxz
and
stc
ficoml
popf
cmpsl
pusha
mov
jno
lahf
stos
mov
icebp
dec
testb
aaa
cmp
dec
aas
inc
jg
sub
cld
push
mov
std
stos
ret
pop
push
in
pop
call
jl
test
jae
ja
pusha
stos
mov
mov
sbb
push
pushf
push
cmp
loopne
rcrb
mov
sbb
sub
pushf
mov
jo
cmp
cmp
xchg
and
xor
dec
insl
mov
mov
adc
dec
add
int
movsb
outsb
xlat
mov
cs
roll
dec
push
jbe
add
mov
adc
mov
enter
daa
xchg
fs
cmpl
fcoml
xor
push
pop
out
mov
fcoml
mov
mov
call
inc
jns
adc
or
xchg
inc
in
fcom
aad
add
sub
out
mov
and
xor
fistpll
lea
xchg
test
addb
ret
cmp
xor
imull
jle
js
mov
add
jg
sub
jnp
fistl
popa
mov
push
cs
aaa
or
pop
pushl
push
adc
arpl
cmpsl
fdivrs
inc
add
ds
fcoms
inc
sbb
fnsave
jmp
pushf
popa
pop
pop
aas
xor
lock
mov
shll
gs
scas
pop
shll
or
dec
jmp
js
add
pop
mov
int3
shlb
fisubrs
fsubs
jne
and
xor
out
in
adc
pop
mov
jp
pushf
fs
push
clc
pop
outsl
cld
cs
ss
jae
frstor
push
aaa
ss
repz
scas
sub
dec
jae
je
iret
clc
popf
jmp
daa
jp
out
xchg
xor
pop
aas
inc
mov
mov
nop
enter
js
movsl
in
loop
skinit
sbb
addr16
xchg
cmp
sub
jae
sbb
xlat
outsl
insl
mov
leave
dec
xor
inc
lods
fimuls
add
lock
into
mov
fwait
leave
xor
sbb
mov
push
pop
int3
xor
mov
adc
cmp
inc
adc
cmp
or
mov
scas
xchg
xchg
out
mov
jmp
decb
mov
loopne
add
push
dec
mov
loop
xchg
mov
in
bound
push
or
lret
ja
loop
jmp
add
popf
sub
in
pop
mov
mov
mov
inc
ret
sbb
mov
fdivrp
nop
insl
xchg
push
cmpb
inc
pop
cld
sbb
sbb
or
add
subb
std
jno
out
lods
enter
inc
or
std
add
cmc
add
cmp
inc
adc
or
negl
jno
dec
mov
mov
dec
push
mov
and
repz
out
push
dec
repnz
or
jne
call
jbe
stc
arpl
fs
dec
loopne
xchg
daa
lcall
jns
inc
adc
lret
sub
pushf
mov
pusha
xor
mov
mov
lret
mov
lds
shl
andb
and
pop
push
jo
int
xor
rolb
fcomp
insb
idivl
scas
int3
pop
adc
shll
push
fisttpll
cli
mov
push
add
outsb
leave
xor
and
cmp
incb
std
imul
mov
fs
jns
add
lret
int3
adc
mov
mov
call
xchg
fldl
outsb
sbb
pop
nop
mov
or
data16
fbstp
cld
aaa
pop
mov
add
push
add
mov
sub
xchg
lods
xchg
or
and
popa
jl
ljmp
mov
push
mov
dec
repz
cltd
add
shll
jg
mov
stc
add
loope
pop
add
ljmp
es
imul
sbb
fsubs
enter
iret
addb
xor
lock
xor
or
or
shll
cmp
sahf
sub
xchg
pop
jb
mov
aam
rcrb
std
iret
push
movsb
popa
push
or
and
sti
inc
cmp
fcoms
lock
testb
lahf
aaa
sti
xchg
push
sub
mov
daa
ficoms
inc
outsl
mov
andl
dec
or
in
dec
jmp
mov
pop
loopne
das
aaa
xchg
mov
adcb
dec
movsl
add
mov
sub
es
pop
adc
mov
data16
xor
out
fiaddl
push
jns
popa
in
fwait
dec
stos
mov
aam
fstpt
push
add
mov
lcall
sub
xchg
mov
jecxz
pop
xor
add
sub
in
pop
cmpsb
out
ds
fsubrp
clc
pushf
js
xor
orl
add
sub
mov
cwtl
push
push
int3
inc
inc
and
xor
fcoms
mov
sub
in
aam
pusha
or
enter
pop
js
inc
fsub
mov
aam
cld
add
and
test
out
outsb
mov
xor
and
sbb
into
xchg
cmp
mov
cmp
pop
movsb
mov
lds
enter
or
icebp
lods
sti
dec
scas
push
aam
daa
mov
sbb
and
roll
xchg
xorl
jle
aad
push
mov
mov
orl
dec
mov
xor
int3
bound
push
pushf
cmp
fmull
lahf
mov
cltd
cmp
xor
xchg
loope
outsl
test
lcall
pusha
push
mov
add
jb
call
mov
sahf
out
jg
or
mov
xchg
inc
dec
daa
out
aas
adc
sub
dec
add
ret
arpl
int3
sbb
inc
inc
movsl
lcall
mov
movd
dec
mov
lret
sbb
cmpb
loope
test
out
fbld
mov
jge
insb
pushf
cs
ss
in
fwait
pushf
or
add
jp
mov
inc
fcmovb
insl
and
jmp
out
dec
stos
insb
sub
xchg
movsb
mov
aad
sarb
sbb
add
ficoml
imul
adc
ljmp
mov
iret
out
cmp
sub
push
jmp
jmp
imul
out
mov
int
fldt
fbstp
sub
bnd
shlb
xchg
hlt
sub
mov
cwtl
fimull
cmp
lods
sarb
lret
xchg
in
pop
pop
xorl
testb
loopne
mov
dec
xor
adc
shrb
xchg
sub
test
cmp
jae
mov
stos
les
or
test
je
push
jecxz
push
inc
mov
xor
cmp
cmp
mov
sbb
and
arpl
cmp
sbb
cltd
out
cmpsb
insb
out
ljmp
out
insb
fimull
mov
mov
gs
jmp
pop
outsb
int
addr16
adc
dec
icebp
push
mov
je
jle
enter
aam
mov
stc
rcr
icebp
imul
pop
add
dec
into
shll
adc
adc
jns
and
in
inc
sbb
in
mov
rclb
adc
lods
xor
int
lods
clc
lods
in
lods
xor
inc
jno
sbb
jno
xchg
and
adc
mov
fisubs
js
jae
popf
sti
mov
lcall
sahf
inc
lods
xchg
xor
cld
dec
mov
insb
adc
lods
pop
je,pt
cs
rorb
mov
inc
inc
push
movsl
inc
in
mov
insl
lret
rcrb
addr16
shll
sub
mov
sbb
jp
push
dec
and
xorb
inc
ret
dec
pop
mov
xchg
inc
jl
cmpb
push
rolb
arpl
iret
pusha
mov
movsb
popa
in
mov
dec
inc
sub
aad
std
inc
mov
xchg
xchg
dec
mov
fimuls
xor
jbe
pushf
add
ja
add
pop
xchg
jle
cmp
lock
cmp
xchg
daa
mov
xor
jmp
xor
cmp
xor
andl
sbb
pop
bnd
flds
hlt
lods
push
mov
or
dec
cmp
add
cmp
jnp
fmull
repz
mov
movsl
jo
xor
pop
xchg
rcll
leave
mov
insb
push
lods
cltd
cmp
jno
rolb
fidivrs
xor
mov
fstps
jg
loopne
out
adc
mov
push
stc
cwtl
out
sbb
in
ja
sahf
ljmp
add
push
xor
adc
cmp
stos
xchg
cld
cmp
rcrb
std
stc
jnp
mov
xchg
adc
dec
push
cmp
daa
hlt
mov
pop
pop
into
test
test
xchg
insb
mov
add
out
fld
orb
push
iret
and
and
jnp
inc
pusha
shr
mov
jp
inc
mov
hlt
sub
push
mov
jb
scas
jnp
aas
orl
jnp
fsubrs
dec
outsl
pop
jl
into
dec
xchg
and
sub
fucomp
push
xorb
ficompl
jns
ret
lods
clc
inc
fistpl
mov
push
pop
ljmp
sti
outsb
iret
cmpsb
mov
sbb
add
cmp
mov
pop
pop
call
mov
ja
leave
sub
nop
sbb
lock
adc
inc
jmp
xor
pop
fwait
in
pop
jnp
push
pop
repnz
in
sar
sahf
sarb
push
ret
sub
pusha
stos
cmp
cli
call
mov
push
repz
insb
mov
mov
add
outsb
sti
rorb
rol
sub
mov
pushf
jo
jl
mov
sub
loopne
std
mov
or
cmp
mov
jns
cmp
sub
mov
pop
mov
stos
and
push
mov
and
pop
inc
adc
mov
cmp
xchg
scas
enter
inc
pop
enter
fnstenv
push
iret
loopne
cwtl
sub
add
inc
scas
lea
xor
int3
mov
push
mov
loop
lods
sbb
add
xor
loopne
sub
lahf
push
push
lret
jno
shrb
sub
data16
out
ret
dec
sbb
stos
rorb
or
scas
sub
daa
sahf
sub
jne
fistpll
add
xchg
movzwl
leave
arpl
push
mov
mov
dec
cltd
xor
sti
push
lret
clc
or
shl
scas
mov
aad
out
jecxz
mov
insl
aaa
sub
icebp
cli
xchg
xchg
addl
rcrl
dec
call
add
clc
loop
jmp
xchg
cmpsl
add
dec
flds
jmp
push
pop
pusha
es
pop
popf
cmpsl
cmp
push
mov
fwait
nop
cmpl
fbstp
ja
xchg
imul
sahf
pop
adc
inc
pop
dec
dec
mov
decb
jno
mov
ror
lcall
sti
mov
int
xor
sarb
xchg
scas
popa
pop
inc
addb
sub
int
jge
push
out
sbb
nop
push
hlt
xchg
add
shl
mov
jl
mulb
cltd
aad
sbb
cmp
ds
or
xchg
mov
fmull
stc
add
fs
mov
adc
daa
mov
loop
cmp
out
mov
dec
cwtl
inc
jbe
aas
aam
aad
jge
lcall
andb
fsubrp
adc
inc
sub
cld
pop
pop
addr16
cli
sbb
les
adc
and
fcmovnb
andl
ds
xchg
pop
aas
and
sub
pop
loop
add
jae
mov
add
movsb
sbb
jmp
add
andl
sub
repnz
or
add
mov
or
leave
dec
movsb
jb
stc
nop
dec
mov
mov
inc
jne
imul
lcall
jmp
movsb
mov
scas
xchg
jl
stos
adc
sub
mov
iret
cmp
mov
pushw
xchg
repnz
lock
pop
pop
lahf
fs
mov
out
jle
ss
xchg
sbb
enter
mov
jle
cmp
sbb
and
lea
ret
dec
notl
push
daa
push
mov
pushf
sbb
adc
jbe
inc
push
mov
push
ds
sahf
mov
test
push
xor
clc
in
and
es
inc
add
jno
pop
sbb
stos
ss
lods
jbe
sbb
out
and
mov
and
in
inc
push
lock
popf
jno
cmpb
xchg
call
iret
es
insl
fnstenv
icebp
sub
and
movsl
add
hlt
stos
roll
cmc
push
push
pop
mov
cmc
std
jo
cmpsb
adc
cmp
pop
pushf
in
outsl
lret
sarl
test
shll
gs
push
xor
jp
mov
xor
cmp
and
adc
jo
ja
iret
inc
and
cmp
imul
xchg
xchg
aas
hlt
dec
dec
cld
mov
mov
or
daa
push
mov
fdivrs
jo
mov
les
push
ljmp
aam
jnp
pusha
jmp
xchg
sub
sarb
les
imul
dec
lcall
mov
mov
jno
add
fdiv
pushf
inc
rep
mov
aaa
inc
bound
in
loope
cmp
stos
dec
cmp
in
cmp
andl
mov
adc
jno
outsl
lahf
dec
das
daa
pop
hlt
sbb
jae
mov
mov
popa
aaa
jo
enter
loop
mov
dec
cmc
ljmp
loopne
inc
outsl
out
lds
ljmp
xchg
sub
push
jae
jnp
es
sbb
test
or
mov
cld
mov
xor
gs
ret
ret
shll
mov
sbb
mov
xchg
dec
dec
lret
shll
push
mov
xchg
popf
xchg
lods
pop
popa
mov
pop
add
jns
mov
mov
dec
inc
push
std
vcomiss
pop
cmpsl
and
and
xor
mov
test
test
imul
inc
pop
cmp
arpl
mov
inc
lods
mov
pop
pop
mov
je
cld
movsl
int3
sbb
pop
cli
lret
out
push
lods
ret
mov
push
sub
shl
sbb
fldenv
insb
mov
lret
ljmp
fs
daa
insb
in
repnz
dec
ljmp
or
inc
lcall
pop
and
mov
jb
bound
jnp
jnp
clc
adc
or
jb
pushf
pop
out
inc
das
lret
outsl
out
sbb
push
mov
mov
pushf
std
sub
mull
mov
aad
mov
push
dec
popf
dec
mov
imul
frstor
inc
xchg
inc
rorl
push
mov
dec
push
or
rolb
or
int
mov
push
xchg
imul
shrl
dec
cmp
fstpt
xor
push
cmpsl
jecxz
addl
jnp
dec
rcrl
mov
jbe
sbb
pop
mov
sarb
cmp
mov
mov
pmullw
xchg
add
jg
lea
cwtl
xchg
sarb
mov
dec
jl
popf
rcrl
jge
adc
lods
dec
mov
dec
lret
icebp
test
inc
icebp
fcoms
dec
fldt
inc
or
cmp
je
push
mov
leave
inc
jnp
xor
iret
ljmp
pop
and
mov
push
pop
add
inc
in
nop
cwtl
test
pop
dec
dec
cmpsb
jmp
push
and
pop
test
mov
jecxz
jae
insb
push
lods
adc
into
jmp
cld
add
cs
repz
popf
xchg
data16
jecxz
xchg
cwtl
push
cmp
mov
stos
push
dec
lcall
mov
movsb
movsl
inc
hlt
cltd
xchg
test
imul
repz
es
xor
clc
cmpsb
repz
js
lret
pop
pusha
fsubs
rcrl
sbb
jnp
int3
shlb
in
in
stos
fsubs
inc
cmp
add
push
adc
push
jno
lret
je
mov
into
push
movsb
jns
pop
les
rolb
dec
sahf
es
gs
or
aad
sbb
add
jno
clc
cmpsl
loop
out
adc
dec
test
shrl
test
sub
inc
mov
xchg
or
jl
add
mov
xchg
bound
sbb
push
fcomip
or
out
pop
popf
stos
movsb
mov
sbb
or
push
nop
insl
xchg
sub
notl
lahf
repz
cmp
clc
fcomip
xor
mov
pop
sbb
dec
inc
push
cmpsl
xchg
andb
mov
cld
push
shr
aaa
enter
sub
imul
ds
das
fcoml
pushf
cld
add
sbb
jmp
inc
movsl
lods
sub
fstpt
xlat
lcall
lock
adc
jnp
adc
add
pop
in
sub
cltd
mov
clc
jne
ljmp
adc
sahf
pop
jge
sbb
xlat
or
jl
incl
dec
popf
imul
push
sbb
sbb
mov
filds
jp
jo
nop
mov
push
orb
les
and
cwtl
or
push
inc
icebp
mov
shlb
jae
fstps
loope
cwtl
jno
cmp
push
lret
icebp
sarb
or
push
aam
pushf
lock
pminsw
push
outsl
and
push
sbb
popf
std
sti
inc
add
push
jp
jnp
or
adc
jecxz
std
sarl
test
lds
xchg
enter
loopne
push
mul
xchg
or
iret
jmp
xor
xor
cld
adc
dec
enter
mov
fldt
jmp
aam
jo
cli
fidivrs
jp
cmp
xchg
jge
mov
sub
call
outsb
mov
push
mov
stc
scas
xor
mov
fstl
scas
into
inc
mov
movsb
scas
xchg
add
sub
aam
sbb
xorb
push
mov
js
das
shrb
mov
pop
xor
fiaddl
sbb
xor
rcrb
mov
adc
mov
dec
adc
jns
stos
pop
xchg
xor
push
and
push
mov
insb
xor
pop
and
and
sbb
push
into
xchg
pop
clc
xchg
inc
add
enter
and
xchg
cmp
sub
stc
je
sub
out
les
xlat
push
cmp
lds
fnstsw
inc
mull
jnp
clc
or
insb
das
dec
and
push
icebp
dec
push
inc
mov
push
and
je
mov
imul
aam
xlat
pushf
ret
jl
out
sti
push
shrl
cld
sub
adc
shlb
xchg
stc
push
adc
jle
pop
inc
xor
pop
mov
orl
mov
pop
repz
mov
mov
pop
fsubrp
inc
xor
lock
and
push
push
insl
sbb
mov
test
xchg
inc
stc
adc
in
ss
fdivs
test
lods
inc
movsl
xchg
and
pop
fmul
loopew
fsubrs
or
pop
test
loope
int
cltd
mov
sbb
leave
mov
addr16
inc
xor
add
loopne
scas
test
xor
leave
mov
test
lods
jmp
addr16
xor
jp
mov
jg
mov
js
dec
andb
in
jne
test
and
sbb
sbb
out
addr16
adc
xchg
addb
jne
xor
aas
ja
add
out
icebp
outsb
dec
outsb
xchg
push
sahf
in
and
jne
cmp
cld
cwtl
loop
adc
aad
inc
clc
pushf
inc
xchg
dec
mov
jbe
lcall
ds
fisttps
xchg
cmc
adc
aam
rclb
mov
mov
loopne
dec
je
mov
sbb
or
pop
aaa
xchg
mov
je
push
mov
mov
cwtl
sti
stc
scas
cmc
mov
cltd
sub
ret
and
inc
ljmp
ja
xchg
xchg
or
pop
pop
or
add
inc
xchg
cmp
aas
les
mov
cmp
inc
test
and
xor
pop
xchg
adc
test
xchg
es
nop
add
xorb
scas
addr16
cs
ljmp
clc
add
add
or
or
insb
sbb
shlb
jmp
lret
jge
sub
xor
mov
xchg
and
add
push
icebp
xchg
dec
and
push
or
mov
xor
das
lock
out
mov
fsubs
pop
out
mov
lods
rol
jno
xchg
mulb
mov
sub
xor
loopne
cltd
inc
or
iret
add
out
shl
push
enter
movsb
add
andl
mov
push
cli
push
adc
pop
fmuls
sub
sbb
dec
mov
jae
sbb
cmp
push
test
adc
push
scas
imul
daa
hlt
cmp
jb
push
and
pop
mov
cli
cmp
or
mov
iret
adc
fadds
xor
cli
outsb
pop
cmpsb
mov
mov
push
cs
out
mov
adc
mov
push
mov
dec
mov
bnd
add
dec
adc
ljmp
sti
lret
pop
arpl
rorb
pop
jmp
xchg
xor
pushf
les
inc
js
xchg
push
cmp
cmpsb
and
mov
popa
inc
lds
push
data16
lds
push
pop
mov
shrb
inc
inc
pop
mov
mov
repz
out
cmpsl
lds
pop
pushf
mov
xor
push
mov
loope
ret
mov
mov
jae
jae
pop
out
enter
jo
xor
dec
mov
jmp
lods
and
mov
mov
ljmp
pop
adc
add
xchg
cwtl
adc
and
add
mov
repnz
sub
test
test
push
push
pop
and
inc
adc
mov
jo
rorl
nop
jne
xchg
loope
push
stos
shll
lea
loopne
mov
mov
std
sar
jne
loopne
sub
fidivl
into
push
loope
arpl
movsl
lea
ror
jmp
sub
sub
pushf
mov
data16
pop
in
das
jbe
xor
pop
adc
xchg
and
sbb
sub
and
sbb
cmpsl
addr16
das
push
movsb
pop
mov
mov
jo
ja
add
push
push
sti
and
jnp
dec
jmp
jmp
mov
dec
outsb
xchg
in
pop
mulb
add
push
xlat
inc
xor
call
call
or
sub
jp
fsubrl
and
cwtl
mov
mov
lods
xor
push
ljmp
repnz
mov
xor
jecxz
out
sti
lcall
scas
mov
and
mov
pushf
enter
adc
mov
ret
das
pop
mov
xchg
cmp
shlb
gs
pop
test
inc
icebp
nop
mov
inc
or
jne
and
sahf
lcall
add
ret
mov
andl
out
jns
cmc
lods
inc
out
sub
addl
movsb
mov
jae
pop
push
cmp
xor
fiaddl
jg
mov
xchg
pop
lods
mov
aam
pop
push
into
or
das
mov
mov
sbb
test
lods
adc
lcall
or
nop
fcomi
dec
pop
cmp
push
mov
sbb
shll
lahf
das
push
in
movsl
shr
out
or
sbbb
mov
cmc
push
test
cvttps2pi
clc
and
jns
ljmp
movsb
add
andl
mov
dec
je
ljmp
loopne
mov
addr16
or
xchg
xor
pop
lds
xchg
push
adc
xchg
push
mov
jmp
jp
cmp
andb
dec
icebp
out
cmp
cltd
sbb
inc
xorb
xlat
push
push
mov
inc
ja
andl
decb
dec
insb
mov
mov
push
lods
add
flds
dec
inc
popaw
push
fidivl
jg
out
imul
in
xor
xchg
sub
loop
inc
fcomip
pop
in
mov
rorb
pop
outsl
jl
lahf
mov
out
push
pop
in
jg
push
leave
mov
aad
sub
test
rorl
pop
mov
mov
mov
add
and
sahf
sub
pop
es
nop
push
dec
mov
lods
push
xor
das
and
pavgw
mov
dec
or
push
cwtl
daa
inc
mov
sub
fs
mov
aas
push
pop
sarb
arpl
add
xchg
shrb
and
cmp
adc
push
pop
mov
mov
and
popf
xchg
ja
cmpsb
call
fiaddl
das
dec
bound
leave
dec
test
enter
push
xor
repnz
add
into
jnp
call
cmp
mov
sbb
rol
push
loop
popa
and
popa
icebp
test
xchg
sahf
mulb
sahf
sbb
sub
ret
imul
mov
or
jmp
int
out
test
mov
inc
out
xchg
popa
cli
and
adc
adc
mov
clc
js
imul
xor
jns
pushf
xorb
add
jns
iret
mov
scas
call
imul
ja
ljmp
push
mov
ret
repz
mov
stc
xchg
fisttpll
cs
lahf
push
pop
insb
mov
pop
mov
imul
test
fs
js
cltd
dec
adc
add
stos
mov
add
repz
add
test
mov
push
sub
xchg
mov
fistps
sub
imul
mov
out
rclb
fisttpll
fistl
push
inc
std
cmpsl
ret
lock
push
mov
aad
dec
outsb
mov
adc
fxch
jbe
aam
into
loopne
leave
and
cwtl
loopne
sahf
jg
seto
add
cmp
cs
adc
mov
jle
inc
fdivrs
mov
mov
push
cmp
or
dec
fdivrl
mov
xchg
xor
mov
mov
xlat
pushf
and
sub
add
add
add
jge
xor
lds
pop
xor
cmp
mov
insl
xor
inc
push
jmp
lock
ret
gs
dec
and
movsb
outsb
mov
pop
mov
jp
test
lods
push
ror
repz
pop
jno
adc
lret
pop
mov
inc
fisttpll
mov
or
out
sub
ljmp
aas
inc
lock
sbb
xchg
inc
xor
movsl
aaa
nop
and
push
daa
add
inc
sub
jecxz
xchg
add
loopne
fadd
xchg
ret
cwtl
xchg
cmp
xor
add
dec
aad
sbb
icebp
adc
jmp
ja
push
stos
adc
jl
sub
mov
int3
xacquire
mov
sahf
or
fistpll
loopne
mov
loop
push
cmc
xchg
cmc
mov
lods
into
push
add
pop
call
mov
aaa
mov
pop
mov
popf
hlt
pop
or
inc
adc
ja
cli
xchg
xchg
xchg
lock
imul
cmp
lcall
and
dec
dec
push
sbb
lds
subb
or
push
cmpsl
outsb
out
dec
sub
enter
push
add
inc
movsb
fstl
outsb
into
icebp
mov
push
sbb
add
xchg
mov
mov
and
xor
dec
icebp
mov
inc
orb
ret
fistpl
or
mov
cmp
loope
jle
pop
sub
leave
pusha
sub
cmp
daa
push
push
push
and
mov
in
adc
or
and
dec
sub
nop
mov
sbb
std
arpl
lods
dec
sub
xor
dec
push
xchg
sahf
mov
adc
dec
push
lock
cmp
cmp
loopne
adc
lcall
std
imul
scas
clc
inc
aaa
mov
cli
fs
in
inc
sub
xor
mov
popa
mov
lods
ja
subb
dec
adc
mov
adc
inc
enter
mov
xor
mov
push
ret
fsubrs
movsb
jno
scas
icebp
adc
pop
add
pop
iret
test
and
daa
sbb
arpl
cmp
movb
cmpsl
loop
sub
icebp
mov
rol
in
stos
repz
cld
lahf
test
jnp
and
jo
fstpt
mov
adc
adc
push
xor
jns
lea
jg
xor
dec
loop
push
in
imul
test
pushf
cltd
pusha
jp
jne
pop
inc
mov
popf
cmpsb
sbb
add
out
cmc
inc
push
xchg
or
pop
ja
in
scas
insb
fstl
dec
mov
mov
aaa
sub
loopne
rcll
sahf
ss
sub
inc
jae
push
cmp
repnz
inc
movsl
sbb
hlt
gs
cld
lock
add
mov
cmpb
and
cltd
push
fcomps
lock
test
push
cmc
shlb
filds
jle
out
adc
lret
in
pop
loopne
fidivrs
sub
adc
dec
aad
push
jbe
and
add
inc
push
test
pop
push
dec
sub
jle
mov
out
scas
jg
inc
out
scas
sub
aad
cmpb
cmp
lahf
jmp
jg
sti
stc
mov
in
sbb
lods
mov
mov
scas
fldl2t
xorl
adc
cmpsl
dec
push
imul
mov
loopne
test
pop
mov
add
ja
sbb
dec
jae
pop
mov
movsl
mov
es
outsw
cmp
popw
test
mov
cmp
mov
jmp
mov
dec
icebp
sahf
sub
fs
test
sbb
add
out
jne
inc
mov
dec
loopne
add
lods
cli
dec
pop
mov
mov
in
in
or
pop
icebp
xchg
sbbb
pop
pmulhuw
ret
push
mov
mov
cmp
lea
mov
jnp
shlb
lret
push
xor
loopne
push
sahf
or
outsl
sub
bound
inc
dec
mov
push
jne
rcrb
mov
mov
repz
sbb
mov
leave
in
inc
pop
mov
out
mov
loop
or
or
mov
shl
sub
int3
cli
fisubl
fidivrs
out
mov
arpl
cmp
xchg
mov
xor
mov
bound
and
movsb
lock
lea
cwtl
push
sbb
jnp
loop
pop
icebp
mov
pop
inc
adc
adc
mov
test
xor
loopne
adc
in
inc
cs
lahf
aaa
cmp
mul
xchg
push
xchg
das
mov
mov
push
lods
push
inc
add
pop
std
jb
dec
into
out
mov
xor
cmp
xchg
sbb
add
sbb
scas
int3
sti
stos
iret
xchg
cmp
pushf
xor
xchg
addr16
daa
les
jae
loop
lcall
pusha
jmp
sbb
addr16
leave
jp
nop
popf
les
sub
addl
xor
mov
mov
mov
out
push
jl
mov
nop
xchg
movsb
inc
xchg
loopne
test
inc
mov
jns
pop
mov
mov
andb
or
fdivp
lds
cmp
push
push
xor
negl
mov
jmp
xchg
ror
push
int3
out
loop
rcll
push
pop
imul
movsl
in
scas
mov
aam
mov
js
push
adc
cmp
xor
xchg
gs
pop
sub
dec
pop
int
mov
push
dec
call
adc
iret
dec
dec
inc
fsts
mov
ljmp
stc
inc
lret
dec
out
gs
xlat
adc
data16
loopne
insl
jmp
cmp
stc
in
inc
push
stc
mov
xchg
or
cld
jecxz
or
mov
mov
lret
incb
cmpsb
out
adc
pusha
jl
cmpsl
or
push
and
imul
movsb
dec
int3
movsb
push
mov
inc
mulb
inc
xor
jg
loopne
bound
mov
pop
or
data16
lahf
outsb
dec
shrl
lods
mov
addb
mov
rcrw
add
inc
outsl
sbb
mov
add
loop
dec
lds
jmp
inc
in
sub
pushf
das
adc
mov
pushf
pop
mov
sbb
mov
push
sahf
movsl
mov
repz
filds
out
inc
jge
test
pop
mov
js
nop
sub
ljmp
mov
pusha
lahf
out
loope
add
bound
mov
mov
fidivl
ret
test
cmp
xchg
push
cmp
xor
divl
addr16
imul
adc
mov
mov
mov
sti
add
orb
and
dec
lods
in
add
adc
dec
mov
jno
out
sub
leave
ljmp
sbb
pushf
inc
inc
imul
jmp
das
nopl
loope
imul
les
fidivl
mov
add
lret
jno
pop
or
add
loop
lea
into
jae
mov
xor
lods
push
je
clc
stos
cmc
in
les
insl
pop
cmp
pop
and
gs
popa
lock
or
imul
push
pop
pop
sub
loopne
addr16
in
sbb
add
in
pop
sub
and
stos
cld
je
cmp
leave
scas
je
mov
and
push
insb
pop
mull
repz
in
jne
outsb
mov
push
sbb
pop
mov
clc
ds
iret
cmp
adc
xchg
out
outsl
bound
mov
flds
adc
jmp
popa
movsl
add
dec
ss
xor
push
insl
push
pop
pop
inc
cmp
adc
cmp
rcrl
dec
mov
dec
loopne
jl
repz
jnp
add
or
sti
cld
sub
subl
shll
inc
movsb
xchg
push
cmp
mov
inc
sub
sbb
inc
jp
xchg
sbb
lahf
lea
and
push
jb
or
outsl
push
pop
inc
jmp
mov
stos
sub
sub
mov
nop
outsb
push
sahf
add
pop
enter
popf
dec
sarb
xchg
cmp
rcl
je
icebp
daa
loopne
push
in
inc
push
push
jno
inc
mov
hlt
aas
aaa
and
fisubs
jae
imul
movsl
mov
push
mov
jle
pop
xchg
sub
stos
xchg
lret
xchg
fstpt
imul
jo
std
outsl
add
or
add
xchg
jo
xlat
scas
out
mov
adc
adc
sub
push
nop
cwtl
pop
leave
mov
leave
pop
xchg
cmp
int3
or
sub
cwtl
or
or
or
xchg
inc
lret
adc
xchg
push
add
mov
mov
adc
push
mov
cmp
mov
inc
adc
fs
sahf
repnz
aaa
xchg
stos
xor
mov
xchg
add
insl
loop
and
inc
add
dec
or
loopne
jae
xchg
dec
andps
popa
or
fwait
and
sub
jle
jecxz
fcomps
push
adc
int
sarb
sbb
fcmovne
pop
aas
mov
dec
mov
xchg
or
mov
out
das
clc
repnz
iret
iret
ja
mov
xlat
dec
test
jecxz
paddd
inc
cmpsb
ds
pop
jl
es
mov
aam
pop
setp
iret
xor
pop
aaa
sub
movsl
jmp
xlat
xchg
in
stos
or
mov
rcll
jg
pop
xlat
or
out
pop
and
into
call
pop
jg
in
addb
cmp
ds
ret
ja
mov
inc
imul
cmp
aas
push
mov
dec
in
loopne
cmp
xchg
cli
outsl
adc
fwait
test
lock
dec
jmp
inc
movsb
rorl
ljmp
jmp
mov
lret
cli
mov
stos
and
mov
add
or
insb
addr16
push
mov
dec
inc
pop
adc
cltd
in
outsb
imul
cmp
or
std
rcl
sub
xor
jp
xor
rcrb
xor
les
and
scas
jb
pop
cmp
in
insb
xor
fistps
jns
cld
mov
stos
jecxz
ds
mov
imul
inc
push
mov
sbb
mov
cmpsl
jne
sub
sub
aam
dec
fcoml
popf
cwtl
cmp
mov
inc
es
pusha
mov
and
xchg
test
adc
fsin
incb
inc
push
imul
sbb
jl
pusha
mov
cmp
mov
imull
insl
sbb
das
ret
mov
idivb
movsl
mov
push
inc
dec
lahf
movsl
adc
push
mov
cmpb
mov
mov
dec
mov
lcall
adc
adc
lds
inc
cmp
ds
rorb
push
fistl
pop
push
sub
inc
shl
push
cmp
jb
fisubrl
addr16
and
loope
mov
lcall
add
mov
lret
and
stos
jmp
inc
inc
pop
inc
push
jg
push
jae
popf
sahf
std
out
out
xor
mov
sbb
or
pushf
jno
in
push
dec
mov
fnstsw
cltd
outsb
or
sbb
addr16
lret
mov
adc
jge
imul
inc
leave
sbb
cmp
int3
mov
rcrl
cmpsb
shll
mov
inc
jns
movsb
push
pop
mov
pop
psubusb
clc
sub
aad
sub
mov
out
out
mov
in
sbb
sti
push
test
test
and
cmp
pop
or
enter
adc
pop
pusha
pop
or
xor
inc
mov
pop
xor
repnz
scas
xlat
xchg
jecxz
insb
jb
fsub
dec
data16
cltd
cmp
mov
jmp
jne
int
shrl
jb
push
cvtdq2ps
jnp
sbb
popa
jp
jno
movsl
pop
outsl
sbb
cmp
loop
xor
pop
push
jbe
popf
push
nop
popa
xchg
adc
mov
xor
mov
mov
lret
sub
mov
loopne
and
cmpsb
sbb
or
inc
in
xor
hlt
adc
cld
call
and
sti
dec
push
leave
adc
mov
lods
fisubrl
add
leave
xor
paddusb
xchg
adc
test
or
inc
add
push
or
out
rolb
vmwrite
jns
das
ret
and
int3
xchg
lods
loope
arpl
sahf
ss
xor
es
loopne
sahf
adc
aam
imul
leave
push
pop
ss
test
aas
test
out
icebp
cltd
mov
pop
iret
jbe
in
lods
push
sub
or
out
push
stos
lock
hlt
adc
aam
mov
pop
popa
jecxz
aaa
jl
push
int3
lea
loop
adc
enter
and
xor
push
adc
sub
mov
jne
loope
jnp
stc
mov
outsb
test
mov
arpl
in
hlt
into
mov
loope
cmpsl
mov
roll
xchg
mov
sub
mov
cwtl
sub
in
stos
adc
mov
hlt
out
mov
rcrl
push
xchg
mov
outsb
cs
sbbl
es
cld
pop
arpl
ds
or
jmp
outsb
push
cld
adc
add
mov
repnz
rolb
cli
aam
fdiv
sbb
shrl
in
xor
cmp
add
dec
adc
loopne
push
push
arpl
add
dec
pop
jnp
lret
cs
xchg
cwtl
inc
shr
in
dec
inc
jmp
orb
mov
jle
das
sub
adc
stos
cmp
xchg
pop
loopne
dec
mov
xor
xor
push
and
mov
mov
fisttpll
fisubl
int
insl
sub
or
adc
mov
in
xlat
xor
inc
mov
leave
inc
dec
sbb
lods
scas
iret
js
cmc
xor
gs
sub
shll
xor
cmpsb
aaa
xchg
aad
or
ds
sub
in
add
push
xor
cltd
loopne
repz
push
data16
jl
dec
xchg
mov
je
loopne
fildll
jle
push
jnp
xlat
lret
push
scas
popa
jo
in
sub
add
push
loope
fcoms
les
adc
push
pop
jmp
leave
push
cmp
or
jne
aas
push
xchg
push
out
mov
or
cmp
mov
cld
pop
pop
and
push
sbb
jg
add
ss
xor
jno
test
clc
inc
dec
faddl
popf
adc
jns
mov
loop
in
jp
subl
out
sub
in
jae
insl
and
jb
fldenv
jnp
rclb
andl
jnp
icebp
adc
ret
aaa
fstl
sub
js
add
gs
pop
sarb
jl
and
mov
imul
lds
loopne
pop
xchg
sbb
mov
pop
sub
adc
andw
adc
jae
mov
imul
inc
pop
bound
add
idivl
loope
cmp
jp
xchg
popf
mov
dec
dec
mov
insb
into
in
hlt
xor
inc
movsb
pop
shlb
andb
cwtl
push
jle
push
test
mov
stos
xchg
dec
sbb
pop
push
shlb
mov
jno
pop
mov
dec
cltd
testl
inc
fisttpl
mov
popa
sahf
push
add
lds
jne
mov
in
test
clc
add
xor
fisttps
inc
adc
ret
push
jo
iret
aam
or
xchg
jmp
mov
sub
aas
daa
jne
jae
leave
lock
out
jbe
cmp
inc
mov
mov
xchg
rcrl
les
or
push
dec
push
mov
xchg
xor
mov
xchg
mov
lods
jge
jle
repz
fwait
pushf
leave
jl
add
ret
cli
xchg
aam
loop
popf
push
int
jmp
decl
and
arpl
les
mov
mov
cmc
adc
jb
mov
add
sbb
fstl
cli
xchg
xorl
repnz
xchg
or
mov
jp
sbb
insb
les
adc
cmp
mov
adc
test
dec
in
inc
lahf
or
rep
test
movsb
stos
stos
scas
cmpsl
xor
sar
divb
sbb
jb
sub
js
jge
jmp
das
int
fs
outsb
add
xchg
pusha
dec
data16
jne
ljmp
sbb
xchg
ret
mov
add
and
push
xor
scas
mov
das
out
ds
pop
and
sbbl
push
pop
ja
fcomi
dec
popf
jecxz
cltd
int3
mov
xor
inc
cltd
ficomps
ds
popf
dec
add
outsl
subb
xchg
inc
mov
imul
repnz
repnz
mov
ss
jb
cmc
lahf
ret
mov
orb
mov
xor
testb
ret
call
and
adc
inc
cmpsb
lods
inc
pusha
rolb
loopne
stc
jmp
lock
out
bound
inc
cmp
adcl
jg
lretw
sub
lods
push
mov
add
xor
pop
sbb
mov
bnd
pop
xchg
cmpsb
gs
xor
or
adc
psraw
xor
cwtl
push
repnz
in
mov
inc
call
into
push
mov
xchg
add
jmp
pop
mov
cmp
or
pop
and
xchg
popa
sahf
repnz
mov
loope
test
dec
mov
and
fnstenv
mov
sbb
fcoml
or
and
mov
cmpsl
cmp
mov
idivb
test
test
xchg
jbe
fdivr
ds
lcall
dec
xor
daa
test
shr
jecxz
jo
push
cwtl
cli
inc
jo
out
pop
jo
xchg
inc
loopne
sub
add
cmp
imul
fs
test
mov
data16
stos
push
lea
cld
xor
pop
lods
dec
stc
mov
jmp
shrb
add
lret
cld
pushf
adc
or
orl
enter
sti
dec
xor
pop
shl
jb
adcl
inc
or
adc
test
into
lods
loope
or
das
imul
sub
repz
stmxcsr
repnz
test
mov
xor
pushl
out
mov
sbb
or
inc
sub
xor
popf
sarb
cltd
arpl
xchg
sahf
lcall
cs
jp
movsl
in
call
outsl
aaa
sbb
mov
add
shll
push
sbb
adc
inc
aas
loop
add
mov
mov
test
in
add
imul
or
add
loopne
cmp
popf
aaa
dec
movsl
cmp
and
ja
dec
cld
rcrl
add
ljmp
cs
stos
test
mov
mov
adc
ljmp
mov
arpl
enter
je
lahf
inc
sub
inc
pop
dec
xchg
adc
in
je
aad
aaa
jo
pop
mov
insl
cmp
fstps
xchg
mov
sahf
add
jmp
popf
pop
mov
jbe
inc
ficoml
je
lods
ja
repnz
cltd
orb
mov
dec
xchg
fsts
enter
in
lret
ss
icebp
push
andl
lods
pop
faddl
cwtl
or
or
in
cmpsl
imul
or
mov
inc
jo
adc
mov
dec
movsl
xor
adc
or
out
fnstcw
imul
jnp
push
jl
push
mov
push
mov
add
orb
pop
mov
push
negl
push
xor
cmpsb
bound
inc
out
dec
fldcw
push
jo
out
mov
adc
into
cmp
mov
jmp
pushf
mov
push
test
loopne
cmp
decl
inc
lahf
cmp
jmp
hlt
mov
xchg
pop
xor
data16
ror
in
pop
incl
cli
insb
and
lods
jno
xchg
jmp
aas
leave
lock
hlt
sarb
adc
sub
inc
jo
scas
or
fildll
jo
enter
fwait
setbe
lcall
push
jno
jecxz
leave
mov
mov
mov
jmp
dec
mov
pop
repnz
in
push
mov
xor
push
mov
mov
inc
hlt
mov
xchg
push
nop
inc
push
dec
movsb
repnz
add
sbb
dec
outsl
fstpt
hlt
jecxz
and
arpl
cmp
in
inc
push
push
adc
and
and
int
scas
sbbb
out
push
lock
mov
inc
jp
gs
outsl
cmp
cmp
inc
sub
adc
movb
cmc
repz
add
les
js
inc
mov
cmp
jno
dec
and
and
or
stos
push
nop
test
xor
dec
dec
jns
and
arpl
fidivl
sbb
add
loop
movsb
mov
rcrl
adc
es
push
es
push
adc
mov
mov
iret
dec
or
sbb
push
lcall
test
xor
fcmovnbe
shll
mov
sbb
ret
aad
int3
jb
or
xor
adc
pop
xor
mov
adc
add
mov
push
aam
enter
fwait
xor
jo
cltd
lock
pop
icebp
fdivl
jecxz
xchg
ret
subl
push
inc
loopne
dec
popa
cmp
inc
fcomps
insl
pop
sbb
push
in
sbb
out
jne
add
inc
mov
repz
repnz
gs
test
sbb
into
mov
cmp
int
sbb
push
dec
pop
mov
aad
es
sub
idivl
fdivr
mov
push
cmp
loop
fisubs
es
jns
pop
into
cltd
insb
or
ja
sbb
push
shrd
jmp
cltd
add
test
loop
stos
xor
mov
mov
mov
and
mov
adc
into
push
mov
popa
xor
loop
aas
sahf
pop
pop
inc
push
adc
mov
out
rcr
into
mov
leave
pop
out
mov
inc
sar
dec
in
mov
push
fs
ljmp
jge
sub
je
xor
rol
jmp
stos
outsl
orb
loop
scas
icebp
push
pop
xor
or
adc
cmp
mov
mov
adc
inc
inc
inc
xchg
jge
fcmovnu
insb
out
xlat
pop
fdivp
loope
lods
int
inc
lods
loop
rcl
fstpt
mov
inc
iret
mov
and
cmpb
xor
push
movsl
out
sbb
add
scas
punpckhbw
int
cmp
das
mov
mov
push
push
imul
bound
aam
xor
cwtl
or
jnp
xchg
push
aaa
pushf
mov
js
jo
cld
fidivl
pop
or
fcos
pop
mov
sub
add
xchg
test
xlat
pop
jnp
dec
push
cmp
inc
xor
stc
movsl
mov
ret
pop
jno
test
jecxz
pop
dec
aad
jne
dec
add
sbb
inc
jbe
or
int3
xchg
and
mov
or
xor
rcrl
push
fldt
iret
stos
mov
subb
jp
shl
sbb
sub
test
and
sbb
xor
push
ficompl
daa
push
fdivr
mov
and
xor
pop
jno
daa
in
sbb
jg
xchg
mov
lea
jge
in
int
call
pop
cmp
cmp
mov
jbe
and
rcrl
test
in
fs
mov
xchg
insb
daa
repz
jl
dec
and
mov
cmp
out
lock
sti
negb
xchg
cltd
dec
je
and
inc
mov
push
dec
loope
xlat
jp
mov
insl
mov
enter
xor
fbld
jl
fildll
add
mov
insb
test
leave
xchg
sbb
xor
inc
outsb
aad
nop
dec
ror
jmp
lahf
or
cmp
push
push
outsl
mov
movsb
jmp
into
in
push
or
jae
lods
bound
std
cs
adc
dec
dec
push
rclb
stc
popa
inc
adc
mov
push
xchg
movsl
leave
scas
in
mov
pop
push
or
gs
dec
out
cltd
mov
imul
out
mov
inc
pop
rdmsr
mov
mov
mov
lahf
add
jmp
push
es
jns
in
loop
or
cmp
lret
cmp
mov
lea
jbe
or
and
lds
fnstsw
enter
pop
mov
pop
add
nop
sahf
imul
outsl
stc
mov
add
fcmovnbe
push
cmp
fsubrl
cmp
movsb
add
shll
ss
push
jmp
mov
ljmp
jo
jle
push
faddl
iret
movsb
icebp
push
outsl
xchg
out
xorl
cmp
dec
jecxz
aad
int
fcoml
pop
in
shl
mov
shlb
in
xchg
ret
sub
dec
jno
or
jne
xchg
sub
pop
insb
adc
daa
inc
mov
inc
outsl
mov
dec
es
fldl
mov
ror
inc
mov
sbb
push
iret
dec
xchg
xchg
pop
push
mov
aaa
sub
inc
and
fnstsw
sub
sub
ja
int
lods
cli
and
and
pop
cmpsb
xchg
adc
ljmp
stos
and
mov
loop
ds
outsl
sub
xchg
and
adc
wrmsr
cmp
push
push
daa
mov
mov
aad
std
addb
pop
xor
movsl
lahf
lock
fstpl
dec
in
dec
push
aad
jecxz
add
dec
adcl
sub
cmp
cmp
in
xchg
leave
aam
ficoms
xchg
in
xchg
add
iret
rcll
roll
xchg
dec
lods
xchg
dec
cmp
push
testl
lcall
mov
mov
mov
fwait
add
test
in
std
and
ret
lods
xor
xlat
or
insb
adc
mov
or
lea
mov
cmp
shrb
xchg
rorb
stos
or
sti
add
int3
ficomps
popa
xlat
sbb
cmp
sbb
fisubrl
cltd
outsl
test
jp
mov
roll
call
xor
scas
data16
popa
push
xor
cld
add
xchg
shl
mov
scas
xorl
fistps
xchg
lods
in
mov
jl
xlat
imul
outsl
fsts
iret
ljmp
adc
push
fcmovnbe
loop
push
out
mov
fnsave
sti
stos
mov
mov
adc
icebp
push
push
mov
call
int
mov
or
inc
sahf
incl
addr16
roll
idivb
fidivl
and
popf
lods
add
sub
xchg
pop
sbb
mov
cmp
les
jecxz
outsl
pop
gs
aas
jno
outsb
pop
add
repz
loop
jecxz
add
aad
call
lods
sub
out
cli
mov
sub
mov
xchg
dec
push
xchg
push
fisubs
cmpsl
stos
inc
lods
sub
mov
adc
repnz
hlt
pushf
lret
idivb
jno,pt
mov
subl
pop
gs
xchg
sbb
gs
dec
pop
dec
shrb
mov
fidivl
or
test
imul
rolb
mov
out
test
lods
jge
dec
lret
int3
or
rorb
add
mov
mov
dec
pop
es
push
js
mov
mov
mov
lods
test
push
sbb
dec
add
pop
sub
clc
mov
add
jae
mov
loopne
pusha
repnz
fs
shll
inc
add
mov
push
xor
jmp
jg
pop
jle
testb
fisttps
cmp
sbb
call
pushf
pushf
add
cmpsl
jge
push
jns
out
clc
shll
roll
dec
loope
sub
jecxz
cmp
sbb
fwait
sbb
push
stos
adc
dec
push
mov
pop
lods
loop
jae
es
mov
call
popa
lret
cld
aad
xchg
mov
test
in
cmp
pop
lds
inc
push
aaa
or
js
int
cmp
mov
xchg
imul
add
xchg
dec
imul
push
mov
rcll
cmp
sarl
scas
inc
cmp
and
fstps
in
xchg
mov
repz
imul
mov
in
idiv
or
hlt
mov
push
mov
lret
sahf
mov
rorb
adc
aam
mov
jp
loope
cmc
call
and
sub
enter
stos
rcrb
push
mov
fsubl
or
clc
and
add
jno
adc
cmp
and
bound
inc
ret
stc
aam
mov
imul
scas
sbb
mov
loope
adc
inc
xchg
mov
out
dec
stos
or
xchg
inc
xor
jg
mov
cltd
ss
pop
adc
jecxz
lods
test
call
dec
push
cwtl
mov
push
hlt
es
sub
imul
inc
dec
call
push
xor
scas
fsubr
xchg
dec
outsb
or
mov
sub
jg
sbb
jbe
adc
cli
mov
enter
ret
push
push
int
push
inc
andb
leave
cld
adc
jno
dec
aas
test
jge
test
jge
fistpll
testb
pop
sahf
xchg
negb
pop
and
jae
inc
movsl
scas
jno
xchg
out
js
pushf
jle
ficoml
mov
inc
lret
out
fucomp
sub
in
inc
inc
or
inc
push
fisubl
outsl
jbe
call
fcomip
fnstsw
mov
fwait
or
fisttps
xor
dec
cmp
mov
ds
in
hlt
subl
or
xchg
outsb
jbe
sub
inc
xor
and
add
xor
sub
mov
xor
std
mov
addb
inc
push
cmp
and
xchg
xchg
rolb
lds
xchg
sub
jno
mov
dec
pop
dec
or
mov
sti
or
xor
and
jne
mov
insl
cmp
nop
outsb
dec
hlt
stos
mov
aam
shll
stos
cmpsb
mov
inc
gs
dec
popa
cmc
loopne
add
sbb
cwtl
imul
je
mov
add
sub
vcvtpd2psy
cmp
or
xor
enter
and
mov
ret
into
lods
adc
pop
jnp
cmpsl
inc
call
or
shrl
mov
rclb
out
in
loope
add
repz
data16
sbb
mov
push
dec
jl
mov
jge
cmpsl
mov
add
std
cmpsl
movsl
jle
ret
in
and
mov
ret
cmp
or
add
outsl
out
lods
int3
jle
pop
ja
dec
es
sub
add
clc
leave
pop
iret
sbb
jbe
rclb
adcb
inc
or
mov
cmc
dec
pop
jae
in
add
mov
in
xor
jbe
push
divl
or
bound
out
push
inc
dec
es
cs
in
jecxz
jns
out
mov
xchg
sarl
nop
movsb
mov
enter
and
lret
inc
mov
pop
cmc
call
rclb
bt
ret
adcb
sbb
push
cwtl
out
insb
stc
test
leave
test
daa
jo
cmp
lock
inc
gs
mov
insl
int
push
pop
xchg
sub
fdivrs
or
push
push
mov
pop
mov
mov
adc
cmp
xor
xlat
adc
pop
and
test
sub
je
cmpsb
inc
xor
leave
push
popa
cmpsb
icebp
hlt
rcr
xchg
jnp
jnp
mov
stos
fwait
lahf
mov
daa
subl
mov
push
test
dec
add
mov
addr16
dec
in
dec
std
addr16
lds
in
fwait
es
ret
int
scas
in
daa
push
jno
jne
inc
jns
test
mov
jbe
gs
filds
cltd
sub
daa
inc
rorl
loop
pop
adc
mov
mov
mov
leave
xlat
ja
mov
mov
add
test
or
mov
test
ret
fwait
pop
int
push
sub
sbb
xor
test
mov
scas
shlb
ljmp
ds
sti
pop
fmuls
jle
lods
fmuls
sbb
sub
stc
mov
sbb
cmpl
mov
push
xchg
pushf
out
xchg
rclb
and
inc
xchg
popa
mov
jbe
je
sub
push
popf
cs
or
in
iret
fwait
dec
cmc
fisubrl
pushl
hlt
fmull
cs
push
inc
testb
and
and
out
fstl
cmp
mov
testl
push
jg
sbb
adc
adc
mov
es
and
cltd
call
mov
push
mov
cmpsb
aas
out
cmp
and
outsb
xchg
xchg
pop
sub
or
and
add
inc
xor
lahf
loopne
js
dec
flds
and
mov
jl
lods
pop
sbb
and
movsl
mov
stos
pop
sahf
cmp
mov
adc
into
push
xor
pop
mov
xchg
mov
lret
adc
ss
test
nop
gs
sbb
sub
jne
pop
push
mov
in
lret
gs
out
sahf
ss
outsb
mov
inc
push
shrl
into
sti
dec
fnstcw
dec
push
sbb
inc
adcl
and
test
sti
iret
push
push
scas
les
mov
jp
adc
adcb
sahf
mov
push
pop
sahf
pop
or
mov
out
out
or
xchg
in
push
cmpsl
enter
xor
pop
jp
call
add
rclb
adc
jp
and
xlat
sub
int
mov
pop
ret
and
out
clc
mov
inc
andb
jns
sub
enter
or
xor
and
xorb
dec
int
dec
in
test
ret
repnz
fistps
pop
mov
mov
push
cmpsl
nop
cmp
adc
pop
fnstenv
jge
pusha
cltd
add
ror
aam
push
and
mov
xchg
cmpb
aad
popf
mov
mov
jae
xor
ficoms
in
add
enter
cmp
dec
sub
clc
arpl
inc
into
out
push
incb
jae
mov
mov
daa
xchg
outsb
lret
dec
in
xchg
test
jnp
arpl
je
je
enter
scas
imul
out
pusha
push
pop
sbb
add
and
jbe
hlt
jle
sbb
pop
and
pop
sbb
movsl
rol
jmp
fucom
inc
dec
loope
aaa
lea
out
jmp
sbb
jo
jge
inc
rclb
shlb
xchg
mov
arpl
addr16
inc
jo
push
xor
mov
jl
adc
sbb
pop
jae
js
xchg
loopne
jle
add
daa
adc
xrelease
repz
pop
popf
and
mov
popf
cmpsb
xor
sbbb
cmp
mov
insb
dec
jno
lock
adc
fidivrs
mov
xor
pop
fstl
in
push
sbb
int
mov
jp
addl
push
sub
push
pop
mov
pop
adc
je
pop
and
ss
and
test
sub
add
psrad
scas
add
xchg
push
test
mov
adc
mov
push
aaa
lds
add
jle
cmpsb
mov
cmp
icebp
insl
repnz
imul
dec
mov
js
xchg
push
movsb
sbb
nop
xchg
popf
push
pextrw
cmpsb
cltd
mov
rcr
dec
or
in
inc
pushf
mov
xor
push
mov
pushw
inc
pop
jg
inc
ds
daa
scas
add
pop
dec
rcll
cld
in
pop
rol
jmp
out
add
fisttpl
imul
movsb
into
lret
in
mov
jge
mov
cmp
or
dec
xor
add
adc
out
fsubl
mov
push
addb
or
sahf
pop
mov
sbb
and
repnz
sbbb
cmp
mov
mov
data16
int
out
fs
and
adc
xor
stos
and
sbb
pop
xchg
dec
rcl
push
inc
mov
push
sbb
repz
dec
shlb
rclb
and
mov
enter
mov
stc
pop
sahf
in
push
addr16
jl
outsb
adcl
insb
xor
mov
mov
ss
jno
or
mov
movsb
push
cmp
dec
jne
dec
push
or
or
push
sub
jnp
popa
mov
or
movsl
sbb
adc
xor
sub
clc
jle
test
sbb
adc
div
sbb
and
ja
adc
push
gs
lds
ds
in
test
mov
inc
push
mov
aam
push
stos
dec
add
and
pushf
addr16
ss
enter
jl
cld
repnz
sahf
push
push
fstl
push
dec
mov
loop
mov
imul
xor
lods
pop
jge
mov
stc
sbb
call
mov
fldl
loop
inc
pop
pop
ja
pop
jno
popa
push
or
mov
adc
xor
aaa
les
iret
sti
jbe
adc
adc
sbb
stos
mov
adc
lret
sub
sub
sbb
add
dec
pop
out
lea
mov
aam
cmpsb
push
adc
loop
inc
rcll
daa
adc
or
cld
sarl
lret
push
pop
cmp
push
jge
lret
out
adc
cltd
xor
dec
aad
or
mov
jae
lahf
push
jae
lds
ds
call
sbb
jge
cmp
mov
movhlps
out
xor
ficoml
je
push
enter
fcomp
inc
cmp
push
xor
mov
adc
xor
mov
stc
stos
mov
mov
sbb
xor
sbb
and
lods
cmp
cmp
xor
jbe
test
adc
jmp
mov
add
mov
repnz
mov
xchg
inc
dec
dec
sbb
cltd
or
or
or
or
gs
cmpl
lods
xor
sbb
pop
jae
shll
stos
ret
xor
icebp
mov
cmp
and
push
push
inc
dec
fsubrl
pop
inc
sbb
es
es
testl
cmp
jecxz
test
dec
ror
sti
jmp
jne
jo
sti
add
jb
mov
ftst
jne
andb
mov
cmp
aad
scas
loopne
mov
xchg
sti
sti
and
aaa
push
mov
mov
cmovg
addr16
and
es
imul
in
or
inc
filds
cmc
adc
xchg
test
xchg
xchg
test
mov
xchg
xor
cmp
mov
stos
xor
jmp
aam
data16
pop
jne
addr16
out
data16
das
cmp
popa
or
movsb
popa
or
mov
mov
jg
pop
push
test
mov
je
mov
and
lock
mov
es
xchg
lcall
gs
inc
dec
idiv
cmp
jmp
adc
adc
pop
dec
inc
jns
mov
push
dec
imul
lea
mov
mov
addr16
clc
push
and
shll
push
adc
mov
out
aad
xorl
or
jno
clc
fwait
bound
out
sbb
out
mov
push
jne
pop
das
fidivs
mov
inc
insb
loop
rcrb
adc
xchg
in
push
scas
loope
mov
sub
cmpsl
xor
scas
scas
push
xor
ret
mov
test
sbb
mov
shlb
out
pop
loop
out
push
movnti
push
hlt
mov
insl
dec
push
adc
xchg
je
lock
pop
adc
sub
sub
and
jae
jae
mov
int3
mov
dec
daa
push
jmp
out
lods
jecxz
lock
rol
inc
adc
or
cwtl
icebp
xchg
pop
in
daa
sbb
arpl
fiaddl
pushf
rcrb
daa
add
ljmp
mov
jle
push
fs
pop
or
xchg
mov
inc
lret
clts
push
adc
cmp
les
mov
push
mov
popf
lret
outsb
call
lret
out
pop
into
aas
adc
out
out
sbbl
sbb
add
orl
mov
pop
mov
mov
adc
cmpsb
ss
out
sarb
mov
and
mov
dec
imul
popf
push
movsl
jne
js
popa
hlt
cmp
jp
rolb
xchg
mov
lds
push
inc
fists
sbb
xor
xchg
xchg
icebp
or
std
inc
fildll
cmp
xchg
in
sahf
add
mov
lods
pop
ljmp
jo
sbb
mov
sub
jb
loope
push
sub
push
std
xchg
shll
dec
fldl
sbb
xchg
outsl
jecxz
pop
les
clc
jg
jge
or
cmp
jge
aaa
nop
push
jo
xchg
jge
idivb
push
cs
add
jmp
divb
cltd
add
int3
aam
jnp
andl
dec
movsl
dec
andl
fldcw
dec
cmp
cwtl
in
inc
stos
dec
testl
adc
dec
cmpl
xchg
pop
pop
fnclex
sub
and
adc
pop
mov
xor
hlt
sbb
push
repnz
inc
cmp
movsb
jecxz
scas
movsl
cmp
ss
clc
out
mov
lret
xchg
sbb
mov
lahf
movsl
or
jnp
dec
repz
cmp
jb
repnz
je
ret
adc
pop
jmp
cmp
adc
testb
sbb
ret
or
addr16
loopne
hlt
dec
inc
or
pop
xchg
in
loope
sbb
cmp
push
dec
push
xchg
in
jecxz
adc
xor
faddp
lds
test
sub
push
mov
xor
xchg
movb
out
sub
imul
and
adc
mov
jl
pushf
loop
xor
adc
lret
adc
mov
les
dec
std
jmp
push
xor
jecxz
mov
fsubrs
jp
arpl
mov
xor
repz
pop
mov
repz
fimuls
repnz
cli
cwtl
pop
push
cmpsb
sub
es
leave
sbb
xchg
hlt
lret
jle
xchg
pop
out
imul
sub
inc
jmp
and
popf
test
cli
or
or
mov
jmp
fstpt
enter
sub
mov
inc
jno
pop
push
dec
adc
mov
add
push
jmp
andb
pop
scas
sub
ja
push
out
lret
sub
mov
pushl
mov
xor
insb
loop
test
repz
loop
pop
loope
push
in
jae
mov
xchg
mov
xchg
loopne
jl
xchg
cmp
mov
dec
mov
pop
or
xor
out
test
mov
sti
lea
lahf
stc
ret
int
xor
xchg
mov
cmpl
push
adcb
cltd
sub
fwait
and
mov
mov
mov
cmp
test
sbb
call
dec
jno
mov
inc
xchg
jnp
cmpsb
int3
lcall
or
xor
and
ljmp
inc
jno
inc
cmp
inc
or
pop
mov
pop
add
ss
push
mov
enter
sbb
fidivrs
data16
in
int3
ljmp
sbb
hlt
adc
mov
dec
lea
hlt
fildl
lret
jle
mov
dec
stos
test
cmp
cltd
cld
out
push
popl
xor
lret
dec
lea
test
mov
push
sub
or
push
in
inc
test
jno
icebp
sub
sub
or
ljmp
xor
into
repz
repnz
nop
aas
aad
mov
lods
out
ja
mov
pop
test
cli
sub
je
insl
ficoml
sub
inc
movsl
xor
cmp
lahf
daa
call
shlb
pop
jne
mov
sub
jmp
in
fisttps
adc
push
lret
jmp
mov
sahf
xchg
cmpsl
stos
inc
outsl
ficoml
stc
rcl
sub
stc
gs
fisttpll
dec
sub
fiadds
nop
mov
and
test
mov
lahf
fwait
sbb
xchg
fdivrl
mov
dec
sub
pop
aad
inc
sub
insl
add
jbe
mov
sbb
pop
dec
ljmp
jae
mov
push
sbb
xchg
xlat
xor
inc
sub
lods
cmc
inc
sub
dec
jbe
scas
pop
dec
mov
cmpl
push
ret
and
jl
sbb
and
cmpl
xchg
lods
mov
pushf
sub
add
xchg
inc
aas
cltd
xchg
fwait
or
mov
jp
out
pushl
xlat
xor
pop
into
ret
pop
jae
adc
xor
mov
or
lds
insb
mov
insb
popa
adc
cmp
inc
pop
pop
int3
jle
push
mov
repnz
in
mov
adc
nop
addr16
and
test
rcrl
ljmp
faddl
lods
cmp
sub
add
add
repz
dec
es
shll
or
dec
shrb
pop
dec
mov
and
std
jecxz
dec
jnp
aad
daa
shrl
pop
or
bound
jo
fstl
hlt
aaa
pop
sbb
insl
mov
inc
ret
xchg
stos
cmp
jno
lock
xor
int3
push
or
mov
pop
in
mov
mov
jae
arpl
sub
repnz
dec
cld
adc
mov
scas
push
movsl
xchg
lcall
clc
jno
jp
lret
stc
jmp
and
vpaddb
add
fcmovbe
cmc
sub
push
pop
test
jmp
lock
xchg
in
push
inc
xor
fistpl
out
xor
push
in
mov
adc
jp
cmp
outsl
pop
jmp
dec
jns
sub
xorl
xor
outsl
mov
enter
xchg
cmc
sahf
rclb
cmpsl
jl
stos
pop
negb
pusha
mov
pushf
adc
out
inc
subl
mov
sbb
mov
push
rclb
lahf
and
xlat
das
fwait
lahf
or
faddl
dec
push
lret
jnp
sti
cs
pop
push
hlt
sbb
mov
sub
je
mov
roll
inc
aaa
sub
nop
dec
mov
lret
sub
add
jp
lock
pop
sub
pusha
out
sub
mov
aaa
or
xor
jb
jbe
mov
rclb
and
mov
in
add
fs
mov
mov
nop
or
dec
std
iret
mov
xchg
pop
inc
jp
xlat
lds
repz
gs
adc
jge
icebp
jecxz,pn
mov
mov
popl
pop
add
adc
sbb
dec
cmp
mov
jb
jge
lods
inc
rclb
lods
je
jl
mov
stos
adc
aad
mov
ret
dec
sbb
or
mov
jno
repz
dec
orb
pop
xor
hlt
dec
outsb
rclb
roll
sbb
lea
pop
dec
sub
pop
sbb
out
push
dec
icebp
xor
jmp
test
in
lahf
fs
and
and
sub
mov
or
test
ja
cmpsb
xor
jbe
add
loope
mov
test
aam
icebp
aaa
mov
jo
pop
addr16
mov
stc
and
mov
into
fdivrp
mov
and
adc
es
xchg
mov
cmc
rcll
mov
cwtl
ret
adc
aad
mov
push
sbb
imul
rcrl
dec
imul
xor
aad
iret
adc
jo
aaa
lds
popf
outsb
daa
xchg
push
fidivrl
pop
cmc
out
scas
in
jge
leave
xor
cltd
in
das
pop
dec
dec
testb
in
mov
dec
negb
pop
xchg
push
jb
xor
sub
sbb
mov
jnp
cld
ja
pop
adc
cli
adc
mov
xor
jl
and
arpl
push
jp
or
push
push
sub
cmp
mov
fcmovnu
leave
dec
mov
lds
pop
insb
add
inc
bound
loop
adc
lret
or
pop
test
fisubs
mov
ret
outsb
or
mov
sbb
rcl
and
and
fwait
jecxz
add
or
and
rolb
pusha
xchg
cld
scas
xor
rolb
cltd
iret
mov
cltd
mov
notl
jbe,pt
lock
nop
add
push
pushf
or
addl
sub
inc
gs
pushf
mov
mov
data16
mov
data16
push
call
inc
loop
stos
imul
notb
lea
std
inc
pushf
or
mov
cmp
mov
or
mov
lods
dec
shll
inc
mov
pop
in
rcrb
int
mov
mov
pushf
stos
dec
add
xchg
mov
aad
pop
cltd
push
out
lcall
sub
pop
movsl
pop
shl
sub
shl
push
cmp
sub
sub
sti
or
pop
mov
inc
scas
pop
lcall
sub
int
call
mov
scas
es
leave
push
sub
daa
fsubs
mov
inc
inc
lret
outsl
test
in
or
mov
jo
jae
xor
insb
imul
inc
lcall
pushf
pop
and
scas
cmp
loopne
mov
pop
mov
pop
bound
sub
jmp
xchg
imul
decl
and
or
mov
repnz
cmc
sbb
push
and
icebp
pop
repnz
mov
clc
sub
lea
pop
int
inc
sub
imulb
nop
mulb
addr16
cmp
out
pop
push
xor
out
cmp
jle
scas
shll
aaa
fistps
mov
jb
adc
xor
jns
je
xor
pop
add
push
testl
insb
or
mov
mov
in
mov
cmpsb
sub
mov
xchg
sarb
mov
shlb
ret
xor
sbbb
sub
sbb
add
rorl
lahf
xchg
ret
cli
cmp
mov
rcl
fidivs
mov
mov
cmpsb
jmp
mov
int3
cli
cmp
xchg
ffree
aaa
insl
adc
pop
add
jns
into
aad
rorb
mov
cmpsb
sub
inc
shll
loop
xchg
inc
fstps
fwait
sub
gs
cmp
cmpsl
ss
lahf
cmp
mov
imul
pushf
adc
cld
gs
xchg
inc
movsl
mov
push
stc
popf
xchg
loope
jne
pop
mov
dec
dec
xor
bound
or
adc
sub
sub
aas
enter
fwait
outsb
or
inc
filds
test
idivb
xor
mov
lds
jne
cmp
cmp
lds
aas
xor
mov
lods
rcrb
pop
pop
cmpsb
addb
xchg
pushf
xor
or
test
ljmp
jns
jp
popa
inc
ret
mov
inc
mov
push
into
aas
mov
xchg
stos
xlat
iret
in
jge
lds
or
loopne
cld
das
imul
dec
clc
sub
sbb
lahf
push
ret
in
or
cmp
fimull
push
mov
xlat
add
push
push
icebp
out
and
cwtl
cld
cli
pop
push
xor
push
add
pop
cmpsb
pop
mov
push
pop
push
in
dec
lea
add
gs
mov
or
cli
rorb
or
daa
pop
and
jo
out
nop
and
xor
ss
mov
shrb
and
push
std
fstpt
nop
pop
movsb
je
inc
mov
icebp
inc
pop
aaa
hlt
push
roll
and
jecxz
and
xchg
jp
push
adc
xchg
push
leave
adc
cs
sub
mov
gs
mov
out
push
loope
push
jl
insl
sahf
imul
push
int
sarb
add
cld
vpcmpeqd
jle
ret
adc
lds
mov
test
shll
out
jne
pop
imul
pop
shrl
outsb
jmp
inc
test
cmp
pushf
cli
sbb
jae
mov
adc
or
je
sbb
inc
pusha
ficomps
inc
lret
pop
aam
adc
popa
pop
fwait
add
out
sti
pusha
sbb
test
ja
lock
int
int
loopne
pop
cmc
lcall
adc
aas
mov
mov
xor
lock
mov
inc
testb
adc
jo
lret
cmp
pop
jne
ret
pop
and
ret
ficompl
dec
popa
push
test
mov
add
nop
jae
fmulp
mov
repz
out
popf
mov
jns
mov
xor
jge
ret
lret
jbe
mull
or
push
out
xor
cmp
aad
sbb
or
dec
pop
sub
mov
sarl
push
sbbl
jl
adc
sub
cmp
jbe
ret
xor
mov
stc
fimuls
mov
mov
xchg
sub
adc
mov
cwtl
out
repnz
scas
xor
cmp
into
push
lock
es
cs
sbb
add
cmp
cwtl
lahf
mov
and
pop
pusha
pop
sbb
and
frstor
lcall
in
test
mov
push
inc
iret
mov
mov
pop
jo
mov
mov
or
stos
pop
push
push
mov
jb
enter
xor
push
out
sub
fistps
aam
clc
fiadds
int
mov
popa
repz
int
lret
pop
dec
adc
enter
add
push
mov
mov
adc
cmpl
sarl
jmp
pop
cmp
shl
sub
int3
call
in
xchg
mov
jmp
dec
xchg
mov
loop
ss
pop
pop
shl
flds
lahf
movsb
add
jmp
repnz
mov
xchg
sub
dec
mov
lret
rcrb
ljmp
jo
stc
pop
aas
push
cli
loope
dec
sarb
jmp
adc
mov
mov
leave
dec
lds
jg
movsl
xor
adc
mov
loopne
xlat
pop
mov
mov
jno
test
cmpsb
sub
adc
mov
stc
scas
add
push
bound
test
out
andl
ljmp
outsb
arpl
mov
int
sahf
sbb
cmp
jmp
add
xchg
jns
jle
jae
scas
xchg
iret
pusha
mov
xor
cs
push
jne
cmpsl
dec
sti
out
mov
pop
push
mov
adc
jge
and
ss
xchg
adc
adc
shlb
push
fbld
jbe
cwtl
add
decl
clc
scas
mov
lods
lods
je
cwtl
xorl
jo
popa
jecxz
clc
stos
sbb
dec
lods
data16
add
insl
or
mov
adc
fisubl
sub
mov
prefetch
or
cld
mov
rcrb
mov
stos
testl
cmc
push
xor
loop
mov
or
mov
inc
inc
inc
sbb
inc
in
orb
clc
jl
add
xor
test
lods
sbb
pop
xchg
push
in
mov
cmpsl
sub
sbb
cmp
mov
lret
sbb
xchg
xchg
dec
sbb
and
adc
pop
nop
xor
in
insb
ds
enter
fnstenv
dec
in
rcl
ret
dec
inc
mov
inc
pshufw
push
mov
clc
bound
loopne
fidivrl
sbb
aas
fidivrs
inc
mov
or
mov
rcrb
out
fadds
imul
push
ljmp
jle
cmp
pop
mov
ret
adc
lahf
adc
jl
lods
leave
es
xor
sarb
sbb
loop
inc
jle
jmp
sbb
sbb
das
push
lret
ret
push
inc
jp
enter
add
adc
mov
sahf
sti
add
sbb
out
ret
xchg
and
sub
aas
jnp
je
push
aaa
mov
push
xchg
int3
mov
mov
ja
dec
jge
enter
xchg
lret
jmp
push
mov
dec
test
icebp
pop
dec
into
cmpsb
roll
push
cmc
xlat
shll
lods
pusha
lods
sbb
inc
adc
in
subb
jo
sub
fdivrl
out
xor
rcl
fwait
sbb
lea
inc
push
pushl
inc
dec
dec
mov
mov
cmp
sub
data16
jae
cmp
push
mov
jne
nop
mov
in
and
jg
icebp
test
je
loop
sahf
pop
add
mov
pusha
loope
scas
fst
jmp
mov
out
roll
or
pop
imul
gs
shl
inc
lret
sahf
and
ret
es
sbb
shll
dec
jle
xchg
sahf
sbb
push
arpl
pop
outsb
stos
imul
jbe
test
lods
cmp
mov
jbe
jl
rcll
nop
pop
addb
repz
sub
popf
xor
das
or
xchg
push
mov
iret
push
inc
lret
xchg
pop
mov
mov
mov
cmp
cmp
cs
or
decl
mov
pop
ljmp
sti
mov
neg
scas
ds
ja
sub
jo
sahf
cmp
aam
dec
mov
dec
in
je
xor
push
pop
fcoms
cld
cmp
movsb
shrl
and
dec
or
or
xor
out
ficoms
dec
loopne
jl
jnp
aaa
bound
std
cmp
add
lods
dec
add
int
mov
sub
sbb
sub
ret
push
lahf
pop
movsb
push
aam
nop
lret
aas
out
push
ret
add
sbb
mov
mov
mov
mov
cli
push
xor
fldl
out
push
or
mov
push
xor
fbstp
inc
lea
fsubs
jnp
adc
pop
sub
repnz
dec
jl
xor
dec
jl
arpl
push
mov
insl
xor
jl
popf
in
ss
ljmp
push
pop
mov
mov
adc
test
mov
mov
mov
jno
fisttpl
scas
mov
data16
xorb
xor
sub
cltd
jno
sahf
jae
rclb
in
push
cmp
adc
lods
xchg
test
cs
mov
into
inc
push
ret
filds
push
je
xor
adc
sbb
sbb
push
push
enter
data16
sbb
icebp
adc
aad
mov
add
push
aad
xchg
sbb
stos
dec
ficompl
lods
leave
ret
pop
iret
sbb
mov
les
daa
and
dec
shlb
cwtl
sub
ret
sbb
ret
fnsave
ficompl
adc
outsb
fcompl
enter
shlb
add
dec
int3
stos
lods
mov
xor
xor
clc
sbb
mov
aam
pop
xor
ljmp
push
sub
xchg
lods
xchg
ret
add
inc
pop
les
in
xchg
or
push
mov
das
or
jmp
xchg
push
inc
popf
into
and
loope
dec
sbb
cltd
lret
push
or
iret
dec
sbb
andl
fisubrs
jns
lahf
lds
mov
std
xchg
or
adc
add
jns
adc
push
xor
dec
pop
jbe
mov
fsub
inc
daa
and
stos
aaa
cmp
dec
or
xor
cmp
adc
jns
and
mov
pushl
fnstsw
fsts
ds
xor
mov
out
mov
leave
xor
mov
adc
cld
jae
xor
test
dec
add
xor
in
cmpsb
mov
add
jae
xor
arpl
insb
fs
mov
dec
js
jns
lds
aam
mov
inc
add
loop
ja
jge
cli
test
addb
int
pop
rorl
nop
shll
fsubr
out
add
xchg
std
mov
pop
iret
stc
mov
mov
aas
sbb
sbb
pop
sub
sub
mov
push
push
lods
lcall
das
ret
mov
addl
xchg
jle
mov
mov
rcrb
in
sub
insl
inc
int
inc
mov
sub
jp
jbe
jns
pop
push
dec
xor
addb
xchg
and
lods
repz
stc
lret
push
jbe
xor
aas
rclb
xchg
xchg
jg
jo
stos
shll
cld
mov
lret
insb
seta
jle
pop
inc
sbb
ret
in
fidivl
mov
scas
sub
loope
sbb
inc
lcall
ret
das
fwait
ret
xchg
int3
dec
jg
jmp
outsb
int
xlat
cmpsl
cltd
aam
fbstp
test
shrl
lds
js
cmp
lds
rorl
jno
xchg
cmp
stos
mov
mov
pop
mov
pop
dec
add
pop
sbbl
popf
mov
outsl
movsl
clc
lcall
jle
or
add
rcll
es
cmp
xor
stos
cmovs
pop
ja
add
pop
add
cmp
or
rorb
lret
arpl
ss
fisubrl
or
mov
std
leave
xor
hlt
fistl
orl
lahf
call
shrl
mov
rcrb
mov
pop
xor
sub
inc
or
subl
xor
in
jg
xor
divb
push
sub
leave
adc
pop
std
or
and
hlt
pop
ja
cmp
js
iret
ljmp
add
lods
mov
lock
jne
or
mov
xchg
cmp
push
add
and
cmp
pop
pop
mov
and
xchg
sub
pop
or
inc
bound
xor
popa
xchg
lret
and
xchg
mov
sub
jns
int
mov
mov
inc
aad
adcl
mov
and
jmp
pop
jne
fcoml
lahf
repz
vorps
outsb
mov
add
xorb
fs
repz
pushf
cmc
adc
push
leave
jge
test
sub
ss
push
sub
add
or
push
xchg
fistl
ret
and
shl
or
inc
subb
pop
les
lods
aas
aaa
push
sbb
inc
push
sbb
inc
xchg
and
jne
jae
xchg
cmc
push
je
aaa
test
fsts
mov
pop
cli
scas
dec
and
in
xchg
adc
icebp
ficompl
push
jle
push
xchg
sbb
fildl
dec
xor
pop
jne
jl
push
adc
sub
test
mull
insl
imul
jo
scas
lds
push
roll
pop
scas
cmpsl
push
shrb
and
pop
repz
fadd
cld
adc
push
clc
xor
nop
out
or
mov
xchg
push
push
lret
jbe
in
jle
sub
xchg
inc
cmp
in
mov
shr
popa
xor
mov
fwait
or
aam
push
notb
or
inc
or
mov
mov
test
mov
fsubr
insl
mov
pop
and
adc
fisttpll
outsb
add
test
mov
aaa
adc
aas
loope
lahf
push
and
out
xchg
mov
add
adc
dec
cli
ret
pop
mov
jbe
mulb
jl
jle
test
mov
sar
push
add
push
jo
loopne
inc
cmp
out
cltd
outsl
in
push
push
shl
xchg
xor
clc
fdivl
mov
add
jae
or
movsl
jg
mov
jp
js
mov
inc
cltd
int3
jo
out
sbb
cmp
leave
scas
push
cmp
mov
add
aam
icebp
dec
out
adc
mov
ja
jmp
push
int3
jl
loope
push
repnz
lock
dec
xlat
xor
xor
mov
loope
dec
mov
sub
sub
scas
ds
mov
inc
adc
push
xchg
ljmp
inc
stc
jl
pushf
push
jne
pop
mov
imul
sub
movsl
xor
andl
lcall
shr
sbb
fmull
ljmp
aam
cmpsl
movsl
dec
adc
mov
iret
ret
mov
es
push
jle
std
ja
sub
push
push
xor
scas
inc
sub
decl
mov
cltd
in
push
addl
scas
inc
xchg
sbb
sbb
cs
test
cmp
jnp
mov
jns
movsl
inc
int3
gs
inc
mov
dec
imul
xor
faddl
adc
out
jnp
jbe
insb
lds
insb
test
leave
insb
xor
mov
das
push
inc
bound
shlb
pop
pop
mov
mov
int
fldl
call
jp
punpckhbw
out
jle
mov
clc
sub
fisubrl
inc
daa
sub
or
into
push
jge
cmp
pop
fldcw
sub
das
jbe
sbb
inc
rol
ret
add
jns
sub
jle
shr
add
imul
sahf
adc
and
jmp
add
or
and
or
stos
or
add
rcl
addr16
insb
xlat
or
fcoml
cli
jecxz
test
push
js
jge
rep
sbb
js
xchg
pop
jb
xchg
repnz
test
or
fidivrl
imulb
mov
sub
das
cmc
cmp
inc
mov
xchg
cmp
adc
sub
adc
sub
xlat
push
imul
in
add
sub
lcall
jge
add
mov
pop
jl
pop
bound
xchg
in
inc
push
mov
xlat
fwait
sbb
rorl
lds
and
loop
mov
sub
sahf
jne
mov
jle
jge
push
mov
ja
sub
xchg
xlat
rclb
jbe
arpl
sub
pop
sub
lret
int3
mov
or
mov
imul
incl
adc
popf
cmpsl
dec
push
aad
sub
shll
mov
out
mov
pop
ret
xchg
sub
push
and
sub
or
movsb
je
push
jo
daa
xorl
aam
cmp
and
loopne
stos
aad
push
lahf
jp
mov
push
cwtl
jp
dec
inc
rorb
dec
cs
cmp
cltd
adc
dec
dec
test
loopne
mov
mov
rorl
movsb
and
mov
push
adc
inc
pop
cmc
and
pop
inc
cli
pop
arpl
out
repnz
lahf
inc
inc
es
int
std
clc
jmp
sti
mov
mov
int3
scas
xchg
fsts
inc
nop
cld
sbb
dec
push
adc
pop
ret
inc
jge
inc
out
loopne
in
mov
test
push
hlt
hlt
rolb
shlb
sbb
fisubs
push
sahf
frstor
fists
sar
xchg
mov
jns
cmpsl
addr16
fmul
clc
xor
or
dec
in
aad
insl
cmp
movsb
xor
jge
add
js
sub
or
cwtl
loop
mov
mov
sub
ja
data16
outsb
push
enter
sub
je
fwait
and
iret
xchg
and
xchg
pop
outsb
add
sarb
mov
or
jge
adc
add
sbb
sub
int3
hlt
mulb
cmovno
aaa
pop
mov
scas
mov
sub
add
enter
mov
mov
fldl
addr16
imul
jl
xchg
mov
pop
loopne
sbb
mov
repnz
cmpsl
jb
adc
aaa
jb
dec
roll
push
addr16
add
xchg
icebp
je
jp
mov
pop
sub
and
lcall
sbb
xlat
mov
jbe
adcl
pop
test
fiadds
mov
push
int3
test
out
or
inc
loopne
xchg
sub
lcall
or
cmp
xchg
loope
lahf
aaa
push
jne
mov
push
mov
fnstsw
mov
ret
dec
stos
out
jmp
ljmp
pop
pop
adcb
cmp
imul
adc
and
lret
shl
stos
push
enter
sarb
fdivrp
or
pop
mov
inc
xchg
sub
lods
mov
sti
add
repnz
popf
inc
movsl
mov
push
mov
push
lods
mov
jg
sub
push
pop
and
mov
imul
mov
inc
cmpsb
dec
lods
sub
fcomps
adc
mov
bound
xor
adc
in
push
xor
inc
mov
leave
xor
mov
mov
mov
enter
ret
xchg
fs
xchg
test
adc
xchg
stc
jnp
stos
iret
mov
bound
and
jmp
add
inc
cmp
fisttpl
in
loopne
mov
or
and
repnz
or
int
fwait
push
xchg
mov
and
jno
js
fdivr
repz
mov
xlat
daa
inc
inc
shll
sti
or
push
ljmp
mov
repnz
pop
cmc
out
and
fwait
add
ret
arpl
lds
mov
insl
fcoms
enter
lret
ret
dec
mov
arpl
fists
sub
xor
lcall
pop
mov
dec
jne
pop
lds
push
mov
and
push
pop
mov
testb
lods
xchg
bound
mov
popa
lods
pop
iret
repnz
mov
or
in
int3
popl
imul
adc
pop
jp
xlat
mov
bound
pushf
xor
jne
movsl
xlat
or
mov
in
pop
mov
pop
xchg
fdivrp
sub
daa
out
mov
stos
fidivs
mov
dec
test
adc
cs
pop
insb
outsb
jle
push
aam
clc
movsl
adc
testb
add
cmpxchg
pop
lods
jae
jbe
data16
enter
xlat
lods
in
jns
and
ret
jbe
test
pop
jns
push
mov
cltd
call
adc
adc
push
loop
mov
aaa
mov
sub
cltd
jns
popf
loop
imul
mov
xor
dec
mov
out
jb
filds
fdivrl
into
test
lds
imul
jbe
sti
xchg
sbb
and
mov
std
add
dec
xchg
sbb
lock
sti
mov
in
xor
inc
jb
icebp
lret
cmc
dec
cmpsb
je
mov
sub
jge
iret
push
mov
lcall
xchg
insl
int3
into
pop
mov
aam
pop
in
lret
mov
out
or
movsl
or
dec
mov
cmpsl
adc
lods
iret
inc
and
shlb
and
mov
sti
icebp
cmp
or
jo
or
xchg
test
sub
daa
cmp
or
push
js
addr16
icebp
or
mov
cmp
jae
outsb
movsb
arpl
xchg
aas
inc
xor
pop
xor
cmp
ret
or
xor
jbe
mov
outsl
test
pop
and
insb
jae
adc
xor
xchg
shlb
pop
mov
pop
shll
fcos
pop
rcrl
xor
inc
shlb
or
cld
mov
test
aad
ja
loopne
pop
xchg
push
enter
out
cli
ret
mov
jae
cwtl
loopne
jg
or
mov
in
loope
mov
arpl
push
loope
inc
add
fmul
jmp
out
pop
adc
cmpsb
lea
fwait
mov
out
mov
push
bound
shll
push
pop
mov
inc
jl
xchg
mov
add
sarb
stos
mov
and
pusha
xchg
and
dec
nop
xchg
cmp
rorb
gs
mov
and
in
dec
fstpl
jne
cltd
addr16
ret
pop
jmp
mov
aas
mov
rolb
std
and
movsb
pop
mov
jno
sbb
xor
add
pop
ja
sbbl
mov
mov
xchg
je
sbb
adc
sti
aam
loopne
cmp
pushf
mov
xchg
mov
ds
andl
xchg
ss
into
push
pop
in
or
pop
cwtl
jne
mov
nop
mov
je
pop
or
cmp
popf
mov
jecxz
incb
add
ret
mov
cli
in
jno
addr16
push
arpl
mov
pusha
in
xor
cmp
rcrb
jecxz
cli
mov
mov
push
inc
sub
arpl
adc
int
sbb
enter
sbb
cs
iret
das
sbb
push
jecxz
sbb
outsb
mov
out
iret
nop
push
push
adc
inc
imulb
cmp
hlt
mov
xchg
inc
mov
cmc
in
jge
out
pop
sbb
pushf
mov
mov
sub
sub
lcall
cmp
or
jb
loopne
or
pop
sub
loop
shll
repz
jecxz
das
mov
pop
loopne
pop
bound
pop
sbb
push
push
fistpl
adc
in
mov
inc
sti
xchg
pop
lods
cld
lods
push
shr
jno
mov
jb
mov
dec
jae
push
sub
jne
or
fnsave
jp
adc
loopne
pushf
scas
std
mov
cli
mov
cmp
hlt
jnp
jecxz
add
xchg
xor
ljmp
test
dec
or
sti
hlt
jge
dec
jp
in
push
or
fadds
ret
xchg
in
ss
jne
mov
xlat
mov
pop
out
insb
out
in
or
mov
push
movsl
sbb
push
out
mov
mov
jne
jae
loopne
jecxz
sub
push
lret
cmpsl
add
jecxz
cmp
jo
iret
xchg
mov
xchg
dec
mov
jl
mov
adcb
push
or
jle
add
sbb
loop
mov
movups
xchg
adc
lahf
dec
outsl
subl
and
mov
aaa
xor
inc
sbb
pop
mov
mov
inc
pop
mov
mov
out
shll
rcrl
push
out
inc
adcb
dec
stos
inc
cmp
cmp
xor
xchg
addr16
daa
xor
addr16
sbb
sbb
sub
imul
and
inc
inc
sub
jb
mov
pop
mov
mov
fmull
mov
mov
cwtl
jle
inc
add
hlt
aas
jle
pop
dec
mov
sahf
scas
stc
jmp
stos
inc
mov
test
decl
lods
sbb
clc
in
dec
test
xchg
xchg
or
dec
xlat
jle
add
xchg
sub
xor
xlat
dec
push
shrb
mov
jb
jbe
notl
sahf
in
outsl
push
ftst
pop
cwtl
data16
imul
sub
jno
scas
pop
notb
xchg
test
mov
or
add
stos
cli
inc
jg
jecxz
jp
mov
cmp
insb
loope
or
inc
lds
and
or
test
lods
fsubl
fs
xor
xor
pop
pushf
cltd
andl
jo
test
mov
js
int3
push
outsl
arpl
int
mov
imul
or
mov
mov
out
mov
fsubl
scas
or
add
add
movsb
imul
ljmp
inc
lret
jne
lret
cmp
xorb
das
ret
adc
jmp
bound
pop
pop
push
cmpsb
sysexit
pushf
mov
xor
xor
test
push
sti
cs
and
popa
dec
leave
lret
xlat
lea
js
ljmp
das
mov
repnz
adc
add
shrb
adc
orb
mov
rolb
lret
adc
jbe
ds
jae
idivl
imul
xor
lcall
mov
push
xchg
jle
pushf
inc
insb
into
mov
push
mov
mov
addr16
std
jne
cli
jno
jle
adc
idivb
in
iret
loop
add
cmp
imul
ret
and
push
aaa
or
gs
out
pop
call
repz
xor
js
sar
into
fidivs
popf
push
inc
les
dec
aas
mov
ret
cmpsl
xor
cmp
mov
push
in
add
stos
loop
pop
inc
imul
inc
dec
cltd
dec
in
sub
inc
adc
cmpsb
test
fsts
inc
mov
ds
out
sbb
lret
loope
push
mov
nop
xorb
mov
jg
sub
lods
imul
out
pop
inc
popl
cmc
sbb
jne
shrl
jne
or
ja
scas
add
sbb
add
mov
push
in
add
out
bswap
cmp
es
adc
and
sbb
shlb
bnd
xor
adc
mov
test
ljmp
orl
dec
mov
packsswb
call
call
stos
dec
xchg
cmp
mov
mov
repz
out
add
das
neg
dec
xchg
lock
jecxz
clc
mov
adc
pop
mov
push
xor
lcall
mov
xchg
jne
or
jp
push
popa
movsb
loope
mov
pop
xchg
inc
xchg
pusha
testl
jg
int3
push
stc
das
sbb
inc
cmp
mov
vfnmsubps
dec
daa
xchg
pop
repz
mull
pop
or
fs
movsb
sbb
mov
xlat
test
dec
xchg
lret
pop
mov
outsb
inc
mov
push
pop
add
cmp
inc
xchg
fistps
and
out
push
int3
cmp
aam
xchg
aas
xchg
sub
mov
push
mov
and
mov
dec
inc
adc
adc
arpl
inc
test
cmp
inc
jne
inc
sbb
dec
aaa
or
xchg
es
push
in
lcall
or
ja
je
out
adc
mov
mov
sbb
pop
and
rcl
add
adc
xchg
jp
ret
sahf
arpl
out
repnz
repnz
and
mov
adc
loope
pop
out
inc
std
test
ffree
push
and
push
sub
std
popa
xchg
jnp
out
pop
adc
push
pop
arpl
adc
add
cmpsb
addl
jmp
aas
cmpsl
sahf
xchg
xor
adcb
push
icebp
push
pop
pop
adc
add
or
test
outsl
jg
add
add
ret
test
dec
dec
leave
jge
cmp
mov
pop
out
xchg
cmpsb
sbb
icebp
jg
repnz
sbb
add
mov
lcall
repnz
mov
test
jmp
mov
lock
je
out
iret
or
jne
dec
loopne
imull
xchg
mov
bnd
mov
ds
sub
sbb
jns
mov
sarb
dec
add
aas
out
mov
cmp
mov
lea
inc
std
add
cmp
test
ljmp
jecxz
lock
jmp
sub
rclb
fldenv
andb
lea
ret
dec
imulb
dec
sub
lret
mov
sarl
cmp
mov
push
loope
dec
fwait
in
hlt
sahf
inc
stc
xor
add
xchg
xchg
movsl
push
push
mov
jg
mov
mov
xchg
aad
and
stos
xor
mov
fimull
mov
or
jmp
push
push
sarb
pop
push
sub
or
mov
jl
mov
outsb
outsb
insb
adc
loop
ljmp
xchg
or
scas
movsl
je
and
inc
fstpl
or
xchg
ret
push
movsl
jg
cmp
pop
xlat
rcll
orl
rclb
pop
fistps
push
jnp
test
fs
les
imul
lods
push
sub
jl
adcb
jecxz
sub
pop
xor
enter
mov
pop
xchg
mov
pop
bound
pop
and
lods
mov
stos
js
mov
xor
test
dec
daa
dec
mov
jae
mov
jmp
mov
jmp
rcl
sub
push
lods
xchg
out
inc
in
lcall
fcoml
icebp
inc
js
or
mov
or
inc
add
lea
fs
fnsave
test
fistpl
sub
add
pop
xchg
pop
divb
call
mov
cmp
push
sbb
jmp
flds
int
and
pop
out
cmp
movsl
jbe
dec
dec
mov
pushf
dec
mov
cmp
lods
and
mov
inc
or
cli
insb
add
fcomip
jo
movsb
js
sbb
aas
or
dec
je
push
mov
xor
inc
dec
pushf
out
xor
rolb
mov
add
cmp
and
into
inc
stos
int
mov
fwait
mov
xchg
les
pop
in
mov
cli
add
sti
lret
and
add
repnz
xor
push
mov
sbb
mov
out
aad
lcall
inc
mov
stc
cwtl
xchg
in
fdivr
out
mov
vfrczsd
jb
das
stc
cmp
divl
rclb
cli
shlb
das
ret
in
cmp
pop
scas
cmp
fcmovb
push
test
push
push
mov
test
push
push
addl
nop
or
mov
in
out
mov
push
cltd
cli
jl
dec
inc
jmp
push
push
shl
rcl
imul
mov
lods
scas
in
and
add
je
aaa
add
xor
and
inc
pop
cmp
pop
fsubrs
les
mov
aaa
jo
pop
mov
shrb
add
xchg
mov
cmp
in
jle
xor
pop
xor
mov
xor
sub
lock
or
sbb
jp
and
cmp
jmp
push
dec
push
jecxz
xor
jl
lcall
inc
pop
aad
dec
das
xor
dec
jne
popf
lods
push
out
cmp
jmp
xor
mov
sub
mov
jno
inc
in
push
xor
mov
aam
hlt
inc
in
dec
andl
jbe
fiadds
dec
dec
loopne
stos
fldl
js
dec
and
pop
xchg
fidivrl
and
adc
mov
aaa
das
cmp
pop
jecxz
jne
xor
out
jle
add
dec
push
add
mov
jae
push
stc
pop
mov
stc
lcall
fwait
mov
lods
jns
bound
cmp
jns
mov
adc
imull
stos
repz
into
movsb
push
mov
sbb
loop
jmp
insb
inc
daa
inc
pop
test
jmp
jmp
xchg
push
lock
decb
cmp
xorb
pop
pop
shll
push
test
dec
outsb
inc
shrb
sub
push
cmpl
je
jmp
lret
leave
sbb
inc
scas
int3
cmpl
jmp
fwait
adc
stos
xchg
dec
inc
sub
jo
cltd
mov
insb
sbb
jp
xlat
mov
stos
clc
inc
adc
mov
inc
add
dec
xchg
imul
lret
inc
xchg
andb
aaa
dec
ds
cltd
lock
sub
push
ljmp
addl
ja
push
lods
inc
shll
and
lds
fldl
cli
xor
enter
jecxz
stos
icebp
fst
adc
push
push
lods
mov
and
dec
lds
cmp
fcompl
scas
loop
inc
push
dec
arpl
insl
js
or
push
cmp
push
leave
loop
mov
ja
rclb
sub
ss
test
mov
mov
cs
cmpsl
sbb
sub
mov
std
mov
sbb
mov
cwtl
insb
aaa
loop
push
rcrl
mov
xor
nop
mov
scas
fs
in
or
das
pop
mov
in
and
nop
cmp
fwait
in
mov
ja
cmp
sbb
mov
mov
sub
ror
mov
icebp
fidivs
add
and
xor
loop
push
stc
in
in
jae
sti
fwait
paddb
mov
push
cmp
push
jge
shlb
dec
pop
xchg
add
sub
cmp
sbb
lcall
or
or
sbb
xchg
fsubs
adc
lods
jns
xchg
ficoms
loop
sbb
ret
sbb
in
sbb
push
inc
into
ljmp
insl
jnp
push
inc
mov
mov
dec
and
jo
or
jae
jp
pop
test
xchg
dec
enter
in
fmuls
ret
js
cli
cmp
das
inc
xor
scas
fimuls
mov
imul
jl
lea
cwtl
lgs
mov
out
popf
and
sbb
movsl
add
lcall
mov
inc
jbe
xor
mov
test
outsl
popa
loopne
dec
scas
mov
pop
divl
add
lods
push
int3
loopne
push
add
movsl
jecxz
dec
leave
ja
xchg
xor
je
addr16
cli
inc
xchg
popf
dec
out
push
adc
ret
or
andb
and
sbb
cmpsb
daa
jnp
jmp
jae
adc
das
and
xchg
or
sbb
sub
iret
test
jae
sub
or
lock
cmp
and
ficompl
rorb
int
dec
inc
rcrl
popa
popw
push
cmp
mov
jb
dec
out
jnp
ret
sub
push
arpl
push
inc
mov
pop
insl
je
stos
xor
xchg
push
lret
fisubrl
mov
xchg
and
mov
js
lock
mov
negl
ret
cmp
rorl
loop
ja
and
sti
out
lcall
dec
fnstcw
int3
mov
les
es
ds
ds
sbb
add
and
repz
jnp
das
mov
adc
push
push
dec
rcll
repz
mov
call
pop
pusha
aas
lds
mov
mov
mov
sub
xor
push
test
sti
aam
mov
cli
xchg
cmp
out
xchg
or
aaa
orl
mov
inc
and
roll
cmpsl
fisttpl
mov
and
ret
in
daa
add
mov
inc
idivb
repz
sbb
or
mov
dec
int
push
push
in
js
addb
or
pop
dec
pop
push
sbb
mov
xor
inc
stc
jge
inc
roll
nop
mov
push
dec
cmp
mov
xor
mov
xchg
andl
popa
mov
ja
push
or
sub
lret
jb
mov
out
inc
int3
sub
scas
sub
xchg
add
mov
mov
sbb
fnstcw
test
fdivl
push
dec
movsl
xchg
sub
outsl
shrl
bnd
fs
mov
mov
rcll
and
adc
xorb
add
add
arpl
cltd
or
sbb
cwtl
push
aad
xchg
xor
pop
fwait
aas
xchg
xchg
mov
out
pop
sbb
mov
aaa
mov
jecxz
pop
and
push
pushf
dec
clc
and
jmp
addr16
pop
imul
cltd
movsb
out
mov
cmp
cmp
xor
sahf
addb
inc
mov
jmp
jb
leave
sub
js
fs
jnp
ljmp
sub
jmp
mov
and
jbe
push
scas
movsl
rolb
add
xor
rorl
jmp
jno
int
sti
and
pushf
inc
jl
or
adc
xor
iret
mov
out
or
cli
movsl
outsb
adc
pop
pop
sub
pop
push
or
inc
popf
pop
xchg
cmc
cmp
aad
jge
les
test
pop
or
push
xchg
out
cli
jns
adc
data16
mov
xor
aas
add
sarb
xchg
cmc
std
mov
in
sbb
pop
pusha
mov
ja
pop
test
shlb
push
rorl
push
sbb
xchg
stc
scas
xchg
sub
mov
cmc
pop
cltd
add
dec
xchg
push
lret
push
and
lcall
imul
test
pop
sub
jp
pop
fadds
cltd
dec
insb
cmpl
lods
sarb
and
push
nop
mov
jbe
repz
fdivs
adc
imul
pop
and
xorb
dec
pop
push
or
inc
mov
sbb
aas
in
popa
sbb
jno
ja
sti
pop
dec
std
dec
push
mov
gs
into
cmpsb
mov
jge
or
mov
rcll
idivb
outsl
les
sub
push
imul
mov
rolb
add
or
cmp
push
in
subl
rcrb
loope
mov
cli
call
mov
pop
out
dec
std
fwait
jecxz
ds
hlt
lds
jp
scas
xchg
push
xor
lea
stc
mov
mov
add
shl
out
adc
push
out
sbb
inc
mov
push
push
inc
mov
jns
cli
imul
adc
pop
or
std
nop
dec
outsb
ret
sbb
pop
sub
push
xor
fsubs
popf
and
cmpsb
insb
sbb
mov
inc
loop
push
push
add
rorl
incl
sbb
bound
icebp
mov
adc
xlat
fidivs
ja
cmp
frstor
dec
push
jb
add
imulb
and
fstpl
fcomps
shll
in
loop
mov
js
cld
je
or
sub
jp
jl
cmp
lahf
jmp
cmp
fsubr
push
cmp
cmp
xchg
std
shl
ss
xor
and
mov
dec
divl
pop
fadds
insb
push
cmp
movsb
mov
pop
jnp
das
cli
cwtl
xor
jecxz
andl
pop
mov
cmp
push
pop
dec
arpl
push
loope
aam
xchg
xchg
daa
std
pop
inc
mov
jp
or
and
notb
mov
mov
jne
pop
push
and
in
and
sbb
jne
ret
push
inc
stc
cmp
ret
xor
cmpsb
jl
push
insl
and
aad
cli
test
movd
and
jno
mov
jb
lret
mov
fcmovnbe
mov
pusha
in
div
xor
fnstcw
xchg
ret
pop
mov
mov
enter
add
push
jg
in
push
js
mov
inc
mov
adc
cs
lret
jge
xor
xor
int3
jmp
mov
cmpsb
movsb
fwait
sbb
mov
and
outsl
lahf
dec
out
das
imul
sub
fmul
test
lock
sbb
testl
popa
push
mov
sbb
push
imul
lock
cmpsb
lds
shrl
inc
sub
xchg
cld
sarl
dec
mov
inc
fsubrp
jbe
popf
mov
pusha
insb
and
shll
pop
fwait
aas
loope
lock
pop
sub
sti
ret
das
clc
cld
sub
test
popf
or
cmp
jae
lret
in
mov
out
push
xchg
and
in
pushf
sub
adc
sub
int3
sarl
xchg
sar
aaa
je
fdivl
leave
sbb
sbb
push
and
or
adc
lods
dec
and
jmp
push
pop
out
in
cmp
inc
or
inc
dec
ds
jb
popa
in
in
and
dec
shrb
into
ss
enter
mov
dec
mov
xchg
repnz
mov
das
jle
or
icebp
dec
adc
pushf
mov
dec
call
fmulp
stc
fsubrl
sti
xchg
adc
sahf
mov
xlat
daa
xor
es
jge
mov
aad
lds
add
dec
fsubrl
imul
pop
push
cmpl
lret
xchg
test
xchg
xchg
xlat
inc
adc
cld
lods
int
inc
and
cmpsl
lods
aas
imul
outsl
sahf
shrb
dec
test
and
jg
adc
jns
std
adc
insb
ret
loop
jl
movsl
push
sub
mov
inc
aad
pop
dec
enter
das
neg
xor
fwait
loope
mov
adc
clc
dec
add
or
fsubrp
pop
and
xor
mov
popa
out
inc
sub
pop
loope
dec
cltd
fbstp
push
sahf
xor
lods
mov
lds
dec
mov
push
movsl
push
xor
dec
punpckhbw
jle
hlt
pop
or
in
mov
sbb
mov
cwtl
pop
push
hlt
call
data16
adc
push
xlat
or
std
js
sti
loope
lds
out
cmp
mov
inc
imul
sti
in
push
pop
push
lea
adc
sarl
out
jge
adc
push
imul
sub
jbe
mov
pop
lahf
sbb
mov
lods
push
aad
inc
push
repz
xchg
jecxz
ja
cs
sbb
or
jl
stc
xchg
test
aam
pop
mov
std
push
stos
mov
xchg
pop
jg
mov
stc
mov
dec
movsl
in
dec
mov
pop
jmp
mov
test
insb
cmp
pop
pop
scas
lcall
add
shll
lahf
push
les
adc
add
fnstsw
ljmp
les
movsb
or
mov
daa
imul
pop
cmpsl
sbb
out
add
add
dec
xchg
fimull
xor
loope
nop
jnp
mov
mov
aad
sub
movsl
cmp
fldcw
sub
mov
inc
push
test
std
adc
outsl
das
hlt
sub
jae
mov
push
ror
xchg
add
icebp
xchg
daa
mov
fstp
pop
bound
jmp
lahf
inc
into
xchg
inc
in
and
hlt
fdivrl
repz
cwtl
push
scas
in
push
xor
hlt
aam
out
loope
out
add
adc
xor
jo
imul
bound
ljmp
fisubrl
aas
sbb
addb
cmp
xor
dec
sbb
mov
and
pop
or
lods
xlat
xor
pop
xor
or
cmp
loopne
inc
enter
or
outsb
fsubr
xchg
js
inc
rcl
stc
out
insb
pusha
and
cwtl
jecxz
leave
inc
aad
sti
mov
dec
les
jae
test
pop
mov
dec
sbb
lods
adc
dec
and
leave
mov
rcl
or
lods
push
leave
fs
mov
jae,pt
popa
fnstcw
sti
jp
dec
je
out
jbe
sub
aaa
sub
je
jecxz
xchg
push
cs
repz
dec
pop
sbb
jae
sbb
repnz
loop
lods
sahf
mov
lea
push
add
mov
pop
adc
xchg
push
and
or
mov
insl
icebp
or
cmp
mov
or
sarb
hlt
jge
lcall
lcall
out
jmp
and
mov
cltd
cmp
inc
loope
lds
jmp
inc
orl
pop
in
and
int
imul
jg
jl
sbb
push
inc
xchg
mov
mov
in
xchg
push
mov
call
xchg
leave
cmc
jo
xor
leave
ret
shrb
adc
xchg
mov
cs
addl
repz
loopne
xchg
adc
dec
sub
mov
daa
mov
mov
aas
mov
movl
xchg
cmp
add
xorb
je
fs
shlb
mov
jbe
sbbl
insb
cltd
lahf
jae
ljmp
pop
insl
lret
insb
mov
adc
sahf
xor
scas
mov
es
aas
pop
xchg
mov
pop
in
repz
cmc
inc
add
mov
fadd
ljmp
pop
jnp
in
test
repnz
sbb
mov
inc
cmp
out
scas
les
xchg
or
sub
pop
sub
nop
rcll
mov
xchg
rcll
cltd
dec
and
push
pop
xor
lcall
mov
inc
scas
or
test
cmp
xchg
iret
je
aaa
gs
sbb
pop
cwtl
cmpsb
inc
inc
xor
mov
mov
cli
outsb
and
mov
iret
int
pop
jg
push
and
push
lock
pop
jb
in
cmpsl
jno
fstps
call
inc
mov
mov
xor
enter
mov
sarl
std
mov
test
sub
cmp
mov
iret
add
sub
xchg
inc
pop
inc
add
mov
fimull
fstp
adc
leave
fwait
mov
inc
push
mov
add
cmp
sahf
mov
cmp
or
fdivl
cltd
in
dec
sahf
push
mov
shlb
inc
cmp
xor
stos
sub
mov
movb
fistpl
inc
sbb
daa
push
mov
ss
mov
mov
js
pop
iret
sub
in
adc
out
dec
sahf
push
je
inc
mov
mov
cmp
push
and
shl
jae
faddp
js
and
mov
mov
mov
pop
sub
in
cmp
mov
adc
iret
push
outsl
mov
push
test
cltd
jmp
movsl
dec
pop
pusha
mov
push
stos
bound
and
nop
test
dec
adc
aam
out
fmul
pop
pop
adc
fwait
xchg
mov
or
sar
jge
xlat
int3
sbb
cli
std
pop
iret
jecxz
in
aam
pop
xlat
cld
lcall
sub
mov
rep
pop
mov
xchg
mov
daa
shlb
dec
repnz
pusha
int3
pop
xchg
cmp
pop
cmpsb
jno
imul
push
jnp
xchg
sub
push
push
add
idivb
push
sbb
push
daa
fwait
add
xchg
sbb
imul
stc
icebp
pop
dec
pop
mov
fimuls
adc
cmp
aad
jle
xlat
mov
add
push
add
imul
repnz
cmp
dec
repz
lds
or
dec
cmp
mov
cli
cmp
mov
xor
jp
xor
mov
sbb
jle,pn
daa
addr16
fdivrs
xor
mov
mov
xchg
add
jg
shlb
jns
inc
mov
ficoms
in
push
xchg
dec
pop
jmp
mov
push
add
out
in
cwtl
loopne
xchg
and
in
ret
jmp
push
adc
out
ja
outsb
shll
push
pop
or
sub
xor
call
sbb
out
xlat
jp
mov
fs
arpl
mov
shl
in
pop
test
subb
rolb
icebp
ret
push
jae
outsl
jnp
mov
js
xchg
add
mov
mov
lods
sar
push
shll
xor
sahf
ljmp
push
lods
dec
pop
popa
jo
push
int3
in
int
enter
data16
mov
data16
scas
fisttpl
dec
cmp
dec
mov
test
xor
jle
push
dec
mov
shlb
and
push
into
xor
movsb
cmp
movsb
mov
mov
cs
xor
sub
in
pop
dec
loop
push
inc
rcrb
cli
mov
std
mov
popf
test
adc
mov
flds
xlat
adc
jp
sti
sub
rorb
int3
pop
fmul
and
or
gs
lahf
int
xchg
xchg
sbb
fldt
aaa
hlt
shll
hlt
das
jns
les
lods
aad
fsubp
sbb
dec
js
jle
sbb
std
jl
or
adc
inc
ss
mov
ficompl
push
daa
xchg
orb
mov
fisttpll
dec
mov
mov
fsubs
sar
jnp
int3
mov
xchg
and
push
jp
inc
and
or
adc
je
js
std
jmp
jno
sahf
sbb
inc
loop
mov
jno
in
loopne
xchg
jge
xchg
sbb
leave
arpl
in
pop
mov
push
imul
aaa
xchg
lret
push
sub
frstor
movsb
imul
jns
call
push
mov
data16
jb
mov
xchg
fldl
cmp
icebp
and
out
mov
xor
arpl
mov
cmp
negl
lret
imul
sub
xchg
or
inc
enter
jno
push
les
scas
lock
pop
jmp
test
and
sub
mov
mov
sbb
xchg
ja
out
sarb
jno
cmp
xchg
xchg
push
mov
mov
push
cmpsl
sbb
add
fwait
jne
cs
in
mov
jne
xorb
inc
push
arpl
out
sbb
outsl
jb
ret
std
mov
movsb
imull
nop
bound
sub
imul
jge
ret
xor
adc
and
dec
push
or
ret
or
mov
push
xchg
nop
in
test
rol
jge
push
or
iret
orl
ja
pop
mov
jl
mov
adc
popf
add
fists
sbb
faddl
add
push
jp
sub
xorb
adc
sti
aas
ret
idiv
ljmp
jp
xlat
mov
roll
lahf
push
push
jecxz
incl
xor
push
or
lea
sub
test
sbb
cs
and
xchg
cltd
pop
cmpsl
data16
ret
or
sar
sbb
inc
daa
add
and
fstl
and
jbe
out
jmp
test
adc
rcrb
out
jno
dec
inc
sub
and
sub
mov
fwait
clc
mov
pop
dec
leave
sub
cwtl
cmp
loopne
sarb
or
cmc
add
lret
xor
test
adc
cmp
cs
popf
sti
mov
frstor
adc
sbb
mov
test
add
mov
mov
xchg
sbb
movsl
in
sub
mov
add
mov
bound
mov
sub
and
cmp
bound
mov
fxch
inc
cmp
push
and
data16
cli
jbe
outsb
aaa
sbb
cmp
xchg
fildll
aas
data16
pop
ret
xchg
arpl
sbb
std
lcall
mov
lret
mov
push
dec
es
int3
pop
nop
sbb
mov
movsb
mov
mov
jbe
dec
dec
lods
stos
and
popa
xchg
jae
int3
rcrl
push
xor
push
rcrl
jmp
enter
repnz
jmp
cmp
dec
idivl
xchg
cld
jbe
sbb
mov
xchg
jns
cltd
inc
gs
mov
xchg
shl
xchg
xchg
jecxz
push
mov
cmp
ja
popa
shrb
xor
dec
bound
popf
call
and
imul
arpl
or
ficomps
inc
sub
xchg
fdivrs
sub
add
or
sub
push
or
icebp
jne
mov
pop
test
aam
cs
and
xchg
pop
push
and
mov
jle
xor
jnp
popa
ss
mov
mov
jb
inc
xlat
in
fs
xor
das
inc
or
mov
push
add
hlt
add
adc
daa
push
cli
movsl
pop
fwait
loope
insb
mov
aas
xchg
fildll
add
jns
cmpsb
in
retw
dec
cmpsb
or
jge
mov
aam
jl
mov
ljmp
or
push
and
jno
lock
and
movsl
inc
loop
cmc
test
scas
cmpsl
repnz
daa
clc
ljmp
mov
xor
test
out
pop
push
xor
iret
test
jle
insb
lahf
jp
cmp
fldcw
cwtl
mov
out
movsl
ffree
notb
gs
and
sub
jmp
sbb
pop
fs
inc
sti
sub
imul
rorb
add
dec
and
popf
movsl
dec
pop
stos
out
adc
rorl
sub
in
cmp
cmpsb
dec
inc
mov
cmpsb
xchg
xchg
dec
out
shll
adc
xchg
pop
sbbb
leave
out
int
cs
xor
fwait
pop
dec
add
pop
lahf
lret
popa
jmp
out
push
jno
gs
inc
and
shlb
in
sbb
mov
push
into
and
clc
xlat
mov
iret
pop
scas
lret
lds
push
push
dec
xchg
push
mov
inc
fs
and
or
inc
inc
stos
outsb
fsubrl
add
std
push
insl
pop
adc
ret
or
cld
out
into
mov
xor
and
cmp
and
call
cmp
pop
pusha
cli
mov
bound
push
rorl
stos
loopne
pop
mov
ds
rcll
iret
ret
jg
mov
sbb
test
sbb
mov
push
fsubrs
ja
dec
jl
xor
and
dec
lock
push
push
outsb
push
xchg
jmp
mov
mov
inc
pop
loop
pop
jg
aas
outsl
aaa
testl
jne
adc
fcomps
lret
and
xchg
stc
jmp
cmpsb
cs
enter
jnp
sub
es
mov
nop
out
jno
mov
test
pop
out
xchg
div
or
lret
mov
dec
mov
ds
andl
icebp
bound
fsubl
pop
cli
scas
pop
popa
repnz
and
mov
insl
xor
repnz
pop
mov
call
inc
sbb
out
cmp
cvtpi2ps
nop
xchg
stos
fstl
lds
rcrl
daa
cmp
mov
mul
int3
bound
mov
out
repz
notb
and
mov
sub
push
xor
xchg
jns
adc
andl
pusha
push
add
outsb
adc
and
mov
push
outsl
sub
cs
and
push
pop
push
jno
fisttps
dec
inc
int3
aam
add
dec
fdivs
rclb
std
adc
jns
or
jno
sub
insl
iret
imul
out
jge
lahf
lods
jno
xchg
ds
cmp
xlat
xorb
jmp
mov
pop
pop
add
add
outsl
jge
sub
in
mov
sti
int
jmp
xor
repnz
aam
push
shll
add
aas
cli
mov
lods
jae
es
add
jmp
pop
xor
add
mov
pop
data16
push
mov
call
lret
jb
xor
addr16
jmp
stos
in
negl
sbb
push
mov
jge
mov
int3
rorl
fnstenv
in
push
icebp
xchg
dec
push
add
jne
push
and
orl
or
adc
rcr
sub
test
sti
leave
sbb
popf
insb
cmp
or
jne
into
pop
xlat
in
ds
stos
out
xchg
xor
fidivs
adc
rorl
mov
cmpsl
pop
jbe
sbb
sub
ret
push
jp
mov
jmp
mov
jnp
lea
lods
je
jecxz
xchg
dec
rep
jle
add
push
adc
pop
xor
jb
pop
mov
mov
dec
mov
in
sbb
ficomps
pop
sbb
add
stos
repz
dec
addr16
jns
xor
xchg
jae
stos
inc
xchg
addr16
mov
es
ljmp
rolb
adc
mov
sub
push
add
adc
push
gs
mov
push
dec
ret
shl
pop
dec
push
xor
shll
mov
push
push
loop
or
pop
or
jae
xor
sarb
mov
push
ds
sub
mov
or
or
test
pop
js
jmp
lds
sbb
push
cmpb
fistpl
jae
mov
mov
jae
in
mov
xor
int3
lock
xor
xlat
sbb
inc
imul
xchg
pop
leave
cmc
mov
cld
jns
sbb
out
mov
outsb
mov
bound
xchg
lahf
ljmp
ret
fildl
cmc
adc
jno
dec
ss
ss
xchg
push
stos
das
inc
push
xor
dec
fiadds
pop
mov
rorb
divb
arpl
fcomps
movsb
xchg
adc
cmpl
adc
lahf
iret
adc
aas
jecxz
gs
movsb
jnp
ss
push
mov
fsubrs
outsb
mov
xor
js
je
push
jne
push
testl
decl
jne
sahf
or
jmp
jo
sbb
outsb
mov
sbb
sti
sub
dec
clc
dec
inc
dec
dec
dec
sub
jnp
and
xchg
lret
lods
pop
push
sbbl
or
pop
xchg
lret
lods
xor
jecxz
push
and
pop
sbb
in
mov
shll
out
pop
stos
jb
dec
and
into
stos
mov
sbb
and
pop
mov
ret
in
mov
xor
lea
subb
insl
adc
scas
mov
push
addr16
cwtl
enter
sahf
cmp
jbe
hlt
add
pop
dec
mov
insb
cmpl
repnz
fnstenv
push
fidivl
mov
sub
sbb
jb
in
cmpsl
xchg
aam
in
dec
test
stc
sbb
and
scas
push
jl
int
pop
xor
gs
aas
add
mov
mov
cmpsl
gs
dec
or
out
mov
pop
or
shrb
add
cmpsl
xor
lods
in
lock
sbb
jl
xor
mov
and
mov
sbb
jmp
cmp
mov
movsb
imul
xor
pop
xchg
xchg
mov
mov
jmp
xor
inc
das
in
cltd
out
lock
test
call
add
mov
es
push
aas
les
in
inc
clc
add
es
lret
xchg
push
xchg
adc
and
mov
or
int3
lods
cmpsb
pop
sti
in
jnp
out
inc
sbb
shlb
xchg
and
lcall
pop
pop
int
es
aam
mov
imul
test
les
sbb
mov
mov
or
stos
dec
pop
aas
jge
and
inc
or
mov
or
outsb
inc
add
xchg
sbb
sbb
shlb
nop
movsb
add
std
inc
addr16
sar
jle
inc
popa
push
out
and
cld
dec
mov
or
pop
shr
and
lea
pop
push
mov
inc
sar
jmp
pop
in
sub
cmp
pop
and
mov
adc
repnz
sahf
enter
aam
movsl
mov
xchg
rorl
mov
xor
dec
xor
fsubrl
aad
bound
cmp
push
mov
shll
movsl
jle
pop
mov
cltd
push
jns
cmp
mov
add
mov
push
dec
or
mov
inc
mov
mov
enter
add
mov
jnp
aaa
or
loopne
movsb
adc
xchg
push
inc
push
and
and
push
sub
xchg
enter
adc
clc
push
pop
outsb
cmp
add
imul
xor
and
push
mov
mov
cmp
xor
and
lret
or
ret
or
pop
sub
and
pop
fbstp
xchg
aaa
mov
cmpsl
cmpsl
push
sbb
mov
pop
pop
adc
cmp
sti
lret
scas
loopne
ret
cmpsb
test
jmp
rclb
xchg
xchg
mov
sbb
movsb
add
pop
sbb
iret
jg
push
mov
jle
sbb
xchg
pop
push
mov
and
cmp
int
xor
out
outsb
loopne
loope
push
cmpsl
mov
add
mov
jmp
arpl
push
inc
addr16
push
popa
sbb
sub
pop
and
std
adc
fs
shlb
xchg
inc
lcall
jge
sub
lods
mov
aad
mov
pop
jg
xor
pushf
insl
lret
and
shlb
xor
jo
test
mov
imul
in
pop
xor
jne
insl
inc
adc
or
pop
rolb
stos
movsb
mov
jecxz
and
pop
push
push
fsubrp
insb
and
ljmp
pop
out
mov
stos
sbb
aaa
loope
daa
pop
ficomps
cmpsb
jp
mov
cmp
cli
add
es
cmpsl
lcall
pusha
dec
jecxz
mov
or
inc
inc
in
pop
push
in
inc
pop
imul
rclb
aas
loope
jl
mov
sbb
xchg
dec
outsl
jns
inc
lcall
mov
shll
or
add
repz
sub
lahf
lods
dec
mov
dec
or
dec
pop
insb
mov
or
sbb
xchg
pop
dec
push
sbb
adc
sbb
xor
mov
xchg
mov
lea
nop
popf
test
xchg
int
fidivs
pop
inc
mov
mov
cmc
push
mov
or
mov
mov
mov
add
adc
push
mov
mov
daa
adc
fwait
pop
testb
pop
scas
xchg
push
fsubs
loop
dec
pop
and
xchg
xlat
aam
cmpsb
loope
cmp
in
jnp
insb
sbb
push
sub
nop
jl
xlat
push
or
aas
pushl
addb
pop
push
dec
ficoml
push
fprem
pushf
jo
dec
push
mov
insb
jle
push
imull
jl
iret
in
bound
cli
adcl
mov
movsl
add
inc
pop
hlt
mov
push
stc
mov
jb
pop
mov
ja
outsl
adc
mov
shl
mov
xchg
fld
cs
out
and
fbld
and
add
dec
mov
mul
and
add
daa
xchg
mov
in
je
loope
imul
iret
xlat
dec
cmp
out
std
das
sbb
cmp
sbb
in
xor
dec
mov
push
push
test
mov
movsb
push
add
sub
cmc
or
mov
jno
pusha
mov
fidivl
dec
push
sub
lcall
movsb
out
mov
cmp
out
or
jns
pusha
fwait
psubd
dec
inc
xor
arpl
cli
rorl
sub
or
stc
push
test
dec
test
shlb
out
xor
cmp
mov
or
jmp
jecxz
clc
jge
cltd
enter
je
pop
add
es
loopne
cmc
cmp
push
ss
xchg
mov
xchg
cmp
mov
aad
mov
popa
xchg
aaa
push
lcall
mov
add
gs
arpl
cltd
hlt
mov
and
cmp
pop
pop
pop
mov
popa
dec
dec
xchg
call
xchg
rclb
cmpsb
in
mov
sbb
iret
mov
pop
adcb
call
jae
dec
adc
pop
mov
adc
inc
popf
push
movsl
cltd
and
rcrl
jge
inc
cli
push
cmp
add
jle
push
add
subb
out
mov
fs
incb
sbb
dec
xor
xchg
fsubrl
sub
ljmp
add
xchg
stos
add
or
add
xchg
sbb
cmp
lods
mov
movsb
cmpsl
and
lret
mov
setle
dec
mov
add
in
push
ret
jbe
push
dec
in
pop
movsb
mov
xchg
mov
mov
inc
test
incb
scas
dec
jl
dec
stos
pop
cmp
pop
loop
jne
sahf
jecxz
loopne
mov
mov
sahf
mov
mov
outsb
dec
jg
loopne
repnz
movsl
mov
nop
or
aas
inc
pusha
mov
jbe
mov
mov
out
sarl
shll
int
adc
out
std
cs
iret
cltd
aaa
or
push
sub
cmc
mov
lcall
sbb
movsb
std
fdivrs
enter
in
and
mov
xor
test
dec
dec
mov
int3
ljmp
or
in
test
outsl
xor
int
and
aaa
js
inc
rol
icebp
jge
mov
or
jmp
test
in
clc
repz
push
ss
in
inc
out
sub
enter
push
loopne
lea
and
jl
stos
push
addb
inc
inc
in
sub
mov
ret
aam
sbb
int
in
and
xchg
das
scas
mov
push
shrl
arpl
rclb
jnp
test
mov
and
sbb
fcmovu
xor
xchg
sub
xlat
jge
and
and
ds
adc
cli
mov
or
xchg
ljmp
bound
mov
pop
lods
mov
insl
clc
mov
add
scas
int
lahf
cmpsl
cmp
inc
int
sbb
ret
push
fldl
pop
sbb
adc
mov
jge
jae
mov
push
dec
iret
cmp
xchg
jecxz
jnp
adcb
aaa
lock
lahf
and
jecxz
in
out
aas
repz
movb
push
popa
push
mov
mov
je
push
sbb
outsl
iret
sub
in
push
sbb
and
xor
cmp
loope
jae
mov
loop
lret
xchg
cmp
xchg
ret
mov
inc
mov
in
daa
xchg
jl
scas
jmp
jno
aaa
in
adcb
lods
cmpsl
cld
pop
xor
pop
inc
pop
mov
hlt
or
rcll
loopne
push
call
sub
fisubl
int3
cmp
dec
ds
jbe
mov
push
orb
or
push
faddl
pop
iret
ficomps
jle
dec
popf
in
jo
ljmp
push
fwait
xchg
sub
inc
enter
and
outsb
pop
mov
xchg
mov
mov
sub
jle
lret
push
push
pusha
pusha
cmp
cmp
sbb
sub
movnti
jl
xor
loop
lods
ljmp
jnp
stos
rcl
test
jns
xchg
pusha
sub
je
test
ds
dec
fnstsw
lods
mov
or
iret
mov
sub
mov
xor
mov
cmpsl
mov
add
pop
pop
pushf
mov
fimuls
pop
xchg
cmp
push
lret
out
and
daa
movsl
xor
aam
cmp
data16
fsubrs
out
sbb
test
push
icebp
or
mov
repnz
mov
cmp
xor
sbb
cmp
cli
lds
mov
xchg
add
lds
push
sub
std
call
mov
add
imul
gs
out
add
pusha
dec
mov
lcall
aad
bound
stos
stc
cli
mov
or
and
jnp
adc
stos
pop
dec
jno
xor
xlat
or
cwtl
sub
jle
push
js
ret
orl
jb
ds
inc
fdivl
mov
sub
divl
push
adc
ret
push
mov
in
cmp
inc
and
call
in
cmp
adc
shll
int
mov
mov
add
jbe
aas
mov
xor
dec
aam
dec
test
cwtl
pop
daa
add
popf
cwtl
mov
leave
pop
jbe
fistl
jge
and
pop
cmpsl
fildll
jb
jge
push
cltd
sti
out
aam
inc
cli
and
int3
push
lcall
arpl
movsb
inc
aas
adc
stos
add
cmpsl
xchg
in
inc
mov
and
xor
dec
es
pop
mov
push
mov
and
addr16
daa
sbb
mov
jno
push
in
lret
notb
int
mov
pop
adc
fdivrl
out
cwtl
fcmovbe
lock
dec
fldenv
int
inc
push
dec
push
xchg
shll
pop
mov
int3
and
imul
repz
sbb
xchg
mov
cmp
xchg
dec
aam
mov
sub
cmp
enter
sbb
mov
outsl
mov
loop
cmp
sbb
xchg
xchg
aad
jge
mov
xor
dec
jb
cmpl
mov
popf
nop
push
lods
inc
adc
mov
orb
into
mov
pushf
shlb
movsb
pop
mov
and
push
push
mov
ds
push
cmp
dec
push
mov
ret
rorl
pop
lods
adc
jge
cmp
std
js
and
dec
adc
xchg
mov
cmpsl
adc
push
mov
fidivrs
aad
mov
push
push
sbb
lock
dec
insb
inc
arpl
pop
fcmovnbe
sub
xchg
bound
arpl
dec
popa
mov
icebp
daa
cltd
jle
scas
stc
stos
scas
dec
pop
enter
add
jo
mov
pop
cli
pushf
inc
jl
sub
push
inc
dec
jecxz
bound
push
adc
push
jle
lahf
cs
xor
mov
jge
aas
clc
push
fabs
push
idivb
int3
pop
shlb
in
add
icebp
push
arpl
daa
test
outsl
push
sub
push
cmpsl
bound
nop
push
stc
jo
lret
stos
es
sbb
aam
dec
movsl
adc
ret
sub
test
mov
adc
xchg
mov
jmp
mov
xchg
ficoms
sbb
sbb
stos
mov
xor
leave
pop
stos
test
mov
pop
outsb
xchg
push
cmp
or
add
jo
ret
jbe
sbb
adc
repz
push
imul
pop
stos
cs
jno
push
scas
sub
icebp
js
jge
and
jmp
incb
add
cli
iret
movsb
mov
daa
sbb
repz
aad
mov
dec
ja
movsl
push
xor
xchg
and
aas
fcmovu
imul
lcall
das
insl
sbb
cli
fsubp
out
fwait
jl
inc
jo
mov
cmp
xor
mov
nop
lretw
jnp
stos
push
enter
outsl
cltd
mov
cltd
add
jnp
leave
mov
stos
or
int3
sub
mov
adc
dec
or
lahf
adc
dec
adc
enter
xchg
push
scas
jo
aad
add
or
jb
add
out
lods
xor
ja
mov
xor
xor
call
cli
movsb
mov
push
xorl
iret
outsb
cmp
and
pop
lock
fsub
lds
dec
dec
popa
fisubrs
cli
dec
fwait
cs
mov
push
clc
pop
popa
lods
in
adcb
loop
cmpb
cmpsb
mov
mov
mov
xorl
xchg
aas
add
js
mov
cs
out
shl
test
sub
lahf
imul
sub
sub
hlt
adc
iret
pushf
hlt
xor
pop
pop
pop
cli
cmp
push
in
fisubs
addb
add
push
fstpt
imul
bound
iret
out
jl
cld
shrb
mov
sbb
sarl
bound
jmp
adc
pushl
fwait
mov
repnz
rorl
subb
fldl
movsl
xor
dec
jbe
dec
aas
into
test
out
xchg
xor
dec
pop
in
add
add
cmp
xchg
cmp
cmpsb
adc
loope
sarb
mov
cmp
in
test
push
and
adc
mov
jmp
mov
fists
ss
sub
sbb
cmpsb
cmp
dec
xor
jmp
mov
push
jne
nop
shlb
lret
aas
dec
inc
loope
es
daa
xchg
add
xchg
test
cli
xchg
xor
and
jns
and
jmp
icebp
loop
push
cltd
es
arpl
popf
dec
inc
or
bound
adc
pushf
or
pop
adc
dec
mov
scas
adc
fcomps
lods
sti
in
inc
popa
ja
jmp
dec
repnz
push
ja
sub
xlat
inc
or
aam
push
pop
out
xor
jg
outsb
fmull
out
test
hlt
imul
push
pop
and
imul
xchg
jae
cwtl
sbb
cli
jns
or
sbb
fisttpl
cmp
lods
xor
mov
js
fwait
or
repz
ret
stc
insb
aas
test
cmovle
pop
inc
jp
lods
push
in
jl
dec
pop
and
aad
dec
hlt
je
mov
negb
dec
push
inc
call
ret
jl
jmp
adc
xor
adc
pop
dec
mov
inc
js
ss
fnstcw
nop
push
jno
cwtl
jb
pop
lock
fsubs
andb
fisubl
cmpsl
lods
push
andb
or
sbb
aaa
lcall
ja
dec
inc
xchg
rorl
push
adc
movsb
test
loopne,pt
push
std
dec
adc
addr16
lods
mov
cs
lock
scas
add
mov
pop
fwait
call
aad
mov
ficoml
cmpsb
push
iret
sub
ret
das
fnclex
jl
sbb
mov
orb
std
xor
outsb
sub
enter
sub
aas
pop
gs
lea
and
mov
mov
push
adc
dec
divb
xchg
xchg
ja
test
out
sti
js
into
and
jl
pushf
sub
jae
fildll
or
jb
adc
les
test
addb
xor
mov
mov
in
adc
lock
pop
cs
xor
cmpsb
adc
ror
into
and
andl
cmpl
je
xor
or
lret
or
das
lods
pop
loope
out
cmp
fwait
hlt
imul
aad
jle
pop
out
pushf
push
mov
jmp
fstpl
cli
xchg
iret
push
mov
mov
push
xchg
jbe
insl
lods
inc
int3
ljmp
sbb
movsb
scas
jns
push
mov
andb
fldt
fstpt
push
push
cmp
push
mov
mov
movsb
pop
shl
aaa
dec
adc
mov
divb
sub
mov
or
mov
orb
xchg
js
xor
mov
dec
inc
dec
aad
les
clc
cmp
adc
mul
jo
imul
dec
hlt
fisttpll
xchg
testb
mov
jne
iret
jg
iret
repnz
xor
mov
sbb
push
mov
xchg
push
mov
sub
jae
into
aam
out
mov
loop
pop
adc
das
fwait
sahf
xor
in
loopne
stos
js
les
stos
sub
lret
jo
arpl
fwait
andb
cmp
