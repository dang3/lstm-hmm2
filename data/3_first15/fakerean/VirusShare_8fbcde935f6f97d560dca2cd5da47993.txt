mov
and
shlb
mov
shll
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
ret
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
int
inc
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
movsl
repnz
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
in
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
push
out
inc
add
sahf
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
or
add
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
pusha
push
call
mov
xchg
jl
fwait
jno
clc
loopne
cmpsl
push
jge
add
add
pop
cwtl
add
cld
mov
push
roll
in
pop
push
cwtl
test
push
mov
add
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
loopne
out
aad
xchg
mov
mov
shll
add
add
add
mov
add
popl
jl
popa
add
add
add
je
add
add
ljmp
add
jbe
add
add
add
mov
add
pop
popa
gs
sub
pop
popl
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jae
add
add
mov
repnz
xchg
add
mov
push
add
int3
mov
mov
int
add
add
add
imul
mov
jns
mov
iret
addl
in
fcompl
push
push
lea
push
lea
push
push
call
popa
mov
out
xchg
jno
add
add
add
pop
roll
mov
add
add
mov
mov
jl
jmp
cli
js
add
add
hlt
cld
mov
mov
add
xlat
add
stos
sub
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
filds
mov
int3
movsl
jbe
jmp
js
add
push
add
mov
stos
push
pop
loopne
insb
add
cwtl
add
into
add
add
mov
fs
sti
add
pop
add
out
movsb
add
add
mov
imul
jb
in
in
call
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
add
add
add
mov
add
mov
add
into
shr
in
add
add
icebp
add
xchg
cwtl
cltd
data16
add
mov
testl
jb
shl
int
int3
pop
in
xchg
add
add
add
sahf
add
adcl
call
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
lock
pop
add
fidivl
add
call
gs
add
add
divl
add
insb
add
push
gs
add
push
lock
sub
pop
call
push
push
call
lret
add
add
add
ret
mov
add
add
add
lcall
bound
pop
jne
add
pop
add
add
pushf
sti
mov
add
add
pop
insb
add
add
test
add
sub
pop
jmp
ret
push
push
push
lea
push
push
push
push
push
push
call
add
jmp
add
add
xchg
add
pop
mov
add
add
loop
pop
add
add
add
jne
pop
jne
push
add
add
in
add
add
out
mov
mov
ljmp
stc
pop
add
add
add
lcall
inc
hlt
push
push
push
call
jl
lods
jo
lahf
pop
loope
xchg
add
in
jecxz
out
add
add
fbld
in
add
in
add
jge
faddl
add
add
add
cmpsl
add
add
pop
hlt
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
mov
xlat
mov
cmpsl
add
scas
add
add
rolb
stos
push
call
xchg
mov
addr16
add
loop
add
aad
shll
cld
mov
add
add
mov
add
add
mov
pop
in
push
lea
push
lea
push
push
lea
push
call
pop
scas
repnz
mov
jne
fwait
addl
add
fsubr
add
push
add
add
mov
test
xchg
aam
add
add
faddl
lcall
ret
add
add
push
lea
push
push
push
push
lea
push
lea
push
call
add
ret
jae
add
add
icebp
call
scas
add
bound
mov
push
add
xchg
lcall
lcall
ret
push
add
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
lahf
ja
lret
rolb
add
push
int3
add
xchg
mov
add
out
add
jmp
add
push
xchg
push
nop
movsb
in
add
add
fs
rol
mov
push
in
into
sahf
arpl
add
fildl
xchg
add
insb
add
mov
sub
pop
xor
push
push
lea
push
push
call
mov
fiadds
mov
pop
pop
push
add
sti
enter
add
add
add
lock
add
push
push
not
shr
push
and
add
shl
xor
sub
add
sub
shr
pop
not
inc
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
push
pop
fsubs
mov
push
add
lcall
fildl
add
pop
add
imul
jnp
ljmp
lcall
jne
push
push
lea
push
lea
push
push
push
push
push
call
xlat
add
add
bound
lods
jbe
mov
pop
stc
add
push
pop
xchg
enter
add
push
out
add
add
add
call
mov
push
push
push
push
push
push
call
cmpb
movsl
add
mov
add
movb
add
fadds
mov
mov
add
xchg
mov
scas
add
add
jmp
mov
repnz
add
mov
add
fmull
js
lret
add
add
jbe
mov
loop
add
pop
push
xchg
in
mov
lcall
inc
call
lea
push
lea
push
push
push
call
add
fwait
add
mov
pop
ret
jmp
in
jle
in
xchg
icebp
movb
mov
cltd
add
mov
pop
lds
ja
xlat
cmpsl
add
mov
xlat
add
iret
add
xchg
mov
push
push
push
lea
push
push
push
push
call
add
add
stc
scas
add
add
js
gs
ret
add
pushf
lret
push
push
add
lahf
add
ljmp
mov
add
add
faddl
add
xchg
push
add
mov
add
add
popl
push
nop
push
mov
gs
jl
add
sub
pop
pushl
push
push
call
testl
add
add
add
jl
cmpsb
xchg
add
flds
cmpsl
addl
leave
arpl
add
aam
add
add
out
mov
add
scas
pop
rolb
mov
add
add
movl
push
add
jne
push
push
push
push
push
push
push
call
add
add
hlt
add
mov
je
mov
mov
add
popa
rolb
add
imul
sarl
sti
add
mov
call
add
add
imul
std
in
loop
in
in
call
push
lea
push
push
push
lea
push
push
call
add
fsubs
add
xchg
cld
add
std
xchg
mov
lret
scas
add
lea
out
xchg
xchg
outsl
add
add
iret
add
cld
test
jo
loopne
add
sub
pop
pushl
push
push
push
call
xchg
add
add
add
repnz
scas
lds
jbe
add
into
cmc
pushf
add
cltd
ret
add
jns
mov
test
add
pop
xchg
or
sub
pop
pushl
push
lea
push
push
push
call
mov
add
out
cmpsb
add
add
int3
pop
add
arpl
add
mov
nop
test
add
pop
mov
pop
mov
xchg
ja
add
fadds
pop
xchg
mov
hlt
pop
add
cli
icebp
add
add
push
js
or
sub
pop
call
push
push
lea
push
sub
add
dec
add
sub
ror
add
pop
shl
not
ror
pop
push
push
call
mov
cmc
add
xchg
movsb
xchg
add
add
add
add
mov
mov
add
sti
add
add
les
add
faddl
lcall
jne
call
push
push
push
call
sbbb
add
outsl
jb
add
add
clc
pusha
add
stc
add
push
add
test
add
lods
shr
add
xchg
xchg
add
lods
jae
push
add
add
mov
push
jae
mov
jle
add
inc
push
push
not
not
push
and
add
add
sub
add
dec
dec
pop
shr
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
ret
repnz
addb
add
ficoms
add
xchg
loop
jmp
int
push
add
push
add
aam
add
sub
pop
push
push
push
push
push
call
stos
add
int
add
mov
add
add
jo
mov
add
mov
add
movsl
add
add
mov
pop
xchg
flds
jno
mov
in
add
shll
add
xchg
out
jo
jne
pop
add
rolb
out
add
add
push
push
lea
push
lea
push
call
jae
add
add
mov
mov
add
xchg
add
xlat
add
fs
mov
cmc
addr16
arpl
lods
fadds
sub
pop
call
mov
push
lea
push
push
call
xchg
lret
outsw
add
cmpsb
andl
add
shlb
jecxz
push
je
pop
add
stc
mov
xchg
loopne
jle
add
jno
add
add
lcall
push
push
push
lea
push
lea
push
push
call
add
cmpsl
add
jecxz
add
add
add
mov
std
push
add
xchg
add
add
jmp
fldl
pop
imul
mov
js
mov
ret
push
addl
loope
sub
pop
push
mov
push
push
push
call
add
mov
jo
out
pop
add
int3
push
xchg
nop
add
add
mov
mov
jns
push
add
xchg
cmpsb
push
ret
cmpsb
sti
mov
add
icebp
add
add
jl
add
in
hlt
lcall
pop
in
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
insb
roll
add
in
mov
xchg
lea
jecxz
in
xlat
add
ret
std
push
andb
movsl
add
popa
add
scas
movsb
add
faddl
add
jle
pop
add
add
mov
add
pop
mov
add
add
enter
fwait
jle
add
add
jmp
add
mov
add
add
sub
pop
add
add
push
push
push
push
push
push
push
lea
push
push
call
add
add
mov
xchg
test
add
add
mov
cld
lea
xlat
add
add
movsl
hlt
popl
mov
out
mov
add
mov
mov
jecxz
in
aad
add
in
mov
add
ret
add
push
add
roll
sub
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
push
call
hlt
jb
outsl
mov
rcrb
adcb
add
add
js
ja
add
mov
add
add
aam
mov
les
cli
add
lcall
jne
push
push
lea
push
push
push
call
add
ret
add
add
jns
jnp
aad
scas
fidivrs
pushf
push
movsb
add
add
mov
add
add
add
push
jp
cmpsb
into
mov
xchg
add
lcall
inc
or
jno
adc
push
push
push
push
lea
push
push
push
call
mov
add
add
stos
leave
imul
add
add
jae
add
jecxz
fcmovnu
aad
push
add
mov
add
add
xchg
sub
pop
xor
push
push
push
call
add
add
out
mov
jmp
add
testl
int3
lods
test
jp
xchg
leave
add
test
cmpsb
fisttpll
add
add
add
stos
add
add
sarl
sub
pop
add
push
push
lea
push
lea
push
lea
push
lea
push
push
call
ja
add
arpl
push
mov
add
push
push
add
add
jmp
fimuls
mov
test
mov
jno
add
push
add
sub
pop
add
push
push
call
push
jmp
add
add
call
pop
mov
add
mov
add
stc
pushf
add
shl
aad
fs
fs
jbe
add
add
enter
imul
loop
cwtl
mov
add
fs
add
add
add
add
mov
mov
add
add
add
sub
pop
pop
push
lea
push
push
push
push
push
push
call
pushf
add
xchg
add
pop
lret
pop
add
add
les
add
mov
add
add
push
add
add
cmc
test
lcall
dec
add
icebp
xor
adc
rclb
mov
je
xor
lea
push
push
call
fcomps
lods
add
push
addb
jnp
add
mov
xchg
jecxz
add
rcrl
add
xchg
jecxz
js
fwait
test
add
shr
pop
pop
add
lcall
mov
add
add
add
cwtl
add
sub
pop
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
outsl
add
add
scas
outsl
lods
xchg
add
iret
loop
add
xchg
push
repnz
sub
pop
xor
push
push
lea
push
lea
push
call
iret
cltd
push
mov
fmull
outsl
add
scas
cli
add
shlb
add
add
add
xchg
loopne
add
scas
roll
testb
cli
add
lret
add
add
add
add
out
xchg
add
add
les
add
push
push
push
lea
push
push
push
push
push
call
add
addl
jp
pop
lds
fildl
add
arpl
add
sahf
in
jmp
jp
jae
add
add
add
jmp
xchg
rclb
pop
sub
push
push
push
push
push
call
jnp
pop
sahf
mov
add
fxch
scas
add
je
arpl
arpl
in
add
add
data16
add
add
add
pop
lds
push
add
add
add
enter
mov
add
add
add
cld
mov
add
fxch
clc
jge
in
in
lcall
push
push
push
lea
push
push
push
call
fsubs
mov
add
clc
fstpt
add
ret
mov
add
scas
scas
push
add
fmulp
mov
je
cmpsb
xchg
add
mov
add
fadds
lcall
movsb
push
push
push
call
loope
add
add
add
int3
rolb
mov
add
push
lods
add
jge
rclb
aam
jle
add
jecxz
in
mov
push
sub
pop
pop
push
push
push
push
call
add
int3
aam
jbe
loop
jle
mov
add
add
mov
popf
xchg
mov
iret
add
cmpsl
std
mov
push
shlb
enter
imul
add
fstl
add
add
aam
addl
add
push
in
mulb
add
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
jge
mov
mov
add
in
loope
cwtl
mov
lret
mov
int3
xchg
add
mov
jno
movsl
xchg
add
add
add
add
jne
test
add
test
call
fiaddl
add
add
loopne
add
push
lea
push
call
lahf
fcmovbe
test
add
push
shlb
pusha
sti
xchg
push
add
cmpsl
pop
ja
mov
mov
add
fiaddl
in
add
add
repnz
pop
lret
push
add
add
jge
sahf
add
add
jecxz
pop
push
add
add
add
add
add
jnp
mov
lcall
ret
add
add
push
push
push
lea
push
push
push
call
mov
add
imul
iret
test
add
xchg
mov
add
mov
mov
in
call
add
push
xor
add
inc
pop
mov
push
push
push
push
push
lea
push
push
call
cmc
add
lret
add
loope
lods
pop
add
add
add
pop
add
lret
loopne
add
jl
add
add
stos
lret
pop
in
add
lcall
add
push
lea
push
push
push
push
push
push
push
push
push
call
ljmp
popa
add
add
sarb
out
lods
je
icebp
jo
lock
add
roll
xchg
pop
test
jns
sub
pop
add
push
rol
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
imul
xchg
int
lret
mov
mov
mov
add
icebp
in
add
add
out
push
xchg
jmp
aam
leave
add
mov
add
jge
lea
jge
add
out
jmp
jmp
pushf
imul
sub
pop
xor
push
push
lea
push
call
mov
jno
add
cwtl
fistpll
jnp
add
add
add
add
xchg
ja
sahf
ljmp
cld
sub
pop
add
push
push
push
push
push
push
push
push
push
call
add
add
in
pop
push
fcomip
add
mov
add
add
add
xchg
add
jne
arpl
mov
add
add
roll
mov
mov
lods
cwtl
xchg
in
fdivr
lcall
dec
sub
adc
lea
push
push
push
push
push
push
call
add
imul
add
add
cltd
roll
add
rolb
enter
jne
mov
mov
pop
movsb
mov
mov
add
xchg
jge
mov
bound
add
cld
add
add
enter
iret
mov
jno
xchg
mov
push
mov
jecxz
add
add
add
mov
mov
sub
pop
add
add
push
lea
add
pop
mov
push
push
lea
add
push
and
add
dec
sub
add
sub
add
pop
lea
ror
lea
lea
pop
push
xor
lea
pop
pushl
push
lea
push
push
push
push
lea
push
call
js
mov
jb
pop
mov
jge
pop
add
mov
push
repnz
popf
pushf
scas
jmp
add
add
mov
pop
sub
pop
call
push
push
push
sub
sub
push
push
pop
add
add
sub
rol
sub
dec
pop
sub
pop
push
shr
add
shr
shr
pop
push
push
sub
sub
pop
push
push
sub
inc
not
pop
call
push
sub
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
ljmp
push
hlt
in
add
add
xchg
jb
loope
add
add
fs
add
pop
idivl
push
push
add
ror
pop
push
push
add
sub
pop
mov
push
xor
lea
pop
add
push
push
push
call
add
add
hlt
add
test
add
outsl
add
add
mov
add
xchg
add
addb
stc
mov
add
push
add
add
mov
add
cld
fldl
je
add
int3
imul
test
cwtl
xchg
add
sub
pop
add
add
push
shr
pop
mov
push
push
lea
push
push
push
call
scas
push
add
xchg
add
loope
ror
lods
xlat
mov
loopne
pop
cmc
add
add
add
mov
add
mov
xchg
or
jbe
add
add
add
mov
add
aad
test
jns
add
aad
lcall
lcall
xor
push
push
push
push
push
push
call
mov
add
add
add
movsb
mov
into
shr
testb
stc
add
cwtl
filds
call
add
fnsetpm(287
add
add
add
sbb
mov
add
jnp
popa
add
stos
push
imul
jne
jo
mov
sub
pop
add
push
xor
pop
add
push
xor
pop
push
mov
xor
push
sub
sub
lea
pop
add
push
inc
pop
pop
push
push
lea
push
lea
push
push
call
mov
jbe
bound
or
add
add
add
xchg
mov
add
add
mov
out
jmp
in
ja
scas
ret
fdivrs
add
mov
mov
lcall
dec
and
adc
rorl
clc
bound
movsb
push
push
push
push
push
push
lea
push
call
add
add
lods
add
add
lahf
loopne
in
roll
jl
std
negl
xchg
add
pop
mov
add
mov
pop
mov
push
push
push
push
push
push
call
add
sahf
add
flds
push
mov
add
mov
jecxz
add
jno
jge
ljmp
sti
add
add
add
add
std
in
mov
cli
pop
jp
add
out
nop
mov
in
in
pop
xor
push
push
call
addb
add
add
je
fnstcw
jno
sub
add
push
add
xchg
loopne
out
je
loop
jne
push
cmc
incb
add
add
out
add
add
les
shr
shr
pop
or
je
mov
xor
push
push
lea
push
push
push
push
lea
push
call
xchg
pop
mov
gs
mov
flds
lcall
add
in
stc
add
in
xchg
add
add
add
enter
add
out
fcmovnbe
xchg
jecxz
leave
add
add
mov
in
in
lcall
push
sbb
jno
adc
push
push
call
lea
add
add
nop
add
lea
add
add
aad
xlat
lahf
push
add
mov
add
cmpsl
jns
cli
outsl
add
jne
out
fwait
add
add
add
jnp
add
lcall
adc
push
push
push
lea
push
lea
push
push
lea
push
call
ja
add
ret
lods
add
loopne
addr16
push
mov
add
add
fwait
add
mov
add
lret
add
add
add
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
js
scas
mov
add
add
add
jp
add
add
addl
mov
pop
add
add
add
xchg
mov
int
add
xlat
add
arpl
stos
fs
sub
pop
add
push
ror
add
sub
pop
add
push
push
lea
push
push
push
call
gs
roll
pop
fcoms
jbe
frstor
add
pop
mov
add
pop
int
loope
xchg
shll
cmpsl
in
add
add
pop
add
add
jae
add
mov
stos
pop
mov
test
add
sub
pop
push
push
shl
add
pop
mov
push
push
push
lea
push
call
std
pop
add
jbe
add
mov
add
push
test
nop
xlat
add
add
add
int3
add
add
leave
lret
pop
add
pop
add
mov
pushf
mov
add
mov
pop
lret
mov
add
add
add
pop
mov
mov
lcall
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
stc
fwait
iret
fldl
out
jge
jb
cmpsl
mov
iret
fwait
xchg
add
mov
hlt
add
push
out
mul
test
add
add
add
jmp
fsubrs
neg
out
add
mov
arpl
add
arpl
mov
test
push
add
pop
mov
idivb
push
sub
pop
add
push
push
push
lea
push
lea
push
push
call
mov
hlt
add
filds
add
add
scas
add
add
jle
roll
lock
in
add
push
enter
add
mov
xchg
lock
push
lea
push
lea
push
push
call
add
add
add
add
add
rolb
add
in
mov
out
add
push
pop
add
add
faddl
add
enter
add
mov
sub
pop
pop
push
ror
add
pop
rep
push
push
push
push
push
push
push
lea
push
call
data16
add
sti
add
mov
cld
stos
rolb
add
add
add
jmp
fisubl
repnz
add
call
cmc
add
push
hlt
add
lods
jns
add
insb
andl
add
fiadds
dec
sub
jno
adc
inc
andl
scas
push
push
push
push
push
push
call
push
add
add
mov
imul
rolb
mov
lods
ret
shrb
add
out
rolb
out
add
in
leave
addr16
clc
imul
add
add
mov
test
mov
clc
std
mov
lcall
or
push
push
lea
push
push
push
push
push
push
push
push
call
add
xchg
lds
add
add
fisttpl
jbe
int
movsl
mov
pop
roll
xorb
loopne
add
add
addl
add
jbe
jns
add
lcall
les
add
push
xor
dec
not
not
pop
or
je
push
ror
lea
xor
pop
mov
add
push
push
push
call
add
add
shrb
test
mov
add
mov
rolb
in
add
pop
lds
pop
test
add
jmp
add
add
mov
add
add
mov
pop
add
fidivs
lcall
movb
add
push
xor
dec
add
pop
rep
pop
push
push
shl
not
ror
push
push
pop
add
sub
sub
ror
pop
shl
add
pop
push
xor
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
jl
flds
add
cltd
test
lock
mov
mov
outsl
push
cwtl
mov
cltd
cmc
mov
add
mov
sti
xchg
cltd
roll
jl
add
aam
pop
add
xchg
test
mov
shlb
mov
add
add
mov
add
mov
jne
push
push
push
push
push
lea
push
lea
push
push
push
call
filds
mov
bound
push
mov
push
add
xchg
aad
add
mov
add
add
add
pop
add
rorl
ret
xchg
aad
cmc
mov
push
popf
add
add
add
out
mov
stos
sti
xchg
pop
out
add
mov
jns
filds
lds
clc
add
pop
mov
mov
push
push
call
arpl
scas
sahf
add
out
mov
add
call
ret
add
sahf
add
add
add
pop
jns
pop
gs
jo
add
add
insb
add
add
sub
pop
jmp
push
push
push
push
push
push
lea
push
push
lea
push
call
jo
push
movb
icebp
add
push
add
add
fnstcw
add
jge
int3
ror
testl
arpl
add
mov
pop
mov
scas
mov
add
add
add
in
loopne
mov
add
push
not
rol
add
pop
push
push
push
push
push
lea
push
call
shlb
xlat
pop
les
add
pop
jmp
lcall
push
data16
pop
add
mov
bnd
clc
lcall
push
push
not
lea
shr
pop
push
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
add
loop
add
in
fwait
mov
icebp
call
int3
lea
lcall
pop
push
sub
ror
pop
pop
push
lea
add
shl
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
ljmp
add
stc
mov
jmp
add
add
mov
xlat
movsb
movsl
pop
push
hlt
add
imul
add
rclb
add
insb
add
push
add
subl
xchg
cmp
add
mov
into
mov
pop
add
mov
xlat
add
pop
leave
ret
push
shl
lea
ror
pop
push
mov
push
sub
inc
pop
add
push
push
lea
push
push
push
push
push
push
call
add
add
add
mov
push
hlt
mov
add
add
mov
push
popf
iret
add
mov
pop
clc
xchg
jge
scas
mov
add
in
add
insb
in
add
add
cld
loope
mov
js
jge
add
fnstsw
lret
add
mov
in
loopne
push
push
sub
shl
not
pop
push
push
dec
sub
rol
pop
push
push
sub
add
pop
push
movl
push
push
push
push
lea
push
push
push
call
loope
add
add
add
loope
pop
add
pop
add
testb
add
add
add
call
jp
add
lret
add
sub
pop
addl
test
je
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
pop
mov
imul
add
idivl
push
lret
add
mov
add
add
cmpsl
add
add
enter
cli
add
xchg
ret
movb
push
je
loop
scas
sub
pop
mov
push
push
push
push
push
call
add
jbe
in
add
add
lods
add
lahf
testb
lea
add
mov
sahf
add
lods
fiadds
loop
add
xchg
add
add
jno
lret
imul
add
add
pusha
mov
loop
add
add
call
loopne
stos
push
popl
lcall
pop
push
lea
push
call
xchg
add
xlat
roll
shlb
in
jno
add
xchg
add
jns
add
scas
lea
add
in
clc
pop
pop
pop
push
push
push
push
push
lea
push
call
loop
add
je
imul
add
mov
add
arpl
add
add
jne
test
add
cmpsl
add
fadds
add
sti
faddl
pop
sub
pop
leave
ret
push
shl
add
pop
push
push
dec
pop
mov
add
push
add
pop
push
push
xor
pop
push
push
push
push
push
push
push
push
push
call
xlat
nop
fsubl
stos
jmp
popl
cmpsb
xchg
add
add
xchg
cmpsb
jb
pop
stc
xchg
push
out
in
stc
jae
mov
mov
ljmp
cld
add
scas
sub
pop
push
push
add
add
pop
testl
addl
push
push
push
lea
push
push
push
call
test
add
out
lods
out
add
add
lret
add
mov
insb
stos
in
js
lret
add
xchg
push
bound
add
icebp
add
std
add
add
add
movb
pop
add
test
call
lea
push
push
call
clc
add
add
add
add
lret
scas
mov
sahf
fldl
add
jmp
add
push
add
sbb
add
roll
add
add
add
add
aam
add
inc
cld
decl
popf
lea
push
push
lea
push
push
push
lea
push
call
mov
movb
mov
xchg
ret
mov
add
xchg
cltd
add
jne
mov
add
loopne
add
add
add
mov
add
add
push
add
in
loopne
lcall
jne
push
push
push
call
rolb
mov
add
outsl
add
add
stos
push
mov
add
clc
add
test
add
frstpm(287
jmp
add
add
add
mov
xchg
add
push
add
popf
out
in
nop
fildll
jl
in
clc
pop
push
push
push
push
lea
push
push
push
call
add
mov
js
fidivs
movsb
add
xchg
add
mov
jmp
add
mov
add
add
loop
imull
add
scas
sub
pop
call
push
push
push
call
add
add
cld
add
hlt
int
add
jno
fwait
add
call
test
lods
cmc
add
loop
add
mov
mov
call
leave
add
pop
int3
shlb
pop
add
lret
addr16
roll
add
sbbb
shlb
sub
pop
cmpl
jne
push
shr
pop
pop
push
lea
not
sub
pop
pop
push
push
push
push
push
call
add
mov
mov
loop
xchg
jo
add
lods
popa
imul
add
movb
add
les
aad
add
imul
add
add
add
mov
add
add
pop
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
jle
add
jecxz
mov
xchg
int3
cmpsb
pop
pusha
xchg
imul
jb
lret
hlt
fadds
cld
shrb
insb
add
lea
add
push
add
test
movl
andb
scas
add
add
std
cmc
xchg
lods
sub
pop
leave
push
sub
shl
lea
dec
pop
ret
push
add
pop
push
push
pop
mov
push
rol
add
pop
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lahf
mov
test
hlt
add
xchg
jp
push
popf
add
add
icebp
fs
fs
pop
add
lret
iret
loop
mov
jns
jl
jl
insb
add
clc
mov
jnp
shll
mov
add
pop
push
push
push
inc
shl
lea
pop
push
push
push
inc
xor
inc
pop
movl
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
jmp
je
add
lods
add
lcall
add
add
loop
adc
jmp
adcb
ret
lds
mov
fwait
lea
xchg
add
lcall
add
cmp
call
mov
inc
adc
add
add
pop
add
aad
mov
fidivl
pusha
into
filds
pop
add
add
add
test
add
push
mov
add
data16
jp
ret
cli
sub
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
jae
add
add
arpl
pusha
mov
add
add
add
add
popf
add
clc
push
popa
pop
push
cltd
mov
testl
lods
cmpsl
mov
iret
jle
add
out
call
add
add
add
add
push
add
sub
pop
call
subl
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
add
fnsave
push
insb
add
add
mov
add
jl
jmp
xchg
flds
add
sub
pop
cmpl
jne
push
xor
rol
rol
pop
pop
push
add
pop
pop
push
push
call
sti
add
add
lret
add
rcr
mov
aam
rorl
aad
mov
loope
clc
lahf
mov
add
jge
into
add
xchg
add
loopne
in
clc
lcall
push
push
lea
push
push
push
push
push
push
call
add
xchg
cmc
incb
push
add
add
push
add
add
sbb
lea
insb
add
mov
addb
mov
add
notb
cwtl
js
iret
jle
lahf
add
pop
add
mov
add
cmc
sub
pop
pop
push
pop
leave
ret
push
not
lea
pop
push
mov
push
add
shr
pop
add
push
add
add
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
rcrb
add
stos
leave
jno
lret
add
clc
add
stos
add
cld
add
add
incb
add
pushf
jecxz
add
add
xchg
add
push
add
add
rolb
add
out
jno
add
cmpsb
rcr
jle
incb
imul
bound
add
add
mov
fcomps
push
lea
push
push
push
push
push
call
add
test
add
mov
repnz
lds
add
add
jbe
fisubrs
mov
js
sahf
cmpsb
imul
push
xchg
add
fisubl
add
add
jge
les
add
lcall
push
push
lea
push
call
cld
scas
lret
xchg
in
add
add
filds
add
hlt
add
lret
sti
cli
add
add
faddl
filds
add
add
cltd
in
add
jecxz
cltd
scas
lds
ret
in
mov
xchg
out
add
lahf
add
add
add
fisttpll
in
hlt
pop
push
push
ror
inc
sub
shl
pop
mov
push
lea
push
call
add
add
pop
jae
ficoml
pop
fadds
jb
lret
out
popf
jmp
add
add
fiaddl
add
add
fiaddl
scas
add
add
lcall
int3
aam
sub
pop
lea
sub
push
push
lea
push
push
lea
push
push
push
call
add
add
rorb
add
in
pop
jne
xchg
mov
mov
std
popa
mov
lret
mov
add
sub
pop
mov
push
sub
pop
shr
add
push
inc
shl
rol
pop
mov
mov
push
lea
push
push
push
push
push
push
push
push
push
call
pop
pop
repnz
flds
imul
add
sarl
add
pop
test
add
mov
add
jl
int3
add
add
jns
add
push
add
int3
ja
pop
add
jle
popa
lahf
pushf
mov
add
add
xchg
add
push
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
add
mov
call
add
add
add
mov
fwait
test
mov
jp
scas
add
mov
add
mov
add
popf
testb
in
fcomps
shlb
inc
add
add
jmp
nop
nop
nop
cmp
jne
push
push
push
lea
push
lea
push
call
add
add
popa
add
add
test
add
imul
icebp
jb
add
mull
bound
fcmove
add
add
popa
xchg
aad
nop
popfw
add
bound
mov
faddl
jle
jne
add
jae
add
lahf
leave
gs
mov
add
mov
sub
pop
cmp
jne
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
mov
add
les
gs
cmpsl
popf
add
add
test
ficoms
jns
idivb
vpor
add
add
add
rcrb
lcall
add
add
add
cld
push
call
stos
jae
add
add
jo
movsb
jmp
add
add
add
outsl
add
pop
mov
add
sub
pop
jmp
push
lea
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
mov
push
push
test
fstps
roll
pop
ret
incb
add
in
xchg
scas
mov
add
nop
mov
add
lcall
ljmp
rolb
add
lea
push
lea
push
lea
push
push
call
pop
lods
int
mov
imul
add
rcr
cltd
fcoms
mov
jmp
in
mov
jecxz
popf
ret
scas
add
mov
stos
add
loop
je
imul
sub
pop
movl
push
push
lea
push
lea
push
push
lea
push
call
div
cmpsl
outsl
add
iret
adcl
add
add
stc
xlat
mov
jmp
add
add
int
mov
mov
mov
roll
add
scas
add
add
sub
pop
jmp
push
lea
pop
mov
mov
push
push
lea
push
push
push
push
call
nop
add
add
add
data16
fiadds
add
bound
add
push
xlat
push
movsl
faddl
jb
cltd
add
add
nop
add
add
cli
rcrl
add
cltd
add
cmpsb
insb
mov
xchg
shl
mov
cld
add
add
loop
in
call
jne
push
lea
push
push
push
push
lea
push
push
call
mov
pusha
test
in
jbe
fistpl
aam
add
add
lcall
fiaddl
flds
pop
sti
les
add
jbe
lods
add
add
pop
add
test
add
roll
mov
add
add
add
mov
mov
jge
xchg
repnz
test
mov
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
cltd
push
pop
xchg
add
add
add
add
add
pop
loope
scas
add
pop
add
add
addb
fbld
add
add
add
add
add
add
mov
pop
imul
nop
xchg
push
add
xchg
xchg
pop
mov
sub
lcall
add
add
add
addr16
jmp
push
call
add
pop
lcall
addl
les
xchg
clc
filds
add
arpl
add
movsl
add
jns
add
jnp
add
in
pop
add
add
out
les
add
test
out
call
lcall
mov
add
push
push
push
push
lea
push
push
push
call
push
repnz
push
xchg
lret
push
pop
lahf
add
test
jmp
add
add
add
add
enter
add
divl
add
fadds
lods
add
sarb
pop
add
mov
jmp
mov
cmpw
jne
push
push
push
push
call
fstps
add
add
into
jno
pusha
insb
out
jl
add
lretw
add
add
add
add
add
shrl
scas
push
add
ja
add
sahf
add
push
jmp
push
data16
add
xchg
add
clc
add
jae
in
lock
lcall
inc
adc
dec
xchg
fistl
pop
cwtl
movsl
mov
push
push
lea
push
call
in
mov
in
add
ljmp
test
add
ljmp
addl
add
add
add
icebp
pop
cmpsb
movsb
add
mov
loop
pop
add
add
add
add
add
enter
rclb
push
add
add
add
mov
fucomip
mov
in
movl
jmp
push
push
lea
push
lea
push
push
push
push
push
push
push
call
popa
lcall
add
add
jb
filds
add
add
lcall
add
xchg
into
add
cmpsb
add
mov
test
js
add
in
fcompl
add
fidivrs
add
nop
add
add
add
sub
pop
pushl
pop
push
push
call
in
jno
bnd
mov
test
add
mov
mov
popl
add
add
mov
test
xchg
pop
add
outsl
addb
add
out
add
pop
imul
add
sub
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
xchg
in
add
aam
add
jns
mov
jno
popf
stc
add
mov
add
mov
add
push
add
push
mov
cmpsb
sbbb
mov
add
lret
outsl
mov
scas
add
icebp
add
addb
jne
jnp
stc
add
mov
loopne
mov
push
push
call
add
add
fiadds
mov
lds
push
add
add
add
sahf
add
in
add
mov
mov
aam
add
mov
ljmp
add
mov
in
clc
pop
mov
push
push
sub
sub
push
or
not
add
rol
sub
pop
rol
dec
pop
push
push
call
lret
push
lods
add
add
pushf
xchg
mov
xchg
mov
jnp
mov
fsubrs
shl
repnz
mov
pop
mov
add
mov
add
add
add
add
mov
add
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
cli
cli
add
add
je
jae
cmc
xchg
add
add
add
pop
mov
sahf
push
into
pop
popl
lcall
sarl
add
push
pop
cmpl
je
push
push
shl
add
push
and
add
rol
not
xor
dec
sub
shr
pop
dec
pop
push
sub
pop
push
push
pop
call
cmpl
je
push
push
sub
not
push
or
not
add
shl
add
sub
pop
add
pop
push
lea
push
lea
push
lea
push
push
call
in
call
add
mov
add
add
jmp
lods
jns
push
out
int
add
pop
int
lcall
jecxz
iret
in
mov
add
pop
add
add
int3
add
mov
jne
pop
sub
pop
push
push
shr
lea
rol
pop
call
push
rol
pop
cmpl
je
push
push
shl
not
push
sub
add
ror
rol
sub
shr
lea
xor
dec
pop
add
dec
pop
push
shr
ror
xor
pop
push
push
not
pop
call
push
add
pop
cmpl
je
push
push
sub
ror
add
push
sub
add
inc
shr
sub
dec
sub
pop
dec
shr
pop
push
not
sub
not
xor
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
pop
roll
cwtl
add
add
aad
loop
mov
jae
jmp
cld
xchg
push
mov
shlb
subb
in
in
lcall
fdivl
add
cmpl
je
push
push
sub
sub
add
push
push
pop
add
lea
not
not
shl
sub
dec
add
shr
pop
ror
ror
pop
push
push
lea
push
push
call
push
add
lock
test
jp
add
mov
jne
cltd
lret
mov
out
jbe
scas
gs
pop
push
jae
cmc
mov
lahf
fwait
push
lahf
add
add
xchg
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
push
or
inc
add
dec
sub
sub
pop
shr
dec
pop
push
push
push
push
call
add
lahf
mov
add
add
jge
add
mov
incb
add
add
add
add
xchg
call
roll
add
pop
mov
jl
lcall
aad
push
divb
aad
sti
add
sahf
fiadds
pop
add
add
pop
push
push
add
shr
pop
call
push
inc
shr
pop
cmpl
je
push
push
inc
xor
lea
push
and
add
ror
lea
sub
shr
pop
sub
xor
pop
push
lea
xor
pop
push
push
dec
sub
pop
call
push
shl
pop
cmpl
je
push
push
dec
lea
ror
add
push
or
not
add
shl
add
sub
add
rol
inc
pop
shl
pop
push
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
popf
fwait
mov
insb
add
add
add
ljmp
add
mov
mov
pop
mov
out
mov
xchg
add
pop
pop
mov
add
add
mov
add
outsl
xchg
add
pop
pop
add
call
cmpl
je
push
push
lea
not
push
push
pop
add
sub
add
sub
not
xor
pop
rol
dec
pop
push
push
push
push
push
push
push
push
call
mov
popf
add
push
add
cltd
mov
pop
stos
pop
nop
lea
jnp
mov
mov
pop
mov
push
add
mov
add
add
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
aad
jle
push
repnz
in
icebp
add
add
push
mov
std
test
sarb
leave
sub
pop
call
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
push
cli
add
mov
add
jl
jecxz
mov
in
fdivrl
jp
fldt
fmul
lock
loopne
push
shlb
in
loopne
lcall
cmp
test
add
add
mov
mov
sub
inc
shl
shl
push
xor
add
sub
shr
rol
dec
sub
ror
inc
pop
sub
inc
inc
pop
push
lea
add
xor
lea
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
mov
jge
leave
imul
leave
loopne
test
mov
push
lcall
mov
add
insb
add
push
in
add
movl
push
mov
add
stos
mov
loop
fistpll
mov
mov
loope
xchg
sub
pop
call
cmpl
je
push
push
sub
shr
push
or
inc
add
shr
rol
dec
sub
shl
pop
sub
add
sub
lea
pop
push
lea
push
call
hlt
mov
out
gs
aam
add
add
in
mov
repnz
insb
out
add
add
aam
je
xchg
mov
add
add
add
add
bound
xchg
add
add
bound
out
jnp
jo
add
mov
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
jne
aad
mov
add
arpl
js
push
rcr
jmp
outsl
add
add
roll
ja
lods
add
add
push
xchg
addl
fcompl
imul
roll
pop
pop
cmpl
je
push
push
xor
add
push
push
pop
add
dec
lea
sub
shr
pop
add
shl
shr
add
pop
push
push
push
push
push
call
add
add
pop
jmp
pop
fisubs
mov
stc
clc
add
nop
add
lds
add
add
mov
icebp
int
lods
add
xchg
add
push
arpl
testl
xor
add
push
push
call
add
add
add
jno
sti
mov
loopne
xchg
add
orb
add
add
xchg
cmpsl
clc
push
add
jle
add
jge
ror
sar
mov
clc
mov
mov
addr16
jae
add
scas
pop
add
clc
add
push
push
sub
pop
cmpl
jne
push
sub
pop
mov
movl
push
shl
shr
inc
inc
pop
jmp
push
inc
xor
pop
xor
pop
push
not
shl
pop
pop
push
lea
push
push
call
mov
lock
mov
add
rolb
cwtl
jl
mov
add
add
push
jle
add
add
jne
add
add
loope
rcrl
imul
add
add
xchg
mov
jmp
sub
pop
pop
push
push
lea
push
call
mov
add
mov
mov
mov
test
add
std
adcl
push
add
add
fcoms
pop
pop
push
push
lea
push
push
lea
push
lea
push
call
xchg
add
add
mov
in
add
stc
mov
add
lret
add
add
add
mov
mov
add
add
popa
lcall
add
add
mov
je
mov
add
pop
mov
mov
mov
add
call
leave
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
js
add
mov
mov
cld
add
xchg
ja
pop
pushf
data16
ja
aam
push
in
push
add
scas
stos
ljmp
jmp
add
out
mov
mov
add
lods
int3
add
ret
xlat
in
out
xchg
repnz
nop
sub
pop
ret
push
add
not
inc
dec
pop
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
mov
xchg
mov
out
repnz
add
std
add
add
pop
cli
add
add
std
add
add
pop
popf
add
roll
lcall
in
push
lea
push
lea
push
push
lea
push
push
push
call
ja
push
mov
out
add
add
mov
insb
lahf
add
add
add
mov
div
xchg
popf
add
xchg
jle
add
push
mov
add
insb
add
popf
mov
jge
ret
sti
jbe
arpl
sub
pop
add
push
push
push
call
out
lret
test
xchg
in
add
mov
jo
fstpl
add
leave
add
add
pop
in
jo
add
add
add
xchg
add
push
push
jmp
add
xlat
rcr
mov
add
sub
pop
cmpl
jne
push
push
inc
inc
push
and
add
shl
inc
sub
shl
pop
shr
lea
not
pop
push
shl
pop
pushl
call
push
xor
pop
push
call
push
not
shl
pop
jmp
push
push
push
lea
push
lea
push
lea
push
push
call
ret
lock
mov
jb
in
add
push
push
sahf
add
add
mov
jno
mov
add
cld
mov
add
clc
enter
push
add
test
add
mov
add
add
arpl
mov
out
add
pop
add
out
add
jbe
iret
jecxz
testl
test
add
push
push
push
push
push
call
push
add
pop
ficomps
mov
in
xlat
shrl
push
add
mov
push
add
lret
add
add
test
sti
jb
mov
jae
movsl
xchg
bound
pop
popf
sub
pop
cmpl
jne
leave
push
sub
shr
shl
shr
pop
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
jge
insb
add
imul
addl
fidivrl
add
add
jge
popl
add
add
add
jp
add
xchg
ror
jne
in
add
add
lcall
push
push
push
push
push
push
lea
push
call
out
mov
add
pop
flds
inc
add
stos
push
mov
add
add
push
pop
out
movsl
add
mov
add
scas
mov
xlat
flds
lcall
push
lea
push
push
push
call
mov
add
cwtl
stc
icebp
ret
add
testl
ja
sar
js
add
add
cwtl
leave
pop
pushf
add
je
jne
add
mov
add
add
mov
add
mov
add
add
popf
add
push
add
popa
add
jge
in
lock
lcall
push
push
push
push
push
push
lea
push
call
testl
pop
lods
movsb
subb
add
pop
mov
add
add
rclb
jle
movsb
add
add
ljmp
pop
leave
push
sub
sub
xor
pop
add
ret
push
add
shr
pop
jmp
push
shl
ror
pop
cmpl
jne
push
push
add
push
push
pop
add
shr
sub
sub
rol
ror
pop
ror
ror
pop
push
sub
dec
pop
pushl
call
push
xor
xor
shr
pop
push
push
xor
ror
pop
call
push
push
lea
push
push
call
imul
xchg
add
addr16
clc
add
mov
enter
add
loop
int3
add
data16
push
fadds
mov
pusha
add
add
subl
pop
add
mov
clc
add
lock
lcall
cli
sbb
add
jge
push
sub
add
loopne
add
in
add
filds
enter
mov
add
add
add
add
ja
xchg
addb
loope
push
add
cwtl
sub
pop
cmpl
jne
push
xor
lea
pop
mov
push
sub
inc
dec
rol
pop
mov
push
push
lea
push
call
pop
test
int3
add
jmp
add
mov
add
mov
add
jne
add
sti
add
in
hlt
pop
push
push
push
add
not
push
or
inc
add
rol
ror
sub
not
rol
pop
dec
shl
pop
push
push
lea
push
push
push
push
push
call
add
sarb
mov
cmc
jl
mov
add
add
xchg
xchg
in
fwait
pop
xchg
mov
lock
out
push
add
mov
lahf
add
jne
push
push
call
add
lret
icebp
add
add
push
add
add
lcall
add
andl
out
lock
add
add
mov
lods
cltd
xchg
add
add
add
sub
pop
call
push
not
pop
call
push
push
xor
dec
push
and
add
add
not
sub
dec
rol
pop
shl
ror
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
pop
add
add
mov
lods
add
add
add
subl
add
jmp
add
sahf
jp
xchg
fsubs
jge
mov
in
loopne
lcall
jne
call
push
not
shr
pop
call
push
push
dec
push
xor
add
dec
sub
dec
pop
pop
push
push
push
lea
push
call
fwait
add
pop
out
add
jnp
stos
add
iret
lret
mov
pushf
gs
sahf
jns
add
add
sub
pop
pushl
push
sub
pop
call
push
push
push
lea
push
call
push
xchg
add
fiaddl
lret
lret
mov
add
add
loopne
pop
xlat
pusha
xlat
bound
aam
add
xchg
xchg
mov
je
add
lds
add
push
mov
add
divl
sub
pop
call
push
push
xor
push
push
pop
add
shr
sub
rol
shl
rol
pop
shr
not
dec
pop
push
add
add
not
lea
pop
pushl
push
push
push
lea
push
push
push
lea
push
lea
push
call
jle
imul
adcb
testb
mov
mov
xchg
xlat
add
add
add
pop
loope
rolb
add
lcall
jecxz
add
push
lea
push
push
call
fiadds
add
add
scas
mov
push
popl
lods
add
pusha
loopne
add
imul
jge
add
jnp
add
test
xlat
add
jecxz
mov
mov
scas
mov
add
enter
ret
add
add
jmp
scas
outsl
add
in
hlt
pop
call
push
push
inc
push
push
pop
add
rol
sub
lea
lea
pop
xor
pop
push
ror
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
nop
add
scas
shlb
add
xchg
cmc
add
imul
fwait
jle
add
arpl
xchg
add
jbe
xchg
add
add
add
jmp
push
fs
loop
mov
fs
add
pop
jl
xchg
sub
pop
call
push
sub
rol
add
pop
call
push
push
shl
push
xor
add
add
sub
dec
pop
not
ror
sub
pop
push
push
push
push
push
push
push
call
insb
add
sti
out
add
les
pop
add
mov
out
fwait
add
std
add
sti
popa
fcoml
out
int
faddl
sahf
add
xchg
add
lock
fs
int
add
ja
mov
xchg
shl
add
sar
add
in
pushl
push
ror
shr
pop
call
call
push
push
lea
push
or
not
add
add
inc
add
add
sub
rol
not
pop
add
xor
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
fstpl
add
push
add
scas
add
xchg
mov
jo
add
in
fcompl
jne
call
push
xor
sub
shr
pop
call
push
push
ror
shl
shr
push
push
pop
add
inc
add
sub
add
lea
inc
pop
pop
push
dec
shl
pop
pushl
push
dec
dec
pop
call
push
rol
ror
sub
pop
call
push
push
sub
push
push
pop
add
inc
inc
sub
xor
sub
inc
pop
sub
dec
sub
rol
pop
push
sub
xor
lea
pop
pushl
call
push
ror
add
pop
call
push
push
dec
lea
inc
add
push
xor
add
dec
not
add
sub
dec
dec
dec
pop
add
pop
push
lea
shl
add
pop
pushl
call
push
push
push
push
lea
push
push
call
add
mov
pop
mov
pop
add
jmp
mov
add
mov
push
in
lods
nop
add
lret
call
je
add
xchg
add
shrb
aam
add
ljmp
pop
sub
pop
lea
push
dec
pop
push
call
push
push
dec
inc
push
or
inc
add
add
shr
add
sub
pop
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
jbe
xchg
movb
repnz
nop
add
add
add
repnz
mov
add
clc
add
add
add
movl
sub
pop
pushl
push
push
lea
push
push
call
out
in
add
add
add
ja
xchg
bound
mov
test
insb
xchg
add
pusha
imul
lods
add
fildl
arpl
add
push
sub
sub
pop
call
push
push
shl
dec
not
inc
push
or
not
add
dec
not
sub
rol
sub
shl
pop
rol
add
pop
push
push
push
lea
push
push
push
push
push
push
call
add
shlb
mov
std
mov
add
add
rcrl
movsl
add
lret
xchg
aad
lods
mov
in
jecxz
scas
mov
push
add
add
stos
xor
sti
mov
clc
ljmp
add
add
mov
lock
mov
in
fdivr
lcall
jne
push
shl
pop
call
push
push
push
push
push
push
push
push
call
scas
pop
in
push
mov
add
add
add
stc
add
mov
sub
pop
xchg
sbb
cli
mov
scas
lea
add
add
push
add
movsb
in
add
jnp
jle
xchg
scas
rcrl
add
mov
lcall
shrb
stos
push
xor
dec
shl
sub
push
or
inc
add
rol
sub
shr
pop
shr
shr
pop
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
xchg
add
in
add
bound
add
pop
add
nop
add
push
sub
pop
pushl
push
sub
add
xor
pop
call
call
push
xor
pop
lea
push
push
add
inc
add
push
or
not
add
shr
sub
shr
ror
pop
dec
xor
lea
pop
push
shr
sub
pop
pushl
push
dec
shl
pop
call
push
lea
push
lea
push
push
push
call
jae
jo
xorl
push
jmp
scas
mov
cltd
add
pop
add
js
cmc
fwait
lods
jbe
jmp
xchg
add
add
andl
add
shl
cld
cmpsb
add
mov
jb
add
pushf
in
out
add
xchg
add
call
push
push
lea
xor
inc
push
or
not
add
dec
sub
sub
sub
pop
rol
pop
push
push
push
push
call
add
addr16
add
xchg
frstor
lret
mov
add
mov
add
add
stos
add
add
add
add
add
aam
mov
lea
in
lock
lcall
jne
push
push
push
push
push
push
call
push
cld
add
mov
loope
mov
loop
pop
scas
add
add
jecxz
stc
add
mov
pushf
add
mov
mov
scas
add
xchg
js
sub
pop
call
push
sub
pop
call
mov
push
push
sub
dec
add
push
or
not
add
add
ror
dec
sub
shl
pop
add
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
fwait
lcall
xchg
add
bound
pop
mov
clc
imul
push
jmp
insb
sub
pop
pushl
call
push
push
push
push
call
std
pop
add
add
movsl
pushf
pop
addr16
js
add
jns
add
add
push
jnp
je
leave
add
pop
jp
mov
pushf
sbb
xchg
add
xchg
fcoml
xchg
lcall
add
jle
xor
dec
icebp
loop
lea
push
push
lea
push
push
push
push
call
fiadds
add
add
add
out
mov
scas
add
stos
stos
add
fisubrl
add
mov
in
push
add
push
cltd
jno
iret
push
aam
sahf
cltd
lret
sub
pop
pushl
push
push
push
push
call
add
enter
decb
push
add
add
test
add
out
add
sarl
pop
add
push
add
mov
add
add
cmpl
add
add
sub
stc
les
add
lcall
lcall
shrb
cmp
or
inc
add
shr
lea
sub
add
sub
shl
pop
shl
pop
push
add
rol
inc
pop
pushl
call
push
push
sub
add
push
sub
add
not
sub
add
add
pop
sub
pop
push
push
add
xor
push
xor
add
dec
inc
sub
rol
add
sub
pop
rol
dec
pop
push
sub
pop
call
push
push
sub
not
lea
add
push
and
add
not
rol
sub
sub
shl
dec
shr
pop
inc
inc
ror
add
pop
push
push
call
add
add
pushf
xchg
hlt
add
mov
fcompl
push
add
mov
add
add
jne
pop
jl
jns
add
add
add
ret
hlt
add
xchg
add
addr16
add
add
pop
jecxz
call
mov
sub
pop
pushl
push
lea
lea
dec
sub
pop
call
mov
push
rol
shl
add
dec
pop
lea
lea
push
inc
inc
lea
shr
pop
push
push
push
not
pop
push
push
sub
shr
shl
pop
push
push
push
lea
push
lea
push
lea
push
push
call
pop
mov
lret
add
add
jl
mov
mov
cltd
add
pop
rcrl
add
mov
mov
add
pop
xchg
push
flds
add
in
in
lcall
add
add
xor
add
cmpsb
add
ljmp
mov
jnp
add
add
stos
frstor
xchg
fstpl
add
add
xchg
add
add
lcall
add
lea
push
push
push
lea
push
call
add
add
add
add
js
add
xabort
cwtl
jae
add
add
int
lea
add
in
call
jne
push
push
lea
push
lea
push
call
sahf
addl
add
mov
add
add
addl
fdivr
add
add
js
add
into
add
add
add
mov
jge
add
pop
push
call
push
push
xor
push
or
inc
add
sub
sub
rol
sub
xor
sub
sub
pop
ror
rol
pop
push
rol
rol
pop
pushl
push
add
add
pop
call
push
dec
shr
add
pop
call
push
ror
not
sub
sub
pop
mov
pop
push
sub
ror
inc
pop
dec
jne
jmp
push
lea
push
call
lahf
add
xchg
add
jecxz
mov
iret
add
add
outsl
push
icebp
mov
mov
aad
add
add
movsl
mov
lret
add
mov
fsts
push
add
add
aad
imul
std
jp
roll
add
add
xchg
stc
test
pop
ja
in
sub
pop
call
push
push
rol
shl
xor
push
xor
add
sub
sub
add
pop
sub
dec
lea
lea
pop
push
push
push
lea
push
push
push
call
mov
shrl
add
mov
add
xchg
push
add
add
ror
ljmp
add
add
nop
mov
mov
xorb
repnz
add
call
pushl
call
push
sub
add
inc
pop
push
push
sub
dec
inc
pop
call
push
push
call
enter
add
add
add
xchg
rolb
popf
add
mov
push
rcl
jne
add
int3
jmp
in
push
mov
aam
popf
pop
add
add
add
xchg
popf
mov
loope
jle
fiaddl
lcall
add
jle
xchg
add
xchg
add
mov
add
add
lea
push
push
dec
sub
shr
push
or
inc
add
sub
not
sub
xor
pop
xor
sub
pop
push
sub
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
out
out
lret
add
insb
mov
add
rol
aam
jae
xchg
push
add
add
add
pop
add
lea
add
add
push
add
lahf
add
add
jmp
pop
mov
sub
pop
call
push
push
push
push
lea
push
call
mov
lds
imul
add
add
mov
push
add
add
test
ljmp
add
sti
pusha
in
add
add
xchg
cwtl
add
add
add
pop
mov
add
add
std
imul
mov
imul
lock
call
push
push
lea
lea
push
or
not
add
rol
shr
sub
not
pop
shl
sub
pop
push
lea
dec
sub
pop
pushl
push
push
push
push
push
push
push
call
insb
jmp
add
add
pop
add
mov
add
mov
add
mov
add
jmp
js
pushf
jge
push
push
std
aam
add
xchg
mov
push
sahf
addb
scas
jge
nop
lods
les
sub
pop
call
push
push
push
push
push
call
rclb
rclb
add
add
gs
add
add
xchg
pop
add
push
add
ja
jnp
xchg
cmpsl
imul
andb
in
rcrb
outsl
xlat
imul
addl
add
rclb
jne
pusha
cmp
adc
inc
cld
push
lea
push
call
add
nop
mov
ret
add
arpl
pop
mov
cmpl
mov
add
lahf
add
xchg
cwtl
fildl
add
mov
icebp
add
pushf
mov
fstpl
loopne
sub
pop
lea
push
push
shl
xor
push
or
not
add
dec
inc
sub
sub
sub
add
pop
inc
pop
push
lea
push
push
push
push
call
add
add
fwait
add
clc
movsl
clc
ljmp
add
xchg
mov
xchg
add
pop
add
add
jbe
bound
add
sub
pop
pushl
push
add
pop
call
push
push
push
push
push
call
add
sbbb
cltd
mov
lahf
add
iret
add
pushf
test
stos
fcmovne
jnp
negl
add
jnp
mov
pop
jecxz
push
add
sahf
bound
mov
add
out
add
sub
pop
lea
push
lea
push
push
push
push
call
add
add
add
outsl
add
shl
add
push
jb
lock
scas
std
add
jb
test
add
add
add
mov
add
in
add
add
cmpsb
fidivs
add
push
add
xchg
icebp
mov
scas
mov
mov
lcall
push
inc
inc
pop
push
push
lea
push
call
pop
aam
add
add
add
add
add
add
fldl
add
add
add
jecxz
mov
add
add
mov
add
add
add
jecxz
scas
push
add
lret
loopne
add
add
lcall
add
inc
mov
push
call
sahf
fs
jbe
stos
mov
testb
add
jnp
add
add
mov
add
add
pushf
scas
add
add
hlt
loop
fdivs
jecxz
add
xchg
add
sub
pop
pushl
push
push
not
shl
shr
push
push
pop
add
lea
ror
dec
sub
shr
xor
add
pop
ror
shl
inc
pop
push
add
shl
add
pop
push
call
push
push
not
sub
add
add
push
xor
add
add
rol
sub
sub
add
pop
inc
pop
push
dec
rol
rol
pop
pushl
push
pop
call
push
add
sub
add
pop
push
call
push
push
inc
push
or
inc
add
not
add
sub
shr
sub
shr
pop
rol
pop
push
not
inc
pop
pushl
call
push
push
push
push
push
call
add
push
add
jbe
add
add
add
add
int
aam
add
scas
add
andb
jne
loop
cmc
mov
add
in
add
xlat
int
mov
hlt
lea
add
add
testl
xchg
add
add
sub
pop
call
jmp
push
add
ror
lea
pop
pushl
push
push
call
add
in
push
negl
add
lods
shll
add
jecxz
cmc
orl
fucomi
add
pop
add
std
mov
mov
fnstcw
mov
in
out
add
gs
add
add
add
add
add
mov
jnp
in
clc
pop
mov
push
shr
shl
add
pop
jmp
push
push
sub
shl
push
or
inc
add
rol
ror
ror
sub
lea
pop
add
ror
shl
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
clc
nop
add
add
add
add
jns
cld
push
divb
cmc
xchg
add
push
mov
add
lcall
jne
call
push
inc
lea
rol
pop
push
call
push
push
ror
add
not
push
push
pop
add
lea
sub
sub
dec
ror
pop
shl
sub
sub
pop
push
add
rol
pop
pushl
push
lea
push
call
mov
mov
int
add
test
add
test
jo
gs
add
rolb
xlat
rolb
add
add
gs
add
test
add
mov
sub
pop
call
push
xor
sub
pop
push
push
shr
shl
ror
pop
call
push
push
push
push
push
call
popl
add
jmp
xchg
add
jp
jno
shlb
lea
loopne
imul
addl
add
cmc
add
add
pop
shl
mov
add
clc
fwait
ljmp
add
cld
add
add
mov
in
in
pop
leave
push
lea
pop
add
pop
push
dec
dec
lea
pop
pop
pop
push
push
push
push
push
push
call
and
add
add
loop
add
add
pop
mov
add
add
push
aam
iret
mov
mov
sub
pop
pop
push
not
shl
lea
add
pop
leave
add
push
shl
ror
not
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
add
lcall
icebp
int3
repnz
sahf
rolb
cmpsb
sti
add
sti
add
roll
imul
nop
mov
std
stos
jne
add
mov
add
add
jl
push
hlt
sbb
mov
pop
leave
ret
push
push
push
lea
push
push
push
push
call
mov
xlat
add
jns
scas
out
add
cmc
add
aad
add
mov
aad
repnz
sub
out
push
mov
pusha
jecxz
add
push
loopne
cwtl
add
push
call
pop
add
testl
add
mov
add
in
mov
enter
test
sub
pop
push
push
push
push
call
jmp
add
popf
test
add
lds
je
ja
add
cmpsb
ja
mov
push
jno
pop
push
add
bound
fs
add
les
add
add
pop
jp
jle
add
hlt
pop
mov
cmpl
jne
push
push
push
lea
push
push
push
push
push
call
pushf
add
popl
pusha
add
jp
mov
add
add
add
mov
test
add
xlat
rolb
bound
add
add
imul
in
add
cmc
xchg
add
add
add
add
add
cmpsb
add
rolb
mov
flds
fadds
in
addl
add
sub
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
sahf
loopne
add
add
lcall
add
mov
test
add
add
jle
add
add
add
mov
fdivr
lcall
mov
add
push
inc
shr
lea
lea
pop
mov
push
push
call
scas
lea
mov
addl
cli
add
mov
add
add
hlt
sbbl
sti
mov
pop
jne
mov
push
jae
add
add
jns
add
add
int
movb
not
add
add
addb
add
js
cld
mov
ror
sub
pop
and
push
rol
not
not
ror
pop
xor
push
not
sub
rol
xor
pop
xor
add
push
rol
pop
xor
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
movsl
add
outsl
imul
icebp
movl
mov
mov
fs
mov
in
test
add
popa
fsubs
lods
add
mov
cmpl
add
mov
add
add
push
add
add
in
fdivr
lcall
push
rol
lea
pop
sub
jmp
push
sub
shl
pop
sub
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
jecxz
add
nop
add
add
roll
pop
push
enter
add
add
add
add
add
add
add
scas
add
add
jmp
popl
add
add
mov
in
fcomps
xor
push
push
call
andl
add
popa
clc
add
add
lret
add
mov
out
xchg
add
add
lcall
jmp
push
shr
dec
pop
cmp
jne
push
push
lea
push
call
pop
call
icebp
stos
mov
hlt
call
add
faddl
add
add
add
lods
add
lcall
add
add
add
mov
add
add
shl
add
rolb
icebp
add
mov
in
add
add
mov
push
push
push
push
call
add
add
mov
insb
mov
add
mov
add
mov
jp
add
stos
out
add
nop
mov
xchg
subb
add
out
xchg
jno
popa
add
add
jae
add
stos
in
add
pusha
lret
mov
sub
pop
lea
push
push
lea
push
push
push
push
call
les
add
mov
xchg
add
mov
add
pushf
add
add
stos
mov
add
pop
sub
mov
push
ror
pop
shr
push
add
inc
inc
ror
pop
add
sub
push
lea
push
call
cmc
xchg
rolb
loop
add
add
lcall
imul
add
mov
add
ret
aad
add
data16
mov
push
add
jns
test
addl
push
xchg
add
lcall
add
fiaddl
add
clc
lcall
xor
push
lea
push
push
push
push
lea
push
push
lea
push
call
faddl
std
add
push
push
out
add
stos
fs
add
add
in
mov
add
add
add
add
outsl
roll
mov
add
add
add
push
jle
add
add
push
out
push
fistps
lcall
jmp
pop
and
push
push
push
push
push
lea
push
push
push
call
lods
add
into
rolb
mov
xchg
stc
shl
js
roll
add
int3
jl
cmpsl
add
add
cld
xchg
sahf
mov
add
add
lcall
jmp
push
ror
add
sub
not
pop
cmp
jne
push
push
lea
push
lea
push
lea
push
push
push
call
rcr
in
add
add
mov
imul
cli
jge
aam
add
add
jb
fdivr
in
mov
lret
scas
add
add
fwait
pop
add
add
jge
imul
test
add
add
js
popf
add
pop
add
mov
movl
sub
pop
leave
push
sub
pop
ret
push
add
ror
pop
push
push
lea
push
push
lea
push
call
add
add
popl
mov
mov
sbbl
ja
add
addl
add
add
pop
data16
add
pop
add
fcmovne
xchg
lret
add
in
lock
mov
add
push
ror
sub
pop
push
push
lea
push
push
push
call
testl
test
out
mov
add
pushf
add
jle
scas
je
pop
add
add
testb
int3
pop
add
add
push
add
lret
js
add
add
fs
int3
fcmovnb
addb
sub
pop
push
push
push
lea
sub
pop
push
push
push
push
push
push
call
into
add
fucomi
mov
add
call
popa
add
rolb
iret
pop
mov
stc
roll
add
stc
pop
add
push
int3
add
add
xchg
test
add
add
add
sbb
sub
pop
mov
push
add
inc
add
dec
pop
lea
push
add
xor
pop
sub
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
add
push
data16
fldcw
mov
add
pop
add
loope
rcr
add
add
jns
add
mov
sahf
cld
xchg
add
imulb
mov
repnz
loope
mov
add
add
sub
pop
shr
push
add
sub
sub
pop
add
push
sub
inc
lea
pop
mov
push
push
push
call
popa
add
adcl
add
je
out
cmpsb
rorl
movsl
add
add
jb
lock
jp
xlat
add
jno
xchg
fwait
shlb
mov
xchg
int3
xorl
fsubs
mov
imull
scas
fiaddl
cli
xchg
add
add
fbstp
add
hlt
pop
add
push
rol
add
shl
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
flds
add
add
insb
push
jb
add
add
add
pop
add
add
add
pusha
leave
lods
mov
out
addl
add
filds
add
add
in
loopne
add
xor
push
push
call
jmp
sbb
repnz
push
cmpsl
mov
mov
subl
jbe
jle
mov
loopne
add
add
add
pop
pop
xchg
add
add
lcall
add
sub
pop
mov
and
push
not
lea
rol
pop
rol
push
lea
push
lea
push
call
aad
xchg
add
mov
xchg
imul
add
add
jl
mov
fiaddl
mov
bound
in
hlt
lcall
rolb
lea
pop
xor
push
push
push
push
push
push
lea
push
lea
push
call
pop
add
cltd
mov
add
add
add
leave
lret
jb
add
sub
add
sub
cmc
xchg
jae
add
cmpb
jne
push
push
push
push
push
push
push
call
add
add
pop
add
testl
pop
fcom
mov
xchg
test
fisttpll
mov
mov
addr16
xchg
mov
pop
test
js
test
scas
cmpsb
add
mov
add
lret
aad
mov
js
jge
add
mov
xchg
add
add
hlt
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
push
add
jno
mov
imul
xchg
insb
add
add
add
mov
add
jb
xchg
cmpsb
shll
add
scas
add
lods
insb
mov
mov
mov
cli
std
add
add
add
add
add
push
add
add
roll
into
add
imul
test
loop
in
loopne
cmp
je
add
push
dec
shl
shr
pop
cmpl
jne
xor
push
pop
pop
push
xor
sub
sub
add
pop
pop
pop
push
shr
lea
xor
shl
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
fstps
in
mov
test
xlat
lcall
cwtl
clc
add
popa
mov
mov
imul
add
add
add
add
pop
jae
jbe
push
add
shll
mov
loopne
je
mov
mov
xchg
jl
testb
in
fcomps
push
sub
sub
ror
pop
ret
push
lea
pop
mov
push
rol
rol
add
pop
add
push
shr
pop
push
push
push
dec
shl
pop
add
mov
push
pop
testw
push
pop
pop
pop
push
lea
sub
dec
pop
mov
push
add
xor
pop
push
push
shr
inc
pop
call
xor
push
lea
push
lea
push
push
push
lea
push
push
call
mov
xchg
int3
mov
add
fcoms
frstor
add
add
add
mov
xchg
into
mov
add
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
filds
add
cld
xchg
add
add
add
xchg
add
shlb
add
add
int
fdivl
add
mov
leave
pop
pusha
xchg
push
sub
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
jl
mov
shl
enter
add
scas
add
mov
sahf
add
lahf
xchg
add
mov
add
jmp
popf
add
pop
add
pop
mov
test
loopne
mov
mov
jns
sub
pop
pop
pop
push
add
not
pop
leave
push
pop
ret
push
pop
push
push
sub
not
sub
inc
pop
mov
add
push
push
push
push
call
jecxz
add
sahf
leave
add
int
rcrb
out
xchg
add
add
add
add
xlat
add
pusha
fsts
xchg
add
jle
fiaddl
push
push
push
call
mov
pop
add
add
push
add
arpl
add
add
fwait
add
mov
mov
pop
mov
outsl
mov
mov
gs
mov
hlt
pop
push
push
push
sub
rol
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
xchg
stos
push
add
clc
add
xchg
push
pusha
add
add
sbbb
jmp
imull
fadds
mov
mov
jnp
add
jno
add
push
mov
outsl
mov
fdivrl
add
add
add
fdivr
lcall
pop
or
ror
pop
pop
push
shl
pop
lea
push
push
push
push
push
push
push
lea
push
push
call
orl
shrb
loopne
add
add
stc
test
add
add
add
xlat
cmpsb
add
enter
scas
mov
call
add
add
mov
add
stos
arpl
push
sti
add
add
pop
icebp
add
add
push
xchg
int3
push
sub
pop
sub
push
push
call
out
cmpsl
lods
add
fisttps
add
stc
lret
add
add
add
xchg
add
add
nop
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
mov
pop
loopne
fsts
cltd
add
add
add
mov
stos
add
jne
jmp
jl
cli
add
je
mov
add
add
push
add
add
xchg
add
jnp
add
ljmp
add
push
sub
inc
pop
mov
push
lea
add
pop
add
push
not
ror
sub
sub
pop
pushl
push
sub
lea
sub
pop
popl
push
lea
push
push
push
call
add
add
mov
add
scas
add
stc
fcmovb
add
in
push
test
addl
int
in
add
xchg
jnp
add
stos
jmp
notb
add
add
fcoml
pop
mov
jmp
fldt
add
mov
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
add
stos
out
mov
mov
add
fnstsw
lods
mov
int
lods
subb
add
add
push
add
iret
jmp
add
push
push
add
in
add
add
mov
lahf
push
add
add
out
add
mov
add
lcall
stc
xor
push
push
lea
push
push
push
push
push
push
call
cltd
fcmovb
enter
popl
jno
add
fiadds
mov
mov
popa
into
cmc
loop
out
xchg
mov
jne
add
add
jo
mov
add
add
add
jne
call
stc
add
add
rolb
in
loopne
lea
push
lea
push
push
push
push
lea
push
call
mov
aam
add
mov
cmc
lods
jb
add
cltd
jge
jnp
ret
clc
add
rorl
int3
add
lcall
adc
aad
add
xor
push
push
push
push
push
push
push
push
call
fldl
add
add
popa
clc
add
movsb
movb
pop
add
jbe
rolb
mov
faddl
add
add
addl
add
enter
push
pop
add
iret
add
in
movsl
add
out
add
xchg
add
sti
sub
pop
rol
push
sub
shr
ror
pop
nop
nop
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
jp
mov
mov
pusha
push
add
add
scas
mov
cld
mov
ljmp
add
add
lcall
add
ret
fildl
nop
push
push
push
call
add
xchg
add
sahf
add
add
push
add
mov
stos
mov
add
leave
xchg
add
leave
movsl
pop
add
test
aam
mov
add
jo
icebp
xchg
mov
roll
add
add
add
int3
stos
outsl
add
popf
xchg
add
lcall
push
push
push
push
push
call
movsb
shr
fs
jno
test
scas
add
lock
stos
push
add
jecxz
add
add
xchg
xchg
rol
stc
pop
cmpsl
add
in
lcall
nop
push
lea
push
push
push
push
push
push
push
lea
push
call
add
je
int
xchg
xorb
imul
add
repnz
mov
fistl
jle
mov
xlat
add
pushf
jae
add
ja
in
test
ja
xchg
loope
add
cmc
add
add
cmpsl
sub
pop
nop
push
push
push
push
push
call
vpunpcklqdq
add
jmp
faddl
add
fildl
rolb
add
aam
sti
lahf
clc
xchg
int3
fcompl
add
push
lds
xchg
add
imul
push
push
add
sub
pop
cmpb
jne
push
push
push
push
push
lea
push
call
mov
add
add
add
add
add
addl
add
add
add
fstp
js
incb
mov
div
add
jnp
add
add
roll
cld
hlt
add
pop
add
add
enter
add
add
lcall
inc
pop
ss
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
cmp
fiaddl
nop
mov
add
add
leave
popf
imul
jl
mov
mov
mov
loopne
lcall
push
lea
push
push
lea
push
call
xchg
enter
out
add
stos
iret
les
mov
pop
in
mov
imul
add
int3
mov
add
test
data16
mov
add
addl
add
movsb
mov
jb
add
xchg
in
add
lock
nop
cmp
je
push
push
push
push
push
push
call
out
aam
push
rolb
mov
pop
mov
add
in
add
xlat
mov
loope
add
shlb
mov
add
add
pop
add
mov
cmc
rorb
add
add
jae
sub
pop
nop
nop
push
lea
push
push
lea
push
push
push
push
call
mov
icebp
sbb
mov
pushf
add
xchg
fs
je
xchg
in
mov
add
shll
xlat
out
aam
jno
je
mov
int3
sub
pop
inc
push
not
sub
pop
nop
push
push
push
push
push
push
push
call
add
imul
pusha
add
add
add
jae
imul
sahf
push
pop
add
add
mov
add
scas
add
popa
cmpsl
jge
ljmp
addl
add
lcall
cmp
jb
push
lea
inc
lea
pop
xor
push
push
lea
push
push
call
testb
mov
rol
mov
add
leave
add
add
push
mov
shl
jae
out
pop
enter
into
xchg
add
push
out
mov
addb
cmpsl
mov
push
scas
add
add
into
add
push
xlat
push
test
add
add
xchg
add
add
xchg
loop
mov
push
push
lea
push
push
push
push
push
call
cltd
xchg
gs
add
fldl
int
mov
cwtl
fs
add
bound
xchg
jmp
xlat
add
mov
mov
fisubrs
arpl
jne
push
add
jp
mov
add
loope
sub
pop
add
movzwl
push
push
push
push
lea
push
push
push
call
jb
xchg
call
lret
in
add
loop
mov
xchg
pop
add
xchg
add
add
add
cld
push
cld
add
cli
js
pop
mov
popl
jno
push
ja
add
sub
pop
mov
push
push
push
push
push
call
add
arpl
mov
test
lcall
imul
scas
popa
lock
add
add
rorl
xor
push
add
add
dec
pop
xor
shl
push
rol
pop
xor
push
push
lea
push
lea
push
push
push
push
push
push
call
xchg
test
pop
in
add
add
mov
add
add
pop
add
add
bound
js
fldl
add
xchg
add
test
movsl
fadds
sahf
cmpl
add
sub
pop
shl
push
push
push
lea
push
push
push
call
add
aad
cli
sbb
shl
out
add
add
xlat
add
mov
popf
loopne
jmp
aad
add
mov
test
push
add
fimull
add
sbb
in
call
add
pushf
push
push
push
lea
push
push
call
bound
xchg
xchg
add
add
add
mov
add
add
add
xlat
loop
bound
int
add
stos
out
lea
mov
add
xchg
pop
add
in
xchg
add
mov
mov
out
xchg
add
mov
mov
addr16
jb
push
add
sti
sub
pop
shl
push
shr
pop
xor
mov
push
not
dec
pop
add
push
shl
lea
pop
pop
push
sub
add
ror
pop
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
imul
repnz
iret
add
add
add
mov
add
mov
movb
add
les
add
add
xchg
xchg
in
adcb
add
test
add
jecxz
add
addb
push
push
push
push
push
push
lea
push
push
push
call
out
add
add
push
add
add
je
xchg
int
mov
add
imul
mov
loope
pop
fwait
add
add
jp
add
icebp
mov
push
add
cld
xchg
add
mov
mov
mov
sub
pop
ret
push
ror
shl
add
pop
push
push
sub
dec
shr
inc
pop
mov
push
push
shl
sub
ror
rol
pop
push
push
not
sub
not
not
pop
push
push
lea
push
push
lea
push
call
repnz
loope
add
pop
fadds
jne
testl
mov
add
flds
in
ja
add
lret
add
mov
add
jns
xchg
add
filds
add
loope
add
hlt
je
push
add
push
roll
push
push
push
push
push
lea
push
lea
push
push
push
call
add
scas
mov
lret
in
faddl
lret
movl
jnp
push
add
add
add
stos
roll
add
mov
add
fldl
xchg
add
stos
add
mov
mov
pop
add
add
aam
int3
add
dec
or
lea
push
lea
push
lea
push
push
call
into
add
fwait
jmp
add
add
add
add
mov
pushf
add
lret
in
cli
ljmp
xchg
jle
lret
in
pop
mov
push
add
not
shl
pop
mov
push
ror
xor
pop
test
je
push
sub
rol
ror
pop
mov
push
ror
pop
test
je
push
add
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
ljmp
pop
jp
lcall
add
pop
rolb
shll
andl
push
mov
repnz
leave
add
add
add
jns
testb
jmp
jne
add
add
pop
scas
sub
pop
mov
push
shr
shr
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
out
add
add
cltd
call
hlt
add
ret
add
jge
add
loope
add
add
nop
push
xchg
stos
test
add
mov
add
lcall
cmp
je
push
push
push
lea
push
call
cld
add
lods
add
mov
hlt
add
int3
ret
xchg
icebp
add
add
add
xchg
mov
mov
add
addr16
add
stc
mov
sub
pop
test
je
push
ror
lea
shl
add
pop
mov
push
sub
rol
pop
inc
push
dec
shl
pop
cmp
je
push
push
push
push
lea
push
push
lea
push
call
js
add
add
jno
mov
ror
mov
add
add
add
add
cwtl
mov
cmpsl
mov
add
xchg
int3
add
add
mov
add
sub
pop
test
jne
push
push
lea
push
push
push
push
push
lea
push
push
push
call
cwtl
stos
enter
in
lret
aam
movsb
add
stos
sahf
leave
add
ljmp
arpl
xchg
add
fs
push
lods
jnp
add
add
add
add
add
fiaddl
mov
mov
out
gs
push
std
addb
in
fdivr
lcall
rclb
call
mov
jno
pop
add
pop
pushf
add
add
add
xchg
xlat
jp
add
fadds
stos
sahf
leave
add
mov
push
ficompl
lds
movsb
lock
jne
add
add
add
add
add
idivl
push
sub
pop
pop
push
sub
not
pop
pop
push
shr
pop
pop
push
push
push
push
push
push
push
push
call
jno
repnz
test
xchg
mov
add
add
push
add
add
testb
mov
add
pusha
shll
xlat
jge
iret
add
jle
add
xchg
imul
add
add
lcall
leave
push
push
lea
push
call
int
add
add
int3
push
add
add
ja
add
xchg
filds
cld
cmpsb
add
movb
add
add
jmp
mov
ja
mov
mov
add
mov
add
add
mov
add
mov
add
lret
add
jo
add
stos
add
mov
add
add
add
fldl2e
sub
pop
ret
push
push
push
call
mov
in
add
data16
jmp
rcrb
jp
add
add
aam
push
add
add
add
xchg
andl
push
add
fistpll
add
stc
stos
iret
add
testb
out
shlb
xchg
ljmp
mov
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
sbbb
faddl
add
in
lahf
fs
add
add
rolb
pop
jbe
add
ja
sub
pop
inc
push
push
lea
push
push
push
push
push
push
call
fiadds
in
add
add
cmpsb
enter
fiadds
cli
add
filds
fdivs
jno
stos
mov
movl
int3
fldcw
gs
stos
add
in
push
push
lds
add
add
in
fistpl
cwtl
add
add
add
lock
push
push
call
jmp
clc
js
mov
add
xchg
cmpsb
enter
add
xchg
popf
popa
add
icebp
clc
lea
addr16
add
rcll
mov
jl
jno
xlat
leave
add
add
sbb
add
sub
pop
lea
push
not
add
add
pop
mov
test
je
push
add
ror
pop
mov
push
shl
pop
add
cmp
jne
push
add
shr
pop
mov
push
dec
rol
rol
pop
test
je
push
add
pop
mov
add
push
rol
rol
sub
lea
pop
cmp
je
jmp
push
not
pop
xor
pop
push
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
add
mov
add
fnstsw
mov
xchg
movsb
pop
imul
add
add
loope
xchg
add
add
sub
pop
pop
push
add
add
lea
pop
leave
push
push
push
lea
push
call
xchg
addr16
js
data16
loop
add
cwtl
not
repnz
jnp
xchg
xchg
add
xchg
pop
mov
mov
push
data16
sahf
mov
mov
bound
shl
add
loope
in
lock
lcall
or
push
push
lea
push
call
jo
add
xchg
out
add
push
add
add
add
into
scas
lock
mov
add
mov
loope
iret
xchg
shll
lock
add
adcl
jae
pop
pop
rcll
jae
add
test
mov
push
mov
in
hlt
lcall
inc
call
out
into
pop
pop
push
push
push
push
push
push
call
movsb
add
push
push
enter
add
arpl
mov
aam
add
idivl
filds
push
add
pushf
add
add
push
add
add
add
fwait
js
mov
xor
add
test
push
mov
add
push
sahf
pop
sahf
add
in
call
mov
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
xchg
add
add
add
jno
mov
rcl
lock
imul
lahf
add
ljmp
fcomip
scas
add
add
mov
repnz
sbbb
aad
mov
mov
in
lock
pop
pop
push
push
push
push
push
push
call
add
outsl
std
push
mov
data16
add
pop
out
add
push
add
rorb
pop
add
mov
popf
add
add
cltd
sub
pop
pop
leave
push
shr
pop
ret
mov
push
lea
push
push
push
lea
push
push
push
call
cltd
out
sti
repnz
addr16
stc
xchg
add
mov
mov
add
lea
add
icebp
test
xchg
push
xlat
add
mov
mov
xor
roll
add
pop
push
ror
lea
not
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
cmp
xlat
stos
add
aad
add
mov
out
add
jge
pop
xchg
roll
push
fiadds
mov
mov
add
nop
mov
push
add
mov
xchg
push
add
cmc
lret
add
jp
jbe
leave
add
stos
add
jnp
add
test
sub
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
lea
mov
addb
mov
lods
add
mov
out
add
add
mov
mov
xchg
mov
fs
stos
lea
jbe
add
sub
pop
leave
push
push
push
push
push
push
lea
push
call
addb
xchg
add
add
add
xchg
mov
add
out
add
add
mov
cli
lcall
mov
insb
add
filds
sub
pop
ret
xor
cmp
hlt
inc
cmp
xor
adc
and
adc
add
adc
std
cmp
xor
adc
jb
adc
mov
add
std
push
push
pop
jge
pop
sub
fcmovnb
mov
lods
mov
cmp
adc
mov
lcall
js
movsl
or
aad
jns
loope
mov
ljmp
sub
in
leave
movsb
and
shll
adc
ja
mov
push
jne
adcb
pop
jge
mov
imul
in
test
pusha
mov
test
pop
int3
stos
inc
or
push
adc
outsb
xor
lret
mov
jo
mov
lret
and
dec
pop
fcmovb
sub
cmp
inc
cmp
mov
mov
mov
cmp
push
popa
cmp
push
dec
adc
push
add
jl
test
push
sbb
jg
dec
jl
mov
mov
jle
push
mov
sub
iret
pusha
push
aad
mov
in
daa
cli
ret
cld
jg
int
or
inc
jge
push
jmp
rolb
sub
cltd
mov
jns
xchg
push
cmp
pushf
and
fsub
push
or
sbb
aad
imul
roll
push
pop
jne
jnp
push
fsubs
stos
cli
xorb
es
jno
pop
data16
fldl
push
lahf
js
repz
pop
scas
rorb
push
inc
int3
frstor
mov
lds
jmp
xor
xor
ljmp
ja
jp
mov
cs
iret
xlat
add
lds
ds
pop
imulb
fimull
or
repnz
mov
aad
jno
cli
sbb
jnp
lcall
xor
adc
stc
incb
pop
insb
jmp
test
aaa
lods
test
push
dec
push
pop
sub
out
sti
int
addb
outsl
mov
hlt
mov
cmp
and
leave
fnstsw
jns
push
xor
arpl
sti
imul
jb
rolb
popa
jmp
mov
and
lock
notl
mov
push
sarl
fxam
mov
dec
std
pop
clc
ja
xchg
mov
imul
sbb
sbb
clc
sbb
mov
and
jle
mov
or
pushf
lock
jnp
lcall
repz
call
jmp
pop
xchg
cmp
mov
jg
icebp
push
sbb
push
mov
das
pop
adc
or
rcrl
cmp
loop
out
xor
xor
mov
mov
xor
shr
inc
call
dec
xchg
fisttpl
movsl
and
lret
push
or
lret
push
jl
nop
mov
out
outsl
iret
cmp
dec
pop
pop
enter
fstl
clts
in
mov
sbbl
into
lcall
cmpsl
lock
lret
add
jo
and
out
scas
mov
std
mov
xchg
pminub
ficomps
mov
xor
cmp
adc
push
cmpsb
push
push
pop
ja
lret
outsl
out
xor
add
out
mov
push
mov
movsb
pop
inc
ffreep
addr16
adc
push
push
cs
mov
and
mov
cmc
bound
add
and
insl
or
stos
cmp
push
mov
inc
sahf
cltd
enter
lret
mov
adc
mov
out
shll
or
xchg
ja
fs
jae
int3
ret
sbb
cmp
adc
and
movsl
or
lods
dec
lds
int
pop
insb
dec
in
pop
pushf
cmp
sub
and
loope
in
mov
ss
mov
and
xchg
mov
and
loopne
fistpll
and
mov
pop
add
mov
jge
xor
add
jb
inc
ss
xor
mov
out
aad
pop
into
loop,pn
sub
mov
ja
fistps
dec
cmp
pop
jnp
xor
push
out
pop
cmp
jae
push
or
sub
iret
mov
cmp
inc
lea
loop
shrb
gs
pop
sub
test
mov
rcrb
and
mov
jae
test
sub
mov
outsb
and
mov
jb
sbb
lret
sub
sbb
push
popf
mov
push
es
fwait
cli
xor
ror
or
int3
rcll
sbb
xchg
mov
hlt
out
add
mov
hlt
dec
push
je
sub
dec
adc
daa
xor
mov
mov
jbe
out
mov
insb
inc
jns
fwait
cmpsb
std
aad
dec
addl
jno
dec
adc
lahf
data16
jmp
xor
mov
sbb
pop
pop
mov
leave
call
pop
adc
gs
shrb
push
xchg
push
sub
cmp
sysexit
mov
sbb
push
sbb
pop
pop
xchg
fstl
xchg
icebp
push
fprem1
xchg
dec
mov
insb
aam
pusha
adc
jle
hlt
adc
sub
xlat
dec
lahf
loop
fcomps
cmp
push
jbe
insb
sub
sub
push
loope
ja
pshufw
jmp
pushf
mov
mov
inc
sahf
sub
fmull
mov
dec
push
loopne
mov
jle
pop
cmpsb
add
stos
repnz
sarb
lods
push
mov
pop
and
insl
bound
ja
scas
add
mov
or
jp
push
stos
shlb
stos
pop
outsb
stc
xor
popf
shlb
xor
sbb
fdivl
push
push
cmp
mov
inc
or
add
out
fwait
mov
mov
mov
push
and
in
sbb
jb
jle
cmp
pop
fs
cs
jne
xchg
cmc
dec
push
in
inc
cmp
sub
xor
cmp
stos
mov
andb
pop
mov
xchg
lods
shll
jno
xor
leave
lods
les
mov
inc
lods
in
test
pusha
rorb
pop
ss
test
out
divb
rorb
add
lock
sub
xchg
outsl
jg
xlat
inc
sarl
ret
cmp
clc
pusha
mov
pusha
lret
xor
sbb
mov
movsl
jne
push
or
ffreep
sti
adc
mov
aas
lock
adc
xchg
addr16
cli
das
mov
inc
dec
faddl
mov
mov
loope
pushf
mov
ds
jno
adcl
loop
and
xorb
mov
sbb
pop
bound
mov
dec
cmp
xchg
jo
fucomip
int
push
pop
out
fidivrs
scas
and
xor
dec
lock
xor
aad
push
or
bound
addr16
push
adc
sbb
mov
or
xor
fs
cmpsl
stc
and
aad
das
push
js
dec
adc
sbb
stos
xor
adc
in
push
jno
insl
push
lock
insb
dec
std
loopne
scas
push
pop
cmpsb
mov
scas
jo
cli
insl
or
es
mov
aam
jecxz,pt
mov
nop
xor
xchg
es
inc
xor
push
dec
ret
add
hlt
fisubrs
test
andb
push
nop
xchg
mov
imul
jno
dec
mov
xchg
push
lret
mov
shl
pop
in
and
test
rcll
push
std
or
dec
movsb
cmc
sbb
sbb
imul
fstpl
leave
cld
das
sub
add
xchg
and
dec
scas
mov
les
arpl
mov
mov
enter
adc
add
int3
cltd
jbe
fs
int
in
mov
hlt
shll
test
sbb
mov
fistps
cmc
scas
ret
pop
shl
outsb
mov
xor
fdivl
ljmp
mov
bound
inc
clc
dec
mov
push
mov
faddl
push
and
dec
mov
in
xchg
mov
fiaddl
push
adc
sti
mov
mov
jnp
out
in
jle
pop
xor
mov
es
add
nop
popa
jmp
xchg
cmp
inc
lods
mov
ds
in
scas
push
scas
popa
adc
adc
sub
cmp
mov
dec
cmpsb
cltd
ds
jno
mov
cltd
push
adc
fcmovu
jecxz
test
cmp
sbb
jae
xor
fimuls
sbb
push
cmp
cmp
cwtl
jmp
cmp
pop
das
inc
mov
shrl
shlb
sub
jl
and
adc
xchg
sbb
xchg
ret
test
jo
pop
xor
hlt
ret
adc
xchg
lahf
sbb
xor
pop
pop
shlb
pop
mov
js
xchg
nop
push
loope
cmp
rcll
pop
dec
xor
cwtl
enter
int
inc
popf
aad
insl
inc
lcall
adc
xlat
jnp
mov
cli
xchg
xor
xchg
xor
mov
mov
rorb
movsb
cmp
push
test
test
xchg
outsb
mov
pop
mov
movsl
xchg
or
stos
xchg
sbb
xchg
stos
mov
xlat
loopne
mov
xchg
rclb
es
in
rclb
pop
gs
pop
shrb
jecxz
lods
mov
nop
je
dec
dec
dec
cmpb
add
cmp
stos
add
mov
icebp
add
je
dec
push
popf
pop
adc
dec
dec
fldl
or
mov
mov
fcomi
dec
fdivr
inc
dec
ret
jno
std
and
mov
out
xor
pop
cmp
pop
mov
add
xchg
mov
sbb
outsb
and
aam
stos
ret
push
test
adc
push
jecxz
mov
pop
mov
aad
pop
xchg
push
xor
je
or
pop
dec
push
stos
int3
scas
and
or
xchg
in
cmp
push
jg
jmp
sub
in
xchg
int3
fmul
or
jmp
fsubp
out
out
adc
dec
adc
insb
xchg
push
sub
or
les
movsl
orl
and
xchg
pop
xchg
or
lock
scas
das
inc
filds
test
push
sbb
jne
ret
int
leave
xor
sbb
xorl
ret
je
dec
punpcklbw
insl
mov
aaa
pop
mov
and
std
xchg
insl
mov
or
sub
std
in
push
in
lret
mov
cmp
cwtl
dec
iret
out
inc
into
pop
xor
fistpl
cmp
sbb
icebp
cmp
push
xchg
cmp
fnclex
inc
xorb
or
imul
pop
hlt
clc
sbb
pop
outsl
and
repz
add
sub
lret
aas
call
mov
dec
mov
cwtl
mov
addr16
mov
mov
xor
adcl
mov
mov
xchg
cmpl
cli
rorb
dec
add
inc
scas
scas
jp
cli
imul
ljmp
gs
and
mov
cltd
xchg
fs
and
and
mov
jge
xchg
test
imul
movsb
fistps
aam
pop
sub
inc
sbb
mov
sub
das
xor
scas
nopl
xor
pop
jge
lahf
shr
push
or
fs
mov
mull
sub
sbb
out
xchg
mov
push
sahf
sbb
pop
mov
inc
push
sbb
stc
mov
dec
mov
lods
js
sub
sahf
scas
cmpsl
xor
sahf
push
ds
and
sbb
aaa
pop
mov
sub
or
fstpt
push
jp
pop
sbb
popa
test
and
mov
fsubrl
repnz
mov
jmp
pop
mov
push
jo
xchg
orl
xchg
push
ss
xlat
filds
mov
imul
inc
cmp
dec
mov
lds
sub
pop
int
stc
jns
iret
clc
jnp
repz
xor
jns
pop
xchg
push
and
dec
mov
ljmp
loop
sbb
inc
xor
xchg
cmp
mov
cmp
mov
out
dec
test
aam
and
cmpsl
dec
cmpsb
out
test
in
mov
adc
adc
rcrb
shll
xchg
or
scas
jge
stc
in
jl
sub
mov
in
testl
xchg
push
fistpl
imul
test
cmc
fwait
jle
adc
inc
xchg
ret
push
and
sti
inc
dec
jge
jge
jns
cmp
xor
cmpsb
xchg
shlb
inc
and
add
xchg
idivl
mov
cmp
xlat
sbb
stos
stos
enter
aad
ss
xchg
bound
sti
mov
jmp
xor
mov
insb
push
mov
mov
jge
jae
hlt
in
cmp
mov
pop
int
mov
sub
pop
mov
push
dec
cli
inc
fbld
ds
cmp
mov
pop
jb
push
repnz
lcall
negb
movsl
scas
mov
push
inc
push
out
mov
mov
jle
insl
cmp
imul
adc
int
jno
jns
shlb
or
cwtl
adcl
mov
into
jmp
addl
xor
xlat
les
or
dec
or
or
xor
add
and
xchg
js
xchg
roll
xchg
xor
jmp
test
mov
add
das
shr
xor
lcall
push
pop
mov
push
ret
popa
or
int
cmp
ss
dec
xor
mov
sub
push
fcmovnbe
pop
aam
stc
push
cmp
fsubl
sbb
movsl
and
mov
mov
mov
fucomip
scas
sub
jp
jb
mov
mov
dec
sub
dec
mov
sbb
jle
lds
aad
xlat
lea
mov
jne
jmp
lret
aaa
movsb
lock
outsb
jbe
gs
sbb
jecxz
mov
negl
xor
inc
cwtl
sbb
and
lock
out
enter
repz
or
test
inc
divl
fadds
inc
or
cmp
dec
sub
fisttpll
push
sub
push
add
push
inc
lahf
mov
jnp
sub
mov
aad
mov
mov
in
ljmp
ret
and
imul
cmpsl
test
dec
lahf
xlat
or
hlt
mov
ljmp
push
test
mov
into
aad
mov
and
hlt
sbb
test
add
pushf
leave
inc
jmp
mov
inc
hlt
repz
loope
in
in
inc
jp
add
cmp
test
sbb
inc
nop
adc
mov
inc
out
adc
cmp
mov
xchg
pop
iret
mov
sbb
inc
cmp
and
or
and
mov
mov
iret
pop
cmpsl
or
push
adc
xor
lahf
push
sub
sbb
pop
sbb
pusha
test
xchg
sub
movsb
mov
cmp
imull
cmpsb
dec
mov
int
dec
jp
dec
fisttpll
in
xchg
shlb
ss
scas
inc
mov
mov
xchg
jmp
cmp
cmp
cmc
and
xchg
cmp
not
xor
or
xlat
iret
mov
jmp
lcall
shlb
jne
mov
dec
ret
cs
les
pop
inc
add
aam
enter
add
xor
lahf
mov
adc
pop
inc
or
inc
adc
jl
jle
fstl
andl
pop
daa
cmp
int
shll
aam
int
fisttpl
push
orl
jle
pop
in
aas
push
mov
mov
push
pop
out
pop
add
push
sbb
push
test
xchg
in
pop
inc
cmp
test
dec
loop
or
dec
add
movsb
xor
cmp
cs
loopne
leave
je
in
addb
rolb
call
sub
jmp
cmpsb
sbb
xor
xchg
data16
cs
and
dec
sbb
loop
lret
fcmovnbe
lahf
lret
sbb
xor
repnz
cwtl
loop
loop
dec
sbb
pop
test
add
adc
pop
or
sub
mov
mov
rorb
js
mov
push
call
cmp
out
lret
or
movsb
int
andb
xchg
mov
daa
pop
mov
fdivp
xchg
iret
lods
cs
sbb
push
fcompl
call
push
gs
adc
dec
lods
sub
adc
xchg
jl
cmpb
lahf
push
jnp
hlt
xor
dec
pop
fwait
push
aaa
pop
jo
std
dec
mov
lahf
mov
mov
dec
xchg
mov
nop
and
sbb
xor
fucom
sbb
xlat
push
jb
cli
adc
dec
xchg
lods
icebp
movsl
xchg
out
pop
xor
sub
sbb
scas
bound
repz
ljmp
addr16
icebp
jne
movsb
or
push
and
add
cmc
add
sbbb
sub
or
cmp
jae,pn
aam
test
or
fwait
pop
lock
xor
popf
leave
mov
push
test
add
mov
fisubrl
sti
ljmp
jne
cmpsl
sub
ret
xchg
jp
inc
pop
xchg
inc
sbb
jo
inc
hlt
push
cmc
ss
xchg
cltd
xor
movl
repz
push
or
repnz
jmp
add
movsl
dec
sti
sarl
shl
xor
pop
lcall
es
mov
shrb
pop
xchg
xchg
fdivrs
jge
fldt
enter
imull
insl
add
cmp
movsl
mov
mov
add
shrl
test
jg
adc
inc
mov
mul
mov
dec
pop
sbb
cwtl
xor
popf
cld
or
cmp
pop
jg
lock
mov
sub
or
xor
push
add
and
jns
rcrl
push
fisttps
icebp
and
fldt
movsl
mov
xlat
mov
fsubr
lods
sbb
inc
rcrl
cmp
cmp
jno
inc
mov
lds
lret
add
js
rorl
movsl
cmp
mov
clc
aas
pop
call
adc
xchg
dec
jns
fldcw
sub
out
arpl
cwtl
add
ret
mov
push
sar
lcall
sub
pop
in
add
push
dec
outsl
adc
adc
outsl
adc
or
std
push
insb
or
cmc
jmp
sub
xor
aas
or
mov
out
add
fisttpll
pop
arpl
xchg
and
ret
sub
jbe
insb
jae
inc
cmp
pusha
in
lcall
mov
pop
dec
rolb
inc
and
das
push
ds
dec
f2xm1
mov
cmpsl
arpl
add
cltd
push
lds
into
add
sbb
pop
loopne
sarb
mov
fstpt
xchg
jns
dec
lds
in
jl
push
add
fldt
cmpsl
subb
xchg
test
add
in
jnp
lret
nop
shlb
mov
cld
aad
adc
push
inc
mov
or
mov
leave
sub
out
adcl
push
jp
xor
dec
adc
cltd
cmp
dec
out
jns
cmpsl
jne
lahf
orb
cltd
shlb
dec
mov
push
and
jecxz
mov
adc
stc
mov
ret
jno
add
push
push
dec
and
iret
push
mov
cmp
sahf
and
pushf
bound
mov
or
mov
dec
sub
lods
mov
adc
fimuls
andb
clc
arpl
je
mov
pop
add
jmp
jp
ds
outsb
push
inc
loopne
cmc
ret
aaa
cli
or
mov
xchg
aam
and
icebp
cmp
jns
mov
imul
pop
sub
out
xchg
xchg
push
or
fnstsw
pop
push
mov
loope
outsl
loope
pop
mov
mov
xorb
enter
lcall
jb
jns
clc
mov
incb
adc
ljmp
fiaddl
out
mov
xlat
sub
insb
mov
or
lahf
pop
call
mov
fcompl
cmp
lret
xchg
push
xchg
in
lcall
lea
cmpsb
cmp
and
push
not
jne
or
bound
jl
lods
inc
rorl
inc
rclb
mov
xchg
pop
jo
pop
and
aas
xchg
xlat
cs
jno
dec
or
sub
or
call
xor
repnz
xor
push
movsl
sub
jne
mov
imulb
jns
add
test
aaa
cmp
xchg
xchg
decl
jmp
cltd
and
sbb
iret
bound
dec
cmp
xor
add
pop
and
jg
or
sti
outsl
push
cmp
push
mov
dec
das
iret
test
mov
sub
add
sub
cltd
adc
jnp
xor
push
icebp
clc
cmp
leave
out
lret
jl
into
mov
sbb
cli
push
or
dec
xor
loop
cld
xchg
icebp
mov
mov
xor
imul
ljmp
push
fwait
jmp
popa
or
lods
xchg
ret
in
fwait
test
pop
sub
jge
push
test
out
inc
pop
fistps
int3
popa
outsl
push
lods
insb
pop
in
aam
outsb
rclb
pop
mov
and
out
into
push
inc
dec
xchg
and
je
jae
movsl
ret
mov
jl
dec
jbe
or
push
clc
inc
xchg
aas
sbb
jne
xor
imul
jp
jge
sub
loope
jne
adc
mov
mov
out
loopne
jmp
orb
imul
inc
lock
ficomps
sbbl
mov
or
das
arpl
nop
stos
sub
lahf
ror
adc
mov
push
fadds
push
sbbl
adc
rorb
or
inc
or
mov
sbb
cmp
aam
xchg
mov
sub
xor
pop
out
stos
add
js
fnstenv
mov
xchg
jp
scas
cmp
push
loop
adc
mov
jmp
inc
push
daa
out
repnz
mov
mov
outsb
scas
jmp
in
sub
mull
mov
popa
out
push
call
loope
jo
xor
mov
mull
int
decb
cmpsb
ret
inc
push
xor
stos
dec
bound
xlat
mov
add
arpl
andb
and
int3
lret
shrl
ds
cmp
adc
and
cmp
sarl
push
popa
out
cmpsl
mov
jle
sub
jecxz
mov
cmp
adc
popf
sub
mov
mov
dec
test
daa
mov
jbe
inc
mov
mov
ljmp
adcb
cmp
insb
test
mov
icebp
dec
or
in
fs
sub
sub
jo
mov
sub
cmp
aas
cld
lods
jecxz
ss
sarl
aad
insl
lea
mov
outsl
cmp
jle
push
js
aad
and
push
lods
std
sti
js
adc
push
inc
ljmp
xchg
cltd
incb
repnz
sarl
xchg
jne
xchg
xchg
mov
jge
mov
insl
ss
xchg
adc
shrb
cwtl
mov
enter
jae
push
cmp
add
pop
clc
rorl
out
inc
mov
jp
repnz
push
sub
mov
push
dec
cs
pop
fidivs
mov
dec
cwtl
xchg
pop
cmp
stc
xlat
out
daa
add
outsb
dec
dec
jmp
pop
shrl
dec
popf
mov
ret
dec
push
outsl
nop
inc
mov
or
dec
mov
into
dec
scas
cltd
mov
repz
add
mov
dec
push
push
cmp
and
hlt
jae
into
mov
jnp
movsb
divb
inc
iret
xchg
dec
fisttpl
mov
lcall
cld
mov
xorl
std
es
fldenv
jg
lock
fnstenv
and
sub
sub
popf
push
aam
fdivrp
inc
inc
push
push
scas
jnp
push
xor
add
call
dec
or
into
dec
add
sub
jmp
jg
cli
seto
cmpsl
dec
add
pop
fdivrs
in
push
adc
inc
jmp
fisubl
mov
adc
jae
dec
out
mov
lret
mov
push
push
mov
xchg
mov
jl
jne
cltd
pop
lock
test
repnz
repnz
pop
add
aam
fiaddl
mov
arpl
loope
in
sti
lcall
inc
xor
sarl
push
leave
popa
sahf
cmc
or
cs
fildll
jmp
addr16
adc
leave
insb
xor
fcmovnb
loop
or
cmc
jo
out
dec
es
mov
mov
movsl
sub
aam
pmullw
mov
std
movsl
repnz
mov
inc
fsts
mov
mov
pop
mov
adc
push
mov
jle
mov
xchg
push
dec
in
push
or
xor
imul
add
lahf
push
arpl
out
andnps
rorb
scas
lcall
lret
inc
orl
pop
mov
pop
dec
jmp
mov
xor
lods
xchg
cs
jns
mov
dec
dec
sbbb
cmp
repnz
jbe
cs
les
push
outsb
out
mov
jmp
add
pop
jno
flds
pop
and
sbb
jne
push
mov
test
test
fwait
bound
and
mov
xchg
dec
ret
push
into
jo
pop
loopne
cmp
cld
stos
sub
mov
mov
mov
mov
inc
mov
dec
xchg
loop
testl
fistpll
jecxz
imul
bound
lods
insl
outsl
mov
sbb
add
and
lret
test
pop
push
xchg
pop
mov
adc
push
dec
pushl
jl
mov
lods
dec
sub
cmp
fwait
mov
lcall
add
adc
jnp
std
fwait
std
test
pop
ret
push
dec
lock
addr16
insl
mov
decb
rorl
andl
jle
movsb
nop
mov
call
aas
xor
xchg
lcall
jb
jbe
lods
push
xchg
push
insl
dec
push
stc
in
mov
ret
push
sub
lcall
ja
sub
mov
or
jbe
sub
sbb
xor
insb
xor
or
sub
inc
jl
addb
lods
in
out
rolb
xchg
insb
fisttps
das
or
aaa
jle
arpl
sahf
aam
sub
xor
rorb
shl
pop
jecxz
insb
jl
jmp
mov
inc
push
fists
test
rcrl
xchg
idiv
cmp
outsb
inc
xchg
nop
mov
sahf
push
out
ret
test
and
sti
jge
add
in
add
test
ror
push
sub
push
jge
mov
mov
xor
cmpsb
mov
lock
in
adc
mov
jo
xchg
fisubs
mov
mov
mov
mov
lods
mov
dec
ds
mov
gs
mov
sub
ret
inc
sbb
sub
int
or
cmp
cmp
xchg
jmp
push
ret
test
ss
push
mov
into
flds
sub
out
ffreep
xor
decl
xor
add
mov
jbe
movsb
cmp
dec
dec
jno
push
xlat
mov
xchg
dec
mov
lock
push
inc
aas
sbb
sbb
or
sbb
mov
push
fldenv
call
adc
xlat
xchg
idivl
addr16
pop
repz
dec
loop
dec
into
pusha
sbb
or
jg
or
jb
add
mov
jno
loop
cmpsb
push
push
out
add
outsb
cmp
adc
mov
pop
or
leave
stc
jb
sub
idivl
push
cli
mov
test
cmp
add
imul
push
sbb
adc
pushl
fidivl
fstps
ds
imul
mov
pop
test
push
adc
mov
aad
movsb
ret
or
xor
xlat
fisttpl
fimull
jmp
dec
imul
inc
jg
cmp
mov
ljmp
jecxz
test
add
xchg
push
ret
pop
adc
jbe
aam
inc
insb
jg
jge
ljmp
push
add
inc
jmp
pop
into
out
mov
stos
mov
movsl
enter
xchg
pop
rcrl
mov
mov
inc
push
xchg
pop
out
jo
fs
nop
fdivp
lea
mov
xor
mov
sub
inc
fnstsw
xchg
ja
aas
sub
cs
adc
jns
enter
and
jns
aaa
cmp
das
sub
arpl
cltd
enter
pop
iret
daa
fimuls
and
lods
cmp
adc
pop
add
lahf
lret
lods
mov
pop
jo
dec
jecxz
aam
cmc
xor
dec
cmp
outsl
pop
dec
divb
popf
xchg
mov
or
rorl
aam
jne
cld
jns
fwait
cli
ss
mov
int
jno
lret
xor
pop
jecxz
add
scas
pop
mov
in
adc
ja
andl
mov
jmp
sahf
subb
dec
test
xor
loop
imul
cmp
out
push
jmp
and
sbb
xchg
inc
or
imul
out
call
mov
mov
mov
hlt
outsb
dec
sub
out
sbb
push
jmp
lahf
movsb
xchg
xor
pop
or
and
xor
jge
cmpsl
sarb
ljmp
inc
jp
cmpsl
out
iret
jg
mov
mov
mov
mov
adc
out
gs
jno
jl
lock
outsl
sub
punpckhbw
popa
std
fwait
jb
adc
lahf
dec
mov
xor
loop
dec
scas
loopne
xor
mov
mov
mov
sub
pop
call
add
push
in
mov
jae
out
cwtl
mov
cmpsl
test
int
loop
adc
xor
enter
xor
push
or
xchg
clc
cmp
bnd
mov
lcall
insb
imul
push
arpl
sti
pusha
out
mov
jmp
cmp
mov
xor
addr16
les
xchg
leave
pop
shlb
jecxz
sub
pop
jl
ror
pushf
ss
mov
inc
mov
adc
cmp
mov
jb
fcomip
rorb
cmpsb
lea
inc
dec
pushf
leave
and
cmp
mov
fidivl
and
popf
lahf
out
adc
aas
xchg
stc
inc
sub
dec
push
dec
dec
adc
push
testl
adc
test
lds
pop
lds
adc
pushl
adc
fadds
mov
outsb
test
cmp
out
push
jo
or
loopne
icebp
leave
push
cmpsb
ljmp
shlb
repnz
xchg
cmp
fstl
sbb
push
adc
fmul
pop
cmp
movsl
std
inc
mov
sti
test
loop
ja
xor
test
aam
push
sti
mov
push
lahf
pop
cmp
stc
pop
cmp
cld
shl
push
fadds
jmp
inc
pop
inc
lds
mov
frstor
data16
leave
mov
loopne
fs
data16
lea
sub
pop
pop
in
mov
xor
mov
fsubl
loope
cmpsl
mov
sub
mov
cmp
xor
mov
mov
bound
stc
cld
mov
lods
mov
stos
aam
dec
xor
and
pop
lret
lea
xor
push
jecxz
cmpsb
gs
fidivrs
insl
adc
mov
fnsave
bound
push
sub
xchg
aas
jl
ds
and
mov
test
shll
sbbb
sub
insl
dec
cmpl
xchg
xchg
inc
aas
jne
or
adc
push
aas
mov
sti
mov
cltd
inc
dec
push
das
adc
push
addb
adc
xchg
xchg
mov
xchg
sub
mov
fwait
xchg
dec
inc
dec
dec
es
or
cltd
mov
jbe
mov
enter
mov
add
loop
cmpsb
in
pop
dec
out
mov
fldt
mov
push
ficoms
shlb
mov
lods
sbb
fcomps
or
push
pop
fidivrl
mov
test
rorb
aad
push
push
out
lret
xchg
jmp
xor
movsb
popa
insb
pop
les
imul
cltd
popa
repnz
push
lods
dec
bound
lret
sbb
ljmp
xor
fdivs
test
fisubs
pushf
mull
arpl
clc
and
int3
test
dec
ret
outsb
cmp
lds
cmp
enter
insl
and
pop
jnp
and
mov
xor
imul
imul
ror
mov
js
aaa
jg
xchg
pop
loop
addl
sub
cmp
jmp
lds
call
mov
lea
loop
add
movsl
sub
jl
xchg
push
push
dec
icebp
or
cwtl
mov
movsl
fcompl
push
sub
inc
xchg
out
mov
sub
mov
in
pop
pusha
in
call
into
jbe
adc
scas
fdivrp
jns
out
cli
imul
in
push
pop
lods
repz
fnstsw
lock
pop
add
movl
daa
push
jle
or
mov
mov
or
cmp
jge
ljmp
cmp
shrb
mov
jge
add
mov
std
in
rcrb
jne
mov
fdivrl
sub
insl
test
push
subb
sbb
pop
cmp
out
jp
sub
xchg
loopne
fdivs
jae
pop
scas
leave
dec
fmuls
cmp
mov
dec
lret
lahf
lcall
jnp
adc
scas
xorb
in
adc
mov
jns
and
imul
jge
cmpsl
out
inc
in
jo
iret
inc
dec
lods
pop
dec
jae
jge
push
sub
pop
jne
leave
test
adc
lcall
hlt
and
add
out
addr16
popf
mov
mov
xor
or
mov
cmp
arpl
lds
xor
xchg
rcr
xor
sub
push
pop
mov
pop
mov
push
jle
mov
daa
sbb
mov
js
fdivrs
mov
mov
add
push
cmp
lret
jns
ja
dec
sarb
xchg
add
arpl
sbb
sahf
fisttps
or
test
xlat
push
leave
or
loopne
pusha
adc
test
pop
xchg
pop
mov
and
mov
in
mov
sub
xchg
mov
mov
clc
sub
imul
push
inc
pop
fsubp
shrb
add
das
aaa
es
push
pushf
inc
cli
cmp
pop
into
xor
mov
mov
loopne
ret
xor
xor
lods
out
or
sub
testl
test
bound
inc
xchg
sub
loop
and
inc
out
mov
xchg
pop
in
jle
xlat
arpl
inc
sub
dec
dec
stos
imul
fsubrl
push
out
mov
ja
data16
or
cmp
icebp
scas
lods
cmp
adcb
xor
arpl
push
sti
ret
imul
rorb
shll
mov
jbe
lahf
ret
or
dec
dec
dec
sbbb
add
lcall
inc
xor
lods
pop
movsl
arpl
in
pop
inc
inc
add
js
stos
mov
or
popf
jg
cltd
sub
call
in
aam
sbb
sub
xchg
mov
dec
mov
cli
jmp
jle
jnp
jo
pop
sbb
daa
pop
xchg
arpl
iret
inc
cwtl
mov
in
into
adc
mov
pusha
iret
nop
mov
nop
ss
idivb
pushf
fsub
jge
push
sbb
mov
js
cmc
inc
inc
test
stc
stc
cwtl
dec
pusha
ljmp
pop
xor
xor
movsb
les
or
sub
arpl
sahf
mov
repnz
cwtl
div
dec
loope
lret
sbb
inc
adc
push
push
sub
ret
sbb
mov
cmp
mov
movsl
in
scas
shl
mov
mov
stos
xor
filds
enter
mov
lret
pop
inc
mov
gs
dec
pushl
sahf
push
sbb
lcall
insl
ljmp
adc
mov
dec
and
pop
jmp
popf
fadd
xorl
ja
nop
pushf
ret
dec
adc
and
out
test
insl
scas
imul
insl
jg
repz
stc
outsl
xchg
lea
lock
test
adc
rcll
js
testl
jb
adc
jne
mov
fwait
cwtl
call
inc
push
loop
scas
in
adc
mov
xor
xor
je
jge
dec
popf
adc
push
push
mov
push
jmp
imull
jns
adc
or
je
std
mov
push
int3
adcb
in
jo
push
lods
push
dec
push
nop
lahf
jecxz
mov
sbb
dec
pop
fcoml
sub
and
ss
xchg
xchg
lea
cmp
xor
cmp
or
mov
popf
stos
popf
inc
cmp
mov
mov
int
pop
pop
scas
in
add
jmp
push
jmp
push
out
cmp
lds
push
cmp
out
xchg
lret
lods
and
pushl
rorl
mov
lds
xchg
xchg
bound
mov
cmpsb
enter
pop
mov
xchg
fisubs
mov
cmpsb
sub
add
lcall
imul
stos
dec
movsb
xchg
outsl
mov
mov
mov
mov
sub
sub
test
jb
cmp
icebp
sbb
stos
mov
lret
stos
lcall
aam
add
adc
add
mov
imul
cmp
mov
jge
mov
enter
dec
cli
xchg
loop
xchg
cld
js
loope
hlt
push
jge
push
insl
out
outsl
cmp
mov
outsl
inc
out
mov
xor
xchg
push
dec
xor
add
fistl
jnp
xchg
fdivrp
jp
jnp
sub
iret
popf
lods
lods
push
add
mov
sub
push
lods
icebp
js
inc
cmpsl
cmp
add
jecxz
mov
cmp
ficoml
mov
sti
fisubl
mov
jecxz
enter
mov
cmp
jae
xchg
rol
es
mov
shll
lods
shrb
das
cmp
les
pop
test
xor
jb
mov
inc
ret
jb
adc
cmpb
jle
inc
pop
loope
daa
or
out
jge
jns
lods
sbb
enter
sbb
int
cmp
cli
push
fidivl
rorl
int3
push
popf
stos
push
adc
rolb
shrl
repz
test
cmpsb
adc
xorl
adc
xchg
jecxz
add
in
adc
icebp
jp
xor
shll
ret
out
addr16
into
pop
adc
popa
outsb
xchg
mov
xchg
hlt
xchg
adc
aas
mov
pop
adc
fistl
jg
and
dec
sub
pop
ljmp
shlb
xchg
and
loopne
int3
jp
es
mov
xchg
aas
jp
dec
jno
mov
repz
test
rol
out
test
inc
insl
push
xchg
xchg
fadds
pop
int
insl
pop
mov
mov
xchg
stos
jecxz
ja
aaa
xchg
movsb
push
cmp
mov
lahf
add
mov
mov
cmc
xor
cwtl
dec
and
js
loopne
jns
inc
fdivrs
and
add
and
mov
jb
rorl
add
cvtdq2ps
cmp
xchg
mov
fdecstp
movsl
adc
jle
mov
repnz
sub
jg
shll
test
mov
jge
sub
xor
add
sub
push
icebp
sub
clc
movsb
fdivrp
lock
sahf
xor
xchg
faddl
add
jne
lods
loope
shl
and
daa
jns
subl
mov
repnz
clc
vsubps
sub
bound
cs
fdivl
je
fstpt
push
lcall
cmp
pop
inc
pop
add
sub
sub
and
roll
mov
pop
sub
movsb
add
jle
pop
and
xor
int
insl
mov
sahf
fdivrp
xchg
dec
dec
arpl
add
mov
or
mov
dec
mov
fwait
lods
cwtl
pop
lds
mov
jmp
cmp
xor
xchg
fwait
mov
dec
sub
mov
sbb
lea
pop
mov
adc
mov
push
cmp
add
mov
mov
xor
adc
and
jg
aad
clc
cli
and
dec
dec
mov
test
mov
pop
test
mov
inc
sbb
rorl
fsts
inc
mov
cmpsl
xor
test
and
ds
pop
sub
push
dec
add
scas
aas
mov
add
sbb
dec
jbe
pop
sti
nop
es
insb
mov
ljmp
int
dec
in
fwait
pop
in
inc
inc
adc
xchg
hlt
and
lds
jg
mov
xor
stc
xor
add
js
add
and
pusha
jb
hlt
adc
mov
sub
mov
inc
scas
jge
aam
aaa
inc
cld
test
mov
in
ret
lret
mov
mov
insl
stos
cmp
inc
mov
mov
scas
repnz
lods
or
inc
dec
cli
das
push
push
pop
jno
inc
aam
push
das
je
je
nop
adc
shrl
sub
jb
pop
mov
pop
push
push
inc
jns
jmp
fcoms
lahf
pop
imul
loopne
out
push
xchg
mov
lahf
mov
cmp
sub
push
mov
repnz
das
mov
fs
mov
mov
jne
rcll
mov
shll
xor
test
out
outsl
or
bnd
leave
cmp
dec
in
jmp
out
popa
xor
hlt
push
mov
mov
jge
mov
push
pop
or
addr16
leave
jmp
idiv
imul
pusha
adc
lods
xorb
ss
mov
mov
xchg
and
mov
cmp
xchg
xor
and
ret
push
and
cwtl
outsl
sub
test
int3
xor
push
fnsave
out
ss
mov
enter
adcb
stos
je
sbb
adc
pop
jno
dec
jl
aad
pop
test
dec
push
mov
bound
sub
ds
cs
mov
fmul
pop
and
ja
lcall
mov
aas
rcrb
pop
pop
or
les
shll
cwtl
jb
mov
xchg
test
dec
pop
jb
jl
cmp
mov
test
jnp
mov
inc
inc
add
sub
movsb
push
rorl
js
bound
pop
sub
lret
xlat
aam
mov
adc
inc
std
mov
gs
push
fdivr
or
pop
lods
ds
sbb
insl
popf
and
lds
and
cltd
xchg
dec
cltd
in
mov
lcall
divl
outsb
movsb
mov
add
sbb
sbb
into
cli
cmpsb
or
pop
and
mov
mov
cmp
loop
outsb
mov
lock
pushl
imull
popf
test
jno
mov
add
sbb
mov
pushf
ret
out
pop
mov
dec
mov
or
cmp
dec
insb
inc
cmp
mov
or
pop
jbe
sub
aas
in
jl
push
xchg
cvtdq2ps
mov
in
imul
push
push
push
orb
test
inc
xchg
loop
sahf
mov
in
xchg
aaa
mov
push
ds
frstor
lcall
lods
fstl
push
sbb
das
ret
gs
sarb
andl
out
or
mov
je
popf
mov
pop
inc
xchg
mov
or
enter
pop
pop
rcr
lcall
xchg
fisubrl
pmaddwd
mov
mov
cmp
mov
fsub
sbb
sub
std
jns
cltd
xlat
dec
icebp
icebp
jne
pop
clc
lods
mov
stos
test
cmp
rcrb
sahf
sti
mov
leave
dec
scas
sub
push
jle
mov
cltd
out
dec
shlb
repz
inc
insb
rcrb
ret
fiaddl
std
cmc
xchg
and
nop
inc
icebp
int3
sub
jne
sub
jp
lea
mov
xor
into
int3
xor
xorps
ret
xchg
leave
push
sbb
lret
int
lock
jne
imull
cmp
sub
insb
gs
addr16
ss
sbb
lods
popa
sub
xchg
mov
pushf
jno
lods
leave
outsl
in
dec
xlat
lods
cmpsl
push
jecxz
mov
mov
cli
and
xor
add
pop
xchg
pshufw
loop
cld
es
insl
lods
insb
push
inc
and
pop
nop
add
push
cmp
fnstenv
cli
cmp
shll
out
push
adc
pop
or
je
adcl
imul
out
sub
jmp
push
je
arpl
out
push
cmpsl
inc
or
test
mov
mov
jge
vdivpd
in
daa
mov
movsl
outsb
xchg
jns
rcrl
test
push
inc
jg
push
gs
addr16
inc
xchg
lret
das
push
iret
mov
mov
push
nop
mov
mov
jge
cmp
push
push
sub
cs
mov
lret
push
mov
bound
cmpl
loop
fsubrs
and
sbb
or
dec
add
push
pop
pop
aad
xchg
outsb
or
loopne
add
aam
sbb
jl
jbe
xor
lret
insl
jmp
pop
or
aas
in
roll
ja
pop
enter
imul
add
jb
ret
dec
inc
ss
jge
sub
int3
add
ds
call
pusha
loopne
outsb
push
mov
in
xor
bound
movsl
adc
or
pop
inc
or
pop
adc
popf
xor
mov
cmpsl
fdivrs
dec
testb
mov
sub
nop
ds
and
movsb
les
add
int3
insl
inc
push
fwait
xor
loope
xchg
lods
inc
loope
icebp
jo
push
inc
pop
gs
mov
cltd
xchg
dec
out
jmp
add
dec
leave
and
push
and
fiadds
mov
in
outsb
cmp
mov
pop
pop
call
frstor
inc
inc
mov
lods
daa
cmp
subl
incl
testl
sub
movsl
inc
push
push
and
inc
fdivrs
int3
mov
pop
sbbb
repnz
loopne
push
fisubrl
addr16
dec
ficompl
xlat
sub
xor
mov
aad
mov
sbb
pusha
fs
sbb
popf
imul
jbe
sbbb
add
aas
jge
and
lods
mov
pop
cmc
jno
inc
inc
ficoms
lret
mov
push
bound
outsl
mov
in
mov
divl
mov
adc
inc
push
and
cwtl
leave
push
xchg
fxch
ud1
gs
or
mov
in
stos
iret
nop
outsb
pop
cld
shlb
lea
mov
fisubrl
mov
shr
push
je
push
xorl
in
push
dec
xchg
inc
xorb
pusha
out
adc
sub
xor
xor
rorl
dec
push
lcall
pop
aad
into
into
and
fs
add
add
mov
mov
xorl
insb
inc
mov
cmp
insb
cmp
inc
test
fmul
mov
loopne
or
je
or
pop
jno
add
lret
cmp
ret
out
out
das
les
arpl
lods
jo
ret
add
dec
sarl
sbb
jmp
mov
mov
stc
cmpsb
push
stos
sub
repz
loope
out
sbb
mov
xor
jecxz
sub
popf
stc
and
mov
xchg
push
and
push
xor
pop
add
cmp
addl
insl
inc
stos
bound
stos
shrl
rorl
push
inc
dec
mov
dec
xchg
xor
xor
rolb
lds
daa
scas
ret
test
inc
jle
or
fcmovne
mov
add
lcall
mov
frstor
jl
push
test
sbb
push
jp
out
imul
mov
out
jns
and
repnz
std
jge
pop
jno
fdivrs
jecxz
jno
or
pushf
or
aad
mov
mov
rclb
mov
test
js
sbb
jecxz
test
jns
shrl
cmc
cwtl
mov
faddl
out
dec
cmpsb
dec
mov
mov
test
es
cwtl
and
mov
das
orl
sbb
pop
jp
fiadds
stos
xor
dec
push
sub
mov
mov
xor
stos
or
aaa
xor
sti
in
out
mov
dec
and
push
adc
lahf
ret
cmpsb
mov
sub
adc
adc
lret
test
in
js
or
cmp
inc
int
mov
in
fildl
mov
cs
jbe
fs
and
aaa
call
mov
inc
sub
push
pushf
mov
push
and
xor
test
xchg
test
test
mov
xor
xchg
mov
fs
pop
repnz
loope
inc
insl
mov
cmpsl
lds
es
test
cmc
xchg
cmp
dec
adc
cmpsb
pop
push
int3
sub
sbb
inc
dec
pop
xchg
mov
mov
cmp
jmp
mov
ja
inc
push
sti
push
fsubl
faddl
pop
inc
fisttpl
shlb
mulb
mov
unpckhps
jmp
int
sub
dec
xchg
adc
je
inc
or
sbbl
adc
mov
pop
rcrb
sbb
push
addb
gs
fidivrs
out
loopne
mov
mov
fwait
lea
stos
pop
jb
adc
ds
inc
out
arpl
mov
int
mov
testl
sbb
loope
xchg
push
push
pop
out
or
das
jnp
test
mov
dec
sub
sbb
xchg
inc
push
sub
in
cltd
dec
sbb
push
cmpsl
push
jg
sub
fucom
xchg
das
pop
fdivrs
xor
xlat
je
xorb
aas
loope
stos
cwtl
test
addl
fs
ret
popf
jle
lea
cltd
xchg
les
push
mov
shlb
fidivl
and
sahf
addr16
pusha
aad
sbb
in
mov
mov
push
lea
cmp
add
repnz
stos
cld
repnz
stos
in
or
sahf
dec
leave
lods
pusha
mov
xor
cmp
pop
ret
sbb
or
outsb
cmpsl
aas
xchg
test
std
loopne
mov
lret
cmp
mov
and
fcmovne
ljmp
scas
pop
jle
ljmp
ss
xchg
ja
shll
aaa
fwait
lods
es
int3
std
call
or
and
mov
pusha
cmp
xchg
jnp
cltd
or
jle
outsl
sbb
das
imul
stc
cmp
add
push
adc
jno
sbb
mov
cmp
scas
aaa
push
inc
inc
pop
jge
scas
lcall
sub
jno
jg
incb
inc
add
dec
add
jae
ret
idivl
mov
imul
insb
xchg
das
clc
subb
mov
test
out
fs
add
jp
sub
fneni(8087
adc
cmp
into
push
out
imul
cmp
pop
jns
insl
insb
call
jle
incb
test
or
sub
es
test
add
loope
push
add
mov
dec
sahf
repz
mov
cmpsl
jo
sub
xchg
add
add
push
rcrb
add
or
ret
fdivrs
cmp
aam
add
fldl
dec
mov
insl
out
pop
scas
sub
jbe
sti
sub
test
mov
jmp
nop
inc
sub
push
xchg
xchg
data16
out
lea
pop
je
dec
call
mov
shl
push
sbb
sbb
xchg
clc
or
pop
jae
repnz
jmp
xchg
call
mov
or
fstl
ljmp
add
mov
popf
ret
push
sbb
aad
ficomps
mov
dec
add
nop
push
insb
add
popa
das
dec
push
gs
mov
call
lret
push
outsl
shl
jnp
mov
clc
scas
push
mov
aad
in
jg
mov
xchg
xor
test
sub
pusha
cmp
xchg
int3
jge
dec
or
xor
ficoms
mov
lcall
loopne
pop
sub
out
rolb
push
cld
sbb
cs
add
mov
in
imul
inc
and
push
dec
popf
inc
push
int
enter
repnz
test
fnstenv
addr16
js
xchg
adc
dec
adc
mov
lcall
xchg
dec
mov
ljmp
aam
inc
push
lret
ret
leave
into
pop
pop
lods
mov
push
push
add
cmp
pop
or
int
pop
lcall
fstp
std
div
jbe
cwtl
bound
int3
mov
pop
loope
out
sub
in
or
testl
push
push
orl
mov
repnz
pop
pop
adc
js
int
sbb
sbb
rcrl
and
push
lret
in
lret
jbe
push
and
cmp
mov
mov
jg
bound
cmp
aad
cmp
rcl
push
and
xchg
hlt
pop
jl
and
mov
inc
ret
std
movsl
cmpps
cli
cmp
jecxz
jo
das
fwait
cmp
pop
pusha
in
push
stos
sahf
jge
mov
add
or
test
mov
or
je
push
test
stos
out
cmc
mov
dec
fdiv
dec
test
jo
pushfw
aaa
lds
cmc
hlt
or
mov
inc
enter
mov
popa
jg
mov
mov
ljmp
xchg
outsl
out
mov
in
mov
sar
jge
mov
add
enter
add
add
mov
out
push
sbb
or
push
cmp
js
arpl
add
adc
test
icebp
cmpsl
mov
lcall
xor
cmp
mov
push
movsb
mov
xor
dec
sbb
mov
cwtl
mov
lods
out
icebp
fld
fcomps
adc
or
mov
jl
insl
fcmovbe
pop
and
test
mov
filds
scas
lcall
fwait
rclb
xchg
sbb
jnp
push
lock
in
jo
sbb
mov
mov
dec
or
imul
cmpsl
inc
sldt
or
stos
ja
loope
icebp
add
jmp
xchg
mov
mov
les
cmpsb
cmp
and
fwait
in
frstor
out
sub
mov
pusha
idiv
xor
and
mov
pop
cmp
mov
inc
xor
loope
loop
lods
aad
rcrl
inc
jp
mov
hlt
jns
sbb
dec
jg
cmp
jns
jbe
cmc
out
fisttpl
les
adc
je
pushf
lret
stc
cmc
incb
add
or
mov
pop
add
mov
repnz
and
jecxz
out
mov
or
repz
push
out
pop
stos
push
or
repnz
out
ja
sbb
imul
mov
dec
mov
push
scas
ret
loopne
clc
push
inc
arpl
cld
lret
pop
imul
insl
test
stos
fldenv
push
sub
addr16
jns
mov
jbe
les
mov
mov
das
sbb
leave
shrb
call
sbb
fstpt
xchg
inc
pop
pop
rolb
adc
inc
mov
push
xchg
adc
scas
xor
iret
mov
mov
rorl
jb
mov
cmp
mov
dec
xchg
mov
call
adcb
das
mov
cmpsb
pop
cmpsl
inc
faddl
cmp
mov
and
je
adc
test
neg
imul
insl
test
loopne
dec
add
test
push
xor
jp
rclb
or
repnz
mov
sbb
xor
xor
inc
inc
ret
push
aaa
call
lcall
mov
jbe
mov
adc
out
and
mov
fwait
inc
xor
shrl
test
dec
js
in
scas
cmp
mov
imul
lds
or
shrb
gs
pop
lcall
jg
xchg
test
jle
xchg
inc
jae
lahf
push
test
ss
adc
in
test
pushf
pop
mov
jg
push
pusha
mov
pushl
xor
aaa
lods
repz
adc
js
jge
or
adc
pop
xor
subl
in
cmp
mov
ds
and
lret
daa
outsl
add
insb
in
fldcw
push
jbe
sbb
scas
xchg
in
xor
call
dec
mov
dec
test
push
mov
dec
jg
jns
push
bnd
mov
xchg
sub
mov
cmc
pop
into
dec
in
pavgw
cmpsb
aaa
jecxz
dec
outsl
cltd
and
or
sub
push
xor
fnstcw
mov
push
loop
adc
mov
imul
movsb
cmp
sub
xor
pushf
outsl
fwait
mov
andl
sub
shlb
cmp
adc
jle
aad
xor
lock
mov
lret
mov
xor
xchg
ret
xchg
and
pop
repz
push
sar
cld
cmpsb
push
push
fstpl
lods
sub
cmp
inc
mov
stos
mov
or
jmp
inc
and
jg
mov
or
mov
sub
xor
hlt
and
adc
ja
xchg
mov
and
pop
mov
movsl
aad
popa
test
inc
in
mov
sbb
stc
pslld
fisubl
out
pop
mul
gs
jb
jecxz
sub
in
repz
sub
sbb
dec
iret
daa
mov
test
bound
xchg
mov
lods
mov
xchg
add
or
adc
sbb
fcmovnb
pop
fmuls
and
testl
sahf
xchg
or
mov
dec
lea
rcrb
mov
test
pop
xchg
shlb
jb
cmp
xchg
xchg
lahf
add
cmp
xchg
xchg
sti
cli
ret
push
cmp
and
and
aas
mov
lcall
ljmp
test
dec
div
leave
push
loop
dec
mov
popl
jo
add
inc
in
pusha
cltd
call
addr16
jmp
js
mov
xchg
dec
mov
std
or
movsl
pop
std
test
mov
add
in
cmp
sub
inc
pop
hlt
lcall
in
cltd
mov
xor
sub
jo
xor
pop
xor
fwait
push
xchg
ljmp
jmp
add
sub
lea
sbb
xchg
dec
in
sbbb
loopne
jns
dec
or
js
push
test
notb
pop
mov
and
inc
adc
ljmp
add
pop
pop
fisubl
clc
lods
cli
aam
jge
lea
neg
lds
sbb
sub
xchg
aad
xor
sub
mov
dec
jb
jnp
push
insb
sahf
sbb
sub
aaa
filds
scas
stos
or
push
rol
inc
xor
and
cmp
pop
sub
dec
mov
push
into
jmp
leave
les
ja
lret
inc
movsl
jbe
sub
lds
lcall
pop
icebp
nop
dec
in
faddp
mov
dec
mov
xchg
push
xor
push
arpl
pop
cmpsl
inc
mov
push
stos
out
and
mov
pop
xchg
xchg
inc
or
lahf
movsb
int
or
sti
and
jle
lea
ret
xchg
sub
mov
sbb
add
mov
dec
jge
out
pushf
xchg
enter
icebp
or
mov
fldt
lcall
movsl
adc
add
push
aaa
pop
adc
addr16
sbb
fwait
sbb
inc
xchg
jne
movsl
adc
jg
bound
outsb
ficomps
sub
mov
cmpsb
pop
push
jge
xor
arpl
mov
ss
cli
call
insl
push
addb
scas
push
dec
test
sti
pop
and
cwtl
xchg
and
mov
jp
into
mov
int3
xlat
neg
jb
lods
popa
call
fs
add
mov
xor
dec
xchg
jle
mov
mov
in
jmp
into
sub
xchg
mov
mov
stc
dec
fwait
stc
popa
jecxz
add
test
rorb
mov
add
or
je
xadd
lret
es
jbe
aas
out
mov
cmp
subl
nop
movsl
and
mov
lret
stc
or
out
pusha
jb
mov
in
lds
or
idiv
mov
mov
cwtl
pop
outsl
mov
xor
jge
cmc
inc
popa
pop
sbb
inc
adc
addps
imul
cwtl
xor
adc
jp
sbb
sub
inc
cmp
imul
push
jle
out
add
add
sti
adc
je
mov
lcall
jmp
dec
movsb
jl
sbb
xchg
ret
jecxz
sti
mov
xor
das
outsl
cld
int
lods
out
fnstsw
dec
cwtl
aas
stc
test
test
adc
push
stos
cwtl
pushf
jmp
scas
pop
xchg
jo
cmp
xor
fidivl
das
and
sub
in
sub
inc
rorl
insl
insl
sub
sbb
cwtl
into
cld
xchg
inc
cs
adc
sahf
dec
sbb
lock
adcl
test
icebp
fwait
xchg
jnp
dec
in
shl
xchg
aad
cli
jb
xchg
mov
sbb
stos
sbb
sahf
mov
mov
mov
and
sbb
push
inc
hlt
cmc
xor
pop
inc
sbb
xor
out
test
mov
mov
mov
rcrb
aas
sub
xchg
ret
dec
jecxz
xor
cwtl
jo
fdivs
fwait
jne
xchg
sub
xor
and
mov
leave
pushf
dec
sbb
imul
add
cld
inc
cmpb
shrl
pop
fidivl
iret
push
push
std
add
sub
cltd
loope
leave
fsubl
inc
lock
mov
and
call
and
shll
icebp
je
sub
or
push
and
push
cmp
aam
xor
push
add
faddp
push
andl
cltd
jno
in
aas
add
or
adc
icebp
mov
cmp
pushf
movsb
cs
cmp
push
pop
fdivrp
sub
inc
mov
sbb
or
jnp
cmp
ss
xchg
scas
inc
mov
sbb
inc
sar
xchg
mov
xchg
cmp
mov
mov
mov
jle
mov
lods
sub
andb
pop
mov
cltd
iret
icebp
scas
lret
iret
out
adc
fs
aaa
add
fnstenv
xor
in
cmpsb
inc
pushf
pop
sahf
push
mov
sar
fidivrl
rorl
pop
aam
int3
adc
lahf
add
push
insb
sbb
adc
imul
rorb
push
or
push
mov
fnstenv
mov
or
cwtl
sub
dec
mov
mov
aad
nop
cs
repz
in
sbb
xchg
cld
repz
rclb
test
roll
xchg
push
jbe
mov
fldl
mov
and
xor
cmp
xchg
xchg
ret
test
xor
in
popf
lock
std
jecxz
lahf
mov
adc
dec
pop
push
jle
pop
pop
cmpsb
cmp
mov
test
addr16
lret
rcr
mul
xchg
dec
insl
clc
cmc
rcrw
push
sbb
xor
and
loop
mov
in
je
mov
insl
add
test
adc
dec
sbb
inc
mov
pop
mov
clc
pop
sub
iret
and
loopne
popf
mov
mov
lea
cmpl
cmp
imul
sbb
push
add
ret
inc
lds
std
in
push
adc
mov
sti
sbb
int3
and
ret
lods
shlw
add
sub
mov
xchg
insl
orb
clc
addl
mov
mov
mov
jne
out
ljmp
mov
xchg
xorl
out
mov
pusha
jp
push
jb
daa
scas
fldt
lods
sub
stos
data16
and
int3
cli
and
ret
push
fisubrs
rorb
xlat
mov
icebp
xchg
sub
inc
push
xor
notb
sbb
sbb
aad
sub
aas
mov
xlat
ret
mov
xchg
cli
adc
subl
mov
sub
cmp
adc
adc
xchg
popa
adc
rcrb
test
add
in
xchg
outsb
cmp
je
mov
lret
inc
mov
push
cmpsl
ljmp
roll
push
pop
jge
dec
ljmp
stos
int3
push
fwait
arpl
xor
inc
add
test
mov
mov
clc
pop
cmp
gs
ds
xor
imul
popf
sbb
dec
pop
nop
stos
popa
ljmp
push
cmp
loop
xchg
test
dec
mov
pop
pop
xchg
inc
icebp
out
cli
test
adc
jbe
mov
rcll
push
bsf
jge
push
lret
or
xchg
shrl
mov
xor
cmpsl
push
push
sub
mov
pop
ret
pusha
lock
mov
sub
loope
push
and
mov
pop
mov
jecxz
fidivs
das
in
mov
cli
movb
ja
add
enter
pop
addr16
call
rcll
in
popa
mov
aam
call
ja
inc
lret
mov
pop
pop
pop
dec
roll
popf
xchg
loop
scas
scas
cmp
pop
mov
xchg
mov
and
adc
insl
in
xchg
mov
bound
enter
repz
push
pop
fsub
arpl
xor
rol
sar
sub
lods
sarb
les
es
and
xchg
sub
dec
aaa
leave
and
imull
jge
mov
inc
dec
adc
sahf
rclb
ljmp
jp
pop
pop
ds
cltd
in
insb
mov
add
fidivrl
clc
ja
mov
jb
shl
mov
dec
clc
and
jecxz
inc
dec
imul
xlat
mov
dec
ret
icebp
fucomp
mov
fcmovb
incb
aaa
pop
mov
push
negl
stos
cmp
outsl
mov
push
mov
xor
mov
fwait
pop
fdivr
fs
loope
lods
sub
mov
arpl
xor
fiadds
add
mov
xor
hlt
jne
add
inc
pop
lret
dec
cmp
dec
loop
xor
xor
addr16
fldl
cmpb
inc
add
jo
pop
mov
mov
or
mov
pop
dec
repnz
or
sbb
decl
mov
orl
inc
std
sub
xchg
mov
sahf
cwtl
in
aad
add
mov
insl
ret
movsl
stos
jbe
jb
mov
jne
push
inc
dec
sti
imul
inc
fildl
jmp
loopne
sub
ljmp
arpl
ljmp
mov
lret
add
cltd
in
and
adc
les
pop
rcrb
popa
add
inc
and
sub
fwait
add
fcomps
aaa
xor
sub
pop
iret
adc
sub
add
aas
ret
cmp
inc
filds
mov
jnp
xor
daa
test
cmp
jnp
pop
outsl
xor
xor
out
mov
jb
mov
sti
jp
jg
and
data16
lods
mov
inc
fistps
je
sahf
ljmp
dec
nop
push
push
cli
sub
mov
stos
stos
test
push
rorl
cli
mov
mov
cmc
ljmp
pop
aas
inc
sbb
ret
jmp
outsl
mov
xchg
xchg
addb
out
cltd
cltd
pop
xchg
mov
loop
cmpsb
mov
mov
js
jle
movsl
dec
daa
and
repz
or
cwtl
cwtl
dec
loope
cmp
jb
xchg
sub
arpl
cmpsl
pop
xor
push
lock
je
ss
pop
jmp
pop
or
mov
int3
mov
or
mov
std
inc
test
test
mov
shl
hlt
rolb
stc
mov
jp
xchg
jbe
lahf
pop
out
outsb
inc
dec
call
dec
mov
or
hlt
arpl
aam
inc
xchg
add
aam
mov
movsb
mov
stos
mov
xchg
and
out
sub
lods
fadds
pop
out
std
cmpsl
push
loope,pn
mov
popa
inc
add
pop
sub
je
lock
push
and
push
and
and
mov
pop
bound
cmp
add
jp
sahf
inc
scas
pop
imul
adc
les
push
pushf
mov
or
xchg
out
rorb
iret
out
lods
push
sbb
fidivs
jo
cs
call
lret
roll
mov
aam
mov
outsl
out
fsubs
loope
inc
leave
das
popf
xchg
xchg
jmp
lods
int3
mov
push
popa
adc
and
out
cmp
push
xor
movsl
xor
push
or
test
sub
mov
shlb
lock
test
push
out
fisttps
imul
lock
add
inc
inc
popa
call
sub
dec
or
dec
iret
cmpsb
sti
ljmp
push
out
leave
add
mov
jns
xchg
and
pop
sub
mov
cmp
push
sub
pop
cmpsb
testb
cmp
and
lahf
jb
jecxz
mov
fdivrp
arpl
sarb
push
push
rolb
mov
movsb
mov
mov
or
sti
int
call
mov
cmp
inc
inc
ret
iret
sub
rorb
mov
lock
sbb
adc
bound
test
xor
inc
adc
mov
rolb
jl
adcl
cld
jo
mov
add
repnz
add
or
fwait
sbb
rcrb
sub
mov
fsubr
mov
mov
add
mov
sbb
aam
pop
sbb
push
jg
inc
bound
ljmp
in
dec
dec
lods
test
aad
lods
fs
mov
cltd
pop
pop
sbb
cwtl
in
sarb
cmp
jnp
mov
sbb
enter
or
sahf
mov
mov
xor
in
jb
daa
insb
stos
sahf
mov
testl
stc
pop
cmp
subb
jecxz
lea
push
sti
jecxz
add
inc
loope
in
lret
mov
mov
mov
adc
and
inc
fdivr
mov
xor
into
push
cwtl
int3
orl
mov
push
hlt
ljmp
loopne
sub
push
cltd
leave
sub
inc
or
mov
es
adc
repz
add
test
and
mov
arpl
shlb
push
sub
aas
cmpsb
mov
pusha
push
cmpsb
ljmp
inc
mov
xor
scas
xor
test
lds
pop
mov
mov
inc
jae
call
push
ftst
cmpsl
xor
fisubl
adcb
and
stos
pop
pop
shl
and
insb
mov
push
push
fidivrs
sbb
jae
orl
lea
push
in
lea
inc
inc
bound
mov
xchg
imul
push
in
in
add
lret
or
dec
jp
lods
add
cltd
and
call
outsl
imul
push
jnp
mov
cltd
inc
movsl
fimull
mov
inc
jg
sahf
push
sub
cmp
or
mov
gs
lahf
xchg
push
xor
lahf
pusha
fucom
jnp
xchg
xor
push
je
shl
rcl
int3
test
sysenter
data16
sub
cmp
test
scas
and
mov
stos
mov
mov
push
inc
push
fcmove
fwait
roll
subl
bndstx
into
rorl
inc
inc
shll
fldl
je
mov
jae
xor
outsb
out
dec
or
sbb
icebp
add
xchg
xchg
xor
lods
in
push
xor
xchg
lahf
or
test
jmp
aam
lods
adcb
pminsw
loop
mov
inc
or
and
faddl
add
jmp
jno
lods
idivb
add
lea
push
sub
pop
test
femms
or
sti
filds
pandn
dec
cmpsl
leave
sbb
mov
mov
inc
movswl
cmpsl
lods
pop
jp
push
push
dec
loope
andb
imul
sub
jno
mov
mov
imul
mov
push
pop
popa
mov
sbb
in
pop
lret
arpl
mov
int
mov
xor
or
shll
shrb
dec
pop
mov
mov
pusha
gs
test
lock
mov
xor
std
jmp
out
cltd
push
sbb
inc
mov
xchg
jns
aas
add
out
lahf
cmpsb
leave
mov
lea
je
jge
push
sub
and
mov
and
pusha
insb
gs
lcall
or
cmpsb
stos
jno
pushf
addl
cmpsl
sub
stc
push
push
mov
lods
daa
inc
mov
mov
idivb
es
icebp
scas
out
mov
dec
sbb
cld
push
push
and
or
aaa
add
icebp
add
dec
cmp
inc
sbb
dec
pop
cmp
andb
adc
lahf
arpl
cwtl
cltd
out
cmp
and
sbb
add
leave
cs
pop
and
inc
fsub
addr16
cmp
mov
push
lods
xchg
xor
leave
or
fsubs
xchg
idiv
push
mov
cmpsl
fs
int
xchg
aaa
adc
jnp
cs
aas
into
dec
in
stos
push
cmp
jle
jmp
adc
xchg
repz
dec
les
dec
test
jp
popf
push
dec
ficoms
jbe
xor
mov
inc
in
or
jnp
mov
xchg
movl
jnp
hlt
or
cmp
inc
lret
fsubr
xor
cmp
inc
xchg
jmp
inc
ret
xlat
into
ja
cwtl
pop
fwait
xchg
lcall
loopne
or
ret
cmc
popa
cld
imul
pop
bound
and
xorb
insl
int
repz
pushf
jle
cli
lahf
xchg
movb
or
test
and
out
out
cmpb
mov
cmpsl
sbb
mov
add
jmp
jge
mov
push
mov
es
icebp
loopne
push
stos
dec
mov
js
dec
ds
sbb
xchg
sub
push
or
mov
sub
in
xor
inc
mov
push
movsb
pop
imul
cmpl
cmc
loop
lret
f2xm1
mov
ljmp
add
push
les
mov
or
dec
sbb
mov
insl
into
push
addr16
xlat
sub
outsl
sbb
lea
subl
movsb
or
bnd
jle
in
xchg
mov
arpl
lods
xchg
and
add
adc
imul
imul
int3
push
lahf
sbb
adc
lret
pop
test
adc
lahf
lods
in
pop
dec
test
bound
jmp
push
mov
pop
ret
mov
and
mov
loop
mov
mov
mov
mov
int3
cmp
or
mov
or
mov
repnz
xchg
hlt
cmp
popf
in
jp
jg
cmp
push
cmp
sarb
mov
pop
mov
sar
lcall
xor
sub
mov
mov
inc
push
scas
repnz
ss
cmp
dec
enter
fwait
sbb
pop
push
mov
inc
outsb
es
dec
xchg
push
js
dec
xorl
call
jecxz
sub
and
in
stc
push
jg
mov
pop
iret
lahf
gs
jbe
mov
push
ficomps
jmp
pop
push
sub
movzwl
adcl
dec
xor
push
pop
in
jnp
dec
xchg
outsl
pop
int
mov
loop
sbb
adc
jo
rcl
and
loopne
les
das
mov
lds
inc
in
mov
out
popa
sbb
dec
dec
inc
or
enter
and
lahf
pop
xor
mov
pop
add
mov
outsl
mov
scas
sti
dec
clc
jno
inc
fcoml
push
jno
jo
call
jnp
lea
imul
fchs
into
jae
cli
pop
pop
pop
stos
testl
das
xor
mov
faddl
mov
scas
xchg
xlat
jecxz
shll
psraw
mov
test
jns
dec
add
gs
subl
sti
popf
cmp
and
neg
lea
adc
loopne
addr16
xchg
mov
cmpl
stos
daa
inc
shlb
inc
test
cmpsb
pop
shl
divl
xor
or
fmuls
shrb
cltd
mov
inc
and
jecxz
hlt
lds
lods
jecxz
xchg
out
daa
jl
sahf
stos
outsb
adc
or
sub
cwtl
xor
ret
mov
fisubs
arpl
fs
jb
into
jbe
push
into
mov
lods
mov
sub
stos
dec
add
scas
jo
leavew
lret
lcall
add
sub
jno
cltd
rcr
cmp
pusha
push
aas
int
rcrb
cmp
add
shld
push
enter
pop
or
std
mov
or
pop
nop
dec
pop
push
into
and
test
in
ljmp
jmp
push
aaa
push
and
dec
mov
fsubrs
ds
or
rorb
les
std
xor
fcoms
fnstcw
inc
outsb
lcall
mov
dec
or
sbb
mov
and
in
or
add
or
fsubl
addr16
and
cmp
lods
sub
jns
push
xchg
in
push
addr16
imul
popl
jmp
or
sub
test
jge
out
dec
das
cli
mov
popa
gs
cltd
mov
repz
sarb
data16
nop
mov
dec
pusha
lods
jb
push
inc
dec
adcb
jmp
sub
jns
ficoml
cmp
stc
mov
scas
je
int
scas
mov
out
rcl
fists
ret
ljmp
pop
adc
rclb
lods
mov
movl
clc
push
test
mov
xchg
jecxz
jp
cmp
dec
jno
cli
pop
jmp
int3
and
outsb
lret
mov
pushf
in
mov
lds
shrb
mov
or
das
add
or
sub
stc
adc
pop
inc
fwait
xor
popa
daa
and
fsubs
outsl
mov
jno
fstl
pop
or
jno
push
push
getsec
je
jno
xlat
add
or
mov
xchg
scas
lods
cmpsb
pop
mov
mov
jge
mov
xor
dec
movsl
or
push
add
movsl
int
mov
mov
shlb
in
pusha
stos
xor
jno
adc
xor
adc
mov
shlb
cmp
div
pop
testb
rclb
out
pop
mov
movsb
dec
push
or
std
lret
sbb
xor
jno
popf
xchg
mov
addr16
addb
sbb
inc
iret
int3
adc
xchg
jle
xor
sub
in
sbb
jecxz
cmp
sub
jl
mov
int3
xchg
cmp
and
nop
lea
sub
inc
aad
insb
sub
mov
mov
jmp
es
mov
mov
mov
mov
in
add
xor
or
xchg
fwait
jmp
mov
ret
cmp
push
int
leave
aaa
insb
iret
cwtl
loop
xchg
or
insb
lock
mov
mov
lods
insl
scas
adc
mov
stos
xchg
mov
fistpl
xchg
xchg
or
or
sub
jle
mov
mov
fisubrl
shrb
mov
jo
mov
out
or
sbb
cmp
nop
push
call
mov
lahf
push
negb
jge
lcall
sub
xor
inc
bound
lret
mov
push
stos
dec
ds
dec
ljmp
int
loopne
es
mov
cmp
xor
out
mov
or
ret
ss
out
cmp
stc
call
test
iret
arpl
fimuls
loop
adc
out
xor
pop
in
push
fmuls
int
adc
in
inc
call
mov
sub
add
lret
ret
jbe
dec
insb
lods
jmp
mov
mov
jl
pop
mov
hlt
sti
fstl
into
push
inc
into
mov
movsb
push
xchg
ss
inc
xor
jns
andb
lea
and
scas
mov
xchg
jg
ret
dec
dec
das
jb
mov
cmp
or
dec
sbb
add
sub
cmp
sub
dec
push
cs
push
aas
dec
add
bound
shll
aam
je
divl
cmpsb
repz
inc
add
lcall
pop
imul
aas
lss
lods
rcrb
bnd
lret
shl
mov
mov
jge
sti
sahf
xchg
and
mov
mov
outsb
mov
daa
jns
adc
stos
outsl
add
cmp
mov
inc
in
mov
xor
adc
scas
xchg
popa
hlt
and
jo
not
push
xor
cs
mov
sub
loop
mov
mov
pop
jg
mov
je
pushf
sbb
nop
mov
or
into
push
xor
inc
xlat
rcll
inc
push
sahf
dec
cmp
jb
aad
push
jg
pop
add
mov
mov
cmp
pop
pop
dec
mov
ret
mov
fs
pop
mov
pushf
test
mov
fldl
addr16
inc
es
mov
in
xchg
mov
addr16
mov
popf
mov
cs
fsubrl
sub
inc
int
push
loope
out
fstpt
aaa
and
xor
nop
jne
psrad
pop
lcall
fcmovu
xchg
jns
dec
cmp
push
or
fdivl
pop
jns
psrad
jmp
clc
dec
xor
loopne
jecxz
cmp
aad
fcompl
inc
mov
or
mov
xchg
jno
ret
cmp
push
inc
pop
inc
adc
dec
cli
dec
adc
fucomp
testl
in
and
ret
repnz
leave
sbb
push
in
fcomi
sub
mov
cmc
cmp
pop
sub
repz
ds
jbe
gs
xchg
sub
data16
inc
pushf
push
or
add
jnp
adc
sub
scas
mov
dec
mov
adc
and
test
lret
or
pushf
xchg
pop
loop
add
loop
sub
pusha
pop
cltd
mov
and
xchg
out
inc
dec
addr16
stc
es
mov
addl
add
dec
inc
jnp
sbb
aaa
add
lods
adc
lds
dec
and
add
cmp
into
mov
lea
mov
clc
inc
movsb
imul
int
cmpsb
scas
fdiv
inc
inc
insb
addr16
ja
sub
test
clc
aam
mov
dec
add
fldcw
or
add
inc
jno
push
cmp
mov
clc
jbe
data16
jae
insb
pop
lret
mov
jmp
jb
mov
xchg
scas
cmp
jns
jecxz
mov
fdivp
cmp
fisttpl
int3
rolb
mov
push
rol
add
sbb
or
imul
mov
je
adc
gs
jp
xlat
popa
xchg
and
mov
nop
stos
pop
jb
jbe
push
pushf
js
inc
push
iret
mov
inc
ja
lcall
or
call
aaa
add
add
pop
nop
push
popf
mov
movsl
jbe
insb
stos
xchg
dec
insb
enter
sbbl
jge
pop
sbb
lock
mov
repnz
sarb
pushf
jo
loope
imul
mov
aad
sbb
xchg
ja
repz
xchg
jne
out
jge
mov
testb
sub
jbe
into
jg
in
xor
xchg
scas
data16
mov
lods
cmp
loope
js
inc
push
imul
and
xlat
push
dec
cmp
cmp
sti
rol
cmp
jge
aas
mov
mov
clc
fdivrs
popf
into
xchg
std
push
xchg
fdivl
ja
push
repnz
loope
or
in
push
mov
outsl
dec
mov
scas
mov
fsubrp
xchg
aaa
cmp
in
gs
stc
in
cmp
mov
add
repz
es
push
mov
js
mov
xor
and
dec
pop
repz
cs
lods
roll
cmp
int3
jb
xor
add
fstp
add
adc
add
inc
fdivs
les
sub
loopne
or
lret
pop
sbb
xor
mov
or
and
xor
add
dec
and
rcrb
xor
lea
mov
es
mov
or
push
push
or
sbb
dec
movsb
imul
cmp
adc
cmp
xor
insb
icebp
fnstsw
insl
or
mov
pop
lret
jnp
push
push
jnp
push
mov
cli
or
pop
xchg
fidivrl
and
lahf
jp
lret
cmp
fmul
out
cmp
out
test
sub
cmp
mov
or
imul
arpl
cmpl
ss
iret
sbb
push
cmp
sub
dec
lods
rclb
jmp
push
pop
daa
cs
loopne
lret
cs
pop
in
xchg
jle
jb
pop
ja
and
mov
into
jle
pop
pop
jecxz
les
cwtl
rcrb
xchg
in
mov
sarb
lahf
jae
push
sub
in
and
aad
xor
fistpl
cwtl
dec
int3
xor
test
or
sbb
outsb
push
sub
repz
add
outsb
outsl
data16
or
mov
sti
adc
mov
sbb
loope
pusha
push
cltd
cmp
movzwl
stc
mov
nop
jmp
xor
mov
xorl
testb
aad
jb
iret
das
xor
dec
es
add
in
and
arpl
addr16
push
into
fs
add
scas
out
addr16
mov
insl
clc
mov
int3
scas
xor
inc
sbb
jne
andl
adc
out
dec
sbb
inc
jo
lret
cs
jmp
mov
xor
andl
ret
sub
imul
jl
stos
or
cmp
mov
inc
aam
out
mov
cli
mov
sub
int3
jo
movsl
or
stos
xlat
mov
mov
jo
adc
sub
pop
add
notl
insl
jae
nop
enter
adcb
adc
pop
dec
fisubl
insl
out
xchg
jp
mov
test
jmp
ret
mov
shll
stc
clc
adc
cli
aas
dec
xchg
mov
hlt
push
lods
daa
andl
inc
adc
mov
inc
inc
push
or
or
mov
mov
and
jecxz
xchg
in
xchg
das
ja
jmp
subl
out
mov
and
jo
in
mov
cltd
adc
enter
loopne
shlb
subb
out
pop
xchg
adc
inc
adc
movsl
lcall
cld
xor
in
movl
sub
add
push
xchg
les
clc
cmc
jecxz
or
cmpb
xchg
dec
adc
xchg
push
daa
cmp
xchg
int3
mov
add
cmc
and
popa
push
ds
pop
sahf
cmp
hlt
test
mov
cwtl
add
loope
in
mov
lock
mov
imul
cmp
xor
fs
sub
xor
es
outsb
mov
int
lock
mov
mov
dec
aad
sbbb
jno
faddl
lahf
xchg
cmp
push
sarb
cmp
dec
sub
mov
into
lahf
repnz
fadd
in
xchg
mov
adc
push
jmp
jno
outsb
mulb
pop
mov
mov
lcallw
fiadds
ljmp
imul
mov
rol
xchg
out
xor
cmpb
lahf
xor
jae
sbb
lret
sub
mov
stos
mov
pop
push
jg
pop
mov
add
xlat
jnp
jecxz
es
frstor
fcomp
mov
roll
jge
mov
call
push
outsb
das
test
jl
sub
dec
fmul
inc
ja
enter
out
xlat
sbb
or
adc
pop
adc
lahf
mov
mov
arpl
cli
mov
mov
jl
call
cmpsl
jp
cmp
lock
or
add
movsb
out
ljmp
fsubl
push
xchg
movsl
pop
movsb
mov
or
push
sbb
xor
dec
sbb
cmp
xchg
ss
loop
mov
adc
loopne
lret
xor
fadds
sub
cwtl
push
mov
loop
mov
outsb
icebp
rorb
jns
int3
imul
push
pop
cmp
inc
push
ror
push
dec
adc
sbb
and
push
out
or
orl
pushf
add
loope
push
pop
ret
fwait
cmpsl
cltd
jle,pn
mov
inc
cwtl
pop
mov
icebp
mov
shlb
clc
fwait
xchg
movsb
cltd
or
pop
xor
bound
push
adc
add
mov
lret
ljmp
jb
call
pop
xchg
mov
add
ret
push
shll
fs
push
lods
xchg
pop
adcb
aas
insl
pop
jle
push
xchg
lahf
jl
sarb
int3
into
repz
jno
jae
ffreep
aam
das
stos
xchg
push
mov
arpl
xchg
push
shr
lahf
xor
test
cwtl
into
xchg
jmp
leave
and
ret
ret
mov
subb
sbb
mov
sub
adc
push
cmp
jmp
lret
adc
mov
mov
cmp
xchg
cli
std
inc
fbstp
repz
cmpsl
pusha
scas
push
hlt
mov
je
test
sub
jo
xchg
cld
inc
js
dec
ss
cmp
pop
in
nop
jbe
or
ljmp
dec
stos
insb
cmp
mov
cmp
jecxz
test
out
xor
inc
or
mov
push
add
mov
mov
aaa
sbb
pop
in
and
sub
xor
mov
mov
fldenv
pop
mov
cmpsb
or
xor
scas
jns
test
popw
push
jo
mov
cmp
pop
dec
fiadds
adc
add
out
outsb
clc
cmp
divb
push
push
cs
loopne
mov
push
xchg
jmp
push
dec
mov
dec
lret
pop
dec
ds
or
xchg
insl
mov
stc
pop
mov
cmp
dec
mov
movsl
cmp
push
sub
cmpsb
sub
push
arpl
mov
push
scas
push
ss
xor
push
stc
iret
gs
adcb
and
xor
mov
hlt
stc
adc
xor
adcb
or
ljmp
push
nop
xchg
mov
jg
push
mov
jecxz
enter
lret
mov
mov
lret
push
add
mov
xor
test
jle
mov
xorl
sbb
sti
jbe
aaa
mov
push
sub
dec
xchg
sub
jbe
cmp
mov
nop
push
adc
adc
fucomp
mov
cs
inc
xchg
dec
sahf
sub
or
mov
sbb
xor
ror
mov
ret
sbb
test
fisubl
push
inc
movl
sub
arpl
dec
dec
inc
mov
push
jmp
and
ja
xchg
aad
mov
sub
sub
pop
mov
ss
push
test
imul
out
push
mov
divl
pop
push
test
mov
and
ss
std
test
pop
aas
daa
rol
ret
js
ljmp
loop
dec
xchg
stos
movsb
inc
stos
andb
imul
xor
sbb
nop
lea
cmpsl
or
out
jns
cmp
cli
mov
jle
addr16
add
in
hlt
xor
ficoms
pop
outsl
movb
testl
es
out
ficoml
in
scas
xor
dec
loop
das
cmp
or
push
push
cltd
add
mov
mov
mov
out
jae
xchg
dec
les
dec
les
ja
outsb
or
lret
rcrl
mov
test
jg
mov
mov
dec
pusha
add
mov
mov
dec
adc
lods
stc
add
fs
test
push
sbb
mov
xchg
xchg
setg
pop
lret
jbe
dec
pop
dec
mov
pop
out
sub
or
sahf
loope
sbb
jns
jg
sub
mov
outsl
xor
clc
pop
pusha
rcl
iret
cmp
cmp
pop
test
adc
or
fidivrl
call
lods
pop
es
sbb
mov
gs
icebp
xor
mov
into
and
sti
pusha
testl
enter
inc
cmp
mov
nop
stc
stc
sti
cmpb
push
rcr
pop
lds
nop
dec
cmp
fstps
add
daa
xchg
js
push
scas
mov
jne
push
outsl
fimuls
pop
and
mull
enter
adcb
or
add
adcb
rclb
in
mov
insl
dec
sbb
or
mov
mov
fsubr
xchg
pusha
scas
scas
or
jmp
push
xor
loope
in
mov
lret
dec
fdivrs
lret
in
adc
mov
mov
jnp
inc
test
xchg
mov
cmp
repz
loopne
add
aaa
or
out
insb
data16
ljmp
aaa
xlat
xchg
fimuls
packsswb
scas
pop
jmp
xchg
jb
mov
xchg
mov
mov
repnz
gs
hlt
jle
pusha
into
rclb
dec
fcomps
setp
add
mov
jnp
sti
sahf
dec
and
add
pop
inc
and
or
dec
push
clc
repz
push
pusha
seta
mov
adc
jnp
cs
fdivl
data16
daa
aas
cs
scas
int3
push
push
sub
icebp
xchg
inc
mov
mov
ret
inc
js
repz
pop
and
ret
pop
je
adc
lcall
in
das
mov
push
mov
ss
data16
inc
addl
mov
inc
sahf
stos
jo
lahf
nop
mov
shrl
loope
sbb
fistpll
sub
dec
xlat
and
dec
out
pop
cmp
hlt
xchg
inc
mov
xchg
xchg
and
pop
mov
sub
hlt
jmp
lods
outsl
test
pop
ja
mov
int
mov
arpl
stc
push
pushf
out
into
jp
jl
out
std
xor
jo
scas
loop
cmp
das
aaa
mov
jg
xor
movsb
sbb
xchg
xor
cwtl
pop
aas
cli
bswap
or
or
daa
pop
inc
lret
data16
cmp
aaa
mov
lret
xor
xchg
es
pop
test
leave
lret
jno,pn
cmpsb
lock
fistpl
or
inc
stos
in
xchg
incb
jle
mov
mov
stos
fwait
aaa
adc
js
xchg
ja
mov
and
ret
mov
or
push
decl
push
mov
mov
imul
or
jo
ret
es
add
xor
or
mov
cltd
mov
negl
sub
int3
cmp
xchg
push
push
and
and
scas
mov
orl
pushf
inc
mov
sti
dec
or
sbb
rcl
sahf
and
sub
outsl
pop
mov
pop
nop
jnp
push
fldenv
sub
aaa
gs
stos
leave
es
pop
add
inc
outsl
out
pop
aas
mov
sub
mov
mov
adc
in
and
fmul
add
inc
roll
jp
mov
adc
out
stos
push
jnp,pt
ficoms
ret
adc
mov
xchg
jae
mov
pop
sbb
adc
loop
and
xchg
cs
mov
jle
roll
jg
jmp
dec
sub
and
enter
adc
mov
gs
sbb
jl
loope
movb
xlat
aas
movsb
call
das
jne
xor
fdivrp
inc
xchg
inc
cli
rcll
adc
dec
iret
stc
fisttpll
jecxz
outsb
ds
hlt
aam
out
ds
imul
loopne
out
out
pop
testb
xchg
testb
adc
icebp
cmp
stc
jecxz
orb
cmp
loope
xchg
lcall
and
sti
imul
or
dec
mov
stc
mov
cmp
lock
mov
adc
mov
push
lods
frstor
out
pop
lahf
imul
inc
repz
popa
sbb
lea
test
fcom
sahf
aad
scas
in
in
jge
or
insl
xchg
mov
bound
cmp
lods
adc
or
mov
jnp
sbb
jp
lock
adc
xchg
shlb
sub
out
into
pop
cwtl
jl
fisubs
or
lret
pop
add
imul
in
fldt
pop
rep
xchg
in
aaa
movb
jmp
or
scas
xchg
mov
inc
iret
lahf
mov
jmp
mov
and
xchg
call
mov
sub
push
ret
mov
inc
jle
xchg
loop
lock
add
cmp
sub
imul
cmp
loope
push
add
shll
push
push
clc
jmp
in
sub
shrb
orl
push
ret
ss
lret
sar
popa
jmp
cmp
rorb
outsb
sbb
xor
mov
inc
enter
dec
sbb
mov
mov
out
mov
stc
hlt
push
xchg
sbb
cmp
fcmovne
sub
rorb
xlat
pushf
xchg
out
fmuls
out
pop
jbe
pop
jmp
dec
in
out
lds
loopne
and
xchg
or
cmp
pusha
pop
jle
leave
inc
adc
les
adc
and
cmc
xchg
loope
mov
lds
push
sahf
push
das
test
in
imul
cmc
add
in
ret
pop
xchg
inc
fiadds
int3
inc
pusha
mov
pop
js
ror
mov
cli
dec
cmpsl
lods
addr16
jg
pop
mov
or
or
adc
cli
push
int3
sbbb
ljmp
and
repnz
test
cs
pop
dec
mov
sub
and
clc
cmpsl
sub
lahf
mov
testl
pop
cmp
stos
paddd
in
adc
sti
stc
das
fdivrs
filds
aas
xchg
das
in
aas
out
cmp
jne
dec
imulb
pop
rclb
pop
mov
xchg
push
push
and
push
shrl
fmuls
inc
xor
inc
sbb
loope
mov
leave
inc
fdiv
push
dec
dec
repnz
bound
nop
ret
call
fsubl
pop
xor
xchg
and
orl
in
push
or
popa
jo
sbb
aad
inc
fidivrl
jmp
ret
loope
xchg
jne
aam
and
and
mov
in
mov
int
inc
enter
daa
into
and
out
in
push
mov
ds
cmpb
lret
jns
dec
cmp
es
std
pushf
jl
push
adc
std
sbbb
push
adc
lds
movsl
dec
inc
inc
rorb
popf
adc
ja
pop
lcall
push
cld
pop
push
and
jp
fcmovnbe
ljmp
mov
adc
out
jle
xor
pop
js
pusha
xchg
in
push
fdivl
in
mov
negb
mov
ror
pop
or
sbb
sub
in
xor
stos
loop
out
sti
or
pop
mov
jno
in
mov
mov
jmp
inc
aad
ret
pmullw
xchg
dec
subb
inc
notl
ss
inc
fadd
into
addr16
pop
mov
mov
ja
sbb
pop
lahf
popa
push
and
add
mov
jae
inc
sbb
test
pusha
pushf
adc
cmp
and
inc
mov
jle
aas
pop
add
in
mov
jp
or
dec
int
data16
shr
sub
mov
sarb
sbbl
testl
subb
int
mov
ror
dec
ror
jle
and
outsb
pushf
or
or
das
push
jno
mov
xchg
call
call
cmp
insl
mov
mov
cmpb
imul
addr16
out
fbld
inc
aad
mov
or
dec
sahf
push
push
fbld
inc
mov
pusha
cmp
xor
or
in
inc
fistpl
testl
sub
ljmp
test
mov
adc
pushf
les
test
pop
pushf
outsb
stc
mov
jmp
mov
sbb
push
inc
mov
ffreep
dec
cmpsl
jmp
iret
xchg
nop
repz
imul
popa
es
popf
popa
mov
mov
adc
adc
jo
test
stc
dec
pop
dec
mov
jns
enter
sbb
loope
jecxz
mov
clc
lds
into
or
in
leave
shll
cmp
jo
fildl
jne
icebp
mov
enter
xor
in
scas
mov
push
xor
stc
pop
in
fcoml
lcall
ljmp
push
and
inc
jle
jmp
mov
bound
xor
gs
xor
loope
loopne
xor
bound
in
cli
and
arpl
mov
es
pop
les
movsl
sub
push
shl
lret
sub
aad
daa
int3
mov
aam
xlat
mov
inc
push
sarb
in
call
test
mov
xor
imull
sub
iret
mov
sub
adc
popf
jne
or
outsl
lods
xor
loop
push
shlb
mov
rclb
pop
inc
fcmovnbe
jecxz
push
push
aaa
inc
fadd
sub
and
fsubl
jbe
cltd
mov
cmp
xor
cmp
pop
inc
outsl
mov
mov
add
imul
cmpsl
dec
xchg
add
pop
lret
cmp
outsl
pop
sti
jl
mull
mov
rcr
mov
pushf
push
divb
pop
leave
or
repz
loopne
aas
sti
pop
push
jg
lods
fmuls
mov
movsl
in
xor
and
dec
inc
rcl
daa
xchg
cmp
xor
lock
pop
lret
iret
mov
pusha
xor
adc
gs
mov
nop
xchg
adc
dec
push
xor
shll
xchg
sbb
lret
push
jg
loop
sub
add
rol
dec
push
jne
lods
movsl
shl
xor
cltd
or
sahf
mov
icebp
negb
cld
jg
jno
idiv
fidivs
loop
or
push
cmovae
inc
or
jg
insb
pop
mov
cld
mov
jns
push
scas
mov
int
pop
fisubrs
jmp
push
jbe
xor
xorb
add
into
ffree
mov
mov
add
les
les
add
sub
test
mov
jge
jb
cmc
and
out
loopne
ja
pop
test
dec
lods
pop
sub
sub
inc
or
imul
enter
notb
movsb
movsl
sub
push
ficomps
or
lds
nop
jns
mov
or
mulb
jno
adc
sti
pop
popa
mov
sbb
add
addr16
jae
cmpsw
je
push
adc
test
std
decb
push
movsb
xchg
cmp
adc
in
mov
mov
mov
inc
cmpl
inc
stos
or
mov
iret
sti
gs
sub
pop
enter
sub
in
jo
pop
sbb
mov
inc
push
pop
mov
mov
test
sti
sbb
jge
lret
xchg
cli
jmp
or
lret
sbb
pop
mov
scas
cvtpi2ps
cmp
fwait
outsb
dec
andb
cmp
inc
shr
out
dec
mov
pop
mov
jle
fwait
sarl
jp
push
cmc
stc
cmp
out
loop
xor
jnp
fiadds
jl
sub
mov
jecxz
int
das
imul
testl
sub
add
mov
dec
in
push
or
cld
add
xchg
mov
or
and
push
loop
in
push
sarb
in
push
fbld
mov
aaa
lret
sbb
orb
jne
test
into
mov
mov
call
mov
lcall
fidivrl
or
outsb
ljmp
aas
and
add
or
dec
movsl
rclb
pop
aam
mov
js
lods
jecxz
adc
pop
mov
or
adc
mov
out
push
pop
ja
jmp
push
dec
or
jo
mov
and
and
jge
cmp
sarb
pop
cmc
jl
pop
cli
push
pop
hlt
les
and
gs
in
cmpsb
insb
sub
and
push
scas
jb
cmp
adc
add
out
push
out
add
leave
adc
into
je
int
movsb
into
adc
mov
mov
xor
sbb
test
and
push
pop
mov
mov
or
icebp
xchg
int3
fwait
sub
or
test
sub
fcompl
jns
dec
jno
push
daa
push
inc
int3
icebp
pushw
testl
lret
shrl
or
loopne
dec
push
movsl
aas
decl
rcrw
rorb
pop
shlb
cmp
ret
dec
and
inc
cmpsb
roll
cli
int3
rcrl
mov
scas
push
mov
ret
push
add
xor
mov
mov
dec
mov
testb
jo
jno
xchg
mov
cmpsb
mull
repnz
adc
cmc
pop
dec
jmp
in
pop
clc
sbb
mov
arpl
and
inc
push
fneni(8087
aas
in
xchg
ret
jo
sub
ljmp
or
data16
mov
rcl
push
out
xchg
mov
nop
out
fwait
adc
pop
test
data16
jbe
add
in
shlb
imul
popa
push
jg
bound
sub
dec
xchg
mov
add
xor
pushf
adc
rcll
inc
loop
adc
iret
sbb
ja
dec
push
push
sub
mov
push
bnd
mov
mov
adc
flds
push
mov
popa
jge
xchg
outsb
pop
lahf
iret
or
mov
mov
push
movsl
in
xchg
cld
xor
adc
iret
push
push
and
iret
stos
mov
xor
and
loopne
sbb
push
mov
flds
outsl
repz
popa
fisubs
mov
xor
ret
jmp
rcrl
cmp
mov
outsl
pop
sbb
repnz
fcmovu
jp
cmp
out
mov
dec
lcall
out
stc
mov
add
insl
test
jb
std
mov
lcall
movsb
sbb
sbb
add
es
mov
mov
push
subl
push
xchg
mov
dec
sbb
div
sub
loope
jg
scas
fnstenv
int3
sbb
cwtl
jo
lods
jnp
bound
mov
nop
lret
out
xor
test
xor
jle
adc
iret
mulb
pop
mov
jmp
inc
or
sbb
popf
in
std
mov
jmp
inc
decl
xchg
xor
jns
add
loopne
enter
shr
dec
bound
cwtl
adc
add
test
fs
jge
push
adc
sbb
cmpb
repz
in
mov
test
ret
sar
cmp
rolb
lods
stos
test
sbb
pop
addr16
ffreep
loop
and
pop
jb
in
je
shl
inc
fcmovu
jmp
mov
loopne
jbe
out
or
inc
fnstenv
loope
mov
jae
shrl
jae
js
mov
and
xchg
out
pop
test
popa
jle
fs
imul
mov
loopne
or
mov
sbb
jae
xor
cmc
cld
es
rorb
mov
jnp
aaa
fadds
jmp
dec
mov
jae
pop
pop
loop
loopne
ficoml
and
add
dec
jo
ja
inc
adc
dec
in
mov
pop
inc
pop
adc
sub
int3
mov
stos
aas
xchg
xor
adc
jl
push
lock
or
mov
ss
pop
jge
jbe
fwait
imul
xor
push
xor
stos
adc
sahf
xchg
fsubs
call
insl
mov
push
lahf
pushf
xchg
adc
add
push
jns
movsl
fs
stc
mov
inc
adc
pop
inc
cmp
mov
jge
cmp
mov
mov
or
rolb
lods
adc
push
aad
shll
cmovne
in
hlt
cmp
jne
test
scas
outsl
fucomi
outsb
mov
sbb
jle
push
ret
iret
xlat
test
repnz
fistl
roll
in
xchg
mov
xor
data16
clc
jns
insb
or
ficoml
icebp
or
or
das
les
and
in
in
dec
dec
fsubl
sbb
inc
andl
inc
jno
popf
int3
mov
stc
rcrl
dec
pop
push
cld
into
enter
stos
pushf
ds
mov
mov
inc
mov
inc
inc
js
lock
lret
sahf
and
pop
push
sbb
mov
push
push
sahf
push
or
aad
jne
inc
adc
sub
cmc
scas
mov
push
sbb
add
outsb
mov
jecxz
sub
mov
fs
jmp
mov
stos
xor
mov
stos
inc
into
jge
adc
addr16
dec
ds
clc
fcmovnbe
repz
ja
cmp
cwtl
sbb
inc
xor
xor
sbb
mov
push
sbbl
icebp
daa
push
insb
jnp
cmp
pop
pop
bound
jmp
sub
jno
es
add
mov
loop
sahf
add
mov
ret
push
movsb
rcrb
leave
sub
sbb
stc
orb
mov
popf
outsb
pop
fmul
mov
mov
ret
dec
push
mov
jae
ss
jge
aaa
adc
push
and
jno
pusha
bswap
movsl
xchg
sbb
cmp
add
repz
pop
mov
pop
loopne
pop
sti
rorl
mov
mov
sub
jne
inc
cmp
jp
js
sub
push
push
mov
fistpl
push
repz
cmc
xlat
mov
cmp
mov
fsubs
inc
repnz
scas
cmpl
jb
clc
adc
xlat
scas
xlat
scas
inc
cmp
lcall
jb
sub
dec
xor
fs
push
push
ret
fisubs
xor
adc
lahf
lea
fisubl
push
jne
cld
adc
jo
add
inc
jb
xchg
fldt
imul
loopne
flds
loop
mov
sub
lret
js
push
pop
sub
lret
dec
pop
in
lcall
js
lret
xchg
ds
ljmp
cmpsb
add
push
aam
in
ljmp
push
xlat
aad
cmc
mov
aas
dec
sub
sub
aad
aas
jecxz
xchg
dec
cmp
xlat
and
xor
in
shl
es
dec
insl
imul
sub
fidivs
adc
sbb
popa
push
dec
adc
cs
fnsetpm(287
adc
jecxz
ljmp
xor
sub
mov
push
dec
push
popa
fldcw
popa
and
dec
icebp
imul
cld
frstor
sbb
jmp
xor
sbbl
ret
push
in
xchg
fnstsw
cld
into
scas
adc
inc
divl
or
test
add
movsb
and
dec
push
popl
mov
stos
mov
cli
ljmp
add
push
jbe
cmp
xchg
enter
lds
cli
enter
and
in
sub
pop
mov
add
jo
inc
add
div
fnstcw
jns
pop
daa
inc
mov
xchg
push
inc
hlt
cld
jb
mov
call
scas
add
cmp
jge
cmp
cmpsl
shl
adc
mov
push
test
mov
add
jnp
sahf
in
add
jp
sarl
inc
push
outsb
add
adc
sub
add
lcall
adc
cmp
cmp
xchg
mov
sti
cmp
push
inc
sbb
jg
repz
xor
movsb
pop
xor
pushf
in
cltd
cltd
std
insl
mov
leave
test
cmp
fwait
xor
cmp
daa
pop
adc
fdivl
and
stos
cmpsb
and
dec
mov
inc
shrl
or
mov
nop
adc
add
adc
xor
mov
popf
dec
or
leave
jne
mov
ffreep
dec
and
push
repz
cld
push
into
mov
ja
les
xor
sub
sub
rcl
mov
or
mov
loop
pop
fldt
lcall
xchg
sbb
inc
cli
ljmp
add
stos
jb
jo
sub
aas
in
cs
into
xor
push
fmull
jbe
dec
es
nop
sldt
mov
jbe
loopne
jo
fwait
rorb
xor
push
sti
adc
hlt
iret
inc
cmc
es
imul
addr16
mov
outsb
aas
jne
mov
aaa
movsl
dec
xlat
xchg
xor
fdivrl
dec
ja
filds
loop
cmp
loope
int3
mov
scas
adc
out
mov
fdivs
lret
call
addr16
push
lods
dec
jp
and
dec
cmpl
mov
imul
sub
dec
fwait
xor
inc
push
int
rcll
pop
lret
shll
pushf
ret
movsl
inc
stos
pusha
lea
shlb
ss
dec
scas
push
popa
push
clc
cmc
jge,pt
test
xor
add
out
popf
int3
out
ljmp
xor
cltd
insb
pop
dec
shl
mov
inc
or
adc
sub
cmp
adc
sbb
push
ret
mov
or
mov
mov
fidivs
adc
out
inc
fisubrl
ljmp
and
lock
leave
mov
jae
fwait
cwtl
adc
rorb
jo
test
fs
fcompl
and
sub
lods
mov
xor
call
lods
aam
xchg
adc
stos
mov
mov
pop
mov
push
mov
sbb
mov
sub
cmp
cmp
outsb
xlat
movl
out
and
aad
or
pushf
popf
inc
push
mov
dec
dec
loope
sub
mov
cmp
movsb
add
scas
popa
mov
jns
pop
mov
pop
dec
sub
mov
or
mov
adcl
xchg
inc
cmp
sbb
inc
repnz
sbb
in
shlb
int3
les
inc
sti
mov
dec
rcll
cwtl
js
dec
jl
sbb
sti
ljmp
mov
call
sbb
and
mov
inc
cmp
sbb
cwtl
inc
fdivr
xor
imul
dec
pop
addb
or
xchg
sub
jecxz
nop
mov
dec
jo
mov
std
lods
and
ds
cmp
inc
or
jns
ret
leave
js
cmp
xchg
inc
xchg
add
inc
mov
sub
xchg
xchg
pop
sbb
lods
mov
pop
int
jg
xchg
fisttpll
pop
jb
mov
jge
test
lods
cmp
popf
adc
andl
xchg
sbb
push
xchg
pop
xchg
pop
jnp
dec
add
push
or
shr
es
inc
jl
pusha
adc
inc
js
push
jmp
icebp
mov
nop
inc
cmp
push
xchg
inc
mov
out
jno
push
cmp
or
lds
add
aaa
jge
inc
outsl
xor
les
cli
xchg
sub
cmpsl
mov
jae
push
out
cmpsl
jns
loopne
jae
xchg
out
cltd
iret
mov
pushf
mov
push
jb
fidivrl
gs
cmpsl
pop
pop
in
test
pop
popa
arpl
fisubrs
fcoms
mov
inc
js
push
es
adc
push
lods
pop
and
cli
lret
scas
fcomps
add
mov
push
sahf
cmp
jle
out
mov
inc
flds
inc
pushf
shrb
pop
adc
adc
leave
cwtl
pushl
xchg
pushf
mov
out
jb
mov
ja
fists
jns
push
movsb
push
fucomip
sub
mov
aas
rorb
cmpsl
stc
pop
xchg
stos
xchg
aad
dec
into
dec
pop
sbb
lcall
push
scas
out
notl
add
lods
inc
lret
xchg
dec
or
gs
stos
dec
pop
imul
fcomps
jnp
mov
pop
mov
cmp
jg,pt
ss
or
xor
fidivs
repnz
push
mov
or
fsts
mov
sbb
adc
push
xchg
mov
jle
clc
les
push
popa
jb
out
jbe
dec
loopne
hlt
shr
icebp
lret
cltd
mov
lahf
imul
add
jg
insb
xor
das
and
into
cmp
push
adc
outsl
insl
es
pop
into
mov
cld
xchg
ficompl
inc
hlt
test
add
stos
data16
jne
xor
or
xchg
call
xor
ret
fidivs
in
fst
jmp
mov
xor
pushf
add
outsb
mov
in
out
and
adc
cpuid
add
mov
or
xor
imul
leave
emms
mov
or
cmpsl
xlat
insb
cmc
out
sub
mov
cmpsl
cld
mov
faddl
push
imul
sbb
sbb
ss
bound
rol
sbb
mov
enter
add
inc
and
fiadds
xchg
stos
pop
jmp
arpl
outsl
clc
mov
push
nop
xor
push
jo
inc
fldt
ss
jns
lock
inc
jge
repz
mov
ficoml
mov
ficompl
and
cmp
and
aas
rcrl
jno
xlat
sub
add
sti
push
std
inc
cmp
xchg
mov
and
mov
sub
push
add
mov
mov
movsb
in
shl
add
call
test
cs
fidivs
sbb
push
xchg
push
repnz
pop
xor
dec
lea
dec
jecxz
jmp
jge
push
and
push
ret
cwtl
push
and
call
icebp
mov
insl
mov
lods
pop
test
mov
sub
mul
push
cmp
xlat
repz
and
push
inc
sub
int
pop
xchg
cmp
pop
xor
dec
mov
fdivl
in
add
lret
sub
push
imulb
out
nop
call
mov
mov
adc
fstps
push
and
and
movsl
fwait
orb
jp
and
enter
sbb
pop
or
sti
dec
pop
repnz
mov
mov
cwtl
mov
xchg
jo
nop
xor
lds
and
cld
jecxz
xchg
lods
sarb
or
fiadds
or
pop
mov
adc
jmp
fnstenv
fs
ror
pop
jmp
add
pop
mov
mov
xor
fwait
jge
jmp
test
pop
repz
inc
adc
cs
fbld
imul
and
push
xor
fdiv
dec
or
inc
add
pushf
or
cmp
mov
cmp
jbe
loope
shlb
fsubr
fcomip
dec
jge
xorl
dec
xchg
cmp
lret
into
cli
std
cs
dec
insl
adc
scas
out
push
or
mov
aam
rorl
push
xchg
adc
in
jns
stc
xlat
outsl
xor
in
or
sub
lret
and
rcrb
pop
outsl
in
push
stos
aad
out
cltd
imul
inc
cli
and
xchg
vpunpckhdq
stc
inc
fcmovbe
cmp
jae
test
aas
xor
sub
adc
add
sbb
xchg
mov
fldenv
popa
arpl
subl
sbb
cmp
cmp
cmp
rolb
xchg
push
out
xor
push
divb
add
adc
ret
lahf
dec
sbb
mov
fdivp
test
xchg
incb
je
outsb
aad
rol
pop
adc
cmp
stos
pop
xchg
shlb
xchg
xor
xchg
cli
push
das
jge
enter
imul
jbe
xchg
cmp
mov
mov
xchg
or
dec
pop
stos
jns
fistps
jne
or
leave
lcall
jae
mov
dec
sbb
pop
sbb
dec
mov
mov
push
mov
dec
and
je
mov
addb
cmp
scas
rcll
push
adc
fstpl
repz
les
fmuls
jnp
add
or
jno
sbb
mov
lahf
add
or
cmp
nop
and
sub
xor
scas
stc
outsl
xchg
test
not
repz
das
sahf
mov
int3
push
jl
orb
pop
out
xchg
popf
jle
bound
sbbb
push
or
inc
imul
outsb
cmp
test
out
movsl
dec
adc
pop
mov
mov
lret
adc
jnp
mov
inc
mov
loop
mov
jg
jl
test
popf
inc
sarl
mov
mov
sub
push
scas
xchg
push
imul
xchg
loop
jmp
iret
inc
inc
mov
sub
pop
dec
mov
xchg
adc
sbb
pop
push
mov
pop
dec
mov
out
push
std
fldcw
rcll
icebp
and
scas
test
cmp
jecxz
xlat
jno,pt
fsubrl
push
dec
xchg
or
and
popf
sub
pop
mov
mov
rcr
pop
and
sbbb
push
mov
add
xchg
adc
xchg
bound
dec
xor
mov
je
cs
sub
imul
test
gs
inc
sbb
popf
loopne
mov
xor
push
xor
adc
or
jge
movsb
fucom
outsl
jo
jnp
sbb
xor
popa
rcrl
cmp
sub
cwtl
cmp
mov
xchg
or
ljmp
dec
inc
inc
sbb
idivb
leave
mov
sbb
lods
sub
or
lret
mov
or
dec
gs
sahf
into
xchg
xorb
adc
sub
stos
xor
sbb
push
in
jg
es
movd
dec
cmp
fdivrp
addr16
mov
repnz
insl
shrl
test
xor
fcoml
sub
inc
inc
mov
aaa
cmp
sub
fnstsw
cli
in
xchg
and
fs
jmp
push
and
stos
clc
add
ret
adc
fistpl
sub
lods
and
repz
adc
fimull
adc
cmp
je
sbb
sub
sub
test
mov
mov
add
mov
push
daa
inc
push
data16
lods
add
xchg
dec
mov
rcrb
adc
outsb
in
pop
adc
inc
frstor
adc
or
sbb
mov
lods
popa
dec
cmc
jge
hlt
mov
jle
and
leave
inc
aam
jle
inc
inc
in
iret
lds
in
adc
insl
sub
loop
imul
mov
adc
jge
lods
jb
es
iret
scas
add
adc
rorb
mov
dec
andb
push
aaa
cwtl
test
into
adc
mov
imul
addb
jns
loopne
mov
loop
aas
lods
test
mov
inc
in
pop
das
in
jbe
inc
inc
test
and
test
mov
push
lahf
rolb
mov
cmc
xor
dec
cmp
adc
test
loopne
scas
pushf
into
loope
mov
repz
dec
jnp
sbb
addr16
add
out
mov
sub
add
add
lcall
fs
inc
pop
inc
mov
dec
mov
es
insb
and
cmp
sub
pop
or
and
mov
cld
mov
andl
sbb
xchg
xorb
fwait
push
into
jnp
xchg
in
cmp
imul
leave
js
ja
fdivr
sub
lcall
enter
rclb
adc
sbb
dec
popa
mov
or
mov
xor
lret
xor
lahf
pop
add
repnz
lret
fs
push
mov
adc
outsb
and
mov
lods
leave
lahf
out
rorb
jbe
fsubr
push
shl
sbb
cli
call
setns
pushf
and
push
add
push
lahf
arpl
test
jo
mov
cltd
mov
shl
cltd
adc
push
xchg
or
xor
xchg
jb
dec
lods
cmp
mov
aam
cld
and
arpl
xchg
mov
sub
arpl
sub
rclb
jb
inc
mov
daa
mov
and
sbb
hlt
fmull
ss
test
sub
das
popf
loope
and
cltd
lcall
push
xchg
daa
std
test
mov
cmp
and
pushf
mov
xchg
imul
jmp
dec
iret
jns
loopne
lea
or
and
je
imull
gs
cmp
xchg
sbb
mov
pop
out
js
daa
lock
cwtl
fbstp
sbb
mov
pusha
je
test
cmpsb
daa
das
in
inc
add
jno
pushf
push
scas
push
push
cmpl
call
ja
je
xor
inc
loopne
mov
push
or
leave
xor
aas
popa
rorb
xor
lret
push
pop
ss
cmp
cmp
int3
dec
fs
cmp
shll
mov
pop
add
lea
in
faddl
shr
loop
xchg
mov
rcrl
lods
fs
push
stc
clc
cli
cltd
gs
test
or
mov
mov
and
cwtl
pop
fnsave
dec
addr16
shrb
adc
jmp
out
clc
mov
inc
int
ss
scas
std
jge
dec
jge
ret
inc
sbb
je
jne
sbb
pusha
mov
xor
outsl
decb
sbb
in
xchg
push
ds
out
dec
mov
and
and
fst
fisubrs
std
mov
jp
xchg
cltd
or
data16
jecxz
jle
ficoml
jne
es
push
mov
pop
jle
mov
xor
mov
shll
dec
add
dec
xchg
add
sub
outsl
outsb
loope
data16
ret
ljmp
mov
pusha
sahf
faddl
sub
insl
inc
cwtl
inc
and
fcmovb
arpl
repz
mov
cwtl
xchg
sub
adc
into
jmp
push
cld
cmpsl
mov
negl
inc
jo
jnp
or
cmp
aaa
lods
sbbl
inc
cld
sahf
scas
cmc
lret
lea
xor
loop
lock
and
call
cs
mov
xchg
loopne
dec
cmpb
scas
add
xchg
aas
notb
or
loopne
push
test
lds
or
mov
or
fdivr
push
or
ljmp
pushf
leave
cmp
fnstcw
inc
jno
adc
pop
xchg
mulb
das
add
push
in
mov
push
hlt
push
sbb
xor
push
pop
mov
sub
jecxz
sub
in
sub
ret
subb
cwtl
jae
mov
aaa
enter
pop
lods
ss
and
push
es
mov
cmpsl
lock
lahf
cmp
sbb
or
push
sbb
mov
outsb
xchg
lcall
push
adc
sbb
pop
push
xchg
shrl
imul
faddl
out
jbe
sbb
test
ret
dec
sbb
fisttpll
mov
and
push
adc
test
sub
fsubrs
movsb
xor
mov
lods
stos
vmovaps
ret
loop
xor
leave
rolb
adc
jno
outsl
out
dec
enter
push
mov
jae
sub
scas
dec
loop
pop
adc
pop
push
dec
lock
out
sub
jle
xor
xchg
lods
test
adc
repz
cmp
leave
ret
sub
cltd
jns
mov
inc
ret
push
pop
pop
sti
fwait
mov
scas
dec
xchg
mov
dec
cmp
cwtl
ss
inc
pop
xchg
int
cmp
fnstenv
cli
mov
sbb
push
push
inc
ds
in
repnz
loop
cld
jl
push
fistps
mov
sbbl
or
lods
add
idivb
mov
and
lret
fisttpl
loop
in
icebp
add
outsl
mov
jp
fst
mov
loope
mov
idivb
mov
shl
jl
imul
mov
cmp
inc
mov
icebp
dec
mov
jl
or
xchg
dec
ret
jbe
sbb
movlps
inc
imul
stos
mov
or
or
mov
lret
in
xchg
lahf
int3
mov
aam
arpl
ss
mov
movsl
popa
fistpl
push
shr
lret
orl
xlat
dec
mov
and
shll
mov
or
notb
inc
push
cs
stos
nop
sub
rol
xor
movsl
mov
push
inc
in
sbb
out
mov
mov
lret
xor
or
mov
xchg
mov
pop
fists
cld
mov
js
push
jle
fnclex
xor
fcom
lds
loope
or
aaa
loopne
out
fdivrl
fcmovnu
sbb
repnz
inc
cmp
sbb
ds
scas
testb
push
lret
mov
sbb
push
orb
or
sti
lret
mov
rcr
sbb
mov
mov
lcall
adc
clc
push
pop
hlt
mov
lahf
mov
or
mov
xchg
int3
pop
cli
mov
jl
lcall
repz
cmp
dec
adc
inc
inc
pop
push
xchg
mov
pop
xchg
jns
gs
aad
add
adcb
and
sbb
rcr
xlat
loop
fnsave
add
jmp
xchg
daa
in
xor
adc
lfs
push
imul
cmp
neg
cmpsl
adc
pop
fprem1
scas
dec
fucomp
lods
cmp
aas
shlb
add
add
push
jp
sahf
inc
push
iret
pushf
clc
and
push
stc
call
add
rcrl
xchg
mov
push
cmc
push
xchg
pop
mov
sbb
mov
idivb
or
dec
out
aam
insb
sbbl
in
leave
push
xchg
dec
jns
cmp
xor
lahf
inc
ja
dec
dec
aaa
mov
pop
call
stos
aad
rcrb
lahf
fnstcw
jecxz
shlb
inc
xchg
rcrl
movsl
sub
icebp
xor
stos
pusha
pop
mov
push
das
cmp
inc
cmp
in
cmp
test
dec
aas
int
lods
aam
jne
or
mov
inc
pop
repnz
and
insb
inc
pop
mov
push
sarl
dec
stc
mov
outsb
inc
hlt
jb
pop
imul
testl
dec
cmp
dec
push
mov
bswap
nop
dec
stos
pop
ret
cli
cmpsl
imul
es
adc
insb
pop
sub
inc
sub
cli
mull
pop
mov
pop
xchg
adc
imul
dec
adc
movb
sbbb
jge
xor
popa
in
insb
mov
jns
imulb
push
fisubs
das
imul
and
add
outsb
cli
into
icebp
test
jl
fwait
popf
adc
sbb
addl
cmp
test
lock
mov
sarb
mov
incl
sub
in
add
mov
mov
pop
rclb
shr
xchg
in
in
jmp
test
popf
cmp
pop
in
inc
es
mov
daa
cmc
ds
xor
iret
out
cmc
pop
fwait
mov
enter
les
insl
jae
out
daa
or
push
fwait
dec
dec
ret
push
pop
cmp
pmullw
fcmovu
bound
in
adc
lahf
mov
scas
mov
sub
pop
sub
cli
loopne
lds
nop
pop
mov
cltd
dec
mov
pop
cmp
adc
test
mov
mov
push
movsb
xlat
sub
in
inc
js
push
ds
jmp
aad
ljmp
add
mov
lods
cmp
mov
or
inc
adc
daa
sub
push
and
or
into
arpl
in
mov
mov
and
push
cmc
xor
sub
pop
ja
divl
jbe
inc
jne
jne
push
movsb
cmpsl
popf
adc
sbb
xchg
push
sub
xchg
out
xor
addr16
mov
xchg
inc
jmp
stc
ror
jnp
inc
sbb
repnz
out
and
mov
ret
lods
in
or
roll
movsb
int
and
inc
pushf
loopne
add
sbb
enter
and
or
inc
dec
js
popa
stc
sbb
outsb
in
ds
loopne
call
into
daa
sbb
or
mov
jnp
cmp
ret
mov
aam
xchg
pushf
inc
sub
jb
das
and
dec
call
sub
dec
fistpll
dec
push
lret
mov
fisubrl
cmpsb
xor
pop
cmp
sahf
push
push
sub
mov
push
dec
stos
rcll
jae
mov
mov
mov
jge
add
lcall
jl
or
push
dec
mov
mov
inc
shrl
movsl
arpl
cmp
fists
ja
stos
das
and
lods
lock
aam
aas
push
add
dec
mov
ret
mov
push
pop
test
in
cmpsb
ljmp
mov
dec
dec
adc
rclb
scas
rolb
push
mov
xchg
xchg
aad
inc
and
insb
pop
test
rclb
inc
fsubp
push
sbb
push
popf
push
or
leave
mov
test
inc
add
dec
cmp
lcall
pop
addr16
push
int
mov
adcl
insl
movsb
imul
sub
push
std
cmc
jg
xchg
divl
loop
mov
jmp
aaa
and
cld
jg
bnd
lock
adc
cli
xchg
xor
mov
pusha
filds
xchg
xchg
hlt
sub
sbb
lret
add
jmp
aas
mov
push
mov
mov
mov
push
or
mov
mov
xchg
mov
pushf
into
mov
insb
mov
clc
outsl
push
cwtl
popa
aas
cmc
subl
lods
inc
in
pop
ja
cltd
stc
js
mov
je
dec
pop
hlt
cli
aam
test
mov
insl
xchg
push
sti
insl
imul
add
cli
movsl
inc
mov
mov
pop
push
dec
loop
popa
addl
sbb
jnp
mov
mov
sub
mov
mov
in
inc
daa
rorb
shlb
or
xchg
dec
cmp
xchg
jno
fimuls
shr
mov
sub
jno
xchg
push
push
mov
popf
dec
in
jp
cltd
fidivs
hlt
test
dec
leave
int3
add
xchg
adc
clc
or
push
dec
adc
inc
stc
popa
stos
or
lret
cld
cs
mulb
test
adc
dec
pop
add
lods
or
adc
shll
mov
xor
ljmp
jmp
fnstsw
push
pop
sub
fsubs
xlat
int3
inc
mov
test
das
cmp
pop
jae
ret
xlat
imul
in
fsubrl
cmp
jle
icebp
cmp
xor
cs
in
mov
fs
fs
fwait
xchg
add
in
shrb
idivb
sub
sub
add
push
cs
jo
mov
mov
inc
leave
xor
cmp
or
mov
call
mov
sbb
pop
into
pop
mov
shr
in
pusha
inc
loopne
test
add
movsl
ret
cwtl
imul
das
arpl
aas
mov
cmpsb
adc
pop
arpl
adc
arpl
sbb
add
outsl
iret
fwait
sbb
ret
adc
jae
in
jno
cs
inc
add
scas
repz
mov
push
sbb
jae
div
inc
jmp
xchg
repnz
sbb
and
out
shlb
inc
iret
testl
and
add
sbb
add
or
and
pusha
scas
push
mov
scas
cmp
push
push
stos
mov
test
arpl
pop
rcll
out
ret
inc
and
pop
sub
dec
push
dec
sti
iret
sbb
movsl
jne
jb
orb
pop
mov
sti
fidivs
jns
adc
add
push
push
aam
mov
in
in
mov
pop
push
sbb
lea
cmp
fbstp
dec
outsb
dec
aam
popl
fwait
mov
or
out
cmpsb
add
test
stos
cmc
cli
pop
insl
push
mov
cmp
call
and
adc
mov
cmc
mov
and
and
push
mov
push
sbb
cmpsb
ds
lret
add
lea
xchg
out
adcl
adc
sbb
xor
push
xor
pop
ret
jecxz
sbb
sbb
push
ss
enter
fsubrl
push
add
movsb
pop
cli
aam
xor
test
and
outsl
rorb
add
sbb
add
in
lds
cmpsb
xchg
scas
xchg
mov
decl
cli
pop
bound
cmp
xlat
sub
imul
icebp
aam
mov
lret
ljmp
dec
xor
call
les
rcll
jns
lret
jg
aaa
inc
les
movsl
sar
jns
popa
or
and
loopne
lock
xchg
inc
stos
incl
adc
shr
fldenv
or
jnp
push
stos
leave
sbb
cwtl
cmp
test
test
fwait
inc
aas
and
popf
mov
adc
aas
lock
pop
xchg
and
mov
adc
jg
dec
cmpsl
jbe
dec
fisttps
iret
bound
out
scas
and
out
xchg
xor
idivb
inc
or
mov
mov
mov
push
cmp
or
sbb
notb
xor
add
inc
sub
rol
loopne
cmc
stos
outsb
and
dec
in
out
imul
inc
fisttpl
mov
or
add
bound
ret
rcrb
jg
fwait
sbb
out
push
inc
or
pop
or
fdecstp
mov
xor
mov
dec
sub
inc
addr16
iret
frstor
gs
or
push
fsubrl
scas
scas
mov
fdecstp
mov
jecxz
cmpsl
pop
sar
add
xor
adc
andb
js
or
mov
mov
rcrb
sbb
nop
and
mov
pmulhuw
jecxz
mov
fwait
pop
bound
dec
cmpsb
mov
xor
ss
lea
push
pop
pop
xchg
dec
xchg
fisttpll
cmp
add
jg
fs
dec
imul
stos
pop
cmpsl
lods
lret
jl
cmp
or
add
jge
hlt
ja
out
movsb
inc
fcoml
fwait
out
ret
out
sub
adc
in
mov
pop
jl
fcoms
jo
inc
sub
jnp
dec
pop
sub
mov
lds
fstl
inc
test
push
mov
and
fs
add
cmp
xchg
mov
xor
lods
addr16
leave
aam
addr16
xchg
stos
aaa
arpl
push
pop
mov
sbb
xchg
fnstcw
push
dec
or
xor
mov
and
clc
mov
out
jae
xor
aam
jge
scas
loop
imul
cwtl
mov
in
fstl
enter
adc
icebp
es
adc
orb
mov
mov
lods
lods
add
fildl
ret
sbb
push
and
cmpsl
or
mov
jns
cmc
add
lods
fcmovnu
push
sahf
jbe
adc
mov
lods
call
ja
dec
stos
xchg
loope
mov
stc
out
jmp
lret
jl
into
sub
scas
sub
test
xor
xor
decb
lds
into
fdivrl
subl
xchg
xchg
push
sbb
pushw
cmc
push
movsb
jnp
out
and
in
jno
je
repnz
enter
inc
xor
pushf
sbb
pop
in
or
pop
data16
lds
jb
mov
rcll
xchg
stos
sub
jle
rorl
jb
jo
pop
divl
into
xlat
bound
adc
mov
xchg
cld
sub
dec
sub
cmpsl
outsl
pop
insl
fwait
setne
shll
dec
or
jnp
cmp
and
jmp
addl
mov
xchg
mov
lahf
addr16
outsl
sbb
out
jns
aas
pop
sub
or
jne
ror
je
xor
lods
mov
pop
insb
out
mov
sahf
aaa
test
cmp
hlt
inc
nop
inc
scas
mov
xchg
bndstx
or
insl
sahf
call
imul
and
stos
mov
repnz
push
ja
dec
jbe
aaa
jnp
pop
push
dec
sbb
rclb
push
popa
fcomps
pusha
pop
and
cmp
out
call
enter
mov
push
inc
arpl
and
sbb
adc
inc
lret
push
testl
enter
cmp
icebp
xchg
out
nop
sub
push
add
mov
scas
add
dec
jae
lcall
in
mov
mov
xorl
loopne
jne
call
cmpsl
jae
mov
ljmp
test
lret
pop
int3
sub
adc
ret
lock
adc
cmp
cs
cmp
sub
mov
mov
in
test
int3
or
fistpl
fsubrl
insl
fmulp
add
lea
and
sbb
cmp
sub
mov
and
xchg
pop
icebp
and
out
in
lock
push
data16
loope
inc
pop
iret
outsb
jnp
out
cmp
mov
stos
movsb
es
imull
jo
adc
lock
inc
xchg
or
xchg
popf
jns
mov
jne
lea
fidivrl
inc
repnz
aad
pop
sbb
test
lea
popf
mulb
sub
jle
lds
fstps
scas
mov
loopnew
pop
adc
les
jp
pop
and
jecxz
inc
inc
scas
dec
xchg
cmp
sub
inc
xor
mov
xor
insl
inc
jl
or
movl
fmull
lds
xor
lds
enter
mov
nop
ss
mov
add
cs
xchg
push
aad
mov
or
shl
iret
out
addb
pop
icebp
adcb
enter
or
push
cli
gs
js
aas
dec
stos
aam
fmulp
dec
push
icebp
js
pushf
adc
xchg
xchg
data16
jnp
and
xchg
and
pop
mov
popa
or
sbb
add
imul
xchg
inc
es
cs
filds
imul
adc
mov
sub
aas
lcall
in
and
mov
mov
test
cmpsl
mov
decl
sub
xor
push
mov
loopne
call
or
repnz
push
outsl
jecxz
jp
jecxz
mov
adc
movsl
xor
test
std
cltd
xor
ss
mov
and
loopne
sarl
test
inc
add
cmp
mov
jle
sub
das
cld
mov
jae
push
xor
jg
cmp
push
and
cwtl
jge
cmp
icebp
jg
pop
andb
xor
in
lock
mov
ds
hlt
sub
filds
jo
mov
add
in
shl
lcall
dec
mov
and
and
es
sub
movsb
mov
adc
or
aas
test
add
sbbl
mov
imull
xchg
sar
outsb
push
cs
cld
mov
ja
cmp
adc
sub
ret
sbb
add
cmpb
ds
hlt
aad
inc
int
xor
test
rol
lods
xor
mov
sub
or
xor
and
cmpb
and
and
and
or
dec
fldl
jno
in
adcb
xchg
mov
pusha
push
into
cwtl
push
push
or
or
pushw
sbb
out
fcmovnu
in
bound
incl
and
hlt
int
cmp
mov
filds
test
iret
inc
sub
testb
and
mov
adc
jno
popa
xchg
in
mov
mov
pop
xor
xlat
cmpsb
ljmp
test
jg
mov
dec
js
and
jecxz
test
jns
adc
enter
mov
add
add
cltd
insl
dec
imul
mov
ss
sbb
cs
add
cmp
pop
arpl
test
test
push
iret
adc
ljmp
mov
lret
and
out
sbb
mov
inc
shrl
cmp
mov
jge
push
sbbl
inc
and
dec
lods
xor
and
das
mov
fwait
stc
mov
fcmove
pusha
scas
hlt
and
test
push
ss
test
adc
cmc
cmp
push
add
out
jo
jb
pop
xor
push
mov
inc
lret
sbb
push
mov
jne
mov
sbb
xor
inc
or
cli
jnp
out
pop
sahf
dec
push
stos
rcr
arpl
inc
bound
mov
out
cmp
sub
andb
sub
sub
outsb
push
or
dec
pop
mov
sbb
mov
imul
fadds
mov
rol
or
inc
and
dec
stc
lret
inc
inc
loop
add
out
mov
cmp
inc
inc
pop
mov
add
ss
into
out
mov
dec
jle
aad
lock
insl
sbb
xor
cs
stos
lret
lds
movsb
dec
cmc
or
js
cmc
jmp
fiaddl
js
cs
xor
movsl
pusha
hlt
mov
imul
fsubrs
pop
iret
clc
push
mov
pop
dec
int
mov
stc
or
mov
mov
add
and
leave
push
lods
xchg
inc
or
dec
jle
push
in
push
scas
pop
mov
xor
adc
bound
int3
ret
loopne
cmpl
sub
adc
insl
jg
sbb
jmp
dec
push
hlt
cmp
xchg
out
mov
addr16
adc
stos
cwtl
aas
movsl
sbb
lock
xchg
ds
jg
jo
jle
cmp
daa
and
lcall
xchg
dec
sub
dec
movl
rclb
mov
sub
sbb
rcll
cmp
cwtl
sub
rcrb
xor
push
pop
jb
push
test
inc
stos
inc
add
es
insl
sahf
clc
inc
hlt
sub
xchg
test
sbb
in
cmp
das
sbb
pop
mov
dec
lods
jmp
rcl
add
mov
icebp
mov
pop
xchg
stos
pushf
xor
ficoms
je
push
jl
mov
loopne
xchg
cltd
dec
jg
jmp
push
lcall
mov
in
jl
push
xchg
jecxz
xlat
push
cmp
pushf
ret
adc
in
mov
push
leave
repz
xchg
or
push
add
cmp
gs
sahf
xchg
sbb
lret
dec
jl
jmp
movsl
aaa
jl
das
mov
arpl
out
jbe
inc
leave
rcrl
sub
sti
xor
add
fsubr
xor
gs
sbb
fs
xchg
cmp
adc
sarb
adc
mov
pop
push
movl
mov
test
inc
mov
jg
mov
push
pop
sub
dec
mov
lret
fnstcw
sub
add
or
gs
adc
ret
inc
dec
push
pop
push
sti
inc
pop
mov
mov
dec
shrb
sbb
xor
mov
push
xor
jge
cwtl
test
push
imul
mov
loopne
jg
jp
pop
cwtl
add
pop
xor
push
or
sbb
insl
lret
fimull
jmp
mov
add
add
push
out
jecxz
push
cmp
test
xchg
lcall
push
add
inc
popf
out
and
mov
mov
fstps
mov
xchg
rorb
ja
cld
adc
xchg
push
push
lods
mov
test
pop
adc
dec
push
inc
jmp
mov
es
mov
imul
inc
hlt
ret
rorb
jb
mov
xor
negl
testb
jl
mov
pop
call
shll
test
inc
jae
cmp
jg
imul
fwait
push
sub
push
sub
scas
xor
stos
test
leave
adc
pop
and
cwtl
cvtdq2ps
sub
repnz
sbb
loope
push
mov
in
das
fwait
mov
dec
outsb
pushf
pop
jmp
adc
int3
mov
faddp
inc
mov
pop
aad
jns
inc
lea
inc
outsb
or
cmc
lret
std
cwtl
sub
pop
pop
int3
xchg
push
pop
lcall
sbb
pushf
mov
mov
sub
dec
push
push
sbb
pop
fcmovu
xchg
ja
add
or
loopne
decb
rcrl
test
xor
mov
mov
push
aas
push
lods
movsb
enter
out
or
ficompl
bound
cld
insb
adc
sub
xor
ret
inc
movsb
insl
sbb
cltd
adc
cmp
cli
fadds
xor
inc
xor
std
adc
adcb
dec
ret
shlb
iret
dec
out
mov
cmpsl
test
and
das
inc
mov
mov
inc
pop
adc
pop
test
test
push
xor
inc
cmp
ret
sub
lods
xor
daa
inc
push
in
push
inc
cmp
pop
js
and
adc
adc
jno
bound
mov
cmp
pusha
xchg
fnsave
shll
mov
push
sub
cmp
push
cmp
ja
pop
outsl
jge,pt
int3
jge
mov
or
hlt
jns
lds
mov
stos
mov
jmp
jnp
shl
or
cmp
mov
pop
jns
gs
inc
fs
mov
mov
lret
jne
sub
jno
pop
mov
inc
lret
cltd
cmp
gs
mov
in
lock
femms
jecxz
js
out
xchg
adc
jo
dec
out
mov
popf
xlat
ljmp
jae
pop
data16
jecxz
mov
dec
and
adc
int
cld
cli
jg
and
adc
jge
fstl
mov
leave
xchg
push
jno
fidivrs
jns
mov
mov
cmp
push
loope
rclb
and
inc
loope
shl
cmp
popf
mov
or
xchg
sub
push
or
call
pop
jge
add
or
ret
and
mov
and
cltd
sub
dec
cmpsl
add
clc
and
sbb
cmp
loope
add
scas
inc
lods
lods
xor
mov
cmc
mov
iret
xor
sahf
mov
pop
xchg
jl
aaa
adc
sahf
in
popf
dec
mov
push
scas
dec
mov
push
dec
push
jns
arpl
cmp
fsts
out
mov
imul
jnp
fdivrs
out
or
insb
shlb
mov
arpl
adc
adc
out
sbb
mov
adc
xchg
out
sbb
adc
loop
cli
xor
ds
nop
mov
xchg
mov
or
stos
aad
imul
pop
insb
xlat
and
sbb
es
int
cmp
arpl
mov
leave
adc
or
lahf
mov
adc
jmp
jbe
repz
sbb
inc
and
push
test
xchg
mov
pop
jns
push
fdivrl
xchg
data16
negl
ret
push
xchg
loop
cmc
cli
pop
dec
or
sub
cwtl
adc
xor
push
xchg
sti
jle
mov
aad
pop
pushf
lret
mov
xor
enter
and
mov
mov
pop
addl
add
xchg
jo
mov
or
push
lods
imul
pop
mov
or
xchg
dec
xchg
xor
push
shl
push
insl
xchg
daa
std
jmp
fadds
scas
jno
xor
or
and
sub
pop
xchg
and
mov
adc
or
mov
imul
cs
iret
sub
std
mov
push
repnz
div
xchg
iret
inc
fwait
jae
mov
les
iret
add
and
out
adc
mov
int3
mov
lods
sbb
and
jns
in
test
sbb
fdecstp
imul
push
mov
iret
in
cmpsl
aaa
cmc
mov
push
ss
mov
cmp
psrad
push
das
jl
add
sub
scas
pop
mov
not
xchg
push
fisubrl
ljmp
or
xor
dec
jns
mov
add
or
mov
aas
mov
in
push
data16
nop
xchg
stos
rorb
pop
test
shl
xor
mov
push
mov
lret
out
and
sbb
movb
or
inc
mov
cld
jmp
mov
js
and
cli
imull
out
fidivl
add
cltd
call
jge
jg
jbe
xor
jmp
out
lahf
lret
xchg
ds
jg
cli
and
cltd
popf
lods
sahf
jo
pop
mov
and
out
sub
insb
punpcklwd
inc
cmp
jbe
lret
cli
mov
je
mov
lahf
xchg
jo
rcl
movsb
or
push
sub
lods
aaa
pop
aam
movsl
dec
and
jge
sbb
mov
push
stc
xor
imul
mov
test
data16
cmc
lret
loope
jnp
das
jno
imul
loope
add
sahf
dec
mov
call
pop
mov
pop
aaa
add
fnstsw
and
push
insl
mov
jp
mov
dec
dec
aaa
mov
imul
lds
mov
xor
movsb
xorl
ja
notb
lahf
lea
int
repz
in
cmp
sbb
push
leave
sub
pop
aaa
cmp
xor
cli
lcall
push
xchg
std
cmp
cmp
pop
inc
jns
mov
pop
add
cmpsb
stos
loope
add
mov
mov
pop
mov
cld
xor
inc
lcall
add
push
mov
xchg
stos
sub
loopne
test
xchg
lcall
or
jl
cs
das
std
jmp
neg
inc
dec
hlt
adc
xor
insl
movsb
jnp
roll
fdivl
push
mov
lock
dec
push
in
movsb
pushf
fistps
sub
mov
lret
sub
mov
xchg
pop
pop
shl
inc
cmpsb
insb
and
inc
jne
in
cwtl
not
lock
jmp
push
out
mov
repnz
imul
sbb
xlat
std
in
shll
jno
push
or
cmp
xor
cmpsb
movsl
mov
stos
sub
inc
lea
in
jns
fildll
and
hlt
sbb
repz
and
jmp
pop
aam
mov
cmp
aam
mov
xchg
lods
lods
cmp
adc
push
jle
push
sbb
add
add
jne
mov
add
pushf
xchg
test
mov
inc
jp
scas
out
xor
add
aas
push
fldt
lret
outsb
push
mov
hlt
cmp
sahf
fldcw
andl
inc
and
mov
lds
xchg
lret
adc
mov
inc
xchg
mov
shrl
push
push
sbb
in
fwait
enter
test
in
popa
imul
lret
pop
mov
mov
iret
lds
jmp
push
imul
push
sahf
aam
nop
sti
mov
add
loopne
sub
popa
sub
lods
repz
mov
hlt
push
push
cwtl
imul
loope
clc
cmp
popf
ss
pop
clc
sbb
fsts
ss
loop
iret
mov
xor
add
outsl
test
inc
push
pop
or
pushf
int3
pop
mov
sbbl
jp
and
dec
xchg
adc
sbb
xchg
cmp
xchg
push
cmc
ja
lcall
pop
or
cwtl
pushf
mov
rdtsc
sbb
xor
inc
inc
pop
dec
cmpsb
icebp
push
inc
lahf
arpl
inc
addr16
mov
mov
push
dec
fdiv
add
xor
lods
std
lret
mov
mov
lods
mov
mov
sti
fildl
mov
in
and
dec
jle
xor
push
addr16
pop
cld
and
loop
dec
or
xchg
xchg
fsts
loop
cmc
or
shll
push
jbe
lret
jge
daa
loopne
rol
xchg
insb
sti
or
in
sub
leave
dec
inc
jns
inc
movq
jmp
fiadds
and
fistl
xchg
xor
mov
push
daa
test
pop
dec
in
adc
setp
or
push
pop
or
lret
not
adc
sbb
dec
xchg
scas
adc
fcom
in
out
inc
fsubrs
hlt
cwtl
and
push
in
add
mov
mov
cmpsb
jns
inc
or
mov
scas
pop
xchg
add
jno
repnz
pusha
lret
in
xchg
sti
fcoml
or
and
add
pusha
sarl
jge
aad
shlb
and
xor
jb
cmp
hlt
sub
add
scas
mull
pop
ja
and
in
push
movsl
outsb
jl
or
stos
fsubrs
fcomp
ret
rol
test
pop
dec
sub
push
sub
test
xchg
push
inc
lahf
xchg
mov
mov
xchg
lcall
push
push
enter
movsl
adc
sbb
lods
out
or
cwtl
insl
ds
xor
ret
pop
mov
in
jle
inc
push
push
lods
mov
pusha
andl
xorb
inc
popa
xor
mov
cmpsl
dec
pop
mov
lret
cmp
mov
xchg
adc
insl
ljmp
or
fisttpl
push
leave
call
jns
add
and
add
rorb
xor
shll
sarb
rorb
push
pop
push
test
push
stos
mov
cs
sub
pop
in
pcmpgtb
out
jae
fstp
pop
xor
add
sub
daa
cmp
std
fdivrl
xchg
xor
mov
jge
mov
mov
add
testl
cmp
daa
push
mov
sbb
jo
xor
jbe
js
icebp
pop
lcall
and
adc
ljmp
lds
into
push
fs
mov
add
fsts
daa
sub
outsl
in
in
lret
popf
adc
mov
xchg
rcrl
hlt
lods
mov
pop
push
inc
jp
sbb
cmpsb
jnp
repnz
movntq
repz
jae
cmpb
sbb
cmp
push
dec
js
and
sti
adc
jno
imul
scas
pushl
out
cld
adc
aas
into
pusha
pop
clc
movsl
pop
ficoml
pop
add
sbb
push
push
gs
or
jp
jp
mov
inc
js
daa
jmp
stos
addl
sbb
mov
jb
pop
inc
movl
hlt
lods
xchg
pop
ljmp
and
push
in
lods
sub
cmp
push
int3
push
lods
inc
xchg
enter
pop
scas
ds
xor
fwait
cwtl
lret
sbb
das
movsb
sbb
fisubrs
sti
push
add
enter
xor
sub
cwtl
enter
xchg
mov
shrb
xor
xor
and
mov
sub
repz
data16
xlat
test
mov
fadds
out
dec
dec
adc
sti
push
in
outsl
inc
mov
shrb
lock
pop
adc
pop
ret
lea
in
xchg
mov
mov
add
scas
in
xchg
sub
dec
mov
int3
unpcklps
out
inc
aaa
or
add
int
dec
neg
stos
add
out
pop
js
insl
aad
addb
ja
jne
movsl
mul
add
mov
jg
repz
xor
xchg
loope
pop
push
in
jle
xor
aam
and
mov
inc
mov
movsl
push
push
lahf
mov
rorb
nop
mov
rolb
or
stc
ror
insl
push
xor
icebp
es
sbb
outsb
aad
jecxz
cli
mov
ljmp
jne
shll
fcoml
xor
dec
int3
cmc
aam
adc
sbb
or
mov
cmpsb
fdivrl
and
add
push
fmuls
jo
pop
outsl
je
movsl
mov
pop
jo
mov
xor
cmpsl
leave
aaa
xor
imul
add
sub
push
add
pop
cli
in
in
les
cli
lock
jl
out
mov
push
mov
nop
jle
cmc
in
hlt
and
xor
scas
and
out
mov
cmc
jns
sbb
call
lock
dec
mov
paddsb
cltd
loopne
and
xchg
das
jbe
cltd
lods
js
daa
imul
iret
and
pop
sti
js
test
xorl
sub
mov
inc
add
and
jae
push
dec
xlat
push
cld
or
outsb
movsl
in
dec
ret
dec
dec
mov
dec
cli
call
imul
push
or
repz
sub
adc
add
cmp
inc
lret
push
or
push
outsb
xor
insb
sbb
sub
mov
and
xchg
sub
sti
pop
xor
fimuls
es
push
add
loope
push
xor
pushl
insb
aam
subl
mov
dec
pop
dec
fnsave
loope
push
int
or
push
rorl
mov
cmp
jae
add
and
fcom
inc
adc
loope
std
imul
fmulp
imull
fdiv
mov
ficoml
xchg
xlat
inc
mov
movsl
das
int
jmp
data16
jp
inc
jb
adc
mov
fs
jg
mov
xchg
mov
xchg
lods
les
mov
lahf
repnz
sahf
imul
push
out
stc
je
lods
adc
dec
mov
leave
int
pushf
iret
loopne
cld
push
xor
dec
out
dec
movsb
sti
adc
push
dec
imul
jge
repnz
sbbb
or
rolb
sub
pushf
mov
rcrl
mov
pop
inc
mov
repz
and
push
aaa
mov
cs
mov
sti
jmp
cmp
mov
sub
pop
adc
cmpsl
mov
outsb
pop
test
int
icebp
mov
arpl
adc
ja
mov
in
jg
pop
pop
fwait
lcall
xor
or
sahf
sub
test
xor
subb
cmp
out
movb
popf
lret
fdivr
push
sub
adc
adc
je
xchg
dec
out
mov
xchg
jge
loop
nop
xor
in
jne
sbb
or
cmovs
or
cmp
je
shrb
mov
jle
shrl
jno
mov
filds
rorb
cmp
insb
and
cmp
lret
orb
call
shlb
dec
mov
sub
inc
pop
push
or
pushf
sahf
frstor
sub
shll
imul
mov
mov
xchg
mov
mov
push
leave
or
divb
ss
shlb
in
lret
add
lahf
mov
adcl
mov
jle
xor
arpl
loop
or
mov
mov
mov
adc
dec
push
clc
mov
pop
lcall
aad
add
cmpsl
dec
repnz
mov
stos
int
mov
stos
jnp
scas
jns
cs
jecxz
inc
xchg
dec
and
adc
jge
mov
mov
imul
movsl
aad
sbb
jne
inc
sti
push
ja
adc
mov
test
loope
sub
mov
pop
xchg
jecxz
cwtl
push
jnp
jo
and
and
pop
pop
test
out
cmp
xchg
repz
xchg
cwtl
std
cld
sbb
gs
jecxz
call
and
pop
and
xchg
jmp
push
fwait
pop
rorl
mov
mov
out
cmp
pop
adc
addr16
mov
and
sub
xchg
sbb
lds
movsl
aam
pop
test
repz
cs
into
sbb
scas
rorb
test
cmp
ret
sub
cmova
push
lods
arpl
test
xor
jle
pop
pop
sbb
sbb
leave
xchg
inc
je
into
mov
cmp
cmp
inc
mov
stos
and
loopne
icebp
std
loope
cli
dec
fistpll
nop
and
out
and
fwait
mov
dec
fmuls
test
push
ljmp
rolb
jge
fs
cli
lcall
inc
lcall
test
es
movsb
movsl
sub
push
mov
xor
mov
mov
xor
add
ljmp
and
inc
outsl
out
inc
adc
xchg
jl
xlat
mov
add
pop
pushf
pop
cltd
sub
addr16
add
push
sub
sbb
push
dec
mov
and
scas
or
push
cmpsl
sbb
movsl
sti
jmp
in
jns
mov
test
jle
cld
in
stos
jmp
stos
dec
leave
xchg
subl
mov
stos
or
sub
pop
lahf
xchg
in
icebp
nop
jns
jmp
and
jl
inc
fnstenv
repz
xorb
or
mov
daa
inc
ret
jae
loop
push
ror
push
push
dec
in
push
push
xchg
xchg
loopne
movsb
shll
adc
fisubs
push
add
outsl
mov
or
push
into
lods
add
cs
pop
add
arpl
flds
imul
arpl
loopne
or
jmp
ja
xor
pop
popf
or
mov
xlat
xchg
roll
adc
mov
sub
imul
sti
fidivrl
inc
push
push
dec
xchg
xor
and
push
mov
mov
lahf
lea
mov
add
pop
testl
ror
sbb
pop
gs
sub
push
mov
aam
arpl
pop
dec
bound
add
fisttps
or
sub
loopne
xchg
lahf
call
enter
mov
push
mov
mov
es
aam
jo
movsl
sub
jg
dec
push
pop
dec
out
mov
rol
movsb
pop
jge
push
lret
jg
inc
pop
sbb
mov
dec
jmp
jnp
lret
mov
mov
int3
arpl
icebp
xchg
aas
stc
pop
jnp
mov
stc
add
iret
les
stos
lahf
out
inc
mov
sbb
push
les
stos
fs
out
jecxz
sbb
and
cli
addr16
stc
mov
pop
cmp
les
pushf
jle
jl
popa
mov
gs
popf
loopne
add
sbb
or
add
cmp
cltd
stos
shr
cmp
mov
stc
pop
movsl
loop
dec
inc
push
fbld
and
or
sbb
in
mov
loopne
iret
sbb
imul
xor
repnz
addl
ret
jle
popa
dec
cmpsl
and
test
mov
jb
mov
xchg
pop
in
outsl
stos
push
mov
ds
xor
aas
movsl
cmp
add
inc
das
in
lahf
sub
inc
cmp
adc
jno
cmpsb
and
movsl
ljmp
add
cltd
mov
mov
loope
gs
sbb
stos
mov
lahf
jne
push
jo
sbb
ret
shrl
sbb
adc
aas
fsubs
push
call
dec
xor
shlb
daa
cmp
mov
gs
rcrb
jp
lahf
mov
pop
hlt
xchg
sahf
add
jmp
pop
xlat
ljmp
adc
gs
xchg
jl
pop
dec
xchg
bnd
lock
inc
push
jle
test
fidivrs
and
std
cwtl
sub
lods
in
test
mov
lods
popf
lea
lods
or
add
xor
xchg
outsb
dec
xor
icebp
jl
cmp
mov
jl
out
push
pushf
daa
sbb
mov
lcall
movsl
jbe
cmp
push
outsl
push
lock
pop
movl
mov
loope,pn
shll
in
jg
mov
sub
aam
test
push
addr16
jg
cmp
test
rcl
push
jb
jnp
xor
or
stos
cmpsl
push
cmpsl
add
xchg
add
jmp
subl
js
repnz
pop
out
mov
std
mov
cmpsl
cmp
daa
dec
dec
jb
xor
ret
ret
sub
mov
jecxz
xchg
enter
mov
stos
sub
lds
push
jle
xchg
movsl
mov
cmp
int3
sti
mov
sti
xor
jg
fldt
das
or
movsb
or
dec
push
loop
xchg
mov
jg
xchg
sbb
push
fisubs
sub
je
pusha
sbb
test
mov
push
rol
mov
lret
mov
fdivrl
stos
sbb
stos
fcomp
jne
inc
add
mov
rorl
fcomip
inc
xlat
stc
xchg
dec
jno
push
stos
js
sub
jge
scas
jg
push
pop
leave
cmp
and
cli
rcrl
inc
shll
adc
mov
aaa
mov
leave
mov
or
push
mov
push
push
sahf
push
add
pop
sub
jmp
jb
cmp
jb
mov
cmp
and
cld
push
push
cmpsb
aad
loopne
fcmovu
push
jb
mov
xlat
aam
and
das
cmc
push
scas
lock
xor
in
jo
adc
mov
jge
lcall
dec
xchg
xor
addr16
jge
js
pop
out
mov
andl
popa
mov
jg
popa
add
pusha
es
in
and
cwtl
lret
mov
xchg
sti
loopne
ss
and
ret
std
mov
xchg
push
shr
add
imul
aaa
test
xor
lcall
cwtl
jecxz
popf
std
out
leave
mov
nop
sbb
call
jbe
call
into
mov
or
push
aaa
js
imul
xchg
aad
dec
sub
jno
ljmp
out
jns
jno
fisttps
das
shlb
das
xorl
ja
test
aam
rorl
int
fistl
or
jmp
mulb
sti
stos
or
aad
push
and
out
jne
iret
or
aad
stos
sbb
xchg
adc
imulb
fs
ret
sbbl
add
jl
xchg
mov
inc
push
inc
stos
scas
xor
inc
aad
popa
mov
lret
mov
inc
pop
cmp
hlt
xchg
push
pop
pushl
mov
dec
in
mov
push
sarb
repz
mov
xchg
cmp
data16
jge
rclb
or
push
imul
mov
shrl
add
adc
xor
xlat
xor
add
ljmp
mov
std
xor
rorl
repz
push
push
xchg
jmp
test
insb
cltd
movsb
mov
jo
addr16
fs
cmpsl
enter
dec
dec
inc
sar
sub
sbb
inc
sub
scas
push
jg
dec
xchg
testl
lock
enter
into
adc
add
out
pop
sbb
lret
push
dec
jl
jne
imul
push
mov
pop
out
inc
movsl
jae
pushf
adcb
out
dec
xor
dec
xor
idivb
push
imul
push
jg
inc
outsb
fnstsw
or
rcll
out
add
mov
fcompp
pop
cli
push
jae
sti
xlat
rcrb
popa
xchg
dec
sub
pop
add
xor
mov
sub
mov
js
sti
or
stc
xor
icebp
push
sub
dec
insb
add
imul
xor
and
add
dec
sbb
push
dec
loopne
arpl
nop
xchg
gs
push
ss
sub
sbb
pop
sub
or
push
call
hlt
mov
xlat
jl
scas
pusha
out
xchg
es
mov
shrb
loopne
mov
sbb
jmp
inc
imull
pop
fimuls
enter
in
test
pop
lret
jns
cmpsl
mov
inc
popf
popf
repz
nop
xchg
std
shrb
decb
jle
pop
sub
and
mov
xchg
sbb
ss
sahf
pop
lret
movsl
mov
rcll
lahf
cmpsl
mov
nop
rcll
push
dec
sub
mov
push
in
cmp
and
or
cmp
in
and
lret
sti
pop
xchg
jo
sub
stos
pop
insb
sub
mov
pop
inc
sub
aad
popa
adc
xchg
mov
out
sbb
push
jns
sbbb
sahf
mov
sbb
mov
mov
loope
pop
fsubr
push
adc
mov
inc
imul
mov
fs
adc
jecxz
sub
imul
adc
mov
cmp
mov
add
jnp
dec
add
lock
addr16
pop
lea
cmp
xchg
fwait
cmp
mov
imul
gs
fists
cmp
and
aam
xor
ret
sub
jl,pt
xchg
divb
call
cmpsb
shll
push
vphadddq
mov
pushf
jnp
cs
ljmp
cld
jnp
dec
push
aaa
adc
and
adc
adc
fs
stos
jl
mov
scas
inc
jge
cmpb
cltd
stos
iret
scas
sahf
inc
mov
mov
jg
inc
add
jb
or
cmp
jb
mov
mov
fcmovnu
push
cli
pop
sbb
in
insb
in
or
cmp
inc
sbb
mov
scas
clc
aaa
adc
mov
bound
in
lret
or
dec
subb
push
mov
lret
mov
mov
xor
loop
xchg
rcrb
addl
jno
jg
or
pop
jnp
dec
stos
test
pop
fistl
sbb
cmp
aaa
ds
mov
mov
sub
cld
test
sarl
cmp
nop
sub
lods
jp
lahf
inc
add
cmpsb
push
bound
xor
es
cmpsb
ss
popf
cmpsl
pusha
in
mov
mov
icebp
imul
cltd
aam
daa
add
imul
xor
sti
in
dec
ljmp
mov
xor
mov
and
jge
add
fistl
xchg
ret
pop
inc
fs
repz
inc
push
repnz
stos
data16
iret
insb
inc
movsb
sahf
pushf
out
jle
int3
lods
lahf
pop
inc
fsub
lahf
pop
sbb
mov
add
movsl
sub
test
out
and
mov
rolb
pop
inc
mov
sbb
aas
dec
push
push
test
call
and
inc
pop
xchg
jbe
adc
popa
xor
gs
ds
sar
adc
ret
adc
jecxz
sbb
fmuls
cmp
inc
call
insb
sub
ret
jmp
imul
add
adc
mov
sahf
mov
add
jno
ret
ffree
fs
jb
repnz
push
inc
iret
faddp
jmp
iret
and
jnp
add
lahf
dec
jp
dec
fmul
pop
adc
fwait
and
jmp
xchg
hlt
inc
mov
jecxz
repz
sub
xor
adc
cmp
dec
fiaddl
aam
or
pop
pop
fdivs
imull
and
aaa
xchg
mov
loope
aas
loope
and
inc
jbe
cmp
jbe
lahf
popa
outsb
pop
cs
lds
bound
scas
int3
xchg
clc
inc
in
cmp
fdivrs
jne
aaa
sub
negb
out
inc
push
insl
movsl
fdivp
mov
jle
mov
das
push
inc
and
adcl
inc
sub
inc
loope
or
push
jmp
popf
inc
inc
fld
int
mov
xchg
not
aaa
mov
mov
push
imul
lods
je
dec
mov
ss
pop
in
push
push
inc
mov
aad
cltd
icebp
jg
mov
addb
in
mov
out
xchg
int3
push
sub
call
cmpsl
dec
cmp
pop
xlat
pop
stos
cmp
or
jle
or
push
mov
int
or
inc
xorl
jle
xchg
and
inc
sub
pop
das
nop
popa
lret
repnz
add
and
dec
pop
iret
fcmovb
les
sub
fsubl
fistpll
sbb
xor
stos
dec
ss
fidivs
and
aaa
insb
repz
das
adc
mov
and
bound
jns
fldt
adc
dec
mov
imul
or
aam
dec
sub
inc
xor
pushf
mov
jb
shlb
imulb
inc
jne
xlat
lock
out
jmp
adc
xor
xchg
mov
rcrb
push
sbb
jecxz
cmc
lock
in
mov
std
inc
icebp
in
push
pextrw
test
or
mov
or
or
lods
or
test
sbb
int
insl
xchg
xor
mov
pushf
scas
inc
stc
cmp
and
pop
push
mov
adc
jg
add
pop
jecxz
in
test
aaa
inc
sbb
sub
mov
mov
pop
into
sbb
pop
loop
std
sbb
ja
or
push
data16
add
ds
lahf
js
shll
mov
stos
shlb
xor
nop
sub
cld
orb
sub
push
sti
test
lret
repz
mov
cmp
mov
sbb
add
addr16
or
or
sbb
cwtl
int3
xchg
test
push
imul
mov
movsl
scas
test
mov
push
jge
inc
mov
negl
mov
repnz
inc
xchg
imul
outsl
inc
pop
sbb
ret
aas
jo
cmp
mov
cli
cmp
xchg
sub
fmul
mov
out
orb
push
and
xor
ret
pop
push
pop
lahf
jp
ret
cmp
cmp
xchg
jbe
mov
add
xchg
and
lds
inc
add
mov
dec
sarb
std
and
out
xor
sub
add
lret
or
aaa
aam
fwait
sarl
push
lret
gs
mov
testl
inc
ret
pop
mov
mov
jge
xor
imul
pop
in
cld
out
out
xor
cmp
jns
push
pop
sub
lock
in
fldenv
loop
inc
cmp
mov
push
out
xchg
loop
je
push
mov
test
or
sbb
dec
push
push
sbb
jne
push
jmp
ret
push
xlat
mov
inc
jg
push
add
adc
mov
adc
testb
jnp
dec
inc
iret
daa
mov
scas
rorl
test
add
cli
pop
mov
insb
inc
pop
fmull
mov
xor
adc
cs
jo
sub
jmp
jmp
and
inc
inc
movsb
and
jle
sbb
cmc
rclb
xor
nop
sub
cmpsb
in
push
out
push
sbb
jmp
jo
lcall
push
pushf
sbb
jl
mov
jmp
rcl
dec
add
out
cmp
mov
or
pushf
in
mov
std
iret
inc
loop
adc
jmp
or
into
mov
sti
xchg
mov
ss
loop
ja
inc
rorb
outsb
fwait
xchg
or
enter
xchg
mov
imul
fisttpl
rclb
inc
mov
or
test
inc
loop
mov
iret
pop
cmp
jp
cmc
push
xor
push
loopne
xchg
xchg
push
jmp
pop
addr16
mov
inc
push
cmp
fsubp
out
jge
adc
add
ja
dec
insb
fisttpl
sbb
cmp
cmp
xor
rorl
es
xor
insb
ret
out
or
add
jb
adc
lahf
xchg
pop
adcl
push
fwait
cmc
mov
pushf
jno
xchg
imul
lret
lods
adc
call
test
jb
sub
fwait
mov
xorl
push
cmp
ss
ja
arpl
lret
inc
insb
sub
aas
into
shrb
pushf
jne
sbb
popa
or
mov
dec
mov
lcall
arpl
push
aaa
ret
rcrb
loope
shrb
mov
outsl
popa
lret
jg
mov
popf
dec
pop
mov
js
jns
sbb
iret
adc
clc
lret
pop
mov
popa
outsb
adc
ja
cmp
lea
paddusw
fsubrl
es
and
movsb
in
inc
loope
dec
push
pusha
adc
dec
scas
outsb
icebp
push
sub
fucom
adc
mov
std
fdivrl
pop
and
xchg
adc
leave
sbb
inc
cmpsb
arpl
out
sbb
loopne
mov
cwtl
cmp
aad
mov
xchg
fwait
jne
dec
jne
aam
int3
dec
or
popf
test
inc
inc
cmp
enter
cs
pop
adc
imul
clc
pushf
call
test
xchg
dec
sub
hlt
mov
push
dec
mov
cmp
aaa
push
cmpsb
test
jg
roll
stos
insl
add
push
dec
mov
push
fsin
or
dec
pop
lock
aaa
mov
repnz
clc
les
lock
rcrb
and
mov
push
ret
dec
pop
fimull
mov
arpl
or
add
stos
pop
data16
and
or
adc
jns
gs
mov
rclb
cmpsb
rorb
out
nop
lds
pop
pop
dec
ficomps
mov
push
mov
insl
stos
ret
orl
add
mov
shll
daa
dec
sub
imul
fucomi
mov
out
inc
adcl
das
popf
pop
xor
xchg
pop
dec
jbe
aad
das
xor
cmp
iret
pusha
mov
dec
xor
lret
jae
sbb
sbbl
cmpsb
lahf
cmc
iret
mov
inc
int3
lret
dec
xor
lahf
es
cmc
push
mov
sub
mov
xchg
fs
or
inc
push
lcall
out
mov
mov
add
mov
movsl
xchg
xchg
mov
inc
sub
fcoml
rorl
jne
fstl
neg
xlat
push
addr16
ja
xorb
popf
cmp
inc
mov
movsl
mov
cmpsl
jle
clc
jo
lds
mov
cmp
scas
xchg
cmpsb
mov
jecxz
add
jnp
sub
push
xor
data16
mov
ja
lret
mov
fisubrs
in
setns
stc
in
mov
fists
outsb
mov
add
dec
pop
jge
leave
xchg
cmp
inc
fldl2t
pop
lret
cld
push
xchg
adcl
jb
aas
xor
mov
sbb
scas
mov
or
stos
xchg
cs
shr
lods
rclb
push
cmpl
lret
mov
ljmp
dec
xor
enter
cmp
and
xlat
fbstp
ret
test
mov
jl
fs
mov
sub
sbb
xlat
icebp
cmpsl
mov
inc
int
cmp
dec
shrb
or
std
aam
jge
jns
ljmp
imulb
pop
js
inc
lahf
mul
add
cs
stos
pushf
and
aad
cwtl
pop
push
bnd
jge
push
popa
shrb
mov
inc
cmp
cld
adc
loope
sbb
ljmp
cmp
sub
jne
es
ja
xorps
mov
push
dec
subl
fisubs
cli
and
mov
mov
inc
jmp
enter
faddl
sbb
outsb
and
xor
jno
cmp
shlb
fcomp
and
std
lods
iret
inc
andb
cli
aam
cli
xchg
mov
inc
push
adc
mov
adc
mov
jg
and
int3
cmpsb
fwait
je
fisubrs
jl
mov
jp
dec
jecxz
fldenvs
push
mov
inc
je
mov
xor
mov
iret
clc
roll
loope
aam
js
cwtl
nop
cmpsl
xlat
aam
popa
cmp
scas
out
lahf
js
mov
pusha
imulb
jne
push
bound
push
outsb
pop
mov
iret
pop
mov
mov
lock
push
xor
scas
dec
mov
subl
cmpsb
add
mov
pop
lea
or
mov
mov
loop
mov
faddl
loopne
adc
hlt
pop
stos
dec
loop
ljmp
inc
pop
push
negl
push
ficompl
imull
jmp
js
inc
fmulp
pop
pop
jge
and
and
aaa
pop
and
in
adc
jne
arpl
pop
cmc
roll
lods
into
mov
xor
cmc
aaa
out
fstpt
dec
xchg
lahf
mov
or
dec
cmp
rol
sahf
gs
jmp
js
dec
or
aas
rclb
jle
repz
gs
sbb
scas
xchg
dec
push
dec
into
clc
dec
cli
jl
das
jl
add
aam
or
addb
mov
push
and
push
outsl
dec
cmp
insb
in
pop
cmpsb
js
out
add
jb
inc
les
xor
iret
mov
jbe
dec
hlt
test
adc
adc
sub
sar
aad
imul
add
mov
inc
pop
xchg
fiaddl
movsl
ret
cmp
pop
stos
jg
cltd
outsb
out
fnstsw
shll
je
notb
dec
pop
data16
mov
out
mov
xor
xor
leave
or
sub
mov
push
test
jg
sub
xor
call
xor
lods
lahf
out
mov
jle
fnstenv
clc
lock
clc
fwait
hlt
fwait
cmp
mov
leave
les
pop
cmpb
rol
fs
int3
xchg
dec
dec
subb
std
fdivs
hlt
fiaddl
icebp
test
ljmp
dec
faddl
xor
cmp
out
test
jno
jmp
adc
pop
dec
gs
and
enter
and
add
jle
push
push
fldenv
inc
fsubs
cld
lock
mov
and
xor
inc
jne
aad
and
clc
jno
dec
cmpsl
lea
addb
bound
cmc
xchg
pop
sub
jns
push
xchg
xchg
sbb
js
xor
in
jbe
gs
or
pusha
jl
mov
xlat
xlat
push
sub
test
or
lock
mov
jmp
mov
mov
adc
pop
rcl
sub
add
mov
rcrl
in
shlb
and
scas
fs
cwtl
xor
dec
cmp
or
xchg
inc
fwait
and
test
das
les
in
xchg
or
jg
push
mov
sar
push
addb
mov
xor
or
movsb
fistl
adc
into
xor
je
imul
lahf
or
movsb
inc
scas
xlat
fldl
das
cmpsb
cld
adc
inc
movsb
sub
sub
out
pop
mov
gs
jno
push
lock
rol
xchg
pop
sub
out
sbb
pop
adc
aad
bound
and
xor
and
push
or
push
rorb
arpl
popa
xchg
jmp
mov
jge
cld
pushl
ja
jp
mov
call
movsl
jbe
test
data16
dec
lea
bnd
leave
in
popa
aad
push
pop
or
jno
leave
dec
jae
jmp
aaa
ljmp
sahf
cmp
fwait
inc
cmpsl
xchg
or
jp
jb
out
stos
cwtl
sarb
dec
daa
mov
jmp
inc
push
stos
sub
sbb
into
pop
sub
or
jge
add
pop
dec
rcrl
xor
lods
arpl
jns
cmc
adc
xchg
inc
dec
pop
cmpsb
cltd
push
inc
xchg
add
test
enter
push
adc
push
push
out
sbb
mov
dec
std
fldenv
jg
lock
adc
inc
rclb
andl
mov
pop
mov
lods
add
rcrb
xchg
adc
push
inc
mov
mov
pop
inc
rolb
cli
stos
in
leave
call
sub
inc
cli
cmp
cmp
ja
aas
adc
pop
jnp
std
inc
lret
or
xchg
push
in
push
jnp
in
out
out
aaa
aad
movsl
pop
jg
inc
add
aad
loopne
jmp
dec
xor
xchg
ljmp
xchg
jp
xchg
and
xchg
cmp
shlb
add
mov
aas
or
dec
sub
push
and
dec
int
mov
sbb
push
iret
inc
dec
adc
adc
lahf
xor
pusha
adc
imul
scas
push
adc
out
adc
fwait
inc
xchg
jbe
rorl
out
shr
pop
leave
adc
aas
and
shr
push
adc
les
mov
in
shlb
mov
addr16
push
repz
idiv
jb
loopne
std
dec
insb
call
cmpl
pusha
or
or
mov
popa
enter
push
dec
pusha
cli
add
mov
mov
fcomps
movsb
xchg
out
std
pop
push
aam
pop
inc
sbb
push
je
push
rclb
shll
cmc
jmp
fstp
mov
sbb
ljmp
mov
adc
lret
cmp
cld
scas
sub
std
movsb
mov
lods
push
pop
sti
xchg
mov
or
xchg
lret
cli
outsb
sub
and
push
and
cmp
hlt
pop
and
in
fnsave
mov
aam
adc
mov
mov
sahf
adc
xchg
mov
lahf
and
repnz
or
pop
push
pushf
jnp
push
inc
inc
xchg
jl
iret
je
cmp
adc
orl
das
xchg
dec
ror
rcr
pop
test
mov
cmp
out
pop
jp
mov
cmc
sahf
dec
cmp
movsl
push
rol
push
aas
pop
sbb
cmp
push
loope
enter
pop
add
mov
stos
int3
and
notb
test
sbb
xchg
sbb
cmpsb
mulb
fsubr
cmp
xor
fidivs
jge
lods
cmp
cld
push
bound
mov
mov
stos
call
cmc
ja
pop
jbe
js,pn
aad
sub
pop
int3
xorb
ds
adc
pop
sub
out
addr16
sub
testl
xlat
mov
in
xor
pop
fisttps
ds
pop
mov
jns
add
aaa
sbbb
clc
xchg
mov
cmp
fbstp
cs
or
sub
push
fwait
cmpsb
jns
sbbb
jbe
pop
es
adc
cmp
sarl
insl
ficoml
sbb
xorb
ljmp
divb
inc
sbb
push
repnz
dec
sbbl
out
pushf
add
shl
xor
sbb
rolb
inc
jl
pop
mov
inc
mov
adc
mov
mov
or
testl
adc
xchg
mov
popf
das
jp
xor
shll
push
mov
add
cmp
fisubrl
lods
xor
cmp
mov
insl
jmp
mov
adc
clc
repnz
push
cmc
xchg
fbld
adcb
jle
fnsave
pop
pop
or
filds
or
or
xchg
xor
je
sub
pop
scas
lods
cmpsl
fisttpl
cmpsb
in
mov
das
mov
imul
mov
cs
popa
mov
mov
mov
mov
jcxz
mov
inc
pop
sub
add
push
mov
jbe
testl
sub
pop
sub
mov
lea
push
xchg
pop
outsb
and
and
xlat
cmp
jl
jns
push
loopne
outsb
into
inc
in
xor
ja
scas
cmp
mov
scas
mov
loopne
fisubrs
pop
adcb
cmp
faddp
xor
push
and
mov
inc
xchg
inc
sub
mov
xchg
or
fwait
push
sub
movhps
jp
lods
and
sub
test
stos
adc
ja
mov
mov
pop
cmpsb
sarb
shlb
fidivs
jne
adcb
add
or
cmp
inc
adc
rcrb
sar
addl
and
mov
mov
fistl
ds
mov
mov
fldenv
enter
or
adc
xor
sbb
addr16
or
inc
pop
add
dec
or
push
inc
stos
test
call
mov
add
or
add
cmpsb
dec
push
in
add
mov
push
int3
adc
jae
fimuls
push
pop
in
push
loope
mov
pop
sbb
mov
or
pop
xchg
sub
into
push
subl
scas
aaa
sub
push
pop
fwait
or
jb
mov
scas
mov
mov
out
insb
mov
pop
push
or
xchg
xlat
or
lcall
ljmp
mov
aas
pop
inc
aam
in
mov
cmc
fiaddl
add
sahf
sbb
add
sbb
jb
sbb
adc
xor
and
pop
push
test
ljmp
sbb
mov
pusha
pop
mov
mov
jne
das
loope
clc
dec
sbb
ds
je
inc
dec
in
clc
mov
out
loop
mov
cs
xor
and
mov
pop
sarl
and
or
hlt
push
hlt
jns
shrl
sub
rclb
sub
fwait
push
test
mov
repz
data16
cld
xchg
rol
mov
lret
or
movsb
xchg
push
adc
stc
stos
daa
push
cmp
mov
or
mov
jnp
xor
jbe
jl
pop
fcoml
lods
std
repnz
jo
pop
test
pop
in
xchg
xchg
call
mov
xor
test
data16
or
xor
idiv
lret
add
sbb
mov
adc
inc
xor
mov
sahf
orl
xchg
scas
adc
jns
and
in
int3
in
mov
ds
mov
jb
sub
test
xchg
or
orb
fisubl
stc
cmpb
mov
jecxz
stc
or
iret
shrb
adc
sbb
cmp
stos
mov
cli
mov
sub
jecxz
and
lcall
cmp
cmpsl
and
aad
sub
inc
ljmp
data16
dec
imul
inc
sub
or
sub
aad
in
inc
fidivl
mov
aam
fstps
push
test
pop
lcall
sbb
cmpsb
out
scas
movsl
ds
mov
cmp
mov
jmp
xor
dec
or
pop
js
or
push
sbb
outsb
iret
jp
int
sbb
xor
sub
mov
enter
lods
scas
pop
dec
adc
lds
clc
dec
fsubrl
jne
pop
mov
pushf
dec
sti
int
mov
fwait
mov
sub
fidivs
sbb
or
fs
jnp
push
sarl
cli
push
fidivl
rcrb
fwait
mov
arpl
xor
out
push
dec
add
pop
pop
rcrb
xchg
or
pushf
push
inc
jns
mov
inc
sub
sub
cld
loope
push
sub
dec
in
sets
arpl
lods
or
pushl
xchg
pushf
out
cmp
cmp
pop
and
pmullw
dec
rcrl
shld
mov
xor
sbb
arpl
push
push
movsb
pop
repz
mov
sub
add
xorb
jo
sub
pushf
lds
and
fwait
loop
lods
scas
sahf
out
aam
stc
out
or
or
mov
adc
fsubrl
lods
mov
push
mov
push
sbb
adc
add
scas
cmp
push
in
mov
test
jae
adc
sbb
into
into
pop
jbe
cli
js
cmp
fdivs
repnz
pushw
gs
mov
inc
test
leave
sti
sbb
jno
test
push
in
or
scas
mov
pop
lahf
pop
mov
cwtl
fwait
xor
ds
insb
xchg
xchg
jl
cld
inc
and
les
pop
jnp
cmp
mov
inc
outsl
lret
loope
clc
cmpl
or
in
mov
cwtl
in
iret
mov
cmpsb
mov
dec
divl
or
addb
pop
and
insb
aas
scas
ficoml
out
fs
or
cmp
xor
mov
call
push
fildl
movsb
ja
push
mov
jmp
imul
int3
xor
mov
xchg
sbbb
stos
fadd
inc
mov
push
es
dec
jb
add
cmpsb
sub
aaa
mov
sbb
xor
inc
pop
daa
fcompl
lock
cld
sahf
or
cld
imul
mov
mov
or
stc
out
dec
and
in
mov
adc
bound
push
add
outsb
pop
fst
dec
scas
insb
mov
loopne
push
aas
pop
nop
adc
js
cmpsb
lret
push
addr16
xchg
sbb
push
fldt
call
sti
inc
mov
andl
mov
xorl
dec
pop
push
call
aaa
add
das
je
sti
push
dec
lret
sti
cmp
cmpsb
ss
mov
outsl
jecxz
ret
cld
inc
aas
adc
das
or
stos
insb
inc
jns
stos
testb
gs
push
popa
xlat
jno
xor
xor
dec
xchg
jno
cli
int3
fistpll
test
adc
adcb
mov
test
mov
test
push
je
dec
lret
jnp
push
jae
repnz
jbe
inc
inc
or
in
lcall
test
divb
adc
in
jle
call
in
xlat
adc
xchg
notb
adc
cli
xchg
push
stos
pop
outsl
jns
out
and
sti
lcall
js
pop
adc
adc
jne
add
ror
and
lea
sahf
sub
pop
push
insl
fdivrs
aad
jne
adc
jb
enter
and
add
xchg
int
mov
jo
inc
xor
dec
inc
ja
push
push
dec
popa
fidivs
aam
xchg
dec
and
mov
out
fs
mov
faddp
mov
cmp
data16
pop
cmpsl
dec
or
xchg
add
test
in
outsl
jecxz
lods
xor
xchg
outsb
pop
aaa
stos
icebp
arpl
aam
xor
push
sub
imulb
mov
pushf
jnp
imul
into
add
pop
jge
adc
mov
and
or
mov
sbb
into
push
cmp
adc
push
mov
jl
jg
or
mov
and
int
xor
jnp
add
in
scas
popa
in
cs
sbb
lock
test
mov
movsb
arpl
test
dec
xlat
in
pop
rep
repz
or
call
cltd
pop
jbe
pop
loop
cmp
sti
pop
ja
adc
mov
pusha
mov
jmp
notb
sbb
out
pusha
cmc
ret
pushf
mov
adc
movsl
mov
xchg
outsl
in
push
bound
adc
shrl
insl
dec
scas
pop
xchg
mov
aad
inc
push
pusha
mov
in
jge
sbb
popa
jnp
or
mov
insl
push
and
mov
adc
or
fs
cmp
adc
pushw
inc
test
dec
sbb
xor
bound
xchg
xchg
cmp
push
arpl
pop
clc
outsb
arpl
xchg
arpl
ja
cmp
sub
cs
sahf
jmp
lret
xchg
add
ret
push
sub
and
xchg
push
add
inc
and
xchg
out
push
sub
mov
xchg
inc
rcl
scas
mov
imul
mov
rcrl
rol
pop
jnp
lret
repnz
mov
add
inc
xor
lock
cmp
push
jns
push
jge
int
dec
imul
mov
xor
movsb
push
dec
pusha
inc
cmp
xchg
ljmp
jp
lds
loopne
cwtl
scas
aaa
je
push
adc
lods
xchg
icebp
adc
adc
push
and
aas
enter
mov
sub
fistps
pop
push
add
aad
xchg
stc
jecxz
dec
dec
stos
jbe
mov
ja
nop
xchg
in
lret
sbb
fsubrs
mov
pop
rolb
dec
sbb
pop
dec
mov
inc
es
add
lea
xchg
mov
xchg
jp
push
mov
mov
nop
mov
xor
rcr
insl
ret
aaa
pop
xor
add
adc
mov
xchg
cmp
mov
popf
adc
addr16
cmc
cmp
xor
mov
adc
lret
add
and
or
fs
adc
jecxz
lods
xchg
insl
mull
mov
sbb
cmp
sbb
lcall
sbb
push
jmp
arpl
jl
leave
jg
sbb
incb
lds
testl
push
adc
mov
jbe
popf
and
mov
and
xchg
jecxz
into
sbb
and
push
test
push
cmp
or
jo
neg
loop
mov
jmp
pushf
xchg
scas
idivl
popa
sub
loop
mov
sarl
jle
cmp
jmp
in
push
inc
add
dec
push
lock
inc
dec
pusha
out
lahf
js
mov
test
inc
xchg
push
xchg
daa
int3
incb
and
pop
iret
dec
ljmp
mov
pop
sub
fdivs
insl
test
inc
ds
xlat
lahf
xchg
xor
xor
fsubrs
add
push
out
cwtl
mov
jne
fsubl
test
add
shlb
mov
jle
adc
adc
enter
stos
fstpl
sti
into
jno
notl
jno
inc
repnz
mov
add
scas
loope
ror
jne
cmp
nop
jmp
shll
aad
xchg
mov
lret
sub
sbb
addr16
or
iret
mov
mov
pop
add
mov
lret
sbb
jbe
int
pop
mov
sbb
inc
cltd
out
adc
cs
xor
lock
inc
push
filds
test
push
into
pop
adc
mov
xor
push
hlt
movsb
into
addr16
mov
and
outsl
and
jge
cmp
jp
mov
sti
test
test
push
or
pop
cmp
push
push
out
jmp
stos
sbb
int
test
addr16
or
xor
insl
shll
push
test
xlat
test
in
add
fstpt
cwtl
mov
sbb
dec
daa
loope
adc
mov
dec
fimuls
push
inc
and
add
lahf
dec
dec
decl
cmp
mov
pop
and
mov
pop
jnp
inc
xor
cmp
sbb
cmp
xor
jg
iret
mov
pushf
pop
mov
les
dec
push
lahf
lret
rol
in
jp
jge
fs
xchg
sarl
pop
sar
or
and
or
cmp
push
ficoms
lock
or
push
lods
loop
repnz
jns
dec
icebp
jle
ja
aas
lock
cld
cli
test
mov
push
add
fstl
push
cmp
push
pop
dec
dec
xlat
movsb
pop
std
rorl
pop
es
cwtl
fistl
pop
cmpsl
cmp
inc
movsb
popa
pop
lods
xorl
ffreep
nop
lods
and
or
into
std
mov
fs
aaa
mov
push
mov
dec
in
or
adc
addr16
dec
out
clc
in
jg
popf
push
lds
outsb
jae
adcl
sub
das
je
jecxz
enter
cld
imul
cmpsb
es
xor
in
jnp
pop
ja
xor
xchg
arpl
xor
pop
sbbb
mov
sbb
negb
cmc
hlt
jle
shrb
sbb
int3
int3
xchg
sar
mov
lods
enter
lcall
inc
sbb
jge
xchg
xlat
add
add
pop
imul
xchg
or
nop
frstor
add
inc
jo
outsb
cmc
jnp
dec
in
xor
insl
fimull
std
xor
xchg
pop
and
jo
mov
out
lret
push
mov
mov
dec
lock
les
mov
push
mov
test
jb
push
shr
in
xlat
xor
jp
xorb
std
clc
and
loope
loopne
xchg
mov
test
data16
push
ljmp
sbb
ja
add
mov
imul
mov
or
lock
cltd
in
mov
ret
cwtd
mov
add
cmp
js
aas
push
add
fldl
movsb
popa
orb
daa
xchg
jns
insl
mov
push
ret
fisubrl
xchg
idivw
lcall
out
xor
mov
stos
push
cltd
aam
iret
dec
stc
add
dec
mov
mov
sub
pushf
inc
pop
and
test
sti
test
xchg
scas
jmp
fildll
lcall
sbb
adc
sub
xchg
pop
loop
push
repnz
mov
cmp
cmpsl
fcmovu
lcall
sbbb
mov
nop
into
pop
loop
fimull
popf
mov
add
insb
inc
lds
jl
sbb
shr
jno
xchg
pop
test
pop
aaa
pop
xchg
clc
leave
mov
dec
lods
sub
mov
in
jle
in
icebp
ds
cmp
cmpb
fs
add
pop
pop
jg
jbe
icebp
sub
xchg
push
push
push
add
sbb
xor
shll
pop
xor
push
popa
aas
aad
lods
outsl
cmp
les
movl
stos
negb
inc
les
xor
scas
adc
sub
scas
scas
xor
dec
clc
test
inc
xlat
frstor
mov
inc
lods
ret
jbe
cmpsl
orl
leave
subl
insl
jo
insb
inc
loope
insl
std
test
lea
xchg
adc
or
mulb
mov
lret
inc
inc
add
daa
decb
js
rolb
ds
add
loopne
or
lahf
in
shrb
pop
frstor
pop
cmc
dec
dec
push
imul
lods
call
aam
shll
cmp
jnp
jle
adc
movsl
jmp
loopne
pusha
sbb
mov
pop
sub
xor
sub
xor
xlat
adc
ret
lcall
repz
pop
sbb
inc
mov
mov
or
pop
add
sub
jns
mov
cmp
push
es
dec
cmp
and
test
mov
inc
sub
cmp
pop
xchg
call
int3
sbb
rclb
push
icebp
or
and
add
dec
or
in
and
pop
popa
push
sbb
out
xor
ds
outsb
push
cmp
shll
das
in
inc
push
loopne,pn
in
and
inc
xor
outsl
je
fwait
adc
cmpsl
push
test
aam
xor
cltd
daa
mov
mov
inc
out
adc
jb,pn
jbe
mov
clc
test
clc
repz
xchg
mov
add
pop
adc
xchg
test
inc
stos
push
pop
aas
test
jmp
decl
in
or
into
sti
xor
inc
clc
and
sub
imul
adc
push
shll
out
and
adc
pop
ljmp
and
fmuls
scas
sbb
push
lods
mov
cld
inc
jmp
aad
or
enter
ja
jo
jb
or
pop
push
dec
mov
mov
push
scas
pop
icebp
xchg
cmpsl
adc
inc
dec
xchg
xlat
cmp
stc
pop
jmp
adc
mov
push
jl
add
jne
nop
fs
jo
pop
xor
jns
jne
and
les
test
movl
sbb
adc
push
lret
scas
mov
popa
push
or
out
int3
and
pop
jb
cmp
addr16
jne
outsb
cmp
and
jg
std
adc
xor
xchg
mov
jmp
pop
or
jle
xchg
push
jp
inc
fdivrl
mov
mov
push
fcompl
lret
sub
push
add
data16
call
mov
lret
outsl
push
or
outsl
or
cli
jl
and
or
repnz
jnp
add
mov
inc
loope
mov
out
cmp
xor
xor
mov
jnp
ret
push
lea
setae
sbb
push
shl
imul
outsb
or
lret
xchg
andl
arpl
mov
outsl
andl
xchg
dec
adc
sbb
das
les
jns
xor
shrb
lods
sub
pop
pushf
movsl
or
dec
jle
xchg
stos
loope
jb
inc
dec
add
push
cmp
js
bound
imul
jbe
pop
std
or
push
int3
inc
data16
mov
out
push
sbb
loop
push
int
dec
rol
xchg
fs
xchg
iret
mov
orl
div
in
dec
sarl
imul
mov
cmc
fiadds
jbe
fistpl
pusha
jmp
insl
pop
cmp
xchg
fbld
add
pop
mov
sub
aas
xchg
sub
neg
dec
js
out
leave
or
push
jge
dec
xchg
fisubs
out
sarb
mov
dec
lcall
and
cmp
mov
arpl
es
dec
mov
lea
jb
cli
push
fidivs
dec
adc
or
lahf
imul
loope
stos
les
or
js
dec
inc
inc
jne
int
sbb
aaa
sbbl
pop
sbb
add
push
insb
or
mov
dec
add
out
daa
xchg
mov
in
dec
sub
push
fsincos
mov
je
mov
jno
jo
mov
fnsave
lods
pusha
loop
in
jle
jb
mov
popf
test
call
mov
pusha
jnp
jmp
das
mov
lock
mov
fsubrs
pop
fstl
sbb
enter
pop
xchg
icebp
ja
loop
mov
xchg
aam
and
std
repnz
aam
sub
out
mov
adc
jg
dec
cs
push
cmp
test
mov
scas
sub
add
subl
pop
dec
inc
cwtl
in
add
fnstcw
pop
mov
out
or
jl
add
out
inc
add
xor
je
pop
push
addr16
in
cld
or
jge
loopne
push
jmp
xor
es
sahf
mov
ss
int3
mov
or
cmp
loope
pop
mov
xchg
sti
jnp
add
or
pop
jne
cmp
jl
lcall
adc
pop
in
jecxz
xchg
jb
pop
add
push
in
neg
mov
divl
or
in
cmc
xor
jmp
mov
xor
and
push
fnsave
add
mov
cmp
addl
push
outsl
push
or
int3
in
mov
cmp
in
lods
jg
rorl
xlat
imul
mov
sub
push
dec
jne
and
dec
into
fwait
adc
xchg
cli
cmp
hlt
mov
add
test
add
ficoms
out
cmp
fldt
ljmp
repnz
jno
insl
or
nop
jg
shrb
fdivrl
xor
icebp
xchg
mov
inc
test
cmp
ffreep
dec
iret
dec
fs
adc
dec
mov
movsb
fsubr
xlat
mov
pop
inc
mov
jo
sbb
mov
sub
sbb
inc
inc
popa
pop
and
or
dec
js
call
and
jmp
faddl
xor
xor
dec
cmp
sbb
out
ficomps
in
pop
push
cmp
andl
xchg
aad
mov
pushf
aaa
xchg
rorl
mov
jge
pop
cld
jmp
inc
and
mov
stc
daa
cld
add
rolb
sbb
iret
sbb
dec
lods
lods
xor
sub
sbb
jnp
in
xchg
fldenv
ret
js
leave
sub
loop
enter
jmp
out
ret
sbb
mov
hlt
sahf
dec
fxam
xor
mov
dec
xrelease
movsb
adc
adc
jae
pushf
push
hlt
and
fwait
xor
inc
adc
rcll
lea
mov
cmpsl
push
cmp
push
mov
jbe
lock
cmc
cmpsl
sub
or
popa
pop
loopne
in
movb
xorl
js
mov
enter
jmp
loope
insl
add
movsb
daa
popl
jne
mov
jae
int3
rol
out
jb
cmp
lcall
push
scas
mov
add
sti
aam
push
jbe
cli
lods
jno
out
xchg
jp
imul
rcrl
icebp
sbb
sbb
outsl
and
jno
gs
dec
pop
mov
inc
and
icebp
std
and
lahf
js
push
addr16
dec
jo
popa
inc
mov
aaa
bound
push
cmp
nop
and
addr16
or
ss
pop
shr
pop
test
dec
loop
mov
xchg
into
and
sbb
fbstp
cmc
in
cmp
cwtl
mov
sub
nop
xor
sbb
add
mov
shl
cmp
pop
cmpsl
cmp
and
push
aad
dec
adc
jbe
les
cmp
gs
sbb
and
mov
adc
jbe
mov
dec
cwtl
lods
out
mov
aaa
aaa
aam
stos
in
fbstp
adc
test
fmulp
sub
aam
add
mov
loope
popa
xor
shll
adc
dec
adcl
enter
sahf
xor
lcall
cwtl
popa
cli
dec
sahf
inc
outsl
in
cltd
or
int
rcrl
inc
dec
cld
xchg
sarl
inc
lret
outsb
mov
dec
in
test
pop
iret
cmp
les
mov
or
es
pusha
test
sbb
popa
cld
aad
mov
dec
loop
xchg
je
xchg
push
aaa
fidivrl
jle
and
mov
add
pop
or
mov
cmp
imulb
inc
lret
or
add
and
jmp
cmpsl
sbb
pusha
cltd
aas
adc
enter
fistl
es
or
mov
cmp
xchg
gs
int3
push
inc
out
inc
outsl
nop
cmp
dec
icebp
cmpsl
cs
imul
out
mov
adc
jnp
addb
popa
lahf
movsl
push
test
xchg
dec
inc
mov
in
add
movsl
jmp
divb
or
jno
je
xor
pop
adc
ja
jecxz
or
in
nop
xchg
ret
clc
shlb
sti
loopne
fldt
mov
fcompl
adc
arpl
or
sub
in
pop
fidivrl
and
out
add
dec
into
fs
or
addr16
stos
cltd
je
sahf
rcrb
adc
sbb
sub
and
outsl
jg
jbe
mov
push
cmp
mov
and
out
jmp
es
mov
lahf
inc
fdivr
lea
jmp
jns
in
xor
adc
decb
pop
mov
mov
sbb
xlat
and
mov
jno
cmp
adc
stc
das
and
xor
enter
add
cmc
mov
scas
jge
push
xchg
xchg
fldt
mov
adc
repz
sbb
add
push
dec
cmc
xor
xchg
cltd
add
lcall
mov
jae
xor
pop
daa
jp
or
sbb
mov
pop
xchg
push
add
jns
xlat
cmpsb
mov
cmpsl
adc
push
xor
mov
divl
out
repz
cmp
ret
sbb
sahf
sbb
mov
pop
pop
push
dec
loop
mov
and
leave
xchg
ret
dec
push
cs
adc
out
iret
js
mov
xchg
xor
cmp
test
mov
push
cmp
outsl
adc
bound
push
dec
dec
dec
jecxz
xchg
mov
or
jbe
out
sbb
mov
sbb
ret
int
aad
jae
jmp
cmp
fcmovu
lahf
add
shlb
and
rcrl
test
dec
xchg
mov
inc
push
into
adc
xchg
andb
inc
data16
aad
das
mov
xchg
rcll
jno
adc
add
pop
lods
test
inc
mov
test
mov
mov
pushfw
xcrypt-cfb
cmpsl
and
xchg
pop
inc
daa
fwait
pop
mov
aas
mov
jg
imul
daa
in
mov
inc
mov
subb
repnz
add
mov
shl
les
movsl
sahf
pusha
orb
popa
dec
bound
and
in
xorb
pop
clc
inc
or
aam
je
jg
dec
jbe
push
or
dec
sbb
mov
dec
ret
mov
test
dec
sub
jge
leave
leave
adc
push
mov
lods
xchg
jne
mov
fistpll
sbb
xchg
and
fistpl
ret
cmpsb
xlat
cltd
ud2
ss
in
dec
mov
adc
daa
xchg
sbb
into
je
clc
xor
loop
fidivl
mov
out
pop
dec
sbb
mov
mov
lds
addb
push
test
sub
mov
push
inc
push
call
jb
jge
xchg
fadd
insb
inc
out
imul
call
dec
inc
dec
add
pop
repz
fwait
in
mov
bound
dec
mov
inc
push
cmc
out
jno
pop
shrb
ds
and
mov
cmp
imul
scas
push
jae
mov
negb
inc
pop
inc
mov
dec
lds
rcrl
vmovdqa
divb
push
aad
add
xchg
mov
pop
jp
out
ja
or
outsb
fidivrs
cmc
pop
sar
dec
or
sbb
xchg
inc
xlat
popa
repz
lods
jg
sar
push
push
jl
rcl
jno
cmp
popl
push
xlat
pushf
mov
adc
daa
sub
fwait
push
sbb
jge
sbb
add
mov
or
aad
ret
fcoms
mov
sub
cmp
add
dec
dec
in
and
sbb
xor
movsl
negl
mov
jl
leave
push
shr
mov
jl
xorl
fsts
adc
fcmove
ja
pop
js
adc
insb
mov
and
adc
dec
dec
push
bound
rcrl
and
hlt
sub
xchg
das
fdivrl
push
bound
xor
inc
xchg
adc
ljmp
loopne
xchg
lcall
mov
adc
xchg
inc
mov
stos
mov
xor
imul
scas
loope
icebp
lcall
or
xor
bound
mov
fcomps
cmpsl
xor
dec
imull
or
out
lcall
pop
xchg
imul
cld
xor
test
rcrl
or
rcl
sub
scas
fisttps
pushf
loopne
lcall
push
popa
fmulp
push
cmp
rcll
inc
mov
ds
outsl
jge
arpl
dec
sti
push
ret
mov
push
ret
xor
gs
xchg
int3
xchg
mov
std
adc
push
mov
inc
xchg
gs
sbb
pop
inc
cltd
test
lock
dec
les
xor
jmp
lahf
ret
imul
js
ds
outsl
std
out
imul
je
popf
mov
ffree
mov
push
push
cs
std
adc
mov
mov
lret
pop
dec
jne
and
out
inc
outsb
ret
pop
fnstsw
cmpl
ficoml
in
sarl
sub
data16
or
pop
sahf
add
mov
ljmp
xchg
mov
lock
adc
sti
in
push
pop
andl
jae
std
push
jb
jecxz
cld
scas
xor
inc
mov
das
inc
or
mov
adc
fildl
jnp
adc
ret
dec
daa
bound
mov
xchg
jae
add
mov
movsb
xor
mov
dec
adc
xchg
xchg
ret
lods
lock
nop
loopne
jecxz
in
mov
addr16
ja
push
sbb
xor
xor
loop
ljmp
jbe
out
push
popa
stc
imul
push
out
das
jecxz
inc
test
push
lock
mov
leave
inc
jae
jae
fsubs
shlb
and
sub
add
sbb
jle
cmp
rcll
das
cmp
mov
test
fwait
mov
fstpt
and
aam
into
inc
cmp
add
roll
in
call
ja
test
and
ss
mov
jmp
sti
ds
jb
int3
mov
push
sub
dec
lcall
xor
in
ficomps
sub
into
loopne
mov
sbb
movsb
cmc
test
fs
mov
or
addr16
jbe
outsb
pop
cmp
ficomps
test
pop
pop
jnp
in
dec
call
loopne
sarl
cmp
mov
addl
lret
xchg
mov
dec
jne
pop
mov
lret
leave
mov
stc
roll
cs
or
pop
int3
stos
negb
pop
mov
add
nop
sub
aad
jle
sbb
xchg
pop
jge
dec
push
sbb
scas
out
out
inc
mov
xchg
nop
and
sub
subl
aam
sbb
iret
pop
xchg
int3
insb
inc
cltd
push
jo
fucomip
sbb
call
ret
cmp
jno
fsub
ljmp
iret
xor
xor
dec
push
push
mov
inc
push
push
inc
imul
mov
and
xor
jg
lea
fisubl
sti
or
outsl
sti
cmp
aam
fsubrl
sub
mov
sub
adc
mov
mov
fstpl
cld
pop
sbb
pop
mov
cs
jp
stos
sub
aas
mov
and
or
or
flds
mov
mov
repz
push
pop
sub
neg
pusha
jb
sub
addr16
cltd
xchg
orl
test
test
xor
push
sub
mov
ds
push
fldl
movl
out
xlat
pop
sub
lods
sti
adc
loope
scas
push
cmc
sub
dec
inc
ja
or
or
inc
scas
shlb
sbb
push
mov
neg
rorb
mov
xor
ret
jge
aam
push
adc
ret
dec
pop
mov
je
cwtl
inc
xor
mov
xchg
sbb
jae
jno
pop
dec
push
jge
mov
xlat
fisubs
fisttps
scas
ds
mov
ja
out
inc
stos
add
pop
int
lds
dec
loop
sbb
dec
data16
jge
jne
adc
cli
nop
xchg
stos
mov
int3
popa
mov
and
push
inc
jne,pt
cld
clc
mov
push
add
sbb
dec
rcr
in
loope
std
cmp
in
mov
adc
int
mov
icebp
cmpsb
scas
fldl
adc
push
es
mov
push
je
jae
push
add
mov
es
jno
push
add
pusha
mov
xchg
inc
jns
dec
fnstsw
xchg
sub
and
or
aaa
icebp
cmc
dec
xor
and
mov
cmc
addr16
mov
repnz
iret
sub
xchg
sbb
push
mov
cmpsb
cmp
mov
jnp
popa
and
loop
sbb
sarb
xchg
lods
ficoms
subb
push
dec
add
push
push
out
mov
or
pop
push
jae
cmp
pushf
fnstenv
cltd
sub
fldl
add
jle
push
shlb
ret
inc
test
aam
sahf
out
pop
jbe
sub
fists
mov
fistpl
adc
xchg
add
push
jmp
rcl
mov
fadd
dec
dec
fcomip
cs
out
dec
sbb
or
add
sub
sub
mov
add
test
jbe
pop
test
pop
out
shll
mov
dec
push
mov
into
pop
test
cmpsb
jns
xor
js
pop
insb
fldt
hlt
aaa
ret
sbb
mov
insl
dec
jae
ds
jbe
sub
xor
jns
ss
cmp
xor
mov
xchg
xorb
mov
sbb
das
and
xor
jbe
jno
cltd
enter
push
xorl
lcall
movd
call
test
mov
lds
dec
repnz
rol
jp
push
lret
popa
aaa
mov
adc
andb
in
int3
repnz
mov
sub
lods
arpl
push
jp
mull
repnz
mov
mov
xchg
mov
repnz
out
movsl
sub
or
push
rorb
push
leave
and
xchg
adc
icebp
or
jno
lea
mov
dec
ja
mov
xor
imul
xor
in
out
jnp
dec
xchg
xchg
aad
clc
mov
call
xchg
test
inc
jb
adc
out
mov
cmp
clc
clc
xor
mov
cld
lcall
andl
sbb
mov
aas
fsubrl
fsubrl
fdivl
sahf
lods
or
lret
les
std
mov
add
stc
cmovae
rcrb
add
mov
mov
mov
ret
insb
popf
mov
jmp
jo
stos
jmp
pushf
or
lahf
aam
ret
popa
xchg
mov
fstpl
aaa
pop
lods
fistps
jg
fsubrl
or
ret
fmuls
mov
iret
push
ss
bound
repz
out
testl
pop
sub
popf
cmp
mov
stc
jmp
scas
loopne
cmp
or
mov
and
in
cmp
dec
pop
push
push
popa
leave
dec
adc
mov
mov
mov
fs
fimull
mov
js
cmp
loope
lds
frstor
mov
jns
and
and
mov
js
pop
mov
mov
cli
mov
das
cmp
dec
cs
rcll
pop
mov
cmp
test
nop
flds
inc
inc
out
or
jb
sbb
jnp
cwtl
mov
out
cmp
loope
fcmovne
in
cmp
push
pop
mov
cmovae
jge
in
aam
cmpsl
test
or
popa
mov
ja
add
dec
pop
jns
sbb
insb
mov
push
adc
push
cs
sbb
sub
add
mov
jmp
in
and
mov
cwtl
shl
add
hlt
xor
jmp
lds
out
test
mov
pop
ret
or
jmp
mov
xchg
ret
xlat
or
adc
sbb
adc
mov
bound
je
cmpsl
or
jecxz
jne
call
sbb
push
adc
addr16
pop
adc
xchg
int
add
and
and
out
in
xchg
cltd
imul
stos
insl
gs
fisubrl
mov
sarb
out
push
fs
xor
inc
inc
mov
dec
sub
rcrl
jg
xor
outsl
inc
imul
filds
inc
mov
jl
and
outsl
push
push
mov
xchg
pop
dec
loopne
mov
mov
xchg
and
nop
outsb
jg
outsb
pop
and
repz
daa
pop
fistpll
xor
xor
adc
hlt
dec
xchg
rcl
or
jle
pushf
nop
ret
mov
stos
gs
and
aad
fnsave
aaa
orb
leave
pushl
popa
mov
xchg
xchg
mov
mov
fcom
shlb
pop
pop
add
jne
push
aaa
movsb
mov
fwait
xchg
out
imul
pop
test
jns
sub
sahf
jge
mov
mov
daa
dec
shl
mov
test
xorl
cwtl
in
mov
nop
sub
int3
mov
mov
fstpl
negb
sbb
stos
out
cmpsl
and
add
ja
into
or
fsubp
sbb
mov
and
mov
fsubs
inc
sub
jecxz
roll
lahf
test
adc
xchg
and
pop
lahf
cltd
pop
pusha
ja
sub
inc
or
mov
iret
aad
jae
jl
repnz
lods
test
add
xchg
dec
idivb
mov
mov
cmp
adc
std
stc
xor
outsl
aaa
push
imul
inc
insl
test
mov
xchg
add
mov
in
enter
and
enter
imul
cltd
in
fucomp
loopne
adcb
cld
ss
lds
lret
and
bound
sbb
addr16
aaa
sti
out
out
and
fsubrl
adc
imul
lea
ss
out
mov
cmp
in
push
lods
pop
cmpsb
pop
popa
rorl
orb
iret
movl
ja
jbe
jns
outsl
cmp
sub
mov
push
jne
repz
sub
decl
imul
add
loopne
scas
cltd
inc
or
push
ss
pop
jne
or
psrld
adcl
fimuls
push
xor
dec
cld
arpl
add
rolb
xchg
lock
in
push
rcrb
sbb
loop
xlat
jno
cmp
add
mov
icebp
push
jg
dec
cli
mov
mov
sbbb
mov
and
div
push
adc
push
or
or
hlt
xor
pop
mov
xor
stos
lock
ss
or
inc
sti
scas
sahf
and
xchg
xchg
cmp
mov
mov
notb
imul
dec
ret
mov
xor
jg
jl
pop
sub
cs
mov
out
or
cltd
and
inc
mov
push
outsb
rcrl
inc
into
mov
adc
cmp
inc
dec
mov
xor
xor
xchg
sahf
ljmp
and
cwtl
jl
call
sub
hlt
mov
lock
icebp
pop
cmc
dec
mov
movsl
leave
fs
inc
push
lds
aad
icebp
xor
mov
jmp
cmp
fcmovu
adc
lahf
repz
dec
ja
insl
adc
fadds
mov
icebp
adc
add
hlt
cltd
sahf
dec
icebp
call
cli
aad
and
mov
adc
shl
cmp
test
icebp
loope
mov
pop
scas
pushf
in
lahf
divb
jle
in
inc
cmpsb
das
mov
pop
pusha
sbb
fwait
adc
push
sub
stc
popf
aad
lds
add
mov
mov
lcall
sub
pop
into
ja
dec
push
popa
test
push
daa
popf
testb
hlt
fwait
pop
push
enter
or
jecxz
inc
aam
xchg
bound
jl
mov
sub
pop
imul
jge
aas
adc
jge
lcall
mov
and
lret
leave
dec
das
cmp
sub
push
push
lods
loopne
cmp
sbb
mov
test
xchg
and
je
mov
cmpsb
jmp
hlt
adc
xchg
pop
prefetcht2
adc
cld
rcll
aam
test
addb
push
gs
push
mov
dec
push
fadds
in
in
push
xchg
mov
out
daa
or
repnz
add
xchg
cltd
mov
mov
jns
into
lods
add
jg
ja
or
adc
out
cmp
pop
out
mov
lea
inc
add
arpl
dec
movsb
arpl
fdivrp
adc
adc
inc
fidivrs
pop
jnp
or
adc
dec
cld
pop
dec
and
pop
into
aas
add
jle
sub
data16
mov
add
fimuls
clc
aad
mov
mov
popf
popf
lret
inc
mov
xchg
xchg
cmp
pop
insb
cmp
push
jecxz
add
sub
dec
and
in
mov
stc
mov
pop
xorw
cmpsl
push
mov
pushf
scas
cmpsb
jbe
xor
outsb
add
push
push
iret
or
mov
stos
mov
xlat
push
mov
inc
jecxz
jmp
xor
inc
xlat
or
or
mov
add
xor
aad
adc
shll
xor
clc
mov
push
lock
gs
inc
mov
data16
push
arpl
mov
enter
popa
out
pushf
mov
push
and
sub
mov
xor
xor
xchg
call
xorl
xor
test
or
push
pop
sub
and
push
addl
adc
cs
cmp
in
cwtl
stc
inc
mov
lea
ss
dec
or
test
add
fimull
dec
xchg
out
jmp
pusha
mov
mov
out
mov
mov
adc
jbe
sub
xor
mov
xchg
ret
out
inc
out
push
cmp
cmp
js
cmp
mov
sbb
gs
push
sub
enter
in
loopne
cmp
test
popa
mov
out
jg
and
outsb
popf
movb
addr16
sti
sub
inc
std
cmp
cmp
lret
adc
sbb
js
lahf
add
jecxz
mov
stos
jg
xor
lret
dec
mov
mov
sub
xor
mov
fldl
mov
pop
in
pop
mov
jb
sub
ds
sub
inc
js
xchg
jp
iret
test
dec
push
push
push
xchg
sub
inc
xchg
push
in
out
dec
push
lahf
pop
adc
or
and
in
jbe
mov
adc
fcmovb
jl
in
sbb
nop
push
or
mov
call
fidivs
dec
dec
stos
les
loop
ja
shrb
or
movsb
call
mov
mov
sbb
push
jle
out
push
jl
push
add
in
es
out
leave
int3
push
out
mov
out
inc
mov
in
adcb
jne
mov
push
rcrb
pop
cmp
sub
loop
pushf
xor
push
ljmp
ljmp
loope,pt
inc
push
xchg
pop
mov
push
mov
push
ret
pop
sti
arpl
and
mov
in
inc
out
scas
xchg
std
mov
add
xor
js
xchg
rclb
pop
push
cmp
adc
mov
in
mov
bound
test
imul
cmp
push
fdiv
outsl
fsubs
push
lea
xchg
insb
xchg
jecxz
dec
mov
cmp
pop
test
dec
jb
in
cmp
movsl
cwtl
push
push
into
or
push
jno
sbb
scas
out
jge
push
sub
fistps
cwtl
xor
xor
push
int
and
cwtl
cmp
cli
pushf
xlat
and
push
xor
dec
loopne
push
mov
aas
cmp
ds
outsb
jb
pop
inc
xor
and
mov
cmpsl
and
addl
push
sub
das
sub
mov
jne
push
mov
xchg
cmpsl
or
jbe
fwait
push
jmp
out
push
call
iret
add
out
xchg
test
insl
push
pop
cmp
fiadds
mov
xchg
test
test
dec
imul
pop
cmpsl
das
add
in
and
ret
mov
hlt
sbb
imul
les
dec
dec
rcl
stc
xchg
nop
pushl
add
subl
addl
jae
out
and
or
in
sub
insl
clc
push
mov
inc
insl
outsb
push
aaa
lods
and
in
jp
js
and
cmp
cmpsl
aad
and
icebp
cmc
adcb
lods
mov
cmova
movsl
jns
xchg
pop
out
fwait
jge
sbb
sub
xchg
ret
test
dec
out
cmpsl
stos
xchg
dec
mov
lds
cmp
mov
add
test
sub
lods
int3
sahf
lds
pop
ja
cmp
jmp
cmp
sti
or
xchg
adcb
filds
jle
jp
cmp
or
jle
xchg
or
or
inc
xor
or
pop
test
je
dec
mov
enter
sbb
push
sbb
test
test
pop
out
cmp
sti
and
pop
lret
aas
lods
pop
je
sub
adc
addr16
pop
or
or
adc
or
add
call
stos
jp
nop
add
sbb
push
push
and
mov
in
mov
outsb
dec
mov
pop
test
sub
dec
xor
lods
sub
ss
scas
xor
pop
sub
jo
dec
lds
js
decl
sbb
rcrl
sahf
rcrl
cmpsb
jl
dec
add
xchg
xchg
cmc
cmp
push
push
push
loop
fstpt
aas
xor
and
xchg
push
cmp
adc
jnp
xor
pushf
or
dec
js
add
in
mov
leave
mov
cmp
jmp
sti
dec
mov
std
jb
jl
or
add
push
dec
lret
add
pusha
push
lods
lock
lret
stos
pushf
test
ljmp
push
jns
ror
xor
mov
push
xchg
adc
push
je
add
cmp
xor
mov
in
jae
cmp
add
es
fucomip
lods
icebp
adcb
dec
push
sahf
jns
mov
dec
adc
divb
cmp
sub
xor
xchg
gs
and
pop
cmpsb
mov
mov
fildl
inc
call
lods
mov
xchg
rorl
sub
inc
push
mov
hlt
mull
out
icebp
lock
and
les
mov
in
int3
cs
nop
or
shll
sub
jmp
mov
adc
je
js
icebp
pusha
test
xor
fdivrl
mov
mov
mov
push
add
outsl
jl
cmp
xor
cmp
popf
fnstsw
jns
out
sub
jno
xor
or
lods
out
rolb
inc
mov
fs
add
int3
sarl
aad
xor
stc
repnz
dec
sub
mov
pop
or
ret
lret
push
cmp
add
loop
gs
mov
data16
iret
dec
lret
pop
jg
ficoms
mov
add
push
lods
fadds
pop
sub
adc
or
mov
xchg
jg
ja
in
jmp
in
loop
or
call
sub
aas
add
outsb
xchg
sub
pop
lods
sub
sbbb
or
xor
movsb
mov
movsl
adc
xor
aas
push
pop
and
push
add
nop
and
in
pop
and
add
xchg
cmp
xor
sbb
fimuls
cmp
push
lods
fbstp
test
lahf
pop
mov
movsb
and
inc
rcrl
mov
add
ss
pusha
or
xchg
lret
repnz
sbb
pop
xchg
lea
xor
mov
ficoml
jmp
or
out
loope
mov
aas
bound
lea
xor
jbe
pushf
push
cmp
mov
dec
cmp
xchg
aas
stos
and
xchg
or
add
les
xlat
add
cmpsb
fmull
rcl
imul
enter
cld
push
enter
mov
xchg
mov
xchg
loop
fistpl
mov
jne
add
and
push
push
cmp
pop
and
ss
inc
xchg
mov
xchg
xchg
sub
aam
cs
aad
sbb
mov
lock
fs
mov
mov
mov
mov
aaa
mov
mov
aam
pop
mov
and
in
jg
stc
and
clc
sub
or
jle
fildl
inc
mov
testb
push
je
add
or
pop
std
iret
test
cli
mov
imul
jo
mov
xchg
add
addr16
xchg
lret
cld
aad
mov
cli
aas
gs
aas
cmp
sub
inc
inc
adc
es
addr16
xchg
in
aad
jne
lods
sub
and
repnz
push
sub
mov
push
jge
ss
adc
mov
xchg
xlat
mov
leave
add
lret
sub
push
addr16
scas
xor
xchg
sbb
sarl
fmulp
pop
or
and
inc
addr16
std
shl
jne
xchg
int
jno
sub
lods
xchg
imul
xchg
xchg
pop
mov
dec
sub
jae
xor
stos
push
lods
xor
leave
xchg
mov
mov
and
popf
sub
hlt
cmp
push
push
mov
stos
push
mov
xchg
and
lahf
comiss
aaa
enter
pusha
lods
cmpsl
jne
lods
dec
lret
jbe
add
jecxz
add
xchg
sarl
adc
sub
lahf
cmpsl
push
dec
int
movb
das
ds
lods
or
inc
mov
pushf
notl
aas
xor
loopne
in
hlt
inc
sub
stc
mov
cs
into
xchg
push
jb,pn
test
into
xor
or
xor
pusha
mov
xchg
fistpll
xchg
push
cmp
push
sbb
xchg
xchg
xchg
jb
inc
sbb
out
jno
mov
mov
push
xor
shrb
cmp
hlt
mov
ja
decl
cli
addb
cmp
sub
aad
pop
fs
xchg
iret
xor
sub
out
sbb
lods
xchg
sahf
hlt
adc
push
xor
xor
sti
lea
jne
sbb
loope
and
rorl
in
add
not
mov
xchg
pop
les
mov
push
mov
imul
jbe
ret
mov
arpl
loop
mov
stos
aam
sub
push
lea
jmp
mov
pop
mov
pop
mov
inc
cwtl
mov
enter
pusha
imul
sub
fwait
pop
add
bound
divb
mov
mov
jb
adc
mull
and
mov
pop
inc
adc
lea
shrb
xchg
repz
and
cmp
pop
cld
dec
stos
mov
pop
and
cwtl
lea
montmul
cmpsb
cmp
jbe
jge
loopne
data16
in
sbb
inc
sbb
push
mov
into
sbb
dec
vprotd
dec
jno
jp
xchg
add
arpl
nop
les
dec
ljmp
aad
mov
mov
shrb
inc
mov
gs
out
mov
or
test
dec
xor
sub
movsl
cwtl
adc
xchg
lret
push
inc
jmp
jle
test
cmp
pop
int3
push
mov
int3
movsb
adc
push
pop
jl
sub
add
into
cmp
sbb
insl
sti
adc
bound
push
sbb
push
adc
cmp
mov
fs
sbb
cmp
mov
add
iret
jg
je
movsl
dec
ljmp
push
adc
xor
sbb
dec
movsb
fs
in
sbb
in
fsubl
out
iret
mov
jne
icebp
pop
cmp
sbb
add
dec
in
loope
sbb
lds
out
dec
mov
push
sub
cmp
push
cmp
and
adc
add
jbe
dec
mov
dec
iret
cltd
hlt
jge
mov
pop
leave
jl
fstpl
dec
dec
push
pushw
addl
daa
ja
jns
adc
outsb
add
cmp
or
test
inc
sub
mov
lcall
out
ss
sbb
movsb
jge
clc
in
mov
ja
xchg
fisttps
adc
into
xor
fs
push
shr
mov
xchg
xchg
pop
jne
insb
push
mov
aam
insl
and
sbb
das
push
loopne
xor
rclb
jg
in
sub
sbbl
jle
inc
sahf
dec
loop
cli
adc
xchg
and
insb
test
cmp
das
xchg
or
nop
adc
xor
movl
xor
push
pusha
loop
xchg
mul
sbb
sub
test
jmp
insl
aas
xor
incl
mov
inc
cwtl
addl
cmpsl
pop
jp
rcll
std
xor
and
mov
pop
pop
jne
in
mov
popf
das
jo
dec
sub
loop
cld
repz
dec
lds
fs
and
lret
mov
pop
push
xor
das
dec
or
jmp
add
movzwl
sbb
sub
sub
fidivl
mov
xchg
push
call
push
and
ret
popf
and
pop
fdivrs
xchg
nop
jge
repz
adc
daa
mov
scas
icebp
repz
cmp
je
sti
push
add
mov
repnz
lds
jp
add
fstl
xor
jle
xchg
pop
and
and
pushf
jl
pop
jp
adc
and
popa
xorl
data16
inc
fcoml
jge
inc
or
rcr
jne
jg
inc
leave
add
ss
lcall
int3
imul
rcll
ss
jecxz
sub
cs
loope,pn
pushf
xor
lods
push
arpl
lret
cmpb
xlat
notb
dec
jmp
dec
sub
xor
aam
jl
push
jmp
std
inc
mov
loopne
adc
int3
pop
add
jnp
loope
outsl
pop
ret
cmp
push
jo
scas
jne
pop
int3
pop
mov
ljmp
xchg
cmp
jle
xchg
test
ror
orl
adc
stos
push
outsb
cmp
je
inc
jp
fs
pop
cmp
out
jge
add
jecxz
pop
mov
push
jecxz
les
adc
daa
jb
adc
jne
jne
push
pmaxub
je
xchg
xchg
fucom
pop
cltd
pop
call
mov
or
imul
or
add
jmp
fdivrl
jp
jecxz
dec
ljmp
fistl
stos
jmp
sbb
insb
rclb
pop
loopne
pop
cmp
fnstenv
mov
inc
loop
in
mov
mov
cmpl
jge
dec
psubsb
movsw
mov
xchg
push
xor
test
inc
xchg
jnp
xchg
push
stos
lds
add
inc
xlat
pop
push
clc
scas
dec
pop
sahf
inc
inc
adc
sahf
ficomps
pop
addr16
ret
shlb
jl
mov
mov
pusha
scas
shl
and
filds
loopne
inc
mov
js
xchg
je
mov
mov
outsl
adcb
mov
sarb
lret
stos
sbb
loop
in
leave
cmp
inc
ret
and
jne
mov
mov
push
pop
sub
mov
hlt
neg
jmp
arpl
push
popf
sbb
xor
mov
inc
inc
out
mov
lret
push
mov
inc
lods
mov
test
sbb
cmpsb
push
mov
cmpsb
bsf
arpl
inc
sbb
out
je
rorl
cmpsl
xchg
jge
cmc
test
jns
push
jecxz
sti
dec
in
mov
jmp
mov
jle
lahf
push
arpl
mov
dec
pop
fsubp
adc
cmp
mov
lock
adc
mov
mov
xor
les
sub
adc
out
sub
or
repz
repz
outsb
mov
sub
cmp
icebp
xchg
mov
stc
pop
dec
inc
test
sbb
je
or
xor
fbstp
stc
jns
cmp
es
lret
decb
shlb
loop
ja
add
sbb
call
je
cmp
or
push
out
pop
cwtd
mov
lcall
mov
iret
mov
push
push
mov
cwtl
or
jmp
jge
add
jae
rcrb
arpl
outsl
cltd
mov
jmp
aaa
lock
repnz
inc
mov
ljmp
cmp
pop
push
adc
push
fsubr
jle
push
hlt
scas
push
push
mov
add
push
lret
test
dec
pop
fs
pop
sbb
lds
bound
push
xor
cmc
add
jl
es
or
sbb
std
pop
stos
mov
mov
insl
enter
push
leave
lret
cmc
push
sbb
sub
xor
test
adc
add
push
rcll
jle
fwait
je
inc
cmpsl
jmp
stos
testb
arpl
cwtl
pop
cmp
lea
jg
pop
push
sbb
cmp
lcall
out
pop
jbe
add
mov
insb
jle
insb
push
jne
andb
mov
lret
lahf
and
jbe
inc
push
je
repnz
in
iret
xchg
ja
out
jb
daa
pop
inc
xor
xchg
or
addr16
jo
push
mov
pop
into
mov
sub
les
and
pop
bound
mov
xorl
out
adcb
xchg
cmp
push
ror
cmp
out
in
inc
add
loope
and
pushf
adcb
clc
pop
jns
movsl
rcll
lahf
out
fsts
xor
push
or
xchg
insb
push
pusha
dec
jmp
pop
fisubrl
and
jg
dec
sbb
mov
loope
jl
jno
test
icebp
mov
call
mov
lods
fisubrs
testl
push
inc
dec
dec
inc
sahf
std
dec
jbe
outsl
loop
rorl
sub
push
jle
xchg
pushf
aas
rcl
loope
cmp
mov
sub
js
popf
movsb
mov
xor
mov
mov
jmp
shll
repnz
add
rorl
push
add
hlt
shlb
xchg
aam
jb
rorl
sub
lock
push
scas
or
dec
scas
xchg
and
pop
mov
lock
pop
adc
dec
and
add
cld
in
iret
dec
push
mov
add
cli
loop
sbb
xor
mov
cmpsb
into
in
jecxz
clc
out
lahf
mov
inc
jecxz
jp
add
xchg
hlt
add
inc
shll
jmp
dec
iret
test
inc
pop
gs
sbb
mov
mov
mov
scas
cmp
add
mov
in
sbb
inc
sbb
and
mov
or
outsb
imul
jae
pop
rol
and
add
dec
fprem1
or
xor
dec
push
mov
popf
arpl
adc
sub
outsl
test
push
repnz
mov
aad
sub
push
mov
mov
mov
insl
jecxz
pusha
mov
dec
pop
cs
ss
inc
jo
mov
orl
shll
icebp
mov
cmp
sub
mov
gs
push
scas
jge
cmpsl
ljmp
jno
cmp
jno
hlt
mov
jbe
in
xchg
iret
mov
inc
sti
xor
test
or
imul
mov
fwait
cmc
pop
mov
sub
mov
xchg
jecxz
enter
jmp
fwait
pop
ss
lret
cmpb
loop
shlb
mov
dec
jbe
xchg
and
pop
rcl
roll
arpl
pop
subb
pusha
cmp
or
xchg
pusha
cmp
sbb
mov
push
push
fadd
aaa
icebp
dec
xchg
ja
das
repnz
gs
aaa
loop
fs
rdmsr
test
adc
lahf
pop
pop
ja
aas
and
shrl
out
add
das
popf
pop
ljmp
shl
xor
incb
inc
inc
jmp
popa
les
adc
insl
push
test
push
jg
ss
add
mov
push
insb
mov
dec
cmc
fnstsw
pop
in
lock
pop
adcb
mov
dec
js
cwtl
inc
jae
pop
pop
sub
mov
sub
stos
sahf
jae
mov
push
sub
cwtl
cmc
or
in
mov
aad
repnz
test
sub
pop
arpl
sysenter
mov
jnp
bound
mov
jl
xor
jns
lret
stos
sbb
inc
scas
adc
jmp
lret
xor
lcall
lods
fdivrs
iret
jmp
add
movsb
inc
lret
xlat
in
xchg
scas
or
push
stos
popa
and
popa
mov
adc
mov
sti
lods
test
and
mov
jl
add
fcmovbe
mov
ret
xchg
push
rcll
clc
scas
inc
mov
sub
loop
int
push
xor
add
inc
aam
cmp
dec
repz
pop
hlt
clc
adc
in
cmpsb
sbb
int3
les
fsts
iret
icebp
and
lret
orl
lret
imul
sahf
pop
pop
cmp
pop
stos
jne
int
loope
mov
cmp
and
jne
aad
add
and
xchg
out
cmp
cwtl
cmp
xchg
inc
call
jae
cmpsb
ret
xor
pop
cmp
shrb
pop
and
fwait
cmp
cmp
inc
adcl
js
popf
orl
cmp
jb
xchg
push
pop
scas
cld
cmp
fxch
mov
mov
or
loope
add
sub
fdivl
adc
push
dec
lcall
sbb
decl
push
pop
sub
inc
jae
imul
xchg
pop
addb
and
dec
les
jns
adc
cmp
gs
das
inc
pop
mov
adc
repz
xchg
les
mov
sub
sub
in
loop
out
test
pop
adc
xchg
dec
je
mov
and
push
hlt
addr16
rcll
mov
xor
pop
shll
push
mov
xor
int3
int3
jo
inc
inc
shrl
cwtl
inc
sub
cmp
xor
dec
jo
xchg
mov
mov
aam
daa
xchg
fstps
pop
movsb
pop
or
in
mov
roll
cmpsb
mov
jnp
push
loopne
lret
jmp
out
outsl
js
loop
adc
test
push
in
push
dec
mov
je
mov
xor
mov
or
popa
ret
in
aas
pop
mov
push
inc
inc
lcall
insb
mov
jg
mov
mov
pop
sahf
ss
push
and
pusha
and
arpl
mov
shll
mov
sbb
aam
sarb
xchg
notl
dec
or
cwtl
mov
mov
fdivrl
mov
push
rcll
push
mov
mov
cmpsb
xlat
fistpl
and
in
dec
sar
cmpsb
fcompl
fsubs
adc
nop
insb
pop
dec
mov
add
rcrb
loop
dec
add
mov
adc
mov
out
sbb
int3
xchg
fisubs
orl
inc
mov
mov
imul
scas
addl
dec
dec
ficomps
mov
mov
sbb
cs
dec
mov
inc
lret
int3
fldz
rcrl
ja
imul
sub
or
repnz
mov
add
dec
rcrb
xlat
leave
inc
xor
stos
push
daa
bound
cltd
aas
lcall
pop
bound
inc
cmp
dec
je
xor
mov
nop
mov
xchg
cltd
in
adc
adc
pusha
lret
jno
out
push
push
sbb
pushf
push
and
cmp
add
xor
loopne
mov
pop
push
or
rcll
or
mov
jp
addl
popa
insb
aas
push
sarb
mov
insl
movsl
sahf
cs
or
addr16
hlt
out
cwtl
fistpl
js
add
cltd
andl
add
mov
loope
and
shll
push
xchg
cmpsb
outsl
iret
andl
das
imul
aaa
dec
xchg
xlat
imul
mov
clc
pusha
and
test
lods
cmpsl
pop
lods
cmp
mov
repz
lea
and
sbb
call
rcll
cli
int3
cli
aad
out
cmp
sub
mov
pop
mov
fs
mov
xchg
test
xlat
sti
xchg
lret
cmp
mov
inc
daa
sub
cltd
sahf
and
jp
xchg
es
mov
xchg
sub
add
pop
fs
inc
cmp
cs
jmp
mov
mov
movsb
fisubl
mov
add
and
inc
inc
and
mov
cwtl
bnd
dec
xlat
cmp
ret
xor
sub
flds
jg
push
or
imul
stos
rcrl
or
xchg
jbe
adc
lret
jmp
mov
push
mov
fwait
jmp
shr
push
test
and
push
inc
xchg
lock
pop
mov
xor
fimull
sti
mov
inc
popf
mov
in
mov
dec
adc
arpl
test
xchg
dec
or
mov
insb
fdiv
adc
mov
pop
inc
and
dec
jb
adc
cmpsl
pop
add
mov
jnp
inc
adc
cs
cmp
arpl
aad
movsb
dec
daa
outsl
mov
mov
rcrl
imul
pop
cs
jnp,pt
inc
adc
scas
and
push
adc
jl
xchg
lret
xchg
mov
in
pop
add
in
inc
js
lea
pop
cmp
loopne
in
jg
arpl
lods
mov
mov
enter
jo
sbb
ret
enter
add
and
lret
mov
pop
test
pop
pop
mov
sbb
push
fists
inc
cmc
lods
test
std
lds
shll
ljmp
lock
mov
pop
push
adc
roll
pop
inc
push
and
and
jae
jge
pop
jo
cmp
add
loope
push
cmp
mov
push
and
lret
loopne
inc
fs
cmp
push
inc
adc
sar
stc
clc
adc
cmp
divb
pop
adc
xchg
adc
hlt
or
jecxz
cmp
push
cld
sbb
xor
out
push
fsts
out
mov
in
and
sbb
in
adcb
pop
lret
aam
stos
mov
inc
test
cmp
ret
xchg
or
out
negl
movsl
pop
xchg
jno
pop
fisubl
cmp
cs
adc
das
dec
cld
stos
pushf
adc
pop
ret
das
stos
lret
jmpw
inc
push
loopne
mov
pop
pop
jae
lcall
adc
scas
xor
or
or
sub
in
jbe
mov
and
xchg
clc
mov
cmp
push
cs
out
cmpsb
fistps
std
ja
push
cmp
fdivrs
out
sti
and
mov
sub
cmp
mov
loop
xor
inc
jae
pop
jle
xchg
movq
pop
xchg
outsl
xor
add
jb
out
aas
sahf
fwait
inc
jg
jg
lods
loopne
cmp
cmp
das
addb
or
fsubrs
pop
jno
push
out
cmpsb
pop
es
sbb
jno
or
fcmovbe
fsubrs
sub
add
jp
push
jb
and
xchg
mov
sbb
adc
mov
scas
cmp
pop
and
out
jb
lea
xor
repz
push
in
xchg
and
fiaddl
and
mov
xchg
cs
jl
out
adc
leave
inc
cmp
mov
jns
arpl
adc
rcll
rcrl
jae
out
xor
mov
cmp
nop
push
inc
push
stos
adc
out
repz
xor
dec
cmpsl
pop
stos
andl
dec
dec
jecxz
sbb
subb
jb
mov
push
sbb
add
ljmp
pop
sti
lret
jl
pop
xchg
push
jle
sub
push
cmpsb
mov
mov
pop
jne
test
jle
push
and
adc
repz
and
ret
ss
and
ficomps
jmp
fstps
shlb
push
dec
ret
mov
push
lock
andl
and
call
and
jae
pop
fldcw
push
adc
xor
pop
mov
dec
xor
movsb
icebp
jle
adc
loop
add
into
hlt
xor
or
jae
loopne
lods
inc
sub
pushf
jl
jo
inc
mov
cmpsb
fists
mov
insl
mov
fsubs
popf
mov
rcrb
jl
pop
imul
mov
rcrl
cmp
mov
push
fdivrl
cs
fwait
add
and
mov
in
pop
add
xor
xchg
pop
inc
pop
mov
mov
ds
mov
bound
cmpsb
ja
ret
loop
add
mov
jmp
push
pop
cli
shll
cmp
test
imul
mov
pop
push
mov
shll
mov
xor
push
lret
aad
and
cmp
sub
cmp
mov
cmp
pop
inc
das
push
dec
mov
push
mov
mov
xlat
xchg
ret
in
xlat
xchg
icebp
jge
dec
lock
lock
cmp
mov
inc
push
mov
stos
inc
lods
in
ds
nop
js
inc
out
xlat
dec
push
push
loop
std
xor
jl
dec
mov
call
xor
inc
std
stc
cmpsb
mov
test
arpl
cmpsl
xor
sbb
outsl
mov
push
sub
xlat
incl
aaa
ja
dec
in
pop
out
jbe
pop
pusha
fldlg2
xchg
mov
icebp
inc
cmp
je
int3
inc
fdivr
rorb
fadds
jbe
sub
xor
imul
outsl
insb
pop
out
fldcw
into
test
dec
test
test
pop
in
fcoms
test
aam
xor
dec
clc
movsb
or
movsb
xchg
mov
push
pushl
xor
mov
pop
inc
xor
dec
push
jns
cmp
jp
xchg
xchg
xchg
push
jnp
loope
rcrl
sahf
cmp
nop
shl
fwait
push
lea
jp
addr16
ja
xor
pop
jb
jb
out
jne
das
sub
sub
out
cmp
cwtl
lret
mov
in
aas
jno
imul
jle
xorb
cmpsl
pop
cmp
adc
pop
ret
xor
or
scas
mov
mov
mov
jp
xchg
mov
ds
and
imul
push
outsb
shrl
mov
cmp
push
fwait
stc
popa
pop
pop
cld
and
inc
pop
ss
pop
cs
sbb
dec
add
mov
imul
mov
test
jo
aas
pusha
int
mov
cvtdq2ps
mov
or
movsl
insl
push
mov
ljmp
mov
loop
mov
shll
adc
sub
fldt
test
adc
pop
cmp
repnz
dec
mov
rolb
outsl
or
xchg
mov
outsb
pop
mov
insl
mov
adc
xchg
test
mov
daa
sti
aad
jecxz
fwait
pop
scas
rcrl
or
inc
adc
lahf
sub
or
dec
mov
jns
stos
mov
fsubp
mov
pop
fwait
or
sub
out
movl
dec
fcomi
mov
movsb
xor
pop
loopne
cmp
lock
arpl
sub
mov
aas
add
in
jno
in
push
cld
pop
mov
inc
into
sub
mov
flds
cmp
rcrb
mov
sub
mov
mov
mov
add
outsb
sub
inc
ja
cltd
fdivrl
test
sub
pop
lock
pusha
jp
mov
mov
cmc
xor
inc
aaa
push
jle
mov
insl
mov
lea
jb
test
jle
push
xchg
outsl
js
push
cmpl
in
in
fisttpll
sbb
hlt
iret
mov
xor
push
sbb
sbb
into
sub
aas
and
push
cli
jae
daa
outsl
into
jne
fsubrs
inc
and
ja
pop
shll
sbb
int
js
in
adc
daa
jnp
shll
jmp
test
js
into
add
pushl
xchg
int
sub
inc
je
sub
sub
pop
out
int
mov
mov
mov
stos
ljmp
push
sbb
xor
push
stc
or
int
out
or
xchg
cmpl
xchg
imul
push
dec
fnsave
sbb
out
dec
jb
mov
sti
and
lahf
insl
dec
cmp
adc
jae
or
adc
mov
pop
dec
xor
stos
mov
dec
jmp
xor
inc
mov
and
adc
fs
fsubs
cltd
movsb
fwait
jecxz
lods
insb
cmp
pop
sbb
sub
xor
sub
jg
add
jp
sbb
pop
or
fcoms
mov
sub
andb
repz
push
fs
mov
arpl
mov
jne,pn
lret
pop
xchg
sysexit
loop
push
dec
mov
popa
decl
dec
rcl
jbe
mov
xlat
xor
jmp
shl
sbb
jmp
push
ret
dec
push
cmpsl
js
daa
pop
adc
and
lock
pop
mov
bound
xchg
dec
adc
sbb
xchg
mov
ja
test
bound
add
dec
stc
adc
mov
xchg
loop
sti
lret
icebp
xchg
mov
ret
mov
adc
pushf
pushf
adcl
pop
pop
jnp
movsb
sbb
mov
fsubl
into
inc
jb
lcall
push
push
cli
or
inc
xor
dec
insl
pop
les
and
mov
iret
pop
sbb
push
sbb
std
jns
inc
dec
jne,pt
add
out
outsb
sbb
push
fsub
jle
and
dec
add
xor
mov
mov
cmovp
adc
outsl
mov
mov
pop
lods
xlat
xchg
xchg
dec
mov
test
fsts
fnstcw
stos
es
aad
dec
mov
cmp
mov
sti
popa
aaa
pop
cmp
or
ss
in
sbb
xchg
in
add
test
call
xor
imul
loopne
fcmovnbe
jo
rol
movsl
hlt
jno,pn
xchg
xor
in
mov
rcll
mov
in
mov
arpl
xchg
or
aaa
stc
mov
jae
sti
jnp,pt
insb
mov
xchg
mov
lods
or
lds
sbb
xchg
sbb
dec
insl
xchg
xchg
fistl
lea
lds
es
push
mov
sbb
add
call
dec
or
inc
in
inc
outsl
call
gs
jmp
test
pop
mov
mov
int3
lahf
jmp
push
or
jp
subb
outsl
xchg
mov
scas
shll
scas
sahf
test
insl
idivb
cli
adc
adc
adc
jnp
test
mov
call
add
fsts
pop
imull
add
bound
mov
adc
out
clc
fwait
cwtl
jo
pop
addl
and
jnp
test
rcrl
push
mov
or
imul
lods
and
int
les
jmp
je
add
insl
xchg
aad
push
stos
test
clc
mov
push
stc
cltd
lret
adc
lock
fistpl
orl
dec
subl
insb
dec
lret
lock
fisttpl
loope
out
pop
inc
arpl
int3
sbb
lret
adc
bound
sub
test
jo
and
out
lret
pop
pop
sub
out
push
push
xchg
cmpsb
or
scas
dec
mov
pop
add
icebp
sbb
leave
inc
sbb
pop
jmp
leave
test
jp
fstps
xchg
out
xchg
inc
sbb
push
ret
pop
lcall
xor
dec
ja
fmull
mov
aaa
cld
dec
filds
pop
xchg
pusha
adc
mov
xchg
aad
xchg
fidivs
outsb
aad
push
iret
jns
sub
and
std
cli
jge
or
mov
inc
xchg
mov
leave
adc
int
dec
push
popa
shrb
imul
mov
lods
std
addb
scas
jge
bound
lods
or
sbb
xorb
inc
ss
jno
xchg
or
xchg
in
inc
xor
inc
aad
sub
fwait
es
mov
repz
mov
out
shll
adc
jle
adc
jbe
sarb
push
bound
xchg
fdivrs
testb
dec
sbb
aas
mov
ja
call
dec
or
aaa
out
loop
adc
dec
jo
popf
xchg
fidivl
cmp
adcb
mov
int
loop
call
call
pushf
hlt
push
dec
sub
subl
mov
or
dec
jecxz
rol
cwtl
inc
lds
and
movsl
mov
or
aaa
mov
addr16
and
enter
inc
cmp
sub
xchg
push
pandn
sub
dec
mov
add
mov
mov
stc
jae
cmp
jle
rolb
sbb
pop
push
and
test
mov
xor
or
ret
cmp
outsl
dec
mov
cmp
cmpb
sub
pop
aas
iret
fwait
jg
or
sarl
in
cmp
loope
out
lea
mov
mov
shl
js
and
repnz
pop
cld
dec
adc
jmp
or
mov
dec
push
or
or
movsl
push
mov
int
jl
sbb
mov
cmp
sbb
xlat
sub
loop
cld
pop
push
iret
mov
dec
push
adc
cmp
xchg
push
ja
jmp
in
je
xlat
adc
mov
fld
incb
shl
xchg
clc
bnd
in
mov
cmpsb
in
sub
add
jmp
bound
inc
aad
enter
dec
xor
idivb
dec
mov
or
shlb
dec
out
sbb
sub
mov
xchg
sub
push
jl
imul
lahf
js
adc
loopne
xchg
adc
sbb
pop
dec
out
and
xchg
mov
add
cmp
cmp
das
mov
sbb
subl
mov
inc
pushf
cmp
repnz
add
ljmp
and
lods
fcompl
cld
out
lock
repnz
sbb
dec
adc
fsubs
arpl
dec
adc
xchg
mov
cltd
je
sbb
insl
jl
outsl
je
jbe
jge
xor
gs
out
mov
sahf
leave
dec
xchg
data16
pop
dec
xchg
aas
mov
mov
ds
ret
aad
repnz
cmpsb
inc
push
loopne
int
ror
sbbb
and
and
and
and
fbstp
jge
fwait
cmp
movsl
push
cmpsb
dec
leave
cmp
data16
pop
rcr
stos
inc
js
sbb
xchg
push
pop
sub
pusha
xchg
enter
mov
pop
xor
in
insl
jle
adc
adc
int
mov
sub
jae
mov
cmpsl
in
add
lret
data16
and
mov
js
jle
xchg
sub
add
cmp
lea
inc
nop
mov
cmp
jmp
fs
mov
les
push
jg
jmp
and
push
lret
icebp
xor
push
push
xchg
dec
fiaddl
push
push
jmp
mov
mov
rorb
cmp
ret
mov
lods
filds
insl
cmp
in
mov
or
ljmp
loopne,pn
cmpsl
pop
pop
repz
ja
jle
insl
sbb
imul
xor
addr16
addr16
jo
mov
add
fwait
push
pushf
lahf
loop
push
jp
sbb
inc
and
js
sbb
and
testb
mov
std
mov
jge
lock
das
cmp
pop
lea
inc
andb
lods
adc
mov
lods
mov
ffree
iret
cs
pop
jp
addl
jle
cltd
shll
xchg
test
mov
stos
sub
fildll
sbb
mov
push
sbb
pop
adc
call
addb
xor
push
push
mov
dec
movb
dec
sbb
sbb
xchg
mov
fs
pop
pmaddwd
xchg
sahf
sbb
xor
lcall
sub
aam
mov
xor
lret
pop
stc
push
hlt
outsl
mov
and
enter
negb
sahf
fwait
push
sub
ds
daa
push
addr16
push
loop
mov
fistps
mov
push
adc
shlb
clc
stc
insl
push
pop
sbb
cmp
and
stc
cmp
sbb
out
pop
push
sbb
adc
testl
ja
aaa
daa
testl
and
incl
jmp
fstpt
jle
pop
xor
out
arpl
popf
pop
aad
cs
pop
pop
bound
loopne
pop
enter
dec
in
mov
enter
in
cmc
popf
out
fadd
inc
nop
stos
loop
cld
out
mov
mov
es
xchg
cmp
or
adc
push
lret
aam
mov
aaa
jo
xchg
jge
cwtl
push
jl
adc
mov
jl
sbb
in
push
pusha
push
inc
aaa
sti
lret
xlat
fdivl
and
mov
adc
sbb
out
or
xor
jmp
and
xor
das
push
stos
loopne
and
std
push
shlb
push
shrl
and
ret
gs
xchg
rclb
jmp
cmpsb
cmp
loop
dec
dec
out
or
or
mov
sbb
test
or
cwtl
insl
add
jle
adc
pop
xchg
pop
and
adc
push
out
jae
lock
sbb
or
xor
inc
fwait
pop
jne
add
push
sub
pop
and
mov
and
push
add
stos
ss
mov
and
fwait
repnz
test
push
jge
out
jmp
inc
cmp
je
jp
mov
and
out
fxtract
bound
xchg
push
lds
es
push
leave
icebp
add
and
inc
ds
xor
fldt
dec
mov
push
mov
data16
es
shrb
mov
test
fucomip
mov
rcrb
jp
push
inc
pop
in
int3
add
sbbl
sbb
enter
mov
jnp
orl
pusha
pop
sti
push
xor
lods
cmp
repnz
and
xchg
jl
fimuls
mov
movsb
and
xor
add
enter
fdivrs
jmp
aad
sub
lret
jbe
insb
leave
fdivrl
in
rorb
stos
std
push
sbb
dec
push
mov
jne
stos
add
addr16
insb
ljmp
mov
pop
fwait
or
test
add
rcll
cltd
cs
or
jns
fwait
mov
iret
or
cmpl
cwtl
mov
mov
jbe
push
mov
mov
mov
test
xor
sbb
xor
adc
xchg
pop
ret
mov
pop
sbb
push
cmp
out
sahf
cmc
xchg
jb
jno
test
aas
adc
aam
lock
loope
out
sbb
sti
inc
test
cmc
mov
lret
jmp
mov
push
adc
mov
roll
addl
xor
xchg
addr16
push
pop
into
out
repz
cmp
cmc
es
xchg
pop
notl
repnz
pushf
bound
loope
pop
jge
stc
movsl
cmp
sub
addr16
jecxz
ret
lods
xor
inc
lock
nop
push
repnz
imul
pop
cli
cmc
lret
mov
push
outsb
rcrl
aad
sub
dec
outsl
dec
push
cmpsl
in
dec
shr
insb
or
repnz
jmp
rorl
add
sbb
add
xchg
mov
mov
mov
in
and
test
mov
das
jne
shrb
xchg
jnp
adc
adc
xor
int3
pop
in
sbb
enter
hlt
adc
adc
mov
out
call
add
mov
push
inc
sbb
arpl
mov
mov
adc
cwtl
mov
sub
pushf
pop
dec
push
push
xchg
popf
rolb
push
add
xchg
push
loope
stc
div
outsl
pop
cli
lock
loope
out
adc
push
stc
dec
insl
clc
sbb
daa
xor
xor
inc
ds
fldt
mov
mov
jbe
sbb
jge
mov
fsubs
addb
xchg
mov
nop
push
xchg
enter
xchg
xlat
test
mov
test
or
cmp
aad
stos
xor
lods
xchg
xchg
in
sub
sbb
popa
dec
xchg
jecxz
fnsave
mov
movsb
leave
or
adc
popf
dec
ss
cmp
arpl
scas
add
sbb
fstpl
jge
cmp
mov
std
inc
stos
in
pushf
sub
cmp
dec
ljmp
push
fistps
jp
mov
sahf
adc
push
cs
dec
xor
lods
shlb
and
sar
xchg
and
sti
xor
ss
add
mov
clc
nop
insb
out
ret
jg
push
adc
xlat
hlt
clc
loope
cmc
int3
inc
mov
push
mov
jb
and
out
push
jecxz
jnp
dec
sbb
or
test
pop
push
aaa
pushf
scas
ds
mov
cmp
inc
lahf
aaa
mov
xchg
out
into
pusha
adc
mov
stos
mov
jl
movsl
add
stos
push
test
lret
and
test
ja
and
fdivl
jnp
xor
repnz
xor
inc
jecxz
in
jbe
in
adc
pop
scas
repz
sub
jae
pop
adcb
jo
rorb
lock
cmp
icebp
lret
sbb
or
inc
mov
repz
inc
sub
and
in
fnstenv
xlat
push
ret
jo
or
mov
cmp
dec
lock
add
jnp
adc
cmc
or
sbb
insb
cmpl
pop
cwtl
les
jno
je
je
clc
dec
daa
dec
je
aam
outsl
test
mov
out
push
mov
test
or
fs
repnz
xchg
das
xchg
and
out
sbb
cmp
jmp
in
pop
cmp
pop
adc
pop
movsl
xchg
xor
addl
adc
add
sub
cmp
popl
mov
push
addr16
rcrl
in
dec
xor
into
out
xchg
push
xchg
aaa
dec
leave
decb
push
mov
fsubl
xchg
fdiv
in
add
cmpsl
jo
pop
and
jge
push
add
sbb
lds
lods
into
cs
aam
mov
cmp
mov
inc
rcrl
mov
je
mov
out
aas
inc
pop
daa
jge
sbb
loopne
cmpsl
or
in
jl
inc
pop
jmp
hlt
jne
outsb
adc
jne
xchg
cld
sbb
cli
test
arpl
push
cmpl
aas
sbb
test
mov
call
cmpsl
in
outsb
adc
sbb
std
push
push
mov
jp
hlt
mov
outsb
fisttpl
adc
daa
js
aaa
jbe
clc
mov
ljmp
lcall
test
inc
stos
sbb
dec
es
clc
dec
outsl
fbstp
repnz
lock
jge
mov
in
mov
push
mov
add
hlt
ss
movsb
fstpt
and
pop
dec
test
test
fmull
sbb
push
arpl
rcrl
xlat
nop
lods
inc
sub
mov
mov
add
or
push
adc
cmpsl
adc
sub
mov
add
imul
nop
ret
dec
insl
adcb
pop
scas
in
cmpsb
out
cmpsl
xor
inc
rcl
inc
sbb
or
xchg
js
or
dec
pop
push
fisttps
lock
sbb
mov
xchg
add
enter
movsl
popa
shrb
fs
add
sbb
mov
fwait
sub
repz
outsb
in
jecxz
add
clc
mov
pop
mov
pop
fisubl
sbb
std
adc
lcall
pop
cwtl
enter
sbb
nop
adc
xchg
sbb
inc
int
pop
pop
pop
insb
add
aaa
xchg
mov
fsubrl
jns
outsb
sbb
sub
cmp
lahf
fldcw
lods
mov
push
push
push
cmc
push
or
mov
jno
xchg
mov
push
cmp
mov
dec
clc
mov
push
gs
cmpsb
or
repnz
cli
cs
and
xchg
pop
mov
mov
sti
mov
mov
fwait
jecxz
flds
adc
cmp
stc
out
out
mov
xchg
clc
outsl
or
push
push
dec
mov
or
and
or
add
rcrb
cwtl
scas
movb
jno
test
cmp
out
mov
mov
inc
and
add
popa
add
xor
daa
fbld
test
mov
pop
out
add
jno
fildll
dec
push
mov
mov
pushf
adc
sub
sbb
adc
sub
imul
sbb
js
and
ss
mov
dec
mov
data16
xor
popa
int3
arpl
jg
test
push
jae
testb
out
ret
xlat
outsb
call
push
movsb
pop
sbb
mov
jo
sbb
imul
add
out
adc
dec
adc
roll
jmp
mov
popa
or
lods
jns
jg
xchg
std
rcrb
insl
xor
inc
hlt
int3
mov
pop
push
sti
inc
jb
or
mov
add
test
lret
sbb
pop
ss
cmpsb
fiadds
cmp
int
iret
out
xor
jns
lods
mov
call
daa
int3
out
loope
xor
stos
jmp
rcl
xchg
sbb
mov
lods
xchg
hlt
fsubl
test
xchg
data16
sahf
and
iret
das
sbb
jbe
jl
add
fnstsw
cmp
mov
mov
adc
enter
mov
jno
mov
push
pop
and
lahf
popf
out
push
insl
sahf
xchg
xchg
add
cmp
cmp
adc
ss
aad
sub
cltd
das
lea
sub
pop
pop
jmp
mov
mov
daa
std
out
sarl
adc
pop
imul
inc
mov
lret
sti
inc
inc
mov
sbb
mov
hlt
mov
xchg
xor
and
jns
test
xchg
adc
push
pop
or
movsb
xchg
mov
pop
sahf
and
cmc
or
loope
fwait
movsb
sbb
sarl
dec
lret
or
jp
mov
movsl
pop
sbb
xchg
xchg
push
in
adc
sub
mov
sub
rol
jnp
xlat
aas
jge
mov
pop
mov
sahf
lods
addr16
in
inc
sbb
divb
stos
xor
daa
vmaxss
xchg
xchg
mov
fs
rcrb
popf
sbb
push
adc
mov
xor
add
lcall
movl
insb
cs
dec
or
jl
xchg
push
or
movsl
cli
jns
int3
repz
add
fdivrs
mov
pop
std
jb
mov
int3
inc
xor
and
out
mov
push
cmpsb
pop
and
sub
daa
popa
jb
lea
mov
in
xor
fucomi
pop
sub
xchg
sbb
xor
shlb
sub
popf
sbb
mov
cmpsb
jmp
fdivp
inc
jp
mov
mov
fldt
sub
mov
mov
pop
aas
testl
jae
cmp
fsubr
sbbb
leave
or
mov
cmp
and
sub
add
sub
push
clc
out
cwtl
xlat
lcall
out
push
int
jp
call
les
repz
rcrb
xlat
mov
sar
daa
test
fistpl
and
mov
lret
add
jecxz
fstpt
dec
pop
mov
popa
shlb
aaa
push
sub
jecxz
filds
pop
rcl
or
in
cmp
xchg
in
sub
lods
shlb
adc
sahf
shl
mov
dec
push
cld
adc
rcl
pop
fmulp
push
mov
sub
test
js
lcall
ljmp
add
mov
add
loopne
or
imul
ret
cltd
lock
jecxz
jp
fcoms
bound
cmp
mov
push
cmpsb
aam
bound
mov
inc
addb
gs
scas
cltd
shlb
fsub
xchg
adc
adcl
lret
push
mov
in
jl
sub
icebp
lret
adc
adc
and
push
adc
pop
push
mov
or
and
sbb
rcll
lret
clc
xor
es
jecxz
or
adcb
add
push
mov
sub
xor
adc
scas
mov
or
cmp
lret
call
bound
aam
jge
inc
rorb
sbb
xchg
aam
sbb
dec
std
xor
mov
lcall
addr16
mov
jns
insl
fcoml
addr16
fiadds
inc
mov
test
fadd
push
icebp
jmp
pop
xor
mov
xchg
mov
testl
mov
lret
mov
mov
lret
outsb
mov
lods
inc
icebp
push
and
daa
adc
jbe
mov
mov
outsl
and
pop
or
sbb
aas
cmpsl
out
int3
mov
xor
data16
mov
scas
aas
nop
aaa
mov
fwait
inc
dec
test
mov
or
ret
mov
sub
arpl
das
pop
cmp
jb
jl
js
fdecstp
or
and
test
push
test
test
mov
mov
adc
cmp
icebp
pop
mov
and
out
aaa
lods
push
out
inc
mov
pop
adc
xlat
ficomps
stos
mov
add
out
pusha
scas
jae
popf
ret
mov
loopne
icebp
jae
push
jp
mov
sbb
cmp
xor
nop
jp
sub
jg
mov
sub
fsubl
jno
cs
inc
test
das
mov
cmp
stos
gs
into
jmp
xchg
cwtl
data16
adc
jae
cmc
call
scas
mov
xlat
negl
pop
movsl
or
push
lods
pop
insl
rcr
data16
in
popf
xlat
and
mov
lcall
aaa
add
mov
pop
and
std
xchg
and
hlt
in
rcl
out
clc
mov
dec
pop
add
nop
push
push
fnstcw
lods
rcrb
ret
das
lea
xchg
pop
or
add
inc
or
mov
mov
jnp
popf
xchg
mov
mull
sbb
fsubrl
mov
xor
mov
scas
aas
pop
test
int
and
jmp
filds
push
outsb
icebp
fcmovb
fiaddl
mov
paddq
jne
fisttpl
jb
xchg
andb
sti
jbe
adc
int3
mov
cmp
jbe
loope
in
test
in
or
push
or
loop
inc
adc
mov
and
loopne
leave
jle
popa
loopne
and
pop
mov
sbb
mov
mov
insb
fs
stos
stos
pop
xor
dec
adc
popa
imul
test
clc
xor
mov
pushf
repnz
inc
and
nop
pop
fidivl
insb
sbb
jmp
adc
xor
push
xor
mov
sub
jmp
scas
push
push
dec
mov
inc
js
pop
mov
add
das
sub
addr16
and
addl
ret
stc
ret
into
sub
sbb
icebp
jecxz
lock
pop
popa
sub
sbbl
pop
pushl
pop
jno
js
pop
xchg
cld
xchg
inc
xchg
push
stos
lret
add
fcmovbe
jl
adc
fiadds
popf
push
push
bound
and
test
mov
faddl
testb
pop
xchg
aam
cmp
dec
shl
or
inc
xchg
out
mov
lods
subb
ss
and
dec
add
push
mov
sbbb
testl
and
fisubrl
mov
or
in
int3
test
je
pop
mov
mov
lods
and
je
and
pop
xchg
call
inc
add
xchg
jg
inc
mov
fsub
pop
mov
clc
cmp
popf
mov
outsb
xchg
mov
dec
add
mov
mov
adc
add
jb
or
and
js
rorb
addr16
cltd
sarl
test
movsl
add
je
test
lods
rcrl
shl
fistps
pop
pop
push
adc
pop
mov
mov
je
push
nop
dec
mov
int3
cmp
sbb
imul
out
aam
gs
xchg
jl
dec
pop
pusha
add
add
push
inc
pushf
out
dec
enter
rolb
xchg
in
pop
cltd
mov
cmp
xchg
add
xchg
mov
jns
lret
push
rcll
fiaddl
mov
pop
out
arpl
ss
movsl
scas
xchg
mov
lds
inc
dec
and
or
jne
stos
scas
pop
xor
daa
daa
add
in
xchg
cli
xor
faddl
pop
enter
bnd
call
sbb
mov
rclb
push
aaa
inc
or
imull
sub
das
daa
sub
push
dec
inc
cmp
xchg
xor
sub
push
std
dec
xchg
cmp
sub
call
in
pop
enter
and
xor
xchg
cltd
es
aas
jmp
xlat
test
pop
in
jne
inc
pop
outsb
mov
jge
lds
pop
fcoml
sub
sub
out
outsl
cld
push
test
xchg
arpl
lea
lret
out
fnsave
jb
out
cmpsb
dec
pop
xchg
xor
pop
orl
insl
inc
push
sti
scas
add
out
ljmp
pop
es
loopne
hlt
movsl
imul
out
scas
pop
xchg
fcompl
xchg
ror
fwait
inc
jns
ds
ja
ret
push
icebp
add
mov
jg
aam
xor
push
mov
cmp
pop
andb
rcl
in
sub
inc
sub
sub
ficoms
mov
arpl
fxch
mov
test
dec
dec
int3
sub
in
push
testb
hlt
sub
mov
sahf
ds
jmp
in
pop
dec
xchg
push
test
testl
test
ds
mov
and
fidivl
je
ss
xchg
in
cmp
ss
icebp
loope
ljmp
sbb
jg
aaa
add
clc
aaa
pop
sbb
push
test
scas
xor
mov
cs
mov
out
mov
cmpsl
xchg
xor
jmp
adc
mov
xchg
push
push
xchg
add
mov
push
out
out
sbb
mov
int3
js
mov
and
cmp
lret
push
in
es
aas
in
out
out
pushf
es
aas
lret
hlt
inc
gs
rclb
rol
cltd
scas
sahf
mov
mull
adc
push
cwtl
js
pop
jg
jge
inc
movsb
pop
ja
insb
pop
pop
pop
mov
pushf
cmp
xor
mov
dec
add
jle
nop
jecxz
mov
or
or
popa
or
and
push
cltd
cmp
mov
jae
ss
int
int
xchg
push
mov
jl
add
mull
rorb
das
pop
sarb
push
sub
frstor
nop
mov
mov
aad
push
push
pop
xor
ret
sahf
loop
mov
les
or
and
push
sbb
nop
in
ret
push
leave
jno
and
cwtl
pusha
xchg
int3
pop
add
sub
test
push
loopne
cltd
xchg
out
push
pop
and
or
outsl
and
inc
dec
or
or
jge
sbb
mov
mov
cmpsl
mov
inc
inc
shr
pop
aad
mov
xchg
scas
mov
sti
add
scas
gs
inc
mov
orl
js
add
mov
ret
xor
movsb
or
roll
cmp
stos
push
js
mov
push
mov
pop
push
ret
cld
pop
std
xchg
lahf
or
in
rolb
rolb
mov
mov
xchg
pop
jl
pop
movsl
cmpsb
mov
aas
std
sub
cmp
jge
xor
add
xor
movsl
stos
mov
sbb
push
adc
nop
lcall
fnstcw
fisubrl
jge
ret
jmp
ret
shlb
fistpll
call
sub
fcomps
dec
fimull
fiaddl
sub
xchg
stc
cltd
popf
add
in
ja
rcrl
lock
mov
in
popa
xor
push
nop
push
test
insb
fxch
jg
lock
enter
es
movzwl
pusha
pop
int3
test
add
mov
sarb
loop
test
es
cmpsl
out
cli
outsl
xchg
dec
inc
xchg
lahf
imul
ds
add
sub
cmp
sbb
fistpll
test
ret
stos
test
cmp
leave
mov
adc
jmp
leave
jbe
aaa
dec
adc
sarb
push
or
stos
mov
and
mov
jp
jg
mov
inc
xchg
cmc
sbb
jle
fwait
add
xchg
xor
lret
mov
out
in
shll
sub
mov
xchg
xor
in
jg
clc
or
out
fcomi
cmp
or
pop
jp
das
cltd
mov
les
dec
push
push
loop
mov
aas
xor
sbb
and
cwtl
stos
mov
and
pop
jae
jmp
adc
or
mov
push
sub
push
stc
lea
jnp
push
inc
inc
call
mov
dec
push
push
inc
xchg
cmpsb
pop
jns
sub
cltd
sbb
pop
es
mov
cmp
call
idivl
cwtd
rcr
pop
pop
mov
popa
inc
push
idivb
push
stos
mov
ljmp
mov
popa
fisubs
leave
sub
int
lock
xor
push
cmp
sbb
outsb
dec
subl
daa
sbb
fxch
pusha
mov
xchg
das
decl
pushf
cwtl
adc
jne
sahf
cs
add
test
cmp
in
inc
in
aad
sub
ret
inc
scas
lcall
mov
cmp
das
add
jg
sahf
test
es
dec
or
sbb
arpl
mov
pop
lods
enter
inc
call
xchg
inc
pusha
mov
out
daa
movlps
inc
stos
stc
gs
je
dec
sbb
aad
sub
outsb
push
xchg
in
mov
mov
pop
out
orl
cld
xchg
jns
iret
cmp
add
leave
sub
shrl
in
inc
into
cwtl
inc
dec
xlat
xchg
out
mov
aas
add
xlat
das
mov
imul
stc
dec
shll
push
jns
outsl
sub
lahf
jp
mov
xor
jb
adc
jo
imul
imulb
loope
icebp
pop
xchg
mov
in
ds
push
lahf
mov
test
and
cmp
xchg
push
xchg
outsb
data16
outsb
lods
mov
pop
dec
jl
loopne
fnstenv
js
insl
out
clc
mov
jb
int
arpl
lods
mov
arpl
test
hlt
cmp
adc
push
cmc
out
mov
stc
insl
push
mov
pop
push
xor
and
nop
xchg
rcll
sub
adc
push
dec
in
inc
aas
jmp
mov
jg
ret
or
dec
push
scas
shl
addl
mov
cmpsw
fisttpl
xor
and
push
sub
jb
call
aaa
xchg
dec
sub
cmp
push
rol
loopne
mov
pushf
subb
int
mov
or
xchg
jne
jmp
outsb
in
scas
sbb
mov
pop
js
out
bound
out
xchg
pop
push
pusha
mov
movq
data16
add
in
scas
outsl
jmp
out
lea
int3
pop
pop
xchg
mov
jno
pmuludq
arpl
jg
pusha
pop
sbb
pushf
cmp
cli
fstl
and
cli
pop
lock
test
mov
xchg
fisubs
pop
out
or
pop
loope
inc
stc
sbb
xlat
push
jb
sti
daa
lcall
cmpsb
stc
loopne
jg
push
mov
nop
jne
int3
adc
jle
or
fwait
mov
into
jns
mov
mov
mov
mov
jecxz
enter
adc
mov
inc
jno
out
inc
inc
xor
dec
inc
mov
cmpb
pop
mov
lahf
xchg
and
adc
sbb
aas
das
scas
loopne
cmp
or
mov
sub
xchg
inc
adc
pop
bnd
mov
std
loop
in
fbstp
dec
pusha
sar
popa
inc
gs
fsts
push
pop
fsubs
mov
mov
ljmp
pusha
fldenv
lret
sbb
aaa
test
call
lock
fucomp
cmp
rcrb
popf
out
popf
dec
ljmp
mov
lcall
rorl
cld
ja
jl
mov
mov
cmpb
fwait
or
and
sub
xchg
inc
adc
cmc
jg
mov
sub
dec
xor
inc
adc
push
bound
mov
loopne
insl
test
mov
mov
jle
outsb
shr
xchg
fldl
stc
push
pop
mov
and
mov
stc
mov
fbstp
sub
loopne
xor
xchg
add
pushf
xchg
xchg
pop
and
pop
lret
lahf
pop
mov
adc
cmp
loopne
add
subl
pop
insb
push
cli
mov
jbe
cmpsb
popa
fcomp
inc
pop
jmp
fnstsw
imul
in
shlb
nop
popf
cmp
jnp
stc
pop
cwtl
push
push
pusha
cmpsb
jmp
inc
sarl
out
inc
into
ror
mov
mov
pop
push
shlb
push
scas
pop
ret
adc
xchg
adc
dec
lcall
cmpsb
enter
inc
sub
ja
xchg
decl
cmpb
sbb
mov
loope
inc
in
sbb
mov
out
xlat
dec
push
mov
jmp
stc
cwtl
popf
jo
mov
rorl
jge
inc
or
test
dec
dec
sbb
popl
popa
add
popf
and
jb
inc
fisubs
and
mov
adc
je
add
addr16
dec
repnz
or
outsb
mov
in
imul
cli
xorl
mov
xchg
adc
fistl
jae
shll
and
insl
sbb
lret
pop
xchg
sub
adc
loope
out
cmpsl
adcb
cmp
mov
outsb
cli
jmp
mov
xor
insb
rcrb
test
sbb
adc
jle
dec
mov
fisubrs
dec
push
cld
jp
xor
jl
icebp
push
xor
jnp
push
test
cmp
imul
jecxz
insb
sbb
jecxz
add
jg
cld
and
clc
mov
shll
adcb
scas
inc
pop
or
xchg
test
or
insl
jne
out
xchg
mov
fcoms
lods
lret
outsb
loope
mov
mov
pop
or
mov
insb
arpl
jnp
or
sub
pop
fdivrl
jecxz
cltd
das
xchg
test
andl
inc
mov
test
push
pop
mov
je
cmovs
into
push
ss
pop
dec
fldcw
jb
inc
sub
cld
xchg
arpl
ds
test
jns
add
mov
adc
gs
insl
mov
stc
mov
jecxz
mov
sub
cmc
movsl
setbe
adc
dec
shll
mov
out
jns
xor
sbb
test
inc
xchg
and
leave
mov
mov
pop
outsl
mov
inc
and
jg
imul
pop
clc
xor
xchg
repz
sub
mov
sbb
sub
loop
hlt
loope
lods
xor
cmpsb
pop
lret
xor
repnz
add
push
lock
sets
adc
add
mov
pop
xchg
mov
jmp
pop
sub
push
jmp
movsb
add
out
xchg
dec
jp
pushf
mov
dec
pop
adc
pop
ljmp
aam
ds
test
jb
cld
push
jo
aam
enter
dec
inc
leave
cmpb
dec
call
jbe
push
push
jp
push
lret
test
icebp
inc
jmp
xchg
xchg
fsubrl
iret
adc
cmp
lahf
js
scas
inc
ret
flds
inc
cmp
xor
ret
aas
aam
lret
xlat
out
fwait
push
xchg
dec
scas
and
cs
loop
xor
xor
jns
mov
cltd
push
inc
mov
inc
rcl
cltd
sbb
cmp
inc
jae
data16
int3
mov
pop
add
fidivrl
scas
scas
scas
outsl
int3
xchg
leave
sub
fsubs
in
fistps
sti
ja
pop
adcb
aas
lea
into
in
pop
out
mov
repz
pop
sbb
sahf
fiaddl
or
pop
jae
jg
bnd
mov
into
aad
loope
sub
cltd
or
fs
arpl
adc
repz
sbb
repz
scas
sub
add
lods
stc
lds
add
push
cs
xchg
adc
inc
imul
lods
add
data16
inc
test
mov
push
bound
pop
int3
aas
pusha
aaa
lea
mov
cmp
ror
into
lret
push
loope
ja
sbb
jmp
shrb
mov
insb
or
jns
lret
shlb
fcompl
mov
sub
imul
cltd
adc
cmpsb
lret
cmc
push
scas
sbb
cmpb
mov
xchg
loope
leave
jl
and
dec
inc
and
std
and
or
jge
jnp
gs
shl
push
movsl
rorb
shrl
add
cli
cld
inc
mov
sbb
nop
cli
pop
add
testl
je
js
add
dec
pop
ljmp
adc
imul
mov
enter
add
fs
adc
dec
hlt
push
decl
outsb
cli
popf
dec
dec
adc
movsl
mov
cld
lcall
outsl
xlat
dec
jp
inc
ret
or
popf
decb
stos
movsl
stos
movsb
xor
xchg
gs
sub
sbb
jl
fcmove
xor
jmp
pop
icebp
pop
repnz
loopne
mov
movsb
or
bound
mov
mov
mov
dec
or
pop
pop
mov
mov
test
jmp
ljmp
mov
es
mov
divl
mov
or
xchg
inc
repnz
mov
gs
inc
in
xchg
xor
cmp
fimuls
mov
cli
or
mov
push
out
mov
shrb
addb
lea
imul
aam
movl
push
add
iret
pop
out
mov
cs
insb
dec
in
sub
stos
push
inc
pushf
pop
ds
rolb
sbb
mov
js
roll
repnz
dec
inc
pop
push
jmp
add
mov
jb
inc
xchg
dec
xor
outsb
mov
pop
mov
and
jmp
call
js
or
or
inc
fwait
push
mov
mov
jmp
enter
icebp
and
je
add
fwait
cmp
lods
xchg
in
scas
lret
out
sbb
arpl
in
jp
pop
inc
int
repnz
repz
sbb
add
jb
div
sub
pop
mov
outsl
jg
cli
add
inc
push
lods
cs
repnz
mov
vpshaq
xorb
pop
pop
imul
xchg
lea
sub
outsl
jae
cli
aam
jmp
mov
stos
add
xchg
aam
mov
lds
jle
bound
dec
cld
mov
stc
xchg
out
sub
xor
mov
cs
scas
leave
pop
xchg
outsb
add
sub
bound
xchg
xchg
inc
cmpsb
je
cmp
jae
dec
wrmsr
inc
adc
and
lahf
loope
out
sub
xor
and
cmp
pop
xchg
lret
aas
mov
icebp
mov
xor
adc
adc
or
les
jns
mov
ret
cld
into
pop
mov
cltd
icebp
std
push
xor
push
ret
push
fs
cmp
mov
es
sub
sub
loop
psrlw
repz
lcall
dec
push
jbe
inc
cmp
sbb
push
push
in
sbb
les
cmp
jns
repz
js
testl
mov
inc
cmpsb
out
sbb
sbb
out
ret
pop
jl
iret
jmp
stos
cmp
mov
mov
mov
push
lea
push
fsubrs
jmp
outsl
mov
inc
icebp
pop
sbb
faddp
push
sub
icebp
xchg
pushf
test
sarl
inc
and
or
dec
mov
lret
mov
mov
sti
inc
sti
int
or
repz
inc
jge
test
nop
mov
jne
aaa
add
adc
xchg
cmp
dec
in
into
jbe
dec
iret
inc
inc
mov
mov
xchg
aas
dec
lret
mov
xlat
ds
xchg
pusha
int
sbb
test
jg
sub
sub
mov
int3
xchg
mov
lret
fnstsw
push
sbb
fadd
daa
jg
out
addr16
mov
icebp
arpl
pushf
aad
inc
shll
int3
lcall
xchg
shrl
ljmp
push
popa
mov
mov
xor
push
hlt
int
ficoml
add
lds
push
aaa
and
add
andb
mov
and
mov
inc
adc
jb
test
lret
mov
or
into
sub
mov
add
subl
test
dec
lcall
ficoml
hlt
adc
mov
sub
sub
sarb
add
js
sbb
or
ss
mov
mov
adc
add
mov
sub
pop
xchg
mov
sub
lea
xor
xchg
or
dec
dec
pop
in
cmp
add
xor
mov
or
cltd
add
fsubl
lret
test
enter
daa
sahf
dec
jnp
movsb
push
jo
fsubrs
xchg
pop
leave
mov
fsubrl
and
je
mov
movsl
add
ret
es
fsts
ret
cmp
push
aas
flds
sbb
jo
xor
mov
sbb
add
rol
mov
negl
loop
pop
mov
xor
out
shl
cmpsl
lods
aam
in
loop
pop
test
sbb
xchg
test
xchg
mov
adcb
orb
sbb
dec
mov
lods
or
or
movsl
xchg
repnz
xchg
inc
jg
ljmp
test
pop
pop
aaa
push
and
cmp
in
out
loopne
call
test
pop
mov
cmp
inc
into
into
int
sbb
ror
cmp
push
jg
ljmp
lcall
xchg
jnp
jnp
cmpsl
mov
mov
xor
add
dec
fwait
sbb
das
or
cmp
and
and
xchg
jmp
xor
inc
in
mov
mov
mov
loop
andl
in
ret
jl
hlt
sti
sti
mov
xor
xchg
in
mov
lods
andb
aas
arpl
aaa
jecxz
adc
dec
xor
pop
jp
inc
insl
xchg
cmp
add
in
jmp
mov
cmp
dec
pop
and
xor
mov
data16
fisttpll
xor
pusha
lret
cwtl
ja
pop
inc
ss
clc
in
adc
mov
sbb
push
insl
xor
das
minps
xor
jl
adc
aad
in
jp
test
test
jbe
stos
sbb
sahf
fldt
rorb
sbb
add
sub
ja
and
push
mov
ret
xchg
or
popf
xchg
test
mov
movq
push
sub
sub
in
fldt
jge
lods
movsl
mov
loop
ficoml
pop
aaa
xchg
add
mov
add
loopne
iret
inc
and
jle
and
ret
fildl
xorb
cmp
cltd
xchg
mov
mov
sbb
jp
data16
jbe
pop
orb
inc
arpl
cmp
gs
pop
dec
mov
test
push
jae
xor
dec
jb
adc
outsb
sbbl
mov
and
sbb
sbb
push
testl
push
sub
jo
movsl
sbb
testb
push
push
adc
lahf
push
push
in
or
mov
add
popf
or
sub
or
out
call
pop
das
and
sub
popf
inc
mov
fs
mov
pop
mov
cli
in
xchg
jb
sub
outsl
ficoms
push
sbb
repnz
es
push
loop
pop
lds
push
inc
leave
sub
inc
movsl
cli
shr
pop
adc
loopne
sbb
das
push
ljmp
sarl
lds
and
mov
jle
jp
lcall
jl
movsl
jge
daa
dec
into
sbb
xor
push
push
or
fcompl
fnstenv
ja
push
sahf
pop
xor
fwait
xor
icebp
roll
push
in
lods
cmpsb
mov
add
iret
adc
sbb
jl
adc
cmpsb
sbb
add
mov
lret
lock
adc
movl
movsb
aas
jo
sub
insl
sub
out
out
dec
cmp
jg
xlat
movsl
sbb
xor
ja
sub
in
mov
mov
adc
js
mov
enter
leave
push
push
pop
cld
mov
mov
xchg
mov
sbb
mov
jne
fs
xchg
fadd
icebp
or
in
mov
xchg
add
mov
sbb
sbb
sbb
test
lahf
sub
mov
adc
cmp
ret
and
dec
jae
xor
push
lcall
stc
faddl
jle
xor
sub
adc
push
dec
mov
adc
and
incb
jmp
movb
imul
daa
push
ret
xchg
pop
shll
imul
cltd
dec
mov
daa
ljmp
cmpsb
lcall
xor
fiaddl
cmp
std
or
mov
mov
pushf
sbb
sahf
insl
imul
push
cs
mov
push
xor
dec
jbe
std
jmp
sbb
dec
push
ja
addr16
fsts
push
inc
cmp
mov
pop
add
push
cmp
mov
icebp
sbb
adc
in
orl
rorb
adc
mov
jp
xor
fcompl
push
popf
lods
add
sbb
int3
addb
pop
fbld
and
push
cltd
xor
rorb
in
or
pop
fmulp
movq
push
inc
in
cmp
add
inc
fs
out
add
sbb
pop
lods
dec
mov
in
insb
subb
adc
dec
int3
sbb
popf
jns
mov
cwtl
loope
cmp
test
ss
mov
bound
mov
pop
xor
cmp
mov
aam
jo
fs
jmp
and
scas
repz
xchg
push
arpl
xchg
loop
les
fldcw
mov
cmp
loop
jle
fcmovbe
and
pop
push
loop
dec
enter
rcrb
pop
cmp
into
test
xchg
cmp
jg
test
and
inc
scas
push
push
mov
stos
push
adc
in
xor
sbb
push
dec
ret
sbb
pop
inc
cli
imul
jmp
mov
add
call
int3
lock
mov
inc
jg
into
push
test
cmp
jl
dec
jmp
mov
in
xor
lods
jmp
or
aaa
xchg
paddsb
add
sub
dec
mov
or
cltd
loop
addr16
movsb
xchg
stos
lret
mov
test
popa
and
mov
push
xchg
movsb
es
mov
decb
mov
lcall
or
mov
fists
sub
dec
push
mov
sub
mov
shlb
fimuls
loop
cmp
lret
cld
mov
hlt
sbb
idiv
gs
or
cmpsl
mov
mov
inc
arpl
enter
cmp
add
sbb
rclb
cltd
movsb
hlt
push
test
ja
xor
lods
pop
push
inc
dec
out
mov
test
icebp
xchg
arpl
test
cmp
jb
lcall
add
out
mov
pop
aad
js
out
sahf
cmp
in
sub
mov
vpsrlq
cmc
or
and
xor
rclb
adc
rcl
pushf
fsubs
cmp
insb
testl
push
dec
push
cwtl
dec
ret
fwait
pop
lock
or
mov
cmp
and
dec
sub
and
insb
pushf
adc
movsl
xchg
orl
icebp
shll
cmpsl
cmp
sub
xchg
loope
push
add
mov
jecxz
or
pop
daa
inc
cmpsl
cmp
mov
aam
jb
cmp
jnp
shl
mov
jle
shrl
mov
cmp
xor
adc
nop
dec
push
fidivrs
pop
xchg
or
mulb
cs
sbb
push
mov
call
pop
lret
xor
std
adc
add
inc
lahf
shrb
push
dec
sub
or
sub
dec
add
sub
xor
sbb
sbb
fcom
movsb
sbb
das
in
mov
pop
outsb
in
sbb
ficompl
adc
mov
pusha
out
pop
push
inc
movsb
push
loop
push
insl
xor
insb
jno
jmp
mov
jns
outsl
shll
inc
sub
jae
adc
leave
jb
lods
inc
sbb
lock
mov
std
adc
dec
or
aaa
mov
inc
movsb
inc
adc
push
out
test
out
mov
adc
mov
inc
loop
in
stos
jg
inc
mov
cwtl
jbe
mov
mov
and
sarb
test
and
mov
icebp
sbb
sub
jg
cwtl
mov
imul
movsb
cwtl
jge
sbb
xor
xchg
mov
inc
fimuls
jbe
dec
into
lahf
or
push
popa
push
fdivs
cmpsb
add
jno
subl
push
aaa
sub
rcrb
pop
xchg
push
test
lds
mov
mov
bound
mov
dec
push
or
inc
jge
andb
pop
push
bswap
adc
jmp
mov
iret
cltd
or
mov
outsb
bound
push
ja
mov
dec
int3
pop
xchg
sarl
out
add
mov
push
sbb
fidivs
mov
ret
in
imul
sub
sbb
call
push
jle
xor
lret
in
sbbb
jl
call
and
mov
inc
mov
pop
dec
fildl
hlt
mov
sar
add
mov
xor
nop
mov
jb
jle
fdivr
push
movsb
inc
or
dec
add
sbb
cmp
imul
aam
mov
jge
xchg
loopne
mov
loopne
popf
daa
push
js
adc
fidivrl
test
in
inc
jle
jle
push
gs
xchg
sub
loopne
aas
pop
cs
pushf
pop
int
aad
sahf
pop
mov
sti
cmp
adc
jge
sbb
mov
int
push
xchg
es
insb
sbb
call
sbb
pop
jecxz
pop
push
sbb
or
addr16
stc
out
cmpsb
lret
jl
pop
sub
sahf
xchg
fistpll
pop
mov
fistpll
iretw
ss
sbb
icebp
gs
repnz
scas
jns
pop
fistpll
pushf
fwait
xor
jns
repz
arpl
loope
inc
dec
sbb
mov
aam
inc
xor
cmp
push
mov
in
insl
push
adc
jmp
stc
popf
sbb
stc
cmp
mov
inc
cmpsl
fistpl
xlat
dec
in
cwtl
js
jecxz
dec
mov
int3
repz
pop
add
inc
pop
fldt
insl
mov
inc
mov
add
inc
jg
or
frstor
mov
dec
cmp
out
sti
outsl
cli
pop
push
pushf
sbb
push
call
xor
jb
add
lds
repz
push
fsubrl
ljmp
push
jp
push
cs
push
std
pop
adc
push
lret
stc
cmp
sub
lods
in
out
mov
lcall
mov
mov
enter
bound
ja
and
cmpl
adc
mov
flds
js
pop
adc
mov
jns
inc
data16
addr16
and
out
sbb
int
rcr
add
add
add
call
pop
cli
sbb
push
pushf
int3
sbb
adc
adc
notl
jbe
cmc
sub
sub
lods
dec
imul
xor
stc
in
push
test
in
int
xchg
sarl
lods
cmp
or
shll
mov
mov
mov
stos
jns
sahf
mov
pop
inc
scas
cmp
lea
fsubp
fisubrs
xor
push
mov
faddl
adc
subl
jmp
inc
ja
out
shrb
jp
iret
int
jecxz
and
mov
in
mov
dec
mov
xchg
and
inc
aaa
mov
loope
xchg
cmc
mov
xchg
mov
xchg
fcomp
hlt
enter
imul
ljmp
jecxz
loope
insb
pushf
push
sbb
movsl
push
daa
mov
ret
aam
out
push
xchg
pusha
sbb
pop
inc
pop
dec
pop
mov
pop
mov
cmpsl
addl
push
cmp
inc
jne
xchg
aas
lahf
xchg
or
pusha
cmp
push
mov
int3
ret
test
arpl
inc
popf
shr
jecxz
cmp
sbb
jecxz
xchg
xchg
and
adc
sbb
je
dec
or
test
stos
shr
cld
mull
js
cmp
nop
xchg
mov
fwait
pop
jae
jb
add
lods
mov
jle
ja
inc
rcl
cmp
out
lock
push
std
outsb
or
or
icebp
jecxz
dec
jmp
aaa
jae
movsl
sub
clc
fwait
lret
mov
and
jl
sbb
or
int3
rcr
sub
mov
std
bound
jnp
imul
in
cmc
add
fwait
lods
pop
sbb
adc
jae
sub
das
roll
push
test
sbb
gs
pop
xchg
push
or
iret
sub
pop
mov
dec
cmp
jge
push
add
jb
jae
mov
dec
test
push
cli
cltd
push
xchg
cmp
sar
icebp
pop
rcrb
das
inc
fcmovnbe
imul
sub
mov
mov
push
fisttpll
or
or
test
mov
sarb
mov
cli
lock
dec
in
fisubrs
ja
movsb
cmp
push
mov
aas
add
pop
repz
into
insl
lods
sub
dec
jne
push
cld
dec
clc
movl
jp
dec
mov
push
data16
mov
arpl
lcall
hlt
or
in
pop
xor
aaa
fwait
mov
js
fs
push
mov
lret
mov
add
inc
jl
xchg
pop
pop
inc
faddl
stos
push
xor
unpckhps
mov
subb
clc
stc
fs
mov
pop
xor
mov
mov
movhps
into
push
loop
mov
jecxz
mov
inc
out
push
inc
and
dec
inc
int
inc
sahf
xor
into
dec
or
scas
in
cmp
jnp
jns
cld
xlat
lock
push
imulb
fsubrs
addb
mov
ljmp
imul
popf
sbb
add
jl
xor
in
sarb
xorb
ret
xchg
xchg
push
call
loopne
or
mov
dec
lock
cltd
ret
jo
test
xchg
jbe
cmp
outsl
jl
mov
sahf
out
mov
scas
xchg
movsb
jmp
ret
and
sub
and
movsl
mov
popf
nop
lods
and
mov
outsb
lahf
arpl
or
loopne
inc
out
lds
fs
jmp
mov
sarl
adc
in
cld
lret
or
cwtl
mov
push
inc
stos
jbe
getsec
inc
sub
adc
into
sub
adc
dec
jns
cmp
fiaddl
mov
sbb
jmp
addr16
or
sbb
mov
int3
xchg
mov
mov
movsl
dec
adc
stos
dec
mov
jne
out
jp
xor
sbb
cmpsb
sbb
add
pop
lock
andb
sub
mov
adc
ss
icebp
mov
jge
mov
jae
fucomip
jp
jge
leave
xchg
and
es
or
call
icebp
adc
sub
push
rcr
sub
mov
dec
xor
outsb
dec
inc
sbb
pop
lcall
mov
and
add
jecxz
lds
jae
inc
andb
add
je
dec
ss
add
mov
fisttpl
aad
xor
test
int3
push
add
mov
int3
push
xchg
mov
inc
jae
imul
and
loope
out
cmp
mov
aad
add
adc
ror
pop
jo
popa
and
push
lock
test
sar
push
jae,pn
cmp
movsb
push
std
jle
jmp
int3
xor
aam
mov
insl
jl
dec
imull
push
and
dec
jge
inc
or
cld
pusha
xchg
loop
mov
mov
mov
int
subb
lss
fsts
js
push
ja
hlt
mov
push
cld
mov
sahf
jae
cwtl
rcrl
in
popa
sub
cmpsb
jae
xor
add
inc
inc
inc
ficoms
mov
negl
inc
push
lods
aad
xchg
pop
sbb
inc
xchg
ud0
movsl
cmpb
aaa
pop
sbb
test
and
xor
test
cli
mov
mov
je
and
push
lret
fstpl
fmull
pop
add
push
pop
push
jne
cmp
test
mov
repz
out
lods
aas
nop
mov
or
or
orb
jb
fbstp
stos
call
insb
je
ss
ret
sbb
mov
icebp
movsl
jge
scas
into
ja
or
jae
inc
popf
and
int3
jge
mov
xor
hlt
add
and
push
xchg
jg
or
movsb
repnz
les
sbb
xor
push
mov
in
js
xchg
das
pushf
cmpsb
orl
pop
shrb
jg
insl
lds
imul
loopne
push
xlat
push
mov
bound
lret
test
lods
mov
push
aas
scas
cmpsb
xor
dec
inc
adc
inc
ja
add
pop
cld
aas
sub
testl
iret
std
dec
add
iret
or
daa
dec
cmc
in
add
xchg
fdivrl
inc
fs
je
fisubl
xor
adc
and
and
mov
out
mov
push
out
cmp
into
xchg
test
jo
js
and
sbb
test
popf
jp
mov
mov
in
daa
sub
and
sub
pop
push
xor
or
cld
fcmovbe
jns
lret
rcrl
sub
and
cwtl
sbb
rorb
and
jg
je
imul
imul
cs
cmpsl
mov
inc
inc
mov
inc
add
repz
cld
in
dec
add
ljmp
inc
inc
xor
jg
test
test
lahf
lods
mov
xchg
xchg
or
dec
xlat
test
mov
mov
in
mov
xchg
add
lea
xor
cwtl
push
sahf
daa
daa
xor
lcall
ret
sbb
in
pop
sbb
cli
sbb
or
jb
int3
mov
mov
or
adc
xor
and
sti
sub
dec
add
scas
xchg
dec
mov
pushf
or
cmp
cs
push
ljmp
fsubrp
int3
lods
shll
xor
popa
je
jp
mov
push
xor
scas
pop
das
mov
cmp
roll
mov
mov
push
adc
mov
sbb
lea
push
mov
xlat
add
mov
in
stos
inc
lahf
add
add
inc
mov
sti
movsb
cwtl
out
scas
mov
mov
pop
fistpl
ss
call
repnz
xchg
sub
xchg
fs
stos
inc
shlb
filds
lret
and
mov
adcb
push
es
fdiv
pop
mov
arpl
jmp
dec
pop
jp
mov
int
stc
insl
outsl
mov
xchg
xorb
mov
xlat
cmpsb
outsb
ljmp
and
pop
fsubl
cltd
mov
test
movsb
xchg
xchg
mov
mov
jl
mov
in
sub
jne
adc
mov
cmp
jl
testl
push
or
hlt
es
and
adc
inc
cld
xor
fidivrs
arpl
out
dec
jae
jns
add
add
addr16
xor
js
jecxz
pop
stos
test
cs
jno
subb
jae
test
jnp
cmovno
lcall
sub
cmp
into
std
stos
push
hlt
or
mov
mov
mov
insl
imul
add
mov
fcomip
lds
clc
push
mov
jge
lret
fsub
push
pop
test
inc
jl
adc
mov
push
mov
fistps
js
xor
cmp
pop
int
push
call
pop
in
aas
outsb
jae
ret
lcall
sti
movsl
mov
xor
imul
sbb
fsubp
test
test
das
jmp
mov
aas
pushf
jne
loope
roll
fwait
es
pop
sbb
xor
mov
int
inc
sub
jnp
inc
aas
arpl
ljmp
jbe
push
movsl
add
out
int3
in
xchg
ss
testb
cmp
lds
xor
mov
shlb
xor
jo
sarb
repnz
lea
mov
js
lock
pusha
shlb
aaa
cmpsb
xchg
rorl
arpl
mov
mov
shufps
cld
jp
outsl
paddusb
sub
adc
inc
vmovaps
and
mov
cwtl
xchg
sbb
mov
and
push
inc
cli
daa
mov
sub
es
mov
rcrb
mov
movsl
push
mov
cmpsb
mov
jecxz
cld
lcall
lret
mov
cwtl
insb
mov
movsb
mov
lahf
imul
mov
add
dec
or
shll
ret
jge
jne
mov
sub
or
dec
mov
out
jnp
push
imul
mov
add
aaa
fs
ret
xchg
test
mov
cmp
pop
shll
xor
mov
jb
mov
stos
sub
jnp
das
and
in
inc
push
test
andb
sbb
add
xor
jp
sub
jp
in
fidivrs
inc
push
mov
pop
movsl
mov
jle
neg
int3
mov
push
repnz
das
xchg
es
mov
shrb
xlat
jg
out
mov
insl
xchg
and
scas
inc
jns
cltd
mov
out
xor
jecxz
nop
xor
pusha
mov
cmp
xchg
or
jnp
test
mov
call
push
lock
sub
popa
mov
or
push
sbb
repz
ficompl
push
popf
lods
dec
sub
cs
jnp
push
cltd
jge
loopne
jo
aam
or
in
inc
inc
cwtl
out
sbb
lea
cmp
or
cli
out
out
cmp
fwait
testl
mov
xchg
mov
pop
mov
pop
sbb
bound
addr16
jns
lods
rclb
mov
lock
pushf
mov
mov
push
cmp
pop
imul
rcrb
outsl
repnz
dec
jne
push
push
cmp
scas
push
outsl
outsb
xchg
jnp
and
test
xor
cld
sbb
testl
loopne
sub
test
shll
imul
mov
xor
outsb
repnz
xchg
in
sar
lret
mov
cmp
in
test
pop
adc
adc
movsb
ret
pop
adc
pop
push
call
pop
out
repz
sub
pushf
aad
sub
xchg
rcrl
jecxz
mov
inc
lock
aam
pop
inc
lds
xchg
rcrb
xorl
add
push
sub
mov
xor
pop
int
sbb
push
inc
adc
icebp
pop
xchg
outsb
xor
adc
repz
mov
cmp
in
xor
in
jmp
push
iret
cs
lret
cmp
insl
jecxz
iret
inc
in
inc
xchg
aaa
and
repz
bound
sub
or
sub
loopne
cli
fs
push
aad
or
test
mov
pop
jno
sub
cmpsb
sub
or
pop
in
jne
inc
or
sahf
mov
jno
hlt
out
add
jb
out
sti
pop
cmp
inc
movsl
xor
ss
decb
sub
adc
aas
jnp
gs
rcrl
xor
dec
jecxz
shl
push
cmp
adc
stos
sbb
pop
jecxz
xor
or
jecxz
orl
dec
sbbb
das
push
jmp
int
sub
les
arpl
fwait
mov
sub
in
call
das
dec
and
mov
cmp
leave
sbb
mov
mov
or
push
pop
aaa
sarb
movb
and
cmpsb
in
mov
and
jge
outsl
stc
sub
out
lret
push
cwtl
pushf
ficompl
cmp
cmp
xchg
pop
cmp
mov
cmp
fmuls
jnp
mov
scas
add
jbe
sbb
std
or
dec
push
jae
cmp
mov
cli
add
sub
test
pop
mov
fucom
jo
arpl
mov
roll
dec
inc
fisttpll
inc
test
pushf
pusha
shrd
cmp
shlb
cmp
fcompl
aas
sub
outsb
sub
leave
in
fdivrs
dec
mov
aas
leave
insb
fisubrl
fisttpl
les
push
icebp
sbb
aas
pop
jns
cmp
inc
sahf
and
dec
das
xchg
xor
sub
call
inc
ljmp
addl
pop
out
mov
daa
dec
mov
push
sbb
cwtl
xor
adcl
dec
xor
divb
adc
sbb
in
shlb
mov
filds
mov
movb
cmp
sbb
cmpsb
cmp
ffreep
bound
inc
fidivs
or
fisttps
mov
mov
adcl
cmp
or
fdivrl
push
aam
add
loope
dec
add
pushf
jle
inc
testl
jg
leave
or
sbb
aam
hlt
pop
cmp
rol
arpl
inc
or
enter
mov
std
movsb
icebp
push
add
inc
adc
ds
imul
mov
adc
push
jns
insb
loopne
cwtl
pop
addb
jne
jo
js
xchg
push
push
add
test
inc
xchg
jmp
mov
xlat
scas
sbb
ficomps
nop
lods
test
insl
addr16
cld
adc
hlt
sti
dec
mov
jmp
push
std
xchg
mov
nop
insb
jno
cmp
clc
mov
dec
mov
daa
pop
out
add
aas
ljmp
imul
and
rcrl
sarl
ja
lcall
push
pop
push
jnp
dec
cltd
jp
or
cmc
xchg
test
repz
xchg
push
stos
arpl
test
fwait
xor
push
xor
pop
inc
add
adc
in
outsl
dec
cltd
and
xchg
or
add
sub
pusha
lods
enter
sbb
loope
imul
and
jnp
cmpsl
dec
in
pusha
jae
test
inc
dec
enter
jns
mov
shll
adcl
mov
ds
pop
add
enter
lods
idivb
mov
pop
fbld
and
icebp
filds
push
jl
mov
repnz
or
jge
repnz
stc
push
inc
xor
adc
add
cmp
mov
inc
mov
lea
stc
jbe
std
and
cli
jno
ret
ljmp
push
bound
cmp
jge
in
jns
jno
mov
cltd
pop
mov
fwait
or
cwtl
xchg
adc
lret
inc
aam
push
sub
subb
xor
movhlps
add
nop
popa
xchg
popf
int3
add
test
fsub
cmpsb
dec
ficompl
mov
fcoms
into
mov
outsb
inc
xchg
sub
lcall
clc
ret
ljmp
sbb
imul
jge
adc
adc
push
rcrb
xor
add
mov
inc
imul
push
sub
push
pushw
dec
pop
adc
pop
cmp
xlat
call
add
cmp
and
ds
in
loop
loopne
aaa
testl
std
inc
jno
push
imull
outsl
xor
dec
and
sub
pop
cmp
xchg
and
sbb
and
mov
mov
sbb
or
sahf
pop
or
pop
out
fdivp
flds
or
mov
jbe
cmp
sbb
xlat
dec
arpl
sub
shll
jo
jmp
or
les
mov
ret
xchg
stos
sahf
sub
jns
aam
cmp
sbb
cwtl
mov
and
dec
rclb
pop
inc
mov
push
addr16
mov
cmp
or
fwait
pop
sub
cmpb
xchg
cmpsb
cli
ljmp
arpl
pop
jmp
or
out
lahf
adc
das
ret
cwtl
cmc
lret
add
sub
popl
scas
movsb
aam
scas
sub
aam
jge
loopne
push
loopne
xor
adc
xor
jg
add
cmp
repnz
sbb
ss
sti
cmp
dec
movsb
xchg
popa
jge
or
adc
cld
or
cmp
aaa
das
mov
or
cmc
add
outsl
inc
inc
add
loop
pushf
fnstcw
aas
sub
jmp
nop
loopne
cltd
mov
push
dec
shlb
rorl
mov
sbb
mov
test
pop
xchg
out
adc
sbb
es
mov
repnz
and
cmp
jnp
xor
stc
cli
xchg
or
sbb
mov
lock
decb
dec
jae
push
jne
cmp
out
mov
add
jmp
movsb
xor
loop
pop
out
stc
pop
daa
stos
jb
jne
or
lods
scas
adc
icebp
in
add
fcomp
adc
mov
xlat
jle
inc
add
mov
pop
and
bound
and
jl
mov
testl
aas
xchg
addr16
aaa
divb
inc
push
js
xor
cltd
mov
mov
ror
nop
or
out
sbb
test
pop
testl
imul
push
imul
movsl
xchg
sbb
in
xchg
sbb
sti
imul
in
insl
jnp
leave
inc
leave
in
int
in
pop
mov
add
mov
push
sbb
xchg
pop
xchg
movsl
loop
xchg
xchg
aaa
and
xor
cmp
aam
pop
jg
cmpsl
mov
inc
adc
or
sub
xchg
enter
pushf
mov
inc
or
mov
push
ret
mov
jae
icebp
jl
xchg
out
add
mov
or
cmovbe
mov
jecxz
js
adc
iret
jo
mov
pop
les
mov
aad
notl
movsb
lods
dec
and
and
stos
cld
int
scas
jne
jecxz
sbb
xor
or
mov
mov
sub
imul
popa
out
sub
adc
scas
mov
arpl
xchg
mov
fnstcw
and
mov
lds
inc
aam
mov
aas
insl
jo
std
cltd
std
pop
std
bound
sbb
mov
mov
enter
jge
pop
call
mov
add
lods
mov
fs
sub
mov
mov
test
lea
push
push
icebp
scas
mov
adc
outsb
fimull
dec
push
data16
hlt
in
test
leave
jns
adc
and
into
inc
cmp
push
inc
and
adc
sbb
shll
adc
mov
sub
test
lahf
sub
inc
pop
loope
int3
stos
dec
push
sub
mov
xor
or
movsl
inc
mov
js
stc
or
fnsave
xor
push
mov
jbe
outsl
pop
nop
aas
xlat
je
jo
lods
push
mov
mov
sub
mov
leave
jmp
sbb
lret
xor
movsb
loop
shll
sbb
ljmp
xchg
insb
mov
mov
in
sub
iret
leave
cmp
lcall
pop
out
or
sbb
sub
xor
push
push
adc
jns
inc
or
jb
test
mov
sbb
push
mov
ds
cmp
sub
cltd
push
xor
pop
mov
call
out
sub
movsb
dec
rcrl
jo
bnd
inc
test
stos
dec
mov
roll
jp
cmc
cmp
pop
add
scas
dec
mov
adcl
jge
test
sub
sub
fstps
in
scas
xor
pop
ficoms
rclb
bound
push
jmp
loopne
cmp
add
mov
cmp
jg
mov
mov
push
shl
leave
aam
ret
adc
repz
mov
or
jno
mov
icebp
pop
xchg
imul
adc
mov
imul
push
aam
pusha
loop
xor
push
dec
sbb
push
adc
lock
ds
push
or
movsb
lods
lret
daa
pop
mov
lret
xor
mov
fisubs
push
popa
mov
mov
jge
push
imul
jl
ret
lds
rcrb
outsl
sbb
dec
popa
sub
push
lock
mov
or
negb
test
sbb
cmp
orl
adc
hlt
pop
arpl
push
inc
xorl
in
or
xchg
push
mov
mov
call
cmp
loope
xchg
mov
imul
pop
add
data16
movsl
shll
jo
popf
iret
jb
push
jbe
outsb
add
push
data16
leave
mov
frstor
sub
out
mov
mov
mov
mov
sti
enter
mov
pop
dec
adc
push
mov
enter
jl
xchg
cmp
adc
jl
popa
inc
xchg
sti
jl
repnz
cmp
sbb
nop
dec
cltd
sbb
into
dec
lock
pop
stos
jno
xchg
cmpsl
loopne
pop
rcrb
leave
mov
xchg
mov
xchg
push
add
divb
xlat
jmp
addr16
adc
pop
xchg
jg
lahf
shll
push
mov
int3
shll
and
fwait
dec
clc
mov
dec
jnp
xchg
lock
cmp
sbb
ss
pushf
pminub
jno
pop
aam
data16
test
aam
insl
into
repnz
add
mov
push
outsl
das
and
inc
xchg
int3
inc
sbb
xchg
ds
sbb
mov
add
cld
clc
fldl
or
retw
sbb
inc
and
data16
shr
aaa
gs
pop
addr16
push
xchg
mov
mov
sub
jp
adc
fs
fisttps
mov
scas
mov
out
push
ja
adc
push
ja
jae
decl
cwtl
fdivr
and
sbb
sbb
mov
sarb
in
enter
mov
loopne
dec
dec
pop
pop
loopne
xchg
stos
into
nop
aam
bound
mov
in
mov
jnp
clc
shr
xor
pop
xor
gs
sbb
mov
out
push
add
int3
pop
test
in
xor
iret
gs
add
ret
xchg
ret
cmpsl
repz
mov
push
and
jge
jge
sbb
or
mov
dec
mov
jmp
sub
call
sub
into
mov
mov
fisubrs
mov
xchg
jne
and
xchg
pop
fisttpl
shll
lcall
loopne
mov
cmc
mov
xchg
mov
jmp
xchg
loopne
repnz
into
mov
lods
push
xor
es
inc
dec
mov
cmp
or
mov
icebp
icebp
or
cmp
cwtl
ret
pop
lock
jb
dec
sbb
sbb
jo
cmpsl
mov
push
sbb
inc
adc
inc
and
adc
icebp
movl
xchg
lahf
cmpsb
pop
pop
or
loopne
xchg
sbb
gs
lahf
xor
inc
lock
xchg
fcom
mov
test
xchg
add
out
popa
dec
sahf
je
sbb
mov
int
iret
iret
lock
mov
sub
les
xchg
lock
xor
mov
fdivrs
das
mov
out
subb
aad
lods
test
enter
pushf
pop
add
lsl
iret
roll
mov
gs
sub
insl
mov
adc
psrlw
popf
cmp
pop
shrb
test
cli
add
cmpsl
js
add
inc
mov
mov
fistl
cmp
fsubl
pop
gs
sbb
push
cmp
add
jge
ret
outsl
ret
addr16
fiaddl
in
lock
aam
cld
test
lock
int3
inc
notb
sbb
push
and
mov
jge
push
iret
test
push
sbb
push
icebp
clc
jae
fisttpl
call
imul
mov
push
out
sub
inc
push
push
cmp
jge
inc
cmp
lock
es
lret
xor
test
pop
test
push
adc
imul
es
and
enter
inc
sahf
adc
cli
and
push
stc
jge
out
les
fistl
dec
in
pop
test
mov
popl
and
jl
sar
or
push
jl
ret
mov
cli
mov
mov
dec
fisubl
out
add
ja
and
or
outsl
sbb
mov
push
dec
push
sahf
xchg
cmp
aam
jno
hlt
pusha
test
xchg
and
adc
out
ds
add
leave
mov
jnp
sbb
lods
or
cmpsb
mov
enter
test
shr
inc
orb
insl
jo
repnz
std
sbbb
movsb
lahf
or
sbb
dec
mov
clc
pop
loope
xchg
pop
xor
xchg
pop
inc
sbb
xchg
addr16
scas
mov
add
arpl
adc
in
mov
cmp
imul
insl
testl
and
or
pop
jp
mov
sbb
xorl
lret
push
in
jb
jle
inc
xchg
and
pop
dec
outsb
cmpsb
push
int
mov
fwait
push
int
into
jecxz
sub
rolb
addl
loope
lods
in
inc
rorl
imul
xor
mov
push
lcall
mov
xchg
gs
fildll
icebp
lock
sub
scas
idiv
cli
jecxz
dec
adcb
fnsave
xor
xor
rcr
mov
push
adc
enter
scas
pop
mov
cmp
in
mov
out
out
mov
push
sbb
loop
push
iret
bound
in
lds
add
imul
movsl
add
pop
sub
fwait
jae
lods
push
scas
sahf
orl
and
bound
inc
mov
xchg
negl
mov
adc
push
lret
test
cmp
outsb
into
in
cwtl
aad
sbb
icebp
adc
test
adcb
cld
ss
adc
mov
jb
cmp
movsl
jbe
dec
lods
sbb
adc
divb
pop
mov
lds
push
cmc
iret
push
movsl
mov
in
sub
lcall
loope
aad
sub
js
inc
jle
repnz
imul
mov
lods
inc
addr16
mov
xlat
jl
cmpsb
sbb
fistl
scas
and
lods
add
imul
pop
in
shrl
xor
pop
in
mov
jb
push
inc
sub
jle
sub
insl
pop
inc
inc
sahf
xor
or
mov
pop
xchg
repz
ljmp
sbb
pop
xchg
stos
sbbb
pop
ljmp
push
xor
insb
sahf
cmp
cmp
mov
ffree
int3
stos
in
dec
xchg
das
mov
leave
push
inc
ss
xchg
xchg
out
sub
or
orl
repnz
insl
sbb
xor
call
sahf
xchg
jmp
xchg
das
sbb
negl
adc
and
addr16
in
js
push
bt
aas
cmp
push
sbb
insl
mov
xchg
inc
sahf
fmuls
out
jge
fisubrs
xlat
popf
call
pop
shrl
jne
inc
adc
mov
inc
add
push
mov
lods
cmc
xorb
pop
ss
jg
dec
xchg
mov
mov
enter
lds
ljmp
cltd
dec
aad
xchg
mov
dec
push
sbbb
bound
dec
add
mov
fs
pop
shll
loope
ds
push
mov
sbb
xlat
cld
jne
ja
neg
pop
dec
and
mov
sub
les
mov
mov
iret
ja
push
iret
call
mov
mov
out
daa
mov
sar
sbb
imul
int3
dec
shll
cmpsl
and
sbb
clc
enter
cmp
ja
and
cmpsl
pop
inc
mov
jbe
enter
mov
call
xor
fmul
jg
test
test
lret
mul
xor
or
adc
cmpsl
gs
cmc
rdtsc
cmp
addr16
and
clc
pop
pushf
scas
and
jb
push
xchg
mov
call
mov
pop
ficomps
cmp
popf
ss
pushf
dec
add
mov
sbb
rol
jbe
sbb
jg
xor
jb
sbb
mov
xchg
inc
leave
cmp
or
lods
enter
les
shl
outsb
rclb
lahf
adc
cltd
lea
shrl
add
or
pop
adc
fwait
call
inc
std
or
dec
fldt
scas
push
adc
xor
xor
mov
push
cmp
shlb
mov
outsl
sbb
xchg
xchg
adc
push
sbb
pop
jno
cli
xor
mov
aas
add
pop
insl
imul
mov
push
vmovaps
and
inc
cld
xchg
cli
adc
fcmovne
addr16
xchg
dec
add
mov
aas
or
das
dec
and
or
int3
push
lahf
daa
sbb
lods
push
and
ss
mov
cwtl
and
data16
or
push
fiaddl
rclb
int
xor
je
cltd
jl
adc
push
in
loop
lods
jbe
lods
cltd
jg
cltd
out
cmp
into
mov
cltd
cmpsl
loop
cmpsl
xchg
pop
push
cs
lahf
pop
mov
cmpsb
aas
pop
inc
sub
stos
and
cmpsl
push
and
mov
push
mov
mov
push
jno
lock
lods
mov
add
xchg
pop
addl
js
mov
fnsave
add
mov
in
aas
movsl
dec
jns
inc
addb
lcall
push
cmpsl
pop
xlat
and
es
pop
jno
pop
mov
movsb
adc
mov
sub
xorl
add
out
orl
and
imul
xchg
push
sti
lock
ficoms
loop
push
pop
call
xchg
xorb
aam
add
add
std
mov
push
pusha
pushf
in
leave
pusha
push
rcr
adc
rolb
movsb
adc
pop
mov
cmc
lods
fs
push
mov
or
or
push
pusha
dec
cmp
push
shl
sub
sti
fidivrs
sbb
add
lcall
mov
jbe
or
xchg
mov
int
cli
pop
adcb
mov
into
add
ljmp
dec
hlt
scas
divb
xlat
or
inc
std
jne
jns
dec
xchg
and
adc
stos
lahf
inc
rcrl
int
xlat
jb
cwtd
jo
mov
jne
lods
pop
push
nop
mov
xor
mov
pushf
ficompl
rorl
and
mov
mov
mov
icebp
aas
jmp
mov
insl
jl
jle
jg
ret
hlt
xor
jnp
pop
arpl
shl
adc
sub
jns
adc
sar
jl
dec
inc
call
loopne
es
das
scas
fisubs
inc
mov
cmp
cltd
fisubs
outsb
push
jbe
dec
ds
dec
adc
jp
push
lcall
mov
insb
cltd
gs
test
std
dec
mov
in
lret
movsb
imul
es
xor
pop
dec
js
pop
gs
sahf
out
jae
lahf
shr
xchg
push
cld
in
cmpsl
fstp
lock
in
pushf
xchg
xchg
scas
test
loop
arpl
pop
mov
mov
xor
lahf
js
lds
idivb
dec
jno
push
pop
orb
mov
adc
test
lods
xchg
and
push
mov
cmc
das
sbb
mov
mov
pop
popa
cli
fdiv
sub
test
mov
stos
cmpsb
push
push
dec
jbe
or
enter
adc
pop
xor
lret
pop
sbb
jl
leave
insl
or
lods
mov
inc
iret
out
mov
nop
in
adc
aam
xor
repnz
jecxz
inc
mov
imul
sbb
mov
dec
and
push
pop
sarl
mov
mov
gs
sahf
xor
test
rol
mov
insl
scas
insb
test
dec
int
outsb
or
aad
mov
repz
in
fadds
hlt
lcall
inc
inc
lret
stc
popa
call
sti
xchg
in
push
iret
push
mov
jmp
cwtl
or
jl
rorb
mov
mov
dec
mov
lods
pop
iret
sbb
and
sub
inc
daa
push
mov
pop
in
sarl
pop
aad
jmp
stos
test
mov
in
sub
lea
jb
aad
aas
bnd
scas
mov
adc
mov
test
jmp
xchg
data16
or
test
push
jns
pop
dec
xchg
cmp
imul
adc
push
mov
fdivrs
cli
mov
jg
cmp
push
fstpl
jo
and
rcll
mov
loopne
sbb
lods
movl
ret
pusha
shll
pop
adc
pop
sbb
out
jnp
mov
push
pop
cmp
daa
cmp
repnz
lss
inc
sbb
imul
mov
sbb
pop
push
mov
mov
mov
mov
adc
cltd
in
xchg
mov
out
push
mov
mov
and
cltd
lods
jo
repnz
loope
popf
cmpsl
int
lret
mov
sub
push
and
add
inc
pop
daa
xchg
or
xchg
xor
dec
mov
jl
iret
loop
sub
jmp
clc
and
in
sbb
xchg
cmp
test
sti
mov
dec
sbb
imul
sahf
jb
jnp
sahf
push
fdivp
sub
test
test
xchg
test
fsubr
movsb
jl
jno
xchg
pop
and
or
push
cwtl
jno
shrl
xchg
roll
mov
mov
jecxz
out
inc
ret
cmp
orb
and
jae
stc
lahf
cmp
xor
mov
jg
psrlw
xor
roll
clc
mov
fdivrp
outsl
ja
or
andb
mov
imul
pop
mov
mov
jnp
fwait
mov
leave
adc
dec
xor
jb
pop
call
xor
mov
test
out
mov
mov
repz
mov
lahf
xor
adc
lods
mov
pop
xor
sbb
fs
ss
pusha
repz
in
xchg
jb
adc
sub
mov
mov
sub
xchg
bound
inc
scas
movl
shll
pop
fdivrs
sub
mul
jecxz
mov
out
cltd
pop
xor
cmp
mov
inc
dec
push
jbe
lods
or
fstpl
pop
sub
fldcw
jne
fsubr
in
outsb
inc
add
lret
fstpl
push
sar
xchg
xchg
aaa
loop
fldenv
push
mov
out
pop
sub
scas
mov
inc
aad
out
popf
stos
pop
aaa
adc
jns
movsl
pop
push
push
add
fstpl
jl
or
repnz
add
jle
xchg
outsl
in
xorl
cs
and
stos
mov
mov
inc
cwtl
fisttpl
daa
mov
popf
pop
imul
dec
nop
mov
stos
enter
lods
and
testl
adc
cmp
jmp
imul
lock
dec
fwait
aad
xchg
incb
shlb
es
sbb
fdivrs
jne
add
je
xor
jo
ret
rorl
mov
inc
dec
ds
push
pop
or
ret
xlat
sarl
pop
or
mov
fbld
mov
sbb
insl
shlb
iret
and
mov
mov
scas
xchg
fildl
mov
inc
in
clc
je
pop
aaa
bnd
push
and
insl
or
rclb
pop
leave
bound
pushf
inc
stos
into
fmul
push
mov
je
icebp
adc
inc
sahf
xchg
loop
scas
imul
sbb
shlb
aam
jecxz
adc
xor
lock
adc
in
pop
arpl
leavew
nop
nop
mov
es
cld
test
adc
mov
sbb
fadds
int3
scas
sbb
pusha
shlb
in
jae
fs
dec
rep
imul
popf
dec
push
pop
loop
sbb
xchg
pop
mov
pusha
in
dec
push
fimuls
jb
sbb
push
lret
cmpsl
cmpsb
ret
dec
mov
pushf
mov
add
test
mov
fdivrp
add
ja
iret
data16
adc
mov
xchg
imul
jp
sarl
loop
cmp
push
add
test
cli
cmp
out
and
fsts
cwtl
adc
fdivrl
out
ljmp
dec
xchg
adc
dec
fwait
arpl
jb
adc
add
mov
sbb
enter
cmp
pusha
add
stc
inc
dec
xor
push
dec
cltd
push
pop
clc
jmp
dec
test
dec
in
jge
inc
add
loope
rcll
daa
pop
mov
lods
cmp
fists
ja
ret
icebp
pop
aaa
inc
xor
movb
dec
cltd
fs
mov
insl
movsb
jnp
mov
cmpb
xchg
xor
bnd
imul
dec
lret
out
add
dec
sbb
fldcw
aaa
scas
push
mov
and
loop
adc
pop
dec
aad
lahf
xchg
pop
lds
in
loop
loopne
inc
xchg
sti
xor
mov
pop
inc
enter
dec
ret
popa
adc
mov
inc
in
es
mov
inc
inc
mov
mov
add
mov
xor
rcll
sbb
mov
and
into
push
pop
cmp
mov
push
loope
push
dec
adc
pop
in
in
icebp
dec
inc
xor
cmp
jge
popf
or
stc
outsb
jae
adc
pushf
enter
xor
xchg
jg
xchg
push
xlat
test
cmpsb
adc
xor
jecxz
sar
push
int3
inc
test
and
ljmp
bound
jp
shrb
xchg
hlt
sub
sbb
cmpsb
and
out
cmp
mov
adc
push
movsl
stc
repnz
mov
push
inc
popf
mov
xchg
xchg
dec
mov
inc
and
out
pop
scas
sub
or
adc
ret
in
je
into
inc
aas
mov
les
xchg
pop
xchg
shrl
lods
cmpsb
push
sbb
mov
or
in
and
outsb
pop
sub
pop
imul
add
aad
xchg
in
dec
rorb
fistpl
or
repnz
sub
jl
push
xchg
mov
push
mov
stos
dec
cwtl
sbb
sahf
inc
or
arpl
mov
shlb
adc
dec
adc
jmp
sub
ljmp
cmp
mov
sti
push
sub
mov
and
dec
jb
clc
push
lods
mov
add
cmpb
gs
lret
adc
mov
ret
jmp
sbb
xor
test
adc
xorb
js
dec
mov
push
xchg
mov
shl
repz
fstps
loope
das
and
into
inc
les
pop
fiadds
xchg
jo
xor
out
mov
iret
xchg
or
inc
aas
adc
adc
sti
push
int
dec
jne
lahf
inc
gs
mov
adc
xor
in
cmp
lcall
jge
fildll
add
add
arpl
push
sub
jp
and
xchg
mov
xchg
sub
ljmp
mov
dec
idiv
cmp
pop
fadds
insb
cmp
xchg
ds
mov
fisubrs
test
movsb
mov
into
shrl
das
mov
ja
jl
por
and
sbb
arpl
movsb
sbb
jp
push
daa
pop
push
add
fsub
loop
pop
pop
orb
dec
in
xor
jne
aam
aad
mov
dec
push
or
sub
pop
out
jl
stos
shrb
dec
imul
pop
jbe
xchg
fimull
repz
sahf
xchg
and
and
imul
push
cmp
lea
sub
inc
fildl
stc
pusha
pop
mov
cmp
cmc
stos
adc
movsl
push
xchg
out
pop
and
imull
dec
repz
sarl
lods
xor
mov
fxch
jecxz
std
incl
loopne
fidivrs
mov
shll
scas
shrb
shll
lea
sbb
jmp
movsl
js
fwait
or
inc
pop
mov
mov
movsb
test
jno
lods
ds
outsb
and
lcall
add
cmovo
or
lret
pop
aaa
scas
xchg
call
repz
sub
sub
or
cli
xor
mov
ja
lret
xor
dec
push
cmp
and
sub
lret
or
sub
add
idivb
mov
pushf
adc
insl
rorl
sarl
scas
sbb
push
test
mov
inc
inc
and
leave
lahf
enter
ficomps
sti
dec
xchg
lea
push
xchg
shll
sub
adc
mov
sub
mov
dec
jno
orl
or
push
mov
mov
dec
ret
arpl
outsl
dec
test
xorb
cmpsl
jno
lds
outsb
inc
mov
xchg
mov
pop
sahf
cmp
lcall
push
mov
push
fstp
push
movsb
sti
sbb
inc
mov
sub
sbb
push
rorl
fidivl
push
movsb
push
pop
jns
enter
test
cmp
fldenv
inc
negl
lods
out
sub
mov
cmp
repz
xlat
ljmp
add
inc
xchg
pop
loop
lods
xchg
dec
xor
dec
shlb
roll
inc
mov
outsl
cmp
or
push
xchg
in
aaa
sub
and
das
movsl
pop
add
dec
sub
and
push
push
repnz
repz
imul
mov
lret
jle
daa
mov
insl
cmp
push
call
cmc
add
sti
pop
mov
mov
and
retw
fnstenv
test
inc
not
lds
in
or
sbb
mov
cltd
push
addb
cld
cmpsb
clc
xor
icebp
enter
inc
mov
test
mov
adc
push
pop
xchg
cmp
imul
and
add
dec
push
out
cs
fdivr
pop
jnp
or
jg
out
xchg
outsb
jo
out
jmp
iret
dec
jb
pop
dec
ror
push
jb
cmpb
cmc
push
call
je
inc
xor
addr16
sub
mov
inc
leave
and
mov
pop
xchg
xchg
lcall
js
imul
xor
das
rorb
mov
loop
mov
insl
sahf
call
mov
in
fbstp
inc
fisubrs
daa
mov
xchg
add
adc
jg
mov
push
sbb
sub
mov
sbb
scas
popf
or
push
addl
leave
mov
scas
push
movsl
inc
imul
jnp
mov
pushf
add
popf
aam
ficomps
insb
insl
test
int
mov
jnp
dec
insb
cs
mov
ja
fsubrl
movsb
and
sahf
sbb
pop
in
or
push
les
xchg
mov
addb
sbb
adc
jle
jnp
mov
mov
lods
int
add
data16
repnz
xor
adc
adc
adc
push
inc
call
negl
repz
mov
push
inc
data16
cld
scas
and
imull
pop
addl
xchg
shll
addr16
mov
push
mov
test
jnp
push
cmp
push
sub
outsl
loop
adc
mov
xor
outsb
idivl
add
push
test
fistps
lret
movsl
mov
mov
aam
movsl
ret
jnp
add
cmp
mov
dec
sbb
or
adc
movsl
stc
nop
adc
mov
popf
sbb
mov
int3
add
sbb
data16
mov
push
xchg
push
int3
push
cmp
out
out
stos
adc
mov
sahf
mov
fnstsw
sub
jno
mov
lock
dec
push
outsl
cmp
cmp
fldt
orl
inc
cmp
push
sub
movsl
adc
lds
ja
mov
call
orb
sbb
push
add
decl
loop
stos
daa
pop
or
dec
cmp
xchg
push
sub
xlat
cli
fmul
aas
mov
fstpl
push
imul
ljmp
pushf
in
xor
mov
or
and
scas
cmp
dec
sub
mov
and
insb
in
int3
adc
jnp
add
cld
or
or
mov
sub
jb
mov
jg
jp
scas
in
adcb
fbstp
ljmp
sbb
shlb
repnz
stc
jne
and
sub
add
xor
jo
test
pushf
je
push
push
out
imul
repnz
pusha
ja
lahf
fsubrl
iret
roll
mov
push
and
arpl
push
push
dec
loope
aam
cld
add
popw
addb
jle
xchg
inc
pop
or
ficoml
xlat
loopne
gs
xor
fldt
dec
sbb
cli
adc
sub
iret
das
popa
xchg
and
cmpsb
std
fnstcw
mov
xchg
les
xchg
ret
jecxz
mov
pop
cld
push
std
in
cs
pushf
jno
push
sub
ret
mov
xchg
xor
testl
ss
aaa
pop
lret
nop
pushf
int3
mov
xlat
dec
xor
popa
pop
outsb
mov
in
out
and
or
fcmovb
in
or
sti
lods
dec
mov
xchg
and
std
lret
cli
add
ja
xchg
icebp
das
jecxz
sbb
in
push
add
int
lcall
inc
fisttps
xor
mov
fstpt
xchg
push
pop
cmpsl
jp
pop
push
jle
sbb
cmp
fwait
fwait
nop
mov
pop
outsl
scas
in
or
outsl
cmp
fwait
mov
mov
dec
push
jnp
or
sbb
mov
int3
movsl
jo
mov
and
cmp
gs
jle
shl
and
adc
lret
jnp
xor
or
add
stc
shlb
fucomi
dec
mov
mov
cmpsb
pop
dec
adc
fisttpl
loop
or
pop
mov
jae
jmp
xchg
fucom
ficoms
mov
loopne
arpl
movsb
xchg
inc
jge
out
push
push
aas
adc
mov
fadds
jge
call
cwtl
mov
xor
fists
out
mov
mov
filds
cs
mov
xchg
and
repnz
into
adc
out
add
cmp
pusha
mov
mov
js
int
bound
mul
sbb
jmp
sbb
ret
and
fcmove
and
mov
sarl
cmpsb
xor
mov
movsb
popa
mov
pop
jns
insb
stc
jne
sub
xlat
sbb
test
insb
data16
inc
das
sbb
mov
bound
out
test
sub
mov
cs
dec
and
pop
decl
mov
add
sbb
hlt
js
push
stos
cld
or
insb
xchg
mov
sarl
or
cs
mov
jp
and
cmpsl
lret
push
fcomps
lcall
loope
dec
cmc
roll
xchg
shll
xor
jns
adc
push
mov
jne
out
add
aam
ror
pop
and
push
mov
pop
stos
pop
inc
testl
add
or
enter
lret
pop
sbbl
enter
es
mov
push
cmp
insl
data16
push
test
sbb
mov
adc
in
inc
jnp
out
movsb
aam
sub
test
xor
cmpsb
not
clc
and
testb
jp
cmp
fnstcw
cmp
rorl
fs
out
in
sub
fwait
pop
jns
pop
and
pop
insl
fldl
lds
stc
popf
ljmp
jecxz
aam
pushf
pop
lahf
pop
sar
lret
sahf
pop
aam
inc
dec
sbb
mov
xor
fwait
dec
cmp
fld
push
and
inc
adc
cmp
mov
sbb
add
fsubp
lock
test
pop
adc
popf
dec
adc
mov
pop
inc
hlt
int3
add
ffreep
je
pop
fwait
add
sub
shl
cwtl
adc
fmull
sub
enter
fs
fdivrl
aaa
fmull
dec
pushaw
adc
push
jmp
mov
aad
mov
fsts
dec
enter
and
pop
aam
xchg
shll
call
xchg
out
dec
fwait
mov
cld
xchg
jmp
ret
sub
test
add
xchg
lea
lcall
fwait
outsl
idivl
outsl
push
jmp
jg
mov
jne
lret
mulb
add
out
shll
pop
dec
add
scas
call
jecxz
test
mov
mov
dec
mov
popa
jmp
icebp
loopne
loopne
xchg
out
sbb
or
xchg
mov
cmc
pop
lret
lods
and
shll
hlt
cmc
xorl
loope
fidivl
dec
dec
mov
dec
pop
push
add
mov
or
pop
pop
aaa
setbe
dec
xchg
out
pop
stos
icebp
lods
mov
lcall
test
mov
pop
aad
aas
mov
repnz
mov
push
push
mov
je
inc
inc
xchg
movsl
mov
pop
ficompl
adc
shrb
clc
adc
jp
adcb
aam
xchg
mov
dec
fiaddl
push
scas
mov
xchg
rorb
ficoms
mov
sbb
sbb
adc
sahf
je
and
lcall
inc
std
mov
jmp
out
mov
gs
mov
mov
in
adc
sbb
fisttps
cltd
add
push
outsb
xor
imul
lcall
push
adc
jg
ret
cmpsb
cs
ss
mov
jge
jmp
gs
outsb
xchg
jnp
das
xchg
add
pop
xor
push
cmp
mov
ljmp
shl
lret
push
ret
jo
stos
add
xchg
popf
adcl
or
xor
imul
pop
mov
push
and
popf
sbb
fldt
cmp
sub
movsl
add
add
psubsb
popf
nop
push
jbe
inc
dec
jle
or
ljmp
orl
ja
xchg
imul
mov
aas
icebp
lods
jl
adc
gs
cmp
aaa
test
mov
cld
outsl
dec
lret
push
outsl
mov
jl
scas
inc
into
dec
mov
fs
sarb
mov
sarl
outsl
lahf
inc
dec
dec
test
lock
pop
lahf
sahf
push
sbb
sub
xchg
cltd
mov
dec
pop
inc
cmp
xchg
shrb
wrmsr
fsubl
nop
inc
mov
fstp
cmpsb
out
lds
ds
mov
cmc
pop
push
push
imul
mov
jg
mov
push
sbb
mov
pop
lret
add
es
jecxz
xchg
dec
fcmovnb
shlb
pop
jmp
lahf
inc
cmp
sarl
pushf
inc
adc
cmpsb
sbb
push
xor
lods
inc
outsl
cmp
out
cmpsb
mov
inc
lods
dec
cwtl
mov
rclb
inc
push
rcll
mov
test
cmp
daa
outsb
mov
jno
shll
lea
fstp
mov
inc
xchg
lret
icebp
fcoms
lret
lods
les
test
mov
stos
jl
inc
jl
test
xchg
in
in
stos
pop
push
lods
xor
scas
xlat
cmp
ja
or
cmc
mov
ljmp
loope
mov
enter
push
mov
cmp
repz
clc
mov
movsl
fs
push
aas
cmpsb
pop
mov
mov
jns
arpl
xchg
subb
xchg
scas
lods
ds
mov
or
test
add
out
inc
fldt
xchg
in
decl
sub
or
ret
das
mov
rcr
test
aas
jns,pn
mov
das
mov
add
imul
lret
pop
das
sub
sub
bound
add
rcr
xchg
lcall
adc
outsb
outsl
or
inc
jbe
in
mov
addr16
enter
jnp
icebp
sbb
xchg
imul
mov
jbe
in
cmp
hlt
cld
jnp
sbb
dec
popa
xchg
mov
jbe
shr
cmp
cli
pop
cmp
testl
or
jne
mov
lds
test
fistl
hlt
stos
lcall
xor
push
movsb
test
mov
scas
push
pop
icebp
xchg
add
fs
in
jl
jns
addl
pop
cmp
fs
lcall
mov
shrl
jge
mov
push
add
push
adc
movsl
fimuls
sub
pop
pop
in
inc
scas
mov
lods
xchg
sbb
mov
mov
mov
dec
add
stos
mov
xor
mov
arpl
stos
pop
mov
scas
sarl
fwait
jmp
xor
push
or
adc
lret
and
jg
pusha
notl
insl
popa
pop
bound
inc
cli
lahf
leave
flds
inc
out
or
sbb
stc
xchg
movsb
and
inc
inc
mov
mov
shl
stos
lahf
ljmp
xor
popf
mov
sbb
lock
adc
stc
push
sbb
scas
hlt
rorl
sti
or
lcall
test
dec
lahf
pop
not
jno
xorl
jae
out
push
inc
cmp
adc
loop
ljmp
scas
or
cbtw
popa
hlt
shll
push
fsts
jno
push
out
mov
out
dec
mov
push
ret
sbb
cmp
vpsubb
pop
mov
cmc
cld
arpl
mov
push
mov
adc
sub
lcall
push
sub
ja
fsts
data16
daa
or
les
xchg
push
rorl
psllq
outsb
scas
notl
push
xchg
jns
xchg
pop
cmpsb
or
insl
jo
and
repnz
lret
lods
adc
xor
subl
sbb
mov
xor
push
push
mov
adc
popa
mov
lds
inc
mov
aas
mov
inc
fldt
addl
xlat
shll
dec
mov
movsb
mov
mov
cwtl
out
inc
test
and
xor
in
sub
add
outsl
or
dec
mov
call
enter
ljmp
cmp
jp
dec
lcall
push
jae
fistpl
push
out
test
bound
lcall
shll
cmc
push
pusha
or
mov
mov
mov
loop
jecxz
in
jne
movsl
mov
push
imul
xchg
mov
add
jl
fsubrs
scas
lea
pop
pop
xor
mov
daa
ret
mov
ljmp
fstp
adc
inc
jle
shl
cli
hlt
push
push
inc
pop
jp
mov
in
sbb
adc
xor
sub
lods
mov
pop
nop
in
and
and
sub
xchg
fcomp
mov
dec
ljmp
out
enter
inc
nop
jle
lods
mov
ret
movsb
jb
push
mov
or
cmpb
xor
cli
xor
or
fstpt
enter
inc
dec
bound
xadd
test
aad
pop
imul
jb
sbb
test
je
test
cmpb
inc
inc
inc
push
inc
ljmp
mov
or
mov
shrb
stos
loopne
les
dec
test
sub
push
jecxz
add
push
mov
sbb
jmp
xchg
mov
inc
xchg
mov
inc
jae
repnz
fldenv
add
sbb
sub
push
sub
push
inc
dec
testb
dec
sbb
add
ret
test
clc
mov
lock
loope
push
mov
clc
bound
movsl
pop
pusha
xchg
into
clc
cmp
mov
cmp
fmull
or
das
out
pop
and
sub
stc
movsb
mov
lret
mov
add
addb
and
jge
sbb
movsb
mov
in
dec
rcrl
outsb
dec
repnz
jae
sub
in
inc
mov
adcl
int
stos
test
mov
daa
xchg
xor
add
inc
add
jae
dec
jbe
movsl
jnp
xchg
fdivs
mov
int
cmc
scas
call
hlt
xor
pop
sub
aas
sub
push
scas
bound
mov
inc
outsb
jae
mov
icebp
cmp
rorl
fsubs
xor
or
aas
push
mov
inc
mov
and
push
adc
or
pop
push
movsb
jnp
mov
xor
out
mov
xchg
cmp
test
xchg
jge
imul
adc
mov
imul
fstpt
jb
loop
lret
xchg
fidivrl
and
and
mov
loop
or
in
ljmp
add
or
fstpl
aam
xlat
push
pop
cmc
movsb
flds
fisttps
popa
ret
lret
cld
ja
fwait
mov
bnd
xchg
push
mov
popa
leave
pop
lret
int3
sub
jo
cmpb
pushl
out
xchg
subl
cs
movsl
sbb
jb
xchg
cmp
xchg
or
push
mov
or
mov
insl
int3
stc
rorb
fs
lock
insb
inc
and
mov
cmp
dec
pop
mov
xor
add
or
mov
repz
mov
cmpl
mov
gs
adc
cmp
stc
sub
mov
adc
xchg
dec
std
js
sub
imul
mov
inc
xchg
mov
and
xchg
orb
jl
jne
ljmp
cmp
cmp
dec
movsl
setnp
fwait
mov
sbb
jl
scas
jge
mov
mov
fildll
js
repz
cmp
jle
addl
xlat
pop
mov
stc
jle
jle
stos
ljmp
sbb
pop
inc
test
push
out
xchg
sbb
push
and
mov
repz
fcmove
lods
into
test
push
xor
aas
adc
sub
nop
dec
pusha
clc
shrb
out
add
aam
sub
jge
adc
imul
dec
xchg
sahf
mov
test
ljmp
mov
int3
arpl
or
mov
push
enter
push
test
and
and
xchg
not
fnstenv
aaa
rolb
ja
and
or
dec
subb
jno
rorl
fwait
pop
sub
xchg
lret
jb
mov
mov
je
js
inc
gs
out
inc
insl
ret
sar
xor
test
or
or
movb
filds
mov
out
out
insb
int
call
mov
jnp
gs
fsubrs
xchg
iret
inc
xchg
dec
mov
mov
mov
ret
shr
sub
jb
jmp
xor
push
test
testb
mov
push
scas
adc
loop
jbe
nop
outsl
sub
mov
mov
in
mov
cmpsb
mov
ljmp
sbb
bound
and
add
dec
fisttpl
aaa
xchg
cmc
repnz
mov
push
mov
test
adc
mov
je
jge
out
sub
sub
cmp
sbb
mov
ds
lret
dec
push
negl
or
insl
mov
lods
push
int
push
cmp
and
xchg
aas
sbb
mov
cltd
jg
cmp
pop
mov
add
or
scas
sub
or
test
sub
aad
push
dec
adc
pop
imul
push
mov
cmpsl
or
cmp
mov
xor
push
jge
xchg
add
ret
add
mov
push
jnp
jmp
arpl
dec
fmul
dec
push
xchg
mov
jmp
ficomps
push
subl
push
cmpsb
scas
in
scas
cld
mov
mov
xchg
add
mov
insl
mov
out
sahf
bound
jmp
inc
dec
dec
mov
fidivrs
or
xor
stos
lret
sbb
adc
arpl
popf
not
imul
pop
add
stos
popa
mov
es
push
iret
aas
fimull
clc
inc
or
test
pop
cs
cmp
stos
jmp
pushf
ret
shlb
lea
inc
jns
sar
or
fisubl
adc
test
ja
xor
inc
sbb
push
jmp
pop
aas
int3
pushl
jmp
adc
fcoms
fisubrl
xor
inc
ficomps
pop
test
inc
dec
stos
jo
out
fcoms
neg
mov
pop
fisttpll
fiaddl
hlt
inc
pop
outsb
pop
xchg
movsl
mov
xor
pop
ljmp
loopne
push
les
into
cmc
hlt
outsb
sub
mov
lret
mov
insl
mov
sub
dec
popf
dec
pushf
mov
scas
xor
shlb
mov
test
stos
lahf
jbe
push
jmp
mov
das
dec
push
dec
push
fisubrl
sbb
push
mov
mov
scas
sti
into
jecxz
int3
or
xor
enter
ja
or
divb
pop
inc
mov
jecxz
gs
in
add
pop
lock
enter
lds
cmp
ror
sub
pop
mov
aam
push
push
enter
mov
pusha
inc
insb
pop
jb
xchg
push
daa
mov
nop
xchg
into
popa
in
mov
push
push
pop
cmpl
pusha
adc
lods
xchg
sub
lea
inc
pop
inc
lret
and
mov
dec
pushf
or
sbb
sub
jge
pop
mov
fnstenv
push
dec
call
and
dec
lods
insb
faddl
les
xchg
mov
stos
scas
outsb
dec
mov
lods
int
mov
ja
js
mov
setne
cltd
sbb
or
fadd
out
xchg
fstpl
arpl
mov
dec
inc
sub
test
pop
cmpsb
movsb
test
dec
icebp
jnp
cld
mov
jle
fistpl
mov
xchg
jbe
bnd
sarl
jno
je
out
test
xor
lret
jne
mov
addps
adc
cmp
dec
cwtl
sbb
inc
pop
mov
lea
push
lret
push
hlt
inc
push
jle
push
jge
pusha
jl
mov
sarl
ja
leave
xor
adc
int
vshufps
mov
cmpsl
sub
scas
mov
scas
xor
fnstsw
lea
ljmp
call
pop
iret
dec
cld
scas
and
mov
adc
pop
and
mov
push
mov
sbb
scas
jb
jmp
daa
jg
and
fs
js
fmull
les
sbb
sub
jle
test
inc
xor
add
mov
in
mov
cld
xor
jmp
leave
pop
cmp
icebp
lret
mov
test
dec
hlt
test
push
loop
pop
xor
pop
ljmp
pop
ret
mov
xor
into
xchg
ret
into
add
jmp
out
out
push
movsl
rcll
in
adc
sub
mov
cmpb
pop
pop
mov
outsl
pop
push
in
cmp
or
pop
ss
push
pop
fs
xchg
mov
sbb
mov
dec
lcall
add
mov
xor
push
inc
mov
adc
pop
notl
in
movsb
mov
arpl
sub
jns
ret
sbb
sahf
adc
or
cmpsl
in
and
add
mov
mov
testb
push
ljmp
mov
mov
imul
mov
aas
stos
ja
movsb
dec
inc
mov
pop
or
sub
lods
arpl
fidivl
cmp
dec
test
rcr
adc
mov
sub
imul
jle
lods
inc
lock
cs
jae
push
mov
cld
ret
sti
popf
add
add
push
fisttpll
ljmp
add
aad
insb
jp
push
cmpsl
mov
aas
xorb
push
mov
shlb
xor
mov
iret
aas
rep
sbb
pop
pushl
rcrb
cmpl
and
xor
cmp
icebp
xchg
push
or
dec
lret
xor
stos
push
mov
das
das
nop
cld
sbb
jl
loopne
push
mov
xchg
xchg
sub
push
pop
negb
or
sub
cmp
fstpl
sbbb
adc
aaa
jne
dec
cmp
aas
out
mov
dec
hlt
cmp
movsb
cmpl
loop
add
sahf
mov
test
cs
rcrl
cmp
push
cltd
mov
movl
ss
push
js
cmc
es
lret
jmp
into
jge
or
cmp
fildl
clc
nop
xchg
or
cmp
inc
jmp
icebp
and
repnz
aam
adc
xchg
mov
pop
mov
sub
movsl
pop
mov
and
pushf
cmc
sub
out
insb
dec
cmp
cmpl
mov
pusha
xchg
push
push
aaa
inc
mov
and
dec
fiaddl
popa
xor
push
and
outsl
adcb
mov
test
cwtl
push
movsl
xchg
and
jae
mov
mov
ds
push
mov
adc
lea
mov
jp
in
xlat
jnp
lods
jp
cltd
xor
mov
int3
dec
icebp
lret
push
adc
push
pop
and
push
sahf
aaa
mov
or
xchg
lret
adc
dec
xor
cmc
xor
jp
push
lock
push
outsl
jno
xor
out
test
aas
jbe
mov
sub
out
xchg
or
adc
xchg
pop
sub
jg
test
fsubrs
sarl
xchg
loop
shrb
xchg
mov
mov
or
out
div
jecxz
iret
or
adc
mov
sbb
inc
push
icebp
mov
mov
aaa
sbbb
bound
dec
or
jg
pushf
cli
mov
jge
or
mov
mov
fwait
dec
add
and
jp
repnz
jb
fadd
jmp
stos
mov
imul
inc
les
xchg
xchg
cmp
mov
cli
daa
dec
dec
add
push
ret
test
cmc
sbb
xchg
inc
dec
inc
and
mov
push
cmpsl
add
or
cmp
mov
xchg
stos
add
out
adc
and
mov
xchg
fstps
mov
mov
inc
lods
xor
cmp
xchg
and
sahf
cmp
ljmp
sub
rcll
dec
sbb
inc
xor
dec
popa
negb
cmp
js
lea
popl
inc
xor
and
lret
xchg
xchg
in
movsb
adc
push
imul
imul
in
aad
mull
sbb
mov
int3
xchg
dec
mov
clc
rcl
fcompl
out
pusha
mov
loopne
add
insb
ss
jns
fucomp
fsubrl
out
popa
sti
mov
aad
mov
andb
mov
xor
inc
sub
insb
imul
cmpsl
rcll
jb
push
cs
lock
jb
xor
lea
int3
ror
adc
loopne
pusha
cli
jbe
call
mov
rcrl
test
test
pop
xor
adc
and
mov
jnp
xchg
dec
and
imul
mov
ja
add
and
aad
xchg
jo
push
add
cs
jge
lds
xchg
data16
rcr
push
jg
ss
ret
das
fildl
test
push
and
fcoml
dec
mov
lods
loopne
adc
inc
jo
sbb
popf
ss
add
cmp
adc
jmp
pushf
ret
scas
jb
out
add
sbb
repz
ret
js
jo
cmp
in
push
mov
fidivl
pop
pusha
jne
jle
sti
ss
fldcw
sub
or
cmp
pop
inc
push
cmp
xchg
test
mov
fcoms
push
mov
shrl
sti
cmp
pop
mov
mov
jp
sub
cmp
adc
sbb
push
shl
or
mov
popa
repz
sub
cmp
adc
jne
add
cmp
dec
lcall
leave
and
pop
or
adc
scas
sub
ret
loopne
adc
subl
jae
dec
sbb
cld
pushl
jge
std
add
les
lea
testl
inc
jge
cld
mov
dec
imul
gs
js
sub
mov
fstl
jecxz
out
push
xor
push
stos
pop
add
insb
push
pop
jne
hlt
sub
fcompl
or
mov
xchg
pop
sarb
and
add
int3
out
arpl
and
dec
insb
iret
test
in
fs
push
jecxz
jg
push
mov
xchg
pusha
adc
dec
xchg
lcall
sub
xchg
mov
bnd
and
xchg
fs
aam
pop
sub
mov
popa
lods
fwait
insb
bound
daa
inc
jo
jp
out
jle
and
jo
imul
jae
test
adc
and
xchg
lock
pop
lock
adc
mov
out
xor
jge
xchg
lods
ret
insl
shrb
jl
jnp
xchg
sahf
jne
xor
push
fwait
in
int
sbb
imul
xor
stc
cmp
pop
punpckhdq
or
rcrb
cmp
arpl
cmp
icebp
stos
cmc
out
pushf
fiaddl
lret
push
push
xor
add
cmp
ja
cmpsl
in
xor
mov
out
mov
cmp
push
loopne
xlat
ror
or
mov
iret
ja
or
add
add
cmp
out
xchg
lcall
test
jns
insl
sar
clc
in
pop
test
sub
jl
inc
shrb
sub
pusha
rorb
cmp
push
jmp
mov
lds
out
js
imul
call
cmp
cli
xchg
out
sub
lea
inc
push
loope
inc
js
sbb
mov
jl
ss
rcrl
push
sbb
gs
sbb
xor
cld
pop
cld
push
mov
mov
cmp
add
shll
xor
stc
insl
jns
mov
inc
rorl
xchg
inc
arpl
push
call
test
push
cmp
lcall
fs
gs
or
add
and
xor
adc
pop
inc
dec
mov
add
inc
mov
adcb
add
insl
adc
push
clc
add
xlat
shrl
and
shlb
pop
lods
pushf
or
inc
stos
and
xor
popa
rclb
mov
gs
pop
xor
jo
fld
mov
xchg
pop
sub
add
inc
mov
add
xchg
repz
fidivrs
shll
push
push
aaa
mov
cmp
mov
mov
mov
pop
pop
ret
daa
jmp
es
frstor
test
jmp
popa
jo
mov
leave
lahf
andl
stos
movl
or
addr16
jle
inc
inc
push
cmpsb
mov
jecxz
jmp
mov
dec
sbb
dec
push
in
xor
cmp
dec
stos
mov
pop
pop
mov
cmpsb
sbb
sahf
mov
out
test
push
mov
push
pushw
or
insb
add
mov
ljmp
clc
adc
ljmp
lcall
inc
inc
adc
gs
mov
cmpsl
inc
in
out
repz
mov
je
dec
loope
lea
mov
adc
repnz
lcall
mov
cwtl
fwait
movsl
pop
jns
inc
imul
into
mov
mov
mov
mov
pop
jge
mov
sbb
cmp
or
divb
mov
mov
fistpl
aam
mov
jg
fsubs
and
add
pop
bound
ja
jge
fs
sarb
rolb
xchg
orb
data16
xchg
fnstcw
in
inc
daa
inc
enter
lock
and
xorl
jmp
add
and
push
sub
je
pop
cld
jle
cld
std
push
mov
xor
cs
shl
push
xchg
push
jnp
cmp
mov
pop
inc
xor
dec
in
jg
xchg
push
push
or
fistl
bound
xor
jecxz
loopne
mov
inc
repz
aam
or
adc
push
mov
mov
iret
push
sbb
mov
loop
divl
cld
mov
xor
xor
xchg
xor
fldt
jne
aam
push
dec
cmp
or
mov
into
mov
or
les
popa
loope
dec
mov
push
stos
jb
lcall
scas
shl
cwtl
adc
js
push
pop
cmpsb
xchg
shll
fs
xchg
movsb
pop
test
punpckhwd
out
pushf
adc
nop
in
pop
fs
xchg
je
loop
dec
hlt
imul
adc
adc
and
sub
stc
adc
mov
cmpsl
in
int3
jg
cli
jb
enter
test
jecxz
mov
add
pop
jle
cmp
clc
mov
iret
jbe
movlps
inc
and
mov
sbb
inc
inc
outsb
mov
cli
mov
in
mov
movsl
mov
and
std
loope
into
adc
gs
mov
insl
movsb
adc
test
aaa
repz
fincstp
xor
xor
lret
fiadds
ljmp
cmp
push
sub
cmpsb
push
out
lea
movsb
gs
in
mov
imul
ljmp
cld
xchg
and
mov
and
js
in
int
pushf
mov
repnz
inc
inc
jae
jmp
mov
aam
sysenter
jnp
xlat
imul
int3
test
leave
push
lock
aam
mov
add
mov
movsl
and
sbb
xchg
add
mov
xlat
mov
rorl
push
dec
cmp
cmpsb
mov
pop
lea
pop
mov
rorl
inc
cmp
push
or
adc
das
dec
xchg
push
mov
jb
add
xor
mov
push
fs
ret
dec
fcmovb
xchg
jne
loopne
addr16
sbb
mov
jcxz
xchg
mov
notb
xor
fisttpll
gs
mov
cmp
sub
scas
xor
cmp
jae
hlt
mov
jo
jg
insb
and
and
push
jno
xchg
shrb
xchg
popf
mov
orl
sub
cs
clc
shlb
lea
dec
adc
mov
pop
inc
xchg
enter
rol
jl
jnp
push
out
mov
mov
pop
cmp
pop
inc
sarl
and
and
mov
ret
scas
mov
mov
pusha
icebp
in
sub
out
push
nop
sub
jnp
pop
cmp
push
pop
cmp
addr16
daa
cltd
insb
roll
shl
mov
sub
mov
jae
je
movsb
mov
xor
addl
lea
mov
lods
push
aas
add
sub
pop
push
push
mov
xchg
cwtl
mov
stos
jge
jmp
push
inc
mov
push
int3
ret
std
xor
xchg
gs
in
sbb
sbb
push
xchg
and
in
cltd
sub
push
mov
ret
lret
in
sub
scas
jle
mov
sub
inc
push
lret
addr16
ljmp
xor
or
adc
and
out
cli
icebp
xor
pushf
xor
or
xchg
push
ja
cmp
decb
jo
wbinvd
fldenv
push
xchg
xchg
fldl
test
mov
add
lret
nop
aad
jge
xchg
sub
mov
ds
add
psraw
xchg
cmpsl
pop
inc
stos
cmp
lcall
mov
sti
popa
adc
xor
mov
mov
push
jae
andl
mov
mov
mov
adc
ret
cmc
iret
movsl
xchg
mov
sbb
cmpsb
sbbb
lock
lret
jae
inc
in
add
add
insb
dec
arpl
mov
sbb
sbb
jmp
sbb
rorl
rol
mov
mull
pop
push
cmp
addr16
jb
inc
mov
pop
ss
xor
mov
aaa
push
sub
sbb
rolb
jnp
inc
xor
and
and
outsl
shrl
xchg
add
js
adc
lea
or
sub
jno
add
mov
mov
xchg
outsb
cwtl
sub
scas
lret
insl
fisttpl
mov
pop
xlat
inc
inc
inc
aad
imul
cmpl
test
sti
or
inc
lock
aas
lcall
out
mov
pop
lods
and
mov
mov
and
and
push
and
or
negl
pop
pop
ficomps
fisubrs
push
add
fcom
pop
out
xor
inc
dec
icebp
mov
dec
test
push
test
mov
sub
adc
mov
movsb
jo
bound
out
arpl
sbb
dec
cs
push
mov
shll
jb
jl
sub
in
add
lret
lods
hlt
addl
test
clc
shrb
add
mov
fs
test
out
xor
mov
popa
aam
sahf
jmp
test
loope
xchg
push
xor
dec
repz
inc
push
mov
sbb
pop
sbb
mov
lahf
pop
pop
cmp
pushf
out
mov
inc
xchg
test
sbb
mov
lahf
jae
loope
mov
hlt
test
dec
jl
push
shr
xchg
ds
fs
into
insl
dec
int
sbb
pop
cli
inc
lahf
mov
cwtl
hlt
xchg
mov
outsb
not
mov
dec
gs
jg
jmp
sub
bnd
mov
fnsave
ret
lock
dec
mov
decl
pushf
xchg
mov
or
jbe
or
dec
push
sub
test
mov
jg
adc
jle
orl
mov
sbb
and
repz
out
mov
sahf
pop
adc
sbb
adc
in
mov
add
pop
inc
lcall
gs
mov
ss
inc
cmc
pop
jb
adc
xor
dec
and
cld
inc
xor
cli
mov
cmp
cmp
mov
sbb
shrb
and
mov
dec
adc
cmc
jmp
mov
pop
adc
jbe
dec
jns
xchg
sub
ljmp
jne
inc
mov
push
adc
jecxz
mov
mov
jecxz
mov
iret
imul
fs
sub
push
jge
pushf
xchg
mov
in
sahf
xchg
push
sub
pusha
push
lret
ja
scas
into
iret
int3
xchg
lret
cmpsb
cmp
push
lods
jne
jo
jl
push
pusha
test
lea
add
pop
mov
lret
lock
cmp
xchg
cld
fsubrl
les
pop
cmp
leave
inc
bound
popf
inc
in
jp
or
insl
lods
and
shlb
mov
mov
jne
pop
in
movsb
mov
inc
lret
aas
jns
adc
xor
mov
xchg
lods
push
repnz
sbb
adcl
pop
int
dec
ds
sbb
test
and
jb
adc
lock
or
mulb
outsb
push
andb
mov
ret
incl
pop
or
adc
mov
xor
xchg
add
bound
ljmp
loopne
xor
js
cli
sbb
dec
enter
push
enter
and
mov
add
stos
shll
lea
hlt
lock
std
dec
js
and
push
orl
sub
les
nop
lea
loopne
lea
or
pop
pop
jne
sub
dec
inc
pop
cli
bound
xchg
subl
jg
movsb
aas
fimull
dec
divl
and
add
arpl
stos
xor
xor
aam
xor
dec
push
push
dec
cli
push
mov
dec
or
in
imul
ret
test
insl
cli
nop
arpl
dec
popa
or
sbb
inc
sub
sahf
test
push
cli
mov
dec
fiadds
lods
mov
imul
mov
mov
jo
pop
or
mov
test
test
pop
and
push
dec
cmp
xor
push
daa
xchg
mov
push
loop
push
sub
push
hlt
scas
mov
add
pop
addr16
push
fs
xor
push
xor
xchg
test
dec
push
mov
dec
mov
js
movsb
mov
imul
inc
sub
cld
pop
js
cmpl
inc
xchg
mov
imull
mov
lock
jae
mov
inc
out
ja,pt
push
adc
mov
push
pop
xor
inc
push
jge
leave
cmpsb
mov
mov
ljmp
out
mov
mov
daa
or
pop
push
mov
and
push
stos
xchg
fwait
test
arpl
or
mov
iret
out
lods
dec
pop
jmp
push
mov
inc
xchg
fidivrs
mov
es
clc
mov
das
jmp
imul
xchg
push
jbe
add
dec
cmpsl
lock
rorl
test
jne
push
movb
mov
loop
push
jle
inc
lods
shlb
add
lret
and
jne
lahf
xchg
jns
dec
push
push
sub
lea
dec
jl
xor
adc
sahf
cmpsb
loopne
pop
xor
and
call
sub
sub
pop
ljmp
xor
xchg
gs
dec
xchg
sub
lcall
jae
inc
jns
push
push
aas
out
push
out
jne
mov
pop
jns
incl
out
or
xor
into
mov
shr
sub
jns
dec
jmp
pop
xchg
jle
fbld
cmp
or
dec
mov
pop
adc
mov
lods
xor
dec
add
and
cmp
sarl
jae
dec
int3
mov
inc
push
insb
push
inc
mov
sub
shrb
repnz
cmp
push
loop
into
lods
add
arpl
fldcw
xor
sbb
in
push
stos
xor
imul
insl
mov
dec
push
gs
rcl
jp
add
sub
roll
mov
dec
sub
mov
mov
inc
pop
push
cmp
push
orb
or
cmpsl
sbb
outsb
lret
sbbb
add
add
adc
lret
inc
add
mov
or
mov
shrl
adc
sub
or
adc
dec
push
cmp
sahf
fbld
insb
pushf
popf
bound
cmpsl
and
inc
or
sahf
xchg
push
xchg
imul
cltd
insb
dec
addb
mov
shlb
idivb
pop
push
mov
mov
add
add
inc
or
out
sub
jnp
shl
stc
push
das
push
jmp
xor
add
xchg
dec
or
mov
jne
icebp
std
lods
xchg
dec
xchg
cmpsl
ret
test
jo
xor
xor
fbstp
jl
dec
xchg
push
fimull
pushf
jecxz
xchg
adc
repnz
bswap
lcall
neg
xchg
cmp
cs
js
shrb
enter
and
sub
mov
lods
jmp
inc
pop
sbb
xchg
mov
lea
inc
or
aas
xor
mov
mov
stos
ret
mov
aaa
inc
dec
or
loop
or
pop
xchg
xchg
mov
xchg
out
lret
test
add
ret
mov
filds
or
cmp
pop
push
lret
cmpsl
gs
mov
sub
lock
int
sbb
das
and
dec
dec
lea
pop
mov
pop
jne
cmp
inc
inc
push
xchg
mov
or
mov
mov
jnp
mov
dec
adc
mov
jge
in
xor
arpl
pop
mov
push
dec
sub
or
jg
sbbb
add
out
or
or
sbb
or
add
push
lret
icebp
aaa
add
mov
aad
loope
jge
adc
xchg
sbb
hlt
push
add
dec
jo
dec
fwait
stc
inc
push
add
push
sbb
or
or
aaa
imulb
bnd
push
cmp
dec
mov
icebp
push
cwtl
mov
leave
xchg
outsb
xchg
pop
add
into
test
pop
arpl
mov
jb
jp
lahf
adc
aad
mov
jp
mov
push
aam
movsb
aaa
sbb
cld
mov
fwait
xor
mov
mov
inc
cmp
sarb
movsb
jmp
enter
pop
sub
rclb
ja
clc
xchg
fistpl
mov
jb
adc
inc
cmp
add
mov
sbb
mov
adc
inc
scas
or
mov
es
movsb
xor
cmp
movsb
negb
std
scas
sti
or
xchg
int3
xchg
popf
aad
add
sub
lcall
popf
mov
mov
inc
subl
cmp
enter
movsl
push
cmp
mov
xchg
or
or
cmpsl
notb
sbb
insb
pop
dec
pop
mov
ds
popf
gs
and
sub
cmp
xchg
hlt
xchg
js
fwait
dec
cmpb
andb
daa
add
mov
jae
jmp
popl
mov
jb
sbb
push
pop
lock
adc
sbb
cli
mov
push
and
arpl
popl
cld
or
jl
in
sub
pop
shlb
js
test
sub
pop
cwtl
sbb
outsb
sub
jle
mov
clc
int3
outsb
cs
outsl
sarb
sbb
sbb
lds
inc
jge
loopnew
jg
xor
clc
push
jbe
lods
pop
movsb
add
mov
push
xchg
sub
dec
inc
rcll
xchg
pusha
ret
loopne
dec
adc
sub
sbb
mov
and
test
filds
icebp
pop
leave
jbe
mov
or
sub
sahf
sbbb
sarb
nop
push
pop
insl
rcl
jb
dec
fs
ss
ret
xchg
jg
xor
jmp
and
int3
ljmp
mov
jg
out
icebp
inc
pop
imul
loopne
gs
fdivs
in
mov
lods
dec
sbb
xchg
testb
lret
or
sbb
pop
into
sub
fdivl
std
jle
jle
out
test
mov
mov
pop
fucomip
fnsave
mov
es
add
dec
hlt
mov
into
mov
nop
pop
ret
fldt
sbb
inc
pop
or
mov
fwait
scas
sti
fidivrs
mov
ret
add
cmpl
push
jl
jb
xchg
in
js
testl
pop
mov
mov
stc
movsb
test
sbb
jecxz
in
sbb
sub
jo
rcrb
ja
push
fs
push
bswap
cs
jne
push
pop
les
mov
jns
inc
pop
ror
pop
inc
jp
ss
stc
iret
lret
mov
pushf
sbb
nop
sbb
and
lahf
adc
xor
pop
icebp
push
test
cmp
mov
cmp
push
sarb
adc
cmp
loopne
push
inc
out
clc
out
push
sbb
popa
stc
add
mov
js
push
std
outsl
pushf
xor
inc
jge
and
jmp
je
mov
insb
mov
repnz
sub
outsb
shll
push
and
mov
mov
hlt
aas
xchg
xchg
xchg
setle
mov
fwait
mov
cli
iret
ljmp
pop
mov
dec
mov
mov
xor
call
mov
inc
insl
push
or
addr16
popf
fs
mov
add
nop
mov
jno
sarl
jecxz
sub
inc
pop
inc
mov
out
sahf
jno
vmread
xor
and
push
adc
pop
mov
push
jnp,pt
pop
jae
push
xchg
stos
das
insl
inc
inc
movsb
mov
test
xchg
mov
cmp
or
arpl
cmp
mov
test
std
and
stos
xchg
jbe
insl
scas
stos
cwtl
jbe
mov
dec
mov
pop
rcll
leave
mov
iret
movsl
xor
cld
sub
subb
inc
add
xor
outsl
daa
rolb
fnstenvs
xchg
call
xor
enter
cwtl
adc
ficompl
mov
dec
stos
or
mov
xor
stos
adc
stos
cmp
bound
mov
or
cli
pushw
aaa
cmc
mov
adc
cmpb
jo
ds
negl
jno
pop
xor
fwait
movsl
push
adc
push
lea
jbe
lods
xchg
fidivl
mov
push
pop
out
xchg
pop
aaa
mov
arpl
test
fs
xchg
ficompl
jbe
clc
jae
outsb
dec
xchg
fisubrs
add
xchg
sbb
jl
jg
inc
les
push
aam
or
sbb
popf
mov
inc
add
jo
jmp
js
xor
das
in
popa
mov
pop
cmp
daa
das
aaa
jmp
push
mov
jo
xor
cmp
jg
mov
and
out
adc
jns
or
push
mov
ds
in
ds
push
jo
adc
jge
xor
sub
add
or
fistpll
jl
mov
in
add
pop
mov
out
xchg
lods
cmpl
xchg
push
lret
stos
iret
add
aam
pushf
adc
cmc
jne
sarb
pop
or
jl
dec
push
push
int3
and
fcompl
inc
inc
jns
jl
push
and
cmc
in
or
scas
loopne
fistl
imull
and
or
stos
sub
sahf
adc
iret
outsb
push
xor
imul
mov
or
imul
test
rcrl
insl
jo
mov
lahf
jmp
pop
aam
mov
xor
movsl
jecxz
mov
outsb
in
sbb
sub
loopne
and
xchg
movsl
mov
lods
add
push
jmp
xchg
jmp
loop
dec
loope
movsb
sbb
adc
jp
add
sbb
xchg
mov
repz
rorl
int
or
jge
std
mov
xlat
test
and
lods
mov
pop
jecxz
xor
popa
sub
and
lods
dec
repz
jbe
jnp
stos
sarb
xchg
mov
outsl
cmp
sub
mov
mov
sarl
add
pop
mov
pop
lods
and
xchg
sub
fwait
add
mov
icebp
push
xor
test
inc
mov
hlt
mov
mov
push
lea
jnp
movsl
sub
jno
into
mov
cmp
xchg
mov
jecxz
popa
sarl
mov
out
inc
faddl
fcoml
mov
int3
mov
cmc
xlat
js
shlb
js
lods
cmp
cmp
sub
jo
adc
sub
xor
mov
xchg
mov
mov
iret
sub
sub
cli
mov
push
sub
insl
mov
mov
cs
out
test
in
out
and
cmpsb
mov
sahf
imulb
push
jge
popf
orl
fbstp
mov
dec
xchg
dec
or
mov
les
sbb
mov
hlt
xchg
lea
jge
stos
mov
enter
add
cwtl
pop
aam
aam
mov
cmp
cld
stos
and
lret
icebp
insl
ds
mov
in
xchg
in
arpl
rorb
inc
push
adc
pop
cmp
pop
mov
fs
pop
lahf
lahf
jo
sbb
rol
ja
pop
xchg
inc
pop
xchg
pop
adc
push
jp
sbb
rcrl
inc
push
sti
sbb
cli
out
pop
inc
inc
add
lods
in
leave
sub
clc
and
lods
out
stc
outsl
xchg
and
jo
pop
subps
push
dec
fnstsw
popf
mov
or
aam
mov
loop
lcall
popf
xchg
fs
sub
dec
adc
cmp
dec
movsb
add
adc
aaa
hlt
or
push
cmp
push
pop
or
negl
sub
nop
hlt
mov
sbb
bound
jmp
data16
xor
int3
outsl
jl
adc
and
pop
push
lret
mov
jecxz
mov
mov
cli
js
inc
push
and
mov
ja
sbb
dec
inc
cmp
dec
iret
jbe
adc
les
stc
test
cmp
fldenv
or
push
outsb
pop
jns
pop
adc
push
adc
dec
out
imul
call
and
rol
jg
and
dec
scas
addl
push
lods
mov
cmpsb
push
mov
es
and
sub
leave
mov
je
push
into
mov
test
or
mov
fst
mov
mov
loopne
cs
and
rorb
out
jp
aas
xchg
andb
aad
and
ljmp
fwait
aam
andb
les
sub
fcomi
dec
cmp
pop
rclb
adc
and
mov
sub
or
pop
fsubrl
fsts
pop
mov
ss
fldl
loop
cltd
mov
pop
mov
cmpsb
scas
or
in
bound
sub
roll
int
push
sbb
add
sbb
scas
adc
push
push
or
shlb
sbb
pushl
jmp
push
out
dec
jne
out
jg
xchg
and
push
pop
lahf
ds
jbe
push
or
lret
xchg
jl
loope
mov
jo
sbb
push
mov
push
dec
fsub
pop
mov
push
pop
push
cwtl
xchg
or
cmp
fsubp
sti
repnz
inc
popa
sub
pop
test
add
clc
mov
mov
cld
nop
mov
adc
and
icebp
fnsave
mov
loopne
loopne
or
pop
mov
movsb
das
stc
xchg
imul
xchg
xchg
loop
push
adc
or
fs
push
push
mov
sub
pop
inc
sbb
mov
in
xchg
cwtl
pop
sbb
shr
mov
es
adc
lods
xchg
imul
enter
int3
outsb
daa
dec
cmp
inc
push
sub
aaa
pop
xor
test
cmp
xor
mov
inc
inc
mov
and
cmp
cmp
inc
aam
addr16
sar
pop
pop
outsl
mov
dec
cmc
sbb
shll
cmp
rclb
sbb
xchg
stos
out
sbb
lock
insb
cmp
xchg
inc
push
les
adc
sub
xchg
mov
cmp
mov
je
dec
mov
std
add
stc
xor
hlt
add
int3
lea
dec
lods
pop
push
adc
ret
in
jno
leave
xor
shl
addb
sbb
inc
xchg
cmp
cli
lock
cmp
gs
in
and
sti
nop
in
lret
ret
and
cmp
xor
dec
xor
and
mov
mov
into
dec
lret
jmp
xor
sbb
jecxz
jmp
inc
andb
and
and
pop
fs
inc
add
sbb
push
pop
cltd
stc
lds
adc
adcb
test
jbe
in
adc
arpl
test
xchg
pop
sbb
pop
mov
mov
or
add
and
jmp
sbb
jnp
push
jle
mov
rcll
js
pop
and
clc
xchg
mov
in
push
iret
out
sti
mov
inc
popf
inc
inc
cmpsb
jno
mov
adc
cmpsl
cmp
lret
out
add
sbb
cmp
int3
add
ds
or
rcrb
cld
sbb
xor
adc
sub
aam
xchg
daa
sbb
mov
add
xor
dec
nop
xor
xor
mov
push
or
push
aas
add
cmpsl
mov
jge
or
pop
cmp
shrl
inc
invlpg
adc
push
and
shrl
movsb
push
movsb
fsubl
int3
adc
aam
xor
and
es
xchg
stos
sbb
pop
xor
ljmp
or
sbb
outsl
icebp
mov
and
lret
mov
or
dec
mov
adcl
movsb
adc
fldcw
mov
popa
mov
cmp
inc
leave
pop
inc
xchg
fldenv
adc
lock
ret
mov
and
mov
cmp
cmp
cltd
fidivs
nop
jae
add
inc
popl
cmpsl
stos
mov
cmp
xor
int3
cmp
xor
mov
mov
lods
jle
pop
test
or
test
xchg
rclb
int
enter
dec
out
cmpsb
dec
sbb
xor
lods
out
or
add
addl
mov
push
push
fcmovnu
arpl
test
imul
scas
pop
mov
imul
rcll
add
cltd
je
mov
in
jnp
arpl
pop
imul
cmpb
or
jmp
or
and
test
sahf
fsubrp
int3
das
gs
or
in
push
xor
movsb
jp
jp
cmove
dec
lcall
roll
add
daa
sub
jo
and
call
xchg
adc
cmp
pop
mov
in
or
and
fnstsw
sbb
icebp
daa
and
push
imul
pop
jno
mov
sbbl
xor
push
repz
sbb
cmp
sub
ret
popf
das
lret
sbb
xor
das
cmp
sbb
repnz
cwtl
pop
or
push
and
inc
jns
mov
cmc
xor
mov
and
pop
push
mov
pop
rorl
test
inc
insb
add
mov
xchg
jb
rorb
and
test
fidivrs
popf
mov
call
jp
jl
xchg
test
stc
aam
roll
xchg
fwait
je
fstl
add
movl
pop
sbb
mov
pop
movups
sub
or
inc
lret
arpl
data16
inc
adc
loopne
push
incb
mov
dec
pop
add
mov
mov
jmp
sbb
sub
jle
fldenv
mov
enter
and
jle
inc
and
or
add
jb
aas
test
in
push
out
das
shr
mov
pop
xchg
dec
movsl
push
jp
in
sbb
mov
les
sbb
push
aam
pop
pop
mov
dec
pop
scas
cmp
ss
or
jnp
xchg
int3
mov
getsec
fidivrl
dec
loop
mov
movb
imul
cmp
outsl
mov
jmp
push
mov
push
aaa
pop
or
xor
test
xchg
call
icebp
and
lods
cltd
pop
or
push
ljmp
dec
ss
sar
xchg
les
pushf
addb
fmul
js
adc
rcrb
xchg
xchg
sub
pop
or
subb
in
xchg
subb
xor
stos
in
imull
insl
icebp
ret
data16
or
or
sbb
out
outsb
add
loopne
aam
and
cmp
or
test
jmp
or
mov
dec
push
in
cld
insl
xor
sub
mov
sbb
loopne
mov
sbb
cmp
lods
or
xor
aad
mov
push
incl
inc
xor
scas
inc
icebp
lret
sbb
xchg
or
jae
out
outsb
push
icebp
adc
and
loop
add
scas
jbe
enter
adc
insb
ret
fists
xor
cmpsb
test
pop
mov
js
adc
mov
jmp
jmp
pushl
incb
rolb
shrb
fcom
fsub
push
mov
sarl
lahf
rorl
fistpl
shl
fsubrs
les
push
cmp
int3
sbb
mov
fcoms
mov
daa
in
and
loopne
dec
jo
adc
jne
fimull
xchg
ljmp
mov
pop
aam
dec
outsl
dec
inc
push
jp
cwtl
push
popf
xchg
lcall
sbb
fdivl
insl
ffreep
push
inc
in
and
lods
addr16
testb
std
loopne
in
pusha
jns
dec
jbe
xchg
jmp
push
push
lock
andl
dec
jno
cmp
mov
add
imul
lret
rcl
test
icebp
pop
and
out
out
jge
pusha
add
push
jb
xchg
int3
push
or
xor
shrb
out
push
pop
inc
xor
cmc
push
xchg
mov
fsubp
jnp
xchg
gs
pop
dec
and
jl
inc
leave
xor
call
popf
dec
mov
test
cltd
mov
daa
mov
mov
imul
mov
or
in
adc
mov
mov
inc
sub
and
int3
dec
cmp
jmp
rcrb
pop
or
xchg
dec
aaa
icebp
jnp
adc
xchg
subb
push
mov
test
xor
pop
push
stos
adc
push
in
adc
sti
mov
lret
insl
ret
jns
cmp
int
inc
das
icebp
les
repnz
movsb
jno
in
add
xchg
fidivl
adc
hlt
pushf
adc
dec
add
loop
push
push
sbb
push
mov
inc
xchg
stc
push
mov
mov
subb
repz
jns
jg
pushf
mov
mov
outsb
fstpl
mov
daa
imul
and
add
lret
pushf
ret
xor
movsb
or
adc
mov
inc
jge
lea
pop
or
pop
pop
or
and
test
push
xchg
mov
jle
xabort
or
inc
lds
push
mov
fdiv
add
sbb
xor
negl
pop
adcl
mov
lods
repz
push
jp
xor
inc
popa
popf
aad
mov
sub
lods
fsts
adc
out
mov
movsl
pop
or
cmc
les
inc
add
inc
pop
adc
push
imul
dec
xchg
mov
mov
add
sbb
andl
ss
xor
sub
enter
mov
sbb
lea
xor
xor
int
nop
mov
rcr
cli
xchg
dec
lret
repz
packsswb
sub
scas
pushf
and
addb
cmp
ss
xchg
repnz
add
cvtpi2ps
mov
mov
addr16
aad
dec
subl
or
ja
loope
push
icebp
xchg
lret
lock
test
pop
cmpsl
idivb
test
les
lock
lret
dec
shlb
xor
fists
jno
sbb
insb
dec
ret
mov
inc
pushf
cltd
cwtl
mov
and
push
cmpsl
jle
lret
dec
mov
movsl
push
mov
cmp
and
cmc
mov
xchg
mov
xor
and
loope
sbb
in
sbb
in
lods
das
or
cmp
lds
mov
mov
jno
or
jbe
rcrb
in
push
push
jmp
sarb
dec
inc
scas
shl
push
lock
xchg
push
test
cmp
or
es
mov
mov
fimull
jns
lret
rcrb
add
push
mov
and
mov
scas
repnz
ss
in
adc
add
testl
scas
test
push
xor
lock
pop
jmp
aad
rolb
sar
pop
cmpsl
xchg
xchg
outsl
lea
push
outsl
and
sbb
cmovl
fimull
nop
repz
add
fisttpl
in
cmpsl
mov
adc
mov
xchg
sahf
fsincos
ret
mov
jge
pop
mov
pop
sub
lods
addr16
mov
jp
std
jmp
jnp
jecxz
push
out
mov
fucomp
shl
cmp
insb
repz
mov
les
out
mov
subb
nop
test
sub
in
pop
scas
sub
sbb
mov
es
adcl
dec
xor
dec
stc
jbe
hlt
mov
jl
sarb
inc
inc
push
es
adc
jmp
pop
push
and
loopne
xchg
fidivrs
add
jb
push
gs
repnz
sub
dec
jb
sti
dec
adc
les
mov
pop
adc
lock
sbbl
jp
mov
jl
lods
or
ss
sub
or
and
push
adc
les
inc
mov
cmc
sbb
jge
add
push
in
jae
dec
mov
sahf
mov
mov
add
push
fcompp
inc
mov
jae
fistl
inc
stc
out
fs
jns
std
leave
or
xor
inc
scas
and
outsl
pop
cmpsb
add
out
fstpl
sub
inc
dec
mov
xchg
ss
mov
test
mov
mov
test
mov
jnp
cmp
dec
and
adc
inc
cmc
sbb
hlt
mov
outsb
inc
push
jbe
push
test
in
aam
in
mov
pop
hlt
rclb
jmp
xchg
xor
out
int3
je
hlt
or
xor
aad
xor
mov
mov
fsubrl
jle
add
or
jmp
mov
or
sub
jae
jbe
leave
and
out
dec
xchg
mov
sub
leave
xlat
push
ds
push
divb
imul
cmp
or
mov
add
dec
adc
push
stc
inc
pop
or
cmpsb
inc
adc
xlat
in
test
xchg
sbb
and
pusha
push
sbb
xor
jns
loope
in
xchg
dec
dec
mov
insl
xor
or
lret
fisubrl
pop
sti
shr
mov
sub
mov
enter
and
js
mov
repnz
adc
xchg
mov
sarl
push
out
inc
int
pop
lods
test
cmp
cmp
arpl
mov
jmp
or
xchg
xchg
pop
imul
mov
leave
mov
iret
xor
imull
pop
or
cli
mov
and
sbb
jnp
ret
sarb
cmp
sti
std
insl
xor
fld
out
popa
nop
cmp
mov
out
int
sub
int
cltd
lds
pop
inc
test
xchg
add
jl
xchg
add
sbb
repz
and
ja
mov
sbb
cltd
sub
xor
ret
and
dec
scas
add
mov
mov
add
or
je
push
out
fcomp
sbb
stos
hlt
mov
mov
rcrl
mov
inc
pop
rcll
gs
daa
dec
jo
adc
dec
adc
fcomi
and
je
push
loop
push
and
fistps
ficoms
cmpsb
popa
fidivrl
cmc
adc
and
dec
sub
fcmove
cs
call
shrl
lret
ss
and
mov
jbe
aas
js
xlat
mov
push
pop
mov
iret
jp
or
jbe
push
mov
shll
push
or
sub
fcompl
inc
mov
xchg
repz
jns
out
loopne
ret
cli
and
in
sbb
mov
lds
scas
fisubl
jbe
into
pop
mov
and
int3
out
stos
in
add
xchg
mov
pop
jmp
sub
popa
aam
cld
xchg
dec
inc
inc
lret
cmp
aas
pusha
pop
aad
jb
stos
dec
push
inc
cld
dec
jno
sbb
pushf
add
loope
sbb
jb
cmc
add
adc
xchg
add
cmp
mov
orb
xor
ds
clc
movsl
popa
jb
lret
inc
movsb
pop
and
xchg
incb
add
jb
adc
xchg
mov
out
dec
fwait
cltd
lea
arpl
and
loope
mov
ljmp
sub
xor
fdiv
dec
in
fmul
and
imul
xor
jge
adc
and
ret
lret
pop
mov
clc
test
mov
cmp
arpl
call
pop
dec
cmp
cmpsl
cmp
iret
sub
sbb
jo
push
stos
in
add
fistpll
testl
cmp
cmp
sub
push
test
pop
mov
repnz
push
lea
mov
insb
call
xor
xchg
popl
and
dec
mov
les
sarb
push
test
xor
cs
rol
stos
inc
adc
in
mov
test
jns
and
cmp
sub
xchg
push
shll
mov
push
loopne
imul
pop
push
mov
or
push
sarb
pusha
mov
sub
add
and
push
adc
or
ficompl
fdiv
shld
mov
push
pushf
sbb
push
into
inc
mov
dec
jno
cs
dec
cmp
std
sbb
imul
dec
push
pusha
fnstcw
jne
mov
dec
out
sbbl
xchg
aaa
push
dec
push
pop
loop
call
pop
jo
mov
mov
or
inc
ds
jnp
scas
imul
mov
cmp
adc
repz
add
pushf
ss
xchg
aaa
jl
ret
addr16
adc
rorb
loope
xchg
ja
ret
xor
sti
mov
lret
add
loop
sub
adc
add
in
movsl
pop
sbb
sahf
jo
sub
jg
mov
cmp
add
xchg
clc
xchg
dec
imul
shll
dec
dec
pop
xor
clc
and
loope
dec
jbe
sub
sub
ret
add
push
pop
cwtl
fnsave
mov
jb
push
jnp
aas
pop
enter
dec
les
add
sub
scas
insl
add
fwait
push
mov
sub
repnz
hlt
jecxz
rolb
push
xchg
stc
sbb
xor
adc
rcrb
mov
jno
incb
aam
andb
mov
pop
aaa
fisubrl
mov
push
rorl
add
cld
xor
cmp
pop
dec
ja
push
jb
rclb
cmp
add
mov
in
mov
xor
push
lret
mov
ja
dec
cwtl
cmp
push
dec
mov
je
lods
xchg
fsubs
mov
aaa
mov
mov
std
mov
push
repnz
lods
in
sbb
jl
cmp
ret
mov
movsl
cmp
jns
cltd
gs
adc
mov
repz
pop
cmpb
pusha
out
adc
jne
les
mov
push
jmp
hlt
aas
add
rcll
jns
lret
push
lcall
xor
jp
cmpsb
sbb
lcall
push
or
int
dec
jbe
sbb
and
or
and
push
mov
and
pop
xor
and
push
or
xchg
push
outsl
dec
aas
negl
rcl
mov
in
imul
aad
imul
jnp
sbb
inc
lret
mov
push
push
jg
loopne
mov
and
adc
xchg
loope
or
pop
jnp
jle
cmp
out
rolb
mov
jg
pop
dec
fnstenv
popa
or
pop
dec
popf
pusha
adc
xor
es
mov
push
cld
stc
popa
jge
enter
adc
mov
cmpsl
aas
jp
xchg
scas
call
call
call
pusha
mov
mov
jg
lods
inc
pop
xor
sbb
push
xchg
dec
xlat
dec
jp
sub
dec
mov
fwait
lea
test
scas
lahf
adc
pusha
sub
insl
clc
or
push
arpl
jecxz
push
jmp
push
dec
dec
fidivl
fdivl
loopne
fs
xlat
push
xchg
aaa
cmpsl
adc
cmp
scas
aas
pop
fldt
jno
dec
pop
or
sub
rcll
mov
add
xchg
scas
adc
xor
dec
std
in
iret
mov
push
xchg
rolb
mov
push
shll
scas
outsb
adc
or
xchg
jge
ss
stos
rcr
test
imul
dec
pop
shrb
fdiv
mov
out
and
mov
aad
inc
or
sub
cmp
fisttps
mov
or
std
out
repnz
insl
sarl
adc
jg
pop
cmp
jo
add
or
sub
aas
insb
pop
lcall
fisttps
dec
add
test
lea
es
dec
enter
push
push
sahf
test
cmp
pop
stc
stc
data16
inc
sub
and
mov
mov
dec
test
fcomp
inc
and
inc
lahf
addr16
js
mov
push
jnp
out
imul
or
les
sbb
jg
cltd
xor
push
ret
icebp
dec
mulb
je
jns
pop
xor
jl
clc
loop
shlb
jbe
scas
xlat
lahf
cmp
push
js
cmp
mov
push
xchg
lgs
push
xchg
in
mov
dec
movsl
les
in
outsb
jl
mov
hlt
in
nop
mov
cmp
sub
sbb
lds
pop
push
mov
stos
dec
arpl
aad
incl
sub
pop
pop
movsl
fdivrl
fcoms
insl
add
push
inc
jb
fisttpl
push
repnz
push
loope
and
xchg
notb
je
movsl
dec
sbb
leave
jecxz
icebp
fnstsw
imul
daa
dec
and
call
jmp
leave
mov
fnsave
and
test
in
or
or
adc
cltd
cmp
sbb
adc
inc
mov
scas
data16
push
je
mov
cmp
sbb
xlat
jp
lret
fsubs
mov
inc
mov
pop
jnp
popa
je
inc
add
push
push
dec
mov
sbbl
cmp
ret
inc
mov
adc
cwtl
dec
mov
pop
dec
outsb
rorb
insb
aad
cmpsl
shl
and
sbb
mov
dec
mov
jg
xor
adc
cs
cld
add
jnp
pop
addr16
mov
loop
jne
jne
push
lock
cmp
cli
inc
subb
cmp
test
adc
into
cmp
jle
das
insb
jb
or
push
insl
cli
or
bound
mov
mul
lods
pop
jmp
jns
xchg
adc
jle
clc
lock
jns
roll
imul
in
je
mov
fisubs
xchg
cld
jle
push
stos
fildl
mov
push
pop
out
es
pop
xor
popf
jle
jno
je
or
and
lret
push
aas
in
xor
stc
adc
insl
adc
repnz
and
jbe
ds
mov
gs
imul
cs
cld
jo
mov
push
push
mov
imulb
ja
loop
mov
pop
mov
dec
adc
jbe
je
adc
scas
or
jecxz
mov
add
dec
mov
mov
mov
ss
sub
push
nop
cld
cltd
movsb
jmp
mov
xchg
sub
outsb
incb
push
jge
sbb
lea
dec
mov
cld
ds
ss
xor
sbb
mov
rclb
test
xlat
enter
pop
aam
sub
pop
sub
pusha
inc
inc
mov
pop
mov
adc
sbb
push
aam
xchg
test
add
popf
pop
adc
jecxz
vshufps
fs
cmpl
sbb
aad
jo
lods
mov
test
fwait
xor
aas
sbb
or
sub
mov
mull
test
adc
ja
mov
in
push
int3
sahf
pop
xor
ret
repz
sbb
pop
mov
adcl
sahf
jecxz
lea
loopne
lahf
pop
pop
in
orb
mov
fwait
push
xchg
inc
push
aas
add
aad
rorb
xor
cmp
in
adc
adc
aaa
ret
and
or
cltd
adc
movsb
inc
int3
mov
and
outsl
movsl
ljmp
out
dec
cmc
xor
inc
je
ss
repnz
xor
cmp
ret
jl
mov
xchg
inc
outsb
stos
push
inc
dec
mov
add
adc
lock
icebp
push
mov
adc
adc
mov
xor
pop
je
cmp
push
andl
xor
sbb
loopne
jne
subl
mov
xchg
roll
mov
aad
adc
dec
jae
out
xchg
in
iret
mov
mov
mov
xchg
out
stos
xchg
xorb
add
mov
sub
loope
xor
movsl
filds
in
inc
insb
add
fs
inc
aad
rorl
push
push
mov
push
mov
out
pop
mov
jmp
ss
pop
xor
mov
xchg
sub
add
jbe
sbb
adc
adc
xchg
fwait
outsb
cld
gs
xor
sbb
mov
aad
test
sub
sbb
jmp
xchg
add
aad
stc
cltd
cmp
and
jae
mov
sub
pop
push
subl
cmp
xchg
xor
jp
jb
push
jno
sub
xor
stos
test
push
add
frstor
aaa
aam
xor
dec
shrb
mov
jp
loope
dec
xor
fstps
in
dec
js
mov
pop
push
adc
aas
ljmp
and
sbb
nop
xor
push
sbb
orb
in
sub
or
sub
xor
and
push
ret
arpl
pop
mov
bnd
rcr
or
stos
aad
int
enter
pop
mov
pop
daa
imul
frstor
mov
stos
xor
inc
enter
and
dec
pop
sbb
in
clc
call
arpl
sbb
adc
popa
adc
cmp
ja
inc
and
insb
and
cmp
repnz
sub
mov
fildll
cmp
stos
adc
xchg
hlt
mov
xchg
lods
loope
mov
push
pop
bound
mov
pop
movsl
lock
sub
mov
icebp
test
addl
inc
mov
iret
cli
or
add
push
mov
push
repnz
ljmp
mov
orb
fnstenv
rorl
pop
or
sub
ds
scas
inc
jge
cmp
lahf
inc
adcl
sti
daa
sub
pop
cld
inc
mov
loope
stos
iret
loopne
push
das
vunpcklps
adc
inc
jmp
adc
negl
dec
inc
cmp
push
pop
jp
pushf
inc
jne
out
mov
lret
loop
xlat
push
popf
mov
das
xor
cmp
mov
imul
jmp
jb
rcl
lahf
js
mov
pushf
popf
scas
xchg
data16
pop
popa
xchg
add
push
dec
addr16
sub
addl
cwtl
cmpsb
jo
movsl
mov
insb
jge
xor
mov
jge
push
pusha
sbb
mov
ret
fisubrs
pop
inc
dec
fwait
nop
mov
xor
scas
loopne
xchg
mov
jp
pop
lret
fiadds
lods
mov
adc
incb
jl
loopne
lods
pop
notl
insb
xor
loope
lahf
mov
mov
push
mov
mov
mov
movsb
out
mov
jns
mov
and
leave
mov
lods
pushf
out
arpl
or
imulb
scas
mov
adc
push
cmp
xor
int3
mov
add
dec
jp
repz
int3
lret
fidivrs
sub
and
aad
lahf
mov
fists
aaa
dec
xor
movsl
jns
push
cmp
jne
cmp
push
adc
pop
jb
push
repz
push
lods
mov
cmp
shr
ja
pop
subb
out
adc
leave
addl
mov
xchg
out
pop
jecxz
aad
mov
sbb
jae
mov
call
mov
fidivl
sub
and
push
or
outsb
or
xchg
andb
mov
leave
xor
fnstenv
dec
xchg
in
jbe
add
jns
gs
in
add
sbb
out
push
dec
adc
mov
sbb
inc
mov
and
seto
cmpsb
push
mov
pop
decl
pop
push
enter
sub
es
mov
sahf
mov
int
jle
push
pop
cmpb
jo
xor
cmp
cmp
sarl
mov
and
nop
sub
call
int3
cmp
mov
aad
cmp
orl
dec
clc
out
pop
pop
jmp
rol
adc
loope
lds
add
sbb
jmp
movsl
iret
xlat
xchg
mov
sti
std
xor
fimuls
ljmp
mov
imul
push
adc
popa
push
push
xor
cli
nop
lods
sahf
fimuls
lods
and
mov
scas
pop
loope
xchg
gs
insl
in
fwait
push
xor
mov
cmpsl
jns
push
decl
popa
pop
pop
outsl
mov
mov
xchg
adc
int3
fucompp
sbb
xchg
push
ss
cli
jg
repnz
mov
sbb
push
cmpsl
mov
cmc
adc
fadds
mov
add
sbb
push
push
or
xor
subl
adc
mov
repnz
or
bound
stc
repnz
push
jae
lahf
aad
movsl
and
mov
pop
adc
sbb
xchg
xchg
test
test
inc
in
adc
mov
push
lcall
ret
pop
add
and
decb
lret
or
arpl
pop
jge
les
cmc
push
repz
mov
mov
sub
jbe
inc
inc
mov
nop
lret
mov
jnp
jg
mov
mov
stos
push
addr16
adc
int
inc
mov
inc
and
test
int
stos
push
inc
test
adc
push
add
mov
mov
fsubl
push
adc
inc
std
fisubrs
pop
in
andl
sahf
adc
dec
sbb
adc
mov
out
shrl
jge
mov
mov
jnp
xchg
push
outsb
adc
popf
jne
ss
xchg
mov
sbb
sarl
stos
dec
add
jecxz
pop
ljmp
test
into
mov
fstps
cld
mov
call
mov
dec
pop
pushf
or
jae
mov
xchg
cmp
or
adc
ds
ret
adc
xor
inc
int3
mov
out
out
fwait
in
xlat
sahf
imul
sbb
repz
dec
imul
nop
js
icebp
ja
scas
mov
mov
sub
test
sub
ficoms
push
enter
cmpsb
cmp
mov
or
rolb
dec
cs
xor
push
add
mov
sbb
pop
clc
mov
inc
push
adc
cmc
cmpsl
std
inc
scas
mov
adc
imul
mov
or
jb
xor
jno
repz
cmc
inc
lods
jo
icebp
popf
mov
add
enter
sub
inc
sti
es
adc
movsl
or
mov
and
fninit
mov
xchg
push
imul
push
scas
in
sub
jns
mov
subps
loop
aad
mov
push
lds
mov
and
jp
or
sub
xor
sbb
xor
cmp
js
iret
enter
inc
call
aad
mov
sbb
test
jmp
mov
add
cmp
shll
mov
lret
mov
pop
pop
xor
aas
outsb
mov
clc
icebp
add
and
flds
aaa
fstps
loope
into
and
stos
orl
add
sbb
lea
pop
adc
push
iret
popa
inc
adc
enter
xor
push
test
push
mov
dec
sbb
movsb
mov
sub
sub
das
cltd
and
xor
xchg
xchg
xor
mov
into
gs
sub
shlb
push
lods
mov
and
or
aad
ret
cltd
pop
sbb
and
push
fstpl
lods
lret
fildl
cmp
push
and
cld
in
xor
and
insl
mov
jno
cmp
outsl
adc
in
sbb
and
sbb
leave
mov
gs
add
inc
jne
push
test
out
dec
or
xchg
stc
cmp
ja
cmpsl
xlat
shlb
push
push
xchg
je
or
pop
sub
popa
addr16
mov
sub
sti
fdivrs
push
mov
xchg
std
mov
icebp
lcall
fiaddl
mov
mov
lcall
in
pop
mov
mov
idivb
or
fcmove
mov
adcl
enter
push
lret
pop
mov
push
fs
dec
call
mov
adc
lock
xchg
cmp
or
loop
movsl
xchg
stc
sub
enter
daa
inc
and
sbb
jne
mov
test
sahf
push
es
cs
and
rol
jns
sbb
movsl
xchg
shl
xchg
add
jecxz
add
scas
add
adc
pop
mov
jp
in
pop
loope
cs
sbb
test
int3
xchg
lds
dec
push
das
ljmp
test
jmp
fwait
nop
sub
test
push
scas
mov
inc
scas
adc
das
and
cmp
loop
shl
outsb
outsb
pop
add
mov
jg
scas
in
adc
xchg
sahf
cmp
sub
mov
insl
pop
inc
sub
jns
push
xor
mov
jbe
add
out
cmp
xchg
andb
lret
adc
jmp
xchg
stos
dec
je
fdivrp
add
outsb
or
dec
sbb
mov
sub
xchg
xlat
cmc
repz
push
repz
mov
adc
mov
pop
hlt
addr16
cmpsl
out
in
inc
xlat
xchg
scas
pop
mov
or
sbbl
inc
add
adc
lret
push
jge
jo
movsb
or
lret
or
ja
jge
inc
lret
push
es
jg
push
movsb
imul
cltd
adc
js
pop
mov
sbb
insb
aad
scas
je
mov
iret
sub
push
push
sbb
dec
push
nop
aam
sbb
lret
icebp
cltd
enter
sub
add
lahf
mull
subb
movsl
aam
insl
cmp
pushf
nop
cmp
jmp
aas
es
xchg
movsl
mov
mov
jnp
cli
fcoms
push
cmp
dec
cmp
adc
inc
cmp
outsl
test
and
js
and
mov
mov
cwtl
push
push
lods
pop
repz
dec
mov
into
out
ret
mov
pusha
aam
xchg
add
adc
call
scas
jecxz
jl
pop
mov
add
and
rcrb
mov
out
rorl
or
test
pop
ret
jbe
addr16
mov
aas
fsubrs
aaa
sbb
in
js
pop
pusha
test
mov
inc
lea
dec
ret
pop
lret
or
popl
mov
or
cmp
inc
fisubl
or
lock
xlat
lret
cmc
jne
add
inc
mov
jae
call
les
pop
inc
lcall
jae
daa
or
or
sbb
dec
pop
and
pop
mov
js
mov
add
mov
test
insl
sarb
pop
xor
pushf
imul
xchg
loop
imul
std
xor
jnp
ret
data16
aaa
adcl
add
mov
jne
loope
repnz
lods
mov
sbb
shrl
ss
stos
jb
outsl
scas
pusha
mov
inc
fimuls
out
ds
int
into
outsl
aaa
mov
ds
xor
push
mov
idivl
out
push
mov
cmc
movsb
sahf
sti
xchg
enter
xchg
and
notl
or
js
sbb
fistpll
pusha
mulb
test
aaa
dec
sar
cmp
movsb
mov
sbb
inc
leave
jbe
scas
mov
sti
data16
scas
adc
stos
ds
mov
pop
mov
and
inc
inc
add
jmp
hlt
lret
jl
je
leave
sbbl
or
lea
mov
mov
push
mov
call
in
jo
mov
idivb
or
adc
ds
cltd
sub
je
and
cmp
push
ret
ficoml
nop
mov
test
adc
xchg
mov
pop
sub
lds
lcall
sub
dec
sub
repz
mov
sub
adc
inc
fs
gs
std
cmp
sbbb
outsl
je
cmp
inc
hlt
lret
in
shrb
jle
aaa
push
outsb
cld
pop
xchg
loop
push
push
imul
sar
xchg
iret
into
hlt
mov
sub
mov
sbb
push
scas
adc
mov
push
lds
jnp
out
loop
xor
dec
inc
int3
xchg
pop
cmp
int3
mov
mov
cmp
out
fwait
mov
mov
out
adc
add
adc
hlt
inc
cli
xlat
aaa
mov
movsl
sub
xor
cmp
mov
pop
push
push
xchg
pop
lahf
loope
lret
push
ja
mov
mov
pop
xor
test
mov
cs
cmp
fcmovnb
insl
loopne
scas
outsb
outsb
inc
or
pop
sbb
jle
cmp
or
jne
push
bound
jne
rol
nop
xchg
popa
mov
aam
add
or
int
out
pushf
and
xor
and
pusha
hlt
jl
adc
rclb
lea
cmpsb
in
xor
jmp
out
sbb
nop
and
in
mov
js
xchg
icebp
fisubs
dec
mov
out
cmp
push
mov
lret
or
out
ftst
sbb
dec
outsb
mov
je
lds
xchg
lahf
retw
cmpsb
imul
jg
lcall
lds
clc
ret
repz
aaa
bound
inc
mov
lods
cltd
sbbb
add
mov
push
je
pop
cmp
and
push
or
ss
mov
and
xchg
lret
scas
sub
fnsave
jle
sub
lock
sub
jno
mov
lcall
cmp
jle
repnz
mov
pop
sbbl
fcmove
jae
rolb
jg
mov
seto
std
test
cli
dec
push
out
loopne,pn
mov
mov
pop
xchg
outsb
ja
pop
adc
add
or
fsubl
push
lods
push
enter
adc
lahf
shrl
pop
fs
mov
adc
push
les
mov
dec
test
daa
adc
xlat
dec
and
lcall
or
xlat
mov
push
cmp
jo
mov
mov
rol
push
cmp
fiadds
js
add
fisubrl
adc
lcall
jae
pop
fs
jg
ret
xor
adc
sahf
mov
shlb
sti
inc
xchg
mov
push
in
or
daa
scas
sbb
sbb
xor
xor
pop
cmp
rorb
xchg
mov
add
shrb
and
sbb
leave
push
cs
lahf
xchg
icebp
dec
arpl
add
rcll
fcmovne
loopne
pop
dec
test
push
xor
and
fsubrl
xor
inc
jns
je
scas
popa
adc
mov
out
mov
push
sub
push
loope
loope
mov
inc
push
push
icebp
loop
xchg
shl
mov
pop
push
fwait
aas
jmp
daa
pop
jp
loop
jo
lahf
je
xchg
fidivrl
test
stos
cmp
aam
arpl
push
mov
aaa
sub
jg
movsb
xchg
ja
xor
rdpmc
and
jae
pop
add
inc
fildll
mov
shrb
push
loope
cmp
fs
lds
push
add
mov
xor
pop
ss
shl
dec
mov
mov
insl
ds
rorl
add
enter
sub
leave
pop
lds
in
shlb
lret
in
or
imul
pop
rcll
inc
jae
cmp
pop
pop
sub
xlat
mov
add
test
pushf
fidivrs
lret
out
fstl
xrelease
out
add
mov
push
inc
push
inc
fdivr
sarb
pop
rclb
dec
call
fmull
rcl
arpl
and
dec
lcall
cmc
icebp
xlat
pusha
jmp
dec
xchg
jecxz
mov
mov
cmpsl
cmp
outsl
push
or
jns
xor
xor
loopne
enter
sub
lea
bound
fcmovu
idivl
dec
add
inc
pushl
roll
xor
mov
in
or
xchg
sbb
js
jecxz
sub
jae
or
jge
cmc
mov
out
mov
xor
js,pt
xor
adc
push
es
xchg
faddl
iret
cltd
push
adc
fs
xorb
daa
mov
ds
addl
rolb
push
mov
or
pusha
push
das
popf
rol
ficomps
sub
dec
or
xor
sub
loop
pop
add
fcmovnbe
out
mov
and
push
ljmp
mov
cmp
popa
mov
mov
in
jle
adc
addr16
mov
xor
lods
jne
int3
repz
pop
sub
push
iret
sub
mov
jmp
mov
mov
dec
and
jnp,pt
aad
insl
pop
adc
int3
roll
pushf
rep
sub
push
xchg
ret
xor
push
push
xchg
mov
ss
shlb
sbb
pop
mov
mov
xor
cmp
xchg
cli
arpl
insl
outsb
push
das
fidivl
or
stos
sbb
push
dec
xchg
icebp
cmp
lret
jns
addr16
mov
bnd
sbb
fadds
jno
lahf
cmpsl
add
adc
or
jo
xchg
xor
dec
sbb
mulb
icebp
popf
outsl
xchg
jecxz
pop
popa
and
adc
sbb
fwait
sbb
rolb
popf
jg
add
pop
push
je
test
sub
test
or
jnp
fbstp
std
and
and
imul
and
lcall
outsb
xor
js
and
mov
cmpsb
adc
cmp
mov
andb
jmp
jg
jo
jge
les
jg
loopne
mov
and
jae
inc
subb
mov
movsl
adc
mov
inc
mov
dec
inc
adc
xorb
scas
cld
out
fcoml
adc
mov
push
gs
dec
cmc
iret
cmp
divb
bswap
dec
in
cltd
mov
jp
imul
imul
test
lahf
dec
loop
pop
rcrb
push
xor
aam
dec
cmp
or
push
fisubrl
adc
push
hlt
mov
aas
mov
adc
lods
pop
repnz
add
jbe
test
sub
inc
push
adcb
pop
popa
mov
stos
and
push
fisttps
roll
fxch
lret
addb
mov
call
push
jg
cli
test
cmp
insl
mov
or
leave
lcall
clc
fadds
sbb
clc
test
lea
xor
mov
sbb
cmp
cmp
pop
inc
aas
nop
movsl
and
rep
pop
loope
xchg
loopne
lcall
scas
ror
add
rcr
and
cmp
mov
scas
xchg
jne
lock
outsl
cmp
pop
sub
adc
adc
cs
pop
mov
ficoms
inc
mov
push
popa
mov
inc
fstpt
and
adc
enter
call
into
dec
lock
fisubl
minps
sbb
lds
insb
pop
out
xchg
sbb
data16
aad
aad
out
add
jbe
jne
pop
xchg
loope
pushf
rcr
pop
pop
sbb
sub
lds
xchg
cltd
add
pop
pop
push
loopne
rolb
adc
sbb
inc
daa
mov
andl
and
lods
mov
pop
pop
gs
daa
aam
add
lret
ja
lock
push
adc
outsb
xor
in
jg
mov
mov
call
test
outsb
add
loop
pop
pop
adc
fs
cli
pop
jae
bound
sub
jns
sub
cld
xor
shr
cli
ret
dec
or
test
xor
mov
lods
jl
or
cs
ret
sub
cmpsb
mov
neg
add
xchg
mov
jg
outsb
sub
add
or
data16
sti
fisubs
fbstp
imul
sbb
jns
sbb
and
xor
dec
pushl
jno
adc
pop
pusha
icebp
pop
inc
push
sbb
rorb
popa
mov
push
incb
daa
or
fdivrs
and
roll
jecxz
pop
popf
push
and
orb
mov
or
add
xlat
insb
push
pop
insl
mov
inc
loopne
call
inc
jmp
popa
fiaddl
movsl
cli
dec
jg
xchg
mov
lcall
sub
mov
pusha
pop
popa
fwait
jb
test
shr
sub
adc
std
push
sti
mov
push
adc
repnz
lret
pop
add
repnz
data16
pop
stos
and
sbb
shr
xchg
mov
push
add
adc
or
loope
fsubs
mov
scas
inc
shll
imul
mov
ret
inc
sub
dec
shlb
push
cwtl
loope
outsb
sub
adc
cltd
leave
sub
sub
out
dec
jmp
movsl
sbb
jae
in
fldl
test
imul
inc
cmp
mov
sbb
sbb
lods
sub
push
aas
ret
bound
in
loopne
dec
adc
ja
dec
cmc
popa
push
cmc
out
sub
bndstx
ret
adc
cmp
mov
push
out
aaa
leave
stc
popa
pop
mov
leave
sub
jl
jo
sarl
sbb
pop
adc
cmp
lds
add
dec
push
pushf
mov
incl
mov
pusha
lea
cmp
jecxz
dec
popf
add
cli
sbb
jno
add
in
leave
xchg
shlb
cmp
mov
ret
icebp
cmpsb
add
cld
sub
fbstp
and
push
into
aaa
inc
fimull
pop
inc
test
jg
sbb
arpl
jae
jecxz
dec
adc
jns
lcall
in
pop
mov
mov
and
push
orb
or
stos
jnp
pop
jecxz
outsl
test
xorl
mov
stos
adc
jo
or
fsubrl
js
mov
push
orb
int
mov
adc
xor
iret
faddl
mov
out
stos
adc
jp
test
scas
aaa
mov
call
cmp
aaa
aad
shr
dec
aas
in
test
cs
aaa
ss
das
dec
pusha
pop
push
es
xchg
sbb
js
mov
aad
lea
xchg
inc
sub
or
and
mov
pop
jb
mov
mov
repz
inc
sbb
sub
cmp
subb
add
jmp
outsl
fdivrs
aaa
scas
push
popf
popf
imul
ja
xchg
inc
in
mov
sub
adcb
sub
pop
push
in
pop
jb
dec
xchg
in
das
xor
shll
icebp
loope
cmpsb
pop
mov
cli
call
sub
jp
mov
lret
cmc
stc
pop
fprem1
clc
inc
xchg
sub
mov
fs
jmp
xchg
sbb
xor
scas
les
scas
cli
cld
into
movsl
rcrb
add
cltd
dec
inc
lea
jne
out
adc
push
aam
dec
push
ret
sub
sub
fucomip
pushf
in
dec
arpl
jg
jno
pop
push
test
call
sub
pusha
lds
pop
cs
daa
aam
mov
lea
hlt
subb
ret
adc
xchg
inc
mov
pop
inc
adc
icebp
or
enter
mov
popf
in
cmp
jmp
jns
daa
lret
or
pusha
mov
sub
add
mov
and
cwtl
inc
and
int3
or
lds
pop
shll
dec
lods
and
movlps
push
pusha
mov
int3
je
pop
fprem1
cltd
dec
adc
add
dec
mov
inc
mov
imul
adc
xor
jl
scas
ret
inc
adcl
sub
sar
icebp
leave
mov
or
mov
lret
mov
cmp
jp
mov
stc
lods
lods
jns
lret
test
adc
jl
xor
movl
gs
pop
imul
pusha
rolb
aad
inc
movsb
inc
add
testl
cld
test
push
xor
cwtl
mov
js
imul
jne,pt
pop
pop
mov
jecxz
mov
cs
cmpsb
sub
mov
xchg
jae
pop
sahf
pop
fs
xchg
mov
sub
sti
ja
xorb
and
inc
out
outsb
mov
mov
divl
orl
test
push
fucom
fstl
xchg
ret
sbb
mov
lods
xchg
fadds
dec
pop
aad
out
xchg
and
mov
std
stc
popa
leavew
ret
ljmp
mov
mov
or
xchg
fs
xchg
add
jmp
jb
leave
xlat
mov
lods
push
in
enter
or
jns
arpl
arpl
mov
inc
push
jb
enter
nop
or
sbb
in
popa
out
and
sbb
pop
jns
sub
fldt
or
mov
mov
in
pop
push
sti
pop
notb
repnz
xor
mov
int
jnp
popf
in
adc
mov
leave
out
jb
or
cwtl
jmp
push
push
push
pop
inc
pusha
int3
outsl
mov
adc
fdivs
jae
or
outsl
inc
outsb
jno
xchg
xchg
adc
adc
sti
jle
aad
jp
rcrb
in
enter
push
mov
bound
and
push
mov
sbb
jae
aad
mov
mov
stos
dec
mov
adc
mov
inc
mov
inc
arpl
push
stos
lret
in
jne
cld
into
mov
clc
rcll
or
jge
jmp
ficoml
into
ja
cs
cmp
inc
mov
daa
push
out
cmpsb
daa
rcr
imul
cmpsl
scas
pop
mov
fwait
es
jg
sti
mov
dec
cmp
outsb
sub
inc
inc
cmp
mov
and
movsl
mov
cmpsb
cmpsb
xchg
pop
cmp
and
setp
into
pop
mov
xor
inc
sbbl
xchg
arpl
adc
int3
mov
xchg
mov
xchg
js
stos
cli
xor
out
ljmp
add
dec
addl
xchg
cmp
jae
movsb
xor
repnz
adcb
scas
outsb
or
leave
jb
fnsave
jge
pop
jmp
dec
mov
sub
sbb
mov
decl
mov
push
adc
jp
lea
add
cmp
and
nop
inc
daa
ret
iret
and
dec
outsb
mov
std
pop
lods
pop
andl
sbb
js
mov
pusha
pop
push
imull
jle
mov
or
repnz
xchg
sti
dec
test
jle
inc
popf
sbbb
inc
and
adc
sbb
pop
decb
mov
mov
mov
fmul
adc
and
adc
jne
cmp
out
lcall
or
and
sub
xor
insb
adc
xor
sub
adc
scas
mov
loopne
sub
sub
stc
insb
mov
mov
mov
div
pop
repz
xlat
pop
movsl
outsl
sbb
fisttps
subb
mov
test
xor
scas
int3
sub
bound
and
sbb
loopne
addl
mov
mov
psrld
xchg
xchg
ljmp
test
test
jmp
mov
or
mov
xor
dec
scas
and
cwtl
aaa
add
sarb
outsl
fcmovb
sub
arpl
push
cmp
jno
xchg
mov
mov
pushf
xchg
sub
sahf
repz
jbe
lret
aad
sub
pop
into
stc
pushf
out
test
filds
enter
fsubl
insl
shr
push
js
fldl
and
je
scas
push
cmp
sub
into
fucom
push
imul
jge
jo
add
and
lret
jle
out
push
or
jno
pop
cltd
jle
fsubl
adc
and
jl
dec
fiaddl
mov
inc
push
xlat
push
mov
pusha
daa
inc
adc
iret
cmp
divb
int3
push
icebp
fst
aad
adc
test
cmpl
cmpsb
inc
data16
in
pop
pushf
mov
imul
test
pop
jo
out
and
stc
mov
xchg
sub
das
ror
cmp
mov
std
jbe
dec
out
sbb
or
sbb
imul
sub
jnp
adc
out
imul
inc
lods
fdivrs
shll
ret
xchg
lahf
imul
lds
aam
dec
dec
jae
xor
inc
and
jbe
inc
repnz
mov
adc
pop
and
repnz
mov
sub
mov
sbbb
movsl
aam
mov
add
or
xor
fisubrs
cmp
push
sbb
jle
je
inc
add
inc
pop
xchg
mov
push
cmp
into
int
add
inc
inc
movsb
ds
sub
push
popa
jmp
sub
gs
ror
sub
out
stos
aas
les
push
jns
cwtl
xchg
sbb
sub
scas
pop
inc
push
notl
jg
imul
sub
cmp
adc
jmp
addr16
add
and
ja
idivb
jmp
insb
and
in
adcl
mov
fmulp
loope
test
xor
testl
sbb
stos
jne
push
decb
loop
mov
pop
dec
repnz
adc
dec
aam
mov
mull
pop
cs
mov
mov
mov
je
mov
and
loopne
shlb
idivl
inc
mov
pushf
inc
imul
in
int
popf
mov
pusha
jmp
adc
adc
xchg
and
scas
inc
out
ficoml
cmp
fs
jmp
call
mov
sti
push
mov
insl
xchg
jne
leave
mov
mov
stc
pop
jmp
imul
in
adc
xor
lds
imul
popf
push
dec
repz
push
push
jne
dec
push
fs
icebp
sbb
dec
add
fldl
and
pushf
testl
push
lods
scas
jmp
orl
mov
rol
push
fwait
inc
push
aas
or
out
lods
stc
add
adc
or
lock
xchg
mov
jl
jne
ljmp
imul
jg
gs
sbb
neg
imul
dec
adc
test
arpl
sub
jne
aas
std
mov
jns
jb
mov
in
in
push
inc
xor
sub
cmp
in
pop
std
cmp
mov
mov
fistpl
cmp
mov
js,pt
iret
push
loopne
popa
aad
arpl
inc
mov
and
pushf
cmp
cmc
cltd
push
das
push
sub
add
inc
mov
jb
add
je
rorl
push
fbld
cmp
ds
notb
das
leave
mov
mov
push
xchg
data16
inc
fisttpl
out
adc
xor
dec
repz
fnstenv
xchg
mov
or
out
test
cmp
cmp
or
mov
xchg
mov
mov
icebp
sub
movsl
add
sbb
add
xchg
js
xorl
mov
incb
xchg
and
scas
dec
push
jg
out
jns
mov
repz
cmc
into
je
leave
and
dec
sbb
cld
shr
lods
bound
xor
cmpsl
fidivl
test
lret
cli
xchg
int3
push
sahf
mov
xchg
loope
push
enter
pop
adc
push
test
adc
pop
cmp
pop
lds
jno
xlat
rolb
adc
lods
pop
insb
pop
mov
jne
pushf
lds
lea
pop
jbe
inc
sahf
dec
xchg
jmp
aas
sti
dec
out
jns
loop
cli
add
sbb
sbb
sbb
xor
adc
jnp
into
mov
mov
cmp
movsb
push
inc
push
cmp
pushf
inc
sub
shll
xor
das
pusha
mov
imul
in
int
movsl
mov
aas
adc
inc
mov
lea
dec
push
inc
frstor
cltd
lds
sub
scas
mov
sbbl
test
addr16
dec
mov
mov
add
popf
cmp
insb
int
rorb
les
and
or
sbb
inc
sub
fs
inc
inc
lcall
add
mov
push
sub
inc
mov
xor
push
adc
cli
in
mov
jg
sbb
and
inc
cmp
xor
adc
fiadds
test
xchg
test
and
fwait
inc
js
xchg
aaa
xorb
and
fcompl
mov
sbbb
jnp
mov
and
add
sub
das
dec
in
lock
adc
jle
pop
xor
rolb
cmp
add
stos
and
cmp
outsl
push
and
dec
idivl
out
mov
jp
lods
mov
adc
mov
lods
add
xor
or
leave
icebp
ret
ds
popf
cmp
push
lods
popf
jp
mov
xor
in
in
cmp
mov
adcl
in
mov
mov
mov
dec
adc
push
std
inc
jmp
sbb
les
sub
cmc
aaa
stc
and
out
jae
gs
pop
cld
sbb
lock
and
pop
loopne
pop
sub
inc
pop
arpl
or
scas
cld
out
add
adc
cmp
cmp
cmp
add
pop
stos
mov
inc
adc
sub
push
ss
and
sbb
inc
dec
or
mov
iret
push
les
xlat
xchg
out
mov
and
dec
push
ret
lcall
xchg
pop
mov
jg
ret
sbb
jecxz
sbb
js
int
out
push
in
mov
jo
paddusb
imul
jecxz
jp
aaa
dec
stc
in
jp
sbb
push
sarl
mov
rcrb
repnz
in
outsl
stos
xchg
lret
mov
addr16
mov
push
xor
or
rol
adc
mov
xchg
sub
stos
pop
aad
sub
jns
icebp
push
cmc
mov
clc
aas
bound
pop
nop
cltd
ret
cmp
mov
shll
push
adc
aam
lret
jae
out
and
xchg
cmpb
jb
mov
cmp
fs
or
pop
fistl
pop
adc
xor
idiv
push
add
push
bound
test
fildl
outsb
push
scas
jmp
pop
jp
ljmp
mov
and
cld
ljmp
jge
dec
insb
add
jno
es
push
fisttpl
loop
shlb
out
xchg
mov
pusha
sub
adc
xor
cmp
mov
jne
xchg
sar
imul
ja
lea
xchg
jmp
add
or
stos
nop
jns
dec
xchg
xchg
daa
push
cmp
scas
sti
push
mov
icebp
lds
jne
cmp
in
and
in
pop
push
pop
sbb
jecxz
mov
add
or
in
cwtl
je
dec
ljmp
adc
faddl
enter
cmpsl
cld
test
push
jecxz
dec
sbb
cwtl
inc
sub
mov
adc
dec
shlb
xchg
shlb
loope
dec
test
inc
js
mov
adc
aaa
data16
jp
xchg
fs
jecxz
jmp
mov
cmpb
leave
jmp
loopne
fcomp
xchg
xor
lods
ud1
test
cmc
shrl
push
test
sub
sub
les
lds
aas
xchg
stc
add
scas
xchg
pop
xor
lahf
repz
push
fcomps
mov
sbb
div
add
jge
mov
sbb
cmpb
movsb
pop
ja
push
add
lea
cmpb
out
fnstenv
mov
sub
adc
in
inc
pop
out
pop
sbb
inc
fisubrs
movl
out
mulb
hlt
sti
loop
add
inc
aad
cmpsl
inc
pop
and
jle
sbb
loopne
mov
xchg
daa
into
scas
add
cld
loopne,pn
je
inc
aam
cmp
int3
jbe
addl
and
cmp
mov
push
xor
cmp
sub
xor
sub
inc
sub
stos
in
cmp
lock
jmp
data16
into
adc
push
or
out
call
gs
pop
icebp
sbb
mov
push
fmul
dec
mov
cs
mov
jbe
sub
mov
cmp
mov
movsb
popa
xlat
mov
fcom
inc
lret
inc
sub
int3
out
call
inc
adcb
mov
sbb
push
adc
mov
and
rep
ja
ljmp
add
leave
dec
add
mov
imul
xor
aas
or
cs
f2xm1
xchg
inc
adc
xor
mov
bound
mov
mov
repz
in
dec
mov
mov
pop
mov
fs
bt
lods
popa
ret
cmp
test
push
repnz
int
add
inc
jns
in
and
into
xchg
pop
pop
add
sub
mov
adc
fnsave
es
mov
mov
pop
cs
ja
mov
lock
nop
into
mov
jmp
mov
dec
in
inc
adc
adc
adc
cmpsb
mov
in
adc
adc
fdiv
sub
mov
mov
shl
out
sti
movzwl
push
int3
sarl
pop
ds
sbb
ret
insb
ficoml
out
push
dec
inc
aad
pop
in
push
stos
mov
push
xor
jp
push
lcall
sub
push
test
iret
sbb
sbb
std
lret
ret
mov
xchg
flds
fcomps
aaa
aaa
or
dec
loopne
iret
push
in
mov
cmc
jne
ds
fildl
ror
inc
mov
shlb
je
push
fldenv
test
push
jnp
xor
mov
sahf
xor
pop
cli
pop
ds
pop
cmpsb
repz
into
xchg
imul
xorb
mov
call
bound
fcoms
mov
sbb
jle
cs
dec
dec
call
out
out
jne
add
push
push
sahf
iret
idivb
push
jnp
addr16
cmp
fsub
jle
shll
add
cmp
shl
inc
pop
mov
mov
cli
dec
in
aaa
mov
xchg
xchg
sbb
xlat
je
scas
cmp
xlat
push
and
cmpsb
push
sar
out
ds
fsubl
js
pop
add
inc
cwtl
jnp
jno
clc
inc
and
or
mov
call
in
mov
mov
daa
adc
cmp
and
add
sbbb
push
cmp
lods
push
or
js
pop
sub
repz
pop
dec
pop
jnp
rclb
sbb
and
jns
adc
cli
test
push
cli
sub
xor
frstor
lcall
lods
pop
mov
sahf
xchg
pop
sub
cltd
mov
lock
lods
inc
push
push
inc
dec
xorl
popf
cltd
lretw
push
sub
lret
out
or
lock
pop
inc
bound
call
sbb
and
xor
pushf
out
and
pop
push
pop
frstor
fbld
call
sbb
pusha
sbb
sbb
bound
inc
orb
stos
daa
ss
mov
dec
out
adc
mov
or
pop
sbb
je
cmp
cmp
clc
repnz
repnz
scas
fnsave
push
stos
jb
rcrl
mov
in
outsl
sbb
imul
sub
jg
or
mov
das
xchg
int3
jbe
mov
jbe
push
sub
jecxz
jle
mov
push
dec
xor
rorl
push
pusha
aaa
call
lods
xor
fdivrs
dec
jno
enter
xor
mov
dec
adc
mov
lock
lds
int
dec
lock
pop
lahf
mov
jmp
lahf
loope
jo
adc
sti
in
movsl
cld
cltd
popf
mov
xor
lea
pushf
cli
or
into
popf
and
sbb
out
cmp
lret
aam
cwtl
add
in
jae
enter
pop
aad
sarb
popf
xchg
sub
addr16
sub
inc
fwait
jb
cld
out
lcall
xchg
imul
push
scas
cmp
jp
adc
push
dec
inc
and
testb
ret
rolb
add
js
es
inc
and
dec
lcall
nop
popa
mov
roll
xchg
push
or
dec
arpl
bound
les
testb
cmpsl
mov
div
and
sub
cmc
mov
mov
and
sbb
adcb
pop
mov
push
mov
xchg
dec
lahf
cmp
cmc
sbb
adc
sbb
fs
jnp
aad
ficompl
mov
add
adc
jb
bnd
cltd
fcmovu
xor
pop
adc
rol
mov
xchg
fmuls
mov
xor
jae
pop
nop
daa
adc
mov
or
mov
bound
push
pop
hlt
int3
jge
out
int3
vpmaddwd
mov
test
out
es
lods
mov
das
repz
mov
mov
sbb
scas
add
stc
mov
mov
push
popa
inc
pop
and
es
sarb
inc
mov
sub
mov
in
stc
mov
rorl
add
repz
and
cmc
ljmp
adc
aam
pop
shl
adc
lock
loope
push
push
loop
adc
aas
pusha
lock
sahf
shll
inc
in
int
stc
jle
psllq
popl
cmpsb
add
dec
mov
jge
mov
and
xchg
pop
mov
inc
inc
push
sub
or
adc
scas
adc
hlt
xlat
push
jle
ss
mov
movsl
jge
mov
cmp
aaa
aam
mov
movsl
test
xchg
pop
inc
outsl
jl
and
jnp
lock
or
push
and
outsb
jns
hlt
inc
out
sub
add
adc
and
sbb
sub
ret
and
cmp
gs
push
test
jns
mov
cmp
add
mov
xor
cmpsl
sbb
jecxz
jg
cmp
ja
xchg
add
fwait
xchg
sub
add
mov
scas
outsl
insl
insb
popf
outsb
cltd
xchg
ds
call
fists
jns
mov
sub
fmulp
lret
dec
lahf
inc
out
cli
fsubl
xchg
popa
bound
mov
mov
jp
iret
ss
test
pop
sbb
mov
mov
fwait
loope
mov
xor
arpl
insb
dec
dec
es
dec
std
adc
pop
push
mov
cmp
loopnew
adc
shll
push
dec
mov
and
lret
pop
adc
inc
outsb
adc
testl
cmp
bound
in
stc
pop
xchg
sbb
enter
inc
mov
and
lahf
pop
scas
pusha
mov
setp
shlb
jnp
cld
lahf
push
jl
add
add
jno
mov
iret
std
dec
jp
inc
or
pop
push
jmp
cmp
outsb
mov
movb
jmp
pop
xor
jno
jbe
aas
pop
lods
cwtl
dec
jns
sub
lock
fiaddl
and
or
pop
xor
iret
push
lret
out
mov
cltd
cmpb
insb
xor
daa
iret
inc
in
jecxz
sbb
push
cmpsl
sub
mov
jns
lea
jmp
dec
cmp
add
jg
mov
push
pop
rol
rclb
sub
aad
cltd
xor
shll
scas
push
js
cmp
aas
fiaddl
inc
dec
jg
fisubrs
jle
xchg
add
push
dec
mov
pop
fldl
popa
sbb
dec
cmp
nop
cmp
jne
in
loop
pop
out
cmc
sbb
pushf
or
andnps
lret
cmp
push
mov
aaa
sub
inc
push
or
fisubrs
fidivl
xor
and
lods
jno
addr16
sbb
inc
outsb
or
push
dec
hlt
out
in
cmpb
aas
push
cwtl
dec
pop
aas
hlt
dec
sti
dec
outsb
sub
inc
clc
inc
push
inc
mov
in
cld
or
jle
add
mov
add
fs
fucom
cmp
or
or
sti
lds
mov
cmp
sti
inc
mov
iret
int3
loop
push
jge
push
arpl
fwait
dec
jecxz
iret
add
cmp
mov
shll
jns
or
dec
add
cld
dec
xor
stos
dec
pop
xchg
sti
test
lds
aad
subb
rcll
pop
jno
ficoml
mov
adc
stos
xor
pop
and
lea
lods
cmp
and
pop
add
cwtl
jno
add
cltd
nop
lea
pop
dec
int3
jp
call
pop
adc
nop
or
xchg
cwtl
movsb
jbe
jno
sti
lahf
sub
or
imulb
cli
inc
and
test
mov
jle
scas
xlat
in
pop
push
jmp
ret
rclb
js
pushf
dec
pop
mov
lods
ret
fldt
pop
or
cld
fdiv
inc
mov
or
push
dec
push
pop
mov
ret
xor
lea
hlt
mov
out
in
and
stos
cmpsb
sbb
sub
push
aas
adc
icebp
lock
stos
sub
into
js
mov
sub
daa
mov
jbe
mov
xchg
xchg
sub
add
add
lods
addl
or
inc
fucomip
or
mov
enter
inc
fcoml
pop
test
dec
dec
int3
sti
and
push
or
push
sbb
xchg
out
push
aam
sbb
push
pavgw
iret
fsubr
jl
imul
fidivrl
lret
loope
int
lahf
mov
in
jo
pop
xor
leave
and
daa
out
mov
incl
lods
icebp
mov
sti
xchg
mov
aam
aas
or
in
outsb
lret
lret
and
push
daa
cmp
shrl
mov
mov
dec
mov
inc
les
or
push
dec
xchg
push
jo
pushf
jne
or
pushf
addb
test
bound
pusha
inc
mov
mov
mov
cmp
mov
xchg
xchg
dec
int
sahf
sub
and
imul
js
stos
ret
out
mov
fcompl
bound
dec
fisubrs
imul
leave
adc
sbb
push
cmc
push
test
jmp
cmp
mov
cmp
add
aaa
mov
jl
movsl
xlat
mov
mov
xlat
lods
scas
fldenv
xchg
fdivrl
test
mov
mov
repz
push
mov
and
inc
xlat
jno
add
test
xor
lahf
mov
mov
rcr
popl
or
lock
cmp
cmpsl
jge,pn
xchg
cli
bound
xchg
push
push
pusha
lret
sub
les
leave
pop
iret
out
jae
push
shrl
jno
pop
fsubp
call
dec
jnp
ss
push
adc
push
dec
push
and
mov
lret
mov
clc
aad
movsb
or
loope
push
add
sahf
push
int3
push
add
inc
arpl
mov
dec
or
popf
mov
cltd
pop
mov
fisubs
getsec
test
ret
push
ljmp
int3
roll
pop
sbb
pop
rorb
repz
lds
jg
sub
mov
clts
push
cli
sysenter
xchg
lret
sbb
jmp
inc
xchg
lea
sahf
sub
aam
pusha
int3
jo
pop
and
nop
in
cmp
xor
jmp
jb
fadds
ret
std
inc
sbb
pushf
xchg
sti
stc
mov
xlat
cmp
mov
jno
jno
and
js
fistpll
aas
fisubs
aam
adc
push
pop
int3
inc
pop
sahf
mov
imul
xchg
imul
sbb
iret
and
add
je
adc
ret
das
mov
mov
jns
cs
lock
sub
cmc
xchg
divb
push
cmp
cmpsb
xchg
dec
in
jne
fwait
call
inc
xchg
test
or
je
imulb
idivb
sti
subps
gs
faddp
add
leave
rcrb
insl
mov
add
xchg
adc
pop
mov
mov
mov
cmp
fcmovu
out
dec
sbb
pop
cs
sti
js
cmc
aaa
pushf
jb
adc
and
decb
popa
rcrl
dec
stos
add
icebp
inc
outsl
xchg
mov
icebp
daa
mov
cmp
in
xchg
inc
sbb
cmp
fstps
sbb
pusha
push
pushf
and
outsl
push
pop
cmpb
adc
dec
jl
mov
mov
add
in
loop
pop
lock
push
in
xor
arpl
cmp
ret
dec
loope
mov
fisubrs
or
aad
jp
scas
mov
scas
push
popa
imul
jle
lods
mov
sub
mov
scas
fimuls
iret
push
loope
xor
adc
and
leave
dec
test
lret
cmpl
xchg
push
test
xor
cwtl
sub
fwait
xchg
adc
mov
sub
fwait
sti
mov
in
dec
hlt
shrl
dec
mov
or
mov
dec
dec
xchg
xchg
rcrb
fimull
pushf
mov
out
add
xor
xchg
aam
in
dec
cli
daa
cmpsl
out
outsl
mov
dec
mov
or
dec
sub
cwtl
push
std
popa
xchg
sub
js
push
enter
movsl
pop
repnz
lret
xchg
cmp
mov
xor
imul
gs
addb
mov
xor
mov
fldenv
push
shrd
sbb
ret
cmc
orb
test
fdivrs
jge
jo
mov
adc
insb
adc
ja
xor
jmp
jns
sbb
and
shlb
or
xchg
jge
aad
jle
xor
dec
lods
mov
pushf
cmp
sub
add
sub
push
inc
xchg
xchg
mov
test
mov
popw
sti
sarl
pop
scas
xchg
mov
adc
lcall
or
addl
cmp
leave
mov
shlb
sbb
sahf
add
mov
movsl
sub
or
adcb
dec
and
mov
insb
xchg
sbb
inc
jge
xlat
pop
stc
jmp
loope
insl
pop
add
inc
cmp
pop
xor
cli
movsb
pop
fs
loop
mov
ret
or
pop
js
stos
lds
push
cmpsl
test
sbb
push
repz
dec
jecxz
outsl
mov
psubsb
mov
lods
pop
aam
rcr
xor
mov
std
fstpt
fidivrl
lods
push
test
fwait
in
dec
fs
push
std
lods
xor
shll
inc
loope
iret
and
add
std
clc
call
in
test
movaps
roll
loop
sub
loope
pop
jnp
mov
push
adc
clc
bound
out
scas
orl
and
push
adc
pop
jb
stc
lods
xchg
and
fiaddl
adc
pop
repz
xor
fsubl
enter
fildl
movsb
hlt
inc
cltd
je
lcall
stos
lock
or
popa
cmp
int
fmulp
xchg
fwait
stos
lcall
cmp
pop
sbb
mov
lahf
cmp
out
loopne
or
jo
pop
notb
loope
jne
enter
sti
iret
pop
cmp
xchg
fsubrp
arpl
inc
shll
nop
call
pop
in
jae
inc
adc
xchg
sub
sbb
int3
mov
pop
lods
movups
pop
arpl
pop
jmp
dec
outsl
jle
dec
and
loopne
mov
or
mov
inc
mov
sub
xor
popf
fiadds
cmpsl
lock
mov
das
in
push
subb
loope
lods
cmpsl
sbb
cmc
xor
clc
cltd
push
push
shrl
popf
lcall
popa
xchg
jmp
call
adc
lods
xor
clc
push
ljmp
aaa
inc
xchg
outsb
mov
inc
mov
xor
in
xchg
inc
lahf
out
clc
lret
sub
cli
iret
xchg
xor
push
incb
lcall
stos
sbb
adc
jg
lds
aam
dec
test
push
fiaddl
xchg
cld
push
mov
fwait
inc
add
cmp
or
mov
sti
daa
xor
cmp
pop
sub
mov
pop
js
sbb
bound
test
jmp
loope
cmpsl
push
jns
mov
xor
orl
cmp
or
or
and
pop
push
push
insl
mov
test
gs
push
inc
bound
cwtl
insl
push
add
enter
leave
rcr
push
mov
and
cmp
gs
sarb
xchg
xchg
pop
das
mov
int3
aaa
pushf
leave
mov
enter
leave
pushf
pop
mov
clc
sbb
mov
xchg
dec
test
push
push
daa
add
pop
sbb
pop
subb
or
lea
gs
or
xor
clc
xchg
cli
and
bound
cmp
or
movsbl
push
and
rcll
bound
push
lret
out
or
std
xor
mov
jg
add
push
mov
mov
loopne
add
pop
mov
ja
jbe
push
in
lock
mov
xchg
adc
or
loope
jbe
add
into
imul
xlat
inc
pop
cltd
sub
sub
es
mov
cmpsl
mov
pop
fadds
jmp
push
movsb
mov
push
test
pushf
xchg
cmp
push
sub
cwtl
sarb
push
js
testb
mov
mov
cs
out
mov
lods
xchg
rcl
xchg
das
test
push
int
and
and
add
mov
lret
inc
ret
cld
xchg
je
mov
repz
scas
notb
aad
repz
clc
mov
fimuls
mov
js
fdivl
or
push
or
in
cmp
push
fcom
jbe
xor
cmp
mul
aas
hlt
fs
and
jmp
imul
inc
or
sbb
or
cmc
xchg
dec
cmp
push
fucomip
lea
push
mov
sub
add
adc
or
mov
mov
jg
fmull
and
sbb
sbb
daa
xchg
movsb
sbb
push
shr
mov
jge
cmpsb
or
pop
rcrb
cmpsl
push
cmp
pusha
aad
inc
lahf
and
jecxz
mov
mov
xchg
das
mov
das
or
mov
rcll
cmp
dec
mov
fistpll
in
inc
cmpsb
and
add
test
push
adcb
test
mov
shrb
cmpsl
jge
add
test
out
rcrl
stc
outsb
out
data16
mov
pop
loop
clc
daa
int
lds
adc
pop
mov
cmpsb
cmp
lods
popf
mov
das
and
mov
fisubs
inc
mov
push
into
inc
or
ljmp
pop
into
out
dec
add
jno
cmp
pop
push
lcall
mov
mov
addb
insb
inc
jo
sbb
pop
xchg
push
lea
scas
pop
dec
lds
imul
pop
lahf
lcall
mov
xchg
and
rcrb
scas
das
inc
mov
lcall
mov
pushf
aad
hlt
add
rorl
pop
cltd
lea
adc
push
mov
repz
mov
xchg
cmp
push
arpl
cmpsb
pop
lret
cs
outsl
add
sbb
sub
cmp
sbb
mov
inc
push
test
inc
inc
adc
dec
cmpsb
jo
adc
lret
pop
add
out
out
out
and
fisubl
xor
jo
mov
xor
mov
filds
add
sti
mov
aam
stos
cmpsb
sub
fisubs
cmp
cmpsl
sub
sbb
out
sub
lret
repz
outsl
push
jg
negb
or
sbb
iret
adc
xchg
aas
jecxz
sahf
repz
xchg
jg
fcomps
fwait
pop
in
xchg
pop
dec
adc
js
leave
xchg
xchg
ds
imul
stos
xchg
jecxz
pop
mov
rcl
or
int
fmul
and
push
adc
dec
push
adc
lods
lcall
mov
aam
cmpl
lret
cwtl
xchg
sbb
in
cmp
cmp
idiv
scas
popf
dec
pop
fmul
test
pop
mov
jnp
mov
xchg
cmp
jmp
mov
mov
pop
xor
popa
dec
cld
dec
ja
mov
jne
xchg
add
push
pop
pop
xchg
sub
cmpsl
mov
and
sar
aaa
es
cmp
call
fisttpl
lcall
cwtl
push
push
lcall
aad
sbb
icebp
mov
cmc
jno
imul
cmpb
pop
leave
out
mov
xlat
mov
and
sub
lds
jl
adc
bound
ljmp
jbe
mov
push
cld
in
add
nop
pop
jmp
sub
cmp
jb
sar
fucomi
jp
iret
in
pop
aam
mov
arpl
fnstenv
xchg
push
rcl
dec
mov
lea
or
inc
mov
and
in
cmpsl
mov
dec
xchg
mov
mov
mov
enter
shrb
stc
icebp
bound
arpl
int3
xor
cld
pop
push
xchg
rcrb
sbb
mov
xor
xor
lds
sub
xor
cmp
sbb
cmpb
imul
dec
pop
adc
insb
dec
xchg
popa
add
xor
lret
xor
scas
inc
push
fs
dec
das
into
test
jmp
ja
cmp
pop
roll
mov
xchg
xor
outsb
mov
test
pop
stc
pop
pop
scas
lods
or
mov
cli
pop
in
lock
add
cmp
fdivrs
mov
outsb
pop
xor
adc
fucompp
dec
out
fnsave
sbb
cli
sarl
rclb
push
aam
movsb
pushf
pop
fimuls
inc
lret
xor
mov
loop
and
cmp
insb
xchg
mov
lcall
xor
inc
negl
push
push
sarl
pop
mov
scas
mov
lock
push
test
mov
jle
mov
lahf
jmp
xchg
jnp
sbb
daa
xchg
cmp
loop
jle
aad
sbb
push
stc
jmp
stc
xchg
sub
mov
lea
aam
lods
jle
jb
arpl
pop
fs
lcall
jl
lret
or
xchg
mov
mov
push
xor
push
jg
lods
mov
mov
test
xchg
sbb
sbb
dec
dec
ss
negb
jbe
in
rolb
pop
and
popa
xchg
xchg
scas
sbb
inc
movsl
shll
je
lret
into
pusha
inc
push
jecxz
adc
jp
neg
mov
adc
ja
push
sub
push
mov
lcall
sub
push
inc
mov
adc
lret
lret
and
xchg
xchg
adc
cmp
jp
or
cmp
push
out
jge
je
mov
enter
mulb
jmp
and
pop
xor
mov
adc
mov
into
aam
fsts
lcall
loope
pop
test
or
rclb
div
sbb
add
int3
and
xor
jecxz
mov
cmc
enter
ljmp
aaa
xor
orl
incb
into
push
and
aaa
cltd
ret
push
addl
daa
mov
add
fimull
jecxz
stos
cmpl
jg
push
ja
repnz
dec
aam
push
sub
mov
ss
loopne
cli
mov
dec
push
mov
push
ds
dec
popf
push
pop
ror
mov
jg
lock
sbb
dec
push
popa
jl
pop
sbb
cmp
adc
cli
mov
or
mov
mov
aaa
ja
lcall
xchg
stc
cmpsb
rolb
leave
enter
fisttps
inc
icebp
fmuls
imul
fstp
mov
testb
repz
cmp
cltd
or
in
xchg
cmpsb
adc
in
int3
xor
jle
fiaddl
mov
lods
or
outsb
into
movlps
or
mov
mov
push
in
mov
mov
addl
sahf
aad
xchg
and
dec
inc
cmp
les
sub
mov
xor
mulb
sub
xchg
pop
jmp
leave
mov
cs
scas
rolb
and
aad
pop
sbb
push
out
sbb
mov
inc
out
das
ds
in
push
jp
mov
xchg
lds
mov
pop
adc
mov
fdivl
xchg
push
xor
push
idivl
test
or
lret
popa
inc
fisttps
in
push
xchg
lret
mov
inc
add
movsl
add
xor
add
mov
and
aad
mov
dec
inc
pop
repnz
mov
mov
sub
mov
push
fdivrl
movl
or
jge
sub
add
xor
call
repnz
add
push
stos
lods
adc
pop
jne
movsl
xor
fwait
clc
cwtl
aaa
aas
mov
nop
and
mov
int3
lcall
mov
insl
cmc
roll
lret
mov
sub
inc
shll
cmp
fwait
or
sbbb
jae
sbb
je
arpl
and
addl
or
sub
mov
push
xor
xor
shrl
pop
out
in
mov
in
jne
cs
pop
int3
outsb
aam
outsb
jecxz
fmul
in
movsb
leave
mov
mov
and
out
fists
popf
inc
sbb
add
push
pop
movsb
xor
clc
mov
imul
or
sub
adc
jmp
in
push
jno
shll
mov
movsl
pop
rclb
jg
dec
cmpb
mov
test
add
xor
mov
xor
inc
cld
ror
in
xor
inc
rcr
icebp
ret
mov
ret
lock
or
roll
xchg
mov
xor
fstpl
and
je
cltd
movsb
shlb
push
and
decl
es
fprem
jne
fadd
sbb
stc
mov
popf
mov
xor
cmp
icebp
push
inc
dec
add
lret
mov
inc
xchg
xor
imul
loopne
pop
sbb
sbb
and
fisubl
popa
or
or
cli
hlt
mov
stos
push
int
in
insl
xor
inc
cs
xor
outsl
mov
add
test
movsl
inc
inc
xor
icebp
push
jno
movsl
or
adc
lret
jo
sbb
cwtl
ss
jno
xor
push
push
sti
push
movsb
dec
loope
pop
ret
shr
lock
mov
cltd
ja
xor
inc
leave
out
inc
test
loopne
adc
popa
mov
dec
pop
scas
iret
stc
push
jge
test
add
shll
bound
mov
jecxz
xor
and
pop
pop
push
xor
setp
xchg
pop
mov
xchg
inc
push
push
jbe
push
pop
inc
shll
mov
cmp
sbb
sub
pop
sbbb
stos
cld
or
lret
cmp
cmpb
stos
or
push
mov
and
push
cwtl
adc
mov
pop
cld
mov
xorb
int
cmp
jae
dec
mov
add
jnp
ret
jnp
and
and
jge
shlb
xorb
xchg
scas
int3
xor
sub
iret
mov
sarl
imulb
ss
pop
push
push
adc
stos
inc
stc
shll
pop
xchg
cltd
lret
movsb
jge
xchg
pop
sub
adcb
sub
gs
ljmp
sub
adc
mov
xor
jge
jl
pop
sub
xchg
xlat
ret
mov
xchg
inc
sbb
push
sbb
arpl
lods
mov
mov
push
mov
outsb
pop
jne
in
sub
lods
adc
push
lret
xor
mov
pop
dec
fstpl
sbb
xor
in
inc
push
xor
imul
sbb
inc
mov
sbb
sahf
cmpsb
sub
sub
xorl
nop
cmp
mov
adc
out
fcomps
out
pop
bound
ret
imul
notl
bound
sbb
sub
push
pop
cmc
and
sub
pop
in
and
clc
pop
and
push
add
fidivrl
int3
pushf
inc
out
or
cmp
frstor
dec
pop
icebp
inc
inc
pop
stc
jl
mov
adc
fsubl
jge
adc
out
ficoml
inc
iret
pop
push
cltd
fsubs
inc
push
lds
sbb
mov
aas
pop
fcmovnbe
inc
rol
inc
lret
pop
mov
shrl
test
xorb
mov
mov
lock
cld
adcl
jbe
movsl
and
cs
mov
mov
js
cld
ja
sbb
mov
or
xor
xor
jb
pop
and
dec
sub
adc
inc
movsl
out
push
xchg
mov
and
jl
in
sub
pop
cmp
gs
sahf
subb
cmpl
outsl
cli
bound
xchg
push
movsb
outsw
jne
in
in
pop
jle
mov
lea
jns
iret
mov
popa
pop
fisubl
pop
sbb
pop
movsb
cmp
inc
das
test
mov
dec
inc
pop
js
jne
push
fsub
cmp
stos
fcompl
cmc
scas
xchg
adc
or
xchg
jb
and
repz
inc
inc
mov
in
sub
fidivrs
shll
jmp
shll
xchg
mov
push
xchg
out
jbe
push
aad
loopne
sub
and
imul
pushf
push
adc
gs
arpl
xchg
mov
push
scas
xchg
inc
cmpsl
dec
rcll
mov
outsb
cwtl
test
pop
shlb
mov
bound
dec
cmp
enter
jb
and
hlt
cmp
cltd
jae
aas
dec
xchg
xor
pop
dec
sahf
mov
pop
lcall
jle
repz
loopne
ljmp
jl
lret
in
sub
call
xchg
cltd
out
out
shll
xchg
xchg
push
outsb
addr16
adc
stos
imulb
in
mov
push
repz
dec
cmp
dec
ret
bound
and
pop
dec
pop
sub
fisubrl
outsb
jae
inc
loope
shll
pop
or
sub
sarb
push
xor
lock
int
push
inc
repnz
cli
xor
imul
fs
adc
adc
popa
push
sub
mov
ljmp
outsb
mov
inc
inc
andb
fwait
and
mov
jns
push
push
add
sub
sahf
mov
xchg
or
mov
or
out
jo
icebp
icebp
jl
add
into
pushf
inc
stc
sub
das
sub
sub
leave
xor
mov
mov
js
mov
push
flds
xchg
mov
cmp
es
jle
inc
jnp
cmp
xchg
rorb
sarl
mov
jo
repz
ret
pop
outsl
in
jbe,pt
cmp
sbb
fs
enter
mov
cld
repnz
in
pop
or
sub
jne
cld
pop
cmp
orl
sti
add
xor
pusha
pop
jmp
stc
xor
push
scas
in
cmp
jmp
jbe
or
jp
cmp
add
fs
xor
pop
push
or
push
push
ret
in
lret
or
cmpsb
mov
lods
stc
xor
xor
cmpsl
adc
dec
sub
pushf
jp
push
add
adc
js
popa
adc
jns
in
mov
jg
add
or
shl
adc
fwait
scas
rcrl
mov
icebp
or
cmp
gs
inc
frstor
inc
sbbl
dec
or
push
add
and
sbb
mov
mov
xchg
jmp
in
xchg
sub
sub
inc
in
xor
cs
lret
cmpsb
outsb
jg
cmpsb
lods
push
push
add
mov
push
aaa
mov
jl
adc
xchg
xor
lcall
les
or
push
cmp
out
cmc
lahf
in
out
lds
shll
ret
mov
ret
in
dec
lods
test
mov
xor
mov
cmpsl
lock
inc
jb
fisttpl
popa
and
push
cmp
xor
movsb
mov
cwtl
mov
int3
xor
stc
loopne
sbb
cmp
bound
int3
xor
shlb
pop
fucomi
shrb
mov
pop
mov
and
xchg
imul
ret
xor
mov
inc
pop
shll
lcall
push
pusha
sbb
mov
adcb
shll
dec
xchg
dec
push
into
cltd
adc
push
mov
mov
jmp
pop
pop
pop
clc
arpl
cmp
aam
cltd
scas
sarl
lcall
pop
stos
out
jb
out
fisubl
daa
inc
cmp
push
and
mov
nop
int3
cmp
add
test
and
xchg
sbb
pop
rorl
call
hlt
leave
clc
sbb
dec
add
xor
sbb
adc
ja
loop
xlat
bnd
dec
ss
arpl
add
cmp
incl
addr16
shll
test
sahf
sti
pop
cmp
add
inc
popa
mov
jne
pop
aad
loop
mov
frstor
mov
cmp
insb
sub
cmpsl
scas
or
jno
or
sbb
mov
sub
pop
sub
cli
lahf
xchg
clc
cld
add
push
dec
mov
jmp
ret
mov
adc
mov
sysret
cwtl
sub
dec
mov
mov
and
dec
inc
fldl
mov
pop
imul
insl
bsr
lret
jl
loope
hlt
mov
enter
cmp
or
fisubl
xor
in
pop
sub
pop
inc
pop
sahf
xor
mov
icebp
xchg
cmp
insb
cmpsl
call
dec
cmpsb
and
scas
adc
clc
je
mov
cmp
imul
jns
sbb
stos
cmp
imul
xor
cld
ja
les
and
shll
aaa
test
shl
scas
test
stc
hlt
or
mov
mov
pop
jno
push
xor
mov
pop
ja
shll
xchg
mov
movsl
mov
sub
jecxz
adc
xchg
adc
push
jae
or
popf
inc
js
cmpsb
inc
push
mov
repz
jo
xor
and
and
pop
out
jecxz
pop
inc
jp
fisubrl
js
out
or
jl
fidivrs
jl
push
xchg
insl
xchg
mov
jle
lea
mov
xor
ja
popf
adc
fisubrs
jle
jb
and
in
cmpsl
and
push
sub
sar
addb
push
lods
mov
aaa
test
loope
push
xor
mov
mov
pop
test
sub
loop
pop
jns
mov
roll
pop
jae
insw
je
jo
mov
aaa
add
ja
sbb
loopne
pop
inc
mov
aas
imul
ret
push
aad
popa
xchg
dec
dec
xor
xorl
jne
add
sbb
xor
xchg
rcll
pop
pop
out
test
dec
cmpsb
int3
xchg
pop
and
push
fsts
push
xor
lcall
ret
xchg
xor
imul
pop
dec
jmp
mov
jp
movsl
pop
hlt
fs
jg
lods
int3
sti
cmpsb
ss
lock
sub
jge
pop
in
notb
xchg
ljmp
loop
or
and
ds
push
popa
sub
fld
xlat
sub
cmpsb
int3
lods
outsl
cmp
cmp
sbb
outsb
cmp
pop
js
inc
cmp
sub
adc
popl
inc
mov
lods
mov
lcall
enter
sub
loope
and
jae
jnp
scas
lea
xchg
inc
and
jnp
jne
push
lret
fsubl
or
rorb
cmp
mov
jle
pushw
push
and
ror
jo
aam
sub
cmpps
pop
js
push
cs
adc
xor
cmpsb
cwtl
lret
xor
dec
inc
jbe
bnd
in
cmp
jp
pop
xchg
ja
cs
stos
pop
das
mov
enter
arpl
and
xchg
out
fistps
int3
jl
jns
pop
push
jbe
neg
repnz
jnp,pt
outsb
js
dec
xor
and
push
mov
stos
xchg
sbb
sbb
pop
test
xorb
xor
xlat
and
idiv
pop
negb
lds
int3
jno
jnp
jae
ja
push
loope
shlb
mov
leave
lods
and
cmp
push
int
cmp
insl
daa
cwtl
int3
add
insl
xor
scas
pop
lret
int
movsl
nop
loopne
cmpsb
stc
inc
cmp
mov
jl
outsb
imul
mov
test
cwtl
int3
loop
mov
mov
cltd
repz
orb
scas
mov
push
push
sbb
cwtl
sub
mov
stc
push
sahf
sub
or
adc
pop
rcrl
popa
jns
lahf
push
push
outsl
in
xchg
and
dec
mov
loopne
loope
ja
pop
lret
pusha
xor
dec
and
insl
sbb
cmpsb
and
push
shll
mov
fldcw
mov
ficomps
pop
fstpl
mov
fldt
and
fs
add
mov
or
jecxz
inc
lds
jle
adc
int3
mov
ljmp
mov
dec
test
mov
test
aas
mov
outsb
pop
fsubl
xchg
mov
dec
stc
aad
addr16
pop
inc
fdivrs
repnz
popa
push
addl
lret
mov
dec
dec
pop
mov
add
cmp
sub
sbb
pop
in
or
and
into
jae
push
dec
lock
pop
cs
sub
dec
mov
clc
xor
in
jo
cmc
movsb
cld
add
mov
pop
test
cwtl
jle
mov
pop
ja
sub
adc
push
xchg
push
stos
leave
or
mov
adcl
dec
fildll
jno
lret
fs
adc
into
adc
adc
repnz
pop
out
lcall
pop
pop
add
sub
adc
rolb
pop
cli
imulb
jge
std
fwait
sti
pop
test
jo
xchg
mov
sub
add
push
cli
fnstcw
fs
mov
fsubl
add
lahf
into
cmpl
call
rorb
mov
cmc
sbbl
imul
repz
cmp
ss
mov
cld
imul
outsl
adc
jae
mov
sub
or
cmpsl
sahf
in
rclb
mov
mov
adc
mov
cmpsb
mov
add
icebp
ja
adc
fists
in
lret
mov
lret
repnz
fldt
add
dec
mov
lods
out
popf
and
outsl
mov
imul
movsb
orb
mov
call
mov
movsb
repz
jns
or
push
arpl
pop
ss
movsl
cmpl
gs
mov
jae
inc
ja
inc
fmuls
mov
jnp
test
xchg
cli
or
and
addr16
jne
int3
adc
movsb
imull
xor
xchg
adc
jp
sbb
inc
faddl
lcall
int3
aad
pop
lahf
add
arpl
inc
mov
xchg
push
ds
leave
xlat
xor
and
jp
cmc
dec
in
loop
mov
fnstenv
jecxz
je
pop
dec
pop
sbb
push
mov
sub
mov
add
enter
rol
repz
and
mov
jo
xor
addl
pop
mov
cmp
push
out
nop
and
ss
rorl
add
xchg
arpl
jp
movsl
addl
push
aam
xchg
cmp
pop
ljmp
mull
imul
divb
mov
movsl
js
jno
fdivl
push
xchg
pop
aaa
or
and
pop
imulb
mov
pop
and
cmp
ljmp
and
lds
int
std
aaa
jb
xor
fwait
test
movsb
mov
or
shlb
inc
stos
scas
jle
ss
adc
je
xchg
test
loop
fidivrl
test
pop
loope
dec
jecxz
lcall
jbe
mov
dec
and
xor
pusha
cmp
outsb
fisubrs
hlt
or
mov
jecxz
addr16
add
pop
sbb
addl
ja
add
adc
mov
push
sub
add
in
sbb
fwait
inc
xchg
xchg
in
cmpsb
scas
dec
jo,pn
fs
js
mov
mov
out
push
lcall
daa
pop
inc
dec
mov
lahf
pop
inc
cmpb
lahf
xchg
subb
sub
or
cmp
mov
cltd
fs
arpl
lcall
test
fisubs
repz
jle
loop
xor
test
out
xor
sbb
dec
sbb
subb
add
push
movsb
sub
and
xchg
aaa
stos
mov
sbb
in
lds
loope
jo
pop
or
mov
lahf
ljmp
and
rclb
adc
cmp
inc
icebp
rcrl
inc
cmp
sub
fdivr
dec
test
inc
xor
test
int3
daa
jle
mov
js
fimull
and
xor
inc
dec
adc
fstps
lret
mov
lock
daa
enter
out
or
cld
cmc
mov
in
jmp
inc
push
lods
xor
shlb
ss
fwait
and
add
push
jb
hlt
aas
sahf
adc
push
mov
xchg
add
repnz
and
in
push
mov
cmc
adc
fnstenv
fwait
gs
movsl
ficomps
mov
mov
push
xchg
scas
scas
icebp
addr16
jo
in
sub
inc
cmp
mov
xor
pushf
fldenv
and
mov
fisttpll
mov
bound
sar
imul
je
jmp
push
aas
mov
mov
pop
repz
ficoml
sarb
jbe
jecxz
xchg
push
outsb
sbb
and
lahf
je
icebp
or
sub
xor
push
xor
xchg
inc
shrl
xchg
mov
test
roll
mov
ljmp
jle
fs
mov
sahf
adc
mov
sbb
pop
lgs
sarl
idivb
add
lret
add
int
jnp
testl
mov
push
ljmp
clc
inc
sbb
daa
cltd
fldcw
lods
notb
bound
int3
xlat
das
shr
jne
aam
sub
push
jp
stos
sub
xor
shl
fdivr
cmpsb
sbb
lret
or
and
jae
lahf
pushf
xchg
jmp
mov
cmp
lods
rol
and
xor
adc
fimull
in
addl
mov
cmpsb
movsb
dec
cs
std
sub
jg
mov
lods
push
lock
stc
mov
and
aad
psrad
es
scas
or
pop
sbb
test
dec
addl
rclb
mov
fidivrs
or
dec
push
inc
add
hlt
les
pop
test
repnz
jne
or
or
mov
inc
enter
data16
mov
mov
pop
mov
cmp
lods
add
inc
mov
dec
mov
mov
mov
jl
mov
adc
pop
out
push
and
scas
inc
xchg
dec
inc
pop
cmp
xor
adc
and
in
pop
xor
mov
xchg
mov
inc
aam
loop
mov
pmulhuw
xchg
adc
out
sub
adc
das
mov
imul
xchg
leave
popf
inc
lahf
insb
mov
xor
int
jnp
aam
loop
jp
xor
sbb
lea
sub
xchg
push
inc
xchg
push
iret
cmp
icebp
xlat
lock
pop
jl
xor
popf
sub
push
mov
xchg
sub
out
pop
stos
fwait
mov
ret
outsb
scas
lret
les
je
pop
dec
xchg
cmp
mov
pop
fnstcw
mov
nop
mov
mov
ljmp
rcll
cmpsl
or
pop
push
nop
shlb
mov
cli
ret
sub
inc
pusha
dec
jne
cltd
mov
scas
insl
scas
fwait
jl
flds
mov
pop
dec
pop
or
shll
push
out
jg
insb
xchg
rclb
repnz
xor
xchg
fs
mov
int3
clc
les
or
mov
aad
and
dec
sbb
dec
punpckhdq
lods
add
cmp
xchg
popf
cld
adc
aas
jp
add
in
mov
xchg
ret
mov
cmpsl
xlat
push
sbb
or
adc
sahf
subl
loop
mov
fmuls
in
dec
gs
push
mov
mov
leave
mov
out
faddp
mov
or
movb
xchg
dec
lret
fdivrs
adc
pop
pop
xchg
ss
lcallw
push
repnz
ljmp
push
mov
sbb
inc
lahf
xchg
xor
aas
setne
xor
and
shrl
sbb
sbb
and
stc
and
inc
xchg
lret
fs
loope
sbb
xchg
shll
and
mov
sbb
push
hlt
sbb
jno
movsl
in
fadds
stos
xor
sub
mov
stos
sub
movl
int
movb
pop
push
pop
mov
iret
and
jo
xor
add
push
ret
repz
xor
and
xor
test
mov
das
push
and
sahf
pushf
sub
scas
sbb
test
sbb
cld
daa
sub
push
xchg
stos
pushf
xlat
loopne
jg
out
dec
add
jne
test
mov
push
jmp
mov
shr
push
dec
leave
cmp
xor
stc
or
sbb
lods
pusha
outsb
fistpll
outsb
inc
or
test
rcrl
jno
or
adc
cmp
sbb
xlat
jl
aam
lea
jge
test
mov
xchg
add
fdivrs
hlt
cmpsl
pop
push
rep
into
jo
adc
xor
mov
jae
insb
cli
xor
repnz
das
jns
addr16
sti
ficompl
pop
dec
int
fs
or
push
push
lea
cmc
and
sub
vmptrld
subps
ret
jno
xor
cmp
mov
and
cwtl
xchg
pop
test
dec
mov
xor
sbb
test
xor
pop
fisubrl
repnz
ss
pop
push
outsb
jno
addl
scas
mov
shrl
add
cli
mov
in
sbb
fsubrl
mov
push
loop
xchg
and
xchg
mov
mov
int
pusha
cmp
push
lea
or
mov
in
in
cld
and
ljmp
push
insl
in
loopne
mov
movsl
mov
jne
inc
fwait
mov
scas
stos
jno
popa
data16
subl
push
mov
push
sahf
scas
adcb
adc
int
aaa
jecxz
insb
pop
mov
fdivl
repnz
lret
ret
add
mov
dec
cld
adc
pushf
divb
cmp
mov
dec
fsubrl
pop
jmp
add
pop
popa
xchg
pop
mov
sub
mov
pop
sbb
call
adc
cmp
mov
mov
cmpsb
popa
sti
sbb
hlt
pop
push
jb
inc
test
sub
out
pop
addr16
mov
sar
into
aas
pop
jmp
add
fimuls
add
push
pop
xchg
test
test
popa
call
push
and
cmp
jo
sub
and
xor
testb
scas
xor
xchg
lds
adc
dec
jbe
icebp
jae
popf
xchg
xlat
imul
cmpsl
xlat
adc
sbbl
xor
ljmp
lret
out
jnp
int
dec
cmp
xor
into
push
bound
mov
leave
add
sub
lcall
ret
mov
cmpsl
gs
fwait
and
shl
in
inc
sbb
pop
push
clc
sbb
jbe
mov
sbb
das
test
push
movsl
aaa
outsb
inc
or
cmc
aaa
cli
or
in
inc
outsb
ss
test
xor
xor
mov
adc
sti
flds
or
xchg
ja
xchg
push
jnp
scas
sub
sub
mov
sarl
mov
fnstenv
xor
subb
enter
hlt
adc
sarb
in
inc
and
nop
dec
jbe
out
sub
xchg
cli
fidivl
sub
in
pop
jo
lods
sub
hlt
dec
cmc
divb
sub
js
imul
and
lcall
push
jl
iret
int3
repnz
pop
pop
add
out
xchg
js
dec
das
jp
sahf
xchg
xchg
mov
mov
jne
push
xchg
jns
xchg
mov
aam
push
lds
pusha
lds
and
hlt
or
add
mov
lds
pop
xor
mov
ds
mov
inc
fsubr
sbb
mov
jle
xchg
lahf
add
ror
lock
dec
repz
mov
not
pushf
insb
stos
add
xor
mov
mov
lcall
sarl
mov
adc
jbe
ret
xlat
mov
aaa
mov
mov
adc
inc
in
mulb
xlat
stc
dec
movsb
outsl
mov
lock
mull
pop
insl
sarl
add
js
dec
mov
ficomps
fstpt
insl
xchg
dec
sbb
test
cwtl
lret
jnp
sub
push
lods
lds
add
clc
mov
push
popa
sub
mov
stos
imul
stc
xchg
test
lea
dec
ficoms
in
push
xchg
xlat
dec
adc
insl
push
lock
test
add
lods
div
cld
and
push
sbb
xchg
pushf
fcomi
fmul
sarl
sub
push
clc
xor
xor
pushf
cmpsl
repz
pop
and
cmp
mov
fld
cmp
sbb
ret
scas
sbb
popf
and
push
popa
inc
lea
sub
les
nop
push
popl
loop
ja
out
jb
aad
lock
sub
imul
and
mov
pop
hlt
sbb
loope
push
loope
or
scas
loope
js
xchg
cmc
mov
nop
lock
sahf
cltd
and
mov
push
xor
testl
inc
xlat
jp
addb
push
xor
jnp
cmpsb
aad
stc
js
mov
lods
in
fbld
fsts
cmp
aas
xor
add
sti
xor
test
cmp
sub
pusha
fnstcw
rcr
push
cwtl
cld
pop
dec
in
sbb
mov
test
repz
add
mov
sbb
mov
mov
jbe
sbb
out
jmp
ficoms
sub
loopne
test
fldenv
loope
push
add
cmpsb
outsl
cld
xor
hlt
rclb
cld
ss
and
pop
xchg
mov
and
xor
dec
in
fwait
dec
pop
jne
xor
jecxz
mov
cmp
call
aaa
sbbl
dec
sbb
adc
mov
push
lret
sti
rorl
mov
jl
jge
loope
dec
xchg
pop
and
xchg
pop
add
mov
lds
mov
mov
pop
sub
faddp
nop
js
or
rcll
or
push
fs
mov
and
pop
mov
addr16
rorl
push
and
imul
hlt
inc
nop
inc
push
ret
ja
jge
movsl
add
out
fisubrs
lods
and
and
frstpm(287
loope
lods
mov
xor
sbb
lcall
movsb
pop
movsl
inc
scas
repz
inc
rcr
inc
inc
push
sbb
cmpsl
push
add
lret
sub
scas
xorl
rsqrtps
xchg
inc
mov
cli
sbb
sbbl
pop
pop
iret
addl
mov
in
addr16
loopne
adc
cld
ret
into
inc
push
cmpsb
adc
nop
in
sub
xor
cmc
push
mov
lret
mov
push
fistpl
mov
dec
mov
pop
repz
cli
mov
outsb
in
pop
pop
lds
rcr
add
sarl
pushf
sbb
rclb
or
out
mov
push
dec
in
insb
cmc
fsubl
sar
and
fs
sbb
adc
addr16
and
or
or
jg
in
clc
out
ja
loopne
je
inc
mov
arpl
sbb
jb
jl
cs
leave
lds
mov
imulb
sub
out
ss
nop
xchg
inc
inc
xchg
in
pushf
inc
xchg
push
pop
or
mov
cs
mov
fsubs
ret
cli
sbb
pop
loope
fstps
dec
nop
in
mov
lea
jge
lods
aad
pop
add
fwait
sbb
popa
mov
dec
insl
test
popl
xchg
mov
lcall
and
in
xchg
jg
inc
cmpsb
enter
jmp
pop
daa
sbb
sbb
popf
in
jmp
jne
jne
jp
push
pop
mov
insb
mov
imul
repnz
fsts
inc
iret
loop
ret
sbb
sub
jp
inc
cmp
mov
push
jbe
not
xor
loop
mov
xchg
test
loope
or
es
lcall
add
sti
lcall
pop
mov
std
pop
push
xchg
pop
adc
cmc
push
dec
xor
jb
lret
pusha
xor
sub
inc
pop
mov
xor
loop
pop
add
pop
lea
mov
and
lahf
mov
lcall
subl
xor
jno
mov
inc
sub
decb
pop
jmp
mov
mov
stos
stos
sub
xchg
dec
jg
lret
inc
sub
rolb
push
dec
sbb
dec
xor
inc
aas
pop
mov
pop
loope
or
imul
sub
jl
lock
je
push
jge,pn
lahf
test
mov
adc
loop
pop
pop
pop
lea
push
outsb
jns
lret
icebp
imul
push
push
mov
xchg
iret
imul
test
das
sbb
rcl
mov
repnz
lahf
dec
cld
lahf
xor
insl
push
or
popa
or
jb
push
pop
dec
jge
xlat
mov
xor
jns
sarl
mov
push
add
sarb
sarb
adc
dec
mov
gs
and
fldl
loop
std
pushf
es
mov
jbe
clc
xchg
push
shrl
leave
xor
loope
cmp
nop
mov
sub
in
mov
outsb
ljmp
and
cli
sbb
mov
outsl
fiaddl
pop
fimuls
mov
aaa
loopne
push
add
jle
mov
lahf
mov
cmc
outsl
nop
dec
inc
mov
xchg
sub
mov
sti
jo
jo
ss
hlt
adc
or
jbe
and
stos
push
dec
xor
xlat
subl
das
pop
gs
hlt
test
leave
clc
icebp
test
lcall
je
insb
sbb
xchg
lahf
shll
lods
popa
mov
lahf
cwtl
fs
or
jp
or
inc
jmp
cmp
mov
shll
cmc
sub
popf
imul
push
cltd
jge
mov
and
fistl
pop
pop
sbb
test
mov
cmpsl
loopne
aaa
ss
adc
cmc
xchg
ret
sets
les
mov
add
out
xor
inc
add
mov
add
xchg
movsl
ss
xor
jg
pushl
das
push
cmp
bound
stos
stos
call
xor
push
dec
fwait
out
pop
dec
mov
mov
loope
and
cmp
into
sarl
sbb
xor
xchg
jge
jno
daa
aaa
sbb
mov
jl
push
stos
loopne
iret
cmp
xchg
cmp
arpl
movsl
mov
inc
cmp
mov
mov
rclb
cld
mov
cmc
fnstenv
test
std
das
mov
add
sbb
mov
lds
out
imulw
stos
pop
aam
dec
mov
pop
add
dec
cmc
or
es
scas
ret
iret
adc
stc
jne
sarl
xor
rcrb
xor
loope
xor
xlat
out
mov
lcall
fisubs
movsb
adc
pop
stos
mov
cmc
mov
addr16
ss
das
inc
xor
daa
arpl
sbb
jb
cmp
xor
or
sbb
jg
lret
in
fistps
jb
push
pop
jb
lea
cmpsl
mov
jnp
mov
adc
cmp
js
adc
or
adc
mov
test
es
inc
cmp
and
pop
dec
pop
push
sbb
fwait
mov
push
xor
lcall
aad
test
jecxz
fldt
mov
les
std
and
sub
aaa
xor
push
xchg
cmp
mov
inc
leave
nop
aas
cmp
icebp
cmpsl
dec
push
test
adc
add
sahf
sub
sbb
fsubrl
mov
cltd
push
xchg
jbe
sbb
int3
lds
aam
idivb
andb
testb
pop
repnz
ljmp
lods
push
in
ss
fsubrs
inc
loope
push
negl
mov
out
icebp
mov
adc
push
or
cli
inc
sarb
add
dec
cmp
loope
jl
dec
mov
out
test
rclb
lcall
ljmp
scas
jb
lea
fwait
pop
fimull
inc
xchg
mov
and
cld
insb
lock
fimuls
dec
cli
xchg
les
inc
or
sti
mov
cwtl
aad
aam
scas
pushf
jo
mov
addr16
incb
nop
xchg
insl
jnp
jo
loope
ljmp
lock
inc
inc
mov
fs
xorl
arpl
ficompl
stos
push
test
lcall
adc
cli
inc
imul
daa
je
dec
cli
out
bound
loopne
mov
sbb
in
mov
fimull
arpl
in
dec
dec
rorl
cmp
jg
mov
push
rclb
adc
jmp
xor
fists
add
dec
sarb
popf
fldt
loop
jnp
fsubrs
jns
ss
in
rclb
add
xlat
xlat
or
jp
outsb
fidivs
fs
hlt
fstl
pop
cmc
andb
test
mov
inc
or
loopne
lock
cwtl
inc
rorl
addr16
dec
push
sbb
pop
cmp
aaa
or
fmull
dec
and
adc
push
into
xchg
daa
sub
fiaddl
int
add
or
cltd
dec
mov
cmp
rcrb
cmp
stos
and
mov
pusha
jno
jnp
push
in
push
push
dec
test
mov
push
xchg
in
sahf
dec
mov
jbe
fildll
or
popf
push
stc
or
sbb
adc
test
loope
shlb
or
xlat
lock
pop
pop
lock
inc
sbb
aaa
sarb
adc
insb
mov
cltd
add
jns
xchg
mov
test
cwtl
icebp
sbb
scas
mov
shrb
out
daa
stc
add
mov
or
jne
adc
mov
andl
gs
pop
ljmp
or
out
adc
outsl
stos
loop
lret
notb
stos
jp
in
inc
xchg
call
stos
lea
in
pushf
popa
or
test
popa
mov
lock
push
shrd
push
arpl
ret
std
cwtl
push
fistpl
cmp
popa
mov
xlat
repz
bound
and
sub
je
pushf
push
push
rclb
stos
mov
lea
stos
outsl
jns
imul
xor
sub
in
in
int3
sub
aad
and
out
push
sbb
fldt
add
in
mov
xlat
mov
lods
loope
pop
rorb
pushf
paddsw
ljmp
mov
xchg
sub
je
fwait
shlb
cmp
lahf
push
jmp
pop
repnz
dec
dec
icebp
push
xor
cmp
rorb
mov
mov
and
rcll
mov
add
in
inc
andb
push
jp
xor
push
jne
lahf
jno
fs
inc
xor
mov
adc
xchg
psubb
mov
push
xor
in
push
pop
call
stc
push
and
mov
push
pop
clc
inc
jno
mov
push
in
adc
pop
mov
bound
adc
sub
fwait
add
push
jmp
mov
das
shlb
ds
sti
movsb
das
xchg
pop
mov
and
cltd
fcoml
mov
dec
fidivl
out
jmp
mov
jecxz
push
icebp
mov
xor
fstl
cmp
add
dec
push
lahf
add
cmp
fdivs
lods
jo
bound
in
and
jge
mov
dec
lret
sub
push
mov
cltd
faddl
mov
mov
pop
scas
and
sbb
arpl
jmp
push
stc
in
pop
lock
dec
xor
mov
xor
sub
int3
mov
mov
lret
xor
jge
inc
pop
mov
xchg
cmp
test
leave
sub
xchg
fwait
sbbb
pop
rolb
mov
sub
jmp
ret
hlt
fisttps
ss
stos
loope
cli
jnp
insl
js
lods
jne
or
out
iret
cmp
ja
mov
sub
insb
aaa
outsl
ja
imul
stos
aas
xchg
cmp
out
pop
cmpsb
fdivrs
mov
mov
out
mov
mov
sbb
rcl
daa
insl
or
sbb
mov
cmp
std
mov
stos
cmp
cmp
inc
mov
movb
and
pop
je
incb
cmp
adc
out
test
adc
jbe
cli
xchg
sub
cltd
mov
aaa
lods
nop
mov
mov
sub
mul
shrb
mov
jno
jmp
xor
push
mov
and
push
xorb
mov
fucomp
test
xor
pop
test
dec
mov
daa
insb
sub
inc
mov
imul
jmp
cli
adc
shl
sbb
fsubp
add
test
loope
dec
jb
aam
add
jb
imul
pusha
sub
or
rolb
sub
xor
jns
dec
adc
inc
sti
outsb
arpl
push
sub
leave
test
stos
push
popa
jns
cld
pop
aad
movb
insb
mov
pop
mov
mov
sub
outsl
xor
lret
cmpsb
inc
or
or
stos
mov
roll
push
push
sub
je
xlat
gs
pushf
sub
mov
addl
inc
movsb
sub
xchg
scas
rcrl
push
ror
lret
cmpsb
sub
push
stc
dec
jmp
pop
inc
mov
int3
cwtl
cmp
cld
sbb
leave
fdivs
movsb
imul
popf
fs
cmp
fwait
xor
loope
mov
iret
fisttpll
fidivrl
xor
push
add
sarb
js
adc
cmp
xor
in
mov
loop
rorl
leave
jne
push
test
jge
jge
ja
xchg
imul
and
mov
inc
sbb
jbe
sti
or
pop
push
aas
rcll
les
mov
pop
sbb
sbb
pusha
push
rorl
adc
jle
mov
add
pop
imul
ds
add
fsubrl
jecxz
mov
bound
out
pop
jno
lods
pop
mov
aaa
test
pop
mov
fcomps
imul
out
loopne
xor
jp
test
decb
fwait
ljmp
jnp
xlat
fsubs
mov
fs
enter
sub
pop
out
xchg
ret
cmpsl
push
dec
insl
mov
jo
sub
push
mov
mov
andb
pop
sarb
outsl
or
jnp
mov
sbb
inc
push
das
lret
inc
dec
ljmp
xchg
adc
icebp
insl
push
movsl
and
push
adc
idivl
out
sahf
aam
jae
push
lock
push
mov
cs
fimull
mov
xchg
add
imul
loop
push
sar
lock
cmp
mov
loop
add
fmull
orl
outsb
pop
sub
cmp
cmpsl
push
fsubr
mov
and
cs
cmpsb
pop
imul
xor
stos
repz
aam
or
push
sbb
aam
or
inc
das
and
call
cmp
imul
lahf
push
sub
icebp
xor
adc
inc
leave
imul
repz
and
xchg
xchg
xchg
sub
loope
or
les
xor
insl
pop
xchg
xor
mov
fs
xchg
aaa
xorl
push
movsb
xor
inc
jb
imul
mov
mov
clc
sub
mov
push
mov
mov
pop
xor
test
inc
or
push
xchg
mov
push
test
sar
rcrl
mov
enter
or
inc
mov
les
and
in
mov
leave
add
imul
xchg
cmp
adc
add
fcompl
xlat
add
mov
into
lock
xchg
sub
cs
dec
cmp
sub
or
jbe
out
jecxz
rol
fcomps
push
inc
and
int
dec
lds
jo
test
dec
scas
mov
adc
cmp
es
mov
push
and
cmp
lahf
and
cmc
int
push
fs
jno
mov
repnz
hlt
lcall
mov
push
lea
fxch
js
cmp
cmp
cmc
or
incl
mov
jo
push
ljmp
sti
and
sbb
xor
push
in
fnsave
popf
gs
call
lret
add
imul
daa
and
xchg
adc
inc
adc
jg
cmp
xor
mov
pop
push
cmc
pop
or
xchg
lret
shll
xchg
xchg
lds
gs
mov
rol
mov
in
lock
cmp
pushf
lahf
cli
or
lock
imul
xor
lretw
push
popw
push
dec
push
pop
add
repnz
jge
dec
add
inc
lock
pop
jp
ljmp
and
jbe
es
jge
mov
sub
jl
pushf
ret
push
xchg
mov
arpl
xchg
adc
lds
mov
sbb
bound
sbb
ficomps
xor
and
out
ret
lods
mov
xchg
jmp
das
aaa
leave
rcll
add
mov
push
icebp
jo
xchg
popa
adc
push
popa
test
xor
adc
popf
sbb
out
jnp
enter
inc
xlat
cmp
loopne
inc
push
scas
into
pop
cmp
xor
push
ret
push
jp
jmp
jae
mov
shll
jle
std
icebp
mov
out
jp
mov
pop
pop
orb
and
pusha
pop
aas
sub
out
int
xchg
outsb
pop
test
jns
push
or
lcall
mov
insl
inc
fsubl
push
jle
movsb
addb
xchg
jno
les
roll
xchg
dec
pushl
repnz
lret
push
jnp
and
jb
push
cli
lret
iret
adc
out
push
ja
sbb
sub
lahf
sbb
mov
jge
xchg
mov
or
adc
xlat
adc
call
jp
leave
add
xchg
ljmp
sbb
dec
add
ret
loope
dec
arpl
fldenv
jbe
cvtpi2ps
xchg
mov
jl
aad
test
xlat
mov
adc
xchg
lea
push
cli
sub
repz
leave
insb
xchg
mov
ret
sub
add
fmuls
cmp
push
mov
js
cli
mov
pusha
xchg
jb
and
xchg
dec
clc
in
jo
sbb
fstpt
add
cmp
pop
sub
mov
dec
add
jne
stos
addr16
jg
outsl
xchg
mov
push
daa
xor
xchg
jae
mov
push
hlt
les
shr
push
sub
out
inc
pushf
sti
push
or
and
jnp
lcall
cmpsl
in
sbb
cmp
mull
dec
jp
pop
in
cltd
pop
mov
mov
add
sahf
out
je
push
mov
xchg
dec
call
and
adc
adc
gs
jl
movsl
cltd
test
sahf
dec
cmp
into
and
xchg
push
mov
xchg
xor
repnz
iret
xchg
mov
or
je
and
xor
roll
rol
push
push
ljmp
push
xchg
lret
pop
sbb
push
popf
out
stc
pushf
fwait
mov
outsb
jne
fstpl
mov
sarl
cmpsl
inc
popf
loope
or
pop
cmc
xor
jg
fabs
xchg
sub
rcrb
je
dec
fiaddl
mov
adc
xchg
add
lods
movsl
aad
xor
in
mov
enter
pop
clc
jmp
inc
stos
push
es
xchg
adc
or
mov
push
ds
sbb
inc
mov
mov
xor
xrelease
sahf
fdivrs
mov
add
xor
and
cltd
dec
clc
xor
inc
mov
cmpsl
dec
xchg
aad
aas
cs
cmp
loop
daa
or
inc
xor
das
xor
mov
cmp
cmc
sbb
repnz
adcl
jg
cltd
and
daa
scas
jp
mov
cli
lock
mov
fdivs
add
xchg
mov
xor
lret
js
pop
fisttpl
jg
adc
stc
lcall
scas
add
rol
lcall
lret
jo
jp
jle
xor
in
or
cwtl
jno
xor
push
mov
inc
mov
outsb
stos
mov
lea
adc
ss
mov
popf
or
jnp
outsb
stos
ja
xchg
mov
shll
nop
push
les
sbb
in
das
mov
loop
mov
stos
mov
sahf
push
lock
mov
sub
js
scas
sbb
adc
inc
aam
loop
das
xlat
les
data16
mov
ss
mov
or
dec
inc
jns
add
or
lret
adc
adc
xchg
out
mov
add
jb
rcrb
mov
xorl
nop
xchg
xchg
daa
mov
mov
shrb
subl
and
cli
mov
add
out
data16
sbbl
int
push
int
call
mov
ja
mov
add
arpl
and
aas
mov
lret
xor
mov
loope
adc
arpl
loopne
adcl
xor
and
fstpt
arpl
mov
leave
pop
popa
test
es
lock
add
cmpsl
sbb
notb
dec
out
enter
loopne
into
mov
ret
inc
and
cmpsb
mov
xor
mov
xchg
sub
mov
xor
call
out
out
xchg
in
stos
push
clc
pop
sbbl
out
lock
insb
mov
lods
or
cli
add
aas
sub
dec
les
clc
pinsrw
xor
lret
mov
aaa
pop
pop
lret
fisubrs
dec
int
add
and
stos
mov
and
sti
mov
out
mov
adc
push
nop
aas
adc
popf
push
aas
arpl
push
ds
cld
mov
add
adc
or
ja
xor
jecxz
fsubrp
or
pop
mov
andl
and
out
push
xor
jge
loop
pusha
or
xchg
pop
mov
lods
ficoml
cwtl
dec
mov
scas
adc
mov
xchg
sbb
inc
jmp
jmp
or
xchg
in
andb
out
loop
setle
mov
icebp
mov
leave
lock
mov
adc
negl
sahf
jmp
adcb
enter
out
inc
in
xor
es
or
or
mov
jecxz
cmp
repz
test
pop
sahf
dec
fdiv
incl
int
ret
int3
and
std
in
adc
mov
subb
sti
lret
into
or
loopne
ds
in
push
loopne
std
jmp
arpl
mov
xchg
sbb
push
cmpb
adc
xchg
xchg
cmp
xchg
sbb
mov
cs
imul
stos
adc
xchg
nop
enter
dec
ret
fwait
cs
and
int
mov
or
mov
mov
xchg
xor
mov
and
arpl
aas
in
pop
scas
inc
lods
imul
jmp
sar
add
fld
fistpll
push
leave
add
add
jns
sub
loopne
fs
push
retw
cmp
and
mov
mov
imul
cmpsb
imul
in
setp
nop
orb
fiadds
push
mov
pop
xor
mov
nop
popa
clc
pop
mov
or
add
jmp
cltd
mov
xchg
pop
jg
and
pop
fildll
xor
shl
inc
outsb
mov
or
in
insb
negl
imul
cmpsb
mov
add
call
stos
ja
sub
xor
cmc
sub
cs
fsubrl
movsb
and
sbb
out
or
mov
cmpsl
das
inc
stos
enter
mov
lock
idiv
ja
out
imul
ret
lods
mov
or
cli
adc
pop
push
xchg
xchg
xor
mov
movsb
pop
gs
and
aam
loop
xor
mov
icebp
jbe
add
dec
jmp
or
sbb
dec
fs
mov
data16
test
sbb
sahf
mov
add
out
mov
pop
addr16
inc
outsb
mov
out
test
lods
mov
inc
lahf
aam
cld
rorl
lock
testb
in
xor
std
or
dec
in
scas
sar
push
cld
pushf
push
push
cmpsb
aaa
stos
sbbb
sarl
test
push
lret
mov
mov
outsb
sbb
jg
jle
lds
xor
test
mov
mov
bound
les
push
test
jle
in
jmp
lret
add
das
mov
in
pop
add
xlat
xchg
aad
pop
insb
adc
or
add
sub
inc
xor
jnp
inc
aad
pusha
xor
scas
rorb
xchg
jbe
lds
fisubrl
arpl
fldcw
out
sbb
scas
or
jmp
mov
xor
or
aam
fs
mov
inc
ret
jnp
icebp
mov
push
mov
xor
loopne
stos
mov
insl
xchg
lods
orb
or
es
dec
cmp
lea
sub
and
jnp
push
pop
and
jns
xchg
insb
or
xchg
arpl
iret
ljmp
mov
cwtl
shll
imul
scas
scas
cmpsb
xchg
rclb
cwtl
jns
icebp
push
push
enter
jecxz
setge
dec
cmp
xor
mov
fiaddl
and
jnp
xchg
outsl
xchg
in
in
or
cmp
arpl
cmpsb
jb
jmp
mov
popa
jno
repnz
adc
clc
lods
in
xor
cmp
push
sub
clc
add
pop
jmp
push
andb
aaa
pop
fucomip
movsl
push
pop
adc
inc
popf
cmp
fists
jg
mov
push
shll
cmpsl
mov
cs
fstps
pop
xchg
lahf
pop
outsl
dec
stc
dec
das
mov
sub
gs
inc
xchg
sbb
mov
or
cmp
adc
dec
sahf
cwtl
dec
loope
push
in
xor
push
push
scas
and
movsb
jns
ds
jl
pop
sbb
cmpsl
out
fcmovnu
in
add
and
nop
mov
jae
push
int3
scas
mov
cli
leave
loopne
sub
add
pop
ja
mov
fidivs
rcr
fsubl
hlt
xchg
cmp
in
ficoms
or
iret
pop
fsubrl
add
aas
add
insl
inc
scas
cmp
lret
xchg
inc
test
popf
in
xchg
inc
out
sub
scas
xchg
ret
clc
cli
pop
dec
sub
movsl
and
jmp
leave
push
mov
cld
mov
add
inc
scas
sbb
pmaxub
pop
xchg
mov
stos
sbb
dec
inc
adc
movsb
iret
sti
dec
add
mull
shl
xor
cmp
push
fs
rcrb
and
lods
ret
ds
sahf
mov
mov
mov
scas
xchg
adc
lahf
push
int3
mov
xlat
jns
jb
jge
jb
sub
setns
aas
push
lcall
sub
xor
and
cmp
push
xchg
out
cltd
push
test
sbb
xchg
mov
repnz
adc
mov
mov
sahf
jmp
mov
mov
sbb
repnz
fidivrs
imul
jno
jge
lea
xor
fsts
adc
int3
bound
ja
mov
xor
add
das
push
pop
jno
imul
and
mov
rcll
leave
mov
push
cltd
mov
mov
push
cmp
fs
sar
insl
push
adc
movsb
jb
flds
xor
xlat
xchg
dec
pop
push
xor
into
push
cli
push
in
test
sub
lahf
sub
jae
bound
outsl
jp
cltd
lea
sub
les
cmpl
jo
ret
lahf
or
aas
in
mov
push
xchg
cmp
xor
mov
aad
aad
mov
testl
jne
mov
mov
add
or
ss
fstps
mov
and
cmpsb
popf
push
mov
lahf
pop
mov
imul
push
loope
cmp
outsb
lahf
pushf
jecxz
inc
mov
roll
push
sub
xchg
jg
dec
ja
or
or
pop
mov
aas
mov
sbb
adc
sarb
rcrl
cmp
addr16
push
xchg
loop
out
dec
mov
fxch
es
pop
or
and
or
fs
lcall
or
rorb
push
lods
or
push
fstps
pop
daa
and
pop
ds
icebp
fidivs
xor
test
stos
pop
pop
and
push
clc
jl
xchg
cwtl
jne
jg
mov
movsb
shlb
call
fdivs
in
mov
cmp
adc
sbb
add
lret
mov
ljmp
lods
test
orb
std
test
or
pop
bswap
aas
out
jmp
xor
int3
xchg
push
nop
test
cmp
sbb
ret
jbe
test
xchg
and
xor
mov
dec
lods
sbb
test
adc
inc
fwait
mov
mov
mov
shl
jns
xorl
scas
xor
xor
loop
cmp
out
pop
add
dec
subb
and
mov
inc
cmp
loopne
or
mov
subb
mov
adc
pop
mov
mov
cld
loop
rorl
cwtl
movsl
add
sbb
lods
loope
push
dec
mov
aaa
jns
xchg
addl
inc
mov
stos
add
repnz
sti
loop
fs
imul
dec
repnz
push
lods
cmp
pop
push
loope
mov
cmpsb
stos
xor
adc
dec
std
inc
xchg
fcomps
mov
lcall
pop
addb
in
lods
cs
lahf
cmp
fnsetpm(287
mov
push
punpckhwd
push
fdivrs
mul
js
mov
mov
push
and
rcrb
mov
faddl
inc
andb
jmp
mul
pop
fdivl
nop
lods
inc
xor
push
jne
jb
int
cmp
and
rol
call
sbb
dec
cmp
jmp
inc
sbb
in
mov
dec
add
movsb
push
aaa
loop
in
pusha
or
xchg
push
lahf
leave
adc
movsb
jg
jecxz
jb
icebp
dec
testb
and
xchg
gs
scas
fdivrs
out
lea
sub
orb
cmp
ffreep
sbb
mov
pop
in
dec
mov
dec
outsb
pop
fiaddl
movsb
or
push
daa
or
cs
pop
mov
jb
fs
stc
mov
dec
xlat
loopne
mov
popf
xchg
in
pop
call
addb
xor
add
push
in
mov
adc
aad
xchg
or
pop
js
jo
sub
cmpsb
pop
adc
addr16
jns
mov
das
jnp
push
push
jmp
insb
icebp
pop
cmp
inc
push
inc
out
loope
jle
movsb
mov
lcall
in
jp
mov
adc
ds
sti
xchg
insb
inc
sbb
pop
pop
shl
pop
adc
iret
jnp
inc
xor
fmull
test
xor
or
loope
push
fistl
xchg
rcl
mov
sub
rorb
jl
ret
dec
cwtl
daa
lret
pop
cmp
sbb
ljmp
movl
sahf
in
int
pop
jp
sbb
jle
addr16
inc
in
jecxz
orb
aam
lods
xlat
aam
sub
adc
mov
shlb
push
add
out
mov
xor
clc
mov
daa
bound
adc
into
adc
xchg
scas
or
in
xor
fdivrl
or
rcrl
inc
or
ds
mov
jns
inc
das
ljmp
je
popf
paddsb
out
ds
xor
cmpsb
xchg
ljmp
adc
cmc
fstps
push
mov
and
insb
jb
into
cmp
lahf
imul
mov
movl
icebp
jmp
mov
jbe
sbb
jmp
mov
andb
divb
stos
cltd
lock
xchg
or
dec
dec
scas
movsl
pop
push
cmp
dec
popa
aad
jge
aam
cmp
sbb
aam
cmpsb
addl
hlt
mov
push
fldcw
sarb
dec
push
in
add
sub
inc
push
inc
xchg
cmp
mov
lea
mov
xor
je
xchg
pushf
je
lods
mov
adc
mov
mov
addr16
lods
gs
int
xor
cmp
mov
mov
xor
int
popf
roll
xor
movups
sub
mov
pushf
and
popa
and
jb
jge
mov
loopne
lahf
push
pop
and
xlat
mov
sti
push
loope
dec
mov
into
dec
inc
inc
inc
xor
cld
mov
jl
loopne
xor
push
pop
sub
ffreep
inc
les
loopne
adcb
push
aas
or
pop
push
jns
lea
jne
dec
jb
ljmp
out
loop
dec
pop
loopne
dec
fwait
or
cltd
aaa
push
pop
push
leave
lds
ss
sub
mov
mov
dec
mov
pop
pop
jno
xor
out
lea
iret
push
push
jp
xchg
mov
pop
mov
inc
sahf
pop
pop
les
fsubl
or
xor
cmp
call
loope
cmpsb
pop
int3
xchg
sahf
ss
pop
sub
hlt
lahf
or
fcomps
cmp
add
pop
shrb
mov
pop
popa
cmp
loopne
jae
js
mov
in
pushf
and
aad
xchg
cmpsb
dec
loop
je
in
mov
js
fnsave
adc
fistpl
or
scas
and
insw
test
add
hlt
xchg
jnp
shll
sub
sbb
jo
movsl
push
loope
fcompl
in
xchg
ret
in
scas
bound
mov
icebp
jmp
leave
leave
jle
push
jmp
xchg
test
adcl
cmpb
aam
jle
es
dec
lock
nop
lcall
push
xor
mov
inc
inc
gs
mov
inc
cwtl
mov
inc
cli
loope
mov
fsts
std
jae
add
inc
inc
pop
inc
push
lret
sbb
aaa
sahf
pop
push
dec
mov
push
xchg
cwtl
sub
addl
into
jb
xor
mov
push
and
mov
js
and
mov
cmpsb
arpl
test
push
sub
cmp
inc
mov
mov
mov
nop
adc
lret
into
mov
dec
outsb
cs
jle
lods
fwait
mov
je
sbb
jne
shld
fstpt
leave
iret
inc
xchg
cmp
out
mov
push
push
jne
mov
out
xchg
add
mov
and
dec
jmp
jae
adc
dec
popa
cwtl
jmp
pop
jb
out
push
ret
mov
test
xor
gs
out
dec
ds
jbe
jmp
jb
aad
insb
push
xchg
imul
cmpsl
out
cmpl
xchg
sbb
mov
adc
fsts
mov
in
xor
scas
dec
pop
adc
scas
out
movsl
sbb
ret
add
mov
push
cmc
cmp
inc
mov
add
pop
addb
jae
mov
adc
push
pop
jle
cmp
sbb
jbe
jecxz
mull
js
add
call
ret
lret
aaa
xor
add
cld
pop
inc
lods
add
nop
cmp
adc
clc
mov
icebp
jmp
ljmp
jp
cvtps2pd
data16
cmp
mov
mov
fistps
fmull
dec
mov
mov
repnz
jae
call
lea
les
jg
pop
orl
adc
jmp
cwtl
mov
adc
jb
fdivrs
and
inc
divl
std
inc
rcrb
mov
jmp
xor
stc
cld
push
xor
gs
sub
mov
adc
sbb
movb
test
in
lret
push
xchg
inc
inc
or
jno
and
fdiv
pushf
pop
dec
jnp
mov
out
int3
inc
fadds
or
imul
leave
fwait
add
in
or
pop
rorb
pop
stc
inc
or
data16
and
ljmp
fwait
sub
cli
push
in
inc
mov
aad
fwait
pop
add
shrb
push
cmc
xor
stc
mov
pop
addr16
lods
sahf
fsts
inc
mov
jl
stc
ds
sahf
ja
ljmp
inc
je
mov
adc
fisttpll
insl
jl
mov
jge
mov
dec
ss
mov
aaa
loop
popf
xor
xchg
popf
push
mov
jno
inc
jne
lock
xchg
push
cmp
push
mov
sbb
lock
mulb
mov
adc
out
cld
dec
js
jne
sbb
insb
push
push
popf
sbb
clc
mov
scas
pop
fdivrs
ja
enter
push
rcll
insb
mov
cld
imul
popf
insb
pop
push
in
pop
mov
xchg
mov
std
push
std
xor
mov
rcrb
lahf
pop
xor
jg
push
idivl
inc
adc
shrb
fs
push
mov
xor
leave
inc
mov
movsb
xchg
scas
int3
inc
bound
rcrb
iret
cmc
inc
mov
fucomi
cmpl
addb
sbb
or
or
popa
push
int
adc
inc
or
lock
inc
push
faddp
mov
popa
lcall
adc
scas
test
jle
ficomps
idivl
mov
sub
rcll
mov
adc
and
xchg
mov
add
pop
int
es
push
mov
dec
ret
les
xor
lock
push
mov
or
fucomi
jo
or
pop
mov
xor
and
clc
andb
adcl
sbbl
sbb
adc
scas
mov
cmpsl
nop
fdivrp
daa
rorl
jge
pop
repz
push
insl
notl
jg
stos
pop
stos
out
cli
dec
push
stos
jmp
mov
mov
cmc
in
or
pop
pop
xchg
cltd
out
push
icebp
mov
fiadds
pop
mov
in
rolb
xor
ljmp
mov
or
push
or
mov
adc
js
pop
adcl
mov
shrl
push
and
loop
sbb
fcomi
std
adc
push
push
out
push
dec
daa
data16
adc
cmp
add
jmp
js
mov
sub
cltd
pop
pop
mov
jne
jo
bound
scas
scas
jne
add
iret
fucomip
adc
xchg
mov
nop
fidivrs
mov
das
rorb
les
popf
popf
mov
mov
ja
ja
pop
xchg
and
popa
xor
adc
popf
and
pop
negb
stos
in
xchg
nop
popf
fstl
jo
pop
jmp
into
or
andb
daa
mov
sbb
adc
pop
movl
jb
clc
xor
mov
dec
mov
popf
test
stos
jmp
and
mov
idivl
lcall
sbb
cmp
cltd
push
sahf
jp
stos
scas
roll
adc
cmp
xchg
imul
add
mov
sub
lahf
mov
xorb
mov
or
push
scas
fstl
push
inc
loopne
jne
adc
subl
frstor
shl
jecxz
xor
jb
mov
imul
rclb
test
imul
rcrl
les
imul
sbbb
ja
cmc
dec
push
pop
repnz
mov
push
insb
push
lcall
shll
jle
pushf
adc
push
and
mov
ret
cld
add
pushf
add
sbbb
mov
pop
fisttpl
cmc
enter
mov
fwait
cmp
push
in
adc
mov
mov
mov
and
es
push
in
pop
add
mov
or
jmp
pop
push
jnp
xor
repz
lret
cmpsb
sub
bound
cmp
cmp
call
repz
sbb
push
sub
shrl
stos
adc
mov
sub
cld
lcall
sbb
jno
cmp
dec
iret
test
cmp
scas
mov
insl
loop
bound
nop
mov
pop
mov
jae
cmc
outsb
addb
lea
mov
mov
xor
outsl
sub
pusha
pop
clc
ss
jmp
ja
inc
dec
and
movsl
fisttpll
jno
cwtl
lods
fisubrl
cmc
inc
dec
out
fcompl
ja
sti
sub
push
dec
add
imul
jae
insl
les
sbb
inc
out
scas
in
imul
mov
mov
shlb
rol
dec
inc
adc
jb
jge
into
add
movsl
jns
fwait
adc
call
ds
pop
adc
cmc
mov
xor
xchg
rclb
xchg
push
dec
lahf
addr16
jne
and
jne
cmpsl
stos
xchg
adc
pop
pop
sbb
mov
ja
loopne
and
sarb
addr16
test
movsl
mov
cmpsb
push
ret
addr16
xchg
xor
mov
js
adc
stos
cmpsl
cld
pop
inc
lcall
pop
lock
iret
jmp
loop
lock
imul
data16
dec
mov
mov
neg
shll
sub
mov
jl
rolb
push
aam
push
cld
sub
out
xlat
rcr
xchg
adc
ljmp
inc
ss
mov
add
popf
adc
mov
pop
std
stos
daa
dec
mov
push
xchg
jbe
inc
pop
adc
lfs
jb
mov
ret
dec
jns
addr16
popa
out
movsb
pop
push
jae
pop
dec
mov
sti
jbe
mov
fimuls
fdivrl
aas
add
insl
mov
and
out
repnz
xchg
loope
not
push
mov
idivl
imul
inc
add
cmp
lds
inc
fstps
cmp
fcomip
out
push
inc
nop
xor
or
pop
or
pop
pushf
inc
arpl
jmp
ret
adc
xlat
mov
pop
in
sbb
pop
mov
subb
xor
andl
inc
stc
insb
and
sbb
mov
daa
push
or
add
xchg
cmp
xor
xor
or
cmpsl
fdiv
xor
lcall
dec
sbb
dec
lcall
xor
sahf
fisubl
repz
std
iret
sbb
jbe
ja,pn
adc
cmc
in
dec
add
addr16
mov
outsb
into
mov
data16
aad
rcll
loop
cltd
mov
out
mulb
adc
test
es
jae
push
push
and
push
in
push
rcll
shrb
and
lock
and
push
push
lea
das
cmp
push
cmp
andb
mov
mov
ret
sbb
push
or
jb
pop
lock
out
clc
sti
adcl
rep
xor
fcmovnb
or
out
dec
push
test
add
es
cwtl
push
fadd
mov
mov
mov
mov
stos
jne
ficoml
jnp
pop
out
cmp
lret
mov
sub
cmp
xor
lock
push
shr
ja
lret
dec
and
adc
pop
xorl
push
sub
fwait
icebp
jo
daa
ljmp
sub
ss
sbb
insb
push
jmp
cs
vfrczps
call
xchg
inc
adc
push
xchg
push
stc
pop
jno
je
jge
xlat
scas
push
mov
aas
mov
imull
call
push
jg
dec
and
popa
mov
mov
ror
pop
arpl
lahf
xchg
clc
sub
jp,pn
stc
mov
notb
rcll
pop
mov
and
adc
cs
lods
stos
xlat
xor
je
fildl
sub
inc
test
inc
jge
xor
mov
sub
mov
out
inc
push
mov
sar
outsl
inc
push
loopne
std
sub
push
or
xchg
push
outsl
lods
inc
mov
pop
js
in
daa
sti
inc
sbb
rcr
xchg
jns
js
lods
mov
out
xchg
pushf
iret
rcll
xchg
jge
push
sbb
pusha
arpl
mov
out
js
mov
into
dec
pop
and
lock
mov
ret
fsubl
lcall
mov
pop
mov
into
pop
stos
shrb
inc
add
cmp
cmpsl
in
pop
popf
scas
fstps
dec
mov
inc
or
sarb
and
cmpsb
daa
or
clc
sub
pop
rorb
xchg
pusha
mov
cmc
fcmovbe
std
int3
mulb
pop
and
daa
jns
aad
jp
push
divl
std
push
inc
xor
adc
pop
int3
mov
pop
loopne
sti
sahf
fsubrl
jg
dec
sub
repz
lahf
sub
jne
jp
sbb
jp
out
scas
pop
push
not
fistps
stos
int3
cltd
push
xor
push
sahf
test
ficompl
mov
in
cmp
dec
and
jge
sub
xchg
cltd
cmp
call
dec
mov
shrb
pop
or
ja
pusha
es
in
pop
ss
push
stos
xchg
or
xchg
lcall
sub
cmp
enter
pop
out
xor
mov
dec
in
pusha
shll
lcall
push
ds
mov
jne
or
movsb
das
jne
xchg
push
pop
mov
aaa
cltd
jmp
cwtl
stos
mov
jp
les
nop
xchg
mov
inc
and
pop
mov
in
mov
hlt
xor
imul
lods
dec
sub
fcomi
dec
dec
js
insb
cmc
xchg
aaa
sti
sub
inc
repnz
push
rep
pmuludq
adc
das
out
dec
cmp
fiadds
jbe
mov
pop
shlb
mov
repz
stc
cwtl
sti
cmp
cmp
pop
fcmovu
sub
and
std
inc
scas
pusha
cmpl
aaa
sub
lahf
scas
dec
adc
popa
ficoms
and
xor
movsl
lcall
pop
jmp
lret
ja
popa
inc
and
push
scas
ror
imul
inc
loope
repnz
repz
or
hlt
add
insb
and
and
mov
cmp
pop
cld
jbe
mov
shrb
jb
int3
stos
clc
leave
inc
adcb
sbb
push
movsb
cmp
stc
mov
pop
movsl
jge
fbld
jb
pop
and
pop
xchg
out
xorl
dec
test
sbb
vpsubb
or
add
lcall
in
mov
scas
std
cmp
stos
dec
push
cmp
mov
stos
outsl
fidivrs
fwait
imulb
shll
jns
jmp
add
sub
adcb
or
decl
mov
xlat
mov
inc
add
imul
jbe
enter
push
cld
inc
xchg
mov
mov
fxch
xor
pop
push
xchg
sbb
dec
stc
cmc
xor
cmc
imul
clc
dec
data16
sbb
pop
roll
and
sbb
xchg
inc
xlat
push
push
inc
xor
rclb
and
mov
xor
test
icebp
mov
adc
jbe
arpl
cmp
pushf
pop
xor
xor
mov
scas
pop
addr16
xchg
imul
cmp
jno
xchg
xor
mov
inc
jge
sub
not
out
sbb
rcr
ret
lock
xchg
lock
mov
push
in
sbb
dec
dec
dec
sub
sbb
ds
repz
out
sub
pop
dec
test
inc
sbb
in
dec
push
arpl
test
pop
add
mov
xchg
xchg
test
mov
shr
mov
sbb
sbb
jb
push
xchg
and
lret
imul
mov
in
cli
mov
fdivrs
iret
add
add
pop
cmpsl
rorb
xchg
jg
sub
ficompl
fisttpl
dec
cmp
or
or
ds
stc
inc
sar
or
push
cmp
push
cmp
sub
cmpb
and
cmc
push
mov
push
sub
xchg
pop
inc
mov
inc
subb
nop
pop
adc
data16
push
push
mov
and
push
jno
jae
mov
pop
mov
scas
push
rcr
out
add
arpl
dec
fs
repnz
xchg
das
jb
fbld
jo
insb
mov
fimull
lods
xor
adc
jo
icebp
loope
scas
xchg
ja
sub
mov
xchg
cltd
lret
or
movsl
lret
into
daa
nop
mov
sub
insb
mov
or
addr16
test
aad
and
xor
push
fldenv
push
xchg
sbb
xlat
out
mov
loop
decl
call
cs
jge
mov
pop
lock
outsl
popl
out
sbb
daa
xor
push
mov
mov
mov
mov
and
fs
cmc
sbb
mov
cmpsl
pop
std
cmp
les
nop
repnz
mov
lcall
mov
sub
sarl
push
xor
daa
aaa
orl
lods
ror
int
loopne
decl
ret
pop
pop
scas
mov
outsl
lret
daa
mov
mov
rcll
into
jmp
lods
orb
rolb
sbb
fstpl
xor
push
out
lds
lahf
loop
jb
xchg
xor
dec
std
inc
enter
mov
fildl
mov
inc
into
and
mov
cmp
push
test
clc
mov
inc
std
aaa
icebp
jge
push
scas
rol
fisttpll
xorl
in
xor
or
and
mov
outsb
out
fdiv
inc
pop
sub
ret
sbb
shrl
cs
push
xchg
rcrb
or
sbb
pop
stos
mov
imul
or
loope
push
and
lock
stos
push
sbb
fldcw
nop
mov
mov
adc
movsl
ds
sub
sub
test
xchg
stos
push
pop
test
cwtl
in
sarb
lods
pop
mov
stc
mov
fsubrl
fs
xchg
or
pop
mov
es
cmc
or
mov
fdiv
or
cmp
mov
pop
nop
xor
pop
cmp
mov
cli
cmp
push
cmpsl
dec
call
adc
ret
xor
test
bound
stos
sahf
sbb
xor
dec
xor
popf
adc
or
pop
popa
mov
call
sub
ss
repz
mov
loope
idivb
xchg
dec
inc
out
pop
in
in
mov
std
lret
js
mov
addl
sub
shll
ret
xchg
das
scas
out
popf
fsubr
aas
cli
mov
sub
jecxz
ljmp
adc
in
sub
adc
mov
mov
lds
fists
inc
cltd
shlb
jg
test
cmc
jge
mov
add
xor
mov
mov
popa
fcmovnb
pop
add
sub
pop
mov
cmp
or
es
cmpb
inc
add
add
sbb
mov
mov
lods
lock
push
jns
arpl
xchg
inc
jmp
adc
xchg
xchg
insb
xor
cmpb
sbb
pop
sbb
fdivr
aaa
mov
add
popa
test
aaa
lods
push
test
ss
filds
xor
push
jbe
shl
mov
add
repz
pop
add
jmp
popf
mov
mov
jecxz
mov
xchg
sbb
add
add
outsb
jl
or
xchg
cs
xchg
aaa
push
enter
ljmp
adc
popa
dec
inc
push
cmpsb
jb
or
sub
bound
mov
jo
fildl
xor
lahf
pop
jbe
dec
or
seto
pop
test
shl
xchg
jge
pop
loope
or
mov
es
cmp
mov
xchg
hlt
pop
dec
xchg
sub
jp
movsl
jp
mov
out
mov
fisubs
xor
aaa
cmp
add
in
sub
in
je
pop
adc
cmp
jbe
sbb
pop
xchg
int
lahf
mov
xor
ret
nop
pop
sub
pop
sti
stos
sti
cmp
hlt
rolb
stos
mov
add
mov
pop
add
lds
lock
sbb
adc
dec
cld
outsb
mov
push
scas
fxch
testl
ret
sbb
rcl
xor
xor
push
aam
sahf
xchg
ficoms
mov
pop
dec
sbb
cltd
aaa
pop
jo
jge
push
sti
leave
lret
dec
sub
xchg
adc
jp
sub
push
stos
push
lods
loop
adc
loopne
daa
repnz
push
add
ds
add
test
adc
xor
scas
out
int
out
scas
js
sbb
out
push
mov
imul
cmp
sub
fstpt
ja
in
not
xchg
fcmovnb
ror
cwtl
mov
push
inc
jg
roll
mov
jne
lret
xor
jp
lock
shr
xorl
int3
loope
test
fistps
lcall
pop
inc
les
mov
enter
dec
jl
shlb
mov
stc
lret
lock
lods
or
add
push
filds
sub
adc
data16
fs
jno
daa
int3
bound
mov
jb
sti
inc
loop
jno
leave
js
or
xchg
cmp
jmp
out
sub
lret
pusha
stos
addb
mov
aaa
xlat
adc
cmp
xor
jbe
std
sub
ljmp
cmpsl
lahf
xor
dec
pop
push
je
imul
jp
and
ret
or
ljmp
xorb
sub
repnz
mov
cli
sti
test
mov
push
pop
loopne
cltd
addr16
jns
imul
repnz
jmp
jbe
dec
out
or
fs
mov
xchg
dec
xor
imul
mov
fs
sub
xchg
fisttpll
movsl
cmp
add
xlat
aas
xor
call
adc
sbb
adc
js
cmp
clc
sarb
lret
mov
cmc
cmp
xor
dec
call
loopne
mov
nop
xchg
adc
popa
aaa
and
das
xchg
fiadds
arpl
adc
dec
push
xor
lret
adc
add
push
cltd
sbb
mov
das
out
jns
xor
push
dec
or
shll
and
cmp
jmp
dec
mov
xor
inc
or
adc
or
jns
repz
and
push
adc
insl
xor
test
aas
jle
mov
nop
dec
stc
arpl
pop
cwtl
ljmp
stc
mov
push
mov
test
in
mov
js
fnstenv
dec
fcom
mov
mov
push
xor
nop
imull
dec
lea
pop
hlt
outsl
scas
add
and
or
fwait
adcl
addr16
in
dec
fidivs
mov
add
or
cli
cmp
sub
cli
ret
les
loopne
xor
popa
sub
push
repz
repz
andb
movsb
jmp
xchg
fisubs
push
popf
jle
mov
fisttpl
lods
sub
mov
xchg
stos
insb
rorl
xor
mov
daa
subl
mov
xchg
mov
ds
mov
mov
int
dec
lds
add
cltd
adc
sub
arpl
add
or
loopne
movsl
bound
mov
cmpsb
add
and
fnstenv
push
leave
cmp
adc
mov
imul
push
or
add
and
xchg
mov
daa
fcompl
testl
test
jno
xchg
xchg
and
xlat
push
enter
push
xor
adc
dec
out
mov
fxtract
push
jmp
fsubrs
push
js
mov
sbb
fimull
push
add
movsl
lds
sub
pop
lds
mov
das
jnp
xchg
mov
lahf
int
fs
mov
scas
subl
imul
pop
xchg
xor
in
int
push
fbld
jg
mov
out
sbb
outsl
inc
cmc
mov
mov
outsb
pop
cmp
push
lock
fcompl
add
pusha
push
dec
and
fs
test
arpl
into
fcoms
push
scas
xor
push
dec
cmpsl
lods
and
jl
xor
lods
mov
mov
xlat
outsb
lcall
fdivs
dec
gs
dec
push
sub
ficomps
jle
jnp
sub
or
in
inc
sub
dec
sbb
push
roll
mov
add
ret
jb
sbbb
adc
iret
cmp
rorl
and
jge
loope
out
mov
lcall
repnz
mov
bound
lret
cmpsl
push
mov
add
jno
pop
jb
std
mov
adc
xor
jg
in
pop
frstor
imul
xor
inc
jnp
fistpll
xchg
cmpsb
mov
xor
or
sub
jl
inc
lock
pop
adc
inc
outsb
loope
mov
and
int
pop
dec
scas
movsl
dec
xor
ret
dec
hlt
jae
sbb
arpl
or
das
sub
sub
ret
repnz
movsb
mov
mov
jno
xchg
xor
dec
sub
into
popa
fsubrl
mov
xorl
cli
idivb
mul
lcall
push
fistpll
jmp
xlat
jecxz
iret
mov
cmp
mov
lock
sub
mov
xchg
aaa
jmp
enter
dec
pop
out
xlat
stos
fldt
stos
jae
xor
test
aas
daa
mov
inc
or
jno
push
mov
mov
cld
and
mov
mov
mov
inc
or
into
cwtl
dec
cld
repz
pop
xchg
cmp
adc
sarl
jo
sbb
rcrb
int
repnz
and
jmp
shrl
sbb
mov
dec
lret
fisttpll
fwait
adc
xchg
cwtl
daa
mov
mov
sub
daa
sub
mov
adc
or
nop
out
stos
notb
pop
mov
cmp
fstpl
inc
add
fiadds
incl
dec
test
test
fdivrp
aas
push
xor
repnz
rcrl
mov
sub
scas
mov
insb
movsb
add
mov
imul
add
cmp
inc
sbb
cmc
rcrl
cmc
lods
jns
push
dec
nop
adc
mov
out
mov
outsb
icebp
addb
daa
cltd
pop
stos
sbb
fnstcw
into
jo
xor
fsubrl
loopne
push
arpl
add
push
daa
fs
repnz
inc
mov
adc
mov
ret
imul
xchg
xchg
sbb
scas
mov
jp
pop
mov
jo
dec
sbb
mov
stc
cli
push
push
lcall
fsubrs
mov
mov
addr16
dec
jnp
in
sub
cmp
cmp
xchg
fisubrs
jb
inc
lcall
add
pop
or
pop
mov
xor
sbb
xlat
adc
push
dec
xchg
jmp
jmp
subb
and
rsm
mov
and
or
pop
adc
out
popf
pop
clc
inc
arpl
mov
mov
lods
js
mov
cltd
aas
jbe
pop
xchg
jnp
lret
xor
cmp
lds
push
jp
jbe
jmp
mov
pop
imul
ds
jae
subb
jnp
cmp
rep
or
pop
and
push
dec
out
push
dec
mov
fistpll
xor
mov
cmp
aam
ds
xchg
loope
lret
or
inc
idiv
in
mov
lret
inc
dec
aas
jnp
jl
scas
insb
push
pop
data16
mov
repz
push
hlt
testb
into
icebp
sub
dec
xor
lods
mov
mov
fidivs
xchg
inc
aad
dec
jns
je
int
mov
jecxz
xchg
out
rcrl
xchg
ljmp
cmp
lret
push
data16
aad
in
push
int3
add
xchg
push
lods
dec
fwait
sub
out
nop
loopne
insb
adc
mov
hlt
in
es
loope
scas
test
cs
pop
mov
pop
out
loopne,pt
mov
add
sbb
mov
lret
jge
mov
push
repnz
insb
mov
push
aad
icebp
pop
lret
mov
rcrl
hlt
pop
inc
cld
fistpl
dec
add
mov
jmp
cmc
out
inc
sub
ss
mov
in
inc
int
clc
loop
and
pop
lds
jbe
rorl
imul
out
lods
ret
movsb
push
lods
and
inc
push
mov
cmp
pop
xchg
repz
xor
ljmp
xchg
scas
ret
push
xor
iret
push
out
stc
xor
or
out
mov
insl
cmp
dec
inc
iret
and
pop
popa
lods
fcomi
pop
mov
or
stc
inc
xchg
mov
test
mov
sub
jecxz
lahf
pop
sbb
in
stos
fisubl
dec
inc
mov
je
lret
xor
sub
add
shld
inc
in
cld
ljmp
loopne
repz
add
repz
adc
pusha
lcall
imul
in
jp
inc
shr
mov
dec
sti
dec
mov
fistl
add
jle
xor
mov
lods
jle
stos
adc
inc
adc
add
outsl
xchg
movsb
outsl
jge
inc
sahf
out
in
test
xchg
and
pop
movsl
mov
cld
je
mov
or
psrlq
mov
fs
out
and
lret
addb
sbb
enter
movsb
xchg
sub
sbb
mov
call
jp
outsl
inc
ja
jns
lahf
rolb
mov
repz
add
mov
mov
into
jl
cltd
xor
pop
in
pop
enter
and
mov
pop
sahf
sub
shll
mov
cmc
out
pusha
clc
mov
shr
enter
sbb
sahf
ror
jnp
das
or
les
bound
xor
inc
inc
ret
sbbb
gs
iret
jle
dec
lret
cmp
fnsave
pop
fs
xor
cmp
imul
enter
or
xor
stos
shl
into
enter
dec
stos
mov
mov
xor
jmp
push
sbb
mov
or
and
cltd
mov
bnd
sub
int3
jne
sarl
jbe
fsubrs
jp
xor
jae
lahf
fisubl
daa
push
dec
add
dec
inc
popa
fstl
repz
in
inc
out
cmp
das
enter
mov
sub
ret
push
data16
push
sbb
push
xchg
and
stos
shl
pop
test
dec
push
mov
and
stos
sub
jmp
sbb
in
push
rcrl
jge
inc
fimuls
xchg
sbb
pop
push
outsl
and
out
jns
xchg
loopew
inc
xchg
clc
mov
push
push
mov
vmwrite
inc
add
cltd
push
ss
pop
mov
lahf
mov
sbb
aas
mov
addl
mov
adc
adcl
mov
movsl
out
xchg
dec
xchg
pop
pop
mov
mov
int
or
dec
pop
pushf
xchg
xor
and
inc
mov
jmp
bound
mov
cmp
pop
mov
std
nop
leave
sahf
xchg
shl
fsubs
mov
cmp
dec
and
inc
dec
push
in
mov
pushl
push
iret
pop
cmc
add
pop
rorb
dec
repnz
cmpsl
stc
fisubl
icebp
outsb
push
sub
ret
bound
das
jp
mov
lds
test
add
and
push
mov
fcomps
cmp
sarl
je
out
int
pop
xchg
fidivs
out
testl
dec
jmp
cmp
clc
scas
pop
test
roll
dec
pop
rolb
sbb
cmp
notl
test
sbb
mov
dec
pusha
jb
cli
cmp
stos
repz
mov
sub
push
enter
cmpsl
mov
repnz
mov
adc
cmp
sbb
into
daa
test
mov
mov
imul
adc
fidivl
pop
stos
arpl
xchg
mov
mov
shlb
lds
repnz
pop
or
xchg
mov
fidivl
imull
sbb
sar
or
xchg
std
aad
mov
les
into
push
lods
mov
bound
or
inc
sub
das
andb
mov
outsl
dec
es
xor
repz
fwait
out
sub
pop
fdivrs
xchg
cltd
pop
pop
addb
xchg
and
bnd
fistpll
sbb
pop
cmp
ret
scas
std
cs
inc
mov
jno
insl
pop
cmovns
pop
hlt
xor
xchg
xchg
icebp
in
test
insb
mov
add
inc
inc
ss
lds
ret
icebp
loope
or
sbb
dec
push
xor
and
movsb
mov
out
lods
mov
lock
add
xor
setb
pop
push
add
mov
das
mov
sarb
pop
mov
mov
and
shlb
jge
daa
test
push
sub
xor
push
ret
mov
cmpl
jno
add
inc
mov
js
imul
popa
pop
jp
xchg
aaa
fnstcw
sti
push
cmp
outsb
fiadds
pop
add
cltd
les
jmp
mov
mov
test
test
inc
pcmpeqw
test
insl
mov
adc
sbb
out
mov
movsl
ss
mov
pop
sbb
dec
dec
jmp
lret
and
adc
cmp
mov
jnp
js
dec
sbb
lret
iret
pop
push
xor
xchg
pop
rcll
dec
pop
sub
pop
push
sbb
cmp
sub
jp
cmp
inc
cli
add
pushaw
mov
cmp
jo
mov
push
push
xor
and
lret
mov
sarb
call
xor
outsb
mov
lods
into
rcrl
cs
jns
stos
movsl
dec
fs
loop
xchg
sarb
mov
fs
add
push
les
adc
data16
lret
push
sarl
xchg
mov
mov
dec
and
push
inc
cvtpi2ps
push
mov
fildl
repz
fs
mov
or
fstpl
ret
pop
cmc
pop
lock
rcr
test
push
orb
popf
daa
sbb
mov
shl
xchg
test
imul
jnp
scas
cmp
adc
fldl
push
loope
push
mov
and
rcrl
faddp
xorb
mov
jg
je
imul
sbb
jp
mov
movsl
inc
inc
repz
fcomps
lods
mov
sub
and
lods
cld
cld
in
insb
inc
int
adc
inc
jno
dec
xor
push
ljmp
mov
iret
inc
dec
enter
sbb
push
fsubs
xlat
fadd
xor
es
xorb
jne
mov
xor
mov
aas
daa
push
mov
out
cmp
cmp
pop
leave
jae
and
in
pop
hlt
push
inc
mov
rep
jge
je
dec
outsl
aam
fcoms
in
pushf
sub
lds
push
pop
xor
adc
iret
sbbl
iret
pop
ja
sub
mov
popa
pop
jecxz
lahf
mov
xor
mov
adc
les
mov
inc
xchg
aas
xchg
ja
mov
rcll
inc
stc
cmpsl
ss
sub
pop
jns
pusha
jmp
cmp
xchg
xor
pop
aam
sti
rcr
dec
xchg
mov
jge
inc
into
push
arpl
cld
xor
sub
stos
stc
sbb
mov
and
dec
iret
mov
add
repz
in
push
and
nop
xchg
popf
sarb
cmp
or
jo
push
rcll
sub
popf
loope
rclb
nop
cmp
mov
xchg
mov
in
inc
test
push
daa
jge
dec
popa
aas
arpl
mov
in
mov
lods
mov
out
mov
sbb
pop
int
in
push
dec
scas
das
xlat
inc
movzwl
jg
jmp
mov
stos
pop
jbe
sbb
or
outsl
push
int
and
test
mov
mov
outsl
push
mov
sub
out
jl
and
xor
and
dec
xor
ret
push
clc
int3
cwtl
mov
ficoml
shll
pop
mov
inc
lret
pop
xorl
and
inc
test
sarb
mov
jae
aam
mov
es
gs
cmp
lcall
mov
and
mov
rcr
scas
sarb
mov
sahf
pop
fnstenv
pop
sbb
or
iret
xor
inc
mov
ja
ja
jno
xchg
mov
popl
dec
shlb
add
inc
arpl
cli
jae
xorb
sbbl
fadds
lock
dec
pop
in
cwtl
lea
mov
stos
mov
jns
adc
or
xlat
xchg
and
mov
loop
out
dec
push
into
mov
aad
xor
stc
scas
add
inc
repnz
nop
pop
mov
lahf
imul
jl
js
aas
lahf
or
or
mov
and
dec
jge
push
iret
add
mov
add
sbb
mov
cwtl
push
nop
mov
mov
add
pop
inc
adcl
outsb
push
sub
add
mov
call
xor
das
test
jmp
sbb
pop
scas
test
mov
push
sub
push
in
mov
sbb
add
jp
jle
ljmp
dec
int
push
cli
push
fwait
insb
shrb
ja
das
dec
addr16
pop
inc
mov
jno
xchg
scas
sbb
xor
fs
mov
aaa
mov
mov
add
rcr
scas
test
or
mov
imul
jmp
adc
int
inc
mov
es
adc
jge
adc
add
ror
ret
lea
in
subl
fdivrl
cmpsb
popa
mov
stc
shr
in
add
xchg
into
push
lret
xor
sbb
mov
out
popf
lods
fisubrl
cmp
xchg
in
mov
paddw
adc
shl
inc
test
aaa
adc
movsl
pop
ret
push
xor
sti
pop
mov
sub
cmpsb
add
jae
jbe
test
push
gs
int3
je
imul
in
fisttpl
cmp
add
lods
xor
insb
push
dec
stc
test
inc
adc
mov
loopne
cmpsb
std
outsl
cmp
xor
or
inc
js
ss
push
xor
cmpsb
es
xor
push
filds
or
mov
push
sub
call
insl
ret
sti
aas
in
loopne
sbb
in
iret
std
sub
sbb
mov
addr16
imul
aaa
insl
push
out
add
fisttpll
sub
ss
cwtl
imul
leave
dec
dec
dec
inc
or
repnz
pusha
dec
xor
fbstp
and
add
andl
sarb
mov
inc
inc
mov
sub
stos
mov
jnp
outsl
cmpb
fsubs
je
or
insl
lret
ret
push
xchg
mov
not
mov
rolb
aaa
push
xlat
out
add
out
add
push
pop
inc
add
into
test
pop
jle
push
add
cmp
and
pushf
and
ficomps
xlat
mov
adc
pop
jmp
clc
in
mov
xor
mov
adc
sub
or
mov
pusha
jno
jle
je
mov
xor
pop
fwait
pop
jl
ds
mov
mov
shl
xchg
arpl
mov
mov
and
jo
xor
cmp
mov
pusha
pop
loopne
loop
push
push
adc
out
mov
test
leave
xchg
inc
clc
cs
ror
jno
inc
xor
cltd
xor
fdivl
lcall
jecxz
xor
pop
andl
pop
add
mov
mov
fsubrs
jmp
pop
imul
pusha
mov
fbstp
pusha
inc
jle
mov
addr16
cld
sbb
add
mov
je
lods
push
test
loopne,pn
arpl
jbe
inc
pop
xchg
cmpsl
loop
cmc
sbb
xor
minps
fs
es
push
daa
and
jns
mov
add
xchg
or
lock
in
ds
mov
repz
jl
xchg
aam
push
cmp
div
pop
ljmp
inc
add
push
dec
imul
fists
push
mov
xchg
xor
and
inc
and
mov
repnz
inc
ja
push
das
nop
cmp
cmpsl
js
sbb
lods
push
and
push
lods
jp
mov
cmp
sbb
mov
push
andb
sub
push
lret
jnp
push
outsb
je
adc
pop
lcall
xor
push
mov
mov
or
rorl
imul
mov
loope
insl
or
cmp
mov
xor
mov
movsb
repz
lret
sahf
dec
mov
orl
movsb
xor
adc
stos
pop
pop
xchg
std
mov
popl
xorl
mov
cmp
jb
div
mov
in
and
hlt
or
arpl
cmp
xor
sub
insl
movsl
leave
push
pop
out
xor
aaa
pop
mov
push
inc
rorl
aaa
nop
jle
jp
add
ret
pop
jp
jmp
cmp
les
sub
repz
push
popa
pop
pop
mov
fs
cld
inc
aad
into
pushf
cli
lret
mov
sub
imul
adc
dec
jnp
and
mov
dec
push
and
cmp
pop
push
popf
call
mov
mov
data16
scas
pop
fistps
push
inc
fwait
cld
adcl
mov
sub
and
mov
fstp
orb
movb
sub
adc
scas
mov
repz
dec
or
aaa
cmp
andl
mov
shlb
lea
mov
imul
mov
push
dec
hlt
roll
movsb
add
or
mov
sub
stc
cmp
repnz
mov
add
or
test
mov
xor
push
sub
mov
xor
ds
adc
mov
xchg
stc
mov
xor
clc
mov
scas
movsb
cmpsl
mov
aam
pop
add
mov
orb
fsubrs
bound
mov
adc
shrb
xchg
cwtl
scas
jo
and
imulb
data16
popa
push
mov
inc
xchg
je
adc
aaa
xchg
addb
outsb
pop
mov
dec
imul
mov
rol
addr16
pushf
push
stos
rorb
fwait
shrl
push
into
js
push
xlat
sub
pop
xor
ret
mov
aas
sub
sub
xchg
xor
or
stos
pop
lock
dec
haddps
fadds
adc
sub
cmc
push
sub
jg
cmp
dec
imul
mov
les
icebp
cli
jnp
dec
push
lds
and
adcl
lret
js
dec
jb
cld
xchg
mov
movb
jecxz
mov
rclb
dec
mov
icebp
outsl
adc
xlat
loopne
lock
add
pushf
mov
test
fs
loop
mov
mov
pop
mov
jp
lea
push
jae
jl
scas
insb
jecxz
and
sub
loop
dec
adcb
xchg
test
dec
push
loopne
stos
and
pushf
mov
and
push
aam
lods
sti
mov
ja
mov
rcrb
aad
add
test
test
or
rolb
inc
adc
int
shrl
out
or
mov
cmc
mov
dec
fbld
adc
fsts
mov
loopne
adc
inc
push
andl
rcll
test
dec
insb
insb
pop
arpl
add
xchg
shlb
dec
stc
es
and
inc
push
push
sub
imul
mov
sub
add
xchg
cs
sub
adcb
add
pop
lods
je
loope
jl
testb
jle
in
mov
mov
scas
adc
xchg
rorl
cmp
add
push
sub
adc
pop
stos
jb
mov
cmp
mov
inc
aad
fwait
lds
fistl
lock
or
cmp
mov
or
pushf
push
and
imul
or
cltd
arpl
repnz
xchg
push
stc
inc
mov
jo
les
lods
enter
push
cmp
test
push
mov
movsl
cmovo
icebp
pop
stos
ret
cmp
cmp
xchg
mov
stos
aam
xor
mov
out
out
sbb
insl
and
sbb
stos
mov
test
outsl
fdivl
pushf
adc
rol
adcl
fs
sbbl
test
inc
xor
ficomps
dec
jle
dec
loop
lahf
scas
fdivp
int
idivb
adc
or
lcall
inc
int3
jae
and
dec
push
xor
subb
mov
bound
pop
or
stos
arpl
enter
hlt
in
dec
imul
pop
pop
lods
inc
add
push
xchg
mov
jae
scas
xlat
scas
out
push
movsb
adc
push
rcrl
loopne
nop
or
repnz
stos
cmp
ret
jge
adc
loope
sub
ds
add
mov
imul
jg
and
sub
jp
cli
and
jns
adc
stos
aaa
stc
pop
and
fmuls
movsb
repz
sub
clc
sub
rcrb
cmpsl
xchg
push
dec
out
sbb
dec
dec
js
push
push
and
push
pop
sub
jg
jge
mov
add
bound
cwtl
mov
je
xchg
mov
adc
pop
jae
and
lret
loopne
js
cmp
pop
jno
xchg
jle
adc
jno
xchg
test
ret
popf
lret
das
and
out
push
scas
fidivs
aad
sbb
adc
test
lcall
aaa
ljmp
in
pop
adc
push
jg
pop
loope
inc
mov
in
pop
negl
addl
xor
into
repnz
ror
or
push
push
lret
mov
adc
stos
loopne
mov
js
cs
xchg
es
dec
sbbb
testl
sub
inc
lret
xchg
push
ds
divl
lcall
cmp
in
add
cltd
dec
imul
mov
iret
outsb
pop
fistps
nop
into
incb
or
and
ret
mov
sub
sbb
mov
ss
pop
ja
mov
mov
sti
outsb
mov
out
imull
add
insl
cmc
cltd
lret
xor
inc
les
sub
lds
sti
mov
jl
test
test
cmc
pop
clc
and
push
in
lahf
iret
notb
test
inc
pop
push
out
negb
adc
mov
xchg
cmc
jae
cmpsb
lcall
cmp
popa
fldenv
test
daa
lcall
shlb
fldl
movb
fwait
outsw
and
jno
adc
leave
ljmp
mull
icebp
xor
add
enter
dec
push
ja
jge
lret
out
jg
loope
fildll
inc
sbb
jae
mov
sahf
and
pop
inc
adc
nop
scas
pop
dec
sub
fsubr
mov
scas
sbb
sarl
push
pusha
push
insb
adc
loope
xchg
sbb
sbb
mov
jge
jns
mov
daa
sub
adc
mov
cs
sbb
test
arpl
push
push
and
sbb
lea
adc
xchg
mov
pop
lods
ja
inc
in
loope
sub
in
mov
inc
fs
iret
sbb
cmp
push
test
and
add
lods
fmull
push
es
add
rclb
fsubs
xchg
jmp
rorl
clc
sbb
xor
stos
lcall
dec
test
push
mov
roll
mov
pop
lcall
xlat
popa
mov
scas
sbb
adc
dec
cmpsl
jl
or
sbb
jns
add
repz
cwtl
xor
fnstenv
fdiv
push
cs
out
cmpsl
dec
adc
dec
and
xchg
fcomps
arpl
movsb
aaa
push
data16
jl
jg
ficompl
ret
sbb
cmp
pusha
scas
pop
addr16
hlt
add
shl
inc
loope
and
push
arpl
jo
std
jle
mov
dec
movsl
scas
sbb
sarl
stc
loop
jne
mov
sahf
mov
adc
cmc
adc
ljmp
test
fistpl
test
out
loope
lret
sbb
mov
mov
ljmp
addl
cmp
mov
mov
add
xchg
jbe
lea
or
lret
stos
movsl
lods
loopne
and
jge
cli
leave
mov
fdivrl
and
push
pusha
cmpl
lahf
xchg
roll
xchg
inc
mov
push
add
cmp
lret
jmp
jb
sbb
jecxz
aad
cli
and
sbb
sub
test
scas
dec
jne
jle
mov
sbb
jo
cmp
movsb
cmp
inc
pop
xlat
scas
jbe
jge
in
aaa
and
lcall
fisttps
cltd
leave
int3
cmp
push
stos
and
aas
cmc
stos
sbb
icebp
bound
pushf
stos
inc
ret
scas
add
std
xchg
cmp
popf
mov
push
mov
dec
jae
mov
jp
mov
aaa
mov
cwtl
sbb
fs
xor
xor
movsb
mov
push
inc
xchg
push
jae
jg
pop
std
or
xchg
std
iret
sbb
popf
cmpsb
sbb
mov
pusha
das
popf
jae
fsub
add
imul
fldt
xor
inc
and
shll
or
stos
sbb
jle
arpl
in
cmc
lds
fs
or
pop
fs
lret
or
cmpb
fsubs
shlb
xchg
add
lock
aaa
nop
xlat
rcrl
loope
lods
in
xchg
jle
roll
jns
push
xchg
jmp
gs
filds
lods
in
hlt
cwtl
push
into
aad
fcoml
inc
das
mov
add
xor
pop
or
fs
or
add
and
cmpsb
daa
jbe
aad
sub
hlt
nop
or
and
stos
inc
pushf
pop
ja
cmp
mov
sub
popf
call
nop
push
pop
mov
sti
ja
add
fisttpll
pop
pop
sub
std
push
mov
sbb
push
mov
mov
inc
xchg
adc
fwait
inc
les
inc
das
mov
int3
cld
dec
xchg
mov
popf
cmp
xlat
push
jg
jb
test
stos
xor
stos
mov
push
scas
mov
mov
enter
pop
mov
fcoms
jnp
mov
push
sub
mov
mov
jnp
pop
adc
leave
lret
int3
aam
data16
pop
inc
ret
shr
sub
out
or
in
mov
repz
cmp
mov
repnz
incb
jle
nop
insb
in
addb
mov
cmp
mov
inc
cmpl
f2xm1
xor
inc
or
pusha
rolb
adc
cmp
movsb
loopne
ret
stc
sbb
mov
mov
mov
dec
mov
insl
std
imul
mov
sbb
roll
sub
cmp
scas
or
mov
sti
sub
cltd
pop
fcmovbe
xorb
in
dec
sub
xchg
ret
test
sbb
jmp
dec
mov
daa
flds
addr16
sarl
insl
sbb
pop
pop
jge
imul
adc
xchg
push
fstl
roll
dec
and
es
fxch
inc
adc
fs
loope
lret
or
jno
roll
xchg
xchg
mov
rorb
inc
notb
or
push
inc
sbb
jno
out
orl
jb
sub
xor
jmp
loope
mov
mov
jp
mov
sub
add
sti
jno
sbb
sbb
fiadds
mov
push
call
scas
cmp
and
fs
adc
push
pushf
xchg
pop
dec
stos
lret
jmp
gs
adc
mov
jle
clc
fcomi
sbb
dec
xor
cwtl
cmp
or
mov
aad
stc
leave
mov
xchg
rcrl
sahf
sub
out
fs
push
xor
xchg
adc
or
fldt
jne
xchg
sub
sarl
push
xor
test
pavgb
mov
mov
fdivrl
mov
inc
push
mov
jmp
pop
sbb
pop
cmp
sub
push
aam
inc
and
test
sbb
mov
xchg
lock
adc
adcb
dec
popl
lds
lods
aam
dec
insl
lds
lahf
xchg
mov
jae
cmp
or
jns
test
dec
jmp
daa
outsl
dec
iret
adc
pop
jnp
call
jbe
pusha
pop
decb
xchg
sbb
lds
arpl
adc
pop
sub
or
dec
stos
int3
jae
imul
cli
cltd
mov
push
sti
mov
add
call
repnz
sub
mov
ficoms
movsb
fldt
lock
sti
jbe
fldenv
js
push
cltd
pop
xchg
sbb
and
ja
adc
aaa
fisttpl
xor
aaa
push
shlb
int
xor
loop
push
dec
dec
mov
or
bound
mov
add
scas
mov
mov
jle
pop
rcll
xchg
adc
pop
add
outsl
sub
adc
repz
adc
jp
stc
cmp
rcrb
push
mov
cmpsl
cmp
pop
cltd
lahf
pop
dec
mov
outsl
pushf
rolb
pop
sub
lret
icebp
cld
dec
loop
cmp
shrb
add
test
and
leave
mov
mov
cmp
xchg
lods
jno
pop
ret
jb
dec
stos
push
rcll
out
xlat
repz
adc
scas
aam
test
sub
loope
pusha
imul
and
ret
incb
push
cli
sub
xor
jecxz
mov
mov
call
xchg
fadds
push
xchg
jmp
lret
xor
push
mov
mov
pop
or
sub
mov
push
adc
popa
push
imul
sub
cltd
icebp
jmp
out
imul
cmpsb
xchg
dec
lods
int3
leave
scas
stc
inc
inc
pop
popa
stc
ss
adc
add
xor
add
add
mov
bswap
and
cld
adc
sbb
jo
adc
mov
push
mov
int3
mov
iret
stos
icebp
orb
ljmp
inc
adc
xchg
loope
out
sbb
adc
mov
mov
add
imul
insl
pop
dec
jl
test
popa
pop
cmpsb
bound
mov
adc
lock
leave
mov
sahf
sub
rcll
mov
add
cmpsl
mov
fcoms
mov
sarb
push
in
filds
rolb
mov
jle
pop
add
es
movl
add
sbb
and
lods
loope
xor
and
aaa
push
sbb
sub
sbb
test
fwait
adc
fsubrs
xor
js
hlt
mov
cmp
ret
ja
dec
cmp
sbb
test
dec
add
mov
loopne
bound
test
cmp
pop
inc
jne
or
or
add
ds
les
cmp
push
outsb
or
in
mov
int
stos
push
mov
mov
leave
sub
mov
xchg
push
cltd
fcmovbe
pop
outsl
inc
sub
cmp
jmp
xchg
loopne
in
sub
xchg
lcall
iret
pusha
add
outsl
pop
stc
inc
cmpsb
cmp
mov
add
pusha
shr
sbb
es
icebp
scas
inc
jl
add
add
rcl
mov
popf
jnp
sbb
mov
mov
mov
jle
popf
ds
dec
and
or
sbb
test
dec
mov
and
inc
cmc
or
pop
cmpsl
jl
xchg
bound
push
pop
test
mov
in
xchg
xor
jg
inc
add
xchg
push
xor
and
js
imul
jecxz
xor
xor
mov
sti
mov
stos
pop
lds
mov
mov
mov
loopne
sub
sahf
mov
sub
xor
push
pop
ss
movsl
int3
mov
mov
ret
jb
in
jl
pop
inc
cmpsb
jnp
xchg
jae
mov
ret
dec
mov
pop
mov
mov
xlat
sbb
mov
das
test
in
in
mov
xor
xor
in
mov
cmp
enter
jno
ficompl
jl
add
mov
xchg
xor
mov
mov
xor
cmp
icebp
jp
mov
mov
push
repnz
fucomi
daa
push
ds
push
mov
enter
ret
jb
das
cmp
pop
lret
xor
sub
lahf
push
popa
pusha
shrl
cmovb
not
mov
jns
pushw
inc
and
jmp
mov
push
adc
movsb
inc
fmull
arpl
push
jg
lret
enter
test
adcl
dec
fidivrl
push
push
and
je
xchg
dec
fbstp
dec
jo
int3
ja
pop
aam
into
mov
test
decb
iret
sbb
sti
or
or
js
outsb
imul
sbb
jne
xchg
mov
icebp
jmp
iret
push
insl
jnp
pushf
nop
cmpsb
and
mov
jl
daa
pop
fs
ljmp
xchg
xchg
fs
dec
lea
fsubrs
push
push
push
ret
cli
cmp
and
push
and
add
jp
push
shlb
ss
lods
mov
ljmp
jbe
mov
lods
movsl
cmp
adc
test
xchg
cli
xor
sub
inc
shlb
fldcw
int3
imul
jle
mov
enter
mov
jo
repz
ds
jne
add
mov
orl
add
or
hlt
mov
inc
insb
pop
inc
fidivs
dec
and
repz
and
mov
mov
ljmp
jecxz
mov
mov
lock
addr16
jb
add
adc
mov
fnstenv
sbb
outsl
rcrb
test
cmpb
test
mov
xor
xchg
mov
mov
push
inc
cmpsb
call
int
mov
cmc
pop
xchg
xchg
dec
insl
xor
mov
out
call
sub
aas
xlat
sbb
les
data16
movsb
and
ds
mov
divl
out
push
sub
adc
rolb
mov
out
mov
jns
push
push
mov
loop
cli
fdivrl
rolb
rclb
iret
mov
cwtl
xchg
mov
gs
loop
lods
xor
outsl
lea
orl
sub
lods
push
sbb
subl
jge
nop
out
stos
movsl
push
pop
cmpsb
pop
fisubl
loope
mov
add
cmp
das
cmpsb
int
fxam
mov
jl
daa
cmp
push
ror
adc
xchg
and
sub
adc
fdivrs
shll
mov
jge
fiadds
push
jb
imul
inc
pop
test
jg
sub
leave
imul
lcall
cli
dec
imul
add
pop
int
or
inc
pushf
mov
insl
jmp
fs
scas
pushf
fildll
das
int
cmp
xchg
repnz
in
cs
out
scas
fstp
ficomps
int
fisttpll
fildll
xor
mov
mov
or
pusha
mov
call
mov
jne
out
cmp
clc
subl
test
push
cltd
mov
dec
pusha
shlb
idiv
or
data16
shrb
cmc
pop
xor
outsl
lret
fwait
push
movsl
rcr
mov
popf
test
sbb
test
in
rcr
dec
popl
mov
and
cltd
es
sbb
les
imul
int
das
and
adc
pushf
inc
std
ret
pop
in
dec
pusha
out
sbb
jb
imul
sub
mov
xchg
pop
hlt
lea
lret
dec
add
stos
fyl2xp1
xchg
sbb
insb
cbtw
sbb
mov
lahf
mov
inc
je
jp
loope
imul
leave
fcomp
std
shlb
int
shll
push
scas
or
mov
lret
aaa
mov
push
ret
enter
imul
es
sub
mov
push
mov
dec
aaa
pop
mov
pop
pop
sbb
dec
mov
mov
insb
fiaddl
mov
dec
or
imul
mov
fsubl
movl
jge
in
inc
mov
inc
scas
push
in
arpl
xor
and
in
adc
cmpsb
js
aam
stc
adc
xor
mov
xor
jo
sub
mov
add
test
and
mov
inc
sahf
cmp
jmp
or
pop
cmpsb
fcoml
je
push
cmp
xor
movsb
jbe
xor
daa
cmc
lea
or
jb
shll
loope
jae
iret
repnz
pop
push
dec
fnsave
loop
rorl
pop
out
shrl
scas
mov
dec
cltd
push
add
in
push
or
xor
cmp
test
fdivr
jecxz
movsl
or
dec
mov
movl
or
jle
cltd
je
popa
mov
xor
mov
jmp
pop
mov
out
sbb
negl
inc
gs
movsl
arpl
aad
mov
jmp
jp
cmpsl
xor
cltd
out
dec
inc
mov
lds
ds
fmuls
out
inc
xchg
pusha
sub
leave
dec
lahf
clc
push
test
inc
shll
pop
in
cmp
vsubsd
jmp
lret
data16
loopne
and
push
pop
mov
pop
and
jle
mov
mov
ret
mov
pushf
cmp
mov
loopne
cmp
jle
xorl
xchg
pop
pop
leave
push
idivb
fdivs
cmp
cli
mov
push
mov
push
jmp
lcall
addr16
push
sbbb
adc
mov
mov
xchg
pop
pop
call
sbb
arpl
enter
sbb
push
jg
scas
add
dec
fldl
test
cmc
adc
mov
aaa
mov
cmp
fsubl
out
repz
rolb
lret
bound
and
lds
sbb
pop
jecxz
or
loop
xor
xchg
mov
jecxz
into
mov
out
in
iret
ss
test
mov
fists
cmc
outsb
arpl
cmpsb
insb
fsubrs
repnz
and
in
lcall
jns
lods
xchg
inc
pop
je
icebp
fiaddl
jmp
aas
cmpsl
or
in
std
push
xor
and
xor
add
and
popa
out
xchg
adc
fcmovnbe
cmp
mov
adc
fsubrs
cmp
rcrb
sbb
mov
stc
dec
push
dec
inc
test
mov
add
mov
arpl
movhps
ret
mov
pop
xchg
or
dec
mov
pop
enter
fmull
adc
inc
into
xor
mov
shlb
mov
cmp
or
fldcw
xlat
xchg
dec
arpl
xchg
sbb
dec
sub
int3
lahf
xchg
jo
out
jae
ds
pop
cmpsb
jp
pop
sarl
das
cwtl
inc
cmp
out
adc
daa
xchg
cmp
add
inc
popf
pop
mov
inc
bound
xor
insl
ret
or
cmpsb
dec
pop
ret
jb
gs
int3
xor
and
fiadds
lahf
shl
ret
push
sti
call
jl
sar
lods
sar
pop
imul
xor
ljmp
mov
xchg
arpl
jo
xchg
xor
in
in
test
sarl
pop
pop
fsts
dec
or
gs
ficoms
syscall
test
inc
lahf
sbb
rcrb
mov
daa
movsl
bound
xchg
or
ds
pop
jle
push
cmp
add
test
mov
inc
mov
out
fldenv
or
neg
mov
sbb
jmp
adc
ret
pop
push
enter
std
mov
adcl
rclb
out
insb
aad
xor
push
mov
lret
test
test
mov
inc
mov
stos
iret
push
mov
sbb
pop
adcl
push
out
inc
popf
fsubrl
fwait
jge
mov
loopne
add
inc
mov
xchg
movsb
mov
lahf
mov
stc
stos
pop
sti
cmpsl
cwtl
scas
fnstsw
cmpsb
sbbb
