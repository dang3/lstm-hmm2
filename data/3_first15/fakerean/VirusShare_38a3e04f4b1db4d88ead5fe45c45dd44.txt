sbb
add
mov
mov
repz
mov
mov
aaa
mov
adc
rcrb
sub
push
add
outsl
push
test
cmpsl
test
leave
scas
icebp
clc
shll
xor
dec
inc
cmpsb
push
mov
fnsave
sub
sbb
pusha
gs
mov
outsl
pusha
mov
cld
jecxz
outsl
sbb
adc
mov
inc
or
xor
dec
add
sub
lods
dec
cld
insb
imul
mov
jg
fldt
call
inc
imul
aas
push
cmp
std
push
push
mov
shll
dec
add
or
jns
xor
push
loop
sbb
pop
adcb
ds
jmp
push
jp
cs
xchg
rcr
aam
xor
cmp
int
in
pop
fcmovnu
data16
subl
add
movsb
and
into
ss
or
roll
push
push
fwait
push
stc
cmp
and
icebp
aaa
xlat
shlb
mov
cmpsl
pop
jge
add
addr16
xor
mov
inc
daa
fsubrs
ret
psrad
cmp
addl
cltd
cs
jecxz
repz
loope
fsts
jle
jg
xor
les
and
fwait
and
add
loope
add
pop
mov
mov
icebp
aam
fwait
lods
inc
push
es
leave
xchg
push
jecxz
push
pop
dec
loopne
aad
push
and
pushf
aad
lret
cmp
mov
leave
mov
ja
into
repz
dec
movsl
jp
or
bswap
das
dec
test
imul
sbb
xor
mov
dec
pop
fwait
push
push
jno
mov
rclb
mov
push
std
inc
outsl
push
adc
jmp
arpl
lds
outsl
shlb
and
push
push
les
mov
mov
test
orb
test
xor
xchg
ror
lret
jg
cmp
sub
loopne
adc
adc
into
cmp
push
xor
dec
leavew
movsl
sub
pop
push
push
pop
mov
adc
cmp
int
sbb
addr16
aas
push
out
imul
or
sub
in
push
mov
push
int
fcompl
dec
test
and
ret
int3
jns
jecxz
pop
fisubl
fucomp
pop
leave
mov
add
sub
test
sbb
inc
pusha
pop
jg
cmp
faddl
jbe
int3
shrl
jbe
fdivr
or
sbb
sbb
pop
loope
ret
shlb
xlat
adc
sub
test
pushf
mov
push
mov
dec
dec
aaa
insb
in
lret
jnp
adc
mov
stc
sti
dec
orb
shrl
insl
sarl
loop
sbb
dec
xchg
cmp
xor
test
mov
out
mov
jb,pt
pop
adc
jno
mov
adcl
stos
in
push
xchg
fdivrs
xlat
aam
push
or
cmpsb
dec
gs
clc
les
es
sahf
jnp
sbb
cmp
sti
movsb
jnp
aaa
cmpsl
insl
inc
popa
and
sbb
dec
out
outsb
xor
push
xor
xchg
addr16
leave
and
sbb
mov
cmpsb
pop
xor
dec
lret
daa
insl
fs
inc
jmp
lcall
pop
mov
push
or
lock
ds
ljmp
fimuls
ret
mov
test
enter
push
xchg
inc
adc
adc
adc
inc
std
cmpb
push
jne
and
sti
inc
add
push
adc
mov
shll
push
dec
test
lcall
nop
ja
xchg
xchg
arpl
sub
xor
mov
popf
or
hlt
push
xlat
jmp
jae
loop
cmc
push
cmpsl
and
sub
nop
inc
jp
in
scas
in
fs
sbb
xchg
mov
mov
jne
cmp
sub
in
inc
inc
cmp
iret
pop
dec
in
adc
lret
jle
bound
inc
stc
cmp
test
out
sub
fmul
jns
ret
sbb
shlb
pop
inc
xchg
pop
rcl
xor
pop
xor
rorb
fsubr
fadds
add
js
rolb
or
sbb
cmp
jl
stos
mov
or
pop
push
orb
js
mov
add
fisttpll
cli
sub
jmp
mov
pop
xchg
pop
push
mov
and
cmpsl
lods
andl
loope
nop
aaa
xor
jne
and
xorb
adcb
ss
dec
ret
or
arpl
jae
pop
add
ja
adc
sbbl
pop
mov
cs
adc
andl
movhps
andb
dec
xchg
mov
push
ja
mov
add
push
int3
cmp
inc
mov
dec
add
loopne
dec
or
jecxz
mov
stc
mov
lcall
cmpsb
imul
fstps
or
pusha
fcompl
shl
fstpl
cmpsl
pop
jl
mov
mov
fcomps
rolb
push
dec
lods
push
pushf
dec
sub
or
mov
insb
cs
mov
int3
lret
push
rorl
in
addr16
sbb
lret
jg
test
out
mov
sbb
adc
nop
js
jnp
push
fcmovne
enter
mov
data16
adc
ljmp
subb
sbb
adc
fisttpl
enter
and
push
fsubrs
loop
jmp
sbb
pop
inc
daa
das
adc
sub
jbe
jbe
push
jns
rcll
push
sti
es
dec
icebp
push
into
je
pop
or
movsb
mov
loop
int
xor
std
repz
shlb
and
mov
cmc
std
push
loope
dec
leave
ret
ret
sbb
pop
cmp
inc
inc
mov
ret
add
mov
jne
jmp
jnp
int
arpl
xor
and
dec
test
sbb
mov
lods
pop
mov
cltd
mov
inc
cmp
xor
push
sub
in
stos
mov
dec
out
inc
jne
mov
aas
or
fdivrs
mov
mov
push
xor
mov
mov
mov
and
sub
inc
rorl
mov
sub
xchg
push
push
negb
subl
dec
aas
lret
imul
int
inc
mov
mov
loope
xor
or
int
cmc
jns
mov
aad
stc
sbb
pop
mov
loope
xor
out
mov
and
pop
roll
push
daa
outsb
dec
and
pop
test
lods
dec
xchg
and
dec
out
mov
lea
mov
push
xchg
daa
repnz
cwtl
out
add
les
cmp
in
jno
lret
mov
pop
pop
jge
js
les
mov
sub
dec
ficoml
xchg
cltd
pop
sbb
sar
pop
shlb
ljmp
enter
jecxz
fldcw
and
dec
inc
lock
aam
arpl
negl
cmp
jne
out
std
xchg
or
jecxz
xor
mov
imul
xchg
sti
pop
aam
ljmp
ja
daa
and
pop
push
sub
sbb
pushf
xchg
hlt
adc
mov
mov
cld
mov
sub
gs
pushf
inc
ja
cltd
and
mov
mov
inc
or
jmp
mov
into
subl
hlt
mov
int
pushf
pop
test
int3
les
add
sahf
sub
stc
cmp
pushf
pop
lret
repz
pop
and
call
jecxz
jo
mov
mov
loopne
push
insb
jp
incb
add
out
cmpsb
pushf
xchg
add
fidivl
pop
sub
ja
popf
mov
pop
cmpsl
mov
test
cmpsb
cmp
faddl
leave
call
sub
jmp
insl
xchg
push
andps
mov
vpaddw
push
ss
test
movsb
push
cli
jge
lahf
push
mov
mov
jo
pop
inc
add
cmp
ret
lcall
xchg
xchg
je
std
cli
movl
in
sub
in
imul
mov
lret
and
pop
shl
pop
call
pop
leave
inc
pop
or
popf
sub
cmp
repnz
dec
xchg
push
aad
popf
mov
stos
pop
and
push
cmp
js
mov
scas
loopne
cld
mov
jmp
sub
ret
inc
sbb
sub
xor
fiadds
aam
loop
mov
xchg
sti
jo
aad
inc
jbe
inc
pop
cs
xchg
outsb
data16
nop
movl
stos
add
xor
insb
cmp
pop
push
mov
mov
sbb
jno
sub
jnp
sbb
inc
adc
out
jns
repnz
cmc
hlt
and
dec
mov
in
cld
sub
rorl
push
pop
in
jae
or
scas
add
sub
mov
or
jae
push
sbb
or
cmp
dec
hlt
dec
mov
sub
fmull
clc
mov
sbb
xor
movsl
xchg
pop
push
and
ja
test
mov
push
rclb
xchg
jg
sbb
idiv
push
mov
xlat
cwtl
lea
decb
xor
dec
adc
inc
xor
js
push
mov
xchg
fwait
add
inc
sbb
and
fistpl
jle
pop
xchg
or
into
imul
pop
lea
pop
jmp
sbb
push
in
jge
mov
push
sub
lcall
sbb
xchg
cmp
rorl
adc
movsb
decl
enter
shlb
pop
mov
test
push
jb
jns
mov
sbb
pop
outsb
fildl
scas
les
push
cli
cmp
dec
je
dec
shlb
or
lret
mov
xchg
xor
int
lock
dec
mov
mov
push
add
jmp
icebp
adc
inc
mov
movsb
aam
jns
xchg
add
dec
fstps
cmp
iret
cmpsl
jns
bnd
fdivl
cli
dec
cmp
cmp
cmpsl
push
lds
dec
and
in
loop
les
cmc
or
movsl
in
or
xchg
cmp
push
adc
jge
pop
loopne
mov
mov
jecxz
xchg
xor
add
mov
push
popf
divb
xchg
stc
xor
daa
pusha
stos
xchg
jno
dec
imul
sbb
fwait
mov
insb
decl
mov
pop
jge
repnz
xchg
xchg
mov
add
fs
les
inc
js
sti
aaa
jg
push
inc
xor
mov
or
dec
jb
xchg
ljmp
mov
rolb
cwtl
ds
aas
jge
es
xchg
jbe
popa
mov
sbb
sbb
jge
fldcw
ret
fisttps
fwait
mov
jge,pn
push
dec
movb
imul
enter
pop
dec
enter
divb
shl
sub
xor
fnstsw
mov
js
sbb
fimuls
das
mov
xor
je
mov
dec
and
mov
cwtl
nop
mov
lock
or
xor
adc
movsb
popa
stos
inc
movsl
dec
aam
ds
or
lods
rolb
pushf
repz
mov
ror
or
insl
ljmp
lcall
add
adc
jl
daa
loopne
fdivrs
adc
addr16
add
mov
aaa
stc
add
ds
mov
dec
mov
mov
bswap
rclb
mov
mov
int
mov
pusha
lods
mov
cli
fsts
xor
push
pop
sub
pop
mov
push
sub
pop
imul
test
insb
cmp
rcl
cs
sub
jmp
mov
adc
cld
adc
orb
lea
mov
mov
ficomps
sti
dec
scas
imul
cltd
insl
mov
aas
test
lahf
pop
es
cld
inc
jno
sbb
or
movsb
movsl
bound
xor
out
dec
out
int3
or
xor
xor
and
movsb
add
stc
mov
enter
addr16
test
lock
sub
push
pop
fists
roll
sub
popa
scas
dec
fimull
loop
int
stc
dec
popf
jne
add
movsl
out
pop
lock
das
mov
fnstsw
push
xchg
sbb
xchg
imulb
sbb
fdivl
push
rolb
pop
addr16
fstpt
mov
call
adc
and
sti
lds
dec
cli
cmp
inc
add
cmpsb
arpl
pop
mov
dec
xchg
xor
pop
adcb
das
cmp
fwait
pop
pop
ja
sbb
sti
pop
ret
andb
mov
stos
aad
adc
cmp
stos
in
xchg
mov
aam
push
iret
mov
sahf
xor
cmp
sub
or
jo
push
loope
pop
cwtl
mov
mov
lods
and
rclb
add
sbb
lods
scas
cwtl
jg
mulb
cld
ret
inc
pushl
lea
pmulhw
fwait
adc
add
mov
xlat
mov
scas
and
mov
jne
subl
mov
icebp
xchg
pop
mov
mov
cmpsb
daa
lds
xchg
daa
mov
aaa
mov
lret
insl
ss
mov
xchg
outsl
stos
push
lods
outsl
push
fs
idivb
addr16
jno
mov
mov
xchg
lea
xor
or
scas
test
sbb
lock
jo
mov
lahf
xor
lret
fld
fwait
out
loopne
mov
cmp
out
nop
arpl
cmpb
outsb
xchg
pop
negb
sub
mov
mov
push
cmpsl
fisubrs
and
aas
dec
mov
lock
dec
out
jmp
rcll
mov
bound
ja
imul
icebp
aas
or
mov
adc
fwait
adc
pop
push
adc
inc
ja
sub
mov
xchg
sub
imul
dec
arpl
jo
les
adc
mov
sub
pop
mov
xchg
into
fwait
mov
dec
dec
pop
in
rcll
push
mov
jle
xchg
dec
andl
aas
mov
cmp
ror
adc
hlt
or
movsl
rep
fidivrs
fldl
push
shl
or
add
iret
or
mov
scas
mov
rcrl
xchg
cmp
xchg
cwtl
ljmp
popa
daa
inc
rorb
les
cmp
ret
cs
and
rcll
pop
das
inc
jae
sbb
push
aam
sub
mov
sub
sbb
inc
xchg
fldl
mov
out
std
outsb
jns
fidivrs
aaa
lcall
das
mov
sbb
mov
mov
push
fdivl
pop
jmp
cmp
pop
std
sub
jp
lret
mov
daa
lcall
out
add
ret
cmp
or
push
imul
das
adc
daa
imul
ja
push
sub
inc
stc
and
arpl
cmpsb
imul
jne
call
xor
jo
and
push
and
sahf
inc
stos
cld
hlt
movsl
hlt
pop
push
dec
add
fldenv
jmp
jp
mov
mov
rolb
and
xor
cmp
hlt
mov
cmc
and
pop
mov
aaa
cmc
dec
dec
fcomps
and
stos
in
lahf
push
daa
adcb
adc
and
dec
inc
mov
mov
in
sbb
test
mov
aas
push
movsl
mov
je
xor
push
testb
ret
mov
fincstp
imul
dec
pop
cmpsl
mov
xor
mov
cs
js
mov
fcmovnbe
sub
roll
add
adc
pusha
mov
sub
fwait
mov
cmpsb
nopl
lds
xchg
ret
ja
movhlps
js
inc
inc
dec
mov
xchg
add
lret
rdmsr
lret
lds
into
es
fiaddl
jo
imul
xor
sbb
mov
cmpsb
or
addr16
dec
aam
add
in
xchg
std
pop
neg
movsl
xor
lods
mov
mov
iret
adc
add
cli
repnz
int
test
dec
push
fcoms
js
mov
adc
or
out
jp
ficoml
jle
jno
xchg
repnz
push
and
mov
pop
pop
inc
xor
add
dec
dec
std
sbbb
mov
jae
xor
adc
push
jbe
mov
pop
cli
scas
and
sub
adc
adc
mov
test
pop
nop
xor
cmp
cmp
ret
and
push
push
sub
inc
adc
fisttpl
or
or
add
pop
inc
xchg
and
nop
fcomi
subl
cld
sbb
cwtl
push
cmp
pop
mov
xor
dec
lods
enter
sbb
pop
aaa
inc
mov
int
je
jecxz
sti
mov
std
aam
xchg
in
outsb
out
xor
push
jae
add
mov
pop
mov
loop
sti
inc
push
add
xchg
xor
mov
push
xchg
dec
cltd
and
arpl
inc
popf
aam
outsl
push
shll
pop
fcomi
out
mov
xor
jecxz
push
jae
mov
fiadds
adc
std
pop
addr16
add
addr16
cs
mov
addb
ljmp
pop
popf
push
xchg
mov
cmp
stos
movsb
mov
xchg
sbb
mov
push
repnz
fdivr
add
subl
lock
push
out
push
ficoml
dec
jae
pop
push
int
into
dec
cmp
mov
in
push
sbbb
fstpt
rorb
cwtl
outsb
cmp
jmp
gs
negb
test
idivl
push
divb
iret
leave
add
xchg
mov
dec
push
dec
add
rolb
sbb
mov
in
insl
pop
push
mov
iret
xchg
lds
cmp
xor
test
hlt
sub
shll
in
es
out
ror
or
or
sub
dec
cltd
jmp
mov
int
pop
sbb
xor
out
or
icebp
ret
pop
ljmp
dec
sub
jg
xchg
mov
xchg
scas
addr16
movsl
sbb
iret
add
ss
or
cmp
push
cmp
cmp
xor
inc
dec
dec
mov
xchg
ljmp
in
mov
mov
xor
add
jo
insl
sti
stc
jo
loop
jno
lahf
fldcw
popa
cmpsb
jecxz
loope
icebp
sub
push
fmuls
rcr
lock
divb
mov
adc
aad
xor
outsb
test
loope
nop
bound
jmp
mov
push
jle
cmp
jmp
das
fcompl
or
cmp
pop
xor
andl
xchg
adc
cmpsl
mov
xchg
icebp
scas
sahf
pop
mov
shrb
test
dec
in
call
xchg
pop
xor
push
gs
adc
pop
shlb
not
int
lret
stos
push
sbbl
push
shll
arpl
jl
cld
push
in
loope
sbb
std
mov
mov
jns
mov
adc
xor
iret
movsl
xchg
cmpl
cmp
cvtps2pi
mov
dec
jge
nop
push
and
dec
jns
mov
xor
xor
mov
adc
add
cmpb
jb
mov
fisubs
js
mov
cli
mov
hlt
mov
icebp
jns
fisttpl
mov
pushf
nop
bound
movsb
test
push
mov
jl
jle
pop
or
lcall
adc
sub
cmp
xchg
adc
xor
imul
iret
jno
in
push
sbb
xchg
shrl
aas
and
bound
xor
call
outsl
push
and
mov
cwtl
lods
inc
test
fadd
enter
mov
js
fmuls
movb
sbb
xor
push
xor
xchg
and
dec
jne
int
push
add
into
scas
xor
jo
dec
cmp
test
addb
xorl
jmp
test
outsb
adcb
clc
notl
jge
int
movsl
xor
cmpsb
mov
icebp
aas
add
mov
sub
imul
mov
xor
mov
das
push
insl
es
adc
das
pop
nop
cmpsl
push
sbb
pop
mov
push
loope
cltd
loopne
cmp
lcall
jle
ret
movzbl
xchg
aas
push
pop
dec
clc
stc
int3
shl
in
cmc
pop
testb
sbb
rep
cmp
or
adc
test
iret
cld
xchg
adc
xchg
mov
aam
pop
jmp
push
and
jmp
xor
mov
in
sub
call
lock
outsb
bound
and
sub
mov
ret
mov
mov
xchg
vpcomw
add
fsts
inc
enter
test
insl
pop
cmp
sbb
sbb
lods
dec
inc
stos
lea
ret
subb
rcl
xchg
mov
rorb
aam
outsb
in
cmp
xor
stc
inc
imull
je
xchg
aas
push
sbb
enter
mov
push
mov
cmp
jle
sbb
mov
pop
mov
icebp
push
loope
jae
pop
arpl
in
ret
rorb
imul
lcall
mov
cmpsb
repnz
cmpsl
cmpl
jbe
icebp
and
jno
xchg
xor
cld
sbb
lea
call
ds
xchg
sub
int
lret
rcrb
rcrb
test
int
mov
mov
lock
pop
dec
sub
daa
lcall
pushf
inc
mov
repz
inc
aaa
cmpsl
mov
xor
rcr
sbb
dec
push
adc
sub
jbe
adc
sbb
scas
fcomi
adc
inc
testb
push
xor
push
call
push
xlat
cmp
push
fidivl
sbb
mov
insl
repz
cld
in
fwait
or
sahf
pop
negb
mov
mov
lock
mov
int
pop
popa
adc
loope
cmp
jecxz
push
js
cld
push
mov
push
sbb
test
cmp
xchg
in
pop
out
cmpsl
mov
loope
out
dec
in
inc
cmc
sbb
adc
fldt
sub
xor
fidivs
adc
sbb
nop
xchg
push
ret
dec
fidivl
push
into
es
js
jmp
sbb
in
pop
push
and
and
sub
push
cmp
lret
stc
out
jmp
dec
and
adc
imul
fldl
inc
fiadds
pop
je
imul
mov
in
mull
popf
out
xchg
rol
mov
mov
push
rol
and
push
lods
mov
dec
inc
aaa
cmove
push
jnp
out
sahf
push
sub
xchg
test
lods
repnz
enter
sub
xchg
add
fbstp
int
mov
jne
call
fiaddl
xchg
xchg
and
inc
ret
jno
adc
int
sub
cmp
mov
sti
cmpsl
or
xchg
cli
jmp
push
jmp
push
dec
sub
test
divb
adc
gs
imul
sahf
lds
xlat
in
dec
add
adc
shll
cmpsb
lods
inc
cmp
test
cld
cs
jnp
add
icebp
jno
divb
and
jp
mov
dec
shlb
mov
sahf
out
mov
outsb
xchg
out
pusha
mov
jb
push
pop
pop
out
sub
mov
fisubrs
dec
fildll
add
repnz
push
bnd
mov
fidivl
jge
addl
mov
jp
xchg
and
ljmp
mov
pop
ret
scas
jle
into
mov
pop
addb
mov
jno
outsb
xor
sbb
push
pop
and
scas
clc
xchg
lock
ljmp
xor
pushf
mov
dec
sbb
jmp
mov
adc
adc
mov
or
fnstcw
loopne
xor
mov
push
xor
pop
test
xchg
mov
inc
cltd
dec
pop
xchg
jb
mov
xorb
pop
jnp
addb
dec
pop
xor
shrl
jg
inc
aas
loopne
adc
leave
mov
cmp
pop
std
add
call
sbb
sbb
and
cmpsb
xor
jne
repz
mov
and
insl
outsl
mov
jbe
lods
or
add
pop
adc
psubsw
dec
mov
call
inc
lahf
xlat
loope
cltd
dec
cmp
mov
jmp
add
sbb
lret
lret
xchg
xor
int3
sarl
mov
outsb
movsb
mov
jns
in
shr
sbbl
sub
cmp
test
sub
jp
mov
or
je
mov
test
std
aam
fstpt
mov
xchg
mov
aad
push
cmpsl
sub
in
push
push
cmp
dec
pop
cmp
iret
or
push
daa
add
into
repz
fisttpl
lcall
inc
mov
or
add
cld
xchg
das
pusha
inc
mov
aaa
cld
adc
hlt
or
lods
pop
sbbl
mov
jge
fcmovu
repnz
in
add
cltd
das
xchg
icebp
stos
into
jns
add
sub
mov
adc
pop
or
out
xchg
xchg
add
arpl
xlat
sbb
js
jno
inc
out
imul
xchg
ret
and
iret
test
data16
insl
cmpsb
mov
in
movl
xor
movsb
add
out
je
mov
fwait
stc
mov
jno
dec
mov
imul
fsubl
push
or
mov
pop
pop
cli
sub
rorl
dec
dec
jne
shll
mov
aaa
inc
mov
cmp
mov
sbb
xor
je
repz
enter
or
rorl
int
mov
sbb
sub
mov
loop
sub
sub
iret
inc
aam
rorb
jns
jmp
sbb
xor
int
call
or
dec
movups
jns
out
cltd
sbb
mov
dec
sub
jg
adc
push
nop
or
xor
fdivs
ljmp
stc
push
dec
push
clc
sbb
xchg
mov
mov
pop
jle
jmp
pop
into
pop
mov
stos
push
xor
stc
mov
add
icebp
out
inc
dec
push
mov
clc
dec
testl
outsb
lods
imul
cmp
add
push
inc
pushf
lods
mov
jae
adcb
mov
dec
repnz
int
adc
or
xchg
dec
scas
icebp
cmc
or
mov
imul
ret
mov
mov
insb
cmp
out
sub
mov
sbb
clc
and
pminub
in
pushf
sbb
xchg
movsl
lret
or
cmp
mov
out
xchg
add
dec
mov
test
mov
push
mov
scas
adcb
mov
sub
pop
imul
clc
cmp
sub
cli
movsl
inc
and
and
mov
loopne
scas
lock
push
inc
mov
sti
add
mov
mov
xorl
mov
call
les
dec
inc
push
lds
ds
pop
mov
mov
insb
cwtl
nop
jg
xor
lcall
sbb
cmc
mov
jg
pushf
dec
shlb
sub
or
ja
pop
xchg
mov
clc
mov
add
lret
cmp
xor
gs
cmp
les
mov
rcll
gs
xor
mov
mov
lea
in
adc
ret
jle
jmp
mov
bswap
xchg
xor
into
fsubs
clc
inc
in
cmc
push
shl
insl
push
sub
inc
rclb
or
push
int
xor
imul
mov
jb
mov
jb
mov
add
mov
daa
insb
mov
add
xlat
mov
fcomps
fcmovnb
mull
push
out
push
inc
ficomps
mov
je
repz
mov
xor
push
pop
addb
and
filds
push
mov
sti
ja
shll
sahf
out
add
dec
out
cmc
push
push
clc
gs
add
push
ret
cld
movsb
or
mov
sti
push
ljmp
lahf
mov
mov
mov
hlt
sti
ljmp
and
icebp
in
js
jp
sar
cmp
clflush
int
add
lea
ja
lds
daa
mov
adcl
jle
jo
add
push
movsb
aam
test
leave
xchg
popa
not
mov
fistpl
ret
cmp
shll
pop
pop
cmp
das
or
pop
imul
ds
aas
add
xor
popf
mov
and
mov
out
mov
shl
xor
dec
mov
sbb
andb
xchg
repz
in
push
paddsw
pop
clc
scas
mov
xorl
divl
add
pushf
fucomp
xchg
and
mov
stos
jnp
jnp
outsb
into
nop
or
roll
push
mov
jb
shrd
enter
add
add
sbb
test
adcl
adc
mov
notb
fwait
aaa
loop
out
lret
scas
lahf
jp
cmpl
dec
pop
or
lahf
add
push
inc
insl
lds
inc
into
inc
push
mov
shll
repz
cmp
push
cmc
add
ret
imul
movsb
lret
sub
mov
xchg
int3
pop
fcmovu
hlt
out
popa
mov
push
loopne
xor
rolb
cmp
jnp
mov
jp
data16
cs
imul
int
mov
es
adc
addr16
add
rolb
dec
xor
in
shr
shrl
cmp
dec
jne
cwtl
int3
andb
mov
stc
in
sub
ljmp
sub
std
push
ret
dec
mov
cmc
adc
idivl
fnstcw
sub
pop
mov
mov
lock
pop
loop
or
xor
in
mov
ret
mov
push
in
pop
inc
lret
pop
and
and
xlat
cmp
mov
fstp
pop
jge
or
sub
sub
lea
mov
jo
fnstcw
push
or
test
adc
push
pop
sub
pop
jmp
pop
mov
mov
and
push
push
test
pop
daa
cmp
push
pushl
push
sub
xchg
dec
xchg
fcomp
or
xor
mov
xor
aad
inc
mov
sahf
in
and
jns
or
scas
jae
cmp
movsl
cmpsl
fdivrl
lds
call
adc
stos
jmp
push
mov
inc
loop
and
lahf
inc
mov
cmpsb
mov
xor
push
loop
push
add
mov
in
pop
mov
cmp
jg
lods
sbb
scas
lret
cmp
rcrl
xchg
dec
push
test
cmp
xor
mov
xor
loop
jle
shrd
xchg
jnp
out
jge
xchg
mov
jg
and
cmp
cmp
adc
mov
cmpsl
jbe
fld
fsubl
and
mov
cmp
sub
cs
jecxz
loopne
test
mov
int
popa
sub
jne
mov
jle
cltd
shll
clc
cmp
out
mov
pop
lret
push
mov
call
mov
lods
dec
lods
xor
push
dec
sub
nop
loop
dec
mov
test
jns
sbb
dec
btrl
sbb
shrb
or
iret
insl
aad
lcall
pminub
in
xlat
push
jo
pop
cmpb
lea
mov
lods
popa
push
test
sahf
scas
xchg
addb
pop
icebp
dec
push
imul
jno
mov
test
lock
cmp
jle
add
or
dec
das
lods
aas
notb
ret
psubusw
xchg
jae
loop
dec
scas
push
mov
gs
jno
sbb
inc
cmp
cmp
inc
test
sub
rorb
sahf
cmpb
xchg
sub
and
xchg
pop
sti
fistl
pop
xchg
shr
sbb
incb
test
sbb
insb
inc
jns
lods
mov
loopne
sbb
sbb
fwait
testb
enter
cmpl
pop
mov
lods
and
mov
int3
pop
call
loopne
outsl
cmp
loope
fidivrl
xor
std
pop
push
clc
sub
and
dec
test
mov
and
subb
jae
sub
add
dec
stc
add
loopne
adc
icebp
repz
addr16
sbb
icebp
cmp
and
push
sbb
bound
push
clc
ret
pop
pusha
inc
outsl
add
push
dec
and
fs
arpl
cmpsl
jmp
dec
sub
mov
lock
inc
ja
pop
int3
sar
into
cmp
pushf
xchg
sub
and
pop
das
jnp
jbe
push
in
mov
inc
out
xor
and
mov
out
popa
int3
popf
xor
imul
adc
ljmp
pop
inc
sbb
cmp
stos
div
stc
sub
push
fidivrl
loop
lcall
es
aam
popf
decl
pop
in
sub
mov
stos
add
add
cmpl
sub
loopne
negl
inc
jmp
inc
sbb
jne
push
mov
cmp
mov
ret
dec
sbb
fistl
mov
pop
add
add
movsl
sar
decl
sahf
xchg
sbb
ss
fs
and
rcl
jb
fisttpl
cmpb
out
lahf
push
push
mov
inc
test
mov
pop
mov
aam
inc
les
sub
inc
adc
push
add
mov
ja
mov
jno
in
mov
aaa
lcall
inc
dec
scas
pop
unpckhps
cmp
pop
cltd
xchg
xor
faddp
inc
push
sub
sub
push
aam
xchg
xchg
xchg
mov
and
outsl
push
mov
arpl
daa
jg
xor
jo
cmp
rcrl
dec
shll
xchg
fsubr
xchg
out
in
adc
leave
cs
dec
push
inc
pusha
push
popl
data16
shr
mov
dec
jecxz
push
std
shlb
jmp
insl
and
sahf
jp
data16
insl
aaa
cmpb
mov
icebp
jno
repz
out
cmp
sahf
adc
sahf
mov
loopne
cmp
pop
push
sub
lret
dec
sbb
jmp
inc
jbe
xchg
rcrb
jecxz
sahf
pusha
pop
cmpl
lret
add
fisttps
pop
in
sbb
add
das
add
cmc
scas
lahf
mov
pop
fistps
sub
jbe
cwtl
pop
shlb
mov
cmc
scas
push
add
leave
aam
xchg
dec
lea
push
rcr
mull
sbb
and
pop
loope
popa
inc
push
stc
add
push
arpl
rol
pop
in
dec
dec
push
bndstx
dec
xor
dec
imul
orl
cmp
push
and
rclb
ret
cmpl
cmp
adc
int3
mov
pop
push
jns
repz
push
into
loopne
nop
mov
and
xchg
sar
ret
jb
out
and
adc
fxch
mov
xchg
or
out
aad
sbb
mov
daa
addr16
stos
inc
rcr
scas
lods
mov
and
push
out
xchg
outsb
in
sub
mov
ljmp
xchg
pusha
inc
mov
sub
jp
and
bound
aaa
jns
shr
xor
sub
ds
pop
aad
aaa
cmpl
in
in
and
sbb
stos
cmp
rclb
inc
mov
jne
and
test
pop
cwtl
in
xor
stc
sub
add
roll
mov
or
loop
mov
mov
pushf
jecxz
jo
lret
mov
aad
xor
xchg
cmp
test
add
nop
adc
sbb
int
mov
repnz
test
pop
sub
jns
imul
mov
inc
mov
dec
into
jmp
push
test
lret
mov
in
mov
mov
add
xor
push
mov
loope
push
xchg
repnz
into
push
sub
lods
xchg
jecxz
ss
inc
xchg
icebp
in
add
mov
jmp
out
out
js
pop
jmp
push
repnz
mov
fwait
cmpsb
into
daa
and
xchg
sbb
gs
mov
dec
mov
sbb
pop
jnp
sarl
stc
sub
lret
cltd
push
out
xlat
xor
stc
push
sub
mov
jbe
mov
cld
xchg
hlt
adc
loope
inc
jg
loopne
sbb
mov
cmp
add
loop
adcl
cmpsb
jmp
mov
sub
lds
loopne
push
sbb
add
and
gs
or
ret
xor
js
in
jb
pop
not
sti
mov
ja
xchg
mov
cld
rolb
or
test
rolb
inc
cmpsl
mov
jp
jle
loopne
add
lods
xchg
push
iret
ret
push
outsl
loopne
outsl
jl
arpl
in
jmp
push
imul
xchg
mov
lock
xor
sub
out
mov
mov
incb
gs
pop
xchg
jl
xchg
into
xchg
jle
mov
jb
or
sahf
lods
loope
jnp
movsl
mov
dec
loope
shlb
in
aaa
pushw
pop
fnsave
imul
stos
repz
pop
jecxz
loopne
sbb
mov
loop
fcmovnbe
aad
in
call
dec
sarb
das
pop
es
inc
sub
inc
dec
adc
test
inc
inc
xchg
out
push
lcall
pop
and
jbe
imul
jno
dec
in
mov
fcomps
and
sbb
add
stos
add
lret
idiv
popa
insb
push
in
pop
jae
mov
lods
add
leave
adc
sarl
outsl
mov
int
imul
or
lods
and
in
movsb
daa
int3
mov
std
mov
aam
or
xor
stos
dec
mov
outsb
mov
inc
push
mov
push
push
sbb
cwtl
dec
mov
mov
mov
repz
mov
inc
movsb
ror
dec
mov
and
in
add
sti
int
mov
add
jmp
and
mov
push
aad
sbb
ror
or
sbb
movl
dec
sbb
pop
scas
xchg
sbb
cmpsl
aad
fcomps
mov
xchg
inc
dec
xor
mov
mov
repnz
hlt
sub
jo
xor
mov
imul
lret
sbb
out
xchg
cmp
jl
lret
stos
pop
xor
or
or
dec
or
imul
sti
cmc
sbb
or
testl
mov
push
popa
in
fsubrl
xchg
jg
lcall
mov
clc
xchg
negb
xor
andb
dec
gs
cmp
rclb
out
pushf
push
lahf
cmc
dec
xor
sbbb
mov
and
adc
in
mov
add
push
xor
std
cld
or
scas
adc
addb
sbbb
add
rcr
ficomps
mov
sub
shrb
sar
std
pop
jbe
pop
test
cwtl
mov
inc
sub
sti
pop
pop
or
jle
aam
or
pop
push
sbb
mov
push
into
xchg
adc
add
push
pusha
outsl
insb
inc
push
push
adc
mov
xor
stc
ss
cld
inc
mov
test
divb
add
and
push
jmp
sahf
add
pusha
push
pop
gs
in
in
cmpsl
push
hlt
sti
out
les
fistpl
pushf
ret
xor
enter
inc
cmpsb
xor
jae
push
add
dec
into
sub
aad
out
daa
ss
into
lds
popa
imul
enter
test
out
stc
pusha
testl
lods
sub
dec
cmpxchg
frndint
inc
cmp
ret
mov
js
add
add
scas
fs
fisttps
arpl
mov
sub
add
outsl
ljmp
sub
jmp
jmp
movb
into
pop
lods
xchg
dec
add
mov
push
mov
fnstcw
xlat
mov
fisttpll
pop
sbb
add
adc
pop
loope
sti
xchg
adc
test
mov
xor
mov
sti
mov
mov
mov
pop
push
les
je
ficompl
mov
cmp
cltd
inc
in
fldcw
icebp
mov
out
lock
cmpsl
or
test
int3
adc
sub
xor
not
es
mov
xchg
jmp
push
into
pop
cli
sub
pushf
mov
inc
mov
aad
mov
mov
and
mov
jle
cmp
ret
jl
jno
add
int
inc
push
cmp
iret
daa
aas
ss
mov
mov
movsl
sbb
and
movsl
addl
dec
xor
inc
dec
dec
mov
aas
ret
insl
dec
outsl
outsb
cli
mov
mov
inc
jnp
mov
dec
xchg
nop
hlt
inc
les
cmp
mov
mov
jmp
jl
xorl
sbb
sbb
test
ret
mov
push
hlt
cltd
jle
cmpsl
movsb
cmc
sub
icebp
cmp
stos
push
pop
in
pop
xlat
inc
aas
aaa
ret
or
loop
into
imul
cli
fnsave
push
xor
cmp
call
dec
stos
test
pop
xchg
test
jl
mov
cltd
scas
jb
or
stos
push
cmp
sti
push
mov
insb
aad
xor
jecxz
lock
pop
push
mov
adcw
cwtl
jne
stos
hlt
push
mov
pop
filds
adc
test
xchg
mov
xor
movsw
fisubrs
stc
xor
movsl
add
je
fistpl
xchg
andb
iret
xchg
xor
push
popf
lods
adc
out
jno
out
ss
mov
cmp
arpl
cwtl
push
cli
dec
sbb
xchg
subl
inc
or
xorb
push
je
mov
pop
imul
bswap
mov
cld
cmp
outsb
dec
pop
sub
andl
aam
sbbb
jbe
fsub
mov
aas
loopne
decl
test
inc
cmp
or
hlt
pushf
jl
pop
push
aaa
mov
mov
popa
jo
or
push
js
addr16
and
inc
sub
test
lahf
loopne
add
stc
in
cmc
cmp
pop
test
push
iret
or
push
inc
aaa
lods
add
sub
stos
enter
stos
sbb
mov
push
in
dec
mov
mov
shll
adc
aaa
mov
or
pop
cmpsl
divl
imul
movsb
push
rol
push
rorb
cmp
or
pop
jp
push
icebp
mov
inc
add
loope
cltd
add
adc
repz
aam
lock
sbb
das
mov
xchg
xor
mov
xor
fisttps
mov
adcl
sub
sub
outsb
dec
enter
shlb
mov
mov
pop
test
hlt
xor
adc
in
in
scas
leave
dec
xchg
sbb
xor
lcall
icebp
int3
daa
pop
inc
cmp
adc
or
lea
fnstenv
outsb
iret
lret
and
sub
sbb
mov
aad
out
roll
or
or
loope
adc
in
aad
add
jo
bound
es
test
mov
jne
outsb
mov
lds
hlt
mov
push
loop
add
mov
jnp
push
js
xor
lds
and
adc
data16
enter
ret
rcrb
imul
adc
xor
mov
sbb
jnp
test
xchg
pop
jmp
push
out
inc
out
adc
imul
test
cmpsl
andl
stos
int
dec
xchg
cmp
mov
ss
into
jbe
popa
cmp
add
sbb
add
mov
cmp
cmp
sbb
jle
ret
loopne
pop
dec
mov
out
jnp
loopne
and
xchg
aaa
shlb
xorl
cld
fsubr
mov
dec
data16
movsb
repz
mov
outsb
insl
mov
xchg
stos
jb
or
add
mov
lds
fisttps
or
hlt
mov
or
jbe
and
mov
imull
ret
jae
mov
jns
outsl
popa
push
je
mov
lds
sub
mov
add
and
xchg
insb
scas
call
add
push
lret
ja
insb
fisubrl
adc
rol
inc
and
adc
fisubrl
lret
push
adc
aam
into
dec
enter
lea
dec
lret
jno
and
push
inc
nop
ds
xor
loopne
nop
inc
jge
fcoms
in
fistpll
ja
and
cmp
adc
movsl
xchg
fneni(8087
stc
stos
mov
out
cli
inc
push
mov
repnz
mov
mov
adc
je
iret
imul
scas
mov
jno
sti
pop
xchg
push
fdivs
inc
pop
mov
lcall
mov
shrb
jae
in
divl
enter
sub
cmp
xlat
lret
ret
jnp
out
pop
popa
je
imul
jae
aam
pop
stc
pusha
and
add
cmpsl
shrd
mov
aas
adc
adc
jl
je
in
out
push
pop
aam
jge
push
outsl
ljmp
sbb
cmpsl
sub
mov
jmp
insb
inc
pop
push
into
imul
out
popf
lods
inc
dec
jbe
dec
mov
sahf
mov
mov
in
mov
adc
pop
inc
das
fdivp
xchg
sbb
mov
clc
lret
cs
jnp
aad
mov
mov
jecxz
iret
mov
out
nop/reserved
mov
push
stos
fs
sub
lea
add
add
fs
fbld
add
fnstcw
dec
mov
es
sub
adc
ficomps
dec
enter
rcrb
lods
add
int3
pop
and
std
mov
inc
test
adc
aas
cmpb
pop
ret
ret
arpl
adc
into
mov
mov
fs
cmp
test
sub
fidivs
enter
cmp
xor
push
push
fdiv
push
adc
loopne
insb
sbb
xchg
sub
cmp
cmc
pop
fwait
hlt
sub
loopne
jp
xlat
push
cmp
or
mov
push
pop
fsubrs
hlt
xor
xchg
xchg
cmp
les
out
jo
pushl
dec
mov
xchg
in
sbb
jp
dec
sub
jns
movsb
fcompl
mov
mov
aaa
daa
add
cmp
lahf
jno
aad
fbld
insb
mov
ja
dec
nop
push
pop
into
mov
add
insl
in
pusha
jb
fsubr
adc
adc
mov
incl
jle
lods
ds
aam
xchg
idiv
in
push
adc
leave
lret
out
push
jl
xchg
xchg
mov
adc
loopne
jle
cmp
sub
add
ret
int
xor
test
fnstenv
std
shlb
cwtl
lds
inc
mov
lret
pop
adcl
xor
jmp
jmp
inc
push
aaa
pop
xor
mov
int
jo
jbe
pop
adc
and
ficompl
pop
sbb
cld
mulb
mov
cmpsb
ds
push
xor
inc
inc
jae
mov
push
push
stos
sbb
pusha
inc
cmc
jle
and
out
pop
inc
push
pop
or
lock
int3
and
add
cmp
xchg
pusha
clc
enter
js
nop
fsubr
iret
dec
cmp
dec
insl
xchg
xchg
scas
adc
push
in
and
popf
jae
or
fisttpll
and
mov
jo
pop
icebp
bound
dec
in
test
frstor
cltd
cld
sub
sbb
in
mov
shlb
popf
push
scas
jmp
scas
scas
xor
mov
xchg
cmp
scas
xor
add
ljmp
jecxz
test
arpl
or
pop
cmpsl
leave
enter
ret
push
inc
lods
or
fisubl
mov
xchg
mov
lahf
add
sub
fdivrl
mov
inc
jmp
pusha
lret
roll
pop
pop
je
and
call
sub
cmpsl
incl
and
xchg
xor
push
mov
sbb
add
push
mov
fistpl
or
mov
jg
mov
pop
push
cltd
pop
jp
sbb
sbb
imul
mov
and
fcomip
addb
subb
addr16
push
sbb
pop
xchg
pop
aas
jo
mov
incb
xor
je
lods
idiv
xorb
jae
cmpl
mov
mov
adc
push
sub
dec
mov
clc
aad
pop
cld
cmp
push
dec
sub
divl
lret
mov
pop
imul
cltd
rcl
pop
test
inc
imul
lods
dec
mov
mov
xacquire
and
test
in
xor
mov
lods
dec
mov
cmp
int3
adcl
pop
dec
jnp
xchg
or
ds
sbb
icebp
cmp
cmp
stc
addr16
push
dec
call
mov
inc
cmp
in
pusha
dec
ds
inc
push
push
sub
pop
fwait
xchg
or
jge
dec
sub
ficompl
icebp
iret
inc
popa
test
mov
jmp
outsl
sbb
cld
jns
sub
push
lret
gs
ret
test
push
lahf
dec
imul
cld
scas
rcl
loope
inc
ret
pushf
adc
mov
adc
loop
xchg
cmovnp
bound
pushf
jecxz
inc
xchg
sbb
pushl
popf
pop
mov
in
or
out
xchg
mov
push
ret
shl
push
sahf
jl
mov
mov
int
out
in
mov
lret
pop
lea
inc
cmpsb
mov
cli
xor
hlt
jae
cmp
je
rolb
in
fs
push
xchg
std
push
cmp
adc
inc
stos
jne
cmc
add
dec
pop
shll
mov
mov
outsb
mov
inc
jno
push
mov
jmp
xlat
sahf
mov
int3
addr16
push
or
popf
push
scas
mov
leave
and
fwait
int
cmp
int
adc
jns
mov
pop
mov
jmp
dec
fiaddl
lds
cmpsb
sub
in
cmp
insl
popa
or
dec
xor
cs
ds
fwait
pop
aas
sbb
fildll
xchg
xchg
pop
xabort
mov
out
nop
sbb
repz
rcll
pop
mov
outsb
out
sub
jno
fcmovnbe
xchg
jp
adc
jp
fldt
cld
je
and
aad
sbb
rcrl
or
outsl
dec
lods
inc
loop
fcmovnb
jne
dec
inc
clc
subl
test
sti
mov
std
lods
loope
push
outsb
test
bound
stos
mov
xchg
push
pop
aas
adc
out
ss
xchg
push
subl
jg
movsb
xor
and
aad
movsl
pop
das
out
cmpsb
aas
push
cs
or
ficoms
xchg
mull
xchg
aas
out
ror
pop
int
jns
mov
fcoml
or
mov
mov
mov
xchg
mov
test
push
jo
repz
push
out
icebp
shll
mov
cmc
and
lods
xchg
sub
mov
in
sub
add
subb
push
dec
movsl
adc
pop
jle
in
lcall
jbe
je
push
pop
lds
pop
pushl
or
movsl
jo
adc
add
lcall
mov
into
push
jge
lret
cmp
out
jae
stc
das
xchg
mov
test
ds
cld
or
pop
ret
xchg
loop
xchg
fistps
push
sti
xchg
sbb
adc
pop
xor
sub
lcall
mov
push
add
insb
sbb
outsb
jae
xchg
cmp
xor
aam
sub
adc
xor
fldenv
push
enter
loop
dec
fdivl
xchg
push
pop
lahf
mov
xor
dec
mov
test
andl
ds
xchg
jmp
loopne
mov
xchg
dec
lret
jns
mov
add
xor
fsubr
cltd
adc
inc
sahf
mov
sahf
lret
hlt
pop
in
inc
mov
push
dec
or
jns
fidivs
cmp
dec
cmp
xor
imul
out
jae
into
sub
mov
or
cmp
pop
data16
jne,pn
outsb
or
cld
int3
addr16
in
dec
cld
mov
xchg
sub
mov
mov
dec
cmp
mov
push
jae
xchg
or
cltd
mov
xor
fwait
hlt
adc
lods
lret
pop
xchg
movsl
jg
jl
xlat
fwait
popf
bound
xor
lock
jb
push
cs
push
mov
aam
add
fidivrl
mov
lahf
ret
and
push
and
jns
lret
ret
addr16
dec
aam
mov
or
loop
lea
push
aam
repnz
aam
jmp
pop
loop
ljmp
fcomp
push
or
inc
hlt
and
dec
xchg
test
fldt
enter
mov
mov
add
inc
leave
orb
mov
mov
mov
enter
cmp
mov
mov
shlb
cmp
sub
aas
add
fsubp
and
cltd
pusha
sbb
inc
cmp
movsl
clc
sub
add
push
sub
cmp
es
fisubrs
cmp
sbb
xor
xchg
data16
in
subl
jnp
push
cmc
pusha
sub
push
cli
sbb
mov
mov
dec
out
and
push
mov
mov
or
xchg
lock
mov
fdivrs
and
rcll
and
jne
stos
imull
es
loopne
xchg
xor
stc
dec
push
int
mov
int3
call
xchg
jl
mov
lret
lods
sbb
stos
repz
dec
mov
out
outsl
mov
add
adc
cltd
mov
mov
mov
dec
sbb
push
pop
ljmp
adc
lahf
insl
fdivl
pop
mov
imul
insb
imul
sbb
jno
pop
jo
fsts
les
jl
jns
jle
or
lods
imul
and
xor
mov
and
push
inc
mov
in
aaa
cmc
and
sbb
or
pop
dec
mov
faddl
loopne
push
cmp
xchg
pop
loope
aas
push
jmp
in
out
aaa
jg
fstpl
and
int3
add
or
cmp
cwtl
sbb
addl
cs
pushf
sub
dec
outsb
or
out
lret
pop
or
divb
out
inc
xor
jbe
xchg
inc
dec
rcl
mov
test
sahf
stos
sbb
and
lea
movsb
repz
test
dec
in
mov
andb
sbb
jne
aas
push
rcrl
fdiv
push
mov
and
jg
sbb
out
rcrl
jecxz
xchg
iret
ret
addr16
mov
jns
and
adc
jb
arpl
bnd
lahf
cmp
lahf
enter
mov
jle
sahf
ret
pop
push
inc
mov
dec
in
and
cmpsl
sbb
jge
fld
mov
out
pop
adc
leave
dec
push
add
dec
fbld
ja
xchg
das
sarl
iret
pop
int3
xlat
xchg
push
push
scas
push
sbb
mov
das
cmp
adc
push
sarb
into
jp
and
movsl
test
cmp
add
out
dec
adc
xchg
xchg
mov
add
pop
add
jecxz
sbb
push
mov
sbb
ffreep
enter
jae
fisttpll
mov
pop
cs
inc
div
decb
es
pop
mov
fwait
sbb
inc
aaa
ror
leave
xchg
mov
nop
dec
push
pushf
sbb
cmp
outsb
or
lret
pop
stos
inc
pop
test
xor
xor
js
repnz
loope
in
sub
cmp
movsb
in
and
lock
pop
addl
mov
lret
inc
imul
jl
das
test
test
fnstcw
mov
sbb
fidivrs
mov
cmp
pop
and
sbb
sub
pop
mov
sbb
popf
lods
in
cwtl
lock
mov
add
jnp
in
in
mov
stos
ds
les
inc
push
dec
xchg
fwait
cmp
loopne
mov
sbb
pushf
or
mov
mov
test
loope
rep
sbb
fstl
pop
popf
mov
cli
nop
pop
into
push
mov
rorb
test
jecxz
das
arpl
mov
xor
xorb
sub
jg
xchg
xchg
mov
adc
ja
js
shrl
aad
icebp
cmpl
je
inc
ret
test
mov
add
ret
lods
into
scas
and
jl
out
add
dec
imul
sub
lcall
pop
sbb
xor
or
push
cmp
je
jb
or
fnstcw
jbe
aam
imul
les
movsl
sub
jno
sbb
xchg
dec
cmp
loop
fildl
outsb
xor
dec
add
jg
xor
fldl
fistpll
mov
sbb
push
ds
in
and
aam
shl
ja
or
pop
push
mov
push
lods
addr16
out
sar
jmp
mov
jge
mov
insl
cli
lea
mov
fstpl
cmpl
and
in
int3
adc
pop
cmp
lahf
fwait
aad
push
jno
add
mov
repnz
sbb
mov
out
pop
outsb
pop
sub
fimuls
rcrl
mov
into
pop
lods
add
jmp
and
stc
dec
les
add
loopne
xchg
roll
test
pop
mov
cmp
jle
cmp
cmp
leave
sub
movsb
dec
rorl
sbb
test
push
add
out
adc
adc
push
bound
iret
andl
jle
pusha
in
test
js
fs
push
push
xchg
inc
in
cmp
push
ror
jl
aam
lahf
lods
std
mov
cmc
mov
xchg
and
inc
loop
mov
cld
int
mov
out
pop
dec
add
cmc
test
jns
arpl
aam
lods
or
call
xchg
mov
cwtl
icebp
aam
dec
mov
mov
mov
mov
dec
xor
fs
shlb
bound
in
sarb
sbb
aad
in
sbb
ds
jae
nop
out
enter
in
pop
jno
sbb
cs
data16
add
mov
ss
inc
adc
sbb
andl
sbb
lock
push
inc
adcl
xchg
fidivs
fidivl
inc
jle
jp
mov
in
scas
je
mov
jl
mov
insb
out
aad
xor
fcomps
fcomps
adc
inc
pop
outsb
out
dec
movsl
repnz
mov
insb
icebp
pop
jmp
and
xor
ret
add
rcll
dec
pusha
xchg
pop
mov
in
pop
add
push
push
dec
addr16
push
mov
xchg
xor
jge
cmp
ja
cmp
ljmp
xchg
and
inc
mov
aas
in
movsl
xchg
inc
stos
dec
sti
adc
cmp
aad
jbe
jg
push
in
or
push
dec
xor
in
pushf
sub
aaa
idivb
popa
and
fstpl
cmp
or
adc
and
mov
mov
dec
pusha
pop
jmp
push
pushf
xor
outsl
sbb
push
movb
jae
or
mov
mov
adc
sti
inc
jp
out
jg
or
sti
mov
cmp
jl
pop
mov
out
cmp
jmp
stos
dec
ja
and
jp
das
pop
and
cs
pop
jecxz
pushf
sub
sti
or
call
lea
jns
or
outsb
jl
shrl
sbb
pop
inc
inc
cmpsb
dec
lods
pop
fildll
rcrb
xchg
or
push
insl
xlat
jp
jle
xorl
dec
fbstp
sbb
data16
cwtl
xchg
popf
aaa
fs
jno
or
lret
jb
out
push
add
or
testb
xchg
cltd
js
scas
popf
push
inc
jmp
imul
lods
cmp
dec
pop
xor
std
jge
cmp
into
lret
jmp
cs
and
jmp
lods
fidivs
mov
sbb
cmp
out
je
adc
stos
scas
sub
loopne
gs
jae
insl
mov
sub
iret
mov
ds
push
inc
mov
fbstp
sub
hlt
hlt
dec
test
inc
in
in
sub
movsl
inc
lods
arpl
xchg
mov
and
and
jo
vpminub
aaa
dec
push
push
mov
int
and
inc
and
bound
jmp
mov
cld
adc
repnz
and
mov
adc
lock
iret
loope
cltd
aam
xchg
cmc
icebp
aas
dec
cmpsl
clc
sbb
add
lds
jns
mov
icebp
lcall
test
stos
inc
dec
rclb
inc
inc
xchg
push
rolb
popf
int
and
repnz
mov
mov
adc
test
ljmp
ror
adc
lds
sbbb
pop
hlt
es
icebp
in
gs
pusha
lock
add
test
test
cmpsl
pusha
mov
int3
clc
movsb
test
mov
jmp
sub
rcll
and
xchg
add
fildll
fdiv
pop
add
addb
push
aam
daa
push
mov
dec
add
adc
push
mov
nopl
sub
inc
or
pop
rcrb
ja
pop
sbb
insl
jg
imul
js
dec
pop
icebp
mov
dec
rcl
nop
repnz
ret
cmc
leave
sub
xchg
and
sbb
and
repnz
pop
cmp
imul
push
insb
mov
push
aad
mov
sarb
pop
sbb
inc
jg
mov
jo
aaa
mov
mov
xor
das
out
xchg
xchg
test
fwait
test
stos
cs
mov
mull
add
or
stc
rorb
iret
decb
push
add
outsl
roll
daa
pop
dec
mov
and
imul
jle
adc
cmp
rcll
xchg
arpl
pop
daa
test
ss
cmpl
mov
add
pop
jmp
movsl
pop
adc
mov
std
xchg
mov
cmp
or
xor
jb
pop
lea
jae
and
jmp
jnp
or
movsl
pusha
fcoml
sub
aas
lcall
test
int
dec
sbbl
orb
mov
stos
cmpl
jmp
jle
jae
in
dec
test
mov
push
inc
mov
mov
push
jbe
mov
clc
mov
xchg
lcall
test
in
push
lods
adc
shrb
cmpsb
out
inc
aam
inc
sahf
cld
xchg
add
pop
in
aam
push
or
fcomps
test
dec
mov
mov
neg
dec
addr16
mov
push
mov
in
ss
iret
jns
xorb
jo
clc
fisubrl
jmp
mov
mov
xchg
fdivl
fdivrs
sahf
es
lahf
js
sbb
arpl
filds
stc
dec
xchg
xchg
xor
iret
mov
cmpb
hlt
push
imul
stos
push
adc
pop
jmp
cmp
insb
push
pop
or
lret
adc
mov
lret
jge
ror
pop
jne
fwait
in
call
ja
cmpsl
adc
xchg
lret
sub
adc
in
int3
adc
xchg
adc
mov
sub
xchg
aas
mov
inc
mov
aam
bound
add
lret
sub
xchg
jp
hlt
ljmp
fstp
cltd
mov
ficomps
jle
stos
inc
cmp
inc
ja
dec
loope
or
and
imul
sbb
and
lret
push
xor
xor
inc
sub
xor
sub
push
sbb
xor
and
xor
movsb
pop
shll
ret
popa
movsb
sti
jmp
mov
cmp
fs
adc
insb
push
out
mov
add
mov
inc
or
pop
mov
ljmp
xor
inc
lret
jns
das
movsb
fdivrs
push
xor
dec
adc
pop
test
push
jp
data16
loope
leave
xchg
and
mov
sahf
xlat
mov
push
sbb
in
push
loop
dec
and
sub
out
sbb
xchg
jne
xor
xorl
pop
cmp
das
adc
xchg
cmpsl
xlat
scas
scas
ljmp
or
repz
sub
sbb
sbb
rolb
ds
out
mov
or
xchg
push
push
je
add
pusha
inc
into
jae
and
in
sbb
imul
add
sbb
sub
sub
and
mov
stc
in
and
jmp
cwtl
cmpl
pop
mov
jp
hlt
loope
in
out
jp
jecxz
mov
shl
pop
outsb
mov
jmp
push
jnp
in
loopne
jle
mov
push
in
loopne
pop
adc
jmp
lock
shl
sbb
inc
push
pop
mov
lret
sub
adc
bound
sub
jno
imul
jne
pop
lea
mov
inc
aas
jmp
jmp
dec
icebp
mov
test
shll
sahf
loop
in
mov
and
cmp
movsl
mov
pop
pop
test
jge
push
stos
shrb
cltd
sub
dec
imulb
jne
mov
out
mov
sub
cltd
fcomi
sub
cmp
and
in
div
int
fdecstp
out
adc
repz
in
cld
inc
xchg
rclb
sbb
xor
ret
loopne
call
fs
add
inc
cmp
ftst
stos
je
mov
inc
push
fadds
loop
outsl
scas
inc
ds
int
or
lds
sbb
jl
jmp
sahf
pop
mov
push
faddl
xchg
cmp
mov
mov
inc
xor
jbe
in
cmp
imul
jge
hlt
mov
std
mov
or
jp
mov
cli
and
addl
jnp
je
ffreep
fimull
jecxz
enter
cld
mov
add
mov
call
clc
aam
jg
or
pop
cmp
jno
inc
lods
mov
scas
cmp
aam
fcomp
xchg
cli
mov
icebp
int
ljmp
shl
sbb
insl
xchg
cltd
push
repz
cmc
scas
mov
lock
add
jle
mov
arpl
mov
push
inc
sub
mov
stos
insl
cmpsl
mov
aaa
mulb
loop
loop,pt
jae,pn
sbb
mov
fwait
mov
jb
mov
sbb
jle
mov
adc
mov
mov
mov
xchg
jl
mov
roll
outsl
push
jge
lret
decl
jnp
enter
pop
add
push
stos
jae
test
cli
aas
xchg
sbb
sarb
sbb
gs
jg
lds
outsb
cmp
sub
daa
test
test
mov
mov
add
fwait
push
jnp
outsl
outsb
out
mov
divl
lock
lea
xor
les
push
scas
push
add
iret
movsb
arpl
jo
test
aas
add
dec
push
or
rorl
xor
ja
cwtl
xor
fnstenv
aad
rolb
push
xchg
movsl
xchg
aas
add
adc
dec
fwait
xorb
pop
ret
jmp
jle
mov
cli
mov
inc
push
pop
jl
mov
outsl
bound
xchg
ja
push
or
sbb
iret
scas
sub
shlb
sub
xor
aam
cmpl
xor
adcb
loope
dec
jmp
stos
pusha
mov
xor
mov
jl
inc
jecxz
adc
add
pushf
cltd
push
hlt
inc
xlat
addb
imul
out
inc
icebp
inc
test
iret
pop
icebp
das
jb
int
jns
or
outsl
jbe
outsl
jns
shlb
loopne
in
rolb
imul
pop
std
ret
sbb
ljmp
and
and
les
mov
enter
cltd
data16
jle
pushf
enter
mov
or
lret
gs
inc
or
lds
xchg
mov
cltd
jo
test
shrb
ds
mov
lods
jl
add
int
xchg
sub
cmpsb
daa
mov
add
push
mov
pop
mov
ficoml
out
mov
sub
clc
aam
adc
test
ds
aad
push
shll
pop
pop
inc
mov
jb
stos
popa
xchg
adc
xchg
ret
mov
pop
inc
sti
int
pop
inc
cwtl
jno
jne
and
shr
sub
sti
mov
jg
push
fsubs
fdivrs
mov
xchg
in
out
idivb
sarb
ficoms
dec
bound
imul
dec
jg
rcll
shll
clc
pop
or
mov
ss
push
mov
aam
ret
cwtl
out
xchg
mov
dec
xlat
notb
pop
sub
adcb
hlt
je
out
into
lret
sbb
mov
adc
mov
dec
cmp
cmpsl
stc
add
mov
sbb
sbb
scas
jae
cmp
xor
repz
in
xor
in
sbb
inc
pop
push
sbb
mov
inc
hlt
sbb
scas
je
push
push
imul
shll
sbbb
inc
imul
and
push
outsb
unpckhps
push
dec
cmpl
lods
rcrb
inc
and
lea
movups
stos
test
movsb
inc
mov
in
adc
pop
sub
rorb
mov
in
pop
mov
les
lret
aas
cmpsl
push
int3
cmp
repz
sub
insl
sbb
sti
or
jo
pop
mov
xchg
and
adc
jbe
sahf
push
or
mov
aas
push
test
testb
dec
cwtl
adc
sbb
inc
add
cli
mov
pop
cmp
repz
inc
ss
sbb
inc
call
cltd
jge
movl
stos
cmpsb
ror
into
xchg
push
and
jbe
xchg
jmp
lret
mov
or
movb
lea
lea
push
jnp
lock
sbb
inc
pop
mov
test
fcomp
andl
icebp
jg
push
push
sar
movsl
enter
loop
mov
cmp
data16
and
nop
xor
stc
fwait
scas
dec
sub
pop
sbb
outsb
cld
cmp
sbbb
adc
aam
mov
popl
aas
inc
adc
xor
sti
dec
cmpsb
push
dec
nopl
arpl
and
ret
gs
push
gs
scas
mov
dec
sub
inc
out
nop
addr16
scas
mov
lahf
testl
pop
sub
cmp
xchg
subb
mov
mov
fldl
cmpsl
inc
sub
push
xor
jl
xchg
cmc
aam
mov
push
pop
lock
aaa
mov
in
ret
loope
and
test
dec
pop
add
xlat
dec
add
push
outsb
out
or
ficomps
lcall
fdivp
mov
mov
out
sub
sahf
pop
lahf
cmpsb
jmp
std
push
mov
lea
mov
movsb
les
xchg
and
int
mov
adc
int3
cwtl
push
or
idivl
dec
pushl
pop
xchg
data16
in
and
fidivs
loopne
ret
inc
and
cmp
jp
adc
sub
jnp
push
or
ret
mov
cld
shll
sub
movsl
daa
jp
and
inc
xor
jg
std
cmp
adc
dec
test
popf
mov
push
stos
mov
mov
sub
je
cmp
ret
popa
dec
scas
mov
mov
shlb
nop
stc
jl
mov
mov
lods
mov
cltd
adc
mov
or
xor
jecxz
xchg
add
pop
mov
ljmp
repz
lcall
imul
push
shlb
cmpsb
inc
adc
mov
xchg
js
rclb
xor
sbb
popa
fstl
push
jo
mov
push
movsl
sbb
cmp
loopne
lahf
mov
xorl
push
sub
dec
mov
dec
insb
jecxz
xlat
mov
push
xchg
das
fcomi
lret
xor
xchg
ss
inc
dec
mov
dec
pop
push
jmp
in
jno
jecxz
push
data16
push
loopne
in
test
stos
push
popf
je
movsb
addb
test
fimull
mov
es
mov
inc
dec
fsts
xchg
sub
mov
leave
push
ljmp
mov
dec
adc
mov
mov
inc
lea
insb
jle
pop
or
dec
mov
imul
rorb
mov
push
pop
jg
int
aad
lea
fstp
imul
cmp
cmp
jne
mov
test
mov
lret
dec
outsl
mov
adc
jne
mov
xchg
sbb
mov
xchg
ret
adc
add
dec
and
dec
in
out
dec
cmpsb
jno
cmp
lock
cmp
sub
hlt
ret
lock
mov
repnz
loop
add
test
aas
cmc
jmp
jmp
dec
sbb
xor
add
dec
pop
orl
push
lods
or
out
shlb
jecxz
mov
lods
insl
test
jno
push
push
lret
ret
repz
loope
adc
xchg
pusha
dec
jg
mov
out
push
and
xor
push
pop
roll
inc
ret
add
jne
jl
and
in
cmp
xchg
xor
or
mov
fs
leave
xor
xchg
dec
and
ds
push
cmp
movsl
fdivrp
sahf
les
das
jecxz
cmc
cmp
mov
adc
mov
scas
xor
inc
sbb
jle
or
cmp
fildll
ret
lds
xchg
push
sub
das
repz
test
xchg
addl
mov
sbb
decl
dec
pusha
jmp
cwtl
cmp
mov
jae
xlat
jg
lret
sub
push
shll
icebp
ficompl
xor
es
jle
lahf
xor
and
pop
mov
push
inc
stos
insb
repnz
push
scas
ds
push
mov
cmpsb
mov
sbb
fwait
dec
inc
and
subb
pop
cmc
pop
cmp
inc
shll
scas
js
dec
imul
xchg
push
add
ficoml
mov
into
and
cli
cs
pop
adc
adc
mov
pop
push
and
lea
stos
scas
adcl
inc
xchg
subb
div
push
xchg
mov
fldcw
dec
push
insb
mov
cmp
inc
or
fimuls
xchg
sbb
or
mov
inc
aam
in
icebp
mov
icebp
outsl
xchg
into
shrb
sbb
sub
mov
inc
out
or
das
xor
iret
jo
stos
mov
arpl
mov
icebp
out
cmp
push
cmp
pause
lock
add
scas
push
inc
in
mov
bound
sbb
sbb
scas
mov
sbb
cltd
dec
mov
xor
lods
inc
lret
cmp
or
inc
out
lret
movsb
aas
daa
pushf
cld
lods
out
adc
push
stos
mov
outsl
cmpsl
mov
int
pop
mov
mov
gs
sub
xchg
add
movsl
cli
lahf
xchg
jle
test
outsb
jmp
mov
fiaddl
arpl
pop
ja
pop
dec
jne
rcrb
jecxz
push
mov
mov
fwait
repz
gs
sbb
sbb
icebp
mov
sbb
mov
adc
hlt
jbe
orb
scas
jp
or
mov
sti
hlt
mov
rolb
outsl
xor
mov
cld
mov
sbbl
and
inc
repz
pop
jo
stos
sbb
mov
xchg
repnz
rcr
mov
je,pn
sbb
cltd
mov
cmp
mov
mov
leave
pop
les
js
jne
sub
adc
xchg
pop
insb
mov
mov
test
sub
je
lcall
mov
pop
and
cmc
push
and
fs
lret
jp
subb
nop
pop
jo
cli
popa
cmp
fwait
dec
gs
lea
or
pop
mov
in
or
sahf
dec
add
dec
iret
xor
sub
lahf
push
push
aaa
bound
repz
xchg
push
lods
jle
test
outsb
mov
fs
ficomps
xor
xchg
xchg
lahf
inc
lcall
pop
stos
sbbl
add
and
cs
roll
mov
je
push
stos
cld
mov
ss
cmpsb
in
arpl
or
aad
adc
fcoms
insl
or
stc
ret
scas
add
fstpl
dec
sub
dec
push
and
icebp
leave
mov
test
add
jno
add
mov
pop
push
fidivs
xchg
mov
and
cmp
pop
stc
loope
jno
cmpsl
jg
imul
mov
push
pop
jmp
sub
mov
scas
cli
pop
push
lock
and
out
ja
xchg
rcrl
push
push
add
push
push
insb
mov
mov
inc
sub
and
adc
ret
push
pushl
sub
mov
push
lahf
das
xchg
pop
in
fcoml
mov
arpl
xchg
aas
pop
jmp
or
shlb
gs
sub
xchg
xchg
dec
int3
sarl
and
icebp
cwtl
cmpsl
in
js
pop
dec
and
ret
test
add
pop
xor
xor
adc
arpl
fs
or
inc
movsb
testb
arpl
push
push
sbb
lcall
mov
es
pop
subb
xlat
mov
adc
scas
data16
jne
test
mov
rcll
mov
jle
mov
in
repnz
sbb
stos
adcb
cmpsl
out
mov
js
inc
in
mov
pop
lret
cmp
iret
stc
xchg
je
fildll
sub
pushf
andl
push
inc
enter
jae
sub
push
mov
dec
and
inc
push
stos
mov
into
pusha
inc
sub
add
lret
adc
adc
addr16
cmpsl
movsl
jns
lcall
repnz
cmp
nop
sub
and
icebp
cmp
mov
loope
fists
pop
imul
mov
xor
int
lock
outsb
add
ss
cmp
popw
cmp
call
enter
mov
mov
popf
sub
scas
mov
pop
addl
inc
jns
mov
imul
mov
jp
xchg
nop
nop
xchg
imul
fbstp
cs
scas
pop
or
mov
arpl
movb
inc
or
xorl
cmc
int3
inc
sbb
shll
sbb
clc
popa
enter
in
pop
insb
mov
xlat
cltd
mov
movsb
cmp
push
inc
in
outsb
mov
pop
or
leave
dec
pusha
orl
test
lahf
popf
sub
pop
adc
sbb
cmpsb
inc
loope,pt
and
idivl
cld
out
jns
xor
mov
subb
cmp
dec
push
lret
test
xchg
inc
dec
ljmp
jge
ds
js
gs
xor
mov
je
or
pop
out
sbb
pop
sbb
mov
sub
leave
sahf
push
shrl
fcomps
les
and
xor
push
push
mov
cmp
scas
or
pop
push
movsb
rclb
adc
push
jno
jbe
test
test
and
pop
push
push
ss
pusha
je
cld
dec
into
push
outsb
loope
jbe
add
arpl
xor
push
mov
fidivs
jecxz
dec
nop
inc
ss
jmp
es
es
sub
pop
pop
stc
cmp
imul
add
insb
test
cld
rcll
imul
stc
cmc
xor
xor
repz
dec
sbb
into
test
dec
loope
inc
dec
xchg
add
pop
ret
ja
cmp
popa
push
push
mov
cwtl
aad
jns
adc
xlat
cmp
gs
ds
pop
jae
mov
mov
lahf
in
or
push
lea
ffree
dec
jno
sub
jne
shll
mov
loopne
pop
rorl
sbb
mov
fidivs
mov
les
jge
add
mov
sub
cmp
or
jno
aam
fdivrl
mov
filds
push
xor
popa
pop
pop
mov
mov
push
ljmp
mov
divl
pop
fistpll
test
mov
dec
pop
arpl
jb
xor
ret
sub
mov
mov
cmp
jbe,pn
xchg
mov
dec
xor
lock
sub
xchg
dec
cwtl
or
cli
sbb
sti
sub
push
mov
out
inc
jb
add
andb
inc
leave
cmp
flds
mov
idivb
lahf
mov
shrb
fnstcw
sbb
lock
pop
xor
xchg
daa
in
xchg
pop
cmp
lds
adc
add
xchg
mov
ror
jle
jno
add
xchg
sbb
xor
stos
sbbl
shlb
mov
mov
or
adc
test
jecxz
or
cs
xchg
jb
cmp
sbb
lods
sbb
sbb
cli
pop
push
xor
adc
jl
pop
popf
jb
adc
ret
dec
mov
je
hlt
push
and
sub
rolb
or
xorl
inc
dec
addl
jae
and
xchg
aam
jecxz
jno
rcrl
mov
cld
jecxz
xchg
lret
jnp
jp
into
imul
adc
adc
xor
in
push
jno
add
cmp
ret
int
fidivs
jne
adc
jae
push
aam
into
adc
mov
out
or
dec
lds
hlt
ljmp
pop
inc
ja
ud2
imul
in
sub
repz
into
push
imul
mov
sbb
lea
imull
stc
dec
xchg
push
movsb
sbb
push
cmp
in
cmpsb
or
cmp
or
sbb
shld
pop
out
pop
outsb
daa
cld
iret
adc
xchg
pop
stc
cmp
inc
dec
cmpl
ret
and
inc
pop
stc
xor
loope
sbb
pop
jle
outsl
cmp
in
xchg
mov
xor
stc
pop
mov
jecxz
aas
sub
mov
mov
arpl
in
mov
aaa
cmpsb
dec
into
xor
stos
ret
adc
mov
jbe
jo
stos
mov
ds
dec
fistpl
mov
shrb
fucomi
mov
mov
int
subb
add
adc
fdivs
cmp
es
fs
mov
imul
fstpt
mov
lods
testb
mov
ds
stos
push
rol
imul
aad
inc
popa
outsb
pxor
cmp
fisubrl
jnp
add
fcoml
dec
sub
call
hlt
mov
push
pop
insb
jno
ss
popf
xchg
and
lea
mov
rcl
in
xlat
and
sbb
dec
xchg
sub
das
daa
xor
push
lods
outsb
into
btcl
shlb
scas
mov
fstpt
xchg
adc
sub
dec
adc
ret
cmp
push
pop
jno
lock
and
lret
fisttpl
std
int
mov
cmc
adc
or
popf
push
xor
adc
hlt
arpl
push
mov
cwtl
mov
jecxz
xchg
call
popf
cld
add
inc
data16
mov
sub
ja
out
pop
icebp
sbb
dec
pop
movsb
inc
push
cmpsb
pop
arpl
ja
xor
add
data16
sub
dec
jmp
test
imul
jecxz
mov
adc
and
stos
xchg
dec
push
push
xchg
gs
xor
push
push
int
lock
dec
rolb
jl
negl
jmp
fcomp
mov
dec
cmp
sbb
and
sbb
push
scas
ret
xor
cwtl
dec
jmp
xchg
int
test
and
push
or
sbb
rorb
andb
jmp
lods
jl
lea
divb
jb
mov
dec
sti
and
or
ljmp
mov
add
mov
hlt
mov
cmp
xchg
mov
jge
add
mov
jno
adc
xchg
repz
adc
mov
sbb
ljmp
mov
rcrl
aaa
ljmp
mov
xchg
pop
and
push
add
arpl
loopne
cmp
mov
loopne
and
pop
popf
test
pop
push
mov
insb
sub
call
outsb
pop
iret
mov
clc
push
aaa
lret
lea
sub
rcrl
cmc
push
add
mov
jecxz
xchg
mov
cld
mov
push
les
flds
hlt
popf
xchg
lods
dec
dec
cmc
mulb
in
jbe
xor
rcll
movsl
hlt
mov
pop
gs
in
imul
fidivl
iret
out
inc
in
scas
nop
ret
xor
mov
xor
mov
ljmp
lds
inc
jb
lock
arpl
xor
mov
les
movsb
inc
or
sbb
in
imul
or
inc
cmpsl
orl
add
repnz
cld
and
pop
and
lcall
pop
mov
push
or
mov
push
fildl
clc
or
jno
scas
lods
cmp
or
rcll
shr
out
push
mov
xchg
dec
sub
push
movsb
pop
pop
add
xor
mov
pop
xor
and
ljmp
test
std
adc
ss
or
testb
pop
cwtl
sbb
mov
jp
sbb
out
out
or
shrb
inc
push
mov
and
je
in
fsubs
pop
scas
mov
mov
aam
or
add
xor
enter
mov
mov
pop
out
test
shrb
mov
imul
ja
rclb
ret
mov
push
stc
mov
nop
xchg
or
mov
dec
nop
cs
pop
jnp
jg
ss
pop
xlat
adc
sbb
out
cmp
dec
add
mov
jecxz
gs
outsb
mov
lds
in
bound
ficompl
aad
push
mov
push
shr
cmc
mov
sub
imul
xchg
lock
push
mov
fidivl
pop
in
out
fisttpl
cmp
adc
mov
sahf
cmp
jg
addr16
scas
adc
ds
dec
nop
push
fidivl
xchg
sti
mov
cmp
mov
cmp
inc
in
mov
das
arpl
mov
cltd
stos
xor
fstpl
xchg
mov
movl
loopne
scas
mov
xchg
or
inc
outsl
xor
pop
pop
sbb
je
xchg
popa
adc
sub
repnz
push
rol
loopne
adc
mov
out
push
jbe
xchg
aaa
lahf
pop
call
inc
insl
jle
mov
adc
lahf
pop
mov
adc
sti
lret
imul
pushl
in
xchg
int3
popa
mov
sub
out
out
pop
jb
shll
outsb
sahf
or
dec
ljmp
sbb
cmpsl
stc
or
pop
lods
add
insl
jbe
scas
ss
inc
stos
dec
push
rorl
pop
sbb
jne
mov
push
int
in
decl
ja
xor
aam
pop
mov
shr
or
int
je
popa
jle
mov
mov
adc
out
insb
inc
cmpsl
into
xchg
into
and
hlt
add
test
or
add
loop
in
movsb
repz
rcrb
mov
xor
out
cmp
lret
lret
fsubr
dec
xor
mov
lock
ljmp
les
jl
mov
add
repnz
das
shll
or
ds
cmp
xor
lcall
inc
repz
xchg
sub
ss
xor
outsb
das
aam
ljmp
jle
ret
adc
aad
inc
jg
mov
je
add
dec
jb
adc
shr
inc
inc
repz
lock
aaa
lock
in
enter
or
or
hlt
push
sbb
jecxz
pushf
aad
jns
cmp
cli
cmp
idivb
iret
xchg
pushf
or
and
fidivrl
adc
daa
dec
cmp
out
add
push
pop
dec
pop
addr16
stos
mov
adc
jns
cmp
push
das
xlat
xor
jge
fcomip
jne
inc
push
lret
mov
inc
mov
xchg
fmull
pushf
out
jge
stc
push
mov
pop
ror
push
fbstp
and
mov
popf
loop
push
dec
lea
sbb
push
pusha
hlt
dec
and
rcll
rcll
mov
insb
mov
lret
mov
inc
and
popa
add
sub
aas
mov
repz
inc
jbe
cmp
push
scas
mov
add
imul
jae
aas
ljmp
inc
out
scas
repz
xchg
push
and
inc
dec
push
outsl
adc
cmpsl
adc
push
jno
adc
mov
ficompl
icebp
mov
sub
pop
push
jae
dec
incb
cmp
add
fs
dec
cmpl
jns
in
xchg
pop
imul
aam
cmpb
adc
fwait
cmp
rclb
mov
test
mov
xor
test
inc
repnz
push
dec
jle
in
sbb
mov
insl
das
insb
dec
fstl
les
sub
mov
pop
cmp
test
fsub
insb
jl
in
and
cmp
add
mov
dec
and
cs
test
aas
outsb
or
pop
insl
ja
clc
mov
adc
xchg
call
loopne
jbe
mov
or
or
outsb
mov
add
sbb
cmp
cmp
sub
adc
nop
out
jo
aaa
loope
or
inc
outsl
push
fcoml
rorb
add
cwtl
jo
sbb
push
pop
push
mov
pop
or
jle
inc
mov
paddd
cmp
jae,pn
xor
sarl
push
in
mov
addb
dec
out
pop
mov
dec
mov
push
sahf
and
mov
mov
jno
or
data16
or
or
cmp
nop
pusha
cltd
jp
lods
repnz
cmp
sbbl
roll
fimuls
sbb
cmp
aam
push
pusha
jb
cmp
mov
xorl
mov
jno
enter
mov
gs
in
push
ds
mov
shrl
mov
insb
outsb
pop
ja
loop
dec
pop
push
jge
cmp
mov
shlb
xchg
ret
into
das
test
loope
mov
clc
bound
cmp
pop
mov
sbb
mov
mov
add
lret
imul
cmp
dec
mov
movsb
ds
add
pop
mov
fisubrl
and
mov
and
push
xor
adc
test
ficomps
jle
out
jnp
lcall
xchg
lea
and
mov
mov
mov
push
cmp
lock
dec
pop
aaa
mov
lods
pop
shlb
jns
adc
shrb
std
inc
ret
int
mov
dec
sub
add
fmuls
out
lds
and
imul
gs
stos
stos
movsl
movsl
dec
add
mov
ja
mov
nop
push
loopne
jae
sub
mov
cmp
out
int
pop
int3
adc
mov
and
pop
jno
jbe
mov
add
faddp
enter
push
dec
popa
shll
incb
andl
loope
inc
push
add
popa
aas
xorl
orb
outsb
xor
in
xor
fnstcw
fisttpll
enter
or
scas
mov
fcoms
stos
mov
lods
sbb
mov
mov
mov
lods
mov
loop
imul
mov
in
jg
sub
push
rcr
fs
lods
dec
push
sbb
aam
call
pop
xor
dec
lcall
xchg
test
and
xchg
call
popf
loop
dec
cli
hlt
filds
imul
loopne
cld
sbb
sbb
jno
outsb
bound
sub
sti
cmp
call
cltd
or
nop
push
mov
cmp
roll
push
adc
mov
call
orl
addr16
mov
movsb
xor
sbb
pop
popa
sub
mov
shrl
enter
and
rcr
fdivrp
repz
out
repnz
sub
mov
lock
xchg
mov
rcrl
xlat
loop
mov
pop
scas
xor
arpl
mov
xchg
add
mov
cli
add
icebp
in
imul
xor
cld
sub
sub
test
mov
out
adc
into
adc
mov
cwtl
dec
xor
andl
mov
ljmp
cmp
sub
loopne
mov
push
and
xor
mov
adc
ss
sub
adc
xchg
fadds
fimuls
adc
push
mov
cld
loop
clc
push
das
push
scas
nop
out
mov
or
xorl
sarb
aaa
add
pushf
mov
cltd
jmp
push
push
push
adc
outsb
cmp
and
imul
ret
add
lods
enter
jbe
pushf
sub
js
call
iret
insb
jbe
jl
jmp
mov
test
sbb
push
fstps
add
stc
push
vpsrlq
daa
push
ja
xor
movsb
outsl
pop
movb
fs
sahf
cli
inc
mov
ss
mov
fldenv
movsb
nop
push
mov
adc
lret
pop
mov
inc
dec
lret
add
repnz
hlt
cmpb
pop
shlb
ffree
les
jmp
add
ficomps
and
bnd
call
xchg
mov
test
jle
icebp
push
adc
lods
xor
jnp
and
xchg
insl
jb
cmp
mov
das
movsb
or
mov
outsl
sbb
push
stc
aas
addr16
jp
lea
outsl
icebp
push
xchg
inc
in
mov
cld
stos
cmpl
sbb
fmull
or
mov
cld
fwait
and
lcall
or
push
and
mov
insl
xchg
je
fisubrs
or
add
jge
fcmovbe
fimull
lahf
in
or
jne
std
mov
cmp
ds
and
pop
dec
xchg
out
test
add
mov
insb
imul
stc
incb
cmpsl
dec
xchg
xchg
adc
pusha
enter
outsl
xchg
dec
and
jmp
shrb
pusha
push
ljmp
lods
mov
jne
cmpb
jae
jle
xchg
adc
aas
inc
test
add
pop
in
xchg
sub
test
js
and
loope
test
adc
stc
ds
sbb
aaa
pop
xchg
in
or
inc
addb
addr16
popa
xor
sub
mov
outsl
es
pop
ja
loopne
or
mov
adc
mov
pop
in
out
scas
mov
xor
aad
push
push
jbe
addr16
call
fnstcw
inc
sbb
sbb
push
and
aam
icebp
cltd
in
adc
icebp
jno
repz
outsb
pop
ljmp
jno
xchg
pushf
sbb
mov
sti
mov
sbb
jge
std
sbb
xchg
push
sub
mov
cmc
xchg
mov
pop
sub
adc
arpl
testb
and
out
ror
je
mov
mov
outsl
movsb
jnp
shrl
sub
dec
je
mov
mov
stos
xchg
std
loope
shl
in
test
stos
fldt
shrb
mov
arpl
popa
subb
mov
mov
jg
inc
jbe
daa
aaa
xchg
or
out
jnp
or
add
dec
addb
cmp
jae
out
pop
arpl
xor
test
scas
lret
or
adc
dec
fs
movsl
and
inc
xor
inc
sub
mov
mov
in
iret
les
mov
outsb
pop
mov
and
shr
mov
test
por
movsl
fimull
dec
lea
add
push
in
in
add
movsl
adc
lods
jge
and
jbe
push
std
push
mov
xchg
sbb
sub
cmpsl
adc
stos
pusha
in
out
js
repz
into
mov
lcall
sub
insb
out
mov
sub
xor
mov
or
lret
lret
sub
out
xchg
es
or
sub
push
dec
cmpsl
fsubs
iret
push
mov
pop
pop
add
dec
mov
pop
out
pop
jg
mov
and
call
jecxz
add
and
xor
push
and
lret
cmpsb
add
cmp
sbb
test
jae
xchg
shll
mov
sbb
daa
not
adc
mov
dec
addr16
jne
sub
imul
inc
cmp
into
and
jecxz
sbb
mov
sub
nop
leave
xor
add
out
push
fdivs
sti
push
lea
mov
in
rorl
fldenv
pop
cltd
fisttpll
sti
fiaddl
pop
dec
mov
test
pop
rorb
push
dec
paddw
lock
mov
adc
fisttpl
sub
cmp
mov
adc
out
ljmp
iret
movsb
cwtl
loope
push
sub
jp
push
sub
call
xlat
push
jg
mov
cwtl
adc
dec
sbb
jae
das
dec
out
lods
jns
add
aaa
out
push
inc
xchg
adc
sub
xor
xor
push
add
imul
mov
mov
add
push
scas
push
inc
inc
enter
xchg
addr16
sar
cwtl
out
leave
nop
jecxz
lock
andl
lea
shrb
xchg
iret
je
into
fs
adc
cmp
mov
adc
xor
add
dec
int
inc
stc
sar
and
or
xor
lret
enter
movsb
stos
mov
xchg
mov
sub
movsl
scas
dec
jns
aam
cmp
popf
inc
lods
or
and
scas
pop
pop
loope
mov
sub
add
push
fdivl
cmpsl
xchg
data16
mov
pop
repz
inc
outsb
lds
call
out
xor
xchg
push
xchg
sub
mov
pop
push
jne
rorb
std
test
js
jno
dec
mov
dec
xchg
stos
cmp
pop
js
mov
loopne
sub
jmp
add
pop
leave
pusha
repnz
mov
dec
or
sbb
lock
sub
inc
mov
sub
jmp
fs
add
xlat
loop
lahf
mov
cmp
insb
push
popa
sub
mov
xor
dec
push
pop
outsl
inc
ds
cmp
cmpsb
or
cs
mov
push
lock
add
inc
into
lret
aaa
lds
mov
arpl
inc
aas
cmp
call
inc
sahf
int3
mov
popa
ja
popa
push
int3
push
pusha
xlat
fcoms
pop
repz
or
inc
jb
stos
lods
sbb
negb
fcmovnu
cltd
stos
or
out
fs
je
and
jg
dec
push
mov
mov
push
ja
scas
lahf
mov
lock
xor
jmp
pusha
or
movsb
xor
and
dec
ja
pop
arpl
loopne
das
add
sub
mov
xor
adc
lock
pop
in
and
pop
lods
adc
xchg
push
lahf
push
or
gs
pop
pop
dec
push
add
add
nop
ret
add
sub
ret
and
mov
scas
insl
insb
adc
int
cwtl
popf
loopne
ret
loop
in
repz
clc
fistpl
mov
aam
ficoml
dec
out
push
pop
out
pop
test
inc
outsl
fcmovnb
popf
cmp
sub
dec
dec
ret
shrb
or
ljmp
and
xor
sahf
adc
out
ficomps
in
add
fcomip
pop
jb
frndint
xor
jle
xchg
inc
push
inc
xor
test
roll
lods
and
loope
adc
dec
pop
push
push
or
mov
mov
ss
dec
push
fwait
mov
ljmp
ficomps
add
test
ret
jecxz
xchg
cmpsb
xchg
loope
pop
or
or
mov
xchg
fsubl
sbb
xchg
stos
test
jge
jae
mov
daa
push
push
push
inc
pop
jg
mov
xchg
jmp
sahf
in
mov
xchg
mov
mov
bound
aas
add
mov
ljmp
xchg
push
in
js
int3
sbb
adc
mov
andnps
loope
mov
icebp
pop
js
xchg
xchg
addr16
jmp
add
cli
in
or
int3
xchg
sbb
pop
xlat
and
lds
sahf
lcall
xor
std
nop
mov
sbb
setne
test
adc
stc
or
mov
test
aas
sub
imul
loope
sub
sub
mov
add
mov
int
sarb
mov
pop
mov
inc
mov
outsb
mov
insl
lods
dec
add
mov
pushf
inc
shr
mov
lods
aam
cltd
sbb
sbb
or
leave
dec
or
mov
int
mov
lock
pop
movsb
sarb
and
adc
in
mov
xchg
dec
xchg
jns
and
push
push
sub
add
jae
mov
mov
lods
icebp
cmp
xchg
inc
pop
ljmp
jp
bound
ret
inc
hlt
xor
jae
loop
in
or
jnp
sbb
lret
movsl
cmp
rol
imul
sbb
int
jecxz
inc
imul
sub
add
bound
jp
loope
jbe
xchg
adc
call
mov
sbb
inc
loope
int3
cwtl
xor
cli
jmp
cmpl
xchg
cmpsl
loop
hlt
sbb
imul
inc
jnp
hlt
push
xchg
sbb
mov
push
mov
pop
sbb
push
das
add
imul
ljmp
or
cmpl
dec
ss
loop
jp
ret
enter
xchg
test
out
and
mov
inc
test
sub
das
or
aas
mov
orb
ja
out
movl
out
mov
and
jmp
cmp
xchg
jno
mov
pop
and
outsb
add
pop
popa
inc
cmp
xor
iret
mov
add
pop
in
lcall
into
dec
fwait
mov
les
dec
pop
xor
or
movsl
mov
adc
or
push
arpl
rorb
sbbb
daa
xchg
xchg
out
or
rorl
roll
xchg
dec
mov
pop
dec
jnp
or
jge
arpl
aas
sub
loopne
pop
loop
push
pop
stos
and
out
mov
cwtl
enter
incl
iret
pop
rcr
sbb
jnp
out
testl
pop
pop
sarb
mov
pop
lock
loop
sub
in
jge
sbb
sub
sbb
sub
jmp
mov
stc
jle
call
adc
push
andl
gs
mov
push
das
add
das
scas
sbb
xor
inc
fidivrl
lret
cli
sub
dec
sbbl
or
xlat
and
jb
inc
shrl
in
xchg
mov
add
adc
xchg
mov
or
adc
push
pop
repnz
pusha
dec
xor
cli
popf
sahf
jns
and
mov
test
bound
xorb
fcmovnu
jne
mov
daa
xor
out
scas
aaa
mov
cs
push
inc
and
cld
fs
mov
mov
das
mov
add
mov
pop
aas
data16
cmpsb
and
cmc
sbb
or
add
xchg
test
inc
scas
jbe
jb
cmp
jmp
lcall
push
repz
dec
fidivrl
int
xchg
push
adc
gs
sbb
mov
rcrl
outsl
add
adc
cmc
and
stos
sbb
mov
lret
mov
pop
call
es
cmp
data16
push
jae
cmpl
shll
mov
xchg
pusha
in
add
or
mov
les
dec
js
dec
pop
xchg
add
stc
das
and
loop
jecxz
jp
inc
out
jmp
cmpb
shrl
movsl
js
cmp
loop
sub
xor
scas
fwait
push
jp
in
les
stos
sbb
aas
mov
push
popa
repz
mov
lcall
cmp
das
stos
nop
sub
mov
ret
lods
push
sti
mov
xorb
or
inc
jmp
or
mov
jno
mov
inc
and
fnsave
sub
pop
insb
cmpsb
pop
xchg
and
inc
push
nop
mov
mov
jb
add
xchg
mov
add
mov
mov
inc
filds
es
cmp
add
stc
pushf
out
imul
adc
jl
mov
cmp
cmp
xor
fdiv
popa
popa
scas
pop
inc
movsl
std
push
mov
lea
ret
and
push
or
cmc
addr16
sbb
int
mov
mov
pop
std
pusha
or
ficoml
dec
ljmp
dec
sub
lock
jne
mov
inc
xlat
xlat
lahf
scas
pop
pushf
lret
rol
clc
mov
sub
leave
xchg
xchg
nop
stc
cmp
fs
lea
lret
popa
test
dec
js
stos
ja
hlt
in
dec
sti
incl
adc
inc
xor
and
hlt
shl
inc
in
fs
popf
sti
movsb
jo
js
ret
out
xor
ret
or
jl
xorl
rorl
rorb
negb
enter
xchg
test
add
add
xor
add
cwtl
mov
jge
lods
cmp
push
aam
push
stc
popa
popf
fcmove
sbb
and
pop
sbb
ljmp
lret
ret
loope
xchg
jae
xor
in
push
adc
insb
mov
or
and
enter
jecxz
push
iret
xchg
push
cmp
inc
push
jle
aaa
sbb
xor
lods
fldl
in
aad
adc
push
ss
repz
cmc
pusha
and
xlat
loopne
test
jge
sub
aaa
fisubrs
scas
sub
test
scas
xchg
cmp
jp
sbb
adc
push
idivb
pop
mov
push
sahf
or
pop
xor
inc
mov
out
sub
cmpsl
dec
and
adc
aam
std
mov
or
xor
scas
xchg
cmp
push
cmp
fbstp
stos
lahf
stc
mov
loope
popf
fwait
push
mov
repnz
test
insl
xchg
sbb
mov
sbb
pop
ret
filds
jns
jmp
vmread
mov
mov
scas
outsb
lock
shll
clc
pop
pop
outsb
push
jae
ljmp
arpl
loop
frstor
and
xor
test
push
xchg
rolb
loop
xchg
jp
es
mov
hlt
cwtl
pop
jl
xor
jp,pt
rcll
jno
pop
mov
popf
push
jns
popf
mov
jecxz
int3
ja
xor
mov
sti
and
test
inc
ret
mov
lret
sbb
mov
aaa
add
pop
pop
xchg
aaa
cmp
mov
dec
ljmp
mov
sub
mov
movb
dec
outsb
scas
push
mov
addr16
test
inc
mov
imul
mov
les
and
jp
in
add
pop
mov
cmc
push
hlt
inc
cmp
xchg
mov
daa
dec
push
pop
push
fimull
jl
adc
add
add
mov
mov
imul
into
xchg
pop
mov
inc
das
mov
mov
or
iret
out
scas
nop
inc
sub
lock
js
xor
jb
pusha
xchg
les
lea
pop
adc
sbb
fidivrs
mov
das
and
inc
ret
adc
mov
and
add
pop
loop
dec
aas
mov
sbb
adc
test
lret
scas
dec
cmp
outsl
jge
xchg
ljmp
xchg
cmp
insb
mov
pushf
push
pop
jnp
jmp
cmp
xchg
fs
xchg
lret
adc
stc
fdivs
mov
sub
mov
mov
cmp
xchg
cmp
xor
jge
aaa
ret
lods
mov
fwait
and
fwait
and
shll
jno
sub
cmp
push
jecxz
fbld
xchg
shll
pop
les
add
les
dec
mov
xchg
sub
out
movsl
popf
mov
std
insb
mov
push
cmp
cwtl
iret
sarl
add
adc
lea
nop
adc
xor
xorl
mov
mov
push
bound
mov
dec
mov
dec
pop
xlat
adc
fisttps
mov
js
mov
mov
sub
aad
test
xor
ss
xor
mov
push
adc
cs
shl
sub
push
lods
push
aaa
fnstenv
cmp
fidivrs
mov
cmp
push
cli
sahf
cltd
aam
enter
add
pop
cmp
or
jge
dec
dec
lret
jns
pop
inc
push
lret
scas
adc
and
cmc
and
idiv
movsb
mov
aas
cmpsl
and
sub
test
bound
cmp
out
scas
fistl
or
fsubr
in
out
push
mov
or
jmp
lret
jl
jo
jp
jle
roll
rorb
cmpsb
lret
pop
ret
pop
and
scas
fsubrp
std
jnp
mov
mov
icebp
pop
mov
cmp
mov
cmpb
pop
jbe
loope
sbb
sbb
mov
mov
mov
cli
mov
sbb
adc
fildl
je
leave
lock
jnp
stc
cltd
in
test
pop
out
jp
dec
rcll
out
lock
lods
mov
pop
cmp
jne
sarb
mov
jecxz
mov
out
mov
std
push
pop
dec
aam
sub
aad
sbb
addl
pop
sbb
sbbb
cmp
and
ja
cmp
push
push
push
push
outsb
mov
sub
inc
std
pop
testl
adc
adc
push
das
adc
push
je
xchg
adc
xor
lods
aam
sarl
pop
imul
pop
sub
stos
add
sub
jg
pushf
mov
insb
aaa
sarl
jnp
negb
mov
rcrb
aad
adc
cmp
push
mov
inc
pop
mov
inc
out
test
pop
iret
mov
cmp
xchg
test
imull
sub
sub
test
incl
ja
mov
lock
mov
int3
sbb
mov
mov
test
shr
aad
dec
mov
ss
movsl
jecxz
sbb
in
xor
cmp
roll
rclb
nop
test
aaa
and
rcrb
nop
popa
xchg
xchg
dec
mov
sub
mov
ret
int
cmp
cmpsb
xchg
aas
xchg
in
es
outsl
adc
inc
out
bound
lock
outsb
pushf
cmp
scas
xor
jb
mov
insl
shlb
idivl
cmpsb
incb
and
xchg
addr16
jecxz
fcmovnb
xor
mov
adc
punpcklwd
inc
aad
movsl
ret
push
push
push
add
ss
mov
lcall
jge
pop
jne
xchg
xor
dec
outsl
mov
dec
add
out
stc
ja
cmpsb
adc
in
subl
jmp
and
xor
push
pop
popf
push
aas
or
cmp
dec
int
sub
gs
outsl
sbb
pushf
out
mov
lods
xor
ret
aam
sbbl
imul
fidivrs
fcoml
rclb
cmp
movsb
mov
sub
push
push
mov
xor
mov
sub
outsl
icebp
mov
jbe
pop
inc
adc
das
insb
leave
pop
scas
sub
push
xchg
or
dec
inc
mov
mov
mov
mov
cmp
cli
mov
daa
call
dec
cmp
jg
adc
push
xor
popa
addr16
or
inc
out
push
insb
ds
mov
je
sub
inc
fmuls
pop
mov
in
in
out
push
cmpsl
sub
fwait
pop
fs
mov
push
mov
cmpl
insb
cmp
xlat
push
movsb
pop
sbb
movsl
fnstenv
ss
xchg
rclb
ret
fnstenv
je,pn
into
imul
pusha
cld
lret
mov
mov
mov
test
mov
ret
in
loopne
push
cmpsb
incl
jo
fdivr
repnz
xchg
imul
imul
lret
pop
stos
nop
daa
bound
hlt
popa
sub
test
clc
in
sti
aad
ficompl
pop
test
movb
out
lea
sub
sahf
mov
add
ss
leave
repnz
roll
and
loope
jo
jo
xchg
push
mov
repnz
lds
mov
sbb
xchg
jp
hlt
jle
mov
push
pop
or
pop
mov
pop
shrb
imul
out
jle
xchg
jecxz
xor
sub
arpl
cmp
addr16
push
jp
data16
push
mov
je
or
out
lea
popa
mov
mov
mov
das
or
pop
xchg
insb
and
jb
shll
lock
repnz
fsubrs
ret
xor
or
jne
out
jnp
test
cmp
pop
ljmp
imul
and
jae
dec
nop
call
inc
pop
dec
out
dec
lods
fmull
lret
pop
sub
ret
lret
mov
add
dec
mov
cmp
dec
mov
cmp
shlb
mov
dec
popa
and
ret
xlat
mov
mov
imul
aad
mov
dec
test
leave
cld
xor
addr16
je
mov
pop
push
jo
mov
je
out
lret
pop
push
inc
push
mov
in
adc
inc
rorl
cmp
daa
cli
shr
or
fistpl
stos
movl
int3
sub
lahf
adc
stos
popf
dec
pop
and
mov
lods
mov
add
movsb
sti
mov
test
aam
stos
mov
ret
repz
adc
mov
mov
lret
cld
lret
and
fidivl
ja
jge
and
lea
aaa
jg
popa
mov
into
roll
pop
sbb
leave
sub
adc
add
dec
mov
adc
mov
jo
adc
les
jp
or
mov
fidivs
les
push
scas
std
loope
js
or
dec
jp
and
add
mov
pop
jae
mov
mov
pushf
cmpsl
int3
sub
icebp
mov
xlat
xchg
fwait
xor
mov
push
lcall
jo
xchg
popa
stc
int
mov
jae
sbb
push
or
and
rcl
jmp
xchg
test
ljmp
out
xlat
imul
xchg
xor
movsb
cmp
xor
cmpsb
jle
cmp
roll
mov
jle
add
adc
jnp
pop
aaa
push
enter
ds
pop
jno
inc
test
std
sbb
addl
insl
inc
xchg
or
in
jae
push
sti
mov
or
dec
mov
movsl
mov
jecxz
outsl
xlat
and
inc
movsl
jmp
mov
inc
or
popf
testb
repz
jecxz
mov
dec
subb
adc
andb
aam
div
std
dec
jecxz
mov
lea
dec
pop
dec
insb
jbe
lods
mov
movsl
xchg
jbe
lds
jmp
push
leave
fistl
int3
pushf
mov
mov
mov
loopne
pop
mov
mov
loop
push
popf
jecxz
out
imul
scas
test
iret
lods
jle
mov
lahf
sbb
dec
pop
sbb
int3
cli
cmpsb
mov
negb
insl
mov
cmp
pop
cmp
sbb
jl
movsb
repnz
shrl
out
lcall
loop
pop
dec
jg
pushf
mov
sub
mov
lock
sub
das
mov
stos
cmp
int3
les
imul
out
adc
mov
jmp
jnp
call
lods
mov
push
push
ficoml
fcoms
shll
les
adc
mov
cli
stc
jns
adc
aam
je
lods
xchg
mov
mov
cmp
imul
jp
mov
mov
push
xchg
movsb
stos
and
or
repnz
das
and
pusha
testb
jb
into
loopne
fmull
jnp
es
dec
push
pop
mov
cli
outsl
inc
ljmp
mov
mov
mov
push
mov
xchg
push
movb
aad
or
inc
cmp
and
inc
cwtl
into
mov
scas
cltd
pop
sbb
insl
add
cld
cmpl
jo
sbb
jmp
dec
sub
mov
cmp
pop
jns
push
je
adc
rcrb
mov
jb
sete
lds
inc
gs
xchg
std
aam
xorb
mov
jnp
sub
aas
push
ljmp
mov
jbe
xchg
out
fs
movsb
fsts
pop
sub
cmp
cmpsl
push
cmpsb
xor
or
mov
or
push
xchg
and
xchg
gs
in
inc
and
xor
stos
sub
sub
and
es
imul
pop
or
xchg
or
jecxz
jp
sbbb
aad
gs
adc
ret
jne,pn
cmpsb
call
cli
cmpsl
cmpsl
fdivrs
sbb
jns
mov
pop
dec
shrb
push
xorb
cmp
xchg
cmp
divl
idivb
sbb
pop
int
mov
xor
stc
fistpl
movsb
fldt
xor
test
add
cmp
aaa
mov
add
aaa
dec
lcall
mov
sub
xchg
int
xchg
xchg
popa
das
mov
mov
xchg
sub
and
aaa
xlat
je
jle
jne
cmpsl
ss
sub
stos
test
mov
int
mov
cmp
test
push
mov
scas
gs
inc
mov
das
outsl
notb
adc
jb
jle
div
fildl
ss
xchg
pop
push
sbb
loope
mov
jmp
fists
mov
mov
and
mov
psubq
mov
outsb
xor
enter
jo
into
xor
outsb
jne
in
pop
inc
dec
popa
ja
lret
dec
imul
mov
push
sub
dec
and
dec
pop
lea
jmp
roll
xchg
xlat
and
and
xchg
xor
push
loop
pop
xchg
sahf
inc
pushf
les
test
adc
jmp
xchg
dec
adc
imul
fs
pop
mov
adc
jge
inc
shrd
cmp
mov
jo
cmp
mov
dec
pop
mov
pop
movsl
ja
push
clc
sbb
push
or
pmulhuw
or
or
sti
jbe
and
jne
movsl
and
fiadds
pusha
mov
dec
fnsave
xchg
cmp
mov
inc
mov
jg
into
gs
cmc
cmp
fstl
loopne
push
inc
scas
sbbb
jns
add
out
push
movsl
push
nop
mov
mov
mov
dec
in
xlat
std
orl
and
or
cwtl
xchg
pop
mov
movl
push
cmp
sub
rcrl
mov
add
or
sub
int3
sbb
cmc
loop
dec
dec
dec
cld
cld
cmp
sti
pop
movsl
adc
test
pop
sbb
push
add
in
jo
pusha
mov
arpl
inc
ja
cmc
sbb
fst
mov
xchg
call
cli
std
outsl
xor
imul
jo
xchg
in
pop
cmp
push
mov
adc
dec
ret
add
pop
lods
inc
imul
imul
das
gs
sbb
daa
jle
int
outsl
mov
xchg
pop
out
ds
mov
in
mov
jmp
popa
stos
cmc
push
aad
data16
push
shl
jns
mov
lret
xor
xorl
rcll
dec
and
fildll
mov
add
scas
mov
shlb
pushl
mull
xlat
cmp
sahf
test
lret
jno
outsl
push
adc
and
out
into
xlat
test
in
out
jbe
int3
or
shlb
mov
xchg
jnp
ret
mov
imul
into
lock
jle
sub
popa
pop
push
jmp
lcall
pop
cmpsb
outsb
push
into
js
push
fadd
xor
mov
ret
mov
xchg
or
nop
lods
repz
dec
sub
mov
cmp
push
and
pop
in
pop
nop
cmp
dec
push
inc
dec
mov
or
and
in
hlt
push
add
mov
pop
mov
add
xor
jo
mov
test
xor
rcll
mov
add
xor
push
into
jne
enter
xor
jo
xchg
loope
push
rcll
mov
adc
test
jbe
movsl
nop
cld
adc
xor
xor
push
sahf
xchg
xor
mov
out
and
fs
int3
rolb
dec
xchg
sub
inc
aas
xor
incb
jae
mov
das
pop
dec
test
mov
les
xchg
leave
jge
mov
mov
aad
or
sub
jge
mov
sti
sbb
mov
and
outsb
adc
ljmp
in
loopne
icebp
in
xchg
repz
out
inc
jbe
pop
sbb
ljmp
test
shrl
mov
jns
nop
movsb
sub
shrl
lock
out
idivb
and
push
dec
movl
in
imul
jmp
mov
xor
shrb
in
fiaddl
nop
test
cmpsb
cmp
adc
outsb
test
jge
stos
mov
ret
js
mov
movsl
lret
mov
in
test
inc
inc
pop
sti
popa
push
jno,pt
inc
sub
cld
push
push
aad
mov
fs
lods
push
leave
push
xchg
dec
xchg
cmpsb
cltd
cmp
sub
pop
outsl
inc
ds
xchg
pop
mov
cmpsb
push
adc
outsl
jl
ja
aaa
mov
adc
int
push
xchg
pushf
ds
jge
xor
loopne
or
stos
sbb
push
icebp
sbb
fisttpll
adcb
mov
jg,pt
pop
pop
sub
xchg
je
sub
ret
dec
fists
lods
movsl
idivb
mov
cmpsb
mov
push
sub
inc
add
add
daa
fwait
in
test
in
pusha
jmp
lahf
inc
xor
js
in
ror
inc
fyl2xp1
in
inc
or
shrb
and
jo
fucomp
push
mov
sbb
mov
and
enter
shll
jge
scas
xchg
and
fdivrl
ret
push
and
xchg
rorb
insl
sub
or
outsb
stos
inc
sbb
dec
ljmp
push
sbbb
add
sub
jmp
adcb
js
sub
xor
push
mov
or
mov
and
add
data16
mov
dec
loope
stos
xor
lds
orl
popa
add
fildl
xchg
jle
or
pusha
idiv
into
add
out
or
cli
je
push
pop
popa
pushf
xchg
or
push
mov
scas
pop
mov
cmc
push
dec
mov
mov
aad
je
ja
lret
mov
cmp
sbb
aaa
fisubl
in
mov
jmp
mov
lcall
mov
ds
mov
mov
cmp
pushf
stos
ljmp
dec
sarl
cs
push
jp
xchg
mov
and
insl
pop
jbe
leave
sbb
and
aam
enter
and
loopne
jo
pop
mov
loopne
and
wbinvd
fsubrl
jmp
dec
jno
xor
inc
lret
mov
fsubr
out
test
xchg
jmp
cltd
lret
out
imul
ret
imul
call
adc
inc
sarl
mov
aaa
repz
test
add
ljmp
das
rcrb
jo
mov
cmpsl
push
pop
aaa
pop
repz
push
fmuls
or
sahf
stc
fsts
in
das
or
cld
mov
pop
lret
jno
push
mov
mov
testl
daa
in
xchg
movsb
add
lock
out
mov
pushf
mov
or
popa
dec
adc
leave
cltd
out
addl
outsl
mov
in
mov
pop
fcoml
sbb
and
mov
xchg
scas
jo
mov
push
jbe
pop
mov
adc
jmp
jg
stos
clc
jb
addr16
push
xlat
int3
das
adc
inc
mov
les
sahf
mov
imul
mov
icebp
rorl
aam
leave
inc
cmp
gs
and
lcall
push
adc
jle
cmp
daa
add
push
lret
mov
popa
aaa
cmpsl
add
call
adc
pusha
and
cmp
insl
test
leave
inc
and
cwtl
mov
xchg
fdiv
lret
int3
and
inc
pop
cld
sti
push
sub
push
je
mov
mov
inc
adc
sub
lods
addr16
add
lret
dec
lret
ret
push
rcr
push
jo
cmp
in
cltd
lods
out
cmpsl
mov
xor
jnp
roll
out
adc
adc
mov
sbb
mov
lahf
movsb
testb
mov
je
sbb
fdivs
jbe
and
iret
icebp
xor
icebp
imul
xor
add
cmp
cmp
cld
ds
jge
lret
mov
mov
mov
fstl
lret
inc
xlat
dec
sarb
imull
dec
test
adc
les
push
cmp
nop
inc
das
and
xchg
rcrl
adc
mov
mov
frstor
push
and
sbb
jns
imul
add
iret
lret
mov
sbb
test
rcll
gs
push
mov
sub
sub
and
push
push
call
xor
stos
mov
nop
or
pop
pop
fiaddl
dec
pop
sub
jge
add
icebp
add
out
add
inc
lock
jge
insb
outsl
stc
jecxz
cmp
xchg
xchg
pop
test
stos
cmpsl
sub
inc
push
push
mov
pushf
adc
rcll
mov
roll
or
mov
movsl
arpl
lods
scas
pop
xchg
mov
cmpsl
fisttpll
shl
imul
fiadds
out
mov
dec
jl
mov
push
push
cmpb
aaa
cmpsb
dec
test
pop
mov
push
push
popf
shll
movsb
in
and
adc
jmp
pop
pop
push
repnz
jle
mov
mov
push
inc
xchg
sbb
cs
push
sbb
enter
dec
push
cmp
sbb
cmp
test
mov
fdivrl
ret
popa
sbb
lds
lods
in
sbb
loop
movntq
aas
pop
imul
jp
hlt
movsb
push
push
adc
cmp
in
xchg
pop
int3
call
mov
xchg
add
ljmp
xchg
jle
sub
cltd
jnp
outsb
xchg
lret
push
mov
imul
sbb
ret
xor
or
test
inc
inc
pop
daa
andb
imul
adc
or
inc
fistpl
sbb
ss
popf
pop
out
push
outsb
adc
test
and
cmp
jp
push
jmp
ljmp
rcll
inc
cmp
cwtl
mov
or
or
es
dec
sbb
cld
mov
out
jo
test
ss
adc
out
rclb
rorb
aaa
adc
push
jle
stc
fdivrl
push
dec
aas
daa
shlb
test
leave
mov
and
js
icebp
dec
xor
repz
add
xor
mov
push
mov
aad
out
jge
shl
mov
cmp
in
out
mov
mov
dec
idivb
and
mov
pushf
dec
jae
adc
cmpl
xchg
push
sbb
push
fstp
push
pop
loopne
or
mov
mov
pop
mov
jo
dec
cmp
sbb
subb
and
mov
stos
pop
cwtl
mov
test
pop
mov
outsl
aad
out
cmp
cmc
or
lcall
inc
dec
pop
loop
dec
cltd
xlat
mov
jb
out
mov
and
inc
fadds
jb
push
dec
jnp
repz
lods
cmp
ja
push
aaa
jb
mov
loope
pop
int3
and
mov
cmp
insl
push
repz
and
popf
pusha
rcr
mov
cmp
sbbl
jb
xlat
sub
sahf
fstl
out
mov
test
shlb
test
and
cmp
lock
lret
std
mov
pop
jbe
fs
sub
dec
imul
orl
cmc
dec
enter
mov
pop
ret
xor
js
pop
ss
icebp
icebp
stos
add
jmpw
jle
or
mov
lods
push
jnp
rclb
mov
jne
outsb
mov
sub
cltd
icebp
int3
jge
jmp
out
cmp
xor
iret
sub
cltd
lods
inc
sti
pushl
imul
jmp
sysret
xor
and
cmpb
jecxz
cmp
jmp
add
daa
pop
push
leave
leave
andb
fisttpll
adc
sbb
xchg
mov
pop
and
sbb
mov
aaa
dec
xchg
movsb
and
adc
ret
xchg
add
fdivl
cmp
mov
mov
or
mov
es
sub
test
call
sahf
insb
outsb
out
and
xchg
push
push
sub
pop
xor
sbb
adc
xor
or
mov
enter
xor
div
xchg
popa
loopne
loope
mov
xchg
push
shll
mov
aad
dec
and
sbb
sbb
ja
add
xor
cmp
scas
or
iret
xchg
mov
fwait
xchg
xor
pop
enter
sub
dec
dec
test
jne
mov
pop
insb
or
and
pushf
sbb
inc
mov
xchg
lods
mov
ret
inc
add
xor
leave
ficoms
aad
mov
jecxz
loope
fmulp
fdivs
sbb
stos
es
inc
or
leave
jg
cwtl
cmp
mov
in
pop
cmp
pusha
sub
fisttpll
jle
jl
orl
ljmp
xchg
in
or
mov
or
push
jne
cmp
jp
mov
adc
rcrl
cltd
shll
dec
mov
adc
jo
push
add
out
add
xor
sti
inc
xlat
in
in
fstpl
jo
xchg
mov
and
clc
and
rolb
sub
mov
add
xor
mulb
mov
lock
cli
rcrl
push
adc
dec
xchg
mov
ja
out
faddp
cltd
push
and
adc
arpl
dec
push
js
xchg
dec
sbb
inc
outsl
out
popa
sbb
xchg
xorb
push
shr
popa
and
pop
mov
ss
sub
clc
mov
iret
test
mov
pop
sbb
int
mov
mov
dec
jg
ds
pop
mov
sbb
test
packssdw
pop
xorl
insl
scas
mov
out
lock
pop
push
inc
hlt
daa
or
or
dec
aam
lahf
loopne
inc
adc
or
repnz
pop
repz
testl
div
cs
mov
cmp
xor
cwtl
cs
mov
or
cld
rclb
repnz
lds
ret
mov
ljmp
test
fimull
push
lret
in
les
pop
out
pop
dec
push
mov
or
popf
jo
scas
je
lret
iret
mov
test
or
testl
movsb
lock
pop
popf
mov
lods
xchg
in
xor
jl
push
cltd
mov
divl
nop
imul
mov
jg
jo
xchg
divb
gs
lahf
or
psllw
adc
ret
lcall
mov
pop
pop
in
pop
aad
mov
sub
push
stos
add
sub
repnz
test
inc
jns
cmp
call
repz
ss
cmp
jae
mov
divl
in
lock
sbb
loope
roll
aaa
loop
imul
hlt
xchg
sub
pmaxub
add
dec
push
in
iret
sbb
mov
mov
mov
std
cmp
and
cmp
jbe
adc
into
lds
dec
sbb
xor
sti
loope
gs
sbb
lods
clc
ja
jmp
fistpl
in
in
adc
xchg
data16
fidivrl
fwait
sub
mov
and
lcall
fcoml
inc
cmp
out
pop
int
loop
push
test
and
sbb
mov
aam
into
cwtl
les
lods
rorl
mov
and
pop
push
ret
js
jp
call
fnclex
cld
es
mov
inc
inc
stc
xchg
shlb
pop
outsb
out
pop
jno
xor
add
ds
dec
xor
into
fstpl
test
lea
imulb
fsts
shrb
lea
test
xchg
ret
push
in
daa
xor
mov
loopne
stos
mov
cmp
pop
cmp
loop
pop
aam
or
js
daa
scas
leave
or
mov
dec
mulb
jo
pop
sti
pop
jnp
subl
gs
add
mov
push
dec
sbb
adc
aad
dec
push
dec
mov
pop
dec
dec
fmuls
and
sysexit
and
mov
or
fdivl
adc
xor
xchg
mov
xchg
adc
xor
inc
sbb
cmp
cmc
cmpsl
inc
mov
jle
jle
stc
jmp
cltd
popf
xor
out
pop
xor
pop
inc
lods
imul
mov
sbb
pop
push
sub
xor
xor
test
cmp
stc
mov
mov
hlt
mov
leave
sbb
fsub
mov
mov
mov
push
jns
push
dec
inc
push
scas
pop
push
xor
shrb
out
xchg
add
je
cmc
mov
cltd
test
adc
outsb
pop
out
push
cltd
and
mov
sub
sti
jae
push
fsubrp
sbb
adc
sub
sub
addr16
mov
test
lahf
sbb
cmpsl
repz
and
cli
mov
and
int3
dec
out
lret
cmp
jecxz
add
xchg
jae
inc
mov
call
in
pop
fadds
std
push
ja
pop
push
fs
lds
xor
cmp
mov
fisttps
jp
fmull
dec
inc
leave
fmul
les
repz
std
dec
ja
and
out
xchg
adc
test
lcall
mov
adc
pop
adc
es
add
xor
adc
ja
out
push
js
add
jb
iret
lock
lds
dec
jmp
jl
mov
divb
outsl
push
int
jns
out
stc
cwtl
sti
cwtl
inc
or
test
imul
mov
jnp
xchg
mov
xchg
nop
test
sti
dec
ss
mov
sti
dec
push
fwait
insl
test
ret
mov
jnp
mov
pop
lahf
inc
mov
mov
jl
and
ljmp
in
subl
lock
xchg
jecxz
inc
xchg
loopne
sub
sarb
stc
leave
xlat
adc
dec
mov
out
shlb
inc
fldlg2
jp
cmp
enter
xlat
mov
jbe
test
mov
xchg
ja
enter
sbb
xlat
and
jmp
int
testl
repz
sbb
jo
add
xchg
or
inc
jl
mov
out
ret
out
mov
mov
or
movsl
cld
cmp
pop
repnz
jne
jmp
jl
mov
mov
mov
sahf
mov
dec
push
lock
jle
movsl
roll
lret
loop
mov
stos
push
subl
pop
pushf
outsb
mov
repnz
dec
cmp
lret
mov
and
jae
mov
or
aas
loop
pop
cmc
lahf
daa
scas
mov
and
push
mov
push
ret
outsb
jmp
mov
sbb
das
mov
jl
imul
inc
jle
mov
divl
jmp
or
xor
or
push
andb
xchg
xchg
xor
test
add
aaa
add
cmp
in
adc
xlat
push
test
scas
jnp
aam
movsb
mov
add
cmc
cld
stc
mov
ja
clc
icebp
dec
arpl
push
jp
cs
fmull
test
stos
add
lcall
rcll
popa
aaa
sbb
ljmp
mov
mov
dec
mov
push
in
mov
sbb
inc
data16
push
lret
mov
repz
and
sbb
cmp
add
dec
cmp
out
sub
aam
xchg
data16
aad
loopne
sarb
mov
sti
dec
div
jg
push
dec
mov
loope
pop
dec
loope
repnz
cmp
pop
or
push
jmp
imul
sbb
mov
out
iret
push
adc
clc
mov
hlt
or
leave
inc
ja
call
iret
mov
mov
cmp
fchs
jne
xor
cmc
pusha
imul
push
lea
addb
jle
and
adc
mov
or
stos
pop
cmpsl
push
sub
pop
or
int
sub
jecxz
test
enter
dec
adc
inc
popa
cmp
jmp
pop
out
mov
xor
imul
scas
push
idiv
mov
pusha
jl
and
mov
sbb
inc
mov
inc
mov
mov
movsb
lods
daa
pop
notb
mulb
push
jp
mov
in
jb
mov
hlt
xor
icebp
and
cmp
es
cmpsl
add
js
into
mov
push
fucomip
outsb
lret
and
sbb
jg
fisttpll
stos
jmp
add
adc
out
gs
in
add
inc
ljmp
sbb
cltd
test
scas
pinsrw
incb
aas
pop
or
sbb
adc
hlt
lock
testb
mov
xchg
jae
add
test
mov
fnstenv
ja
lds
mov
xchg
sub
jae
and
lcall
outsb
push
add
pop
pusha
cmpsb
jmp
mov
loopne
xchg
loope
les
in
push
idivb
divl
fcomi
xchg
cmc
into
cmp
xor
aaa
fucomi
jmp
pop
or
stos
or
test
movsl
roll
loopne
cmp
mov
push
and
push
adc
ret
cmpl
cs
enter
bound
test
add
push
mov
int3
xor
pushf
pop
cmp
pop
push
test
fsubp
vdivsd
cmp
mov
jecxz
and
push
int3
dec
push
mov
inc
decb
dec
adc
rol
mov
and
dec
inc
push
imul
data16
aam
insl
rorl
leave
xchg
mov
int
icebp
mov
nop
loop
add
dec
pop
rcrb
sahf
sbb
cmp
mov
ret
call
iret
in
popa
xchg
mov
call
mov
mov
xor
stos
sub
insb
fildl
ret
pop
inc
sub
fdivl
dec
or
scas
sbb
mov
lds
leave
mov
xor
mov
imul
mov
in
sbb
mov
sbb
mov
lods
push
mov
outsl
xor
les
loop
mov
lock
mov
pop
std
scas
fbstp
fmull
rcrl
ret
add
fmuls
dec
fistpll
in
jecxz
aam
aam
das
stos
jge
cs
out
lds
adc
jl
aas
xor
lret
sub
mov
idivb
xchg
shrl
pop
sti
mov
in
int3
sbb
clc
fcmovnbe
mov
inc
lret
adc
jp
sbb
stos
test
and
push
jge
inc
cmp
out
xorb
sti
mov
dec
je
lret
xchg
jp
and
mov
lods
jbe
lds
adc
nop
ret
dec
cmp
jne
adc
jg
andl
sbb
lea
add
mulb
xchg
insl
sub
mov
js
jne
cmp
cli
lahf
aaa
mov
insb
xlat
push
aas
push
into
add
pop
ret
call
jbe
pop
mov
cli
cli
mov
mov
mov
xor
jb
mov
mov
jne
or
push
mov
dec
xor
or
adc
fcmovb
pop
xor
xchg
fisttps
ret
ja
fmulp
and
pop
sub
sahf
adc
xlat
ja
xlat
lahf
imul
and
fdivl
lods
fldl
xchg
mov
arpl
or
pusha
fs
mov
mov
ss
xchg
insb
or
xor
movsl
or
stos
rcl
jp
mov
cmp
sub
sub
icebp
xchg
imul
fsubrs
je
loop
cmp
pop
adc
adc
faddp
stos
push
outsl
js
data16
jno
movsl
xor
fcomi
xor
xchg
nop
xor
or
jns
inc
push
jnp
repnz
sub
rolb
pop
sub
out
sbb
rolb
sub
mov
xchg
add
xor
lds
pop
rclb
sbb
stos
adc
lock
into
cmp
push
arpl
dec
mov
nop
sbb
sub
stc
xor
cltd
fidivrl
fwait
mov
push
inc
inc
iret
xchg
xor
imul
add
outsl
movsb
xchg
mov
lret
in
mov
aas
cmpsl
out
arpl
into
ret
xchg
xlat
mov
xorb
push
int3
jmp
jne
sbb
insb
scas
xor
fiaddl
mov
fisubs
jb
push
flds
jmp
das
icebp
xor
push
xor
mov
imul
xchg
call
scas
cld
adc
pusha
mov
fstl
mov
mov
push
or
and
cmp
in
subb
dec
rcrb
out
mov
sub
or
mov
mov
sub
fstl
xor
fstl
es
sbb
out
pusha
sub
jb
test
adc
jg
leave
mov
pop
cmpsl
psrld
mov
pop
mov
adc
js
xchg
mov
pop
push
sbbl
mov
stos
pop
rclb
inc
jl
or
and
mov
je
loope
jnp
jno
decb
out
xchg
pusha
sub
lock
adcl
push
mov
jmp
lds
add
pop
fcomps
pop
push
pop
in
inc
cwtl
or
push
add
inc
fidivs
or
mov
shlb
add
loop
insb
add
and
repz
pop
out
mov
xchg
cmpsl
jne
into
stc
sti
mov
inc
mov
cmp
cmp
mov
cmpsl
adc
adc
jmp
cmp
pop
jl
int
mov
jmp
cmp
outsb
lahf
xchg
ror
mov
dec
or
jl
mov
inc
push
fwait
shl
pushf
mov
jmp
add
repnz
out
mov
cmp
inc
repnz
movsb
push
lods
test
pusha
pusha
jmp
or
outsl
dec
cs
mov
pop
adc
xor
pop
pop
out
mov
fwait
push
adc
fldt
jbe
test
inc
and
movsl
in
int
xchg
test
sahf
mov
movsl
imul
movsb
fnstenv
mov
cmc
test
inc
hlt
dec
iret
loope
sbbl
sub
push
orl
std
add
sub
sbb
adc
push
mov
mov
sbb
mov
mov
and
icebp
sti
into
mov
mov
push
cmp
or
add
or
mov
leave
punpckldq
shlb
iret
jno
lock
sub
inc
add
outsl
enter
cli
push
push
sbb
pop
or
or
mov
pop
jp
out
pop
add
dec
repz
pop
rcl
repz
xchg
int3
sarb
dec
loopne
lret
popf
push
inc
xchg
in
push
pop
pushf
xor
lea
add
pop
jmp
or
sub
xorb
mov
add
add
insb
add
sub
xchg
add
jnp
fidivs
push
out
mov
test
xchg
add
xchg
insb
and
pop
add
adc
in
pop
les
cli
bound
ret
mov
mov
ficoml
cmp
std
inc
repz
jg
movzwl
and
leave
inc
xor
adc
lock
outsb
das
loop
xorb
rorl
dec
jle
insb
push
mov
lods
daa
cwtl
inc
xchg
xchg
cltd
xor
cmp
adc
fcoms
xor
lret
or
cmp
xor
stos
and
jmp
sub
mov
sbbl
pop
scas
stc
sbb
and
push
test
sti
mov
xacquire
jp
gs
push
les
int
in
or
rorl
xor
addr16
sahf
mov
js
lods
pop
data16
jno
cmp
and
cmp
pop
shll
xor
mov
push
sub
pusha
sub
mov
sti
adc
fists
push
mov
ret
cmpb
adc
cld
mov
jmp
sbb
scas
test
cmp
mov
pushf
mov
fdivp
fwait
incl
xor
subl
movsl
addr16
mov
aas
mov
int3
cmc
jb
xlat
adc
sub
loop
mov
sub
js
pop
cmp
xchg
jbe
fsubr
or
fsubrl
fbstp
imul
ret
movb
sub
jg
dec
adcb
lcall
add
mov
mov
loope
pop
std
loopne
mov
shrb
mov
in
fstl
mov
movsl
jg
adc
xlat
mov
scas
jns
dec
add
pop
mov
sbb
fildll
mov
repnz
outsb
int3
cs
mov
inc
mov
sub
mov
std
adcl
mov
push
jmp
inc
inc
daa
das
mov
xorb
mov
jb
xchg
cmpsb
int
sub
jmp
jne
dec
hlt
mov
xchg
add
les
xor
in
test
leave
clc
ss
jg
bound
pop
pop
inc
jae
mov
shll
push
adc
addl
rorb
out
inc
es
xchg
mov
inc
data16
adc
mov
repnz
mov
fucompp
das
enter
mov
test
cltd
pop
jns
xchg
mov
mov
xor
cmp
test
in
and
push
mov
das
xor
sbb
icebp
push
sbb
pop
and
iret
cltd
movsl
in
movsb
adc
pop
inc
inc
jle
push
js
div
push
xor
out
rol
cmc
adc
or
pop
shrb
lods
mov
lea
mov
clc
jle
push
pop
shrl
sbb
xor
or
inc
push
fucomi
test
shl
stos
pop
notb
push
jp
inc
xchg
stos
lea
shlb
into
jge
jp
mov
cli
mov
lea
add
push
test
std
pop
jbe
andl
shrl
jmp
sub
mov
adc
xchg
xchg
jg
pusha
inc
jl
test
iret
or
and
inc
ss
sar
inc
and
mov
mov
jo
movsl
lret
xchg
cmp
and
push
daa
frstor
movsb
rclb
popf
cmc
mov
gs
notl
sub
inc
rcr
fdivrs
into
and
mov
push
sub
mov
es
mov
pmullw
jmp
clc
adc
xchg
lods
testb
movsb
push
mov
mov
in
cmc
icebp
jmp
ss
mov
or
jae
sub
dec
mov
add
cmc
jbe
shlb
pop
fs
aad
rcll
loopne
cmc
xchg
es
hlt
inc
xlat
aas
add
leave
roll
rolb
cmpsb
incb
dec
add
rcll
pop
mov
lock
cli
popf
aam
push
lret
pop
push
cmpsl
xchg
test
push
les
lret
fmuls
outsl
and
movsl
pushf
pop
mov
mov
cmp
sti
mov
push
or
mov
inc
mov
shl
xchg
ret
sbb
loop
add
jmp
enter
jns
roll
mov
push
jbe
mov
sub
push
repz
int
sbb
push
inc
leave
sahf
pushf
mov
cmp
push
jl
push
rcll
push
mov
and
test
stos
xchg
mov
mov
push
mov
dec
push
mov
xrelease
call
xchg
mov
xor
sarb
insb
mov
dec
out
nop
xor
cmp
sub
cmp
cmp
sahf
cmpsb
test
shrb
scas
mov
pusha
xlat
lret
data16
imul
xor
push
push
out
pop
es
pop
mov
popf
adc
js
sbb
pop
mov
add
sbb
call
insb
jl
sub
cmp
sahf
jb
mov
jg
xor
pop
pop
neg
repz
movsb
nop
jae
aad
mov
ss
pop
sub
jle
jae
hlt
icebp
outsl
push
adc
call
out
test
arpl
mov
mov
test
repz
out
mov
roll
xchg
jecxz
pop
dec
fs
loop
in
repnz
and
add
push
lods
push
test
xor
enter
inc
inc
cmp
dec
mov
in
mov
mov
sbb
test
aam
jl
adc
sahf
fstl
push
adc
call
mov
mov
lret
pop
adc
and
shlb
test
inc
push
mov
ljmp
negb
pop
mov
lret
sbb
xlat
gs
mov
jne
movb
lret
fnstcw
mov
dec
jbe
sub
mov
sub
xchg
dec
sub
adcl
ror
inc
insb
cmp
adc
stc
in
mov
or
js
mov
std
or
dec
inc
xor
dec
mov
cli
jl
enter
inc
lret
aad
hlt
push
dec
popf
mov
mov
aas
dec
dec
mov
sbb
push
in
xor
jnp
mov
xor
add
aad
push
push
add
into
add
mov
and
push
scas
fistps
aaa
enter
jnp
mov
test
repz
mov
nop
inc
mov
sbb
cmp
clc
insb
mov
inc
add
out
mov
fdivp
psllq
popf
xchg
int
or
scas
inc
sbb
daa
fdivrs
aaa
out
shlb
cmp
inc
test
adc
stc
jmp
cmpb
mov
lds
repz
dec
jle
lret
push
negl
cmp
adc
add
fwait
repz
popa
pushf
cmpl
addr16
ss
adc
lods
call
es
lahf
jg
and
jne
dec
lahf
fcom
fdiv
imul
imul
ret
data16
push
call
pusha
dec
pushf
mov
dec
and
fistl
out
push
pop
sahf
mov
add
stos
mov
imul
lahf
or
insl
popa
xchg
int3
mov
andl
test
sub
and
mov
sarb
repnz
mov
lcall
scas
jecxz
lret
xchg
out
loope
lock
jnp
stos
mov
pop
leave
fildl
repz
sbb
mov
jns
fdiv
ficomps
les
iret
add
and
fisttpll
test
push
push
inc
outsl
es
cs
add
addr16
adc
xchg
inc
xchg
loopne
dec
mov
jno
ss
push
lock
das
lock
loopne
sbb
sbb
jg
jne
cli
scas
sub
lods
or
push
sbbb
push
cmpsb
sahf
test
ljmp
inc
mov
add
aam
xchg
cmp
dec
inc
fadds
bound
mov
push
jmp
ror
shlb
xorl
dec
cmpsl
jle
jb
in
mov
mov
mov
cmpsl
dec
cmp
int3
imul
loop
add
dec
mov
scas
dec
adc
jp
jnp
in
push
cld
jbe
into
jp
mov
jmp
xchg
insb
mov
pop
out
push
scas
xor
lahf
add
jbe
mov
repnz
sbb
pop
jo
insl
repz
inc
insl
mov
dec
fidivrl
lret
data16
inc
cld
mov
mov
inc
imul
adc
push
mov
arpl
dec
mov
arpl
enter
or
fwait
and
mov
push
push
insb
movsl
test
repnz
pop
push
mov
cmp
inc
xchg
mov
adc
dec
roll
stos
xor
shll
add
arpl
ficoml
fisttpl
lds
loopne
stos
and
pop
outsl
mov
pusha
es
ds
dec
mov
or
fwait
mov
es
adcb
fwait
aas
cmp
push
js
je
mov
stc
mov
and
pop
jge
jno
jo
ret
in
dec
lods
cmpsb
out
bound
les
mov
stc
mov
imul
mov
ret
jnp
aad
data16
mov
inc
jo
insl
mov
out
pop
jp
repnz
lret
aas
xor
push
in
cld
pop
sub
fidivs
adc
mov
shl
aam
jl
sbb
sbb
sbb
fildll
scas
xchg
cmp
hlt
rolb
or
cmp
push
cmp
xchg
js
fs
push
rcr
xchg
scas
in
add
test
out
jmp
aaa
daa
scas
je
xor
mul
in
sub
pop
lcall
and
cmp
fisttps
add
out
mov
cltd
or
pop
test
mov
loope
loopne
ficoms
aam
adc
push
outsb
xchg
cltd
fisttps
dec
int
repz
pop
testl
pusha
sbb
mov
xchg
jmp
add
xchg
mov
lcall
jno
pop
fcoml
orl
pop
std
cmp
inc
mov
test
out
add
mov
rorb
sbb
pop
cs
scas
xchg
fists
loopne
push
mov
cwtl
test
das
fsubl
into
jno
arpl
xchg
jbe
push
mov
adc
leave
push
xchg
ja,pn
fldl2e
mov
dec
int3
mov
xor
shll
pop
clc
mov
cwtl
inc
xchg
and
sub
hlt
jnp
add
sub
cltd
add
pop
inc
cmp
xlat
fstpt
jmp
fcmovb
push
pop
jmp
push
adc
mov
pop
and
mov
sbb
inc
popa
adc
and
cmp
mov
loop,pn
sub
stc
xor
leave
xchg
sarb
insl
dec
sbb
imul
cmpsl
dec
push
cmp
scas
xor
push
mov
movsl
aad
pop
and
xchg
movsl
sbb
or
ficoml
inc
popf
xchg
daa
cmpsl
les
mov
aam
push
jmp
dec
test
imul
mov
movsb
popa
mov
fs
dec
cmpsl
imul
or
xchg
lret
mov
cmp
pop
mov
push
sbb
scas
orb
decl
cld
xchg
inc
jg
mov
imul
mov
call
mov
mov
and
mov
sub
sahf
rcrb
repnz
out
jmp
xchg
inc
xchg
lods
xchg
out
test
or
in
fs
dec
push
loop
pop
dec
fwait
push
shrl
cmp
sahf
mov
es
pop
sbb
inc
jns
jge
shlb
or
xchg
arpl
adc
out
cmp
lock
add
pop
stos
add
loope
push
lds
jle
and
xchg
mov
push
sbb
xor
out
mov
jge
cmp
lret
cmp
imul
push
xor
cmp
sarb
pop
add
and
test
mov
pop
pop
sub
adc
jnp
xchg
lock
das
lahf
shl
mov
popa
add
popa
mov
aam
daa
jge
loope
aam
aas
sbb
add
xlat
push
push
sti
dec
pusha
jo
pusha
repz
mov
je
outsl
sbb
pop
loopne
jne
pop
pusha
push
xchg
add
inc
ret
jge
push
je
xor
push
dec
lcall
mov
cmpsl
xchg
lds
dec
loopne
xor
int3
rclb
xchg
push
dec
std
out
dec
sarl
jl
jns
mov
test
fcoms
jo
mov
sbb
sbb
jge
jae
or
punpckldq
movsb
cwtl
inc
movsb
mov
sarb
adc
rorl
xchg
fisubrl
nop
pusha
dec
hlt
inc
dec
xchg
lods
icebp
jo
cmpsb
xor
and
repnz
adc
mov
mov
call
popf
push
add
and
xorl
int3
sbb
ja
repnz
or
push
nop
addr16
imul
aad
repz
imul
lret
dec
push
jl
fcoms
inc
and
pop
or
adc
xor
pop
push
push
mov
and
sahf
cmp
stos
pusha
and
adc
dec
push
ljmp
push
inc
push
adcl
jle
sub
out
and
dec
cmpsb
xchg
ret
in
int3
add
adc
sbb
repnz
or
je
out
cs
mov
loop
push
incb
mov
arpl
fsubl
pop
inc
mulb
in
mov
dec
xlat
mov
add
leave
fdivrl
imul
ss
and
fistps
fdivl
test
stos
mov
sbb
and
movsb
jmp
lea
mov
lret
insl
pop
adc
ja
cmp
negl
sbb
sub
outsb
mov
rcr
stc
ja
mov
fisttpll
rclw
test
das
daa
push
rcrb
inc
stc
fwait
jmp
insl
inc
push
jecxz
mov
iret
mov
push
xor
cmp
mov
jl
popa
mov
fidivs
inc
xor
dec
cmp
jg
out
in
fiadds
jo
sub
cmc
stos
into
inc
scas
cmpsl
mov
cmpsb
inc
dec
and
fwait
std
call
dec
and
sub
jmp
jnp
nop
mov
adc
inc
repnz
dec
jecxz
push
jb
push
fchs
inc
pop
and
fbstp
lcall
dec
mov
lcall
ss
aad
aas
movsb
movsb
jb
sub
cmp
push
push
mov
popf
push
out
adc
sub
test
movsb
aam
mov
neg
arpl
cmp
sbb
fmull
shll
test
jbe
in
clc
push
mov
lea
push
ret
sahf
fs
data16
addr16
push
out
cmp
xchg
ljmp
insb
sub
pop
inc
xchg
mov
fdivrp
mov
xchg
call
xchg
inc
or
push
out
pop
arpl
xlat
dec
or
fisubl
insb
fmull
xchg
nop
lret
xor
jge
mov
ret
mov
xchg
pop
sbb
mov
push
out
pop
fdivrs
pop
test
popa
jno
inc
mov
out
rorb
loope
push
shrb
jo
lea
mov
icebp
clc
outsl
inc
loop
xchg
mov
clc
fcomps
mov
testb
js
mov
adc
mov
insl
dec
int3
jge
mov
stos
imul
dec
add
movsb
jno
pop
sbb
pop
xchg
clc
movsb
daa
jno
sahf
stos
sub
ja
lds
out
jecxz
dec
dec
mov
and
xchg
adc
enter
call
into
imul
push
cld
loop
mov
adcb
mov
jge
out
aad
sub
not
pop
jo
imul
movsl
cmp
add
aam
ljmp
pop
pop
and
pop
repnz
fwait
inc
xchg
fnstcw
pushf
and
or
push
sahf
icebp
or
add
int3
pushf
push
pop
iret
aad
xchg
stos
daa
mov
cmp
test
push
jmp
cmp
xchg
mov
icebp
jle
and
push
jbe
jb
dec
out
adc
xor
fs
loop
sbb
lret
cs
or
or
sbb
jbe
push
lret
push
push
mov
outsl
dec
jb
sti
xchg
movsl
cbtw
call
test
add
add
ja
sbb
movsb
pop
pop
lret
mov
scas
icebp
fimull
clc
repz
xchg
push
pushf
mov
cld
ret
sub
cmpsb
das
lea
mov
in
sbbl
insl
or
sub
sub
xchg
sbb
push
cmp
sbb
mov
lahf
fsubs
addl
push
dec
iret
dec
cmp
outsl
or
adc
sti
cmp
inc
or
pop
in
enter
add
ss
fucomi
xor
loope
mov
sub
xor
sbb
ljmp
jmp
push
shl
pop
dec
mov
and
adc
std
out
and
shl
fwait
movsb
push
pushf
lods
cmc
aam
dec
push
inc
js
push
lds
test
stc
lods
pop
sbb
add
mov
jo
ret
in
test
lret
inc
cs
mov
mov
jo
std
jno
pop
mov
outsl
dec
adc
xchg
xlat
aaa
mov
or
test
and
ror
mov
ret
push
xchg
sub
fnstsw
jns
rorl
xor
xchg
std
testl
adc
add
mov
push
mov
cmp
pop
rorb
pop
or
xor
dec
inc
sub
xchg
mov
push
fdivs
sbb
cmp
pop
inc
stos
mov
adc
jg
jmp
stos
cwtl
add
xor
push
pop
shll
lods
xchg
shlb
sbb
jae
push
xor
stos
adc
cs
pop
adc
inc
and
notl
or
adc
and
jne
pop
loop
outsl
bound
shll
cld
scas
aam
loope
lcall
jno
xchg
sub
xor
jno
mov
or
outsb
xchg
sub
sti
xor
inc
aam
pop
mov
shr
inc
xor
or
jnp
push
aas
rolb
cld
xchg
or
push
pushf
dec
hlt
dec
inc
dec
out
xchg
or
and
out
movsl
stos
add
mov
xchg
daa
jg
mov
cltd
icebp
jmp
js
out
mov
outsl
das
leave
ljmp
push
hlt
mov
icebp
ljmp
sbb
push
xchg
fnstsw
jecxz
xchg
or
loope
cmp
mov
call
insb
push
cmpsl
scas
sbb
cmp
outsl
js
in
adc
in
ss
fs
xlat
divb
xchg
push
mov
push
stos
dec
cs
iret
into
inc
jecxz
push
cmpsb
pop
add
lea
movsl
mov
and
stos
mov
or
push
fwait
cmp
push
mov
ja
imul
pop
push
shll
jnp
out
rcrb
jo
dec
rcrb
cltd
int3
ret
cs
cmc
xor
fsub
lret
cmpsl
je
push
mov
dec
inc
xchg
in
out
insl
nop
jg
mov
enter
ds
in
divb
pop
in
fs
jmp
stos
lods
js
inc
stos
ds
in
leave
ss
lods
inc
lea
sbb
inc
cmp
roll
push
out
sub
pusha
iret
ss
es
jne
push
mov
and
movsb
push
mov
jb
sarl
xor
push
cmp
jle
call
int3
dec
xor
sub
mov
mov
add
mov
leave
or
xchg
nop
push
jbe
mov
outsb
cmpsl
cmp
cmp
mov
jb
int
xchg
mov
fldl2e
inc
push
inc
sbb
add
xchg
movsb
into
lea
test
int3
mov
ret
in
lods
cmpsl
mov
push
push
sub
rcrb
or
in
lock
add
inc
fcomps
mov
push
stos
jbe
data16
sbb
push
bound
or
jns
mov
insb
mov
xor
call
mov
inc
dec
aas
ficoml
lods
or
jb
faddp
lods
lea
out
xor
in
push
sbb
pop
xor
xorl
mov
jmp
cmp
mov
sub
adc
mov
pop
jb
push
mov
insl
mov
mov
testl
sbb
dec
cwtl
pop
jno
pop
bound
fsubl
adc
pop
mov
sub
sbb
push
or
xor
adc
jae
xchg
lret
add
jecxz
inc
push
sub
xchg
js
and
inc
insl
test
adc
aam
mov
sbbl
enter
pop
cwtl
iret
sahf
lds
fcomp
lods
add
push
pop
hlt
or
xchg
push
pop
mov
push
testl
adc
mov
aaa
pop
movsl
lcall
or
lcall
push
xchg
lock
les
sbb
sub
or
outsl
push
xchg
cmpsb
faddp
repnz
lods
cmp
add
jae
mov
jmp
jne
cmpsl
jmp
cs
outsb
jle
shrb
push
dec
mov
ror
sub
rcl
daa
mov
dec
mov
mov
mov
fnstenv
add
andl
mov
repz
movsb
xlat
pop
data16
ss
pop
dec
repz
vmovhps
mov
dec
cmpsb
pop
lea
cwtl
pusha
push
jne
ss
pusha
rcrl
or
repz
jbe
fs
sbb
inc
ret
paddq
pop
je
loope
fsubrl
test
mov
movsl
push
inc
push
dec
add
dec
ret
ljmp
inc
add
mov
jmp
out
in
sbb
lods
jbe
leave
dec
mov
jne
jno
cmp
add
pop
mov
push
ljmp
push
imul
mov
pop
int
in
nop
lods
fidivs
cwtl
xchg
dec
pop
ret
xor
mov
jecxz
dec
movsb
dec
pop
fcompl
call
jl
jno
fists
nop
or
xchg
xor
loope
dec
imul
xchg
int3
push
ret
xchg
adc
mov
pop
inc
pop
jge
rcr
sbbb
fs
jp
xor
scas
mov
jecxz
push
inc
ret
std
add
mov
std
mov
add
jge
in
push
andb
int
sbb
movb
jecxz
mov
cli
jmp
and
mov
adc
pop
jae
mov
sub
imul
pusha
pop
mov
lds
sub
pop
movsb
jne
lds
jnp
push
les
lret
fisubrl
in
loop
push
dec
mov
or
mov
mov
testl
je
cli
pop
mov
gs
and
rorb
dec
adc
cs
xor
xlat
fidivrl
adc
fdivs
xor
lods
pusha
std
test
add
rorl
test
in
jl
mov
leave
jmp
mov
mov
aad
test
hlt
jge
es
adc
sbb
jae
mov
xchg
arpl
push
push
lock
adc
add
orb
js
dec
test
rcr
out
ljmp
xor
mov
mov
stos
pop
push
xchg
gs
scas
enter
mov
fbld
fimuls
mov
sahf
movsl
sbb
aad
cmp
sahf
mov
sub
cmc
jbe
lock
sub
jb
test
jo
addr16
gs
aam
es
dec
xchg
cmp
sbb
push
fmulp
mov
jge
xchg
aam
mov
fs
push
push
and
push
push
or
and
pop
xchg
icebp
mov
int
adc
enter
gs
scas
test
lret
mov
xchg
mov
in
std
xchg
fmuls
jp
jno
fidivrs
or
pop
stos
pusha
xchg
pop
dec
scas
daa
int3
gs
or
lods
ljmp
aam
hlt
sub
ja
inc
lret
inc
mov
xor
jp
xchg
ss
stos
inc
push
mov
adc
pusha
pop
adc
stos
stos
mov
mov
shlb
ljmp
out
gs
mov
mov
shrb
testb
ror
out
aam
dec
mov
cmc
push
pop
pop
gs
js
inc
mov
push
mov
in
mov
xor
or
jnp
sbbb
bswap
jl
fcompl
push
popf
ret
push
and
les
jne
enter
sbb
jo
popf
jp
out
xchg
pop
pop
sbb
loopne
les
fstpl
mov
xor
and
out
int3
ss
jecxz
outsl
mov
inc
imul
rcrb
loop
push
daa
dec
gs
mov
dec
xor
sahf
sbb
or
lods
or
adcb
jae
push
loop
daa
xor
push
inc
addr16
fisubrs
aad
arpl
sbb
lcall
insb
push
out
mov
fistps
aas
mov
das
jae
stc
jae
test
data16
inc
testl
add
es
movsb
out
or
sbb
dec
mov
mov
push
popf
xor
sahf
in
insl
jmp
cmp
mov
dec
cmp
lahf
decl
fwait
sub
lahf
rcrb
mov
outsb
lcall
adc
shl
pop
push
mov
xchg
out
std
les
into
lods
sti
out
and
test
xchg
or
insl
dec
mov
add
mov
imul
cmp
clc
mov
stc
scas
sbb
sub
mov
data16
lret
inc
clc
inc
test
cs
fsubrs
outsb
mov
sub
jb
sbb
out
push
fildll
fadds
inc
add
add
xor
fstpl
cmp
xor
out
aad
movsl
mov
inc
xchg
js
xchg
adc
ljmp
test
mov
cmp
outsl
jmp
inc
cmc
pop
lds
cltd
inc
push
mov
push
pusha
cmp
aad
pop
inc
xor
jb
cli
and
cwtl
mov
jb
pop
inc
mov
cld
nop
in
out
mov
scas
pusha
fwait
cs
cmpsl
xor
popf
cmp
xor
push
pop
fimull
mov
ja
fcoml
aaa
mov
or
add
jo
push
add
ret
mov
add
outsl
or
pop
popf
xchg
out
in
mov
int3
shrb
or
out
or
inc
mov
mov
mov
shll
dec
inc
push
jns
push
imul
xchg
sub
mov
xlat
mov
test
lds
loopne
and
jge
mov
pop
add
int
jo
jp
addr16
xor
lock
cmc
inc
outsb
pop
mov
adc
in
mov
cmp
movb
push
add
mov
test
popa
mov
jno
pop
aaa
in
jbe
lods
sbb
outsb
cli
je
jg
mov
aad
adc
and
add
dec
icebp
int3
adc
icebp
push
jns
jle
adc
popa
push
pop
add
cmc
repz
inc
cli
push
loop
xor
jno
mov
jge
cmc
xchg
xchg
aad
inc
adc
insl
adc
testl
mov
shl
and
mov
push
ret
fsts
lahf
subl
xor
adc
push
pop
scas
xor
xchg
and
mov
andl
pop
jae
mov
fsts
xchg
xor
inc
je
inc
int
pop
xchg
cmc
mov
clc
pop
jg
xor
pop
mov
popa
lret
fisttpll
mov
ljmp
std
repz
and
cmp
cwtl
fisttpll
pop
lock
adc
or
lods
jbe
dec
push
sub
pop
decb
jg
mov
mov
inc
jbe
and
add
mov
fistl
ret
jo
dec
xchg
xor
mov
adc
out
jae
aas
mov
fsubrs
clc
iret
aad
push
add
icebp
jne
or
cmc
cmp
inc
mov
subl
lds
sbb
scas
shrb
inc
jb
inc
xlat
adc
js
mov
out
mov
fldln2
les
jecxz
addr16
test
mov
int3
loop
or
adc
jnp
jnp
cmpsl
leave
adc
popf
xchg
mov
add
repz
mov
cmp
es
lret
adc
jno
adc
or
int
xchg
push
mov
cmp
enter
dec
arpl
xchg
movsb
xlat
or
dec
mov
stos
repz
inc
push
loope
cmc
sbb
lods
adc
psrlq
dec
mov
test
cmp
push
test
mov
sti
or
popl
sbb
mov
jle
and
repnz
fdivrl
popf
pop
and
ficoml
sub
sub
mov
call
add
jb
dec
push
inc
and
jo
out
pop
outsl
and
aad
push
out
jb
inc
in
inc
clc
dec
insl
or
inc
lods
test
mov
pop
or
adc
js
inc
xor
jge
pop
pop
jg
cmp
scas
sbb
dec
cmpsl
inc
sub
xchg
xor
sub
mov
mov
add
jns
pop
js
and
push
jge
xor
pop
lock
mov
sub
lcall
fwait
es
call
pop
out
fadds
mov
xor
mov
inc
imul
mull
iret
sbb
out
xchg
lret
pusha
sub
lcall
in
popf
dec
and
ss
add
xor
vmovd
push
jle
jne
lcall
push
bound
cmp
xor
out
and
lock
imul
xor
mov
lahf
adc
sbb
cmp
sub
cwtl
or
movsb
ret
nop
neg
mov
and
hlt
xlat
dec
popl
lock
push
lods
mov
hlt
fs
cmp
scas
aad
cmp
insb
dec
fstpl
and
into
leave
std
imul
mov
mov
push
pusha
loopne
sub
xchg
std
shll
jo
pop
push
cmp
jb
xor
rcrb
iret
cld
mov
lret
jbe
test
jns
push
hlt
inc
push
enter
iret
or
popf
iret
inc
cmp
test
out
push
scas
push
je
out
flds
xor
clc
cmc
push
mov
loopew
xchg
adc
mov
and
out
lea
jecxz
add
loop
xchg
ret
into
push
jg
inc
arpl
imul
add
fs
ret
jg
cmp
cld
xor
test
xchg
adcl
and
sbb
aaa
mov
data16
cli
or
shrw
mov
lahf
push
mov
popa
lods
push
mov
mov
dec
jns
out
pop
pop
arpl
nop
rcrl
out
std
out
xorl
cmp
ud2
mov
movb
test
cmpb
inc
jno
es
lret
in
fwait
pop
pop
or
jae
out
jle
ret
pop
jbe
cld
imul
imul
loop
inc
popf
popf
jbe
div
and
ficoms
push
test
iret
outsl
dec
pop
aaa
out
call
movsb
in
jge
mov
or
lret
cmp
jne
push
imul
pop
cld
ss
aad
arpl
xchg
xor
adc
jg
mov
pop
cli
test
andb
mov
and
out
call
sub
andb
loopne
out
outsb
fsubrs
or
mov
cmp
pop
jmp
and
sbb
dec
fwait
dec
mov
mov
xchg
jae
hlt
sub
fldenv
cs
sbb
inc
add
mov
int3
cmpb
int
or
rcl
movsb
pop
into
pop
sahf
and
out
out
ss
mov
dec
pop
out
push
and
or
loopne
cmp
inc
stc
subl
pop
test
popa
rorl
xor
adc
cmpsl
out
or
fidivs
movsl
je
push
cmc
int
add
pop
ljmp
xchg
jo
jge
sbb
mulb
sub
dec
xor
add
popa
aaa
add
mov
lcall
xchg
loop
je
mov
outsb
mov
sarb
pop
pop
inc
lds
or
adc
mov
push
sbb
xchg
sahf
mov
xchg
xchg
fs
push
inc
mov
jo
cmp
pop
jb
loopne
into
dec
fwait
cmc
mov
dec
rcl
sahf
jecxz
in
movsl
jo
popa
sbb
out
div
cmovb
mov
sbb
sbb
fsubr
sahf
roll
mov
insl
jno
jle
and
pop
mov
mov
mov
or
push
fnsave
outsb
or
sbb
ja
xchg
and
ds
iret
popf
test
das
push
aas
popf
sarb
or
movntps
shl
and
push
js
jg
inc
jae
pop
lods
in
mov
aas
jne
roll
std
cmc
sarb
lret
dec
jle
jo
or
aaa
sub
cmp
pusha
inc
dec
sub
ds
mov
jne
shrb
and
pushf
jb
movsb
insl
fbstp
push
clc
push
inc
adc
mov
mov
mov
push
mov
mov
loopne
rcl
je
cld
jb
sbb
out
mov
cli
in
lahf
xchg
sbb
add
jmp
cmpsl
jecxz
loopne
or
scas
hlt
sub
pop
sbb
lock
mov
pop
fwait
fwait
std
push
jae
push
fistl
ljmp
jno
out
popa
inc
neg
rorl
jb
inc
jp
int3
xchg
faddl
and
inc
jg
sub
mov
fistpll
xor
mov
mov
cmp
inc
loop
std
pusha
cmp
sbb
mov
dec
iret
mov
inc
in
insl
ljmp
ficoml
pop
stc
into
dec
push
stc
aad
ja
adc
sbb
dec
or
sahf
xor
sub
push
push
xor
mov
sub
push
clc
pop
xchg
and
and
and
ja
jmp
nop
mov
mov
xorb
fisubl
scas
aaa
stos
fcomi
int
inc
sub
push
mov
imul
mov
out
das
sahf
inc
or
cmp
push
mov
pop
push
adc
xchg
mov
ljmp
mov
mov
xor
lds
push
fistpll
adc
pop
test
pop
ud2
fdivrl
fcomps
out
shrl
cmpsl
dec
mov
add
imul
mov
jge
lsl
add
dec
push
movsl
xchg
mov
enter
test
andb
jo
push
xor
pop
pop
sbb
jo
cmp
jp
ds
xor
stos
inc
cltd
xchg
or
ss
ds
mov
push
xchg
fbstp
les
loopne
outsl
push
pop
pop
lret
aad
mov
cmp
fs
inc
rolb
repz
inc
pushf
ret
xchg
jmp
sbb
imul
add
sbb
gs
sub
mov
xor
jbe
jecxz
xchg
outsl
les
imul
ds
not
mov
mov
adc
inc
pop
xchg
outsl
adc
dec
adc
and
cmp
sub
lock
dec
mov
hlt
pop
fwait
clc
jb
adc
or
in
or
push
cmp
nop
sbb
or
jb
fisttpl
insl
add
test
scas
pusha
adc
add
out
mov
adc
mov
out
int
sub
lret
push
push
push
leave
jecxz
fcomip
leave
notb
mov
dec
sub
cmpsl
pusha
aam
sbb
jbe
mov
cmp
pop
mov
push
dec
in
add
stos
sti
jb
inc
inc
add
divps
ds
and
xchg
push
mov
hlt
dec
ljmp
fidivs
mov
dec
leave
dec
imul
lods
loop
test
mov
lds
inc
push
sahf
lock
pause
jno
cmp
cmp
jmp
fisttps
mov
xlat
jne
or
and
cmpsb
gs
and
xchg
lahf
sbb
mov
sbb
sub
xor
dec
repz
xchg
bound
and
imul
mov
icebp
xor
addb
add
jns
popf
cwtl
shrl
out
ret
mov
aad
fdivr
movsl
aaa
aas
xlat
xchg
popa
rcl
fmul
ljmp
out
cmpsl
sbb
andb
push
mov
add
das
sahf
mov
repz
iret
std
inc
in
xchg
or
xchg
decb
inc
stos
push
out
cmp
xchg
cwtd
idivb
pop
add
xlat
pop
push
xor
stc
xchg
pop
in
cmpsl
xor
aad
test
pop
push
shlb
hlt
lcall
arpl
cltd
test
xor
out
jb
mov
xor
in
push
dec
jmp
mov
pop
inc
out
out
movsb
xor
push
int
dec
or
rcrl
mov
aad
and
insl
jns
add
pop
mov
push
jne
sub
lods
nop
sbb
rorb
dec
pop
push
xor
cmp
and
pushf
mov
pop
add
xor
jecxz
mov
ret
jo
lea
fwait
sahf
inc
jbe
stc
inc
cld
test
mov
pop
iret
loopne,pn
mov
adc
push
gs
sbb
imul
cltd
mov
or
and
lret
jne
mov
push
push
pop
and
jmp
mov
fdivrl
xchg
dec
mov
filds
aaa
hlt
fsubrs
add
sub
and
loope
adc
xchg
xchg
movsl
mov
popw
mov
jmp
jg
pop
cmp
loopne
out
into
mov
pop
pop
stos
push
int
leave
inc
lea
pop
xchg
cmp
push
mov
cmp
pop
xchg
call
testb
outsl
sti
xor
jo
stos
hlt
push
jp
jg
push
pop
pop
lods
xchg
sahf
lock
xor
adc
push
sub
dec
clc
loope
popf
dec
aaa
sarb
adc
adc
or
mov
jno
xchg
inc
cmp
rolb
pusha
addr16
cmc
add
lods
inc
mov
pop
sbb
int3
push
gs
je
push
cmc
dec
outsb
or
and
js
sub
xchg
mov
pushf
fdivl
xor
cmp
xor
imul
pop
inc
xor
or
mov
adc
push
mov
mov
clc
pop
xchg
aam
shrb
flds
cltd
mov
arpl
dec
xor
repnz
xchg
sahf
scas
sbb
push
fidivs
je
std
push
out
out
icebp
shrb
sub
cmp
shll
xchg
ljmp
int
lods
cmp
or
stc
jmp
repnz
popa
cltd
ficomps
inc
fnsave
sahf
dec
xchg
push
imul
and
and
arpl
cmp
scas
push
pusha
cmp
cld
lds
sbb
mov
rcrb
shll
sbb
gs
sbb
sub
jge
and
out
stc
inc
sti
les
dec
lret
out
push
push
sub
cvttps2pi
stc
imul
repnz
xchg
idivb
in
dec
loopne
jmp
jle
push
lea
movsl
idivb
mov
add
cmp
adc
push
dec
sub
cmp
test
arpl
fwait
xor
mov
sub
dec
sbb
mov
jae
mov
jbe
insl
xchg
xchg
notb
imulb
ss
pop
mov
sti
fsubrl
fisubs
mov
pop
aas
jns
test
in
pop
cltd
cmp
jmp
dec
xor
outsl
add
cs
mov
dec
jg
mov
add
push
jge
jnp
jo
inc
icebp
lcall
mov
jmp
mov
cli
push
mov
pusha
xchg
xor
push
jae
xchg
inc
cmp
std
insl
or
inc
js
cmpsl
adc
jbe
mov
in
jne
scas
jmp
test
mov
loope
adc
cld
and
inc
iret
jp
pop
pusha
imul
push
jae
cmp
mov
ds
aad
aaa
mov
jno
inc
sub
jmp
aad
lret
sbb
pop
adc
mov
icebp
mov
cmc
loopne
mull
mov
lods
decb
mov
dec
cld
fnsave
push
xor
cmpsb
push
push
fldt
inc
jge
mov
movb
adc
fbld
mov
insb
xchg
mov
jp
outsb
xor
jle
push
mov
cmpsl
outsl
dec
es
jbe
jle
xchg
adc
xchg
xor
bound
adc
movsl
dec
pop
cwtl
sub
cmp
cltd
outsb
int3
lcall
ds
inc
fmull
xor
push
sahf
test
push
push
cmpsl
push
nop
aad
loopne
lahf
xchg
lea
dec
dec
pop
jnp
mulb
xchg
jg
ret
shrl
mov
adc
stc
lods
repnz
inc
stc
data16
pop
and
sub
mov
jge
shll
fwait
mov
mov
xchg
clc
mov
shl
xchg
xlat
fs
ret
or
mov
ss
mov
pop
dec
mov
jo,pt
dec
xor
adc
icebp
clc
shr
out
adc
test
lret
xchg
jae
mov
push
lods
loop
mov
enter
pop
insl
push
sub
pushf
dec
sti
adcl
js
sub
fisttpl
neg
pop
mov
scas
pusha
lcall
jle
add
int3
or
ficoml
jne
rorb
fidivrs
out
inc
inc
xchg
mov
sbb
ss
in
movsl
xchg
pusha
out
ret
lcall
stc
addl
popf
dec
inc
loope
mov
pop
lock
jb
clc
stos
and
shll
sahf
rolb
sbb
xor
push
rcll
push
adc
sub
imul
lcall
add
push
push
lods
lret
jge
and
xor
jne
and
adc
mov
adc
aaa
sti
mov
push
shrb
cmpsb
imul
inc
mov
xor
repz
mov
cmp
mulb
pop
lahf
dec
xchg
or
loop
fistpll
inc
lock
lea
xor
imul
imul
mov
push
sub
fcompl
ja
mov
push
pop
test
sbb
nop
adc
mov
xchg
sarl
mov
loope
out
jmp
sahf
cmpb
dec
lcall
pop
mov
fcoml
insl
clc
jp
mov
mov
pop
mov
cmpl
mov
arpl
sahf
mov
rcrl
rcll
lret
in
cld
mov
sbb
cmp
in
inc
pop
and
or
fwait
mov
xor
xchg
sbb
popf
fs
decb
pop
fimuls
imul
adc
dec
mov
and
je
jbe
mov
rcll
jge
sub
mov
fimull
cld
dec
addl
lds
mov
aas
mov
pusha
sub
arpl
jo
ss
add
add
test
xchg
shl
jns
cmp
jo
in
push
xor
in
inc
mov
or
push
rcr
or
dec
mov
lcall
push
add
cmp
loope
imull
pop
or
sub
adc
test
pop
aas
mov
repnz
jae
fs
scas
or
bound
es
push
shll
jae
jg
mov
ret
nop
stos
out
mov
add
insb
push
push
xchg
rclb
cmpsb
inc
outsl
mov
arpl
sti
test
xchg
add
shll
sti
push
and
rcll
mov
sbb
aas
mov
test
scas
cmp
negb
push
enter
push
push
fs
std
sub
jno
fisttpll
icebp
jns
bound
push
mov
mov
add
push
outsl
arpl
lods
cmpb
pop
dec
lods
negb
mov
adcb
jne
movsb
xor
cmpsl
mov
das
mov
jle
je
mov
bound
mov
jg
out
repnz
xor
adc
and
jae
xchg
mov
iret
adc
clc
icebp
mov
iret
fnsave
adc
test
cmp
fldlg2
push
je
xlat
jge
add
mov
fimuls
hlt
xchg
cmp
fstpt
jns
ret
clc
mov
int3
rclb
js
sub
test
pop
leave
lret
xchg
sub
test
lret
into
and
stc
pop
mov
icebp
pushf
mov
daa
jne
sbb
add
std
mov
les
shlb
mov
sti
inc
fprem
iret
dec
sub
adc
in
pop
sub
push
pop
jp
mov
adc
ret
out
lods
addl
dec
int3
mov
mov
and
aad
xorb
fcomps
lcall
pop
push
movsl
ret
stc
stos
mov
into
rorl
mov
inc
popf
ja
dec
lea
push
int
sbb
js
sar
adc
sbb
mov
ret
push
int
je
fnstsw
cwtl
pop
cld
cmpb
pushf
sbb
xchg
mov
test
hlt
add
push
mov
mov
cmpb
pop
out
xor
dec
scas
sbb
aad
sahf
std
in
mov
repz
lods
ljmp
cwtl
lret
mov
jl
pop
dec
adc
popa
iret
adc
mov
dec
stc
rcr
mov
push
push
hlt
ret
xor
imul
ljmp
in
nop
and
xchg
adc
fdivrs
cli
sub
repz
test
dec
or
xchg
fcmove
xor
sti
cmpsb
movsb
jne
ljmp
pop
cli
icebp
cmp
jg
jbe
lret
das
fbstp
testb
jb
inc
lock
or
cmpsb
inc
lcall
lds
lods
pop
outsb
pop
pusha
and
cmpsb
shrb
dec
js
adc
adc
imul
out
cmp
imul
clc
sub
ret
sub
int
arpl
mov
and
test
fmuls
aad
loopne
scas
sbb
mov
leave
mov
test
mov
cmp
les
lcall
ffree
inc
out
mov
lea
and
lret
sahf
xchg
fldenv
ret
stos
or
mov
mov
enter
int
xchg
mov
popf
inc
cmp
in
loope
push
or
pushf
sub
les
pop
dec
loopne
lock
jge
int
jns
pop
xor
pop
mov
push
orl
mov
mov
adc
mov
ljmp
insb
in
dec
mov
inc
xchg
jne
test
fldl
cmpsl
push
mov
push
mov
sbb
das
mov
or
xor
movsb
mov
out
sbb
data16
cmc
mov
mov
jmp
faddl
inc
pop
iret
jecxz
rcrl
cmp
lret
cmp
pushl
iret
ficompl
jp
push
sarl
push
jb
jmp
push
jmp
out
mov
dec
and
scas
and
fistl
insl
mov
adc
mov
or
cwtl
push
mov
mov
lea
dec
cmc
icebp
cmp
xor
and
aas
mov
enter
sbb
adc
push
insb
stc
stos
sub
and
xchg
sub
cmp
xor
jmp
adc
pop
fdivs
or
int
mov
mov
or
pop
imul
imul
inc
jmp
test
jp
test
push
pop
rolb
dec
jle
shlb
test
add
dec
xor
xchg
and
cmp
lods
pop
mov
inc
mov
mov
sbb
fidivrs
movsl
or
sub
ret
ds
push
xor
mov
adc
popf
jns
ljmp
xchg
daa
sub
dec
icebp
and
lret
push
xor
out
cmp
pop
and
sbb
sti
cwtl
pop
test
push
jp
mov
dec
lods
push
mov
add
push
lcall
dec
inc
push
adc
jno
xchg
outsb
inc
jg
stos
insl
js
out
pop
arpl
and
scas
in
jg
adc
sbb
inc
rorb
mov
jmp
js
cmp
icebp
push
cmp
in
push
xchg
call
sub
cmpl
xchg
mov
push
cmpsl
dec
cmp
push
inc
loop
inc
testl
xchg
dec
std
out
lcall
in
scas
cmp
inc
xchg
pop
das
popa
push
jnp
test
int
cmpsb
inc
jb
push
pop
nop
data16
cmp
dec
cmp
add
xor
fldenv
mov
push
icebp
push
hlt
lock
ret
popw
fsts
fnstcw
mov
or
and
and
xchg
call
cs
mov
xor
leave
mov
dec
mov
sub
and
stos
out
loopne
mov
pop
xor
inc
mov
adc
xchg
pop
fs
fcoml
fsts
out
xlat
leave
lcall
mov
mov
cld
lret
inc
jp
aam
dec
out
das
dec
sub
mov
cld
mov
jg
cltd
mov
loop
faddl
test
cmpsb
sub
inc
xchg
push
and
cmpsl
inc
inc
and
mov
inc
inc
jge
out
std
xchg
arpl
popfw
mov
sub
js
shl
sub
ss
lock
push
loope
push
add
in
outsl
fisubs
ja
mov
cmpsb
mov
test
fisttpll
sbbl
fcompl
push
imul
fists
xor
push
mov
mov
mov
out
inc
pop
or
cwtl
aas
jne
cwtl
popa
xlat
sub
call
dec
mov
movsb
call
dec
and
xor
test
mov
ljmp
jg
fmull
jne
and
dec
sub
push
dec
cwtl
and
fs
lret
hlt
imul
xor
mov
push
mov
pusha
cmp
test
sub
or
cmp
movsl
pop
cmpb
ss
and
dec
int
pop
idivb
add
mov
xchg
scas
les
mov
push
cld
loope
add
cmpb
push
mov
into
cmpsb
mov
stos
add
push
pop
pop
je
hlt
push
or
repnz
insb
mov
cmc
inc
cwtl
fwait
add
imul
fadds
jmp
xor
sub
pusha
xor
fisttps
rorb
call
or
aam
sti
fmuls
or
cmp
add
sbb
jb
loopne
dec
cmp
dec
std
xchg
lods
add
clc
stos
inc
add
aaa
push
mov
xlat
aas
hlt
or
dec
sub
fs
cs
dec
sbb
cmp
jge
test
jb
lcall
pop
xor
push
stos
mov
jne
dec
cmp
fs
aad
sbb
adc
in
loopne
rol
in
pop
jecxz
addr16
bound
cmp
push
sbb
call
inc
add
pop
enter
jne
jbe
jg
and
mov
pop
jg
push
push
and
dec
in
mov
mov
call
dec
cmpsb
or
pushw
ss
cli
xchg
add
imul
pushf
cmpsb
sbb
dec
rcrl
dec
pop
xchg
in
and
pop
shlb
movsb
push
mov
clc
mov
inc
loop
jo
hlt
dec
sub
rol
jmp
sub
sub
xor
xchg
push
pop
adc
int
sbb
fs
nop
or
in
pop
mov
xorb
cmp
mov
add
and
add
out
add
mov
and
mov
mov
jns
xchg
fldt
mov
repz
arpl
mov
mov
mov
mov
call
cmp
add
pop
jg
mov
stos
pop
inc
pop
mov
movsb
imull
push
jno
jo
ljmp
jo
aam
pop
push
inc
inc
mov
mov
inc
xor
xor
xchg
decl
add
leave
int
mov
into
aad
inc
js
inc
mov
loopne
inc
lahf
testb
push
cmp
sub
ja
sub
cwtl
xor
push
jae
in
movsl
dec
xor
out
lahf
cmp
sbb
sub
push
push
push
cmpb
xor
aad
daa
icebp
pusha
cmpb
cs
or
lods
out
cmp
pop
loop
inc
sub
pop
adc
push
dec
add
addr16
mov
in
mov
and
jns
xchg
mov
mov
dec
inc
lea
jle
nopl
adc
push
lea
sub
into
stc
inc
jns
jle
fstps
daa
ds
push
cmp
loop
pushf
shl
mov
xchg
enter
jno
cli
adc
lahf
aam
fwait
and
pop
inc
sub
aaa
pop
notb
jle
pushf
and
js
adc
mov
out
xor
push
daa
or
adc
lods
scas
pop
dec
pop
loop,pn
loop
jb
ffree
shl
fisttpll
fsubrl
aad
mov
mov
rcr
pop
aaa
xlat
adc
arpl
cwtl
mov
out
xchg
test
decl
call
cmp
out
movsl
mov
aad
inc
and
clc
push
adc
test
cmpsb
adc
mov
cmp
rcrb
sub
leave
scas
mov
xchg
mov
vmovddup
mov
dec
sti
iret
mov
je
test
iret
mov
xchg
sbb
lahf
mov
fcomps
xchg
mov
ja
test
push
bound
sbb
test
mov
or
push
stc
sti
adc
fdivs
push
dec
jb
mov
aam
repnz
xchg
outsb
pop
mov
jne
inc
adc
push
mov
or
push
jbe
mov
int3
jle
or
bound
cmp
xchg
stos
and
ret
adc
ja
mov
test
fwait
out
cli
dec
mov
xor
dec
mov
mov
sub
or
int
fs
scas
xor
cli
pop
inc
push
push
mov
mov
sahf
enter
sbb
movb
movsl
cmp
inc
push
adc
sub
push
enter
xor
shll
cld
add
cmp
lock
dec
fsubl
fstps
in
pop
xor
jle
cwtl
movsl
stc
movl
std
cs
dec
mov
jb
push
fwait
cmp
inc
mov
sub
jp
dec
push
outsb
out
inc
cli
mov
adc
and
cmp
mov
and
jl
adc
or
adcl
jg
mov
add
ds
mov
cmp
or
jg
push
fbstp
jle
fwait
pop
stc
mov
cltd
rcll
addr16
aad
insl
call
or
jp
out
cs
loop
cli
out
lea
inc
test
xchg
inc
adc
mov
int3
enter
sub
xor
pusha
jbe
jg
inc
iret
test
movsb
jge
je
cmp
add
pusha
push
push
dec
inc
loope
cmp
mov
inc
les
cli
stos
mov
sub
sbb
jbe
lods
or
fistpl
cmp
gs
fldt
or
out
jne
xchg
mov
hlt
mov
jo
xchg
xor
inc
cld
add
imul
mov
addr16
pop
shrl
xlat
loope
and
in
mov
cmp
outsl
push
dec
jno
ljmp
fistpl
inc
je
lds
popf
out
iret
rcl
lret
cld
stc
xor
shll
push
int3
in
push
int
pop
notb
mov
les
push
icebp
sarb
jae
mov
jge
cld
popf
pop
int
jmp
sti
out
inc
xor
test
test
dec
mov
pop
ja
clc
repnz
out
pushf
sbb
ja
lcall
dec
sbb
sbb
aas
ficomps
sbb
cwtl
outsl
movsl
pop
adcb
inc
sbbl
std
mov
je
xor
pop
mov
cli
mov
lods
insb
lret
icebp
sti
lcall
mov
push
dec
sti
inc
ficompl
pop
pop
stc
insb
mov
pop
cmp
xor
mov
pop
dec
push
or
insl
daa
iret
cmc
jb
jg
mov
xor
out
ljmp
pop
outsb
inc
mov
jne
xchg
lods
aaa
push
xor
xchg
pop
and
fiadds
scas
push
lods
int
es
push
mov
js
push
inc
dec
jae
pop
into
mov
inc
rol
cmp
jae
lods
jb
mov
rclb
js
adc
int
mov
fwait
add
mov
adc
jl
sub
push
out
xchg
jg
shlb
sbb
in
add
fwait
ss
sub
push
xor
jg
aam
jns
sub
filds
fcomps
ficoml
out
sbb
call
add
lcall
loopne
outsb
mov
fsubl
xor
repnz
cltd
icebp
cmpsl
jg
int3
mov
dec
dec
lea
mov
and
xlat
jle
es
mov
adc
sub
mov
ret
lds
mov
bound
les
std
mov
pop
popf
xchg
aam
sub
adc
dec
dec
cmpsw
int3
push
mov
enter
stos
xor
sti
jge
mov
mov
cli
cmc
insb
xchg
mov
inc
out
push
stos
jnp
in
sahf
and
dec
jbe
xchg
fstl
icebp
ds
mov
sbb
dec
pop
loop
push
jb
jno
aam
insb
test
ret
pop
notl
aaa
mov
push
dec
enter
or
sbbb
stos
mov
jecxz
in
adc
jle
mov
sub
mov
jmp
sbbl
pop
dec
inc
scas
ss
and
push
stos
jne
das
addr16
fs
ja
imul
arpl
mov
jo
dec
repnz
arpl
or
inc
aas
ret
fsubs
dec
push
lods
add
test
ja
data16
or
cmp
dec
cmp
jns
sti
jo
mov
faddl
cmp
mov
lcall
adc
fldt
orl
push
pop
sarb
mov
cld
mov
or
xchg
lahf
pop
jbe
movsl
xchg
sub
add
adc
and
icebp
mov
cld
push
pop
cwtl
cmp
lods
pop
dec
sbb
fs
push
rolb
or
imull
sub
test
test
movsb
loope
xchg
into
sub
sbb
cmp
hlt
stos
jg
lods
push
shlb
pop
sbb
or
cmp
and
and
rclb
sub
test
leave
push
icebp
push
or
test
mov
movb
mov
scas
sub
pop
iret
and
out
sub
int
shrb
jmp
mov
push
inc
dec
xchg
out
leave
inc
cld
mov
sub
imul
jle,pt
gs
call
lcall
inc
test
dec
call
movsl
lock
in
dec
adc
cmp
xchg
addr16
mov
mov
in
xor
inc
sbbl
orl
dec
mov
inc
sub
jge
jg
inc
lods
jp
test
and
out
sbb
leave
sub
pop
xlat
lret
in
mov
mov
jp
xchg
mov
popa
shll
in
sub
imul
jo
les
lea
scas
mov
push
cmp
push
adc
cmpl
fs
add
jbe
jg,pt
jbe
subps
out
fwait
xchg
pushl
gs
mov
int3
mov
aas
cmp
call
adc
push
dec
cmc
lcall
sub
jnp
bound
xchg
push
fildll
add
push
hlt
push
aas
ds
jle
stos
inc
ficompl
int
movsl
mov
icebp
fistl
sbb
mov
sarl
mov
movsl
mov
push
ret
add
push
and
pushf
hlt
pop
mov
sbb
in
test
imul
cltd
cmp
dec
sbbl
jle
fnstenv
pop
cmp
inc
jle
xchg
or
mov
pop
imul
and
xchg
add
addr16
fists
add
fcmove
inc
dec
adc
rolb
pop
and
ss
adc
jnp
in
push
movsb
xchg
or
jp
aam
and
in
lahf
enter
scas
cli
push
int3
adc
xchg
mov
andb
push
inc
sub
and
jo
sbb
pop
aad
cmp
inc
nop
add
fldcw
into
push
pushf
add
outsl
mov
lds
pop
cmp
xor
aas
xor
fiadds
outsb
add
mov
jns
int
lret
jmp
mov
add
xor
lahf
lods
movsl
xchg
mov
leave
hlt
mov
and
mov
mov
or
sub
push
mov
in
mov
enter
data16
push
cltd
lods
add
lods
test
inc
sbb
inc
bound
imul
or
pop
push
fadd
lods
and
call
pop
cmc
dec
inc
aad
andl
movsl
or
rcrl
aaa
mov
mov
xchg
fidivs
arpl
pop
leave
stc
lea
push
push
or
jo
lret
dec
addl
in
data16
lock
bound
adc
mov
xor
add
adc
mov
xlat
mov
sarl
mov
mov
add
cmp
pop
test
fsts
ljmp
test
lods
adc
js
lret
dec
mov
jb
adc
fldcw
iret
mov
pop
inc
int
mov
mov
aam
sub
xabort
xlat
mov
sbb
fs
add
sahf
out
scas
push
dec
cs
inc
in
add
enter
aad
xor
cli
push
into
adc
fbstp
xlat
sbb
push
mov
jmp
aas
jl
lret
or
ljmp
icebp
dec
gs
jno
adc
sbbl
jmp
push
movsl
lods
lret
mov
inc
xchg
sbb
xor
adc
jge
or
scas
sbb
adc
xchg
cmp
pusha
lods
jl
xchg
mov
mov
xchg
mov
in
push
push
inc
sbb
flds
adc
cmp
add
lods
aaa
or
test
clc
cmpb
fidivrl
push
mov
mov
pop
xchg
js
pop
int3
sbb
js
mov
test
mov
jae
add
xor
subl
adc
insl
sbb
inc
jo
or
adc
clc
shl
add
mov
xor
xor
movsb
mov
out
int3
imul
dec
repz
inc
sbb
cmc
dec
loop
xor
mov
cmpsl
in
dec
stos
jecxz
push
int3
jno
sbb
adc
rorb
in
mov
fmul
lcall
es
in
mov
ds
adc
jle
cli
xor
je
mov
test
jmp
jnp
fldcw
xor
push
insl
mov
mov
xor
imul
ret
mov
sbb
lahf
int
and
outsb
lea
and
adc
and
adc
push
scas
test
fsubrs
sbb
mov
fcomps
xchg
dec
roll
sbb
pop
xchg
sub
pop
pop
stc
push
xchg
adc
xchg
testl
dec
leave
insb
cmp
push
or
inc
les
insb
fwait
and
dec
dec
jbe
or
add
fldt
add
xor
lret
xchg
je
jmp
and
inc
push
push
fwait
insl
testb
pop
jmp
adc
cli
mov
mov
sbb
scas
or
jle
insl
cld
or
test
cmpsl
mov
cmp
cmpsl
sub
cmp
loope
sub
andl
hlt
xor
lahf
lea
aad
loop
pop
aaa
mov
xchg
fsts
rolb
mov
jae
and
call
hlt
imul
mov
fs
sbb
cld
pop
icebp
push
xorl
test
fists
std
xor
test
cltd
or
ret
lcall
std
sbb
out
cmp
call
testl
add
out
imul
loopne
cltd
pop
les
arpl
jge
cmp
mov
out
divl
repz
inc
shld
dec
mov
sahf
inc
push
mov
jp
das
sub
dec
sub
xlat
int
ret
push
lods
in
xchg
fs
arpl
idivb
das
and
inc
add
rol
fstl
in
sub
mov
push
and
rol
xor
nop/reserved
push
add
add
arpl
add
scas
xor
scas
outsl
jns
mov
cmpsl
sbb
xchg
int3
cs
sbb
push
vmread
push
pusha
scas
movsl
enter
fdivl
sub
fwait
pusha
xchg
inc
jle
addb
cmpsl
enter
mov
mov
or
fiadds
push
aad
repnz
repnz
mov
or
dec
clc
stos
adc
into
mov
mov
and
dec
fldl
out
je
insb
shlb
xchg
jo
pop
sahf
movb
icebp
in
loopne
fstpl
sub
sub
test
imul
das
mov
add
jne
xor
out
sbb
jg
pusha
sub
scas
daa
jmp
sub
adc
mov
and
sub
jge
arpl
or
ret
pop
mov
add
cmp
loop
popl
xrelease
or
aaa
es
push
std
xor
std
fdivs
popf
std
mov
or
xchg
push
jo
push
movaps
mov
or
dec
cmc
rcll
out
xchg
sbb
mov
leave
cs
mov
sub
sbb
dec
mov
aam
pop
or
in
bound
xchg
mov
inc
in
xchg
test
jae
sub
push
jge
lods
pop
mov
les
gs
lods
daa
cmp
cld
int
sbb
ficompl
xor
rolb
or
loopne
repz
push
sub
out
cmp
out
popa
fwait
or
mov
inc
clc
pop
arpl
or
push
stos
mov
sbb
out
in
inc
xor
sarl
stos
jo
notl
or
adc
mov
cmpsl
sub
lahf
pop
mul
ret
inc
mov
cli
leave
push
mov
mov
call
cmp
pop
or
xchg
fs
jge
test
sarl
aas
and
mov
jbe
add
xor
jne
sub
iret
scas
xchg
xchg
aas
lods
sahf
mov
fimuls
sbb
sub
and
push
push
daa
fstps
int
push
test
cld
pop
xchg
pop
cltd
and
add
fs
out
sbb
stos
mov
lahf
mov
jae
pop
add
fwait
xchg
sub
loop
dec
std
sbb
mov
mov
jnp
cmpl
jle
push
mov
mov
push
hlt
arpl
shl
inc
xchg
stos
and
jecxz
ret
sub
shl
lahf
sbb
les
cmp
hlt
jb
call
xchg
sub
cmp
std
and
add
jno
popf
pop
jns
popl
fsubrp
cmp
mov
cwtl
lods
pop
fldcw
xchg
pop
jmp
mov
mov
xchg
mov
xchg
jae
dec
add
inc
mov
add
add
jl
aad
xor
jbe
xchg
gs
jbe
mov
pop
lods
pop
jmp
sub
pop
dec
dec
add
pop
js
into
add
pop
ss
xor
int
lret
fiaddl
push
loop
or
pop
ret
pop
dec
xchg
and
pop
or
iret
movb
cmp
jne
nop
push
test
popa
lcall
call
ret
mov
bound
clc
sub
hlt
xor
sub
xchg
mov
into
aas
xchg
pop
mov
lcall
jmp
ja
data16
mov
adc
imul
dec
inc
inc
jne
into
lock
inc
mov
mov
mov
lret
mov
mov
xchg
push
sbb
jp
cmp
test
jbe
movsl
shl
jae
mov
test
and
mov
ss
enter
mov
sahf
or
ds
cmp
dec
mov
mov
mov
mov
enter
xor
mov
xchg
mov
std
xchg
sub
lahf
xchg
sub
icebp
push
sub
sbb
out
lods
push
sarb
aaa
outsl
or
pop
test
push
lods
jbe
leave
or
add
cmp
and
stos
adc
jp
addb
movsb
fdivs
inc
stc
iret
and
or
stc
xor
mov
cltd
cmp
mov
xchg
dec
and
idivl
mov
jb
push
mov
adc
dec
iret
mov
mov
cmp
sarl
fs
fcmove
lods
mov
sbb
es
or
aas
enter
or
xor
ficompl
cmp
fsub
das
inc
or
in
hlt
sub
mov
mov
and
inc
std
fistl
jnp
jle
lods
jmp
inc
scas
repnz
pop
and
daa
fisubrs
dec
xchg
xlat
pop
fwait
inc
add
jl
sahf
sub
sbb
out
repnz
push
dec
scas
push
aad
hlt
xchg
xchg
jo
jne
pop
adc
xchg
std
jae
jl
addr16
mov
ret
push
orb
popa
fwait
icebp
xchg
out
iret
sbb
int
pop
fwait
sbb
pop
xlat
rcr
add
fdivs
ffree
mov
dec
and
sbb
inc
cltd
loope
jg
sbbb
mov
addb
jns
push
ja
addr16
adc
cmp
jecxz
enter
nop
adc
sbb
mov
pop
dec
addl
add
dec
cmpsl
test
fcmovb
inc
xorl
leave
adc
das
jmp
lock
pop
shr
ficoml
and
stos
dec
loop
sbb
cmp
xchg
enter
xor
mov
les
js
adc
fmul
inc
add
cmp
or
outsl
incl
mov
out
or
xchg
insb
jmp
and
add
scas
cmp
enter
sti
dec
mov
push
in
mov
lret
or
test
mov
lock
mov
push
mov
or
adc
adc
aam
or
out
inc
dec
cwtl
cmpsl
mov
outsl
hlt
inc
sti
push
out
and
shll
mov
gs
fstpl
pop
mov
push
outsb
mov
sahf
jo
mov
out
fsubrs
lods
scas
hlt
call
aam
pop
push
or
into
ret
mov
mov
sub
push
ljmp
into
mov
xchg
sti
movsl
mov
les
xchg
xor
cmpsl
orb
js
test
mov
orl
pop
stc
hlt
jg
scas
fld
cmp
pop
mov
lods
in
int3
stos
mov
cli
inc
push
jmp
stc
or
insb
lahf
jecxz
or
or
shll
aad
fsubr
hlt
clc
inc
hlt
or
out
aad
fwait
lcallw
int3
aas
mov
sub
lds
sub
data16
pop
jo
in
daa
std
push
inc
cmpsb
icebp
xor
inc
sbb
mov
cmp
into
push
jmp
dec
jne
inc
mov
mov
adc
jge
test
dec
mov
rorl
inc
jmp
xor
je
jg
aam
sub
repnz
jns
xchg
sti
lods
sahf
lds
jle
mov
fisubrs
loopne
fldenv
xchg
repz
shr
or
mov
adc
ret
rcrb
cmp
push
sub
add
imul
push
mov
mov
jno
or
jle
das
sub
inc
aaa
gs
je
std
sub
mov
and
add
into
adc
push
add
out
lret
pusha
insl
data16
dec
and
in
cwtl
cmp
pop
sbb
push
in
fistpll
fmuls
pop
jecxz
and
outsb
mov
add
jo
dec
pop
pop
jbe
xchg
xor
sub
mov
int
sahf
imul
dec
aad
push
fsubs
stos
push
insl
sbb
sub
xlat
sub
mov
data16
movsb
or
dec
adc
sub
aad
pop
mov
push
xchg
hlt
xchg
fimuls
cld
dec
mov
out
cmp
pop
mov
sti
pop
repnz
xor
sub
lods
out
jecxz
fistpl
sbb
push
arpl
or
sub
mov
mov
xchg
cwtl
scas
mov
leave
repz
xor
outsb
inc
adc
pop
jg
test
cltd
xor
ret
cmp
sub
xorl
push
jb
sbb
ficoml
je
lret
add
leave
lea
sbb
sahf
dec
jne
sub
dec
adc
push
sahf
push
das
mov
mov
imul
repnz
add
jl
ret
xchg
hlt
call
jle
jnp
or
mov
nop
insl
fdivrl
ret
push
pusha
test
pop
jmp
pop
test
dec
xlat
lea
jg
fwait
xor
xchg
sahf
mov
pusha
mov
and
lods
mov
push
pop
jno
and
insb
xchg
jnp
push
sbb
jg
aaa
dec
inc
mov
push
xor
ljmp
push
ja
pop
adc
jl
fimull
test
or
movb
and
ja
cmp
pop
aas
jp
xor
push
hlt
roll
push
mov
mov
cmp
out
or
xor
cs
popf
insl
push
push
addr16
cmc
jb
gs
jno
clc
pop
pushf
shl
mov
mov
sub
cltd
xchg
pop
mov
dec
insb
icebp
into
and
sahf
dec
imul
push
ret
enter
int
jnp
fldenv
shrl
push
cmp
mov
test
ret
xchg
adc
jno
push
cmovae
mov
mov
xchg
imul
mov
push
dec
dec
xchg
cmpsb
int
adc
sbb
adc
jns
popa
xchg
add
out
inc
bound
mov
into
shll
out
in
cmpsb
pop
sub
into
popa
cld
mov
add
repz
xchg
pushf
sub
cwtl
in
dec
and
add
loopne
enter
popa
mov
out
fwait
sub
adc
mov
xchg
or
push
sbb
sub
lcall
cmp
mov
enter
fstpt
jns
stos
add
outsb
inc
hlt
cmp
lcall
push
add
mov
lods
mov
and
mov
cmpsb
xor
pop
fnstsw
pop
mov
adc
testb
inc
add
test
pop
fs
push
insb
inc
mov
and
shlb
cli
stos
dec
lret
gs
mov
and
lds
rcrl
push
pop
jbe
mov
jg
inc
lods
lea
fwait
loop
mov
xor
gs
ret
mov
orb
cld
ror
cmpb
sti
adc
cli
xlat
dec
sahf
into
cmp
aas
ret
push
mov
repz
test
xchg
ficompl
fiaddl
mov
sub
push
fistpll
cwtl
push
shl
xor
jle
mov
cmp
fcoms
pusha
pop
ja
cmc
xchg
fsub
mov
or
dec
loopne
and
jl
add
jmp
test
loopne
fcmovne
arpl
jae
out
popl
inc
add
incb
xchg
int
pop
fldenv
inc
add
ds
loop
ret
dec
mov
sarb
jge
and
inc
sbb
jae
ds
cmpl
clc
push
sahf
sub
mov
mov
out
test
add
cmpb
push
lods
cld
push
mov
mov
cwtl
pop
imul
adc
cmpsl
adc
scas
and
outsl
stos
jle
insb
insl
pop
sbb
mov
or
mov
ret
aad
jp
mov
dec
or
sbb
pop
fdivrs
push
cmp
cmpsb
xor
mov
and
pushf
bound
lret
ljmp
rcr
ljmp
mov
or
repnz
ljmp
es
adc
arpl
inc
jne
ret
sbb
xchg
and
mov
pop
jg
js
mov
enter
stos
mull
push
sbb
lock
outsb
shl
lods
add
insb
jne
adc
dec
enter
sti
mov
inc
mov
pop
push
pop
popf
shr
ja
aam
cwtl
sbb
jb
push
outsb
or
xchg
cli
mov
mov
in
xor
movsb
jo
dec
in
fcompl
push
shll
and
sbb
dec
outsb
repnz
mov
movsb
adc
inc
or
cwtl
sbb
rolb
xor
push
xorl
out
jnp
mov
jbe
jnp
xor
push
fs
dec
lcall
scas
fisubl
enter
adc
je
lods
int3
push
icebp
mov
xor
mov
xchg
mov
mov
cmp
aad
or
cmp
mov
mov
add
nop
shrb
out
add
dec
das
sahf
cmp
mov
jne
mov
les
add
pushf
test
push
xor
push
leave
pop
xchg
cwtl
enter
in
mov
roll
pop
pop
dec
fsubrp
sbb
mov
sbb
push
daa
adc
es
dec
repnz
sahf
ret
cmpb
adc
add
stc
imul
lods
popf
out
inc
inc
stc
ret
jge
cmpl
dec
aad
mov
jg
stos
pop
jbe
push
sbb
imul
mov
pushf
loope
mov
into
rep
xorl
and
push
or
adc
xlat
pop
sbb
movsl
roll
popa
clc
xor
adc
repz
out
add
sub
jge
arpl
icebp
xchg
inc
mov
rolb
jo,pt
es
loop
mov
inc
mov
mov
cmp
jle
testb
and
mov
mov
mov
popf
ds
je
popf
jne
popf
cmp
jo
addb
mov
lret
mul
inc
mov
add
xchg
dec
dec
sbb
or
add
jmp
cmp
xchg
rclb
mov
jp
rcr
lcall
add
mov
ds
iret
mov
aas
push
cmp
daa
repnz
mov
ja
in
pop
pop
sbb
mov
ret
cmp
lahf
fs
push
sub
cmp
fsubs
adc
stos
aaa
jle
jp
add
pop
daa
adc
xchg
jge
cmpsb
imul
pusha
cmp
fidivrs
add
jle
xchg
imul
bound
rcrb
inc
cltd
mov
mov
repnz
mov
or
pop
pop
jne
rcrb
rcl
imul
sub
lret
mov
fsubrl
lret
enter
push
ret
push
lods
push
es
pop
je
aad
push
cmc
xchg
pushf
add
dec
cld
adc
push
pop
int3
push
cli
cmp
arpl
dec
out
or
addr16
pop
dec
sbb
shrl
scas
mov
push
mov
add
sbb
fidivrs
jmp
xchg
xchg
lods
mov
decl
test
adc
clc
push
jge
adc
aaa
loopne
es
pop
or
test
and
xchg
adc
cmpl
cltd
lea
push
ds
inc
push
fwait
or
sub
mov
ljmp
popf
fidivl
adc
int3
fwait
and
jle
or
or
loopne
mov
adc
push
mov
sub
inc
cmpsl
xchg
out
movsb
adc
out
inc
dec
je
cmp
adc
popa
add
inc
imul
add
jecxz
xchg
data16
xchg
movsl
lods
sbb
mov
lea
mov
test
cltd
imul
mov
adc
jne
rolb
mov
adc
pop
in
xor
mov
es
push
cmp
cmp
iret
outsb
test
pop
adc
dec
in
push
mov
cmp
rclb
fstpl
lea
xor
enter
mov
jp
pop
jae
lret
sbb
xchg
lahf
out
push
jg
insl
inc
addl
lret
imul
add
pop
lret
adc
add
out
adc
ficomps
add
xor
gs
mov
faddl
gs
in
test
adc
xchg
lods
add
movsl
in
inc
sub
and
mov
orps
out
push
dec
cld
push
xlat
sbbl
movsl
mov
push
xor
dec
sub
xlat
in
mov
cs
jge
mov
sub
push
jne
jo
enter
mov
repz
add
shlb
ss
inc
cld
test
ds
cli
cmpsb
cld
cli
cmp
out
icebp
dec
fucompp
dec
push
add
dec
loope
bound
popa
inc
cmp
pop
pop
out
sub
mov
xor
js
sarb
jo
mull
sub
mov
notl
push
push
inc
jle
mov
dec
test
aaa
ss
push
dec
dec
scas
add
add
sbb
mov
push
lahf
call
and
inc
in
pop
es
rolb
inc
pop
push
inc
mov
adc
jle
ret
sub
imul
push
cli
xchg
push
pop
test
cmp
or
aas
and
xlat
pop
in
jp
or
orl
push
sub
or
adc
fadd
ljmp
cmp
sbb
xchg
jbe
and
push
and
das
dec
addb
inc
jl
adc
cs
mov
lahf
repz
pop
lods
sub
mov
mov
push
sub
ret
movsb
loop
jne
mov
mov
dec
test
ror
or
fdivrl
cmp
inc
test
cmc
addr16
rcll
and
sti
enter
sti
mov
dec
outsl
dec
jno
nop
sub
xor
push
aas
pop
pop
sti
andb
xor
test
cld
scas
stos
adc
jle
xchg
mov
mov
filds
mov
mov
jle
lret
pop
cmp
sbb
xlat
cwtl
xlat
fbld
cli
out
mov
adc
sub
mov
faddl
cs
lods
xchg
in
inc
negb
inc
stos
and
jmp
push
mov
test
add
sbb
call
mov
in
jmp
dec
or
mov
out
mov
add
cmpsb
fs
sti
dec
or
insl
jmp
outsl
push
mov
xchg
mov
cmpsb
adc
lret
mov
mov
daa
mov
dec
dec
lods
out
hlt
and
or
sub
mov
pop
and
orb
cmc
lret
dec
sbb
inc
inc
mov
outsl
and
push
adc
jle
lret
push
mov
pop
add
add
addr16
repz
mov
lea
fdivs
addr16
push
test
jle
xchg
sbb
cmp
sub
mov
mov
mov
mov
or
rcrl
leave
rclb
push
fadds
shlb
sub
xchg
mov
cmp
mov
add
mov
mov
rcll
popf
inc
test
sbb
outsb
fnstsw
mov
les
and
mov
fbstp
mov
push
dec
nop
xor
or
hlt
sbb
xor
stos
jmp
push
jmp
dec
es
dec
mov
xchg
lea
push
xchg
mov
mov
and
repz
loopw
dec
clc
xor
adc
xchg
xor
xorl
inc
cmpb
mov
mov
out
mov
divb
nop/reserved
mov
jmp
fmuls
dec
mov
popf
sbb
pop
xor
inc
jns
je
dec
sbb
fiaddl
jle
inc
mov
xchg
leave
mov
jns
push
aam
adc
jnp
push
fs
stc
jns
or
sbb
or
xchg
std
adc
jp
jns
push
xor
sbb
push
jge
outsb
push
xlat
lahf
push
lret
sbb
movsl
mov
dec
cmp
test
jmp
xor
fisttpll
xchg
mov
into
jmp
js
mov
and
mov
and
pop
cmova
lret
cmpsl
out
test
fsubs
sub
xor
sbb
cmp
pop
push
mov
out
lock
add
jmp
inc
mov
adc
movsl
outsb
daa
mov
xor
and
mov
fldt
movsl
adc
nop
mov
mull
fwait
aad
clc
push
loop
imul
test
mov
mov
in
and
sbb
mov
dec
gs
adc
xchg
sbb
mov
int
inc
insb
cmp
test
fidivrl
sbb
adc
mov
fldenv
les
pop
push
push
fs
inc
and
jl
sti
jmp
push
add
or
or
cmp
imul
pop
mov
cmpsb
push
enter
lea
lahf
data16
out
ljmp
xlat
fmuls
jbe
js
int3
jecxz
push
ljmp
in
lcall
cltd
aad
cld
jne
pushf
mov
pop
xchg
ret
mov
xchg
je
sarl
repz
sub
mov
je
fimull
pop
fadds
or
cmp
jecxz
mov
sbb
mov
jne
mov
jne
inc
xchg
leave
xor
or
inc
call
ror
sbb
call
jp
cmp
mov
push
pop
ljmp
pop
or
pop
test
hlt
ljmp
xchg
and
adc
daa
push
inc
sbb
rorb
scas
sarl
in
fcompl
gs
movsb
lea
mov
cwtl
jecxz
jmp
jg
js
pop
add
dec
je
jmp
jecxz
push
inc
ret
dec
jp
sub
shll
roll
xchg
stc
dec
imul
xchg
rclb
and
mov
movsl
shrl
iret
je
iret
dec
mov
adc
mov
lahf
scas
pop
sbb
push
mov
clc
jmp
test
xor
inc
fldl
mov
js
mov
outsl
lahf
cmpsb
mov
movsl
fmuls
sahf
inc
add
jmp
sbb
xchg
inc
mov
test
jb
scas
dec
out
mov
cmp
hlt
movsl
cli
sbb
pushf
daa
xor
inc
rcll
cmp
jbe
sbbl
sbb
std
mov
loope
test
repnz
sub
call
dec
ljmp
mov
or
adc
shlb
mov
fildl
aaa
pop
lcall
push
sbb
pop
pop
mov
pop
pop
lret
in
xor
push
adc
les
lods
push
and
adc
jo
or
shl
cmc
xor
mov
jl
mov
cld
dec
push
enter
mov
mov
jecxz
xchg
sbb
cmp
mov
pop
jmp
rcll
or
add
jo
xchg
jge
jl
ja
jge
in
fcompl
ja
push
cmpsl
and
jecxz
jb
je
sbb
xchg
cltd
shlb
or
aas
pop
fmul
lret
dec
pop
roll
in
add
aas
mov
lea
cltd
jbe
gs
lds
es
rorb
scas
and
pop
push
cwtl
or
mov
adc
jp
adc
or
xor
cmp
orb
mov
in
ljmp
add
lea
scas
xchg
sahf
or
pop
jg
je
lcall
enter
xchg
out
mov
fwait
mov
pusha
xor
js
sub
and
arpl
add
enter
push
or
sub
leave
cwtl
lahf
pop
jno
pop
ss
xorb
ja
cmpsb
dec
movl
outsb
icebp
xchg
sbb
stos
add
sar
mov
sti
icebp
sub
jns
and
and
hlt
dec
add
iret
mov
dec
inc
jo
testb
jmp
out
in
ret
pop
jae
push
inc
in
mov
jo
and
call
jae
mov
sub
jge
and
adc
cmpsl
add
test
icebp
addl
into
repnz
pop
push
outsb
dec
in
lock
divl
push
cmp
cmp
mov
fsubrs
movsl
mov
imul
mov
pop
cltd
fxch
rorb
jnp
pusha
dec
pop
and
mov
or
repz
add
lds
fcoms
ja
cltd
fisttpll
iret
pop
loop
mov
jge
or
bound
xchg
arpl
xchg
sbb
aas
in
js
cmp
push
xor
sbb
hlt
shr
xor
adc
cmp
cmpsb
out
nop
inc
add
add
shl
adc
mov
and
xchg
fisubrs
push
pop
fisubs
mov
adc
mov
les
push
add
sar
ficompl
movsl
push
negl
mov
addl
cli
out
scas
lcall
mov
std
int
adc
mov
rcrb
imul
add
into
mov
dec
mov
roll
push
pop
fistpl
push
test
xor
or
cld
cli
mov
incl
lcall
dec
xchg
nop
inc
xchg
mov
ret
and
jge
xchg
lods
cs
in
into
inc
rorb
lods
add
push
scas
test
push
add
pop
popf
aas
cmp
lea
xchg
dec
adc
notl
xchg
or
mov
leave
leave
gs
cmpsl
repnz
sti
enter
fwait
hlt
cmpsl
bound
sbb
insl
xchg
pop
pushf
repz
ret
or
int
lock
into
mov
add
fs
cli
clc
add
push
repz
pop
mov
push
add
push
es
mov
dec
inc
rol
pop
movsb
popf
sbb
sahf
adc
out
pop
sbb
jg
movsl
test
stos
pop
jo
dec
mov
ret
into
lods
xor
loop
mov
dec
dec
ja
std
sti
in
clc
xchg
arpl
xchg
les
jmp
pop
mov
push
sub
jns
xchg
jmp
popa
cmp
repnz
ss
fnstenv
scas
mov
ret
ficomps
lcall
pushf
movsl
stc
and
out
mov
or
in
mov
pop
jecxz
add
sbb
or
rcr
pop
jbe
int
dec
xorl
mov
sbb
pop
movsl
pushw
and
fistpll
inc
inc
xchg
or
test
inc
mov
sbb
aad
subb
add
dec
rorb
xchg
leave
das
inc
push
loop
mov
add
mov
adc
repnz
je
je
out
add
nop
popa
loop
inc
mov
in
stos
int3
stc
mov
mov
shl
jg
in
pop
stos
stos
xchg
std
mov
dec
or
jl
call
psrlq
scas
and
stos
out
fbstp
loope
xchg
adc
mov
inc
es
mov
jns
push
lahf
jmp
pop
out
lahf
push
jo
or
stc
mov
sbb
push
daa
and
mov
leave
or
cs
sbb
mov
clc
test
and
into
push
jecxz
mov
sbb
rorl
pop
adc
cmp
popf
cs
push
lds
adc
in
mov
mov
ja
inc
cmp
push
xchg
mov
mov
xchg
fimuls
test
fwait
clc
cmp
incb
stos
test
jno
inc
sbb
sbb
popa
dec
mov
mov
xor
lret
xor
mov
or
cmp
jns
in
test
mov
jae
in
jge
popa
cltd
nop
je
push
insl
ljmp
pop
cmp
mov
sbbl
insb
sti
cli
imul
mov
push
adc
shll
xchg
pushf
out
loope
ds
or
icebp
cs
fwait
rcll
lods
xor
fsubrs
xor
sbb
gs
sub
sbb
in
cwtl
sub
test
pop
addr16
cltd
xchg
inc
fidivs
xchg
js
xchg
xchg
sbb
je,pn
jne
call
ja
pop
mov
arpl
jbe
xchg
inc
insb
sub
mov
into
enter
in
repz
out
clc
sbb
pop
jne
cmp
mov
mov
rorl
pop
jo
or
out
fwait
sti
out
sbb
push
imul
ret
into
fwait
pop
or
jle
jns
mov
sub
jo
std
testl
sti
lcall
test
ds
arpl
mov
mov
add
es
repnz
cmp
in
sti
fistpll
lock
stos
inc
or
mov
nop
jg
leave
fsubr
adcb
mov
fdivrl
ret
pop
sub
icebp
mov
and
mov
out
in
cmc
out
xor
outsl
test
push
sbb
pop
int3
lods
add
daa
add
push
push
or
push
dec
xchg
fisttpll
dec
add
mov
jb
xor
rcll
mov
xchg
and
jne
daa
movsl
xchg
call
lock
pcmpgtd
cmp
clc
sti
adc
sbb
cmc
mov
test
fmuls
int3
cli
jge
cmc
sbb
push
jo
data16
adc
jecxz
push
hlt
cmp
insb
fdivl
cmp
push
lahf
mov
xchg
xchg
popa
mov
sbb
xchg
icebp
stos
xchg
mov
or
dec
dec
imul
mov
mov
mov
int
lods
and
in
dec
push
cmp
pop
inc
insl
dec
xor
xchg
sub
pop
push
bound
dec
dec
add
mov
ljmp
xchg
scas
mov
mov
leave
push
sbb
fst
and
data16
pop
lcall
sbb
sahf
popa
cmpsb
movsb
call
into
mov
loop
scas
adc
sbb
hlt
jne
pop
xor
mov
inc
sbb
mov
pop
scas
shlb
rcl
sbb
pop
mov
stos
xchg
lcall
push
pop
dec
xor
pop
sub
inc
xchg
inc
xchg
outsl
pusha
aaa
mov
lret
mov
jne
cwtl
in
imul
rcrl
inc
iret
fsubs
aad
jmp
dec
jnp
jnp
cltd
gs
data16
ljmp
and
and
insb
ror
scas
data16
pop
rclb
jge
nop
mov
sbb
adc
dec
scas
loope
ja
pop
aam
mov
cmp
mov
mov
and
std
adc
shrb
out
inc
mov
js
lret
repz
adcl
sbb
pop
dec
xor
sub
jne
xchg
adc
jnp
xchg
or
stos
cmp
pop
adc
sub
mov
xorl
out
xor
mov
mov
in
stos
and
hlt
jmp
testl
mov
lret
fstpl
pop
mov
stos
push
movlps
xchg
std
xchg
pop
cmp
sub
pop
xor
cmpsl
insb
subb
fwait
addr16
and
es
outsb
or
pop
pusha
sub
outsb
arpl
je
add
repnz
xchg
cltd
lahf
aad
insb
mov
lea
jmp
and
cmpsl
push
cltd
repz
mov
or
sbb
nop
fwait
dec
imul
je
cmpsl
mov
pop
int3
icebp
or
cmpsl
int3
nop
mov
ficoml
gs
push
xchg
enter
daa
cmp
outsb
jns
sti
and
jmp
mov
mov
or
and
push
push
repz
pop
mov
into
test
or
xor
jle
lret
mov
insb
fimull
jbe
stc
je
dec
nop
add
sub
mov
pushf
dec
aaa
pop
push
int3
pop
or
jb
aad
or
or
jge
dec
nop
xchg
xor
sahf
jecxz
shl
pop
sbb
fcmovnb
pop
ljmp
cltd
push
cltd
add
int3
bound
ss
inc
pusha
mov
or
mov
pop
lea
nop
test
fldenv
pop
int
and
insw
xchg
jge
mov
jns
cmp
and
mov
fldlg2
fidivrl
xor
out
mov
adc
push
loopne
inc
add
cltd
dec
mov
sbb
sar
adc
mov
pop
into
or
movsb
push
jle
mov
scas
in
lds
jmp
mov
repnz
mov
sub
xchg
scas
push
pop
inc
popf
mov
sub
cmpsb
dec
cmpsl
lds
test
push
adc
rol
shlb
fbstp
pop
xorl
xchg
mov
repz
mov
enter
mov
mov
addl
mov
push
out
sbb
mov
mov
xor
inc
adc
call
push
pop
idiv
enter
in
aas
pop
xor
subl
xorb
add
mov
shrl
mov
mov
or
add
mul
jo
fldcw
and
mov
dec
mov
add
push
dec
cmp
fsubr
or
pop
scas
pop
and
in
test
xchg
or
in
addr16
mov
or
outsb
or
out
pop
test
addl
mov
jge
push
lods
dec
sbb
lods
pop
push
aaa
xor
sub
or
fiadds
dec
inc
pop
or
out
js
pop
icebp
repnz
pushf
in
adc
adc
sub
jae
enter
jne
inc
jne
push
push
addr16
cmp
fisubrs
pop
jmp
mov
sbb
movsb
nop
jns
es
sub
jno
shll
xchg
sub
jnp
loopne
fstps
hlt
ret
sahf
mov
enter
sub
mov
mov
enter
syscall
stos
or
stos
and
or
dec
push
mov
fistpl
outsb
out
loop
dec
stos
dec
mov
icebp
aas
ja
out
adc
pop
gs
lea
outsb
dec
dec
push
or
ja
repz
add
nop
cld
hlt
cmpsl
dec
dec
pop
dec
mov
ret
cs
mov
dec
dec
sub
enter
jns
add
adc
cmp
jecxz
insb
pop
xlat
test
xchg
or
pop
lcall
or
push
out
cltd
mov
rorb
rclb
loopne
les
mov
add
je
pop
lret
or
mov
dec
jmp
pop
subb
push
push
out
mov
adc
gs
bnd
xchg
jae
add
add
scas
test
je
sub
sub
fcoms
fdivrl
jle
sbb
insb
daa
adc
jg
cmp
shlb
lds
mov
mov
leave
test
cmpb
andb
xor
push
pop
subl
fimuls
sbb
aad
fistpl
and
adc
xchg
decb
push
jmp
push
pop
outsl
jp
rolb
scas
push
hlt
push
shlb
sub
popf
push
out
adc
adc
xchg
mov
roll
gs
sbb
adcb
cmp
xor
ljmp
pop
sub
gs
dec
idivb
inc
inc
aam
lea
scas
inc
dec
into
jle
adc
pop
arpl
cmp
ja
testb
sbb
xlat
out
xchg
ficoms
cmp
ret
lret
mov
inc
ret
addl
mov
push
call
mov
sub
add
mov
push
insb
ffree
mov
sti
mov
add
pop
jle
iret
popf
call
sbb
lock
inc
inc
adc
push
mov
pop
test
test
rcl
in
dec
jnp
sub
xor
daa
lods
jne
stos
mov
out
pop
mov
dec
and
scas
mov
add
pushf
xchg
daa
test
push
rorl
adc
std
stc
mov
pop
fdivs
add
xchg
pushf
sub
and
sub
call
jbe
pop
clc
inc
xor
jecxz
sar
xor
inc
fnstsw
and
mov
ret
ret
test
rcll
xor
jecxz
ljmp
fistl
loop
adc
aad
repnz
push
ds
je
xor
xchg
rorb
mov
roll
sbb
scas
mov
add
loop
arpl
jnp
push
mov
ja
arpl
dec
jmp
lret
push
je
push
jle
popf
push
rcr
mov
es
cmp
mov
inc
jg
jecxz
xchg
outsb
sarl
and
es
jg
mov
cmpsl
jecxz
xchg
mov
in
xchg
xor
movb
imull
test
and
push
nop
lret
ret
fs
sub
adc
jl
mov
loope
ds
mov
movsb
cmp
xchg
movsb
test
fs
lcall
dec
mov
xchg
imul
inc
mov
mov
xchg
mov
jno
adc
call
movsb
popl
dec
aad
sbb
inc
jnp
paddsw
sti
cmp
loopne
pop
cmp
mov
bswap
outsb
mov
movb
jl
sbb
cmpsb
cwtl
insb
mov
js
fs
stos
hlt
das
push
xor
fstl
repz
cmpl
mov
mov
outsl
sbb
jbe
add
add
ror
aaa
adc
pop
lret
xor
inc
cmc
xchg
push
mov
mov
mov
fcmovnbe
ja
out
insb
push
cltd
es
in
lock
cmp
fs
cmp
dec
ds
jmp
pop
out
inc
fiadds
sbb
popf
movsb
fnsave
fs
add
mov
mov
jecxz
sbb
ret
mov
xor
mov
lea
fisttpll
xchg
dec
jno
cmc
xchg
inc
cmp
push
dec
data16
jp
mov
arpl
outsl
pop
enter
popf
bound
fsub
call
mov
pop
and
add
sti
test
xor
push
stos
pop
sarl
insl
scas
and
cmpsb
dec
pop
sbb
outsb
loop
xor
jne
sarb
adc
xor
es
lods
fnsave
jmp
cmp
xlat
jno
fidivs
jecxz
push
dec
adc
hlt
xor
cmpsb
je
orl
xor
out
mov
add
sub
lods
lds
inc
imul
xor
jl
and
ss
xchg
cmp
dec
xor
sbb
sub
aam
sub
mov
inc
sbb
out
pop
jo
arpl
es
xor
rorl
insl
mov
mov
mov
out
outsb
adc
stos
jp
cmpsb
aaa
pop
adc
mov
inc
imul
addr16
mov
adc
shlb
pop
movsb
xor
adc
xchg
sarb
adc
outsb
cmp
mov
mov
roll
or
aad
iret
scas
mov
outsl
stc
mov
clc
cmpsb
mov
xchg
mov
adc
or
cmp
push
insl
mov
xchg
xchg
sbb
ljmp
fdivl
add
jle
dec
int3
mov
and
jb
cmc
cmp
push
test
ds
mov
addl
insl
aaa
incl
mov
or
ror
mov
jb
dec
adc
ljmp
and
mov
pop
fidivs
mov
jp
cmp
push
divl
xor
jns
arpl
adc
pop
jle
or
lods
insl
mov
adc
cmp
cmp
pusha
cmp
mov
push
add
jle
lret
dec
sti
jecxz
std
push
xchg
mov
popl
push
data16
shl
sub
test
pop
fs
sub
cltd
lcall
jmp
call
xor
or
ds
out
fnstenv
lret
pop
test
mov
xlat
cs
add
leave
lea
int
jne
and
mov
ja
adc
fbstp
std
sub
test
rcr
movsb
loopne
ret
stos
leave
enter
cmp
cmpsl
and
test
mov
ja
and
ret
and
or
xor
das
pop
jle
cltd
add
pushf
fadds
jb
rolb
cmove
loope
jecxz
dec
xchg
lds
mov
aaa
mov
lods
jmp
push
lods
cmp
xchg
enter
fnsave
mov
bound
sbb
inc
int3
sub
faddl
push
inc
arpl
add
mov
les
jg
cmc
inc
pop
out
mov
xchg
cmp
sub
cmp
sahf
sbb
outsl
aaa
mov
xchg
push
push
xor
int
negl
mov
int
pushf
jl
push
loope
push
push
xchg
add
or
adc
pop
repz
bound
roll
adc
mov
movsl
sahf
outsb
dec
imul
cli
rcrb
icebp
pop
packuswb
ljmp
adc
pop
adc
adc
mov
fdivrl
pop
xchg
jo
pop
clc
xor
jmp
inc
loopne
and
xchg
outsb
sbb
inc
jmp
pop
repz
cmp
inc
ret
leave
lea
inc
repz
cltd
shlb
int
rolb
mov
daa
sbb
stos
incb
cli
aaa
sbb
fwait
sub
pop
jbe
adc
or
mov
icebp
outsb
data16
stc
xor
mov
rcl
lods
test
loope
lods
jns
loop
out
push
popf
or
sti
mov
das
incl
fmulp
ljmp
xchg
jb
mov
repnz
xor
arpl
sub
fisubs
mov
inc
xor
or
push
jo
or
dec
push
fisttps
pop
insl
into
adc
adc
adc
cltd
stos
sub
dec
push
cmp
iret
jns,pt
push
or
sbb
inc
test
dec
mov
or
or
imul
imul
xchg
adc
jecxz
lret
pop
cmpxchg
movsb
pop
xchg
pop
xchg
insb
sbb
scas
and
loop
adc
fisubrs
adc
call
pop
fistpl
cmp
lods
jmp
cmpsb
fstpt
fdivrl
sbb
lods
mov
jge
divb
inc
dec
into
cmpsb
insb
in
jb
pop
in
cmp
shl
shrl
cltd
sbb
push
adcl
cld
insb
fidivl
repnz
mov
adc
rcrb
loope,pn
dec
test
cmpsl
leave
cld
mov
dec
out
xchg
jno
nop
push
mov
fsubrs
ljmp
push
popf
push
fiaddl
cmp
add
outsb
jl
jo
aas
adc
sbb
mov
daa
adc
jp
repnz
fadds
jl
push
mov
in
cld
imul
pusha
push
xchg
add
cmp
outsl
xlat
ret
and
add
out
mov
mov
test
outsb
inc
pushf
jge
push
pop
fmuls
and
out
sub
and
das
xor
xor
aad
add
aas
or
jae
mov
sbb
shll
nop
in
cs
loope
xchg
inc
loopne
fs
sub
jb
push
lret
mov
aad
adc
out
fdivrs
cmpsl
sahf
lahf
fsubrl
nop
mov
scas
js
mov
or
iret
push
out
mov
loopne
mov
inc
pop
lds
sbb
in
push
test
movsb
insl
sbb
sub
sbb
add
add
cmp
mov
sbb
fildll
inc
fwait
lea
cmp
scas
mov
xchg
inc
push
xchg
inc
pop
sub
pop
sbb
aad
push
enter
in
sbb
lods
cli
imul
aas
sbb
xchg
xor
add
dec
in
sub
mov
lret
xorb
popf
mov
out
out
mov
adc
shll
xchg
cmc
mov
jge
mov
int3
daa
xor
cmovns
sbb
mov
icebp
aad
inc
mov
loop
lea
push
dec
or
jno
insb
push
ret
push
add
andb
mov
loop
shlb
jns
mov
jle
mov
and
imul
sub
jmp
pop
stos
sub
sarl
mov
idivl
xor
insl
ljmp
push
fwait
out
xchg
in
add
gs
test
daa
push
int3
xlat
sub
fildll
aam
es
test
stos
add
cmp
sub
subb
xor
pop
or
out
sar
and
jg
outsl
mov
test
icebp
js
xlat
sbb
pusha
test
and
dec
lret
mov
mov
mov
out
rcll
dec
xlat
cmp
adcl
imul
or
xor
cmpsb
cmpsl
out
add
mov
dec
mov
jle
sbb
fwait
mov
sti
mov
loopne
push
mov
cmp
cmc
std
in
inc
or
sahf
xor
in
pop
inc
hlt
ret
adc
and
sbb
movb
sub
or
jns,pt
addr16
sub
inc
pusha
and
push
sub
mov
into
icebp
mov
test
inc
sbb
pop
inc
cmp
sbb
pop
adc
out
out
imul
sub
mov
out
shlb
int3
ds
add
insb
movsb
sbb
test
or
push
cmovo
je
scas
call
cmp
lea
lods
movsl
movl
das
in
cmpsl
cmpl
adc
mov
xchg
out
subl
in
sbb
lods
notl
and
clc
mov
arpl
daa
icebp
and
xor
hlt
push
int
repnz
cltd
push
pop
ljmp
stos
ljmp
cmp
push
xchg
icebp
add
loopne
push
ret
test
push
cmp
enter
ret
jp
add
outsl
xchg
sbb
and
adc
xlat
popa
xchg
xor
loope
sub
popf
imul
push
adc
adc
gs
mov
movsb
enter
xlat
pop
rcr
xor
jl
lret
testl
testl
testl
cmpsb
rcrl
and
pop
test
and
jmp
sub
iret
ret
or
cmp
aam
pop
or
fcoml
mulb
in
mov
scas
out
mov
cli
ret
fidivrs
lock
mov
inc
repnz
imul
push
mov
lret
jno
icebp
into
in
jae
sub
push
jl
xchg
fsubs
sub
pop
prefetchwt1
mov
cmp
imul
and
adc
pop
jae
movb
adc
fs
bound
push
xchg
outsl
push
movsb
dec
adc
pop
cmp
mov
inc
cmp
dec
jge
ds
jp
mov
and
popf
push
out
xabort
mull
sbb
sub
pop
inc
xor
push
lods
fcomps
push
and
cmp
mov
leave
jno
idivl
xor
push
fldl
push
pop
cmc
push
pop
mov
xor
js
test
push
inc
jno
xchg
pop
leave
es
out
in
mov
testl
lret
loope
mov
pop
js
jmp
aaa
sarb
scas
adc
mov
in
xchg
daa
test
cmp
pop
stc
popa
sub
aad
cmp
loop
xchg
in
insb
fisttpl
sbb
ret
rcll
jmp
repz
shll
cmpsb
cmp
shl
stos
mov
lds
movsl
movsb
lds
lea
call
fmull
mov
lock
mov
sbb
or
push
in
lret
gs
repnz
pop
and
mov
mov
and
lds
mov
popf
div
inc
jnp
cmp
pop
inc
mov
xadd
push
das
sbb
in
jecxz
xchg
mov
push
inc
pop
mov
std
push
int
outsb
rclb
push
movsb
shl
addb
adc
cli
imul
lods
sbb
addl
add
add
xchg
fs
pop
pop
or
rorl
cmp
leave
dec
mov
or
movsb
xchg
cmpsb
jp
rcrb
arpl
lds
lods
lock
add
push
xlat
and
aaa
test
mov
pop
add
fcmovnu
daa
es
mov
adc
xor
push
fidivl
loopne
shl
ja
out
test
add
jle
mov
inc
shrb
pusha
push
push
shlb
roll
and
xchg
jns
cmp
popa
and
inc
into
push
pop
adc
aad
sbb
push
scas
es
or
in
mov
mov
inc
lahf
scas
stc
and
jl
pop
cmp
je
cmpsl
cwtl
adc
lods
sub
inc
fdivrs
shl
xor
adcl
dec
fwait
fwait
push
sbb
push
aas
push
outsb
sahf
xor
inc
push
pusha
jae
js
in
dec
mov
aaa
mov
adc
shlb
xchg
arpl
test
cmp
rclb
pop
loope
lcall
imul
mov
push
lret
outsl
mov
test
dec
or
push
in
cmp
sub
loopne
mov
loope
pop
mov
jno
ljmp
stc
jmp
dec
cwtl
daa
adc
jle
mov
ficoms
pop
lcall
sub
fidivl
or
or
sbb
mov
mov
into
daa
test
mov
mov
icebp
and
std
fwait
sub
cmpl
mov
data16
andb
dec
mov
loop
mov
inc
xor
cs
xchg
mov
popa
add
rolb
popa
adc
pop
ret
das
adc
frstor
xor
movsb
jbe
lds
lret
pop
and
fdiv
data16
imul
in
sahf
mov
cli
add
push
lods
scas
mov
mov
shrb
imulb
loop
leave
nop
inc
push
adc
fucomip
jae
mov
jle
mov
mov
xchg
int3
sub
jg
loopne
mov
add
push
lcall
mov
push
sub
hlt
cld
lock
add
cmp
std
dec
test
mov
jo
push
sbb
xchg
push
mov
or
xchg
jecxz
mov
shlb
fmuls
incl
hlt
jne
or
dec
ret
cmc
ret
jo
pop
pop
bound
lahf
add
pop
addr16
repz
adc
nop
pop
fidivrs
mov
out
push
popf
aad
sti
dec
ds
lds
stos
sub
adc
aaa
jo
sub
stos
es
cs
test
add
fdivs
enter
pop
pop
push
sarb
mov
pushf
sbb
pop
mov
sub
and
insb
popa
cmp
scas
das
testl
adc
add
jo
cmp
sub
orl
dec
daa
mov
mov
mov
pop
popf
jle
mov
test
pushw
sbb
dec
xlat
pusha
lret
add
test
outsb
xor
mov
sub
dec
mov
xchg
mov
push
popf
mov
push
out
jo
cli
or
imul
mov
shrd
adc
cmp
insl
mov
imul
cmp
cmp
enter
mov
fs
inc
or
jp
lret
test
pop
test
scas
movsb
mov
sarb
sbb
xor
jbe
add
mov
shll
out
mov
ds
test
out
jnp
ss
lret
mov
dec
adc
sub
push
loop
push
jno
lods
mov
out
xchg
nop
lret
mov
je
jne
cli
das
mov
ss
mov
sbb
lods
xchg
push
xor
ret
repz
fimuls
push
mov
jbe
lods
xchg
stos
jne
ss
fdivr
shlb
push
mov
pop
cwtl
std
hlt
lahf
push
mov
add
jae
adc
push
or
add
cs
fbld
insl
loopne
insl
jne
pop
jno
clc
and
andl
jl
in
fimuls
mov
xchg
out
push
ret
inc
or
and
xor
std
pop
es
and
int
adc
sti
mov
pop
push
sub
into
mov
les
add
enter
add
inc
rcr
push
cmp
pop
cmp
icebp
add
xlat
stos
sti
pop
mov
sbb
ret
mul
call
pop
inc
aas
push
mov
mov
popa
aaa
ja
or
pop
fdivrp
mov
repz
or
cmc
inc
xlat
cs
push
xchg
or
mov
mov
push
cmp
test
cmp
add
and
jmp
mov
cltd
and
outsl
pop
aas
call
sbb
and
into
hlt
out
or
testl
sbb
in
sub
out
xchg
loop
sbb
and
or
in
das
mov
jo
sbb
xorb
iret
je
adc
dec
icebp
and
in
inc
mov
push
cs
sbb
jne
xchg
lock
dec
rcrb
jne
rcll
jmp
inc
mov
xchg
inc
adc
addr16
sub
sbb
hlt
inc
jmp
lock
in
pushl
jecxz
pop
pop
mov
push
push
arpl
adc
sbb
push
cmp
sub
sar
sbb
sub
push
xchg
ret
dec
insl
insl
and
jo
push
inc
je
ja
dec
dec
jg
lret
adc
ret
movsb
clc
pop
sbbl
ja
and
arpl
repnz
cs
dec
cli
mov
adc
sbb
and
cmpl
jg
jae
xchg
imul
scas
or
test
cmpsb
addr16
and
addb
cmc
dec
repz
jg
mov
ror
adc
jecxz
arpl
jg
jns
inc
lret
nop
add
sub
mov
push
mov
aam
int3
lock
data16
jne
mov
cld
cmc
push
pop
inc
dec
xor
add
push
push
test
fsts
add
pop
xchg
adc
sbb
inc
mov
lods
mov
testl
mov
stos
int3
mov
test
fcom
mov
lcall
pop
or
inc
lcall
mov
std
mov
fbstp
arpl
data16
pop
xchg
cmp
mov
dec
cmp
scas
test
cmc
mov
loope
leave
or
push
adcb
dec
rorb
outsl
fsubr
aaa
sbb
sub
sub
inc
movsl
push
mov
fwait
orb
shlb
sub
les
fistps
mov
scas
int
out
mov
mov
mov
icebp
inc
and
add
pushf
xchg
xor
pop
pop
fxch
jp
jecxz
ret
add
sahf
fldl
mov
lds
add
std
pop
mov
pop
and
jnp
jge
push
fisubs
jnp
inc
mov
xor
pop
jno
mov
pop
push
jle
ret
mov
into
out
xlat
jle
repz
loope
sarl
inc
xor
add
adc
mov
lret
dec
jl
push
mov
sub
xor
fistpll
pop
fisttpl
dec
aaa
test
out
inc
dec
mov
dec
out
icebp
mov
fildl
mov
hlt
add
cwtl
xorb
push
ljmp
add
mov
sahf
cmp
xor
add
imul
sti
addl
adc
lret
adc
or
test
addr16
data16
push
leave
add
sbb
cli
fnsave
addr16
mov
sbb
inc
sbb
push
loop
jmp
mov
dec
mov
loop
xor
mov
iret
mov
daa
and
scas
adc
stos
cmp
mov
call
lea
jnp
xor
mov
inc
mov
rclb
xchg
mov
mov
loop
xchg
orl
and
jo
cli
mov
idiv
pop
call
pusha
add
push
in
adc
stos
sub
rorl
scas
js
out
sahf
cld
add
repnz
mov
xor
mov
daa
xchg
mov
outsl
mov
add
cli
and
pushf
aad
ret
fsub
sub
mov
out
les
cmc
xor
xchg
mov
pop
or
jg
enter
cmp
mov
cmc
mov
stos
dec
loopne
push
cmpl
adc
or
das
adc
sub
imul
push
mov
cmp
jno
popf
scas
je
cmp
xor
mov
shll
movsl
push
sbb
sarb
cmpsb
stc
or
dec
out
mov
push
jg
test
pop
or
mov
in
stc
ds
adc
int3
mov
jle
sbbl
dec
xchg
inc
add
mov
xor
pop
adc
add
push
cwtl
in
aas
sbb
jnp
lods
lods
call
aam
sbb
test
aaa
or
cld
jb
cmp
fiadds
flds
inc
prefetchnta
ljmp
and
push
loop
adc
das
cwtl
xchg
mov
icebp
push
lds
inc
lods
pop
into
add
cs
push
fstl
push
mov
daa
stos
cmp
add
or
cmp
addr16
dec
aam
lret
jge
pushf
fwait
sbb
repnz
stc
jecxz
les
push
xchg
out
push
ds
xchg
fwait
insl
jae
hlt
loop
push
lret
shrl
jno
dec
fadds
mov
iret
cltd
in
js
adc
jnp
pop
mov
cltd
and
movb
dec
adc
push
adc
js
stos
arpl
lcall
mov
test
xorl
loopne
inc
jg
repz
and
xlat
aaa
or
sbb
xchg
mov
outsl
fnstenv
jne
and
movsl
jl
nop
dec
adc
imul
sbb
jecxz
mov
cmp
and
inc
add
sub
lock
test
fistps
sub
fmul
push
dec
mov
mov
jnp
ret
notb
dec
into
and
test
xor
jo
push
rolb
mov
push
movsl
pop
mov
loope
sbb
sarb
xchg
cmp
roll
push
xor
mov
sar
cmp
repnz
mov
rorb
push
pop
inc
insl
adcb
aad
jno
or
dec
roll
adc
add
fildll
lods
lods
scas
xor
loopne
sbb
sub
sahf
out
push
push
popa
pop
ljmp
dec
mov
fidivs
fisubs
cmp
popf
jmp
adc
dec
pop
fcoms
sbb
call
mov
mov
push
into
inc
lret
mull
repz
or
scas
adc
xor
aaa
push
popa
xchg
repz
xchg
dec
sbb
cmp
fsubp
movsl
clc
lods
cld
rol
inc
pusha
and
bound
adc
mov
loop
out
cli
xchg
push
fsts
data16
adc
xor
and
loope
rcll
out
in
push
or
imul
inc
sarb
cmp
out
mov
pushf
mov
push
scas
lods
or
push
pop
loopne
or
fistl
cmpb
mov
xlat
adc
mov
scas
les
pop
pop
imul
pop
mov
cmp
xorb
mov
icebp
mov
sahf
push
push
sbb
rcrl
mov
sub
in
fcomp
jmp
xor
or
mov
jb
mov
mov
and
rcll
fs
outsl
loopne
adc
dec
popa
int
adc
repnz
loop
ds
add
dec
cmp
push
lret
test
pop
xchg
or
jl
imul
mov
jns
jle
xor
call
pop
out
sti
out
test
jmp
pop
jp
mov
push
sub
sbb
clc
cmp
mov
ret
in
test
xchg
fistps
push
inc
mov
or
adc
and
inc
shr
and
jne
mov
sbb
arpl
das
pop
sub
fwait
call
mov
jecxz
in
js
movsl
jecxz
lcall
and
insb
loopne
inc
ret
mov
or
bound
sbb
mov
jbe
mov
sub
cmpsb
or
sub
xchg
or
push
aad
mov
mov
sbb
stc
and
jb
aaa
xor
push
fistps
cmpb
xor
dec
push
bnd
shl
xor
add
mov
cmp
pop
jbe
popf
adc
ja
xchg
add
xchg
outsl
das
in
adc
jns
adc
sbb
or
test
in
push
sub
inc
scas
mov
pmuludq
push
subb
cwtl
add
pushf
ja
cmpsl
add
add
xchg
pop
cmpsl
jecxz
movsb
cmp
out
lcall
das
dec
jnp
inc
jne
and
lods
jo
std
imul
into
mov
xor
pop
aad
jmp
repnz
sub
or
arpl
clc
add
out
pop
fwait
lea
ss
lods
xchg
cmp
imul
faddl
bound
inc
cmpsl
out
sbb
andl
lods
lock
test
push
sbb
lods
outsb
scas
or
inc
lds
in
dec
movsl
xchg
into
enter
aam
pop
push
les
out
out
out
jbe
add
arpl
adc
ds
cmp
lea
sbb
xchg
iret
dec
add
sub
cmp
inc
pop
cmp
ficompl
pop
mov
and
rolb
push
sahf
das
andl
ret
cmp
lret
sti
pushf
mov
sub
xlat
nopl
sub
mov
in
add
jmp
leave
jbe
push
in
clc
or
pop
jbe
jbe
repnz
inc
sbb
xor
sub
adc
xor
push
mov
dec
lret
add
lods
adc
cmp
or
inc
test
rolb
pop
jl
sbb
fst
pop
leave
cmp
inc
inc
mov
clc
xchg
pop
push
dec
dec
in
gs
sbb
in
std
jb
outsb
out
push
es
or
mov
stos
inc
sysret
xchg
mov
shll
ret
adc
ds
mov
adc
mov
cmpsl
jb
or
sti
shl
int
mov
lods
pop
dec
andb
movb
insl
push
cmp
add
sub
add
in
adcl
sahf
in
adc
mov
inc
dec
sbb
mov
pop
rcll
xchg
and
nop
outsl
decb
jl
ljmp
and
aas
ss
cmpsb
daa
insl
cld
adc
inc
xchg
mov
je
push
dec
out
ja
cli
fnstenv
sub
fdivrl
and
push
jmp
ret
data16
lahf
stos
inc
dec
push
insl
xor
or
cmp
mov
outsb
test
mov
mull
mov
pop
push
push
stc
jnp
roll
aaa
call
mov
lds
aam
fwait
and
and
in
xchg
sarb
dec
adc
pop
mov
aaa
out
dec
mov
pop
cmp
xor
jae
push
stc
shlb
loope
daa
inc
nop
xor
cwtl
sbb
movsb
xchg
mov
cli
mov
xchg
sbb
add
pusha
add
lret
rorl
add
bound
ficoms
sbb
cmpsb
sbbb
adc
arpl
mov
in
adc
jo
mov
or
push
sbb
iret
shl
lret
sub
cli
xchg
ja
popf
pop
jnp
push
sub
add
sub
cltd
dec
cli
shlb
out
xor
ljmp
dec
insl
mov
call
and
jg
fwait
and
push
inc
or
cltd
pop
push
and
dec
mov
mov
repnz
jl
jno
lret
inc
nop
movsl
and
ds
mov
mov
mov
incb
test
cs
fcompl
ret
cmp
push
or
push
xchg
pop
xchg
dec
lock
xor
sbb
je
addb
xchg
sahf
sub
or
shufps
sbb
hlt
sahf
mov
jnp
sub
daa
and
jp
cld
push
sub
mov
push
hlt
cs
lock
data16
jl,pt
imul
or
fimull
int
lahf
mov
into
negl
leave
mov
rclb
lods
xchg
dec
out
jmp
sub
mov
pop
das
push
sbb
jns
ds
pop
imul
cli
mov
jl
in
arpl
xor
and
outsb
pop
mov
add
sub
lcall
lahf
arpl
xchg
rcrl
push
lods
orb
incb
test
inc
loope
cld
popw
cmp
sub
test
mov
jl
in
cmp
lock
in
pusha
cmp
aad
adc
in
cmp
pop
into
in
jbe
sti
ss
repz
and
cli
jae
and
pop
mov
mov
mov
push
sub
adcb
sahf
dec
or
and
sbb
outsl
or
dec
fs
cmp
adcb
fiadds
xorb
dec
ja
mov
data16
bound
push
pop
push
add
add
mov
jbe
mov
in
sbb
popf
inc
in
imul
insl
int3
mov
add
jge
mov
add
fnsave
dec
inc
cld
popl
inc
lods
dec
xchg
repz
out
in
std
lret
cltd
rorl
ss
imul
xor
pop
mov
stos
mov
mov
cmp
aas
mov
jnp
outsl
mov
rolb
xor
xor
pop
sbb
sbb
jae
pop
add
mov
and
sbb
adc
pushl
push
jle
mov
call
pop
push
pop
add
repnz
mov
xchg
sub
push
lret
jo
fnstcw
xor
dec
jle
inc
andb
bound
arpl
inc
mov
mov
bound
and
mov
fst
add
pop
pop
repnz
fs
mov
fxch
inc
mov
jbe
in
in
xchg
loope
or
lods
xorb
cmc
movsl
in
filds
mov
ret
je
pop
inc
cmp
rolb
and
xor
pop
test
int3
or
faddl
aam
sub
cli
in
nop
push
shrl
insb
test
adc
cmc
jmp
pusha
cmp
dec
adc
pop
xchg
data16
adc
xchg
adc
xor
in
jns
and
xor
loopne
and
adc
arpl
add
and
je
push
add
adc
cmp
test
out
dec
jecxz
filds
sub
stos
loope
mov
into
pop
ljmp
shrb
scas
xor
xlat
sub
xchg
mov
xchg
sub
mov
pop
cltd
out
mov
xor
jge
xor
movl
pushf
rcr
test
mov
push
lcall
aad
cli
movsl
data16
jae
notb
push
cmp
mov
adc
sub
xchg
or
jmp
icebp
sti
loope
insb
mov
inc
insb
icebp
add
sbb
outsl
mov
lahf
push
std
ret
fsubrl
in
dec
mov
push
sbb
cmp
jp
pusha
and
adc
sub
fdivl
mov
mov
in
rcll
ss
push
jns
adc
mov
dec
sbb
scas
mov
dec
jge
iret
into
jg
cwtl
mov
ds
sub
pusha
bound
xor
sbbl
xchg
iret
jns
xchg
ja
sub
push
sbb
fucomip
xchg
or
pusha
mulb
add
or
aaa
clc
pop
sahf
or
ljmp
in
in
push
jle
pop
mov
sub
xor
sti
inc
out
jp
mov
or
out
cmpsb
lods
or
xchg
mov
loop
sub
push
repnz
mov
mov
fistpll
das
clc
pop
imul
std
or
jp
nop
aam
prefetcht1
pop
jp
dec
out
leave
enter
or
lea
out
cmpsb
nop
in
int
cmc
jae
hlt
lods
cmp
scas
or
xchg
cmpsl
cmp
push
xchg
cltd
bound
outsl
lds
movsb
xor
lea
cmp
jp
pop
mov
fiaddl
ss
dec
jb
out
pop
add
aam
mov
mov
les
xor
adc
inc
pop
inc
dec
add
mov
cmp
push
xchg
mov
push
cmpb
imul
and
push
push
adc
pop
jl
mov
hlt
or
pop
icebp
push
jp
sbb
dec
push
or
sub
or
xor
dec
out
xor
adc
ret
pop
cmpsl
add
xchg
insl
dec
repnz
adc
movsb
cmp
stc
test
mov
lods
jns
adc
mov
or
cmc
sub
jbe
popf
push
or
or
pop
test
mov
ret
xorl
push
stc
insb
aam
or
mov
cltd
rorl
imul
mov
jnp
push
push
daa
push
pop
push
iret
jae
pop
or
jno
adc
mov
inc
sahf
pop
add
add
add
dec
dec
jg
ja
std
push
das
sub
jno
mov
ficompl
int3
xchg
jb
cmp
aaa
in
sbb
aaa
jns
mov
or
jmp
xchg
cmp
jg
repz
mov
daa
vmovaps
dec
jmp
mov
insb
arpl
pop
sahf
shl
push
push
movsw
mov
jg
push
cmc
in
loopne
fildl
adc
jnp
in
sti
mov
cltd
fstpt
fistpll
inc
mov
xchg
jae
ljmp
aaa
push
push
std
call
and
and
mov
adc
jae
cli
pushf
cmpl
pop
clc
or
leave
and
lahf
aas
xor
jmp
ret
test
iret
adc
outsb
mov
rorb
ja
push
cmp
mov
sbb
pop
dec
gs
in
sarb
cmp
pop
and
lea
mov
int
cmp
sbb
scas
call
push
bound
adc
dec
stc
inc
movsb
adc
jecxz
jno
sahf
and
dec
pop
jb
add
push
cmp
fldcw
push
pop
push
add
rolb
pop
and
lea
xchg
jne
std
jae
jnp
push
sub
inc
mov
mov
xchg
addr16
push
stos
iret
mov
cltd
sub
mov
jg
sti
and
enter
mov
jne
test
mov
pop
xchg
mov
mov
jns
mov
pop
stc
jmp
cli
leave
ret
xchg
add
cmp
push
mov
sbb
xor
jns
inc
ffreep
or
dec
cld
add
xchg
aam
xchg
jg
sahf
mov
inc
iret
pushf
idiv
push
add
sub
adc
push
sub
or
xchg
mov
push
inc
ljmp
push
jb
xor
sbbl
test
jns
outsl
js
xchg
inc
and
insb
pop
int3
sub
test
push
daa
scas
mov
sub
adc
leave
mov
les
add
cmp
sbb
push
jle
cmc
sub
fidivrl
adc
dec
repz
dec
shrb
add
mov
jns
xchg
ljmp
and
dec
cmp
jb
pop
mov
lods
dec
pop
dec
aam
sub
movsb
cmpsb
leave
xlat
xchg
push
sub
rcrb
sbb
dec
cltd
xor
cwtl
scas
fs
mov
or
mov
cli
or
jno
dec
ds
mov
lcall
into
imul
adc
cmpsl
leave
bound
nop
push
jns
cmp
mov
repz
mov
andl
mov
scas
loopne
imul
lods
test
and
mov
adc
xor
xor
adc
push
and
dec
out
sti
xchg
and
imul
pop
jno
mov
and
inc
mov
outsb
lret
add
in
inc
push
and
pop
inc
test
les
gs
out
jmp
xor
std
xor
lds
inc
push
sbb
cmp
mov
int3
add
out
test
outsb
mov
in
cmp
shlb
xchg
ret
or
repnz
xchg
out
jg
add
call
in
fs
shl
add
dec
inc
nop
jnp
shlb
jno
mov
jo
rol
or
insb
mov
jge
jl
inc
jmp
ljmp
lcall
popa
cmpsb
movsb
dec
sub
push
mov
out
scas
pop
ljmp
inc
sub
mov
loopne
call
push
popa
lods
xor
jne
imul
test
xchg
mov
outsl
lcall
pop
jo
fisubl
xchg
movsb
fstpt
push
xchg
std
dec
push
cmpsl
mov
hlt
lahf
std
xor
adcb
mov
test
andb
and
dec
jp
outsl
adc
adc
es
stc
pushf
fildll
int3
push
xor
pusha
xor
stc
sbb
sbb
mulb
je
enter
ficoms
cmp
xor
sub
pushf
mov
nop
js
gs
shrb
lret
jb
lock
pop
fdivrl
jne
orb
fistl
out
arpl
andb
cmc
sbbb
sub
jo
mov
jne
es
mov
aas
pusha
and
sbb
ret
outsl
or
pushf
sbb
and
xor
out
xor
int
mov
icebp
imul
push
cmp
mov
jbe
lret
fcmovnu
mov
and
mov
dec
call
popf
xchg
out
adc
outsl
mov
cmp
sbb
scas
or
movsb
and
in
jmp
cmp
sub
stc
mulb
mov
cs
fnsave
dec
and
inc
push
aam
adc
mov
xchg
aad
idivb
sbb
add
ljmp
dec
cltd
xchg
sub
sbb
lahf
outsl
sbb
inc
mov
adc
and
cwtl
lods
insl
loopne
test
sti
mov
clc
sub
push
cmp
sub
dec
and
push
add
inc
inc
repnz
dec
fcoms
loop
adc
dec
invd
cmp
daa
bswap
out
data16
xchg
adc
lret
imul
jle
test
fbld
lods
add
mov
jmp
lcall
inc
in
shl
shll
adc
loopne
dec
xlat
push
mov
jnp
adc
lret
nop
sarl
sub
dec
pusha
leave
xor
xor
add
xchg
push
add
xchg
fiadds
shr
push
std
dec
mov
jbe
cmp
jbe
in
faddl
lds
push
jmp
or
subl
dec
es
sub
movsb
cltd
pop
fdivs
aad
out
inc
scas
fnsave
add
movsb
push
std
repnz
push
nop
movsl
and
cmp
cld
movsb
arpl
imull
sub
pop
dec
mov
mov
mov
sub
or
nop
and
je
cmp
or
mov
in
inc
and
push
cwtl
ficomps
insl
cwtl
insb
in
jl
pusha
xor
aad
sbbl
pop
push
mov
inc
adc
lahf
in
xor
fimuls
test
jp
repz
test
xor
sbb
outsb
sub
sbb
xchg
dec
inc
fisubrs
popf
mov
jmp
adc
das
mov
lcall
push
test
mov
mov
inc
mov
sub
pop
ret
sub
add
lahf
pop
xchg
sahf
jnp
mov
push
out
out
dec
negb
xor
scas
or
pop
shrl
and
fwait
in
cwtl
lea
xchg
xchg
sub
je
xor
aad
mov
dec
hlt
jge
xor
lea
mov
push
mov
fisttpll
jno
mov
sti
fidivrs
sbb
sub
outsl
mov
push
xchg
jo
add
lock
fidivrl
pop
sub
sub
leave
mov
std
xchg
jne
popa
into
hlt
aad
icebp
inc
stos
mov
sbb
pop
aam
rclb
jg
inc
in
stos
pop
jno
or
add
jnp
adc
xor
push
cmp
jo
aaa
xor
xchg
xchg
xor
loope
jb
xchg
xchg
cmp
test
lea
int3
push
adcl
aaa
jle
sbb
mov
mov
fs
push
repz
sbb
in
ljmp
imul
mov
repnz
adc
out
lds
movq
adc
push
dec
adc
or
or
xchg
mov
or
std
push
sbb
movsb
xchg
cmp
dec
sbb
sub
mov
les
js
add
push
fwait
mov
lret
test
cli
rorl
sbb
lahf
mov
lods
and
xor
ljmp
pop
mov
je
mov
lcall
loopne
dec
and
add
mov
xor
shll
inc
subl
pop
aam
ret
cmp
out
cmp
mov
mov
adc
xchg
ss
dec
push
fcmovb
pop
pop
addr16
or
stc
jge
aas
roll
add
mov
jb
xchg
sub
cmp
push
push
shufps
cmp
mov
mov
add
add
jecxz
pop
mov
add
adc
mov
mov
into
ljmp
jbe
xchg
pop
shlb
jle
sub
mov
lods
cltd
dec
pop
aam
sub
mov
js
push
loop
popl
ret
push
dec
ss
aad
dec
in
test
js
inc
dec
fistpl
push
xchg
das
cmp
loope,pt
xchg
mov
ja
mov
add
sbb
jo
cwtl
pop
cli
push
cld
adc
and
sbb
mov
mov
mov
cli
mov
and
jg
test
and
sbb
xchg
fdivl
inc
mull
scas
mov
pop
xchg
cmovb
jb
mov
mov
jo
add
movsb
mov
jne
addl
popf
into
add
pop
ss
sahf
mov
mov
mov
lea
pop
xchg
cmp
repnz
xor
and
adc
add
fwait
add
sub
xchg
scas
or
loop
aas
xor
jecxz
push
sarb
dec
adc
test
je
popa
shl
mov
hlt
jp
sti
jns
lods
loop
xor
lods
dec
sahf
jbe
insb
hlt
xor
cmpsl
notl
ljmp
dec
jbe
sbbb
dec
jbe
cmp
pop
rclb
or
pop
pushf
arpl
dec
fsts
push
iret
hlt
and
int
inc
test
inc
xchg
dec
push
icebp
add
pop
mov
mov
data16
push
repz
ljmp
mov
mov
xchg
cltd
stc
test
cmp
fdivrs
out
cmp
mov
adc
jecxz
and
fwait
sbb
cmovo
and
adc
and
adc
in
dec
ret
aad
pushf
in
add
andb
nop
xchg
pushf
aaa
test
jbe
insw
mov
mov
cmp
xor
cmpsl
nop
jb
mov
outsb
cmpsl
cmp
gs
dec
pop
fbstp
arpl
call
test
pushw
mov
mov
cwtl
sbb
movsb
inc
std
xchg
push
out
addr16
dec
jbe
insb
add
in
cmpsb
inc
stc
stos
mov
pop
sbb
push
or
ss
sbb
repnz
leave
jno
or
mov
add
aaa
dec
orb
jmp
and
or
ret
mov
xchg
mov
sahf
dec
sbb
and
push
orb
mov
push
and
sub
mov
push
jecxz
jp
xchg
xorl
mov
pop
out
xlat
ljmp
xchg
aaa
jecxz
adc
out
add
test
xchg
popf
mov
mov
dec
mov
fldcw
cmp
jae
int3
jp
dec
inc
leave
adc
rcll
stos
xchg
test
imull
fisubs
cmpsb
pop
ja
outsl
add
jmp
mov
add
push
push
sbb
mov
sub
push
xchg
std
test
xor
pop
fwait
aad
add
cmpsb
fnsetpm(287
push
aam
jmp
sarb
out
bndstx
or
cmp
loopne
mov
faddl
cmp
ret
dec
push
addr16
sbb
inc
and
int3
lds
mov
inc
inc
lods
xchg
insl
pusha
or
or
pop
mov
lcall
icebp
push
adc
push
neg
or
clc
std
jb
inc
daa
jmp
mov
ret
sbbl
xchg
dec
push
fnstsw
lcall
sbb
fcompl
xchg
push
jno
push
mov
mov
cmp
sub
push
call
pop
fstpl
add
dec
out
scas
push
fcomps
mov
xorb
dec
xor
in
mov
imul
loope
rcrl
or
add
pop
lret
rcrb
cmp
jns
mov
je
push
outsb
and
adc
jmp
rcl
imul
dec
or
mov
inc
leave
mov
imul
mov
sub
ja
sbbb
mov
dec
rorb
cld
fimull
ss
ljmp
mov
push
hlt
jg
dec
test
or
add
out
rcl
jae
sahf
les
and
out
loopne
mov
mov
fs
add
ret
and
lds
add
push
inc
xor
imul
daa
pop
xor
xchg
push
rclb
test
and
jge
push
mov
dec
xchg
mov
cmp
incb
xchg
call
xchg
jb
fildl
jp
inc
dec
pop
mov
cmpsl
leave
adc
and
je
jbe
xor
jmp
add
fstl
mov
cmp
int3
jecxz
add
lret
mov
fmul
dec
pop
and
jmp
pop
inc
fists
addb
or
push
out
enter
sub
out
je
jnp
lret
add
call
mov
cmpsl
scas
sub
sarb
test
popf
mov
ds
popa
sub
xchg
or
clc
loop
cmpsb
sbb
lds
das
mov
add
loope
sub
shrl
and
cmp
and
pushf
lea
outsb
int
int
fdivs
mov
test
cmp
in
test
mov
iret
into
enter
sar
inc
in
or
insl
xor
xor
imul
sahf
mov
cltd
mov
mov
jg
jmp
push
cmpsl
ret
gs
adc
push
shll
int
add
xor
mov
xchg
aaa
push
or
fsubrs
pop
lods
mov
popf
mov
mov
ret
pop
mov
pop
cmc
outsb
pop
push
lods
push
sarb
pop
mov
xchg
jg
pop
xchg
dec
cli
pop
sub
mov
xor
lock
push
repz
insl
mov
stos
je
repz
inc
jb
test
bound
lcall
loopne
mov
mov
adc
jmp
scas
add
xor
mov
incl
dec
out
pop
iret
sub
daa
push
xchg
mull
inc
xor
xor
shlb
lret
sub
das
mov
xchg
js
imul
cmp
aas
ss
mov
faddp
dec
mov
cltd
cmp
push
test
dec
into
in
cmp
shrb
lahf
addr16
jp
in
xor
fsub
fdivrs
ja
mov
stos
loopne
popf
sbb
push
push
mov
and
pop
cli
jecxz
dec
dec
jne
sbb
fldt
lds
or
and
lcall
xor
add
aad
lds
xlat
jns
popf
jo
add
in
and
int
in
adc
divb
mov
jnp
jo
test
into
push
add
int
jns
loope
fidivrl
jne
push
lock
mov
test
test
out
xor
dec
pop
mov
mov
cltd
dec
mov
je
cwtl
aad
sbb
movsb
mov
pusha
mov
pushf
and
xor
pop
es
xchg
insb
sub
ss
popf
and
mov
cli
mov
xor
dec
sbb
cwtl
xor
les
push
sub
stos
add
sarb
inc
test
vunpckhpd
cwtl
mov
mov
fdivs
leave
bound
mov
lods
jp
add
cld
aaa
and
int
add
fwait
lods
das
and
jne
mov
in
mov
push
pop
cmpps
xor
xchg
jmp
fisubrl
and
andl
jge
jmp
mov
out
lea
xlat
int3
hlt
lods
arpl
pop
test
aam
cltd
js
sarl
dec
jb
ljmp
sbb
aam
push
pushf
jae
push
mov
inc
fstpt
inc
sub
mov
mov
adc
jg
sub
add
xchg
push
push
mov
cli
add
adc
sbb
jne
mov
add
sbb
into
cmpsl
sub
adc
dec
sub
dec
push
or
fildl
test
xchg
inc
sbb
fcomip
and
sub
insl
inc
int3
xchg
mov
push
xor
cmp
jle
arpl
push
insb
xor
mov
lret
push
lods
adc
fiaddl
jne
mov
xchg
sahf
mov
addr16
adc
dec
and
lods
nop
pusha
hlt
call
and
cmp
pushf
mov
icebp
orl
mov
ljmp
xor
xchg
adcl
xor
loope
idivl
lea
cltd
mov
and
mov
inc
insl
jno
js
sub
push
mov
cld
adc
faddp
movsl
and
fdivs
out
mov
sbb
lret
outsb
push
push
repz
mov
movsb
jl
hlt
push
xor
sub
fwait
pop
ret
and
test
stc
inc
test
or
int3
fsubrs
addr16
ja
push
mov
popf
xor
lea
jmp
sub
xor
mov
jo
jge
xor
xor
in
jl
arpl
popf
into
lret
sub
jecxz
imul
scas
dec
dec
dec
out
mov
adc
xor
mov
sbb
mov
rorl
dec
psadbw
or
lret
cld
or
movsl
test
mov
jle
cs
sbb
iret
out
mulb
dec
mov
fistl
punpcklbw
cwtl
aam
add
cmp
jp
sbb
rep
rorl
mov
mov
push
lds
lahf
js
cmp
pop
pop
pop
fldenv
mov
nop
dec
and
or
jno
fldcw
data16
mov
lcall
lock
lods
lahf
cwtl
popf
pop
shrb
xchg
cmp
imul
test
push
xchg
dec
iret
addb
mov
adc
mov
xchg
adc
sbb
xor
sub
shrl
add
nop
mov
cmp
fwait
sti
sub
mov
dec
pop
sahf
mov
cli
xor
pop
and
and
movsl
sub
js
cmpsb
jno
in
pop
or
mov
sbb
push
lea
dec
and
aad
mov
push
mov
mov
insl
loop
jne
mov
test
movsl
jb
dec
cmpsl
push
hlt
bound
fldt
loopne
lea
repz
push
test
push
outsl
mov
xor
imul
cmc
mov
ljmp
es
iret
xchg
aas
cmp
ljmp
or
bound
aam
js
jbe
cmp
addr16
outsl
jp
ds
fcomps
jns
xor
jl
popa
shr
mov
xlat
inc
cmp
sub
inc
pushf
jecxz
cmc
inc
pop
je
xor
fstpt
lea
xor
pop
jb
lock
xorl
inc
aad
dec
pusha
ret
push
out
xor
dec
pop
insl
mov
xor
mov
pop
sahf
sbb
jae
mov
inc
xchg
dec
xchg
push
lahf
cmc
sub
insl
sbb
mov
pop
in
outsl
insl
push
rcrb
in
in
in
push
and
or
jno
roll
or
pop
jne
mov
inc
jb
xor
out
inc
or
or
sbb
shl
ret
pusha
inc
mov
stc
jl
aam
inc
xor
add
stos
cmpsl
rorl
xadd
in
pop
or
ja
in
xor
jmp
in
jns
or
mov
or
dec
in
insb
loop
sub
movsl
daa
pop
ja
das
push
and
pop
notb
or
in
sar
gs
mov
cmp
lsl
adc
shlb
jle
push
push
sti
or
jo
cmp
in
es
or
add
cmp
sub
xor
aam
pop
int3
cmp
leave
sbb
mov
and
fcoms
scas
fildl
pop
or
sbb
sub
dec
sarb
rolb
sahf
das
aad
sbb
dec
pop
push
mov
xchg
into
stos
push
xor
dec
push
xor
inc
aad
xchg
push
push
add
cmp
cli
sub
ds
stos
sbb
cwtl
xchg
out
add
pop
andb
push
jmp
jp
jmp
sub
adc
mov
mov
lea
out
sarl
push
outsb
jae
jns
cmp
loope
dec
mov
into
cmp
fs
lahf
mov
outsl
sbb
sub
inc
sub
jp
jmp
pop
and
mov
lods
div
call
ja
xor
cmc
repnz
jmp
cmp
ljmp
mov
dec
dec
xlat
jb
clc
add
les
dec
aaa
mov
jo
sbb
push
push
popl
push
outsl
xor
in
push
fisubs
cmpl
shl
sbb
repnz
in
stos
mov
arpl
loope
je
pop
lret
xor
mov
scas
mov
or
je
inc
popf
dec
adc
xor
xor
cmpsl
mov
inc
inc
or
cmp
jb
gs
fucomi
push
jecxz
fucomip
push
add
dec
mov
push
cmp
mov
mov
mov
lea
xorl
sbb
mov
mov
mov
lock
enter
mov
out
je
lret
xor
cs
arpl
mov
add
push
fnsave
cmovb
mov
and
loop
imul
fdivrs
loope
nop
push
push
xchg
dec
and
push
js
incl
push
or
ret
add
popf
add
xchg
mov
scas
lcall
jp
outsb
rorl
out
dec
adcl
pop
aam
dec
cmp
lds
subl
add
rol
nop
add
ljmp
ljmp
or
fs
sbb
or
mov
cmp
out
les
std
mov
cwtl
cmp
sti
xorl
pop
inc
mov
fwait
xor
jge
outsb
jbe
arpl
dec
dec
lahf
icebp
dec
sub
shrb
stos
das
cmp
add
xchg
dec
jp
mov
sti
dec
mov
adc
mov
js
mov
sbb
mov
into
movsb
call
mov
outsb
xchg
mov
inc
pop
ja
nop
pop
clc
or
add
dec
dec
adcb
fs
cld
imul
mov
xchg
lret
mov
jp
pushf
insl
mov
mov
sbb
dec
cmp
aas
icebp
mov
lds
shl
stc
sarb
movsl
adc
sti
xor
roll
jns
jle
stc
out
mov
aam
adc
lret
hlt
repnz
dec
dec
lret
sub
stos
xchg
mov
aas
sbb
pop
xor
pop
mov
dec
mov
jg
adc
push
mov
daa
push
add
xor
loopne
ret
pop
mov
push
int3
mov
out
loopne
sbb
enter
imul
scas
inc
mov
sbb
or
mov
dec
stos
stos
ret
fildll
sub
mov
and
cmp
sbb
xor
and
push
push
insb
lret
cwtl
and
rclb
bound
inc
nop
sub
ret
pop
inc
pop
divb
sub
test
push
add
jnp
lea
nop
in
inc
sub
xor
call
sbb
dec
cmp
addr16
lcall
movsb
inc
aam
in
iret
xchg
call
push
cmpsl
daa
lcall
dec
incl
popa
mov
xor
mov
xchg
xchg
mov
pop
dec
pushf
adc
cwtl
dec
fwait
push
xchg
jnp
sbb
or
sbb
mov
xor
inc
cmp
clc
push
adc
loopne
js
jge
jae
inc
fwait
loope
push
cmp
into
insb
lahf
pop
lahf
pop
fists
mov
lods
rcl
fsubl
sbb
sbb
or
inc
in
sub
xchg
push
inc
jmp
popa
push
sub
xor
mov
pop
cwtl
ja
popl
cmp
push
mov
push
es
or
js
jno
add
mov
fstpt
inc
jbe
push
inc
loope
stos
sub
ja
adc
test
and
mov
leave
ror
fsubl
outsl
push
xlat
mov
adc
ljmp
push
into
insb
daa
mov
jge
sub
movsb
cmpsl
jo
rcll
cld
sbb
xchg
gs
cmp
push
enter
cmpsb
adcb
pop
jl
mov
sbb
jle
dec
xor
nop
cmp
xor
inc
icebp
test
js
jle
clc
cmpsb
ficoml
loop
gs
pop
jp
subb
nop
dec
mov
jno
or
frstor
or
mov
shll
adc
mov
cld
sbb
mov
pop
xor
call
and
lcall
fidivl
ret
inc
lea
pop
clc
xchg
inc
xchg
and
xchg
lahf
pop
out
xor
shl
cmp
adc
outsb
sub
clc
mov
clc
divb
mov
mov
pop
je
mov
pop
mov
mov
testl
mov
xor
sbb
push
pop
and
das
ds
pop
mov
in
lods
cmp
push
mov
orb
xchg
add
lods
mov
bound
push
shrl
jg
lock
and
dec
bound
push
xor
dec
mov
call
xor
dec
out
fstl
je
stos
sbb
lcall
mov
fwait
mov
inc
cli
rcrl
cmp
rcl
into
cs
lds
mov
imul
daa
hlt
dec
cmp
and
xor
out
insl
mov
lahf
or
jg,pn
in
mov
bound
je
mov
mull
jno
and
jb
loope
inc
ret
cmpsb
or
inc
ja
mov
mov
pop
fxam
filds
sub
js
cwtl
js
loopne
dec
mov
xchg
jno
lods
outsb
lods
fisttps
or
adc
dec
xchg
aas
push
sub
popa
ljmp
push
mov
je
cmp
daa
ljmp
movsb
dec
fcomp
add
xchg
lcall
mov
push
cmp
sub
and
test
jl
mov
int
add
inc
jmp
add
mov
pop
clc
stc
mov
lret
fldt
push
adc
add
sbb
fsubs
or
xchg
aas
lods
aaa
mov
push
test
xor
push
and
movsl
add
arpl
rcrb
mov
mov
and
fldcw
push
jno
les
outsb
xor
dec
pop
mov
or
aad
or
or
cmpb
loopne
icebp
ret
jle
jne
and
in
cmp
lcall
loopne
dec
sub
rolb
add
loop
dec
fbld
into
aam
clc
addr16
mov
cmp
iret
loop
hlt
xor
ror
inc
arpl
or
and
fcmove
aaa
add
push
roll
divb
shrl
sub
inc
mov
push
daa
mov
xchg
push
out
test
in
xchg
jg
rorl
cmc
sbb
js
jbe
mov
bound
je
or
arpl
lcall
imul
add
push
pop
add
jo
out
sbb
stos
incb
mov
push
pop
cmc
adc
jne
mov
sbb
jecxz
xor
lahf
sbb
je
sbb
loop
push
inc
mov
std
adcb
xchg
inc
clc
andb
scas
testb
or
lcall
xor
adc
jbe
fwait
sbb
daa
add
maxps
dec
mov
fs
in
shrl
jg
rcl
push
out
push
mov
jmp
lcall
jae
or
adc
add
daa
mov
mov
outsb
repz
push
sub
fsubp
out
ja
adc
imul
xchg
sub
insb
sbb
call
cwtl
push
aas
shlb
mov
arpl
mov
je
push
fcmovu
cmpsl
jl
push
popf
stos
adc
call
sbb
test
sbb
or
add
repz
out
or
pushw
push
fmuls
add
and
xor
jl
iret
mov
jg
xlat
mov
icebp
stc
shll
sbb
movsl
mov
cmp
mov
mov
fcoml
lcall
mov
add
and
mov
fcomps
cmp
mov
sbb
pop
add
push
and
ret
fstpt
dec
mov
inc
in
insl
rcrl
fmuls
sbb
fistpll
push
je
jmp
push
mov
add
outsb
mov
jle
jae
ficompl
adc
mov
xor
test
dec
or
inc
mov
addb
mov
mov
pop
rcll
mov
jmp
sub
lods
xchg
aam
or
push
subb
loop
test
push
dec
outsb
cltd
pop
add
fwait
jge
insl
inc
lret
pushf
inc
arpl
mov
insl
andb
shll
mov
test
das
into
test
stos
fdivl
fidivs
fdivrs
mov
or
inc
mov
ljmp
push
clc
daa
imul
jecxz
outsl
and
xchg
jl
add
orb
leave
cmpsl
or
dec
inc
xchg
and
mov
inc
cmpsl
cmpsl
adc
fstpl
mov
mov
das
mov
jne
fldt
mov
out
push
jl
inc
mov
outsl
add
in
out
loopne
add
stc
iret
or
lret
sbb
sub
fbld
xor
iret
xchg
or
jle
ds
pop
loopne
in
and
dec
fs
jg
ja
adc
dec
jge
mov
stos
push
out
pop
imul
imul
rclb
leave
adc
test
divb
mul
paddsw
or
sbbb
pop
or
cld
ljmp
orb
imul
fs
mov
icebp
mov
push
mov
cmp
dec
xchg
jnp
xorl
xchg
test
sbb
sub
sub
xor
sub
jnp
cmp
lea
and
xor
cmp
push
mov
ret
insb
adc
push
aaa
push
sbb
sbb
leave
ds
into
fcoml
lock
sub
test
jecxz
fldt
push
test
jl
int
movsb
pop
push
mov
and
sti
lods
icebp
lods
add
in
sbb
out
push
clc
lds
rolb
push
adc
pop
sub
in
andb
pop
ljmp
cmp
or
imul
fscale
jno
mov
add
jmp
mov
push
fwait
jns
test
int
movsl
stc
add
fsubp
inc
cmp
add
icebp
shlb
mov
inc
and
mov
add
push
ret
and
push
ret
out
adc
mov
addr16
ja
sbb
or
cmp
or
test
mov
push
aam
stc
add
mov
or
out
bound
ljmp
push
mov
bound
or
psubq
shld
rclb
fisubrs
pushf
add
aaa
ret
and
data16
sub
rolb
stos
xchg
sub
mov
xchg
dec
and
cmp
mov
cmp
fstl
mov
pop
and
cmp
push
xchg
jle
mov
push
sub
ds
and
push
mov
sbbl
pushf
adc
inc
sbb
jge
or
cmp
xor
cmc
mov
jg
xchg
adc
cmpsl
shlb
scas
jne
add
cmp
mov
std
push
pop
push
add
je
pop
cmp
xchg
push
inc
mov
mov
or
jecxz
pop
test
in
inc
inc
push
imul
sub
daa
in
adc
insl
insl
pop
inc
popf
add
mov
mov
insl
adc
int
shll
aaa
bound
pop
or
add
int3
aam
mov
or
jg
jae
lcall
sub
push
or
xorb
pop
int
mov
scas
shr
fadd
mov
jns
mov
stc
je
ljmp
mov
mov
ret
out
test
jae
scas
movsb
mov
ljmp
dec
int3
aaa
std
xor
jnp
insl
dec
sti
jle
sbb
sbb
adc
fnclex
out
icebp
ss
fcoml
adc
loopne
cmpsl
dec
inc
fldcw
adc
dec
push
fwait
mov
scas
push
mov
js
rcrl
movsl
fdivs
sbb
xchg
addb
and
jb
ret
push
ret
dec
loopne
aaa
mov
mov
add
std
xchg
push
xchg
jmp
popf
mov
sahf
pop
data16
fcomps
xor
shll
push
imulb
jge
jg
cmp
dec
cwtl
cmp
push
test
cmpl
test
inc
test
xor
fstpt
das
sarl
mov
push
add
mov
mov
pop
ret
mov
push
fmuls
bound
mov
es
int3
jb
pusha
fstpt
aad
sub
inc
mov
cwtl
das
loop
push
mov
add
pop
cmp
sub
adc
faddl
roll
cmp
fs
inc
xor
lcall
popf
insb
xor
mov
push
cld
pop
adc
loop
inc
sub
mov
push
imul
fnsave
push
mov
dec
cmpsl
ljmp
mov
adc
xchg
xchg
leave
and
jle
xchg
insb
into
sbb
lahf
lcall
xor
mov
dec
rcl
call
sub
cmp
sbbl
xor
xchg
mov
fnstenv
inc
add
sbb
mov
push
dec
mov
and
push
xchg
or
mov
lea
inc
mov
sbb
and
ja
or
jp
inc
testb
xchg
jl
cli
mov
addr16
call
loopne
dec
xor
jmp
cmp
push
dec
pop
repz
and
pop
push
cltd
xchg
int
test
mov
dec
xlat
aad
mov
cmp
lds
mov
popf
mov
lret
adc
pop
dec
repnz
cltd
mov
jmp
push
sub
stc
test
leave
inc
cmp
push
outsb
outsl
pop
enter
pop
cli
int3
arpl
adc
dec
jg
add
push
push
inc
lret
stc
subl
inc
je
movsl
cmp
repnz
mov
std
xor
push
stos
fldt
dec
outsl
lret
mov
outsl
daa
cwtl
fisubrs
xor
pop
stos
adc
cmp
sarl
scas
xchg
cmc
xchg
or
test
jge
dec
jle
lds
xchg
add
fcomps
push
and
sti
dec
inc
mov
out
mov
mov
adc
pop
sbb
sbb
mov
lock
and
jns
test
mov
sarb
and
pushf
stos
fmuls
mov
rolb
nop
jno
frstor
or
in
xchg
repnz
adc
or
sub
and
mov
push
stos
and
movsl
imul
dec
xor
repnz
idivl
icebp
adc
sbb
dec
loopne
xor
sahf
shlb
inc
mov
jns
cmc
mov
or
jecxz
push
pop
jnp
add
add
int
cmc
imul
std
movsl
mov
cmp
or
nopl
lret
dec
lds
aas
test
mov
pop
mov
push
fstl
cmp
mov
pop
and
outsl
xchg
sub
dec
mov
in
pop
jae
pop
test
loopne
lock
xchg
jb
xchg
iret
notl
push
lahf
jmp
xchg
pop
push
inc
dec
ljmp
dec
push
inc
rorl
das
stos
gs
iret
mov
mov
roll
push
sbb
outsb
test
cmp
test
stc
or
push
loop
xor
xor
std
sahf
inc
adc
js
fwait
jmp
fsubrs
stos
or
jmp
mov
lcall
sbb
sub
dec
or
and
dec
and
pop
in
imul
aas
int
cltd
mov
add
stos
sbb
cmpsb
leave
stos
js
jecxz
sbb
mov
adc
aam
mov
fmul
mov
lret
sti
add
xchg
cli
shlb
in
test
xchg
add
xlat
xor
pop
mov
call
insb
sti
add
insb
js
push
push
clc
sbb
add
or
mul
hlt
in
mov
fidivrl
pop
xor
insl
movl
test
jns
mov
jp,pt
fs
lock
mov
hlt
jge
xchg
andl
icebp
jnp
roll
jl
ret
push
and
mov
pop
cld
pop
leave
in
xor
pop
sub
mov
nop
xchg
leave
lahf
leave
pop
sub
pop
xchg
les
inc
ficomps
xor
ret
out
pop
mov
nop
decb
fninit
imul
dec
in
mov
mov
sahf
cwtl
ret
xchg
push
adc
sbb
pop
sub
pop
jmp
push
cli
fldenv
ret
mov
cmp
cmp
push
fstpl
sub
je
jne
out
adc
sub
mov
lds
sarb
test
and
std
push
std
aas
fistpll
push
and
jnp
xor
movsb
ljmp
aaa
in
aam
loopne
mov
adc
lret
sbb
and
mov
rclb
jne
xchg
scas
xchg
popa
pop
paddd
pop
pop
add
andl
lods
or
add
mov
sub
adcb
xchg
dec
jmp
mov
cmpsb
add
cmc
mov
fldt
aaa
or
push
int
push
rolb
mov
add
lock
les
cmp
icebp
pop
dec
adc
and
fadds
scas
inc
sbb
jne
jnp
rcll
aas
or
or
mov
jne
addr16
add
pop
jns
inc
cmc
ds
add
push
movsl
jmp
inc
sahf
xor
shrl
repz
and
rclb
pop
xchg
ret
dec
iret
pop
pushf
mov
out
xor
enter
out
daa
ja
push
adc
shll
mov
mov
das
jp
push
fbld
jne
sti
mov
add
inc
es
pop
movb
fimuls
inc
hlt
sub
sub
xchg
pusha
add
mov
clc
xor
popa
and
mov
sub
adc
jge
and
push
mul
pop
into
xchg
dec
out
and
lahf
test
inc
shrb
sbb
pop
into
cmp
sbb
shll
or
xor
jbe
jge
stos
cmpsl
mov
add
inc
and
adc
int3
dec
jbe
nop
cld
out
insb
cmp
clc
mov
inc
loop,pn
adc
mov
lea
sar
and
in
cltd
rclb
mov
std
lret
lret
jp
daa
mov
xor
inc
outsl
ss
add
shll
jns
sub
loop
popf
inc
into
gs
jge
pusha
jno
cmp
inc
nop
mov
icebp
dec
imul
aaa
mov
inc
ds
maxps
test
and
xlat
sti
movsb
es
lock
inc
xchg
outsl
pop
enter
pop
or
cltd
xchg
shlb
int
push
jmp
loopne
and
or
xor
inc
jnp
jbe
sub
popf
arpl
test
das
ja
xchg
mov
out
jecxz
idivl
movsl
adc
fnstenv
mov
sahf
adcb
lock
push
cwtl
cmp
test
xor
and
push
push
add
outsb
les
and
lret
mov
sbb
adc
jecxz
inc
sub
aaa
divl
fucom
inc
or
orl
mov
in
jbe
push
add
jp
pop
hlt
push
stos
sbb
ljmp
pop
sbb
xchg
dec
je
jecxz
insb
adc
loope
dec
rcrl
lods
and
sub
leave
nop
sbb
insb
icebp
fs
inc
mov
mov
insl
xchg
sahf
stos
int3
mov
mov
insb
data16
negl
lahf
mov
mov
out
add
fcompl
dec
push
push
out
ror
push
mov
mov
lods
cld
and
ret
dec
sahf
out
mov
test
fildl
jmp
xchg
nop
test
and
push
xchg
outsb
fcoms
pop
filds
mov
fwait
dec
lods
lods
jbe
push
adc
jge
or
outsl
out
xlat
bound
std
mov
sub
mov
sub
test
mov
sti
mov
jne
mov
repz
jo
sbb
push
loop
pop
push
add
stc
rol
mov
push
sub
dec
icebp
xor
ret
out
rcll
push
add
icebp
jge
xchg
adc
push
inc
or
rol
dec
fmul
int3
lahf
push
mov
cmp
fwait
dec
cld
aas
cwtl
out
xchg
push
cmp
cmp
emms
inc
popf
and
cltd
rolb
fbld
cmp
mov
sbb
push
adc
push
xor
dec
mov
jb
test
or
mov
inc
push
sbb
push
xchg
add
pop
mov
and
icebp
jne
ljmp
lret
sti
outsb
jno
mov
jg
sub
push
lock
sarl
mov
rclb
cmp
jmp
ss
mov
insb
loope
bound
insl
mov
ds
addr16
dec
xchg
mov
add
xor
add
pushf
inc
mov
cmp
pop
out
pop
enter
hlt
push
sbb
add
add
je
rcl
push
xor
aaa
push
cmp
and
stos
xchg
stc
or
sub
sbb
add
loope
int3
leave
incb
repnz
push
imul
push
jmp
dec
rorl
xchg
or
das
add
cltd
sbb
mov
lcall
cld
sbb
inc
icebp
cmp
insb
mov
pop
add
cmpsl
mov
mov
mov
mov
pop
pop
push
push
daa
cltd
fldlg2
adc
std
pop
scas
repz
and
mov
ret
shll
sbb
add
fwait
daa
cmp
in
and
test
stc
mov
out
xchg
stos
les
sub
jl
mov
xorl
js
fdivrs
jge
and
xor
jl
dec
loope
add
test
insb
add
fldenv
mov
mov
push
xchg
mov
scas
mov
pop
xlat
data16
cwtl
cld
and
std
daa
inc
push
shl
ds
jecxz
hlt
cmp
outsl
xchg
testl
pushf
add
test
or
xchg
or
addb
les
adc
jne
stc
mov
add
xchg
cmp
push
fldenv
jle
popf
cmpsl
aad
inc
lods
mov
add
xchg
dec
ljmp
loope
inc
and
ret
shlb
and
repz
inc
sbb
mov
pushf
jbe
sbb
sub
movsb
lret
shll
jae
pop
mulb
sbb
imul
jbe
scas
in
pusha
mov
cmp
lods
das
pop
movsl
lahf
stc
jno
fisubl
sbb
or
pusha
std
imul
out
sbb
outsl
pop
cmc
push
xchg
and
xor
jge
std
inc
aaa
lahf
push
aaa
adc
aaa
imul
outsb
lock
pusha
dec
adc
out
cli
sub
cwtl
or
sbbb
jle
mov
popa
cmp
cmp
outsb
or
fidivs
jl
idivb
daa
push
adc
stc
pop
push
adc
movsb
xchg
mov
imul
push
out
lret
jnp
pop
ss
scas
sbb
sub
cmp
mov
jg
insb
mulb
sbbl
cmc
aas
inc
jle
mov
stc
dec
negb
test
fwait
test
add
arpl
pop
jge
gs
cmp
lods
dec
add
jl
sti
cmc
orl
loopne
in
outsb
ja
ret
test
test
or
fadds
rcr
into
dec
sbbb
dec
or
int3
out
pop
inc
out
ret
and
test
leave
mov
xorl
sub
movsl
mov
insb
lret
jg
sbb
mov
cmp
cmp
pop
mov
push
xor
stc
call
cs
add
mov
mov
dec
test
push
movsl
add
lea
in
fisubl
dec
mov
mov
jp
lods
in
add
dec
cli
in
mov
cmp
add
jns
lods
lock
loopne
mov
cmpsb
push
loopne
or
inc
pop
pushf
pop
sbb
dec
dec
mov
pop
xchg
sbb
adcb
xchg
faddl
adcl
mov
jbe
sbb
jae
int
addr16
insl
cli
pop
jb
dec
cld
push
mov
je
inc
sub
out
sbb
push
insl
scas
jecxz
inc
mov
push
cmp
cmc
inc
pop
sub
bound
fists
cwtl
mov
sub
adc
movsl
aad
and
mov
cmp
push
adc
dec
sub
mov
sbb
xor
mov
es
sub
ljmp
mov
or
dec
das
dec
cs
ret
rcl
push
mov
mov
jmp
cmpsl
sbb
jle
and
and
push
test
fidivs
jl
loope
fwait
jg
loopne
daa
xor
sbb
adc
stc
mov
iret
sbb
loopne
out
pop
pop
add
jp
std
mov
cpuid
fcmovne
fwait
imul
or
loopne
push
sti
mov
xchg
jno
xchg
int
xchg
pop
or
push
push
ljmp
fwait
push
mov
or
xor
push
xlat
addr16
sub
lcall
mov
clc
push
mov
andb
clc
rorl
mov
cs
cmp
lcall
sub
popf
cmp
lock
pop
in
adc
dec
push
lahf
push
pop
cwtl
jecxz
cmp
aam
add
outsl
shrl
lock
cmpsl
push
icebp
test
fadds
movl
xor
sbb
mov
das
xor
mov
lahf
cld
sub
jns
xorl
popa
sbb
or
mov
cmpsl
lret
into
xor
loope
xchg
test
fsubr
xor
cld
icebp
subl
aam
movsb
mov
ss
fnstcw
and
into
mov
jp
jbe
adc
cld
or
pop
push
sbb
into
jmp
cmp
orb
add
daa
xchg
in
mov
rcll
jmp
fiaddl
pop
cli
es
cmp
sbb
shll
out
lods
xor
jmp
sub
xchg
int
or
xor
cmp
inc
rcrl
mov
mov
enter
xor
dec
push
xor
push
mov
outsb
incb
pop
pushf
andb
lret
and
dec
cld
imul
mov
add
js
push
and
fildll
stos
arpl
jmp
test
push
fisttps
cmp
xchg
out
movsl
and
cmpsl
pop
mov
ds
hlt
iret
cltd
popf
and
inc
out
or
lcall
mov
jge
decb
leave
gs
cmpsb
adc
mov
test
add
test
es
loop
adc
insb
push
sahf
push
int
jecxz
dec
out
jno
fistps
sbb
xor
lds
cmc
mov
pop
fildll
mov
test
xchg
pushf
sbb
cmpsl
cli
push
jno
jb
and
jle
js
push
cmp
cmp
adc
das
stos
pop
mov
pop
inc
mov
bound
repnz
or
in
pop
mov
std
adc
sarl
sarl
jnp
out
aas
mov
pop
movsl
xor
cmp
lahf
jae
and
adc
into
gs
push
insb
jo,pn
in
xbegin
xchg
hlt
mov
and
out
cmpsl
mov
push
xchg
fmuls
xchg
rcrb
adc
fwait
push
dec
mov
in
or
jp
cltd
fs
scas
pop
mov
dec
rcl
enter
jmp
ds
mov
jmp
test
push
inc
iret
push
sub
lods
into
mov
incl
shl
fstpt
mov
jge
or
lds
sub
cs
rolb
ja
mov
mov
lea
xchg
sbb
jg
notl
dec
cmc
xchg
xchg
dec
mov
or
mov
push
xor
faddl
ljmp
pop
xor
xor
test
ret
pop
cmp
xor
mov
es
data16
cltd
andl
popf
in
cmp
jne
push
nop
lods
lahf
push
xchg
mov
mov
xchg
or
aam
mov
shlb
add
pop
icebp
cmc
les
aad
sub
pushf
cmp
push
xchg
add
xor
mov
scas
pop
int3
push
rclb
repz
cmc
inc
dec
outsl
mov
out
sarb
fcoml
lahf
fisubrs
xor
adc
idivl
xchg
fildll
in
pusha
lret
jp
lahf
in
fisubs
push
int
dec
xchg
inc
push
mov
or
mov
pop
or
mov
add
aaa
aad
leave
cld
fimuls
mov
xor
xchg
adc
rol
sarb
sti
inc
push
pop
pop
push
pop
adcb
dec
adc
repz
mov
bound
ficompl
jb
gs
insl
dec
mov
rol
daa
xor
out
repnz
mov
dec
test
mov
insb
div
cmp
pop
frstor
cltd
mov
mov
sbb
aas
xchg
in
cmc
xchg
outsb
dec
cmp
inc
push
fadds
mov
jno
mov
bound
faddl
xor
cli
fmull
push
xlat
sub
test
xor
inc
inc
xor
and
pop
push
into
into
sti
jecxz
outsl
arpl
xor
dec
in
test
push
scas
loop
out
ja
in
std
testl
imulb
add
cmp
add
jecxz
or
cs
sub
ss
mov
xor
push
adc
jecxz
xor
rcll
in
fsubrs
push
loopne
stos
adc
and
pop
push
out
mov
mov
adc
add
mov
ja
and
fbld
adc
arpl
into
inc
daa
imul
pop
push
cwtl
sbb
push
les
push
adc
push
mov
fmul
add
dec
cmpb
fdivrs
iret
pop
cmp
mov
jne
pop
jmp
outsl
ret
mov
outsl
push
lea
push
popa
pop
cmp
aaa
push
add
dec
ret
arpl
cmp
and
out
test
dec
out
les
mov
xor
out
pushf
imul
or
mov
std
xor
imul
lcall
rol
xchg
pop
cld
je
repz
and
mov
mov
sbbl
mov
ss
and
fcomps
ret
es
lds
dec
dec
or
ljmp
push
mov
insl
sbb
inc
pusha
lcall
push
insl
in
jmp
movsb
mov
imul
cmp
je
xchg
in
cld
test
jae
or
rcrb
jmp
cltd
push
jnp
orb
out
out
dec
push
xor
push
ja
jne
xor
xchg
hlt
in
mov
out
jno
xor
movsb
sbb
je
jae
and
ret
and
lods
xor
rcr
ds
ljmp
loop
ds
stos
inc
push
int
sbb
jns
cmp
mov
mov
or
fwait
and
mov
mov
adc
jle
cmp
popa
fstps
lea
outsl
mov
test
and
inc
repnz
xor
xchg
bound
dec
in
and
ja
popa
pop
cltd
lods
shlb
daa
and
sub
push
and
ljmp
out
insl
cltd
cmp
call
jnp
sbb
sbb
sub
pushl
adc
sbb
ret
repnz
push
shrb
mov
xchg
cmp
pusha
xor
cmp
push
ret
push
xor
xchg
daa
and
mov
add
or
lock
hlt
lods
mov
int
outsl
push
mov
test
and
out
roll
outsl
mov
ret
repnz
inc
arpl
nop
jmp
cwtl
cwtl
lahf
das
cmpsl
aam
xor
add
cmpsl
mov
jp
jb
hlt
in
testl
daa
addb
ss
inc
adc
cmp
mov
lret
aas
mov
or
aas
pop
sub
arpl
movsb
or
scas
into
pop
lret
gs
iret
test
into
std
hlt
cmc
sbb
in
mov
jl
xor
sbbl
cmp
mov
mov
push
call
fisttpll
push
push
sbb
lods
mov
push
iret
cmp
add
mov
and
dec
testl
and
aaa
mov
mov
fbstp
mov
cwtl
cmp
mov
mov
arpl
pop
icebp
cli
mov
movsb
push
xor
imul
dec
in
jmp
scas
loopne
mov
test
shll
adc
sub
mov
cmp
push
xchg
mov
add
mov
out
pop
mov
cwtl
ds
in
movsb
pushf
jno
inc
jle
test
loopne
inc
lock
fucomi
inc
int3
call
mov
rorl
push
mov
mov
fnstsw
pop
xor
cmp
mov
in
sbb
subb
push
hlt
pop
cltd
sub
in
hlt
or
dec
sti
push
insl
sbb
mov
outsl
jo
pop
jg
repnz
in
test
xorl
test
xchg
cltd
test
aam
into
std
rolb
xor
lock
hlt
inc
cmp
orb
cmp
mov
add
movsl
cmp
pop
lahf
jge
dec
push
add
sbb
stos
pop
insl
sub
std
imul
and
jp
stc
ret
or
fs
je
data16
xor
mov
adc
or
jp
mov
xchg
mov
pop
push
add
rol
or
shrb
sub
movsb
jne
lcall
int3
fcmove
sub
sahf
std
ret
in
mov
push
pop
mov
jge
lret
mov
xchg
popa
sub
dec
mov
imul
in
aaa
js
and
mov
out
add
pushf
and
repnz
negb
inc
xchg
fs
or
or
jle
sbb
jmp
leave
dec
mov
pop
repnz
adc
int3
jmp
mov
push
jne
sbb
je
inc
enter
adc
movsl
jle
push
std
aas
lahf
mov
mov
in
jno
clc
mov
in
pop
ja
out
xchg
pusha
mov
into
int
jl
mov
rorl
sti
fs
mov
and
mov
pop
adc
mov
push
stos
stos
mov
sbb
andb
mov
inc
push
dec
sbb
rep
dec
daa
out
xchg
push
mov
and
das
les
shll
push
mov
mov
cs
aaa
pop
jo
and
ljmp
push
cmpsb
push
popf
ss
dec
xchg
push
rorl
test
push
inc
or
nop
scas
push
test
cmp
arpl
or
addl
sbb
lods
mov
repz
sub
loop
sbb
adc
push
inc
mov
scas
dec
push
xchg
mov
cld
scas
scas
mov
xchg
and
daa
or
adc
mov
jp
out
data16
shll
dec
movsb
push
shll
in
js
out
maskmovq
pop
or
lret
jl
cmp
and
mov
add
sti
mov
sbbb
cmpsw
or
leave
mov
sbb
xchg
inc
or
dec
add
daa
xor
fists
mov
and
add
pop
xchg
fldl
pop
mov
mov
loope
lret
arpl
shl
into
sahf
loopne
hlt
push
test
xchg
in
jb
fwait
dec
inc
mov
shlb
je
mov
pop
mov
lods
cltd
rcrb
mov
fwait
mov
mov
adc
inc
xor
dec
lcall
add
mov
mov
jg
xchg
dec
outsb
dec
pop
jnp
loopne
or
and
icebp
test
xchg
adc
repnz
out
ds
outsb
sarl
or
push
pop
popa
sub
sahf
int3
pop
inc
sub
jg
dec
push
jns
mov
jmp
cmp
cmp
loopne
mov
rolb
mov
adc
cmc
mov
mov
movsl
in
mov
fidivrs
outsl
das
pop
mov
ds
mov
mov
inc
in
loopne
out
sub
and
bound
es
jo
and
mov
cltd
rorl
jae
add
mov
clc
cmp
jle
loop
jmp
inc
jge
jo
fildll
scas
sub
mov
cmpsl
outsb
shlb
sti
jecxz
cli
rcll
js
or
mov
es
xchg
push
jge
inc
pop
das
testb
lret
or
pop
jle
pusha
repz
pop
lcall
fs
sub
lret
stos
xlat
cmc
imul
or
pop
or
mov
sbb
cmp
sub
mov
inc
dec
pop
inc
lea
popa
clc
test
les
test
es
lds
fistl
push
imul
test
mov
adc
rcl
xorl
mov
shlb
mov
add
imul
subb
cwtl
xchg
icebp
mov
lea
repz
push
or
fcmovnbe
or
into
popa
mov
mov
pop
jge
dec
push
hlt
fiadds
sti
adc
dec
mov
decl
dec
ja
cmp
pop
dec
sub
pushf
or
iret
js
inc
cmp
les
push
mov
mov
cmp
test
cmpsl
andl
cltd
iret
inc
and
insb
imul
rcrb
add
xor
ja
jl
push
pop
stc
je
push
cmc
push
adc
loopne
ret
fisttpl
sub
bound
inc
push
imul
stc
daa
es
pop
out
adc
xor
pop
movsl
and
or
fwait
cwtl
push
cmp
scas
mov
cmpsl
jl
xchg
aaa
loope
xorb
or
mov
daa
mov
cmpsb
pop
repz
pop
int3
jns
xor
dec
mov
jo
ret
call
xor
in
mov
cmp
ss
push
das
sbb
lods
sbb
fs
pushf
mov
pusha
cld
imul
ja
xor
sbb
gs
or
into
loope
sub
jnp
aad
movsl
sbb
lea
mov
test
lds
mov
jecxz
mov
movsl
lret
arpl
scas
addr16
imul
xor
cmpsb
dec
into
repnz
push
out
mov
xchg
cwtl
push
dec
les
mov
insl
ss
shrb
add
test
inc
cmpb
out
cmp
addr16
mov
dec
jg
inc
repz
mov
dec
sbbl
adc
lods
mov
adc
and
aad
enter
mov
ret
shrl
inc
rcll
xchg
jno
mov
sbb
sbb
xchg
or
sbb
push
jbe
xchg
adc
mov
pop
call
icebp
sahf
sub
dec
pop
inc
xor
push
popf
jge
mov
mov
push
inc
add
orb
hlt
js
mov
out
mov
inc
clc
aad
add
adc
sub
pop
cwtl
dec
mov
arpl
dec
jg
and
mov
inc
lods
fldl
shlb
nop
sub
push
adc
mov
rorl
je
mov
mov
push
mov
nop
push
scas
cmp
inc
sub
xchg
mov
sub
push
jl
popf
mov
sbb
shl
andb
sti
adc
jle
or
mov
movsl
and
mov
mov
xchg
popa
and
xlat
add
jb
repnz
cmp
orl
popa
fidivl
push
in
lahf
arpl
adc
push
sub
arpl
add
dec
orl
and
push
lahf
pop
sub
cmpsb
jne
test
repz
rorb
cmp
int3
popa
mov
adc
mov
sbb
jecxz
xor
ja
arpl
les
mov
xor
and
mov
mov
icebp
sub
cmp
mov
ds
xor
push
cmp
adc
and
mov
push
idiv
int3
dec
sub
das
xor
sub
ja
pop
jl
ja
ljmp
jecxz
push
lods
sub
pop
xchg
xor
fmull
ds
mov
sub
out
test
xor
insb
mov
arpl
lods
pop
xchg
pop
and
push
dec
dec
ret
into
dec
add
mov
jo
jp
popf
rcr
mov
int3
or
adc
ljmp
cwtl
cmp
out
adc
cmp
dec
adc
shll
push
mov
pop
jge
push
push
push
int
les
jmp
xchg
mov
test
sahf
ja
mov
cmc
leave
stos
dec
sub
fucomip
int3
ret
push
cli
jecxz
jp
scas
loop
lret
frstor
rcrl
xor
xor
out
test
daa
js
jg
pop
jge
mov
std
test
pop
repz
push
or
xor
pushf
push
and
gs
clc
inc
fstpt
mov
inc
jne
ljmp
sub
dec
ljmp
aam
cmc
or
dec
jmp
pop
push
mov
and
repnz
dec
mov
aas
and
cmc
std
jecxz
jg
mov
std
lcall
push
push
outsl
pop
jp
addr16
jae
jbe
mov
push
call
xor
push
sahf
lret
push
mov
push
pop
jne
mov
ret
mov
adc
or
xor
insl
sbb
ljmp
inc
imul
xor
jle
xchg
fidivs
addr16
popa
xchg
shll
ljmp
stos
mov
dec
cmpsb
jns
xor
or
jnp
shrl
sbb
es
xorl
pop
cmp
stc
arpl
sub
lcall
repnz
push
mov
or
xchg
je
and
adc
cmpsl
fs
jle
fisubrl
jns
out
cmp
or
rcrl
mov
ljmp
loopne
shlb
cmp
js
mov
outsl
sbbb
loopne
mov
adc
mov
xchg
wrmsr
ret
lods
inc
ljmp
loope
icebp
pop
loopne
loop
clc
sub
daa
repz
and
add
jge
in
xchg
js
adc
pop
hlt
jecxz
inc
out
fcoms
or
lcall
leave
ds
xor
add
enter
jbe
sbb
dec
bound
mov
call
lret
push
adcl
fisttpl
aas
cli
add
inc
data16
movsb
or
or
daa
leave
neg
cwtl
or
out
push
xchg
in
cltd
jmp
in
dec
icebp
push
lahf
pop
mov
mov
aam
pusha
in
andb
add
fidivrs
mov
cmp
je
cmp
push
out
mov
lods
scas
or
add
in
jle
or
and
and
imul
roll
add
mov
cmpsb
xchg
lods
popa
jbe
sub
xchg
stos
rcl
test
lcall
pop
or
xchg
or
cmp
pop
mov
adc
pop
rcrb
mov
push
test
andb
add
pop
cwtl
mov
scas
mov
dec
push
addr16
add
inc
jg
scas
fld
dec
cmp
or
push
lret
sbb
nop
testb
cs
ljmp
pop
mov
xor
les
lret
or
dec
out
mov
stos
daa
enter
cwtl
mov
or
mov
dec
out
arpl
mov
jl
push
or
nop
nop
xchg
faddl
pop
jnp
int3
sub
aaa
sub
ss
rorl
and
fisubs
sbb
es
adc
inc
es
sbb
jge
out
popa
dec
sub
jns
add
sbb
or
mov
repz
inc
daa
fcoml
dec
mov
jbe
xchg
mov
pop
push
lret
dec
lret
and
shll
mov
ljmp
mov
shl
data16
sbb
test
movsb
or
aad
push
push
dec
mov
daa
push
push
fcmovnu
add
push
xor
mov
xchg
push
subb
inc
fisttps
or
movsb
sti
cli
jmp
dec
test
jmp
sub
insl
ss
leave
in
dec
pop
or
lock
jne
mov
nop
dec
jle
ret
sub
dec
or
jl
out
ds
mov
sti
fs
cmp
nop
mov
push
iret
push
stos
sub
push
xchg
cmc
jnp
imulb
rcll
lret
add
pop
pop
mov
scas
pop
cli
jmp
jecxz
mov
jb
into
inc
pop
mov
pushf
or
mov
pop
popf
in
push
push
xchg
cmpsb
pop
mov
rolb
mov
ret
jmp
mov
mov
inc
pushf
enter
test
dec
xchg
sub
test
cltd
push
ret
inc
cmc
and
and
call
fldt
outsb
stos
scas
inc
clc
cwtl
ja
sub
or
cmp
movsl
out
sahf
cmpsl
lods
test
movsb
xchg
loop
pop
add
push
sti
jecxz
and
lods
outsb
push
or
in
or
pop
cmpsb
adc
imul
lock
add
add
inc
mov
pop
dec
jb
fs
jno
cmc
pop
faddl
dec
mov
pop
sbb
pushf
in
std
jmp
push
lret
notb
mov
lcall
into
mov
imul
stc
loope
loope
pop
or
dec
and
outsb
cmp
arpl
rolb
xchg
inc
mov
insl
adc
xor
rol
jbe
mov
scas
adc
mov
bound
inc
jecxz
pop
clc
enter
repnz
xchg
add
and
enter
loop
lcall
pop
sarb
xor
in
arpl
popf
sub
dec
pop
push
cmp
sub
aam
jnp
cmp
jmp
std
xor
sbbb
scas
in
push
dec
dec
xlat
jae
arpl
adc
or
mov
lret
out
sub
pop
adc
mov
mov
cwtl
sbb
inc
pop
mov
test
push
repnz
lods
nop
xor
arpl
mov
rorl
jl
pop
mov
dec
cmp
cltd
inc
and
test
lret
adc
push
loopne
cmp
pop
dec
mov
mov
test
mov
or
mov
insb
sub
sarl
pop
jle
jp
pushf
jp
jmp
or
cmp
divb
or
aam
fists
xor
mov
sti
jge
or
nop
sbbb
add
arpl
idiv
inc
outsb
aas
sbb
push
ret
pop
cmp
aas
mov
scas
fsubrp
insl
and
ret
pop
enter
mov
mov
push
arpl
xor
dec
mov
sbb
or
inc
add
fcoms
movsl
pop
push
dec
dec
push
in
enter
cwtl
std
in
imul
jb
imul
pop
sbb
int
push
pop
add
push
lds
xor
lock
jge
mov
push
or
into
xchg
sub
or
adc
test
cmp
mov
cltd
scas
jnp
pop
pop
rorl
push
mov
xlat
push
fcompl
jo
cwtl
push
adc
xchg
out
or
and
sbb
es
dec
lock
mov
mov
xchg
jae
or
lods
test
pop
fidivs
int
test
sahf
les
cmp
xchg
fdivrs
cs
sub
xchg
sbb
outsl
sub
gs
push
rol
lret
or
dec
loope
add
mov
xchg
daa
movsl
xor
mov
fdivrl
mov
sub
adc
pop
mov
cmp
repz
test
movsl
mov
or
ds
mov
int3
xchg
fnstsw
mov
scas
push
mov
push
outsb
xchg
push
or
stos
sarb
mov
fildll
push
push
cs
pop
mov
pop
test
cmp
insl
cmp
adc
jo
scas
or
out
xchg
jmp
in
or
inc
jmp
push
push
push
popa
fnstenv
insl
sbb
xor
mov
and
sbb
mov
test
xchg
or
int3
mov
loopne
mov
gs
push
inc
data16
xchg
sbb
or
orb
xor
add
jns
or
dec
popa
out
dec
into
jae
mov
mov
adc
jp
loop
add
or
add
pop
rcrb
loop
cmpb
xor
cmpl
cmp
inc
add
adcl
jecxz
sub
mov
rorb
mov
cmp
jecxz
js
addb
or
dec
or
fldl
dec
or
iret
jnp
in
insb
test
into
fisttpl
orb
push
dec
lea
setg
and
fwait
push
rcr
inc
cwtl
adc
fcmovne
jne
jbe
xor
jl
jae
jne
mov
lods
cmpsb
incl
push
and
pop
mov
addr16
xchg
dec
scas
es
add
pop
sbb
insb
and
mov
add
imul
cmp
inc
testl
and
sarb
jp
jbe
insb
adc
xchg
testl
mov
add
mov
mov
into
inc
pusha
sub
mov
add
sbb
sarb
cwtl
jnp
add
mov
fwait
cmpsl
jmp
test
lret
pop
movsb
inc
cmc
js
enter
in
mov
push
xor
mov
das
cmp
adc
pop
imul
int3
aam
les
pop
jns
pop
or
push
roll
insb
sub
out
mov
int3
adc
out
jg
jbe
jmp
and
out
push
insl
cmpl
pop
hlt
push
inc
mov
mov
sbb
push
jnp
inc
sti
addr16
lea
cmpsb
insl
xor
mov
in
cmp
inc
inc
inc
repz
mov
sahf
ror
aam
and
cmp
mov
inc
cmpsb
mov
xchg
les
out
sub
loope
rcr
or
lods
in
fs
mov
mov
filds
icebp
addl
aad
in
arpl
jle
test
cld
sbb
fstps
test
dec
fistpl
in
jge
sbb
loopne
add
push
adc
and
and
test
pushf
shrl
push
adc
inc
add
lods
out
aad
pop
mov
push
ja
mov
ss
add
fwait
xor
test
cmp
movsl
xchg
mov
jge
lahf
xchg
inc
jae
cld
shl
lock
leave
add
and
push
popf
arpl
adc
or
stos
cmp
jmp
bound
in
push
lods
pop
es
ss
inc
push
mov
adc
roll
pop
shr
mov
jmp
mov
test
and
sbb
ret
insb
stc
test
mov
sbb
or
js
into
mov
in
call
push
xor
js
sub
xor
or
jge
fcomps
aaa
jge
sub
mov
lret
jp
ss
push
inc
mov
xor
pop
stos
je
rolb
xchg
dec
stos
add
stos
inc
lcall
mov
test
mov
cmp
mov
and
mov
pop
cmpsl
in
inc
pop
fs
or
arpl
pop
mov
xchg
mov
es
mov
repnz
cmp
iret
subl
ds
or
aas
std
sub
pop
lea
imul
lcall
sbb
add
bound
mov
mov
and
and
scas
adc
shrb
dec
in
dec
das
mov
cmp
in
cmp
dec
movsl
mov
adc
pop
ljmp
ret
push
and
dec
inc
aaa
clc
negb
sub
pushf
mov
mov
in
stos
cmp
ljmp
out
pop
js
or
and
adc
pop
rcrb
jnp
testb
icebp
sub
es
push
bound
jmp
add
xor
out
jmp
imull
cmp
fnstcw
xor
cmp
test
sub
ss
ja
aas
pop
es
loope
repnz
sahf
add
adc
mov
aaa
movsb
and
cld
mov
sti
xchg
call
mov
fmull
cmp
frstor
mov
jne
dec
xchg
lds
loope
mov
lret
sahf
icebp
mov
mov
lahf
rcl
pop
add
nop
xor
lret
rcl
dec
mov
jnp
int
popf
mov
aam
add
sahf
jo
stos
fildl
popf
jne
pop
js
mov
jle
pop
aad
lcall
or
icebp
sub
push
push
xchg
xchg
xchg
es
gs
push
xor
hlt
inc
mov
push
movsb
movsl
mov
mov
into
imul
mov
loope
push
fcoms
jecxz
movsb
int
mov
mov
and
dec
cmp
bnd
mov
push
jge
sbb
into
jmp
rcll
jb
lret
jl
ds
aas
mov
mov
imul
sub
push
data16
js
pop
ret
test
push
cmp
add
sbb
xor
cmp
xor
leave
in
aam
out
and
jo
stc
mov
mov
xchg
stos
jmp
insb
jle
sar
pop
inc
aam
je
and
pop
pop
pop
psadbw
or
mov
das
xor
add
jl
adc
sub
roll
fisttps
out
sti
cltd
xchg
and
das
fisubl
inc
adc
scas
dec
cld
sub
jne
lock
lods
hlt
sti
shlb
mov
js
fstps
imull
push
jbe
mov
mov
cmp
pusha
mov
push
lods
jle
movsb
andb
cmc
sti
xor
mov
leave
test
fnstsw
sbb
into
inc
cmp
ljmp
mov
in
add
pop
or
add
mov
std
popf
xchg
sub
adc
adc
int3
into
lock
and
cmpsb
cmc
jo
xor
loopne
pop
ds
and
mov
mov
jmp
inc
les
out
and
mov
insl
xchg
pop
cmc
sbb
in
jl
pop
xor
subb
inc
adc
jmp
clc
sbb
iret
or
xchg
mov
pop
sbb
add
imul
leave
sbb
insb
loope
insb
dec
rclb
icebp
push
in
xorl
and
mov
fistl
xchg
jp
xchg
xor
pop
xor
jns
outsl
mov
mov
push
add
sarb
aas
insl
xchg
je
mov
int3
in
test
mov
lret
lea
outsb
std
lock
adc
leave
fisubs
mov
or
adc
mov
mov
and
dec
xchg
insl
out
scas
ficompl
inc
ljmp
sbb
mov
addr16
xchg
push
and
mov
cmp
mov
sub
movsl
les
loop
adc
inc
xchg
jg
push
or
js
adc
dec
jmp
dec
sti
cmpsl
arpl
lock
mov
push
adc
mov
cmpsl
and
das
jae
xchg
sub
xchg
repz
test
movsl
and
in
loopne
fs
and
icebp
push
imul
or
bound
xor
sub
pop
fwait
mov
lods
fidivl
xchg
adc
fcoml
in
jl
or
push
icebp
sub
inc
xor
xchg
lods
sub
sbb
xchg
pop
sbb
out
mov
jnp
mov
sub
jo
dec
inc
dec
sub
or
js
xchg
xor
inc
shlb
pop
adc
jmp
jge
mov
adc
mov
pop
in
adc
arpl
scas
mov
ss
aas
pop
aad
xchg
ss
pop
mov
outsl
cmpsl
stos
adc
arpl
cld
pop
inc
mov
bound
je
xchg
movb
dec
xor
push
push
call
push
repnz
lret
xchg
push
xchg
inc
mov
icebp
scas
xor
mov
imul
pop
pop
bound
jbe
mov
inc
dec
dec
sbb
xchg
sub
jg
cmc
or
xor
xchg
jns
adc
ret
add
pushf
sahf
sub
pop
cmp
mov
sbb
jl
jo
mov
outsl
sbb
adc
or
scas
aaa
scas
loope
lock
and
xchg
mov
xchg
mov
push
xchg
mov
jmp
andl
pushf
pop
mov
push
mov
inc
cwtl
jp
mov
jne
and
xlat
push
mov
movl
int
mov
mov
stos
ficompl
mov
loope
mov
inc
dec
lock
popf
iret
addr16
icebp
pop
gs
or
mov
pop
xchg
jp
stos
sbb
xchg
imul
inc
fnstenv
das
push
xchg
pop
in
mov
cmp
decl
divb
stc
dec
iret
inc
lcall
test
dec
sbb
sarb
mov
cs
in
add
stos
pop
sub
popa
fldenv
push
xor
fcoms
aaa
ja
pop
cli
dec
call
fstpt
outsb
aaa
in
aas
push
xchg
pop
adc
sub
mov
push
outsl
sbb
cmp
je
mov
inc
pop
incl
xor
jne
aad
mov
icebp
add
add
aad
adcb
jle
mov
loop
pop
xchg
and
aam
outsl
xchg
jo
or
or
dec
jle
mov
mov
test
push
lods
lret
sbb
or
pop
cmp
inc
or
mov
sbbl
addr16
in
xor
sub
mov
adc
adcl
add
adc
pop
xchg
loopne
lods
leave
dec
inc
inc
mov
das
xor
pushf
sub
gs
sbb
and
push
std
cmp
jge
test
xor
test
scas
push
or
mov
mov
leave
test
xchg
push
pop
jo
cmpsl
imul
jbe
sbb
sub
into
scas
push
popf
cmp
popa
cmp
ja
inc
scas
jae
pop
test
hlt
add
jmp
in
aam
ret
stos
mov
sarl
sbb
sub
in
shll
pop
aaa
leave
jbe
icebp
int3
push
xor
btr
xchg
shrb
add
mov
sbb
inc
es
subb
out
pop
xchg
cmp
pop
out
inc
and
stos
cmp
ficompl
icebp
cmp
mov
int
push
sbb
xchg
inc
push
mov
inc
dec
leave
pop
mov
lret
mov
add
cmp
mov
mov
sbb
pop
mov
jns
mov
mov
xchg
and
add
in
jno
out
xchg
mov
scas
out
cld
fstpl
xchg
aaa
pop
cmpsl
sbb
lock
inc
xchg
stos
jb
adc
pop
aaa
ficoms
jbe
sub
ja
movsl
aaa
pop
push
nop
in
cmp
cmp
popf
dec
shrb
push
js
hlt
mov
push
mov
or
mov
pop
and
push
out
cmp
mov
xchg
mov
inc
inc
aaa
sti
mov
aam
cmp
mov
sbb
jae
sub
in
mov
dec
mov
mov
outsl
ljmp
or
xchg
out
add
loop
mov
je
scas
push
std
jge
jae
inc
pusha
pop
adc
ja
inc
or
jg
cmp
aad
fdivrl
pop
daa
push
movsl
mov
mov
jae
and
jne
cmp
rcll
xchg
mov
mov
push
dec
xor
cltd
xor
scas
scas
mov
into
neg
add
fwait
ss
sbb
mulb
pop
mov
or
mov
loope
mov
and
ss
ss
loopne
adc
mov
adc
sarl
das
lds
test
enter
mov
inc
mov
or
mov
sbb
cs
mov
ljmp
sbb
jno
push
mov
mov
mov
je
popa
sub
or
push
lcall
clc
subb
and
scas
ss
adc
mov
sub
sti
mov
fisttpl
int3
mov
test
add
fnstsw
test
jbe
mov
dec
icebp
fistl
and
pop
clc
or
insb
dec
jl
xchg
enter
pop
pop
mov
dec
ljmp
mov
mov
in
lods
and
inc
popl
ror
sub
mov
and
push
js
shll
pushf
bound
push
add
fdivrp
mov
aaa
push
jb
dec
imul
sbb
add
data16
jge
xchg
xchg
sahf
cmpsl
mov
js
icebp
mov
sub
es
mov
adc
xor
xor
pop
mov
adc
adc
out
mov
mov
xchg
pushf
out
mov
push
mov
mov
push
stos
popf
stos
in
lods
insb
out
pop
inc
dec
mov
lock
mov
cmp
out
in
mov
or
mov
lret
add
in
inc
stc
fistpl
push
jecxz
pop
ljmp
inc
fidivl
pop
cmp
jg,pn
cmc
mov
mov
call
cli
popa
pop
push
lods
dec
fs
jne
sahf
and
mov
add
xchg
xor
dec
inc
xchg
lret
insl
je
ret
jns
fstl
mov
mov
and
cmp
push
mov
jae
popa
mov
push
xorl
jle
js
mov
in
xchg
test
mov
les
adc
inc
cmp
ret
test
and
or
cmpsl
mov
insl
jecxz
ror
or
fisttps
push
mov
xchg
lea
jno
aad
mov
mov
and
inc
lret
mov
jne
leave
sti
fucomip
pusha
add
push
movsb
xchg
mov
sbb
ret
cmp
xchg
adc
cmpl
imul
mov
mov
ret
pop
xchg
outsb
sarb
hlt
push
in
repnz
ds
push
popa
inc
popa
push
xor
sub
les
xor
jmp
dec
cwtl
push
scas
lods
xlat
sub
add
mov
jo
push
sbb
jnp
inc
int3
sub
subl
scas
xchg
mov
jnp
out
in
sbb
shll
mov
cmp
xchg
arpl
repz
ret
stos
ret
ljmp
rep
dec
add
mov
xchg
xchg
ret
into
lret
sbb
cwtl
inc
dec
addr16
add
pop
in
mov
adc
scas
adc
adcb
mov
or
add
les
push
xchg
iret
ret
sahf
jle
pusha
pop
mov
rcrl
gs
dec
addl
push
jo
xor
jge
in
adc
or
shrb
mov
and
cs
mov
shrb
loop
inc
xchg
fincstp
outsb
inc
mov
cmp
repnz
mov
xchg
dec
mov
addl
push
cmp
jns
inc
lds
pop
and
ficoms
popa
cmp
adc
int
or
aas
lcall
add
sbb
mov
les
les
pop
cltd
shrl
das
lds
mov
ss
imul
leave
sub
out
fidivl
sub
sbb
fstps
sub
sbb
out
push
sbbb
lret
mov
inc
mov
sbb
sahf
mov
cli
xor
out
ss
popf
dec
mov
push
mov
inc
testl
incb
add
int3
and
mov
xor
mov
push
inc
jne
pop
push
mov
sti
fcoml
fmull
in
sti
repnz
dec
sar
cli
in
cs
cmp
lods
scas
int3
es
xchg
mov
cmpsl
repnz
push
cmpsl
mov
and
or
push
or
cltd
push
mov
sbb
mov
loope
jnp
adc
iret
lret
das
push
in
imul
icebp
pop
and
cmc
fiadds
ss
cmp
push
repnz
sub
je
mov
aam
int
dec
adc
shl
daa
lret
push
cld
fsub
dec
out
daa
and
fs
jb
imul
push
testl
insb
aaa
cld
pushf
out
test
addb
repnz
in
jg
mov
cmpsb
mov
fsubl
mov
adc
pop
inc
pop
jecxz
xchg
mov
daa
jbe
int3
jecxz
decb
xchg
jns
sbb
sti
or
jmp
imul
insb
xchg
mov
jmp
cli
dec
out
xchg
mov
sub
fistpl
push
dec
aaa
repz
cmp
or
pusha
adc
test
ljmp
xor
sbb
or
jecxz
imul
addr16
push
insb
jmp
data16
and
fisttps
sub
repnz
lods
fstps
movsb
in
jp
pop
pop
cmp
inc
clc
sbb
enter
aad
pop
sbb
mov
arpl
dec
inc
outsl
ss
mov
in
jmp
repz
xor
sub
imull
outsl
sub
xchg
gs
dec
or
shll
jnp
xchg
pop
pop
and
out
mov
mov
je
add
sub
ss
jnp
lret
or
jmp
gs
inc
xor
xor
fdivrs
push
xor
mov
dec
xchg
xchg
add
mov
mov
lret
inc
fldcw
lds
push
ss
fnsave
jmp
jne
scas
sub
and
xchg
sbb
sti
es
stc
push
mov
pop
add
mov
lret
cmpsl
scas
or
loop
pushf
in
lods
fucomip
aad
inc
inc
adc
lods
mov
scas
sti
sbbl
mov
mov
cs
stos
mov
imul
fcompl
clc
ljmp
mov
dec
mov
cmp
das
lods
mov
fstp
push
cmp
dec
or
addr16
lea
aam
cmpsb
sbb
call
cmp
std
lock
mov
repz
push
push
push
jl
mov
dec
lods
ror
fcmovnb
mov
mov
in
sbb
mov
pusha
jp
fidivs
mov
arpl
mov
xor
and
adc
jns
pop
jl
mov
lock
pop
andl
xchg
and
jbe
in
icebp
negl
insb
in
aaa
icebp
cmp
cmc
xor
int
sub
pusha
jl
inc
arpl
outsb
cmpsl
hlt
pusha
push
push
test
scas
add
rorb
andb
push
cmp
dec
stc
and
dec
xor
in
mov
out
push
fnstcw
test
mov
or
int
mov
inc
jno
lods
dec
push
push
movsb
cmp
sub
dec
into
stos
or
ja
mov
sub
mov
and
mov
das
std
mov
lret
mov
andb
push
test
clc
and
addr16
xor
bound
mov
push
inc
lock
aas
cmp
negb
int
andl
inc
mov
pop
push
jg
test
sbb
mov
pop
nop
into
int3
sbb
sub
add
in
aaa
pop
in
sub
push
sbb
dec
and
out
into
push
pushf
aaa
cmp
sub
and
test
int
cmp
lahf
ficoml
adc
lret
adc
jle
mov
fnstsw
shll
inc
leave
test
dec
mov
fmuls
mov
repnz
daa
pop
call
sti
jae
clc
mov
cmp
sbb
pop
cld
loopne
nop
ficoml
ret
fs
dec
jns
roll
xlat
test
jp
loope
cs
push
je
int
cmpsb
adc
roll
and
cmp
mov
mov
adc
or
lods
aad
add
shll
mov
stc
cmp
mov
mov
scas
jae
push
mov
mov
push
push
ljmp
shll
enter
aad
xchg
enter
and
fidivrl
ss
movl
xchg
mov
dec
add
jb
fs
mov
mov
push
sbb
xchg
repz
loop
push
xorl
dec
dec
xchg
in
sarb
mov
dec
cmp
pusha
movl
adc
jbe
loop
mov
jl
push
das
mov
daa
arpl
std
fsubrs
xlat
and
pop
and
ficoml
mov
cmp
or
nop
lods
mov
clc
and
data16
icebp
decb
xor
mov
jmp
aam
fstl
dec
and
jp
in
pop
xchg
enter
iret
xchg
std
push
scas
pop
iret
lods
mov
nop
js
mov
jl
scas
inc
push
fistps
cli
jp
pop
sti
leave
in
out
cmp
push
test
jbe
hlt
outsb
and
xchg
js
stc
jb
sbb
lods
gs
and
test
inc
mov
imul
add
js
jo
sub
xchg
sbb
mov
inc
or
pop
test
adc
lds
pop
cmp
cmp
xor
imul
and
cmp
pop
mov
andb
out
pop
outsl
in
hlt
jbe
cli
xchg
mov
mov
aam
jae
adc
cmp
sub
test
imul
dec
add
lock
test
adc
mov
jb
std
push
sbb
push
arpl
scas
lahf
imul
push
popa
dec
push
fdivp
stc
xorb
mov
iret
int
imul
scas
pusha
mov
movsl
adc
outsb
push
cmp
rcrl
stc
xchg
insb
lods
sbb
fwait
in
sbb
dec
int
cmp
mov
gs
push
imul
jb
loopne
cmp
sub
stc
dec
dec
xchg
push
test
aad
mov
inc
mov
loop
mov
sahf
fldenv
stos
pop
ficoms
dec
mov
add
mov
aad
lods
nop
fldl
and
mov
ds
clc
mov
rolb
jecxz
xor
inc
movsl
xchg
jp
jp
mov
pop
and
mov
cwtl
sbb
dec
lock
fsubrl
sarl
push
pop
push
into
cmc
mov
lcall
dec
ja
inc
ds
xchg
fisubrl
xchg
mov
sbb
lahf
cltd
or
sbbl
or
repnz
loopne
pop
push
mov
or
jae
lock
pop
dec
jge
cs
fbld
stos
out
das
scas
inc
dec
ret
jp
jl
sarl
add
xchg
ds
mov
fsubl
push
pop
cmp
push
push
fcmovnbe
fcoml
jns
lahf
or
call
xchg
or
xor
outsb
add
popa
push
addr16
sbb
dec
and
pusha
cld
and
add
lea
sahf
sub
jle
mov
xor
es
push
mov
sbb
lods
mov
pop
mov
mov
sub
pusha
push
ja
cmp
xchg
xlat
add
xor
std
int3
sub
idiv
mov
insl
in
xchg
push
xchg
lods
mov
out
pop
push
push
insb
push
and
shll
xor
dec
out
rcrl
or
outsb
repnz
dec
leave
outsb
mov
stc
jmp
push
push
scas
push
adc
imul
xchg
fcomps
inc
fbld
pop
inc
mov
mov
std
outsl
or
andl
mov
imul
ffree
int
xchg
lret
xchg
push
popa
xchg
addl
xor
lea
ror
push
rclb
xlat
sbb
pop
cmp
adc
arpl
sub
lds
push
push
mov
fdiv
jle
repnz
push
addl
push
sub
sar
jbe
or
jge
jmp
sub
shlb
cmp
movsl
cli
icebp
sar
mov
adc
mov
mov
negl
dec
inc
lds
fnsave
out
fcompl
pop
inc
dec
sar
jge
xlat
repz
lods
movsl
or
orb
xchg
add
sub
xlat
mov
push
arpl
mov
adc
add
mov
loop
int3
and
cli
mov
fiadds
cmpsl
decl
and
in
mov
dec
inc
sub
xchg
push
mov
inc
pop
cmp
aad
xor
shl
in
xchg
cmpsl
in
push
cld
test
repnz
nop
push
cli
pop
aad
sub
xor
data16
ss
inc
push
xchg
mov
sbb
xchg
das
mov
xor
inc
sub
fisubs
xor
add
scas
loopne
hlt
shll
orl
out
and
out
fcompl
push
lcall
xchg
repz
sub
push
or
or
sub
pushf
arpl
mov
mov
jo
stos
outsb
mov
push
adc
lods
jo
dec
cld
fldenv
xor
push
or
ss
scas
pop
bound
pusha
xchg
sahf
pop
ds
outsl
into
sbb
dec
test
mov
fdivl
movsl
jns
adc
mov
dec
popa
push
jmp
mov
aaa
pop
and
fdivrs
push
mov
mov
mov
outsl
iret
xor
pop
ljmp
inc
pop
pop
fs
pop
lods
fistpll
pop
repnz
mov
aaa
out
testb
popa
dec
or
jle
pop
jp
pop
xor
mov
lcall
fucomp
andb
out
stc
and
cmpb
aad
enter
or
mov
pop
xor
loope
jno
jae
jp
les
data16
or
sbb
jmp
push
ficoml
sub
aas
fiaddl
push
sbb
fs
inc
insl
shll
repnz
dec
lahf
push
xlat
pop
andb
and
mov
aaa
jl
les
mov
paddd
aam
jge
adc
sbb
adc
lret
fstpt
or
lods
shrl
ds
xor
test
xor
loop
sub
in
jg
jae
pusha
arpl
mov
mov
pop
out
inc
add
sarb
das
mov
xor
pop
rorb
fxch
data16
mov
dec
xlat
lahf
mov
jecxz
mov
mov
push
and
insl
sub
adc
outsl
xor
cs
mov
fmul
push
mov
cmp
mov
jg
out
lret
mov
jecxz
rclb
pushf
notb
mov
mov
cmc
call
icebp
xor
lret
shlb
test
sti
gs
in
xchg
subb
and
aaa
jne
mov
mov
es
push
ss
dec
pop
nop
fildll
cmp
xchg
rolb
jae
cmc
cmp
push
mov
pop
and
sub
ljmp
fildll
pop
and
jge
loop
add
shlb
sbb
push
fs
sbb
xchg
mov
inc
adc
cli
push
into
pop
push
mov
mov
in
add
out
dec
outsl
lods
ret
insb
aam
lea
leave
shlb
enter
push
push
repz
dec
fldenv
insl
js
dec
sbb
daa
hlt
and
push
xorl
sbb
adc
nop
rcll
mov
jne
jo
cmp
dec
test
stos
jmp
push
add
lcall
gs
jae
add
mov
xchg
xor
out
mov
xor
pusha
pop
dec
jb
or
jle
inc
sbb
aad
ficoml
sti
clc
and
pop
or
adc
imul
call
sarb
pop
hlt
push
mov
clc
in
push
push
push
inc
ds
sarl
add
cmp
rcll
push
or
dec
dec
aas
jnp
push
mov
iret
aas
leave
jg
dec
mov
lret
sbb
jne
out
in
mov
stos
xor
pushf
adc
pop
mov
test
nop
test
sbb
mov
push
and
dec
cmp
addb
fwait
cld
inc
sbb
mov
or
jbe
sub
dec
insl
or
mov
fldt
sbb
shll
ret
ds
and
mov
cmc
loopne
push
call
in
hlt
mov
push
jl
popa
ficoml
xchg
pop
dec
adc
aaa
xchg
xor
cmp
pop
repnz
mov
jecxz
fisttpl
xchg
dec
and
push
xchg
lods
out
ficoml
mov
and
mov
js
inc
add
jmp
sahf
dec
lret
mov
lea
arpl
stc
aam
inc
and
cld
cltd
das
test
js
jmp
pushf
int3
xchg
dec
pushf
repnz
orb
mov
rcrb
in
loope
push
mov
xor
popa
sub
sbb
sbb
in
xor
stos
sarb
mov
cld
push
rcrl
leave
addr16
xor
outsb
rorl
out
mov
mov
call
lock
add
fmuls
inc
sbb
lods
cwtl
jge
and
fisttps
rorb
push
hlt
jecxz
imul
mov
leave
stc
rorb
adc
pcmpgtb
js
jge
mov
hlt
testb
repnz
xchg
sub
mov
shll
push
loopne
cmc
dec
mov
gs
scas
popa
xchg
lock
pop
sbb
scas
pop
test
inc
in
je
or
inc
call
mov
stos
cs
jne
js
faddl
pop
shrb
cltd
mov
xlat
mov
std
inc
sub
jecxz
adc
or
rcr
sbb
mov
movsb
cmp
mov
daa
fsubr
inc
inc
pop
or
pop
out
mov
mov
mov
ret
insl
xor
mov
push
arpl
test
sti
daa
rclb
jg
dec
hlt
in
xor
fadds
aaa
daa
jle
jge
sub
and
shl
loope
dec
in
arpl
xchg
cmp
jp
pop
jle
shl
in
sub
lods
mov
xchg
inc
adc
pop
or
inc
je
ret
mov
pop
sub
dec
hlt
jb
xchg
mov
push
loopne
cmp
mov
mov
jmp
nop
add
jmp
xchg
mov
roll
add
pop
jne
sub
and
jge
and
mov
movsb
or
add
test
fisttps
push
push
adc
sahf
fistpl
add
inc
mov
stos
in
es
sbb
mov
faddl
stos
lahf
imul
mov
mov
mov
mov
and
add
fistpll
xor
jmp
stos
ret
ljmp
jecxz
lea
jg
adc
outsl
loopne
aaa
outsl
enter
out
add
scas
mov
pop
add
inc
lods
repnz
jno
sub
stos
mov
push
aam
and
cmpsl
xor
lret
dec
add
cltd
push
jle
fbstp
aam
fs
push
cmp
sti
insl
cmp
adc
jp
roll
dec
push
test
jbe
xchg
shl
in
dec
jmp
push
int
push
and
test
or
mov
push
inc
aad
ljmp
ret
lcall
ljmp
add
mov
dec
xor
test
je
sbb
and
imul
mov
shlb
lret
push
test
cwtl
addb
lock
push
jo
pop
xor
call
or
cmc
cmpsb
lret
lret
je
xorl
xlat
sub
jmp
rcrl
cs
jp
out
shr
ss
xor
outsw
scas
push
jecxz
leave
mov
jg
inc
pushf
ss
popa
jnp
xchg
pop
inc
cmp
lea
mov
fsubl
pop
add
aaa
mov
in
lods
or
movl
add
dec
add
jno
xchg
mov
xor
push
leave
adc
out
add
push
xchg
cmp
repz
lcall
xchg
mov
mov
insb
mov
aad
adc
adc
mov
mov
pop
insb
lds
adc
mull
mov
cltd
imul
scas
push
dec
sbb
dec
inc
and
pop
mov
aad
xchg
nop
or
jne
cld
ret
stos
add
mov
fstps
ds
dec
aaa
iret
mov
fmuls
add
mov
hlt
push
pop
rcll
sbb
insl
jge
cmp
sub
stos
cmp
loope
xorb
in
cmpsb
cltd
ja
and
sub
inc
or
mov
mov
xor
jmp
std
add
pushf
inc
sub
and
xchg
adc
mov
or
fbld
adc
outsb
xor
lock
jp
les
xchg
cmp
or
ss
int
or
cmp
xchg
pop
imul
xchg
jb
cld
lret
mov
leave
mov
fldl
mov
cmc
mov
and
cld
adc
push
jp
dec
je
xchg
inc
jge
xchg
xchg
test
mov
jnp
pop
mov
ja
cmp
dec
pop
adc
jns
jle
stos
jl
mov
pop
ja
inc
mov
and
ds
das
jmp
adc
jl
call
outsl
pop
push
sarl
scas
mov
cmpsb
mov
ljmp
sub
ljmpw
fcmovb
jl
ja
je
push
int3
movsb
pop
in
jb
jno
inc
leave
or
xor
adc
pop
push
sahf
jg
xor
and
xchg
and
jl
pusha
add
add
jge
xchg
or
dec
xor
cltd
pop
outsb
mov
or
fcompl
rolb
cwtl
dec
mov
and
test
jb
popa
jle
pop
mov
xor
in
jo
add
shl
push
dec
test
fbld
mov
jb
mov
sbb
fnstsw
fildl
xor
push
push
lds
stos
les
daa
sbb
popf
cmp
or
gs
mull
push
push
or
fiaddl
xchg
cltd
dec
inc
or
stos
dec
mov
push
xor
mov
out
lret
push
punpckhwd
jne
stos
lds
dec
mov
fs
or
outsb
sbb
dec
push
insl
fidivrl
out
in
stos
loopne
loopne
aaa
cmp
inc
jge
mov
mov
js
xor
arpl
or
movsl
testb
mov
rclb
in
loopne
mov
inc
shlb
pop
mov
incb
mov
mov
sub
sub
sarl
lahf
jl
outsb
ret
jae
in
inc
adc
pop
fldcw
xor
pushfw
cmpl
jns
ljmp
sbbl
in
jl
jp
cs
jne
push
add
push
add
dec
push
push
roll
fwait
and
pusha
insl
insl
iret
cmpsl
sbb
ffree
aas
pop
add
fsubrs
jo
jno
add
pop
jnp
add
mov
repz
stos
hlt
jle
pushf
and
sub
and
mov
jp
jg
dec
bound
enter
fcmovnbe
pop
stc
repz
ja
mov
aaa
xor
andb
scas
pop
idivb
lret
pop
sbb
cli
and
lods
dec
xchg
push
sub
lret
insl
jns
in
dec
or
std
jp
into
imull
jns
and
cli
insl
loop
in
arpl
and
loopne
scas
fdivrp
pop
dec
fiadds
scas
or
mov
xchg
mov
clc
inc
std
sbb
sub
mov
mov
daa
hlt
sarb
xor
inc
insb
ss
jnp
outsl
push
adc
lahf
std
add
mov
cmp
xchg
pop
fimuls
pop
dec
in
sub
ret
jl
add
imul
cmp
xchg
mov
dec
popa
fsubrp
cmp
pop
ljmp
dec
mov
pop
rcll
sub
and
adc
fisubs
fldcw
fwait
adc
mov
push
stos
dec
mov
fadds
inc
hlt
int
xchg
push
mov
push
fs
mov
inc
mov
out
mov
push
incl
inc
push
or
sbb
cmp
fcomi
repz
roll
cmp
xor
leave
adc
mul
mov
inc
adc
jbe
loope
inc
aad
fmulp
cld
mov
dec
jne
xor
xor
bound
rorb
xor
movl
shl
add
ljmp
pop
inc
jecxz
and
push
sbb
imul
sti
nop
jge
lds
adc
cmp
dec
dec
push
add
push
mov
pop
sbb
inc
fstps
aam
sub
andb
ljmp
pop
cmpsl
mov
xchg
xchg
cli
popf
sub
push
inc
cmp
jnp
push
mov
xchg
insb
fcomi
push
jo
xchg
inc
lret
scas
add
cmp
aad
fiadds
pop
add
xor
ljmp
jl
scas
outsl
roll
shlb
std
cmp
mov
xchg
push
mov
fnstcw
movb
clc
mov
adc
mov
arpl
fldl
push
cmp
ljmp
inc
jl
test
jne
xchg
pop
in
mov
sub
ret
sub
repz
data16
insl
mov
test
xor
or
and
push
cmpsb
mov
gs
in
jbe
shlb
cwtl
mov
popf
jnp
aad
adc
mov
xchg
inc
mov
fistpll
lods
add
cmp
roll
xchg
addr16
and
mov
icebp
and
mov
pop
inc
adc
push
cld
loop
add
and
push
and
inc
ror
dec
out
adc
lea
sbb
in
pop
in
mov
js
pop
outsb
cmp
xchg
jne
mov
mov
cmpsb
lcall
es
fs
xor
adc
xchg
jb
xor
jnp
enter
adc
sub
fcoml
inc
cmp
repz
ds
adc
push
icebp
mov
mov
jg
push
daa
fs
shlb
out
cmp
int
mov
les
sub
xor
sub
adc
xchg
js
sbb
pop
outsb
dec
lret
jmp
stos
in
andb
lret
xchg
and
inc
push
and
push
pushf
push
repz
lods
cs
in
aad
arpl
adc
je
mov
mov
xchg
adc
arpl
das
jnp
enter
dec
and
fsubl
ljmp
imul
out
add
popf
xor
test
ss
jge
icebp
xor
test
es
mov
cmpl
out
daa
int
sub
mov
inc
xor
bound
hlt
iret
aam
mov
xchg
mov
inc
stc
dec
out
and
jg
mov
sub
rcrl
mov
sbb
incl
jl
ret
aaa
out
lahf
scas
aam
dec
lods
lds
inc
lea
repnz
test
push
call
js
xor
add
xor
inc
js
inc
jecxz
push
mov
add
mov
xor
or
icebp
jmp
inc
mov
mov
test
inc
or
outsb
dec
lcall
sbb
sbb
std
xchg
in
jno
xor
daa
xchg
int
inc
imul
out
and
jecxz
lea
cmc
ja
loope
sarl
test
pusha
pop
dec
dec
pop
ljmp
inc
push
shll
pop
fisttpl
push
es
in
mov
mov
pop
push
mov
adc
jg
push
lcall
sbb
rcr
jl
hlt
or
mov
imul
mulb
mov
jge
imul
jnp
gs
jle
fildl
xor
jmp
insl
lods
push
xchg
repnz
sbb
sub
or
pop
adc
or
and
or
das
addr16
fwait
scas
test
add
mov
popa
js
xchg
sbb
ffree
jp
imul
insb
out
fnsave
out
mov
cwtl
arpl
jg
xlat
adcl
mov
push
mov
xchg
dec
lcall
lea
loope
mov
jecxz
add
mov
arpl
nop
adc
inc
outsl
or
dec
mov
cmp
push
pop
pop
push
mov
nop
add
les
push
fwait
mov
push
repnz
cwtl
icebp
insb
push
orl
mov
xchg
push
inc
in
sbb
data16
xor
outsb
mov
fmuls
add
int
loopne
test
or
lret
inc
jne
fcmovne
call
lods
in
add
pushl
imul
mov
fscale
mov
jns
icebp
rclb
sbb
inc
jne
xor
and
rcrl
aaa
es
loopne
xchg
sub
js
adc
imul
adc
add
jecxz
and
cs
xchg
sbb
loope
out
jecxz
mov
mov
add
xchg
sti
dec
cmp
sbb
lea
cwtl
xor
aad
and
cli
mov
out
cmp
jmp
push
xchg
ret
push
push
inc
fdivs
jbe
fdiv
je
movsb
lock
push
cmpsl
push
std
jmp
push
pop
jnp
lret
push
push
dec
test
loop
sbb
sbb
test
push
aad
sub
out
add
push
scas
adc
jg
mov
push
xor
data16
push
aad
sub
xor
push
cmp
xchg
dec
dec
movl
push
dec
mov
jl
out
inc
or
rol
pop
jb
lcall
cwtl
push
mov
into
jg
loopne
rclb
mov
ret
mov
pop
mov
cld
ret
adc
xor
pop
sbb
das
ljmp
jl
add
in
fildll
pop
mov
sub
mov
mov
dec
insb
xor
lret
mov
sub
adc
push
aaa
pop
inc
cmp
clc
mov
dec
xorb
mov
cld
bound
add
sub
and
sbb
aaa
mov
in
dec
xchg
dec
mov
inc
aam
popa
mov
mov
add
rclb
das
in
push
push
aaa
popa
push
bound
sub
inc
mov
pop
movsb
cs
xlat
cmp
cmpl
push
test
mov
xlat
pop
sbb
dec
int3
shlb
xchg
inc
xor
adc
jno
stos
pop
sub
lods
scas
lret
fnsave
lret
cmp
popa
insl
loope
mov
sbb
ljmp
hlt
push
adc
in
push
nop
addr16
push
mov
push
mov
mov
nop
mov
push
scas
dec
xor
cwtl
out
ret
mov
pop
pushf
xchg
adc
fdivrs
xlat
pop
cld
dec
cmp
and
repnz
stos
mov
fyl2x
lret
nop
loopne
lahf
sub
jg
fistl
cwtl
in
adc
pushf
leave
lret
xor
lahf
mov
mov
add
jne
pop
out
jle
cwtl
push
jns
or
push
fsubp
or
rcll
mov
xor
mov
daa
mov
sarw
ret
mov
mov
nop
rolb
fdivrl
mov
aaa
inc
imul
push
add
add
lret
jle
imul
cmp
js
js
or
push
fldenv
sbb
mov
ret
mov
hlt
nop
jno
adc
int
sar
daa
jo
subl
sti
jns
cld
lods
mov
push
movsb
lahf
ret
test
and
mov
inc
jg
mov
bound
dec
enter
int3
xchg
xchg
jmp
cs
xchg
push
mov
cmp
mov
imul
int
dec
insb
and
sub
subl
jns
cmc
jle
shll
fs
jne
cmp
clc
cmp
jo
pop
xchg
push
push
movsl
inc
andl
test
pushf
daa
cmp
ffreep
out
ja
repnz
mov
repnz
jge
scas
adc
push
aam
in
stos
and
pop
jb
pop
sub
out
int3
jg
fwait
sbb
mov
nop
add
jns
out
daa
test
in
ret
dec
mov
sub
adc
adc
mov
sbb
in
mov
xchg
ficoms
pushf
int
pop
pop
jmp
into
rcl
popa
mov
xchg
adc
fstps
incl
xchg
int3
pop
stos
mov
push
ss
mov
mov
xor
dec
xchg
les
pushf
pop
mov
dec
mov
fxam
jmp
call
ljmp
movsb
jl
loope
pop
or
call
or
js
shll
and
push
push
xchg
rorl
push
sahf
xor
repz
push
jecxz
mov
decb
lret
mov
popf
cmp
popa
mov
mov
outsb
xchg
mov
int
daa
sub
push
add
push
fistpl
outsb
pop
jg
adc
sbb
cmpsl
mov
sub
xchg
out
in
nop
movsl
lahf
push
mov
lods
sub
add
aas
mov
pop
sub
cmp
adc
jg
sbb
cmp
xchg
jne
insb
sbb
xchg
push
outsw
aam
repz
hlt
jmp
repz
jnp
bound
outsb
and
mov
mov
mov
mov
pop
add
stos
xchg
mov
outsl
call
dec
ja
pop
add
and
jecxz
std
sbb
ja
push
mov
jle
addb
js
stos
imul
push
jmp
fidivrs
fcmovbe
sbb
inc
clc
mov
pop
add
pop
xchg
sarl
cmp
mov
roll
sbb
insl
sub
icebp
shll
test
mov
fnstcw
sub
iret
pop
add
sahf
test
dec
pop
es
sti
nop
movsl
nop
sub
pushf
push
arpl
test
popa
inc
add
addr16
fstpt
hlt
je
and
movsl
cmpsb
shll
shrl
sti
ja
nop
push
sub
test
out
push
xlat
jbe
aad
pop
hlt
mov
cmp
cmp
pop
push
add
cli
movsb
pop
repnz
mov
les
out
fwait
test
pop
inc
testl
or
daa
lret
dec
sbb
movsb
frstor
and
test
and
and
mov
xor
stc
or
add
cld
sub
lock
lds
aas
cltd
lds
mov
sti
sti
push
out
jg
nop
in
icebp
or
and
jnp
jns
pop
inc
cmp
in
and
fidivrl
add
out
mov
jae
cld
cwtl
sbb
dec
inc
sub
outsb
sbb
or
dec
add
lds
imul
xlat
int
pop
test
dec
enter
mov
bound
cmp
test
pop
jb
and
fstpt
mov
sub
add
arpl
into
outsb
xor
repz
jnp
and
test
xor
xlat
cmp
and
scas
sub
lret
jb
add
cmp
sub
cmp
iret
pop
add
movsl
mov
and
xchg
push
mov
bound
loope
inc
cltd
scas
pop
cmp
sti
sbb
or
xor
sub
sbbb
sub
inc
cwtl
fcom
or
push
je
cmc
add
mov
cmp
inc
iret
mov
loop
jne
iret
shll
in
lret
inc
pop
imul
xchg
jecxz
mov
inc
mov
xor
pushf
pop
add
push
fxam
insb
cmc
js
gs
mov
fists
xor
ss
popf
test
pusha
push
dec
ret
mov
push
jo
ret
loopne
adc
lahf
shrb
dec
xchg
mov
adc
adc
sahf
sbb
inc
dec
pop
int
in
enter
dec
push
data16
nop
jns
mov
jo
cmp
mov
jae
sbbb
jmp
int
pop
sar
sbb
jnp
lahf
fldenv
sbb
inc
loope
jns
jmp
fidivs
adc
cltd
mov
xchg
pop
icebp
and
arpl
push
sbb
sahf
gs
xor
jmp
push
loop
xchg
or
pop
jbe
add
in
repz
xchg
push
ficompl
inc
testl
xchg
and
push
sbb
jecxz
push
andb
rolb
sub
in
mov
cwtl
not
outsb
push
iret
pop
sahf
loop
addl
cmc
or
out
call
push
lret
xor
sub
mov
rolb
xor
cld
nop
inc
mov
frstor
jge
inc
jmp
out
ja
jbe
mov
shll
and
sub
cmc
inc
stos
add
sbbl
ds
andl
inc
dec
addr16
mov
xor
lods
scas
xor
imulb
sub
jge
pop
inc
inc
mov
xchg
push
mov
xlat
sahf
mov
in
sub
mov
jbe
sbb
inc
fwait
adc
or
mov
fdivp
and
mov
out
push
sar
cmc
arpl
scas
jne
mov
daa
xchg
cwtl
inc
pop
sti
in
push
frstor
out
cmp
xchg
pop
push
jnp
into
cmp
lahf
movsl
out
dec
dec
mov
inc
mov
xor
and
scas
fs
xlat
iret
pop
lahf
xchg
rcll
cmp
imul
inc
loope
test
fldt
movsb
mov
xlat
movsl
cmp
adc
fdivl
arpl
xchg
cli
jecxz
cmp
add
orb
and
unpckhps
xchg
mov
xchg
mov
fidivs
jl
notl
mov
test
mov
adc
xchg
cmp
push
out
cmpb
aam
jmp
sbb
aad
mov
in
lcall
adc
jge
and
in
mov
cmp
xlat
pop
lea
ja
push
mov
jle
jp
sub
jno
dec
insl
ds
iret
fisttpl
pop
icebp
mov
cli
add
adc
or
test
mov
movsb
icebp
mov
sbb
out
sarb
les
sub
dec
jnp
test
pop
push
out
and
xlat
cmp
cmc
sub
xchg
push
pop
dec
enter
mov
fistl
pop
add
adc
inc
outsb
scas
lock
sbb
mov
mov
sub
xor
mov
xchg
mov
nop
fisubl
mov
mov
jno
adc
gs
dec
adc
add
sub
mov
inc
call
inc
bound
out
push
cmpsb
cmpsl
adc
test
or
pop
sbb
loopne
mov
je
stos
mov
adc
dec
adc
mov
loop
mov
xchg
xchg
cltd
lea
jo
cmpsl
fld
in
adc
movsl
jno
add
cmp
bound
dec
call
mov
xor
mov
dec
jge
lods
adc
and
pop
cmp
iret
stos
testb
mov
aam
push
pop
or
daa
pushf
xor
xchg
and
aam
loope
or
xor
testl
fsts
or
jno
mov
cmp
jns
push
shrb
jne
sti
roll
add
in
ret
xor
or
add
fnstsw
rcr
out
sar
out
inc
sbb
lds
ret
dec
not
jb
mov
xor
mov
gs
mov
mov
sub
js
sub
gs
in
aad
cmp
dec
aas
sub
pop
jb
or
int3
roll
in
push
push
lcall
xorb
lods
into
jg
dec
into
sbb
mov
adc
ljmp
mov
js
jmp
addr16
sti
daa
fimull
pop
inc
movsb
push
cmp
pop
xor
adc
arpl
cs
mov
stc
test
shrb
add
unpckhps
mov
adc
cli
push
call
in
rcrl
mov
or
psubb
leave
xchg
mov
insb
clc
mov
jae
insl
jp
adc
fsub
xchg
int3
aam
ds
xor
xor
mov
aad
loopne
iret
into
cld
sti
inc
push
push
ja
sbb
mov
cmpsl
subb
lcall
ret
xor
dec
add
sbb
jbe
cmp
imul
je
xlat
mov
pop
mov
push
out
aaa
push
cs
xchg
pop
lret
cmp
sbbb
sub
xchg
inc
jb
lea
jmp
mov
popa
lcall
or
ret
add
xchg
std
jae
pop
aaa
sti
push
inc
hlt
gs
sbb
mov
mov
add
dec
ljmp
fnstcw
mov
push
sub
int3
inc
sbb
and
pop
in
pop
jno
add
push
ds
cmc
outsl
pushf
mov
and
js
scas
sub
mov
or
mov
ja
bswap
aaa
push
call
mov
popa
sbb
cmp
xor
stos
and
jge
pop
test
inc
cli
jl
in
ss
fdivl
rcll
mov
sbb
xor
in
sti
movsb
mov
je
push
add
rcll
xor
sub
hlt
scas
out
out
jg
cmpsb
je
pop
popl
jbe
sti
jb
insb
pushf
aas
lea
bound
and
les
andl
xchg
in
sbb
loopne
adc
and
and
icebp
aam
dec
jb
cmp
ret
sar
jns
movsl
ds
mov
jl
mov
pop
mov
cmovno
lcall
mov
fs
inc
adc
test
lds
lcall
mov
adc
lea
aas
enter
call
test
cs
movsb
sub
jo
fwait
lcall
jb
xchg
mov
jns
sub
mov
popf
test
jg
adc
fwait
mov
mov
gs
dec
ret
into
mov
push
test
ret
stos
xchg
les
aas
or
mov
fistpl
out
push
call
mov
in
inc
fimull
stc
xor
mov
addr16
test
lods
test
nop
cli
push
hlt
testb
fstpl
imul
add
lret
test
insb
sub
xchg
xor
xor
call
or
xchg
lcall
mov
xchg
ja
test
fwait
jp
xlat
xchg
xor
test
inc
stc
or
xor
push
and
lods
fbstp
xor
xchg
fdivrp
sbb
mov
icebp
sbb
out
sub
in
xor
scas
out
sbb
enter
repz
test
loop
insl
dec
fcomps
sub
call
aaa
cmp
jo
jmp
cmp
or
inc
les
mov
cmpb
cmp
mov
je
inc
shll
iret
jae
xchg
mov
in
add
mov
divb
repnz
inc
inc
inc
hlt
fsubrs
aaa
orb
jae
or
es
push
add
inc
idiv
adc
lret
outsl
test
and
mov
xchg
mov
xchg
inc
idivb
sub
aaa
xor
sahf
adc
subb
popa
call
lcall
push
idivb
mov
dec
sub
cs
mov
mov
fiadds
bound
add
or
cld
sahf
andb
mov
jnp
sub
mov
mov
cli
ret
add
inc
int
push
roll
xor
pop
push
jmp
sub
filds
lods
xchg
sti
inc
loopne
outsb
dec
jle
test
mov
or
and
mov
divl
pop
sub
repz
bswap
incb
test
je
test
or
rcrl
shr
shl
jns
jg
test
not
push
push
jl
fdivs
and
add
je
inc
mov
cmp
or
sarl
dec
rolb
mov
lret
loopne
push
fidivl
sub
sbb
lds
xchg
mov
ja
sub
mov
add
adc
out
sbb
je
ja
pop
test
daa
roll
stc
mov
enter
sub
test
aad
xchg
arpl
dec
jg
cmp
inc
xchg
mov
shlb
aas
popa
cld
jnp
inc
popf
mov
mov
and
test
notl
xor
in
bound
outsb
aad
pop
xor
push
adc
or
mov
in
jecxz
imul
inc
inc
lret
rolb
js,pn
xchg
cmpsl
cwtl
les
stc
ret
out
push
xor
aad
fstpl
mov
xchg
test
mov
js
out
popa
jl
adc
in
add
xor
popa
sub
incb
pop
push
sbb
sti
lods
adc
dec
test
inc
sub
sbb
pop
lret
inc
cmp
les
mov
cltd
inc
mov
sbb
repnz
clc
sub
lods
pop
dec
mov
test
daa
in
xchg
mov
lock
push
in
xchg
les
pop
jne
jno
push
xorl
cmp
test
adc
jno
sbbb
inc
in
jbe
or
rol
add
lret
xchg
xlat
push
fst
jp
out
pop
lcall
and
and
add
pop
sarb
inc
fsubl
xchg
stos
cld
daa
pop
ljmp
outsl
sbb
pushf
inc
jge
in
loopne
mov
in
inc
jns
jge
adc
pop
push
jbe
mov
jmp
push
xchg
xchg
jno
mov
test
gs
pop
outsl
test
aas
addb
mov
repnz
mov
sbb
push
pop
jne
mov
shrb
loop
jae
mov
das
and
rolb
fs
pop
or
loopne
loop
rolb
xchg
int3
fucom
cmp
aam
sbb
lahf
mov
loop
mov
outsl
jecxz
xor
loop
clc
out
jae
cltd
xor
lahf
xchg
add
pop
sbb
adc
push
inc
leave
pushf
outsl
cmpsb
cmp
ss
cli
cmpsl
jns
inc
mov
pop
mov
xchg
ret
adc
shlb
es
xchg
sub
mov
sub
jecxz
adc
data16
cmpl
leave
mov
ror
add
push
ret
pusha
sub
mov
fwait
push
push
sbb
jo
mov
add
adc
mov
xchg
outsb
mov
pop
mov
enter
inc
mov
sbb
dec
and
rclb
dec
cmp
out
scas
sbb
popf
inc
and
pop
sub
hlt
stos
push
or
dec
negl
insl
jno
lock
add
or
lock
or
insl
adcl
mov
adc
cltd
inc
mov
add
test
and
in
jae
push
sub
inc
dec
jne
cmp
and
pop
lret
in
push
cli
and
add
mov
cmp
sbb
cwtl
fiaddl
fsubs
xchg
sub
imul
lds
jno
leave
fs
add
push
mov
lds
je
lods
xor
sahf
cld
scas
pop
adc
loope
rorl
cmpsl
pusha
mov
int
add
pusha
loop
jge
inc
orb
test
or
mov
stc
fsub
dec
xor
repnz
mov
jle
jns
inc
dec
adc
mov
add
jb
pop
std
mov
aad
sbb
hlt
es
mov
out
icebp
xlat
xchg
inc
inc
add
outsl
stc
lock
aam
stc
popa
fsts
cmpb
inc
mov
aaa
jecxz
pop
ret
pop
mov
pop
pop
add
lahf
add
ljmp
movsb
xchg
dec
pushf
hlt
mov
inc
jecxz
fldln2
push
add
push
pop
test
jg
cmpsl
and
es
enter
mov
inc
fcmovnu
adc
pushf
or
int3
je
jl
decl
sbb
and
fcompl
pop
or
mov
mov
ret
insl
imul
jb
dec
sarl
rol
adc
fdivs
lods
sub
adc
cmp
or
leave
xor
hlt
pxor
xchg
stc
pop
sbb
inc
add
or
mov
xor
insl
or
outsb
mov
loope
sbbl
out
test
in
test
jae
shlb
xchg
fsubrs
lret
lcall
je
push
dec
jmp
jb
xchg
movsb
mov
mov
mulb
push
loop
in
dec
add
orb
cmp
fnstcw
adc
filds
leave
inc
rorb
scas
jae
imul
fistl
aas
leave
gs
mov
fdivp
js
inc
xchg
mov
cmpl
jmp
aaa
fmul
cmp
jns
out
rol
inc
jmp
inc
notl
jg
xor
int3
bound
outsb
push
int3
dec
pop
ljmp
outsb
cmpsl
in
ds
loop
mov
xor
out
dec
xchg
or
dec
sbb
jg
pop
es
inc
int3
sbb
test
and
subl
pusha
movsb
js
mov
add
andb
and
push
clc
pop
dec
pop
jg
lret
sbb
pop
test
mov
rorl
sahf
jecxz
jnp
lret
mov
in
sti
lret
mov
sbb
pop
das
roll
cmc
lock
jo
add
js
int
in
loop
jb
jb
repnz
subb
test
jmp
int3
push
mov
dec
jmp
add
dec
shlb
jl
jp
cmp
int3
xor
fs
inc
enter
pop
jns
mov
xchg
and
bound
push
rorl
loope
lcall
pop
jno
aam
xchg
cwtl
and
xorl
iret
jns
lods
std
mov
imul
ss
punpckldq
pop
inc
and
inc
sbb
sub
xchg
mov
aaa
std
adc
or
movsb
ss
push
imul
pop
mov
xchg
sbb
les
or
psadbw
cmp
mov
pusha
mov
push
xchg
inc
lods
pop
sbb
mov
rep
add
dec
stos
jge
mov
jmp
add
adcb
repz
xchg
arpl
push
arpl
dec
pusha
in
cmp
stos
and
mov
sti
cli
jae
flds
incb
or
mov
out
cmp
jns
inc
enter
or
jmp
int
movb
and
stc
std
icebp
sbb
sbb
mov
push
mov
std
in
jmp
loope
xchg
lcall
cli
cmp
test
and
fnsave
jecxz
xchg
cltd
pop
jno
pop
xor
dec
aad
add
lcall
outsb
xor
push
and
add
jnp
add
xor
sbb
mov
call
out
dec
stc
loopne
inc
aad
pop
ficoms
rcrb
ljmp
add
shll
outsb
fadds
idiv
pop
jmp
fimuls
dec
mov
es
and
test
repz
test
ret
sbb
out
push
mov
fstpt
das
mov
insb
dec
inc
mov
jo
cmp
loop
sbb
push
aam
sub
addb
jno
mov
xor
fildll
cmc
fidivrl
imull
ljmp
rclb
rorb
out
inc
lock
sbb
mov
je
jae
jbe
or
outsb
scas
ret
mov
or
fildl
pop
out
cmp
push
addb
cs
sahf
jae
inc
insb
jnp
adcb
inc
xchg
push
cmp
mov
jl
push
mov
xchg
or
cmp
or
jge
dec
cmp
fistl
push
andb
jne
mov
lcall
fldenv
out
movl
inc
fucom
out
ds
int
pop
cmpsb
int3
popaw
repnz
inc
cmp
mov
scas
nop
inc
jp
cmp
push
jo
inc
adc
pop
neg
jb
sbb
xchg
mov
dec
xchg
aam
sbbb
xlat
gs
lods
mov
ja
push
and
add
push
jg
clc
mov
push
and
mov
mov
das
rorb
in
dec
scas
xor
mov
xlat
insl
mov
std
aaa
mov
lods
sbb
ljmp
das
pushf
outsb
jg
shrl
jb
clc
mov
outsb
or
xchg
jno
add
sbb
jae
add
cmp
mov
sub
inc
push
sbb
mov
or
adc
and
into
insl
mov
inc
or
pop
enter
mov
xchg
sub
jp
mov
sbb
aaa
fcoml
mov
movl
sahf
mov
xor
pop
push
push
mov
cmpsl
cmpsb
push
xchg
and
cmp
lret
lock
repnz
sti
shlb
and
out
rol
and
shl
sub
jl
xorl
shl
xchg
and
imul
divl
dec
cmp
sbb
aas
fs
push
pop
or
in
push
aad
fs
cmpsb
inc
imul
in
cmpsb
jns
push
xor
sbb
push
dec
push
mov
dec
and
out
jp
mov
jnp
mov
mov
or
test
jp
mov
inc
jo
sti
ret
push
daa
or
pop
mov
mov
das
sub
stos
push
fcomp
stos
mov
xor
xor
dec
lret
outsb
aam
cmp
loope
dec
mov
mov
cltd
icebp
das
mov
pushf
adc
inc
xor
out
cmp
xchg
in
out
adc
mov
push
xchg
jge
add
idivl
outsb
cwtl
push
inc
lods
mov
or
pop
test
lods
negb
test
and
push
sub
sub
push
and
lea
out
sub
dec
arpl
inc
std
cmc
lcall
mov
mov
or
idivb
mov
je
sub
sar
iret
add
arpl
push
push
add
inc
or
and
addr16
ret
int3
inc
jb
mov
and
mov
xchg
add
lea
add
inc
xchg
xor
dec
das
jecxz
div
inc
mov
imul
fidivrs
bound
ret
push
jno
pop
aaa
outsl
cwtl
movsl
mov
loope
pop
test
cmc
nop
inc
insb
out
sbb
push
daa
lock
and
xor
xchg
cmp
xchg
aas
es
pop
push
ss
push
sbb
loop
cld
fdiv
fsubl
or
dec
mov
mov
aaa
test
pop
int
cmpl
divb
movsl
mov
xor
das
sub
xchg
jg
cmp
fdivr
les
dec
ss
jp
sbbb
mov
loopne
aad
jmp
xchg
fcom
aas
inc
aam
xchg
mov
insb
mov
cmpsb
fdiv
cmp
repz
or
out
sub
cmp
int
push
pop
jecxz
sub
lahf
pop
aad
mov
insl
push
xor
fwait
push
cltd
dec
push
dec
leave
popa
test
pushf
dec
or
pusha
pop
loope
dec
sbb
mull
test
inc
or
imulb
mov
push
mov
sbbb
mov
xchg
int
ficompl
dec
pop
loop
scas
les
lret
cmp
loop
scas
cmc
mov
icebp
sbb
iret
inc
stos
xor
sub
cli
adc
addl
push
push
stos
mov
lea
enter
aas
data16
lahf
pop
dec
sub
or
outsb
aam
in
cmp
mov
push
ds
pop
inc
sub
es
dec
and
or
mov
sub
ss
shlb
out
xor
out
push
cld
fildll
mov
out
mov
movsl
aam
ret
adc
xor
cmc
testb
add
lret
out
sub
inc
mov
mov
outsb
das
in
aas
in
mov
ret
mov
cmpsl
xchg
push
arpl
mov
mov
sarb
sbb
and
ds
enter
mov
pop
jge
clc
les
and
xchg
je
xchg
js
adc
mov
std
outsb
in
sub
aas
cmp
sbb
aaa
out
xor
add
xchg
sti
mov
mov
stc
aaa
in
jl
inc
mov
jo
mov
pop
and
dec
push
sbb
rol
cmc
pop
pop
cmp
out
mov
sbb
push
rorb
out
flds
mov
cltd
hlt
inc
stc
fmull
sub
xchg
test
cltd
inc
ret
loop
les
mov
push
jae
xor
out
dec
stos
testb
cvttps2pi
lock
mov
mov
pusha
push
jo
aad
outsl
jo
jns
adc
and
xchg
jb
pusha
cmp
push
aam
sbb
es
call
dec
sahf
inc
jmp
jne
les
sbbl
push
aas
mov
add
imul
dec
push
dec
ret
and
cmp
adc
out
adcb
mov
jno
xchg
je
scas
adc
rorb
cmp
xor
jnp
lea
in
jne
or
test
or
jne
fucomi
push
mov
insl
enter
and
xor
cmp
or
sti
pop
pop
gs
mov
cmpsb
mov
daa
dec
stos
lods
bound
addr16
imull
call
mov
push
add
scas
movb
dec
pop
sub
dec
mov
lods
rorb
fsub
add
sbb
sub
pop
pop
push
hlt
lcall
gs
cld
xchg
jb
push
insl
and
jnp
int3
and
outsl
mov
ja
loop
pop
and
push
jbe
xchg
sbb
daa
jp
out
inc
lds
mov
sbb
mov
dec
mov
pop
sahf
aam
imul
ja
fidivrs
cmc
push
popf
dec
rorb
inc
popf
dec
mov
mov
dec
icebp
lea
stc
adc
mov
push
test
sbb
mov
adc
mov
fcoml
ret
mov
insl
lcall
inc
fdivrl
adc
dec
inc
not
test
data16
jo
xor
push
mov
dec
fstpl
iret
lahf
push
cltd
sub
scas
sbb
int
lret
ret
cmp
xor
icebp
dec
shrl
mov
mov
mov
push
add
sbb
adc
pop
int3
fsub
enter
int
imul
lea
stos
in
je
mov
sbb
or
fdivrl
insb
jp
shlb
push
pop
mov
add
push
adc
aas
cmp
add
cltd
add
call
repnz
fs
sub
pop
xchg
nop
mull
cltd
in
adc
sti
mov
mov
icebp
push
pusha
js
rcll
jo
mov
cmc
mov
adc
ret
popa
cmp
ljmp
push
negl
arpl
cmp
xchg
mov
inc
outsb
repnz
addl
dec
gs
jno
push
scas
pop
and
bound
pop
testb
push
jmp
mov
imul
mov
nop
cmc
sub
jge
push
test
cld
das
xchg
and
add
inc
add
xor
cmp
sbb
insl
xor
outsb
into
add
loopne
fcomps
add
in
test
and
je
roll
push
cld
inc
xchg
movsl
xchg
mov
pop
jle
loop
and
sub
dec
movsb
push
jle
push
jae
jmp
push
in
cltd
das
pop
cli
push
outsb
or
insl
sub
xchg
in
dec
xchg
xor
call
pushf
es
repz
lods
fildll
fstps
loop
inc
ds
xor
outsb
sti
adc
add
cltd
enter
daa
fdiv
loopne
pushf
aas
into
movsb
mov
lcall
out
pop
int3
mov
in
sarb
or
mov
out
jns
pop
imul
rorb
test
ret
xor
faddl
and
mov
xchg
mov
adc
mov
mov
int
mov
enter
int3
out
push
ss
xchg
xchg
les
xchg
push
cmc
insb
pop
pop
mov
or
stos
dec
ljmp
icebp
sbb
mov
add
jg
mov
inc
iret
or
insb
adc
push
mov
pop
dec
fisttpll
outsl
arpl
dec
cmp
xchg
jge
or
lcall
jecxz
lahf
popa
xchg
adc
sub
leave
repz
je
dec
push
test
pop
jbe
jae
filds
jb
dec
scas
mov
ljmp
mov
shll
adc
aas
js
mov
stos
frstor
pop
push
lds
cli
jae
jl
pop
aaa
lahf
leave
push
xor
add
imul
loop
xor
stc
mov
cmpsb
push
dec
lds
lds
pop
xchg
in
call
inc
into
outsb
mov
and
jne
pop
pushf
inc
add
ret
pop
fwait
rcl
mov
mov
ss
lahf
sub
cmpsl
mov
add
fcmove
pop
scas
xor
test
pop
xchg
and
cwtl
enter
fdivrl
xlat
test
jecxz
enter
ljmp
mov
fildl
adc
adc
cmp
sub
push
xor
lock
fwait
cmp
pop
fmul
jnp
add
xchg
js
or
ja
dec
test
cmpsl
repz
bound
mov
adc
xchg
pop
insl
inc
pop
cmp
or
pop
aam
repz
cli
aam
stos
jge
setne
hlt
bound
inc
mov
jo
add
xor
divl
insb
je
add
and
shlb
sub
pop
jb
inc
ret
aas
jl
notb
or
jae
xchg
aam
mov
mov
jl
adcl
leave
ds
mov
jecxz
or
add
jnp
and
rcrl
dec
jns
jp
lods
pop
outsb
shr
jno
jbe
xchg
int3
mov
rorb
test
pop
aad
cli
cmp
push
push
mov
push
dec
pop
add
jle
xchg
daa
fcompl
xchg
mov
sbb
adc
imull
mov
cmpsl
mov
push
std
jmp
lret
in
int3
shll
or
sub
push
test
mov
and
shl
ss
adc
cmp
dec
mov
mov
mov
outsl
and
subb
jp
cs
loope
rcr
jmp
gs
mov
andl
pop
fidivrs
mov
mulb
xor
cmpsb
scas
push
cmpl
sub
and
popf
dec
pop
loopne
cmp
insb
iret
mov
adc
dec
test
jl
aad
scas
int
dec
push
or
lds
lea
ret
mov
insb
cli
add
test
mov
sbb
iret
xorb
mov
repz
sub
sbb
xchg
movsb
lods
repz
mov
pop
out
enter
ljmp
data16
stos
cld
cld
or
leave
iret
insl
dec
or
faddl
cmp
jae
dec
pop
pop
push
mov
ja
mov
add
adc
push
imul
mov
dec
out
mov
sbb
in
mulb
out
std
out
xor
lds
push
ret
pop
adc
shrl
inc
pusha
loop
sub
pop
lock
cli
dec
pop
mov
jle
fisubrl
mov
movsl
stc
repz
sub
std
mov
es
push
xchg
sahf
aam
push
inc
and
test
test
into
mov
mov
jnp
adc
mov
push
sbb
and
mov
inc
sahf
or
imul
movsl
xchg
lcall
push
aaa
jne
popa
mov
lock
cmp
cmp
arpl
pop
mov
mov
and
mov
and
insb
mov
cmp
mov
cmpsl
inc
out
adc
leave
dec
xchg
es
rolb
jecxz
stos
je
adc
add
pop
fstpl
lret
push
gs
inc
push
inc
sar
test
dec
jne
xor
jmp
mov
sbb
dec
or
jl
inc
imul
sbb
dec
pushf
testb
add
adc
add
push
test
incl
ja
das
fdivr
dec
xchg
inc
mov
mov
iret
je
in
or
push
mov
rolb
iret
sbb
in
xlat
das
stc
test
aas
and
cmc
push
dec
js
mov
iret
out
jl
inc
inc
stos
leave
mov
push
cmp
fistps
pop
mov
xor
jno
xor
stos
cld
jae
xor
xchg
rcl
push
stos
pushf
mov
enter
pushf
and
dec
je
cmp
ljmp
cmp
push
fnstenv
jo
lea
and
jb
es
fimuls
and
aaa
lcall
addr16
mov
fistpll
dec
lahf
jno
dec
into
mov
mov
cmp
mov
mov
and
std
shlb
imul
mov
jbe
icebp
and
mov
mov
inc
into
dec
jge
or
push
pop
in
cmp
adcb
outsb
add
incb
mov
mull
cwtl
xchg
jp
ret
popa
fcompl
movsl
mov
fbld
bound
arpl
out
ret
mov
scas
xor
sub
jne
and
pop
pop
inc
add
xchg
mov
jbe
jno
outsl
fmull
ds
shll
jae
sahf
cmc
mov
addb
lret
cmp
mov
mov
int
inc
and
lahf
and
fs
adc
push
xchg
lahf
push
shlb
inc
insl
sbb
inc
adcl
inc
nop
pushf
dec
sub
xchg
stos
mov
mov
aaa
xchg
les
push
je
sub
dec
test
enter
push
out
std
dec
daa
xor
add
fcmovb
js
dec
or
aam
in
push
cs
jmp
loopne
repz
out
das
adc
add
push
loope
cmp
les
scas
int3
es
jge
adc
push
cmp
xchg
xchg
fnstcw
addr16
shlb
push
ret
or
gs
cmp
nop
outsl
mov
imul
leave
data16
js
jne
cmc
cmp
or
sbb
je
inc
leave
push
or
mov
ja
lds
push
or
ljmp
mov
fsubrp
mov
xor
and
mov
xchg
popf
imul
inc
push
mov
push
insl
pop
sub
dec
pop
xchg
ja
cmp
test
pop
sub
cwtl
xchg
movsl
xor
dec
enter
cmp
dec
and
mul
sub
fimull
jns
int3
ja
push
push
sub
push
and
jg
xchg
nop
add
lret
pop
xchg
outsl
scas
aad
ss
mov
out
cmp
pop
lret
sub
dec
add
rol
scas
aas
mov
sbbl
sbb
sbb
leave
pop
lods
fmuls
jmp
jne
and
loop
ret
outsl
test
mov
pop
push
cmpsb
into
loopne
or
imul
sbb
pop
cmpsb
in
add
pop
xor
xor
sbb
sbb
xchg
push
mov
sti
push
sbb
lock
dec
imul
div
gs
ds
loope
inc
cltd
lahf
shlb
pushf
inc
mov
sti
fdivr
dec
ficompl
es
int3
scas
sbbb
call
jnp
sub
sub
loop
mov
mov
cmpsb
sarb
shll
sub
inc
enter
xor
cmp
jle
lods
movsl
push
and
inc
enter
fwait
or
cmc
testb
andb
pushf
push
cmp
decl
cwtl
jbe
inc
add
push
jo
sub
pop
dec
adc
jmp
jle
cwtl
jns
cwtl
inc
jne
xorl
fdivrp
shlb
mov
mov
cli
sub
icebp
and
xchg
out
lcall
mov
lea
rcrl
xor
mov
inc
xor
inc
repz
rcl
adc
inc
push
out
hlt
roll
xchg
inc
inc
stos
hlt
or
pop
js
cmpsb
dec
cld
jb
pop
loop
mov
sbb
xchg
rcll
sub
or
mov
cltd
in
cltd
push
subb
jns
jb
mov
in
idivb
gs
cmp
ret
pop
jmp
shlb
daa
mov
popa
mov
inc
aad
xor
jae
ret
fildl
xchg
cmc
icebp
jg
xchg
ss
das
clc
popa
int
xchg
sahf
xchg
aad
cs
jne
pop
mov
xchg
nop
dec
je
jae
xchg
xchg
jg
dec
adc
in
cmp
movb
push
in
push
dec
outsl
pop
adc
cmp
mov
into
xchg
movsb
mov
ret
mov
push
subb
loop
mov
mov
jno
dec
lods
rcr
cwtl
push
or
add
es
int3
xchg
icebp
mov
dec
fucom
sahf
sub
lods
insb
fbld
lds
stc
mov
iret
loope
cmpl
push
repnz
mov
movsb
dec
and
lods
imul
jns
rolb
loop
stos
mov
stc
call
arpl
inc
xor
mov
es
push
loopne
lods
add
dec
sbb
call
xchg
fisubrl
push
out
mov
pop
xor
jmp
lret
jg
pop
enter
sarl
lahf
aad
adc
dec
jae
fnstsw
mov
and
xchg
aas
pop
push
testb
push
cmc
mov
cli
inc
outsl
pop
lock
cs
xchg
cs
out
shld
rcrl
mov
dec
jecxz
mov
shll
dec
mov
pop
lods
pusha
cwtl
mov
rol
aad
push
mov
push
add
je
xor
jl
jmp
inc
mov
ret
mov
jnp
inc
mov
fdivrs
sbb
jmp
push
mov
mov
adc
rorb
lock
outsb
or
not
shll
push
dec
pop
pop
outsb
daa
out
movsl
mov
add
push
lock
pusha
push
inc
int3
cmp
lock
mov
sbb
sar
mov
mov
test
imul
outsb
lret
xchg
cltd
inc
pop
fldl
sbb
fimull
rep
inc
loope
and
jmp
sub
mov
imul
imul
pop
sub
js
stos
std
popa
push
mov
int
or
outsl
unpckhps
lret
xchg
shlb
inc
push
adc
xchg
xor
popa
test
test
jb
andb
arpl
adc
and
scas
imul
push
enter
mov
adc
xchg
stos
sarl
loop
dec
mov
push
inc
aad
std
in
or
lea
xchg
jl
sub
push
cli
sbb
hlt
mov
xor
bound
movsb
cltd
lock
aas
loop
sub
bound
pop
in
pop
shrb
xchg
add
sub
add
and
push
jge
aad
mov
mov
push
xchg
dec
or
or
dec
sahf
adc
xlat
inc
mov
mov
mov
mov
lods
arpl
push
jae
adc
std
and
les
das
outsl
mov
movsl
mov
xchg
mov
jg
ja
add
adc
stos
and
xor
cld
movsb
mov
icebp
jge
and
adc
xchg
add
popf
ss
cmp
pop
cmp
xor
lahf
in
loopne
hlt
and
mov
test
sbb
and
push
xor
cmp
inc
and
mov
mov
pushf
xchg
mov
sub
xchg
mov
mov
roll
or
outsb
jmp
clc
sbb
mov
jmp
es
pop
ret
or
and
hlt
std
jno
iret
push
mov
fimull
hlt
int3
xor
imul
or
adc
pop
pop
mov
mov
in
mov
movsl
or
hlt
outsl
fsubs
push
jns
into
stc
mov
push
push
xorl
inc
out
ret
fadds
push
bound
mov
adcl
out
jmp
aam
cmp
pusha
dec
pop
leave
xchg
outsl
nop
test
push
adc
das
rolb
jns
int3
sbb
rcrb
sbbb
adc
pushl
jns
lds
xchg
faddl
aad
addl
add
movsb
xor
push
sub
add
sub
or
jne
sub
arpl
ja
fsubs
ret
lods
and
push
je
jns
repz
xchg
and
clc
mov
jl
lods
in
mov
push
cmpl
inc
inc
das
jne
xchg
clc
jbe
push
push
sbbl
push
add
insl
lret
jne
push
sub
xor
inc
mov
cmpsl
fldz
mov
negl
repz
aaa
jl
cmp
inc
and
icebp
and
push
daa
xor
mov
sub
jecxz
xor
push
xchg
or
sub
orb
fstpl
loopne
fs
popa
cmp
mov
jl
mov
rcrb
iret
outsl
sarb
mov
pop
int3
or
sub
in
test
xor
daa
cltd
flds
add
insl
mov
gs
movsb
in
pop
and
cmpsl
rcr
ds
repnz
test
sub
insb
xor
call
sti
xor
fmuls
test
mov
sub
stos
popa
mov
pop
lea
dec
mov
pop
in
cmp
rorb
loope
std
lds
sub
mov
inc
dec
jb
add
xchg
sbb
fiadds
sahf
in
shl
mov
fldcw
sbbl
jg
mov
xchg
mov
dec
pop
ljmp
push
xlat
lods
cmp
dec
push
xlat
push
out
xchg
and
xor
xor
add
xor
inc
bound
push
fcompl
cli
in
mov
mov
mov
mov
mov
pushf
out
cmp
rolb
movsl
std
clc
xor
imul
cli
or
push
mov
pusha
sub
dec
cmpsb
popa
in
mov
cli
jl
push
hlt
movl
mov
mov
fldenv
push
fisubrl
fimull
or
lahf
test
xor
cmp
or
mov
pushf
out
fsub
sub
fsubrs
mov
in
or
xchg
pop
lods
mov
scas
rcr
cmp
pop
xchg
popa
in
push
push
adc
iret
pop
pop
add
xlat
sbb
push
jmp
push
mov
inc
fwait
scas
loop
xor
inc
fidivl
scas
push
push
push
mov
fucomp
repnz
sbb
pop
dec
push
pop
sub
sahf
nop
ffreep
mov
fnsave
adc
mov
lcall
inc
xchg
bswap
jecxz
sbb
cmp
or
sub
ds
pop
lods
mov
xor
mov
out
mov
in
pop
mov
scas
dec
xchg
add
into
das
mov
cltd
mov
add
idivl
lds
dec
loop
xchg
push
stos
inc
or
insb
shr
in
movsb
push
push
and
es
les
test
sub
stc
push
aaa
mov
mov
test
jno
hlt
sub
out
jmp
jg
xor
aam
push
arpl
cmpsb
cli
inc
lahf
jmp
sub
cmp
jle
dec
enter
push
cmc
cmp
or
jno
push
xor
cmp
jp
jo
test
dec
mov
les
nop
mov
sbb
test
push
pop
mov
mov
or
mov
pop
icebp
test
mov
aam
mov
xchg
lret
jns
cmp
xor
fcmove
mov
jle
pusha
xlat
addr16
pop
leave
xchg
jp
test
stos
gs
pop
test
inc
push
rolb
flds
in
or
ret
int
xor
in
fldcw
dec
mov
dec
out
es
jns
push
mov
or
fiaddl
mov
pop
fwait
sbb
into
inc
lods
mov
icebp
fbstp
lret
mov
dec
test
adc
fbld
cmc
xchg
push
pop
mov
xor
and
inc
std
les
sub
lcall
lock
cmpsb
andb
popa
insl
in
adc
in
clc
outsl
add
jp
popa
jecxz
sbb
ja
idivl
cld
or
test
ss
and
ret
aad
xchg
inc
sbbb
daa
mov
xchg
cltd
sbb
cmp
push
loop
outsl
xchg
idiv
mov
outsl
jns
lods
lods
fnstsw
lcall
std
dec
add
mov
insl
cmc
jne
pop
mov
in
mov
adc
cmpb
pop
pop
lds
lods
sub
and
adc
mov
push
das
leave
mov
cmpl
stos
cwtl
sub
xchg
int
mov
dec
pusha
jg
mov
setg
inc
iret
lcall
mov
nop
repnz
test
neg
hlt
aam
push
mov
pop
nop
sub
sti
call
push
subb
inc
cli
push
xor
fsubs
jge
sbb
ret
xchg
push
loopne
ret
sbb
xchg
in
mov
je
cmpsb
lea
adc
inc
lea
or
mov
outsb
icebp
mov
xchg
push
sub
pop
push
push
cwtl
dec
popa
jb
push
sbb
sbb
in
pop
repnz
repz
ret
divl
jp
jae
ficoml
xchg
cmc
ljmp
cmp
fstpl
leave
xchg
dec
adc
std
mov
push
cmp
push
notb
loop
pop
popa
test
jge
ftst
push
jns
ja
rorl
xor
popa
mov
arpl
push
mov
out
iret
jle
add
loop
add
mov
xor
and
je
adc
sbb
and
stos
repz
and
jnp
mov
mov
hlt
ja
mov
imul
cmp
inc
scas
lcall
xchg
fwait
cld
int
in
movsb
enter
out
in
sub
push
imul
sbb
movsb
mov
push
das
jno
imul
dec
in
das
cmp
ja
push
mov
inc
lcall
cld
lret
pop
out
jecxz
loop
xchg
sub
andl
es
out
jg
andl
xchg
cs
push
ficoms
push
cmp
mov
imul
adcb
gs
pop
fidivl
mov
xchg
jecxz
cld
das
daa
xchg
adc
mov
mov
jae
pusha
xchg
mov
mov
dec
mov
cli
add
int3
sub
fidivrs
sub
add
lret
add
gs
pop
sub
pushf
mov
dec
add
xor
lock
or
mov
int3
mov
xchg
call
mov
cmpsl
mov
cmc
push
rorl
idiv
fwait
pop
mov
je
clc
aaa
sbb
cmp
inc
cmc
and
cmp
incb
sub
rol
xorl
adc
int3
jb
out
out
lcall
fiadds
shl
xchg
pop
xchg
jmp
xor
imul
cltd
dec
imul
fcomps
xchg
push
push
shl
movsl
pushf
int
imul
cwtl
xchg
loope
add
mov
cld
dec
lods
rcr
jbe
popa
jecxz
mov
insb
mov
xchg
das
nop
mov
jge
push
jmp
inc
gs
maskmovq
jnp
jns
repz
inc
push
sti
pop
inc
stos
mov
sbb
pop
pop
add
cmpsl
sbb
gs
jmp
cmpsl
adc
inc
jge
rcll
jmp
or
xchg
nop
les
movsb
dec
and
inc
push
pop
daa
jns
push
add
in
jne
cli
lret
push
ljmp
roll
filds
addr16
push
sarl
lret
sub
xlat
mov
push
fstl
pop
inc
mov
or
or
arpl
mov
leave
enter
fstl
xchg
cmp
jp
lret
inc
lock
mov
mov
sbb
loope
xor
adc
rcrb
test
mov
or
orb
sub
sti
add
cli
movsb
mov
mov
push
mov
cmpsl
frstor
cld
mov
push
add
sti
jo
mov
xchg
mov
clc
jecxz
mov
repz
mov
add
mov
sub
xor
outsl
iret
jl
mov
xchg
sub
sbb
loopne
scas
inc
jle
nop
fwait
mov
out
push
cwtl
cmc
adc
in
arpl
xorl
adc
in
repnz
sbb
rorl
adc
pop
nop
mov
push
cltd
imul
aam
hlt
jnp
mov
loope
aam
inc
mov
lcall
and
aad
in
adc
inc
cmp
push
icebp
insb
dec
or
xchg
mov
gs
ljmp
lds
adc
or
sub
data16
mov
or
jl
pushf
fcompl
mov
and
jge
add
insl
sub
popw
fnstcw
jp
fstpl
adc
loopne
ja
add
outsl
outsb
dec
cltd
push
decl
adc
pop
aaa
fs
adcb
push
incb
bound
and
les
mov
ljmp
je
dec
jb
fiaddl
adc
jb
mov
or
pop
cmp
es
icebp
andb
hlt
stos
out
xor
test
xchg
mov
xchg
in
xor
xlat
sub
addr16
and
inc
call
and
xor
shrl
or
mov
out
add
jge
mov
iret
pop
dec
mov
or
and
lret
jne
xchg
or
les
sub
stos
jbe
xchg
fisubs
mov
xor
mov
leave
in
les
jmp
cs
stos
iret
inc
xor
mov
xor
stc
mov
hlt
push
lret
sub
dec
andl
pop
leave
mov
jmp
out
adc
cltd
aas
xlat
ret
int
pop
dec
lock
mov
cmp
sbb
cmpsl
testb
andl
jge
cld
sti
xor
and
cwtl
pop
clc
dec
lock
arpl
jge
hlt
ja
lods
push
in
lock
cmp
add
lret
add
push
jmp
sub
movsl
pusha
xchg
rol
mov
lcall
dec
pop
xor
data16
int
push
adc
xrelease
aam
jp
pushf
adc
fwait
dec
imul
cmp
xorb
lods
out
cli
lret
cltd
adc
xchg
cs
xor
push
pop
shrl
cmp
push
or
jmp
iret
mov
cld
pop
and
xchg
aam
mov
pop
ret
inc
dec
aas
decb
xor
out
and
shrb
jbe
int3
xchg
sbb
adc
sub
jno
adc
aaa
add
repz
cmpsw
jnp
cmc
adc
dec
cmp
test
sti
int
daa
loopne
jp
mov
jl
int3
cmc
cld
lret
pop
inc
cltd
push
sub
subl
inc
out
loopne
es
xchg
mov
test
pusha
lods
inc
xor
je
test
cmp
xchg
mov
iret
adc
jns
add
fisubl
jbe
inc
mov
or
nop
popa
sub
jle
js
repz
and
mov
pusha
in
fnstcw
jmp
cmp
insb
insb
xchg
push
je
xchg
ret
cmpsb
addl
imul
push
xor
xchg
addr16
ljmp
inc
sbb
rol
repnz
and
sbb
cltd
dec
out
popa
jle
ja
mov
lret
xlat
inc
sub
inc
dec
jmp
cmp
push
ret
out
adcl
cmpsl
lret
bound
rcrl
lret
loop
add
popf
out
cmpl
imul
mov
in
rclb
cmp
pop
lock
sbb
inc
push
stc
cld
xchg
std
mov
fwait
movsl
pusha
mov
stc
loope
mov
inc
in
mov
cmpsb
or
hlt
loope
dec
iret
mov
jo
mov
push
and
fwait
mov
inc
jne
dec
insl
add
adc
aad
pop
or
add
and
mov
clc
std
mov
shll
call
dec
mov
mov
jmp
out
mov
mov
loope
enter
movsl
bound
xor
jae
inc
icebp
ja
in
loop
sti
repnz
gs
push
pop
pop
push
cmpsb
jle
scas
mov
adc
cld
sbb
sbb
push
ror
jno
and
dec
movsb
xchg
ret
or
jns
mov
sub
dec
xlat
and
jmp
xchg
xor
push
and
pushf
iret
jge
pop
pop
mov
mov
call
decb
mov
das
fs
xchg
sub
hlt
stos
movsl
sbb
dec
aam
pushf
sti
cmp
outsb
dec
shll
sbbb
cwtl
xchg
cmpsl
push
stos
dec
int
out
stos
ljmp
out
js
sbb
adc
xor
dec
adc
sbb
add
dec
es
pop
or
and
arpl
xor
stc
pusha
pop
cld
das
pop
bswap
loopne
int
cmp
scas
xchg
inc
add
scas
sub
adc
mov
jmp
shll
faddl
mov
sub
test
cld
jne
sub
push
xor
or
fisubs
dec
into
mov
lods
adc
mov
frstor
movsb
mov
test
xor
add
sbb
jmp
sbb
scas
mov
in
and
aas
cmp
mov
fisubs
jo
out
ds
movsb
inc
std
addl
stc
fsubs
mov
mov
inc
addl
mov
ficomps
cmp
xor
cmpl
lahf
mov
lea
iret
push
mov
cwtl
ret
mov
dec
lds
pop
bound
and
fs
sub
jb
and
test
xchg
aad
or
rorb
jno
xchg
aad
xchg
or
daa
sub
out
sbb
mov
or
and
push
xor
push
mov
mov
push
mov
notb
mov
lea
imul
cmpsb
lock
out
xchg
jge
mov
out
sbb
or
mov
inc
sub
test
sbb
ret
push
daa
mov
and
mov
push
add
adc
fsts
aam
ficoml
or
adc
sbb
cmp
in
sbb
xor
mov
sub
lret
fdivp
dec
xchg
push
push
xchg
jp
add
and
gs
daa
push
jle
aaa
push
mov
insb
pop
outsl
dec
pop
icebp
dec
sub
push
imul
cld
mov
test
shl
ret
insb
and
dec
jg
jge
data16
fwait
cmp
mov
test
test
repz
ret
push
fdivrs
or
cmp
enter
mov
xor
movsl
fstps
sbb
cmp
jl
adcb
ss
das
imul
in
pop
adc
addr16
push
cmp
pop
fisttpll
stos
out
mov
mov
push
ss
mov
icebp
xchg
fs
insb
and
pop
jnp
in
mov
jb
fwait
jle
lods
sub
mov
sub
jg
in
pop
outsb
lock
adc
movsl
dec
or
sub
imul
rcr
cld
mov
std
gs
test
pop
mov
cwtl
xchg
lret
nop
pop
jmp
fnstcw
add
sti
xchg
stc
ret
xor
aas
into
leave
jns
pop
sbb
xor
push
and
rorb
mov
fidivs
pushf
movsl
cmp
sahf
stc
fdivs
pop
jp
and
xor
xorl
push
pop
jp
sub
xor
aas
je
cmc
loope
int
cmpsb
xchg
adc
fidivrl
sbb
mov
push
pop
xor
cmpsb
xor
sti
jo
sahf
arpl
in
or
mov
test
xchg
leave
cmp
fimull
adc
add
data16
hlt
cmp
sub
xchg
cmc
inc
jle
jl
xchg
pop
mov
push
sub
das
sbb
orb
jecxz
dec
addr16
xchg
mov
cmp
inc
leave
dec
cmp
add
insb
insb
js
xor
subl
iret
dec
push
clc
dec
dec
sbb
pop
in
cmp
lret
mov
jo
adc
mov
sbb
pop
and
jg
mov
jle
mov
mov
add
clc
mov
mov
and
fs
cltd
or
or
dec
repz
adc
shl
add
sub
xor
lods
aam
je
adc
es
dec
jg
lods
mov
add
lods
inc
xor
stos
push
and
test
ror
cli
ljmp
sub
mov
test
adc
imul
xor
outsb
add
lret
pop
movsb
xchg
add
bound
insl
test
xor
inc
jae
shll
cmp
addr16
out
mov
in
fldenv
shrb
cmp
mov
outsl
or
push
sbb
xchg
mov
xchg
add
cwtl
scas
in
mov
adc
mov
js
not
push
push
mov
push
and
push
jne
pop
nop
push
dec
shlb
xchg
pop
jp
sub
xchg
call
inc
mov
pop
mov
clc
mov
fistpll
dec
hlt
scas
mov
fmull
stos
sbb
lea
shlb
leave
jmp
inc
jns
sarl
dec
and
fiadds
out
cmpsl
xorl
cmp
clc
cmp
shlb
test
into
mov
lock
push
arpl
arpl
adc
cmp
sahf
mov
sbb
push
rorl
or
jae
jmp
subb
aas
cwtl
mov
rolb
push
pop
push
ror
xchg
ds
lcall
sub
jns
xchg
jns
and
jo
dec
and
mov
inc
mov
mov
sbb
dec
loop
inc
je
loop
mov
mov
stos
sub
mull
jecxz
fcoml
jge
cmp
jb
and
jno
sbb
jbe
aaa
push
push
test
loopne
pop
or
out
int3
mov
mov
loope
movsb
cmc
fs
test
lods
cmp
into
or
jno
push
orl
and
sub
call
inc
out
mov
cs
aaa
inc
icebp
ljmp
mov
mov
mov
push
jne
pop
jecxz
clc
lret
mov
xchg
and
xor
out
je,pn
shlb
sub
lods
inc
mov
mov
in
lods
xor
push
add
mov
mov
sbb
adc
ret
idivb
ret
xchg
call
int3
addr16
mov
scas
mov
in
scas
cmc
lahf
dec
push
sbb
mov
push
sbb
push
inc
js
dec
fwait
bound
push
gs
pop
aad
xor
xor
popf
outsl
movsb
mov
shl
lods
xor
jae
jcxz
gs
pusha
push
sub
add
inc
mov
arpl
jbe
cmp
push
aas
out
test
add
inc
adc
or
enter
sub
out
dec
add
jbe
sub
pop
sbb
add
xchg
ret
rcrl
pop
mov
mov
cli
call
mov
addl
cwtl
out
and
subl
jne
sbb
leave
test
jae
mov
mov
scas
popf
insb
inc
jle
inc
xchg
mov
xor
xchg
push
movsl
inc
ret
push
cli
mov
out
mov
mov
push
outsb
lock
mov
sub
das
mov
mov
jae
aam
sub
sub
mov
je
mov
dec
xor
sbb
pop
inc
sahf
stc
xor
mov
mov
hlt
push
dec
pop
enter
mov
flds
stc
loop
fisubs
xor
jae
loope
ljmp
jmp
pop
push
lret
rcrl
rcrb
aad
jp
mov
movsl
stc
gs
xchg
cmpl
cld
cmpsb
std
pop
pushaw
pop
xchg
or
dec
in
fdivp
jns
cwtl
jbe
jb
jo
scas
fs
adc
pushf
adc
ret
pop
sbb
and
scas
sti
lods
or
out
push
inc
shl
mov
shlb
out
mov
mov
daa
incl
daa
mov
fcmovb
mov
jno
aad
adc
sahf
mov
mov
xor
xorb
js
out
nop
mov
xchg
ret
ds
fnstcw
cmp
mov
mov
in
repnz
inc
mov
pop
cmp
ljmp
and
ljmp
leave
in
pop
int3
cmpsb
mov
jmp
mov
xchg
jl
inc
mov
adcl
aam
les
scas
ljmp
jne
addl
in
out
or
jge
scas
mov
sar
mov
xchg
xlat
fnstsw
add
mov
jnp
addr16
adc
mov
and
xorb
inc
xchg
les
cmpsb
push
pushf
mov
jne
inc
xchg
sub
ret
adc
in
jbe
shl
xor
and
add
stos
mov
xor
push
lods
cmp
pop
stos
xorl
clc
pop
ret
mov
jns
pop
iret
xor
shll
mov
lret
das
test
dec
icebp
mov
jecxz
inc
pusha
mov
or
or
mov
sbb
stos
icebp
lds
movsl
cli
push
or
push
fdivs
jp
dec
add
movl
and
sub
mov
jns
cmp
dec
xchg
bound
or
lret
lahf
loop
xchg
cs
in
mov
lds
lock
aas
lcall
loopne
clc
or
push
sub
adc
das
pop
jno
out
cltd
test
jne
movl
stc
lret
mov
adc
test
dec
out
cmp
pop
sub
stos
and
pusha
shr
mov
push
lret
push
ljmp
int3
add
int3
or
and
mov
add
idivb
adc
icebp
mov
in
mov
shlb
fisubrs
mov
in
xor
pop
pop
outsb
dec
xchg
fcomi
mov
stos
imul
push
pop
ret
pushl
cmp
js
movmskps
pusha
mov
jl
xor
sbb
popf
adc
insb
jp
aad
aam
test
cs
mov
add
sbb
and
sbbl
insl
repz
push
or
push
xor
push
push
dec
cltd
add
scas
outsb
popa
adc
xor
mov
pop
pop
pop
xchg
inc
mov
cmc
push
add
inc
dec
inc
pop
hlt
inc
adc
dec
mov
rep
das
jle
loop
mov
test
mov
adc
cmp
ja
popf
sub
push
push
movl
mov
dec
mov
hlt
add
vmovdqu
fisubrl
gs
dec
dec
xchg
or
std
fadd
mov
insb
fsubrs
lock
cmp
add
xorb
rol
pop
fisttpll
icebp
adc
popl
fdivrl
add
push
fs
ljmp
ret
adc
imul
or
rorb
or
jae
add
push
cmc
mov
rclb
mov
xchg
pop
jle
pop
std
pop
outsl
subb
pand
or
mov
sub
jp
idiv
mov
and
cs
les
cmpb
push
lret
cmp
sub
xchg
in
dec
int
andb
xor
pop
jns
sbb
dec
jne
enter
jno
cmp
xchg
or
ljmp
call
xor
fucomip
mov
lock
mov
jl
fsubrs
dec
xlat
mov
dec
jmp
pusha
mov
pop
lret
mov
push
fdivrs
cmp
mov
jecxz
adc
scas
das
imul
cltd
loop
sbb
fistpll
mov
or
or
pop
pusha
rcll
push
or
test
mov
ror
mov
sub
or
push
lret
mov
loopne
adc
add
jns
pop
inc
jne
loopne
mov
pop
xlat
xchg
add
jae
outsl
push
pop
mov
loop
out
shrl
leave
popf
cmp
sub
sub
insl
push
mov
popf
popf
icebp
cmp
jge
dec
or
pop
and
push
lods
add
mov
aas
testl
push
insl
and
jbe
sbb
mov
adcl
in
lea
pusha
int
and
fcom
fadds
cwtl
outsl
test
les
les
push
push
pop
mov
and
sub
xchg
fbld
shlb
pop
je
iret
popf
xchg
mov
jg
enter
push
dec
jbe
addr16
clc
dec
bound
stc
mov
push
jno
xor
jne
pop
mov
xchg
fisubrs
rol
adc
xor
dec
xor
pop
in
loope
inc
fcoms
ret
adc
adcl
outsb
jecxz
ret
inc
mov
mov
lcall
ds
dec
out
pop
lds
add
jmp
ret
sub
sbb
cmc
icebp
mov
push
loopne
dec
pusha
sbb
gs
push
add
sub
push
popf
pop
xor
data16
iret
and
ret
add
jl
mov
sti
adc
subb
cmc
loopne
inc
jb
fabs
xchg
jl
daa
repnz
push
sti
push
adc
pop
popa
jg
out
jl
push
mov
xchg
mov
bound
push
xchg
push
repnz
cwtl
ljmp
mov
notb
jbe
xchg
mulb
add
cs
push
enter
sub
cli
mov
sub
xchg
fcmovnb
pop
push
mov
in
les
popf
pop
loopne
cmp
cmp
stos
shll
dec
out
hlt
add
xlat
in
and
push
ljmp
sub
push
pop
loop
jmp
add
adc
add
xchg
jmp
jb
insb
xchg
hlt
adc
sahf
push
mov
cmpsl
js
push
push
scas
addr16
lods
push
push
xchg
stos
push
out
add
xchg
aam
sbb
mov
fsubr
mov
test
cmc
push
xor
and
pop
cmp
cmc
adc
sbb
loopne
lds
sbb
cwtl
stos
inc
fs
inc
add
lcall
xchg
shl
or
rcrb
and
popf
fistps
in
pushf
insb
xchg
mov
and
sbb
cmp
xchg
aaa
adcb
aas
fs
cwtl
xchg
test
add
cmpsl
outsl
out
xchg
fs
sub
subb
inc
mov
outsl
fimull
add
out
pushf
test
push
pop
cmp
mov
lds
adc
jg
mov
jo
sarb
mov
push
add
or
push
adc
test
lds
pop
xchg
sbb
mov
imul
data16
dec
add
leave
dec
es
addr16
pop
jno
test
lods
xchg
cmp
lds
jmp
xchg
outsl
lds
out
loop
sub
sahf
jecxz
fmuls
adc
nop
test
xchg
xor
inc
jge
pop
test
iret
jae
out
jb
std
test
sbb
sbb
arpl
test
shrl
jne
mov
ds
xchg
lret
xor
push
das
subb
fsubl
arpl
xchg
mov
push
xchg
movsl
inc
fs
divl
inc
imul
mov
shl
stos
adc
pop
jne
and
mov
mov
stos
dec
xchg
test
test
hlt
add
lea
movlhps
imul
jmp
mov
das
jle,pn
cmp
jg
mov
ljmp
hlt
pop
psadbw
push
fsts
sub
cmp
xchg
mov
ljmp
cwtl
ljmp
popl
into
data16
neg
sbb
fadd
aas
shll
and
sbb
pop
repz
pop
push
pushf
inc
fistl
stos
stc
iret
addl
andl
jmp
mov
test
xor
cmp
pushf
pop
sub
xchg
insb
and
inc
mov
cmp
xor
xchg
xchg
dec
mov
inc
leave
or
jb
or
jne
sub
and
pop
mov
int
jno
or
cs
stos
hlt
xor
outsb
int
lods
mov
mov
out
mov
leave
inc
daa
and
lock
lret
nop
jmp
push
mov
jns
adc
xchg
sti
push
inc
ljmp
sbb
stos
adc
pop
addr16
push
push
in
popa
xchg
add
pushf
mov
rcl
pop
imul
clc
mov
mov
js
rolb
int3
xorb
mov
xchg
cmc
in
clc
leave
mov
jnp
dec
dec
inc
adc
jl
xchg
loop
push
xlat
and
loop
pop
push
movsb
xor
mov
ja
mov
outsl
mov
mov
adc
shr
sbb
sub
pop
xor
sti
fwait
sub
mov
adcl
push
cmp
lock
out
mov
mov
push
mov
push
mov
add
fldenv
out
shll
dec
shll
sarl
push
ds
iret
push
inc
mov
inc
sbb
add
inc
push
cmp
ds
stos
testl
cmp
lcall
in
inc
xchg
mov
js
adc
adc
enter
dec
xor
fiaddl
cltd
fmulp
push
leave
lret
lea
aad
das
and
push
mov
pop
out
add
dec
lret
inc
dec
int
rcll
repnz
aad
jb
hlt
stos
insb
jecxz
inc
mov
loope
data16
or
xor
out
push
xchg
aad
mov
cmp
mov
sbb
xchg
mov
mov
add
mov
sub
ret
pushf
ljmp
popf
mov
adc
lret
adc
out
xor
inc
stos
pop
loop
xchg
push
jne
scas
jnp
dec
pusha
popf
adc
push
cmpsb
mov
lods
sbbl
mov
jo
sbb
lea
lea
inc
stos
or
daa
out
jl
add
ss
and
in
mov
mov
out
push
sbb
push
out
cs
mov
outsb
dec
ret
cmp
hlt
push
into
lret
dec
mov
pop
sbb
dec
stos
dec
xchg
push
cltd
xchg
mov
cmp
push
add
jmp
lahf
adc
cli
cmp
mov
bound
mov
and
fdiv
lock
add
sbb
popf
push
and
sub
cli
outsl
test
mov
and
negb
dec
xchg
bound
adc
jno
push
aam
shlb
xor
int
test
push
pop
repnz
pop
mov
sub
data16
into
sbbl
mov
push
jle
cmp
xchg
push
cmp
sahf
jge
ficoml
pop
leave
xlat
cmpsl
cmpl
mov
adc
mov
ljmp
sbb
outsl
mov
inc
gs
inc
hlt
sti
push
inc
mov
cmp
testb
jmp
mov
jmp
sbb
call
push
pop
adcl
adc
jo
lods
cmp
push
test
pop
cmp
psadbw
push
outsl
fsts
gs
xor
push
fsub
sub
loopne
imul
or
adc
pop
sbb
adc
or
stos
or
or
hlt
pop
in
into
cmp
nop
icebp
adc
inc
lret
aas
popf
fwait
push
sub
fidivl
call
fistl
std
push
faddl
xchg
test
test
fs
repnz
push
ret
gs
lds
sub
xchg
orb
hlt
mov
lea
add
fistpll
push
or
pushf
push
cli
mov
rolb
and
sub
insb
loop
add
js
es
popa
add
lods
lea
push
pop
sar
rcrl
push
in
cmp
jo
and
arpl
push
xchg
loop
hlt
rol
dec
in
pop
lock
lret
jmp
int
insl
or
mov
rcrb
adc
mov
out
jge
mov
fistpl
xchg
in
sub
es
rclb
mov
fs
or
mov
mov
mov
dec
into
lea
pop
notl
lods
pop
jecxz
addb
add
cmc
lea
out
fimull
jnp
mov
fdivl
cmp
in
shlb
fldenv
stos
mov
ja
in
outsl
test
mov
push
das
cmovl
cmp
scas
ret
cmpsl
ljmp
mov
xor
dec
test
mov
push
lock
xchg
test
jo
out
jae
mov
xor
mov
push
xchg
mulb
sbb
jb
mov
push
insl
std
adc
and
out
add
je
pop
xchg
add
lret
sbb
xchg
rcrb
stc
in
cs
sbb
andl
std
shrb
mov
mov
fwait
test
imul
mov
add
fisttpll
jbe
mov
jge
popa
fimuls
into
or
mov
cmp
call
lock
iret
lds
shld
imul
mov
pop
adc
pop
fsubs
add
mov
push
hlt
push
ret
mov
mov
hlt
xchg
jmp
add
dec
inc
pop
movsb
pusha
push
in
xchg
mov
test
add
pop
pop
shrl
int3
movsl
pushf
movb
aam
movb
aaa
and
push
sub
dec
inc
dec
sbb
lret
daa
sti
dec
popa
popa
imul
das
aad
adc
xchg
jmp
in
movsl
fs
int
pop
enter
and
test
adc
fwait
sbb
inc
aaa
xchg
xchg
lock
mov
pshufw
jns
movsl
cld
lahf
inc
jns
adc
aaa
out
and
xchg
push
ror
btc
add
and
fs
addl
data16
leave
repz
std
pop
push
add
aam
mov
test
subb
xchg
add
enter
jecxz
lods
mov
shll
cltd
inc
pop
arpl
fs
mov
xor
push
add
dec
fisttpll
aas
xchg
xor
push
jg
xor
cltd
in
icebp
mov
sbb
or
xchg
adc
sub
std
xchg
jno
ret
mov
push
jae
rcr
jno
pxor
jle
pop
xor
pop
or
out
aam
xchg
dec
test
or
push
orl
out
jo
dec
mov
mov
mov
and
mov
testb
movl
stos
inc
out
repz
cmp
dec
pop
aad
or
adcl
mulb
cli
or
mov
sub
stos
popf
dec
push
sbb
cli
in
testb
mov
popf
shrb
loop
out
sub
movsb
mov
ja
int3
jb
nop
aaa
sub
add
es
mov
mov
jno
out
out
jle
mov
stc
data16
pop
in
in
adc
add
mov
xchg
xchg
xchg
je
loope
mov
js
mov
ret
fbstp
rcrl
scas
pop
push
jb
jle
pushf
xchg
je
push
jl
cmp
int3
or
data16
sub
lods
mov
pop
add
pop
mov
mov
in
dec
sbb
or
out
pop
lahf
xchg
roll
mov
out
sbb
mov
int
mov
stos
cmp
pop
dec
pop
jp
mov
ret
shr
lds
dec
loopne
dec
int3
jmp
mov
mov
iret
push
pop
add
fs
and
mov
pop
sti
sar
mov
sub
shl
add
inc
sub
and
movsb
push
fsubs
imul
rcrl
jle
ss
repnz
dec
sbb
icebp
mov
push
push
jb
test
cmp
fcmovb
xor
icebp
push
dec
fstps
nop
mov
or
mov
cmp
insl
cld
sahf
mov
cmpsb
js
lds
pusha
movb
imul
fldpi
fadd
sub
movsl
out
mov
mov
test
cmp
adc
push
adc
mov
out
and
test
and
insl
pop
sbb
push
insl
pop
inc
jb
test
add
xchg
andl
and
mov
cwtl
dec
sub
mov
jmp
shll
aam
stos
loop
sub
mov
lcall
dec
jecxz
sub
lods
sbb
faddl
sti
jmp
sbb
mov
sbb
inc
mov
ss
imul
stos
or
add
loopne
fstpl
cltd
outsb
mov
sub
push
push
and
xchg
or
cli
mov
cld
sub
push
dec
sub
leave
jns
mov
push
addr16
rorb
ret
icebp
inc
int
int3
es
lahf
lahf
movd
loop
xor
adc
cmp
push
inc
sbb
fidivrs
cmp
sbb
mov
ret
mov
push
insl
mov
arpl
mov
jbe
push
pop
fadds
sbb
cmp
aad
pop
out
test
fstpt
push
test
cmp
mov
jle
das
mov
in
fcoms
ja
ret
cwtl
xchg
dec
push
xchg
icebp
mov
or
fistl
dec
shrb
pop
adc
mov
xorb
clc
leave
repz
std
enter
cmp
enter
add
sbb
push
xlat
shlb
test
mov
cmp
flds
fistpll
xacquire
inc
fdivrl
dec
in
test
fneni(8087
pop
and
xor
xchg
lret
pop
data16
cld
push
or
and
stos
xor
mov
or
out
sub
outsl
push
or
test
ficomps
mov
xchg
cld
add
sub
sbb
adc
push
mov
nop
mov
jge
aad
push
cli
cld
clc
push
aam
pop
arpl
push
jg
pop
in
xor
idivl
out
insb
xor
orl
or
add
push
arpl
fucomip
push
nop
fistpl
andb
out
shll
xchg
jmp
xor
loope
aas
and
cmp
mov
mov
add
outsl
jg
int
orl
inc
pushf
cmp
mov
js
jne
sbb
push
xchg
mov
cmp
bound
push
or
inc
pop
inc
je
movsb
stc
dec
xchg
add
cld
subl
xchg
sbb
pop
lods
cli
sbb
xchg
adc
pushw
in
mov
mov
cltd
mov
orb
pop
fwait
xchg
dec
add
icebp
sub
sub
test
pop
sbbl
inc
lods
add
mov
test
adc
inc
cltd
call
outsb
sub
mov
in
hlt
dec
add
test
in
test
shrl
and
xor
mov
inc
cmpsb
out
sahf
dec
std
ds
jl
inc
out
cwtl
xchg
adc
popa
lcall
push
adc
mov
rcr
fistps
mov
lcall
rcl
mov
xchg
fimuls
mov
not
arpl
arpl
push
xor
xchg
mov
adcl
xor
inc
mov
nop
mov
or
mov
add
mov
add
xchg
cmpsb
ret
les
rcl
sbb
mov
gs
out
fistpll
adc
aas
aas
pusha
mov
dec
call
xchg
in
push
lret
outsb
fimuls
lds
jne
sbb
stc
add
int3
inc
cwtl
jne
xchg
repz
adc
mov
scas
test
mov
pop
les
inc
aam
pop
jae
shl
inc
xlat
js
or
ds
fadds
adc
fdivrp
and
xor
mul
and
inc
daa
lods
test
fstps
stos
jnp
lahf
data16
les
mov
sub
je
gs
popa
jo
fsub
mov
cs
int
lcall
inc
inc
xchg
scas
fdivrs
adc
sahf
int
add
fnsave
and
insl
out
out
outsl
nop
js
fisubrl
inc
fistpl
xor
mov
pop
xchg
and
jle
testb
arpl
jg
out
jnp
incb
push
out
popa
xchg
push
lods
xor
sub
sub
and
sub
imul
push
testl
mov
add
push
mov
sbb
mov
rcll
jmp
filds
outsl
movsb
movsl
dec
xor
test
cmp
jno
jp
movsl
movl
push
push
xchg
pop
daa
rol
jbe
les
push
cmp
pushf
pop
fisubrl
sbb
out
aad
xor
stos
mov
jne
pop
jecxz
shll
and
aaa
sbb
mov
pop
lret
loope
popa
or
and
sub
or
ret
or
icebp
inc
clc
or
ss
leave
dec
lds
mov
lahf
or
mov
xchg
bound
dec
push
gs
add
ljmp
fmuls
test
test
cmpsl
add
repnz
clc
push
sub
mov
jo
test
arpl
pop
xor
aas
adc
into
push
sub
mov
into
fs
adc
cli
dec
nopl
xchg
outsb
test
cli
repz
xor
xchg
test
in
push
mov
mov
cli
dec
mov
push
sti
cmp
aad
mov
xchg
dec
add
lcall
enter
pop
xor
andl
cwtl
mov
cmp
and
mov
xor
test
sub
cmc
pop
movsb
mov
or
incw
mov
int
xorl
and
add
push
lahf
std
or
outsl
lods
inc
cld
dec
leave
jnp
xchg
dec
xchg
and
add
dec
xchg
cmp
imul
mov
pop
push
xchg
aaa
xlat
push
sub
sbb
or
fld
xchg
clc
jno
jmp
mov
pop
fcmovb
jb
xor
cmp
out
jmp
testl
mov
dec
push
dec
sbb
es
dec
sub
xlat
xor
and
pop
jecxz
jecxz
out
adcl
mov
cmp
int
and
jecxz
xor
sbb
inc
mov
lock
mov
lret
xchg
insb
dec
stc
mov
mov
pop
imul
xchg
ss
fs
in
jbe
sbb
scas
dec
test
cmp
flds
aam
jg
cmp
pop
pop
jp
lock
dec
add
adc
cli
in
jbe
test
pop
nop
imul
and
push
pop
sub
jp
std
mov
fstpl
cmp
aam
aam
push
outsb
mov
pop
lea
enter
scas
jnp
dec
insl
into
lock
pop
jge
pop
or
cli
movsb
jl
rorl
push
stos
xor
movsl
or
ret
and
loop
nop
pushf
dec
xlat
push
sub
mov
je
je
mov
repnz
jg
dec
pop
push
cmp
leave
repnz
pop
pop
scas
jg
loopne
xchg
mov
movsb
lret
mov
mov
xor
loopne
jns
sbb
add
sti
pop
out
aad
xchg
dec
daa
ficoml
mov
into
add
outsb
add
scas
xchg
add
jnp
into
sahf
es
inc
jbe
mov
mov
stos
push
rcl
and
notb
or
xadd
mov
or
inc
lock
xchg
mov
add
adcb
inc
mov
mov
mov
dec
mov
sub
pop
out
add
add
mov
outsb
lahf
popa
loope
inc
imul
push
jno
fneni(8087
jns
repnz
inc
int3
cmp
push
in
mov
add
and
cld
out
jle
jge
cmp
mov
fs
add
mov
pop
ret
outsl
adc
int
cmp
xchg
inc
mov
test
rcrl
xor
sarb
ficoml
test
cmp
inc
lea
inc
cmp
jo
das
enter
stos
jg
mov
neg
mov
lods
or
sarl
pop
mov
jl
shll
pusha
gs
xchg
cmpsl
imulb
pop
aam
iret
sbb
call
ja
xchg
xor
adc
jp
add
mov
lcall
scas
mov
in
lods
mov
push
pop
push
aaa
inc
out
xlat
inc
and
xor
fidivs
pushf
bound
cmc
mov
outsb
bound
mov
mov
rorl
leave
adc
sub
repz
pop
pop
ja
xchg
lock
cltd
scas
out
aas
push
add
in
jne
pop
insb
xor
das
xchg
fucom
aam
dec
sub
xor
pop
mov
dec
push
xchg
loope
xchg
cltd
push
dec
fistl
or
jmp
shrb
loopne
xchg
movsb
mov
addl
dec
in
mov
mov
mov
and
mov
jo
aam
loop
lret
mov
adc
ror
xor
aas
fwait
mov
cmp
mov
sbb
shr
push
add
pop
xcrypt-ctr
cmpsl
pop
fcmove
dec
outsl
jo
adc
aaa
or
ljmp
bound
push
popf
into
outsl
movsb
jg
push
imul
pop
jae
adc
movsb
dec
lods
fidivl
cmp
out
mov
sahf
or
mov
push
pop
enter
stos
aaa
sub
cmp
fisubrs
jp
pop
jo
inc
xchg
pop
lahf
popa
push
test
jp
push
daa
sub
mov
pop
mov
pop
push
movsl
test
mov
jbe
push
fcompl
in
push
adc
shll
push
xchg
push
dec
test
orl
dec
movsl
cwtl
cs
dec
xchg
add
jmp
sub
stos
je
hlt
ret
mov
mov
push
jmp
and
mov
jno
and
lret
lock
xchg
shll
decl
idivb
mov
mov
xchg
push
inc
cmpsb
pop
dec
fcompl
sbb
sbb
loopne
mov
aaa
pop
mov
xchg
out
and
jbe
cmp
mov
je
mov
inc
xor
xchg
out
adc
xchg
data16
in
jo
ret
in
fdivrp
out
xchg
out
stos
sahf
nop
cwtl
out
dec
adc
lds
ret
popf
xor
fwait
jo
cwtl
cmp
dec
lcall
xor
jmp
clc
flds
mov
and
push
and
cli
into
pusha
test
sub
cmpsl
pop
xlat
or
lods
test
int3
sarl
roll
mov
pop
in
js
and
pop
and
mov
mov
push
cli
movsl
mul
mov
xchg
ds
lcall
ja
jge
adc
nop
enter
rcll
mov
lods
sbb
ficoms
in
push
lret
jae
mov
rol
or
lret
mov
mov
push
mov
adc
lcall
in
ja
test
mov
jp
into
aad
movsl
jmp
and
in
mov
movsl
arpl
sub
mov
je
mov
dec
push
jns
fisubl
test
adc
pusha
enter
pop
mov
sub
lods
or
xchg
sbb
shll
aaa
insb
fisttpll
adcl
and
pop
and
inc
popf
adc
sub
xchg
and
mov
fadd
repnz
adc
adc
mov
daa
rol
in
xor
mov
rolb
jle
inc
push
js
into
mov
das
cmp
push
or
xchg
lea
data16
divl
dec
pop
rorl
sbb
jno
fucomp
sub
and
or
pushf
aaa
sbb
xchg
xor
dec
pop
div
and
pop
call
fdivrl
das
add
xchg
pop
xchg
jl
sahf
jp
bound
push
ss
mov
loopne
push
pusha
stos
pop
add
dec
rcl
loopne
or
inc
mov
sti
in
sub
lcall
pushf
mov
mov
xchg
sub
or
adc
cmpsb
out
imul
nop
in
inc
je
jmp
jl
fs
xchg
add
or
and
dec
je
dec
nop
mov
dec
loop
push
inc
dec
sbb
mov
xchg
jns
or
xor
pop
cmp
pop
xchg
xor
xor
not
fbstp
inc
loop
cmp
ljmp
jecxz
les
push
gs
fidivrl
or
fwait
mov
jg
ret
jb
or
les
insb
sub
pop
mov
add
push
mov
push
and
xchg
je
inc
shr
jmp
dec
xor
jo
int
mov
mov
sarb
das
push
movsb
cbtw
inc
mov
cmp
lock
mov
mov
xchg
dec
jge
mov
xchg
jne
in
inc
shll
insb
xchg
jnp,pn
jo
xchg
test
jbe
pop
inc
popf
jecxz
sbb
cwtl
fisubrs
mov
js
sahf
sub
repz
pop
bound
add
mov
icebp
mov
pop
negl
adc
lds
inc
ret
add
dec
dec
iret
pop
cmpsb
jle
fisubs
push
cmp
mov
inc
jge
xchg
add
push
lret
repz
cli
sub
jmp
mov
inc
test
cmp
pop
lods
imull
dec
xor
mov
and
inc
mov
push
clc
sbb
inc
repz
jmp
sbb
ds
dec
mov
pop
add
pop
add
js
jmp
or
loopne
xor
std
loopne
pushf
or
std
xchg
mov
xlat
les
inc
and
sbb
add
mov
jnp
sbb
sbb
sti
dec
xor
fwait
inc
inc
ja
sarl
pop
arpl
cmpsb
rcrb
stos
sti
pop
jg
cvtps2pi
xchg
jle
daa
call
ds
pop
sti
xchg
add
push
xchg
insl
shll
push
loop
sbb
gs
mov
pop
sbb
mov
inc
and
cmpsb
jg
pop
scas
xor
int3
xchg
mov
movsb
push
jmp
popa
sbb
xchg
movsl
or
xlat
pusha
xchg
pop
cwtl
aam
push
lahf
cmp
xchg
mov
dec
or
shlb
lods
aas
loope
cld
test
dec
repz
mov
push
lea
jg
pminub
loope
es
stc
mov
and
test
scas
ror
insb
pop
mov
pop
scas
dec
addr16
sbb
xchg
and
test
inc
in
loopne
and
inc
add
push
xlat
jl
dec
cmpsl
fnstcw
popa
shr
xor
pop
loopne
add
mov
and
mov
dec
out
testb
ja
mov
sbb
hlt
or
xchg
inc
test
stos
sti
cmp
loopne
jle
adc
movsb
outsb
fdivr
stos
mov
inc
pushl
jo
add
mov
dec
add
xchg
icebp
add
xor
inc
sbb
addr16
jmp
and
loope
imul
out
cmp
ds
cmp
iret
mov
mul
rorl
ss
xchg
test
lds
mov
add
fisubl
adc
shl
push
mov
sub
cwtl
cmpsl
mov
orl
fsubrl
das
xchg
or
dec
cwtl
outsl
arpl
in
mov
pop
cwtl
adc
dec
ficomps
nop
mov
arpl
add
xchg
and
xor
cmpsb
addb
mov
fsubrs
xchg
das
sbb
pop
or
es
inc
lods
mov
mov
dec
push
lea
mov
push
in
mov
add
mov
andl
ret
sub
cltd
shl
sub
dec
rcll
jle
icebp
sbb
push
jecxz
adcl
cmp
xor
loop
pop
xor
dec
push
jbe
sub
js
js
in
inc
pop
inc
sbb
push
xor
add
outsb
mov
pushf
lret
mov
adc
and
bound
lock
jle
sbb
xchg
xor
repz
push
jge
in
stc
and
sti
aas
divb
scas
mov
pop
mov
xchg
xor
jecxz
lods
ja
xor
jmp
mov
add
ss
xchg
in
rcrl
pop
sbb
cmpsl
cmp
mov
mov
xchg
add
xchg
adc
pop
mov
mov
mov
cmp
jle
je
scas
push
negb
sbb
rcll
lcall
push
mov
and
sub
dec
mov
lea
and
sub
cli
sub
dec
xchg
ss
adc
scas
jle
mov
addr16
rcr
mov
orl
pop
sbb
mov
xchg
xchg
push
out
out
stos
pop
push
les
sub
lea
sbb
add
es
lahf
mov
cmpsl
and
cld
cwtd
dec
push
xchg
jecxz
jae
pushf
and
mov
bound
pushw
jp
xor
test
cmp
mov
cltd
push
xchg
loop
xchg
inc
int
and
mov
out
fldcw
sti
imul
movsb
pusha
lods
scas
nop
jbe
add
mov
jge
mov
pop
out
sbb
cmp
push
aam
pop
xchg
imul
inc
imul
fisttpll
push
push
xchg
out
mov
adc
pop
add
mov
iret
sbb
jmp
push
mov
lea
dec
movsl
inc
dec
pop
hlt
outsl
inc
cwtl
push
aas
mov
sahf
cwtl
jle
xchg
shl
adc
loope
clc
mov
pushf
adc
or
pop
inc
dec
mov
cmpsl
ret
lcall
push
stc
stos
xchg
xlat
cmp
pop
pop
popa
rorb
xchg
push
xor
mov
cwtl
inc
aaa
test
mov
mov
pop
lds
stos
out
add
nop
pop
and
mov
sbb
mov
pop
mov
inc
fiaddl
mov
fnstsw
mov
inc
iret
mov
test
shll
divl
push
mov
sub
cmp
ljmp
aam
and
pusha
popa
sub
imul
xchg
rcll
adc
cmp
aaa
ds
xor
or
sbb
sbb
in
push
sub
adc
mov
adc
jb
xchg
xchg
leave
push
iret
hlt
call
xchg
inc
push
data16
ficoms
adc
xchg
mov
mov
sub
popa
addr16
lret
mov
scas
cmpb
cmc
fldt
cld
and
mov
adc
xchg
xchg
cmpsw
dec
inc
inc
ljmp
adc
ret
in
xchg
add
leave
pop
test
dec
fcoml
loope
scas
cltd
dec
ljmp
jnp
sub
jb
hlt
js
and
scas
jge
mov
popa
lods
mov
sub
outsb
stos
cmc
cltd
sub
test
ja
pop
cmp
clc
sbb
test
faddl
cld
sbb
clc
jne
ss
sub
mov
fiadds
repnz
fs
sbb
xor
mov
cltd
ret
mov
les
add
loopne
add
out
mov
in
filds
popf
sub
sub
adc
mov
xor
jnp
push
push
data16
mov
jmp
repz
iret
sub
enter
inc
sub
addr16
fcomps
into
jnp
incb
sti
test
jns
xchg
rolb
lcall
xchg
lock
sub
mov
stos
lea
push
jae
aaa
push
sub
fadd
xor
jo
sahf
xor
add
push
mov
es
xor
sbb
test
lods
insb
pop
pop
imul
out
and
jmp
jae
icebp
loopne
mov
mov
mov
sub
adc
outsb
push
hlt
mov
shlb
jl
fiadds
and
push
clc
loope
out
repnz
mov
test
cmp
sub
jno
xchg
jge
adc
cmp
or
pop
imull
mov
and
js
inc
lahf
fwait
inc
pushf
lds
jno
jl
addr16
push
mov
js
mov
sti
or
or
shll
fxch
add
mov
cwtl
cmp
push
add
sti
popf
cmc
jb
adc
aam
sub
xor
call
test
push
cmp
lds
dec
sbb
jno
loopne
or
cltd
jecxz
stos
pop
outsl
mov
xchg
pushf
leave
mov
fwait
cmp
aaa
pop
std
out
outsl
cmpps
repnz
mov
push
mov
xchg
and
rcrl
in
cmp
xchg
outsb
push
push
leave
mov
mov
lret
das
popa
push
mov
pop
int3
cltd
jmp
adc
push
fcomps
loopne
inc
inc
in
xchg
jle
orb
repz
shlb
or
pop
js
inc
sub
ss
cltd
loop
pop
and
inc
fisubl
sub
addr16
sbb
int
jne
or
fadds
jne
movsl
add
xchg
daa
pop
rcl
sbbb
sub
add
jmp
rcr
int
cwtl
clc
es
pop
cmp
mov
mov
sbb
push
push
jl
sahf
out
push
scas
std
into
loopne
ljmp
xor
push
sahf
adc
loope
pop
mov
mov
mov
and
shlb
mov
fwait
xor
sub
cmp
push
pop
frstor
sti
fsubs
pop
inc
pushl
in
mov
lods
xchg
jecxz
sahf
jnp
test
adc
sbb
xchg
fcmovbe
in
and
nop
dec
fs
pop
aam
add
jns
adc
push
xchg
lret
outsb
daa
inc
mov
in
in
out
inc
ljmp
cli
cmc
jns
lods
out
pusha
sbb
jmp
ret
mov
das
gs
jb
loop
cmp
cmp
daa
cmc
pop
cmp
sub
orl
lds
xchg
mov
jnp
imul
jno
mov
daa
jmp
and
jg
scas
cwtl
testb
iret
sub
adc
arpl
aad
mov
inc
shlb
mov
fxch
fwait
sub
stos
dec
mov
xorb
cld
leave
je
adc
mov
cmp
xor
dec
sbb
pusha
cmc
into
xchg
xlat
xchg
mov
inc
test
dec
cli
cltd
sbb
jle
push
iret
adc
jbe
and
xor
mov
bound
aad
lods
mov
sub
xchg
daa
in
xor
jae
push
insl
pop
xchg
add
hlt
leave
pop
lcall
nop
jl
adc
in
mov
or
mov
mov
push
test
cmc
rcrl
mov
mov
push
cmp
adc
pop
hlt
aas
xchg
call
mov
pop
test
aaa
cltd
fidivl
aam
mov
rclb
dec
mov
js
mov
xor
imulb
lcall
loope
inc
mov
xchg
mov
adc
lcall
and
xchg
insl
add
inc
and
xor
push
pusha
loopne
sbb
sti
cld
lock
scas
add
stc
sub
xor
dec
dec
dec
adc
aam
sub
xlat
out
adc
mov
mov
add
out
push
and
sub
cld
sar
sti
xor
cmp
jns
into
sub
scas
adc
sar
jge
jo
jns
mov
repz
int
inc
cs
mov
lds
flds
addr16
into
loope
pushf
cs
jg
sbb
add
orb
ror
dec
call
push
xor
test
fwait
pusha
dec
pop
cmp
scas
lea
divl
add
sti
aad
sub
fistl
cmp
test
pop
in
inc
int3
sbb
test
mov
in
or
pop
jge
imul
xor
inc
adc
mov
and
jae
mov
in
sahf
ficompl
cltd
sub
pop
scas
jnp
in
dec
insl
push
and
movsl
in
mov
xor
pop
jo
idivl
pusha
push
xchg
cs
shrl
sub
lods
dec
and
mov
into
jno
push
add
gs
in
xor
xor
enter
sti
int
cs
aad
sarl
add
xchg
pop
jae
ret
stos
pop
movsb
scas
mov
push
dec
out
or
test
lds
stc
fnstenv
mov
movsl
fs
fistpl
jbe
sbb
test
inc
leave
mov
out
adc
fcoms
lock
push
int
mov
stos
mov
cli
dec
popa
lcall
subb
push
cmp
cmp
shll
mov
inc
dec
xchg
movsb
and
fistpl
xchg
adc
arpl
in
movsb
cmp
addr16
sbb
mov
sub
lds
xchg
int3
pusha
mov
dec
or
xor
fcoml
fcmove
adc
sub
shl
push
test
mov
mov
push
push
scas
mov
inc
sahf
or
jb
bound
ret
pop
std
ret
xor
cmpsl
cmpsl
scas
xchg
subl
sub
in
jbe
sub
popa
fs
or
xchg
mov
cmp
lcall
ret
mov
jb
mov
dec
addr16
and
aad
out
arpl
and
es
in
in
fidivrs
pop
mov
test
ljmp
push
ss
mov
scas
sub
mov
sbb
jl
xchg
fcmovnu
sub
cli
mov
stc
leave
or
xchg
mov
jge
cmp
pause
mov
bound
xchg
xchg
int
ljmp
pop
movsb
mov
mov
push
or
test
iret
xlat
and
lahf
inc
jae
fisttps
xor
mov
loope
cli
cmp
lret
fs
mov
cli
inc
cs
pushf
xchg
pushf
pushw
and
jb
repnz
bound
cmp
dec
pushf
imul
sub
push
adc
mov
mov
cmpsl
sarl
and
inc
aad
sub
pop
mov
test
or
les
fbstp
lds
insb
pop
push
adc
test
inc
pop
test
cmp
lahf
pop
stos
mov
sub
cmp
dec
fstps
and
gs
jb
add
add
test
lret
dec
or
nop
pop
xchg
cld
rclb
sub
add
jmp
dec
add
pop
dec
hlt
push
pusha
nop
stos
lcall
adc
xchg
add
mov
jecxz
push
fwait
or
inc
rcrb
fldenv
sub
cmpl
les
cmp
mov
stos
fmul
lods
movl
add
cltd
or
jecxz
rorl
test
push
popa
push
cmpsb
dec
fcmove
and
popa
xor
popa
test
adc
xor
fistpl
es
icebp
nop
add
mov
ret
enter
or
aad
xlat
dec
nop
shl
notb
and
inc
aad
arpl
jae
icebp
push
repz
mov
jmp
sbb
subb
stc
inc
mov
add
mov
ds
clc
push
sbb
adcl
jg
aad
fwait
pop
inc
es
cmp
inc
cltd
pop
gs
xchg
lds
cmp
lods
inc
les
jno
shlb
test
int3
mov
fwait
xchg
sub
mov
jge
or
xchg
sahf
sbb
and
imull
out
xchg
repz
gs
out
mov
xchg
nop
in
or
lock
add
cmc
pop
fsts
into
push
test
in
push
repnz
daa
es
cli
cs
inc
dec
jae
insl
stos
imul
mov
es
test
push
mov
dec
xor
jg
mov
data16
loop
push
adc
mov
movsb
mov
popf
subb
xchg
mov
push
das
sti
push
push
loope
lods
incb
mov
rorl
mov
rcll
sar
mov
push
mov
mov
test
adc
adc
shrb
add
dec
push
xor
outsb
sub
pop
imul
push
je
imul
inc
adc
mov
mov
mov
add
mov
fucomp
pop
sub
addr16
push
sarb
push
jnp
mov
clc
int
dec
lods
lock
je
jb
pop
and
jp
sbb
cmp
test
js
add
idivl
push
add
cmpsb
or
mov
insb
pop
jecxz
jl
xor
xor
idivl
mov
jnp
fimull
mov
mov
sub
scas
sar
outsl
stc
std
shrl
dec
and
inc
push
rcll
nop
repz
in
pop
push
int
sub
mov
pop
jl
sti
pop
lret
lock
shl
test
lret
mov
movsb
ss
mov
pusha
int
push
add
dec
fdivs
xlat
repnz
inc
movl
jl
add
xor
add
sub
cmp
mov
lahf
mov
add
lods
adc
test
cmp
int3
lcall
xchg
out
jne
sahf
mov
add
adc
ds
les
fnstcw
shlb
out
icebp
ret
push
sbb
mov
dec
push
ss
inc
cwtl
push
loop
and
dec
lods
dec
sub
jmp
insb
cmp
in
popf
sbb
or
xchg
add
jne
jecxz
mov
jns
je
addl
dec
xchg
div
dec
and
xchg
ror
loopne
push
jnp
xlat
sbb
bound
fwait
dec
jp
xchg
lret
pop
fwait
js
adc
bound
pop
out
in
pop
lret
ja
sub
push
xchg
js
sbb
xchg
ja
rcrb
add
movsl
ret
push
test
xchg
dec
in
dec
sbb
in
adc
gs
push
and
add
in
sti
cmpsb
pushf
xchg
jge
xor
outsl
sti
testl
xchg
push
or
mov
in
loope
or
push
mov
fldl
out
cmc
sub
xor
insl
adc
out
cld
sub
scas
cltd
or
fdivs
stos
ljmp
cmp
into
iret
jl
pop
lea
dec
movsb
std
into
jno
mov
push
mov
enter
and
out
rclb
insb
fisttpl
jbe
mov
test
or
orb
xchg
dec
jno
sub
jecxz
orb
ljmp
lret
dec
sub
jge
daa
or
pop
add
cmpsl
push
jmp
mov
aaa
cmp
imul
test
or
push
dec
add
mov
and
cmc
mov
sub
push
pusha
in
aas
scas
dec
sahf
mulps
push
dec
sahf
popa
movsb
add
daa
cmpsl
pop
adc
push
dec
lea
div
jmp
sar
jb
dec
out
arpl
sbb
push
test
and
fucompp
mov
pop
das
xchg
inc
dec
mov
inc
xorb
ja
lock
mov
sti
adc
mov
sub
cs
mov
movntq
mov
clc
xchg
sub
or
imul
lret
ss
or
repnz
lods
push
dec
jbe
je
ficompl
xchg
pop
sub
push
lcall
inc
int3
xchg
push
xor
sub
sub
cmpsl
add
insl
push
xchg
ljmp
mov
fwait
shrl
dec
leave
and
xchg
icebp
push
pop
pop
jle
lods
mov
mov
in
pusha
fsts
jbe
mov
xor
mov
outsb
sbb
xchg
push
int
jb
sub
jg
sub
mov
sbb
imull
sub
jb
mov
add
mov
lcall
enter
fcmovb
filds
and
fmuls
cld
mov
cld
js
fcompl
xchg
push
fcoml
mov
xchg
cmp
pop
scas
call
mov
push
adcb
shrl
dec
mov
xor
xchg
xor
mov
fisttps
rcr
aas
xor
mov
add
inc
mov
push
adc
mov
pop
sub
mov
dec
stc
push
sub
mov
mov
in
lahf
call
shrb
daa
dec
cmp
outsb
testl
xchg
and
mov
cwtl
ret
mov
out
lret
jecxz
stos
mov
mov
insl
mov
mov
mov
aas
jp
sub
mov
adc
cwtl
push
lds
jg
mov
add
dec
jle
repnz
xchg
fstpl
addr16
std
test
cwtl
jge
or
sbb
add
gs
ret
rcll
imul
les
mov
push
adc
xor
enter
hlt
inc
jmp
andl
mov
cmpsb
mov
sub
enter
mov
adcl
mov
jo
out
mov
push
stos
pop
cmpsl
push
pop
ret
mov
push
sbb
add
mov
pop
and
sahf
push
mov
int
out
jae
mov
int3
leave
or
lcall
in
mov
inc
inc
and
sub
popa
mov
mov
bound
mov
imul
leave
lods
leave
fldt
roll
or
add
das
jne
cld
aad
push
in
cmp
add
xchg
mov
shlb
mov
xor
inc
or
pop
xchg
pop
inc
mov
lret
out
fs
iret
sbb
test
or
dec
cmp
xchg
inc
adcb
gs
inc
imul
cmp
int
mov
mov
test
pop
or
push
test
jo
test
out
pop
mov
fcomps
cmpsl
imul
or
sbb
mov
inc
adc
jge
inc
add
cs
adc
cmpl
sub
mov
jp
push
mov
in
loop
xor
popf
loope
leave
cmc
call
mov
aaa
xor
push
jns
iret
mov
adc
add
cmp
fcomps
imull
mov
mov
jnp
mull
sub
pop
flds
dec
dec
push
push
push
movsl
adc
lods
fiadds
inc
or
mov
jns
mov
pop
pop
out
push
sbb
xlat
mov
std
xchg
lret
cmp
adc
add
push
insb
push
mov
loope
push
mulw
pop
movsb
repz
scas
dec
addr16
and
mov
les
xor
out
mov
inc
jae
jl
into
pop
mov
ds
jl
or
icebp
test
out
aas
xor
mov
inc
mov
fwait
outsl
imul
xabort
push
fcmovb
push
lahf
in
dec
pop
je
adc
std
xor
push
dec
orl
aas
inc
orb
and
sbb
mov
push
daa
dec
out
lods
xlat
sub
mov
dec
test
pop
adcb
cmp
clc
aas
mov
sbb
inc
mov
cs
pushf
and
inc
hlt
dec
aad
xor
dec
adc
aad
pop
xchg
xchg
push
into
in
icebp
shr
nop
mov
stos
dec
adc
das
push
lods
roll
stc
jnp
outsb
adc
pusha
ds
push
add
lret
push
adc
cmpsl
cltd
and
lods
add
adc
pop
mov
int3
and
std
or
repz
fsubrl
inc
mov
fildll
cmc
sbb
aam
cmp
push
or
pushf
add
jg
xor
push
xor
nop
and
enter
mov
popa
jns
adc
pop
mov
mov
xchg
and
test
pop
push
insb
pop
scas
mov
jne
inc
mov
in
add
movl
loop
xchg
fwait
pop
lds
add
or
sub
push
ret
cmpsl
cmp
into
and
int
movsl
and
scas
iret
es
jge
jmp
inc
fcmove
dec
jae
mov
xchg
jle
pop
or
clc
in
mov
push
in
cmp
fiaddl
cli
jne,pt
fldl
dec
push
adc
in
lret
mov
add
jbe
pop
mov
push
cmp
adc
mov
in
and
sub
sub
lods
pop
out
pop
and
daa
push
dec
xchg
orl
jbe
flds
add
rcrb
lret
mov
adc
je
movsl
and
dec
mov
aas
es
pop
add
and
xchg
sbb
mov
push
xor
icebp
inc
adc
je
push
push
cli
sbb
push
fimuls
ret
cld
and
mov
jl
aas
shll
jp
jg
add
fwait
data16
or
lea
ror
mov
and
or
xchg
mov
in
rolb
xor
mov
push
inc
out
adc
movsb
rorb
mov
dec
jnp
xor
mov
pop
push
fcoms
mov
push
addb
mov
sub
push
test
mov
setp
adc
cmovne
push
xor
fdivrs
mov
ljmp
or
and
imul
popa
data16
lahf
sub
mov
jl
ret
lea
ja
mov
or
mov
sti
enter
loope
xchg
push
test
ja
cmc
hlt
in
hlt
adc
jb
push
hlt
mov
and
push
dec
ret
filds
mov
sbb
mov
and
mov
adc
cmp
popf
lahf
hlt
xchg
jb
fcmovnbe
or
dec
int
mov
dec
lods
add
cmp
cmp
push
ljmp
jg
imul
fdivl
push
push
and
xchg
push
std
pop
cmp
bound
test
int3
stos
mov
lret
mov
stos
clc
sti
fidivrl
lahf
loope
roll
jns
std
cmp
sahf
sbb
cld
popf
repz
ss
mov
sub
push
xchg
int
les
push
push
mov
popf
out
call
in
and
fs
test
mov
nop
aas
cltd
push
in
fucom
mov
lcall
call
out
outsb
mov
xor
pusha
xor
xchg
nop
pop
sub
cld
inc
fsubl
rcl
sbb
hlt
xchg
das
mov
pusha
insl
ret
nop
insb
sub
adc
ret
stc
fcoml
cmp
pop
xchg
add
adcb
sub
aaa
aaa
add
arpl
imul
cmp
rclb
addr16
jecxz
dec
popa
sarb
stos
push
andl
fsubrl
jno
inc
mov
iret
fiaddl
sub
push
scas
hlt
inc
pop
pop
mov
and
xor
dec
dec
in
mov
dec
mov
dec
cmp
inc
inc
xor
repz
mov
push
loopne
enter
dec
lods
mov
fdivrs
cmc
or
cmp
inc
ja
cmp
pop
movb
sbb
test
sub
cmp
push
inc
cmp
mov
push
sub
pop
jecxz
mov
mov
scas
int
jnp
sbb
mov
jbe
mov
out
jns
sub
sub
jmp
enter
aad
aas
fimull
mov
mov
add
les
push
dec
cmp
inc
mov
loopne
mov
inc
into
sbb
mov
pop
mov
pop
inc
mov
dec
mov
mov
xchg
lods
adc
stos
dec
fscale
loopne
sub
mov
aaa
nop
out
mov
dec
add
mov
inc
mov
jecxz
lock
lret
mov
jns
testl
das
fwait
jecxz
cmp
ret
pop
jg
xorb
pop
int3
insl
pop
lahf
mov
push
push
fisubs
jb
mov
fbld
sub
lods
cmc
adc
cs
and
es
or
push
adc
popa
nop
neg
mov
xchg
fwait
mov
outsb
shl
jbe
adc
or
mov
jbe
push
dec
lahf
push
lock
mov
xchg
cmpl
mov
stc
adc
sub
cmp
mov
mov
add
repz
or
cmp
pushf
mov
and
adc
mov
mov
hlt
xchg
push
aaa
sarl
xchg
jno
lcall
test
imul
jns
adc
lds
fldenv
cmpsl
push
mov
popa
cli
push
or
add
roll
nop
test
jae
ljmp
jl
lock
stos
mov
mov
sub
jp
sub
out
int3
cmp
push
out
pop
sbb
rorb
incb
das
out
push
stos
ss
fs
loop
pop
rclb
pusha
pop
leave
movsb
sub
or
popa
imul
mov
sub
adc
dec
push
outsb
subb
in
or
xor
lret
lds
sub
pop
inc
nop
cmpsb
dec
test
loope
cld
leave
jo
mov
xor
imul
or
inc
orl
in
sar
mov
aam
repz
subl
push
mov
scas
push
add
inc
mov
ljmp
xor
aas
cmp
cmovb
aad
mov
cmpsl
dec
sub
dec
shlb
push
orl
or
int3
lock
pop
pop
xchg
pop
and
out
mov
xor
cmp
cmp
xor
scas
lods
orl
repnz
or
cmpsl
mov
sub
pushf
pop
adcb
pop
shr
xlat
das
mov
imul
jnp
stos
dec
sub
movsl
repnz
inc
dec
jb
push
xor
cltd
dec
mov
jp
add
and
cmp
pop
fdivp
jb
add
cwtl
cmpsb
mov
nop
rclb
sub
dec
fldln2
in
int
mov
inc
sub
cmc
add
jg
imul
mov
rsqrtps
sbbb
pop
adc
pop
cld
mov
lds
neg
lret
mov
push
cmp
mov
mov
jp
aaa
mov
imul
cmc
inc
sub
adc
jae
dec
mov
movsl
sahf
mov
test
cmp
repnz
dec
xor
mov
push
das
inc
mov
pop
stos
push
sbb
mov
iret
fsubrl
sub
jns
sub
shrb
mov
xor
cmp
and
cld
mov
scas
xchg
popa
dec
and
dec
repz
insb
loopne
and
xor
push
jp
enter
sub
and
mov
and
int3
xchg
inc
cmpsl
pop
scas
test
or
jno
mov
popf
stc
xlat
pop
sub
jl
add
jle
call
sarl
ror
add
push
notl
inc
fldenv
test
insl
out
dec
xchg
imul
into
add
push
sub
sbb
pop
out
aad
cmp
loopne
int
lods
jns
push
mov
in
stos
out
aam
mov
or
fists
jo
mov
and
mov
aaa
cmpsl
push
jecxz
nop
test
dec
leave
adc
loop
or
repnz
outsl
popa
jae
ja
adc
int
push
es
in
scas
repz
cmp
pop
lods
test
imulb
std
ds
shll
and
sbb
mov
and
pop
test
fldt
pop
movsl
mov
xor
mov
imul
jo
xchg
lea
pop
dec
mov
enter
jp
push
iret
test
dec
pop
adc
fsub
call
jg
and
test
shll
lahf
add
pop
ss
mov
mov
pusha
jno
sbb
and
xor
bound
mov
rorl
cli
daa
adc
dec
lret
sbb
or
sbb
leave
sub
or
lret
adc
jge
mov
and
imul
aas
aas
jmp
lods
fwait
add
addr16
add
daa
push
or
inc
pop
or
cltd
dec
in
sub
jno
inc
cld
adc
and
fistpl
pop
shl
xchg
jb
dec
mov
and
outsl
push
sbb
repnz
adcb
xlat
sbb
ror
sti
dec
or
out
les
and
pop
push
mov
add
stos
xchg
imul
call
xor
adc
popf
push
popa
sub
outsb
mov
into
clc
ds
pop
mov
mov
push
sbb
sbb
mov
ljmp
es
ljmp
es
hlt
and
sub
mov
sub
je
subl
in
ret
aas
cmp
jg
push
sbb
repz
xchg
sub
lret
jo
mov
inc
daa
mov
ficomps
imul
ds
xor
out
movsb
cmpsb
fwait
xchg
cld
sbb
outsl
adc
adc
cmp
pop
cs
ss
adc
dec
adc
mov
push
ss
outsl
cmp
lret
sub
pop
negb
xor
push
loopne
jno
mov
aas
mov
loopne
popf
pop
push
cmp
mov
rcrb
stc
mov
push
fcmovnb
movups
mov
inc
mov
outsl
mulb
mov
inc
sbb
lods
jmp
xchg
clc
fs
mov
mov
mov
pop
fstpt
add
xchg
adc
dec
in
ret
adc
stos
sbb
clc
mov
push
cs
enter
dec
jmp
cmp
pop
hlt
cmpsl
xor
fs
adc
jmp
shll
aaa
call
jp
xor
xchg
int3
mov
push
faddp
or
or
out
and
push
sub
test
popf
lret
and
out
jecxz
pop
into
sarb
xor
lock
inc
sahf
leave
sti
mov
pop
mov
cs
mov
cmp
ror
sarl
test
fiaddl
addr16
dec
nop
out
xlat
mov
mov
and
fsubl
add
jp
adc
pop
lahf
sub
and
lret
sarl
add
mov
fcoms
mov
fiadds
out
lahf
aam
or
lods
mov
rclb
jecxz
insb
sbbb
call
lret
stos
daa
popa
and
inc
adc
jae
shrb
mov
xlat
cmc
pop
jo
jle
fists
cmp
pusha
dec
push
mov
roll
fwait
or
fimull
push
ret
inc
push
fcoms
ja
imul
inc
jp
inc
loope
rcrl
mov
mov
mov
insb
dec
ret
cltd
sbb
rolb
pop
in
cmc
lret
xlat
cld
push
ret
outsb
cmp
ds
and
jecxz
cwtl
shl
xchg
leave
lret
push
pop
adc
dec
adc
fistps
lea
lock
shr
inc
sub
inc
outsb
dec
lds
xor
or
xlat
pop
ucomiss
fidivl
push
inc
dec
lea
cmp
pop
negb
lret
fdivl
mov
das
pop
inc
xor
push
jge
jns
sar
jno
cmpsb
push
push
fnsetpm(287
shll
std
add
jle
push
aam
pop
pop
or
xor
pop
push
cmc
xchg
cmp
aad
aad
hlt
cmp
movsl
push
sar
mov
pop
cmp
xchg
or
jle
adc
xor
repz
test
add
push
jp
inc
sbbb
popf
lret
mov
sub
jg
arpl
movsb
sbb
sahf
jge
pop
mov
dec
mov
or
dec
decl
std
mov
xchg
insl
out
adc
scas
pop
scas
cltd
cld
iret
jbe
loopne
jl
inc
adc
mov
movsb
pop
sarl
add
in
jae
nop
adc
insb
push
imul
xchg
lds
sbb
scas
ja
dec
cmp
sub
jo
aad
pop
cmp
testb
repnz
sbb
xchg
aas
test
push
mov
ret
mov
fcoms
mov
xchg
xchg
inc
dec
xorl
ret
adc
outsb
pop
sbb
insl
add
jno
cmp
sti
stc
out
inc
inc
out
mov
int3
imul
bound
xor
xchg
fnstcw
mov
imul
outsb
movsl
mov
cmc
cmpsb
stos
pop
subl
dec
test
pop
aad
pop
scas
sbb
fsubr
jno
mov
test
mov
ret
lods
pushf
add
daa
and
push
ret
loopne
shl
pop
mov
mov
dec
aam
cmp
jbe
xchg
push
sub
aam
shlb
es
sar
popa
adc
push
cmpsb
in
cmc
cmc
xor
movsl
std
push
iret
push
mov
xor
mov
ja
shrl
dec
jge
lods
imul
movl
sub
gs
addb
pop
xchg
test
int3
ret
imull
dec
rolb
popa
cs
xor
and
jmp
in
or
push
sbbl
rorl
pop
adc
xchg
adcl
mov
cmp
mov
xor
jb
jmp
addl
leave
mov
insb
mov
outsb
xchg
jae
test
insb
dec
aam
cmp
adc
mov
xchg
ljmp
sahf
add
into
lock
adc
add
add
sub
test
pop
inc
flds
fcmovnb
stos
cmc
jno
popf
jp
stos
adc
sbb
mov
cli
push
xchg
adc
inc
aad
bound
cltd
sbb
ret
xlat
repz
jmp
fstpl
xchg
into
inc
jo
xor
mov
js
push
jae
pop
inc
push
mov
fcmovb
loope
pop
push
in
div
jne
xor
andb
pop
jg
data16
cli
xchg
pop
cli
mov
nop
jmp
std
mov
popa
jle
push
fstpl
ljmp
and
jecxz
xor
ljmp
jg
add
ja
pop
and
cltd
loop
push
push
and
sti
cltd
arpl
cmc
loop
mov
decb
jle
fnstsw
cmp
in
int3
mov
sub
fdivp
pop
rorb
fbld
xchg
sbb
and
add
stos
cmp
inc
cmpl
jge
pushf
push
jge
pop
xchg
sbb
add
leave
jno
or
jmp
cmp
and
adc
cmp
mov
arpl
mov
jle
ja
pop
sbb
or
js
cmpb
in
outsl
test
jg
idivl
and
test
je
sbb
shrl
loopne
je
push
sbb
or
push
cltd
or
inc
pop
pop
outsb
movsb
das
push
jmp
mov
addr16
rolb
aas
insb
out
pop
icebp
fiaddl
insl
or
sbb
fucom
xchg
dec
push
pop
imul
sub
push
mov
jecxz
idivb
sbb
out
lock
inc
ret
decb
fnsave
cltd
repz
mov
arpl
adc
jp
icebp
ljmp
mov
jb
xchg
push
jp
dec
jecxz
sub
xor
xchg
xor
mov
sbb
push
icebp
xlat
jns
add
ljmp
mov
inc
jae
mov
adcb
push
stos
push
adc
ja
imul
in
add
movsb
sub
add
scas
mov
js
daa
push
xchg
push
inc
or
and
arpl
mov
imul
sub
out
divb
xor
or
insb
js
lods
mov
xor
adc
cmp
shl
out
mov
inc
rcr
pop
add
dec
pop
dec
sbb
dec
das
in
rcrl
dec
mov
fnstenv
adcl
fmull
clc
dec
dec
loop
add
adcb
or
mov
push
pop
pushf
inc
lret
add
out
lahf
ljmp
outsl
sar
push
xor
movsl
push
iret
fisttpll
repnz
adc
repz
incb
fldcw
in
push
jl
jnp
sbb
inc
popf
or
cmpb
movsb
or
daa
add
sub
jmp
ss
push
loop
popf
xor
cmpb
and
fnstcw
add
jbe
jnp
shl
hlt
dec
loopne
sbb
fiadds
ret
xor
movsl
stos
adc
loopne
insb
xor
inc
pop
aam
icebp
imul
inc
aaa
xchg
ret
jge
pop
dec
dec
cs
sbb
call
iret
xchg
cmpsl
enter
test
xor
sbb
xor
xchg
sti
jge
push
pop
shll
or
sub
jmp
push
dec
stc
cs
fnstenv
leave
cmpsl
ficoml
mov
enter
xchg
out
xchg
subb
loope
mov
loop
leave
addr16
inc
xlat
push
adc
mov
cmp
xchg
xor
and
fldl
scas
dec
addb
jo,pn
pop
ror
xor
inc
fiaddl
fstsw
jns
lock
ds
pop
xchg
mov
leave
int3
inc
xor
mov
xchg
add
dec
std
jnp
pop
jns
mov
cli
xchg
out
aaa
flds
xchg
mov
sub
js
stos
ja
or
sub
add
cwtl
and
jmp
mov
fimull
mov
cmp
cmp
sbbb
sub
aam
add
pusha
roll
mov
in
subb
notl
std
les
inc
je
sub
dec
dec
arpl
rcr
sbb
mov
cmpsb
cmp
cwtl
ret
clc
out
out
enter
movsl
negl
add
lods
sbb
iret
push
les
sarl
inc
leave
imul
add
aas
data16
lods
xchg
inc
pop
negb
pop
cltd
int
ds
jns
fistl
lahf
add
cld
pushf
jmp
das
hlt
lret
in
and
outsb
inc
jp
add
movsb
cmpb
int
cmp
lods
add
sbb
xchg
sahf
das
lahf
lahf
pop
fbstp
orl
jl
and
cwtl
pop
data16
fcomp
mov
xchg
imul
pop
pop
fldl
jae
mov
rorl
push
sub
lahf
and
sub
mov
mov
jne
ret
push
add
pop
das
jne
scas
adc
xlat
jecxz
adc
sub
mov
lcall
adc
pop
shll
aaa
loop
lahf
add
or
push
mov
clc
popl
xor
cmp
jmp
add
xor
test
jne
divb
push
sbb
and
push
dec
xchg
and
rcll
in
in
push
jl
aam
dec
in
aad
jmp
stos
dec
mov
fmul
ljmp
arpl
mov
dec
or
insl
or
inc
mov
sahf
in
pop
lret
cmp
pop
hlt
adc
enter
jmp
das
pop
mov
sub
pop
nop
out
lods
jg
mov
inc
in
push
test
xchg
sahf
and
stos
je
and
lds
pop
bound
xor
pop
adc
jbe
sub
or
negb
fildll
lock
pusha
xchg
push
jb
pushf
sbb
xchg
testl
test
shrb
ds
and
pop
push
dec
adcb
xor
in
inc
lret
fs
adc
in
stc
xor
inc
mov
mov
pop
ja
adc
and
xlat
in
outsb
rorl
pop
and
sbb
lcall
or
adc
xor
sahf
je
push
fcompl
fldcw
and
sub
push
dec
inc
add
mov
pop
xchg
adc
inc
iret
adc
xchg
dec
int
orb
push
sbb
mov
mov
add
pop
mov
pop
mov
pop
shll
fs
xchg
push
clc
adc
pop
icebp
jno
call
jge
jge
mov
adc
inc
sahf
clc
sub
mov
push
jg
aam
lret
leave
inc
adc
xor
cmpsb
pop
movsb
and
mov
incb
popf
pushf
push
mov
pop
xchg
test
or
sbb
cld
mov
mov
dec
mov
push
in
sub
lahf
mov
hlt
out
rolb
mov
test
sub
fimuls
test
cmp
sub
mov
and
adc
mov
cli
push
and
movsl
repnz
adc
cmpsb
pop
data16
in
es
pop
ss
xchg
outsl
or
jns
mov
and
mov
fucom
out
je
daa
sub
jmp
lods
mov
dec
out
mov
sti
rorb
pusha
cmc
inc
jmp
adcl
jae
adc
ljmp
repnz
scas
cs
cmp
aam
mov
adc
fsubl
xchg
cmc
ja
lcall
loop
daa
rcl
sbb
inc
pop
outsl
push
mov
data16
insl
imul
pop
imul
lock
sbbl
fbstp
fsubrs
push
xchg
and
and
and
cmp
inc
jle
fists
inc
push
or
sub
arpl
add
loopne
push
jg
sbb
sbb
xlat
pop
jmp
scas
clc
xor
out
jg
push
pop
adc
out
xrelease
pop
pop
arpl
and
shrl
push
push
pusha
jo
xchg
xor
fadds
shrb
adc
mov
gs
or
lock
enter
sarb
clc
sbb
or
lret
cmp
push
stos
inc
jbe
in
push
in
mov
adcl
cld
adc
ret
sahf
test
push
xor
or
sub
and
xchg
insl
insl
inc
sub
lock
pop
inc
push
popf
add
orl
sub
xor
xor
mov
inc
shrl
pop
imul
mov
outsl
xchg
lea
dec
inc
ljmp
adc
int3
xchg
pop
ret
jb
adc
xchg
xor
mov
shll
scas
xor
lret
or
sub
aam
mov
shll
xchg
cmp
int
fistpll
add
jmp
dec
and
jp
fwait
pop
nop
enter
sub
xor
xchg
adc
add
addr16
and
mov
dec
cmp
stc
mov
shr
stos
lcall
dec
test
addb
adc
mov
mov
sub
mov
inc
mov
mov
lds
pop
sub
push
push
fwait
fwait
std
add
rcrb
and
push
inc
ficoms
add
pop
ja
jbe
push
shrb
sbb
mov
into
andl
mov
jb
inc
cli
cltd
stc
cmp
mov
cmpsb
lea
gs
xchg
mov
gs
xchg
ljmp
pop
sub
icebp
shll
inc
mov
dec
push
mov
adc
scas
jg
in
sbb
push
xchg
dec
test
dec
mov
repz
xchg
mov
adcb
testl
repz
nop
and
jmp
mov
sbb
pop
cli
rcrb
sbb
xchg
or
fcomps
cmp
mov
imul
cltd
mov
daa
sti
add
cmp
ljmp
into
addr16
mov
mov
aaa
shll
hlt
imul
cmp
sub
mov
inc
jmp
sysret
sbb
loopne
mov
and
loopne
lahf
int
int3
jb
dec
idivb
pusha
mov
jno
sarl
test
push
clc
test
or
pop
and
adc
jno
sqrtps
fsubl
xchg
mov
xor
xchg
mov
pop
or
int3
mov
addr16
loop
mov
cmp
xchg
ret
or
jge
stc
dec
mov
or
inc
je
mov
imul
mov
hlt
jns
dec
push
scas
sub
sub
outsl
lcall
push
out
or
sarb
scas
outsb
fstpt
mov
push
mov
add
pop
lahf
js
cwtl
lret
popf
sbbb
lcall
pxor
sbb
inc
orl
add
jge
call
pop
ret
lcall
add
sbb
push
movsl
scas
clc
jmp
or
adc
pop
push
aaa
mov
jg,pt
incl
xchg
lcall
push
xchg
add
lock
pop
aad
sbbb
test
nop
add
shufps
pop
ss
jg
mov
inc
sahf
mov
jnp
mov
decb
or
xor
mov
xor
cld
ds
aaa
xchg
adc
fstpl
sub
adc
rcrb
mov
cmp
jne
mov
cli
repz
mov
inc
lret
xor
adc
mov
loopne
jle
pop
arpl
lret
scas
es
inc
cli
dec
dec
xchg
mov
test
fsubrs
jl
sahf
addr16
decl
fdivrs
pushf
test
outsb
shlb
aam
adc
pop
pop
mov
daa
cmpsb
lcall
add
loopne
xchg
subb
lret
jecxz
pop
loope
iret
stc
inc
int3
jle
hlt
addr16
sbb
fldcw
add
dec
jae
lds
mov
xor
call
jno
sub
mov
pop
fbstp
aam
ss
gs
xchg
mov
repnz
mov
testl
daa
jmp
xchg
sub
mov
out
inc
add
inc
aad
fwait
mov
xchg
push
push
cmpsb
stos
or
cmp
out
mov
addr16
sahf
test
cli
cmp
test
aaa
push
pop
cmpsl
lret
cmpsb
fisttpl
mov
sub
push
imul
add
dec
orb
lock
imul
add
mov
loopne
inc
pop
sbb
add
clc
xor
into
out
xor
rcrl
lods
mov
jecxz
int3
jmp
pop
push
xchg
cmpsl
pusha
adc
andb
mov
adc
inc
xor
lcall
loope
add
pop
and
sbb
bound
cltd
movsl
mov
xchg
fs
nop
push
push
movsb
movsl
dec
aas
jmp
push
aad
leave
int
sar
pop
shl
into
jae,pt
shlb
cli
fdivl
cmpsl
sti
jge
repz
and
ss
push
call
push
jne
sbb
push
outsb
sar
imul
in
orb
leave
xor
imul
or
in
cmpsl
dec
lret
xor
mov
push
xchg
jp
cwtl
outsb
into
call
inc
arpl
push
and
out
xlat
popa
cmp
dec
sahf
pop
sahf
pop
mov
mov
sub
test
cmp
movsb
fldt
mov
mov
call
leave
xor
mov
jbe
inc
loop
cltd
xchg
loop
or
jle
add
mov
sarb
nop
dec
pop
into
push
push
sti
sbb
call
cmp
es
push
clc
adc
xchg
cli
xor
movsb
cmp
adc
xor
out
cltd
outsb
cmc
in
cmp
mov
xorl
push
mov
roll
ret
push
leave
dec
dec
movsb
add
fidivrl
add
add
fwait
add
jle
je
mov
cmpsl
adc
dec
out
sbb
pop
call
cmp
mov
lock
mov
divb
xor
outsb
xor
or
addr16
jmp
pop
sbb
push
adc
mov
pop
fisttps
stos
ficompl
xor
jbe
push
shl
loope
shrb
insl
loop
in
jae
adc
jp
adc
outsl
mov
sub
inc
xor
sub
xor
in
hlt
out
mov
in
call
xor
sbb
dec
dec
cmp
xchg
and
mov
pop
pushl
iret
inc
cmpsb
out
xchg
ror
mov
cltd
xor
adc
insb
push
fs
aaa
rolb
mov
or
imul
xor
fs
jo
inc
adc
inc
and
jg
mov
pop
jmp
xor
adc
mov
xor
scas
in
add
jmp
adc
mov
in
movsb
ret
popf
in
out
fstpl
push
outsb
xchg
xor
xchg
sbb
ljmp
ret
repz
push
pop
stos
add
push
mov
es
aas
nop
aas
push
mov
sbb
std
clc
shlb
dec
out
mov
sbb
scas
mov
add
std
andl
lret
inc
test
roll
xor
cli
sbb
scas
xor
dec
sarl
fcmovbe
adc
and
dec
cmp
faddp
mov
jo
jae
les
push
scas
jle
pop
ljmp
jae
cmp
test
mov
jp
dec
jp
pop
cmp
jge
pop
xor
push
xlat
adc
clc
int
cs
hlt
jg
loope
aas
fsubl
addr16
mov
mov
add
jge
mov
ss
cmp
mov
push
mov
gs
push
jns
into
inc
out
fdivl
xor
int3
dec
jae
adc
adc
fidivs
inc
inc
shll
out
jo,pn
decl
pusha
xor
js
aad
pusha
mov
rcll
sbb
divl
add
and
ret
fwait
xor
inc
jne
sbb
xchg
sbb
push
bound
push
shlb
cld
pop
adc
sbb
pop
mov
dec
lret
leave
jge
dec
adc
cwtl
mov
les
test
aaa
dec
cltd
insb
sub
nop
bound
loopne,pt
jbe
jnp
dec
es
mov
lods
shll
scas
pusha
test
add
cld
fsubl
cmp
dec
out
xchg
je
cmpb
out
lret
mov
push
mov
sub
loope
dec
mov
fiadds
icebp
and
cmp
xchg
orb
daa
mov
enter
clc
sub
scas
ret
fnsave
or
sbb
mov
fiadds
add
add
dec
cmp
lea
sbb
and
xchg
push
or
mov
pop
xlat
or
call
and
icebp
ja
lret
cmpsb
cltd
xor
or
loope
inc
or
jl
add
pop
mov
push
pushf
out
mov
jns
cltd
pop
std
jp
push
and
xor
cli
inc
div
cmp
mov
pop
setb
mov
adc
in
push
std
mov
inc
push
mov
scas
nop
xor
cs
movsl
addr16
test
sbb
or
mov
adc
mul
lahf
lret
jnp
imul
arpl
enter
pop
mov
std
mov
add
pop
mov
les
xor
pop
popa
mov
mov
ja
xor
js
jecxz
cmp
mov
jne
out
sbb
in
das
mov
xor
lds
sub
mov
sub
adc
xchg
inc
sbb
ss
addl
lds
outsl
jns
mov
cmpsl
lea
inc
shlb
movb
clc
sub
out
sbb
gs
sub
ss
jmp
pushf
jae
imul
imul
hlt
out
inc
movsb
and
std
inc
leave
js
cli
jb
sub
mov
orl
stos
aaa
repnz
lahf
cmp
imul
out
lret
leave
pusha
cmc
cmp
sbb
jle
jne
dec
insb
inc
in
xchg
idivl
sahf
pusha
xorb
aas
in
jne
ror
int3
lods
cmp
clc
in
mov
inc
cmp
mov
inc
sbb
shr
fcompl
loop
sub
or
xchg
fnstsw
out
push
or
ret
icebp
clc
or
push
filds
jbe
cld
sub
cld
gs
sub
dec
fstps
outsl
mov
int
or
ss
adc
dec
mov
and
popa
and
sti
ficoml
dec
and
jns
sbb
stos
push
nop
and
mov
les
mov
mov
mov
cld
loop
iret
jecxz
jb
lret
jg
subl
js
outsb
xchg
repz
mov
xchg
ret
push
or
imul
jecxz
xchg
mov
adc
jmp
mov
xchg
ds
sub
cmpsb
mov
mov
pop
mov
arpl
inc
xor
cmc
or
or
scas
lret
xchg
negb
lret
mov
pop
cld
mov
arpl
pop
add
loope
in
imul
test
push
push
das
addr16
or
jecxz
cmpsl
add
push
stos
or
call
sbb
mov
lret
inc
cmp
adc
ds
sahf
incb
rep
ljmp
inc
loop
cs
je
mov
sbb
ljmp
push
push
xor
dec
pop
ret
leave
fcom
sub
mov
mov
adc
loopne
fidivs
sub
mov
shlb
cmp
int3
or
mov
sbb
arpl
pusha
mov
outsb
mov
dec
lcall
pop
xor
and
imull
jns
sti
call
sbb
imul
sub
fcmovnb
bswap
stos
inc
xchg
icebp
xchg
mov
cmpsl
mov
jne
sub
inc
xor
and
in
cltd
repnz
rolb
data16
push
jg
es
nop
mov
lds
mov
inc
insl
inc
jecxz
popa
fimull
fs
loopne
orb
xor
push
jb
je
mov
mov
dec
outsl
bound
pop
dec
cmc
ret
ret
xor
or
fisttpll
pusha
push
aaa
inc
pushf
sbb
iret
adc
xchg
lret
push
mov
int3
pop
xchg
les
sbb
add
push
dec
mov
in
das
cwtl
lret
gs
ja
negl
out
push
ret
sahf
addr16
aam
jmp
xchg
sti
popa
pop
adc
pop
in
mov
xor
mov
fcmovb
xchg
dec
inc
sarl
cmp
or
fsubp
ljmp
idivl
jmp
xchg
jge
mov
test
aad
mov
loop
movsb
lods
lods
mov
sbbb
out
das
cmp
adc
xchg
out
lret
xlat
and
aad
pop
ret
and
mov
mov
sub
xchg
addl
ret
or
adc
push
pop
lahf
jbe
daa
mov
loopne
xchg
mov
xor
and
aas
pusha
pop
mov
dec
shlb
sub
insl
inc
pushf
out
jmp
push
and
add
mov
jns
and
sbb
aaa
sbb
xchg
xchg
arpl
popa
cld
loope
in
addr16
rcr
fldenv
sub
push
loope
xchg
popf
stc
pop
sbb
cmp
test
ret
xchg
test
lock
das
in
incb
out
push
rcr
or
mov
xlat
mov
ret
lret
mov
or
cld
ds
icebp
clc
or
lea
js
leave
loop
inc
jo
adc
mov
xor
pop
sub
adc
inc
and
fimull
sbbl
imul
dec
mov
scas
dec
cmp
mov
xchg
cwtl
pop
pop
mov
cmpsb
notl
ret
mov
loop
mov
and
adc
jnp
and
pop
xlat
pop
pop
fcmovnu
jl
inc
stc
jbe
scas
sbb
add
add
and
shrb
dec
loopne
call
sub
cltd
cmp
movsl
and
out
dec
inc
fcoml
sbb
out
sub
leave
leave
or
out
inc
int
cmc
jl
pop
mov
sub
fwait
push
cmp
xchg
and
pop
push
icebp
push
loop
add
les
mov
loop
lcall
mov
mov
mov
fnclex
cmp
popf
mov
mov
ds
or
sti
or
fidivrs
dec
ss
sbb
inc
xchg
scas
mov
movsl
xchg
jmp
fsubrs
mov
daa
add
dec
jb
and
lahf
pop
inc
xchg
out
data16
mov
cli
push
hlt
jg
aaa
jl
daa
xchg
aaa
xchg
andb
xchg
dec
jle
sub
lret
or
jb
xchg
xchg
jb
enter
pop
push
mull
mov
sub
aas
notl
pop
lods
pushf
adc
pop
test
cmp
sbbb
test
xchg
pushf
jmp
cmp
test
and
push
sub
rcrl
jbe
stos
aas
mov
loop
arpl
and
jmp
lcall
inc
mov
insb
icebp
xor
xchg
xchg
mov
push
sub
pop
repz
add
cmp
iret
mov
nop
inc
push
pop
popa
or
outsl
jns
adc
addl
dec
test
daa
outsl
pop
int3
or
in
std
jnp
shlb
sbb
push
fmull
clc
sub
fsubrp
repnz
pop
add
inc
jbe
sbb
ds
jg
mov
jp
rcl
or
cwtl
cmp
lcall
mov
lahf
xchg
mov
mov
mov
mov
lret
pop
push
sti
cmp
push
cmp
cld
add
mov
insl
jecxz
in
movsl
xor
movsl
xchg
ss
loop
push
sbb
jecxz
add
dec
ljmp
fisttpll
xchg
out
pop
out
dec
je
sub
in
mov
fcomp
mov
iret
mov
ja
adcl
sbb
sbb
out
pop
lahf
js
pop
mov
xchg
addb
movsb
fmull
fstl
or
sub
enter
lea
outsb
mov
pop
mov
loope
inc
leave
pop
bound
dec
insb
pop
jge
repnz
aas
push
into
or
out
mov
fs
xor
insl
popf
aas
xchg
dec
mov
outsl
out
shr
nop
mulb
psraw
jno
test
add
cld
push
and
mov
sbb
xchg
hlt
jle
cwtl
cmc
fildl
add
mov
sub
pop
outsl
xchg
xlat
pop
add
insl
shrl
loopne
add
push
mov
nop
sbb
and
aad
sub
adc
sarl
inc
push
pop
rolb
xor
mov
aaa
test
mov
out
cs
popf
add
jno
push
or
adc
addr16
pop
push
sub
pop
sub
xchg
scas
mov
or
popf
cmp
push
dec
add
test
mov
in
jmp
jae
or
in
outsl
pushf
cwtl
imul
gs
xor
popa
mov
into
push
iret
cmp
dec
xor
xchg
insb
and
pop
das
clc
xchg
push
lock
shrb
lods
loopne
insb
test
cs
fimull
ret
adc
mov
imul
pop
xchg
lock
jno
push
jae
push
mov
aaa
orl
mov
fistpl
xchg
adc
dec
mov
add
std
lret
dec
or
andl
sahf
stos
xor
jge
jecxz
xor
inc
jge
mov
jns
sbb
in
pop
push
ss
stos
lock
sbb
fwait
ret
xchg
pushf
jae
xor
mov
icebp
and
aas
sbb
jne
daa
iret
sbb
stc
xchg
cli
movsb
sbb
outsb
xor
mov
neg
jle
mov
in
mov
push
in
lcall
idiv
mov
pusha
xchg
inc
les
stos
fbstp
aas
popf
jge
lret
ljmp
leave
sbb
pop
xor
cmp
inc
arpl
sti
mov
dec
xchg
ret
cmp
push
imul
dec
sub
test
mov
lds
movsb
popf
push
sbb
rclb
and
adc
loopne
les
xchg
ficomps
pop
dec
jge
sbb
xchg
adc
imul
mov
xchg
lahf
enter
push
enter
sbb
mov
mov
test
addr16
xor
dec
mov
data16
add
cmpsb
aam
inc
mov
es
mov
ficoml
js
or
loope
xlat
pusha
stc
jo
sbb
mov
sbb
adc
scas
sbb
stc
lock
cwtl
jbe
mov
dec
push
test
pop
xchg
dec
or
mov
loope
xor
mov
popa
mov
lods
pop
xchg
sbb
mov
ficoml
mov
mov
iret
xchg
les
or
hlt
addr16
lret
roll
xor
pop
rorb
mov
jl
add
rcll
mov
jl
loope
out
stc
aad
in
leave
stc
icebp
shrb
orl
xor
pop
inc
sbbl
repnz
sahf
shll
pop
push
daa
or
lds
cmpsl
popf
sub
dec
aas
shrl
bound
pslld
sbb
in
adc
test
cld
add
out
push
sub
dec
test
sti
mov
pop
sbb
fsubrs
scas
or
rol
and
cld
inc
inc
xor
jl
mov
mov
pop
arpl
movsl
mov
movsb
xlat
mov
filds
dec
incl
test
mov
jo
adc
add
or
fistpll
mull
mov
push
lock
cli
sub
divl
fdivl
mov
adc
into
push
mov
out
jmp
lret
je
iret
and
arpl
dec
pop
cmp
cmp
repnz
dec
mov
inc
jo
cltd
xchg
rorb
sbb
fmul
aad
cli
test
jmp
push
and
xchg
in
dec
mov
out
mov
mov
sub
les
fldt
push
mov
das
fcomp
shlb
mov
ja
dec
fsubrs
cld
jno
ret
dec
and
jb
push
mov
insb
inc
hlt
fstpt
pop
jl
or
cwtl
in
das
jecxz
mov
push
outsl
pop
in
xchg
push
jg
xor
js
test
outsb
ljmp
out
movsl
mov
add
fsubrs
jmp
xor
iret
and
lea
mov
xor
push
pop
adc
dec
fbld
sub
decb
pop
inc
icebp
xchg
js
loope
cmp
das
mov
xor
in
push
pop
jg
xchg
sub
adc
and
aas
pop
mov
push
push
inc
cmp
sub
mov
sbb
and
jnp
lcall
rol
inc
mov
jbe
fcmovu
ss
push
lret
nop
pop
rsm
movsb
leave
cmp
mov
rolb
data16
push
xor
jecxz
loope
inc
fdivr
mov
rorl
scas
xor
or
sbb
sbb
mov
dec
ss
push
push
repnz
ljmp
mov
lret
filds
and
insb
push
inc
xchg
push
inc
leave
xchg
mov
fwait
out
mov
push
xchg
pop
shlb
subb
cmp
push
push
sub
add
mul
xchg
outsb
test
mov
cmp
iret
jl
ds
cs
imul
cs
andb
sti
jb
fstpl
mov
xchg
jmp
pop
jbe
mov
out
xor
mov
mov
pop
push
dec
fwait
sbb
shl
cs
pusha
insb
adc
push
enter
mov
out
idivl
js
xchg
mov
lock
cmp
shll
jge
or
insb
mov
cli
pop
imul
fcom
cld
inc
adcb
fisubl
rclb
mov
inc
jae
mov
sub
std
jle
rolb
ret
lahf
pop
sbb
mov
push
lods
push
movl
add
rol
subb
sbb
xor
xor
enter
mov
das
push
push
test
js
aas
push
jecxz
inc
mov
mov
dec
int
mov
negl
call
loopne
cmpsl
push
inc
pop
data16
push
jge
sarb
pop
xor
mov
push
pushl
xchg
or
lea
sti
bnd
add
int
fiadds
ror
jb
popa
hlt
pop
mov
cmp
test
aaa
push
addl
loop
xchg
lcall
xchg
sub
scas
mov
jno
jge
pop
sbb
and
jnp
adc
xor
pop
fidivs
inc
popa
nop
jp
iret
hlt
sbb
dec
xor
rcll
cwtl
sbb
xchg
nop
jbe,pt
adc
dec
enter
inc
push
iret
sbb
mov
jge
jne
cltd
and
mov
dec
clc
inc
jmp
xchg
pop
out
hlt
and
sbb
fmull
aas
pop
cmp
jmp
iret
adc
jge
in
gs
icebp
pusha
cmp
xchg
sbbl
xchg
mov
dec
movsl
mov
mov
call
pushf
sahf
jp
out
mov
dec
lcall
adc
jae
sbbb
frstor
scas
xor
mov
cltd
clc
adc
outsl
lret
test
jnp
insl
mov
push
jmp
aas
xor
iret
jge
jecxz
lret
inc
mov
or
lea
jg
aam
xchg
jl
push
jle
cmc
push
add
cwtl
mov
sub
das
sbb
jmp
pop
push
add
pop
jecxz
repnz
out
mov
imul
outsl
xor
movsb
sbb
push
roll
jecxz
xor
lds
push
inc
mov
jp
in
ret
iret
mov
shlb
test
fdiv
ret
cmp
in
popa
jbe
mov
add
adc
and
push
sahf
lock
and
pop
xor
sahf
test
not
out
shll
mov
adc
cltd
js
ret
stos
lds
push
jne
popf
push
lods
jl
xor
and
dec
mov
aad
sti
push
xor
lret
outsl
or
mov
fincstp
out
sbb
mov
lods
cmp
movsl
jae
xchg
sub
cld
aam
mov
daa
and
mov
mov
push
xlat
mov
fnstcw
lahf
scas
arpl
or
sbbb
jo
jbe
mov
mull
movsb
leave
adc
int3
mov
and
aam
dec
xchg
shlb
into
into
mov
sub
inc
pop
lret
sub
xor
or
pusha
lret
mov
leave
test
xor
cmp
aas
push
mov
mov
ss
or
sub
jp
xchg
jae
push
iret
cmpsl
adc
xchg
sub
pop
jo
cmp
gs
jl
arpl
imul
or
or
pop
sub
movb
mov
lock
js
push
lods
js
mov
lahf
sub
push
push
mov
lcall
mov
pushf
pop
pop
je
push
lret
lret
leave
ss
push
mov
jmp
loope
adc
xchg
enter
mov
pop
and
pop
imul
mov
lods
jecxz
xor
mov
stc
cmc
jae
cld
lods
movsb
cmc
jp
jecxz
mov
mov
jb
lds
testl
inc
push
add
jno
andl
ds
cmp
hlt
ljmp
pop
dec
inc
dec
sub
push
dec
pushf
jmp
or
notb
mul
das
daa
mov
push
add
pop
call
cli
mov
lods
and
pop
adc
jmp
jecxz
imul
mov
sub
add
and
cmp
xor
lahf
mov
cltd
or
mov
lret
orb
dec
ljmp
lret
xchg
cmpb
jno
in
xlat
jae
xchg
and
cmpsb
jecxz
push
adc
lods
adc
jge
lods
push
adc
cli
pop
movsl
enter
sar
mov
ja
rolb
push
sub
lock
outsl
ret
cmp
sahf
dec
test
in
cli
inc
sbb
jp
popa
and
outsb
outsl
aaa
cmp
fisttpl
push
out
sub
jmp
inc
icebp
xorl
inc
cld
mov
cli
inc
sub
jle
fsubrl
sbb
and
outsb
shrb
fisubrs
mov
scas
insl
sbb
dec
mov
xorb
sbb
or
ret
jmp
imul
adc
pop
das
xchg
and
pop
ret
addr16
xchg
push
ljmp
aas
xor
test
xor
dec
jecxz
inc
gs
in
aam
lock
adc
dec
cmp
add
rolb
daa
push
sbb
push
add
jbe
pop
fmul
push
dec
shr
faddl
cwtl
testb
stos
xchg
arpl
mov
insb
lods
das
popf
adc
lahf
outsl
jbe
aaa
inc
sub
xchg
stos
cli
xchg
scas
dec
push
jmp
xor
pop
ljmp
adc
cmc
cmp
xor
bound
inc
mov
fs
pushf
loop
popa
scas
aad
enter
movsl
push
adc
pop
leave
pop
xchg
mov
and
dec
push
movsb
jle
xor
sub
and
clc
fstps
adc
xor
xlat
xor
and
xor
mov
ljmp
test
adc
fucomip
test
dec
adc
and
sbb
cmp
sbb
loope
aas
mov
nop
or
fs
push
push
stos
cwtl
xor
and
mov
push
les
sub
rclb
arpl
stc
sub
out
mov
in
mov
nop
jg
mov
cmpl
jnp
jbe
xchg
dec
mov
or
out
add
movsb
sub
inc
mov
xchg
push
jle
cmp
lahf
xchg
cld
les
addr16
cmp
push
aam
add
in
ds
out
iret
adc
int
dec
pop
lcall
iret
mov
mov
int3
push
pop
inc
jo
ds
xchg
repnz
ds
push
cmp
loope
dec
scas
mov
arpl
mov
sbb
repz
and
repz
dec
les
and
inc
and
cmp
xchg
in
mov
cmpl
test
mov
pop
and
and
clc
fimull
insb
mov
out
pop
mov
push
xlat
xlat
sub
cmp
aaa
icebp
lods
aaa
scas
lret
ret
xor
lret
test
mov
nop
cmp
or
push
outsb
cmc
dec
push
xor
push
fisubrl
adc
and
pop
pop
imul
incb
adc
mov
js
jbe
inc
rcl
jo
push
hlt
add
into
enter
fcoms
lret
xor
inc
dec
loopne
jne
cli
dec
in
pushf
or
enter
mov
sbb
shl
lret
xor
push
xor
bnd
mov
loop
mov
pop
dec
in
icebp
test
testb
rclb
lret
adc
push
inc
adc
push
xchg
inc
cmp
cmp
aaa
jl
cmp
push
sbb
cld
or
xchg
xchg
sbb
cmpsl
sub
mov
xor
call
sub
xor
aas
add
xlat
add
in
sarb
inc
adc
bound
lods
div
out
jb
lds
lods
dec
mov
rol
push
jecxz
mov
popw
jae
pop
mov
inc
lods
cmp
xchg
les
test
test
addb
pop
xchg
shlb
mov
or
je
dec
lds
xor
loopne
imul
cmp
insb
lret
mov
ljmp
add
repz
in
mov
ret
bound
push
scas
test
or
adc
lret
jge
add
push
int3
xchg
cmp
outsl
movsl
dec
cmp
scas
and
dec
xor
inc
mov
rcrl
shl
push
jmp
push
testl
jno
or
mov
dec
dec
icebp
push
mov
pop
mov
data16
test
rorb
ss
jae
lret
push
sub
mov
mov
faddl
add
sub
loopne
ficomps
add
jge
cmpsb
sub
cmpsb
divl
jle
adcl
outsl
xchg
push
add
mov
or
pop
push
ficompl
int3
repnz
or
jg
lods
sbb
xor
shr
ljmp
ljmp
xchg
outsb
insl
xchg
dec
xchg
jb
push
mov
popf
mov
iret
in
mov
popa
push
ret
pop
addr16
sti
jns
cmp
inc
mov
in
lcall
loop
push
pop
mov
aas
push
rcrl
popa
pusha
or
clc
das
adc
sub
xor
xor
aad
sbb
pushf
out
sbb
cld
mov
repnz
xor
mov
mov
pop
sub
es
enter
lds
xor
out
ds
pushf
lret
hlt
sbb
mov
mov
ja
push
push
shll
add
out
int3
jp
cld
ret
int
in
xchg
stos
jmp
mov
lret
stc
bound
adc
fmuls
push
sbb
dec
add
push
pop
sbb
dec
sti
imul
jecxz
mov
xchg
push
insl
cmp
inc
push
movsb
sti
dec
data16
cmp
idivb
mov
fdivl
mov
aaa
pop
xor
or
mov
fadd
daa
push
xor
les
cmp
xor
cld
dec
jns
aas
in
rorl
and
std
cmpsb
inc
mov
nop
test
mov
or
lea
bound
imul
cltd
add
xchg
mov
in
push
pop
negb
pusha
test
mov
jle
xlat
jmp
adc
mov
ret
cmp
mov
in
inc
mov
pop
sub
icebp
aad
cmp
push
orl
aad
in
push
out
sbb
fdivr
cmp
and
icebp
rorl
mov
bound
xchg
sbb
sbb
daa
or
fbstp
stos
test
mov
subb
das
dec
notb
push
int
loope
jl
dec
xchg
dec
add
shlb
jmp
stos
jbe
stos
pop
mov
push
and
int
mov
sub
imulb
fmulp
and
out
adc
xrelease
or
pop
popa
js
xor
cs
push
ja
lret
idivl
sbb
and
ret
std
adc
cmp
inc
leave
adc
add
outsl
push
psubusb
cwtl
jb
insl
push
inc
jo
and
popf
lods
xor
sub
cmp
stc
cltd
sbb
xchg
push
ja
outsl
inc
sbb
mov
jge
lods
test
ss
insb
cmp
xchg
and
dec
outsl
dec
add
popa
cmp
mov
dec
jmp
cmp
loope
jge
jb
inc
sbb
mov
negb
xchg
adc
bnd
dec
aam
mov
dec
outsl
mov
xchg
jl
int
mov
aad
dec
daa
js
dec
imul
cmp
stc
dec
dec
xor
sar
fistps
lods
xchg
mov
and
or
lret
bound
pop
push
xchg
adc
jae
js
sbb
pusha
jg
pop
pop
dec
std
lcall
stos
add
in
std
das
mov
dec
mov
enter
xor
mov
lret
inc
sub
xchg
stos
or
or
push
push
arpl
rcll
xor
testb
aaa
xchg
bound
adc
testb
fdivs
jl
pop
enter
adc
shlb
and
dec
pop
adc
inc
or
insb
pop
mov
inc
and
js
cltd
adc
fsubrs
outsl
call
inc
notl
nop
push
dec
push
or
lcall
adc
pop
ret
or
lea
mov
and
jg
mov
cwtl
inc
cltd
mov
insl
xchg
movsl
gs
xchg
mov
mov
pop
outsb
xor
imul
push
fidivs
lcall
loop
call
jmp
mov
push
test
repnz
aaa
mov
jmp
test
xor
loope
mov
fmuls
sub
cmc
stos
cmp
pop
sbb
cmpsb
fs
pop
clc
dec
inc
cmpsl
scas
imul
jb
pop
and
cmp
addr16
xor
inc
pop
dec
lods
jl
and
xchg
xor
xchg
xor
or
or
push
sub
punpcklwd
loop
arpl
ss
leave
fwait
mov
push
jae
test
or
inc
test
jle
jecxz
inc
push
and
and
mov
into
insl
movsl
add
loopne
and
xor
rolb
mov
xor
in
inc
out
mull
inc
dec
std
pop
or
or
adc
xor
jl
sub
xchg
sub
add
pcmpgtd
mov
or
aas
int3
aaa
or
and
dec
xchg
fsts
mov
push
adc
imul
sub
aas
in
test
jp
mov
cmp
or
inc
fstpt
fiaddl
insb
adc
pop
test
lods
mov
arpl
fsts
out
xchg
testb
mov
rorb
in
dec
scas
add
push
mov
or
inc
das
mov
adc
dec
mov
xlat
andb
or
subl
adc
mov
ror
mov
mov
pop
sbb
push
push
mov
inc
xchg
sti
mov
push
mov
jbe
xor
sbb
jecxz
push
test
ret
addr16
lea
and
dec
jae
and
or
ja
ljmp
mov
lock
inc
and
test
outsl
mov
jno
rol
stos
rcrl
ret
les
mov
xchg
lahf
arpl
add
pop
jne
aam
dec
int3
mov
jae
jg
mov
andb
cmpsb
inc
and
addl
adc
dec
clc
call
stos
sub
ret
pop
leave
adc
adc
push
fwait
sub
rcl
inc
add
dec
pop
xchg
sub
mov
add
fbstp
sub
lea
test
add
inc
dec
mov
in
jno
and
movsl
jle
scas
cli
aad
sub
add
test
cmpsl
xor
xchg
out
arpl
push
push
and
outsb
jle
cmc
or
cld
jl
ja
aad
rolb
dec
push
pusha
mov
dec
rep
pop
jg
jge
pop
stos
mov
jnp
test
xchg
sbb
sbb
jb
jl
cwtl
lret
int
out
cld
add
pop
jp
sbb
cltd
mov
popa
jnp
adc
inc
xor
cmp
xchg
sbb
mov
xor
adc
mov
push
cs
fdivl
sub
mov
cwtl
pop
push
test
neg
push
das
js
aad
mov
je
loopne
int
lcall
cli
roll
jo
fwait
out
pop
imul
jbe
cmpsb
sub
jmp
pop
pop
dec
add
movsb
cmp
add
in
pushf
lea
data16
pop
adc
inc
or
stos
hlt
insl
dec
push
and
cmp
ja
sub
adc
clc
add
dec
pop
das
popf
xchg
iret
sub
inc
adc
aad
in
negl
pusha
mov
mov
in
call
test
xchg
and
or
clc
fidivrl
test
mov
insl
dec
inc
mov
xor
cmp
fistps
pop
aam
leave
cmp
inc
imul
sbb
or
push
sbb
ljmp
cld
xchg
icebp
xchg
mov
pop
add
pushf
mov
in
fildl
mov
negl
popa
push
lret
fisubs
and
and
enter
std
cwtl
lds
jae
jo
and
and
jnp
into
std
gs
testl
andb
cmp
add
aam
push
popf
scas
ret
imul
jge
dec
ror
xlat
cmp
loopne
pop
mov
ss
push
in
int
les
mov
jecxz
loope
push
or
test
push
mov
cmovge
dec
test
inc
sar
frstor
js
xchg
mov
adcl
cld
xor
or
sti
stos
leave
xor
mov
mov
ja
jae
mov
jge
ret
stc
cld
mov
dec
sub
ret
jmp
cld
pop
add
inc
mov
push
fstp
daa
mov
push
clc
shrd
jae
adc
scas
xchg
loope
lods
xor
cmp
mov
push
or
and
in
mov
mov
mov
push
dec
xchg
and
ret
test
cli
or
jge
and
mov
in
xor
ja
jle
mov
mov
rorl
xlat
mov
add
pop
shr
cmp
cmc
mov
mov
outsl
dec
cmp
daa
dec
xchg
es
mov
inc
sub
jnp
inc
inc
mov
pop
lock
cmpsb
out
push
xchg
or
mov
stos
adc
push
jle
std
or
pop
lcall
call
test
xchg
sti
loop
xor
imul
push
inc
mov
dec
adc
lret
inc
mov
dec
mov
cmpsb
out
sub
pop
cmp
hlt
mov
mov
mov
inc
in
mov
fbld
in
and
inc
fldt
push
enter
or
add
outsl
ret
lret
xchg
add
jmp
add
out
jb
mov
mov
ja
rorb
jl
arpl
mov
incb
xlat
ror
cwtl
and
xchg
inc
jb
and
and
call
gs
ret
clc
cmp
insl
add
repz
mov
jns
xor
push
push
insl
jno
mov
adcb
mov
cmpsb
rorl
sub
aaa
les
jbe
pop
imull
push
outsb
mov
mov
inc
cli
or
mov
mov
mov
rcrl
add
in
or
jecxz
ljmp
jnp
adc
mov
jle
push
out
dec
add
addl
mulb
xlat
arpl
jmp
jg
push
aaa
add
mov
inc
out
ret
adc
add
dec
xor
sub
lret
nop
psubusb
aaa
jecxz
and
mov
ret
imul
repnz
mov
inc
addl
add
mov
data16
movsl
insl
mov
xor
sbb
pusha
repnz
pushl
fcom
xchg
int3
dec
pop
popf
test
sarl
xlat
fildl
sbbl
mov
mov
push
divb
ljmp
mov
repz
fdiv
jmp
es
inc
jl
dec
pop
fists
mov
pop
sbb
das
orb
dec
inc
push
cmc
jne
jne
mov
cmpsb
sti
ja
mov
push
mov
push
stc
xor
jae
fisttps
jbe
adc
and
jge
inc
adc
out
push
push
pop
add
sub
inc
add
sahf
stos
test
mov
and
clc
mov
cli
dec
subb
lea
adc
rolb
cmp
movsl
sub
shrl
test
mov
ja
fsubrl
std
pop
xorl
mov
imul
mov
mov
fidivrs
sub
mov
jbe
cmc
jmp
lcall
jp
push
out
cmp
add
ja
or
loope
test
jecxz
or
out
sub
inc
mov
fdivrl
ljmp
push
decb
ret
hlt
aam
rolb
cmp
mov
mov
pop
dec
sahf
adc
mov
fwait
sbb
jge
jle
xor
out
mov
xchg
adc
mov
xchg
aad
enter
mov
fdivrs
jmp
xor
ljmp
adc
push
data16
addr16
pushf
sbb
int
lcall
xchg
sub
pop
push
dec
mov
lret
fcmovbe
sbb
das
lock
jle
dec
lods
dec
jns
loope
xor
xchg
sub
mov
lds
lock
shrl
pushf
mov
bound
stos
jle
mov
sti
js
leave
in
sbb
es
sahf
xlat
mov
in
jp
mov
and
repnz
lea
lcall
sub
ja
push
and
mov
fcomp
and
dec
sub
sbb
das
ret
xor
dec
sarl
push
mov
dec
push
push
jb
ret
ficompl
or
mov
push
enter
repnz
sub
jne
adc
mov
in
bnd
pop
enter
xchg
dec
je
js
fwait
ret
mov
adc
int3
in
out
pop
pop
or
mov
cmp
icebp
jmp
mov
fisttpll
mov
dec
xchg
out
push
mov
pop
jae
push
xlat
addr16
mov
fs
call
sub
js
jbe
cmpsl
rolb
xchg
imul
add
jo
mov
pop
xor
scas
jp
add
mov
add
adc
pop
jae
push
je
jle
pop
loope
xor
push
in
mov
jecxz
int3
data16
push
out
xchg
or
xor
dec
lods
enter
and
scas
insb
in
daa
and
jp
add
mov
xchg
inc
sbb
or
int
mov
dec
and
mov
ja
inc
leave
je
xor
mov
lahf
cmp
mov
scas
dec
dec
repz
lret
jecxz
push
lods
fnstcw
shll
cmpsl
mov
and
test
scas
ljmp
inc
jae
loope
mov
mov
loop
pop
push
hlt
gs
enter
add
jmp
mov
leave
mov
in
repnz
sub
sub
bound
jnp
ja
mov
and
jg
lret
mov
int3
rcll
enter
fists
mov
pop
in
cmc
int3
jmp
data16
pop
dec
or
sbb
fstps
add
fldcw
or
inc
lods
cmpsl
cmc
sub
mov
sbb
clc
lds
lods
sub
sbb
rcl
xchg
call
mov
or
ficomps
jnp,pt
fwait
xchg
fsubrl
pop
imul
popa
jl
jbe
adc
jmp
movb
pop
mov
or
pop
insb
in
cld
mov
aaa
popa
das
adc
ja
lods
je
fisttps
pop
xchg
ds
inc
fwait
popf
lahf
mov
adc
icebp
cmp
lret
popa
mov
sarl
cmp
push
dec
or
pop
adc
sahf
sar
jge
lock
test
push
xor
sub
out
pop
pop
cld
pusha
fisubs
inc
cmp
addr16
ret
push
rcrl
seto
adc
lahf
in
cltd
push
inc
pushf
nop
out
or
ja
cmpsl
jo
xor
pop
loope
mov
push
sbb
xlat
push
mov
fcoms
mul
out
and
lock
push
lret
xlat
mov
xchg
scas
inc
dec
pop
test
jo
sbb
into
std
pop
mov
inc
inc
ret
out
sub
pop
das
imul
push
mov
xor
nop
xchg
stos
loop
mov
xor
pusha
cwtl
sbb
mov
into
cmp
out
int3
cld
iret
psubusb
mov
in
xchg
add
mov
mov
dec
mov
push
leave
push
loope
leave
xchg
sbb
stc
mov
lock
sbb
push
mov
add
lret
test
frstor
mov
mov
jp
cmp
and
sub
mov
or
lock
gs
inc
pusha
push
mov
or
outsb
mov
fsts
push
lea
jnp
out
outsb
mov
fs
jg
repz
sahf
sahf
and
cld
cmp
dec
push
jmp
jmp
lcall
inc
cmp
std
out
fcoml
iret
mov
add
sbbb
gs
xor
lods
fadds
vcomisd
and
popa
movsb
lcall
fwait
inc
mov
jae
popf
jl
xor
aad
stos
mov
and
mov
pop
lods
loope
lret
inc
mov
sbbl
cmp
mov
stc
nop
cmp
push
imul
clc
sub
inc
sahf
jmp
push
clc
shrl
mov
ja
or
and
xchg
lock
add
xor
dec
mov
mov
cld
push
cld
les
mov
out
push
neg
std
dec
mov
push
or
jl
imul
dec
xor
adc
sbb
adc
rcl
jg
jge
stos
jbe
push
pop
cmp
or
push
in
stos
mov
xchg
ds
and
mov
pop
sbb
loop
in
mov
jp
pop
data16
jl
mov
cltd
daa
mov
push
pop
xor
or
leave
jge
cld
and
scas
lock
test
add
shl
sub
push
cmp
inc
fs
mov
mov
xor
push
imul
xchg
scas
je
dec
push
and
mov
pop
mov
out
hlt
nop
out
cmp
or
stos
add
cmpsl
pop
cmp
xor
and
jge
data16
in
imul
xchg
repnz
rcrl
mov
inc
pop
cmp
cmpsb
xchg
jp
mov
xchg
cmp
and
dec
jp
or
mov
mov
mov
mov
push
fildll
push
int3
cmp
jge
and
sahf
jae
mov
imul
ret
ffree
mov
ja
sub
pop
test
cs
lret
out
in
sub
mov
inc
repz
xor
pop
jg
fldcw
jno
pop
test
cli
jno
adc
pop
sub
sbb
push
dec
ret
push
or
test
daa
pop
dec
mov
xlat
iret
inc
jne
fsubs
pop
sbb
dec
std
push
push
fdivs
mov
scas
sbb
enter
mov
inc
jb
rcll
jp
leave
add
in
inc
xchg
sahf
mov
xor
jg
std
lret
inc
jae
mov
fsts
call
and
xchg
or
mov
icebp
test
loope
add
add
aas
adc
add
lea
lods
out
out
dec
test
aaa
mov
in
jle
push
xchg
sbb
mov
in
outsb
jno
fwait
rolb
clc
fwait
jns
out
test
sub
pop
jae
ror
mov
int
testl
pop
cld
jmp
in
push
ja
cwtl
daa
out
push
push
xchg
jecxz
jge
jno
mov
fwait
loop
int3
dec
shll
ljmp
lret
mov
jb
stc
ret
jle
sar
dec
sbb
or
xor
call
fisubs
fwait
sahf
pop
cwtl
lds
push
aaa
add
add
int
sub
testb
push
xchg
xchg
jne
andb
sbb
xchg
fisubrs
cmpsl
lods
xlat
cmp
inc
stos
jg
inc
loope
mul
fwait
jbe
dec
xchg
xorl
ret
mov
pop
gs
xchg
dec
sub
hlt
xchg
push
das
mov
loop
mov
push
loopne
cmp
add
ja
mov
inc
mov
add
fcmove
xchg
jno
repnz
imul
mov
push
push
mov
fs
cwtl
xor
cmp
jo
negb
dec
adc
and
push
jnp
or
push
inc
addr16
loopne
jo
ja
push
roll
or
or
mov
cmc
cmp
mov
jnp
shrl
pop
jb
das
repz
cmp
jge
cmp
pop
leave
cld
popf
add
or
subb
add
mov
js
push
stos
lret
pop
lret
call
sbb
imul
test
sbb
sbbb
mov
lret
ffree
js
iret
std
aaa
xor
and
mov
mov
cwtl
add
or
mov
iret
loope
ret
xor
push
addb
xchg
mov
jo
jb
test
sbb
inc
add
cwtl
xchg
test
push
adc
scas
inc
sub
cmp
fwait
adc
pop
pusha
pop
adc
cmp
sub
js
aas
sbb
dec
into
mov
es
mov
mov
js
test
ja
test
scas
pop
les
dec
xchg
loop
mov
jl
test
adc
sbb
xchg
inc
jge
sbb
sbb
stos
jecxz
int3
das
dec
pop
push
lret
and
loopne
and
nop
pop
jb
push
or
and
scas
xlat
lock
dec
aaa
jecxz
cmc
sbb
les
mov
in
pushl
dec
adc
stos
cld
or
pop
pop
add
fdivrs
stos
jb
mov
sbb
les
mov
pop
pusha
pop
xchg
cmp
jle
nop
mov
sub
movsb
sub
jnp
ret
dec
cli
addl
sbb
push
sub
aam
mov
rclb
pusha
pushf
imul
push
jae
leave
stos
pop
inc
push
mov
push
testb
mov
jmp
mov
push
xchg
jbe
pushf
lea
iret
clc
push
insb
iret
adc
out
popl
decl
out
inc
or
xchg
dec
cmp
imul
lret
mov
ja
mov
inc
lahf
mov
jnp
addl
pusha
jmp
punpckldq
jecxz
mov
sub
add
mov
xchg
out
popf
jnp
or
adc
ds
and
mov
pop
subl
and
std
cmp
jae
mov
pop
xchg
or
mov
mov
push
or
sti
mov
jno
dec
mov
hlt
in
inc
pop
mov
mov
lods
push
or
nop
lock
pop
or
mov
stos
xor
iret
adc
shll
xchg
push
dec
xlat
mull
movl
cmp
or
push
sbb
dec
mov
pop
adcb
xchg
xor
sbb
or
sub
int
and
ret
xchg
cmp
in
adcl
or
dec
inc
mov
cmp
mov
stc
test
insb
sbb
adc
out
mov
and
sbb
push
jno
imull
popa
fsubs
xchg
inc
outsl
rcll
rcr
lods
aad
add
bnd
add
sbb
jp
mov
xchg
inc
jno
cmp
movsl
scas
jp
or
sbb
jno
gs
jp
jns
jge
iret
inc
mov
xchg
aam
adc
pop
out
sbb
inc
mov
outsl
mov
scas
inc
repz
cmpsb
cmp
jl
loop
icebp
fsubrs
adc
jbe
clc
xlat
xchg
cli
sub
fwait
insb
leave
cmpsl
ret
xorl
push
xor
mov
and
pop
test
pusha
ja
mov
mov
int
mov
jl
cmpsl
dec
fmul
xor
inc
frstor
pop
xchg
ss
inc
lods
loop
xor
loope
div
xor
lret
or
sub
xor
mov
pop
and
xchg
adc
mov
push
popf
mov
daa
add
ja
sbb
imul
or
cmc
jbe
out
lret
stc
les
xchg
jge
cmc
ja
mov
ja
movsl
repz
mov
rorb
subl
mov
movsb
andb
xor
mov
hlt
add
push
sbb
xor
push
icebp
bound
int3
gs
or
sbb
mov
adc
dec
jb
push
xchg
cmp
js
mov
das
or
aas
dec
mov
frstor
sbb
dec
stc
data16
pushf
sbb
cltd
fwait
xor
or
int
mov
shrl
fmull
cmpsb
test
xchg
fs
iret
push
insl
sub
jge
cmp
leave
adc
in
aaa
out
or
bound
rcr
lret
test
jo
pop
test
push
fstpt
sarl
or
cs
iret
ja
icebp
out
aaa
mov
pop
mov
gs
cmpsb
sbb
cmp
andl
xchg
fadd
ret
adc
fisubl
and
adc
add
out
fcomip
xchg
outsl
inc
out
das
ljmp
iret
test
cwtl
imulw
jmp
pop
cli
jno
das
push
ss
in
sbb
adc
pop
cmp
adc
inc
shrl
xchg
jns
jmp
xchg
mov
mov
xchg
add
inc
mov
add
jp
cmp
jp
and
adc
inc
mov
jo
popl
jns
inc
push
push
lahf
push
stc
out
dec
bound
fldt
mov
ja
sbb
cmpsb
test
ja
mov
pushf
ret
sub
cli
xorl
daa
xchg
cmpsl
int3
shll
cs
mov
mov
push
mov
cltd
cmp
scas
dec
js
fidivrs
mov
and
and
push
adc
push
lret
jb
push
dec
aas
mov
inc
xchg
shl
insb
pop
xor
jecxz
push
mov
push
movsb
jb
enter
inc
cli
lret
xchg
mov
fs
into
call
mov
js
add
inc
stos
gs
shr
arpl
into
je
aas
push
ror
aam
adc
and
pop
mov
js
les
sarl
xchg
inc
inc
mov
jbe
add
fadds
lea
dec
sbb
pop
lea
movsb
paddsb
movsl
fdivrp
sub
mov
adc
leave
sbb
outsb
add
xlat
aas
push
dec
stos
addb
cmpsl
pop
cmc
cmp
adcl
or
add
mov
mov
pop
jle
cmp
dec
test
jnp
rorb
mov
fisubrl
test
ja
mov
outsl
popf
jle
fwait
aaa
ss
ds
cmc
xchg
inc
cmpsl
inc
outsb
in
jae
or
loope
pop
popf
out
jle
cmp
testl
test
sbb
pop
cmp
mov
incb
sub
or
scas
or
or
sahf
xor
stos
out
sarb
cmp
aad
loopne
xor
xor
sti
inc
repnz
jge
mov
rclb
sar
xor
and
icebp
sub
jle
inc
and
jae
or
mov
xor
mov
shll
cmp
jmp
fwait
lcall
test
cmp
leave
es
cmpsl
sbb
pop
inc
mov
rcr
pop
inc
sti
movsb
or
push
push
mov
pusha
fisubrl
fwait
jnp
push
pop
das
cltd
mov
out
mov
and
sbb
movsl
addr16
and
mov
sbb
xor
jno
sahf
mov
sub
push
std
fmulp
sbb
leave
push
add
mov
jge
pop
inc
das
fisttpl
adc
fimull
aaa
mov
mov
and
lret
out
sahf
pop
lds
int3
imul
test
xchg
outsl
frstor
lods
minps
dec
mov
and
add
enter
jnp
out
fld
dec
in
in
js
dec
jns
ja
sbb
or
push
mov
mov
mov
cmpsb
sbb
jb
dec
aas
sub
iret
test
out
push
jl
faddl
negb
das
mov
mov
pop
loop
cmp
scas
mov
and
ljmp
xlat
fadds
sahf
jno
gs
rolb
imul
iret
cmpsb
sbb
jge
cmp
pusha
sbb
cltd
add
lret
in
jl
fcompl
mov
cmc
or
mov
sbb
add
adc
test
push
sub
add
inc
out
test
pop
je
mov
call
jg
and
lods
and
adc
ja
sbb
into
and
aad
imul
jg
dec
jo
dec
fmull
fdiv
xor
mov
push
imul
gs
bound
repnz
cmp
incb
xor
pop
fstl
ret
jecxz
add
adc
jmp
cmp
xor
mov
sti
mov
mov
shlb
mov
nop
adcl
or
push
fcoms
jmp
inc
mov
cltd
cli
enter
add
jle
das
lds
inc
mov
shll
fs
inc
ja
add
pop
xlat
dec
mov
clc
imul
loopne
jns
shr
jmp
jno
or
xchg
jns
jle
das
add
shll
lock
stos
mov
xor
pop
inc
popl
mov
pop
sub
int
inc
add
mov
movsb
aaa
inc
out
mov
and
in
aaa
sub
lds
mov
jbe
jp
js
daa
mov
mov
es
jge
sub
incl
inc
and
dec
fldl
add
push
pop
push
sahf
mov
mov
cmpsl
jns
es
dec
iret
popa
adc
cld
add
scas
xchg
cmp
xchg
fidivrs
dec
inc
test
imul
dec
lods
xchg
or
or
pop
pusha
jge
cmpl
in
xchg
sbb
xchg
push
movsb
adc
push
ljmp
mov
and
ud2
mov
notb
mov
fmul
decb
pop
adc
push
js
orl
adcb
and
movsl
mov
lcall
xorb
scas
enter
inc
xor
push
enter
cmpsb
jae
dec
in
sbb
inc
rep
test
adc
cmpsl
cltd
mov
popa
in
sub
xchg
add
cmp
fildll
pusha
or
mov
rorl
int
testl
mov
mov
cmpsl
ret
pop
sub
and
stc
mov
inc
hlt
push
mov
in
adc
js
scas
in
fcmovbe
push
pop
xchg
cli
mov
mov
jbe
in
lret
js
add
outsb
hlt
pop
out
imul
outsb
aas
mov
imul
pminsw
add
fisubrs
aad
xchg
sbb
pop
and
cmp
js
popf
or
rclb
mov
sbb
cmp
and
xor
pop
jmp
sbb
ds
or
jl
bnd
ja
pushf
lret
xchg
fiadds
mov
xchg
cld
dec
imul
sbb
sti
mov
imul
imul
xor
and
loope
jg
movsl
mov
dec
cs
fbld
sbb
xor
push
xchg
cmc
cwtl
stos
pushl
jmp
clc
repnz
sahf
mov
xchg
std
popa
xlat
ljmp
mov
mov
fcompl
ja
jnp
cmp
lret
jae
xchg
mov
or
ja
mov
sbb
lret
push
add
xchg
daa
je
jno
popf
add
fldcw
mov
jg
out
fsub
inc
fimull
dec
dec
cmpsb
cmpsl
dec
cmpsb
pop
sub
jb
or
addl
xor
nop
xchg
push
mov
fwait
mov
xchg
aas
jns
cmc
inc
inc
hlt
pop
out
jbe
bound
sarb
xchg
mov
push
adc
out
and
and
mull
iret
cmp
aaa
pop
hlt
push
jno
lock
in
jne
dec
cld
adc
iret
or
mov
aam
xchg
addr16
int
cli
mov
stos
popf
adc
movsl
mov
bnd
repnz
pop
aad
pop
sub
rcll
int
pop
mov
lds
or
addr16
pop
mov
sbb
mov
test
push
cmp
and
es
push
test
lret
jnp
sub
mov
inc
pop
jl
push
push
pop
outsl
daa
xor
mov
sbb
mov
sbb
test
imul
outsb
jnp
adc
js
cmp
xor
test
jae
aaa
pop
loope
and
popf
inc
out
psubb
lret
sbb
sub
lds
inc
into
pop
dec
rcrb
sar
je
lahf
mov
das
and
sti
push
jnp
fldcw
jge
xchg
stos
push
movsb
mov
stc
mov
out
ret
mov
leave
jle
sbb
int
mov
test
cmpsl
and
clc
out
adc
or
inc
rcrb
adc
dec
inc
xor
lahf
insb
cwtl
sahf
sbbb
or
dec
xor
mov
outsb
imul
repz
jns
or
add
mov
sub
mov
add
test
movsl
lock
sbb
lods
and
rolb
pop
adc
pop
sbb
mov
and
or
dec
dec
movsb
jp
pop
loope
pop
sub
jae
fiadds
jns
in
mov
cmp
or
push
imul
test
dec
sub
lock
aaa
dec
push
pop
jg
ljmp
fnsave
adc
out
int3
sarl
cmpsb
dec
jne
add
enter
sub
mov
cmp
dec
sub
pop
pop
sub
mov
xchg
loopne
or
aas
dec
mov
jno
scas
add
mov
jg
jge
xchg
aaa
bound
jge
adc
jb
cltd
dec
mov
mov
daa
pusha
push
mov
pop
test
cmpsb
popa
ljmp
shlb
shll
rclb
lods
ret
popf
fsts
xor
test
mov
or
outsb
loope
cmp
xor
xor
push
xor
daa
mov
mov
and
call
jmp
xchg
push
pop
addr16
test
call
push
inc
cmpsb
xor
shl
mov
addr16
sub
call
sbb
inc
mov
movsl
or
cld
inc
lret
cmpsb
leave
mov
and
mov
inc
lods
addr16
adc
sub
xor
or
js
mov
dec
in
or
dec
dec
test
orl
cltd
push
or
idivb
int3
shl
les
adc
dec
or
loop
add
jb
sub
push
in
fsubr
leave
rcrb
iret
orb
xor
jge
or
loope
sbb
mov
cmp
fwait
jb
lods
test
lret
or
hlt
fists
aam
lahf
pop
in
xor
idivb
jae
adc
xchg
pop
loope
inc
std
cmp
arpl
shl
mov
imul
push
lret
les
jo
rorb
dec
int3
xor
jp
lcall
jge
jns
rorl
dec
aas
push
je
jle
cli
insl
in
xchg
out
lock
pop
sti
out
stos
pushl
inc
or
push
fwait
push
lcall
popa
sub
jmp
rcll
repnz
sbb
loopne
lret
mov
lahf
dec
mov
les
add
lret
stc
adc
adc
mov
inc
js
push
fsubl
sub
pop
cli
mov
test
add
movsl
xchg
pusha
sbb
push
aad
ja
sarb
jmp
aam
shlb
dec
xchg
ret
mov
push
test
and
xchg
mov
or
jne
mov
pop
sti
and
fld
aas
rcr
pop
icebp
cmp
fsubs
enter
ds
push
imul
adc
lret
clc
frstor
cmp
fcomi
sbb
jmp
jae
testl
imul
lret
mov
in
xor
xor
jge
fisubs
out
push
sub
xchg
add
dec
push
push
sub
cwtl
jo
xor
test
adc
mov
jp
pop
int3
mov
xchg
mov
push
shll
repz
scas
shlb
pop
sub
xor
adc
adc
dec
sub
mov
push
or
sbb
jne
into
pop
push
mov
or
mov
cmp
xorb
inc
pusha
cmp
jmp
cmp
je
lds
adc
xor
dec
shll
sahf
sbb
jecxz
lahf
adc
pusha
je
aas
xchg
sbb
pop
aaa
push
sbb
arpl
dec
pop
xchg
inc
popf
sbb
int
cltd
pop
xchg
xor
push
rorl
loope
inc
mov
bound
jae
lea
jbe
dec
dec
rcr
inc
lahf
mov
xlat
xchg
bound
in
jl
jle
inc
sahf
adc
arpl
xchg
sarb
jbe
jne
pop
adc
xor
cwtl
dec
adc
pop
ret
push
add
les
lods
xor
xchg
call
popf
mov
adcl
push
loopne
mov
fidivrs
mov
pusha
rorb
int
adc
jns
loopne
mov
sarl
dec
test
inc
push
and
sbb
push
pop
mov
pop
mov
insl
or
push
mov
pop
sub
iret
negb
icebp
repz
andl
jmp
lds
xchg
in
adcl
push
pushl
push
and
inc
mov
adc
cmp
lods
mov
jle
adc
xchg
pop
fistps
imul
mov
xor
icebp
dec
dec
mov
fsubs
cmpsb
push
fs
cmpsl
popa
test
jge
test
mov
mov
das
sub
je
jmp
mov
ret
movsb
jae
mov
sbb
js
sbb
or
repnz
cld
adc
mov
add
data16
out
push
test
xchg
mov
sbb
into
fistps
xchg
pop
insl
mov
mov
push
test
stos
int3
loop
ret
and
inc
xchg
jg
add
je
xchg
mov
shll
inc
lret
es
mov
dec
scas
lahf
insl
pop
lcall
ljmp
sub
out
or
and
mov
sub
shl
out
hlt
fwait
ljmp
stc
in
pop
push
mov
das
rolb
stos
jnp
and
outsb
fucom
imul
insb
bound
test
xorb
push
int3
pop
ret
inc
push
cld
sti
push
adc
or
mov
repnz
stos
sbb
mov
and
out
sub
int3
xchg
inc
gs
clc
sbb
es
orb
push
fdivl
pop
lcall
sti
cmp
lock
dec
pushf
aaa
test
mov
sahf
clc
or
test
mov
pop
xchg
dec
fisubs
sbb
jecxz
aam
mov
jp
sub
sahf
push
xor
add
push
divb
shrb
cmp
add
and
pop
adc
stc
cmp
dec
pushf
clc
test
mov
mov
push
int
push
fwait
dec
push
xor
adc
test
mov
popf
sbb
mov
add
or
jecxz
cmp
add
lret
pop
call
inc
outsl
cltd
jb
sub
movsb
ljmp
sub
mov
dec
cli
jp
jno
loope
cmp
stos
sub
cmpsb
inc
dec
inc
scas
das
xchg
cmpb
dec
test
xor
xor
or
mov
jle
nop
lea
or
or
mov
fbld
pop
jns
xchg
dec
xchg
roll
xor
mov
lret
sbbb
lods
adc
out
xchg
daa
fsubp
lret
dec
aam
mov
aam
inc
jne
rcll
add
ja
or
lcall
mov
sub
cmc
pop
push
test
push
test
decl
push
fisubl
enter
jb
xor
outsb
int
mov
xchg
dec
jb
and
mov
dec
imul
mov
je
or
hlt
mov
fbstp
fst
sbb
mov
stos
pop
push
xor
jae
mov
xlat
and
ret
and
lea
fidivrl
and
push
adc
or
pop
dec
push
jne
hlt
movsb
adc
inc
test
jmp
lcall
adc
adc
mov
pop
mov
add
inc
mov
daa
enter
fstl
push
cwtl
mov
leave
sub
or
inc
mov
int3
mov
or
cmp
out
dec
xchg
adc
sahf
jno
push
test
inc
push
iret
mov
fwait
lcall
clc
popf
pop
ss
dec
rorb
imul
push
cmp
dec
enter
scas
xor
inc
mov
popa
mov
and
mov
xor
imul
sbb
lret
ret
loopne
loopne
int3
sub
arpl
int
inc
std
orw
ss
jecxz
push
rolb
dec
ja
mov
inc
pop
lods
rorl
std
repz
sbb
popf
outsb
mov
js
int3
and
es
insl
or
and
or
jg
daa
mov
push
xchg
jge
pop
push
xor
and
popf
xchg
lock
cmp
adc
mov
aam
sub
and
sub
push
sub
cmp
push
pop
xchg
cmp
test
daa
push
sub
aam
sbb
xchg
jnp
dec
dec
mov
xor
pop
push
test
pop
jmp
js
cltd
push
and
aas
inc
adcb
adc
jl
sub
addl
xor
scas
add
clc
stos
movsb
sub
out
lods
add
push
pop
inc
cwtl
aas
iret
movsb
aaa
cmp
push
cmp
push
mov
and
rorb
int
sbb
stos
adc
push
push
aad
add
and
inc
xor
ret
outsb
push
enter
add
xor
hlt
arpl
fisttpll
outsb
cwtl
int3
add
dec
ss
jg
jg
fadds
outsb
stc
pop
adcb
imul
mov
stc
jmp
sbb
jp
fldt
cmp
xor
fdivrs
lea
xadd
sbb
fldcw
or
rcrl
or
push
pop
cltd
mov
mov
push
jo
ret
jg
mov
jp
std
inc
xorl
inc
sbb
or
or
mov
mov
jbe
xlat
mov
or
push
jns
push
in
jp
fcoml
sub
mov
mov
push
or
cmp
paddusb
adc
into
mov
inc
jo
aad
repz
jg
adc
dec
mov
pop
cmp
add
pop
mov
mov
lahf
pop
push
sbb
test
pop
adc
dec
xor
sbb
rol
adc
test
out
popa
cmp
dec
pop
pop
inc
mov
cmp
sbb
scas
mov
sub
mov
mov
arpl
pusha
pop
xchg
jecxz
cli
sub
push
cmp
inc
stos
lea
add
call
ud0
inc
cmp
adc
sbb
push
xchg
cmpsb
repnz
mov
int3
xor
fucomi
push
inc
jne
mov
sbb
shrb
fildl
jmp
in
dec
aaa
test
test
mov
mov
loopne
and
aam
cwtl
xchg
mov
xchg
iret
adc
movsb
mov
lock
sahf
xor
das
adc
push
push
stc
mulb
mov
jle
enter
pop
xchg
add
pop
cmp
push
pop
add
push
stos
and
lods
jmp
out
jb
cmp
ljmp
add
insb
push
pusha
add
addb
incl
push
mov
out
rolb
push
xor
pop
adc
push
or
xchg
cmpb
mov
inc
dec
jbe
jae
or
lock
sahf
mov
icebp
inc
pop
xchg
hlt
xor
inc
jge
mov
dec
dec
test
fsubrs
iret
mov
adc
stos
pop
push
lods
out
mov
or
ret
mov
push
or
repnz
repnz
mov
je
in
mov
push
rcr
fwait
sahf
test
subb
clc
scas
outsb
in
mov
pop
sbb
arpl
imul
loopne
mov
adc
dec
mov
adc
cmp
addr16
adc
adc
dec
fnstsw
jmp
xor
mov
out
cmp
int
test
mov
xchg
sahf
stc
or
daa
push
push
mov
xor
adc
lret
fbstp
lahf
test
test
push
stc
dec
and
mov
jp
insl
in
imul
je
xor
push
add
cmpb
jne
jbe
dec
fstps
in
pop
adc
popa
hlt
clc
repz
sbb
push
sbb
add
imulb
orl
push
add
dec
mov
pop
out
mov
mov
or
jg
pop
je
sbb
push
out
mov
pop
jnp
or
and
test
sub
xor
cmp
add
jmp
or
jae
pushf
pop
fwait
push
popa
cmpsb
movsl
jno
test
pop
adc
add
mov
push
hlt
ljmp
inc
and
pop
out
jecxz
mov
into
es
loop
fisttpll
xchg
xchg
bound
sub
dec
movsl
out
mov
in
cmp
pop
pop
sti
ljmp
daa
addb
dec
stos
pop
sub
insl
adc
xor
push
out
xor
imul
and
adc
jns
std
xor
cmp
lcall
cli
inc
cmp
jmp
push
das
pop
es
cmp
lret
cmp
ljmp
mov
out
inc
xor
or
aam
inc
jge
pop
int3
mov
sub
adcb
aas
sbb
mov
fdivrp
inc
push
inc
and
xor
mov
xor
inc
mov
xchg
mov
clc
cltd
or
xor
dec
pop
sbb
mov
mov
gs
shr
movsl
sahf
jno
or
mov
xchg
sahf
leave
sbb
je
inc
cmp
mov
pop
xor
cmpsl
or
sbb
add
das
les
iret
lea
cmp
lods
addl
jmp
mov
xor
or
or
aaa
pusha
rorl
in
aas
xchg
inc
lea
jmp
mov
addr16
ret
insl
jge
mov
xor
sbb
xchg
inc
stc
nop
mov
sub
sub
popa
fistl
imulb
dec
and
jmp
into
xchg
adc
clc
mov
sahf
mov
aas
or
mov
das
xorb
or
mov
mov
xor
outsl
mov
mov
cmp
loope
in
push
or
test
dec
cwtl
test
inc
sub
sbb
orb
sti
lods
out
mov
enter
je
pusha
xor
ja
fs
lods
jbe
pusha
pop
and
dec
jle
rolb
xchg
adc
shlb
push
mov
mov
and
scas
sbb
mov
or
add
aaa
ds
xchg
aas
gs
inc
pushf
repz
xchg
xchg
jmp
gs
pop
sahf
and
loop
xor
outsl
insl
inc
adc
adc
xchg
dec
push
pop
hlt
xlat
xchg
jb
out
sub
in
dec
fbld
mov
outsl
sbb
test
call
arpl
mov
or
fcomps
inc
icebp
sbb
inc
and
xlat
dec
add
imul
pop
cs
pop
mov
popa
int
xor
mov
sbb
lret
rcr
lret
dec
xor
sbb
fiaddl
add
ffreep
jmp
sub
or
ds
pop
pop
fimull
out
push
push
subl
jmp
pop
mov
mov
fcomps
movsl
mov
aas
call
cltd
push
add
imul
sbb
xlat
out
cltd
xchg
in
xlat
stos
xchg
sbb
fmulp
aaa
lods
xchg
pop
push
cltd
cmp
sub
inc
fildll
andnps
addr16
lea
lahf
aaa
inc
int
fsubl
xor
icebp
loop
out
out
inc
lcall
mov
les
addr16
decb
dec
and
data16
dec
xor
js
dec
push
loope
subb
lock
call
arpl
xchg
les
fsubrl
loopne
mov
mov
or
lock
cli
push
sbb
mov
jae
mov
rclb
pop
test
add
negl
mov
ljmp
cmpsb
xlat
dec
shl
add
add
pop
test
push
cmp
cmp
and
add
xchg
aaa
lret
mov
pop
push
sub
nop
and
cmpsl
movsw
stos
aad
cmp
pop
pop
mov
jmp
mov
xchg
cmpsl
cs
mov
xor
divb
xor
scas
shlb
jge
aad
jmp
pop
or
ss
jmp
prefetcht2
std
pushf
stos
outsb
add
out
out
jo
mov
cli
or
xor
mov
int
jmp
aas
pop
cwtl
jne
adc
out
add
jbe
add
mov
push
adc
ret
ds
rolb
xbegin
pop
loope
std
sbb
mov
sub
or
push
das
in
mov
jae
lea
jae
inc
enter
cmp
and
pop
push
and
adc
jns
mov
and
roll
mov
mov
mov
mov
pop
aad
cmc
adc
scas
scas
or
scas
fistps
push
sbb
or
leave
push
and
pop
push
icebp
mov
fisubl
cmpsb
scas
lds
cmc
pop
jl
ljmp
jne
mov
inc
gs
into
bound
and
and
push
shl
aaa
jge
push
shr
cltd
addl
lock
hlt
daa
and
adcl
stc
jae
in
and
jo
nop
add
jmp
inc
mov
mov
int
jmp
jmp
push
fwait
add
pop
sub
dec
pop
leave
sbb
cmp
mov
cltd
lret
out
jnp
push
aad
sbb
fcompl
pop
pop
push
cmp
repnz
fs
fstpl
insl
mov
test
push
and
pop
test
mov
nop
scas
arpl
shll
les
add
fs
and
popf
push
adc
xlat
out
and
fistps
fnstcw
sbb
loop
and
push
mov
fs
es
fs
sbb
inc
test
jg
mov
adc
sbb
xadd
or
stos
ficompl
sbb
jne
icebp
shll
sbb
dec
dec
test
sub
xlat
sbb
cli
adc
add
iret
lods
push
cmp
push
stos
cmp
mov
stos
cld
xchg
cmp
sbb
jmp
sarl
clc
dec
fldcw
jns,pn
sub
pushf
xor
xchg
shr
dec
in
sbb
scas
arpl
mov
filds
leave
bound
add
stos
addr16
adc
lods
sub
sahf
fcomps
add
adc
mov
add
sahf
sbb
cmp
adc
and
rolb
mov
push
dec
ror
js
test
pop
jb
clc
cmp
push
lahf
test
sub
xor
mov
sbbl
push
add
jno
pushl
test
xchg
jnp
notb
outsb
daa
sbb
subb
lock
adc
mov
inc
lds
pop
mov
mov
sub
xchg
add
enter
stos
sub
pushf
jge
push
push
imul
adc
add
or
cmpsb
shll
out
loopne
jge
mov
cmp
shrl
mov
stos
gs
push
orl
sti
insb
notb
jle
fistl
adc
insl
lock
dec
add
mov
cmpsl
mov
mov
rcr
xor
notl
adc
xor
test
mov
addr16
dec
das
cli
jbe
adc
and
imul
xor
pop
cmpsb
sar
or
jno
mov
lods
testl
dec
js
out
arpl
xor
sbb
in
outsb
push
xlat
inc
in
push
orl
mov
pop
mov
cmp
pushf
cmc
test
jnp
cwtl
or
insl
pop
shrl
xchg
lret
pop
pop
clc
into
frstor
jp
icebp
pop
ret
push
mov
std
mov
and
push
dec
rclb
mov
outsl
or
push
push
mov
cmc
xchg
inc
sbb
adc
sub
add
xor
call
dec
out
push
push
lea
ljmp
cwtl
clc
jl
repnz
or
lret
lock
faddl
sti
ljmp
adc
mov
cmpsl
pop
je
in
pop
filds
lods
dec
mov
mov
cmp
cltd
xchg
int3
mov
jl
xchg
cmp
fucompp
xchg
shr
or
add
stos
mov
imul
in
jge
push
jmp
test
mov
or
cmp
mov
arpl
sbb
add
pop
dec
test
imul
lods
cmp
ja
sbb
aad
push
mov
popf
push
fstp
negb
out
addb
dec
pop
sub
lret
jge
es
loope
jge
sub
data16
shll
mov
lret
jle
xor
dec
or
jo
outsl
cmpsl
cld
pop
punpcklbw
dec
cli
or
cld
loop
cmpsl
in
testb
push
sub
ret
enter
mov
jge
xor
jmp
inc
lret
jp
mov
adc
push
icebp
xchg
fdivrl
mov
test
mov
jnp
xorl
in
xchg
fisttpll
xchg
cwtl
test
fsubr
mov
adc
push
movsl
test
sub
or
xor
scas
and
stos
push
fdivp
ljmp
cs
gs
jns
lcall
xor
sub
gs
mov
pushf
aad
pop
leave
repnz
push
aam
mov
in
lcall
push
mov
or
sbb
loop
push
push
mov
cmp
out
lds
stos
pop
xlat
sub
ret
cmpsl
adc
pop
mov
je
enter
fmull
cmp
bound
mov
testb
test
sbb
movsl
sbb
nop
sbb
sbb
shrb
repz
adc
xchg
and
cmp
jbe
inc
shrl
cmp
fsubrl
data16
mov
int
mov
loop
xchg
push
fcmovnu
inc
cld
sbb
inc
lds
rolb
push
shll
mov
lock
or
pmaxsw
and
enter
inc
sub
jecxz
clc
jp
fsubrs
mov
int
adc
jmp
mov
sti
mov
dec
mov
mov
add
or
push
xor
ja
mov
xor
aaa
dec
xor
into
gs
outsb
lret
jae
cmp
mov
jle
cmp
aad
out
rolb
or
jp
fnstenv
jo
dec
fdiv
push
or
cli
cmpsl
jecxz
cmc
popf
adc
dec
cmp
sbb
cmpsl
pusha
inc
addr16
lods
sbb
test
xor
push
stos
lea
scas
into
out
arpl
enter
xor
cld
jp
dec
aas
fnstsw
insl
sub
cmpsb
pop
inc
scas
andb
dec
inc
or
loope
xchg
fcomi
push
ret
idivb
adc
and
pop
popa
mov
mov
fsub
lahf
repnz
dec
leave
push
cmp
stc
pop
imul
mov
inc
mov
cs
shufps
in
xchg
cld
cltd
dec
sub
jo
into
inc
cld
push
pop
loop
mov
repnz
int3
arpl
mov
in
sub
pop
inc
sarb
pop
insl
icebp
test
sbb
popf
ret
fs
inc
lds
shrb
sub
cli
call
nop
pop
pop
mov
pop
rcl
sbb
mov
mov
adc
shll
jae
jge
popf
outsl
mov
mov
cmpsl
outsb
dec
in
xor
fucomip
jne
or
je,pt
js
inc
ja,pt
xor
les
mov
rol
jno
push
fstpt
fidivs
call
test
bound
cmp
cmp
adc
dec
popa
add
sub
push
sub
cmpsl
cmpsb
sub
mov
hlt
sbb
cld
pop
incb
push
sbb
aam
mov
roll
adc
lods
je
dec
popw
and
notb
in
in
aaa
or
xor
or
pop
add
inc
or
xchg
mov
cli
mov
lret
xor
in
mov
inc
fidivrs
sub
mov
ja
sub
icebp
gs
pop
inc
cld
lods
sbb
and
gs
scas
outsl
sub
fisttpll
push
jge
pop
mov
push
jl
inc
xor
clc
rcrl
mov
fstl
cmpsl
das
outsl
in
push
out
mov
sub
test
add
pop
xchg
pop
add
xlat
adcb
xlat
cmp
cmp
sbb
into
jecxz
test
or
sbb
enter
in
push
xchg
mov
arpl
bound
mov
sbbl
jmp
pop
mov
add
add
sbbb
enter
cwtl
jbe
jecxz
ds
dec
inc
test
divb
ds
fidivl
adc
das
dec
cmpl
insl
push
cmp
call
mov
cmpb
hlt
movsl
stc
addr16
in
sub
repnz
or
jns
fwait
push
fisubs
jle
negb
ffree
mov
scas
add
xchg
aas
pop
pop
jle
fcompl
data16
xor
nop
lods
xor
push
dec
out
test
inc
add
adc
pop
mov
lock
outsb
add
xchg
xchg
dec
push
sub
mov
lods
in
and
fidivrl
adc
loop
or
pushf
adc
lret
loope
mov
dec
sbb
cs
push
test
mov
and
rol
sbb
arpl
bnd
mov
add
mov
dec
xchg
inc
and
jp
out
insb
push
lcall
add
pop
xchg
jmp
inc
dec
push
adc
ret
out
psubd
xor
jbe
push
jne
clc
pop
adc
out
int
out
test
lahf
mov
jmp
sub
lock
dec
cld
or
pop
mov
sub
inc
dec
js
scas
cmp
xor
testb
adc
lods
mov
lahf
out
push
mov
xor
fdivrs
out
mov
lret
xchg
jmp
test
or
mov
mov
mov
clc
jg
jae
into
or
fadds
outsb
add
ret
mov
cmp
mov
out
push
imul
xor
lock
push
xchg
pop
lahf
cli
ret
bound
test
shll
sbbl
mov
filds
jo
stos
push
sar
jle
mov
repz
mov
js
cmp
loope
push
xchg
insb
jns
outsb
mov
dec
icebp
lock
xchg
data16
jbe
popf
add
in
push
test
fmuls
and
pop
jge
mov
or
pop
jp
cmp
add
scas
xchg
or
pop
call
mov
pop
push
inc
or
leave
fs
iret
xor
mov
xchg
repnz
loopne
insb
xchg
inc
aas
adc
mov
jae
loop
xor
mov
test
test
in
inc
popf
cmp
sbb
cmpl
stos
xlat
mov
pop
imul
adc
sbb
xchg
out
or
repnz
jmp
inc
aam
fmull
cs
and
mov
sbb
lods
pop
xchg
lret
lcall
xchg
test
push
test
adc
pop
or
ds
push
xchg
push
cmp
push
sub
fldenv
in
adc
mov
scas
mov
add
insb
stos
push
xchg
aaa
sub
mov
jecxz
movsl
mov
mov
in
mov
repnz
xor
int3
aad
mov
les
movsb
leave
mov
popa
stos
lret
jle
fists
or
dec
mov
lods
jecxz
je
les
mov
inc
mov
jmp
loope
push
rorl
out
ja
dec
adc
add
mov
fstpt
or
fistl
pop
inc
and
sbb
mov
push
push
sgdtl
pusha
test
shlb
pop
mov
xor
or
mov
stos
jecxz
push
sahf
pop
mov
mov
mov
addr16
stos
mov
xor
fdivrl
rcrb
xchg
adc
sahf
pop
xor
lods
mov
rcrb
push
xchg
jl
pop
push
clc
xor
out
mov
sub
adc
loopne
mov
mov
int3
jns
push
adc
lods
dec
push
ficoml
lea
negb
divl
lods
inc
insb
mov
out
lcall
std
push
inc
dec
std
sti
mov
jo
adc
dec
push
orl
nop
fdivl
lods
out
mov
mov
data16
shlb
int
jecxz
add
mov
lahf
cmp
cmp
dec
ljmp
out
adc
mov
pop
jns
xchg
data16
mov
inc
into
cmp
push
in
lahf
xlat
fisttpl
mov
jno
inc
jmp
xor
and
mov
and
into
lcall
dec
push
ljmp
push
repz
fistl
shrl
and
jns
jg
shlb
push
xchg
stc
jle
xchg
jg
shlb
adc
movsl
or
xchg
mov
dec
jg
and
js
insl
rcl
dec
loope
jp
sub
imul
test
repz
or
out
mov
push
sub
mov
sub
push
jecxz
xchg
and
push
ja
scas
jecxz
fmull
push
xchg
mov
or
push
mov
adc
xor
adc
es
mov
lret
cmp
lods
mov
mov
cmp
push
xchg
xchg
lret
pop
and
loope
and
adc
inc
shrb
mov
sbb
mov
nop
mov
mov
andb
aas
jo
xlat
and
and
ja
xor
pusha
roll
dec
fimuls
cmpsb
or
das
push
roll
adc
add
popa
imul
cmpsb
and
shll
mov
xchg
gs
jnp
add
push
and
shll
cmp
aad
test
pop
jle
cmpsl
push
or
push
dec
aas
mov
cmp
cmp
mov
jle
or
sbb
cltd
sbb
popf
js
push
fucompp
dec
add
lcall
push
movl
aaa
inc
sar
roll
fsts
out
stos
xchg
movsb
int3
xchg
push
std
cmp
cmp
cmc
pop
test
aaa
pop
negb
js
adc
sbb
fsubrs
xchg
mov
and
fistpll
adc
and
xchg
xchg
les
repnz
jle
add
push
push
stos
cmp
jnp
test
insl
jbe
inc
lret
dec
pop
push
and
js
push
sbb
shlb
xchg
mov
mov
aaa
cmpsl
orb
int3
or
into
or
insb
mov
ja
ljmp
pop
inc
enter
popa
mov
mov
fwait
test
xor
sbb
std
arpl
mov
dec
inc
jp,pn
push
jne
jle
test
sub
pop
xchg
shrb
outsl
addl
fisubl
flds
repnz
psubd
inc
or
jle
mov
popa
fistl
loopne
xor
dec
idiv
pop
repnz
add
adc
scas
mov
jmp
sub
dec
inc
inc
stos
test
sub
outsl
push
iret
test
stos
mov
jecxz
and
fstpt
cmp
mov
sub
xor
add
or
lods
lods
in
pop
push
pop
loope
xchg
lds
jg
outsl
icebp
fadds
das
aas
xor
mov
popf
lds
and
jne
pop
pop
jecxz
mov
aaa
adc
jo
pop
push
nop
int3
or
stos
push
aaa
adc
arpl
jnp
movsb
in
inc
int
lea
call
sahf
aad
dec
inc
les
pop
jne
push
push
jge
hlt
popa
leave
adc
sub
cmp
cld
ret
add
lahf
inc
stos
inc
mov
rol
dec
mov
insl
jp
sub
inc
cs
jnp
pushf
insl
push
cmc
sub
xchg
std
or
mov
orb
jno
sub
jle
mov
mov
out
ret
mov
mov
push
loope
ret
stc
mov
push
jnp
pop
mov
cmc
mov
mov
or
movsb
adc
adc
in
mov
dec
add
or
cmpsb
sbb
sub
pop
aam
mov
mov
out
sub
add
call
inc
lds
and
jb
mov
adc
divb
pushf
out
cmp
outsb
fdivrs
push
mov
adc
and
fimuls
leave
cmp
sub
cmpsb
jecxz
or
jbe
mov
add
rcr
add
ret
popa
loop
repz
adc
icebp
jo
lds
repnz
push
jns
loopne
inc
in
xor
jnp
arpl
jb
test
jl
jb
or
cmp
les
add
mov
ds
push
jne
adc
es
push
call
and
dec
sarb
or
enter
push
add
test
leave
addr16
shll
fcoml
fistl
insl
cmpsb
sbb
nop
sbb
or
push
int3
dec
shl
mov
outsb
or
mov
ljmp
push
jge
add
mov
lds
int
imulb
stos
cmp
outsl
mov
imul
cmp
and
and
jecxz
mov
mov
shr
and
ficoml
inc
fstpt
or
cmc
mov
xchg
stc
mov
xor
cmp
mov
aaa
cmpsw
adc
fstpl
cmp
aas
and
bound
pop
aad
mov
mov
push
inc
mov
mov
xchg
sub
ret
sub
ljmp
sub
sub
xchg
adc
js
adc
adc
int3
ds
scas
xor
jle
faddl
dec
xchg
bound
int3
dec
cmpsl
xchg
movsl
pusha
adc
shll
cwtl
xchg
xor
or
pop
mov
fwait
clc
add
push
hlt
bound
inc
data16
pop
mov
and
ja
mov
icebp
test
imul
xorb
stc
jp
nop
and
dec
imul
ja
push
sub
rorb
pop
or
lcall
test
xor
dec
dec
ds
aas
xor
fcoms
cmc
lea
imul
cmp
movsb
lds
ret
jae
dec
stos
xor
lcall
pop
imul
pop
add
scas
enter
mov
sbb
pop
xor
adc
xchg
scas
mov
add
mov
mov
lcall
fisubrl
push
test
xchg
adc
and
push
xor
aaa
out
std
sbb
ja
outsl
cmpsb
pop
xlat
inc
sub
repnz
mov
add
inc
sub
sub
and
sbb
add
cmp
or
dec
sub
pop
mov
icebp
movsb
and
adc
pop
jge
or
test
nop
out
shll
cmp
hlt
pop
cmpsb
cld
cs
inc
mov
outsl
sub
enter
flds
adc
fists
mov
orb
insl
clc
cli
jmp
daa
mov
test
test
jb
pop
call
inc
mov
mov
inc
cld
ret
movb
adc
xchg
push
and
and
sti
fnstsw
sahf
dec
sbb
inc
aad
insl
pop
and
jge
rorl
cltd
xchg
iret
adc
sub
and
mov
or
mov
stos
imull
bound
ja
push
xor
mov
pushf
push
ds
call
push
dec
cs
jo
sbb
test
add
ret
sbb
mov
shrd
jp
pushf
das
and
xchg
push
cmp
cli
mov
jo
cwtl
sbb
jnp
adc
ljmp
xor
adc
jp
fcmovb
out
loop
and
jmp
sarb
ret
ds
fsubl
inc
adc
insb
popa
jl
mov
outsb
outsl
icebp
popf
stos
mov
icebp
int
lahf
and
xchg
pop
and
xor
ret
sbb
mov
lcall
add
addr16
jecxz
push
inc
add
pop
shrb
mov
dec
sahf
adc
jno
repnz
aad
das
fwait
xchg
popa
mov
jae
out
sub
sbb
and
jmp
mov
fstpl
or
mov
adc
ds
shll
mov
sub
clc
push
int
dec
and
imul
dec
ss
movsl
leave
lret
add
fidivl
fnstenv
inc
mov
mov
mov
xor
in
mov
xchg
push
cmc
mov
scas
int
fdiv
or
repz
mov
arpl
adc
or
mov
jge
es
sub
push
stc
adc
xchg
xchg
adc
jmp
out
stos
mov
push
add
xchg
dec
xchg
dec
out
xchg
bound
popf
fs
add
push
shlb
and
push
aaa
cli
aas
mov
dec
pop
cltd
inc
fstpt
imul
pop
adc
mov
das
fcmovne
data16
mov
push
fdiv
insl
test
in
daa
stc
jge
fldt
mov
inc
push
mov
ficompl
dec
shrb
xor
not
dec
mov
out
cli
call
aaa
pop
cli
jecxz
adc
pop
and
jae
jo
pop
fistl
mov
jnp
inc
sti
cmpb
mov
and
mov
jecxz
call
sub
push
or
loopne
pop
xchg
push
dec
and
inc
fldcw
rcl
cmp
adc
sbb
into
pop
jns
test
mov
dec
shll
in
dec
pop
cwtl
ss
inc
sub
adc
jge
ja
repnz
push
push
mov
xchg
lds
dec
inc
sub
lcall
mov
jg
xor
out
sahf
push
enter
mov
lods
add
dec
xchg
dec
inc
add
xchg
mov
inc
andb
int
or
cmpsl
dec
enter
and
test
jno
or
sti
adc
and
cmpsl
in
pop
loopne
nop
test
cs
mov
inc
std
lods
sub
dec
cmp
stos
xor
out
in
addr16
mov
xchg
adc
dec
adc
stos
int3
loop
xchg
cli
xchg
aad
rcrb
jno
jo
mov
subl
mov
jae
mov
xchg
jbe
xchg
test
divl
sbb
mov
out
mov
lods
adc
test
mov
push
adc
jp
pusha
test
adc
cmpsl
repnz
xchg
mov
ds
adc
int3
icebp
imul
pop
xchg
and
add
pop
popa
mov
addr16
jae
rorl
pop
out
ret
xlat
mov
cli
scas
push
icebp
notl
fimuls
xor
xchg
cmpsl
dec
in
push
ss
lds
cmp
mov
sub
shr
imul
mov
xchg
add
pop
sbbl
push
sbb
scas
or
aas
cmp
cmpsl
mov
test
mov
hlt
data16
aad
jl
adc
pop
int
pop
loop
lcall
or
dec
fs
cmp
jge
sahf
push
adc
jmp
or
cwtl
leave
cmp
icebp
fcompl
in
inc
mov
and
icebp
mov
and
cmpsb
adc
xor
push
insb
outsl
idivl
ljmp
mov
mov
and
lods
pusha
das
jns
ret
push
addps
sub
and
fisttpll
add
mov
das
push
lret
xor
roll
inc
pop
jle
scas
dec
mov
dec
jae
and
lret
xor
pop
cmp
mov
pop
adc
rcll
fsubs
add
movsl
inc
pop
push
ret
das
inc
cmc
imulb
cmp
subl
orl
pop
stos
fsts
aam
ds
mov
imul
inc
lods
and
test
addb
xchg
push
das
jo
inc
mov
xchg
fisubl
mov
cmpsb
aam
adc
rclb
mulb
mov
inc
das
push
push
std
inc
adc
sub
inc
pop
dec
enter
push
jns
fistpll
out
clc
sbb
fsubrp
mov
cmp
mov
testl
push
test
dec
stos
inc
lds
cmp
scas
or
mov
in
xor
inc
mov
cld
dec
add
sub
scas
gs
sahf
rolb
and
mov
jne
in
imul
dec
leave
cmpsb
int
and
nopl
fsubr
sahf
and
xor
fwait
jne
mov
test
sbb
adc
adc
lea
fiadds
xor
push
xchg
sti
push
cwtl
dec
jae
pop
fisttps
pusha
mov
fnstsw
ljmp
scas
push
test
hlt
loopne
cmp
or
dec
mov
mov
jg
movsl
pop
and
loop
pslld
mov
jae
fwait
hlt
pop
xor
cltd
std
mov
inc
jp
cmp
fcoms
cmp
adc
cmp
and
sahf
cmpsl
or
rclb
pop
mov
jno,pt
add
xorl
ja
insl
cmp
stos
adc
int
mov
lcall
cwtl
pop
in
add
xor
sub
popf
push
mov
sbb
jo
mov
xor
in
fwait
push
popf
inc
lcallw
mov
mov
sub
cld
repnz
or
lock
mov
subb
les
cmp
icebp
or
push
pop
inc
ror
sti
ss
mov
enter
popa
jp
add
pusha
jb
inc
mov
lea
sub
test
lea
xchg
je
ljmp
dec
aas
mov
pushf
xchg
call
mov
push
mov
add
and
popf
mov
loopne
ret
arpl
movsl
dec
mov
sbb
cmp
add
loop
adc
roll
mov
xor
ror
nop
int
data16
mov
idivb
xor
lret
or
ds
push
pop
adc
das
xor
jo
cmp
or
fdivrl
mov
aad
adc
into
pop
dec
fisubrl
push
outsb
mov
cmp
mov
and
insl
andb
in
hlt
mov
mov
mov
and
inc
dec
test
in
adc
enter
sub
dec
ljmp
xchg
das
cmp
mov
or
push
insl
pop
cmp
xchg
fcoms
inc
test
jp
add
dec
xchg
outsb
movsl
jmp
xchg
hlt
mov
out
dec
jns
cmp
xchg
jmp
push
push
mov
daa
jne
cmpsb
scas
fistl
pushf
adc
into
xchg
cltd
lret
outsb
xor
fs
dec
shr
xor
das
jl
pop
iret
aad
lcall
mulb
imul
sub
ret
loop
scas
add
add
clc
fidivs
dec
in
inc
jl
dec
test
test
xor
pop
lods
jae
push
popl
lea
dec
push
leave
call
mov
mov
xlat
in
mov
xor
sahf
jge
loopne
stos
jbe
lods
loope
data16
and
loop
shlb
imulb
pop
shrl
sub
test
sub
adcb
cmc
sbb
inc
addr16
push
sti
inc
pushw
les
push
mov
jmp
cwtl
leave
loope
xor
mov
or
test
test
xchg
out
jle
sub
cmpsl
lcall
lgs
repz
push
lods
push
sub
jne
pushf
xchg
xchg
dec
mov
rcrb
or
dec
int
sbbb
popf
and
xchg
std
cmp
rorb
or
sahf
lret
pop
lds
or
pop
ljmp
out
xchg
inc
in
neg
xchg
xchg
sbb
movsl
jnp
icebp
movsb
cmp
xor
fisubrs
bound
dec
in
pushf
mov
clc
icebp
dec
cwtl
cmp
push
in
adc
or
arpl
xor
pop
xor
das
jb
sub
adc
pop
mov
leave
nop
dec
cmc
clc
jno
jle
xor
std
out
int
aas
fs
push
mov
adc
in
mov
in
xor
ljmp
or
xor
hlt
pushf
rcrl
pop
sub
xor
inc
or
dec
inc
cmp
add
xor
fwait
sbb
fmuls
stc
stc
pop
mov
sti
test
in
push
stos
jbe
adc
jbe
mov
sbb
mov
lods
inc
mov
fstps
push
xor
jae
cwtl
or
out
push
pop
xor
sub
or
add
ja
xchg
pop
push
testb
push
pop
or
xchg
cmp
adc
arpl
ficoml
dec
add
out
fbstp
pop
pop
mov
pop
fidivl
mov
mul
jnp
mov
xor
hlt
mov
popa
aam
add
hlt
hlt
dec
gs
pop
addr16
pop
or
stos
jg
pushf
pushl
out
dec
jge
pop
pusha
and
fs
or
in
adc
inc
lods
icebp
int3
inc
xor
aaa
jg
movsl
adc
and
adc
xor
cmp
rclb
sbb
incb
lahf
lcall
push
inc
fcoml
xchg
xchg
test
clc
cmpsb
cmp
mov
mov
pushf
xchg
js
push
js,pn
es
call
cmc
and
dec
sbb
cmp
jae
mov
mov
in
adc
insb
inc
repz
or
stos
xor
fidivrs
adc
aam
enter
xor
dec
mov
addb
ret
out
lret
pusha
mov
daa
jae
mov
add
adc
or
sbbl
imul
sub
lock
jle
dec
mov
test
dec
clc
add
pop
cmp
mov
cmp
lods
in
ret
sbb
cmp
jg
push
les
iret
ss
call
cmp
sbb
adc
mov
cmpb
push
repz
sarb
jl
cmpsb
pop
clc
sti
sahf
adc
xchg
scas
shrb
lahf
dec
arpl
daa
test
test
xor
or
pop
loop
sarl
test
in
js
das
clc
dec
inc
mov
xchg
jmp
xchg
and
mov
test
lods
js
mov
or
adc
repz
xchg
aaa
sub
dec
insl
sub
outsl
dec
test
int
sbb
or
mov
push
mov
movsb
or
loopne
mov
and
push
fistpll
sti
fldl
mov
fsubr
sbb
negl
test
sub
std
adc
lret
stos
stc
sbb
idiv
fs
ret
cwtl
dec
push
dec
pop
jo
lcall
cmp
dec
adc
mov
xchg
sbb
ret
xor
cltd
scas
mov
add
xchg
xor
mov
cltd
pop
daa
xchg
inc
xor
mov
fadd
xlat
roll
into
cmp
jo
clc
pop
pop
dec
lds
sub
mov
iret
or
movsb
subl
mov
shlb
stc
mov
and
shlb
or
int
out
repnz
in
dec
iret
pop
jno
movsl
fnstsw
pop
bound
daa
xchg
xor
addr16
sbb
and
sub
inc
push
cmp
dec
andl
xchg
mov
outsl
xor
out
inc
cmp
or
sbb
fiadds
push
enter
sbb
mov
push
scas
xchg
or
aad
stos
push
stos
jmp
lahf
lea
jb
adc
js
dec
mov
fisubl
xor
jne
mov
adc
pop
mov
lock
lea
mov
adc
jmp
in
stos
aaa
mov
push
cld
cmp
jl
jno
sti
mov
adc
adcl
lods
jmp
lods
cmp
mov
cmc
mov
imul
sbb
jl
rcll
ret
sbb
stos
mov
mov
fistl
add
mov
shlb
inc
lds
pop
lods
ficoml
out
cs
out
pop
js
test
ret
sub
cmpsl
ja
imul
testb
mov
xchg
mov
orb
fidivs
pop
mov
xor
mov
or
aaa
in
cmpsl
in
and
orb
sahf
adc
mov
dec
sub
xchg
ss
mov
cmpsl
xor
test
cltd
xchg
push
imul
out
inc
sahf
jg
push
mov
rol
cmpsb
push
mov
push
out
imul
xor
xchg
adc
ret
lea
ljmp
shrb
add
push
dec
out
das
shlb
inc
cmp
out
out
in
imull
add
inc
sar
push
inc
cmp
inc
dec
emms
pop
jae
ds
sbb
mov
sub
test
fwait
inc
cli
ret
xchg
push
lds
cs
push
jl
negl
leave
jae
enter
addr16
jbe
imul
mov
jmp
and
jns
push
pusha
adc
jge
jae
out
cmpsb
add
fwait
cmp
add
lods
mov
fadd
iret
mov
cmp
dec
jmp
mov
or
inc
fisttpl
nop
je
inc
adc
xchg
pushf
pop
lret
sub
and
pop
jbe
mov
rorb
dec
mov
push
pop
fisubl
fldcw
stos
dec
icebp
jb
mov
mov
mov
mov
or
aam
stos
xchg
inc
cmpsb
mov
or
cli
shl
inc
jg
mov
daa
mov
jp
cmpsb
lock
xchg
mov
ljmp
sti
lods
testb
popa
xchg
psubd
inc
or
in
jmp
add
into
mov
ret
dec
out
mov
dec
movsb
in
sbb
out
sub
sub
and
enter
pop
sub
mov
mov
or
xchg
push
mov
nop
or
faddl
and
or
dec
fadds
or
and
and
add
out
mov
xor
into
or
push
and
loope
or
ficompl
insb
adc
lcall
adcb
lea
cmp
and
jmp
daa
aaa
jge
push
jge
cmp
into
sub
xchg
jp
loopne
mov
mov
data16
lahf
pop
xchg
cmp
cmp
mov
cltd
jecxz
mov
sbb
movsb
and
fisttpl
mov
fistl
jle
pusha
loop
xchg
xlat
shrl
leave
ja
imul
js
sub
inc
push
lret
es
mov
xor
stos
rorb
sbb
mov
insb
testb
xchg
xchg
jmp
mov
nop
aad
arpl
jmp
inc
cmp
add
fisubrl
xchg
add
hlt
daa
pop
ret
push
dec
jmp
ss
loop
adc
pop
adc
int
xor
outsb
sbb
mov
out
aas
xchg
or
out
jbe
ror
lahf
mov
lods
stos
sub
add
int
lea
mov
mov
mov
mov
mov
pop
mov
mov
push
mov
cmp
inc
ror
lret
popf
mov
cltd
popf
inc
leave
cmp
push
pop
inc
loop
or
or
mov
test
dec
push
sbb
jp
movsb
or
sbb
call
dec
outsl
ficoms
cmpl
xor
xchg
jmp
mov
sbb
sub
inc
pop
sub
or
sbb
mov
daa
out
filds
and
mov
and
mov
cli
mov
in
add
pop
std
cld
nop
cli
adc
pop
mov
mov
mov
sbb
filds
push
aas
fs
dec
pop
pop
fmuls
fwait
push
dec
bswap
push
mov
or
pop
or
push
mov
shll
aad
adc
xor
inc
ds
and
xchg
aad
push
push
push
push
in
xchg
ss
aam
ffreep
lods
or
xchg
sbb
mov
mov
or
lret
popa
xor
jae
or
pop
cmp
sub
lahf
push
jo
adc
sbb
and
pop
cmp
jmp
ljmp
or
imul
xlat
lods
xchg
push
insb
in
cmp
mov
repz
js
mov
cli
mov
popf
sahf
aad
es
cld
scas
jge
cmp
mov
imul
sbb
pop
inc
popf
movsl
xor
rcr
mov
add
sbb
push
loopne
sub
jns
pop
test
adc
test
push
mov
loope
repz
mov
insb
mov
xchg
push
mov
adc
mov
movl
out
push
stc
imul
mov
sbb
sbb
hlt
xchg
pop
cmp
mov
xchg
addr16
ret
in
add
jae
lahf
daa
push
movsl
lds
pop
cmp
xchg
push
adc
negb
ja
xor
cwtl
popf
cmc
and
clc
push
addr16
inc
mov
out
cmpsl
mov
lods
dec
repnz
add
insl
push
mov
jnp
mov
mov
sar
nop
pop
loopne
pop
fldenv
fnstsw
aad
fdivl
adc
jl
adc
push
leave
cmc
fcmovb
out
mov
push
ja
mov
sbb
fisubrl
mov
pop
js
jge
and
cwtl
adc
pop
shll
push
rcrb
daa
sbb
mov
pop
mov
fsubrs
xor
add
sahf
inc
pushf
lahf
leave
repnz
aas
dec
jmp
scas
aaa
testl
add
mov
subb
push
mov
scas
lds
dec
sahf
andl
fnsave
outsb
jb
and
mov
mov
subb
ffree
xchg
aaa
jmp
xor
lock
adc
inc
sub
or
cmp
out
inc
adc
imul
insl
pop
or
in
mov
nop
aad
cmp
jle
adc
push
mov
jg
fs
je
mov
pop
loope
fists
jmp
ficomps
cmp
hlt
or
sub
sarl
jp
jae
or
movl
sub
cltd
xchg
fimuls
mov
sbb
xor
inc
into
dec
or
int3
es
sahf
xor
push
gs
ret
mov
imul
test
dec
std
xor
out
gs
mov
jl
or
and
std
js
movsl
ljmp
cli
mov
pop
adc
sub
and
pop
mov
clc
mull
mov
pop
pop
mov
repz
dec
aad
enter
fdivrl
addb
jecxz
mov
and
jo
dec
fdiv
fs
jg
sub
mov
lea
loope
mov
in
hlt
test
xor
inc
in
ret
adc
fs
mov
or
addr16
mov
lock
inc
loope
mov
jno
inc
repz
jl
dec
and
cvtdq2ps
inc
sub
xorb
test
int
mov
lret
inc
movsb
sbb
inc
repnz
jo
and
mov
dec
rcl
inc
jnp
dec
jne
stos
mov
nop
cmpsb
mov
mov
cmc
xchg
dec
out
fstl
mov
movsb
imul
cs
fmuls
test
test
adc
clc
test
call
jb
mov
andl
xchg
add
sbb
cmp
cmp
icebp
cmpsl
rcrl
mov
xchg
and
int3
jne
rorb
pop
loopne
adc
mov
dec
pop
lret
lock
roll
fnstsw
mov
and
ds
mov
cmp
sub
sub
stmxcsr
mov
sub
xchg
cltd
sti
or
aas
mov
lods
dec
mov
add
pusha
cmp
xchg
cmp
scas
mov
push
sub
incb
shll
lock
jb
dec
add
xchg
out
mov
dec
setge
into
xchg
sbb
xchg
jge
pop
jo
add
sahf
xor
dec
mov
lock
aas
inc
add
or
out
icebp
arpl
mov
into
xchg
mov
insb
hlt
std
cmp
and
pop
mov
pop
or
cli
ret
ds
jbe
inc
clc
les
add
sub
imul
xor
aad
push
jbe
jnp
xor
lods
sbb
jnp
leave
jae
pushf
sub
fdivr
push
push
sub
xchg
push
das
xor
jbe
loop
cwtl
sub
pop
mov
push
push
xorb
fwait
push
lds
push
jne
cli
jle
sub
aas
in
sbb
in
jp
jo
int3
jno
pop
jno
les
mov
lcall
xor
out
mov
and
dec
cld
inc
mov
xchg
mov
inc
adc
or
xchg
stc
clc
scas
addr16
ret
mov
push
testb
mov
xor
test
pop
lret
lcall
cmp
js
sub
xchg
repz
cmp
clc
imul
popf
rcll
push
pop
inc
cmpsb
mov
inc
aad
push
lcall
out
out
dec
or
aaa
jns
aam
lods
mov
loope
shrl
jmp
rorb
in
pop
inc
outsl
mov
out
mov
lret
inc
push
pop
sbb
inc
xorb
ja
push
mov
pop
or
test
je
addr16
push
js
lret
dec
jmp
pushl
mov
push
push
js
cmpsb
lds
shll
fs
mov
push
xor
test
dec
dec
call
lds
push
iret
pop
lods
jno
and
jg
cwtl
das
fwait
imul
fldl
loope
xchg
xor
xor
mov
movsb
sub
mov
daa
cmc
iret
jmp
dec
jb
mov
jecxz
jb
std
mov
jl
jbe
pop
xchg
dec
mov
test
xor
inc
add
daa
fs
aas
xchg
push
ret
imul
mov
lods
sub
push
cltd
into
and
xchg
fwait
push
mov
jns
xchg
pop
test
test
jp
imul
sahf
inc
dec
jg
adc
mov
mov
das
insl
scas
sbb
sub
jnp
sbb
push
or
add
or
aam
repz
arpl
popa
xchg
jns
cmp
cwtl
je
cld
or
test
popf
jae
push
and
rcl
ror
mov
push
int
cmpl
outsl
cmp
mov
cmpb
or
adc
loop
mov
clc
pusha
lret
inc
cs
aas
mov
mov
cmpsb
int3
mov
pop
stos
test
sub
stc
movsl
adc
aam
jae
scas
push
xchg
lret
stc
ds
popf
pop
rol
add
jbe
sub
dec
xor
and
out
scas
push
into
scas
mov
jno
out
nop
inc
popa
mov
aad
adc
imul
sbb
sub
xchg
sbb
clc
inc
dec
inc
movsb
insb
jg
mov
xchg
mulb
pop
popf
or
add
mov
push
addr16
jne
inc
adc
pop
or
fstpl
call
lret
in
and
push
xlat
cmc
push
mov
jnp
xlat
and
test
push
mov
mov
push
leave
gs
add
das
movsb
push
sub
inc
loope
push
pop
mov
cmpsl
das
pop
repnz
jbe
std
add
std
mov
fdivrl
and
cwtl
sub
xchg
xchg
add
flds
aad
cmp
in
jge
pop
imul
cs
pop
fnstenv
and
push
mov
js
dec
xlat
sub
popf
push
pop
es
out
mov
sbb
adc
jo
mov
cmp
orl
jmp
shrl
pop
dec
mov
mov
mov
insl
mov
lahf
and
jne
pop
lods
and
rorb
fs
outsl
gs
out
ljmp
js
mov
mov
cs
in
cld
sbb
pop
pop
aaa
imul
out
inc
jo
std
mov
ss
clc
and
cmp
sbb
adc
mov
aad
push
mov
and
dec
cli
jnp
shrl
add
push
call
jmp
aas
lahf
imul
outsl
cmp
push
sub
mov
test
mov
les
les
sub
das
mov
xchg
ljmp
stc
movsl
pusha
outsl
fnsave
sub
js
and
dec
cmp
out
lods
xchg
mov
mov
rclb
aam
adc
lret
mov
push
mov
push
pop
mov
shrb
pop
fadd
in
fimull
mov
sbb
cmc
jo
sub
loopne
out
cli
or
push
inc
mov
cmp
add
js
js
lea
inc
and
jno
mov
dec
sub
shrb
xchg
arpl
lret
dec
and
arpl
cmpsl
test
sbb
loopne
pop
cmp
std
adc
out
int3
adc
lock
xchg
fs
push
adc
adc
add
mov
test
cmp
mov
cmpsl
push
les
and
rcll
and
dec
pushf
inc
or
pop
push
xlat
dec
push
adc
movups
sbb
push
aam
and
out
push
sti
xchg
cwtl
aam
in
push
jmp
mov
jno
xlat
sbb
andb
add
inc
xorl
arpl
mov
sub
mov
adc
mov
rorl
inc
mov
fdivp
push
add
or
push
push
leave
cmp
xchg
loopw
int3
add
inc
dec
shll
add
outsl
out
ljmp
ja
les
adc
rorb
stc
repnz
pushf
xorb
dec
xchg
mov
ret
push
jae
and
jne
jno
adc
add
out
cmpsl
in
outsl
xchg
pop
je
aaa
ret
sub
cli
sbb
mov
xchg
mov
inc
addb
sub
or
mov
xchg
orl
dec
xlat
loopne
push
mov
mov
pushf
in
mov
dec
lock
mov
test
fwait
jge
repz
sbb
adc
ret
or
shrb
roll
test
lahf
mov
mull
in
movsl
push
xor
xor
sub
out
adc
dec
mov
mov
lret
pop
lds
std
push
dec
jmp
mov
cmp
int3
or
push
dec
inc
insb
adc
rcrl
movsb
dec
arpl
dec
fidivrl
xor
imul
push
cmp
loop
jecxz
pop
mov
add
inc
push
sub
fbld
loope
mov
orb
outsl
and
les
dec
and
xor
pop
fcmovu
add
fwait
imul
push
sub
dec
or
popl
lds
jg
adc
cmp
cmp
lcall
hlt
ficoml
pop
cmp
xchg
rorl
pop
xchg
icebp
inc
insl
xchg
xchg
loope
push
add
test
mov
inc
sbb
lea
js
ss
addr16
xchg
add
push
cmc
dec
pop
cmp
daa
pop
mov
cmp
cmp
sub
or
aam
popa
sti
or
jns
stos
jmp
sbbl
lahf
insb
sub
enter
pop
push
xchg
mov
in
cmc
int3
xor
pusha
icebp
sbb
inc
push
xchg
jbe
mov
jne
data16
ja
and
fidivl
jne
xor
fstl
xor
xchg
add
jle
dec
cmp
dec
dec
mov
sbb
mov
xchg
rolb
cltd
pop
sets
popa
xor
pop
jmp
stos
sarb
jp
rorb
lcall
or
mulb
mov
xor
push
jle
cmp
push
lcall
sahf
pop
mov
mov
pop
jnp
dec
inc
or
push
stos
or
or
test
sub
mov
jp
loope
lcall
stc
shr
movsb
imulb
push
fmuls
aaa
pop
mov
and
xchg
hlt
in
pop
ljmp
xor
lods
and
add
cmp
cmp
push
fs
pusha
sbb
pushf
mov
outsl
loopne
dec
es
ja
xchg
test
inc
je
push
inc
repz
pop
mov
sarb
in
fimull
sbb
sahf
mov
arpl
into
enter
and
pop
cmp
and
jbe
movsb
stos
xlat
fists
hlt
fildl
ljmp
inc
cmp
cmp
fistps
jo
mov
popf
sbb
into
pop
rcr
lcall
jae
inc
lock
in
mov
push
add
mov
js
lahf
test
add
bound
mov
out
or
mov
loope
pop
and
pop
sub
pop
xor
lret
aam
jecxz
or
fsubr
push
mov
inc
push
test
arpl
sahf
in
insl
jnp
cld
arpl
bound
cmp
and
sub
in
jnp
data16
cmp
bound
lock
test
mov
outsb
sti
movsl
dec
sahf
mov
jl
adc
sar
lds
in
aaa
xor
popa
or
sbb
jb
sub
ret
mov
jae
inc
push
xor
hlt
jp
xor
add
adc
ret
jbe
pop
sub
jg
loope
lcall
dec
dec
fidivrl
out
js
push
imul
inc
std
add
pop
jecxz
or
subb
and
loope
lahf
dec
lret
adc
ss
stos
xor
bound
or
or
mov
xchg
dec
adc
pop
inc
loope
add
ljmp
push
mov
pusha
lret
xchg
daa
aas
adc
xchg
sahf
xorl
bound
gs
fstl
enter
dec
and
pop
jp
push
fdiv
lds
in
lock
fwait
dec
lret
inc
inc
cmpsb
cld
jp
popf
push
dec
sbb
fstl
xchg
popf
out
scas
xchg
stos
loop
scas
subb
popf
fistl
lcall
sub
xchg
aas
shrb
mov
std
jle
xchg
push
cli
sbb
adc
or
iret
fdivl
ret
repz
sbb
xchg
mov
jg
mov
outsb
daa
sbb
push
pop
mov
les
iret
sub
popa
repz
add
jo
jmp
jecxz
xchg
cld
idivb
inc
mov
scas
and
sub
sub
arpl
xchg
sbb
ja
xchg
call
call
cmp
in
jp
loope
rorb
add
aas
dec
or
xor
jne
movsb
lea
mov
mov
mov
inc
jmp
mov
xor
xor
sub
cs
jmp
mov
aas
mov
and
mov
jle
push
mov
in
xchg
xchg
push
out
or
mov
fisttps
or
pushf
mov
mov
cs
adc
rorb
jecxz
jg
scas
icebp
js
and
dec
cld
loope
add
ja
push
test
ss
jp
arpl
add
adc
push
dec
xchg
fmull
cmp
mov
mov
jb
fldt
adc
push
xchg
loope
and
popf
sarb
xchg
xor
xor
rolb
movsl
fsts
cmp
cmp
jle
xor
mov
int3
fbld
adc
inc
xchg
cs
repz
les
inc
gs
lcall
out
repz
pop
lret
repnz
imul
jp
and
mov
pop
stos
cmp
pop
test
cli
stos
repz
into
dec
ja
jbe
xchg
stc
cmc
mov
data16
adc
rorb
xchg
adc
jp
push
sub
xor
insl
gs
fwait
sahf
scas
rolb
xchg
shlb
lods
mov
aas
into
shl
add
add
dec
lods
push
xor
jmp
jne
dec
repz
enter
leave
mov
jae
shl
inc
subb
stos
aam
xor
xor
dec
jae
mov
outsb
and
or
mov
scas
stos
mov
lahf
cmp
mov
xor
movsl
pop
das
sti
push
imul
scas
outsb
xor
push
aaa
dec
cmpsb
xor
fidivrl
push
mov
cltd
or
add
mov
push
jno
add
cmc
push
and
jbe
bound
dec
jp
ja
ljmp
in
cmp
sub
icebp
jnp
pop
pop
movsb
add
fs
mov
pusha
inc
fldt
clc
xchg
hlt
jnp
jbe
rolb
xchg
adc
cmpl
cld
aad
push
pop
jge
jmp
mov
mov
cld
mov
test
lds
arpl
test
sub
sahf
cmp
jns
mov
cld
sub
dec
xlat
cli
es
mov
inc
imul
pop
inc
das
lret
cmp
sbb
fistpll
fdivl
not
cwtl
and
jp
fisttpl
lea
sub
pop
les
mov
cmp
push
aad
xor
add
dec
pusha
xchg
aaa
jb
aam
scas
popa
cmp
mov
mov
mull
mov
xchg
movsb
nop
inc
jae
inc
xor
insl
cmp
imulb
std
or
add
or
xchg
out
mov
cmp
movsl
xchg
fistpl
xchg
mov
adc
les
loop
mov
into
int
sub
pop
xchg
dec
inc
aaa
out
pop
fistps
jl
addr16
lock
pop
and
popf
adc
add
js
mov
lret
jns
pop
imul
mov
shll
mov
sbb
into
sub
mov
lods
cmp
adc
mov
pusha
shll
mull
jecxz
xchg
dec
lock
clc
jmp
push
jno
data16
stc
xchg
sti
test
test
mov
mov
data16
push
xor
adc
xchg
enter
inc
pop
or
icebp
and
mov
xor
ja
and
andl
and
addl
mov
jle
loope
call
jb
sub
jbe
std
jbe
gs
fbstp
xchg
fdivrl
mov
mov
in
popa
lods
xchg
data16
or
aad
sbb
lods
xchg
shll
mov
xchg
mov
lods
xchg
icebp
pop
jecxz
sub
xchg
inc
xor
pop
hlt
or
out
mov
subb
and
mov
add
jb
add
dec
adc
outsl
add
cmp
iret
test
inc
pushl
or
dec
inc
mov
cmp
mov
insb
outsl
outsl
mov
cmp
mov
sbb
jg
jecxz
gs
icebp
in
lahf
ds
rcll
lods
lcall
jno
cmpsl
sub
rclw
adc
ljmp
lods
jbe
mov
mov
xor
push
imul
xor
mov
and
inc
adc
fnsave
lcall
lods
nop
out
shrb
icebp
out
dec
xor
stc
js
mov
fstpl
xlat
shll
into
pop
inc
loope
mov
inc
lcall
mov
xor
jno
insl
or
adc
mov
in
lock
fimuls
xor
lea
repnz
out
mov
sbb
inc
xchg
inc
enter
and
arpl
mov
addr16
cwtl
lds
xchg
pop
sbb
dec
repnz
shlb
out
xor
outsl
pushf
inc
rcl
dec
test
dec
push
lret
out
jmp
imul
push
mov
or
mov
insb
inc
mov
add
xor
jg
jl
jbe
lahf
sub
adc
mov
push
inc
sti
mul
scas
jnp
dec
jne
xor
rcll
or
pop
dec
xlat
fbld
inc
adc
add
adc
cmp
das
push
cli
adc
fs
sti
inc
dec
mov
push
or
lret
fwait
push
inc
xor
lahf
into
push
lret
mov
in
lahf
sbb
clc
fists
mov
aam
outsb
push
test
xchg
pop
pushf
fisttps
inc
sub
data16
push
sub
xchg
stc
or
sbb
nop
mov
stc
lods
push
jle
xchg
push
push
mov
add
lods
mov
das
pop
push
mov
ja
lock
mov
and
fnstsw
mov
push
add
cmp
dec
fxam
iret
hlt
in
pop
aad
pop
and
xor
or
xchg
xchg
sbb
mov
dec
lods
push
es
ficoms
mov
add
loopne
inc
adc
leave
ja
inc
jne
lods
cld
mov
mov
jg
rcrb
cld
jns
and
jg
ds
sarl
add
scas
in
pop
lods
outsb
xchg
cltd
lret
dec
sbb
sti
adc
fldt
shll
jmp
dec
xor
lret
cltd
lea
insl
test
lea
sub
jge
bound
mov
icebp
imul
call
out
rclb
inc
cmp
pushf
lahf
in
lea
jbe
nop
les
cli
inc
sbb
xor
call
add
pop
xchg
push
out
rcr
orl
mov
add
cwtl
push
sbb
ret
roll
push
inc
jnp
xchg
in
sti
jecxz
jbe
je
cmp
ds
push
push
icebp
imul
jb
call
int
inc
mov
daa
xchg
or
aaa
fnstenv
push
fisubrs
call
push
xor
cmp
les
aam
jle
add
dec
ja
sub
int3
mov
sahf
add
cmc
inc
cmc
punpcklwd
inc
lds
jl
xchg
outsb
jge
movsl
clc
xchg
outsb
inc
and
dec
loopne
stos
mov
sbbb
scas
or
dec
cmp
pop
negl
xor
rcrl
das
in
ljmp
mov
mov
cmc
mov
xchg
dec
and
push
sub
mov
adc
jbe
adc
jne
shl
mov
aam
je
popa
jae
or
push
fiaddl
sbb
mov
stos
or
jo
cwtl
cmp
pop
push
scas
icebp
sbb
in
mov
jle
js
add
outsb
xor
outsl
pop
rorb
jae
into
test
addr16
adc
in
push
daa
js
ret
cmp
out
mov
ja
mov
mov
test
mov
mov
test
faddl
push
mov
rcl
sub
or
cmp
mov
enter
pop
push
out
sbb
mov
insl
imul
test
data16
jg
scas
mov
push
dec
mov
pop
xchg
xlat
icebp
or
scas
push
scas
mov
mov
imul
mov
mov
mov
jmp
or
hlt
unpcklps
out
jae
and
in
inc
pop
fbld
xor
add
outsb
inc
mov
stos
sbb
scas
mov
insl
lret
std
mov
loopne
divb
fisubl
insl
push
mov
in
fimuls
test
into
or
ja
arpl
and
xchg
lods
adc
xchg
lods
mov
adc
cltd
loopne
je
sbb
or
loop
adc
and
inc
mov
enter
jo
inc
daa
arpl
mov
daa
jb
mov
push
jo
and
fwait
in
test
jne
pop
test
aad
loopne
mov
pop
jns
mov
jle
repnz
dec
xor
mov
pop
xor
cmp
push
and
push
push
outsb
fcoms
shr
in
iret
xchg
jbe
das
flds
mov
jb
leave
mov
sbb
push
lret
sub
test
xchg
dec
xor
lea
xor
cltd
iret
jbe
push
sub
pop
loop
movb
out
adc
or
inc
pop
pop
mov
aaa
test
hlt
dec
test
xchg
cwtl
mov
pop
mov
ss
pop
mov
jnp
add
lds
enter
mov
and
idivb
movsb
jmp
mov
push
ret
inc
adc
aad
lds
cmp
cwtl
inc
mov
mov
mov
out
mov
xor
or
ss
stos
cli
lahf
adc
jg
das
xlat
enter
rorb
in
cld
jo
cwtl
scas
push
dec
loopne
xchg
out
jno
sub
cltd
out
dec
xor
fs
in
add
jp
inc
cmpsb
pop
mov
push
adc
sub
pop
push
mov
push
hlt
jmp
inc
add
test
fcompl
jne
mov
in
cwtl
cmp
mov
cltd
pop
dec
xchg
popf
jno
popf
dec
pop
in
sbb
mov
aaa
scas
push
push
push
sub
jge
mov
xchg
jns
popa
mov
cmpsl
std
jl
pushf
adc
icebp
lds
sti
test
adc
dec
add
lahf
rorl
idivl
fwait
inc
pop
in
push
std
push
lea
adc
sub
jecxz
dec
das
and
scas
and
inc
cmpsl
sti
adc
dec
xchg
xchg
in
inc
cwtl
and
loopne
scas
pop
or
movzwl
dec
or
aas
push
xor
out
and
aad
fwait
in
sub
enter
pop
adc
jb
cmpsl
cmc
sbb
aaa
cmp
mov
inc
arpl
jmp
loop
arpl
xchg
mov
gs
xchg
mov
ljmp
cwtl
add
dec
in
out
and
dec
and
fmull
fwait
dec
cmpsb
add
jno
inc
insl
push
mov
movsb
mov
mov
dec
mov
aaa
inc
pusha
pusha
int3
dec
add
out
xorb
test
clc
movsb
and
jns
push
cmp
and
pop
rolb
jp
js
pushf
dec
ret
aas
xchg
rorb
pop
shlb
jle
push
movsl
and
icebp
xchg
div
jle
outsb
in
dec
pop
outsb
pop
bound
int
sub
push
icebp
xchg
pop
cld
cmpsl
mov
sti
movsb
and
lret
dec
and
insb
push
cmp
inc
or
mov
das
fldenv
out
add
add
pop
pop
cmpsl
pusha
or
out
jp
xchg
icebp
jne
gs
mov
inc
jl
dec
mov
mov
fwait
lret
loop
inc
lds
testb
push
ror
adc
cwtl
gs
mov
lret
add
leave
dec
sbb
mov
lods
lret
inc
pop
movsb
push
jbe
mov
pop
addr16
mov
inc
test
sbb
xchg
aam
or
inc
add
je
ret
out
xlat
xor
cmp
add
sub
xchg
test
cmp
fwait
out
fs
mov
out
out
sub
add
dec
popa
enter
pop
pop
test
push
inc
sub
inc
mov
mov
loop
inc
pop
out
lahf
call
inc
mov
mov
enter
ljmp
xchg
jne
cmpsl
gs
cmc
lahf
sub
decb
out
xor
outsb
fstl
fnstenv
std
dec
shr
adc
pop
jp
ja
out
outsl
mov
or
stos
adc
jp
fisttpl
add
sub
jo
dec
gs
pop
clc
jg
xor
in
ljmp
xchg
fcoms
popa
sbb
mov
xchg
mov
fcompl
test
out
push
push
dec
in
nop
repz
outsl
pop
cwtl
popf
es
add
mov
orb
ret
xchg
andb
push
jo
leave
push
lcall
lea
sbbl
je
ljmp
xor
clc
cli
jg
inc
xchg
jl
and
jecxz
es
xchg
and
ud1
cld
adcl
in
nop
xchg
jge
mov
dec
fs
xor
dec
out
stc
xchg
inc
arpl
or
xor
loope
sub
in
or
xchg
adc
pop
hlt
addb
and
sahf
jp
pop
imul
lock
push
int3
pop
pop
push
stc
sub
imul
or
jle
imul
pop
repnz
or
mov
rcll
push
lods
sub
inc
int
jp
push
cmpl
jecxz
loope
mov
inc
and
aam
repnz
inc
andb
mov
pop
daa
andl
inc
xor
sbb
dec
sub
dec
mov
adc
fimull
xor
or
and
mov
xor
and
fstl
xchg
sbb
mov
je
dec
pop
ja
xchg
sub
jmp
mov
pop
push
push
loop
ss
pushf
stos
in
push
ja
inc
fs
popa
out
call
xor
stc
popf
inc
jnp
cld
add
mov
jge
jns
ds
mov
outsb
stos
mov
mov
cmpsb
cmpl
dec
in
xor
bound
push
add
pop
and
dec
cmp
jle
loope
int3
jmp
push
mov
pusha
das
jecxz
dec
add
pusha
xchg
xchg
inc
fwait
repz
xor
pop
push
sbb
or
add
or
sbb
jle
mov
pop
insb
inc
xlat
clc
add
inc
rcll
inc
add
pop
ljmp
jae
jae
cmp
jnp
shrl
popf
add
sub
shll
in
add
inc
ds
ja
pop
fcmovnu
jne
and
cs
aas
in
jp
mov
insb
mov
lcall
cmp
or
add
mov
cltd
cmp
leave
jae
xchg
xorb
fimull
pop
insl
adc
add
mov
test
jp
outsl
jmp
or
mov
int
addr16
cmp
shld
ret
and
into
insl
mov
add
out
mov
adc
addr16
dec
test
fisubrs
push
push
aam
bnd
leave
fabs
pop
leave
jnp
jno
int3
adc
sub
inc
cmpsl
or
insb
pop
or
sub
cs
dec
push
cmpl
xchg
stos
inc
xlat
lods
pop
push
add
xchg
and
mov
cmp
scas
icebp
repz
add
and
icebp
sbb
mov
out
imul
xchg
xor
sub
push
xchg
in
fwait
hlt
sub
lock
sbb
movsl
lds
ja
repz
ret
sub
xchg
int
add
mov
jnp
jecxz
xchg
in
stc
out
iret
cmp
lahf
sub
jmp
iret
fcoms
mov
xor
in
ficomps
addr16
gs
out
fmul
call
icebp
push
jg
imul
shrl
jbe
sbb
or
xchg
and
mov
xchg
rolb
xchg
fmull
imul
rcll
pop
imul
mov
cmp
xor
call
push
ret
rorb
aas
xchg
test
mov
pop
fmuls
cmp
int
aas
dec
test
jbe
sarl
sub
pop
in
hlt
imul
ficompl
lahf
cmc
clc
cmp
loop
inc
sbb
inc
sbb
cmp
mov
push
mov
ds
push
cmp
adc
in
popl
es
pusha
sub
push
jecxz
lods
lret
sub
outsb
or
mov
enter
push
iret
imul
mov
xchg
sti
cmpsl
sar
add
sahf
dec
push
call
cltd
lret
imulb
add
xchg
sub
insl
sub
mov
sub
cmp
cld
push
sub
and
push
or
lahf
lods
mov
jle
push
ja
mov
pop
push
push
cmc
push
fmull
gs
iret
iret
or
add
jb
scas
int3
adc
ret
stc
testb
mov
icebp
dec
lret
mov
iret
stc
mov
push
call
mov
jo
sar
jmp
push
sbb
jae
add
sub
das
dec
push
or
movsl
dec
cltd
popf
sahf
cmp
lods
xchg
cmp
sub
clc
xchg
add
pop
flds
je
push
dec
insl
push
and
or
adc
push
push
add
pop
rcrl
jp
mov
lcall
cmp
fimuls
add
xor
cmp
cmp
jle
push
xorb
fwait
dec
cmpsb
test
scas
dec
gs
in
rep
ds
cmpsb
rcll
push
jo
mov
data16
pop
mov
pop
sub
jno
arpl
clc
mov
mov
jo
inc
push
xchg
sahf
fmull
xchg
outsl
mov
lret
sti
jo
add
add
jmp
adc
test
mov
cmp
adc
xor
clc
add
jbe
call
in
xchg
outsb
cltd
cmp
leave
in
inc
sub
adc
icebp
xorl
and
fs
stos
popa
mull
jne
enter
jle
sub
enter
cmp
xor
sbb
mov
add
notb
or
xchg
imul
out
add
rcr
std
popa
scas
test
sti
or
xor
lds
mov
fwait
mov
in
loopne
popa
in
fists
mov
mov
movsb
addl
pusha
lds
and
ss
lods
sub
mov
jmp
scas
adc
iret
into
outsb
lea
int
int3
into
xchg
in
mov
ficoms
out
loopne
xchg
sbb
xchg
push
pop
in
add
in
aaa
lahf
xchg
jge
mov
dec
add
in
xor
mov
sbb
aaa
andl
push
aad
jp
xor
das
xlat
test
push
inc
mov
add
std
and
loopne
jle
jle
adc
out
sbb
test
cmp
cwtl
sub
fists
jge
cwtl
push
xchg
lods
loope
jns
jae
outsb
push
mov
pop
sub
jns
cwtl
push
jns
cwtl
sbb
es
loopne
jge
mov
inc
mov
inc
add
jne
loope
jbe
pop
in
or
cmpl
push
lahf
fcompl
movsl
push
rol
mov
and
popa
ljmp
push
in
or
aam
xchg
or
add
stc
aas
inc
js
jns
mov
pop
sbbb
test
fcmovbe
imul
or
add
dec
cmp
push
and
push
xor
jmp
ret
cmp
cmc
hlt
outsb
clc
aas
jg
mov
or
mov
aaa
jns
sbb
outsb
outsl
in
popf
clc
mov
adc
mov
int3
and
pop
cltd
mov
dec
sahf
mov
gs
xchg
pop
or
rolb
cwtl
pop
or
enter
push
icebp
inc
and
cli
aas
sub
lahf
add
fdivrs
decl
xor
xchg
lods
sub
sub
add
movsl
mov
fsubrs
inc
es
jns
jge
or
pop
insl
aad
mov
call
xchg
cwtl
ret
lods
xchg
cmc
and
mov
jnp
mov
sarl
in
fisubs
mov
shll
and
mov
push
mov
jnp
lret
sub
lods
fs
es
in
jmp
imul
ret
jp
shl
cmc
in
pushf
sub
in
inc
cmp
cmp
xor
lods
cltd
mov
dec
xchg
xor
dec
adc
mov
fxtract
sub
pushf
jmp
icebp
jg
xchg
dec
mov
dec
add
push
rclb
lea
jno
call
and
rorl
fisubl
icebp
cltd
orb
out
repz
popa
iret
or
cmp
xchg
dec
dec
push
pop
mov
in
pop
mov
lahf
or
leave
ret
mov
loope
outsl
xchg
pop
call
pop
aam
sbb
testb
cmp
outsl
cs
xor
adcb
int
xor
xchg
adc
jo
repz
add
scas
dec
hlt
int3
lock
scas
jmp
push
repz
mov
call
fisubrs
mov
pop
test
popa
or
jo
loopne
push
pop
incb
dec
sbb
inc
ss
xchg
leave
pop
test
nop
add
push
cld
les
or
call
sub
ficoml
jmp
sarb
sub
add
mov
xor
jecxz
mov
aas
out
rcrb
scas
pop
mov
xchg
dec
jns
or
xchg
xchg
div
rol
adc
lock
ret
inc
jge
gs
ds
out
dec
mov
clc
cmp
jnp
push
mov
jle
cwtl
pop
cltd
jne
loop
loope
mov
mov
mov
jle
outsb
dec
data16
nop
pop
das
dec
jge
and
jbe
sti
lret
mov
xorl
aaa
or
test
and
arpl
dec
dec
jnp
jg
xchg
jae
mov
lods
sub
fadds
cld
sti
out
fstp
mov
outsl
and
aas
outsb
std
jecxz
lret
enter
mov
pop
add
lea
mov
sti
movb
sbb
mov
jo
fisubs
push
xchg
xor
mov
stos
test
aad
adc
mov
adc
jb
outsl
jge
sub
mov
sbb
bound
daa
loope
sub
pop
fbstp
or
dec
pop
mov
fdiv
xchg
mov
mov
fidivl
pushf
out
stc
mov
push
adc
sbb
rol
out
test
and
push
stos
fdivrs
sub
addr16
fdivrp
lret
push
and
das
mov
stc
jnp
dec
sub
lea
mov
test
lcall
pop
cmp
pop
jg
pop
xchg
int
mov
mov
xchg
out
lods
sbb
adc
hlt
sbb
iret
loopne
mov
pop
loopne
call
incl
cmpsb
das
icebp
push
inc
lcall
mov
inc
push
scas
outsb
xchg
sti
pop
mov
std
mov
je
xchg
mov
sub
jno
pusha
int
jge
dec
cmpsb
sub
fstl
loope
scas
xchg
push
cli
fisttpll
fidivl
loope
push
sbb
iret
push
outsb
and
scas
aas
mov
outsb
mov
lcall
insl
xchg
hlt
enter
jp
mov
in
rdtsc
jge
roll
mov
xchg
in
inc
les
jle
lcall
scas
dec
or
mov
adc
scas
mov
mov
cbtw
ret
cmp
jecxz
fsubr
push
rcl
mov
cmp
aam
cs
mov
aaa
mov
adc
and
jo
jmp
out
sbb
ds
ljmp
cwtl
mov
ret
test
xchg
xchg
and
sti
mov
mov
and
fwait
lods
adc
jl
imul
pop
sarb
bound
ret
jp
notb
arpl
cmp
int
dec
nop
ljmp
inc
loop
adc
clc
loopne
pop
mov
push
pop
roll
out
mov
xlat
mov
movsb
in
cwtl
mov
inc
popf
loop
mov
jle
fucom
ljmp
sbb
jmp
popa
std
ds
sub
lods
mov
push
popa
and
inc
add
cmp
in
cltd
pop
mov
ret
cmc
leave
call
mov
inc
jecxz
hlt
cld
out
jno
in
jne
cmp
xchg
inc
push
mov
in
inc
hlt
lds
cmpb
dec
push
fs
mov
xchg
loop
out
loop
mov
push
nop
cltd
pop
add
dec
out
and
push
adc
in
mov
inc
pop
jns
pop
mov
push
dec
fdivs
mov
jp
scas
pop
jo
out
mov
pop
fnsave
mov
arpl
lret
insl
gs
lahf
push
inc
loop
nop
pop
jge
cli
test
stc
lret
arpl
sbb
pop
mov
jmp
hlt
ljmp
fistl
add
inc
mov
repnz
dec
dec
cld
sbb
xor
xor
nop
insl
dec
dec
jge
mov
push
inc
cmp
mul
jb
cmp
pop
jle
jp
and
push
lods
scas
push
fistpl
jbe
imul
cmp
sbb
dec
add
cltd
sti
mov
sarl
popf
in
fcmovbe
cmp
lods
dec
bound
scas
push
adc
jb
sub
or
inc
sti
in
repz
std
into
mov
jge
popf
imul
gs
pop
jne
dec
dec
ss
ret
es
ja
cmp
ss
push
push
dec
cmp
jmp
bnd
dec
out
mov
cli
mov
jge
xrelease
daa
js
inc
pop
push
adc
mov
in
xchg
das
add
lods
jg
adc
in
add
pop
mov
into
aaa
adc
cmc
cmp
cmp
out
add
outsl
les
dec
lods
pushf
add
lods
mov
and
or
pop
dec
push
divb
sub
mov
inc
decb
inc
sub
xchg
jecxz
and
cmpsl
rolb
rcrl
adc
fisttpl
lret
xchg
xor
aad
adc
jecxz
std
or
push
add
xor
push
out
mov
xor
je
adc
lods
dec
jne
sbb
je
xor
ja
adc
dec
mov
inc
and
push
int3
adc
adc
adc
test
testb
orb
or
mov
adc
mov
fwait
mov
bound
pop
into
xor
jmp
aam
ja
fists
lcall
push
sub
idivl
push
mov
insb
jecxz
je
pop
pop
xchg
pusha
adc
xchg
xor
dec
dec
mov
stc
cmp
jne
fwait
xchg
mov
fucomp
xor
jge
adc
or
stc
jb
add
adc
lcall
shll
sbb
idivl
jno
out
in
test
aam
mov
inc
mov
adc
shlb
inc
mov
jo
sub
pop
fs
in
sbb
popa
aas
inc
or
add
loopne
sub
dec
xchg
or
lret
shrl
clc
mov
jmp
jg
mov
jp
sarl
js
adcb
jnp
push
and
rorb
cmpsb
rolb
pop
out
cmp
sub
je
xor
sahf
loop
inc
icebp
mov
and
sbb
sbb
cmp
gs
ret
loopne
loope
adc
push
adc
cwtl
jmp
fimull
add
rol
fmul
rolb
cmpb
push
sub
shrb
adc
fists
addr16
jo
adc
jne
push
sbb
or
popf
je
enter
push
mov
mov
out
out
mov
ljmp
ljmp
stos
jle
int
mov
jle
shl
adc
lret
adc
aad
xor
loopne
insl
mov
push
xchg
or
fwait
add
lahf
mov
pop
iret
and
int3
jae
outsb
or
mov
out
mov
jle
fcomps
and
stc
mov
test
pop
fs
call
inc
xor
cmp
loop
mov
adc
cltd
test
xchg
adc
and
ror
dec
mov
or
mov
push
sbb
mov
in
mov
inc
dec
leave
jno
sub
mov
xor
xchg
cmp
adc
mov
inc
xlat
adc
jecxz
aaa
and
sub
shll
js
aad
jecxz
je
loope
fcoml
and
push
and
xor
jne
movsl
addl
sbb
mov
shll
mov
lret
sahf
dec
mov
lds
cmpsb
pop
mov
jmp
lds
cmc
fld
pop
and
inc
aad
movsb
dec
mov
popa
popf
iret
pop
scas
cmp
mov
mov
je
sbb
pop
lret
imul
dec
aam
mov
adc
ss
xlat
loop
loopne
es
adc
fsubrl
outsl
push
push
cmp
roll
out
adc
nop
scas
adc
adcb
out
sarl
and
add
sbb
and
stc
add
dec
dec
jnp
mov
mov
rorl
cwtl
push
or
iret
inc
outsl
shrb
dec
pop
inc
stos
popf
data16
jno
inc
dec
xchg
out
ret
hlt
bound
and
sahf
int3
jp
inc
cltd
jo
stos
outsb
aam
or
scas
lods
lcall
add
in
mov
xor
cmp
je
movsl
pop
xlat
lds
sub
fs
fnsave
jae
push
mov
inc
pop
pop
orl
nop
shlb
add
js
test
jl
lret
sbb
sub
pop
inc
pop
mov
add
out
movsl
icebp
xchg
out
xor
dec
lds
dec
pop
data16
inc
repz
mov
cmp
stc
xchg
xor
mov
push
jne
and
xor
jb
jecxz
push
inc
inc
pushf
cld
cs
inc
cmpsl
sub
sar
add
mov
xchg
xchg
testl
jmp
jno
or
pop
inc
xchg
and
mov
sbb
call
ja
cmpsl
mov
mov
stc
jno
mov
mov
stos
push
into
sbb
iret
sub
sub
test
adc
pop
push
popa
ret
int
mov
adc
push
popf
inc
or
int3
jmp
sub
cmp
or
loop
outsb
cmp
scas
mov
hlt
dec
jo
mov
jle
hlt
sbb
dec
sub
dec
jp
mov
sub
push
les
mov
xchg
mov
cmp
sbb
push
dec
sahf
push
sub
fnsave
jp
notb
mov
inc
roll
lods
mov
popl
shrb
add
push
mov
shlb
or
push
test
xor
and
jae
das
popf
cs
xor
jl
fsubs
xorb
xchg
jle
push
shlb
push
fwait
jl
sub
pop
jns
mov
hlt
bnd
rcll
iret
loop
pop
arpl
pop
mov
xor
push
mov
inc
cli
xor
test
stc
jg
test
xchg
push
call
jmp
in
dec
dec
mov
popa
int
ss
xchg
rcll
jmp
push
sbb
jmp
shlb
insl
or
lret
fldcw
pop
clc
mov
cmp
adc
push
js
imul
out
cmp
stos
cmp
bound
mov
lret
jbe
sub
push
mov
ja
fadd
push
sub
fs
icebp
cmpsb
cmp
fadds
scas
in
andb
cmp
hlt
mov
inc
cmp
movsl
sub
jne
data16
das
imul
pusha
or
mov
orl
push
or
mov
jne
sub
lret
jle
es
sbb
roll
dec
iret
jecxz
jns
xor
out
adc
inc
sub
xchg
cmpl
pop
xchg
popf
xchg
mov
or
ja
outsl
jg
and
mov
mov
les
insb
mov
scas
mov
mov
das
test
mov
orl
push
jle
scas
cwtl
adc
in
scas
shlb
hlt
pop
and
push
and
das
or
inc
push
pop
arpl
and
sbb
fmuls
mov
sbb
loope
push
fldt
ds
cmp
in
sbb
in
mov
in
ja
add
sbb
in
ret
mov
out
aaa
xchg
xor
push
mov
mov
lret
loopw
jne
jno
test
ds
and
add
popf
outsb
sbb
or
imul
sbb
jl
adc
pop
fsub
add
mov
andb
adc
loope
fsubrl
push
sbb
add
fsubrs
cmp
pop
pushf
fcom
sub
push
push
push
faddl
je
adc
xor
decl
int
add
inc
xchg
xchg
adc
movsl
push
dec
cmc
test
inc
int3
insl
cmc
xchg
shll
xor
xchg
jnp
or
adc
lods
fwait
pop
popa
mov
outsb
cwtl
mov
or
lret
or
lods
mov
xor
cli
out
adc
gs
push
pop
jae
inc
lods
scas
jge
scas
testl
or
into
sub
mov
sub
adc
dec
push
xchg
out
add
push
add
lcall
or
jg
adc
pusha
in
xchg
pop
mov
movsl
cmp
mov
cmpsl
repnz
add
adc
iret
sub
scas
repz
pop
popa
clc
push
test
pop
xchg
mov
sub
push
xor
jle
scas
jge
xlat
pop
cmpsl
pushf
jne
ds
jne
xor
push
cltd
sti
push
lahf
xchg
sub
add
push
sbb
xchg
xchg
loopne
mov
push
jns
sti
jno
dec
add
iret
and
mov
xor
adc
xchg
pop
sbb
add
nop
cmp
jo
dec
sub
pop
or
js
insb
mov
mov
imul
pop
sub
in
enter
insb
je
pop
imul
dec
scas
jg
arpl
xor
comiss
adc
insb
cmp
jbe
adc
sub
lds
pop
std
popf
xor
stos
call
ss
xchg
and
sub
inc
fildll
push
xchg
dec
int3
jge
call
push
sbb
push
nop
add
mov
or
push
jmp
inc
sub
mov
and
inc
lahf
nop
fisubl
sbb
jg
push
dec
pop
mov
movsl
repz
xchg
sub
imul
xor
and
jns
sub
lds
idivb
scas
mov
sub
pop
mov
dec
lock
add
cmp
out
int3
pop
iret
mov
sbb
aad
cs
out
ret
mov
xor
in
imul
enter
push
push
test
repnz
mov
adc
arpl
clc
push
adc
in
pop
push
adc
add
mov
in
repz
call
orl
adcb
sub
or
shrb
cmc
sbb
jp
mov
or
mov
mov
cmp
or
aaa
xchg
in
lahf
in
fwait
loop
sti
mov
out
movsb
sub
insl
cltd
in
imul
subb
push
ja
loope
dec
inc
mov
cmp
ret
aad
xor
xor
push
sub
dec
push
aad
jnp
push
fstl
adc
fwait
xor
sbb
stos
into
adc
cmp
js
movsb
sub
push
pop
ficomps
loope
jo
pop
and
imul
mov
add
data16
jp
fs
mov
cmp
aas
mov
insl
add
sti
jmp
fwait
mov
mov
dec
adc
cwtl
aaa
jnp
pop
xchg
pop
cmp
adc
jae
test
push
pminsw
lret
xchg
pusha
shlb
shr
fdivl
sub
pop
popa
jl
pop
jo
aaa
fidivl
mov
imul
jmp
add
add
test
ret
inc
add
scas
insl
icebp
es
imul
popa
or
clc
or
cmc
lret
or
jecxz
fwait
popa
xchg
lret
dec
pop
outsl
jge
movsb
mov
sub
fs
rolb
and
mov
or
mov
inc
inc
jb
outsl
shrl
mov
fcmovb
mov
hlt
in
mov
mov
jmp
repz
std
push
fildll
cmp
mov
pop
push
inc
nop
jle
scas
jg
sub
add
and
lods
push
icebp
mov
imul
jl
lock
and
cmpsl
ds
out
fisttps
pop
lods
iret
lods
nopl
shl
dec
cmp
sbb
push
mov
aam
cmpsl
mov
iret
les
jnp
xchg
dec
fs
push
popf
xchg
sbb
in
ret
shr
jmp
mov
outsl
cmp
into
lea
into
cmp
addr16
mov
cmpsl
mov
imul
stos
bound
les
es
pusha
xor
outsl
data16
jg
jae
int
push
xor
gs
mov
rorl
push
mov
mov
imull
push
adc
outsl
idivl
adc
fwait
or
ljmp
mov
inc
rcr
mov
mov
dec
jo
sti
lea
cltd
scas
inc
fs
ds
jno
xchg
mov
out
sbb
in
adc
test
into
cmpsl
mov
ret
push
pop
add
fildll
mov
inc
outsl
ss
add
adc
push
cmpsb
mov
insl
cmp
fucomi
test
mov
rorb
cmp
test
stos
sti
nop
pop
add
dec
or
pop
mov
clc
xchg
fisubl
ss
cs
mov
scas
insb
mov
and
mov
in
shll
jmp
lock
out
test
push
xor
or
push
cmp
and
sbb
es
ljmp
push
sbb
arpl
xchg
cmp
cmp
insl
inc
mov
jmp
fucom
cltd
dec
fsubrs
adcb
mov
pop
push
mov
sbb
and
fidivs
ja
xchg
popa
ficomps
push
jmp
sub
icebp
es
add
mov
mov
and
mov
push
lcall
test
jecxz
cmp
hlt
and
mov
mov
or
add
insl
leave
cmp
pop
pop
push
push
js
lea
lret
std
push
mov
rorb
stos
adc
outsl
out
imul
jo
push
into
mov
daa
sub
or
outsl
repnz
loop
or
test
fsubrp
sub
add
test
stos
daa
out
lds
or
lods
jle
stc
out
inc
mov
repnz
xabort
xor
cmp
pop
push
cwtl
add
sti
stos
repz
outsb
add
push
out
push
sub
mov
mov
and
or
ja
outsl
cmp
ljmp
dec
dec
les
push
push
add
stc
lods
or
dec
outsb
xorl
addr16
jecxz
push
add
repnz
lock
fs
jecxz
pop
jle
jl
arpl
rorb
arpl
lret
push
enter
mov
fnsave
adc
add
adc
cmc
mov
ja
cmpsl
inc
xor
jbe
inc
mov
mov
jbe
sbb
iret
bound
jmp
jg
cwtl
lods
sbb
jb
in
loop
mov
pop
lret
jmp
xchg
inc
movb
test
stc
xchg
mov
lret
fsubp
icebp
mov
ljmp
popf
xchg
sbb
jno
es
bnd
push
xchg
aad
daa
add
mov
outsb
mov
jno
mov
shll
pcmpeqd
add
inc
pop
mov
ds
divb
cmp
out
sbb
mov
mov
sub
pop
into
mov
mov
push
mov
in
in
mull
subl
inc
sbb
movsl
sbb
mov
mov
out
cmp
xchg
mov
cltd
das
insl
rol
aaa
imul
test
out
cmc
xor
add
push
movsb
mov
mov
fcomps
cs
addr16
shrl
cli
dec
div
mov
lods
pushf
ftst
adc
ljmp
push
mov
jno
pop
ljmp
loope
movb
ljmp
xchg
inc
sub
mov
enter
push
add
xchg
add
mov
mov
mov
jge
aaa
sbb
loope
sti
into
aaa
mov
xor
adc
nop
mov
xchg
xor
sbb
xor
test
pop
movsl
rorb
xor
xchg
push
cmp
adc
dec
test
push
xchg
dec
aam
rorl
pop
pop
repz
loope
adc
repz
xchg
inc
gs
cmc
icebp
leave
xchg
adc
lds
and
xor
mov
clc
leave
stc
arpl
mov
and
xchg
and
lock
mov
ljmp
ret
cmp
mov
push
mov
arpl
adc
and
and
lret
cltd
xchg
movsb
or
jne
jns
push
ljmp
lds
lret
out
mov
pop
adc
lods
and
cwtl
xor
sbb
in
shl
mov
scas
sub
xlat
xchg
sub
decl
clc
mov
stos
and
sub
mov
jmp
mov
js
xor
in
and
int
lcall
xchg
add
and
jmp
sbb
xchg
lods
std
adc
in
pop
mov
xor
nop
fistpl
inc
mov
xor
add
mov
nop
pop
xchg
mov
ret
stos
loope
call
shrl
in
jae
cltd
sbb
push
int
and
dec
aad
fucom
jb
adc
mov
mov
mov
lods
in
sbb
scas
mov
xor
pushf
fistps
movsl
addl
sysexit
orb
cld
sahf
mov
dec
stc
test
pop
inc
and
mov
xchg
jecxz
sahf
shr
mov
test
adcl
adc
rclb
mov
mov
xchg
cltd
inc
mov
dec
mov
movsl
add
lods
or
jg
mov
ljmp
mov
clc
test
enter
pusha
pop
int3
imul
pusha
mov
cltd
sbb
scas
mov
loop
inc
in
flds
imul
jno
push
sbb
in
cmp
push
dec
jle
stc
add
push
int3
rclb
pop
or
stos
push
sbb
jne
dec
xchg
sahf
jno
xchg
sbb
outsb
mov
test
enter
aaa
sbb
inc
std
dec
das
test
lret
in
jb
jnp
lods
push
mov
and
je
std
popa
movsb
add
stos
lea
cmp
aam
cld
shll
and
xchg
sub
dec
ret
push
mov
insb
xchg
jmp
mov
or
sbb
sub
jbe
xchg
lds
orl
in
cmpsb
mov
gs
cmp
or
or
adc
add
cltd
cmpsl
cmp
andl
xchg
pop
enter
mov
jae
jo
subb
pop
dec
xor
lds
sub
dec
data16
out
xor
in
movsl
mov
leave
mov
stos
pop
pop
in
movsl
insb
test
jno
test
out
sbb
lahf
pushf
mov
clc
lock
addr16
call
push
test
sub
in
xchg
das
outsl
mov
and
push
scas
bound
jl
inc
lret
and
mov
addb
mov
xor
jmp
nop
inc
adc
dec
mov
in
jae
js
mov
sahf
mov
and
inc
rolb
lock
cli
add
inc
and
bound
testl
lods
push
iret
mov
cmc
adc
je
jns
mov
mov
adc
rcrl
loope
mov
sbb
xchg
mov
mov
lret
ds
push
outsb
int
push
into
adc
iret
mov
mul
addr16
jae
jl
aaa
pushf
pop
popa
mov
push
mov
daa
movsb
pop
js
rclb
in
clc
icebp
xchg
or
ljmp
inc
repnz
ja
out
dec
push
mov
push
sar
mov
mov
movsb
movsb
addr16
and
aad
pop
das
or
iret
mov
pop
push
fimuls
mov
scas
sahf
sahf
iret
leave
mov
out
mov
fwait
cli
inc
mov
ret
cmp
rcr
mov
out
xchg
xchg
push
pop
cli
lock
lcall
scas
mov
jl
dec
jo
dec
pop
dec
and
insb
mov
out
cmp
aad
xchg
mov
mov
jns
jmp
jbe
les
xchg
insb
insl
cmpb
out
je
icebp
mov
fld
test
cmp
lcall
mov
mov
lods
adc
push
mov
fiadds
cmpsb
paddq
mov
adcb
mov
lock
dec
push
fldt
cmovno
fwait
shrl
jmp
sub
loope
push
aad
data16
test
imull
pop
cmp
mov
jbe
cmp
pop
sub
and
ret
lock
outsb
mov
push
movsb
hlt
icebp
jb
outsb
gs
fnsave
sbb
sarl
outsb
xor
or
repnz
pop
cmova
rcll
pop
sub
fcomps
mov
jp
inc
leave
dec
mov
repnz
loopne
add
or
aas
adc
xlat
out
in
sub
fwait
sbb
lea
in
add
loope
xchg
jmp
cwtl
popf
scas
shl
jmp
adc
das
xchg
popa
call
icebp
cmc
cmp
enter
pushf
pop
add
dec
enter
cmp
aad
mov
cmp
dec
cmp
imul
push
push
pushf
push
xchg
pop
mov
adcl
data16
sub
pop
dec
xchg
ret
cmp
add
mov
push
hlt
inc
mov
fmulp
ret
movl
out
and
ljmp
lret
inc
ficomps
aaa
jns
jmp
add
mov
jbe
ss
inc
jns
push
cmp
rcll
pop
cmp
inc
sub
out
cmp
push
les
or
je
jne
or
mov
mov
ja
sub
iret
mov
xchg
adcl
pop
xor
cltd
inc
cwtl
xor
pop
or
pop
jmp
jg
or
movsb
xor
mov
movsb
or
xor
pop
mov
xor
adc
sahf
mov
xchg
stos
sub
data16
jp
sbb
push
test
jmp
shl
bnd
mov
ss
cmp
movsb
icebp
jmp
mov
inc
dec
sahf
jo
cs
jnp
and
insl
dec
rcrb
ficompl
cmpsl
dec
cmovg
out
jo
dec
aad
add
xor
call
loope
pop
repnz
inc
adc
sbb
mov
mov
cwtl
push
inc
repz
jae
ret
and
jae
pop
inc
addr16
sub
aad
sbb
pop
inc
adc
pushf
rolb
andb
int
mov
xchg
imul
mov
mov
outsl
scas
je
pop
out
out
repz
sub
sub
inc
inc
mov
add
xchg
movsl
fldt
popa
xor
test
mov
out
mov
and
das
xlat
sbb
cmp
lods
adcl
insl
stos
mov
xchg
mov
inc
push
test
hlt
xor
addb
imul
ljmp
dec
pop
aaa
shrl
cmp
mov
outsl
pop
lods
inc
in
push
inc
fnstcw
in
in
cmp
jbe
mov
add
mov
loopne
xchg
and
loopne
ffree
mull
cmpl
mov
test
cmc
js
sarl
out
add
out
ret
xor
pop
xchg
push
jns
xchg
sub
xor
pop
into
subb
mov
push
negb
or
xchg
idivl
ds
pop
shlb
push
sbb
in
inc
mov
insl
inc
loopne
or
mov
divl
out
and
scas
pop
test
push
pop
mov
jns
cmp
clc
stc
pop
adc
clc
inc
sub
scas
inc
xor
sub
mov
outsl
sub
test
rorl
xor
leave
inc
and
jo
sar
adc
aas
push
je
iret
subl
mov
inc
mov
shrb
inc
push
sarb
cwtl
mov
sahf
and
cld
mov
adc
push
mov
fistpl
ficoml
js
dec
or
xlat
add
add
pop
add
lods
mov
inc
pushf
xchg
cwtl
cmp
cmc
shrl
fs
dec
imul
lds
daa
leave
dec
mov
push
and
cli
pop
push
shll
mov
repnz
inc
push
mov
clc
mov
add
std
mov
loop
dec
mov
lods
xor
mov
arpl
mov
push
hlt
enter
mov
test
and
xor
cli
loop
sub
sub
enter
pop
sbb
pop
xchg
outsl
pop
aad
hlt
and
movb
jmp
rcr
jb
push
fnsave
fsubs
adc
call
rcrl
ja
mov
rorb
insl
mov
or
repz
push
inc
aaa
add
adc
mov
ret
mov
aad
sbb
in
and
int3
sub
xchg
mov
mov
sub
out
mov
cmp
cmp
pop
sbb
push
cmp
nop
xchg
xor
push
xor
pop
push
sbb
dec
enter
test
pop
decl
sub
das
nop
xchg
xor
ljmp
fwait
test
xlat
mov
lcall
mov
movsb
leave
pushf
or
test
daa
cmpsl
jb
cwtl
pop
mov
js
pusha
test
sub
rcrl
mov
mov
cmp
jg
fdivrs
call
xchg
lret
lret
inc
mov
enter
jae
into
cmp
adc
inc
xchg
mov
lds
cmp
repz
cmc
adc
movb
cmp
data16
push
inc
mov
clc
inc
lea
and
dec
loope
and
cld
pop
push
cwtl
cmp
adcl
test
dec
jnp
fisttpl
sbb
lds
cs
dec
xor
scas
and
pop
idivl
pop
lds
hlt
and
rcrb
mov
insb
or
mov
xor
pop
call
add
cmpl
cmp
scas
jnp
std
jp
mov
fisubrl
cs
push
dec
ret
inc
arpl
movsb
xchg
orb
fnsave
dec
das
push
cmp
adc
lret
or
mov
gs
mov
stc
push
dec
add
pop
and
push
shrb
cmp
in
mov
loop
ror
fs
out
mov
inc
cli
out
and
mov
fisubs
lcall
or
aas
mov
push
push
loopne
adc
jne
repnz
dec
das
into
fists
xchg
orb
sbb
push
jp
mov
cltd
mov
addl
pop
dec
jns
mov
stos
mov
and
int
outsb
sub
test
out
test
cmp
popa
pop
loope
push
inc
hlt
sarb
mov
js
pusha
mov
insl
sbb
incb
out
sub
inc
fidivs
icebp
fnstenv
lods
bound
jo
fwait
xchg
stos
or
rcrl
out
xor
shll
sahf
sub
and
idivl
daa
or
lds
ja
fnstcw
cltd
out
dec
sbb
outsb
cmpsl
pop
jns
ds
jne
cmp
fwait
call
shrb
and
pop
adc
es
jne
cmc
mov
and
or
test
cltd
stc
pop
xchg
movsl
dec
lock
enter
pop
push
das
pop
pop
outsl
adc
add
js
pop
jno
sub
xchg
adc
pushf
xchg
add
sub
out
xor
xchg
cmp
imul
fcomp
push
mov
or
inc
xlat
cmpsb
data16
push
cli
push
mov
mov
add
aaa
or
imul
dec
ret
mov
roll
adc
enter
mov
jmp
sbb
inc
das
cmc
and
mov
shll
add
sub
ljmp
mov
or
inc
mov
shlb
aad
jb
fnstsw
push
gs
das
inc
cltd
fucom
lret
and
aaa
out
jne
cmp
add
adc
add
jle
loop
aam
cmp
mov
inc
xor
sub
xchg
add
xor
fisubl
mov
inc
imul
int3
ja
mov
loopnew
push
mov
xorps
bound
shr
adc
in
xchg
jae
cmp
pop
dec
les
lret
dec
push
int
in
shrl
mov
pop
cmp
mov
stos
paddw
xor
sahf
jp
es
push
and
pop
js
adc
mov
inc
add
movsb
xor
mov
sbb
dec
cmp
push
imul
cmp
inc
stos
push
sub
sub
adc
sbb
in
in
jbe
push
movsb
lahf
cmp
jo
cwtl
add
jae
mov
std
aad
adc
xchg
push
sbb
dec
cmp
inc
sub
mov
sub
add
push
hlt
lret
or
jae
and
mov
cmp
push
dec
call
aaa
out
fistpl
and
jge
and
rclb
das
sub
cmp
push
std
cmp
in
pop
int
fists
mov
shrb
and
cmpsl
fwait
jnp
scas
inc
mov
ror
lea
fisubs
sub
ret
jnp
cmpsb
sub
sbb
outsb
sub
push
jmp
mov
xlat
sbb
out
out
or
lea
lea
cmc
xor
sahf
orl
divl
or
push
lret
push
cld
lret
loop
rcrl
fsubrl
cmpsl
xacquire
adc
cmp
cmc
ret
scas
sbb
loopne
cs
fimuls
aas
push
xchg
std
out
popa
stos
xchg
fdivr
lea
cwtl
mov
stc
pop
jno
test
push
test
filds
mov
xlat
mov
lcall
pop
fcoms
xor
sbb
test
insb
or
inc
mov
and
mov
pusha
add
push
cwtl
jno
cltd
pop
push
mov
sub
cmpsb
mov
inc
push
aad
cwtl
pop
sub
gs
fcmovbe
adc
adc
push
inc
mov
push
mov
or
push
jnp
lret
mov
loope
push
push
sti
jl
mov
cli
push
stos
pop
aam
jl
xor
in
fsubl
shll
and
popa
jp
adc
pushf
cltd
sbb
pop
sbbl
mov
add
mov
sbbb
insb
ja
mov
mov
jno
jle
pop
sbb
adc
loop
sub
repz
jmp
cli
xchg
push
xchg
in
xchg
push
jo
hlt
mov
sbb
ret
jnp
sarb
in
or
sub
std
out
out
fadd
xchg
lods
lods
test
call
push
cmp
cmpsl
xor
jno
and
xchg
mov
dec
aad
in
lds
sub
cmpsl
adc
push
cmp
xlat
xchg
push
lds
into
das
mul
push
insl
pop
jns
ja
xchg
jb
in
decl
out
in
mov
adcl
jge
cmp
std
add
xchg
jns
push
add
dec
mov
mov
lds
std
mov
scas
testb
rcll
js
je
push
loopne
ss
rcrl
jns
orl
outsl
int
cltd
adc
mov
pop
shrl
repz
jmp
rcll
mov
dec
mov
cmp
jl
cmp
mov
xchg
shrl
fisubl
cmpsb
scas
inc
push
cli
xor
pop
push
sub
sbb
push
shl
lcall
xor
into
shlb
or
ljmp
call
dec
lea
dec
es
loope
mov
imul
mov
or
or
or
mov
jecxz
cmp
adc
mov
inc
xchg
outsl
mov
cmp
popf
je
inc
push
pushf
jne
fldcw
push
hlt
pushf
dec
roll
push
out
mov
aam
inc
pop
cmp
insb
xor
mov
pop
jo
push
xchg
mov
fsubl
ret
aad
inc
imul
hlt
pop
pop
pop
aad
lret
mov
mov
mov
outsl
mov
int3
or
pop
add
or
insb
push
cs
leave
std
pusha
xchg
gs
mov
lcall
mov
sub
jp
jecxz
or
jno
add
lods
or
pop
add
insb
movsb
or
test
cli
fwait
mov
push
push
pop
rcll
sub
jecxz
dec
mov
dec
jns
xorb
fistpl
cmc
jl
push
dec
push
or
xor
loop
mov
ss
clc
dec
sbb
mov
imul
imul
not
and
test
jnp
movsl
jg
fiaddl
dec
inc
push
in
cli
fisubl
push
inc
xor
push
cld
in
xorl
shll
sub
ja
stos
sti
daa
daa
es
out
ficoml
rcll
push
cli
xor
ljmp
insb
and
xchg
out
push
sbb
sbb
push
xor
in
jb
jge
cmp
cmc
adc
mov
fs
push
jnp
xor
mov
lahf
adc
fistl
push
mov
mov
notb
inc
inc
mov
decb
mov
shlb
inc
fidivs
jl
test
jno
and
jmp
mov
xor
xor
shll
dec
mov
sbbb
mov
adc
fnstcw
push
push
fwait
xor
jecxz
sbb
mov
mov
shl
fisttps
mov
pushf
fsubrl
aad
call
push
inc
aam
mov
pushl
or
cld
sub
ss
push
push
push
inc
and
cwtl
push
scas
sbb
or
pop
cs
push
or
push
shlb
mov
fsts
cmc
add
orl
stos
mov
pop
adc
sub
cmp
push
sti
popf
call
icebp
and
mov
ja
jmp
dec
xor
ret
arpl
fabs
or
push
sbb
adc
adc
das
stos
lret
test
mov
std
xchg
lods
dec
inc
fdivs
ss
xor
cwtl
xor
aam
and
push
sub
cmp
mov
dec
pop
cmc
je
dec
dec
roll
and
pop
rcr
dec
cmpsl
jmp
gs
test
fwait
jae
mov
or
mov
sub
xor
ficompl
cmpsl
push
out
int
rcl
pop
hlt
sbb
push
push
test
add
iret
add
xchg
sbb
pop
nop
jle
sub
push
gs
add
in
and
cmpb
and
xchg
clc
dec
cmp
ljmp
or
insl
adc
xchg
xchg
jmp
rcll
insb
repz
cs
out
xchg
dec
jae
push
sub
and
dec
fnstcw
aas
cmp
xchg
mov
jge
test
stos
add
ljmp
pop
cmp
and
jae
fdivr
pop
ljmp
incl
cwtl
and
insl
dec
push
repz
jecxz
push
movsl
ljmp
or
jecxz
int3
mov
inc
xor
daa
lock
hlt
sbb
pop
into
test
sub
jns
ret
adc
xor
or
push
add
jp
add
addr16
cmp
sbb
scas
and
dec
lods
and
in
stc
popa
imul
dec
rorl
aam
es
mov
inc
push
lret
in
pop
dec
pop
push
add
xorl
push
add
mov
push
push
loop
mov
xchg
cld
aas
loop
prefetch
cmpl
loopne
aas
rorb
lcall
clc
jp
or
std
cmp
je
test
insl
mov
push
repz
pop
or
xchg
je
inc
push
jo
or
mov
inc
xor
and
in
aaa
or
jns
clc
or
shll
nop
xor
pop
cmp
enter
jb
pusha
insl
sahf
adc
stc
jle
xchg
xor
into
fsub
mov
xchg
outsb
scas
test
dec
fs
rorl
rorb
inc
cmc
int3
sbb
in
loope
mov
das
je
sub
adc
inc
mov
ja
stos
lcall
int3
dec
sti
or
stos
pop
mov
cmp
lds
mov
lock
or
jnp
aas
in
cmp
js
call
mov
mov
mov
fcompl
xchg
xor
test
popa
push
add
je
xor
mov
mov
mov
add
cli
sbb
sbb
cmpsb
inc
js
ja
dec
mov
cmpsl
inc
xor
mov
gs
enter
pop
and
and
jle
js
outsb
fstps
test
sar
or
pop
lret
sub
not
pop
test
scas
test
leave
cmp
idivb
add
imul
lcall
outsl
xchg
cmp
mov
dec
inc
roll
lods
dec
icebp
inc
roll
lahf
adc
mov
inc
dec
pop
mov
orb
shrb
shrl
mov
out
pop
data16
push
faddl
das
jns
cs
ret
movsb
push
cltd
jnp
jle
and
outsb
in
cld
cli
mov
fimuls
jle
xchg
pop
mov
sub
and
mov
lds
xor
mov
mov
push
pop
bound
pop
jmp
sub
mov
fs
dec
pusha
addb
add
ja
inc
jg
jle
fnstsw
or
add
fcoms
cmp
adc
dec
je
sub
ror
lret
pushf
mov
lret
test
add
sbb
shrb
test
adc
mov
mov
sub
sbb
and
push
data16
push
mov
pop
test
cmp
insb
and
mov
sub
aas
and
mov
aaa
inc
mov
sti
mov
sub
xchg
xor
pushl
mov
cmp
into
ja
test
sbb
scas
ret
adc
insl
lods
inc
pop
pop
mov
sbb
mov
es
insb
shr
xor
mov
and
test
sub
popf
nop
jmp
enter
lock
stos
mov
hlt
repnz
cmp
sub
cmp
adc
lds
loope
addb
lds
das
dec
sub
pop
adc
mov
aad
jl
jmp
pop
add
mov
xchg
and
mov
inc
stos
cltd
push
xor
pushf
fsubs
cwtl
mov
js
shlb
andb
fsubrl
dec
or
ret
andl
fcoml
mov
mov
add
add
jg
pop
or
fcoml
sbb
inc
mov
lahf
inc
sti
mov
pop
aaa
xchg
fsubrl
or
into
cli
ds
push
shrl
jle
out
mov
cmp
cwtl
data16
mov
pop
addl
inc
sbb
es
pop
jecxz
inc
push
xor
xchg
aam
scas
mov
mov
ret
push
sub
mov
or
stos
loope
bound
xchg
or
lds
ds
xchg
inc
test
adc
mov
cmp
or
sahf
or
adc
outsb
and
iret
sub
jg
mov
inc
xchg
adc
pop
and
les
fs
lods
adcb
cmp
dec
sbb
jne
icebp
lods
pop
gs
imul
stos
cmpsb
pop
push
mov
rcrl
xchg
and
shlb
jle
fmuls
cmp
rcl
push
dec
out
pop
dec
push
sbb
test
cld
pop
xor
push
mov
mov
outsl
jae
jge
mov
and
dec
fsub
cwtl
add
xchg
xor
dec
mov
in
cmp
dec
iret
sahf
into
mov
mov
outsb
add
cmp
testl
and
faddp
jl
test
or
push
mov
xor
mov
pop
jp
mov
sub
out
testb
pusha
push
lret
faddl
xchg
je
push
fnsave
cltd
or
adc
mov
push
inc
xchg
and
sub
popf
sbb
add
ftst
inc
subb
lret
sarl
dec
sti
pop
pop
mov
cmp
test
xor
insb
syscall
cmpl
icebp
xor
dec
mov
dec
adc
lods
cmp
lret
xor
lret
inc
sub
add
mov
add
jne
jno
add
fs
fcoml
inc
outsl
jecxz
inc
js
add
xor
jnp
mov
into
push
data16
lret
mov
repz
xor
addr16
mov
mov
jg
js
mov
sbb
xlat
pop
movsl
and
into
xor
fdivr
sbb
int3
cli
xlat
in
fcoml
mov
aad
push
ret
pushf
outsb
nop
xor
xchg
aas
cli
xor
sbb
mov
fs
sub
xchg
xorl
pop
push
jb
or
arpl
loop
jne
das
pop
mov
jne
mov
popf
xchg
pushf
push
fsubl
shlb
shlb
jno
jmp
xor
inc
test
scas
out
ja,pt
jnp
in
inc
push
add
lret
sub
int3
and
dec
cmp
mov
adcl
in
mov
iret
aas
jbe
sbb
sbb
outsl
ror
cwtl
mov
out
xchg
push
sub
lret
push
les
lds
dec
cmp
fucomip
xor
adc
cmp
pcmpgtw
mov
sub
iret
push
sub
cmpsl
sub
jns
fcmove
inc
addr16
pop
gs
pop
iret
dec
xor
xchg
jns
mov
xchg
fiaddl
pop
adcl
push
pop
jle
cmp
out
mov
pop
add
or
pop
pop
inc
mov
sub
lods
dec
movsb
sub
inc
mov
cltd
cmp
push
sbb
rol
push
je
and
xchg
arpl
cmp
jns
call
aas
mov
test
fwait
jge
push
adc
pop
leave
mov
inc
mov
shr
push
aaa
cmc
pushf
and
jle
inc
mov
lahf
cltd
popa
push
sub
sbb
add
loop
pop
popa
jp
lods
push
scas
jmp
ss
lods
push
fprem1
mov
lahf
xchg
and
lods
scas
nop
in
das
addr16
push
insl
mov
rclb
stos
shrl
daa
push
mov
dec
dec
adc
popa
push
jb
flds
pop
jae
push
int
add
or
pop
sub
mov
cs
out
adc
cmp
mov
jb
hlt
aas
inc
mov
popf
stos
test
sbb
rorb
pop
loop
cld
dec
cmp
insl
jo
xor
imul
lret
push
scas
idiv
pop
jl
xchg
cmp
aas
mov
jle
mov
ret
jne
xchg
pop
push
and
in
iret
sub
arpl
jne
iret
es
push
xor
out
aaa
call
dec
inc
cmp
outsb
mov
jo
int3
pop
mov
hlt
jno
shlb
cmp
cmpsb
ret
or
hlt
dec
push
cmp
add
jnp
or
jae
jb
pop
movsl
push
jae
subb
lods
aam
cmp
or
pop
xor
or
pop
inc
jne
xchg
mov
lahf
mov
mov
nop
inc
mov
outsl
imul
ljmp
push
neg
in
adc
insb
mov
rdtsc
stos
insb
mov
daa
mov
cs
cmpsl
inc
pop
hlt
stc
pusha
jbe
push
push
xor
mov
pop
jmp
mov
and
scas
shrb
xchg
lahf
fs
jno
xor
cmovns
sub
mov
push
inc
leave
mov
scas
sbb
in
mov
pop
sbb
repz
addr16
lods
push
cli
nop
les
add
test
add
shlb
rcrl
dec
push
mov
ret
and
inc
popa
enter
sbb
jbe
pop
loop
inc
test
sbbb
lcall
fdivs
std
inc
clc
mov
pushf
and
xchg
int
dec
xlat
inc
jns
adc
cmc
jmp
sbb
add
push
roll
push
cmc
movsl
repz
dec
ror
or
fisttpl
out
hlt
xchg
lea
call
bound
xor
insl
push
add
adc
sub
xor
jno
dec
cmp
mov
mov
dec
addl
add
push
and
int3
test
cmpsl
pop
sbb
gs
xor
xchg
aas
mov
jb
add
aam
jb
out
add
add
xchg
pop
sbb
jb
popa
adc
je
in
rcl
dec
dec
inc
daa
int
out
lock
xchg
das
and
pop
imul
inc
jecxz
bound
jo
pop
sbb
xchg
rorb
cmp
mov
stos
mov
xchg
xchg
or
inc
sbb
insb
push
xchg
sub
icebp
mov
mov
stos
lret
jmp
aaa
jno
fisttpl
push
flds
xchg
popf
mov
jne
dec
out
lds
sub
stos
sbb
subb
stos
and
fs
xchg
lods
sub
pop
adc
push
out
sub
mov
cld
sub
pop
mov
mov
lcall
ss
mov
and
cmc
dec
pop
xchg
mov
fsts
cmp
cmc
aad
out
xor
jle
or
jb
add
idiv
cld
ss
and
loope
jb
ds
nop
popf
pop
lcall
add
adc
mov
test
pop
mov
dec
adc
and
iret
bound
mov
ja
mov
xchg
repz
les
mov
jbe
inc
cmp
cmpsb
xchg
shlb
insl
push
adc
sbb
mov
dec
pushf
addl
lret
xchg
sub
jno
int3
lcall
and
adc
outsb
in
in
aaa
lods
or
dec
loopne
js
js
movsb
aad
mov
cmpsb
lods
xchg
fldcw
pop
xor
add
mov
push
xchg
jno
mov
cmp
push
mov
or
out
mov
stc
mov
out
dec
pushf
mov
mov
mov
push
adc
out
dec
outsb
aaa
rorb
pop
mov
mov
pop
jge
cmpsl
dec
xorl
call
mov
jns
clc
cmpsl
inc
pop
idivl
and
xchg
div
adcl
and
rcr
mov
mov
mov
add
test
pop
add
inc
out
lods
pop
pop
dec
push
mov
dec
add
les
notb
negb
cmpsb
out
clc
jo
bnd
bound
sahf
xchg
in
mov
cmpsl
push
push
mov
mov
sub
popf
cld
les
pushf
cwtl
jns
frstor
lcall
fwait
punpckldq
cmp
fcompl
testb
inc
ret
lahf
pop
fs
das
pop
adc
jno
into
ljmp
xchg
cmp
mov
cmp
in
sbb
push
jns
test
or
andl
jb
repnz
xchg
scas
push
rcll
pushf
adc
lret
shrb
shll
jo
sbb
jnp
inc
roll
repnz
cmp
ja
sub
cltd
jne
sub
pop
sub
dec
aaa
mov
jo
cmpsl
cltd
add
fadd
jns
sub
push
cli
mov
sar
adc
es
dec
shl
das
jp
and
mov
mull
cmp
sub
mov
jbe
lds
xlat
dec
out
and
add
loopne
fnsave
popf
cmpb
in
cli
ja
test
mov
stos
or
mov
insb
and
xor
add
vorpd
out
pop
xchg
addr16
sub
push
jl
call
das
fbld
mov
or
mov
ret
pop
inc
jle
cmp
dec
int
ss
sub
adc
mov
cli
movsl
mov
jp
lret
lds
push
sub
call
imul
sbb
cld
xchg
decb
push
mov
jae
add
xchg
imul
mov
lock
loop
leavew
jns
mov
fs
jns
sbb
mov
mov
adc
sbb
dec
test
mov
mov
add
pop
aas
push
add
lea
xor
xchg
arpl
mov
mov
popa
mov
mov
fstpl
and
clc
push
outsb
pop
arpl
popf
sub
ljmpw
mov
fdivs
cmpsl
cmp
cmp
add
dec
xor
pop
mov
daa
push
out
or
sbb
in
inc
sbb
sti
fnstsw
das
adc
lcall
xchg
repz
ficomps
sub
stos
pop
lea
adc
jle
lods
push
xchg
mov
jbe
pop
lret
lock
in
jg
pop
push
daa
imul
lock
into
jnp
nop
xor
xchg
sbb
stc
fstp
in
test
les
lret
fildl
mov
pushf
inc
mov
ja
leave
dec
dec
repnz
xchg
or
sub
lahf
push
repnz
jo
aaa
jecxz
xchg
cmp
push
aad
and
inc
iret
push
pop
inc
jbe
jbe
in
out
mov
add
aas
test
es
dec
out
and
arpl
std
dec
loopne
sub
mov
stos
push
aam
dec
imull
lods
xor
loopne
cmp
std
outsb
xchg
cmp
mov
sbb
into
cmp
jb
aas
push
xchg
dec
lahf
aas
mov
xor
fwait
sub
es
outsb
push
mov
pop
lods
nop
daa
push
fstpl
cltd
ss
test
out
test
xor
rep
test
mov
cmp
inc
arpl
pop
int
push
adc
xchg
int
or
lods
mov
mov
or
mov
mov
ja
dec
aam
outsb
sbb
add
popf
mov
lret
pusha
jbe
lds
jle
aaa
out
pop
inc
mov
fwait
cmp
insb
mov
sti
orl
cmpsb
jne
enter
xor
or
add
fnstsw
leave
fwait
push
idivl
mov
insl
xor
mov
jns
adc
mov
pushf
push
lcall
dec
adc
jo
or
and
sbb
decl
dec
addr16
sub
ss
outsl
xchg
or
push
mov
das
cmp
jo
push
add
into
inc
into
adc
sub
sbbl
out
loope
adc
in
pop
jns
inc
mov
test
xchg
es
sbbl
adc
and
pop
in
stos
fisubrl
sub
ret
mov
xchg
outsl
jmp
jne
faddl
xchg
aaa
ds
shlb
jg
pshufw
xchg
aam
in
xchg
lret
popaw
mov
mov
movsl
popf
and
sbb
mov
add
push
inc
inc
das
xchg
call
pop
inc
fs
int3
cs
sbb
sub
push
out
sbbb
mov
cmpl
dec
fs
sbb
ficompl
cli
sahf
out
fnstsw
aad
std
lahf
inc
mov
dec
mov
xor
xchg
nop
lock
sub
xchg
ja
mov
movsl
rorl
mov
inc
xor
jb
cmpsb
out
jb
fbstp
push
mov
out
nop
inc
movsl
xchg
stos
jle
adc
push
cltd
mov
jne
js
fxch
sub
rcrb
and
and
call
icebp
mov
sub
loopne
test
int
inc
xor
xchg
mov
push
outsl
mov
push
fwait
sti
sbb
mov
dec
cmp
pop
jecxz
xlat
fcomp
or
cs
fmul
push
jp
rorb
pop
gs
cmpsb
out
xchg
addr16
mov
rorb
cmp
negb
lahf
push
ljmp
mov
jnp
mov
sub
cs
mov
negb
stos
pop
xor
testl
or
dec
stos
int3
mov
xor
xchg
cmp
loope
add
pop
scas
jae
pop
cmp
push
or
mov
pop
cmp
push
iret
test
add
insb
jno
lods
stos
push
loopne
cmp
inc
shlb
xchg
mov
mov
dec
fiadds
aaa
int
pop
popa
xor
adc
mov
int3
lods
popf
lods
sbb
fildll
fdivrs
aad
cmp
daa
insb
in
add
pop
sub
loop
test
sub
xchg
lods
dec
inc
or
call
sahf
sub
fsubrs
jg
sub
std
arpl
jge
into
cmpl
mov
outsb
push
shrl
mov
icebp
add
sti
push
daa
js
xchg
repnz
adc
and
stos
cmp
repz
sahf
enter
ds
push
and
mov
test
scas
jecxz
or
sbb
push
fdivrl
movsl
jne
inc
shll
test
outsb
dec
std
fcomip
mov
pop
cmp
cld
inc
and
and
xchg
insl
add
sub
sbb
adc
inc
lcall
ret
xchg
cmp
lea
adc
pusha
shl
iret
lock
inc
jns
test
pop
push
sbb
jg
das
cmpsb
aad
mov
inc
xchg
mov
idivb
or
lods
iret
orb
push
cmc
adc
adc
aad
aad
into
xchg
loop
sub
sbb
cmp
add
jp
cmpsb
insb
dec
add
fidivl
sbb
pop
or
shl
test
push
lods
xor
mov
jne
stos
sbb
sub
imul
cmp
insb
cld
sub
imulb
mov
imul
push
ds
sbb
mov
arpl
push
hlt
push
stos
lahf
rcrl
js
data16
and
add
xor
add
cmpb
and
insb
cmp
addr16
add
sub
loope
int3
ss
les
in
out
call
dec
loop
mov
jbe
iret
out
mov
cmpsl
je
lahf
sub
cmp
jmp
pop
outsl
mov
fldenv
je
cmpsl
xor
mov
lods
jl
sbb
scas
add
pop
push
cltd
dec
inc
shll
call
shlb
jno
in
cwtl
fmul
push
xor
dec
dec
pop
sbb
shrl
jle
and
pop
sbb
mov
into
cmp
mov
test
pop
dec
shrl
lods
cmpsb
imul
frstor
push
sub
arpl
inc
xor
fs
mov
mov
std
add
sahf
outsb
jle
mov
and
ljmp
push
jne
pop
jne
mov
hlt
mov
xorb
stc
outsb
or
jae
jmp
xor
clc
push
mov
lret
adc
add
iret
xchg
jp
push
jp
leave
mov
out
cmp
push
daa
xchg
aaa
xchg
pop
out
insb
aaa
pop
sub
xchg
into
dec
jl
std
xchg
adc
aaa
xchg
inc
cmpsl
mov
cmp
and
fdivrs
cltd
pop
in
int
mov
fdivl
and
daa
or
dec
mov
sbb
push
mov
add
cmp
push
push
inc
mov
fidivrs
rorb
loopne
lods
mov
mov
sub
mov
sbb
outsl
negb
inc
sub
outsl
cwtl
sub
int
std
mov
pusha
xor
push
xor
adc
cwtl
cli
test
jnp
xchg
push
jb
hlt
cld
jecxz
sub
or
aas
jge
in
add
in
pusha
fwait
adc
dec
jo
es
and
in
pop
fstpl
add
sarl
adc
mov
push
loope
aad
jmp
addr16
in
pop
in
sbb
push
mov
cmp
decl
xchg
sub
or
jp
push
iret
and
into
insl
jbe
xor
dec
ficoml
mov
jge
or
lahf
pop
add
aad
cld
sbb
mov
iret
rorb
mov
fwait
sar
cmpsb
test
sbb
adc
xchg
add
or
sti
in
push
pop
test
cmp
fdivs
hlt
sub
sbb
scas
negl
mov
mov
push
sbb
ss
dec
jp
nopl
pushf
pushf
xor
jge
mov
push
pop
lods
sub
sarb
cli
mov
jge
jae
sbb
add
cmpl
cmp
jbe
movb
jae
dec
aaa
movb
jno
lcall
inc
mov
sbb
pop
inc
xadd
sub
xchg
fisubs
or
scas
sbb
outsb
pop
adc
push
cmp
popf
pop
lret
int3
fcoml
and
mov
or
lds
mov
shll
add
xsaveopt
sbb
test
in
push
push
dec
and
fisttpl
jns
and
mov
aas
imul
fldcw
adc
out
fistl
jmp
mov
or
mov
pop
mov
push
mov
stos
add
test
or
movl
into
scas
sbb
lock
add
sbb
add
aaa
imul
mov
pop
lea
push
sbb
test
and
sub
mov
movsl
push
ljmp
sbb
push
inc
je
shrl
in
inc
mov
xor
inc
xchg
gs
mov
adcb
ljmp
sub
sbb
sub
in
imul
mov
dec
add
repnz
cmp
ja
and
inc
faddp
jb,pn
rcr
jmp
sub
sub
add
and
adc
xor
shrb
nop
mov
rcrl
xchg
out
and
push
add
jl
in
mov
add
lods
push
mov
repnz
mov
mov
cmp
aad
call
cmpsl
and
icebp
insb
add
ror
and
outsb
adc
xchg
cltd
out
shrl
cmp
adc
ljmp
mov
scas
xor
addr16
cmp
dec
es
xchg
mov
mov
dec
mov
mov
sub
cltd
inc
ja
and
out
mov
dec
ret
lods
or
mov
sti
sub
jo
inc
hlt
push
imul
in
mov
inc
pop
mov
push
pop
es
insl
jmp
sbb
inc
push
and
inc
push
lods
inc
xor
mov
pushf
xchg
test
push
ja
jbe
cmp
popf
add
cld
lahf
adc
mov
lahf
or
je
pop
inc
add
push
push
mov
pop
mov
mov
jg
mov
jge
or
xchg
js
dec
vphaddbq
cmp
pop
hlt
push
cmpb
jno
jmp
pusha
cmp
les
jbe
nop
sbb
stc
fisttpl
and
xchg
and
xchg
adc
les
push
sbb
jge
cmovge
dec
jp
xlat
mov
cmp
push
es
xlat
lcall
testl
adc
dec
shll
xorb
jg
mov
cmp
int
pop
outsb
cmpsb
pop
add
in
xchg
dec
xor
mov
push
cvttps2pi
test
shrl
dec
cmp
adc
push
out
imul
insb
inc
fwait
iret
sti
sarl
cmp
inc
jns
jle
lret
or
mov
sbb
dec
test
aad
loope
xor
jne
cmpsb
xor
mov
pop
imul
lret
jg
fstpl
or
gs
lret
ljmp
cmpsl
xor
cmp
cmp
cmp
mov
mov
mov
adc
fwait
pop
hlt
rcll
jo
mov
js
mov
cltd
lea
adc
jge
inc
in
jmp
inc
popa
push
mov
jno
out
sbb
repz
jp
lods
jl
flds
pop
push
test
imul
push
push
and
pop
sarl
inc
stos
stos
lret
inc
cwtl
adc
adc
shrl
mov
and
sbb
pop
or
jle
in
and
mov
push
cltd
fidivrs
mov
out
jmp
rcll
xchg
push
dec
pop
sbb
push
fiadds
das
in
imul
jecxz
loope
add
or
sbb
daa
fdivrl
hlt
mov
lcall
ds
and
js
shlb
inc
rorb
cmp
add
dec
push
push
push
icebp
std
insl
cwtl
xchg
dec
xlat
mov
test
cmp
rcll
cmc
fwait
sub
je
sub
pop
mov
sti
es
jbe
adc
xchg
xchg
fsubrs
les
lret
jle
test
or
mov
inc
jecxz
inc
push
pushf
daa
ret
aaa
jp
in
je
sub
clc
xchg
imul
adc
mov
adc
aas
movsl
loop
out
insl
add
push
lcall
cli
repnz
xchg
pop
aam
mov
pushf
adc
xchg
sub
fcoml
push
sti
jno
jge
inc
cmpsb
cmp
enter
sub
sbbl
ret
ljmp
pop
mov
hlt
pop
std
rcrl
push
adc
pop
or
jecxz
gs
xor
ret
push
addb
xchg
fildl
rol
lods
fstpt
add
out
fnsave
insl
popf
sbb
mov
ja
cmc
and
cltd
enter
inc
ja
lock
mov
push
loope
js
leave
fcmovnbe
roll
push
push
xchg
mov
lahf
fistpl
movsl
pusha
addb
jg
shr
nop
dec
push
jg
sbb
push
aaa
in
clc
movsb
add
das
and
fdivl
jb
hlt
mov
jmp
sbb
adc
and
hlt
jl
dec
stc
mov
pop
rcr
xor
rorb
mov
xchg
outsb
out
shll
xcrypt-cbc
cmpsl
xchg
dec
popa
sub
incb
xchg
adc
cmp
xor
dec
push
scas
mov
mov
cmp
sbb
les
and
adcb
mov
push
pop
bnd
push
xlat
shll
xorl
or
jle
jle
add
dec
mov
je
mov
jbe
in
fldenv
sbb
idivl
mov
or
cmc
je
aam
push
mov
fimuls
andl
jb
jecxz
cmp
inc
arpl
dec
into
mov
pop
inc
call
enter
add
mov
jns
repnz
xor
jmp
je
xchg
mov
cmp
mov
ror
push
jg
je
inc
jmp
pop
sub
pop
mov
xchg
jns
fldl
pushl
mov
loope
int3
lret
divl
push
xor
int3
jne
cmpsb
imul
sahf
sahf
dec
xchg
aam
aam
je
arpl
movb
push
mov
mov
pop
or
push
clc
lahf
iret
testb
es
dec
dec
jp
into
std
dec
jl
hlt
dec
ss
adc
in
dec
xchg
lret
sarb
sbb
mov
ljmp
push
in
sbb
loop
sub
insb
push
push
dec
or
scas
cmp
out
or
orb
mov
lods
and
xchg
lock
dec
dec
adc
jmp
out
fisubrs
clc
int3
push
push
xor
lods
imul
and
jbe
in
push
mov
mov
or
and
clc
sub
cld
imul
insb
mov
out
shlb
test
push
stos
das
mov
cli
in
mov
xchg
jno
adc
adc
les
sub
fnsave
roll
jmp
int
sub
push
out
scas
pop
pushf
cmp
fs
sub
scas
es
or
call
lret
add
or
jecxz
fsubrl
lret
cwtl
pop
sub
in
sub
sarb
stos
or
cmc
cmp
adc
movsl
mov
xchg
jg
sub
andb
lret
imul
clc
cmp
or
cld
jecxz
push
mov
stos
pop
gs
hlt
lahf
sbb
and
leave
adc
cld
test
jb
popf
mov
jp
xchg
pushf
dec
movsb
dec
inc
jns
scas
adc
mov
jmp
inc
loop
dec
mov
sub
jbe
mov
mov
cli
adc
movsl
sub
push
pusha
test
aam
scas
iret
shlb
push
repnz
repnz
sub
sub
push
cmpsb
negl
mov
adc
cmpsb
insb
dec
ljmp
repz
inc
pop
scas
imul
adc
std
sbb
xor
cmp
jno
mov
out
push
xchg
imul
rorb
cmpsb
into
mov
filds
or
fsubrl
or
xor
pushw
in
mov
mov
inc
iret
popa
test
inc
fsubp
jnp
mov
jb
sub
cli
mov
inc
cli
mov
stos
hlt
mov
mov
and
cmp
lods
and
les
sahf
sub
mov
mov
inc
std
dec
in
add
dec
loop,pt
aas
jp
jle
and
lods
cmp
int3
xor
mov
xorb
sar
int
mov
test
andl
mov
loope
dec
fidivl
xlat
push
aas
push
cmp
xchg
mov
inc
gs
xor
lahf
and
xchg
xbegin
inc
mov
cmp
cmp
mov
fnstsw
or
rorl
xchg
jle
sub
jge
imul
test
pshufw
push
and
xchg
add
lods
ljmp
ds
push
dec
pop
inc
cwtl
leave
jecxz
mov
fs
and
push
adc
push
imul
pushl
popf
dec
out
pushf
mov
shl
mov
stos
sbb
mov
arpl
cmpb
fisubl
test
ret
mov
cli
popf
mov
lahf
xchg
mov
ret
push
outsb
daa
enter
inc
imul
mov
cmp
and
mov
imul
dec
inc
push
mul
imul
mov
jl
int
ret
cmpsl
add
jge
incl
out
mov
imul
dec
lahf
jle
mov
cmp
lods
vpmulhuw
pop
lods
aad
lods
or
or
sbb
jnp
lret
sbb
ljmp
add
cwtl
inc
jnp
pop
adc
pop
outsb
or
test
mov
jne
fildl
jbe
bound
cmpsl
insb
ljmp
scas
aaa
lods
aam
lahf
lods
sbb
jbe
loopne
adc
lock
rcrl
scas
and
xchg
mov
mov
daa
cmp
adc
lcall
adc
cli
es
jecxz
mov
add
xor
xor
xchg
inc
cld
scas
outsb
out
lea
test
push
aaa
pushf
xchg
out
adc
inc
fnstenv
xor
add
lcall
frstor
mov
int3
xchg
pop
jne
sub
in
cld
and
fisubrs
daa
xor
in
in
jmp
cmp
lods
negb
in
into
mov
cmp
and
mov
cmp
xchg
insl
fstl
pushf
xchg
sbb
push
std
mov
sub
inc
inc
sbb
or
sub
pop
jae
xor
popa
testb
in
lret
in
lods
fdivp
cmpl
lods
and
int
mov
adc
outsl
fwait
loop
push
push
push
dec
decb
fists
pop
xchg
or
gs
ss
js
mov
or
repz
mov
push
test
mov
push
pop
and
fcmove
int3
adc
cmpb
loope
mov
mov
push
adc
rorl
or
or
mov
mov
in
das
add
pop
xchg
cltd
cmp
mov
divl
pop
xchg
cwtl
mull
mov
jp
jecxz
xor
call
sub
add
xlat
add
imul
dec
sbb
mov
pop
in
and
sub
jae
int3
mov
arpl
inc
xor
sub
xor
sbb
adc
dec
or
rorl
mov
cld
fildl
std
xchg
and
dec
fdivrp
pushf
jns
cmp
pop
clc
loope
dec
jb
stos
cmovnp
add
out
imulb
inc
cmp
jae
or
mov
and
arpl
rcrl
mov
outsb
sarl
sbb
push
xchg
jo
sbb
clc
or
scas
pusha
sub
mov
mov
adc
ret
mov
psllw
or
loop
pop
xlat
cmpsl
or
aad
hlt
mov
aad
pop
aaa
inc
ror
test
iret
xchg
adc
cmp
jecxz
pop
loop
aas
push
jle
jo
push
out
sbbl
aas
hlt
shrb
fs
imull
dec
fdivrs
pop
fsubrs
rolb
out
and
lcall
aaa
jg
fxch
push
out
jae
jb
dec
outsl
pushf
cmpsl
imul
aaa
out
xor
mov
adc
dec
inc
scas
call
mov
icebp
pop
in
dec
test
adc
inc
add
mov
add
xchg
bound
or
sbb
pop
out
jo
mov
pop
fs
mov
xor
lcall
xchg
cwtl
mov
adc
in
cmp
jae
cmpsb
daa
or
lock
pop
outsl
iret
aam
pop
ret
pop
mov
inc
push
hlt
js
jmp
dec
sub
aas
inc
adc
sub
and
and
outsb
sub
pop
push
aaa
popa
and
ss
inc
fcomp
stos
inc
wrmsr
scas
pushf
sbb
xchg
enter
insb
lods
lahf
or
sbbb
jnp
or
cmc
pop
pop
adcb
push
sar
pop
inc
sub
sub
jp
jge
sbb
dec
sti
cmp
andl
aam
std
push
mov
mov
xchg
sub
clc
or
xchg
mov
imul
repz
pushf
loopne
dec
sub
add
push
jno
data16
mov
test
push
mov
adc
inc
xchg
add
mov
cwtl
or
test
das
xchg
or
lods
mov
cmp
jae
mov
icebp
cs
mov
mov
lods
pop
aaa
and
test
rcrb
xor
xchg
push
outsl
imul
cmc
sbb
xchg
cwtl
das
je
push
test
jo
fcompl
jno
in
push
lods
mov
pop
mov
ret
int3
rcll
add
sysenter
mov
clc
add
js
push
xor
lea
push
rcrb
mov
sbb
adc
loop
inc
nop
insl
loope,pn
sysenter
lods
in
fsub
add
push
cmpsl
jne
js
jb
mov
cld
mov
repz
add
jno
loopne
mov
loope
mov
cli
rcrb
pushf
in
pop
xlat
mov
mov
js
or
nop
lret
fildl
mov
adc
stos
push
cmp
xchg
in
aaa
repnz
or
roll
ss
inc
jo
aas
ds
mov
jecxz
push
leave
call
mov
mov
push
pop
test
sbb
mov
adc
insb
ret
movsb
adc
lcall
lods
popf
int3
js
inc
pop
test
andl
stos
rclb
lds
movsb
sub
xor
add
rcl
addr16
int
mov
jmp
cld
fstpl
mov
mov
arpl
addr16
and
add
imul
add
xor
fs
fwait
xchg
cmp
jmp
add
in
cmpsl
pop
and
fcoms
ss
jns
add
xchg
xor
inc
daa
sub
imul
xor
cld
sbb
sti
nop
inc
jo,pn
sbb
mov
adc
xchg
inc
push
pop
xor
in
insb
cmpsl
lret
outsb
into
repz
push
bswap
dec
add
inc
or
lret
sub
ret
mov
ja
add
dec
fwait
jnp
and
mov
repz
lds
cmp
test
gs
arpl
dec
sbb
sbb
or
out
sti
cmp
jbe
mov
jns
hlt
pop
popa
xchg
jmp
call
testl
mov
and
mulb
nop
sub
pop
je
mov
sub
push
repnz
insl
push
dec
cwtl
and
icebp
scas
sbb
into
loopne
jo
roll
js
daa
in
lea
inc
or
bound
insb
sbb
pop
fnsetpm(287
push
jno
in
jmp
iret
xor
ja
leave
or
call
sbb
in
adc
push
push
push
jne
sub
cmp
xor
int
xchg
jge
mov
fidivrl
mov
popf
scas
sti
pop
es
mov
xchg
push
mov
or
les
aaa
pop
push
cmc
dec
pop
dec
mov
push
adc
loopne
sbb
adc
pop
inc
add
pop
pop
decb
test
pushf
xor
ja
mov
mov
sub
push
decb
pop
addl
inc
push
cmp
adc
and
lretw
mov
inc
lret
nop
xchg
mov
lods
push
push
lahf
jp
mov
and
jns
pop
jb
adc
repz
mov
cwtl
inc
push
mov
lahf
sub
mov
filds
shrb
inc
rcll
mov
in
into
xchg
sub
dec
xorl
sti
leave
mov
in
push
scas
leave
add
cmc
data16
mov
jmp
dec
adc
ret
cmpsb
fwait
out
and
jl
pop
rolb
das
mov
lods
faddl
loop
jnp
jp
gs
cld
push
jns
out
push
movsb
xchg
jnp
adc
aas
cmp
ret
rclb
mov
push
jno
test
nop
mov
std
xchg
and
test
add
hlt
push
les
add
xor
cmpsb
adc
dec
movl
stos
roll
sbb
and
adc
jle
and
pop
lahf
adc
loope
inc
ljmp
data16
lods
or
lea
out
pop
mov
ficompl
hlt
mov
add
xchg
shrl
xchg
idivl
inc
dec
lahf
test
push
repz
jo
dec
rclw
or
sbb
in
pop
insb
and
sub
push
mov
jb
mov
test
mov
push
sbb
shl
loope
aas
mov
cmp
mov
ds
cmp
dec
jb
movsb
mov
xor
push
mov
pop
rorl
in
int
inc
xlat
and
xchg
xlat
in
test
in
mov
add
xchg
repnz
inc
xor
sub
and
sub
mov
adc
iret
xchg
dec
cs
cmc
pop
pop
out
scas
jp
rorb
pop
fsubrs
inc
fucom
push
add
insb
das
mov
cmpsb
adc
mov
jmp
data16
sarb
pop
inc
push
fldl2e
test
add
stos
pop
scas
out
sub
xor
pop
stos
xchg
push
jae
pop
cmpsb
mov
push
jo
stos
jb
stc
sbb
jb
fimull
or
ret
sbb
test
cmp
mov
es
or
jmp
pcmpeqd
mov
loope
pop
jae
mov
loopne
add
mov
fdiv
mov
sub
mov
pop
adc
int3
cmp
or
ss
int3
push
cltd
sub
pop
orl
jmp
movsl
push
adc
fldcw
pop
xor
lds
lds
rcl
in
ficoml
push
insb
and
jecxz
lods
mov
adc
pop
out
mov
lahf
lret
jo
out
lds
push
sar
rcrl
lods
test
pusha
cmpsl
aad
inc
xchg
sbb
and
pop
sub
lds
cmp
xchg
inc
out
popf
std
stos
dec
adc
pop
les
aam
or
data16
fcoml
arpl
xchg
jmp
or
xchg
xchg
les
loopne
inc
xor
mov
inc
lret
or
xchg
add
sub
lahf
pop
mov
sbb
orb
imul
addb
mov
addb
mov
push
popa
fidivrs
jbe
jb
aaa
loop
jb
push
pop
and
inc
sbb
jp
jae
or
into
pop
idivb
jne
add
bound
test
mov
loope
mov
push
gs
fstpl
mov
pop
daa
cmp
ss
pop
ljmp
sahf
jo
push
cmpsl
fs
mov
adc
leave
sarl
pop
in
shlb
fldenv
mov
cmp
inc
popa
test
jl
les
sub
cwtl
enter
pop
jne
movsb
nop
sbb
inc
dec
sub
cltd
xorl
push
cmpsb
push
push
sub
les
sbb
popf
mov
in
push
dec
or
gs
ret
xchg
cmpsl
in
xchg
testb
and
dec
pushl
sbb
imul
shlb
fwait
jp
aam
xchg
add
in
imul
jmp
dec
out
cmpsb
add
pop
out
lahf
fadd
sbb
adc
adc
mov
jle
mov
cmp
mov
scas
negl
jnp
jo
cmpl
mov
mov
pop
insb
mov
xchg
daa
mov
push
dec
scas
dec
adc
push
in
movsb
jbe
pop
and
aam
adc
movsl
into
int
in
jno
pushf
std
xchg
fwait
cs
mov
pop
pop
dec
stc
sbb
add
or
imul
hlt
insb
mov
lods
mov
shrb
cmp
sub
cmpb
mov
adc
inc
stc
ja
push
pop
outsl
and
xchg
mov
sti
sbb
jge
push
xchg
mov
inc
cltd
or
cmp
mov
arpl
mov
xor
or
enter
mov
pop
lahf
add
fistpl
dec
loopne
lret
push
jmp
jmp
int3
push
pop
cmc
adc
jo
arpl
xor
popa
pushf
and
ja
mov
mov
push
je
lock
jp
and
lret
mov
fs
aam
ret
and
inc
into
aam
jne
xchg
mov
jae
mov
mulb
pop
int3
aam
sbb
mov
jb
jecxz
bound
bound
push
jge
mov
testl
out
and
int3
pop
movsl
xchg
into
cmc
in
adc
sahf
pushf
lods
daa
inc
pop
test
or
xor
xor
push
adc
enter
js
andb
push
imul
fucomi
sbb
push
mov
es
popf
notl
cmp
cmp
inc
push
add
dec
jae
push
cmc
call
push
scas
outsb
notb
adc
xor
repnz
inc
inc
xor
lret
scas
sarb
or
adc
lcall
test
pop
loopne
shlb
adc
js
adc
xchg
or
das
popa
repz
cmp
les
xchg
pop
mov
mull
mov
mov
orl
pop
fsubrl
adc
or
or
xor
aaa
inc
xchg
sbb
nop
test
cmp
add
cwtl
inc
push
repz
pop
adc
lds
inc
mov
sahf
xchg
xchg
xchg
dec
mov
adc
aam
out
jg
aas
adc
pop
sar
mov
call
aaa
cld
jl
lcall
sti
xor
popf
sub
dec
call
inc
mov
jne
lahf
ds
inc
imul
pushf
nop
pop
lock
stos
test
sub
ljmp
negb
lret
repnz
push
xchg
jmp
dec
lea
inc
sbbl
add
outsb
movsl
loopne
iret
pop
out
ja
bound
dec
sub
loopne
out
inc
arpl
and
mov
adc
mov
jmp
fbld
xor
aad
or
or
adc
mov
pop
jge
dec
push
sbb
push
decb
in
mov
cmp
mov
jnp
or
andl
aas
xchg
rcll
in
mov
sbb
pop
adc
sbb
mov
test
arpl
mov
icebp
nopl
cmpsb
sub
test
test
add
test
sbbb
adc
addl
int
or
adc
jmp
push
mov
addl
sbb
jg
cmp
je
out
aaa
imul
add
movsb
pop
ja
push
and
mov
out
inc
inc
stos
mov
fwait
adc
movsl
push
add
in
dec
sub
loop
mov
sahf
adc
fsubrs
cmp
mov
movsb
test
adc
pop
stos
ss
cmc
xor
dec
jle
xchg
pop
idivb
ficomps
add
sbb
pop
popf
pop
in
cmc
loop
cmc
push
addb
jae
in
insl
jno
loopne
adc
test
dec
adc
into
fnstenv
and
cmovae
out
jg
cmpsl
icebp
mov
cmp
or
loop
mov
movsb
ret
inc
inc
push
movhps
jbe
push
and
jnp
mov
into
inc
fildll
mov
mov
popf
ret
jbe
lods
mov
mov
dec
out
outsb
xor
and
push
out
out
inc
mov
push
lds
ret
idivl
inc
adc
mov
lret
xchg
xor
adc
out
in
adc
mov
jle
or
cmpsl
sub
xchg
lods
dec
jge
cmp
push
lret
inc
fcomps
mov
add
push
cld
sahf
push
mov
movsb
or
stos
in
or
push
mov
inc
cmp
imul
dec
xchg
addr16
in
ljmp
test
into
cmp
lahf
dec
ret
or
lret
loopne
or
fisttps
and
in
lahf
pop
mov
mov
and
mov
adc
mov
aam
aam
sahf
ljmp
push
or
fildl
hlt
movsl
shr
mov
jmp
xor
fildl
xchg
cmp
xchg
sbb
std
adc
aam
ds
out
sub
mov
cmp
dec
dec
pushf
out
or
and
inc
jmp
jb
fstps
adc
pop
or
loop
clc
sbb
test
stos
cmp
or
push
lea
mov
sbb
sbb
sub
out
inc
mov
in
andl
or
adc
arpl
inc
push
shr
fdivrl
inc
les
iret
push
test
dec
sbb
sbb
loope
andl
pop
in
inc
add
adc
cmp
repz
add
jge
ja
xchg
lock
out
jno
or
pop
push
jg
cmp
mov
inc
and
push
dec
test
xchg
ds
sub
push
and
int3
push
jp
mov
fs
out
mov
movsl
sbb
jecxz
call
loop
pop
mov
jb
iret
cs
fistpl
jg
xor
ret
fsubrs
pop
sbb
dec
mov
mov
cmp
or
addb
jb
cmpsb
data16
pop
xlat
sbb
out
jmp
and
mov
lcall
jnp
test
and
pop
inc
xor
pop
rclb
jmp
xchg
pushf
push
pusha
daa
pop
xchg
cmpsb
xchg
stos
xchg
add
dec
out
notb
mov
mov
or
and
stos
inc
xor
push
lock
fnstsw
sbb
cmp
jne
aad
mov
popa
push
fs
stos
clc
fucomi
into
jle
sbb
test
xchg
sbb
outsl
shlb
loopne
stos
fsubl
mov
das
fs
add
lret
pop
jmp
fdivrp
mov
add
cwtl
dec
addl
mov
jnp
ds
fcoms
lcall
hlt
mov
mov
cmpsb
lds
arpl
push
mov
jp
jo
loope
bound
inc
mov
fidivs
fisttpl
push
shrl
es
cmp
jle
loopne
and
fdivr
sti
loopne
mov
push
in
or
jecxz
mov
cmp
stos
sti
subb
push
mov
mov
or
cmp
inc
mov
mov
and
mov
sbb
pop
or
sub
movsb
adc
xchg
sub
jl
pop
cwtl
imul
insl
aas
pop
xor
test
gs
out
adc
xor
add
sets
sbb
shrb
add
sub
pop
stos
sbb
fsubs
lcall
cmc
cltd
add
mov
mov
inc
jp
repz
adc
pop
fldlg2
cmpsl
jp
cmp
jne
jmp
fs
xchg
or
hlt
mov
push
add
jl
leave
ss
movsb
loop
lcall
jmp
jnp
sbb
add
cli
xlat
imulb
push
faddp
ret
ror
dec
sbb
and
cs
outsb
push
ficoms
mull
inc
es
inc
jle
stc
push
sahf
inc
push
sub
cmpsl
pop
mov
mov
iret
xor
lahf
mov
mov
push
jo
arpl
lahf
bound
cmpsb
out
ja
dec
imul
mov
negb
imul
fs
aad
xor
out
sub
loope
sbbl
inc
mov
mov
aad
pop
xor
mov
mov
xchg
ret
dec
cmp
enter
rorb
mov
fidivrl
xchg
clc
mov
cmpsb
repnz
out
or
cmp
loopne
imul
popa
pop
and
mov
sub
add
jp
popf
sub
cs
ret
pop
cmp
inc
lcall
int3
xor
aas
sub
fists
cmc
mov
push
jnp
into
sbb
sub
xor
or
mov
rclb
sahf
loop
pop
out
inc
push
lret
shll
dec
add
push
filds
jge
ljmp
push
sbb
clc
out
into
jmp
xchg
mov
imul
scas
jg
pusha
jne
jmp
mov
sub
outsl
xchg
inc
adc
les
and
in
imul
fisubrs
aaa
loope
add
in
stos
adc
repz
mov
cmpsb
push
pop
lds
shll
aam
cwtl
jbe
lahf
fstps
add
push
push
adc
rorb
roll
mov
inc
mov
or
orl
jnp
mov
add
imul
addr16
int3
and
pop
in
fdivs
jecxz
push
mov
arpl
fnsave
pop
cmpb
xlat
test
mov
add
pop
sbb
push
fstp
ja
add
repnz
add
stc
popf
enter
cmpsb
cmp
aad
xor
lret
xor
bound
ds
clc
andl
outsb
push
rcrl
xchg
pop
pop
cmpsl
stc
inc
pop
lock
jle
inc
cltd
fdivrp
add
lahf
imul
lahf
cmp
les
cmc
cmp
dec
sub
xor
inc
or
fnsave
cmp
cltd
rcr
fildl
mov
sbb
aad
iret
fcomps
cmp
jb
lods
sub
sbb
and
cmp
lret
push
das
sbb
fwait
add
les
xchg
push
push
int
jmp
pop
scas
jp
idiv
test
sahf
in
sub
aad
and
in
adc
push
into
bound
pop
mov
sub
sub
or
cmp
scas
jbe
ficoml
test
ss
mov
popf
data16
dec
push
ror
dec
stos
icebp
rorb
adc
inc
cmp
cmp
xchg
inc
cmp
pop
dec
bound
inc
hlt
cvttps2pi
and
and
jns
push
fs
stos
icebp
and
sub
aad
jle
lock
pop
sub
in
mov
mov
sub
add
mov
push
dec
xor
cmc
and
mov
xchg
nop
lcall
mov
int3
fwait
jnp
push
push
xor
bound
jns
out
push
lret
jo
pop
adc
stos
xlat
fwait
shl
in
xlat
stc
add
mov
sti
loopne
cmp
add
lret
test
push
sub
inc
inc
push
jbe
add
negb
cli
lods
push
and
pop
mov
xchg
mov
or
imul
or
outsl
lods
inc
push
enter
and
xchg
cmpsl
scas
cmpsl
mov
pop
aaa
in
pop
sub
cmpsb
pcmpgtb
add
out
movsb
inc
hlt
divb
xchg
call
fildll
stos
mov
into
lds
cmp
mov
rcl
mov
jbe
adc
adc
sbb
adc
mov
das
and
xchg
out
add
js
cmp
jmp
pop
sbbb
or
or
aaa
mov
jb
mov
xchg
lods
pop
outsb
rorl
and
ret
ret
mov
movsb
in
or
inc
pop
and
add
cmp
xchg
add
mov
push
push
jle
sbb
and
inc
inc
popf
leave
cmp
bound
pop
fidivrl
adc
push
cltd
or
push
dec
xor
cltd
or
jb
xchg
pop
sub
xlat
lods
sub
inc
mov
das
std
jg
adc
subl
loop
loope
xlat
sub
jno
jmp
in
outsb
andb
xor
xchg
pop
jg
xchg
adc
daa
or
addr16
cli
rorl
lahf
sub
cmp
inc
out
cmp
xor
push
movsb
aam
sarb
adc
lea
sarl
stos
sbb
mov
nop
roll
jge
test
sub
incl
shlb
outsb
mov
jl
inc
xor
cli
rcrl
out
xchg
push
sub
out
xchg
ja
pop
dec
xor
js
adc
sbb
dec
dec
dec
inc
movl
les
loopne
imul
aaa
addb
out
shl
pop
inc
xor
ret
adc
add
pusha
and
cmp
mov
adcb
mov
lds
rorb
inc
jmp
sbb
cmpsb
bound
or
das
xchg
xor
bound
sbb
mov
fsub
jl
adc
inc
mov
out
mov
fidivrs
aad
stos
mov
fstpl
mov
pop
inc
jo
push
mov
push
mov
imul
xchg
dec
mov
sbb
push
arpl
cmpsb
rorl
dec
pusha
iret
sti
jo
push
xor
rolb
clc
and
mov
sbb
jne
mov
hlt
jg
add
dec
lahf
and
iret
testl
xchg
aad
jo
dec
loop
mov
ror
test
push
jnp
lock
and
mov
sub
sbb
mov
mov
jle
mov
ds
rcll
and
aad
jns
jno
scas
jmp
cmpb
call
loopne
js
sbb
mov
les
fsubrl
push
sbb
daa
sub
lahf
pop
pop
jbe
sub
addr16
bnd
mov
fdivp
cli
outsb
adcl
mov
and
mov
popa
fsubs
cmpsb
fisubrl
popa
xchg
data16
stc
frstor
test
adc
jo
add
cmp
adc
pop
push
jle
sub
lret
fldcw
pop
loope
mov
push
pushf
jnp
push
leave
mov
adc
hlt
movsl
sub
fcmove
cmp
xchg
cmp
fs
pushl
das
arpl
xchg
test
loope
ljmp
andl
out
das
andb
add
test
leave
or
inc
fxch
ficoms
cmp
fs
jl
dec
and
orl
cmp
in
in
pop
push
xchg
jmp
pop
loopne
and
jge
add
icebp
or
sbb
in
hlt
daa
xchg
icebp
or
dec
pop
dec
sahf
and
std
stc
push
push
loope
aas
lock
sbb
push
sub
int3
and
daa
fs
inc
push
pop
cli
movsb
push
xchg
pop
sub
fcoml
out
sbb
push
stos
push
pop
adc
jo
lock
outsl
sub
add
push
js
cmp
and
cwtl
mov
xchg
in
and
rcrb
int3
sbb
pop
jl
sbbl
jl
push
in
push
in
or
ss
xor
inc
xchg
mov
clc
idiv
addr16
inc
or
shrb
sahf
xchg
pushf
imul
mov
sbb
insb
xchg
xchg
pop
fdiv
dec
jp
sti
stos
jecxz
jp
enter
dec
mov
sbbb
cmp
xor
cmp
inc
push
cwtl
push
lret
jmp
inc
repnz
cmpsb
shlb
ja
fidivs
mov
sbb
xor
xchg
and
popf
pop
call
ds
aas
mov
mov
ret
vminss
xchg
aam
lret
xor
clc
aad
xchg
jmp
outsb
popw
sub
dec
imul
pop
in
push
negb
nop
std
inc
inc
aad
mov
sbb
adc
xchg
decl
mov
rcr
cld
rcrb
pop
push
push
outsl
cmpsl
xchg
leave
lea
rcrb
leave
mov
sahf
jo
inc
icebp
push
in
ja
mov
insl
cmc
sbb
cmpsl
mov
ret
pop
fidivrl
jo
xchg
mov
jl
or
jae
and
fiaddl
ror
gs
or
mov
faddl
shll
sbb
jae
daa
adc
aas
adc
xor
cmp
js
in
addr16
cmp
cmpsl
daa
pop
add
dec
fnstenv
dec
test
fldt
dec
pop
dec
insb
mov
sarb
cmp
adc
js
adc
cltd
and
sub
pusha
js
in
mov
xchg
and
adc
inc
dec
pop
jmp
mov
jle
adc
and
in
jno
push
xor
mov
fs
and
enter
out
repnz
and
in
mov
clc
bound
xchg
xchg
movsb
push
iret
pushf
cmp
lock
jo
das
dec
cmp
mov
int3
adc
movsb
pop
adc
xor
add
imul
sbb
dec
and
or
add
movsl
push
pop
sub
cwtl
in
and
inc
ret
dec
popa
sub
in
cmpsb
lock
ret
sbb
ret
xor
and
jg
ret
fadds
or
add
in
jae
mov
and
fstpl
sub
pushf
negl
out
pop
les
je
rcrl
mov
push
sbb
adc
inc
stos
fwait
inc
sti
cmpsb
pop
push
shll
ljmp
jnp
jns
push
movsl
or
je
add
stos
sbb
mov
dec
mov
lcall
pop
es
inc
aam
lods
mov
lods
icebp
and
aam
jg
ret
jb
rorb
xor
sbb
jmp
imul
mov
out
daa
fmulp
xchg
es
loopne
push
test
xchg
or
clc
aas
cmc
jmp
xor
mov
mov
lcall
inc
cmp
pop
jnp
xor
pop
bound
push
inc
out
push
pop
lds
aas
sarl
icebp
add
push
pop
xor
adc
mov
xor
and
jbe
stc
xor
jae
lock
cmp
xchg
dec
mov
xchg
lock
addb
rcl
ljmp
push
ror
sub
sbb
in
decb
out
inc
pop
and
lock
xchg
insl
pop
loop
fcmovu
movsl
and
pop
jb
lret
and
add
dec
sub
sbb
lock
into
mov
jb
pop
leave
std
rorb
sub
xor
icebp
fs
sbb
adc
and
push
cwtl
xchg
popf
or
icebp
outsb
lds
gs
repz
and
jp
pusha
pop
inc
cmp
inc
je
xor
insl
sahf
adc
sub
stc
adcl
and
shlb
repz
fldenv
mov
incb
and
jmp
popf
add
pop
test
sbb
lods
aam
movsb
cmpsb
dec
in
outsb
push
outsb
jns
clc
gs
or
xor
mov
sarb
push
dec
loop
jnp
repz
xorl
push
sub
sub
add
sbb
jecxz
nop
les
push
jns
pop
push
test
mov
lcall
das
mov
js
jl
xchg
scas
pop
sbb
stos
std
jge
xchg
push
jge
cltd
add
repnz
sbb
sbb
lds
jl
dec
enter
int
cmpsl
xlat
pop
dec
mov
jne
push
pop
insl
push
pop
fisubl
dec
lock
sub
mov
xorb
push
lret
outsl
mov
lcall
or
lret
push
scas
cmp
xchg
lods
cmp
sbb
pusha
lods
jno
mov
ds
jp
bound
pop
jno
arpl
popa
add
mov
adc
int
mov
mov
push
popf
inc
movsl
fnstcw
rcrl
xor
or
fdivrl
cs
xchg
repnz
mov
inc
lahf
push
or
adc
pop
cmp
je
cmpsb
cmpsb
insb
push
jne
ret
ror
stos
stc
fsubrl
adc
outsb
cli
inc
ja
push
jge
es
mov
mov
and
out
mov
fmull
insl
cmp
mov
es
bound
jnp
push
test
mov
push
or
mov
xchg
aas
or
sbb
push
push
and
dec
lock
jle
inc
lret
add
pop
mov
int
iret
movb
ja
push
leave
jmp
xchg
js
or
and
mov
pop
cmp
inc
push
mov
sbb
in
popf
inc
cmp
outsb
loope
shlb
or
xchg
mov
fistps
add
in
jge
into
add
mov
hlt
repnz
test
sub
jbe
mov
sahf
adc
or
data16
jb
mov
shrw
or
push
mov
and
dec
scas
shll
bswap
push
jecxz
js
cmp
rep
xor
dec
push
dec
pushf
xor
push
fdivrl
in
out
ljmp
xor
sti
lods
outsb
mov
in
jb
sub
lea
movsl
ljmp
mov
jl
dec
mov
adc
in
inc
nopl
aas
xor
movsb
dec
and
hlt
dec
loopne
fmuls
dec
ja
cmp
punpcklwd
cltd
adc
xor
sub
mov
lret
push
or
push
dec
popa
pop
cmp
xchg
sti
lea
mov
and
jns
les
iret
repnz
dec
and
mov
jne
orl
int
lods
nop
adc
into
and
jae
pop
cmp
out
cmpsb
mov
and
test
jo
daa
cwtl
shrb
decl
ja
xchg
inc
incb
js
xlat
andb
loopne
or
out
nop
leave
and
loopne
pop
mov
pushf
or
aaa
int
mov
test
int
fucomp
add
shr
test
mov
lcall
adc
scas
icebp
scas
fiadds
push
mov
push
fwait
test
js
mov
inc
daa
pop
dec
mov
push
stos
mov
scas
js
enter
sub
cltd
push
jne
push
outsl
lret
xor
ret
orb
cmp
call
add
stos
push
lret
fs
xchg
xchg
or
mov
nop
pop
test
in
test
jecxz
in
inc
pop
fcmovu
xchg
sti
mov
dec
jo
and
lea
fists
push
cli
dec
dec
insl
cld
es
pop
or
inc
sets
xor
insl
scas
imulb
lcall
lock
mov
out
xor
mov
xchg
mov
pop
fsubrl
das
adc
outsb
or
inc
aam
xor
dec
movsb
sub
cmp
adc
inc
movsb
jo
dec
lret
testb
test
jmp
repz
pop
add
xor
sbb
push
aam
mov
sub
test
sub
popf
xlat
jae
and
pop
pop
fwait
dec
test
add
lret
mov
dec
fwait
inc
insb
clc
sub
jmp
mov
mov
outsl
or
mov
test
loop
iret
xor
pop
fcom
sbb
sbb
mov
lds
push
std
dec
mov
pop
xchg
xor
mov
loop
jae
mov
scas
and
push
dec
out
je
xor
mov
sbb
ja
or
sub
into
mov
mov
and
pop
notl
ja
sub
pop
or
or
lds
and
inc
adc
call
add
add
mov
jecxz
mov
pop
pusha
cs
push
jle
cltd
scas
xchg
jnp
je
ficoml
jle
fcoms
cmpsb
popf
sbb
inc
rolb
enter
push
or
sahf
sete
jno
sbb
cwtl
add
out
add
adc
mov
stos
sbb
mov
jne
pop
jl
jns
xchg
aam
add
mov
push
inc
pop
ljmp
jnp
mov
cmp
add
cmpsl
pop
add
call
aaa
mov
data16
and
incb
bound
int3
imul
or
adc
xchg
loop
es
fs
out
cmpsb
test
sub
mov
push
cmp
adc
aam
mov
clc
push
adc
int
movsb
lret
xor
sahf
sbb
orl
outsl
sarb
jecxz
add
mov
shrl
sbb
aas
mov
andb
call
lds
inc
popa
pop
scas
mov
sbb
test
fs
outsb
add
repz
cmc
sub
sub
jnp
dec
mov
into
outsl
or
vmptrld
int
in
in
add
pusha
push
sub
out
sub
sub
cmp
mov
icebp
dec
stos
rclb
cltd
pop
cwtl
jne
cltd
insl
test
gs
movsb
mov
inc
push
sbb
pop
cmp
mov
inc
enter
pop
add
mov
shlb
sbb
cmc
sar
mov
sub
pop
xchg
xchg
orl
cwtl
mov
nop
inc
xchg
inc
pop
xchg
add
iret
xchg
pop
test
jne
int
jnp
jne
sub
out
xchg
das
es
rolb
ss
add
cld
xchg
push
pop
frstor
push
pop
adc
loope
clc
and
inc
xor
or
lds
dec
fisubrs
into
test
or
jle
enter
fldenv
push
push
loopne
leave
repz
ss
movsb
popf
inc
cwtl
ficoml
hlt
xchg
pop
rcrb
in
xchg
cli
jge
xorb
pop
pop
in
lahf
xchg
mov
and
cs
jmp
out
cmp
dec
mov
fsubl
mov
lea
cltd
popf
mov
add
push
inc
daa
inc
movsl
jle
movsb
jmp
fwait
test
xor
inc
stos
mov
sub
stc
daa
mov
mov
jbe
and
push
nop
movsl
push
scas
fists
aad
dec
cmovbe
ror
cmp
orl
fadds
or
out
fisubl
mov
or
jns
xlat
lahf
push
ds
mov
sar
loopne
push
out
push
or
push
add
add
iret
dec
xor
or
mov
lret
jnp
jle
fcomp
xchg
jl
mov
insb
shlb
adc
add
jb
test
cwtl
std
mov
and
lods
push
or
sahf
xchg
pop
xor
js
fs
ds
lods
cmp
mov
xor
mov
cltd
mov
mov
or
push
mov
push
ljmp
or
mov
mov
push
aad
dec
pop
lods
add
add
mov
or
ds
sbb
adc
push
out
sbb
pop
ja
add
insl
pop
push
adc
test
repnz
sub
shlb
movsl
or
leave
mov
sub
or
mov
shlb
call
enter
push
rorb
jnp
shlb
inc
in
dec
imul
nop
sbb
popf
sub
pop
xchg
daa
cmpsl
in
scas
shlb
pop
push
lods
sbb
and
lock
gs
cmp
xchg
insb
pop
insb
addr16
loope
je
lret
and
inc
cmp
shrl
cmp
pushf
lcall
push
addr16
ret
outsb
pop
in
stc
scas
push
movb
aam
pushf
std
adc
cltd
out
add
pop
and
mul
push
xchg
jg
add
and
adc
add
sbb
mov
xor
lahf
mov
push
sub
adc
cmp
roll
mov
jg
andl
add
pop
les
stc
jg
inc
sti
ret
cwtl
imul
rcll
call
test
test
pop
mov
dec
adc
lahf
fisubrs
push
in
and
add
or
jl
pop
xchg
dec
lret
sbb
jne
dec
mov
or
jmp
xchg
or
ljmp
lret
lret
ret
inc
push
push
mov
push
jne
jl
mov
xchg
leave
ss
dec
dec
pushf
sbb
lcall
in
jp
adc
subl
mov
les
or
mov
dec
mov
lcall
clc
es
cmovp
mov
jmp
jo
fists
pop
inc
mov
mov
cs
fdiv
dec
daa
fs
jno
dec
lods
pop
mov
les
inc
add
ss
int3
xchg
mov
outsl
mov
add
ret
jb
fs
or
bound
mov
xorb
subb
testl
cld
adc
mov
pop
arpl
add
ljmp
pop
rcl
mov
or
xor
push
jae
nop
mov
call
rcl
int3
aaa
out
movsl
fpatan
stos
inc
mov
mov
mov
repz
stos
movsbl
push
outsb
or
filds
adc
fcoml
sbb
stos
cwtl
or
outsl
xchg
pop
in
sti
push
sub
popf
push
xor
ficompl
lods
outsb
cmpsl
xor
insl
inc
ljmp
adc
scas
jnp
jg
push
fwait
inc
lahf
push
in
sub
mov
enter
or
ds
pop
mov
cmp
ljmp
xchg
cmp
ljmp
call
loopne
fnstsw
and
insl
leave
loope
mov
data16
inc
pushf
mov
shll
cwtl
xchg
mov
dec
adc
adc
fcomps
fistl
gs
popa
push
imul
std
cmp
add
mov
repz
iret
popf
xchg
or
popf
push
sbb
push
mov
inc
shr
stc
arpl
or
loop
fwait
xchg
loopne
mov
fsubrs
adc
rorb
cmp
pop
loopne
ror
xlat
mov
push
add
adc
push
mov
in
fisubrs
in
in
xchg
pop
ss
pusha
lods
or
mov
add
pop
and
fs
or
insb
push
imul
mov
fwait
lcall
mov
adcb
xor
bound
cmpsl
or
mov
xor
dec
inc
or
pop
fisubrl
cmpsl
or
lret
lret
sbb
test
fdivs
and
mov
cmc
aaa
mov
stos
int3
dec
push
fisttpll
outsb
pop
leave
cld
fldenv
pusha
mov
lock
xchg
or
push
in
mov
mov
shrl
nop
shl
push
pop
lea
ljmp
outsl
xor
pop
andl
push
cli
push
cmpsb
jmp
inc
jg
mov
cmp
stc
mov
cmpsb
mov
aam
outsb
push
sahf
or
push
inc
int3
add
call
push
divb
push
out
rcl
ljmp
mov
sbb
push
cmpsl
roll
popa
inc
mov
mov
mov
add
mov
push
fildl
and
les
aas
sub
jne
xor
push
mov
pop
cltd
stos
cmpsl
xchg
int3
cmp
loopne
xchg
inc
bound
shrb
sbb
and
loope
les
sbb
jns
scas
ss
arpl
out
and
add
adc
out
add
cmp
xor
cmpb
dec
cmc
in
adc
mov
js
addr16
jmp
call
mov
jne
repz
mov
jo
sub
fwait
jnp
push
pop
dec
xchg
das
repz
or
movb
divb
gs
movsl
cli
es
outsl
jno
into
pop
xchg
movsb
pop
add
or
or
test
jmp
dec
rcr
cmp
stc
jb
fucomp
adc
xchg
mov
lcall
mov
lahf
ret
mov
xchg
adc
scas
or
ja
jno
arpl
in
pop
mov
test
jle
add
push
inc
push
ret
out
fdiv
xchg
jmp
imul
lea
add
sub
add
lcall
in
jle
inc
outsb
subl
mov
cmpsl
rcrl
mov
mov
pop
test
or
scas
test
dec
js,pt
or
push
inc
insb
sub
push
fstps
dec
inc
mov
dec
std
mov
rcll
mov
cltd
stos
js
dec
imul
bound
fwait
cmp
leave
mov
ret
or
aaa
cs
mov
sub
clc
cmpsb
aam
adc
loopne
jp
push
jbe
mov
lret
pop
jo
mov
dec
setno
jo
mov
inc
sub
in
call
dec
iret
pusha
push
pop
cmpb
int3
push
and
divl
sbb
xor
pop
inc
enter
or
inc
repz
jmp
jle
sbb
add
cmp
and
in
leave
mov
movsl
dec
jge
mov
ss
notl
mov
xchg
sub
jae
or
aas
mov
push
jmp
xor
cwtl
xchg
das
stc
xorb
xchg
ret
mov
cmp
std
mov
rolb
cmp
fcompl
imul
sti
inc
adc
lock
cli
xor
or
dec
push
sar
mov
jle
ret
popf
and
xor
insb
ja
push
xchg
outsb
xchg
mov
adc
pop
mov
mov
adc
dec
xor
and
mov
and
mov
ret
push
cmp
movsl
push
cmc
push
adc
lock
push
mov
jnp
push
stos
mov
std
in
shll
mov
or
out
push
rcr
mov
cmova
push
subb
pop
mov
lods
add
jae
or
jns
jnp
aas
lods
mov
testl
pop
fsubs
pushf
pop
out
cld
imul
jne
xchg
or
or
cmc
xchg
fisubrl
xchg
push
jne
adc
mov
xorb
lds
loop
inc
lcall
aad
test
fistps
and
sub
out
movsl
test
push
mov
pushf
fisubrs
mov
fsubrp
mov
lcall
test
sub
cwtl
and
decb
pushl
lahf
andl
int
daa
jecxz
int
aam
inc
jbe
mov
ret
cmpsb
loopne
data16
or
icebp
cli
mov
push
and
inc
and
inc
ja
mov
cmp
sub
add
cli
ud0
push
test
xor
sub
push
jbe
fsubr
jl
popf
sahf
adc
mov
inc
mov
rclb
inc
bnd
sbbl
cmpsl
jo
sbb
push
add
push
fstpt
dec
insl
cmpsl
mov
mov
aaa
ja
lcall
test
and
xchg
sub
dec
adc
subb
pop
popa
imul
fs
call
lcall
out
ljmp
inc
jl
push
jmp
test
mov
lret
cmp
idivb
sub
test
je
mov
daa
in
rorb
mov
push
mov
ss
dec
decb
sub
loopne
inc
push
cli
and
ljmp
adc
xchg
pop
or
mov
aaa
inc
lret
js
stos
xchg
roll
inc
les
mov
movsb
sub
mulb
pop
ja
or
imul
idivl
in
imul
call
popf
fstpt
add
inc
ds
mov
push
add
out
loope
or
gs
fistpll
sbb
movsb
les
rcrl
mov
cmc
stos
mov
stos
enter
in
outsl
jge
pop
mov
cltd
jge
pop
test
call
int3
addb
addr16
mov
xchg
cmp
shl
fldl
or
push
inc
add
dec
js
aaa
push
mov
stos
cmp
fwait
cwtl
pusha
std
pop
not
add
adc
loope
gs
xor
mov
nop
xor
cmc
and
insb
inc
mov
andl
add
jno
add
dec
iret
push
test
push
mov
icebp
xor
mov
add
arpl
adc
leave
cmc
stos
adc
sbb
cmp
sbb
push
fsubs
scas
out
fistpll
dec
dec
dec
cmp
repnz
dec
rcl
pop
dec
enter
add
and
mov
ret
fidivl
aad
es
das
in
cmpsl
rolb
sub
in
int3
outsl
mov
lods
in
movsb
lcall
es
jnp
stos
lods
jle
pushf
clc
jnp
out
push
push
sti
xchg
outsb
cmpsl
stos
in
pop
xchg
sub
adc
jnp
fisttps
test
pop
mov
and
sbb
test
ds
sub
ficompl
xor
xor
stc
cmc
cmp
call
dec
ret
add
pop
stc
fadds
inc
xor
iret
adc
or
cli
fucom
or
jno
aam
jmp
mov
fdivr
jge
cmp
inc
stc
ds
push
mov
xor
mov
mov
xchg
test
xchg
mov
and
popa
subl
add
mov
and
mov
stos
mov
or
subl
jae
adc
addr16
cmp
lcall
mov
xlat
arpl
mov
dec
pop
clc
into
inc
mov
mov
loopne
mov
sub
and
sub
cmpsl
clc
mov
sbb
cmp
and
push
fdivrl
cmpsb
jmp
cmp
fnsave
out
mov
jge
out
xchg
xor
out
mov
push
fwait
popa
xor
pop
gs
stos
call
dec
adc
scas
cmc
inc
add
mov
cmp
sete
or
sarl
bound
out
push
dec
je
push
dec
fldt
fnsave
outsl
adc
stos
punpckhdq
push
adc
xchg
xchg
cmc
shrb
fcompl
pop
fwait
inc
stos
lret
mov
aaa
std
xchg
pushl
cld
push
movsl
outsb
popa
add
cmpb
mov
push
push
cmp
xchg
pop
rorl
outsb
popa
jno
xchg
mov
add
test
adc
nop
pop
jnp
mov
sub
shll
lods
mov
xchg
inc
add
int
gs
test
les
orb
pop
add
adc
mov
mov
pop
sahf
into
aas
loop
fildll
mov
imul
pop
fidivl
dec
into
push
lret
arpl
or
jge
mov
idiv
mov
add
and
xchg
mov
pop
or
gs
pop
stos
and
call
or
pusha
mov
cltd
xchg
inc
add
hlt
cmp
imul
cmpsb
xor
loop
add
nop
mov
sbb
sbb
lret
lea
ficoms
pop
sub
cmp
mov
iret
ret
push
aaa
ja
jge
and
and
into
and
or
adc
mov
loope
push
xor
xchg
adc
dec
movsb
cmp
or
mov
std
scas
inc
cmpsl
enter
repz
mov
jns
rol
cmp
jae
orb
ljmp
push
mov
insl
sbb
mov
dec
scas
mov
mov
mov
xor
push
push
add
mov
inc
dec
outsl
cmp
jge
pushf
imul
out
insl
mov
sub
jne
cmc
xchg
jmp
stc
imull
cmpsl
inc
insb
inc
xor
in
push
std
xor
aas
push
mov
dec
mov
push
or
inc
sbb
add
movsl
pop
jecxz
mov
and
out
sub
mov
and
xor
test
das
std
and
mov
repnz
jno
bound
xchg
pop
mov
mov
int
mov
mov
inc
xorl
lock
test
je
scas
xchg
loopne,pn
lahf
fs
adc
enter
adc
dec
pop
lods
mov
dec
lahf
adc
test
fdivl
addr16
pop
lret
jecxz
xchg
fmul
push
mov
std
xlat
xlat
or
cs
mov
push
cli
scas
xor
cmp
ljmp
push
dec
sbb
mov
mov
pop
test
xor
js
popf
push
sarb
pop
jne
test
jb
jnp
sbb
mov
cmp
dec
ficomps
pop
or
pushl
incb
inc
adcb
mov
es
mov
popa
cmpsb
das
lock
mov
int3
mov
int
sbb
out
shr
sub
jg
in
cmp
popf
ss
popf
cmc
arpl
jl
inc
lcall
jb
push
out
inc
cltd
xchg
fisubrs
rcl
mov
stos
xor
push
mov
sti
mov
int3
sbb
addr16
cmp
test
push
je
jno
xlat
adc
mov
shlb
push
in
push
imul
sub
enter
test
xor
daa
in
xor
xchg
out
loope
fistl
cmp
jg
jge
je
imul
push
mov
add
xor
dec
ret
pop
inc
mov
sti
xchg
popa
mov
out
xchg
mov
cld
add
dec
sbb
mov
data16
shlb
fldenv
dec
sbb
sub
rclb
je
dec
xchg
lcall
int
sbb
insl
das
das
ljmp
sub
cltd
xchg
mov
aad
cmp
lret
and
in
insl
insl
fld
or
adc
mov
lcall
adc
mov
shrb
jg
aad
xorb
lods
lret
mov
jbe
nop
mov
movb
mov
call
nop
sub
movsl
aaa
add
insl
sbb
push
jg
dec
mov
cld
mov
lret
jmp
mov
jne
pop
jecxz
shr
shl
push
unpckhps
or
jl
cs
ficoms
xor
insb
lock
pop
cld
push
xor
jo
test
xor
shrl
aas
sub
aam
int
sbb
cli
inc
and
nop
mov
sbb
cs
dec
jmp
and
sbb
xor
sub
jnp
sti
inc
clc
ss
cli
mov
adc
xlat
add
pusha
fwait
pop
xchg
lret
dec
out
sub
addr16
mov
cltd
jl
add
push
lea
das
pusha
cwtl
es
xor
push
lock
in
jmp
xchg
in
or
mov
sub
out
mov
ss
jno
fists
add
jae
or
xlat
int
nop
sahf
mov
ljmp
cltd
sti
cmp
movsl
es
cmc
es
outsl
inc
dec
shlb
adc
mov
push
adc
mov
ficompl
mov
repnz
dec
pop
popf
js
add
mov
jae
inc
jo
repz
repz
stos
incb
ret
pop
js
sub
fidivrl
pop
mov
stos
mov
js
pop
add
push
fsubl
jno
nop
cmc
mov
popf
xchg
lods
ja
dec
scas
fistl
dec
popf
lods
jno
mov
mov
sub
sbb
push
dec
sbb
lret
loop
aas
jbe
loop
push
lods
imull
inc
mov
cmp
je
loope
xchg
aaa
fldt
xor
mov
aam
addb
out
imul
pop
dec
push
aad
inc
bnd
xor
xchg
adc
xor
insb
sbb
aad
movsb
cmpsl
cmp
repnz
dec
jmp
mov
mov
cmpsb
cmp
xchg
cmp
cmpsl
mov
pop
in
popf
aad
fiaddl
lods
sarl
jns
arpl
and
pop
jae
jbe
cmp
stos
iret
decb
lock
stos
jae
data16
leave
fbld
xor
into
test
jmp
cmp
lcall
xchg
mov
inc
and
dec
movsb
cmp
sarl
aaa
inc
inc
inc
shl
mov
and
scas
cmp
xor
push
lds
or
mov
mov
cmp
inc
pop
jo
pop
xchg
cwtl
inc
imul
out
rorl
rcl
pop
shrb
loop
cmpsb
xchg
lret
lea
leave
pusha
pop
and
sub
out
rcl
jg
xchg
sbb
jns
test
scas
popa
es
xor
lods
mov
ja
xchg
sub
and
bsr
arpl
rcrb
ret
sub
push
test
pop
push
add
mov
lea
mov
pop
dec
cld
add
inc
mov
jns
or
xor
int
clc
push
mov
cli
push
fstl
stc
iret
lcall
rcr
cltd
dec
fld
lcall
pop
xor
rorb
mov
les
jnp
js
xor
out
dec
mov
and
dec
lret
mov
iret
mov
sti
adc
aad
mov
jo
arpl
adc
cltd
pop
pop
imul
xlat
imulb
mov
dec
lcall
cmp
mov
or
adc
loope
and
in
icebp
cwtl
data16
mov
fistps
test
daa
repnz
daa
cmp
lods
add
pop
sub
leave
or
test
rcr
std
insl
das
cli
xchg
clc
jg
xchg
xchg
loope
movsb
cwtl
cmp
inc
jle
sbb
int
mov
ficoml
push
jl
or
rcrb
mov
xor
or
inc
out
jo
sbb
jl
movsl
out
sahf
pop
jbe
xchg
je
cltd
jb
sub
adc
lods
jno
icebp
push
push
es
xchg
inc
push
inc
sub
repnz
add
imul
xchg
ja
in
cmp
xchg
andl
fistl
out
add
imul
and
aam
add
jecxz
jns
ja
fisubl
xchg
fwait
xor
scas
pusha
idivl
mov
mov
add
cmc
lahf
pop
popf
sbb
adc
addr16
cmp
mov
jl
xor
sub
jl
hlt
ss
dec
mov
fcompl
pop
test
mov
inc
cmp
stos
jo
sbb
xor
int
pop
inc
mov
jne
xchg
lret
loope
repnz
pop
dec
fs
leave
and
enter
ja
push
imul
push
xor
in
xor
jg
push
mov
js
gs
mov
or
xchg
jns
test
lret
fmuls
mov
fwait
cmp
mov
in
adc
popa
rcl
adc
dec
mov
outsl
je
cmp
sbb
adc
fnstsw
cmp
aas
fsubrs
jl
mov
sti
fwait
jb
mov
repz
or
cmp
mov
sarb
insl
pop
push
fisttps
cltd
lret
jge
xor
fldt
es
jno
aaa
jmp
pusha
push
add
jge
imul
push
fsubrl
insl
psubw
fmuls
add
push
lea
mov
push
call
inc
rcrb
jge
mov
dec
mov
mov
adc
xor
add
adcb
jmp
loope
imul
xor
ds
frstor
out
jnp
mov
stos
dec
fcoms
aaa
gs
inc
xchg
xchg
cs
ss
or
push
ss
ret
imul
push
icebp
out
add
dec
sbb
xchg
sbb
xor
mov
and
ret
mov
mov
cmc
pop
icebp
pop
clc
scas
or
pop
mov
clc
adc
call
or
pop
lds
mov
sbb
hlt
cli
jne
push
repz
loopne
push
insl
rcll
mov
ja
rcll
mov
arpl
inc
rolb
cmp
insl
jge
or
pop
pusha
adc
ret
xor
fildl
pushf
push
incb
or
insb
int3
gs
stos
mov
loopne
sbb
mov
xchg
pop
add
out
mov
fs
lcall
js
jns
adc
mov
flds
jl
dec
fldl
nop
mov
sub
mov
pop
xchg
sti
inc
pop
loopne
fstps
mov
test
pop
mov
cmp
xor
mov
ja
mov
imul
lahf
mov
and
pop
sub
push
rcll
bound
mov
cmp
or
jecxz
testl
fldenv
and
and
inc
and
sbb
xor
dec
cmp
daa
data16
pushf
cmpsl
rorl
mov
popa
out
int3
mov
mov
lahf
fldcw
les
and
lods
dec
aaa
sbb
cmp
call
mov
shr
xchg
inc
insb
scas
int
mov
out
mov
stc
out
xchg
aaa
ret
outsb
sahf
jge
pop
aam
aas
pop
jg
dec
les
mov
or
xchg
xchg
and
fdivrs
adc
fsub
pop
int
stc
movsl
adc
xchg
add
mov
add
mov
lods
std
pop
sbb
dec
push
add
or
test
aas
add
fnsave
imul
andb
push
xchg
cmovo
add
xchg
repnz
jae
cld
sbb
insl
jmp
jne
sub
in
cmpsl
lods
pop
aad
push
outsl
int
subb
outsl
dec
mov
fildl
jo
out
in
mov
or
nop
sti
lods
mov
add
xchg
sbb
cmpl
imul
lcall
or
test
mov
je
insb
jnp
lret
push
add
shlb
mov
fmuls
loop
inc
inc
xchg
enter
mov
pop
xchg
jmp
mov
push
ret
and
js
xchg
jo
xlat
fimull
js
pop
add
icebp
adc
sbb
mov
call
sbb
fstps
cli
jp
adc
loope
sbb
ja
shrl
pusha
jbe
cmpsl
cwtl
and
mov
daa
dec
ss
cli
sbb
les
aaa
in
rcl
add
andb
stos
xor
in
mov
and
sti
bound
sbb
push
mov
cwtl
cwtl
pop
jle
pop
enter
pop
add
sub
nop
aaa
mov
push
js
dec
pushf
insl
inc
dec
adc
dec
ret
mov
rclb
mov
aas
adc
fcomp
sbb
xorl
subb
sub
mov
ljmp
and
add
mov
out
jne
mov
clc
inc
mov
mov
fisttps
dec
pop
xor
daa
lock
cltd
xchg
sbb
stos
inc
mov
dec
sub
mov
pop
mov
not
adc
fisttpll
test
fstl
sbb
xchg
adcb
push
mov
int
pop
idivl
lret
stos
das
out
rclb
icebp
aas
push
and
cmp
adc
fwait
repz
sahf
pop
pop
imul
jns
pushl
add
lret
loop
lea
xchg
add
fisttpl
roll
stc
pop
push
inc
lea
movsb
cltd
int3
mov
mov
sbb
mov
cmpsl
sbb
adc
ret
xchg
push
mov
jbe
bound
adc
negl
jp
dec
and
movb
or
pop
js
mov
out
imul
cmpsl
and
out
add
mov
push
pushl
imul
in
mov
inc
mov
loope
outsb
cmpsl
mov
lods
nop
lods
sbb
into
jno
sbb
mov
lods
adc
dec
pop
scas
jo
rclb
jle
mov
daa
in
inc
imul
outsb
jae
mov
clc
in
xlat
push
mov
sub
in
jno
hlt
jne
xchg
int
aam
addb
into
cmc
sbb
test
insb
cmc
and
adc
jo
cli
xor
fwait
clc
xchg
movsb
inc
arpl
faddl
dec
adc
sub
fstps
sbb
cmp
push
outsl
mov
testl
inc
jbe
movsl
aas
mov
mov
and
mov
or
test
out
test
dec
cmpsl
pushl
das
insl
inc
and
dec
popa
rorb
outsb
xor
popf
out
adc
jnp
mov
push
ljmp
jae
jnp
mov
cwtl
loope
pusha
mov
push
idivb
adc
lock
push
mov
dec
cld
mov
xchg
and
addr16
loopne
add
inc
call
mov
push
mov
xchg
jo
cmp
fs
out
xchg
add
cmp
subb
adc
or
sub
aaa
in
xorl
fidivl
scas
rcrb
mov
outsl
cmp
roll
pop
das
jno
aam
or
lret
ret
idivb
es
inc
push
or
arpl
mov
mov
stos
shlb
add
jl
adc
adc
lahf
imul
push
or
out
push
lcall
insl
fbld
sbb
pop
mov
es
imul
xchg
xchg
fcmovnu
dec
jl
aad
jno
lret
xchg
testl
sub
sahf
pop
add
into
xchg
add
leave
sbb
outsb
jecxz
xor
push
sub
sbb
orl
aaa
lahf
push
orb
stc
and
pop
inc
inc
xchg
je
add
addb
lahf
add
pop
adc
and
iret
repz
jbe
mov
or
insl
xchg
int3
enter
mov
stc
dec
cmp
arpl
lahf
push
in
adc
cs
faddl
lret
inc
xchg
mov
in
add
int
addr16
and
test
sub
test
pop
pop
push
popa
out
xor
stc
mov
add
push
pop
cmp
test
add
xchg
cmp
pop
push
or
cmp
ret
fadds
cld
mov
pop
sbb
and
mov
cmpsb
pop
lods
mov
stos
pop
scas
sbb
data16
loop
sub
lds
cmp
testb
jae
mov
pusha
out
pushf
stc
movsl
jecxz
pusha
nop
fildll
jae
dec
cmp
iret
outsb
nop
je
add
cmp
mov
popa
mov
idiv
push
lock
hlt
cld
and
outsb
test
pop
sbb
xlat
and
aam
inc
mov
mov
shl
jg
sti
addr16
shll
faddl
in
dec
xchg
or
add
add
movsl
sub
fcmovb
in
loopne
dec
sub
add
push
cmc
ror
ffree
inc
sbb
xor
xchg
or
and
sbb
jns
daa
or
fcoms
cli
or
push
outsb
sbb
dec
inc
sbb
iret
sub
nop
mov
cwtl
add
in
bound
ja
mov
lahf
push
mov
out
cli
lods
mov
enter
clc
jg
adc
push
outsl
mov
push
pop
inc
sbbb
xor
clc
outsb
push
push
pop
add
or
pop
int
lcall
and
shl
lcall
into
aam
pop
test
push
jae
adc
pop
adc
push
test
cs
scas
test
scas
inc
jp
pushf
mov
in
and
test
fwait
pop
rorb
lock
mov
mov
in
gs
les
shlb
adc
mov
pop
test
sbb
xor
mul
inc
pop
pop
push
fwait
movsl
mov
mov
push
mov
pop
fdivrp
or
dec
aas
jne
mov
repz
cmp
ss
cmpsb
jecxz
ficoml
imul
sbb
add
xchg
cmpxchg
rcrb
mov
or
mov
je
jae
sbb
int
aas
jae
jae
add
in
jno
lds
repz
ja
mov
inc
aam
push
test
inc
loopne
out
xchg
pop
in
loop
cwtl
pop
pop
add
shl
test
inc
lret
mov
ss
rorb
out
inc
roll
inc
stc
insl
stos
jecxz
iret
jns
imul
xor
adc
loopne
add
mov
and
sbb
adc
sbb
shrl
pop
nop
mov
stos
inc
push
test
adc
dec
and
fwait
rcrb
pop
loopne
cwtl
sbb
in
sub
int3
cmp
sbb
jg
lds
and
cmp
jp
mov
xor
lods
jmp
data16
and
rolb
ret
in
aaa
or
aas
call
shll
test
ffreep
cld
lock
inc
mov
rcr
pop
jecxz
stc
out
jmp
cmp
arpl
sub
adc
aad
shl
mov
aam
xchg
mov
sub
stc
gs
loopne
pop
lcall
fs
xchg
fdivs
and
test
rcrl
add
cmpl
sub
je
rcrb
or
lods
dec
add
xor
or
dec
out
in
or
and
dec
repz
cli
inc
cmpb
pusha
jno
inc
dec
sbb
lock
sbb
or
enter
adc
mov
mov
pop
push
notl
lods
push
data16
add
out
mov
lds
dec
scas
and
arpl
movups
cld
in
add
push
icebp
mov
das
dec
dec
jb
jb
call
adc
jns
mov
jecxz
push
mov
jmp
cmpsb
mov
cmp
push
jb
loope
out
mov
cld
loop
cltd
lods
inc
iret
ret
xchg
xchg
mov
and
stos
inc
test
cs
ja
movsl
mov
pop
dec
inc
pop
nop
lock
inc
ret
sub
sbb
pushf
lods
dec
in
cli
inc
mov
pop
or
arpl
in
inc
outsb
cmpsl
hlt
lret
pop
xor
and
jno
mulb
adc
or
and
imul
xchg
les
push
or
into
dec
bnd
int
nop
cmpb
scas
popf
inc
rorl
dec
pushf
dec
inc
nop
pop
out
adc
mov
adc
imul
jo
push
jnp
cmp
pusha
pop
add
pop
repnz
pop
fcompl
adc
sbb
or
shl
push
dec
xor
xlat
sti
aaa
sbb
dec
xchg
enter
sub
int3
pop
je
pop
sbbl
add
push
dec
cmp
push
ret
push
sub
add
lods
pusha
mov
mov
push
add
mov
bnd
int
out
sbb
and
fisubl
int
push
cld
xchg
cwtl
jns
mov
out
push
icebp
pop
mov
xchg
testl
pop
mov
mov
mov
lods
inc
clc
sbb
stc
rorl
lahf
inc
dec
cli
sub
push
push
adc
sbb
mov
inc
jbe
sub
cs
loop
xor
inc
gs
and
into
mov
pop
xchg
mov
inc
xchg
test
movl
dec
push
inc
sub
and
loopne
and
clc
or
dec
mov
cmp
mov
es
jo
roll
les
jne
dec
fs
lcall
icebp
cmp
aaa
adc
scas
jecxz
push
shll
xor
and
xchg
in
dec
cmp
sahf
pop
ficoml
fdivl
popa
rcrl
clc
cmpl
jno
imul
or
dec
xor
xlat
std
stc
dec
sub
adc
cs
xchg
mov
lock
jecxz
jle
pop
and
cmp
adcb
test
push
hlt
aad
sub
cmpsl
test
jnp
rcrl
call
sti
mov
icebp
push
test
neg
xor
pop
push
test
mov
pop
adc
pop
pop
rcrl
mov
sbb
pop
imul
daa
lods
or
in
inc
xor
movsl
jle
add
lds
iret
gs
xor
out
xchg
adc
dec
or
xor
cmp
call
mov
inc
test
add
mov
mov
inc
outsl
add
pushf
or
add
aad
popf
idivl
aam
aad
data16
shrl
sub
mov
addr16
out
mov
rclb
xor
ss
mov
adc
loopne
fisttps
inc
mov
cmp
add
pop
pop
in
adc
test
faddl
lods
pushf
stc
or
dec
pop
push
push
stos
lret
outsl
mov
je
lahf
or
ds
xor
out
mov
repz
adc
pop
mov
mov
mov
addl
scas
xor
mov
mov
sub
lea
cld
dec
pop
pusha
vpshad
mov
mov
and
lahf
mov
mov
push
ficompl
cmp
dec
mov
jmp
push
jp,pn
sub
fidivrl
dec
dec
xchg
pop
or
je
scas
push
imul
pop
pandn
outsl
lods
fisubrs
xchg
cmp
or
lret
popa
dec
pop
mov
pop
clc
jno
push
shld
loope
loop
dec
push
dec
iret
addr16
jp
lcall
mov
popa
inc
cmpsb
call
pop
adc
or
push
iret
or
in
fstps
and
in
push
xor
pop
xor
mov
aad
pushl
add
pop
jb
xchg
fmull
fadds
fwait
jae
push
xor
rcll
lea
sbb
fcomps
pop
add
inc
scas
mov
mov
add
popa
push
mov
push
orb
imul
test
jge
js
push
or
pop
sbb
pop
jae
in
xor
cld
enter
std
les
jecxz
loope
js
xchg
roll
jl
adc
shlb
jmpw
pop
imul
cltd
add
imul
xor
daa
test
testl
inc
mov
stos
push
shrb
loope
into
fwait
mov
ljmp
mov
push
orb
lods
cmp
jo
loopne
push
rclb
jecxz
push
hlt
mov
flds
xchg
lock
movb
daa
idiv
cmp
les
mov
mov
out
xor
insb
jl
or
or
sbb
std
jae
pusha
call
fisttps
ljmp
inc
les
stos
mov
sub
pushf
xchg
fldl
aaa
pop
adc
fs
shlb
mov
sub
xor
jno
mov
jae
xchg
rorl
push
pop
pop
sbb
cmpsl
or
repnz
ror
pop
mov
inc
or
pop
out
inc
mov
inc
xchg
out
jns
jl
sub
mov
enter
cmp
jae
out
insl
shll
outsl
mov
stos
insl
lods
add
fnstenv
mov
jmp
mov
icebp
and
lcall
popf
push
mov
jbe
lret
or
test
aam
jne
repz
into
in
jl
xor
add
sbb
inc
addr16
mov
int
xor
mov
das
sar
mov
aaa
inc
push
popa
mov
inc
insb
jge
fcmovb
std
mov
je
es
mov
outsl
xchg
push
lock
pop
movsl
sbb
outsl
pusha
push
mov
test
arpl
cmp
mov
ss
inc
insb
add
sub
insl
movsb
inc
jo
inc
stos
cmp
push
sarb
cmc
repz
bound
jbe
mov
shr
jb
cld
outsb
aam
sbb
adc
loopne
xor
sahf
test
call
mov
inc
cmc
out
fucom
mov
sbb
int3
pusha
jge
dec
lods
adc
loop
lods
push
stc
and
aaa
rol
lock
dec
pushl
mov
sbb
add
mov
stos
sahf
xchg
call
ret
mov
xorb
andb
test
arpl
icebp
shll
iret
fmul
jb
push
dec
dec
mov
jge
sbb
fstps
iret
sub
leave
es
imul
lcall
xchg
pushf
mov
mov
aas
icebp
ror
in
mov
pop
cltd
cli
push
int3
push
xchg
outsl
adc
jge
scas
mov
adc
ljmp
dec
sbb
push
add
and
std
adc
xchg
movsl
ljmp
xor
push
std
mov
jo
scas
mov
int3
xor
mov
iret
or
mov
inc
dec
mov
push
push
je
cmpsl
xchg
cltd
pop
adc
lahf
shl
sbb
fistpll
add
push
push
imul
out
or
xchg
lcall
lret
movl
mov
rolb
cmp
push
add
adc
popa
int3
pusha
daa
popa
out
push
sub
and
dec
vpmulhuw
and
add
xor
push
arpl
xlat
inc
mov
xor
inc
add
mov
std
movb
xor
sub
jecxz
nop
and
outsl
shll
dec
xor
jae
pop
inc
dec
cmp
nop
fs
jmp
test
sbb
addb
push
repnz
repnz
inc
inc
jb
push
cmp
xor
lea
orb
hlt
add
push
out
pusha
inc
repz
shlb
mov
xchg
and
imul
repz
subb
xor
push
movsb
mov
mov
aaa
adc
cmp
cmpsb
push
cmp
fwait
jnp
iret
push
and
inc
cmc
movsl
adc
mov
cld
scas
adc
outsb
mov
xchg
ds
orl
jmp
jmp
adc
int
fs
and
push
shrl
bnd
repnz
and
icebp
push
in
push
add
inc
jle
inc
out
repnz
insl
fucom
in
jne
and
push
cmpsb
sti
xor
sub
cld
push
andl
std
cmp
lods
dec
mov
mov
sub
xchg
cmp
inc
aas
or
fmuls
pop
ja
das
mov
mulb
push
mov
pop
ds
test
push
outsl
push
std
clc
shlb
xlat
mov
inc
and
jns
xchg
iret
aad
ljmp
lret
jl
cmpsb
push
xchg
imul
dec
cmpsl
and
and
outsl
jecxz
jae
push
xchg
cmpb
add
popf
lock
sbb
cmp
shrb
inc
jmp
jg
fistpl
lods
test
in
ds
adc
in
dec
sub
sub
fwait
adc
dec
testb
push
in
push
mov
cmp
sub
inc
dec
xor
jnp
scas
enter
or
xchg
lea
inc
pop
jecxz
or
mov
aam
cmc
xchg
mov
js
lds
jecxz
test
adc
fwait
jbe
mov
popa
ret
mov
vaddss
aad
push
cmp
jo
outsl
insb
es
imul
insb
inc
xchg
push
pop
in
lret
popl
pop
divb
aas
test
mov
mov
add
test
mov
stc
mov
loop
mov
add
ud2
adc
repz
fwait
inc
out
icebp
addb
jnp
pop
ret
mov
add
add
insb
and
loope
insb
iret
idivl
js
pop
and
xor
enter
out
adc
data16
push
in
mov
xor
mov
lods
sbb
cmp
and
imul
dec
sbb
dec
xorl
imul
scas
mov
add
and
push
add
sarl
outsb
pop
sahf
mov
or
pop
pop
rclb
test
jae
out
mov
cmp
jae
lea
insl
mov
int3
movsl
jg
push
stos
inc
fwait
mov
mov
sub
aas
std
mov
cmpsb
xchg
mov
jnp
adc
es
cmp
xchg
les
xchg
push
daa
out
push
das
mov
mov
xlat
mov
test
std
add
dec
lea
push
jg
push
jle
jne
aam
dec
add
xor
jle
adc
or
cmpsb
adc
adc
pop
mov
xor
movsb
les
add
jmp
adc
push
inc
inc
test
push
mov
inc
hlt
and
or
imul
sub
xor
mov
push
inc
loope
aaa
cmp
int3
dec
jne
lret
call
movsl
xchg
mov
scas
imul
pop
pop
jnp
adc
sti
jo
xor
inc
mov
pop
or
adc
nop
add
lods
data16
lret
jge
push
daa
mov
insb
scas
add
out
sub
ljmp
scas
mov
stos
jmp
cmpsb
sbbl
mov
cwtl
jae
adc
repz
sbb
bound
mov
icebp
jp
cmove
xchg
movsl
jmp
cmp
lahf
add
nop
test
out
bound
int
push
xor
fucom
jmp
mov
pop
aas
push
push
add
xor
pop
sbb
lret
mov
xchg
popa
cmp
inc
cwtl
jb
mov
repz
mov
xchg
inc
popl
push
and
jo
push
pop
cmpl
jmp
dec
arpl
stos
jo
cmp
push
in
mov
popf
mov
mov
xlat
pop
xchg
mov
add
dec
jl
xchg
or
mov
nop
loop
mov
ds
mov
pushf
repnz
mov
sahf
push
pop
xchg
cmp
mov
jb
lahf
add
mov
adc
cmp
bound
incb
mov
pop
dec
mov
pop
hlt
pusha
jae
or
mov
in
divb
push
or
push
mov
xchg
sub
incb
int3
or
popa
ss
or
xor
fiaddl
jecxz
cmp
push
or
lods
ds
pop
push
test
dec
add
cwtl
mov
adcl
in
and
hlt
jg
sti
les
ljmp
mov
cltd
std
mov
xchg
add
lahf
inc
adc
xor
repnz
mov
cmpsb
out
aas
jp
push
rorb
daa
or
jb
and
les
rcrl
rorb
adc
out
sub
aas
sti
cld
ror
mov
pop
add
sbb
std
push
imul
int3
pop
in
push
push
or
subl
push
adc
les
arpl
sbb
cmp
mov
insb
xchg
movsl
dec
dec
and
stos
jns
pop
imul
es
popa
out
xor
mov
jle
outsl
push
inc
rorb
sub
into
cmp
xchg
js
sahf
push
jns
lods
xor
pop
and
out
inc
pop
aam
jp
xor
std
pusha
mov
xchg
xlat
sbb
scas
dec
popf
sub
push
jl
xor
sub
pop
rolb
into
out
std
inc
sub
mov
pop
sbb
out
cmp
clc
push
cli
outsb
mov
pop
mov
add
mov
xchg
inc
loop
pop
cwtl
les
out
es
push
pop
adc
lods
idivl
xchg
in
sbb
jle
pop
cmp
xor
xor
push
les
inc
clc
and
jp
mov
push
pop
push
outsb
outsl
push
std
jmp
mov
inc
call
je
mulb
xchg
mov
ja
xchg
icebp
mov
add
mov
pop
lea
cmp
push
orb
mov
sub
std
push
adc
bnd
popf
dec
adc
aad
sti
inc
ss
test
loopne
mov
movsb
push
xor
imul
stos
push
test
xchg
sbb
pop
mov
sub
test
fstl
lea
enter
jae
dec
shrl
lock
adc
test
push
jle
pop
xchg
cld
cmpsb
mov
push
cmpsb
mov
mov
cmc
pusha
mov
ret
test
adcl
pop
adc
ficomps
pop
and
cmpsl
cmp
in
cmpl
shl
popf
add
bound
jge
mov
daa
inc
mov
adc
fldcw
pop
cmp
int3
inc
rcll
inc
xchg
pop
dec
cwtl
pop
lods
adc
mov
jae
shll
xor
js
arpl
jl
ffreep
fwait
mov
ficompl
dec
jbe
fildll
dec
outsb
fwait
int
or
dec
cmp
dec
xchg
aad
push
and
punpckhwd
xor
movsb
dec
xor
cmp
or
pop
addr16
inc
xchg
scas
jmp
pop
mov
ljmp
dec
add
push
jmp
je
daa
adc
sub
xchg
std
aas
frstor
lcall
jne
and
jmp
stos
mov
xchg
lods
jnp
inc
jnp
adc
aaa
fldl
ret
je
roll
out
incl
fisubrs
mov
mov
and
std
lahf
orb
xor
lret
in
or
xchg
lret
or
sub
pop
movsb
sbb
sbb
cmp
push
test
repz
xor
mov
push
cmp
popa
cmp
sbb
sbb
jl
push
ret
pop
push
push
popf
les
mov
mov
and
imul
dec
pop
ljmp
bound
pop
adc
dec
stos
stc
andb
cmp
jle
into
xor
scas
add
or
movsb
les
dec
xchg
lahf
xchg
test
in
jno
mov
insl
cltd
mov
out
test
pop
jle
pusha
add
mov
inc
ret
js
xlat
ret
push
add
and
test
inc
cmp
xchg
mov
pop
push
shlb
aad
or
aas
xor
in
mov
sbb
and
addb
mov
xlat
out
ret
addr16
in
dec
popa
rorl
sbb
das
jo
sub
jmp
add
test
divl
fisubrs
jb
mov
dec
fs
lds
div
xchg
push
je
shl
cmp
xor
int3
in
fsts
dec
in
fisubrs
into
add
aad
jecxz
or
es
stos
lahf
outsl
fwait
lret
mov
inc
sub
jmp
xor
pop
pop
mov
push
sbb
in
nop
mov
jg
call
push
cmp
fs
in
inc
push
in
shll
sbb
mov
push
pusha
push
and
data16
addr16
testl
dec
sbb
into
icebp
and
rcll
or
ss
mov
xchg
int3
dec
xchg
mov
ja
or
xchg
xor
fdivs
mov
inc
jecxz
mov
int
enter
xchg
adc
cld
fstl
out
inc
sahf
push
das
lea
ds
push
aad
push
fstpt
pop
xchg
arpl
imul
les
mov
js
inc
cmp
xchg
cld
or
pop
dec
pop
sbb
dec
pop
push
hlt
mov
mov
cltd
push
lcall
cmpsb
out
cmp
add
in
jmp
push
stos
cmp
mov
mov
rcrl
or
mov
fcompl
mov
dec
fbstp
push
fdivl
cmp
outsl
ds
cwtl
dec
mov
cli
xchg
test
ds
jg
aas
mov
pop
sbb
jae
push
mov
adc
repnz
and
lods
scas
and
cmp
xchg
fwait
out
je
push
jl
and
pop
mov
mov
pop
fsts
xchg
xchg
and
mov
xchg
sbb
movsl
jmp
add
insl
js
or
out
jae
fcoml
shrl
mov
cmp
imul
pop
cmpsl
shrb
mov
ja
cmp
notb
and
jae
leave
mov
bound
hlt
fs
movsl
or
rcrl
xchg
pop
cmp
add
sbb
out
int3
leave
shlb
dec
or
int
paddd
repz
xchg
outsb
cmp
cmc
stos
lds
repnz
jno
fnstenv
aaa
pushf
mov
add
cmc
das
into
mov
pop
mov
mov
popa
and
clc
repz
adc
inc
ret
dec
push
adc
add
and
dec
adc
ja
mov
dec
bound
fmuls
adc
sbb
jecxz
jmp
push
and
in
test
dec
mov
imul
mov
xor
adc
cmc
dec
mov
pop
fwait
sub
adc
mov
sbb
dec
pop
bound
xchg
je
push
mov
xlat
inc
jb
out
imul
sub
mov
add
push
adc
sub
jmp
icebp
jg
cmp
mov
stos
into
mov
inc
mov
insb
fimull
aas
pop
pushf
dec
fldt
sub
out
mov
or
pop
push
pop
or
lds
sub
sbb
adc
xchg
sub
and
add
sti
add
xorl
mov
sub
call
lret
lea
stos
cmp
push
lcall
ret
mov
sbb
iret
jo
hlt
mov
jnp
xor
je
imul
pop
pop
stos
iret
mov
dec
cli
xchg
push
jp
push
mov
add
inc
vorpd
out
rolb
pop
rorl
call
push
into
test
jo
cmp
movsl
mov
add
push
mov
repnz
movsl
adc
and
sbb
jmp
xchg
sub
push
sub
dec
jmp
add
and
iret
ja
loop
jne
adc
jmp
cmp
xchg
mov
das
and
leave
imul
sbb
pop
not
xorl
out
sbb
adc
and
mov
jmp
push
imul
add
enter
dec
loop
call
push
push
cmp
fcmove
stc
xchg
xlat
mov
or
push
fnstenv
out
in
stc
xchg
push
push
sub
iret
divb
pop
repnz
inc
xlat
movsb
jno
jno
fiaddl
add
data16
in
push
maxps
mov
ret
aam
shlb
xor
and
or
in
cmc
or
lea
pop
adcb
imul
adc
mov
push
cmp
adc
cmp
aad
je
popa
je
pop
sub
jb
or
popf
cmp
xchg
loop
lea
ss
loopne
and
mov
or
and
ljmp
icebp
mul
int3
fnstsw
mov
dec
pop
movl
ds
stc
mov
sbb
ret
pop
mov
pop
into
enter
sarb
bound
cld
mov
pop
mov
jo
outsb
aas
insl
xor
in
adc
mov
jge
stos
mov
vpcmpgtb
pusha
xchg
cli
aad
addr16
addr16
xor
lcall
mov
add
add
add
loopne
sbb
popa
sbb
sbb
pop
das
outsl
dec
push
mov
in
ret
mov
cmp
mov
jmp
sbb
mov
xor
dec
mov
call
cli
pop
push
aas
xchg
mov
pop
sbbb
scas
sbb
mov
and
pop
incb
repz
dec
pusha
inc
dec
jb
mov
insl
xor
lcall
cli
add
cmp
fadd
bound
mov
gs
push
mov
xchg
and
ja
push
cmp
fucomip
and
lret
push
lret
aam
fmull
push
sarl
in
add
xchg
ss
loopne
jbe
pop
lock
stos
jg
lds
or
lock
call
aaa
cwtl
jp
push
xchg
push
icebp
jmp
jge
xor
mov
insl
jecxz,pt
mov
leave
mov
jl
aaa
xchg
push
mov
dec
cmpsl
in
movsl
sti
iret
add
iret
std
push
or
lcall
jge
dec
sub
inc
mov
loope
bound
mov
xchg
xchg
fwait
dec
mov
add
mov
add
sti
loopne
clc
dec
aaa
addb
fnstcw
add
cmp
in
inc
call
add
mov
or
aas
test
pop
adc
push
dec
vpmaddwd
dec
aam
push
cli
lcall
adc
fdivp
push
dec
cmp
adc
push
push
pop
popa
sbb
xlat
mov
mov
mov
dec
shlb
jmp
stc
sbb
and
pop
mov
push
test
xchg
inc
loopne
pop
jo
lea
inc
lahf
dec
or
outsl
aaa
push
xchg
sarl
and
pop
mov
nop
ja
js
cwtl
subb
aad
jge
push
test
xchg
xor
clc
movsb
add
push
add
lock
stos
mov
mov
xor
mov
shlb
lds
shl
mov
or
mov
fwait
push
sub
pushl
imul
mov
mov
fcompl
xchg
repz
jnp
out
jne
std
cmpsl
jle
jmp
ret
nop
in
movsb
cmp
pop
dec
je
push
imul
fwait
scas
cli
das
sub
addl
jns
enter
fbstp
pop
fs
mov
cs
xlat
pusha
push
shlb
mov
push
aad
mov
roll
push
into
aas
and
mov
rcl
fwait
jne
push
jmp
mov
daa
mov
mov
jb
sub
dec
mov
das
mov
flds
cmp
inc
dec
sub
mov
xchg
push
pop
testb
aaa
cmp
sti
leave
dec
sub
jb
lahf
jae
data16
sub
xchg
jno
dec
inc
into
xchg
adc
out
lcall
ss
jp
ficoml
xchg
pusha
mov
mov
insb
js
lret
pop
mov
push
xchg
in
jno
xchg
jge
jns
adc
movl
cld
test
cmpsl
aad
sahf
out
or
dec
enter
adc
lock
jne
sbb
aaa
outsl
add
mov
shll
sub
mov
mov
mov
cmp
es
or
cbtw
or
scas
loopne
mov
in
mov
push
pop
hlt
roll
xchg
sub
xor
mov
scas
dec
shlb
iret
fwait
rorl
leave
mov
jg
inc
scas
xchg
fwait
push
outsb
jmp
xchg
stos
add
jbe
loopne
es
ljmp
arpl
iret
push
test
pop
enter
stos
pop
cltd
sub
gs
push
ss
int
fldl
jg
jbe
rcll
jge
dec
sahf
push
ljmp
mov
sahf
stos
fcomps
add
fstpt
inc
lcall
push
jns
scas
push
jle
aaa
sub
call
cmpb
push
movb
lock
aam
sub
cmp
div
out
out
nop
and
ret
jle
out
fadds
inc
aas
cmp
outsb
pusha
push
sti
rol
pushf
mov
sbb
out
push
cwtl
addr16
xchg
popf
jecxz
pushf
mov
insb
in
inc
push
mov
sbb
and
aad
outsb
test
mov
test
idiv
mov
cld
cltd
icebp
adc
fdivrl
imul
push
faddl
jge
fwait
mov
jbe
sub
cmp
sbb
pop
aaa
cmpsl
out
sbb
dec
lret
or
test
clc
es
jle
jmp
inc
and
out
pusha
dec
adc
loopne
mov
add
ret
or
push
in
mov
repnz
mov
insb
in
jmp
jnp
inc
mov
sub
cmpsl
scas
adc
orb
or
add
test
mov
das
inc
dec
cmpsb
andl
mov
cmp
cmp
call
and
sbb
sbb
test
mov
pop
inc
sbb
xor
cmp
inc
mov
mov
leave
jmp
lret
ja
pop
push
stos
sub
cmp
cmpsb
aad
out
lret
into
xchg
out
mov
push
cmp
mov
adc
push
fmul
push
xorb
add
test
xchg
add
adc
mov
lds
cmp
lds
ja
inc
xor
arpl
outsl
mov
jb
in
xchg
sub
mov
iret
and
add
int3
pop
aaa
jne
addb
sbb
test
inc
jne
add
jmp
mul
ss
icebp
daa
shll
dec
loopne
decb
lret
pop
aam
stc
mov
lret
sbb
clc
and
lods
pusha
mov
lcall
jp
and
int
add
jb
inc
push
mov
add
ret
mov
and
dec
ret
and
mov
fcoms
xor
mov
mov
rcll
cs
pop
es
sbb
adc
sub
ret
xor
xor
fnstsw
insl
pop
decl
jp
or
enter
sbbb
xor
dec
in
mov
inc
dec
adc
xor
and
pop
cwtl
pop
xor
mov
aas
xchg
fidivrl
and
in
int
mov
xchg
add
xchg
outsb
nop
fisttpll
add
rorl
push
add
jg
xchg
bndstx
add
shlb
pop
jecxz
mov
or
inc
adc
inc
and
add
sub
outsb
cmpsb
jnp
icebp
fwait
mov
lock
sarb
pop
or
mov
cld
cmp
adc
xchg
jo
roll
or
ss
notb
shlb
mov
adcb
loope
lret
in
iret
mov
insb
lods
mov
dec
add
leave
mov
jbe
add
ja
add
insb
out
scas
adc
lds
out
add
mov
and
sub
xchg
out
add
je
or
mov
frstor
outsl
icebp
psubsw
sbb
andl
lret
mov
outsl
stos
ljmp
sbbb
call
rorb
adc
outsb
cmp
imulb
inc
mov
jae
or
mov
stos
ljmp
mov
inc
ret
loopne
test
or
dec
dec
es
jge
out
cmpsl
jno
aad
and
ja
jo
fucom
in
decb
mov
ficomps
inc
mov
clc
add
jbe
adc
jae
jp
mov
mov
sahf
mov
mov
outsb
or
dec
push
sti
faddp
dec
ja
mov
xchg
mov
push
jo
cmpsb
mov
cmp
adc
stos
cli
or
subl
lcall
aad
mov
in
cmpsb
fcomps
adc
movsl
adc
push
push
shrb
xor
and
repnz
sbb
mov
pop
adc
subl
push
xchg
test
stos
push
test
adc
jmp
rcl
sti
call
add
imul
mov
push
push
aaa
mov
pop
scas
sub
jl
pop
hlt
or
enter
jg
movsl
cmp
jmp
lret
mov
cli
sbb
xor
movups
popa
jle
movsl
sbb
incl
adc
mov
push
sarb
pop
mov
jge
xor
and
cmpsb
imul
outsl
aas
adc
sub
mov
dec
or
inc
inc
lods
fcmovnb
cmp
ss
mov
leave
imul
insl
jmp
sar
lea
movsb
std
aad
and
fildl
sahf
fildl
cli
sbb
jecxz
pop
xlat
cmp
cmp
pop
mov
loope
out
mov
dec
lock
lahf
sub
and
fidivs
push
add
insb
aad
and
scas
leave
shlb
xor
add
fwait
xorl
ret
out
push
lret
frstor
bound
aad
or
loope
xchg
adc
cmp
pop
add
sbb
jp
and
add
mov
add
pusha
fisttpl
sub
push
mov
adc
repnz
cmpsl
cwtl
loopne
rorb
push
fdivrs
sbb
fildl
sub
jns
shll
imul
jle
icebp
mov
inc
xor
movsb
mov
add
cmpsb
push
jge
jbe
xlat
mov
mov
jge
pop
and
jnp
dec
cmc
leave
mov
shll
add
and
lods
sbb
jb
aas
inc
ret
out
outsb
ret
pop
repz
and
das
add
or
sub
shll
cli
popa
daa
cmp
popf
inc
cmc
or
subps
popf
mov
cwtl
lds
sbb
in
ret
jge
mov
dec
mov
add
stc
mov
test
aam
outsb
push
jle
xor
push
scas
mulb
xor
add
hlt
mov
insl
adc
lret
outsb
pusha
sub
pop
ret
inc
jo
hlt
jae
lds
mov
in
xchg
sti
divl
dec
xor
adc
fisubrl
push
hlt
xor
int
stc
shlb
adc
scas
jge
sarb
mov
ret
call
cmpsl
jge
rclb
xor
push
pop
push
std
aad
pusha
fsts
hlt
les
adc
mov
pop
daa
outsb
ljmp
mov
xor
xchg
in
push
outsl
aad
mov
mov
mov
sub
inc
js
mov
roll
not
or
sbb
dec
or
jp
sbb
add
jle
fchs
das
pop
push
cwtl
push
test
into
cltd
mov
in
and
sahf
lret
sub
xchg
mov
in
dec
int
cmpsl
adc
and
mov
sub
in
add
call
mov
orb
clc
lods
jmp
jp
nop
inc
mov
add
xor
loopne
mov
int3
sbbl
xor
push
xor
xor
fistl
sbb
pop
jg
adc
mov
and
mov
mov
push
cmp
mov
outsb
out
pop
add
es
out
push
xchg
mov
mov
mov
inc
pop
cli
push
lock
enter
jnp
jb
pop
popa
jge
addr16
dec
stos
pop
clc
lods
adc
popf
sub
arpl
shr
inc
sbb
std
mov
movsl
pop
test
hlt
sbb
xorl
xor
imul
jae
mov
pop
pushf
lret
les
push
mov
mov
mov
or
mov
iret
add
es
cwtl
jle
sub
ss
shll
adc
enter
test
sub
adc
dec
addr16
push
out
mov
ljmp
dec
and
lock
pop
lcall
push
mov
push
cmc
out
sub
imul
movsb
out
pop
stos
jo
push
xchg
mov
repz
xor
sbb
aam
inc
test
stc
fimull
insl
adc
xor
sub
cmp
mov
push
nop
xchg
pop
push
arpl
pop
pop
fiadds
mov
andb
pop
andb
das
lods
das
xchg
fwait
loop
mov
sahf
test
mov
push
popa
mov
mov
push
or
lods
sub
js
lods
cmpsb
lret
insl
repnz
mov
sbb
std
aam
cli
pop
cltd
xor
jns
out
mov
loope
stc
jnp
and
xchg
mov
push
push
xchg
lahf
mov
test
sbb
lods
mov
mov
mov
add
mov
dec
xchg
fldt
sub
insl
mov
xor
add
add
pop
pop
inc
lods
or
mov
inc
xchg
mov
sub
fwait
das
push
xchg
xchg
adc
xor
es
sar
repz
test
xor
or
mov
or
push
pushf
pop
xchg
push
sbbl
inc
insl
pop
jmp
and
pop
push
sbb
mov
jge
or
xor
lret
adc
dec
aaa
or
and
lock
xchg
rcll
push
and
out
and
leave
fidivl
mov
andl
jno
repz
aas
ret
or
mov
in
movsl
pop
push
iret
dec
xor
cmc
ds
or
pusha
lcall
adc
cmpsb
fcoml
daa
mov
and
add
push
iret
imul
jns
inc
push
in
pop
aaa
xchg
leave
out
cs
dec
or
xor
sbb
outsl
lret
out
sbb
aad
or
push
dec
fisttpll
xchg
pop
mov
and
popa
or
mov
mov
loope
cmc
das
stos
ljmp
pop
inc
push
arpl
jmp
pop
cmp
in
sub
inc
into
call
rcrl
mov
insb
or
ret
jb
xchg
dec
lods
mov
mov
pop
test
arpl
arpl
mov
push
or
out
scas
adc
sbb
adc
insl
shlb
mov
pop
and
mov
or
and
cmpsb
push
ret
xor
jp
data16
jp
jns
push
stos
cmpb
jle
inc
in
add
int3
into
rcrb
xor
mov
stos
add
add
dec
loop
shll
inc
jmp
leave
iret
inc
jle
or
and
mov
push
test
outsb
aad
rol
jp
pop
pmaxsw
sbb
outsb
mov
jle
stos
repnz
xchg
jnp
out
push
xchg
mov
push
inc
xchg
xchg
shlb
test
lret
and
js
and
inc
das
adc
dec
xor
cmp
jg
cmp
push
push
icebp
lahf
push
inc
outsb
sahf
cs
push
xchg
cmpsl
add
insl
lea
in
jp
push
mov
dec
cmpsb
push
jmp
into
fdivrl
jmp
notl
pop
std
pop
and
mov
adc
jo
sub
mov
jb
imul
sbb
and
imul
cli
push
imul
mov
adc
lcall
dec
add
es
fdivrp
push
mov
xchg
ljmp
stc
xchg
xor
mov
push
or
add
shrl
pop
push
pop
in
dec
mov
fmuls
repnz
jns
adc
or
inc
adc
mov
xor
push
inc
arpl
roll
or
decb
add
xchg
adc
fldenv
xlat
sbb
jb
jl
inc
loopne
ja
add
stos
add
pop
mov
add
aam
fsubrs
daa
push
dec
pop
aas
or
or
out
jmp
sbb
jmp
loop
jg
out
loopne
fdivs
pusha
loope
pop
push
adc
fnstsw
xchg
adc
jbe
pop
fsubp
lret
and
pushf
cmp
inc
bound
sub
rcrl
and
adcl
dec
nop
stc
cmpsb
mov
xor
imul
pop
cmp
in
pop
dec
xor
lods
or
inc
andl
jns
ss
pop
aam
cmpsl
inc
mov
loopne
aam
andb
outsl
xor
imul
cmp
mov
xor
mov
test
scas
sub
nop
outsl
test
sub
into
xorl
mov
push
int
inc
xor
popf
in
test
inc
loop
or
ja
push
mov
or
rolb
fisubrl
cmpsl
push
xchg
aam
mov
stos
jne
cmpsb
lret
dec
stos
std
xchg
mov
fdivp
push
xchg
pop
pusha
xchg
xchg
outsb
cs
enter
inc
mov
push
cmp
xlat
rclb
mov
pop
in
fwait
leave
in
jmp
jmp
mov
xor
xorb
mov
pop
lret
add
jbe
mov
ret
cmpsb
sbb
mov
aam
fstpl
int
jnp
jle
cmc
je
xchg
test
pop
imul
adc
dec
cmpb
xor
xor
popf
cltd
movsb
int3
arpl
pop
imul
lds
pusha
lods
push
lds
xchg
rorb
lcall
adc
fisubl
inc
pop
popa
outsb
jg
dec
cmpb
out
inc
fnsave
pop
and
int3
into
xchg
add
xchg
into
ret
in
imulb
dec
repnz
dec
call
sbb
add
xchg
int3
sub
inc
cmpsl
out
in
push
xchg
jmp
insb
inc
jl
cli
and
and
pop
out
jae
mov
jl
sti
and
mov
pop
pop
xchg
push
divb
inc
lods
pop
sub
adc
js
test
xchg
outsb
inc
movsl
std
fwait
mov
push
adc
mov
push
inc
jecxz
and
mov
inc
xchg
jge
mov
divb
insl
inc
push
inc
sbb
mov
sbb
cmpb
ds
jnp
inc
and
in
ljmp
mov
stos
fistpll
xchg
cmp
dec
mov
lock
pop
lret
pop
or
adc
push
inc
adc
xor
shl
shlb
in
repnz
rorl
and
cltd
mov
add
sbb
pop
shlb
shlb
sbb
stos
xor
mov
pop
insl
xlat
push
test
lock
xor
jnp
aam
fwait
cmp
pop
out
cmp
jge
cmpsl
ja
pop
or
xchg
lea
inc
loop
roll
rcrb
jg
clc
sti
jl
ret
addr16
sahf
mov
cltd
aaa
push
in
jmp
roll
cmc
inc
repz
and
push
adc
xor
push
xchg
scas
or
jmp
add
arpl
mov
xor
dec
leave
iret
cmc
fisubrs
mov
cs
mov
xchg
lods
and
mov
stc
cmpsl
int
mov
ja
sub
or
ret
jge
xchg
test
lods
gs
imull
adc
movsl
xor
push
das
sbb
jp
rcrb
pop
push
pop
clc
mov
cmp
fwait
cmpb
jns
xchg
add
xchg
cs
mov
push
add
cmp
addb
in
iret
fbld
mul
or
xor
cmp
pushl
and
add
jne
sahf
inc
rorl
das
les
mov
push
xchg
xor
subl
test
mov
jle
jle
popl
mov
mov
popf
push
sub
or
xchg
or
mov
and
add
dec
pop
add
mov
xchg
inc
jns
xchg
mov
addr16
push
stos
cli
xor
mov
sub
mov
mov
scas
pusha
aam
xorl
test
pop
test
xchg
jmp
and
push
or
addl
mov
pop
lahf
sti
sbb
js
repnz
lcall
pushf
loopne
pop
cwtl
loop
pop
mov
xor
cmpsb
xchg
es
push
stc
mov
add
xchg
ret
add
enter
sbb
aaa
xchg
or
jnp
or
lret
addr16
int
mov
aam
pop
or
push
xchg
pop
pop
jae
fiaddl
fsubrp
sbb
andb
into
xchg
mov
adc
dec
movaps
es
mov
ss
jnp
loop
out
or
push
inc
xchg
sub
fadd
push
imul
jmp
mov
pop
rol
lret
add
sahf
rcll
jge
popf
pop
push
loope
shl
cmp
push
pop
mov
data16
in
mov
mov
push
imul
add
push
and
aas
int
mov
sbb
mov
cmp
addb
mov
and
inc
imul
test
aaa
andb
sbb
insl
mov
lods
push
add
mov
ret
in
in
xchg
cmp
jmp
pop
lahf
xchg
jbe
incb
rolb
add
lcall
add
jno
xlat
push
bnd
jge
mov
mov
mov
inc
cmc
repnz
dec
fadds
sbb
lods
sbb
dec
test
ljmp
add
cwtl
popf
fwait
movsb
clc
loopne
inc
mov
test
sahf
movsb
cmp
filds
xchg
fcmovbe
stc
inc
mov
in
arpl
enter
test
xchg
cmpsl
loope
dec
xor
hlt
or
add
jns
xchg
push
imul
popf
dec
or
add
sub
jle
test
mov
jg
or
mov
add
ficomps
mov
mov
mov
cld
inc
fwait
dec
xor
pop
outsb
jl
inc
adc
enter
push
xchg
shll
mov
lret
xchg
jl
idivb
cmpsl
xchg
push
add
popa
dec
or
sbb
cmp
and
cwtl
push
adc
jle
ret
in
cmp
ja
in
jns
or
xlat
fadd
ret
or
adc
out
std
out
xor
mov
repnz
push
xchg
mov
movsb
xchg
cmp
scas
and
popa
popf
sbb
xchg
or
xchg
xchg
mov
daa
int3
mov
push
xchg
outsl
insl
xchg
ds
fisttpll
jno
xor
lret
inc
cmc
mov
stos
outsl
jnp
in
push
push
adc
jnp
or
xchg
inc
std
enter
dec
shl
pop
mov
sub
push
test
cmp
pop
lahf
xlat
sbb
js
sbb
cli
hlt
push
and
cmpsl
push
mov
jmp
clc
cltd
jg
pop
loop
sub
mov
shrb
popf
xchg
sbb
rdpmc
cs
or
stc
or
sbb
test
es
rolb
mov
sarl
jo
jl
pop
je
sub
mov
mov
and
nop
mov
jl
je
iret
outsl
scas
lods
mov
mov
mov
inc
imul
xchg
or
sbb
xchg
mov
and
mov
sbb
ficoml
mov
add
lret
movsb
xor
pop
repz
xchg
add
mov
hlt
xor
jb
pop
mov
insb
icebp
subb
push
mov
pusha
push
hlt
test
sbb
cmpsb
clc
fstl
pop
arpl
inc
mov
fstpl
in
sub
mov
aad
jne
int
out
movsl
and
mov
dec
aam
mov
lods
xlat
fs
sarb
and
out
sbb
mov
ret
adc
jmp
pop
gs
enter
rcrl
dec
xchg
push
pop
mov
pop
adc
test
sbb
mov
shrb
mov
aad
stos
ret
cltd
sbb
mov
data16
test
loop
mov
in
loopne
gs
mov
mov
dec
lock
mov
or
jge
cmp
mov
scas
stos
push
dec
and
aam
add
movsb
or
leave
jbe
sub
cwtl
mov
insl
cmc
xor
lock
movsl
fldt
stc
ljmp
mov
addb
lea
and
mov
stos
jmp
fs
jb
push
inc
div
cltd
mov
int
frstor
push
loope
cmp
ss
ss
mov
dec
inc
adc
jb
adc
sbb
pop
jecxz
xchg
jne
insl
pop
mov
ss
xor
jne
cli
add
int
add
lods
mov
push
in
mov
data16
jl
nop
imul
mov
test
fwait
nop
add
xor
jbe
mov
cmp
aad
lea
adc
mov
sahf
loop
add
jg
jo
lock
inc
xchg
addl
jecxz
mov
lret
dec
js
dec
les
mov
fsubr
or
out
push
aad
push
mov
xchg
scas
cwtl
cmp
test
push
dec
or
stos
lods
xchg
push
fisubrl
test
push
or
sbb
inc
rclb
aam
dec
sahf
pop
orb
cmp
ljmp
ret
cmp
popa
jne
mov
mov
insl
pop
lods
fimull
dec
es
lds
je
or
mov
sub
and
loope
cmp
fcmovnu
lcall
push
sbb
mov
outsl
imull
pop
js
cmp
add
das
repnz
pop
sub
aad
mov
aaa
mov
sub
dec
fwait
xor
adc
les
or
xchg
sub
and
stc
inc
leave
cmp
imul
mov
packssdw
sub
in
xor
lret
or
jno
fldenv
lahf
add
ja
outsb
cmp
dec
int3
hlt
sti
lret
push
in
aam
in
inc
cmpsb
xchg
and
push
push
inc
and
inc
insb
mov
shll
mov
aaa
mov
outsl
test
das
out
out
fnsave
or
or
or
cmc
mov
mov
mov
stos
mov
imul
mov
arpl
fsubp
mulb
xchg
jmp
add
cmp
xor
pop
repnz
mov
or
inc
call
hlt
sub
in
mov
insl
push
hlt
jmp
fs
sub
dec
push
lock
sbb
inc
dec
shll
lret
pop
lret
stc
gs
mov
push
enter
into
call
or
xor
cs
push
xor
or
inc
pop
lea
push
push
sub
daa
dec
das
movsl
sahf
std
cmp
lahf
sub
ret
fildl
daa
adc
les
test
jp
test
insl
adc
lods
xchg
push
push
loope
mov
in
jg
dec
cltd
dec
push
lds
pop
xchg
cmp
push
js
and
call
pop
push
xchg
or
xchg
xchg
xor
jns
fwait
addr16
imul
out
repz
jg
xchg
jo
lea
pop
nop
mov
xchg
push
jne
popl
scas
mov
in
mov
popf
fs
xor
adc
adc
dec
jl
pop
xor
jecxz
mov
add
cs
pop
insl
stc
mov
cmpsl
xchg
pop
sub
lock
jne
fistpll
andl
adc
mov
aas
ret
das
push
cmp
jl
add
stos
push
and
shll
test
in
idiv
fstl
repz
xchg
inc
xchg
je
dec
mov
pop
sbb
nop
jbe
lds
adc
add
inc
stos
fistpll
xchg
jns
mov
imul
and
or
mov
adc
adc
inc
int3
fistps
jo
rcrl
enter
call
test
enter
inc
pop
out
sub
ljmp
gs
mov
pop
dec
ljmp
jl
jbe
jae
jno
stc
or
scas
icebp
insl
pushw
mov
std
gs
rol
addr16
mov
xor
cmp
push
inc
iret
mov
jo
or
push
ds
pop
shl
jns
ret
sub
jo
sti
in
ja
and
stc
push
test
idivb
xor
fmuls
fdivl
jle
in
and
int
push
inc
jae
push
adc
out
and
test
imul
bound
mov
jbe
dec
or
xchg
xor
mov
into
mov
xor
mov
int3
mov
mov
jno
pop
sub
fmulp
xchg
jnp
sahf
xchg
xchg
scas
scas
jnp
mov
cs
arpl
ljmp
add
jnp
ret
push
xchg
mov
push
outsl
stos
sbb
xchg
inc
jne
mov
into
test
lret
fimuls
xchg
fdivp
xor
icebp
jle
hlt
xchg
xchg
mov
bswap
add
inc
loope
and
fsubl
fwait
gs
in
adcb
sbb
imul
cmp
stc
movsb
xchg
pop
inc
ret
push
xor
dec
or
ret
push
sbb
xchg
sub
jge
dec
push
fmull
sub
jmp
into
cmp
rcr
imul
or
fstl
cmp
xor
pop
pop
mov
push
int
das
pop
stc
mov
xchg
fiadds
xchg
icebp
jmp
jns
push
push
xor
jl
daa
push
mov
and
pop
push
mov
insl
cli
push
xor
outsb
stos
fildl
sub
insb
xor
xchg
mov
lods
test
movsl
pop
cli
std
jecxz
in
xchg
fistpll
dec
aas
fsincos
and
mov
mov
call
mov
jg
and
adc
dec
daa
mov
xchg
insl
shlb
bnd
arpl
movsb
or
in
lods
mov
leave
out
aas
mov
test
adc
arpl
fwait
jbe
add
and
jb
ss
jg
test
mov
mov
lret
xchg
push
cmp
mov
pop
loope
add
and
sbb
lret
mov
push
in
test
adc
stos
mov
jno
aas
pop
arpl
or
loopne
or
xchg
loopne
pop
add
repz
stc
mov
dec
cltd
jo
movsb
pop
cld
les
jg
imul
fists
sbb
popf
jecxz
mov
mov
es
mov
outsl
test
sub
mov
sbb
lret
jmp
pop
inc
std
fstp
jo
orb
xchg
jae
cmpsl
cmp
jb
pop
cmp
jbe
scas
mov
cmp
ljmp
in
and
push
movsl
out
inc
fists
push
pushf
call
in
xchg
stos
out
jp
add
mov
push
cmp
andb
fstp
or
xchg
frstor
insl
ljmp
subb
aaa
andl
jo
out
jge
fcmovb
pushf
or
sub
xor
int
test
repz
dec
push
pop
rcrb
shrb
testl
mov
xchg
shrl
lahf
cmp
outsb
cmp
cld
call
fcompl
adcl
adc
adc
scas
xchg
xchg
lret
fwait
lret
pop
out
data16
arpl
repz
into
mov
add
adc
push
jb
inc
jg
popf
push
out
repz
icebp
and
test
jo
pusha
call
pop
sub
jge
cmp
mov
dec
sbb
push
pop
les
and
hlt
sub
cmp
jnp
add
rclb
or
addr16
mov
cmp
out
sub
fisubrl
in
mov
push
adc
lret
fwait
pop
jp
jo
and
scas
sub
push
mov
xchg
cwtl
jmp
imulb
push
pop
jmp
shr
out
dec
sbb
inc
daa
lret
sub
lods
push
xchg
scas
xor
stc
or
cmp
notb
push
jl
fs
data16
jne
sbb
mov
movups
ret
aas
fwait
sbb
and
sub
subl
pushf
inc
jne
out
test
mov
mov
add
sbb
cmpb
push
jecxz
jmp
lock
jae
mov
jge
pop
cli
mov
lret
fdivrl
int3
loopne
push
stos
dec
jmp
dec
pop
subb
lret
sbb
push
test
pushf
dec
dec
jnp
sub
adc
les
xor
xchg
movsl
mov
jmp
mov
jmp
mov
imull
xchg
mov
nop
enter
jbe
stos
pop
sarl
push
add
jbe
outsl
lret
sub
lods
lods
add
rorl
sbb
std
cmpxchg
clc
dec
mov
pushf
push
lahf
pop
aad
out
and
clc
adc
scas
adc
sbb
std
imul
mov
or
lock
sub
rorl
xchg
test
sub
jno
sbb
pop
movsl
nop
lea
loopne
pop
shll
mov
pusha
ja
add
jmp
arpl
adc
in
inc
jg
pushf
lods
push
popf
cmp
add
das
push
adc
out
out
adc
dec
mov
cmp
stc
imul
push
arpl
adc
cmp
mov
fxch
mov
sub
or
pop
add
std
xchg
push
dec
pop
fucomip
xchg
pop
dec
aad
jb
mov
in
and
jecxz
cmp
dec
adc
and
daa
arpl
push
mov
outsb
in
movsb
in
mov
andl
jp
cs
aad
or
push
and
rcl
out
adcl
push
dec
push
mov
in
push
ds
sub
ljmp
cmp
xor
and
lea
jmp
gs
inc
push
insb
xchg
jbe
jne
or
shlb
cmp
stos
mov
sbb
push
jo
stos
jmp
daa
lods
add
je
pop
rcrl
imul
cmp
jno
sbb
sub
rorb
and
fisttpl
lods
jmp
mov
xchg
dec
dec
cmc
mov
mov
mov
sub
dec
stc
ljmp
or
jbe
inc
call
lahf
dec
sbb
mov
popa
xor
or
and
dec
xchg
loope
sub
rcr
mov
fmull
fbstp
mov
xor
cmp
cld
outsl
sub
dec
sub
push
and
push
scas
adc
or
mov
mov
movaps
ja
rolb
popf
clc
ficoml
xchg
adc
sarl
push
dec
dec
mov
jl
jnp
popa
jns
fldenv
int3
adc
sub
pop
xchg
insb
subl
mov
jl
and
bound
sbb
push
inc
pop
mov
add
fimull
add
movsl
nop
xlat
test
cmp
inc
pop
movaps
int
mov
aad
rorb
pop
lds
mov
or
les
dec
mov
ret
fistpl
fcompl
cmp
scas
popa
and
repnz
sub
fnstsw
mov
push
xor
xor
popa
testb
pop
jle
xor
adc
jp
ljmp
sbb
inc
pop
loop
inc
scas
adc
adc
jnp
repz
cmp
loopne
cmc
xchg
jnp
jmp
popa
stos
push
dec
adc
mov
loopne
jne
add
sti
out
mov
xor
jmp
les
add
cltd
lcall
outsb
shl
mov
inc
je
scas
clc
add
les
test
adc
mov
in
dec
mov
mov
sub
xor
js
ret
adc
pop
inc
imul
arpl
int
lds
jge
mov
mov
sub
sbb
clc
jbe
test
ror
dec
pop
mov
repnz
mov
in
cltd
pop
mov
pushf
sbb
testl
aas
fs
cltd
data16
dec
sub
lret
sti
sbbb
lds
xor
mov
jnp
and
xchg
call
push
es
xchg
mov
inc
mov
mov
and
or
lds
mov
mov
sbb
and
bound
mov
lret
mov
or
scas
fcmovbe
insl
push
cmp
add
insb
adc
iret
out
pop
das
test
mov
xchg
mov
mov
idiv
sub
mov
adcl
lods
in
jle
bound
xor
mov
mov
movsl
xor
xchg
cmp
insl
xlat
punpckhwd
xlat
out
repnz
js
negb
shrb
jp
push
out
xor
std
sbb
arpl
push
loope
sub
je
pop
and
push
aad
push
jmp
jp
mov
sbb
stos
nop
js
cs
rorl
call
pop
ret
sbb
pop
cwtl
dec
lret
rorl
out
lods
jmp
push
sbb
outsl
rorl
sub
xor
pushl
incl
imul
or
mov
add
jne
out
or
jb
inc
jmp
lret
add
dec
and
mov
outsl
jb
push
icebp
fistpll
push
mov
sub
fmul
cmp
or
jmp
aam
jp
imul
mov
outsl
mov
loop
into
push
sbb
fwait
mov
ret
test
scas
jo
add
sbb
add
loopne
movsb
push
fcompl
xlat
xor
or
pop
mov
sbb
xorl
jmp
mov
jo
push
pop
mov
xlat
out
jge
stc
inc
jmp
jb
or
repnz
fiadds
dec
push
shlb
push
popf
fldcw
push
pop
add
sub
frstor
out
pop
and
sbb
leave
popf
mov
ljmp
mov
mov
add
in
fcmovbe
mov
pop
pushf
stc
aas
ljmp
jp
cmp
popf
push
repnz
xchg
xlat
xchg
addr16
cltd
jae
push
or
xor
cmc
into
push
popf
jno
and
xchg
xorl
mov
inc
ss
dec
mov
mov
clc
jae
sub
dec
addr16
nop
xlat
aad
mov
fwait
xor
ja
movsb
sti
add
insb
pop
inc
adc
pusha
arpl
push
pop
enter
scas
test
scas
sub
in
ret
repz
xchg
cmc
das
negl
xlat
scas
pop
fs
mov
mov
mov
fdivs
push
repnz
in
popa
dec
test
pop
mov
xlat
stc
sub
and
mov
scas
cmp
pushf
bound
insb
popf
or
rorl
mov
out
adc
add
lods
into
or
fcoms
adc
cmp
scas
test
add
xchg
movsb
or
adc
jne
ljmp
fnstsw
aad
dec
psubusb
imul
mov
pop
clc
je
out
popf
pop
pop
lcall
cmp
orb
lods
mov
mov
mov
push
addr16
out
daa
or
xor
push
cmp
icebp
lcall
jns
loope
std
and
es
mov
movsl
aaa
sbb
sbb
add
arpl
les
stos
and
ds
scas
fmuls
leave
cmp
test
outsb
jl
nop
daa
in
ret
aas
push
pop
or
jl
pusha
xor
stc
mov
into
jno
loop
ljmp
push
pop
push
inc
iret
popa
hlt
loop
outsl
loop
stc
test
ja
add
test
sub
ljmp
in
data16
lods
and
jno
icebp
adc
movsb
mov
mov
std
and
mov
jne
das
lahf
sbb
lcall
or
out
pop
dec
cmp
pop
sbb
mov
jnp
pop
dec
scas
sbb
inc
push
rcll
bound
jnp
jno
arpl
stos
fisttpll
fdivr
out
dec
xor
mov
mov
out
movsl
lcall
sub
iret
cmp
ret
or
cld
addb
leave
dec
jmp
mov
jo
sub
in
inc
and
scas
loop
out
repnz
push
fldt
loop
stos
cmp
adc
cmpps
xchg
lock
push
jge
les
push
pop
pop
or
call
fmulp
mov
mov
inc
dec
jmp
push
imul
adc
shlb
dec
pop
cmp
lahf
cli
jb
jge
lods
adc
jg
or
add
and
sarl
mov
adc
enter
in
outsb
arpl
fstps
shrb
jl
ljmp
lcall
xchg
jnp
cmc
dec
jmp
int3
mov
inc
inc
jo
jle
dec
sbb
jae
mov
jno
nop
xor
loop
inc
jo
loope
popf
add
std
dec
in
xchg
divb
or
dec
xor
negl
push
or
scas
sub
mov
fucomip
loop
imul
dec
pop
fiadds
sub
lcall
xchg
rcrb
and
mov
xchg
inc
les
xor
ficomps
dec
out
jnp
mov
dec
mov
int3
and
adc
movsl
add
sub
inc
jmp
jnp
ficomps
outsb
xchg
push
mov
pop
imul
dec
mov
fistps
pop
and
dec
mov
adc
insb
orb
cld
mov
insl
into
rcll
mulb
push
mov
sahf
in
shll
mov
cmpsw
shlb
pop
and
jle
push
insb
xchg
pop
or
aam
sbb
lret
push
jle
adc
pop
sar
iret
addr16
stc
jle
fidivrs
and
sub
pop
and
fnstsw
in
xchg
mov
sti
pop
loop
dec
cmp
ret
jp
and
fimuls
push
xor
jmp
iret
cli
lds
hlt
nop
sub
outsl
sti
push
pop
frndint
cli
pop
or
fbld
mov
jo
incl
xor
lods
in
stos
xchg
cmp
out
idivb
sub
enter
jecxz
xor
std
shl
insb
aaa
push
cmpsb
out
das
dec
dec
jbe,pn
push
addr16
jp
arpl
rdmsr
push
out
push
hlt
stc
sarl
out
loop
outsl
sbb
xchg
pop
xor
clc
sbb
pop
shlb
push
cmp
and
movsb
aam
cmp
leave
repz
loope
lret
das
sbb
pop
aam
cmp
and
mov
cmp
push
das
cmpsb
push
ret
inc
imul
rolb
xor
add
lcall
aaa
gs
call
imul
pop
insb
fwait
xchg
subl
or
pop
push
fnstcw
jecxz
imul
out
scas
insb
dec
cmp
cmp
fstl
jne
push
out
data16
es
icebp
dec
push
into
push
xchg
pop
fwait
cmovge
xchg
add
ljmp
enter
and
pop
lcall
cmc
mov
fcom
mov
arpl
sub
leave
std
movsl
int
cs
pop
mov
ret
psrlw
mov
pop
jecxz
repz
cwtl
test
sahf
loopne
pop
pop
jle
jge
mov
add
xor
cli
fcomip
cli
mov
fmul
sarb
inc
mov
sub
pop
mov
mov
aam
in
fstpt
addl
push
pop
jb
movb
jge
push
dec
divb
jmp
movzwl
and
subb
imul
pop
stos
xor
sbb
jl
sbb
fwait
and
jp
xchg
xlat
dec
lsl
push
and
or
pop
popa
test
cli
loop
or
push
dec
aam
push
js
int
lcall
in
in
popa
int
or
dec
pop
jge
pop
jae
mov
mov
loopne
pop
es
jb
loop
and
lret
stc
imul
push
aam
dec
and
push
inc
mov
cmp
push
jb
mov
and
in
and
add
push
lret
sahf
sbb
pop
lea
fimuls
and
outsb
sub
lock
repz
lahf
sbb
ljmp
or
push
cld
int
repnz
ud0
lahf
pop
mov
and
jp
dec
shrl
pop
cmpsb
dec
pop
sub
test
in
arpl
icebp
lret
push
gs
gs
stos
xor
adc
cmpsb
cltd
ds
lds
sarb
add
push
xchg
je
sbb
and
jnp
call
push
in
movsb
sbbl
enter
pop
or
jmp
lods
jb
or
sbb
leave
loope
pop
add
das
fwait
ja
and
or
in
or
movsl
or
js
nop
mov
cmp
mov
filds
aam
lcall
sub
std
mov
cmp
add
stc
fwait
sub
shll
rol
or
pop
add
shrl
sub
sahf
pop
jo
push
mov
scas
mov
sub
push
adc
mov
jno
mov
cs
inc
add
mov
dec
cmp
pop
lret
mov
mov
test
test
jmp
add
xchg
sbb
sub
test
pop
loopne
mov
mov
cmp
leave
xchg
daa
sub
mov
cltd
xchg
addb
cmp
pop
fwait
ss
insb
jp
dec
shlb
js
inc
xchg
dec
sbb
pop
mov
notb
mov
cltd
sbb
jbe
mov
hlt
test
add
mov
repz
ret
push
jns
incl
sbb
mov
push
sub
or
out
mov
cmp
mov
scas
mov
arpl
leave
stos
jne
mov
cmp
ljmp
mov
mov
gs
adc
icebp
jg
scas
popf
fisubrs
cltd
call
fmuls
xchg
inc
data16
int
stc
or
mov
daa
and
xchg
das
in
push
ret
pushf
in
sbb
imul
sbb
clc
push
add
lock
jae
cmp
pop
aam
ss
sbb
test
add
repnz
mov
fsubrp
xchg
cmpsb
push
adc
pop
stc
imul
cmp
in
xchg
cmp
test
shll
pop
jnp
xchg
sbb
add
jae
or
rcll
push
insb
xor
outsb
mov
sub
add
add
int3
aaa
rol
xchg
insb
lcall
lods
mov
aas
add
jecxz
in
or
mov
mov
in
test
pop
jmp
dec
adc
lods
std
sbb
jl
adc
dec
iret
pop
fwait
push
jnp
mov
jp
ret
lcall
sub
adc
rorl
push
adc
push
sbb
push
fs
add
mov
dec
xchg
or
mov
jo
push
bound
rcl
jg
daa
dec
adc
icebp
push
pop
and
pop
mov
imul
mov
mov
xchg
popf
mov
dec
jg
mov
add
push
cli
sub
jge
in
mov
push
lock
cltd
fsubl
stos
cltd
lret
mov
mov
jl
ret
mov
dec
xlat
xor
ljmp
xchg
rorb
xchg
fbstp
movups
or
mov
xchg
imul
lret
outsb
cmp
ret
lcall
sub
push
push
jmp
rclb
adc
inc
sub
ffreep
xchg
movsb
cs
pop
lods
in
jmp
adc
int3
sbb
mov
pusha
push
jmp
das
mov
jnp,pt
cs
scas
mov
xchg
sub
lret
clc
pop
xor
and
sub
cmp
popf
mov
dec
jmp
xor
test
rorb
call
push
pop
push
pop
push
add
pop
icebp
cmp
cwtl
outsl
add
add
push
mov
in
inc
push
push
sub
push
xor
push
push
lcall
cld
dec
mov
push
flds
adc
push
push
mov
loope
mov
fcoml
fistl
pop
mov
mov
aas
push
in
push
sbb
out
pop
dec
inc
jo
int3
aaa
cwtl
xchg
jne
adc
push
jmp
xchg
aaa
push
sbb
cmp
ret
test
lds
jecxz
push
or
xchg
dec
jae
daa
push
int
mov
jno
stos
xor
jle
ret
xlat
push
and
pop
xlat
out
int3
sbb
popf
mov
cwtl
enter
imul
mov
dec
mov
xchg
bound
pusha
sbb
sahf
pushf
scas
sub
pushf
test
ss
mov
jle
mov
nop
aam
xor
leave
std
andl
add
movsb
pop
jmp
jnp
clc
popf
cld
adc
scas
fcompl
stos
jge
jae
out
pop
mov
shll
mull
pop
popa
dec
fucomip
pop
pushf
ss
pop
inc
cmc
xor
jnp
jg
sub
movsb
or
leave
inc
in
xor
sahf
inc
fbstp
dec
inc
inc
int3
je
imul
xchg
jnp
sub
cld
mov
arpl
out
mov
ss
ret
popf
sub
shrl
sarb
lahf
and
in
jbe
fadds
shl
add
das
ret
xchg
pop
adc
push
cmp
jo
push
fsubs
push
popf
notb
dec
ja
xor
int3
mov
aad
push
dec
popa
out
std
arpl
inc
call
sarl
cmc
xor
icebp
sub
lods
add
pop
push
int3
inc
adc
push
leave
and
or
xchg
inc
repz
fiaddl
test
mov
das
fiaddl
and
xchg
int3
xchg
cmp
enter
push
or
cmp
xchg
xor
jne
xor
and
dec
inc
movsl
aad
mov
sub
pop
loop
lds
popa
mov
jb
rcl
stos
mov
insl
repnz
xlat
daa
pop
loop
roll
sbb
mov
andb
pop
inc
inc
dec
push
fldl
sub
cmpsb
mov
mov
stos
cmp
nop
mov
aad
pop
in
sbb
mov
jo
and
in
ss
jo
mov
xchg
add
bound
bound
push
push
pop
bound
insb
mov
mov
mov
aam
mov
fidivrs
cmp
insb
insl
int
testb
adc
mov
push
test
cltd
mov
cmp
sbb
mov
xchg
lea
fucom
xor
fnstcw
inc
mov
pushf
cs
inc
sub
mov
push
and
in
mov
adc
mov
sbb
mov
stos
jecxz
mov
sahf
inc
adc
in
loopne
rcr
fdivrl
mov
cmp
repnz
flds
jmp
sbb
dec
test
das
inc
mov
mov
xor
cmovnp
push
hlt
xchg
push
bound
ja
cmp
cmp
aad
dec
jmp
sbb
fstl
jg
xchg
in
jns
daa
mov
mov
mov
mov
sbb
inc
jbe
push
out
xor
decb
movsl
dec
pop
dec
mov
mov
pop
jp
ret
xchg
cmp
loopne
in
cmpsl
jb
outsb
or
scas
test
es
hlt
lret
ljmp
in
inc
out
stos
and
ss
push
mov
mov
aas
or
jecxz
push
xchg
outsb
xor
imul
das
inc
xor
inc
mov
and
fisubs
jmp
loop
mov
movsl
or
jns
mov
and
dec
test
bound
data16
shl
cmp
xor
movsb
mov
imul
cli
push
sbb
mov
or
jp
ss
mov
lock
jbe
cld
xor
insl
out
ljmp
inc
fmul
int3
jo
jo
push
popf
dec
add
es
cmc
xchg
fbld
cmp
test
insl
loope
nop
pop
scas
jl
lds
adc
jmp
loope
xchg
iret
les
aam
fildll
jae
dec
mov
stc
test
jne
and
test
jbe
cli
pop
pop
pop
cmp
cmp
inc
aaa
sti
jae
shr
dec
pop
je
addr16
push
adc
mov
icebp
ljmp
mov
xor
push
sub
mov
xchg
adc
push
movsl
in
cld
jae
fisubrs
push
mov
icebp
mov
mov
iret
push
icebp
cmp
clc
inc
mov
leave
sub
movl
dec
sbb
xor
adc
mov
popf
mov
les
stc
xor
aaa
outsl
gs
adc
scas
scas
js
pop
mov
test
add
adc
ds
xor
pop
or
xor
sub
repnz
and
pop
fldcw
es
cmp
pop
int
dec
adc
mov
mov
sahf
int3
in
ret
decb
iret
rolb
fisttps
xchg
mov
push
push
in
iret
lods
xor
in
out
dec
sub
ja
adc
movsb
xor
push
xchg
add
pop
mov
and
dec
mov
popa
lret
jbe
nop
ds
jge
int3
xchg
outsb
inc
push
lods
int
lcall
popl
inc
js
icebp
aad
insl
call
mov
pushl
lods
or
inc
jg
mov
imul
adc
mov
lret
pop
fnstsw
mov
xor
sbb
in
xchg
or
xchg
iret
dec
aad
fdivl
pop
outsl
mov
xchg
adc
mov
mov
and
inc
pop
inc
icebp
mov
jo
cmp
xlat
adc
pushf
inc
push
or
in
push
dec
fisubrl
cmpsb
clc
fstl
pop
pop
adc
and
stc
test
mov
cwtl
ret
push
inc
jge
nop
cld
lea
xchg
and
jae
dec
or
cmpl
stos
and
xor
mov
xlat
and
rcrb
movsl
adc
xorb
add
das
adc
mov
out
adc
scas
jmp
inc
js
push
jnp
xchg
xchg
adc
fiadds
sbb
popa
fucomi
xor
pop
int3
mov
cld
mov
dec
xor
push
mov
jecxz
std
outsl
leave
fildl
dec
inc
nop
sbb
pop
xlat
pop
stc
ret
test
ja
mov
les
aas
sbb
mov
addr16
push
test
pop
push
movsb
cmp
std
xchg
jg
in
dec
out
add
sub
xor
test
mov
sub
rcrb
ret
negb
jb
daa
addr16
sub
dec
dec
out
cltd
or
in
cmp
out
inc
xchg
sarl
adc
jle
fisubl
arpl
cld
stos
mov
jbe
push
leave
and
xor
jno
rclb
lods
mov
pop
xchg
stos
fcmovne
mov
bound
sbb
cmpsb
xor
dec
jo
fisttpll
mov
js
push
cmc
dec
jge
test
sti
adcl
jp
or
lods
mov
mov
push
das
lret
lcall
out
pop
mov
sbb
pop
sbb
mov
push
jmp
xchg
cmp
out
int
popf
inc
pop
cmp
or
push
lods
sbb
pop
cmp
dec
cs
push
inc
push
mov
fnsave
lods
fistl
out
hlt
or
mov
jp
imul
daa
push
jle
add
jo
push
loop
repnz
int3
stc
push
mov
xlat
fwait
and
cwtl
mov
adc
push
push
pop
mov
movsb
cmpsb
ret
add
stc
lahf
add
jge
in
mov
ja
loopne
shl
or
out
jmp
std
push
sub
movsl
fisttpl
iret
sbbl
shll
mov
ffree
out
xor
stos
fistpll
inc
das
stos
inc
stos
repz
pop
xchg
je
clc
jne
ds
popa
jns
popa
aaa
ret
add
add
sti
test
push
loopne
sub
test
test
test
adc
mov
call
jle
xchg
and
imul
das
mov
dec
test
pop
lock
jl
sarl
cwtl
test
fidivl
sub
icebp
pop
sbb
ja
jnp
xor
lods
cmpsl
push
xchg
sub
jnp
xor
pop
push
hlt
cmpsb
popf
xor
xor
push
ss
jle
repz
push
stos
out
cmp
orb
out
insb
inc
adc
jne
add
js
ret
sub
into
mov
ret
inc
stos
inc
jnp
icebp
cli
mov
clc
inc
sbb
push
pop
andb
rcrl
fstpl
stc
push
cmp
aad
xor
jp
clc
add
into
add
addr16
adcl
inc
xor
push
dec
xor
into
andl
js
enter
cmp
lcall
out
dec
sub
dec
jmp
jle
mov
std
and
dec
mov
js
bound
mov
rclb
push
mov
dec
and
aam
mov
push
hlt
shlb
sbb
pop
jg
mov
xchg
testl
outsl
test
lods
loop
mov
cmpsl
scas
into
js
cs
sbb
pop
cwtl
lods
push
ret
mov
xor
mov
loop
fbstp
sub
jo
or
pop
pop
mov
mov
arpl
cwtl
xchg
adc
mov
shrl
and
mov
sub
mov
pop
js
popa
loope
ret
sub
popa
mov
in
cltd
ljmp
xor
mov
or
jmp
dec
inc
repnz
mov
divb
xchg
jo
push
pop
cmp
jp
dec
gs
aam
dec
ss
sbb
push
xchg
push
lock
dec
xchg
sub
lret
mov
mov
push
aaa
std
or
stos
pushf
mov
fisubrl
sbb
mov
shl
inc
jns
jle
pop
inc
pop
jp
jge
xlat
int
xor
lahf
cmp
push
stos
dec
std
mov
or
adc
es
jnp
cmp
push
ljmp
ljmp
pop
push
cmp
cmp
mov
data16
ja
nop
pop
repnz
jp,pn
pop
jnp
aas
rcr
lret
push
out
push
arpl
or
int
add
imull
xor
mov
hlt
mov
daa
outsl
mov
cmp
insb
sub
in
daa
les
nop
push
and
mov
test
mov
fwait
push
sbb
stos
or
cli
inc
lods
jae
or
jle
iret
push
xorb
push
xchg
pop
insl
mov
hlt
sbb
scas
insb
in
dec
and
mov
cltd
add
sbbl
mov
gs
lcall
jns
repz
popa
mov
rcrb
mov
inc
into
clc
mov
xchg
mov
movsb
stc
fs
dec
shlb
gs
dec
push
pop
imul
xchg
ja
push
daa
lret
cwtl
iret
cmpsl
fsub
test
sub
adc
add
or
sbb
or
pop
jle
mov
sbb
add
push
sbb
ds
dec
mov
shlb
push
and
xchg
inc
cmp
sti
out
arpl
imul
scas
mov
scas
outsl
lahf
inc
sti
xor
int3
out
loope
int3
mull
cmp
ja
push
out
jo
mov
or
lods
push
ljmp
jmp
jp
push
pop
mov
push
pop
in
pop
sub
fiadds
add
lock
pop
xor
mov
fs
push
mov
xadd
jl
xchg
mov
scas
add
inc
aas
push
xchg
jnp
cmp
sub
in
fnsave
push
jne
ret
scas
xorb
cmp
cmp
cmpsb
adc
push
mov
adc
sbb
gs
ret
out
mov
and
jbe
aam
cmp
jecxz
imul
sub
jle
pop
frstor
lods
jnp
imul
or
jne
je
stos
mov
mov
fnstcw
xor
fdivrs
cmp
in
mov
dec
in
push
movsl
mov
orl
fisubrs
xchg
sbb
inc
pop
mov
push
and
lock
imul
push
and
cmpsb
sub
mov
mov
iret
or
cwtl
pop
cmp
sar
inc
sbb
addr16
dec
sbb
mov
mov
lcall
into
dec
add
and
fadd
scas
sub
nop
pop
test
stos
xor
pop
mov
ljmp
pushf
gs
dec
jmp
xchg
pop
lock
mov
ret
mov
xchg
push
xorb
loopne
dec
jne
or
xor
cmp
mov
add
loopne
inc
pop
call
jne
push
jmp
cmp
popa
adc
aaa
negb
pop
or
mov
xor
add
or
fnsetpm(287
lods
inc
lret
repz
scas
mov
add
insb
xlat
fcomp
addr16
or
mov
or
pop
cmp
jb
cwtl
pop
ret
sub
leave
add
ss
adc
andb
js
dec
ds
xor
hlt
lock
shrl
je
push
lret
imul
push
cli
sbb
repz
xor
into
in
cmpsl
cmpsb
dec
xchg
jle
adc
imul
push
unpckhps
cmpsb
jne
push
lcall
ficoms
dec
xor
lods
sbbl
js
ret
outsl
ljmp
lock
lcall
pop
xchg
or
std
stos
dec
out
xchg
or
jl
stos
xchg
cmp
pop
adc
fcomps
cwtl
push
popa
jo
jnp
add
fdiv
cld
xchg
cwtl
and
fidivl
mov
out
push
jmp
lret
pop
mov
loopne
outsl
andl
into
movsl
in
cwtl
loopne
pop
mov
hlt
and
jo
cmp
ja
daa
pop
into
movsb
push
in
int
and
dec
inc
mov
mov
jbe
ret
rorl
jp
pop
std
rcll
cltd
out
aaa
pop
lret
call
sbb
testb
es
sub
mov
push
add
btc
fildl
mov
add
lods
dec
pop
std
imul
lock
rep
mov
fucomi
es
inc
out
sbb
xorl
out
repnz
xor
cli
or
xor
movsb
fcoms
iret
aad
in
xor
movsb
pop
scas
add
pop
iret
and
sub
jb
ja
js
jl
cmp
push
xor
push
lds
dec
cmp
add
cmp
imul
and
je
imul
dec
sub
jb
cwtl
bound
leave
jns
xchg
xchg
jb
cli
ja
xchg
mov
rcll
inc
mov
movsl
leave
repnz
in
enter
mov
dec
mov
jmp
sahf
jb
lock
xor
addb
pop
mov
mov
aad
push
mov
jne
adc
xchg
rcrb
jbe
call
sbbb
inc
cmc
loope
dec
data16
jle
fmuls
repnz
and
out
popf
lahf
lcall
mov
and
lods
lgs
outsb
test
or
test
ss
push
repz
cmp
xchg
mov
ror
xchg
mov
daa
inc
mov
ret
push
ss
xchg
pop
arpl
nop
xchg
call
dec
xchg
arpl
pop
xchg
in
lods
rcrl
cltd
repnz
data16
xorl
in
incl
adc
loop
sub
xorl
inc
leave
sub
xchg
or
fwait
inc
sbb
push
je
or
add
mov
jl
jecxz
inc
repz
stos
les
fisttpll
inc
hlt
ds
cwtl
call
mov
data16
lret
push
adc
mov
arpl
scas
aas
mov
inc
and
cmp
xchg
fmuls
or
push
clc
mov
mov
int
shl
fs
lock
xor
cmpsb
aas
xchg
mov
mov
cmp
hlt
mov
popa
mov
xchg
insb
idiv
insl
shll
ret
mov
movsb
iret
dec
jp
mov
cmpsl
imul
jmp
loop
xor
mov
addr16
mov
xor
jge
jge
testl
insl
and
test
push
sbb
loopne
mov
sbb
push
scas
lret
scas
nop
loope
xchg
and
jns
addl
mov
fstp
sbb
jae
test
and
aam
repnz
fisubs
xor
std
sbb
mov
clc
inc
xchg
and
jg
or
cwtl
add
sub
outsl
fdivrs
sub
mov
mov
adc
iret
test
ss
div
xchg
jo
es
stos
add
inc
xchg
cmpb
mov
cs
data16
cltd
outsb
sahf
mov
mov
js
pop
aas
mov
add
add
push
int3
jo
push
insl
insl
push
sbb
dec
dec
pop
frstor
xor
jb
fs
sti
out
lods
cmp
lahf
mov
adc
sub
js
nop
movsb
movsb
cmp
aaa
aaa
into
mov
pop
fcomps
adc
cmc
jg
mov
fisubs
mov
cltd
push
pop
outsl
mov
imul
loopne
xor
jle
pushf
pop
adc
jg
aas
mov
inc
mov
std
andl
dec
cmp
mov
loopne
pushl
jnp
in
push
mov
mov
cmc
mov
outsl
add
nop
imul
fisttps
mov
leave
lahf
enter
test
or
mov
jmp
pop
mov
aam
jmp
call
pop
jae
jl
push
out
or
jns
daa
fildll
pop
xchg
fwait
cwtl
aad
rcll
mov
loope
fisttpll
pop
sub
in
test
mov
mov
cmp
mov
repz
xchg
pop
push
pop
sahf
mov
sahf
enter
insb
cmpb
inc
mov
jne
cmp
test
das
sub
sub
ljmp
lock
xlat
mov
mov
ret
imul
jae
popa
lahf
bound
dec
or
and
cmc
jb
les
xor
in
cmp
xchg
fsubr
aas
sti
ret
loope
jnp
scas
out
push
inc
or
fnstcw
cmp
sbb
push
test
jno
jae
cmp
push
lret
adc
mov
arpl
sahf
sbb
das
mov
or
sbb
xchg
scas
fildll
xlat
gs
dec
pop
fwait
xchg
or
insl
cmp
xor
cmp
inc
icebp
or
sub
push
imul
mov
stos
int3
aas
dec
mov
or
xchg
mov
outsl
cmp
xchg
ss
imul
mov
mov
mov
cltd
scas
push
inc
leave
inc
and
lea
pop
and
mov
push
rorb
icebp
sti
inc
insl
nop
mov
push
lock
mov
das
sub
or
rcr
into
scas
cmp
dec
mov
loope
add
aaa
inc
adc
lcall
lds
gs
js
cmc
int3
lock
push
movsb
push
push
mov
adc
pextrw
and
push
push
ret
test
clc
mov
je
and
into
mov
fcompl
or
sub
cwtl
mov
xchg
and
or
xlat
jp
push
mov
adc
pop
cmc
and
or
push
mov
mov
add
mov
or
xlat
mov
dec
cmp
pop
lea
cmp
jmp
cmp
loope
jo
nop
cmc
pop
add
inc
sub
mov
out
adc
adc
dec
add
loopne
pop
inc
push
notb
jne
cli
rclb
dec
inc
scas
dec
cmpsb
or
movsl
mov
out
jecxz
xchg
xor
jb
jne
mov
mov
inc
mov
cmp
adc
stos
cwtl
and
faddl
stos
sti
aam
jb
mov
fimuls
dec
ficoml
sbbb
imul
out
mov
sar
cli
inc
scas
xchg
dec
mov
jge
stc
call
leave
inc
data16
daa
test
into
xchg
inc
adc
mov
es
pop
sbb
mov
gs
mov
or
xlat
pop
cmp
mov
sub
xchg
or
mov
push
adc
inc
mov
fsubs
push
test
or
popf
popf
xor
lcall
aam
xor
je
ss
sti
dec
loope
stos
fistps
adc
xchg
mov
sub
dec
aas
lret
out
and
cmc
aam
dec
push
leave
js
das
lea
xchg
lods
mov
cld
inc
adc
mov
jge
icebp
jnp
inc
cli
dec
enter
pop
xor
cmpb
les
fnsave
cmp
lahf
add
scas
test
or
int
mov
inc
mov
jo
test
cmpsl
dec
aaa
xchg
or
jmp
call
push
mov
andb
inc
add
loope
stos
xor
imul
loopne
jecxz
mov
ja
cwtl
mov
mov
mov
sahf
fsts
push
les
roll
push
xor
jge
scas
xchg
sbb
fdivrl
daa
test
dec
xchg
daa
adc
sbb
sti
jnp
and
cs
fidivs
jge
sub
mov
scas
or
fcomip
pop
cmpsl
loop
mov
lret
pop
mov
xor
mov
mov
bound
xor
push
pop
and
fs
mov
in
cmpb
xor
mov
mov
jo
adc
int3
movl
inc
addr16
lock
xchg
mov
mov
sub
fisubl
dec
je
jg
inc
sub
rorl
lret
push
sbb
inc
ret
out
jnp
call
mov
mov
sbb
or
jmp
sbb
sub
call
jg
cmp
pop
jp
inc
mov
roll
jnp
lds
addb
add
sub
rorl
mov
jmp
pop
jns
in
dec
insl
push
mov
shr
push
mov
cmp
ret
mov
hlt
pushf
push
inc
movsb
jp
das
imul
mov
mov
add
movsl
aam
jmp
ja
inc
xor
jbe
sub
mov
insb
sbb
mov
or
popa
les
repnz
lret
das
jecxz
adc
ror
inc
push
lcall
jne
dec
add
add
sub
mov
into
push
dec
mov
outsb
sbb
jmp
mov
mov
in
mov
adc
adc
clc
ja
hlt
test
out
movsb
jno
xor
sti
jg
daa
mov
inc
adc
das
cmp
pop
or
push
xchg
out
xor
hlt
pop
mov
rcrb
inc
nop
mov
jl
aad
add
mov
push
rcll
sbb
lock
pop
jns
push
aaa
fdivs
mov
negl
jg
movsb
popf
dec
out
pop
cmpl
mov
inc
adc
lods
mov
push
xchg
sqrtps
enter
or
inc
mov
add
inc
jle
and
mov
out
or
js
pop
dec
je
ficompl
mov
jns
cli
orl
hlt
inc
ds
gs
xor
cmpsb
clc
or
test
pop
add
scas
xor
call
outsl
cld
hlt
inc
sbbb
adc
nop
jne
pushf
and
movb
push
mov
dec
jnp
out
mov
pop
mov
negb
arpl
shlb
jg
imul
les
ss
or
xchg
jge
sbb
subb
jbe
mov
mov
das
fbld
push
cli
mov
lods
push
outsl
adcb
or
das
inc
pop
and
shlb
xchg
outsl
mov
pop
ja
out
dec
addr16
add
and
dec
lock
push
jmp
pop
imul
mov
adcl
movsb
and
imul
in
call
push
stos
sahf
inc
xchg
or
adc
jg
push
xchg
mov
stc
insl
fcoms
aas
jmp
repnz
jno
adc
mov
mov
mov
dec
sarl
sbb
or
and
lea
xor
aad
mov
shlb
rorl
xorl
addr16
cltd
mov
jmp
xchg
jb
xchg
dec
call
inc
and
mov
jbe
cld
call
add
jno
ljmp
call
mov
lahf
and
in
pop
adc
sbb
xorb
push
out
scas
sti
sub
pop
arpl
jle
dec
rcr
imul
and
lret
outsl
lret
add
faddp
pop
in
push
push
mov
xorl
ret
xchg
popa
insl
je
jge
push
pop
test
push
mov
fiaddl
ret
dec
bound
aaa
mov
test
test
add
rclb
push
mov
mov
filds
mov
lods
arpl
dec
and
in
inc
mov
inc
popa
and
sub
incl
ja
push
adc
pop
add
mov
push
fmul
loopne
outsb
andl
adc
andl
and
lods
mov
les
testb
sti
inc
es
repnz
movsb
mov
sti
ror
ret
xor
filds
jp
pop
sahf
mov
shrl
fisubrl
jb
iret
cld
cmpsl
das
xchg
add
in
jle
cmp
imull
mov
sub
aad
movsb
push
push
mov
mov
out
add
dec
mov
cld
daa
jae
sub
or
adc
inc
out
and
xchg
movsl
jae
mov
and
push
nop
or
out
loope
jo
rclb
es
cmp
inc
jg
xchg
in
cmp
lods
andl
mov
dec
orb
xchg
fmuls
mov
pop
and
stos
cltd
aad
and
fisubl
inc
mov
movsb
cmp
mov
hlt
or
jo
shlb
and
mov
or
imulb
sub
dec
add
inc
sub
stos
pushf
mov
jns
push
push
add
jl
cmp
adcl
push
sub
mov
cmpsb
mov
mov
xchg
xchg
push
cmp
xor
lea
pop
xor
mov
mov
or
rcr
adc
and
jo
fmuls
sub
cld
ljmp
fsubp
lcall
mov
lcall
sbb
popa
dec
mov
mov
sub
and
lock
xchg
les
push
jecxz
mov
adc
xorl
cmp
ret
inc
sub
lret
push
fwait
jae
jecxz
cltd
mov
hlt
dec
mov
fsubrl
daa
cmc
xchg
inc
aas
test
mov
inc
aad
hlt
ss
mov
mov
insl
nop
stos
jl
inc
and
xchg
or
gs
mov
mov
sub
push
int3
mov
js
lret
xchg
shlb
inc
movsl
mov
out
push
mov
mov
push
lret
xchg
jg
xlat
jge
faddl
fidivs
ret
jg
xor
fdivs
cmp
test
sub
lock
sbb
sbb
testl
and
push
cmp
sysenter
jecxz
mov
movsb
xorl
cmpsb
mov
fldlg2
jle
popa
in
out
ss
test
pop
negb
pop
and
test
mov
xchg
insb
int
movsb
xchg
sub
mov
jns
mov
cli
fiadds
shlb
jecxz
and
mov
xor
scas
lea
mov
fbstp
imul
sbb
daa
jecxz
adc
loop
enter
lahf
movsl
loop
repnz
add
sbb
hlt
jg
les
rcr
add
stos
sbb
in
mov
in
ds
xchg
stos
imul
outsl
jl
jo
jnp
lock
ljmp
test
dec
imul
ds
or
xchg
cmc
aaa
jge
adc
mov
push
jae
xchg
mov
dec
clc
jecxz
imul
xor
inc
xchg
pop
jnp
cmpsl
bound
and
loopne
loopne
push
inc
adc
mov
pop
cmp
and
sub
aad
out
vmread
jo
test
negl
push
sub
outsl
adc
jns
sub
add
pop
pop
out
loop
adc
lcall
adc
out
mov
stos
lret
add
shrl
dec
push
es
add
and
in
mov
pop
arpl
test
fs
js
jmp
sbb
cltd
mov
sbb
sbb
popf
lret
sub
out
push
mov
push
les
nop
mov
shl
mov
insl
adc
ljmp
lea
lcall
xor
inc
ficomps
fiadds
sti
nop
repnz
iret
in
and
pop
push
shrb
cmc
cmp
fisttpl
ds
and
or
and
outsl
stos
test
fxch
out
and
or
and
pusha
xchg
mov
cs
aaa
fiaddl
data16
jns
xchg
loope
movsl
cmpsl
adc
lock
mov
pop
mov
xor
loop
mov
negl
add
dec
nop
xlat
arpl
cld
ficoms
sub
jle
stos
or
push
jge
push
loopne
sbb
out
movsl
test
jno
and
push
inc
pop
xor
jnp
out
cmc
fcmovnbe
setns
lret
push
cltd
fisubl
push
dec
sbb
into
test
add
lret
jp
pop
pop
imul
mov
mov
pop
cs
sub
sub
or
repz
xor
cmc
fiaddl
arpl
inc
test
outsb
jecxz
and
mov
out
jo
roll
dec
xchg
mov
mov
enter
and
repnz
push
mov
mov
adc
stc
inc
cmp
outsb
mov
test
out
inc
push
imul
mov
nop
bound
scas
and
sti
outsb
sub
adc
mov
and
mov
inc
out
add
lods
dec
sub
cmp
sbb
push
mov
inc
jnp
add
in
add
shlb
xchg
fwait
cmp
xchg
lods
scas
pusha
shlb
inc
das
jp
adc
ljmp
sbb
sub
xchg
sbb
sbb
pop
stc
jge
or
mov
push
insb
les
add
dec
mov
lods
adc
pop
jp
mov
incl
mov
roll
aad
cmpsb
std
shlb
mov
jns
jbe
pushl
pop
adc
test
sub
sbbl
cmp
inc
mov
mov
pop
lahf
sbb
loopne
mov
mov
incl
mov
cwtl
adc
out
push
xchg
xchg
imul
mov
cmp
xchg
int3
pop
push
in
add
inc
dec
inc
stos
xchg
xchg
sub
stos
mov
pop
inc
and
movsb
into
lea
scas
bnd
fimuls
dec
repz
xor
dec
rcrb
push
inc
add
aas
mov
test
jnp
iret
and
cmp
pushf
lock
icebp
cmp
aam
dec
mov
jecxz
mov
mov
arpl
lret
rorb
dec
sub
aad
push
and
inc
ret
aaa
subl
sarl
or
imul
xchg
jnp
loopne
mov
cmp
imul
mov
xchg
mov
add
cwtl
int
addl
out
iret
push
add
shr
jno
cmp
popa
sbb
cmovne
ret
or
stos
mov
shlb
sub
outsb
movsl
or
xchg
popf
and
mov
lret
sub
sbb
clc
jmp
dec
insb
fldcw
idivl
xchg
pop
xlat
divl
xor
jbe
mov
out
pop
idivb
dec
std
mov
add
in
jnp
pushf
nop
lea
cmp
rcrb
ror
dec
pushl
cld
loop
sbb
pop
mov
xchg
jg
mov
lods
add
sub
or
pop
arpl
dec
xor
or
jp
mov
jg
adc
pop
mov
inc
add
orl
insl
xchg
cli
lods
lret
mov
add
sub
mov
mov
mov
arpl
fidivl
scas
shl
rorb
and
xchg
pushf
fdivr
xchg
popf
sbbb
into
pop
scas
js
sbb
xor
jecxz
pop
fs
sub
rolb
adc
push
add
rcrb
cmp
call
outsl
out
pop
outsl
sub
inc
xor
iret
out
sub
fwait
mov
or
sbb
movsl
and
stc
jnp
cli
cmp
push
adc
push
aas
fimuls
addr16
lods
and
ljmp
xchg
imul
or
xor
xchg
andb
xor
fwait
or
push
mov
sub
push
jecxz
sbb
ffreep
lods
cmc
mov
xor
jmp
pop
jle
mov
jae
aad
sub
jmp
fistl
popa
dec
lret
in
xchg
in
fnsave
roll
xor
sbb
cmp
outsl
inc
inc
push
addl
rep
mov
adc
fcoml
adc
outsl
lahf
movsb
aas
mov
lods
out
shlb
dec
das
xchg
insb
jecxz
and
sahf
repnz
repnz
sbb
les
jns
fs
dec
test
outsb
imul
or
mov
add
dec
lods
lods
test
popw
and
add
int
jp
insb
or
ret
aad
or
sar
mov
ds
cmp
mov
lods
push
ljmp
imul
mov
xor
xor
xchg
fmul
cld
dec
pop
test
outsb
nop
mov
fsubs
dec
cmpsl
das
mov
ljmp
jp
aam
pop
pushf
jmp
shr
ror
sbb
jno
outsl
test
call
ss
sbb
out
dec
push
mov
xor
popf
fisubs
repnz
jb
inc
adc
lock
xchg
mov
cmp
mov
adc
insb
fdivrl
int
lds
push
in
sub
push
sbb
push
rol
sbb
test
pop
ss
mul
stos
xchg
fsts
popa
xor
adc
mov
mov
sbb
pop
xor
repnz
dec
leave
aas
scas
cs
lahf
lcall
lds
xchg
dec
and
jae
lret
or
cmp
xorl
divl
popf
fstp
out
sbbb
lret
mov
popf
mov
cs
cmpsb
ret
in
sub
nop
xchg
std
data16
cmpsl
clc
bound
inc
sti
ds
xchg
adc
push
sub
sarb
push
adc
dec
cmp
insb
cltd
shlb
xchg
mov
sahf
sarb
loope
pop
sar
stos
inc
or
into
imul
sub
sbb
xor
call
repnz
push
cltd
add
gs
outsb
in
aaa
jns
cmp
pusha
add
aaa
pop
ret
jo
not
insl
cmpsb
xlat
call
push
push
iret
stc
jge
sahf
js
adc
rol
push
repz
adc
loopne
sar
pop
shlb
pop
pop
call
popa
test
xor
sub
cmpsb
push
sti
dec
mov
ljmp
sbbb
fwait
pop
sbb
adc
inc
cmc
loope
aas
mov
pop
dec
inc
sbb
or
adc
rcrl
popf
daa
push
dec
movsl
pop
sbbl
pop
push
aaa
xchg
test
jmp
outsb
jge
mov
mov
pop
pop
sbb
clc
aaa
in
lret
lea
sbb
pop
add
das
adc
lock
subb
cmp
outsb
pop
cmp
dec
mov
enter
fsubrs
jo
mov
dec
adc
cwtl
push
sbb
adcw
dec
push
mov
imul
sub
nop
subl
shlb
push
xor
aas
xchg
testl
ficompl
xchg
or
enter
inc
or
fwait
mov
pushl
xchg
cmp
daa
icebp
out
xchg
insb
loop
test
push
enter
pop
or
in
mov
in
inc
pop
cmpb
fistps
aas
fistl
pop
push
lods
dec
popa
call
cwtl
es
movsl
scas
dec
and
jb
push
ja
jg
add
sub
fsubr
xor
aad
mov
jecxz
mov
stos
push
add
fcomps
aaa
in
mov
and
icebp
cs
mov
jl
fistpl
pop
arpl
jge
mov
mov
or
popf
sub
mov
popa
mov
lcall
mov
dec
orl
ret
push
xchg
setns
inc
fsubrl
das
dec
cmp
inc
push
dec
mov
push
inc
xor
pop
inc
mov
mov
adc
xor
call
dec
addr16
fildll
inc
ret
and
add
leave
mov
sahf
shrl
pop
je
leave
mov
rcrb
sahf
idivb
dec
cmp
mov
icebp
add
pop
dec
test
and
cld
mov
out
sbb
inc
push
and
add
xor
add
shrl
or
mov
lods
subl
call
lea
fs
xchg
pop
jns
sub
jbe
pop
imul
pop
fdivr
sub
outsb
or
add
outsl
cmp
jg
push
inc
fldcw
mov
fcoms
pushf
add
and
dec
lea
jle
or
adc
rorb
dec
lods
jmp
fdivp
lahf
and
jbe
shll
push
xchg
shl
outsl
lret
adc
shl
rolb
mov
clc
or
pushf
es
sub
cld
mov
xchg
andb
shll
inc
shlb
fwait
or
jmp
pusha
xchg
xchg
rorb
in
ret
shr
aam
cmp
xor
mov
mov
in
push
xor
out
test
mov
xchg
insb
adc
xchg
in
and
lds
aam
inc
inc
addr16
sub
cmpsl
dec
enter
mov
test
jle
adc
jmp
mov
mov
imul
ljmp
pop
xchg
adc
jne
cwtl
sub
inc
or
int3
xor
xchg
inc
sub
ret
xor
cmpsl
mov
pusha
and
ficomps
xchg
in
int3
mov
scas
cs
push
cld
lret
imul
pop
pop
xchg
push
adc
mov
stos
pusha
dec
test
push
or
mov
pop
ss
pop
inc
fcmovnb
fcmovb
add
in
cwtl
xor
cmc
sub
xchg
inc
in
jne
ja
std
clc
xchg
push
out
push
loope
sub
jecxz
sub
out
add
loope
cmp
jo
in
xor
cmp
mov
mov
bound
cltd
or
dec
mov
out
inc
dec
dec
xchg
mov
cmp
cmp
push
add
sub
sbb
xor
push
mov
dec
pushf
iret
xchg
ret
lock
pushf
mov
stos
add
mov
fnstenv
mov
mov
push
test
bound
sub
mov
ret
lods
push
jo
incl
and
or
fs
xchg
jnp
xchg
orl
repz
mov
dec
mov
push
mov
stos
imul
std
scas
push
hlt
add
adc
lods
add
push
loop
repnz
xchg
mov
ret
movsl
lods
ljmp
out
sbb
fcmovu
push
das
leave
adc
mov
ja
ljmp
or
jbe
out
daa
cmp
stos
out
loop
sbbl
sbb
cld
push
jge
loopne
add
in
pop
rorb
cmp
jl
or
cli
pop
test
sub
mov
cs
mov
fisubrs
inc
arpl
and
sub
jbe
cmp
mov
add
lea
pop
sahf
imul
pop
inc
aad
mov
hlt
psubd
xchg
outsl
sbb
jmp
push
xchg
cmp
inc
xchg
call
push
mov
cmp
jmp
sub
mov
out
xor
sbb
inc
int
mov
insb
inc
test
cmpsb
or
inc
addr16
and
int
icebp
testb
pop
push
cs
mov
lahf
test
push
xor
sub
dec
mov
mov
out
jl
and
cmpsb
jo
mov
hlt
ljmp
lods
xchg
mov
fidivl
and
lret
mov
pop
add
sub
jb
rcrb
xor
inc
es
in
outsb
sub
jl
jbe
push
and
ds
out
sbb
inc
fcomip
pop
imul
fdiv
cmc
xor
jo
fwait
cmpb
loopne
and
and
mov
inc
push
sahf
sub
mulb
in
dec
adc
je
mov
jmp
test
adcb
cmp
mov
test
sub
sarl
adc
mov
push
push
xchg
jecxz
inc
pusha
ja
dec
or
lods
hlt
test
xor
inc
repz
push
lcall
fwait
jne
sarb
movsl
cmc
adc
push
or
jle
mov
pop
inc
push
sbb
cmp
das
int
add
xor
add
test
shlb
jp
mov
icebp
jbe
ret
inc
or
lods
dec
xchg
test
loope
jbe
mov
aad
pushf
outsl
je
lea
push
pop
adcl
xchg
data16
dec
mov
xor
xchg
aam
mov
lcall
into
jecxz
das
lods
lods
insb
pushf
mov
fstpt
push
test
mov
call
ret
lods
lea
mov
jle
outsl
repz
jns
add
add
jns
push
roll
push
add
sbb
xchg
cli
adc
pop
ljmp
dec
mov
xor
fcmovb
adc
fs
mov
sbb
in
cmpsl
pushf
std
jo
pop
jns
xor
insl
pop
jno
adc
mov
iret
in
add
aaa
mov
js
adc
pop
jecxz
xor
fildl
push
lds
cmpsl
xchg
inc
sbbb
rolb
jae
sub
xchg
fisubrl
inc
ds
scas
iret
jns
das
movsl
repz
cmp
outsb
mov
inc
test
int
outsl
jne
jecxz
add
cmp
in
jecxz
push
loope
imull
pop
push
rcrb
cmpsl
push
lds
cltd
xchg
or
clc
ficomps
testb
adcl
sbb
mov
sbbb
jbe
cmp
xchg
lret
and
fdivr
shlb
mov
adc
insl
push
mov
repz
ds
jmp
cmp
mov
push
xor
dec
pop
fidivrs
cmp
in
jae
pop
xchg
mov
aad
out
mov
in
push
inc
stos
movsl
sbb
insb
jbe
les
or
jno
in
out
mov
xchg
push
mov
push
sbb
fmull
mov
cwtl
or
leave
ja
sub
rorb
sbb
fsubp
pop
data16
ss
jo
mov
je
rcrl
cmp
mov
mov
dec
bound
push
mov
rcl
je
inc
std
cmp
sbb
sti
iret
dec
int3
arpl
out
inc
or
es
aaa
mov
mov
jne
popf
outsl
push
aas
dec
test
add
icebp
fisttpl
adc
ret
adc
mov
pop
shr
ljmp
push
int3
pushl
adc
ret
lock
push
icebp
sbb
mov
lret
inc
jg
jbe
sbb
imul
sub
iret
inc
pop
push
dec
popf
push
das
mov
outsl
jg
pop
aaa
xor
dec
adc
pop
data16
push
out
jae
aad
fcmovnb
or
nop
cmp
iret
hlt
xchg
ret
xchg
ss
and
mov
pop
mov
xchg
nop
and
adc
xchg
push
cmp
cmp
sbb
aam
pop
int3
iret
cmc
out
add
repnz
push
pop
popa
mov
jl
fs
add
mov
jmp
cmpsb
pop
das
or
and
andb
pop
sub
stc
les
test
rcll
pushf
lods
fcmovnbe
jne
dec
jae
std
cli
or
lret
addr16
dec
test
mov
cmpl
mov
push
xor
scas
test
xchg
jp
xor
dec
jo
sub
cmp
in
push
xor
adc
movsl
loope
or
pop
icebp
js
cmp
cmpsl
add
sarb
fistl
sbb
dec
bound
std
imul
pop
dec
loop
fisubrs
xor
dec
loopne
and
and
xor
cmpsb
and
jnp
out
or
fcoml
pop
rol
mov
in
pop
je
popf
out
dec
clc
push
jg
sbb
repnz
pop
dec
jae
andb
cwtl
int
into
adc
xchg
ret
dec
adc
pop
mov
jnp
hlt
lahf
inc
outsl
cmp
mov
sub
jle
call
loopne
filds
dec
push
loopne
lret
pop
cmp
sahf
mov
push
xchg
addl
clc
hlt
cmp
mov
js
movsb
mov
adc
imul
test
pop
repz
xchg
xchg
loop
jnp
wrmsr
rclb
jg
and
mov
or
add
test
outsl
test
std
mov
pusha
xchg
imull
fcoml
sub
nop
add
filds
inc
in
hlt
call
and
fnstenv
adc
inc
add
jmp
popa
adc
inc
adc
pop
imul
gs
inc
and
fidivrs
xor
adc
movsb
add
aaa
mov
loope
adc
in
std
divl
addr16
icebp
lea
iret
jno
std
bound
int
inc
faddl
xchg
je
cmpsb
xchg
jl
mov
adc
add
add
pop
in
adc
mov
andb
xor
add
clc
xor
mov
jl
dec
int3
pop
sbb
pop
shll
or
sti
pop
jns
lods
adc
out
push
jno
xor
and
inc
and
dec
test
mov
stos
mov
pop
cli
int3
in
cmp
pushf
xchg
and
push
and
test
xchg
hlt
ret
sub
adc
int3
xchg
inc
mov
or
add
dec
xor
lods
jb
xor
aad
push
xchg
cmp
mov
mov
push
aam
adc
jmp
dec
movsl
inc
pusha
rcll
jg
fidivs
or
aad
fdivs
pop
sbbl
xchg
in
das
mov
pop
cmpsl
lahf
cmc
jo
pop
les
in
leave
jae
js
add
sub
push
daa
add
shlb
outsb
lock
push
stc
sbb
adc
xor
push
xchg
jg
pop
out
ret
cmc
adc
or
pxor
inc
test
jns
in
xchg
inc
dec
leave
mov
lods
lret
dec
in
scas
xor
pop
outsb
jae
mov
inc
xor
fistps
out
gs
push
sbb
dec
xchg
mov
push
int3
sbb
movsb
test
add
and
inc
sub
push
call
ja
sbb
mov
ja
sbb
loop
push
mov
mov
lea
jmp
xor
movb
cmp
pop
or
mov
adc
lcall
rol
sub
add
pop
sub
mov
pop
or
jnp
push
ss
or
loope
imul
ret
dec
adc
xor
adc
bound
xor
lcall
shll
repz
jmp
sbb
push
sbb
mov
scas
mov
mov
pop
jbe
inc
or
mov
pop
out
in
sbb
pop
out
xchg
dec
imul
mov
xor
test
and
sub
test
lea
stos
imul
xor
lret
cmp
ds
mov
dec
movsb
and
xor
mov
fsubrs
rolb
xor
or
push
inc
jne
enter
push
push
lock
aam
dec
xor
adc
sbb
add
test
loopne
jb
enter
jbe
lods
out
add
push
clc
or
cltd
cld
lahf
orl
ds
les
aam
push
adc
mov
shll
fstpl
adc
stos
testb
mov
in
fisttps
xchg
addl
lea
push
pop
int
enter
mov
rcl
xor
pop
aad
mov
push
inc
or
pop
push
data16
ds
insb
mov
mov
insl
jo
sub
outsb
aam
lds
jl
mov
popl
and
xorl
sarb
sarl
xchg
enter
mov
push
xchg
inc
popf
lret
addr16
call
out
cmp
add
push
sarb
push
insl
fadd
push
lcall
or
ds
adc
dec
rorb
lret
sbb
cmp
push
mov
out
aad
xchg
and
cmp
scas
ss
xlat
rolb
pop
push
jnp
dec
clc
js
sbb
ror
in
pop
or
es
pop
dec
add
jae
movsb
rcll
bound
xchg
dec
mov
xor
jecxz
cmp
xor
adc
push
popf
or
jo
in
movsb
ret
insl
aam
cmp
ret
rcrl
sub
cmpsl
adc
jno
sbb
test
mov
push
jo
icebp
roll
xchg
and
push
xchg
nop
fcoms
lret
leave
mov
mov
js
jge
push
mov
pop
sub
mov
enter
push
inc
nop
and
rcll
mov
or
mov
arpl
xor
cs
mov
cmp
push
dec
mov
and
test
int
lods
fdivl
test
xchg
popf
repnz
icebp
lret
imul
and
jns
les
cmp
test
popa
add
and
loopne
stos
lods
call
fwait
call
lods
jge
idivl
mov
into
pop
inc
jmp
popa
insl
jne
outsl
daa
push
dec
je
and
lret
push
xor
inc
push
sub
dec
inc
dec
scas
aas
push
sbb
scas
clc
sub
aad
imul
push
cmp
push
jnp
outsb
adc
rolb
dec
lret
fcmovnb
mov
test
add
xor
sbb
and
arpl
mov
xchg
push
shrb
sub
mov
adc
ss
ljmp
test
mov
cs
shrb
xor
jge
jge
mov
enter
lcall
imul
sbb
mov
arpl
mov
adc
subl
aas
movsl
push
jo
mov
mov
ja
pop
inc
rorb
add
xor
mov
pop
mov
lods
jge
fdiv
jl
cltd
dec
rorb
dec
je
sub
mov
dec
pop
jmp
rorb
cmc
test
sub
xor
lods
cmp
or
push
sub
adc
ficoms
xchg
jle
dec
stc
sbb
pusha
pop
xchg
mov
push
in
xor
push
repnz
xor
out
add
inc
insb
das
add
pop
sub
inc
add
mov
neg
push
jae
sbb
inc
and
into
mov
xor
cld
push
mov
xchg
lds
arpl
mov
mov
push
outsb
xorl
pop
fsts
es
addr16
sbb
inc
rorl
int3
bound
test
jnp
in
cmp
fdivrs
out
add
cltd
and
fstl
mull
sbb
xchg
add
dec
cmp
jo
xlat
hlt
cmp
cmp
pop
es
xor
push
mov
popf
fldl
fcmovbe
call
gs
cmpsl
lcall
fstp
sbb
inc
jmp
mov
push
sbb
movsb
cmpsb
push
adc
adc
inc
or
outsb
and
xchg
xchg
stos
mov
mov
dec
adc
test
frstor
sub
cmp
mov
movsl
xchg
enter
pushf
add
stos
sub
lcall
addl
js
fcoml
fwait
push
repnz
aam
test
and
dec
dec
add
mov
mov
ljmp
push
add
lods
addr16
mov
jo
test
jp
xchg
dec
or
lcall
in
test
mov
or
jae
mov
test
pop
pop
outsb
inc
hlt
das
jg
shl
or
or
ret
add
hlt
mov
xor
fldt
pushf
repz
xchg
or
push
jnp
cmpsl
das
push
sub
cmp
aad
push
jmp
rolb
pop
in
icebp
mov
leave
mov
cmpsl
cwtl
cmp
adc
data16
mov
sub
cmp
repz
cld
inc
inc
test
pop
sti
and
shrl
jnp
pop
cmp
fdivs
rcll
out
stc
sahf
test
mov
inc
in
scas
lods
fsubr
daa
cmp
jge
pop
roll
pop
dec
repnz
and
jg
cmpsl
sahf
orl
push
inc
icebp
sbb
jae
push
das
mov
push
jmp
push
xor
push
movups
mov
mov
flds
mov
sbb
icebp
mov
or
push
push
ret
dec
out
sub
lar
mov
shlb
incl
mov
sbb
and
push
cmp
sbb
adc
xchg
or
sub
movsl
push
adc
out
xchg
scas
in
rcll
jl
inc
mov
jmp
add
aaa
les
shr
jo
inc
and
jne
push
and
pop
mov
mov
pop
orb
pop
pop
sahf
xchg
add
jo
sub
stc
pop
and
xchg
stc
add
inc
sbbl
dec
jno
mov
out
and
push
jnp
hlt
fisttpll
sbb
mov
and
xchg
ficomps
add
ds
out
fadds
mov
sbb
shr
xor
cmc
push
or
push
dec
jo
out
pop
or
pop
jg
xorl
xor
sub
add
inc
push
lcall
cli
push
cmp
or
xchg
jns
mov
out
add
dec
adc
das
lret
cs
jmpw
cs
int
pop
insb
mov
dec
scas
cmp
xchg
fimuls
add
lods
into
decb
jns
lret
jno
into
push
int
sbb
scas
mov
dec
mov
insb
icebp
mov
iret
mov
mov
arpl
arpl
add
pop
popa
or
mov
je
mov
fbld
xchg
jge
fcompl
inc
sub
inc
gs
or
jb
out
fucomp
cmp
lea
jmp
sahf
mov
int
sub
ret
loop
push
fnsave
mov
sub
cmp
jg
lods
xor
adc
cwtl
mov
jb
xorl
dec
cmp
add
mov
mov
inc
mov
data16
or
jmp
and
and
mov
mov
sub
pop
inc
fstpl
mov
and
push
pop
dec
jbe
cwtl
stos
sti
ret
push
fstpl
fs
cmpsl
gs
les
push
or
xor
enter
ret
xor
jge
xchg
test
adc
andl
sarl
leave
js
and
xchg
pop
cmp
xchg
lahf
dec
push
add
xor
cmp
stac
loop
dec
push
mov
inc
fwait
fwait
int
scas
push
mov
sbb
pcmpgtw
rorb
nop
mov
int3
mov
je
scas
insl
rcrb
add
scas
ljmp
addl
ds
sarb
xlat
lret
stos
add
loopne
movsb
arpl
inc
push
call
imul
mov
cmc
mov
das
into
iret
fldz
addr16
add
push
vmovntdq
mov
aas
add
mov
ja
cmp
inc
pop
sub
subl
popa
mov
enter
cmp
mov
arpl
mov
je
call
mov
and
mov
out
mov
jl
arpl
or
test
dec
jp
ljmp
popf
jne
xchg
inc
xor
std
ss
sbb
xchg
mov
stos
mov
repz
std
icebp
adc
mov
cmp
outsb
adc
sbb
mov
push
bound
pusha
idivb
pop
pop
clc
sahf
mov
xor
enter
adc
lods
adc
ss
int3
jnp
into
mov
pop
mov
push
mov
sub
mov
aaa
dec
es
jns
sub
cwtl
pushf
adc
nop
fadds
xor
bound
loop
in
pop
cmpsl
sub
mov
jl
fcomps
cmp
dec
inc
movb
test
mov
push
mov
pop
push
xor
jae
inc
mov
jnp
jbe
pop
cmc
ret
addr16
cwtl
dec
xchg
cmp
mov
mov
aad
pusha
mov
sti
sbb
shll
lock
push
in
xchg
adc
pop
stos
loop
aas
push
sahf
mov
cmp
cs
inc
in
and
inc
pop
movsb
aaa
xor
add
mov
mov
pop
push
fists
and
inc
sar
cmpsb
imul
jnp
or
scas
ds
loop
std
and
decl
rorl
inc
das
jp
mov
jns
cmp
cmp
mov
popf
and
mov
adc
mov
outsb
add
push
cmpsl
adc
fcoms
repz
xlat
jno
jge
mov
mov
repz
ljmp
dec
fbstp
lret
pop
push
icebp
out
ret
dec
stos
pop
lea
das
jmp
mov
mov
mov
or
loope
cwtl
in
xorl
sbb
lea
xchg
add
repnz
in
jmp
iret
jbe
stc
shlb
lods
or
loop
add
jbe
shl
dec
dec
fwait
stc
and
pop
out
loope
sbb
push
xchg
xor
mov
out
fadds
int
je
adc
aam
fld
lret
in
push
add
out
test
lret
sub
xchg
jmp
cmpsb
pop
pop
into
roll
jnp
nop
inc
inc
enter
add
loop
in
repz
jmp
in
scas
add
push
ret
jno
mov
jecxz
inc
mov
sbb
and
xchg
add
inc
scas
call
ds
fidivrl
sbb
mov
cmp
dec
jecxz
scas
push
or
xor
and
mov
xor
sub
push
andb
iret
mov
int
shlb
imul
mov
lret
lret
jae
mov
add
mov
push
testl
scas
int
pop
inc
stos
inc
pop
movl
aam
sbb
push
inc
repz
sbb
cmp
mov
dec
sub
adc
les
adc
adc
xchg
out
sbb
jg
xlat
dec
xor
push
mov
xchg
or
xchg
inc
ffree
aaa
add
shrb
mov
xchg
push
push
hlt
jb
inc
nop
xor
hlt
ds
popf
enter
dec
adc
rol
or
mov
adc
cmpsb
mov
cli
cmpb
shrb
push
mov
jmp
jge
loopne
sbb
jp
ja,pt
fdivr
daa
xchg
sbb
int3
push
jbe
pop
outsb
insl
cmpsb
mov
mov
imul
cwtl
popf
push
icebp
add
popf
mov
lahf
xor
jmp
lahf
mov
lret
fs
out
arpl
ljmp
inc
leave
dec
call
push
sahf
in
adc
adc
jge
xchg
lds
gs
ljmp
push
fisubs
testl
ror
pop
outsb
pop
adc
cmp
xchg
push
fbstp
in
jo
popa
call
lods
jbe
xor
hlt
int
enterw
shlb
not
or
cmp
in
nop
in
addr16
jle
scas
xchg
mov
xor
mov
mov
mov
sbb
add
add
add
leave
or
xor
cmpsb
pop
push
test
mov
pop
popa
sub
xor
jne
scas
je
pusha
xor
push
or
push
dec
lret
test
jl
call
add
fistps
insl
hlt
lcall
inc
inc
or
cmpsl
adc
int3
mov
xchg
ror
sub
pop
and
fisttpll
sbb
inc
stos
xchg
pop
and
fs
cli
jle
inc
out
mov
and
lret
mov
test
push
icebp
aaa
repz
mov
mov
lret
mov
dec
xchg
rorl
mov
cmp
das
add
pushf
fildll
test
xchg
sahf
mov
in
cs
sti
adc
inc
xchg
lcall
icebp
mov
mov
adc
test
pushf
sub
gs
cmpl
inc
mov
xchg
mov
lea
push
test
mov
jg
int3
iret
xchg
fdivl
push
cli
mov
xor
mov
cmpsl
mov
divl
and
adc
insl
push
jge
loopne
fstpt
aas
cltd
fadds
mov
mov
out
add
inc
inc
bound
add
push
sub
loopne
fistpl
cli
or
mov
outsb
and
pushf
pusha
das
movsl
scas
adc
cmp
pop
inc
ds
xchg
js
adc
mov
sbb
sbb
dec
out
movsl
fcomps
es
daa
sti
xchg
or
or
in
sbbl
and
int
lcall
and
cli
int
jp
or
subb
xor
fimuls
xchg
lcall
arpl
hlt
jp
fdivrp
pop
lret
xor
and
les
xchg
add
leave
stc
mov
dec
and
pusha
out
aas
and
jns
mov
mov
sbb
add
hlt
xchg
sbb
dec
xchg
clc
clc
mov
xchg
out
push
loop
xlat
mov
pop
jmp
lods
xchg
xchg
popf
imul
push
add
out
test
scas
ret
add
data16
out
aad
and
scas
das
cmc
xchg
dec
out
xchg
push
cli
add
mov
xchg
jp
add
mov
jge
pop
mov
push
jo
lds
fimull
dec
std
cmp
scas
inc
sub
jbe
xor
sti
jbe
add
xor
loop
inc
dec
dec
pop
ss
in
dec
push
mov
cltd
imulb
icebp
push
int
adc
or
xchg
add
xor
mul
aam
dec
aaa
test
pop
mov
aam
test
mov
xchg
dec
cmp
fidivrl
dec
push
pop
push
cmpsl
xor
pop
sarb
pop
insb
dec
ret
mov
inc
dec
pop
jno
adc
lods
ss
fmuls
push
in
test
pop
lret
stc
push
cmpsb
ds
nop
pop
ss
jecxz
hlt
jge
in
enter
out
or
jbe
dec
sub
sub
xor
je
mov
jbe
push
jae
scas
addr16
out
xor
cltd
js
pop
or
icebp
pushf
sti
sbb
mov
adc
cmp
pop
jnp
inc
inc
or
pop
aam
cld
out
ret
mov
or
mov
add
mov
les
pop
pushf
inc
add
test
xchg
insb
aaa
test
xor
jnp
aam
gs
mov
push
nop
mov
mov
ja
shl
and
and
push
mov
test
dec
pop
arpl
loop
jnp
push
jne
dec
mov
and
shrl
rcll
pop
into
jo
out
xchg
in
mov
pop
or
jb
pop
adc
mov
and
rolb
xchg
ljmp
cmpb
jno
sbb
sarl
stos
xor
js
scas
mov
mov
iret
adc
outsb
call
enter
xor
scas
or
or
mov
rep
clc
adc
cs
movsl
sbb
add
inc
xlat
push
lock
push
or
lahf
xor
mov
add
push
clc
xchg
jmp
dec
sbb
sahf
xchg
adc
xchg
push
in
dec
sub
lret
insb
test
data16
inc
sub
mov
es
ret
addr16
xor
dec
add
inc
xchg
mov
repnz
lods
inc
pop
xchg
xchg
jne
fistpll
insb
xchg
ds
dec
loopne
dec
es
jmp
mov
jmp
sub
out
mov
jno
clc
jb
sbb
xor
push
push
test
adc
je
jne
pushf
lcall
add
sub
loopne
xchg
jecxz
cwtl
xor
dec
push
and
cltd
std
sub
pop
push
sub
jecxz
pop
pop
testb
or
testb
test
flds
fwait
insb
sbb
lea
dec
mov
call
sub
in
pop
or
insb
cs
adc
pop
inc
xor
sub
mov
or
sbb
jmp
add
fs
das
outsb
or
in
fsubs
out
pushf
push
fwait
add
pop
popa
aam
loope
xchg
mov
pop
add
scas
adc
mov
lods
adc
orl
aam
cwtl
scas
cmp
icebp
shrl
or
adc
fwait
aaa
jge
outsb
popf
rolb
leave
adcb
pop
push
and
addr16
js
iret
xor
out
stos
lcall
dec
xor
and
xor
roll
xor
mov
adc
int
mov
jmp
jmp
push
arpl
inc
out
out
mov
dec
xchg
mov
aas
aaa
mov
repz
add
outsl
jb
jg
push
adc
push
fs
mov
xor
test
das
push
sahf
mull
sarb
aad
jb
cs
add
mov
out
out
push
push
mov
pop
dec
dec
push
std
imul
arpl
fwait
xor
xchg
mov
cmp
orb
push
arpl
loope
cld
mov
sub
bound
inc
icebp
nop
das
ds
js
mov
xor
xor
mov
cmp
bnd
xor
fbstp
es
cli
ljmp
and
sbb
pop
std
add
cmc
sub
mov
mov
jg
test
cs
mov
jno
xor
mov
pop
and
jg
addl
inc
inc
and
mov
outsl
cmp
sbb
pusha
lcall
pushf
sub
fsubrl
jmp
mov
enter
imul
push
xchg
add
sbb
inc
pusha
add
fs
mov
jg
sahf
addl
in
jle
pop
andl
pop
sar
and
or
ljmp
test
in
cmp
into
movsb
mov
mov
rolb
sbb
adc
adc
cmp
dec
pop
stc
dec
js
cmp
jnp
out
xor
pop
mov
in
mov
jne
mov
clc
lcall
or
dec
sbb
lcall
movups
addr16
xchg
dec
sub
repz
jp
scas
into
insb
leave
lahf
cmc
sub
xchg
pop
and
pop
push
adc
nop
sahf
xchg
pop
inc
dec
insb
or
iret
push
push
popa
sub
or
in
inc
lret
jg
pusha
ret
xor
shlb
ret
sbb
jecxz
inc
cmpsl
add
rolb
add
dec
mov
inc
xor
fdivl
jge
inc
jmp
sub
xchg
sub
mov
adc
mov
mov
in
dec
data16
or
inc
repz
aas
jmp
sahf
mov
movsl
shll
shlb
lea
push
push
ret
mov
cmpl
dec
sbb
iret
call
lods
mov
add
addl
xorl
mov
inc
sub
inc
leave
shll
or
pop
sbb
inc
daa
arpl
ljmp
dec
mov
cld
or
dec
sbb
mov
adc
dec
cmpsl
xchg
or
and
xchg
or
jo
stc
es
inc
jnp
push
adc
add
inc
outsl
mov
mov
fwait
mov
mov
cmp
test
mov
bound
xlat
sbb
loope
stc
movsl
push
leave
jle
imul
fmul
ret
add
lods
and
mov
xchg
mov
insl
mov
shrl
popa
repz
push
ror
push
dec
cmp
popf
and
xlat
or
mov
ljmp
pop
mov
test
hlt
cmp
push
inc
popa
in
hlt
mov
and
inc
dec
imul
jg
push
jne
stos
scas
cmpsb
inc
daa
or
push
notl
aad
cmpsb
pop
enter
jecxz
mov
jno
mov
bound
xchg
rclb
and
lret
push
push
shlb
rcl
inc
mov
mov
push
xchg
jge
add
cwtl
mov
add
and
push
dec
mov
mov
adc
xor
mov
call
mov
mov
pop
inc
loopne
loop
jle
dec
jle
xor
or
and
sub
ficoml
arpl
push
xchg
mov
add
sub
orl
mov
adc
pop
pop
cmc
pop
mov
lock
mov
or
lahf
loope
xorl
sub
sub
adc
int3
je
icebp
pop
and
xchg
sti
jae
sahf
test
xor
out
xlat
lret
fisttps
hlt
cmp
and
mov
inc
push
loop
imul
and
fcmovnb
inc
in
test
outsl
and
add
pop
stos
xlat
mov
cwtl
push
mov
mov
sbb
push
cli
and
es
xor
cmp
jbe
mov
fnsave
out
pop
inc
imul
hlt
hlt
insb
loopne
in
test
mov
push
aam
cltd
addr16
mov
scas
xchg
lret
mov
jo
add
test
scas
in
vprotd
outsb
rorb
and
hlt
cmpsb
mov
sub
adc
sbb
cmpsb
out
and
subl
push
aam
add
pushf
mov
add
cmp
or
pop
aas
adc
jne
sarb
pop
ret
or
dec
jge
cwtl
mov
inc
jns
adc
sub
stos
pop
out
aad
push
xchg
lods
push
mov
sbb
dec
cmp
adcb
inc
aad
push
fucomi
jbe
mov
mov
clc
inc
mov
mov
es
mov
xchg
fcmovnu
sub
ret
lock
movsl
mov
aam
std
dec
fstpt
pop
xchg
jno
inc
mov
mov
int
jne
mov
repnz
adc
mov
pusha
xor
xor
cwtl
test
sbb
movsl
lods
jae
mov
xchg
pop
in
loopne
divps
bound
inc
jle
ja
add
ret
mov
fdecstp
outsb
push
fistl
jge
jae
cmp
push
or
ret
adcl
push
test
les
add
mov
sbb
loope
xchg
mov
pop
mov
fwait
loop
fs
adc
mov
aad
or
jl
test
and
stc
cwtl
adc
or
sub
mov
lret
mov
hlt
sub
cmpl
mov
ret
pop
lock
int3
arpl
out
cmp
fists
jb
sbb
ds
sub
faddl
jae
popa
cs
pushf
push
daa
insl
xchg
in
mov
cmc
mov
mov
aaa
mov
add
in
rcrl
inc
or
and
xor
mov
not
xchg
roll
fistpll
jge
mov
inc
xchg
testb
sub
pop
sub
mov
push
clc
imul
scas
mov
pop
in
pop
call
pop
jl
mov
or
data16
or
and
pushf
insl
fistps
data16
daa
stos
lds
inc
das
jmp
std
std
js
js
cltd
pop
clc
xor
jae
movsl
adc
xor
lret
notl
je
jne
dec
or
mov
mov
ljmp
scas
inc
test
out
ljmp
hlt
jmp
fsub
fs
sbb
in
pop
push
sub
jb
movsl
pop
mov
xchg
adc
push
xchg
cmp
sub
out
pop
and
mov
mov
enter
es
mov
mov
mov
push
loop
inc
add
dec
fmull
subb
leave
lods
leave
jns
cmpsb
pop
loop
lea
xchg
js
pusha
xchg
mov
mov
mov
hlt
mov
pop
cwtl
inc
cmpsl
or
jge
mov
nop
fstl
lods
jo
aaa
adc
addl
sbb
cmp
push
xchg
push
pop
or
inc
mov
mov
inc
jg
sahf
les
push
inc
ss
mov
push
jmp
and
dec
add
mov
push
sub
cli
ja
mov
rcrl
rolb
jp
test
cmpl
xchg
mov
ss
dec
pusha
pushf
jae
sub
in
jg
add
push
jge
repz
adc
dec
mov
cmp
aam
dec
fdivrp
idivb
ret
hlt
jnp
mov
xor
push
shlb
ret
and
sub
mov
mov
push
mov
and
mov
sarb
ds
mov
loope
rol
test
mov
cs
icebp
and
aaa
rcll
pusha
insb
mov
push
or
cmp
add
cs
popf
mov
or
lret
fcom
bound
loop
and
sub
sar
popa
xor
pop
pop
test
aaa
cmp
jmp
sub
mov
sub
pop
inc
mov
cmp
daa
popa
push
pop
fstp
outsl
jnp
lcall
add
mov
lods
rcl
and
dec
xchg
out
xor
das
and
incb
or
sbb
xor
addr16
jnp
mov
repz
rorb
lods
das
inc
shll
push
cmp
nop
or
lods
sarb
fldt
and
xor
ret
push
cmpl
push
ss
fwait
adc
lcall
sub
or
jno
fwait
push
frstor
push
cli
test
aam
pop
outsl
fcomps
adcl
inc
xor
dec
rcrb
test
cmp
jle
sbb
sub
jg
pop
push
movsb
or
add
imul
ja
pop
bound
cltd
push
mov
aad
out
nop
jne
mov
pop
out
std
push
mov
pop
out
adc
bound
cmp
add
in
push
cmp
xchg
mov
int3
xorb
jnp
into
scas
mov
in
mov
sub
lret
and
aas
enter
or
movsl
pop
mov
mov
icebp
andl
push
xor
mov
fcoms
jne
dec
cli
mov
push
repz
cmpsb
mov
jl
fidivs
enter
out
and
out
scas
out
mov
leave
arpl
sbb
jne
sar
jns
out
test
mov
rolb
fcomip
add
add
xchg
sbb
dec
gs
pop
or
add
jo
lods
mov
into
dec
cmp
test
cmpsl
inc
add
stos
pushf
mov
cmp
xor
js
rorb
jg
sub
ret
push
ret
cmp
aad
sub
xchg
cmp
add
hlt
xor
jo
jbe
adc
pop
jae
xor
leave
jns
xchg
clc
ret
xchg
mov
jmp
lods
mov
es
or
adc
out
dec
lea
les
fucom
sub
xchg
test
jae
mov
xchg
cltd
sbb
imul
pushf
je
mov
xor
mov
adc
push
sub
jle
mov
test
add
data16
pop
lods
lret
neg
fidivrl
in
or
addr16
mov
or
enter
and
callw
jmp
ljmp
outsl
mov
and
pop
push
dec
sub
xchg
xlat
dec
sbb
test
or
and
ja
or
daa
cltd
daa
lret
repz
dec
repz
lahf
cmpsl
mov
cmp
cltd
or
add
cmp
aam
dec
inc
xchg
push
out
xor
push
daa
and
sub
mov
mov
cmp
ret
or
mov
dec
xor
dec
enter
cmp
cmpsb
seta
iret
rorl
pop
inc
clc
sub
outsl
xchg
arpl
mov
imul
mov
out
cmpsb
js
fdivrp
add
leave
cmp
mov
mov
cld
fwait
cmpsl
test
mov
inc
dec
cs
add
adcb
pop
dec
sbb
add
xor
inc
or
outsl
cmp
dec
iret
mov
add
idiv
sbb
rorl
pusha
lea
xchg
mov
int3
xlat
mov
iret
xor
sub
inc
cs
xchg
or
pop
sbb
nop
flds
mov
mov
lret
lods
add
test
cs
out
ljmp
std
insl
mov
aam
mov
fcmovb
xlat
mov
pop
shl
repnz
cmp
icebp
cltd
aas
add
jns
testb
ljmp
adc
add
lret
sbb
lods
dec
jne
or
xchg
or
icebp
xchg
push
bound
pop
push
mov
aad
mov
imul
xor
ret
repz
or
pop
mov
lock
mov
xorb
cmp
lahf
cwtl
lret
pop
jo
pop
sub
mov
add
fimull
cmpsl
test
push
sbb
lahf
neg
sbb
loope
adc
add
int
xor
arpl
loop
pop
rcll
mov
fisubl
enter
and
jg
nop
loope
jns
cmp
pop
xlat
bound
xchg
xchg
js
or
pop
movsb
mov
pop
es
scas
mov
insb
repnz
xchg
cmc
mov
mov
iret
pop
inc
aas
shlb
out
mov
adc
fwait
cltd
dec
pop
cld
mov
or
ds
je
xchg
lods
int3
mov
out
jl
sbb
inc
jl
je
gs
ljmp
mov
sbb
int
adc
rclb
cmp
push
cmpsl
nop
lds
add
sub
pop
and
sbb
push
inc
cli
cmp
repnz
push
dec
mov
cmp
mov
pop
sti
repnz
and
inc
mov
mov
xchg
jp
bound
mov
mov
xchg
aas
shl
sbb
in
outsl
flds
sub
sbb
add
mov
or
mov
add
inc
push
cli
dec
xchg
push
test
sbb
fnsave
test
scas
loop
pushf
dec
bound
or
js
in
std
jecxz
pop
push
jg
xchg
dec
addr16
ljmp
jne
dec
sbb
jle
scas
dec
mov
fmull
lcall
cwtl
lahf
lods
adc
add
mov
cld
sbb
mov
sub
push
sbb
sub
out
inc
lods
mov
push
cmp
mov
sbb
sbb
into
fwait
adc
aas
mov
pop
push
cmpsl
and
cmp
cli
dec
aaa
gs
jl
imull
dec
dec
daa
push
lods
roll
enter
in
jg
or
ljmp
insb
adc
dec
dec
sahf
xchg
or
dec
aam
sbb
js
ret
scas
add
adc
and
mov
bound
adc
pop
fwait
pop
dec
and
int3
pop
int3
pop
jge
lcall
fimuls
inc
sub
imul
inc
iret
test
pop
add
adc
pop
sub
fwait
dec
fnstsw
bnd
push
aaa
fistpl
in
sub
rclb
mov
jno
pop
cmpsb
lea
cmp
pop
mulb
lock
adcb
cld
and
push
shlb
and
jmp
lcall
jns
fistps
fmull
fsubrl
jle
imul
pop
repz
push
pop
add
jge
arpl
dec
in
nop
mov
clc
xor
xchg
push
inc
ret
loopew
mov
cmp
or
imul
lods
xor
cmpsl
test
cld
add
add
xlat
push
das
and
sbb
mov
iret
lds
xchg
repz
negl
das
movsb
ds
shl
lret
cmp
adc
mov
jle
aaa
xlat
enter
mov
sarl
add
cltd
dec
js
out
add
and
nop
xchg
in
enter
fwait
shrb
or
mov
sbb
movsl
xchg
test
add
lcall
mov
mov
inc
inc
push
cltd
sbb
dec
leave
dec
fmuls
mov
sbb
push
cmpb
sarb
mov
dec
xchg
iret
out
lds
js
sbb
leave
xchg
fwait
shll
out
mov
pop
adc
bts
leave
xchg
push
arpl
jl
mov
sub
lahf
pusha
iret
jge
cld
xor
test
and
push
sbbl
push
stc
ljmp
fcmove
sub
icebp
mov
ds
mov
push
stos
imul
adc
into
adc
lcall
and
xor
sti
sarb
sbb
shll
and
enter
lods
in
push
mov
push
inc
xchg
pushf
mov
dec
sub
jl
sbb
js
mov
in
xor
shl
cld
xor
sti
pop
in
mov
mov
outsb
xor
aam
add
cld
mov
mov
std
push
xor
scas
push
aam
dec
int
or
add
mov
jmp
insl
mov
inc
push
xchg
loopne
mov
jb
in
inc
fbstp
das
scas
sti
dec
xchg
or
and
mov
pop
icebp
pop
inc
clc
lret
sbb
cmp
jle
mov
xchg
int3
movsl
cltd
mov
mov
pop
nop
push
insb
filds
mov
push
jmp
dec
sahf
rcrl
sbb
lods
and
in
mov
inc
sbb
push
mov
sahf
dec
cld
xchg
inc
mov
cltd
imulb
stos
jmp
xchg
cli
add
shr
push
loop
sahf
mov
test
inc
stos
in
sbb
leave
adc
mov
inc
adc
add
adc
adcb
inc
sbb
mov
stos
adc
test
cmp
jg
out
sbb
and
outsl
cmc
loopne
adc
add
jne
testb
fadd
nop
out
xor
in
das
add
xlat
es
popa
ja
enter
stos
stos
outsb
ds
cmpsb
dec
out
imul
sti
mov
add
jns
mov
arpl
imul
xor
xor
push
adc
dec
and
cmpl
mov
iret
data16
mov
mov
movsb
push
and
mov
sbb
arpl
into
push
pop
pop
pushl
js
xor
bound
loope
lcall
inc
dec
mov
or
push
imul
adc
push
mov
jp
arpl
fisubrs
cld
mov
sbb
or
cs
push
cmp
or
mov
pop
out
mov
inc
clc
pop
loop
dec
cmpsl
ljmp
adcl
push
mov
and
loopne
dec
gs
jno
cmc
mov
mov
jns
in
iret
mov
sbb
push
sahf
jae
shl
jo
lods
sbb
call
inc
outsb
jp
lahf
stc
mov
inc
lcall
mov
pop
pusha
cmpl
into
outsl
mov
ds
mov
xor
jb
psubb
jecxz
adc
lods
jmp
mov
cli
mov
mov
and
sub
insl
dec
cmp
add
ss
mov
lret
mov
dec
imul
cli
dec
or
stos
cmpsb
sbb
shll
cmpsl
sete
fists
movsb
sub
sbb
repnz
loop
aam
ret
push
pop
jecxz
push
addr16
lahf
inc
pop
fistl
cmp
addb
std
sarb
outsb
mov
xchg
lds
pop
cltd
into
inc
aaa
jno
adc
dec
dec
push
ret
rolb
enter
outsb
push
enter
les
pusha
sub
movsb
inc
mov
mov
aaa
jae
mov
dec
push
cmpsl
mov
mov
and
pop
push
cmpb
sub
jl
ja
xor
in
mov
xor
mov
push
sbbl
push
sub
mov
mov
shrb
fidivrs
mov
and
push
lock
mov
fwait
sbb
shll
dec
mov
inc
dec
sbb
mov
addl
outsl
and
and
pop
addr16
fwait
lret
cmp
imul
loop
mov
in
out
mov
mov
push
or
daa
dec
inc
je
xor
jecxz
popf
scas
movsb
outsb
lods
pop
enter
push
mov
sbb
lret
clc
icebp
mov
cwtl
fsubl
mov
push
into
adc
pop
or
push
fwait
push
cmp
imul
push
adc
jnp
loop
lods
fidivrs
push
movsb
add
sub
or
in
jno
mov
lret
jge
mov
or
add
lods
cmp
cmp
jge
xor
mov
add
repz
icebp
int3
inc
and
sbb
lods
gs
test
cmp
les
xchg
cwtl
pop
push
xchg
dec
sub
mov
or
jne
pop
and
cmp
sahf
daa
pop
cmp
fdivrs
mov
clc
mov
lret
xchg
shl
lock
mov
add
jo
mov
lock
xor
cmp
lods
xchg
lret
icebp
data16
push
ret
std
pop
push
cmp
mov
shll
test
cmp
push
dec
inc
push
cmpsb
adcb
int
push
ret
push
cltd
jl
jg
aaa
mov
insl
clc
or
jmp
ret
iret
iret
jnp
rcll
lahf
int
sbb
xchg
push
sbb
out
mov
rclb
test
rcr
push
cwtl
loopne
mov
adc
fiadds
dec
lret
out
push
lods
stos
adc
js
sbb
or
sbb
sub
push
fsubl
sbb
addr16
lret
adcb
xor
ret
sub
cltd
sbb
insl
repnz
repnz
or
xchg
bound
lcall
lret
mov
xchg
dec
std
mov
mov
jae
pop
cmp
push
es
mov
cmc
xor
in
cmp
scas
mov
fwait
pop
push
cmc
dec
mov
test
pop
insb
stc
xchg
test
aaa
insb
sbb
in
mov
jecxz
sbb
push
xchg
cmpsl
ja
call
aad
fs
dec
shrb
push
leave
clc
cmp
push
xor
dec
out
mov
sahf
xchg
sahf
loop
stos
sbb
adc
daa
xorb
pushf
out
dec
dec
scas
adc
jp
xorb
inc
fdivrp
fdiv
ficoms
pop
shlb
pop
dec
js
sub
lret
lret
push
sahf
into
mov
cs
fsubs
icebp
shrb
push
lds
jecxz
mov
nop
rcrl
inc
out
mov
loop
mov
jnp
push
cmp
dec
and
cltd
repz
mov
jo
shlb
stc
sti
jle
and
lret
and
js
dec
scas
repz
mov
rcr
push
movsl
mov
mov
mov
xchg
shlb
adc
out
pop
loopne
jb
xchg
in
jo
xor
or
or
sub
test
stc
or
jo
mov
ja
cld
insl
scas
jp
mov
add
or
mov
cmp
int
gs
xorl
push
push
push
inc
ficoms
pop
iret
mov
scas
insl
and
cmp
mov
outsb
ficomps
xchg
push
shrb
xor
popa
add
mov
in
mov
adc
in
lods
xor
ljmp
bound
rorb
xchg
scas
xchg
std
outsb
xor
inc
shll
in
dec
arpl
mov
sbb
jmp
dec
push
sahf
insb
adc
stos
push
out
sarl
mov
int3
bound
push
adc
sub
mov
dec
adc
pop
stc
xor
mov
and
dec
sub
pop
cwtl
mov
dec
pop
push
mov
sbb
and
subl
pop
fdivrs
mov
xor
gs
or
mov
lret
sahf
or
or
inc
xchg
lods
test
je
inc
stc
enter
lret
push
sbb
xor
xchg
push
mov
and
jbe
xorb
imul
mulb
insb
add
adc
adc
addl
cli
mov
add
out
mov
testb
mov
lahf
adc
or
mov
inc
dec
sbb
cmp
push
int3
push
cmp
jl
jno
fs
xchg
pop
mov
nop
into
mov
into
fldenv
mov
jmp
push
scas
jecxz
es
push
ret
jae
xchg
stos
scas
ds
rcl
adc
bound
adc
daa
fwait
mov
fiadds
xor
xor
or
insb
mov
mov
lret
pop
xor
pop
cwtl
in
test
mov
xchg
adc
xor
mov
daa
dec
push
add
adc
outsl
outsb
push
mov
sahf
xor
xchg
mov
aad
test
push
sub
data16
cmp
out
out
pop
mov
sub
js
mov
test
js
push
add
inc
cli
scas
or
sbb
in
test
scas
mov
test
xchg
stos
addb
lret
into
pop
sub
dec
xchg
je
or
sub
in
pushf
push
mov
xlat
stos
fwait
xchg
xor
jle
imul
xor
cwtl
xor
into
adc
addr16
into
addr16
daa
xchg
pop
stos
aaa
lret
jge
pop
dec
popf
fnstcw
in
loope
push
mov
rolb
test
dec
cmp
and
jge
ja
jle
and
or
dec
outsb
fimull
in
cmpb
jnp
imul
jg
inc
pop
scas
dec
cmp
jg
mov
sahf
inc
test
jb
rcrb
out
call
xchg
sbb
push
jb
cs
movsl
lret
xchg
or
xchg
clc
push
lods
push
imul
push
ret
fildll
sub
xor
insl
cmpsl
xlat
inc
push
stos
add
ja
movsb
push
cmp
push
cmpsl
mov
loope
rcrb
arpl
negb
lds
cmc
jge
sbb
inc
inc
enter
stc
or
ds
sbbl
mov
enter
cmp
nop
ljmp
cmpsb
push
ja
orb
jae
fistps
sub
mov
fistl
dec
pop
xlat
hlt
aas
addb
out
push
int3
aas
repnz
les
arpl
cwtl
jno
sub
pop
xchg
push
mov
lahf
lods
orb
jno
adc
dec
dec
sub
and
repz
xchg
icebp
arpl
mov
push
jnp
aas
dec
ljmp
int
rcl
imul
inc
xor
test
inc
cmp
daa
lods
jae
into
ljmp
jns
push
push
and
int
aam
pop
or
sbb
adc
adc
fimuls
pop
pop
stc
data16
mov
adc
es
data16
dec
aad
adc
inc
mov
dec
repnz
in
jecxz
inc
in
fwait
mov
addr16
add
imul
dec
shl
sbb
sub
sbb
pop
mov
fnstenv
adc
imul
pop
sbbl
push
sub
divb
and
or
test
sbb
and
lock
cmpsb
adc
inc
dec
out
inc
rcr
rorb
mov
and
mov
movb
in
daa
jg
pop
jmp
loope
push
or
js
cli
push
test
pop
sahf
and
pop
push
iret
xlat
dec
shlb
hlt
xchg
and
xor
fadds
mov
xor
cmpsl
enter
pop
xor
loope
ret
ljmp
scas
or
int
stos
dec
lret
sti
add
mov
mov
jns
xchg
out
fidivl
mov
insb
lret
ds
pop
push
xor
in
sub
jmp
rorl
std
les
mov
push
cltd
ds
rclb
sarl
sub
leave
inc
sbb
xor
xchg
mov
ror
mov
add
int
mov
arpl
sbb
mov
pop
inc
out
xchg
mov
xchg
lods
add
in
pop
jb
inc
sub
incb
or
push
pop
call
mov
test
call
and
leave
push
lods
aam
jle
mov
test
stos
aaa
push
cld
mov
data16
cli
in
call
xchg
out
insl
mov
cmp
in
lret
add
mov
inc
out
std
inc
pop
int
xchg
shrb
nop
and
mov
iret
jg
xor
xor
dec
sbb
loopne
idivl
ja
daa
mov
jmp
xchg
lahf
inc
iret
aas
test
inc
sub
mov
cmp
popa
popa
xorb
mov
aas
in
xchg
in
xlat
inc
jae
repz
ds
push
js
repnz
mov
lds
jle
dec
xlat
lods
cltd
fwait
sub
movsl
fdivr
sub
cmp
inc
out
out
pop
jmp
xor
cwtl
int
sbb
bound
adc
cltd
testb
cmc
cmc
repz
insl
mov
jl
xchg
les
and
mov
xorl
int3
mov
push
and
jg
mov
sarl
adc
or
dec
mov
pop
mov
pop
daa
leave
and
xchg
insl
lcall
lds
jae
fs
mov
inc
scas
adc
loopne
int3
add
adc
or
or
cmpb
or
sbb
in
fnstenv
dec
mov
aaa
jbe
incl
mov
and
cmpsb
jecxz
inc
jmp
add
sub
call
cmpsl
fldl
cmp
sti
ljmp
push
ret
ja
cmp
sbb
sub
test
dec
aas
pop
cltd
cltd
xchg
test
fidivrs
insl
cmp
inc
out
nop
add
stos
and
push
sahf
mov
test
call
loopne
add
aad
cmp
nop
pop
mov
mov
xchg
add
fistl
mov
pop
mov
cmpsb
mov
jp
or
jl
cmpsl
mov
pop
push
or
or
es
cmpsb
mov
imul
add
stos
jne
lcall
or
pusha
mov
or
leave
cwtl
imul
dec
out
test
movsl
jle
outsb
cwtl
inc
dec
sbb
fucomip
cmp
adc
adc
sbb
dec
sbb
inc
sub
hlt
call
mov
cltd
ds
negl
push
loop
inc
mov
lcall
jnp
xchg
jle
cmpsl
cmpsl
jnp
ret
xchg
cmp
repnz
scas
mov
jg
sarl
movsb
push
iret
push
sbbl
dec
mov
sub
pushf
mov
clc
xchg
and
out
jmp
pop
sbb
sub
push
aam
subb
sti
sbb
adc
lcall
pop
ss
mov
scas
daa
clc
mov
aad
movsl
and
loope
rcr
adc
push
xchg
xchg
dec
mov
mov
mov
jmp
les
sbbl
mov
mov
jno
je
out
cli
jae
lock
stos
arpl
cmpsl
dec
cmp
in
imul
cmc
xchg
add
js
lret
cmpsl
testl
jge
ja
xchg
sahf
pusha
add
mov
loop
xlat
xchg
jb
sbb
cmp
movsl
fdivrp
inc
stos
or
xchg
jno
xchg
mov
push
sub
lahf
pop
mov
sbb
stos
popf
pop
pop
xchg
sub
enter
test
push
dec
pusha
pop
out
les
cli
jb
fnstsw
lock
and
mov
ss
xor
pop
mov
mov
xchg
aam
xchg
lods
xor
data16
cmpsl
jp
push
adc
jg
lcall
jp
fnstenv
mov
xor
mov
divb
in
mov
dec
inc
jl
lea
push
out
cmp
std
inc
out
adc
inc
push
shlb
cmp
imul
cmp
ficomps
jo
out
push
test
add
push
lods
jb
inc
loope
sahf
test
pop
clc
pop
sbb
mov
fs
lahf
fimull
dec
xchg
rcrl
test
pusha
arpl
adc
mov
mov
jge
sub
imulb
push
call
push
jmp
add
xchg
nop
inc
jo
ja
movsb
ror
push
jg
and
rcll
fdivrl
add
ds
mov
int
stos
xchg
jno
mov
sbb
lret
jmp
xor
adc
sahf
inc
mov
out
fst
test
lcall
loopne
pop
popa
fisttpll
lods
add
dec
push
arpl
fldenv
adc
mov
mov
or
mov
inc
add
mov
mov
mov
rorl
mov
xor
jo
xchg
inc
push
in
dec
mov
cmc
pop
cmp
and
adc
pop
mov
int3
adc
push
or
lret
dec
and
push
aas
dec
fbstp
push
push
sarl
popf
scas
ss
lcall
orb
sti
rolb
jne
leave
sbb
cli
out
or
outsl
nop
jae
mov
es
fs
sbb
mov
dec
jmp
cmpl
jnp
mov
add
ds
enter
sub
jge
pop
push
stos
mov
jno
shrl
lds
and
xor
das
stos
mov
cld
iret
ffree
mov
or
fsubrs
orl
fs
pop
lock
mov
mov
xchg
int
movsl
mov
scas
mov
lcall
sub
push
adc
je
pop
dec
or
xchg
jmp
mov
or
daa
idivl
aad
sbb
fwait
popf
xchg
mov
sti
xor
sub
sub
dec
dec
call
inc
lock
mov
sub
out
cmp
mov
jmp
and
jp
adc
jns
out
pop
cld
das
daa
pop
mov
in
xor
stos
decl
ds
dec
cmp
inc
push
aad
movsl
daa
and
push
inc
in
sbbl
add
pushf
shlb
clc
cmpsb
sarl
pop
xlat
pop
mov
hlt
sub
aas
pusha
adc
cmp
stc
sub
daa
lods
push
or
cs
insb
adc
jl
xor
push
xor
xchg
std
inc
mov
rcr
stc
popf
pop
ret
frstor
bound
cmp
in
lcall
sahf
test
adc
popa
adc
mov
shll
jne
xchg
push
gs
insl
inc
dec
mov
inc
sbbb
cmc
rcrb
jmp
lcall
and
or
jnp
mov
dec
cmpsb
dec
push
imul
cmc
repz
dec
add
das
nop
jecxz
in
xor
in
jb
hlt
xchg
adc
cmc
out
shll
or
in
mov
js
das
int3
cmpsl
dec
inc
sub
lcall
pop
test
lahf
loop
and
enter
sub
pop
xchg
jbe
int
arpl
call
dec
icebp
adc
inc
and
in
test
jmp
push
pop
test
imul
add
xor
adc
pop
jns
pushf
push
outsl
scas
mov
andl
das
xchg
out
pop
xchg
mov
outsl
inc
pushf
push
mov
inc
aas
test
icebp
mov
stos
lock
and
push
in
sub
add
scas
insb
ljmp
stos
adc
dec
push
loopne
cmp
cli
cmp
sahf
ljmp
lcall
xchg
ja
fs
xchg
cli
icebp
bound
adc
lds
popa
int
mov
in
inc
jo
icebp
popa
jnp
ja
dec
add
cmp
insb
std
ds
in
hlt
fwait
push
or
push
negl
leave
icebp
gs
mov
jmp
sarl
mov
and
and
mov
fsubl
sbb
jge
xorl
pop
cmp
adc
jge
xchg
cmc
cmp
loopne
xchg
dec
sbb
push
adc
pop
ficoms
inc
or
negb
rclb
out
inc
enter
repnz
pop
lock
push
insb
cs
pop
sbb
inc
pop
lds
sbb
dec
test
inc
cmpsb
mov
mov
pop
and
add
xorb
or
shrb
mov
or
icebp
xchg
adc
imul
or
arpl
pop
jns
sbb
xor
out
cld
jmp
push
divb
adc
leave
dec
xor
or
xchg
inc
icebp
insb
cmp
gs
adc
pop
sub
loope
filds
and
jb
adc
sbb
sbb
outsl
repz
sti
sub
mov
sbb
out
push
pop
gs
into
jecxz
test
sarl
jbe
adc
mov
sbbl
xchg
adc
cmpsl
lahf
outsl
mov
jb
xor
das
inc
stc
adc
ficoms
aaa
mov
add
xchg
dec
jmp
insl
loope
int
cmp
imul
cli
and
lds
adc
pusha
loope
mov
gs
mov
in
inc
dec
lcall
cmc
and
sub
jb
sub
sub
stos
sub
sbb
cmp
rclb
xchg
inc
or
in
xor
test
add
pusha
nop
ja
inc
sbb
add
iret
mov
mov
jl
fwait
jnp
xlat
mov
xor
je
test
adc
mov
fwait
sbb
pop
push
pop
ss
js
subl
xchg
push
sbbb
pop
or
mov
jo
in
popa
push
cmp
inc
jae
and
inc
pop
in
imul
fstl
pop
dec
shrl
mov
je
in
xchg
mov
push
inc
xor
jb
cmc
jecxz
popl
cli
mov
fwait
lods
les
lds
ss
add
inc
sbb
jp
inc
outsl
jae
rcr
fdivp
adc
add
test
adc
sbb
dec
sub
and
adc
jno
sub
sti
pop
inc
cmp
push
mov
inc
mov
lret
sbb
in
xor
inc
sub
pop
lahf
xchg
movsl
imul
mov
outsl
mov
sbb
aad
in
fdivrl
sbb
push
push
pop
aas
aam
ret
dec
inc
xchg
fisttpl
xorl
pop
push
mov
ds
xchg
out
xchg
ljmp
push
mov
cs
sbb
mov
cmp
adc
sub
and
cmc
dec
xlat
dec
sbb
inc
push
jns
adc
jmp
xchg
and
daa
shr
adc
scas
push
pop
jns
fnsave
clc
pusha
das
pusha
fidivrl
mov
imul
push
lret
divb
rol
and
lea
enter
cmp
pop
jbe
pop
sub
pop
call
cli
inc
test
push
int3
fcoms
mov
push
mov
pop
ja
jmp
add
inc
sbb
and
mov
aad
cmp
push
xor
xchg
pop
push
pop
fs
cmp
setle
das
mov
inc
stc
sbb
bound
inc
sbb
mov
adc
jnp
stc
mov
mov
adc
mov
inc
pop
xor
or
dec
inc
lret
loope
out
cmc
aam
and
mov
js
push
mov
out
mov
iret
lea
add
xchg
or
lcall
pop
nop
je
xor
in
adc
mov
out
push
add
call
es
leave
scas
mov
fistpll
aas
pop
icebp
fidivrl
hlt
mov
mov
imul
mov
xchg
orl
in
pushf
sbb
daa
rcrb
mov
fwait
dec
daa
mov
jp
addr16
jnp
cli
insb
clc
or
cmc
jo
cmp
aam
in
sbb
mov
ret
scas
jne
in
add
testl
mov
add
mov
pushf
push
jnp
fsubrs
and
mov
add
shll
and
aad
rcrb
xor
mov
repz
in
xchg
fidivrl
push
mov
shll
cs
orps
lahf
hlt
pop
faddl
mov
push
jmp
inc
stos
leave
dec
ss
xor
pop
mov
xor
icebp
jl
cmp
int
adcl
loop
inc
shlb
cmpxchg
xchg
loope
aaa
pop
cwtl
xor
shlb
cltd
pop
dec
outsb
stos
jbe
sub
call
rcrb
iret
pusha
adc
repz
add
sti
rclb
test
sbb
mov
xorl
jle
in
or
aad
jp,pt
cltd
pop
popa
pop
adc
add
jbe
in
cmp
scas
sti
sub
cmp
dec
lahf
sbb
adc
movsb
xchg
lods
cmpsb
outsl
xor
addr16
fldcw
lock
xchg
jp
test
fidivrl
jge
test
dec
fstpt
mov
icebp
mov
daa
aam
sbb
idiv
out
imul
cwtl
ds
mov
xchg
cmp
mov
sahf
rclb
out
sbb
roll
bnd
add
inc
mov
cmp
scas
xor
mov
jge
sbbl
ror
loopne
push
loopne
xchg
ficomps
sbbl
sub
add
roll
inc
int
xor
in
xchg
ss
imull
xor
pop
pop
out
mov
test
mov
nop
cmp
jnp
push
add
je
popf
xchg
inc
mov
das
movsb
in
dec
dec
push
mov
xchg
insl
sti
xchg
cmp
push
xchg
mov
mov
adc
or
rcll
sub
jl
pop
and
lahf
mov
add
fistpl
pop
mov
iret
filds
or
push
leave
dec
push
sbb
fsubrs
push
out
mov
mov
cltd
sub
jae
ljmp
mov
ret
sbb
dec
test
pop
repz
mov
add
sub
lcall
arpl
inc
dec
inc
cmp
shlb
jnp
push
push
cld
into
or
mov
adcb
xor
sub
rol
add
push
sub
sub
test
dec
xor
inc
adc
fistps
mov
in
pop
xor
loopne
xor
jecxz
ret
or
rcl
lds
or
inc
pushf
push
pop
jns
stc
call
xchg
test
xlat
mov
popf
add
xlat
pop
ss
pavgw
dec
sbb
and
movsl
dec
and
fdivs
pop
loop
enter
xor
arpl
pop
adc
in
mov
inc
fsts
adc
inc
or
std
add
movsb
or
test
aam
or
stos
sbb
icebp
stos
pop
loopne
adc
outsl
lock
std
xchg
popf
out
cmp
in
or
mov
cmp
sub
hlt
aad
inc
orb
fstp
cmp
fmul
sub
sub
in
pusha
outsb
arpl
lea
dec
stc
mov
mov
xchg
cmpsb
cld
movsb
fs
add
mov
add
pop
fs
lock
xchg
mov
add
push
and
xchg
fmuls
int3
sub
popa
add
and
mov
test
test
adc
sbb
mov
ss
inc
cmp
shlb
add
lret
rep
outsb
lret
sbb
shr
dec
incb
mov
sbb
enter
push
shll
dec
imul
insl
adc
xor
mov
adc
push
sarl
or
enter
fdivr
push
jno
xor
push
aaa
jecxz
inc
dec
fbld
push
mov
icebp
enter
xlat
and
jl
leave
push
add
pop
push
dec
mov
mov
xchg
cmp
adc
sub
movsl
popa
shrb
test
sub
into
inc
sbb
xor
out
dec
lret
jno
or
lods
repz
add
xlat
icebp
inc
inc
std
aam
movsb
sahf
add
in
addr16
shlb
inc
mov
hlt
test
lcall
add
test
or
cwtl
shrd
jae
fs
cmp
loope
hlt
push
dec
gs
mov
jbe
shrl
fnstsw
sub
mov
punpckhwd
pop
sub
dec
push
xor
mov
loopne
and
das
ret
mov
and
or
shll
add
dec
popa
aaa
push
addr16
mov
push
mov
mov
push
push
mov
xor
sbb
mov
mov
pop
jne
je
test
or
xlat
shlb
sbb
sub
push
lds
xchg
xchg
enter
cmc
test
leave
ja
xchg
dec
idivb
mov
xchg
pop
jb
or
dec
or
dec
cs
jg
dec
mov
or
jg
mov
push
push
jae
cs
loope
xor
or
fcomip
push
popf
or
pop
movsl
push
add
mov
out
mov
popf
scas
insl
cmc
loopne
iret
mov
cmp
jp
add
test
imul
mov
mov
jecxz
repz
xor
cmpb
inc
test
scas
or
sti
test
mov
xorl
sbb
dec
and
fcoml
pushf
sub
insl
xchg
dec
xchg
push
rcpps
adc
fisttpll
insl
arpl
or
push
icebp
in
push
dec
push
mov
push
movsl
in
mov
and
cmp
in
xor
push
xlat
fists
mov
xor
incl
shrl
pop
lahf
dec
mov
stos
cmc
cmpsl
or
inc
dec
popa
or
mov
and
int
ljmp
loop
add
lahf
mov
cmpsl
mov
sbbl
ja
pop
into
dec
xor
pushf
add
inc
xchg
mov
sahf
and
mov
mov
jge
bound
jle
cmc
cmc
clc
xchg
outsl
pop
iret
rol
decl
outsb
cli
pop
cld
pop
push
js
out
xor
into
shlb
ret
xchg
cwtl
call
sbb
movsb
in
sbb
stos
jecxz
push
pop
jb
gs
sbb
dec
or
fistps
fidivrs
xlat
cmpb
dec
outsb
pop
jno
sub
popf
ja
clc
xlat
pop
mov
shrl
cmp
loope
dec
jb
and
ret
jge
imul
push
aad
xchg
into
mov
xchg
mov
mov
mov
les
mov
and
mov
sub
xchg
daa
jnp
outsl
insl
jmp
xchg
sahf
das
clc
rol
roll
sub
sbb
mov
jp
cmp
cmp
jnp
dec
and
push
xor
adc
xorb
popa
ret
shlb
jns
add
insl
xor
jo
inc
mov
inc
pop
dec
pop
stos
call
loop
pop
jmp
cmp
inc
fstps
rcr
push
adc
call
adc
into
sub
sbb
cs
fbld
pop
mov
out
fcomi
jmp
mov
shll
or
or
je
sbbb
push
jno,pt
mov
or
cmp
add
jg
push
stos
inc
adc
call
fcmovb
push
dec
mov
cmp
out
push
movsl
cmc
movsb
sbb
pusha
lea
std
or
int3
mov
cli
gs
push
add
test
mov
pop
mov
push
addr16
lret
out
fs
sbb
test
test
mov
gs
rcl
outsb
lea
out
jl
adc
adc
inc
outsl
xchg
scas
int3
jo
jb
adc
fiaddl
push
adc
out
mov
adc
aas
sbb
dec
cmp
xchg
and
add
je
add
dec
mov
icebp
in
inc
dec
or
add
jbe
jmp
sbb
arpl
xchg
mov
mov
pop
dec
push
inc
mov
pcmpgtw
inc
cmp
and
shlb
outsb
hlt
pop
pop
inc
mov
loope
stos
xor
or
adc
sbb
ret
or
outsb
jnp
xor
movsl
sbb
mov
pop
icebp
shrb
mov
or
adc
movl
sbb
outsb
push
dec
nop
dec
insb
xchg
mull
call
jecxz
call
sbbb
addr16
call
clc
int3
movsl
lcall
cmpsl
imul
aad
jecxz
add
cmp
das
mov
fists
or
ja
mov
dec
repnz
mov
clc
inc
xor
fstpt
daa
jl
add
push
pop
subl
mov
ja
das
pop
mov
push
mov
and
jae
add
iret
mov
adc
mov
jne
sub
jbe
sub
xchg
mov
mov
aad
push
in
mov
jo
in
mov
nop
mov
mov
pop
xchg
xchg
ljmp
cmp
loope
sbb
outsl
xor
and
sbb
icebp
sti
push
incl
adc
fs
out
cmc
xor
xor
or
jbe
inc
inc
cmc
dec
mov
jnp
into
and
jo,pn
roll
xchg
mov
xchg
arpl
mov
hlt
mov
out
or
push
add
xor
cwtl
pushf
loop
inc
fbstp
insb
sbbl
sbb
mov
je
cltd
sbb
test
sub
xor
insl
xchg
mov
push
push
enter
out
jne
mov
in
jmp
xor
sub
pop
sahf
adc
add
scas
cmp
cli
out
mov
test
sahf
jg
xchg
pop
xchg
or
dec
sbbl
inc
mov
iret
adc
das
mov
fldt
inc
and
in
inc
popa
add
mov
negl
leave
data16
sub
cmp
adc
aad
aaa
adc
push
sbb
cmp
cs
add
and
push
xor
lods
mov
iret
sbb
js
into
sbbb
jne
arpl
outsl
mov
dec
loope
jns
pop
xor
and
nop
jns
cs
das
inc
bound
adc
adc
sub
sub
loopne
fstpt
push
inc
out
rcll
mov
ret
leave
js
jae
mov
mov
add
pushf
nop
pop
pop
xchg
add
movsb
jmp
or
ljmp
sub
xor
mov
mov
or
stos
xor
mov
sub
cwtl
sbb
imul
mov
imul
jmp
sub
movsb
lret
push
pop
mov
dec
mov
shll
lods
xor
rcr
mov
shrb
mov
imul
mov
push
out
lcall
aad
mov
ljmp
lock
dec
mov
mov
pop
cmc
rorl
sbbl
js
pop
cmp
movsl
jno
mov
test
leave
mov
stc
std
pop
jne
jge
lds
nop
push
jmp
fimull
inc
xor
mov
lahf
jb
mov
jmp
clc
das
out
cmpl
inc
mov
out
test
adc
and
pop
xlat
js
add
jno
pop
sbbb
mov
push
movl
aam
shll
pop
outsl
fcomi
imul
mov
sub
aad
repnz
adc
mov
jp
test
repz
int
xor
cmp
rcr
sbb
inc
fbstp
pushf
and
jno
sbb
and
pop
insb
iret
fsqrt
loope
jmp
outsb
imul
in
xor
pop
inc
bound
jnp
pop
add
lahf
ret
lsl
jne
cmp
pop
mov
aaa
adc
jp
jge
addr16
dec
cmp
mov
inc
or
dec
aas
inc
xchg
mov
ret
cld
and
addb
lods
inc
pop
aaa
sti
sbb
test
es
imul
lahf
xlat
aad
dec
xor
popf
popf
cltd
fsubrl
stos
jmp
clc
inc
mov
je
scas
sub
and
dec
in
lret
loope
mov
repz
jnp
jbe
stos
push
ret
stos
xchg
mov
jecxz
aam
std
hlt
decb
icebp
mov
addr16
out
push
push
test
push
into
mov
xchg
fsubr
shl
sbb
jbe
adc
mov
pop
jp
mov
sub
lock
iret
and
stc
inc
insb
jp
adc
js
test
push
xor
dec
imul
mov
lds
stos
icebp
pop
test
mov
adc
xchg
movsl
jle
popa
push
xor
jle
sbb
mov
sbb
mov
enter
cmp
imul
aas
cmp
mov
mov
lock
jecxz
movsl
cmp
ds
mov
fwait
push
das
jle
ss
les
popf
inc
push
inc
stos
sbb
jg
fidivrs
jns
push
dec
cmpsl
fwait
mov
xchg
mov
ficoms
mov
mov
pusha
enter
out
dec
and
sbbb
pop
adc
dec
sbb
cmp
push
xor
cmp
jecxz
cmp
sbb
ds
outsl
sub
ret
add
ret
xorb
cs
into
push
adc
sbb
pop
pusha
jo
fsubrs
xchg
ljmp
lock
cmp
sbb
movsb
mov
movsl
and
pop
cltd
bound
jmp
and
mov
cmp
pop
scas
cmp
out
inc
xchg
sub
jnp
jae
push
sbb
dec
lcall
stos
mov
mov
jmp
mov
repz
add
sbb
jl
mov
jmp
jl
lret
lret
or
sub
inc
mov
orb
and
arpl
cmp
lds
fcoml
sbb
pop
dec
fwait
mov
loop
xor
aas
and
outsl
jge
arpl
sarl
int3
jnp
cwtl
lock
xor
inc
mov
mov
xchg
inc
and
xor
add
cmp
mov
push
cmpsl
dec
lods
stc
mov
sahf
or
sub
repz
jg
inc
jmp
add
or
jb
jb
sbb
cmc
sbb
jp
sub
imul
sbb
jnp
sbb
sbb
mov
unpckhps
and
pop
icebp
cmpsl
nop
inc
pop
add
sbb
sti
out
idivl
les
lcall
cwtl
into
movsb
pop
mov
push
xchg
push
outsl
repz
add
mov
push
adc
xor
aam
imul
xchg
jae
nop
outsb
aaa
mov
adc
push
dec
sub
xchg
rorl
out
je
aas
cmp
sub
cmp
sub
inc
lcall
or
cwtl
pop
jmp
fsubrs
jb
aas
mov
fdivrp
sbbb
cmpsb
outsl
aad
jae
test
cmp
jge
inc
jecxz
cmpsb
sbb
cs
pop
xchg
inc
mov
mov
push
adc
dec
inc
js
frstor
addr16
sub
xor
pop
aaa
in
cmp
and
shrl
fisttpl
fcom
dec
jns
shl
xor
out
jle
cmpsb
outsb
xchg
gs
enter
mov
adc
jg
lahf
or
mov
repnz
jge
addr16
dec
xchg
adc
and
and
sub
test
sbb
sbb
jecxz
jp
ret
inc
and
jmp
push
jp
or
das
cmpb
lret
aam
jns
rcl
dec
add
cli
pop
dec
sbb
shlb
cmpsb
or
imul
jo
and
hlt
push
jae
les
scas
sbb
out
and
push
pop
jp
loope
lds
popf
addr16
inc
xchg
ds
hlt
push
push
repnz
int
nop
imull
mov
mov
lods
or
leave
lods
sub
sbb
shrb
and
test
xor
xchg
movsb
ficoms
pop
js
inc
adc
je
xor
imul
movsb
push
inc
cmpsl
les
in
push
call
gs
sbb
push
sbb
or
cmpsb
jmp
push
xor
out
xchg
pop
jno
pop
mov
test
mov
repnz
out
js
jmp
pop
gs
inc
lods
nop
shrl
aam
nop
mov
cmp
xchg
xor
xchg
test
arpl
mov
sub
jo
pusha
mov
push
xchg
sbb
cmp
pop
in
ja
mov
pop
clc
sahf
sahf
inc
dec
sub
ret
push
jecxz
push
sarb
add
imul
jb
xchg
mov
inc
dec
cli
imulb
add
xor
inc
cmp
push
or
xor
add
popf
rorl
call
xor
out
imul
cltd
test
adc
fcompl
mov
fsub
data16
dec
stos
mov
or
mov
lret
jg
notl
fdivrp
insb
pop
pop
lods
in
inc
fadds
sbb
stos
test
scas
std
subb
sub
ja
pop
lock
or
push
pop
test
imul
sbb
cmp
mov
adc
xchg
sarl
pop
dec
cmp
icebp
loope
in
dec
xor
and
bound
je
mov
sbb
fbld
inc
orb
cli
add
mov
xchg
mov
and
jnp
imul
or
adc
gs
ret
sub
ja
pop
or
sbb
repz
jl
cmp
xchg
cmp
dec
mov
mov
dec
jg
mov
outsb
cmp
fstps
iret
lods
test
jo
mov
ljmp
pop
push
int
pop
dec
movsl
shll
adc
int
xor
push
xchg
bound
je
xchg
sbb
and
mov
pop
inc
jg
insb
xchg
mov
les
mov
mov
lods
mov
hlt
je
jnp
add
jo
xlat
jo
movsb
aam
pop
es
push
mov
out
xlat
pop
mov
add
ret
pushf
sti
std
cmc
mov
clc
pusha
xchg
jecxz
mov
int
fisttpl
xchg
shll
pop
push
push
inc
xor
les
icebp
jb
das
adc
xorb
fs
pusha
in
mov
sarl
shr
jp
cmp
jg
sbbl
xchg
add
fldt
aam
cmp
hlt
xchg
mov
sbb
shl
imul
and
adc
sbb
mov
push
pop
orl
out
xchg
push
push
jo
pop
add
lods
add
and
lds
jmp
roll
pusha
sbb
pushf
xchg
jbe
mov
push
xor
mov
or
mov
jbe
in
and
stos
xlat
or
jb
orb
mov
mov
jnp
fstpt
pushf
xor
imulb
mov
push
popa
bound
push
xor
outsb
mov
dec
lcall
mov
jns
daa
xor
iret
pop
leave
xor
add
sbb
jno
gs
negl
das
fcoms
addl
test
sarl
push
jg
scas
mov
push
inc
mov
xchg
sub
cwtl
pop
dec
add
dec
fnop
inc
xchg
xlat
cli
gs
sub
mov
adc
mov
pop
cmp
clc
inc
mov
scas
je
dec
scas
cltd
inc
notl
or
scas
mov
les
lods
jp
adc
aad
insl
sahf
mov
aam
push
movsl
dec
insb
add
cld
xchg
inc
call
stos
dec
mov
lcall
adc
mov
mov
jl
sub
bound
loopne
cltd
mov
xchg
sbb
xchg
xchg
jecxz
jnp
in
lcall
fists
xchg
jno
popl
std
mov
sbb
pusha
icebp
pop
xchg
xor
movsl
rcrl
fldt
insb
aad
out
mov
dec
xchg
test
inc
xchg
addr16
into
push
xor
mov
imul
cld
add
stos
les
mov
lahf
pop
and
xchg
dec
jp
mov
cmp
pop
iret
aam
into
push
pop
pop
push
mov
cs
das
ret
inc
fbstp
inc
ljmp
pop
stc
in
xchg
mov
mov
out
push
mov
push
addr16
dec
data16
xor
cmc
lcall
jmp
inc
ljmp
xor
mov
lods
je
dec
shll
aas
mov
ja
mov
cwtl
std
push
call
sub
test
aas
push
ret
ret
popa
cli
sbb
xor
outsb
ljmp
mov
in
jbe
cmpsl
aad
adc
add
sbb
pop
shrl
xchg
mov
mov
aas
repnz
sbb
out
dec
mov
adc
in
outsb
adc
and
nop
add
out
lock
scas
test
je
sarl
mov
rcl
rcrl
jge
xlat
mov
jnp
sub
out
sahf
pop
or
jg
push
inc
sbb
mov
inc
cli
es
mov
in
movsb
jae
std
mov
add
jge
insb
ret
mov
xlat
popa
and
dec
cmp
std
and
ljmp
pop
inc
cmp
push
dec
xor
pop
xchg
cmp
das
lds
xchg
mov
mov
decl
flds
notl
cli
arpl
je
test
adc
cltd
popf
jl
jno
xor
fcompl
adc
xor
leave
movsl
enter
or
cmpsb
int
insb
push
sbb
in
jle
fisubrl
push
mov
push
ret
jg
jbe
outsl
sti
loopne
into
and
in
xchg
cmpsl
push
sub
mov
adc
mov
fistpl
xlat
jecxz
mov
cmc
mov
push
les
push
dec
or
cmp
xor
dec
movsb
imul
rorb
xor
popa
sbb
andb
ds
cmp
jo
jge
push
out
cmc
in
pop
ds
sbb
jae
shl
repnz
push
push
pop
xorb
sahf
movswl
or
jns
sbb
add
pop
lea
mov
nop
xor
sarb
rorl
fnstcw
aam
icebp
stos
sahf
push
add
dec
mov
dec
push
mov
sub
inc
xchg
test
mov
negb
pop
out
stos
xchg
xor
hlt
sbb
imulb
shlb
push
jge
push
mov
or
lea
push
cmp
add
mov
sub
mov
fsubrl
cs
mov
andb
out
insl
scas
idivb
jle
xchg
push
xor
xor
fistps
sub
dec
xchg
pop
into
inc
xchg
int3
xchg
sub
fwait
cmc
push
cmp
sbb
xchg
pop
shrl
orb
add
pushf
dec
repz
out
mov
outsl
int3
dec
mov
fistpl
xchg
ljmp
mov
test
and
aad
mov
pop
enter
movsl
test
mov
shll
adc
cmp
xchg
jecxz
xor
lret
push
xor
jae
cs
xor
out
dec
imul
lcall
pop
jne
outsl
adc
bound
stos
push
mov
jle
data16
out
mov
xor
adc
jle
mov
jno
and
push
mov
test
out
lods
cltd
jae
pop
iret
push
xor
sarb
mov
sub
mov
push
add
jl
push
addr16
int
push
cltd
shrb
rcrl
lahf
repz
int3
fmulp
bound
popa
cmc
hlt
push
dec
in
push
cmp
mov
sbb
inc
pop
imul
lock
aaa
xchg
pop
cwtl
inc
jl
push
sti
pop
pop
sbb
mov
cmp
movsb
sub
and
pop
xchg
lcall
and
fldt
addr16
and
fmuls
add
cli
in
enter
ret
mov
xor
lods
sub
push
or
xor
cmp
cmpsb
adc
int3
imul
mov
xor
cltd
icebp
hlt
jl
mov
icebp
into
jp
add
out
pop
lret
push
dec
mov
adc
and
stos
jae
sbb
test
es
arpl
or
icebp
insb
dec
pop
mov
insb
cmpsb
push
notb
xor
mov
loope
push
movsb
or
pusha
add
test
jbe
or
xor
dec
pop
sub
ljmp
xchg
stos
not
mov
inc
sub
mov
add
adc
lds
imul
jno
xor
addb
call
pop
push
adc
push
sbb
into
mov
jecxz
test
adc
pop
jmp
mov
mov
mov
xor
push
repz
in
loope
ds
and
lods
das
or
mov
aas
sarl
add
jg
mov
rcrl
nop
fldcw
xchg
jg
pop
mov
mov
add
lcall
cmpsb
mov
rcl
shll
and
lret
push
fsubs
lock
pop
or
call
push
fwait
mov
fwait
stos
adc
mov
mov
push
mov
in
sbb
jo
clc
push
cmpsb
mov
test
adc
cltd
mov
dec
adc
or
repz
mov
sub
repnz
pop
and
aam
xchg
mov
cmp
jg
mov
out
sbb
dec
mov
test
pop
jnp
xor
push
rorl
add
fidivl
mov
sarl
gs
gs
enter
ds
movsb
xchg
lock
movsb
mov
add
add
ja
pop
adc
mov
xor
jl
cmp
fcompl
in
push
adc
jge
cmp
dec
mov
and
jge
lock
fisttpll
xlat
push
mov
add
jecxz
xor
push
iret
mov
dec
mov
cmpsb
mov
add
and
xchg
insb
pop
mov
cmc
adc
in
fst
adcb
stc
xchg
lcall
out
gs
shl
aas
dec
retw
inc
mov
rcl
fwait
rcl
xor
dec
mov
adc
mov
nop
mov
into
add
std
ss
lret
popf
inc
mov
lcall
sbb
mov
icebp
mov
adc
out
popf
clc
and
lret
stc
out
sbb
push
or
sub
jns
out
fisubl
movsl
nop
loopne
pop
mov
addb
jmp
mov
ljmp
lds
out
lock
mov
sub
rorb
out
mov
push
jge
xchg
inc
jmp
mov
inc
adc
ds
cli
jl
sub
mov
dec
and
fcoms
mov
pop
sti
ret
add
xchg
push
xchg
mov
loop
cmpsl
ss
inc
fst
std
bound
add
mov
bound
pop
shl
add
sarl
mov
nop
outsb
cmp
jbe
pop
sbb
mov
dec
cwtl
lock
cmpsl
ret
popa
xlat
loop
movsl
jmp
sub
adc
sub
outsb
hlt
outsb
inc
or
xor
jmp
cwtl
pop
in
pop
in
pop
xor
adc
adc
je
xchg
xchg
insb
movsb
jg
xchg
test
push
sahf
sub
adc
arpl
and
pop
mov
loope
in
jle
scas
cmp
mov
outsb
pop
adc
roll
or
mov
or
shr
std
daa
in
adc
jno
cmp
popa
cmp
test
inc
cmp
pop
jae
sub
in
sbb
sarb
jl
imul
pop
ds
loope
outsl
jo
xor
stos
push
enter
inc
dec
cld
stc
pop
cmp
pusha
push
cmp
sarl
sbb
sbb
inc
and
cltd
cs
push
xchg
int
fdivs
enter
lods
xor
mov
pusha
insl
cmp
cltd
inc
cli
pop
ret
mov
movsb
dec
add
sarl
or
cld
mov
mov
xchg
cli
mov
insl
imul
cmp
mov
aas
enter
pop
rol
hlt
cwtl
sub
sub
jl
xlat
pop
add
inc
lds
jge
push
mov
adc
mov
loopne
lods
not
sub
ds
and
fwait
cltd
scas
out
outsl
jbe
clc
popf
push
rcll
shrl
lea
pop
hlt
fwait
adc
arpl
cmp
cltd
aam
cmpsl
sbb
negb
jge
in
pop
fldt
aad
dec
mov
xchg
stos
mov
outsb
nop
pop
lods
push
ret
enter
scas
rcrb
push
lock
jbe
mov
out
jns
es
add
or
jae
or
mov
ljmp
add
insl
sbb
mov
sbb
adc
mov
ja
xchg
xchg
xchg
sub
cmc
or
nop
dec
push
jno
pop
or
sub
xchg
jge
push
nop
popa
and
fnstcw
lret
dec
enter
iret
mov
ja
add
out
mov
stc
xor
cwtl
neg
add
dec
push
mov
test
dec
pusha
sarb
and
fcomip
mov
push
idiv
add
xor
fbld
push
adc
sbb
leave
cmp
pop
lods
daa
cld
dec
and
popa
cmp
pop
mov
std
or
pop
call
std
adc
into
jl
push
add
lret
out
repnz
cld
pop
cmp
jmp
test
aam
jl
lret
dec
jmp
mov
sub
jae
or
xchg
and
push
imul
adc
dec
adc
add
push
jl
add
jge
mov
enter
or
ljmp
and
xchg
jmp
aaa
es
into
push
shrb
scas
and
or
insb
sbb
ds
mov
sbb
push
mov
enter
adc
xchg
in
jne
cs
rcl
sti
cld
lret
mov
or
pushf
mov
jb
icebp
scas
popf
xor
cmp
and
sub
int3
xchg
mov
jl
adcl
lock
or
out
jne
dec
or
inc
clc
mov
push
cmp
in
imul
cmp
adc
pop
pop
jbe
mov
rorb
xchg
jb
sub
push
enter
out
ret
push
pop
dec
inc
mov
lcall
cltd
pop
sub
frstor
sub
jno
mov
aas
mov
cmp
ret
movsb
xchg
mov
push
rolb
stos
mov
pushf
popf
mov
push
and
and
sub
pop
xchg
cmp
sub
adc
cwtl
les
call
aam
cmpsl
ret
mov
loopne
test
ljmp
jle
orb
shrl
xor
pop
roll
dec
lock
or
insl
mov
or
add
adc
jno
les
enter
insb
jbe
or
addr16
jb
or
adc
clc
lahf
adc
pop
fldt
adc
clc
lcall
call
mov
shl
frstor
dec
inc
pop
mov
mov
mov
jle
xchg
mov
and
icebp
cmp
push
and
and
xchg
clc
add
imull
dec
xchg
add
int3
int3
push
test
and
int
push
fistl
jo
pushf
xchg
dec
xorl
pop
scas
mov
loop
fdivs
xor
push
mov
rcrb
pop
cltd
movsb
hlt
fadds
movsl
pop
int
insl
cltd
xchg
xor
testl
mov
mov
addb
shll
mov
cmp
xor
lock
cmc
aaa
ljmp
loop
add
xlat
mov
push
int
and
sub
ds
inc
lret
jp
pop
popf
mov
imul
daa
sbbl
cmpsb
jl
jecxz
mov
pop
mov
mov
sbb
push
push
dec
lahf
cmpsb
push
test
ds
sahf
pushf
cmp
inc
sbb
mov
arpl
sahf
mov
lock
and
mov
cld
pop
dec
mov
dec
in
daa
add
push
xlat
inc
and
sti
lahf
push
xor
add
add
iret
insl
inc
sbb
clc
cwtl
mov
insl
aam
ljmp
and
add
in
es
fsub
xchg
jno
imull
sub
dec
add
hlt
xor
fidivs
orb
loope
scas
jge
jmp
pop
or
adc
out
movsb
dec
into
jl
push
iret
and
or
fs
movsb
push
nop
add
cmc
pop
mov
xlat
jg
or
jno
bound
mov
pop
xchg
out
cmp
xchg
orl
orl
dec
loop
inc
push
mov
outsl
sahf
nop
loopne
incb
adc
push
insb
push
jg
lock
es
cs
mov
sbb
cmp
inc
ja
and
inc
dec
call
cmpsb
or
and
into
ss
inc
stos
cmp
sbb
sbb
fcoms
cmpsl
nop
shrl
push
jge
adc
lahf
dec
jmp
sbb
or
std
mov
mov
out
cld
push
mov
pop
mov
in
rorb
push
push
movl
sbb
ja
cwtl
pop
sub
iret
movsl
mov
jg
jno
pop
and
or
sbb
jl
leave
xor
add
pop
loope
jae
outsb
add
fsubs
call
outsb
aam
inc
and
movsl
dec
scas
push
push
jecxz
ljmp
pop
sti
rcll
aaa
popf
leave
int3
outsb
mov
insl
aaa
sub
xor
xor
pop
fdivr
inc
dec
data16
ret
xor
adc
xchg
push
cmpsb
jo
mov
mov
jbe
cltd
adc
sbb
popf
in
pop
cmp
add
das
jns
test
mov
jo
xchg
dec
push
jnp
mov
inc
outsl
cld
cmpsl
subb
loop
aad
inc
pop
std
mov
xorb
add
mov
int3
cmp
leave
fs
lods
xchg
cmpsb
and
lea
or
out
clc
enter
outsl
xor
add
hlt
ret
shl
add
add
push
testl
push
mov
dec
jnp
scas
jge
jb
repz
stc
cmp
jl
add
lahf
push
sub
sbb
loop
and
dec
or
cmpsb
out
dec
cmp
mov
xchg
cmc
andb
inc
mov
fidivrl
sub
lcall
fcomps
lods
cmp
push
jae
addr16
push
cmp
shll
pop
pop
cmp
sbb
or
call
lock
xchg
je
dec
pop
pop
mov
pop
out
or
aad
enter
push
fwait
fs
shlb
sub
pop
movsl
xor
xor
in
jg
mov
sbb
jge
and
lods
js
push
fmull
mov
movsl
adc
in
aas
sub
xchg
bound
mov
das
clc
add
lahf
sti
pusha
fwait
jns
lock
inc
fadds
fs
scas
xchg
or
or
ret
mov
jno
xchg
pushf
inc
testl
std
imul
or
js
sub
lock
xchg
nop
inc
in
xchg
shr
inc
sub
loope
lods
mov
popa
mov
dec
sbb
mov
dec
sub
pop
sahf
in
xchg
or
lret
cmp
add
add
or
stos
push
xlat
sbbb
adc
fildl
call
cmp
cltd
aaa
or
xor
aam
pop
sar
mov
scas
and
cmp
mov
mov
add
ret
xchg
adc
cltd
mov
mov
addl
cmp
lea
dec
lahf
clc
and
jg
mov
aam
jb
popa
lock
push
test
enter
scas
jmp
jb
mov
leave
fisubrl
out
mov
sbb
and
jb
mov
sub
xchg
ret
xchg
call
notl
and
out
xor
sub
inc
hlt
mov
push
fcmovnb
dec
cld
lock
popl
popf
pop
push
inc
ja
ret
inc
xchg
pop
and
bound
mov
mov
jae
jnp
pop
push
shlb
ljmp
sahf
leave
pop
loope
js
and
scas
sbbb
and
icebp
sarb
sub
jmp
clc
inc
adcb
xchg
pusha
cmp
fnstcw
dec
incl
in
mov
cmpsb
scas
pop
sbb
or
sahf
jb
sbb
test
ss
icebp
mov
sar
dec
jle
and
adc
push
scas
lds
rcrl
sub
xor
outsl
test
mov
and
and
cmp
pop
or
pop
in
mov
psubusw
adc
fmull
ret
jbe
sub
or
leave
sub
ret
jmp
mov
cmpsl
fisubs
mov
add
cmp
push
and
sub
xchg
stc
mov
test
jnp
addl
add
xor
inc
inc
add
jge
inc
xchg
repnz
inc
and
sahf
ret
ljmp
xchg
sbb
xchg
push
mov
shl
in
xchg
std
rorb
mov
fidivrl
or
pop
pop
lds
or
inc
add
lods
sub
pop
inc
cli
jle
and
push
in
xor
icebp
hlt
xchg
cmp
cmp
xor
ja
insb
xor
call
stc
fimuls
or
inc
pusha
pop
fstps
in
inc
mov
jae
mov
cmp
in
leave
pop
push
dec
fidivrs
mov
dec
iret
sbb
push
fnstsw
cmp
mov
fimuls
pop
mov
ja
lret
and
movsb
jl
rcl
movsl
es
ret
inc
movsl
cmp
jp
in
sub
aaa
push
push
add
shrb
or
leave
shll
push
cmp
std
mov
cmpsb
push
sahf
push
xchg
jg
les
lods
lea
data16
push
jecxz
dec
cmp
xchg
lods
pop
mov
sbb
xor
pop
mov
dec
in
push
inc
rcrb
repz
cmpsl
xlat
xchg
jp
add
mov
aam
mov
test
adc
in
rolb
ror
popf
mov
test
fadd
xor
jnp
xchg
jge
xor
mov
jno
paddw
jg
cmc
sub
jge
mov
jae
or
lahf
xchg
movsl
insl
pop
cmpb
ljmp
je
sbb
dec
aam
lret
inc
push
xchg
cli
jmp
inc
lods
jecxz
aad
stos
xchg
jo
jnp
pop
mov
fbld
inc
sahf
fs
mov
dec
add
pop
cmp
cmc
pop
inc
xchg
mov
mov
imul
push
les
ss
stos
dec
mov
push
mov
sub
xchg
and
push
sbbb
mov
vxorpd
outsl
mov
mov
sbb
lds
data16
sbb
loope
adc
xor
repz
arpl
sbb
cmpsb
cmc
popf
jg
imul
aad
push
pop
mov
mov
dec
jne
cmpsb
fxch
inc
pop
dec
fcomps
jbe
cwtl
add
fstpt
xor
push
mov
push
inc
shl
jno
insl
push
dec
insb
stos
xchg
lock
dec
fwait
sbb
call
cltd
je
dec
fists
push
pop
fimuls
sub
mov
int
push
aad
ljmp
inc
mov
call
fmulp
mov
mov
xchg
int3
mov
int
fstl
sti
mov
jae
gs
fstps
xor
fimull
jle
pusha
insl
pop
jbe
pop
lock
push
lds
lock
movsl
ds
or
fscale
js
imul
mov
insb
jae
enter
inc
mov
or
xchg
xchg
imul
lret
jl
dec
icebp
xor
xlat
jge
sahf
in
xchg
lods
pop
adc
mov
and
in
or
xor
or
xchg
out
jb
adc
call
stos
lahf
or
enter
iret
cwtl
inc
mov
sub
je
pop
sbb
cs
jae
fmul
and
mov
jne
vcvtdq2ps
int3
xchg
xchg
xor
mov
ljmp
out
mov
cwtl
pop
xchg
sbb
movsl
fldt
insl
or
lret
aas
inc
stc
stos
imul
xchg
mov
sub
cwtl
inc
mov
mov
cmp
jg
dec
or
inc
sbb
fsts
mov
cmp
push
xor
fbld
int
movsb
sbb
push
jge
xchg
ret
js
imul
push
and
jmp
popf
fldcw
or
xor
cmpsb
push
pusha
mov
xor
je
lret
aad
stc
arpl
sub
fistpl
cmp
jns
push
mov
test
jecxz
je
jnp
js
xchg
sub
subb
loop
mov
or
pop
add
adc
test
movsb
dec
mov
pusha
xlat
jb
fiaddl
repz
fmul
pop
push
push
sub
enter
xchg
xchg
sbb
mov
pop
ss
mov
ja
dec
sub
jecxz,pn
test
negb
andl
lea
add
push
xor
clc
mov
and
in
add
fdivs
adc
push
dec
mov
or
cmp
jno
enter
add
popa
shlb
dec
jns
jbe
lds
xorl
imul
jno
sub
inc
xchg
push
ds
sbb
dec
pusha
mov
icebp
lret
add
and
and
fld
xchg
loopne
out
and
and
sub
mov
sub
es
push
faddl
jae
xor
mov
sub
mov
push
push
lds
call
outsl
push
push
outsl
bound
mov
in
xor
mov
jl
testl
daa
and
repz
mov
outsl
je
ja
test
mov
push
jmp
mov
lret
leave
mov
lahf
mov
pushf
xlat
das
jns
imul
xor
sub
sub
push
mov
stos
je
cmpsl
dec
js
mov
sub
sbb
sub
int
int
mov
fs
fisttpl
gs
lret
mov
outsl
out
fmull
in
xor
cmc
shll
dec
in
adc
pop
add
imul
adc
xchg
lret
push
pusha
jmp
sbb
mov
gs
dec
mov
sub
lods
fmuls
shrb
out
fwait
lods
pop
aas
loopne
mov
mov
aam
push
mov
fsubrl
jb
mov
cmpsl
sub
push
lret
jbe
repz
jle
cmpsl
inc
loopne
dec
sbb
je
mov
lock
fnstenv
cmp
add
xor
xor
sub
bound
or
mov
dec
shrb
pop
cwtl
jmp
push
movsl
inc
dec
jl
out
aaa
adc
fmuls
gs
jmp
sbb
mov
mov
cwtl
aam
out
stc
orl
pop
hlt
jnp
or
jl
bound
xor
jmp
stos
pop
fnsave
mov
or
jle
jo
push
fistps
cld
and
dec
cmpsl
xor
pop
ret
cmpsl
inc
fcoms
jl
imul
test
iret
add
outsl
mov
test
or
jecxz
adc
cmp
push
mov
jp
cmp
jb
int
das
pop
dec
mov
push
es
dec
adc
mov
testb
and
mov
fstl
fcmovbe
ret
aam
lahf
loope
push
mov
and
nop
lock
lea
rcr
lods
out
std
inc
negb
addb
js
xchg
jo
or
outsl
or
scas
adc
insl
sbb
adc
cltd
mov
xchg
cmp
sub
pop
push
imul
lret
sti
add
xchg
jnp
cmpsl
ljmp
fdivrl
xor
fucomip
or
pop
arpl
rdmsr
add
stos
fcmovb
pushf
movsl
movsl
sub
mov
sub
jmp
imul
test
frstor
sbb
lret
lret
sbb
pop
scas
decl
mov
jle
jns
mov
std
gs
push
mov
mov
xchg
dec
hlt
int3
dec
mov
cs
add
jbe
jle
dec
and
cmpl
cwtl
ljmp
sub
es
lods
loope
mov
inc
test
std
xlat
xlat
movsb
add
fbld
xor
ss
xlat
imul
mov
or
cs
xchg
push
mov
push
cwtl
nop
lods
cltd
lods
inc
iret
pusha
and
push
inc
es
xchg
insl
lcall
lods
aad
popa
mov
mov
push
pop
mov
loop,pt
mov
out
mov
jne
out
lret
aaa
in
lds
stos
test
and
adc
call
sbb
cwtl
or
sbb
sub
cmp
push
xchg
stc
cmpsl
repnz
and
jmp
adc
cltd
push
xchg
sbb
aas
jo
jge
push
std
xor
in
mov
push
push
adcb
ret
pop
dec
in
adc
cltd
inc
jb
sub
fbstp
andb
cwtl
inc
sub
cmp
lret
insb
std
xchg
fcoms
pop
into
leave
pop
xor
adc
pminub
and
into
into
adc
in
mov
sbbl
inc
adc
decl
test
xchg
adc
sub
daa
mov
ss
adc
data16
out
sub
inc
sbb
subl
pop
adc
mov
in
imul
pop
call
jb
cltd
jg
pop
popf
push
shlb
roll
inc
push
jp
xor
mov
insb
mov
cwtl
mov
xor
push
aad
daa
adc
enter
and
xor
add
adc
inc
mov
sarl
in
sbbb
push
and
out
xchg
xor
or
jns
add
sub
xlat
and
imul
pop
cli
ja
inc
inc
icebp
dec
mov
push
sbb
jge
sbb
fistl
sbb
pushf
inc
sbb
bound
push
pop
or
ljmp
into
test
movsl
divl
enter
sub
ja
push
fldcw
mov
daa
dec
mov
push
mov
movsb
mov
sub
inc
out
mov
sbb
outsl
rorb
bound
out
bswap
iret
push
jl
or
adc
push
sarl
fmuls
rcrl
fcmovnu
fildl
adc
add
add
jle
hlt
ret
pop
jp
out
pop
rep
or
add
and
fimull
pop
dec
jecxz
lcall
pop
fildll
inc
es
pop
cmp
ljmp
inc
inc
rcll
add
ljmp
out
xchg
outsb
jae
test
xor
cmpsl
ljmp
je
adc
or
das
orl
lea
inc
call
nop
mov
xchg
mov
loop
shlb
mov
call
je
xchg
inc
push
sub
xor
jle
lods
pop
cltd
add
add
int3
inc
popf
pushf
jle
inc
jne
dec
mulps
inc
pop
lock
daa
adc
add
mov
adc
sub
xchg
test
mov
insl
dec
std
bndldx
aaa
icebp
fnsave
push
dec
jae
sub
xchg
xchg
ds
mov
fdivl
xchg
dec
jns
sub
iretw
xchg
and
andb
push
xor
rorl
andb
mov
scas
inc
xlat
adc
in
aas
pop
nop
jmp
xor
shll
mov
jne
fwait
adc
arpl
lds
push
cmpsl
je
mov
or
sub
test
test
adc
inc
int
dec
mov
mov
lahf
dec
mov
mov
and
push
shll
xor
pop
pop
add
in
movb
and
jne
dec
loopne
sbb
test
lcall
jns
inc
jl
dec
ret
in
mov
divb
movsl
xchg
in
dec
lea
jp
jbe
clc
jae
push
daa
bound
rorl
sbb
test
and
ret
in
jmp
mov
testl
lret
jmp
mov
mov
stos
sbb
jno
cmp
push
shll
pop
and
xchg
popa
negb
lret
and
pop
cmp
inc
pop
in
loope
out
jmp
cmpsb
xor
je
sahf
fucomip
sahf
or
mov
test
nop
fimull
xor
dec
testl
mov
xchg
test
sti
lock
sti
aad
sbb
leave
std
sbb
xchg
es
cwtl
xchg
add
cmp
test
dec
ret
in
popa
xchg
inc
jp
repnz
mov
jnp
fwait
or
push
sub
icebp
mov
fidivs
shr
push
inc
jmp
jge
pusha
jno
push
lret
les
mov
nop
test
xor
sbb
or
xor
test
mov
cltd
xchg
jbe
mov
or
pop
prefetchwt1
or
mov
pop
jo
and
mov
nop
imul
outsl
repnz
push
xor
pop
push
push
cmp
cmp
or
add
mov
xor
sbb
stos
cmc
sbb
and
clc
test
jge
add
popf
mov
test
jge
mov
fmulp
imul
add
sub
inc
imul
or
mov
fisubl
dec
xor
sarl
push
fs
or
hlt
cmp
jg
roll
sbb
mov
pop
imul
arpl
or
fidivl
js
into
lahf
rorl
in
xor
cmp
add
jo
pop
sbb
inc
data16
and
xchg
clc
testb
call
mov
stc
jl
xchg
sub
xchg
push
inc
xor
cmp
sub
mov
pushw
sti
scas
lret
xor
movsl
vcvtsi2ss
cmpsl
loop
xchg
imull
ljmp
test
repz
xchg
pop
pop
outsb
lock
cltd
add
sub
mov
mov
pop
clc
pusha
cmp
pop
out
leave
push
shlb
mov
rcr
mov
sub
push
test
xlat
jge
adc
sarb
add
cmpl
pushf
stos
aaa
xchg
or
push
xor
aam
dec
and
xor
xchg
push
clc
push
insl
shrl
xchg
jae
xlat
sub
sbb
mov
gs
aas
fld
sub
mov
push
pop
push
jbe
mov
push
jno
push
cmc
mov
jno
inc
cwtl
inc
xchg
sbbl
push
or
dec
sbb
mov
pop
pusha
cmp
aad
clc
cmpsb
mov
popf
movzwl
insl
imul
insl
fisttpll
fstl
sub
push
cs
scas
inc
mov
mov
and
mov
outsb
sbb
mov
xchg
rorw
test
scas
cld
fiadds
imul
fisubrl
xchg
lret
das
pop
cltd
leave
and
mov
mov
jae
aaa
das
sub
mov
out
push
or
mov
jecxz
xlat
ret
scas
and
lods
test
enter
out
pusha
mov
and
arpl
rcll
jp
lret
xor
nop
lds
mov
orl
jecxz
ret
dec
jg
cmpsb
imul
cmp
je
add
push
addr16
fcompl
out
jb
mov
inc
mov
jp
sahf
rol
fisttpl
clc
add
sub
or
jmp
mov
idivb
mov
mov
push
stos
xchg
cltd
and
fs
xlat
push
sub
inc
call
or
out
push
sub
cvtpi2ps
inc
lret
mov
push
mov
jmp
inc
jmp
mov
int
sub
or
push
add
xor
rcl
jae
jmp
call
cmp
out
mov
inc
mov
mov
pushf
or
sbb
in
mov
int
jne
or
xchg
in
rol
mov
lcall
in
dec
leave
fstp
xchg
andb
paddsw
loope
repnz
mov
mov
mov
xchg
xchg
aas
mov
and
jmp
fisttps
sub
xchg
mov
fcompl
dec
ss
xchg
or
jae
ret
jmp
sbb
mov
imul
dec
or
cwtl
and
bound
inc
cld
push
out
ficoml
aam
hlt
inc
scas
cmp
andb
sub
rcrl
xchg
xor
out
mov
mov
lods
pusha
imul
int3
dec
mov
push
js
jmp
or
push
imul
dec
mov
vmread
lods
jo
leave
scas
sbb
js
shll
mov
daa
mov
mov
adc
cmc
out
repz
pushf
add
pop
lret
fisubrs
mov
pop
mov
and
inc
push
push
pushf
mov
cmp
loop
jb
int3
lahf
add
xor
fwait
cli
ss
dec
mov
or
or
sub
out
xchg
push
jle
cld
insl
ljmp
and
mov
pop
mov
mov
movl
mov
mov
cli
pop
popa
sub
nopl
xor
cs
pushf
lock
imul
inc
stc
mov
xchg
cmp
sub
push
cs
outsb
cmpsb
loope
adc
pop
dec
jbe
jle
adc
popf
xor
mov
dec
stos
mov
mov
and
nop
cmp
out
lods
repz
xchg
aaa
or
shll
call
pop
push
inc
inc
aas
fs
fdivrp
insb
je
xor
push
in
add
jmp
shlb
cmp
pop
or
gs
aaa
dec
lods
and
lea
and
mov
mov
jmp
jae
mov
mov
inc
std
mov
add
cs
push
enter
pop
sub
pop
jl
cli
push
loop
and
mov
sub
into
cmp
stos
pop
push
push
inc
mov
aaa
ljmp
cmp
aas
cs
pop
jmp
mov
cmp
xor
icebp
mov
sbb
fildl
xchg
mov
outsb
aad
and
test
pop
xlat
pusha
mov
push
sub
add
mov
or
or
fistpl
sarb
pop
int
daa
sbb
pop
mov
pop
je
dec
mov
fisttps
push
fdivs
push
ret
mov
mov
into
sub
mov
push
jae
xchg
jl
sbb
mov
or
aas
mov
out
leave
or
cmp
sub
pop
js
mov
scas
adc
jno
dec
cwtl
stos
push
sti
xchg
push
into
dec
jge,pn
xor
nop
je
jle
ljmp
push
cmp
push
imul
in
adc
adc
scas
inc
inc
push
loop
xchg
inc
int3
fistpl
xchg
aaa
jns
lds
aas
lods
shlb
sbb
xchg
cmp
mov
scas
push
stc
enter
mov
scas
jno
imul
mov
jb
xlat
add
pop
or
mov
cwtl
and
je
sbb
lds
enter
push
loop
ss
in
xor
sub
lret
jns
addr16
out
adc
popf
mov
pop
push
pushf
mov
mov
mov
add
and
and
or
cmp
lahf
jne
mov
sbb
popa
inc
pop
inc
mov
lods
or
test
xchg
xchg
out
or
in
outsb
xchg
in
hlt
inc
pop
pusha
movntps
xchg
sub
hlt
inc
mov
jl
insb
push
in
push
mov
bound
sub
xor
leave
mov
iret
inc
mov
sbb
test
jo
adcb
mov
cmpsl
adc
and
ret
pop
pop
push
fisubs
xchg
mov
push
imul
inc
leave
cmpsl
mov
xor
subb
add
lock
mov
mov
sub
cmpsl
adc
lods
shll
outsb
in
insb
repnz
xor
out
pusha
in
adc
xor
jp
cmp
cwtl
pop
push
popa
jnp
mov
mov
push
jne
or
xor
dec
dec
sbb
arpl
pop
repz
push
and
sbb
je
push
mov
xor
push
push
divl
cli
lret
jns
or
pop
mov
pop
es
fs
mov
inc
mov
lret
mov
ret
addb
fs
jmp
daa
shll
mov
xor
push
ss
cld
mov
pop
or
rcrl
cmpl
imul
cmp
repnz
mov
je
stos
mov
cld
test
sub
push
insb
adc
sbb
lods
inc
or
mov
das
xchg
xor
icebp
rcl
pop
inc
add
mov
cvttps2pi
rol
das
rclb
addb
cmp
lea
adc
mov
sub
inc
jo
add
mov
lahf
push
mov
test
jno
out
sub
inc
lds
aam
aaa
push
sahf
push
adc
aad
xchg
mov
adc
mov
aad
gs
sub
cmpsl
xor
jmp
mov
outsb
sub
jns
clc
lret
ss
xchg
push
inc
lods
in
cmp
inc
out
dec
sub
add
push
mov
inc
call
or
repz
add
stos
pop
adc
jb
loope
icebp
mov
insl
mov
lds
pop
into
ljmp
imul
add
out
sti
jne
out
mov
push
xchg
push
pop
sub
sbb
pop
das
sbb
or
and
and
les
fmul
lcall
sysenter
jns
ss
lods
lcall
ja
jp
aad
pop
adc
andb
mov
xchg
mov
mov
div
ret
call
jle
push
ficoml
xchg
mov
mov
sbb
sub
xor
mov
pusha
dec
cmp
and
inc
addr16
ljmp
ss
call
and
cmpsl
stos
clflush
inc
fdivrl
xor
cmp
mov
daa
ljmp
aad
xchg
and
jge
lods
mov
int
jbe
xor
pop
jg
mov
push
lds
in
jge
pop
inc
xor
pslld
dec
cld
inc
lods
frstor
or
aad
or
push
dec
js
movsl
outsl
loopne
aad
inc
addr16
std
jl
aaa
dec
jnp
loopne
iret
adc
loopne
fs
add
lods
jns
xorb
lret
adcb
call
les
std
adc
pop
mov
pusha
push
shrb
pop
xor
iret
movsl
pushf
jecxz
les
ret
mov
jns
mov
into
jge
cmp
xor
psrad
mov
cmp
mov
mov
lock
sbb
loop
jmp
mov
pop
cs
xchg
inc
rolb
daa
jbe
cli
mov
addb
sbb
aad
dec
inc
das
jmp
call
push
js
sub
es
popf
dec
ror
dec
push
out
xor
pop
dec
xchg
jmp
jg
fidivl
cmc
pushaw
dec
movsl
xchg
pop
mov
arpl
daa
jnp
jg
test
fbld
call
sbb
pop
ds
mov
pop
lods
jmp
ret
add
cmpsl
clc
clc
fldenv
xchg
dec
or
sbb
ds
pushf
fcomp
inc
and
mov
mov
iret
sbb
or
jns
test
ret
jl
mov
out
ret
out
and
les
inc
jmp
sbb
sub
pusha
ficoms
xor
outsl
int3
fcomps
into
jnp
mov
jb
inc
or
xor
leave
cmp
mov
cmp
dec
mov
xchg
jbe
pop
cmp
cli
outsl
cmp
scas
jae
push
push
push
add
or
shl
push
xor
incl
cmp
jae
xchg
rclb
mov
mov
xor
loop
imul
or
xchg
sbb
aaa
pop
mov
sbb
xchg
leave
xchg
jg
mov
sbb
repnz
fidivrs
aad
call
mov
add
xor
pop
xchg
mov
inc
rcrb
dec
push
xchg
push
sbbl
clc
into
and
das
push
lea
fistpll
daa
daa
add
insb
fldenv
sub
popf
inc
fstps
fdivp
mov
mov
shll
jo
mov
jge
test
mov
mov
mov
addb
inc
test
mov
sbb
gs
dec
repz
jg
fistpl
dec
mov
sbb
push
cltd
adc
pop
hlt
rorl
leave
aad
mov
jnp
pop
cmp
add
mov
sbb
jp
loop
mov
add
push
push
or
sub
pop
in
pop
sbb
in
cmp
push
icebp
sub
adc
add
jo
push
cli
mov
fwait
mov
int3
mov
pop
cmpsb
sub
mov
pop
inc
sbb
xor
and
add
sahf
jns
icebp
sbb
psadbw
xchg
adc
lds
cmpsl
shl
lods
lea
xchg
popf
cli
lods
push
push
mov
xchg
nop
push
in
loopne
movsl
jb
cmp
inc
faddl
xchg
mov
xchg
in
xchg
test
mov
mov
jno
rolb
mov
fbld
jne
and
es
mov
stc
cmp
or
testb
repnz
add
scas
sbb
pushf
movsb
je
stc
cmp
jo
es
call
fs
sub
sub
fmull
jl
xchg
inc
in
add
pop
rcrb
adc
or
xchg
cmp
cwtl
cltd
loope
fnsave
in
rol
adc
faddl
push
mov
enter
movsl
cs
into
jmp
mov
ljmp
dec
fdivrl
xchg
movsb
push
adc
cmp
nop
inc
icebp
mov
ja
andb
leave
pop
fwait
pop
aas
inc
pop
in
loopne
jge
adc
fsub
adc
das
dec
rclb
adc
lea
push
xor
dec
mov
sub
adc
mov
call
cltd
repnz
push
loope
lret
test
push
andb
ja
mov
lahf
xor
fbld
inc
loop
jnp
out
jg
and
xchg
and
iret
cmp
cmp
ss
xor
out
js
inc
shrl
mov
and
clc
xlat
add
adc
jl
cld
sub
dec
sub
inc
pop
loop
adc
or
inc
gs
adc
ret
rcll
imul
xchg
cmp
lods
pop
mov
cmp
shrb
lcall
ds
stos
dec
test
jns
and
leave
in
popa
sub
xchg
lret
sbb
xor
negb
or
xlat
push
mov
or
push
aam
push
aaa
sub
cs
pushf
inc
negl
jp
push
xchg
push
scas
popf
pcmpgtd
idivb
push
rcrb
or
mov
mov
cmp
jns
mov
imul
jae
mov
adc
pusha
cmp
call
and
call
jnp
push
push
pop
lds
sub
jg
push
sbb
cmp
pop
xchg
xchg
test
xor
sub
add
iret
xchg
or
inc
mov
dec
dec
loope
divb
sbb
clc
push
imul
orl
outsb
das
xor
fbld
jp
mov
mov
sbb
push
pop
add
or
cmp
mov
cwtl
xchg
shll
cmp
stos
loope
pop
hlt
cmp
mov
mov
jge
inc
sbbl
xor
or
inc
push
sbb
mov
and
std
sarb
cli
frstor
cmc
dec
mov
das
sub
gs
mov
notb
sbb
fsubs
lret
call
lret
sub
mov
adc
push
setae
aaa
aam
or
cmp
lds
sbb
in
loope
and
stos
xchg
jno
and
inc
cmc
movsl
test
sub
jno
jmp
jg
pop
xor
and
adc
push
setb
jecxz
sub
and
icebp
mov
faddp
jae
sbb
sbb
and
stc
or
xor
adc
and
sub
mov
pop
in
movb
pop
pop
cs
jno
out
incb
inc
out
sub
test
sub
hlt
shll
rclb
les
add
sbb
and
add
movsb
dec
adc
adc
mov
out
shr
mov
mov
sbb
lret
mov
sbb
or
stc
jae
cli
mov
stos
push
je
inc
adc
loope
pop
adc
push
push
xor
filds
es
jge
leave
jb
lahf
jge
insb
cmp
movsb
cmpsb
adc
xor
lcall
lahf
push
cs
addl
push
cmpsb
sbb
icebp
leave
sub
and
xchg
cmp
shll
fmul
jae
cmpsb
lcall
bound
mov
cmp
loopne
pop
test
pop
add
jae
sbb
aaa
call
mov
movsb
lods
mov
shrb
in
ja,pn
arpl
xlat
dec
aas
or
aaa
adcb
stc
xlat
dec
inc
mov
adc
mov
inc
push
cmp
ds
loope
sub
ds
jae
ret
test
repnz
and
test
cmc
sahf
dec
fs
dec
ret
add
xchg
vpshufhw
pushf
pop
ffree
dec
sub
loopne
and
fs
dec
pop
sub
shll
cmp
mov
mov
ret
int
or
or
into
mov
xlat
in
jae
les
insb
xlat
inc
stos
mov
xchg
pushf
iret
nop
jmp
shrb
jl
das
jle
inc
xchg
mov
iret
decl
xor
xchg
repz
or
std
pop
gs
jno
pop
scas
insl
scas
adc
push
scas
hlt
jbe
mov
or
sbb
mov
insb
les
xor
cmpl
xor
inc
mov
sub
dec
dec
bound
xchg
hlt
les
in
aam
aas
push
stc
cmp
jb
lcall
mov
push
mov
aam
pop
movsb
inc
shrl
fistl
push
push
cmp
lahf
lds
and
leave
or
lods
ja
cmpb
xorb
fisttpl
inc
xchg
gs
mov
insl
mov
push
mov
inc
pop
xlat
aaa
das
loop
xor
cmp
jnp
push
dec
dec
cs
stos
xor
loop
adc
and
sbb
dec
sbb
lahf
loope
xor
xor
mov
mov
ret
xor
inc
mov
xorb
out
xchg
pop
or
loop
sbb
or
sti
enter
inc
jns
int
mov
push
xor
jge
sbb
gs
fsts
cmp
popf
cmp
add
push
inc
lds
add
jecxz
gs
or
lcall
test
cmp
cmpsb
xlat
pop
or
in
pop
in
and
dec
rorb
dec
inc
cmpsl
or
mov
sub
xchg
mov
int
ret
sub
or
or
enter
push
jl
test
lahf
loop
mov
sarl
mov
fcoms
inc
inc
popw
cmpsl
mov
stos
test
mov
cmp
movsl
popf
push
orl
sub
repnz
movsl
inc
xor
int3
sub
imul
jne
cs
sbb
add
addr16
fsubp
mov
jl
jne
ljmp
test
and
xchg
push
test
dec
lea
hlt
into
inc
rorb
sahf
pop
aad
pop
xlat
pop
repnz
mov
jp
jns
inc
inc
or
or
nop
mov
pop
xchg
dec
jg
mulb
push
cs
cld
leave
mov
push
cltd
push
xor
jp
pop
cs
divl
mov
cltd
das
sub
push
xchg
loop
cmp
aam
adc
xchg
es
cld
mov
roll
mov
icebp
sub
cmp
and
nop
mov
test
jp
sub
pop
divb
aam
mov
mov
mov
fistpll
out
enter
add
dec
test
inc
ret
mov
cmp
xor
adc
mov
jmp
loope,pn
in
imul
jnp
retw
mov
jne
xchg
test
in
pop
je
in
jecxz
xor
movsl
add
test
in
fidivrl
popa
aad
and
fs
push
xchg
push
cmp
mull
push
ss
xchg
mov
mov
iret
inc
adc
rcrl
outsb
in
jo
mov
cmpsl
hlt
sbb
sbb
sbbl
cs
jb
les
mov
outsl
and
ds
mov
fdivrp
inc
les
xor
cmpb
push
push
mov
leave
pusha
jmp
aas
aad
xor
mov
mov
dec
pushf
out
and
out
lock
and
and
ret
xorb
adc
xchg
pop
xor
jnp
iret
popa
sub
hlt
subb
adc
lret
in
enter
in
cmc
cmc
sub
push
or
add
xchg
les
jo
sbbl
cmc
inc
loop
scas
in
or
adc
and
and
sub
mov
and
or
push
xchg
shlb
sub
addr16
mov
xchg
sbb
or
xor
add
leave
scas
cltd
jbe
xchg
pushf
inc
dec
mov
mov
inc
sbb
or
sbb
cmp
pop
cmp
ss
pop
int
jae
jecxz
pushf
cmp
jp
inc
fwait
mov
xor
cmpsb
loope
add
icebp
pop
ficompl
inc
lods
jb
scas
sbb
xchg
xlat
stc
out
test
nop
sub
insb
out
ss
add
aad
cmc
lret
cmp
add
outsl
sbb
movsb
push
cmc
lock
pop
mov
mov
cwtl
fadd
xor
or
and
push
movsb
mov
cmc
movsb
cld
movsl
inc
cmp
xchg
into
sbb
cmp
cld
adc
scas
dec
push
pop
int
push
add
aad
push
mov
add
scas
and
inc
xchg
mov
dec
movsl
inc
aam
ret
stos
xlat
mov
loop
mov
movsb
out
repnz
jae
cld
push
sahf
xchg
pop
jecxz
leave
je
inc
adc
inc
imul
cwtl
ds
out
xchg
scas
pop
and
repnz
sarb
push
jno
dec
fcoms
xor
mov
mov
loop
cmp
nop
jae
loop
mov
fistpl
addr16
sub
push
push
jae
dec
iretw
mov
sub
pusha
dec
iret
xor
cmp
jg
dec
xlat
shl
call
mov
xchg
cmp
jo
dec
outsl
inc
in
jle
test
dec
mov
pop
std
dec
faddl
sub
push
popf
inc
arpl
lahf
sub
mov
sub
xchg
add
ucomiss
mov
mov
fldenv
inc
xchg
sub
sub
adc
xchg
xchg
outsb
xchg
xor
js
jle
jbe
ljmp
mov
push
es
shl
leave
push
fucomi
mov
rol
scas
sbb
dec
lods
lret
push
push
add
push
js
pop
scas
jnp
pop
stos
xchg
dec
or
pop
sbb
fcmovnb
dec
loopne
das
push
mov
aam
jp
addr16
test
pop
je
jno
xor
mov
call
add
pop
mov
pop
dec
cwtl
aaa
cmpsb
test
stos
cmp
xor
dec
into
sbb
outsb
pop
sbb
mov
xor
js
cmp
aas
stos
xchg
fidivs
shlb
jne
push
jne
scas
xor
lahf
dec
inc
cld
and
lea
adc
aas
es
sub
int3
add
movb
add
mov
xchg
pop
je
xchg
mov
xor
nop
mov
repnz
pop
push
cmpsb
pop
sarl
lock
aaa
aam
sbb
push
jno
rol
lret
das
and
in
fisubrl
xor
aam
addl
cmp
xchg
sbb
fs
rorb
test
dec
outsl
mov
mov
rol
shrl
int
mov
and
and
std
inc
pop
pop
mov
inc
push
sahf
mov
adc
jle
sub
ss
stc
rcrl
js
pop
jmp
mov
in
jecxz
mov
mov
fwait
test
pop
cmc
adc
and
sub
lods
fildl
bound
xchg
pushf
push
pushl
push
lcall
push
pusha
lods
sbb
fidivrs
sbb
addr16
repnz
pop
pop
out
movl
and
out
cmp
sti
add
adc
and
std
adc
sbb
pop
out
lea
push
jp
arpl
lods
xor
stc
testl
aaa
pop
rorb
icebp
notl
inc
lcall
and
adcl
pop
in
and
or
out
xchg
cs
mov
pop
push
in
push
sub
xor
fwait
inc
or
call
insl
xor
nop
xor
xor
loop
jl
inc
and
test
pusha
add
xchg
lods
imul
dec
imul
rclb
loope
insl
pop
adc
jbe
lcall
sbb
sarl
nop
sub
xor
push
int
repnz
pusha
mov
mov
out
loope
mov
jmp
inc
stc
inc
xor
pop
mov
mov
fwait
popl
adc
sub
mov
sub
or
lea
push
push
hlt
test
jmp
jbe
fstpt
nop
fistpll
scas
es
rcrl
insb
cmp
mov
jb
sahf
insb
inc
aas
scas
ret
iret
xchg
mov
movd
sti
outsb
mov
jae
jl
push
jmp
ss
and
or
push
jg
dec
mov
xor
ret
cli
les
test
mov
inc
pop
es
cmp
mov
sbb
xchg
pop
mov
imul
icebp
pop
out
adc
mov
xor
mov
push
out
xor
add
add
jnp
stos
es
pop
fisttpl
aam
pop
and
or
loope
notl
insb
mov
dec
in
js
es
cmc
aaa
mov
fidivl
pushf
pusha
mov
push
call
pop
xor
fwait
mov
mov
aaa
outsb
mov
pop
add
and
popf
push
adc
jle
push
cltd
pop
mov
shrb
test
adcl
push
dec
push
sarb
fildl
pop
adc
push
sub
cmp
jp
adc
jp
orb
xor
les
imul
negl
imul
mov
jmp
xchg
or
inc
jl
or
lds
orb
adc
insb
inc
ljmp
inc
clc
xor
pop
mov
push
jmp
lret
imull
fs
jmp
cmp
xor
push
sbb
mov
cmp
mov
out
test
cmp
cltd
mov
jb
jl
jns
fldcw
xchg
insl
adc
mov
loope
jno
aas
arpl
in
out
xchg
fdivl
adc
neg
cmc
cmp
sbb
sub
scas
inc
shll
fcmovbe
ljmp
xlat
dec
test
jmp
aaa
mov
jl
push
sbb
add
push
inc
xchg
mov
mov
mov
and
jnp
or
shll
pop
lret
inc
cmc
and
es
cmp
cmpxchg
cmp
jne
bound
jnp
add
inc
sbb
addl
out
cli
xor
or
nop
inc
pop
jecxz
test
mov
xchg
push
xor
inc
xlat
sbb
cmp
data16
cmpsb
sub
daa
jnp
inc
daa
pop
dec
mov
inc
or
dec
loop
push
push
jne
cmp
stos
mov
mov
xlat
xchg
loope
push
lret
mov
xor
dec
ja
fimuls
stc
mov
add
or
and
lods
scas
imul
stc
jmp
out
rcrb
sbb
aam
out
addr16
gs
shlb
shl
enter
mov
out
mov
mov
shll
pop
js
jmp
popa
pop
inc
mov
jge
incl
lds
lods
daa
movsb
or
adc
es
daa
pop
data16
fistpll
fs
mov
out
mov
jg
jmp
cmp
jecxz
icebp
aas
xchg
sub
rcr
pop
insl
mov
inc
mov
xchg
mov
mov
dec
push
fisttpl
push
sub
lds
repz
jp
inc
mov
fsubrl
jge
jo
std
iret
iret
mov
stos
jne
das
aad
out
scas
sbb
dec
popf
cmp
add
or
mov
mov
sahf
clc
insb
fsqrt
cs
xchg
lods
dec
movsl
mov
xchg
add
es
mov
mov
clc
ljmp
jg
cmpsb
arpl
push
sub
loop
bound
pop
mov
adc
sub
inc
add
add
xlat
add
sub
pop
mov
mov
adc
inc
xchg
imul
les
mov
pushf
jo
cmc
dec
fnstsw
xorl
mov
push
out
scas
inc
test
sbb
int
xchg
cmp
cmp
cwtl
mov
sub
and
mov
gs
sarl
xchg
dec
mov
fs
icebp
mov
test
and
pop
gs
jb
or
adc
mov
sub
cmpsb
std
rcl
cmp
jg
inc
mov
testl
push
dec
push
mov
repz
enter
incb
dec
int
ljmp
jb
push
adc
test
aam
adc
shrl
jno
pop
sbb
ja
mov
jnp
jg
outsl
adc
or
cmp
add
test
mov
sub
xchg
jnp
in
mov
loope
pop
mov
inc
ds
mov
stc
loope
mov
mov
jl
mov
pop
shlb
xchg
arpl
cltd
or
cmp
out
dec
sbb
ret
and
xchg
or
popf
scas
lret
dec
xorl
adc
cmpsb
testb
inc
mov
hlt
push
pop
std
insb
cli
scas
pusha
mov
cs
mov
sbb
cmp
fcoml
adc
push
push
mov
xlat
cmp
and
lds
loopne
repnz
pop
push
push
jb
inc
fadds
push
sub
sbb
bound
cmp
jp
pop
fldt
nop
jmp
lret
call
adc
ja
xor
in
in
scas
call
inc
mov
rclb
push
sub
sbb
loopne
loope
push
xor
pop
aam
enter
sub
push
dec
mov
jp
dec
cmp
sbb
sub
jns
insb
sbb
sub
loop
inc
pushf
data16
cmp
sbb
push
sbb
push
out
push
fimull
or
jo
nop
test
adc
gs
rsqrtps
es
mov
or
cmp
jecxz
mov
cmc
lret
mov
imul
xchg
jnp
cmp
subl
arpl
pop
dec
add
mov
inc
insl
mov
call
fmulp
rcl
loopne
push
cmc
icebp
jbe
fwait
inc
jns
adc
xor
inc
dec
push
cmp
imul
xchg
pop
repnz
cmp
sbb
xchg
sub
sti
adc
sub
out
cmp
pop
jbe
cmp
mov
rol
add
xor
xchg
mov
mov
jecxz
and
xorl
sarl
loope
push
testl
nop
test
and
shll
add
repz
test
sub
lock
push
mov
sbb
das
in
mov
inc
test
decl
rcll
pop
es
ds
fildll
fadds
es
add
shr
pop
mov
jb
ret
and
jb
lret
dec
popf
xorb
movsb
adc
sbb
fisubrs
jge
cmp
pop
in
jge
xchg
movsb
mov
into
cmp
mov
sub
and
mov
sub
xor
sub
testb
sbb
mov
outsl
xor
push
jle
pushf
xor
mov
xchg
dec
les
push
imul
loop
mov
sbb
fs
xchg
add
cmpsb
jns
cmp
std
jle
sbb
cltd
bound
fadds
xchg
ds
jecxz
dec
sub
call
add
dec
stc
jno
cmp
mov
jo
lret
insb
hlt
or
sbbl
fucomi
je
push
xchg
mov
cmp
cmp
adc
mov
loop
push
push
xchg
sub
xchg
aaa
outsb
es
rol
mov
hlt
mov
sub
ss
addr16
dec
int
inc
andl
mov
cmp
dec
jne
pop
sbb
mov
loop
cmpsl
xor
out
lods
inc
cmp
lds
cmp
add
shll
aaa
movsb
lods
outsb
mov
cmpsl
daa
test
dec
rclb
push
xor
clts
push
outsl
and
xchg
or
inc
sub
pusha
push
jp
lret
sub
dec
xor
xchg
mov
cli
mov
pop
jl
movsb
push
jg
in
test
fsubrs
aas
cmpsl
cwtl
xor
pop
call
mov
add
add
ljmp
push
mov
aaa
psraw
fstpl
adc
cmp
inc
pop
cmpb
add
cmp
and
cmp
xchg
lods
push
or
add
jne
push
inc
adc
sbb
insb
mov
push
fcmovbe
push
and
dec
shrb
jo
mov
loopne
xor
insl
call
popf
stos
mov
push
repnz
out
cmp
add
les
jp
cmp
andl
sub
inc
test
jnp
loopne
sahf
addb
jne
lahf
push
sub
lods
in
dec
ret
ds
data16
imul
sbb
loope
in
test
aad
sub
sbb
mov
add
lahf
inc
adc
ret
rorl
divb
mov
out
lods
rcll
pusha
sahf
mov
push
mov
mov
repz
xchg
int3
and
jo
inc
fcoms
cmpsb
rcrl
push
ret
mov
push
test
std
arpl
pop
xchg
add
jbe
fwait
dec
sbb
mov
loope
cmpsl
outsb
push
cmpsb
push
adc
xor
sahf
je
mov
sub
and
insl
cmp
sub
fsubs
test
jno
adc
cmp
in
stos
mov
or
insl
xchg
testb
loopne
out
lods
ret
cmp
add
mov
ljmp
xlat
inc
mov
mov
sbb
cmp
mov
test
stos
add
jno
out
add
or
mov
daa
inc
jns
xor
cmc
stos
jno
jmp
or
nop
xchg
jnp
ljmp
inc
xchg
stos
test
adc
adc
js
sbb
lds
aam
rol
fisubl
loop
mov
bswap
pop
movsb
ret
cmc
aad
mov
add
decl
data16
insb
repnz
inc
xor
mov
jge
dec
or
xchg
jbe
arpl
shlb
cmp
das
cmp
mov
cmc
add
push
pop
dec
sti
mov
dec
jo
test
ss
fdivrl
cmp
push
xor
xchg
mov
xchg
mov
jle
push
dec
mov
mov
mov
idivb
mov
ficoms
mov
mov
mov
ljmp
stos
test
movsl
jg
mov
jg
jg
ss
ret
dec
es
and
jmp
sbb
cmp
fwait
into
xchg
rcrl
pop
sbb
cmc
loop
insl
movsb
pop
push
mov
scas
jmp
lods
jnp
pop
jne
cmpl
sbb
es
or
fidivl
repnz
push
sub
push
xor
cld
jo
jmp
jmp
into
test
or
inc
xchg
aas
sub
push
iret
cmp
mov
lods
adc
ja
enter
sahf
mov
inc
dec
dec
int
add
mov
mov
and
sub
sub
sbb
xlat
lods
arpl
lods
pop
jnp
mov
cmp
adc
mov
les
je
push
mov
jge
jl
and
cmpsb
into
push
mov
stos
or
mov
cwtl
rcll
stos
xor
sub
test
fwait
loopne
push
shll
mov
xchg
sbb
mov
sbb
sub
and
sbbl
xlat
stos
lret
mov
push
add
das
push
cmp
shlb
fimull
and
out
enter
stos
jo
or
push
mov
incb
clc
pop
mov
xchg
mov
cwtl
mov
xchg
shll
popa
pop
push
fcom
mov
and
sarb
sbb
stos
inc
stos
aad
cmc
push
les
out
into
aad
mov
mull
ret
shlb
daa
sahf
jmp
cmp
aad
out
popa
sahf
push
cli
lret
dec
out
sub
fcmovb
ds
test
xchg
push
jge
push
pop
gs
ss
add
aaa
or
aam
mov
clc
lret
mov
enterw
shr
scas
pusha
dec
popa
mov
stc
mov
mov
xchg
adc
push
cmpsl
flds
sbb
sbb
dec
cmp
lods
sub
loopne
mov
mov
cmp
jo
mov
cmp
lds
popw
cli
ss
popa
adc
add
cmp
out
mov
std
aam
out
movsb
call
jo
subl
push
mov
mov
dec
add
lahf
sub
ss
ss
shlb
arpl
jbe
test
ljmp
mov
cmp
xchg
roll
ljmp
mov
mov
cmpsl
in
jmp
nop
fwait
movsb
xchg
xchg
cltd
mov
inc
xchg
pop
sbb
es
push
pop
outsl
adc
pop
sbbl
inc
leave
ret
scas
sarb
data16
cs
push
iret
std
mov
and
enter
je
pop
or
xor
les
xchg
outsl
sbb
inc
inc
jo
lcall
sbb
xor
xlat
into
pop
lods
loope
cs
ss
cli
xor
sahf
cli
add
sahf
xor
mov
sbb
push
xor
mov
rcr
outsb
cmp
in
cmp
out
outsl
cwtl
xchg
cwtl
xlat
fldl
jns
std
stc
fcoml
or
push
mov
xlat
rclb
push
push
adc
pop
aas
push
sub
jecxz
cmc
test
mov
jp
lea
mov
dec
imul
repz
aad
sbb
test
mov
xor
xor
shl
shld
mov
inc
into
cmp
js
jb
out
clc
push
icebp
push
inc
mov
popf
insl
xchg
mov
xchg
imul
fcoms
dec
adc
fiaddl
movsb
mov
lahf
call
mov
inc
nop
repz
pop
cmp
xor
jmp
jecxz
push
mov
out
dec
int3
xor
mov
fnstcw
adc
ja
in
sbb
or
sub
push
mov
jge
jne
sub
or
icebp
jecxz
in
js
fists
mov
popf
sub
ret
aad
sbb
mov
inc
lods
jge
pusha
sahf
push
xorb
xor
stos
cmp
cmp
sbb
and
nop
fwait
daa
sbb
inc
cmp
jle
sub
xor
cltd
jns
push
ljmp
icebp
or
pop
fwait
inc
out
out
push
in
mov
or
int3
insb
dec
push
loopne
popf
push
sub
dec
jg
idivb
sbb
mov
adc
or
loopne
rcrl
mov
fs
adc
aas
jmp
hlt
xchg
xor
insl
jnp
test
inc
cmp
iret
mov
cmp
pop
shrl
test
lret
sbb
push
divl
adc
push
push
push
cli
mov
xchg
arpl
sbb
pop
mov
pop
sbbb
clc
ds
gs
popa
mov
out
or
push
sub
insb
pop
inc
outsb
xor
inc
bound
dec
dec
xchg
and
inc
lods
cmp
insb
and
mov
xchg
insb
xorb
xor
or
icebp
in
clc
mulb
lds
dec
xchg
sahf
xchg
sbbl
into
xor
mov
in
push
lock
test
mov
daa
and
nop
and
cmp
adc
lcall
aas
cmpsl
dec
xor
adc
jmp
cmp
add
xchg
or
sbb
cli
mov
jp
mov
jmp
ja
xchg
clc
sbb
fucom
and
sbb
push
cmp
sbbl
sub
or
push
fcoml
insb
leave
mov
or
insl
push
adc
mov
mov
add
cmp
sti
ret
iret
pop
fs
mov
pushf
sbb
movsb
fcoml
mov
pop
gs
movb
xchg
fildll
lods
add
insb
shr
adc
mov
int3
shll
cli
mov
cmp
cmpsb
and
xchg
jno
insb
and
jp
pop
cmpb
lcall
sub
inc
mov
pop
dec
sbb
add
stos
add
and
lret
in
jge
outsl
push
data16
xchg
clc
xor
lods
std
pop
js
add
dec
in
pop
xchg
and
dec
lahf
scas
stos
jmp
pop
xchg
sub
das
sbb
lret
pop
stc
popa
cld
les
int3
pop
jnp
nop
or
cwtl
and
mov
sbb
adc
sub
dec
cmpsb
push
pop
outsb
fiadds
dec
xor
mov
xchg
push
jmp
shll
inc
out
negb
lret
sbb
cltd
js
cmpsb
add
int3
xor
rcrb
int
out
in
sub
sahf
mov
lea
incb
jbe
and
jmp
or
push
pop
mov
xor
icebp
jmp
outsl
push
int3
ud0
jmp
jl
daa
sub
mov
insl
cmp
cmp
cmp
ja
lock
xchg
movsb
xchg
loop
fisubs
call
outsl
sbb
lods
ljmp
cmp
pop
outsl
cmc
pop
push
je
jno
push
sbb
mov
cmc
scas
out
mov
ret
out
jge
hlt
inc
cli
test
inc
lds
bound
sbb
rclb
inc
scas
push
xlat
mov
and
mov
hlt
in
scas
jmp
stos
or
jns
push
push
std
cmc
sub
mov
js
mov
mov
or
push
cmp
fs
ja
mov
cmp
inc
add
xchg
mov
dec
and
xchg
jae
test
pushf
lods
lock
push
inc
mov
mov
loopne
pop
dec
push
ret
aas
mov
inc
daa
pop
mov
and
sbbb
negb
adc
sub
lret
jle
mov
push
mov
xor
aad
dec
mov
scas
outsb
push
sbb
cmovs
sbb
pop
adc
daa
mov
dec
ds
ja
loopne
inc
xorb
les
scas
in
inc
push
es
add
dec
in
stos
push
outsl
sub
pop
cltd
loopne
lods
lret
in
scas
lods
push
mov
jg
and
mov
stos
aad
std
sbb
scas
cmp
or
push
dec
sub
sbb
mov
je
mov
je
cmp
stos
fwait
dec
and
mov
jmp
out
call
rol
imul
rorl
xchg
rorb
mov
stc
jmp
daa
lds
inc
loop
dec
pusha
mov
aaa
mov
mov
mov
das
or
mov
mov
dec
dec
or
dec
test
pop
or
jp
xor
sub
xor
mov
rclb
pusha
outsb
test
loop
out
mov
inc
lods
cmpsl
jmp
lret
and
xor
scas
inc
inc
dec
fldcw
pop
dec
fdivrl
xor
mov
add
test
test
jbe
mov
jns
je
inc
in
movsl
fcoml
jp
xor
mov
dec
cmp
pop
call
xchg
pop
jno
sbb
dec
in
jmp
push
dec
jae
insb
int3
pusha
addr16
shl
dec
movsl
add
fmul
and
outsl
into
jge
rol
int3
adc
or
ja
mov
and
es
push
jecxz
push
dec
and
adc
stc
mov
xchg
sub
jbe
pop
pop
aad
out
dec
stos
ja
cmpsl
orl
loope
xchg
adc
fadds
and
xor
fdivrp
repnz
call
imul
addr16
stos
cmpb
sub
pop
pop
dec
xchg
jle
fwait
test
sbb
push
pushf
mov
test
and
xchg
mov
add
pop
bound
xchg
fadd
negl
mov
add
sbb
mov
xchg
movsb
dec
lea
cmp
decl
push
repnz
loope
mov
adcb
mov
lock
jmp
jp
lret
fs
lret
push
inc
adc
in
pop
mov
std
leave
rorl
mov
jo
cmpsl
push
mov
jnp
add
or
loop
or
std
sbb
mov
xchg
inc
dec
xchg
in
push
repz
scas
or
push
insl
shrl
imul
push
mov
ret
aad
orb
scas
hlt
ret
cmp
cmc
push
sub
mov
inc
aas
adc
cld
mov
sbb
rclb
or
fsub
jmp
xchg
lret
sti
orb
arpl
cmp
xor
xor
sbb
leave
scas
std
or
adcb
fnstenv
inc
arpl
shlb
fimull
jnp
dec
mov
sbb
xchg
jecxz
inc
aam
mov
push
adc
lret
roll
lahf
xchg
push
mov
xchg
call
lcall
pop
cs
ret
lods
aas
and
stc
and
adc
stos
js
sti
stos
je
xor
test
mov
out
pusha
mov
stos
lods
sub
outsb
lock
lret
jne
sub
scas
pushf
and
aad
jnp
pop
insl
jle
jge
adc
fcompl
scas
ret
lahf
mov
mov
out
or
out
mov
jmp
aam
add
movsb
aad
or
outsl
shrl
out
shr
xor
add
subb
pop
hlt
cmp
adc
push
stos
jl
sbb
push
cwtl
aam
xor
pop
inc
idivb
push
mov
push
pusha
lods
stos
loope
pop
pushf
pop
ja
or
fstl
adc
rcrb
out
mov
or
pop
or
es
or
add
pop
add
popa
icebp
mov
push
std
cmpsl
leave
jo
fdivs
icebp
and
push
or
jnp
mov
or
dec
cmpsl
sub
lds
andl
mov
sbb
movsb
jmp
jg
add
xchg
cmp
pop
popf
lods
jl
mov
aad
cltd
fcompl
mov
les
fldl
test
sbb
fstp
push
sahf
add
lret
and
dec
push
stos
test
nop
mov
cmpsl
jl
add
shrl
fbld
or
fcmovb
pop
js
sbb
pop
jne
or
push
call
ja
arpl
daa
xchg
dec
mov
imul
pop
mov
gs
lea
repz
dec
xor
lcall
movsb
add
mov
push
dec
rcll
or
std
sar
cmp
jmp
inc
mov
push
mov
fistps
hlt
pop
sub
mov
and
jmp
imul
inc
rcll
inc
pop
test
cwtl
jge
ss
fcmovnu
mull
fimuls
mov
jge
sbb
stc
negb
dec
hlt
pop
stos
mov
inc
and
cmp
loope
sbb
mov
iret
lcall
fisubl
fists
jns
movsb
or
je
mov
rcrb
cmp
inc
push
mov
mov
cltd
adc
daa
jne
outsb
dec
cmpsl
xchg
sahf
popa
out
mov
int
lret
and
sti
xchg
adc
dec
inc
rcrl
cmpsb
ret
xchg
clc
fs
test
push
jmp
dec
mov
sahf
sub
xchg
or
inc
push
das
sbb
mov
and
test
inc
daa
cmp
and
add
inc
test
jg
bound
or
subl
add
enter
push
call
sahf
into
mov
xchg
xchg
pop
out
sbb
ds
pop
jge
add
adc
add
ds
sti
pop
mov
jle
or
jmp
aam
mov
ss
lret
cmpb
ss
enter
cmp
cmp
pop
idivl
outsl
scas
lret
in
icebp
xor
mov
adc
cmpsb
test
inc
loope
in
outsl
sbb
jmp
adc
or
mov
dec
sbb
nop
scas
mov
mov
ljmp
jecxz
add
dec
xor
test
dec
mov
lock
and
jmp
push
fmuls
lret
movsl
mov
inc
mov
int
aam
mov
fnstenv
mov
push
cmpsl
out
pop
pop
mov
mov
add
test
ljmp
add
ret
and
std
daa
xchg
pop
sbb
pop
pop
data16
cmp
pop
pop
mov
test
mov
jp
pop
lds
test
fimull
bound
push
test
sbb
xchg
repz
cmp
push
pop
or
adc
enter
add
or
pop
jbe
pop
loop
inc
aad
xchg
out
fistl
pop
scas
xchg
mov
je
xlat
sub
dec
cs
dec
mov
fidivs
mov
inc
fdivrs
test
jmp
jp
and
mov
outsb
mov
inc
adc
inc
ficoml
and
xor
push
jmp
jp
jle
xchg
int
jno
and
add
stos
add
and
push
cmp
and
cli
mov
outsb
stc
aam
bswap
in
ss
pushl
decb
or
inc
fsubrl
and
fsubr
or
test
daa
mov
into
pop
dec
lahf
sbb
xchg
arpl
xchg
cmp
icebp
loope
int
rolb
push
inc
cmpsb
mov
ss
adc
push
sbb
dec
fs
jno
xchg
leave
adc
xor
mov
btc
out
jmp
test
push
add
sbb
cmpsb
jl
inc
ja
dec
xor
pop
mov
repnz
cs
cs
jecxz
or
lret
jns
cmp
xchg
imul
das
or
xchg
inc
out
das
iret
movb
stos
jmp
mov
hlt
xchg
shlb
fmul
mov
outsl
push
lret
pushf
adc
jecxz
imul
add
or
push
bnd
int
mov
sbb
insb
out
hlt
fstpl
lahf
push
or
mov
pop
pop
mov
add
and
xor
mov
jl
divb
stos
cmp
and
xor
loop
mov
in
cs
mov
sbb
addr16
push
jle
cmpsb
or
sub
es
jnp
cmp
push
lods
adc
add
jb
xlat
xchg
or
lahf
pop
scas
test
add
cmpsb
sub
gs
shlb
test
gs
sbb
mov
cltd
daa
jmp
rorl
hlt
mov
sbb
or
lcall
add
cltd
divb
and
and
mov
gs
test
dec
popf
mov
mov
mov
int
mov
adc
cli
pop
out
testl
aam
lcall
fldcw
pop
rol
xchg
sti
in
xchg
loop
push
imul
mov
add
mov
lret
shll
mov
push
dec
xchg
aam
xlat
pop
sub
adc
iret
adc
cmpsl
and
jecxz
test
out
pushf
aas
pusha
imul
mov
ja
mov
and
dec
dec
ret
fdivr
cmp
cltd
adc
lock
out
fisttpll
rcrl
mov
xor
fstpt
dec
mov
loopne
xchg
xchg
loopne
push
das
ret
xchg
inc
test
fldl
pop
imul
fisttps
inc
fdivl
leave
push
xor
testb
add
ret
cmp
test
push
jp
dec
sub
push
sbb
dec
jecxz
cltd
mov
xchg
in
movq
enter
mov
jg
ds
fcmovne
int3
into
push
std
lret
xchg
roll
jl
out
or
push
cwtl
sub
std
testl
xlat
push
and
mov
fisubl
jge
add
cmp
test
mov
jnp
add
jbe
dec
mov
ljmp
lret
push
jg
shrd
cmp
xor
sub
test
imul
rcrb
sbb
push
cmp
adc
in
gs
flds
les
add
xchg
cmpsb
in
jnp
ljmp
cwtl
xlat
xor
ja
cli
and
inc
repz
pop
cmc
stos
ss
push
mov
jmp
repnz
jge
adc
insb
add
pop
mov
xchg
push
adc
into
inc
mov
dec
push
jne
clc
insb
rcrb
cmp
xchg
mov
lock
lods
add
cmpb
cmp
loopne
out
bound
daa
adc
loope
dec
mov
add
clc
mov
pop
lret
pop
pop
dec
fcompl
push
decl
cmc
sahf
icebp
mov
lea
das
dec
or
je
push
inc
cmpsb
sbb
xchg
lret
inc
xchg
mov
xchg
mov
xchg
sub
insb
fsts
jae
cmp
xor
jnp
push
xchg
sub
rcll
aaa
imul
scas
lret
or
mov
add
sahf
mov
les
in
mov
push
mov
jbe
adcb
mov
das
jno
jecxz
mov
hlt
pmulhw
xchg
shrl
dec
mov
inc
int
pop
aad
dec
out
sbb
leave
or
dec
and
and
jno
mov
sbb
out
fxtract
push
sahf
jecxz
cmpsb
cmp
out
sbb
sbb
jo
movsb
inc
mov
ret
imul
sub
or
inc
bound
lea
imul
jg
mov
sbb
mov
push
or
add
test
imul
jae
add
xchg
xor
push
or
mov
shlb
ret
inc
hlt
scas
mov
popl
sti
add
cmpsl
pop
lea
xchg
icebp
or
xchg
and
call
cmp
mov
movsl
xor
pop
iret
repnz
dec
and
lods
imul
and
lea
push
out
popf
ljmp
stos
lret
mov
mov
js
data16
out
xchg
ficompl
and
inc
dec
imul
push
xchg
push
movsl
inc
adc
jmp
aad
dec
push
cmpsb
sbb
les
stos
push
adc
into
lea
push
mov
mov
add
dec
lock
iret
jle
jl
sub
add
leave
mov
fisubrl
sahf
imul
cmp
lret
jg
repnz
xchg
aas
cli
sbb
xor
scas
repz
fdivs
push
int
or
sub
xlat
and
test
xor
jb
mov
inc
sti
enter
addr16
add
nop
pop
bound
xchg
cltd
lret
jnp
mov
call
dec
ret
fdiv
addr16
sub
mov
pop
nop
jnp
mov
cmp
cmp
add
and
ljmp
cmpl
jb
cmp
jg
push
imul
hlt
iretw
cmp
mov
mov
xor
popf
in
adc
xor
lods
jp
dec
adc
mov
mov
mov
mov
movsb
ret
es
int3
jmp
sub
xchg
jl
add
stos
in
scas
push
push
sbb
inc
nop
psubsw
sbb
adc
loope
dec
sbb
jecxz
push
or
push
sub
test
xchg
pop
popa
cwtl
jo
lahf
div
aad
in
getsec
lods
mov
adc
push
jb
jge
loopne
inc
rclb
inc
mov
push
or
fs
dec
pop
adc
push
or
pop
cmpsb
mov
adc
movl
cmp
cmp
mov
pop
mov
repnz
shrb
or
mov
pop
adcl
out
or
shll
or
mov
mov
mov
leave
insb
cmp
sbb
push
iret
jae
inc
jp
adc
xor
popf
aas
xchg
movb
test
es
lea
sti
outsb
push
es
repz
rcrb
aad
repnz
scas
mov
jns
jecxz
pop
inc
popf
cmp
ljmp
pushf
fwait
pop
xor
stos
imul
add
push
fcoml
mov
out
cmpsl
add
shr
movsl
ret
adc
mov
out
mov
ret
and
stos
bound
or
mov
sbb
xchg
icebp
dec
mov
pop
aas
hlt
ss
adc
dec
movsl
adc
jbe
aad
pop
rorl
mov
mov
xchg
lds
cli
mov
outsl
outsl
fldl
fiaddl
dec
mov
xor
adc
enter
xchg
cmp
cld
push
pop
pop
pop
jno
jge
cld
stos
push
hlt
mov
or
xchg
xchg
scas
into
int3
mov
inc
sub
dec
scas
nop
shl
push
mov
jg
lret
pushf
inc
cmpsb
lea
daa
shll
cmpsl
or
sub
sbbb
in
add
outsb
mov
clc
outsl
in
lret
leave
sub
xrelease
mov
shr
mov
xor
adc
jne
lods
imul
mov
mov
push
sub
leave
ljmp
pop
gs
xchg
push
mov
fmul
lahf
test
inc
int
cltd
push
push
inc
jmp
andb
xchg
mov
xor
lock
cmc
inc
pop
rclb
mov
pop
fwait
xlat
mov
jbe
daa
push
mov
scas
mov
push
stos
enter
sub
pop
mov
pop
mov
outsl
push
aaa
push
test
mov
out
pop
mov
fs
dec
cld
cmpsb
adc
adc
lret
loope
adc
or
push
iret
in
std
jae
sub
leave
pop
fistps
lret
jne
mov
mov
pop
addr16
jle
and
sbb
cmc
ret
or
mov
pop
add
dec
pop
les
push
insb
xchg
push
push
and
aaa
lret
inc
mov
push
add
je
dec
cmpl
inc
in
fcoml
imul
adc
in
sub
jmp
fbstp
dec
inc
xchg
fwait
subl
movsb
outsl
add
cli
add
sahf
ss
in
cwtl
imul
fisubrl
add
bswap
jno
insl
xor
call
mov
rolb
cmp
xchg
dec
icebp
mov
hlt
push
sbb
inc
push
xchg
arpl
adc
jo
dec
enter
mov
cmp
and
scas
lods
ficoml
fs
and
and
dec
sub
xchg
fnsave
cmp
addr16
jo
fldt
stos
xlat
hlt
jp
adc
adc
cwtl
leave
jnp
bnd
ss
shll
ficompl
pop
test
xor
in
mov
in
cli
lahf
mov
xor
mov
jge
insb
push
lahf
out
pop
mov
push
jne
sti
fisubs
pop
jl
sub
sahf
jmp
fs
repnz
into
pop
jns
xor
mov
add
and
ljmp
popa
and
inc
and
ret
psllw
xor
in
and
xchg
into
push
adc
cwtl
xor
into
lods
mov
mov
lods
in
es
inc
jo
or
adc
sub
addr16
and
andl
or
push
test
in
jns
mov
insl
or
jne
ret
fcomp
mov
sti
orb
lods
sbb
in
cltd
incb
cmpsb
es
shrb
sbb
pop
cmp
lds
jo
dec
pop
xchg
mov
mov
popa
enter
test
sub
test
dec
jmp
in
jg
xchg
test
int3
ss
in
xchg
movsb
cmp
sbb
xor
or
dec
arpl
jecxz
test
mov
mov
dec
pushf
xchg
adc
call
push
xchg
mov
inc
cli
sbb
xchg
fcom
jmp
or
mov
rclb
push
cmp
into
xor
lds
jno
stos
pop
push
pop
push
pop
jo
mov
sbb
add
adc
rcrb
ja
repnz
ror
sub
aam
cld
sti
movsl
xchg
jmp
cmp
arpl
cld
push
mov
je
mov
pop
cli
repz
mov
in
loope
add
xchg
sbb
and
sbb
jb
arpl
push
scas
push
outsl
mov
cld
xchg
lret
in
pop
sbb
aam
sub
shrb
push
adc
fsubrl
or
cmp
mov
test
call
je
imul
dec
aam
pop
fisttpl
into
sub
adc
ret
push
dec
jne
push
xchg
aaa
sbb
cwtl
jge
sarb
mov
popa
scas
movl
andb
mov
and
addr16
std
out
in
mov
lahf
jmp
lret
aam
mov
cld
xorb
ficompl
cmc
loope
out
lcall
pusha
fildl
cmp
mov
push
scas
sti
ror
lret
shlb
insb
dec
aaa
sbb
lret
cli
cmp
insl
jecxz
add
shl
lahf
cli
scas
pop
sbb
imul
and
xchg
sbb
fisubs
and
insl
mov
or
std
add
push
push
xor
xchg
pop
mov
cwtl
mov
mov
adc
mov
add
push
aaa
dec
sbb
push
lods
pushf
xchg
push
cmp
mov
push
dec
pop
fisubl
sbb
mov
jb
sti
sub
xor
mov
xchg
push
lds
lret
out
cld
mov
pop
cmp
cmpsw
pop
push
inc
rcll
add
cmpsb
push
push
imul
shr
mov
push
outsl
pop
pop
cli
and
int3
enter
ljmp
add
negl
and
aaa
sti
pushf
mov
sbb
mov
icebp
mov
fs
and
ljmp
mov
sub
movsl
sub
out
pop
stos
and
inc
test
loop
mov
repnz
push
popa
xchg
push
jle
jno
dec
orl
aas
popa
ret
pop
push
icebp
rolb
jge
pop
jl
push
xor
mov
inc
adc
sbb
xor
adc
das
scas
sub
inc
xchg
mov
pop
cmp
ss
sahf
lret
jle
dec
mov
divl
or
push
jecxz
cmp
jno
shl
adc
mov
mov
and
lahf
rclb
ret
mov
lahf
mov
push
xor
xlat
push
in
ja
outsl
mov
lcall
jp
jmp
aad
or
addl
mov
ficompl
xchg
sbb
clc
in
insl
jle
jmp
sbb
cmp
xchg
out
insb
mov
cmp
ret
arpl
pop
aaa
jg
ja
jmp
inc
pop
leave
add
or
test
mov
inc
inc
mov
scas
xor
clc
adc
into
adc
mov
stos
mov
je
pop
mov
idivl
fsubs
xor
lods
pop
std
divb
sbb
bound
add
loopne
nop
jg
jnp
nop
push
sahf
out
inc
push
mov
add
sbb
xor
pop
loop
out
sbb
pop
xor
jae
cli
jb
int
xor
jne
outsl
fiaddl
vsubps
sbb
push
repnz
sub
daa
and
pop
mov
mov
ds
pop
sbb
and
xchg
clc
adc
out
js
push
lock
jg
adc
lahf
cmc
stc
sbb
adc
lret
loopne
mov
out
stos
lds
push
adc
nop
out
jle
xchg
outsl
je
data16
mov
fildl
mov
dec
dec
lret
xorb
xor
cwtl
mov
nop
leave
cwtl
sub
push
pop
jo
arpl
lahf
movsb
dec
icebp
je
lods
jns
dec
cmp
cmp
mov
scas
and
in
test
into
push
scas
jge
daa
les
add
jne
inc
jmp
mov
dec
xchg
adc
aad
aad
dec
sbb
pop
sub
test
and
xchg
push
ret
cmp
inc
pop
ljmp
mov
jp
xor
ds
mov
decb
popa
outsl
pop
adc
leave
shl
stos
jbe
fwait
mov
sub
jns
mov
mov
sahf
icebp
aam
jbe
out
dec
movsl
inc
pop
outsl
int3
or
xchg
push
fs
push
pop
pop
xchg
push
sbb
nop
lods
arpl
add
rcrl
xor
stc
shlb
sahf
sbb
push
jmp
mov
sub
in
jle
test
sbb
mov
xchg
jno
cmp
loope
loope
push
lods
add
andb
cmp
jge
pop
jo
bound
dec
jl
shlb
mov
addr16
push
cs
mov
call
adc
mov
xor
mov
jp
cltd
scas
cmp
and
cmp
inc
mov
ds
andl
adc
stos
insl
aaa
cltd
add
push
cmpsl
dec
cmp
cli
add
je
xchg
scas
or
out
cmpsb
mov
call
hlt
lahf
fstpt
out
dec
in
sub
cld
dec
cld
into
jecxz
out
in
and
cli
xlat
fcompl
loopne
fs
sub
sub
repz
scas
sbb
mov
pop
xchg
push
mov
lock
push
rcrb
nop
jl
test
popa
hlt
std
out
jae
mov
lea
jmp
sub
test
and
insb
sub
stc
xchg
leave
inc
loop
mov
cmp
mov
cmpb
cmc
std
dec
lods
ljmp
je
ss
xchg
in
adc
popa
jnp
imul
xchg
rcr
mov
sarl
or
add
dec
das
sub
push
pop
stos
xor
cmpsb
dec
movsl
cmp
xor
int3
mov
cli
xchg
inc
push
pop
and
pop
enter
add
dec
add
mov
gs
jb
movsb
into
mov
decb
xchg
or
ja
mov
push
lret
push
rorb
xor
fwait
adc
jl
add
sub
push
mov
jg
insb
ds
sbb
push
push
orl
and
push
cmp
cmc
sub
mov
mov
sub
push
jg
push
xor
out
dec
push
dec
jp
insl
das
stos
lds
cmp
imul
iret
pop
outsb
orl
adc
jno
lds
or
movsl
in
or
xchg
xchg
sbb
push
into
cmp
ds
push
pop
push
pop
adc
das
test
repnz
cmp
aam
fsubrl
scas
mov
test
mov
popf
in
sub
mov
cmp
mov
fmul
mov
lcall
nop
and
push
jnp
lock
mov
pop
in
lret
out
loopne
out
out
dec
dec
nop
jge
fs
or
test
cmc
sub
inc
inc
pop
sahf
xchg
test
ljmp
inc
push
scas
xor
and
pop
lea
jb
psubb
rcrl
sbb
push
rorl
push
push
rorb
mov
je
cmc
mov
jb
add
out
jne
fwait
mov
mov
cmp
mov
inc
cmp
push
orb
lahf
fsubrs
cmpsl
gs
cld
or
xchg
ror
arpl
mov
sbb
int
mov
je
xor
mov
cwtl
jp
or
sub
xor
lret
xor
adc
add
mov
scas
jbe
push
cmp
xchg
roll
imul
xor
mov
cli
movsb
mov
dec
mov
xchg
push
inc
fstpt
outsl
mov
stos
imul
in
mov
sbb
gs
cmp
or
test
mov
adc
cmp
sub
jmp
or
fdivrp
pusha
inc
jl
leave
jle
sub
loopne
das
sub
and
inc
int
pop
push
and
jg
pop
jg
icebp
stc
mov
lret
jle
loope
mov
and
jg
inc
fstpt
mov
lock
push
loope
add
push
imul
out
out
roll
mov
fsubr
lahf
xor
jp
pop
and
jl
inc
stos
nop
push
cmp
hlt
sbb
in
cli
inc
mov
arpl
fidivrl
ret
test
movsb
sub
dec
arpl
push
ss
adc
mov
jmp
test
out
push
sbb
out
in
xor
xchg
pop
pop
jmp
aad
jne
stc
mov
pop
loopne
lods
cltd
pop
or
sahf
jnp
into
jo
xor
lret
mov
lret
push
ljmp
mov
jmp
cltd
lock
stos
xor
push
sar
mov
xchg
call
push
ss
dec
data16
jbe
xchg
loope
nop
addr16
pop
dec
scas
movsl
repz
aad
xchg
popa
sbb
popf
mov
addr16
xor
rorl
roll
pop
jmp
fdivr
adc
insb
add
xor
xchg
mov
arpl
dec
in
out
imul
cltd
aas
fnstsw
pop
jge
sahf
lret
dec
clc
popf
insl
inc
inc
fistpll
jae
fldt
insl
imul
jae
xchg
push
sbb
adc
cld
or
mov
imul
sti
jle
fwait
sbbl
jl
aaa
and
mov
cmp
jne
mov
mov
sub
push
jnp
mov
in
dec
cwtl
clc
popl
add
adc
inc
lods
inc
sbb
and
xchg
sahf
ret
adc
mov
sub
add
outsb
mov
xchg
lahf
dec
icebp
fxch
insl
and
mov
in
lock
shl
bound
jne
enter
mov
popf
pop
mov
sbb
mov
jp
mov
adc
sbb
jae
dec
push
cltd
adc
cmp
pop
les
add
xchg
mov
sahf
movsb
adc
jecxz
mov
scas
lods
cmp
dec
xchg
cmp
test
jl
mov
sbb
inc
xchg
aas
fcmovnbe
mov
jl
cmp
shl
outsl
shl
cld
pusha
sub
push
inc
jno
in
mov
fnstsw
push
mov
mov
out
clc
xchg
mov
dec
gs
stos
icebp
sahf
popa
add
fsubs
add
mov
test
xchg
pop
jbe,pn
jns
mov
loopne
push
and
ss
sahf
les
lret
dec
mov
mov
adcl
sub
pop
mov
xor
push
mov
movsb
mov
leave
scas
popf
or
jne
les
subl
bound
push
add
pop
add
cmp
sahf
or
rcl
scas
loope
push
cmc
ror
int
scas
jo
cmp
in
jnp
jae
push
subl
xchg
jge
add
rcl
loop
sub
and
add
mov
mov
inc
xlat
or
sbb
cmpsl
imul
xchg
jns
movsl
push
cmpsb
shrb
jns
fcmovnbe
xchg
mov
jae
push
into
dec
cmpb
cmpsl
xchg
adc
cmp
jb
xor
adc
push
and
roll
fiadds
sti
dec
pushf
mov
js
aaa
pop
dec
in
stc
aam
and
dec
notb
lds
ss
mov
mov
add
add
push
mov
in
jbe
inc
and
push
mov
and
outsl
jmp
pop
es
ds
clc
xchg
dec
mov
adc
aam
xor
mov
jne
cwtl
in
inc
sbb
and
inc
orps
mov
jge
stos
push
ljmp
fsubrs
loopne
push
add
aas
inc
jns
out
dec
sub
push
ljmp
adc
cmc
ret
pop
push
xchg
adc
pop
outsb
xor
adc
and
fisttpl
mov
xlat
loope
rorl
insl
loopne
cmp
stc
fsts
adc
subb
and
ljmp
push
mov
arpl
shrb
ror
xchg
iret
pop
adc
in
and
mov
xor
jmp
sub
call
add
insb
cmp
fwait
arpl
dec
rcrl
je
ljmp
imul
bound
and
xor
adc
adc
lea
dec
icebp
pop
cltd
mov
xchg
loop
out
aaa
sahf
movsl
mov
call
xlat
push
notl
je
push
push
ljmp
test
lods
inc
ret
pushf
pop
mov
jno
call
aaa
fildll
lods
dec
fucomip
pop
cmp
and
std
add
scas
cmc
xchg
mov
mov
sub
add
pop
clc
in
mov
aad
pop
push
or
into
xchg
mov
jae
ret
dec
mov
in
outsl
negl
pop
int
dec
shll
fisttpl
stc
jg
jno
jle
test
cmpb
mov
ret
mov
push
stos
scas
mov
sub
push
sub
loopne
stc
test
dec
aaa
shlb
jbe
jg
push
lock
push
testb
in
int3
cld
scas
out
aam
popf
jne
sub
mov
in
cmp
mov
pop
xor
inc
dec
or
fistps
mov
cmpsl
movsb
pop
jbe
test
scas
mov
pop
mov
mov
das
in
push
sbb
push
arpl
xchg
dec
mov
fwait
lods
dec
cmpsl
mov
test
pop
outsb
dec
push
dec
mov
inc
inc
dec
cmp
jl
pop
je
jl
fs
in
dec
icebp
xor
pop
js
out
cmp
mov
mov
fcomi
dec
pop
jmp
adc
mov
cmpsl
ss
out
cli
cmpsl
sbb
mov
iret
cmp
inc
xchg
mov
push
scas
dec
xchg
or
mov
push
bound
xchg
cs
xor
cmp
sub
xlat
repz
mov
sti
sub
orb
and
stos
test
sbb
sti
shlb
sub
sub
popf
lret
hlt
jmp
shll
add
cs
cltd
repz
push
test
outsb
aaa
enter
mov
dec
in
jge
out
xchg
xlat
mov
push
dec
clc
leave
adc
inc
sub
ds
mov
dec
leave
out
clc
cmc
push
fildll
xchg
xchg
hlt
insb
fwait
jnp
movsb
cmpsb
sahf
pop
inc
jo
ljmp
inc
dec
and
movb
test
aam
test
xor
sub
js
pop
cli
scas
pop
add
inc
lret
sub
add
jb
xor
cli
push
mov
cmp
sub
sti
inc
dec
add
pop
cmp
js
xchg
xor
push
add
or
sub
mov
cmpsl
mov
sbb
fwait
pop
mov
repz
and
or
outsb
pop
mov
faddp
inc
add
aam
ret
ljmp
inc
cli
enter
and
in
fidivrl
push
push
pop
xor
pop
mov
in
xchg
jg
mov
push
lcall
mov
scas
subb
movsb
pop
inc
stc
lret
xor
lods
and
fstpt
std
inc
inc
test
in
aas
jecxz
popf
mov
stc
fcmovnu
mov
push
repnz
insl
push
pop
inc
add
shrb
add
hlt
out
adc
add
outsb
dec
or
arpl
jnp
jns
mov
out
popa
fistl
pop
scas
pop
lock
aaa
xor
dec
pop
arpl
mov
std
cmp
fsubs
sbb
mov
outsb
cmp
jnp
repz
push
cmp
dec
jmp
aas
arpl
mov
mov
out
jmp
mov
xchg
push
xchg
sahf
mov
std
in
dec
mov
adc
testb
shll
aam
out
clc
outsl
loopne
add
pop
add
sub
jne
sbb
lods
insb
mov
lret
cltd
xchg
stos
cltd
bound
cmp
dec
adc
pop
stos
aad
xor
pushf
icebp
xor
inc
inc
mov
sti
pop
push
test
in
push
pushf
fisubrs
popf
push
lds
xchg
cmp
jge
movb
out
test
pop
cwtl
hlt
adc
out
loopne
fs
sbb
jb
mov
sub
ret
xor
mov
sbb
mov
std
or
jecxz
in
in
jo
lds
dec
int3
pop
repz
ja
cmpb
lahf
sbb
xchg
mov
dec
out
dec
push
cmp
dec
jae
add
jo
xchg
adc
mov
adc
insl
cltd
outsl
les
cmp
add
insl
movb
test
shrb
jo
out
rcll
sti
nop
fstpl
or
add
into
pop
add
cmp
push
mov
ret
sub
mov
cmpl
mov
xchg
or
adc
push
pop
push
pop
cmpsb
cmp
daa
cmp
cld
aas
mov
shlb
pop
lahf
data16
sbb
fcoml
mov
lahf
inc
mov
ja
imul
xor
and
fisttpll
push
lods
cmc
jnp
jmp
xchg
fwait
xor
fcmovnbe
lret
push
adc
cmp
cmp
push
mov
mov
xchg
out
sbb
xchg
jl
in
pop
jle
mov
cmp
and
sub
int3
sbb
lret
lea
test
lea
hlt
cmpsb
inc
mov
sub
scas
std
lds
rcll
mov
cmp
inc
in
inc
mov
pop
test
push
aam
lahf
xchg
cmpb
cmpsb
outsb
data16
lods
rorb
imul
cltd
ljmp
nop
in
dec
or
fdiv
and
mov
sbb
and
int
mov
add
out
mov
ss
lock
adc
mov
imul
adcb
inc
fldcw
testl
mov
adc
xchg
es
in
nop
pushl
das
inc
pop
fisubs
pop
call
push
jo
pop
inc
inc
inc
ds
dec
cmp
mov
and
jge
addb
jb
mov
mov
push
add
stc
inc
sahf
pop
adc
xchg
cmp
xlat
sbb
or
call
push
insb
pop
fstpl
rorb
or
pop
jmp
mov
push
stc
jg
xchg
xchg
jno
push
mov
loopne
cmp
fistps
pop
call
lock
mov
mov
ds
jle
inc
das
imul
and
bound
stos
jmp
gs
je
xchg
cmpsb
add
and
push
pusha
dec
add
mov
aam
push
sbb
jp
mov
or
pop
enter
sbb
pop
add
out
pop
mov
push
mov
and
scas
push
inc
in
enter
ss
or
mov
mov
loope
cmpb
xchg
addr16
and
push
xchg
push
and
and
test
sbb
enter
push
and
jb
push
lock
cmpsb
mov
jecxz
dec
scas
adc
shlb
inc
add
pop
jmp
ret
fucomp
out
xchg
lock
enter
sub
out
test
xchg
jnp
jmp
cwtl
hlt
fs
scas
adc
dec
outsb
mov
xchg
movsl
push
mov
pop
and
lret
inc
popf
cmc
prefetchwt1
pop
mov
cs
push
inc
jmp
leave
push
mov
mov
je
push
scas
mov
inc
leave
iret
jbe
sbb
cmpsl
sti
outsl
pop
dec
mov
loopne
add
pop
adc
add
mov
adc
add
test
js
movsl
xlat
mov
stc
addr16
clc
sar
hlt
sti
sahf
jp
ljmp
loop
adc
rolb
ret
sbb
adc
inc
mov
stc
push
or
jge
mov
int3
inc
jge
jbe
pop
ret
push
aas
and
cmpsb
arpl
sarb
sbb
jae
dec
fwait
sub
lods
mov
jo
jl
mov
loopne
mov
sbb
sub
cmp
imul
xchg
mov
insl
scas
loopne
jge
xchg
xor
repz
je
jg
insb
mov
mov
or
dec
inc
push
dec
fadds
sti
mov
pop
mov
xchg
js
mov
push
popl
inc
xlat
xchg
fwait
lret
mov
lods
adc
mov
popf
add
jae
in
push
jns
fcompl
fildll
and
mov
cmp
lret
popf
mov
lods
inc
mov
push
push
insl
data16
mov
ficoml
pop
cmc
xchg
cli
add
jg
lahf
and
loop
dec
fucomi
or
shrl
cmp
push
and
adc
imul
sbb
fnstcw
in
cmpsl
add
mov
mov
push
push
push
loope
fisubrl
shrl
mov
cmp
out
or
ss
jo
repz
inc
add
push
mov
cld
aas
stos
gs
pushf
push
imul
int3
jne
lret
and
nop
inc
in
dec
frstor
das
movsl
push
repnz
out
adc
fcompl
push
iret
fisubl
jp
xchg
sbb
cltd
or
jo
clc
dec
mov
jbe
aas
pop
mov
cmp
mov
popa
inc
mov
add
rcrb
insb
enter
xchg
or
push
mov
stos
call
ss
sbb
push
clc
xchg
or
mov
and
jg
and
mov
mov
cwtl
xor
dec
inc
xlat
dec
in
aam
ret
mov
imul
dec
jns
das
lahf
scas
dec
jmp
jl
push
es
adc
mov
cmp
pop
jge
mov
jmp
cmp
fdivrs
loope
in
and
enter
shl
test
aam
mov
push
and
sub
daa
jnp
jmp
int
in
jbe
aad
inc
mov
ss
nop
dec
ret
add
mov
mov
jb
jecxz
cmp
cmpb
data16
push
lods
jae
jne
push
cli
ficomps
lods
jno
std
orb
lods
jge
leave
ret
mov
mov
dec
and
dec
push
xchg
sarl
out
mov
mov
ss
add
test
repnz
sub
xor
call
dec
jmp
pop
add
and
lret
inc
loop
dec
xchg
sbb
pop
ss
inc
jbe
xor
fs
enter
lahf
dec
pop
push
jno
push
cld
jo
inc
mov
rcrb
bound
mov
pop
xor
rolb
sub
adc
xchg
mov
pop
jnp
jg
cmpsl
sub
cmp
sub
cld
xor
cmp
pop
dec
cmp
movsb
fsubrs
adc
lcall
les
sti
pop
adc
sbbl
out
and
pop
faddp
negb
sub
inc
mov
aad
mov
or
fwait
add
mov
fsubrl
jbe
push
xor
movsl
cmc
mov
jbe
clc
cmc
pop
dec
out
push
mov
popf
lret
lcall
xor
adc
dec
or
adc
mov
mov
cmp
fcomps
jae
mov
cli
pop
scas
hlt
ret
xchg
pop
cmp
mov
sub
sahf
sub
cmp
adc
call
popf
jbe
mov
cmpl
sti
arpl
fiadds
jo
fidivs
xor
cmp
cmp
pop
ja
pop
push
out
inc
pop
inc
xchg
mov
mov
mov
sbb
test
inc
fsubs
js
stos
pusha
adc
daa
jbe
sbb
inc
jb
outsb
insl
xor
lret
subb
pop
xor
out
and
arpl
cwtl
adc
cmp
mov
pop
sahf
and
lret
decb
ljmp
cli
jle
mov
mov
xor
in
fwait
lds
lcall
pop
int
xchg
insl
negl
cmpsb
push
call
insl
push
cmpb
pop
pop
add
push
aas
jne
loope
movsb
xchg
xor
push
xor
loopne
int
std
xor
inc
xchg
mov
inc
int3
cmp
jge
rcll
sbbl
cwtl
dec
fstps
lds
aaa
cltd
and
pusha
notb
lret
sbb
hlt
mov
imul
popf
cmc
and
mov
loop
jns
or
dec
cmp
push
clc
nop
in
adc
xlat
push
xchg
in
shll
popa
scas
push
sbb
push
mov
fistpl
xchg
ss
lock
and
movl
jae
test
lods
aam
xchg
adc
nop
adc
arpl
cld
mov
pop
mov
dec
jo
shlb
call
sbb
and
jbe
add
mov
xlat
rcll
cwtl
jp
shll
mov
push
mov
pop
mov
push
sub
sub
mov
addr16
cmpsl
addr16
dec
int3
imul
cld
xor
xor
lahf
push
cmp
ret
sub
push
adc
fisubrl
in
test
mov
mov
xchg
mov
inc
arpl
dec
add
mov
xchg
sahf
rorb
outsb
out
cmp
xchg
or
or
mov
mov
lods
pop
xor
cli
cmp
fcomps
shlb
adc
or
jl
addr16
js
movsl
sarb
jmp
fnstsw
push
add
pushf
mov
cmp
hlt
mov
push
rorb
imul
mov
push
or
arpl
sbb
lret
insb
sbb
aaa
jecxz
push
mov
das
fmull
xchg
mov
add
jae
xor
push
and
mov
gs
test
popf
dec
adc
ss
nop
incl
fnstcw
pop
jl
das
mov
inc
mov
mov
adc
test
dec
orl
dec
pop
mov
imul
mov
push
movsl
gs
pop
cmp
sahf
fsubrs
sbb
enter
lret
cmp
rorl
push
push
mov
mov
jge
leave
mov
and
jo
adc
daa
dec
push
inc
testb
sbb
loopne
sub
mov
fs
mov
pushf
test
sbb
mov
fdivs
dec
or
xor
sahf
cltd
lods
ret
sarb
mov
mov
cmp
aas
dec
and
xchg
jbe
jp
das
in
sbb
xchg
sbb
pop
inc
adc
xor
and
lahf
clc
sbb
inc
lock
ficoms
mov
movsl
push
fsts
xchg
in
lret
jle
inc
jbe
clc
xchg
mov
adc
in
mov
fsts
xchg
and
rcrb
lret
and
fwait
stos
cmpsb
jmp
shr
subb
mov
sub
test
sub
sbb
adc
add
sub
pusha
inc
cltd
daa
mov
push
dec
cmp
rcrl
sbb
rcll
sbb
ljmp
add
jno
pusha
stos
dec
add
sub
and
shll
movsl
lea
sub
testl
xchg
xchg
sub
cld
push
int3
test
aaa
and
push
adc
inc
fldl
arpl
jnp
aas
cmp
mov
push
mov
das
sub
cmp
sahf
imul
outsb
popf
mov
mov
or
push
adc
mov
adc
dec
iret
mov
push
insl
push
pushf
inc
cwtl
test
das
add
shll
movsb
pop
jge
jno
jge
pop
and
push
pop
mov
mov
repnz
mov
add
lahf
popa
das
adc
push
insb
push
jl
cmpsl
xor
cwtl
pushf
out
cmpsb
add
lods
andl
cmpsl
mov
jg
mov
xchg
jp
mov
sti
stos
call
xlat
inc
or
in
andb
xchg
mov
notb
dec
pop
scas
dec
cwtl
out
jmp
rclb
mov
push
jle
or
inc
pop
xor
ror
dec
in
call
aas
or
push
dec
xor
mov
add
dec
insb
fcompl
decl
xor
stos
test
adc
in
mov
xchg
push
std
loop
sub
enter
out
rolb
gs
mov
iret
out
and
adc
std
lret
fdivl
jg
and
xchg
je
push
mov
sbb
and
pushf
xor
in
mov
stos
adc
filds
aad
dec
inc
add
push
popf
adc
push
mov
lds
sbb
gs
inc
push
mov
fcmovnb
sbb
fwait
push
mov
jl
iret
cltd
out
push
mov
xchg
adc
inc
imul
sub
mov
test
cltd
mov
rol
arpl
sbb
or
dec
sbb
sbb
jbe
or
mov
sti
push
int
inc
fidivrs
cmp
and
lods
cmp
addr16
sub
mov
or
loop
mov
sbb
mov
add
jecxz
sub
and
dec
fidivrl
std
push
sbb
pop
mov
lods
lds
call
sub
xor
sub
jg
push
jge
mov
and
call
inc
sbbl
test
cld
sarl
xchg
mov
push
fwait
add
pop
or
arpl
mov
dec
fistl
insl
test
mov
adc
xchg
inc
add
jno
xor
add
inc
loopne
adc
ljmp
loopne
jecxz
or
push
sahf
data16
popf
mov
lret
gs
push
push
outsb
push
push
push
xor
cmp
fisttpll
adc
xchg
pop
xor
fildll
xlat
mov
les
stos
mov
cmpb
lahf
enter
movsb
inc
pop
cmp
lea
mov
sahf
jbe
add
imul
sub
stos
sbbl
mov
mov
arpl
lcall
jbe
test
add
cmc
ljmp
ja
jp
sub
and
push
das
pop
mov
and
je
pop
inc
icebp
inc
nop
out
icebp
sub
pop
push
mov
fwait
sub
cli
arpl
xchg
scas
loopne
xor
cmpsb
icebp
orl
repz
sub
js
xorl
lcall
movsb
jg
rorl
test
push
cs
mov
mov
or
loop
push
push
dec
xor
repnz
push
in
adc
arpl
or
pop
sub
add
data16
and
lds
lea
ljmp
lahf
push
push
mov
es
pop
sbb
in
xor
stc
xor
repz
push
push
daa
clc
sub
leave
mov
jo
iret
aam
or
out
sub
movsb
xchg
xorb
int3
cmp
loop
mov
adc
es
popf
ret
add
add
cmp
mov
out
xchg
std
fildll
adcl
arpl
test
mov
fidivl
popa
hlt
lods
sub
or
jge
mov
add
repnz
pop
push
stos
inc
out
cmpsl
call
data16
lahf
mov
dec
or
fadd
xchg
in
cmp
adc
mov
lock
bound
jmp
aad
xchg
sub
sub
int
scas
lock
into
das
mov
stc
enter
xlat
loope
pop
jmp
cmp
cmp
sti
fstps
xchg
pop
push
js
xchg
mov
xor
dec
jo
add
pop
cmp
adc
loope
fidivs
dec
shrb
lods
dec
push
ret
cmp
inc
mov
ljmp
outsl
push
pop
roll
out
repnz
out
or
insl
xlat
mov
jo
adc
inc
adc
add
xchg
dec
pop
pop
jg
repnz
push
sbb
ret
je
js
sub
xchg
adc
cmp
pop
mov
int
rep
in
xchg
xor
jecxz
jmp
mov
loope
mov
mov
mov
cmpsb
inc
push
xchg
arpl
pop
pop
inc
or
enter
sub
cmp
mov
or
leave
dec
push
mov
lret
movsl
shll
push
push
aam
outsl
stos
sbb
das
jmp
out
ljmp
jae
call
pop
out
es
insb
adc
sbb
adc
ljmp
mov
sub
push
pop
xor
sti
jmp
aad
pop
rcll
mov
xchg
lcall
pop
sub
cmpsb
stos
fisubs
mov
pop
xchg
outsl
inc
outsl
sbb
cmp
mov
mov
jge
jbe
je
dec
std
fxrstor
xchg
dec
xchg
adc
loope
adc
aam
inc
aam
cmp
cmp
lea
fisubs
pusha
shlb
in
push
stos
adc
dec
pop
addl
icebp
inc
xor
jg
fs
push
and
outsl
movl
sbb
and
ret
lcall
inc
fmull
enter
mov
add
adc
aaa
mov
push
lahf
sub
ljmp
out
pushf
xchg
jmp
addr16
out
add
sahf
jl
add
push
cmpb
jg
fbstp
jecxz
ret
mov
push
jb
mov
in
cld
push
pop
fidivl
mov
mov
je
xchg
jecxz
or
xor
mov
dec
and
sub
push
lods
loopne
ja
or
xchg
push
shlb
xchg
loopne
mov
inc
mov
lock
dec
out
cmp
dec
xor
shll
sbb
test
js
and
xor
push
push
adc
test
rorl
fwait
rol
push
loop
notb
cmp
pop
push
shr
xor
stc
sub
lods
dec
pusha
lret
test
xchg
fwait
test
imul
clc
shlb
and
inc
outsb
jb
jbe
sbb
add
pop
clc
pop
fdivrs
inc
mov
ds
push
jne
jbe
divl
mov
pop
sub
lret
xchg
mov
cmpsl
rcl
push
mov
sti
nop
sbb
adc
fists
push
mov
push
hlt
xor
cltd
ds
add
ret
pop
fdivrl
mov
je
addr16
es
jnp
fnstenv
pop
je
add
push
pop
cmp
insl
in
fwait
ja
xlat
or
int
lcall
sbb
jbe
std
lods
add
movsl
loopne
add
inc
sahf
jg
xlat
inc
mov
mov
popa
addb
leave
sbb
cltd
jp
cwtl
adc
out
or
test
mov
push
jecxz
aaa
mov
pusha
mov
pop
jne
arpl
loopne
push
mov
jae
pusha
in
fsubrl
jl
mov
jge
dec
pop
or
pop
sub
loope
jns
xchg
inc
mov
pop
lods
mov
repnz
jae
shl
js
mov
in
dec
cltd
shl
pop
jl
filds
dec
call
push
call
pop
push
dec
sbb
out
sub
fisttpl
push
sbb
fcomps
clc
dec
loope
mov
js
lods
dec
pushf
mov
and
stos
sub
rolb
dec
popa
aad
out
mov
fdivrs
popf
jge
mov
and
sbb
cmpsl
or
clc
cwtl
sub
lcall
fisubrs
test
loope
inc
adc
push
sbb
ret
cltd
adc
fiaddl
add
push
dec
fs
inc
xor
arpl
or
dec
jb
divb
cmp
and
fsubp
pop
cmpl
dec
arpl
and
dec
push
inc
mov
mov
sub
idivb
cmc
or
add
xchg
insl
clc
sbb
jae
in
dec
loopne
aaa
outsl
js
icebp
dec
add
pushf
cwtl
jne
lock
jecxz
xchg
lcall
add
and
or
bound
dec
and
and
lock
sti
adc
out
add
push
mov
daa
jge
mov
xchg
mov
cmp
scas
mov
jp
xchg
cmp
and
cmp
inc
inc
xor
stos
fisubrl
js
popf
icebp
add
dec
pop
shlb
imul
mov
enter
mov
and
sub
mov
out
xchg
push
fstpt
jmp
fcoml
adc
out
aam
test
inc
lretw
dec
jne
sub
or
lock
arpl
pop
cmp
movsl
bound
mov
or
inc
jmp
xor
xor
stos
jno
scas
inc
das
call
or
jle
cmc
mov
stc
outsb
mov
mov
call
cmp
mov
shrl
mov
sub
cli
out
pop
jo
in
je
mov
popl
pushf
sbb
and
push
sbb
or
pop
sbb
jno
cmpsl
iret
add
push
clc
repnz
and
insb
and
add
push
jle
sbb
sbb
fdivr
sbb
push
mov
clc
mov
mov
daa
mov
int
fisubl
les
mov
dec
rcll
pushf
mov
lret
sbb
and
fs
cmp
xor
xchg
mov
addr16
push
mov
fldcw
lods
pusha
add
sub
cmpl
inc
push
cwtl
pusha
sbb
idivl
lods
iret
clc
mov
xchg
mov
ss
pushf
mov
ja
in
adc
lret
and
call
or
or
sahf
es
pushf
fxch
push
stc
andb
hlt
push
in
dec
pop
xchg
aas
xor
xchg
aas
lds
insl
aas
lds
int
aad
mov
jne
shll
ljmp
mov
xor
xchg
cmp
push
scas
clc
gs
sub
and
xor
out
push
test
lods
lock
push
nop
ret
js
mov
call
lea
mov
xor
test
fdivrl
outsl
js
sub
aas
pop
mov
pop
repz
leave
popa
test
int3
mov
nop
enter
xlat
and
outsl
bound
je
icebp
ja
scas
add
push
gs
sub
jnp
fmulp
aad
data16
push
fwait
psllw
xchg
ret
mov
or
mov
cltd
imul
push
xchg
test
or
dec
adc
dec
sub
xor
xchg
mov
shl
sbb
mov
subl
xchg
pop
add
aam
push
fdivl
pop
pushf
and
jge
push
push
sbb
rcr
cmp
mov
stc
dec
cmpsb
mov
ret
lods
test
adc
xorb
fisubs
insb
mov
out
jbe
fmulp
adc
lahf
or
and
jbe
test
call
loop
out
pop
sbb
add
je
add
jmp
loopne
add
mov
jmp
jle
lret
sbb
js
popa
xchg
mov
jle
pop
push
mov
subl
cld
pop
jge
js
and
pop
mov
and
cli
mov
mov
sub
jle
add
xchg
cmpl
enter
test
inc
lds
push
mov
mov
mov
jo
mov
scas
leave
addr16
in
pusha
sarb
out
adc
repnz
adcb
push
cltd
js
insl
out
popa
scas
lahf
mov
pop
push
inc
xchg
jno
push
rcll
rcrb
mov
add
jnp
or
rclb
repz
pop
mov
in
or
jmp
mov
add
mov
inc
shl
out
and
mov
xor
sub
or
or
sbb
mov
add
ds
or
pop
cmp
or
es
fxch
mov
adc
push
pushf
and
inc
in
dec
out
mov
sub
or
sub
insb
cld
lret
gs
jnp
fisttpl
push
sti
lea
or
xor
and
subb
or
add
mov
and
inc
stos
mov
mov
aam
adc
jae
cmpsb
xor
xchg
insb
rep
or
imul
jge
inc
enter
data16
out
xor
mov
adc
push
and
movsl
sbb
sub
add
push
rol
hlt
jmp
cmp
test
loop
mov
and
push
and
mov
add
mov
mov
mov
std
mov
aad
sbb
fisubl
mov
inc
in
ret
stos
adc
subl
lahf
push
ja
les
xchg
lock
arpl
jg
mov
and
sbb
adc
push
mov
out
push
sbb
lods
sub
dec
adc
xchg
movsb
or
data16
mov
je
cmp
dec
sbb
jg
add
int
jo
add
fnstsw
test
jnp
lods
xorb
sbb
xlat
lds
fwait
int
jmp
stc
test
decl
jns
aam
cmc
movsl
mov
addl
fsubl
fsubl
andb
sarl
sbb
fisubl
das
ljmp
sti
cltd
mov
adc
ljmp
leave
jnp
cmpsl
add
mov
inc
cmp
sub
scas
sbb
sahf
mov
cmpsl
xchg
adc
sbb
test
mov
jge
movsb
pop
mov
xor
aam
cmp
fmull
mov
mov
mov
sub
xchg
inc
loopne
cmp
mov
rolb
mov
xorl
mov
fsubrp
jecxz
fstpt
push
test
loope
cmp
sub
mov
jo
ret
dec
std
test
push
dec
shlb
test
push
pop
imul
in
test
or
in
adc
inc
rclb
shll
or
dec
cmpb
or
or
fwait
pop
xor
sub
cmc
xchg
enter
xor
icebp
shll
ljmp
push
pop
fs
nop
sti
xlat
jg
lret
add
mov
insl
xchg
stc
popa
fistl
mov
sahf
flds
rorb
inc
xlat
ja
and
scas
pop
test
jge
dec
sub
adc
movsl
dec
mov
addr16
push
and
mov
outsb
jecxz
out
icebp
insb
sbb
inc
xchg
inc
sti
pop
cli
repnz
inc
sbb
and
rolw
test
pop
daa
decl
xor
jns
xchg
jns
iret
into
dec
xlat
sbbl
lcall
sbb
sub
dec
mov
dec
push
mov
xor
xor
ltr
xchg
nop
out
out
push
jno
ljmp
mov
aas
sub
mov
cmpsb
int
test
loopne
sub
ret
inc
icebp
stos
mov
iret
stos
mov
addr16
fucomi
jae
push
inc
nop
mov
inc
pop
sbb
cli
test
add
mov
mov
adc
mov
lcall
or
mov
xchg
xor
adc
test
and
lcall
ret
adc
sub
shlb
mov
jb
dec
sti
or
cmpl
inc
inc
dec
and
in
dec
adc
jmp
mov
mov
push
mov
add
push
dec
roll
cmp
mov
and
cmp
test
cmpl
push
loop
fcomip
lahf
aam
scas
mov
pop
aam
cmp
test
xchg
inc
xor
aaa
popa
pusha
mov
xchg
sbb
leave
test
jbe
out
fsubr
add
outsb
inc
int
out
xchg
ljmp
shrb
jmp
xchg
test
mov
cmp
inc
gs
ja
cmc
out
mov
loope
fldenv
pop
in
mov
add
dec
cmc
pop
push
mov
xchg
arpl
insb
test
mov
cld
test
xchg
lahf
xchg
test
and
or
ret
sahf
cld
lock
xchg
and
mov
gs
cld
gs
bswap
xor
adc
sahf
pop
aaa
push
cmp
in
test
mov
xchg
lds
pop
es
out
shll
mov
inc
fists
pop
inc
mov
cmp
pushf
inc
ret
xchg
aaa
add
mov
popf
addr16
jl
jns
sti
stos
int3
cmp
inc
dec
dec
sub
mov
lock
sbb
shll
add
mov
mov
pop
jns
repz
mov
sub
inc
sub
cmp
stos
iret
sbb
xor
sbb
adc
movsb
jle
or
aam
and
popf
push
inc
push
push
push
push
push
movsl
xlat
add
jg
std
cmc
xorb
movsb
or
xchg
test
push
movsb
das
add
mov
jecxz
out
mov
or
mov
in
push
loop
sub
jle
out
and
sub
mov
jg
xor
or
push
fdivrl
fs
cmp
mov
mov
lret
mov
mov
mov
stos
scas
mov
test
das
addb
ja
or
sub
push
jno
repz
cmpsl
xor
je
loop
sub
scas
fsubrl
and
pop
sbb
jg
xor
jae
les
dec
sbb
push
xchg
dec
push
pop
mov
test
jo
sbb
push
fisttpl
add
in
dec
jbe
push
lahf
jmp
and
ds
scas
jecxz
imul
test
shl
xchg
jle
cmp
ljmp
popf
in
in
in
or
lds
scas
rclb
cmp
bound
inc
cmp
lds
mov
push
mov
lea
push
aad
movl
mov
sbb
mov
add
subb
mov
cld
pop
lea
and
js
xor
mov
inc
sti
cmp
dec
sub
mov
cmp
ret
clc
jbe
nop
clc
cwtl
in
pop
les
popf
dec
jecxz
adc
fdivrs
leave
sub
cs
outsb
and
pop
or
cmp
sahf
push
push
pop
pop
mov
inc
mov
ja
push
cmc
mov
andb
xchg
or
sarl
push
cmc
mov
or
imul
addr16
mov
adc
ljmp
iret
add
push
stc
cmp
dec
xchg
fmull
insb
mov
push
xchg
sub
cs
adc
lods
repz
dec
sbb
flds
adc
xlat
inc
push
negb
movsl
and
inc
and
jnp
fwait
mov
mov
mov
pop
pop
push
xor
cmpsb
pusha
xchg
pop
pop
and
push
loop
adc
popa
rclb
imul
insl
daa
or
push
test
add
and
pop
lcall
xchg
stc
xlat
cwtl
or
stc
cmp
test
js,pt
daa
loope
mov
jp
push
sbbb
bound
lret
push
jp
rcl
mov
xchg
popf
icebp
lds
mov
in
cmp
adc
ss
stos
gs
daa
cmp
insb
sub
mov
sbb
pop
ret
test
inc
adc
dec
inc
jecxz
adc
add
icebp
jp
pop
jae
imul
std
clc
enter
mov
in
mov
popa
shlb
rcrb
xor
xchg
leave
push
xchg
jg
push
bound
xchg
rcrl
mov
movl
movsl
fildl
shrl
cmpsb
sub
cmp
stc
fmul
xor
or
ret
mulb
xchg
ret
or
adc
dec
inc
pop
jle
popa
sbb
inc
mov
pusha
in
jecxz
in
adc
jbe
pop
push
push
je
cmp
scas
push
ret
loope
cmpsl
mov
addr16
pop
jae
mov
mov
xchg
dec
ds
xor
mov
ret
pop
stos
int
leave
cmova
xchg
mov
push
add
mov
lds
sbb
loop
lcall
shll
int3
shl
xchg
jecxz
xchg
jbe
push
imull
pop
test
cltd
cmp
adc
xlat
sbbb
jp
lds
xor
aas
fists
dec
cmp
xchg
jae
push
jns
jl
std
in
scas
xor
add
in
mov
movsb
das
adc
dec
movsb
leave
xchg
mul
cmp
pop
outsb
rol
out
adc
in
xor
jle
mov
out
xchg
in
mov
out
xchg
jae
push
add
pop
mov
cmc
add
test
xor
arpl
and
sub
cmp
loop
aam
ljmp
popa
popf
sub
sbb
inc
cmpsb
out
les
hlt
mov
add
mov
out
rclb
rorl
xchg
jle
jns
adc
cmp
dec
shll
mov
iret
sbb
vandps
xchg
xorl
push
pop
ret
xchg
test
movsl
inc
imul
xor
and
pop
ljmp
push
stc
daa
jmp
pop
cmp
mov
jns
sbb
push
xor
mov
icebp
cmp
and
mov
fcoml
sub
mov
mov
fisttpll
dec
in
cmp
push
pop
mov
push
jns
push
jb
orb
pop
jnp
pushf
fstpl
es
pop
pop
jge
dec
push
adc
lds
lea
std
cltd
lret
jge
icebp
xchg
cmp
call
mov
je
jbe
adc
adc
outsl
insl
enter
add
ss
stos
sub
xchg
cmp
test
or
pop
pop
out
mov
sti
lret
push
rcrb
fwait
cwtl
push
lock
mov
test
inc
scas
lods
clc
daa
jmp
sbb
pop
mov
or
push
xchg
lret
cmp
inc
jmp
and
jb
cmp
dec
mov
push
rorl
push
xchg
fld
and
divb
mov
arpl
stos
call
jge
jo
addr16
pop
sahf
push
hlt
ds
mov
mov
sarl
pop
pop
outsl
add
or
rorl
jg
jmp
mov
mov
or
pop
cltd
gs
xor
push
rclb
xchg
fwait
inc
mov
jmp
add
test
push
sbb
fiaddl
lahf
lahf
pop
jl
xchg
lods
mov
jmp
add
sub
jecxz
repz
aaa
addb
sbb
cmp
daa
lret
ss
mov
dec
push
enter
push
into
pushf
jnp
shrl
pop
or
mov
or
xlat
mov
jbe
inc
xlat
cld
mov
mov
cmpsl
inc
repz
rcr
inc
stos
and
fnstsw
push
outsl
push
jbe
mov
icebp
sbb
inc
test
adc
cmpl
movb
sbb
sahf
stc
les
mov
and
sbb
mov
jb
int
push
aad
fldt
lock
dec
mov
sbb
mov
data16
daa
insl
enter
pushf
cwtl
mov
mov
notl
push
int
jbe
pop
out
dec
fldt
scas
push
aaa
pusha
cmp
sbb
cwtl
das
std
imul
shll
in
sub
add
sub
or
push
adc
fldt
xor
je
mov
mov
clc
and
inc
negl
cmp
lret
sbb
pushf
rclb
fiadds
sbb
icebp
sub
test
sbb
xchg
mov
cmpsb
nop
fisttps
push
push
fucom
push
jmp
inc
aad
stos
fisttpll
test
or
pop
sbb
mov
popf
addb
iret
clc
xor
cwtl
push
inc
mov
xchg
mov
mov
enter
clc
or
mov
shlb
out
ja
push
jmp
movl
mov
mov
insb
push
and
sub
or
cmp
xchg
int3
hlt
dec
lods
mov
cmc
les
scas
cmp
cmc
aaa
xchg
scas
xchg
inc
mov
out
sbb
sub
fiadds
push
ret
subl
sahf
out
test
ret
xchg
test
mov
or
pop
jbe
inc
xchg
mov
cmp
add
pop
stos
aaa
jle
push
xchg
dec
bound
daa
mov
mov
push
dec
pop
lret
xor
pop
lock
adc
lcall
pop
fs
ret
sbb
stc
loope
int3
sbb
popa
shll
mov
test
push
cld
mov
dec
in
and
js
out
std
iret
sahf
jno
sbb
xor
pop
mov
or
xchg
cld
sub
fsubrp
repz
lods
mov
dec
sub
roll
xchg
or
and
ret
cmp
adc
mov
movsb
xchg
cs
std
pop
pop
fcoml
bnd
dec
test
jge
ds
imul
pop
mov
sub
lret
dec
inc
rorl
frstor
mov
shr
mov
negb
push
jb
nop
fwait
daa
lea
sbbl
add
cmpsl
je
pop
call
scas
dec
int
jbe
sbb
adc
jmp
lock
inc
jge
movsl
movsl
std
jo
test
xor
and
insl
xor
in
lods
or
push
ss
push
int
out
mov
mov
sbb
nop
mov
push
sbb
dec
mov
int
mov
cmpsl
out
adc
imul
hlt
push
pop
in
sub
mov
ja
inc
fs
dec
das
cmp
aam
std
aam
dec
mov
cmp
mov
jg
push
jg
cmp
inc
add
scas
sub
into
and
ficoms
scas
lea
cmp
cmp
and
mov
movsb
mov
das
push
icebp
adcb
filds
inc
fldenv
and
and
int
pop
xor
xor
dec
mov
lcall
jp
inc
pop
jbe
mov
add
aam
lds
and
cmp
lds
pop
mov
shll
and
cmpsb
cmpsb
outsb
loop
test
arpl
rep
xlat
push
cmp
pop
mov
cli
mov
es
push
xchg
dec
popf
sbb
cltd
fsubs
out
aaa
sbb
mov
jmp
popf
sti
stos
jg
ret
or
icebp
mov
mov
mov
dec
and
divb
mov
mov
cmp
push
inc
and
dec
pop
xchg
sbb
jae
lahf
test
push
aaa
insb
movsb
into
adc
pop
daa
lods
xchg
pop
pop
sub
fnstsw
push
out
fstpl
inc
mov
push
cs
stos
xchg
adc
sub
lahf
lods
ret
jecxz
insl
add
cmp
sub
sub
xchg
dec
pop
xor
aam
movsl
push
cwtl
icebp
out
int3
pop
and
cs
bound
lock
lds
pusha
loope
xchg
dec
dec
mov
mov
inc
ljmp
push
add
dec
lock
call
sbb
sub
andb
jl
push
adc
cmp
jge
push
mov
mov
ret
lret
das
icebp
repz
mov
fnstsw
and
into
cli
sub
fwait
ret
into
lods
popa
es
insb
add
daa
loope
nop
adc
xchg
dec
test
cmpsb
dec
loop
frstor
xchg
add
adc
mov
push
inc
inc
movsl
cmp
mov
outsl
pop
mov
or
icebp
push
out
mov
je
pop
out
out
rcrl
outsb
cltd
mov
addr16
mov
cmp
mov
mov
xchg
lret
imul
ss
daa
fisttpl
andl
mov
ret
mov
int
add
xchg
push
mov
inc
out
or
jecxz
sbb
mov
sub
cmc
or
lret
jne
xchg
xchg
fdivrs
outsb
insl
push
clc
sbb
sub
jnp
aas
add
add
jle
fs
rcll
adc
repnz
push
popa
cld
push
push
xchg
mov
jg
xchg
cmp
aam
popa
or
dec
stc
mov
sahf
mov
or
jns
dec
orl
xchg
mov
movsb
push
mov
cmpsl
adc
mov
repz
jne
mov
inc
icebp
jno
jl
scas
sbb
jmp
dec
mov
xor
xchg
sbb
rcr
adc
mov
into
cwtl
or
les
add
push
int
cmp
xchg
inc
fwait
sub
fs
sahf
xchg
das
add
cmpsb
fwait
cli
mov
lcall
sbb
test
xor
enter
inc
mov
inc
test
pop
add
or
adcb
push
andb
mov
sbb
inc
test
push
jnp
rcr
cmc
loopne
dec
mov
pop
stos
out
sub
push
adc
and
into
sbb
stos
xchg
or
popa
push
xchg
cmpsb
iret
sbb
stos
movsl
add
xor
mov
loope
imul
jecxz
mov
dec
bound
mov
je
xchg
or
ja
in
popa
cld
push
xchg
out
adcb
and
fnstenv
imul
jns
inc
pusha
gs
jmp
shlb
jmp
sbb
std
sbb
fsubl
aas
adc
sbb
cmp
repz
sti
bound
shld
icebp
mov
jge
pop
xor
movsl
test
pop
lret
insl
les
fwait
pop
out
jb
jno
cwtl
jg
fiaddl
shlb
in
mov
xchg
sbb
jno
xor
pop
pop
adc
mov
movsb
mull
pop
xor
dec
jp
imul
in
and
subb
dec
sub
lahf
aas
lds
idivb
pop
mov
bound
fisubl
xor
dec
jno
jecxz
pop
lock
inc
mov
sub
xchg
inc
push
or
cld
les
lock
lcall
lahf
sbbl
inc
push
test
mov
clc
daa
daa
adc
aad
mov
jno
inc
and
jo
pop
and
push
sub
inc
popa
int3
add
daa
lea
sbb
ret
mov
fs
inc
push
ljmp
pop
sbb
in
in
xor
pop
lock
pop
aas
lcall
dec
and
out
add
sub
in
add
out
lock
jno
es
sbb
sub
out
sbb
ljmp
and
xlat
mov
movsl
or
stc
es
xchg
andb
push
push
gs
out
fiaddl
aam
dec
cmpsb
or
sbb
mov
fs
jp
and
les
add
enter
mov
cmc
testb
icebp
pop
pop
les
test
lret
sbbb
and
ds
mov
xor
ficoml
jnp
mov
dec
xor
data16
lcall
pusha
sub
into
gs
mov
fnstcw
mov
xchg
sub
ret
pushf
outsb
rorl
push
stc
xchg
push
pop
test
dec
xchg
xchg
data16
sbb
cli
pusha
loop
adc
or
dec
or
aam
mov
bound
or
ret
ret
aaa
mov
in
push
mov
cltd
out
xor
add
sahf
pop
les
loopne
mov
jmp
out
mov
pop
lret
jp
test
xor
mov
pop
test
push
shrl
add
pop
and
dec
pop
push
pop
inc
f2xm1
call
outsb
or
pop
and
mov
cmovne
test
faddl
xorb
xor
lret
inc
inc
push
cmc
and
push
movl
push
cli
in
pop
inc
int
sahf
fistps
out
arpl
mov
jne
out
sahf
sbb
push
mov
js
filds
or
shl
jo
mov
adc
dec
in
pop
aad
push
hlt
daa
mov
and
cwtl
lahf
js
cmp
cmp
sti
add
adc
stos
mov
mov
add
mov
or
push
xchg
adc
ss
pop
and
fmuls
or
jp
mov
lock
jle
xor
nop
clc
xor
mov
fsubrs
ret
les
dec
or
pop
and
jnp
enter
lahf
aaa
fsts
mov
into
dec
andb
sub
repnz
pusha
push
xchg
push
icebp
in
xor
cmc
inc
pushf
or
or
out
sbb
aad
add
in
stc
outsl
lahf
dec
xchg
inc
pushaw
sarb
loop
dec
std
aad
push
aaa
movsb
mov
add
sarb
fs
mov
jbe
imul
xor
xchg
sub
xchg
aad
cmpsb
movsb
cs
and
mov
cmpsb
mov
mov
aad
push
bnd
scas
cmpsl
push
in
cmpsb
sub
sbb
jae
dec
push
mov
inc
xor
nop
inc
inc
sbb
aas
lods
fimuls
stc
pop
jl
xor
enter
push
sahf
dec
and
mov
test
mov
movsl
repz
outsb
mov
jge
push
bound
int
mov
call
mov
cmpsl
or
fsubrl
imul
rcl
test
mov
pop
pop
sub
and
dec
daa
cmp
shll
inc
inc
add
mov
addr16
push
dec
shr
sbb
jne
repz
mov
xchg
leave
mov
notl
mov
cli
jl
add
jbe,pn
incb
mov
mov
test
mov
daa
roll
cs
fmuls
xchg
nop
sbb
stc
flds
add
icebp
sub
loop
or
repnz
pop
inc
dec
mov
je
or
pop
push
enter
mov
mov
inc
xor
xchg
adc
pusha
sti
or
popl
pop
push
cmp
jg
lock
mov
jo
add
add
cmp
lods
imul
negb
fst
lods
enter
ret
add
inc
ja
sbb
jecxz
xor
sbb
push
sbb
pop
faddp
mov
iret
ret
xor
cwtl
xor
fbld
int3
push
mov
xchg
mov
jp
int
and
call
xchg
bound
movsl
mov
pusha
inc
mov
xchg
sbb
jae
pop
dec
lods
adc
sub
pushf
aad
or
mov
loopne
mov
jo
lds
and
movsl
stos
mov
sbb
nop
aam
pop
insb
mov
test
leave
or
and
mov
xchg
jecxz
bnd
je
adc
popf
jnp
pop
cmp
leave
mov
add
dec
std
cmpsl
leave
cmp
adc
rcl
repnz
mov
add
jns
push
test
xlat
popf
or
mov
fwait
sub
push
cmp
adc
mov
pop
or
or
aam
mov
in
into
je
scas
or
int
pop
stos
add
cmpsb
inc
mov
lret
je
push
and
xchg
cmc
jecxz
lahf
stos
mov
jmp
icebp
sti
lods
adc
dec
cmpsb
xchg
cld
cmc
lods
repnz
aad
push
sbb
inc
popa
fisttps
test
pusha
and
shl
mov
sub
mov
add
cli
aam
xchg
add
daa
mov
rolb
and
scas
outsl
mov
in
pop
out
jecxz
xor
leave
lds
pop
pop
call
aaa
fs
add
mov
test
les
outsl
orb
adc
xor
xchg
fiaddl
adc
add
push
loope
int3
mov
mov
dec
stos
inc
pop
jbe
addb
pop
pop
xor
pop
add
popf
push
popa
popf
mov
stos
lret
inc
add
mov
dec
pop
cmpb
bound
pop
pop
out
test
leave
cmp
pop
mov
in
adc
xor
mov
out
shll
pop
jmp
aaa
das
jns
xchg
js
out
xchg
fldl
xchg
add
dec
jge
fisubrl
cmpsl
xchg
xchg
jg
or
xchg
push
mov
aam
xchg
subl
clc
rcrb
add
xchg
xor
neg
sbb
pop
ds
mov
call
jno
adc
push
mov
mov
xchg
out
mov
popa
push
mov
cwtl
adc
mov
cmp
adc
ret
les
inc
fwait
xor
and
push
repz
lea
rolb
fnsave
mov
mov
push
add
pop
adc
movsl
mov
sbb
stc
jb
push
jne
rol
inc
sub
pop
scas
test
repz
adc
call
fnstcw
lock
jno
orb
int3
movsl
clc
cmova
dec
mov
je
jp
mov
xchg
jp
rol
insl
mov
add
mov
fdivrs
mov
cmpsl
inc
cli
cmp
lock
cmp
mov
and
adc
cs
pop
mov
mov
inc
and
sub
lea
scas
leave
test
inc
add
jne
and
pop
mov
in
fldt
mov
out
mov
pop
jnp
add
pop
add
dec
loop
clc
pop
mov
sub
jp,pt
xor
testl
xchg
hlt
push
decl
lahf
sahf
add
loop
sbb
sbb
sbb
xchg
in
mov
das
xchg
mov
in
xchg
adc
sub
cmp
jno
gs
adc
pop
jb
mov
fidivrs
pop
sti
inc
mov
gs
inc
pop
clc
in
stc
mov
mov
cmp
xchg
rcrb
test
and
mov
sti
xchg
cmpsl
jmp
ja
in
add
test
xchg
pop
ror
in
test
pusha
outsl
imul
cmpsl
lods
fdivrl
loope
daa
dec
sub
cs
subb
icebp
or
mov
mov
and
xchg
arpl
call
ljmp
pusha
adcb
cmp
lock
mov
rcll
in
adc
mov
ljmp
daa
inc
fdivrl
pusha
fistpll
mov
mov
mov
xor
xor
cmp
rcrl
dec
shl
adc
pop
cmp
jb
cli
dec
inc
ffree
in
inc
push
fisubrs
mov
push
push
decl
cmc
aad
mov
xchg
in
dec
mov
and
or
rorl
daa
xor
jecxz
mov
cmp
add
rolb
push
lcall
dec
cwtl
cs
push
xchg
push
test
xor
mov
and
unpcklps
sbb
stc
xchg
adc
lcall
movsl
repnz
jno
stc
xchg
cwtl
push
push
sysret
sub
scas
fwait
lock
hlt
je
pop
cmpsl
jmp
fwait
xchg
sub
inc
push
pop
cs
and
in
and
add
lds
notb
pushl
lds
mov
add
pushf
xchg
and
dec
lret
or
lret
jecxz
rolb
jb
lcall
jge
adc
popa
cmp
sub
popa
dec
mov
loope
dec
repnz
sub
pop
mov
hlt
mov
aas
addr16
pusha
loop
lret
push
pop
jecxz
push
movsb
shlb
jbe
sbb
sbb
mov
mov
adc
repnz
or
xchg
ret
js
or
mov
xor
in
mov
sub
sub
ret
shl
ficomps
sbb
or
xchg
in
mov
lcall
xor
sbb
inc
out
outsl
xchg
sub
pushf
jns,pn
arpl
loope
lods
insb
mov
adc
sub
mov
bound
dec
lods
push
push
mov
cmp
mov
push
inc
sub
jp
fmuls
pop
test
dec
mov
push
jb
jmp
shll
push
cmc
testb
pop
cmp
xchg
and
mov
and
mov
or
ret
pop
or
lds
jne
xor
das
jge
lret
xchg
pusha
adc
xchg
and
mov
add
mov
lock
mov
test
fdivrs
mov
jp
push
pop
mov
enter
popf
inc
and
insl
inc
cmp
daa
repnz
pand
mov
cmpsl
xor
jnp
mov
fwait
incb
add
or
aad
mov
xor
fsubrs
xchg
mov
mov
lods
in
shll
push
fxam
stc
rol
push
mov
loope
inc
dec
sub
mov
pop
sbb
cmp
jl
repnz
mov
nop
sub
jno
fidivrs
add
inc
xchg
inc
and
jge
out
into
cltd
inc
cmp
xchg
dec
jp
popf
mov
idivb
and
cmp
ret
push
and
mov
data16
shld
int
out
pop
ret
lock
sub
mov
aas
loop
scas
cmc
jle
js
jae
xor
outsl
mov
or
adc
notb
je
mov
inc
je
call
and
push
scas
popf
inc
clc
cld
pop
jp
mov
xchg
insb
push
das
clc
pop
cmp
sti
lock
sahf
mov
xchg
lret
mov
icebp
call
outsl
add
inc
in
push
cmp
jecxz
mov
sahf
pop
cmp
jl
jge
shl
adc
mov
adc
xchg
mov
ret
xor
jg
pop
js
and
xchg
mov
xchg
pop
add
stc
ret
shl
push
sbb
add
jg
daa
jae
ljmp
jne
les
testb
jmp
inc
jae
dec
jp
sar
mov
fwait
dec
xchg
push
je
rorb
xchg
dec
or
in
aad
insl
cld
dec
lods
push
lcall
cli
lds
nop
jo
jecxz
jl
mov
mov
and
js
pop
adc
rorl
or
cmp
loop
enter
push
out
sbbl
add
sbb
mov
sti
js
sbb
mov
xor
popa
das
arpl
cwtl
stc
call
push
das
sahf
xchg
xchg
adc
insb
out
gs
and
push
cmp
je
aas
jmp
insb
adc
or
dec
mov
jle
jge
mov
inc
mov
out
test
add
mov
out
inc
cld
pop
jle
xor
sar
mov
sub
xchg
sub
cwtl
repnz
cmpsb
imulb
jg
push
popa
push
and
cmc
cli
mov
or
mov
jbe
add
imul
inc
js
sbb
mov
lods
and
out
add
fs
xor
jmp
fistps
pop
out
xor
imul
pop
pop
or
sub
bswap
int3
pop
repz
jo
push
mov
dec
sbb
mov
call
test
cmp
push
adc
daa
jns
pusha
cmp
jmp
test
sbb
dec
cltd
ljmp
lods
cmp
sbb
lcall
cmpsb
pop
mov
test
cs
lods
test
lret
push
mov
adc
fcmove
adc
movsl
pop
inc
pop
sahf
inc
ds
inc
lock
add
push
mov
cmp
fs
and
lahf
jge
xor
cmp
daa
out
mov
xchg
sbb
push
adc
or
mov
lods
dec
push
cmp
mov
push
in
inc
insl
in
pop
fistpll
sbb
shr
out
inc
jg
sub
mov
ss
addl
mov
sub
popf
std
cmp
mov
mov
push
aaa
movsb
out
sar
xchg
arpl
cmp
or
xor
pop
mov
arpl
aad
aam
inc
mov
and
ss
or
add
cmpsl
rcl
pop
ret
clc
rcll
push
lds
jmp
iret
filds
xor
jb
mov
ret
xchg
popa
rcrl
jg
pop
test
xchg
hlt
movsl
call
ror
pop
fisubl
ret
xchg
xchg
les
hlt
mov
xchg
adc
xorl
jle
imul
mov
sbb
movsl
test
repz
push
movsl
jno
sbb
shll
push
add
and
xchg
sub
int
std
pusha
scas
or
adc
jo
mov
sub
mov
sub
mov
mov
pop
rclb
lea
mov
ds
fldenv
enter
push
push
inc
mov
out
mov
movsl
sti
dec
ja
adc
fldpi
sbb
hlt
xor
dec
mov
push
mov
pop
mov
and
and
lea
mov
sbb
loopne
lret
stc
ds
xchg
enter
test
repnz
mov
rorb
jo
popa
jno
fdivp
adc
jbe
repnz
jno
sub
mov
iret
fistl
inc
cmp
mov
pop
sbb
out
stos
sahf
repnz
sub
loope
mov
push
das
dec
mov
xor
pop
stc
cltd
jae
mov
repnz
and
loope
aad
fs
lcall
jg
loopne
pusha
cmp
imul
cmp
dec
add
popa
jge
push
adc
sub
xchg
roll
push
adc
adc
std
enter
mov
imul
gs
outsl
inc
lods
xor
test
arpl
push
cmp
aaa
imul
pop
inc
sti
and
pop
sbb
sub
jmp
mov
icebp
mov
insb
jbe
inc
xchg
add
inc
or
fcmovnbe
xchg
and
mov
push
mov
sub
xor
loop
data16
je
xchg
movsb
cmp
pop
je
jne
clc
pop
js
xchg
jbe
mov
fwait
orl
push
fcmovnbe
mov
clc
cmp
lcall
inc
dec
sub
mov
push
mov
scas
xor
and
or
movsb
xchg
jbe
cmp
int3
adc
aad
mov
pop
inc
add
popf
mov
inc
fiadds
fimuls
mov
pop
xchg
push
bound
jne
mov
fmul
cmpl
xor
call
fisubl
data16
das
sbb
cmp
sti
cs
mov
ret
cmp
cmp
pop
andnps
sub
aad
xchg
sbb
cmpsb
stc
lods
rcrb
dec
fbld
ret
sbb
rcrl
cmpsb
pop
in
and
pop
push
or
xor
roll
into
aam
pop
out
cmp
dec
test
and
push
sbb
jmp
call
shlb
push
loope
orl
jno
fsubs
inc
ss
cmpsb
aad
dec
pop
enter
dec
add
push
mov
mov
xor
dec
xchg
sahf
jmp
in
repz
lret
cs
sub
jg
fiaddl
jns
and
cmpsb
in
out
adc
sets
movsl
mov
dec
cmp
addl
ljmp
sbb
jbe
sbbl
stos
lret
lods
sub
mov
jle
mov
mov
daa
jge
lret
xlat
sti
pop
push
repz
or
and
jae
enter
fcoml
adc
imul
insb
inc
push
cwtl
popa
mov
jecxz
enter
push
nop
mov
and
js
jbe
mov
imul
inc
or
xor
jbe
pop
push
add
pop
mov
in
mov
sub
inc
xlat
jmp
jp
es
hlt
pop
jnp
mov
bound
add
xchg
call
cmp
test
xor
or
push
pusha
mov
sub
fstpl
cltd
dec
push
std
add
mov
lret
cmp
push
stc
in
mov
xchg
fwait
dec
cmp
add
outsb
xlat
push
sti
mov
cwtl
xchg
push
mov
xchg
les
shl
jae
mov
outsl
xchg
lea
jmp
or
mov
and
mov
sub
shrb
cmp
sbbb
popa
or
je
mov
imul
push
insb
shl
mov
sub
testl
xchg
jbe
jo
jno
rcr
ljmp
pop
stc
bound
sti
pop
lock
adc
lock
test
insl
cmpsb
movsl
iret
les
push
in
xchg
xor
clc
pop
cmp
cmp
pop
mov
mov
cmp
adc
and
or
aaa
mov
out
xchg
mov
fadds
sbb
out
addl
push
jge
cltd
or
cmp
cld
mov
jmp
int
fisubrs
mov
cmc
pop
and
lret
in
les
mov
mov
inc
sbb
xchg
arpl
xchg
lcall
ds
pop
xchg
hlt
cmp
outsl
lret
scas
movsl
sti
mov
mov
insb
movsb
pop
imul
nop
push
je
lods
movb
inc
xor
jne
jmp
dec
jge
cltd
xor
lret
js
push
or
les
lcall
loopne
add
pop
mov
pop
lcall
and
mov
adc
aam
movsb
cmpsl
adc
xchg
fcompl
mov
adc
aaa
popf
dec
loop
mov
mov
inc
mov
cmp
lret
mov
stos
jle
xchg
movsl
inc
cwtl
movsb
incb
adc
inc
dec
adc
cmp
adc
imul
lret
mov
push
push
mov
push
xor
test
xchg
popf
movsl
mov
push
sbb
xchg
xchg
movsl
or
call
cwtl
stc
sbb
xchg
adc
push
cmp
mov
xchg
sbb
xor
in
insl
pop
cmp
outsl
sub
dec
icebp
pop
push
cltd
aaa
std
pop
cmp
fwait
repnz
xor
add
and
cmp
call
push
mov
ds
jae
cld
adc
and
push
push
mov
push
adc
cmp
lret
adc
and
mov
add
mov
xchg
inc
test
imul
sbb
cmp
inc
sbb
outsl
shll
scas
mov
out
jp
ds
pop
hlt
ficoml
push
inc
out
xchg
cmp
popf
pushl
xchg
push
imul
xchg
insb
add
cltd
call
adc
shl
jl
and
test
inc
mov
mov
decb
std
insb
push
xlat
push
insb
loopne
xchg
leave
push
mov
stos
sub
gs
fisubrs
insb
test
jp
jnp
fisttpl
mov
xchg
lock
mov
xor
ficoms
enter
fucomi
xor
mov
cmc
aad
push
inc
in
jge
mov
cwtl
dec
pop
push
das
mov
xorl
fucomip
subb
cmpsb
mov
lods
sbb
sub
pop
bound
popa
push
push
bound
int
aaa
lock
sti
ja
mov
out
pop
mov
add
pop
dec
push
repnz
add
mov
push
mov
jnp,pn
pop
addb
in
out
xchg
in
das
adc
lds
sub
sbb
shlb
cmp
jae
pop
ja
mov
xchg
mov
lret
jo
push
out
rcll
xor
lds
rorl
test
mov
and
inc
pop
push
movb
hlt
ret
shrb
int3
lret
or
push
push
mov
mov
pusha
push
push
test
cwtl
jbe
negb
cmpl
pop
into
mov
out
lea
dec
cmp
in
xchg
pop
cmp
movsl
fdivs
scas
nop
jbe
mov
mov
xlat
fcomi
jne
inc
push
sbb
je
xchg
mov
mov
and
xchg
outsl
outsl
cld
dec
rcll
pusha
lretw
mov
sub
cs
sub
xor
sub
aaa
xchg
inc
leave
xchg
int3
push
or
inc
inc
fimull
into
jmp
cmp
jl
scas
stos
cmpsl
jmp
mov
jb
lock
mov
loopne
sti
loope
bound
pop
das
je
loop
add
dec
pop
ss
mov
adc
jmp
add
hlt
fmull
pop
push
cmpsb
ds
cmp
iret
xchg
in
iret
cmp
sub
mov
test
loopne
adc
mov
inc
or
mov
sbb
movsl
mov
sbb
pop
popf
push
pop
sar
adc
dec
jge
mov
jb
mov
or
bound
adc
jmp
mov
push
ljmp
cmc
iret
mov
sbb
adc
xchg
rclb
data16
pop
lods
out
mov
push
call
fwait
push
addr16
mov
aad
movsl
inc
jle
push
jecxz
stc
lret
ret
or
jmp
pop
xchg
outsl
sub
sbbl
jnp
imul
inc
mov
aaa
lcall
test
push
cmp
xor
shrl
mov
outsl
xchg
aaa
pusha
in
inc
mov
dec
popl
sub
and
jmp
cmpl
lds
nop
daa
and
jg
aaa
lret
sbb
xchg
imul
dec
push
cwtl
mov
jbe
les
push
mov
add
push
sub
xlat
mov
cwtl
push
cmp
icebp
js
jp
pusha
jne
outsb
dec
ffreep
das
ds
in
repz
mov
icebp
dec
or
test
outsl
pop
add
inc
cmc
cs
aad
jle
inc
call
cmpsb
pop
aas
xor
test
mov
addr16
xchg
repnz
js
xchg
adc
xor
test
adc
inc
cltd
pop
mov
lcall
cwtl
xchg
push
cli
mov
cmp
dec
mov
or
cltd
scas
stc
mov
add
mov
in
mov
jo
cmp
dec
cltd
and
mov
mov
xor
call
neg
jae
cmp
shrl
cltd
inc
xchg
mov
bound
mov
pop
out
repz
pop
in
push
in
addr16
sub
and
notb
mov
movsl
jecxz
push
xrelease
inc
adc
adc
mov
jo
xor
push
xchg
and
in
call
pop
fwait
jno
mov
add
imul
xchg
aad
stos
dec
mov
sbb
and
aad
jle
push
ss
or
or
and
and
mov
daa
jb
adc
lods
or
jbe
out
inc
aad
pop
mov
jns
icebp
mov
scas
push
pop
repnz
into
xchg
push
inc
dec
sbb
std
fsubrl
imul
fcomp
aas
pop
ucomiss
sbb
pop
ficoms
in
pop
lcall
shlb
repz
scas
arpl
outsl
insb
mov
xor
out
cmp
push
fwait
loop
testl
enter
bnd
aas
pop
es
xchg
jno
outsl
xor
std
mov
mov
scas
sti
roll
rolb
mov
cmp
mov
imul
sti
push
inc
pop
scas
dec
sub
imul
add
in
adc
sub
negb
mov
orb
aaa
ja
in
xor
lret
lods
add
push
in
inc
rcl
cmc
rorb
mov
shr
rcrl
mov
mov
or
inc
scas
nop
or
out
aas
clc
jl
pop
jmp
sahf
push
and
aas
cmpsl
dec
imul
test
movsl
sti
lods
mov
out
xlat
addl
push
and
lahf
add
stc
jl
mov
aaa
in
fidivs
fiaddl
lcall
je
cmp
cmp
sub
jnp
sub
add
dec
sbb
and
push
sub
dec
adc
out
jb
mov
les
cmpsl
lea
inc
cs
fdivl
push
push
or
addr16
fists
sub
cmp
in
pop
add
inc
aas
mov
cmp
mov
cmp
mov
shl
or
jg
divb
pop
xor
aam
jle
mulb
shr
push
xchg
mov
sub
xchg
jnp
pop
xchg
repnz
xor
in
cmpsl
add
mov
adc
push
and
pushf
fbld
jns
cwtl
lahf
fucom
fmull
js
js
pop
lds
inc
xchg
push
fidivrs
lahf
inc
ss
xchg
cmp
push
in
mov
cmpsb
into
lds
fistl
imul
push
pop
sub
out
shll
arpl
jmp
loope
daa
cwtl
scas
inc
andl
mov
outsl
mov
sbb
ljmp
shl
inc
pushf
jmp
or
sub
cmp
add
lahf
mov
sbb
dec
adc
ret
lahf
xlat
xor
data16
addr16
icebp
push
pop
and
mov
inc
test
mov
loope
jmp
mov
pop
movsl
mov
data16
movsb
mov
aas
repz
push
aam
jp
in
loop
data16
pop
push
mov
pop
adc
cmp
jl
imul
fcmove
lcall
jno
outsl
movsl
mov
lds
hlt
das
filds
loop
xor
mov
aaa
dec
dec
cmpsl
fdivs
mov
out
das
jecxz
cltd
inc
out
jb
add
movsl
pop
or
sub
sub
cmp
and
add
dec
jae
mov
insb
mov
scas
xchg
pop
fs
inc
mov
std
mov
and
inc
lret
adc
push
cmp
jae
inc
movsl
loope
cmp
adc
add
incb
sub
mov
je
and
cmp
andb
pushf
or
push
dec
dec
and
fistpl
lret
or
in
or
xchg
sbbl
sub
cmpsb
inc
out
push
cmc
cs
inc
sub
rcl
or
jl
sub
outsb
mov
fadds
cmpsl
nop
fcompl
call
out
ja
sbb
jg
inc
mov
sahf
or
sub
cmp
fstpt
mov
out
mov
push
loope
add
cld
or
inc
test
xor
cwtl
aam
dec
inc
cmp
enter
and
rcrl
mov
mov
sub
mov
push
cmpsl
mov
mov
repz
fidivrs
jne
mov
dec
cwtd
loop
lret
scas
add
dec
fcmovu
les
xchg
addl
adc
push
cld
or
cwtl
rorb
add
inc
mov
enter
sbb
fisubs
adc
mov
cmpsl
mov
movsl
mov
das
xchg
data16
mov
jns
push
sbb
daa
jb
adc
jns
push
leave
iret
lds
jmp
into
enter
imul
int
lods
mov
popa
push
dec
lfs
jle
sar
scas
push
or
sti
std
mov
pop
xor
pop
scas
mov
push
mov
int
enter
dec
adc
clc
jbe
aaa
xor
call
cmpsb
xchg
sbb
insb
insl
mov
lods
jge
out
pusha
jbe
out
repz
popf
pop
imul
bound
scas
and
dec
pop
mov
add
mov
mov
or
stos
dec
pop
popa
add
mov
je
je
pop
cwtl
xor
ret
or
jnp
std
das
cmp
push
adcb
xchg
mov
sbb
into
jb
clc
mov
push
push
ss
inc
lcall
dec
push
aas
mov
hlt
push
mov
bound
sub
cmp
lcall
push
add
push
popf
or
pushf
rol
pop
jp
mov
je
dec
leave
in
pop
pop
ret
mov
int
icebp
jmp
adc
imul
mov
pop
pusha
aam
xlat
or
lcall
mov
adc
sbb
rorl
push
mov
cmp
lea
roll
pop
push
loop
mov
mov
cmp
movsb
enter
les
mov
repz
jmp
push
pop
repnz
cld
aas
mov
mov
fs
or
sbb
pop
cmpsl
inc
fmulp
movsl
hlt
mov
clc
gs
sar
pushf
nop
sub
add
adc
sbb
jl
pop
lods
clc
cwtl
xchg
jb
cli
pop
std
push
or
test
gs
lods
test
test
xchg
dec
pop
cmpsb
mov
int
lahf
xor
xlat
push
push
mov
push
jecxz
inc
add
lock
lods
xchg
sub
pop
lcall
imul
loop
pop
inc
jo
xor
outsl
in
adc
sub
pop
jb
cli
fadds
or
xchg
xor
rolb
sub
clc
push
and
daa
jecxz
inc
aas
jo
cmc
aad
mov
jecxz
test
cmp
ret
loopne
popa
and
cmp
lods
in
pop
enter
push
inc
gs
insb
mov
push
or
xlat
mov
outsl
xchg
in
loope
xor
and
mov
and
add
imul
loope
fnstsw
mov
js
loope
aas
and
push
or
pop
lods
cmc
cmp
ficoms
inc
and
dec
idivl
dec
popa
push
xor
jb
aam
sub
inc
lret
test
lret
cmp
aaa
stc
adcl
jmp
shll
mov
xchg
jl
ja
test
adc
mov
mov
or
adc
dec
xchg
mov
sub
hlt
push
movsl
icebp
imul
push
or
ret
cs
arpl
pop
dec
mov
cmp
or
cwtl
mov
in
xor
in
push
out
addr16
sbb
pusha
jg
cli
jmp
stos
xlat
bnd
mov
adc
mov
out
test
pop
mov
add
push
xor
push
out
imul
addr16
stc
outsb
arpl
inc
mov
dec
mov
cmp
repz
out
mov
cmp
es
ficomps
or
or
push
repnz
xor
mov
adc
mov
push
inc
sbb
sub
popa
cwtl
mov
mov
test
icebp
xor
test
in
fcmovb
mov
xor
jl
pop
push
xchg
movsb
sub
scas
cmpsb
push
add
pop
fiadds
or
mov
cmp
push
pop
into
movsl
mov
jnp
movsb
test
test
cmp
sub
pop
adc
adc
dec
in
cmp
lock
mov
ds
inc
mov
ficoml
je
sbb
inc
or
cmp
push
jge
gs
lret
rclb
stos
insb
ss
icebp
fcoms
dec
push
jno
inc
pusha
sti
bswap
jo
mov
mov
push
insl
outsl
scas
and
and
addr16
inc
and
test
fs
fcmovne
cmp
or
sub
pop
insl
mov
stc
lods
std
sub
clc
arpl
rcrl
daa
push
sub
cli
push
sub
xchg
and
jnp
sub
jmp
or
imul
pop
fisttpll
add
stos
cmp
ret
and
pop
lea
sarb
xor
mull
mov
or
pop
mov
inc
out
mov
pop
push
mov
push
and
mov
jno
cld
repz
xlat
jo
mov
mov
out
out
shll
sub
rolb
cmp
es
dec
lcall
push
pop
jmp
mov
cmpl
mov
push
negl
aaa
jmp
sahf
mov
jl
repz
fcmovbe
call
pop
xchg
pusha
inc
testb
or
insl
call
cmp
push
mov
pop
int3
or
ljmp
push
xor
push
cwtl
mov
mov
dec
mov
pop
xor
loopne,pt
lahf
push
mov
sti
dec
jl
in
xor
shrb
xchg
xor
jnp
sti
das
icebp
pusha
inc
aam
dec
xchg
inc
dec
addl
iret
shl
aaa
test
inc
sub
lret
add
mov
mov
pop
test
lods
xchg
aas
lret
push
cmp
add
jo
lds
pop
shll
cmc
int
and
gs
call
cli
arpl
and
fsubs
xchg
jno
sbb
push
shl
ljmp
fadds
pop
sbb
and
push
rcrb
and
or
rolb
or
loope
iret
std
jns
movsl
xchg
jnp
lods
cmpsl
cwtl
jae
cmp
and
sub
loop
aad
je
cmp
jmp
dec
bound
daa
in
jbe
hlt
neg
pop
pushf
jge
scas
and
jne
inc
sbb
bound
push
shlb
jne
std
stos
add
and
adcb
push
dec
xlat
sbb
outsl
sbbl
insb
jo
mov
imull
data16
cwtl
mov
push
movsb
shrb
xlat
dec
es
jge
jmp
rcr
std
test
push
aam
es
fisubrl
jne
outsl
repz
ficoms
sub
mov
mov
loope
sbb
test
sahf
xchg
inc
xchg
mov
cmpsb
xor
jae
inc
xor
push
cmpsb
jecxz
xchg
xchg
fdivrp
notl
push
gs
int
cmp
iret
or
sub
repnz
rorl
add
aaa
sub
sub
stos
cs
pop
gs
or
mov
and
mov
ds
xchg
xlat
mov
mov
mov
xchg
gs
lock
cld
je
push
push
sbb
ficoms
mov
sbb
push
push
jg,pt
adc
xchg
out
outsb
in
add
addr16
push
aas
inc
sub
sub
aam
fwait
les
dec
jp
clc
insl
xlat
dec
pop
sub
and
cmpsb
cmp
jnp
dec
inc
push
sbb
pushf
inc
mov
sarl
add
or
jmp
movsl
xor
jbe
arpl
xchg
stos
jmp
sahf
add
cmp
xor
stos
mov
imul
cwtl
dec
jmp
addr16
clc
fildl
dec
imul
ljmp
insb
or
and
pushf
mov
cld
dec
mov
jmp
in
insl
aaa
es
ret
push
jo
int
lea
mov
push
inc
xchg
imul
aaa
and
mov
lcall
bound
mov
cmpsl
sbbb
test
in
mov
dec
inc
mov
mov
mov
adc
pop
mov
insb
or
insl
mov
xchg
pushf
push
inc
sti
sbb
dec
icebp
jo
cwtl
push
movsl
inc
movsb
jle
lret
pop
adc
loopne
aad
fwait
inc
in
push
loope
sub
cwtl
cmp
cmovo
mov
mov
and
xor
jno
jmp
es
nop
and
arpl
mov
jmp
sahf
je
mov
dec
das
js
dec
into
out
or
push
xchg
iret
pop
xchg
inc
pop
push
mov
out
into
cltd
push
xchg
mov
ror
jecxz
gs
jle
pop
adc
lret
sub
jb
loopne
das
cmpsl
je
push
imul
inc
pushf
das
fisubrs
xchg
sarb
xchg
pop
mov
push
mov
loop
test
popf
mov
negb
lahf
fcmovb
lret
adc
jbe
xor
pusha
xchg
inc
adc
cmpsb
mov
test
cmp
call
rclb
mov
sahf
sbb
insb
jle
leave
insb
mov
pop
sbb
and
xchg
and
dec
push
mov
pop
sbb
movsl
scas
mov
adc
jno
xor
dec
out
mov
lea
aad
mov
jmp
jmp
cmp
and
mov
rorl
rolb
ds
ret
adc
ud0
loopne
out
add
xchg
inc
mov
je
and
mov
sti
push
mov
dec
leave
mov
fwait
xchg
repnz
or
push
test
out
fs
outsb
cmpl
outsl
dec
test
ret
shll
add
int
pop
loope
icebp
jnp
pop
ffree
pushf
mov
out
out
pushf
cmpsl
int
es
cmc
test
out
cmpsb
push
je
cmp
sbb
fcoml
in
sub
dec
inc
pop
cltd
jg
jg
stc
loop
shr
aam
sbb
into
imul
inc
aad
xor
es
xchg
mov
jns
push
aad
inc
rorl
xor
jbe
or
jp
mov
sbb
push
adc
hlt
sub
pusha
and
int3
fwait
sbb
loop
jno
and
adcb
xchg
movsl
and
sub
daa
addr16
mov
jno
jbe
mov
push
arpl
arpl
test
push
jo
sahf
and
es
push
fisttps
aaa
adc
xchg
decl
jg
repnz
ret
outsl
in
inc
lods
pop
and
enter
stos
push
jbe
and
mov
jb
push
lds
inc
fwait
sbb
mov
arpl
and
shrb
pop
inc
icebp
add
mov
fwait
test
shll
mov
adc
pop
out
rorl
inc
arpl
in
add
ficoml
data16
cli
fdivr
and
jmp
mov
lcall
pop
popl
inc
cmp
aas
push
adcb
lret
test
add
sbb
mov
imul
sub
adc
add
and
stos
add
cmp
cmp
mov
dec
fstl
cmpsl
imul
test
push
addb
add
dec
add
iret
cmp
test
and
roll
fs
pop
mov
ret
dec
repnz
or
jbe
mov
jle
fwait
insb
fadds
aad
popa
cmp
sbb
ja
shlb
gs
adc
dec
out
jae
cld
mov
std
cld
pusha
push
mov
sarl
cmc
mov
orb
cmp
aas
out
mov
jne
fs
subl
insl
lahf
xor
mov
imul
adc
js
sub
leave
clc
enter
int3
mov
sbb
push
fdivs
or
mov
jge
aaa
add
xchg
dec
bts
mov
out
ljmp
add
xchg
add
adc
mov
out
push
adc
test
mov
and
popf
fldl
sub
mov
lret
lds
dec
mov
sub
add
ret
mov
dec
test
dec
movsl
cwtl
jne
fbstp
and
nop
and
add
les
inc
scas
inc
imul
lahf
jno
cmp
push
mov
mov
inc
lods
out
mov
in
adc
mov
sbb
mov
faddl
ljmp
sub
jmp
add
pop
addl
hlt
xchg
test
push
and
loope
jecxz
xchg
ljmp
sub
mov
cld
cmpsl
jge
clc
cmp
cltd
cltd
mov
int
popa
cwtl
pop
adcb
and
enter
mov
mov
add
aam
and
push
dec
aad
data16
ficoms
mov
mov
adc
shlb
mov
fwait
aad
mov
sbb
cmp
mov
ss
mov
dec
push
in
or
or
or
mov
arpl
mov
and
ljmp
mov
fcomi
arpl
in
lret
ljmp
cmpl
out
mov
pushf
mov
stc
and
or
inc
add
loopne
leave
add
dec
repz
xlat
daa
jae
and
leave
sbb
iret
movsl
jae
sub
fmul
mov
lods
push
mov
sbb
push
or
dec
xchg
imul
sbb
ss
mov
and
popl
or
adc
scas
lahf
outsb
mov
push
rcrl
movsl
int3
mov
cmovno
movsb
icebp
xor
les
sbb
fidivrs
jmp
in
inc
cmp
cwtl
fsubs
mov
popf
fwait
mov
aad
iret
daa
ret
ret
pop
inc
inc
jae
push
cmp
push
cmp
push
mov
jl
mov
mov
inc
hlt
sub
cmpl
xchg
sbb
add
xor
into
insb
roll
jp
hlt
mov
movsl
insl
out
loope
leave
mov
fstl
scas
clc
in
xor
cmp
and
xor
sub
cmpsb
das
add
mov
xchg
lcall
test
sbb
bound
faddl
xchg
add
dec
shll
loop
inc
movsl
pop
jne
rorl
and
nop
inc
inc
xlat
mov
sub
inc
cmpw
add
rcrb
mov
pop
or
xor
xor
sub
nop
leave
push
xchg
jge
mov
push
mov
mov
xchg
xchg
push
sub
stos
cmp
test
sbbl
xchg
lret
mov
subl
dec
rorb
fcmove
push
mov
je
out
loopne
arpl
fwait
xchg
push
xor
pop
arpl
push
jne
outsb
and
pop
into
test
hlt
lcall
add
add
es
sbb
ljmp
mov
ret
mov
and
test
push
push
xor
cmp
fsts
nop
inc
sub
out
mov
pop
gs
mov
adc
sti
pop
mov
push
jge
int
dec
mov
mov
xchg
sub
lods
jae
push
rep
xor
int3
or
movsw
and
aas
push
jb
imul
xchg
filds
inc
adc
mov
in
repnz
and
xchg
add
mov
pop
dec
loop
flds
fisttpll
nop
js
push
dec
add
arpl
test
pop
dec
int3
or
outsl
mov
sub
cmpsb
inc
das
lods
dec
es
jl
mov
mov
pop
xchg
cmpsl
cmp
cmc
xor
ret
aad
jae
mov
pop
pop
mov
andl
cwtl
das
add
mov
mov
cmp
call
mov
lods
mov
popf
ficoms
inc
dec
sahf
je
mov
xchg
shlb
jg
sbb
jp
mov
fidivl
or
adc
sub
mov
iret
pop
cwtl
loopne
fnstcw
or
in
cmp
adc
flds
loope
pop
mov
xchg
stos
sub
jne
lret
add
mov
movq
xor
xchg
movsl
pop
mov
sub
push
push
test
out
roll
cmpsb
in
fcoms
add
cmp
movsl
lea
stos
mov
cltd
iret
cmp
dec
imul
popa
cmp
adc
fdivrl
push
mov
ja
ds
das
pushf
enter
dec
mov
mov
sub
pop
xor
jo
shl
call
push
jl
xchg
cmc
sbb
push
or
int
mov
ja
sar
test
xchg
ret
mov
jae
out
movl
mov
sub
jb
loop
xchg
mov
gs
adc
mov
std
in
shrl
int
add
and
js
repnz
lcall
es
adc
mov
hlt
xorb
jl
fucomp
ljmp
stos
push
lods
jb
leave
aaa
mov
mov
scas
sbb
adc
in
jo
mov
fld
stc
cmp
xor
mov
cmp
cmp
cmpsb
xchg
cli
rcll
adc
push
out
sub
cmpsl
jle
push
dec
jl
and
mov
lahf
mov
push
ljmp
inc
xchg
leave
sub
in
aam
mov
xor
cmpsb
mov
and
inc
cli
bound
loopne
mov
inc
or
outsb
sarb
jecxz
jbe
jge
je
pop
add
dec
sahf
jmp
cmp
xchg
ja
add
lahf
and
jmp
lods
cli
sahf
in
sub
sbbb
addr16
xchg
daa
fmull
sbb
sarl
dec
mov
mov
insl
xor
adc
fists
lret
add
gs
sub
pop
jle
sahf
pop
mov
iret
jnp
fwait
xorb
call
or
jp
popf
pushf
push
std
shl
lret
add
mov
xchg
pop
cmpsb
adc
hlt
mov
adc
aaa
lods
adc
dec
sbb
push
sub
push
bound
test
sbb
outsb
dec
loopne
mov
shll
sbb
sub
fwait
mov
inc
cs
push
mov
mov
push
lock
adc
nop
fld
and
inc
or
mov
es
jmp
shll
sbb
xlat
aam
data16
clc
lods
xor
xlat
mov
sub
clc
enter
jbe
les
dec
ret
cli
enter
pop
sbb
pop
sub
ret
lret
test
insl
mov
ds
mov
nop
adc
pushf
sub
or
jbe
cmp
cwtl
or
pop
in
scas
lahf
pop
fstpt
pop
dec
cmc
sub
or
xchg
mov
shlb
mov
adc
and
mov
subb
int3
jmp
jbe
sbb
out
jo
cmp
imul
rclb
iret
cmp
je
push
pusha
or
adc
ror
push
cmc
xor
aaa
jns
ja
sbb
sub
lea
arpl
push
stos
es
fs
cli
sbb
sub
pushf
pop
bound
inc
into
add
in
cs
sahf
mov
in
push
cmp
scas
mov
jle
xchg
mov
inc
fsubrs
movsb
jnp
mov
mov
push
mov
scas
xor
aam
mov
in
jb
cmp
cli
imulb
add
inc
push
xchg
pop
gs
lahf
mov
scas
mov
add
adc
cmp
cmpsb
add
pop
cld
or
pop
push
inc
scas
mov
hlt
clc
movsl
lcall
aaa
push
cmp
pop
push
ret
test
test
inc
jmp
sahf
jmp
cmpl
dec
subb
or
subl
xchg
ficompl
movsl
dec
lods
sbb
nop
loopne
jno
xchg
jae
add
hlt
dec
cmp
out
clc
sub
mov
xchg
pop
das
pop
loopne
sbb
jge
xor
std
ja
loopne
decb
mov
sbb
inc
pop
inc
jb
addr16
jo
addl
jp
pop
mov
mov
cmp
jg
lock
dec
mov
mov
je
pushf
cmp
mov
xchg
inc
stos
dec
ds
sbb
push
fcomps
mov
xor
int3
les
add
into
leave
cmp
jbe
ret
inc
or
pop
xchg
or
test
or
in
xchg
xchg
pop
out
outsl
ror
inc
in
sub
in
ljmp
mov
out
push
inc
mov
incb
lret
inc
dec
daa
push
pop
ja
scas
dec
push
inc
or
sub
and
push
adc
cwtl
aad
mov
lods
cmp
mov
popf
jp
stc
loopne
and
test
outsb
xchg
inc
jl
test
aad
xchg
jmp
int
scas
xchg
xchg
cmpsl
jge
pop
fsubrl
jmp
sbb
push
and
pop
rcrb
popf
and
movsl
push
mov
dec
mov
incl
sub
jno
push
or
sahf
inc
sahf
lea
dec
mov
addr16
cmpsb
sarb
add
lret
aas
inc
fldt
or
pop
cli
jae
mov
lock
roll
and
jb
push
daa
mov
or
fiadds
xchg
sahf
fstpt
push
stos
lods
jo
ss
jno
ret
push
divb
hlt
sbb
repnz
cmpsb
loop
cmp
cmp
fisubrl
sar
push
cmpsl
mov
in
push
adc
push
sbb
scas
sbb
sub
ret
xchg
cmp
scas
pop
es
fcoml
imul
enter
push
shll
dec
repz
cwtl
sahf
adc
jnp
cmc
adc
add
sub
sbb
jecxz
jno
rorb
lock
inc
aas
inc
rcrl
push
test
repz
pop
dec
mov
dec
shrl
lea
in
fsubrp
inc
cmpsl
je
rclb
push
dec
rcr
fistps
cmp
add
inc
jno
fnstcw
icebp
mov
test
cs
mov
test
sti
jbe
pusha
adc
js
pop
push
setns
mov
ret
dec
daa
imul
push
mov
in
cmpsl
aas
adc
push
mov
out
loop
add
scas
inc
hlt
sti
fcomp
and
into
insb
lods
fisubs
xchg
xor
xor
cltd
xor
repnz
int3
mov
idivb
call
sub
sbb
jle
xchg
inc
icebp
negb
cmc
mov
xchg
sbbl
jmp
out
xchg
pop
jns
mov
pop
icebp
scas
mov
aam
lods
add
mov
out
shl
xchg
aaa
sbb
loop
mov
hlt
mov
in
mov
cmp
mov
jge
shll
mov
xor
mov
pop
dec
in
imul
int3
pop
jmp
xchg
in
mov
ret
pop
clc
mov
sti
adc
iret
fisttps
or
stos
int3
add
repz
ljmp
push
aam
or
stos
push
rcr
push
cmp
mov
sub
popf
push
popl
cmp
inc
imul
mov
lcall
mov
mov
cli
xchg
sbb
push
mov
sti
lds
movsl
push
fsubrl
jns
sub
rcr
ret
addr16
cmp
pop
dec
int3
enter
and
jmp
mov
mov
leave
lahf
movsl
xor
mov
add
bound
test
sbb
or
and
xchg
dec
inc
imul
rol
mov
jns
adc
mov
lahf
fnstcw
jge
xor
pop
and
ja
dec
jl
fstpt
mov
push
cmp
neg
in
je
int
and
inc
fisttpl
jnp
push
sbb
sarl
mov
pop
push
pusha
jl
dec
popf
adc
pusha
xchg
ds
out
mov
cmp
aas
ljmp
in
inc
pop
adc
push
pop
mov
mov
int
push
hlt
adc
jo
cmp
cld
and
or
shl
or
lea
fsubs
add
adcl
out
cltd
cmp
sbb
out
idivl
push
addr16
xor
in
adc
pushf
leave
jns
mov
sbb
shrl
mov
mov
sbb
xor
or
xchg
push
pop
das
ret
stc
jno
shlb
ss
ret
jmp
jne
bound
lret
shrl
jle
mov
adc
mov
aam
ja
push
sub
mov
or
xchg
mov
sti
inc
mov
test
or
jecxz
mov
push
jae
dec
cltd
mov
push
out
imul
movsb
mov
mov
xlat
add
mov
stos
mov
push
xchg
aas
and
dec
leave
jp
jmp
adc
loop
mov
and
cmp
push
fcmovnu
and
aam
lcall
sub
ljmp
jb
stos
rcrl
cmp
adc
fimull
mov
push
adc
pop
dec
scas
xchg
insl
movsl
das
jns
mov
in
dec
jecxz
pushf
clc
aam
sub
push
pop
inc
imul
loopne
popf
pop
xchg
inc
rolb
das
lret
sahf
mov
sub
sub
and
fisttpll
sti
test
mov
inc
dec
sti
lea
xchg
ja
aas
and
les
loopne
mov
leave
inc
xor
test
lret
jle
in
sbb
mov
or
add
sti
push
cmp
cmp
repnz
imul
scas
icebp
xor
in
pop
xchg
test
mov
cs
sub
roll
dec
sahf
fstl
fwait
sbb
sbb
test
mov
mov
add
or
cwtl
rorb
mov
push
or
sarb
lret
mov
mov
enter
repz
mov
lret
inc
add
cs
dec
mov
adc
mov
lock
sub
pop
in
lahf
fxam
iret
or
test
cmp
xchg
jno
repnz
add
cmp
data16
mov
inc
pop
fmuls
jle
push
dec
xchg
push
pop
cmpsl
adc
pop
sbb
and
cmpsb
dec
call
pop
ret
loop
insl
fistpll
jg
and
push
and
pop
jnp
lock
pop
in
stos
sub
out
inc
push
jle
jb
add
or
mov
lods
pop
daa
nop
cmp
dec
and
lods
in
dec
fdivrp
in
pop
jae
and
jne
or
in
jns
inc
add
aaa
xchg
lret
pop
pop
out
in
xor
mov
sete
mov
cmpb
pop
jae
stos
sub
adc
popa
add
idivb
fdivs
aas
mov
adc
dec
call
add
mov
lahf
iret
lahf
pop
nop
inc
popf
push
and
add
stc
adc
das
and
mov
jno
repnz
sbb
inc
ja
imul
and
add
mov
mov
push
mov
or
movsl
xchg
ljmp
inc
jbe
sbb
call
cmpsl
adc
xchg
or
sbbb
cmc
push
outsb
cwtl
add
iret
bound
hlt
fbld
jns
into
cmp
or
pop
cmp
xchg
pop
adc
fiaddl
mov
lods
xor
inc
popa
jo
icebp
bound
inc
outsb
fists
jg
mov
pop
pop
mov
out
sub
xchg
ja
hlt
mov
fstpt
dec
or
notl
mov
out
sarl
shrl
pop
repz
in
inc
mov
movsl
in
in
mov
sub
or
imul
enter
pop
jl
cmp
sub
pop
mov
cs
pop
lods
cmpsl
inc
jl
jno
out
loop
or
lods
stc
sub
dec
push
frstor
cwtl
lds
inc
mov
mov
mov
lcall
mov
int3
jle
mov
and
add
test
add
and
mov
test
and
push
jbe
sub
adc
xor
aaa
les
inc
jge
out
sub
jg
cmpsb
shll
jne
push
sbb
shll
outsb
mov
lock
cmp
pop
in
arpl
xlat
jnp
dec
inc
ljmp
inc
cmp
or
jnp
sub
mov
or
stc
sub
and
lret
or
rcl
jmp
cwtl
aam
loopne
dec
imul
add
push
pop
xlat
stc
int
cmp
mov
in
dec
cmp
mov
ficomps
ss
scas
mov
mov
gs
jp
push
test
imul
and
xchg
notl
or
test
xchg
insb
sbb
nop
pop
lahf
jne
cmp
mov
jbe
ja
cmp
inc
jge
cltd
mov
sahf
loope
rorb
movsb
ds
dec
xorb
jne
and
push
imul
test
sbb
sub
add
test
jns
adc
aam
aaa
lret
pop
cmc
jb
or
in
mov
insl
mov
dec
jns
loope
jb
pop
mov
jb
xchg
loop
inc
stos
incl
and
repz
pop
ss
add
push
shlb
fs
in
ljmp
mov
xor
sbb
push
mov
in
adc
into
dec
rol
mov
mov
cmpsb
out
adc
data16
mov
xor
test
fsubl
shll
loopne
aaa
loope
aas
loope
je
xor
imul
ja
ljmp
push
fcoml
or
sti
addb
nop
sbb
mov
add
enter
out
orl
jp
push
testb
push
ret
fdivrp
bound
push
pop
xor
mov
mov
inc
sar
arpl
in
jb
dec
lods
add
sbb
mov
xor
sbb
shl
xchg
adc
es
cmp
call
div
shrl
cmpsb
jmp
xor
mov
das
shrl
push
mov
sar
inc
jge
iret
xchg
push
hlt
cwtl
mov
push
fsubrs
aas
xor
push
aaa
pop
sbb
sub
push
movl
dec
insl
cld
lds
xor
pop
lret
fdivs
cwtl
filds
mov
sbb
fnstsw
int
inc
or
aam
mov
dec
imul
inc
pop
dec
movsb
mov
arpl
xchg
sahf
xchg
adc
mov
xchg
dec
cwtl
cli
repz
dec
mov
cmp
into
ss
jge
popf
inc
mov
mov
dec
push
mov
inc
out
mov
pop
lret
jae
dec
cmpsb
add
jae
iret
arpl
add
inc
cltd
dec
mov
movb
into
push
xchg
cs
in
imul
mov
push
xchg
aad
and
jle
xor
loop
stos
dec
test
enter
je
shrb
push
pop
add
cmpsb
insb
aas
mov
sbb
sbb
jle
shll
xor
in
fildl
les
xchg
fsubp
add
int
fs
sub
jbe
daa
sub
pop
rcll
jnp
adc
andb
outsb
orb
out
sub
repnz
es
test
mov
out
push
push
insl
push
and
xchg
out
or
xor
xchg
mov
ficompl
fwait
gs
mov
mov
mov
cld
sbb
fistpl
rcl
cmp
pop
loopne
rorl
mov
sub
xor
sar
jp
sbb
push
mov
popf
iret
xor
ds
inc
insb
hlt
sbb
dec
add
imulb
fistpll
pop
adc
lods
and
bound
fisubl
xor
pop
sbb
mov
jmp
mov
sub
add
in
xlat
rolb
pop
xorl
loope
dec
cwtl
push
aas
imul
aaa
mov
sbb
repz
dec
leave
and
fists
out
mov
leave
mov
lods
pusha
std
xchg
jae
inc
scas
xchg
cmc
jo
orl
and
repz
out
push
les
shlb
push
mov
mov
xchg
mov
sbb
pusha
in
adc
fisttps
loop
pop
daa
push
out
mov
nop
out
out
aam
ror
lock
cmp
push
stos
movaps
add
pop
sbb
mov
or
adc
sbb
xchg
frstpm(287
pop
or
sbb
mov
push
mov
out
movsl
mov
xchg
enter
ror
cwtl
add
jmp
fwait
jns
ret
pop
hlt
push
adc
mov
imul
movsb
inc
mov
pusha
jns
dec
cwtl
lds
sub
int3
into
test
lods
ja
pushf
jno
sub
addr16
jb
push
cwtl
cmp
mov
test
pushf
aaa
mov
lret
pop
or
sbb
jo
mov
and
mov
pop
push
push
jnp
fmul
cli
popa
adc
arpl
push
outsb
lods
insl
xchg
sbb
mov
sub
and
push
push
mov
pop
and
lods
roll
push
pop
ja
xchg
lret
sbb
inc
test
insl
flds
ljmp
ljmp
or
push
js
cmpsb
imul
stc
xor
clc
adc
or
xchg
iret
lds
jp
scas
stc
jns
sbb
ja
and
jg
push
push
aaa
xchg
sbb
xchg
ds
xchg
and
rcrl
jb
mov
pop
lcall
pusha
and
outsb
mov
sub
jecxz
add
xor
test
cmpsb
mov
sahf
les
or
lret
lcall
and
mov
adc
loopne
testl
jo
and
push
adc
mov
push
test
push
xor
adc
dec
shll
push
cmp
pop
or
test
push
sbb
cmpsl
ret
lods
fwait
jecxz
sbb
jae
pushf
out
out
out
cmc
dec
cmpsl
cs
pop
sub
sub
test
add
or
or
add
add
mov
shlb
in
jecxz
mov
pop
push
push
clc
test
testl
nop
mov
jo
push
dec
xchg
aam
data16
xor
mov
in
and
sbb
mov
fcmovu
jo
mov
lcall
in
cmpsb
mov
sub
mov
int3
in
ja
xchg
stc
inc
add
xor
xchg
lcall
int3
mov
mov
push
cmp
loopne
add
movsl
mov
movsl
jae
fld
sub
cmpsl
pop
cmpsl
in
pop
xor
add
xchg
mov
fsts
fucom
sbb
pop
xchg
stos
sbb
mov
dec
sub
mov
add
sti
jl
fnsave
scas
inc
adc
xchg
xor
stc
pop
int
ret
sbb
sbb
jmp
push
pop
movsl
leave
mov
aam
out
imull
adc
xor
lcall
fcomip
dec
sub
ficomps
adc
mov
sub
cmp
mov
fucomp
andl
jmp
push
sarl
popl
mov
imul
push
jle
cmpb
xchg
rsm
inc
jge
divb
or
xchg
pop
stc
jnp
adc
loop
lock
orl
ret
pop
subl
repnz
adc
nop
or
jno
out
mov
push
mov
in
inc
xchg
ret
inc
adc
fsubs
and
out
xorl
and
jp
ret
push
es
loop
rcrb
ja
cmc
test
ss
xchg
pusha
mov
dec
jle
popf
in
xor
mov
mov
movsl
adc
test
in
int3
jle
dec
clc
jge
clc
xor
iret
xchg
dec
dec
push
and
out
fcomi
insl
xor
adc
add
mov
mov
call
test
cmp
cmpsb
into
pop
mov
pop
adc
pop
shrl
call
sarl
xchg
fsubs
dec
inc
or
xor
lods
push
sbb
daa
cmp
in
scas
iret
xchg
jmp
int3
sub
mov
xorl
cmpb
popf
mov
jg
xlat
lcall
pop
jnp
inc
sbb
inc
sarb
and
or
fxch
jb
pop
bound
subl
or
mov
sahf
or
jl
jne
mov
div
aaa
jecxz
dec
push
aad
adc
jb
mov
stos
lock
xor
inc
in
mov
xchg
adc
inc
insb
iret
pop
and
cmp
js
xchg
loope
jecxz
js
mov
scas
repz
cmc
adc
movsb
cli
xchg
mov
xchg
shlb
pop
adc
dec
testb
subl
cmpsl
cmp
adc
leave
insb
repnz
stc
xchg
cmpb
testl
mov
std
push
std
stc
xor
pop
ret
sbb
mov
push
add
scas
leave
int
ret
mov
and
xor
sbb
pushf
xor
mov
xchg
pop
or
push
cs
mov
andl
xchg
dec
xchg
movsb
outsl
mov
adc
pop
xor
mov
xchg
lods
imul
repz
pop
inc
mov
or
in
or
adc
test
lods
ds
xchg
incb
xlat
rcl
sub
sub
mov
out
leave
hlt
mov
cmp
cld
sub
xor
pop
mov
mov
outsb
cmp
push
lea
icebp
xchg
inc
fstpt
mov
cmp
cmp
lock
hlt
movsb
movsb
test
pop
test
test
bound
mov
sub
ja
stos
enter
ljmp
addr16
pop
mov
std
sahf
jnp
xchg
imul
imul
add
jnp
stos
mov
xchg
add
jecxz
gs
mov
sbb
mov
repz
and
and
sahf
cmp
jecxz
xorb
xchg
aad
sub
addr16
iret
in
mov
sbb
adc
pop
push
int3
mov
and
mov
rcll
inc
push
fildl
aaa
ret
nop
imul
push
lock
test
mov
shll
je
testl
pop
and
sub
cmp
push
adcl
add
insb
push
popf
outsl
adc
lods
xchg
aam
lret
and
inc
adc
in
loop,pn
es
into
and
nopl
and
cmc
push
daa
cld
and
adc
pop
enter
fucomi
enter
lret
jnp
dec
sbb
cld
pop
push
fucomip
cs
daa
test
lods
pop
ja
jo
lcall
add
mov
add
popa
aaa
mov
or
test
or
and
inc
inc
jne
jno
mov
cmp
xchg
mov
cmpsl
rclb
fsubp
test
enter
add
mov
lret
cmc
pop
pop
push
push
push
jp
sub
mov
fs
xchg
outsb
inc
dec
hlt
and
out
ud2
jg
or
int3
jmp
jg
mov
and
sub
jae
dec
bound
loopne
lods
dec
xchg
xchg
pop
push
pop
adcb
xor
addr16
push
test
movsb
push
nop
and
pop
das
negb
xor
rclb
mov
std
fs
dec
loope
dec
dec
orl
rcl
enter
int3
leave
fsincos
leave
test
xor
jle
shr
pushf
mov
out
xchg
adc
jmp
mov
fs
xlat
or
pusha
lahf
mov
mov
mov
lcall
xchg
inc
xor
outsl
fsubrp
lods
adc
push
pop
test
jae
xor
iret
inc
mov
sub
xchg
cmpsb
aaa
aam
outsl
popa
cltd
mov
das
repz
inc
ja
nop
mov
mov
sbb
outsl
nopl
and
xchg
cmp
jne
icebp
aam
dec
daa
daa
es
rcr
jns
enter
movsb
rcrl
sbb
negb
pop
jns
xor
and
push
xor
and
xor
jno
pop
push
mov
adc
ss
lods
jbe
push
mov
pop
sahf
push
lods
lahf
fmul
frstor
aad
xchg
leave
adc
fisttpll
push
lret
aas
jne
fs
sub
push
jno
or
movsb
subb
add
jp
cld
mov
out
in
pop
jmp
mov
pop
das
hlt
jmp
ja
inc
or
jbe
push
ficompl
and
and
inc
adc
orb
sub
sub
sub
inc
fs
aam
repz
dec
push
punpckldq
jno
fidivrl
rorl
push
push
leave
je
mov
dec
xchg
pop
pop
mov
jmp
jmp
jbe
test
scas
pop
es
xor
xor
sub
lods
arpl
cltd
mov
mov
pop
push
cltd
and
call
fisubrs
and
lret
ret
loop
jo
daa
outsb
sub
fimull
jg
js
es
in
call
sti
shlb
xchg
shlb
cwtl
nop
ss
push
xchg
inc
xlat
jnp
xchg
icebp
cmp
outsb
test
or
push
jnp
cmp
lret
xchg
mov
mov
mov
imul
jo
dec
rolb
sub
mov
loope
sub
mov
jno
xlat
cmp
lods
fidivl
pop
cltd
fwait
inc
fwait
lea
sbb
adc
pop
dec
les
stos
imul
je
insb
or
xor
arpl
xor
sysret
mov
mov
loopne
repz
mov
fstpl
mov
leave
xchg
or
bound
imul
cmp
loope
out
sub
js
imul
ds
jne
mov
imul
inc
out
adc
bound
stos
mov
or
mov
cs
xor
adc
push
xrelease
xchg
adc
icebp
lret
sub
shrl
push
sbbl
out
cli
scas
adc
test
scas
sub
test
xchg
cmc
mov
or
das
shll
mov
mov
cmp
or
lea
cmpsl
mov
shlb
addr16
jb
pop
in
jnp
pop
pusha
ret
push
pop
insl
fidivl
scas
in
fucomi
cmp
in
sub
xchg
in
jbe
test
daa
pop
mov
rolb
jle
jl
notl
in
sub
and
fistpl
mov
outsl
ror
outsl
ds
out
inc
sbb
testb
shl
adc
les
gs
inc
fwait
bnd
adc
xchg
movsl
les
lcall
xchg
add
sub
add
ret
movsl
insl
dec
arpl
push
arpl
mov
je
and
add
cli
adc
pop
mov
jge
adc
mov
pop
pop
mov
jecxz
dec
insl
cmp
mov
jmp
addr16
js
pop
shlb
sbb
in
in
sti
rol
fadds
xchg
gs
data16
insb
fimuls
cmp
and
dec
aam
inc
mov
call
cmp
hlt
pop
lea
lds
stos
xor
add
test
sahf
adc
addr16
jbe
mov
je
sub
sahf
enter
inc
cltd
xor
iret
inc
or
enter
repnz
addr16
mov
shll
arpl
or
cli
and
add
mov
dec
push
add
fcmovu
sub
lcall
push
jb
scas
push
aad
call
dec
test
into
outsb
je
dec
or
scas
and
push
das
out
jbe
xchg
jl
pop
jne
mov
jmp
sbb
cwtl
mov
rcrl
mov
das
inc
addb
mov
enter
repz
pextrw
bound
outsl
fs
mov
sti
in
insb
es
mov
fwait
clc
xchg
aad
loop
mov
out
inc
mov
outsl
les
inc
aad
add
cmp
inc
in
insb
iret
xor
out
call
cld
ret
xchg
lret
mov
lea
in
jno
bound
fsts
leave
popa
dec
jns
pop
ret
pop
jle
mov
mov
xchg
adc
and
and
iret
jno
cmpl
xchg
pop
movzwl
and
inc
mov
add
lds
mov
xlat
dec
out
jp
movb
orb
ret
cmp
add
jp
adc
in
push
lcall
frstor
icebp
mov
shl
enter
jno
clc
sahf
int3
lret
insb
mov
xor
jp
jnp
cmpsb
ljmp
pop
loope
ss
loop
push
and
pushf
mov
xchg
stos
shrl
or
fbld
dec
mul
fstl
dec
outsb
pop
or
pushf
and
xlat
sub
mov
push
mov
sbb
aam
add
cmp
out
lret
clc
out
cmp
mov
daa
push
xor
xor
in
dec
jge
int
push
ret
mov
dec
mov
mov
data16
pushf
jne
into
shl
pop
lea
mov
mov
ja
fcoml
in
jns
mov
popa
js
push
scas
test
inc
loop
jno
mov
jbe
or
hlt
hlt
lock
cmp
gs
mov
cld
xchg
out
mov
lcall
aam
imul
nop
cltd
out
inc
jns
enter
ja
cmpsb
push
shlb
shll
pop
mov
xchg
jge
jecxz
adc
rorb
mov
rep
pinsrw
dec
stos
or
sbb
ffreep
dec
je
add
je
jge
dec
in
pop
mov
cmp
push
fs
ds
xor
jle
mov
push
loop
aaa
sub
fistpll
popa
stc
add
js
imul
mov
dec
inc
xchg
addr16
jl
test
lret
push
insl
lods
rorl
cmpsl
loop
stos
mov
sub
push
cmp
pusha
fsubl
notl
rcrb
gs
and
jmp
mov
add
mov
clc
mov
test
jmp
dec
movsl
into
fst
dec
sub
dec
push
call
add
popa
add
mov
inc
scas
in
mov
adcb
adc
ljmp
inc
call
adc
jo
popf
mov
or
and
scas
add
rorl
inc
cld
fstp
in
mov
ret
add
test
clc
sbb
pusha
inc
call
mov
pusha
test
pop
int3
jle
push
fldt
sbb
int3
pop
shll
stos
inc
adcb
xchg
ret
and
push
cmp
cmp
mov
rep
lret
jns
mov
loop
shrb
out
jno
push
jp
rcrl
fldl
and
imul
mov
cmp
popf
repz
sub
ret
inc
hlt
mov
jg
test
lea
xchg
loope
ja
and
cmp
arpl
cltd
mov
sub
sahf
leave
add
mov
popf
mov
repz
sub
adc
jo
sbb
icebp
inc
pop
ja
cmpsl
cmp
xor
ror
and
dec
scas
inc
dec
and
in
xor
cmp
mov
mov
call
sti
test
rorl
jo
fadd
data16
cmp
fs
dec
test
ret
mov
push
inc
cld
mov
call
adc
xchg
test
mov
mov
pop
aam
and
mov
mov
pop
xchg
loope
inc
push
stc
loopne
scas
dec
insl
std
xchg
mov
cld
add
lcall
mov
out
cmp
push
push
xchg
data16
adc
adc
imul
nop
decb
jno
xor
pop
adc
or
add
xlat
push
push
les
and
inc
ret
fcoms
rolb
in
push
shll
loopne
or
pop
into
mov
sbb
aaa
popa
test
repz
mov
cmpsb
sar
insb
add
jg
in
add
cmpsb
dec
push
dec
pop
faddl
cmp
ret
mov
or
fdivs
mulb
push
jns
dec
dec
loop
lret
push
push
out
mov
std
ss
jb
shlb
imul
jbe
mov
inc
adc
movsl
adc
aaa
and
jo
xchg
hlt
arpl
mov
sub
into
sbb
nop
sub
aam
push
les
add
mov
scas
cmp
inc
sbb
cmpsb
sti
sarb
push
cmp
in
out
mov
push
push
push
sbb
pop
scas
mov
daa
shll
push
jae
loopne
jns
aas
roll
mov
mov
movsl
push
out
jge
push
lret
cld
mov
arpl
clc
pop
leave
ja
pop
cld
sbb
stc
fistpl
aam
and
mov
std
jne
ds
rol
scas
or
movsb
push
outsl
and
mov
insb
cmp
jmp
push
out
pusha
scas
testb
adc
push
into
mov
pop
pop
push
cmp
sti
inc
dec
or
leave
shll
jne
or
into
loope
or
xlat
dec
das
jge
add
push
jb
ret
arpl
pop
test
or
mov
es
pop
mov
xchg
cmp
jge
pop
mov
fpatan
or
add
mov
sub
mov
andl
shrb
jns
hlt
dec
int
lcall
dec
push
cmp
sahf
pusha
xor
inc
in
mov
xor
xlat
aaa
aas
dec
lods
cmp
pop
pop
out
scas
push
sarb
imull
stc
mov
mov
dec
push
or
or
hlt
jmp
mov
jnp
test
add
pop
xor
inc
lahf
les
jb
popa
dec
pop
fwait
aaa
mov
std
scas
dec
lahf
xbegin
loopne
or
in
push
jp
ret
dec
je
loope
inc
mov
mov
cltd
sub
sub
movsl
xchg
jb
pop
fisttps
xor
mov
cli
dec
mov
scas
sub
sbb
xchg
mov
out
popf
pop
ja
mov
xor
mov
push
pop
dec
test
xlat
cmp
movsl
int3
ds
insb
add
shl
int
xor
mov
insl
jno
push
out
lods
rorb
mov
popf
cwtl
push
mov
icebp
mov
call
mov
movsb
out
or
mov
jno
inc
lahf
stos
push
test
xor
add
scas
icebp
popa
out
xchg
fsubr
stos
push
pushf
mov
gs
imul
mov
data16
jge
imul
mov
out
test
icebp
and
mov
fmul
clc
hlt
stc
xchg
je
jp
dec
daa
xchg
fbstp
push
xor
jae
cld
jecxz
int
add
mov
push
xor
inc
lds
fwait
mov
push
sub
mov
mov
imull
insb
pop
imul
std
test
ds
in
jns
pop
push
mov
mov
aam
or
leave
fmulp
test
mov
mov
aaa
cmp
jbe
in
pop
fwait
mov
popa
xor
cltd
aam
stos
into
cmp
rclb
sbbl
push
punpckldq
repnz
jb
add
mov
mov
int
and
cmc
ds
mov
jg
aad
loop
scas
or
test
sub
jl
daa
pop
hlt
cmp
sub
cmpsl
stos
outsb
jne
xchg
cmp
jecxz
jnp
in
stc
mov
xchg
fwait
push
push
in
adc
mov
mov
int3
nop
scas
sbb
into
lret
lock
sub
push
rol
cmp
add
sbb
mov
fcoms
push
cltd
and
lret
sbb
nop
incb
insb
jg
xchg
adc
daa
xchg
out
adc
and
loope
xor
jmp
jno
cmpsb
pop
sub
dec
cli
mov
inc
rolb
bnd
inc
scas
pop
outsb
sub
je
dec
sbb
push
mov
aaa
es
outsl
cmp
push
sub
mov
scas
pop
call
pop
clc
mov
jae
dec
dec
xlat
popa
es
mov
into
bound
and
das
imul
outsl
je
adc
cli
or
enter
lret
jbe
inc
push
jge
aam
dec
and
cs
ss
add
cmp
nop
lahf
loopne
outsb
mov
pop
pop
sub
cltd
jnp
mov
lea
clc
or
daa
jecxz
lock
lods
cwtl
push
inc
lcall
jns
in
pop
xchg
jg
push
cmpsl
lea
xor
setae
shll
mov
inc
jae
dec
loop
cld
or
lcall
in
and
arpl
mov
out
clc
sahf
and
push
imul
test
pop
notl
sbb
xchg
aaa
mov
jmp
fsub
les
and
mov
movsl
xchg
loop
mov
arpl
xorb
pop
clc
insl
mov
adc
loop
sahf
xchg
adc
inc
pop
or
mov
lods
call
ret
pop
xchg
std
lcall
adcb
or
fidivrs
in
leave
jb
call
ja
into
mov
or
fadds
jbe
in
cmpsl
pushf
lcall
in
add
out
xchg
imul
imul
add
jge
mov
mov
and
mov
cmpsl
jl
cmp
pop
cmp
sub
push
adc
mov
int3
aad
jns
push
and
jno
mov
dec
imul
mov
outsb
xchg
dec
and
lret
fstpt
xchg
mov
test
dec
ficompl
cmp
mov
xor
jo
adc
mov
and
aas
sbb
fmull
rcl
call
loop
js
jmp
icebp
sbb
mov
mov
lahf
sub
dec
nop
cmc
mov
sub
ret
pop
sub
jnp
mov
lcall
pop
cmp
xchg
cmp
loope
cltd
mov
lcall
outsl
xor
pop
pop
lods
rclb
dec
add
pop
adc
sub
pop
mov
lcall
add
fdivs
xorb
adc
cmp
jge
jmp
cmpsl
les
mov
push
mov
jbe
adc
pop
adc
outsb
ret
orl
test
mov
int3
cltd
sbb
cmpsl
xor
stos
adc
out
inc
cmc
aaa
andl
pop
xchg
bsr
aad
sub
cwtl
sbb
or
xor
das
mov
sbb
or
sbb
sarl
adc
rcr
cs
out
stos
jnp
push
inc
push
pop
mov
mov
mov
mov
and
in
movsl
mov
fiadds
inc
dec
out
rcll
hlt
shlb
dec
jae
mov
icebp
xor
inc
mov
or
xlat
mov
cmc
jecxz
sub
sbb
adc
mov
mov
jmp
and
ror
pop
xor
das
pop
push
and
xchg
sub
test
mov
mov
aaa
dec
xor
jae
movsl
stos
gs
out
push
pushf
nop
jmp
jno
stos
mov
xchg
push
inc
rclb
into
enter
adc
lret
mov
in
mov
mov
mov
sti
inc
out
mov
inc
dec
ret
or
xchg
data16
and
scas
sbb
inc
pop
in
or
std
test
dec
loop
jecxz
in
sbb
loop
sar
sub
sub
lods
adc
lods
push
fimull
lahf
inc
push
es
mov
hlt
pop
dec
fisttps
push
fdiv
inc
push
pop
sbb
pop
dec
and
pop
cmc
pop
or
cmpl
push
cld
add
cli
pushf
imul
xchg
xor
add
sbb
mov
add
ret
leave
adc
fnstenv
fadds
and
sub
icebp
js
xchg
gs
sti
shrl
inc
arpl
fistpl
mov
inc
sub
and
nop
mov
neg
nop
adc
dec
push
mov
out
dec
sahf
mov
inc
bound
dec
and
xor
mov
lea
pop
push
dec
lea
jnp
mov
test
inc
sub
incb
insb
fiadds
loop
insl
pop
pop
aad
fsts
xchg
scas
sbb
ljmp
mov
idivl
shrb
lahf
test
cwtl
lcall
bound
sub
mov
xchg
fmul
push
jmp
xchg
jnp
jno
pusha
mov
push
std
loop
and
mov
xchg
cmpsl
cmp
cmp
iret
xchg
pop
std
mov
fisubl
scas
outsb
mov
and
cld
sahf
mov
arpl
mov
loopne
mov
out
push
sbb
lret
inc
subl
sbb
jp
mov
addl
gs
jmp
in
stos
push
cmc
nop
pushf
cmp
insb
adc
push
pop
mov
push
stos
jo
mov
rcll
adc
mov
roll
stos
in
push
ja
push
std
jae
mov
imul
sub
lret
inc
mov
mov
or
or
repnz
mov
das
stc
mov
add
adc
lods
scas
sti
ret
popa
sbb
dec
push
sub
insl
adc
pop
dec
loopne
xor
push
fildll
repnz
or
loope
scas
fs
push
mov
cld
ja
pop
in
popa
sub
mov
fidivrl
pusha
mov
dec
je
adc
movsl
ds
sbb
dec
js
aaa
push
loopne
out
sbb
jmp
popa
adc
cmpsb
jle
es
out
lds
sbb
jne
jl
xchg
into
fnstenv
mov
dec
add
adc
mov
and
xor
xor
jb
ja
addr16
push
pop
xchg
aam
je
scas
xchg
jecxz
xor
add
lret
xchg
inc
mov
shll
insl
cltd
sub
hlt
sub
inc
adc
fdivs
and
lock
inc
pop
add
js
ret
cmp
jg
inc
push
mov
mov
inc
sbb
dec
add
xchg
adc
mov
push
pusha
and
mov
test
xchg
cwtl
test
out
mov
mov
dec
fyl2xp1
data16
add
jns
bound
jmp
or
rclb
xlat
test
and
xor
fldcw
repz
sub
inc
pop
push
jg
xchg
xchg
mov
jae
xorb
push
xchg
pushf
jns
sbb
sbb
xchg
scas
sbb
arpl
push
shlb
lret
mov
lret
cwtl
push
fstpt
xor
jnp
ficompl
cs
push
negl
scas
out
xchg
jo
inc
mov
sub
popf
or
jbe
mov
or
mov
inc
popf
aaa
btc
xchg
mov
je
aaa
imul
aam
or
add
sbb
rclb
das
movsl
jno
ss
movsl
push
ljmp
pop
mov
loop
mov
push
jg
sbb
mov
rorl
sbb
xor
popa
lock
xchg
lds
insb
or
scas
mov
mov
cmc
sbb
xor
fstl
aam
icebp
sub
xchg
pusha
mov
aam
inc
rolb
cmp
test
mull
ljmp
pop
jmp
sbb
push
cmp
roll
aam
jl
mov
adc
ret
arpl
cs
rcl
mov
push
lods
inc
clc
xor
add
fsubrs
sarl
xor
mov
repz
fcoml
push
cmc
cwtl
cmp
xchg
sbb
cld
adc
in
inc
ja
pop
into
data16
jg
imul
cmp
xchg
adc
leave
outsb
sahf
jmp
mov
jg
jecxz
cmp
mov
shr
pop
popf
mov
out
out
and
cs
enter
lds
pop
xlat
inc
xchg
mov
push
cmp
or
push
in
or
xchg
loopne
mov
mov
mov
repz
push
push
scas
pop
and
jle
or
test
aaa
aam
mov
jg
inc
gs
push
loop
pop
and
js
jle
ja
fs
in
cmp
stos
add
fnop
pop
dec
insl
jae
jns
mov
sub
in
xchg
cmp
std
mov
popf
push
fdivp
sbb
push
test
lods
dec
cmp
repz
fcmovnu
lods
bound
loop
loope
scas
mov
notb
fistl
bound
xor
cltd
adc
push
loope
jbe
mov
add
sbb
jo
in
mov
aam
jo
mov
stos
fdivp
ret
sahf
sub
or
stos
mov
pop
xor
std
cltd
outsl
adc
daa
fbstp
inc
push
jno
push
fsts
repnz
inc
cmpsl
fwait
into
pop
adc
sub
pop
ljmp
sbb
push
mov
lods
and
incb
add
dec
rcl
sub
mov
shl
cmp
xchg
push
sbb
insb
in
loope
push
xchg
mov
xlat
js
and
mov
mov
xchg
xchg
xchg
mov
jae
lods
dec
pop
mov
jmp
popa
popa
cs
xor
leave
add
jle
xchg
xchg
jle
mov
hlt
mov
push
cmpsb
pop
inc
sub
sbb
scas
mov
push
and
fisubl
iret
insl
mov
sub
ret
pop
fstl
js
cmpb
dec
out
ret
mov
push
sti
shl
jnp
inc
icebp
cmp
mov
xor
jge
push
imul
cmp
or
jbe
dec
inc
jno
mov
sub
pop
into
xor
ds
pop
dec
mov
or
hlt
push
fildl
js
add
ja
lret
iret
movsb
dec
ret
jmp
outsl
test
sbb
test
je
imul
popf
shlb
pop
jle
adc
pop
stc
lcall
add
push
cld
xchg
and
xchg
rolb
inc
inc
xchg
cli
jbe
push
jne
sar
ret
push
out
xlat
cltd
mov
xchg
decb
mov
popf
inc
jb
cltd
movsl
sbb
mov
jp
lcall
jne
pop
fcoml
sbb
sbb
add
sub
data16
lcall
xchg
je
pusha
jb
fdivrp
adc
int
addb
insl
sbb
je
notb
fcomi
jp
fnstcw
stos
lcall
xor
lods
ret
sub
mov
add
cmpsl
dec
mov
push
pop
ljmp
or
test
ss
inc
dec
and
dec
adc
das
sub
add
mov
ja
outsl
cmp
xchg
lret
int
xchg
jp
shrl
xor
jge
add
das
mov
mov
sub
std
xchg
rorl
sbb
pop
in
jne
xor
dec
lods
call
fistps
dec
mov
adcb
call
pop
fs
sub
xchg
mov
sarb
leave
in
push
add
adc
sub
xor
push
mov
jle
lock
jecxz
ret
xchg
mov
xlat
std
adcb
popf
mov
leave
xor
cmp
xor
rolb
test
popa
arpl
les
adc
pushf
pop
shlb
pop
ja
hlt
cs
sub
xchg
scas
jae
andl
jbe
cli
outsb
add
leave
loopne
inc
and
xor
sbb
ret
pop
imul
mov
jno
mov
pop
jne
adc
dec
lcall
dec
flds
cmp
or
xchg
add
out
aad
stc
cmp
xor
out
mov
or
mov
mov
sbb
lret
in
xor
sbb
dec
push
pusha
arpl
pop
repnz
push
cmp
inc
xor
jecxz
push
cmp
push
inc
fdivl
or
adc
add
xchg
pop
inc
aas
mov
pop
fldenv
jg
xchg
cmp
cwtl
out
mov
outsb
fwait
cvtdq2ps
add
sbb
xchg
add
das
cmp
std
repz
pop
mov
mov
jecxz
fs
mov
sbb
xchg
mov
jge
and
rcll
data16
jno
std
lret
movsl
add
imul
stc
jbe
inc
xor
adc
movl
aad
aam
push
arpl
mov
jbe
push
leave
ja
sti
pop
inc
das
faddl
lret
pshufw
ficomps
pop
cmp
popf
daa
mov
cmp
sub
add
mov
push
inc
mov
repz
repz
xlat
mov
mov
inc
lods
jb
filds
jne
adc
jmp
lahf
mov
push
repz
loop
loope
xlat
jecxz
push
outsl
jnp
pop
sbb
and
mov
fadds
jno
nop
gs
push
jno
mov
push
adc
dec
push
popf
push
dec
adc
loopne
dec
jg
pop
int3
inc
sbb
shl
loope
lret
movsl
lods
arpl
std
push
inc
cmc
pop
push
sub
data16
test
notb
mov
nop
pop
pusha
push
test
adc
push
movsb
lret
mov
repnz
insl
stos
mov
daa
repnz
pusha
mov
pop
xor
insb
call
sbb
push
cmp
xchg
mov
cmpsb
adc
xchg
inc
andl
mov
sti
test
jl
xchg
das
jne
movsb
and
std
sbb
or
xor
cld
cmpsl
pop
das
sbb
push
jb
mov
mov
lds
fiadds
out
lahf
in
mull
jo
cld
inc
fisttps
fs
loop
iret
arpl
lea
cmp
xchg
movb
or
fdivr
loope
nop
and
or
mov
std
fdiv
sbb
ret
aaa
loop
sub
push
out
lcall
jnp
xchg
xchg
push
push
mov
pop
je
out
ss
mov
push
lods
pop
pop
jecxz
pop
fs
into
sbb
and
sbb
cmc
cmp
ret
adc
and
adc
icebp
mov
xlat
dec
mov
test
stc
xor
xchg
mov
dec
sub
jbe
fisttpll
mov
stc
pop
lret
out
stos
ja
cmc
repz
out
vucomiss
out
jo
adcb
cmp
testl
stos
roll
popf
push
cli
cltd
xchg
mov
add
mov
xor
pop
int3
xor
sbb
jge
sbb
popa
sub
fistps
gs
push
jmp
push
lret
bound
pop
adc
and
mov
ror
das
orb
cmp
mov
jecxz
je
lods
ja
ret
pop
repnz
jnp
fbld
push
out
gs
pop
dec
push
rdtsc
sbb
xor
add
adc
aas
enter
xor
imul
xor
pop
lret
ljmp
dec
and
sub
inc
das
call
int
lds
cmp
mov
stos
sub
or
popf
add
push
daa
fucomip
xchg
inc
add
iret
pop
sahf
jo
push
ret
sub
dec
mov
fidivl
push
aad
sarl
push
les
xor
popf
mov
mov
lds
xor
loope
pop
out
outsl
in
inc
int
mov
lcall
mov
push
stos
mov
xchg
xchg
dec
push
std
dec
into
push
push
data16
adc
lods
jl
into
cltd
ja
or
or
out
inc
cmc
loope
cltd
fnstsw
pushf
or
pop
cmpsb
lods
mov
xchg
movsb
insl
adc
or
push
mov
dec
sbb
fcoms
out
fidivl
dec
out
mov
stc
mov
call
inc
xor
mov
jno
movsb
adc
arpl
mov
sbb
add
dec
aam
test
rcll
leave
mov
sbb
push
inc
sbb
push
xor
jmp
lds
mov
and
lock
adc
inc
cmpb
repz
sbbb
inc
bnd
mov
enter
lret
int
inc
xor
nop
pop
fisubs
sub
scas
fcmovu
adc
jge
bound
jb
insl
inc
jecxz
xchg
data16
jg
adc
dec
test
dec
jg
jle
loop
adc
pop
mov
loop
fcoms
flds
pop
lcall
mov
ss
and
jbe
loope
loopne
bound
inc
mov
mov
cmp
aas
pop
cmp
cltd
sbb
sbb
inc
ljmp
or
iret
pop
adc
mov
das
jo
popa
cmp
inc
dec
pop
adc
xchg
lret
cmp
adc
inc
xchg
sar
mov
daa
push
add
pop
dec
dec
movsl
push
mov
stos
mov
xchg
jl
or
pop
add
mov
rcr
xor
dec
mov
jmp
cld
imul
sbb
loope
cwtl
sahf
cmc
push
popw
pop
sbb
jnp
xlat
jne
push
ljmp
mov
aam
push
les
je
and
mov
dec
cmp
push
jge
test
test
mov
andl
sub
cwtl
test
xchg
shll
out
ljmp
in
test
inc
repnz
xor
sbbb
cmp
rorl
int
jle
push
or
mov
push
pop
mov
jmp
jo
out
inc
call
jl
aaa
adc
adc
dec
push
hlt
mov
mov
jle
mov
cmp
jl
popf
aaa
pop
mov
xchg
push
shlb
jns
add
push
cmpb
jb
test
mov
and
dec
xchg
xor
and
testl
jmp
pop
dec
mov
jge
fbld
repnz
loopne
push
dec
scas
in
adc
cltd
sub
lock
clc
xchg
mov
mov
adc
add
fidivrl
pop
pop
das
sbb
ss
mov
jbe
inc
jle
xor
scas
mov
inc
mov
aas
push
xlat
mov
lods
or
shrb
mov
adc
sti
dec
out
push
or
negl
mov
or
sub
sub
and
leave
add
cld
or
mov
in
jns
and
xchg
aad
sub
mov
adc
push
arpl
cmpsl
imul
or
ss
inc
mov
dec
and
call
comiss
inc
inc
in
or
jbe
es
lret
jmp
xchg
cwtl
scas
arpl
inc
inc
cld
cmp
pop
nop
jnp
push
arpl
jp
pusha
leave
pop
scas
jmp
xor
push
push
popa
lcall
push
jg
add
in
insb
mov
xor
sub
nop
cmp
add
adc
shll
cli
xlat
sbb
push
dec
lock
or
mov
cmp
pop
lock
cmp
popa
cld
clc
out
adc
sti
movsb
mov
into
jge
fisubrs
sbb
sub
out
jo
mov
test
lcall
lcall
bound
addl
enter
push
add
daa
scas
insl
jle
ljmp
xchg
dec
arpl
ret
mov
cmp
dec
mov
mov
xchg
jo
push
add
aad
adc
mov
pop
dec
push
and
pop
lea
movsb
push
stos
jp
cwtl
mov
fmul
sbb
mov
je
enter
mov
lock
add
daa
jp
xchg
and
cld
fstpl
add
mov
pop
lods
cmpsl
dec
pop
sbb
dec
lods
jmp
aam
mov
adc
outsb
jno
cmpsl
sbb
js
sahf
xchg
xor
mov
xchg
cmp
sbb
stc
mov
test
pop
lods
stc
and
cmpsb
cmp
out
xor
clc
lea
push
push
sbb
dec
frstor
pop
out
jle
movsb
xchg
ret
adc
outsb
xchg
jp
dec
inc
jne
rcrb
imul
flds
sub
or
inc
nop
and
push
aaa
push
push
inc
in
sbb
inc
sub
lret
mov
mov
jmp
xchg
or
inc
pushf
pop
jge
fildll
cmp
clc
in
popa
sub
sub
adc
pop
loop
jns
out
mov
test
sbb
push
and
loopne
sti
jae
xor
mov
cmp
jle
loope
adc
mov
cmp
sub
subb
push
je
fs
mov
pusha
js
cmp
aas
shrb
and
inc
or
push
enter
dec
jecxz
cmp
sub
leave
mov
or
and
sub
std
lret
pushf
mov
pop
js
adc
dec
fs
jecxz
enter
mov
test
inc
test
stc
cmp
jecxz
out
adc
lret
dec
sarb
fcompl
cmp
movsl
sbb
push
jns
mov
fwait
enter
fcomip
xchg
shl
cmpsb
dec
andl
jecxz
enter
cltd
mov
movsb
inc
dec
cmc
loopne
pusha
pop
mov
xor
int3
mov
push
loope
rolb
insl
divl
push
movsb
lret
aaa
mov
int3
push
mov
sub
jns
mov
clc
mov
or
pusha
aaa
in
fcoms
mov
aaa
cmp
and
test
jb
adc
sub
call
int3
adc
mov
xchg
imulb
out
testl
add
and
cmpl
mov
sar
mov
jl
pop
pop
ja
int
notb
sub
add
push
fcmovu
add
or
mov
cld
ljmp
adc
fisttpll
mov
shll
sub
cwtl
repz
mov
gs
sub
xchg
pusha
pop
dec
lock
ja
mov
ljmp
dec
xor
lods
scas
aad
hlt
stos
adc
jge
lret
mov
in
cld
mov
mov
xor
mov
xchg
inc
adc
orl
sub
push
sarb
or
pusha
fisubl
pushf
sub
jne
jno
repnz
int
cmp
push
cmp
notb
jne
pop
popl
stos
mov
int
cmp
test
std
inc
xor
fwait
xor
aam
inc
cmpsl
add
or
movsl
mov
xor
lods
or
cli
pop
insb
or
roll
aam
fstpt
das
scas
inc
sarb
sub
sbb
mov
mov
fcmovne
imulb
pop
inc
mov
sti
push
rorb
sbb
jne
sub
cld
push
fwait
xchg
pushf
xor
mov
setae
dec
lods
adc
outsb
xchg
movaps
push
imul
add
cmp
ds
cmp
mov
mov
and
negb
data16
mov
mov
push
ror
mov
cmp
imul
jae
insb
sub
cmpsl
into
sub
pop
dec
jno
mov
cmp
int
enter
pop
cmp
dec
testb
cmpsb
adc
mov
femms
push
notb
push
inc
pop
shll
mov
test
nop
stos
or
pop
lods
pop
outsl
shrl
cwtl
jp
cmpsl
ja
cwtl
pop
pop
push
push
mov
mov
xor
sahf
pop
and
shrb
adcb
lods
mov
aaa
adc
and
and
mov
int3
pop
jbe
loopne
jmp
stc
mov
shll
dec
pushf
in
cmpsb
mov
movsb
xchg
clc
lock
in
sub
data16
lahf
pop
cmp
scas
or
or
ljmp
lcall
xlat
sbb
xchg
hlt
popf
add
jns
pop
dec
test
mov
push
and
daa
cmp
mov
mov
dec
bound
pop
sbb
mull
cli
inc
movsb
inc
vpcmov
push
and
jb
dec
sub
inc
aam
dec
mov
jge
ds
popa
push
mov
lahf
das
xchg
mov
cmp
mov
fsts
xor
push
mov
out
jmp
xor
movsb
fdivl
pop
jae
lods
lds
adc
xchg
pop
xchg
fidivrl
inc
and
fwait
push
mov
sbb
sarb
sub
push
pop
aam
push
cmpb
fisubs
scas
inc
mov
push
outsl
mov
push
stc
stos
nop
repz
dec
movsl
or
xor
push
sub
iret
jae
sbb
bound
fmull
inc
jmp
cld
iret
je
cmp
mov
std
in
inc
addb
outsb
mov
or
in
push
mov
int
sub
ret
sbb
xchg
and
repz
into
imul
call
mov
jns
fsubr
dec
xchg
das
cld
lock
cmp
xchg
push
dec
cmp
xor
std
add
push
cmpl
mov
mov
mov
cmp
inc
dec
sub
xchg
jne
adc
xchg
adc
inc
cmp
pop
and
mov
mov
push
ljmp
jne
mov
mov
loope
cmp
pop
popf
popa
lcall
sbb
in
andb
cmp
sbb
shl
cld
xchg
mov
movsb
imul
add
gs
cmp
out
mov
or
icebp
mov
mov
cmp
adc
xchg
adc
or
inc
dec
aam
push
iret
movsl
pusha
stos
mov
cmp
mov
stos
mov
je
loop
scas
dec
dec
xorb
fs
jmp
cmpsb
mov
push
cmp
jmp
dec
jmp
scas
and
out
stc
xchg
arpl
mov
and
mov
jb
leave
sub
push
js
pop
call
sbb
imull
fsubrl
or
or
inc
lcall
in
inc
push
xchg
mov
inc
sbb
stos
mov
loope
imul
push
jp
bound
mov
std
xor
sbbb
sbb
cld
shlb
lods
or
inc
fdiv
or
cld
aas
push
sbb
add
cmp
jne
push
xchg
jne
ss
or
xchg
cld
sbb
fsubrl
pop
sub
repz
xlat
xchg
out
shrl
xor
sub
imul
jne
push
and
push
or
sbb
mov
xor
out
movsl
popf
ret
lea
lret
xchg
mov
fidivrs
outsb
xorb
fbstp
mov
sub
lods
lock
push
xchg
adc
mov
fnsave
xor
sar
mov
mov
dec
jmp
mov
data16
fidivl
fnstcw
jle
inc
push
mov
add
scas
adc
sub
out
xchg
sbb
jmp
xchg
xlat
pop
out
or
inc
in
rcrl
mov
mov
out
mov
sbb
jbe
rorb
mov
xchg
jno
jnp
iret
xchg
add
movsl
addb
stos
or
outsb
das
inc
pusha
cmp
pop
outsb
sahf
das
inc
enter
jo
mov
dec
sub
xchg
movsb
inc
mov
xor
bound
sub
cmp
test
cmp
sbb
mov
das
inc
push
ds
xor
xchg
enter
mov
mov
jg
loopne
pop
and
fidivrl
push
xor
jo
mov
lock
mov
cmp
xchg
aas
jb
rclb
sahf
das
insl
add
orl
dec
cmp
ret
push
pop
in
inc
out
xorl
pusha
adc
xchg
repnz
lret
pop
stos
std
insb
pop
push
lret
aaa
inc
add
mov
lods
dec
sub
cmpsl
test
sub
out
movb
jle
xor
xchg
stos
push
js
sub
dec
push
fcmovb
movsb
rorb
cmp
iret
notl
jge
push
sub
out
or
out
shll
int3
test
mov
fnstsw
daa
add
std
mov
dec
fwait
cltd
aas
dec
out
fcompl
outsl
mov
cmp
cmp
lds
jbe
pop
cmp
mov
mull
fimuls
mov
dec
lcall
dec
sub
lret
mov
pop
xor
xchg
push
ret
xor
adc
mov
jecxz
lcall
mov
jmp
sub
fisttpll
ror
mov
loope
mov
cmp
dec
cmp
sbb
sbb
and
fsubs
jbe
rcl
ljmp
rcrb
sbb
js
lods
inc
sti
cmp
jl
xor
out
sub
push
sub
dec
pop
data16
std
jae
add
lcall
jno
or
clc
inc
sub
xlat
adc
in
scas
ja
jb
into
add
jb
pop
sub
adc
sub
jle
xchg
adc
xchg
or
bound
push
sbb
adcl
jae
xor
icebp
inc
add
outsl
dec
xchg
js
pop
in
decl
movl
movsb
sbb
sub
inc
stos
fldl
cmpsb
mov
inc
orb
inc
ficoml
mov
sarb
clc
stc
cmp
addb
in
xchg
inc
jo
imul
stc
mov
xchg
lret
push
jmp
int3
xchg
push
loopne
and
inc
xlat
pop
scas
cmpsb
xchg
or
sahf
cs
addr16
test
jmp
xchg
jno
adc
ret
int
jne
and
leave
cmp
add
cltd
xorl
mov
sahf
jns
mov
mov
nop
mov
ret
test
dec
adc
addb
icebp
push
int
aaa
das
bound
cltd
jmp
xchg
sub
dec
lock
in
cwtl
push
js
adc
xor
xchg
adc
xchg
fisubs
lock
jno
xor
xor
outsb
xchg
in
negl
ja
cltd
rclb
inc
into
and
pushf
and
fstps
pop
push
cli
stos
shll
cli
jl
jo
xor
pop
imul
rorb
or
hlt
mov
mov
mov
lea
xor
popf
pop
push
lea
ret
pop
out
or
sub
orb
dec
dec
rcr
jnp
pop
pop
xchg
xchg
leavew
pop
call
ss
gs
pop
stc
mov
xchg
jns
cmpsl
hlt
pop
movlps
lds
ljmp
stc
jno
icebp
or
or
mul
test
pop
pop
dec
push
sbb
lods
aam
lret
mov
fimuls
pop
fwait
mov
dec
sub
push
adc
imul
inc
push
sub
ret
icebp
test
jne
sbb
mov
int
into
clc
jnp
jp
ljmp
pop
mov
es
xchg
jo
lock
pop
sbb
lret
cld
pop
xor
sbb
and
jo
lods
push
pop
dec
jp
movl
jge
loope
mov
aad
lock
lcall
sub
pop
sahf
std
lods
scas
dec
adc
xor
sbb
sbb
sbb
push
pop
xor
pop
xchg
adc
inc
sbb
movsl
push
test
pop
push
outsb
lea
xchg
cmp
mov
je
sub
out
mov
fistps
movsl
mov
sbb
shrl
cmp
mov
std
ja
mov
dec
add
mov
into
arpl
jmp
xor
push
and
pop
adc
movb
cmc
mov
push
and
or
adc
mov
push
dec
lods
sub
mov
xor
pop
jno
sub
xchg
rcll
rcrl
xchg
cs
add
pushf
mov
inc
sbb
stc
jnp
push
fldt
movsl
mov
pop
xlat
addr16
mov
inc
lock
stos
xor
ja
cmpsb
mov
add
sub
inc
fcomp
xor
mov
fsubr
jns
pop
lds
xchg
ret
push
clc
loope
xchg
jmp
ret
mov
cwtl
push
sahf
adc
inc
lock
sbb
vaddsubps
popf
frstor
fcmove
cmp
call
inc
xchg
das
dec
in
shll
adc
adc
jecxz
inc
pushf
stos
mov
orb
mov
or
leave
ljmp
mov
data16
push
jbe
data16
and
repz
lret
cmc
mov
jbe
and
cwtl
arpl
cld
shlb
push
sahf
xchg
fldenv
cmpsl
push
dec
dec
mov
lea
sub
xchg
fisttps
or
out
cmpsl
adc
dec
push
dec
mov
fdivrl
push
test
adc
mov
xor
mov
and
sbb
fmuls
pop
push
dec
mov
sbb
in
test
js
pop
xor
scas
pushf
das
out
jo
mov
movsl
jl
dec
repz
mov
stc
fwait
cltd
sub
adc
lea
add
lods
lods
push
cwtl
lea
lds
sbb
fisubl
dec
and
data16
cmc
mov
add
xor
dec
push
fucomip
push
les
test
inc
cmp
mov
nop
inc
decb
mov
xor
stc
mov
push
cmp
outsb
movsb
or
inc
xchg
xor
adc
arpl
push
in
out
or
ret
and
subw
mov
mov
push
jbe
in
and
popl
jge
xchg
jmp
mov
jg
mov
sbb
pcmpgtw
rcrb
xor
insb
pop
out
mov
test
cmc
sub
sub
cmc
pop
lahf
cmpsl
mov
mov
pop
gs
jle
aas
cmpl
mov
aad
mov
jecxz
jne
clc
mov
jecxz
lock
pop
arpl
cmpsb
test
shrl
movsb
cmp
rcr
mov
cs
dec
movsl
add
mov
add
leave
xor
sbb
mov
in
mov
and
out
mov
in
jne
mov
inc
les
xchg
dec
add
pop
xchg
gs
add
pusha
push
lea
mov
mov
cmp
shll
lea
out
adc
mov
fisubrs
enter
mov
decl
fistpl
jl
hlt
xchg
mov
and
and
jae
lods
pop
fcomps
mov
movsl
mov
and
xchg
test
aam
test
lahf
addl
inc
mov
sub
inc
adc
jno
imul
sbb
add
mov
push
jo
and
popf
in
xchg
cli
sbb
inc
inc
bound
test
add
lret
jmp
je
inc
int3
ret
push
and
dec
imul
pop
hlt
and
subl
lret
add
loopne
cmp
jo
clc
mov
xlat
in
mov
aad
cmp
sbb
cs
push
sbb
pop
cltd
xor
sbb
jbe
cmp
aam
sub
jmp
add
shrl
ja
add
or
repz
movsl
push
rcrb
call
cvtps2pi
cmp
sar
push
stc
adc
scas
shrd
bound
repz
xor
and
lret
js
push
pop
leave
and
shrl
inc
cmp
cmc
bound
adc
mov
lcall
inc
dec
cmp
popf
addr16
lahf
sub
mov
sarl
lods
das
test
and
sbb
dec
mov
xlat
test
jecxz
push
popf
fs
into
inc
jp
pop
es
loopne
fsubrl
je
xchg
pushf
cltd
decb
popa
xchg
loope
ret
push
dec
dec
dec
std
mov
adc
mov
movsl
jbe
sub
orl
mov
dec
stos
adc
xchg
icebp
ret
adc
loopne
fcomps
jnp
inc
cmp
add
or
or
outsb
or
sub
push
sbb
xchg
int3
pop
dec
aaa
repnz
cmp
in
orb
pushf
sub
mov
xchg
push
aas
adc
mov
dec
sub
push
es
arpl
xor
pop
sahf
sub
xchg
iret
mov
pop
orb
and
jnp
jne
sarb
sub
inc
pop
iret
jg
dec
mov
push
inc
push
imul
aaa
sbb
mov
aad
pop
imul
pusha
rcl
xor
inc
dec
das
inc
mov
push
xor
out
dec
adc
popf
inc
lods
add
in
pop
insl
test
mov
xchg
jno
imul
ja
lahf
test
and
insb
in
pop
shrl
cmp
pop
daa
and
cmp
in
out
dec
cmp
inc
test
imulb
dec
sbb
aad
dec
mov
xor
frstor
cmp
cli
or
adc
cmpsb
sti
mov
out
cmpl
test
xorb
sub
sarl
push
dec
fisubs
sub
push
into
push
dec
xchg
dec
mov
cmp
jnp
dec
and
mov
sbb
aaa
inc
in
push
push
pop
cwtl
dec
fidivrl
cmp
xor
sbb
inc
inc
mov
push
mov
sbb
loope
pop
and
addl
adc
call
cwtl
cmp
aad
in
push
pop
imul
mov
jno
fdivp
scas
orb
jecxz
aas
rcrb
pushf
lea
sbb
pusha
or
mov
int
mov
dec
xchg
sub
aad
xchg
push
mov
mov
jnp
repnz
mov
fs
dec
cwtl
mov
xchg
subl
ds
je
pop
shlb
push
clc
mov
pop
movsl
adc
push
pop
ds
cld
loop
je
pop
inc
and
insl
add
adc
cmp
inc
lea
loope
aad
je
jne
js
cmp
adc
xor
sub
pminsw
jns
adc
jl
jns
out
inc
mov
ret
add
xchg
ror
pop
ret
cmp
cmp
sarl
jg
xchg
hlt
push
xchg
lret
notl
fsubl
dec
hlt
rcl
inc
stc
pop
or
mov
test
fisubrs
mov
roll
shl
fldl
movb
stos
pop
sbb
aaa
push
dec
push
call
sbb
cmp
cmpsl
push
xchg
rclb
ljmp
mov
es
jecxz
adc
repnz
in
xor
stos
mov
sbb
test
cmpsl
xchg
dec
lock
add
cmc
lock
xchg
add
mov
lods
push
inc
and
lea
cmpsb
dec
sub
or
aam
adc
lcall
jecxz
pop
leave
dec
pop
add
js
and
dec
sbbb
inc
mov
shlb
push
mov
adc
mov
int
jle
xor
lds
pop
dec
and
cld
jle
cltd
xchg
jae
lds
dec
or
test
jno
popf
dec
push
test
test
adc
iret
in
bound
out
pop
adc
sub
pop
rorb
inc
jl
iret
out
sub
loope
xor
xchg
lea
test
push
outsl
stc
push
fistpll
cld
hlt
cltd
int
loope
xchg
dec
arpl
lret
pusha
leave
inc
xorb
adc
cmp
cmpsb
push
dec
popa
mov
or
nop
xchg
dec
mov
insl
dec
stc
and
mul
inc
test
ret
leave
adc
rcl
ret
cmp
xor
loop
mov
mov
lahf
stos
dec
test
push
adcl
out
aaa
or
push
jg
int
xchg
lds
jb
sbb
nop
shlb
jbe
in
cmpsb
adc
push
lea
cmc
sbb
add
call
mov
sub
mov
rcll
loop
sahf
mov
sar
add
or
rorl
shlb
gs
paddb
adc
xor
sbbl
mov
inc
cld
mov
mov
push
pop
or
sub
or
xlat
bound
in
cmp
jno
stos
cmp
xchg
out
inc
mov
cltd
data16
je
lods
jmp
jno
xor
imul
mov
aas
mov
test
push
daa
arpl
mov
ljmp
mov
rorb
jns
daa
mov
add
mov
mov
test
in
cld
popa
and
outsb
rclb
cmpsb
and
loopne
inc
pop
cli
adc
sub
and
jmp
jp
addr16
jg
fs
sbb
rorl
cmpsl
inc
and
pop
mull
dec
dec
movntq
xor
xchg
fistpll
inc
sub
lods
sub
mov
daa
or
fidivrs
pop
xor
lods
dec
and
lret
les
adc
sahf
or
adc
mov
jbe
fdivr
push
add
add
cmp
addr16
jmp
lds
fwait
imul
add
cmp
mov
adc
jae
mov
dec
inc
loopne
dec
mov
imul
enter
add
xor
movsb
mov
aam
arpl
orl
dec
jne
add
cltd
rcl
pusha
jl
or
and
add
mov
divl
addr16
or
mov
push
out
cmc
pop
jb
int
cld
jno
mov
mov
rorb
lods
cmp
inc
movsb
mov
jge
and
mov
lods
ret
outsb
push
ja
push
ss
sbb
xchg
loopne
shll
or
and
inc
lods
lods
and
jno
je
mov
test
stc
outsb
out
cmpsb
stos
fnstsw
mov
pop
xor
jecxz
or
sub
popa
scas
je
add
movsl
fmuls
test
dec
int
popa
and
pop
mov
test
jo
xor
outsl
fldenv
pop
add
popf
inc
push
les
xor
lock
adc
xor
pop
fs
xor
loopne
cmp
and
dec
inc
mov
pop
shl
iret
inc
xchg
sar
rclb
stos
pop
mov
xchg
xchg
mov
and
push
push
adc
adc
loop
jmp
xchg
loope
loop
fcoms
mov
mov
pop
inc
fsubrs
test
repz
jno
dec
xchg
push
sub
mov
in
pop
inc
mov
addl
nop
cmpsb
mov
stc
or
insb
sti
das
stos
popa
push
ljmp
cmpsl
push
adc
add
sbb
pop
stos
mov
fimull
adc
xlat
cld
lahf
pop
adc
push
xor
dec
lods
and
call
adc
jo
ret
call
les
aam
cld
pushf
jno
pusha
push
fwait
adc
clc
movsb
mov
push
xchg
xchg
inc
aad
xor
jno
mov
std
pop
jmp
in
xor
les
or
jge
loopne
icebp
in
jne
fstl
lock
rdmsr
cmp
mov
push
add
mov
dec
add
dec
or
ljmp
inc
or
dec
add
enter
push
push
xchg
add
imul
repnz
jne
sbb
imul
leave
mov
xchg
test
lock
sarl
lcall
daa
sbb
push
outsl
and
out
add
imul
cltd
push
pushaw
icebp
addl
cmpsl
dec
jge
jb
dec
or
mov
test
mov
push
cmpsl
ds
lret
imul
push
scas
das
icebp
cmpsb
mov
std
lods
push
out
pop
cmp
lea
out
scas
insb
idivl
sbb
out
xchg
rcrb
inc
in
cmp
imul
mov
push
mov
into
xor
movsb
inc
push
adc
push
cmp
inc
ret
idivb
and
and
pop
frstor
inc
int
push
xchg
lods
xchg
jle
je
sbb
pushf
ret
lcall
jg
xor
sbb
repz
xchg
outsl
inc
mov
xor
loope
aaa
sarl
sub
mov
cmc
jge
repnz
and
mov
mov
ss
mov
and
in
stos
fnstsw
out
pop
rcr
dec
mov
je
xchg
out
push
mov
mov
int
push
add
jo
arpl
push
ss
stos
jp
and
or
addr16
or
andl
jg
dec
enter
stos
mov
xor
inc
fisubrs
sbb
test
and
or
sub
test
mov
push
mov
cwtl
pop
movsb
jmp
pop
pop
icebp
mov
inc
cmp
jle
out
dec
add
out
cmove
fs
pop
lods
fyl2x
sub
xchg
xor
clc
push
push
xchg
mov
jge
shlb
scas
and
jmp
cmp
ja
mov
fdivl
mov
inc
sub
cmp
push
lods
mov
pop
orb
les
pop
mov
aas
dec
dec
jns
jno
ja
rolb
push
cmp
jne
and
popf
lret
push
loopne
mov
movsl
push
add
or
add
dec
add
mov
cltd
ret
call
mov
movsb
insl
cmp
imul
jo
addb
push
incl
add
sahf
push
repnz
imull
rcl
fldl
hlt
jl
mov
mov
ror
out
dec
pop
push
insl
push
das
cmp
or
lods
mov
jp
jb
ret
enter
fnsave
lods
movsb
jmp
mov
dec
jbe
jbe
xor
mov
std
push
movsb
fbstp
mov
mov
bound
xor
dec
adc
push
sbb
mov
movb
mov
sub
lock
fnstsw
inc
dec
mov
mov
hlt
test
lret
push
fwait
push
add
jg
movsb
lcall
loope
test
clc
dec
imul
pop
xchg
jg
pop
pop
dec
mov
jo
xlat
js
pop
pop
iret
pop
inc
cmpb
movsb
jno
mov
mov
movsl
icebp
adc
jp
imul
adc
addr16
dec
int3
mov
xchg
inc
mov
rcr
iret
lock
in
mov
cld
jg
ljmp
add
ret
mov
xor
xor
sub
fildl
adc
insb
and
mov
push
mov
cli
fstl
add
adc
nop
cmp
add
mov
bound
add
or
adc
xchg
jecxz
push
push
hlt
mov
lds
aaa
ficomps
xchg
pop
inc
push
cli
adc
fsubr
not
sub
sub
push
and
pop
dec
push
inc
or
jbe
jb
dec
inc
imul
sub
mov
js
add
add
xchg
pop
inc
jbe
pop
push
lock
orl
cs
imul
push
ljmp
sub
ret
sbb
mov
sbb
loope
mov
mov
dec
xchg
pop
jmp
test
fmuls
dec
sub
nop
fadd
xor
popf
pop
jecxz
sbb
xor
jno
sub
fsubl
or
mov
adc
jge
in
sub
add
dec
push
jl
push
pop
lds
jecxz
xor
pop
cmp
cmp
jno
mov
mov
sbb
daa
cmp
lahf
ficoml
push
out
mov
lea
es
je
jmp
push
lcall
jge
lds
jmp
or
jno
ret
jnp
add
xor
js
or
cmp
sub
xchg
and
mov
mov
adc
jl
jl
ljmp
mov
je
jmp
xchg
jle
sub
mov
add
push
rcll
dec
push
loope
lret
xchg
sbb
out
mov
inc
and
pop
aaa
push
xor
push
mov
adc
sbb
jle
jae
lahf
mov
fldl
xor
push
adc
jae
stc
push
add
incl
cmp
mov
pop
jbe
lods
mov
push
push
mov
cmp
sbb
mov
mov
int3
xchg
jg
in
in
push
push
push
aam
push
push
icebp
inc
pushf
mov
jl
fsubs
popa
addr16
out
fisubs
imul
ja
popf
sub
je
jmp
mov
adc
or
xor
mov
scas
adc
mov
jecxz
icebp
dec
adc
cltd
ret
xor
push
arpl
jp
dec
inc
stos
inc
pop
jp
data16
cmpsl
imul
je
jmp
mov
lods
xchg
arpl
cmpl
sub
push
dec
cli
and
mov
and
icebp
mov
mov
xlat
stos
out
jge
iret
cmp
or
pop
or
test
push
mov
mov
lods
pop
fwait
insb
movsl
adc
sti
jmp
mov
ret
dec
fidivrs
arpl
ljmp
or
lock
or
sti
xchg
adc
and
dec
push
add
je
loope
sub
int
jmp
loope
ds
fwait
psubsb
es
lcall
mov
in
pop
push
stos
sub
scas
mov
ret
mov
and
fidivl
cwtl
mov
sub
add
aam
and
sbbb
add
ja
jno
mov
lods
fs
and
das
scas
mov
mov
sub
sbb
inc
popa
int3
sub
mov
cmp
daa
ret
and
adc
pop
xchg
je
jmp
scas
jbe
dec
je
cs
test
sti
scas
xchg
dec
repnz
std
pop
xchg
adc
out
jns
sub
add
add
test
aas
clc
mov
dec
ja
push
arpl
or
sbb
fbstp
sbb
mov
out
cmp
xor
cltd
pop
fcmovnu
inc
sbb
xchg
cwtl
sti
pop
popa
pop
iret
pusha
rcrb
int3
ret
adc
sbbl
adc
icebp
ret
xor
sub
jge
test
sbb
mov
fmuls
pop
mov
cmp
mov
in
and
mov
push
jp
rclb
decl
imul
inc
ss
xchg
sahf
dec
add
cmpsl
fsubrl
sahf
leave
fdivr
cwtl
cmp
movsb
int
cwtl
mov
mov
mov
imull
sbb
in
mov
sub
cmp
mov
ja
fnsave
jge
ja
mov
repz
leave
je
mov
jmp
sbb
mov
dec
decl
aas
scas
out
push
shll
xor
js
hlt
jbe
lock
mov
popa
pop
sbb
pushf
sub
cmp
jg
xor
rorl
enter
mov
outsb
xchg
sbb
fdiv
icebp
shlb
pop
in
or
add
adc
mov
jl
jo
lahf
jno
push
imul
test
xchg
and
arpl
jg
lock
add
test
or
lds
inc
rorb
sarb
xchg
sti
dec
jl
jbe
dec
icebp
insl
push
jnp
or
push
stos
mov
imulb
add
mov
js
jae
das
mov
or
pop
mov
and
je
jnp
adc
push
jmp
cmpsl
fbld
mov
pop
sbb
cmpsb
mov
push
and
lods
das
insl
js
pop
jg
lret
fwait
pop
ss
int
notb
shr
add
ljmp
and
stos
call
inc
repz
mov
mov
aam
pusha
fcmovnbe
fwait
lods
movsl
fs
stos
iret
clc
out
stos
mov
mov
jge
and
jmp
imul
test
orl
pop
loope
test
std
jns
sahf
shrl
pop
out
jnp
dec
jns
mov
sahf
call
pop
rolb
test
es
push
dec
jl
cmp
add
out
xchg
dec
inc
repnz
dec
push
inc
inc
inc
cmp
and
cmp
push
pop
stos
cmp
gs
sti
repnz
in
xor
imul
add
inc
aam
cmp
or
cld
push
fwait
mov
fcmovnbe
pop
out
cmp
test
cmp
out
stc
movsl
mov
sahf
and
dec
loop
insb
and
and
sbb
aas
cli
lea
loop
jb
mov
aaa
xlat
cmc
mov
inc
or
push
cmpsl
sti
jbe
and
scas
sub
jmp
std
lods
and
fildl
std
push
lea
bnd
bnd
test
mov
lahf
aad
notl
pusha
dec
sbb
sbb
mov
jae
adc
sub
sub
adc
cmp
pop
fs
push
loopne
and
inc
jnp
lret
or
and
shll
dec
mov
push
out
push
pop
xchg
ja
mov
xor
scas
and
je
ds
pop
test
lahf
inc
cs
jbe
es
daa
lret
test
cmpsl
scas
mov
pop
inc
inc
scas
cmp
jne
add
les
test
or
mov
test
stc
jno
xchg
imul
mov
mov
sahf
aaa
loope
cwtl
cs
ret
dec
xchg
lahf
das
addb
and
sbb
add
pop
aad
lret
movl
ret
test
cld
push
jmp
dec
mov
xchg
xchg
push
xor
and
mov
xor
stc
gs
or
call
fs
int3
insb
cmpsb
cmp
adc
in
repz
fs
sub
mov
add
insl
xor
mov
je
xrelease
push
mov
cltd
mov
and
dec
inc
out
pop
and
sub
leave
xchg
xchg
loopne
adc
inc
jb
rorb
stc
adc
or
rorb
repnz
mov
les
sarl
mov
pop
inc
adc
or
jo
in
in
adc
not
ja
sub
add
movsl
fnstenv
pop
loopne
dec
cmp
dec
fisubrl
je
shl
push
mov
test
cmp
lods
mov
pop
xchg
lret
fisubl
xor
pop
cmp
xchg
sbb
flds
mov
mov
mov
sbb
ret
add
xor
adc
daa
lods
xchg
enter
jne
and
fs
add
push
jns
and
mov
dec
iret
mov
or
adc
push
sbb
es
rcrl
out
mov
aam
mov
cmp
and
gs
rol
jo
adcl
cmpsl
cli
adc
pushf
popf
adc
and
fbld
sbb
aam
enter
jmp
inc
dec
pushl
fcomi
mov
iret
pop
hlt
mov
pusha
xchg
or
cltd
mov
gs
jne
sub
leave
mov
cld
pop
bound
test
mov
xor
push
in
add
push
or
inc
inc
cmpsl
pusha
pop
push
leave
adc
loop
pushfw
mov
daa
divb
adcb
mov
andl
lret
or
int
shr
lock
stos
dec
mov
fwait
cmp
stos
sar
xchg
xchg
iret
jg
mov
dec
push
pop
mov
or
and
or
push
add
hlt
sbb
pcmpeqb
out
bound
imul
pop
gs
or
pop
loopne
mov
cld
into
jle
in
xchg
cmpsl
scas
popa
lods
inc
or
shr
mov
ror
add
insl
dec
jecxz
repnz
push
sahf
xchg
cld
imul
ret
sbb
sbb
cwtl
icebp
mov
pop
inc
push
es
test
inc
lret
and
nop
push
adc
es
movsl
lods
jb
jg
sbb
mov
mov
aas
sub
sar
jmp
aad
not
dec
push
int
mov
sub
or
in
inc
mov
js
xchg
fstps
mov
test
and
cmpsb
jne
jns
cltd
cmp
in
xor
fistpll
arpl
inc
dec
mov
pop
pop
ffree
pusha
add
sbbb
mov
je
call
ds
jo
xchg
fnsave
push
xchg
mov
mov
push
or
pop
sti
mov
and
pusha
insb
imul
dec
push
subl
cltd
aaa
xor
inc
push
pop
sahf
mov
decb
repz
push
faddl
xchg
cmp
adc
stc
jp
inc
adc
xchg
gs
ja
daa
adc
sbb
sbb
icebp
out
popa
mov
jge
lock
dec
dec
cmp
push
cltd
inc
or
cmp
and
inc
push
in
popa
xchg
mov
aaa
mov
sbb
pop
pop
mov
mov
fiaddl
sbb
pop
sbb
mov
inc
imul
fdivp
iret
dec
dec
cmp
stos
cmp
dec
xor
cltd
jge
mov
les
in
jmp
and
push
mov
sbb
dec
loope
push
movsb
ror
loope
or
stc
test
fucomp
jge
dec
cmpsl
xchg
push
xchg
sbb
in
aaa
jbe
and
icebp
dec
lret
daa
cmp
ret
test
mov
or
push
stos
aam
in
xor
add
test
daa
sahf
in
or
sets
iret
mov
cmpsl
mov
sbb
xor
int3
push
addr16
sbb
hlt
dec
dec
jae
loop
cmp
insb
inc
daa
lea
lret
gs
cmp
add
cmp
scas
shll
jnp
orb
enter
inc
lods
xchg
pop
cmp
outsb
cmp
mov
xchg
pop
xorl
shrb
push
mov
mov
push
stc
clc
jns
inc
movsb
or
inc
cld
std
mov
sahf
pop
inc
sbb
xor
shl
add
jno
jg
jmp
cwtl
out
int
loope
jo
int
add
cld
or
sub
bound
imul
out
in
repnz
lds
dec
adc
mov
int3
cmc
mov
data16
lret
xchg
shll
popa
sbb
sub
std
add
je
std
imul
jecxz
daa
cmpsl
je
xchg
andb
sub
mov
faddl
and
stc
shll
daa
pop
jne
dec
pop
cwtl
sub
sbb
pop
mov
inc
push
mov
cmp
outsb
and
ret
inc
ds
sbb
nop
push
test
test
mov
sub
inc
sbb
cmp
mov
jmp
cld
fmul
popa
pop
out
leave
push
jmp
loopne
lahf
cli
xor
mov
in
adc
push
xorb
jne
push
movsl
fbld
leave
mov
push
in
dec
mov
idivl
loopne
dec
inc
lock
lret
sbb
loope
xchg
mov
push
sub
lcall
add
lock
jbe
jns
enter
add
ret
sbb
inc
xchg
push
jbe
leave
aad
test
pop
push
mov
xor
mul
lahf
jle
outsb
sarb
jge
xchg
inc
dec
ret
and
xor
jae
lock
mov
lahf
jno
jmp
fwait
jne
dec
int
cmp
mov
mov
fidivs
popa
push
sbb
ror
bound
push
xlat
pop
mov
pusha
jecxz
xchg
int
xchg
fldt
stos
mov
and
sub
pop
and
mov
jns
dec
mov
push
push
add
scas
fnstsw
jp
outsb
mov
lock
enter
mov
mov
jp
insl
dec
mov
sub
enter
and
addb
mov
shr
inc
pop
sbb
sub
in
cmp
push
sub
dec
loopne
push
loopne
dec
dec
sbb
mov
push
add
and
cmp
lret
loop
mov
jmp
mov
push
insb
jge
inc
jbe
or
out
xor
fcomps
xchg
cwtl
cmc
mov
into
scas
cmp
inc
add
pop
movsl
popf
adc
fisubs
jmp
imul
sar
adc
adc
out
fadd
aas
scas
loopne
xchg
cld
push
in
xlat
div
stc
inc
sub
fistpl
cmc
icebp
pop
jl
add
dec
arpl
movsb
stc
pop
stos
dec
xor
and
subl
add
add
jl,pt
aad
pop
cwtl
jb
fwait
xor
xlat
lahf
hlt
push
lret
bound
push
xor
test
cmp
dec
push
xlat
ror
inc
popf
xchg
cmp
xor
fdivr
out
sub
imul
push
pop
push
lret
call
dec
ffreep
pop
call
popf
or
fnsave
mov
lahf
sbb
jecxz
mov
fwait
aaa
out
shlb
repz
in
je
sahf
dec
sti
pop
xor
add
xor
mov
mov
sbb
pop
sbb
out
push
xchg
mov
imul
mov
push
jge
add
push
push
dec
rcll
ds
adc
push
cltd
fwait
test
aam
pop
out
fcom
and
es
pop
push
test
rcr
adcb
mov
ja
cmp
sbbb
push
xor
cmp
adc
push
lods
mov
push
or
cmp
nop
or
sti
mov
pop
stos
jecxz
xchg
loopne
in
lock
mov
repz
jnp
xor
cmp
arpl
mov
or
mov
pop
adc
xchg
cltd
xchg
mov
sbb
jle
or
mov
nop
inc
cmp
pop
ret
lds
daa
lea
aam
outsb
out
lret
and
xchg
pop
xchg
inc
out
and
es
sahf
loopne
inc
jg
fst
loopne
inc
in
je
xor
mov
jno
mov
dec
mov
cmp
mov
ret
sti
cmp
xor
jg
pop
jge
or
shll
aaa
mov
sbb
sbbl
mov
xchg
das
push
ljmp
push
ficoms
call
ret
jmp
push
cld
fnstcw
out
and
jmp
popf
cld
stos
imul
rcrb
push
cld
inc
clc
orl
dec
adc
popf
iret
repnz
or
dec
fidivrs
jo
or
pop
push
sbb
nop
jmp
or
or
pusha
out
adc
or
shll
ja
jge
sub
mov
iret
mov
lods
andl
repz
adc
inc
sarl
stos
or
fnstenv
mov
cmp
nop
in
ss
nop
cmp
inc
mov
es
sbb
fmull
inc
test
popa
imul
pushf
push
mov
lods
iret
mov
pop
sub
mov
fcoml
mov
loope
jb
sti
dec
movsb
nop
stc
and
rclb
jmp
repnz
aad
add
xchg
jl
out
cmp
stos
into
out
push
dec
mov
or
cli
ret
notb
pop
scas
imul
fidivrl
jle
inc
ss
out
imul
adc
outsl
mov
pop
ret
addr16
cli
sbb
pushf
test
sarl
jg
dec
sti
inc
cli
add
mov
pop
dec
push
mov
mov
mov
ret
push
sub
mov
push
int
ret
gs
cli
test
in
sbb
fnsave
mov
sar
mov
xor
jb
decl
jae
ds
add
sbb
push
dec
leave
mov
adc
fldt
pop
addr16
push
bound
xchg
cmp
stos
and
dec
cmpsb
sub
jbe
cmp
sub
xchg
cmp
add
mov
jmp
inc
mov
aad
sbb
loopne
inc
icebp
xor
jns
jl
in
gs
in
and
rorb
sti
mov
aam
rcl
mov
int3
mov
out
fiadds
xorb
sub
jnp
pop
pop
sub
fstps
push
les
jp
test
das
scas
repz
cmp
sub
movsb
push
movsb
lock
das
push
lcall
and
jecxz
dec
dec
ljmp
cwtl
fdivs
in
pop
loope
sbb
mov
fdiv
mov
mov
int3
test
cld
adc
adc
mov
imul
sbb
mov
iret
pop
jnp
paddq
mov
jns
dec
jns
sarl
jns
inc
out
cmc
xor
jns
add
or
push
add
test
push
and
xor
pop
test
mov
inc
repz
jo
cmpsl
test
xorl
lods
test
sbb
das
clc
and
xor
jg
mov
iret
out
adc
cwtl
pusha
push
push
addr16
add
mov
mov
sbb
sub
sahf
and
imul
shl
loopne
leave
push
mov
sbb
pop
sbb
es
and
mov
scas
pop
rcrb
cmp
mov
inc
jbe
or
or
or
mov
xlat
or
push
out
cltd
jo
fsubs
mov
sub
daa
jb
and
fildl
lods
xchg
lcall
or
mov
xchg
sti
mov
cmpsb
outsl
pop
xor
fldenv
jbe
leave
push
cli
mov
sbb
in
int3
outsb
pop
mov
cmc
fmull
jl
daa
adc
push
aam
jmp
adc
in
push
loopne
cmpsb
sbbb
add
lret
lahf
sbb
frstor
inc
fisubrl
jne
push
sub
lahf
or
mov
icebp
aaa
testl
cmpsl
out
or
or
mov
sub
jmp
lret
cmp
stos
cmc
iret
jne
or
sub
in
dec
das
insb
test
in
xor
mov
ret
aaa
out
nop
divb
loope
sub
jmp
repz
dec
and
cmp
mov
lock
out
stos
push
dec
rcrb
leave
inc
cmp
sub
loopne
fldcw
repnz
push
in
je
and
push
sub
inc
rcl
pop
iret
mov
rol
cmp
mov
ja
jmp
pusha
test
sub
add
jmp
fildl
stc
aam
sbb
repz
insl
js
stos
inc
enter
adc
push
sti
xchg
mov
outsb
inc
cltd
mov
popf
jge
mov
cmpsb
xchg
dec
lcall
pop
mov
adc
shll
mov
xorl
int
int
push
cmpsb
clc
xor
inc
inc
mov
testb
xchg
lea
xchg
mov
aaa
in
sub
lea
mov
notb
out
div
and
jmp
mov
decb
xchg
js
stc
dec
cli
pusha
stos
cmp
cmp
pop
add
pop
rol
repz
jbe
cwtl
mov
jae
out
mov
mov
incb
lahf
mov
loope
add
pop
lea
fsubs
inc
iret
pop
mov
ljmp
mov
and
in
mov
das
out
pop
in
or
cmpsb
mov
test
cmpsl
ss
inc
pop
sti
jbe
jecxz
jge
inc
push
aaa
out
cmp
jo
pop
inc
mov
shrb
aam
lahf
hlt
pop
stos
mov
stos
sahf
fs
adc
arpl
ljmp
and
sub
pusha
jo
sbb
cs
pop
divl
xor
mov
repnz
inc
iret
xchg
insb
sub
lea
cmp
or
jns
movsb
shlb
or
out
mov
xlat
dec
mov
mov
cmp
mov
call
cmp
jg
push
add
dec
sub
sub
add
jmp
icebp
cmp
lcall
aad
push
pop
pop
cwtl
ret
icebp
inc
mov
push
shll
fstpl
push
out
lock
lahf
shl
jecxz
sub
dec
xchg
jp
fs
push
loope
sbb
out
lahf
pmaxub
cltd
inc
and
das
inc
push
les
cmp
mov
jmp
movsb
in
movsl
adc
push
ret
cli
xor
xor
imul
lret
lods
lahf
cwtl
mov
sbb
repnz
or
ret
gs
lds
xchg
hlt
dec
shl
cmp
sbb
mov
jge
jecxz
lods
test
mov
add
push
decb
mov
adc
mov
out
out
mov
daa
push
jecxz
inc
addr16
sub
cmp
mov
jne
sti
cmpsb
xchg
adc
jne
loope
in
dec
mov
jbe
jbe
or
xor
push
inc
scas
xor
xchg
mov
push
std
mov
inc
sub
lods
lahf
add
jns
mov
stc
mov
mov
mov
cwtl
ss
arpl
fwait
icebp
lea
inc
xchg
and
fstl
jge
add
cmp
pop
pop
mov
add
pop
add
loope
lock
aad
mov
or
shll
mov
mulb
adc
lret
mov
or
jnp
sahf
ljmp
sbb
ljmp
dec
imulb
loopne
mov
fsqrt
add
cmp
test
xchg
into
sbb
or
push
lds
xchg
daa
add
mov
jmp
pop
sbb
xor
imul
ja
lahf
movsb
or
rorl
cmp
push
int3
sub
in
movsb
cmpsb
lods
push
neg
mov
mov
dec
es
insl
and
out
ret
cmpsl
pop
jb
rol
mov
out
enter
cwtl
call
cli
xchg
frstor
fimuls
lea
sbb
dec
rcll
mov
push
jmp
aam
lcall
push
mov
push
adc
movsb
stc
xbegin
call
xor
jmp
cld
xlat
add
xor
adc
dec
mov
mov
sbb
add
lock
in
out
ret
xorb
xorl
and
pop
pop
cli
sarb
repz
cmc
flds
jp
daa
cmp
inc
icebp
gs
ror
jle
das
fs
add
and
fiadds
rclb
imulb
push
mov
push
sub
push
imul
mov
adc
xor
shrb
jno
xor
rcll
mov
movsb
mov
call
fsubrp
pusha
data16
movsl
outsb
dec
adc
enter
xorl
sub
aas
dec
mov
cltd
xor
mov
cs
mov
pop
mov
arpl
xchg
jb
mov
aam
ss
mov
fs
push
or
in
stc
inc
mov
scas
mov
std
cmp
nop
sbb
sahf
idivl
pop
and
ja,pn
jecxz
jo
stc
out
push
pushf
pop
aam
cld
jb
je
sub
ljmp
inc
test
aas
pop
loop
icebp
push
sub
movsb
push
fadds
fildll
lds
add
test
cmp
mov
fstpt
dec
cmp
in
inc
xor
stos
fwait
mov
mov
or
test
pop
push
imul
jmp
xor
sub
add
pop
sti
jge
mov
popa
stos
movsl
clc
in
push
mov
movsb
les
jo
mov
test
mov
data16
std
sar
stos
ja
lds
cmp
cmp
jae
imul
mov
xchg
inc
mov
mov
jle
inc
iret
add
leave
sar
jns
push
adc
mov
rep
aaa
pop
stc
lock
pop
adcl
push
sbb
cmp
mov
repnz
loope
and
incb
in
and
xchg
stos
dec
xchg
push
cmpsl
loopne
aad
inc
dec
pusha
es
rclb
inc
xor
sub
iret
aam
insb
push
lcall
fcoml
and
push
pop
mov
dec
cmpsl
jp
xor
jp
sub
cli
jp
rcll
add
scas
mov
sar
and
outsl
xchg
leave
shrl
inc
pusha
add
lret
insb
jecxz
mov
out
sbb
iret
scas
out
add
repz
xchg
mov
test
fs
in
jmp
pop
aad
cmpsl
cmp
mov
pushf
cs
mov
add
add
pushf
and
jne
divb
ret
aad
xchg
lea
aas
rep
les
fs
pop
xchg
mov
sbb
movsl
cld
mov
arpl
mov
test
adc
inc
popf
lahf
cmpsl
jg
mov
pop
ljmp
in
mov
cmc
jl
scas
call
dec
lret
sub
sbbl
lea
mov
jl
push
xchg
outsl
or
dec
scas
into
push
daa
sbb
xchg
pop
std
add
popf
fildl
xorl
inc
mov
daa
js
ds
outsb
shll
into
xchg
fadd
in
mov
nop
mov
fs
in
clc
cmp
mov
cmp
jno
faddl
pushf
ss
cmc
xchg
bnd
jmp
pop
out
mov
out
pop
xchg
fistpl
push
jle
push
push
jbe
lret
mov
cmpsb
roll
mov
and
sbb
mov
dec
jge
cltd
orb
jbe
adc
les
sub
xchg
stos
mov
sub
mov
pop
jg
popa
outsl
pop
fmulp
test
pop
jae
sahf
mov
xchg
sarl
out
dec
mov
jmp
mov
xor
les
fidivl
lahf
sbb
pop
mov
cmp
lods
iret
lea
fdivl
or
cmpb
sbb
mov
jno,pt
jl
inc
inc
mov
or
lods
fidivs
je
out
pusha
pop
shll
inc
inc
sub
pop
dec
jae
mov
jle
enter
orb
cltd
xchg
rol
addb
cmp
cmp
out
aam
jge
insb
dec
mov
xchg
cmp
jne
lock
jne
rol
lea
mov
lock
loope
sub
fs
in
cltd
ffree
int
xor
mov
sahf
sub
stc
imul
pop
outsb
and
xor
sub
pop
mov
test
cmpsb
jnp
loop
rol
xchg
fcmovu
js
cld
cmp
xchg
push
movsb
lea
in
rorb
mov
sub
outsl
stos
out
mov
mov
outsl
ds
pop
lahf
aas
adc
inc
jo
pop
cmp
add
imul
outsl
add
sub
cmp
jns
movsl
cs
add
cwtl
and
mov
xchg
sbb
mov
fwait
les
xchg
cmc
push
cli
add
jbe
mov
cmp
mov
lcall
cltd
int3
xchg
pop
cmp
cmp
add
or
sub
clc
out
adc
mov
pop
fldcw
push
bound
out
inc
stc
js
fsubs
and
fistl
loopne
push
test
dec
lcall
loop
sbb
inc
adc
ss
sub
incb
enter
jae
fwait
icebp
inc
scas
inc
adc
add
data16
pop
xchg
hlt
cmp
imul
rorb
leave
xchg
xor
pop
fidivl
inc
fldcw
add
icebp
stos
cmc
xchg
mov
jg
mov
sbb
sub
dec
ss
ret
adc
jmp
bound
movsl
jle
call
push
mov
sub
xchg
jmp
test
mov
idiv
sub
dec
gs
in
jno
or
or
xchg
push
cmpsl
cld
cmp
adc
iret
cmp
ljmp
popf
push
rcrb
repnz
mov
push
inc
mov
shlb
mov
cmp
nop
data16
jnp
clc
pop
movsl
cmp
fists
jno
lahf
push
into
pop
jb
lcall
in
lds
mov
mov
lock
insl
add
xchg
ret
or
add
mov
mov
es
pop
mov
popa
add
cli
ljmp
mov
or
hlt
pushl
out
add
mov
into
add
jnp
inc
addr16
push
addb
mov
pop
mov
push
inc
mov
shrl
icebp
pop
or
lea
shl
mov
and
repz
lahf
mov
jo
jnp
inc
arpl
adc
xor
loopne
lods
lahf
fs
pop
mov
je
clc
adc
cmp
in
cmpb
jnp
jnp
mov
sub
dec
addr16
adc
xor
mov
daa
dec
and
fsubr
xor
movsb
jp
in
jae
xchg
rcl
stos
into
or
icebp
repnz
mov
pushf
adc
arpl
ljmp
lret
push
in
jg
jg
mov
and
add
add
or
pop
enter
jl
ret
negl
nop
sbb
in
ret
push
jo
sub
bound
inc
das
mov
mov
cld
or
xlat
imul
dec
mov
shll
sbb
xchg
pop
sbb
pop
mov
rclb
mov
loop
aam
clc
imul
roll
mov
in
add
idivb
mov
pusha
mov
cld
inc
push
mov
dec
mulb
jnp
mov
mov
add
inc
enter
sbb
mov
repz
sub
sub
dec
jo
xchg
aad
push
sbb
mov
aaa
cld
ljmp
jb
sahf
gs
and
mov
test
push
pusha
ret
sub
hlt
xor
adc
or
inc
inc
imul
push
cmp
rclb
add
sub
or
add
adc
mov
push
xor
and
or
inc
das
jo
add
sbb
add
std
adc
in
sbb
dec
testl
jg
push
int
inc
xchg
in
sub
inc
insl
adc
pushf
pop
mov
fs
scas
es
pop
bound
js
mov
aam
imul
adc
push
xchg
negl
xchg
sub
push
xchg
cmp
mov
fs
mov
pop
or
xchg
loope
repnz
adc
arpl
popf
cmp
outsl
mov
push
sub
or
aad
sub
xor
aam
push
or
outsl
push
mov
jo
subl
js
dec
lar
in
sbb
sub
idiv
cmp
cmp
inc
inc
jg
cmp
stos
popf
push
pop
push
pop
fistpll
adc
scas
in
inc
das
sub
add
cmpsb
sub
cli
movsb
aam
xor
out
pop
dec
or
sarl
mov
lcall
or
or
pop
push
outsb
sti
and
je
call
or
fsubl
rorl
cmp
lods
cmp
das
cs
add
cmpsb
out
push
dec
push
cld
or
sub
xlat
aam
push
pop
mov
sti
push
rol
xchg
mov
sub
call
dec
sbb
jge
xor
cmp
loop
outsl
mov
out
lods
and
rcl
mov
imul
cli
push
jae
sbb
mov
push
adc
mov
mov
gs
in
inc
xchg
mov
xor
and
sahf
test
adc
out
push
jl
mov
in
mov
mov
jns
adc
add
jb
adc
je
fs
pop
dec
dec
lret
mov
and
push
test
insb
std
inc
push
lcall
pop
xchg
out
outsb
sub
or
test
repz
jg
mov
cmp
movb
loope
add
aad
sbb
xchg
in
pushf
mov
push
in
xlat
mull
or
cmp
mov
mov
mov
ret
repz
stos
sub
inc
imul
divb
fs
fwait
in
es
test
jno
xor
and
pusha
into
sub
sbb
cli
dec
pop
loope
mov
and
cmp
bound
test
jmp
add
hlt
push
or
aas
gs
aad
aaa
mov
daa
stos
mov
fisttpll
les
iret
mov
std
out
push
repnz
gs
mov
mov
push
xchg
push
lock
ds
je
sarl
in
mov
adc
push
jge
paddsw
ds
jne
sti
and
es
mov
dec
int3
xor
bound
sbb
and
outsl
dec
insb
pop
jnp
mov
pop
pop
stos
bound
mov
outsb
out
mov
jg
sub
outsl
xchg
jle
je
push
xchg
mov
sbb
adc
adc
test
jmp
push
imul
jo
addr16
in
mov
mov
push
aam
movsl
outsl
mov
test
xchg
pop
sub
adc
mov
xchg
jecxz
scas
rcr
jne
sbb
lods
xor
mov
xchg
pop
xor
jmp
sbb
leave
dec
int
out
lods
rol
sahf
fists
mov
sub
ret
dec
enter
add
rorb
push
stos
out
xchg
xchg
sub
fistps
stc
cmp
dec
push
push
shrl
mov
dec
or
repnz
fcompl
or
shrb
jb
dec
sub
push
sbb
dec
sbb
jge
enter
imul
aaa
and
mov
arpl
pusha
mov
push
inc
test
push
xchg
daa
gs
jnp
aad
arpl
xchg
hlt
push
push
inc
xchg
jae
mov
sbb
sbb
fmul
les
out
test
or
mov
cmp
insb
dec
aad
int3
shlb
inc
aad
xchg
shr
cli
mov
inc
aaa
cmp
and
and
rol
push
stos
gs
fdivs
jmp
mov
mov
or
mov
mov
out
aaa
mov
push
push
sub
mov
iret
and
stos
pop
xchg
xchg
mov
mov
sahf
mov
xchg
fdivrs
clc
ss
push
jecxz
sbb
dec
loope
and
xor
mov
aaa
movsl
xchg
mov
enter
roll
loope
movsl
out
mov
shll
shll
jmp
cwtl
or
out
or
jl,pt
in
push
or
outsb
shlb
cs
pop
jae,pt
mov
mov
xchg
pop
fisubs
ror
outsl
lods
out
leave
fstpt
lods
xchg
mov
stc
jns
ja
neg
add
xchg
or
mov
lcall
nop
pop
xchg
pusha
cmp
mov
push
jg
inc
lcall
ljmp
pop
mov
mov
jge
test
ss
out
stos
or
daa
pop
ja
ret
vpcmpgtd
outsb
popf
lea
mov
cwtl
sbb
push
cltd
cli
nop
xchg
mov
out
in
insl
stos
ljmp
nop
idivl
or
ljmp
jno
aaa
dec
pop
push
push
inc
or
cmp
fwait
push
lea
pop
leave
or
dec
push
mov
int3
and
push
scas
pop
insb
adc
xor
pop
lret
mov
or
outsl
daa
iret
jno
divb
inc
out
dec
clc
adc
push
je
jns
dec
xor
mov
arpl
pop
pop
shr
add
mov
xor
je
sar
or
lds
outsb
aad
popa
cwtl
jmp
pop
ja
addr16
jg
xchg
jecxz
scas
clc
hlt
jmp
arpl
cmp
loopne
dec
test
pop
mov
outsb
push
and
and
sub
xor
fucomip
adc
xchg
mov
pop
pushf
cmp
xor
scas
xchg
or
or
movsb
movsb
add
xor
push
subb
jae
loopne
jne
sub
and
cmp
pop
test
mov
jg
leave
xor
test
mov
aaa
dec
imul
mov
sub
fs
addr16
into
int3
pop
xor
push
stos
adc
push
fadd
jno
cmp
add
sub
pop
push
xchg
pop
test
mov
jge
imul
rol
xchg
dec
leave
mov
cmc
jg
push
pop
xchg
dec
jb
xchg
sbb
push
jo
cmp
inc
aaa
pop
lret
fildll
sbbb
rorl
jns
es
aaa
add
push
scas
add
insb
int
sahf
push
int
test
mov
out
leave
mov
lock
sub
and
cld
push
lahf
inc
mov
add
or
push
dec
sbb
in
mov
insl
shl
repz
pop
push
push
fadd
adcl
fcomi
pop
test
adcl
cmpsb
idivl
adc
inc
sub
dec
xchg
dec
sbb
xor
jle
insb
cwtl
push
jns
cmp
push
pop
or
push
adc
and
stc
in
mov
in
inc
mov
and
jno
push
xchg
adc
out
jmp
loopne
shll
test
aaa
pop
sbb
sbb
fs
insb
stos
add
cli
inc
into
jmp
mov
push
dec
mov
daa
xchg
pop
test
dec
stos
out
pusha
aaa
rclb
in
mov
xchg
jl
loop
push
cli
lret
cli
repnz
je
or
cmp
cmp
cli
pop
inc
fwait
xchg
inc
imul
mov
adc
in
pop
lret
lock
in
xchg
js
xor
pop
jb
inc
mov
xor
xchg
xchg
mov
and
addr16
inc
push
shlb
sbb
and
enter
xchg
mov
stos
out
out
call
rcrl
cmp
mov
xchg
or
int3
fs
and
and
fwait
jo
testb
dec
xor
andb
std
push
cltd
es
push
call
pushf
adc
aas
jle
cmpsb
arpl
repz
les
in
repnz
in
ljmp
ret
clc
sahf
aam
iret
dec
xlat
mov
xchg
aam
and
ret
inc
inc
push
movsb
mov
pop
sbb
test
and
mov
les
sub
jge
out
pop
pop
mov
in
call
inc
lea
pop
cmc
jbe
cltd
push
shll
enter
xlat
cmpsb
gs
lret
movl
mov
adc
inc
leave
test
ror
cmp
xchg
add
das
mov
mov
loop
jp
xchg
mov
mov
test
jbe
stos
loope
std
das
xor
dec
shrl
sbb
pop
pushf
cmp
fwait
pop
inc
mov
notb
and
sub
or
test
jecxz
mov
xor
lcall
sti
dec
rorl
or
shlb
xor
fimuls
fsubs
shrl
lds
inc
cmpsl
imul
dec
rclb
sub
dec
repz
fcmovne
jns
nop
test
ret
mov
mov
jge
js
mov
mov
add
xor
shlb
mov
test
or
arpl
cmpsb
pop
cmp
mov
xchg
fsubs
mov
xchg
mov
fs
sub
push
mov
jge
sbb
adc
inc
push
sub
inc
arpl
lods
lcall
arpl
dec
jae
sub
fcmovnb
aas
push
sbb
test
mov
test
dec
pop
jnp
mov
cmp
pop
sub
mov
gs
adc
push
jnp
dec
mov
mov
ja
cmp
or
sbb
push
adc
cs
cmpl
sub
xor
pop
dec
into
sahf
mov
daa
dec
mov
addr16
xchg
jecxz
insb
adc
mov
pop
into
pusha
outsl
jns
xor
data16
jmp
xchg
and
int
push
mov
imul
es
mov
mov
ss
add
xor
in
fmull
lea
idivb
add
jl
jae
ret
pop
lods
aaa
lock
sbb
xlat
rcrl
mov
or
fs
mov
mov
push
mov
jns
mov
sbb
mov
dec
and
xor
leave
call
mov
mov
fiaddl
sub
insb
hlt
add
push
add
mov
mov
das
jmp
jmp
adc
mov
stos
mov
or
je
loopne
sarb
dec
or
push
sarl
add
add
push
shl
js
mov
mov
lods
sub
cs
nop
add
idivb
mov
cs
psubsb
inc
pushf
mov
dec
jp
jae
nop
jb
pusha
mov
jg
sbb
stos
xchg
dec
cmp
mov
icebp
pop
cld
sub
cmpsb
push
push
jbe
and
pop
lcall
mov
adc
mov
imul
xor
mov
cs
das
or
dec
iret
sbbl
dec
push
cmp
adc
dec
leave
push
rcl
lahf
mov
jae
pop
xchg
je
xchg
mov
nop
shrb
xor
xchg
incl
sbb
lcall
xchg
out
clc
cmc
aam
je
inc
cmpsb
mov
adc
mov
movups
sahf
test
or
mov
test
add
sbb
outsb
pop
push
push
cli
test
push
push
mov
addb
push
dec
js
test
notb
jp
aaa
cs
sub
sub
sub
pop
arpl
jp
gs
mov
mov
mov
fidivrl
cmpsb
jnp
enter
or
pop
scas
nop
imul
fcompl
and
loopne
daa
cmc
lea
cmp
aas
mov
scas
pop
subl
roll
es
rorb
mov
push
bound
sar
roll
divl
inc
xor
xor
in
sbb
fiaddl
into
dec
and
push
pop
pop
lods
mov
test
adc
inc
inc
lret
or
inc
test
mov
es
xchg
pusha
pop
data16
cmp
lret
inc
push
inc
mov
pushf
inc
xchg
sub
cmp
mov
stos
insl
insl
and
mov
cmpsb
sahf
cmp
pop
mov
lock
pusha
cmp
gs
in
test
shll
loop
cltd
in
sbbb
mov
test
mov
push
adc
push
cmpl
cmp
adc
icebp
and
jne
lcall
ljmp
inc
mov
test
dec
imul
scas
scas
mov
dec
dec
sbb
fisttpll
xchg
mov
jmp
sub
lea
mov
call
ret
xor
or
nop
bnd
cltd
cmp
jmp
gs
dec
xor
xchg
divb
push
iret
cld
or
fdivrs
lock
dec
lcall
jns
push
leave
aas
daa
xchg
jecxz
xchg
imul
push
sahf
sbb
test
cmp
lock
cwtl
shll
xchg
scas
mov
ret
jg
cli
shrb
pop
mov
pop
in
int
in
xchg
jg
repz
outsl
adc
call
mov
mov
mov
inc
sbb
fdivr
xchg
push
andb
iret
fwait
sub
fs
jns
pop
adc
in
pop
outsl
sbb
add
cmpsb
sub
aam
cwtl
js
xchg
gs
loope
inc
jl
adc
adc
xchg
mov
pusha
jbe
jnp
mov
sarb
push
ficomps
arpl
loope
gs
jle
add
sub
sub
mov
inc
ret
sub
and
popa
roll
mov
mov
je
cmp
sub
add
imulb
aad
dec
dec
ljmp
ss
push
ds
leave
xor
push
frstor
cmp
push
in
sub
xor
cli
jge
adc
xorl
jg
rcrb
add
enter
in
and
xor
fwait
outsb
sbb
hlt
push
out
out
movsb
sti
xchg
and
ss
fwait
mov
lret
xchg
lahf
push
imul
mov
pushf
xor
jno
mov
pop
dec
add
out
xchg
xchg
loop
addr16
mov
push
daa
rorl
push
dec
decl
lea
and
shl
sub
loope
imul
in
das
in
test
inc
xchg
repz
cltd
mov
mov
into
ret
jbe
inc
mov
mov
jb
int3
mov
mov
mov
mov
mov
push
pop
sbb
jp
sub
pop
in
loope
mov
stos
pop
inc
fmul
cld
mov
push
xor
decl
pop
xchg
mov
cmp
movsl
jbe
xchg
inc
mov
aas
xchg
js
dec
cli
mov
popa
or
xchg
addr16
or
ret
pushf
pop
adc
jns
xchg
out
mov
mov
aaa
push
out
lods
je
rcll
or
in
in
add
dec
or
lea
mov
cmpsb
mov
push
sub
icebp
mov
mov
aas
ret
jecxz
add
inc
pop
jae
jnp
push
mov
xchg
mov
les
xchg
imul
shll
mov
lea
pusha
cmpsl
jl
push
jmp
loope
add
adc
mov
xlat
cmp
andl
call
and
or
adcl
sti
sarl
movsl
fistpl
sbb
fcmovnb
mov
mov
sbb
push
in
mov
mov
mov
adc
loopne
scas
jecxz
inc
pushf
insl
and
xchg
lea
lds
test
push
out
aam
sub
push
adc
in
inc
int3
cmpsl
and
jnp
stos
idivb
jg
fdivr
out
pushf
cmpb
pop
mov
lret
mov
inc
inc
ret
add
adc
dec
add
inc
fwait
mov
test
rclb
xchg
movsb
push
scas
push
mov
aaa
gs
push
xchg
pusha
xlat
pop
in
cs
hlt
fidivrs
aaa
mulb
adcl
int
sbb
cld
in
dec
roll
into
xchg
adc
fldenv
or
enter
es
pushl
add
pop
in
mov
lods
lods
mov
xchg
fisttpl
fs
ficoml
push
icebp
testl
xchg
loope
lea
jns
outsl
or
xor
clc
iret
jbe
hlt
clc
and
int3
cmp
sub
cwtl
arpl
push
iret
js
mov
sub
and
fidivs
and
cmp
push
xchg
das
push
enter
out
sub
lret
cmovno
mov
dec
mov
xor
mov
dec
ret
cmc
or
out
lock
pop
jns
dec
fisttpll
jmp
pop
stc
xchg
xchg
addr16
test
repnz
xor
push
and
pop
stos
or
adcl
add
push
fistl
idivl
mov
in
push
sbb
adc
mov
mov
push
jp
adc
xchg
dec
push
jns
loope
movsb
das
xor
xlat
dec
fsubr
and
mov
ret
insl
dec
inc
js
fisubrs
test
xchg
dec
iret
cld
jns
int3
pop
xchg
lds
inc
loop
cmp
cmp
es
pop
shl
mov
push
push
xchg
scas
xchg
jnp
push
sub
mov
scas
push
push
aaa
and
and
gs
leave
push
mov
insl
sub
cld
sar
repnz
jbe
in
imul
push
mov
scas
xchg
push
xchg
std
cmp
xor
dec
and
cmpsl
pop
cmp
jae
xor
xchg
xor
adcb
cltd
pusha
scas
or
xchg
mov
or
sub
and
sbb
pop
sarl
sbb
stos
mov
mov
xchg
xor
cld
jg
sbb
cmp
ds
adc
xchg
and
shrb
aas
enter
pusha
fwait
mov
pushf
or
inc
insl
or
inc
nop
and
negb
mov
andl
push
cs
cmp
xor
sub
out
xchg
push
test
xchg
jb
mov
add
xchg
fwait
enter
sahf
jae
push
sbb
clc
fcmove
push
fwait
addr16
in
cli
mov
fnsave
push
mov
mov
aas
xchg
in
stos
dec
stc
mov
ror
in
xor
jb
mov
out
mov
xchg
or
mov
push
xchg
mov
mov
sbb
scas
xchg
add
mov
inc
and
cltd
rclb
into
adc
add
iret
pop
punpcklbw
inc
popa
inc
ds
jb
pop
sti
fsubrs
rcrl
sbb
inc
mov
int
jb
fiaddl
cmp
adc
fstpt
in
jbe
js
test
dec
mov
jne
loopne
sub
out
sahf
inc
ja
lahf
jge
jno
or
shlb
cwtl
std
mov
sbb
pop
mov
lods
xlat
jl
int3
dec
addr16
sbbb
dec
les
daa
cmp
and
or
fldt
pop
pusha
scas
popa
std
cmpsl
movsl
ret
imul
cmp
ljmp
jno
pextrw
adc
xor
mov
add
cmpsb
push
fnstsw
sahf
fcomi
iret
scas
add
iret
mov
pop
movaps
dec
add
cmp
or
sbb
mov
mov
sub
and
stos
movsb
inc
loope
nop
cmp
fwait
jb
cld
sub
and
iret
mov
clc
and
mov
inc
fists
mov
into
push
outsl
outsl
pushl
and
pop
shlb
in
pop
in
shrb
rcrb
in
mov
in
lahf
mov
sbb
jg
adcb
jo
push
push
pop
xlat
cmp
orb
mov
daa
dec
fldl
incb
pop
es
out
pushl
mov
js
call
insl
xor
mov
test
jp
lock
lret
call
gs
push
dec
sti
inc
lret
sbb
inc
daa
inc
loope
iret
fwait
inc
mov
jns
inc
and
jnp
in
dec
loop
adc
mov
sbb
dec
int3
adc
push
aad
in
add
repnz
out
leave
subb
sbb
je
adc
sbb
les
call
mov
xor
xor
enter
pusha
daa
loopne
fstps
xchg
addr16
add
cmpsl
inc
fistpll
jge
mov
push
dec
ja
out
xor
sbb
inc
xchg
mov
in
mov
push
adcb
xor
sbb
or
inc
cmp
neg
shll
inc
std
adc
dec
and
add
stc
dec
arpl
fdivs
or
test
mov
jmp
sub
xorl
or
jns
nop
xchg
xchg
push
in
ficoms
cmp
ret
fyl2x
push
testb
rcll
push
mov
push
ds
push
sbb
dec
es
push
inc
jle
push
in
sub
dec
mov
ja
mov
ja
push
repnz
sbb
mov
adc
jnp
test
out
xchg
add
int
outsb
jo
jne
adc
xchg
xor
sbb
jo
cmp
shll
imul
ret
xor
xor
or
hlt
inc
and
cmpb
mov
call
or
sub
xchg
mov
add
andl
je
sbb
aam
xor
stos
add
fld
lcall
inc
mov
out
dec
pop
xchg
add
mov
lcall
out
push
test
ss
or
mov
lret
cld
and
dec
daa
xchg
cmp
shrb
lods
fstpl
fisubl
mov
je
fsubr
add
inc
stos
in
mov
stos
mov
fcomps
mov
flds
mov
add
in
dec
cmp
fdivrs
pop
xlat
dec
in
popa
xlat
incl
das
gs
sub
ret
and
lcall
cld
sub
aaa
icebp
or
pop
in
jg
add
pop
xor
stos
push
das
je
mov
scas
jle
or
movsl
divl
xor
xchg
sub
jecxz
pop
aaa
popa
push
pop
js
jmp
sbb
xlat
jne
sub
loope
inc
and
insb
xchg
dec
or
les
xlat
fbstp
sub
insl
cmp
ss
push
int
sti
inc
cwtl
scas
icebp
or
mov
adc
push
mov
daa
ret
lahf
fsubp
add
pop
stos
xchg
xor
pop
pushf
add
imul
xchg
pop
sub
and
loopne
xor
cltd
adc
flds
inc
std
stc
nop
lods
inc
repnz
mov
mov
jbe
aaa
pop
xor
mov
pop
xchg
adc
loop
xor
je
popf
js
xchg
sbb
js
or
fwait
jmp
cld
les
push
jge
scas
inc
inc
and
sub
mov
sub
es
hlt
sub
mov
test
xchg
mov
sbb
mov
sub
jecxz
mov
mov
cs
or
loope
popf
inc
sarl
data16
loop
fidivrl
xlat
fbld
cmp
fstpl
push
std
xchg
push
sbb
and
je
cld
shrb
xchg
pop
jnp
xor
jb
mov
jg
or
jle
stos
dec
xor
cmp
jns
test
jnp
xchg
insl
gs
jae
hlt
pop
js
pop
imul
test
imul
pop
or
pop
stos
in
stos
jb
dec
and
cld
jae
jle
push
lods
data16
iret
imul
push
mov
test
jbe
js
decb
or
and
loop
call
dec
or
test
push
and
cli
jge
mov
add
test
dec
sub
or
repz
jge
jae
push
outsb
sbb
pop
mov
xchg
jbe
nop
cmp
mov
cmc
cmp
and
lret
push
fnstenv
nop
jge
mov
ja
dec
cmp
mov
add
fsubrl
and
or
fnstenv
mov
mov
pop
inc
xor
xchg
ja
inc
pop
dec
adc
int3
jmp
les
sub
or
sub
leave
mov
int
sbb
sub
dec
lcall
mov
in
hlt
or
fildll
popf
cltd
pop
pop
mov
sti
and
pop
fiaddl
jmp
and
xchg
inc
lods
mov
xor
mov
mov
fcompp
adc
cmpsl
cmp
xchg
pusha
pop
jae
fimuls
jns
lcall
push
jl
push
adc
sbb
rcrb
cltd
iret
xchg
dec
and
sbb
xchg
pusha
sub
push
inc
js
pop
sahf
ljmp
js
xor
sbb
fidivs
fwait
xchg
mov
les
adc
dec
stos
out
stos
cmp
xchg
mov
ja
movsl
repz
xchg
pop
and
xor
fmull
stos
mov
test
ret
mov
scas
xor
scas
fildl
jne
aaa
hlt
adc
mov
mov
xchg
xchg
sahf
aaa
cmp
enter
je,pn
into
outsl
add
pop
jne
test
lret
adc
and
int3
repnz
cwtl
push
sti
dec
push
rcrl
mov
test
pop
rcrl
ret
cmp
out
push
lods
mov
cmp
aam
pop
xor
je
je
decb
int3
jmp
pop
outsl
or
mov
sar
sub
sub
and
aad
dec
movsb
mov
gs
xchg
mov
mov
adc
xchg
adc
out
xorl
pop
jg
jbe
mulb
inc
inc
jnp
lret
push
xchg
in
pusha
and
adc
pop
and
ret
movsl
mov
stc
sub
push
cmpb
pop
push
outsl
scas
sub
sbb
jle
lahf
add
int
or
mov
jle
in
fsubrl
test
xor
pop
mov
andb
lea
aad
bound
je
mov
sarb
mov
rorb
lret
lahf
cmp
cld
jmp
push
outsb
mov
push
push
dec
cmp
mov
mov
std
clc
shlb
jnp
cwtl
loope
popa
xchg
cmpsl
mov
fiaddl
adc
in
cmpsl
cmc
movsl
hlt
mulb
fwait
stc
inc
cmp
shl
stos
outsb
ja
mov
sarb
cmp
mov
mov
adcl
in
push
add
sarb
scas
into
std
cmpsb
pop
int3
sbb
imull
rorl
sub
lods
mov
cmp
test
push
and
push
aaa
leave
add
in
shrl
jl
movsb
clc
inc
adcl
mov
ja
mov
ret
sub
mov
leave
js
stc
jno
add
cli
popa
cmp
sti
or
xchg
sti
or
sbb
cwtl
leave
mov
dec
dec
mov
ret
out
jno
mov
imul
mov
pop
je
lds
cmp
or
aam
push
int
adc
mov
xchg
arpl
cs
xchg
push
or
sbb
push
xor
jbe
cmp
push
int3
xchg
dec
int3
rorb
mov
add
push
fs
shr
scas
out
jmp
ret
loope
popa
jbe
sbb
in
dec
sbb
aaa
push
mov
jmp
out
fcmovb
adcl
loope
xor
lcall
out
mov
setb
fcoml
pop
dec
cmp
fstpl
xlat
test
leave
insl
repz
dec
stos
fldcw
adc
fstps
cmpsb
lahf
out
push
add
loope
loope
loope
mov
test
adc
cmpsb
add
push
arpl
pop
pop
mov
push
fadds
inc
xlat
pop
sbb
mov
fucomp
sub
or
icebp
sbb
fbld
add
fnstcw
jge
subl
das
inc
jne
sbb
out
mov
fs
es
adc
shl
dec
sub
scas
xchg
scas
scas
jl
sbb
xchg
cltd
push
mov
cmp
lea
mov
mov
xlat
and
je
cmp
pop
push
es
hlt
lods
outsl
aas
daa
movl
mov
xchg
dec
sarl
std
pop
add
mov
ret
arpl
dec
dec
push
cmp
stos
lock
xor
iret
xchg
mov
ds
push
fidivs
lahf
and
xchg
rorb
xchg
in
mov
sbb
jno
or
loope
rcl
roll
std
inc
shl
mov
and
xchg
xchg
push
mov
pushl
adc
inc
and
test
cmp
adc
pushf
mov
cmp
mov
ds
loop
mov
repnz
push
cmpsl
pushl
mov
pop
lds
loop
jl
dec
test
mov
or
push
jge
dec
repz
xchg
or
movsb
nop
dec
mov
push
mov
shr
insl
jle
shl
sub
insb
cmp
add
out
mov
xchg
iret
adcl
mov
xlat
mov
mov
test
out
push
aas
and
and
xor
jmp
inc
jns
mov
out
repz
fstpl
mov
xchg
pusha
data16
and
in
arpl
ds
xor
or
fiadds
aam
sbb
sub
mov
lcall
pop
jmp
enter
mov
push
in
sub
adc
rclb
sbb
xchg
lods
into
daa
add
xchg
in
std
mov
mov
aaa
cmpsl
jns
fistpl
out
mov
sub
push
cmp
or
add
ljmp
xchg
dec
mov
or
push
pop
test
ret
shll
popf
fisubrs
scas
shl
iret
shlb
mov
inc
loope
aas
jl
push
fnstcw
xchg
nop
test
ret
jmp
mov
int3
cs
ds
add
push
mov
sbbb
add
or
sarl
push
jo
mov
xchg
mov
lock
sub
pop
sub
test
rolb
mov
adc
xor
mov
lahf
popa
lcall
mov
xor
mov
int
int3
ret
iret
xchg
js
push
pop
or
inc
lret
aas
push
push
aam
and
fsubr
xor
ret
jp
xor
ljmp
out
icebp
andb
into
push
and
ret
xchg
dec
pop
sti
jmp
pop
hlt
fmul
pop
in
adc
inc
repnz
mov
xor
stc
bnd
fs
or
lcall
push
in
pop
push
repnz
cmp
mov
sti
fwait
test
lahf
cwtl
test
lds
fucomip
test
leave
inc
jge
fldcw
mov
imul
pop
sub
inc
in
mov
mov
inc
sub
jo
add
iret
fcmove
mov
test
lahf
negl
xchg
pop
push
pop
jmp
in
add
out
test
inc
fstpt
and
xor
shrl
pop
cmovg
cltd
xchg
sub
xchg
add
adc
and
pusha
sbb
and
xor
rcll
sarb
dec
int3
push
lock
dec
sarl
jae
scas
outsl
cmp
lcall
nop
sbb
nop
xor
jp
fldt
push
mov
arpl
xor
fnsave
enter
js
imul
pop
jnp
mov
js
pop
lods
push
mov
add
lods
shll
out
lds
in
jp,pn
bound
mov
mov
and
fsubs
cwtl
cli
loopne
add
js
pusha
sub
int
fnsave
lods
lret
sub
fucomp
movsb
add
nop
pop
adcb
sbb
mov
add
fdivrl
and
je
loop
pop
sarb
arpl
mov
xchg
mov
lods
jb
data16
bswap
cmpsb
setns
pop
les
mov
lret
popf
lock
dec
dec
cmp
sub
stc
sub
or
and
sbb
test
pushf
ret
pop
aad
je
cmc
loop
jb
rorl
mov
cmpsb
jmp
mov
or
ljmp
fimuls
mov
lahf
pop
xchg
aam
cmp
popa
lods
cwtl
push
ret
daa
push
push
icebp
fwait
jge
int3
pop
cmc
int3
or
stos
lahf
sbb
sub
jbe
int3
ljmp
mov
shrb
cmp
aas
stos
mov
pop
push
ljmp
mov
insl
jbe
sti
std
dec
xor
ljmp
fildl
sahf
pop
inc
dec
mov
inc
pop
into
fidivrl
xor
lahf
lea
mov
or
xchg
scas
movsb
pop
push
and
pop
les
jae
pcmpeqw
or
loope
pusha
push
arpl
insl
sub
int
ss
cld
push
xchg
enter
pop
sbbl
fs
cmp
xchg
xchg
lock
jle
nop
or
lcall
sub
mov
test
inc
adc
sbb
push
sbb
scas
adc
xchg
cmp
or
nop
inc
dec
pusha
cmp
mov
sub
mov
dec
fldenv
nop
mov
mov
sub
push
sbb
ret
and
sahf
mov
push
mov
rorl
dec
inc
fisubrl
cli
jmp
in
jg
addb
flds
push
jo
or
je
pop
outsl
lds
dec
cmp
ret
jns
pop
lods
dec
dec
call
pop
and
adc
mov
je
lea
jne
jbe
xor
fcomip
mov
nop
sbb
das
int3
jae
cmp
sbb
dec
cmp
andl
sub
mov
divb
push
mov
shlb
inc
leave
cmp
cmp
xor
hlt
xchg
fadd
psubb
lea
push
stos
dec
arpl
inc
mov
inc
sarl
push
lahf
inc
cmp
nop
movsl
mov
cmp
jae
push
jae
je
pusha
sub
in
das
push
xchg
dec
mov
shrl
pop
add
cmpsl
or
jle
push
stos
xchg
stos
pop
or
xchg
sbb
addr16
pop
jo
xor
mov
andl
pop
lock
mov
jae
orb
push
ss
into
negl
sbb
jno
xlat
loopne
dec
cmp
lds
test
inc
imul
or
test
inc
mov
cmc
loope
out
inc
iret
jo
xchg
loope
push
jb
inc
cs
sub
adc
cmp
repnz
and
out
xlat
xor
push
pop
xchg
adc
test
sub
jno
push
xor
jge
lea
sti
push
addr16
cli
icebp
and
out
push
or
lods
andl
icebp
inc
test
mov
int3
cmpsl
lret
cmp
data16
bound
jae
cmp
ficoml
fsts
pop
sub
rcr
nop
sbb
mov
sbb
mov
out
ss
sub
loope
sub
std
xor
jo
xchg
and
pop
scas
cmpsl
movsl
fnsave
ljmp
dec
jae
ljmp
ss
not
aaa
sbbb
mov
sub
push
nop
stc
in
sub
pcmpeqb
jl
push
pop
adc
imul
xchg
out
pop
mov
imul
or
mov
xor
push
adc
dec
cmp
icebp
cli
ret
mov
fists
and
mov
rcrl
push
fsubrs
arpl
imul
inc
adcl
push
into
pop
inc
insl
mov
jbe
fwait
and
mov
popf
xchg
ja
and
das
or
sbb
pushf
add
or
in
rolb
out
decl
dec
or
pop
mov
mov
ds
leave
mov
mov
pop
dec
mov
push
addr16
jmp
xor
mov
cs
push
std
xchg
stos
xor
mov
rorl
aam
sbb
gs
adc
pop
gs
mov
mov
lea
adc
xchg
stos
sub
test
mov
sti
in
or
xor
in
aaa
div
lods
and
cmpxchg
push
push
sub
sub
repz
mov
shrb
ja
das
fadds
adc
pop
loop
out
mov
ss
fbstp
and
push
aam
mov
mov
out
add
or
fmull
jo
pushf
jecxz
jne
xchg
ret
xor
adc
pop
movsl
es
int
xchg
es
sbb
cmpb
je
out
adc
out
cmp
fistpl
in
push
stos
xor
outsl
pop
sub
pushf
pop
cld
sub
mov
xchg
jb
add
pop
loope
mov
rcrb
push
mov
daa
negl
push
cltd
or
inc
fldl
nop
test
jle
inc
scas
mov
fcmovnbe
pop
and
push
and
sbb
adc
jmp
mov
xor
insb
cmp
cltd
fsin
out
xlat
push
and
push
lcall
cld
add
xchg
outsb
cmp
mov
pop
dec
dec
cmp
fs
add
sub
lret
in
fstps
adc
aaa
pop
lds
mov
xchg
lds
ret
or
sbb
scas
mov
mov
pop
xor
cmpsl
inc
xor
or
das
imul
sbb
dec
mov
push
and
pop
sub
pushf
or
pop
arpl
pop
rcll
mov
xlat
cmp
and
mov
outsb
les
stos
fsub
adc
popf
mov
push
sbb
cmpsl
and
pop
pushl
aam
push
addr16
lods
adc
or
jno
int
fcmovnu
arpl
cmpsb
arpl
aas
cmp
add
scas
inc
aas
cli
aad
xor
arpl
and
dec
xchg
bnd
test
lcall
es
xor
in
orb
cltd
aad
adc
sub
test
inc
call
pop
js
cmp
aas
push
sbb
mov
cmc
clc
mov
mov
dec
ljmp
inc
cmpsl
or
enter
jno
and
mov
das
cmp
push
push
pop
mov
ror
mov
mov
ss
adc
sbb
jmp
aaa
add
adc
cld
sti
ss
or
mov
lahf
push
or
mov
xchg
out
add
pop
in
sub
dec
jmp
add
enter
inc
inc
sbb
jmp
cmp
sarb
sbb
pop
cmp
mov
daa
test
in
push
mov
sbb
ficompl
setns
add
int3
cmpsb
jg
mov
cmp
aam
push
fldl
into
mov
out
mov
xchg
sahf
jns
dec
into
xor
cmp
dec
mov
js
loope
jp
adc
jns
pop
icebp
mov
jle
adc
rcl
mov
insb
stc
sub
ja
mov
adc
xor
imul
insl
aaa
mov
xor
mov
xchg
je
sbb
ret
ficomps
mov
movq
movsl
je
mov
orb
adc
leave
pusha
mov
cmp
cli
ret
addr16
js
ljmp
mov
es
cli
xor
repz
jle
or
mov
sub
out
mov
loop
ja
loop
inc
jo
push
sub
push
cmpl
add
cld
es
sub
rorb
cmc
push
push
movsb
nop
imul
mov
popa
fnstsw
pop
daa
sahf
in
pop
fsts
xchg
dec
xchg
std
ficoms
mov
xchg
sub
sub
dec
or
out
or
mov
js,pt
fs
jae
mov
cmpsl
hlt
sbb
and
aad
and
xchg
popa
arpl
jnp
push
lods
adc
enter
js
pop
fidivrs
mov
pop
imul
xchg
pop
lea
xchg
push
push
sbb
shlb
sub
jb
stos
imul
cwtl
sub
cmp
dec
dec
push
sub
adc
push
mov
dec
fildl
add
inc
pop
sub
clc
arpl
fisubrs
out
add
movsb
daa
add
xchg
xor
cmpsb
sarb
xor
addl
test
sbb
or
or
rcll
and
ljmp
xchg
cmp
wbinvd
jl
inc
jle
in
inc
xchg
xor
adc
sbb
xor
int
pusha
inc
jnp
sbb
pop
test
mov
scas
daa
xchg
push
fstps
ffree
clc
push
les
cli
in
xchg
cmpsb
or
cltd
mov
mov
push
cltd
in
sti
test
pop
aam
enter
or
test
xor
inc
jg
push
dec
out
pop
xchg
ret
leave
mov
pop
xor
xchg
cld
pop
sbbl
fldl
int3
cmp
cwtl
adc
lock
loopne
lock
fnstcw
push
pop
cmc
xor
add
sub
lock
mov
shlb
dec
in
adc
push
scas
cmp
pop
xchg
rolb
hlt
sbb
outsb
and
cli
cmpsl
fisttps
pusha
cmp
mov
push
and
fwait
clc
dec
lock
dec
jmp
rcr
fidivrl
jecxz
pop
faddl
movsb
pop
add
popa
stos
hlt
clc
pop
fsub
or
hlt
cmpsl
test
jge
inc
loope
sar
cmc
mov
adc
dec
fidivrs
jge
mov
fistl
int
dec
mov
movsb
mov
push
add
lea
sub
sbb
jne
and
shll
je
inc
stos
cmpsl
test
add
sarb
inc
jp
rorb
sub
mov
inc
xor
adc
lea
sub
inc
outsl
lods
enter
orb
fistps
in
rcl
setns
mulb
push
pop
push
rorb
into
mov
pop
sub
xor
jecxz
cwtl
mov
dec
orl
jle
dec
scas
mov
dec
mov
jno
sub
adc
jge
xchg
xor
shlb
adc
movsb
stos
and
lret
enter
xchg
fnsave
xchg
adc
sbb
rcrb
mov
lahf
push
jle
adc
mov
mov
inc
notl
pushf
push
or
dec
push
adc
mov
insl
or
xlat
sti
inc
imull
cld
add
cmc
das
jmp
mov
lcall
pop
adc
sarl
pop
xor
mov
mov
popf
jmp
mov
mov
test
mov
mov
mov
xlat
jae
sti
add
mov
imul
ficompl
ljmp
add
cmp
pop
in
jge
xchg
push
rcrl
sub
xor
scas
stos
add
shrb
popf
sar
jmp
in
fisubrl
rolb
aam
movsb
popa
push
add
pop
mov
sti
push
cld
fbstp
sbbb
pop
enter
xlat
movsl
or
add
jge
cmpsl
mov
xchg
xchg
jbe
pusha
mov
out
out
enter
xchg
mov
ret
sub
lock
dec
call
sub
inc
cmc
xor
cli
mov
add
push
xchg
lock
testb
mov
adc
push
mov
mov
js
sub
push
test
mov
xchg
or
ret
mov
mov
pushf
mov
mov
cwtl
pop
lods
sbb
xor
adc
add
decb
jbe
or
icebp
fmull
stc
mov
xchg
xor
in
mov
jmp
xor
jp
imul
cmc
xor
stc
cs
inc
stc
ret
sbb
push
jbe
xlat
dec
pop
jmp
jae
imul
dec
cli
fistpll
repnz
loope
cmpsb
xchg
and
daa
test
into
xchg
sub
push
and
add
lock
jnp
gs
jle
cmp
adc
fucomp
adc
aam
cmp
pop
fwait
mov
add
into
push
std
movsb
cmpsb
xorl
rol
aas
pop
std
sub
pop
mov
loope
ficompl
cmpsb
int
dec
push
sbb
inc
jl
xchg
sbb
mov
add
push
jnp
xor
push
mov
adc
xchg
fsin
testl
mov
inc
loop
shrb
clc
fxch
push
sub
xor
loop
movsb
pusha
xor
inc
sbb
adc
out
and
pop
dec
push
div
jnp
stos
imul
cli
dec
push
jne
or
jle
scas
pop
add
aas
data16
adc
pop
mov
push
xor
cmp
popf
decl
add
or
arpl
andb
dec
and
call
mov
das
in
sub
shlb
sbb
pusha
xchg
jge
ljmp
stos
lcall
sub
orb
cli
mov
mov
ret
and
xchg
dec
aas
pop
mov
push
scas
sbb
int3
pop
xchg
mov
out
gs
enter
jo
aam
adc
push
lock
jl
in
jnp
adc
nop
jge
in
stc
xor
and
mov
sahf
sbbb
call
inc
push
decl
test
sbb
adc
fnstcw
imul
xchg
add
sahf
pop
xor
xor
lcall
rorb
scas
jb
subb
adc
pop
repnz
jmp
or
push
push
lods
cmp
sbbl
sub
lock
sbb
inc
sub
jle
push
jo
mov
shrl
inc
fs
in
pop
iret
xchg
int
sub
outsb
inc
or
sub
scas
jle
aam
push
sub
sbb
push
sbb
test
xchg
pop
inc
mov
xchg
hlt
insl
aam
cmpsb
cmc
or
pop
push
cmpsl
or
pusha
ds
xchg
test
rcr
into
outsl
daa
mov
jl
push
cwtd
pop
push
in
cltd
dec
int
cmp
ds
pop
std
push
sub
cmp
mov
or
call
jg
inc
mov
test
dec
sub
mov
cmpsb
mov
mov
test
lcall
cmpsl
cmp
mov
roll
jbe
xchg
rcll
pop
add
dec
hlt
sbb
fcoms
pushl
fbld
test
in
xchg
fdiv
jg
push
cmpsl
xor
lret
xchg
outsb
jp
sbb
push
mov
out
js
dec
imul
or
jmp
mov
insb
sbb
leave
lds
jl
std
cmp
js
jno
dec
stc
leave
mov
add
xor
jb
out
jnp
mov
push
sub
mov
std
pop
lahf
sub
jl
clc
xor
push
xchg
mov
cmp
pop
std
jg
push
fcoml
std
repz
mov
cwtl
sbb
jecxz
jmp
lods
repnz
scas
popa
repz
cs
aad
out
je
aaa
inc
stos
stos
xor
dec
cli
mov
push
mov
fneni(8087
test
ds
xlat
ljmp
xchg
mov
outsb
adc
push
dec
mov
push
daa
cmp
incb
rclb
add
jno
scas
insb
jl
mov
mov
pop
add
xchg
out
inc
ret
add
out
fdivrs
adc
push
les
or
mov
jl
gs
xlat
mov
cmc
cs
lret
sbb
out
push
cmp
mov
xchg
xor
mov
lods
xchg
pop
xchg
stc
cltd
xor
in
sbb
ret
mov
sub
mov
dec
pushf
xchg
andl
lret
mov
pop
jge
or
add
fidivs
sbb
pop
inc
push
sbb
addr16
cmp
jb
stc
shl
lods
cli
pop
movsl
sti
add
inc
sbb
mov
popa
or
sti
sub
jle
shll
ss
shrb
idivl
test
cli
push
xor
je
add
and
add
jmp
xchg
fcompl
pop
pushf
xchg
cltd
xchg
test
pop
pop
stos
sar
jmp
test
gs
push
imul
mov
pop
hlt
add
fldenv
lock
pop
mov
into
out
cmc
push
leave
sbb
std
pcmpeqw
push
test
mov
inc
mov
scas
pop
movsb
xchg
sub
jae
lds
mov
repz
mov
push
adc
or
sbb
xchg
imul
fcomp
inc
scas
stos
loope
adc
shl
inc
inc
inc
push
movsl
popf
sub
repnz
nop
mov
mov
idiv
popa
sbb
jnp
pop
mov
pop
dec
outsl
sub
jmp
sar
lret
test
pop
outsb
rcrl
mov
and
mov
lds
push
ss
add
lods
push
lret
sub
xchg
mov
inc
insl
push
ljmp
fisubrl
js
mov
xchg
push
push
pop
movsb
mov
pusha
mov
mov
push
mov
inc
ja
lods
sbb
and
jns
and
ret
xchg
sbb
pushf
push
dec
mov
mov
lret
mov
pop
enter
pop
sahf
mov
pop
jmp
aad
les
mov
stc
adc
out
sahf
leave
sub
xor
hlt
push
jne
std
or
in
out
lock
pop
sbb
pop
call
and
mov
push
shlb
imul
cmp
or
int3
add
inc
test
push
fstp
les
pop
push
shll
cld
fs
and
inc
pop
icebp
xor
push
stos
outsb
rclb
cmp
jle
pop
mull
in
cs
xchg
cld
je
rorl
push
pushf
inc
xor
cmp
or
jp
pushf
test
jno
in
rcrb
orl
iret
stc
pop
in
jae
pop
pushf
push
addb
jbe
shll
xchg
lea
pop
movsb
ret
mov
xchg
fstpt
sub
mov
fistl
or
and
add
mov
xlat
add
jb
nop
jae
adc
push
and
outsl
or
std
lods
stc
xor
cmp
fiadds
or
and
or
push
push
pop
mov
into
outsl
mov
adc
mov
push
cmp
clc
shll
test
lds
pop
idivb
sub
pop
jbe
inc
jb
push
jns
push
rcll
outsl
test
sub
cmp
sbb
mov
push
and
jnp
adcl
fnsave
jge
mov
repnz
xchg
fwait
in
lods
cmp
xchg
mov
sbb
jmp
data16
cmp
es
add
cmp
icebp
cld
std
leave
pop
pop
adc
and
jb
jb
jp
fisttps
jo
add
cmpsb
push
aam
and
rcrb
or
pop
jg
fsubrs
test
jno
and
xchg
adc
mov
xor
rol
adc
jns
rcrl
sub
sub
xor
dec
xorl
lods
addr16
loopne
jbe
jmp
addr16
mov
outsb
loopne
testl
jp
mov
pop
jle
lcall
int
cmp
inc
aas
adc
ret
pusha
fsubrs
push
fcmovnb
inc
mov
out
ret
mov
adc
or
cli
in
rol
in
cmc
inc
xor
insb
xor
mov
inc
subb
int3
sbb
dec
cld
stc
cmpsb
sti
aas
call
mov
in
sarb
sbb
in
pop
lock
add
add
lcall
inc
outsb
popf
in
je
outsl
adc
out
lret
sti
js
mov
and
clc
mov
xor
cmpsb
pop
xor
call
sbb
sub
and
jae
push
jne
pop
jns
mov
js
mov
outsb
clc
or
fdivs
push
test
cmp
pop
push
pop
jns
das
sbb
aam
add
in
ret
lahf
ret
xchg
sub
push
xor
mov
in
in
push
pop
and
mov
sti
mov
xor
cmp
out
insl
icebp
or
sub
rorl
test
pop
jmp
cmp
bound
add
je
push
in
ficomps
adc
and
sub
push
inc
pop
stos
fwait
addl
inc
out
pop
call
xchg
shr
cmp
outsl
fstl
out
jl
loopne
sub
mov
push
and
xlat
into
lahf
sub
cld
sbb
popf
xchg
xor
test
ret
insb
imul
add
addr16
cltd
ror
xor
push
jnp
mov
popa
sbb
insb
xchg
jo
lds
push
dec
inc
dec
leave
call
add
jae
adcb
nop
xchg
or
or
lods
lods
sbb
mov
sub
mull
adc
adc
adc
icebp
nop
ds
and
jg
jns
inc
cmp
sbb
test
sub
sub
jg
xchg
mov
adc
test
dec
mov
int
xor
hlt
adc
dec
and
and
cld
gs
or
pushl
xlat
sub
dec
mov
repz
sub
lcall
or
ret
pop
mov
cmp
out
daa
idiv
lods
or
mov
pop
mov
or
jle
int
aaa
rcll
lret
xor
mov
orl
push
pop
daa
cld
imul
mov
div
imul
ds
dec
xchg
and
cmp
fisubrl
dec
pop
in
bound
stc
inc
mov
orl
incb
xor
push
xor
into
dec
mov
sbb
sub
push
pusha
notl
inc
ljmp
fcmovnbe
in
mov
addr16
mov
call
add
stos
inc
inc
and
push
xchg
decb
pop
cmp
xor
shl
jl
fisubrs
add
arpl
pop
dec
dec
xchg
push
jmp
sbb
pop
push
mov
xchg
xchg
mov
jge
sbb
inc
sbb
sbb
mov
dec
dec
aaa
adc
shll
daa
adc
sbb
jge
mov
aas
push
or
inc
mov
dec
dec
adc
subl
xchg
shrb
daa
int3
and
cmp
ret
mov
insb
es
cltd
scas
pop
pop
mov
sbb
fdivrp
cmp
pop
mov
cltd
adc
cs
or
mov
loopne
jns
jmp
inc
daa
repnz
jp
inc
pop
mov
add
and
or
mov
mov
lret
mov
and
adc
mov
xor
std
jo
cli
insl
stos
inc
fwait
in
jne
sub
sub
pop
mov
cli
jmp
ja
inc
gs
popl
adc
sbb
test
cli
and
rcrb
adcb
pop
jmp
lcall
pusha
lret
inc
lret
sub
adc
dec
xor
xor
and
pop
pop
push
out
int3
arpl
xchg
xchg
mov
lods
std
das
mov
pop
mov
adc
nop
aaa
push
lret
jns
leave
push
add
mov
lock
add
xor
dec
mov
pop
rep
lods
adc
sbb
xor
lret
and
push
je
push
icebp
sub
repnz
and
cmp
add
das
sub
mov
orl
scas
in
repnz
mov
test
push
fcomi
sbb
and
mov
push
jge
insb
inc
or
data16
test
and
lret
lahf
shrl
ja
leave
ljmp
push
push
add
add
mov
test
push
mov
pushf
and
test
cs
dec
xor
orb
xchg
pop
push
out
adc
or
js
cmp
jl
cltd
add
in
and
jp
dec
xchg
xorl
fidivl
movsl
mov
mov
lock
int3
je
xchg
jmp
cmpsb
pop
popf
jne
mov
pop
aas
pushf
mov
dec
or
or
sbb
push
jmp
sahf
in
xchg
add
icebp
push
lcall
pop
jns
inc
sub
mov
sbb
cs
sbb
icebp
lcall
xor
lcall
mov
lock
popf
mov
xchg
into
movb
cmp
xchg
or
mov
hlt
inc
ja
push
xchg
popa
cmpsb
repnz
sub
sahf
mov
fsubrs
xchg
test
sbb
inc
add
stc
push
xchg
cmp
dec
fcmovnb
lret
gs
adc
test
xchg
int
fld
aaa
mov
xor
aad
mov
icebp
sbb
or
mov
sar
jno
insl
arpl
daa
inc
cmp
push
fisubl
dec
jl
push
xor
or
test
xchg
sbb
loopne
mov
and
outsb
pop
and
dec
pop
testb
adc
mov
or
test
outsb
arpl
lods
xor
mov
sbb
pop
mov
lods
aad
jbe
add
js
mov
fcmovnb
imul
iret
ret
repnz
push
sbb
mov
xchg
aam
push
dec
mov
loopne
push
inc
das
in
mov
pop
arpl
je
jmp
and
xchg
lahf
stos
loope
leave
dec
add
cmc
adc
sbb
lods
and
mov
data16
sub
imul
pushf
sbb
divb
popa
les
or
std
xchg
pushf
nop
xchg
into
lds
xor
cs
pop
ds
xchg
shl
inc
push
hlt
stc
sbb
test
cmp
in
mov
iret
out
xor
faddp
jg
imul
pop
jmp
adc
adc
fisubs
sbb
dec
add
push
xchg
dec
jmp
lahf
or
imulb
nop
loopne
int
movsl
mov
fidivrl
arpl
jne
mov
aam
lds
jae
mov
xchg
inc
mov
mov
sub
mov
push
pop
cmc
xchg
call
sahf
les
add
clc
push
push
aam
adc
xchg
movsb
sbb
in
and
ja
aad
setb
xor
mov
ljmp
and
add
cwtl
repnz
cmp
sbb
faddl
sahf
or
or
mov
sub
mov
or
testb
xchg
fisubs
lods
enter
adc
loop
shll
inc
jp
jg
insl
adc
fbstp
ds
mov
in
fdiv
jo
add
popa
repnz
outsb
lcall
test
add
push
fsts
pop
dec
inc
je
push
mov
in
call
sub
or
push
mov
mov
jns
fsubrs
mov
shll
idivb
aas
sbb
mov
fwait
scas
sub
lods
mov
addr16
pop
pop
pushf
xchg
out
jge
inc
testb
mov
mov
mov
mov
js
and
xchg
out
pop
out
ret
pop
dec
pusha
xchg
and
cmc
pusha
imulb
pop
fcmove
fidivrl
lcall
aas
lods
pusha
out
aad
xchg
ret
sti
in
inc
out
andb
ret
gs
divb
xor
dec
sbb
mov
js
inc
inc
mov
mov
iret
or
scas
shlb
jge
out
fcmovb
popa
mov
lods
cmc
cld
cmp
ror
cmc
pop
js
and
pushf
in
lret
repz
std
dec
mov
xor
das
sub
iret
in
testl
xchg
roll
pop
cmp
repnz
ficomps
je
fsub
xchg
stos
push
jno
dec
jnp
outsl
imul
adc
lret
mov
push
imul
sub
pop
rolb
adc
shlb
popf
push
cmp
in
jns
mov
dec
in
out
pusha
inc
mov
test
and
adc
push
inc
inc
knotw
xor
push
inc
adc
add
pop
in
fbstp
idivl
push
mov
in
es
and
jl
clc
in
dec
inc
cmp
cli
imul
sub
imul
add
aaa
aaa
push
nop
sub
dec
or
loop
outsb
or
int
sti
scas
sti
js
mov
mov
cmpsb
aaa
mov
inc
xor
jmp
inc
jns
addb
pop
loope
push
lcall
inc
inc
sub
cmc
and
xchg
xchg
lds
cwtl
nop
ja
lods
negb
mov
pop
mov
xchg
pop
mov
data16
xor
fisttpl
jecxz
xchg
jge
lods
je
cmp
xchg
xchg
sub
insl
mov
or
pop
or
and
sub
adc
pop
adc
or
sbb
mull
ja
sub
rorl
outsl
add
pop
stos
jmp
add
inc
pop
push
mov
sub
clc
pop
mov
les
js
dec
xor
movsb
mov
cmp
adc
sbb
out
std
repnz
cltd
pop
test
pop
push
fidivs
sarl
mull
lcall
int
in
and
ljmp
xor
bound
xor
insl
rolb
frstor
jl
fsubl
pop
pop
adc
hlt
gs
in
push
and
sbb
inc
mov
and
popa
addr16
dec
aam
mov
aaa
mov
mov
lcall
and
insb
fucom
movsl
repz
fisttps
add
push
xchg
xchg
insl
xor
movsb
gs
lret
mov
cmp
popa
jae
add
aam
mov
xor
arpl
ret
mov
adc
mov
mov
dec
outsb
dec
loop
adc
inc
ds
adc
xchg
jae
in
scas
xchg
ja
fidivrl
xor
out
fstpl
dec
mov
leave
popa
arpl
dec
cmp
cltd
add
push
adc
inc
pusha
jmp
mov
mov
dec
adc
push
fisttpl
or
fistpll
pop
push
and
inc
push
rorl
lds
cli
out
repnz
fnsave
jne
adc
push
xchg
sub
sub
aaa
xchg
adc
cmp
sbb
xrelease
stos
outsl
mov
or
leave
mov
xchg
or
jns
iret
or
out
xchg
aas
push
mov
cmp
fwait
in
repz
xor
xchg
fiadds
push
insb
cmp
mov
sub
fs
xor
mov
shrb
and
add
mov
sub
xor
lock
cmp
subb
les
xor
push
mov
push
ret
stc
push
dec
mov
xor
adc
xlat
das
mov
stc
cmp
in
loopne
repz
mov
sbb
fisubrl
fnsave
jg
cmp
or
bound
lret
je
xchg
dec
fxch
mov
ret
jle
fimull
inc
cmpsb
dec
mov
sub
push
mov
ljmp
mov
pop
ja,pn
adc
mov
push
lods
neg
ret
push
pop
pop
xor
stc
adc
mov
xor
popa
xchg
xorl
mov
pop
pop
cmp
xor
pop
sbb
adc
mov
jp
in
jmp
adc
jp
xor
dec
shll
andl
shrl
std
mov
xchg
add
into
ret
in
test
repnz
pusha
aaa
add
ds
lds
mov
sub
and
loopne
loope
jo
in
jmp
loope
loopne
lods
pop
jbe
xchg
xchg
fadds
int
xchg
inc
into
pop
inc
and
cmp
mov
xchg
repz
mov
test
jb
xchg
sbb
inc
pusha
cmp
shll
jle
das
scas
std
xchg
lock
push
in
and
cmp
push
mov
jmp
cmp
lock
mov
push
push
mov
mov
pavgb
inc
pop
jbe
cmp
mov
or
fstps
cs
adc
addr16
mov
hlt
xor
and
clc
adc
adc
cltd
sahf
dec
out
push
dec
mov
adc
xor
adc
mov
lea
rclb
dec
mov
sbb
xchg
adc
scas
shl
xchg
or
cmpsb
sub
jp
sbb
lds
leave
jge
imul
or
bound
jmp
ret
mov
outsb
mov
in
pushf
xchg
push
and
sti
jl
mov
cmp
dec
cmp
sub
in
xchg
je
data16
and
repz
cmp
aad
sbb
les
mov
imul
fsts
mov
int3
lret
out
scas
mov
or
lods
sbbb
insb
cmp
add
adc
jmp
inc
cmc
fwait
cld
mov
jo
jle
xor
scas
insb
pop
test
loopne
sub
cmp
jne
fxrstor
inc
adcl
inc
and
pop
ret
inc
sub
inc
pop
into
mov
mov
mov
add
adc
sub
dec
mov
mov
jmp
adc
sub
pushf
or
je
sbb
fld
dec
cmpsl
cmp
xchg
jno
add
inc
mov
rcrb
divl
scas
popf
and
adc
scas
push
sbb
push
or
inc
movsb
aam
int
andb
insb
notb
and
mov
or
and
pop
and
cmp
lahf
icebp
xchg
pop
mov
out
outsb
and
mov
jmp
push
push
pop
jo
add
pusha
xchg
cmp
aaa
sub
cmpsl
sbb
mov
jmp
loope
jns
dec
insb
idivb
cmp
sbb
iret
fsub
mov
lds
repz
sbb
fdivs
xor
les
xor
mov
fcoms
jno
sbb
scas
cmp
ror
gs
jle
in
icebp
adc
xor
sbb
push
sbb
ret
out
sbb
push
mov
fs
dec
scas
push
loop
sarb
aas
out
sbb
pop
or
aad
icebp
adc
jge
les
out
xor
sub
lahf
cs
test
cli
adc
lods
sbb
xor
inc
adc
movsl
mull
mov
and
js
inc
mov
jp
sahf
fidivl
jp
dec
jl
or
fwait
rorb
cmpsb
mov
and
nop
adc
sbb
int3
fsubrs
pop
add
sti
mov
and
xchg
xor
sahf
rcrl
lods
pop
int
call
add
dec
cwtl
fdivl
fucomi
sub
aas
inc
dec
dec
or
pop
jns
nop
outsl
rol
xchg
cli
xor
or
scas
es
shrl
daa
sbb
or
aaa
insl
bound
push
test
test
push
adc
mov
pushf
push
mov
or
or
inc
lock
xchg
xor
jmp
xchg
pop
hlt
cs
mov
loopw
pushf
sbb
outsb
shl
or
mov
aam
repnz
sbb
cmp
push
jns
xchg
add
js
push
mov
jmp
icebp
push
out
xchg
dec
pop
or
or
cmp
xchg
stc
outsl
mov
and
adc
iret
fiaddl
inc
fimull
loop
movsl
decb
out
xor
les
jb
dec
mov
jmp
xchg
fildl
dec
mov
mov
mov
int3
lret
in
js
insb
shr
imul
fs
test
inc
in
sub
outsb
xchg
xchg
xor
or
testl
push
aaa
cmp
call
pushf
in
sub
fucomp
repnz
pop
mov
sbb
mov
xor
fstl
mov
dec
cltd
popf
push
je
mov
xchg
je
ret
in
shlb
cltd
mov
pop
pop
jg
insb
int
add
fs
xor
and
push
test
mov
adc
and
push
rcl
or
into
sti
js
stc
add
mov
test
repnz
rcll
insb
sbb
jmp
shlb
adc
add
in
mov
cs
pop
cmpl
in
ret
mov
dec
pop
mov
pop
mov
xchg
jmp
ret
cwtl
bound
inc
cmp
and
xchg
std
mov
repnz
out
aam
insl
jle
call
inc
sub
shll
pushf
pop
out
mov
sub
dec
xchg
pop
cmc
or
xor
dec
jae
mov
pop
cmp
push
test
pop
cwtl
loopne
lcall
movsb
in
fmuls
push
xchg
xor
fstp
outsb
rcrb
fmulp
dec
dec
xor
shl
jmp
daa
jno
movsb
pop
jmp
mov
push
iret
imul
sub
rorl
jle
out
add
das
mov
sbb
lret
or
pop
arpl
xor
js
cmp
cli
test
cmp
sbb
sub
mov
mov
inc
sahf
pop
dec
or
adc
mov
shl
cwtl
xor
ret
mov
mov
add
jp
inc
call
ficomps
test
sbb
test
sub
push
mov
push
bound
sub
inc
cmp
mov
and
adc
cld
and
cmp
mov
ret
les
mov
mov
lock
push
inc
push
push
scas
jno
test
cs
mov
xchg
adc
ss
jnp
bound
add
js
mov
data16
mov
cmpsl
xor
push
inc
aam
nop
cmpsb
stos
sbb
pop
fstps
shlb
lea
cmp
aam
xchg
cmp
mov
pusha
mov
xorl
cld
cld
mov
popa
rorl
inc
das
xchg
jb
inc
sub
lahf
hlt
imul
jb
inc
dec
cmp
test
adc
in
push
and
orb
mov
adc
mov
or
fs
pusha
dec
sub
mov
dec
mov
push
frstor
add
addl
lcall
outsl
lods
ret
dec
sbb
lcall
inc
jb
into
inc
aas
aaa
push
pop
movb
inc
pop
mov
dec
cld
jecxz
dec
nop
sub
jp
dec
pop
mov
das
lahf
dec
mov
inc
jne
and
popf
mov
arpl
push
mov
testb
pop
lea
push
outsb
int
rcl
and
mov
shrb
adc
mov
adc
call
scas
fists
rclb
mov
fs
push
pop
arpl
aaa
xor
jge
xchg
jb
adc
sub
addr16
mov
sub
outsl
cmc
xor
jle
jnp
and
xorl
cmp
push
in
sbb
testb
in
jmp
sbb
testb
je
adc
inc
push
mov
aaa
xchg
jno
cmp
test
push
push
jmp
and
icebp
mov
cltd
mov
or
and
add
shlb
imul
mov
xlat
outsb
mov
ss
outsb
subl
inc
in
xor
sub
imul
jne
lcall
shll
or
push
jecxz
fs
outsb
inc
adc
popf
and
loop
mov
sub
mov
dec
push
xchg
xchg
mov
dec
cs
push
stos
pop
repz
mov
imul
sbb
jne
fcmovnu
mov
psubusw
aad
arpl
jp
jo
pop
jbe
mov
out
mov
fistl
xor
inc
dec
mov
xor
inc
push
popa
out
xlat
lahf
mov
and
inc
inc
ret
paddsw
xor
push
mov
jo
adc
jl
add
in
loope
popf
mov
imul
jnp
lock
sti
dec
add
decl
inc
add
nop
cmp
call
fwait
repnz
lock
push
jno
rcll
sbb
push
dec
jp
push
bound
adc
aaa
mov
jbe
mov
xchg
jo
test
or
inc
or
and
sub
mov
sbb
push
dec
into
pop
pop
inc
sub
push
mov
popf
mov
lock
pop
xor
ret
dec
inc
jecxz
sbb
mov
cs
fimull
or
out
lea
lret
xchg
ljmp
pop
inc
mov
repz
xchg
in
pop
lret
ja
into
and
inc
addb
dec
arpl
pop
ret
imul
mov
push
adc
stc
ljmp
dec
nop
addr16
push
push
mov
mov
mov
mov
mov
repnz
into
xor
out
pop
loopne
add
adc
cmp
mov
push
xchg
fldl
and
or
ja
in
cmpsl
push
xchg
sbb
and
jge
sub
adc
mov
jl
jae
mov
pusha
mov
shrl
mov
js
shrb
push
sti
adc
mov
push
repz
mov
sbbl
mov
arpl
pushf
xchg
xchg
int3
jb
sbb
mov
sbb
rcll
out
adc
jmp
out
jbe
and
mov
clc
mov
cwtl
pop
adc
je
lods
adc
das
shll
daa
jg
fstl
sub
pop
lds
sub
das
addr16
cmp
add
sbb
insl
push
repnz
pop
xor
outsb
and
mov
push
pop
inc
std
mov
jle
shll
pop
sub
imul
pop
xchg
cwtl
insb
jmp
dec
push
jb
into
int
adc
mov
jae
push
adc
pusha
mov
mov
jb
mov
mov
outsb
jp
adc
mov
push
in
cmp
or
push
cld
xchg
cli
dec
pop
pop
aad
pop
les
dec
xor
es
dec
adc
inc
or
adc
push
or
push
les
sub
sbb
xchg
ss
idivl
loope
stos
cmp
shr
xor
jae
aam
cs
mov
and
cmp
cmp
jle
xchg
stc
push
fistl
cmovs
idivl
jecxz
repnz
daa
sbb
enter
es
cmp
jno
pop
or
sar
cmp
adc
push
pop
mov
bound
mov
sub
push
minps
and
int
daa
scas
das
aaa
cs
daa
std
push
dec
cmc
jecxz
addl
adcb
rorb
lods
ucomiss
ret
and
sub
imul
jge
int3
xchg
xchg
xor
cmp
addb
xor
fcmove
jae
aas
cmp
and
in
push
mov
mov
xchg
jg
mov
mov
adc
push
mov
flds
inc
add
xchg
cld
mov
inc
imul
aaa
mov
jns
mov
xor
rorl
mov
lods
xchg
cmc
scas
inc
add
sub
adc
xlat
out
fdivl
xchg
and
add
pop
inc
or
into
je
xor
ljmp
fnstcw
jle
cmpsl
bnd
add
js
sbb
out
sub
push
clc
push
not
mov
jb
das
jmp
jecxz
xor
dec
fwait
cli
mov
sub
lret
mov
jnp
mov
loope
rorb
test
jg
test
in
jle
and
int3
fcompl
jne
mov
rcr
push
lds
and
test
cmc
subb
or
sbb
cld
lcall
jae
mov
lcall
rclb
pop
ret
mov
popa
add
sub
pop
pop
push
jbe
popa
insl
jb
out
movsl
cmp
fst
sahf
pop
jge,pt
or
sbb
sub
push
clc
lods
adc
mov
out
mov
ret
gs
leave
ljmp
mov
add
rorb
cltd
push
and
jb
aaa
jecxz
sbb
mov
lods
nop
cmc
int
idivl
mov
test
out
cmpb
mov
lea
insl
jge
push
repz
frstor
jecxz
in
mov
adc
adc
xlat
xor
mov
testb
mov
xchg
fcoms
mov
adc
dec
xchg
or
sub
pop
aaa
mov
cmpsl
push
xchg
jae
leave
andb
clc
rcll
cmp
fsubp
ss
jbe
int3
mov
jo
pop
in
push
imul
jge
dec
test
movsl
fiaddl
pop
push
pop
roll
stos
lret
clc
fildll
test
movsb
repnz
sbb
xor
mov
pop
bound
cmp
jbe
icebp
ds
push
in
xchg
pop
nopl
xor
adc
sub
or
ficompl
stos
xchg
repz
push
mov
les
aaa
jae
pop
jne
sub
adc
pushf
push
shrb
sbb
loop
ret
mov
dec
mov
test
insb
cwtl
mov
xor
int
adc
outsb
sub
iret
fsubrp
test
sbb
inc
jne
into
rol
push
push
mov
sub
xor
mov
in
add
and
repz
je
jmp
das
roll
stc
and
dec
enter
jl
data16
pusha
sub
sbb
mov
in
add
sub
in
pop
mov
and
inc
jg
inc
cmp
xor
mov
mov
je
repnz
mov
movhps
sbb
cmp
daa
jo
pop
adc
sti
inc
cs
jl
mov
adc
push
jbe
push
sub
js
in
xchg
xor
hlt
dec
stos
add
add
insb
cmc
jmp
roll
in
pop
pop
xor
pop
je
jo
pushf
jne
out
xchg
int3
lahf
xor
cld
aas
xchg
lahf
mov
enter
into
sbb
push
dec
stc
jne
fildll
mov
inc
cld
mov
in
sub
stos
mov
data16
int
shlb
data16
enter
scas
inc
daa
ss
pop
or
enter
jae
stc
xor
loope
in
dec
nop
push
ljmp
sbb
inc
inc
xchg
imul
or
sbb
push
mov
adc
mov
mov
mov
jb
das
sti
idiv
inc
nop
shrl
pop
rorl
fistl
adc
in
inc
xlat
mov
lods
cmp
xchg
mov
sbbl
sub
shr
mov
faddl
jge
mov
adc
cmp
stos
xchg
sbb
sbb
sbb
outsl
sbb
sub
pop
jecxz
ret
int
testl
stc
add
fstps
pop
mov
enter
mov
push
je
or
icebp
pusha
add
mov
and
andb
sbb
ret
test
and
sti
mov
mov
jne
jg
xor
jno
jmp
mov
andb
push
and
in
cmp
daa
sahf
inc
xchg
fs
pusha
dec
sbbl
mov
adc
subb
dec
jecxz
lret
push
mulb
pop
je
or
fdivrp
push
dec
movsl
sub
mov
mov
repz
shr
push
shrb
lock
xchg
stc
sbb
xlat
fstpl
sbb
fs
fsubl
xchg
jo
jl
loopne
aas
mov
fidivs
dec
pop
fildll
mov
mov
aad
mov
cmp
jg
mov
inc
mov
rorb
lahf
enter
lahf
into
mov
sbb
loop
sahf
aaa
ja
test
data16
lock
jno
lret
inc
add
ret
jmp
mov
enter
fsubrs
in
in
dec
xorl
loope
fidivrs
mov
ds
sub
xorl
arpl
mov
icebp
sub
in
jg
lds
inc
push
scas
cli
add
lcall
mov
adc
adc
outsb
loope
push
pop
sbbl
mov
outsb
cltd
js
mov
xchg
jmp
pop
imulb
or
dec
pop
dec
popa
rcrb
pushf
dec
cmc
stos
inc
fsub
inc
mov
dec
test
add
mov
ficoms
jmp
dec
push
push
or
stc
sub
repnz
lret
add
pop
mov
andb
pop
sub
movsb
jno
loopne
repz
xchg
clc
or
lock
mov
pushf
push
or
mov
add
add
lock
xlat
push
es
mov
mov
movsl
mov
fldcw
push
add
push
insb
pop
ja
xchg
jo
popa
loop
sti
sahf
mov
cmp
pop
inc
popa
loopne
fs
add
cmp
mov
fucom
mov
push
push
xor
inc
stos
arpl
sub
inc
aas
test
pop
fistps
mov
jl
sub
std
repz
adc
xlat
movsb
ficoms
mov
movsb
mov
mov
jo
xchg
xchg
in
inc
ds
lock
mov
arpl
cwtl
hlt
mov
shll
mov
jns
iret
movsb
adc
sub
cld
lret
push
insb
dec
mov
clc
iret
xlat
ja
std
adc
xor
and
push
inc
lods
push
lock
pop
mov
xor
fwait
cs
sub
in
iret
clc
mov
xor
mulps
pop
jmp
into
mov
add
or
inc
daa
popf
adc
mov
mov
push
loop
cmc
fisubrs
shrb
sbb
jb
or
push
repz
inc
mov
add
imul
xor
clc
or
ret
rcl
test
dec
mov
pop
popa
test
repnz
dec
ret
cmc
mov
add
test
out
test
cwtl
fidivrs
mov
cmc
xchg
jle
lcall
fmull
inc
pop
mov
ret
mov
add
xor
adc
pop
adc
dec
fstpt
cmp
xor
shl
mov
push
mov
add
sarb
or
in
pop
outsb
push
cmpsb
sub
mov
imul
sub
into
mov
and
and
jne
or
adc
stos
adc
dec
jp
mov
addb
inc
ljmp
fiaddl
xchg
cmpsb
dec
pop
adc
mov
xor
incl
dec
jg
mov
xchg
dec
cs
movsb
mov
cli
pop
idiv
std
xchg
jbe
xlat
loop
xchg
cmp
adc
fnstenv
mov
jbe
iret
or
daa
mov
test
int3
push
mov
adc
test
mov
pop
xor
jae
adc
push
sub
enter
push
xor
negb
xchg
lret
fbstp
shrl
cmp
mov
shll
xor
lea
pop
xchg
mov
sbb
or
cmp
cmp
call
clc
stc
fisttpll
mov
jmp
fwait
cmp
sub
rcrl
addr16
push
push
sbb
mov
cli
and
mov
push
cmp
ja
lock
dec
mov
sbb
adc
test
pop
push
loope
lds
pop
das
cmp
sub
or
add
xchg
ret
pop
fdivs
pusha
repz
sub
not
movsb
bnd
andb
aas
add
add
jmp
call
jp
add
in
sarl
inc
cli
std
lea
or
sti
test
shll
test
inc
incl
outsb
lods
repz
add
fs
je
jp
gs
cmp
sub
cmp
mov
dec
lahf
cmp
sub
jb
xor
xor
lret
sub
xchg
dec
jmp
mov
lcall
xor
test
fiadds
push
mov
pop
jp
pop
xor
push
or
dec
push
scas
sbb
test
mov
das
jnp
ja
aaa
std
sbb
lods
stos
out
adc
xor
jb
sbb
xlat
inc
pop
mov
fwait
mov
mov
push
cld
adc
ja
jne
push
ret
lea
xor
or
add
pop
pushf
jbe
cmpsb
mov
sbb
orl
fs
and
adc
adcl
xor
imul
and
cwtl
repz
mov
es
pop
lock
xrelease
cmp
xchg
and
jle
dec
dec
mov
push
into
shrl
mov
into
sbb
and
aam
movsb
ljmp
scas
dec
loopne
test
add
out
stc
lods
jmp
inc
mov
outsb
cmp
mov
jge
pop
fistl
fistpll
jle
in
mov
pop
xchg
xor
stos
cld
xor
out
in
xchg
sti
lret
in
sbb
fistps
pop
inc
push
mov
das
ret
jecxz
pop
mov
pop
stos
pop
hlt
leave
je
push
add
hlt
scas
or
dec
jb
fidivs
repz
sub
fdiv
pop
lea
ret
lods
cmp
xchg
inc
or
hlt
roll
scas
popf
faddl
push
push
mov
js
jecxz
das
xor
pop
push
addr16
jno
movsl
pop
adc
iret
mov
nop
outsl
push
push
fiadds
push
mov
or
xchg
add
shlb
pop
fstpl
push
stos
add
adc
push
jmp
jg
dec
call
ja
js
push
cmpsb
out
ror
sbb
push
mov
mov
sbb
lcall
push
movsb
arpl
gs
cmp
rcrb
cltd
mov
inc
sbb
fildll
jae
aad
and
fisttpl
negb
mov
dec
in
iret
pop
negl
imul
push
test
flds
jno
popa
ds
out
mov
cmc
insl
dec
stos
flds
int3
jo
addr16
and
dec
hlt
lret
lods
push
sti
add
jbe
int
jae
jp
pop
jle
sbb
fdivl
push
push
pushf
cli
jmp
cli
jnp
cld
stos
jns
nop
int3
cltd
lret
shll
jmp
push
sub
fcmovnbe
loop
or
notb
mov
xlat
cmp
push
dec
lahf
pop
add
in
dec
xchg
stc
and
mov
mov
xor
shlb
fwait
inc
mov
mov
sahf
fistpl
jl
sbb
mov
int
in
dec
ss
fadds
cmp
lea
popf
aad
inc
clc
stos
adc
fisubrl
pushf
xchg
cmp
or
idiv
loopne
jne
mov
stc
inc
xchg
fadds
dec
xchg
ja
jnp
aad
mov
test
insb
rcll
rolb
outsb
xchg
mov
push
dec
in
jns
cwtl
jecxz
out
dec
icebp
int3
mov
sahf
call
jae
sbb
ja
fs
dec
sub
loope
mov
loopne
out
js
shll
js
aaa
enter
cmp
dec
pop
cmc
mov
ret
dec
mov
call
adc
lahf
xor
pop
add
sbb
and
dec
and
in
dec
iret
sub
add
rorl
xor
and
js
popa
xchg
mov
jmp
xchg
push
bound
pop
test
icebp
jne
push
mov
es
xor
sahf
pop
daa
loope
ja
cs
ffreep
sbbb
sbb
cmp
mov
fisttpll
jmp
ficoms
imul
lahf
dec
push
mov
lock
ds
mov
stc
pop
xor
mov
jle
outsb
xor
or
les
ljmpw
ds
sub
mov
mov
xchg
push
push
mov
rol
mov
roll
add
and
out
out
fldenv
mov
mov
shll
loope
dec
mov
idivl
fdivrs
mov
shlb
sub
add
fstpt
inc
add
js
addl
pushf
enter
jb
or
iret
mov
push
sbb
push
lret
and
mov
mov
adc
shrl
iret
xchg
je
push
shll
add
pop
in
imul
pop
pop
lods
jecxz
dec
dec
push
outsb
pop
xchg
sbb
sahf
jb
and
data16
rorl
and
cmpsb
fistps
sbb
jb
pop
mov
push
sbb
sbb
lahf
lods
cmpps
or
inc
and
fstpt
shlb
mov
mov
pop
mov
cmpb
jecxz
add
mov
aad
adc
or
shr
push
popa
insl
sti
dec
mov
iret
out
sarb
iret
sub
addr16
lods
add
mov
mov
sbb
imul
inc
cmpsb
or
popf
xchg
loope
inc
cltd
push
jno
push
mov
call
push
xor
ret
stos
clc
push
shlb
outsl
pop
dec
and
insb
xor
movsb
inc
cltd
push
inc
mull
or
cmpsb
iret
push
jb
lret
or
push
andb
lods
mov
dec
ss
xchg
cwtl
push
sub
mov
sbb
imulb
into
push
aad
jmp
mov
stos
repz
fcoml
and
negb
fbld
pusha
mov
test
cltd
adc
hlt
in
or
xlat
jne
mov
and
cs
xor
pop
sub
and
xor
xchg
xor
dec
mov
push
ljmp
pushf
adc
stos
fs
dec
in
inc
push
lret
fcoms
lret
push
or
mov
inc
mov
cmpsl
lahf
pop
pop
pop
cmc
cmp
pop
leave
xchg
xor
pushf
push
dec
add
mov
sub
mov
mov
add
xchg
pop
xchg
repz
adc
inc
cld
xchg
ljmp
jno
xchg
jmp
pushf
cmp
jl
sub
and
jmp
fmull
add
lods
mov
imul
xchg
pop
mov
push
adc
sub
mov
rcrb
jge
xchg
lret
sub
fwait
insb
dec
outsl
mov
lahf
mov
ja
pop
nop
test
cmp
popf
dec
ljmp
scas
loope
push
fucomp
pop
mov
les
jp
test
xchg
sahf
or
push
pop
std
sub
inc
nop
divl
subb
mov
pop
jmp
clc
mov
cmp
test
adc
bound
fcompl
cmc
or
in
sti
mov
mov
pushf
cld
or
rcrl
pop
push
dec
int3
cmp
cmp
sub
jecxz
lret
mov
and
or
cmp
mov
mov
mov
jbe
sub
aad
jo
sbb
and
shrl
repnz
pop
adcl
arpl
push
or
into
pop
cmp
aaa
or
xor
les
cmp
cli
dec
push
clc
jmp
cwtl
stc
and
mov
push
les
stc
mov
pop
lock
sahf
popa
aas
aas
mov
loope
push
lods
iret
jmp
stc
test
push
adc
ret
mov
mov
shrl
jg
or
in
push
and
les
jb
loop
rclb
mov
push
and
xchg
xor
mov
fwait
mov
sub
cli
fmuls
mov
mov
repz
mov
mov
jecxz
inc
aam
pop
popa
fisttpl
lcall
mov
push
iret
jb
add
jg
xor
push
and
xor
fsubr
inc
cmp
mov
lret
popa
push
sub
iret
insl
inc
mov
lcall
cmp
jns
es
clc
xor
ja
push
pushf
lock
pop
sarl
pop
mov
xchg
mov
mov
cmp
out
xchg
add
stc
scas
lods
arpl
repz
mov
insl
xor
imul
xor
fmull
imul
sbb
sub
mov
stos
pop
aaa
sarb
jle
mov
mov
push
popl
mov
push
lahf
cmpsl
inc
es
jl
push
xchg
gs
xchg
sub
cwtl
aas
mov
fidivl
lea
das
adc
push
imul
jb
call
sbb
std
lahf
mov
repz
push
push
in
in
mov
mov
push
and
orb
cmc
xor
scas
ret
in
mov
repz
rorb
jne
sbb
cli
mov
cmp
iret
ret
push
inc
pop
push
mov
add
sti
mov
ljmp
loope
jnp
mov
push
pop
mov
hlt
pop
in
std
or
dec
or
fwait
insb
xchg
adc
fidivrs
gs
mov
xchg
popa
negl
sbbl
js
enter
fwait
lods
fildll
add
ss
xlat
cltd
mov
aad
add
sub
cmc
daa
fimull
xchg
jmp
inc
arpl
repnz
jo
aad
adcb
ljmp
lcall
inc
mov
jnp
dec
fs
sbb
andb
int
icebp
cmp
pop
enter
fidivrs
mov
push
push
cmpl
fdivl
clc
push
xchg
dec
clc
in
and
test
mov
xor
ret
lcall
mov
ds
jo
jne
push
cmpsl
ds
cltd
into
insb
daa
lea
dec
es
test
scas
xorb
fidivl
shl
sbb
adc
pushf
sub
cwtl
or
push
jl
lods
cld
pop
mov
mov
inc
fbld
aaa
pop
js
shlb
ret
inc
jle
jp
inc
stos
cld
dec
jmp
inc
std
mov
mov
jb
into
dec
repz
cmp
inc
add
mov
xchg
sti
pop
adc
into
xor
mov
push
dec
stos
mov
dec
sahf
outsb
repnz
jo
fdivr
movsl
inc
mov
inc
push
pop
push
add
adc
aaa
cmp
sbb
cltd
xor
lea
lahf
jp
cmp
cltd
push
out
sub
dec
call
pop
xor
adc
insl
mov
lods
mov
addb
gs
xchg
in
mov
mov
pusha
push
and
in
inc
adc
dec
inc
adc
lret
bound
out
mov
dec
mov
lea
pop
pop
or
fnstsw
xchg
sbb
js
jae
xchg
mov
leave
shrl
into
popa
cmpsl
lods
fldenv
in
jb
ret
mov
out
jl
sbb
or
lea
adc
sbb
imul
inc
fisttpl
jno
or
adc
or
lods
jle
and
cmpsb
into
pop
aas
lods
hlt
cltd
mov
add
cmp
pop
pop
cld
in
xchg
hlt
lret
mov
pop
jnp
cmpsl
js
push
xor
in
loop
test
jmp
sbb
pop
inc
arpl
iret
pushl
or
out
mov
rclb
or
fwait
xlat
adc
xchg
andb
cmp
push
das
jmp
xchg
loopne
shl
dec
aaa
sbb
inc
imul
and
rcll
mov
bound
mov
sub
lods
in
sarl
xor
inc
dec
push
repz
adc
in
sahf
push
xchg
sub
xor
jl
inc
int
cmpsl
icebp
fistps
std
xlat
movsb
jnp
push
je
xchg
imul
int
mov
jo
cmp
mov
sbb
or
lock
insl
jae
mov
popf
addr16
push
loop
and
mov
pop
push
incb
mov
adc
or
push
push
xchg
js
imul
subl
xchg
mov
ss
jo
cmp
js
in
out
out
jl
mov
arpl
inc
push
cmc
out
lods
insb
out
adc
jmp
cwtl
cmpsl
or
in
cmp
or
and
mov
lcall
lods
lret
popa
jnp
arpl
sahf
test
es
jnp
push
and
test
or
cmc
out
or
mov
sub
cmp
push
adc
jp
cmpsl
add
pop
popf
jge
mov
dec
loope
dec
cs
jnp
cmp
push
cmp
cmp
cmpsb
imul
pop
movsb
and
scas
cs
sub
cmp
imulb
pop
sub
jg
out
fwait
adc
and
add
and
jmp
and
add
mov
mov
std
jne
push
mov
out
bswap
mov
movsl
pop
jo
popa
add
fwait
mov
sub
retw
sub
or
xor
ja
or
mov
fcompl
push
incb
in
mov
push
fsubp
xchg
ror
je
dec
jmp
bound
dec
jl
and
mov
pop
icebp
jb
in
jns
stc
mov
in
arpl
nop
jbe
or
cmp
aas
add
push
testl
jge
adc
paddb
clc
xchg
stc
pusha
in
sub
mov
ljmp
popa
lcall
sub
or
sbb
out
or
cwtl
add
lret
sbb
jo
mov
mov
mov
pop
xchg
pop
mov
jecxz
xchg
mov
adc
imulb
lds
mov
sbb
in
dec
repz
imul
out
push
push
fnsaves
lcall
sub
cmc
sbb
out
push
pusha
dec
inc
outsl
jge
int3
cmpsb
or
jecxz
push
mov
sub
push
mov
xor
aam
cmc
add
xlat
inc
hlt
fmulp
test
in
and
sub
cmpsl
fists
lidtl
inc
mov
add
nop
push
popf
or
jl
cmp
out
cmpsl
sub
add
jg
pop
loop
xchg
hlt
lods
add
std
in
nop
jg
andl
or
js
and
ss
mov
mov
jno
sbb
inc
nop
push
fdivs
in
adc
sub
xor
pop
dec
sub
mov
jo
imul
lret
in
push
lock
adc
sub
test
out
pop
or
cmp
mov
dec
jnp
mov
xchg
sbb
fwait
mov
mov
into
rcrb
mov
jp
pop
pop
dec
mov
pushf
adc
lock
inc
int3
das
aad
or
mov
pop
imul
jp
push
negb
mov
enter
ficomps
cltd
add
jbe
aas
std
jo
pop
out
and
mov
ret
dec
je
sbb
and
lds
jne,pn
mov
mov
jle
and
fmul
add
clc
mov
aam
sbb
xor
ds
ffree
fildll
inc
test
insb
pop
adc
jle
cld
or
daa
jecxz
push
push
ja
or
jbe
pushf
cmp
dec
int3
jg
pop
cmp
fwait
dec
fsubl
xchg
mov
mov
shlb
test
inc
jbe
xor
jo
add
stos
aaa
xor
mov
fisubrl
aaa
adc
mov
mov
mov
popa
dec
jne
int3
jmp
jb
repz
push
sub
mov
mov
dec
in
and
cltd
test
jb
rcrl
xchg
lcall
lret
scas
mov
aas
cmp
lods
dec
mov
push
mov
and
lahf
jb
xchg
or
mull
lea
movsl
adc
add
push
test
push
bound
in
jbe
jnp
gs
mov
repnz
jg
sub
lcall
rorl
movsb
lods
inc
jge
in
xor
inc
je
mov
or
dec
cs
adc
gs
and
arpl
inc
jp
jge
sub
mov
mov
clc
pop
sti
popf
jno
xor
jl
or
fwait
idivl
mov
xchg
and
mov
ja
lock
or
in
outsb
fld
imul
xchg
fsub
dec
imulb
scas
in
nop
les
ret
xchg
mov
or
adc
lea
in
in
mov
cmpsl
nop
scas
cmp
sbb
sub
inc
pusha
xchg
dec
arpl
push
jne
inc
mov
add
sarl
repz
addr16
jmpw
cli
je
jnp
lods
pop
xchg
call
mov
popa
cmp
leave
in
stc
lahf
push
mov
mov
xchg
sub
push
aas
jecxz
cld
inc
adc
cmpsb
into
mov
and
jne
rcr
shl
scas
lcall
shrb
pushf
stos
outsb
or
fidivrl
jmp
out
cmp
sbb
stc
scas
mull
cmp
cwtl
push
fwait
pop
mov
jl
sbb
and
push
push
lods
sub
pusha
movsl
out
stos
push
sub
pop
sbb
ljmp
inc
mov
or
xor
mov
jb
jb
jmp
jbe
or
enter
xor
rolb
in
xchg
pop
xchg
int
addr16
fdivrl
mov
adc
cld
aad
aad
enter
sahf
ret
mov
xor
int
push
mov
cmp
adc
pushf
jl
cmpsb
sahf
outsb
dec
push
sbb
push
pushf
sarb
out
mov
or
xchg
lcall
dec
lahf
leave
dec
sub
sbb
xor
gs
inc
jnp
imul
outsl
sbb
dec
stc
inc
or
std
std
mov
sbb
jl
scas
jbe
or
mov
add
cmp
in
xor
mov
or
decl
and
iret
add
jecxz
or
sbb
loopne
add
xor
add
mov
out
mov
adc
out
lods
mov
mov
leave
loopne
mov
fwait
jl
out
stos
rolb
or
sub
bound
mov
push
cmp
stc
sbb
sub
jnp
fdivl
pushl
add
gs
dec
or
or
lods
test
sub
sub
dec
sub
imul
fcoml
js
lret
add
mov
jg
test
test
mov
pop
fdivrl
int
int3
sbb
fucomi
add
ret
imul
es
clc
popa
adc
pop
loop
inc
mov
sub
pop
data16
xor
sub
hlt
bnd
pavgw
jge
jno
mov
inc
sub
cmpsb
gs
push
and
mov
rolb
or
push
rclb
dec
mov
pop
pushf
ja
or
xor
mov
sbb
je
repz
xchg
loope
fisubl
addr16
xor
adc
add
jb
cmpsl
or
jmp
scas
xchg
xor
ret
or
inc
mov
or
aad
mov
mov
pop
xchg
jae
fwait
nop
sahf
popa
sub
cmpsb
cmp
imul
and
loop
cwtl
dec
pop
repnz
sub
push
jg
push
inc
push
jecxz
dec
lods
ror
inc
int3
lcall
in
jae
cmp
add
push
jl
imul
shl
push
push
mov
in
cmc
out
push
pop
ret
jno
push
and
dec
sbb
arpl
rolb
lret
les
aad
lods
cwtl
inc
sti
mov
clc
push
call
shll
and
fidivrl
sbb
mov
clc
or
adc
out
lods
imul
jnp
sti
push
add
test
xchg
insl
cld
push
insb
insl
bound
xchg
sar
daa
loopne
cltd
mov
fiadds
ret
sub
pop
mov
sbb
inc
add
aam
and
dec
pop
je
dec
int
dec
inc
popa
jge
sbb
and
cmc
dec
mov
cmc
scas
repnz
dec
daa
scas
adc
or
int3
cmp
dec
loop
test
jmp
xor
xchg
xlat
jge
adc
addb
sbb
push
push
xchg
imulb
les
lock
fcmovnu
inc
in
in
movsb
mov
jb
popf
in
mov
lock
jge
fisttpl
push
test
enter
dec
je
mov
out
add
lods
in
push
mov
dec
cwtl
jne
nop
jnp
jo
ljmp
push
push
add
xchg
sub
call
pop
inc
cmp
icebp
sub
mov
mov
jo
jl
cmp
in
cli
inc
sbb
test
imul
loop
fwait
adc
push
xor
xchg
lods
jmp
mov
mov
ficomps
sti
ds
pop
cld
xchg
idiv
adc
test
lea
cltd
jb
stos
adc
pusha
mov
add
das
jne
cmp
sbb
jge
dec
repnz
outsl
jnp
xor
hlt
cmp
dec
insb
push
dec
push
adc
fs
int
pop
mov
testb
pusha
push
dec
sbb
mov
xchg
mov
and
mov
mov
insb
js
aaa
sqrtps
dec
jns
dec
xchg
inc
stos
cmp
aaa
mov
dec
and
mov
pop
sbb
cmpsl
mov
neg
sbb
out
adcl
lock
inc
adc
nop
enter
jno
adc
mov
xchg
data16
in
xor
push
pop
sbb
xchg
repz
adc
out
sub
adc
inc
mov
imul
sub
adc
add
mov
xchg
fwait
pop
cmp
loope
pop
sub
popa
dec
dec
lahf
inc
popf
or
lods
lods
dec
mov
xchg
inc
cmp
mov
adc
fisubl
inc
in
adc
pushf
jnp
mov
mov
fldcw
aas
imul
xor
pop
push
repnz
inc
cmp
sbb
add
loopne
jno
cmp
mov
je
sbb
adc
and
sahf
ljmp
out
inc
lahf
mov
mov
loopne
xchg
inc
lcall
lods
adc
and
push
push
push
stos
test
and
sahf
inc
fldcw
loop
loope
push
loopne
aaa
das
in
sarb
or
pop
mov
lret
or
shl
xchg
sbb
adcl
cltd
ljmp
pusha
mov
push
das
mov
lods
push
xor
jle
push
push
jae
loop
stos
inc
lods
outsl
xor
jecxz
lret
js
shl
leave
adc
jge
cs
sbb
call
scas
loope
bound
jecxz
inc
stos
xor
inc
dec
and
cltd
lret
push
mov
movsb
test
lcall
xlat
adc
push
jnp
push
scas
pushf
imul
sbb
mov
xchg
lea
andb
mov
xchg
dec
stos
fwait
stc
sub
lock
xchg
add
aad
iret
or
push
dec
push
and
mov
push
push
repz
ret
and
adc
scas
test
cs
arpl
lods
inc
fcoml
mov
iret
sub
das
push
out
out
mov
cld
call
out
mov
out
ret
movsb
sub
movsb
iret
cmp
xchg
jecxz
lahf
mov
and
xchg
xchg
cmpsb
js
xor
xor
dec
dec
xor
andl
test
inc
and
inc
xor
roll
mov
mov
fildl
jbe
movl
xchg
mov
cmpsb
dec
std
in
and
pop
inc
fldt
xchg
test
aad
or
es
fldt
sbb
cli
mov
add
imul
in
pop
or
mov
xchg
loope
test
sarl
out
shll
mov
stos
mov
lret
push
inc
leave
mov
lcall
sub
inc
cwtl
pop
xchg
pushf
sbb
sub
jmp
adc
sub
adc
adc
lds
pushf
stos
pusha
inc
sub
mov
andl
pop
inc
mov
cwtl
nop
in
sbb
in
in
cmpsl
adc
test
jle
lahf
out
inc
jmp
scas
sahf
add
xor
test
lock
sbb
shl
mov
lcall
jmp
xor
mov
sbb
bound
test
or
iret
mov
rolb
push
add
mov
and
sub
mov
mov
mov
insb
fmull
adc
jmp
in
push
mov
jnp
pop
fnstenv
jl
cltd
and
lret
or
mov
in
mov
dec
xchg
mov
in
jo
test
sbb
add
xchg
out
lods
enter
mov
cltd
push
cmpsb
push
fs
cmp
test
cld
addr16
les
jg
sbb
into
sbb
ds
cmp
ret
je
sbb
into
inc
and
mov
fists
imulb
pop
sahf
mov
or
cmp
jae
test
ret
jge
or
cld
lods
sahf
cli
sub
or
inc
or
out
push
icebp
mov
pop
or
sbb
or
ljmp
or
jns
into
cmp
cs
cmp
cli
pop
mov
mov
xchg
adc
pop
dec
mov
and
cmp
insb
jo
fld
sub
and
xbegin
sbb
decb
mov
push
xor
pop
mov
mov
sbb
xchg
scas
leave
sti
jmp
ret
data16
ds
rsqrtps
or
int3
dec
std
and
inc
xor
lahf
and
imul
inc
jno
and
inc
rclb
pusha
fsincos
fists
or
hlt
push
mov
jle
xor
rcr
push
push
mov
stos
adc
ja
test
loope
xchg
jmp
add
shr
fiadds
mov
aas
mov
int3
test
hlt
pop
outsl
inc
repz
add
push
and
pop
cmp
or
cltd
xchg
pop
dec
loop
in
sub
je
mov
xchg
sub
sbb
ret
cmpl
cmp
mov
mov
aam
outsb
dec
cmp
fdivl
jo
push
jb
sbb
mov
arpl
fwait
ss
insl
adc
jp
popf
nop
ljmp
xor
loope
shll
mov
sub
scas
in
shll
pop
cmpsb
mov
mov
inc
inc
mov
lahf
adc
shll
sbbb
in
gs
rcll
pop
mov
push
popa
cmp
push
fldenv
aaa
scas
popf
test
cs
sub
movl
push
sbbb
ja
pop
je
daa
or
les
push
and
and
mov
mov
test
jl
adc
addr16
push
rcrb
sub
arpl
pop
mov
dec
es
es
xchg
mov
popf
and
pop
fsubl
jnp
dec
js
or
testl
cltd
arpl
repz
negb
ljmp
sbb
mov
xor
xchg
test
sbb
pop
push
insb
dec
sub
cmp
mov
outsl
and
add
lods
arpl
and
push
pop
inc
cmpsb
pop
hlt
inc
pop
cmpsb
jmp
push
push
daa
adc
jo
xlat
jecxz
imul
xor
xchg
stos
test
fcomip
mov
mov
std
or
fsubp
addr16
sbb
cmpsl
popf
outsb
loop
mov
into
lret
pop
movsl
add
pop
repz
outsl
pop
jl
sbb
mov
movsb
jne
fnstsw
dec
push
ret
adcl
push
jp
xor
jae
outsb
inc
sub
push
mov
fists
imul
hlt
scas
cli
or
adc
aas
fisubs
dec
jb
outsl
loop
dec
mov
ret
cwtl
jp
adc
xor
inc
pop
mov
dec
rorl
or
cmpsb
dec
testb
adc
sub
mov
xor
and
jnp
lock
dec
cld
and
mov
adc
sti
in
jl,pt
jmp
mov
fdivs
pop
sub
das
repz
pop
xchg
lea
imull
cmp
xor
mov
push
lods
iret
sub
loopew
imul
cwtl
mov
push
push
sbb
xchg
xlat
loopne
add
mov
mov
mov
sti
push
cmpsl
lods
lret
adc
rep
fildl
outsl
daa
sub
movsl
jmp
fisttpll
dec
adc
add
adc
mov
mov
jno
daa
mov
mov
jmp
call
call
push
mov
stc
aam
dec
daa
loope
sub
inc
mov
stc
addl
mov
fcomip
dec
inc
idivl
xor
sbbl
shrb
add
and
scas
rcrl
fld
adc
or
sbb
rcll
fsubrs
jne
cld
je
mov
icebp
dec
xchg
fidivrs
scas
dec
setae
outsl
in
xor
adc
pop
and
mull
out
pusha
mov
repz
sbb
mov
movsl
mov
mov
test
dec
jb
pop
mov
jbe
out
jbe
lret
cmp
aas
fisubrl
pop
push
mov
add
mov
fucomp
enter
shrb
push
xchg
dec
cltd
int3
dec
adc
mov
cmp
pusha
pop
imull
xor
inc
in
sub
nop
inc
xchg
popf
popa
push
ds
sbb
cmpsb
addr16
xor
in
push
add
add
sbb
aas
imul
ja
ljmp
xchg
adc
test
sub
dec
loop
enter
cs
dec
cltd
sarb
js
or
data16
sub
push
add
adc
lds
gs
enter
add
int3
adc
xchg
push
fs
add
cltd
shrl
xchg
std
out
data16
shl
pusha
fiaddl
mov
mov
adc
and
push
mov
test
add
int
stos
mov
loop,pt
mov
iret
and
popa
nop
sbb
dec
fdivrl
sbb
pop
xchg
push
cwtl
jbe
pop
push
inc
cwtl
jmp
mov
pop
repnz
and
pop
push
mov
xchg
sahf
test
clc
add
cmp
sub
lahf
push
adc
xchg
cmp
mov
mov
xor
insb
lret
out
lock
xor
lret
mov
add
cmp
mov
inc
js
xchg
dec
or
fsubrl
xchg
lcall
imull
lods
rcll
dec
pop
stos
inc
mov
mov
scas
dec
dec
loope
push
mov
fdivrl
lds
adc
mov
insl
lea
sub
int
jl
enter
cmpsb
jl
and
mov
jbe
ja
cmp
xor
pop
xchg
push
movb
push
sub
push
shrb
pop
jmp
dec
inc
bound
xlat
push
xchg
cmc
dec
xchg
pop
sbb
push
repz
inc
fsubrs
or
aaa
rcr
in
in
addr16
inc
mov
pop
mov
add
sbb
dec
xor
out
inc
out
sub
jns
jp
fs
lock
rclb
fwait
aas
ja
or
test
popf
cmpl
fdiv
pop
inc
insl
call
cmp
repnz
movsl
mov
jbe
lret
lahf
mov
out
jb
ret
inc
decl
jge
pop
and
pushf
xlat
leave
xchg
mov
mov
sub
in
mov
inc
out
or
or
jo
mov
sbb
fs
mov
cmp
stos
daa
jmp
scas
and
icebp
xor
icebp
mov
and
add
pop
movsl
das
xchg
sbb
in
jbe
xchg
add
sarb
jp
lret
imul
clc
hlt
dec
push
jecxz
popf
mov
mov
mov
das
sarl
adc
cwtl
add
xchg
mov
bound
mov
sarb
pop
inc
mov
add
lea
negl
xchg
das
cmpsl
imul
in
add
sbb
rol
mov
popa
inc
ret
in
cmpsl
mov
push
aas
or
lret
decl
clc
mov
outsb
or
orb
dec
lods
cmpb
std
cmp
and
out
nop
ljmp
jmp
mov
and
sar
test
mov
imul
fcoml
sahf
sub
les
popf
inc
cs
pop
push
cmpsl
mov
fdivrl
mov
lods
aaa
flds
xor
sub
test
movsl
inc
aam
xor
sub
push
cmp
or
jno
dec
mov
add
fucomp
xor
adc
cwtl
xor
sub
mov
adc
clc
hlt
shlb
cmp
or
xchg
dec
call
sub
loop
andb
sbb
andl
push
addr16
fdiv
sbb
rclb
or
push
rcrl
mov
add
dec
push
sbb
push
or
xchg
mov
jecxz
insb
repz
or
rcll
sbb
sahf
scas
or
incb
or
sub
xor
adc
outsl
movsl
jecxz
in
not
dec
cmp
xchg
je
sbb
jnp
cs
bnd
push
xor
lock
in
lahf
test
sti
cmp
movsl
mov
outsl
push
repnz
notb
lds
inc
cli
rorl
in
pop
mov
in
test
lahf
fs
iret
pop
jnp
mov
dec
lfs
pop
mov
cmpsl
sar
sub
icebp
mov
pushf
sbb
mov
stos
lret
xor
nop
jns
jl
cmpsl
loope
jle
sbb
cs
or
add
push
inc
and
test
nop
adc
fs
cmp
pop
dec
scas
fwait
mov
sbb
nop
jns,pn
lahf
ret
cmpsb
mov
std
sbb
insl
xchg
hlt
fsubl
aaa
or
lret
xchg
sahf
push
mov
xor
imul
hlt
cltd
lcall
mov
sti
pop
pushf
pop
pop
sbb
jbe
xlat
and
lret
pop
push
and
test
or
out
in
lret
arpl
xchg
daa
jg
jecxz
ret
ds
jle
sbbl
divl
push
inc
clc
pop
pop
push
sub
mov
idivl
dec
pop
and
imul
and
sbb
loop
cmp
gs
nop
iret
fs
repz
scas
cmp
cli
scas
sbb
lds
jbe
pop
leave
fwait
adc
sti
mov
fnstenv
test
into
adc
data16
xor
cmp
js
xchg
jnp
ret
ret
jg
out
jl
inc
addr16
imul
ret
out
fsubr
adc
sti
or
fistpl
jae
and
test
andl
pusha
sub
adc
es
test
cld
rclb
push
mov
cmp
jge
out
add
outsb
sbb
mov
lods
notl
mov
popf
dec
insb
rorl
addl
sbb
inc
dec
mov
fdivl
xchg
xchg
cld
pop
add
xchg
lea
push
pusha
dec
push
fadds
mov
scas
add
leave
xlat
sbb
inc
out
stos
call
xchg
jecxz
cmpsb
clc
xchg
fstpl
inc
cmpsb
pop
pop
lahf
pop
or
test
rcll
adc
mov
vunpcklpd
pushf
cmc
adc
cmp
rclb
loop
add
arpl
in
sarb
aam
scas
jecxz
fisttps
xchg
sarb
mov
lods
add
pop
jge
mov
sbbl
mov
dec
sti
popf
or
addl
cmc
outsl
mov
int3
ret
cmpsb
jae
push
pop
fldl
sub
daa
pop
ja
lcall
push
bound
lret
dec
mov
or
test
hlt
or
lds
les
or
and
shll
in
stos
sbb
jmp
mov
je
daa
repnz
add
sbb
inc
stos
insb
sub
inc
sbb
push
pushf
xor
scas
or
and
mov
add
pop
mov
cld
repz
int3
jns
and
in
mov
pop
fnstsw
cmpsl
cmp
insb
sti
and
ja
rorl
aas
stc
xchg
mov
sbb
into
cwtl
scas
push
xchg
mov
mov
pop
push
das
outsb
cmp
or
push
inc
xchg
mov
daa
dec
or
sub
insb
fildll
inc
aaa
ss
fwait
sub
jmp
ret
push
push
fnstcw
cmc
add
loop
gs
cli
es
pop
cmpsb
dec
xor
notl
aad
jge
aaa
fldt
cld
movsl
xchg
push
pop
pop
sbb
mov
dec
adc
cmp
in
cmp
add
push
jne
rcl
ja
popa
sbb
test
sub
adc
xchg
cltd
imul
mov
inc
and
pop
mov
stos
cmpsb
sub
push
out
mov
mov
movsb
fisubs
pop
rcl
xchg
xor
xchg
pop
and
es
lods
push
mov
rcll
movsl
jg
lock
arpl
cld
push
int
fsubrp
xchg
and
dec
ret
push
test
sbb
lcall
sbb
jbe
subl
fstp
lahf
jno
fildl
gs
clc
jle
xor
xchg
jnp
fidivl
jge
dec
sbbb
insb
shr
sar
je
mov
xor
scas
mov
xchg
mov
lret
mov
ret
aad
mov
cmpsb
or
jmp
imul
ret
add
inc
or
cmp
jl
les
pop
mov
insb
push
scas
mov
push
movsl
enter
pop
and
or
push
cmpsb
add
xchg
lods
adc
mov
das
and
cmc
push
lods
stc
pushf
adc
push
pop
mov
divl
dec
call
sub
rolb
adc
mov
lock
mov
lcall
repnz
dec
mov
sub
push
inc
dec
dec
in
inc
cmc
add
imul
jnp
adc
jbe
xor
xchg
lock
cmc
mov
adc
nop
nopl
in
andl
or
xchg
imulb
push
xchg
ret
xchg
and
jae
mov
into
cli
cmpsb
or
cmpsl
cmc
gs
rorl
and
dec
stc
push
ja
lahf
sub
loope
test
test
cmp
or
out
adc
xchg
xchg
add
and
mov
xlat
fstpt
and
mov
loope
sbb
jb
movsl
adc
add
int3
fdivrs
inc
lret
sub
add
push
jp
push
and
test
push
cld
mov
inc
jg
sub
pop
xchg
outsl
cmp
add
pop
mov
dec
out
in
es
hlt
test
inc
shrl
mov
ljmp
add
mov
dec
cs
setb
fcomip
test
sti
add
test
std
jae
arpl
jmp
pop
mov
fidivrl
cli
pushf
ds
fmull
sbb
pop
cmp
cmpl
push
leave
mov
dec
ficoms
scas
mov
neg
out
arpl
sbb
out
xor
jg
jo
jl
loope
icebp
and
cmp
push
test
sbb
jb
xor
cmpsl
mov
aam
lods
loop
push
lcall
cld
push
push
loope
inc
cltd
jmp
ljmp
dec
repz
int3
mov
pusha
movsl
lods
mov
lret
in
or
sbb
sbb
aam
inc
xchg
popa
lods
mov
cmp
std
jnp
add
jne
mov
jne
add
mov
xchg
into
add
in
xchg
jbe
push
arpl
enter
xchg
mov
xchg
mov
lret
and
scas
test
xchg
inc
lods
push
divl
sbb
or
adc
jl
or
outsl
adc
mov
fldt
push
adcl
and
out
mov
fbld
stos
adc
mov
sbb
into
xchg
xor
push
xor
negb
cmp
push
scas
mov
ss
add
pop
mov
jle
sub
xchg
in
push
mov
pop
dec
pop
jg
jg
daa
insl
aaa
add
mov
jle
mov
xorb
rorl
lock
daa
gs
mov
orb
adc
mov
push
cmpsl
in
mov
xrelease
push
pop
add
cmpsb
xor
je
rcrb
cli
les
mov
push
repnz
stos
inc
cltd
mov
divl
xchg
and
mov
inc
imul
test
jb
mov
mov
rcll
das
bound
inc
push
xchg
popf
jmp
xorl
fdiv
in
pop
mov
pop
outsb
loopne
sti
xchg
push
cs
push
xor
das
mov
insb
sub
enter
fisttpl
lea
scas
jp
push
mov
ljmp
ficompl
xchg
jae
lahf
mov
test
in
pop
stc
les
lods
jecxz
add
jns
pushf
popa
sbb
hlt
xcrypt-cbc
cmpsl
xchg
dec
cmp
sbb
aad
ds
add
subl
push
mov
addr16
ficoms
inc
inc
adc
cltd
jne
xor
mov
ret
mov
js
sbb
xchg
cltd
int
in
neg
into
in
cmp
push
ficoms
lret
lds
mov
subb
sbb
sbb
fldcw
repz
aam
mov
int3
fsubl
dec
dec
ret
add
lret
cmpsl
xchg
cmp
addb
pop
stc
pop
xor
lods
fdivl
int
fld
es
xchg
dec
loop
call
cmp
jne
scas
pop
stc
dec
cmp
inc
jle
jbe
jnp
inc
inc
and
sarw
fbstp
push
dec
in
lret
and
dec
pop
fsubp
sar
pop
shrl
mov
jmp
adc
xchg
dec
jl
rcrb
jnp
incl
stos
les
fisttpll
mov
xor
or
add
lods
cwtl
sti
push
fistl
pop
xchg
dec
cmp
adc
sub
mov
jl
push
mov
notb
ja
jbe
inc
push
sbb
mov
xorl
mull
adc
push
sbb
pop
iret
lret
int
adc
js
movsl
mov
sbb
mov
adcl
int3
fcmovb
divb
adc
jge
xchg
enter
xor
push
je
jo
test
vfrczsd
scas
adc
xchg
mov
mov
sub
sti
xchg
adc
sbb
add
jg
jo
pusha
pop
sbb
lahf
inc
mov
xlat
mov
xor
stos
sub
or
sbb
cmp
push
cmpsl
xor
enter
out
pop
sbb
inc
mov
xchg
add
jo
fcmove
sbb
leave
mov
cld
cmpl
sbb
and
out
sahf
pushf
inc
cmp
iret
cs
add
les
popf
xor
jb
and
insb
stc
das
int
mov
or
pop
fwait
cmp
xor
ret
aam
pop
fwait
stc
cmc
in
pushf
sti
push
mov
mov
ja
sti
lods
bound
pop
imul
and
sub
mov
out
push
cmc
les
lret
insb
xchg
add
adc
mov
out
aas
and
fisubl
nop
dec
xor
xor
inc
and
mov
gs
orb
pop
push
mov
pop
mov
xor
cmc
mov
sub
dec
xor
aaa
insl
rcrb
dec
adc
inc
xor
sbb
pop
js
cltd
fwait
adc
mov
push
xchg
imul
mov
jne
loop
inc
mov
cmp
sbb
rcrb
sub
pop
shlb
filds
fstl
mov
pop
or
out
inc
mov
mov
sti
cmp
xchg
xorb
aad
or
pushf
add
in
cli
scas
les
cmpsb
adc
pop
xchg
or
or
jae
notb
and
inc
cmc
dec
rcll
xchg
out
icebp
pop
lret
push
mov
hlt
pop
jns
enter
aas
add
mov
pop
mov
sbbb
mov
adc
adc
int3
loope
add
ds
lret
push
adc
insb
pop
out
aas
rorb
daa
add
jb
test
inc
mov
sbb
xchg
jmp
sub
xchg
push
std
ss
dec
xchg
popf
lcall
mov
jle
and
or
in
mov
add
je
lods
adc
mov
push
push
cmp
cli
jae
sub
pusha
cmpsb
outsl
cs
pop
scas
mov
aam
push
add
daa
rorb
lret
dec
lret
scas
inc
jecxz
push
mov
adc
js
stos
test
push
push
frstor
pop
inc
dec
mov
push
inc
dec
cli
pop
repz
inc
es
xchg
stc
sarb
or
dec
mov
mov
sbb
sbbl
sbb
arpl
add
mov
sbb
xchg
in
cs
mov
pop
rcl
push
les
push
inc
sarb
mov
jl
and
push
pop
jne
sub
xchg
fsubs
jbe
pushf
mov
aad
add
test
enter
imul
and
test
outsl
xlat
in
cwtl
out
jo
ret
and
dec
ljmp
xchg
sti
fldt
push
imul
nop
sahf
jae
iret
mov
adc
cmpsl
repz
or
lods
push
test
pop
jb
dec
mov
rcr
sti
xor
fs
xchg
cli
int3
stos
or
es
adcb
mov
inc
repz
xchg
sbb
or
in
fldt
cmp
inc
loopne
mov
dec
xor
push
int
mov
mov
int
dec
push
add
jo
jno
xchg
mov
subl
xchg
jg
lcall
shrb
iret
into
adc
dec
dec
aas
insl
add
sub
xor
cli
sahf
jb
jp
divl
add
movsl
sub
fwait
jmp
lret
push
or
stc
and
jbe
in
cld
adc
das
pushf
fcompl
popa
int
mov
fsubr
movsb
adc
lock
xchg
mov
inc
fcoms
in
jmp
lea
nop
orl
test
pop
icebp
mov
cmpsl
sbb
and
pop
push
push
mov
test
stos
or
inc
scas
fisttpl
jmp
jae
fcomi
mov
dec
sahf
js
mov
mov
add
movsl
push
maxps
xchg
push
inc
bound
sbb
mov
mov
pop
in
cwtl
ret
and
insl
int
cmp
popf
arpl
aaa
shll
adc
xor
cmp
in
es
mov
into
cld
popf
push
and
cltd
inc
mov
mov
sbb
stos
inc
das
es
es
int
adc
jmp
test
xchg
xchg
ds
adc
mov
mov
imul
out
adc
dec
jg
sub
js
shrl
fs
ljmp
aaa
sbb
push
push
or
fidivrs
pop
imul
lret
xor
nop
arpl
pop
in
mov
jne
sbb
xchg
jne
xor
jge
jne,pn
mov
adc
push
imul
cmp
jb
pop
fwait
ss
xchg
jb
lcall
jge
insb
sub
mov
sbb
insb
enter
fs
les
cwtl
gs
mov
xchg
fisubs
sbb
jb
cmp
int3
sti
into
das
int
lahf
aam
and
sahf
jl
cltd
push
jle
nop
push
mov
ds
lcallw
push
and
outsl
pop
mov
repz
test
mulb
rcll
inc
dec
arpl
sahf
cs
clc
pop
mov
bound
sbb
adc
fisubl
jg
adcl
and
popa
loope
lea
rcrb
push
dec
or
les
leave
aad
mov
insl
mov
mov
adc
cmpsb
pop
hlt
outsb
stos
and
dec
out
movsl
lds
xlat
repnz
jns
jbe
aam
neg
dec
jmp
imul
and
lods
movsl
lea
das
mov
push
jne
std
cltd
jl
mov
imul
aad
fwait
sti
pushf
imull
xchg
cmp
std
dec
push
pop
xor
or
jnp,pt
jmp
add
insb
mov
cli
sbb
push
inc
xor
in
push
fsubp
aaa
dec
mov
or
mov
jmp
add
ds
movsb
and
pop
add
jp
jge
push
jecxz
test
jo
inc
dec
movsl
sarl
pop
loopne
jb
fs
bound
sbb
jbe
in
lods
fs
xchg
push
pop
js
pop
movsb
repnz
out
push
ror
iret
int
scas
call
xor
cs
out
inc
xor
clc
rorl
lods
xor
enter
push
push
loope
divl
xor
mov
and
enter
pop
aam
cli
mov
out
cmp
xchg
sub
cld
fnstcw
adcb
xchg
add
xchg
das
pop
sub
push
or
lcall
sub
fidivrs
jl
inc
cld
push
mov
repnz
add
xchg
cmc
push
and
movsb
sbb
mov
jle
pop
into
fyl2xp1
cmpsl
inc
jge
mov
xchg
xchg
lods
xchg
aas
fwait
jecxz
lret
mov
inc
jno
pop
sbb
ret
dec
adc
jl
adc
mov
or
std
jae
rcrl
add
sub
or
out
inc
test
hlt
sahf
push
xor
push
cmp
pop
aas
hlt
bound
rorl
mov
mov
xor
mov
int
in
lret
inc
add
push
add
mov
movsb
sahf
mov
addb
push
mov
xlat
push
arpl
or
inc
imulb
sahf
mov
sub
push
sti
fstl
jecxz
xchg
sbb
inc
hlt
out
push
xor
jne
loope
mov
cmovge
aaa
or
addr16
cmp
jmp
mov
xor
inc
jb
outsl
mov
and
cmp
lods
add
inc
jmp
loope
xor
xor
data16
and
loope
fisttpll
push
cli
into
pop
push
mov
mov
mov
jle
xor
sub
xor
mov
iret
movl
test
push
inc
pusha
xor
push
pop
clc
cmc
dec
add
lods
out
pushf
cmpsb
inc
jnp
push
jg
jmp
mulps
push
push
fbstp
adc
xchg
or
xor
ds
and
je
push
insl
sbb
adc
pop
inc
pop
push
sub
pop
push
jno
xchg
or
pop
arpl
mov
scas
out
push
jbe
xchg
cmp
les
loope
shll
sbb
and
inc
or
mov
jmp
int3
push
stos
hlt
xchg
push
mov
cmpsb
movsb
mov
or
adc
int3
jecxz
jno
xchg
mov
xor
push
out
push
fsub
popf
pusha
jp
addr16
cld
xor
insb
inc
imul
fsts
xor
rorb
rorb
clts
bound
mov
xchg
test
lds
xor
inc
leave
je
pop
lidtl
sahf
add
gs
scas
dec
adc
inc
lcall
push
fistpll
mov
sub
adc
sti
inc
popl
test
xchg
inc
jge
lods
fs
insb
pushf
xchg
sahf
test
sub
cmp
cmp
aam
pop
test
icebp
cld
sbb
push
sbb
jecxz
repz
mov
jnp
imull
sbb
movsl
jno
pop
mov
inc
mov
add
aas
pusha
dec
dec
cmpsl
and
sub
dec
ljmp
aad
cmp
popf
fldcw
and
iret
imulb
jle
cli
int3
imul
pusha
pop
jae
cmpsl
dec
repnz
pop
inc
cltd
pop
and
loopne
push
jb
mulb
mov
push
leave
pop
iret
out
xchg
mov
test
xor
stos
push
push
xchg
rcl
xchg
jb
data16
mov
hlt
and
lcall
mov
loopne
xor
lret
push
mov
mov
add
int3
clc
xchg
cmp
je
mov
push
jp
or
jecxz
sub
jecxz
cltd
pop
and
sbb
and
int3
negl
pop
ret
fcmovne
aad
pusha
pop
pop
push
pop
pop
call
imul
mov
mov
imul
mov
out
pop
push
call
add
jl
mov
pop
insl
inc
cmp
stos
xor
xor
mov
sbb
mov
and
mov
jle
jmp
and
pop
xchg
push
push
fdivl
mov
subl
test
popf
cmp
daa
mov
push
popf
push
cld
out
xchg
sbb
jmp
mov
push
pop
adc
inc
addr16
jmp
sbb
and
jmp
mov
in
fidivrl
mov
cmp
lods
les
cwtl
popa
repnz
pop
pop
jbe
mov
shlb
xchg
mov
xchg
add
jbe
lods
aad
inc
shlb
mov
and
leave
popf
cwtl
xlat
dec
addr16
sub
mov
jbe
imul
or
sub
sub
hlt
sbb
ss
dec
adc
inc
cmp
pop
jp
out
movsl
lock
icebp
inc
jb
sub
std
cmp
and
js
pop
sub
sbb
jg
stc
ja
ror
inc
scas
mov
adc
mov
addr16
stc
sub
jmp
lods
xor
imul
lock
xor
jmp
hlt
push
mov
jo
push
mov
mov
std
fdivrs
inc
or
pop
or
gs
inc
enter
add
ljmp
and
sub
jp
jecxz
mov
add
mov
inc
sbb
mov
cwtl
jbe
sbb
das
fldenv
pop
inc
daa
mov
xlat
shll
dec
aas
and
xorb
jg
sub
or
popf
lds
fs
jge
js
insb
movsb
cmpsb
in
js
aam
lret
ja
bound
pop
jmp
xor
sahf
dec
mov
jnp
jae
out
into
pushf
adc
push
or
add
pop
les
pop
fs
push
in
movsb
sahf
and
sar
cmp
pop
xchg
adc
lock
mov
push
and
inc
dec
mov
or
mov
cmpsl
lret
xlat
adc
popf
stos
mov
sub
outsb
fdivr
add
inc
pop
shrl
mov
mov
or
movb
mov
pop
push
test
mov
cmovle
xchg
and
add
sbb
adc
push
ss
sub
das
shll
dec
mov
sbb
fwait
jnp
out
lcall
arpl
lock
or
outsb
sbb
mov
fsubrl
mov
fnstcw
cmpsl
sub
jne
inc
cmp
jg
sahf
movsl
rcl
mov
and
test
jo
dec
pop
nop
out
arpl
lahf
aaa
bound
or
or
pop
nop
lods
mulb
and
pop
jmp
outsb
adc
cmp
arpl
adc
adc
lods
outsb
inc
inc
sar
outsl
ja
cmp
xor
out
mov
cmp
in
sub
sti
cli
inc
cmp
shll
in
push
lods
lea
loop
xor
stc
mov
mov
data16
adcl
xor
sbb
mov
push
mov
in
cmpsb
pushf
add
call
fbld
leave
das
adc
mov
in
addb
ret
sbb
in
sub
or
fsubr
xor
push
aad
adc
xchg
xor
lret
repz
rorb
xor
stos
rolb
jne
in
mov
jp
xlat
fnstcw
or
lds
pushf
mov
faddl
orl
hlt
test
imul
lods
testb
dec
xlat
aaa
sahf
xor
sub
test
movsb
fadds
shlb
in
adc
pushf
lcall
shrb
add
mov
nop
cmp
aam
and
test
cmp
adc
dec
mov
lret
jae
sahf
jle
mov
popa
repz
lods
jae
popa
inc
repz
jge
xor
dec
mov
push
sbb
jp
neg
pop
mov
pop
mov
xor
bound
jl
stos
jne
fstl
mov
xchg
cs
mov
rcl
inc
sbb
mov
cmp
testb
in
repz
stos
mov
rclb
cwtl
inc
cmc
jae
push
lea
test
xchg
lods
or
or
int
lods
popf
sbb
dec
add
cli
fs
inc
jmp
test
loope
lock
call
sbb
adc
out
xor
insb
pop
mov
cli
mov
mov
inc
cltd
xor
imul
aas
mov
fidivl
sbb
adc
pop
pop
jno
mov
imul
test
sbb
and
popf
jne
les
pop
jecxz
clc
xor
mov
repnz
xchg
imul
xchg
fmuls
insb
out
movsl
add
cmpl
ljmp
lahf
mov
test
aam
inc
jo
popf
sbb
mov
mov
cmp
xchg
shrl
fcoml
xor
adc
fcomi
repnz
pop
test
xchg
cmp
adc
xchg
jne
sarl
popa
sub
ja
fwait
jno
push
lds
pop
xchg
fistl
enter
push
stos
fwait
push
dec
pop
idiv
sbb
ficompl
dec
mov
test
push
sbb
imul
movsb
imul
and
jmp
fbstp
xorl
or
push
xor
test
shlb
pop
lret
jno
add
and
arpl
add
ss
fwait
xor
fs
stos
xchg
fisubrl
or
mov
std
loop
repnz
scas
shlb
mov
decl
mov
jo
frstor
mov
ds
aam
loop
inc
mov
inc
pop
jl
js
push
jecxz
in
iret
and
xchg
cltd
inc
test
int3
mov
jg
push
fisubrl
fmulp
mov
dec
jge
inc
pop
or
sbb
push
cmp
inc
push
xchg
sti
mov
jecxz
cmp
mov
mov
fldt
ss
xor
je
add
dec
insb
gs
jbe
movsb
stos
sub
push
xchg
fisttpl
xorb
hlt
pop
mov
frstor
js
mov
and
sbb
mov
movsb
adc
mov
outsb
pop
jle,pn
inc
xor
jns
push
sti
xchg
inc
mov
imul
pushf
mov
int3
xorb
jp
inc
pusha
cld
adc
sbb
cli
lahf
jns
pop
lahf
mov
sub
dec
gs
or
ficomps
in
mov
sbb
ja
push
fstpl
xchg
mov
roll
cmpsb
add
cmovbe
push
cmpsb
mov
jo
sbb
sub
jmp
les
xchg
lods
rclb
mov
dec
bound
stos
xor
mov
lcall
addr16
xchg
inc
int3
sbb
pop
push
mov
sub
mov
fwait
dec
xor
imul
and
mov
popf
jbe
or
push
ja
outsl
xorb
iret
or
js
sub
rcrb
xchg
test
lcall
popf
pop
or
lock
adc
cmp
mov
sbb
or
pop
xchg
jecxz
ss
test
sub
fwait
aaa
add
dec
gs
lock
mov
mov
dec
add
imull
jbe
pop
out
mov
cwtl
dec
ds
loope
cmp
out
lea
aas
fst
mov
stos
xor
scas
jmp
movsb
leave
xor
sbb
inc
mov
dec
mov
xchg
inc
mov
loop
loop
je
int3
mov
stc
push
adc
mov
push
ss
or
lock
ret
stc
mov
sub
arpl
cltd
pop
dec
or
enter
mov
das
jbe
mov
aad
and
sbb
scas
jecxz
sahf
test
sbb
mov
divl
pushf
ja
jge
stos
mov
xchg
pop
scas
add
into
fdivrl
bound
loop
mov
out
ficoml
lret
xchg
cmpsl
jecxz
cmpsb
js
in
cld
sub
aam
push
add
out
aas
xchg
stos
pop
mov
add
in
mov
out
aam
ret
push
jle
mov
lret
jns
adc
stc
testl
scas
and
movsl
out
fdivr
lret
cmp
add
cmp
out
sbb
ljmp
loop
add
mov
and
fstl
fbld
mov
fidivrl
xlat
sub
sub
fcoms
imul
aas
aaa
adc
push
mov
jmp
mov
out
push
mov
mov
mov
sbb
push
addr16
jne
xchg
mov
dec
cmpsl
pop
dec
xlat
pop
or
stos
jmp
clc
push
ja
iret
add
cmp
and
pop
lods
stc
pop
mov
es
add
ficoms
rolb
jmp
adc
xchg
outsl
xchg
jbe
loopw
jecxz
xchg
adc
insb
pop
mov
push
cmp
pop
repz
repnz
xchg
sbb
rorb
gs
cmp
ret
scas
dec
lock
lret
addr16
idivl
cli
push
mov
stos
add
xlat
xor
or
ss
mov
pop
xor
mov
insl
je
sbb
push
stc
push
jge
nop
xchg
sub
loope
xchg
jbe
mov
push
shll
insl
bound
jecxz
scas
in
movsb
fs
xor
dec
or
fidivrl
push
mov
xchg
lock
fistps
sbb
lret
andl
enter
imul
pop
int3
sub
push
mov
sub
mov
roll
mov
ljmp
outsb
inc
nop
movsb
pushf
or
fsubrl
xchg
pushf
lahf
jae
jo
mov
xchg
pop
lret
push
stc
mov
movsl
pop
pusha
dec
iret
xlat
ret
mov
add
jle
cmp
jl
loop
mov
cmpsl
jbe
mov
test
inc
mov
xor
testl
and
xchg
mov
icebp
pusha
fists
sbb
xchg
push
add
mov
sub
int3
dec
pushf
jmp
arpl
cmc
jnp
pop
pop
or
sbb
pusha
mov
movsl
jge
inc
sbb
lock
xor
inc
jb
popf
fidivl
dec
test
mov
mov
dec
jae
fldt
cmpsb
inc
xor
jle
mov
cmp
mov
lcall
sbb
cmc
fsubrl
sbb
pop
rcll
js
mov
cld
xor
pop
movsl
jmp
pusha
sbb
lret
imul
jno
loop
stos
dec
sbb
xchg
ret
insb
stos
xor
sti
js
mov
mov
push
jns
cwtl
lds
cli
mov
mov
stos
idivb
push
std
out
pop
in
mov
and
mov
test
clc
scas
cmpsb
mov
mov
mov
mov
enter
imul
cli
pusha
push
shlb
and
enter
jecxz
hlt
xor
jmp
loop
shll
sti
mov
cmp
dec
popf
jge
cli
mov
loope
mov
mov
iret
push
test
in
pop
mov
out
int
add
sub
jle
ret
jle
dec
stos
cmp
orl
sub
xchg
test
inc
jae
inc
lods
adc
adc
cmpsl
out
sti
ret
sub
repz
xor
sub
into
push
addr16
inc
div
mov
sbb
cmpb
int
or
iret
imul
xchg
mov
rolb
divb
ljmp
pop
and
push
idiv
push
sarb
mov
xor
xchg
dec
and
xor
outsb
shlb
test
jo
cli
pusha
sbb
outsl
or
cmp
cs
mov
add
mov
add
repz
xchg
jmp
add
iret
mov
insb
enter
push
incb
ljmp
xchg
test
add
mov
mov
push
adc
leave
inc
adc
bound
xchg
jg
fs
sbb
sub
sahf
sub
imul
in
push
fwait
sbb
add
cli
mov
repnz
stos
dec
inc
pop
cmpb
idivb
mov
lods
sti
push
vaddpd
dec
les
nop
cmp
cmp
jnp
sub
xchg
push
scas
jne
jg
ljmp
aas
mov
jns
mov
jb
sarb
dec
call
push
xor
mov
jnp
es
imulb
sub
decl
inc
push
jne
pop
push
adc
xchg
testb
fiadds
gs
dec
push
pusha
push
mov
mov
ss
and
cmc
enter
pushf
out
mov
pusha
fldcw
das
pop
ret
and
rcrl
xor
mov
cmc
pop
sub
mov
mov
mov
test
dec
dec
dec
leave
and
xor
sahf
scas
ljmp
inc
sbb
dec
into
mov
jae
push
push
inc
xor
fisttpll
xor
mov
insb
inc
test
cmp
pop
or
into
addr16
cmp
inc
sbb
push
fisttpl
imul
sub
push
cmc
testl
or
and
ja
xlat
sbb
rorb
out
in
cld
or
aas
and
outsb
push
pop
je
gs
mov
inc
xchg
stos
int
and
ds
mov
inc
ds
inc
imul
clc
insb
lcall
cmp
into
xchg
pop
sti
and
cmp
mov
fwait
cld
push
sub
pop
and
icebp
rcll
mov
add
int3
sbb
pop
imul
cmp
aaa
pop
xchg
dec
xor
xor
std
dec
aas
sub
xchg
lea
fldcw
xchg
loop
cs
push
pusha
stos
cmp
subb
mov
addl
and
mov
loope
sbb
je
loope
subb
scas
out
stos
sub
in
xlat
sub
or
scas
ds
sbb
mov
imul
mov
push
lret
mov
push
add
sub
repz
lds
xchg
cmpsl
sub
movb
cltd
into
enter
inc
xchg
leave
push
xchg
cli
leave
int
negb
adc
and
bound
jno
jnp
ljmp
push
jne
jo
aam
mov
lods
push
xchg
adc
rorl
push
fs
mov
sub
imul
cmp
mov
ljmp
adc
xchg
std
dec
and
mov
or
pushf
mov
and
ljmp
sub
xchg
pop
fwait
mov
movsl
scas
pop
add
call
xlat
jg
out
and
push
cmp
dec
xrelease
and
sbb
xchg
mov
and
pusha
jno
repz
or
sarb
mov
xlat
insl
shrl
mov
les
enter
ret
sub
pushf
fisttps
cmpl
cmp
jle
addr16
inc
fidivs
aaa
pop
and
push
inc
cmp
dec
xor
ds
lock
adc
sbb
clc
mov
shlb
add
adc
xchg
adc
mov
fisttpl
mov
mov
push
jbe
sahf
mov
jecxz
mov
es
push
movsb
mov
sti
outsl
cld
push
jnp
mull
lds
leave
mov
inc
mov
call
pop
push
clc
stos
push
jmp
sbbb
test
pop
loop
cmp
cs
mov
xchg
push
hlt
xlat
test
adc
nop
fcomps
les
in
xchg
test
cmpsl
rclb
das
shrl
jnp
insl
rol
mov
cmp
and
je
sbb
mov
mov
lock
mov
inc
add
add
xchg
mov
iret
xor
cmp
cmovle
stos
lods
lods
xchg
aaa
mov
mov
adc
jp
push
dec
jmp
aam
fsubrl
ret
xor
daa
lods
cld
push
mov
clc
xchg
mov
or
addl
sbb
insb
cmpl
sbb
les
imul
pop
or
popl
pop
xchg
int
push
loope
fwait
push
dec
loopne
fmuls
xlat
sbb
out
inc
negl
xchg
cs
cmp
push
cmp
pop
lock
aad
cmp
imul
int3
mov
test
mov
push
mov
es
add
inc
jo
xor
stos
test
lods
push
shr
mov
lret
les
mov
faddl
out
push
add
call
mov
pusha
in
mov
outsl
imul
enter
mov
jo
pop
sub
cmp
inc
dec
fistpll
jae
xchg
mov
test
lea
les
xlat
popa
and
cltd
enter
addl
xor
jae
cmp
cld
add
xchg
mov
lcall
lds
inc
adc
cwtl
jbe
and
fcmove
mov
imul
inc
repnz
xchg
sbbl
in
dec
and
inc
mov
mov
fs
xlat
jg
rcl
in
orl
xchg
outsl
enter
out
out
inc
divl
mov
add
mulb
dec
push
mov
out
add
adc
mov
ja
cmp
xor
mov
mov
arpl
pop
gs
mov
ja
sub
mov
mov
mov
clc
testb
mulb
lret
dec
idivl
fwait
lret
gs
in
fsubrs
loopne
add
jecxz
rolb
jb
adc
aas
aaa
call
add
pop
pop
out
bound
sub
outsb
sbb
xchg
lea
inc
inc
rcr
subl
mov
cmc
and
sbb
jb
pop
popf
push
inc
sub
mov
sub
icebp
lcall
out
in
cld
stc
cs
out
mov
cmp
push
lods
push
adc
lea
jp
sbb
data16
adc
sti
push
fldl
aaa
jns
jp
or
popf
sarb
fmulp
stos
xor
stos
push
or
cs
sbbb
push
pop
hlt
xchg
mov
fwait
aad
dec
adc
jle
xlat
cmp
in
inc
xor
pusha
jl
dec
call
sub
xor
lock
ret
call
mov
pop
mov
addr16
push
cld
and
je
int3
repz
xchg
out
jp
cmp
sub
and
idivb
xchg
add
sub
mov
popl
mov
mov
pop
mov
sub
mov
add
ffree
jg
add
iret
fbstp
iret
mov
sbb
fildl
jb
push
repnz
outsb
mov
and
scas
pop
xlat
lods
stos
inc
scas
arpl
xchg
dec
inc
insl
jp
push
mov
sub
test
sti
js
std
outsl
and
push
pop
add
xchg
push
dec
out
out
jmp
addr16
mov
mov
in
daa
imul
push
inc
jle
shrl
shlb
and
mov
jns
clc
ds
jmp
or
dec
leave
pop
fwait
cmp
inc
sti
mov
or
cltd
push
sti
loopne
cmp
xor
pop
ret
or
cmp
add
cwtl
or
out
cld
jne,pt
sbb
imul
lods
xchg
js
mov
mov
add
adc
dec
xchg
mov
and
lret
mov
stos
mov
pop
bound
xchg
out
xor
dec
ss
movsb
jg
pop
xor
popa
mov
data16
jo
jno
mov
ss
or
insl
clc
adc
pop
xchg
add
push
mov
out
pusha
pushf
lret
orl
mov
fcmovu
mov
leave
add
jae
sub
jmp
cmc
rcrb
xor
mov
ja
xor
test
rol
lcall
push
pop
xlat
scas
adc
mov
sub
mov
shrl
push
adc
sub
mov
inc
push
addr16
lods
sub
dec
lods
push
mov
test
fstp
jbe
shlb
or
mov
flds
lahf
stos
pop
stos
ret
pop
cld
inc
mov
mov
outsl
and
cli
dec
add
sub
loope
mov
pop
out
test
push
xor
inc
andl
in
lea
and
test
testb
xchg
jae
add
insb
incl
xlat
cs
fsubrl
bound
mov
xchg
mov
repz
cmp
negb
jg
jl
test
cmp
mov
mov
or
push
mov
add
aad
inc
js
and
push
in
je
fwait
xchg
xchg
stos
push
inc
sahf
pop
mov
loop
lea
dec
or
sub
cmp
push
xchg
or
jne
add
je
nop
mov
push
cmp
pop
call
nop
sti
sbb
imul
hlt
jle
xchg
cmc
mov
flds
add
xor
sbb
aad
fidivl
les
je
jb,pn
pushf
cmpsl
or
scas
mov
lret
ret
or
xor
out
xchg
lds
push
inc
ret
ret
lock
flds
hlt
sub
mov
dec
mov
bound
into
aam
notl
test
cltd
dec
icebp
mov
inc
loopne
fimuls
shr
xchg
dec
push
jae
cltd
jl
jmp
push
dec
push
add
retw
xchg
pop
gs
mov
mov
enter
add
push
xor
adc
rclb
das
je
push
pop
pop
mov
sti
mov
adc
mov
jnp
mov
push
lcall
imul
sbb
or
insb
movsb
loopne
sbb
and
loopne
stos
sbb
or
imul
test
out
mov
or
iret
xchg
int
pusha
mov
mov
dec
push
or
in
mov
subb
movsb
cmpsl
into
cli
in
sar
or
jo
cltd
fwait
push
popa
es
adcl
div
adc
gs
ds
mov
fs
add
sub
orl
adc
lahf
mov
stos
popf
and
sub
mov
or
subb
bound
clc
dec
test
fs
enter
shrl
jge
xor
push
aaa
inc
out
inc
cmp
js
in
std
inc
mov
orb
push
fsts
arpl
jecxz
sub
shlb
scas
aam
push
imul
and
and
add
cltd
scas
cwtl
mov
mov
lds
add
popa
push
cmc
lea
inc
push
xor
mov
jmp
add
mov
dec
sbb
mov
jbe
mov
test
popf
mov
les
xchg
sub
movsl
out
dec
gs
lcall
push
sub
ja
and
sub
sahf
mov
add
mov
cmc
mov
mov
test
pop
or
testl
popf
pop
sbb
incl
pusha
fidivrs
js
and
lds
sbb
cmpsl
pop
xchg
adc
or
gs
movsl
fsubs
xchg
inc
popf
mov
mov
inc
imul
aam
out
xorb
jmp
rclb
xchg
cmp
adc
in
xchg
sub
sti
push
lahf
ljmp
mov
add
xlat
mov
cwtl
push
shr
pop
clc
ljmp
out
fnstenv
mov
pop
xsaves
xchg
sbb
xchg
xchg
sub
test
test
shl
cltd
test
popf
add
mov
jecxz
or
cld
data16
daa
mov
out
mov
fucom
pusha
sahf
repnz
jbe
xchg
js
outsb
mov
mov
sbb
jnp
or
test
out
xchg
jmp
ds
roll
mov
push
in
dec
push
pop
and
mov
test
iret
mov
cmp
jecxz,pn
scas
ret
fsubr
aaa
shll
pop
sub
add
sbb
test
outsb
push
rcr
std
cmpsl
sbb
jle
test
xor
lcall
or
mov
push
mov
stc
cmpsl
and
subl
push
cmc
out
add
jb
sub
adc
mov
xchg
shll
jp
jge
insl
stos
add
imul
xor
adc
ret
jge
push
aad
sub
mov
test
dec
bound
xchg
fistl
dec
clc
mov
popf
test
in
dec
call
leave
xor
pusha
xchg
xchg
cmp
jbe
jg
mov
xor
frndint
sub
cmp
into
xor
sub
push
mov
adc
jge
stc
jae
js
enter
lahf
inc
sbb
int
and
lea
loopne
fwait
cmp
or
scas
mov
sub
dec
jecxz
rcr
int3
xchg
jge
push
pop
sahf
jne
inc
dec
aas
cld
pop
out
mov
nop
ret
mov
mov
inc
mov
push
imul
por
mov
jmp
mov
ss
inc
xor
rol
sbb
lcall
cwtl
mov
cmpsl
stos
in
cmp
jbe
out
lods
sahf
lds
movl
insl
adc
dec
stos
fwait
push
repz
fdivrl
les
cmp
add
adc
mov
jae
in
or
subb
sub
lahf
lcall
scas
lds
inc
adc
add
mov
dec
dec
xchg
out
mov
sbb
mov
out
lds
cmp
aad
push
mov
mov
mov
sbb
pop
rorb
cmc
jae
mov
out
or
fdivs
cmc
arpl
call
mov
xchg
pop
push
cmpb
lret
push
and
stos
stc
pushl
cmpsb
xchg
loopne
xchg
xchg
jmp
jg
xor
scas
in
mov
insb
dec
cwtl
rcrl
cltd
inc
mov
and
jne
popf
dec
pushf
std
pop
xchg
arpl
xchg
jecxz
fwait
dec
mov
sub
pop
sbb
mov
shll
jnp
push
insb
orb
cmp
cmp
call
sub
mov
loope
jne
outsl
push
sarl
int3
jae
inc
and
mov
or
data16
in
scas
adc
shlb
jmp
cmp
sbb
or
jo
in
out
inc
sub
ljmp
aam
inc
adc
and
push
cmpsl
leave
data16
leave
rcpps
int3
push
mov
cmp
int
mov
insw
mov
imul
xchg
or
and
pop
adc
cmp
enter
stos
adc
add
daa
xor
inc
mov
jmp
sbb
movsb
push
xor
loopne
mov
sub
push
outsl
jl
sub
xchg
mov
cmpsl
and
jge
pop
stc
dec
aad
mov
js
std
jnp
lret
hlt
xor
mov
mov
jecxz
aam
les
mov
mov
push
aam
loopne
mov
pusha
inc
es
xchg
push
popf
arpl
pop
pop
pop
jge
repz
pop
mov
add
stc
xchg
dec
mov
out
sahf
verw
adc
pop
ret
xor
dec
out
cmp
pop
mov
cmp
js
dec
inc
ficomps
lods
lret
pop
jp
jno
xorl
addr16
lods
pop
fdivs
cmc
inc
pop
mov
sbb
mov
decl
scas
pop
cmp
inc
stos
add
lret
xor
jbe
cmpsl
daa
cli
sub
sub
cmp
std
jnp
fs
ret
sub
dec
inc
pushf
and
and
imul
or
jp
lods
movsl
mov
xor
dec
into
mov
add
fistpll
xor
pop
pop
pop
pop
cmp
adc
repz
jbe
mov
aas
mov
je
mov
push
cs
cmp
xchg
push
sub
xchg
and
mov
sub
sbb
lods
test
imul
push
sbb
test
mov
adc
mov
lahf
or
insl
jge
jp
loopne
jnp
xchg
out
test
cmp
adc
jb
pop
mov
int3
xchg
insb
xor
or
fneni(8087
popfw
mov
das
movsl
dec
gs
mov
sbb
into
das
push
adc
inc
adc
xlat
fdivrl
sub
fisubl
mov
sub
dec
icebp
hlt
push
enter
mov
sti
mov
stc
popf
sbb
cltd
push
add
ret
mov
scas
dec
xchg
outsb
and
sbb
or
lea
pop
jp
fistl
push
inc
lret
sti
dec
movsb
lahf
xchg
testl
xor
jbe
mov
mov
cmp
pop
or
cmp
push
mov
mov
sti
insl
mov
popl
out
push
inc
cmp
cmp
jmp
mov
fsubrs
loop
mov
les
xchg
addr16
lock
mov
adc
dec
push
sub
rolb
sbb
mov
xlat
inc
in
es
das
lahf
mov
push
dec
push
int3
pop
stos
pusha
leave
shll
xchg
movsl
xchg
daa
cmp
push
adc
ret
aam
sub
ljmp
in
xchg
mov
dec
es
dec
xchg
aaa
add
jae
mov
xor
out
arpl
nop
outsb
xlat
fisubrs
xchg
mov
sub
sbb
add
sbb
ljmp
adc
jnp
jg
xor
fmull
pusha
in
xchg
cs
xchg
push
into
or
and
push
sti
out
outsb
scas
dec
mov
adc
xor
mov
jnp
sahf
in
jl
xor
mov
xchg
xchg
mov
addr16
lea
mov
dec
lret
mov
pop
ret
xchg
jecxz
cmp
cs
cwtl
ret
movsb
mov
mov
xor
push
push
aaa
shll
push
xor
pusha
inc
xor
repz
pop
adcb
mov
cmpsl
popf
stos
das
addb
mov
iret
adc
inc
addr16
lods
rcll
xchg
jae
sbb
push
and
lods
xlat
mov
jns
lret
and
stc
mov
sub
mov
push
inc
inc
push
push
in
ljmp
out
adc
data16
push
mov
or
imul
sub
add
jecxz
and
xor
or
jno
outsl
xor
jnp
pop
aaa
inc
rorb
cmp
mov
cmpsb
and
data16
movsb
sbb
repz
movsb
pop
cwtl
rol
cs
inc
inc
pop
fchs
dec
out
mov
add
xchg
xchg
rcll
lea
mov
rcl
sbb
mov
xchg
sbb
dec
pop
jmp
stos
stos
adc
jle
mov
fldt
sbb
popf
leave
adc
or
negb
push
sbb
nop
xchg
out
dec
jmp
add
sub
mov
out
ss
std
icebp
ffree
into
jl
push
movsl
inc
mull
mov
push
pop
movsb
sub
fisubl
sub
lods
in
jg
fldenv
add
push
sub
in
outsb
add
inc
hlt
movsl
icebp
adc
flds
dec
cs
test
or
arpl
fwait
or
sub
sbb
clc
std
pop
enter
adc
loopne
add
adc
push
arpl
xchg
lret
add
mov
xchg
xchg
push
add
testl
and
jae
aaa
sbb
mov
add
lret
sbb
push
int3
push
or
pop
loopne
lds
les
push
hlt
mov
inc
mov
cmp
mov
enter
cmpsl
mov
les
xchg
scas
cld
inc
movsl
jmp
cmp
adc
sahf
add
cli
mov
hlt
mov
out
and
sbb
push
push
adc
sbb
scas
jl
xchg
dec
shll
sbb
pusha
inc
and
mov
or
out
mov
jne
repz
popa
mov
cltd
cld
imul
jae
inc
mov
and
addr16
xchg
push
fwait
xchg
outsl
mov
jmp
into
repnz
es
mov
push
lods
sub
call
xor
jmp
fwait
aaa
lahf
pop
scas
mov
or
imul
sub
icebp
or
jbe
leave
lea
push
cmc
iret
repnz
and
jg,pt
out
cli
push
mov
imull
add
js
sbb
das
fidivl
fs
lret
sub
outsb
push
add
xchg
add
xor
cmpl
mov
push
int3
lret
push
fiadds
stos
sbb
in
movsl
xor
xor
test
out
orl
add
shlb
pop
ds
jno
sub
out
stos
pop
cmp
dec
pop
push
divb
mov
lods
mov
mov
scas
sub
ja
aam
scas
sbb
mov
jge
xchg
aam
mov
push
sub
mov
into
mov
sbbl
insl
dec
sti
mov
or
clc
push
jo
int3
pop
stos
pop
adc
jbe
inc
ja
gs
in
scas
ja
mov
mov
test
or
or
xchg
cld
rol
lret
cmp
inc
mov
test
aaa
xor
cs
push
jl
cmc
mov
sbb
ret
inc
jns
xchg
jns
cmp
cmp
insb
mov
leave
insb
icebp
push
mov
imul
cmp
pop
mov
mov
jmp
test
xlat
mov
fcompl
in
popf
repz
mov
mov
in
mov
stos
lods
and
sub
pop
dec
iret
jge
je
fisubrs
adc
cmc
cs
xlat
imul
stos
int3
gs
inc
lock
into
test
nop
add
aad
xor
cmp
push
bswap
bsr
or
cld
sub
aam
xor
jle
add
mov
pushf
xlat
dec
jge
mov
xchg
push
mov
lods
adc
push
int
sub
into
xor
dec
sub
das
jmp
and
push
xchg
push
and
and
repnz
shl
andb
sub
dec
inc
sub
sub
inc
xchg
daa
xchg
mov
mov
cmp
lret
jmp
lods
cmc
insb
add
jns
pop
xchg
fdivrl
mov
fbld
inc
jmp
mov
xor
add
jmp
add
pusha
loop
andl
inc
jb
lea
imul
loope
js
mov
inc
pop
imul
int3
pop
pop
out
and
push
mov
in
push
ds
and
ds
out
lahf
bound
lahf
fcmove
test
mov
dec
sti
ret
je
mov
sahf
jmp
or
lea
scas
enter
leave
and
fnsave
mov
cmp
decb
pop
or
rorl
xchg
xchg
and
je
xchg
adc
fildl
idiv
int3
sbb
inc
outsb
popa
cwtl
aas
sub
inc
jl
mov
int3
aaa
or
push
sub
pop
daa
pop
insl
fmul
cmp
fisttpl
inc
xlat
icebp
jl
mov
push
mov
nop
adc
test
int3
adc
mov
pop
std
aam
add
jge
shrl
xor
shll
scas
inc
push
lcall
scas
mov
dec
call
ljmp
out
sbb
cmpl
pop
fwait
jb
mov
jb
aas
es
int
cmpsl
sub
mov
je
xchg
inc
dec
iret
xorb
insl
fwait
ja
pushf
xchg
pop
xchg
and
js
mov
and
scas
dec
dec
mov
and
jb
push
cmp
xchg
dec
push
shrl
or
jb
sub
lret
shrl
cmp
or
push
daa
ljmp
jne
jmp
ja
push
insl
ret
stos
test
test
fsubrp
sbb
xchg
mov
jbe
out
out
inc
sub
cltd
add
stos
pop
and
add
mov
and
mov
jl,pn
daa
fildll
lret
mov
js
xor
xchg
cmp
js
adc
ja
test
mov
repnz
mov
mov
arpl
out
jmp
in
add
fidivl
fadds
push
push
xchg
cld
stos
push
mov
cmc
dec
or
sti
sub
test
push
out
imul
call
sar
das
or
orb
lods
xchg
cmp
and
add
insb
sbb
shlb
nop
xchg
pop
ds
cmpsl
divb
sub
sbb
jp
test
mov
fidivl
popf
xchg
mov
xchg
pop
push
inc
xchg
int
into
pop
cmp
xchg
push
negl
in
inc
mov
jecxz
add
sbb
pop
call
fldl2e
jg
out
loop
imul
fistl
pop
rorb
imul
push
popf
fmull
pusha
aaa
lock
sbb
or
xchg
test
mov
mov
cmp
adc
dec
insb
dec
sub
pop
dec
loop
pop
sbb
mov
in
push
jp
mov
adc
cmp
fldcw
or
inc
xor
xlat
sbb
mov
jmp
popf
xor
imul
xchg
push
fimuls
insl
lock
ret
and
ja
and
push
inc
lods
pop
mov
push
mov
pop
ret
jmp
pop
push
xchg
scas
dec
cmc
ret
mov
insl
and
shlb
mov
cmp
rcrb
test
dec
das
jg
dec
outsb
pusha
xchg
int3
dec
insb
mov
dec
mov
in
add
jecxz
les
fistpl
std
jg
filds
rolb
jge
xor
lcall
js
jle
sub
mov
jmp
fdiv
test
mov
xchg
mov
push
xor
jno
inc
lods
jnp
stos
out
outsb
lahf
ret
insb
inc
sub
mov
lods
pcmpgtw
into
push
dec
add
fisubl
adcl
adc
inc
lahf
ret
fsubs
mov
push
sub
mov
add
movsl
js
imul
lock
sub
addr16
aam
inc
jle
mov
mov
popf
mull
push
and
inc
add
xchg
inc
sub
js
xchg
fnstsw
push
add
dec
popa
les
sar
lahf
aad
lret
xlat
jns
cmp
in
shl
push
and
popf
add
pop
dec
xchg
std
scas
repnz
sbb
shll
in
pop
cmpl
cmc
test
test
sti
dec
loopne
inc
aad
lahf
sbb
imul
lds
hlt
and
shlb
insb
fwait
stos
scas
mov
sub
rcl
hlt
test
jbe
xchg
hlt
adc
mov
or
fmuls
lcall
push
sti
mulps
aad
add
xor
aad
xchg
sbb
test
rorl
in
int
add
jbe
mov
xchg
jle
repnz
outsb
mov
add
das
sub
clc
gs
jge
push
jns
in
imul
xchg
hlt
push
pop
popa
ret
pop
mov
cmpsb
mov
add
loope
xor
xor
cmp
mov
push
jbe
mov
pop
mov
orl
test
daa
xchg
sub
ja
jmp
mov
inc
jle
ja
push
jo
lock
bnd
stos
mov
inc
nop
mov
xchg
mov
enter
cmc
ds
mov
popf
movsl
adc
push
call
and
pop
and
bound
sti
dec
push
daa
stos
adc
sbb
repz
lock
push
imul
shl
sbb
popf
icebp
cmp
lcall
lret
fs
cmpsb
cld
xor
sub
and
ss
add
jb
adcl
xchg
inc
dec
jle
pop
and
cld
in
push
mov
mov
gs
or
and
ret
mov
mov
aam
add
sahf
xchg
cmp
cwtl
fsubs
xor
mov
mov
ror
sahf
pop
ret
cmp
repnz
out
add
addr16
cmp
lcall
xor
lea
cmp
and
rolb
lock
jbe
sbb
out
jo
push
daa
push
gs
inc
pop
cld
or
mov
sbb
mov
push
popa
ja
pop
insl
mov
pop
popa
out
jbe
mov
popa
cwtl
pusha
gs
jno
leave
dec
or
push
cli
xchg
or
mov
push
adc
test
jg
jmp
ss
in
mov
mov
lea
mov
xchg
sbb
rorb
sub
lret
mov
pop
lcall
pop
push
push
or
sub
and
int
pushf
inc
mov
call
insl
ljmp
lea
pop
int
daa
mov
idivb
dec
mov
fstl
fwait
roll
ja
aaa
mov
dec
rorl
pop
lahf
mov
cmpsb
cmp
bound
inc
mov
mov
pushf
inc
push
mov
aam
stos
aad
or
mov
loop
int3
adc
mov
xor
mov
cmc
jne
loopne
dec
add
shl
clc
test
xor
outsb
lds
andl
sti
cs
cs
adc
in
lahf
mov
into
push
icebp
lea
add
mov
pop
push
das
adc
addl
rclb
add
inc
adc
jecxz
pop
inc
push
inc
scas
hlt
mov
add
in
mov
pop
inc
daa
push
testl
in
int
cmp
mov
out
jle
inc
sub
subb
mov
and
pop
inc
stc
adc
mov
or
mov
lcall
and
push
aaa
jnp
or
pop
jnp
js
adc
out
dec
pop
xchg
mov
outsl
jl
jp
lods
test
xchg
jne,pt
pop
inc
cwtl
inc
cmp
add
gs
and
add
and
popf
insb
loope
mov
inc
rcll
sbb
mov
mov
cmp
popl
mov
cmp
push
hlt
mov
pop
inc
cmp
sbb
xlat
int
fsts
ret
jecxz
mov
push
sbb
out
or
dec
mov
repnz
push
jae
xchg
mov
add
xor
mov
movsl
push
push
cli
test
cmp
scas
or
mov
adc
push
in
jmp
popa
add
adcl
arpl
clc
std
cs
inc
test
add
jmp
shrl
pushw
push
cmpsb
and
ret
cli
inc
jmp
idivb
mov
notl
scas
cmp
sub
xchg
pop
mov
je
pop
push
bound
repz
sub
inc
lret
xchg
mov
jne
adc
jbe
mov
jb
imull
dec
out
inc
cltd
pop
jle
add
popf
cmovb
push
dec
shl
or
mov
mov
jne
cmpsl
push
xchg
dec
inc
adc
jae
ret
out
and
sahf
inc
xchg
into
dec
dec
add
clc
arpl
pop
adc
mov
out
call
xchg
sbb
data16
adcb
add
sbb
pop
scas
sbb
sbb
sub
pop
jbe
mov
mov
pop
inc
shlb
mov
xchg
mov
push
leave
cld
pop
inc
dec
loope
out
test
pop
bound
sahf
sbb
adc
mov
sub
outsb
push
repnz
pop
stos
mov
das
adc
ljmp
out
in
mov
adc
fs
mov
adc
lea
xchg
mov
mov
mov
fistpll
call
lcall
insl
lods
or
out
and
pop
out
stc
in
arpl
adc
mov
or
push
mov
and
loop
das
lods
fsub
or
dec
fdiv
add
xchg
sub
jg
pusha
pop
aaa
or
sbb
pop
fbstp
cmp
mov
fwait
in
adc
mov
cmp
add
pop
sub
enter
dec
and
sub
pxor
rorb
jnp
mov
push
mov
sub
push
jnp
add
idiv
mov
mov
loope
mov
mov
mov
test
in
test
ds
xchg
lret
pop
in
push
adc
repnz
sbb
xchg
adc
je
pushw
jmp
xchg
inc
aas
pushf
sti
mov
push
sub
test
sbb
int
nop
icebp
out
mov
ss
mov
cmp
pop
cltd
xchg
push
xor
inc
and
or
push
inc
add
aaa
rclb
add
and
mov
sbb
popf
rcrl
sub
int
jne
stos
hlt
daa
clc
adc
sti
lea
inc
ret
les
inc
and
cmpl
and
mov
add
push
inc
cmp
cld
repnz
cmpl
sub
in
jns
xor
inc
and
sbb
ja
dec
outsb
lods
setno
aaa
outsb
pushf
and
hlt
cwtl
nop
xchg
push
jl
fnstcw
movsl
ds
mov
adc
jb
jb
call
popa
jno
cmp
mov
cmpsl
daa
inc
jecxz
jp
out
mov
xor
cmp
and
enter
adc
stos
xchg
dec
fcom
add
jge
and
adc
push
outsl
ljmp
movsl
arpl
icebp
icebp
loope
push
or
rorl
movsl
jbe
shl
sbb
es
not
imul
sti
and
pop
scas
adc
xchg
cmp
sbb
ret
lahf
push
jle
cwtl
cmp
or
cli
or
inc
fimull
addr16
int
out
jns
aaa
insl
mov
sub
enter
cmpsb
sbb
and
xchg
fiaddl
push
imul
scas
xchg
bound
pop
jle
mov
les
leave
or
jne
fnstsw
lret
push
shlb
dec
jle
int3
sbb
push
shl
and
jle
adc
inc
pop
sub
push
inc
or
aas
push
xor
stc
sbb
mov
in
jae
xor
popa
stos
aam
sub
in
addr16
mov
pop
fisubs
repnz
ja
psubq
jp
xchg
jnp
mov
lock
sbb
xchg
inc
push
pop
fwait
in
fs
inc
es
inc
xor
dec
mov
push
xchg
adc
adc
add
jecxz
in
stos
fisubs
fs
sub
fisttpll
add
push
sub
lahf
dec
loop
icebp
negb
cs
icebp
inc
mov
scas
jbe
nop
adc
or
push
cltd
pop
rolb
sarl
jo
inc
mov
mov
mov
popa
call
push
gs
fstpt
lods
je
cmpb
scas
ja
mov
pause
mov
push
sbb
xor
lahf
jnp
lods
inc
imul
dec
in
xor
fwait
lods
notl
cmp
mov
adc
sub
mov
jle
or
add
ss
pop
fwait
stc
test
or
cmp
movsb
sbb
nop
lret
and
hlt
aad
cmp
pop
je
cmp
xlat
negl
xchg
xchg
mov
orl
aad
or
mov
adc
mov
jl
sub
push
ss
out
pop
add
sub
push
adc
and
mov
xchg
cltd
lock
mov
sbb
out
push
ljmp
rcll
inc
lcall
shll
sub
sub
and
int
and
mov
pushf
sub
pop
jmp
hlt
pop
ljmp
add
mov
pusha
push
pop
ret
lret
mul
cmp
out
mov
ljmp
xor
mov
sbb
leave
cmp
ds
loop
orl
push
bound
lods
jno
cmp
push
push
lcall
loop
mov
rcrb
sbb
out
cmp
xchg
inc
or
jp
xor
imul
mov
add
add
sbb
inc
mov
or
scas
pop
sub
push
cmpsl
nop
std
pop
dec
js
mov
xor
dec
les
test
pusha
jg
inc
mov
lret
hlt
adc
add
mov
sub
inc
fdivl
and
push
cwtl
mov
add
jp
rol
cli
pop
stos
out
dec
and
sub
stos
mov
sbb
jmp
mov
mov
cmp
push
insb
add
push
mov
dec
leave
stc
imul
aaa
and
mov
inc
or
subl
adc
push
sbbb
xlat
dec
pusha
loop
ja
les
mov
pop
divl
lret
mov
and
imul
mov
divb
sub
fmulp
lcall
add
xor
and
pop
xchg
and
jmp
icebp
inc
outsb
insl
jmp
jmp
jns
pop
test
mov
xor
fmulp
pop
lret
sbb
mov
dec
fs
xor
iret
mov
ret
or
shlb
cmp
stc
out
inc
and
mov
mov
stos
fmul
mov
les
int3
mov
scas
sbb
pop
inc
in
mov
imul
inc
jle
inc
aas
inc
push
jae
xchg
lahf
insl
leave
adc
pop
and
sbb
push
jg
push
lock
cmp
push
cld
shll
mov
daa
leave
enter
in
inc
jo
dec
pushf
pop
mov
mov
lret
mov
and
and
sahf
jecxz
movsl
inc
mov
mov
mov
std
push
xor
sbb
fmulp
xor
or
sub
in
inc
loopne
mov
cmpsl
pop
xor
stos
xchg
cmc
and
inc
xlat
repz
call
jle
inc
fstps
in
mov
roll
shll
ja
jge
mov
xchg
sbb
xchg
add
out
scas
rcrl
out
lcall
test
mov
xor
jne
sarb
push
out
and
jle
cmp
adcl
fs
dec
or
aaa
das
lods
sahf
ret
sub
cmp
shll
and
push
and
mov
sbb
outsl
inc
push
out
icebp
sbb
jnp
loopne
int
or
cmpsl
jecxz
out
repnz
les
mov
xchg
jns
mov
call
in
push
xor
pop
imul
mov
mov
fwait
adc
jns
add
mov
xchg
mov
in
or
xor
stc
nop
lret
mov
stos
fidivrs
lods
jns
add
movsl
pop
jae
xchg
sbb
jno
fistl
mov
jb
adc
cs
mov
sbb
push
test
mov
adc
or
cmp
jl
ljmp
jmp
mov
out
adc
pop
add
ss
divl
pop
add
pop
icebp
je
jne
clc
mov
bound
daa
outsb
sbb
lds
jns
in
pop
mov
je
push
ficomps
call
mov
sbbb
ret
in
je
in
cmc
jno
mov
movzbl
or
fildll
imul
pop
jb
sbbl
mov
jecxz
push
fsubrl
cs
test
ret
rclb
push
cmp
inc
cmc
fs
iret
cmp
cwtl
mov
jae
mov
pushf
stos
jo
pop
dec
mov
aad
call
xlat
pop
adc
imul
xor
stos
mov
popa
add
cmp
xor
fsubs
lahf
outsl
push
arpl
and
out
iret
ljmp
shl
adc
lahf
fisubs
aaa
and
fadds
and
push
mov
fmuls
mov
mov
icebp
dec
mov
cmp
xchg
js
fldcw
mov
pop
mov
mov
imul
cmp
push
push
dec
push
xor
jmp
aas
daa
jp
xor
pop
mov
sub
sbb
and
and
sti
mov
fs
jae
in
inc
sar
xchg
jb
es
stc
fstl
cs
out
pop
fildl
and
mov
adc
jmp
out
out
call
in
mov
int3
insl
mov
ds
sub
clc
jno
les
dec
mov
pop
pop
add
jmp
xchg
and
mov
cmp
pop
test
pop
out
lahf
or
and
adc
sub
rcrb
jge
pusha
sub
push
sbb
or
xor
sub
xor
shl
sub
call
int
or
paddusb
push
mov
sbb
rolb
addr16
sub
xor
fisttpll
dec
cmp
ss
fistpl
roll
addr16
testl
jbe
addb
mov
pop
sarl
cmp
pop
sub
pop
ds
mov
scas
xchg
addr16
fldl
scas
in
stc
fwait
cmp
and
shll
in
cld
sub
mov
pop
dec
popf
dec
push
fistpll
dec
call
das
adc
lods
mov
arpl
fwait
pop
iret
lods
in
jnp,pn
mov
sarl
into
mov
mov
xlat
es
mov
adc
aam
dec
das
and
xor
xor
push
add
imull
rorl
divl
icebp
push
out
dec
js
decb
negl
mov
movsb
mov
push
fsubp
xchg
dec
pop
aas
pop
or
cmpsl
jle
or
pop
sbb
out
shrb
mov
mov
sub
sti
xchg
dec
push
mov
not
cmp
jnp
gs
ret
sbb
dec
dec
rclb
stc
loope
jmp
out
cmc
popf
sub
cmp
xchg
aas
aas
mov
test
mov
sub
cmpsb
fs
pusha
idivl
pop
js
pop
je
push
cmp
jmp
or
adc
pop
xchg
iret
xor
mov
add
nop
dec
in
aam
ret
add
leave
pushf
ja
sub
and
inc
shll
outsl
sbb
dec
loopne
mov
jmp
mov
stc
inc
jmp
pop
jecxz
cmp
pop
pop
jp
dec
sub
mov
ds
jno
negb
mov
fwait
push
movsb
adc
jl
aad
and
dec
ljmp
out
ret
arpl
xlat
sti
inc
test
inc
xlat
mov
and
test
push
xchg
jo
addl
or
sub
cmp
mov
sub
xchg
jne
pop
xor
nop
imul
xor
mov
fnstsw
enter
aaa
call
mov
data16
lods
cmp
xor
pushf
xchg
adc
adc
fidivrl
sbb
pop
inc
or
adc
jle
test
hlt
jno
sub
mov
mov
out
push
fnsave
lods
ljmp
outsl
mov
and
out
fistpl
mov
pop
popa
or
add
xlat
jo
pop
std
mov
aas
into
fs
imul
push
jno
lea
daa
call
ffreep
ss
sub
in
outsl
shrl
fcmove
push
dec
mov
sub
sbb
scas
or
or
fsts
fdivrl
xchg
push
std
dec
rorl
xchg
cltd
jb
add
xor
mov
and
jae
ljmp
fstpt
clc
sbb
cltd
mov
sbb
enter
pop
cs
jae
jp
sbb
lods
adc
in
repz
or
cmpsb
dec
pop
test
inc
inc
pop
adcb
cli
lahf
mov
mov
xlat
incb
jle
fadds
out
fisttps
insl
cmp
mov
dec
data16
or
mov
sub
ljmp
sbb
loope
stc
inc
mov
and
mov
sbb
push
inc
daa
lret
subb
stc
in
pop
sarl
push
push
add
es
sub
push
jo
fcmovne
mov
test
xor
push
outsb
mov
xchg
lds
lock
rcrb
inc
push
loopne
cmpsl
pop
lds
test
add
frstor
out
pop
push
add
lds
mov
cmpsl
out
imul
mov
push
xor
iret
fiadds
notb
ljmp
push
dec
pop
repnz
jge
popa
inc
jne
aam
out
andl
data16
pop
stos
enter
mov
mov
enter
and
les
scas
xor
sub
test
add
inc
roll
and
inc
mov
rcl
int3
lret
lret
mov
or
mov
repz
jecxz
arpl
or
pop
xlat
adc
cmpsb
sbb
fnstcw
jns
clc
fdivs
movzbl
cmpsl
dec
loopne
dec
shll
into
xchg
js
sub
fs
xchg
inc
jge
cwtl
dec
gs
fiaddl
imul
enter
inc
mov
jecxz
dec
xchg
pop
and
fldcw
xchg
jmp
ret
mov
pop
push
push
lret
not
sbb
inc
add
mov
sub
repnz
fwait
inc
jecxz
nop
sub
jo
jg
pop
add
stc
cld
fimull
push
cmp
fdivrl
out
lea
pop
pop
jns
jbe
inc
mov
outsl
and
or
jge
and
mov
and
repz
into
into
push
mov
inc
stos
stos
loope
sub
das
sbb
inc
notb
or
mov
test
jge
ja
pop
pop
lret
jecxz
idiv
je
int3
and
mov
adc
fdivrs
xchg
bound
pop
aam
movsb
or
jl
into
test
int
cwtl
sub
repnz
pop
mov
fildll
and
sub
jb
ja
pop
scas
or
cmp
icebp
icebp
inc
mov
enter
mov
adc
xlat
stos
cltd
in
mov
or
mov
sub
insl
cmp
int
pop
xchg
mov
shll
jne
test
frstor
loopne
ds
adc
cwtl
jmp
insb
lahf
ret
pop
aad
dec
add
and
mulb
xor
inc
addr16
dec
shlb
adc
mov
xchg
add
js
outsl
xchg
xor
cmp
push
cmp
gs
mov
mov
sbb
mov
getsec
push
ss
mov
ja
sub
adc
js
push
sub
out
xor
add
leave
sbb
or
or
inc
leave
mov
and
xor
and
leave
or
or
jmp
adc
imul
test
je
pushf
dec
and
in
inc
add
or
xor
shll
inc
loope
mov
repz
leave
or
mov
xor
dec
out
xchg
xchg
addr16
aas
ja
scas
lea
aam
xchg
push
andl
sub
rcrb
push
pop
pop
arpl
and
xchg
repnz
inc
aas
cmp
data16
aam
xlat
push
mov
sub
test
or
in
and
push
jge
mov
stos
test
pop
in
mov
jl
outsb
aad
xor
mov
iret
push
nop
push
imul
rcll
xor
sub
cmp
push
sbb
mov
sbb
es
mov
mov
popa
or
jno
ljmp
sahf
inc
lret
shll
push
inc
jmp
push
test
and
mov
push
sti
call
mov
xchg
data16
sbb
lcall
xorb
fisttps
mov
mov
outsb
fldl
add
or
fs
into
pop
xor
adc
push
mov
inc
cmpsl
push
loope
shrl
push
pop
or
add
aam
xor
es
roll
and
outsb
pop
inc
andl
data16
or
fcmovnu
loopne
mov
shll
lods
hlt
dec
push
jo
pop
js
or
or
arpl
into
xchg
sbb
clc
fsubrl
es
fadds
push
sub
fistl
into
test
cmpsb
inc
xchg
adc
inc
icebp
fwait
jmp
xchg
jl
mov
pop
mov
repnz
dec
push
push
add
adc
repz
dec
ret
sahf
int
mov
ficoms
int
and
lcall
scas
jns
xchg
fstps
mov
pop
out
mov
int3
add
movsl
push
mov
aam
or
mul
and
insb
out
cwtl
adc
jle
sbb
jnp
pop
call
jnp
fcmove
push
pop
or
add
adc
xchg
add
add
movsl
out
clc
mov
mov
cmp
movsb
sub
lret
dec
outsb
xchg
and
subl
test
or
pop
inc
sub
sbb
xor
jnp
in
lock
jb
inc
adc
cmpsl
ret
mov
aas
mov
mov
out
jne
dec
pop
jmp
iret
dec
mov
in
push
orl
fidivs
mov
add
mov
xchg
add
sbb
inc
shrl
imul
xchg
fcomps
sub
dec
fcmove
sub
jne
sbb
mov
outsl
dec
out
and
xchg
cmp
fistpl
push
outsl
lods
dec
pop
repz
xor
fidivs
add
pop
sarb
pop
xor
je
aam
mov
loop
mov
sahf
dec
adc
dec
fwait
outsl
add
pop
pushf
addb
lods
cmc
pop
cmp
and
push
loope
push
js
mov
pusha
sub
dec
sbb
loopne
lret
notb
mov
insl
sub
or
je
lea
stc
int
orl
sub
jne
inc
pop
inc
lret
inc
dec
sbbl
mov
std
loopne,pn
push
push
inc
mov
mov
adc
inc
scas
jle
push
loopne
cmp
rorb
cmpsb
dec
in
and
adc
cld
mov
lock
pop
sbb
bound
ret
and
test
pop
xchg
inc
insl
cmp
enter
popa
scas
sub
sbb
loopne
int
push
fisubrl
lods
pusha
data16
das
sbb
mov
cmpl
aas
pop
test
cmp
dec
and
mov
out
adc
lcall
insb
sbb
dec
sub
sti
dec
movsb
pop
xchg
push
das
stos
and
in
or
aam
fists
cli
movsl
mov
or
popa
stc
jnp
call
imul
cltd
rcrb
xchg
sbb
ret
ljmp
dec
cli
sbb
lods
sub
inc
imul
shl
xor
cli
xchg
mov
mov
xchg
fldt
and
inc
fcomps
lods
or
xchg
and
shrb
jbe
mov
push
or
int3
cwtl
daa
cmpsl
ret
sub
adc
fwait
mov
and
mov
mov
shll
les
imul
jns
stos
xchg
pop
jle
cs
out
out
adcb
sbb
pop
clc
cmp
sbb
outsl
adc
popa
mov
mov
jae
lock
fwait
sub
fwait
shl
popf
ds
xchg
inc
je
stos
jbe
dec
lods
push
icebp
jbe
sbbl
ja
mov
out
movsl
cld
pop
lcall
jp
cmp
lahf
add
inc
test
or
js
nop
loopne
iret
insl
mov
push
pop
subb
daa
test
jae
pop
je
pop
and
dec
push
sub
inc
dec
pop
mov
hlt
ds
es
stos
fwait
in
mov
dec
xchg
sahf
stc
or
in
mov
js
xchg
dec
rclb
push
adc
pop
jb
sbb
and
jo
pop
sbb
addr16
mov
pop
cli
mov
xchg
frstor
dec
dec
mov
fisubs
insb
pop
into
push
sbb
loop
repnz
dec
repnz
adc
lods
test
or
and
fwait
xchg
jge
in
pop
daa
scas
outsl
pop
xchg
xor
xchg
cmpsb
mov
mov
loope
and
sub
mov
addl
test
sarb
sbb
orl
push
pop
dec
xchg
lret
adc
sub
stc
dec
and
ret
adc
sarl
sahf
aad
pop
gs
push
scas
dec
clc
mov
jo
sbb
lods
inc
jge
scas
in
in
inc
aas
scas
cmpsb
jns
or
push
pushf
pop
ss
in
pop
jecxz
lea
addb
jmp
stos
sbb
cmc
filds
xor
jp
fists
push
scas
sub
lods
enter
jbe
fldt
push
push
popa
loope
add
cwtl
ds
lret
inc
add
lret
pop
adc
out
fbld
insb
or
fmuls
sbb
xchg
mov
jno
push
or
push
mov
sub
xchg
icebp
dec
inc
stos
outsl
cli
xchg
call
into
call
pop
shrb
call
mov
mov
ja
mov
insb
adc
push
pusha
jg
filds
movsb
xor
xor
mov
inc
push
sbb
inc
imul
mov
popa
cmp
test
mov
adc
mov
xor
insl
inc
cltd
add
pop
fldl
loopne
sti
popf
push
lcall
inc
cmc
jge
mov
aad
out
lods
xor
pop
or
push
mov
orl
push
notb
sahf
scas
lcall
test
cmpsl
inc
rcll
xchg
xchg
sbb
and
in
fimull
jne
pop
push
pop
popa
lds
or
movntps
int
sub
sbb
mov
jb
imul
stc
cli
pop
leave
add
inc
cmp
popa
mov
adc
pop
sbb
sub
xchg
jo
enter
xor
out
cmp
inc
ret
pop
inc
lret
mov
sbb
mov
aaa
notl
stos
arpl
dec
lock
cltd
ja
rcrl
repz
iret
mov
push
mov
push
xchg
mov
ljmp
sub
div
sbb
inc
sub
add
jl
sub
lods
popa
jne
pop
mov
rcrl
push
fldt
lea
fmul
dec
cltd
mov
or
lahf
shrl
dec
xor
push
xor
or
in
mov
pusha
mov
rclb
out
dec
jmp
cmp
push
jae
or
lea
out
scas
mov
les
jl
out
cld
daa
idivb
cmp
ss
adc
xor
in
jp
mov
xchg
xchg
pop
faddl
in
mov
andb
dec
mov
fidivrl
cmovp
pop
cmp
ljmp
push
xchg
add
int
push
dec
out
push
mov
bound
jmp
add
jp
dec
pusha
icebp
or
lds
cld
cli
popa
sub
push
das
mov
adc
sbb
imul
sti
pusha
cmpsb
fwait
cs
pusha
mov
dec
cmp
scas
repnz
sbb
cli
jae
in
iret
repnz
xlat
push
inc
ds
inc
and
push
lret
jnp
and
popf
fdivl
adc
fsubrs
push
in
pop
cmp
les
xchg
sti
dec
loopne
mov
dec
insl
arpl
cmp
pop
lea
add
repz
fsubrl
loope
xor
aam
dec
fisubrs
add
ljmp
lods
mov
gs
int3
push
jp
push
addl
or
pop
sub
mov
push
outsl
das
mov
xchg
pop
xlat
jge
and
mov
push
nop
cmp
adc
out
mov
cwtl
mov
xchg
pop
mov
mov
imul
mov
fwait
adc
rcr
xor
je
das
inc
pusha
mov
shl
sbb
repz
in
dec
cmp
std
sub
movsb
or
mov
xor
je
fisttps
in
js
jbe
aam
hlt
mov
out
in
mov
inc
jbe
mov
pop
sub
jns
mov
insb
test
loopne
jg
gs
cmp
pop
mov
dec
mov
jnp
xchg
dec
sbb
add
cmpsl
stos
sbb
jp
jecxz
lods
mov
inc
mov
stc
aam
mov
cmpsb
fwait
movsl
mov
sub
loopne
dec
fsubl
cwtl
mov
iret
leave
adc
lods
div
sbb
test
testb
cwtl
mov
push
cmp
cmc
aad
and
in
mov
imul
test
addr16
pop
pop
insb
es
out
mov
lock
rcrb
dec
mov
sahf
jno
imul
lahf
outsb
icebp
cmp
in
pop
loopne
dec
cmc
insl
mov
xchg
in
ds
dec
fs
add
mov
fs
add
mov
add
mov
gs
ficoms
mov
adc
mov
mov
fstl
pop
xchg
push
notl
in
insl
stos
xchg
js
lret
lahf
inc
mov
or
lcall
dec
mov
sub
inc
sbb
pop
add
pop
movsl
mov
push
lret
insl
and
mov
or
or
sub
mov
jo
sub
in
lods
and
outsb
pop
fucomip
outsb
jge
mov
stc
lds
xor
cmc
das
inc
ret
xchg
fldt
pop
mov
loopne
jnp
fsubrs
daa
imul
xor
sbbb
dec
adc
subl
sti
add
and
imul
pop
and
rorl
lock
jns
push
jbe
pop
and
out
dec
xor
sbb
mov
lcall
mov
xor
stos
dec
add
ja
pop
out
sbb
push
daa
out
push
xor
icebp
sbb
fwait
in
cmc
xor
mov
cmpsb
cmpsl
fisubrl
mov
das
push
adc
testl
jae
adc
inc
sbb
out
sub
add
lock
lock
imull
stos
in
cmpsw
js
call
mov
xor
aaa
xor
addr16
hlt
push
pop
shr
inc
jb
jnp
sbb
or
sbb
cmovae
cmp
notb
daa
addr16
mov
lret
icebp
test
push
xchg
sub
popa
push
mov
sub
sbb
daa
mov
rcrl
dec
ss
or
ljmp
fsubs
arpl
pop
ret
das
fwait
out
lods
idivl
shrb
pop
mov
sti
mov
mov
in
mov
lret
ret
push
pusha
add
mov
ljmp
rclb
popa
xchg
inc
push
mov
cmc
inc
adc
int3
lea
negl
add
and
shlb
mov
mov
xor
pop
adc
nop
push
jg
bound
mov
push
add
fcmovbe
inc
jle
xor
aaa
xchg
loopne
dec
pop
sti
mov
jmp
jl
sbb
fwait
sbb
mov
cmp
enter
sahf
fcoms
and
pop
lcall
imul
mov
movsl
movsb
mov
jae
jg
out
in
or
jp
jb
cmp
dec
mov
mov
xor
outsb
out
xchg
sbb
xchg
stc
sahf
ds
cld
call
iret
icebp
mov
push
cmp
fs
xchg
nop
pop
in
bound
mov
bound
mov
ljmp
jae
dec
and
outsl
out
jns
mov
add
mov
mov
lret
mov
inc
cld
adc
jp
andb
ret
push
push
and
mov
and
push
pop
xor
scas
jae
sub
mov
and
loopne
or
addr16
sbb
pop
ret
xchg
sbb
xchg
int3
jnp
mov
mov
ret
lcall
xlat
loopne
add
enter
loop
divl
roll
push
cs
push
cmc
addr16
cli
jo
lret
addr16
arpl
inc
jae
rorl
clc
cmp
outsl
movsb
js
lahf
adc
mov
popl
pusha
hlt
pop
fsubrs
shlb
ror
divl
stos
push
mov
sahf
ljmp
mov
adc
xchg
icebp
fisubl
fidivrl
jnp
in
fs
mov
pushaw
jg
sub
cmp
lret
sub
shl
in
call
inc
inc
test
loope
stc
cli
jbe
jl
je
sbbb
push
sub
adc
sar
mov
mov
push
inc
push
loopne
mov
scas
fldt
stc
pop
loopne
hlt
int3
lcall
arpl
lret
xchg
jns
ret
mov
es
mov
repz
mov
pusha
and
mov
and
and
out
jle
loopne
mov
push
in
sbb
in
ljmp
push
jns
push
lahf
pop
mov
ja
divps
sub
xchg
or
scas
inc
pop
or
xor
mov
nop
mov
jo
jg
cmp
push
xor
xchg
inc
push
es
dec
mov
xor
jo
dec
or
mov
dec
jp
xchg
data16
dec
stos
test
dec
inc
jl
mov
scas
xchg
pop
js
mov
dec
sahf
add
push
sbb
test
cmp
cmp
jecxz
mov
inc
roll
jmp
jnp
jno
out
leave
lahf
jmp
aaa
jge
cmpsl
sub
scas
data16
or
jae
mov
jp
mov
cmc
clc
or
sub
add
stos
out
adc
loopne
dec
jmp
jb
cmc
push
dec
and
pop
enter
mov
cs
bound
push
stc
xor
jp
sbb
enter
clc
mov
test
and
pop
add
int
mov
xor
xchg
sbb
dec
in
push
inc
rorb
xchg
aaa
jb
rorl
add
sub
addr16
insl
xor
test
dec
pop
pop
lods
dec
push
sbb
mov
cld
ficomps
fisttpll
jb
push
repz
or
or
pop
repz
jae
pop
xchg
mov
popa
stos
or
lock
lock
xchg
or
jl
insb
les
inc
add
inc
xor
jle
shlb
pusha
inc
shrb
sti
aam
lcall
js
cwtl
fdivs
mov
lret
sub
mov
cmp
adc
mov
sbb
imul
call
lods
xchg
mov
mov
and
jno
out
call
outsl
and
adc
jae
cs
sbb
dec
ret
push
dec
inc
ja
adc
out
inc
jle
jg
jl
jge
push
aam
int3
push
in
push
mov
xchg
in
adc
je
xchg
or
sahf
js
mov
std
les
enter
inc
je
out
movsl
shlb
in
pop
jbe
loope
repz
arpl
pop
loope
mov
push
dec
movsb
bound
dec
and
jecxz
xchg
push
leave
insl
mov
shr
fcoms
cltd
sub
or
out
pop
dec
fwait
cmc
ret
cmp
iret
sub
and
out
inc
test
pop
cmp
stc
or
pop
cmpsb
scas
lret
daa
push
pop
mov
inc
das
in
jo
ficompl
xorl
movsb
divl
sub
inc
mov
sub
jge
int
add
push
repnz
mov
inc
test
rcll
inc
jecxz
push
stos
cltd
sub
mov
stos
push
mov
add
mov
loope
js
dec
push
aam
and
cmc
fwait
out
adc
loop
and
push
nop
mov
sbb
ror
xor
or
jae
dec
adc
inc
mov
gs
cmpsl
fstp
or
sbb
clc
popa
dec
sub
cmp
mov
dec
je
cmp
lret
xchg
cmpl
cmpsb
add
inc
mov
popl
pop
out
or
mov
push
call
dec
jge
out
or
stos
xchg
push
jae
and
mov
fstenv
inc
xchg
jno
inc
cltd
inc
mov
mov
mov
loopne
out
cld
mov
pop
ja
or
jno
and
xchg
hlt
adc
cs
in
pop
push
adc
push
xor
sub
xor
mov
into
sbb
hlt
neg
popf
in
idivb
mov
mov
adc
daa
push
cld
out
xchg
std
or
in
inc
loop
cmp
xor
ret
ds
pop
ss
cmc
shll
ja
mov
push
outsb
lret
les
pushf
sbb
in
sub
pop
inc
out
lcall
lods
movl
fsubs
pop
je
xchg
jecxz
sbb
sub
test
insb
add
sbb
clc
or
out
dec
pop
aas
rolb
jl
data16
mov
out
movsb
lcall
addl
cmpl
outsl
mov
pop
stc
fistl
rcll
pop
dec
adc
mov
push
adc
mov
imul
jae
ja
push
jns
notl
loope
pop
lret
stos
add
push
and
outsl
fwait
xchg
dec
aaa
test
cli
add
dec
sbb
out
xor
lret
ja
fadds
xor
gs
cwtl
mov
or
popa
push
jno
xlat
and
jg
mov
test
or
leave
les
aam
cld
xchg
or
xor
popl
out
fistl
mov
shr
out
xchg
push
xor
shll
xchg
testl
aaa
mov
cli
cs
push
jmp
int
pop
stos
push
dec
fmulp
mov
sbb
jge
in
inc
push
mov
enter
mov
inc
orb
hlt
fbstp
adc
sahf
inc
inc
sbb
mov
add
repnz
cmp
ljmp
and
jecxz
cmp
jbe
nop
sbbl
out
sub
xchg
cwtl
inc
mov
iret
mov
sbb
in
cltd
ret
aas
or
cli
sub
mov
inc
push
sbb
in
xor
cwtl
filds
outsb
mov
add
xchg
pop
sbb
lods
push
sar
xor
fdivrl
push
std
pop
jecxz
test
leave
repz
mov
cs
cmc
sub
push
inc
out
push
vpand
mov
pop
or
cmp
inc
je
inc
aas
sbb
mov
adc
adc
or
xor
add
js
scas
call
mov
insb
loop
cmpsl
mov
out
and
das
cmp
and
push
sbb
aas
in
negb
push
jg
js
outsb
add
jge
xchg
adcb
or
or
daa
clc
leave
cmp
adc
stos
shll
dec
mov
js
repnz
mov
ja
ss
sar
add
jl
jmp
mov
out
arpl
push
push
mov
in
and
in
mov
sarl
mov
aad
js
and
mov
ja
lods
out
adc
and
mov
adc
stc
out
int
fstpl
push
shll
je,pn
mov
xor
dec
cmp
mov
test
fdivs
jns
or
in
pop
mov
enter
xor
leave
xorb
dec
or
ds
imul
mov
sub
dec
cmp
xchg
test
pop
cmp
data16
lcall
rcll
lds
leave
or
scas
std
aas
stos
ds
jb
dec
fs
rcrl
add
or
std
jae
dec
sbb
mov
sti
dec
insl
arpl
lret
jecxz
mov
stos
call
xchg
mov
push
push
call
push
xor
mov
xlat
lock
hlt
ja
fistl
mov
sbb
ret
mov
das
xor
inc
cmp
pop
subl
mov
inc
pop
adc
addr16
dec
fst
ret
push
jge
pop
pop
aas
mov
cld
pusha
hlt
loope
mov
cmpsb
pop
xor
push
loopne
mov
movsl
add
push
mov
sub
mulb
xchg
jge
ret
pushl
lret
enter
mov
ret
lret
imul
push
cs
in
jecxz
repz
insb
push
jb
mov
cmp
jp
inc
enter
or
and
or
orb
push
in
stos
sub
scas
loop
bound
jp
fcom
mov
test
inc
xchg
mov
xor
aad
imul
mov
sub
add
int
inc
mov
inc
and
fdivrl
sub
dec
mov
repz
lahf
aam
stos
out
sbb
jae
sbbl
fs
pop
or
cmp
and
sti
je
loopne
pop
dec
lea
ljmp
iret
subb
or
dec
enter
pop
rorb
push
dec
jno
mov
and
push
leave
pushf
mov
popf
orb
shrb
sub
out
jle
push
mov
popf
arpl
xlat
mov
xor
and
xchg
movb
and
inc
jne
lea
imul
cld
cmc
repnz
or
repnz
cmpsb
aaa
loop
lods
add
std
add
lcall
pop
add
test
push
adc
mov
pushf
adc
jecxz
xor
xor
jmp
test
cmp
mov
fcmovb
enter
cmp
ja
sti
testb
movsb
jmp
pop
xchg
push
dec
push
fidivrl
lret
ljmp
push
daa
rclb
push
loopne
push
push
insb
push
outsl
lea
inc
xor
lahf
xchg
leave
repnz
pop
test
or
mov
aam
jmp
mov
push
pusha
jle
push
loope
xlat
mov
lods
jge
dec
je
mov
pop
xor
test
in
mov
aad
mov
push
sbb
dec
pop
scas
and
jmp
ss
arpl
inc
adc
jns
mov
aas
inc
scas
pusha
arpl
psubusb
cmp
fsubs
cmp
cs
and
or
cmpsb
mov
xchg
jmp
add
inc
popa
pushf
scas
subb
sbb
jno
mov
hlt
fwait
mov
mov
dec
jae
pushf
or
pop
xlat
rorb
test
and
dec
daa
call
dec
mov
dec
push
pop
int3
and
repnz
xchg
xchg
push
sahf
or
inc
xor
adc
shlb
add
or
add
inc
dec
push
mov
in
xchg
repz
iret
pop
ss
pop
cmpsb
cmpb
push
fcompl
cmpsl
jge
call
lds
fstl
sbb
or
int
adc
add
mov
inc
pushf
xchg
xchg
mov
hlt
cs
clc
and
imul
pushf
in
pop
std
scas
cltd
jae
pop
out
in
adc
imul
inc
imul
mov
push
adc
mov
scas
push
and
arpl
jb
test
jns
es
mov
add
addb
and
sbb
or
lods
sbbb
xchg
cmp
out
lret
insl
xor
lret
mov
je
xor
sbb
dec
std
adc
out
push
sarb
sbb
mov
ret
outsl
stos
ret
dec
pop
insb
outsb
mov
xchg
icebp
lret
movsl
shll
mov
ror
add
aam
sbb
push
xlat
cmp
loop
push
pop
std
stc
mov
outsb
or
jb
xor
movsl
cmp
repz
je
std
mov
out
sub
in
in
pop
cs
pop
jnp
mov
mov
jp
sub
test
les
ss
pop
push
push
sub
sti
pop
sarl
iret
pop
adc
inc
jl
popf
and
testl
sbb
inc
xchg
mov
or
fsubs
cmp
mov
mov
jmp
dec
fcomps
scas
rcrb
jmp
lds
adc
outsl
std
add
imul
pusha
xchg
leave
sbb
xor
pop
dec
cmp
outsl
xlat
sbb
mov
mov
out
mov
jle
out
pop
ja
divl
lcall
shlb
sub
mov
mov
mov
dec
outsl
fdivrp
sti
adc
addr16
mov
je
mov
push
fdiv
test
mov
add
lahf
jmp
sbb
sub
xor
and
xor
and
fcmovnu
mov
cld
lods
inc
fstps
jecxz
mov
dec
cmp
mov
pop
push
es
and
hlt
sub
lret
push
aas
mov
jbe
rcrb
or
pop
sbbl
lcall
mov
sub
scas
cmp
push
rclb
fsubl
sti
mov
insl
les
lods
into
mov
jg
aam
out
or
popf
aaa
cmpsl
mov
jp
jge
loope
loope
sti
loope
xchg
sbb
sbb
pop
out
add
sbb
and
in
aad
pop
pop
adc
jno
icebp
cmp
stos
mov
fucomi
out
scas
movsl
sub
rep
mov
add
sbb
mov
sub
or
mov
imulb
aaa
add
shlb
or
xor
or
in
sbb
push
fisttpll
stos
pop
cltd
push
dec
cmpsb
mov
xor
pusha
pop
roll
ss
aad
imul
nop
push
sub
cmp
ror
mov
test
fwait
push
lret
mov
out
add
push
cmp
add
aas
and
arpl
les
mov
sti
mov
mov
shll
pop
dec
repz
xor
outsb
cmpsl
cmp
insl
jp
rclb
mov
in
and
jl
testb
or
inc
pop
mov
and
jl
jne
hlt
sbb
xor
dec
xchg
daa
jb
adc
sti
xchg
daa
xchg
andb
jne
jle
flds
sbb
enter
testl
das
sbb
aad
pop
xchg
jb
adc
ds
jge
cwtl
call
sbb
fstl
xor
fucomp
les
mov
xor
dec
push
outsl
aaa
xor
add
and
cmp
lock
inc
or
pop
or
cmp
cld
push
add
lods
cld
cmp
dec
xchg
and
mov
mov
repnz
fldt
mov
arpl
push
mov
adc
cs
test
push
ds
inc
push
pop
lods
xor
xchg
test
add
jne
push
dec
clc
imul
add
lea
and
push
imul
loop
cltd
lret
roll
or
mov
lahf
inc
subb
sahf
outsb
add
imul
dec
adc
xchg
aaa
fstps
push
ljmp
inc
les
sti
dec
aad
push
call
jg
or
or
outsb
sub
fildll
js
mov
cmp
mov
mov
repnz
sbb
jb
xchg
fwait
or
inc
mov
sub
xor
mov
jo
pop
js
jne
mov
pop
out
push
sub
cmp
dec
cmp
daa
insl
push
mov
loop
push
xchg
mull
pushl
dec
sbb
gs
arpl
sub
loope
xchg
scas
and
jl
and
cmp
and
repz
jmp
and
push
es
adc
movsb
xchg
repnz
xor
pushf
xchg
or
push
jne
fbstp
jae
mov
inc
fmull
sahf
jmp
pop
push
in
insl
sub
xchg
and
push
jne
mov
in
add
push
arpl
lods
dec
nop
test
loope
xchg
sbb
sbb
mov
xchg
and
push
pushf
and
mov
hlt
sbb
setae
mov
rcrb
dec
aam
sub
pusha
xor
loopne
inc
in
lret
lret
and
xlat
cmp
jo
popf
pop
xchg
jg
int
std
xor
mov
sbb
test
andl
inc
jle
fcomps
sub
and
adc
es
lret
cwtl
outsl
outsl
cs
sub
jmp
ror
data16
cmp
insb
xchg
and
cmc
lods
xchg
test
mov
inc
int3
cmp
mov
jecxz
or
lret
es
call
adc
fs
inc
punpcklwd
sbb
pop
sub
aam
dec
xchg
push
bound
mov
andb
repz
outsl
push
jb
mov
shrl
or
sub
adc
js
cmp
in
inc
daa
scas
call
inc
ja
cmc
pop
xor
addr16
inc
jmp
int3
xchg
mov
mov
inc
insb
mov
cmp
or
stos
cs
inc
xor
adc
xor
insb
enter
adc
imul
dec
cmp
sbbb
cmp
mov
push
fstp
sub
xlat
inc
pop
and
adc
xchg
xchg
mov
mov
pusha
or
scas
int
adc
mov
dec
lret
sbb
pushl
iret
in
pushf
xorl
insb
loope
pop
ss
jbe
cltd
mov
scas
cmpl
aaa
jo
jl
cmpsl
mov
scas
gs
cmpsl
push
lock
or
out
mov
test
cmp
dec
ret
pop
add
mov
inc
jnp
jno
and
data16
sti
hlt
int
shrb
sar
sub
and
add
jo,pn
lds
mov
xor
shrl
lret
lods
ficompl
sbb
dec
js
mov
push
movsl
nop
popl
and
mov
or
shl
shr
es
sbb
xchg
fsubs
or
mov
test
mov
mov
adc
data16
js
add
rcr
cmp
xor
lock
in
push
push
mov
sbb
and
push
shrb
lods
pop
outsl
dec
push
pop
stc
jb
rorb
loopne
insb
filds
sarb
cltd
jp
inc
sbb
inc
cmp
dec
repz
movsl
and
sti
add
test
imul
adc
and
shlb
push
and
lahf
outsb
mov
fsubrl
push
out
or
mov
stc
xchg
cmp
pop
in
lret
test
cli
jo
addr16
jg
cltd
pop
jnp
dec
mov
mov
je
adc
ret
testb
xor
jmp
add
mov
insl
imul
pop
jno
andb
cli
sbb
leave
dec
pushf
mov
sbb
adc
in
dec
sbb
test
in
and
loope
in
xchg
ja
les
repnz
stc
lret
mov
mov
adc
lods
mov
push
xchg
inc
inc
lret
adc
inc
jmp
stc
push
test
lods
xor
push
addr16
lds
inc
repnz
sarl
gs
jp
jmp
adc
jno
push
icebp
push
pushf
inc
push
push
xor
push
popf
pop
mov
test
mov
sub
arpl
psrlq
int
add
orb
int3
outsl
sub
mov
pop
xchg
xor
dec
and
inc
sbb
out
loop
cmp
mov
add
push
xor
push
pop
imul
jno
rcr
test
out
es
scas
fcomi
xor
movsl
lock
mov
and
outsl
mov
aad
and
push
lock
pop
aas
mov
cs
scas
mov
or
jnp
jmp
enter
dec
dec
in
insl
mov
jae
in
inc
loop
les
sarb
stos
imul
int3
pop
lods
jge
jns
add
add
pop
sbb
into
cmp
mov
jb
loopne
xor
aad
lcall
ret
pusha
jo
dec
jno
lahf
orb
jmp
jne
ret
adc
cwtl
aad
jmp
dec
enter
lret
sbb
mov
aad
int
stc
mov
push
cwtl
or
ret
jno
jecxz
mov
mov
icebp
cmpsl
not
xchg
inc
jge
pop
scas
lea
mov
jnp
mov
sbb
mov
addr16
cmpsl
mov
and
in
in
icebp
sbb
mov
xchg
jp
imul
or
sbb
movsl
jno
fmuls
fisubl
repz
and
xchg
insb
fistps
shrl
outsl
cmc
ret
pop
mov
and
dec
pop
or
jmp
out
add
push
std
arpl
inc
or
out
sbbb
xchg
jl
scas
push
pop
sbbl
mov
or
push
psadbw
and
insl
cmp
push
fsts
push
xor
jg
or
add
pop
xchg
lahf
pop
sub
push
test
pop
test
jl
dec
sti
or
cmc
adc
sti
nop
adc
mov
jb
xor
xor
ja
sahf
movsl
imul
xchg
cmc
sbb
pusha
xchg
pushf
push
movsl
jmp
mov
dec
xchg
mov
aam
adc
mov
and
mov
cmpsl
cmpsb
sub
pop
dec
testb
inc
outsl
lock
add
cmp
out
pop
pop
sbb
negl
mov
mov
fcoml
xchg
mov
sub
inc
dec
int3
jmp
xlat
and
adc
out
test
pop
clc
roll
inc
or
inc
leave
mov
imul
pop
jmp
push
lock
adc
sub
call
inc
out
aaa
repz
adc
test
pop
or
add
add
pop
stos
push
mov
rcll
mov
cmp
add
pop
sub
in
rcll
inc
dec
add
mov
or
jecxz,pn
cld
dec
add
dec
dec
loop
aaa
xor
fmuls
sub
pop
std
rorb
or
mov
sbb
mov
iret
nop
outsl
inc
push
sub
add
dec
mov
adc
mov
popf
lods
adc
lahf
dec
lret
fucomi
and
mov
mov
adc
jge
jmp
jnp
idiv
push
pop
mov
push
sub
add
dec
jae
adcl
mov
inc
jmp
mov
or
adc
ss
sbbl
jnp
sahf
arpl
and
cmc
lret
lods
cmpsl
mov
arpl
and
pop
hlt
arpl
pop
pop
ret
xchg
iret
insb
je
mov
gs
in
repz
cmpsb
js
nop
out
fstl
and
daa
leave
sbb
lods
daa
or
jg
das
imul
ret
insb
mov
shrb
mov
out
mov
ss
insl
pop
dec
outsl
xchg
mov
mov
xchg
push
sahf
inc
aam
fwait
fwait
mov
jecxz
or
jge
mov
jmp
loope
mov
stos
in
jae
fs
mov
fmulp
cld
and
dec
out
inc
push
dec
cs
mov
add
push
aad
sbb
inc
sbb
test
insl
add
rcl
out
movsb
scas
mov
adc
in
lods
mov
cwtl
imul
xchg
xchg
punpcklbw
add
inc
cmpsl
mov
into
pop
push
jae
ds
sbb
out
jmp
sub
push
mov
jp
aad
pop
in
fidivrl
repz
pop
jnp
sbb
adc
sub
pop
pop
cmp
ja
mov
pop
inc
jge
cmp
sbb
in
bound
adc
mov
leave
addr16
mov
repnz
outsb
fmulp
jo
mov
nop
add
sbb
inc
xchg
cmp
dec
call
mov
mov
lret
adc
inc
dec
outsb
out
shr
add
lret
push
mov
xor
es
push
dec
lcall
xor
cltd
pop
pop
xor
test
dec
bound
push
xor
and
popa
dec
fists
mov
sub
std
or
jne
pop
ljmp
inc
lcall
mov
addl
cltd
pop
push
push
lret
loop
mov
daa
mov
xchg
repnz
jno
add
aam
mov
vpcmpgtb
je
xchg
ljmp
mov
ja
shrb
add
pop
dec
push
lcall
and
pop
lahf
adc
xlat
adc
ficompl
xchg
pop
push
xchg
cmp
and
iret
leave
mov
mov
cmp
popa
mov
loope
bound
xchg
or
mov
jge
outsb
jp
lods
sbb
push
aam
mov
adc
loopne
int3
movsl
dec
clc
pop
push
inc
and
xor
sub
inc
inc
inc
inc
mov
sbb
das
xchg
lds
sti
movsl
fstpl
in
out
addr16
ss
mov
or
push
mov
xacquire
sbb
or
js
imul
fsubrl
sbb
outsb
iret
push
push
daa
or
in
pop
loop
dec
daa
lods
stos
xchg
or
sub
out
mov
cmpsb
aam
aaa
js
inc
mov
fdivl
and
xchg
lea
ja
movsb
int3
adc
leave
add
sub
cmp
dec
cwtl
adc
push
mov
adc
mov
inc
pop
jmp
add
sbb
test
mov
call
dec
test
pushf
mov
xchg
xor
or
out
mov
roll
xor
dec
imull
mov
insl
pop
sub
pop
lods
xchg
jnp
pusha
push
jp
push
out
mov
movsl
fucomi
fcmovb
filds
push
pusha
jp
shll
int3
push
fistl
imul
mov
call
jle
xor
xor
ret
insb
js
into
les
inc
stc
andb
mov
pop
xchg
sub
xabort
add
adc
lret
push
mov
icebp
test
cli
push
out
pop
loop
ret
jmp
repz
inc
adc
jnp
movsl
mov
and
lods
push
xchg
sbb
bnd
and
inc
jle
pop
pop
xor
cmp
call
jb
aad
inc
mov
lods
cmpsb
sbb
xchg
icebp
stos
sahf
adc
aas
sub
adc
cmp
jge
nop
pusha
sbb
jo
bound
mov
sub
pop
inc
sbb
les
sub
inc
sbb
sbb
sbb
push
dec
bound
in
sti
xorl
xlat
adc
xchg
cmp
push
adc
sub
call
or
out
sub
jecxz
and
cmpb
sbb
sbb
imul
dec
pop
pop
push
imul
hlt
sbbl
inc
mov
mov
mov
and
scas
gs
inc
in
cs
mov
incl
clts
aaa
aam
jns
add
jecxz
jecxz
or
inc
dec
movsb
mov
pop
shr
loop
fwait
mov
push
andl
cli
jbe
subl
pop
enter
or
xor
call
stc
out
lods
jb
xchg
in
dec
push
inc
test
sub
outsb
jmp
test
push
outsb
add
arpl
test
lods
mov
fisubrl
and
push
lods
xchg
adc
fimull
pop
jns
pop
mov
mov
mov
mov
pop
jge
inc
mov
divb
mov
push
mov
add
out
adc
push
mov
fidivs
int3
jns
xor
pop
sub
inc
enter
movsb
xlat
jl
lods
push
out
hlt
stos
fcoms
in
jecxz
pop
out
push
test
dec
clc
ret
pusha
jns
aas
pop
inc
xchg
es
inc
dec
pop
xchg
dec
clc
mov
inc
test
mov
pop
js
xor
or
dec
scas
jmp
mov
scas
mov
dec
xor
into
sub
jmp
mov
loopne
das
inc
sahf
pop
lahf
stc
ss
mov
jae
aam
adc
jecxz
mov
std
cmovbe
xorl
xchg
inc
pusha
and
ss
lahf
xchg
push
int3
pusha
hlt
pop
sbb
xor
lret
enter
lods
mov
mov
pop
sbb
in
push
jo
shlb
popf
in
xchg
imul
cmp
in
add
loopne
cmp
sbb
clc
jge
enter
dec
rcrl
lods
push
and
push
in
sub
fcomi
sbbl
or
into
shl
add
mov
js
jae
popa
pop
cld
dec
inc
movsl
sti
pop
push
mov
lods
xor
mov
xchg
dec
adc
ds
popf
inc
xor
sub
mov
fdivrs
lds
push
mov
in
pop
cmpsb
jle
adc
in
jmp
int3
cmp
in
filds
mov
mov
repnz
add
loop
or
sub
pop
loop
aam
or
stos
mov
in
fbld
pop
notb
sub
int
mov
stc
cwtl
stc
dec
loop
adc
mov
xchg
jecxz
mov
sub
xor
stc
mov
movsb
jb
cmc
xchg
dec
xchg
push
mov
sub
adcl
sbbl
or
push
add
shl
cmp
ret
mov
cltd
jg
test
dec
rcrl
mov
add
scas
iret
xor
add
sub
std
or
jb
hlt
mov
pop
scas
jmp
shlb
xchg
cmpsl
cmpsl
mov
ds
mov
and
push
dec
or
or
mov
and
adc
push
push
sub
fisttps
and
lea
imul
xchg
mov
push
mov
sub
shrl
adc
loop
aas
out
mulb
jo
cmc
lods
pop
into
sbb
repnz
and
das
popa
pushf
mov
jo
and
mov
pusha
outsl
cmp
enter
push
out
ret
adc
push
jecxz
pushf
outsl
mov
popf
push
repz
mov
das
push
mov
xor
js
inc
shll
xor
repnz
out
add
inc
lods
sbb
cltd
jle
stos
fnstcw
dec
cmp
pop
or
pop
or
xchg
hlt
es
or
notl
repnz
lds
dec
lock
in
sti
mov
adc
test
fwait
test
bound
data16
rcrb
pop
insl
fs
adc
jnp
arpl
sbb
jnp
aaa
ja
sub
adc
inc
jne
xor
cmp
inc
inc
out
mov
outsl
int
fistpll
scas
mov
mov
pop
push
fs
inc
push
push
fidivrs
xchg
lret
test
iret
mov
les
test
xchg
ljmp
adc
lods
inc
repz
and
fst
and
mov
lds
test
or
pushf
jb
inc
push
cld
xchg
icebp
hlt
mov
mov
jp
fdivrs
jl
adc
push
outsl
mov
cltd
insl
std
shr
add
mov
xchg
pop
mov
cltd
push
insb
mov
and
inc
lds
mov
or
adc
sub
scas
fincstp
clc
ljmp
test
dec
inc
mov
sub
jle
inc
popa
inc
push
mov
sahf
ds
scas
and
sub
loope
sub
int3
outsb
lahf
aad
inc
sbb
push
icebp
aad
xlat
ret
je
adc
loop
js
arpl
mov
movsb
dec
adc
xchg
jp
out
mov
pop
add
test
and
jge
pushf
pop
shr
or
cmp
inc
movsb
pop
in
aas
jle
add
out
jecxz
gs
arpl
push
movsl
pop
mov
add
in
mov
aad
lahf
jb
inc
test
test
push
inc
and
enter
leave
ficompl
add
lea
jle
lds
and
sbb
outsb
xor
jae
gs
xchg
popf
sub
or
inc
dec
lods
push
iret
mov
popf
mov
fs
push
and
xor
inc
pop
pop
gs
insl
das
shrl
out
cmp
je
mov
nop
cmp
xchg
dec
pop
gs
popa
push
inc
mov
jle
into
inc
pop
jl
cmpsl
insl
scas
sub
cmp
icebp
xchg
cltd
dec
sub
das
icebp
dec
xchg
clc
adc
loop
scas
inc
sub
dec
aam
pop
mov
jmp
int3
cmp
or
shl
dec
ret
call
push
jmp
mov
dec
pop
xchg
fistpl
or
adc
ljmp
lret
mov
sbb
subb
inc
clc
inc
in
mov
mov
xchg
or
leave
add
sbb
jge
cmp
or
jae
rcr
mov
cmovg
hlt
mov
or
int3
data16
fwait
aas
in
mov
imul
jl
xchg
movsb
inc
cmp
lods
lock
lret
push
pop
sahf
pop
int3
adc
xchg
fnstsw
mov
movsl
cmp
idivl
sub
pop
hlt
loopne
dec
xchg
pop
cmp
mov
aaa
test
adc
ljmp
ds
xchg
xor
mov
push
adc
xorl
test
scas
das
pop
mov
out
ljmp
and
rcll
mov
sub
cmc
pushf
imull
inc
cld
xchg
jo
insb
or
jmp
je
mov
sub
add
daa
xchg
dec
je
mov
sahf
xchg
out
jo
in
aaa
leave
out
sub
movsb
jp
loopne
lds
pop
add
mov
stos
xor
dec
and
aam
jb
mov
lods
dec
into
ret
in
imul
aaa
mov
and
jmp
jbe
inc
dec
xchg
push
mov
pop
and
inc
scas
iret
jge
xchg
jl
lods
inc
cwtl
rcll
test
and
pop
out
xchg
leave
test
adc
xor
cltd
out
mov
rolb
lret
insl
push
cld
out
push
imul
adc
inc
in
fsubr
mov
mov
lods
fidivl
js
push
pushf
mov
stc
je
stos
cwtl
and
cmp
sti
push
xchg
je
push
inc
push
sarb
lcall
jg
and
push
cmp
xchg
mov
inc
dec
into
and
mov
mov
mov
enter
inc
jb
add
push
sarb
sub
pop
lock
test
clc
stos
xchg
mov
int
mov
and
xor
nop
push
cli
lahf
pop
mov
ljmp
rorb
and
cmp
xchg
inc
cmpsb
call
aaa
add
add
inc
repz
sarb
daa
lods
pop
fs
add
pusha
cmp
sub
mov
insb
dec
outsl
pop
fcomps
pop
sbb
fidivrl
or
iret
add
cmp
daa
out
scas
push
push
subl
mov
arpl
mov
in
inc
mov
jne
fsubrl
push
mov
fnstenv
rclb
pushf
lcall
cwtl
or
mov
movsb
mov
enter
out
insb
test
in
sub
xchg
mov
or
pop
push
xor
cmpsb
xchg
xorl
adc
xchg
rol
lods
sub
lods
cmp
sahf
scas
push
jo
into
movsl
mov
inc
das
bound
dec
add
loope
pusha
pop
sti
inc
jl
int3
fisttpl
mov
arpl
inc
jmp
cmp
movsl
add
pop
loop
sti
shll
lret
inc
or
call
sbb
loop
cwtl
lock
das
jecxz
ja
mov
inc
sbb
or
clc
shrl
ret
divb
test
inc
gs
icebp
sub
xor
or
ficomps
push
lcall
mov
imul
sbb
xor
sub
lret
leave
xor
sub
jns
mov
mov
mov
jae
imul
loope
push
fwait
es
sbb
aaa
mov
jne
std
leave
lods
inc
dec
cmpsl
call
sub
pop
pop
movsl
aam
or
out
inc
test
ss
dec
jo
pushf
or
aam
xchg
adc
pop
dec
sbb
mull
sub
push
bndstx
cld
sbb
mov
lahf
aaa
push
test
pop
mov
mov
mov
sbb
jecxz
inc
dec
in
mov
xor
cmp
sar
jb
out
out
mov
dec
sub
test
sub
adc
jmp
adc
cmp
js
xor
ss
sti
mov
xchg
mov
add
xor
popa
mov
mov
ficoms
repz
lods
addr16
mov
dec
dec
rcrl
les
xor
mov
inc
mov
inc
pop
jle
push
cmp
mov
cs
cltd
out
cli
dec
lea
aam
cmp
fsubl
sbb
gs
cmp
inc
mov
pop
ret
fisttpll
into
jmp
inc
fwait
cmp
mov
mov
out
in
or
iret
xchg
xchg
in
mov
mov
repnz
loopne
mov
cmp
and
jae
into
mov
mov
outsl
lea
fisttpll
lds
daa
jecxz
lret
lret
fadds
jecxz
pop
mov
fs
xorl
hlt
imul
xor
call
or
out
inc
mov
adc
mov
dec
dec
mov
arpl
movsb
ror
fistpll
jg
inc
stos
popa
push
xchg
fdivp
dec
inc
stos
mov
add
add
cmp
mov
cwtl
imul
cmp
dec
gs
stc
push
pop
dec
xchg
xchg
fcomi
jge
cmpsl
out
ds
ret
jl
mov
sbb
iret
pusha
mov
int
das
xor
push
icebp
test
inc
xchg
lea
pop
mov
or
lock
mov
cs
aad
add
cmp
inc
xchg
pop
add
dec
sub
dec
mov
test
in
leave
dec
jge
dec
test
or
andl
shrb
mov
pop
pushf
test
fdivrl
pop
push
jp
or
shl
inc
sbb
mov
sub
inc
into
repz
xlat
mov
inc
or
mov
inc
out
pop
jp
push
or
repz
mov
aad
scas
fwait
pop
loopne
mov
add
neg
iret
gs
push
ds
ret
pop
dec
insl
test
lods
mov
popf
lahf
push
adcb
jl
das
inc
push
push
sahf
jbe
mov
mulb
sahf
jns
cmpsb
aad
in
scas
push
mov
imul
loopne
push
lock
mov
aas
mov
cmpsl
inc
cmpsb
dec
push
enter
mov
out
addl
sbb
xor
jecxz
sbb
inc
xorb
fistl
inc
adc
ljmp
mov
nop
jae
addr16
xchg
mov
sub
insl
test
mov
xchg
insb
mov
inc
jg
push
in
rorl
xor
jo
movsl
pop
adc
add
arpl
jge
pop
pushf
push
imul
icebp
sahf
mov
jmp
push
ds
mov
mov
inc
push
mov
mov
mov
aam
xchg
cmc
loop
push
add
inc
pop
ffree
fdivl
rolb
add
xor
jg
cmpl
fidivs
sub
inc
add
jo
or
add
push
mov
inc
add
movsb
push
mov
ret
insb
mov
pop
shl
stos
test
add
lahf
mov
cmp
cmp
mov
mov
xor
aam
push
bound
inc
inc
push
sbb
rorl
dec
xor
out
repnz
addr16
adc
mov
push
mov
sahf
mov
mov
xchg
jmp
sbb
andb
call
inc
sbb
inc
aam
cmp
xchg
fwait
cmc
sub
outsb
mov
int3
mov
mov
outsb
fsubrs
loop
adc
sarb
fisubrs
mov
jns
daa
adc
mov
mov
mov
ffree
sbb
adc
mov
ss
xor
outsl
sub
stos
dec
sahf
in
fldt
xor
jge
arpl
int3
clc
test
stos
lea
aaa
aaa
adc
sub
arpl
cwtl
push
outsl
aam
push
mov
sarb
push
popf
aad
test
sbb
js
xchg
popa
mov
fwait
lods
rorl
scas
or
xchg
and
xchg
jbe
sbb
xchg
popa
lds
push
or
clc
sbb
out
inc
mov
push
jb
shll
arpl
mov
jns
jae
shlb
push
xor
daa
std
xchg
sub
std
xchg
xchg
xchg
aam
mov
inc
inc
cmp
mov
testb
outsb
dec
dec
movsb
arpl
pushf
stos
pop
mov
in
inc
xor
mov
aas
pop
and
aaa
jle
scas
adc
ds
xor
gs
je
pusha
cltd
sub
mov
pop
dec
lods
aad
jbe
aaa
or
or
leave
inc
jno
fldcw
cld
sbb
dec
icebp
cmp
jg
xchg
mov
xor
sahf
fistpll
stos
or
pop
jb
shrl
pop
sbb
mov
cmp
xor
cmp
xchg
xchg
cmc
sbb
cmp
outsl
out
dec
or
stc
testb
pop
ljmp
repz
test
test
mov
jne
out
gs
pop
es
daa
xor
xchg
cwtl
push
lea
in
pop
out
leave
cmpsb
pop
pushf
adc
add
xchg
outsl
popf
in
jge
inc
jne
push
mov
inc
out
sub
mov
inc
shl
xlat
repnz
xadd
enter
push
and
hlt
addb
scas
jge
in
mov
shlb
loopne
xor
sub
ret
stos
jg
push
mov
addr16
mov
cmpsb
jo
imul
sti
imul
cli
jle
dec
inc
aas
cmc
sub
jmp
mov
rclb
je
cwtl
inc
outsl
insl
sub
add
leave
mov
jge
stos
in
aad
sbb
mov
cmpsl
xchg
shlb
mov
lds
ljmp
ss
repnz
lret
dec
lods
or
aam
ljmp
mov
jb
dec
jge
sbb
push
pop
out
pop
jo
jp
cli
int
jo
cmpsl
test
push
bound
rcrb
mov
pop
or
mov
imul
sub
mov
rcl
and
popf
jne
jl
cmp
dec
int
aas
fnstcw
mov
dec
outsl
cmpsb
enter
adc
lock
jb
xchg
sti
jle
adc
mov
gs
push
jnp
pop
xor
dec
stos
mov
flds
fnstcw
daa
jno
jle
add
push
inc
pop
push
jnp
out
fdiv
dec
lock
out
xchg
adc
push
mov
daa
mov
cmp
fnstcw
or
test
mov
ret
popf
mov
and
or
and
out
hlt
push
mov
sub
sarb
orb
sub
dec
cmc
pop
sbb
pop
mov
jns
stc
adc
sbb
sbb
daa
pop
and
pushl
push
xchg
mov
test
filds
jl
or
hlt
fs
roll
push
xor
dec
sub
aas
cmpsb
clc
push
movsb
sub
xor
adc
lcall
movsl
enter
xchg
imulb
sahf
xchg
add
pop
leave
fwait
inc
js
xor
loopne
push
out
mov
ja
cmpsb
imul
adc
mov
out
mov
mov
add
test
fimull
call
pop
pop
rorl
sbb
xchg
imul
decb
lods
shlb
addb
mov
cmp
lcall
sbb
xor
push
test
mov
shlb
dec
jle
push
xchg
mov
ds
and
sub
aam
sub
push
ret
mov
outsb
mov
gs
jnp
xor
pop
daa
or
pop
cmp
scas
loop
sub
push
xor
jne
pop
test
add
js
xchg
xchg
or
or
call
mov
xrelease
cmp
test
mov
ret
repnz
repnz
inc
scas
xchg
rclb
cmpsl
jns
and
aad
sub
jmp
or
lea
scas
and
sbbb
xor
clc
mov
sbb
jnp
or
sbb
pusha
movb
lahf
inc
inc
mov
insb
push
outsb
arpl
cmpsb
xchg
das
cmp
mov
pushf
dec
and
xchg
mov
xchg
ja
repnz
sti
scas
jge
cmp
ds
popl
jle
xchg
cmp
je
mov
or
dec
cmp
or
or
fisubl
pop
mov
jns
std
clc
or
call
test
sub
adc
xchg
xchg
pusha
jne
or
into
sahf
rorb
rcrb
push
les
mov
popf
iret
test
call
push
lcall
daa
push
stos
jne
adc
cmp
addr16
call
sbb
in
push
imul
ficomps
sbb
in
adc
cmp
int3
xor
or
sbb
or
cltd
or
ljmp
scas
nop
sbb
scas
sbb
cmpsb
jmp
adc
cmpl
in
xchg
or
mov
lret
and
ficompl
jecxz
and
mov
popa
cmp
jbe
adc
sti
xchg
xlat
pop
cltd
adc
jg
testl
inc
pusha
push
mov
hlt
inc
push
push
out
je
loopne
pop
dec
decl
ss
dec
or
enter
add
test
jns
fbstp
xchg
jmp
gs
enter
shr
pusha
xlat
mov
dec
frstor
xchg
lods
adc
pop
in
pusha
movsb
mov
mov
sub
mov
daa
jl
lret
es
cmp
xchg
movl
xlat
push
imul
pop
fnstenv
mulb
xchg
mov
inc
jle
xor
jp
fnstsw
mov
pop
xchg
sbb
pop
loope
push
dec
hlt
or
dec
jns
ljmp
xlat
or
lcall
call
cli
sub
jb
out
jle
fadds
int
call
and
out
mov
cld
jl
add
inc
add
mov
rorl
fsub
ljmp
xchg
sbb
in
addr16
or
test
int3
or
add
pusha
inc
or
adc
cli
push
bound
dec
xchg
inc
or
outsb
das
jne
inc
mov
xchg
xorl
addr16
adc
jnp
xchg
mov
test
hlt
adc
xchg
popa
jl
jb
lret
das
and
icebp
loop
mov
popf
cmpsl
jg
ds
cmp
fmuls
sub
sbb
andnps
and
sti
sahf
outsl
lea
pop
mov
fs
xchg
sub
xchg
shll
scas
mov
stos
dec
test
inc
push
bound
pop
pop
je
dec
adc
cmpsl
pop
mov
cmp
hlt
sub
and
mov
adc
pop
mul
jecxz
imul
pop
dec
xchg
mov
jo
cmc
div
outsb
iret
movsl
cmc
push
dec
addr16
ja
cmp
pop
lods
jge
divb
ret
inc
ljmp
push
sbb
xchg
jp
cmp
lock
adc
pop
fstpl
push
mov
mov
mov
mov
push
cmp
mov
loop
loope
lods
je
hlt
ss
pusha
popf
dec
daa
rolb
leave
icebp
sub
adc
mov
out
shll
fbld
mov
pop
int3
test
and
filds
stos
ud0
clc
dec
pop
xor
js
and
aad
arpl
loop
add
pop
mov
das
jmp
std
out
jbe
sbb
imul
or
mov
and
mov
mov
inc
or
pop
xchg
icebp
rorb
popa
ret
xchg
fs
push
ss
loop
iret
fwait
mov
cmpb
outsl
jbe
rcl
das
lods
dec
or
mov
adc
sbb
push
test
outsb
mov
popf
sbb
push
jne
dec
cmpsb
mov
es
adc
iret
test
rcrl
fimull
lods
pop
pushfw
sub
sub
das
bound
or
jp
xorb
push
stos
and
jne
mov
pop
dec
int3
cmpsl
pop
cmpsl
mov
sbb
idivb
sub
or
xchg
xor
mov
and
out
push
cmpsb
xor
push
jmp
mov
jns
loopne
mov
mov
xchg
mov
xchg
jge
lahf
aad
mov
jae
cmp
mov
cltd
imul
adc
mov
jle
scas
ljmp
jns
sbb
test
jp
out
mov
sbb
mov
dec
inc
cmp
mov
gs
xchg
push
inc
and
imul
shrl
pop
jae
or
pusha
dec
addr16
inc
aam
shll
mov
repz
test
push
xchg
leave
sub
scas
sub
jle
or
insl
popf
sub
add
jg
and
scas
aam
syscall
test
push
or
adc
cmpsb
jnp
ret
rcll
xor
adc
leave
in
fistps
xchg
cmc
daa
lods
call
push
sub
sti
insl
xor
adc
divb
xchg
dec
shlb
dec
sub
dec
ss
fsubs
jnp
pop
shl
mov
add
jae
je
mov
inc
push
xchg
outsb
xchg
pusha
fisttps
mov
add
cmpsb
std
leave
movsl
mov
orb
addr16
lods
ja
or
add
cmp
arpl
adc
and
ljmp
or
xchg
cld
mov
xchg
jge
pop
test
ja
sahf
or
data16
xchg
pop
gs
pop
shlb
movsl
xchg
mov
push
stos
test
cmp
inc
sub
jbe
mov
push
jo
in
add
push
add
mov
dec
push
sbb
fadd
mov
pop
call
popf
mov
fcomip
xchg
pop
lods
test
mov
jae
inc
fs
int3
pop
cmpsl
lods
gs
clc
adc
lret
jle
xchg
out
push
xor
jbe
pop
into
ret
xchg
mov
rcll
mov
icebp
xor
pusha
mov
in
out
and
sub
in
std
ljmp
inc
nop
cwtl
add
stc
imul
lcall
mov
shll
mov
push
dec
icebp
jne
in
jle
mov
iret
sbb
ret
push
es
icebp
xor
sbbl
insb
jne
jbe
adc
xchg
lahf
cmp
fsubrp
dec
lods
or
pop
mov
push
fsubl
add
xchg
sub
outsl
sarb
in
jne
fcmovu
call
imul
out
sub
bound
or
ret
xchg
inc
cs
divl
adc
mov
inc
outsb
inc
lahf
lret
nop
addr16
lds
fstps
jae
jb,pt
jnp
push
mov
insl
fldt
adc
cmp
hlt
add
scas
pop
inc
xor
imul
leave
stos
xor
out
rolb
cli
dec
sbbl
pop
leave
adc
pop
push
add
adc
cli
and
and
mov
sbb
pop
and
repnz
push
imul
addl
pop
aas
push
lcall
xor
xchg
aam
mov
stc
imul
lea
sbb
adc
push
pop
mov
jae
jle
xor
stc
dec
jb
in
xchg
jecxz
mov
testb
fstpl
mov
adcb
cmp
and
popa
dec
daa
jp
or
loop
add
fdivs
je
notl
pop
in
push
mov
aaa
push
jnp
cmp
rcll
mov
mov
std
ljmp
push
cld
test
and
imul
loope
jbe
sub
cmpsl
xchg
pop
sahf
push
cmp
subb
aas
popa
pusha
imul
jge
jmp
lods
pop
mov
cwtl
inc
xchg
push
or
adc
movsb
int
mov
cmp
enter
test
loop
xor
mov
in
stos
mov
pop
fildl
cmp
leave
rorl
sub
popa
dec
je
gs
mov
sub
jp
add
jae
add
in
lret
jle
stc
js
sbb
push
je
and
ss
sbb
sbb
test
dec
sub
std
and
in
cmp
push
icebp
push
lcall
fcomps
add
pushf
xor
mov
dec
popa
mov
popf
shll
push
movsl
orl
rcl
std
in
inc
fs
add
jo
test
add
rcrb
addr16
test
mov
and
nop
in
sub
sbb
aas
push
jns
loopne
dec
xchg
cmpsl
adc
repnz
cld
shrl
adcl
sbb
jbe
stc
ret
sets
cwtl
xchg
and
xchg
sub
mov
pop
shr
xor
add
je
mov
clc
std
scas
lds
sbb
subl
jp
jle
shlb
xchg
mov
ss
jle
in
and
and
mov
push
lret
adc
inc
test
jecxz
xor
mov
dec
mov
in
dec
mov
mov
and
add
jnp
adc
es
add
stc
mov
sbb
dec
add
test
icebp
adc
out
ss
lds
jg
pop
adc
lds
jno
add
jmp
repz
push
xchg
sbb
xchg
or
in
sbb
std
in
shll
mov
push
iret
mov
mov
addl
adc
test
aam
jge
pop
lcall
loope
test
cs
jge
gs
and
add
addr16
test
xchg
loopne
jne
int3
es
mov
mov
imul
mov
repz
testl
jl
dec
dec
loopne
aad
insl
adc
sub
xor
ffree
mov
sbb
sbb
lds
jne
mov
dec
jecxz
push
fs
ds
xor
mov
pop
addl
dec
repz
in
ret
loope
sarl
push
sub
cmpsb
nop
or
xchg
cmp
mov
and
in
dec
cltd
adc
add
cmp
aam
cmpsb
mov
xchg
mov
imul
adc
mov
testb
sahf
mov
fdivrp
shlb
push
xchg
and
add
push
int3
sbb
std
mov
es
or
enter
cs
and
std
bound
lds
test
cmp
stos
stc
and
mov
cld
arpl
das
jo
hlt
mov
jmp
loopne
pushf
mov
sub
dec
pop
sbb
xchg
shl
jb
xchg
dec
sbb
loope
ret
shll
pop
jecxz
xchg
adc
cmp
ficomps
in
out
and
int3
ret
jne
frstor
add
aam
sub
jp
mov
jle
push
fwait
rcrb
insb
fwait
ss
pop
jb
dec
xchg
xor
xor
xchg
inc
push
into
or
mov
inc
aas
jg
hlt
inc
jg
popf
repnz
rorb
movsb
les
cld
ss
int3
jno
adcb
xchg
add
or
cwtl
ficomps
fmuls
cs
push
mov
adc
sbb
push
cwtl
sbb
sub
pop
outsb
push
mov
ret
and
fistpl
loope
out
xor
clc
in
or
add
movsb
iret
jmp
ja
in
in
aaa
pop
pop
outsl
ret
test
les
mov
cmpsb
insb
mov
cmc
xor
call
cmpsb
ja
adc
mov
adc
mov
sub
cs
mov
push
ret
mov
mov
enter
movsl
xchg
xorb
jb
outsb
ret
hlt
in
mov
ret
lcall
vorps
and
dec
test
aad
loop
test
mov
and
popf
or
mov
mov
add
ret
cmpsl
pop
aad
push
negl
ret
jae
popf
cmpsl
jne
jnp
mov
sbb
and
inc
bound
cld
mov
loopne
scas
xchg
sub
xor
test
insl
iret
xor
clc
aas
mov
or
cmc
mov
popf
andl
sar
pop
loope
xor
iret
xchg
pop
mov
andb
adc
or
adc
dec
mov
call
shlb
int
mov
push
fcompl
fmul
jg
fcmovu
push
push
aam
fbld
inc
push
stos
rcrl
dec
les
xchg
xor
pusha
dec
mov
sbb
jl
push
int3
inc
mov
mov
mov
sahf
pop
push
inc
push
adc
mov
sbb
int
pop
push
or
arpl
inc
fldt
fs
pop
xor
test
push
mov
sbb
and
jge
loope
mov
pop
out
sub
jp
and
insl
inc
loopne
mov
sbb
push
outsb
aam
jae
mov
inc
ja
and
in
aaa
xchg
push
xor
lock
jno
inc
dec
cltd
dec
fisttpl
cld
and
and
fsubs
in
jbe
imul
dec
stos
insb
int
and
inc
inc
mov
xchg
or
xchg
jg
cmp
push
pop
mov
mov
icebp
pop
sbb
test
fiadds
sbb
out
js
lods
sub
stc
dec
shlb
in
das
lds
mov
out
or
and
add
mov
int3
imul
mov
fcomip
xchg
scas
sbb
and
movsl
cltd
cmp
sbbl
cld
lcall
pop
push
test
xchg
cmpl
fwait
push
scas
out
cmp
aaa
dec
push
mov
hlt
sbb
or
ret
sub
outsb
out
add
cmp
shll
sti
repz
jp
jne
sub
lds
fwait
int3
sbb
movsl
incb
or
pushl
hlt
inc
pop
jnp
lret
aas
mov
cmpsl
xor
inc
cmpsl
adc
and
mov
das
dec
ds
mov
sub
test
add
cmp
jns
call
in
test
repz
sub
mov
and
push
adc
out
xor
inc
cmp
mov
ds
push
inc
xchg
stc
cli
mov
jnp
loopne
ret
cmp
sahf
nop
leave
xchg
mov
daa
inc
cmp
in
outsl
clc
ljmp
push
aam
add
jle
sub
jmp
bswap
adc
mov
sub
jp
notl
clc
iret
loop
jge
stc
repnz
in
stc
cli
cltd
pop
jg
insl
or
lods
inc
jo
jmp
je
cmp
dec
pop
fsubl
mov
shll
or
pop
pop
jecxz
inc
lret
in
inc
pop
aam
out
push
mov
push
call
nop
jecxz
cltd
inc
fadds
xchg
int3
adcl
mov
mov
add
pop
jbe
adc
test
lods
pop
fisttps
cmp
sarb
adc
lods
xor
sahf
leave
mov
xchg
repnz
xor
push
inc
fwait
xchg
xchg
imul
xchg
xor
clc
call
ljmp
mov
out
orb
gs
mov
call
mov
stc
inc
cmpb
inc
xchg
sbb
xchg
in
cmpsb
push
push
insl
ljmp
add
cltd
mov
push
out
sub
mov
sub
add
into
push
fdivl
mov
dec
jmp
stos
add
and
and
shl
imul
push
inc
mov
es
push
inc
jns
int
mov
mov
inc
mov
pop
push
aam
pop
pop
mov
mov
or
mov
sbb
fiadds
lock
loopne
dec
fcompl
dec
sub
mov
mov
sub
push
pusha
nop
je
push
jo
outsl
fisubrl
mov
mov
sbb
mov
insb
js
popf
aad
jg
pop
sub
sbb
jns
xor
out
and
lcall
jl
sub
pop
lahf
sub
shll
push
push
push
lahf
je
dec
push
int3
xchg
xchg
pop
cmp
data16
lods
push
or
test
inc
pop
aas
movsb
fmul
xor
outsb
and
sub
pop
push
xchg
cmp
push
bound
mov
fucom
rorb
or
and
push
mov
das
jg
pushl
push
dec
push
xor
orb
ret
xchg
imul
stos
pop
fsts
es
into
hlt
rclb
push
jae
mov
pop
arpl
mov
popf
jnp
enter
add
xor
lds
jo
bound
hlt
jne
sbb
pop
dec
popa
or
xor
xor
aas
dec
fldenv
popl
cmp
idivl
push
cmpsb
fnstcw
outsb
mov
cmp
jb
imul
shl
inc
xor
gs
inc
xor
xchg
add
sub
iret
test
inc
clc
push
jo
push
testl
push
aaa
mov
mov
xchg
and
lods
add
push
add
repnz
cwtl
fcmovbe
andb
jbe
test
mov
and
pushf
rcrl
hlt
ret
mov
shl
sbb
insl
enter
leave
cld
mov
in
int
adc
ljmp
xor
pop
xchg
scas
rcll
test
adc
loopne
fnstenv
cmp
mov
sub
mov
pushf
dec
aas
outsl
mov
lds
jo
fadds
outsb
cmp
icebp
cmpb
cmp
loope
outsl
popa
inc
push
and
and
or
adc
mov
clc
ja
jmp
xlat
in
fwait
lahf
std
mov
je
pop
int
scas
ljmp
push
int3
and
subl
push
inc
dec
fstpl
and
inc
lret
jmp
pop
jmp
stos
movzbl
pop
outsl
cmp
xorl
inc
push
lahf
mov
mov
lret
mov
mov
cltd
inc
adc
das
add
add
inc
dec
sbb
sbb
jnp
sbb
repz
jnp
push
test
mov
pop
jae
jg
adc
inc
jb
pop
lcall
cmpsl
popa
sbb
dec
movsb
shll
in
ds
mov
aad
mov
mov
icebp
loop
lea
stos
mov
jl
push
sub
or
mov
bound
incl
in
or
jp
push
mov
ja
scas
push
testl
int3
mov
daa
jno
push
xor
cmp
mov
mov
cs
gs
and
test
fildl
outsl
pop
pop
sub
add
inc
pop
jnp
mov
enter
cmp
flds
lret
out
frstpm(287
lret
adc
inc
pop
add
jl
std
pop
call
cmp
mov
xor
sub
cmp
out
inc
lahf
add
push
sbb
out
push
insb
movd
popf
dec
inc
aaa
push
aam
pop
dec
pand
call
js
fisubs
lods
fnstenv
loope
mov
push
pop
jno
fiadds
daa
xlat
jecxz
es
dec
sbb
mov
jae
rolb
cld
dec
fnstcw
mov
call
cmpl
xor
fsts
sbb
call
ja
mov
push
iret
outsl
dec
cld
fimuls
loope
inc
xor
jb
sti
jle
or
cmp
fimuls
pop
ljmp
push
cmp
scas
mov
push
mov
mov
push
push
pop
mov
add
icebp
sub
repnz
sbb
add
subb
subb
ud1
cmp
je
mov
adc
in
into
mov
int
mov
rcrl
ja
daa
sbb
lods
scas
dec
cmp
add
add
xlat
cmp
popa
xchg
ds
adc
cmpsl
cmp
add
inc
or
daa
inc
and
xor
lcall
mov
mov
and
push
lods
push
mov
sarl
dec
in
mov
jl
fwait
fwait
jl
pop
int
in
xchg
insb
gs
fdivrp
lcall
clc
xchg
mov
mov
or
in
ss
inc
mov
jne
jl
stos
cmp
rclb
cltd
mov
fiaddl
xchg
mov
pop
ss
mov
sbb
pop
nop
sbb
imul
in
mov
add
daa
sbb
into
loop
lock
bnd
test
cmp
jns
xor
xor
popf
lret
add
test
je
loopne
test
mov
sbbb
daa
mov
push
fdivl
dec
pop
mov
jne
mov
or
daa
adc
ss
in
loopne
sbb
mov
mov
mov
mov
out
mov
dec
push
adc
sbb
or
inc
mov
leave
and
pop
movsb
mov
mov
sti
out
out
pop
scas
outsl
mov
loope
roll
pop
mov
adc
push
add
nop
pop
xchg
out
dec
inc
or
repnz
mov
stc
sbb
push
popf
shrb
or
pop
jbe
cs
cmc
ja
cltd
inc
cmp
inc
movsl
push
ja
jo
add
data16
push
and
bound
out
sbb
clc
movsl
pop
clc
jae
pusha
dec
mov
sbb
test
aam
pop
xchg
and
dec
test
ja
fistl
xor
mov
popa
lods
rcrl
and
ljmp
test
nop
jo
in
cmpsl
push
in
out
in
test
imul
jnp
in
data16
sahf
jns
or
pop
cmp
shrb
pushf
sub
repz
dec
sub
hlt
xchg
jo
je
xchg
les
in
xchg
in
ja
sbb
ds
addr16
jle
lcall
jnp
push
hlt
iret
dec
cld
dec
pop
test
pushf
push
cmp
adc
mov
xchg
fisubrs
mov
xchg
push
push
jmp
scas
loope
dec
test
sub
pop
dec
sbb
mov
incb
enter
cld
movl
push
xchg
insl
cmp
ja
outsb
js
mov
inc
lods
sub
fnsave
pop
push
lcall
fcomi
cmp
jnp
or
loop
rcrl
xchg
int3
lret
out
dec
adc
mov
dec
mov
and
pop
cmp
mov
add
xor
jnp
jecxz
pop
adc
movsl
call
int3
pop
test
xchg
addr16
fstpl
lret
mov
ret
ret
jecxz
gs
daa
dec
cmpsl
shrb
pusha
es
sbb
in
in
cli
and
mov
das
faddl
lretw
rol
jb
mov
xor
or
stos
sub
je
repnz
je
inc
adc
es
insl
addl
and
aad
movsb
js
pop
mov
and
push
js
add
mov
imul
inc
imul
fs
cmp
jmp
jne
jb
std
mov
sub
add
dec
popa
pusha
jp
out
sbb
faddl
dec
inc
sub
lea
push
or
and
std
xchg
pop
jb
xchg
xchg
in
xor
xlat
je
out
pop
xor
inc
nop
imul
clc
jae
test
sahf
lods
xor
dec
fldenv
in
test
push
ss
cmpsl
insl
cmp
insb
mov
daa
loopne
das
push
push
pop
ror
shll
mov
dec
pop
jmp
and
sbb
adc
std
xchg
insl
popa
cmc
jecxz
mov
cmc
fildll
lds
test
lahf
cmp
dec
aas
and
cld
jae
push
out
jl
out
daa
mov
pushf
movsb
cmp
jle
add
add
out
or
pop
or
ret
enter
inc
int3
xor
xor
out
mov
or
xchg
imul
push
in
jns
popf
dec
cmc
popa
in
cmp
jecxz
add
xor
xor
out
lahf
sbbl
les
pop
jl
pop
push
or
jne
xchg
addl
push
sbb
mul
mov
in
sbb
and
leave
mov
lret
add
sbb
inc
das
inc
adc
adcb
mov
xchg
mov
mov
lods
cmp
ss
jno
popa
or
xor
jmp
insl
popa
or
mov
cld
mov
mov
pop
mov
pusha
jmp
mull
cmpsb
out
int
adc
add
jecxz
dec
test
dec
mov
xchg
test
dec
or
adc
mov
test
adc
inc
mov
shr
mov
xlat
push
pop
push
out
andb
dec
sbb
in
mov
cs
cmp
imul
mov
ljmp
shrb
mov
or
lret
rcrb
mov
lahf
push
insb
xchg
ret
xchg
mov
jns
inc
mov
imul
loopne
sti
inc
xor
mov
mov
push
in
jle
aas
ret
jne
imul
jl
add
sub
test
in
fwait
mov
add
sbb
movsb
div
inc
out
sub
ret
clc
test
mov
sbb
mov
inc
xchg
jne
push
jb
pop
jo
subl
out
cmp
sahf
iret
jne
mov
mov
adc
xchg
in
jle,pt
or
or
test
xchg
dec
xor
cltd
loope
or
push
aas
sbb
dec
pop
adc
fnstenv
sub
insb
std
es
loop
cmp
adc
fadds
add
and
outsb
lds
pop
leave
adc
adc
fwait
or
out
pop
pop
js
jo
and
mov
sbb
pop
in
cmc
int
mov
call
pop
add
shll
ja
rcrl
aam
and
scas
ss
mov
subb
xor
rcrl
xchg
jp
jle
in
dec
lcall
jle
xchg
jg
adc
lds
imul
or
cmp
aam
outsb
or
mov
mov
push
lcall
xor
mov
xor
fadd
enter
xor
sbb
mov
lods
inc
bound
insb
test
shl
dec
push
dec
bound
jmp
loopne
divl
sub
repz
es
mov
sbbb
inc
xor
mov
adcl
outsb
pop
sbb
sub
pop
mov
aam
pop
cmp
mov
dec
add
insl
call
leave
ret
push
mov
movsl
cmpl
inc
fcomps
mov
rcll
pushf
xchg
or
jae
in
nop
xlat
pop
dec
pushf
cld
sub
push
cwtl
jno
xchg
jne
js
in
lea
test
call
scas
add
xchg
mov
xchg
xchg
shll
inc
add
or
jb
inc
adc
push
test
fsubrl
cmp
pop
and
shll
lret
or
aaa
int3
cmpl
and
cltd
sub
stc
adc
fidivl
jg
cmpsb
and
inc
pop
jg
outsb
and
sbb
inc
lahf
icebp
mov
cs
lods
orb
cltd
and
sub
hlt
aaa
sub
fstpt
mov
mov
std
gs
imul
std
fwait
lcall
xchg
or
inc
pop
shlb
add
push
daa
repz
lods
inc
mov
pop
shl
jne
sub
jb
cld
lods
jo
mov
call
js
dec
and
cmp
in
mov
lock
clc
jl
and
push
stos
mov
jbe
popl
push
sub
test
push
imul
pushf
adc
dec
jl
xchg
adc
inc
pop
jl
fisubrs
testb
lret
mov
mov
cmp
xchg
push
xor
mov
sbbl
push
sub
and
aad
test
mov
xlat
push
loop
fs
xorb
leave
repz
sub
adc
mov
insb
mov
iret
in
mov
pop
sub
mov
xor
pop
aaa
xor
ds
mov
ja
push
fsubl
jecxz
inc
pop
fs
pop
add
in
mov
mov
pusha
testb
das
mov
aas
shlb
fisttpll
pop
inc
pop
cmp
lret
jecxz
lds
push
loop
cmc
mov
repz
sub
mov
add
and
sahf
inc
arpl
adc
idivl
out
cltd
push
push
xchg
pop
out
add
fnsave
out
cmp
loopne
jae
inc
jecxz
pop
cmpsl
stc
das
ja
sbb
lods
imulb
fldl
xor
mov
mov
xor
rorl
fldl
loope
push
mov
addb
out
xchg
and
stc
jno
xchg
nop
push
pop
xlat
sub
in
cmp
sbb
arpl
mov
rol
mov
test
orl
mov
sbb
cs
push
mov
in
mov
mov
xlat
push
pop
or
sbb
push
outsb
inc
fcomi
dec
test
sub
sub
dec
lds
into
fildl
imul
push
push
inc
out
push
pushf
push
jle
push
push
movsl
pop
insb
jns
inc
daa
enter
cmp
sti
sub
and
not
and
fcmovb
loopne
adc
out
enter
adc
dec
push
xchg
ficoml
sub
xor
enter
inc
call
loop
cmpsl
mov
pushf
pop
mov
pushf
mov
rclb
jbe
sbb
pusha
push
int3
stc
push
dec
aad
inc
jecxz
sbb
jg
test
insl
mov
xchg
in
cmp
inc
jne
aam
push
and
fistpl
aaa
jns
adc
mov
insb
cmp
mov
and
lods
push
lods
cltd
push
sbb
mov
inc
iret
dec
scas
aas
inc
out
xor
in
adc
vmaxps
mov
cltd
mov
ljmp
fwait
adc
lods
xchg
lds
roll
jnp
cmpsl
insl
lcall
jle
mov
cld
push
xor
or
mov
mov
add
rcrl
pop
push
das
push
add
or
pop
outsb
xor
ss
mov
lahf
lock
mov
push
pop
and
cmp
mov
vpmacssww
cmp
data16
les
cmpsl
mov
jns
xchg
dec
mov
rclb
dec
imull
jge
ss
mov
inc
cli
sbb
lock
inc
ret
leave
mov
xchg
js
stos
fstpl
clc
push
test
mov
and
shl
stc
or
jg
outsl
or
pop
inc
sahf
jb
stos
scas
mov
sub
sarl
loopne
rcrl
inc
arpl
aam
mov
mov
cmp
fildll
test
xchg
jno
adc
pop
aad
inc
lret
jo
int
jno
push
lds
and
mov
aam
adc
xchg
cmp
mov
mov
fwait
mov
push
sbb
hlt
outsl
jmp
push
jp
dec
lods
sub
lock
fisttpl
negb
cs
loop
cmc
roll
out
imul
test
push
fwait
pop
mov
dec
xchg
mov
jnp
call
inc
sub
or
flds
fisubl
pop
cmp
lahf
je
stos
sbb
xor
test
movsb
std
add
ljmp
dec
loop
mov
add
loope
mov
and
scas
js
jge
xchg
sahf
gs
and
shlb
das
lahf
cmp
jne
cmp
std
xchg
push
push
aam
inc
repnz
scas
insl
rorl
hlt
fs
pop
mov
mov
ficomps
rol
ja
lcall
iret
shll
and
sub
jle
dec
stos
out
cmp
popfw
jge
insb
adc
jb
lcall
sbb
data16
nop
lods
aas
sarb
dec
ficoms
test
xlat
pushf
mov
fisttps
jmp
divl
add
cmpb
es
and
imul
test
shlb
cmp
inc
dec
pop
mov
lods
in
shll
test
add
lret
test
repz
or
push
mov
jg
sbb
mov
push
incl
jge
shlb
pop
aam
sub
sbb
fisttpll
rcrb
lock
inc
dec
stc
push
fwait
lods
cld
xchg
mov
fcompl
inc
add
jb
mov
mov
mov
push
sbbb
jl
dec
int
sub
insb
and
aam
sub
jo
xor
in
sbb
fiaddl
and
outsl
rcl
or
add
mov
xor
jo
das
mov
inc
int
test
sti
xchg
ja
in
arpl
jo
in
fldcw
xchg
xor
testb
movsl
push
es
inc
out
sbb
cs
sub
gs
lahf
cmpsb
push
cmp
pop
cwtl
xchg
lret
mov
outsl
enter
sti
sub
fucomip
bound
cmp
jne
dec
lret
dec
stos
push
jge
out
mov
and
or
call
mov
or
jae
stos
shrb
push
xchg
push
or
cli
and
aam
mov
sbb
iret
repnz
jbe
outsl
iret
jmp
cld
adc
jg
gs
jns
fistl
cmp
jge
test
push
xor
out
push
xchg
mov
bnd
hlt
clc
loopne
add
mov
mov
and
mov
dec
nop
or
jecxz
jge
cs
pandn
in
scas
icebp
mov
scas
push
stc
cmc
pop
and
icebp
cmc
add
icebp
cs
push
xchg
imul
sbbb
push
out
cmp
push
movsl
pushf
in
xor
fwait
repnz
pusha
xor
mov
dec
dec
std
push
mov
lods
push
cmp
flds
imul
and
cmpsl
push
movsl
jecxz
ljmp
movsl
jnp
mov
inc
inc
sbbb
flds
sbb
enter
add
push
sub
or
mov
pop
in
repnz
cmp
jmp
mov
jno
nop
or
lds
jb
ficoms
push
mov
inc
js
int3
testb
xor
add
sbb
xlat
dec
out
repnz
or
lcall
xor
cmpb
lret
pop
push
push
mov
add
icebp
sub
add
pop
sbb
or
xchg
push
subps
xchg
cmp
pop
jo
inc
les
mov
jge
test
subl
dec
loop
movsb
sub
jo
rolb
ja
in
xchg
fistps
loopne
subb
jns
sbb
xor
pusha
jbe
test
sub
sbb
sbb
push
pop
mov
adc
push
cli
cmc
xor
mov
lea
mov
lret
mov
pop
mov
mov
mov
mov
add
mov
les
rclb
mov
or
int3
cmp
decb
or
and
testl
shl
test
out
or
xchg
jb
repz
xchg
aaa
xchg
out
arpl
out
dec
pop
leave
jecxz
ljmp
dec
sub
jge
in
fldl
fs
mov
ljmp
aam
push
repz
dec
jns
sub
aas
sub
fwait
push
cmp
sbb
dec
and
enter
add
lahf
ja
pop
xchg
shrb
test
popa
cmc
sbb
outsl
insb
insb
pop
pop
dec
loopne
jmp
fs
push
mov
sbb
sub
lret
mov
push
and
idiv
test
pop
inc
je
push
jge
xlat
mov
ljmp
cmp
mov
adc
cmp
jp
adc
mov
push
sti
test
push
mov
mov
jae
mov
jmp
sbb
stos
add
pop
ds
imul
xchg
imul
sub
cltd
mov
jmp
fs
cmpsl
and
lds
nop
mov
jb
cmp
mov
in
push
or
int3
and
stos
stos
es
pushf
add
adc
psubsw
aaa
mov
push
xchg
rcll
test
bound
test
ret
xchg
mov
sub
cmpl
cmp
stc
adc
adc
inc
xchg
out
dec
add
inc
xchg
pop
dec
jmp
adc
sti
dec
and
in
mov
sbb
mov
jae
lea
ds
mov
fs
cltd
or
push
xor
jb
sbb
bound
inc
inc
data16
insl
cmpsb
aaa
sub
test
mov
fucom
push
jno
ss
or
jle
loope
aad
pop
push
in
flds
stos
sbb
scas
sub
loopne
les
jle
jo
addr16
inc
inc
xchg
cmp
pop
pop
inc
scas
pop
in
cmpl
ja
and
fadds
pop
mov
dec
mov
push
xchg
jb
xchg
jb
es
mov
add
pop
jne
jmp
cmp
xchg
lock
hlt
stos
fbld
lods
xchg
xor
xlat
xor
stc
subl
or
adc
mov
mov
xor
pop
adc
cmpsb
enter
lods
push
inc
fidivs
ljmp
repnz
jo
adc
adc
cmp
inc
ret
dec
cmp
jb
pop
xor
test
fisubrs
inc
xor
mov
xchg
xchg
add
aas
cmpsb
int
and
cld
loop
adc
repz
mov
xchg
lods
inc
movsb
cmp
movsb
adc
and
add
add
mov
out
loope
aaa
out
outsb
mov
cmp
mov
inc
jo
push
xlat
aam
js
test
lea
test
outsb
sbb
jbe
push
lock
movsb
fwait
icebp
call
ja
jl
adc
ret
push
scas
mov
push
ret
xlat
sti
sub
jns
jmp
sbb
hlt
jne
push
ror
push
add
popf
lock
and
int
outsb
ss
out
add
sub
rclb
jae
cltd
pop
or
xchg
mov
cmp
sti
loope
pop
scas
inc
int3
sti
jge
push
xchg
lea
cmp
nop
mov
dec
pop
int
aas
dec
xchg
dec
cmp
xor
add
cwtl
popa
or
mov
dec
pop
cmpb
lcall
or
testl
mov
cmp
and
jo
xchg
rcr
jb
and
iret
sbb
int3
jecxz
adc
aaa
adc
jecxz
int3
jl
add
shrb
dec
les
addl
mov
xchg
pop
in
bound
xchg
lock
cltd
mov
mov
mov
mov
gs
mov
add
cmp
fisubrl
dec
xorl
lret
cmp
mov
adc
gs
push
aad
inc
fwait
cmpsl
xor
and
test
jno,pn
dec
or
xchg
inc
aam
xchg
loopne
cmp
dec
sbb
or
fisttps
stc
inc
sarl
push
lret
les
jnp
roll
and
mov
cmpsl
clc
ret
dec
push
and
push
enter
mov
fiadds
popa
pop
dec
lods
cmp
xor
lret
cmp
cmp
inc
jl
push
mov
inc
xchg
test
aad
lea
insl
push
into
push
faddl
das
enter
inc
and
gs
mov
jl
xchg
inc
inc
sub
sti
push
xorb
push
insb
jg
adcb
mov
outsb
inc
cld
enter
test
adc
iret
add
xchg
insb
jg
fidivs
inc
shrb
clc
dec
and
sbb
jge
jl
push
es
mov
pop
movsb
sub
push
lods
or
test
pop
pop
test
or
and
adc
leave
mov
xchg
inc
or
or
xchg
pop
sarb
mov
mov
std
jo
mov
adc
movsl
out
dec
test
mov
icebp
outsl
mov
scas
xchg
test
xchg
popl
addr16
dec
iret
xchg
or
xorb
pusha
pop
imul
dec
les
xchg
jns
scas
lock
cmc
lods
out
add
inc
xor
jo
ficoml
push
pop
pushf
fnstsw
addb
les
in
mov
and
pop
mov
iret
pop
jb
mov
leave
iret
out
daa
add
fiadds
or
pop
gs
cmp
jns
aas
dec
mov
pop
sbb
xor
mov
int
lret
jmp
inc
push
sbb
cmp
in
flds
test
push
pop
jae
push
mov
sub
xchg
fs
jecxz
imul
daa
xor
fbstp
popa
in
movsb
cltd
dec
fisttps
sub
or
push
inc
test
pop
mov
push
in
imull
xor
jp
ret
mov
push
mov
jne
adc
mov
and
leave
or
pop
or
loopne
lock
lods
inc
fs
daa
leave
and
mov
sub
push
inc
ficomps
lcall
mov
pop
fldl
scas
xor
nop
and
es
or
lods
inc
fdivr
dec
pop
bnd
cli
popa
xchg
cmp
push
pop
adc
in
push
mov
ret
movsl
pushf
or
or
cmpsl
xor
mov
icebp
push
ja
or
xchg
jl
push
popa
mov
into
dec
xor
sbb
adc
repz
sub
push
lahf
sbb
mov
sub
imul
testb
pop
cld
call
sub
aaa
imul
pop
or
cmp
mov
out
test
mov
jmp
push
std
pop
jecxz
xchg
pushf
sbbb
xchg
mov
jge
shrb
push
mov
adc
pop
push
jno
pusha
dec
lds
fcoml
arpl
or
je
and
aaa
pusha
mov
into
mov
push
jg
es
gs
mov
and
pop
test
outsb
imul
mov
sbb
adc
sbb
cwtl
sbb
inc
mov
mov
ret
repz
fwait
and
or
stc
out
mov
dec
daa
adc
dec
std
insl
movsb
insb
sub
inc
cmp
adc
js
push
adc
js
sub
fisubrs
int
xchg
fdivrs
icebp
push
adc
add
pop
pop
rorl
dec
mov
jl
push
dec
pop
cmp
dec
xchg
aam
sbb
and
popf
ficoms
in
lods
daa
aas
xchg
cs
into
in
ds
jnp
out
iret
mov
mov
into
ret
pop
sub
adc
leave
les
cmp
mov
pop
jae
test
dec
xchg
mov
outsb
aad
pop
xchg
and
jae
shlb
movhlps
mov
push
mov
mov
imul
orl
mov
call
mov
ljmp
ffree
mov
sbb
cmpsb
dec
cmp
xlat
push
add
scas
sarb
fsubrp
sbb
cs
hlt
pushw
pusha
mov
test
jae
xor
ja
mov
int
stos
fwait
sahf
rol
out
inc
jbe
or
sahf
jmp
sahf
out
inc
mov
sub
shlb
loope
test
pop
addb
hlt
lea
iret
add
inc
movl
mov
dec
cs
jle
out
mov
loopne
cmp
xchg
mov
das
daa
cltd
inc
sarb
fldl
in
pop
rcl
mov
and
add
stc
pop
test
ret
adc
xchg
xchg
xchg
push
scas
imul
cmp
jns
fldt
or
mov
and
cmp
pop
bound
mov
and
jmp
mov
mov
testl
cmp
sbb
inc
dec
repz
mov
lret
shlb
mov
daa
arpl
fadd
push
subb
das
out
pop
inc
sbb
mov
xchg
cwtl
es
sbb
mov
psubusw
pop
sub
call
mov
lea
jmp
ret
fstps
test
dec
ja
out
push
lret
inc
outsl
and
pop
mov
pushf
leave
fsts
sub
mov
das
jg
insl
stos
lcall
fisttpll
stos
out
jne
push
pop
mov
inc
enter
and
imul
cld
or
call
mov
cmp
fistps
xchg
cmpl
arpl
aas
pop
xchg
sbb
aam
mov
fcoml
xchg
aam
aad
lret
add
das
lahf
in
ss
cli
insb
outsb
enter
sar
pop
in
xor
loop
sarl
xor
or
jecxz
pusha
mov
inc
add
fidivl
sti
mov
dec
mov
adc
pop
push
mulb
in
arpl
enter
pop
testl
jp
jecxz
add
jmp
mov
push
push
jl
jne
out
mov
pop
push
ficompl
into
cmp
mul
notb
ret
sbb
and
pop
mov
cli
jl
sti
mov
adc
popf
mov
mov
pop
push
jg
xor
aas
xlat
mov
inc
cmp
jle
rol
add
out
pop
les
mov
out
mov
mov
dec
push
cmp
add
cmp
mov
sbb
lods
pop
push
xchg
add
popa
hlt
jmp
pop
jnp
push
pop
mov
jns
inc
inc
pop
and
jne
lock
mov
das
mov
pop
add
or
outsb
imul
mov
jns
adc
push
xlat
mov
dec
rcrl
into
or
in
lret
sub
inc
push
xor
mov
mov
jle
mov
jmp
loope
inc
insb
mov
shl
dec
and
pop
aaa
les
or
and
outsl
pop
push
mov
pushf
je
inc
or
mov
sti
aad
push
sbb
bound
pop
sarl
add
call
rolb
out
mov
xchg
fmull
clc
pushf
cmp
out
xor
add
fmull
je
push
js
rcr
subb
mov
daa
insl
pushf
mov
mov
hlt
in
clc
push
shr
fidivrl
popf
or
and
inc
out
adc
xchg
cmp
movsb
sbb
shll
fs
fsub
inc
cmp
mov
mov
notb
jmp
cltd
cmp
mov
inc
ss
jl
inc
push
fstpl
pop
mov
movsb
inc
pop
mov
rcrb
cwtl
mov
mov
shrl
aam
or
mov
push
sub
repnz
int
jnp
push
push
dec
adc
xchg
inc
and
outsl
iret
and
loop
mov
scas
xchg
cwtl
xchg
gs
sahf
fstl
sbb
sbb
out
jb
out
jle
cmp
loope
outsl
add
xchg
icebp
fwait
mov
mov
aam
mov
nop
sti
adc
icebp
and
push
rcll
push
lahf
jl
fldcw
or
dec
popf
dec
out
xor
ret
adc
cli
stos
fdivl
orl
xchg
jg
push
insb
popa
mov
cmpsl
xlat
in
pop
jmp
dec
adc
sub
ja
out
stos
push
mov
dec
pop
call
and
cs
add
add
test
shll
jae
cltd
sub
clc
stc
jbe
jbe
sti
rclb
xchg
out
mov
sub
lahf
pop
aam
xchg
xor
jmp
inc
xchg
fidivs
and
insb
cmp
test
insb
pop
pop
pop
fldt
push
mov
add
xchg
or
sahf
sub
mov
dec
mov
sub
adc
dec
add
fs
idivb
enter
in
sti
mov
cmp
push
sbb
push
out
es
xchg
repnz
data16
dec
cwtl
pop
adc
pop
jg
imul
and
mov
xor
adc
rcl
mov
cmp
push
cmc
mov
repz
fsub
xlat
inc
pusha
inc
push
xor
stc
in
mov
in
mov
mov
pop
outsl
pop
pop
ds
dec
pop
fstpt
mov
push
push
sub
pop
cld
enter
scas
inc
repz
std
adc
adc
je
in
push
cli
daa
stc
inc
jle
out
add
popa
repz
imul
lahf
mov
dec
mov
jp
jl
sub
dec
into
mov
mov
ja
inc
add
mov
dec
push
aas
xchg
and
mov
dec
xor
repnz
iret
pop
shll
je
sbb
daa
outsb
cmpsl
cmp
xor
inc
call
jge
sub
test
pop
popf
stc
mov
xchg
sbb
or
rcrl
inc
pushf
pop
pop
jns
add
cmp
xor
mov
test
stos
fwait
stos
roll
idivl
repz
mov
sbb
dec
pop
push
arpl
int
loope
enter
xor
dec
sbb
pop
lcall
int3
sti
adc
cmp
dec
lcall
fbstp
int3
dec
pop
jns
or
test
mov
mov
mov
in
sbb
adc
sahf
mov
adc
mov
mov
jnp
or
inc
add
icebp
data16
mov
inc
call
adc
jno
push
fisubs
xor
and
rorb
sbb
in
xchg
adc
bound
mov
and
dec
sub
or
loop
jp
je
lret
pop
pusha
add
je
or
cld
loopne
rolb
leave
negl
dec
aad
cs
mov
cmc
add
mov
push
lahf
pop
les
push
jl
and
inc
sub
movsl
push
inc
std
scas
pop
pop
into
stos
mov
loopne
pusha
jmp
push
and
pushf
arpl
outsl
push
rcl
testb
outsb
lcall
add
dec
and
incb
fisttpll
cld
sbbl
or
jb
lock
xor
sbb
cs
outsb
cmpsb
pusha
int3
xchg
dec
mov
cwtl
mov
lds
popa
add
out
test
jne
mov
js
pop
loope
shrl
pushf
fsubrl
mov
pop
jg
and
sub
and
movsl
jmp
pusha
push
cli
lret
inc
in
in
popa
js
push
lret
lds
shlb
out
ds
cmp
cltd
cli
inc
mov
test
add
pop
xchg
mov
pop
inc
push
push
repnz
je
les
push
sbb
mov
mov
out
mov
mov
cmp
pop
push
mov
push
xchg
xchg
cld
xor
cli
les
pusha
dec
sbb
mov
sarl
outsb
scas
or
sub
push
push
outsl
sub
in
dec
jne
mov
mov
inc
imul
rcl
add
jmp
pop
sarb
fisttps
pop
loope
js
and
adc
sahf
mov
inc
sub
or
addr16
and
andb
sub
test
cwtl
lea
stc
cs
mov
mov
dec
or
imul
aas
and
fchs
mov
adc
mov
ja
jge
jecxz
shrb
jp
scas
mov
cwtl
ret
in
jg
sub
add
stos
or
loope,pt
sahf
loopne
bound
ljmp
mov
cmp
adc
mov
push
jge
sti
push
mov
popf
xchg
cltd
mov
pop
aaa
lock
mov
xchg
call
or
dec
adcl
adc
add
lret
jno
sub
shll
stos
cmp
outsb
xor
pop
jmp
push
out
in
xchg
sbb
jae
popf
roll
andl
out
or
icebp
and
xchg
stc
mov
repz
mov
stc
lret
sarb
aad
xor
xchg
jno
add
insb
sub
into
or
rcl
mov
xor
cmp
call
xor
pop
adc
adc
and
adc
stc
loopne
adc
mov
mov
out
cmpsl
stc
cmpsl
mov
repz
dec
dec
adc
sub
inc
loopne
ret
push
add
dec
mov
mov
das
jb
fwait
adc
lea
sub
call
jecxz
std
mov
lret
das
mov
xchg
scas
stos
push
in
imul
jmp
inc
cmpsb
push
mov
mov
pop
aaa
pop
jbe
lods
fsts
mov
xor
xchg
fcoml
xchg
xlat
cmpsl
push
dec
subl
jp
adc
jb
xchg
mov
cmp
xchg
xchg
add
push
xchg
mov
cli
jb
or
xor
fstpl
inc
xchg
push
or
andl
push
sbb
inc
cltd
add
rclb
pop
std
bound
inc
jp
stc
push
test
adc
aaa
push
idivl
shr
mov
xchg
jo
cmc
and
xchg
mov
pop
ret
in
lods
es
mov
movsl
enter
sbb
add
scas
outsl
dec
xor
test
call
aad
add
test
jnp
mov
push
push
cmpsl
stos
pop
cmp
sti
bound
sub
imul
xchg
mov
lea
or
ficomps
push
xor
stc
mov
and
sbb
nop
je
sbb
lahf
jge
xchg
adc
adc
jl
fcompl
add
call
shlb
out
in
imul
test
inc
xchg
jmp
cmc
mov
mov
jno,pt
pop
jp
lock
add
ffreep
pop
aas
push
add
sub
loop
xor
lahf
jmp
cmc
and
dec
stos
movzwl
cmp
ss
lods
cs
fsubl
inc
mov
dec
in
in
and
pushf
sbb
mov
fidivl
xor
mov
imul
dec
jo
insl
cwtl
and
data16
mov
mov
add
rcr
pushf
cmp
pop
dec
gs
cmp
dec
addl
cs
mov
inc
sbb
lds
adc
mov
mov
imulb
mov
xor
mov
shlb
pop
or
sti
hlt
mov
mov
leave
test
cwtl
mov
aad
add
sbb
xchg
and
out
mov
sti
fildll
pop
sbb
sub
ljmp
fsubrs
test
sti
jg
push
xlat
jge
aad
jmp
or
inc
mov
mov
lods
push
in
movsb
xor
out
and
sbb
ss
sarb
add
cld
xor
inc
sahf
pop
fistpll
jg
out
mov
subb
daa
rorb
daa
jp
lahf
leave
mov
pusha
bound
imul
push
mov
or
dec
xor
adc
mov
leave
or
add
addr16
xchg
cltd
je
test
and
int
imul
mov
in
sub
pop
test
test
pop
idivl
je
pop
push
inc
jb
iret
aam
cmp
out
ficomps
ljmp
dec
jle
inc
fisttps
jns
imul
ficoml
nop
stos
add
aas
jp
mov
and
cmpsl
out
cmpsb
lcall
sbb
sub
in
xor
push
jne
xor
icebp
aam
sarl
or
cmp
xor
inc
cltd
xor
lret
imul
ret
xchg
rcrb
pop
sbb
adc
mov
cmpsb
int
mov
jmp
jbe
les
mov
imul
inc
call
lea
popf
and
pop
push
scas
mov
adc
fisttpll
mov
sahf
mov
push
sbb
je
das
pminub
push
xchg
xchg
shll
add
fnstsw
adcb
std
sub
mov
mov
lret
and
sub
enter
hlt
imul
jge
test
xchg
lret
sub
mov
push
cs
or
pop
jbe
lods
ficoml
int3
insb
adc
movsl
mov
test
pop
inc
and
es
int
and
aam
sarb
xor
ljmp
ss
les
icebp
push
ret
cmp
into
lret
inc
shll
sbb
lods
inc
pop
mov
out
or
aas
sbb
jmp
push
dec
je
pop
fidivrl
push
mov
dec
lods
mov
mov
fsubrl
cmp
inc
das
in
and
pop
shlb
out
imul
push
lea
scas
jnp
mov
sub
sbb
adc
std
pop
into
mov
sahf
mov
mov
call
cmpb
ret
or
push
cmp
dec
icebp
push
jns
jne
mov
lahf
mov
cmpsb
loopne
imul
cmpsb
test
mov
in
and
inc
mov
cmp
sbb
lret
pop
and
and
inc
mov
xor
cmp
dec
sub
push
cmpsb
mov
inc
lea
jo
sub
out
mov
sarl
int
or
call
and
mov
std
mov
lahf
aam
js
insl
jl
cmpsl
jmp
xchg
cmp
ficompl
cs
popf
sbb
mov
push
lods
mov
add
stc
jg
fwait
push
adc
lock
outsb
rolb
jne
movsl
jne
dec
xchg
sub
insb
or
jg
dec
mov
adc
icebp
je
mov
es
test
rclb
dec
inc
cmp
repz
mov
addb
jns
jbe
pop
xchg
jl
mov
stc
jae
mov
testb
fcmovnu
loop
js
loopne
int
int3
data16
lock
mov
push
xchg
cmp
sbb
and
shll
cmc
sbb
cmp
xchg
hlt
xchg
ficomps
dec
rcll
loope
cmpsb
add
cmp
jbe
xchg
ficomps
push
push
sbb
sbb
popf
stos
lahf
jp
into
in
mov
pop
adc
jecxz
cmp
sbb
jl
iret
sub
bound
insl
mov
js
sub
fstpt
sub
fwait
bound
and
dec
leave
xor
xchg
mulb
popl
gs
push
dec
dec
sbb
cmp
xchg
mov
push
cmpsl
incl
pop
sbb
and
fstps
das
stos
ret
push
push
adc
push
push
xchg
cltd
push
push
and
in
mov
lret
and
jmp
adc
out
jmp
int
test
jnp
rcl
adc
sahf
loop
shll
cmp
lods
out
stc
je
mov
fld
inc
leave
or
mov
je
in
insl
iret
mov
sub
pop
daa
sbbl
mov
testl
xchg
mov
jnp
push
sahf
xchg
push
dec
inc
cmc
ret
push
push
fcoml
mov
mov
out
clc
out
push
repz
fadd
add
xor
inc
pop
push
roll
jno
jle
call
ljmp
xor
dec
je
gs
add
jg
cli
sbbb
or
mov
mov
xor
sahf
std
cmp
jns
cli
in
xor
repz
jno
scas
xchg
stos
in
sbb
pop
cmpsb
test
inc
pop
scas
daa
jns
or
in
arpl
inc
inc
lods
call
mov
xchg
leave
mov
popf
and
sbb
mov
rcrl
sub
dec
inc
insb
push
pop
into
mov
add
aas
jl
add
lock
insb
sbb
xchg
cmc
test
cli
mov
or
test
push
push
loopne
lods
cmc
xchg
jbe
and
and
shll
or
sti
js
mov
pop
sarl
add
hlt
ds
mov
or
sub
xchg
and
jge
aaa
aam
fidivs
rcrb
dec
xor
push
dec
xor
outsb
cmp
repnz
rcl
out
sub
cmc
xor
xchg
imul
int
das
test
test
hlt
mov
jp
xor
inc
aaa
aad
loopne
xchg
dec
stc
jno
shlb
and
jne
pushfw
outsb
fnstenv
popf
and
jnp
adc
sar
xchg
pop
rorl
or
shr
fnstsw
and
lret
or
stos
inc
xchg
jo
repz
pusha
stos
sub
inc
subb
rorb
bts
push
mov
sahf
mov
adc
test
pop
xor
mov
mov
cmp
fs
lret
pop
sub
pop
mov
inc
mov
xlat
std
push
push
in
cld
mov
jp
push
test
sbb
adc
and
shrl
pop
iret
and
in
aaa
sub
lock
adc
mov
jge
push
lahf
lcall
cmpb
sbb
dec
cmp
movsb
jecxz
arpl
adc
cmpsl
mov
cld
push
lahf
inc
popa
adc
sub
push
inc
add
adc
daa
sub
inc
push
sub
inc
mov
std
sbb
cmp
insl
insl
scas
jno
push
dec
add
mov
mov
mov
xlat
mov
jecxz
push
movsb
fadd
mov
inc
sbb
add
dec
cmp
lea
add
pop
or
mov
es
pop
divl
push
rcr
jge
lret
rep
xor
out
xchg
push
rorb
inc
imul
cwtl
test
xchg
jo
pop
sti
dec
test
cwtl
int3
out
cltd
or
test
dec
gs
lods
mov
fwait
adc
in
enter
push
mov
es
push
aad
pop
cli
dec
mov
idivb
mov
push
aaa
lret
fldcw
add
cltd
inc
push
sbb
xor
rolb
repz
and
scas
mov
sub
xchg
pusha
lds
mov
loop
cltd
aaa
add
jnp
addr16
sahf
xor
mov
dec
xor
adc
insb
pop
andl
pusha
cwtl
lcall
mov
movsb
lret
filds
mov
pop
imul
sbb
imul
xor
outsl
mov
add
gs
or
sbb
sarl
jecxz
rcr
push
in
outsl
jmp
test
jmp
lea
or
lret
lods
sti
test
pop
xor
stos
mov
es
sub
ror
sahf
xchg
mov
pop
jae
inc
aaa
push
inc
xchg
stos
fldt
or
sbb
repnz
daa
ja
js
xor
adc
cltd
mov
jle
pushf
loope
shll
out
int
scas
sbbl
daa
pop
out
cwtl
adc
fwait
imulb
popa
xor
iret
pop
aad
adc
xlat
lret
lahf
sbb
cmp
push
inc
out
ljmp
cld
and
ss
bound
pop
sub
dec
pop
ror
ljmp
fmull
jecxz
aas
popa
mov
sub
rcl
cld
aaa
jns
enter
jb
jbe
js
xchg
nop
ljmp
mov
mov
pop
cwtl
leave
lret
dec
jp
test
je
inc
xchg
sahf
lock
into
out
cld
dec
sub
js,pn
popf
jns
adc
mov
movsl
sbb
and
mov
flds
jb
andb
retw
nop
call
std
cmp
mov
lods
rorb
in
cmp
xor
jno
divl
sbb
insb
cmp
in
fisubrl
gs
mov
mov
mov
or
mov
fdivrl
aaa
in
dec
mov
or
inc
movsl
nop
push
pop
pop
mov
cmpsb
insb
fs
push
cmpsl
mov
mov
sub
rorb
xor
pop
pop
or
sub
mov
xchg
pop
aaa
lahf
mov
dec
scas
icebp
arpl
push
xor
push
ffreep
dec
mov
mov
and
mov
mov
divl
lcall
cmp
pop
mov
xchg
test
cmp
pop
pop
insb
pop
arpl
or
add
dec
sbb
pop
sbb
cmp
cmp
xchg
jno
sub
adc
pushl
sub
test
xchg
ss
es
ljmp
ja
loop
or
cmp
js
push
dec
xor
addl
movsl
lcall
add
mov
adc
std
pop
mov
xor
ret
or
imul
data16
cmp
dec
add
or
in
int
mov
mov
mov
cmp
fcompl
movsl
test
adc
sbb
xor
aad
icebp
repz
lods
fiadds
arpl
fnstcw
jno
inc
dec
jmp
idiv
mov
imul
or
dec
les
and
or
fwait
popa
ljmp
sbb
adc
out
jl
sub
roll
rcl
hlt
in
pusha
out
pop
decb
jmp
dec
sbb
imul
mov
lahf
push
cmc
imul
mov
lds
mov
into
sub
mov
lods
dec
lahf
jp
add
pop
or
jmp
jl
sbb
inc
mov
dec
xchg
jmp
and
scas
fwait
push
stc
and
hlt
xchg
inc
popa
cltd
dec
pop
inc
leave
lods
mov
repz
int3
dec
xchg
sub
addr16
lock
lock
sahf
sub
lds
xlat
push
jg
loopne
out
mov
jp
rol
mov
std
pop
push
pop
sbb
jle
inc
cmp
stc
mov
shll
pop
mov
xor
pop
and
adc
js
xchg
mov
mov
ja
mov
cmp
mov
mov
push
ds
add
loopne
test
pop
pop
mov
push
and
mov
jae
adc
jmp
jmp
negl
rcl
mov
sbb
leave
int
jp
push
mov
rclb
cmp
xor
in
daa
xchg
and
cs
add
or
xor
sbbl
add
and
jne
pop
pushf
std
adc
add
pop
bound
jb
shll
mov
cmp
fdivs
imul
ficoms
test
in
inc
and
mov
outsl
pop
sbb
mov
inc
xchg
loopne
sarl
iret
bound
jno
shll
std
stc
mov
ds
jns
xchg
mov
fs
scas
mov
stos
xor
sbb
jo
ss
iret
sbb
enter
cmp
add
aam
xchg
notb
popf
or
mov
aam
xor
test
add
sbbl
mov
jne
cld
sbb
cltd
or
das
jns
dec
inc
jno
cmpsb
pop
and
shlb
jecxz
xor
push
into
mov
adc
and
and
push
or
mov
repnz
testb
rol
in
sbb
stos
rclb
out
and
jns
or
xchg
ret
in
leave
adc
dec
jae
fcomps
loop
pop
in
addr16
cmp
mov
ja
inc
mull
xchg
dec
cld
add
mov
jno
scas
mov
mov
push
cmp
lods
test
mov
sbb
mov
mov
xor
cmp
std
sbb
or
imul
js
xchg
arpl
push
ret
pop
inc
arpl
inc
xchg
addr16
and
incb
pop
push
and
dec
adc
cmpsl
cltd
ss
dec
push
je
popf
lahf
in
push
xor
bound
outsb
insl
out
hlt
mov
cmc
push
fs
mov
scas
je
pop
jg
mov
imul
dec
in
scas
ret
push
stc
es
sub
jno
pushf
push
lock
lods
xlat
aaa
adc
pop
mov
xchg
lods
clc
pop
adc
test
inc
mull
pop
adc
fs
shrl
clc
pop
jbe
push
sahf
cmp
lcall
add
rcr
lds
xchg
cwtl
or
cli
out
das
lods
xor
test
xorb
aam
ret
pop
lea
or
cltd
test
jno
adc
imul
adc
and
jo
sbb
xchg
sub
pop
push
jne
pop
clc
lods
cwtl
inc
sbb
stos
mov
mov
daa
push
and
xchg
or
pop
or
aad
out
adc
pop
jnp
ret
dec
daa
jns
popa
pop
sbb
fidivrl
mov
dec
stos
push
lret
pop
cmc
into
dec
dec
out
and
iret
movsl
test
gs
push
iret
jbe
xchg
movsl
adc
jmp
pop
bound
adc
adc
mov
filds
dec
adc
rol
mov
ljmp
into
dec
test
in
cmpsb
cmp
loope
xor
leave
pusha
or
cmpsb
lcall
sub
test
xor
sbb
pop
sbb
xchg
sub
jae
clc
pop
push
xor
test
jmp
scas
mov
jp
mov
gs
dec
mov
icebp
mov
dec
mov
mov
push
cs
push
ss
sbb
sahf
pop
and
or
xor
es
call
xchg
rorl
xor
int3
sbb
mov
and
and
data16
cs
sbb
daa
sub
mov
dec
cltd
stos
xchg
stos
mov
pushf
jp
adc
stc
hlt
je
fsubrs
mov
call
sti
sbb
arpl
cltd
mov
scas
sbb
out
lcall
outsl
cmp
add
jns
mov
push
adc
sub
bound
lcall
out
lretw
lods
cld
cmp
rcl
inc
xorb
out
movsl
jne
out
push
mov
fisttps
inc
cltd
data16
mov
int
inc
inc
js
test
xor
dec
fisubs
jg
and
lods
pop
pop
mov
cltd
mov
sar
pop
lods
jecxz
or
mov
xchg
cmp
pop
push
adc
adc
or
xchg
insl
and
les
jle
pop
iret
aaa
sub
mov
cmpsl
mov
stc
mov
mov
nop
xchg
xor
push
push
and
outsb
fldl
push
pop
call
shll
cli
fildl
add
mov
push
stos
push
add
aad
cltd
add
lret
xor
xor
sbb
arpl
repz
add
and
add
or
cmp
aaa
std
int
cmp
test
ret
dec
push
mov
frstor
or
pop
dec
push
inc
js
sub
inc
out
js
add
imul
andl
rcrw
xchg
sub
jb
push
mov
aaa
push
jae
push
pop
dec
cmpsl
cwtl
push
jg
jecxz
jecxz
pop
dec
xchg
clc
test
jbe
pop
outsl
mov
mov
dec
ret
push
outsl
lock
js
ljmp
jbe
pop
fistl
sbb
daa
jbe
test
fdivs
les
movsb
cmp
icebp
into
idivb
lds
xor
enter
or
or
js
pop
je
mov
mov
aaa
xchg
dec
adc
pop
push
mov
movsl
jg
and
inc
mov
pushf
adc
or
cltd
push
ljmp
jle
cs
push
jnp
jge
sub
js
pop
int3
and
bound
fildl
mov
test
adc
cmc
bound
pop
mov
xchg
mov
sti
ljmp
push
or
dec
xor
test
fwait
jnp
push
aas
rcrb
aaa
test
in
cli
and
fcoms
dec
xchg
mov
mov
or
cwtl
cmc
in
push
and
imul
lock
fwait
mov
pop
jbe
sbb
sub
dec
sbb
in
daa
mov
adcl
sbb
mov
hlt
scas
clc
adc
ud2
jl
push
in
cwtl
mov
int3
inc
in
jg
dec
cltd
cmpsb
push
clc
fists
inc
lret
cmp
aad
mov
jmp
mov
mov
inc
adc
imul
pop
xchg
outsl
xor
jo
iret
adc
add
loopne
je
leave
push
scas
lret
stc
stc
scas
push
sbb
and
in
jp
xchg
addr16
or
push
bound
xchg
pop
mov
push
lcall
sub
lods
push
mov
jnp
pop
ljmp
inc
sarl
jb
jmp
inc
push
jno
fs
pushf
pop
or
imul
shl
mov
inc
inc
pop
mov
sub
das
dec
iret
imul
dec
decl
loopne
push
jb
std
sub
and
lds
int3
imul
outsb
outsb
mov
adc
testb
fiaddl
xchg
xchg
push
or
fildl
xor
push
jnp
xor
cmp
cli
inc
sbb
adc
int
sti
addr16
sahf
lea
loope
ds
call
arpl
call
or
mov
mov
push
pop
xchg
loop
and
mov
inc
jbe
push
inc
mov
in
add
out
mov
sbb
in
adc
pop
out
and
pop
mov
adcl
sbb
movsl
mov
sub
sub
test
inc
cmc
xchg
pop
sub
jecxz
push
push
scas
jns
jl
fcoml
mov
lea
push
scas
cmpl
adc
xchg
mov
xchg
or
push
dec
sub
mov
out
popf
fwait
in
dec
aas
notb
and
test
test
jp
imul
jecxz
mov
lods
mov
outsb
icebp
ds
jo
xcrypt-ctr
cmpsl
fsub
xlat
sahf
in
dec
jp
imul
xchg
sub
out
jecxz
inc
add
loop
iret
mov
pop
fnstsw
mov
jae
cmpsb
lds
cmp
fmull
dec
faddl
out
mov
daa
fidivrs
push
cmp
cli
sub
xor
push
xchg
daa
cmp
outsl
roll
xor
sub
mov
xor
sbb
sub
and
jno
int
fsubp
sbb
sbb
jnp
leave
push
mov
lods
adc
pusha
mov
out
jno
xor
pop
adc
lcall
dec
pop
repnz
jecxz
xchg
lcall
out
pushw
shll
jbe
fwait
pop
mov
std
cmp
jns
adc
xor
sarl
jo
jl
div
jno
stos
addl
mov
jmp
jle
roll
and
ret
int3
inc
pop
fildl
sub
negb
xchg
adc
in
mov
jecxz
pop
mov
enter
dec
aas
xor
xchg
pop
mov
inc
xor
xchg
lock
enter
lret
insb
cmp
daa
push
lods
and
jmp
test
insl
xor
in
inc
inc
cmp
sahf
sbb
lods
mov
inc
pop
mov
xchg
insl
mov
cmpsl
cmp
lds
push
jno
prefetch
mov
lods
jae
mov
stos
push
ljmp
movsb
cld
mov
ret
jbe
dec
lcall
lahf
clc
xchg
sbb
test
inc
scas
pop
sub
fmull
mov
out
sbb
dec
loop
xor
cmpb
lcall
jno
sti
xor
pop
sbb
call
xor
dec
insb
ljmp
not
xorb
pop
mov
mov
mov
mov
imul
das
pop
push
addb
mov
cmpsl
or
cmp
sub
sbb
insl
inc
testl
out
in
cmc
pop
xor
pop
xor
jp
or
add
in
inc
repnz
xorl
mov
mov
ja
sub
cmpsl
mov
fildll
jae
inc
mov
and
flds
cwtl
cmpl
addb
cwtl
pop
cmp
rcrl
adc
or
sbb
stos
inc
pop
inc
ljmp
add
popf
jp
pop
scas
out
bound
aad
push
mov
lcall
mov
cli
adcl
mov
orb
push
jno
insl
fcompl
out
sbb
sub
pop
movsl
push
and
mov
nop
jne
adc
mov
outsl
ja
adc
fwait
test
mov
lock
iret
mov
add
int3
call
mov
and
xchg
cwtl
adc
jae
popf
sarl
cmp
or
mov
ds
xor
xchg
orl
jp
adcb
or
ljmp
iret
jne
fisttps
and
push
cltd
mov
int
mov
jno
jle
popf
add
add
imull
cmpsb
les
cmp
lods
daa
xchg
cmpsb
cltd
jb
out
jno
or
push
push
js
sub
fstl
jmp
test
loop
mov
push
jmp
cli
lret
outsl
sbb
cmp
ljmp
cmpb
inc
mov
data16
dec
push
jb
mov
das
cli
or
cmpsl
push
sub
mov
test
data16
sar
jae
mov
lcall
sbb
leave
push
ret
cmp
pop
outsb
jl
inc
add
faddp
sbb
push
sbb
sbb
jo
insl
ror
dec
push
setbe
xchg
xchg
mov
push
xchg
aaa
push
pop
pop
or
mov
rcl
jne
mov
ret
mov
aad
push
push
adc
dec
cld
lret
dec
pop
movsl
pop
clc
ds
addr16
and
enter
xchg
adc
and
addr16
ficoml
aam
arpl
mov
xor
mov
pushw
jo
push
repz
repnz
mov
cmp
mov
xchg
jae
mov
fisubl
cmc
es
flds
sbb
rcll
js
cmp
ja
ljmp
aad
jl
jp
loope
mov
sbb
aaa
mov
mov
cmpsl
pop
fisubrl
test
mov
add
cs
push
mov
push
repz
sahf
mov
sbb
or
rcrl
ficoms
mov
xchg
push
addr16
add
outsl
xor
mov
das
mov
mov
aas
add
xor
sbb
arpl
xor
stos
ds
push
mov
andb
int
or
adc
out
leave
mov
sub
lcall
int3
adc
mov
stos
mov
push
xor
push
push
sahf
ret
sbb
rol
clc
andl
or
pusha
jl
rcll
inc
lcall
movsl
mov
pop
gs
xor
data16
gs
jno
sub
bound
jb
rclb
mov
push
testb
mov
xor
or
xor
lods
movsl
adc
mov
and
dec
xchg
mov
imul
or
mov
mov
ljmp
sub
cmp
xorl
fsubr
xchg
mov
fdivr
add
mov
lret
lock
aam
test
or
movsl
movsb
movsl
push
xor
dec
add
sahf
pusha
jle
in
inc
inc
mov
js
movsb
pop
adc
sbb
jge
xor
repnz
lret
pop
ret
ja
cmpsl
mov
ror
pop
inc
sub
xchg
adcl
lods
lcall
and
mov
lahf
rol
stos
call
jnp
mov
push
movntps
lock
subl
shlb
xchg
outsl
inc
aad
fisubrs
inc
xchg
jb
enter
out
icebp
adc
dec
pop
mov
icebp
iret
xchg
sahf
pop
sub
jle
ds
mov
or
mov
sub
pop
add
xlat
jecxz
dec
pop
stc
and
cmp
fsts
mov
ss
xchg
out
fstpt
xor
addr16
mov
cmp
adc
in
push
lods
mov
push
test
inc
sub
xor
loope
int3
adc
and
cmp
popa
xor
ret
out
sbb
mov
clc
dec
rorl
mov
mov
inc
mov
ds
pop
push
xchg
call
jnp
loopne
sub
or
hlt
popf
mov
or
jg
cmp
dec
pop
pop
inc
loopne
mov
pop
out
pop
and
mulb
xchg
nop
xor
fwait
inc
cmp
cmp
or
sub
and
adc
das
ss
sbb
jecxz
pushf
pop
add
shrl
jae
jecxz
sub
adc
pop
ss
rsm
jnp
dec
pop
xchg
mov
shrl
fs
adc
adc
sbb
aas
outsb
out
out
popa
fistpl
jmp
loope
adc
mov
shll
imul
xor
sub
sbb
clc
icebp
or
ret
push
repnz
les
stc
inc
into
nop
and
cwtl
popf
xor
stc
jecxz
ret
adc
into
mov
cmp
pop
adc
outsl
icebp
addb
push
test
adc
adc
out
shll
shrb
test
aaa
rorl
pop
pop
popa
mov
ret
adc
pushf
ret
fcmovu
dec
mov
xor
pop
stos
daa
push
out
dec
cli
xorb
adc
int3
dec
cld
pop
pop
mov
sub
or
sti
loopne
add
shlb
push
and
or
and
imul
imul
movsl
sarb
adc
daa
push
sbb
sub
push
mov
xchg
pop
fadds
jns
mov
jmp
push
pushf
stos
mov
cs
and
push
repnz
jnp
adc
jmp
hlt
ss
stos
ja
rep
in
lods
jo
imul
or
mov
insb
outsl
sbb
mov
out
cwtl
fsubr
sarl
stos
divl
dec
inc
jmp
arpl
pop
out
xchg
data16
jge
xchg
adc
pop
mov
mov
out
pop
or
mov
fstpt
push
dec
xchg
cmp
jge
in
adc
and
out
outsl
xor
icebp
outsl
test
loopne
cs
xchg
ret
sti
cwtl
xchg
cltd
mov
inc
test
mov
cmp
sub
or
gs
mov
mov
je
enter
lret
mov
cmp
mov
and
mov
icebp
xchg
sub
ljmp
divl
xchg
rorl
stc
std
xchg
pop
jl
loopne
add
loope
ds
repz
mov
testl
loopne
jecxz
mov
cs
stos
mov
roll
mov
pop
pushf
cmp
jbe
pop
bound
aad
mov
loop
imul
jnp
popl
repz
push
sub
cmc
dec
and
xchg
std
loop
jg
push
push
ljmp
loop
fs
ret
std
fisubrl
xor
cmpsb
sti
pop
xorb
shr
sbb
aaa
adc
fidivrs
test
mov
dec
jno
lahf
sbbl
add
inc
jnp
iret
mov
pusha
add
mov
add
mov
in
inc
ds
mov
or
xlat
lods
adc
loope
insl
shll
mov
inc
scas
fidivs
in
daa
xchg
adc
jg
out
int3
and
iret
gs
push
insb
adc
jae
stc
or
test
aad
orb
or
mov
dec
mov
int3
mov
out
add
addr16
push
mov
dec
mov
mov
jbe
shr
add
fidivrs
mov
stc
in
adc
sbb
daa
push
testb
or
out
mov
or
pusha
push
push
fimuls
push
into
fildll
mov
rclb
lds
fs
xorl
mov
aad
dec
shrl
and
mov
push
xor
pop
mov
imul
aam
jns
xchg
cltd
cmp
inc
cwtl
mov
sub
scas
dec
into
packsswb
adcl
cltd
sub
xchg
push
xchg
and
sub
push
mov
push
dec
popf
popf
mov
and
push
mov
pop
pusha
clc
xor
sbb
and
fbstp
add
fucom
lods
inc
out
jns
mov
aas
and
add
lcall
stc
addr16
fwait
shrb
mov
call
cmp
iret
inc
rcll
push
lcall
mov
inc
or
loop
aas
jb
push
mov
sbb
adc
cs
cmp
push
mov
xchg
icebp
fstpt
popa
jp
arpl
mov
sub
daa
add
mov
std
jne
in
pop
scas
jle
mov
ficompl
leave
das
push
mov
mov
sub
negb
pushf
mov
pop
fidivrs
imul
in
ret
sti
xchg
rolb
mov
mov
pop
and
insb
mov
sbb
test
cmpb
imul
outsb
mov
sub
fistps
sahf
sbbb
pop
sbb
out
mov
pop
das
lods
aad
mov
sub
add
or
jnp
or
fwait
or
or
mov
bound
jnp
or
pop
loopne
test
adc
test
add
cli
cmp
lods
xor
dec
xor
mov
push
loope
inc
jae
push
and
stc
adc
xchg
dec
lock
pop
or
sub
xor
aaa
jle
pop
cmp
jmp
lods
sub
pop
rolb
sahf
dec
cmpsb
stos
adc
cmpsb
es
in
adcl
frndint
sub
push
sub
jne
mov
pop
loop
xor
adc
jae
arpl
cs
cmpsb
pop
out
cld
lods
cmp
mov
cli
imul
int3
std
bound
out
push
outsl
std
repz
adc
add
sub
and
mov
dec
xchg
repnz
pushf
repnz
mov
loop
mov
mov
cli
scas
cltd
xchg
push
jo
or
or
pop
xor
arpl
pop
pop
push
clc
out
ret
das
pop
fcompl
pop
das
lcall
jle
loopne
lret
les
and
jmp
jl
fwait
add
xchg
add
xlat
in
cmp
mov
dec
insl
add
pop
adc
std
mov
lock
xor
mov
dec
pop
inc
inc
lcall
adc
int
les
mov
mov
lods
jnp
mov
push
lahf
stc
and
mov
arpl
mov
jecxz
sti
movsl
pop
dec
ret
dec
orl
jl
or
rsm
inc
aas
loopne
xor
test
stc
xchg
xchg
adc
inc
push
pop
sbb
dec
dec
sbb
in
pop
add
mov
pop
jle
loop
ss
mov
lcall
adc
dec
out
popa
mov
scas
adc
out
mov
sub
pop
test
mov
popf
loopne
sbb
sbbl
loop
fcmovu
sarb
gs
dec
insl
lahf
mov
sahf
hlt
pop
sti
movsl
mov
push
sahf
nop
jne
push
nop
test
push
insb
dec
mov
out
bound
out
insl
mov
inc
xchg
jbe
and
pop
and
lea
mov
mov
lahf
enter
cmp
imul
scas
scas
adc
pop
stos
mov
xor
adc
push
add
enter
scas
btcl
cmp
hlt
in
lahf
sar
jb
sbb
add
inc
push
and
xchg
lds
xchg
adc
inc
mov
jae
mov
mov
jno
lods
je
and
mov
call
inc
push
jae
mov
adc
outsb
mov
enter
cwtl
xchg
aam
lret
lds
and
cs
or
dec
es
aaa
push
out
adc
negb
mov
js
mov
int3
bound
add
cmp
sub
es
out
cltd
mov
add
loop
in
pop
xchg
mov
mov
inc
movsl
shl
pop
mov
pusha
insb
or
jmp
and
lds
cmpsb
ret
push
dec
jns
sbb
jl
arpl
and
push
and
and
aas
int
mov
cmp
popa
imul
xchg
pusha
bound
stc
cmp
mov
psubd
sub
test
mov
jl
int
pop
mov
ds
pusha
inc
dec
jge
sbb
aad
imul
insl
sbb
mov
je
xlat
fnsave
mov
mov
insb
xlat
and
int
in
add
pop
lret
mov
push
daa
mov
xor
push
cwtl
and
pop
ficompl
clc
pop
push
mov
or
add
je
iret
lcall
cmpsl
stos
int3
ja
pop
inc
lret
icebp
xchg
popf
stos
rolb
mov
pop
inc
xlat
ss
sbb
cmp
imul
adc
movsb
and
xorl
stos
ds
sub
out
es
je
dec
xor
in
clc
mov
or
sarl
mov
bound
divl
inc
add
sub
push
addr16
pop
xor
mov
sbb
out
gs
outsb
test
jae
push
xchg
clc
or
push
xchg
lret
pop
shrb
insb
shll
test
adc
bound
push
mov
sarl
imul
xor
aad
inc
sub
or
adc
fwait
hlt
or
pop
std
int3
xchg
jp
push
mov
add
and
sub
test
cmp
loope
hlt
and
dec
fisubs
and
push
adc
mov
sbb
fnsave
mov
bsf
pop
das
in
fnsaves
je
cmp
push
int3
lods
pop
popf
dec
add
ljmp
aad
xchg
mov
roll
inc
sti
roll
cmpsl
xorl
nop
iret
mov
insl
dec
lods
scas
mov
clc
popf
mov
orl
push
cmp
cmpsb
push
mov
xor
data16
push
popa
add
rol
iret
or
out
lds
ds
sbb
idivl
les
lret
jb
call
outsb
sub
ficoms
jns
dec
outsb
mov
adc
jp
push
lods
aam
fs
outsb
sbb
das
xor
adc
rorl
xor
dec
push
movsb
inc
pop
dec
dec
xlat
in
movsl
xchg
mov
stos
add
dec
nop
or
aad
out
xor
xchg
push
repnz
dec
loopne
cmc
mov
lock
mov
leave
filds
test
pop
cmp
xor
mov
loope
adc
scas
in
stos
push
lret
push
mov
pop
outsl
repz
loopne
mov
sub
pushf
dec
adc
loope
cld
inc
rcl
sbb
das
daa
push
mov
add
movsl
pusha
les
push
or
popa
ss
adc
fimull
cmpsl
lahf
ficomps
adc
cmp
dec
icebp
test
popa
decl
lods
xor
lcall
inc
cwtl
js
andl
pop
add
cli
pusha
dec
fidivrs
sub
sbb
mov
sbbl
jle
lahf
insl
cwtl
popf
sbb
mov
outsb
mov
pusha
mov
pop
pop
mov
scas
dec
adc
sbb
xor
mov
cmp
mov
xchg
enter
out
xchg
mov
pushf
movsb
push
cmp
fs
pop
jb
xchg
inc
inc
pop
hlt
push
hlt
jnp
pop
dec
inc
flds
shlb
in
je
cld
sub
outsb
xchg
out
jb
cmp
lret
rclb
dec
mov
sub
popa
dec
sub
addr16
dec
mov
sbb
xchg
jae
xchg
enter
inc
sbb
insb
mov
mov
xchg
lret
mov
jmp
cwtl
sub
scas
hlt
mov
lock
pop
pusha
push
sbb
divl
enter
lock
jp
arpl
cmp
pop
dec
xorl
sahf
sbb
mov
data16
inc
pop
arpl
and
adc
jnp
add
leave
mov
xor
xchg
adc
mov
repz
jge
or
out
out
xchg
sub
fiadds
xchg
cmp
push
stos
test
arpl
adc
shrb
rolb
int
shrl
je
insb
cmp
int
or
push
rol
mov
hlt
mov
jge
jo
scas
lock
fwait
ret
sbb
lods
cmp
mov
test
push
lods
je
insl
pop
imul
and
ficompl
inc
sti
cmpsl
adc
movsl
int
pop
fnsave
inc
aam
arpl
loope
fcoml
iret
jns
mov
dec
jecxz
outsl
xor
adc
les
bound
jb
and
jle
inc
jmp
inc
mov
pop
mov
inc
loop
jge
cld
movsl
xchg
leave
loop
jns
push
dec
sbb
jo
test
cmpsb
nop
in
xchg
jo
push
lods
loop
imul
jmp
js
or
dec
enter
and
loope
mov
lods
mov
xlat
xor
arpl
fcmovu
frstor
push
outsl
in
movsl
xchg
ds
imul
popa
push
dec
jecxz
imul
push
rcr
dec
mov
cmp
sub
lea
in
stos
test
repnz
test
das
into
jmp
mov
mov
mov
and
orl
loop
fbld
or
loope
popa
cmp
outsb
mov
sbb
stc
pushl
jb
imul
lahf
dec
add
xchg
test
lods
xor
jg
enter
add
xchg
and
push
sbb
mov
shrl
sub
dec
mov
insb
fucomp
xlat
insb
and
in
xchg
add
xchg
adc
fsub
arpl
pop
cmp
in
nop
pop
mov
xor
sub
je
jne
jge
dec
dec
outsb
call
push
out
jae
inc
add
and
popa
es
mov
test
jl
mov
outsb
xor
mov
pop
inc
inc
jnp
mov
ss
gs
push
add
adcl
int
js
push
faddp
pop
outsb
cmp
insb
pop
push
mov
xchg
or
ror
enter
cmp
lret
cmpsl
scas
xlat
arpl
outsl
mov
ret
ds
xchg
push
hlt
sub
dec
in
int3
pusha
test
loopne
shlb
jmp
rolb
dec
mov
scas
dec
pop
mov
insb
adc
imull
dec
movsl
sub
imul
fcmove
loop
or
icebp
out
xchg
mov
dec
pop
rcr
jae
sub
push
into
scas
jne
adc
cmc
sbb
xchg
scas
mov
cmp
sub
fsts
scas
lret
insl
mov
ja
rorl
sti
das
pop
xchg
xchg
stos
mov
out
arpl
jbe
push
jbe
or
and
jecxz
add
stc
in
in
jae
movsl
sarl
and
mov
dec
jns
jb
push
or
rcpps
push
stos
loop
xchg
movsb
in
jp
call
xchg
sub
dec
out
xchg
or
lahf
mov
mov
pushf
dec
ret
xchg
cld
hlt
adc
push
subl
jo
jbe
es
inc
popa
repnz
or
clc
insl
ret
and
lea
addl
xor
je
dec
dec
repnz
das
or
or
and
sbb
push
mov
test
jp
and
ja
pop
addr16
cmp
daa
adc
leave
cmpb
shlb
iret
mov
cmp
jp
jl
test
out
lock
dec
sub
cmpsl
sti
cmpsl
rolb
in
sub
sbb
or
lods
jbe
lods
jg
push
add
mov
pop
repnz
sarb
pop
cs
mov
cmp
mov
loope
adc
cmp
js
mov
jl
call
ret
sar
cmp
mov
cld
ror
sub
push
add
or
inc
test
orl
sahf
xchg
mov
aam
pop
xlat
push
inc
add
negb
push
push
inc
xchg
test
out
andl
cltd
cmp
inc
push
mov
test
movsb
std
sbb
gs
movsb
lods
scas
pushf
aas
int
test
cmp
jmp
or
or
divb
sbb
mov
xchg
js
loop
push
cmp
push
cs
dec
popa
pop
cmc
es
push
testl
sbb
jbe
xchg
ja
shlb
cmp
dec
addr16
bound
mov
popa
cmc
std
loopne
fsts
pop
test
bound
and
popf
mov
lock
std
and
in
add
push
stos
push
ret
nop
mov
xchg
popf
sub
jp
xor
push
popa
int3
cmpsb
and
mov
sub
pop
push
and
and
leave
cmc
add
int
jb
mov
dec
xor
dec
repz
or
push
or
andb
push
int3
xor
push
add
sbb
inc
lahf
mov
icebp
rcrb
jnp
jae
imul
cld
into
xor
outsl
inc
cmp
enter
mov
jmp
scas
push
inc
pop
jbe
rolb
int3
fistpll
mov
add
mov
mov
test
mov
inc
jmp
mov
sub
push
xchg
les
jle
dec
mov
das
xchg
iret
cld
jno
jne
idivl
lahf
cmp
jne
add
imul
in
xor
dec
sbb
je
fwait
mov
mov
pop
jmp
push
enter
xor
mov
xchg
pop
sub
mov
adc
cli
pop
lds
popf
add
and
dec
inc
cmp
xor
pop
xchg
out
sbb
xchg
out
into
mov
lods
rclb
jmp
mov
subl
stc
xor
inc
int3
loope
mov
xor
dec
pop
outsl
cmpsl
sub
cmp
inc
or
mov
arpl
xor
jns
mov
mov
arpl
lock
mov
popf
std
cwtl
mov
int3
cmp
cmp
fdivrl
xor
int
dec
test
add
fwait
test
mov
sbb
jns
pop
and
in
mov
inc
and
cmp
in
jecxz
rorl
jbe
adc
fcomp
inc
sub
adc
loopnew
out
cmp
push
push
add
fwait
mov
pop
dec
sub
mov
xchg
push
add
sbb
xlat
jae
cmp
xchg
sar
bnd
dec
push
inc
mov
shrl
sub
gs
xor
sub
lcall
aam
pop
cs
jbe
add
lock
inc
jns
push
pop
imul
inc
xchg
mov
rorl
bound
loop
int3
repz
and
add
ret
mov
mov
mov
sub
dec
jmp
or
out
inc
or
xor
fwait
jns
adc
and
adc
lods
inc
and
lds
lcall
int
repz
sbb
loope
ja
jge
mov
pop
pop
sub
lea
inc
loopne
ss
inc
jp
fdiv
orl
pop
stc
pop
ja
mov
fwait
std
push
mov
cmp
inc
mov
out
mov
lcall
add
adc
and
cli
sbb
fisttps
jl
adc
xlat
pop
aam
inc
push
aad
jbe
adc
addl
aaa
iret
dec
jno
and
and
lret
repz
mov
dec
pusha
std
inc
fstl
arpl
gs
adc
pop
ljmp
dec
xchg
popf
lds
rcrb
lock
push
add
jmp
ret
xchg
push
xor
adc
sti
mov
iret
fisubrl
mov
sbbb
gs
xor
es
sbb
scas
lahf
xchg
rcrl
lahf
or
dec
sbb
ret
xor
dec
sub
xchg
dec
loope
cmpsl
push
mov
mov
icebp
pop
les
imul
aaa
dec
jecxz
je
lea
sti
xchg
les
outsb
adc
popa
jne
fildll
sbb
lods
aam
jmp
movsb
insl
aam
inc
sti
pop
aam
imul
mov
cmc
mov
jns
mov
jne
or
inc
push
and
sahf
and
rcrl
cli
icebp
mov
xchg
cmpl
ja
test
pop
inc
or
lcall
shrl
lds
sbb
or
mov
test
or
mov
xchg
loopne
aad
xchg
in
aam
mov
bound
dec
adc
icebp
insl
lods
out
jp
add
xchg
sub
scas
push
pop
xchg
cmp
xor
push
jg
dec
add
add
xchg
mov
cmp
xor
xchg
mov
sbb
imul
movsl
inc
add
hlt
and
mov
fwait
lea
test
mov
pop
je
scas
out
clc
sbb
jns
jae
and
cmp
inc
push
mov
xchg
pushf
imul
imul
ss
jge
fmull
mov
out
flds
jo
xchg
push
inc
mov
adc
and
stos
xchg
sub
inc
add
pop
pop
fiaddl
fcom
ror
subl
out
xchg
fwait
push
dec
fwait
lahf
mov
rorl
icebp
stos
cmp
int
sub
xor
imul
rol
mov
adc
in
inc
sub
sub
inc
adc
les
iret
xchg
lahf
push
cwtl
repz
pop
mov
add
stos
push
int
pop
mov
fsubrs
fildl
cli
dec
cld
and
insb
das
xor
mov
dec
rcrl
pop
pushf
jecxz
insl
and
shl
mov
xchg
push
hlt
adcb
sbb
fstpl
shrl
jle
cmp
lahf
jno
andb
sbb
xor
in
sbb
or
cmp
gs
pushf
mov
inc
jbe
movsl
push
cmp
icebp
pop
add
pop
movsb
adc
adcb
mov
add
psubsb
fimuls
adc
inc
push
test
dec
mov
jmp
scas
lea
fildl
pushw
sarb
mov
dec
cmc
loope
imul
add
nop
push
xchg
mov
and
shll
adc
iret
push
imul
add
dec
test
adc
cmp
mov
js
clc
mov
js
sahf
mov
pushf
or
pop
pop
jp
and
mov
int3
mov
mov
push
xor
dec
adc
stos
xchg
push
rol
and
dec
ret
mov
stos
inc
adc
outsb
push
iret
xchg
xor
xor
sbb
hlt
mov
mov
push
add
cmc
xor
pop
dec
jg
push
mov
or
mov
push
jns
leave
jg
es
repz
mov
xor
lret
lods
jl
out
push
pop
inc
xchg
ss
mov
addb
inc
adc
push
cmp
pop
pusha
cmp
lods
xlat
sbb
movb
push
mov
pop
data16
mov
loop
or
adc
and
pushaw
shlb
out
adc
xlat
jo
setbe
mov
pop
push
push
jg
xchg
inc
lea
or
mov
pop
inc
mov
add
daa
mov
out
xor
enter
jbe
out
shrl
mov
and
sub
jno
pop
xchg
ret
mov
orl
lock
xor
sbb
adc
outsl
xchg
push
fnstcw
fcmovu
xchg
pop
add
outsl
adc
mov
inc
popa
jb
aam
test
sbb
in
pop
loope
push
add
mov
mov
mov
adc
jl
inc
popa
inc
rcrb
jno
adc
sahf
cmp
sbb
loope
mov
or
test
test
fmull
mov
jmp
jns
jb
jns
cmp
pop
pop
sbb
jmp
pop
and
mov
xchg
and
clc
pop
pusha
dec
jmp
mov
push
sub
mov
jnp
sub
pop
movsl
repz
insb
mov
sti
fmul
xor
dec
and
std
popf
xchg
sarb
loopne
mov
loop
jp
inc
adc
insb
xor
sbb
cmpsb
adc
and
les
aas
or
and
fmul
sbb
mov
and
adc
jg
das
loopne
sub
bound
lret
rolb
mov
testb
mov
lods
ret
or
int3
sbb
cmp
pop
jl
sbb
fdivp
in
push
or
jp
shlb
bound
add
push
pop
std
cmpxchg8b
inc
fwait
jb
dec
sub
fdivl
jmp
push
scas
sbb
aas
mov
fistpll
cld
xor
pop
mov
pop
mov
les
jae
add
sbb
jbe
jno
ja
fnstsw
inc
sub
mov
add
gs
xchg
mov
push
mov
lahf
jp
xor
loope
jg
dec
push
mov
arpl
sub
scas
push
out
xchg
lret
cltd
or
sbb
stos
shrl
mov
out
inc
js
sti
cmp
or
jge
in
push
cmpsl
iret
sub
out
lahf
push
sti
fiaddl
out
outsb
sti
cs
dec
pop
loop
popa
or
arpl
inc
cmp
push
out
test
adc
imull
cltd
push
insb
into
movsl
inc
lds
and
outsb
push
mov
cmp
cld
shl
nop
iret
adc
jecxz
push
jae
std
mov
in
sub
insb
xor
and
inc
and
bound
in
scas
pop
fcompl
int
stos
cmc
ja
test
fimuls
fwait
pop
in
jp
lods
pop
andl
mov
bound
xor
popf
cmp
push
mov
ljmp
out
cmpsb
popa
jns
mov
jae
adc
cmp
inc
sbb
loop
fs
ret
and
jmp
mov
loopne
cmp
rcll
cltd
sbb
mov
mov
rcl
mov
xor
out
cmp
push
popa
loopne
xchg
xor
aam
call
add
inc
loopne
cmp
xchg
adc
mov
jnp
pop
jbe
mov
or
push
mov
addr16
out
inc
repz
addr16
mov
dec
adc
jbe
stos
pop
dec
out
iret
daa
gs
mov
loopne
jge
mov
pop
sbb
sbb
add
negl
out
push
jns
push
out
or
sahf
sbb
cwtl
insl
out
test
mov
inc
and
jmp
popf
leave
movsl
cld
fnstsw
ficompl
call
pop
mov
fidivrl
pop
out
and
add
lods
sub
repnz
and
sbb
stc
push
iret
xchg
in
shlb
mov
or
dec
ljmp
push
adc
or
in
es
pop
fwait
mov
outsb
cmc
mov
lcall
jge
adc
cmp
call
adc
outsb
std
aas
or
sbb
push
push
rcr
insl
int3
lret
cli
mov
pusha
out
out
jno
xchg
popa
fistl
mov
ret
ficomps
cltd
xchg
push
lahf
stc
mov
outsb
adc
pop
mov
ja
mov
clc
mov
cmp
xchg
arpl
mov
stc
leave
std
jg
jmp
out
movsl
ret
mov
cmp
dec
fisubs
ja
popf
mov
mov
test
bound
ljmp
jmp
outsb
cmp
andl
xchg
pop
or
cmc
push
mov
inc
les
xor
in
xchg
xor
jmp
data16
jns
sub
mov
lods
lahf
aaa
mov
xchg
fcomp
pusha
out
js
fdivl
fbstp
sahf
fwait
pop
jb
mov
and
faddl
dec
dec
cmp
jge
mov
or
jle
xchg
mov
lds
mov
stc
cmp
pushf
and
dec
sbb
add
fimull
sub
out
out
or
shrb
mov
mov
addl
rcll
and
mov
dec
inc
dec
lds
cs
mov
inc
lods
scas
cmp
mov
sub
pop
dec
mov
jl
sub
sub
or
adc
xchg
or
pusha
test
out
insl
mov
shrb
inc
jnp
cmp
test
push
lods
dec
add
xor
loop
xor
push
pop
mov
cmp
mov
lock
int3
test
lea
push
mov
leave
mov
mov
cmpsl
or
sub
movsb
mov
in
jns
mov
lcall
pushf
jle
or
lcall
jns
mov
xor
mov
sbb
push
mov
scas
adc
adc
dec
loope
pop
mov
mov
sub
xchg
xor
pop
test
sbb
jg
add
and
lds
rorl
inc
out
cmc
push
mov
movsb
xchg
jns
pop
call
push
outsl
arpl
movsb
mov
and
mov
mov
aas
lods
mov
add
push
lods
push
cltd
arpl
mov
aas
ds
jle
cmpsl
mov
cmc
push
fistpll
dec
jns
ret
and
fcom
mov
and
add
jl
nop
inc
xor
xor
icebp
or
cmc
sub
pop
mov
stos
loope
out
ficoml
xchg
dec
sbb
cmc
inc
mov
test
xchg
rorl
mov
es
out
bound
push
push
ljmp
fcomi
mov
hlt
dec
xor
sub
push
xchg
cmpl
mul
sub
mov
rep
ret
cmpsb
repnz
out
push
xor
mov
test
xor
pop
push
push
mov
xchg
and
inc
fstps
cmp
jae
sbb
jge
push
fbld
xor
sti
lahf
xlat
add
mov
dec
es
int
sahf
popl
dec
fndisi(8087
xor
mov
mov
push
mov
xor
es
cmp
jge
xchg
and
and
push
pop
cmc
outsb
lods
mov
xorb
xchg
jecxz
out
cmp
and
cmp
out
cwtl
cmpl
daa
scas
push
fs
es
gs
and
stos
scas
stc
inc
outsl
mov
push
adc
popl
outsl
subl
orl
arpl
out
push
push
mov
ret
and
xor
fs
adc
xchg
mov
cltd
fidivs
mov
dec
push
jne
jae
lret
mov
fildl
lock
xchg
xor
aaa
jl
scas
mov
push
mov
mov
add
jl
out
imul
adc
movsl
jno,pt
cmp
cmpsb
test
mov
or
aam
mov
int
and
std
cs
adc
int3
push
std
sub
push
insl
push
loopne
and
fstpt
sti
inc
mov
imulb
outsl
push
jbe
ss
dec
in
pop
inc
shrl
into
xchg
cmpsl
or
and
lcall
cmp
cmp
jns
ljmp
push
dec
cmp
jge
movsl
repz
movsb
jecxz
repnz
jl
les
cmp
movsb
jl
xchg
jbe
in
inc
push
pop
sub
mov
mov
insb
scas
in
or
es
into
xor
or
add
notb
adc
shlb
int3
lret
push
aam
cmp
scas
std
xchg
sub
xchg
scas
xchg
xchg
dec
fsubs
cmp
iret
mov
fisubs
inc
push
pop
nop
imul
lret
scas
popl
rolb
push
or
mov
push
jne
rclb
and
cmp
es
adc
mov
sbb
inc
repnz
dec
out
jb
lods
sub
mov
sbb
mov
adcb
xchg
lock
das
pop
and
inc
adc
in
cltd
push
mov
in
vmovdqa32
loope
nop
outsl
shrb
jno
push
add
imul
dec
xchg
out
repnz
sbbl
scas
sbb
and
ret
jae
adcb
add
cltd
push
fdivl
xor
dec
mov
in
xor
mov
xor
jle
stc
mov
ret
call
jl
add
jp
test
jp
lods
pop
push
xchg
mov
movsl
insl
ror
add
sarl
cmp
lahf
fs
jl
mov
lds
dec
push
std
addl
pop
mov
xor
sbb
xchg
insl
repnz
fisubs
es
inc
in
shlb
xor
pop
mov
call
mov
push
jmp
test
and
pushf
jae
adc
lock
mov
push
xor
pop
mov
fldt
fildl
hlt
jnp
adc
pop
jne
xchg
inc
push
lds
imul
lret
jns
dec
xchg
sub
dec
orl
sub
cmpsb
clc
jecxz
inc
mov
stos
cmpsb
out
xchg
ret
pop
mov
insb
ja
xor
mov
sub
push
adc
add
imul
leave
fmul
leave
adc
lret
bound
lods
test
push
or
fwait
add
inc
arpl
ret
xchg
inc
sub
xchg
sbb
sub
xor
outsb
aas
daa
jge
fcompl
adc
into
repnz
or
cld
mov
pop
std
inc
les
inc
movsl
mov
and
cmp
in
roll
add
and
test
rcll
pop
sahf
pop
dec
arpl
addl
mov
int
fdivrl
jno
lock
push
jns
push
in
cwtl
ljmp
outsb
scas
sahf
fwait
add
inc
mov
imul
daa
mov
cmp
cld
lret
sub
aaa
mov
bndstx
pop
mov
inc
es
dec
mov
inc
dec
outsl
mov
xchg
hlt
mov
mov
pop
test
lret
out
movb
lods
lods
xor
fnstcw
lock
pop
xor
mov
ds
dec
or
pushf
std
stos
out
iret
push
ljmp
push
hlt
add
adc
pop
sbb
addr16
jmp
dec
add
aad
add
cmc
adc
jg
lods
dec
ret
movsl
jbe
rorb
add
cld
int
stos
out
cli
jmp
loope
pop
popf
xchg
gs
inc
cmp
dec
loop
lock
xor
push
inc
fs
jmp
out
into
push
and
icebp
pop
adc
or
ficompl
ja
mov
pop
xchg
js
push
lods
mov
jecxz
movsl
push
cli
std
inc
loop
pushf
in
dec
push
sub
dec
repnz
lret
sarb
ret
push
pop
in
stc
push
jno
xchg
inc
mov
fmull
stc
notb
sbb
mov
and
lods
sub
je
arpl
js
add
mov
test
inc
bound
jo
ror
repz
mov
cwtl
mov
xchg
add
cmp
mov
xchg
jp
lcall
xorb
xor
mov
or
sbbb
imul
push
mov
sub
icebp
paddsw
lods
pop
and
xor
push
push
divb
lea
iret
mov
repz
mov
mov
and
cmp
notl
outsb
dec
or
es
adcb
xor
dec
mov
je
faddp
clc
sbb
xor
js
incl
adc
dec
jmp
aam
cmp
aad
popa
pop
ja
aaa
inc
call
push
sbb
call
lods
or
ss
adc
lea
ret
out
mov
call
aad
and
int
sub
jae
jecxz
data16
test
in
loopne
fs
jne
fistl
add
dec
bound
ficoml
mull
xchg
jle
cwtl
bound
bnd
push
lret
popf
in
rcrl
fbstp
pop
sbb
adc
dec
mov
dec
out
mov
jecxz
loope
pop
push
ljmp
push
arpl
std
sub
pop
insl
lea
fidivs
or
inc
cmpsb
push
pop
xchg
cmc
or
mov
out
ja
pop
cmp
cmp
iret
sub
push
jno
inc
xchg
addb
jno
lods
enter
scas
rcrb
inc
sarl
pop
mov
or
xchg
addl
add
add
into
outsl
sub
loop
push
lods
stc
ret
push
jno
cltd
jg
jo
jns
js
test
repz
repnz
imul
js
movsb
daa
test
or
or
fisubl
inc
popa
outsb
dec
mov
jne
mov
fstpl
jae
sub
imul
testl
sbb
test
cmp
mov
xor
fisubrl
cmp
push
jnp
sbb
adc
jmp
sbb
xchg
adcb
repz
mov
outsb
inc
cwtl
loop
jo
ds
sbb
and
scas
or
fwait
mov
pop
or
add
and
lea
jmp
jo
push
outsb
inc
in
addr16
push
lea
xlat
jmp
nop
sti
jecxz
jns
loopne
dec
lods
push
sbb
outsb
add
mov
in
or
jmp
jne
pushf
movsl
jns
scas
pop
and
pop
or
push
inc
add
fcmovnu
mov
adc
lahf
push
lds
add
fstpt
xor
repz
bound
push
aaa
mov
out
adc
fnstenv
sbb
enter
in
push
push
fimuls
ds
and
jmp
pop
test
xchg
into
add
push
cmp
mov
inc
int3
insb
xchg
out
lock
repnz
pop
add
push
or
jg
dec
arpl
sbb
scas
and
sti
mov
sub
aas
ret
push
test
leave
xor
mov
or
mov
popf
lcall
mov
mov
add
test
push
mov
mov
dec
in
pop
jle
call
addr16
lret
nop
loope
cwtl
push
fst
dec
and
mov
mov
push
xchg
xchg
daa
insb
rcll
pop
dec
adc
mov
inc
mov
out
sbb
mov
sub
jno
pop
cmpsl
nop
insb
inc
inc
inc
in
mov
push
xor
aas
mov
or
gs
add
pop
out
sbb
popf
dec
mov
and
outsl
push
insb
filds
or
dec
sub
sbbl
popf
mov
lret
sub
inc
insl
sub
add
fmul
cwtl
sub
addl
mov
mov
leave
inc
adc
lods
es
jg
rclb
sbb
ds
imul
scas
insl
sub
mov
int3
andl
dec
loopne
cmp
push
addr16
and
mov
ss
mov
jp
xchg
les
cli
das
mov
cwtl
je
jno,pt
mov
sub
ret
ja
in
inc
out
pop
mov
add
outsl
inc
out
stos
bound
mov
dec
es
std
and
iret
xor
shlb
rep
sub
call
and
in
mov
loope
sbb
add
mov
push
mov
jl
mov
outsl
iret
pop
push
ss
popa
pop
movsl
jb
jbe
js
xor
out
imul
push
jno
xor
push
push
push
xchg
icebp
xor
imul
jmp
call
and
gs
or
addb
mov
jae
fwait
scas
push
mov
ljmp
mov
and
dec
sub
and
add
xor
call
or
cmp
xor
dec
int3
cwtl
mov
cltd
xlat
and
sub
xchg
cmpsl
out
mov
ljmp
idivb
lahf
xor
xchg
mov
dec
jb
and
or
jmp
xchg
sbb
pop
ss
sbbb
mov
arpl
pop
mov
jne
mov
pop
and
mov
mov
jle
inc
inc
sub
mov
sbb
lcall
jb
out
and
in
mov
std
push
mov
test
push
gs
stc
movb
mov
jecxz
mov
mov
adc
sub
repnz
lcall
pop
jp
insl
sub
push
mov
bound
aam
dec
jecxz
gs
nop
pop
jae
leave
test
sub
jge
fisttpl
inc
je
sbb
mov
inc
js
test
js
in
clc
out
xor
xchg
js
std
and
sub
loopne
push
cltd
sub
insb
pop
jmp
addl
jae
lods
in
jb
xor
cs
cwtl
pop
mov
adc
jb
lret
daa
stc
sbb
nop
xor
mov
jmp
addr16
ds
mov
mov
loope
xor
mov
push
cmpsb
mov
loopne
iret
insl
push
and
mov
fdivp
aam
imul
cltd
pop
shl
push
jle
adc
pushf
scas
mov
pop
stc
jle
or
aaa
enter
and
cmp
test
pop
int
mov
xor
mov
add
mov
mov
mov
sbb
mov
ret
and
stos
mov
jno
mov
inc
iret
mov
add
das
inc
cmpl
cmpb
jg
mov
add
push
add
rolb
cmp
or
jecxz
xlat
pop
mov
cmp
dec
aad
hlt
sub
cli
mov
fwait
push
insb
inc
or
bound
add
cmp
inc
and
aaa
push
ss
jbe
add
inc
adc
dec
lcall
pusha
push
or
test
push
or
scas
mov
or
out
ljmp
popf
lock
clc
add
dec
inc
mov
stc
in
adc
cmpl
push
repz
loopne
sbb
pop
inc
notb
cwtl
push
movsl
rolb
js
jno
sub
iret
xchg
cltd
test
xor
dec
rcll
mov
pop
sti
int
adc
sahf
jl
mov
mov
fwait
mov
adc
ucomiss
push
and
dec
dec
scas
pop
test
xor
dec
popa
push
and
dec
adc
cmp
mov
and
scas
xlat
stos
push
out
leave
sbb
cmp
sahf
mov
add
rcr
out
sbb
rcrb
push
add
add
and
mov
pop
and
cmp
jle
mov
adc
inc
gs
and
xchg
sub
mov
repnz
out
mov
std
mov
push
mov
in
sbb
fwait
and
repz
subw
pop
pop
push
push
hlt
mov
mov
adc
jns
or
mov
out
pop
push
popa
mov
adc
push
repnz
mov
sbb
and
shl
loopne
add
inc
scas
es
out
push
ret
dec
ljmp
popa
arpl
test
aas
mov
test
pop
daa
aas
xor
or
test
pushf
pusha
jno
fimull
inc
sahf
inc
stos
pop
ret
aas
mov
ret
aas
icebp
cmp
fldenv
shlb
std
mov
xlat
aad
sbb
ror
mov
faddl
outsb
jge
push
xorl
testl
out
jp
pusha
fisubl
cmp
rcl
inc
adc
scas
ljmp
int3
loope
inc
hlt
lahf
pop
jg
into
push
xchg
cli
dec
adc
lds
or
pusha
and
fidivrs
xor
stos
loopne
mov
xchg
sub
lock
xchg
popa
sarb
dec
mov
fwait
popa
dec
iret
xor
jmp
gs
and
adc
lea
insl
cmp
js
ja
push
sub
push
jnp
mov
cld
pop
dec
sub
inc
stc
dec
add
stos
scas
dec
jno
iret
adc
mov
bound
adcl
in
int3
push
fcmove
ret
inc
sub
imul
xchg
ret
and
popf
cmp
icebp
js
sub
jmp
cmc
push
inc
fidivrs
cmpsb
cmp
int3
push
jg
fdivrp
fisttps
call
aad
jge
mov
and
cmpsl
inc
mov
pop
notb
push
repnz
xchg
scas
sub
push
and
lea
cltd
arpl
inc
and
stc
mov
mov
bound
push
call
cmp
out
out
adc
or
cvtps2pi
fcoml
call
insl
les
and
idivl
shll
fimuls
negb
std
sub
movsl
out
and
loope
bound
dec
cmp
std
sub
sahf
fwait
push
adc
andb
pop
add
divl
jl,pn
dec
xchg
dec
xchg
clc
js
movsb
jb
fsubrl
je
xlat
jg
or
sbb
pop
sbb
pop
push
adc
pop
add
xchg
mov
sbb
xchg
push
adc
ret
mov
jge
test
xchg
sti
lcall
jnp
mov
fdivrl
add
adc
nop
sub
cld
movsb
jmp
bound
andb
mov
lahf
popf
jmp
fnstcw
mov
std
test
pop
or
int
ds
mov
jge
add
shll
daa
jmp
std
pop
aas
xchg
pop
sar
cmpsb
cmp
pop
jge
jge
int3
movsb
adc
cwtl
or
insb
mov
dec
xlat
inc
cmc
shlb
mov
shrl
mov
cli
outsl
movsb
push
pop
push
lea
inc
daa
sbb
cmp
push
inc
pop
int
sub
stos
sub
shll
pop
inc
xchg
daa
sbb
pushf
and
jnp
mov
je
push
int3
mov
sbb
clc
pop
ret
ja
shll
fs
push
enter
dec
xchg
and
rcll
add
stos
mov
jmp
rolb
push
repz
loopne
cmp
in
popf
dec
mov
fidivs
sarb
jae
and
cmp
and
cld
cld
mov
adc
sub
inc
jecxz
pop
xor
into
les
out
insl
push
out
jecxz
and
sbb
jl
dec
mov
mov
int
mov
xlat
sub
icebp
mov
push
stc
pop
andb
mov
cmc
sub
push
sbb
sub
mov
insb
cmp
out
icebp
sbb
jl
ja
dec
ret
in
adc
adc
dec
fs
jle
mov
jl
fwait
push
fsub
testl
cmp
or
jecxz
iret
pop
lret
push
jge
dec
push
mov
inc
jmp
pop
out
jp
jbe
xchg
je
std
push
xor
adc
sarl
jl
ss
push
pop
imul
iret
xor
jg
into
inc
mov
cli
xor
add
and
pop
out
or
jp
jg
xor
adcb
fs
repnz
pop
je
xlat
ljmp
jne
push
addr16
dec
scas
ret
mov
mov
sbb
xchg
add
sub
inc
push
pop
insb
inc
adc
or
inc
repz
cmp
mov
pusha
jle
std
xchg
and
dec
daa
dec
gs
push
dec
add
pushf
xchg
mov
and
adc
push
scas
das
fwait
dec
cmpsb
sub
test
cwtl
cmp
repnz
pushw
lds
and
les
lock
mov
mov
icebp
jmp
test
lock
xchg
leave
out
jecxz
inc
jmp
loop
es
js
push
filds
xchg
in
jmp
xor
je
mov
add
inc
sub
lret
ss
jl
rorl
cmp
stc
sbb
push
and
mul
cltd
pop
xor
add
ljmp
dec
fxtract
cwtl
jge
sbb
popf
lret
xor
push
ds
lock
fwait
iret
cltd
sbb
loop
imul
adc
jno
pop
mov
loop
sbb
or
addps
jb
sbb
stos
mov
call
fildl
push
addr16
pop
lods
roll
imul
rorl
push
in
sub
mov
mov
imul
loop
dec
mov
mov
repnz
inc
jo
mov
rcr
call
out
out
add
xor
pop
sbb
jb
setb
jns
lret
pop
add
sub
ss
roll
pop
scas
mov
jecxz
inc
push
int3
das
pop
add
mov
push
insl
mov
rolb
cmp
test
cli
jmp
mov
or
ret
loopne
shr
lock
mov
in
dec
lods
out
sbb
mov
pop
data16
xchg
negl
jge
je
add
ss
inc
int
out
cmp
fwait
out
xor
test
loop
enter
dec
cmp
loope
mov
adc
lahf
pop
mov
pusha
xchg
xchg
xor
add
mov
test
push
adc
pop
subb
movntq
sti
dec
ljmp
xor
ja
aad
clc
pop
addr16
adc
mov
lea
jecxz
inc
xor
and
sarl
cmp
cmp
outsb
xor
dec
gs
and
adc
dec
loope
pop
mov
pop
mov
push
lret
push
addb
xor
lods
or
sub
ffree
mov
cs
test
mov
es
pop
dec
ljmp
frstor
mov
mov
adcl
nop
mov
add
rcll
movsl
into
push
cmpsl
mov
jne
fimull
xchg
xchg
jb
cmpl
das
popa
data16
lahf
jmp
out
cld
imul
sbb
or
dec
stos
ret
fnstenv
push
lret
loopne
jae
cwtl
mov
les
imul
and
pop
je
pusha
pop
out
dec
jmp
sbb
aad
shlb
and
or
jp
out
mov
jo
mov
dec
jecxz
add
lods
push
mov
fidivl
pop
lock
xorl
lea
daa
pop
movsb
mov
sbb
sbb
in
sahf
pushf
out
insl
add
or
in
data16
inc
loop
es
adc
mov
pop
and
rcll
rorb
push
inc
sbb
sbbl
dec
aas
shrl
std
scas
pop
je
insl
repz
mov
jge
xchg
loopne
xor
xor
mov
lods
pusha
es
lea
mov
fwait
imul
popf
psubsw
inc
mov
out
in
mov
cmc
push
imul
pop
cltd
jne
mov
dec
adc
pop
inc
mov
aam
sti
pop
subb
add
clc
pop
test
data16
out
mov
jp
jb
cmpsb
shlb
ret
shrl
icebp
or
out
or
jbe
mov
xchg
dec
iret
jle
in
aaa
scas
ret
cmpb
xlat
cmp
pusha
mov
lds
call
push
jo
pop
mov
jne
pop
mov
and
sahf
ja
ljmp
fldl
sbb
push
movsl
lret
mull
pusha
sub
dec
xor
arpl
aad
and
sub
pop
mov
lods
lods
dec
jecxz
xor
fdivrp
cltd
cmp
jbe
dec
daa
and
enter
leave
andl
jge
cmpsl
cltd
mov
test
jo
call
repnz
xchg
inc
xlat
push
cld
ret
bound
popa
cmc
loope
or
ja
es
xor
and
jo
lea
jo
pop
or
and
pushf
and
outsl
inc
xchg
pusha
inc
dec
cmp
dec
fstpt
xchg
mov
inc
and
adc
std
mov
dec
int
pop
mov
push
sub
aas
mov
negb
pop
add
repz
stos
test
xor
fisubrl
xor
dec
arpl
fists
pop
xor
mov
jmp
push
pop
xor
loop
iret
cmp
adc
jno
ja
test
xchg
ret
dec
and
push
ds
int
pop
in
xor
lcall
and
fwait
dec
cmp
xchg
test
and
lret
jmp
test
jbe
fildll
loop
mov
lret
cmp
push
jo
dec
out
cmp
cld
mull
out
add
scas
sar
dec
dec
orl
mov
adc
out
push
xchg
sbb
cltd
push
adc
iret
in
and
mov
repz
scas
dec
filds
mov
xchg
sub
adc
bound
mov
je
push
mov
dec
sub
in
dec
dec
sub
push
fnstcw
mov
add
sub
dec
cmpsb
daa
sahf
and
xchg
out
decl
bound
xchg
test
and
xchg
push
inc
mov
cltd
cwtl
push
sbb
mul
cmc
daa
stos
ljmp
popf
jo
mov
scas
or
pop
cmpb
or
test
insl
je
or
shrb
fldl
xor
loope
and
shll
pop
or
xlat
imul
or
add
incb
or
movsl
sbb
arpl
jmp
xor
inc
xlat
add
aas
out
shll
pop
insl
sub
fwait
mov
ret
out
adc
jecxz
push
cmp
or
pop
aam
mov
fildl
and
jp
cmp
test
dec
mov
imul
cmp
jnp
call
fdivrs
stos
mov
xchg
gs
in
mov
outsb
pop
xor
shrl
jne
fisubrl
mov
icebp
cmp
pop
fistl
pusha
jmp
aam
jo
cli
loop
cmpsb
into
dec
jne
sbb
pop
lea
mov
negb
test
sbb
add
jecxz
aaa
cmp
mov
mov
sarb
adc
pop
fwait
mov
xchg
leave
sbb
push
pop
mov
out
mov
fiaddl
bound
jg
and
aas
imul
mov
xor
add
cmp
xchg
lea
xchg
shlb
mov
mov
dec
mov
cs
std
sarb
dec
test
sbb
or
pusha
fcmovnbe
inc
fst
mov
inc
pop
sbb
pushf
xor
in
cld
push
mov
ret
incb
add
or
inc
mov
out
mov
fwait
jno
xor
push
fisubrs
fs
and
and
jl
lret
inc
mov
or
mov
outsb
lods
xor
imul
jb
xlat
dec
gs
mov
xchg
pop
pop
aaa
mov
int3
push
mov
add
xchg
lods
clc
push
xor
enter
out
push
lret
pop
dec
mov
mov
jae
push
mov
call
sbb
inc
fwait
pop
aam
lret
push
xchg
pop
aas
fcmovne
xchg
gs
sub
inc
jb
sti
sub
test
xchg
push
daa
ds
pop
mov
in
push
pop
mov
cmp
pushf
xchg
xor
push
sbb
and
mov
pusha
mov
hlt
mov
jno
sub
and
adc
lahf
xchg
ret
ret
or
pop
bnd
xchg
jg
jo
imul
pmaxub
aas
fildll
adc
fcoms
lcall
movsb
test
popf
push
idivb
jae
inc
push
mov
lahf
in
xor
in
pop
xlat
or
sbb
popa
mov
sti
jmp
test
xor
cmp
rcl
pop
pop
xchg
stos
sbb
sbb
sub
xchg
mov
lret
cmp
ret
and
lahf
repnz
mov
rorl
dec
fidivl
cmp
add
insb
shrb
movsb
stos
jecxz
xchg
popa
loop
jle
sbb
js
mov
xor
adc
jns
loop
sti
xchg
lds
inc
and
test
lret
cld
ds
addr16
push
pop
mov
ljmp
dec
cmp
dec
in
aaa
xorb
jnp
cmp
inc
gs
push
clc
cmpsl
jb
lret
clc
lods
cmc
hlt
push
or
out
adc
dec
mov
das
ss
xlat
dec
push
cmp
in
incb
movsl
jae
nop
pop
rorb
pop
rorl
popf
int
daa
popa
pop
cs
cli
repnz
cmpsb
stc
or
lods
das
mov
cltd
mov
jbe
sub
add
cmp
push
mov
sbb
test
xchg
mulb
xor
cmpsl
or
enter
divl
arpl
mov
test
subb
mov
imul
push
xor
ja
add
repz
popa
jecxz
push
xorl
adc
fimull
clc
test
fidivrs
inc
mov
cmp
add
ja
xchg
dec
sbb
ret
sarl
or
cltd
xor
sti
imul
outsl
xlat
lods
cld
xchg
jns
xlat
and
addr16
jl
sbb
cmp
adc
push
sti
jmp
push
sub
mov
add
xchg
insb
jbe
outsb
mov
add
and
mov
xlat
xchg
fmuls
sub
and
imul
mov
push
mov
mov
and
shlb
out
sbb
ss
rcrb
mov
pop
out
mov
imul
sti
mov
ja
test
pop
ja
mov
xor
xor
and
mov
dec
mov
inc
sbbb
in
sti
aaa
les
in
jns
inc
jns
push
ja
mov
outsb
lahf
sub
insl
add
mov
bnd
les
imul
cmp
dec
xorb
imul
dec
loopne
jne
xchg
lods
cmp
or
out
inc
push
aad
fwait
scas
lahf
adc
cmp
mov
mov
orl
lods
mov
add
pop
lcall
outsl
or
pop
repz
pop
and
or
test
add
jo
or
cmp
mov
or
adc
xor
and
jb
mov
pop
or
loop
cmc
jb
mov
mov
pop
sbb
jo
push
sbb
cmp
scas
xchg
mov
jecxz
bound
sub
dec
mov
xchg
rclb
inc
mov
cwtl
pop
mov
push
add
add
inc
movsb
in
loop
cmc
mov
add
in
push
mov
enter
or
fcompl
rcrl
clc
add
xchg
fs
outsb
sub
dec
adc
and
fisttpl
movsl
testl
push
mov
jno
sbb
int3
std
lahf
mov
dec
add
hlt
repnz
add
insb
push
out
cmp
mov
add
imul
insb
jns
mov
push
sbbl
adcb
lods
mov
into
subl
in
je
push
stc
add
and
mov
mov
push
mov
repnz
sub
jecxz
add
and
push
inc
test
int3
mov
das
xchg
inc
aaa
addr16
enter
bound
push
ss
and
xchg
mov
jne
or
lret
cld
mov
dec
out
movsl
inc
test
pop
insl
loope
push
cld
lret
movsb
popa
in
repz
dec
int
in
lods
call
stos
or
imul
cmp
add
lret
pop
adc
mov
xchg
jae
mov
mov
jns
jg
jl
add
jge
dec
and
filds
pop
cld
add
lret
daa
enter
push
mov
and
dec
int
sub
inc
xchg
sbb
inc
sarb
mov
mov
and
pop
jnp
int
shrl
icebp
mov
cli
sub
xchg
pop
mov
add
inc
fisttps
int3
in
mov
in
fadds
pop
lahf
or
or
out
xchg
in
mov
mov
adc
add
das
rcrb
lret
xor
push
fwait
adc
arpl
inc
pop
pop
mov
fcmovne
or
xor
test
cmc
shrl
adc
push
insb
sub
adc
aad
jno
dec
loopne
pop
or
jge
into
scas
hlt
jg
shll
sbb
scas
stc
icebp
push
mov
xchg
lea
mov
popf
les
mov
jmp
aas
mov
das
je
scas
dec
daa
and
cmpsl
push
dec
cltd
and
into
mov
cwtl
mov
pusha
loope
mov
test
jbe
ficoml
dec
je
push
jecxz
xor
xor
rorb
mov
negl
push
mov
jno
mov
dec
daa
cmpsl
orl
cmp
arpl
pop
dec
mov
and
icebp
mov
outsb
or
test
mov
ffreep
je
test
and
icebp
sbb
movl
cwtl
mov
sub
add
inc
fcmovnbe
icebp
sbb
rorl
sbb
dec
push
test
daa
jle
mov
sbb
rcrl
sub
mov
test
cmc
pop
pushf
push
leave
inc
js
xor
dec
jnp
lds
cmpsb
imul
dec
mov
mov
pop
les
adc
fiadds
fs
testl
fsubrl
in
sbb
adc
cs
fwait
ja
xchg
mov
cwtl
or
fcmovnb
adc
lret
andl
or
inc
into
nop
pop
arpl
sub
outsl
mov
xor
push
test
pop
lret
xchg
cltd
dec
add
add
push
xchg
mov
adc
or
gs
js
ret
jbe,pn
gs
adc
lcall
sub
mov
lret
pushf
sbb
sub
push
pushf
pop
mov
lods
sub
xchg
mov
push
cmp
pop
outsb
jmp
dec
es
jle
fxch
jmp
stc
addr16
push
cmp
add
mov
ror
std
push
roll
test
sub
sub
jmp
jmp
sahf
add
xorl
fs
add
es
in
rcrb
dec
clc
jecxz
out
std
arpl
sbb
mov
cmp
xchg
and
out
mov
lret
xor
jle
dec
mov
sbb
push
ja
dec
jg
call
mov
add
fsubp
mov
cmpsl
cli
inc
mov
jns
in
test
outsb
inc
sub
adc
std
rcrb
stos
mov
sub
in
inc
sub
add
dec
and
pushf
daa
xor
insl
inc
addl
lds
push
add
out
jae
pop
mov
xor
scas
rolb
aad
xchg
mov
mov
leave
sti
js
cmp
dec
cwtl
outsl
jae
or
test
mov
add
cmp
mov
push
sarb
faddl
sub
icebp
and
lahf
scas
inc
shll
cld
adc
and
xlat
aaa
daa
iret
cmp
stos
pop
loop
sbb
sub
and
mov
jbe
std
xchg
pop
jle,pn
loopne
xor
push
xchg
push
nop
outsb
jnp
pop
add
sub
out
fstps
push
pop
dec
insl
mov
ja
jmp
inc
jo
popf
and
lret
xchg
fwait
cmp
subl
lods
pop
and
adc
ljmp
in
rep
out
mov
movsl
scas
adc
xor
jo
adc
lret
ja
push
icebp
int
js
insl
js
sub
leave
stc
push
aaa
jae
xor
movsl
cwtl
adc
std
ret
jno
fcmovu
pop
push
je
ret
jmp
mov
rol
into
rcr
sbb
xor
icebp
mov
cmp
inc
cmpsl
jle
inc
mov
dec
add
sarb
adc
pusha
cltd
iret
pop
out
rcll
adc
adc
stc
mov
cmp
xchg
imul
mov
or
dec
jle
popf
mov
lret
fs
xchg
mov
ljmp
jge
dec
sub
mov
add
mov
jne
mov
insb
out
jnp
jmp
push
dec
lods
mov
nop
aaa
jns
xchg
cmpsb
shrb
fstpl
cmpb
pop
call
sbb
jle
rorl
jg
sti
add
mov
add
adc
sbb
aaa
mov
dec
mov
mov
ret
jbe
shlb
and
sub
movsl
mov
inc
jbe
xor
rcl
sbb
stos
push
sub
mov
push
scas
or
out
push
call
stc
sahf
push
jo
pop
adc
sub
adc
cmp
xchg
sub
ret
mov
fldenv
cs
mov
in
lods
xchg
sub
js
or
cmpsl
dec
pop
jp
mov
mov
xchg
lea
out
call
sbb
or
lea
pop
or
xchg
or
cmpl
add
cmpsl
rcrl
mov
cmp
test
sub
cmpsb
jne
mov
pop
les
inc
repz
jno
adc
mov
les
jne
sub
out
xchg
inc
cmpsl
push
flds
add
mov
ds
ljmp
sbb
insb
cmp
and
adc
and
mov
imul
cld
arpl
mov
dec
lods
pop
mov
jecxz
dec
mov
lods
and
pop
sub
jg
je
jnp
push
or
lods
repnz
mov
mov
loop
movsl
mov
sbb
dec
je
push
inc
and
mov
ss
pusha
inc
xchg
nop
jns
sbb
loope
xchg
xor
rclb
ss
repz
and
xor
inc
inc
sbb
and
adc
enter
fwait
xor
in
scas
add
daa
cmpsb
arpl
pop
push
sbb
filds
imul
cmpl
sub
cmc
and
sbb
xchg
pop
inc
pop
dec
dec
inc
enter
mov
xchg
jnp
dec
jg
rcr
sar
pop
pop
lock
aam
ljmp
and
sbb
sub
mov
fs
scas
stos
call
pop
jb
lods
hlt
jb
repz
jne
mov
adc
jae
or
scas
ret
cmc
sub
cmc
xlat
sbb
je
popa
dec
pop
or
test
add
jge
imul
sbb
dec
jbe
add
mov
je
mov
fwait
inc
mov
jne
jmp
fdivrl
xorb
mov
xor
push
dec
in
dec
leave
inc
std
mov
rorb
shl
lea
mov
mov
loop
aad
cld
push
or
test
stc
xchg
mov
rol
out
clc
lock
sti
or
pop
lcall
rol
cmp
and
dec
das
out
adc
insl
xchg
xor
adc
pop
fistl
jae
popa
adc
clc
pop
push
ds
scas
popa
push
stos
mov
cltd
dec
pandn
js
xchg
fwait
sub
push
fidivrs
jg
ficompl
test
cmp
xor
mov
jmp
inc
lods
adc
push
inc
aam
inc
cmp
nop
cmp
lods
mov
fsubr
xchg
jbe
cmp
jp
push
adc
inc
scas
push
test
imul
imul
mov
xchg
sbb
jno
jmp
mov
mov
mov
or
pop
cmp
scas
repnz
lea
out
mov
push
sahf
xchg
das
sub
test
cmp
xor
push
and
mov
arpl
jb
test
mov
inc
jnp
stc
mov
cmp
xor
lahf
or
rolb
fisubrs
and
dec
inc
sub
fwait
push
test
lcall
sbb
sbb
sub
jecxz
cmp
push
das
add
xor
pop
pushf
dec
sub
and
repnz
pop
dec
fsub
jmp
dec
out
xor
mov
fdiv
push
inc
nop
mov
loopne
mov
inc
imul
fnstsw
stc
lsl
sub
outsb
out
add
fcoms
cmp
dec
icebp
xchg
sub
xchg
mull
inc
jecxz
or
jg
shlb
sbb
in
icebp
push
out
adc
pop
push
icebp
xor
or
push
cmc
cmpb
jle
es
dec
xchg
orl
test
out
out
sub
mov
push
pop
jae
add
cmp
sub
dec
stos
ds
mov
push
xchg
xchg
mov
sbb
mov
lds
push
push
dec
push
popf
or
aaa
into
loopne
scas
lods
mov
add
arpl
jge
mov
ret
lfs
icebp
mov
out
cltd
push
sub
pop
es
push
movzbl
mov
inc
and
or
rcll
rcl
jns
jg
xor
jle
fs
inc
or
call
jne
movsb
scas
sub
jge
outsb
stos
lret
mov
out
sbb
pop
lods
jg
xor
loope
mov
dec
call
subl
mov
mov
jge
jns
sub
fcompl
bound
add
in
jbe
mov
imul
pusha
xchg
mov
hlt
mov
rol
mov
lds
and
pusha
test
movsb
cmpsb
cmp
pop
pop
into
inc
test
dec
add
repz
cltd
insb
push
lret
das
nop
xchg
pop
xor
lods
addr16
hlt
mov
inc
sub
mov
xor
pop
push
and
xor
cs
fucom
jmp
cmc
test
sbb
cmp
sub
jg
xor
ja
sbb
pop
imul
loop
sti
dec
inc
mov
insb
popa
or
jge
enter
xchg
hlt
sbb
int
adc
out
dec
repnz
filds
sub
loop
sbb
jmp
pop
loope
cmp
lea
inc
pop
xchg
jl
pushl
pop
in
or
mov
mov
adc
pop
pushf
aas
icebp
repz
mov
mov
xchg
inc
push
jnp
test
aam
insl
inc
add
pop
ffreep
push
cli
and
cmp
push
jae
cli
xchg
push
cwtl
mov
dec
xor
mov
add
mov
and
lret
push
dec
addr16
and
int
imulb
inc
outsb
pop
rol
sahf
lret
mov
dec
pop
rclb
test
and
sub
dec
and
stos
and
pop
sbb
adc
and
repz
ds
xchg
xchg
test
mov
or
mov
fsubs
repnz
or
fwait
and
test
das
ds
or
sub
or
shll
ljmp
iret
jo
negb
mov
and
lcall
fisubs
int
jnp
xchg
scas
ds
push
cmp
inc
leave
arpl
adc
xor
lahf
or
xchg
jecxz
pop
imul
and
mov
dec
or
adc
pushf
nop
mov
cmp
mov
sarl
and
jbe
and
leave
into
mov
mov
test
shll
push
cmc
dec
sbb
adc
test
cmc
das
sub
out
xchg
mov
and
sub
xchg
int
fnstenv
push
push
xchg
adc
sbb
mov
in
push
int
xchg
pop
in
push
mov
push
adc
rolb
scas
mov
out
in
cmp
shll
dec
aad
mov
outsb
xchg
out
add
call
jne
fsubs
dec
ds
daa
mov
rcll
cs
dec
scas
mov
mov
push
xchg
mov
inc
cltd
add
inc
push
add
or
jp
sub
insl
mov
dec
inc
mov
cmp
xchg
stos
xchg
mov
or
imul
mov
repz
mov
or
test
pop
sarb
xor
loope
call
xchg
pop
popa
stos
pop
pop
test
lret
pusha
mov
mov
dec
cmp
add
jne
jmp
lret
iret
in
jb
sahf
insl
mull
lret
pop
shll
adc
gs
insb
or
mov
ror
inc
pop
cltd
xchg
dec
adc
xchg
les
fisttpl
sbb
dec
test
xlat
sbb
fidivrl
or
pop
mov
xchg
fcoms
xchg
ret
sub
jbe
mov
dec
popa
mov
out
mov
rorl
pop
xor
jle
ljmp
pop
ret
mov
push
sbb
or
add
fprem1
add
gs
sbb
adc
dec
loop
or
inc
xchg
orl
adc
jl
mov
call
in
cltd
repz
dec
test
rcl
or
gs
dec
loop
jg
jecxz
inc
imul
sar
repnz
xor
sahf
aam
sub
mov
mov
int
push
pop
lret
loopne
jp
inc
push
dec
pop
mov
and
and
fxch
sub
xchg
outsl
jnp
or
enter
rcrl
call
mov
sub
jnp
out
rcrb
ret
adc
dec
pop
push
mov
out
popf
fidivrs
xchg
ret
jl
popf
add
mov
scas
xchg
aaa
sbb
lret
xor
xor
out
mov
in
dec
pushf
arpl
stos
cmpxchg
fmulp
pop
xlat
push
repz
cmc
sti
sti
sbb
xchg
stos
pop
pop
jnp
cs
imul
inc
jg
push
dec
push
dec
mov
xchg
mov
mov
ret
stos
or
cld
xor
je
shl
jae
xlat
jge
hlt
jae
dec
ret
cltd
mov
xchg
pop
mov
ja
and
test
mov
je
js
fwait
adc
sub
dec
sar
or
sbb
ficomps
mov
lret
dec
cmpsl
imul
lea
lods
rcll
sbb
iret
mov
in
dec
enter
mov
inc
jo
ss
stos
xchg
jg
xchg
arpl
lods
movsb
xchg
shl
xor
sbb
ljmp
data16
add
test
sahf
ret
mov
adc
nop
aaa
mov
mov
adc
in
fistps
stos
das
subl
and
dec
aaa
add
pcmpeqw
loop
sub
cld
hlt
cmp
in
push
test
or
icebp
add
insl
rol
fstpt
mov
stos
jge
lea
inc
lret
dec
andl
adc
outsl
in
ljmp
xchg
leave
sbb
popf
sub
mov
ficoms
bound
cmc
js
cmp
jae
int3
jle
inc
inc
jmp
mov
loopne
push
vmwrite
pop
xchg
scas
and
scas
cltd
sbb
mov
out
ficoms
or
and
mov
mov
stc
dec
lahf
cs
in
cmp
jecxz
mov
and
adc
add
in
leave
stos
nop
inc
rcr
fnstsw
cli
jmp
dec
into
dec
enter
adc
pop
stos
inc
clc
addr16
jns
mov
mov
popa
cmp
mov
sub
dec
mov
xchg
cmp
push
xor
and
xor
fadds
jne
enter
and
in
inc
cmpsl
pusha
mov
bound
mov
push
fidivrl
lds
mov
add
push
inc
inc
add
mov
xchg
dec
dec
jl
test
mov
cmp
inc
bound
les
sar
movsl
sub
dec
dec
jno
sahf
daa
add
push
mov
ds
mov
enter
push
and
and
aam
sbb
orb
pop
pop
push
test
lret
xor
sbb
into
std
repz
pop
cltd
ds
fiaddl
xchg
xlat
aas
xchg
pop
scas
lret
adc
jne
adc
jns
lret
lock
pop
lds
mov
push
xor
xor
pusha
jnp
mov
lods
bound
scas
mov
aad
sahf
push
rorl
mulb
aad
xchg
lret
hlt
mov
dec
adcl
mov
cmc
cmc
pop
add
movsb
mov
add
imul
mov
mov
adc
jns
adc
fstpl
out
add
pop
pop
dec
jns
ret
xlat
add
mov
adc
adc
stos
sbb
arpl
dec
cmp
movsb
outsl
lahf
xchg
fwait
mov
ja
mov
das
shrl
jg
stos
and
loop
sbb
mov
jbe
nop
inc
jnp
sub
sub
js
fnstsw
ds
cmc
pop
mov
mov
and
jl
jg
jno
adc
scas
mov
fcmovnbe
sahf
fldenv
mov
sahf
push
popw
mov
sbb
sub
notl
adc
orl
dec
jmp
bound
filds
test
dec
les
inc
and
inc
nop
xor
pop
rorb
cmp
sti
repz
stos
fwait
in
fists
jno
adc
adc
inc
mov
jle
mov
fs
sub
in
in
mov
out
lret
push
loopne
mov
sub
aas
adc
push
jle
pushl
data16
dec
push
lcall
pop
ret
pop
fsubl
aad
js
jno
outsb
adc
adc
mov
and
rolb
rcrl
arpl
das
push
pop
push
cld
sub
pop
rclb
or
das
call
inc
mov
addl
push
and
cmp
mov
adc
push
repz
ret
xor
adc
std
in
add
add
inc
mov
xchg
movsb
push
test
out
lds
xchg
lret
and
dec
rorb
or
in
movsl
cld
int3
das
inc
jo
int3
adc
aas
push
stos
adc
and
imul
sub
ljmp
std
iret
jecxz
lods
cmp
ret
cmp
test
je
cmp
and
mov
sbb
mov
setbe
adc
cmp
shl
pop
sbb
xor
mov
lods
add
pop
mov
push
inc
sub
or
rol
mov
dec
push
push
popf
out
pop
adc
mov
fstps
adc
mov
mov
stos
add
movsl
mov
mov
scas
mov
adc
dec
mov
inc
cmp
mov
daa
outsb
rolb
insl
or
or
in
repz
mov
add
sub
jmp
inc
jp
out
test
jae
out
mov
out
mov
scas
sbb
add
hlt
jge
push
imull
mov
out
adc
and
mov
mov
andb
or
lods
cmp
cmp
insl
add
loopne
fwait
push
cld
rcll
push
imull
or
mov
out
push
loop
popf
int
cmpsl
dec
sbb
mov
mov
dec
out
pop
jns
mov
pop
test
jecxz
sbb
testl
push
imul
negb
in
mov
mov
xchg
clc
clc
fs
xchg
imull
leave
inc
xchg
adc
and
mov
mov
imul
stc
dec
or
mov
sti
in
js
add
jno
in
clc
and
dec
cmp
sub
cmp
cmp
push
mov
test
mov
xor
cs
testb
jne
cld
xchg
cld
push
xor
leave
jp
out
add
xor
icebp
or
adc
and
cmp
addr16
adc
aaa
hlt
add
fnsave
shrl
lea
mov
lds
test
out
lcall
and
xchg
jne
cld
jns
int3
icebp
mov
sub
daa
insl
mov
test
icebp
outsb
imul
or
fcmovnb
xchg
mov
push
movsl
jl
nop
xor
mov
xchg
subb
jmp
push
or
jb
push
and
push
cmp
pusha
jno
lea
inc
fxtract
jge
repz
pop
mov
push
xchg
repz
inc
dec
push
jne
sbb
in
mov
stos
ds
fistps
sbb
sub
sbb
sbb
jo
mov
or
mov
xor
lock
jmp
divl
out
fldenv
fldenv
xor
mov
fsubl
nop
xchg
std
and
stc
icebp
mov
xchg
pop
test
mov
loopne
dec
pop
jb
test
ja
sub
cltd
and
pop
ficoml
xchg
xlat
pop
mov
out
sbbl
mov
movsl
pop
mov
mov
jae
fnstsw
fwait
shlb
jge
lods
add
jae
mov
adc
iret
mov
pop
pop
push
lods
shrl
pop
push
mov
or
pop
cmp
lods
xor
mov
mov
js
scas
in
imul
dec
add
movsb
adc
or
movsb
xchg
das
xchg
jp
dec
lcall
or
dec
ret
or
psrlw
rorb
fiaddl
dec
or
divl
fidivrs
lret
ss
fwait
das
in
sbb
dec
push
xchg
inc
mov
enter
mov
adc
jnp
test
fnstenv
in
cmp
lret
push
pushl
ficompl
mov
and
mov
fildl
outsb
roll
sbb
xor
mov
loopne
rcrb
decb
pop
mov
mov
jns
data16
loopne
dec
jl
sbb
pop
in
rcr
cmc
test
adc
jne
out
rcll
dec
xor
lock
gs
xchg
and
and
daa
dec
or
int
dec
cmpsb
jnp
fbstp
push
ret
nop
xlat
jmp
cmp
out
int
cli
cltd
push
lret
fildll
lahf
cltd
shlb
add
mov
mov
sbb
aad
pop
mov
ljmp
popf
rorb
aad
and
bound
test
jb
jmp
dec
pop
xchg
push
ds
test
xchg
dec
lcall
loop
jle
pusha
pop
addl
pop
jecxz
jecxz
jnp
mov
test
push
sub
loope
cmp
fcomps
pand
push
mov
push
cli
es
and
xchg
add
cmpsl
and
jg
jl
add
outsb
dec
jg
addr16
push
sub
sub
or
je
mov
mov
ret
jmp
mov
jg
jae
rorb
cmc
push
dec
test
test
mov
xchg
mov
aas
imul
in
js
aas
and
movsb
repz
shrb
fnstsw
dec
cli
es
cwtl
sti
lea
cli
insb
mov
sub
js
jnp
cmp
aam
xchg
pop
adc
lea
andb
loope
jge
or
inc
push
in
mov
jmp
sub
je
and
jg
sub
pop
inc
mov
and
orb
cmp
xor
outsb
jnp
out
mov
mov
lods
ss
pop
push
or
mov
iret
push
xchg
enter
scas
jmp
aad
outsl
add
mov
mov
rcr
and
mov
mov
jmp
and
mov
test
sbb
popf
pusha
mov
pusha
and
fstl
data16
icebp
addl
cmp
mov
jp
xor
lahf
imul
daa
cmpsl
call
sti
movsb
dec
add
in
and
dec
stos
clc
loopne
movsl
xchg
mov
in
sbb
nop
xchg
add
or
mov
adc
test
test
dec
and
jl
in
inc
mov
mov
icebp
outsl
inc
adc
jg
or
mov
sub
in
je
scas
in
test
out
mov
movsb
sub
test
and
sahf
shl
into
les
mov
mov
repz
dec
fcmovnu
rolb
inc
inc
xor
xor
cld
fimull
inc
outsl
inc
loop
inc
adc
pop
ds
xchg
xchg
inc
and
mov
dec
add
mov
std
sbb
cmpsb
enter
call
out
mov
ljmp
scas
test
dec
outsl
icebp
xor
aam
call
into
push
xor
or
sub
xlat
sub
sbb
fcoms
cmp
push
inc
mov
outsb
inc
fidivrl
xor
mov
add
dec
test
push
cld
call
pop
jne
and
mov
push
add
mov
inc
cmpsb
cmpsb
rolb
mov
test
or
mov
xchg
int
add
or
dec
insb
pusha
pop
xchg
in
rorl
and
test
scas
xor
stos
movsb
das
xchg
xchg
pop
mov
aaa
dec
pop
ss
inc
insl
sub
push
je
daa
in
inc
xchg
add
or
int3
enter
xchg
jb
adc
jno
aad
lret
push
in
loop
rorb
push
push
and
sbb
insl
xor
mov
sbb
subl
xchg
jle
rorl
in
inc
fstpl
scas
icebp
repz
std
jmp
pushf
mov
jmp
mov
mov
mov
popl
jne
nop
mov
xchg
adc
mov
push
mov
dec
fs
bound
and
dec
mov
test
xlat
jge
imul
test
movsb
adc
mov
call
and
jbe
sub
xchg
pop
jle
sbb
push
dec
xchg
ja
jbe
push
fsub
ret
mov
jo
nop
mov
mov
mov
dec
cwtl
and
mov
adcb
xor
std
adc
cmp
mov
and
in
mov
adc
ficoml
out
imul
mov
sti
div
fneni(8087
lret
xchg
mov
sbb
int3
inc
test
cli
add
jae
or
test
adc
in
pop
nop
ret
pop
xchg
xor
out
arpl
data16
jae
push
pop
mov
mov
dec
add
loope
lcall
mov
cmp
push
push
mov
enter
add
arpl
pop
movsl
pusha
addr16
shlb
jle
mov
add
xchg
sbb
dec
pop
pop
stos
cmc
nop
lods
dec
dec
movsl
je
xlat
add
imul
xchg
lahf
mov
movsl
das
imull
xor
cmpl
mov
jb
fincstp
ljmp
jbe
sbb
mov
add
push
push
cmpsb
jmp
out
imul
fbld
xchg
mov
fcomps
cmp
pop
mov
xchg
fiaddl
test
loope
mov
sbb
push
sub
shlb
push
xchg
add
cmp
mov
adc
loope
jp
inc
cmp
push
add
popf
mov
rolb
mov
sti
mov
scas
xchg
adc
dec
repnz
lods
rcrb
dec
jo
add
sahf
or
popa
mov
lahf
movsl
or
in
pushf
fadds
mov
mov
cmpsl
and
cmp
cmp
insl
cld
mov
mov
dec
xor
push
xor
sub
adc
sti
repnz
mov
sub
push
mov
jmp
lods
adc
pop
cld
test
cmp
pop
mov
push
mov
insb
inc
jae,pn
mov
mov
dec
cmp
ljmp
mov
or
jae
xchg
fstpl
cmp
aad
sarl
mov
arpl
dec
fwait
in
pop
movsb
lods
xor
add
cmpsb
inc
cmpsb
icebp
inc
dec
add
mov
fsubr
adc
lods
sarb
xor
cmp
outsb
inc
lds
push
ret
pop
fdivrs
scas
sahf
fdivs
push
mov
arpl
enter
inc
aam
pusha
leave
test
ficomps
lods
cmp
dec
pusha
fcmovne
gs
adc
aam
xor
aam
leave
scas
pushf
jp
sbb
sub
push
sub
mov
xchg
or
xchg
leave
addl
mov
jmp
rol
cs
leave
push
push
dec
mov
sbb
pop
ljmp
or
out
cmp
and
push
nop
inc
push
addr16
stos
xlat
or
or
mov
push
inc
xor
mov
xchg
pop
mov
js
bound
mov
les
mov
mov
scas
mov
cld
pop
stos
push
pusha
movsl
decb
mov
fstp
mov
pop
xor
mov
push
jge
xchg
in
int
arpl
push
jge
dec
in
testb
rorl
cmp
sar
jno
fimuls
lods
dec
fwait
sub
fimuls
inc
push
mov
mov
push
pop
and
cmpl
adc
shll
test
cld
addr16
scas
aad
xorl
inc
and
push
in
fwait
roll
add
test
add
xor
int3
push
repnz
loopne
push
xchg
sbb
dec
add
sub
mov
pop
dec
sahf
test
mov
das
fisttpl
pop
lds
test
je
sub
adc
and
scas
loopne
lock
in
xchg
lods
cli
cmpsb
mov
xor
aas
imul
sbb
stos
aaa
mov
scas
push
stos
cmp
mov
jb
xlat
ljmp
test
cmpl
push
dec
aaa
mov
mov
ljmp
aas
iret
push
mov
adc
jmp
es
mov
inc
mov
pop
movsl
stc
push
repz
dec
fmuls
test
mov
mov
lahf
repnz
mov
sub
pop
jbe
or
setp
mov
cli
dec
imul
dec
push
scas
mov
ss
or
rclb
shrl
out
cmpsb
fcoml
dec
test
addr16
xorb
fnsave
insb
xchg
sbb
rorl
mov
lods
pusha
test
mov
jge
mov
imul
bound
adc
jnp
iret
xor
or
fnsave
pop
sbb
push
dec
pusha
aaa
cs
ret
xchg
mov
nop
sbbl
cmp
mov
scas
inc
hlt
jl
xor
in
sbb
cmp
fiadds
push
movsb
into
loop
or
lret
mov
sahf
pop
xchg
pop
mov
sub
adc
jge
dec
jno
xchg
xchg
repz
adc
or
into
xchg
cmp
dec
movsb
jp
jb
out
push
cmpsb
mov
pop
inc
dec
insl
sbb
negl
int
xchg
cwtl
shl
adc
jecxz
in
das
lahf
jnp
sbbl
xchg
hlt
sub
xchg
out
pusha
or
sub
xchg
and
xor
iret
pusha
out
test
les
fwait
addr16
mov
push
cmp
dec
js
pop
inc
pop
or
loopne
je
fmull
and
imul
in
les
imul
inc
mov
dec
mov
inc
cli
sub
sub
inc
jnp
int3
lock
mov
rcll
pop
cmp
mov
in
or
call
popa
stos
jo
test
sbb
ret
scas
sti
std
pop
mov
lahf
nop
sub
mov
push
dec
push
push
lea
data16
push
add
sbb
add
js
dec
fcmovne
pop
or
mov
fdivrl
adc
inc
outsb
cmp
clc
call
cmp
lret
mov
pop
ror
pop
aad
rorl
outsl
sub
lahf
pop
inc
xchg
mov
push
cmp
icebp
dec
mov
xor
insl
pop
mov
cld
pop
pushf
ficoml
movsb
in
pslld
or
out
jmp
cld
aam
fsubrl
or
lods
andb
sbb
sub
in
int3
pop
sbb
iret
hlt
sarl
mov
js
push
insl
movsb
scas
sahf
sbbb
int3
pop
call
mov
scas
cli
xchg
cmc
jb
xor
fwait
stos
jnp
out
pusha
ss
jno
jb
stc
pop
pop
popa
mov
sub
xor
push
jmp
pop
lds
scas
aam
inc
lahf
add
cmp
repz
inc
inc
xor
movsb
jle
cmpsb
and
fwait
cs
xchg
testl
jecxz
outsl
jae
push
push
aam
or
shl
jbe
jge
mov
adc
jne
iret
repnz
les
sub
adc
xor
movsb
imul
push
cltd
fsub
cwtl
sti
xchg
pop
mov
dec
int3
loope
leavew
fs
mov
push
mov
xor
push
scas
jecxz
sbb
insl
dec
inc
call
mov
mov
inc
mov
repz
dec
jnp
test
mov
filds
ljmp
xorb
idiv
ljmp
aaa
jne
scas
icebp
shr
les
push
enter
fistpll
pusha
mul
aaa
fstps
jns
shrb
push
ja
and
lea
test
xchg
repnz
ret
arpl
repz
push
test
and
loopne
jno
pushf
jl
or
test
loope
mov
int
inc
lahf
jg
mov
ret
push
jns
pushl
rcrl
mov
and
jno
or
push
test
fs
mov
pusha
adc
scas
adc
push
arpl
xchg
das
popa
fdivl
adc
or
dec
jne
mov
jo
out
iret
addr16
mov
pusha
sahf
bound
dec
inc
xchg
mov
cmp
xlat
jnp
arpl
add
push
jno
push
fs
insb
adc
cmp
xchg
inc
fsubrs
adc
outsb
xchg
mov
add
lahf
lea
inc
jno
add
jle
mov
lods
outsl
add
add
pop
xchg
push
imul
sbb
imul
adc
rclb
into
ljmp
mov
sbb
mov
jnp
mov
xchg
adc
dec
mov
in
sbb
add
xor
adc
inc
push
push
loopne
mov
inc
mov
add
loopne
faddl
fwait
pop
mov
test
shrb
xchg
mov
fdivrp
xor
inc
xchg
or
stos
shr
loop
ds
pop
mov
and
mov
ror
cli
sti
sub
sub
mov
aad
test
clc
or
xor
js
push
push
aad
in
loop
mov
lds
pusha
cmp
sarb
or
imul
cmp
int3
clc
mov
or
pop
icebp
cmp
icebp
mov
inc
cmp
and
aad
bound
mov
lret
mov
daa
movsl
test
popf
mov
jp
cmpsb
shlb
and
mov
pop
sbb
pop
insb
out
in
clc
inc
in
mov
add
iret
dec
test
ds
pop
push
std
icebp
popa
lea
mov
int3
fstpl
lret
jmp
fsubs
in
adc
mov
xchg
pop
bound
xchg
pushf
jmp
sbb
cmp
jp
push
jmp
cmpsl
xchg
cmpb
lods
test
add
scas
xchg
cmp
xor
xchg
stos
ret
stos
cmpsl
popf
xor
mov
ret
mov
shrl
imul
sbb
sbb
add
sti
aam
or
leave
je
je
jno
push
cmpsb
jge
fs
aad
or
fwait
inc
push
test
jae
rcll
or
cltd
std
mov
inc
push
cmc
fistpll
mov
and
iret
into
dec
cmpsl
cmpsb
cld
sbb
fstpl
pop
pop
mov
aas
sti
adc
arpl
ss
xor
popa
ret
rcr
mov
push
movsb
and
fs
mov
inc
leave
mov
dec
push
xchg
mov
lahf
fistpl
fisubl
xchg
cmpsl
stos
push
cmc
push
aad
sub
out
cmpsb
aam
ss
out
icebp
jo
andl
or
movsb
ret
repnz
dec
in
pop
xor
adc
push
mov
adc
cwtl
push
cli
rorb
nop
clc
cmp
imul
inc
and
fcom
pop
mov
fs
jb
sub
ret
fcmovnu
icebp
jns
jg
jp
mov
mov
aas
out
lcall
sbb
insl
in
or
push
adc
adc
call
test
xchg
lea
out
test
cli
dec
lods
shl
inc
push
cmp
and
addr16
out
and
xor
adc
cmp
mov
movsb
cmpsb
pusha
mov
roll
bound
mov
daa
sti
xchg
push
scas
mov
scas
imul
mov
repnz
push
dec
sbb
xor
pop
icebp
mov
rcrb
ror
ja
sub
lcall
add
popa
sbb
xor
jmp
add
jle
push
fldcw
in
jle
jle
cs
inc
jmp
rclb
sets
cs
pop
movsb
pop
pop
push
out
in
cmp
sahf
dec
sub
lock
lods
or
fbld
fwait
push
jg
call
mov
and
xchg
xor
jle
mov
popa
clc
in
inc
sbb
cmp
mov
cwtl
cmp
or
sub
mov
les
adcl
fdivs
arpl
cs
lods
pop
jns
fcom
cli
push
scas
adc
xchg
pop
cld
nop
jns
sbb
push
enter
cld
test
pop
shlb
and
or
inc
cmpl
in
and
je
test
test
push
sbb
loop
int
adc
jecxz
loope
out
sub
movsl
incb
jae
repz
stos
lds
or
icebp
in
shll
cmc
loop
aas
es
inc
dec
in
mov
mov
fstpt
call
loope
ds
jmp
js
mov
out
mov
xor
or
ret
mov
in
mov
out
fldenv
andl
test
xor
xor
out
and
lcall
inc
sbbl
sbb
lods
xchg
fcoms
and
sarl
or
jp,pt
mov
fimull
mov
jnp
dec
cs
push
scas
add
cmp
lea
arpl
popa
insb
mov
mov
add
jbe
mov
sub
cmp
test
test
mov
inc
daa
or
mov
cwtl
jmp
mov
and
and
lret
xchg
lds
cmc
or
and
dec
out
mov
jecxz
xor
in
loop
mov
mov
ja
xor
or
mov
jo
fsts
nop
je
inc
sbb
mov
ja
mov
cmp
testb
data16
in
jbe
ffree
loopne
sbb
push
and
xchg
pop
mov
mov
mov
hlt
mov
inc
stos
dec
leave
sbb
pop
cli
jne
xchg
xor
or
hlt
push
push
ret
mov
div
movsl
ljmp
dec
int3
cli
sub
inc
ss
cs
sbb
repz
mov
sbb
jae
jecxz
lret
mov
xor
xor
cmp
push
mov
bnd
mov
sub
jae
jmp
nop
insl
jp
hlt
pop
insb
pop
cs
imul
mov
add
sti
add
aaa
adc
js
aas
inc
mov
fstpl
das
adc
ss
loope
fs
inc
aam
mov
cmp
sub
stos
roll
mov
push
jno
shlb
std
push
cmp
push
inc
lcall
mov
movb
mov
mov
ret
xchg
mov
pop
clc
movw
xlat
iret
leave
add
iret
jo
jne
add
rcr
aad
stc
out
test
adc
dec
lods
sahf
shr
mov
xchg
loope
or
or
scas
xchg
lret
sbb
jbe
mov
sahf
pop
adcl
xor
fs
xchg
pop
cltd
push
in
incb
lock
test
push
add
adc
sbb
sub
divb
add
scas
push
push
gs
std
add
stos
dec
dec
sub
sti
mov
in
push
addr16
lahf
mov
jb
jg
add
add
cmp
xchg
jg
pushf
repz
adc
dec
adc
imul
fimuls
test
fucompp
pop
cmpsl
fnsave
dec
pop
sub
out
and
outsb
cld
mov
push
jns
lock
lds
mov
addl
and
cmp
push
pop
add
je
ret
aam
subb
imul
ret
jbe
lds
jecxz
lcall
inc
push
push
ret
imul
xchg
aas
push
cwtl
cmp
leave
mov
cltd
pusha
xchg
cmp
sub
bound
pusha
leave
pcmpgtw
dec
add
cld
lret
mov
ja
sahf
fsubrl
fisubs
mov
lcall
cmp
push
dec
inc
aad
push
cmc
or
pslld
push
xchg
mov
push
int
outsl
and
adc
rorb
fwait
enter
sbb
out
lret
jno
jle
push
bound
mov
pushf
out
arpl
mov
xor
push
int
inc
and
mov
adc
loop
sub
add
lods
out
push
pop
wbinvd
shlb
lcall
shlb
cmpsb
inc
repnz
sbb
pop
xor
xor
sub
push
js
jp
jg
mov
ds
nop
stos
inc
or
out
jge
mov
pop
and
jg
jns
in
push
xchg
fidivrl
adc
insl
push
or
les
pop
ja
sbb
sbb
add
pop
mov
sbb
stos
adc
cmp
shr
lret
clc
xchg
scas
adc
push
loop
pop
insb
mov
mov
pushf
mov
mov
push
xor
and
xchg
repz
dec
arpl
out
push
jne
pusha
mov
mov
lods
fcmovb
xor
push
and
call
adc
scas
int
cmp
mov
sub
cmp
nop
rolb
pop
inc
jmp
dec
and
xchg
ficomps
dec
xchg
and
sbb
xchg
decb
push
loop
mov
int3
aas
cli
js
push
ds
mov
pop
sahf
aad
rcrb
lods
sbb
aam
mov
clc
cld
cs
jns
nop
xor
lods
fucomi
lock
aad
mov
push
mov
lret
cmp
sub
and
repz
jb
pop
aad
int3
out
fucom
push
stos
test
or
and
lods
stc
cmc
cwtl
stc
pop
test
xlat
fisttpll
dec
dec
andl
push
pop
fs
push
and
mov
jnp
out
outsl
xor
sahf
pushf
rcrl
mov
int3
outsl
ja
test
adc
adc
mov
jae
inc
xlat
push
int
shll
fisttpl
hlt
in
cs
jmp
sbb
xor
xor
xchg
popf
test
loop
int3
ds
and
jne
shl
cmp
mov
imul
imul
stos
je
pop
fisttps
mov
mov
stos
push
dec
lret
pop
lds
pop
inc
pop
in
in
daa
dec
in
cmp
inc
gs
arpl
inc
mov
fcmovbe
cltd
cltd
int
push
stc
mov
scas
add
faddl
stos
cmc
dec
popa
mov
jne
mov
xchg
pop
xchg
fadd
push
loope
push
push
push
mov
loope
xor
fwait
jmp
lds
cmpsb
fs
dec
jle
or
inc
add
icebp
in
xchg
jecxz
sbb
ds
sbb
insb
das
adcl
jb
and
movsl
negb
or
sbb
lods
xchg
f2xm1
lcall
cmpsb
mov
dec
aam
aam
and
xchg
shll
pop
sbb
inc
call
jae
and
shrb
adc
sub
xor
mov
repz
mov
mov
cmpsl
add
xor
fcmove
and
lcall
sbb
std
loopne
imul
sub
mov
or
test
nop
lods
lcall
add
sub
bound
test
jl
sub
inc
pushf
outsb
imul
imul
aam
xchg
fwait
je
push
sub
lea
dec
out
mov
sub
add
cmpl
loopne
or
xchg
adc
je
mov
xor
push
push
or
outsb
sbb
frstor
mov
enter
mov
pop
test
sub
jmp
out
out
xchg
sub
xor
dec
repz
in
pop
mov
stos
ss
out
adc
stc
mov
sbb
add
mov
mov
mov
iret
bound
xchg
pop
jo
xchg
out
dec
ret
insl
dec
arpl
rcl
clc
add
cltd
mov
or
daa
mov
xor
push
inc
push
mov
pop
es
test
loope
inc
cmp
mov
outsl
or
sub
lret
cmpl
sbb
mov
int3
int3
daa
pop
and
mov
jle
dec
sub
gs
xchg
sbb
sbb
push
out
fldl
inc
xchg
fbld
jecxz
test
sbb
jbe
and
inc
or
jo
dec
aaa
lea
test
mov
xor
push
mov
jge
call
jo
xor
movsb
imul
lcall
mov
negb
idivb
iret
sub
test
or
ja
push
push
hlt
sbb
mov
and
out
jae
push
lahf
adc
and
shrl
out
out
inc
xor
dec
es
ds
cmp
cmp
int3
mov
xorl
add
mov
xchg
fldcw
cmp
test
fidivl
jge
cwtl
repnz
sub
mov
add
sahf
cmc
sbb
sbb
inc
test
sub
or
pusha
push
hlt
mov
pop
add
xor
jp
stos
addb
cld
cmp
aam
aaa
cmp
xor
iret
stos
dec
pop
xor
out
sarb
pop
ror
inc
fs
out
jb
fs
nop
call
push
ret
mov
mov
xor
mov
es
outsl
adc
mov
jnp
xchg
ss
daa
pop
cs
es
xchg
inc
sbb
jl
andl
clc
mov
adc
or
stos
fdiv
inc
aad
pop
lods
cmp
or
push
mov
jne
imul
lods
pop
xchg
mov
fstl
mov
aam
test
pop
and
mov
mov
ja
xchg
sub
mov
and
mov
fcomi
icebp
ret
dec
fs
sbb
mov
push
mov
xchg
add
xchg
mov
repnz
dec
ljmp
test
xchg
add
sbb
mov
inc
inc
shll
lods
cmc
jbe
xchg
pop
inc
addr16
hlt
outsb
xorps
add
lea
imul
mov
xchg
sub
test
inc
push
dec
push
ffree
int
hlt
mov
sbb
popa
sbbl
ficoml
jecxz
pop
ret
pop
mov
jp
daa
jle
adc
stc
imul
pop
hlt
stos
dec
or
addb
es
ret
xchg
mov
aad
out
clc
add
jl
push
cmp
xchg
dec
je
adc
fcmovu
ss
cmp
dec
sbb
fidivs
aaa
fcomi
inc
jecxz
lock
adc
xchg
or
inc
mov
dec
fwait
xchg
dec
lods
mov
cmp
pop
cwtl
icebp
mov
push
push
pop
hlt
jne
int
sbb
int
in
xchg
xor
lods
psrld
and
jge
test
jnp
pushl
or
jg
jp
push
int
stc
test
daa
mov
les
fcoml
add
jne
xchg
adc
js
inc
in
jp
insl
je
outsb
jo
int
or
xchg
test
mov
add
xlat
push
loopne
iret
cmp
ljmp
stos
lds
jg
int
mov
fwait
jge
push
fldl2t
mov
adc
andb
mov
std
cmp
or
pop
jns
arpl
sub
outsb
mov
imul
scas
sbb
sbb
stos
cmp
adc
jno
daa
sti
inc
test
mov
mov
mov
and
and
jbe
inc
jne
or
lods
in
pop
jmp
call
or
outsl
loop
cli
dec
push
insb
jle
dec
xor
rep
leave
dec
cmc
jae
es
pop
cmp
and
mov
jo
and
push
test
dec
pusha
pop
mov
ret
sub
push
adc
fsubl
sub
xchg
mov
xchg
adc
nop
into
mov
push
jo
pop
inc
mov
popl
xchg
cmpl
out
sub
jne,pt
pop
or
je
push
fimull
sub
cltd
cmp
flds
fiadds
aaa
addr16
popa
mov
in
lods
imul
cmp
roll
test
xlat
xchg
add
add
jae
xchg
adc
arpl
dec
cmpsl
push
lahf
mov
add
and
mov
sub
pop
push
mov
cmp
pop
and
iret
pop
jle
mov
add
xchg
add
jle
enter
int
pop
xor
loope
insl
sub
fidivs
xchg
in
cmp
js
pop
je
sti
mov
popa
dec
inc
jecxz
dec
jo
add
movsl
movsl
popf
pushf
sbbb
rcr
movsl
mov
push
pop
and
pop
xchg
stos
mov
cli
add
out
dec
pop
in
jl
imulb
adc
pop
sbb
cmp
jl
xor
or
xor
dec
add
daa
stc
shll
fidivl
cwtl
out
notl
aam
je
adc
mov
movsl
mov
inc
stos
push
and
jno
nop
aas
mov
or
pop
bound
fldt
jno
and
or
mov
add
adc
cld
das
outsb
repnz
sahf
dec
inc
rcr
fs
movsb
cs
lcall
cmp
out
inc
push
lods
lret
mov
add
sub
les
sbb
cmp
lret
in
movsb
push
and
into
mov
mov
test
jo
xchg
hlt
rcll
pop
inc
or
cs
in
jnp
mov
sub
adc
pop
and
push
flds
pop
pop
adc
dec
inc
daa
cltd
xor
or
aas
cmp
pop
mov
aas
add
jp
sbbl
mov
lahf
lds
xchg
stos
cmpsl
cmp
pop
jbe
jle
adc
adc
mov
push
lods
cli
les
test
fdiv
pop
out
ja
jbe
ss
mov
xor
sub
or
cwtl
cmp
fmuls
push
add
jg
aad
testb
call
or
add
fcmovnbe
xor
ja
pop
cmc
faddp
fidivrl
jp
push
enter
mov
sub
orb
sbb
fidivrl
mov
fldt
pusha
stos
dec
pop
jl
lock
fists
cmp
jmp
scas
push
enter
add
push
sbb
mov
or
sahf
jp
dec
fisubl
outsb
repz
cmc
pop
xor
cmp
cltd
test
movsb
and
jnp
inc
hlt
gs
outsb
add
add
fcmovnu
sub
outsb
stos
adc
test
push
loope
mov
ss
fsubrl
in
xchg
inc
jns
fdivr
dec
xor
and
and
in
jge
nop
xor
icebp
in
rolb
push
add
adc
in
jp
and
xor
sub
stos
aam
aas
movsl
jnp
jmp
call
xchg
out
adc
js
jnp
stc
mov
fimull
test
andl
pop
pusha
addl
push
das
rorl
inc
mov
ss
loopne
mov
inc
xor
fcoml
fistps
mov
ja
imulb
loop
mov
in
loopne
mov
clc
aaa
push
jne
addr16
std
pop
sbb
popa
push
std
movsl
pop
mov
lods
rorb
cs
cltd
clc
loop
mov
imull
lcall
adc
loop
and
and
cltd
dec
mov
out
outsl
outsb
sbb
cmp
push
es
push
out
test
inc
mov
xchg
add
out
outsl
cmp
ret
aaa
mov
nop
repz
push
ljmp
aaa
insb
mov
jnp
int
inc
loope
and
cmpsb
mov
push
inc
xchg
cmpl
inc
push
js
rolb
aaa
fucom
stc
pop
hlt
mov
sub
aas
xor
jl
faddl
pop
jp
push
cs
dec
jge
mov
daa
fs
js
inc
adc
push
lds
ljmp
out
add
mov
sub
ret
mov
jae
fs
sub
lods
dec
inc
cmp
test
or
stos
clc
and
repnz
xor
pop
jns
pop
std
jl
sub
sarb
incb
mov
sahf
rclb
xchg
shlb
dec
shrb
inc
mov
xchg
cmpsl
call
jns
outsb
sbb
popl
mov
jge
xlat
and
xchg
and
add
loopne
jae
and
or
out
ficomps
cwtl
push
imul
xchg
popa
add
fisttps
stc
mov
mov
inc
xorl
cmp
mov
xchg
cmp
ret
insb
sbb
adc
push
add
cmp
adcl
arpl
xor
mov
js
aam
testb
scas
ret
adc
loop
sub
dec
sarl
mov
les
add
or
inc
mov
lds
dec
xchg
mov
sbb
loopne
fisttpl
push
fistl
mov
or
jecxz
adc
fldt
jp
or
fnsave
mov
jp
pop
je
out
jae
jbe
int3
cld
xchg
jmp
jne
xor
dec
adc
not
enter
out
or
imul
xchg
pop
and
push
xor
test
lret
iret
mulb
and
xor
gs
loop
insl
das
test
shll
pop
mov
dec
push
cmpb
aam
pop
xchg
mov
mov
mov
inc
gs
insl
in
adc
push
fnstcw
or
mov
out
in
ret
add
movsl
mov
ja
cltd
or
xchg
xchg
xchg
call
xchg
mov
cmp
sbb
test
sbb
adc
dec
jo
cs
dec
mov
push
mov
std
sti
shll
gs
jb
rcl
mov
adc
es
fadds
mov
mov
mov
loop
push
mov
mov
les
push
inc
mov
fiaddl
xchg
rcr
ds
sub
mov
out
mov
sti
sbb
jmp
rorl
subb
pop
scas
fdivrp
lds
fcoml
lgs
mov
lret
pop
pushf
orb
push
dec
test
fisubs
lret
pop
testb
fimull
out
in
mov
and
enter
pop
sbb
mov
hlt
je
xchg
test
std
flds
out
xor
dec
adc
push
xchg
mov
js
rcrb
loop
mov
bound
rcll
mov
leave
popa
outsb
outsb
pop
mov
push
outsl
in
lret
mov
movsl
pop
je
adc
rclb
mov
dec
dec
ret
out
or
jne
sbbl
test
sbb
gs
mov
adc
sbb
fcomp
int3
nop
insb
pop
iret
popa
adc
cld
or
and
pop
xor
movsl
dec
out
mov
xchg
fsubl
sub
scas
add
hlt
pop
adc
pop
lods
xchg
sub
arpl
pop
mov
pop
xchg
pop
ficomps
fdivr
icebp
mov
push
inc
pop
jp
mov
sub
lret
stc
in
js
lock
addr16
xorl
loopne
mov
cmp
or
and
daa
icebp
mov
mov
cli
hlt
mov
or
pop
xor
mov
mov
add
push
test
and
dec
rcll
loope
pusha
lods
xor
sbb
lcall
push
movl
test
popf
xchg
ret
pop
lods
push
test
enter
pop
cmc
scas
and
jno
ss
ds
or
sbb
cmp
cmp
adc
sahf
popf
ss
out
sub
loopne
rolb
dec
jl
add
mov
xchg
mov
sbb
fstps
jnp,pt
jnp
nop
mov
cmp
xchg
pushf
and
xchg
sti
inc
enter
mov
lret
mov
loop
push
arpl
mov
int
imul
sbb
das
xchg
dec
test
roll
lods
jo
aas
andb
mov
dec
outsl
aad
rcl
dec
std
bndcu
ss
fistpll
mov
xor
mov
sub
iret
orl
push
jmp
cmp
or
enter
cmp
packuswb
loop
jg
sbb
sub
xchg
jae
scas
mov
std
cmp
arpl
outsl
aaa
rcrl
jnp
scas
jecxz
jle
cmp
scas
xor
leave
addr16
lcall
dec
cmpsb
popl
inc
mov
push
jle
repnz
daa
xlat
add
lea
imul
popa
add
jno
mov
sbb
push
in
push
inc
cmp
mov
adc
in
out
cs
mov
jle
int3
push
jb,pt
fadds
jbe
js
mov
test
in
jae
stc
sti
cmp
inc
adc
ja
mov
in
xchg
jb
sub
lods
mov
xorl
adcb
stos
or
cmp
mov
mov
pusha
std
aas
lds
push
dec
jecxz
sahf
lret
test
cmp
inc
mov
push
xchg
inc
dec
arpl
xchg
inc
adc
fcomp
mov
or
cli
loopne
add
sub
and
mov
movsb
into
ds
idiv
mov
pop
add
inc
shlb
mov
mov
pusha
push
orps
xchg
test
stc
fidivs
push
fcoml
into
jp
andb
or
push
daa
out
sub
push
lahf
sarb
jg
dec
aad
xchg
mov
fisubrl
sbb
add
rcrb
scas
lods
popa
mov
push
mov
xchg
cmc
pusha
movsb
inc
cli
xchg
push
sub
rcrb
fstpt
or
mov
xlat
mov
jmp
pop
xchg
xchg
in
in
jg
mov
cltd
shr
push
clc
aam
lsl
mov
fadd
iret
sbb
subb
or
push
adc
subb
popf
data16
xchg
mov
fistpl
cmpsb
jne
mov
pop
mov
jmp
aas
mov
mov
or
push
pop
or
test
adc
push
gs
cmp
cltd
gs
jo
push
mov
data16
lcall
cmpsl
push
aas
jnp
push
add
dec
das
jns
mov
shlb
adc
sti
jecxz
push
fucom
dec
aam
xchg
outsb
dec
cwtl
fs
and
add
sahf
icebp
imul
das
pop
mov
inc
movsl
adc
xor
or
mov
outsb
mov
ljmp
data16
mov
mov
fdivrs
pmuludq
and
xor
and
test
mov
push
call
xor
push
sub
fwait
or
sub
ss
lret
jp
xchg
cmp
add
lahf
lods
js
fstp
mov
fidivl
gs
xchg
push
mov
shll
push
push
mov
mov
mov
inc
lcall
fistps
pop
sbb
and
in
stos
sarb
cmp
call
ret
enter
cmp
sub
fimuls
cmp
aaa
mov
push
mov
cmp
mov
popa
imul
insb
xchg
mov
push
xchg
ss
mov
mov
adcb
dec
and
jge
ror
mov
cli
sbb
lcall
xor
in
jmp
xchg
aad
pop
push
repnz
mov
pop
jno
outsl
in
inc
inc
ljmp
shrb
or
cmp
clc
ja
rcrb
pop
cltd
inc
inc
daa
inc
jmp
fsubrs
pop
push
jmp
dec
sub
ss
rorl
xchg
iret
sbb
outsl
ljmp
popf
jbe
add
pop
sbb
inc
call
int
leave
ja
pop
and
pushl
idivl
gs
test
clc
xchg
cwtl
mov
or
push
xchg
les
adc
in
in
lahf
or
jb
aas
xchg
push
dec
mov
pop
pop
int3
lret
and
jmp
in
or
mov
outsl
call
jbe
stos
aaa
clc
test
addr16
shll
outsl
inc
dec
pop
outsb
adc
or
out
add
lods
and
std
in
movntq
out
pushf
or
dec
loope
sbb
call
xchg
loop
cli
mov
dec
mov
mov
or
add
mov
dec
pop
jp
aaa
out
xcrypt-cfb
cmpsl
and
and
jge
imul
ja
push
enter
outsl
sahf
jp
adc
jbe
xchg
popa
loopne
mov
jle
push
or
jp
mov
fildl
dec
xchg
pop
shrb
cltd
cmp
xorb
push
movsb
cli
push
cltd
js
lahf
sarb
fsubl
xchg
ficompl
sbb
xchg
je
or
cmp
lcall
pop
cli
out
lods
movsb
mov
rcll
jo
iret
mov
inc
fidivl
stc
xlat
fsubr
mov
cmpb
leave
lret
ja
ja
fists
hlt
or
push
jbe
push
out
add
repz
or
scas
and
shrb
stc
mov
adc
aam
jb
jecxz
mov
xor
sbb
or
cmp
mov
cmp
pcmpgtb
fucompp
or
outsb
lret
fdivrl
test
out
loope
mov
mov
push
test
in
scas
dec
icebp
lds
cmc
ret
inc
fwait
cli
jmp
cmp
and
fcoms
subl
fs
push
pushf
rcrb
mov
fsubrs
icebp
movsl
sbb
mov
loop
fmull
lcall
fidivs
and
and
jno
arpl
in
mov
inc
addr16
push
push
sub
lcall
add
js
inc
dec
sbb
daa
data16
adc
popf
dec
mov
sbb
pop
sbb
mov
mov
cmp
out
not
add
es
mov
or
sbb
out
and
ja,pn
pop
sbb
shrb
in
shr
ljmp
fistps
cmp
mov
dec
lods
test
in
adc
aaa
push
fcmovb
ret
jge
mov
ficompl
push
fisubl
jae
xchg
mov
add
xchg
fistpll
cmp
insb
jo
sub
test
in
pusha
mov
fidivrs
add
sbb
jnp
aas
adc
xchg
inc
data16
adc
iret
dec
jns
sub
xor
aam
add
lock
sbb
mov
out
or
xor
sbb
in
mov
arpl
dec
in
ds
cmp
movsl
jno
insb
roll
sbb
cmpsl
push
pusha
jmp
mov
and
lahf
cmp
mov
mov
lret
add
aam
scas
sub
adc
inc
xor
popa
inc
pop
adc
cwtl
dec
stc
mov
daa
jne
std
les
mov
adc
adc
dec
aaa
pop
adc
jne
mov
xor
adc
pop
fs
or
aam
inc
xor
inc
sbb
and
je
xor
fcomps
xchg
pop
lds
lcall
ja
push
int
sbb
mov
notl
fimuls
movsb
xor
xlat
sub
mov
sahf
add
insb
rcll
les
mulb
sbb
shrl
or
sarb
sub
cmp
pop
push
add
notb
pop
xorb
pop
mov
push
negl
pop
sbb
jge
iret
in
and
xchg
dec
aad
jnp
in
daa
jnp
sub
push
mov
dec
jnp
xchg
cmp
pop
lods
ret
cmp
and
cmp
add
ror
lods
insl
pop
jb
in
push
js
mov
mov
loope
sub
cmpsb
sub
out
iret
out
int3
push
call
test
call
imul
add
scas
popf
inc
or
add
andb
add
jbe
iret
mov
xlat
stos
pop
fsts
mov
stos
adc
clc
pusha
int
in
fildl
push
std
fucom
aaa
or
orl
imul
sub
lahf
orb
fsubrp
sahf
fs
nop
repz
cmc
unpcklps
push
hlt
or
mov
mov
pop
fwait
jns
lods
es
cli
xchg
nop
daa
in
inc
dec
pop
pop
test
outsl
mov
outsl
xor
movsb
mov
fdivs
mov
add
into
lahf
inc
add
jp
scas
cmp
push
xor
aaa
lods
pop
outsl
dec
cmp
popf
or
aaa
daa
movsb
mov
fsubr
cmp
fdivrs
cli
les
das
stos
inc
or
repnz
adc
xchg
aad
inc
mov
loop
cwtl
mov
ret
lret
adc
leave
xor
and
push
scas
and
inc
xchg
adc
test
sbb
lcall
pop
and
aad
int3
mov
fsub
xchg
lcall
outsb
mov
jbe
add
in
xor
or
imul
jl
adc
dec
and
cld
cmpsb
and
mov
sbb
pop
dec
mov
sbb
xchg
stos
add
out
insl
cwtl
addr16
mov
subl
int3
andb
dec
filds
push
loope
jno
or
adc
daa
jmp
push
aas
pop
shlb
imul
jbe
mov
je
ret
lret
inc
cmp
jae
int3
mov
and
dec
sbb
jb
mov
ljmp
icebp
adc
inc
inc
pop
nop
xor
ds
fisubl
mov
dec
imul
and
es
scas
cmc
fidivrs
lods
fprem
ret
cmp
js
rclb
loopne,pn
adc
mov
adc
iret
pop
or
movsb
mov
mov
cltd
xchg
jge
push
push
mov
sbb
sbb
shlb
sbb
xchg
daa
inc
ror
imul
push
sbb
mov
jle
xor
add
jmp
push
xchg
jae
inc
mov
ret
in
enter
sub
sbb
repnz
and
and
xor
lock
ja
inc
ds
sysexit
push
das
stc
sbbb
mov
les
or
adc
js
mov
mov
adc
jmp
inc
and
inc
jp
sub
ret
xchg
sub
test
jbe
call
adc
or
mov
sub
xchg
lods
ret
loop,pn
mov
into
push
in
xchg
pusha
mov
fidivrs
jns
xlat
dec
dec
push
fwait
addb
mov
cmp
mov
push
and
shll
addps
fimull
shl
jmp
mov
inc
jno
dec
pop
xchg
dec
xor
hlt
xchg
fstpl
fs
inc
pop
mov
test
js
push
xor
push
arpl
lds
fcmovnu
adc
outsb
lock
int3
mov
push
or
fucom
movsl
and
inc
xchg
mov
mov
inc
mov
movsb
and
cltd
repz
jge
loope
sub
sub
nop
jle
rcrb
inc
and
popa
sbb
push
test
pop
scas
push
inc
mov
mov
cs
dec
mov
xchg
hlt
and
sub
rol
lods
in
mov
pop
outsl
jmp
or
mov
lods
push
jmp
xlat
inc
mov
popa
repnz
mov
jnp
bound
jb
mov
sbb
xlat
aad
daa
fisubrs
xchg
shrl
repz
push
cmpsb
add
and
pop
lods
aad
sbb
aad
jecxz
sub
adcl
and
or
add
popf
sahf
fldcw
and
push
cpuid
push
scas
cs
pop
pushl
add
int3
xchg
in
add
ss
sub
sub
inc
stos
les
xchg
inc
dec
test
fildl
push
popf
in
dec
mov
xchg
cmp
push
jle
inc
rcrl
lock
and
rcrl
jl
mov
dec
pop
pop
add
movsb
test
jecxz
enter
data16
xchg
js
adc
insl
jge
sbb
and
test
loop
push
add
fldl
sub
add
inc
imul
jmp
xchg
dec
mov
dec
lret
sbb
adc
rcll
scas
mov
ret
mov
shl
rcll
push
hlt
je
int3
jecxz
loope
aad
adc
mov
icebp
leave
push
push
mov
push
out
sub
bound
fwait
loopne
inc
push
adc
pop
fsubrs
push
xchg
push
or
aaa
sub
jl
jno
inc
aaa
xchg
lret
loop
fs
lods
fistps
or
sub
pushf
mov
stos
aas
xchg
adcl
pop
pusha
xchg
xor
and
dec
popa
fistps
std
jl
in
loopne
xor
jns
jo
in
or
lods
cwtl
jecxz
push
add
push
lods
mov
jnp
jle
lcall
mov
dec
cmpsb
dec
pop
ret
dec
out
aam
xor
mov
and
or
add
lds
out
lods
test
fnstcw
mov
xchg
or
mov
inc
mov
stos
dec
loopne
xchg
adc
das
shrb
xchg
pop
mov
loopne
adc
add
ja
cld
sub
mov
xchg
jnp
daa
pop
repnz
out
and
aad
jns
jp
jbe
dec
add
loope
test
je
popa
cmpsb
add
mov
sub
sbb
into
xlat
fsts
sarl
push
or
adc
mov
mov
sub
adc
inc
sahf
adc
rcrb
adc
out
fistpll
mov
dec
sbb
rdpmc
jno
add
xchg
add
or
sub
or
sbb
fldt
insl
dec
or
xor
loop
or
push
fsubrs
jecxz
dec
repz
sub
add
cld
pop
outsb
flds
call
jb
sub
pop
test
fwait
push
scas
xchg
adc
xor
mov
mov
bound
test
in
lcall
and
dec
rcll
sbb
dec
std
out
lds
mov
adc
ret
push
cmp
rorl
push
insb
push
subl
leave
ljmp
add
fldt
imul
lret
jo
out
and
mov
rorb
xorb
les
scas
sahf
ret
out
fwait
out
aad
pusha
jb
inc
xchg
ficoms
push
ds
repnz
cs
push
lods
xor
fildl
int
repnz
add
cmpsl
mov
stc
dec
popf
inc
in
es
xchg
fsts
xchg
leave
inc
insb
test
ds
xor
bound
andl
andl
cmpsl
stc
test
pop
cli
xchg
je
rcrl
push
pop
xor
inc
inc
dec
pop
rcl
xchg
jne
sbb
out
movsb
sub
aad
inc
pop
mov
inc
data16
data16
repz
ret
cmp
fdivr
fmuls
sbb
inc
fistpl
scas
xchg
shrb
dec
sarl
jmp
jle
scas
mov
out
inc
add
mov
add
rcrl
lock
cwtl
push
adc
cmp
test
lods
or
adc
mov
xchg
gs
jge
lret
mov
sub
pop
mov
lret
in
jbe
ficoml
sub
push
lock
lods
arpl
cmpsb
fs
pop
jne
dec
dec
lret
out
sbb
aam
rorl
and
cli
sahf
or
cmpb
addr16
jb
sbb
rcl
push
mov
mov
inc
jb
aam
mov
incb
sub
les
mov
xlat
imul
push
mov
cmpsb
sub
fists
cmp
sbb
mov
lret
lods
lahf
out
cli
add
or
cld
mov
pop
dec
mov
outsb
inc
andb
pop
mov
in
cmpsl
rdmsr
mov
sbb
pop
inc
dec
aas
adc
arpl
dec
sahf
jp
leave
xor
adc
lea
xchg
and
cmpsl
lcall
addr16
jecxz
adc
daa
add
mov
sarl
xchg
out
sbb
jb
mov
jl
sbb
adc
mov
add
push
jle
insl
xor
nop
shlb
xor
or
lcall
pop
mov
es
pop
dec
je
xor
aam
inc
and
les
mov
mov
cmp
daa
inc
push
les
shlb
daa
lods
pop
push
sub
in
push
stos
pop
xchg
push
dec
jns
std
mov
call
jle
cmp
call
jg
xor
cmpsb
sbb
sbb
das
push
pop
adc
insb
mov
and
prefetchw
cmp
scas
dec
hlt
cli
in
cmpsb
cmp
xor
jnp
arpl
xchg
adc
mov
pop
mov
or
xor
jg
xor
mov
mov
jnp
or
adc
and
sub
mov
pop
jb
sbbl
mov
test
dec
push
or
std
fidivs
adc
movsl
push
add
jp
dec
sbb
call
lock
push
loopne
std
int
add
in
fldcw
or
jge
push
xor
xchg
or
mov
test
arpl
xchg
fidivrs
mov
xor
cmp
fsubl
xchg
leave
repz
mov
jg
jno
xor
inc
daa
pop
gs
push
and
sub
call
xor
shrb
jb
ret
aad
icebp
mov
jne
jle
je
inc
roll
cmpb
icebp
sub
push
out
outsl
mov
dec
shlb
and
sbb
lret
das
stc
dec
frstor
je
mov
cmpsl
mov
and
ja
test
cmp
loope
and
pop
sbb
mov
fisubrl
and
sub
shrl
sbb
and
add
jle
leave
in
xchg
imul
hlt
cwtl
xchg
daa
mov
outsb
gs
js
jns
gs
mov
cmc
mov
sbb
imul
mov
loopne
dec
adc
pop
pop
test
movsb
fstps
sub
insl
mov
mov
es
mov
xchg
jo
mov
nop
arpl
and
push
pop
xchg
xchg
mov
and
xchg
movsl
insb
lret
lock
fadds
sbb
paddq
or
repz
mov
and
inc
sbbb
push
std
jne
jecxz
cmp
fildl
or
out
jnp
fnstenv
movsl
xor
add
dec
and
sbbb
fstl
dec
fidivrs
pushf
out
test
cmpsl
xchg
pop
push
sbb
jno
xor
shlb
mov
push
lods
mov
cmpsb
pop
repz
and
fbld
xor
aam
jno
adc
pop
pop
lock
jae
out
sbb
jns
sbb
cmp
and
out
push
bound
add
test
adc
mov
sub
jp
sti
leave
in
insl
dec
pop
iret
repz
and
cmp
jge
fsts
sbb
adc
mov
icebp
movl
cmp
mov
imul
push
movsb
jb
loopne
add
in
pop
xor
push
mov
lret
fdiv
jno
ffree
pop
pop
jle
mov
pop
mov
pop
test
add
push
pop
enter
pop
mov
pop
inc
cmp
out
in
inc
adc
ss
lcall
and
mov
mov
out
shrb
add
enter
add
xlat
jmp
out
jne
lret
out
push
repz
push
xchg
xor
icebp
outsl
popf
or
or
xchg
test
jb
xor
into
jbe
js
add
inc
out
sbbl
or
fwait
gs
aam
std
xchg
jp
add
cltd
mov
cmpsl
jae
insb
mov
inc
jp
popa
jns
repz
add
inc
inc
and
xchg
xchg
popf
popa
push
xchg
add
xchg
add
xchg
lods
xlat
icebp
stc
inc
mov
mov
aad
stos
unpckhps
aad
xchg
push
adc
in
pop
cmp
xor
pop
or
ret
dec
aad
xchg
mov
inc
jp
mov
jo
fnsave
push
mov
mov
push
and
lods
add
insb
inc
or
stos
lds
jp
fstl
loop
fnstsw
shrb
pop
mov
xchg
or
mov
mov
sarl
outsl
xchg
lock
das
ficomps
xchg
in
push
add
lea
xchg
mov
adc
jo
int
pop
push
cmc
inc
incl
dec
mov
and
sub
mull
push
fmuls
xor
inc
inc
cmp
cli
cwtl
int3
rolb
inc
shll
call
in
and
sub
cmp
dec
dec
loopne
mov
adc
adc
xor
cmpsb
mov
lock
popa
add
xchg
cmp
fwait
ds
add
into
test
shrl
fiadds
push
aas
pop
pop
dec
aas
fidivrs
mov
jl
lret
notb
or
cmp
jge
push
movsl
cmc
mov
out
cmc
add
jge
stc
mov
mov
cmc
fldt
js
or
test
roll
cmp
testl
jns
int
jb
cmp
adc
out
pop
sahf
jb
lcall
cmc
sbb
push
jns
ljmp
cmpsb
or
lods
cmpsl
mov
jp
leave
jno
adc
and
shrl
cwtl
jnp
xor
inc
movsl
leave
mov
outsb
adc
push
xor
inc
adc
stos
movsb
mov
bound
idiv
mov
cli
xor
push
xchg
nop
jb
or
add
xchg
icebp
test
xchg
jno
cld
es
lods
adc
and
jge
ss
xor
es
lahf
aad
ret
jl
and
popa
push
mov
push
mov
mov
adc
aam
jecxz
mov
mov
ss
add
in
ret
xlat
or
xor
andl
xorl
and
xchg
cli
push
lahf
aas
das
mov
cmp
int
mov
inc
jnp
pop
sbb
mov
scas
repnz
pop
ja
ds
mov
pushf
popa
gs
dec
xchg
mov
xchg
repz
popa
mov
nop
or
jp
fcmovu
scas
cli
mov
mov
and
pop
mov
add
lret
push
roll
icebp
mov
rorb
popf
jnp
leave
stos
loop
push
jnp
mov
call
jo
into
shlb
call
cmp
das
xor
sarb
arpl
pop
add
pop
xor
pop
and
movsl
dec
sub
push
jno
dec
add
in
sahf
leave
sub
mov
cmpsl
lret
pushf
or
and
sub
jp
cmpsb
outsb
inc
in
jecxz
dec
leave
mov
lcall
dec
in
mov
pop
push
push
and
fnstsw
mov
hlt
inc
jno
jne
add
call
insl
sub
popa
lcall
idivl
and
js
sbb
aad
adc
sub
xchg
imul
mov
cmp
popa
les
ficoml
jns
leave
add
iret
dec
mov
mov
lcall
nop
ret
push
jecxz
sbb
mov
xchg
popf
test
xlat
or
and
loopne
iret
cli
push
jae
or
jo
pop
dec
mov
cmc
pop
iret
dec
fwait
lock
push
mov
loop
mov
push
scas
lods
jae
repz
push
es
push
test
jo
scas
mov
sub
in
outsb
mov
ret
loopne
jge
inc
mov
mov
data16
pop
cmp
mov
xor
jne
ja
call
add
in
aaa
xlat
adc
insb
das
je
les
mov
jnp
xchg
int3
cmp
xchg
hlt
adc
push
ret
test
push
arpl
cmpsb
jnp
inc
adc
xchg
mov
sub
pop
push
insb
lcall
gs
pop
push
aas
pop
mov
imul
sub
fisubl
cs
pushf
pop
fadd
jp
pop
xchg
dec
fwait
jo
xchg
fisttpl
dec
je
mov
icebp
push
xlat
js
outsb
orb
movsb
mov
jmp
pop
popa
sbb
aad
dec
lds
jg
ljmp
mov
scas
out
fnsave
push
aam
xchg
dec
rcrb
loop
jmp
inc
aaa
pop
js
fwait
mov
pop
test
sub
sub
movsl
and
paddusb
or
xor
inc
mov
adc
sub
fistpll
test
mov
sbb
call
xlat
adc
xor
push
pusha
cmp
xchg
aas
adc
aam
push
sar
int3
filds
cs
mov
and
adc
push
cmp
push
ljmp
inc
rcll
pop
pop
xchg
out
jae
fldl
mov
gs
mov
imul
nopl
pop
insl
pop
jp
cwtl
cmp
cmp
push
xchg
fwait
stc
cli
gs
mov
push
push
pop
push
int3
jecxz
jle
addr16
or
push
test
out
fwait
nop
sub
bound
int3
fs
or
iret
pop
mov
push
test
push
sbb
xor
pop
mov
clc
dec
dec
loope
adc
mov
or
pop
sbb
dec
dec
movl
inc
in
mov
mov
sub
xor
stos
std
shll
xlat
pop
adcl
cmp
push
adc
lahf
xor
push
pop
out
scas
fwait
sbb
nop
pushf
mov
int
push
scas
jmp
fiadds
mov
shrl
fidivrs
fisttpl
in
mov
sub
cli
ja
push
insb
cli
mov
sbb
lods
inc
hlt
bnd
xchg
arpl
out
cmp
shrb
inc
iret
jae
inc
fcomi
xor
or
lahf
push
lea
lret
shlb
gs
aaa
je
orl
xchg
mov
inc
das
fstpl
adcb
cltd
xchg
and
dec
dec
int3
lods
inc
dec
idiv
rol
mov
mov
or
dec
or
out
fdivl
inc
loop
inc
mov
xchg
sti
aas
sub
not
roll
lret
xchg
loope
mov
push
loop
cs
popf
and
and
jp
dec
popa
aam
ret
pushw
xchg
in
std
cmc
mov
inc
lock
pop
ljmp
cmpsb
out
cmc
sub
cld
push
les
icebp
add
push
sbb
hlt
push
push
xor
int3
movsb
xchg
cwtl
fiadds
pop
sbb
cmp
gs
fnsave
add
cltd
idivl
push
xchg
out
imulb
cmp
inc
mov
xor
gs
push
push
cwtl
movsb
aaa
push
mov
jmp
out
aad
shll
mov
dec
add
fdivrs
and
inc
out
inc
shrb
sbb
lea
mov
cwtl
les
daa
popa
ja
in
mov
mov
pop
sub
rcl
xchg
jno
call
popf
jb
adc
pop
das
jns
cmpsl
dec
push
aas
mov
das
sahf
stos
outsb
mov
or
popf
sbb
jp
sar
lods
mov
sub
xor
inc
mov
cmp
jle
jo
adc
int
jmp
sub
aad
andb
xchg
sbb
adc
lock
aaa
imul
lock
fisttps
pop
push
jno
daa
and
dec
js
push
xchg
mov
scas
xchg
lods
lret
push
out
xor
add
add
iret
xchg
add
xor
push
pop
test
mov
push
and
push
lahf
inc
xchg
lea
pop
out
imul
adc
jnp
leave
lea
and
mov
loopne
cli
and
push
std
jbe
loop
pop
and
mov
adc
enter
cltd
or
and
stos
aad
xchg
enter
cmp
or
sub
mov
pop
cs
lret
int3
pop
xchg
jecxz
add
rol
jns
xchg
cmp
sbb
push
sub
lret
test
xor
fnstsw
push
int
into
xor
nop
cmp
adc
xchg
dec
js
adc
mov
xchg
jp
imul
les
shl
out
js
loop
or
jmp
jp
sbb
scas
stc
inc
mov
roll
xor
cmpsl
imul
push
into
pop
outsl
mov
push
jo
icebp
lea
fdivp
dec
es
mov
pushf
icebp
xorl
jae
inc
mov
sub
inc
sub
xor
push
push
mov
enter
dec
cltd
mov
pop
xor
sub
and
rcl
insl
and
pop
sbb
outsb
mov
mov
inc
aad
push
pop
cmp
das
shrb
sti
xor
adc
inc
and
or
lea
mov
hlt
adc
jns
inc
mov
fdivl
test
out
xor
lds
lds
jg
int
adc
jle
fwait
test
push
xchg
mov
cmp
repz
les
das
adc
pop
std
xor
mov
ds
adc
xchg
addl
aas
push
dec
pop
ret
loopne
divb
mov
pop
push
jns
mov
ret
push
pushf
nop
gs
psraw
in
das
shll
jle
lahf
scas
pop
test
cmp
loop
mov
cmp
add
enter
fstps
dec
inc
ja
xchg
cmc
fdivrp
xchg
aam
jmp
fcoms
fsubrp
xor
nop
dec
dec
push
daa
jne
jge
out
testb
dec
pop
push
pop
inc
in
pop
mov
mov
or
pushf
and
into
addr16
inc
es
scas
nop
jb
test
jno
jg
lea
pop
cmp
adc
lret
mov
adc
inc
call
push
dec
cld
pop
imul
or
daa
fstp
pop
in
aas
test
insl
ret
arpl
pop
ret
mov
lock
std
aam
fcoml
mov
repnz
dec
cmp
lods
add
jns
xchg
gs
xor
fistpll
mov
jnp
in
adc
mov
or
lea
push
xchg
dec
xchg
imul
ret
or
iret
cltd
daa
das
jl
sub
test
push
and
and
jecxz
adcl
jmp
arpl
push
test
popa
jl
mov
sbb
push
push
insb
dec
cs
cmpl
fldenv
xor
adcb
pushf
aas
fs
xor
dec
xor
and
idiv
loop
imul
pop
aad
add
sbb
enter
lret
adc
insl
inc
orb
push
jno
imul
mov
popa
fisttps
int3
xor
insl
xor
cmp
outsl
inc
jb
mov
mov
cmc
int3
test
out
jmp
xlat
in
inc
mov
sub
xchg
or
pushl
adc
cli
push
sti
jno
adc
adc
pushf
xor
scas
js
mov
stos
xchg
pop
push
mov
dec
fwait
lock
lods
in
sbb
inc
sub
push
lahf
fmuls
or
aaa
lret
jg
dec
inc
xchg
loopne
subl
push
jmp
in
cmpsl
aam
shll
mov
push
insb
cltd
xchg
arpl
mov
push
or
or
in
fadds
divl
sahf
mov
jp
inc
mov
inc
push
sbb
or
xchg
int3
loope
in
pop
jmp
stos
add
pop
xchg
xlat
adc
mov
jg
mov
mov
push
insl
adc
pushf
mov
cltd
jb
je
scas
les
mov
fildll
jno
pushf
jmp
jp
mov
pop
mov
popa
mov
push
sti
dec
in
mov
jns
out
mov
mov
mov
mov
test
sbb
xchg
dec
push
cmp
mov
xlat
sti
popf
adc
lret
andl
in
or
dec
sub
sbb
pop
outsl
xlat
mov
pop
sbb
stos
lret
sahf
inc
repnz
sbb
sar
add
lds
ja
mov
xor
jge
gs
push
call
adcl
pop
inc
movsl
jns
enter
mov
repnz
lcall
in
push
int
sbb
mov
cwtl
js
or
jbe
pop
pusha
push
pop
outsb
hlt
shlb
arpl
inc
mov
cmc
push
clc
cmp
mov
cmp
iret
inc
fidivl
jge
pop
xor
mov
rclb
lahf
addb
sbb
xor
mov
gs
stos
push
push
subl
push
pop
jge
mov
rcr
imulb
cmc
mov
add
stos
out
loopne
push
cltd
fdivr
mov
lods
mov
adc
or
mul
out
sbb
mov
ror
and
hlt
mov
out
in
cmpsb
leave
bound
jbe
fisubrs
int3
gs
xchg
test
or
cmc
add
sti
and
push
les
sbb
lock
stos
jmp
sarb
inc
mov
mov
pushf
punpcklwd
ja
jae
jecxz
mov
in
sbbb
mov
inc
xor
sbb
xchg
inc
cli
insl
daa
sub
xor
jne
clc
out
push
les
into
mov
xor
adc
mov
outsl
xchg
lahf
popa
xor
xchg
and
hlt
pop
aas
mov
mov
lods
push
loop
pop
mov
mov
pop
loope
push
idivb
fs
jno
inc
out
jmp
mov
clc
ja
pop
jg
dec
rclb
pop
jo
cmpsl
cmp
jno
outsl
in
adc
cmpsl
mov
aaa
cmp
jmp
loope
dec
ret
mov
sbb
inc
mov
push
fisttpl
ret
inc
push
mov
pop
stos
mov
cmp
mov
add
adc
adc
mov
add
lcall
rcr
and
mov
fdiv
inc
es
mov
jle
jg
and
push
pop
or
jne
imul
mov
movsb
dec
push
das
outsl
or
mov
cmp
pop
push
out
sti
pop
test
loope
movsl
add
pop
in
adc
es
arpl
call
xchg
sbb
stc
push
fsubrl
ret
add
jmp
test
loop
lods
jle
cmp
sbb
div
into
testl
jp
xchg
cmp
lds
mov
push
add
fwait
push
sbb
fdivl
mov
movsb
fwait
fs
inc
sub
inc
lcall
sar
cltd
in
pop
inc
add
push
sbb
xor
stos
ds
and
add
outsb
icebp
cmc
add
mov
hlt
sbb
push
pop
imul
mov
in
mov
and
pop
arpl
cmp
add
icebp
add
sbb
push
repz
or
cli
jmp
mov
ljmp
mov
cmp
arpl
mov
outsl
daa
push
in
pop
jle
push
sbb
mov
lods
mov
mov
mov
adc
testb
or
fisubrs
daa
jg
cmp
pop
negl
mov
fdivl
mov
out
gs
sbb
test
das
imul
ja
push
enter
and
inc
dec
push
shll
push
jle
mov
sub
into
add
add
adcb
inc
test
pop
popf
outsb
lret
add
xchg
xchg
mov
mov
imull
outsb
fsub
sub
sahf
xchg
shlb
lcall
insb
pop
scas
sbb
jbe
sub
sbb
cltd
aas
lea
out
iret
sub
lods
adcb
hlt
xchg
hlt
cmc
test
adc
je
pop
dec
sub
jge
aas
jl
pop
out
aad
push
sti
mov
lods
or
or
dec
mov
or
inc
xchg
inc
call
mov
ja
call
push
hlt
and
test
js
repz
lret
iret
inc
fisubrs
inc
push
add
push
adc
outsl
fwait
cld
xlat
jb
lods
and
in
js
in
mov
test
mov
ljmp
lds
les
int
fadds
js
test
insb
add
sub
adc
mov
mov
jl
adc
test
mov
icebp
jae
enter
sbb
mov
cmp
fisubrs
add
jmp
test
hlt
or
int
add
dec
push
dec
mov
sbb
divl
movsl
aad
in
out
push
lock
push
jecxz
mov
cld
fwait
push
lods
pusha
loop
jae
clc
in
insb
push
pop
and
lods
in
pushf
ja
clc
pop
pusha
imul
jge
sub
xchg
add
jns
addr16
xchg
fcompl
jns
cmpsb
inc
mov
test
jl
jns
call
shll
leave
int
pop
cmp
sbb
shrl
push
stos
cmpsb
loop
rorb
in
dec
test
or
out
inc
add
mov
cltd
xlat
mov
jmp
pop
mov
jns
or
cmc
aas
jno
pop
dec
pushf
mov
or
rclb
pop
and
loopne
and
mov
pop
ret
loope
iret
sub
mov
movb
adc
out
lds
inc
jbe
and
pop
jne
sub
pop
out
jg
shlb
dec
ret
mov
xorb
pop
push
fiadds
add
cwtl
daa
out
push
bswap
sub
pmaddwd
or
lahf
pop
ret
adc
and
or
mov
add
fsubs
sub
mov
fs
bound
inc
inc
jmp
or
adc
sub
inc
inc
dec
xor
out
ja
stc
sub
sbb
push
xchg
inc
out
mov
cmp
lock
jo
inc
mov
loop
dec
mov
sub
mov
dec
lods
pop
test
inc
test
cmp
lret
das
sub
cwtl
mov
jne
loopne
and
sahf
or
sub
leave
mov
add
aas
and
dec
jp
jae
inc
xor
jbe
pop
push
fwait
stc
lea
lahf
inc
mov
xor
fmul
jbe
mov
xchg
dec
sti
mov
mov
jp
stos
pop
xchg
mov
dec
cmp
mov
dec
cmpsb
mov
pop
dec
fimull
xchg
loopne
aaa
fldt
xor
imulb
dec
mov
cmp
daa
das
ret
fs
mov
xlat
adc
aam
lea
loope
mov
bound
mov
xor
lea
sbb
jbe
xchg
lock
sbb
scas
aam
lods
pop
cmp
cli
mov
xor
add
stos
mov
andb
filds
pop
or
fcompl
sarb
sub
stos
push
inc
pop
pop
lock
test
xchg
and
jbe
xchg
jg
inc
fdivrs
jo
push
les
cs
popa
push
mov
adc
imul
jmp
jb
mov
enter
movsl
pop
enter
dec
mov
xchg
lea
addr16
dec
les
xor
cmp
fbstp
jge
adc
sub
pop
lods
xor
leave
push
mov
jnp
ljmp
test
aaa
shrl
jnp
push
mov
mov
jae
jnp
roll
fcoms
fstpl
push
inc
mov
mov
pop
cmp
das
pop
cmpsl
mov
dec
repnz
cmp
daa
mull
push
jo
lret
sahf
cltd
shl
xor
enter
fadds
popf
lret
fsubrs
xlat
ret
aas
jo
add
cs
mov
out
data16
aaa
je
xor
divl
into
js
ficoms
movsl
sbb
mov
mov
cmc
cwtl
sbb
or
out
fwait
cmp
mov
xchg
and
push
jge
aaa
fbld
je
dec
cmpb
mov
push
das
rcll
push
mov
movsl
or
or
adc
mov
lret
idivl
pop
data16
xchg
mov
mov
adc
in
sub
push
dec
sbb
inc
pop
ret
stos
jp
jo
dec
cmpsb
negb
paddusw
xchg
lds
xchg
imul
inc
bound
mov
leave
push
or
sub
insl
rol
fxch
nop
adcl
dec
sbb
jecxz
push
ffreep
jo
mov
loope
icebp
mov
xor
stos
out
xchg
pop
adc
xchg
pop
js
out
mov
sbb
sub
inc
pop
cmpsb
jns
pop
lock
mov
inc
push
insb
cmp
push
or
sub
push
xor
flds
fsts
lock
popa
jbe
rcrl
cmp
mov
sbb
aaa
and
rorb
pop
xor
mov
hlt
dec
test
mov
enter
sahf
or
xchg
sub
jo
cwtl
out
mov
pop
cltd
dec
lods
neg
ds
adc
subl
jl
mov
movsb
popa
fwait
ljmp
stos
cmp
subl
cltd
je
sbb
das
push
and
loop
inc
dec
cmpsb
cwtl
xchg
push
cmp
popa
hlt
dec
lahf
aad
xchg
mov
int
in
xchg
mov
push
jae
mov
sbb
xchg
ss
xchg
jno
push
cmp
inc
lods
adc
data16
cli
add
jge
fistps
aad
data16
jmp
andb
in
pop
movsb
xchg
mov
jg
aam
push
int
jae
xchg
adc
pop
push
mov
add
in
lret
loop
and
out
adc
rcl
ja
inc
push
xchg
cltd
xor
xchg
arpl
cmp
adc
dec
addr16
jg
dec
rclb
idivl
adc
fisubs
cmp
fistpl
jns
xchg
negb
add
js
fisttpll
and
and
in
cs
std
imulb
or
xchg
scas
ficoml
addb
cmpsl
cmpsb
jns
sbb
jl
cmp
lret
in
mov
add
dec
decl
push
test
pop
sbb
xor
push
rolb
pop
lods
xor
xchg
pop
rcrb
mov
xchg
sti
mov
nop
push
insl
iret
pop
push
xchg
lods
insb
xchg
dec
dec
les
jo
insb
xchg
lret
stc
out
mov
jp
lcall
lock
or
pop
enter
loope
leave
adc
insl
inc
sbb
xorl
addr16
aas
cwtl
aad
pop
sbb
cmp
mov
xchg
scas
mov
mov
imull
hlt
das
push
in
loopne
adc
enter
add
add
lock
hlt
adc
stos
mov
jnp
outsl
jo
outsl
lods
mov
fnsave
jb
pop
add
lea
lock
test
repnz
xlat
hlt
stc
xlat
repnz
jecxz
add
adc
insl
faddl
fcomip
outsb
mov
outsb
or
dec
aam
lret
lods
push
xchg
xor
xlat
pop
xchg
and
rclb
add
mov
jle
cmp
psubd
adc
mov
push
outsb
cmpsb
sub
sbb
and
inc
test
or
xor
sbb
rcll
sub
adc
rol
cmp
xlat
mov
dec
sub
jns
cltd
shl
jle
dec
cmp
mov
lcall
in
pushl
pop
ss
cs
leave
fildl
ret
cld
mov
gs
mov
push
test
aam
xor
xchg
jae
or
bound
bnd
cmc
pop
aam
leave
push
daa
mov
inc
sbb
repz
mov
fsubrl
push
rcrb
jnp
mov
add
js
out
lods
and
das
stos
fcmove
mov
mov
test
fcomp
xchg
pop
and
push
mov
mov
out
movsb
repz
jae
sbb
or
xor
pop
mov
out
icebp
dec
mov
sbb
fidivrs
adc
xor
mov
sub
ret
add
ret
mov
push
sub
mov
mov
stos
xchg
xor
push
dec
xor
adc
aam
inc
push
lds
and
pop
out
xlat
scas
mov
fstpl
pop
pop
dec
dec
xchg
cmp
cltd
push
pop
adc
pop
ljmp
movsl
iret
fadds
xor
test
mov
shrl
lcall
mov
mov
in
addb
in
cmp
idiv
repz
lds
inc
pop
daa
out
push
out
xchg
movsl
mov
inc
sub
rorl
in
xor
adc
mov
inc
adc
pop
scas
inc
enter
push
shll
mov
filds
in
pushf
add
push
aaa
sub
sbb
mov
cmpsb
leave
sub
or
out
or
sti
jnp
jl
xlat
and
bound
and
jo
xchg
lods
rorb
scas
test
mov
into
fists
xchg
bound
in
add
jne
pop
std
iret
or
cmpb
xchg
sbb
imul
aas
xor
fsubl
or
and
das
and
mov
das
add
nop
test
fidivl
lods
iret
mov
vandps
icebp
mov
jmp
xor
mov
arpl
lahf
mov
xchg
push
std
xchg
mov
add
es
and
ret
shld
fisubrl
jns
lret
leave
push
sbb
push
in
dec
test
mov
and
in
jno
pop
mov
sbb
push
aaa
lods
fs
fidivrl
mov
add
dec
pop
ret
mov
mov
push
push
data16
lahf
test
fwait
add
imul
cld
es
ljmp
mov
mov
clc
lds
int3
push
popa
push
mov
dec
jg
add
xchg
add
and
xchg
in
cmp
push
addr16
stc
out
pop
mov
mov
add
xor
rol
adc
addr16
lock
dec
nop
fiadds
adc
inc
or
adc
addr16
icebp
loope
adc
inc
or
mov
inc
pop
push
pop
push
mov
pop
inc
push
fisubs
push
mov
inc
or
test
xchg
pop
mov
jbe
jnp
outsb
sbb
and
or
mov
inc
or
ja
ljmp
je
dec
dec
popa
inc
sahf
push
push
shll
pusha
addr16
pop
arpl
cmc
mov
inc
sbb
imul
lret
xchg
sahf
pop
addb
mov
leave
mulb
std
mov
jns
push
cmp
pop
ljmp
test
ficomps
movsb
faddl
mov
loopne
mov
scas
icebp
rcrb
fdivl
sbb
adc
or
add
pop
mov
nop
dec
int3
ds
andb
or
or
and
inc
popa
pop
movsb
add
into
jmp
or
sbb
or
lods
inc
xchg
sbb
ret
sbb
pop
ljmp
jg
popl
cli
sub
das
imul
push
jle
push
cmp
sbb
aas
inc
lods
insl
pop
call
sbb
outsb
mov
mov
adc
cmpsl
idivb
lods
add
mov
arpl
sbb
xchg
cvtps2pd
mov
ds
out
push
out
xchg
test
out
cwtl
cmp
mov
lods
inc
mov
inc
jne
or
add
lahf
xchg
xchg
mov
push
push
mov
sub
mov
push
mov
inc
lds
out
mov
fistps
jp
push
and
pop
mov
pop
xchg
dec
mov
ficoms
scas
pop
mov
dec
push
cmp
cli
xor
or
test
dec
movb
mov
push
or
test
enter
in
sub
sub
xchg
xor
pop
pop
into
xor
xor
jne
pop
sti
aad
adc
xor
js
shr
xchg
mov
ja
pop
inc
jbe
inc
repnz
mov
and
pop
ret
cmp
and
sarl
into
xlat
aas
loopne
mov
xchg
sbb
jle
jno
movsl
dec
hlt
cmp
in
iret
jecxz
lds
push
pop
sub
fldt
cmpb
push
je
jmp
push
aas
xor
mov
push
jp
pop
adc
sub
andb
pop
pushf
and
add
js
xchg
imul
xchg
cs
jb
mov
mov
movsb
pop
test
push
mov
dec
and
and
loopne
xchg
add
leave
pop
and
sub
jnp
xor
or
icebp
xor
jp
xor
xor
adc
xchg
enter
push
add
jae
in
xor
adc
cld
fistpll
xor
cli
jns
out
sub
aas
loopne
cmpsb
mov
add
inc
sub
sub
mov
inc
jle
leave
inc
fs
pushf
test
xor
and
push
adc
and
imul
shrb
mov
jg
decb
mov
or
js
inc
repz
inc
lret
test
out
ja
sub
in
arpl
xchg
sub
mov
cld
sarl
adc
pop
dec
fadds
dec
pop
push
or
data16
mov
sub
sub
jle
xor
les
imul
xor
dec
aam
repz
testb
clc
ficomps
fsub
mov
daa
mov
adc
fildl
leave
mov
lahf
inc
ret
out
cmpsl
mov
or
and
mov
stos
repz
pushf
xchg
add
jo
or
int3
jb
stc
sbb
xchg
fstl
pop
xchg
add
sbb
cmc
push
aas
xor
lds
push
bound
jo
ds
cli
ja
jae
push
js
out
sbb
orl
push
push
push
jl
rorb
je
out
dec
mov
jge
aam
xor
add
std
ficomps
lret
loop
and
cmp
dec
xor
lcall
sti
bnd
aam
pop
xchg
sbb
add
mulb
mov
loope
lds
sbb
lret
add
add
daa
jle
pop
sarb
std
mov
inc
stos
out
std
fmull
outsb
pop
jmp
xor
addb
mov
xchg
jg
sbb
repnz
xchg
jl
in
mov
dec
add
subb
shlb
xchg
sbb
shl
cmp
mov
jge
push
scas
push
cli
jmp
pop
inc
test
insb
loopne
rorl
adc
pop
ljmp
mov
xchg
fnsave
rol
mov
cmpsl
hlt
in
scas
cli
pop
xor
rolb
pusha
js
loopne
xchg
jo
inc
jb
sbb
adc
jae
sbb
cmp
mov
pusha
pop
xor
and
shrl
xlat
divb
lret
mov
pop
push
clc
mov
mov
aam
cmc
scas
sub
pop
pop
les
adc
mov
jge
rcrb
scas
mov
bound
jg
or
ret
addr16
es
scas
shl
mov
cld
outsb
push
sub
xor
mov
shl
sub
push
jg
xchg
ror
pop
rcrl
xchg
not
lea
jp
cld
jnp
add
jno
jmp
pop
sub
fwait
test
and
popf
out
stos
pop
add
cmp
dec
jge
in
xchg
es
xor
addr16
insl
fisttpll
xchg
imul
pop
push
cli
mov
add
ds
int3
in
add
dec
lret
enter
idivb
lahf
aaa
jnp
xor
inc
push
cmp
aas
in
mov
dec
nop
cmp
and
push
ds
sahf
lock
loope
pop
std
mov
inc
mov
jae
icebp
jl
lcall
inc
loop
sbb
stos
cmpsl
int3
aam
insb
lods
je
sbb
jmp
pop
jmp
mov
push
imul
push
dec
xchg
mov
fistl
lock
push
int3
xchg
cs
add
dec
aam
adc
inc
push
ficoml
jne
incl
stc
push
das
mov
lahf
and
rcr
mov
dec
in
cmp
or
int
mov
ds
xchg
jge
mov
in
xchg
sbb
adc
xor
cli
adc
es
sbb
movsl
aad
cmpsb
push
movsb
or
popf
push
sbb
in
mov
push
sbb
les
enter
scas
pusha
mov
cmp
idiv
imul
out
add
hlt
pushf
xchg
mov
lds
imull
mov
pusha
arpl
push
mov
add
pop
ss
pop
xchg
je
sbb
jle
bound
and
fiadds
ja
xchg
jl
jne
inc
xchg
pop
in
push
stos
xor
mov
popa
push
adc
cmp
push
mov
or
cltd
js
mov
mov
mov
pusha
nop
lret
pop
insl
jmp
mov
out
je
mov
push
push
rcl
xor
hlt
fs
aam
dec
xor
adc
popf
jno
or
sub
sbbb
stc
xor
negb
dec
push
pop
ds
ja
cmpsb
loopne
xchg
inc
pusha
shl
je
adc
enter
scas
je
pop
jge
jmp
xchg
imul
rcll
popa
int
sub
int3
sbb
and
sub
fstps
cli
push
fisubl
stos
sbb
jle
pop
xchg
xlat
or
and
pusha
outsb
adc
sbb
inc
adc
decl
xchg
mov
sub
pop
add
repz
jge
mov
jo
inc
pusha
mov
je
inc
jg
aaa
lret
out
mov
xor
mov
cmc
stos
punpckhbw
test
mov
xchg
push
cmp
push
xlat
mov
repnz
sbb
cmc
dec
ljmp
loopne
data16
out
outsb
pop
mov
dec
lcall
outsl
sarb
and
mov
and
cmp
mov
sbb
xor
js
cmc
mov
inc
std
jg
inc
lahf
sti
and
aaa
into
mov
lods
arpl
pushf
jo
push
lock
push
jns
or
push
pop
cmp
xor
daa
in
and
dec
clc
push
inc
aas
pop
in
mov
cli
fwait
inc
fs
or
in
hlt
sub
and
mov
in
sub
repnz
imul
push
pop
sbb
loope
xchg
in
mov
mov
mov
mov
sbb
mov
cmp
add
jb
shll
jno
repnz
fsubs
inc
aad
test
aaa
ret
scas
jle
add
sub
test
mov
test
push
pop
push
idivb
pop
pop
cmp
lahf
mov
or
xchg
pop
ds
xchg
fs
inc
jae
or
dec
adc
ficoml
clc
add
mov
add
orb
cmp
out
xor
sbbb
cmpsl
sbb
xchg
mov
lret
mov
pop
mov
das
jmp
ret
lods
sub
lds
mov
fisttpl
jmp
roll
mov
xchg
push
push
sbb
mov
repnz
jne
test
loopne
xchg
inc
cmc
inc
push
mov
xor
jne
push
dec
xchg
or
in
fbld
push
sahf
sbbb
pop
fstps
test
in
sub
add
pop
mov
sar
pop
insl
sti
inc
loope
sub
pop
shrl
stos
inc
xchg
aaa
mov
movsb
pusha
mov
lret
jle
loope
push
lcall
jae
adc
xor
movl
fsub
push
sbb
daa
or
sub
fnsave
dec
adc
pop
lods
hlt
xor
adc
fmull
push
lods
addr16
cmp
iret
test
icebp
mov
sti
and
in
sti
adc
jp
fwait
subl
fnstsw
cmp
xchg
aad
fwait
les
and
cmp
mov
or
dec
cmp
out
ror
hlt
xlat
pop
mov
sub
loop
sbb
mov
jb
push
cmp
dec
pop
mov
sbb
cmpsl
mov
adc
not
sub
addl
stos
lods
jl
and
fs
loope
mov
push
sbb
dec
pop
dec
dec
ds
inc
jl
push
pop
shrb
mov
cwtl
xchg
mov
or
arpl
dec
rorb
cmp
jge
and
or
std
xorl
popf
test
cmp
clc
inc
iret
mov
or
dec
xchg
sbb
adc
lock
mov
dec
sub
push
cmpb
in
pop
popf
jne
leave
mov
pop
jg
lahf
pop
aad
jnp
mov
sbb
loope
xchg
roll
adc
addl
fnstcw
mov
mov
jns
inc
mov
sub
loopne
jne
cli
inc
mov
cs
sub
cmp
into
mov
push
xchg
iret
aad
jae
int3
repnz
mov
and
cmp
bound
and
outsb
push
dec
pop
in
inc
movsb
std
cltd
push
fdivrs
inc
inc
dec
addr16
sub
call
ret
daa
sbbb
sub
xor
jle
gs
add
xor
jno
cmp
fsubrl
out
sub
cmpsl
clc
xchg
dec
cmp
fstps
cmp
je
mov
das
stc
push
xor
xorb
sub
popf
in
xchg
mov
or
aas
or
cmpb
inc
in
fcmovnbe
add
mov
jmp
cli
xor
xor
cmpsl
repnz
das
lods
sbb
cmp
or
inc
jecxz
mov
xchg
adc
test
push
mov
cmp
fists
mov
inc
xchg
or
add
or
sub
lock
es
dec
or
sub
pop
mov
rcrb
add
cs
mov
std
mov
aas
pushf
mov
out
test
loop
dec
pop
imul
xchg
loopne
and
fldl
addr16
insl
mov
xchg
fidivs
and
adc
lret
inc
jle
adc
jp
pop
popf
ja
add
inc
movb
scas
mov
dec
cmp
mov
sub
mov
incl
stc
pop
add
sub
lcall
cld
add
cwtl
nop
std
push
adc
sub
mov
push
enter
not
fwait
scas
mov
pop
dec
mov
inc
sbb
dec
test
loope
xchg
out
imul
mov
notb
int
imul
rcll
pop
add
sbb
cmp
ss
addr16
cmp
cmpsb
or
xchg
pop
push
das
cmpsb
jbe
pusha
fldcw
sub
fcompl
sbb
push
mov
fimull
push
je
in
inc
pop
mov
repz
int
jg
repz
lret
loop
imul
dec
aaa
ss
subb
push
inc
inc
enter
jl
push
pop
cmpsb
pop
clc
inc
xor
jne
inc
pushl
scas
mov
push
enter
dec
mov
sbb
fnstsw
sbb
lcall
xor
sti
mov
inc
fisubl
stos
jmp
jle
scas
arpl
or
in
xchg
aas
fstps
lea
aas
dec
lods
syscall
lock
aaa
mov
hlt
or
jecxz
es
cmpl
cs
lret
cwtl
cli
leave
mov
add
push
xchg
lret
pop
out
cmp
sar
daa
negl
xor
inc
out
call
push
bound
cmp
cld
and
pop
adc
lret
lods
mov
sbb
dec
adc
fsubrs
cmpsb
outsl
sbb
dec
inc
aaa
std
sub
and
daa
push
test
sub
sar
lahf
dec
dec
leave
in
icebp
scas
subl
jle
mov
jge
pop
aam
cmpl
xchg
jle
loop
pop
insl
addb
pop
lds
out
push
test
or
pop
std
mov
mov
and
lahf
sti
insl
or
shll
aad
imul
dec
call
dec
loope
dec
ljmp
xlat
mov
xor
add
push
ljmp
pop
stos
ljmp
xchg
mov
mov
mov
mov
ljmp
icebp
pop
repz
std
scas
leave
in
das
sbb
jg
mov
out
les
mov
mov
popa
scas
jg
in
or
mov
inc
negl
dec
scas
or
sahf
pop
pop
in
fists
sub
cwtl
adc
call
lock
mov
push
mov
cmp
push
xchg
in
dec
xchg
mov
aad
pop
sbb
mov
int
pop
lcall
fcmovnu
adc
test
add
add
dec
pop
pushf
push
xchg
dec
inc
stos
iret
mov
out
mov
jmp
ljmp
xchg
mov
into
sbb
popf
jge
add
pop
in
in
dec
pop
sbb
filds
test
inc
or
xor
fsubrp
and
call
scas
jae
sub
pusha
pop
loopne
cmpsl
inc
test
aas
dec
xchg
mov
fmuls
pushf
pop
jbe
jmp
outsb
rcrb
pop
sahf
adc
pop
pop
arpl
and
or
cwtl
inc
arpl
mov
movsl
mov
cs
cmp
mov
clc
sti
ret
mov
enter
iret
push
clc
aad
orl
dec
pop
loopne
jp
pop
adc
notl
stos
mov
dec
hlt
or
dec
push
cmp
aad
push
mov
or
cmp
or
add
int
cmpb
jo
sub
ret
test
xor
xchg
push
mov
jg
mov
repz
sbb
push
lahf
sahf
mov
xchg
xor
cmp
cld
xchg
push
dec
jnp
divl
pop
sbb
pop
clc
inc
add
orb
cmp
sahf
mov
pop
mov
mov
and
test
fdivrl
mov
jb
inc
dec
mov
cmp
cmp
les
lcall
bsf
fsubs
push
sub
add
pop
fnstcw
adc
jecxz
std
push
fcmovb
jl
aad
mov
addr16
adc
loopne
jbe
mov
insl
loopne
mov
loope
shlb
mov
pusha
inc
sub
add
or
repz
and
mov
sbb
cmovnp
fnstenv
push
imul
add
xchg
push
in
mov
fisttpll
insb
in
ss
add
xlat
add
or
dec
outsb
sub
add
addr16
ss
pop
jne
std
in
lahf
push
je
sub
mov
xchg
add
in
repz
out
icebp
imul
ds
adc
add
imul
loopne
add
loope
call
outsb
xor
xchg
shll
add
sbb
push
repnz
add
mov
mov
cmp
enter
shll
test
inc
jmp
je
pop
pusha
pop
mov
frstor
in
xchg
mov
pop
es
jae
div
stos
int
mov
fnstenv
cmp
in
push
inc
sti
adc
and
or
lret
aas
punpckhwd
pop
adc
adc
pop
in
push
pop
push
stc
mov
lods
aam
popf
push
rol
neg
pop
cmpsb
adc
cli
push
push
gs
add
imul
cmpsb
aas
out
aaa
mov
incl
jle
cltd
jg
push
sub
xchg
pop
mov
fwait
push
xor
or
push
cli
adcl
mov
cltd
out
cli
stc
jo
xor
test
mov
hlt
jmp
repnz
enter
push
dec
sbb
and
hlt
andb
cmp
push
lcall
pop
icebp
into
xor
xchg
cmp
push
rclb
pop
gs
jnp
mov
and
fs
inc
and
inc
fldt
jne
shlb
es
shlb
cwtl
int3
sbb
jbe
in
repz
int
mov
fistps
mov
mov
dec
fidivl
or
sub
mov
add
push
xchg
xlat
ljmp
shrb
inc
or
push
es
sarb
call
mov
orl
bound
jg
pop
adc
lods
pop
sbb
inc
pop
push
cmp
push
mov
out
insb
pop
repnz
lods
clc
sbbb
lods
xchg
mov
lahf
fldl
push
push
jg
inc
scas
adc
iret
adc
sbb
jl
or
data16
bound
dec
dec
push
and
xor
fiaddl
ja
stos
and
je
and
es
mov
push
shl
pop
fs
mov
shrl
jb
std
pop
inc
sbb
pop
mov
notl
and
cmp
adc
cmp
cltd
dec
dec
jno
stos
movsl
dec
in
add
test
hlt
or
or
sti
aam
insl
cmp
pop
out
std
mulb
xor
adc
inc
int
insb
int3
mov
loope
jae
pusha
sbb
icebp
xorl
outsb
lret
test
fidivrl
popf
or
pop
mov
loopne
pop
inc
cmp
lret
jl
pop
fnstsw
push
dec
xchg
mov
xchg
clc
push
jecxz
pop
std
jno
mov
outsb
adc
in
mov
lds
xor
jmp
pusha
flds
cmp
or
xchg
push
fdivrl
add
fisubrs
popa
gs
jge
pop
fs
addb
aaa
cs
sbb
das
dec
cmp
mov
xchg
inc
clc
pop
sub
push
fwait
addr16
jmp
test
sub
jbe
xchg
fcmove
cmpsb
lcall
xor
in
jno
or
xchg
jo
rcrl
jnp
add
hlt
in
icebp
std
jle
xorb
lretw
push
or
inc
dec
add
mov
and
push
fs
xor
clc
cli
inc
mov
pusha
sub
jnp
inc
add
lock
test
mov
mulb
cltd
outsb
test
test
pusha
add
push
cmpl
xchg
or
enter
mov
jge
inc
orl
add
mov
cltd
aaa
add
stos
fistpll
add
push
mov
out
xchg
mov
pop
add
jbe
xchg
mov
inc
popa
nop
lds
out
push
insb
sti
loop
scas
das
int3
cwtl
mov
pop
les
add
testl
mov
adc
jnp
sbb
sub
pop
inc
out
inc
push
dec
sbb
jnp
lock
ds
mov
out
inc
dec
fnstenv
cmp
inc
xlat
jo
xorl
push
leave
xor
pushf
xor
or
add
add
roll
mov
nop
call
stc
fcomps
jle
jnp
fmul
push
leave
clc
mov
outsl
nop
pop
push
xchg
sti
lret
inc
cmpsb
xchg
loope
jb
hlt
and
in
mov
mov
les
pop
push
arpl
jno
or
mov
add
jns
mov
pusha
xchg
imul
iret
mov
jno
inc
inc
mov
jns
adc
js
jge
xchg
and
faddl
add
out
push
ss
add
fisttps
out
xchg
outsl
sahf
mov
add
shrb
fwait
mov
lea
in
jge
xchg
jl
das
stos
sbb
popa
mov
jmp
subl
mov
sbb
push
jb
mov
daa
mov
jl
cli
popf
inc
rcr
and
negl
mov
xor
mov
fstpl
adc
cli
fs
es
fucomi
inc
int
add
sub
addr16
sub
mov
outsl
and
dec
int
pusha
ret
xchg
rcrl
popf
enter
out
cmpl
cltd
ret
lods
adc
mov
shlb
sarb
xchg
dec
imul
test
xor
sahf
inc
cltd
fnstsw
imul
fstps
sub
out
scas
imul
and
std
push
sbb
push
jle
fimull
mov
icebp
xor
and
test
pop
lods
mov
insl
jmp
fiaddl
sbb
pusha
scas
movsb
call
ja
in
shrl
mov
add
xchg
pop
sbb
adc
cmpsl
sarb
jae
mov
dec
sbb
cli
insb
in
js
in
inc
cmpsl
sub
loop
sub
add
in
jo
cltd
dec
in
jecxz
fisubrl
insb
mov
fbstp
jnp
cwtl
mov
out
fwait
xchg
inc
pop
xchg
push
mov
mov
scas
pop
jns
sbb
xor
mov
xchg
cmp
dec
movsb
sbb
mov
and
mov
pop
test
aas
aas
in
jbe
js
ficoml
pop
jmp
fiadds
cli
mov
dec
lods
mov
in
xlat
mov
rcr
rorl
sarb
inc
inc
outsl
pop
lret
mov
mov
mov
shlb
gs
cli
dec
adc
iret
xor
jg
jo
mov
and
cmpsl
push
js
push
adc
call
mov
and
add
push
ret
es
pop
jnp
fwait
mov
jne
pop
in
push
jp
push
lods
ljmp
jne
fs
mov
xchg
jns
fsubrs
loop
aaa
inc
inc
mov
lea
cs
ret
adc
add
xlat
or
dec
sbb
push
popa
repz
les
fdivl
test
jmp
jae
mov
sbb
inc
push
fnstsw
adc
arpl
imul
xor
outsb
lahf
xorl
mov
pop
push
subb
lret
xchg
xchg
mov
rolb
inc
sbb
pop
push
call
rcrl
adc
mov
filds
mov
push
daa
hlt
out
pop
cmc
mov
or
stos
sti
cwtl
add
insb
sbb
cmc
repnz
add
xchg
push
pop
call
xlat
fstpl
jmp
cmove
pushl
addl
in
iret
data16
sub
mov
xchg
ffree
movsl
jmp
stos
out
sbb
mov
outsl
arpl
and
pop
out
rol
or
stc
inc
iret
ja
jmp
pusha
fstpt
decb
aaa
jle
out
fnstcw
mull
and
je
rolb
inc
mov
xor
lahf
pop
fistpll
fcompl
cmc
mov
push
pop
rcll
xor
mov
fcomp
cmp
insl
jp
test
mov
dec
fdivs
dec
inc
dec
iret
xor
sbb
jb
dec
or
and
jmp
jae
fadds
pop
cmp
nop
rorb
test
sub
in
bound
stc
push
in
stos
and
and
push
jno
cmp
loopne
jle
iret
test
mov
mov
into
mov
pop
cmpsb
pushaw
nop
pop
cmc
jne
push
dec
lock
clc
xchg
cmpb
cmpsl
dec
pop
hlt
pop
scas
and
mov
jp
in
xor
mul
stos
pop
sub
xorl
lods
aad
adc
cmc
aas
jmp
sahf
or
call
cmc
fwait
fwait
cmp
js
mov
cltd
add
mov
push
shrl
xor
cmp
ror
push
adc
data16
repz
push
bound
testl
xor
xor
dec
adc
dec
xor
test
inc
inc
mov
dec
das
shlb
push
mov
mov
sub
fimuls
xchg
cmp
jp
jno
lret
adc
inc
xor
sbb
dec
xlat
pop
je
sub
jmp
cs
jp
adc
jp
jp
nop
outsb
add
mov
cmp
cmp
shlb
jb
and
incl
adc
push
popa
aad
nop
xchg
test
inc
lahf
movsb
pop
inc
fldcw
jno
and
sbb
add
inc
daa
mov
stos
ret
cmpsl
jnp
jl
and
add
clc
mov
xchg
cmp
and
pop
pop
xor
nop
pop
push
mov
ret
test
iret
lcall
inc
out
frstor
icebp
fsubrs
insl
inc
mov
sahf
dec
xchg
aad
jns
sub
cmp
jp
popa
test
scas
and
pop
bound
dec
inc
filds
inc
shrb
leave
incl
push
push
subl
xor
rorl
sub
repnz
sbbl
ds
roll
xchg
or
push
push
rorb
or
and
add
mov
scas
mov
repnz
shlb
icebp
mov
bound
or
fldenv
push
stos
inc
mov
iret
inc
clc
das
lods
jge
dec
scas
cld
mov
cmpsl
ret
imul
das
cmp
mov
rclb
in
xor
mov
add
mov
or
ljmp
pop
xchg
mov
movsb
pop
inc
ret
loop
pop
test
icebp
push
sahf
gs
clc
in
icebp
ds
adc
push
mov
xor
fsubrl
mov
pop
mov
xchg
push
loop
push
and
test
add
aam
adc
in
test
sbb
aaa
repnz
int
loope
push
es
xchg
addl
out
int
sbb
xchg
mov
cmp
push
cmc
jns
xchg
xchg
sahf
nop
adc
xchg
mov
call
sub
ljmp
push
adc
cmpsb
movsb
js
in
push
push
dec
mov
xor
push
xor
cmp
xor
cmc
je
sub
out
fwait
sbb
frstor
nop
pusha
xor
jge
pop
out
cmp
pop
add
stos
dec
xor
mov
out
add
sub
inc
mov
call
lods
inc
jo
xlat
outsl
pop
popa
outsl
pop
jbe
pop
insb
xchg
adc
imul
ret
lcall
sti
stos
out
scas
in
push
fisttpl
popa
pop
mov
js
or
adc
repz
stos
testl
jp
push
faddp
rcrl
sbb
fimuls
mov
mulb
cltd
in
nop
stos
cmp
xchg
ret
stos
sbb
mov
inc
jo
add
add
mov
push
inc
mov
jge
inc
jbe
icebp
cs
imul
add
lock
stos
pop
in
leave
inc
xchg
push
pop
rcll
push
xor
dec
in
mul
stc
test
mov
mov
aaa
es
cli
pusha
imul
ss
jge
pop
mov
ret
mov
cmp
in
ljmp
pushf
fwait
scas
mov
jbe
xchg
repnz
xchg
pop
mov
xchg
mov
push
and
sub
arpl
out
or
and
mov
and
sub
inc
xor
cmp
movsl
sti
add
mov
inc
scas
sub
push
sti
or
loope
push
push
mov
xchg
adc
loopne
jbe
insl
xchg
or
loop
mov
dec
push
mov
push
sbb
push
movsl
sub
test
pop
es
popa
mov
in
cmp
movl
nop
xchg
lods
xchg
loop
vmread
lea
jmp
mov
leave
pop
sbb
cmpsb
movsl
cld
int3
rcl
mov
dec
sti
ja
sbb
bound
lea
lock
pop
pop
add
lods
sub
inc
das
imul
lret
aaa
jnp
sbb
inc
mov
dec
lods
add
inc
or
in
pop
jne
xchg
icebp
loopne
lret
cltd
xchg
lods
daa
imul
add
jo
xor
or
dec
mov
ljmp
jno
loop
fnstsw
lret
fadds
call
lret
rcll
das
push
test
sub
icebp
sbb
out
test
jl
icebp
lds
dec
jae
loopne
jmp
in
push
cmp
in
jecxz
mov
hlt
gs
sub
push
xchg
cmc
fcomps
orb
push
sti
fdivrp
push
fstps
data16
pop
jle
xchg
adc
xchg
shlb
add
cmp
in
inc
mov
in
sub
gs
lahf
jns
scas
push
dec
mov
dec
push
bound
sar
fildl
mov
dec
mov
push
adc
and
rcl
loop
inc
fldt
repz
imul
mov
sub
ja
jecxz
aas
gs
imul
jmp
stos
jmp
jl
push
nop
out
nop
jne
ds
sub
sub
add
adc
fstpt
ljmp
sub
stos
adc
sti
call
filds
mov
hlt
jnp
js
popl
mov
mov
mov
mov
mov
lods
adc
addr16
xchg
enter
push
mov
insb
shrb
aam
shll
xor
aam
fwait
int
pop
jo
and
jge
pop
and
cmc
jae
push
mov
xchg
or
pushf
ljmp
pop
sbb
pop
cmp
fwait
ja
fidivrs
fisubrs
in
add
add
gs
jl
movsl
mov
mov
aad
insl
out
leave
dec
xorl
jno
sub
mov
xor
ljmp
sub
lcall
mov
adc
data16
dec
insl
clc
dec
dec
cmp
jns
jno
sbb
jl
xchg
xchg
mov
in
pusha
sti
push
pop
in
cmp
aas
add
je
or
pop
lret
jb
iret
sbb
xor
xchg
ret
cli
mov
cli
in
pop
adc
out
mov
in
sbb
jg
je
mov
fwait
cld
sub
inc
je
test
cmpsl
arpl
or
adc
in
scas
sbb
daa
arpl
test
and
mov
pop
jecxz
push
push
add
adcl
movsl
ret
jno
test
jle
push
mov
xchg
push
cmp
fimuls
std
sub
and
push
push
movsb
pusha
out
gs
jb
pop
lea
pop
fmuls
sub
jno
shl
pop
test
outsb
popa
adc
faddl
jl
adc
aas
dec
in
les
gs
sub
mov
lret
aad
xor
cmovg
aad
inc
stos
jmp
jmp
sub
and
repnz
xor
pop
push
or
nop
imul
dec
dec
stos
xor
sbb
jge
ret
ud2
mov
or
lret
mov
fs
dec
test
or
xor
and
push
jg
or
lahf
push
out
push
or
arpl
xchg
or
dec
in
dec
out
or
xlat
inc
jns
cmp
inc
fwait
and
fcmovbe
xchg
or
sbb
jmp
mov
cvtpi2ps
push
dec
fs
add
ds
lret
test
int
repnz
inc
inc
jle
pop
push
pop
mov
imul
mov
out
sahf
jmp
daa
pop
pop
jbe
mov
sbb
mov
sub
aad
lock
and
lcall
jnp
in
jl
arpl
push
in
je
jle
adc
adc
mov
shl
adc
jge
push
cmpsl
rdtsc
out
mov
pushl
cmp
das
cmp
xchg
adc
popa
leave
adc
outsl
inc
jmp
jnp
loope
cmpsb
pop
xadd
in
sub
lods
pop
in
cli
nop
les
lock
popf
lods
jb
mov
push
ret
push
pop
jge
outsb
push
inc
mov
and
aaa
rorb
inc
incb
or
sub
fsubrs
aas
adc
dec
dec
and
into
jecxz
xchg
into
cmpsb
loop
xchg
push
js
cmp
mov
mov
or
nop
mov
jne
xchg
xchg
insl
sahf
pop
inc
mov
jg
pushf
adc
mov
nop
adc
xor
outsb
xchg
push
push
ljmp
inc
aam
adc
cmp
bound
test
pop
push
aad
pop
inc
popa
loopne
aas
daa
cwtl
ja
xchg
lock
pop
lcall
sbb
xchg
push
mov
pop
push
ret
jno
and
bound
pop
in
mov
and
clc
jns
movsb
add
inc
enter
or
in
data16
ror
sahf
jl
je
arpl
mov
inc
jo
sub
iret
inc
lret
and
aaa
adc
adc
mov
test
stc
pop
adc
xchg
jo
ljmp
pop
fimuls
test
sub
xor
mov
mov
es
lcall
rolb
orb
dec
xor
arpl
dec
js
popa
or
data16
mov
jae
orl
xchg
add
and
sarl
out
aam
ljmp
sub
jns,pn
in
mov
add
test
mov
fwait
ss
pop
scas
cmpsl
movsb
aaa
mov
sub
into
mov
push
sbb
bnd
jg
out
dec
jns
push
pop
outsl
ljmp
aam
fistpll
bnd
sub
push
cmp
sbb
mov
cmp
dec
fistl
cmp
out
pop
shll
jg
imul
mov
fdivl
mov
jbe
test
jbe
sbb
hlt
dec
mov
movsb
xor
sub
mov
into
pop
mov
push
in
pop
int3
js
xorb
xchg
psrlq
sti
sarl
jne
mov
scas
ja
add
shrb
push
in
in
js
jo
sub
xor
push
adc
rol
call
data16
fisubl
xor
mov
dec
dec
push
cmc
orl
dec
mov
and
inc
mov
xchg
test
xor
jae
xor
and
mov
popa
loopne
pusha
clc
sub
mov
push
sub
sub
mov
sub
sti
fcomp
jbe
jo
pop
sbb
mov
cmp
cwtl
push
out
test
aaa
and
test
sub
scas
mov
xor
xlat
add
push
xor
loope
insb
sbb
dec
mov
lock
mov
xor
test
dec
jl
mov
arpl
std
sbb
mov
aas
jp
sbb
mov
imul
cltd
inc
mov
addb
mov
mov
lock
loopne
xor
push
lcall
fwait
ds
cmpsb
xchg
sub
push
cmc
mov
in
add
in
mull
arpl
adc
inc
pop
outsb
add
shlb
addr16
adc
in
mov
xor
fldl
sar
mov
incb
mov
sub
sbb
ja
movsl
clc
xor
dec
xchg
imulb
cmp
stos
adc
xchg
cld
sub
ja
push
inc
jmp
enter
ljmp
cmpsb
cs
inc
pop
xchg
ss
in
pop
jmp
subl
int3
add
scas
in
fistps
sub
push
mov
sbb
mov
push
je
pop
cld
sub
in
cmc
arpl
incl
sbb
push
pop
mov
js
push
nop
add
cltd
cmc
jae
dec
call
push
lret
adc
xchg
iret
push
mov
sbb
imul
les
lea
mov
sbb
jns
xchg
divb
push
add
stc
lcall
addr16
stc
cmp
push
sbb
inc
add
mov
out
adc
push
xor
daa
pusha
insb
push
lds
sahf
inc
icebp
sub
inc
in
adcl
test
lock
push
aam
in
add
lahf
xchg
test
outsl
push
in
sub
icebp
pcmpeqw
rcll
out
push
and
test
push
cmp
cmp
cmpsb
or
jecxz
mov
loop
lea
xchg
xor
inc
push
xchg
aad
xchg
or
cmp
cmp
cmpsl
and
cmp
outsl
and
into
or
outsl
movsl
xlat
cltd
adc
add
cli
ljmp
mov
sbb
out
mov
lret
cmp
test
lahf
add
xor
mov
gs
stos
cmpsl
enter
and
movsl
sbb
sbb
or
xorb
adc
movsb
test
rcll
dec
lret
dec
xchg
orl
xchg
fisubs
xchg
sbbb
jne
push
imul
clc
sub
mov
sub
and
fsub
push
and
xor
les
fs
int3
mov
out
mov
lea
pop
imul
imull
sbbb
dec
pop
data16
js
adc
jle
popa
scas
sub
push
and
fdivrl
data16
cmc
cmpsl
jle
cmc
test
jecxz
daa
in
adc
jg
mov
add
and
push
das
sbb
sbb
mov
mov
mov
mov
cmpl
and
mov
jno
call
ss
fadds
adc
mov
lcall
xchg
mov
mov
int3
xchg
out
hlt
jnp
cmp
jge
in
stos
lods
xor
and
test
adc
out
test
or
sbb
sub
mov
inc
daa
jmp
lret
jl
in
and
inc
mov
insb
jp
std
push
cld
mov
add
insl
dec
pop
ficompl
std
or
gs
sub
cmp
xor
sub
push
inc
repnz
sub
inc
ficoms
cmpsb
jl
cmp
xchg
popa
test
dec
fstps
movsl
adcb
data16
cltd
adc
mov
stos
xchg
sub
mov
inc
call
pop
cmpsb
jb
testb
adc
stc
sub
shr
rorb
cmpsb
xchg
dec
decl
push
mov
test
fstpl
xchg
cmp
mov
leave
pop
aas
lds
jae
jae
aaa
jp
aam
xor
pop
mov
mov
push
pop
add
sub
inc
stc
sbb
jns
jns
cli
pop
sbb
jns
inc
mov
sarl
arpl
scas
jmp
jbe
jo
pop
lods
and
leave
in
jp
ljmp
mov
adc
testb
dec
push
shlb
adc
xor
insl
cld
lret
cmp
sbb
popf
mov
adc
leave
popa
adc
loope
inc
sbb
negl
stc
dec
inc
int
cmp
jb
push
xchg
mov
clc
sub
sti
imul
sbb
loop
fisubs
mov
insl
push
xchg
aaa
add
sarb
push
dec
jo
sbbb
lods
xchg
jl
lret
add
inc
popf
das
cld
enter
add
test
pop
jnp
mov
push
stos
mov
xor
test
cmpb
jle
sub
xchg
jmp
jle
jae
in
push
cwtl
pop
dec
add
dec
or
jnp
decl
sbb
clc
mov
in
sbb
mov
mov
gs
mov
imul
outsl
jecxz
lret
popf
mov
nop
out
push
inc
xchg
cmpb
popf
mov
test
xchg
dec
test
mov
movsb
js
sub
into
push
push
movsl
mov
cltd
push
into
xor
pop
scas
dec
mov
mov
adc
pop
mov
aam
cltd
adc
jl
push
fsubs
jne
xchg
push
es
and
addr16
pop
jp
or
add
enter
enter
notl
dec
fistpl
ret
xor
mull
sbb
out
push
dec
xor
ss
lret
sub
adc
enter
push
cmpsl
aas
adc
push
in
mov
dec
test
loope
inc
pop
or
stc
cmp
mov
sub
push
mov
pusha
iret
mov
and
fcoml
rcl
mov
sbb
pop
movzwl
push
cmc
jg
fs
jle
xchg
cmp
inc
mov
pop
sbb
xor
aas
mov
js
out
adc
movsl
ljmp
adc
mov
lods
dec
les
out
mov
lret
sbb
xchg
xor
mov
xorb
add
xchg
inc
insl
jecxz
incl
jmp
shll
push
stc
jnp
and
cmpsl
loop
lds
iret
mov
inc
pop
aam
pop
clc
sbb
jb
jl
mov
insl
xchg
or
cwtl
lods
es
pop
add
or
xor
mov
cltd
jmpw
fstps
inc
jbe
cmpsb
into
mov
jl
add
mov
and
sbb
pop
stos
mov
mov
mov
jns
xchg
jp
inc
or
ja
mov
test
xor
push
add
dec
ja
sub
cmp
cmp
cmp
mov
lret
add
lret
jbe
jbe
jle
mov
ja
stc
mov
or
outsb
dec
add
pop
js
das
shll
xor
sub
jmp
mov
leave
gs
xchg
xor
sbb
xchg
sub
jmp
std
shlb
rcrl
cmp
sbb
mov
mov
out
xor
sbb
dec
xchg
or
xchg
ret
fwait
enter
jle
lock
call
and
dec
mov
inc
sti
jg
sbb
adc
imul
and
and
mov
dec
int
pop
aam
in
fisttpl
clts
push
push
or
shlb
dec
dec
pop
daa
enter
idivl
sbb
mov
jb
cli
cmp
fmull
add
dec
dec
jnp
imulb
shlb
xchg
mov
insb
test
mov
clc
loope
jle
xchg
dec
inc
fistpll
inc
int
subl
push
ljmp
and
jecxz
push
cmp
adc
and
rorl
cmp
xchg
mov
mov
in
std
lret
mov
idivb
es
mov
ljmp
mov
push
or
ja
pop
xor
pusha
and
add
sbb
adc
pop
and
sbb
mull
pop
scas
adc
add
scas
adc
cmp
scas
cmp
ret
cmc
movsl
inc
loope
jbe
cmpsl
sarl
add
or
jae
pop
adc
add
or
xor
in
cltd
aaa
js
lcall
push
aaa
inc
mov
mov
xchg
jne
xor
mov
jnp
or
xor
push
dec
jo
push
imul
sub
lahf
xor
dec
pop
mov
xor
cmp
xor
fs
xchg
lds
or
inc
xchg
xchg
jae
xor
push
aam
sbb
mov
sub
in
idivl
fptan
jb
xor
lods
add
xor
mov
sti
jecxz
pop
icebp
add
movsb
lds
daa
mov
roll
cmpsl
addl
cld
mov
mov
in
xor
fidivs
cwtl
cltd
in
jmp
push
xchg
mov
and
sbb
aam
out
rorb
loopne
insl
iret
mov
mov
mov
aas
sbb
xor
clc
in
fists
sar
in
repz
add
pushf
pop
outsl
inc
ljmp
test
dec
pop
pop
testl
int3
bound
test
jg
mov
or
push
aas
mov
lods
push
repz
inc
cmpsb
jmp
or
ja
imull
incl
mov
and
mov
jnp
flds
jnp
dec
mov
add
ja
sti
jl
rcl
inc
test
and
popa
aam
xchg
ror
cvtps2pi
inc
jecxz
fiaddl
icebp
xlat
adc
sbb
adc
nop
xor
ret
mov
xor
and
add
mov
jle
mov
pop
leave
js
movsb
cli
inc
stos
aam
adcl
and
jne
into
mov
fisttpll
adc
repnz
push
inc
ret
cmp
xchg
pop
inc
dec
aad
and
fists
adc
std
pop
imul
push
sbb
and
fdivrs
inc
push
cmpsb
notl
mov
add
mov
test
xor
sti
aad
mov
bound
faddl
hlt
pop
adc
rorl
add
pop
jmp
xchg
mov
jno
xor
data16
push
test
scas
loopne
push
pop
mov
imul
mov
test
in
pop
movsb
in
clc
testl
pop
push
pushf
repnz
push
pop
pushf
dec
sub
inc
into
pushf
sbb
cmc
adc
test
mov
xlat
adc
cmp
fwait
inc
pusha
rol
sub
dec
adc
or
xchg
iret
cmp
rcl
xchg
mov
out
js
mov
cmc
into
out
ja
mov
pushf
sub
sahf
xor
sub
inc
pusha
mov
jns
enter
fiaddl
insl
psrld
or
inc
mov
test
cltd
and
push
adc
mov
inc
repz
stos
inc
hlt
adc
pop
dec
insl
pop
movsb
lret
fmull
stc
sti
fistps
fldl
fsubr
cmovne
or
lret
cmp
imul
bound
hlt
pusha
and
mov
outsl
xchg
fidivrl
out
sbb
sbb
sbb
add
cmp
daa
pop
imul
leave
pusha
out
enter
xchg
jge
sbbl
add
inc
test
stc
pop
test
pop
jle
daa
dec
out
bound
bound
addr16
jb
cld
sub
in
rcl
aad
and
mov
in
mov
or
inc
xchg
in
je
iret
and
lods
dec
aad
enter
push
lods
in
adc
adc
cwtl
fnstenv
push
add
push
cmp
push
add
cmpb
mov
subl
cli
in
or
inc
nop
cmp
test
add
pop
int3
mov
fistl
int3
sahf
in
call
cmpsl
lock
jb
xlat
push
or
fsub
push
mov
pushf
enter
iret
or
in
mov
loop
mov
xor
repz
jmp
loop
arpl
jl
imul
jmp
mov
push
pop
cmp
enter
add
mov
dec
lods
test
movsl
popl
sub
pop
outsl
call
mov
test
and
adc
pop
ljmp
sub
sbb
or
fwait
lret
lods
xor
scas
in
add
cmp
jp
subb
cmp
mov
inc
jl
jecxz
push
push
mov
push
lods
mov
sbb
arpl
stos
mov
mov
inc
insl
pop
or
push
mov
clc
push
into
rcrl
pop
test
lret
sub
cwtl
push
inc
sahf
nop
cmc
mov
push
sub
clc
pop
or
cwtl
jecxz
inc
sub
idivl
dec
fisttps
cmpsl
insb
lret
jns
sub
dec
xor
pushf
xchg
call
icebp
or
mov
dec
cmp
sub
mov
rcll
pop
sbb
iret
imul
fwait
mov
adc
jecxz
xorl
mov
pop
mov
xchg
push
mov
sarl
lcall
xor
sarl
dec
in
mov
or
xchg
nop
imul
movb
pushl
mul
and
insb
mov
or
mov
insl
psllq
pop
mov
add
sbb
jecxz
lahf
data16
fstl
popf
std
cmpsl
ja
add
add
adc
lret
or
lea
cmp
pop
cld
sbb
jne
cmc
cmp
jae
jne
divl
cs
xor
mov
mov
add
xchg
into
stc
ljmp
cmp
push
mov
mov
enter
and
jl
stc
insl
sbb
enter
bound
push
gs
ds
cmp
push
jnp
pop
rorb
jne
sub
sbb
push
cmpsl
aad
int3
scas
cmp
test
outsb
cmovno
pop
mov
sub
jns
push
arpl
or
fcoms
and
jl
into
mov
xchg
fmul
outsb
and
add
jge
dec
cmp
inc
inc
inc
addr16
js
ret
pop
jmp
jl
xor
jecxz
movsl
aaa
testb
test
mov
fcoml
int3
fdivr
mov
lock
lea
xchg
mov
fcmovnu
lock
pushf
loopne
or
mov
insb
and
cld
popa
rol
inc
mov
mov
ss
mov
push
sarl
ret
lock
enter
dec
add
jae
jg
aas
add
mov
shll
sub
iret
add
das
xchg
lret
add
addb
cmp
push
stos
mov
mov
and
loop
pop
sbb
loop
pusha
loopne
jmp
mov
mov
xchg
mov
xchg
clc
out
jbe
nop
movsb
addr16
cmp
jle
jbe
jmp
lea
xor
roll
aaa
in
mov
lcall
cmc
mov
sbb
mov
adc
daa
dec
pop
or
lea
fs
dec
xchg
std
mov
out
adc
dec
fs
and
call
loop
sti
repnz
loopne
pop
leave
rcr
lcall
vpackuswb
and
jl
and
aad
ret
push
xor
mov
insl
cmpsb
lds
ds
jmp
xchg
loop
jmp
out
mov
push
test
imul
outsb
enter
in
out
mov
test
lcall
jl
ljmp
out
or
repz
dec
cld
fisubrl
roll
push
fwait
sbbl
sahf
outsb
dec
add
mov
aam
push
jge
jae
daa
lods
push
dec
sbbb
xchg
cmp
ret
aam
add
out
mov
movb
mov
sbb
adc
pop
xor
adc
and
mov
xor
data16
cmp
mov
dec
and
fs
jp
fwait
push
cmp
decb
sbb
and
aaa
lret
sbb
sbb
dec
xchg
xchg
out
js
popf
fcompl
and
cltd
pop
out
xchg
cmc
in
xor
lret
mov
mov
push
dec
push
dec
movsb
or
das
stos
pop
lret
sti
mov
daa
jb
mov
mov
ret
lahf
shlb
sbb
ljmp
out
outsl
sub
mov
jge
pop
mov
jle
loope
jbe
adc
sti
int
mov
fistpll
fcom
icebp
je
jno
int
pop
push
xor
add
dec
add
push
sbb
push
xchg
pop
push
and
push
pop
lods
mov
int
fisttps
sub
insl
and
outsb
inc
enter
repnz
xchg
movsb
lods
fmul
sub
nop
sar
es
xor
subb
adc
lcall
jnp
lock
and
sti
adc
xchg
ljmp
imul
dec
inc
cwtl
mov
test
call
adc
cmp
out
push
add
add
in
icebp
mov
hlt
in
push
and
cmp
sbb
add
andb
popa
pop
push
lret
add
add
pop
xchg
sub
in
mov
cmp
pop
adc
test
jbe
enter
mov
mov
repz
mov
testl
stos
cwtl
movsb
call
mov
shlb
xchg
lahf
in
sti
push
push
test
push
jecxz
xchg
and
sub
cld
vcvttss2si
push
sbb
aam
loop
sub
call
push
push
stos
xchg
test
dec
mov
jl
out
int3
xchg
fisubrs
and
add
fisubrl
pop
adc
jae
dec
sbb
dec
sub
pop
in
fdivl
adcl
das
add
js
shrb
loopne
mov
cmp
or
jge
adc
clc
loope
repnz
cli
lods
pop
adc
inc
roll
mov
lea
fs
stc
bound
push
adc
sti
inc
cltd
cli
dec
enter
dec
rcrl
pushf
add
push
jle
xlat
add
stc
pop
push
fsubl
or
pop
mov
mov
in
xchg
imul
xor
fists
sbb
sub
and
ljmp
push
rorl
hlt
dec
rolb
jmp
icebp
cmpsb
movsb
inc
ret
push
mov
and
sbb
cli
mov
arpl
or
jg
test
outsb
fdivr
cs
imul
subl
test
or
inc
adc
fnop
shll
aad
push
xchg
mov
jl
daa
fwait
xchg
int3
incl
sub
ret
loope
jae
sub
sbb
push
pop
popa
fs
sub
add
sub
lods
push
adc
pop
daa
cmp
stos
xor
sbb
or
or
mov
loope
and
mov
dec
sub
in
inc
scas
xchg
adc
stos
loope
shlb
sahf
dec
push
add
jle
bound
mov
mov
enter
xor
xor
movl
add
divb
lret
sub
es
inc
and
je
inc
popa
stos
push
pop
pop
mov
lret
loop
loope
and
cmpsl
jle
stos
xchg
orps
lahf
ljmp
movsl
inc
adc
enter
mov
add
int3
sbb
push
test
adc
inc
sahf
lea
leave
cmp
xchg
scas
out
outsb
ret
mov
push
sbb
fs
cmpb
sbb
popf
scas
out
push
sub
dec
bound
inc
cs
bound
sub
and
dec
into
add
jmp
add
call
lea
dec
adc
jnp
fs
cmp
cld
das
lret
fadd
jmp
pushf
dec
push
int
adc
pop
dec
pop
xchg
jmp
lock
mov
mov
rep
into
dec
mov
fwait
lds
nop
cmc
decl
xor
nop
cmpsl
fidivrl
mov
cmp
out
adc
test
jle
dec
call
outsl
shlb
int
jnp
cmc
adc
neg
push
lods
movsl
mov
xchg
xorl
out
xor
xor
cmp
mov
cli
mov
cwtl
mov
mov
xchg
xchg
imul
ja
shll
icebp
inc
push
pusha
xchg
jb
mov
sub
sbb
dec
inc
clc
sahf
ja
adc
out
and
in
iret
mov
shlb
mull
rclb
loop
or
lahf
out
mov
out
push
test
cmpsl
pop
add
sub
sarl
adc
dec
cld
jmp
push
ficoml
loopne
lret
mov
mov
lahf
mov
popf
test
imul
lcall
insb
stos
xchg
or
dec
xchg
push
movsb
fcmovnu
mov
cwtl
cli
outsb
sbb
lret
jmp
andb
cmp
xchg
aad
lahf
pop
adc
out
pop
mov
dec
les
mov
aam
ja
or
test
and
adcb
jl
push
rorl
xor
jne
repz
cmp
fs
bound
lods
stc
and
or
jp
orb
jg
sub
cmpsl
pop
iret
xchg
dec
or
adc
lahf
in
outsl
imull
rclb
cmpsl
mov
fadd
xor
mov
mov
ja
stos
adc
bound
and
jb
daa
sbb
rclb
add
pushf
dec
xorb
call
jns
push
jo
or
out
leave
in
xchg
jg
and
scas
mov
ret
xchg
outsb
push
or
sti
xchg
dec
pop
jmp
inc
inc
mov
dec
inc
push
dec
adc
js
scas
jle
fisubrl
push
jne
fwait
fwait
or
adc
sub
sahf
or
xor
nop
pop
inc
xchg
vaddss
mov
in
jmp
aaa
loop
xchg
ja
xlat
aam
lds
mov
jb
test
sti
fs
sbb
cmp
fmull
sbb
mov
je
int
cli
xor
popa
mov
dec
aad
les
pop
hlt
in
xchg
subl
mov
es
mov
xchg
and
pop
adc
icebp
adc
test
fwait
cli
inc
movl
pop
dec
lock
lahf
dec
mov
jle
loop
test
bound
fidivrl
test
push
fdivrs
jmp
ss
xor
sbb
sar
imul
inc
ljmp
sub
in
push
ss
cltd
dec
mov
pop
push
mov
lea
and
nop
add
pop
enter
jb
mov
fisttps
pop
popf
shlb
xchg
jl
mov
gs
jo
int3
or
dec
stc
mov
insl
outsb
lcall
cmpsl
outsl
adc
test
in
outsl
ss
inc
outsl
insb
decl
and
push
cli
cmp
int
sbb
js
add
lock
scas
arpl
stos
iret
cmp
pop
xchg
lods
mov
in
pop
push
jb
psubd
xchg
adc
jne
decl
setb
jb
push
bound
stc
gs
mov
loope,pn
popa
pushf
push
push
leave
gs
pop
sbb
and
xchg
inc
or
fwait
jecxz
add
out
adc
cmp
arpl
mov
in
and
fs
ror
insl
pop
insb
loop
aas
insb
inc
add
mov
inc
lahf
cmp
stc
imul
fwait
adc
and
adc
add
inc
lret
mov
adc
adc
adc
mov
test
into
sbb
inc
out
jg
jle
enter
jne
mov
mov
wbinvd
das
fisttps
insl
daa
or
addb
sti
push
add
ljmp
insl
cmp
addr16
sbb
push
or
cli
ljmp
dec
aad
test
and
inc
xchg
bound
push
popa
mov
add
mov
mov
dec
jmp
dec
hlt
cld
dec
bound
leave
xor
or
dec
dec
and
fldcw
sub
aam
fcompl
inc
push
test
mov
and
mov
popa
adc
add
xchg
pop
popf
ror
and
loopne
verr
mov
adc
mov
push
jno
pop
jae
sbb
int
push
cld
and
enter
sbbl
fldl
rclb
and
jmp
push
adc
xor
push
or
xchg
fisttps
push
fbstp
outsl
repnz
adc
popf
or
enter
fst
dec
cld
dec
stos
divl
sbb
out
fnsave
aaa
pop
int
add
das
sti
xchg
popa
fwait
inc
fs
push
int3
testl
outsb
mov
pop
test
ds
and
and
pop
popa
xchg
dec
out
xor
fadds
sub
icebp
jno
in
insb
mov
in
loop
jbe
ds
lret
lds
adc
and
cmp
xchg
dec
mov
movsb
adc
lods
xlat
vpmuludq
orl
pop
test
out
ficoml
insl
rclb
and
dec
je
xor
dec
wrmsr
xor
push
cltd
mov
xor
and
ret
flds
inc
mov
test
pop
inc
jb
pop
sub
cmpsl
movsl
push
rorb
pop
stos
add
add
test
frstor
or
out
repnz
and
sbb
add
xchg
scas
aas
mov
imul
fs
scas
or
in
out
xor
pop
lock
jg
xchg
sub
or
mov
mov
lret
push
pop
ficoml
adc
inc
fwait
jl
xor
xor
inc
xlat
mov
icebp
jl
fwait
data16
pop
xchg
aad
inc
cmpsl
jne
shlb
aaa
sbb
dec
stc
or
mov
fwait
jne
jnp
cmc
dec
dec
aaa
pop
inc
loope
outsl
push
incl
cmp
cmpsb
hlt
loop
test
mov
out
rorl
mov
lcall
sub
push
sub
xor
inc
pop
ret
jecxz
xlat
aaa
xor
clc
addr16
dec
mov
inc
and
popl
cwtd
repz
in
xchg
shrb
outsl
paddw
data16
pop
cmpsl
cmp
push
shlb
in
jecxz
and
pusha
jp
add
dec
pop
les
dec
push
cmp
adc
hlt
andl
mov
xchg
loop
inc
sbb
ljmp
insl
push
mov
adc
xchg
sub
xor
push
in
data16
bound
insb
clc
add
inc
mov
xor
nop
sub
adc
mov
jecxz
inc
add
pusha
repz
or
cmp
push
std
adcl
and
cmp
pop
scas
mov
push
std
lret
fs
pushf
loope
cltd
loope
fisubrl
sti
jo
and
jl
push
sub
repz
pop
inc
js
loope
xor
jg
sub
sub
cmpsb
in
addr16
push
adc
or
xor
add
inc
jmp
fisttps
mul
jmp
sbb
daa
shr
inc
mov
and
cld
cltd
fldt
adc
fcmovnu
pop
mov
xor
jnp
add
mov
leave
aaa
in
mov
xchg
or
dec
add
mov
push
ljmp
mov
inc
in
xchg
sub
stos
add
loopne
cmp
out
int3
mov
into
nop
cmc
push
out
enter
inc
mov
jo
dec
into
mov
cld
lds
outsb
dec
fyl2x
mov
mov
rolb
fcmovnbe
inc
push
call
lock
jg
icebp
sub
mov
push
mov
jne
sbb
jnp
push
xor
lahf
ret
enter
add
in
pop
fisttpl
aam
pop
sbb
call
push
adc
push
xor
xchg
push
jmp
or
ret
repz
jmp
loopne
test
in
fbld
xor
pop
cmc
lds
xchg
mov
pop
fdivrp
arpl
add
push
adcb
ret
adc
pop
stos
test
sub
fildll
cmp
imul
mov
jl
je
jbe
pop
std
sti
arpl
arpl
lds
pusha
cmc
xlat
sub
sbb
shl
cmp
ljmp
test
and
adc
mov
inc
push
lock
mov
mov
mov
stos
jno
imul
cmp
filds
mov
gs
jae
add
pop
mov
pop
mov
jmp
xor
cmp
stc
dec
push
add
push
addr16
add
stos
dec
and
cmp
mov
popa
int
pop
ret
mov
xchg
movsl
pop
cmp
std
add
pusha
sbb
sbb
adc
ret
xchg
mov
sbb
mov
mov
push
xchg
mov
mov
test
pusha
notl
dec
cmc
inc
jns
stc
and
out
int
mov
add
popf
out
hlt
push
sbb
rorl
add
cltd
ss
je
mov
cld
outsb
les
xchg
daa
jle
xlat
std
inc
lods
inc
movsl
pushf
jae
jbe
and
jne
insl
flds
pop
pop
cmp
adc
mov
push
jecxz
jl
fsubrl
cmp
sbb
int3
fs
je
imul
jle
enter
std
divb
cmp
or
gs
xchg
push
and
pop
fs
fildl
sbb
sub
mov
mov
push
or
std
out
mov
jo
mov
andl
or
lea
push
lret
imul
test
inc
orb
fisubs
clc
fdiv
sub
mov
mov
jl
fbstp
jbe
pop
in
sbb
leave
ss
mov
call
cmp
jns
xor
cmp
stos
xchg
mov
aad
insb
push
pop
inc
punpckhbw
dec
into
insl
idivl
inc
push
les
push
ret
mov
xorl
cmp
mov
mov
test
cmpsb
icebp
lea
cmpsl
adc
call
mov
pop
jecxz
gs
jno
out
add
lcall
fisubl
jb
push
xor
and
pop
xor
mov
mov
test
add
inc
or
aas
pop
dec
loopne
xor
movsb
bound
cwtl
push
adc
push
pop
mov
ficompl
stos
pop
inc
outsb
jnp
int
insb
mov
lods
mov
xchg
mov
ficoml
mov
mov
dec
repz
push
inc
inc
or
enter
sbb
xchg
subb
test
popl
notl
jns
inc
insb
or
fwait
cmpsl
xchg
mov
fxrstor
adc
mov
inc
mov
mov
lahf
lods
sbb
jecxz
add
out
mov
and
jns
add
les
in
mov
icebp
je
push
movsb
add
fnstsw
sbb
jp
fs
adc
pop
cmp
fwait
jno
push
push
call
sub
fidivrs
out
gs
mov
sti
inc
and
aaa
push
sub
sub
mov
imul
sub
outsl
pop
push
jmp
fmuls
movsl
enter
sbb
jg
cwtl
dec
xchg
repz
jle
cld
push
sahf
out
aaa
clc
insb
adc
lods
mov
and
dec
sbb
loope
test
jnp
pop
enter
cmp
fdivrs
mov
dec
leave
cld
rcr
lds
push
cmp
pop
adc
mov
push
lods
dec
in
cld
jmp
iret
js
sub
jo
inc
xor
jg
push
mov
sbb
std
jg
fnsetpm(287
cmpsb
pop
addr16
or
mov
fmuls
std
testb
push
jno
and
jmp
jl
push
addl
out
out
lret
leave
ret
sbb
int
shrb
cmp
cmp
push
test
jb
dec
add
xlat
icebp
lds
icebp
out
fs
cmp
lock
cmpsl
and
pop
cmp
dec
lds
jg
push
pop
and
jge
xchg
mov
mov
icebp
in
jmp
mov
xchg
mov
movl
frstor
fwait
mov
jns
xchg
pushf
jne
in
jae
leave
push
loope
mov
and
mov
add
cld
gs
scas
aaa
mov
mov
push
dec
fidivrs
xor
dec
sub
fimull
shll
pushf
ja
fdivs
xor
sub
sahf
rcrl
jo
addr16
xchg
inc
adc
or
fdivl
cli
sbb
fldl
aaa
push
inc
add
hlt
mov
test
lret
mov
mov
stos
clc
mov
decb
mov
jmp
or
pop
repz
dec
pop
xchg
add
mov
out
repz
imul
icebp
dec
imul
push
out
test
sbb
xor
lods
insl
movsl
inc
push
outsb
fs
dec
add
ret
cmpsb
ja
int3
jns
and
push
sub
scas
mov
lret
add
jg
add
mov
pop
pop
fldl
iret
in
rolb
mov
cltd
or
add
inc
test
cmp
jbe
mov
pop
repnz
xorl
iret
pmaddwd
xchg
mov
cmp
pop
jmp
or
pusha
idivl
test
pushf
adc
jno
cmp
mov
scas
lahf
mov
push
xor
inc
xchg
jb
push
mov
and
inc
test
xchg
mul
push
sub
out
pop
stos
in
fs
mov
js
shll
out
xchg
mov
pop
mov
and
stc
sbb
lahf
testl
scas
adc
ror
pop
xlat
add
pushf
and
mov
lahf
aas
lods
aas
cmpb
mov
mov
movsb
out
es
mov
xchg
stc
loop
das
lahf
dec
or
push
pop
cmpsb
lcall
or
pushw
stos
mov
pop
popf
mov
ret
adcb
xchg
or
repz
jno
addr16
jecxz
mov
push
popf
jb
push
add
xor
enter
jbe
push
in
shlb
jg
or
rorl
mov
lods
jo
mov
mov
adc
icebp
inc
xor
mov
mov
sbb
mov
popa
int
aad
cmp
add
setne
xor
push
fcoms
out
jge
xchg
in
mov
out
cmpsl
sub
out
clc
pushf
mov
push
popf
mov
xor
call
jmp
hlt
fcmovbe
movsl
cltd
sarb
cmp
jge
call
jge
pop
in
repz
fwait
daa
mov
mov
xchg
stos
xchg
loop
call
adc
ljmp
popf
dec
jle
insl
cmpsb
push
push
xor
pop
lock
sbb
outsb
mov
mov
leave
sub
push
movsb
or
cmpsl
sub
jo
in
cmpsb
cwtl
aam
add
stos
push
adc
movsb
fistl
xlat
iret
inc
cmp
xor
nop
lret
or
mov
pop
adc
sub
mov
std
stc
scas
xchg
repnz
es
lock
shrb
push
dec
stos
rcr
out
pop
subb
in
add
add
and
js
rorb
dec
push
sub
mov
inc
gs
bound
stos
lds
xchg
adc
leave
mov
ljmp
cli
daa
mov
outsb
out
jno
jne
jp
fidivrs
jl
xor
aam
mov
dec
cld
negl
or
or
stos
sub
lock
nop
fwait
jb
xchg
jnp
bound
pop
sbb
popa
jp
adc
ficoml
outsb
push
mov
sub
push
icebp
daa
pop
or
ret
jp
sbb
lods
out
out
popa
ret
imul
fwait
lock
and
pop
xchg
and
nop
fldcw
fcoml
ss
int
cmpb
ljmp
mov
jge
dec
test
jno
negl
pop
out
add
stos
mov
mov
pop
outsb
dec
or
test
jecxz
jae
sbb
fnstenv
imul
jo
cwtd
out
call
adc
andb
xchg
push
xchg
push
add
cmp
mov
or
mov
lret
lods
stos
xor
dec
xchg
cli
je
shl
rorb
roll
jge
mov
or
pop
sub
jge
out
adc
dec
fcomps
sub
pop
das
popf
shl
or
inc
inc
sti
mov
ljmp
in
xchg
dec
out
sub
sbb
mov
fwait
adc
xlat
bnd
push
or
push
mov
push
xchg
xorl
int3
jbe
and
out
into
lock
aaa
push
lods
mov
jo
pop
dec
call
ret
scas
daa
dec
jb
mov
imul
cmp
mov
sbb
test
push
xchg
and
mov
int3
push
sub
sub
sub
rorl
and
loopne
addr16
test
dec
cmpsl
ret
lahf
cli
shl
adc
sahf
push
lods
in
ljmp
fildl
lock
add
mov
addr16
cmp
mov
sbb
test
cmp
jecxz
adc
pusha
or
mov
push
cltd
shlb
push
xchg
mov
cmp
adcb
cmp
cmp
push
cld
adc
decb
repnz
movsl
mov
xchg
mov
movl
iret
mov
insl
push
je
sahf
or
jb
das
mov
lock
out
mov
jp
pop
xchg
add
test
jnp
add
pop
nop
lret
cmp
sbb
sub
aad
loopne
out
adc
dec
incl
dec
fnstcw
test
out
vpmullw
sti
or
ss
mov
and
mov
jno
and
jno
add
adc
lret
imul
mov
out
lea
ljmp
shll
xor
inc
rorb
rolb
ds
cmpsl
ss
divb
loop
mov
mov
xchg
adc
fcmovu
mov
lds
iret
shrl
cmp
xchg
insb
pop
int3
rcll
jbe
sar
push
xchg
imul
jg
inc
cltd
mov
dec
sbbb
or
in
mov
inc
and
adc
mov
iret
cltd
test
mov
cmpsb
mov
pop
mov
xchg
inc
shrl
fistps
mov
mov
pop
ret
lock
mov
or
cmp
mov
data16
push
movsl
mov
xchg
pop
dec
inc
fstpl
into
add
cwtl
add
push
lahf
dec
mov
sub
stc
mov
or
sarb
std
sbb
das
pop
xor
pop
pop
xlat
stos
pop
sbb
enter
xor
outsb
inc
jo
push
stc
pop
jge
mov
pop
xlat
cltd
mov
imul
cld
sub
jo
dec
jg
and
sbb
rorl
dec
mov
aam
pop
jmp
pop
fs
shl
lods
aas
jecxz
outsb
pop
cld
test
and
lock
add
push
mov
adc
cmp
sub
push
pop
and
iret
cwtl
shlb
aaa
aas
pop
out
ljmp
sbb
fidivrl
mov
or
inc
push
imul
mov
pop
loopne
stc
push
cs
xchg
cmpsl
pop
xchg
rcrl
fs
lods
call
push
popf
les
jo
inc
mov
mov
mul
pop
fmull
and
outsb
outsl
loop
cmpsl
in
sub
cwtl
and
imul
jnp
or
mov
idivl
xor
aas
mov
cmp
call
xchg
mov
ror
push
daa
and
cltd
and
test
mov
jle
gs
lods
jne
mov
mov
xor
adc
hlt
and
pop
lds
sub
jecxz
mov
sti
mov
arpl
sbb
add
test
pop
xor
inc
icebp
adc
dec
scas
aas
adc
dec
cmp
dec
cmp
mov
push
hlt
sbb
sti
adc
fnstenv
mov
add
out
pop
fnstenv
cli
cmp
mov
int3
inc
mov
jl
outsl
testl
add
lods
mov
repnz
inc
mov
mov
xchg
and
push
push
pop
lcall
cltd
mov
ljmp
sub
dec
add
pushf
pop
pop
cs
outsl
cmp
insl
fs
cltd
lods
testl
in
pop
roll
jbe
mov
fnsave
imull
mov
enter
insb
cmp
jl
xor
jp
and
mov
std
mov
shr
inc
test
out
nopl
mov
lea
movsb
pop
ljmp
adc
andb
out
inc
cmp
outsl
sub
push
push
push
or
ret
mov
popf
and
gs
fisubrl
in
jecxz
in
inc
push
repnz
das
pop
mov
or
or
add
pusha
push
mov
xchg
mov
jmp
or
push
sub
hlt
push
push
mov
add
sub
in
test
dec
sti
add
mov
and
xorb
in
adc
jnp
test
dec
xor
mov
mov
rorb
daa
btr
push
pop
xor
mov
or
mov
pop
pusha
lods
xor
xor
pop
push
lret
ret
pushf
push
movsb
daa
cs
mov
cli
inc
cwtl
inc
cld
lock
cld
test
enter
mov
mov
imull
jl
pop
xchg
test
inc
cli
mov
test
cmc
out
mov
adc
out
inc
addr16
in
xchg
imul
sub
mov
jle
popa
xorb
add
icebp
arpl
mov
jp
jmp
out
xchg
mov
popf
aas
or
int
mov
cmp
or
mov
nop
xor
iret
sub
add
mov
repnz
lret
push
insb
mov
and
enter
les
adc
mov
nop
inc
push
push
ja
fldt
lods
sub
xor
movsb
inc
aas
inc
fmull
pop
into
jo
mov
ret
inc
mov
out
jg
dec
adc
mov
or
cwtl
push
std
ror
test
pop
pop
push
icebp
jp
test
adc
lods
fsubr
fdivr
clc
shl
jmp
xchg
push
mov
dec
cmp
xchg
fmull
test
pop
shlb
fdivr
cmpsl
stos
mov
lds
aad
and
fwait
pop
cld
out
dec
jb
sbb
int3
cmp
xor
push
xchg
add
add
mov
mov
xchg
adc
pop
dec
jmp
xor
dec
add
popa
out
out
cmp
sti
jecxz
push
stos
mov
cmp
cld
cwtl
repz
ljmp
mov
and
hlt
add
outsb
xor
outsb
mov
push
dec
mov
pop
xchg
adc
jb
dec
test
cmp
divb
pushf
mov
push
push
and
mov
sub
pop
and
mov
lret
jp
xchg
sti
push
adc
sbb
mov
idivb
ffree
mov
cs
icebp
ficompl
sti
fwait
push
add
pop
adc
in
or
fwait
xchg
dec
sbb
mov
iret
imul
sti
test
mov
sahf
shll
cwtl
cld
sti
std
mov
sbb
mov
sub
mov
push
lds
mov
lods
out
mov
jae
xchg
adc
push
push
fmull
mov
mov
mov
mov
fidivl
mov
test
jp
xchg
push
inc
fdivrl
shrl
jns
rcrb
mov
out
sbb
movsb
xchg
jecxz
sbb
xchg
cmc
pop
data16
mov
cmp
movsl
jns
rcrb
inc
rcl
or
inc
mov
aas
lea
mov
out
push
jae
push
lods
rcl
fsubrs
pop
sub
inc
jns
mov
or
ret
sbb
or
addr16
stc
mov
les
les
and
jae
or
sbb
ss
adc
shlb
mov
jb
mov
ja
mov
lret
mov
sub
call
sbb
stos
pop
sbb
add
add
dec
push
into
shrb
inc
push
mov
jae
in
dec
jns
cmp
lret
xchg
sbb
mov
or
dec
stc
lods
es
cltd
pop
loope
outsb
repnz
jns
mov
jnp
sub
push
sub
and
aad
shll
jge
mov
mov
ficoml
cmp
ret
cmp
sti
push
add
sarb
pop
pushf
int
stos
sub
or
xlat
dec
cmpsb
and
subb
xchg
sub
lcall
inc
aad
mov
mov
arpl
movsb
inc
mov
dec
dec
cmc
sub
popa
mov
xchg
stc
xchg
insb
sbb
std
pop
into
mov
xor
mov
iret
adc
ret
mov
add
jg
stc
mov
jcxz
or
pop
lock
fsts
jmp
mov
sbb
movsl
push
push
mov
mov
adc
int3
adc
push
outsb
aad
mov
or
xor
movsl
insl
dec
dec
sti
loop
movsl
fwait
in
sahf
push
and
jg
int3
pop
push
mov
and
movsb
pop
sub
pop
dec
push
push
mov
cltd
xchg
pop
and
mov
call
mov
sub
pusha
xor
pop
or
xchg
cmp
lea
pop
shrb
stc
mov
insl
inc
scas
rorb
jge
mov
pushf
jecxz
jge
shlb
cmp
ljmp
icebp
or
int3
adc
lds
arpl
lcall
ret
scas
fistpll
sub
inc
data16
sbb
pushf
jo
repnz
inc
mov
test
dec
les
arpl
sub
stos
push
mov
inc
push
cmp
dec
sahf
push
inc
test
int
add
aam
mov
in
popf
shll
data16
sub
push
and
stc
add
lret
and
das
mov
jne
cmp
out
imul
mov
jne
xlat
in
push
fmuls
mov
mov
bnd
lcall
or
es
add
or
sub
pop
lds
aaa
sub
pop
test
pushf
xadd
jle
mov
pop
pop
cmpsb
xchg
in
test
rclb
or
or
cs
lea
ljmp
scas
leave
call
xchg
leave
jb
adcb
mov
jae
daa
clc
cmp
xchg
clc
xchg
push
inc
inc
aad
xchg
cmp
shlb
and
or
sub
insb
das
jle
sub
dec
push
fwait
int
inc
int
insl
nop
aas
push
add
inc
cmp
add
cli
mov
mov
in
push
pusha
call
sbbb
inc
loop
xor
pop
cmp
cld
shrb
fdivr
push
inc
fisttpl
mov
ljmp
push
xor
cld
xchg
and
je
aad
cld
in
fisubrs
adc
jnp
or
arpl
or
imul
ljmp
les
js
std
sub
sbb
insl
shlb
call
sub
xchg
ret
and
ds
stc
cmp
dec
sti
sub
cld
xor
sti
call
jmp
xor
jg
ret
mov
in
jb
loope
mov
bound
and
loopne
push
adc
sbb
pop
pusha
cld
test
aaa
imul
in
into
hlt
rclb
lret
call
mov
mov
push
pop
xor
inc
dec
mov
dec
loopne
sub
xor
lock
out
out
cmp
sbbb
popf
cltd
cmp
push
dec
mov
cli
les
out
arpl
mov
mov
je
jns
rclb
dec
jge
xor
inc
mov
sub
addr16
push
lods
cli
data16
jbe
xchg
insl
lods
cmp
push
xor
cmp
add
stos
into
mov
mov
mov
xchg
cmp
xchg
imul
inc
mov
outsl
loop
sub
fidivs
xchg
arpl
jbe
or
aad
inc
mov
sbb
inc
or
xchg
push
and
lock
cmp
dec
mov
mov
sub
or
mov
push
sahf
and
sar
shlb
push
dec
mov
dec
in
cmc
imul
jne
xor
dec
dec
out
mov
mov
daa
popl
and
sbb
ljmp
mov
pop
jae
mov
cs
ficompl
lock
add
xchg
incb
push
leave
arpl
jg
push
mov
in
lods
adc
inc
push
cmp
push
jecxz
push
fldenv
sbb
mov
xchg
clc
movsb
cmp
sbb
movsl
or
mov
dec
daa
call
idivl
push
lret
jge
leave
sahf
fs
push
dec
lcall
xchg
ja
fcmovne
or
in
mov
repnz
xor
fwait
wrmsr
rcrl
out
dec
and
xor
xchg
xor
jmp
add
dec
xchg
jbe
and
and
es
mov
popf
ja
rorb
xor
adc
jl
test
fstpl
adc
and
cmp
rcrl
jl
out
xor
not
or
repz
xlat
jno
inc
xchg
in
test
sbb
cmp
dec
daa
cmc
das
and
adc
rcrl
mov
xor
aam
xchg
xor
aas
loop
out
iret
xor
dec
adc
jae
adc
rol
and
es
cmp
mov
push
in
jecxz
and
inc
lcall
lcall
imul
pop
pop
test
or
jmp
xor
dec
js
gs
and
inc
test
xchg
fstps
popf
add
cmp
cmp
sbb
addr16
in
push
cmp
mov
add
les
ret
adc
pusha
inc
subb
mov
adc
cmp
adc
jnp
mov
lret
sub
dec
mov
mov
pop
jmp
jp
pusha
adc
mov
iret
and
sbb
cmp
daa
mov
cmp
xchg
daa
loopne
mov
xchg
lret
inc
rclb
push
not
jl
cvttps2pi
and
ss
fs
cmp
xor
jbe
imul
aam
call
ffreep
int3
int3
add
leave
shll
cmp
push
dec
xor
icebp
inc
sub
sahf
cmp
out
inc
xchg
pop
mov
cmp
dec
pop
push
popa
mov
cmc
mov
xor
sbb
repnz
sub
mov
add
and
stos
or
adc
adc
ja
adc
jg
sbb
rorb
out
js
ljmp
sbb
ret
xchg
and
das
sar
pop
ja
xchg
insb
add
jns
fucomip
outsl
jl
gs
mov
ljmp
xchg
pop
ja
mov
mov
sub
jg
pop
pop
lea
mov
inc
jg
es
add
scas
sbbl
push
loope
add
das
jecxz
xchg
ljmp
xor
ds
and
jmp
adc
and
lret
movsl
fisubrs
lds
inc
inc
cld
enter
pop
pop
imul
mov
rcrl
cmpsb
add
das
mov
shlb
popa
ret
sub
loope
hlt
sub
xor
and
inc
mov
lds
ret
inc
loop
cli
test
cmpb
dec
sti
insb
and
and
fcompl
or
ljmp
les
and
loop
popf
jl
insb
mov
adc
or
popf
movb
and
add
lret
mov
cwtl
inc
aad
inc
enter
push
pop
cld
iret
add
arpl
insb
xor
fwait
loop
jb
bound
mov
or
ficoms
pop
pop
and
mov
out
nop
dec
hlt
rep
sbb
xor
mull
addr16
mov
mov
sub
mov
imul
daa
imul
ja
das
popa
inc
inc
scas
adc
inc
pop
iret
rorb
aam
xchg
pop
mov
ja
xor
and
pusha
cmp
shll
push
scas
loope
xorps
outsl
movsl
add
scas
dec
movsb
inc
dec
aas
nop
inc
cmpsb
pop
or
or
jno
scas
dec
or
cmp
aam
pop
xchg
pop
sub
lods
mov
cmp
dec
cmp
adc
insl
stc
sub
dec
out
push
sbb
cmc
dec
mov
xor
lcall
sbb
in
xor
sahf
push
mov
sbb
mov
and
cmc
sub
gs
aaa
daa
lea
xor
or
test
lds
ja
xchg
jne
pop
pop
mov
aad
fwait
or
jb
ffree
aas
popa
dec
xchg
clc
sub
int
mov
lret
jmp
mov
add
fwait
shl
push
movsb
jnp
lds
and
inc
add
jbe
notb
mov
int3
imul
call
gs
mov
sbb
adc
in
pop
out
cmp
movb
xchg
int
ret
in
imul
push
ret
mov
dec
jle
enter
xchg
insl
jo
jge
cmp
mov
mov
pop
lock
aam
arpl
add
imul
sub
jl
pop
inc
or
mov
into
cmp
dec
daa
lret
arpl
ja
das
stc
jns
test
mov
xchg
popa
iret
mov
out
es
xor
mov
call
aam
dec
or
dec
mov
int3
push
sub
shrl
int3
push
jg
adc
popf
stos
jnp
shr
ja
aad
add
add
outsb
shrb
js
add
sbb
ss
pop
enter
pop
nop
jb
push
sbb
enter
jmp
sbb
push
ss
imul
xlat
loop
jecxz
imul
xchg
dec
jbe
and
mov
add
aad
fdivp
insl
outsb
jae
add
jnp
sbb
push
ds
inc
iret
sub
shrb
nop
inc
mov
push
mov
and
mov
dec
cmp
ret
imull
push
fldcw
cmc
mov
jp
arpl
daa
xor
push
stos
inc
test
or
sub
push
and
out
sbb
insl
jg
outsb
cwtl
mov
lret
pop
adcl
push
dec
rclb
pop
test
jecxz
sbb
add
and
mov
dec
fisttps
std
xchg
popa
rcrl
nop
cmpsb
andl
sar
add
out
repnz
add
sub
mov
stc
xchg
aas
pop
or
xor
sahf
xor
icebp
in
or
push
jecxz
mov
es
mov
xlat
in
mov
addb
mov
ljmp
ss
fcomps
cmp
push
fbld
imul
cmp
fsub
pop
pop
push
push
dec
xchg
pop
xchg
mov
lea
gs
movsl
aas
and
mov
xor
push
in
xlat
loope
dec
or
sub
inc
xchg
add
loopne
mov
mov
cmp
mov
or
cmp
out
je
rcrl
iret
mulb
fdivs
inc
push
jge
or
in
jnp
fcmovnbe
or
hlt
cwtl
je
mov
int3
aad
dec
out
xor
fidivrs
xchg
sbb
imul
sar
or
jg
cmc
lea
push
out
ret
cld
jne
cmp
add
dec
fwait
push
addr16
jae
or
arpl
les
cld
sbb
xchg
data16
mov
push
xchg
bound
adc
mov
je
mov
jg
test
push
lock
push
daa
mov
pop
inc
mov
fistpl
xchg
sbb
xor
ret
imul
pop
and
mov
mov
cmpsb
insl
jecxz
ds
jg
sub
addr16
fiadds
in
cltd
sub
dec
push
mov
pop
fnstsw
or
test
lock
adc
out
mov
dec
fildll
jmp
lock
mov
enter
orb
fsubl
bound
in
dec
repz
mov
iret
sbb
sahf
push
out
test
xor
sub
adc
pop
popa
daa
popa
popf
pop
add
nop
cs
mov
in
xor
in
push
orb
sub
xchg
movsl
push
data16
lea
sbb
shll
add
pop
xor
cli
jae
jns
out
imul
cmp
std
adc
ret
aaa
xor
jge
rcll
ret
sbb
int
mov
or
lea
ficompl
mov
jl
jmp
int3
mov
popf
call
inc
sub
push
cld
notl
jp
sub
outsb
push
inc
das
inc
insb
sub
pop
inc
fsts
sti
cmp
pop
mov
xor
pop
push
and
and
sub
mov
jb
in
push
lret
jmp
movsl
rcr
js
test
rolb
mov
cmp
jno
xchg
mov
fisubrs
pop
bound
pushf
fwait
cmc
movsl
adc
mov
int
sub
cmp
int3
loope
js
stos
mov
sbb
adc
aad
push
push
data16
test
mov
dec
pop
jno
push
add
fwait
dec
inc
sub
push
and
aad
xchg
dec
cmp
mov
jne
lds
out
data16
insb
xchg
push
push
inc
adcl
movsl
jno
push
jo
aad
mov
sub
shll
test
jecxz
imull
mov
adc
in
sbb
push
loopne
popf
sbb
xchg
cltd
ds
adc
mov
jbe
xchg
add
inc
jno
movsb
stc
das
xor
lods
cs
jmp
xor
push
rolb
cld
jne
cmp
cmp
and
lds
adc
sbb
cmp
out
aaa
shlb
js
pop
fwait
clc
arpl
jno
aam
xchg
mov
imul
inc
xlat
push
rcrb
das
inc
cs
pop
or
add
sahf
mov
gs
mov
js
js
mov
roll
mov
sub
in
rep
inc
dec
int3
je
jmp
pop
and
push
int3
lea
std
sti
bound
dec
cmp
test
jmp
xorl
mov
pop
or
ret
cmpsb
scas
push
dec
adc
adc
dec
pop
sub
daa
popa
push
dec
mov
adc
sti
enter
sahf
lea
loopne
xchg
sub
inc
sub
aas
mov
sub
jbe
mov
aam
jb
jl
addr16
rcl
dec
cld
add
clc
push
test
hlt
es
les
mov
sbb
faddl
sub
cmpsl
and
mov
in
jb
sbb
fs
je
pop
mov
lods
pusha
out
loop
cwtl
adc
pop
pop
xor
loopw
pop
imulb
xchg
jbe
or
rcrb
andl
sbb
arpl
sarl
jo
push
lea
inc
xchg
lahf
push
sbb
xlat
and
and
out
daa
pop
fwait
push
adc
in
fistps
mov
stos
pushf
cwtl
outsl
leave
js
outsl
test
aad
shrl
or
stos
hlt
and
sbb
ja
mov
and
mov
mov
fidivrl
jmp
scas
lcall
out
repnz
loope
add
pusha
gs
and
loopne
or
push
cmovae
aaa
je
ds
das
mov
mov
push
push
cmp
sub
ret
movsb
rolb
lods
clc
adc
loopne
js
jl
pop
jno
movsl
inc
jns
fcmovne
add
xor
sahf
outsb
call
xchg
cmpsl
out
xor
sbb
in
push
mov
pusha
les
dec
addb
jnp
loope
add
test
test
mov
xchg
into
es
push
and
ja
sbb
mov
inc
int
sbb
insl
sarl
aam
jo
ret
call
inc
mov
sbb
testb
mov
je
or
mov
inc
mov
ljmp
repz
ljmp
sub
mov
or
push
dec
lods
sahf
outsb
pop
lock
xchg
dec
sbb
outsl
and
dec
cmp
test
xchg
aad
sbb
lcall
mov
cld
aaa
outsb
in
mov
xor
sahf
mov
xor
jle
push
cmp
mov
dec
or
and
pop
dec
je
xchg
orb
je
mov
push
pop
inc
ss
sub
clc
je
lea
addr16
clc
movsb
cmc
mov
clc
mov
push
popa
add
mov
pop
inc
sub
stos
push
je
mov
sbb
pop
fimuls
jb
mov
inc
push
das
pop
pushf
fisubs
mov
dec
sbb
pop
popa
cli
mov
cmp
jns
imul
daa
and
push
push
xor
mov
xor
sbb
or
dec
enter
out
dec
fyl2xp1
adcb
cmp
js
push
mov
jo
jmp
adc
mov
pop
adc
ret
and
stc
lret
xchg
stc
mov
xor
mov
pop
pop
test
mov
mov
repz
mov
shrl
dec
dec
inc
mov
cmpw
pop
sbb
fsubl
rcll
inc
fcompl
ss
ja
popf
pop
sub
rcl
repnz
lock
xchg
fiaddl
enter
jmp
arpl
sbbb
cs
pop
data16
pop
adc
inc
mov
jp
cld
mov
das
pop
fs
imul
fimuls
jno
aaa
das
add
stos
mov
cmpsb
ud1
daa
mov
cmp
movsl
mov
inc
cli
inc
popa
inc
arpl
orb
repnz
jge
rol
int
cmp
ficoml
adc
push
fidivl
es
push
or
out
push
mov
test
push
and
mov
fisubs
mov
jns
jns
cltd
jmp
enter
enter
lock
dec
pop
icebp
sbb
fdivs
insl
idivl
jg
repz
gs
mov
ss
sub
lahf
loop
or
mov
mov
cmp
scas
lods
inc
popf
jb
adc
cmp
or
jp
jmp
mov
sub
cmp
mov
and
data16
stos
leave
cmp
fbld
mov
pop
adc
repz
lret
stos
xchg
test
jp
in
or
xchg
test
test
imul
rclb
cs
or
es
jle
adc
stc
and
or
sbb
rcr
mov
jecxz
lock
cli
mov
ds
jbe
leave
inc
out
dec
movsb
xchg
cltd
bound
das
insl
les
pusha
shll
push
mov
dec
or
cli
sbb
xchg
fadd
pop
or
xor
aam
imul
sub
push
pop
aas
scas
mov
bound
sub
push
mov
cwtl
icebp
mov
rolb
dec
xchg
nop
hlt
add
and
out
sahf
sahf
outsb
sbb
ljmp
sub
add
jg
std
sbb
and
mov
imulb
cwtl
or
lock
adc
sbb
pop
push
push
jle
inc
int
out
lods
lods
jge
push
sbb
xchg
leave
int
mov
jnp
push
adc
shlb
movsl
pushf
jle
sbb
lds
test
push
fwait
pop
mov
icebp
test
and
mov
dec
shlb
cmc
mov
in
adc
dec
cmp
adc
pusha
ds
cmp
mov
and
loop
mov
mov
jp
xor
mov
iret
scas
inc
push
and
sub
sbb
divb
sahf
xchg
stc
test
imulb
jb
scas
movsb
dec
mov
stos
or
mov
mov
jl
sbb
andl
pop
jno
shrl
mov
jl
mov
jle
add
ja
pop
jae
add
mov
fucomip
movsl
repz
je
jb
push
mov
push
jle
sbb
cmpsl
aam
aad
push
cmpsb
sbb
mov
sbb
sbb
adc
pop
push
and
icebp
loope
mov
int3
jae
cmp
inc
out
sbb
jp
ja
mov
mov
add
mov
mov
pop
call
pop
wrmsr
xor
aas
lods
andb
mov
sub
xchg
lret
push
inc
fwait
iret
mov
xchg
dec
ficoms
packsswb
test
pop
or
dec
jp
pop
sbb
repz
xor
push
or
cli
xor
sub
dec
and
imull
enter
inc
and
cmp
loopne
mov
imul
mov
lock
dec
daa
jmp
aaa
adc
adc
in
lods
inc
dec
cmpsl
sbb
adc
in
je
pop
rol
mov
jmp
jb
cmp
sti
inc
and
mov
int3
lds
jge
inc
sbb
fidivs
lret
test
scas
rolb
lods
and
movsb
ja
push
insl
cmc
std
pop
push
cmp
call
dec
aas
dec
inc
cs
dec
in
or
xchg
add
xchg
daa
adc
jae
and
insw
or
or
or
pop
xorl
shrl
stc
hlt
sahf
sub
andl
push
cmp
cmp
stos
cmp
add
and
stc
rcrl
out
or
pop
aad
movsl
mov
ljmp
push
fiaddl
push
outsb
int
lea
pop
dec
sbb
adc
nop
daa
testb
cmp
add
ja
scas
inc
dec
and
stc
fucomp
aas
xor
mov
mov
outsb
lcall
fdivrl
jae
es
cmp
fwait
sbb
sbb
mov
xorb
adc
or
cli
ljmp
cwtl
addr16
push
add
loopne
fwait
iret
sahf
or
or
pushf
pop
pop
sti
stos
enter
mov
cmp
shll
adc
lret
pop
daa
jl
mov
repz
jb
push
out
imul
xchg
push
cmp
repnz
icebp
inc
mov
outsl
xchg
jbe
sbb
lret
and
rcl
mov
idivb
mov
jno
fcoms
adc
rol
cmc
dec
test
cmc
mov
rcrl
dec
lahf
jle
and
cltd
fistpll
jo
adc
not
movsb
push
sub
stos
pop
push
insl
jle
and
pop
mov
xor
sub
xor
xor
jp
xchg
pop
sub
cmp
mov
rcrl
test
ds
mov
and
pusha
add
lods
decb
xchg
jg
test
or
test
bound
push
adc
inc
push
stc
push
fwait
cmp
or
unpckhps
pop
xchg
jae
mov
push
inc
push
mov
in
push
rorl
sbbl
sub
and
cs
push
mov
pop
pop
lods
cmpl
hlt
mov
lods
jle
pop
cmp
sub
sub
mov
xchg
std
addr16
mov
aad
inc
shll
adc
jp
mov
roll
and
and
cmc
imul
add
repnz
es
repnz
outsb
outsb
inc
pop
sti
rcrl
ret
sahf
or
pop
xchg
aam
xor
fbld
or
fwait
pop
mov
loopne
xchg
ror
mov
xor
aaa
add
push
xorl
jp
add
cmp
mov
dec
stos
sbb
xchg
inc
call
es
rcll
push
or
ret
cld
mov
sbb
in
inc
or
dec
adc
jmp
inc
je
dec
lahf
push
mov
sbb
pop
cld
in
lahf
dec
xchg
adc
lea
mov
mov
push
mov
and
out
repz
hlt
out
and
sbb
insl
cmp
shr
mov
dec
das
xchg
sub
cmp
add
xlat
jae
int3
leave
shl
movsb
cmp
cltd
out
jge
push
xor
scas
pop
aam
push
ds
pusha
cmp
mov
lods
icebp
pop
out
sbb
jno
xor
cmp
pusha
mov
outsl
sub
sub
and
jmp
jmp
xor
push
int
pop
sub
rorl
pop
loopne
out
inc
into
data16
dec
ljmp
out
xor
sbb
adc
aaa
sub
or
fcmovu
add
add
loope
shrl
jb
mov
mov
shrl
insl
cwtl
ret
and
fiaddl
jnp
inc
or
mov
dec
push
push
inc
ret
outsb
fs
sub
dec
incb
xchg
inc
jge
dec
mov
fimull
sub
xchg
adc
jae
dec
sub
adc
pop
jp
pop
das
adc
cmp
lock
stc
lods
dec
mov
loope
fs
sarl
inc
les
inc
jl
jbe
sub
push
arpl
imul
jns
repz
dec
pop
xor
dec
lock
jne
fldenv
adc
adc
or
das
adc
push
mov
inc
fistpl
xor
es
pop
mov
inc
or
rcrb
push
rcll
jg
and
sbb
adc
stos
mov
fdiv
push
adc
jle
sbb
add
push
stos
mov
decb
and
repnz
mov
test
cmpsl
pop
inc
rorl
or
cmp
sub
mov
leave
push
int
jbe
icebp
mov
dec
pushf
xchg
mov
pop
pop
loopne
pop
xchg
in
adc
and
inc
ds
std
jmp
sub
inc
loop
cmp
push
push
sub
nop
xor
ss
xor
mov
xor
adc
jle
es
cmc
ffree
cwtl
adc
rclb
jo
jp
add
rolb
js
cwtl
aam
cmp
sbb
int3
jbe
cs
inc
rorb
test
lret
mov
mov
mov
int
dec
bnd
jbe
pop
and
aad
das
lret
pop
out
cmpsl
push
xor
aaa
sub
mov
out
dec
and
and
into
pop
dec
mov
sub
mov
shlb
mov
testl
lahf
loopne
mov
xchg
scas
pushl
or
cmp
outsl
jmp
addb
divb
imul
fwait
push
mov
out
or
push
js
cmpsb
in
leave
fucomp
das
xor
sbb
fmull
and
sub
and
add
cwtl
pop
pop
scas
mov
loop
push
push
in
clc
mov
and
mulb
subb
jno
sbb
pusha
enter
iret
lds
lret
cmp
imull
adcb
add
and
shlb
mov
jo
inc
imul
pop
ljmp
out
cmc
fwait
shl
shlb
sub
scas
movsb
mov
mov
gs
push
adc
out
push
sahf
inc
ljmp
pop
insl
out
jb
sbb
xchg
imul
mov
pop
negl
popf
iret
ret
mov
lods
rcl
int
dec
pop
into
hlt
ret
clc
pop
cmp
dec
dec
jp
xchg
and
dec
or
sbb
adc
pop
mov
rorb
sbb
inc
mov
jle
mov
std
shrl
les
push
sub
mov
movsl
and
jmp
sub
mov
ja
jno
stos
out
mov
into
rol
ss
xchg
add
xchg
cld
jno
dec
iret
in
push
ljmp
loopne
popf
pop
dec
mov
pop
mov
shlb
jp
fs
adc
icebp
mov
mov
jl
lcall
sbb
jae
pop
inc
mov
xchg
rcrb
xchg
hlt
cltd
incb
push
pop
lods
loopne
mov
adc
push
dec
cmp
test
pop
movsb
pushf
cwtl
xchg
das
inc
sbb
into
mov
stos
insb
outsb
mov
mov
imul
mov
xor
inc
fs
sahf
inc
cmpb
xchg
sub
js
cwtl
negl
or
cmp
pop
loope
or
pop
stos
lahf
xchg
cltd
movsb
mov
xchg
xchg
cwtl
insl
pusha
leave
cld
push
push
loope
push
in
lds
and
mov
lock
jne
inc
push
mov
aaa
in
push
pop
jae
jb
or
dec
pop
lea
mov
jae
fcompl
xchg
in
lds
push
add
aam
sbb
rclb
iret
dec
out
std
clc
rolb
ret
inc
popf
pop
clc
ret
jno
mov
xor
mov
pop
mov
mov
adc
pop
xor
je
loopne
fisttpl
jg
cmpsl
xor
fs
decb
fwait
enter
stc
shll
sub
outsl
mov
lret
pop
push
mov
hlt
loopne
test
or
cmc
xchg
dec
pop
ss
cld
sub
mov
mov
dec
pop
lods
jle
xchg
hlt
adc
in
jle
add
mov
vpsrlw
iret
outsl
cmp
out
bound
mov
and
pop
std
iret
xor
mov
out
pop
call
cld
cmpsb
mov
mov
mov
sub
fisttpl
lods
popf
sbbl
scas
push
jnp
shrb
cmc
pop
rol
mov
popf
push
lock
and
out
stos
or
in
movsl
add
movsl
push
cmp
mov
fsubr
sbb
outsl
jne
mov
mov
adc
mov
jne
fcomps
fcompl
mov
and
leave
sti
ja
adc
sbb
mov
in
inc
lea
adc
lret
sbb
das
ljmp
cmp
xor
pop
cmp
stos
xchg
jns
cmpsb
mov
push
imul
mov
push
and
roll
fwait
sub
adc
push
inc
dec
mov
dec
jno
push
and
and
jne
movsb
add
imul
setp
imul
insb
push
adc
ds
idivl
dec
inc
std
hlt
test
imul
repz
fistpll
outsb
dec
jb
cmp
jg
jmp
pushf
cmp
sbb
mov
mov
cld
jo
test
or
and
dec
mov
xlat
and
cmpsl
cmpsl
inc
cmp
jmp
iret
dec
in
xorb
jg
jg
push
xor
or
or
mov
das
in
xor
inc
ds
stos
cs
xchg
pushl
fcmovbe
sub
xchg
pop
xlat
pop
jg
popf
cmpsl
cmp
jb
movsl
xchg
mov
in
in
push
les
inc
mov
test
pop
dec
shlb
outsl
mov
sarl
cmp
inc
dec
sbb
or
cmp
leave
aam
pusha
xchg
dec
in
xchg
ret
add
xor
movsl
mov
add
jmp
rep
mov
adc
pop
rcrb
std
xchg
scas
aaa
mov
adc
test
or
and
mov
out
sbb
xchg
in
and
pop
es
fisttpll
lods
es
out
fldcw
cmp
jbe
shrb
sahf
loopne
push
xor
mov
aas
and
call
pop
mov
inc
rcll
cs
xor
jge
imul
push
jne
dec
jge
and
jae
push
pop
test
xor
sbb
add
jmp
xchg
xor
push
shll
clc
imul
mov
jmp
adc
cmp
shlb
push
jb
lods
insb
xchg
js
sub
pop
idivb
lods
call
js
add
outsl
sub
es
movsb
and
add
pop
sbb
daa
mov
cmp
test
test
fbstp
add
sahf
lret
out
adc
add
xchg
mov
arpl
stc
test
loopne
dec
ds
mov
sub
inc
call
fisubrl
xor
add
sub
ret
adc
sbb
call
fisubrs
sbb
iret
rol
es
scas
lret
mov
fs
add
sub
ffree
ds
inc
jno
pusha
insb
movsb
push
lret
mov
dec
clc
lcall
test
int3
pop
insb
xchg
fbld
cltd
and
push
xchg
rcrb
in
pop
cwtl
pop
ds
mov
and
xchg
sbb
push
dec
push
sub
aas
ljmp
mov
pop
gs
and
les
jnp
add
jnp
jp
imul
or
mov
dec
les
nop
shll
in
inc
push
add
outsb
cmp
pop
iret
add
or
sahf
cmp
cld
mov
ss
outsl
test
in
pop
movsb
and
dec
inc
push
iret
pop
push
pop
push
fldpi
imul
xlat
sub
cld
mov
jno
sbb
in
add
rcrl
aas
mov
xor
push
xchg
jecxz
repnz
sbb
pop
mov
ds
fimull
mov
and
mov
inc
mov
cmp
sub
adcl
fs
out
add
ror
sbb
mov
sub
sbb
or
and
mov
scas
pop
xchg
adc
push
xchg
out
adc
stos
push
aaa
fwait
pop
cmpsb
cld
or
data16
dec
inc
inc
repnz
stos
pop
mov
mov
xchg
jp
jmp
sahf
dec
ficomps
pop
mov
add
jg
loop
xor
shr
mov
mov
dec
clc
mov
repz
cmpsl
adc
adc
push
xchg
scas
dec
sbb
add
fwait
jnp
imul
mov
mov
add
push
cmp
pusha
xor
sti
dec
xor
arpl
jb
dec
rcll
and
cmp
and
mov
or
sub
and
cs
or
sub
aam
adcb
mov
popf
sub
nop
pop
jge
mov
insb
push
iret
mov
lods
dec
imul
mov
inc
pop
ret
jns
mov
jnp
mov
rsqrtps
add
rcll
pop
addr16
or
add
dec
push
push
xor
cmc
xor
flds
imul
lret
cmp
cs
inc
int
xorb
es
xor
add
nop
sub
sti
adc
stos
push
xchg
scas
rep
cmpsb
inc
fists
rcrl
ret
pop
subb
inc
stos
das
xchg
mov
lret
fwait
xchg
pop
fcmovb
jl
into
push
pushf
or
sub
jns
sbb
lods
push
push
shll
cmc
add
jge
cmp
add
inc
add
inc
lret
dec
xor
dec
enter
inc
add
push
cld
push
dec
or
je
cmp
test
repz
pushl
mov
rorl
mov
sbb
push
add
aam
lahf
xor
movl
outsb
inc
and
popa
lahf
dec
mov
adc
or
repz
fsubrl
mov
cs
pop
das
jecxz
inc
lret
outsb
add
mov
or
pop
push
testb
insb
mov
inc
in
dec
sarl
outsl
mov
and
jge
xchg
fs
jmp
xchg
push
or
mov
ss
sub
push
dec
cmp
jb
pop
push
mov
cmc
rcrb
jg
xchg
mov
cwtl
mov
and
in
lds
mov
mov
das
adcl
adc
test
cmp
jo
in
xlat
xchg
iret
aaa
inc
rorb
push
add
adc
xchg
pop
and
orl
jg
jmp
roll
inc
ljmp
ja
out
shll
pop
les
jle
add
inc
test
mov
cmc
mov
mov
mov
mov
testb
xchg
push
push
int3
adc
pop
inc
mov
sti
xlat
or
daa
rorl
xor
sar
lahf
dec
fs
icebp
sub
push
ret
pop
push
add
ja
sbb
xchg
pop
and
cltd
mov
into
xchg
idiv
in
imul
jae
push
mov
mov
icebp
cmc
jecxz
aaa
stos
adc
inc
push
repnz
ds
call
nop
cmp
jg
cmc
xchg
mov
bound
xchg
movl
or
sar
xor
or
pop
shlb
mov
stos
mov
pop
mov
cs
jl
lock
push
outsb
pop
gs
fldl
pop
push
or
loop
scas
pop
mov
arpl
adc
ret
mov
or
movsl
jo
mov
decb
int
daa
inc
imul
bound
add
dec
jb
ljmp
jne
cli
outsl
adc
pop
leave
sbb
inc
add
popf
fisubrs
mov
add
imul
cwtl
add
push
cmc
jno
testb
dec
mov
icebp
enter
pop
and
lahf
sahf
cmp
jns
dec
outsb
fldcw
mov
xor
jl
stc
cmp
das
adcl
leave
dec
xchg
loopne
and
jl
add
test
jne,pt
loop
fimuls
je
xor
lods
aam
testl
idivl
pop
loope
add
pop
lods
jnp
fimull
ret
stos
xor
or
xchg
jb
test
pop
popa
lods
not
cmp
inc
push
negl
jno
and
mov
loopne
mov
dec
mov
cmp
loope
xor
jmp
out
pop
sbb
testl
jnp
sub
les
in
add
cld
cmp
stc
call
imul
jbe
push
mov
je
xchg
adc
leave
cmp
pushf
addr16
xlat
out
jecxz
popf
stc
fidivrl
or
adc
inc
fldl
iret
mov
and
daa
sub
pop
mov
incb
inc
push
and
mov
data16
les
xchg
imul
xchg
cmp
adc
inc
cmp
jbe
mov
sbb
in
iret
jmp
into
in
mov
inc
enter
ja
cmp
cmp
add
add
shrl
push
ljmp
jge
test
fstl
xor
sub
mov
movsl
pop
mov
jo
pop
mov
xor
or
ss
test
sbb
mov
xchg
xchg
mov
cmpsb
outsb
xor
mov
ja
jg
sub
dec
cwtl
inc
cmp
pop
dec
push
mov
pop
fiaddl
inc
sub
repz
ds
dec
ss
jmp
pop
pop
ret
ret
add
jmp
scas
data16
bound
icebp
in
mov
inc
out
pop
fisttpl
in
iret
mov
sub
inc
iret
inc
inc
imul
clc
rol
shlb
insb
jecxz
pop
aam
dec
pop
cmp
inc
push
ret
out
clc
dec
mov
movsb
ljmp
jp
xor
mov
inc
push
cltd
fstpt
adc
mov
aas
aaa
sar
lret
fldz
jp
xchg
iret
hlt
add
sbb
sbb
push
addr16
in
cmc
scas
pop
mov
cltd
dec
out
jae
inc
jo
incl
rcrl
xchg
icebp
dec
stc
ljmp
push
ljmp
scas
push
cmpb
fildl
mov
sub
lods
add
mov
lods
scas
mov
xchg
or
enter
jge
outsb
hlt
dec
pop
aad
aad
into
sarb
insl
cmpsl
sar
or
dec
push
inc
pop
lcall
xchg
push
jge
ljmp
xor
repnz
jg
push
jl
add
in
xchg
mov
sbb
dec
mov
pusha
inc
sub
mov
dec
and
xchg
xchg
add
daa
adc
and
fistpl
stc
call
dec
dec
scas
adc
add
jbe
push
mov
nopl
lods
mov
loop
dec
push
bound
mov
mov
loopne
dec
sbb
sbb
fistpll
test
int
jmp
das
jae
lret
cmp
pop
cmpb
ja
das
mov
dec
dec
popa
pop
add
cmpsl
addr16
mov
test
push
icebp
mov
sahf
push
push
jns
cmp
clc
dec
andb
push
add
xchg
out
jnp
jbe
imul
mov
adcl
push
es
gs
out
in
mov
test
jno
imul
sbb
add
jne
ljmp
xchg
ljmp
dec
xor
jo
shrb
jno
add
rcll
adc
rorl
cmp
imul
dec
mov
push
aad
loopne
je
jno
mov
mov
mov
mov
pop
mov
cltd
lock
add
jl
ljmp
das
dec
xchg
push
nop
pop
test
cmp
fadds
loope
cmpb
and
imul
push
pop
dec
add
and
int
inc
sahf
ja
adc
add
outsb
xchg
push
mov
or
in
xchg
sub
lret
test
xor
lret
mov
inc
inc
cmp
jg
pop
push
cmpsl
cmp
lock
sbb
fwait
add
bnd
pop
push
sbb
add
scas
jno
fldt
pop
les
stos
dec
mov
mov
sbb
mov
lret
push
xor
inc
pushf
repz
mov
dec
repz
inc
jp
mov
dec
aas
sub
out
and
insl
aad
pop
xor
aad
sahf
pop
popf
in
call
cltd
ss
in
and
setle
inc
sub
pop
aaa
push
fistpll
push
divl
and
sub
dec
and
lock
repz
xchg
shll
mov
pop
xor
or
or
gs
push
pushf
ud2
divl
mov
push
fsubrs
or
sarb
xor
sbb
sbb
imul
pop
jae
out
pop
mov
cld
int
test
gs
mov
std
mov
icebp
mov
js
scas
imul
out
lcall
inc
dec
sub
mov
mov
pop
pop
adc
inc
mov
and
dec
inc
cmp
cmp
scas
rclb
movsl
shlb
orl
pop
imul
and
sub
xchg
arpl
xlat
lock
nop
xchg
mov
pop
insl
or
add
xchg
jecxz
mov
sbb
les
out
imul
repnz
xor
aad
jmp
shlb
pop
pop
xchg
pop
shr
insl
sub
sub
mov
mov
pop
xchg
jns
hlt
or
loope
xchg
push
cli
call
xchg
xor
xchg
cli
mov
adc
adc
test
inc
es
or
and
sbb
push
xchg
add
or
push
enter
movsb
pop
lods
mov
adc
xor
cltd
sub
insl
ss
cld
push
inc
test
cmp
cli
insb
popl
mov
add
inc
jp
insl
shlb
notl
jne
dec
enter
data16
movsb
pop
cltd
or
xorl
push
push
cmpsb
in
stc
jmp
leave
imul
mov
push
mov
jne
cmp
inc
rcr
xor
dec
xor
and
jnp
stos
pop
loope
mov
jae
cmp
fs
test
outsl
rorb
jno
clc
js
imul
push
pop
insl
mov
out
ret
or
loope
insl
sub
pop
pop
addr16
inc
jns
aaa
add
and
lahf
imul
nop
cmp
pop
push
xorl
cmp
sub
addr16
adc
and
ss
cltd
dec
ror
mov
push
ror
pop
jmp
push
insb
mov
adc
pop
cmp
adc
pop
mov
push
dec
jmp
mov
subb
ret
sbb
jmp
mov
mov
and
xor
push
lods
test
push
test
jg
popa
push
sbb
mov
pop
movsl
ljmp
sbb
pop
or
sub
addr16
xor
sbb
hlt
or
jns
daa
int
xchg
in
mov
bound
out
mov
or
insb
lea
mov
ljmp
add
cltd
mov
push
cmp
outsb
aaa
pop
pop
rolb
push
adc
enter
mov
jns
mov
xchg
std
out
mov
mov
cli
je
test
sarb
pusha
jg
xor
stc
arpl
adc
lock
pop
int
outsl
dec
mov
cli
test
ss
call
and
lock
mov
push
sub
xor
cmpsb
adc
jno
imulb
std
imul
sbb
repnz
jp
jb
repz
jg
sub
aaa
jns
insb
into
xor
pusha
push
cs
scas
adc
mov
jecxz
pop
fdivp
and
iret
cmp
pop
fs
sub
fbstp
pop
mov
fcoms
push
mov
test
lods
mov
mov
fnsetpm(287
in
push
out
ror
dec
adc
pop
or
sahf
sbb
jns
or
fdiv
setp
lahf
loop
sub
lahf
sahf
pushf
ret
jmp
adc
xchg
stc
push
push
xor
cmp
arpl
inc
arpl
adc
lock
jle
fxch
mov
and
mov
adc
fnsave
shrb
xchg
and
xchg
inc
into
xchg
adc
pop
and
into
inc
xor
mov
movsb
adc
xor
mov
pop
dec
cmp
dec
mov
nop
or
push
movsl
cmpsl
inc
push
push
rcl
mov
fildll
inc
cs
je
ret
and
sub
orb
out
mov
lods
js
into
dec
pop
adc
andb
xchg
lret
dec
imul
jmp
or
hlt
rcl
or
imul
mov
fiadds
imul
std
lods
mov
jnp
push
and
mov
sbb
push
sub
cmp
pop
push
jo
sar
pop
xchg
xor
sub
std
mov
test
jne
out
rcl
mov
fcoms
jle
dec
xchg
lcall
sbb
es
push
push
dec
or
sub
mov
jb
ljmp
rcr
xchg
adc
sub
xchg
dec
pop
lret
add
lret
or
mov
sbb
aas
xor
aas
jl
jl
adc
lcall
dec
mov
push
mov
cmp
mov
xor
popf
jp
xlat
mov
mov
outsb
inc
stc
pop
clc
jge
jne
lcall
loopne
dec
mov
imul
scas
jle
subl
dec
out
cmp
cmc
xchg
dec
cmp
or
push
jmp
sbb
mov
dec
push
je
mov
imul
push
negb
jge
mov
mov
js
cmp
lcall
jno
xchg
daa
jne
push
push
inc
mov
mov
push
jge
mov
call
inc
js
imull
jns
rcl
lods
dec
cmp
aam
adc
rorb
push
mov
je
icebp
sbb
and
loopne
cmc
aam
push
adc
adc
lcall
push
and
jne
inc
mov
xor
ljmp
pop
push
and
xchg
fisubl
sub
add
dec
sub
pop
int3
aad
lock
rcrl
mov
and
jbe
xor
mov
and
or
sbb
rolb
mov
dec
mov
mov
roll
jp
dec
sub
iret
mov
in
add
test
clc
divb
repz
mul
aas
ret
pop
out
mov
loopne
mov
dec
mov
cmp
mov
out
push
mov
mov
dec
inc
pusha
xchg
js
mov
arpl
dec
sbbl
push
jge
xchg
cmp
fdivl
sub
adc
mov
imul
jmp
bound
sub
mov
ret
shlb
jbe
push
incb
outsl
sub
jbe
repnz
iret
test
aas
out
shl
loopne
mulb
mov
inc
fbld
insl
add
or
mov
jne
mov
mov
pop
mov
xor
pop
lret
pop
add
bound
pop
inc
dec
xor
mov
mov
dec
push
shl
std
lock
dec
fidivrl
movsl
and
inc
dec
inc
out
icebp
in
insb
dec
pop
loop
xor
mov
sbb
outsb
add
xchg
sti
rolb
dec
or
mov
mov
mov
test
jnp
mov
ja
pop
nop
lret
out
rcl
test
mov
andb
mov
mov
das
push
xor
movsl
mov
pop
subb
xchg
call
ja
push
test
ret
sbb
jg
push
cli
test
mov
insb
sub
dec
dec
popa
out
cmp
pop
push
push
int3
jmp
lcall
xor
out
out
cmp
push
jp
lret
pusha
imul
push
shr
popa
pop
push
mov
jecxz
test
jmp
adc
mov
sbb
push
ljmp
es
insl
mov
scas
inc
popa
and
xor
andb
call
xchg
dec
popf
sahf
mov
js
xor
and
imul
pop
add
pop
dec
cli
push
push
pop
ret
call
sub
xchg
pop
insb
mov
mov
ja
jo
nop
push
inc
mov
repz
outsl
fiadds
dec
mov
out
loop
sbb
mov
dec
mov
popa
sub
sub
xchg
sub
mov
sbb
sub
xchg
ss
lret
movsl
test
pop
mov
and
sbb
repnz
repnz
ss
ja
sarl
faddl
pop
fs
push
mov
ds
pushf
or
ds
push
ret
nop
push
cmp
jge
dec
push
mov
jo
add
or
in
pushf
test
in
push
or
pusha
add
pop
xor
daa
enter
js
and
mov
rcrl
or
lea
or
pop
pop
xchg
mov
inc
or
popa
out
fdivrl
idivl
cmpb
in
jbe
mov
rorl
xor
or
push
cmp
stc
loopne
aam
pop
mov
in
or
out
sarb
and
sbb
sahf
add
mov
out
outsb
shll
inc
xchg
shrl
cld
xchg
inc
popa
push
xor
cmpsb
subb
push
cmp
sbb
shr
inc
mov
xchg
pmuludq
or
mov
shll
enter
pop
lret
mov
je
lcall
mov
pop
sbb
xor
push
sub
lret
fldcw
dec
jge
pop
cmp
or
mov
sub
dec
insl
jg
add
jge
jnp
pop
ljmp
adc
fmuls
div
aad
sbb
push
mov
push
pop
aaa
cmpsl
pop
xor
movl
xor
adc
xor
mov
jmp
add
xor
and
jge
sub
sarb
jne
gs
mov
pop
and
ds
in
les
pop
push
xchg
push
and
xor
or
sbb
or
xchg
and
push
mov
adc
inc
xchg
or
outsl
mov
mov
or
loopne
lret
gs
scas
les
outsb
cmp
stos
shll
pop
xchg
and
in
pop
jbe
cs
es
stos
mov
insl
popf
stos
push
and
cmp
popl
mov
pop
in
or
pop
mov
inc
sbbl
daa
pusha
add
mov
cltd
xlat
testl
dec
xchg
lock
push
neg
fimuls
popf
mov
clc
cmp
inc
and
enter
xor
sub
sub
das
sahf
movsl
and
sbb
pop
or
and
add
sar
and
pop
or
xorl
mov
push
xor
pop
scas
fadds
mov
inc
roll
push
add
sub
nop
dec
out
fld
xchg
out
incl
or
inc
je
push
arpl
icebp
pop
pushf
pop
mov
inc
xchg
mov
fiadds
cld
sbb
dec
cmp
dec
mov
jp
hlt
xchg
pop
cmpsl
lret
lods
clc
les
fwait
push
pop
push
xchg
sub
or
mov
push
cmpsl
jg
xor
and
or
xchg
mov
dec
fdivrs
cwtl
xor
inc
nop
inc
ja
sub
sub
lret
or
pop
mov
xor
lahf
mov
aas
ret
mov
pop
mov
fiadds
mov
push
push
push
sbb
sub
fstpl
adc
scas
je
in
repz
repnz
add
jae
add
xor
pushf
jns
hlt
fmuls
outsb
scas
sbb
nop
jns
pop
cmp
out
push
std
and
cmp
and
mov
sbb
loope
mov
xchg
inc
cmp
sub
mov
mov
mov
enter
jne
sub
imul
pop
test
stc
jp
push
mov
repz
pop
cmp
repnz
push
fisubs
sbb
dec
cmp
pop
mov
adc
adc
sahf
mov
inc
aam
fwait
and
call
insl
jmp
aad
data16
fnstsw
xchg
ja
fsubs
ret
imul
popa
test
xchg
lcall
lods
sbb
xor
inc
cmp
gs
lahf
or
imul
fidivrs
clc
adc
cmpsb
roll
hlt
cmp
and
xlat
push
daa
xchg
mov
insl
sti
cmp
jo
mov
push
arpl
and
xchg
mov
repnz
sbb
push
xor
sub
mov
mov
pop
into
insl
loope
movsl
nop
pop
fisubrl
adc
add
and
cmp
daa
fistl
loope
icebp
adc
lahf
mov
int
ret
push
fidivrs
or
and
notl
cmpsl
test
or
testl
sub
sbb
push
rorb
pop
xlat
push
aam
sub
cmc
push
stos
incl
cwtl
movsb
sbb
pop
mov
int
add
call
icebp
jmp
nop
test
mov
mov
jmp
jecxz
gs
mov
jecxz
data16
dec
sarb
std
fsubl
in
mov
imul
cld
xor
cmp
push
iret
arpl
mov
dec
outsl
icebp
xor
dec
icebp
in
into
sub
push
dec
insb
mov
sbb
imul
adc
fsubl
jb
jns
fcomi
cli
popa
mov
sbb
dec
push
cmp
rolb
mov
xchg
xchg
pop
cld
lods
xor
sub
add
and
bnd
pop
insb
inc
sub
sbb
or
or
ja
sub
sub
push
into
cmp
fnsave
push
dec
sub
mov
scas
mov
shlb
jns
mov
pop
jmpw
insl
push
ss
pop
scas
or
popf
mov
xchg
pop
dec
fistl
inc
imul
bound
push
mov
rcrb
cltd
cmpsl
ss
test
add
push
popl
mov
mov
fsub
push
or
stos
fcomi
mov
mov
xor
into
or
mov
stos
outsl
and
decl
cmpsb
or
pop
call
push
rcr
ret
jmp
icebp
or
mov
cmp
xor
fimull
imul
pop
int3
or
in
popa
insb
pop
push
jne
int3
adc
cs
call
or
cwtl
sub
ja
or
inc
hlt
push
in
inc
ffreep
ret
js
dec
sub
pop
fisttps
xchg
jecxz
rcll
mov
test
mov
in
xchg
movsl
mov
scas
in
ficoms
inc
stos
mov
cld
lds
mov
sbb
cltd
loope
andl
outsl
lods
push
addr16
cmpsb
dec
sub
outsl
cli
sub
insb
shrl
aaa
popa
out
cmp
cmp
aas
mov
lods
div
int3
outsl
and
xorl
and
stos
sbb
jb
shlb
out
pop
jb
dec
xor
loopne
mov
repz
mov
dec
daa
fldenv
enter
mov
popa
in
xchg
add
cmpsb
int
fdivs
mov
mov
fcmovbe
xor
stos
inc
and
dec
mov
test
imul
je
popf
dec
test
xchg
inc
pop
xor
sbb
fidivl
and
fxam
xor
std
pop
loopne
cmpsl
add
push
test
js
push
or
pushf
dec
sbb
fisttps
testl
rolb
scas
int
mov
stc
sbb
jge
mov
mov
pop
and
pop
adc
xchg
mov
adc
lods
mov
pop
out
lcall
jmp
icebp
inc
and
pushf
ret
push
fldcw
les
jge
popf
test
in
pop
mov
push
ds
xchg
std
jl
xchg
mov
mov
into
iret
mov
mov
stc
mov
arpl
adc
popa
jp
dec
jne
mov
xor
jg
stos
int3
mov
mov
jle
push
sbb
movsb
repnz
xlat
cmp
sarb
mov
decl
in
clc
and
or
sti
arpl
cmp
and
loopne
mov
iret
dec
clc
mov
mov
daa
imul
out
lds
mov
sub
jp
notb
es
aaa
cmpsl
cmp
lret
rcr
mov
inc
pop
add
icebp
ss
les
jmp
sub
push
cltd
sbb
push
jl
mov
sbb
mov
sub
test
je
pop
sti
push
aam
mov
lds
loop
sbb
cwtl
xchg
mov
lret
add
mov
pop
and
icebp
xor
inc
sti
repz
push
or
mov
push
ret
mov
push
pushf
add
push
ljmp
pop
mov
jo
dec
in
jo
pop
orl
repz
or
lahf
dec
test
orb
mov
sbb
stc
cwtl
mov
adc
addl
xchg
daa
mov
add
pop
nop
pop
popa
lcall
mov
inc
jnp
mov
jge
add
cld
inc
xchg
les
out
fsubp
jecxz
cmp
repz
mov
mulb
call
xchg
inc
push
mov
dec
mov
das
mov
loope
inc
insl
in
fidivrs
icebp
ss
xchg
push
jg
xchg
xchg
pusha
inc
jo
int
pop
test
lock
shll
loope
xchg
cs
mov
and
adc
adcl
addl
jg
xor
mov
and
test
pop
test
and
inc
dec
mov
mov
push
or
mov
jae
dec
jecxz
dec
dec
push
sub
sub
fmull
push
loop
add
jg
je
fists
test
sbb
cld
xor
outsl
sar
test
rcl
inc
mov
pop
cmpsb
add
and
cmp
jp
out
pop
mov
leave
adc
imul
sub
out
movsb
push
xor
aam
stos
ret
aad
sbb
insb
repz
push
inc
mov
mov
in
js
test
popa
and
adc
test
mov
mov
icebp
mov
inc
or
mov
mov
xchg
lock
scas
andb
mov
and
je
dec
orl
inc
fcmovne
loope
fiaddl
inc
popf
dec
jle
shlb
pop
push
jl
jmp
rcr
addb
clc
mov
and
sbb
jns
mov
fimuls
enter
int
push
call
sub
mov
sbb
out
sbb
mov
addl
in
arpl
lret
sub
ret
cmp
push
int
ret
cmp
aad
mov
test
outsb
int3
xchg
pop
cmpb
jns
xchg
movsb
mov
jb
daa
or
mov
leave
lahf
insb
mov
fwait
xchg
je
xor
in
mov
dec
hlt
and
fisttpl
rolb
in
aad
push
pop
int3
mov
xchg
je
bound
jg
jnp
test
dec
xchg
push
sub
add
xor
jmp
out
incl
orb
xchg
mov
imul
sub
jno
shr
sub
jno
dec
scas
add
fbld
cmp
dec
in
push
or
std
icebp
dec
sub
scas
jecxz
leave
cs
pop
adc
ror
add
xchg
pop
push
sub
pushf
pop
jb
clc
sarl
les
mov
sub
sub
fsts
xorb
std
aaa
pop
pop
inc
daa
push
in
cli
push
cmpsl
push
movsl
dec
dec
inc
cmpsb
mov
mulb
inc
fistps
rclb
mov
mov
sbb
pusha
loop
sbb
daa
loope
mov
fidivs
cmpsb
mov
sub
pusha
lds
jge
stc
std
cmp
pop
in
pop
ss
mov
pop
idivb
jb
sbb
sbb
inc
xchg
fs
xchg
sarb
enter
cmp
cmp
sti
push
jno
fcomps
std
repz
jmp
lret
out
clc
ja
in
add
add
fdivrl
push
dec
dec
cmp
fdiv
add
xor
sub
cmp
push
popf
into
out
sub
mov
xchg
stos
xchg
shrb
adc
std
xor
xchg
mov
sbb
mov
jg
push
xchg
imul
lods
mov
cmovae
outsb
subb
fnstsw
pop
lret
adc
fistpl
data16
jno
jg
inc
out
or
or
cmp
xchg
roll
mov
and
shrb
mov
inc
mov
cli
mov
in
dec
fbstp
xchg
sub
test
negl
jno
mov
mov
fiadds
lret
aas
mov
fisubl
add
pusha
ja
sbb
sub
imul
aas
sti
mov
iret
sub
pop
xchg
cld
loope
sub
pusha
shrb
fs
sub
sbb
out
sti
aam
push
stos
add
cmc
xorb
std
decb
adc
fwait
jnp
sub
imul
inc
int3
xchg
arpl
jmp
cmp
mov
out
outsb
jae
mov
insb
and
aam
cs
xchg
ret
and
inc
es
gs
mov
popa
push
jae
dec
push
inc
mov
mov
and
push
dec
loope
into
xchg
test
scas
add
inc
popf
out
sub
test
lret
add
bound
aad
push
lock
mov
adc
out
pop
adc
out
cld
push
cwtl
lcall
movsl
adc
scas
jne,pt
jo
adc
cmp
ficompl
scas
push
ficomps
arpl
xchg
or
jp
lds
fldenv
ljmp
mov
faddl
jle
mov
lds
mov
mov
les
mov
sub
mov
push
test
xchg
jae
cs
push
sub
not
pop
inc
xor
or
es
mov
addr16
leave
push
add
jne
cwtl
ficoms
push
xchg
out
or
pop
sub
lea
push
push
lahf
mov
shll
je
add
paddw
imul
imul
lret
mov
loopne
mov
cmp
into
test
pop
stos
in
jg
pop
loopne
mov
lret
push
and
inc
xorl
repz
imul
imulb
mov
xchg
cmp
xor
ss
pop
adc
xchg
adc
inc
fnstenv
jle
inc
push
jo
sti
fstpt
sbb
cwtl
cltd
mov
rolb
add
arpl
sub
subl
xor
shrb
in
aam
inc
mov
fmul
pop
adc
inc
loope
xor
rcll
ss
rcrw
mov
mov
fstpt
in
mov
or
sbb
xor
fldt
aaa
sarl
mov
xchg
xor
push
subl
dec
sbb
mov
add
mov
xchg
push
add
in
jl
add
insl
outsl
ret
pop
push
aaa
rorb
pop
das
rclb
stos
xchg
je
nop
sbb
inc
mov
and
jae
pop
push
sub
pusha
lret
loop
mov
pop
fmuls
data16
mov
xor
and
dec
arpl
and
push
lahf
rclb
dec
jnp
mov
pop
cmpsb
stos
ljmp
rcl
and
sub
adc
inc
push
inc
push
dec
je
cmp
sub
insl
add
or
and
addb
mov
out
push
or
xchg
into
xchg
xchg
pop
into
xchg
mov
pop
mov
mov
mov
xchg
std
mov
int
jg
mov
dec
jo
hlt
mov
adc
dec
clc
adc
int3
daa
das
pusha
incb
adc
sahf
fsts
and
jb
xchg
or
sahf
int
adc
sbb
loope
fldcw
movsl
adc
push
cwtl
push
pop
add
dec
mov
cwtl
add
xchg
sahf
aad
out
lea
jg
mov
rcr
call
ret
mov
js
rcll
lods
xor
jns
mov
push
lds
jmp
push
xchg
dec
mov
xchg
or
fsubrp
pop
lahf
jl
ja
push
lahf
sub
mov
xor
and
mov
fdivrl
jecxz
mov
jmp
outsb
divl
push
cmp
or
push
adc
out
lds
mov
mov
or
lods
jp
lret
push
loop
mov
and
push
jecxz
lods
jge
add
mov
or
push
push
pop
dec
outsb
repnz
insl
sub
daa
push
ret
mov
ja
mov
test
cmp
mov
gs
lods
fdivrs
cmp
repz
js
sub
mov
push
jecxz
pop
test
cmp
fimull
mov
dec
daa
inc
pusha
lcall
rolb
and
loop
in
mov
dec
pop
sbb
cmpsb
fdivs
xor
call
xor
jae
mov
dec
sti
ffreep
aam
test
les
mov
pop
push
push
sub
punpcklbw
dec
mov
mov
jmp
pusha
pop
mov
frstor
scas
out
pop
mov
dec
jnp
orl
fs
inc
mov
inc
lea
lods
lods
xor
dec
or
dec
jge
rorl
aad
mov
jno
lahf
push
mov
inc
or
lcall
mov
xor
loope
jecxz
jb
int
les
nop
je
xchg
pop
outsb
loopne
in
loopne
adc
jge
xchg
inc
scas
int
test
movsl
cmp
das
inc
mov
mov
in
ds
push
clc
dec
shrb
jns
jbe
out
js
stos
sub
enter
push
cmp
sbb
mov
and
push
fidivrl
aas
jne
test
mov
imul
fidivl
scas
and
out
cmp
xchg
push
pop
aaa
sbb
push
xor
out
sbb
mov
sysret
sbb
adc
sti
js
push
push
mov
lock
xchg
mov
fisubl
bound
jg
loopne
bswap
mov
xchg
popf
and
pop
imul
insb
test
jne
sub
lcall
jl
jb
call
pop
xchg
mov
pop
cmp
ret
data16
repnz
lock
pop
mov
mov
repnz
add
stos
inc
pop
insb
mov
ret
sahf
pop
mov
aas
push
inc
or
mov
mov
rep
xchg
fnsave
push
mov
ljmp
imul
in
adc
mov
testb
je
cwtl
or
subl
pop
dec
adc
pusha
add
xor
adcl
or
in
add
pusha
aad
mov
scas
pop
and
add
ss
inc
fwait
adc
mov
or
cmp
fistps
fimull
mov
insl
rcll
dec
dec
sahf
insb
prefetch
xchg
shrb
int3
sub
xor
fistps
pusha
rorl
into
test
jne
mov
jl
push
add
mov
cmp
cmp
scas
fs
sbb
incl
mov
sub
addr16
push
xlat
cwtl
dec
mov
xor
add
sti
movsb
les
xchg
lods
ret
xor
test
jb
test
int3
cld
push
adc
test
sbb
cltd
js
mov
dec
test
fisttpl
int
dec
jecxz
sbb
sub
and
push
xchg
mov
out
mov
cli
xchg
icebp
adc
out
push
call
enter
popa
popa
dec
shlb
pop
mov
inc
or
mov
xor
inc
out
das
adc
or
fcoms
or
mov
mov
es
xor
or
das
jmp
pop
cmp
sar
aas
shlb
movsb
push
or
xor
aam
sbb
inc
dec
mov
xor
lea
push
adc
dec
mov
pop
jns
clc
pop
pop
stc
ret
cli
std
in
xchg
xchg
inc
bnd
addr16
mov
call
fiadds
and
out
nop
add
stos
es
adc
lea
dec
jl
and
sbb
inc
xor
pop
xchg
mov
push
cs
idiv
mov
pop
jg
movb
clc
push
dec
sbb
or
dec
cli
sub
rcll
orl
in
mov
pop
gs
jns
popf
pop
hlt
lods
aam
mov
adc
pop
sub
cwtl
std
jb
int3
add
insb
out
jecxz
out
jmp
jle
test
mov
fcoml
xor
popf
pop
aaa
push
loop
pop
xor
bound
imul
fiaddl
mov
fdivl
idivl
repz
movsb
xor
sub
lcall
add
cld
sub
jne
jmp
inc
jae
icebp
inc
or
push
cmpsb
cmp
push
inc
das
mov
sbb
push
pop
sbb
sbb
xchg
inc
stos
outsb
lods
inc
int3
gs
cs
sub
jmp
jnp
inc
fdivrs
push
cmp
std
add
pop
jl
test
mov
scas
lret
outsl
mov
jg
cld
inc
mov
mov
xor
and
jae
fmuls
jno
xor
dec
test
insl
add
mov
aam
sub
popf
rcll
mov
mov
sub
rolb
inc
dec
outsb
pop
loopne
xor
pop
out
popa
dec
xor
scas
mov
inc
mov
mov
xor
fiadds
xor
push
cmp
push
aam
stc
sarl
pop
cmp
mov
or
in
jb,pt
std
mov
ret
mov
xor
mov
mov
xor
cltd
jno
lock
mov
push
nop
ja
xchg
lret
push
aam
adc
sbb
shll
inc
adc
sub
hlt
in
adc
lds
bound
cmp
inc
adc
dec
rorb
addr16
sbb
repnz
cmpsb
addl
ja
and
scas
mov
repnz
aad
mov
insb
mov
mov
sahf
test
dec
ftst
mov
out
xchg
outsb
cs
xorb
dec
jle
or
xchg
mov
inc
es
and
sub
insl
xor
jmp
or
cmp
lods
ret
mov
pop
leave
xor
xchg
jecxz
pop
inc
dec
mov
cld
mov
mov
loopne
inc
out
cmp
shrb
xchg
mov
hlt
dec
sub
mov
and
fiaddl
sbb
test
enter
sub
push
mov
xchg
pop
sub
xor
ds
fs
outsl
xchg
insb
stos
fsubrs
sbb
push
sub
mov
xchg
jb
mov
repnz
cmpsb
nop
repnz
mov
push
pushf
jecxz
push
push
mov
sub
test
or
mov
testl
icebp
xchg
adc
es
xor
sub
dec
and
adc
push
jp
fstps
xor
int
add
mov
inc
nop
xchg
mov
mov
out
xor
lock
mov
dec
ret
add
clc
xorb
cmp
xchg
xchg
cwtl
arpl
test
xchg
cmp
in
and
popf
cmc
mov
jnp
clc
leave
cli
add
add
ljmp
lret
test
jle
mov
add
mov
jge
es
xchg
mov
loopne
or
or
rcrl
insl
movsl
xchg
cmc
test
jnp
xor
int
lods
dec
mov
dec
pop
or
outsb
pop
mov
mov
mov
jne
ds
dec
dec
fnstcw
push
adc
or
xor
test
sub
xchg
jb
xor
mov
mov
mov
mov
test
call
leave
cmp
cltd
xchg
and
adc
pop
adc
out
xor
xchg
negb
cmp
loopne
mov
mov
lcall
dec
jle
push
mov
aam
mov
inc
jp
inc
and
add
imul
daa
imul
sbb
shl
xor
or
in
stos
out
orb
add
push
xchg
call
aam
push
cmp
popa
jb
cmpsl
popa
das
xchg
adc
lods
mov
loop
f2xm1
and
cmp
or
mov
in
int
xchg
jae
inc
mov
mov
jle
jns
or
loope
jne
out
push
cmp
add
and
pop
scas
sub
out
icebp
je
and
jno
cltd
aad
pop
dec
imul
out
xlat
add
ds
idivl
jmp
push
sub
sub
cwtl
lea
xor
lods
ja
jb
repz
mov
inc
fwait
cmp
push
lods
cltd
sbb
aas
shlb
in
inc
fcmovne
push
daa
pop
insl
sti
sub
aas
lea
mov
jno
adc
punpckhbw
mull
aas
stos
mov
in
push
jp
push
adc
orl
adc
xor
xlat
lcall
repz
je
movups
fists
cld
sahf
pop
nop
push
lock
sub
or
inc
flds
and
das
in
in
sbb
mov
cmp
cmp
inc
call
adcl
test
lcall
out
or
and
in
dec
lret
xor
mov
push
jle
pop
mov
loope
fiaddl
pop
rclb
jle
xchg
stos
out
cmp
test
lods
mov
add
daa
jne
pop
xchg
or
outsl
filds
dec
es
ss
jmp
aaa
ja
xchg
jno
ficoml
cmp
sub
insl
pop
or
imulb
sahf
push
xchg
adc
mov
and
dec
sub
fistpll
dec
sbb
std
inc
xchg
into
push
lcall
cli
add
cmp
jns
mov
mov
je
or
dec
pop
fstpt
dec
jae
movl
xchg
inc
jo
out
xor
cs
fstl
push
pop
and
pusha
mov
repz
push
jbe
xorl
xor
xor
jge
out
adc
maskmovq
testl
jge
in
int
push
push
out
jg
in
sbb
push
sbb
leave
jge
js
pop
dec
cmpsb
inc
idivl
push
sub
sbb
sbb
cltd
mov
push
adc
pop
decl
push
and
or
xor
lds
pop
xchg
xor
jne
repnz
jns
or
push
fbstp
sbb
loope
sbb
adc
fld1
jp
clc
sarl
or
cmp
adcl
es
jb
or
pop
xchg
lcall
mov
sbb
xchg
push
mov
pop
insb
pop
xchg
mov
sub
pusha
insl
jmp
imul
pop
daa
push
cmp
insl
sbbl
subb
int
mov
hlt
xchg
pushf
cmpsb
inc
les
pop
and
xchg
mov
in
test
adc
popa
mov
out
add
fwait
insl
add
lea
xchg
loop
iret
xor
fldenv
out
icebp
jo
mov
in
ds
jo
mov
movl
lock
push
adc
mov
cltd
mov
push
sbb
mov
daa
xchg
dec
fwait
sbb
faddl
nop
jb
mov
mov
push
fucompp
cli
insb
pop
into
inc
out
xorl
adc
xchg
mov
lahf
xchg
or
jae
daa
xor
iret
xor
pop
ret
mov
or
adc
xchg
cld
outsl
dec
scas
sarb
dec
movsl
incb
aaa
in
push
insb
imul
dec
xchg
mov
xchg
dec
xor
cmpb
aas
or
call
aaa
enter
sbb
insl
add
jne
in
imulb
push
jecxz
ss
fs
hlt
and
cmp
aam
mov
daa
push
push
xchg
and
inc
or
scas
stc
inc
idivb
leave
cmpsl
out
loopne
out
push
lds
test
and
pop
sti
mov
fldl
ret
pop
push
push
pusha
ror
cltd
mov
dec
or
rolb
and
loope
push
scas
dec
add
out
in
push
xlat
push
xchg
pushf
nop
lods
sbb
arpl
mov
xor
movsb
push
dec
push
cmp
xchg
mov
or
clc
mov
mov
pop
lea
cmc
cli
push
jno
fisttps
jb
lret
in
out
jmp
aad
shr
xchg
popa
rolb
xchg
cmp
mov
sub
dec
dec
dec
int3
sub
and
inc
sti
iret
ret
lods
stos
out
in
dec
inc
fcompl
and
jmp
je
xor
add
xor
adc
in
xor
push
xchg
mov
xor
sti
test
ret
vpmuludq
in
inc
insl
push
into
push
push
outsl
and
cmp
dec
ret
sub
push
aad
icebp
cmc
xchg
jno
insb
or
ror
xchg
mov
fildll
add
add
movsb
ja
lods
adc
dec
addl
in
sbbb
popf
in
rorb
fwait
pop
add
int
sub
or
fidivs
jp
pop
inc
cmp
xor
and
jns
xchg
ret
push
inc
adc
or
daa
xchg
insb
cmpsb
pop
mov
mov
sbb
cmp
cmp
xor
sub
mov
jp
test
test
mov
test
push
lea
enter
rorb
movsl
shll
sub
fnsave
xchg
daa
sub
cmp
dec
call
cmc
dec
ss
inc
mov
push
cwtl
loopne
or
lds
sbb
sub
mov
rorl
mov
push
jae
and
xadd
xchg
icebp
xchg
std
add
fisttpll
xlat
movsb
xor
enter
in
das
nop
dec
bound
hlt
cmc
into
nop
pop
ds
dec
ds
scas
shll
imul
xchg
mov
jecxz
pop
dec
rolb
jae
insb
movsl
and
or
pop
xchg
repz
add
notl
push
sahf
loope
jb
jb
mov
imul
dec
mov
jle
paddb
pop
xchg
adc
shrl
dec
sbb
or
std
out
into
jns
xchg
push
int3
or
call
cmp
pusha
xchg
subb
outsl
movsl
dec
mov
les
dec
sbb
mov
mov
lret
and
sub
in
jle
or
cltd
or
mov
cmp
push
je
loope
js
or
in
in
leave
push
jp
xchg
imul
xchg
insl
mov
jl
shrb
mov
inc
popa
jbe
inc
sub
out
push
dec
cmp
adc
adc
adc
inc
or
aam
loop
pop
sub
rcrb
and
sbb
sbbl
and
adc
orb
mov
mov
or
sbb
jecxz
jo
repz
in
xor
cmc
sub
std
and
xor
pusha
aas
loope
pop
call
push
test
incb
test
test
fs
test
jmp
jo
inc
loop
push
adc
push
dec
aad
adc
xchg
cwtl
push
out
icebp
loope
pop
adc
ffreep
shl
int3
push
inc
or
shl
ret
sti
sbb
xor
idivl
fnstenv
test
lahf
cmp
dec
push
sub
or
mov
sbbl
cmp
jge
sbb
ret
out
cmc
imul
push
lcall
movsl
mov
jbe
sahf
jns
or
xchg
ret
loop
hlt
cmpsl
fmull
push
fildll
test
adc
pop
push
sub
mov
fstpt
xor
insl
ret
ljmp
add
addl
xlat
push
add
or
mov
test
insl
fld
mov
adc
mov
mov
pop
call
das
movsb
dec
cs
nop
pop
aaa
ja
divl
enter
popa
push
pop
lret
loope
jmp
push
sbbb
push
dec
add
jle
daa
loopne
cwtl
or
xor
adc
es
sahf
push
rolb
clc
jae
cmp
xor
insb
iret
dec
mov
mov
imul
scas
imul
mov
lock
pop
or
jle
mov
aas
sub
adc
mov
jnp
dec
or
cmp
pop
xor
insb
es
or
inc
xchg
push
lcall
mov
sahf
push
sub
scas
test
push
jne
sbb
loop
inc
mov
cmpb
adc
movsw
cltd
pop
mov
loopne
popf
dec
jno
shll
xchg
pusha
mov
ret
rcl
stc
push
push
push
xchg
out
jno
pop
mov
mov
lea
xchg
adc
dec
cli
xor
cmc
push
dec
sbb
and
and
xchg
pop
cli
faddp
dec
cmp
cmp
and
shll
aam
jns
loopne
mov
dec
mov
dec
mov
lods
or
ljmp
mov
jmp
and
xchg
pop
and
mov
lock
adc
inc
mov
les
pop
inc
push
xchg
cmpsl
sub
shrl
je
les
fistl
cli
out
xor
inc
push
jp
mov
cmp
lock
inc
and
xchg
addr16
cmp
dec
xchg
cltd
xchg
shrb
cmp
pop
test
imulb
pop
ja
pop
rol
xchg
sub
mov
repnz
dec
ljmp
and
fisubrl
dec
cltd
sahf
xchg
cs
xlat
push
add
sbb
inc
jne
mov
das
inc
in
cmp
lcall
loop
sub
and
jbe
ficoms
push
in
fadd
enter
and
repz
imul
notl
xchg
nop
mov
push
std
or
jne
pop
xchg
lods
sbb
inc
outsl
mov
adcl
addl
adc
int3
push
jl
aam
jl,pn
iret
and
inc
jp
scas
or
and
xor
xor
jl
cmp
pop
movsb
jbe
jo
push
xchg
mov
xchg
push
loopne
pop
and
jno
jecxz
sub
data16
pop
mov
decb
repz
xchg
xor
lcall
adcb
xchg
and
sub
aam
in
enter
movb
fidivs
push
mov
icebp
mov
and
fnsave
jge
jmp
cmp
sbb
insl
mov
ja
sbb
xchg
in
test
add
icebp
sti
jl
outsl
cmp
or
dec
rcrl
test
sbb
popa
adc
dec
insl
jb
mov
pop
push
sub
xor
sti
jne
repz
push
jnp
movsl
subb
pop
jbe
inc
sahf
jecxz
or
sbb
movsl
push
fnstcw
jp
test
dec
test
mov
test
loopne
orl
insb
jne
cs
mov
jg
jmp
lahf
inc
jg
outsl
rorl
cltd
or
test
mov
movsl
test
hlt
mov
insb
cmpsb
dec
sbb
mov
mov
mov
int
dec
into
repz
mov
out
mov
push
in
test
testl
in
leave
movsb
cmp
out
xchg
xor
pop
out
sbb
xor
jg
into
jmp
ljmp
rorl
mov
je
pop
ja
les
out
dec
cmp
mov
push
inc
xchg
lcall
jns
xor
xchg
jge
mov
ret
or
push
jge
inc
test
jno
sbb
mov
orb
sbb
arpl
ret
cwtl
cmp
aaa
dec
or
notl
inc
ffreep
jle
xchg
push
hlt
inc
xchg
jl
test
icebp
fisttpll
xor
jbe
andl
add
jbe
xchg
fst
mov
inc
sbbb
mov
ja
xchg
mov
xor
lahf
clc
pop
add
filds
call
add
pop
std
jns
push
cmp
sub
ljmp
sub
loop
ret
dec
fstpt
hlt
ljmp
mov
lods
imull
xor
nop
movsl
mov
mov
push
outsl
push
fwait
rolb
cli
push
sbb
sbb
sub
movsl
scas
mov
inc
cld
mov
shrl
push
mov
cmpsl
imul
call
lahf
sbb
mov
aad
pop
xor
pop
arpl
loop
mov
or
cmpsl
loope
cmp
xor
pop
and
fnstenv
loopne
loop
mov
pop
inc
outsb
jle
cmp
jnp
sbb
js
or
js
sub
mov
addr16
jg
inc
std
je
fcmovnu
add
jnp
cld
xchg
clc
into
mov
and
cs
rcrb
cltd
test
cmc
mov
jl
jne
mov
enter
jge
mov
jmp
fcoms
cli
in
jp
sub
inc
sub
sub
roll
fs
cmp
iret
dec
dec
out
pushf
addl
xor
dec
inc
fcom
sahf
dec
cld
inc
rorl
pop
hlt
rcll
lock
mov
negl
mov
inc
inc
mov
in
jb
mov
mov
cli
push
popf
push
dec
jnp
lods
sub
fwait
jmp
loop
insl
sub
mov
dec
or
movsb
clc
and
push
jmp
cmpsl
or
sub
adc
adc
jge
icebp
add
lcall
out
adc
mov
adc
push
push
push
mov
ret
xor
insl
sbb
cmpsb
ds
bound
fcomps
mov
pop
mov
daa
push
imul
mov
cmc
mov
sub
sbb
cmpsl
das
mov
push
mov
cs
pop
sbb
add
dec
repz
add
push
out
jecxz
pop
icebp
xor
mov
sbb
push
movsb
push
pop
inc
or
push
mov
cmp
mov
lods
rolb
lods
inc
jo
push
pushf
mov
sbb
fcmovu
movsb
jnp
sti
adc
addr16
hlt
mov
xor
jne
pop
outsb
add
aaa
repz
mov
jl
stos
jno
insl
add
cld
loop
pop
mov
xchg
pushf
sub
jg
pop
adc
lea
addl
and
push
push
push
pop
pop
shlb
dec
mov
loop
adc
jp
mov
jl
hlt
mov
cmp
mov
fs
repnz
add
js
out
add
and
push
or
sbb
sub
cmc
test
jb
pop
insb
dec
push
mov
push
mov
dec
xor
arpl
jbe
movsl
fs
fstpl
cli
out
push
sub
xchg
or
icebp
ret
mov
sub
sbb
cs
pusha
mov
stc
call
andl
paddb
pop
movl
mov
jmp
lock
adc
cmp
xchg
test
add
push
sub
cltd
pop
push
lock
mov
loop
in
cmp
mov
mov
pop
arpl
aam
mov
fildl
pop
es
adc
push
and
lret
jp
aad
mov
aam
jns
sub
or
or
stos
test
mov
loop
call
dec
loopne
xchg
clc
aam
bound
adc
insl
into
mov
loop
arpl
out
adc
push
repnz
inc
add
sbb
ja
or
jp
xchg
inc
lock
sti
fmuls
dec
xchg
add
loopne
cwtl
jbe
cli
aas
and
mov
sub
fwait
hlt
pop
cmpsb
cld
add
faddp
lahf
rcrl
xchg
insl
movl
and
repz
inc
loope
add
imul
dec
pop
lds
cwtl
stos
mov
push
insb
fs
xor
mov
mov
enter
dec
cmp
ret
mov
jg
scas
cmp
ljmp
push
cld
imul
mov
mov
movsb
pushf
fcmovnu
adc
pop
sbb
sub
inc
jg
mov
movsl
ljmp
cmp
pop
push
not
shll
and
ljmp
mov
or
test
jo
inc
pusha
xlat
inc
imul
jle
loopne
ss
lock
xchg
xchg
pop
cld
pop
ljmp
imul
adc
push
stos
or
and
cld
scas
mov
popa
dec
and
xchg
fmulp
xchg
push
lods
xchg
shlb
xchg
inc
xorb
enter
inc
gs
sti
in
pop
and
mov
xchg
mov
jecxz
xchg
push
rorb
cmp
cld
xor
loopne
sub
jecxz
pop
lds
mov
inc
inc
mov
dec
aaa
cli
sub
sbb
or
incb
jle
mov
icebp
test
aas
jnp
and
loop
sti
mov
mov
pop
aaa
push
jg
stos
cmc
mov
dec
dec
dec
movsb
std
jl
decb
aas
imul
das
cmp
lea
lods
mov
cmp
pop
cmp
dec
fildl
loop
push
mov
xchg
sbb
stos
or
inc
inc
popa
imul
or
lods
ljmp
fwait
inc
push
jmp
xchg
jl
xor
cld
stos
mov
test
clc
popf
xor
es
add
dec
ficoml
and
in
or
mov
fnop
dec
push
cmpsl
mov
jle
ja
xchg
cmpsb
mov
repnz
pop
scas
jecxz
ds
lret
jo
inc
inc
enter
mov
das
adc
push
mov
or
movsl
dec
enter
scas
inc
jmp
outsl
adc
pop
push
jmp
std
cmpsl
adc
jg
dec
jae
mov
shll
adc
xor
xor
push
movsb
sub
mov
incl
add
dec
shlb
or
and
jbe
xor
out
outsb
lret
imul
cmp
pop
test
ret
hlt
pop
and
push
and
pop
mov
sub
xchg
ljmp
imul
je
imul
dec
adc
cmp
jle
ljmp
orb
test
shll
in
jne
test
mov
xchg
xchg
movsb
aas
push
xchg
loopne
and
fcmovnu
xchg
inc
into
insb
cwtl
mov
xchg
es
xchg
mov
in
mov
xor
add
push
xor
sti
ss
dec
mov
out
fs
or
xchg
dec
or
sbb
inc
popa
push
imul
jno
and
cli
jmp
push
push
repnz
cli
out
jns
into
out
pop
rcrl
fnstenv
cld
aas
dec
in
popf
fisttpl
ja
fwait
insl
repnz
cmpsb
mov
jge
push
push
push
movsb
mov
imul
or
arpl
in
inc
jle
lahf
inc
test
addr16
inc
xor
or
cwtl
aad
ror
cltd
pop
cwtl
mov
andb
out
js
mov
inc
inc
inc
pop
inc
lcall
mov
addr16
add
inc
inc
shl
jbe
or
pop
lret
dec
cmp
inc
pop
add
aas
mov
jmp
lods
repz
jns
dec
lret
aas
cmp
fwait
push
dec
out
cltd
cmpsb
lds
and
out
in
xchg
aas
sub
add
out
gs
int
jns
aad
inc
jnp
mov
xchg
cmp
mov
jl
jbe
fwait
mov
pop
cmp
xor
push
adc
push
ret
das
push
jl
jle
mov
or
add
inc
test
loopne
in
in
out
xchg
xchg
shll
jg
aad
sub
pop
movsl
addr16
andl
movl
pop
fwait
xchg
inc
out
movsb
imul
ljmp
lds
ds
icebp
jecxz
orb
mov
sbb
mov
pop
jb
xchg
lods
in
inc
xchg
inc
insb
lret
out
adc
sbbl
dec
es
jo
dec
add
mov
inc
pop
dec
fimull
cmpb
cmp
pop
mov
cmp
xchg
ja
ds
je
ret
sahf
xchg
shlb
je
incb
movsb
cmp
mov
int3
fwait
mov
sub
cltd
stos
ret
ds
sub
cmp
aam
push
or
xchg
push
xchg
test
inc
and
insl
add
mov
mov
mov
stc
push
cmc
stos
jl
push
adc
xchg
enter
add
cltd
mov
jbe
inc
add
movsb
aas
movsb
xchg
pop
sbb
ret
add
mov
mov
add
ja
cmpsb
sbb
repnz
mov
imull
mov
leave
and
stc
pop
enter
mov
or
jbe
in
inc
fwait
inc
mov
aas
mov
es
outsb
adcl
hlt
jns
in
ja
inc
loope
pop
and
cmp
inc
repz
mov
fadds
fldl
adc
or
jnp
sar
mov
jb
push
int3
mov
jge
mov
mov
aas
adc
xchg
rcrb
mov
popf
jnp
imul
je
dec
xor
push
out
cmp
jge
and
sahf
sub
and
scas
jle
and
sbb
clc
xchg
inc
add
inc
cli
test
scas
mov
dec
xchg
cli
ret
pop
inc
push
jp
les
lea
mov
movsb
les
push
and
ss
call
push
mov
dec
mov
pushf
mov
out
jns
jp
xor
sbb
push
ja
pop
ficoms
dec
dec
pushl
insl
mov
pop
fwait
push
sbb
icebp
and
sub
mov
out
ljmp
add
or
ficoms
sti
mov
out
pushf
sbb
dec
or
mov
ljmp
ja
sarl
jne
iret
ja
mov
mov
lcall
cmp
jno
insb
mov
imul
rclb
movsb
inc
ljmp
sbb
push
lds
and
mov
cmp
std
imul
rdmsr
mov
mov
sub
dec
mov
mov
mov
stos
mov
push
fucompp
jne
inc
js
fs
mov
testl
stos
jne
xchg
push
loope
cli
aaa
in
jmp
mov
mov
lcall
lcall
inc
nop
loope
jg
movsb
dec
enter
adc
loope
stos
push
jnp
addr16
push
aam
pop
inc
in
cmp
imul
xor
pop
loopne
sti
lods
sar
rcr
xor
sub
dec
bound
cmp
dec
adc
xor
stc
movsb
daa
mov
enter
mov
xchg
ljmp
mov
sbb
pusha
xor
lods
roll
push
js
mov
insb
arpl
fsubrs
mov
sti
sbb
fstpt
inc
fwait
cs
stos
pop
mov
rorb
clc
movsb
xchg
test
xlat
add
mov
es
add
xchg
dec
push
in
mov
imul
lahf
call
pop
jp
add
jmp
xchg
rorb
mov
or
or
mov
inc
and
in
lods
push
xor
or
pop
cmp
pop
inc
xor
sti
nop
popf
jg
dec
mov
pop
sub
jp
addl
int
add
cmpsb
ret
xchg
or
imul
mov
out
pop
int3
je
inc
sub
in
idivl
out
jb
dec
imul
rclb
cmc
sbb
xor
xchg
add
or
jmp
mov
lret
pusha
xchg
shlb
daa
inc
test
xchg
xchg
arpl
dec
lcall
cmp
movsl
mov
mull
pusha
mov
cmc
insb
movsb
or
add
sub
fldenv
int3
sbb
sub
int3
or
std
mov
gs
stc
lea
push
pop
sub
scas
mov
in
ficoms
popl
aas
pop
or
and
xchg
or
pop
jnp
pop
jbe
popa
adc
mov
sub
mov
mov
mov
stos
aam
mov
push
inc
pop
fimuls
mov
aad
add
testb
mov
imul
push
lret
sub
push
cmp
mov
mov
mov
xchg
sub
push
inc
sub
sub
cmp
add
pop
or
mov
push
inc
and
push
insl
dec
clc
hlt
pop
add
inc
push
ret
mov
inc
inc
pop
mov
ss
scas
xor
and
jno
int3
dec
stos
jle
adc
cmp
xchg
sbb
dec
lods
inc
iret
fsubl
push
mov
outsb
js
sbb
jb
push
shll
scas
push
xor
push
add
cmpsb
fidivs
mov
loop
mov
fmull
aas
daa
aam
jns
pop
repz
orb
es
and
push
loop
or
mov
adc
das
xor
or
bound
and
outsl
pop
loopne
lds
int
and
rcrb
mov
sub
ret
mov
arpl
xchg
into
out
loope
aam
repz
push
mov
popf
sbb
xchg
mov
adc
sti
cmp
jbe
sarb
aaa
bound
cli
push
insl
add
popfw
and
pop
out
inc
lods
test
mov
dec
cmp
scas
sarl
jae
cmp
or
aad
pushf
sub
dec
shrl
jns
fsubp
add
mov
outsb
mov
ja
cmp
jns
iret
jno
jp
in
repnz
sahf
dec
aaa
mov
mov
imul
push
mov
ret
xor
mov
jno
pop
call
push
mov
cmp
jo
fsubs
mov
jae
shlb
jno
hlt
mov
out
pop
dec
push
mov
aaa
movl
aaa
xchg
push
andb
inc
xchg
ja
mov
inc
and
fsubl
ljmp
sbbl
in
into
arpl
jno
loopne
in
cmp
add
ret
ret
lock
xchg
cmp
pop
addr16
fadd
inc
ss
inc
in
and
aad
mov
xor
test
mov
xor
and
nop
mov
xchg
lock
mov
and
pushf
ret
mov
enter
push
nop
cmp
pop
inc
sbb
jbe
scas
xor
dec
jecxz
inc
fldl
mov
sti
dec
inc
lods
or
add
cmp
mov
popf
pop
cmp
out
xchg
pop
lret
loope
pop
jnp
fcomps
iret
das
cmp
dec
popf
xchg
dec
lds
dec
sbbb
shll
push
test
sahf
idivb
fwait
jae
aaa
lods
adc
dec
fwait
pop
out
jns
sub
nop
push
mov
movsb
or
add
pop
outsl
xchg
insl
pop
and
xchg
call
add
add
jecxz
repnz
pop
sbb
aaa
ss
ja
cmp
inc
lahf
fldt
scas
push
push
cmpsl
hlt
jae
xchg
push
sub
jae
cmp
adcl
mov
jg
xchg
inc
adc
adc
test
enter
icebp
test
xlat
lds
int
or
push
sbb
punpckldq
pusha
cwtl
xchg
mov
pop
clc
cmpsl
xor
faddl
mov
das
inc
push
cmp
rcl
rolb
loopnew
sbb
push
clc
cmovo
insb
xor
call
out
fisttpl
mov
sub
test
add
cwtl
leave
mov
add
mov
add
xchg
fwait
scas
adc
push
sbb
push
testb
inc
mov
subl
test
mov
sub
mov
jp
cltd
aam
sub
push
mov
enter
scas
rorl
sbb
xchg
adc
dec
xor
hlt
add
test
push
aaa
xlat
mov
push
leave
mov
and
mov
mov
ret
jne
inc
pop
ds
pop
push
jbe
scas
push
xchg
imulb
jo
fistps
das
leave
sub
ds
test
imul
aad
out
cmc
leave
jnp
stos
xor
adc
outsb
jge
dec
daa
mov
icebp
mov
js
adc
ja
mov
ror
push
std
scas
inc
loopne,pn
xlat
shll
out
xorl
add
gs
sbb
js
shlb
fwait
mov
pop
popf
sbb
pop
imul
xchg
jbe
lret
insb
inc
fwait
cs
lods
push
or
das
out
dec
in
or
adc
es
inc
xchg
cmp
lea
add
stos
push
cmpsl
mov
xchg
xchg
dec
stos
arpl
jo
lea
xor
xchg
loopne
cs
lcall
insl
sub
sub
aad
and
rsqrtps
inc
adc
out
jl
xor
in
cmpsl
jns
mov
in
dec
and
mov
cmp
mov
add
push
dec
sbb
xchg
shlb
fldcw
clc
lret
mov
arpl
fildl
fcoms
cld
scas
cld
sbb
jae
movsb
addr16
gs
ret
imul
xchg
jbe
cmp
imul
out
cmp
jne
int3
add
mov
fwait
xchg
cwtl
cwtl
lock
or
adc
rcrl
popa
fmul
mov
dec
lret
sub
or
ret
std
imul
jmp
or
stos
stc
lret
rclb
in
xor
inc
or
cltd
repz
cmp
add
hlt
ss
adc
cli
mov
notl
cmp
pop
sub
jg
inc
sub
sub
inc
out
mov
dec
push
and
fstpt
rcrb
mov
adc
fs
scas
adc
pusha
loop
xchg
pop
jnp
mov
jo
lods
fsubrl
ja
mov
sar
sbb
out
mov
movsl
pop
les
arpl
cmp
testl
int
xor
xchg
mov
jo
add
sbb
les
mov
mov
xchg
shrl
pop
jg
pop
sub
jl
cli
lcall
es
xchg
or
lret
sbb
icebp
popa
insb
shlb
int3
and
cltd
xchg
lcall
jge
sbb
mov
inc
in
mov
dec
or
add
das
cmc
or
bound
inc
scas
inc
and
or
xchg
out
lods
fs
ds
and
cs
mov
jno
fdivrl
xchg
scas
xor
into
fstl
stos
cltd
jg
nop
mov
js
mov
out
cmp
jmp
int3
and
jg
or
in
out
sub
mov
cmpsl
idivl
ret
mov
pushl
sub
in
lods
testb
pop
ret
insb
dec
xor
jo,pn
pop
js
adc
xchg
jo
ret
jge,pn
dec
jno
cmp
push
or
xor
mov
mov
xor
sub
xor
lods
insb
movsb
pop
test
adc
pop
call
xor
iret
xor
icebp
sbb
cwtl
and
rol
sbb
and
sti
adc
mov
cmp
xor
mov
loopne
cmp
lock
adc
addl
fs
dec
jns
and
sbb
jp
rcrl
aaa
repz
cs
inc
mov
add
lret
adc
inc
outsb
iret
lcallw
sub
sbb
repnz
repz
aam
inc
adc
hlt
insl
aam
mov
sbb
mov
pop
mov
cmp
add
xor
iret
sbb
cwtl
sub
push
add
fdivs
pop
or
shl
and
jmp
adc
sti
dec
push
pop
out
push
pop
inc
ds
pop
mov
pop
fcom
out
popa
iret
mov
rcrl
push
je
gs
mov
ds
bound
out
outsb
cmp
enter
loop
mov
nop
mov
inc
push
leave
stos
or
in
mov
jns
jecxz
xor
dec
outsl
jnp
sub
add
mov
inc
xor
ds
mov
xorb
jne
xor
jmp
lret
cmp
shll
adc
test
rcll
test
popa
out
shrb
sub
cmpsl
fmuls
in
data16
test
adc
xor
mov
cmp
pop
inc
jae,pn
dec
iret
sbb
test
daa
lods
fsub
sbb
push
dec
jo
pusha
out
mov
pushf
sbbb
sbb
orb
adc
rcll
push
lcall
shrl
push
jo
scas
xor
push
xchg
paddusw
mov
push
push
mov
xlat
jae
and
dec
cmpsl
mov
test
aam
mov
dec
imul
aam
dec
shll
and
or
and
test
jle
cwtl
sbb
mov
in
jo
sub
xor
data16
jl
les
out
mov
xor
jle
mov
sbb
leave
popl
repz
mov
lret
cmp
xor
or
xor
enter
lods
xchg
loopne
and
test
jno
xor
test
xchg
enter
inc
aaa
loopne
dec
in
test
sub
nop
dec
andb
mov
push
push
jecxz
fiadds
inc
sbb
mov
fnstenv
pop
jl
addr16
sub
inc
jmp
inc
adc
push
sub
add
jbe
push
in
movsl
sbb
outsl
xchg
mov
rcll
bound
dec
add
jg
sub
outsb
sub
mov
test
rcrl
pop
pop
int
loop
pushf
and
mov
iret
or
ficoms
cmp
test
push
sub
das
aas
fs
pop
pop
inc
jle
and
sarb
sub
js
adc
jo
out
in
xchg
inc
dec
int3
cmc
inc
fidivl
inc
jg
jmp
xor
push
movsl
lea
push
push
sub
xor
or
rorb
inc
mov
xor
xchg
in
cmp
in
sbb
popf
mov
sbb
xor
adc
jecxz
loop
push
icebp
adcb
mov
lea
out
inc
cmpsl
dec
pusha
inc
out
fincstp
repz
cmp
mov
inc
xchg
cmp
cmp
xchg
loop
xor
fwait
sbb
and
inc
popf
rclb
push
mov
pop
test
xor
pop
into
aaa
mov
and
push
roll
in
mov
into
js
xlat
and
mov
imul
push
loope
jg
daa
mov
repnz
sub
cmpsl
mov
pop
ja
insl
mov
stos
dec
gs
fistpl
int
nop
xorl
loope
les
sub
xchg
arpl
cmp
cs
mov
test
dec
adc
subl
xchg
nop
sbb
xorl
lret
lds
ljmp
cmp
mov
or
arpl
pop
jp
jne
push
je
test
out
cs
notb
aam
inc
arpl
pusha
mov
mov
inc
mov
dec
dec
dec
mov
test
bswap
fisubrs
and
mov
stc
pop
bound
adc
jne
mov
pop
jecxz
adc
addl
xor
kmovw
mov
imulb
xorl
mov
mov
cltd
push
dec
or
test
sub
sub
cmpsb
popf
add
push
ror
rsm
int3
rolb
adc
add
mov
gs
andb
dec
int3
popa
push
andl
into
in
lahf
jb
sarl
je
dec
scas
out
sub
out
out
jge
cmpsb
adc
mov
mov
sbb
and
dec
js
loopne
dec
xor
int3
leave
sub
cltd
test
inc
ljmp
jmp
pop
lods
mov
xlat
js
or
lods
add
push
in
imul
jno
out
xchg
mov
push
sbb
mov
sub
add
imul
addl
mov
sbb
cmp
int3
adc
inc
ret
mov
int3
cli
jmpw
sub
jno
ficoms
pop
and
mov
iret
arpl
je
push
fimull
fiadds
mov
push
insb
insb
sub
xchg
jmp
and
lret
inc
repz
push
sbb
aad
jmp
fld1
into
mov
jmp
or
cmp
aas
sbb
stc
mov
scas
inc
mov
cli
inc
lret
mov
das
or
jmp
pop
test
in
lea
ds
sbb
stc
xchg
push
lock
and
in
imul
sbb
adc
xchg
ljmp
jp
mov
and
xor
sub
icebp
rolb
and
xor
faddl
add
test
cmp
mov
jnp
dec
sbb
xor
cs
inc
cmp
and
sub
movsl
lods
repz
dec
sub
and
pop
sub
inc
addr16
in
mov
negl
inc
push
shll
ds
dec
dec
loop
xchg
or
ret
mov
dec
pop
cmp
insb
je
push
mov
jle
inc
jmp
sbb
mov
mov
cmp
nop
fs
add
aaa
leave
ficoml
aas
ret
mov
push
incl
std
mov
fistpl
fmull
push
in
jg
test
mov
inc
mov
lahf
fisttpll
test
add
adc
data16
pop
xchg
mov
cmp
movsb
repnz
mov
aas
rcrl
jo
cmpsl
xor
mov
fwait
sub
movsb
dec
and
or
pop
je
scas
loope
push
cli
push
leave
sbb
lods
jae
xor
adc
mov
inc
sub
mov
mov
jo
pop
scas
daa
movsw
cmpsb
jbe
dec
stos
mov
sti
xchg
insb
in
jne
pop
mov
test
or
in
add
xchg
xchg
mov
push
pop
and
cmp
pop
ja
xor
jle
stos
adcl
scas
ljmp
push
sbb
ret
cli
pop
leave
dec
test
mov
lret
test
sbb
dec
cmp
lock
cmp
aam
call
xor
mov
push
sti
je
call
add
inc
push
pop
push
bound
mov
xor
inc
inc
mov
ficompl
or
arpl
xchg
popf
mov
rorl
sub
aad
jbe
dec
jns
pop
cmp
fldl
jecxz
pop
dec
push
jae
mov
and
add
xchg
and
sbb
xchg
mov
aaa
xor
push
out
inc
xchg
pop
xchg
inc
mov
call
arpl
xchg
mov
sti
sbb
je
std
stos
cmp
pop
or
sub
ret
sub
mov
sbb
in
in
js
push
adcb
pop
outsl
xchg
vdivps
arpl
adcl
mov
xchg
test
aaa
jmp
fstl
or
pop
dec
pushl
outsl
fxtract
jle
orb
or
out
mov
add
xchg
mov
xor
out
and
movsl
loope
add
neg
popa
outsb
call
xchg
inc
enter
lods
sbb
jmp
xchg
out
xchg
dec
xor
mov
test
das
sbb
inc
mov
sub
shrl
lods
popl
aad
hlt
nop
mov
insb
test
neg
outsb
adc
das
lahf
or
mov
sub
sbb
and
cmpsb
sub
stc
fstps
flds
cwtl
subl
and
inc
ret
sbb
out
jno
jp
or
ja
sahf
push
dec
pop
scas
in
or
das
pusha
xchg
adc
lret
cmp
inc
inc
shrl
cs
ja
mov
xor
xor
rcll
cmp
xor
in
xchg
dec
testb
rcrl
in
sub
icebp
scas
mov
jg
stos
mov
sub
inc
adc
sarb
cmp
cmp
std
divl
out
movsb
push
sub
mov
push
push
add
in
xchg
cmc
xor
push
pop
ja
cmpsb
pop
xor
in
ret
xchg
lds
mov
inc
sbb
pmaxsw
test
mov
scas
mov
shlb
in
je
dec
jg
add
fwait
arpl
pop
jbe
lret
rcll
cs
sti
or
xchg
and
pop
or
pop
adcl
adc
icebp
sub
jp
xlat
adc
popf
negl
sbb
xor
xchg
ficompl
xor
stos
out
jmp
xor
mov
dec
outsb
stc
xchg
pop
mov
cmpsb
sbb
mov
mov
loop
cmp
mov
out
mov
mull
leave
xchg
lret
push
frstor
inc
xor
adc
lock
cmp
inc
dec
pop
fisttps
ja
pop
fwait
dec
mov
ret
mov
test
jb
xor
mov
sub
mov
xchg
cmp
xor
shlb
dec
push
aaa
push
adc
xchg
cli
mov
std
and
adc
jne
sbb
sub
outsb
rsqrtps
les
int3
into
push
mov
xchg
sahf
gs
mov
sub
aad
jmp
inc
or
int3
xlat
imul
sub
jns
pop
and
jbe
push
cld
imul
jle
shr
mov
mov
hlt
arpl
pop
adc
test
sbb
test
aaa
lds
xorl
ja
loope
stos
mov
popf
sarb
adc
push
into
test
lods
mov
repnz
pop
pusha
je
shr
sub
and
sbb
movsb
ss
jbe
push
loope
push
fisubrl
inc
pop
jge
loope
testb
xchg
push
int3
fnsave
adc
add
int
cmp
enter
pop
adc
adc
sub
dec
adc
xor
or
imul
fcmove
mov
in
idivb
popa
cs
xchg
in
fisttps
pop
lahf
xorb
fwait
xchg
sub
jb,pt
dec
nop
cmp
stos
cmp
dec
dec
cmp
mov
dec
pop
sahf
pop
xor
mov
insb
adc
xchg
adc
or
aam
cmpsl
xchg
jnp
lods
insb
or
mov
stos
outsl
xor
push
and
cmp
dec
nop
in
rcrb
scas
and
test
data16
inc
mov
dec
dec
mov
push
xor
stc
imul
sub
add
pop
adc
pop
dec
inc
loop
pusha
mov
and
xor
add
and
pop
pop
test
pop
inc
adcb
shlb
jle
dec
pop
xchg
cmpsb
imul
mov
in
pop
mov
inc
imul
sbb
wbinvd
cmova
mov
inc
dec
repz
shrl
add
sti
sbb
dec
mov
mov
scas
add
cmc
nop
cld
mov
cmpsl
push
mov
movsb
mov
test
pop
xchg
popf
into
shlb
inc
lcall
inc
fisubl
cmp
dec
lahf
dec
insl
ret
mov
jno
mov
jg
mov
dec
imul
shrl
lock
repnz
outsl
mov
add
xor
mov
xor
inc
push
divb
leave
aaa
lds
in
add
jnp
shll
or
loop
xchg
cmpxchg
rolb
les
push
addb
pop
sub
xchg
adc
lds
je
xor
lcall
jb
mov
jg
inc
shll
aad
sti
pop
jecxz
mov
adc
roll
loopne
jo
xchg
xorb
or
xchg
sbbl
adc
mov
idivb
adc
das
sbb
into
mov
and
pop
mov
adc
cs
sbbl
push
movsl
or
and
jb
mov
and
pop
mov
mov
dec
adc
push
or
addl
shlb
sub
dec
fidivs
mov
push
aas
call
das
clc
dec
ds
jmp
stc
mov
adc
sub
popf
lahf
ljmp
orl
xchg
in
mov
ret
jg
adc
dec
inc
or
or
arpl
into
pusha
xchg
pusha
insl
clc
inc
pop
imul
in
lock
ret
shlb
jo
ret
test
inc
add
xchg
aad
mov
enter
or
daa
je
sub
cmp
inc
inc
mov
ret
xlat
or
cmp
cmp
push
jno
sbb
in
lcall
aaa
xor
in
or
mov
cmc
mov
cltd
jno
sub
sbb
addl
mov
jl
shlb
out
jno
sbb
fildl
sub
lret
jg
leave
xchg
imull
mov
jo
shl
jbe
nop
inc
and
sub
add
fidivrs
cld
ljmp
cli
xchg
adc
mov
mov
sbb
cmpsb
loope
paddb
mov
or
mov
iret
jne
pusha
jb
pop
adc
shrl
je
and
mov
insb
sub
sbb
sbb
cmp
cli
icebp
sbb
dec
loope
popa
push
test
or
jne
popa
or
shlb
std
out
dec
xchg
stc
into
and
sub
mov
call
loop
rcrb
jb
int
adc
xor
xchg
dec
xchg
loop
xor
adc
add
xchg
popf
xor
adc
mov
jmp
in
aam
mov
pop
inc
popa
dec
inc
add
adc
sub
js
xchg
pop
je
repnz
sbb
mov
lret
fcmovb
cltd
push
setle
mov
mov
xor
insb
add
inc
cmp
mov
fisttpll
mov
cmpsb
ss
adc
jnp
push
lods
jg
out
iret
rcrb
mov
xor
push
inc
inc
sbb
imul
push
mov
js
sbb
cmp
jbe
in
negl
cmpsb
pop
xor
xchg
push
into
cmp
lcall
push
sub
mov
add
aad
push
or
jp
adc
adc
and
cmpb
scas
push
cwtl
jle
orl
sar
dec
out
xchg
jo
mov
push
pop
repnz
mov
cmpsl
fxtract
mov
sub
cmpl
dec
es
pop
cltd
jmp
pop
push
dec
mov
xchg
adc
pop
cmpsb
lds
in
rolb
jl
dec
inc
movsb
ds
adc
cmpsb
sbb
jecxz
push
clc
push
cmpsb
ja
push
ljmp
push
out
jp
or
test
gs
pop
mov
mov
sbb
mov
and
pop
dec
cmpxchg
je
sub
fucom
fwait
push
std
inc
sbb
or
in
mov
xor
std
out
out
shll
inc
jbe
ret
dec
push
cmpsl
mov
enter
in
mov
xor
add
call
dec
add
std
mov
imul
stc
insb
adc
sub
mov
je
lds
les
push
pop
dec
in
loopne
cmp
pop
sbb
jae
sbb
aaa
sub
lods
ds
fisttpl
jp
scas
call
inc
insb
imul
inc
cmp
shl
jmp
das
fldcw
lcall
in
bound
mov
sub
xchg
subl
or
fldt
add
jno
dec
sub
movsb
mov
mov
lret
cmpsl
xor
daa
loope
cld
test
not
mov
pop
int
push
pop
sahf
xchg
idiv
jmp
cld
xlat
repz
pushf
push
popf
or
xchg
ficomps
hlt
xorb
out
jbe
stos
nop
stos
stos
cmp
add
mov
sbb
cmp
fcmovnb
stos
sbbb
test
xchg
scas
cmp
xchg
out
sbb
xchg
cli
jg
in
aas
movsb
sub
je
stc
or
stos
push
enter
mov
mov
clc
aaa
popa
mov
sub
outsb
pop
add
push
xchg
xchg
scas
mov
adcl
pusha
mov
lods
dec
jno
fisttpll
sub
push
dec
xchg
imul
mov
mov
mov
xchg
fstps
aas
lea
xchg
jno
mov
sbb
pop
and
loope
fmuls
and
test
data16
inc
addb
daa
sbb
pop
adc
add
out
adc
scas
or
adc
daa
xchg
leave
dec
xor
sbb
scas
xlat
and
and
push
aam
cmpb
jne
aam
movsb
inc
out
xchg
mov
inc
lret
out
mov
or
lea
ror
jmp
add
jecxz
aas
aam
fsubr
sbb
sub
push
int
push
jp
into
cmp
int
out
or
and
mov
cltd
loopne
stc
cmpl
lds
mov
call
and
fisubl
cmp
jl
shrb
outsl
sahf
outsb
pop
imul
les
jnp
lret
aaa
in
jmp
imul
or
push
pop
mov
lea
push
ret
push
fsubrs
jge
cld
mov
and
addr16
in
ficoml
adc
mov
mov
xor
pop
push
ret
clc
daa
rcrb
cmc
or
sti
aaa
adc
dec
repz
mov
push
jnp
inc
xor
mov
repnz
pop
jno
out
mov
cltd
test
fmuls
mov
stos
mov
insb
fnstenv
aaa
out
in
test
neg
sbbl
mov
push
fsubrl
es
js
aas
outsl
mov
out
fwait
mov
mov
loope
push
cmp
xchg
arpl
push
sbb
adc
and
inc
sub
stos
or
ja
add
xor
mov
rcll
rol
idiv
sub
pushf
pop
or
or
lds
push
rolb
cli
rorb
mov
fsubrs
into
dec
hlt
cwtl
xchg
sbb
mov
push
popf
push
mov
pop
enter
push
cmp
pop
icebp
push
movsl
mov
or
xor
xchg
push
out
add
adc
xchg
adc
cs
cmp
jle
sub
rolb
xchg
pop
dec
inc
cmp
rorb
xchg
add
bound
jne
adc
mov
ds
cwtl
lds
inc
push
xchg
or
jmp
stc
mov
xchg
sarb
mov
mov
fadds
and
cmp
int
xchg
add
jb
das
sub
mov
stos
outsb
and
add
inc
sub
sahf
or
mov
jmp
idivl
sub
call
rol
and
sbb
push
popa
leave
adc
jge
call
ljmp
mov
sub
and
mov
daa
jg
mov
cmpsb
call
lds
jne
mov
jp
std
shlb
add
cwtl
repnz
xchg
iret
jnp
push
sahf
icebp
movsl
mov
and
pop
out
loope
cmp
idivb
mov
pusha
fsubrs
or
push
in
mov
dec
roll
sbb
adc
flds
jmp
dec
mov
lcall
pop
adc
ds
lea
cwtl
xlat
fidivs
movsb
pop
test
pop
aaa
ja
jnp
cltd
fwait
push
push
push
out
aam
or
ret
sub
jbe
dec
arpl
rcrb
mov
pop
inc
pop
cmc
fists
pop
mov
out
adc
rorl
cmp
mov
das
and
jnp
xchg
jno
pop
loope
sub
stos
xchg
pop
cmc
mov
cs
mov
addr16
xchg
das
pop
or
in
addb
ljmpw
xchg
and
and
mov
movsl
icebp
add
mov
sub
sbb
insb
xlat
mov
mov
cwtl
iret
and
xchg
push
incb
push
inc
enter
shll
lds
jnp
popa
push
push
mov
int3
je
cmc
mov
fbld
jae
inc
xor
leave
ss
jmp
out
repnz
insl
insl
in
jmp
bswap
add
xchg
stos
scas
cld
mov
call
loope
inc
push
int3
xchg
mov
jnp
fldenv
mov
push
shlb
stos
addb
out
xor
test
test
insb
mov
lea
mov
and
sti
ret
and
icebp
push
mov
jnp
int
cmp
es
jno
mov
adc
jmp
int3
mov
fiaddl
fcomps
cmp
and
sbb
pop
subb
fs
or
in
lahf
shr
loopne
sub
movsl
nop
and
pop
lods
imul
cmpsb
sub
jp
pop
sub
cmc
push
lahf
fcom
into
test
lock
adc
mov
mov
sub
adc
addb
hlt
int3
jno
jae
push
push
in
mov
lcall
mov
imul
js
mov
mov
or
xchg
jns
jb
xchg
add
xor
inc
loopne
ficompl
in
test
popl
jle
leave
cld
lods
adc
in
add
xlat
mov
inc
add
or
push
push
mov
and
sti
jmp
pop
and
out
jge
push
push
je
ret
adc
mov
jns
mov
pop
pop
sub
int3
or
mov
aas
lods
sub
popf
test
fidivrl
dec
gs
icebp
and
leave
cmp
repz
cmp
push
mov
in
or
mov
push
xchg
sbb
jnp
out
or
add
or
rcrb
clc
shl
ss
inc
dec
adc
push
cs
mov
xor
popf
or
or
push
mov
in
in
or
push
push
addr16
or
in
lret
in
xchg
test
inc
xchg
sahf
arpl
out
pop
dec
and
mov
sub
xchg
in
push
inc
in
cmp
mov
js
je
pop
movsl
cmp
and
in
mov
jmp
mov
iret
pop
faddp
pushf
out
jbe
or
loop
jp
sub
lock
pop
adc
mov
inc
int
mov
fsts
xlat
shlb
jp
mov
sub
fnstcw
sbb
cmp
arpl
sbb
add
popf
daa
adcl
sub
in
cmc
ret
cmp
pop
aad
into
xchg
and
and
fistl
fwait
dec
sbb
dec
stc
mov
leave
inc
in
fbstp
sar
pop
mov
jb
int
and
lock
and
jne
push
push
shl
mov
xor
cli
dec
mov
sub
adc
and
out
push
aas
inc
cmp
cltd
daa
icebp
mov
and
icebp
or
mov
push
je
xchg
mov
lcall
adc
push
loop
jl
les
inc
add
sti
xchg
or
test
into
mov
adc
and
je
out
sti
sbb
jne
pusha
mov
mov
mov
cmp
inc
bound
out
pop
cwtl
aas
lahf
sbb
xor
mov
in
fisubrs
lea
mov
mov
aad
mov
push
movsb
or
jno
icebp
mov
pop
cmp
lcall
aaa
ficoml
sbbb
in
psrlq
loope
or
mov
pop
icebp
insl
push
hlt
stos
mov
or
dec
mov
fdiv
xchg
xchg
mov
stos
xchg
add
scas
pop
add
xchg
aam
pop
cld
mov
mov
and
cs
mov
jb
xchg
outsb
add
test
mov
lods
and
xchg
push
movsl
shll
shrb
sbb
movsl
jb
enter
xor
cmp
mov
outsl
sbb
adc
aaa
aam
je
repnz
movsl
shrl
xchg
and
xchg
push
out
xor
stc
mov
push
add
loope
or
rorl
xchg
sbb
cmp
and
popf
sub
add
sub
iret
inc
sbb
call
fadd
stc
js
jg
gs
add
xor
hlt
sbb
xchg
pop
lods
aad
xchg
adc
jns
stc
dec
ror
cmpsl
jge
loop
or
jg
lahf
fsub
pop
jb
cmp
dec
lea
fwait
xchg
sub
sbb
jl
sbb
mov
stos
sbb
dec
fmuls
jle
rcr
and
pop
inc
mov
adc
aam
push
push
dec
mov
test
cmp
pop
subb
popf
push
iret
lea
std
adc
je
dec
add
or
scas
push
jo
fdivr
leave
adc
sub
stos
inc
orl
loopne
les
hlt
jp
idiv
mov
mov
sbb
jge
cltd
outsl
xor
push
xor
mov
push
out
movsl
loopne
adc
aam
es
and
adc
int
push
das
mov
lcall
mov
popaw
fdivr
cmpsb
cs
jo
xchg
xchg
scas
mov
xchg
in
dec
mov
out
dec
and
loopne
adcl
or
sti
sbb
push
pop
add
add
icebp
cmp
jno
sti
das
sbbb
sbb
mov
sbb
sub
jle
subb
ja
aam
sarl
pushf
adc
shlb
faddl
add
inc
cmpsl
gs
or
add
or
push
inc
vmread
js
in
sub
test
fnstsw
or
ljmp
lea
daa
ja
popf
sbb
mov
icebp
or
stmxcsr
push
insb
fcmovb
mov
out
pop
inc
movsb
inc
jae
outsb
sub
out
inc
call
imul
call
cwtl
es
xchg
int
loop
daa
inc
sub
scas
outsb
ret
mov
push
inc
mov
dec
dec
inc
out
cli
push
out
cmp
mov
or
ret
add
sarb
lock
hlt
cmc
lea
iret
pushl
xor
mov
repnz
jae
leave
xchg
std
or
faddl
aaa
mov
sbb
or
aad
imul
les
xchg
add
push
test
daa
push
xor
inc
arpl
fcomi
shlb
flds
in
pop
and
or
push
das
inc
inc
and
jnp
sbb
loopne
loop
test
mov
sub
in
hlt
mov
pop
and
ja
mov
shll
incb
rcl
xor
mov
mov
cmp
mov
fstps
jo
and
andl
pop
stc
out
add
test
cmpsl
mov
repz
test
push
push
into
mov
sahf
add
fisttpl
lahf
sbb
xchg
sarb
dec
xchg
cmp
mov
cmpsb
add
xchg
cmc
pop
mov
loope
shr
push
test
cmpb
cmp
in
aas
inc
lahf
neg
in
or
fisubl
aam
outsl
xor
or
xchg
arpl
push
cmc
pop
iret
shrl
das
pop
adc
mov
cmp
and
jmp
cmp
push
std
mov
cs
mov
jne
pop
jae
mov
mov
je
and
xor
xor
push
xor
xchg
jmp
mov
push
int3
cmpsl
lds
dec
xor
jecxz
xor
sub
imul
inc
dec
fwait
inc
pop
mov
clc
lods
lods
dec
dec
loope
ds
stc
pusha
lret
scas
or
jbe
adc
sbb
xlat
lds
lea
mov
pushf
push
adc
stos
hlt
inc
enter
push
imull
xor
movsl
fcoml
out
rorb
cmpsl
inc
xlat
jno
movsb
icebp
inc
mov
loope
xor
ja
pop
push
or
sbb
push
jae
dec
cmpsl
cmc
pop
adc
out
adc
xchg
or
mov
je
mov
dec
lds
dec
std
shll
mov
pushf
jbe
inc
loope
sub
xor
cmp
outsb
je
mov
sarb
rorl
cmpsb
aas
out
jo
insb
out
mov
icebp
push
mov
mov
loope
adc
push
add
pop
dec
inc
andl
fs
sti
cld
jecxz
cmp
insb
pop
cmpsl
sub
loopne
shl
push
inc
nop
lret
test
repz
add
out
pushf
ja
xor
cmpb
mov
out
push
testl
shlb
lahf
stos
xchg
pop
push
mov
or
lret
xchg
pusha
scas
mov
push
js
lock
jae
cmpsb
jg
push
push
test
jge
xchg
sub
test
lock
lock
ret
jne
lods
repz
jae
push
lahf
push
dec
das
movsb
loop
daa
and
and
lret
push
pop
jne
test
dec
sub
js
lods
xor
mov
rcl
sbb
mov
cmp
sbb
hlt
fdivrs
mov
loope
xlat
push
push
fdivs
dec
push
xor
or
xor
or
cmp
add
mov
inc
jge
ljmp
jg
mov
fnstenv
fwait
cmp
es
add
cmp
push
arpl
add
mov
arpl
sar
and
lcall
jb
mov
std
std
push
arpl
xchg
dec
cmp
fidivrs
rol
js
rolb
jne
int3
pop
add
or
mov
shll
xchg
jge
ljmp
jle
cmp
repnz
por
xor
divb
push
xor
shrl
inc
mov
call
ret
xchg
jnp
mov
popa
in
inc
enter
cmc
loopne
adc
dec
stc
sahf
pop
pushf
mov
jecxz
add
test
int3
add
jae
iret
shlb
xchg
jbe
jno
mov
xor
xchg
scas
nop
xchg
lcall
xchg
mov
andb
adcb
pushf
dec
ss
test
push
cltd
das
int
cmp
xchg
popf
cmp
xor
lahf
add
pop
int3
pop
mov
lea
fsubrl
jle
sbb
pop
add
inc
test
shlb
and
fistps
mov
cmp
sub
js
iret
ret
into
mov
test
ficomps
rorl
cmp
jno
xchg
inc
jecxz
shll
sub
mov
fisubs
bound
cmpsl
mov
mov
dec
int3
cmp
sbb
neg
mov
sahf
mov
insl
jge
je
add
cmpsl
insb
das
or
cmpb
pop
imul
andb
aad
mov
ds
xorb
out
incl
inc
add
push
lahf
pop
les
push
and
sbb
xor
or
fs
sub
jne
xor
mov
add
ljmp
aas
and
pop
fisubs
jne
inc
clc
and
jp
mov
mov
inc
add
scas
mov
shll
dec
pop
xchg
lret
cmp
roll
lods
cmpsb
out
lock
cwtl
cmp
outsb
sbbl
rcrb
sub
decl
test
mov
je
sbb
repz
pop
jge
mov
inc
dec
hlt
mov
fidivl
jge
and
xchg
int
add
test
daa
mov
aad
sbb
dec
cmp
xchg
testb
push
movsb
das
scas
mov
dec
jnp
push
jae
cmp
xor
orl
add
dec
xorl
mov
mov
test
in
rcrb
and
xchg
jmp
mov
stc
in
pop
cwtl
data16
sti
jmp
fs
mov
mov
ret
in
imul
adc
fs
lahf
push
stc
jnp
mov
hlt
loope
imul
in
insl
xchg
mov
or
outsl
cmp
push
inc
mov
stos
cmp
cmp
in
icebp
out
inc
mov
jge
sbb
sbb
fstpl
repz
mov
cmp
dec
add
pop
sbb
mov
mov
cwtl
dec
dec
test
ljmp
mov
xchg
cmc
add
cs
outsb
popf
sbb
mov
mov
fcoms
cmp
adc
and
les
out
jg
lea
dec
addr16
inc
lahf
inc
loop
or
xchg
int3
fwait
subps
xchg
add
and
pop
jmp
cmp
cli
mov
cmp
inc
jnp
fisubrl
sahf
sub
xlat
and
xchg
and
push
push
in
in
loope
xlat
mov
add
xchg
and
pop
push
lock
into
ret
and
jg
push
or
pushf
mov
out
pusha
fldenv
jge
push
add
inc
push
mov
aam
fadds
mov
out
and
aam
adc
mov
mov
cmp
or
jl
mov
daa
cli
shr
pop
xchg
pop
fmul
js
sbb
insb
xor
push
loopne
dec
and
mov
mov
rclb
or
dec
fwait
xlat
jae
pop
fmull
mov
cmpsb
fidivs
data16
andl
pop
cmp
adc
and
scas
sub
xchg
xor
push
sub
inc
es
sub
flds
aas
mov
inc
cmpsb
and
ja
test
pop
mov
int3
test
js,pn
das
and
popa
cs
pop
pop
sub
mov
dec
adc
lahf
and
dec
sub
aas
lcall
push
std
push
shlb
in
sbb
cmp
lcall
xor
enter
mov
or
fbld
stos
ljmp
and
push
mov
inc
std
ficompl
in
cmp
cmp
xchg
in
inc
xchg
push
pop
mov
mov
mov
xlat
in
sbb
out
stos
rcl
push
cmp
inc
or
testl
dec
push
aad
ljmp
sbb
dec
dec
faddl
xchg
add
cmp
ret
loopne
dec
mov
jno
mov
adc
fistps
add
push
jecxz
mov
cmpsb
scas
cmp
mov
mov
mov
xor
shlb
inc
sub
sti
xor
jne
outsl
jg,pt
inc
mov
xor
test
add
and
mov
jle
js
jmp
push
ja
xchg
ret
cli
rolb
arpl
xlat
das
push
sub
sub
in
shl
cld
into
das
xchg
popa
orl
xchg
arpl
mov
lahf
mov
incl
cmpsb
ljmp
fcmovnu
push
pop
push
sbb
mov
jo
inc
fsubs
xchg
pop
push
sbb
sti
fnsave
jns
mov
dec
in
dec
out
and
xor
fadd
jmp
movsb
ror
bound
inc
pop
cmpl
mov
push
lret
fsubrs
rep
sub
test
mov
rorb
inc
repnz
hlt
pop
shlb
xor
or
sbb
sub
lods
dec
add
cmp
aam
mov
jle
sub
add
in
mov
dec
pop
je
in
lea
aaa
xor
int
pop
cmpsl
shrl
cmp
add
and
push
hlt
rorl
cld
movsl
xchg
nop
pusha
xchg
loope
popa
mov
rcrl
push
jmp
push
dec
dec
ljmp
xchg
or
mov
inc
fmull
xchg
cmp
ljmp
test
je
je
int3
inc
pop
jle
shll
std
sbb
loope
jg
add
inc
sub
xchg
pop
mov
mov
push
add
scas
dec
mov
shrl
mov
call
cli
and
adcl
mov
test
icebp
test
imul
dec
test
fs
sub
mov
movsb
dec
pop
pop
shrb
int3
subb
adc
jle
pop
dec
fcmovnbe
mov
addr16
shl
imul
scas
jb
pop
fistpll
xchg
out
add
mov
sbb
lock
lahf
lahf
bound
arpl
and
inc
mov
sbb
divl
int3
in
mov
rolb
xchg
scas
and
push
sbb
mov
xor
scas
loop
popa
in
or
scas
xor
push
dec
pop
stos
dec
push
mov
sbb
add
adc
pop
add
push
mov
adc
push
adcl
test
gs
pop
sub
mov
popfw
ret
mov
aam
jns
push
xchg
dec
push
xchg
aam
xchg
pop
adc
jnp
repz
ficompl
mov
mov
testb
imul
imul
lcall
fwait
fwait
or
test
xchg
std
in
roll
cwtl
rcrl
addr16
xchg
cmpsb
mov
ja
nop
sti
pop
mov
mov
or
lods
mov
mov
fcmovbe
cli
xlat
mov
push
lea
push
outsb
nop
imul
int3
out
xchg
dec
subb
test
or
inc
push
pop
arpl
sbb
jg
stos
clc
jmp
mov
jmp
cld
sbb
dec
jp
jnp
popa
jg
scas
inc
cmp
xchg
and
xchg
add
sahf
pusha
adc
ds
js
or
call
push
jg
inc
stos
fists
mov
mov
leave
imul
cmc
mov
js
fcmovnbe
mov
sbb
cmpsb
dec
push
or
push
xchg
lds
outsb
pop
and
in
adc
or
dec
leave
clc
nop
loop
xchg
out
cmpsl
mov
insb
bnd
lods
cmc
xlat
cs
and
jbe
cmp
xor
xchg
clc
scas
aam
call
push
lret
adc
sub
add
insl
mov
orl
insb
std
test
call
or
movsl
mov
cmpsb
out
or
mov
and
call
xchg
sub
xor
subb
mov
loope
sub
jo
mov
ds
adc
dec
orb
rcr
bound
mov
mov
in
fstps
fnstsw
cmp
rcrl
jns
outsb
repz
sbb
push
imul
adc
dec
xlat
jle
sub
adc
mov
jp
inc
xor
arpl
jbe
lcall
test
dec
sub
dec
xlat
mov
cltd
pop
push
cmp
fistps
adc
adc
mov
push
outsb
or
stc
pop
mov
nop
adc
pop
xchg
popa
or
cs
adc
mov
or
push
cwtl
mov
mov
mov
and
and
dec
aad
dec
ss
or
adc
mov
das
cmpsb
pop
pop
mov
sub
add
mov
ljmp
pop
mov
popa
adc
addr16
xchg
jno
jge
and
ja
cmp
add
imul
cmp
inc
mov
mov
jne
push
mov
adc
or
adc
jb
jp
stos
pop
xor
push
dec
cmpsl
or
mov
or
jg
pop
dec
and
fidivrl
mov
and
mov
adc
mov
sbb
mov
cwtl
aas
push
stos
out
addl
test
fmull
mov
es
cltd
lds
enter
in
adc
popf
add
lock
sbb
and
inc
mov
daa
or
xor
xchg
mov
push
ja
add
loop
movq
lcall
stc
add
dec
mov
icebp
sub
sub
test
and
nop
mov
dec
mov
pop
and
inc
aaa
call
or
lds
sub
int
push
in
push
outsb
gs
iret
and
dec
lahf
jecxz
xchg
sarb
addb
int
push
sub
mov
pop
or
das
cmc
mov
cmc
and
xor
sarb
imul
push
push
dec
fnstenv
cmc
call
testb
sub
stos
and
fadds
push
xor
sbb
xchg
or
jbe
sub
cmc
mov
xor
mov
or
pop
pop
or
mov
lahf
sub
ja
addr16
xchg
fsts
ss
out
in
or
lret
jnp
adc
out
mov
xor
daa
gs
clc
fldl
or
cli
call
sbb
arpl
std
mov
in
int
rcpps
scas
pop
ljmp
das
imul
mov
shr
ljmp
sbb
push
push
addb
xchg
fs
mov
jle
cld
mov
push
shl
into
gs
in
and
xchg
jecxz
sarb
leave
mov
data16
into
push
test
rcrl
cmp
rcl
jg
or
test
fmull
sahf
jl
pop
cld
xor
lahf
lods
mov
out
addb
dec
pop
jg
call
or
aad
or
aaa
movsl
pop
mov
xor
scas
pop
mov
jle
das
pop
fistpll
out
loopne
fsub
inc
adc
repz
insb
movsl
dec
cmp
aam
mov
mov
push
in
mov
lock
dec
or
dec
xor
inc
cmp
ljmp
xchg
cmp
popf
and
mov
dec
lods
cmp
sub
jmp
cmpsl
inc
inc
inc
sahf
adcl
push
xor
filds
aas
test
push
call
fwait
mov
cs
jp
arpl
cmp
loope
lock
pop
insb
into
add
mov
clc
xchg
dec
es
inc
sbb
pop
fdivrs
xor
push
mov
sbb
add
mov
dec
mov
test
ret
addl
daa
push
out
cmp
cmp
out
subb
std
test
orl
pop
or
mov
push
cmp
push
cmpsb
sub
in
popl
push
mov
enter
stos
ss
xchg
aas
rol
or
lcall
dec
sbb
arpl
xchg
imul
pop
or
add
stos
mov
popa
addr16
cli
push
lahf
sub
fcmovnu
sbb
test
mov
dec
mov
sbb
dec
outsl
mov
sbb
scas
jmp
adc
mov
ljmp
mov
xor
dec
xor
mov
add
int
and
adc
arpl
and
arpl
adc
or
test
int3
aaa
iret
popa
pop
iret
xor
invd
jb
cmpsb
cmp
testl
out
dec
add
iret
pop
xchg
shr
add
xor
mov
push
cmp
adc
xlat
enter
scas
insl
xchg
pop
loopne
or
iret
inc
mov
fwait
mov
sub
xchg
and
or
mov
fs
sarb
mov
push
dec
pop
dec
push
lock
jae
clc
bound
sub
dec
pop
xchg
in
enter
or
fwait
movsl
and
xor
sti
into
mov
pop
sahf
sahf
adc
push
in
xor
cmpsl
loope
mov
xchg
cmc
lahf
clc
mov
imul
sahf
loopne
sub
cwtl
das
js
loop
pop
dec
xor
test
in
and
imul
push
push
cmp
test
xor
aam
outsb
filds
pop
out
jne
arpl
stos
popf
mov
inc
inc
stos
cmp
mov
adc
stos
test
out
clc
rcl
mov
mov
mov
cmp
pop
cmpb
xor
arpl
inc
cmp
adcb
int3
mov
sbb
pop
clc
or
test
xor
adc
add
data16
sub
test
lods
mov
xchg
dec
sbbl
and
push
aad
or
push
pushf
jnp
inc
dec
jp
add
add
jecxz
fdiv
in
ss
in
and
testl
pop
sbb
int3
fnstcw
incl
xchg
and
shll
aas
xchg
stos
dec
push
sbb
jp
into
iret
ret
divb
add
mov
lock
pop
xor
xchg
jecxz
sub
push
out
mov
in
dec
xchg
test
jl
incl
cmp
inc
mov
lret
stc
decb
js
xlat
cmp
aam
repnz
dec
icebp
dec
pushf
push
in
nop
inc
sub
mov
aad
in
fwait
scas
xor
mov
xchg
filds
lock
int
adc
in
xor
loopne
mov
loope
ret
and
mov
ret
mov
negb
cmpl
or
adc
ss
mov
popa
stc
mov
dec
das
adc
xor
imul
or
dec
mov
fdivrs
add
xlat
jmp
popf
pop
dec
mov
mov
sbb
hlt
cld
mov
pusha
das
inc
js
pop
xchg
jge
jnp
repz
mov
push
jmp
inc
push
movsl
sub
inc
add
idivb
aas
adc
add
cli
push
pop
pusha
loop
add
xchg
xchg
push
push
add
jno
pop
inc
or
push
or
sub
inc
repnz
mov
fwait
inc
xchg
sub
sahf
sti
sub
aaa
jge
mov
cmp
in
lods
cmc
xor
adcl
jns
xchg
xor
or
xchg
cmp
xor
push
and
jns
xlat
stc
inc
pmuludq
inc
movsb
push
repz
cmpl
call
jecxz
or
cmp
sub
mov
popa
and
into
popa
and
mov
add
and
jl
pop
jae
inc
loopne
out
mov
or
into
cmpsb
arpl
aas
mov
mov
fistps
hlt
mov
das
dec
dec
movsl
es
mov
sbb
xchg
push
mov
iret
jb
inc
sub
dec
jb
ret
loope
xor
add
sahf
out
push
push
addr16
cli
mov
or
sbb
push
arpl
mov
mov
push
push
xor
sub
xchg
scas
jecxz
dec
push
test
ljmp
cmp
or
out
fnsave
lret
lret
loopne
pop
adcl
or
xchg
inc
mov
repnz
dec
jbe
bnd
mov
leave
cmp
orb
mov
mov
xchg
hlt
mov
jb
ficoml
iret
push
mov
mov
adc
mov
sub
iret
lods
pop
cmpsl
lret
les
popa
test
fildll
inc
gs
cli
das
cld
push
out
enter
ss
or
test
out
xchg
test
and
addr16
idivb
arpl
in
addr16
and
pop
jle
mov
push
jo
pop
js
test
stos
pop
sbb
nop
mov
add
cmpsb
call
or
stos
push
orl
shlb
dec
mov
loop
stos
and
sub
pop
cmp
jno
mov
mov
inc
aaa
add
cmp
cwtl
mov
js
mov
jnp
loop
push
xchg
pop
mov
or
and
adc
leave
fildl
lret
lret
das
sub
pop
mov
mov
push
imul
mov
lea
xor
sub
mov
ds
lcall
and
out
leave
lret
pop
pushf
jb
pop
inc
shlb
xor
and
inc
cmpsb
jo
push
lods
xchg
pop
mov
sub
or
decl
push
out
dec
jge
mov
add
imul
sbb
pop
mov
mov
mov
stc
cmp
movsl
cmpsl
sub
imul
in
enter
bnd
fs
jnp
out
stc
and
sbb
in
out
sub
insl
sti
fcomip
movsb
popa
push
pop
pusha
or
mov
test
pushf
xchg
cmc
outsb
stos
inc
and
inc
imul
pop
cmp
ja
cmp
mov
div
lock
xor
out
aam
test
sbb
mov
pushf
pop
mov
push
jg
jmp
push
add
jns
in
repnz
mov
cmpb
fmuls
xor
in
inc
movb
jbe
push
sbb
inc
adc
push
icebp
push
xchg
xchg
mov
fistpll
fisttpl
fdiv
out
adcl
xor
dec
sarb
in
cmpsl
push
xor
pop
rorl
xor
rclb
xchg
pop
mov
xor
rcrb
mov
cmp
sub
ffreep
loope
std
jno
mov
inc
sahf
iret
lahf
arpl
jge
aaa
mov
cmpsb
lock
hlt
in
fcomp
jb
loopne
lret
lret
sub
fs
setle
jb
cltd
mov
fimull
ficompl
fisttpll
in
stos
inc
dec
scas
sarb
dec
pusha
cli
sbb
or
in
inc
in
mov
dec
int3
xchg
sbb
or
cmp
mov
test
xchg
movsl
mov
adc
or
push
adc
jno
and
cs
inc
lret
rolb
push
pop
add
es
and
adc
sbb
sub
or
mov
cmp
mov
test
scas
idivl
add
ja
outsl
inc
lods
stc
dec
push
das
insb
push
jp
sub
fstpl
popf
mov
into
mov
cmp
adc
add
ja
push
lret
add
mov
insl
inc
pop
cmpsb
je
mov
mov
out
and
aas
xlat
sub
xchg
test
push
lea
loope
loope
mov
mov
add
or
sbb
cmpb
cmp
and
lcall
adc
cmp
or
out
dec
cmp
fdivl
inc
int3
cmp
roll
shlb
sub
js
jae
movsb
lcall
shlb
inc
jg
pushf
cmp
enter
dec
std
fnstenv
or
cmc
stos
pop
pop
inc
sti
pushf
mov
dec
lcall
and
out
mov
jmp
in
pop
sub
ljmp
imul
mov
out
inc
rep
fldt
jg
xchg
add
adc
loopne
ffree
adc
cmp
mov
loopne
adc
sbb
cld
xor
and
lods
mov
cmp
ss
insl
and
push
hlt
stc
fldenv
sub
mov
cmp
repz
pusha
xchg
add
popa
adc
jae
push
fs
scas
push
sub
testb
mov
dec
jb
mov
xor
adc
mov
pop
adc
inc
jo
dec
test
cs
lret
push
pop
test
aad
or
jno
clc
jmp
xlat
in
lea
sahf
js
jle
call
aad
and
test
lcall
je
fiadds
outsb
int3
sbb
xchg
pop
testb
ret
maskmovq
imull
xchg
ret
pushf
cmpsl
stc
mov
fildll
xchg
inc
sub
lcall
mov
imul
add
jp
test
xchg
mov
cmp
inc
jecxz
sub
inc
lods
adc
jmp
sub
outsb
push
nop
int3
cld
adcb
xchg
sub
xor
sub
xchg
push
xchg
pop
divb
push
repz
popa
xchg
pop
pop
jo
insb
or
test
fcompl
adc
arpl
inc
xchg
test
in
mov
mov
das
mov
fdivrs
int
insl
leave
jp
test
push
jmp
mov
scas
movsl
inc
pop
arpl
adc
jp
int
push
jl
dec
and
jg
pop
arpl
out
and
aam
inc
sbb
and
movsl
js
scas
insb
dec
pop
push
inc
jmp
ds
cmp
sbb
pop
jp
lret
cli
pop
test
adc
movsb
adc
pop
dec
mov
repz
dec
lock
adc
cmp
xchg
xchg
jecxz
sahf
les
fisttps
sti
xchg
fisttps
loopne
or
sti
mov
bswap
notl
jg
mov
shl
ja
xor
xchg
fs
cmpsb
jbe
test
xor
fwait
out
push
and
push
addl
jmp
lods
dec
push
pusha
and
seto
cmc
and
push
add
or
rclb
mov
cmc
repz
jmp
jnp
or
nop
js
pop
and
pop
mov
mov
pop
sbb
sbb
mov
xchg
lods
push
push
lds
ret
aam
das
jmp
xchg
pop
test
push
rcll
es
imul
ret
ficompl
xchg
bound
out
in
xor
push
out
mov
adc
fwait
out
xchg
ds
rolb
lods
adc
stc
inc
fwait
sbb
loop
mov
das
or
dec
lea
push
sub
lea
inc
mov
or
fisubrs
adc
inc
add
lods
jno
loope
std
iret
es
ret
pop
sbb
add
mov
jle
pop
popa
mov
cmpsl
insl
insb
jmp
lea
pop
or
int3
es
arpl
inc
mov
dec
out
mov
xchg
ja
and
xchg
inc
xchg
mov
lahf
jge
and
mov
sub
pop
add
mov
or
loopne
or
test
mov
ja
push
sahf
leave
mov
add
arpl
andb
inc
or
and
xchg
jno
add
fwait
dec
and
mov
lret
sbb
inc
call
cwtl
and
aaa
cwtl
mov
sub
jns
mov
daa
pop
mov
mov
pop
lret
pusha
notb
cmp
ljmp
push
nop
aad
add
ret
addr16
pop
stc
mov
arpl
addr16
outsb
xchg
cltd
clc
dec
push
inc
cli
adc
in
push
mov
mov
mov
or
pop
les
jge
sarl
fisttps
xchg
andl
jmp
sub
dec
sbb
xchg
jg
xor
out
les
daa
and
andb
cmp
stos
fistpl
pop
inc
movsb
int3
or
xor
mov
loopne
jnp
fists
xlat
mov
aam
sti
ret
jmp
das
pop
sbb
dec
xor
lods
stc
fsubl
jnp
xchg
movsl
mov
or
jmp
or
dec
out
xchg
jns
mov
clc
cmp
pushf
js
or
movsl
fs
loope
mov
mull
add
in
dec
push
js
adc
mov
imul
fsub
jl
stos
bound
pop
sbb
pop
cltd
pop
shrb
insb
std
dec
sbb
cltd
cld
sub
xor
dec
fucomi
flds
jb
js
push
insl
mov
or
sbb
inc
outsb
sbb
push
sahf
push
xchg
test
xchg
in
pop
test
xor
test
and
xor
bound
mov
call
xor
and
cmc
xchg
out
mov
cmpsb
in
and
sub
cs
sub
fstps
mov
imul
sub
and
push
mov
call
repz
fnstcw
scas
bound
movsb
jns
shlb
push
cmp
cmp
inc
mov
xchg
sub
js
repz
ret
insl
sub
jg
in
pop
or
cwtl
cmp
jl
fistpl
dec
insl
xchg
jne
mov
cli
jns
pop
jl
add
mov
xor
stc
jecxz
ret
pop
lods
ja
in
rorl
jl
push
adc
and
ret
inc
mov
shrl
sarb
sub
xchg
sbb
mov
jno
pop
sbb
movsb
iret
mov
loope
in
mov
xchg
xor
out
icebp
push
add
shufps
push
scas
mov
xorb
pop
cwtl
mov
mov
ret
pop
bnd
adc
mov
fistps
mov
mov
icebp
aaa
inc
shl
pop
dec
lock
push
cmp
pop
clc
mov
cmp
je
stos
and
mov
mov
lcall
jmp
lods
rcll
fiadds
dec
push
and
mov
push
scas
adcl
lods
xchg
push
enter
inc
mov
lret
sbb
xorb
ja
inc
popa
cwtl
mov
push
push
and
cmpl
dec
sbb
scas
gs
test
lock
lds
lahf
inc
push
push
mov
mov
into
mov
sbb
fisttps
loopne
fwait
rcll
and
repz
lock
fstpl
mov
or
mov
jns
jge
pop
adc
jb
test
xchg
and
in
push
pop
inc
ljmp
dec
xor
adc
sub
cmc
cwtl
xlat
inc
xor
and
aam
sbb
jae
jb
pushf
inc
add
js
ror
mov
mov
shll
jl
mov
std
iret
push
inc
jecxz
cli
xchg
sub
out
ljmp
inc
dec
push
iret
pop
and
andb
lcall
pop
rcrb
mov
mov
ror
jle
lea
int3
mov
inc
mov
daa
ja
mov
add
sahf
inc
movl
ljmp
inc
stos
xchg
adcb
cmp
or
mov
test
jb
in
sarb
add
mov
xor
sbb
fsub
ja
sbb
pop
fbstp
pmaddwd
gs
mov
js
dec
pop
adc
fdivs
mov
lock
stc
ja
test
and
and
dec
fistl
inc
lcall
adc
and
fisubl
dec
push
dec
xchg
or
push
movsl
aaa
test
jns
leave
cmp
and
mov
pop
sarl
add
aas
sub
push
imul
scas
sbb
dec
adc
out
xchg
dec
cmp
xchg
fs
mov
fidivl
in
xchg
mov
xchg
mov
je
lcall
xor
and
mulb
push
add
sbb
xor
das
xor
loope
or
xor
jle
cmp
fdivr
xor
mov
mov
cmp
scas
icebp
loop
jnp
and
xchg
push
mov
out
push
sub
fistl
pop
pop
incb
in
inc
cltd
sbb
in
mov
shr
inc
arpl
outsb
lods
bound
loopne
rcrl
in
sub
sbb
dec
gs
leave
pop
and
mov
xor
sub
xor
push
js
and
test
jns
ret
sub
fisttps
and
xchg
jb
sbb
dec
sub
or
mov
imul
pushf
jnp
inc
les
adc
or
arpl
and
loope
cmpsb
mov
ljmp
out
or
pop
cmp
adc
xor
xchg
dec
cmc
imul
cmpsl
in
or
mov
loopne
inc
call
adcl
cli
inc
in
push
shlb
mov
orb
or
dec
cmp
lahf
pop
push
fists
xchg
adc
pop
iret
incb
pop
movsb
add
popf
pop
xchg
int
dec
imul
or
ret
cmp
bound
imulb
test
ret
rorl
lods
les
je
xor
outsb
aad
xchg
inc
xchg
cmp
push
popa
jno
test
lods
std
in
fwait
cmp
cwtl
mov
pop
push
cmpsl
xchg
cld
hlt
into
lds
inc
shll
stos
cs
inc
rcll
out
jne
mov
filds
shl
loope
jmp
sbb
repz
cmp
push
pop
outsb
jo
lock
subb
sub
fwait
outsb
dec
and
xor
dec
or
rorb
mov
clc
pop
out
add
xchg
mov
pop
mov
lods
pushl
xchg
pop
xchg
mov
and
adc
aam
adc
jno
test
push
xor
adc
fldt
pop
cs
test
in
xorl
add
fidivs
loopne
lds
mov
adc
lods
jl
insb
test
mov
push
out
adc
andb
aaa
shl
add
dec
xchg
ret
aam
sbb
hlt
gs
out
addl
adc
fdivrl
es
mov
xchg
stos
or
movsb
and
pop
lret
xchg
addr16
int
fisubrs
add
out
sbb
shr
adc
ret
push
inc
mov
testl
test
fstpt
sub
cltd
subb
inc
ds
jnp
push
inc
sbb
pop
subb
or
faddp
and
mov
inc
mov
sahf
lods
test
push
dec
loop
leave
or
loop
pop
jge,pn
mov
pop
loopne
nop
lret
xchg
lcall
add
or
add
inc
inc
adc
cmp
and
in
fldenv
push
sub
dec
push
aad
pop
test
clc
lods
sub
adc
adc
rorb
sti
jo
lcall
sbb
fistpll
dec
or
lds
mov
pop
sti
ret
int3
fdivrs
sub
xorb
imul
clc
repz
and
jle
iret
mov
aam
into
jbe
and
stc
mov
loopne
jg
dec
in
sbb
add
mov
std
cmp
idivl
fwait
pop
dec
fiadds
dec
aaa
and
fcoml
and
int
mov
cmp
sbb
push
negb
mov
mov
or
cltd
cwtl
lret
xchg
outsb
ret
cli
inc
pop
loop
repnz
add
out
dec
jle
out
mov
fsts
xor
add
add
addr16
cmp
adc
sbb
out
mov
jmp
dec
push
aaa
dec
and
xor
fbstp
xchg
mov
fsubrl
jp
pop
xchg
in
mov
xor
addl
adc
rcr
dec
in
nop
fsub
call
fstpl
and
mov
mov
pop
out
add
dec
mov
xchg
lahf
test
dec
xchg
frstor
sbb
cmp
repz
test
xor
test
call
mov
shll
inc
pusha
outsl
xchg
andl
push
lahf
pop
dec
mov
jmp
fisubl
fstl
add
mov
inc
inc
divb
outsl
dec
cmpsl
pushf
ja
test
daa
push
mov
mov
xor
outsb
xchg
pop
ja
addr16
jae
addb
xchg
in
scas
mov
jno
cmp
stos
dec
inc
jbe
push
cmp
pop
les
scas
clc
mov
test
mov
push
lret
inc
jbe
mov
mov
mov
fidivl
jl
sub
arpl
fwait
out
imul
popf
jmp
sbb
out
inc
loope
jo
lods
fiadds
inc
in
cmpsl
adc
sbb
push
jl
push
adc
push
mov
rcl
clc
cmpsb
or
clc
pusha
jbe
test
pop
outsl
lret
xchg
add
mov
movl
int
inc
push
mov
jo
jno
dec
dec
cmpsb
aas
dec
sub
sbb
push
pop
pop
fcomip
push
add
repnz
xchg
cmp
sbb
ret
mov
pop
inc
inc
aas
cmpsb
cmp
sbb
lcall
loop
push
lods
stc
mov
in
ljmp
popa
ljmp
cmpsl
outsl
stos
adc
push
push
das
xor
mov
in
insl
sar
lock
sbb
pop
repnz
clc
or
lahf
test
ja,pt
enter
movsb
insb
std
dec
cwtl
insb
es
lds
scas
push
insb
imul
pop
ds
jecxz
scas
pop
loope
aas
mul
pop
sub
mov
call
cmp
popf
arpl
mov
mov
mov
cwtl
mov
cmp
cmp
aam
jbe
xor
std
lret
cmp
stos
jo
daa
pop
fxch
in
and
arpl
xlat
inc
mov
and
add
fwait
mov
pop
mov
aaa
sbb
mov
adc
repnz
ret
lods
popa
dec
mov
mov
and
bound
sub
jp
push
outsb
sbb
jl
inc
xchg
add
imul
in
xor
inc
push
sub
and
outsb
mov
push
enter
add
adc
cmp
ds
aas
cmp
out
dec
movsb
mov
es
popf
mov
add
icebp
adc
mov
lea
rorl
outsb
sbb
or
mov
xchg
and
pop
cmp
or
mov
sub
mov
insl
add
insl
cmp
movsb
pop
pop
push
cltd
sub
ret
enter
xchg
jb
aaa
jns
adc
adc
inc
iret
cmc
sbb
in
cmpsl
sbb
and
xor
mov
mov
aaa
repnz
xlat
mov
push
insl
mov
pop
mov
out
xchg
mov
mov
push
jge
and
xchg
leave
sbb
pop
pop
idivb
jnp
rcrb
pop
cmp
inc
inc
inc
test
imul
add
mov
loop
lds
in
shlb
fstpl
repz
mov
pop
inc
sahf
mov
xor
inc
or
cmp
in
mov
enter
mov
inc
dec
push
lea
mov
rcrl
pop
mov
xlat
in
daa
xor
adc
call
xor
pusha
loopne
pusha
aaa
or
add
add
or
pop
xor
mov
push
cmp
imul
push
arpl
xor
jg
cmpsl
test
fldenv
jmp
fcoms
xor
out
pop
push
out
jmp
inc
aas
arpl
out
adc
rolb
je
imul
lods
fadd
test
je
push
aad
scas
ret
and
fwait
pop
inc
or
sbb
in
cmpsb
fcomps
mov
negb
movsb
xor
jle
sub
movsb
scas
pop
xorl
jecxz
push
mov
fs
pop
mov
mov
jnp
push
adc
or
mov
dec
sbb
push
add
test
pop
in
lret
or
cmp
insb
js
test
inc
cmpsl
jecxz
call
loop
pop
mov
sub
pop
rcll
and
push
movb
test
fsubrs
xchg
scas
jne
or
outsb
rorl
lock
xchg
pop
mov
pop
mov
xor
xchg
iret
pop
je
int3
cmpl
xor
fs
scas
dec
je
xchg
mov
xchg
sub
lret
sbb
clc
hlt
sub
ret
in
je
sahf
aad
das
fildl
insb
je
out
sbb
shrb
pop
sub
mov
ljmp
ja
mov
icebp
xchg
lcall
cmp
and
stc
jae,pn
or
movsb
mov
mov
ret
popf
mov
mov
mov
cld
or
lea
and
stc
ja
in
test
test
push
test
xchg
and
jnp
inc
fsubl
stc
loopne
sar
sahf
jmp
scas
sbbb
xor
neg
mov
xchg
pop
sti
in
inc
pop
mov
into
decb
jmp
pop
movsb
jb
addb
mov
dec
incb
gs
leave
mov
adc
cmp
sbb
out
jmp
add
adc
jnp
lock
lcall
cmp
mov
mov
imul
jle
pop
sbb
xor
fistl
and
arpl
iret
repnz
sub
insb
or
sarb
shlb
pop
xchg
subl
sub
mov
xchg
add
inc
testb
push
cltd
xlat
push
jecxz
gs
aaa
es
or
js
orb
xchg
fdivs
pop
stos
sub
xchg
add
leave
pop
xor
movsl
test
test
ss
iret
inc
cmpsl
outsl
sub
sbb
nop
xchg
frstor
push
jno
push
xchg
loopne
popf
xchg
mov
int3
jbe
push
inc
or
in
ret
rorl
xchg
adc
lock
addr16
imul
push
adc
xchg
pop
notl
xchg
push
jae
xor
pop
loope
test
in
ret
push
loop
loope
or
jbe
iret
mov
cmp
pop
mov
into
mov
fcomi
js
test
or
dec
and
jno
dec
jle
out
push
fucom
aam
test
aaa
in
testb
int3
xor
push
out
dec
in
test
mov
ss
mov
or
cld
push
clc
xchg
xorl
cli
popf
lds
call
add
sub
lret
pushf
sub
adc
push
or
or
pusha
sbb
fmuls
addr16
sub
repz
inc
sub
pop
pop
sbbl
fsub
sbb
pop
stos
push
mov
out
mov
mov
inc
divl
jmp
cmpsb
inc
xchg
stc
push
sarl
test
jmp
mov
inc
hlt
loopne
pop
sbb
push
cmp
aaa
fsubp
je
lret
mov
jno
cmpsl
sbb
jae
into
sbb
enter
aad
insl
mov
imul
aaa
lods
rorb
ficomps
mov
mov
jecxz
sti
out
or
enter
mov
jno
and
jnp
add
mov
and
popa
push
fists
sbb
pop
mov
iret
mov
shl
xchg
pop
mov
aad
sbb
xlat
ds
add
xchg
js
iret
test
fcompl
add
ss
out
cs
in
adc
das
out
leave
clc
repnz
xchg
fs
push
inc
inc
mov
push
faddp
shll
xchg
jmp
outsl
orl
adc
orb
push
call
repnz
xchg
xor
dec
loopne
sti
outsb
xchg
xchg
aad
xor
les
mov
pop
push
push
data16
sub
push
jnp
lret
rclb
xchg
std
ljmp
arpl
jmp
sti
test
mov
mov
adc
inc
fadds
mov
int3
pop
in
insb
in
mov
fsub
daa
dec
mov
jne
jno
cld
xor
pop
fistl
insb
sbb
popa
repnz
and
xor
aaa
loop
shll
test
and
jb
movsb
xor
sti
adc
and
std
inc
je
cld
push
iret
and
lock
push
ss
imul
pop
push
mov
mov
and
ja
pop
out
in
dec
xor
push
cmpsb
mov
imul
insb
cmp
push
je
dec
cmpsb
mov
mov
ss
push
jp
sub
scas
out
scas
cwtl
jns
add
fistl
cmc
rcrl
negl
cmp
sbb
pop
pop
xchg
sub
fisubrl
into
xorl
pop
jne
out
sub
mov
test
cmp
arpl
stos
xlat
mov
and
test
jp
jp
lods
xchg
sbb
mov
popf
sbb
xchg
gs
lock
mov
dec
push
fldcw
add
fdivrl
cmp
lret
adc
dec
dec
push
icebp
add
aad
lea
daa
mov
out
xchg
cmp
ficompl
jo
call
daa
stos
mov
repnz
mov
jae
bound
mov
mov
lea
add
or
outsl
xchg
or
xor
xchg
dec
xchg
lds
pop
addr16
cmp
add
mov
push
and
dec
pop
cmp
add
inc
and
or
mov
and
adc
cli
scas
dec
aam
xchg
leave
js
and
int3
push
call
cmc
xchg
or
xchg
jae
in
fdivrs
push
lds
cmpsb
sbb
xor
dec
and
ficoml
aad
test
push
adc
mov
mov
push
lret
insl
iret
inc
pushf
or
push
movsb
and
adc
fcompl
sti
into
pusha
test
xchg
cmp
fcoml
loopne
push
push
pushf
out
sbb
dec
sbb
leave
test
mov
mov
repz
push
aas
pop
adc
insl
jbe
mov
cmp
inc
xor
jne
fwait
adc
push
dec
jno
mull
popa
mov
call
addb
jns
xchg
je
xchg
iret
scas
mov
test
out
jnp
dec
aaa
shll
imul
imul
mov
in
test
out
push
jnp
ljmp
mov
idivl
movl
pop
inc
jecxz
pop
repz
rorl
adc
push
jp
dec
ljmp
lods
push
dec
dec
mov
enter
push
sub
bound
dec
es
xchg
xor
xchg
mov
add
mov
mov
add
add
cmpsb
sub
cltd
sbb
xor
cltd
testb
mov
push
leave
or
mov
divl
xchg
fadd
les
mov
aaa
mov
mov
pop
imulb
pop
test
sahf
sbb
or
shlb
adc
aam
xchg
dec
xchg
mov
mov
inc
in
cmp
lods
jb
mov
push
lods
xchg
push
xchg
or
pop
imul
rorl
insb
adc
stc
cmp
cli
out
out
insl
outsl
pop
mov
popf
xchg
jge
add
mov
out
sub
dec
addb
mov
push
inc
rcll
mov
fbld
test
das
lods
jmp
cmpsl
xchg
movsl
pop
fstpt
cmp
rcrl
jmp
mov
sbb
les
xor
cmpsb
icebp
mov
loope
cltd
std
in
and
cmp
adc
mov
sbb
repz
push
in
pop
push
popa
lret
cmpsl
xchg
pop
push
push
int3
in
push
xchg
cmp
test
test
jo
jnp
fadds
sahf
dec
mov
xchg
dec
mov
push
push
cmp
and
pushf
add
cmp
shlb
mov
push
loope
pop
xor
in
jns
in
daa
enter
cmc
push
pop
add
adc
dec
sbbb
sub
imul
adc
sahf
and
push
lret
lea
jge
call
pop
pop
sbb
sahf
mov
inc
inc
fyl2xp1
lahf
scas
loopne
incl
jmp
iret
xor
sbb
dec
jmp
rcll
mov
call
mov
in
outsl
sub
mov
sbb
pop
loopne
push
jns
in
cmpsb
fs
out
imulb
and
sub
add
jnp
xchg
fildll
pop
jg
movsb
mov
lds
inc
cmp
mov
fs
jecxz
mov
add
and
roll
sub
push
js
ljmp
cmp
add
sbb
insb
xor
sarb
out
mov
mov
or
je
stc
cmc
and
inc
sti
xchg
pop
pop
clc
sbb
icebp
xor
push
or
xchg
imul
mov
faddp
mov
or
and
dec
fchs
lahf
jnp
mov
sbb
or
sbb
dec
push
mov
lret
lock
dec
push
aam
aam
sbb
xchg
lret
icebp
cld
pop
dec
xchg
bound
jle
cmp
push
rcll
jg
push
pop
sti
in
mov
sbb
in
jp
xchg
jno
jnp
dec
mov
addr16
loop
cmpsb
cli
cmc
addb
stc
or
or
push
pop
push
push
mov
rclb
repz
pop
cld
cs
cmp
pop
dec
sti
bound
cmp
pop
lods
ljmp
push
xchg
icebp
arpl
out
jbe
scas
add
dec
sub
icebp
sub
pop
sub
inc
loopne
shlb
xchg
sub
cltd
and
mov
push
sbb
pop
mov
icebp
fs
cmp
fcoml
mov
mov
movsl
jno
mov
test
pusha
mov
mov
popf
jo
xchg
mov
scas
inc
in
aas
les
pushl
mov
mov
jbe
lea
jae
fwait
gs
mov
je
inc
push
pop
fisubrs
aad
je
push
adc
je
lret
jno
push
aam
int
jo
sub
insb
sub
xchg
sbb
adc
andl
adc
cwtl
cmp
mov
sub
jns
or
ret
ja
push
lods
sbb
or
and
sub
pop
adcb
xchg
sti
xor
inc
cli
and
loopne
xchg
mov
mov
inc
shlb
fs
sbb
sub
in
xor
mov
cmp
jne
hlt
fmul
in
inc
cs
xchg
ret
test
pop
push
jb
cld
cmp
and
pushf
cmp
fidivl
or
fst
adc
dec
shl
jae
es
mov
inc
shlb
shlb
xchg
shrl
movsb
jb
cmpsl
xor
stc
scas
mov
pop
mov
or
push
sub
pusha
clc
enter
fldenv
adc
cltd
mov
je
ret
push
cld
xlat
mov
xchg
clc
jo
out
adc
adc
push
inc
push
cmp
arpl
rcr
aam
jae
add
mov
or
or
inc
icebp
or
pop
lcall
lcall
movsl
bound
xchg
or
lahf
and
push
mov
test
mov
arpl
dec
sub
sbb
and
repz
xchg
xchg
push
pop
adc
xchg
cmp
cs
mov
sub
push
push
sub
lods
out
enter
cmpsb
aam
jge
movsl
jbe
add
xor
push
or
pop
mov
ss
rclb
lods
mov
mov
shlb
xor
or
xor
and
in
mov
shr
aas
test
xchg
jge
sub
jge
aad
inc
add
ja
mov
mov
lcall
mov
das
in
push
mov
jecxz
fnstsw
pop
inc
xor
xchg
stc
repnz
fst
enter
dec
fcomps
pop
arpl
lret
push
jle
loop
jmp
fstpl
push
pop
cmp
cmp
mov
js
int3
mov
mov
ljmp
fmul
je
add
mov
rolb
cmp
stc
loopne
jne
push
mov
js
cmpsb
mov
add
rcrl
dec
loopne
loope
xchg
movsb
cld
gs
adc
lret
fs
js
jle
sbb
xor
dec
xor
pop
mov
cmpsb
ret
adc
sbb
dec
nop
sub
mov
insb
cs
cmpb
ja
imul
cmp
jle
insl
fidivrs
ss
scas
dec
pop
outsb
call
push
adc
cmp
shlb
push
sbb
sbb
sub
mov
mov
pop
imul
cmp
mov
cmp
cmp
mov
push
lret
insb
shrb
push
sbb
jne
cmpsb
push
adc
pop
xchg
cli
xor
jge
fsub
call
popa
out
fistpll
or
mov
push
fnstenv
mov
add
push
insl
cmp
fnstenv
sub
cmp
pop
or
sub
movsl
out
inc
xchg
cmpb
push
pop
jmp
xchg
push
xor
test
add
jne
aad
popf
shlb
enter
push
sbb
pop
jbe
push
adc
push
in
xchg
mov
jl
out
jmp
or
rcl
or
jge
xor
xlat
push
out
arpl
sbb
pop
scas
inc
xchg
and
jle
mov
jp
pop
mov
pop
scas
out
jnp
lret
jg
testl
mov
fchs
sbb
shl
adc
ljmp
mov
inc
cmpsb
stc
shr
movsl
xchg
pop
jge
pop
sub
pop
mov
adc
mov
pusha
loop
insb
hlt
or
jne
xchg
sbb
into
xlat
lock
add
cmp
adc
filds
mov
fisttpl
mov
ret
pop
push
mov
push
sub
clc
ljmp
pop
xchg
jnp
fstps
push
pop
int3
push
cmp
rcrb
repz
xor
ja
data16
pop
cmp
mov
setl
data16
push
dec
loop
adc
ds
or
mov
stos
adc
and
xor
jo
adc
hlt
test
xchg
mov
call
add
add
lret
and
movsb
movsb
cmpsl
stos
pushf
mov
mov
or
and
ljmp
sbb
fiaddl
lcall
and
add
subl
pop
xchg
aaa
fisttpl
cld
dec
cmp
cld
jb
sbb
ljmp
call
xor
mov
add
or
popf
mov
mov
rcrb
shlb
push
mov
sub
clc
fwait
stc
clc
adc
rcrb
les
mov
sub
stc
mov
inc
in
sti
ret
mov
mov
lcall
or
aas
push
movsb
jmp
lea
add
cmp
sbb
fs
dec
pushf
enter
or
add
nop
xchg
cmp
mov
jge
adc
xchg
and
lea
cmp
iret
fs
movsb
cli
jbe
test
push
sub
xor
inc
jmp
and
in
adc
arpl
lods
cmc
add
in
push
and
jle
mov
fcmovne
mov
dec
dec
loopne
add
es
mov
mov
jge
aam
aas
sbb
xchg
xchg
iret
jmp
mov
jle
bnd
in
int
negb
cmp
call
mov
adcb
js
lcall
sub
fdiv
jmp
mov
out
or
lret
inc
mov
scas
dec
mov
mov
lret
mov
mov
jge
xchg
push
xchg
sub
cmp
pop
add
lcall
fdivrs
sbb
std
push
jge
mov
in
int3
fsub
pop
and
mov
cmc
into
jle
sbb
inc
roll
sbb
adc
and
jl
adcb
loop
clc
in
inc
call
fmuls
push
out
popf
inc
mov
jo
sbb
ljmp
and
dec
punpckhbw
and
fistl
or
or
bound
pop
push
xchg
jge
and
push
adcb
je
add
cwtl
push
add
jo
add
pop
mov
jp
or
add
adc
mov
popf
pop
into
xor
jge
lock
sbb
js
lods
cmp
cmc
shll
inc
or
inc
adc
push
out
out
les
cmpsb
mov
rorb
mov
cmp
xchg
pop
paddusb
mov
lods
fsubr
mov
sahf
loopne
and
dec
lahf
aaa
push
dec
out
imul
sbb
popf
ja
movsl
jg
jo
arpl
fildll
add
cmp
pop
jmp
sub
pop
sub
in
jae
xchg
std
jmp
fdivs
jae
dec
aad
push
idiv
repz
fistpl
add
ljmp
xor
andb
int3
jb
mov
push
dec
jae
or
sbbl
jb
cmp
rorb
test
pop
jbe
ds
in
xchg
xchg
je
popf
gs
addl
inc
dec
push
mov
push
cli
movsb
jne
shlb
fsub
and
jp
jns
pop
lea
adc
pop
fs
or
add
ds
arpl
pop
shlb
cs
adc
mov
stos
aaa
out
inc
jno
cmp
add
push
pop
enter
daa
leave
in
popf
pop
mov
out
adc
hlt
sbb
movsb
lret
inc
std
aaa
std
daa
sub
lret
not
bound
sub
inc
add
push
push
movsl
sbb
ss
mov
sub
cld
xchg
testl
inc
xchg
inc
icebp
and
jmp
dec
ret
add
push
jno
xchg
xlat
add
stos
jge
imul
test
das
inc
aad
push
and
inc
les
scas
jns
decl
test
lods
pop
pop
popf
inc
lods
les
je
xor
sub
fistpl
outsl
pusha
or
jbe
adc
stc
rol
jle
add
lea
gs
in
aam
out
xlat
addr16
or
flds
and
pop
sbb
popf
mov
mov
sub
dec
xor
in
test
sahf
or
push
cmpsl
sbb
and
in
es
je
mov
jl
mov
pop
mulb
popf
outsb
xchg
fs
add
nop
orb
test
sbb
push
xchg
fsts
in
or
gs
push
clc
jp
fdivr
sti
sbb
je
shlb
cmp
out
pop
stos
sahf
inc
inc
xchg
jo
lds
in
push
shrb
mov
inc
je
and
xchg
jecxz
stos
jb
mov
int
pusha
hlt
dec
cmp
vpinsrb
in
out
lea
inc
pop
int3
mov
push
add
rolb
and
lret
fisubrs
mov
jl
in
adc
lods
push
mov
sahf
or
int
cmpsb
or
mov
daa
aaa
mov
daa
loopne
stos
pop
lret
xchg
jne
and
jmp
cli
jp,pt
hlt
dec
lods
out
dec
mov
add
add
mov
cmp
xor
add
xchg
push
mov
les
sbb
ficoml
pop
insb
outsl
std
push
fsubrs
cmpsb
mov
xchg
mov
scas
sbb
xchg
loop
aaa
dec
bound
adc
outsb
jmp
or
pop
out
pop
fisubrl
inc
mov
or
stos
mov
in
pop
push
fsts
aaa
lods
es
push
inc
inc
cs
scas
js
pushf
sbb
sub
adc
cmpsl
fmul
mov
into
pop
imul
jmp
dec
enter
aad
test
repz
adc
ljmp
push
or
data16
sbb
hlt
pop
jmp
scas
aas
hlt
mov
lock
fs
mov
mov
adc
add
test
flds
lods
test
ret
jmp
and
xor
addr16
mov
lods
pop
push
mov
or
sbb
lock
jo
xchg
scas
lret
and
xor
repz
push
arpl
lahf
ret
push
mov
or
sub
sub
jbe
cmp
mov
dec
sbb
loopne
xchg
cli
pop
mov
push
mov
js
pop
inc
je
pop
add
jae
rolb
stos
fsts
into
inc
sub
mov
aaa
push
movsl
in
xchg
not
iret
xchg
and
aad
pop
xor
fsubp
sbb
pop
ja
test
jl
call
iret
sbb
pop
mov
sub
pop
add
sbb
jmp
sub
xchg
mov
push
mov
adc
add
cli
xchg
js
sbbb
inc
push
or
xor
into
cmp
push
pop
sbb
lds
add
xchg
cltd
dec
mov
nop
daa
pop
mov
stos
data16
test
mov
inc
cmp
xor
jg
xchg
xor
in
test
shrb
divl
pop
les
cmpsl
stos
jl
test
push
sub
mov
or
sbb
sub
pop
scas
cmp
repnz
pop
call
or
ljmp
lahf
fmulp
mov
or
call
hlt
enter
loopne
push
data16
cmp
test
push
sbb
pop
xchg
ljmp
push
lret
mov
push
jmp
cmp
pop
and
shl
mov
cmp
call
push
fistpll
mov
out
std
cmpsl
jne
or
or
xchg
scas
in
jbe
adc
and
inc
cmpsb
xchg
adc
pop
sub
in
dec
jnp
ret
or
push
push
jb
jo
xchg
jae
mov
dec
sbb
fadds
daa
fisttpl
pop
inc
roll
mov
out
pop
push
dec
adc
imul
pop
fs
xchg
cld
sbb
inc
mov
and
or
mov
pop
adc
sub
lods
xchg
js
aad
mov
jbe
pop
mov
sub
or
fcomi
mov
call
cs
std
out
push
shrl
xchg
orb
stc
outsb
cwtl
cli
pushf
jnp
sbb
mov
jecxz
cmp
mov
cmp
fadds
jne
sub
push
imul
enter
inc
stos
test
xchg
adc
sub
ljmp
push
test
lods
cmp
pushf
pop
inc
movsb
mov
adc
movsl
cs
lock
je
pop
movsl
nop
push
xchg
cmp
jne
cmp
mov
mulb
xor
dec
ret
or
cmp
stos
test
inc
push
nop
pop
xchg
jmp
dec
sbb
jmp
fistpl
jg
add
out
fstpl
sbb
mov
jae
xchg
stos
pop
adc
mov
dec
xchg
mov
popf
movsb
mov
shll
mov
mov
and
push
xchg
mov
adc
lds
add
add
jecxz
jae
lahf
sbb
shrl
cmp
mov
push
or
cmp
xor
dec
shl
mov
nop
cld
adc
out
dec
inc
adc
outsl
imul
scas
sbb
bts
daa
mov
pop
sub
idivl
outsb
fadd
push
xor
cmp
xchg
test
cwtl
sahf
mov
adc
loope
ret
lock
mov
loope
pop
adc
loop
in
xor
fld
imul
pop
cs
xchg
dec
pushf
xchg
lcall
add
pop
pop
je
add
imul
mov
inc
dec
fwait
pop
daa
sar
pop
xchg
xchg
out
rcrb
push
pop
mov
lods
jns
insl
stos
icebp
enter
mov
decb
rorl
sbb
push
aaa
adc
in
outsl
xchg
jmp
call
rorl
jge
dec
mov
call
js
or
aas
js
hlt
aam
rcr
jmp
cmp
push
repnz
fcoml
je
push
jg
mov
pop
int3
push
jle
dec
or
scas
xor
iret
pop
fcmovnu
ja
cmc
and
cmp
outsl
addr16
or
subb
outsl
mov
or
cmp
outsl
loop
xlat
push
sub
xchg
xor
test
xor
mov
cmp
int
insb
imul
xor
gs
push
mov
cmp
fldl
inc
dec
dec
ret
outsb
lock
mov
mov
xchg
jge
aas
into
mov
push
lcall
mov
in
popf
xchg
add
mov
fcomps
push
cwtl
cmp
cmp
adc
negl
dec
push
mull
adc
xchg
cmpsb
xchg
jmp
cmpb
int3
push
or
inc
sub
jmp
inc
sbb
cmp
mov
fcoms
rorl
fcmovu
test
stos
lcall
sbb
sbb
popa
push
leave
insb
jge
fisubl
pop
nop
dec
popa
and
out
mov
outsl
mov
bound
sub
ficomps
sub
rcrl
xchg
and
sub
stc
push
test
dec
imul
scas
call
fnstcw
inc
lock
push
out
and
fidivrs
fnstcw
xchg
lods
jbe
mov
and
sbb
insb
fwait
roll
adc
xor
pop
sub
lret
mov
shll
dec
push
ds
push
xchg
aas
loope
add
je
ss
fisubrs
mov
mov
addr16
mov
data16
add
inc
adc
add
lock
sbb
mov
xchg
aad
add
adc
adc
xor
sub
aad
jnp
lock
xchg
insl
dec
out
jg
das
jmp
fcoms
add
cmp
int
sub
ljmp
ds
stos
xor
data16
mov
xlat
xchg
mov
repnz
mov
mov
faddl
xchg
icebp
mull
out
sbb
xchg
add
hlt
loopne
push
fisttpl
out
mov
movsb
adc
jecxz
insl
into
inc
adc
sbb
cltd
jbe
out
xlat
jo
dec
jle
mov
xor
cmp
fs
das
out
in
loope
lret
xor
xlat
lods
pop
jp
je
fsubrl
hlt
popl
cs
fprem1
xor
es
pop
lods
popf
cmp
mov
inc
out
stc
pop
dec
inc
scas
fbstp
dec
inc
sbb
je
dec
xchg
ljmp
xchg
fistps
xor
mul
adcb
xor
incb
pop
popa
scas
loope
mov
xor
cmp
outsl
adc
xchg
xor
push
dec
andb
pop
push
shrb
jns
mull
or
xchg
and
in
pop
shlb
out
lcall
cmp
lret
fiadds
jnp
adc
jg
pop
fldt
gs
out
aad
call
test
loope
ret
xor
mov
sbb
icebp
xor
mov
mov
repnz
and
rcrb
sbb
std
repz
cmp
add
stos
dec
adc
ss
mov
out
inc
mov
lret
lcall
xchg
stc
dec
addr16
sub
test
mov
aas
cs
xchg
mov
add
mov
and
lea
imul
pop
and
adc
cmpsl
xchg
je
fsubrs
cmp
test
fsubrp
test
les
inc
test
push
and
push
add
lds
mov
mov
ret
pop
imul
push
ret
jo
enter
leave
cmp
fisubl
pop
addr16
cmp
clc
fistpll
cmc
push
and
xchg
jmp
movsl
mov
mov
mov
call
call
das
mov
scas
push
stc
or
scas
iret
lahf
shlb
mov
and
push
sub
into
pop
dec
test
out
inc
cmp
lds
add
mov
push
repnz
mov
add
sbbl
xor
push
push
movsl
cld
out
xlat
sbbl
shlb
ss
cs
xchg
pop
cmpsb
cmp
test
insb
push
ds
rcrb
outsl
sahf
mov
inc
cmpl
mov
dec
cmpsl
lock
lds
iret
mov
cs
leave
jne
ret
lock
or
pop
mov
fbstp
inc
lahf
je
mov
dec
movsl
fcompl
mov
inc
test
cmp
mov
push
cwtl
xor
jmp
in
adc
ds
mov
mov
mov
data16
arpl
mov
sbb
adc
mov
outsb
mov
repz
incl
pop
sub
test
fs
outsb
push
pop
xorb
mov
adc
out
insl
leave
inc
jno
mov
pop
xor
mov
orl
add
frstor
inc
xchg
sar
pushf
dec
pop
popf
push
xor
adc
mov
inc
and
ss
inc
into
lds
jno
sahf
cmp
xchg
aaa
out
ja
cmp
rcrb
out
push
jo
lahf
call
xchg
or
sahf
push
or
test
sbb
mov
sti
inc
push
push
aas
mov
xor
fbstp
flds
sub
dec
popf
jbe
movq
push
and
push
adc
cs
push
or
adc
mov
enter
mov
pop
jb
mov
jecxz
mov
pop
icebp
out
cs
push
inc
imulb
lcall
insb
ljmp
dec
outsb
popf
or
daa
and
xchg
lahf
repz
and
out
or
xacquire
scas
inc
loopnew
pop
cmpsb
test
aad
imul
ja
bound
int
mov
stc
test
out
aad
orl
jns
lds
std
sbb
pop
cmpsl
loopne
xchg
mov
mov
dec
or
fwait
cmpl
mov
jl
mov
aaa
mov
iret
dec
in
sbb
mov
aad
dec
or
sbb
rolb
cmp
shrl
rclb
adc
out
lret
andl
scas
scas
xchg
cmp
sbb
pop
xlat
push
je
mov
stc
xor
clc
add
dec
cmp
mov
shrb
fisubrl
hlt
fsubrp
pushf
aad
out
addr16
pop
cmp
sbb
sub
test
inc
push
push
aad
in
data16
outsl
data16
inc
cmp
pop
push
pop
cmp
xchg
in
andb
lret
mov
mov
xor
xchg
inc
dec
mov
pop
inc
pop
movsl
mov
or
push
or
jle
inc
sub
mov
in
shlb
pop
call
fistpl
out
dec
push
mov
xlat
mov
leave
or
sub
mov
xor
jge
nop
je
jne
loope
mov
loope
repnz
int3
rolb
imulb
cli
call
repnz
int3
iret
cld
mov
adc
ss
dec
inc
or
aaa
dec
cmc
popf
idivb
dec
or
in
scas
hlt
cmpsl
mov
aad
insl
and
inc
rcrb
push
dec
mov
inc
inc
out
adcb
scas
std
orl
loop
xor
mov
orl
aad
and
insb
mov
inc
fdiv
pop
nop
arpl
dec
sub
imul
insb
mov
mov
and
xlat
dec
in
clc
movsl
sub
mov
dec
clc
decb
fidivl
mov
dec
out
or
push
xor
pop
les
mov
push
jo
nop
mov
mov
xor
and
add
push
dec
jnp
sti
sub
pusha
outsl
push
outsl
out
je
popa
ret
mov
mov
dec
bound
cmp
aad
imul
imul
inc
dec
jno
in
je
xor
sti
push
lods
mov
lods
mov
jge
add
mov
jbe
mov
xor
pop
fisttps
dec
fs
inc
and
mov
call
lods
dec
adc
fcoms
aaa
call
cmp
mov
inc
mov
gs
test
sub
stos
pop
ret
xor
add
arpl
sub
adc
lcall
pushf
and
mov
lea
jg
jge
pop
xor
sbb
xor
in
outsb
cmp
insb
sbb
sti
push
je
mov
js
test
lahf
sbb
add
sbb
mov
xchg
jne
pusha
sbb
out
mov
btr
inc
jbe
jecxz
pop
xchg
xor
dec
mov
push
add
pop
mov
adc
aam
dec
pop
enter
in
js
rolb
xchg
into
mov
cmp
mov
in
sbb
sbb
out
dec
daa
test
outsl
aam
loope
jecxz
and
enter
bound
mov
push
dec
mov
or
out
push
jl
mov
add
jns
push
mov
out
xchg
sbb
mov
fs
adc
or
xor
shlb
movsl
push
mov
or
pop
fadd
xor
fsubrl
fs
inc
ror
jge
mov
add
pop
xchg
shlb
test
sbb
fnstcw
xabort
lahf
insb
mov
mov
cwtl
lahf
mov
popa
fwait
scas
push
fidivl
inc
mov
push
sbb
mov
sub
and
fcoms
sbb
inc
mov
push
outsb
lahf
inc
jb
sub
aam
jmp
jne
sti
or
sub
and
mov
pop
cmp
xor
roll
adc
push
repnz
shrb
xor
outsl
addr16
loope
dec
cld
sbb
gs
ret
stos
das
xchg
insl
push
fbstp
les
adc
xor
push
sub
daa
cli
fstl
xor
jmp
mov
inc
add
aaa
dec
xchg
pushf
lods
imull
push
inc
sub
xor
mov
push
cmp
es
jg
inc
movsl
addr16
test
push
sbb
mov
and
cwtl
lods
adc
jae
push
ret
or
fwait
in
xchg
xchg
aam
xchg
ljmp
test
mov
inc
fwait
pop
sbb
inc
jecxz
dec
lock
or
les
hlt
inc
dec
mov
cmp
mov
sub
das
add
rorb
jo
gs
cmpsb
jne
inc
mov
fisubrs
pop
add
xchg
lahf
pop
in
into
xchg
jb
push
sub
insb
jp
aaa
adc
xor
push
cmp
xchg
lods
pop
fwait
sbb
sub
inc
dec
sub
lock
mov
and
aaa
sub
push
jecxz
or
push
mov
mov
pop
es
cmp
add
add
xor
inc
mov
sub
repz
clc
ret
loope
pop
adc
std
mov
jnp
jl
fwait
lods
push
outsl
push
jne,pn
shr
mov
push
lods
pop
popl
mov
sti
jnp
ss
add
mov
cmp
lods
xor
xor
xor
iretw
push
push
daa
mov
daa
arpl
push
fwait
and
lock
cld
and
js
shlb
mov
jae
inc
aam
xor
dec
cmp
dec
inc
into
pop
adc
cltd
lahf
mov
cmpsl
out
push
mov
mov
inc
sahf
imul
adc
push
xor
sbb
nop
adc
mov
addr16
in
cmp
dec
add
fs
es
cmp
push
dec
jp
movsb
ja
movsb
push
sbb
and
xor
push
adc
mov
cmp
dec
es
testb
jb
imul
push
popf
and
adc
les
ret
pop
add
out
stos
mov
or
xchg
mov
mov
insb
push
push
jge
lods
adc
dec
add
xor
push
lret
jge
jno
shlb
inc
jle
cwtl
xchg
jecxz
scas
cmp
dec
lea
rolb
xor
call
mov
popa
mov
xchg
pushf
pop
inc
sbb
lcall
ficomps
lods
insl
dec
hlt
arpl
fimuls
mov
dec
sbb
xchg
jbe
or
js
sub
cli
mov
mov
cmpsl
pop
mov
jo
stos
jns
aaa
and
add
dec
mov
fadd
cmp
mov
data16
jp
outsb
lahf
jl
in
lods
fs
push
and
sahf
iret
mov
xchg
arpl
jmp
and
adc
ret
dec
mov
dec
int3
psignd
rcll
cmp
out
lahf
aam
or
imul
xchg
mov
in
inc
pop
pop
cmp
jb
idivl
adc
push
negb
pop
lods
cmp
dec
jl
pop
je
xchg
cld
packssdw
bswap
sbb
insl
mov
and
jo
imul
sbb
jp
enter
sbb
loop
js
add
and
sbb
mov
into
and
stos
aam
ret
and
pop
dec
aaa
mov
iret
stos
das
jecxz
ja
pop
xchg
bound
nop
hlt
dec
in
adc
popa
mov
adc
jo
popa
sahf
xchg
in
lgs
gs
ja
push
mov
sbb
shrb
iret
dec
flds
test
push
sub
inc
out
xchg
lcall
repnz
test
insl
loop
fcomps
xlat
ret
xchg
mov
mov
mov
vcvttss2si
xor
lea
ret
jo
call
in
adc
mov
mov
int
mov
ret
mov
aad
dec
adc
jmp
lret
outsb
or
xor
stos
cmpsb
push
hlt
or
popf
fmull
daa
fs
add
jns
stos
stos
pop
mov
and
sti
adc
stos
cmp
jg
mov
pop
popf
cmpl
loop
sub
ss
jmp
jmp
mov
imulb
scas
imul
inc
sub
shl
repnz
sbb
mov
and
inc
in
sub
mov
or
push
cmp
adcb
data16
adc
in
aaa
popa
or
adc
mov
ficomps
mov
mov
outsl
ss
push
sti
aam
pop
arpl
push
jbe
and
xchg
fimuls
xor
pop
xchg
dec
lea
or
mov
ja
xor
fdivl
xor
shl
push
ret
ret
jle
lret
fisubrs
rdpmc
fmull
pusha
add
lcall
ds
ret
icebp
inc
pop
mov
out
je
inc
std
div
inc
sub
mov
sub
or
and
pop
in
in
movsb
or
lds
pop
das
sub
sub
outsb
sub
mov
pop
push
cltd
jecxz
cmpsb
iret
sub
sbb
in
hlt
sub
sub
cmp
mov
cmp
sub
inc
xlat
shl
pop
mov
xchg
movq
push
cltd
jae
sub
cmp
mov
sub
aam
std
dec
test
outsl
push
xor
xor
scas
out
dec
cmp
fsubrs
pop
xchg
stos
mov
cmp
jne
repz
add
test
imul
cld
ss
adc
out
xor
push
or
cmpsl
ret
cwtl
inc
adc
xor
cmp
sahf
push
cwtl
mov
xchg
arpl
xchg
mov
pop
jge
cmp
ja
adc
mov
clc
jb
fnsave
fidivrs
aad
in
lods
ljmp
dec
es
movsb
orps
inc
cld
jns
xchg
mov
cmp
stc
out
popa
mov
imul
mov
subb
push
xchg
xor
in
xorl
cs
add
sbb
adc
push
adc
call
push
out
insb
or
lret
call
mov
mov
div
loop
cmp
hlt
mov
dec
aas
sub
in
pop
mov
repz
mov
xchg
test
dec
push
push
lock
jp
pop
icebp
mov
cmp
xchg
xor
mov
inc
xorb
jmp
push
push
inc
add
lds
mov
or
add
sbb
and
mov
jle
push
mov
mov
mov
inc
push
bnd
imulb
push
mov
xchg
daa
pusha
xor
xchg
jns
xchg
lret
jle
add
mov
mov
xchg
jae
call
inc
xchg
lahf
adc
xor
movsl
xlat
lods
or
cmpsl
lds
rclb
adc
jp
add
out
and
aas
mov
into
add
jl
hlt
mov
insl
jle
shrl
dec
std
cmp
in
ret
aam
and
or
movsl
or
mov
jns
and
inc
rclb
pop
mov
lds
bound
and
mov
adc
adcb
addl
adc
je
inc
int3
cli
jge
xor
lret
pop
or
movsl
pop
lcall
lods
dec
xlat
sub
push
inc
dec
xchg
pusha
lods
sub
mov
add
xlat
mov
in
fwait
das
fs
mov
jmp
out
pop
stos
repnz
cmpsl
inc
inc
xchg
clc
mov
jo
call
jle
fisttpl
jecxz
inc
cmpsl
ret
xchg
das
testb
pop
daa
je
cmp
jnp
xchg
in
dec
or
das
idivl
jnp
jnp
test
lret
rclb
out
mov
in
lret
movsl
inc
push
inc
int
mov
notl
scas
mov
fcomp
dec
in
ja
pop
in
cmp
popf
jb
or
fadd
pop
lahf
inc
stos
es
dec
cmpsl
subl
iret
jno
std
aad
iret
inc
cmp
add
fstl
es
fdivp
cmpsb
fldenv
test
mov
inc
jl
or
jge
jl
lret
xor
add
sbb
out
out
push
lock
jne
push
in
lods
pushf
dec
mov
mov
sbb
lahf
sub
xor
cmpsb
lods
call
das
icebp
jb
cmpxchg
stos
jo
das
imul
sub
lock
push
cltd
test
out
push
loop
sub
out
push
aad
or
lods
push
imul
ljmp
test
movsl
jle
push
sub
inc
dec
pop
icebp
and
cmpsl
cs
pxor
mov
cmp
fucom
sbb
xor
pop
push
lock
pop
leave
jae
jno
outsl
mov
jg
popl
loopne
repnz
lods
lret
xchg
sbb
dec
loop
sub
jb
sub
imul
cmp
jo
add
cmpsl
repnz
mov
mov
adc
lret
mov
mov
cmp
popa
test
mov
xchg
inc
push
cmp
int
pusha
daa
fistpl
cwtl
in
sub
pop
ljmp
es
sahf
jle
mov
mov
cld
repz
or
and
cmp
push
jge
fcomp
out
movl
frstor
mov
pand
repz
outsb
je
push
mov
jo
insb
lcall
and
shrb
pop
es
popa
in
inc
test
or
jmp
jo
sub
outsb
ret
mov
push
icebp
xchg
mov
adc
inc
and
fcmovbe
push
lret
dec
sub
adc
sub
rol
imul
in
inc
cld
pop
loopne
movsb
inc
mov
pop
sub
lds
push
cld
mov
xor
fistl
fistpl
cs
test
das
mov
and
stc
fdivl
dec
adc
das
in
xor
pop
mov
das
cmp
scas
aam
lea
sub
scas
outsb
pop
jmp
pop
jmp
pop
inc
imul
xchg
cltd
dec
fisttps
daa
js
divl
pop
ficoml
sub
push
jbe
cmc
jp
repnz
push
pop
fs
xchg
shll
mov
mov
push
or
adc
push
jp
sbb
sub
inc
fwait
xchg
adc
cmpsl
add
cmp
pop
cli
jl
jecxz
sarl
mov
mov
loopne
test
cli
and
inc
mov
and
fistps
lock
mov
cmp
mov
ja
mov
xlat
and
sub
fwait
sub
repnz
mov
inc
xchg
push
sub
mov
xchg
jecxz
adc
inc
cmpb
sbb
dec
mov
sub
mov
xlat
orl
sub
stos
push
out
leave
pop
cli
mov
hlt
mov
stos
das
arpl
cmp
cmc
in
mov
cmp
add
and
insl
scas
imul
loop
adc
in
dec
jecxz
pop
cmc
pop
test
push
push
aas
and
sub
ret
pusha
mov
sub
push
loop
hlt
lods
cwtl
sbb
pop
fs
mov
pop
jmp
jns
push
pop
mov
cwtl
mov
dec
or
jb
loopne
out
mov
iret
or
jb
jg
notb
in
movsb
aam
mov
jne
pop
push
faddl
rorl
scas
in
scas
sub
icebp
loope
xorb
ret
sub
mov
mov
rolb
add
insl
aam
xchg
arpl
mov
cwtl
aam
jnp
ja
iret
leave
sub
aaa
dec
cs
xchg
sub
and
daa
iret
faddl
jo
shl
mov
pop
inc
xchg
add
adc
xor
fidivs
xor
ret
pop
fdiv
test
daa
ficoms
sbb
xchg
jne
adc
cmp
outsb
dec
mov
data16
icebp
shll
inc
push
add
cmp
mov
inc
pop
cli
mov
pop
jo
call
mov
push
aad
cltd
stos
jae
shll
ds
lret
loopne
mov
or
insl
dec
mov
shll
jns
cmp
loop
pop
dec
loop
lea
pop
addr16
xchg
mov
lret
pushf
pop
mov
data16
xchg
cmc
jb
out
add
xchg
inc
sahf
push
mov
xor
test
lahf
in
xor
outsb
bound
movsb
mov
movsl
cmp
mov
mov
dec
xchg
mov
movsl
addr16
inc
dec
adc
stc
test
push
inc
loop
insl
push
dec
sbb
xchg
inc
push
sub
dec
pushl
stos
push
dec
push
mov
ficompl
inc
dec
loope
out
sub
dec
ds
mov
mov
adc
dec
cwtl
sbb
inc
jge
push
mov
and
inc
les
mov
sub
inc
fiadds
add
and
call
pop
sahf
ss
and
rorl
mov
not
and
dec
sahf
ljmp
jno
insl
fucomip
ja
jp
in
sti
push
sahf
or
fidivrl
jmp
stc
mov
fcomi
xor
sub
push
jge
xchg
mulb
mov
xor
testb
sbb
repnz
mov
mov
adc
pop
push
mov
pop
in
or
xchg
aam
stc
int
lret
jno
add
and
aam
push
jg
dec
fcoml
sub
aad
adc
ja
shlb
push
addr16
sbb
lcall
shrb
jo
push
add
mov
test
mov
adc
aaa
cs
cs
and
push
push
ljmp
hlt
jmp
movsl
dec
sahf
pop
lock
mov
cltd
addr16
int3
ret
inc
shr
in
jns
mov
jnp
push
jl
bound
int
add
lahf
pop
std
loop
xor
test
add
imul
lds
ss
or
sub
or
movsl
and
push
into
adc
sub
cmpsl
out
loop
pop
ljmp
out
sub
hlt
pop
inc
sbb
cli
call
insl
in
scas
xor
jno
dec
add
data16
in
fsubrl
inc
cmpsl
adcl
or
cmp
bound
or
or
xchg
inc
jb
test
and
inc
cmpsb
stos
mov
out
xchg
push
push
adc
cmp
inc
dec
cli
arpl
sub
sub
shlb
push
sbb
push
xchg
repnz
and
clc
test
shr
add
jg
adc
imul
mov
sub
aaa
cmp
pop
xor
outsl
aam
cmp
xchg
test
mov
cmpsb
sbbb
jp
les
insl
ret
outsl
ds
cmp
xchg
shlb
enter
les
cld
test
std
ss
cmpsb
orb
sbbl
xchg
sbbl
mov
bound
out
mov
adc
mov
mov
sub
mov
dec
in
adc
inc
inc
pop
jg
cmp
jge
lds
test
lds
js
int
xchg
adc
push
gs
dec
and
add
push
sbb
sysret
or
mov
clc
shlb
push
mov
cmp
lock
xor
pop
mov
adc
sub
dec
test
or
push
rol
and
inc
sub
pusha
jbe
push
fstpl
in
jl
aam
std
repnz
les
mov
rcrl
or
addr16
lock
mov
punpcklbw
jnp
sbb
in
xchg
jnp
xor
lahf
das
sbb
push
ficomps
and
sub
ret
jae
in
push
and
jp
jns
data16
les
push
inc
aas
add
pop
pop
and
sbb
sub
inc
out
and
add
ret
mov
aas
push
push
add
dec
incb
lahf
scas
stos
pop
push
gs
rcll
lahf
add
adc
mov
lock
or
rcr
xor
sbb
or
adc
dec
xor
lods
add
flds
icebp
sub
xchg
fsubs
fisttps
push
or
xchg
xlat
outsb
push
sub
and
shr
xor
xchg
cmp
test
dec
lret
jbe
aas
dec
or
call
push
imul
xchg
mov
mov
xor
mov
dec
mov
in
lea
sbb
in
adcb
call
lcall
cmp
push
mov
add
push
jle
arpl
mov
bound
pop
adc
orb
out
cmp
sub
push
push
jmp
inc
rclb
xor
int
das
xchg
shrb
jle
and
push
mov
aaa
daa
sbb
in
lock
pop
test
mov
lcall
xchg
jne
ja
adc
lods
jp
add
movsl
call
push
loope
mov
inc
adc
push
add
dec
add
outsl
jns
loope
dec
cmp
lret
jp
mov
push
out
xchg
adc
xchg
fs
sbb
sub
xor
xlat
adc
cmpsb
les
mov
adc
jne
pop
or
imul
stc
push
xlat
mov
push
into
mov
into
sbb
jecxz
fucomp
lea
xchg
or
insl
shll
adc
inc
ret
jp
in
xchg
dec
js
fldt
in
sub
xor
mov
repz
test
das
ja
in
push
mov
fwait
rorb
dec
lret
inc
xorl
in
outsb
pop
push
pushf
mov
xor
dec
add
cmp
sbb
orb
push
cmpsl
mov
jbe
xor
sbb
shrb
add
test
sbb
movsb
or
popa
loope
pop
lcall
pop
addb
sbb
out
ljmp
cmp
inc
sub
and
outsb
push
mov
mov
cmc
pop
jne
fldlg2
mov
jge
mov
shlb
mov
repnz
or
sub
mov
mov
sti
movsb
jmp
xor
add
rcl
push
mov
and
inc
xchg
pushl
dec
cmp
xchg
pusha
popa
leave
mov
iret
add
xlat
sbb
bnd
repz
fsubrs
inc
xor
out
push
daa
mov
mov
sub
xchg
shrb
push
outsl
fnstsw
stos
clc
mov
sub
in
nop
daa
dec
pop
jne
movsl
addb
or
mov
inc
add
faddp
pop
mov
and
cmpsb
popa
mov
jo
jb
idiv
cmp
lret
testl
movsl
std
mov
pop
insb
fildll
add
xchg
push
mov
and
sub
nop
mull
pushf
xchg
mov
mov
movl
fsts
icebp
mov
ja
or
sub
adc
dec
daa
fsts
and
dec
adc
jae
adc
clc
test
xchg
mov
fs
int3
into
or
push
push
leave
aam
push
pop
lcall
cmpl
pop
repz
inc
jg
xchg
je
adc
dec
imul
movsb
andb
aad
mov
jmp
sbb
cmpsb
dec
in
lret
xchg
cmp
sahf
xor
stos
inc
xor
into
xlat
adc
fdiv
pushf
and
add
or
adc
addr16
pushf
mov
or
jae
mov
sbb
fidivrs
ja
popf
int3
sbb
fmull
fisubrl
dec
jns
jmp
mov
scas
or
add
mov
daa
or
repz
jne
pushf
lods
loop
adc
test
jne
mov
test
sub
jno
pop
cltd
popf
push
inc
jmp
pop
jns
or
cmp
aaa
dec
dec
lods
mov
and
and
cmp
mov
pop
sahf
aas
jbe
push
pop
mov
fwait
sti
shlb
es
push
mov
lcall
movsl
inc
cli
add
push
xchg
add
in
hlt
or
outsl
sahf
push
mov
and
pop
adc
int
mov
mov
cld
push
int3
mov
jnp
pop
adc
repz
and
inc
dec
cmpl
push
in
lock
push
xchg
push
mov
sbb
es
aas
mov
popa
clc
xor
mov
loop
xchg
movl
sub
push
stos
mov
faddp
mov
pop
cwtl
or
sti
outsl
dec
or
pusha
loop
add
push
sub
iret
jnp
cltd
incb
push
sahf
mov
leave
add
adc
repnz
mov
mov
pop
mov
jmp
push
addr16
ret
xchg
test
adc
loopne
or
dec
inc
pushf
in
xchg
daa
xchg
push
stos
push
and
push
fdivrl
cwtl
shll
movsl
add
std
lock
push
push
cmp
lods
cli
faddp
push
sbb
repz
jne
and
mov
ljmp
lods
cmpsb
out
je
ret
pop
ret
jg
test
fcompl
int
mov
push
in
sub
jno
jmp
lds
adc
pop
mov
jnp
fisubrs
xchg
adc
pop
mov
push
mov
push
jae
orb
popa
mov
xchg
es
pop
mov
mov
or
ds
call
jmp
fimuls
mov
mov
and
mov
shll
test
es
movsl
test
jle
inc
or
sbb
shlb
lahf
mov
pop
pop
ja
add
out
rcrl
lret
sbb
pop
ds
pushf
jecxz
jl
ds
push
inc
test
mov
stc
hlt
mulb
and
hlt
outsb
outsl
mov
idivl
inc
into
data16
push
add
in
repnz
xor
arpl
sub
push
add
imul
fstpl
loop
stos
mov
icebp
cmp
mov
out
push
xchg
scas
sti
enter
inc
insb
pop
je
sbb
dec
sub
movsb
mov
scas
ror
movsb
adc
sbb
sub
pop
subb
inc
mov
icebp
mov
xchg
jl
test
test
dec
aam
pop
pop
push
pop
cmp
jne
lahf
outsl
pushf
mov
jns
jb
xchg
rclb
mov
sub
mov
push
mov
or
and
cld
xor
inc
cwtl
cmp
mov
outsb
pop
jmp
mov
mov
lcall
inc
or
aad
ds
cmp
lods
fildl
push
ljmp
insb
sub
dec
mov
neg
arpl
mov
jb
loop
das
jb
movb
sub
sub
in
test
or
test
outsb
mov
jno
push
rcrl
inc
jno
mov
or
xchg
mov
out
aam
mov
mov
xchg
cmp
xor
add
lcall
or
scas
pushf
cmc
stos
aam
mov
bnd
lahf
andb
fcmovnbe
test
jne
ss
xchg
lcall
jg
out
fildl
stc
cmc
popa
pop
aam
dec
adc
bound
rcrl
jl
lcall
xchg
push
dec
pop
es
or
lret
pop
scas
scas
jecxz
bound
dec
loopne
push
outsb
es
dec
adc
add
sbb
xlat
adcb
mov
push
xchg
xlat
mov
add
sub
inc
mov
mov
enter
jb
data16
dec
xchg
pop
adc
xlat
or
push
and
dec
ret
imul
sub
lcall
test
xor
and
add
mov
shr
scas
sbb
jg
scas
aad
pop
push
movsb
push
jae
or
or
push
out
scas
inc
ljmp
jo
adcb
xchg
in
adc
adc
not
sbb
adc
or
jge
clc
sahf
jecxz
and
xlat
pop
mov
pop
mov
mov
ss
jo
out
das
sar
xchg
and
lock
pop
fdivs
rclb
lahf
add
or
and
in
dec
and
pusha
cmc
push
fisubrs
scas
mov
inc
stc
adc
test
inc
push
push
out
mov
xchg
aas
dec
pop
mov
mov
or
shll
insb
jnp
cmp
mov
mov
dec
jle
roll
lret
add
repz
mov
fstpl
test
pop
jmp
and
ss
xchg
sbb
shlb
popf
in
in
inc
lcall
int3
mov
cmovb
push
mov
addr16
test
mov
repz
mov
add
sbb
xor
or
testl
xlat
jnp
and
inc
mov
fstpt
sub
or
into
rcr
test
and
shl
test
dec
aad
mov
add
mov
pop
shll
cmp
fldl
in
icebp
rcrl
mov
mov
outsl
imul
pop
xchg
fs
rcrb
cli
ja
adc
dec
push
and
sti
push
scas
je
push
fcoms
mov
cmpsb
jo
insb
adc
cwtl
fs
mov
int
xorl
pop
xchg
mov
aaa
call
jle
hlt
setle
adc
mov
xor
xchg
mov
aad
cmp
fwait
mov
nop
arpl
ja
sbb
xor
pop
cmp
mov
adc
shlb
lods
inc
jno
jle
lahf
sar
pop
cmc
adc
jge
jg
xchg
cmp
jno
jmp
es
in
aas
or
jno
insl
aam
iret
stc
push
add
ss
sbb
sbb
and
xchg
int
xlat
pop
mov
orl
dec
sbb
imul
lret
dec
stos
jno
fnstenv
or
dec
mov
mov
mov
ds
addb
xor
stc
sbbl
jmp
popa
out
mov
icebp
sub
roll
nop
iret
xor
cmp
fmuls
xor
xor
and
insl
cltd
add
mov
faddl
xorb
ficompl
and
imul
test
aad
mov
sub
dec
cld
aaa
lds
mov
lahf
loopne
shrl
rorl
pushf
cmpsb
push
lahf
cmp
call
sbb
cmp
imul
mov
or
aas
push
sbb
jle
or
inc
mov
pop
mov
aad
push
aaa
nop
mov
push
jb
mov
cmp
daa
aad
sub
push
hlt
dec
icebp
and
imul
addr16
mov
dec
cmp
add
int
adc
pop
sbb
shll
aam
and
sbb
ja
insb
mov
adc
jecxz
cmc
leave
add
cmp
lds
mov
mov
lahf
repz
cmc
push
aas
cld
mov
cmp
movsl
sti
shl
mov
loope
xor
test
sbb
or
into
jl
iret
jge
test
sub
and
jnp
and
lahf
dec
jnp
sbb
push
pop
pop
mov
stc
sarl
in
lods
cwtl
fs
cmp
lock
shrl
cmp
arpl
adc
aas
popf
ljmp
push
mov
jecxz
in
fscale
out
mov
push
jnp
imul
push
fbstp
into
addb
testb
inc
rcrb
fldl
ret
data16
movsl
leave
inc
arpl
dec
sti
ja
sub
out
ret
js
not
ljmp
loopne
mov
push
fnstenv
pop
aas
hlt
sub
jb
push
pop
mov
mov
arpl
pusha
lahf
cmp
das
fildll
xchg
adc
mov
adc
lret
xchg
mov
or
repnz
mov
leave
into
sahf
and
mov
xchg
jl,pt
leave
xor
jmp
rorl
jnp
push
ret
push
cli
mul
mov
sub
and
mov
fistl
mov
clc
hlt
adc
add
mov
mov
jmp
shl
hlt
cs
or
xor
adc
mov
movsb
dec
xchg
cmp
movsl
xchg
fwait
out
jns
adc
or
shr
out
push
fs
add
sub
or
cmp
cmp
pop
ja
mov
adc
in
fucom
cltd
das
sarb
sbb
cmp
add
dec
data16
dec
insb
scas
es
sar
dec
sub
cmpsb
imull
pop
sbb
jno,pn
pop
inc
or
add
ja
sbb
dec
xchg
sub
mov
mov
sub
in
imul
sub
or
mov
sbb
aam
add
imul
mov
adc
ljmp
addr16
dec
sbb
jne
push
jge
cmp
push
xchg
jb
mov
fcompl
xchg
pop
adc
adc
mov
in
dec
add
ds
xor
dec
adc
cmp
bound
xchg
clc
lods
add
and
mov
sbb
mov
adc
mov
ret
cmp
lods
mov
ss
int3
and
jbe
sub
test
add
enter
in
rorl
pop
or
cmp
lret
lods
mov
adc
inc
xchg
rolb
jno
test
jg
cwtl
mov
adc
ja
lods
aam
aaa
pop
pop
mov
pop
xlat
daa
fnstenv
jl
test
hlt
adc
xchg
addl
andb
sub
popa
adc
cmp
cmp
mov
stc
jle
in
hlt
dec
lock
or
sub
enter
sbb
roll
dec
sbb
or
pop
enter
aaa
sub
cmp
sub
xor
adc
movsl
add
jns
inc
imul
ja
or
mov
sub
loopne
mul
push
xchg
inc
mov
mov
adc
mov
xchg
push
mov
push
push
bound
test
lret
imul
add
xor
hlt
add
lret
mov
add
js
xchg
jno
je
inc
imul
sbb
xor
pop
dec
inc
mov
or
andl
mov
xchg
lret
push
jbe
and
push
xchg
sar
dec
clc
push
push
adc
pop
sbb
loop
mov
clc
sbb
cmp
sub
cmp
mov
dec
cmp
add
ja
pop
cmpsb
shll
xor
fildl
cld
lods
xchg
in
and
ret
xchg
dec
jb
into
divl
rclb
ficomps
mov
cmpsb
jmp
cmp
inc
cwtl
lret
cld
ret
ljmp
inc
push
sub
push
cmp
sarb
mov
push
int
sub
pop
mov
je
jle
sbb
loopne
xor
push
divb
sti
cwtl
movsl
out
and
orb
in
lret
sub
cwtl
pop
das
push
rorb
pop
imul
mov
dec
sbb
lea
sbb
jae
ljmp
dec
mov
mov
push
push
les
mov
add
and
lock
mov
push
aam
aaa
lret
jbe
jo
or
lods
enter
mov
rcrb
and
scas
outsl
pop
cs
xor
xchg
and
pop
mov
pop
ljmp
div
add
nop
call
jmp
sbb
in
in
outsl
sub
or
pushf
dec
or
push
inc
push
or
inc
add
inc
pop
xor
jg
xorb
in
dec
cmp
xchg
or
xchg
push
jns
mov
call
add
sahf
jb
push
push
lcall
pop
pusha
jns
aas
mov
pop
jge
inc
dec
add
outsl
jnp
jo
jecxz
stc
arpl
sbb
mov
sbb
pop
hlt
dec
scas
sub
xchg
mov
xlat
sub
pop
cmc
bound
sbbl
cltd
nop
pop
jb
int3
arpl
mov
jle
call
out
out
cli
and
pop
sub
test
jo
test
stos
or
faddl
mov
sbb
fistpl
pushf
pop
dec
sub
push
test
ffreep
std
add
lret
xchg
std
fstps
push
pop
les
push
push
cld
jge
arpl
pop
or
pop
frstor
lods
and
das
clc
add
xor
push
sbb
mov
dec
mov
push
daa
add
shlb
mov
fnstsw
in
or
push
sbb
mov
lret
add
mov
fldcw
jae
imulb
adc
pop
scas
dec
xchg
jl
scas
or
fistpll
arpl
pop
test
inc
mov
sbb
adc
inc
sbb
movsl
cli
fnsave
xchg
cmp
push
ret
jnp
xor
xchg
inc
ds
push
lods
add
ds
push
out
dec
xchg
pop
jne
scas
jl
adc
jo
adc
fmuls
cli
inc
pop
cmp
dec
pusha
outsb
mov
shlb
imulb
std
dec
sub
subb
ret
jb
fisttpll
jbe
mov
out
popl
jl
mov
pop
mov
or
add
pushf
lods
aam
push
xorb
out
adc
mov
xor
lahf
push
cmp
mov
or
stc
popf
cltd
cmc
and
stos
pop
xchg
lcall
data16
lock
mov
sub
add
mov
and
or
test
inc
inc
mov
push
mov
push
sarb
das
cmp
push
pop
inc
ret
sti
mov
test
xor
cld
xchg
incb
sub
inc
sbb
jp
push
mov
xlat
hlt
loope
lods
xchg
pop
les
je
insl
test
imul
inc
in
popa
cwtl
mov
in
adc
jbe
add
xchg
mov
add
ljmp
in
frstor
andl
xchg
insb
cmp
cltd
jo
sbb
imull
jne
cmp
add
outsl
loop
outsb
xchg
loop
or
jg
pop
and
popa
mov
adc
les
jle
cmp
jmp
ja
int
shr
les
pushf
inc
adc
rcrl
xchg
popa
pop
inc
loop
loop
jp
out
stc
adc
aad
mov
arpl
test
add
test
inc
pop
or
ret
dec
idivl
ljmp
adc
and
or
or
movsb
enter
icebp
xor
xchg
push
or
test
mov
or
jb
cmp
cmp
shl
stos
flds
int
jl
jecxz
inc
inc
inc
xchg
mov
and
roll
je
jge
push
ds
cmc
add
mov
cwtl
inc
mov
aas
sub
sub
int3
stos
fcoms
repnz
xor
pop
cmpsb
popf
jns
adc
or
mov
pop
mov
imul
fsubrs
fdiv
in
mov
mov
out
jo
jge,pn
pushf
out
add
inc
call
lods
sbb
sbb
adc
imul
push
ljmp
xor
stos
sahf
push
testl
xchg
mov
mov
pop
ja
imul
and
push
cwtl
dec
lods
lret
mull
cmp
fistl
popa
test
mov
fbld
bound
mov
loop
sub
cmp
mov
shlb
adc
dec
fwait
lret
nop
into
rclb
sub
xchg
xor
pop
mov
sbb
inc
jnp
pushf
mov
loope
and
out
movsl
sbb
mov
inc
daa
push
xlat
ljmp
and
outsl
into
jge
rcr
sbb
lods
stc
inc
adc
push
pop
push
ss
xchg
repnz
shlb
cmpsb
cmp
ds
out
icebp
push
outsb
cmpsb
cli
jle
mov
sbb
loopne
test
sub
sbb
push
add
sbb
pusha
nop
fs
inc
loop
repz
pop
mov
push
fldenv
sub
enter
fildl
cmpb
xor
leave
cs
pusha
inc
loop
sbb
cmp
or
mov
mov
sbb
push
pusha
xchg
fsubs
cwtl
mov
mov
mov
in
pop
sub
in
cld
cld
bnd
cld
imul
jmp
fcompl
sbb
push
mov
jle
lea
sub
popa
mov
pop
rol
pop
loop
lret
jo
rcll
dec
jge
xor
add
add
imul
jae
push
shll
jle
jno
sub
xor
daa
sbb
cmpsb
add
mov
or
jo
scas
fs
mov
ret
cmp
mov
dec
add
jbe
xchg
adc
pop
dec
popl
xchg
std
je
and
inc
sbb
and
insb
pop
clc
push
xchg
pop
sub
repz
shl
fs
pushf
out
je
dec
pop
cmp
stc
and
out
fistps
dec
and
adc
jb
add
in
fld
dec
cmpsb
pop
jecxz
mov
mov
cltd
jp
loope
pop
adc
sbb
das
mov
xor
inc
mov
push
out
movsb
inc
adc
sbb
xchg
and
rorb
dec
test
jge
std
int
cmp
fistpl
xor
loopne
push
xorb
mov
in
pusha
inc
pop
push
xor
and
inc
mov
aad
xor
cmp
jne
sti
lahf
gs
pop
mov
mov
mov
dec
xor
shll
add
pop
cld
jno
pop
jle
fs
pop
lds
sub
cmpb
repnz
cmp
mov
pop
stos
pop
dec
dec
or
test
stos
mov
inc
aam
fisubrs
fcomip
lds
cld
xor
mov
or
or
out
cmp
mov
mov
fs
ja
lods
sbb
mov
push
pop
xor
repz
sarb
and
mov
and
push
mov
mov
mov
loop
dec
mov
pop
aaa
pop
movsl
fsubl
das
jnp
inc
out
fcomps
dec
insb
pop
scas
mov
loope
hlt
in
adc
or
sbb
dec
out
insl
xor
mov
push
cmp
sbb
inc
imul
fistl
rorl
or
ljmp
pushf
mov
push
into
mov
popa
scas
pop
cs
ror
fists
jg
jbe
inc
mov
test
and
xor
add
xchg
push
inc
push
ror
movsb
xchg
fldenv
sub
pop
cmpxchg
xor
push
jg
std
frstor
sub
lock
mov
lcall
js
mov
andb
lcall
in
fcompl
pop
mov
and
jnp
cmp
or
ja
pop
ret
dec
pop
popw
and
mov
jmp
insb
scas
pop
out
xchg
xchg
sub
add
sub
cmp
mov
jge
in
lock
sub
int3
dec
lcall
sbb
sbb
dec
pop
clc
sahf
and
fiaddl
push
xchg
lds
aam
mov
pop
pop
sub
jmp
cmp
stos
inc
in
pop
fmull
jl
mov
gs
outsb
jno
gs
adc
sbb
mov
sbbl
adc
cmpsb
out
lret
andl
inc
aam
mov
inc
mov
imul
jae
mov
or
out
push
or
add
xlat
sub
sub
mov
adc
inc
mov
add
test
jp
lods
rolb
inc
jp
xchg
mov
inc
jo
push
rol
fwait
add
icebp
out
subb
fists
movsl
add
stos
xor
lea
enter
mov
and
pushf
cmp
sbb
fldenv
in
cmp
push
lahf
mov
inc
cs
push
js
sbb
notb
sub
push
xchg
sub
cmc
popa
xor
sti
lea
sbb
cltd
adc
ret
imul
mov
icebp
jne
aaa
ss
xor
in
jge
or
movb
or
out
jo,pn
in
add
outsl
lock
push
inc
fadds
or
pop
scas
xchg
xchg
fwait
xlat
es
pop
jmp
fs
mov
jge
sbb
out
in
dec
jg
add
fiaddl
mov
adc
shrb
lahf
sbb
dec
rorb
int3
hlt
aaa
fsubrl
jbe
xor
icebp
jno
jle
js
ss
push
push
inc
mov
testb
push
pop
stc
pop
ja
push
and
pop
mov
push
sbb
lea
dec
pop
xor
or
mov
push
shlb
mov
fucomp
stos
pop
das
clc
push
or
mov
mov
inc
into
inc
or
dec
jl
psllw
imul
aas
shrb
cld
push
jmp
adc
sub
test
stc
les
or
outsb
mov
fisttpl
and
sbb
dec
xchg
push
add
fistl
mov
int
out
push
in
mov
das
pop
mov
inc
leave
icebp
mov
xchg
jmp
or
jbe
pop
lods
popa
call
in
xchg
cld
fcomps
adc
sbbl
jge
pop
mov
enter
jbe
pop
or
sbb
push
mov
xor
pop
popf
adc
mov
ss
xlat
mov
sub
insb
cli
xor
xchg
inc
fs
repnz
xchg
jmp
mov
out
push
xorl
sbbl
lds
adc
pop
mov
or
insl
add
test
popf
xchg
addr16
jb
adc
outsb
stc
stc
hlt
cld
imul
xor
sbb
cmpsl
cmp
popl
push
popa
loope
and
inc
adc
jp
jl
xchg
ret
mov
mov
cmp
mov
cmp
les
fwait
push
hlt
test
jp
xchg
cmp
test
out
fisubs
sahf
mov
mov
cs
mov
dec
cmp
inc
mov
shrb
leave
sub
out
das
mov
lock
push
jo
movsl
cmp
in
das
xchg
dec
popf
xchg
ja
imul
jmp
fdivrl
ret
xor
test
shll
lret
inc
sub
imul
jl
mov
push
add
outsb
or
mov
mov
ficompl
leave
clc
and
mov
dec
jle
notl
mov
ljmp
pop
nop
adc
popa
adc
jg
stos
pushf
fcomps
icebp
jle
inc
cmp
dec
int
dec
and
arpl
dec
xor
pop
push
mov
mov
in
decl
aas
pushl
dec
mov
out
aam
cmp
das
je
sub
mov
fdivrs
sarl
sbb
pop
int
jo
and
fistl
push
jmp
sbb
fistpll
mov
inc
outsl
and
out
push
mov
mov
dec
jmp
mov
jo
jecxz
xchg
jp
int
sbb
ficoms
movsb
pop
and
xor
xor
loopne
shll
lret
mov
push
je
lods
pop
jmp
xor
xor
call
rcrl
stos
cmpsl
mov
in
cmp
mov
cmp
xchg
inc
mov
xchg
insb
sub
inc
add
les
jl
icebp
das
stos
add
sub
daa
add
lods
add
push
or
divl
sub
jae
lret
dec
xor
addr16
sahf
sar
stc
add
xor
push
push
insb
inc
mov
ljmp
fwait
dec
jmp
mov
out
mov
jmp
das
add
adc
fdivl
jecxz
test
mov
push
push
or
mov
xor
hlt
dec
push
xor
fidivs
cmp
enter
lret
les
xchg
inc
or
stos
sbb
dec
mov
cmp
lret
sub
dec
jmp
or
push
mov
std
cmp
in
daa
nop
xchg
aam
push
pop
out
adc
cwtl
sti
fwait
cli
pop
inc
add
mov
cwtl
rolb
cmp
mov
daa
icebp
push
mov
bound
push
movsl
xchg
dec
sarl
dec
shll
jg
inc
idivl
mov
inc
das
mov
idiv
add
std
sub
inc
mov
das
rol
xchg
cltd
fnstcw
xor
mov
outsl
xorl
repnz
cmp
xchg
mov
pop
push
push
sbb
mov
pusha
mov
int3
clc
xabort
pushf
and
sahf
sub
adcb
aas
sub
dec
aad
adc
test
ret
jecxz
movb
sbb
in
jae
into
mov
xchg
cwtl
xor
cmp
sbb
cltd
lahf
ljmp
je
jl
testb
outsl
or
orb
or
xor
xor
lahf
divb
mov
js
mov
jge
add
jg
adc
mov
das
fiadds
cli
call
xchg
stos
sahf
popa
ret
sbb
ljmp
in
das
pusha
loop
loop
lods
add
or
mov
pop
pop
cmpsl
daa
leave
sbb
jmp
test
and
in
xor
mov
ds
xchg
cmp
cld
push
sub
out
dec
pop
int3
icebp
mov
mov
cmp
stos
mov
push
loop
pop
nop
jb
dec
loope
sbb
and
inc
icebp
fsubl
testl
popf
lret
sbb
xor
cmp
mov
inc
inc
or
xor
sti
jns
outsb
fbstp
sub
sub
push
sub
leave
jecxz
mov
orb
aaa
idivb
sarl
sti
test
push
vpmacssdd
sub
mov
call
iret
lock
pushf
iret
and
push
aas
nop
mov
add
and
ret
xor
xchg
jecxz
test
icebp
bound
cmpl
inc
xchg
subl
cmp
or
rorb
adc
jns
sbb
mov
lret
test
mov
fistl
fisubrl
out
and
adc
sub
xchg
dec
cwtl
adc
test
rclb
or
iret
dec
push
sub
fildll
cmp
gs
or
movsl
and
fistps
sub
mov
movl
mov
into
out
pop
outsb
xchg
xchg
xchg
in
ds
xchg
cmp
test
mov
std
subl
ds
xor
std
add
rolb
xchg
lret
sub
call
jbe
stc
scas
bound
push
in
lahf
icebp
lahf
jecxz
jnp
hlt
adc
xor
mov
pop
loope
out
cmp
jno
sbb
out
jno
mov
mov
inc
mov
xchg
mov
es
fstps
adc
jbe
aam
stos
lret
std
repz
cmp
xor
jmp
fstpl
idivb
or
test
repz
push
aaa
sub
push
roll
and
push
inc
push
push
sub
jecxz
mov
mov
jo
into
jge
push
xor
sub
dec
pusha
jmp
xchg
mov
add
ret
shrb
enter
test
xor
pop
test
inc
or
into
mov
inc
jns
es
cld
lret
cmp
xrelease
je
je
fdiv
inc
lock
rcll
fwait
std
or
mov
aam
cmp
inc
inc
insb
divb
adc
mov
inc
std
cmc
lea
push
jno
push
scas
or
jno,pn
inc
dec
addr16
repz
bound
push
in
mov
push
push
mov
aas
push
mov
repnz
mov
test
mov
jns
loop
loop
push
mov
jb
lret
jecxz
mov
testb
mov
push
ficoml
xor
ds
or
mov
mov
inc
fucom
lret
call
mov
push
sbb
insb
test
and
imul
ret
filds
std
jle
out
loope
shll
pushf
inc
jl
pop
sub
clc
and
jecxz
mov
and
fistl
push
leave
loopne
push
icebp
push
imull
dec
and
mov
xor
mov
mov
cli
jb
or
es
push
lock
les
xchg
cmp
andb
or
inc
mov
cmp
stos
int
mov
jae
push
popf
push
push
sub
lds
movl
les
jle
add
adc
std
bound
test
stos
sarb
xor
sbb
adc
fcmovnb
sbb
lock
xlat
ret
inc
insl
sbb
fiadds
stos
fists
in
adc
out
or
out
sbb
lea
mov
imul
fildl
imul
pop
out
or
testb
iret
xor
or
sbb
sub
jno
and
inc
sbb
mov
push
jl
loope
iret
das
loop
rorl
std
cltd
or
or
gs
ret
cmp
cmc
push
sbb
mov
dec
push
push
sub
xor
lcall
leave
mov
sbb
mov
adc
leave
xchg
sub
cmpsb
xorl
les
repnz
rcrl
cs
sub
in
sub
outsl
scas
shr
xchg
xlat
pop
sub
and
jnp
inc
in
xor
mov
inc
loopne
xchg
loop
and
shlb
add
das
hlt
fsubs
das
std
xchg
and
repnz
dec
mov
push
mov
out
cmp
dec
mov
jnp
and
ja
inc
xor
dec
fsqrt
sti
sarl
into
push
nop
lods
cmc
jl
xor
ds
test
inc
repz
mov
xchg
add
xor
xchg
shrl
inc
mov
ss
jecxz
add
movsb
jecxz
or
gs
lock
push
jne
shlb
mov
sub
mov
or
mov
leave
mov
loope
subl
mov
movsb
and
daa
repz
stc
insl
in
stos
in
test
loopne
xchg
push
mov
out
fdivrs
cwtl
mov
das
pop
xchg
ret
mov
mov
inc
adc
out
jne
sbb
push
mov
orl
loope
inc
movsb
or
push
rcl
mov
loope
adc
xor
dec
dec
sub
movb
in
test
mov
bound
push
stos
sbb
jp
jns
jns
cmpsl
sbb
clc
jns
xor
pop
pop
push
jno
cmpsl
clc
imul
nop
mov
xor
notb
mov
mov
loop
cltd
add
aad
inc
lods
cmp
jne
imulb
lahf
rorl
inc
cmc
mulb
clc
pop
cmp
cld
sub
repz
ret
ret
adc
sarb
int
addr16
push
mov
enter
dec
and
movsb
inc
adc
push
sub
flds
jge
int3
mov
jnp
push
mov
mov
adc
pusha
or
imul
leave
mov
jae
shrb
mov
add
aam
jns
insb
es
dec
aam
clc
jg
jmp
pop
xchg
rcrl
mov
fwait
pop
ror
xor
or
in
popa
in
cltd
pop
xchg
jl
fwait
cmp
mov
jg
mov
mov
add
sub
bswap
adc
or
lock
push
push
ret
sub
std
adc
adc
data16
pop
pop
les
testl
jno
push
das
cmpsl
jle
sub
imul
lods
mov
sbb
dec
mov
insl
cmpsb
inc
mov
mov
cwtl
jle
in
mov
inc
xor
mov
lahf
jge
inc
xchg
stc
cmp
inc
inc
pop
jle
fs
scas
mov
xchg
mov
push
bound
mov
jnp
das
mov
in
fs
dec
ds
sbb
xchg
pop
gs
dec
sbb
jge
loop
adc
push
xchg
dec
ss
push
push
incl
sahf
repnz
lds
test
cmp
cmp
stos
push
lret
imull
movsb
lret
sub
and
repz
mov
call
test
lcall
inc
pop
aam
lock
mov
test
das
movsb
scas
xchg
cli
fidivrs
cs
cmc
lret
lds
push
xchg
cli
pop
xchg
hlt
push
xor
push
movsl
cmpsl
pushf
mov
ret
lods
mov
inc
push
jecxz
sub
jmp
loop
hlt
pop
xchg
xor
cmpsl
and
ret
mov
imul
jbe
hlt
jbe
fs
adc
sar
mov
jg
es
addl
cld
loope
lods
sbb
pushf
test
jmp
popa
mov
mov
cmpb
loope
pop
jne
loop
sti
adc
dec
or
stc
pusha
push
mov
lds
test
repz
push
dec
mov
xor
dec
negb
mov
add
test
ja
fsubrl
ja
jo
mov
out
clc
and
sti
pop
pop
imul
cmpsb
cmp
push
or
jbe
lret
jg
bswap
stc
mov
lahf
ljmp
jnp
xor
test
outsb
push
sbb
lods
packssdw
xchg
movsl
jns
sbb
or
push
popf
aas
jp
cld
cli
sub
mov
mov
repz
ljmp
jl
movsb
xor
imulb
xchg
mov
ja
cld
adc
mov
cltd
xchg
shll
push
imul
fnstenv
nop
imul
sbb
or
jno
jnp
xor
jecxz
jmp
xor
add
inc
pusha
fimuls
outsl
lret
xor
mov
mull
or
jecxz
and
in
adc
ret
push
xor
shrl
fs
mov
sub
push
sbb
test
lods
add
aas
iret
repz
daa
jns
jge
test
jae
adc
xor
aad
cmp
pop
clc
and
cmpsl
loopne
sbb
inc
push
out
mov
and
xor
in
push
sbb
fadds
int
or
jo
notl
pop
cli
xor
ljmp
cmc
loop
subl
lds
jno
fs
in
fwait
insl
push
cmp
lods
push
jns
add
xchg
adcl
iret
jns
vpaddsw
std
js
gs
jae
fsubl
mov
repnz
push
push
jbe
sti
outsb
jne
repnz
rorb
bound
ss
xchg
ja
daa
sub
add
stos
fisubs
addr16
test
subl
xchg
enter
cmp
add
fstps
mov
test
jmp
xor
cmpb
lahf
test
cltd
dec
mov
inc
mov
into
loope
pop
xchg
inc
mov
sub
pop
pop
sbb
dec
hlt
add
lea
jnp
cs
js
in
push
adcl
hlt
mov
dec
mov
data16
lahf
mov
mov
jbe
ss
and
ds
rolb
pop
xchg
or
sub
fistpl
lret
sbb
xchg
xor
push
outsb
pop
mov
add
push
movsl
sub
lahf
jmp
sub
and
mov
cld
mov
xor
cmpsl
sbb
dec
sti
and
scas
ss
cld
push
dec
call
sbb
pop
push
imul
iret
jle
sub
pop
xor
fadd
sub
aad
pop
add
mov
mull
sub
pushf
shll
mov
mov
and
sti
jb
popa
daa
loope
out
inc
sbb
out
fwait
mov
sbb
push
inc
cmc
out
push
fwait
xor
xchg
cld
sar
dec
dec
pop
hlt
jg
and
mov
dec
sbb
pop
add
mov
cmp
call
neg
out
and
orb
jge
into
js
fidivrl
insl
aam
sbb
rorl
dec
push
push
xchg
inc
idivl
adc
call
pusha
push
loop
sbb
hlt
lret
xor
mov
out
pop
xchg
icebp
rcl
mov
mov
xchg
addr16
sbb
jnp
cwtl
or
andl
outsl
dec
or
cmp
pop
xor
stc
mov
add
scas
test
orl
lods
or
mov
add
adcb
inc
inc
stos
aas
inc
enter
stos
shr
movsb
inc
out
cmp
stc
jmp
xchg
pop
mov
bound
fsubrl
pop
pusha
push
sbb
xchg
fistpll
mov
test
xchg
inc
mov
or
imul
stos
rclb
lcall
mov
les
ficoml
mov
mov
outsl
pop
fsubrl
xlat
mov
sub
fmul
sarb
cld
icebp
js
cmc
aas
imul
sub
push
idivl
call
or
shl
mov
test
xor
pop
sub
sub
movsl
sar
orb
fwait
xchg
jns
dec
pop
fnstsw
jmp
jo
cltd
shr
lods
mov
pop
scas
nop
jecxz
shll
adc
push
out
clc
cli
addr16
aam
sarb
sbb
in
out
lahf
imul
repnz
push
jl
push
sub
xor
jns
sub
adcb
leave
dec
xchg
push
subb
jb
inc
push
push
test
pushf
mov
nop
fldt
cmp
andb
jns
dec
sub
or
lods
not
xchg
jns
jp
mov
adc
mov
stc
inc
inc
jns
mov
enter
push
ret
mov
mov
pusha
stos
add
fidivs
cmc
push
pusha
or
mov
adc
mov
add
sti
cwtl
out
faddl
or
mov
or
call
aad
jg
cmpsb
cmp
addl
jmp
dec
xchg
push
or
mov
adc
mov
lds
mov
jg
and
iret
push
xor
jle
adc
ret
mov
xchg
scas
push
test
xlat
mov
sub
sub
sbb
lds
out
pop
arpl
ds
cmpsl
fpatan
lcall
push
ror
imul
mov
push
jbe
repnz
add
imul
lret
es
jmp
sub
in
mov
das
fidivrs
std
neg
cmpsb
mov
movsb
xor
fnstenv
sub
test
popl
jge
dec
pop
pop
xchg
icebp
push
xor
mov
enter
cmp
and
fdivs
fs
pop
clc
ret
sub
mov
imul
sub
push
xchg
or
cli
or
sbb
bound
lea
stos
jne
mov
bound
jecxz
cs
sbb
addr16
or
jb,pn
dec
add
dec
cld
mov
inc
popa
sbb
aad
sbb
push
out
mov
inc
mov
shll
fs
sbb
sbb
daa
test
mov
cmp
mov
add
stos
mov
test
and
in
pop
adc
sbb
sbb
scas
xchg
mov
adc
xchg
xchg
fsubr
xchg
xchg
push
lcall
add
mov
pop
cmp
mov
dec
rorb
mov
flds
cli
loopne
sbb
mov
mov
dec
clc
mov
andb
loope
adc
cld
shlb
stos
jb
stos
dec
fdivp
mov
stos
pop
mov
jbe
mov
xlat
aas
inc
push
pop
mov
loopne
jmp
sbb
pop
stos
gs
dec
or
sub
mov
inc
lret
inc
push
int
stos
pop
mov
stos
fwait
mov
mov
outsl
sahf
jge
mov
pop
xchg
and
andb
arpl
xor
insb
lret
lods
in
scas
popf
sub
in
cmp
pop
pop
mov
mov
movsb
fs
add
push
sbb
mov
outsb
imul
ret
repnz
jecxz
sti
shrb
sub
jmp
ret
in
push
repz
jae
in
das
cmp
inc
mov
push
adcb
push
push
cmpl
pop
sbb
sub
sbb
icebp
rcll
testb
insb
outsb
jle
aaa
arpl
es
ss
adc
fldl
inc
leave
mov
test
xchg
clc
negl
cmp
in
push
fisubrl
and
iret
or
out
and
xchg
dec
fcoms
mov
push
aad
enter
sbb
add
aas
mov
lods
fimuls
pop
addr16
loopne
sar
fadds
push
sbb
cltd
icebp
imul
jmp
lcall
sub
scas
mov
inc
insl
pop
ret
mov
mov
jge
mov
loope
test
shlb
add
sti
out
imul
cmovg
jno
cmp
lods
or
daa
jge
sub
add
push
imul
jne
aaa
and
adc
cmp
adc
jg
movsb
in
mov
das
imul
mov
pop
popf
cmp
or
lods
push
pop
inc
mov
xor
add
lods
xchg
and
sbb
pop
cli
rcl
mov
jo
jne
mov
inc
adc
mov
xchg
ret
arpl
pop
xchg
gs
ja
sbb
lahf
loope
push
xchg
push
mov
les
loop
sub
mov
es
sbb
int
jg
popf
loope
mov
fsubrs
out
cs
push
addr16
push
ret
sbb
in
push
stos
pop
and
subb
es
lods
gs
or
adcl
xor
mov
inc
jp
sbb
outsl
xlat
xchg
jo
popf
ss
subb
das
movsb
and
das
mov
pop
adc
xchg
add
xchg
xchg
mov
cld
mov
push
addb
in
push
adc
mov
add
clc
mov
test
xchg
lds
iret
cld
dec
scas
push
add
or
xchg
ficoms
xlat
or
xor
iret
adc
mov
gs
sbb
es
hlt
lock
adc
mov
cmp
es
test
aaa
jb
aam
in
scas
mov
cmp
stc
cli
mov
arpl
sbb
or
inc
lcall
dec
dec
jns
push
mov
push
jl
adc
nop
adc
cld
jnp
mov
lods
fcompl
and
pop
push
or
xor
fidivl
int3
out
push
lcall
mov
sub
lcall
aam
hlt
stos
je
cld
pushf
into
lods
push
mov
xchg
cmc
jmp
mov
movsb
pop
cmpsl
inc
mov
aad
mov
test
cmp
inc
scas
out
lcall
pop
movsl
adc
scas
pop
add
mov
aaa
fldl
dec
push
pop
repz
cmpsb
cld
repz
jnp
and
jae
jl
fisubrs
mov
cmp
xor
jmp
inc
imulb
inc
aad
sub
test
movsb
jge
inc
push
jbe
lahf
push
mov
loopne
ss
sub
shlb
arpl
push
in
lock
inc
mov
fiaddl
jle
loop
subb
add
scas
loope
pop
push
and
mov
out
rclb
jnp
addb
sbbb
mov
adcb
and
inc
addl
out
cmpb
push
mov
pusha
cltd
add
xchg
push
ret
mov
lret
xor
and
shlb
sbb
lods
movsb
xor
push
ror
cwtl
xorl
mov
inc
imul
bound
int
inc
xor
fisttpl
pop
icebp
and
pop
iret
sahf
sbb
pop
add
or
sub
lret
jo
out
sub
push
sbb
repnz
aaa
lret
js
test
pop
pop
nop
insb
out
push
addr16
push
adc
mov
loop
orl
loopne
mov
sbb
ja
lock
add
jmp
sbb
andb
mov
sub
jmp
data16
idivl
loope
stos
jle
iret
cs
in
jae
mov
sub
mov
outsb
inc
cmp
add
push
inc
ret
dec
bound
lods
mov
roll
mov
mov
repnz
xchg
xchg
mov
jno
popf
ljmp
loop
ds
loop
cmp
sahf
aas
dec
sbb
inc
cmp
addl
repz
rcll
mov
jmp
loopne
shlb
stos
jmp
outsl
mov
ret
sbb
je
dec
lea
pop
test
lea
and
das
xchg
cmp
cmpsb
movsb
mov
aad
jcxz
aad
popf
mov
push
mov
push
test
pop
xchg
adc
shl
dec
mov
cmp
cmp
aam
xchg
or
sbb
gs
loopne
lahf
jmp
adc
lock
sub
ja
es
adc
cmp
lahf
jge
gs
jg
int3
jp
popf
adc
mov
nop
xor
xchg
cmp
ret
jae
out
inc
aas
push
mov
in
jg
jo
fisttpl
lea
inc
and
push
xchg
repnz
stc
jb
sbb
sub
imul
push
fwait
xchg
jno
or
imul
xchg
mov
push
dec
les
add
aad
stos
cltd
push
movsb
pushf
ret
jge
faddl
das
mov
stc
and
xor
rclb
pop
adc
pop
push
sbb
push
out
push
cmpb
addr16
cmc
add
pop
fisttps
ds
popf
sub
xor
add
mov
shrb
sbb
xchg
mov
rcl
and
fnstsw
or
jo
push
cmp
mov
inc
ja
xor
fs
dec
int
in
dec
jge
mov
jecxz
test
jle
aam
mov
sti
mov
jp
cwtl
inc
add
or
rorl
inc
in
rorl
dec
sub
out
xchg
test
data16
mov
jbe
mov
adc
xor
test
xchg
jge
lock
test
test
imul
inc
stos
cmp
nop
pop
aas
lea
lock
sbb
rcrb
hlt
and
mov
imul
xchg
jge
ret
cmp
lahf
mov
xor
inc
jns
movsl
pusha
pop
in
sarl
mov
xchg
pop
les
push
xchg
cmpsb
and
insl
dec
mov
and
out
xor
arpl
ljmp
test
mov
mov
dec
in
test
popa
call
rclb
lods
jg
outsl
mov
adc
and
test
pop
dec
addr16
mov
loopne
pop
push
lret
xlat
xlat
inc
iret
fiaddl
xchg
sbb
jg
aam
icebp
xor
scas
inc
mov
cmp
pusha
xchg
cmpb
xchg
jno
fbld
mov
pusha
ds
and
jmp
mov
mov
xchg
sub
mov
push
ds
adc
pop
cld
push
and
out
ja
mov
sahf
scas
out
outsb
sub
outsb
aas
je
xchg
dec
mov
dec
add
lahf
movsl
sub
xor
imul
push
push
sub
and
inc
movsl
and
inc
ljmp
and
or
push
and
mov
mov
cmp
mov
or
cmp
pop
cmp
lahf
fs
jns
jmp
cltd
adc
je
or
add
sub
cmp
in
lret
pcmpeqw
xchg
and
scas
and
push
adc
mov
out
mov
pop
cmp
lea
lods
push
xchg
pop
pop
push
test
mov
test
fidivrl
lea
add
jcxz
jae
out
mov
incl
push
xor
mov
push
xchg
gs
js
push
je
fadds
adc
lock
insl
ljmp
xor
out
scas
comiss
repz
testb
xchg
lods
dec
nop
das
or
movsl
mov
call
dec
push
jne
dec
cmpl
pusha
jp
leave
inc
jo
lret
fists
adc
imul
fcmovnbe
mov
js
ljmp
jp
push
pop
mov
xlat
cmpsb
in
and
das
fistps
jae
outsl
push
imul
out
lods
push
cmp
jnp
clc
gs
fmull
rclb
mov
adc
pop
movsl
sbbl
mov
push
mov
in
mov
pop
mov
jge
adc
nop
jo
call
test
shrd
shll
mov
dec
jb
add
cld
mull
aas
ss
and
dec
icebp
imul
inc
jbe
sarb
int3
adc
out
mov
sbb
test
pop
jl
nop
jo
mov
mov
cmp
movsl
push
jne
popa
insb
iret
xor
test
pop
mov
shl
sbb
mov
pusha
mov
je
pushf
jns
xor
cld
cmp
mov
xchg
mov
sub
daa
inc
les
cwtl
test
dec
pop
out
movsb
push
pop
inc
aad
lock
in
notb
stos
cmpsb
cwtl
add
ret
push
adcl
push
and
mov
out
mov
test
gs
sbb
pop
pop
ret
push
repz
int
xor
mov
mov
repz
rcll
add
icebp
mov
sahf
fdivl
inc
leave
adc
add
lds
dec
adc
subl
stos
xchg
pop
es
mov
pop
xlat
xchg
leave
cmp
andl
rorl
mov
jnp
mov
test
xchg
fwait
dec
les
xchg
mov
and
stc
sahf
fpatan
adc
inc
cmp
jmp
arpl
movsl
push
cmp
loop
andl
mov
xchg
xchg
xchg
sbb
push
mov
insl
out
imul
bound
fadds
das
mov
lods
ds
in
jecxz
rorb
inc
lds
push
inc
push
test
fidivrs
xchg
jge
or
stos
pushf
sub
dec
push
dec
add
or
sub
inc
std
mov
shl
mov
cmp
mov
lods
fadds
in
dec
repnz
push
adc
test
call
out
mov
cmp
loope
xchg
cmp
mov
jne
std
jbe
mov
mov
add
inc
push
ds
test
jl
std
pop
cmp
add
mov
mov
pop
push
fs
dec
test
xchg
and
pop
cmp
popf
pushf
and
rolb
lea
push
sbb
out
repnz
enter
testl
fstpt
sahf
and
fwait
push
out
ret
je
mov
mov
add
cmpsl
das
test
in
in
in
add
fsubl
jmp
outsl
push
and
out
rclb
iret
cmpl
push
pop
cs
stos
xor
push
movsb
jbe
inc
ret
daa
mov
add
adc
sbb
and
cwtl
movsb
int
inc
pusha
test
adc
cltd
sub
sbb
or
jg
stos
cmp
lret
pop
mov
rorl
insb
adc
mov
clc
dec
stos
and
or
lds
shlb
sbb
loope
shl
out
jl
dec
push
xchg
and
outsb
inc
pop
jne
icebp
adcb
stos
lret
fwait
jle
mov
lret
cmp
test
aad
or
in
mov
aaa
popf
pop
mov
out
je
cltd
inc
test
loope
pusha
mov
mov
xchg
shrb
into
mov
andl
popa
jno
fimull
sub
and
out
pop
inc
sarl
jnp
mov
outsb
push
inc
xor
sub
incb
aaa
pop
lret
xlat
adc
add
insb
dec
imul
lret
sub
scas
or
icebp
xchg
jmp
dec
sbb
and
xchg
mov
pop
jecxz
insb
sarl
lock
sbb
out
loope
mov
int3
xchg
mov
ret
mov
mov
or
fidivrl
shll
mov
jnp
cli
mov
push
ffree
outsl
pop
pop
lock
cmpsb
jl
sbb
dec
out
test
mov
rorl
les
clc
pushf
push
inc
aad
push
cmp
gs
pusha
subl
rcrb
cmp
and
ljmpw
inc
mov
or
dec
mov
and
or
daa
loopne
push
push
pop
mov
jae
into
out
fiadds
mov
push
push
mov
or
or
lock
outsb
stos
jecxz
movsl
in
lods
aad
loopne
push
xchg
ss
sbb
mov
movsl
lret
and
mov
xor
ja
rorb
mov
icebp
jno
inc
mov
stc
das
mov
xor
push
call
and
fiaddl
lcall
inc
jbe
scas
jae
and
in
inc
fsubs
pop
cmp
mov
sub
or
jae
cmp
mov
inc
push
xchg
mov
mov
jns
cmpb
jmp
xchg
mov
into
adc
xor
inc
jl
inc
aaa
pop
push
jae
cmp
push
xchg
push
push
pushf
xchg
push
les
lret
mov
adc
mov
hlt
les
test
leave
sarb
out
push
mov
pushf
hlt
or
fptan
or
or
push
or
mov
mov
dec
lcall
dec
mov
xlat
fstpl
lret
test
leave
pop
int3
movsl
out
outsb
xor
and
lea
rcrl
or
xor
lods
out
sahf
jb
ja
mov
mov
cmp
push
jg
inc
xchg
fs
push
fldenv
mov
xor
inc
repnz
fldl
repnz
cli
ss
daa
std
push
push
incb
arpl
jb
gs
mov
push
mov
mov
xor
ljmp
jge
popa
lcall
mov
sbb
pop
dec
hlt
shll
xchg
sbb
xchg
inc
std
das
pop
xor
mov
inc
xor
pop
push
jmp
and
fsub
xor
lea
hlt
sbb
insb
ficoms
fs
xor
das
loopne
xchg
jnp
mov
inc
cwtl
adcb
jo
jns
in
pop
add
dec
dec
es
xor
dec
add
arpl
data16
inc
xchg
xchg
push
jl
xchg
bound
scas
dec
enter
scas
jnp
push
mov
mov
xchg
insb
imul
or
adc
pop
inc
lcall
int
mov
loop
inc
push
pushf
cwtl
sbb
arpl
cwtl
sbb
push
mov
js
clc
repz
push
imul
gs
cmp
in
xor
nop
ja
lds
js
movsb
lahf
inc
outsl
gs
lds
test
jecxz
cmc
inc
lods
gs
out
push
xchg
inc
filds
pop
inc
mov
cmpsl
or
outsl
and
cmp
iret
repnz
mov
movsl
stos
enter
jae
scas
or
test
push
dec
sub
shll
mov
jb
adc
and
js
fucomi
fisubs
mov
inc
call
mov
adc
sarb
add
sub
xchg
mov
and
loop
cltd
and
adc
mov
push
stc
daa
jmp
stc
sbbl
mov
xchg
mov
push
sub
push
shl
ret
insl
mov
or
mov
xor
jbe
jno
fsubr
inc
cmp
or
push
imul
adc
jmp
jae
jne
ret
inc
mov
fsubl
cwtl
push
or
jo
mov
mov
xlat
lods
cmc
jnp
imull
add
add
inc
jno
xlat
shll
jle
xchg
fstl
fs
jge
xchg
mov
push
stos
cli
push
dec
mov
mov
pusha
sbb
icebp
sbb
mov
lds
addr16
push
push
sbb
push
mov
ljmp
pushl
add
dec
pop
mov
sub
ljmp
popa
push
add
xchg
cmp
cmpsb
sbb
xor
sub
xor
pusha
leave
cmp
inc
mov
fs
push
inc
insb
add
xlat
push
fbld
jl
mov
cmp
test
arpl
adc
insb
dec
adc
orb
out
call
jno
jp
sarb
std
and
insb
out
cmp
xor
and
jge
frstor
fs
lock
icebp
das
cmp
add
gs
fs
insb
pop
sub
fs
fwait
xchg
es
sub
and
shrl
inc
add
mov
imul
aas
cmp
les
ja
ljmp
lahf
or
add
sub
jbe
pop
mov
jne
adc
lahf
jecxz
sub
push
sbb
jp
arpl
jno
movsb
push
jae
ret
mov
sbb
nop
mov
imul
mov
aas
push
jecxz
sbb
movsb
jo
in
push
test
imul
xchg
xor
scas
xor
inc
inc
nop
add
test
push
in
sbb
and
pop
cmpsl
int3
xor
mov
ret
push
dec
jo
pusha
shll
lcall
test
out
stc
push
arpl
xorl
adcl
sub
add
leave
or
insb
movsb
pop
imul
out
push
sbb
mov
scas
subl
mov
or
jno
adc
stc
clc
cwtl
mov
cmp
jge
mov
rorl
rol
les
mov
lods
sahf
bound
movsl
and
jecxz
mov
mov
inc
jo
leave
mov
shl
stc
xchg
cmc
dec
test
pop
addr16
iret
push
imul
sbb
or
cs
dec
sub
jg
fsts
xchg
shlb
cmp
testb
lds
ficoml
imul
je
mov
call
mov
sbb
pop
xchg
xchg
pop
repnz
lret
jns
fisubrs
xor
imul
adc
arpl
push
mov
fsubl
mov
stos
or
pop
xchg
adc
out
sub
fisubs
push
into
xor
clc
xor
and
stc
pop
stos
lods
into
push
insl
lcall
pop
rorb
lea
dec
dec
and
mov
dec
and
mov
bnd
outsl
loope
add
inc
sti
cmp
jns
xchg
or
ror
mov
and
inc
fcmovnu
inc
sbb
xchg
xor
add
mov
lret
lods
ror
mov
addr16
jnp
or
or
pop
and
sub
rclb
push
inc
and
mov
cmp
inc
mov
push
das
xor
dec
or
xchg
jb
inc
inc
xor
aas
push
inc
dec
cmc
mov
mov
mov
movsb
and
int3
jb
arpl
in
mov
mov
inc
les
cmp
xchg
popa
dec
push
lods
add
ljmp
jne
in
xor
jl
fdivs
incb
test
jmp
ss
xchg
xor
cmc
or
jne
mov
adc
mov
jne
leave
movsb
lods
sub
pop
in
cli
and
jo
js
sub
sbb
cmpsl
inc
inc
push
xchg
subb
inc
sbb
mov
sbb
jb
dec
sbb
adc
fisubrs
lahf
popa
lods
pop
cmp
and
lods
jnp
xor
add
adc
xor
mov
pop
cli
idivb
in
xchg
test
pop
call
or
xchg
neg
aas
push
loop
in
inc
xor
xor
xchg
stos
inc
movsb
shll
add
jl
testb
cmp
mov
mov
arpl
nop
ficoml
sbb
mov
mov
add
or
dec
sub
xor
pushl
iret
pusha
out
push
and
jae
loope
sti
mov
mov
lcall
popf
out
mov
das
inc
xchg
sar
fiaddl
add
cmp
mov
push
or
cmpsb
jge
jo
mov
inc
mov
mov
rcll
aaa
sbb
lret
mov
scas
sbb
ss
xor
ficompl
movsb
imul
int
ss
dec
pushf
sbb
js
lds
fbstp
inc
add
sub
xchg
inc
je
xor
aam
ja
mov
push
lcall
clc
out
inc
das
sbb
xchg
fsubrs
jne
fstp
pop
sbbb
xor
imul
test
adc
stc
sbb
add
mov
push
icebp
sbb
notl
inc
idivl
fstpl
je
add
int3
sbb
push
call
cwtl
inc
add
enter
je
test
or
mov
cs
inc
dec
cli
nop
addl
ss
fsubrp
push
dec
adc
xor
jp
mov
xlat
sarl
popa
mov
test
outsb
xchg
enter
pop
pop
and
dec
loop
sub
xor
push
lods
pop
add
xor
xchg
imull
out
rolb
es
mov
pop
in
out
xchg
ja
jl
inc
fsubrl
test
mov
mov
xor
nop
dec
mov
sub
xchg
xchg
mov
stos
daa
cltd
mov
push
cmp
notl
and
jl
imul
dec
addr16
mov
mov
imul
dec
das
test
popf
lcall
test
dec
lods
les
jno
cld
cs
aas
inc
jno
dec
fimull
xchg
mov
sub
add
inc
ja
pop
cmpsb
insb
dec
and
add
imul
repz
dec
xor
push
cmpsb
adc
and
or
das
je
inc
cwtl
and
jp
cmpsl
add
cmp
dec
mov
inc
dec
loope
mov
idivb
pop
mov
mov
pop
insl
dec
out
imul
test
or
aad
out
sub
inc
adc
or
adcl
fstl
outsb
jg
dec
popf
add
pop
mov
outsl
lods
sbb
jl
out
sub
fsubr
xor
out
jmp
adc
sbb
push
imul
xchg
jbe
mov
mov
jle
out
rcr
sbb
or
push
dec
jp
inc
sahf
pop
adc
outsl
mov
sub
pop
cmpl
lahf
fsubrl
faddl
sbb
std
jne
daa
mov
addb
clc
ss
push
xor
dec
cmp
scas
mov
jle
push
lods
or
push
sbb
inc
xor
lods
mov
dec
mov
jno
jg
je
fildl
out
daa
xor
adc
lods
sub
nop
outsl
adcl
mov
int3
cmp
xchg
mov
out
jno
daa
push
aad
gs
repnz
nop
pusha
aaa
xlat
sub
mov
insl
xchg
shlb
aad
int
cli
sub
mov
cmp
sbb
xlat
mov
movb
in
sbb
iret
or
out
scas
pop
xchg
and
mov
sub
stc
lds
and
pop
daa
sbb
mov
aad
stos
fistl
push
push
xchg
xchg
dec
lea
pop
push
mov
jecxz
inc
mov
lock
cmpsb
test
xchg
inc
lahf
movsl
dec
xchg
cmp
stc
add
test
push
lds
sbb
test
pop
repnz
cmc
dec
add
mov
rolb
inc
push
aam
add
adc
and
add
sti
mov
adc
adc
subb
pusha
mov
insb
xlat
cmpsb
shlb
sub
lods
outsl
flds
adc
movd
testl
jle
adc
mov
aaa
push
or
adc
inc
mov
test
in
add
mov
add
fsubp
das
ret
add
enter
insb
or
xchg
fildll
pop
fs
mov
sbb
out
mov
push
jle
cltd
add
insb
flds
lcall
aam
sub
repnz
adc
jp
test
xlat
cmp
mov
cmpsb
cmpsb
mov
pop
push
outsl
clc
mov
and
dec
mov
adc
fstl
mov
fwait
or
lods
das
ret
xchg
mov
notb
daa
and
imul
cli
pop
cltd
gs
and
sub
xchg
xor
das
movsl
pop
and
cmpsb
jg
icebp
push
lds
les
pop
rcr
bswap
or
pop
dec
and
lods
lret
imull
add
loope
cltd
fnstsw
jecxz
xchg
push
sahf
jo
dec
arpl
add
test
pop
sbb
sub
add
in
add
test
jmp
inc
add
leave
repnz
jecxz
cmc
push
and
xchg
cmp
stos
push
mov
xchg
into
enter
lea
fwait
xchg
add
mov
into
mov
jne
decl
and
mov
mov
fmuls
and
aad
popf
or
mov
xchg
mov
ljmp
sbb
out
mov
cs
push
mov
cmp
sub
jbe
scas
jmp
add
mov
or
test
jle
cltd
mov
cli
jbe
add
aad
inc
stos
jnp
icebp
stos
xchg
inc
mov
lahf
outsb
mov
push
or
sbb
push
mov
fcoms
repz
insb
add
gs
jbe
jmp
into
cli
cmpsb
inc
loopne
sub
jno
adc
adc
push
adc
les
stos
and
and
add
aaa
xchg
or
or
pop
ljmp
es
sub
cmp
pop
rorb
jmp
pop
iret
mov
pop
sub
cmpb
imul
mov
call
add
and
sub
bnd
sub
call
and
pop
cld
js
sub
inc
adc
movsl
push
imul
mov
push
pop
frstor
es
pushf
leave
push
inc
scas
cmp
sarl
cmp
xchg
pop
gs
out
and
es
adc
sbb
in
adc
out
dec
outsb
je
loope
mov
sbb
in
scas
mov
and
cmc
sarl
cmp
fs
das
xchg
xlat
inc
in
push
mov
pop
in
call
add
jp
les
rcrb
push
push
call
mov
sbb
push
fcmovbe
jns
movsb
pop
xchg
inc
jl
push
push
add
inc
pop
cmpb
push
and
fcoml
mov
jae
ror
setg
aas
lods
inc
add
and
pop
dec
xor
addr16
sub
leave
jecxz
pop
push
pop
mov
mov
and
mov
pop
repz
std
push
lds
xchg
sarb
dec
jns
loope
iret
push
das
shrl
sub
sub
xor
sbb
mov
dec
and
jne
pop
lds
mov
jecxz
xor
adc
sahf
test
popa
or
ss
xchg
shlb
dec
lahf
mov
xor
lret
jp
stc
jnp
pop
sti
push
lods
or
or
popa
imul
push
sub
es
gs
enter
lods
outsb
nop
fwait
cli
xor
scas
in
push
mov
push
lock
push
or
lcall
outsb
pop
repnz
dec
jge
mov
or
shl
pop
mov
inc
leave
mov
push
out
insb
pop
clc
lea
and
adc
je
rol
rcll
adc
incb
movntq
fs
xchg
divl
adc
mov
imul
push
rep
stc
or
mov
xor
cltd
jp
imul
inc
sub
xchg
xchg
add
shll
pop
mov
push
popf
cmp
xchg
mov
shll
rorl
pop
aaa
jbe
mov
adc
std
outsl
dec
pop
adc
call
fisubl
mov
hlt
test
sarl
jmp
push
test
mov
in
iret
jae
jp
ja
inc
push
addb
rcl
pushf
add
test
jae
int3
imul
jecxz
xchg
add
ljmp
and
dec
jp
ficompl
sub
addr16
inc
test
fbstp
jl
pop
das
jmp
cmp
cmp
sub
xor
fnstsw
lds
inc
jp
sbb
sub
xor
add
not
add
jmp
lahf
inc
pop
repnz
lods
stos
jnp
test
hlt
in
mov
mov
scas
or
push
sbb
pop
sbb
mov
xchg
pop
in
cmp
pop
dec
inc
les
clc
test
xchg
jmp
adc
shr
faddp
fucomp
repnz
mov
ja
cs
mov
shl
xchg
add
cmp
cmp
adc
push
push
je
mov
cmpsb
pop
xchg
or
aas
xchg
dec
mov
jecxz
push
mov
adcb
outsl
orb
xchg
cltd
dec
jo
popa
inc
shll
cmp
mov
in
dec
fwait
stos
sub
mov
dec
shlb
lret
xor
insb
call
mov
loopne
pusha
inc
mov
pop
push
xchg
imul
pop
push
cmp
xor
push
je
sahf
jmp
adc
xchg
sti
cmc
daa
cmpsb
mov
mov
popf
aad
sti
ja
loop
loop
loopne
scas
loop
inc
jbe
fisubrl
sbb
inc
sub
mov
dec
jae
inc
and
dec
mov
ds
dec
popl
adc
pop
sbb
fldl
hlt
outsl
test
cmc
lahf
or
cmp
movsb
std
ficompl
xor
jecxz
cmc
fwait
mov
int
pop
lods
test
ljmp
add
fwait
xor
gs
jg
xchg
test
lahf
xorl
fstl
adcb
mov
mov
xor
cwtl
bound
mov
out
sub
clc
ja
mov
out
sub
push
testl
ss
mov
dec
push
lds
pop
push
aam
aas
sub
jbe
out
adc
movsl
and
lcall
arpl
je
push
fimull
cmpsb
add
jae
mov
mov
jnp
xor
mov
xor
shr
mov
or
sbb
hlt
pop
jmp
addr16
cmp
test
push
xchg
in
cwtl
push
mov
out
lock
push
pop
push
mov
and
gs
sahf
fs
leave
iret
add
mov
dec
ffree
pop
inc
xor
gs
hlt
sbb
sahf
pop
xor
jb
ss
inc
sbb
xchg
mov
cld
xrelease
add
dec
pop
sub
rcll
lock
jb
rcrl
add
jbe
push
nop
ret
push
sub
shll
lahf
xchg
mov
mov
mov
pop
in
add
in
pop
negl
pop
inc
cmp
dec
xchg
cmp
mov
dec
inc
push
filds
ret
xor
out
hlt
cmp
xchg
sbb
dec
add
or
mov
cmp
jl
push
loopne
dec
ljmp
cmp
or
aad
xchg
test
aaa
add
jbe
add
ret
lods
imul
sbb
sbb
or
cmp
imul
add
scas
jbe
mov
lds
or
test
out
sti
fnstenv
xorl
jae
out
je
cmp
lcall
cmp
test
pop
int
dec
inc
mov
pop
rcrb
adc
into
popa
aas
mov
es
jp
xchg
jns
out
pop
aas
int3
inc
fidivs
loope
js
push
xchg
mov
inc
lret
adc
scas
data16
test
je
fmuls
movsl
sub
clc
sbb
add
inc
mov
dec
xchg
push
mov
dec
fiaddl
sbb
sbb
and
push
lods
idiv
lods
mov
sbb
inc
cld
adc
jno
imul
inc
jno
stc
jnp
pop
jo,pt
cltd
scas
jb
mov
inc
xchg
or
and
add
gs
sbb
leave
inc
cli
jnp
or
mov
cmpsb
shlb
mov
call
mov
sbb
cmpsl
scas
dec
inc
dec
pop
in
sub
test
xchg
leave
pop
daa
mov
into
mov
sahf
xadd
pop
sub
shl
lea
and
mov
mov
ret
or
cmpsl
js
sub
dec
mov
std
pop
insb
jne
leave
pop
sbb
push
and
adc
adc
mov
aaa
outsl
xchg
or
xchg
int
rorl
or
xlat
fwait
xlat
fstps
push
pop
cmpsb
inc
inc
std
mov
and
xor
xchg
int3
xchg
sub
cmp
es
or
dec
lahf
push
xchg
mov
loopne
fcoms
fwait
xor
xor
sub
mov
les
scas
jmp
jo
je
inc
aam
int3
adcb
add
pop
es
int3
sbbl
xchg
inc
mov
inc
mov
ss
shrb
imulb
mov
stos
mov
outsl
setns
fs
incb
sub
aad
xchg
xchg
ljmp
and
lds
mov
out
notl
mov
gs
push
out
cmp
es
cmp
xchg
mov
sub
pop
mov
cwtl
push
push
xor
ss
adcb
std
mov
sub
adcl
fsubrs
or
pop
bnd
cli
imul
dec
push
jmp
std
mov
inc
xchg
push
lahf
fistpl
lcall
test
aad
fwait
pop
mov
aaa
mov
jo
iret
pusha
sub
scas
enter
sbb
push
das
dec
push
ds
mov
dec
lret
jecxz
and
cmpsl
jae
ja
fs
push
js
dec
sti
xchg
jp
fisubrl
dec
imul
shlb
adc
je
push
fistpl
mov
mov
imulb
dec
mov
add
in
pop
es
push
fdivp
push
inc
movsl
gs
nop
add
fwait
int
lds
pop
xchg
sbb
mov
jnp
mov
pop
int3
icebp
push
fadds
jb
push
leave
ja
or
xchg
jmp
cs
xchg
or
rolb
jo
xor
iret
rclb
sub
add
fisubs
push
push
xchg
outsl
mov
arpl
dec
fwait
test
mov
mov
inc
lods
mov
test
and
xor
push
push
test
imul
dec
scas
push
loop
xchg
xor
int
shrb
data16
aas
cltd
mov
mov
adc
test
std
out
xor
sbb
out
mov
mov
aam
pop
jmp
sarl
negl
test
xchg
inc
xchg
mov
push
test
sub
xor
mov
stc
adcb
test
filds
ljmp
test
outsl
inc
scas
or
sub
sbb
mov
push
mov
out
lock
outsl
or
dec
test
xchg
ss
add
sub
clc
dec
mov
pop
push
out
repnz
inc
pushf
mov
push
imul
cmp
pop
inc
push
aas
dec
andl
cltd
and
icebp
sti
subb
inc
neg
mov
les
test
rorl
addl
mov
lds
ficoms
fiadds
loopne
xchg
aas
jne
adc
jl
mov
or
fiadds
popa
loop
mov
jmp
jmp
int3
sub
xchg
movsl
cmp
mov
hlt
ds
sbb
mov
inc
mov
iret
aas
faddl
jle
or
and
mov
jecxz
es
sbb
divb
or
and
jl
sbb
les
xchg
sahf
jnp
ja
pusha
repz
jg
dec
insl
mov
out
mov
clc
js
js
fs
push
xor
or
or
jo
cs
jae
test
rcrb
add
jne
xchg
add
ss
sbb
adc
jp
pusha
pop
shlb
mov
cmc
arpl
push
xor
or
xor
rcrb
rcr
jne
xchg
sbb
xchg
loop
cs
mov
mov
scas
push
mov
jo
rorl
xor
adc
pop
cltd
pop
in
mov
push
rol
repz
stos
jp
xor
pop
and
push
jge
les
push
das
adc
movsb
push
xor
fstl
xchg
add
or
scas
add
cltd
repz
pop
aaa
add
movsb
sub
jmp
orb
idivl
int3
sub
mov
scas
insb
iret
aaa
cmp
test
sti
push
pushf
mov
inc
stos
or
stos
mov
test
adc
xchg
mov
bound
jp
xor
ror
shll
gs
pop
movsb
out
mov
push
ret
inc
pmuludq
insl
es
aam
xor
xor
adc
lods
push
fs
inc
daa
pop
xor
aam
sti
lret
in
or
sarl
repnz
jmp
fmuls
and
mov
mov
cmp
aad
inc
movsb
stc
push
pop
push
xchg
popf
push
pop
in
mov
xor
aaa
and
shl
lds
xchg
in
shlb
push
jmp
es
shrl
or
js
outsl
jle
nop
cmp
movsl
mov
xor
xchg
dec
or
jbe
push
or
jb
mov
pop
mov
inc
adc
cs
loope
xor
aas
lret
xor
xchg
cmp
adc
add
mov
or
repz
mov
inc
xor
sbb
fadd
test
dec
push
jmp
test
std
pop
push
idivb
repnz
es
sub
loope
jne
jecxz
sub
xchg
inc
xor
scas
stos
inc
and
push
aam
andb
ljmp
mov
pushf
fildll
sbb
loop
mov
std
mov
cmpsl
push
push
xor
mov
sub
movsb
jnp
or
pop
test
push
test
mov
mov
add
xor
loop
mov
ja
jne
push
sub
push
sarl
lret
inc
push
mov
adc
cmc
faddl
not
les
cltd
ds
pop
scas
repz
call
sbb
fbstp
jle
cmpsl
push
cli
cmp
pusha
fstps
out
pop
adc
ja
loopne
mov
cmp
mov
or
cmp
jno
mov
les
cmp
popf
push
xchg
jno
mov
xchg
cmpsl
push
inc
dec
mov
inc
mov
lds
pop
mov
xor
fsub
popa
and
jp
jge
cmpsb
add
add
loope
insb
cltd
jg
aam
mov
or
inc
add
andb
jne
and
mov
xor
fwait
lods
or
test
mov
mov
and
xchg
cmp
xlat
mov
lea
dec
out
sbb
inc
push
ljmp
stos
xchg
out
dec
fs
jmp
loope
dec
cmpsl
std
mov
mov
mov
xchg
in
and
rcr
nop
push
test
repnz
xchg
sbb
adc
pop
pop
lock
mov
add
mov
xchg
fstpt
jle
sbb
aaa
mov
arpl
dec
add
push
inc
rcr
mov
pop
or
fwait
in
jge
cs
outsb
add
cmp
sub
scas
in
int
adc
mov
es
in
mov
dec
dec
push
pop
rcll
mov
inc
lock
xor
inc
out
push
outsb
call
shlb
xor
fs
sub
dec
rcl
jp
and
dec
dec
fs
xchg
or
pop
push
arpl
sbb
pop
mov
pop
lret
sar
mov
dec
ja
sub
xlat
sbb
test
mov
xchg
mov
xchg
add
testb
sbb
cld
lret
xchg
movsl
in
push
addr16
sub
sbb
mov
xorl
xor
fistl
fdivr
xchg
adc
mov
mov
out
cmc
jno
pop
xchg
sahf
xor
and
mov
scas
sbb
clc
addr16
push
cli
cmp
jo
imul
mov
popa
jne
add
out
jb
mov
outsl
lahf
cltd
and
pop
or
jae
sub
sbb
mov
into
xchg
test
xor
enter
scas
sarl
mov
jnp
pop
adc
out
or
stos
out
push
jle
fbstp
xchg
push
pop
test
jnp
ficoms
in
rcll
jb,pt
pushf
or
ret
xor
mov
bnd
imul
push
sbb
fstl
sahf
xchg
adc
fcmovnu
aad
or
push
jge
sarl
cli
out
ret
dec
mov
jne
sti
dec
out
push
loopne
aad
cmp
push
mov
out
scas
call
popa
pop
push
xchg
xor
lret
inc
int3
loopne
shl
int3
push
jae
repnz
ds
push
inc
in
lods
shll
inc
jb
or
fiadds
test
or
mov
iret
test
clc
jl
pushl
fadd
scas
data16
scas
jo
push
sub
fistps
jp
shr
push
mov
rorb
gs
jmp
aam
mov
mov
movsl
pop
jne
les
lods
lahf
add
mov
add
ss
fsubrl
inc
cld
sub
fdivr
divl
jecxz
push
lea
mov
lret
sbb
daa
and
cs
xchg
aas
sub
cld
not
shrl
jge
iret
cli
orl
pop
and
push
mov
add
dec
jnp
pop
fmul
cmp
xchg
shr
pop
cs
pop
cmp
ror
dec
fnstcw
sub
xor
mov
xor
adc
in
testl
out
inc
xor
adc
dec
mov
pop
in
inc
xor
stc
or
jmp
mov
xchg
ret
dec
loop
dec
loopne
insb
ficomps
bound
pusha
dec
aas
jae
int
loop
mov
subb
in
lcall
jmp
mov
rclb
push
test
xor
rclb
cmp
add
and
ficompl
sbb
cld
sub
pop
dec
clc
sbb
mulb
jb
sahf
adc
fisubs
shlb
push
jge
test
aam
jae
adc
push
dec
popa
jmp
mov
divb
int
xor
das
ja
push
fcoms
push
subl
movsb
inc
jbe
into
mov
add
std
or
sbb
mov
xchg
aas
rcr
into
mov
sbb
mov
cli
icebp
jns
aad
and
jmp
imul
pusha
cmc
bound
adc
sti
mov
imul
fcmovnb
push
xor
insl
je
push
fcmovbe
mov
shll
rcl
sbb
dec
inc
inc
pop
stos
popa
mov
fisubs
pusha
addr16
pushf
out
repnz
jno
xor
pop
cmp
out
in
lock
mov
nop
mov
dec
ljmp
adcb
jo
int
jbe
mov
inc
out
ja
shl
mov
push
jl
enter
loop
dec
ud1
mov
push
leave
push
int
or
ret
adc
nop
inc
or
and
add
aas
and
push
push
adc
jg
daa
mov
leave
lods
or
stos
and
add
adcl
and
jno
sbbb
cmpsl
in
mov
cmp
dec
sarl
fldcw
mov
es
in
mov
sahf
push
stc
fwait
loop
push
sub
addr16
testb
arpl
add
lcall
push
jne
jmp
cwtl
add
push
fmul
sti
pop
mov
and
xor
nop
lods
dec
or
cwtl
js
add
mov
mov
inc
repz
scas
mov
call
inc
bound
ret
jno
inc
test
test
add
rcll
andl
add
xchg
test
rorl
in
fs
adcl
mov
nop
cmp
pop
cmp
scas
into
push
pop
orb
cmp
es
loop
sahf
jb
pop
movl
pop
jecxz
pop
rorl
nop
adc
daa
inc
mov
mov
xor
div
push
ja,pn
mov
aas
mov
sub
lods
addr16
push
adc
adcb
sarb
lret
dec
enter
call
rclb
xchg
sbb
xchg
sbb
lods
aaa
fisttps
lret
hlt
pop
out
addb
xor
in
cmpl
jne
imul
scas
jnp
fldl
loope
and
mov
pop
pop
adc
xor
inc
dec
push
es
xchg
out
cmpsb
mov
mov
insl
inc
fs
push
mov
imul
add
int3
mov
test
push
test
cmp
pop
push
rcr
push
pop
mov
rolb
or
or
mov
or
or
adc
dec
cmp
mov
lds
add
outsb
test
shrl
mov
mov
adc
mov
test
mov
insb
addr16
dec
cmp
insl
push
xor
cld
xchg
xchg
mov
mov
ficoml
ret
fcmovnbe
aaa
hlt
int
inc
gs
leave
sub
cmp
popfw
adc
xchg
bound
ret
leave
xchg
dec
xchg
nop
mov
fwait
jge
sbb
sbb
adc
jl
mov
stos
out
push
aad
sub
fcmovnu
sbb
dec
pop
mov
dec
push
negl
lret
inc
jnp
movsb
movsl
cmp
pop
xlat
inc
mov
push
and
pushf
ds
jne
sbb
cmpsl
or
xchg
sub
stos
mov
in
jecxz
mov
push
push
mov
or
pusha
idivb
or
arpl
and
jge
inc
hlt
sbb
in
inc
push
mov
sbb
push
sbb
test
xchg
and
dec
mov
fldl
jb
or
cwtl
xchg
push
push
xchg
sbb
das
cmp
xchg
ficoms
sbb
mov
cmp
pop
pop
fwait
mov
jg
shrl
add
jmp
mov
lahf
arpl
pop
cld
mov
aam
inc
fbld
repz
xlat
mov
imul
pop
jbe
cltd
push
jae
aas
cltd
jge
xor
xor
into
pop
pop
stc
in
iret
out
cmp
adc
decb
rcrb
notl
mov
sub
jmp
dec
loop
mov
les
insb
xor
jae
andb
pop
sub
jbe
pop
std
rcll
ret
lea
in
jmp
cmp
cltd
and
jnp
mov
jno
sbbb
lods
std
and
lock
sahf
dec
mov
mov
or
lods
push
lock
mov
mov
lahf
xlat
stos
mov
pop
lea
int3
fwait
lahf
cwtl
in
js
mov
xchg
mov
lret
xchg
push
xchg
mov
mov
cmc
in
js
push
xchg
inc
push
mov
jbe
shrb
jae
and
pop
int3
mov
sub
add
add
les
add
mov
mov
sti
and
stos
jo
cld
mov
adc
add
adc
inc
fcoml
mov
sbb
ret
in
add
in
idiv
scas
int
push
push
sub
mov
inc
jo
pushf
mov
loope
jae
dec
repnz
mov
in
clc
ds
mov
dec
lds
sbb
push
sbb
jge
xchg
in
lods
fstps
or
out
xor
stos
ljmp
sub
call
aam
add
fnstsw
imul
push
jne
pop
cwtl
jo
push
dec
std
loope
push
and
fnstsw
mov
in
mov
inc
test
or
jge
repz
cmp
adc
cld
fnstsw
iret
cmpl
jno
mov
and
xchg
push
daa
jle
aad
adc
mov
and
fcmovnbe
inc
mov
test
jmp
and
fmuls
mov
push
or
xor
dec
into
sbb
sete
icebp
ss
and
adc
in
sub
leave
pop
lods
lret
adc
mov
pop
pop
xchg
addr16
sbb
cmp
jle
add
jecxz
divb
cwtl
addl
push
jp
movsl
jmp
fldt
mov
add
pop
fistpl
mov
xchg
ss
add
mov
adc
incb
cmpsl
das
cli
fsubs
xor
pop
mov
push
popa
adc
cs
mov
or
test
inc
js
shrl
cld
lock
push
cltd
mov
inc
mov
fwait
add
ja
mov
cld
push
in
xor
push
loop
mov
inc
loop
inc
mov
sub
cmpsl
mov
incl
sti
daa
and
insb
mov
mov
clc
shlb
lahf
lock
pop
or
addr16
incb
xchg
sbb
or
lds
push
das
or
stos
icebp
jae
stos
cmpsb
icebp
cmp
mov
mov
ss
mov
aad
xchg
fwait
jmp
or
jge
xor
mov
imul
cmp
cltd
addl
adc
loop
fsubs
lahf
loopne
and
aad
jne
dec
sub
scas
add
lret
neg
add
fcomps
or
lcall
or
arpl
sub
pop
mov
bound
pop
cli
cmpsl
negb
inc
mov
jnp
jle
test
movsb
xchg
je
sub
lods
scas
icebp
sbb
mov
insl
fsts
xchg
or
ret
jo
lds
cmpsl
lret
scas
pop
inc
inc
lea
ret
lret
jg
lahf
add
add
aam
dec
shlb
fadds
sub
xor
or
movsb
jp
sub
popa
pop
lock
outsl
sbb
push
stos
add
bound
fucomp
inc
popf
sbb
or
fsubrl
pop
out
mov
pop
data16
push
je
fwait
clc
and
dec
dec
fsubrl
dec
outsb
inc
test
int3
test
ds
sub
mov
lret
imul
fwait
xchg
das
ret
js
dec
mov
lods
push
xorb
std
jle
pop
movb
loopne
jmp
jecxz
jecxz
test
fwait
add
push
lret
jae
or
or
fildll
in
lods
lock
pop
sahf
mov
lret
pop
stos
mov
push
mov
jne
sbb
adc
sbb
dec
enter
sbb
sbb
xor
lea
scas
ret
mov
imul
mull
hlt
jnp
je,pn
or
in
adc
pop
shl
sbb
inc
mov
pop
test
jae
testl
movsb
leave
push
mov
repnz
inc
xchg
xchg
or
inc
out
inc
testb
mov
mov
push
cltd
xchg
dec
inc
push
cmp
adc
adc
add
adc
lret
jl
add
add
cwtl
jo
dec
jmp
mov
ljmp
or
xchg
js
xchg
out
test
push
scas
ret
pop
xor
das
push
xor
dec
xor
fdivrs
sub
inc
push
inc
mov
or
rcrb
mov
in
mov
inc
scas
mov
subps
movsb
xchg
sbb
sbb
mov
imul
rol
movsl
out
nop
pop
inc
cmpsl
inc
mov
enter
loop
inc
test
jmp
fbld
dec
dec
cmp
push
dec
and
ljmp
flds
jae
adc
mov
jmp
mov
aad
xor
in
rorb
xchg
lcall
stc
or
mov
dec
stos
cmp
dec
fmuls
imul
push
xchg
scas
aaa
inc
mov
pop
nop
mov
mov
mov
out
jb
mov
pop
mov
in
repz
cmp
shll
fnstcw
stos
or
xor
inc
inc
movaps
push
sub
cmpsl
hlt
push
movsl
arpl
adc
xor
sbb
ret
int
mov
jge
pop
mov
fidivrs
fdivrp
xchg
sub
jmp
lods
mov
jge
mov
dec
outsl
xchg
repz
cmpsl
xchg
in
adc
sub
test
nop
hlt
leave
sti
mov
rorb
or
cmpb
js
nop
shll
push
xor
or
cmp
sarl
lcall
add
imul
adc
cmpsl
fs
sbb
inc
sbb
cmp
out
xor
les
pop
in
in
iret
fwait
xchg
lds
loop
es
fcmovbe
fwait
aaa
mov
imul
call
dec
cltd
dec
insl
pop
lcall
and
and
pop
xor
call
xor
fnsave
or
xor
aam
and
add
sub
push
inc
inc
int
mul
sub
cmpsl
ret
adc
adc
xor
push
ficompl
fildll
push
xor
add
or
add
push
ret
and
mov
sub
or
dec
mov
xchg
jl
inc
out
or
lret
cmp
call
push
mov
notl
push
stos
nop
xchg
outsb
mov
scas
xchg
js
cld
adc
roll
fcomp
lods
cwtl
pop
arpl
clc
dec
mov
hlt
fsubl
iret
nop
jecxz
std
and
mov
addl
push
pop
inc
andb
daa
sub
aam
aaa
ja
sbb
sbb
or
lock
shl
bound
popa
lcall
sbb
and
sub
pop
leave
sar
lds
jno
cmp
into
mov
and
scas
insb
dec
mov
movsl
and
bnd
and
sub
push
xor
lds
xlat
xchg
xor
dec
cmc
mov
pop
sbb
push
imul
mov
cmp
push
dec
outsb
fistps
push
mov
repz
lret
aam
mov
div
call
cwtl
fwait
jae,pt
stos
adcl
jp
movsl
push
jmp
add
testl
lcall
decb
fbld
push
cmp
mov
loop
sub
in
scas
bound
sbb
mov
shrb
scas
fisubs
fnstenv
int3
enter
iret
cld
push
jmp
sti
xchg
dec
ficompl
aam
mov
cld
dec
imul
popf
jp
push
sub
push
mov
xchg
icebp
xchg
test
fst
dec
jl
mov
dec
leave
sbb
mov
cwtl
pusha
arpl
mov
ret
adc
xchg
or
rcrb
cmc
and
imulb
and
imul
pop
sub
sbb
mov
push
add
pop
xor
lock
fsubr
stc
cwtl
mov
inc
cmpsb
inc
mov
pop
cli
test
jmp
enter
hlt
inc
outsb
mov
dec
mov
les
jle
sahf
repz
push
pop
es
jbe
fdivr
insb
dec
cmp
inc
scas
bound
xchg
mov
push
or
xchg
sub
pop
add
ljmpw
ss
mov
les
mov
xlat
xchg
push
stc
push
mov
fdivl
nop
cmpsb
cmpsl
fmuls
popf
xchg
adc
jb
jecxz
faddl
push
xchg
cs
inc
lock
mov
lds
jne
test
sbb
push
or
jno
imul
in
clc
pop
stos
outsb
psadbw
mov
cs
jmp
ret
xchg
lods
int3
jge,pt
mov
pop
mov
fs
js
pop
or
and
scas
popf
pop
in
loope
outsl
jecxz
push
sbb
jg
xchg
jae
dec
nop
xor
popf
push
jbe
out
add
sub
sbbb
insb
fiaddl
ljmp
cwtl
lret
mov
mov
imul
cltd
loop
add
adc
pop
cmpsl
psubd
mov
sbb
add
mov
inc
lods
xchg
fadd
mov
rolb
hlt
iret
jb
int3
daa
and
aad
ret
lcall
stos
ss
mov
inc
mov
dec
sbb
mov
hlt
sbb
outsb
dec
loopne
mov
xor
mov
add
mov
sub
repnz
ljmp
pop
rorl
gs
fs
je
iret
movsb
sbb
xor
pop
fldl
mov
imul
push
scas
mul
mov
std
ret
fiaddl
out
mov
push
mov
jmp
mov
jns
lods
out
xchg
push
in
cmpsl
aaa
jle
icebp
cmp
out
adc
push
aaa
xchg
add
inc
subl
in
sub
add
sti
lcall
mov
or
jmp
pop
fcompl
jle
lret
mov
fidivs
xor
aaa
inc
xlat
rcl
sbb
iret
ja
add
iret
data16
lahf
cs
movsb
mov
sub
enter
pop
subl
sbb
sbb
mov
jmp
jg
btc
add
push
and
dec
inc
cmp
aas
das
mov
std
sahf
push
in
jge
jns
or
sbb
out
cmc
inc
and
ficompl
ret
jmp
mov
push
and
aam
pop
add
jo
outsl
jb
cmp
aad
je
jmp
lcall
fwait
adc
adc
pop
jno
and
cmpsb
jge
xchg
insb
jg
mov
push
inc
int
ja
addl
scas
xlat
inc
cltd
mov
test
bound
icebp
jge
rcrb
ret
inc
loopne
add
in
mov
lret
dec
jb
aad
jge
or
cmpsb
testb
imul
mov
mov
fdivrl
mov
stc
add
int3
cmp
insb
pop
test
rorb
pop
sti
push
out
sub
insl
xor
push
test
pop
inc
xchg
pusha
stos
adc
cmpsl
pop
lret
adc
sub
lock
shl
push
jb
or
imull
jle,pn
in
xchg
popf
cmpsb
add
shlb
dec
and
sti
ss
cmp
movsb
xor
xchg
fsub
jns
rorl
mov
xchg
clc
pop
adc
cmc
and
mov
fdivl
mov
jp
leave
idivl
adc
cld
inc
add
lds
loop
xchg
and
inc
push
popa
jno
cmp
mov
xchg
mov
mov
aaa
sbb
mov
dec
jae
jl
jl
lret
inc
jle
out
cld
addr16
and
push
xor
xchg
das
sub
push
xor
mov
and
or
adc
push
mov
pop
mov
iret
pop
mov
daa
in
je
js
xchg
call
add
inc
pop
fldl2t
xchg
xor
or
sbb
mov
dec
rcrl
xor
fisubl
mov
cmp
jo
loop
mov
jmp
sub
ror
adc
add
pop
mov
insl
sub
push
pop
pop
lcall
out
adc
push
movaps
cltd
ret
xor
rorl
mov
inc
aam
cmp
mov
jnp
sbb
add
and
jle
sbb
pop
and
inc
inc
dec
adc
pop
dec
and
inc
lret
mov
mov
jle
sahf
push
add
arpl
sub
lods
sub
fnstenv
or
push
inc
lret
mov
int3
adc
aaa
mov
aaa
push
and
mov
mov
call
jbe
loop
push
cmp
push
shlb
icebp
or
pop
xor
sbb
cmp
outsb
shll
jg
xchg
adc
lods
push
push
ret
leave
xchg
fsubp
gs
loope
pop
rcrl
fstpt
and
sub
push
ja
inc
je
enter
out
iret
pushf
lret
mov
popf
cmp
cltd
les
or
xor
iret
std
adc
mov
and
pop
test
sub
roll
mov
js
fisttpl
imul
dec
xchg
xor
or
or
or
inc
xor
xor
adcb
lds
mov
leave
push
lret
add
loope
hlt
xor
add
mov
dec
push
popf
lret
mov
sbbl
inc
mov
lea
xlat
lea
js
orb
clc
nopl
push
jnp
push
test
leave
popa
push
divl
pushf
xchg
xchg
into
insl
aam
push
xchg
dec
or
pushf
mov
repz
xchg
pop
mov
mov
and
sub
dec
mov
adc
gs
xor
cmp
inc
or
in
addr16
in
lret
sarb
xor
xchg
inc
ds
mov
aas
mulb
and
data16
ficompl
aaa
insl
dec
lds
sbb
fsubrl
imul
arpl
mov
bts
push
repz
insl
xchg
lea
in
push
pop
xchg
or
push
push
cmpsb
es
mov
push
ja
cli
jae
pop
mov
xchg
pop
sahf
cmp
sbb
fwait
lods
gs
lds
aas
mov
ss
pop
sbb
push
or
inc
and
sub
pusha
push
les
and
sbb
cmc
adc
mov
icebp
push
jmp
jmp
and
mov
scas
lret
pop
push
adc
pop
in
mov
sbbb
in
insb
neg
test
mov
mov
in
dec
rcrl
jge
into
or
es
addr16
mov
aam
mov
adc
clc
and
add
xchg
inc
cwtl
pop
xchg
jg
gs
pusha
push
popf
mov
outsb
sub
pop
xor
popa
lcall
or
frstor
jbe
aad
int3
jnp
add
dec
xchg
jne
fmull
test
leave
xor
cmp
inc
in
fidivl
pop
das
xlat
jp
jecxz
cwtl
pusha
lahf
xchg
mov
sahf
cmp
movd
jno
out
push
push
and
idivl
mov
inc
mov
jns
insl
push
aas
scas
cltd
popl
imul
mov
or
adc
daa
movsl
lds
sub
stc
fldenv
jg
js
xor
out
mov
ret
push
mov
cmp
jbe
ficomps
xor
cld
xor
fwait
jbe
test
loop
jo
sbb
hlt
cmc
sub
sbb
jg
sbb
xor
arpl
push
hlt
repnz
xchg
adc
dec
pop
adc
adc
sti
out
lods
mov
stc
sub
push
aad
daa
inc
xor
aad
test
out
pop
add
xchg
aas
dec
adc
mov
or
sti
pop
jge
push
add
pop
fmulp
sarb
cmp
push
mov
inc
test
cmc
push
pop
push
add
pop
int3
cli
and
into
mov
xchg
iret
jns
adc
dec
adcb
movb
lods
call
mov
std
sub
xor
jmp
jno
ds
push
jno
imul
mov
mov
push
cmp
lcall
cs
pushf
or
lods
fildll
sti
push
fildl
mov
out
mov
xchg
or
ss
cmp
lret
jmp
sub
pop
dec
outsb
mull
sub
fldenv
pop
cmpsb
fiadds
clc
pop
out
loope
jge
and
inc
ja
or
popf
lcall
pusha
sbb
loop
xchg
test
fildll
test
jmp
push
gs
idivb
scas
out
bound
push
push
sub
into
ds
bound
xchg
into
addr16
orb
dec
adc
mov
fucomi
and
mov
movsb
stc
les
std
call
in
lds
sub
cmc
cltd
inc
dec
jmp
roll
xchg
out
repz
adc
out
movsb
ret
pop
aad
leave
jmp
mov
fwait
xor
xchg
mov
xchg
cs
cltd
mov
mov
jae
jecxz
xchg
lahf
lds
cs
in
shlb
push
push
or
xchg
dec
mov
xor
repnz
mov
in
push
adc
xor
xchg
pusha
push
mov
mov
mov
push
mov
add
add
fldcw
call
sub
or
push
mov
in
ret
add
and
mov
push
lds
mov
mov
xchg
cmp
dec
push
or
xor
push
repz
pop
push
es
xchg
shll
mov
xchg
ret
mov
lods
fs
movl
lret
fwait
jb
idiv
dec
inc
cmpsl
insb
inc
leave
test
xchg
jge
das
cmp
testb
repz
xchg
push
mov
add
and
xchg
es
mov
fstpt
push
sub
cld
mov
adc
add
pop
imul
je
mov
in
arpl
adc
inc
sbb
out
mov
cmc
or
xchg
and
jge
loop
loopne
inc
and
and
dec
sub
push
sbb
push
add
mov
lahf
addb
fildll
inc
dec
adc
lcall
jnp
pop
scas
ror
shl
xor
imul
fisubrs
mov
in
jl
mov
mov
mov
dec
cmpsl
push
cmp
imul
sub
cmp
jb
pop
push
popf
fs
mov
shll
jns
roll
add
insb
adc
pop
inc
mov
call
arpl
test
mov
jo
mov
jns
cmpsl
mov
inc
aas
jge
pop
dec
add
pushf
addr16
inc
jge
and
lret
or
push
movsl
cld
sub
sarb
xchg
fdivr
rcll
push
xlat
mov
xor
xchg
shlb
and
or
pop
jno
dec
adc
ret
add
movsl
rcrb
mov
sub
clc
fwait
je
arpl
lret
mov
adc
fisttpll
adc
and
sbb
mov
inc
in
mov
add
pop
mov
out
fcoms
es
in
inc
dec
dec
gs
inc
call
pop
addr16
stos
or
xchg
or
sbb
call
das
pop
xchg
inc
cmp
scas
and
push
push
dec
ja
push
pop
mov
in
dec
repz
ds
mov
inc
rcll
int
sahf
dec
aam
cmp
and
popa
xor
imul
mov
loope
imul
xor
jle
mov
inc
sub
fs
ljmp
test
sub
jns
push
mov
imul
rcll
or
test
inc
stos
mov
scas
mov
sahf
mov
mov
into
aad
aas
sbb
jl
test
xor
and
xchg
es
cmp
dec
pop
je
cmpsb
outsl
stc
stc
mov
daa
pop
xchg
sub
adc
dec
movsb
call
aad
mov
xchg
or
ja
inc
jmp
into
mov
movsb
jno
popa
add
jmp
mov
test
outsb
pop
or
jle
test
popf
inc
fwait
mov
imul
cmp
into
xor
in
mov
iret
fmul
out
mov
inc
jecxz
outsb
jle
cmpsb
fwait
or
imul
push
stos
or
rcrl
cs
inc
outsb
cmpsb
xchg
pop
mov
mov
xchg
ror
lock
outsb
adc
adc
mulb
cld
fcomp
ss
and
push
outsb
pop
push
iret
xor
wbinvd
lahf
sub
push
sbb
xchg
sbb
cld
div
and
test
dec
inc
insb
daa
jbe
push
jnp
in
pop
loopne
cmp
or
in
xchg
xchg
push
xlat
fs
pop
jns
shrl
cmp
iret
clc
xchg
test
cmp
lret
pop
push
mov
and
daa
imul
lret
incl
shll
outsb
push
push
aas
out
pop
insb
and
cs
adc
dec
loop
lods
stos
push
es
or
aaa
and
loop
mov
jge
cli
in
sbb
jb
out
lods
push
sub
mov
hlt
lret
stc
push
js
jno
dec
ja
push
or
test
mov
fcomps
xchg
mov
jns
iret
inc
sub
cmp
pusha
aaa
sbb
lcall
mov
cmp
std
and
cmp
mov
xor
shlb
sub
repz
add
stos
cmc
aad
std
outsw
or
mov
stos
test
enter
mov
sbb
lock
add
dec
mov
iret
ror
hlt
dec
mov
adc
cli
es
pop
outsl
pop
aaa
shl
pop
add
push
pushf
lret
mov
inc
jge
popa
dec
jns
jnp
add
std
dec
in
bound
mov
daa
pop
sahf
sbb
mov
xchg
push
push
jnp
pop
jno
xor
mov
lcall
incl
imul
in
xlat
out
push
pop
lea
cli
and
outsl
push
movsl
xlat
outsb
iret
out
xor
xchg
pop
icebp
adc
ret
insl
inc
push
int3
cmp
lcall
xor
mov
or
data16
lret
out
rorb
rorb
divl
ret
ds
scas
push
fwait
lcall
loope
ja
mov
pop
fwait
lds
outsl
lea
adc
mov
out
or
scas
out
dec
in
mov
test
and
push
lock
push
pop
jl
lahf
shlb
movsl
pop
in
out
iret
fmulp
insl
push
loope
push
xlat
jmp
mov
xchg
sbb
xchg
sahf
cwtl
sub
sti
mov
xchg
data16
xchg
sarl
test
mov
xor
test
sti
out
jae
aas
jnp
add
ss
and
xchg
rol
mov
jae
cmp
loop
cmp
pop
ljmp
pop
sub
cmp
das
pop
add
push
dec
xor
pop
flds
and
jge
push
inc
leave
cli
add
cmpsb
push
mov
outsl
into
cmp
dec
inc
pop
xchg
imul
add
cwtl
insb
sbb
pop
sub
add
mov
adc
clc
enter
or
mov
xchg
cmp
or
dec
dec
push
lock
out
sbbl
sbb
pop
adc
jl
dec
push
cmp
inc
push
bound
inc
loope
lret
xchg
cmp
loopne
pop
imul
lahf
push
fsub
mov
int3
pop
cld
dec
mov
and
mov
jo
cwtl
testl
cld
mov
inc
lea
mov
jbe
xchg
lods
sbb
inc
loop
js
fdiv
imul
imulb
mov
cltd
sbb
stc
adc
icebp
imul
xchg
pinsrw
xor
push
push
xor
xchg
and
out
or
outsl
subl
jle
aas
mov
and
movsb
push
scas
mov
js
cs
and
test
popa
cltd
adc
mov
nop
pop
adc
clc
push
jmp
pop
jns
or
mov
das
in
push
int
sbb
lret
pop
ljmp
mov
mov
insb
ret
cld
push
pushf
or
xchg
jne
or
cmp
dec
leave
je
xor
lcall
jo
test
push
aas
push
cmp
push
lret
hlt
mov
shrb
push
add
mov
out
push
xor
dec
mov
mov
aad
cmp
divl
xchg
sbb
lahf
arpl
jg
mov
outsb
inc
inc
addr16
inc
mov
mov
xchg
lods
rorb
push
dec
jl
xor
add
lret
inc
fcoml
movsb
ja
loope
mov
cmp
fmull
or
stos
mov
jbe
shrl
cltd
popa
add
pop
inc
in
mov
imul
add
pop
mov
cld
add
adc
dec
jns
clc
aaa
jmp
test
push
fsubrs
jl
fs
and
inc
or
call
outsb
sbb
int3
fimull
pop
jb
mov
mov
push
pop
mov
mov
xor
test
or
les
add
mov
adc
dec
push
sub
or
test
add
xchg
stos
cmp
dec
adc
mov
inc
push
lcall
pop
and
stc
or
mov
sti
mov
inc
andl
sbb
mov
inc
scas
and
xlat
ss
loopne
setle
and
xchg
pop
shlb
sbb
pop
xchg
sbbb
adc
bound
add
fldenv
std
ja
jp
ds
or
sbb
pop
rcl
xor
cmp
das
xor
dec
xchg
mov
nop
mov
dec
imul
divb
nop
jp
js
dec
mov
subb
test
mov
insl
jno
push
push
shlb
and
in
aas
cmp
sbb
iret
mov
adc
call
mov
test
mov
ret
insl
sub
xchg
lahf
loopne
addl
in
push
clc
inc
and
cli
inc
cmpsl
std
loope
in
inc
sahf
sbb
jmp
repz
jmp
mov
jle
add
or
add
jbe
arpl
cmp
notb
int
mov
xchg
insb
push
jmp
mov
inc
sbb
ljmp
mov
or
mov
sarb
cmp
cmpsl
and
jns
sahf
js
push
rorb
fcomip
std
add
mov
mov
xchg
adc
fistpll
imul
int
dec
iret
mov
repnz
nop
aaa
and
xchg
inc
arpl
cmp
int3
xlat
mov
jle
xchg
dec
cmp
pop
std
popf
sub
pop
in
mov
test
push
mov
push
sbb
jmp
mov
xchg
pop
stc
and
mov
sbb
leave
adc
std
jb
mov
push
mov
lret
lds
adc
enter
cwtl
aam
push
cli
movsl
push
jb
push
js
push
lret
movsl
mov
xlat
mov
lock
cmp
cltd
rolb
xor
dec
dec
dec
lss
lret
mov
inc
scas
mov
addr16
das
rcrb
sub
mov
add
mov
addr16
test
lods
bound
inc
sbb
nop
lahf
lods
fiaddl
sub
out
test
pop
xchg
scas
xchg
cmpb
mov
add
pop
xchg
pop
loop
mov
mull
mov
jecxz
cmp
cli
sbb
xchg
sbb
pop
gs
mov
je
mov
fisttpl
repnz
xchg
xchg
sub
js
adc
mov
into
int
mov
sub
cwtl
xor
pop
mov
or
mov
mov
mov
sarb
mov
loopne
xor
mov
mov
movsb
int3
push
pop
jo
cmp
pop
test
nop
or
mov
or
call
push
add
mov
lds
sbb
subb
adc
lret
bound
sbb
aas
push
push
in
push
pop
adc
lahf
sbb
pushf
fsubrl
ret
mov
jno
cltd
or
xor
push
adc
lods
repnz
int
pop
icebp
aam
push
nop
jle
clc
inc
ficoms
cmp
cmpsb
mov
sub
cwtl
dec
mov
lea
mov
mov
inc
xchg
mov
les
add
mov
lods
add
pmaxsw
ja
es
sar
fbld
popa
int
fwait
iret
jne
popa
pop
inc
pop
cld
repnz
bound
cli
xchg
lods
scas
stc
xor
into
xchg
int3
pop
or
stos
jns
int
mov
lock
insl
shl
adc
jl
aaa
cmp
cli
push
pop
cld
xor
rcr
sub
test
lds
hlt
enter
or
ja
mov
push
push
pop
or
mov
ss
enter
lahf
stos
scas
xor
xchg
pop
add
or
gs
test
in
lahf
filds
scas
rcr
iret
mov
cli
ret
mov
popf
in
adc
jge
stos
cmc
icebp
add
insl
in
lcall
push
insb
xchg
cmp
imul
iret
into
fs
add
pop
outsl
clc
jbe
in
js
adc
add
in
shlb
ds
sub
inc
inc
stos
pop
xlat
addr16
sbb
mov
iret
call
add
insb
push
sarb
pop
sub
dec
xchg
push
js
cli
addl
test
or
rcl
push
dec
outsb
gs
sahf
sti
sbb
into
ljmp
xor
shlb
xor
ss
aaa
xor
pop
xor
daa
ljmp
cmc
iret
movsb
push
mov
sub
pop
repnz
loop
cwtl
dec
leave
mov
cmp
mov
pop
shrl
push
inc
cmp
mov
xadd
adc
or
cmp
out
pop
lahf
push
cmpsb
add
adc
xchg
jno
mul
jp
jbe
push
xchg
cmpsb
mov
jae
fidivl
cmp
out
inc
cmp
sbb
loopne
arpl
jb
js
and
jp
sub
jo
pop
out
popf
adc
ja
jae
mov
push
sbb
mov
adc
pop
lret
cmpsb
aas
test
xchg
lock
jae
int3
shrb
lahf
aad
and
pop
jnp
push
cmpsl
mov
or
cmp
mov
rcrl
lret
sbb
mov
shlb
mov
push
push
mov
test
dec
fwait
mov
push
jge
insb
roll
inc
ficoms
add
mov
or
call
sub
xor
adc
inc
call
add
test
dec
stos
push
xchg
pop
fsubrl
mov
jb
lock
pusha
sbb
cltd
jbe
lcall
xor
pop
pop
xchg
arpl
lods
scas
push
adc
imul
aam
mov
test
xchg
cld
lret
add
jle
cmpsb
into
mov
pop
outsl
push
lret
insl
push
sbb
loopne
data16
dec
lock
dec
fistpl
inc
sbb
ljmp
aad
xchg
shlb
in
jg
pop
jecxz
dec
scas
jmp
test
ja
add
arpl
mov
fcoml
js
insb
and
xchg
push
shlb
jns
push
inc
push
cli
test
int
mov
icebp
or
js
pop
scas
loop
push
mov
cmp
lcall
adc
mov
mov
pop
hlt
cmpsl
adc
outsl
or
fists
push
jno
repnz
ret
push
lahf
and
or
add
mov
roll
xor
and
into
mov
movsb
ret
mov
sbb
ret
ja
cmp
mov
scas
jecxz
lock
stc
push
adcb
ja
push
mov
movsl
sbb
mov
test
add
lods
fisttpll
or
scas
fdivl
pop
enter
mov
adc
cmc
roll
jb
sahf
pop
mov
js
or
inc
movsb
clc
lcall
sub
and
jne
aaa
xor
mov
pop
sub
jp
adc
pop
dec
xor
rolb
mov
pop
jecxz
jne
cmp
mov
add
ficompl
out
cmpsl
xchg
clc
clc
mov
in
into
push
out
xor
sub
adc
sti
cmp
in
pop
lcall
out
cmp
sub
push
cwtl
ja
fwait
push
call
in
loop
stos
push
sti
lds
xor
xchg
loop
jge
push
fdivp
jl
sbb
mov
lods
cs
data16
cmpsl
out
test
xchg
xchg
movsb
test
addl
jne
ljmp
cs
pop
jo
aam
insl
dec
movsb
inc
cmpsb
push
in
pop
dec
cmp
int
addr16
repnz
xor
hlt
stos
cmp
fbstp
or
adc
jne
cli
inc
sbb
xchg
dec
into
jmp
jo
cmpsb
or
ja
mov
mov
and
std
test
psrad
outsl
push
imul
mov
add
jge
lahf
adc
and
stos
dec
cmp
aam
jle
in
lret
push
mov
pop
insb
pop
xchg
int
pushf
fsubrs
adc
adc
hlt
lcall
mov
and
cmp
outsb
ds
in
sbb
in
and
jnp
mov
sub
mov
jp
mov
mov
sahf
out
scas
push
lods
imull
stos
mov
inc
jne
in
fcmovnu
fwait
icebp
aas
int
mov
int3
scas
addb
roll
daa
add
inc
dec
dec
out
insl
fildl
jnp
mov
adc
vpsadbw
fists
dec
ret
sub
subb
push
mov
push
iret
cli
test
dec
call
or
push
push
and
add
cmp
lods
insb
inc
psrlw
lret
push
leave
cmpsl
sahf
pop
xor
sahf
insb
or
stos
stos
cmp
cli
push
pushf
lret
sbb
mov
mov
ss
lcall
mov
jbe
dec
rep
decb
sub
xchg
push
adc
cmp
lcall
sbb
jo
fldl
xor
jecxz
inc
bound
cld
mov
sub
add
push
dec
add
jp
repnz
cmp
sub
lret
and
xchg
out
pop
test
mov
mov
or
outsb
divl
inc
hlt
fcoms
shlb
ljmp
inc
roll
and
clc
fs
dec
test
add
adc
icebp
jae
mov
movsb
fwait
cli
xor
pop
or
jns
and
adc
push
sbb
loope
jl
mov
push
pop
pop
push
add
or
inc
add
lret
movsb
outsb
adc
pop
and
jl
mov
out
sbb
sbb
outsb
or
inc
and
mov
in
inc
je
sbb
or
jecxz
cmp
das
add
ret
ret
mov
mov
push
bound
push
loope
test
in
ds
cli
jge
mov
lcall
mov
inc
test
jb
loop
jno
out
outsl
int
mov
test
mov
leave
mov
aas
gs
ss
jp
les
dec
or
rorl
inc
faddl
inc
sub
xor
es
scas
addr16
and
add
shl
aad
sbb
cwtl
jnp
and
and
cmp
xor
xor
maskmovq
notl
cltd
int
pop
ja
xor
jmp
bnd
decl
ficompl
mov
sub
stos
sbb
adc
and
nop
or
push
stos
call
push
jnp
add
jb
pushf
popa
add
adc
pop
icebp
in
mov
jge
xor
cmpl
push
sti
jp
insb
jmp
sub
and
or
gs
xchg
fwait
dec
push
sbb
mov
push
jnp
push
cwtl
cmp
in
call
loop
shlb
das
mov
pop
repz
out
jae
in
shr
cmc
aam
push
cmc
mov
mov
cmp
pushf
mov
xlat
dec
in
in
pop
aas
js
repnz
ret
or
jle
cmp
int
mov
mov
mov
sbb
outsl
jge
mov
push
enter
es
test
cmp
popw
movsb
sbb
popf
and
cltd
and
lahf
jb
cmp
imul
pop
lahf
xor
inc
xor
inc
sar
push
and
push
fisubs
repz
testl
mov
imul
jge
mov
idivl
dec
mov
shrb
sub
adc
adc
cmpl
push
jnp
movsb
sbb
lods
sahf
adc
adc
mov
mov
aas
mov
adc
pop
aam
xchg
xor
push
in
ret
sub
stc
xchg
push
popa
xchg
fs
out
fdivs
roll
and
paddusb
jnp
or
fs
fwait
enter
jle
fisubl
jmp
mov
push
add
or
into
jp
and
cmp
mov
test
and
pushf
add
jae
xor
pop
test
pop
inc
xchg
inc
mov
cmp
imul
mov
aad
mov
shlb
int
and
mov
ljmp
sub
mov
push
aad
mov
mov
sarl
insl
push
add
mov
fldenv
mov
xchg
repnz
cld
jbe
cmp
dec
push
pop
jae
stos
orb
mov
ds
dec
dec
push
psubq
imull
les
dec
daa
or
js
imul
ja
insl
rcrb
stc
add
cwtl
mov
test
sahf
in
dec
pop
lret
mov
int
add
xchg
stos
adc
sub
subps
jg
sbb
mov
xor
addr16
and
mov
and
idivb
jns
inc
enter
ljmp
fstpt
push
data16
cmp
test
inc
adc
mov
inc
ja
pop
push
out
les
lods
ja
ror
aam
lahf
xor
sahf
pop
inc
dec
or
cmpsb
jne
xchg
dec
or
ds
ficomps
adc
outsl
fyl2xp1
data16
fnsave
pop
addr16
mov
stos
insl
add
mov
sti
jle
sbb
mov
push
jecxz
arpl
push
cmp
insl
push
push
mov
cmc
jne
lcall
shrb
sub
out
cmc
mov
inc
data16
xor
sti
push
inc
mov
or
or
or
push
test
push
imul
repz
and
and
mov
incb
lret
mov
mov
jnp
xor
enter
cmpsb
imul
mov
inc
xlat
add
pop
cmp
push
ds
cli
insl
shrl
rcll
adcb
xchg
xlat
jle
rolb
and
stos
fadds
rolb
jo
push
push
test
call
sbb
out
hlt
and
faddp
cmpsl
mov
test
outsb
bound
mov
into
jbe
jge
mov
mov
mov
xor
mov
xchg
loopne
and
mov
dec
push
sbb
xchg
xchg
pop
std
mov
cmc
ljmp
push
jno
mov
cwtl
push
pushl
div
bound
xor
mov
cmp
ja
lea
mov
imul
dec
sub
cmpsl
dec
lret
cmc
int3
sub
addb
arpl
jae
xor
mov
pop
pusha
sbb
mov
aaa
mov
sarb
inc
add
xor
out
daa
cmp
nop
ljmp
rorl
int3
dec
call
jg
add
test
push
xchg
addb
ja
or
sbbl
or
jl
adc
jne
jge
fmuls
sub
push
ret
xabort
scas
aas
ret
jle
js
cmp
adcb
outsb
es
xlat
sbb
fisttpll
xchg
out
imul
aam
add
outsl
inc
repnz
pusha
jmp
fldenv
adc
mov
xchg
loopne
rclb
lret
cmpsl
and
std
test
sbb
arpl
repnz
mov
or
mov
daa
test
dec
mov
fnsetpm(287
add
or
mov
jne
push
mov
add
mov
sub
in
imul
dec
xor
xor
in
inc
and
dec
fisttpl
mov
pop
sub
jo
fwait
adc
imul
mov
xorb
xchg
pop
test
ret
ret
ja
pop
mov
jbe
mov
xchg
xchg
xchg
dec
mov
neg
sub
loop
mov
mov
sbb
inc
jo
movsl
shrl
pusha
and
out
cld
sbb
stos
fdivrs
pushf
std
nop
fsubs
pop
inc
repz
xchg
mov
jl
adc
add
mov
sbb
lods
add
push
shlb
sub
pop
dec
pushf
pop
stc
pushl
addl
push
cli
jbe
mov
mov
adc
lea
inc
aad
and
mov
adc
push
sbb
xlat
rcrb
enter
hlt
xor
adc
push
addl
jmp
ret
cltd
dec
js
push
paddb
mov
push
sub
sarb
or
insl
fisttps
cltd
mov
je
in
aam
clc
mov
mov
out
push
pop
movsl
jb
jns
nop
call
sub
dec
lret
arpl
jge
jne
stos
sub
pop
add
loop
repz
pusha
xchg
shll
insb
jecxz
inc
inc
adc
jmp
jo
cmpl
pop
jns
adc
sbb
cmp
add
loope
shlb
adc
or
lret
mov
jp
call
sub
mov
xchg
ljmp
mov
mov
xchg
pop
cmpsb
and
mov
repz
xchg
xor
mov
pusha
dec
inc
movsl
leave
loop
push
add
sub
lock
add
push
test
movsl
push
mov
xchg
imul
adc
dec
les
jnp
or
lret
arpl
dec
imul
shll
je
inc
lahf
push
or
mov
xchg
rcr
pop
sarb
lds
and
ret
pop
das
cwtl
inc
in
jnp
fisttpll
jp
jge
lods
push
iret
gs
punpcklbw
insb
sub
jl
ret
stos
jle
out
inc
test
and
adc
js
popf
cltd
or
adc
das
jnp
jo
adc
enter
inc
lcall
mov
pop
lahf
idivl
scas
in
mov
sbb
adc
xor
std
push
sub
arpl
push
xor
pop
xor
ret
mov
test
sub
sti
es
sub
testb
mov
iret
fs
stos
mov
inc
jae
sbb
jo
or
mov
pop
je
lea
lods
push
shrl
adc
push
lock
stos
mov
leave
and
cmp
mov
pop
shlb
pop
push
les
movsl
or
xlat
lock
pop
fwait
ss
xor
mov
xchg
mov
int3
jae
lret
inc
test
in
ss
mov
cli
dec
push
repnz
push
pop
cmp
jmp
xchg
dec
mov
in
xor
xchg
int
inc
clc
xchg
push
clc
push
inc
and
jns
add
mov
jp
aaa
inc
lret
mov
sti
dec
mov
imul
bound
push
testb
pop
push
mov
sub
jle
sub
js
or
lds
push
push
jne
inc
pop
hlt
add
add
shr
cmp
sbb
jg
or
lods
repz
jae
loop
push
cmp
sub
xor
leave
inc
inc
jecxz
popf
fdivs
jle
mov
das
add
movsl
repnz
call
xor
test
cltd
cmp
mov
test
add
xchg
js
mov
addr16
fwait
mul
push
xchg
popa
mov
push
ss
ja
and
fimuls
and
dec
cmpsl
cmp
lock
insl
mov
push
ljmp
fisttpll
out
ret
push
movsl
aam
cmc
dec
pop
and
inc
mov
jo
mov
pop
dec
or
ja
imul
add
push
out
mov
dec
inc
adc
sbb
xchg
or
xchg
clc
aas
xchg
pushf
inc
leave
dec
rorl
dec
or
scas
decl
xor
imul
je
cwtl
adc
sarb
shr
xchg
or
dec
adc
pop
das
fdivs
cmpsb
cmpsl
xchg
push
inc
adc
dec
or
mov
push
sbb
aas
in
lahf
push
mov
into
xchg
subl
cmp
mov
push
dec
fwait
in
leave
adcb
mov
stc
dec
aad
rcrb
and
pop
je
hlt
mov
dec
xor
mov
inc
hlt
adc
outsb
in
or
xor
in
test
fcoms
add
push
out
inc
jl
push
mulb
sahf
fstpt
incl
insl
addr16
loopne
mov
test
pop
and
test
adc
in
mov
mov
jbe
shll
push
jg
cmp
lods
sbb
stos
xchg
test
insb
pop
push
stos
filds
and
sub
sbb
rcrl
fcmove
dec
scas
pop
jne
cmp
out
mov
cmp
jge
cltd
fistps
push
mov
arpl
mov
rclb
jecxz
stos
loope
xlat
rclb
or
jmp
dec
add
push
push
enter
cmp
inc
xor
sub
mov
push
fistpll
stos
sub
pusha
mov
addl
int3
cli
movsl
ja
ljmp
sbb
outsb
data16
or
xchg
jge
mov
fcom
mov
pop
shl
or
lods
ja
sub
add
cli
add
std
adc
shll
jg
or
xchg
cmovae
pop
cmp
mov
call
nop
push
jne
mov
xor
shl
loop
mov
iret
sub
push
pop
add
fisttpl
lahf
adc
fisttps
push
int
adc
mov
call
les
pushf
inc
fldl
std
push
mov
add
stos
icebp
inc
mov
andb
mov
mov
es
cmp
movsb
add
stc
adc
in
sbb
mov
and
sahf
mov
imul
lock
pop
shll
data16
mov
scas
jo
rcl
cltd
inc
lret
outsl
adc
bt
xorb
xchg
adc
fwait
cmovae
adcb
in
scas
scas
ficomps
push
fstpl
xchg
add
mov
mov
mov
mov
jle
adc
rorl
or
xor
mov
xchg
jle
subl
dec
jmp
icebp
xchg
mov
pop
cmpsb
clc
std
fmuls
sub
jmp
or
mov
add
lea
add
adc
test
test
in
inc
std
xor
xor
sbb
loope
cltd
xor
rolb
push
out
and
insb
insl
inc
out
mov
out
dec
repz
lods
iret
enter
lret
ljmp
sti
mov
inc
dec
mov
jb
cltd
lods
mov
out
pop
ret
adc
test
test
mov
cmp
push
mov
pop
ja
ret
outsb
nop
jbe
loope
fmul
push
inc
pop
mov
call
daa
fidivs
mov
or
popf
iret
xchg
jle
das
push
sub
jecxz
test
mov
repz
xchg
xor
push
fcoms
in
or
sti
shrb
push
mov
sub
push
outsl
or
pop
lcall
xor
popf
fnstenv
xor
push
sub
push
add
jnp
xchg
push
sub
enter
add
jnp
jg
pop
mov
mov
cmpsl
xlat
daa
or
in
mov
dec
lock
xchg
mov
repz
inc
sbb
push
loop
adc
jg
sub
icebp
into
dec
jmp
mov
jg
test
mov
outsb
sub
jle
fidivrl
jg
pop
andl
mov
jmp
mov
mov
and
and
cs
mov
das
enter
leave
orl
cmc
xor
inc
jg
les
dec
or
out
into
xchg
mov
mov
mov
pop
jns
add
mov
pop
sub
lea
in
test
loopne
sarl
xchg
or
pop
xchg
and
ret
int3
not
push
xchg
lock
dec
push
sbb
pop
jl
leave
and
loop
les
flds
add
push
mov
aam
insl
psraw
or
mov
adc
pushf
jb
dec
jmp
scas
push
push
and
mov
adc
decl
xor
roll
sub
lods
xchg
out
sbb
stos
sbb
je
test
std
or
sti
out
push
orl
inc
in
and
xchg
testb
negl
mov
mov
test
sbb
in
xor
insl
mov
cs
loop
test
jno
decl
inc
popa
mov
push
pusha
bound
cmp
jns
xor
sbb
sahf
cmc
arpl
inc
push
cmpb
mov
stos
xchg
inc
jbe
lahf
xchg
sub
loop
ds
out
mov
xchg
inc
pop
xor
sub
sub
pop
add
jbe
test
and
adc
mov
dec
mov
add
sub
xor
dec
cmp
pop
and
adc
aam
dec
lcall
hlt
push
fnstenv
fisubl
or
leave
xchg
mov
pop
jp
push
addr16
jmp
in
dec
adc
inc
dec
mov
movsl
repnz
rcr
daa
popa
mov
or
lret
mov
pop
popl
push
cmpsl
cs
fwait
mov
fcomp
mov
jnp
xchg
cli
inc
xor
mov
jns
xor
xchg
inc
call
incl
sub
js
pop
dec
clc
setns
scas
mov
sbb
mov
enter
in
fsubs
sbb
xchg
jno
icebp
adc
mov
ss
inc
imul
stc
push
inc
mov
out
pop
or
fiaddl
movsl
xor
jg
dec
jno
daa
packuswb
iret
cli
inc
lahf
push
cmp
imul
pusha
aaa
out
push
fisttpll
mov
adc
sar
fcmovnb
jl
icebp
push
and
fisubrl
pop
cli
adc
fidivl
pop
clc
lods
xchg
out
scas
test
inc
inc
mov
ss
bound
out
xchg
clc
xchg
fnstcw
xchg
mov
or
repnz
les
andl
pop
pop
xchg
outsl
mov
bound
add
jg
cmpsb
nop
gs
pusha
out
xor
movsb
mov
mov
pop
leave
iret
inc
imul
scas
jg
cmp
and
enter
lock
ds
add
loopne
aam
fdivrp
or
sarb
aas
fstps
movl
push
dec
repnz
movsb
lret
rcll
repnz
fisubs
xor
mov
jae
cmp
and
push
addl
pop
dec
mov
movsl
das
xchg
jb
mov
enter
cld
or
iret
mov
movsb
pusha
cs
xor
jg
sub
in
inc
jno
jae
xchg
add
jno
sub
pushf
cwtl
sbb
iret
or
dec
es
dec
dec
lea
in
dec
pop
fldl2e
aaa
add
cmp
sbb
mov
dec
aam
mov
fwait
sti
or
push
imul
cmp
loop
push
sahf
shlb
pop
mov
jo
andl
ficoml
push
stos
imulb
xchg
dec
cmpsb
xor
jmp
mov
add
lods
xchg
repnz
fistpl
stos
mov
faddl
xor
test
jp
rcr
sbb
popf
inc
sub
outsb
mov
xchg
xchg
test
not
pop
popf
movb
pop
sbb
inc
shlb
jg
pop
or
cmp
xor
xchg
cmpsl
roll
sub
mov
cmp
pop
ret
or
scas
call
rcrb
insl
sub
addr16
aas
pop
clc
pop
cmp
pop
jae
repnz
adc
call
and
mov
mov
sub
fisubrl
mov
sub
iret
jecxz
dec
add
xor
cld
adc
cmp
sahf
pop
outsb
notl
stos
mov
ficoml
sub
sub
and
adc
mov
sub
sub
push
icebp
inc
and
dec
lret
enter
xchg
jg
mov
push
sub
iret
ja
mov
xchg
loopne
jno
out
add
cmp
div
cwtl
loop
lcall
sbb
mov
sub
ret
js
repz
sti
add
mov
adc
lds
sti
int
add
imul
jae
ja
jbe
rep
and
xor
mov
xchg
sbb
and
imul
pop
adc
mov
sbb
mov
popa
cmpsb
mov
pop
int
jnp
xor
sahf
jecxz
in
pop
roll
sarl
leave
dec
fsts
outsb
insl
lock
int3
mov
mov
ljmp
mov
sub
add
jae
ret
xor
stos
lret
bound
movsl
cmc
mov
sub
es
inc
pushf
mov
inc
xor
jae
into
push
lahf
inc
aad
dec
xchg
dec
movsl
sub
pop
mov
into
push
mov
enter
adc
pop
hlt
sub
aaa
cmp
or
cwtl
lock
push
pop
dec
mov
movsb
mov
fdiv
pop
xor
cmpsl
fcoml
pop
xor
ljmp
or
xor
adcb
cld
shr
sub
test
sbb
mov
mov
ss
add
push
and
jge
shlb
imul
loope
jp
mov
lds
je
stc
roll
mov
inc
sub
cmpsb
repz
mov
into
dec
inc
icebp
xlat
ret
scas
pop
push
jmp
cmp
ret
adc
adc
stc
xor
lea
dec
push
outsl
iret
cmp
inc
fidivrl
das
xor
fbstp
int
addr16
into
cld
mov
fcoml
or
cmp
jl
movsb
arpl
popa
mov
cmc
mov
inc
push
cmp
mov
bnd
cli
xchg
push
out
and
adc
pop
pop
mov
movsb
leave
lods
pop
pop
das
sbb
leave
bound
mov
mov
inc
jmp
cmp
aas
sbb
lret
jo
pop
dec
push
or
inc
sbb
int
cmpsb
aad
jb
mov
ret
ltr
fnstcw
push
jle
scas
cmp
pop
or
mov
adc
adc
shll
loop
fdivrs
xchg
jbe
mov
js
lods
dec
dec
fwait
cmpsb
add
add
push
sar
xor
js
mov
xor
fists
add
icebp
jb
in
adc
xchg
cmp
outsl
adc
in
jmp
leave
dec
scas
xorl
cmc
inc
icebp
aad
fimuls
leave
xchg
sub
clc
mov
and
lcall
sub
mov
cld
xchg
sub
jp
dec
jl
iret
jg
xlat
jl
or
test
inc
into
gs
sub
daa
push
testb
js
inc
push
xlat
sti
lcall
inc
push
xchg
xor
dec
hlt
and
mov
xor
popa
sbb
das
jg
push
imul
pop
movsl
pop
jae
hlt
mov
aam
sub
sbb
jmp
jbe
dec
in
mov
adc
sub
roll
add
mov
sbb
push
rorl
add
fnstsw
xchg
pop
cmc
cmp
data16
lcall
cs
jne
mov
inc
leave
push
mov
jo
adc
push
xchg
or
cmp
sbb
call
jbe
sbb
mov
mov
pushf
cwtl
lret
sub
inc
pushf
xchg
dec
sbb
mov
xchg
mov
lret
fnstcw
pop
shl
mov
push
out
pop
leave
andb
sbb
in
mov
mov
mov
icebp
add
push
jo
and
in
dec
out
mov
imul
ja
lcall
inc
cmp
adc
cwtl
lock
rorl
xor
inc
push
gs
fdivrs
imul
sub
aaa
insl
in
mov
add
ljmp
lcall
pop
cmp
inc
roll
mov
dec
cmp
dec
cmpsb
sbb
scas
jge,pn
add
loop
iret
ss
xor
fdivrp
mov
cmp
decl
orb
lahf
mov
daa
nop
out
out
imul
or
mov
stc
inc
aas
push
aaa
adc
int3
xlat
lret
jmp
adc
sarl
cmp
out
in
jno
arpl
aas
fsubs
inc
or
xor
lock
pop
out
and
call
push
aaa
int3
dec
cmp
in
outsb
into
fstps
mov
mov
or
ss
out
mov
cmpsl
jmp
test
mov
arpl
lock
aaa
cs
and
pop
out
mov
leave
cmp
adc
mov
bound
leave
out
dec
popa
ds
sbb
sbb
out
je
sbb
cmp
xchg
mov
sub
or
cmp
ret
or
adc
aam
or
clc
or
cmpl
xchg
rol
add
aaa
sbb
mov
dec
repnz
pop
mov
pop
fdiv
imul
repz
ss
sub
ficoml
add
lods
cmpl
test
dec
jbe
and
sub
xchg
ret
push
jns
xor
out
adc
dec
test
push
sbb
add
ss
and
lock
lcall
fsub
add
push
pop
mov
inc
dec
jp
mov
movsb
jge
fstpl
sbb
mov
in
aad
sbb
cmpsl
xor
push
dec
stc
cltd
push
and
rcll
cmp
mov
mov
js
or
orl
and
popa
adc
xchg
cmp
fadds
sbb
dec
lret
dec
fsts
push
mov
and
sti
stos
cmp
lock
test
sahf
ds
adc
cwtl
cli
mov
push
fdivr
mov
mov
mov
push
loop
pop
mov
push
in
mov
clc
jge
cmp
or
xor
lret
mov
lock
fs
roll
andb
dec
mov
push
lcall
out
jbe
loop
pop
adc
out
cltd
scas
mov
adc
adc
mov
fldenv
repz
mov
jge
sub
enter
pop
xor
clc
cltd
das
icebp
aas
cmp
inc
outsl
fnstsw
sub
xchg
add
out
or
cmp
push
mov
out
dec
mov
dec
je
lret
insb
add
lods
xor
ja
or
jne
mov
loopne
nop
mov
nop
aad
loop
call
leave
add
cli
ret
add
mov
mov
add
test
fistl
adc
sub
fs
or
test
inc
inc
ret
pusha
add
das
loop
mov
pop
in
mov
fs
cmpsl
push
xor
std
cltd
mov
adc
cmp
data16
scas
dec
jle
fisubrs
xor
xchg
mov
or
xor
test
das
pop
add
dec
dec
jle
pop
ret
inc
or
adc
sbb
lock
gs
mov
sarb
ret
fstl
mov
jnp
cmp
mov
shlb
bound
sti
xchg
clc
ret
and
lahf
out
insl
mov
mov
add
lods
mov
jle
lds
hlt
cmp
hlt
jae
test
lret
cmp
lret
popf
mov
mov
out
xchg
mov
loope
dec
mov
push
lods
pop
or
push
jecxz
shl
cmp
fsubs
dec
sbb
sbb
sbb
stos
js
and
sahf
sti
cmpsl
dec
mov
xchg
sub
in
push
mov
mov
sarl
and
jae
imul
pop
xor
sahf
inc
mov
dec
pop
xchg
sub
ret
iret
js
imul
loopne
mov
fadds
dec
mov
cmp
das
dec
xor
xchg
push
sub
je
lret
js
pop
jb
xchg
xchg
scas
cs
sub
idiv
ljmp
sbb
fbld
and
sbb
xchg
jmp
jb
dec
inc
test
dec
dec
sbb
xlat
mov
imull
jge
sub
cmp
shlb
fistps
jg
adc
sbb
popa
push
mov
mov
adc
sub
out
mov
js
int
and
scas
fwait
push
xchg
cwtl
repz
aaa
sbb
sub
xchg
stos
jl
pop
and
sub
sahf
daa
sti
int
loop
adc
jg
mov
sbbb
inc
mov
sub
inc
dec
sbb
imull
ficompl
data16
cwtl
jbe
mov
bndstx
in
xlat
jns
xchg
xchg
std
rcll
adc
pop
xor
mov
sub
enter
std
jg
dec
or
mov
xchg
inc
int
inc
mov
lcall
das
les
push
cmp
sbb
push
popf
in
scas
adcl
lds
mov
fnsave
imul
stc
out
out
das
jmp
sbb
jle
xchg
in
das
test
mov
jmp
std
arpl
flds
cmp
cmp
cmp
jo
xchg
mov
and
stos
xlat
adc
mov
push
jl
call
out
push
shll
bound
shrb
push
mov
pop
aad
icebp
adc
inc
jbe
adc
xchg
dec
xor
sahf
jae
pop
jg
bound
stos
add
pop
js
dec
xchg
scas
mov
xchg
insl
mov
mov
sbb
lret
int
lds
lea
repz
stos
pop
pop
jbe
mov
xchg
in
inc
scas
movsb
adc
sarb
mov
data16
xor
daa
sub
xor
or
popa
mov
xchg
inc
xor
jmp
cmp
add
aaa
push
test
cmpsl
dec
pop
insl
inc
pop
xchg
into
inc
imul
push
fisubs
xchg
imul
xlat
cmpsl
ljmp
or
fcmovnu
mov
jne
mov
xor
mov
fsubrp
sbbb
lock
fcompl
and
cmp
mov
and
cmp
fcoms
arpl
mov
aam
or
scas
ja
sub
sti
mov
mov
inc
sbb
punpckhwd
push
sbb
mov
out
ret
mov
outsl
jae
push
std
or
push
sahf
imul
aas
lds
mov
sub
popa
add
dec
pop
xor
mov
jb
shrd
cmp
xchg
sub
sbbb
pop
into
test
cli
fwait
scas
ljmp
test
ljmp
out
jo
mov
mov
mov
adc
daa
pop
ss
dec
int
repnz
ljmp
leave
adc
out
and
aas
mov
sbb
call
sbb
mov
orb
int3
mov
movsb
mov
mov
iret
push
test
or
out
jmp
loop
sbb
imul
rcll
or
push
pop
or
sub
call
sbb
xor
cmp
add
cmpsl
xor
fdivrp
mov
push
push
cmpsb
repnz
pusha
xor
es
mov
dec
pop
cmp
add
loopne
call
xchg
icebp
fsubrl
mov
jle
movsb
shlb
xchg
scas
sarb
cmpsb
xchg
aaa
pop
push
movsl
pushf
lock
pop
add
mov
rclb
jle
fsubl
mov
cwtl
sarl
jb
mov
fcmovbe
fsub
sbb
xor
scas
dec
lds
not
dec
and
pop
jge
pop
arpl
gs
sahf
jp
ficoms
jae
mov
mov
or
ret
push
or
cwtl
and
scas
mov
divl
push
cmp
and
mov
repnz
and
adc
mov
pushf
xor
ret
shl
lahf
push
loop
addr16
mov
and
rcrb
sti
dec
sub
icebp
out
adc
test
lcall
mov
into
jae
loopne
xchg
or
scas
inc
pop
push
std
adc
stc
shr
jge
push
cs
jno
jb
pop
rcr
mov
fwait
mov
pop
mov
sub
rolb
in
or
das
mov
sub
pop
sbb
icebp
dec
arpl
clc
stc
or
subl
adc
scas
pop
lock
xchg
in
inc
ss
aam
push
cmpl
jmp
push
push
or
test
mov
and
jb
into
xchg
dec
lods
jg
mov
dec
in
or
push
pop
push
cmp
cmpsb
shll
pop
add
mov
addr16
jnp
pop
pop
punpckhdq
xchg
mov
ss
dec
repz
dec
inc
sbb
lock
jb
inc
jle
js
cmpsb
add
stc
outsl
push
es
iret
adc
inc
mov
jge
dec
shll
xor
jno
aas
clc
mov
dec
xchg
xchg
inc
icebp
das
lret
fiadds
enter
cmp
stos
pusha
or
xchg
test
cwtl
cmp
fidivl
sub
xlat
fnsave
adcb
ja
nop
or
inc
add
mov
xchg
sub
mov
data16
cwtl
ja
popf
mov
inc
mov
adc
xor
ds
cmc
jnp
cmpsl
fsubrs
mov
jge
push
pop
lds
jo
mov
out
lret
mov
lret
gs
jne
sbb
mov
sbb
cld
outsl
in
mov
scas
pop
test
jno
mov
inc
pop
mov
pop
xchg
lahf
inc
push
pop
lret
jp
movsl
icebp
wrmsr
mov
ret
les
test
fnstenv
je
test
mov
into
cmc
test
lods
pop
adcl
push
mulb
int
jmp
pop
xchg
out
rcll
jle
mov
fstl
in
xor
leave
leave
adc
dec
and
mov
mov
cli
jmp
mov
sbb
int
add
ret
mov
pop
das
jb
pop
mov
xchg
lds
mov
sbb
push
sub
stos
sub
cmpl
cmp
jmp
stos
dec
inc
add
and
cmp
push
sub
ss
stos
mov
lock
aas
rcll
filds
sbb
fsubrl
add
mov
cmpsb
and
xchg
insb
pop
sub
cmp
xchg
push
push
pop
push
adc
popf
aaa
mov
call
jbe
xchg
cmp
jg
push
pushl
push
cmp
nop
into
in
sub
xchg
out
test
test
mov
sub
dec
je
sub
sub
sbb
ljmp
sub
xor
mov
std
rorl
and
jge
add
andl
es
add
insl
dec
inc
gs
mov
inc
cmpsl
xchg
jbe
xchg
js
stc
call
repnz
mov
bound
cmp
mov
scas
mov
mov
int3
pop
test
mov
mov
or
insb
mov
jbe
into
setg
push
adc
xor
push
movsl
mov
xchg
into
aam
ljmp
add
pop
xchg
clc
pop
das
ret
pop
mov
mov
inc
mov
xchg
xchg
mov
andl
dec
mov
mov
or
call
popf
aaa
outsl
iret
and
test
mov
sbb
fisubl
dec
imul
pop
test
cmp
and
scas
push
or
pushl
les
mov
lret
xor
adc
nop
add
scas
xor
mov
push
loopne
call
scas
add
int3
mov
testl
lea
negb
mov
xor
ss
daa
rol
dec
dec
xor
adc
shl
adc
push
lock
loop
je
pop
adc
lds
dec
mov
push
hlt
xchg
out
outsb
addr16
lock
and
out
in
xchg
pop
mov
pushfw
adc
xchg
subb
lods
mov
andb
inc
roll
sbb
into
pop
lods
push
dec
stc
dec
push
jmp
dec
inc
addr16
movsl
shl
cmp
adc
pusha
mov
inc
orl
pop
mov
js
inc
cmp
je
hlt
mov
add
ss
fmuls
push
xchg
bound
addr16
xchg
mov
and
pusha
cmp
loope
push
sahf
sbb
mov
pop
jg
jnp
mov
and
push
icebp
popf
daa
fwait
or
je
insb
sar
jmp
scas
movsb
add
xchg
das
aas
cmp
loop
ja
mov
hlt
div
in
push
add
lcall
inc
test
mov
call
lds
pop
inc
inc
pop
hlt
rcrb
push
push
shlb
sbb
sbb
push
repnz
fstpt
gs
aad
inc
cltd
and
scas
push
sbb
out
adc
cli
or
movl
xorb
insb
mov
in
orl
sub
pop
inc
nop
mov
fmul
in
mov
pop
dec
loope
mov
rolb
dec
sahf
mov
fstpt
leave
and
mov
test
jae
push
inc
and
dec
in
testl
push
inc
push
repnz
std
dec
add
test
popf
pop
call
mov
cmp
push
lcall
mov
sub
dec
inc
ds
lcall
sbb
and
and
add
scas
mov
bswap
negb
lcall
mov
and
dec
mov
fwait
imul
push
int3
xor
iret
or
xor
adc
lahf
fbld
sub
inc
jb
pop
repnz
and
sbb
inc
push
push
mov
mov
jnp
xlat
jg
lock
jl
xor
and
xchg
popa
repnz
xor
divb
push
test
dec
outsl
pop
jo
push
lock
mov
ficompl
stc
mov
sbb
mov
pop
addb
sub
dec
sbb
out
sub
xchg
jb
dec
or
cmp
sub
mov
decb
f2xm1
push
or
dec
xchg
hlt
fwait
aaa
xor
mov
pop
cmpl
cmp
stos
rcl
test
push
mov
sub
js
push
out
stos
insl
lods
push
in
mov
jecxz
push
and
push
jmp
inc
adc
lock
xchg
adc
push
mov
add
test
add
mov
rclb
inc
sbb
mov
push
jo
shll
testb
mov
pushl
sub
mov
xlat
fwait
negb
rorl
in
outsl
mov
outsb
xchg
jo
jo
cltd
xor
call
mov
outsl
sub
adc
or
sbb
mov
int
std
xor
lret
push
lock
aas
xor
push
dec
pop
movsb
push
and
pop
jno
push
push
or
cmp
dec
rcl
int3
mov
cmc
inc
insb
pop
add
stos
aam
mov
test
cmpl
jmp
add
mov
jbe
lock
jle
and
out
fs
fs
repz
imul
inc
mov
lea
ds
ret
mov
and
sti
aad
subb
xor
jg
lret
divb
inc
loopne
add
sub
sbb
sub
arpl
and
mov
sub
pop
mov
shll
sahf
mov
rorb
push
sbb
or
in
and
repnz
xchg
fisubl
dec
loopne
test
movsl
notl
push
add
mov
stos
dec
jmp
in
pop
inc
inc
in
movsl
cmp
push
test
inc
inc
inc
dec
adc
ljmp
push
int3
cs
cli
mov
sub
xor
incl
lret
and
aas
dec
testl
mov
push
enter
dec
push
adc
jecxz
lahf
ds
sbb
ja
imul
data16
pop
out
sub
out
neg
mov
cmp
jge
js
or
add
decl
or
sub
adc
mov
cmpsl
mov
adc
or
js
jnp
int3
jmp
or
jle
mov
add
andl
icebp
add
push
inc
jg
push
arpl
add
repz
adc
imull
adc
shrl
cld
xchg
xchg
roll
cli
int3
dec
sbb
sub
and
xor
das
mov
or
mov
and
jne
pop
mov
mov
adc
enter
pop
mov
push
test
fimuls
pop
mov
push
pop
cmp
xor
mov
xchg
in
enter
mov
sahf
imul
loop
mov
jae
pop
rcr
xlat
int
mov
fs
add
cmpsb
adc
mov
jmp
sub
sub
adc
mov
inc
cmp
pop
pop
dec
push
jno
pop
push
aas
sub
mov
in
mov
push
add
std
pop
ljmp
push
in
cmp
sub
inc
inc
push
mov
ss
mov
jno
lcall
and
inc
add
mov
arpl
sub
mov
cmp
movsl
mov
push
iret
clc
mov
sti
es
leave
cld
add
add
push
xchg
cmp
xchg
cmpsb
subl
lret
roll
pop
test
das
mov
dec
push
mov
enter
ja
mov
mov
mov
bound
outsb
xchg
inc
mov
into
shlb
jo
subl
xor
jle
std
cli
pusha
sbb
loope
cs
jbe
push
loop
es
xchg
adc
stc
push
push
xor
xor
pop
mov
stos
jnp
in
mov
adc
cmpsb
add
out
pop
insl
das
or
dec
loopne
push
ret
add
fistpll
fnstsw
pop
push
pushf
jl
mov
push
add
pop
ja
outsl
lcall
adc
cmp
xchg
jmp
in
ds
dec
movsb
sbb
out
xchg
or
adc
out
xchg
mov
les
pop
add
adc
fcoml
mov
popf
test
fisubl
xor
jecxz
push
sahf
xor
adc
jnp
mov
ss
or
aam
pop
sbb
sahf
aaa
lea
add
adc
mov
jne
sahf
cmpsb
jecxz
leave
movsb
or
fnstsw
cmp
or
rcrl
sub
mov
adc
push
sbb
addr16
scas
fs
push
mov
rorb
arpl
stc
dec
ds
mov
dec
fbld
dec
inc
wbinvd
sbb
dec
lcall
push
stc
ljmp
jmp
and
adc
mov
xchg
jl
jg
jecxz
cld
dec
ds
sub
mov
push
mov
or
cmpsb
pushl
imul
sub
arpl
jne
add
imul
or
test
mov
mov
popa
jmp
mov
cmp
pop
fdiv
in
mov
lods
pop
cmc
scas
stc
push
mov
xchg
add
cmp
inc
insb
sbb
mov
inc
cmp
and
xchg
ja
test
pop
movsb
inc
loop
es
popf
jg
push
ficomps
insl
dec
inc
xor
push
push
cmp
ret
ljmp
mov
push
mov
lcall
lret
pop
jmp
pop
push
mov
mov
inc
jbe
sub
xchg
and
clc
and
aaa
sbb
sub
and
cwtl
cmp
sbb
xchg
or
int
mov
dec
aam
imul
jge
pushf
cmpsb
stos
jo
js
inc
cltd
lds
popf
inc
iret
imul
sarl
cmp
dec
arpl
or
ret
or
lret
xorb
cmc
pop
fnstcw
sub
push
daa
out
insl
push
in
cmp
in
dec
insb
xchg
cli
xor
add
lret
lods
pop
cmp
adc
sbb
jecxz
popa
test
mov
mov
push
je
cmp
or
mov
stos
mov
ss
sub
inc
jb
test
pop
notb
insl
sub
push
loope
lcall
aaa
es
push
insb
movsl
and
push
and
lods
pop
sbb
insl
popf
cmp
inc
xchg
jp
in
adc
adc
test
in
stos
fistps
scas
test
mov
int3
jmp
fcom
cmc
mov
fidivrs
hlt
push
int3
test
in
stos
pop
mov
outsb
data16
pop
popf
or
dec
popa
cli
test
cmp
push
test
outsb
in
repz
pop
in
pushf
sub
mov
clc
adcl
push
xorb
cmp
inc
and
and
das
iret
les
dec
jbe
aas
ret
outsl
xor
mov
jge
out
mov
xchg
icebp
push
adcb
lea
sbb
or
xor
ds
insb
repnz
rcrb
xchg
jno
pusha
or
or
mov
das
pop
sub
jg
nop
xchg
ret
aaa
enter
mov
add
or
test
shrl
or
ficompl
xchg
enter
mov
popa
daa
add
cmp
bnd
add
push
push
adc
or
or
inc
pushf
je
jg
out
add
in
jl
add
add
fdivrl
sbbl
test
leave
pop
push
lea
out
push
and
in
inc
dec
sub
scas
sti
mov
mov
imul
jno
inc
out
xor
into
pop
jg
aaa
xchg
inc
jae
ret
test
repnz
push
and
fimuls
out
ss
pop
or
imul
mov
push
inc
mov
hlt
mov
sub
repnz
out
inc
outsb
rcll
cmpsl
imul
lea
xor
pop
sahf
push
jbe
call
mov
xchg
cmp
fsubl
fisttpl
mov
sbb
int3
repz
addl
sbb
sbb
fs
jb
int3
mov
mov
dec
add
adc
fisubrl
push
cmp
fisttpll
scas
cmpsl
jle
and
lock
pop
adc
or
sbb
in
mov
outsb
xor
sub
pop
out
xor
push
orb
xor
dec
loop
lret
das
and
mov
mov
stos
mov
cmc
push
pop
ret
mov
mov
dec
and
iret
outsb
sahf
loope
mov
and
mov
cld
loopne
lahf
out
in
cmp
mov
push
addr16
lds
jmp
dec
lock
in
mov
jl
jge
cmp
aad
pushf
push
adc
mov
shll
aaa
mov
imul
sub
in
fcmovnb
mov
sub
mov
add
iret
xorl
aad
dec
arpl
adc
pop
mov
and
es
fcomps
sbb
adc
xchg
out
fiaddl
aam
adc
adc
inc
outsb
lret
sbb
sti
pusha
rcrb
lahf
push
xchg
jg
cmp
mov
lods
inc
jne
sti
std
xor
dec
mov
push
mov
adc
sub
or
fwait
clc
insl
inc
mov
int
mov
imul
cmp
fwait
mov
lahf
mov
pop
xor
inc
dec
data16
and
cmp
jle
pushf
ffreep
in
addl
sub
in
lea
and
es
push
gs
lcall
push
inc
adc
inc
xor
mov
jne
jo
jb
inc
pusha
pop
jne
jb
fldenv
dec
pushf
jg
imul
data16
loop
ror
sarl
xchg
push
cmc
xor
cmpsb
shlb
or
rcrl
sbb
pushf
dec
push
not
dec
rcll
adc
jnp
lock
push
jb
adc
aam
sub
out
pop
inc
xorl
mov
inc
out
push
sbb
mov
call
xrelease
mov
sarl
cmp
imul
mov
repz
in
fildll
xchg
stc
xlat
mov
clc
aam
mov
out
int3
loope
xor
mov
data16
pop
rclb
imul
mov
and
dec
xor
jnp
lahf
repz
movsl
push
sub
sarl
mov
clc
out
jb
mov
ljmp
dec
ja
fadds
mov
sub
xchg
fbstp
ret
es
jnp
pop
sub
mov
xchg
ds
push
ljmp
push
inc
dec
daa
pop
in
mov
mov
sub
loopne
sub
lds
mov
and
aam
inc
cmp
sbb
add
dec
mov
setnp
add
or
push
mov
sub
cmp
and
sbb
mov
mov
cmpsb
negb
dec
in
imul
push
push
mov
mov
cwtl
out
add
out
cmp
js
dec
enter
outsb
sbb
adc
inc
pop
out
sbb
inc
sbb
inc
pop
push
cmp
shrl
pushw
mov
lahf
mov
mov
mov
dec
mov
push
xchg
pushf
shrl
adc
iret
inc
sbb
fstl
hlt
cli
scas
sbb
adcb
pop
adcl
mov
and
mov
sbb
sbb
fistpll
vprotw
mov
mov
jecxz
jb
inc
lahf
push
icebp
scas
sbbb
jp
mov
ret
mov
int3
cltd
insb
insl
insb
outsl
ja
or
repz
sbb
inc
movsl
mov
in
ja
and
inc
cmp
cmp
pop
nop
hlt
xor
or
adc
mov
in
mov
jb
and
ss
push
dec
push
insb
fstl
push
adcb
gs
iret
inc
pop
fadds
and
bound
sub
inc
pop
cld
adc
mov
jge
ljmp
int
xor
stc
sub
outsl
enter
or
outsl
mov
ret
mov
push
sbb
lds
mov
cmp
push
or
mov
jg
mov
mov
jl
cld
es
insl
and
mov
jl
mov
ds
enter
jle
repz
loope
inc
mov
push
call
inc
bound
sbb
inc
nop
mov
out
xchg
dec
stos
test
inc
dec
xlat
jl
cmp
mov
addr16
test
es
sahf
sbb
mov
movsl
cmp
dec
fdivs
out
pop
cmpsl
lods
ret
mov
mov
xor
insl
xchg
shll
push
aaa
mov
push
hlt
cmp
cli
pop
jg
aaa
test
lds
and
push
andl
sub
fcoms
mov
hlt
mov
pushf
stos
dec
fcomip
repz
or
repnz
push
push
xor
sub
jecxz
lcall
test
insb
jnp
cltd
fs
pop
xor
pusha
push
ret
mov
xchg
fsub
shrb
icebp
xlat
xchg
out
push
mov
jg
int3
call
sub
pop
aaa
cs
nop
lret
or
sbb
adc
ret
xchg
shlb
dec
cmp
imul
aam
aam
ja
pop
jmp
es
scas
add
out
lea
inc
pop
jl
cmc
xor
iret
fwait
into
and
or
adc
inc
sbb
mov
das
into
adcb
lods
mov
popa
scas
inc
adcb
cmpsl
dec
addl
es
cmp
out
es
push
outsb
bound
sub
push
sbb
lds
sbb
push
test
mov
nop
rorb
mov
mov
mov
gs
aaa
fstl
in
decl
sub
mov
scas
add
sbb
push
in
push
iret
lods
cmc
or
and
rcrb
mov
mov
xchg
mov
cld
adc
sbb
xor
jno
mov
test
adc
pop
adc
jns
stos
shll
sbb
out
mov
stc
fnstenv
mov
inc
cmp
stos
mov
imul
push
fidivs
ret
stos
jl
sbb
cmpsb
or
ja
enter
rcll
das
push
in
dec
and
mov
fs
roll
xchg
test
lods
jg
aad
pop
pop
fbstp
lods
in
cli
cli
inc
xor
add
aaa
adc
lods
stc
xchg
in
or
and
ret
jge
sbb
sbb
cltd
xchg
dec
stos
lock
stc
cmp
jecxz
outsb
dec
mov
lods
push
push
and
lods
adc
inc
or
leave
bound
mov
push
enter
sbb
adc
add
shlb
ja
push
leave
cmp
pop
pop
push
sbb
xchg
stos
jns
sbb
call
cmp
mov
xor
hlt
fisubrl
push
or
pop
mov
mov
push
rorb
cmpsb
arpl
loop
mov
movb
and
push
add
in
lods
iret
lahf
ss
pusha
int3
popf
ret
push
xlat
dec
inc
inc
and
inc
mov
pushf
fsts
loope
std
jecxz
fsts
and
js
mov
pop
je
into
out
push
outsb
jno
outsl
rcll
loope
jg
fisttpll
shlb
adc
pusha
push
pop
sbb
push
adcl
lock
xor
mov
pop
bound
sbb
xor
fwait
lahf
daa
pop
outsb
xlat
jge
pop
jg
mov
int
mov
cmp
jo
gs
test
jnp
stos
xchg
outsl
in
pop
ja
push
pop
lods
imul
cltd
fisttps
lret
cmp
imul
or
xor
sbb
adc
adc
xor
dec
addb
pop
in
popa
pushf
cmpsl
mov
cmpl
sbbb
inc
shrb
jae
inc
out
nop
scas
mov
mov
sbb
test
insl
test
dec
mov
mov
pop
dec
jns
pop
lret
jb
mov
ljmp
inc
lcall
xlat
add
fsts
xchg
aad
mov
xchg
jmp
das
mov
push
xchg
pop
leave
sub
stc
mov
sbb
imulb
fwait
inc
push
arpl
cmovno
ds
mov
mov
pop
mov
test
imul
pop
mov
lret
xchg
dec
xchg
mov
mov
in
sbb
pop
mov
dec
mov
adc
mov
test
or
and
pop
mov
mull
and
call
mov
adc
xchg
out
or
fldenv
push
imul
inc
add
inc
test
dec
adc
daa
ret
add
lods
jne
jbe
ret
pusha
mov
jecxz
push
cmp
push
push
xchg
cmp
loopne
insb
inc
dec
stos
jno
popa
std
pop
push
mov
jp
inc
jae
sti
shll
xlat
xor
cmp
pop
das
sub
mov
mov
dec
xor
pushf
mov
test
mov
out
sahf
dec
out
dec
ja
adc
add
mov
cltd
aaa
stos
icebp
mov
push
imul
bound
push
push
gs
daa
ds
add
sbb
sub
push
mov
movsb
addr16
shr
pop
xchg
add
dec
mov
fistpl
push
sbb
push
push
mov
repz
loope
repz
aas
xor
and
ret
sub
shrl
aaa
cli
lahf
sbb
inc
and
lcall
aad
or
xchg
cmp
aam
test
jae
icebp
lret
mov
popf
flds
testl
dec
das
fsubp
aad
pop
pop
pusha
adc
mov
out
push
lea
rorl
movb
jnp
jp
repz
mov
jecxz
aaa
cmp
dec
pop
lods
pop
movl
cmp
pop
orl
sbb
cmpsb
mov
mov
jne
inc
pushf
imul
addr16
daa
mov
fisubl
mov
or
test
aam
cmp
dec
mov
inc
leave
scas
push
aaa
dec
cmpsb
mov
sub
movsl
cmc
mov
cs
xchg
scas
inc
aam
decl
dec
dec
mov
sub
stos
test
jecxz
out
adc
pop
inc
fdiv
mov
pop
cmp
sub
por
cmpsb
xor
cmp
arpl
adc
ljmp
pop
xchg
insl
cltd
sahf
aaa
add
decb
ret
push
mov
mov
int
mov
xlat
sahf
add
mov
lret
jb
loopne
inc
mov
xchg
mov
aam
xor
pop
pop
ret
xchg
mov
movsl
mov
iret
sub
xchg
xor
repz
leave
test
xor
xor
push
insb
cwtl
lods
shll
sub
mov
sub
popf
adc
and
jns
outsl
jge
and
scas
mov
in
lahf
adc
or
adc
rclb
jmp
and
mov
mov
and
leave
adc
pop
jno
sub
xor
movsb
cmp
sbb
cmp
and
in
xchg
mov
mov
xor
and
lods
pop
sub
pop
dec
leave
lcall
mov
scas
mov
xchg
ljmp
and
fs
dec
lret
jmp
stos
pop
sbb
mov
push
int3
repnz
inc
sub
jecxz
ds
push
adc
bound
mov
call
enter
jl
imul
inc
sub
or
lock
cmp
sahf
cmp
fildll
mov
inc
dec
int3
sbb
add
cmp
sub
icebp
lods
addb
outsb
loop
xor
stos
inc
popa
rolb
mov
add
mov
loop
xchg
cmp
inc
jnp
dec
mov
rcrl
std
dec
nop
xchg
mov
and
add
mov
sbb
xchg
ret
scas
stos
jle
xchg
add
stc
aam
leave
or
dec
fiadds
loop
arpl
imul
dec
cmp
jl
fcoml
sbbb
cli
mov
outsb
pusha
mov
fdivr
push
sbb
jbe
cld
pop
shr
inc
xor
jp
insl
aas
jecxz
loopne
fstps
stos
jbe
inc
add
pushf
cmp
inc
xchg
jne
or
and
cmp
lea
jecxz
xchg
sarb
push
and
sub
sbb
into
push
lea
sbb
push
addl
sahf
pop
shrl
mov
popa
ret
mov
xchg
pop
or
or
mov
into
pop
push
xor
push
decl
jp,pt
pop
insb
mov
and
icebp
xchg
add
dec
mov
rorl
lea
daa
es
jecxz
fmuls
or
mov
dec
aas
test
sbb
sub
movsb
and
fstl
jmp
jp
dec
xchg
or
push
mov
xchg
pop
in
enter
sbb
jecxz
data16
cmpsb
clc
aas
cmpsb
enter
outsb
pop
push
xchg
xchg
mov
hlt
and
sbb
scas
mov
mov
je
insl
ret
pushf
jecxz
mov
scas
adc
stos
rorl
scas
cwtl
test
and
arpl
dec
mov
adc
xorl
ret
xor
lods
mov
push
stos
stc
scas
sahf
or
xor
sub
mov
ficoml
pusha
shll
sbb
mov
mov
dec
adc
aam
push
and
cmp
pop
inc
scas
mov
popa
dec
lea
ret
les
hlt
out
je
test
mov
push
in
inc
sbb
stos
pop
int3
fwait
mov
movsb
daa
xor
mov
push
push
scas
mov
cs
loop
add
cwtl
shlb
add
mov
lods
aad
sbb
scas
hlt
pop
dec
or
aaa
je
inc
ret
je
scas
jg
dec
and
repnz
or
sub
out
negb
std
je
mov
jb
addr16
shl
inc
xlat
mov
pop
movsl
test
pusha
and
leave
adc
mov
mov
cmp
mov
mov
mov
inc
mov
cmpsl
outsl
or
dec
cmpsb
sbb
bnd
ret
cld
jmp
ds
mov
int3
lahf
ret
int
faddp
inc
incl
add
mov
in
sub
stc
xor
jl
and
pop
cwtl
jo
adc
mov
and
jne
nop
mov
sahf
mov
insb
xchg
aad
xor
jnp
lret
rclb
jl
repnz
ljmp
imul
int3
sti
xchg
dec
mov
out
mov
xlat
addr16
rorl
push
enter
adc
rol
jle
sub
fmul
inc
dec
pop
jp
or
repnz
or
call
xor
daa
insb
lahf
sti
xor
dec
divl
bound
jns
mov
inc
in
sub
cmp
cmp
inc
cs
mov
test
ror
pop
in
imul
xchg
das
inc
mov
xchg
adc
xchg
sbb
rcll
push
mov
xchg
ret
and
mov
fs
pop
xchg
pop
pop
stos
push
fwait
inc
dec
xor
push
lods
faddl
sahf
xor
pop
insl
fdiv
push
mov
outsl
sbb
fs
fmul
out
dec
movsl
addr16
das
mov
push
mov
sbb
sti
jl
dec
fs
ds
add
lret
pushf
cwtl
cmpsb
cmp
orb
inc
xor
jp
repnz
mov
enter
jmp
in
dec
pop
inc
add
pop
scas
fists
lcall
cwtl
mov
lock
out
ja
pop
cltd
cmp
cmpl
es
repz
add
push
outsl
xor
hlt
mov
inc
or
inc
insl
fistps
sub
add
jp
push
pop
pop
les
imull
adc
mov
jg
or
ret
call
hlt
fs
xchg
pop
call
mov
fdivl
cmp
repz
bound
lret
das
jmp
pop
dec
or
inc
adc
sbb
stos
jecxz
cmp
xchg
sub
mov
pop
jl
movsl
jbe
sbb
or
jnp
stc
pop
mov
push
into
push
lret
add
adc
add
jne
inc
push
push
pop
mov
addr16
jge
stos
mov
xchg
mov
jb
mov
xchg
loope
jmp
gs
xor
lret
dec
sub
movsb
xchg
pop
in
gs
fxch
and
inc
pop
aad
mov
mov
mov
dec
add
sub
hlt
nop
and
lock
pop
std
fwait
pop
faddl
mov
sbb
inc
mov
stc
jae
and
jp
imul
mov
mov
or
xchg
lea
lds
loopne
fdivrl
jg
test
xchg
mov
fidivl
out
mov
xlat
jae
bound
in
inc
cmp
jbe
cltd
cmp
sbb
push
loop
test
out
mov
das
sbb
cmp
fldl
add
sarl
adc
inc
mov
dec
pop
es
push
sbb
outsl
dec
add
aaa
in
test
in
mov
ja
pop
cmp
dec
cli
bound
inc
push
lods
xchg
xor
insb
push
loopne
cmp
pusha
repz
inc
mov
add
add
dec
and
fldenv
out
leave
xlat
and
arpl
mov
pop
subl
jns
sub
sub
test
or
mov
mov
in
add
pop
mov
or
jae
mov
sub
push
insl
std
test
xchg
out
stc
jg
sahf
mov
jo
or
sub
outsb
outsb
cld
cltd
mov
pop
lret
mov
sub
pop
sbb
ljmp
mov
mov
enter
mov
inc
dec
sub
push
call
out
imul
and
sbb
div
jns
and
inc
and
push
pop
scas
lahf
mov
icebp
lds
and
cmp
loope
movb
jnp
pop
fsub
adc
pop
or
cmp
nop
scas
push
test
pop
or
mov
test
or
lret
xchg
in
clc
pushf
test
mov
jnp
or
fidivrs
and
or
gs
or
pushf
cmp
leave
cmp
pop
push
jne
sub
inc
lret
repnz
or
xchg
nop
mov
shlb
mov
mov
add
loopne
sbb
lret
push
or
lar
add
inc
pop
in
jb
mov
mov
xchg
mov
fxch
stos
je
shrb
and
dec
pusha
fildll
inc
push
daa
fdivl
jne
push
mov
and
add
lret
arpl
test
inc
mov
out
dec
imul
and
adc
cmp
or
and
jno
xchg
jne
and
or
fiaddl
sti
ss
into
les
adc
mov
fisttpll
movsl
jle
dec
sarl
sbb
inc
mov
es
dec
sbbl
pop
and
adc
sub
test
insb
clc
xchg
leave
xorl
fdivrp
push
imul
xchg
jb
mov
notl
call
out
add
daa
movsb
push
test
cmp
mov
cmpsb
aas
xchg
cmpsl
mov
sbb
fs
push
stc
into
pop
call
mov
cmp
lret
add
cmp
nop
mov
mov
fdivrl
rcr
mov
mov
out
mov
lds
cmp
adc
inc
xchg
lahf
sub
cltd
andl
movsl
dec
sub
aad
xor
scas
sbb
pop
inc
mov
push
and
mov
xor
data16
jbe
lcall
and
je
pushf
or
pusha
and
addl
imul
shrb
push
xlat
pop
callw
jb
jae
int
and
xor
sbb
aas
notb
inc
lret
call
in
mov
mov
test
out
push
jnp
rep
xchg
lods
cmpl
test
sbb
cltd
and
adc
sahf
jmp
push
out
dec
mov
ss
mov
xor
loope
subl
push
push
into
sarb
ror
xchg
inc
leave
int3
jg
pop
sub
dec
push
jne
ret
xchg
arpl
mov
inc
or
pop
test
jecxz
bswap
mov
dec
jno
cmpsl
daa
inc
gs
ror
ror
sub
xchg
jg
adc
insb
lock
loop
outsb
in
movl
inc
mov
xchg
enter
fsubs
add
xor
in
pusha
loopne
in
cwtl
add
icebp
fdivr
inc
fst
fdivrp
push
cli
sbb
or
sbb
enter
cmp
or
cmp
mov
xor
jp
mov
out
mov
mov
call
test
push
push
test
push
mov
or
jae
adc
xorl
popf
xlat
out
inc
pop
xor
movsl
add
fsubs
xchg
jg
sbb
inc
push
test
mov
imul
daa
mov
mov
add
xlat
jb
test
or
jge
or
rcrb
jp
scas
cmpsl
aam
xchg
test
push
push
push
loop
jno
test
push
std
mov
inc
or
xchg
inc
loopne
shl
aad
addr16
xorl
roll
pop
cmp
mov
cli
and
ljmp
outsb
cmp
lods
aam
xor
mov
out
test
push
mov
sbb
sbb
pushf
jne
popa
cltd
push
mov
scas
icebp
popf
jns
push
enter
out
in
and
roll
lret
and
pop
push
lea
cld
enter
fbld
cmp
lret
mov
roll
adc
mov
lods
adc
pusha
faddp
scas
outsb
les
push
popf
adc
popf
andl
movsl
sbb
daa
jo
mov
add
in
sbb
imul
mov
dec
xchg
and
sbb
mov
cmp
mov
out
jmp
test
xor
cltd
popf
out
xchg
cmp
rcr
ret
or
and
mov
cmpsl
mov
push
dec
xor
addr16
fidivrs
test
es
mov
ret
movsl
pusha
mov
daa
or
cmp
mov
xchg
cwtd
mov
xchg
stos
xchg
pop
or
stos
mov
push
test
jbe
fs
hlt
cmp
in
xchg
outsb
and
or
push
push
pop
mov
mov
or
jae
rclb
pop
dec
lods
inc
or
push
pop
scas
xor
push
mov
adc
jmp
dec
inc
jns
dec
insb
sub
jge
mov
adc
xlat
cmp
mov
or
adc
add
cmp
lods
test
cli
mov
repz
ljmp
pop
mov
cmp
imul
stc
pop
sbb
jae
insb
movsl
aas
je
cmpsb
stos
lea
inc
push
cwtl
adc
popf
adc
cmp
adcb
mov
and
ds
xlat
adcl
popa
jmp
in
ss
mov
push
iret
call
into
sahf
orl
std
dec
adc
cmp
and
cmpsb
repz
lcall
cs
inc
dec
mov
scas
xchg
mov
inc
insb
mov
push
out
cmp
lahf
and
fisttps
mov
dec
pop
push
mov
sti
xchg
insb
fs
xchg
fstpl
adc
cmp
adc
fiadds
pushf
negb
andl
lret
xchg
out
jno
test
pop
or
mov
stc
inc
xchg
bound
xchg
cmp
xlat
or
mov
int
repnz
inc
push
jmp
adc
fisubs
or
js
fstpt
fidivs
inc
repnz
in
add
pop
and
pop
sahf
das
jo
push
cli
arpl
or
pop
mov
jle
stos
pop
jo
xorb
lock
lcall
test
mov
clc
cmp
or
movsb
lods
in
stos
fcmovnb
mov
and
pop
sarl
xchg
or
scas
xchg
dec
push
mov
sti
call
aas
dec
std
pusha
jns
dec
imul
rclb
nop
cli
and
mov
lods
je
movsl
dec
outsb
push
sbb
adc
ret
insb
rolb
sbb
lds
inc
mov
das
cmp
lss
pop
push
sub
icebp
jge
repz
call
mov
pop
xchg
adc
int3
aaa
adc
test
das
xchg
shll
add
push
fistl
xchg
movl
jmp
dec
icebp
mov
das
cmp
xchg
filds
rcrl
lock
cmp
es
adc
lahf
es
sbb
and
sub
or
jae
aaa
xlat
add
sub
out
mull
lods
fidivrs
test
inc
push
xorb
and
push
bound
scas
aaa
mov
les
fwait
in
loope
mov
rclb
inc
mov
mulb
movsb
lret
pushf
push
mov
sub
in
push
adc
fadd
push
loop
jbe
rcrb
std
adc
fnsave
mov
jmp
xchg
add
pop
pop
push
mov
or
inc
sahf
enter
in
gs
gs
jp
cld
push
dec
iret
pop
out
js
out
xchg
lahf
outsl
mov
fstpl
mov
sub
push
jg
cli
jge
add
pusha
xor
aas
xor
mov
cmp
enter
imul
cli
call
das
dec
daa
sbb
dec
dec
add
xor
cmc
xchg
cmp
or
rorl
lahf
popa
adc
movsl
movsl
in
lea
mov
pop
mov
sarb
lahf
pop
adc
lahf
ds
jecxz
stos
lret
les
add
popf
repnz
in
and
sbb
cwtl
in
loope
mov
jno
mov
cmpsb
mov
cmp
popa
stos
in
mov
loope
rclb
leave
repz
out
push
das
into
jl
test
add
dec
pusha
push
mov
ja
mov
xchg
nop
das
stc
test
out
and
data16
or
addr16
pop
and
lea
xchg
rolb
or
push
shlb
jno
xor
fnstsw
sub
subl
test
inc
xchg
push
adc
and
insb
cmpsl
and
mov
cs
or
jns
sbb
mov
cmc
outsl
repnz
and
icebp
aaa
loope
test
repnz
mov
lods
mulb
cli
adc
cmp
cmp
push
mov
ljmp
and
xor
and
jp
cmp
insl
xchg
sbb
gs
pop
addr16
pushf
scas
lahf
dec
mov
repnz
cli
or
inc
push
rcll
or
jnp
dec
push
insb
mov
adc
mov
xchg
inc
or
fsubrl
sbb
adc
fs
rcrb
mov
xchg
out
pop
leave
adc
mov
cmp
roll
lock
inc
mov
mov
dec
inc
iret
in
jo
mov
add
push
sub
mov
data16
jle
jbe
out
mov
scas
neg
mov
xchg
ret
jl
mov
mov
fwait
push
sub
cmp
mov
push
push
ret
mov
push
mov
stc
mov
filds
dec
fwait
sahf
pop
and
adc
sbb
pushf
iret
xchg
inc
sub
jecxz
sbb
movsb
jbe
rorl
dec
cmp
pop
sbb
and
sarb
lea
mov
bound
mov
imul
or
xchg
leave
fstpt
jbe
sbb
push
aas
aas
mov
xor
popa
xor
and
inc
outsb
outsb
lods
xchg
loope
movsb
add
out
push
cwtl
lods
adc
stos
mov
dec
fnstcw
pop
push
out
lods
outsl
or
ss
or
xchg
lods
cmp
mov
inc
mov
dec
mov
inc
lahf
fs
daa
cmp
adc
mov
lea
fmull
iret
sbb
dec
cltd
mov
in
cmp
mov
shlb
push
je
xor
mov
jl
sub
outsl
mov
inc
movsl
pusha
sub
sub
insb
insb
sbb
jb
jo
adcl
sbb
aaa
movsb
fisubrs
fwait
popf
lret
testb
imul
das
jnp
out
in
mov
and
test
repnz
fnsave
notb
mov
pop
ljmp
and
push
xorl
xchg
pop
and
push
add
sbb
jmp
inc
repz
push
nop
and
push
stc
ret
sub
mov
std
jle
dec
jmp
decl
shlb
jp
ret
and
out
or
lock
add
add
mov
lock
loop
inc
popf
insl
pop
sahf
xchg
ret
mov
cmp
cld
pop
push
fists
jns
add
je
dec
mov
push
rcrl
mov
mov
xchg
inc
fs
imulb
scas
sub
and
xchg
fldl
xlat
ret
xorl
xor
jmp
aaa
loope
pop
push
cmp
mov
cmp
xor
inc
rcrl
pushl
push
sbb
push
xor
dec
xchg
push
sbb
cmp
insb
sbb
add
dec
rol
mov
lahf
inc
inc
pop
dec
testl
leave
pop
add
or
xchg
addb
sub
inc
cltd
xor
sbb
mov
sub
inc
aam
pop
cmpsl
push
insb
dec
sub
mov
sahf
mov
jno
ror
ja
and
test
lret
or
lds
inc
mov
aas
cmpsl
mov
push
sub
adc
fisubs
leave
pop
les
push
or
je
lock
pop
push
or
mov
push
mov
filds
pop
pop
test
xchg
lock
pushf
popa
lock
nop
dec
xchg
xchg
push
mov
add
out
ret
cmp
inc
mov
loope
mov
out
and
mov
or
test
push
orl
movsl
adc
mov
mov
mov
insl
pop
scas
cmp
fs
into
push
dec
push
push
and
loope
loopne
mov
scas
sub
mov
out
lret
incb
jg
sbb
dec
xchg
or
sbb
sub
scas
lods
dec
icebp
notb
outsb
adc
fbstp
aam
cmc
decl
add
xor
ret
push
push
sti
outsb
sbb
jecxz
or
push
daa
mov
inc
inc
psrad
or
addb
sbb
or
inc
xor
or
xor
in
mov
insl
out
xor
push
out
mov
pop
in
roll
xlat
std
jbe
scas
pusha
sbb
mov
pop
sahf
xor
dec
rcrl
insl
fs
xchg
add
je
mov
test
dec
outsb
mov
cmc
lea
imul
scas
fidivl
test
test
push
sub
mov
add
rclb
mov
rol
test
fwait
test
sub
std
leave
es
sti
rorl
lock
popa
inc
xchg
dec
rorl
sbb
lret
sbb
sbb
push
lods
adcl
mov
add
repnz
mov
inc
lock
lahf
xor
push
inc
mov
cmp
mov
jle
push
dec
mov
ss
xor
dec
arpl
insl
dec
xchg
xlat
dec
inc
and
divb
fdivrs
dec
lods
adc
add
sub
clc
jnp
push
and
imul
mov
fisubs
aam
mov
xchg
add
inc
sti
nop
lret
ret
jae
xor
mov
cwtl
or
mov
jle
movsl
lcall
repz
stos
and
inc
push
push
add
and
push
jae
push
fisubrl
fdivrl
ret
aas
mulb
jb
orb
pop
cwtl
xor
mov
mov
mov
mov
pop
dec
pop
repz
les
jg
js
mov
int3
es
sbb
xchg
add
lret
xor
jecxz
xchg
js
ljmp
pop
cmp
sbb
out
dec
pushf
dec
setl
push
push
dec
aaa
or
xor
leave
hlt
test
push
aaa
lds
pushf
cltd
pop
popa
pop
jns
jle
addl
test
jnp
mov
mov
bound
and
add
inc
sti
xchg
xor
and
fnsetpm(287
stc
ja
call
insl
mov
in
test
mov
dec
mov
aad
rorb
int
and
shll
stos
sub
aaa
jae
nop
mov
sub
popf
test
xchg
sbb
sbb
xchg
outsb
es
popf
and
dec
or
push
jbe
subb
jo
jge
cmp
das
popa
scas
jecxz
nop
xchg
jbe
cmpsb
aaa
fmul
cmp
ljmp
push
cmp
subl
push
adc
cltd
fimuls
stos
lret
xchg
mov
outsb
lahf
or
jmp
xchg
fs
out
cmp
sub
xchg
inc
pop
jb
add
sbb
movsl
scas
add
mov
adc
jne
in
and
sub
sarl
sbb
out
jl
out
and
pop
sahf
push
dec
mov
sbb
mov
jg
imulb
push
ja
mov
cmpsl
jle
pop
popa
push
shll
nop
hlt
lods
sbb
lcall
xor
out
mov
fldt
xlat
pop
iret
sbb
int3
jmp
push
lcall
xor
scas
and
cs
mov
pop
int
mov
in
pushf
and
in
ret
arpl
test
mov
xor
cmpsl
scas
jae
int
or
dec
xor
fsubl
inc
cltd
test
scas
mov
lds
cmpl
cmpsl
mov
cli
pop
jp
jl
ret
cwtl
xorl
cmpsl
push
adc
ja
and
push
mov
pop
push
xchg
mov
test
outsb
popf
pop
jmp
push
aad
and
iret
or
sbb
dec
adc
push
lods
out
push
orl
dec
lahf
pop
sbb
pop
aad
xchg
sub
xchg
rorb
pop
aaa
icebp
mov
mov
ds
lds
ss
std
pushf
cmp
mov
bound
pop
mov
mov
into
pop
in
xor
sbb
outsb
shlb
iret
pop
lahf
pop
pop
inc
popa
and
mov
arpl
ss
pop
ficoms
and
test
sbbb
iret
mov
sti
insl
mov
stos
or
icebp
jge
pop
mov
imul
int
fcmovnbe
imul
mov
sbb
imul
icebp
cs
mov
dec
push
ljmp
daa
sbb
mov
in
pusha
xchg
sub
jge
xor
in
jge
xor
imul
mov
add
and
add
sub
mov
inc
stc
xchg
mov
repnz
jnp
movsl
sbb
pushf
in
push
push
mov
aas
add
cmpsb
cwtl
dec
shll
das
icebp
fucom
mov
repz
add
or
push
loopne
xor
adc
stc
pop
call
cmp
cmpsl
adc
cmp
adc
aaa
shll
test
outsb
ja
or
xchg
test
lods
loope
jno
xchg
fidivrs
jecxz
mov
test
xlat
ljmp
mov
cwtl
xor
and
sbb
icebp
fwait
in
xor
orps
push
aam
stos
mov
leave
cmp
jns
jmp
repnz
cld
insl
or
fcmovnbe
lock
pop
mov
adc
and
xchg
sarl
xor
dec
dec
mov
call
sub
ret
jbe
adc
ljmp
adc
pop
jae
push
data16
xor
xchg
adc
xlat
sbb
mov
add
xchg
add
out
loope
sbb
pop
fsubrs
fidivs
xchg
outsl
cmp
push
dec
cwtl
rcll
shll
insb
sbbb
daa
xor
dec
pop
out
into
dec
xchg
inc
cmpsb
lea
fs
fwait
jnp
mov
and
jnp
dec
xor
cmp
fisttpl
out
xor
jae
mov
ljmp
rcll
cmp
out
out
and
cs
mov
insl
xchg
cmp
ljmp
movsb
dec
ja
lds
push
mov
sbb
pop
rcrl
adc
xchg
xlat
pop
or
sub
inc
fnstcw
adc
cmp
inc
push
lahf
int3
sub
pusha
outsl
jp
fbstp
sub
and
lods
sbb
push
sub
push
gs
popa
stos
data16
push
mov
sbb
enter
mov
and
test
add
cmp
mov
cmpsb
rcll
arpl
out
out
cltd
dec
stc
stos
sbb
rcl
push
xorb
cmp
adc
add
repz
push
dec
out
push
xorl
sub
xchg
cmp
xchg
pop
addr16
pop
scas
and
dec
mov
arpl
jne
sub
filds
or
call
and
lds
jbe
mov
imul
dec
shrb
cwtl
sub
inc
shr
fwait
jo
movsb
sbb
aas
addr16
xor
cmp
dec
sub
xchg
int3
push
lock
mov
add
pop
sub
push
xlat
rcll
xor
xchg
aas
or
push
sbb
or
sar
js
ret
mov
loope
or
push
lods
xchg
add
fldl
movsb
sub
hlt
ret
mov
je
mov
xchg
and
xor
jp
fstpl
js
adc
cmpl
insl
sbb
or
jl
arpl
pop
jl
add
xchg
adc
xor
test
sub
aad
adc
sbb
jle
bound
xchg
dec
dec
fmuls
inc
add
test
xchg
dec
int
inc
outsl
iret
mov
or
inc
into
mov
jmp
jb
sub
repnz
lds
mov
sub
mov
xor
add
inc
pop
dec
fwait
mov
lods
fchs
mov
cs
mov
cmpsb
stos
loopne
xchg
je
enter
into
dec
lock
std
fsubp
xor
scas
notl
rclb
mov
jb
cwtl
dec
repz
orb
jb
and
pop
and
sbb
in
and
fwait
dec
nop
and
cmc
xor
adc
insb
push
cld
loope
sbb
loopne
int
cmp
pusha
mov
inc
outsb
sbb
cltd
xchg
data16
and
xchg
or
xchg
jae
sub
push
inc
popa
jecxz
add
repz
mov
xchg
xchg
inc
push
lods
shl
je
mov
cmpsl
mov
or
sub
stos
jecxz
loop
dec
stos
popa
fs
leave
pop
in
stos
call
sbbb
xor
test
mov
adc
dec
cmp
xchg
mov
loop
daa
je
js
outsl
testb
test
jns
cwtl
out
sbb
push
cmp
or
out
inc
adc
inc
xchg
mov
or
aas
cli
dec
sub
xchg
mov
jnp
fldenv
into
shrb
xor
es
iret
enter
outsl
xor
stc
int3
ficompl
add
push
loope
fldt
dec
rcrb
test
insb
xchg
rclb
xor
fadd
lcall
out
dec
mov
adc
adc
neg
mov
stos
ret
xchg
imul
aaa
push
fiadds
fsubl
mov
into
xchg
xchg
push
fcmovne
cmpl
xor
adcl
xor
rcrl
mov
add
sbbl
rcl
mov
js
mov
jno
xlat
dec
mov
xor
cmp
adc
in
sbb
enter
fsubp
es
inc
pop
inc
out
cltd
jbe
xor
push
out
outsl
push
sbb
mov
add
xor
xorl
lret
aad
or
mov
sti
andb
dec
sti
and
or
popf
pushf
stc
sti
js
pop
and
cmp
xchg
mov
fadd
sbb
or
loopne
jp
cmp
push
bound
push
flds
pop
clc
dec
pop
cmp
mov
rolb
arpl
andl
jbe
scas
cltd
loopne
xchg
movsl
jg
jbe
pop
scas
jno
sti
por
cld
inc
pop
filds
mov
xchg
ss
mov
pop
cmp
iret
test
or
outsb
mov
in
not
out
or
aad
cltd
imul
jnp
jle
out
mov
inc
adc
hlt
sbb
mov
sbb
mov
out
popa
mov
mov
pusha
or
sub
pop
or
mov
cmp
push
das
shl
adc
sub
fdivrs
ljmp
repz
xchg
jb
and
in
mov
repz
in
mov
sub
pop
rol
jns
push
in
cmc
out
test
int
shll
dec
lods
push
mov
add
sub
mov
xlat
mov
push
testl
paddd
fcmovu
lret
jecxz
fwait
pop
push
mov
lahf
lds
push
cmp
cwtl
push
cmp
xor
sbb
add
hlt
sub
les
adc
mov
push
xlat
push
or
aas
jle
pop
pop
push
add
inc
add
xchg
add
mov
mov
je
out
mov
jb
mull
jg
adc
adc
outsl
pusha
adc
orl
xor
mov
push
rcrb
in
imul
gs
shlb
fmuls
aam
pop
inc
adc
iret
fidivrl
lds
add
pop
cld
xor
fucom
outsl
jns
jns
stos
and
mov
in
in
aam
push
andl
mov
push
mov
andb
outsl
cli
pop
insl
cltd
ret
ret
adc
insl
ds
mov
pushaw
xchg
imul
imul
jo
filds
dec
xchg
push
loopne
pop
xlat
or
lods
push
pop
lahf
push
mov
icebp
adc
divb
aas
mov
cli
push
mov
movsb
jo
arpl
pop
dec
jmp
or
aas
rcrl
push
fcomps
cli
sahf
add
add
pop
push
leave
mov
pop
shll
sub
inc
push
stos
dec
es
popa
mov
cmp
andl
push
jmp
and
inc
mov
or
mov
fdivrl
or
cltd
xor
inc
inc
sub
or
dec
or
and
cmp
adc
int
xchg
sub
fwait
or
or
pop
fwait
aas
mov
lds
jg
xchg
daa
mov
pushf
push
xorl
lock
lods
inc
push
rorb
rcl
push
sub
fwait
stos
bswap
inc
cltd
and
out
add
sbb
jl
jmp
xchg
inc
js
mov
dec
lcall
pushf
rclb
clc
outsl
cld
sub
test
mov
mov
fwait
test
jg
aaa
sbb
addl
pop
xor
inc
mov
pop
in
out
movsl
shlb
lret
adc
hlt
roll
or
movsb
test
fwait
mov
pop
mov
xor
clc
gs
lods
lods
popf
fisttps
int3
repz
sbb
inc
stos
dec
push
inc
js
push
push
aas
dec
icebp
jbe
pushf
test
nop
jg
loopne
sub
testl
popf
mov
fisttpll
cli
mov
pop
push
cmp
sbb
lahf
enter
xchg
rclb
pop
in
icebp
shr
xchg
ret
dec
mov
xchg
mov
and
pop
xchg
or
adc
fcmovne
add
push
push
jb
cld
mov
pop
or
stos
jle
pop
ficoms
fldt
adc
insl
sbb
aaa
push
sbb
loop
sub
mov
addl
pushf
cmp
aaa
inc
addr16
shrb
push
test
aad
pushf
xor
pop
scas
xchg
add
in
inc
xchg
lds
adc
lea
movsb
mov
ss
mov
jo
insb
into
cmc
dec
lret
inc
xor
adcl
jne
out
xchg
push
adc
pop
push
inc
inc
jo
dec
outsl
insl
lahf
nop
cmp
xor
mov
std
mov
lds
pop
rcl
jge
cli
mov
inc
shll
sub
cltd
adc
pop
dec
sbbb
pop
pop
dec
cmp
outsl
lret
mov
jl
stos
ss
xchg
lock
xor
jecxz
mov
add
push
push
jb
cwtl
add
pop
fdivl
dec
test
sub
les
test
aaa
mov
add
sub
xor
out
adc
mov
ffree
mov
ja
test
out
cmc
out
gs
rolb
sahf
ds
adc
sub
mov
addr16
xor
or
fdiv
fnstcw
cmpsb
cmc
xchg
shll
out
pop
arpl
sub
sub
loope
enter
cltd
aam
dec
xchg
in
std
test
jb
mov
hlt
lock
sub
or
push
std
int3
cmp
rcrb
jb
clc
inc
sahf
test
mov
popf
cmc
std
jbe
and
je
mov
out
sti
jecxz
pop
xchg
sub
pop
mov
jp
fldenv
xor
loop
and
sahf
mov
jle
std
cmp
std
jns
lea
inc
fldz
sub
xlat
jge
xchg
or
fisubs
push
cmp
popa
jo
sbb
inc
pushf
inc
pop
hlt
mov
jo
vcvtdq2ps
lahf
scas
push
jmp
add
stos
popa
pop
shlb
in
sbb
popa
jo
testb
inc
lods
stos
fwait
pop
dec
fdivrs
clc
shl
push
nop
jnp
repz
hlt
mov
mov
mov
mov
mov
fbld
xchg
pop
jl
push
sub
mov
sub
cmp
push
mov
loopne
icebp
lds
push
lcall
jecxz
pop
push
clc
pop
inc
lods
xor
int3
int3
jl
add
add
xor
out
and
shrb
leave
ret
mov
jmp
mov
in
iret
pop
mov
xchg
pop
inc
in
inc
dec
shll
in
mov
test
lods
xchg
lods
mov
inc
adc
cmpsl
in
cmp
out
aaa
leave
or
mov
jb
mov
es
test
fnstenv
cmp
or
ss
and
xchg
cli
mov
rep
outsb
sarl
mov
jle
outsl
std
inc
cwtl
ja
mov
mov
cmp
cmp
popa
pushf
aam
dec
inc
xchg
mov
addr16
mov
cmp
xchg
stos
icebp
loopne
testl
xor
jbe
or
push
imul
xchg
insl
jae
mov
outsb
cli
ds
xchg
xchg
test
xor
push
jl
iret
cmpsl
mov
pop
mov
mov
sbb
sub
fcoms
push
mov
add
lods
pop
xchg
jnp
xlat
mov
cmp
or
xor
mov
and
int
out
es
repz
cmp
or
enter
pop
push
cld
mov
out
lahf
pusha
test
scas
repz
cli
xor
mov
push
repz
add
mov
mov
xor
fs
jne
pop
sbb
push
shll
lret
mov
insl
sti
xor
jbe
pop
xlat
ret
sub
push
jmp
lods
fcomp
mov
jg
or
or
jmp
push
or
jecxz
je
sbb
pushl
in
jbe
sahf
or
cmp
lcall
adc
test
hlt
adc
ss
mov
mov
and
bound
mov
les
pop
movsl
push
lods
cmc
sbb
and
sahf
lret
in
and
stos
test
std
mov
lea
fisttpl
daa
into
subl
jmp
jne
pop
add
rclb
cmp
outsl
ret
lock
sub
sbb
outsl
push
adc
test
lcall
jecxz
jno
mov
xchg
jns
jl
pushf
aam
movsl
sbb
iret
sub
out
or
mov
adc
je
push
gs
cmp
dec
lahf
subb
pop
iret
push
and
jmp
pop
repnz
mov
xor
mov
fstps
bndstx
sarb
cwtl
pop
rcrb
into
mov
sbb
push
lret
aas
pop
dec
or
repnz
and
das
xchg
lods
out
int3
scas
fs
jbe
popa
or
adc
orb
mov
aaa
scas
push
insb
dec
adc
push
test
dec
addr16
lods
enter
decl
ds
xchg
in
movsb
dec
loop
fwait
enter
xor
mov
mov
lahf
adc
sub
mov
enter
stos
cmp
jae
es
mov
lods
jbe
insl
jle
inc
xor
add
xchg
enter
xchg
jp
cmp
xor
sub
nop
mov
and
pop
add
loope
xchg
ljmp
push
inc
dec
repz
clc
xor
daa
or
fnstenv
fldl
lret
push
rorb
cmc
or
mov
ret
mov
cld
sub
push
mov
jnp
roll
jbe
hlt
mov
sub
lods
pop
frstor
sahf
jecxz
mov
ja
je
insl
push
mov
je
shrb
sub
andps
jmp
hlt
cmpsl
sub
push
cld
aas
cmp
jmp
push
into
add
cmp
fs
lret
scas
rcrl
add
stos
jg
out
mov
dec
enter
cmp
mov
sbb
push
loop
mov
dec
outsb
ret
sbb
mov
mov
ljmp
xchg
es
sahf
jp
test
test
mov
jb
mov
and
insl
jg
mov
add
cmpsb
or
out
inc
lods
daa
fstps
push
out
and
outsl
dec
and
push
or
shll
clc
jb
mov
lret
lret
imul
sbbl
rorl
aas
sub
lret
fs
push
mov
or
mov
test
sbb
shlb
pop
sti
mov
test
dec
push
push
fisttps
out
faddp
jecxz
movsb
add
xor
cmpsl
sub
add
pop
add
shrb
sub
push
jbe
mov
test
lahf
faddp
shlb
cmp
push
sbb
inc
mov
fld
inc
xchg
in
ret
mov
cwtl
fs
out
mov
in
push
add
cmp
push
pop
mov
es
sbb
shll
and
mov
jbe
pop
dec
jp
inc
adc
add
xchg
fildll
pop
inc
mov
decl
or
jo
inc
sub
andps
or
mov
fdivp
mov
pop
fbld
add
pop
fs
jne
and
popf
mov
aam
dec
in
sub
add
or
inc
xor
mov
lock
pop
inc
out
lods
xchg
push
fdiv
fucom
pop
mov
mov
addr16
clc
jae
mov
cli
cli
gs
mov
or
sbb
lds
jae
and
or
dec
and
ret
fdivrl
xchg
inc
jmp
or
mov
lods
or
xchg
fidivrs
fsubrl
out
jecxz
sub
fimull
enter
out
cmc
dec
andl
popf
pop
out
ret
sbb
movsl
mov
scas
daa
lahf
or
or
push
in
pop
sub
jns
add
and
and
jo
push
pop
push
mov
push
shll
or
sbb
cmc
std
arpl
mov
lret
lds
movsb
xor
jo
addr16
or
jnp
dec
xor
xchg
test
int
leave
sbb
cmp
dec
pop
pop
insl
fisubrl
lret
data16
ja
cmp
aaa
dec
mov
mov
lret
or
popa
fs
xchg
sahf
pushf
add
mov
testb
mulb
xlat
jne
dec
fdivr
dec
inc
mov
inc
push
mov
clc
pop
iret
jns
xor
out
or
pop
jns
or
loop
aas
pop
faddl
jmp
mov
cmp
cli
cmp
das
push
lcall
pop
or
clc
movsl
pop
fildl
add
shll
gs
int
ljmp
pop
in
scas
push
scas
cmp
sub
int
ljmp
outsl
lret
dec
and
sti
in
sub
jns
pop
mov
fwait
adc
or
xchg
fnstsw
clc
test
or
push
movsl
das
pop
or
fistpll
or
jae
xlat
in
pop
or
jmp
shrl
jmp
stc
cmp
jmp
mov
lock
mov
fidivrs
cwtl
lahf
dec
cmp
popf
fstps
aaa
sti
xchg
out
xchg
loope
out
push
add
fadd
push
mov
inc
add
add
pusha
sub
lcall
nop
jge
mov
cmp
add
inc
stc
adc
in
lds
fistl
fnstsw
inc
and
mov
pop
in
pop
clc
ja
mov
in
out
cmp
xchg
mov
iret
or
je
mov
or
lahf
jle
loop
sub
gs
repnz
cmp
sub
fidivs
mov
sub
inc
rolb
ja
nop
rcrl
std
mov
fs
fst
inc
sub
sahf
mov
test
fidivl
mov
cmp
or
rorl
dec
xlat
mov
mov
xor
xor
pusha
xor
adc
pop
outsb
loop
lcall
decb
jg
jb
pop
push
or
inc
mov
out
sub
and
adc
repnz
pushf
lods
mov
adc
adc
or
enter
sub
adc
adc
pop
aam
jnp
inc
cmp
lea
in
fisubrl
rcrb
sub
inc
push
jbe
bndldx
sbb
mov
cmp
pusha
adc
xchg
aaa
lock
xchg
jns
adc
xlat
jno
pusha
lahf
push
mov
push
xor
movsl
je
push
jae
and
sbb
shll
inc
mov
pop
shll
sbb
sub
cltd
ds
ffreep
jno
out
addl
dec
sub
mov
das
ds
out
ljmp
clc
ret
dec
and
outsl
sbb
adc
lahf
loop
sub
jp
xor
mov
pop
mov
movsl
std
mov
pusha
enter
fcompl
lret
dec
call
mov
loopne,pn
pop
push
mov
out
add
pop
imul
push
add
loop
mov
xor
rorb
jae
inc
mov
add
and
mov
push
mov
ljmp
ss
call
das
jbe
mov
xchg
ret
fcmovnu
out
cmc
adc
mov
outsl
pop
cmp
xor
push
lods
ja
mov
xchg
adc
lds
sarb
push
sbb
ljmp
mov
pop
inc
xor
insb
vmptrld
dec
xchg
push
mov
jb
push
push
or
push
pusha
sbb
adc
inc
jmp
lret
pop
or
insl
fimull
pop
and
push
ljmp
jb
loop
xchg
loope
call
xchg
adc
cmp
scas
jno
adc
push
rol
cmpsl
push
jns
sbb
mov
cmpsb
outsl
lret
sub
push
add
lods
roll
push
xor
xchg
outsb
movsl
bound
mov
xor
and
add
in
cmp
sub
sub
push
or
or
add
lods
imul
popa
insl
insb
orb
leave
les
shlb
adc
jb
insb
jnp
out
cs
sbb
ficompl
inc
lahf
adc
sbb
adc
movsl
xchg
inc
sbb
mov
ds
repnz
out
stc
into
push
cmp
es
jmp
jno
enter
add
jge
fldcw
dec
and
popf
push
iret
adc
mov
xlat
aas
or
xor
mov
pop
adc
push
out
loopne
iret
popa
test
adc
mov
icebp
fldt
ret
lea
rorb
pushf
push
ret
cltd
fcmovbe
insl
cmpsb
add
or
paddsw
clc
mov
cmpsl
pop
mov
mov
in
jg
sub
bound
mov
loopne
nop
fbld
cltd
xor
xchg
imulb
loope
sbb
leave
cmp
mov
pop
out
imul
idiv
sti
jb
shll
lcall
adc
push
dec
sub
jmp
stc
clc
cmpsb
add
push
sti
and
mov
testb
fdivrp
jns
push
movsl
inc
xor
mov
repnz
mov
cmp
gs
xchg
fdivs
stos
je
xchg
sbb
ret
xchg
jnp
jns
mov
push
mov
jle
dec
iret
sbb
xchg
cmp
addr16
lahf
std
add
and
sub
xchg
adc
jmp
lods
lock
push
sub
inc
outsb
popa
ret
push
xchg
out
xor
jno
popf
testb
fnstcw
inc
and
and
cmp
aam
addr16
sarl
cmpl
shl
dec
pop
dec
mov
mov
xor
mov
repnz
dec
xchg
cld
aaa
xchg
mov
out
adc
push
out
jle
int3
mov
adc
cmp
movsl
cmp
rcll
mov
adc
cmc
sbb
push
loop
sub
testl
pop
cmpsb
pushf
enter
pushf
push
test
sbb
and
cmpsl
push
dec
cmp
mov
ja
ljmp
mov
pop
push
or
xchg
lahf
and
imull
out
xchg
jg
test
xchg
add
xchg
sub
cmp
xchg
or
mov
pusha
imul
inc
mov
jle,pt
test
idiv
sti
aas
mov
int3
sbb
adc
ljmp
ss
jle
or
mov
jmp
ret
or
push
clc
lret
sub
stc
mov
repz
pop
dec
insb
mov
xor
xor
sbb
ds
negb
xor
inc
jecxz
fbld
xor
inc
jae
xchg
dec
jne
jno
mov
jg
sub
leave
pop
stos
mov
loope
or
cli
in
leave
lea
pop
data16
jb
inc
adc
push
inc
out
in
or
mov
in
push
mov
dec
inc
jae,pn
jecxz
outsl
nop
push
pop
push
push
add
pop
pop
lret
loop
aad
loop
inc
daa
clc
pop
dec
add
test
int
bound
popf
mov
in
pop
popa
shlb
dec
sbb
je
mov
push
outsb
lahf
or
iret
sbb
pop
xor
xchg
jae
jne
xor
sbb
xchg
aaa
jmp
stc
mov
jp
xor
lds
fsub
jp
loop
arpl
std
addr16
insl
icebp
shrb
mov
jmp
pop
aam
sub
push
stc
mov
fwait
lock
aad
mov
inc
outsb
push
jp,pt
mov
insl
push
ret
dec
cltd
rclb
es
inc
mov
xchg
scas
xchg
fdivs
adcb
lret
jae
dec
push
mov
test
lods
inc
call
xchg
cmpsl
mov
mov
inc
enter
inc
add
sub
jbe
loopne
pop
xlat
pushf
aas
xchg
mov
je
cmp
and
cli
cmp
jae
jecxz
push
jno
lods
sarb
mov
sub
push
push
jb
aad
jecxz
or
pop
arpl
cmpsb
dec
outsb
xchg
adc
inc
dec
shll
negb
push
and
mov
push
movsb
push
in
fstl
cmpsl
and
add
lahf
ljmp
stos
enter
icebp
dec
mov
xchg
je
sbbb
shlb
shll
lods
dec
outsl
and
pop
jp
mov
inc
mov
lds
cwtl
mov
or
cmp
bound
sbb
push
ljmp
dec
into
rorl
and
cld
data16
cli
ss
lretw
mov
dec
add
out
jge
cmp
mov
cmp
imul
inc
dec
cld
fucom
jnp
into
ljmp
fbstp
je
xlat
out
int
pop
ficomps
popf
mov
adc
lods
ja
ret
imul
push
mov
mov
out
sbb
sahf
adc
sbbl
or
xor
addr16
hlt
popa
pop
pop
pop
mov
rcrl
sbb
push
ljmp
fimuls
inc
fdivrl
cmp
inc
sbb
push
sub
fucom
out
jae
pop
sub
aad
shr
cli
xor
mov
jg
xlat
or
xchg
sbb
iret
pop
stos
movsl
fs
add
test
lods
fdivp
cmpsb
dec
mov
pop
ficoms
rolb
sub
add
adc
dec
hlt
fbstp
inc
add
add
xor
outsl
pop
add
mov
xor
out
or
pop
subb
xchg
loope
jecxz
jg
push
sbb
mov
in
cli
and
sbb
adc
sahf
xor
movsb
sub
sub
jbe
leave
xchg
add
pushf
sub
mov
pop
cmp
incl
sub
int
std
jnp
testb
adc
push
mov
sbb
sti
cmpsl
inc
adc
into
lcall
cld
mov
ljmp
fiadds
subl
scas
lods
call
sub
mov
cmp
xchg
mov
popf
xor
mov
pop
pop
push
add
jle
stos
cmpsb
push
insb
sub
movsl
shll
aad
sbb
test
loop
les
xchg
subb
xor
xchg
xchg
dec
sahf
ds
jecxz
inc
adc
lret
add
test
mov
adc
pushf
xchg
and
mov
shrl
xchg
xchg
adc
add
mov
scas
fs
mov
ss
push
push
adc
pop
clc
lock
push
loop
in
xchg
pop
push
inc
jo
cli
int3
notl
cmpsb
ss
stc
cwtl
hlt
pop
les
cmpsb
aad
or
mov
cmp
jns
fcmovbe
adc
adc
movsl
frndint
sub
pop
or
push
inc
cmp
gs
inc
sbb
mov
es
daa
shrb
jecxz
shrl
loop
jo
mov
mov
pop
or
dec
repnz
ja
xchg
dec
push
shlb
popf
jecxz
imul
push
sub
pop
cmp
lock
adc
pop
out
out
roll
and
sub
imul
repz
push
mov
cwtl
add
and
or
xchg
pop
push
cmp
jae
clc
aam
clc
mov
push
lret
mov
jno
or
std
dec
out
cmp
xor
push
mov
mov
or
xor
sbb
inc
ret
mov
rclb
ds
int
stos
or
mov
jle
in
aam
fldcw
notb
repz
jmp
lods
lcall
pop
pop
fmuls
add
cltd
xchg
fiadds
nop
sbb
popf
mov
jl
rclb
inc
adcb
or
test
lahf
loopne
out
adc
hlt
rcll
mov
jp
sbb
sbb
mov
shll
fmul
hlt
das
and
jns
xor
jne
mov
jge
stos
divl
iret
cltd
icebp
jle
cmp
add
cmpsl
sub
das
mov
jne
mov
inc
fistl
sti
jns
and
adc
int3
les
push
push
cmp
add
test
mov
mov
in
cmpsl
repnz
inc
jle
shl
sub
cli
movsb
xchg
outsb
fcmovb
scas
push
and
mov
push
test
lahf
into
push
xchg
pop
xor
rcll
divb
or
in
scas
test
lahf
jmp
inc
xor
bound
and
insb
test
pusha
push
int3
sbb
or
insl
and
xor
push
dec
in
ljmp
shr
cmpsl
push
negl
outsl
mov
pop
cltd
jmp
push
xchg
movsl
inc
int3
sbbl
sbb
ret
pop
in
add
pop
mov
scas
inc
pushl
and
repnz
lret
push
mov
sbb
in
jp
loope
pop
sahf
in
insl
iret
sub
push
xchg
stc
in
inc
es
loope
in
add
mov
jecxz
out
inc
lock
dec
movsl
cs
add
cmpsb
stos
ffreep
outsb
loop
jmp
mov
adc
push
shlb
fldcw
hlt
push
and
dec
add
pop
stc
push
loopne
xor
je
sub
in
cmc
andl
add
dec
outsl
test
cli
add
arpl
enter
loope
push
mov
and
cmp
jae
aas
add
pop
or
inc
jo
jg
andl
jle
arpl
pop
sti
lret
inc
mov
aas
jbe
push
les
andl
adc
ss
sub
fldenv
sub
ret
addr16
daa
mov
enter
adc
xchg
test
adc
jl
test
pop
jge
mov
clc
pop
mov
rol
jecxz
fildll
popf
negl
movl
sbb
jecxz
sbb
repnz
mov
mov
neg
insb
or
scas
inc
rcrl
cmpsl
inc
clc
push
cld
mov
addl
xchg
inc
xchg
mov
pop
jno
sti
mov
jbe
imul
xlat
mov
or
add
int
xchg
add
pop
mov
xor
sub
loopne
es
mov
xlat
xchg
fbld
or
scas
sbb
shr
inc
sbb
and
rcrb
cwtl
inc
aaa
pop
andb
ds
jmp
insl
jp
inc
jecxz
cmp
mov
mov
cmp
mov
mov
icebp
jg
jnp
pushf
inc
pusha
add
sub
lods
dec
cwtl
leave
call
xor
xchg
es
xor
es
jg
sbb
pop
into
jmp
xor
xchg
ljmp
or
push
mov
push
popa
jecxz
stos
add
and
fdiv
push
or
inc
jb
es
ret
jb
mov
jl
cmp
push
into
adc
xor
cmp
lret
push
or
sub
inc
mov
aas
loopne
js
pop
inc
jnp
and
or
loopne
pop
or
std
push
xor
xchg
mov
inc
push
aam
mov
xchg
repz
jno
and
mov
hlt
out
idivb
aas
inc
mov
int3
hlt
in
mov
push
cmc
mov
adc
icebp
jge
or
sbb
jno
or
mov
sub
inc
xor
add
cmpsl
mov
jbe
repnz
cmp
push
xchg
int
fmuls
mov
int3
pushf
test
movsb
mov
cs
mov
inc
mov
or
push
inc
rcl
and
movsl
jbe
jne
nopl
mov
cmp
clc
std
add
cmc
popa
jns
push
mov
aad
mov
scas
pop
inc
ds
xchg
and
xchg
and
fcmove
pop
inc
in
pusha
andb
or
dec
test
movsl
sbb
inc
jge
push
mov
rcrl
mov
int3
sbb
dec
dec
orl
xor
fsub
idiv
cmp
mov
ds
jp
stc
and
rcr
adc
je
aad
insl
cwtl
or
mov
cltd
sahf
jo
xchg
int
pop
dec
fucomip
xchg
lds
mov
test
or
repz
sbb
int3
addb
sub
xchg
fists
sbb
in
or
adc
mov
jno
mov
js
mov
dec
ret
jg
jae
mov
jl
jne
push
lcall
ds
adc
lock
push
push
lret
or
mov
cmp
rorb
faddl
cmp
ljmp
cmpsb
jge
inc
je
dec
out
ret
sub
or
es
lret
cmp
pushf
jg
mov
adc
into
adc
xchg
int
sub
xor
decb
fisttpll
insb
popf
jno
mov
and
inc
mov
inc
xchg
jge
inc
adc
mov
jo
inc
out
lods
ds
jl
mov
out
hlt
out
xchg
imul
lret
adc
cmp
stos
cmp
in
icebp
repnz
jl
out
mov
push
sub
stos
inc
out
mov
mov
arpl
bound
or
adc
mov
jno
and
aad
movl
insb
insb
sahf
dec
cmpsl
push
sahf
mov
pusha
in
ret
xor
jno
dec
fldcw
xchg
push
mov
cs
sub
cmc
xchg
inc
mov
sbbb
nop
adc
dec
in
bound
mov
and
xor
pushaw
sub
cmp
mov
cmp
stos
xchg
in
push
popa
jo
popf
jmp
popf
xchg
pusha
ja
mov
mov
pop
xchg
jnp
insb
dec
aas
dec
xchg
mov
dec
mov
das
ss
jns
rcrb
xor
mov
or
lds
jo
push
out
shlb
mov
shll
push
adc
cltd
imul
pushf
xor
xor
pop
mov
sub
das
les
jge
aaa
mov
cld
test
mov
lret
std
adc
mov
fsubrs
jg
jo
jmp
jno
mov
and
lods
jb
lret
sti
inc
es
xchg
jne
stos
ja
mov
cltd
sbb
pop
psraw
fstpt
ja
mov
adc
fsubr
test
test
fadd
pop
mov
jl
pop
cs
in
iret
loopne
cwtl
mov
mov
mov
pusha
mov
sbb
lods
test
subb
mov
or
leave
sub
or
xchg
leave
mov
push
or
inc
les
cmpsb
sub
dec
jb
jmp
jae
mov
sbb
aas
dec
or
scas
mov
lret
repnz
pop
inc
mov
movsb
clc
mov
loop
bound
loop
ficompl
stos
jcxz
loopne
cmp
cmp
test
das
dec
scas
ret
inc
jno
scas
sub
scas
or
ljmp
mov
bound
sub
jge
push
lret
sub
xor
push
jnp
cmp
aad
pop
daa
test
leave
push
sub
fiaddl
js
iret
pop
lods
push
imul
jp
mov
jecxz
hlt
ret
shlb
pop
or
sub
mov
jmp
sbb
bound
movsb
stos
lea
cld
js
stos
push
sub
xor
insb
inc
fcoms
ljmp
mov
adc
icebp
cs
cmpsl
nop
ret
cmp
cs
rcll
sarl
cwtl
clc
adc
ret
aam
frstor
push
cmp
out
lods
subl
push
in
push
lods
sahf
pop
scas
sub
jg
cmp
jecxz
mov
mov
add
data16
jle
pop
push
shlb
add
mov
pop
pop
mov
nop
std
stos
adc
adc
aas
sub
aam
add
call
push
cmp
hlt
xor
lret
push
add
or
rdmsr
subb
scas
xchg
mov
int
cltd
jp
aam
into
jo
loope
inc
xor
xchg
push
data16
sub
push
or
dec
fs
call
ret
xchg
cltd
call
ljmp
sbb
dec
movsb
shlb
pushf
pop
stc
shl
ljmp
inc
out
jle
pushf
and
mov
into
ljmp
cmp
fiadds
sti
xlat
jle
inc
xor
mov
sbb
xor
aas
je
test
jg
int3
js
gs
out
stos
aad
sub
sub
cmpl
mov
test
add
jae
or
and
jecxz
and
lret
mov
arpl
pop
out
mov
mov
mov
inc
adc
addb
cld
dec
int
popf
dec
lret
in
std
pop
sbb
out
sub
push
sub
mov
jg
push
test
mov
adc
sbb
movsb
sbb
sbb
sbb
jge
pop
repnz
insl
xorl
stos
jno
stos
inc
jns
push
mul
sub
jae
das
pop
jb
fistpl
mov
cmpsl
inc
js
mov
cmp
dec
jb
mov
xchg
nop
call
add
xchg
xor
lods
movsb
cmpsb
pop
jbe
jmp
cmp
sub
mov
cmp
xor
and
insb
fldcw
dec
and
test
pop
aas
sbb
lods
int
repz
pop
pop
cmp
xchg
mov
sub
fstl
insb
and
imul
mov
and
cmc
div
add
arpl
cmpsl
xchg
movsb
mov
xor
adc
imul
enter
add
or
loop
repz
test
mov
dec
mov
ficompl
je
sbb
in
scas
rcrl
cmpsl
pop
pop
pop
adc
xchg
movsl
mov
js
xor
out
mov
sbb
push
sub
fisubrs
mov
and
sbb
call
mov
cmpl
xor
in
sub
dec
mov
flds
in
xchg
ret
rcll
add
xchg
pop
xor
mov
leave
mov
push
inc
jl
test
dec
xor
jbe
jbe
add
cmpsb
jmp
jno
aad
add
jo
adc
cs
xchg
in
push
mov
fisttps
and
test
adc
or
jl
or
fiaddl
add
icebp
loop
jb
pop
popa
call
push
cmp
das
mov
dec
push
pop
lcall
dec
cltd
pop
ret
cmp
push
dec
inc
mov
in
xchg
push
cmp
lcall
pop
pop
xor
xchg
popa
hlt
and
cmc
addl
adc
lods
push
sti
in
push
test
shrb
in
stos
xlat
or
add
shrb
push
lods
jns
adc
icebp
sbb
or
sbb
mov
fsubl
fcmovu
pusha
xchg
lea
ljmp
dec
pop
mov
xor
imul
subb
and
or
mov
mov
and
or
inc
lahf
push
popa
aad
aas
mov
jle
xchg
pop
nop
hlt
popf
adc
aam
dec
lods
push
add
add
in
fdivp
mov
adc
daa
mov
add
jno,pn
cltd
shr
cmp
pop
outsl
sbb
add
add
jae
lahf
or
je
bnd
repnz
out
push
sub
mov
aas
push
prefetch
or
fnstcw
cmp
test
sahf
xchg
sbb
push
push
test
mov
add
aas
pop
sbb
fsts
mov
mov
mov
sbb
sub
mov
pop
pop
out
or
lods
cli
xor
insb
insb
xchg
push
mov
cmpl
or
sub
mov
fsubrp
repz
mov
int
pop
inc
cmp
cltd
lret
pop
in
pushf
lds
outsl
sti
jb
bound
sbb
addr16
sub
push
sub
daa
pop
xor
cmpsl
roll
les
das
in
xorl
dec
push
insl
imul
xor
movsl
jge
lock
in
movsl
sbb
pop
loop
insl
movsw
ljmp
or
icebp
xor
leave
xchg
test
lret
and
std
sub
xchg
fcmovbe
fwait
lods
in
sbb
popl
mov
xchg
push
jg
sbb
mov
push
lcall
ds
inc
jge
dec
ror
push
cs
jae
sub
cmp
mov
xchg
inc
gs
push
cmpsl
push
add
adc
pop
inc
stos
ret
int3
xchg
dec
imul
pop
sub
dec
dec
xchg
les
movsl
push
mov
and
repnz
je
mov
jns
iret
sub
sbb
xor
cmp
lret
mov
mov
das
pop
ss
addr16
push
xor
cld
pop
shlb
lahf
xor
adc
push
bound
mov
or
xchg
arpl
mov
rcll
sbb
mov
in
aad
fisubl
or
ud2
mov
jle
pop
call
xchg
cld
inc
mov
mov
mov
lods
sarl
push
push
push
in
adc
mov
jle
out
xchg
fdivrl
in
xchg
pop
jne
loopne
sbbl
cmp
out
or
lret
fdivrl
pop
push
adc
jne
movsl
cmpsl
inc
cmp
sub
jle
xchg
sub
jno
cmp
cld
cmp
scas
add
je
jp
repnz
popf
icebp
stos
out
frstpm(287
pop
and
inc
xor
jmp
jg
test
aas
out
cs
push
out
orl
jle
cmp
jo
es
stc
into
jmp
lock
aas
mov
cmc
clc
jle
xor
cwtl
jge
movsb
sub
push
lods
mov
fidivrs
and
xlat
pop
data16
adc
aam
arpl
pop
fmull
and
lods
xor
cmpsl
call
dec
fucomp
mov
scas
lcall
ret
aad
xor
xor
jg
mov
and
das
into
jl
mov
push
xor
aaa
adc
loopne
dec
imul
test
push
hlt
mov
lahf
stos
lea
loopne
in
jl
jge
sub
aaa
cmp
adc
mov
xor
dec
scas
dec
xlat
and
fcomps
or
insb
sub
mov
add
test
inc
mov
xor
repz
mov
cmpsl
pop
rep
jne
inc
or
sbb
pop
pop
rorl
scas
pop
orl
mov
sarb
pop
jg
adc
stos
cmp
es
ror
ds
xlat
out
xchg
mov
jne
movb
or
data16
cmc
cmp
nop
mov
cli
xor
push
or
leave
in
loop
pusha
mov
aam
mov
cmp
xlat
enter
xchg
iret
js
fnstsw
pop
repz
cmp
mov
pusha
mov
fdivl
aam
out
mov
mov
and
leave
add
enter
jno
jmp
push
call
pop
lcall
sbb
popa
jg
fadds
sbb
aas
sub
mov
cmpsb
push
xchg
iret
loop
xor
lcall
ret
mov
mov
dec
fstl
ret
clc
les
ficoml
xchg
jmp
mov
push
pop
jne
xlat
xchg
stos
jmp
out
insb
fcmovu
adc
lcall
aas
sbb
das
jmp
sahf
inc
jb
fs
pop
adc
daa
xor
ret
out
jle
add
ret
js
cwtl
out
addb
shll
loope
movsl
mov
leave
adc
idivl
inc
popa
repz
mov
mov
mov
mov
sbb
cli
rorl
adc
jmp
sub
dec
arpl
cwtl
pushf
adc
add
rolb
loopne
in
into
stos
xchg
mov
pop
fsubrs
and
push
push
inc
sbb
repz
scas
mov
lret
pop
stos
lret
jns
fisubl
mov
jecxz
xlat
mov
cs
je
iret
inc
sti
mov
and
sbb
fmuls
and
inc
xchg
adcl
test
test
dec
sub
subb
add
cmp
or
into
iret
repnz
push
in
push
cmp
es
xchg
push
sub
scas
pop
pop
js
xor
xchg
inc
popf
mov
adc
ss
fsts
pushf
pop
adc
and
mov
addb
lock
dec
adc
in
in
cwtl
fdiv
aad
insb
mov
inc
adc
dec
xor
sub
out
pop
shrl
xchg
mov
les
cmp
stc
pop
aaa
aaa
mov
pop
mov
pop
jne
cmp
push
push
adc
inc
imul
push
lahf
or
pop
cmovno
rol
cmp
push
insl
iret
out
lods
pop
cwtl
test
add
dec
sbbb
rolb
test
stos
lods
inc
mov
sub
pop
cs
push
jno
jl
insl
pop
pop
dec
push
jge
mov
ret
sub
and
int
and
or
mov
pop
rol
sbb
out
imul
repz
imul
adc
and
stos
cltd
mov
mov
ret
mov
pop
sub
stos
pop
sbb
negl
out
hlt
imul
out
lods
cmp
pop
adc
push
xchg
mov
xchg
add
pop
insb
mov
pop
mov
pop
xchg
aas
addr16
les
sbb
imul
mov
mov
mov
adcl
mov
push
sahf
xchg
xchg
jo
test
add
stc
push
lock
xor
bound
cwtl
imul
mov
das
in
xlat
das
int
mov
shl
outsl
rcrb
leave
clc
js
notl
or
fistpll
ficomps
in
inc
sbb
mov
test
push
hlt
je
xchg
imul
sti
sub
inc
mov
xor
nop
mov
jno
jge
xor
or
push
or
push
and
imull
push
push
xchg
sub
sub
ja
lret
icebp
add
in
sub
mov
xchg
enter
inc
mov
push
pop
xchg
and
xlat
add
outsl
and
mov
pop
sub
mov
fsub
sbb
pusha
cltd
jbe
out
cs
mov
leave
push
cld
mov
inc
repz
cmp
cli
into
push
xlat
outsb
hlt
jbe
sbb
iret
push
xor
rolb
lahf
test
sub
or
jmp
or
dec
lret
mov
and
test
jns
daa
negl
stos
loopne
out
insl
jl
insl
in
or
mov
jl
iret
out
icebp
lret
mov
stc
add
cmpsb
movsb
sub
or
jo
mov
pop
int3
jl
jmp
pop
into
in
in
push
test
adc
mov
test
push
ret
es
add
shll
mov
or
js
pusha
cli
mov
fdivp
xor
icebp
pop
push
sbbb
cs
adc
or
aas
add
pop
sub
add
je
pop
hlt
mov
mov
or
push
insb
gs
loopne
scas
jno
mov
ja
subb
mov
jbe
or
mov
mov
test
in
dec
mov
xlat
pop
pop
andb
mov
shll
icebp
repz
xchg
and
sbb
adc
cmp
stc
cmc
or
jne
inc
mov
mov
sarl
cmp
mov
pop
xchg
pusha
rcrb
out
push
adc
jp
xchg
in
faddl
or
adcb
les
or
lret
pop
fimuls
xor
idivb
add
aas
adc
or
pusha
fnstcw
add
ja
jle
out
clc
movsb
pop
inc
and
dec
cmpsl
inc
jg
mov
or
add
je
rol
scas
lret
push
ret
lcall
jbe
add
jle
out
sbb
mov
pushf
popf
xchg
mov
and
enter
pop
into
ficompl
xlat
test
and
repnz
pop
cld
dec
daa
in
pop
arpl
mov
jge
mov
or
aad
fbstp
shlb
pop
cmp
sbb
ret
insl
and
lods
imul
pusha
push
jle
icebp
inc
in
aas
call
cmpsb
cmp
xor
push
mov
mov
jecxz
jge
adc
call
cli
cmp
lahf
pop
cmp
fsubrs
mov
lods
dec
fmulp
shll
hlt
aas
lods
xchg
sbb
fchs
mov
lods
movsb
adc
subl
xorl
push
icebp
into
pop
cmp
in
loopne
xchg
dec
and
jl
test
mov
adc
add
jg
jbe
inc
or
inc
test
hlt
xchg
jbe
adc
shlb
loopne
mov
dec
and
iret
jge
mov
fisubs
xor
orl
lahf
dec
iret
add
push
xor
in
scas
shll
jecxz
jge
mov
xor
imul
fldcw
enter
jp
sub
fst
or
icebp
fldcw
sbb
mov
setb
in
clc
sub
and
je
cld
movsb
hlt
push
mov
push
outsb
pop
lret
mov
sarb
push
cmpsl
decb
clc
cmp
stc
test
sbb
lds
and
sbb
dec
enter
ret
gs
pop
cmp
fildll
xor
push
out
ret
cmc
mov
sub
lds
stos
lret
lock
adc
add
xchg
je
fadds
mov
jns
xchg
sbb
xchg
ja
adc
addr16
xchg
pop
idivl
scas
cmpsb
insb
mov
bnd
xchg
inc
fnstsw
sbb
shrb
repz
pmullw
pop
sub
ja
inc
inc
pop
mov
stc
jl
mov
fprem1
jbe
leave
sarb
sbb
add
add
rcrb
movsb
mov
inc
sbb
adc
inc
adc
insl
or
xchg
fldcw
stos
push
jp
or
repnz
into
dec
cwtl
sbb
in
rorl
jg
cmp
sub
add
dec
fnsave
inc
and
xchg
dec
jl
mov
mov
push
xor
jbe
cmpsl
xor
cmp
leave
bnd
mov
jp
repnz
jmp
pop
rol
insb
pop
mov
sbb
jb
js
jnp
lahf
xor
mov
jl
fisubl
mov
fistps
inc
mov
jp
icebp
ja
mov
movsl
stos
mov
aam
adc
cmpsl
in
bound
clc
das
pop
fcmovb
mov
jbe
cmp
mov
mov
sub
in
cs
cmp
or
aas
imul
test
fisttps
loop
pop
ret
stos
icebp
imul
xchg
call
lahf
test
addl
movsl
xor
outsb
add
js
aam
sub
cmc
insb
popf
sub
mov
mov
jg
pop
cltd
sti
aam
xor
or
ret
std
cltd
jo
dec
lods
dec
push
scas
sub
xchg
lds
or
test
or
lcall
rcl
adc
adc
sub
xor
mov
andl
sbb
cmpsb
dec
jo
lcall
sub
stc
dec
xor
pusha
popf
mov
push
lret
mov
sbb
pop
std
push
push
lret
and
jae
lret
cmp
pop
shl
sub
sbb
cmp
and
sarb
sub
movb
loopne
xor
bound
pop
pop
incl
iret
or
mov
mov
sub
aas
bound
inc
mov
daa
repz
mov
into
mov
cmp
je
fstps
shll
ficomps
pusha
insb
loopne
dec
dec
sbb
pop
xchg
mov
or
pop
mov
insb
jp
xchg
mov
pushf
mov
sbb
or
shl
mov
mov
mov
inc
adc
fwait
mov
or
in
mov
sti
mov
faddl
xor
enter
popa
dec
pop
mov
xchg
scas
mov
dec
int
aad
js
push
mov
shl
test
push
repnz
mov
sub
inc
repnz
mov
mov
aaa
mov
dec
cmp
push
incl
lret
xor
loopne
in
or
cmp
jns
jmp
sahf
imul
inc
int3
roll
xor
mov
push
mov
cltd
imul
lock
sti
add
inc
xchg
aaa
mov
lock
rep
nop
stos
cmp
cmp
mov
fsubl
pop
dec
cmp
stos
negl
repnz
outsl
push
xchg
pop
fdecstp
or
popa
popf
lock
fisubrs
mov
xor
fdiv
cmp
mov
mov
or
in
adc
pop
dec
sub
push
cs
repnz
add
aad
jbe
sbb
push
push
fdivr
test
inc
add
lock
clc
out
dec
dec
jnp
enter
test
sbb
mull
and
test
or
loopne
xor
jl
fdivrs
add
shll
testl
adc
mov
add
scas
int3
mov
xchg
loope
adc
inc
cmc
xchg
mov
aad
push
int3
adc
loopne
mov
es
sbb
sub
xor
and
jno
out
into
fldl
adc
fwait
outsb
xchg
xchg
add
bound
ds
cltd
or
jmp
push
call
arpl
test
push
mov
call
inc
mov
call
stc
add
push
adc
dec
dec
enter
test
andb
cmp
cli
jl
dec
cmp
es
mov
push
out
xor
mov
fcoms
jmp
push
ret
dec
push
in
pop
sahf
jecxz
add
jle
adc
jno
stos
mov
in
cltd
sbb
mov
pop
pop
push
sbb
jge
or
ret
push
scas
mov
mov
cli
or
scas
andl
mov
inc
lea
cmp
adc
mov
repz
jns
sbb
test
mov
xorb
mov
or
push
mov
stc
jns
mov
push
xchg
mov
inc
repnz
xor
mov
inc
sub
adc
test
test
out
adc
in
and
xchg
aas
stc
movsb
and
ret
fucomi
lret
addr16
mov
jne
mov
mov
push
cmp
push
add
leave
xchg
push
dec
popa
fs
clts
mov
jno
loop
mov
sbb
push
mov
mov
and
xchg
mov
fisubrs
jmp
dec
adc
sti
aad
stos
arpl
xor
clc
xchg
mov
jg
stc
pop
xchg
add
imul
jno
insb
push
cmp
mov
push
ds
and
js
inc
aad
mov
inc
mov
sbb
fst
jns
jo
add
and
dec
cmp
push
in
lret
lahf
ljmp
pop
test
movsb
je
sbb
mov
mov
or
shrl
les
or
into
cltd
es
rol
hlt
xchg
jb
pop
jnp
xchg
idivl
pop
mov
inc
popf
movsl
and
xlat
mov
or
jns
jae
and
sti
and
mov
movsl
xchg
sbb
or
cltd
cs
xchg
shlb
addr16
rcrb
notb
sub
mov
ljmp
inc
mulb
mov
lret
push
dec
xchg
aad
fwait
inc
popa
cmpl
inc
sbb
loop
xor
cltd
nop
dec
xor
inc
fidivs
ds
push
outsl
sahf
addb
cmp
pushf
sbb
imul
popa
sbb
mov
mov
push
mov
movsl
xchg
fnstenv
dec
xor
fildll
mov
cmp
mov
adc
es
fstps
dec
movsb
xchg
addl
jb
jns
sti
mov
sbb
outsb
dec
idivb
pop
mov
test
loopne
and
dec
pop
loop
push
mov
xchg
inc
or
jecxz
arpl
mov
xor
mov
addr16
outsb
cmp
adc
out
mov
shll
sbb
jnp
jl
cwtl
stos
movsb
push
fsub
inc
push
gs
sbb
daa
je
push
clc
push
cmc
fcompl
jle
fisttpl
xor
mov
inc
test
jmp
fbld
mov
lods
fsubrs
shlb
lahf
mov
inc
xchg
insl
mov
pop
cmp
or
sbbb
pop
jnp
or
loope
pop
jge
xorb
repz
jmp
mov
pop
aad
outsl
es
movb
aas
lds
pop
mov
fsubs
sti
mov
scas
mov
or
enter
sbb
sub
hlt
mov
and
stos
dec
add
sub
or
and
mov
int3
stc
push
call
sbb
fadds
inc
clc
inc
sub
mov
mov
je
js
cmp
sbb
test
lock
fldlg2
mov
jg
and
or
test
jmp
xchg
mov
loope
or
mov
scas
shl
rol
jo
mov
das
xor
mov
cmc
lds
enter
or
pop
mov
xlat
and
lods
mov
test
mov
pop
ss
push
mov
cltd
mov
aas
dec
nop
in
xor
imul
jo
xchg
stc
or
sbbb
or
pushf
sub
enter
sub
rol
mov
fwait
into
dec
jnp
jmp
mov
cmp
mov
jns
push
pop
xor
lods
cmpsb
addr16
jns
iret
cs
hlt
mov
scas
mov
pop
sub
mov
fwait
adc
sbb
cld
out
mov
sti
fwait
xor
popa
lret
xchg
and
sarb
ror
push
mov
mov
nop
stos
out
or
sbb
js
leave
cmpsl
out
mov
movsb
jae
mov
les
pop
jnp
mov
shll
sarl
xchg
pop
andb
shlb
mov
out
cli
fimull
sub
sti
pop
jp
iret
cmp
adc
sti
cmc
mov
xchg
and
push
pop
out
test
out
mov
imul
ds
imul
sub
inc
sub
rcrl
fisttpll
fcoms
cmp
imull
pop
cs
inc
and
cmp
mov
dec
pop
into
ret
sbb
pop
push
adc
cmpsb
cmpsl
jns
add
jp
pop
fimuls
mov
cltd
lret
sub
mov
aam
pop
mov
cwtl
das
lock
and
cmp
dec
dec
pop
fmul
push
xor
lods
in
ljmp
shr
mov
test
not
cmp
mov
jmp
bswap
rcll
cmp
out
xchg
out
lds
cmp
dec
adc
dec
ret
dec
popa
xchg
xchg
push
filds
pop
mov
inc
push
lea
adc
push
aad
dec
and
mov
test
xor
fsubr
xchg
pop
andl
addr16
mov
shrl
fisttpl
loop
pushf
jl
jns
sub
aas
ss
sub
cmp
cmp
arpl
pop
pop
js
lret
sbb
jns
pop
scas
or
mov
jno
pusha
inc
arpl
inc
adc
fs
fbstp
or
inc
mov
jl
mov
xchg
add
mov
test
lret
sbb
pusha
test
movsb
mov
addr16
mov
dec
or
das
in
and
je
or
orb
dec
lret
xchg
jle
xchg
and
xor
push
out
mov
bound
cmp
add
int3
sub
data16
je
dec
and
cmpsl
daa
insl
imul
jae
push
mov
pop
stos
mov
rcll
mov
dec
jge
push
xchg
jecxz
pop
xchg
mov
push
xor
cs
lret
pop
pop
std
bound
and
and
jl
xchg
mov
sbbb
lods
subb
leave
sti
orps
lock
mov
hlt
inc
push
dec
ds
jo
and
dec
pop
or
jp
loope
lds
cmp
and
sub
insl
and
xor
popf
cmc
add
mov
inc
jns
lea
sbb
lods
lcall
and
sbb
cwtl
push
pop
mov
shr
shll
aam
or
push
scas
sbb
and
xor
push
sub
fcoml
jno
pusha
and
push
insb
sub
pop
test
scas
mov
sbb
ss
jne
out
xlat
call
fdivrl
sub
lds
jae
mov
pop
stos
jno
sub
xlat
cmp
loope
aam
sub
or
in
mov
push
fsubl
lods
addr16
cmpsb
in
leave
or
mov
fs
ljmp
mov
in
cmp
daa
hlt
roll
xchg
ror
popf
pop
rep
clc
aam
or
lahf
mov
inc
cld
gs
cld
or
push
push
mov
xchg
test
scas
bnd
jp
scas
pop
pop
push
xor
inc
jno
lret
lahf
pop
and
into
mov
mov
pop
inc
fidivrl
lcall
sbb
xchg
ljmp
dec
fs
inc
inc
mov
xchg
pop
pushf
das
push
mov
test
or
push
cmc
addb
sahf
and
idiv
mov
jo
or
cmpsb
movb
mov
adc
inc
or
int
data16
cmpsb
ds
adc
stos
imul
out
loop
lods
sub
icebp
test
cli
dec
mov
sti
or
xchg
mov
not
jnp
sbb
shll
hlt
mov
pop
mov
mov
pop
cli
sbb
jne
dec
cmpsl
push
addr16
sub
mov
movsb
rcr
int3
add
test
stos
add
pop
out
mov
fldt
mov
test
dec
outsl
lods
push
imulb
or
xchg
push
push
adc
pusha
movb
xor
insb
sub
cwtl
xchg
jae
subb
jl
out
add
and
pop
rcl
rcll
and
adc
pop
mov
mov
cs
in
out
test
push
repz
ss
testb
mov
xchg
clc
jno
sbb
scas
xor
push
clc
dec
push
inc
jecxz
lea
jge
mov
enter
js
lret
xor
mov
inc
jecxz
and
push
std
push
insb
mov
jg
test
lock
imul
fnstcw
das
sbb
mov
jecxz
and
cmp
cmpsb
in
mov
imul
int
inc
add
je
jecxz
stos
jbe
insl
call
sub
adc
or
jb
jns
pusha
stc
rcrb
lock
mov
stc
imul
pop
sbb
lcall
lea
out
push
sub
ret
subl
pop
dec
adc
jo
xchg
and
mov
xor
pop
mov
lds
mov
fistl
repz
cmc
test
or
dec
mov
mov
out
cltd
subl
mov
mov
cmp
mov
mov
adc
in
xchg
call
outsb
xchg
xchg
scas
hlt
out
testl
xor
xorb
roll
sub
dec
xor
and
mov
gs
pop
mov
mov
ret
lea
inc
loop
repz
sub
mov
mov
sbb
mov
test
and
and
mov
ss
xchg
or
sub
mov
push
push
out
repnz
and
and
mov
or
mov
addr16
cmp
sbb
push
jae
adc
shll
cld
fdivr
xor
sar
sbb
mov
jmp
fidivrl
out
mov
popa
cltd
dec
dec
sub
mov
or
sarl
dec
lock
iret
sti
mov
xchg
ja
scas
or
in
lret
fs
dec
rorl
adc
jb
lahf
movsl
stos
push
dec
xchg
mov
and
dec
out
ret
mov
psubw
cs
out
shrl
push
or
push
or
mov
andl
out
cmp
ret
dec
ja
mov
xor
lods
roll
dec
jl
add
bnd
outsb
test
cmp
add
lret
adc
shll
xor
ficompl
out
jbe
sub
or
xchg
popf
out
or
push
int3
mov
add
mov
int
sub
dec
aad
xor
sub
add
stc
and
mov
dec
fidivl
inc
fisttpll
dec
lods
jno
out
jecxz
daa
outsl
repnz
sti
aad
stos
nopl
jns
clc
jne
fdivl
pusha
popf
test
sub
sti
shrb
aad
fdivs
or
xchg
push
xchg
in
inc
call
fcmovnu
and
mov
arpl
mov
mov
or
movsb
pop
pop
add
cmc
xlat
cmp
inc
js
mov
adc
dec
imul
nop
and
movsl
dec
xchg
xchg
pop
inc
loope
xor
ljmp
ja
xchg
aam
sbb
mov
repnz
pop
addr16
add
push
push
jb
mov
fsts
roll
xchg
test
jns
jecxz
lahf
sbb
iret
jbe
push
jbe
cmp
mov
negl
shrl
xchg
outsl
cmp
insl
ljmp
push
sbb
mov
sarl
or
jno
cmpsl
hlt
inc
imul
pushf
sbb
mov
jne
loope
add
sub
and
jle
stc
ret
mov
or
adc
mov
data16
push
incb
cmp
adc
inc
push
pop
cmpsl
ja
cmc
push
push
fbld
dec
loopne
fnstsw
mov
xor
dec
push
and
pop
pop
shrl
sbb
repnz
je
aad
daa
cmp
addl
xor
test
dec
test
xchg
int3
sbbl
sub
stc
nop
sub
in
test
add
mov
mov
stos
cs
loope
lahf
mov
push
push
loop
add
add
aas
and
dec
sub
cmpsb
pushf
xlat
js
ljmp
dec
xor
adc
pushf
roll
filds
add
cld
mov
cld
xchg
adc
lock
push
xchg
iret
roll
std
inc
jle
insl
push
sbb
inc
out
movsl
fsubr
dec
cltd
jg
mov
adc
xor
stc
enter
and
clc
loop
adc
adc
or
cwtl
mov
daa
popa
les
repz
gs
or
xor
out
in
add
cltd
popa
mov
or
sbb
push
or
inc
stos
and
sarl
xlat
fdiv
rol
jmp
sub
pop
in
mov
adc
setp
and
sbb
movd
jg
hlt
insl
into
js
data16
push
and
ret
test
icebp
imul
push
jg
push
mov
js
cmp
and
imul
xchg
add
ljmp
cmpsb
pop
into
lret
and
andb
jnp
or
cmc
mov
mov
inc
jns
push
jle
lods
popf
stos
movl
insl
or
xchg
fldcw
xor
data16
movsl
jb
or
nop
nop
ficompl
inc
ret
xor
cli
cmp
lea
int3
nop
inc
jno
loop
sub
lahf
pop
repnz
mov
mov
inc
pop
inc
fcoms
sub
dec
cmp
pop
cmp
sub
daa
xor
sbb
lcall
cmpsb
xor
cmp
push
xchg
sub
mov
fists
mov
lret
adc
add
pop
rorb
mov
ret
xchg
pop
pop
testb
repnz
jbe
addr16
filds
jne
push
mov
jg
bound
shl
ja
push
fnstsw
dec
stos
bound
cwtl
in
je
add
cmpl
add
xor
jp
adc
mov
dec
push
push
stc
cwtl
mov
repz
mov
adcb
xor
inc
mov
cmp
fnstsw
es
rcll
imul
inc
movsl
pushf
sbb
mov
dec
or
jmp
add
jo
lods
xor
dec
add
div
dec
lret
in
pop
jbe
jbe
scas
das
movsl
outsb
sarl
inc
arpl
mov
insl
add
add
mov
xchg
roll
clc
sbb
repnz
mov
lahf
iret
pop
jae
fadds
pop
adc
mov
jp
shl
lcall
mov
pop
mov
int
xor
push
roll
movsb
sarl
pop
out
xor
divl
inc
mov
inc
jno
xor
push
lock
sar
test
or
mov
into
jne
push
ja
adc
cmp
ljmp
inc
lahf
jbe
cmp
lret
sub
imul
pop
out
loop
into
jae
jb
mov
xchg
cmc
inc
add
pop
jb
adcl
aaa
sub
adc
clc
push
xchg
leave
push
lret
aam
pushl
adc
ja
enter
or
or
cmp
mov
sahf
xor
push
popa
mov
sarl
rorl
pop
lods
cmc
popf
lods
cwtl
out
dec
mov
mov
xlat
pusha
imul
jp
push
enter
imul
jle
dec
sub
pop
jmp
fnstcw
ljmp
adcb
pushf
adc
je
jo
xor
insb
scas
and
movsl
xlat
jno
lock
cld
mov
stc
hlt
arpl
out
sub
out
xchg
xchg
nop
dec
out
dec
pushf
loope
and
lret
insl
or
lock
sub
imul
andl
xchg
negl
mov
data16
enter
push
flds
add
popf
xchg
pop
dec
and
rol
stc
mov
cltd
test
push
jnp
stos
int
dec
aaa
push
movsb
xchg
vpunpcklbw
xchg
scas
mov
jge
adc
mov
push
mov
xchg
jae
loopne
add
shll
or
jae
call
xor
sbb
in
outsl
mov
mov
pop
enter
mov
jnp
fidivl
or
in
fstpl
iret
jecxz
dec
iret
addr16
push
jge
xlat
and
jge
cltd
sbb
xor
stc
jne
push
jg
dec
fwait
push
fs
push
cmpsl
mov
ret
xor
xchg
sub
cld
insl
sub
adc
lret
rcrl
lahf
mov
mov
arpl
push
push
mov
loop
cmpsb
das
push
insb
popf
xchg
popf
call
in
inc
pusha
mov
push
leave
test
inc
adcl
dec
push
pop
psllq
push
loopne
xlat
cmpsl
mov
xor
lea
js
add
inc
fstp
incl
lods
pop
sub
es
xchg
shlb
adc
ja
data16
and
fcomp
je
or
cmp
lret
jb
fisubs
push
push
in
imul
mov
push
inc
repz
imul
add
jno
imul
cmc
adc
cmpsl
xor
and
loope
insl
call
lds
lds
insl
pop
mov
pop
pusha
leave
test
arpl
xor
lock
pop
mov
jb
pusha
adcl
inc
repz
xchg
imul
shl
cmp
lock
pop
sub
scas
dec
out
inc
lods
jnp
add
cld
cmp
mov
imul
push
mov
mov
or
repnz
xchg
xchg
push
loopne
jbe
sbb
fsubl
enter
int3
aad
pusha
out
push
stos
lret
lds
mov
push
mov
cld
scas
push
or
pushf
or
fs
or
in
imul
dec
push
out
or
xchg
imul
jge
sbb
jnp
jecxz
push
pusha
mov
loopne
int
in
hlt
div
call
xchg
in
call
lods
mov
adc
push
dec
mov
outsb
mov
out
lods
stc
push
out
xlat
cmp
enter
aaa
inc
fstpt
push
ss
pop
dec
bound
in
inc
cli
js
xchg
test
jl
ret
lahf
subl
adc
fsubrs
sbb
rclb
rcr
dec
fidivs
repnz
outsb
adcb
jno
lahf
out
rol
ja
popa
xchg
and
xor
lods
dec
repnz
imul
in
aaa
sbb
sbb
shrb
add
dec
push
sbb
sbb
ljmp
cld
lods
iret
push
mov
push
lds
pop
js
mov
adc
movsb
into
inc
fsts
adc
sbb
pop
rolb
cmc
rolb
addr16
fdivrl
testl
push
popa
outsb
jl
and
and
int3
push
popa
jne
cs
aad
cmpsl
mov
int
push
mov
fisubs
not
add
aam
mov
mov
jo
mov
cmp
popf
not
xor
sbb
adc
push
frstor
xor
cli
arpl
cmpsl
lea
data16
mov
mov
push
sbb
pop
mov
sub
push
insb
pcmpeqw
arpl
mov
or
mov
xor
int
sbb
adc
fs
in
out
sbb
cmpsb
inc
jns
mov
mov
sti
ret
adc
addl
jno
or
xor
mov
push
fcomi
test
or
dec
pusha
dec
xor
cmp
in
adc
dec
je
mov
inc
xlat
mov
lret
pop
inc
pop
jmp
add
rolb
int3
ljmp
mov
fdivr
aas
xchg
int
jb
cmc
lret
dec
out
fcmovnb
shrl
leave
add
jbe
jmp
ljmp
push
pop
out
mov
stos
mov
sub
cmp
scas
dec
push
add
mov
or
fwait
adc
dec
cmp
scas
mov
push
lea
push
push
in
cmc
jno
xor
mov
insb
mov
out
inc
and
or
push
or
imulb
stc
popa
adc
insb
cltd
push
or
outsb
xlat
stc
cmp
xlat
dec
and
jle
add
ja
cmpb
mov
add
jnp
aam
stc
xchg
into
or
add
dec
addr16
sub
jecxz
je
and
xlat
dec
mov
shrb
lods
insb
jl
adc
cmp
push
fimuls
mov
enter
bnd
jns
jl
jl
xlat
outsb
rolb
es
xor
sub
lret
aam
push
lods
push
shll
pop
insb
mov
pop
inc
inc
rorb
and
cs
je
push
dec
fs
scas
xor
pop
getsec
mov
xchg
mov
call
das
mov
fldt
xlat
jge
inc
sub
xchg
mov
loop
xchg
cmp
das
inc
and
imul
cmpsl
dec
adc
adc
add
std
add
mov
cmp
movsb
ljmp
iret
push
mov
loopne
loopne
in
add
rcrb
loop
dec
dec
and
push
dec
dec
divl
loop
lret
and
or
mov
cmpb
push
xchg
xchg
pop
enter
cltd
test
pop
stos
pop
cmp
test
std
std
sbb
cmp
and
push
and
xor
mov
dec
push
add
aas
fcoms
adc
inc
and
dec
outsb
cmp
rcrl
in
cmpsb
add
in
sub
mov
aaa
sbb
mov
add
pop
fsubrl
dec
dec
sub
out
repnz
and
pop
mov
arpl
pop
jmp
fildl
adc
dec
mov
adc
imul
push
nop
fs
insb
stos
sub
push
clc
mov
sbb
xor
fiaddl
mov
aas
dec
xor
mov
or
or
xor
sub
lret
cmp
fdivrl
fistl
sub
dec
mov
pop
int3
jno
filds
cwtl
inc
mov
jmp
push
rclb
sbb
popa
cmp
ss
fs
std
push
das
add
and
and
movsb
jle
add
xor
call
dec
imulb
inc
mov
enter
cmpsb
adc
fbld
inc
pop
xchg
ljmp
inc
mov
push
popf
add
xchg
outsb
int3
in
cltd
cmp
ljmp
lahf
test
jecxz
sub
ss
aam
sbb
mov
add
dec
cmpsl
lret
notl
pop
or
push
ret
fidivrs
shlb
jg
icebp
leave
sarl
mov
pop
dec
jmp
lcall
mov
adc
outsl
lret
mov
lods
cwtl
shlb
mov
loop
adc
rcll
rcrb
jg
in
cs
mov
fwait
lods
sbb
insb
lret
cmpsb
lods
or
jb
push
frstor
fisubl
fsubl
call
js
or
in
push
or
popf
sub
inc
leave
and
lea
xor
mov
mov
mov
enter
rcll
inc
push
out
and
dec
dec
push
push
xchg
lods
xchg
xor
sub
ret
mov
hlt
mov
or
and
fs
mov
int
in
or
loop
adc
gs
push
adc
inc
scas
xchg
stos
fwait
clc
lods
mov
inc
popa
and
ljmp
das
shlb
stc
push
jecxz
lds
push
les
mov
lret
imul
push
dec
xor
pop
scas
push
popa
mov
inc
neg
cmp
inc
cmpsb
leave
cmpb
sbb
mov
cld
jge
push
fsubrs
xchg
ret
cli
cmp
cmp
or
mov
pop
push
lcall
inc
shll
fs
movl
xor
mov
mov
adc
jns
mov
aas
int3
test
sbb
ret
push
sbb
pop
test
shlb
nop
xchg
leave
lods
scas
sti
hlt
lahf
inc
into
decb
adc
add
jecxz
sub
mov
jbe
loope
sbb
es
sub
pop
outsl
mov
dec
fdivl
stos
cmpsb
lods
movsl
mov
addl
push
iret
adc
push
xor
jle
sbb
fcoms
mov
test
arpl
out
pop
vpavgb
icebp
push
pop
loop
add
add
imul
mov
mov
loopne
sub
cmpsb
inc
data16
daa
bnd
add
push
cmp
push
icebp
cmp
cmp
cmp
jae
dec
dec
iret
into
in
fwait
xor
jb
jbe
fistps
xor
mov
jno
mov
mov
dec
scas
movsb
jnp
loope
shl
jl
pop
sbb
pop
sub
and
gs
and
das
ret
lahf
test
xor
out
mov
imul
and
pop
push
push
mov
mov
mov
xchg
pop
test
xor
and
ret
jle
sbb
mov
lahf
frstor
pop
or
xor
in
js
pop
xor
xor
and
test
jnp
cmp
jno
mov
cltd
lea
jmp
mov
cmpsl
inc
xchg
inc
sub
adc
pop
int3
xchg
clc
ds
cmc
pop
out
insb
out
xor
popf
hlt
cs
jo
adc
mov
jge
gs
cmp
rolb
push
jge
addl
mov
imulb
xor
mov
into
rol
fwait
mov
pop
pop
push
sbb
das
push
cmp
filds
xor
loope
lods
ret
in
es
dec
push
test
data16
xor
iret
pop
xor
pop
jle
in
insl
sub
mov
lahf
sti
pop
in
pop
xor
xchg
and
add
mov
or
pop
je
aas
arpl
lea
ret
xchg
push
js
cwtl
push
lock
fstps
stos
pusha
das
push
mov
jl
lahf
sub
movsb
push
shrb
mov
adc
out
jno
xor
sar
out
add
fisubrl
fnstsw
fildl
pop
sub
xchg
shlb
outsb
sbb
hlt
cmp
cwtl
mull
faddp
ja
testb
movsl
mov
sbb
into
in
pop
xchg
jg
and
add
inc
mov
ret
mov
xchg
jbe
popl
icebp
lahf
adc
sbb
dec
pop
dec
ss
push
cmc
lock
aam
daa
lcall
insb
push
push
xor
cmpsb
jne
outsb
dec
xchg
and
push
xor
mov
push
insb
add
int
mov
subl
retw
ficoms
or
fwait
push
or
test
xor
pop
sub
rcll
out
mov
push
andl
sub
aam
divl
mov
jp
loop
dec
xor
insl
pop
mov
jns
les
test
and
xor
mov
ds
jno
out
xchg
mov
and
shl
js
adc
mov
out
fwait
in
add
mov
aam
rolb
test
mov
push
xchg
lcall
push
xlat
push
jo
dec
add
movsbl
xor
stos
inc
ficompl
jle
cli
enter
mov
add
push
sbb
xor
das
xchg
xor
jb
in
dec
xlat
mov
enter
jmp
inc
loope
mov
jb
sbbl
dec
xchg
push
push
xchg
push
jno
sbbl
cmpsl
mov
or
adcb
lcall
mov
adc
repnz
xchg
pop
cmp
jo
test
popa
idiv
mov
repz
aad
pop
lret
rcl
inc
xchg
in
and
out
mov
sbb
orps
movsb
xchg
pop
cmpsb
popa
pop
ret
lods
stos
xor
jae
inc
or
sbb
jp
das
or
jp
sub
ds
sbb
mov
inc
dec
pop
cmp
movsb
es
iret
dec
test
fistpl
jns
dec
fbld
mov
fstpt
out
jbe
dec
movsb
hlt
in
sbb
test
stos
ds
lods
mov
fdiv
xor
jo
inc
mov
loop
popf
mov
cltd
ss
jmp
int
mov
xchg
rolb
ljmp
jae
mov
iret
mov
mov
and
fcomps
popa
fcomp
gs
ror
sub
fstl
nop
shrl
daa
push
cmc
std
jle
adc
sarb
in
jmp
xchg
imul
inc
pop
inc
jnp
mov
ret
loop
mov
aam
hlt
inc
insl
in
daa
hlt
add
repnz
mov
mov
or
fnstenv
leave
aad
pop
jno
loope
je
inc
xor
maskmovq
mull
test
adc
jb
sti
adc
arpl
push
imul
movsb
mov
repz
inc
faddl
add
and
dec
xchg
sbb
and
mov
in
incl
or
sbb
pop
ret
mov
xchg
mov
xlat
sub
jl
push
sbb
leave
sub
fwait
add
lods
and
popa
jno
ficoms
mov
adc
mov
fwait
cld
rcrb
and
adc
aaa
lea
jne
add
dec
pop
pop
fdivrl
sbb
ftst
je
test
retw
out
cmpsb
jnp
jmp
mov
and
mov
add
jmp
mov
sarb
jle
or
scas
pop
mov
jnp
outsl
std
inc
into
mov
push
cmp
jb
pop
or
mov
mov
ret
mov
xchg
icebp
mov
jmp
sarl
mov
and
add
push
pop
jno
daa
xchg
rclb
nop
xchg
mov
lcall
sbb
mov
data16
pop
insb
jg
leave
jg
in
cmpsl
inc
jne
dec
les
pop
iret
ret
ja
mov
fwait
jnp
stc
stc
out
sub
or
pop
push
mov
mov
stc
inc
jae
ja
push
cmpsl
jae
mov
gs
inc
sti
icebp
jno
xor
in
jecxz
enter
mov
roll
loopne
add
jl
inc
loope
out
inc
in
cmpb
div
sbb
push
es
hlt
sti
test
ret
dec
sbb
inc
jo
mov
push
aaa
addb
jl
int3
or
lcall
and
nop
adc
jecxz
dec
sbb
push
jnp
stos
nop
fucom
pop
les
inc
lods
and
adc
pop
into
mov
sub
stos
out
or
fstps
out
adc
sbbb
adc
mov
pop
sub
xor
dec
push
and
fdivl
cmp
xchg
pusha
cmp
ret
iret
cmp
stos
mov
enter
jb
xor
push
mov
movsb
out
push
mov
shlb
mov
add
xchg
ffree
ds
push
popa
aaa
pushf
dec
fcomps
or
ret
icebp
and
sub
pop
lds
test
into
stos
or
jnp,pn
pop
fwait
mov
and
mov
sub
sbbb
fs
push
out
add
push
mov
sbb
test
loopne
ds
mov
mov
inc
repz
jge
mov
cmp
mov
es
push
mov
es
cs
cs
shll
cmp
add
jp
sub
pop
insb
cwtl
jb
int
add
add
and
dec
add
sub
gs
jecxz
inc
negl
data16
jae
inc
adc
scas
movl
inc
xor
addb
ds
cmp
mov
nop
and
cltd
test
jae
jl
xchg
pop
xlat
dec
shrb
pop
pop
sbb
imul
pop
mov
ret
or
inc
andb
flds
add
daa
sbb
jg
push
sbb
out
aas
nop
mov
sub
cmp
lds
stc
push
jl
jl
outsb
or
xchg
std
andl
pop
sbb
lea
pop
out
shl
xchg
addr16
xchg
cmp
xor
aad
movsb
dec
decl
or
mov
and
add
mov
pavgw
stos
sub
and
jne
mov
mulb
and
or
pop
movd
stos
popf
xchg
jp
xor
test
push
int
pop
into
adc
pop
fisttpll
or
jmp
mov
stos
xchg
jae
sub
mov
xchg
aas
fwait
adcb
cmp
loopne,pn
cmp
je
add
loop
jo
sbb
inc
xor
inc
imul
dec
lret
or
add
sbb
mov
data16
loope
xor
push
mov
in
test
adc
mov
cli
mov
int
push
sbb
push
cli
xor
cld
es
in
ljmp
out
and
imul
das
sub
mov
or
adc
shr
mov
or
iret
in
ja
stos
iret
fs
out
dec
adc
sbb
or
ret
cwtl
inc
adc
cmp
xor
mov
push
mov
jno
mov
pop
lahf
xchg
mov
xchg
popa
sub
xchg
inc
sub
pushf
in
jae
jne
jecxz
and
cmp
push
cmc
loope
in
and
sbb
add
or
mov
aas
mov
int
sti
cmp
inc
aam
inc
inc
inc
inc
add
arpl
stos
pop
adc
xor
test
pop
xlat
push
jp
push
das
enter
jo
jno
movsl
push
popa
pusha
xor
out
repz
add
push
clc
pop
and
ret
loope
push
cs
pop
repnz
lcall
adc
dec
lcall
push
sub
xchg
aas
mov
enter
pushw
in
andb
mov
xchg
mov
and
subl
xor
mov
sbb
shlb
lret
add
pop
loope
in
aam
ljmp
int
mov
xchg
adc
mov
stc
pop
pop
mov
dec
xor
adc
lret
add
out
test
inc
xorl
mov
sub
dec
sub
add
pop
mov
in
scas
movsl
or
loop
inc
xor
sub
push
repnz
mov
lods
roll
mov
mul
dec
pop
outsl
aas
jp
dec
inc
icebp
xor
std
fsts
add
push
fadds
push
inc
in
adc
ficomps
fldl
sub
sbb
xor
pop
mov
sahf
movsl
xchg
pop
push
sbb
stc
rclb
into
jmp
or
add
push
outsl
dec
or
pop
cli
cmp
mov
adc
or
add
inc
add
jmp
jl
sti
mov
mov
sahf
repnz
pop
cmp
xchg
push
mov
mov
shl
push
or
push
mov
jno
ljmp
aaa
mov
or
jns
fisubs
popa
rclb
enter
xor
mov
vmovsd
fwait
loopne,pn
in
cltd
call
ficompl
inc
les
push
mov
jg
clc
daa
test
cmp
pop
jbe
push
cmpsb
pop
cmp
mov
cmp
mov
xor
mov
stc
ror
xchg
push
xor
scas
out
lock
bound
jo
enter
push
dec
lret
push
mov
fistps
pushf
out
test
pop
les
mov
jbe
sbb
mov
sub
push
insl
add
push
popf
testl
dec
xchg
fsubl
or
push
dec
mov
or
rolb
imul
push
sbb
rolb
cltd
test
stc
xchg
push
mov
mov
test
notl
cltd
int3
mov
pop
xchg
sahf
lods
cmp
mov
and
adcl
push
inc
pop
stos
sbb
call
adc
xchg
jp
addr16
add
jno
mov
popf
out
fisubl
sub
mov
jmp
inc
pop
dec
scas
dec
cwtl
add
nop
fsubp
and
sub
cmp
dec
mov
rcrl
xlat
lds
pushf
movsl
daa
push
jge
xor
aad
or
xchg
adc
imul
int3
pusha
stc
xor
fdivrs
adc
mov
add
cmpsl
adc
rclb
sbb
not
xchg
inc
daa
dec
in
and
jmp
ja
lahf
xor
aas
pop
and
repz
out
jmp
aam
sub
nop
jge
pop
les
subb
sub
push
or
js
adc
movsb
sub
test
inc
xchg
lods
daa
pop
xchg
add
and
mov
in
les
push
pop
xor
lods
lahf
adc
fistpll
js
in
dec
roll
gs
xor
dec
in
or
out
xor
jmp
lahf
or
ret
mov
pop
xchg
jae
les
add
mov
dec
pop
xchg
xchg
pop
and
das
xor
xchg
mov
jo
jecxz
pop
pop
fcompl
inc
aas
loop
in
or
and
sbb
jp
sub
ss
in
or
shlb
push
fbld
inc
sub
xlat
add
bt
jo
outsb
sahf
xchg
jb
leave
loope
inc
mull
pop
push
sbb
sbb
cmc
loop
xlat
dec
cli
push
ja
stc
je
js
xor
adcb
inc
cmp
les
test
popf
ficoml
pop
sahf
das
push
mov
sarb
mov
adc
xchg
push
test
cltd
ljmp
lret
lods
enter
mov
std
test
cwtl
xor
lods
mov
mov
hlt
inc
cmp
je
mov
into
sbb
dec
push
adc
and
pop
xor
jmp
pop
push
jg
add
xchg
ja
sti
mov
xchg
cld
scas
icebp
aad
pushf
leave
mov
add
orl
lds
fwait
dec
mov
cmp
mov
loope
jne
cmp
loopne
sbb
mov
cmpsl
adc
lds
jle
pop
mov
std
mov
mov
jecxz
mov
adc
xor
aas
mov
pop
adc
test
daa
lahf
cmp
popf
cwtl
rorb
cld
inc
jnp
stc
ljmp
std
pop
shrl
jg
sar
inc
mov
or
xor
sub
lods
inc
pop
xor
cmpsb
outsb
sbb
iret
popf
test
xchg
in
mov
ja
jo
sub
andb
push
mov
xor
mov
xchg
or
adc
sub
and
lret
std
push
repz
lcall
stos
std
adc
popf
mov
out
loop
mov
add
add
inc
add
lret
cmp
je
std
leave
jae
inc
mov
sub
jno
shrb
mov
sub
xchg
imul
xchg
mov
repz
mov
mov
push
cld
cmp
adcl
iret
pop
xchg
bound
push
mov
pop
imul
mov
and
insl
jmp
data16
jg
sti
dec
mov
test
in
and
int
gs
enter
mov
and
and
hlt
cld
fs
jbe
sub
jle
rcrl
gs
fs
xor
dec
mov
stos
pop
mov
jne
ds
das
adc
test
add
push
jae
lock
pushf
aas
std
mov
sub
subb
dec
jecxz
or
mov
in
mov
lock
add
xchg
mov
adc
push
out
std
inc
fistps
xor
jae
push
jmp
loop
push
pop
imul
xor
pop
push
in
cli
movsb
sbb
fxam
daa
pop
jl
jmp
jb
mov
iret
fsubrs
incl
and
pop
mov
xchg
cmpsb
in
pop
scas
daa
mov
leave
movsl
and
gs
push
aam
movsl
scas
fisubrl
pop
xorb
fdivr
sti
cmp
mov
pop
je
in
and
jg
pop
mov
xor
movsb
dec
push
out
cmpsb
cs
or
dec
push
aaa
andb
or
dec
lds
push
or
sbb
and
stos
cltd
fsubs
fnstsw
jb
jmp
or
xor
outsb
fidivrs
jno
mov
test
add
sbb
jl
lahf
repnz
pop
mov
adc
daa
je
inc
sbb
or
or
lods
sarb
and
and
mov
repz
sub
pop
pop
add
insl
mov
ljmp
dec
lea
jae
and
mov
inc
add
clc
shll
push
icebp
fdivrs
jg
in
imul
aam
int
and
mov
inc
mov
xchg
lret
xor
nop
cmc
rcl
insl
hlt
mov
mov
pop
sbb
mov
addb
or
jp
jp
outsb
push
lret
mov
sbb
decl
pop
mov
mov
sbb
push
xchg
ss
sbb
mov
mov
xchg
cli
in
add
pop
bound
push
dec
adc
shll
rorl
and
gs
scas
mov
movsl
rcrb
mov
or
out
insb
mov
out
pop
data16
scas
or
pushw
mov
pop
xor
fwait
gs
push
jne
and
mov
xor
pop
xchg
in
movsl
mov
push
and
jns
mov
andl
xchg
jg
and
pop
and
insb
inc
push
lea
adc
mov
or
sti
jmp
xchg
pop
sub
xchg
fsub
xchg
pop
mov
int
int
push
scas
jmp
hlt
jnp
jb
inc
xchg
pop
cli
jecxz
add
mov
in
jg
dec
inc
jne
xchg
add
add
fs
stos
cs
adc
mov
icebp
lea
mov
mov
push
pop
adcb
or
stc
sub
push
daa
das
mov
loopne
xor
stc
call
adc
mov
and
cltd
cmp
sub
out
shlb
movsl
push
adc
inc
jnp
data16
jmp
adc
stos
sbb
adc
jno
gs
xchg
aad
push
js
rorb
pop
push
mov
and
fbstp
mov
test
push
inc
adc
cmp
add
push
imul
push
fldt
notb
je
out
pushf
dec
stc
or
popa
sbb
popa
test
imul
test
test
xchg
mov
test
jb
lcall
std
add
das
out
fcomps
jge
and
sub
imul
insb
stos
mov
mov
cmp
pop
dec
aaa
fstp
addr16
in
fsub
push
out
pop
aas
insb
adc
in
pop
insb
add
loop
xchg
pop
jge
test
movsb
mul
out
mov
scas
cwtl
and
push
jne
xor
fwait
pop
imul
adc
fisttps
and
sbb
repnz
enter
push
dec
cmp
mov
mov
fucomi
mov
insl
pop
mov
mov
mov
mov
sub
das
stos
xor
movsb
dec
lods
mov
ss
repz
out
sub
cmp
mov
hlt
int3
stos
mov
dec
in
inc
xor
scas
scas
in
cmp
or
sbb
xor
xlat
outsl
pop
jp
in
push
xchg
mov
dec
mov
in
pop
jl
rcll
xchg
push
cmp
pandn
xchg
sub
xchg
cmp
mov
scas
adc
in
stc
sbb
cli
cmp
dec
ds
or
out
mov
out
fbstp
lcall
xlat
pop
jae
pop
fsubl
fidivrl
movsb
and
mov
mov
aaa
pop
inc
push
sbb
mov
and
bound
hlt
je
jmp
dec
orb
cld
mov
out
ror
test
push
aad
jg
pusha
mov
xchg
sbb
push
cmp
popf
or
dec
pop
sbb
cmp
xlat
je
mov
push
pushf
sub
or
daa
ds
outsl
lahf
inc
insl
test
das
xor
ret
adc
add
pop
cmp
out
fxch
add
out
jbe
sti
mov
lock
mov
inc
sar
enter
xchg
call
xchg
pusha
push
into
rcr
movsb
test
bound
add
stc
dec
insb
out
test
js
in
popf
adc
je
repnz
xor
push
out
cltd
lcall
roll
mov
fsubs
mov
cli
xor
dec
pop
pop
mov
xchg
dec
hlt
data16
jmp
xor
sahf
dec
call
or
aam
shll
mov
jnp
jb
xchg
add
inc
mov
fidivs
and
adc
in
inc
push
or
scas
or
cmp
xchg
xor
fs
int3
lahf
sbb
rcl
pop
cmp
js
shll
mov
fldl
insb
mov
push
and
and
ss
sub
push
jns
ja
in
adc
cli
and
sbb
pop
dec
imul
jle
rcr
cmp
cmpsl
testl
test
call
aad
lret
sub
add
cld
clc
mov
cwtl
sbb
jmp
inc
test
inc
aas
out
or
jl
aaa
shrl
sarl
jg
fcompl
das
inc
stc
mov
lret
js
in
mov
les
test
pop
scas
sub
fisubl
mov
icebp
add
clc
add
xchg
pop
les
dec
xor
cs
adc
jb
mov
mov
or
and
loop
push
in
and
rcrl
and
add
sbbl
jecxz
or
sbb
dec
inc
ja
mov
inc
iret
sti
pop
mov
mov
lcall
jbe
push
arpl
jb
sub
in
and
jb
test
xchg
out
xor
aas
es
ljmp
mov
mov
call
ffreep
xor
ja
jmp
xor
icebp
lock
inc
mov
loop
or
aas
mov
lock
or
mov
push
pop
test
fimull
xchg
call
jp
jne
add
shlb
in
cli
sbb
sub
pusha
xlat
dec
ja,pt
mov
ljmp
inc
cld
inc
daa
lods
mov
and
out
nop
in
pop
pop
dec
ja
mov
ret
mov
pop
pop
out
xor
inc
movsb
sub
inc
movsl
imul
pushl
insl
inc
xchg
xor
pop
jg
rorl
push
fimuls
push
mov
stos
pop
pop
repz
pop
cltd
xchg
push
icebp
scas
insl
jb
jnp
inc
sbb
jg
jb
adc
ret
pushf
adc
pop
xchg
lahf
push
mov
sub
push
movsb
aad
int3
sbb
jns
adc
xchg
lock
arpl
pop
cld
mov
dec
shr
je
and
cltd
jnp
out
int3
jae
aas
aas
pop
xlat
addr16
jns
push
mov
mov
pop
push
or
in
push
ljmp
pop
mov
inc
xchg
outsb
adc
sub
loop
shrl
fidivl
ret
test
or
adc
lods
pushf
mov
test
out
and
pop
push
fidivrs
int3
pop
and
or
jge
ficompl
sti
addr16
and
dec
inc
push
in
inc
movsb
xor
movsb
popf
xchg
inc
out
test
sub
ss
and
mov
push
jo
sub
cmp
int3
and
mov
xchg
pop
add
jg
push
sub
flds
xchg
pop
cld
xchg
mov
loopne
inc
fmuls
inc
mov
fwait
clc
xlat
aaa
sbb
mov
in
in
inc
mov
pop
and
push
fcmovne
fldenv
das
sbb
int
cltd
fcoml
mov
jl
and
repz
jle
dec
outsb
xor
lods
or
pusha
push
jecxz
imul
adc
movb
sub
inc
rclb
daa
shrb
inc
add
imul
rclb
mov
mov
call
cmpsb
repnz
sub
stos
sub
test
pop
out
cmp
in
in
mov
jne
daa
std
mov
add
movsb
xor
jb
insb
pop
mov
stos
sbb
xchg
jns
or
cmp
or
incl
lods
fstpt
daa
push
add
xchg
mov
test
aad
jbe
mov
clc
or
out
xchg
mov
mov
pop
unpckhps
enter
test
mov
inc
mov
test
lods
sub
cmc
push
outsb
dec
mov
cli
mov
xchg
mov
cmp
test
inc
rorl
jecxz
or
test
pop
addr16
push
dec
dec
sbb
mov
xor
push
out
lea
sbb
mov
ret
sbb
sbb
into
dec
mov
cmpsl
loopne
pop
adc
add
fdiv
je
mov
mov
adc
aam
dec
pop
pop
int
jb
pop
int3
mov
aam
inc
and
push
test
and
sbb
dec
xor
mov
push
xchg
push
mov
stos
jg
loop
pop
enter
mov
mov
cmp
sbb
xlat
push
aaa
mov
sbb
jno
js
xchg
scas
sub
push
je
push
and
ds
xchg
sbb
inc
push
mov
into
sbb
adc
icebp
imul
ficompl
popf
divl
cmp
sub
insl
fs
mov
sub
mov
push
adc
ds
cmpsl
mov
or
cmc
xchg
mov
pop
mulb
outsb
stos
ret
cmc
mov
sub
pop
out
xor
jg
arpl
aad
mov
dec
jp
outsl
sbb
arpl
jno
ret
movsb
lcall
mov
rol
fwait
mov
icebp
scas
ret
enter
xchg
push
jmp
inc
scas
push
inc
cmc
ficoms
dec
mov
lods
or
outsl
gs
xchg
lcall
stc
add
jnp
hlt
and
or
cmp
lahf
cli
jmp
in
js
mov
jl
stos
loop
add
clc
ret
xchg
jns
lods
aam
mov
mov
cmp
jmp
cmpl
xor
int3
rcll
xchg
pop
movsl
xchg
iret
push
push
mov
andb
out
dec
sbb
dec
imul
test
lock
shl
mov
pop
jp
mov
je
dec
incl
shll
pop
aad
test
outsb
sahf
jle
jg
repz
repz
add
mov
add
movsl
mov
pop
mov
ja
jb
jnp
inc
sub
iret
mov
push
ljmp
mov
and
push
adc
sti
scas
xchg
xchg
or
add
mov
shrb
lods
pop
adc
push
pushf
push
ja
jo
mov
jnp
stos
add
cs
add
scas
sub
fldenv
sbb
nop
sbb
jmp
sbb
xchg
call
movsb
gs
iret
xchg
xor
repnz
stos
leave
jge
sbb
push
mov
xchg
fsts
fdivp
mov
adc
add
inc
aas
jmp
fiadds
jno
insl
sbb
mov
test
cmpl
xchg
xchg
out
push
mov
test
add
pushf
stos
add
lcall
pop
jne
jge
xchg
fidivs
jp
mov
and
or
mov
or
or
sbb
mov
push
xor
adc
stos
loop
mov
insb
inc
dec
inc
cltd
and
and
or
out
rol
mov
add
das
jmp
inc
dec
push
outsl
xchg
in
cmpsl
in
pop
mov
ljmp
fsubp
idiv
add
out
iret
test
add
movsb
daa
in
popf
cli
mov
pushf
cmp
cmp
leave
pop
and
sbb
iret
push
dec
adc
mov
aad
lahf
outsl
mov
xor
inc
dec
imul
lds
in
sahf
mov
jae
adc
mov
jnp
adc
or
mov
aad
rcr
add
xchg
sbb
xor
add
maskmovq
testl
out
insb
jbe
cmp
popa
clc
mov
and
aam
cmp
std
pop
xor
mov
lahf
adc
stos
lods
shl
xlat
cmc
enter
stos
sub
dec
flds
inc
pop
call
cmc
rolb
mov
pushw
adc
lock
or
mov
fidivrs
das
out
cld
mov
lods
lahf
inc
cltd
outsl
mov
mov
in
jae
jne
fimuls
out
sub
fs
xchg
mov
mov
mov
fistl
jns
int3
mov
js
mov
mov
push
inc
lods
divl
out
je
mov
pop
or
xchg
mov
mov
fidivrs
add
mov
test
dec
bound
ja
mov
test
out
subb
mov
ljmp
fsubl
cmp
xlat
lret
popa
xor
js
pop
pop
subb
push
sbb
pop
or
sbb
inc
mov
fwait
jl
out
mov
in
neg
pop
movb
and
or
out
in
mov
mov
test
pop
mov
or
mov
shll
in
jmp
je
ss
mov
ficoml
jmp
daa
mov
jno
movsb
jg
jge
mov
adc
fcoml
and
jae
aas
xor
lods
imul
nop
rcrb
fiaddl
add
xchg
mov
int3
aaa
mov
xlat
stos
ss
jge
mov
mov
int3
cld
arpl
ja
fcmove
xor
mov
jle
std
daa
pop
inc
add
out
mov
in
pop
mov
stc
dec
movsl
sbb
push
bound
ret
jmp
cmp
insb
xor
cs
out
mov
mov
xor
mov
int3
sub
push
inc
or
sbb
daa
jg
cmp
sti
xchg
jbe
push
jge,pn
inc
out
repz
push
daa
and
repz
cwtl
jno
movsb
sbbb
in
int
mov
nop
cmpsl
adc
loopne
pop
call
xchg
mov
sub
fsubrl
fmuls
popl
adc
mov
dec
aad
pop
xchg
and
sub
sbb
scas
sub
pop
cmp
sbb
aaa
xchg
in
mov
out
adc
pminsw
repnz
xor
sub
pop
insb
add
dec
jmp
xor
add
or
je
dec
loopne
xchg
mov
test
aad
fisubrs
add
pushl
mov
in
dec
add
cwtl
movsb
mov
je
pop
xchg
lret
or
mov
adc
push
add
sbb
mov
inc
cltd
mov
mov
insb
aad
pop
adc
xchg
aad
pop
iret
sbb
xor
sahf
push
mov
mov
sbb
jns
test
push
aam
inc
sbb
mov
int3
loop
inc
insl
xchg
dec
int
movsl
jg
js
mov
sub
xchg
movsb
or
imul
imul
lock
sbb
fnstsw
sub
pushf
out
ss
bound
sar
mov
xchg
cli
outsb
addr16
lret
outsl
lea
jne
sti
int3
jns
mov
rorb
ret
jl
mov
mov
adc
add
jle
dec
sub
inc
mov
js
inc
hlt
jecxz,pt
mov
div
jge
add
dec
dec
cwtl
in
lcall
nop
push
sbb
ret
jecxz
xchg
cld
xor
movsb
loopne
cli
sbb
in
push
inc
cmp
pusha
stos
pushf
and
sti
shll
xor
pop
aaa
or
cmp
mov
mov
cmp
add
mov
jno
sub
insl
sarb
mov
and
stos
loope
cmp
add
test
out
sbb
ljmp
mov
and
sub
lahf
push
lods
movsb
mov
sbb
mull
lcall
jmp
mov
sub
add
cmp
push
sbb
in
lock
jge
mov
scas
cmpl
pusha
or
pop
popa
rcrb
nop
add
leave
movsb
fisttpll
mov
pop
stos
insb
mov
cmpl
adc
mov
or
jle
test
xchg
mov
add
sahf
adc
loopne
in
or
sbb
inc
jmp
popf
loopne
ss
and
sbb
stos
test
xchg
mov
lahf
jne
inc
test
sub
push
in
push
mov
sub
sub
push
sub
lock
es
pop
sub
int3
xor
adc
dec
inc
loope
lds
sbb
pop
push
hlt
pop
clc
pop
imul
lret
pop
xlat
fcoml
cwtl
lcall
mov
xor
pushf
fs
or
push
data16
pusha
xorb
fldpi
stos
scas
fwait
test
sahf
sub
sub
test
shll
xchg
test
lret
sbb
lods
push
lods
adcb
jbe
loope
movsl
and
mov
scas
mov
push
lods
mov
sbb
jo
daa
xchg
or
fdivl
lods
mov
cmp
cmp
frstor
adcb
mov
fbld
cmp
test
inc
xchg
jns
jle
pusha
clc
push
push
psubsw
mov
jnp
xchg
mov
mov
into
sbb
sub
lds
cmpsb
pop
xchg
aas
dec
out
add
pop
xor
movsb
mov
push
and
daa
sub
js
sub
fwait
mov
rcl
jg
sbb
fwait
sbb
pop
push
int3
push
cmp
pop
loope
sub
out
jns
dec
fld
sub
mov
xchg
adc
mov
popa
cmp
repnz
adc
test
fs
mov
adc
inc
incl
mov
cmpsl
out
push
push
and
addb
daa
bnd
lods
movsl
mov
sub
imul
stc
jmp
repz
jmp
mov
in
or
push
and
iret
repnz
xor
push
cmp
addr16
mov
movsl
idivb
popl
jl
inc
lret
mov
dec
xchg
or
test
jmp
loopne,pt
rclb
stos
xlat
mov
mov
movsl
mov
pop
jno
mov
mov
add
xchg
pop
sbb
add
rol
cmpsb
jno
lods
subl
icebp
pop
xorl
outsl
sbb
add
xchg
cmp
imul
out
rcrl
mov
mov
jge
mov
shlb
or
add
and
pop
push
jmp
pop
push
mov
dec
movsb
shll
out
pushf
rcr
test
sbb
mov
and
mov
ret
mov
push
loop
inc
and
cmc
pop
xchg
insb
sub
iret
lds
and
push
aas
stc
xor
insb
cmpxchg
in
ret
cmpsb
pcmpeqd
cmp
inc
dec
fadd
lods
inc
mov
loop
mov
adc
xlat
mov
push
out
roll
into
sub
loope
xchg
fdivp
pop
lods
inc
dec
mov
pop
adc
test
add
cmp
sbb
jne
sbb
cmc
out
jnp
aad
stos
jne
mov
cmc
into
mov
gs
inc
push
adc
push
out
adc
out
and
mov
aad
pop
imul
jne
xchg
mov
mov
lea
mov
cmp
ret
fs
js
loope
test
jg
dec
mov
out
icebp
loop
xor
add
in
mov
add
dec
inc
push
mov
std
data16
and
repz
pop
push
jne
jne
xchg
call
lods
or
sbb
jb
stos
fistl
in
sbb
lahf
and
test
cmpb
mov
rolb
sbb
jnp
sub
aad
cmpl
xor
outsl
inc
out
xor
roll
repz
movsb
popa
pop
push
aad
and
loope
dec
sub
sub
xor
sahf
cmpsb
mov
fsub
lret
mov
add
lea
pop
shr
jg
movntq
mov
xchg
lds
ja
lret
jb
aad
adc
add
dec
lret
sub
mov
scas
pop
sub
inc
adc
out
push
add
or
js
out
mov
jo
cmp
cmp
xchg
pop
mov
lret
fwait
daa
xor
jecxz
push
shrl
fidivrs
outsl
cs
mov
pop
inc
and
jg
shr
mov
jae
lock
loop
je
out
stos
adc
pop
or
nop
xchg
das
or
out
add
push
sbb
or
popa
push
mov
jae
push
and
xchg
ja
fistpl
xor
jmp
jle
jo
fcompl
cmc
sbb
jb
in
repz
or
cmpsb
jle
jmp
fnstenv
ret
xorl
es
push
mov
pop
and
or
push
lods
fisubl
sti
addr16
pop
or
gs
icebp
ja
xchg
pop
hlt
aas
jno
mov
std
call
insl
push
xchg
lods
push
xchg
inc
fwait
dec
idiv
adc
mov
dec
aad
dec
or
push
in
lea
loop
ljmp
and
adc
outsb
inc
cld
sub
jmp
pushl
xchg
sti
out
aas
repz
stc
push
mov
ja
movsl
sbb
push
push
js
in
or
mov
cmpsb
frstor
cmp
scas
mov
icebp
inc
adc
mov
dec
aaa
add
lods
mov
stc
inc
xchg
loop
subb
dec
icebp
hlt
push
pop
call
inc
or
sub
popa
int
nop
lahf
push
testl
mov
inc
cmpsl
cmc
cld
push
aaa
shr
mov
pop
adc
add
inc
mov
lods
rclb
mov
cmp
sub
pop
or
clc
push
or
add
pop
jbe
and
das
or
xor
jbe
inc
sub
aas
int3
xor
sarb
adc
cmp
cs
sbb
in
cmp
cs
xchg
jne
test
mov
sti
jns
sub
sbb
test
ja
mov
jno
cli
add
adc
cmp
nop
dec
adc
mov
push
push
cmp
call
sbb
rolb
add
dec
out
xor
jb
and
xor
mov
lods
clc
mov
lcall
bnd
mov
push
rcrl
push
push
fs
cli
mov
mov
xchg
sbb
push
lret
pmaxub
movsb
push
pop
xlat
pop
cmp
dec
push
aaa
jge
mov
xor
sub
lea
cld
arpl
pop
lods
ljmp
and
and
jb
lahf
ret
ss
call
bound
mov
cltd
cli
jb
in
mov
jno,pt
movsb
fcoms
call
pop
int
out
sub
test
stos
and
xlat
mov
rorb
insl
arpl
stos
jns
xchg
xchg
cmc
push
clc
xlat
inc
sub
js
adc
or
sbbl
lret
xor
fcomip
push
push
dec
inc
dec
aas
loopne
mov
and
mov
inc
out
out
lods
test
call
js
aas
lahf
ja
mov
jns
jb
cli
daa
xchg
xchg
mov
xor
jnp
sbb
cmp
mov
sbb
pop
push
pop
jg
cs
movsb
jno
loopne
mov
dec
test
push
xchg
ret
jo
sbb
add
jmp
addb
gs
xchg
dec
cwtl
jle
cmp
sub
xchg
cmc
les
test
sub
mov
jnp
fisttpll
mov
xchg
and
push
inc
mov
roll
push
imul
lret
sbbl
rolb
rol
and
push
add
sbbl
orb
fldenv
test
idivl
inc
xchg
xor
lock
sbb
mov
cmp
sahf
sub
push
cmp
fcomi
and
mov
inc
jno
or
jno
not
push
mov
mov
sbb
mov
scas
xchg
push
dec
push
pop
add
imul
shrl
sbbl
push
scas
add
dec
fmull
mov
jle
cmp
into
mov
push
insl
pusha
jge
inc
xchg
dec
fwait
sbb
sbb
pop
adc
fsubs
add
sbb
pushf
pop
loope
add
add
add
xchg
xchg
jg
sub
add
addr16
inc
fs
stos
fcomps
inc
std
adcb
cld
pop
scas
stos
mov
jmp
mov
inc
outsl
sbb
pop
insl
cmp
adc
mov
clc
pop
fwait
jb
add
mov
pop
jmp
popa
rolb
cli
sbb
in
ficoml
jge
hlt
sbb
inc
mov
and
loop
int
push
les
aas
icebp
cmp
sbbl
or
pop
mov
or
jo
popf
and
push
mov
sbb
lods
mul
mov
popa
mov
mov
pushf
rcrb
lds
lods
mov
iret
std
push
pusha
rorl
push
faddl
xchg
jg
imul
movsl
cmp
aad
mov
cmp
or
cltd
lods
pop
out
mov
pop
xchg
jae
stc
adc
sub
sub
out
aam
cwtl
push
cmp
sbb
call
insb
test
div
xchg
xor
sbb
cmpsb
xlat
xchg
outsl
dec
xchg
push
pop
sahf
and
mov
xor
imul
jno
mov
inc
mov
pop
ret
imul
shrb
or
fadds
cltd
mov
cs
clc
inc
xor
mov
add
dec
mov
mov
pop
loop
jnp
cli
mov
pop
out
fs
pusha
pop
or
ja
pop
pop
ret
lods
cmovs
lahf
add
pop
sub
inc
test
pop
jmp
adc
daa
or
and
shl
sub
inc
mov
lods
cmp
add
movsb
pop
iret
push
subb
mov
shll
dec
pusha
lock
stc
std
dec
add
cmpl
mov
das
ds
lret
push
int
xchg
scas
or
pusha
repz
inc
sahf
cwtl
sbb
push
jl
imul
adc
insl
mov
add
call
imul
sbb
sub
pop
stos
fadds
cmpl
inc
jge
jno
inc
lock
mov
mov
sbb
fadds
and
pop
pop
xchg
ljmp
fcompl
stos
fbld
shll
mov
push
xchg
data16
xor
loopne
cmp
adc
sti
or
out
mov
adc
push
sbb
jmp
mov
ds
fiaddl
sub
pop
dec
xchg
aam
lret
in
xchg
insl
cmc
push
fisubrs
cmpsb
ja
popf
adc
sbb
ja
pop
dec
pop
inc
out
sbb
flds
or
imul
push
xchg
sub
mov
jne
xchg
adc
mov
cwtl
mov
cmc
cmp
cmp
xor
mov
mov
cmpl
test
shr
in
out
jl
adc
pop
or
inc
mov
dec
sub
mov
das
or
dec
popf
stos
adc
inc
mov
scas
in
scas
push
fsubr
ja
dec
mov
ret
pop
out
ss
mov
ror
sub
push
xor
icebp
jnp
in
mov
push
rcrl
test
cmp
cmp
test
xchg
adc
inc
adc
mov
fnstenv
popa
sub
movsl
sub
outsb
int
fstl
imul
add
fildll
sarb
xchg
jg
incl
pop
cmc
int
insl
push
idiv
lea
outsb
jbe
clts
sub
xchg
pop
icebp
stc
filds
push
shlb
and
test
ja
loope
xchg
rorb
stc
insb
dec
call
push
and
jns
cmp
shlb
jo
fcomps
mov
cli
pop
jmp
mov
xchg
cltd
das
addb
in
cld
divb
sub
pop
out
pop
pop
outsl
mov
scas
movsl
adc
ja
mov
jle
mov
aam
scas
daa
mov
sub
xchg
mov
mov
roll
dec
push
in
mov
mov
cmp
fcmovnu
es
cwtl
or
mov
push
jg
lret
fnstsw
arpl
lock
cli
add
repnz
xchg
xchg
data16
mov
xlat
fnstsw
sub
gs
addr16
adc
repz
sub
or
mov
mov
lock
jne
or
add
jae
cmp
xchg
inc
lock
fdivs
xchg
inc
push
add
mov
xor
inc
movsb
scas
lcall
xor
cs
jo
rclb
and
out
sbb
sarl
shrb
rclb
cmp
sbb
xor
pop
push
loopne
xchg
xor
iret
or
fimuls
in
xor
xadd
cmp
test
or
test
adc
fwait
hlt
imul
aad
sbb
push
adc
pop
mov
push
fs
add
push
aas
xor
aad
divps
cmp
lods
dec
outsl
bound
xchg
das
scas
orl
adc
push
cmp
adc
sub
jns
loopne
cli
repnz
adc
repz
std
out
mov
enter
xchg
jl
inc
gs
cmp
adc
cli
xchg
lcall
inc
sbb
dec
jae
mov
sbb
mov
fdivrs
enter
scas
pop
lea
cltd
jo
fcom
stc
insb
in
push
adc
stos
push
push
cmp
ljmp
and
push
adc
push
sub
pusha
push
fs
cs
jg
daa
jp
cld
xchg
in
ljmp
arpl
hlt
xchg
mov
xchg
jecxz
add
and
adcl
decb
movlps
pop
out
xchg
aam
rol
jne
insb
dec
adc
mov
sbbb
imul
rcll
aad
cld
aam
fadds
pushf
jnp
lret
daa
or
sub
pop
xor
push
sbb
sub
xor
inc
push
push
xchg
xor
iret
dec
jbe
icebp
rol
ret
je
movsl
aad
inc
in
pusha
stc
outsb
jns
insb
les
das
loopne
mov
adc
test
push
lds
sub
xor
addb
in
mov
mov
dec
xchg
sbb
and
leave
fwait
inc
aas
loope
ret
lock
aam
xor
jge
rolw
xor
jecxz
sub
shrb
jo
mov
enter
mov
cli
lcall
pop
outsl
cmpb
ds
aam
lahf
jb
test
push
sbb
jecxz
fildl
fwait
insl
add
fdivs
mov
inc
mov
mov
pop
mov
mov
fstpt
dec
cmpsb
sahf
dec
test
or
adc
stos
adc
inc
cmpsb
inc
and
inc
xor
dec
ds
lods
and
inc
mov
xchg
cld
push
aad
xor
mov
scas
stos
mov
fcoml
dec
outsb
lods
mov
dec
daa
inc
call
roll
xchg
rcrl
scas
xor
aas
clc
frstor
movsl
shlb
push
addb
sbb
and
pop
pop
rol
enter
cmpb
divb
and
fs
adc
loopne
jno
push
fcmovnb
subb
aam
movl
or
cltd
mov
sub
mov
lods
icebp
push
in
mov
jecxz
sbb
mov
jecxz
and
inc
loop
xchg
lret
mov
pop
ds
sub
ret
xchg
xor
cwtl
sarb
dec
out
mov
movsl
ja
and
dec
or
jl
mov
pop
cmp
xor
and
cltd
add
lods
inc
push
pop
in
adc
mov
push
imul
cwtl
pop
in
fiaddl
xchg
sbb
pop
or
lds
mov
fsubs
fcompl
xchg
pushl
addl
das
sub
xor
test
repz
sbb
adc
jl
mov
ljmp
mov
loopne
sub
or
xchg
das
mov
cmc
jae
imul
xchg
sbb
and
xorb
shlb
mov
xchg
clc
test
out
jae
lds
sbb
addl
push
enter
test
orb
sahf
dec
lahf
push
cmp
pop
paddusw
or
aad
jle
push
int3
iret
insl
rorl
fs
ret
daa
out
es
mov
rol
mov
cmp
andl
adc
push
jg
aas
mov
shrl
cmp
mov
xlat
dec
cltd
mov
fdivl
repnz
cmpsb
addb
mov
roll
in
add
vpunpckhwd
add
mov
mov
adc
push
sarb
jecxz
lods
pop
xor
mov
stc
in
gs
inc
imulb
imull
or
jae
enter
mov
lcall
gs
push
fiaddl
inc
jnp
sub
sbb
mov
inc
dec
or
call
mov
mov
push
xchg
es
das
mov
outsl
clc
fs
dec
repz
push
loopne
arpl
push
negl
cmp
ds
xchg
push
test
sbb
jb
enter
fistps
insl
movsl
push
jecxz
dec
sbb
push
test
jb
js
std
ret
push
sbb
mov
pop
add
or
mov
setbe
sbb
out
adcl
push
dec
test
mov
in
out
pop
loopne
movsl
or
sbb
das
mov
lds
mov
xor
clc
mov
mov
int
mov
jp
xor
push
fst
jle
cmp
sbb
fadd
xchg
icebp
push
ja
stc
jmp
rclb
sbb
cmp
scas
push
shlb
inc
ss
adc
dec
mov
test
insl
pop
subl
jge
dec
inc
fprem
outsl
pop
pop
iret
push
mov
cmc
push
insl
lock
js
jp
xchg
movsl
cmp
arpl
cmp
mov
xchg
or
nop
clc
stc
xor
and
pusha
mov
lods
cli
bound
mov
push
push
daa
sbb
lds
test
push
and
mov
cmp
fwait
xor
lcall
fnstsw
xchg
repnz
push
popf
mov
lea
jo
mov
out
fisttpll
adcb
jmp
lcall
mov
je
xchg
inc
pop
insl
loope
jecxz
test
mov
pop
adc
inc
push
jmp
and
sub
push
aas
in
movsl
inc
cltd
cmp
xorl
nop
lea
ret
jb
add
jge
stos
mov
push
inc
jo
loope
pushl
xor
mov
jns
test
pusha
dec
pop
mov
mov
jb
xor
aaa
pushf
je
lahf
xchg
xor
dec
xchg
stc
loope
gs
and
mov
xor
dec
imul
fsubp
dec
adc
insl
inc
jp
pusha
test
je
inc
fwait
dec
push
push
mov
cmpsb
jno
inc
push
repnz
dec
movsb
mov
adc
out
push
mov
dec
pop
cmpsb
cmpsl
mov
or
mov
mov
fdivl
pop
add
lahf
mov
mov
jp
adc
sbb
or
xor
stos
inc
mov
ret
stc
inc
mulb
hlt
cmp
add
add
pop
xor
popa
sbb
jae
xor
lods
cmpsb
fcoml
dec
lea
sub
clc
mov
add
nop
pop
outsb
mov
inc
add
jo
mov
adc
mov
sbb
rclb
xor
mov
ret
std
faddp
aam
sbb
mov
scas
push
jecxz
jo
cli
test
sahf
ljmp
sbb
inc
pop
iret
or
cmpsb
xlat
pushf
mov
aas
ss
adcl
and
mov
pop
iret
jnp
dec
fistl
mov
mov
push
adc
xchg
add
insb
rolb
adc
shlb
pop
rcll
xchg
xchg
mov
adc
pop
add
cwtl
mov
addl
xchg
fadds
je
insb
insl
adc
xchg
or
sbb
cmp
mov
shr
out
pop
adc
pop
scas
add
sub
cmp
mov
and
push
lods
sbb
inc
xchg
popa
cli
je
mov
gs
lret
mov
fcmovnu
mov
jl
shll
sub
mov
ja
xchg
sub
pushl
ss
std
sub
pop
mov
sahf
fbstp
aam
cmpsl
jp
sahf
dec
lock
outsl
push
lods
xchg
and
pop
test
mov
out
repnz
mov
pop
addr16
cltd
sbb
decl
addr16
fnsave
repz
std
out
les
or
jg
push
or
cmp
rcll
in
fld
enter
xor
push
lret
js
xchg
jbe
ret
jmp
addl
mov
test
pop
xchg
push
ja
inc
pop
iret
cmp
jns
jnp
adc
xchg
mov
mov
jg
loopne
out
scas
iret
mov
aam
mull
pushf
shr
aaa
jb
push
rclb
pop
lcall
dec
sbb
add
mov
cwtl
mov
or
iret
lods
icebp
gs
fcoms
aam
adc
jl
repz
push
enter
push
sub
mov
mov
out
lret
aaa
jge
pop
out
movsb
out
mov
adc
aaa
jle
adc
inc
jge
sub
mov
push
sbb
rol
hlt
les
std
mov
pop
pop
mov
dec
scas
push
dec
adc
cmp
xor
jo
lock
add
push
xlat
push
divb
fldl
cmc
push
adc
jge
sbb
push
dec
jmp
lcall
out
in
mov
test
arpl
add
js
sbb
cltd
fwait
cmp
mov
les
clc
dec
cmp
or
ffreep
ror
dec
dec
inc
pop
std
inc
ja
dec
inc
je
push
aam
mov
or
mov
xchg
inc
repz
movsl
pop
je
cld
cmp
push
and
sub
push
sub
and
pop
in
pushl
or
aad
adc
or
fsubl
add
jno
gs
outsl
shll
inc
cwtl
insl
push
out
mov
cmp
rcl
popf
fsts
bound
or
pop
arpl
xor
ja
or
sysret
jmp
fnsave
jb
mov
icebp
popf
fmul
inc
sub
push
je
sahf
sti
jle
sub
push
cmp
sbb
scas
and
mov
pop
sub
mov
and
stos
cmp
push
andb
mull
or
insb
xchg
jle
push
stos
bound
into
outsl
cmp
jns
repz
in
pop
xchg
mov
test
ret
xor
insl
test
daa
out
out
inc
push
int
xchg
push
xor
test
mov
fnstcw
rorb
adc
out
test
fwait
sti
add
aam
je
cmpsb
cmp
mov
sti
insb
stos
xchg
mov
popf
out
mov
lahf
dec
mov
pop
or
loop
outsb
sbb
sub
out
fstl
xchg
test
rorb
dec
mov
into
or
mov
mov
and
inc
stos
or
xor
mov
adc
mov
jnp
xchg
push
or
js
rorl
xorb
call
in
jmp
call
push
xchg
inc
ss
cld
int3
xchg
or
jne
scas
ret
inc
outsl
mov
lock
xor
out
daa
bound
push
mov
mov
fbstp
push
and
adc
xlat
out
loopne
jge
mov
jl
push
pop
cmp
push
mov
out
out
into
shll
jmp
mov
mov
jno
roll
aam
inc
xor
mov
das
or
and
adc
shlb
pop
pusha
into
shlb
inc
mov
pop
test
mov
loope
mov
insl
out
into
add
addr16
test
jb
pop
mov
mov
int3
fiaddl
cmp
xor
mov
jb
sbb
ljmp
pop
cmp
ljmp
icebp
stos
xor
mov
sti
sbb
fsubr
mov
aam
dec
jno
dec
addr16
mov
adc
ljmp
pop
mov
mov
in
pop
lods
test
jp
cmp
rolb
fldenv
std
out
test
js
daa
mov
inc
lret
or
scas
and
add
enter
pop
cs
sub
mov
cmp
jmp
lods
adc
xlat
mov
cmp
inc
or
add
stos
adc
das
pop
pusha
cmpsb
sub
ss
sub
mov
stc
cmp
mov
rcrl
cmp
test
or
aas
movsl
add
dec
mov
loop
inc
inc
test
pmaxsw
inc
stos
pop
and
hlt
and
mov
repz
sti
notl
jb
outsb
clc
adc
sbb
lcall
and
push
pop
cmc
lds
sub
lock
push
inc
leave
dec
cmpl
movsb
push
js
push
add
mov
pop
add
lea
fmulp
out
sub
sti
call
sub
jle
or
xor
ja
divl
pop
or
inc
iret
or
movsb
ljmp
jl
pop
cmp
les
mov
adc
mov
aas
movsb
rcrl
test
pop
aad
scas
lock
mov
fldcw
jmp
and
dec
xchg
aas
int3
adc
mov
jnp
loop
ja
xchg
pushf
push
fldcw
iret
add
inc
std
and
push
outsl
mov
int3
pop
fdivr
pop
cmp
cmp
mov
lret
inc
jle
movhps
sub
repz
hlt
xchg
push
in
fucomip
xlat
test
and
sbb
sarb
in
fwait
add
push
movups
imul
inc
adcb
xor
cmp
jl
jge
sahf
mov
div
mov
sbb
push
call
aas
and
and
out
push
cmp
cmpxchg
mov
xchg
sbb
sbb
mov
stos
out
mov
test
mov
in
aad
add
fisubs
scas
fistpll
es
jg
dec
xor
xlat
dec
dec
ret
pop
fisubs
fdiv
shlb
dec
mov
rorb
pop
mov
cmpsb
sahf
outsb
xor
popa
xchg
pop
rcll
cmp
add
pop
mov
std
push
dec
push
xchg
dec
dec
adc
xor
mov
pop
xchg
cltd
hlt
xchg
cmp
sub
dec
jecxz
mov
fwait
add
sbb
xchg
ret
mov
daa
xorl
jnp
push
jg
ss
jmp
aam
push
enter
fcompl
call
xchg
sbb
ficomps
subb
outsl
push
hlt
lods
or
pop
shlb
cltd
and
fincstp
inc
ljmp
add
ss
ljmp
dec
je
aam
push
jo
sub
jmp
push
sbb
fsubrs
pusha
or
daa
aad
test
js
mov
pop
and
push
cmp
jo
push
jo
jns
cltd
inc
lea
test
or
cmp
test
hlt
lea
mov
mov
mov
dec
popa
mov
jecxz
add
fwait
mov
les
mov
mov
mov
sti
pop
stos
shrb
dec
inc
xor
push
xchg
mov
dec
icebp
sub
jp
fwait
mov
jne
loope
repnz
inc
repnz
xchg
je
jl
rolb
mov
xor
jae
xorps
pushf
pop
pop
mov
add
repz
pop
xor
sub
pop
push
lock
mov
shlb
nop
mov
in
push
xor
out
mov
rorb
dec
sbb
fwait
repz
cmc
push
shlb
push
push
xor
cltd
push
jb
packssdw
test
ret
dec
sbb
or
mov
push
cli
mov
mov
cmp
cltd
or
push
lret
imul
mov
ret
cld
and
jmp
cmpsl
out
mov
pop
mov
inc
lret
call
mov
jnp
push
inc
movl
jecxz
mov
mov
dec
sbb
lock
scas
jge
adcl
inc
jl
fwait
out
jb
push
adc
mov
and
jbe
into
sub
repz
push
lods
aam
int
adc
scas
scas
adc
repnz
mov
add
sub
xchg
cmp
xchg
jmp
movsb
test
adc
lods
xor
jl
testb
add
testb
adc
adc
mov
push
adc
cmp
and
xor
pushf
negb
jle
cmc
mov
andb
call
pushf
out
jle
add
inc
and
cs
dec
mov
mov
or
imul
je
sbb
mov
inc
sbb
movsb
jns
sub
mov
push
mov
mov
sbb
in
cmp
lcall
aaa
mov
movsl
dec
out
lret
test
add
enter
rorb
pushf
jae
mov
jp
test
faddl
pusha
pop
psubsb
ficompl
outsl
popl
jae
cmp
popf
mov
sbb
cmp
xchg
inc
lret
pop
arpl
js
jno
stos
pop
adc
notb
sub
inc
repnz
ds
aad
mov
xchg
mov
out
aas
adc
jmp
lock
clc
mov
subb
jle
popa
jp
mov
push
push
ljmp
insb
rolb
sarb
clc
cmp
stos
mov
mov
jle
loop
pusha
dec
movsb
xchg
xor
loope
adc
into
sahf
mov
adc
push
into
dec
mov
and
fisttpll
insl
lods
and
add
daa
scas
les
call
shr
jge
sti
sub
aam
mov
inc
and
imul
jno
push
fstpl
in
test
arpl
iret
enter
ljmp
pop
inc
cld
xchg
sub
shlb
stc
out
addr16
repz
int3
mov
into
jns
int
mov
pushf
pop
push
sbb
pop
adc
xchg
sub
and
int
dec
rorl
fsubl
mov
jle
dec
xchg
testl
pop
jmp
push
in
lods
test
shlw
lahf
cmpsb
test
hlt
sahf
sub
push
jle
push
repnz
pusha
xlat
jle
dec
and
insb
jge
imul
movsl
mov
icebp
sub
mov
xor
mov
push
and
mov
mov
mov
adc
push
ja
popa
stos
test
andb
es
adc
pop
in
js
jmp
in
inc
add
mov
iret
imul
xchg
fwait
cs
les
pop
lret
cmp
cmp
jnp
mov
insb
addr16
and
lahf
inc
stos
insl
js
rorb
mov
xchg
xor
mov
shl
lahf
xor
lds
lea
sub
arpl
lods
aaa
mov
dec
loope
mov
xchg
loopne
sub
push
in
cmpsl
sub
sbb
xchg
and
mov
loopne
mov
lods
adc
sahf
jbe
hlt
dec
mov
inc
enter
mov
jns
aaa
iret
adc
jns
mov
sbb
push
repnz
mov
popf
cmp
add
mov
movsl
mov
dec
cwtl
xchg
call
adc
bound
sbb
push
push
aam
clc
or
iret
rcll
mov
push
mov
inc
xchg
mov
dec
leave
jae
outsl
cmp
popf
scas
adc
andb
sbb
movsl
sarb
sbb
jl
push
add
dec
pop
mov
in
pop
sbb
jnp
shlb
and
cli
in
pop
dec
movsl
cmc
mov
lret
jge
lcall
push
pop
rcrl
es
test
xor
jno
incb
or
movsb
sahf
mov
insb
dec
sbb
sbb
inc
stos
pop
pushf
insb
xchg
inc
out
into
loop
xchg
movups
dec
daa
jno
outsb
mov
add
fnstcw
push
lds
arpl
pushf
lea
cmc
push
fs
popa
jecxz
and
xchg
out
mov
lahf
iret
aad
push
sarb
jecxz
cmp
aaa
or
lret
insl
add
mov
jns
lods
lea
mov
fcom
mov
popa
lods
mov
adc
icebp
lea
rorl
cld
xchg
pop
adc
and
imul
scas
push
aas
lret
std
stc
call
shll
insl
cmc
adc
int
cmp
aam
in
fidivrl
repnz
adc
push
push
f2xm1
fmulp
bound
insb
jp
push
inc
in
in
push
mov
add
inc
jmp
mov
mov
or
insb
inc
jno
cmp
out
subb
repnz
lahf
dec
gs
push
inc
jo
pop
ja
pop
inc
std
lods
xchg
push
pop
sub
out
dec
arpl
mov
add
xor
sbb
add
mov
pop
nop
leave
rclb
mov
jl
cmpsb
movsb
sbb
inc
inc
xlat
cs
es
fisubrl
sbb
fdivrp
movsl
sub
sub
add
xchg
jg
pop
or
fisttpl
and
fdivl
mov
scas
pop
cld
push
push
into
pusha
clc
inc
punpcklbw
mov
mov
mov
loop
jmp
mov
inc
pop
push
mov
repz
sub
pop
xlat
loopne
leave
inc
icebp
mov
sub
lds
mov
orb
cmp
mov
adc
inc
pop
cmp
test
incl
aam
mov
mov
testl
mov
mov
adc
and
mov
sbb
sar
ds
pushf
inc
into
ljmp
repz
outsb
aaa
in
or
clc
jb
ret
repnz
lret
dec
dec
test
in
pop
fwait
cmp
add
loop
addr16
dec
fists
jg
and
push
pop
cli
pop
fnstcw
pop
jno
mov
mov
gs
inc
sbb
iret
pushf
mov
xor
or
inc
roll
push
sub
inc
adc
stc
fwait
cmp
cli
mov
sarb
cmc
and
pushl
sti
in
nop
mov
mov
ret
cmpsl
xlat
mov
mov
rorl
sub
dec
aas
xchg
idivl
adc
sub
push
and
mov
mov
mov
aad
mov
inc
adc
in
mov
shll
das
pusha
xchg
shrb
mov
jecxz
ljmp
sub
fs
sbb
fstpt
add
push
lcall
push
scas
inc
push
jmp
mov
rorb
pushf
repnz
mov
aaa
mov
leave
pop
rclb
es
or
daa
shll
jne
adc
pushf
xchg
mov
shr
dec
xchg
mov
fdivl
in
jns
push
testl
les
js
int3
pop
sbb
jns
cmc
push
jge
pusha
scas
cmp
test
dec
xor
inc
push
mov
dec
insb
mov
pop
push
shr
jecxz
into
xchg
push
pop
sub
ret
ret
xor
jge
ljmp
outsb
movl
cmp
pop
mov
clc
lret
xor
push
or
xor
xchg
mov
leave
int
inc
jmp
fwait
out
in
jne
shrl
repnz
sub
iret
xchg
sub
js
jp
mov
mov
filds
fucomip
les
sbb
leave
pop
push
pop
add
mov
addb
fwait
add
loope
scas
mov
pusha
push
push
movb
into
out
jmp
pop
inc
sbb
jecxz
dec
mov
out
add
pop
out
stc
sti
imul
dec
pop
inc
add
stos
out
rcr
lret
ret
mov
lret
fisubs
add
scas
mov
pop
xor
jno
lods
mov
mul
and
ret
int
add
fdivl
test
and
iret
dec
cs
iret
orb
push
shl
pop
shlb
sbb
bound
lods
push
lods
fwait
dec
sti
or
mov
mov
add
jns
pusha
jns
fwait
mov
mov
or
pushfw
dec
repz
test
sub
sub
adc
mov
jae
mov
sarb
mov
fistpll
mov
inc
mov
or
lods
dec
scas
xchg
dec
adc
xchg
je
mov
lods
lahf
call
and
and
popf
cmp
jns
in
xchg
lods
adc
idivb
iret
stc
mov
sub
jnp
mov
inc
and
mov
jnp
out
jno
xor
or
mov
nop
test
in
clc
rorl
or
ja
out
sarl
mov
stos
adc
dec
mov
inc
je
add
pop
cld
mov
add
scas
mov
gs
xchg
fwait
mov
cltd
jne
mov
sbb
test
aam
pop
fcoms
push
lods
pushf
push
jo
lret
leave
daa
mov
rolb
push
xor
mov
jle
cmc
iret
and
fwait
adc
inc
mov
stc
lahf
and
sbb
imul
inc
mov
imul
dec
nop
and
testl
cmpsb
lret
pop
push
bswap
cmp
scas
daa
shlb
push
test
insb
adc
sub
sbb
lock
and
and
cmp
cmp
xor
push
xchg
pop
lcall
sbb
push
stc
aam
and
daa
sub
jnp
add
imul
fisubrs
test
pop
xchg
lock
mov
out
in
sbb
push
xor
dec
scas
adc
movsl
test
add
xchg
pusha
loopne
pop
cs
rorb
sub
rorb
push
out
int
sbb
jb
sbb
fbstp
pop
sahf
mov
pop
into
jl
fs
test
js
test
adc
int
sbb
ficomps
rcr
mov
addr16
stc
mov
std
ja
jo
nop
jae
stos
pop
xor
sbb
xchg
testb
js
faddl
jnp
in
dec
sbbl
push
pop
out
and
jmp
push
or
daa
bound
out
or
in
jne
test
mov
sub
in
inc
cmp
ret
jecxz
in
test
and
stos
loop
pop
and
rorl
mov
int
sub
push
scas
outsb
adc
sub
adc
in
stc
scas
mov
movsb
mov
sbb
dec
xor
hlt
fimull
or
imul
clc
sbb
adc
cmpsl
inc
sbb
cmp
add
pushf
xchg
imul
test
sbb
sbb
cltd
add
xchg
in
sub
cmpsb
and
fstps
add
jecxz
bnd
xor
adc
xor
dec
iret
mov
aaa
aam
pushfw
aas
lods
pop
cmp
sbb
cld
insb
enter
imul
mov
in
mov
and
dec
dec
cmpl
mov
adc
pop
movsl
popa
pop
shll
rolb
push
sbb
adc
cld
pop
pop
loop
int3
sti
pop
sbb
nop
into
cmp
cmp
stc
lcall
inc
or
jmp
test
push
ret
xor
popa
mov
cmpb
and
addl
daa
sbb
mov
xlat
daa
push
jne
adc
les
xchg
in
push
xorl
dec
mov
lods
adc
filds
inc
ror
push
movsb
mov
neg
les
push
xchg
hlt
push
pop
sub
dec
xchg
adc
dec
sahf
adc
lds
lret
js
or
aam
in
sarb
or
cld
mov
mov
jl
xchg
xchg
leave
push
lods
mov
jge
shlb
sbb
rcrl
test
das
mov
data16
mov
out
sahf
add
cmp
push
enter
xchg
and
jo
lea
daa
inc
int3
ret
pop
mov
jmp
adc
cmpl
aaa
jnp
jnp
icebp
loop
or
mov
or
xchg
mov
pop
adc
bound
mov
rorb
jo
movsb
mov
notl
imul
jl
cld
sbb
dec
cs
pusha
sti
pushf
loopne
lds
fs
dec
mov
jge
stos
add
nop
fwait
dec
mov
or
in
mov
mov
jecxz
enter
sbb
sub
pop
xchg
sti
push
out
inc
scas
daa
cmp
push
aaa
jno
repnz
stc
ret
pop
pop
pusha
movsl
lret
push
add
test
pop
in
xchg
mov
or
ss
dec
idivb
dec
jbe
pusha
sub
mov
stos
inc
adc
fstps
lods
sub
mov
inc
test
cmpsb
fwait
sub
sub
fsubl
and
cwtl
mov
xchg
sti
aam
jmp
leave
add
jns
cmpsb
mov
jns
inc
lods
rorb
adc
js
xor
pop
pop
inc
ja,pt
mov
inc
xor
add
insb
out
push
dec
add
ret
dec
sub
dec
jb
or
sarb
call
add
dec
sub
dec
sti
push
aaa
fs
repz
adc
js
adcb
or
lods
scas
sub
pusha
js
test
in
push
inc
and
jmp
leave
hlt
xchg
jl
dec
adc
jno
push
dec
movzwl
shrl
xor
adc
scas
dec
push
loopne
jp
add
mov
icebp
pop
push
inc
push
sub
test
rcrb
sbb
negl
jg
fldt
fists
lods
sub
in
sbb
stos
shlb
mov
jge
cmc
fldl
arpl
push
les
daa
and
mov
in
jge
cmp
inc
cmp
sbbb
scas
mov
mov
xchg
push
mov
cmp
or
lea
cmp
repnz
out
out
sub
mov
sub
inc
jl
sarb
xchg
mov
aaa
shlb
xorb
cltd
pusha
orb
xchg
lock
add
sub
lock
loop
adc
dec
inc
fbstp
sub
inc
and
mov
xor
sbb
push
aad
add
xor
nop
sub
jmp
mov
cli
xor
jnp
xchg
push
pop
jnp
movsb
sbb
dec
sub
fisttpl
dec
mov
sti
insb
in
mov
lea
out
cs
int
dec
sbb
mov
adc
inc
dec
xchg
pop
pop
mull
scas
jge
inc
loop
in
clc
or
les
xchg
mov
dec
nop
addb
vcvtps2pd
dec
ret
pop
jle
mov
inc
fistl
cmp
icebp
fldcw
mov
mov
test
ss
push
cwtl
mov
insb
or
mov
jecxz
test
loopne
xchg
push
cld
dec
popf
je
sbb
mov
out
mov
mov
addr16
mov
mov
pop
cmp
add
jbe
fld
js
nop
cmp
dec
jne
cmc
sbb
lea
divb
cmc
fs
xchg
or
jp
sahf
mov
jo
iret
sahf
pop
inc
mov
mov
pop
cmp
hlt
jl
dec
cmp
leave
sbb
leave
mov
pop
push
adc
ljmp
xchg
xchg
jecxz,pn
xchg
aam
in
hlt
in
sbb
iret
rol
jb
repz
jmp
fbld
and
xchg
mov
push
push
pop
jp
aas
movsl
rolb
adc
sbb
xlat
sbb
or
sub
insl
test
test
lods
out
dec
and
movsl
inc
stc
and
scas
loopne
pop
mov
dec
push
mov
shrb
inc
mov
pop
adc
lcall
arpl
fcomp
es
xlat
negl
jge
das
pop
in
pop
jle
and
jb
stc
xchg
fld
mov
out
andb
fs
fiaddl
insl
out
mov
mov
add
mov
enter
lods
or
mov
int
dec
mov
decl
pop
mov
clc
cmp
mov
push
addr16
test
sbb
shll
popa
jno
sub
adc
and
dec
cwtl
pop
data16
pop
mov
cmpsl
jnp
mov
in
pop
test
xlat
cmp
insl
mov
or
shlb
push
in
mov
lret
add
test
inc
add
test
leave
xor
subb
and
xlat
jge
js
push
xchg
cmp
rorb
les
fwait
aam
stos
mov
in
pop
stos
sbb
mov
bnd
arpl
iret
push
add
or
pop
ss
imul
add
and
xor
rep
scas
mov
pushw
adc
movsb
aas
insb
mov
aad
jne
stos
jle
push
and
xchg
sub
adc
or
mov
outsb
and
pop
mov
jne
push
dec
fadds
sbb
outsl
test
enter
mov
imul
ret
sbb
cwtl
sbb
adc
dec
xchg
or
jae
xchg
push
fcompl
loop
xor
jne
dec
xor
lret
clc
ljmp
mov
sbb
int
cmpl
xor
pop
imull
xchg
push
pop
je
xchg
sbb
mov
dec
pushl
mov
test
jae
icebp
insl
repz
mov
aas
movsl
enter
movsl
jnp
mov
and
mov
daa
mov
cltd
movsb
push
or
cmpsb
mov
js
push
push
mov
xchg
cmp
push
out
ds
out
scas
popf
push
xchg
mov
sahf
loop
sbb
cmpb
icebp
rolb
cld
movb
mov
add
pusha
outsb
sub
pop
xor
enter
mov
push
in
das
sub
xchg
out
mov
lahf
repnz
int
cld
ja
xor
or
or
cmp
imul
jb
les
call
and
call
xlat
xchg
jmp
xchg
addl
test
push
lahf
jg
add
pop
outsl
and
xchg
js
ljmp
add
test
mov
jnp
pop
not
or
adc
mov
dec
cmp
or
jmp
out
aas
adc
sub
iret
mov
int3
push
push
pop
stos
push
jmp
test
push
mov
and
dec
dec
in
js
arpl
fiadds
lock
mov
push
jl
cmpl
xchg
mov
cwtl
fsubrs
fdivp
push
inc
push
sarb
iret
sub
loopne
pop
ret
in
sbb
cmp
push
test
andb
loop
loop
icebp
js
inc
and
fnstsw
or
loop
flds
cmp
in
or
lcall
push
lock
mov
inc
leave
outsl
enter
out
out
sub
sub
adc
fmulp
rorb
lret
jb
mov
enter
xchg
cmc
push
test
cmp
add
mov
insl
mov
fisttps
dec
shlb
sahf
filds
pop
xor
cmp
insb
push
aas
push
popa
jp
jbe
roll
daa
imul
int3
push
sbb
push
mov
fs
enter
stos
or
xor
mov
jno
jecxz
jne
int
cmpsl
and
stc
mov
add
aad
push
inc
insl
adc
push
mov
mov
push
sub
mov
cltd
sti
movsl
movsl
jl
out
or
je
cmp
jmp
lcall
and
testl
adcl
outsl
cmp
mov
push
je
jmp
mov
shlb
jecxz
shrb
jno
loopne
jle
mov
test
xchg
fmull
mov
jg
cmpsl
data16
jle
pop
in
adc
cmp
push
in
dec
adc
or
pushf
aam
jecxz
or
cmc
nop
testl
mov
pop
imul
adcb
pop
sub
mov
xchg
jno
addl
mov
rcl
mov
in
mov
cmp
aaa
out
insb
mov
jl
jne
adc
mov
add
int3
inc
loop
in
or
loope
xor
fisttpll
call
or
leave
cmpsl
ja
lds
int3
lods
jle
shlb
xor
mov
cmpsl
insl
push
jecxz
test
jae
into
add
arpl
cmp
cmp
jle
sbb
ss
aam
cmp
cs
popf
sahf
shlb
jl
sub
add
jnp
jb
addb
loope
mov
lret
sahf
into
inc
pop
ficomps
cs
xchg
xchg
mov
xor
rcr
and
sbb
sbb
aad
lret
aam
cld
std
xchg
scas
sbb
jmp
xor
cmpsb
xor
dec
jmp
cmpsb
nop
lcall
test
inc
shrb
inc
dec
stos
mov
fldl
jl
and
and
jno
xor
xchg
mov
jmp
subl
dec
dec
popf
les
pusha
sub
inc
mov
xchg
mov
inc
jae
lock
xchg
inc
pop
mov
icebp
adc
fsubrs
ja
push
repz
stos
pop
cltd
jl
adcl
mov
jmp
fwait
ret
in
cltd
xchg
cwtl
mov
stc
sub
aas
dec
mov
jle
cs
int
lock
dec
jns
cld
jg
xlat
sub
fcomip
mov
cmp
push
dec
movsb
aam
push
inc
sbb
xor
sub
loopne
loopne
cld
push
dec
dec
and
xor
pop
arpl
or
push
cmp
adc
mov
jmp
pop
mov
xchg
cmp
push
les
or
arpl
mov
sbb
xor
hlt
pop
adcb
mov
and
andl
movsl
pusha
jb
add
push
je
loopne
add
jo
mov
in
clc
mov
mov
loope
lcall
and
popl
and
lret
dec
jecxz
xchg
faddl
aas
test
fcmovnu
mov
or
fdivrs
loope
inc
fsubrs
pop
mov
punpckldq
int
adc
stos
jmp
popf
jg
xchg
fwait
inc
leave
test
inc
loope
lods
cli
cmp
aaa
add
dec
fstpt
pushf
jns
adc
sbb
bound
adcl
scas
inc
movsl
daa
mov
gs
pop
out
lahf
leave
adc
pop
aaa
pop
and
mov
ret
jmp
jp
out
stc
inc
push
inc
cwtl
adc
lock
mov
nop
shl
mov
jg
pop
jle
push
iret
fst
dec
xor
xor
jmp
fisubrs
stos
cmp
je
leave
ljmp
dec
dec
fwait
jmp
mov
sbb
mov
adc
cs
divl
in
mov
stc
xchg
ret
mov
xchg
fwait
outsb
lea
bound
mov
into
bound
lret
jp
movsb
in
sub
adc
popl
sti
jno
adcl
xchg
add
cs
inc
mov
xor
mov
cmp
mov
mov
cmp
fiadds
or
ret
pop
into
iret
jmp
test
push
pop
stc
scas
push
and
cmp
leave
fimuls
popf
popl
ja
loope
jle
mov
rorb
xchg
testb
jns
pop
sbb
sbb
loop
adc
out
sub
jp
mov
pop
stos
jae
fbld
cmpsb
xchg
in
out
imul
xorb
cmp
inc
mov
sti
mov
and
and
hlt
adc
fs
cmp
aam
push
push
xlat
fiaddl
sub
xchg
rcrb
lcall
mov
aad
jae
sbb
inc
xor
push
jl
aad
mov
xchg
daa
addr16
mov
sti
inc
pop
in
cwtl
cmp
rcrl
shl
jb
pop
cld
mov
dec
push
das
push
test
sub
adc
lret
pop
push
ds
push
outsl
sbb
fwait
xchg
mov
insb
daa
loop
jge
jmp
push
loope
leave
pop
lcall
fwait
mov
xchg
jmp
aaa
cwtl
addl
adc
mov
cmpsl
push
dec
rolb
addr16
and
xchg
icebp
imul
dec
int3
sub
mov
outsl
cmc
into
adcl
cmp
cmp
sbb
xchg
mov
jb
shlb
mov
mov
jg
stc
std
cltd
movsl
lret
outsl
outsb
jae
xor
inc
cmp
adcl
xor
mov
repnz
bound
sbb
adc
ljmp
outsb
fisttps
jg
add
mov
test
rcr
fwait
insb
gs
neg
test
dec
inc
cltd
add
mov
xor
out
xor
lods
add
cmc
test
or
bound
pop
mov
sbb
ljmp
pop
push
xchg
adcb
cmp
sub
cli
stos
jno
jbe
push
or
mov
xchg
fs
addr16
add
int
pop
pop
dec
mov
jl
mov
imul
cli
add
pop
pop
sbb
imul
xchg
fwait
iret
jge
push
push
fwait
mov
mov
fimuls
inc
std
movb
push
addb
pushl
out
leave
push
popf
xor
adc
add
adc
je
cld
lcall
mov
sbb
test
adc
test
or
add
xchg
mov
jae
mov
loop
fiadds
dec
xor
sbb
stos
jae
repz
cmp
repnz
mov
cmpsl
shll
jge
mov
inc
aam
fs
and
cmp
stc
mov
jp
cmpsl
push
fwait
adc
push
enter
or
jle
inc
incl
xor
add
jbe,pn
mov
scas
cwtl
sti
xor
xchg
rclb
adcl
fs
adc
sti
aam
mov
imul
mov
cltd
jnp
and
pop
jp
cwtl
add
inc
stc
iret
out
inc
sbb
outsl
nop
ja
add
sub
aad
mov
sub
inc
adc
fcoms
mov
mov
mov
or
mov
lret
push
ja
push
dec
sbb
cli
push
or
fsubs
or
into
mov
or
test
xor
test
jle
cli
call
scas
loopne
cli
push
rcrl
jle
ja
sub
pushf
inc
sbb
jg
jne
inc
lahf
cwtl
pop
mov
scas
inc
mov
lock
pop
clc
cmp
mov
cltd
dec
xor
mov
jnp
fldenv
lea
es
cmp
add
xchg
sub
sbb
xchg
adc
xlat
sub
in
mov
pop
cmpsl
dec
stc
shl
cld
in
cmp
and
cmp
iret
and
jmp
lea
fwait
push
jecxz
addl
xchg
dec
push
lret
mov
scas
jmp
jl
into
loope
popa
sbb
jno
out
pop
mov
popa
push
mov
es
sbb
or
mov
ud2
cmc
mov
jge
dec
fidivrl
dec
mov
lret
mov
in
dec
jne
arpl
push
xchg
adc
xchg
xchg
mov
fs
or
inc
adc
adc
stos
cmp
inc
lcall
push
fadd
inc
adc
aaa
enter
inc
cmp
xchg
das
sbb
xchg
jo
mov
inc
dec
shlb
addl
inc
xor
loop
arpl
mov
push
stos
jae
mov
testb
mov
cmp
pop
ret
cmp
sub
orb
inc
jnp
cmp
jb
push
gs
leave
fcoml
arpl
add
mov
cltd
mov
scas
movsl
mov
jnp
lods
jmp
pop
int
aad
testl
inc
mov
mov
pop
sub
cld
and
mov
mov
mov
shlb
fsts
mov
ret
adc
jb
aaa
data16
pop
mov
mov
out
pop
loopne
cs
out
shll
or
jge
ja
scas
pop
push
rol
push
or
ljmp
push
xor
jo
xchg
sbb
mov
fs
cli
mov
scas
jle
xor
out
xchg
ss
sbb
pop
in
cld
pop
xorl
in
movsb
sar
or
jle
adc
daa
sub
insb
and
pop
scas
mov
iret
insb
test
mov
fldl
inc
lods
pop
adc
inc
lock
aam
adc
pop
pop
ja
mov
xchg
out
cmpsb
cmc
lea
stc
and
mov
cmpsb
mov
mov
outsl
push
int
std
or
pop
mov
xchg
sub
and
push
cmp
pushf
jl
xchg
pop
adc
dec
add
data16
std
mov
mov
jo
loop
aam
scas
cmc
sbb
cmpl
movsl
aaa
insb
jo
push
xchg
imul
cmp
adc
mov
mov
ret
sub
lods
cmp
push
insb
daa
pop
sbb
dec
das
cmpsl
pop
cmp
xlat
outsb
aas
jno
sbb
das
sbbl
sub
test
call
or
setbe
push
jno
xor
jnp
cmp
add
lret
xchg
xchg
arpl
addl
rolb
loope
jne
ds
shll
je
fidivrs
stc
mov
mov
fs
add
jg
dec
lcall
iret
dec
jns
and
dec
out
sub
dec
lods
les
stos
jg
dec
jb
ds
cmp
cli
fiadds
xchg
mov
jae
mov
push
test
pop
je
jl
ja
stos
into
mov
fucomip
mov
mov
mov
mov
insl
call
out
jmp
jns
pop
and
pop
cmp
jae
je
push
cltd
push
dec
fistps
adc
lret
mov
fistps
loope
mov
cmp
dec
pop
fdiv
dec
jo
dec
add
jo
nop
in
push
rolb
cmp
sub
and
jecxz
out
and
add
ljmp
dec
lcall
dec
add
pop
addr16
and
mov
mov
xchg
mov
dec
pop
jg
ret
repnz
jl
add
mov
jp
inc
push
cmp
out
imul
mov
fadds
and
jne
adc
sahf
mov
mov
cmc
les
roll
sbb
push
sub
and
sbb
xor
xchg
bnd
cmp
movsl
pop
jmp
and
jno
add
ljmp
icebp
xor
daa
outsb
jbe
pop
sahf
movsb
insl
push
or
jl
xchg
lcall
call
movsb
or
rcl
jle
clc
mov
fs
and
jg
fstpl
cwtl
ret
push
test
push
hlt
and
cmp
add
movsl
and
mov
lds
inc
jb
enter
and
sbb
push
inc
idivb
lds
add
mov
xchg
push
addl
inc
enter
mov
xchg
ret
es
fistpll
xchg
or
jge
out
daa
sbbb
and
aam
sti
adc
lret
mov
dec
xchg
sbb
jb
andl
mov
xor
jnp
inc
lock
sub
xor
jne
jns
stos
int3
outsb
sub
cwtl
push
mov
inc
shl
xchg
std
inc
std
stos
cmp
push
shll
sub
cld
shl
dec
out
sti
xchg
xchg
cld
mov
lahf
mov
cmp
mov
mov
or
enter
push
pushf
insl
std
inc
sbb
pop
mov
out
mov
adc
inc
rolb
adc
int3
sbb
xor
rorl
jae
mov
lret
data16
mov
lcall
addr16
shll
lahf
lds
cmpsb
sub
inc
out
imul
or
mov
mov
sarl
movsl
hlt
mov
subl
fstp
xchg
mov
cltd
adc
out
jo
dec
xchg
icebp
das
mov
cmc
ds
push
int3
add
insb
mov
add
test
pop
dec
jo
add
das
movsl
cmpb
lret
mov
pop
mov
push
push
jmp
ss
clc
mov
inc
int
mov
imul
mov
mov
or
mov
and
out
into
inc
jbe
in
sbb
mov
mov
daa
or
andl
je
or
jle
imul
sbb
cmp
cmpsl
cltd
inc
cmp
mov
jge
jae
pop
rcr
xchg
xor
sbb
push
sahf
sbb
je
ljmp
aaa
push
fistps
or
ret
bound
fisubl
sbb
push
clc
jl
sti
scas
adc
lods
int
xchg
loop
xchg
fsubs
lahf
fildll
jae
push
mov
pop
fdivrl
add
int
sub
mov
cs
mov
cmp
mov
outsl
fdivl
ret
push
jecxz
add
lret
jno
subl
call
imul
mov
fs
cmc
loope
mov
xchg
sbb
std
sbb
dec
xor
incb
lcall
and
and
and
xchg
cmpsl
mov
cmp
icebp
lods
sbb
add
rcrl
in
pop
std
pop
mov
test
inc
mov
pop
fwait
cmp
xchg
and
imul
lahf
sahf
dec
jbe
ds
stos
sub
pop
mov
arpl
push
xchg
imul
nop
sbb
push
notl
movsl
lret
sub
jb
push
pop
xor
sbb
push
mov
mov
adc
cltd
mov
xchg
pop
jne
in
xlat
scas
jbe
cmp
mov
jno
sbb
sbb
insl
add
fisubl
popa
mov
cmp
add
scas
jne
out
and
in
or
aas
inc
jp
jnp
or
or
scas
aad
arpl
popf
pop
sbb
push
sbb
cmp
iret
mov
loope
add
mov
call
or
movsl
bound
stc
adc
addb
pop
ja
push
push
push
nop
jne
jns
jp
cld
mov
xchg
je
sahf
sahf
push
push
cmpsl
xchg
enter
cmpsl
mov
icebp
cmpl
or
sbb
cs
xor
popf
lret
mov
push
sbb
jp
jae
lret
add
das
test
in
mov
mov
dec
xor
icebp
jae
iret
andl
inc
lods
arpl
icebp
mov
inc
ret
dec
sub
jp
sub
mov
loop
pop
pop
fs
xchg
adc
sbb
sub
pop
adc
sti
dec
scas
cli
mov
push
mov
lahf
dec
pop
push
dec
adc
fildl
add
ljmp
out
mov
mov
mov
push
outsb
push
icebp
push
sub
pop
jnp
in
pop
pop
ljmp
shr
in
sbb
sbb
mov
ja
or
push
pop
neg
andb
call
icebp
cmpsl
jp
les
push
repnz
pop
jl
mov
mov
rcll
inc
out
daa
or
cmp
jp
mov
xchg
fisubrs
jae
sub
ret
xchg
lahf
je
mov
adc
dec
fsubrl
loop
push
lret
repnz
nop
mov
jg
inc
cmpsl
lock
out
fists
enter
cmp
enter
add
pop
negl
mov
xchg
insl
add
scas
loopne
xor
nop
xchg
sbb
xchg
cmp
dec
or
aad
popf
xchg
and
repz
shlb
mov
loop
das
cmp
lcall
sbb
jl
xchg
pop
and
in
stc
dec
icebp
stos
push
jl
mov
insb
mov
jne
xchg
test
mov
scas
cmpl
adc
in
shrl
xchg
jnp
pop
or
jp
fisubrs
out
test
jl
and
mov
loopne
cmpb
mov
lea
mov
movsb
shrb
testb
in
add
or
shrl
mov
push
push
out
jl
mov
outsb
testl
or
scas
lcall
mov
lcall
inc
sbb
js
push
dec
leave
popf
mov
and
stc
cmp
aas
and
mov
jns
push
insl
push
or
in
and
inc
adc
lods
and
jb
adc
mov
outsl
cwtl
cld
xor
imul
cmc
xchg
inc
mov
and
sbb
scas
test
je
push
rol
loopne
test
hlt
test
xor
out
jns
fmull
fistpl
push
pop
jnp
ror
aas
enter
cmp
imul
shlb
sbb
cmp
sub
lahf
add
fdivrs
xor
bound
in
ds
ret
xor
sub
ret
xlat
inc
mov
jmp
mov
push
add
jb
loopne
pop
cwtl
pop
iret
adc
outsl
or
in
push
cmp
shlb
hlt
hlt
sub
mov
inc
ljmp
xlat
je
and
and
filds
xorb
and
loope
enter
or
push
pushf
push
in
sub
xchg
push
icebp
insb
andl
mov
push
sbb
xchg
cmp
pop
pop
push
lods
fdivrs
inc
nop
xchg
mov
dec
cwtl
ds
jb
mov
mov
add
in
outsb
les
in
xchg
sub
out
aam
inc
mov
dec
xor
or
insb
fidivs
mov
mov
fildl
stc
mov
xchg
rcrl
lds
mov
xor
loopne
jge
xor
addr16
es
sbb
insl
inc
popf
outsb
cmp
push
loopne
pop
dec
pop
mov
insl
aaa
mov
jge
cmp
dec
adc
scas
pmaddwd
popa
out
cld
or
movsb
in
outsl
mov
or
and
sub
xor
mov
lock
enter
fistpl
jmp
mov
jp
push
decb
and
inc
mov
call
dec
adc
xor
or
push
sbb
jl
pop
pop
or
sbb
jecxz
push
popa
leave
push
out
lret
cmp
in
inc
repnz
pop
pop
data16
xchg
cmpsl
jo
pop
int3
dec
ret
int
xor
sub
cli
cmpl
mov
mov
ds
pop
or
nop
xor
gs
mov
adc
sbbl
sahf
icebp
xlat
iret
dec
imul
inc
and
lock
out
pop
or
imul
pop
in
popf
mov
jecxz
mov
ss
lcall
in
sarb
test
int
inc
rorl
movsl
adc
ds
mov
push
orl
jbe
xor
cwtl
adc
sub
xchg
sub
sub
sahf
sbb
xchg
pusha
ret
fildll
jnp
out
ss
enter
push
inc
sub
into
sbb
cs
sub
dec
test
mov
mov
testl
inc
sub
dec
out
push
pop
adc
sbb
sbb
in
into
add
and
imul
lret
sub
int
in
mov
jb
js
dec
int3
inc
jl
jne
sbb
mov
push
out
cmp
mov
lret
loope
xor
adc
push
test
jbe
incb
mov
cmp
jg
inc
hlt
add
xor
and
imul
dec
or
lahf
push
mov
mov
inc
stos
cmp
test
cld
xchg
add
inc
adc
and
xchg
push
jge
add
daa
repnz
pop
mov
ret
cmp
shl
imul
out
fiadds
lock
js
dec
cmp
jno
std
into
imul
dec
mov
and
dec
or
pop
mov
dec
cwtl
mov
jge
xor
pop
popf
cmpsb
lcall
lea
xlat
add
test
push
sub
les
rolb
fcmovnbe
push
mov
in
pop
sub
test
cltd
out
dec
mov
rcr
negl
shrl
add
pop
out
fcmovne
cmp
subb
cvtps2pd
pop
mov
push
jmp
and
mov
stc
jne
test
xlat
xor
xor
lahf
loopne
arpl
scas
cld
sti
inc
aad
mov
repz
mov
inc
jbe
mov
pop
xchg
frstor
in
insb
in
repz
dec
mov
adc
in
adc
mov
flds
into
shrl
fsub
mov
aam
and
js
clc
ret
idivb
or
mov
sbb
stos
dec
or
sbb
mov
sbb
sub
mov
pop
andb
mov
cwtl
das
sahf
hlt
mov
cmpsb
test
push
mov
mov
dec
jmp
nop
cs
mov
pop
pop
out
sbb
stc
push
xor
jns
sub
jo
dec
and
jle
rcl
leave
cmp
cltd
adc
push
loop
shlb
enter
cmp
fbstp
call
loope
lods
push
push
sti
testl
shrb
jo
pushf
mov
jmp
ds
mov
sahf
mov
shrl
icebp
in
mov
cld
fnstsw
ret
inc
call
dec
in
aam
or
push
ret
inc
fnstsw
rclb
mov
cmovle
and
or
fistl
or
fsubrs
loope
lods
pop
pop
xor
xor
xor
push
scas
lods
jnp
scas
enter
pushf
hlt
repnz
stc
outsl
or
dec
or
into
stos
xchg
mov
push
or
inc
xor
mov
xor
ljmp
jno
test
xor
or
push
cmp
mov
cmp
inc
fisubl
loopne
test
cli
call
xchg
xchg
imul
mov
imull
test
jle
in
fistpl
xor
sarb
push
mov
mov
mov
push
push
pushf
and
test
jne
lods
sub
cmp
dec
or
inc
hlt
push
gs
mov
push
or
push
fidivrl
sub
jns
test
int3
jae
dec
dec
mov
fwait
inc
dec
shll
dec
leave
sbb
adcl
dec
and
enter
mov
ds
ja
add
jle
ror
xchg
dec
sti
test
add
push
jmp
sub
sti
or
cmp
pop
sbb
movsl
stos
mov
outsb
cmpsl
outsb
jbe
jb
inc
stc
loope
mov
jg
sub
repz
inc
mov
leave
pop
bound
mov
outsb
nop
out
in
xchg
jle
xchg
inc
jbe
test
push
sub
cmpsb
jno
lret
fiaddl
fcmovb
push
push
push
ss
xlat
jp
or
aad
push
xchg
insl
xchg
push
dec
xlat
ja
inc
jl
or
pop
push
nop
shrl
out
in
sets
jge
pusha
and
fisttpl
fstp
pushf
mov
xchg
mov
mov
mov
cltd
or
aaa
lods
into
and
cltd
push
jbe
pop
dec
pusha
pop
cmpsl
test
or
int3
mov
loop
jmp
mov
aaa
xchg
lock
xchg
jl
xchg
mov
mov
jp
pop
lret
cmpb
jl
jbe
idiv
arpl
push
call
inc
div
aam
lods
aas
arpl
mov
cltd
out
mov
fmuls
outsl
mov
xchg
in
js
out
in
jno
xor
pushw
bound
push
dec
cli
loop
add
scas
or
aad
mov
insl
rorl
inc
lret
push
insl
in
ret
dec
dec
rclb
or
call
jg
out
ja
pop
rolb
in
cltd
fcomps
or
fisttpll
std
in
and
imul
outsb
xor
clc
jae
cltd
lods
loope
push
push
sbb
in
push
fwait
jno
adc
and
sti
outsl
push
xorb
fistps
mov
xor
or
pop
test
push
sub
or
mov
or
pop
ss
aaa
xchg
scas
stc
ljmp
inc
lods
jno
pop
int3
sub
push
popa
adc
and
mov
jns
outsl
jle
lcall
ljmp
push
ja
jno
out
inc
add
sbb
mov
add
xor
inc
iret
xor
addb
inc
add
into
xchg
cs
stc
xchg
dec
xor
mov
add
push
push
cmc
mov
fstl
lahf
cmp
scas
mov
add
push
sub
jecxz
xchg
lock
xchg
outsl
cmp
jmp
adc
cmpb
jmp
or
lahf
rorb
andl
fsts
push
sbb
add
pop
adcb
mov
dec
sub
sbb
sbb
dec
inc
cmc
shlb
scas
shll
aad
enter
and
add
mov
add
fs
or
sbb
mov
ds
pop
push
iret
cmpsl
inc
cmp
jg
or
ret
cmp
aam
add
mov
les
push
mov
cli
mov
mov
iret
gs
lahf
jecxz
or
pop
test
cmpb
cmc
pop
inc
ja
out
mul
insb
push
sub
mov
lret
mov
push
inc
ret
les
aam
add
cmpsl
or
jne
adc
pop
add
sbb
cltd
inc
or
sbb
inc
cmp
sbb
push
sub
xor
inc
mov
mov
or
jae
sub
lods
addl
push
jecxz
xor
pop
xorb
in
mov
mov
xchg
fcmovbe
sub
test
lds
or
or
mov
cmp
push
adc
mov
ljmp
jne
dec
outsb
cmp
ret
xchg
fdivl
and
js
push
jl
push
inc
dec
dec
cmp
push
xchg
mov
xor
xchg
sbb
enter
nop
int
fildll
ror
mov
scas
js
dec
sbb
cli
pop
fs
clc
stos
mov
lret
fldenv
daa
in
sub
push
idivb
test
push
add
and
loop
pop
mov
dec
insb
stos
pop
push
testl
jno
push
add
ja,pt
jmp
or
push
pop
mov
outsl
pop
leave
sbb
dec
jl
daa
stc
jecxz
jl
push
lods
das
aaa
sub
test
dec
int
lods
int3
addb
lahf
ljmp
inc
mov
imul
test
lds
imul
and
test
in
xchg
dec
gs
mov
in
mov
imul
std
mov
je
outsb
mov
popa
jecxz
in
leave
mov
enter
lods
jge
mov
mov
mov
or
sbb
jge
outsl
test
mov
cmpsb
test
ss
movsb
pop
adc
repz
pop
dec
xor
sbbl
fldcw
lods
ja
dec
lret
pop
fs
pop
movsb
sub
movsb
daa
add
insl
nop
mov
je
pop
dec
pop
push
les
sbb
xchg
dec
push
jp
dec
add
cmpl
and
test
push
pop
movsl
cmc
mov
fcoms
fimull
imull
xor
iret
or
data16
repz
add
lcall
lahf
lret
add
leave
push
rorl
push
cmpl
xchg
jbe
ret
push
inc
pop
xchg
fs
movsb
mov
fcompl
in
cmp
arpl
sbb
sbb
mov
cli
mov
adc
loopne
scas
cmp
and
mov
cmp
in
insl
and
mov
mov
mov
add
cltd
lret
pop
dec
imul
std
mov
jge
mov
jnp
xchg
dec
or
lock
mov
push
dec
mov
icebp
push
std
sub
outsb
pop
or
ds
mov
pop
push
loopne
push
nop
pop
scas
fwait
mov
divl
cmp
xor
fiadds
mov
xchg
leave
xor
in
or
ljmp
lahf
adc
inc
fdivrl
xchg
ret
rcll
pop
lds
sbb
or
imul
stos
mov
push
dec
std
std
xor
aad
and
dec
and
enter
sub
enter
add
fdiv
add
push
xor
jno
das
lcall
roll
ljmp
xchg
mov
outsb
int
mov
je
mov
aad
sub
inc
cmpb
fs
pop
lock
ss
cld
iret
loope
out
int
adc
loopne
lods
jecxz
xchg
and
cmp
mov
fstpt
sub
test
ja
sub
ja
lcall
bound
cld
add
pop
xchg
jmp
pop
and
mov
push
push
jns
sub
sbb
cs
or
jge
mov
out
pop
sub
mov
mov
pushf
outsb
fwait
push
mov
inc
dec
add
sub
lods
sarb
or
ljmp
cmpsl
cmpsl
push
xor
fsubl
stos
ss
sbb
das
scas
sbb
jecxz
ja
cltd
xchg
int3
les
jmp
pop
pop
lcall
dec
rcll
pop
arpl
mov
int
mov
or
cmpsl
loope
xchg
mov
jecxz
pop
xchg
dec
or
xor
ss
stos
mov
mov
sbb
xchg
push
push
jno
shll
sbb
jbe
dec
lret
rcll
adc
push
push
push
or
jecxz
jbe
mulb
lret
sub
cwtl
inc
mov
jmp
adc
push
repz
and
and
xchg
cmp
pop
adc
sahf
daa
inc
pop
xor
lock
adc
fwait
mov
mov
cmp
mov
mov
xor
mov
call
pop
push
mov
inc
pop
push
loope
jmp
xorl
jl
repz
push
push
push
mov
cmpsb
popa
aam
into
out
mov
dec
mov
mov
andb
scas
lock
lret
jmp
xchg
jb
push
push
mov
push
pop
fs
and
sti
sbb
outsl
jb
lret
repz
pop
imul
cmp
ljmp
subl
mov
mov
xchg
sbb
lods
iret
xchg
push
or
sub
imul
jp
xchg
fstl
adcb
push
call
cmpsl
sti
sti
ss
sub
lods
pop
shlb
subl
push
sbb
jecxz
mov
sbb
adc
jge
aas
shlb
dec
loopne
adcb
mov
xchg
pop
xchg
lods
shl
xor
or
cmp
push
lret
das
mov
jge
pop
fimuls
pop
push
fdivrs
pop
inc
xchg
xchg
jno
jno
lock
in
sbb
pop
icebp
pop
stos
xchg
mov
into
in
jp
and
rol
adc
std
shrl
push
push
dec
push
sub
clc
out
rclb
adc
inc
push
xchg
repz
jecxz
lahf
dec
push
and
lea
mov
pop
test
bound
sub
mov
jo
and
call
movsl
fdivl
fmuls
mov
or
adc
mov
int
sub
test
dec
imul
icebp
in
fldenv
mov
mov
insl
std
dec
push
scas
jns
sub
scas
test
repnz
call
sahf
in
xchg
lods
in
jb
subl
sbb
leave
enter
xchg
ret
mov
or
jo
dec
pusha
inc
push
std
jl
aas
inc
cmc
mov
fldenv
fildll
cmpsb
mov
push
lret
mov
dec
jge
daa
push
adc
pop
pop
lods
mov
mov
sbb
push
fildl
sub
sbb
or
ja
and
adc
fnstcw
inc
ljmp
sbb
test
lods
cltd
icebp
mov
repz
shl
inc
das
or
lret
shrl
inc
sbb
jbe
and
push
lea
and
push
xor
outsl
out
pop
xchg
lds
shrb
jmp
jae
fwait
sub
xor
test
jmp
inc
xor
dec
rorl
jb
push
and
in
int3
test
mov
pcmpgtd
fs
push
cmp
rclb
mov
in
sub
jae
in
pop
nop
inc
add
test
sbb
inc
pop
movsl
test
or
pop
add
jo
push
ljmp
mov
cmp
add
outsb
daa
mov
jle
add
outsb
int3
cmpsl
pop
movsl
mov
rcll
add
or
mov
lock
lcall
mov
or
mov
sub
or
xchg
in
jge
lret
jge
ret
xchg
js,pt
leave
cmp
cmp
jno
arpl
mov
sti
roll
cltd
fldt
and
inc
sarl
incl
popa
cmp
scas
aam
pusha
dec
orb
test
fsubl
jno
push
in
cmc
ret
or
daa
aaa
and
addr16
mov
cs
dec
rcl
aaa
aam
pop
sbb
imul
leave
add
add
rol
out
lret
fs
lock
xchg
mov
pop
push
xor
jns
pop
test
or
jb
shr
rolb
mov
int3
rcrl
and
mov
and
jmp
push
sub
movsb
push
cmpsl
sub
movsb
insb
int3
ds
lods
inc
sub
add
push
mov
inc
xchg
mov
jecxz
sub
jmp
pop
fstpt
jmp
sbbb
cmp
aad
adc
jle
cmp
cmp
daa
lcall
jecxz
xor
int3
lret
imul
mov
xor
and
fsubr
fadd
and
inc
mov
jnp
sub
cmp
pop
stos
cmp
jno
jp
mov
cltd
pop
push
or
cs
mov
xchg
sub
dec
mov
pushw
sbb
mov
pop
pop
flds
ret
jge
insl
lock
cmp
lret
and
mov
and
or
pop
stos
mov
sub
xchg
adc
sbb
lar
pop
add
cmp
add
xor
mov
push
orb
dec
enter
popf
rorl
xchg
cmp
sbb
xor
movsb
mov
enter
jp
inc
shrb
inc
arpl
sub
into
fsubr
cs
lods
pop
mov
out
pop
clc
mov
sub
movsl
lcall
inc
mov
jns
leave
loope
fsubl
xor
in
add
ret
xchg
fwait
insl
push
nop
sub
mov
test
sbb
aam
push
push
fisttpl
mov
in
insl
inc
iret
pop
adc
pop
sbb
or
pusha
insl
outsl
insb
cmp
jp
inc
cmc
pop
or
dec
cmp
dec
popf
inc
xchg
leave
test
cs
pop
jl,pt
out
jne
data16
xchg
dec
sub
insl
bound
sahf
mov
out
insb
lcall
mov
cli
je
or
add
adc
je
test
hlt
jmp
ljmp
jns
adc
scas
iret
addr16
movsb
shll
fsubl
stc
hlt
pop
mov
not
pushl
in
cltd
scas
jp
jae
push
jne
lret
lcall
jns
stos
dec
sub
insl
cmp
inc
loope
cltd
adc
std
mov
div
les
dec
test
pop
push
pushf
xor
mov
je
rol
cmp
cmc
mov
or
mov
mov
sbb
dec
fsts
movsb
es
loope
dec
inc
cmc
push
fmul
popf
aaa
loop
ja
lods
sbbl
push
pop
inc
mov
or
jg
dec
mov
imul
mov
enter
xchg
xchg
cmp
inc
movsl
lcall
adc
sbb
and
or
push
sbb
insb
ret
fidivl
out
bound
jnp
je
or
xorl
lahf
push
repz
data16
pop
minps
std
rcrl
out
add
pop
scas
mov
lret
adc
cmpl
jnp
test
mov
loope
mov
lods
push
fisttpll
rcrl
cltd
jge
mov
outsl
dec
data16
adc
xchg
mov
adc
inc
outsl
pop
push
mov
sub
jo
mov
jg
int
mul
push
inc
xor
mov
sbb
xchg
daa
cld
adc
imul
pop
mov
lds
push
fisubs
add
in
enter
insl
and
sbb
dec
push
movsb
repz
or
jno
sbb
jnp
pop
inc
fcoms
and
push
adc
and
addl
adc
call
subb
jle
clc
cmc
mov
and
cmp
sub
gs
outsl
cmpl
inc
mov
out
movsb
fcomip
int3
bnd
sbb
pop
cmp
mov
lahf
mov
pop
loopne
test
sbb
mov
pop
mov
test
dec
rol
mov
jcxz
push
mov
imul
fildll
push
inc
jmp
pop
rorb
dec
and
movsb
push
mov
stos
sub
vprotb
and
adc
push
mov
arpl
xor
fstp
imul
int
mov
xchg
mov
fs
idivl
sub
sbb
xchg
bound
xor
xor
push
sti
addr16
or
push
pop
inc
fdivr
repz
add
nop
mov
mov
cmpsl
xchg
dec
leave
mov
sbb
dec
hlt
shrl
mov
insb
fxch
xor
push
rcrl
add
mov
dec
jo
pop
repz
shll
sub
movsb
push
aam
and
mov
cld
nop
cs
movsl
mov
shlb
push
ljmp
cld
pushw
pop
outsb
loopne
xchg
repnz
test
or
sub
lods
mov
out
imul
mov
loope
adc
roll
in
cld
test
icebp
fsubrl
aaa
fldcw
mov
mov
ficompl
ret
push
inc
adc
cli
and
addb
fdivr
push
push
rorb
and
xlat
cmp
cmpsl
icebp
cmp
mov
dec
jecxz
add
ds
pop
jae
nop
arpl
movsb
insl
inc
dec
sub
add
ja
movsl
and
les
lahf
shr
sub
add
fst
pop
adc
lret
xchg
push
sbb
daa
loope
repnz
outsl
cmp
repz
mov
mov
mov
inc
and
inc
push
fwait
repnz
fwait
movsl
testl
adc
inc
imul
xlat
mov
lods
repnz
xchg
ffreep
fldcw
and
jb
aas
cmp
jns
rcrb
repnz
sbb
scas
ds
call
notl
or
mov
cltd
es
mov
in
insl
mulb
push
pop
mov
insl
sub
pop
inc
gs
push
clc
test
mov
in
pop
inc
mov
sub
cmpsl
pop
loope
in
fists
orb
arpl
stos
xchg
test
mov
jno
inc
push
lods
popa
rorb
cli
push
xchg
jae
xchg
and
adc
push
mov
repz
loop
rcrb
leave
mov
sbb
stos
dec
jae
into
aad
jo
pop
xor
inc
mov
sbb
in
lock
dec
hlt
push
movsl
divl
xor
fadd
mov
jno
jo
lcall
dec
jo
gs
push
jae
inc
pop
jb
out
aad
xchg
push
add
out
dec
pop
iret
int3
mov
aas
arpl
mov
pop
mov
mov
lahf
rcr
mov
and
and
repz
cmp
xor
dec
pop
jb
mov
test
pop
aam
mov
mov
aam
mov
mov
sbb
mov
adc
arpl
jg
sub
sub
mov
andl
push
adc
lret
les
mov
out
cmc
inc
iret
dec
and
lock
fs
jnp
xchg
push
fisubs
test
notb
push
inc
lods
xor
pushf
mov
in
xchg
mov
xchg
xchg
adc
sarl
pop
dec
push
adc
or
dec
xor
or
sbb
and
jl
ja
xchg
xor
imulb
jb
test
add
sub
pop
out
dec
jle
jnp
fisttpll
xchg
into
add
aam
cmp
inc
outsb
sahf
pop
inc
test
fstpt
cs
dec
mov
pop
out
in
jnp
sbb
xchg
jnp
add
je
mov
cld
mov
dec
sbb
sbb
push
cmp
xchg
add
mov
rolb
insb
adc
lea
mov
ret
negb
cltd
loopne
cs
test
stos
jne
repnz
push
sbb
push
lcall
push
imul
cmp
aas
mov
sub
adc
nop
bound
shlb
insb
add
inc
jge
xor
push
mov
push
popa
push
inc
mov
mov
hlt
pop
ljmp
adc
push
push
xchg
dec
cmpb
and
pop
daa
mov
call
jo
jb
nop
fiaddl
dec
movsb
ret
cmpsl
cwtl
pop
mov
loope
pop
mov
test
or
mov
cmc
scas
out
loop
xor
frstor
cld
xor
jl
adc
xlat
cmp
addr16
cmpsb
cltd
fxch
dec
xchg
sahf
xor
call
pop
pusha
loopne
mov
test
repnz
ret
cmp
pop
mov
jp
dec
inc
leave
mov
lret
adc
sbb
push
cmp
movsb
imul
negl
imul
mov
push
xlat
les
cld
jnp
and
leave
enter
xor
cmp
mov
sub
adc
adc
cmp
ljmp
mov
mov
mov
lods
sub
fiaddl
rcll
pop
lcall
sbb
js
fdivl
push
and
cmp
inc
add
pop
incb
aaa
inc
xchg
xor
push
mov
not
pop
rol
aas
xchg
adc
sbb
loop
sahf
sbb
or
jne
js
add
jns
or
and
insb
mov
subb
mov
ds
xchg
add
aad
jnp
inc
ficompl
sbb
xor
or
lret
xor
or
cli
pop
sbb
cmp
add
cmp
enter
ficomps
loope
sbb
add
xor
and
popa
sub
sub
insb
lcall
cwtl
stos
fwait
mov
inc
sub
lock
jne
lds
clc
push
and
pop
cmpsb
subl
sbb
dec
push
add
mov
jp
loopne
stos
and
xor
jecxz
xorl
scas
and
sahf
js
jb
adc
sub
stos
jg
fwait
push
fdivrp
jae
or
mov
int
in
xor
mov
cmp
shlb
lods
mov
pop
addr16
es
movsl
js
mov
xor
jl
ljmp
cmp
jb
leave
cmpsb
mov
cmpb
jl
push
scas
lods
mov
xchg
push
out
shll
xchg
or
stos
cmpsl
jbe
xor
xchg
lahf
adc
lock
inc
data16
lcall
outsb
les
push
push
adc
call
psrlq
add
xor
pop
js
ret
cli
sub
testb
and
shll
add
xchg
scas
js
subl
dec
mov
push
mov
stc
stc
jle
popf
fcompl
adc
or
mov
pop
in
repnz
ret
cmc
or
jle
dec
xchg
mov
dec
cmpsl
in
xor
int
mov
loop
ret
cmp
or
in
xor
ljmp
add
adc
sbb
xchg
push
cmp
sub
repz
cli
add
and
and
insb
ffreep
xor
jb
mov
xchg
andl
push
lahf
mov
mov
stc
in
outsl
xor
cmpsl
mov
jns
lcall
vxorps
or
fs
lahf
fwait
mov
and
inc
add
add
dec
adc
inc
mov
mov
clc
outsw
shlb
lcall
mov
loope
pop
sti
int3
adc
inc
aas
fcmove
nop
es
mov
or
cltd
cmp
push
sub
add
lea
test
dec
fcoms
mov
mov
jnp
jge
test
or
mov
movsb
mov
sarl
lds
add
cmp
data16
add
bound
data16
mov
adc
mov
sbb
rcr
mov
xor
mov
push
pop
lcall
sub
mov
lea
setb
jb
roll
cmpsl
inc
js
cltd
dec
xlat
pop
jns
xor
in
add
scas
or
icebp
push
lahf
test
push
xlat
dec
and
push
ja
mov
cmpsb
xchg
pop
dec
divb
aas
inc
ss
lcall
ss
mov
icebp
das
cmp
addr16
jno
sbbb
in
dec
stc
int3
outsb
imul
add
mov
dec
outsb
ret
xchg
mov
sbb
sub
in
lods
pop
sbb
in
adc
and
shll
mov
test
pop
mov
lods
jmp
jbe
xor
outsl
adc
ja
popf
add
jno
jecxz
mov
imul
inc
pop
out
xor
arpl
pusha
push
xchg
inc
dec
push
lret
jne
or
sbb
jge
rolb
jge
loope
daa
jle
in
xchg
jno
adc
add
cmp
data16
pusha
fwait
shrb
cmp
inc
movsb
inc
add
push
pusha
iret
or
lahf
adc
xchg
mov
push
adc
ja
sbb
int3
pop
xchg
pop
sub
rclb
inc
lock
stos
dec
jmp
pop
mov
lret
sahf
lock
hlt
ret
pop
cmp
mov
xchg
sub
or
cmp
fcmovbe
loop
inc
add
mov
cld
ljmp
jae
cmc
mov
add
idivl
cltd
cmp
xchg
icebp
dec
and
clc
jns
sub
insb
mov
scas
dec
decl
dec
es
or
mov
jae
std
imul
fsts
icebp
pop
mov
out
dec
jns
inc
cmp
mov
and
shll
inc
push
aam
test
aas
cli
cli
aaa
lret
sub
mov
jnp
sub
lret
pop
adc
xor
xor
clc
fidivrs
mov
mov
dec
adc
aam
shrl
popa
cmp
shlb
aad
jp
sbb
sub
xchg
bound
outsb
mov
rcr
ret
cmpsb
movsl
sbb
xchg
adc
sub
mov
adc
leave
lods
in
lea
lods
xchg
cmp
jp
xchg
adc
xchg
hlt
or
push
push
movsb
push
sub
add
add
shrd
and
popa
loop
and
mov
push
out
dec
mov
std
jns
pop
xchg
mov
dec
stc
ljmp
pop
pushf
hlt
jne
fnstenv
mov
enter
mov
inc
mull
add
lock
fimuls
adc
enter
or
fdivl
sub
and
push
xchg
add
jno
fldcw
mov
leave
inc
and
and
inc
dec
in
int3
rclb
dec
cmc
mov
in
stos
inc
mov
ret
cld
das
jp
vsqrtpd
dec
adc
loopne
dec
jae
mov
repnz
xchg
or
loopne
std
xlat
push
fists
cmp
jl
pop
add
inc
dec
es
push
or
pop
out
dec
mov
and
outsl
imul
cmp
push
push
into
mov
mov
cmpsl
clc
mov
pop
jecxz
sbb
pop
sub
adc
ljmp
xchg
mov
xchg
push
movsb
xchg
xor
sbb
shlb
xchg
sbb
cmp
repnz
pop
xor
xor
repnz
std
int
mov
ret
cltd
xor
sahf
imul
pop
ret
sbb
decb
sbb
cld
rol
imul
arpl
mov
lods
mov
fdivl
xor
inc
dec
dec
movsb
stos
mov
das
mov
add
aam
cltd
aas
and
inc
shrl
pop
xchg
das
jmp
mov
jnp
daa
push
mov
mov
mov
push
xchg
add
leave
fcoms
add
fnstsw
or
mov
dec
nop
pop
gs
sbb
test
jl
aaa
jbe
jns
shll
mov
xchg
in
test
jg
xlat
xchg
xorl
push
push
mov
mov
jae
int3
div
xchg
xor
or
pop
pop
cmpsb
and
push
or
dec
sub
ss
mov
pop
pop
mov
pushf
lahf
push
cmovae
and
jb
lret
mov
push
arpl
mov
xchg
dec
push
inc
dec
mov
shrb
or
adc
jmp
in
pusha
dec
sbb
out
inc
sub
stc
int
loope
add
mov
insl
xchg
vpshlb
sub
mov
cltd
pop
insb
xor
test
mov
pop
inc
in
push
xor
sbb
inc
dec
cmp
cmc
pop
mov
add
add
or
sub
push
xchg
pop
xchg
mov
icebp
shrb
mov
loopne
jne
mov
pop
mov
mov
adc
pop
jmp
inc
sub
sub
pop
mov
fchs
adc
push
jnp
repnz
sti
pop
add
sbb
jl
hlt
push
fimuls
sub
clc
shrb
inc
sub
mov
mulb
and
mov
in
cmp
dec
sbb
stc
rolb
dec
jns
in
cmp
xchg
outsl
jne
or
test
sub
xor
stos
xchg
cmpsl
out
ret
hlt
dec
test
and
adc
push
mov
cmpsl
push
jns
mov
mov
dec
sar
es
lods
ds
outsl
adc
or
loope
lock
in
rcrb
es
adc
inc
cmpsb
pop
pop
mov
popa
lcall
insl
scas
sub
or
lock
sub
push
sub
cltd
sbb
jge
cmp
pop
sub
ret
movsb
nop
dec
pop
clc
adc
out
out
popf
xor
sbb
xchg
xor
test
adc
gs
les
xor
ret
pop
test
into
cmp
repz
fstps
xchg
dec
and
push
push
dec
push
sub
xchg
xor
add
gs
ds
inc
cmp
sbb
push
iret
xor
push
push
pop
xchg
dec
mov
sub
mov
push
cld
jg
sahf
imul
pop
fstpl
xchg
sbb
ret
mov
jg
rclb
test
es
add
push
sub
cmpsl
insl
pop
sbb
or
add
lret
push
cmp
push
or
jge
push
fwait
out
lret
xor
sub
and
and
xchg
cld
mov
hlt
mov
out
mov
stos
and
cld
push
lret
sbb
sub
cwtl
shl
pop
fisubs
sarb
imul
mov
popa
pop
mov
pop
rcrl
inc
or
out
lock
imul
out
sub
iret
dec
arpl
xchg
jmp
andb
aas
push
ja
pop
stc
xchg
je
arpl
call
aaa
test
xchg
in
mov
mov
addr16
aas
insl
lods
pop
sub
pop
insb
int
stc
push
jae
inc
in
adc
sbb
gs
add
fs
push
mov
jmp
xlat
jmp
sub
add
sbb
scas
sub
loope
dec
xor
data16
data16
dec
sub
les
xor
cmpsl
iret
es
xchg
gs
scas
cld
dec
or
nop
mov
test
inc
push
mov
pusha
call
ror
adc
dec
pop
adc
mov
or
jge
pop
xor
or
push
mov
xor
mov
setne
adc
adc
shll
test
in
dec
push
sbb
cmpsb
rcrb
lcall
gs
rcrl
cwtl
ret
jp
rolb
bound
fstpt
std
in
and
ds
or
mov
xchg
add
mov
aaa
jecxz
pop
not
lea
cmp
rolb
nop
jle
jg
inc
xor
sbb
adc
sub
push
mov
xor
imul
cmp
inc
fldcw
fs
pop
popf
pusha
jbe
dec
into
test
outsb
push
sub
jo
dec
push
xchg
movsl
lock
loope
dec
icebp
cmp
mov
lcall
in
imul
pusha
sti
and
xchg
imul
pusha
loop
fcoms
in
in
rol
and
sar
fadd
xchg
test
icebp
sbb
xor
pushf
fidivrs
mov
adc
repnz
cmp
in
fidivrs
pop
testb
and
mov
pop
outsl
mov
orb
mov
es
out
and
jecxz
fisttpl
stos
inc
lods
xor
xchg
jle
pusha
adc
test
cmpsb
aam
sub
mov
cmpsb
push
add
xor
sub
dec
lods
cmp
arpl
mov
and
test
out
dec
inc
mov
push
test
cmp
outsl
dec
pop
out
inc
mov
int3
out
xchg
ret
cmp
xor
dec
xlat
and
pop
xor
imul
fnsave
and
mov
inc
fs
dec
loope
icebp
stc
out
arpl
cmpsl
cmc
push
xchg
xlat
mov
push
xor
jne
mov
sbb
or
fcomps
je
fadds
inc
pusha
test
xor
mov
lret
faddl
mov
into
lock
in
adc
rcrl
lret
lea
je
shrl
adc
outsb
addb
std
dec
cmp
pop
dec
inc
in
mov
fwait
lods
sub
fucomi
jnp
addr16
xlat
addr16
xorb
bound
or
xor
ficoms
sbb
mov
mov
push
dec
shlb
rcl
out
test
ja
push
xchg
xor
xor
mov
and
mov
adc
and
fs
fcomps
pop
mov
movl
xor
or
cmp
std
pop
mov
imul
mov
sub
xor
mov
sub
or
js
or
cli
sbb
dec
push
int
pop
rolb
jbe
jmp
es
pop
jl
jmp
mov
jns
sub
mov
sbb
jb
xor
and
push
outsb
jae
sub
scas
and
movsl
fldenv
pop
inc
test
lret
ja
pop
xchg
xchg
repnz
je
scas
loope
and
pop
int
push
add
mov
cmpsl
stos
insb
insl
iret
xchg
cli
ljmp
and
xor
fstpt
dec
bound
out
movsb
xor
push
pop
cmc
sbb
add
out
push
cltd
dec
sarb
or
cwtl
mov
mov
jmp
mov
je
sbb
aam
movsb
fisttps
adc
in
cld
mov
xchg
rorb
in
or
leave
cwtl
outsb
in
xchg
and
fs
fimull
repnz
add
icebp
call
pop
jo
sti
add
push
nop
js
shlb
pop
inc
lods
mov
in
fdivl
push
lods
jno
lods
or
daa
jne
sbb
jne
xchg
inc
pop
xchg
cmp
xor
xor
jmp
push
sbb
mov
xor
xor
outsb
fs
addr16
scas
mov
jne
std
jns
gs
mov
mov
pop
idiv
sbb
mov
and
daa
ds
dec
push
aam
in
jns
mov
sbb
dec
mov
scas
addr16
inc
jmp
adc
mov
adc
lahf
fldt
popa
add
push
stc
xor
ret
movsl
ds
fs
xor
out
cmpsl
adc
xchg
xchg
cwtl
dec
jno
clc
in
mov
mov
lock
mov
out
into
popf
jne
int
flds
sti
sub
sbb
pop
jbe
add
iret
ret
cltd
clc
rcr
rol
jecxz
popa
iret
dec
xchg
jp
inc
push
xor
int3
xor
sbb
add
rorl
add
adc
pop
push
xchg
call
jno
enter
push
int3
bound
scas
out
adc
outsl
push
adc
scas
sub
mov
jl
int3
cmpsl
xor
enter
xlat
sub
fdivl
xor
std
inc
xchg
loop
dec
sub
aaa
xor
stc
mov
inc
dec
in
or
dec
push
cmp
adc
sahf
mov
sahf
and
pop
mov
mov
ljmp
sbb
xchg
cmp
mov
push
push
pop
insl
rcrl
test
push
lods
sbb
push
mov
mov
faddl
or
scas
adc
sbb
bound
pushf
inc
loopne
dec
mov
pop
and
data16
mov
lods
jnp
xchg
addl
or
sub
pop
or
cld
lret
cmp
lods
bound
repz
inc
les
fldt
rcrb
in
in
inc
fcoml
fisubl
jle
notb
sbb
lret
add
lcall
ss
ret
stos
in
in
fstps
fisubs
cmp
or
add
jne
xchg
dec
sub
and
adc
imul
call
hlt
decl
scas
push
push
sbb
dec
imul
sub
ror
inc
jmp
cmp
mov
pop
lcall
in
fs
mov
sub
cmp
mov
inc
stos
sbb
push
sbbl
loop
xor
popa
push
fdivrp
in
ds
shl
cmp
sub
movsl
stc
sub
mov
dec
movsl
pop
ficoms
and
inc
ret
pop
rcll
lock
sbb
mov
cmpsl
jb
mov
jo
mov
push
sarb
jg
sbb
popf
loope
cltd
ljmp
adc
movsb
movsb
jo
sbb
or
push
aad
cmp
insl
dec
ror
sbb
cmp
mov
inc
cli
je
dec
repnz
idivl
fdiv
mov
or
gs
xor
cmc
push
dec
rcrb
scas
mov
inc
subl
nop
and
rorl
aas
push
or
shrl
and
lods
psraw
xor
lret
pop
orb
jno
ss
sub
adc
mov
jecxz
push
fcompl
out
dec
push
int
xchg
outsl
mov
loope
loop
xchg
mov
push
fnstenv
lea
xchg
scas
cld
aad
mov
outsl
pop
push
xlat
cmc
sub
data16
xchg
mov
imul
sub
lds
repnz
push
xlat
sbb
lahf
push
mov
aam
sbb
and
jo,pt
add
sbb
mov
std
or
pop
insl
fs
mov
popf
jp
pop
push
hlt
xchg
add
out
sub
sbb
or
loop
cmpsl
shll
gs
fs
out
je
je
popa
jns
fidivs
ficompl
cmpsb
lret
sarb
dec
adc
mov
repnz
pop
out
sti
rclb
xchg
sbb
fildl
inc
int3
fisubrs
mov
add
xor
test
fxch
rcrb
mov
mov
movb
arpl
xor
pop
mov
add
not
filds
adcl
aaa
xchg
mov
sub
dec
es
test
movsb
out
adc
xor
jg
adc
dec
sub
in
push
ret
mov
xchg
sub
sarb
in
movsl
testb
insb
jbe
add
scas
inc
outsl
jmp
cmp
hlt
outsl
les
mov
lar
inc
mov
cvtdq2ps
cmp
or
fdivrs
push
ret
cld
push
shrl
icebp
pop
mov
neg
clc
mov
cltd
adc
inc
fwait
notb
in
scas
sarb
dec
and
imul
loope
mov
aam
jae
pop
int
sub
mov
dec
lcallw
je
xchg
data16
movsl
cmp
xchg
pop
dec
xchg
mov
jg
pop
and
xchg
add
frstor
repnz
bound
lods
xchg
mov
dec
insb
jns
adcb
jno
fcoms
jle
add
loopne
cmpsl
out
cmp
rorb
pusha
scas
xor
fs
cli
and
sbb
cmc
jmp
fldenv
outsl
xor
mov
adc
sub
pushf
mov
hlt
ret
cmp
ja
shl
mov
inc
lock
lds
pop
enter
dec
pop
cmpsb
dec
mov
bound
jo
xchg
in
fnsave
sub
cmpsb
in
lock
ja
jnp
mov
pushf
push
cmovne
push
sub
leave
divl
or
fnstenv
sahf
fadds
xchg
ds
ljmpw
fidivl
addl
stc
push
rcl
sub
push
int3
cli
pop
mov
inc
xchg
xor
cmp
loope
xlat
lods
pop
bound
jne
cli
cmpsb
inc
cmp
je
stos
decl
xchg
lods
mov
pop
adc
lds
icebp
jecxz
movsl
sub
pop
jmp
insb
adc
inc
adc
xchg
sbb
push
inc
push
roll
jmp
adc
dec
stos
xchg
sbb
cmpl
xchg
xor
inc
stc
scas
fld
aas
fadd
mov
jg
stos
test
test
cmpsb
out
lods
repnz
je
ja
gs
jl
mov
inc
mov
mov
mov
add
std
call
ds
add
push
mov
lods
mov
jl
xchg
roll
mov
lahf
fdivs
aaa
imul
mov
push
js
and
lret
push
mov
xor
scas
cli
repz
mov
xor
or
cmp
inc
sbb
sbb
mov
pop
push
cmpsl
movsl
mov
adc
int
jnp
pop
jmp
in
or
cld
mov
mov
xchg
and
rorb
ret
inc
mov
jp
jns
lret
dec
nop
xor
xor
cmp
pop
xchg
adc
bound
mov
aad
jnp
cmpsb
cltd
dec
cmp
imul
xor
dec
iret
jecxz
iret
push
leave
xor
lock
hlt
inc
push
lods
je
test
mov
push
pop
out
and
inc
jb
shlb
dec
push
add
call
sti
out
mov
repnz
shrb
fdivrl
sub
or
fisubl
repz
es
fsubrs
insb
addl
add
sti
das
jle
ljmp
out
lods
inc
lods
mov
rep
out
xor
dec
and
add
clc
push
pop
mov
stc
andl
insl
jg
arpl
mov
dec
add
jne
mov
shll
add
fwait
hlt
sarl
sub
inc
ds
mov
enter
lret
push
xchg
int
push
pop
jecxz
lds
and
subl
loope
push
and
cmp
push
int3
pop
incl
sbb
xchg
ret
test
fildl
imull
in
mov
cwtl
adc
and
gs
jb
dec
ret
in
jb
ror
push
movsl
imul
xchg
ljmp
mov
push
enter
mov
imul
es
pop
fcoml
mov
push
out
call
call
xchg
or
pop
adc
ret
jl
sub
jl
cmc
ja
mov
xchg
sub
aam
aaa
lret
inc
mov
fistl
adcb
sub
leavew
adc
aas
out
rolb
inc
js
mov
call
scas
inc
inc
or
leave
or
addr16
cmp
xchg
push
xchg
sbbb
sub
int3
jl
mov
or
sub
ja
insb
les
sti
pusha
mov
mov
lds
push
mov
jmp
jbe
mov
stos
sub
bnd
aam
sbb
jmp
jmp
lret
lcall
and
push
mov
add
dec
and
into
xorb
mov
ret
mov
divl
pop
scas
fldt
mov
lods
push
jge
call
mov
add
sub
mov
xchg
dec
ja
out
stc
and
inc
adc
notb
xchg
rolb
inc
icebp
cmp
fidivs
or
test
ficoms
cli
sbb
mov
xor
sbb
pop
cmp
jbe
rolb
repz
push
imul
dec
inc
clc
out
test
aas
add
inc
gs
fldenv
add
mov
inc
dec
dec
icebp
cltd
push
std
adc
dec
imul
pop
pushf
sti
inc
mov
pop
mov
and
test
push
leave
xor
jbe
mov
pop
sub
mov
inc
cwtl
jle
cmp
inc
pop
pop
mov
fildl
outsb
pop
sbb
jb
sbb
xor
cmc
mov
arpl
jp
jmp
dec
lret
mov
out
inc
push
push
fldenv
icebp
xlat
addb
sbb
inc
add
repz
jno
xchg
sub
fwait
push
jno
popf
fdivs
cmp
rcll
pushf
aam
lds
rcrl
cmp
xchg
push
mov
inc
shll
out
push
inc
int
insl
pop
push
xchg
movsl
scas
and
subb
out
sbbb
mov
loopne
jo
filds
jo
xor
lcall
sub
dec
sbb
lea
aaa
mov
push
sub
stc
jle
mov
in
stos
mov
lcall
jmp
and
shll
pop
mov
lods
lret
repz
hlt
xchg
and
sub
xor
xor
push
dec
out
in
test
insb
shll
cwtl
inc
out
call
mov
scas
xorb
cs
jo
test
test
je
jge
leave
push
sub
imul
fidivs
pop
push
add
xor
dec
test
jecxz
jbe
pushf
clc
mov
clc
and
push
xor
insb
aad
lcall
js
jle
repnz
pop
jl
jnp
pusha
or
popf
cmp
cltd
sbb
xchg
jbe
and
sub
xlat
iret
adc
mov
icebp
dec
xchg
sub
pop
mov
or
mov
push
xchg
jb
mov
adcl
push
in
pop
lret
jge
and
aad
mov
rorl
das
fildll
leave
xchg
test
xor
or
xchg
and
push
xor
mov
sub
adc
adc
jge
inc
pop
mov
inc
sub
sahf
fidivl
pop
jmp
cli
lret
mov
cld
cmp
lahf
xlat
aam
jbe
xchg
fadds
daa
pop
dec
jecxz
scas
lret
sbb
lsl
imul
gs
pop
fisttpll
scas
xor
jecxz
and
cmp
decb
cmc
notl
rorl
sub
aas
sub
mov
and
es
mov
mov
fsubrs
mov
test
jg
inc
lock
js
js
dec
xchg
inc
push
imul
jns
mov
js
xor
test
scas
pop
inc
cmpsb
jo
shlb
add
cli
jl
movsl
scas
jg
xor
jbe
inc
sub
xchg
je
sub
mov
sbb
mov
test
mov
mov
push
dec
and
scas
cmp
cmp
inc
adc
jnp
sub
mov
sub
pop
and
sti
imul
pop
test
js
aas
sub
cmc
outsl
jge
and
out
addr16
dec
test
jmp
cmpsb
shl
sbbl
cmc
sub
out
out
cltd
lret
hlt
orb
xor
mov
out
dec
mov
cwtl
xchg
jp
nop
lods
adc
inc
add
mov
mov
jb
call
dec
cltd
insl
hlt
sti
ficoms
aaa
add
xor
and
divb
mov
aad
in
fldt
adc
loop
cmp
stos
sti
pop
pop
insl
mov
push
adc
stos
mov
sub
add
stos
mov
mov
pop
shl
push
inc
inc
lret
out
mov
repz
out
sub
inc
inc
cmpsb
cmpsl
imul
and
cmp
and
xchg
fdivrs
inc
test
std
ja
inc
sbb
xadd
imull
lret
mov
loopne
xchg
ret
mov
and
sarb
std
call
into
and
imul
pop
mov
pop
in
xor
sbb
dec
clc
sbb
bound
insl
iret
filds
enter
mov
cmc
sbb
inc
add
sbb
lahf
out
and
movsl
xor
pop
leave
sbb
je
hlt
test
adc
movsb
sarb
and
or
or
clc
push
jbe
and
insb
mov
ja
xor
sub
cmpsb
pop
add
int
ja
nop
cmp
rol
or
fidivrl
ficoml
ja
jns
mov
mov
insb
repnz
sti
inc
sub
push
nop
dec
loop
fiadds
ja
dec
out
xchg
xor
xchg
sub
or
insb
cs
test
dec
lea
sahf
out
imul
push
and
out
xchg
int
adc
cmpsl
daa
test
ljmp
sub
pop
lock
xor
xchg
scas
cs
mov
lahf
in
mov
and
dec
push
push
out
push
mov
xchg
mov
pop
inc
cwtl
adc
mov
iret
ljmp
rcll
mov
addb
repnz
xchg
xlat
dec
inc
mov
or
punpckhwd
nop
push
setb
gs
int
sbb
enter
push
iret
inc
shll
clc
mov
push
outsb
iret
push
xchg
mov
aam
xlat
jae
jecxz
jno
pop
add
insl
mov
shlb
arpl
repnz
aaa
push
xor
cmp
jecxz
cmp
jmp
mov
test
loopne
rolb
mov
cmp
xchg
push
aad
mov
adc
lret
stc
cmpsl
imul
cmpsb
fmuls
push
cmovo
bnd
sub
pop
mov
mov
daa
lret
jge
mov
push
push
mov
xor
lods
ljmp
or
mov
or
xor
sub
ret
jb
add
push
loop
adc
mov
cmpsb
pop
xchg
jp
cltd
sbb
int
roll
xchg
xor
incb
inc
push
mov
pop
xor
lds
lret
int
jmp
sarl
js
dec
mov
jns
testb
mov
jo
adc
stc
imul
dec
cli
push
mov
inc
inc
lahf
mov
mov
jp
sub
cmp
divb
stos
xor
cmp
setl
jl
add
lds
sub
bound
movsl
and
pop
sub
sub
jle
test
add
add
sub
or
das
sbb
add
leave
out
jbe
ds
fnstcw
repz
je
pop
pusha
push
daa
into
dec
lods
and
sbb
jmp
jecxz
call
ret
push
xor
xchg
sub
icebp
les
shll
dec
aaa
push
aam
dec
movsb
xor
pop
mov
lret
insl
cmp
loop
stc
push
rcr
and
shrb
mov
cmp
mov
xchg
inc
cmp
fidivs
pushl
fdivrs
cmp
mov
nop
fwait
lret
mov
mov
imull
and
pushf
jns
iret
jnp
add
sub
iret
xchg
push
adc
and
inc
stos
mov
dec
sbb
push
adc
pop
push
xorl
sbb
insb
adc
mov
paddq
jne
out
xchg
and
cmp
adc
pop
push
mov
repz
adc
xor
bound
pop
fldenv
mov
mov
pop
or
or
jg
sbb
cmp
stos
mov
push
sahf
push
or
fsubr
inc
popf
xor
lahf
insl
add
mov
dec
xor
xor
add
inc
aam
fs
stos
jae
lds
test
jbe
xchg
inc
negl
ret
push
cltd
test
push
cmpsl
xchg
cmp
jnp
lret
mov
lret
mov
push
mov
stc
cmp
xchg
shl
in
jns
mov
jmp
xchg
jl
neg
push
or
idiv
rolb
hlt
jb
loopne
dec
add
or
or
iret
or
push
sbb
jo
iret
jbe
rcl
pop
out
sub
xor
push
cmp
jae
test
test
shlb
push
lock
lock
push
ljmp
aad
cmpxchg8b
xlat
pop
mov
xchg
stos
xchg
dec
fwait
xchg
pop
shrl
pop
xchg
lahf
cmp
arpl
xchg
cmp
cmpl
xor
roll
push
lods
iret
cmpsl
mov
repnz
pop
loope
in
jb
push
jb
jne
jns
jae
mov
into
shrb
je
jae
lock
inc
in
or
and
mov
pop
outsl
cltd
les
jne
dec
sbb
hlt
xlat
fisubrl
and
fisubs
add
lods
rorl
fdivs
add
mov
mov
addb
adc
and
mov
or
and
xchg
out
add
jns
ret
jns
imul
pusha
inc
dec
pop
icebp
and
enter
ficomps
pop
pop
out
repz
dec
sub
add
mov
movsb
mov
dec
out
cltd
scas
and
xor
shrb
out
jnp
push
lea
enter
xlat
fs
repz
out
adc
ficompl
inc
push
leave
ja
jo
aam
dec
and
jbe
xor
in
call
cmpl
sbb
push
sahf
roll
nop
mov
jo
or
lds
xchg
xor
pop
les
icebp
push
les
sahf
cld
inc
dec
ljmp
daa
mov
mov
pop
and
dec
jecxz
xchg
push
mov
test
adc
out
pop
mov
roll
dec
sub
insb
xchg
loope
stos
imul
in
cmp
mov
stos
sbb
and
add
or
incb
sbb
pop
cli
imul
inc
shll
pop
mov
mov
inc
enter
int3
push
dec
pushf
pop
movsb
sub
push
jbe
pusha
mov
inc
inc
and
hlt
mov
out
iret
cmpsl
movsb
gs
push
cmp
pop
in
mov
cmp
push
fisubrl
inc
sbb
jae
mov
bound
xchg
sbb
fistpll
lea
mov
push
or
mov
mov
or
inc
daa
xor
xchg
out
ret
jp
or
or
adc
rcrb
lahf
mov
pusha
adc
inc
mov
in
movsb
push
jbe
cmp
add
push
add
insb
leave
mov
dec
nop
cld
rolb
sbb
gs
jle
xchg
pop
dec
jmp
mov
push
sbb
or
inc
push
loopne
mov
inc
xor
add
mov
test
add
into
std
lods
mov
sbb
arpl
hlt
sahf
insl
bnd
push
cltd
ja
pop
sbb
xchg
push
imul
add
jecxz
pop
out
dec
out
push
xchg
sbb
mov
and
icebp
mov
inc
jge
add
enter
xor
cmc
cli
add
dec
out
xor
pop
mov
addr16
sar
xlat
or
test
in
mov
jg
pushf
push
test
push
sbb
cmp
in
mov
leave
in
xchg
ret
sub
sub
pop
xchg
decl
inc
dec
orb
mov
cmc
stc
dec
and
cmp
in
clc
cmp
jle
fwait
mov
pop
mov
loope
call
mov
push
js
adc
mov
xchg
insl
jb
jnp
enter
das
xchg
frstor
mov
loope
fwait
dec
xor
or
bound
jle,pn
in
inc
jge
push
pop
add
xchg
cmp
jo
pushf
jns
repnz
leave
add
xchg
sti
sub
stos
cmp
push
call
pop
sbb
bnd
test
jo
stos
sti
ja
mov
or
mov
movsl
sub
out
lcall
hlt
or
movsl
jbe
and
inc
mov
cmp
ficoml
jecxz
fdivr
insb
movsl
outsb
mov
movsb
jb
dec
sbb
scas
cltd
jp
aam
loopne
mov
bound
incb
mov
and
xchg
aam
push
enter
sub
enter
jnp
sub
push
lea
or
adcb
xchg
push
or
stos
ret
sub
pop
mov
mov
lcall
and
pop
cli
pop
mov
daa
sub
adc
out
fcmovnbe
daa
jno
pop
aaa
mov
jecxz
ja
enter
loope
cmp
lret
adc
xor
rcll
sti
pop
inc
xor
cmp
imul
bound
adc
or
xchg
adc
clc
pop
shlb
ss
adc
test
xchg
test
fnsave
rol
lock
aas
jle
cmpsl
test
add
dec
fsubrl
negb
jnp
sbb
adcl
pop
in
out
pop
test
cmc
mov
stc
mov
out
add
aam
fsubl
bound
fwait
popf
lock
adc
cmp
inc
mov
leave
mov
cwtl
mov
les
mov
xlat
test
or
sbb
mov
fcompl
jnp
adc
push
sbb
xor
bnd
push
pushf
aas
cmp
or
mov
dec
xor
mov
mov
sub
jns
mov
inc
push
jge
in
adc
and
push
outsb
test
andl
mov
fwait
push
pop
add
dec
ja
or
mov
or
mov
inc
or
mov
sub
sbbb
pop
inc
jae
out
sub
push
les
cwtl
xchg
cmp
out
popa
lret
scas
popa
jl
dec
add
jg
cmpsb
adc
ss
in
lods
loop
jnp
push
push
dec
nop
jnp
gs
ljmp
mov
movsl
daa
aas
ds
sub
and
inc
fprem
out
lahf
cltd
mov
sub
lahf
jbe
xchg
sub
shlb
enter
mov
rcll
test
or
lret
dec
xchg
and
xchg
xchg
push
cmp
jae
fcoms
rcl
jae
lahf
ja
jmp
das
icebp
cmpsl
jno
cmpb
orl
xchg
xchg
xchg
sbb
daa
push
or
push
jns
insl
fisttps
out
jb
test
inc
adc
dec
out
sbb
negb
xchg
outsl
ret
aaa
xchg
sti
mov
std
lahf
adc
or
mov
dec
xor
fld
push
add
sub
scas
or
aaa
aaa
and
inc
pop
add
sbb
je
pop
lods
jo
cmp
mov
jnp
enter
adc
imulb
cmc
pop
mov
call
and
cmpsb
add
rcrb
cmp
fnsave
sbb
and
xchg
adc
pop
icebp
dec
mov
mov
and
cmp
out
clc
or
or
and
add
int
sbb
cmp
dec
inc
aam
cmp
add
stos
pop
inc
insb
lahf
sti
or
adc
not
mov
lods
daa
push
lahf
mov
jmp
and
add
inc
gs
xchg
test
aaa
inc
xchg
outsl
pop
imull
shr
fmuls
and
mov
cmpsl
inc
inc
idivl
mov
wrmsr
and
and
jle
stos
mov
iret
mov
push
test
sub
lahf
sub
sbb
nop
jbe
dec
iret
lods
div
or
nop
dec
push
dec
es
hlt
pop
jo
pop
cli
lret
mov
lock
adc
test
sbb
xor
vmwrite
pop
les
lock
es
je
jle
loopne
out
cmc
lcall
cmp
push
or
mov
add
leave
rcll
iret
filds
add
call
jnp
nop
push
insl
in
mov
pop
mov
int3
leave
ficomps
pop
out
adc
in
and
jp
xchg
add
push
mov
mov
xchg
loop
xchg
shll
dec
bound
into
push
inc
jbe
or
push
test
insb
and
mov
fnstenv
aas
loop
or
mov
stc
lret
loopne
xchg
pop
lods
jge
sbb
incl
out
iret
sti
xchg
fnstsw
jo
or
addr16
sti
jno
jecxz
repz
adc
push
popa
pusha
adc
cltd
icebp
sub
mov
in
movsl
adcb
das
lret
loopne
sbb
cwtl
adc
insb
mov
dec
or
ret
jmp
inc
sbb
xorl
dec
loopne
imul
call
int
push
mov
ficoms
sar
dec
cmpsl
adc
fldl
xor
mov
js
push
gs
cltd
cmp
adc
or
ret
scas
or
shr
xchg
iret
stos
dec
jmp
leave
pusha
movsl
rcr
sbb
or
sti
push
loope
pop
inc
lahf
inc
fstpt
out
stos
or
add
outsl
push
push
lods
xchg
xchg
push
xor
dec
mov
mov
cmpsb
dec
outsb
sub
out
leave
lcall
cltd
fs
sti
pop
push
adc
cmp
sarl
call
inc
cmp
jp
or
shlb
std
in
add
sahf
mov
pop
pop
cwtl
flds
aas
arpl
jb
add
xor
push
and
jnp
and
lock
cmp
or
or
jnp
cs
mov
jg
cmpsb
in
and
cmc
les
vpshufd
inc
int
shrb
sti
call
outsl
jae
bound
jo
cli
and
mov
sarl
mov
pop
mov
repz
jg
mov
or
outsb
mov
dec
add
cwtl
mov
cmpsl
out
sub
xchg
sbb
mov
notl
mov
bound
repz
or
or
sar
xchg
jb
lock
cmp
data16
or
je
sub
mov
mov
push
out
rcl
push
adc
imul
pop
lea
in
bnd
dec
ja
pop
or
inc
pop
cmp
adc
push
out
sarl
sbb
loop
and
xchg
mov
sub
dec
hlt
push
loop
psubusb
int
clc
outsl
aas
imul
xbegin
cmp
cmpb
cmp
cmp
in
rcl
cs
repnz
aas
fcomip
mov
xchg
inc
hlt
push
mov
loope
ret
cmc
pop
mov
mov
xchg
sub
adc
xchg
add
fisttpl
test
jl
scas
pop
mov
adc
mov
mov
mov
mov
sti
fildll
mov
fsubr
add
gs
int3
sti
xchg
movsb
and
jge
imul
xchg
shl
fadds
cmp
les
xor
mov
pop
mov
das
or
lret
aaa
adc
lret
testl
scas
cmp
lds
jecxz
arpl
sbb
push
mov
sub
sahf
arpl
fld
mov
push
adc
push
repz
out
mov
outsl
jge
sbb
daa
cmp
movsb
popf
sbb
aaa
popl
push
sti
sub
inc
test
mov
in
mov
add
stos
xchg
pop
pop
mov
fildl
mov
out
js
pushf
fsub
je
mov
iret
stc
jg
shlb
out
add
popf
inc
int3
cld
gs
dec
imul
and
int3
adc
mov
jb
xchg
jecxz
jmp
jge
outsb
int
pop
dec
inc
pushf
lea
daa
pusha
xchg
test
aam
pop
inc
fldt
adc
push
mov
pop
in
or
dec
fistpll
stc
imul
cmc
fsubr
jmp
shlb
mov
or
mov
push
and
je
popa
cwtl
jbe
dec
pop
lcall
and
test
or
or
xchg
int
xchg
cli
xlat
cli
pop
jge
pusha
mov
repnz
loopne
inc
imul
mov
xchg
das
fsub
jnp
lock
addl
xor
test
cli
push
adc
jecxz
repnz
xchg
xchg
adc
jp
fs
js
add
and
or
sub
and
rclb
shrl
xor
cmp
cmp
test
push
xchg
dec
cld
movsb
stc
rcrb
pop
pop
cmc
ss
out
or
or
les
mov
stos
or
and
push
lods
jo
jge
pop
les
sub
sarl
in
mov
rolb
js
jle
rcrb
mov
sbb
loope
jns
lds
xchg
mov
lds
in
xchg
repz
pop
cmpsl
mov
push
push
or
inc
fstps
cmp
jo
enter
sub
sbb
push
sahf
out
sbb
fcompl
int
mov
dec
rcrl
sbb
adc
lods
addr16
cmpsb
stc
xchg
movsb
mov
daa
sub
and
ja
mov
inc
jmp
pop
loop
and
push
push
xchg
dec
idivb
jl
mov
pop
add
pop
into
int3
outsl
std
mov
cmpsb
mov
popa
mov
sbb
fs
mov
cmpl
push
loope
int
xchg
fistpl
jge
repz
add
cmpl
sub
stos
inc
loop
fmull
mov
imul
imul
out
fwait
pop
cmpsb
gs
xchg
or
add
std
inc
xor
mov
adc
idivb
test
jno
icebp
push
xor
jno
cmp
push
fs
push
mov
adc
cmp
inc
icebp
jge
jb
xchg
mov
xchg
pushf
dec
and
mov
mov
cwtl
mov
inc
nop
int3
cmpb
push
loopne
test
mov
push
add
dec
stc
dec
sbbb
aaa
jnp
pop
sub
or
pusha
movsb
hlt
push
inc
out
andl
jo
int3
adc
call
bound
aas
movsb
and
mov
call
pop
cmp
aam
pusha
dec
lret
fidivs
dec
push
test
mov
lahf
xchg
leave
test
fdivl
das
fistpll
xchg
inc
pop
add
icebp
inc
leave
push
dec
out
inc
mov
ljmp
fwait
test
jb
dec
push
pop
sub
das
or
mov
bnd
lcall
adc
imul
inc
add
inc
jg
mov
pop
stos
inc
cli
pop
out
test
enter
cmp
adc
test
subb
aaa
mov
cld
xchg
sub
fbld
ja
pop
arpl
imul
push
leave
xchg
push
add
cs
mov
cmpsl
mov
pop
xor
imul
mov
add
mov
xor
outsb
add
add
fbstp
or
mov
pop
push
dec
sub
scas
aad
cli
inc
nop
sarl
xchg
mov
movsb
sbb
jns
mov
and
enter
jmp
mov
jmp
fstpl
sub
insl
fisubrs
pop
xor
fmull
lret
icebp
mov
jecxz
outsb
testl
add
pop
scas
xlat
negl
loop
call
shr
lret
js
mov
mov
jg
shr
xor
cs
stos
fisubs
cmp
pop
popf
sub
mov
imul
jp,pt
adc
les
pop
imul
mulb
rolb
cmpsb
mov
rclb
test
dec
xchg
mov
iret
and
pop
mov
mov
ds
jecxz
shlb
cmp
bnd
xor
sbb
loopne
xor
dec
fsubs
int3
pop
cmp
cld
mov
sti
hlt
jae
hlt
push
outsl
test
in
mov
dec
jae
cld
out
lds
lret
fcmovne
pushf
ja
lret
jp
fstpt
out
sub
and
jle
arpl
in
mov
and
inc
testb
jmp
iret
rcrb
mov
mov
shrl
cmpsl
jle
sbbb
arpl
dec
push
cmp
mov
inc
mov
pop
push
mov
sub
xchg
sbb
or
dec
adc
cld
das
lahf
dec
mov
mov
pop
sar
ss
nop
ss
mov
push
push
test
cmpsb
and
xchg
cmpsl
in
pusha
pusha
mov
mov
test
add
xor
xor
lods
call
pop
xchg
lods
imul
dec
fwait
outsl
jmp
rcll
outsl
sub
lret
mov
adc
and
or
and
inc
inc
cltd
scas
jne
pop
call
xor
je
mov
xor
jno
ret
movsl
in
decb
std
and
ror
xchg
mov
aad
lret
sub
outsb
add
in
pop
jbe
inc
ds
jns
frstor
movsb
cmp
pop
or
xor
push
push
and
repnz
aad
push
lods
scas
mov
aad
inc
xchg
notb
loop
or
lahf
adc
addr16
add
jb
cmp
in
push
enter
mov
ss
lock
and
ljmp
stos
lcall
add
cmp
test
dec
cs
out
cld
push
pop
in
ret
jle
and
xchg
sub
int
pop
scas
mov
clc
iret
lea
paddd
insb
stos
xchg
mov
andl
add
negb
pop
or
xchg
loop
pop
dec
cli
outsb
lret
mov
sbb
in
addb
sub
jno
addr16
xor
int
add
gs
in
es
pushf
cmp
pop
hlt
xor
sbb
pop
inc
testb
xchg
stos
adc
xchg
in
and
inc
xchg
in
jnp
mov
out
cmc
xchg
jmp
fwait
scas
jp
or
mov
dec
jl
xchg
sub
lret
es
push
xchg
loop
pop
or
pop
add
loope
lret
xchg
jno
std
fstps
pop
sarl
mov
mov
test
mov
jge
xchg
push
sbb
cmpsb
xor
cmp
das
enter
inc
mov
dec
imul
iret
clc
repz
push
cld
inc
push
xor
iret
xchg
daa
mov
sbb
and
cmp
bswap
pop
movsb
or
mov
dec
adc
mov
mov
test
xchg
mov
sbb
sbb
cmp
mov
pop
inc
repz
scas
sbbb
mov
test
dec
xchg
xchg
xchg
cwtl
insl
push
fwait
jmp
mov
dec
stos
repnz
loop
sbbl
push
cmova
cmc
arpl
mov
dec
test
pushf
lcall
jp
outsl
fists
pop
in
add
mov
mov
jns
sbb
add
aam
inc
sarb
lods
sub
sub
out
repz
popa
and
int3
mov
pop
push
pop
inc
loop
inc
shlb
rorl
rolb
out
scas
add
mov
adc
or
or
in
icebp
lret
outsl
jae
xchg
shrl
lea
push
sbb
lods
fwait
inc
jns
push
push
popf
neg
in
out
mov
mov
cmc
sbb
pop
mov
add
cmp
xchg
sbb
add
inc
mov
sub
mov
int
push
sub
and
push
ds
sub
mov
fadd
sbb
sarl
int
lock
lock
cli
or
push
outsl
mov
scas
pop
cmp
adc
int3
push
in
xchg
out
fs
or
xchg
or
ja
sub
inc
enter
mov
ljmp
push
sbb
mov
adc
fadds
scas
test
rcll
pop
imull
fbstp
movsl
add
test
pop
or
mov
inc
cmp
dec
and
iret
xchg
jns
mov
inc
cmp
fneni(8087
mov
sarl
dec
loopne
push
add
adc
cld
in
iret
push
jno
push
cmp
xor
pop
jbe
jb
push
mov
or
sbb
scas
outsb
outsb
jecxz
arpl
cmp
dec
addr16
inc
or
lea
xor
sar
cwtl
out
ret
push
pop
ret
lea
lock
mov
popa
push
xchg
jp
icebp
push
xor
inc
pop
pop
mov
adc
xor
xlat
xor
xor
psllq
xchg
push
andb
test
cmpsl
loop
dec
sbb
stc
or
ret
sub
decl
xchg
andl
out
popf
push
std
imul
and
pop
sti
rsqrtps
jne
icebp
pop
sbbb
leave
addr16
pop
inc
xchg
in
xchg
mov
nop
out
int
add
xchg
lock
mov
sbb
adc
and
inc
ds
jne
push
inc
cltd
xor
iret
js
and
insb
std
add
pop
popa
mov
jbe
fmuls
adc
sarl
enter
imul
aaa
mov
pop
lock
push
ret
icebp
into
fbld
fidivrl
cs
insb
popf
loop
adcl
ret
jmp
cmp
mov
jge
imul
push
jp
push
mov
mov
in
in
dec
push
inc
pop
mov
mov
out
arpl
and
ljmp
jp
and
add
jecxz
repz
cwtl
roll
in
cld
loop
xor
in
ror
or
in
xor
mov
enter
mov
cltd
xchg
mov
mov
cmpsb
pop
lahf
mov
andl
fwait
adc
mov
xchg
fstps
mov
fidivrs
movsl
xor
pushf
jmp
fidivs
add
sub
jne
jle
int3
cltd
scas
int
mov
dec
stos
inc
cmp
push
loop
pop
xlat
mov
test
jbe
sti
xor
mov
fstpt
dec
add
repnz
cltd
lock
inc
add
sti
ret
ret
sbb
ss
jnp
sbb
iret
out
ja
lods
hlt
lock
lock
shrl
test
sahf
pop
adc
enter
pop
repnz
push
int3
mov
xchg
test
jg
adc
insb
test
and
test
inc
push
imul
jl
lea
add
jge
add
push
divb
and
jnp
sub
pop
nop
push
xchg
or
testl
cwtl
mov
xchg
and
xlat
pop
inc
mov
enter
addr16
mov
pop
xorb
pop
xorb
push
jp
and
dec
add
fistpl
mov
jecxz
dec
jbe
xor
push
push
ficoml
leave
sbb
mov
sub
mov
push
ljmp
jne
xchg
int3
push
mov
xlat
xor
cld
mov
test
sti
xlat
sbb
loope
call
push
loope
adc
repz
sbb
mov
out
aaa
std
or
jno
mov
pop
sub
loop
das
icebp
xor
mov
aad
add
in
sbb
out
enter
repnz
xchg
adc
mov
xchg
je
dec
jb
insb
ja
orb
jbe
dec
mov
pop
mov
push
push
and
mov
pop
and
xchg
ret
out
sbb
daa
dec
clc
push
adc
fs
decb
mov
add
jl
xor
push
xor
inc
push
ret
xor
inc
adc
and
int
stc
push
inc
fs
xchg
or
nop
addr16
sbb
sub
cmp
sarl
inc
sbb
sub
adc
out
mov
pushf
int
test
dec
sub
fistpl
dec
sbb
cmp
aaa
outsb
fisttpll
xchg
int3
in
and
ret
bound
pop
jne
test
cmp
cmp
adc
pop
mov
nop
pandn
int3
jnp
fs
add
push
mov
stc
pusha
outsb
or
icebp
sti
pop
sub
sub
leave
mov
mov
loope
sbb
imul
movsb
adc
cli
xchg
and
mov
cmp
jne
bound
sub
sarb
push
cmp
push
or
mov
or
sti
xchg
cs
jnp
inc
ljmp
pop
or
or
fcoms
cmp
fldcw
sbb
mov
loop
call
adc
lahf
jnp
insb
push
inc
mov
push
sarl
iret
ljmp
es
clc
adc
push
js
arpl
push
rep
stc
xchg
or
ss
clc
mull
add
cld
jno
sbb
add
mov
mov
fsubrp
inc
jbe
xor
stc
or
test
testb
add
test
mov
cmp
xlat
cmp
dec
dec
sub
std
std
es
cli
lock
faddl
jmp
ret
ficoml
mov
lds
mov
aas
sbb
push
and
cmp
mov
inc
pop
pop
jle
loopne
and
push
add
mov
push
pushf
push
push
and
xchg
ficoml
push
idivl
notb
mov
cld
popf
outsl
xchg
add
pop
in
dec
pop
outsl
lods
fdivp
in
mov
mov
in
dec
pusha
cld
cs
and
aas
icebp
cli
scas
lods
mov
or
iret
push
cs
sbb
sbb
dec
inc
cmpsb
pop
adc
xor
push
mov
jb
or
pop
push
sub
mov
sub
or
mov
addr16
sub
inc
scas
inc
inc
scas
shl
inc
pop
iret
sbb
adc
xchg
repnz
mov
cld
in
push
or
push
decb
mov
mov
and
cmpb
out
test
xchg
cmp
xor
mov
in
jnp
arpl
movsl
adc
mov
add
push
lcall
push
or
sti
sbbl
sbb
mov
test
in
xor
int
lea
movsl
cmp
in
jns
call
cmp
xchg
push
fldt
adc
cmp
js
cmp
xor
outsl
add
int3
cmp
data16
enter
xchg
repz
xchg
into
xor
gs
dec
loop
test
xchg
scas
leave
fiaddl
call
xchg
sbb
or
rolb
and
in
testl
std
enter
movb
or
pop
insl
pop
sbb
mov
mov
xchg
pop
jp
adc
aas
push
fisubs
in
ret
xchg
iret
xchg
gs
aaa
fimull
call
icebp
test
insl
push
push
aad
mov
orb
je
fsubs
sbb
mov
pop
or
insb
and
cld
inc
call
jl
imul
icebp
dec
adc
cld
pop
sarl
test
out
xchg
adc
push
scas
ss
bnd
out
mov
jbe
push
pop
sbb
fs
flds
bound
add
push
scas
sbb
enter
movsb
jb
icebp
imul
call
addb
sbb
lea
repz
outsl
cmp
lcall
push
icebp
adc
pop
sbb
lea
add
mov
ljmp
xchg
loop
add
stos
mov
flds
movl
repnz
in
shrb
mov
mov
insb
hlt
out
push
subb
mov
xor
sbb
push
jge
mov
cmp
enter
bound
cmpsl
ljmp
sti
lea
adc
push
adc
inc
dec
and
jmp
stos
in
add
push
lds
cmp
lock
or
stc
mov
dec
mov
fsubrl
pop
js
or
pusha
pop
push
lcall
gs
push
and
notb
repz
movsb
sbb
dec
ret
lcall
push
cmpsb
je
xchg
dec
in
sbb
pop
nop
pusha
int3
jg
sbb
jmp
mov
shrl
xchg
mov
iret
or
mov
mov
and
xchg
adc
add
dec
sub
xchg
ja
scas
jnp
sbb
das
push
mov
push
jnp
out
or
jle
outsl
fldenv
out
dec
repz
lcall
sahf
movb
sub
imull
mov
stos
dec
repz
or
flds
jle
out
fnstenv
push
jecxz
push
ret
repnz
mov
ficoml
insl
pop
fsubrs
inc
sbb
mov
leave
jae
jl
shrb
loope
out
leave
in
roll
sbb
movsl
sbb
daa
add
outsb
adcb
adc
mov
test
jl
fs
mov
in
ds
add
jl
sbb
pop
pop
mov
mov
aam
jl
int3
popa
jle
mov
cmp
lcall
push
push
pop
mov
jne
andl
les
pop
insl
test
pop
es
inc
rorb
mov
dec
in
das
sub
sbb
mov
add
in
jb
adc
daa
lret
mov
loop
mov
notl
xchg
mov
aad
lds
adc
call
es
and
stc
xchg
dec
add
pop
daa
fidivl
out
pop
or
sbb
mov
repnz
in
outsb
cmp
rorb
int
and
mov
or
and
enter
in
mov
mov
orl
pop
cmp
xor
hlt
clc
or
repnz
mov
imul
mov
and
insl
sbb
xchg
iret
add
imul
mov
sti
icebp
lcall
fistpl
int3
jo
jne
mov
outsb
or
and
or
aas
or
sbb
push
insl
cmp
inc
stos
in
ss
cmpsb
pop
jnp
mov
pop
xchg
nop
ljmp
std
mov
movsl
aad
mov
addl
jne
jg
mov
imul
add
jle
and
aam
push
into
gs
shll
aad
sub
ljmp
push
js
push
ss
xor
mov
clc
mov
lods
adc
cmp
ljmp
test
or
repz
loop
in
adc
pusha
rol
pop
inc
pop
inc
inc
aas
enter
imul
lods
jmp
mov
mov
andl
lea
test
je
les
into
xchg
push
pop
and
hlt
ja
into
popa
or
pop
jns
loope
mov
call
fdivl
in
and
sub
lcall
cltd
cltd
and
arpl
das
loop
pop
and
int3
dec
fsts
add
mov
lcall
mov
cmp
test
or
cmp
nop
jg
add
mov
mov
incb
or
pop
xor
sbb
dec
sub
lret
cwtl
xchg
mov
mov
jne
jp
push
nop
lods
mov
mov
mov
inc
pusha
xor
loope
popa
mov
fstps
mov
es
push
cmc
xchg
mov
call
jg
sahf
mov
negl
fisubrl
cltd
add
cmp
adc
inc
div
in
je
in
push
or
mov
mov
jg
sbb
into
cmpsb
stc
jb
test
mov
or
jne
movsb
ds
dec
stos
into
inc
js
pop
in
movl
aas
sub
jmp
push
xlat
add
out
jp
addr16
and
rolb
rcrb
xor
adc
sbb
jns
iret
inc
mov
ucomiss
icebp
mov
add
rcrl
pushf
ret
and
cmpsl
lcall
cmp
iret
repnz
xor
dec
sarb
movsl
lods
je
fbld
xor
scas
dec
mov
push
data16
testl
in
lahf
jns
and
mov
cmp
scas
in
jne
fdivs
aad
sbbb
jmp
sbb
jnp
jbe
loop
inc
aas
jno
lods
fwait
sbb
or
ret
sarl
xchg
test
addr16
mov
pop
push
cwtl
sub
in
jecxz
pop
lahf
fmul
in
aam
jecxz
js
lret
mov
sbb
jne
out
jle
divb
movsl
insl
cmp
xchg
addl
sbb
xchg
and
xchg
add
ds
fstl
iret
adc
pusha
jbe
popa
jae
cmpl
jbe
or
mov
add
mov
shl
iret
fstps
adcb
sti
aaa
shlb
mov
xchg
dec
jle
jmp
sbb
add
fcoml
add
pop
mov
icebp
cmp
daa
xchg
fsubl
test
sar
orb
pop
addb
ret
das
jecxz
movsb
dec
jbe
iret
or
sub
mov
test
popf
and
aas
rolb
mov
push
ljmp
ret
or
outsl
dec
or
int
dec
push
sub
pop
out
push
dec
in
adc
sahf
xchg
adc
in
jne,pt
rsqrtps
cltd
sarb
je
cs
nop
dec
mov
rcll
dec
je
jbe
es
dec
aaa
dec
sti
inc
push
mov
mov
bound
out
xchg
cli
stc
push
xor
cli
flds
push
mov
in
stos
sbb
fldcw
in
das
and
adc
insb
jge
test
fsubs
ja
dec
and
mov
push
mov
mov
stos
test
call
inc
aaa
dec
pop
lods
inc
and
clc
shrb
jmp
xchg
lock
jmp
xchg
or
mov
and
stos
sbb
fadd
lds
cmp
xchg
es
loope
les
mov
cmc
cmp
mov
xor
lret
mov
pop
rolb
add
imull
pop
popf
shl
cmp
xor
xor
mov
jg
inc
cmp
or
mov
mov
pushf
das
cmp
inc
outsb
int3
pushf
add
imul
iret
insl
add
cld
jnp
arpl
cmp
sub
cmp
ds
push
rolb
sbb
inc
add
mov
mov
and
stos
mov
ficoms
mov
fisttps
and
lods
fs
push
cltd
and
mov
stos
xchg
je
xor
ja
jno
or
xchg
push
push
mov
inc
mov
mov
out
int3
scas
cmp
and
in
lcall
out
mov
lock
mov
je
clc
sbb
cmpsl
xor
push
dec
outsl
add
jno
in
jns
mov
testl
mov
in
fwait
insb
xlat
cmpl
sbb
mov
mov
inc
xchg
stc
lret
cld
pop
mov
int3
cmp
enter
inc
insb
adc
mov
add
cmpsb
pop
sbb
in
ret
pop
pop
lock
xor
fistpl
das
mov
mov
sub
pop
rclb
movsb
scas
inc
jecxz
out
pop
lret
out
imulb
jp
loopne
mov
xchg
push
cltd
pushf
cmp
adc
fwait
xchg
ja
mov
mov
stc
pop
dec
adc
or
rcrl
push
xor
xchg
jno
push
jo
jbe
call
mov
add
dec
mov
mov
clc
jo
xorl
xchg
lret
lods
or
call
xlat
or
std
mov
mov
xor
add
mov
dec
insl
xchg
ret
popf
and
out
or
inc
lret
lea
andb
jle
dec
jecxz
sahf
and
jle
jns
popf
sarb
pop
aaa
jmp
dec
sub
lret
jl
pop
push
mov
or
sub
ret
pop
arpl
xor
adc
fiadds
in
fs
pop
push
add
insl
fcomp
jne
movsb
aas
cltd
mov
mov
hlt
into
fistpl
subl
loopne
inc
and
sub
mov
jecxz
push
xchg
jecxz
ret
imul
shr
mov
add
loope
es
cmp
ja
cmpsb
cmpsl
mov
jno
dec
fldenv
sbb
arpl
mov
xchg
lcall
mov
jmp
or
sahf
and
jnp
push
repz
sahf
push
sbb
aas
push
das
int
fsubrs
mov
pop
aad
aad
aad
push
lcall
cmpsl
cmp
pop
arpl
pop
adc
nop
movb
inc
lods
mov
das
ds
imul
inc
rcrl
in
shlb
jle
and
push
test
sbb
and
lods
hlt
in
int3
aas
jg
mov
pusha
notrack
mov
add
pushf
out
or
inc
cmp
mov
sbbb
jp
xchg
sbb
int3
les
add
mov
aam
cmpsl
test
sarl
stos
lret
out
mov
out
int
in
rolb
mov
test
cwtl
int
mov
mov
fidivrl
aam
jns
inc
mov
pusha
jmp
rdpmc
dec
es
loope
add
pop
test
sbb
pop
call
loopne
or
jno
insb
mov
stos
cmpsb
adc
test
add
pop
orl
imul
mov
jae
mov
lods
jns
push
inc
jnp
dec
push
int
cmc
cmp
std
js
lds
xchg
xor
jge
or
xor
jb
ljmp
sarb
imul
lods
jnp
repz
les
push
lcall
testb
pop
push
xor
fdivl
cmpsb
xorb
push
inc
dec
jns
mov
sbb
push
and
mov
dec
in
cli
add
cmc
sub
ret
jo
push
push
sahf
sbb
cmp
repnz
inc
push
add
lret
add
adc
push
int3
ret
cmp
cmp
dec
test
or
jmp
dec
icebp
loopne
pop
ficomps
mov
shll
popa
sub
jle
pop
outsl
jp
mov
fiadds
aas
mov
lods
sahf
lret
adc
sub
mov
lcall
jmp
out
adc
outsl
loopne
dec
std
jmp
jnp
xchg
jb
jb
lret
stc
cmp
mov
repz
dec
movsl
push
inc
sub
inc
add
cmp
lods
or
jno
lods
cmpsl
sti
xchg
pop
add
aaa
fdivrl
mov
call
iret
adc
scas
in
outsb
sub
inc
xchg
aad
lcall
icebp
jae
sub
push
clc
mov
inc
mov
dec
lds
sub
roll
add
cmp
xchg
pop
jb
bound
loop
cmp
cmp
fs
daa
adc
mov
divb
sbb
iret
fs
subl
lds
movsl
add
leave
test
sbb
loopne
dec
pushf
in
and
iret
outsl
or
test
xchg
inc
fisubl
call
jbe
in
lcall
inc
add
insb
fcomi
jecxz
sbb
add
fldenv
xchg
mov
cmp
dec
sbb
jmp
lods
aaa
mov
xlat
sbb
loopne
xor
fnstcw
or
jno
push
adc
sub
sub
cmp
dec
fsubp
jmp
add
pop
cmp
inc
imul
mov
add
dec
shll
cmp
outsb
clc
es
and
pop
push
xchg
and
pop
pop
jb
dec
les
scas
aas
xchg
xor
cmpl
dec
ds
mov
xchg
cmp
pushl
popf
in
out
das
in
fmulp
stc
stc
mov
jmp
or
loopne
out
jae
mov
xchg
cmp
jl
aam
lods
jno
mov
andb
scas
cmp
push
mov
imul
dec
mov
fnsave
cmp
and
ljmp
fdivp
sub
sbbb
mov
loope
xchg
lcall
and
notb
ja
loop
xlat
lcall
sub
add
les
int
nop
mov
testl
push
add
dec
fstps
pushf
mov
sub
and
xchg
lds
or
or
sub
je
aad
pop
xchg
pop
mov
add
or
int3
pop
mov
lcall
mov
mov
push
aam
das
mov
hlt
loope
adcb
ljmp
add
or
out
pop
lea
or
mov
mov
or
jge
cmc
mov
lock
xchg
aam
add
shlb
out
xorb
jecxz
repnz
les
push
jbe
movsl
cmp
push
sbb
stc
pop
mov
in
sbb
fcmovnu
test
out
out
push
inc
lcall
mov
adc
dec
mov
dec
cmp
stc
insb
addr16
push
sti
movsb
pushf
lea
test
enter
out
loopne
cmpsb
insb
mov
cwtl
fsts
xor
fisubs
nop
pop
cmpsb
add
mov
xchg
enter
jl
fimull
fdivrp
sbb
lahf
cli
jno
mov
rolb
mov
ret
popa
scas
xchg
pop
mov
repz
orb
jmp
mov
or
aam
iret
loope
pop
and
movl
ret
call
or
xchg
dec
mov
xor
pushf
mov
add
inc
pop
mov
jns
mov
imul
test
inc
xlat
add
or
aaa
ficoml
int
sahf
dec
push
lds
outsl
mov
adc
loopne
fimuls
dec
aad
mov
std
mov
add
popa
repnz
inc
cmpsb
lock
sub
test
fcoms
jno
pop
stos
xor
in
mov
mov
enter
leave
movsb
or
mov
adc
inc
xor
cld
push
out
pop
mov
stos
out
stos
bnd
ss
dec
inc
out
jne
cli
jge
fiaddl
push
mov
in
inc
mov
adc
loopne
push
sahf
mov
push
cld
mov
mov
xor
sbb
lret
inc
rcl
dec
and
mov
mov
jle
insl
nop
shrl
sub
xor
sub
popf
aas
adc
inc
rorl
jb
pusha
mov
cmp
jg
xchg
divl
xchg
sti
sbb
fwait
xchg
aad
lds
cmp
stos
xor
xadd
lds
jae
lret
movsb
jnp
cwtl
fistl
fildl
sbb
bound
lret
stc
mov
push
fdivrl
lahf
scas
in
sbb
repz
dec
or
jp
flds
sub
loope
hlt
mov
sahf
lock
and
push
es
or
inc
xchg
jno
pop
xor
inc
movsl
xor
cmp
insl
cltd
xor
icebp
and
dec
int
jle
jno
js
mov
push
and
cli
aas
shll
add
stc
push
add
movsl
fisttpl
jg
adc
outsb
popa
sub
add
fldcw
out
sub
aaa
cmp
test
push
mov
push
add
inc
dec
sub
push
hlt
rclb
je
cld
stos
mov
mov
sub
xchg
dec
fcmovne
das
clc
mov
fcompl
inc
adc
xchg
jbe
mov
cmc
or
call
movl
push
scas
sub
loopne
mov
lret
mov
fnstenv
fldt
pop
mov
mov
inc
dec
push
aad
add
mov
leave
int3
cs
testb
push
and
sub
mov
add
lcall
popa
sbb
pushf
xchg
dec
stos
push
push
push
adc
lret
lret
cli
adc
jge
loopne
loopne
inc
daa
dec
mov
xchg
fdivl
xor
cld
ja
jo
stc
sbb
imul
jmp
mov
clc
mov
fldcw
ficoml
jp
add
aam
mov
fwait
aas
sub
test
cltd
cli
pop
and
push
loope
cwtl
cmc
daa
arpl
data16
pop
and
xlat
pop
pop
jne
inc
bound
adc
pop
jns
fmull
sub
cli
mov
sub
rcr
daa
bound
aad
aad
jmp
cli
fisubrl
mov
add
outsb
das
adc
lea
dec
push
sub
push
mov
cmp
std
add
push
mov
mov
enter
mov
adcl
cmp
inc
xchg
mov
pop
cmc
dec
push
test
frstor
dec
mov
outsl
addr16
adc
xchg
push
mov
push
inc
mov
cmpl
cmp
mov
sub
in
jns
fisttps
repnz
das
sub
incb
xchg
xorb
in
shll
les
jbe
jo
adcb
inc
lret
mov
inc
stos
inc
cmpsl
dec
shlb
std
daa
dec
pushl
fwait
cmp
push
lcall
add
xchg
int
imul
jb
cmp
or
pop
ss
je
ficoml
out
fiadds
inc
add
cwtl
shrb
out
cli
aaa
movsl
out
pop
lods
mov
scas
scas
in
lret
push
cmp
int
xchg
mov
jp
loope
sbb
pop
mov
xchg
test
add
sub
sbb
aaa
xchg
mov
mov
xchg
mov
int
stc
ret
cs
mov
mov
in
lods
pop
xchg
cmp
loopne
jbe
push
mov
daa
pop
cli
int3
lds
mov
subb
shrl
nop
insl
mov
xor
mov
sbb
outsb
and
cwtl
movsb
sub
push
or
mov
xlat
dec
popa
test
xor
mov
jno
mov
jle
ret
out
adc
xor
push
sbb
imul
cmp
mov
leave
mov
pop
loopne
jb,pt
xchg
adc
rorl
aas
movsb
sbb
repnz
xchg
mov
jmp
mov
dec
call
shll
sbb
fmulp
mov
std
rcrl
inc
xchg
or
fdivs
pop
pop
xor
in
insl
inc
lcall
sub
pop
leave
add
xlat
pop
dec
or
xchg
sar
aam
mov
mov
lods
jns
mov
ja
fwait
stos
adc
lret
mov
icebp
enter
inc
pop
pop
adc
shl
jo
call
jp
ljmp
ret
stos
mull
cmp
cmpsb
cmp
faddl
das
mov
adc
xor
dec
jns
es
mov
enter
and
mov
mov
mov
rcll
inc
mov
pop
jmp
leave
repz
data16
jmp
pcmpeqw
lret
imul
cwtl
aas
roll
iret
sub
out
lcall
int
shll
xor
int
enter
shll
loop
addl
xor
pop
mov
test
pop
rclb
clc
out
imul
ljmp
add
inc
xlat
fcoms
nop
mov
mov
mov
lea
dec
xchg
mov
mov
sbb
pop
pop
mov
repz
je
dec
mov
jecxz
and
add
cmp
loop
negl
mov
test
push
fnstcw
cltd
xchg
dec
xchg
ret
in
adc
sbb
mov
mov
fstpl
subb
sahf
adc
fldt
dec
sub
loop
xchg
mov
push
xor
mov
lea
jle
add
mov
imul
jecxz
cmpsb
testb
cld
ret
mov
in
stos
aas
add
cli
jmp
xlat
ror
jb
stos
fdivs
jl
fdivp
and
mov
and
push
in
mov
push
mov
mov
inc
ret
mov
dec
sub
fcompl
jno
cltd
or
test
lcall
out
mov
mov
lds
push
test
in
adc
pop
xchg
mov
stos
lret
add
int3
dec
orb
add
xchg
imul
cmp
cmp
out
pop
and
pusha
xor
not
xor
adc
das
sbb
dec
and
cmp
stc
pop
jno
lret
xchg
out
mov
test
xor
adc
xchg
stc
adc
mov
popa
push
sbbb
push
cli
out
test
jno
push
out
xlat
fimuls
add
jp
inc
ja
or
add
xchg
push
popf
cmpsb
mov
scas
repnz
cmp
out
and
jl
dec
sub
cmp
mov
daa
outsl
stc
mov
jmp
and
push
add
sbb
jbe
dec
mov
dec
aam
fucomi
iret
out
jb
repnz
int3
push
movsl
scas
add
mov
rol
outsb
arpl
jns
sub
mov
sbb
dec
js
scas
cld
mov
mov
out
ret
xchg
ret
inc
imul
cltd
jbe
and
mov
fisttpl
inc
cmp
shrb
lds
mov
lcall
pop
int3
mov
mov
scas
xchg
xor
fadds
inc
pop
cmp
movsb
sbb
xor
or
xor
xchg
fdivrs
rcr
fisubs
imul
xor
enter
sub
loop
xor
sub
sahf
xor
les
jno
and
adc
push
ja
loop
jge
dec
push
jp
aam
iret
xchg
mov
or
inc
dec
out
outsb
pop
mov
mov
js
cmp
loope
adc
jbe
cmp
daa
out
cmpsl
test
jbe
and
fistpl
inc
in
in
dec
cmc
sbb
cli
lahf
dec
arpl
sub
enter
pop
dec
pop
stc
jns
notl
xchg
mov
lret
mov
xor
clc
pushf
mov
test
pop
xchg
clc
ss
dec
mov
mov
test
sbb
xchg
mov
lahf
jmp
push
mov
imul
sub
mov
push
pop
add
adc
jg
mov
or
mov
lcall
scas
mov
and
inc
imul
rol
xor
cwtl
ret
mov
inc
pop
mov
loop
jmp
fmull
sbb
in
pop
push
loop
int
pop
notb
mov
mov
mov
inc
xor
aaa
fucomp
sub
cwtl
lret
sub
push
mov
test
mov
mov
cmp
jbe
pusha
sub
mov
sub
inc
fidivrl
jnp
sbb
sbb
mov
sub
pop
in
rcrl
inc
mov
repnz
ret
data16
js
fdivrs
pushf
adc
mov
xchg
mov
xchg
or
loop
xchg
sbb
test
xchg
push
cmp
shrl
mov
lods
or
dec
push
fldcw
lods
lret
testb
inc
imul
xchg
inc
pop
add
or
cwtl
fs
mov
adc
add
and
inc
ret
pop
stos
lods
and
scas
and
out
lahf
or
xlat
shll
adc
rcl
test
repz
pop
je
fstpt
ja
scas
xor
pop
out
testl
or
loop
adcl
mov
outsl
int3
push
cmp
push
pop
xor
icebp
lret
pushf
push
lret
cmc
adc
pop
lahf
mov
and
or
mov
sbb
test
fs
pop
xchg
inc
inc
mov
fsubp
out
fldlg2
mov
js
pushf
lahf
mov
aam
imul
scas
or
push
mov
xchg
xor
xchg
sbbl
mov
push
mov
sub
mov
jbe
jp
shll
mov
and
test
pusha
pop
leave
xchg
push
fisttps
pop
cmpb
dec
int
mov
dec
cmp
xor
daa
jp
add
addr16
je
dec
lock
aam
xor
aaa
ja
imul
pop
out
xor
sbb
add
insl
repz
dec
push
data16
les
ret
sbb
and
test
pop
addr16
loop
js
and
lock
mov
addr16
test
sub
nop
aaa
mov
dec
adc
cmp
adc
notl
pop
sub
fcmove
xorb
rcr
xor
mov
cmp
ficomps
add
pop
jl
add
lcall
pop
inc
rolb
mov
std
ss
clc
xchg
pop
cltd
loopne
xchg
je
adc
lea
mov
inc
orl
insb
inc
and
test
push
cmpsl
or
bnd
mov
xor
push
movsl
aam
push
xor
pop
and
mov
sarb
push
imul
stos
insl
jns
cmpsb
pop
adc
jb
fsubp
pushl
fucom
push
jg
xor
push
pop
mov
int
cmp
jo
xor
es
imul
mov
mov
pop
sahf
cmp
mov
mull
scas
test
roll
fsubr
cld
pusha
sub
mov
cli
lock
jb
cs
xlat
callw
mov
addr16
inc
xchg
ss
lds
cltd
push
lcall
call
or
pop
out
add
fs
aaa
lods
add
jg
push
stos
sbb
push
repz
and
jne
dec
mov
adc
fucomp
add
imul
xchg
stc
mov
jle
dec
fcom
notl
xor
repnz
icebp
out
push
ret
inc
push
cli
xchg
cld
add
aad
por
jmp
sbb
mov
dec
push
and
int
cmp
xor
push
dec
sbb
add
popa
dec
push
shlb
xchg
fidivs
rorl
scas
push
pop
enter
pop
inc
fs
into
pop
sub
or
cmp
cmp
fisttpl
mov
ret
mov
mov
pop
mov
in
faddl
add
mov
sbb
push
sub
repnz
adc
cwtl
mov
sbb
lods
xor
popf
pop
jle
subl
shl
into
mov
pusha
insb
mov
movsl
sub
in
test
rorb
ja
outsl
lret
lret
cwtl
and
clc
mov
push
mov
mov
push
aaa
push
sarl
add
dec
xchg
pop
cmp
dec
mov
or
mov
xchg
in
lea
mov
adc
push
cmp
femms
movsl
dec
subb
aad
sub
test
fistps
or
lods
addr16
scas
dec
mov
ror
clc
mov
daa
int
cmp
pop
pushf
dec
xchg
mov
dec
mov
lock
call
mov
mov
sub
adc
adc
data16
push
dec
stos
and
or
inc
jmp
loopne
shrb
sarb
out
or
ss
xchg
test
aaa
stos
lock
test
pop
mov
jge
push
in
cmpsl
pop
das
or
sahf
xchg
jae
adc
test
out
xor
enter
push
and
negl
jb
or
xchg
std
mov
jns
mov
sub
mov
mov
aad
orb
popl
mov
push
cwtl
dec
push
push
iret
int3
test
pop
mov
cli
or
jmp
add
arpl
leave
outsb
std
movsb
outsl
dec
xor
jbe
pop
es
or
jle
in
mov
jne
das
or
cs
sub
jl
push
mov
mov
sub
xor
hlt
inc
lcall
jl
mov
mov
cmp
sub
stc
jae
xlat
adc
xor
addr16
test
mov
and
repnz
cmp
pop
xlat
lds
je
inc
sub
jnp
sti
sub
xchg
lahf
clc
add
icebp
lahf
dec
xchg
mov
mov
ljmp
adc
sbb
sbb
clc
add
xor
fisttpll
push
sbb
lds
mov
inc
out
mov
push
mov
imul
int
pop
out
or
or
lea
aad
imul
outsl
cmp
stc
lds
dec
shrl
sbb
mov
bound
outsl
push
loopne
movsl
aaa
test
cmp
cmp
sahf
mov
xor
pop
sbb
jmp
outsb
mov
mov
shrb
movsl
dec
scas
push
inc
pop
xlat
mov
lods
xor
lods
cmpsb
fadds
xor
push
push
lea
jb
mov
lods
ret
enter
or
movzwl
pop
shll
je
test
add
mov
and
xchg
adc
stos
lea
xor
shlb
gs
or
jne
xchg
scas
imul
mov
in
add
push
sbb
call
adc
sbb
inc
xchg
andl
cmp
push
sti
inc
sbb
hlt
rol
mov
cmp
dec
sbb
sub
push
sti
daa
mov
std
mov
je
sub
sub
pop
lret
jns
pop
pop
adc
inc
sbb
aad
pusha
shrb
lds
pop
lods
jge
sbb
aaa
pushf
out
push
sbb
enter
pop
push
test
popa
cli
ljmp
mov
mov
jne
daa
pop
or
lock
jns
inc
adc
ror
pop
loop
pop
mov
adc
adc
adc
cmp
push
out
fnsave
jbe
sub
pmaxsw
mov
jp
cld
sarl
xchg
pop
sub
cmp
xor
and
out
push
pushf
insb
pop
mov
add
cld
mov
mov
mov
mov
add
gs
repz
jmp
sar
rcll
add
jnp
push
lods
push
mov
stc
mov
add
push
xchg
push
mov
cmp
gs
push
or
pop
lret
insb
icebp
mov
mov
mov
fsubrs
or
rcrl
cmpsl
fldt
jp
adcl
xchg
cmp
cmp
rep
data16
mov
add
fidivrs
stos
cmp
ds
inc
cwtl
adc
add
mov
ret
ja
bound
sbb
push
push
jnp
sub
add
mov
cld
pusha
adc
shll
sbb
push
imul
or
bound
mov
ja
dec
mov
cmp
add
push
jbe
mov
push
rcrb
imul
pushf
pop
add
icebp
xor
lock
in
sub
enter
pop
push
pushaw
jb
movl
pop
loopne
leave
fwait
cli
in
push
out
sub
push
mov
cmp
pop
xor
stos
shlb
lock
sbb
push
lods
test
xchg
mov
add
fs
cmp
test
mov
dec
stc
out
ja
or
loop
dec
jecxz
jno
loopne
notb
inc
xchg
ret
cwtl
aad
iret
call
movsb
repnz
clc
sub
mov
mov
pop
add
or
call
mov
or
and
inc
sbb
or
push
sbb
cmpsl
sbb
fwait
scas
repz
or
cmp
mov
ja
sbb
sub
and
nop
jecxz
ret
scas
cmp
std
ret
ljmp
faddl
icebp
jg
xor
or
imul
outsb
and
test
mov
std
pop
pop
cmpsb
cmpsl
lods
out
pop
movsb
mov
in
je
cmp
mov
dec
mov
fcmovnbe
adc
sbb
shl
mov
clc
inc
popa
xchg
sbb
sbb
push
inc
out
and
out
or
test
ja
out
cmpsb
xchg
dec
dec
add
imul
arpl
inc
ds
cli
xchg
movsb
xor
lcall
sbb
out
ret
popf
ds
add
xchg
mov
cltd
inc
in
je
jbe
daa
ds
sbb
xchg
xor
fwait
stos
adc
add
lds
cmp
test
mov
jne
push
test
push
adc
jae
jae
mov
inc
out
mov
xchg
popf
xchg
pusha
imulb
pop
rorl
cwtl
outsb
push
shll
push
xor
imul
mov
jns
data16
xor
sbb
cmp
int3
sbb
out
repz
add
sub
insl
jmp
xchg
jp
cmpl
cltd
mov
xor
mov
sub
pop
daa
pop
es
push
scas
dec
ds
mov
xchg
xchg
in
or
arpl
repz
movsl
jbe
dec
xor
out
fldt
pusha
insl
xor
aad
sbbl
out
or
xlat
idivb
int3
add
dec
test
test
pop
cli
addr16
not
out
mov
test
and
or
scas
rcl
push
mov
imul
xor
inc
dec
push
sub
mov
imul
cmp
test
scas
push
fwait
mov
add
outsl
adc
lds
int
pushf
lcall
sbb
cmc
cwtl
jne
ds
mov
push
sti
movntq
adc
lock
pop
mov
das
push
sbbb
dec
repz
icebp
movsl
aaa
imul
fwait
outsl
mov
cwtl
push
xor
mov
push
sbb
push
arpl
push
pop
xorb
fs
inc
stos
jl
mov
cld
push
inc
cmp
icebp
jecxz
cld
lret
pop
pop
cmp
mov
enter
call
sahf
push
mov
mov
mov
test
dec
in
int
push
sub
lret
pop
mov
shlb
icebp
mov
lods
fst
enter
lret
test
pop
jl
lahf
cmp
fucomip
fisubs
movsl
xor
lret
cmp
js
dec
adc
mov
lock
lods
mov
cmp
and
dec
or
in
push
clc
std
call
add
mov
sarl
repnz
out
push
ja
push
add
stos
test
adc
sub
xor
stc
adc
in
js
paddusb
inc
pop
stos
pusha
sub
adc
bound
sbb
mov
jge
push
inc
jl
xorb
lret
mov
sbb
adc
and
test
add
adc
lret
pop
jle
loop
pop
add
jge
cmp
xchg
adc
in
mov
jge
pushf
push
mov
mov
out
pop
cmp
adc
sbb
mov
or
add
xchg
inc
mov
push
mov
add
pushl
jae
sub
xor
cmp
ds
cmpsb
adc
fildl
adc
jmp
dec
fwait
shl
pop
je
push
movsb
or
jb
xor
mov
filds
bound
in
inc
popa
lea
arpl
test
pop
or
test
outsb
ljmp
sub
and
xchg
ffree
pop
arpl
jae
cmp
jg
inc
lahf
cmc
icebp
cmp
mov
or
push
dec
or
mov
cmp
cwtl
imul
or
mov
mov
je
cltd
sarb
lcall
and
mov
add
sub
scas
lock
nop
out
pop
adc
pushf
outsl
daa
sbb
in
call
mov
hlt
sbb
xchg
je
mov
xchg
shrb
sub
sarl
lret
mov
adc
mov
jmp
enter
push
mov
fwait
cld
insl
aam
and
cmpl
adc
push
and
fndisi(8087
sarl
pusha
addr16
mov
pop
add
inc
out
sbbb
pop
shll
jl
addb
mov
aas
mov
pop
inc
mov
stc
mov
aad
cmp
ja
imul
pop
shl
dec
bnd
fsts
sub
shrb
insb
aam
cmp
xchg
cmp
push
les
pop
je
xchg
aam
mov
movsb
call
mov
cmpsl
outsb
sbb
dec
dec
cltd
clc
mov
sahf
lods
ret
icebp
fistps
mov
jl
xor
test
mov
cmp
pop
outsb
insb
and
stos
xchg
and
das
loope
int
add
push
mov
shrl
jne
fcomps
scas
lea
push
movl
cmp
mov
inc
popa
out
jmp
int3
fidivs
es
clc
jbe
jae
ss
push
scas
int3
cmp
xchg
fucomip
fistl
cld
inc
jae
lods
xchg
andl
daa
add
jg
push
dec
mov
add
inc
loope
es
xchg
cltd
lcall
mov
cmp
sub
adc
mov
mov
or
in
add
cmp
jmp
dec
sub
push
or
inc
shlb
aam
inc
icebp
cltd
clc
mov
cmp
clc
jmp
call
out
cltd
sbb
mov
arpl
cwtl
lds
push
mov
insb
sahf
xchg
adc
push
hlt
inc
cmp
fdivrs
aaa
dec
test
pop
fimull
and
out
xlat
ret
jne
adc
mov
push
rorb
shlb
mov
xor
into
pop
sti
dec
jge
push
repnz
dec
adc
or
mov
ret
mov
xor
lret
pushf
and
js
jo
js
das
sbb
into
icebp
mov
xchg
and
push
testl
and
mov
repnz
arpl
es
xchg
rol
lds
inc
or
lahf
adc
inc
mov
and
mov
imul
mov
jae
push
je
sub
es
das
fwait
xor
pop
dec
pop
adc
bound
movsl
adc
and
push
ret
outsb
scas
loopne
lods
sbb
pop
imul
mov
inc
rclb
test
xchg
mov
xor
fnsave
adc
test
add
sahf
mov
mov
pop
pop
cmp
repnz
jle
adc
nop
sbb
mov
xchg
adc
jae
rolb
mov
enter
mov
push
pushf
addr16
push
cs
daa
psadbw
stos
ss
mov
jmp
pop
test
mov
xor
jns
sub
jg
cmc
lcall
adc
ret
aas
aaa
mov
adc
inc
out
lcall
cmp
cmc
subl
add
adc
push
sub
pop
jbe
adcl
jmp
test
inc
push
stos
aaa
sbb
add
mull
xor
or
iret
xor
daa
adc
push
leave
lret
mov
mov
cmp
or
cmp
fcmovu
dec
popa
cltd
lods
mov
stos
in
cld
movsl
sub
lods
adc
adc
dec
adc
mov
std
test
push
aam
out
mov
lods
cmc
add
pop
cli
orb
inc
sub
xchg
jle
xchg
add
xor
gs
pop
jecxz
cltd
ret
push
aad
imul
aam
jp
insl
fdiv
dec
stos
sahf
xchg
and
and
xchg
fstl
sti
xchg
and
xor
test
jo
ret
rcrl
sub
rorl
out
adc
xor
mov
test
lcall
mov
mov
or
cmp
dec
inc
xor
std
loope
insb
sbb
adc
mov
mov
sbb
sarb
test
pop
push
call
adcb
lods
incl
movsb
shll
in
fwait
sub
mov
lcall
or
dec
xor
or
inc
adc
fcomps
lret
cltd
jecxz
inc
xchg
jo,pt
jae
dec
jno
mov
mov
loope
jae
mov
stc
push
bound
pop
push
mov
icebp
and
dec
rolb
cmp
std
sub
adc
xor
int
hlt
outsb
or
dec
sbb
sarl
ds
mov
push
cli
dec
pop
mov
out
mov
cmp
dec
mov
sbb
cltd
and
arpl
dec
push
ret
jecxz
adcl
jg
jno
cs
sbb
daa
or
iret
pop
lret
inc
mov
fistpl
test
and
sub
lret
icebp
stos
push
fcmovnb
jl
sbb
inc
cltd
sahf
inc
es
cmova
insl
and
and
mov
jo
push
add
aaa
sbbb
gs
xchg
and
movsb
jno
cmovno
lret
mov
scas
sarl
xor
out
add
xor
or
mov
mov
pop
pop
pop
cmp
mov
lret
inc
jne
pop
mov
sub
sbb
jb
lods
sbb
add
clc
adc
dec
popa
push
enter
sub
pop
jp
mov
dec
mov
fwait
jnp
mov
xchg
adc
mov
iret
or
cmp
pushf
lods
sar
mov
push
jbe
pop
lods
hlt
sub
lar
and
rolb
mov
leave
sti
sub
mov
ds
mov
jmp
mov
push
pop
jp
jnp
in
xor
adcb
adc
push
faddp
loope
lea
cmp
mov
ljmp
sahf
and
sti
cltd
jo
jecxz
jb
adc
ret
push
mov
aaa
cmp
xor
and
sbb
mov
ret
jo
cmp
adc
or
bound
dec
addl
std
push
frstor
cmp
inc
aam
pop
sub
fiadds
inc
aas
pushf
and
faddl
lahf
test
dec
xor
mov
pop
inc
icebp
push
mov
imul
pcmpgtb
sbb
inc
or
ds
lea
test
adc
rcrb
or
push
mov
fnstsw
lret
jbe
add
mov
cmp
jb
aas
mov
or
imul
jecxz
mov
sub
inc
pop
in
ja
test
xor
pusha
and
inc
push
push
pop
imull
adc
lds
jbe
cli
leave
pop
loope
mov
jecxz
lahf
xchg
sbb
test
bound
aas
mov
xchg
sbb
lret
mov
lahf
sbb
sbb
pushf
lock
cmp
in
popf
sub
xor
into
out
aas
gs
mul
gs
lret
sbb
push
mov
mov
and
popa
imul
ret
pusha
xchg
xor
fcompl
insl
sub
lock
loop
pop
cmp
jecxz
movsl
or
dec
add
aad
cmpsl
sub
icebp
cli
leave
push
ret
jg
inc
push
jmp
adc
adc
es
insb
add
dec
lret
inc
movsb
and
jno
adc
movsl
pop
lret
pop
pop
insl
sbb
pop
jb
shr
mov
mov
mov
push
add
leave
outsb
push
fldcw
pop
icebp
pop
cs
adc
test
mov
fistl
ds
insb
loope
pushf
cmpl
aas
cmpsb
test
lret
sub
aad
out
faddp
cmp
mov
stos
push
mov
lods
pushf
stc
incl
inc
ret
mov
test
repnz
andb
lahf
incb
stos
push
mov
dec
out
xor
movsl
xchg
xor
push
dec
lret
xchg
into
popf
jle
xor
lods
jmp
push
add
lock
pop
cmpsl
sbbl
icebp
lahf
scas
scas
or
jne
push
dec
sbb
add
xor
adc
xchg
into
in
loope
out
in
ss
pop
scas
cmpsb
push
aaa
or
jl
cmpsl
lods
rcrb
adc
inc
ffree
xor
mov
sub
idivb
sub
xor
pop
and
movsb
inc
pop
lret
pop
dec
ss
inc
jno
sbb
xchg
adc
daa
dec
mov
xor
je
push
add
test
jecxz
mov
sahf
jecxz
pop
adc
leave
push
nop
pop
pop
enter
subl
jecxz
sub
sbb
add
popf
push
fwait
ret
call
jbe
arpl
iret
lret
arpl
cld
xchg
add
mov
dec
mov
movsl
shl
sar
lahf
add
sub
mov
lds
fistpl
xchg
loopne
inc
push
push
jle
fistps
pop
fcoml
sbb
adc
aaa
pop
pop
sub
das
mov
cltd
jae
dec
inc
add
push
pop
jecxz
cmpsl
das
lods
push
negb
mov
enter
les
sub
repnz
jne
mov
sub
dec
cwtl
lahf
push
cmp
and
jmp
icebp
imul
gs
mov
out
sarl
xchg
cmp
sbb
stc
test
mul
mov
push
xchg
mov
xor
push
stos
lock
or
jp
das
lods
push
jmp
imul
pop
xor
fs
push
mov
dec
jmp
sti
xor
dec
ja
cmc
in
stos
add
sbb
ja
cwtl
xor
push
push
rorb
rolb
arpl
jg
or
clc
and
push
push
mov
inc
dec
int3
loope
add
push
lods
movsl
sbb
sub
and
xchg
out
add
mov
leave
jg
pop
xchg
sbb
rolb
clc
leave
imul
cmpsl
and
add
push
jl
lret
jae
add
orl
mov
cmp
fmuls
call
pop
cmp
push
mov
out
push
pop
in
mov
insb
inc
shrl
jmp
push
and
popf
xlat
push
push
rcrb
out
das
out
mov
mov
dec
xlat
lea
or
or
ret
add
inc
lret
test
cmpsb
scas
aaa
xor
mov
das
insb
inc
in
repnz
jp
mov
pop
stos
sarb
push
mov
daa
pop
cmpsb
inc
sti
lcall
push
xor
shrb
into
dec
inc
je
jbe
rol
lret
inc
cwtl
out
push
movsl
mov
add
add
rcrb
or
adc
in
pusha
dec
repz
cmp
xchg
add
mov
dec
jle
or
aad
inc
scas
ljmp
imul
xchg
repz
jecxz
or
cmpsl
xor
and
jge
inc
aaa
je
and
push
lods
bswap
jg
in
scas
stos
bnd
stos
scas
mov
cs
lods
xor
leave
pop
lret
xor
mov
dec
sub
outsb
aad
std
jmp
shll
dec
in
mov
popf
or
sub
je
pop
outsb
aad
push
dec
push
outsb
pop
xlat
mov
mov
rolb
and
dec
pop
nop
mov
mov
jecxz
cmp
bound
inc
pushf
xchg
mov
imul
lods
jl
popa
mov
shrl
jb
pusha
lds
jno
sbb
pop
ret
aas
aam
lret
adc
pop
ljmp
div
pop
xor
dec
mov
xchg
outsb
mov
dec
lea
jl
repnz
add
out
add
lret
xchg
fistpll
sti
inc
test
push
arpl
pop
popa
fadd
xchg
push
cmc
fisubrl
popf
insl
push
fsubrl
clc
or
fisubrl
popf
call
pop
testl
add
inc
mov
testb
pop
imul
in
loope
mov
cs
or
xchg
sbb
push
fadds
inc
popf
addr16
mov
movsb
xchg
or
dec
or
inc
fmuls
jg
and
rcll
jp
pusha
mov
add
fs
fstpl
push
pushl
aas
mov
fmul
sbb
pop
lock
mov
mov
jp
jmp
mov
inc
pcmpeqb
shlb
mov
lock
jl
and
insb
repz
inc
mov
js
add
fists
mov
mov
popf
in
mov
mov
dec
fwait
stos
mov
out
fs
xor
mov
imul
cmp
std
outsl
cwtl
pop
pop
add
xchg
movsb
push
sub
xlat
imul
add
dec
mov
mov
pop
mov
cmp
mov
test
jnp
aaa
int
loop
shll
mov
mov
pop
xor
cmp
inc
int
fwait
pop
ret
mov
jl
or
mov
in
stc
xor
adc
fwait
and
orb
mov
pushf
aaa
mov
push
or
std
xor
sahf
stos
cmp
sbb
pop
xchg
shl
lcall
cmp
add
bound
test
in
mov
inc
or
mov
rcl
cli
xor
fsubr
cmp
pop
imul
xor
aaa
in
pop
xchg
jns
xor
sbb
pop
xor
negl
les
mov
in
call
sbb
mov
inc
mov
popf
cmc
aas
in
xlat
negl
xchg
cli
or
or
jae
add
popa
fst
jno
sbb
aam
ss
adc
std
push
hlt
inc
or
mov
in
out
out
mov
mov
dec
shll
xchg
fwait
lds
sbb
xchg
ds
ja
cmc
dec
xchg
js
inc
mov
btc
ja
daa
lods
mov
cmpsb
es
lods
cmpl
adc
leave
scas
fstl
add
jmp
pop
nop
xchg
ljmp
aad
jo
push
jns
pop
push
cmp
add
fdivs
sbb
pushf
insb
leave
mov
cmp
mov
or
xchg
outsb
je
lock
cmp
inc
fisttps
mov
xchg
loopne
push
pop
into
jmp
xchg
fnstcw
jecxz
sub
xor
jmp
stos
insb
jg
lods
test
lods
cli
inc
and
push
stc
xor
pop
mov
add
addr16
popf
sahf
mov
inc
rorl
adc
or
adc
sbb
test
dec
gs
cmpl
pop
adc
and
push
out
add
jb
dec
push
and
in
insl
in
into
xchg
mov
or
jg
jae
leave
push
push
xchg
and
pop
or
fnsave
sub
sbb
jp
push
out
jnp
xchg
stos
adc
arpl
ss
imul
xchg
xchg
sahf
ss
call
mov
popa
mov
lret
adc
fsubrs
es
adc
xor
stc
inc
dec
sbb
shr
sbb
sbbb
fstl
je
sub
lods
adc
and
xchg
xchg
mov
insl
jnp
shlb
mov
lahf
pop
xchg
jecxz
cmp
mov
loopne
cld
xor
mov
ja
test
mov
cmpsl
out
or
xor
jmp
jns
in
adc
xchg
mov
mov
pop
gs
fimuls
inc
mov
testb
aad
push
inc
nop
add
out
xchg
xchg
test
push
das
imul
add
push
ja
fnsetpm(287
sti
push
add
loop
lock
fimuls
pop
mov
add
call
icebp
out
xchg
je
cltd
or
jmp
cmpsl
sub
fidivrs
sbb
fmul
and
adcl
cld
xor
mov
push
and
push
sbb
jno
es
adc
mov
push
add
sub
imul
jle
push
mov
push
mov
xchg
outsl
in
out
sbbl
fcomp
pushf
xor
neg
dec
rorl
in
inc
cmc
or
push
mov
sub
nop
cmp
or
lret
inc
dec
push
ljmp
lock
xor
mov
cmpsb
out
pop
sub
int
dec
mov
cmpsb
jo
rcr
pushf
bound
dec
mov
cmp
cs
ja
jno
stc
notl
sbb
loope
and
jno
ljmp
fildll
fldcw
and
ss
mov
fidivs
push
cmp
test
enter
mov
pop
push
add
cmp
sub
xchg
jns
mov
cld
mov
out
sahf
and
es
int3
stos
imul
push
dec
mov
divb
fnstcw
mov
jl
sub
jmp
pop
icebp
sub
inc
pop
jae
inc
loope
imul
popa
out
push
pop
mov
jmp
mov
movsl
sbb
push
insl
sbb
lcall
addr16
add
or
fsubrs
fmulp
or
das
cmpsb
in
cltd
push
in
adc
call
in
orl
enter
mov
jg
add
sbb
jbe
inc
mov
mov
push
je
mov
dec
pop
xor
pop
pop
andl
or
push
js
loop
push
cwtl
add
push
mov
sarb
int
hlt
cmpl
les
xor
and
pop
push
mov
data16
push
scas
mov
cltd
test
jno
cmc
js
jmp
cmp
or
xchg
lahf
cwtl
sahf
ljmp
fs
pop
mov
pop
and
bound
sub
sub
xlat
aam
lods
dec
xchg
movaps
pop
std
js
sub
outsb
pop
shrb
add
mov
cmp
jne
mov
mov
jb
inc
xchg
stos
cs
gs
dec
inc
cltd
hlt
mov
sub
cwtl
push
mov
push
negb
scas
aam
test
in
sti
fldenv
mov
sub
repnz
add
mov
mov
pop
xchg
lds
sbb
sbb
loop
cmp
call
push
in
dec
adc
inc
mov
call
adc
aad
jnp
lret
push
inc
jle
pop
dec
stos
pop
mov
imul
pop
inc
or
xchg
in
repnz
xor
dec
push
jae
mov
inc
imul
pop
mov
out
je
xchg
fimuls
push
mov
jmp
xlat
xchg
sarb
dec
inc
js
ljmp
xchg
sti
and
adc
inc
adc
mov
mov
jg
mov
addr16
aaa
adc
xor
jle
enter
xor
sahf
inc
mov
int
jbe
out
sub
fists
pop
insb
add
inc
inc
mov
mov
je
rcl
add
popa
mov
or
dec
lods
pop
pop
pop
push
stc
subb
jbe
cli
sbb
adc
pop
dec
inc
mov
gs
ret
adc
mov
add
xor
int
jmp
fmuls
rorb
gs
add
push
popf
add
hlt
aas
sub
mul
int
dec
adc
pop
mov
add
push
cmpsb
sub
mov
cltd
dec
inc
add
push
mov
rcrb
jne
adc
mov
sti
movsl
mov
xchg
cmp
cld
xor
or
icebp
push
mov
xchg
jmp
or
pop
cmp
inc
imul
jns
xchg
cmc
in
push
inc
sub
loop
test
mov
push
push
push
mov
jnp
call
add
jb
sub
push
shlb
scas
bnd
stos
cli
dec
sahf
inc
test
mov
cld
adc
mov
jns
and
arpl
pop
pop
stc
push
ss
and
pop
test
or
fildl
jb
sbb
xchg
sbb
std
pop
sbb
cmc
dec
loope
jb
adc
push
or
inc
mov
jno
add
insl
fsubrp
jne
fistpl
stc
cmp
fdiv
loop
popl
sub
inc
cltd
inc
stc
out
xchg
outsl
ss
dec
mov
pop
cld
ret
sub
loop
xchg
sub
rorb
pop
pop
xor
cmpsb
pop
mov
and
pop
pop
ret
jo
es
imul
xchg
sub
xchg
jle
out
adc
cmc
lods
or
pop
in
loop
scas
ja
testb
sahf
js
jns
lock
push
bound
ss
sub
cmp
inc
jno
cld
sbb
test
mov
and
negb
adcl
xlat
cmp
mov
dec
nop
out
mov
and
mov
testl
cmp
pushl
xor
push
fs
in
cmpsl
movsl
cmc
inc
rclb
jb
cmpsl
cmp
jbe
repnz
lcall
add
rclb
jp
add
xchg
mov
xor
push
push
movsb
out
dec
pop
daa
sbb
xlat
lret
repz
xor
xor
xorb
roll
push
pop
push
mov
jns
repz
imul
clc
bound
mov
mov
push
cld
out
test
test
loopne
rorb
add
lods
add
lret
aas
and
jle
insb
fisttpll
sbb
push
or
jae
jle
out
jge
test
jmp
sarb
jno
call
fimuls
ret
imul
adc
cmpsb
inc
sbb
and
push
sbb
sub
sub
pop
pusha
ret
loopne
sbb
ja
ljmp
out
xor
sub
insl
insl
outsb
lahf
add
xchg
push
jge
sub
movsb
adc
orl
lods
pop
adc
and
inc
add
mov
pusha
push
jae
dec
bound
or
add
mov
hlt
mov
stos
pop
cmpsl
jne
cmp
movsl
mov
sbb
mov
insl
nop
pop
mulb
mov
xchg
inc
cmpsl
push
clc
xor
int3
mov
dec
sbb
cs
lds
cmp
mov
rorl
push
dec
stos
gs
adc
arpl
cmp
nop
test
ss
sub
and
mov
fcmovnb
sub
sbb
pop
loop
std
test
jns
xchg
xor
cmp
popf
cmp
and
inc
mov
fsubrl
popa
out
mov
sbb
adc
js
inc
pop
hlt
sbb
xchg
fwait
movsb
fwait
and
pop
shlb
popa
sar
adc
lods
cmp
ds
add
stos
sub
and
sbb
cmp
xchg
div
cwtl
jnp
in
pushf
sub
mov
cmp
inc
push
stc
mov
push
inc
inc
ss
jmp
and
and
ja
xor
xchg
lret
lods
add
iret
pop
ds
lea
data16
pop
or
imul
jns
inc
fdivl
repnz
pop
and
movsl
adc
xor
addb
jmp
mov
mov
xchg
data16
in
push
jnp
scas
mov
das
cld
xor
adc
and
xor
fnstsw
imull
gs
pop
adc
add
ficoml
ljmp
mov
mov
pop
pop
jb
outsb
mov
mov
or
jo
mov
adc
xor
cmp
int3
push
push
sub
sahf
in
adc
cmpl
sub
push
mov
add
mov
movsb
mov
subl
adc
and
test
ret
jmp
or
pop
xchg
dec
int3
xor
into
adc
mov
mov
out
imul
cmp
and
cmp
ds
sub
xchg
scas
sti
sub
scas
test
repz
add
inc
lcall
shrl
ljmp
fisttpl
or
in
sub
lahf
xor
sub
sub
imul
mov
fs
push
xorl
sarl
or
lods
jae
push
stos
lods
imul
bnd
inc
sbbl
sbb
xchg
cmc
popf
xor
push
add
xor
lds
jge
mov
jb
adc
add
imul
and
out
repnz
mov
or
inc
jl
repnz
jo
cltd
ljmp
shlb
loopne
inc
adc
push
add
arpl
mov
mov
pop
sbb
inc
gs
inc
scas
lds
in
mov
or
ret
mov
push
cmp
stos
int3
mov
aam
ret
test
adc
cmp
movsl
adc
add
push
aaa
add
or
adc
lea
js
inc
fmuls
ljmp
aam
push
sar
movsb
loope
sarb
or
lods
mov
mov
in
mov
sub
loopne
xchg
dec
ja
test
adc
pushf
fdivrl
scas
iret
js
push
sbb
cmp
lds
pop
mov
mov
and
lods
out
mov
out
iret
int3
lods
or
out
aas
cmp
rcr
cwtl
or
mov
int
outsb
popf
in
loop
sub
and
adc
outsl
xchg
dec
sbb
adc
adc
and
aas
add
jg
js
fldcw
mov
xchg
pop
mov
js
insb
cmp
addr16
add
leave
cmpsl
add
stos
pushf
fisubs
sti
mov
inc
mov
jge
or
fs
sti
mov
loop
inc
das
mov
sub
leave
das
test
dec
cmc
mov
cmpsl
in
loop
push
insb
dec
mov
fcomps
test
cmp
out
adc
loop
sahf
xchg
sahf
sub
cmp
push
mov
les
xchg
pop
sbb
push
movb
subb
fdivl
add
push
ljmp
cwtl
sbb
sahf
aas
rep
jo
mov
nop
mov
adc
pop
sbb
lods
enter
into
add
and
incl
in
mov
stc
mov
movsl
or
ror
mov
andb
pop
adc
push
repnz
adc
dec
aaa
cmc
pushl
mov
push
into
mov
out
inc
popa
push
repz
jbe
nop
insl
test
jno
add
icebp
fmul
dec
lcall
push
popaw
ficoml
stos
sbbl
out
repnz
push
movsb
mov
sub
cld
popa
cmp
sahf
or
std
xlat
dec
add
das
cmpsl
lahf
push
inc
or
jae
jl
sbb
mov
repz
jne
adc
inc
add
std
in
jnp
lods
jnp
test
movsb
rcll
adc
inc
les
jb
sub
sbbl
test
xor
dec
not
test
sti
jnp
jp
pop
movsl
dec
or
mov
clc
or
add
test
push
imul
push
fs
hlt
adc
lds
jb
shr
jno
mov
mov
xchg
imul
loope
lock
fwait
jnp
ret
jge
stc
neg
mov
mov
int3
cmp
adc
pop
mov
jae
push
mov
pop
jmp
shl
pop
and
or
decb
xchg
add
pusha
int3
sbb
rol
adc
scas
cmpsb
orb
imul
jp
fbstp
push
dec
xor
jbe
rcll
mov
lcall
sub
out
fwait
fwait
out
dec
inc
clc
xchg
cmp
xchg
jb
insl
mov
cmp
adc
int
das
jnp
je
aam
adc
mov
mov
jo
jp
outsw
jnp
aad
pop
or
inc
push
cmc
mov
fwait
cmpsl
cmpsl
push
out
aas
adc
out
jno
mov
aam
js
jg
repz
sbb
clc
mov
add
aam
icebp
or
mov
jo
loop
repnz
and
lock
sbb
mov
inc
jmp
sbb
push
iret
lcall
inc
pushf
inc
aas
aad
fstps
push
shl
cmpsl
adc
mov
lahf
and
sbb
sbb
ljmp
ret
loop
mov
xchg
xchg
cli
and
inc
jno,pt
int
subl
outsb
pop
or
lods
and
mov
shll
icebp
stos
das
call
mov
mov
dec
icebp
xchg
dec
out
mov
je
and
dec
sbb
cmpsb
mov
test
aad
sbb
xor
mov
int
mov
subb
push
loopne
dec
pop
nop
mov
jae
jmp
mov
repz
jno
loop
mov
movl
xchg
stc
test
rorb
movsb
gs
nop
and
mov
inc
scas
ror
cmpsl
shr
push
sbb
lea
adc
ret
or
fdivl
out
and
or
xor
pop
xchg
cmp
ss
jbe
test
adc
push
xchg
inc
xchg
dec
imul
je
push
bound
lea
mov
out
shl
arpl
lods
jo
test
fxch
jnp
pop
out
loop
lret
pop
leave
call
inc
fwait
pop
std
mov
lret
xchg
stos
xchg
xchg
mov
jno
sbb
lcall
rcrb
xchg
sahf
inc
pop
out
mov
lods
mov
sub
lret
idivb
lock
mov
int3
ja
jle
leave
and
inc
jne
cmp
je
rorb
fbld
sbb
sahf
add
idiv
adc
test
movsb
adc
or
sub
es
repnz
ret
scas
into
push
mov
pop
adc
pop
movsb
cmpsb
cmp
or
lea
push
dec
enter
stc
inc
lahf
xchg
aaa
mov
jne
popf
data16
mov
add
mov
popa
mov
jae
mov
mov
mov
sbb
fadds
pusha
dec
xchg
push
inc
insb
dec
jg
mov
push
mov
fs
and
xchg
pusha
inc
cld
xlat
sbb
repnz
dec
adc
pusha
adc
push
ja
xor
jnp
add
inc
push
or
lds
xchg
mov
xchg
gs
test
in
dec
and
stc
sub
sar
fwait
cmp
shr
out
call
pop
and
add
pushf
out
mov
mov
xor
aad
cmp
cmp
subb
xchg
and
stos
les
ja
addr16
xor
rcll
sarb
mov
int3
cwtl
popa
je
idivb
adc
add
test
push
xchg
roll
cmp
cmp
dec
jge
jbe
dec
inc
cmc
jnp
repz
inc
inc
and
jne
popf
adc
movsl
jecxz
jmp
sub
cs
sbb
stc
inc
fsts
test
lock
dec
sub
jns
sbbb
jne
iret
xchg
push
xchg
mov
popa
lock
lea
out
sti
cs
cmpsb
jg
mov
orb
outsl
pop
inc
fbld
xchg
pop
dec
fadds
iretw
sub
ret
jmp
lahf
or
pop
jae,pn
das
call
popa
sbb
xchg
mov
sbb
sbb
inc
mov
jbe
dec
xchg
mov
sub
inc
sti
fucomip
add
sbb
adc
call
adc
sbb
mov
arpl
in
test
mov
mov
push
out
cmpsl
adc
in
ljmp
mov
inc
aaa
dec
cmpb
and
push
adc
adc
and
pushl
jmp
xchg
xor
mov
fimull
sbb
sub
mov
test
push
imul
call
cmc
pop
mov
rcll
negb
cmpsl
test
repnz
jb
xor
inc
and
xorl
add
into
imul
xor
movsl
rcll
test
rorl
cmp
push
mov
push
mov
movsb
push
test
adc
jl
pop
imulb
repnz
incb
fcomps
pop
pop
test
xor
sub
cmc
xor
pop
jle
xchg
xchg
je
cmp
mov
dec
xchg
movsb
loopne
and
aad
xorb
dec
cmpb
ss
std
ffreep
mov
xchg
rclb
js
push
test
pop
std
dec
pop
pusha
mov
push
push
sub
xor
pop
push
jge
movsb
mulb
sub
pop
and
fbld
and
dec
mov
pop
adc
adcl
cmp
or
es
xadd
jo
faddl
push
rcl
mov
aaa
andb
imull
ret
cmpsl
in
icebp
mov
fs
dec
add
hlt
icebp
inc
sti
jp
lret
or
xchg
jle
sub
push
mov
sbb
jb
inc
and
jo
enter
out
jle
fidivl
push
in
pusha
cmp
out
outsb
sub
push
je
mov
repnz
test
mov
mov
push
mov
sub
jae
dec
arpl
push
xchg
mov
jns
pop
int
push
and
in
push
je
xchg
adc
inc
lods
lahf
test
fisubrs
addr16
pop
rorb
js
or
inc
jg
cwtl
xchg
cmp
rcr
jnp
scas
mov
std
rorb
in
addr16
imul
xchg
neg
inc
aas
fwait
mov
pop
push
mov
xchg
sbb
mov
sbbb
out
inc
add
sbb
push
mov
push
mov
add
cmpsb
xor
or
testl
xor
push
sets
sub
xchg
dec
sub
iret
cmp
push
mov
mov
fcmovb
cli
popf
addr16
in
aaa
xor
into
lds
pop
mov
inc
mov
enter
mov
jb
jb
cs
xchg
in
fs
jno
and
inc
add
sub
pop
call
mov
shr
xchg
dec
or
mov
in
push
mov
cld
jns
cmpb
adc
inc
repz
xor
or
into
out
xor
mov
ret
pop
cmp
int
cs
mov
xchg
and
fwait
gs
negl
lock
dec
xchg
mov
clc
in
ret
scas
add
fdivrs
aam
inc
fwait
pop
cmp
adc
stos
dec
loop
sub
loope
adc
sti
call
xorl
mov
out
and
mov
fimuls
and
xor
arpl
fiadds
sub
ja
inc
pop
leave
inc
das
ja
dec
icebp
jne
jnp
popa
mov
fs
arpl
lods
jecxz
in
pop
push
sahf
mov
mov
dec
pop
cmp
adc
idivb
push
inc
jmp
mov
ljmp
xor
mov
add
call
lcall
or
dec
nop
mov
nop
mov
push
clc
sub
insl
jl
add
or
test
je
xchg
jnp
mov
fistpll
out
push
jle
outsl
adc
les
sub
cmpsl
cwtl
push
pop
jno
pop
adc
repz
adcb
xchg
out
and
jecxz
mov
dec
mov
ja
int3
xor
adc
mov
inc
bound
idivl
outsb
lods
dec
mov
xchg
stc
sub
push
pusha
xor
mov
daa
mov
out
cmp
jo
mov
lahf
test
cmp
jl
sub
fmuls
sub
jg
fmuls
mov
dec
pop
test
or
push
inc
ljmp
inc
xchg
outsl
push
dec
fistl
enter
popf
rorl
jge
loop
bnd
push
rcrl
mov
adc
pop
and
xorl
push
pop
cmpsl
xchg
jae
or
daa
dec
jmp
ret
popf
aam
xchg
sbb
imulb
xor
or
fdivrp
test
cmp
out
es
addb
idivb
push
stos
sbb
jb
cltd
ja
or
js
in
dec
ds
mov
lds
inc
cmp
sbb
pop
xchg
jmp
pop
pusha
repnz
push
jecxz
mov
mov
xchg
xor
lds
jmp
adc
inc
aas
cld
loopne
mov
push
lock
push
mov
rclb
int3
add
and
mov
ret
inc
in
jo
mov
aas
aas
lahf
xchg
pop
mov
sbb
cmc
push
lret
fiadds
jecxz
lock
sub
dec
jno
jg
mov
sahf
jno
cs
sub
insb
fisubrl
push
les
scas
and
lds
xchg
adc
or
push
aaa
bound
lahf
and
scas
stos
jo
dec
les
and
cmpsl
dec
push
add
subl
addb
aas
push
stc
dec
pop
add
shlb
xchg
mov
push
gs
data16
or
mov
pushf
ja
les
jbe
ficompl
enter
push
sti
lret
inc
dec
scas
pop
loopne
sahf
lods
loope
mov
scas
shlb
and
stos
jg
mov
out
sub
jns
loopne
add
inc
out
fcmove
xchg
xchg
and
idiv
xor
adc
loopne
jg
xchg
push
pushf
enter
mov
sti
test
mov
clc
cs
jmp
add
jmp
xor
lods
pop
and
cmpsl
mov
pop
mov
jmp
mov
dec
sbb
and
push
jne
in
insb
xchg
mov
scas
push
loop
jecxz
mov
inc
pop
vcvtps2dq
or
sbb
decl
sub
inc
pop
scas
jbe
push
and
add
pop
lds
sti
pop
cld
out
xchg
cmpsb
out
fildl
adc
in
repnz
adc
push
out
je
dec
loope
cmp
in
cmp
mov
cmp
js
cmp
movsb
ds
mov
pop
fucomip
pushf
outsb
jl
icebp
mov
adc
arpl
and
loope
jae
mov
jp
xor
or
pop
push
xlat
inc
stc
xor
lock
xor
fs
test
cld
or
nop
sbb
fsts
cltd
cmp
out
mov
movsl
cwtl
jbe
rol
leave
xor
jmp
inc
push
sarb
mov
test
dec
test
push
mov
scas
adc
data16
test
push
popa
dec
shlb
xchg
adcl
lds
imul
movsl
es
mov
cmpsb
ds
xchg
jp
movsb
xchg
enter
mov
and
cmp
out
mov
xchg
jb
fprem
pop
sub
and
nop
or
add
inc
jne
aad
mov
sbb
lds
iret
das
es
or
adc
std
or
in
push
cwtl
cmovb
stos
pop
popa
cmp
xlat
mov
push
jns
jmp
js
xor
dec
test
add
inc
cmp
mov
cmp
add
xor
pop
lea
cmpsl
nop
sub
fwait
adc
hlt
jae
jg
dec
divl
out
popf
lahf
pop
dec
inc
andl
test
sbb
adc
repz
jae
inc
mov
pusha
lods
jle
sbb
jbe
mov
jmp
sbb
mov
and
xor
in
ret
and
lds
mov
xor
add
cmp
mov
cld
jle
push
mov
stos
aam
jmp
sub
xchg
sahf
xchg
mov
or
mov
fldcw
jae
loop
xor
leave
push
inc
test
mov
xlat
xor
jne
testl
dec
test
sarb
mov
divl
jl
sbb
mov
xchg
pop
fildl
test
dec
mov
dec
or
mov
push
rclb
out
mov
int3
mov
push
cmp
mov
sbb
leave
imul
and
cmp
adc
push
ljmp
ss
pop
mov
or
jo
jb
add
sbb
ja
mov
iret
flds
call
push
sub
lods
jnp
jmp
mov
cmp
adcl
mov
dec
dec
ds
jge
xchg
jg
mov
xor
sub
mov
pop
lock
adc
push
cs
in
adc
scas
dec
mov
out
mov
in
jo
int
pop
lea
mov
jmp
lods
hlt
add
test
rcr
mov
hlt
in
iret
inc
jp
xchg
mov
jne
push
lods
jbe
repnz
inc
and
xor
insb
and
shll
xchg
outsb
pop
fwait
jecxz
xchg
out
pusha
insl
add
cmc
inc
lods
adc
lds
out
xor
and
out
mov
movl
add
lahf
cmpl
jg
sub
lret
cmp
into
stos
imul
aas
inc
imul
je
out
xor
repz
loopne
mov
outsl
movsb
lret
dec
mov
pop
mov
inc
mov
movsb
jns
leave
push
jb
or
stc
dec
out
xor
jmp
lret
lods
fiaddl
adc
test
mov
jecxz
out
es
add
lods
jl
rorl
or
mov
dec
and
inc
mov
sarb
js
mov
fiaddl
fcoml
sbb
ss
insl
fdivrs
inc
cmp
imul
jnp
mov
test
fcompl
xchg
and
imul
ljmp
inc
mov
pushf
sub
fnstenv
pop
ret
sbb
imull
cmp
mov
sbb
xorb
sub
sub
and
daa
bound
dec
xchg
sub
mov
push
insb
sti
ret
ljmp
imul
lcall
fidivs
stc
mov
and
mov
xor
leave
pop
data16
jbe
loop
into
lfs
xchg
imul
cmp
leave
loop
pop
mov
jle
mov
out
sbb
int3
inc
mov
xchg
adc
adc
mov
lods
pop
test
aad
cld
or
push
in
in
and
push
insb
mov
lcall
sbb
pop
xchg
adc
xor
jo
sub
xor
fisubrs
out
insb
popf
hlt
je
cmp
xchg
mull
movsb
insl
jns
jne
inc
inc
add
daa
std
xchg
clc
mov
pushf
sbb
addr16
nop
dec
mov
mov
sub
jb
jg
pop
dec
adc
cld
mov
xor
mov
xchg
or
or
out
das
pop
cmp
sbb
pop
daa
mov
divb
imul
jbe
dec
call
and
shld
mov
jp
std
push
insb
mov
int
rclb
addr16
or
push
daa
pop
cmc
jmp
pop
scas
push
les
ret
dec
roll
in
pop
add
outsl
inc
xor
clc
fstpl
mov
pop
mov
sbb
pop
xor
jo
lcall
jg
sarl
and
fidivl
pop
sub
cs
mov
mov
jae
sbb
dec
push
imul
cmp
ljmp
inc
das
or
sbb
xlat
pop
fidivs
mov
and
das
push
adc
sub
mov
or
jl
pop
je
pop
inc
arpl
aas
inc
daa
test
mov
test
rclb
arpl
mov
jge
lcall
dec
push
mov
js
fldenv
xor
popf
sbb
mov
fwait
xchg
pop
cld
rorb
xchg
sub
sbb
stos
lock
dec
das
js
sub
in
lods
sbb
mov
xchg
sbbl
rclb
aad
test
or
pusha
daa
or
dec
pause
test
push
mov
fsubl
xlat
cmpsl
pop
add
pop
jnp
lds
add
cmp
mov
adc
cwtl
push
mov
xchg
fisubs
imul
fisttps
aas
cmc
stc
js
popf
shrb
mov
push
adc
int3
jp
add
in
sub
and
add
insb
sbb
jne
xor
cmp
sbb
cmpl
mov
push
movsb
xor
stos
lock
xor
mov
mov
in
xchg
stos
jne
cmp
mov
sub
negl
adc
cwtl
mov
hlt
movlps
or
imul
rclb
les
and
and
dec
sub
add
push
fyl2x
inc
mov
xchg
sbb
mov
ret
cmpsb
mov
push
jo
jge
shll
cwtl
das
jns
pop
and
hlt
xor
ret
jae
pop
xchg
push
clc
jbe
mov
sbb
dec
sub
or
hlt
les
data16
enter
mov
push
shlb
mov
pop
xor
ror
aaa
ja
mov
mov
lods
xchg
notb
inc
lret
lret
cld
pop
xor
cmp
movsl
dec
icebp
adc
jg
adcb
add
pop
rorl
jno
pop
inc
adc
xor
xchg
jle
mov
dec
movsl
xchg
aaa
xorl
push
add
add
fbstp
addr16
pop
fadds
mov
data16
out
jo
adc
lods
imul
or
push
mov
pushf
xchg
jmp
sub
lret
cmp
or
xchg
add
cmc
mov
xchg
xchg
jecxz
ja
mov
out
add
jecxz
inc
aam
icebp
sbb
inc
ficoms
push
xor
nop
iret
xor
jmp
ficomps
or
outsl
adc
jne
fisubl
cs
xchg
lcall
sub
shll
inc
subb
push
pusha
cmp
push
stos
repz
push
xor
hlt
sahf
mov
lret
pop
enter
jns
outsl
sarl
push
push
clc
stc
and
mov
dec
fs
sbbb
daa
jbe
jmp
inc
iret
mov
jae
xchg
xor
into
sbb
fdivrs
pop
push
push
push
iret
ret
mov
jl
pop
xor
mov
aaa
dec
sbb
pop
pop
nop
lcall
sti
push
stos
xor
xor
mov
inc
hlt
xor
fnstenv
call
xchg
push
vmovapd
aaa
lods
mov
cmp
mov
fldl
in
mov
aaa
sahf
mov
and
aam
les
loopne
sub
out
mov
and
fdivs
mov
out
jecxz
imul
add
adc
mov
mov
mov
jo
es
out
and
and
inc
enter
pusha
enter
xor
outsl
xchg
fistpll
lss
push
cmp
jge
pop
out
std
adc
ret
dec
push
pop
dec
xchg
into
and
or
xor
fcomps
mov
mov
aad
push
cli
in
cmpsl
dec
cli
jl
pop
push
hlt
jnp
push
jno
or
cmpb
pop
jle
mov
gs
test
sub
mov
lock
or
in
xchg
adc
dec
xor
les
dec
push
mov
cld
or
cld
sbb
neg
inc
jl
leave
xchg
dec
pop
mov
add
cs
scas
mov
or
cmp
adc
data16
sbb
and
or
daa
and
mov
in
loop
push
jmp
es
pushf
dec
push
daa
pop
jae
iret
jmp
loopne,pt
ret
and
pop
add
jno
jno
sbb
pop
sub
jnp
cmp
mov
ret
aaa
es
jge
in
cld
and
adc
ds
movsb
fwait
push
out
xorb
sub
pop
jmp
aaa
xorl
testl
jo
dec
dec
adc
jnp
int
lahf
out
pop
out
sbb
outsl
fsts
mov
xor
stc
xchg
cmp
shll
inc
aam
pop
dec
movsb
add
and
sub
ss
popa
in
rorl
fsubrp
jno
out
jp
stc
icebp
icebp
pop
push
cmp
ss
loopne
xchg
inc
ret
sarl
jno
pop
sub
testl
add
cmpsl
xor
and
lock
int3
imul
shll
filds
in
pop
push
test
pop
jo
sti
push
scas
sarl
inc
mov
sbb
scas
call
dec
popa
nop
xchg
sub
stc
das
pop
push
faddl
int3
push
xchg
mov
inc
push
pop
xchg
and
mov
ds
repz
sarl
leave
and
fcmovu
lds
in
arpl
or
sub
insb
push
adc
push
dec
dec
xor
push
rcr
stos
xchg
mov
cs
and
loop
fiaddl
cmc
lods
leave
jmp
mov
sbb
cmp
nop
rclb
dec
mov
rcl
inc
negb
jmp
imul
iret
cmp
outsl
andb
in
xchg
or
pop
jae
lahf
ds
xor
stos
mov
std
movsb
adcb
cmpb
xlat
jl
sub
jecxz
adc
leave
sub
xchg
add
sub
and
push
cmc
pop
xor
dec
inc
data16
pop
mov
out
fidivrl
lret
push
mov
bswap
push
in
and
lcall
mov
pop
dec
test
rol
pop
sti
cltd
xor
sub
ja
mov
jg
lea
ja
out
mov
inc
cltd
xchg
fcmovu
dec
ss
push
mov
sub
dec
push
aas
cmc
push
sbb
sti
fisubrs
sbb
fists
pop
dec
xchg
pop
xor
repnz
cs
aaa
and
jp
pop
jae
in
fcmovb
adc
mov
out
mov
inc
push
pop
shlb
in
cwtl
xor
lea
imul
sub
cmp
jg
out
sbb
lret
sub
jnp
mov
fsub
in
pop
jmp
mov
stos
adc
sub
in
xchg
test
fmuls
stos
mov
scas
or
orb
mov
in
add
ss
rolb
mov
push
jb
jb
jne
add
xor
icebp
stc
data16
test
repz
push
loopne
cmp
shl
ds
jae
xchg
adc
push
sahf
pop
sbb
jp
push
outsl
dec
int3
stos
xchg
cltd
jbe
cmpb
mov
lock
xchg
add
jmp
sub
add
out
ret
mov
scas
pop
pop
jl
inc
popa
rorl
and
aas
fnstsw
adc
push
leave
xchg
inc
and
xor
test
lods
and
add
out
inc
cmpl
dec
scas
mov
ret
dec
xor
stos
inc
and
sub
pop
push
mov
sub
and
rcr
sbb
push
xchg
sub
popa
aaa
jno
out
daa
orl
leave
inc
sbb
sbb
xchg
adc
addl
das
sbb
into
or
add
adc
nop
sbb
in
mov
mov
xor
fisubrl
or
in
loopne
push
enter
dec
dec
aam
fnsave
fiaddl
jbe
xchg
cld
ds
mov
in
cltd
xchg
ljmp
lcall
scas
dec
or
or
repnz
mov
push
mov
clc
out
adc
icebp
sbb
fsubrs
cmp
mov
push
ljmp
aad
or
inc
jle
inc
xchg
xor
repz
pop
adcl
idivb
fdivp
out
dec
push
sti
push
jecxz
fdivs
push
fwait
outsl
mov
cmp
cmpsb
mov
xchg
sbb
mov
jne
jp
fdivs
fnstenv
pop
les
or
divb
dec
xor
push
sub
pusha
ds
cltd
jno
xchg
inc
xchg
and
mov
jne
cmp
arpl
pop
push
pop
inc
or
inc
lods
mov
movsl
jns
dec
mov
negb
insl
push
scas
fdivrl
push
sub
imul
xor
inc
ja
pusha
mov
std
adc
jl
rorb
andl
sti
mov
addr16
insb
cmp
cli
inc
pop
sahf
insb
nop
addb
icebp
int
test
incl
sahf
hlt
fnsave
pop
test
jge
mov
int
inc
and
xorb
push
movsl
arpl
cmpsl
jg
push
sbb
jae
lcall
pop
into
adcl
add
xorl
cmp
fbld
cmpsl
and
aas
mov
pop
repnz
mov
test
mov
out
insb
fidivl
shr
cmp
in
xchg
cmp
xlat
scas
and
test
add
cmp
repnz
xchg
push
fimuls
inc
loop
sbb
ljmp
icebp
mov
push
push
les
push
mov
mov
and
and
cmp
pop
pop
stos
push
std
or
and
cmpl
lahf
sub
push
icebp
shrb
fdivrp
fwait
rolb
inc
pop
mov
pop
std
lret
ret
fsub
mov
ret
or
mov
sarl
loop
call
lock
jno
mov
daa
sbbb
out
jae
mov
fwait
lret
stc
fisttps
jo
call
jo
xchg
push
call
mov
push
mov
xchg
pminub
ja
pop
push
iret
fisttps
pop
pop
lods
dec
shlb
addr16
add
out
jo
scas
xchg
adc
push
jmp
jl
in
inc
xchg
add
mov
add
mov
xchg
pop
aam
cmp
mov
xchg
xchg
out
xchg
inc
add
mov
std
or
dec
das
jg
xchg
inc
sub
and
cmp
insb
xlat
rorb
popf
loope
mov
das
inc
test
idiv
push
xor
sub
dec
sub
fiadds
rcrl
in
mov
jle
jno
mov
cs
mov
into
bound
outsl
decl
pop
movl
or
stc
mov
cs
mov
cmp
pop
test
xchg
jp
ja
mov
or
jge
xor
mov
adc
jo
push
xchg
bound
mov
push
loope
clc
sahf
loope
xchg
scas
in
movsb
mov
iret
jo
mov
jae
push
push
out
icebp
nop
movsl
stos
mov
cld
arpl
ret
out
lods
mov
out
mov
adc
dec
test
bound
add
int
pop
adc
xchg
test
inc
pop
sbb
inc
data16
xchg
xor
aam
xlat
jne
cli
push
and
sar
xor
or
push
es
imul
jo
icebp
sbb
lods
in
cmp
bound
into
out
mov
imul
pop
lret
mov
cld
je
ret
or
rcrb
xor
mov
stc
jb
ret
lahf
xchg
cmp
xchg
cmp
or
fwait
pop
inc
lods
xor
in
mov
nop
add
stos
mov
jno
ret
dec
repz
lock
jmp
js
cli
sbb
or
fs
movsb
das
sub
mov
sub
daa
or
cmp
mov
imul
popa
imul
mov
pop
adc
mov
gs
cmp
sbb
bound
imul
push
repnz
lock
xor
sbb
cli
xlat
enter
xor
pop
fcmovnb
jae
xor
js
add
mov
pop
cli
dec
mov
pop
xor
cs
inc
mov
add
andb
add
push
lods
and
stc
mov
test
rorb
mov
clc
sahf
sbb
daa
inc
jne
outsb
scas
lds
icebp
in
ret
pop
test
cli
add
in
xchg
jbe
inc
mov
mov
xchg
add
das
stc
pop
and
out
popf
movsb
loope
dec
pop
repz
sarl
xchg
xchg
data16
dec
dec
xchg
shrl
push
stc
add
mov
bound
lcall
stos
dec
pop
cmpsb
dec
shll
mov
bound
sub
int3
fimuls
mov
sbb
and
mov
pop
outsl
add
not
mov
sbb
or
jle
mov
shl
pop
adc
or
mov
xchg
pop
inc
jl
outsb
rcl
xchg
loopne
or
mov
lock
pop
in
pusha
out
xchg
pop
xchg
hlt
jne
mov
push
sbb
outsb
mov
into
fsubrl
sbb
adc
cltd
loopne
rcll
sub
xchg
cmpps
je
jae
jns
andb
pop
sub
add
jnp
ja
jo
loop
push
lds
imul
ss
fstpl
shlb
cwtl
sbbl
test
lret
xor
pop
mov
mov
push
sbb
outsl
js
dec
mov
mov
push
lods
das
mov
insl
add
push
mov
xor
test
iret
cmc
adc
lea
sti
addr16
mov
and
push
dec
mov
adc
and
pop
pop
xor
mov
out
lea
ret
xor
cli
in
addr16
xchg
shll
xchg
xchg
mov
mov
xchg
or
lret
jmp
cmpsl
sti
in
jno
clc
shll
lret
and
jmp
out
das
pop
adc
jno
ret
xchg
xchg
out
dec
or
test
pop
in
aaa
cmp
sub
shrl
sub
and
iret
mov
add
loop
fidivl
popf
and
fistps
adc
xchg
aaa
dec
sub
nop
jb
sbb
pop
js
and
mov
pop
mov
fs
mov
or
fdivrl
leave
jns
jns
cmp
inc
sub
cmp
dec
cmpsb
cwtl
xlat
pop
xchg
call
das
add
aad
adc
aas
iret
jl
pop
test
in
pop
ljmp
stc
pop
movsb
pop
mov
push
in
andl
nop
pop
stos
jge
jp
pop
or
jno
xchg
push
fs
lcall
jnp
out
pop
mov
loopne
test
jmp
arpl
adc
test
jmp
push
and
sbb
fdiv
lret
add
cmpb
iret
les
pop
and
sub
data16
mov
inc
in
mov
push
gs
ss
notb
adc
adc
add
ds
push
adc
hlt
push
jns
xchg
push
or
or
insb
inc
and
jge
gs
sti
test
not
ret
fwait
add
pop
clc
pop
out
add
sub
mov
repz
fisubrl
out
lret
mov
clc
std
mov
inc
sub
pop
xchg
xor
insb
sbb
mov
xchg
or
mov
inc
jb
push
jb
xchg
push
in
test
lahf
pop
jmp
jno
mov
stos
out
add
and
inc
test
cs
xor
icebp
bound
mov
ret
sub
mov
aam
sti
mov
stc
lods
mov
lea
fcmovnu
repnz
push
pop
xchg
mov
pop
inc
inc
push
fnsave
loopne
popa
cmp
dec
sub
shlb
mov
imul
pop
cs
mov
cmp
sar
xchg
in
sub
std
daa
xchg
mov
xor
movsl
repnz
adc
jns
cmp
rclb
or
loop
or
pop
out
jmp
cmp
les
ds
loopne
mov
cmp
xor
lahf
insb
out
fwait
or
sti
push
ret
into
movsb
pop
lret
dec
mov
pop
push
call
add
jb
push
in
inc
dec
outsb
mov
cmc
mov
js
ds
mov
test
shl
int
dec
fisubrs
mov
inc
jge
ret
outsl
xchg
dec
jp
subb
stc
mov
out
and
and
jge
test
sub
jnp
jns
cli
popf
inc
lret
sbb
xor
and
out
and
stos
xor
pop
mov
jge
fnsave
add
sbb
gs
divl
ss
imul
in
dec
mov
js
ds
idiv
gs
sub
xchg
mov
mov
in
dec
mov
adc
sbb
mov
jb
push
mov
mov
inc
cli
fs
or
cwtl
or
stos
orl
and
jae
int3
lods
ds
dec
push
jg
out
in
dec
jnp
mov
mov
je
jno
in
aas
imul
jno
or
inc
or
stos
icebp
cmpsl
and
loope
lcall
jne
test
fidivrs
into
push
in
aas
add
imul
lahf
test
pop
lods
xor
scas
jno
jnp
push
lods
xor
lea
fdivs
aaa
push
mov
dec
stos
out
cltd
push
imul
pop
aaa
movsl
adc
mov
xchg
imul
subl
clc
popa
lret
test
pop
daa
jbe
mov
xor
icebp
xor
ds
or
out
leave
cmp
mov
xor
jns
xchg
dec
jecxz
dec
sti
rclb
out
gs
mov
aam
andb
push
mov
jl
sbb
in
pusha
not
mov
mov
fistpll
iret
pop
in
cmc
lea
fisubs
test
imul
xor
sbb
pop
in
cmpsb
lcall
in
jp
aam
int
sub
addb
pop
pop
mov
dec
lcall
fistl
enter
jnp
imull
in
push
sbb
cmpsb
ljmp
insb
sahf
mov
jne
std
aad
lcall
sti
mov
adc
sarb
call
scas
ficoml
mov
sbb
cld
test
mov
iret
push
xchg
adc
mov
pop
jb
rolb
imul
pop
clc
mov
push
add
xchg
int3
or
mov
ds
icebp
out
fidivrs
and
cmp
inc
stc
xchg
ds
and
test
mov
lret
push
jp
inc
cmp
push
imul
mov
mov
lcall
es
push
sti
xchg
lret
sub
and
push
aaa
loopne
mov
loop
int3
xor
cli
stos
add
lret
dec
hlt
rcrl
xor
or
mov
or
pushl
loope
adc
fsts
xor
mov
and
add
mov
mov
loopew
mov
bound
or
pop
xor
addr16
xchg
xchg
fucomip
das
call
ret
movsb
pop
mov
dec
dec
std
xchg
into
mov
sbb
in
cmpb
pop
pop
push
ljmp
out
mov
adc
shl
loop
ret
push
jo
pop
das
aad
pop
out
push
cmpsl
insb
sbb
imul
repnz
out
or
jg
pushf
inc
pop
push
ret
jg
and
or
cli
aam
cmp
mov
in
ret
aas
add
scas
cmp
dec
xchg
repnz
inc
adc
dec
mov
out
out
xor
mov
add
cltd
xchg
xlat
cmp
movb
mov
dec
mov
fsubrs
xchg
cmp
inc
mov
mov
pusha
into
ret
pop
add
xor
add
movsb
lcall
cltd
scas
cmp
inc
jb
rcr
mov
adc
leave
les
iret
outsl
movsb
jnp
lea
or
xor
lret
shll
loope
inc
or
or
sub
test
shlb
cmp
ds
fs
add
cld
fists
mov
xchg
in
xorb
sub
popa
scas
inc
sbb
cmp
mov
leave
fstps
mov
adc
mov
push
xor
cmpsl
shrl
jnp
mov
cmpsb
ds
xchg
push
cltd
xor
test
cmpsl
dec
in
jb
jne
dec
xor
push
pop
add
lcall
cmp
mov
mov
out
push
fcmovbe
ud0
lahf
fidivrs
pop
loopne
ja
xchg
imul
mov
mov
mov
mov
mov
sarb
fs
pop
cmp
xlat
cmp
inc
jnp
jnp
add
sbb
xchg
mov
repz
jb
cli
lea
shll
sbb
push
not
sbb
insl
pop
fildll
push
outsl
out
lds
xchg
jo
jns
jp
stos
inc
jo
xor
mov
mov
inc
fmulp
inc
pop
cld
xor
xchg
sub
adc
int3
xor
pop
out
inc
bound
jne
jle
mov
and
pop
mov
inc
jns
call
ret
out
fnstcw
sbb
push
pushf
mov
les
sbb
icebp
sbb
sub
fdivl
rolb
lea
mov
rclb
pop
xchg
inc
scas
aam
data16
push
add
outsl
les
daa
push
push
cmp
lret
push
and
sub
mov
ss
mov
xchg
clc
mov
leave
into
fimuls
call
je
dec
arpl
lods
call
cmp
inc
and
ficoml
scas
inc
test
push
mov
lret
sbb
add
stos
cmpb
sub
sub
push
push
movsl
cli
jb
je
inc
push
lods
cmpb
xchg
lea
in
and
cs
ret
fstpl
mov
sbb
daa
arpl
enter
sti
aas
xor
push
repnz
jg
repz
inc
push
adc
cmp
push
mov
mov
cmp
popa
inc
sti
idivb
inc
sbb
imul
mov
push
daa
inc
mov
aam
adcl
inc
addr16
ss
testb
subb
imul
in
xor
push
jne
sbb
push
add
sub
sub
pop
jmp
fsubs
push
call
adc
inc
jg
insl
lds
adc
pop
dec
dec
lods
stc
mov
jns
xchg
mov
cs
push
addl
and
imul
enter
shll
sub
imul
mov
inc
mov
xor
inc
pushf
lahf
lods
mov
sbbl
aas
sub
imul
negl
push
push
xchg
insl
out
mov
out
mov
cmpsb
mov
xchg
pop
xchg
scas
jmp
push
pop
mov
popf
das
loopne
xchg
mov
in
jl
das
out
mov
lods
pop
xchg
outsl
pop
leave
sbb
cld
jmp
iret
inc
dec
addb
into
mov
jg
xchg
lds
sahf
sub
in
push
mov
mov
mov
cltd
je
imul
inc
dec
inc
jge
std
pop
jge
daa
dec
lret
enter
into
fdiv
cs
pop
repz
outsl
mov
arpl
lcall
dec
sub
xor
jae
sub
xchg
addr16
call
jnp
mov
mov
fcomps
mov
bound
int
xor
out
jne
out
dec
mov
sbb
cli
sbb
sub
aas
mov
stc
or
jecxz
je
cmp
pusha
inc
cli
mov
loop
mov
pop
xchg
or
cmp
mov
jb
adc
loope
scas
mov
aam
jae
cmp
jne
sbb
test
cli
inc
sbb
mov
insb
mov
sub
sub
sub
cmpsl
sub
mov
xor
and
adc
push
jg
jb
jns
les
outsl
fs
dec
xchg
ljmp
into
pop
add
hlt
xor
inc
jl
xor
jl
arpl
xlat
test
sbb
cmp
je
jno
sub
pop
xor
int3
inc
xchg
adc
leave
mov
add
mov
and
adc
mov
inc
xor
js
call
xchg
js
mov
push
ret
xchg
xchg
hlt
out
or
push
xchg
sub
in
lods
push
mov
xlat
sub
clc
test
xchg
mov
fisubrs
mov
xchg
nop
sbbb
imul
aaa
sahf
fimuls
adc
xor
aad
add
or
mov
push
mov
in
repnz
push
addr16
mov
lret
js
rcll
shl
movsb
jns
in
stos
pop
iret
lcall
outsl
and
push
cmp
xchg
adc
sub
cli
and
std
sub
cld
icebp
mov
sbbl
test
pop
outsl
inc
xchg
imul
jno
and
pop
test
fdivl
mov
and
test
dec
adc
mov
cli
pop
dec
cmpsl
dec
and
xlat
adc
test
xchg
mov
pop
jp
cld
cltd
adc
cli
negb
je
aam
adc
jb
jmp
sbb
dec
shr
cmpsb
inc
lahf
dec
add
push
push
mov
mov
cmpsl
je
aaa
das
and
jecxz
cmp
sar
mov
je
gs
test
leave
pop
aas
mov
dec
mov
imul
jg
loope
mov
pusha
inc
iret
sbb
insl
pop
mov
dec
cmp
jp
xor
call
lret
inc
mov
insb
aas
fstpt
jbe
sbb
mov
push
pop
mov
cmp
aaa
dec
jmp
mov
hlt
lods
sub
aad
xor
sbb
add
incb
jns
adc
movsb
mov
sub
mov
clc
repz
mull
stos
adc
aam
inc
je
sarb
xchg
movsb
mov
es
fnstcw
jo
arpl
ret
dec
ja
jne
cmc
insl
mov
mov
mov
test
mov
scas
cwtl
scas
mov
addb
int3
pop
lods
stos
sub
and
ret
mov
adc
cli
icebp
or
lahf
repz
push
dec
aam
iret
aam
add
stos
je
and
cmp
es
lret
jl
push
in
pop
subl
sub
xchg
test
orl
xor
lea
xor
jecxz
lods
pop
mov
push
jne
ja
iret
sahf
or
inc
cmp
dec
sub
arpl
lea
push
lea
outsb
jno
in
idivb
xchg
in
mov
push
bswap
jl
inc
mov
mov
icebp
cmp
mov
incb
fcoms
jo
movsb
pop
lcall
cwtl
int
mov
pop
mov
sub
in
leave
clc
test
test
jne
add
jno
adc
cmc
imul
imul
ret
add
mov
cwtl
or
jb
out
pusha
mov
loop
mov
icebp
or
pop
push
stc
nop
pop
push
mov
sbb
push
aam
sub
repnz
outsl
add
jmp
mov
push
jb
aad
or
jno
pop
cmp
jno
push
addr16
enter
adc
pop
or
lret
dec
fisttpll
mov
push
or
out
cmc
dec
in
outsb
repz
push
loop
cmpsb
mov
mov
je
jnp
fucomi
jp
dec
xor
or
iret
popa
test
dec
jae
imul
or
sahf
jle
jno
sbb
arpl
push
rcll
lock
repz
and
jle
out
sti
lds
xchg
hlt
ret
stos
xchg
jb
pop
push
data16
push
push
test
cli
or
data16
mov
ljmp
push
enter
cmpsb
dec
cwtl
xor
and
mov
add
mov
pop
jnp
jns
hlt
jno
imul
ja
xor
nop
dec
or
aaa
in
jl
sti
cmp
adc
or
rclb
push
or
xorw
mov
decb
jp
lcall
mov
aad
enter
cmp
jmp
lret
xchg
rcll
push
push
add
divl
add
jge
sti
dec
dec
imul
push
jge
cmc
cmpsb
stc
lock
mov
ja
push
arpl
add
call
sbb
inc
aam
cli
cwtl
inc
adcl
or
rcll
push
repz
sub
call
pop
or
inc
add
pop
xchg
xor
sbb
adcl
fidivrs
mov
outsb
xchg
pusha
push
lods
scas
mov
loop
popf
lea
adc
aas
loopne
ds
sbb
mov
dec
cmp
dec
fcoms
mov
rcrb
xchg
dec
in
mov
and
lret
dec
loopne,pt
jecxz
jg
sbb
cmp
sub
or
icebp
jnp
sub
push
in
adc
adc
mov
loop
sub
pop
sub
or
xor
sub
ret
ss
lahf
mov
clc
jns
mov
out
and
dec
lcall
mov
jp
lds
sbb
jl
push
pop
jnp
imull
mov
iret
hlt
aad
mov
sbb
xchg
adc
adc
gs
icebp
fdivrl
loope
add
xor
pop
scas
sub
add
or
push
lods
lcall
loope
sti
test
inc
pop
jbe
xchg
add
imull
in
cmc
ds
jae
cmpsl
sbb
xchg
add
inc
jb
or
xor
daa
pop
rcrl
add
push
mov
sbb
fs
mov
push
ds
aam
test
sub
fdecstp
imul
cltd
mov
xor
jl
dec
loopne
sbb
aas
cltd
or
add
dec
outsb
lds
sub
xchg
insl
into
clc
ror
sti
scas
jl
fnstenv
push
dec
in
adc
orl
dec
pop
mov
jnp
sbb
dec
out
mov
adc
xor
xchg
adc
push
xor
fs
and
addb
push
jbe
fimull
ja
sarb
dec
or
adc
ror
mov
es
pop
sub
dec
int
int
lods
dec
imul
pop
and
aaa
pop
in
ja
jae
jp
xor
push
movsb
mov
test
add
mov
xor
movsl
outsl
je
sbb
aam
mov
out
lods
sbb
and
ss
mov
adc
shll
mov
js
xchg
mov
jl
fbstp
jns
les
and
neg
dec
sbb
xor
cmp
and
call
adc
rorb
cli
cwtl
fmul
jp
xlat
sbb
push
je
mov
and
call
lcall
inc
cmp
dec
mov
push
pop
out
in
mov
and
push
in
ljmp
int3
adc
shll
jbe
aam
dec
or
sti
fs
sbb
xor
popl
imul
pop
mov
push
lods
xchg
dec
ss
fnstsw
js
cli
push
mov
dec
data16
test
dec
addr16
add
push
out
pop
jne
sub
cmp
test
lret
negl
mov
jae
jg
xor
int3
int
xchg
jo
xchg
arpl
pushf
mov
pop
enter
cwtl
and
or
or
rcrl
sbb
scas
push
jne
mov
aam
add
jecxz
and
mov
mov
in
aaa
add
xchg
ja
push
dec
push
dec
fcoml
ss
rorb
shll
aad
fcmovnu
mov
mov
daa
xchg
inc
cmc
dec
not
call
adc
push
pushf
je
out
iret
pushf
sub
lods
mov
repnz
dec
test
inc
pop
icebp
call
mov
jne
dec
pop
into
push
cmpsl
imul
and
movsl
push
sahf
adc
and
rcrb
in
inc
in
call
popa
daa
cwtl
cmp
push
sub
in
call
xchg
cltd
ljmp
sbb
int3
imul
inc
and
loopne
adc
out
int3
jg
in
out
out
add
nop
ds
data16
addr16
jno
pop
mov
pop
sub
scas
ficompl
ret
fwait
addr16
pushf
and
int3
aam
sub
mov
jo
pop
xor
xlat
ret
jb
dec
pop
pop
push
pop
fsubl
or
jp
xor
pop
sahf
in
jno
es
mov
jae
xchg
dec
in
bound
std
aad
test
rclb
jecxz
jg
fldcw
outsb
cmp
lds
aas
jmp
add
mov
mov
lret
or
imul
jb
xchg
push
out
repz
mov
inc
sub
outsl
lods
sub
jbe
mov
or
mov
mov
and
jl
insl
push
rorl
inc
xchg
pop
pop
aaa
addr16
add
inc
cmp
mov
lret
dec
sbb
sti
out
adc
push
cmc
inc
push
das
cmp
cmpb
xor
fidivl
clc
repnz
mov
bound
xor
and
xchg
adc
jae
pop
mov
and
xchg
dec
out
icebp
aaa
pop
je
xor
gs
dec
jl
inc
aam
sbb
cmp
push
pop
scas
xchg
and
jno
rcll
std
cmc
lret
and
ss
push
jl
test
fbstp
adc
das
jns
jge
fsubrp
scas
lods
scas
dec
mov
lcall
push
enter
subb
imul
pop
int
cmp
add
outsb
icebp
js
inc
in
xchg
add
int
popa
add
xor
jmp
fsubrs
and
xor
jecxz
cmpb
mov
pop
fldl
adc
jo
ret
mov
pop
lcall
xchg
dec
push
push
out
push
imul
fisubs
hlt
and
sti
aad
out
stos
popa
xor
fs
aad
mov
test
xor
sub
dec
cld
xor
pop
mov
adc
xor
test
xchg
leave
jl
xor
mov
xchg
addr16
push
addl
sbb
pop
inc
test
into
aad
fdivrl
add
clc
sbb
mov
int3
jo
cmpb
adc
jns
jge
clc
push
push
out
leave
mov
jo
sbb
and
lahf
fiaddl
movsb
jmp
jl
lock
xor
sbb
pop
inc
pop
adc
xchg
sbb
sti
in
jle
daa
sbb
adc
dec
push
jns
and
movsb
lock
lret
and
dec
lds
pop
cmpsl
sub
aad
and
inc
sub
dec
cmp
mov
dec
xor
or
and
test
sub
mov
jb
stos
dec
or
jno
and
jbe
xchg
push
fimull
popa
aam
dec
fldenv
std
pop
sbb
cld
scas
out
icebp
into
lds
decl
jp
pusha
je
nop
pushf
sub
pusha
lcall
sbb
ret
lret
mov
inc
repz
aam
mov
add
ljmp
pop
mov
movsb
add
rcrb
cmp
fprem
dec
mov
dec
in
mov
in
movsl
xor
mov
ret
jmp
arpl
push
roll
scas
lds
pop
adc
sub
and
cltd
leave
dec
fs
daa
out
push
push
mov
xor
movsl
jge
rclb
add
and
or
pusha
mov
jnp
stc
or
and
jmp
mov
test
ja
shrl
dec
sub
neg
sub
and
pop
xor
inc
insl
call
xchg
out
add
xchg
fidivrs
cltd
stos
push
mov
in
inc
test
cltd
fstp
aam
pop
fisubrl
movsl
jnp
jecxz
jle
sahf
mov
aaa
jbe
sarb
lret
inc
aas
shrb
mov
sbb
xchg
std
and
and
test
mov
mov
out
fdivrs
jecxz
and
lods
and
add
mov
js
in
pop
mov
insl
aad
and
add
xor
mov
jle
inc
ja
not
pop
mov
inc
push
sbb
jns,pn
outsb
mov
femms
std
das
ljmp
fnstenv
push
aaa
fnstsw
mov
push
leave
loope
or
or
cmp
daa
push
inc
clc
sbb
and
dec
sub
cld
shll
jae
cmp
sbb
lret
fisttps
jne
movsb
stc
jecxz
nop
push
test
push
fdivrp
and
push
frstor
pop
xlat
mov
jae
push
and
pop
es
data16
andb
pop
filds
fucomi
shl
fstl
rcrb
shll
leave
push
jmp
roll
lcall
xlat
cmp
adc
int
mov
rclb
ret
or
adc
push
xor
cmove
fsubs
ss
fdivrl
cld
mov
or
pop
sub
push
pop
test
loopne
jmp
dec
and
xchg
adc
stos
lea
and
adc
push
xor
jnp
xor
dec
pop
dec
mov
scas
mov
and
data16
add
or
loop
fsts
sbb
outsb
ss
xor
mov
xchg
mov
stos
sub
add
pop
jp
adcb
sbb
dec
jno
jge
jle
shrb
repnz
or
shll
daa
fadd
out
push
and
lds
arpl
movsb
and
fwait
push
es
xchg
pop
dec
adc
loop
and
xor
cmovbe
adcl
jnp
aad
ss
clc
xlat
and
cmp
outsl
mov
loop
mov
mov
pop
dec
in
insl
popa
cmpsl
xchg
xchg
fs
pop
push
mov
xor
cmpsl
and
je
fdivrl
mov
lret
mov
xchg
inc
int
pusha
or
test
orb
cmp
shlb
aad
sti
sti
mov
pop
fidivrl
sbb
dec
pop
das
ss
xlat
mov
dec
scas
cmp
ja
enter
addr16
mov
outsb
mov
pop
mov
addr16
mov
subl
bound
out
loope
pop
lret
pop
push
lods
arpl
lods
leave
ficoml
aad
mull
nop
and
cli
xor
push
jl
pop
push
imul
inc
mov
mov
cmc
jae
pop
popf
inc
xor
int3
rcll
rorb
or
add
sbb
pop
sahf
push
loope
xor
add
jp
es
pop
fidivrs
fisubl
xchg
dec
mov
pop
lods
popa
dec
sub
sbb
or
sub
test
mov
aad
and
aaa
cld
loop
inc
cli
inc
dec
loopne
pop
outsl
je
xchg
sbb
mov
inc
mov
pusha
in
and
ret
roll
shl
xchg
dec
lret
int3
pop
push
hlt
cmc
testl
pusha
js
and
mov
or
lock
rcll
fucomp
inc
inc
in
out
js
push
xlat
imul
pop
sbb
or
jne
leave
add
in
lahf
out
xor
push
nop
mov
and
lret
mov
or
dec
cmp
sbb
pop
xor
pop
jge
push
scas
ds
stos
adc
insl
xchg
xchg
dec
popf
inc
mov
dec
mov
xchg
cs
jnp
arpl
mov
add
repnz
xor
aad
push
and
or
out
mov
imul
leave
sbb
nop
add
sbb
sbb
fisttps
repnz
bnd
pushf
lcall
fwait
cltd
mov
adc
outsl
mov
mov
cltd
push
notl
mov
push
add
sbb
sarb
std
push
in
scas
ds
xor
dec
fisubs
mov
and
mov
lods
leave
pusha
mov
movmskps
idivl
sbbl
pop
nop
es
rcrb
inc
cmp
push
jb
inc
test
inc
fistl
xchg
lds
adc
btr
stos
jmp
inc
inc
jg
ljmpw
sub
add
lcall
lea
shll
jecxz
in
es
divb
jmp
in
xor
xchg
dec
ret
mov
inc
addr16
mov
loope
push
xchg
mov
fs
adc
outsb
mov
sub
jge
push
mov
push
adc
imul
scas
push
lahf
and
fbld
and
movsl
lret
jmp
mov
or
adc
mov
pop
add
mov
test
outsb
not
push
push
pop
into
insb
sub
xor
je
jb
mov
jne
inc
jns
cmp
mov
and
and
xlat
aas
mov
dec
rcrb
std
and
and
cmpsl
jbe
lahf
cmp
jae
aas
add
or
push
sub
push
mov
test
aas
push
ret
xor
ja
inc
movsb
sub
inc
out
jo
and
ret
inc
cwtl
fdivrl
push
push
xchg
jo
mov
mov
pcmpeqd
insl
andl
sbb
inc
pop
cltd
sbb
sbbl
inc
push
add
hlt
wbinvd
xor
push
aam
sti
cmpsb
sub
mov
mov
shll
mov
movsb
mov
inc
cmp
jl
outsl
xor
pop
push
mov
ret
inc
mov
jmp
sarb
lea
ljmp
jl
test
lods
pop
adc
xor
mov
mov
movsb
rcrl
cmp
cmp
test
xchg
jmp
cmp
cltd
xchg
dec
in
fldenv
mov
push
cmpsb
adc
jle
aas
jge
push
cmp
xor
jmp
mov
mov
lea
push
add
mov
xchg
sbb
loop
pop
idivl
fcoml
mov
in
int
insl
and
jmp
xorl
je
dec
aad
jg
mov
lcall
cmp
loopne
sub
push
and
sarb
mov
pop
loopne
lcall
sbb
push
repnz
add
addr16
movsb
int3
push
into
les
pop
icebp
cmp
sub
add
dec
inc
mov
fsubr
scas
push
sbb
lods
xchg
jmp
inc
add
pushf
hlt
cmp
out
adc
in
int
xor
mov
mov
in
fidivrl
pushf
sub
ret
push
push
int3
adc
aam
aam
jbe
into
pop
add
mov
std
mov
cmc
mov
cmpsb
bound
jae
jb
movsl
iret
mov
int3
rolb
lock
inc
loop
mov
scas
mov
pop
int
xchg
popf
or
xor
xor
icebp
sbb
test
dec
cld
out
inc
test
add
ret
cmp
mov
xor
out
aad
add
iret
add
dec
repz
sbb
std
bound
or
pop
arpl
push
rorl
pushf
ss
das
push
aaa
movsl
xor
outsl
adc
add
addl
std
scas
mov
cmpsl
daa
lea
imul
addl
sub
lods
inc
jno
stos
mov
adc
mov
adc
xor
inc
jno
sbb
loope
sub
mov
into
mov
or
fcompl
sub
test
jle
sub
and
and
push
dec
cmpsb
sub
fstpl
leave
mov
lahf
mov
sbbl
xor
lret
pop
mov
ja
sub
je
dec
and
xchg
pop
fxtract
cltd
loop
lds
add
mov
xchg
sub
jnp
sbb
adc
mov
or
jle
adc
lock
inc
pushf
mov
xor
xchg
mov
scas
and
or
cs
fmuls
int
les
in
jle
shll
fisubrs
sarl
xor
mov
clc
xor
xor
or
mov
repnz
aad
bound
repz
lods
xchg
sub
adc
mov
adc
add
test
push
xlat
loope
mov
outsb
popf
inc
int
mov
pop
data16
xchg
jecxz
and
repnz
leave
lods
pop
push
insb
add
sbb
stos
outsb
nop
out
mov
inc
sub
mov
push
xor
test
adc
imul
insl
pop
les
mov
jp
mov
pop
mov
or
int3
push
xor
push
scas
pop
mov
sbb
dec
aas
push
lcall
std
arpl
out
and
xorl
lds
and
aam
xchg
inc
sahf
mov
add
cli
leave
subb
or
mov
ljmp
pop
pop
cmp
push
ja
mov
dec
add
pusha
mov
aam
inc
inc
popa
jmp
mov
adc
ret
or
ror
pop
outsb
mov
leave
jno
mov
inc
sub
iret
pop
or
jae
sahf
test
mov
jg
subl
call
xchg
adc
imul
lcall
sarl
xchg
outsl
mov
lahf
mov
xchg
notb
push
fnstsw
jnp
or
dec
ljmp
stos
imulb
adc
shlb
pop
and
mov
fwait
sbb
jne
stos
sarb
add
jle
outsl
sub
aam
mov
inc
stos
mov
push
sub
inc
dec
test
jne
pop
xchg
mov
les
pusha
pop
imul
xor
inc
or
mov
nop
sti
ret
mov
popf
cmp
repnz
mov
out
mov
mov
pop
push
mov
fildl
cmp
cmp
dec
test
out
sbb
mov
repz
mov
lcall
insl
mov
inc
sub
or
push
jl
sarb
xchg
ret
sbb
in
dec
mov
push
in
xlat
push
pop
or
mov
jmp
incl
stos
sub
imul
and
out
adc
cmp
sarl
adc
cmp
adcl
call
and
push
iret
mov
inc
lds
mov
fisttpl
push
mov
mov
mov
ret
lea
mov
adc
mov
lods
mov
xchg
or
shrl
les
jbe
movsb
lock
jl
jl
jle
push
hlt
add
mov
lea
cwtl
mov
mov
lcall
push
test
out
jns
mov
incb
cmp
mov
jnp
push
xor
shll
adc
cmp
mov
pusha
jb
mov
push
push
stos
sub
fbstp
dec
inc
and
fnstcw
fimull
lret
dec
and
mov
lds
jmp
or
in
push
cwtl
arpl
pop
dec
xlat
mov
and
std
pop
popf
mov
scas
inc
cmpsb
sub
inc
push
clc
xchg
shufps
adc
adc
rorb
sbb
fldcw
test
outsb
cltd
and
or
dec
sbb
pop
popa
lcall
add
add
unpckhps
repnz
cmp
cmpsl
jo
iret
adc
push
adc
ret
sbb
cs
sub
and
sbb
ss
ljmp
ja
sbb
orb
jne
xchg
out
jb
jmp
fstl
mov
sbb
aad
jle
subb
inc
xchg
aam
popf
notl
mov
fidivs
sub
xchg
cmpsb
xor
clc
addr16
mov
pop
stc
jmp
mov
scas
inc
mov
aad
xchg
cs
sbb
iret
sahf
repnz
enter
cltd
ss
icebp
sbb
adc
fnstenv
xor
mov
js
dec
stos
pop
in
sub
inc
lods
cmpsl
mov
hlt
push
jge
mov
push
jp
push
rcrb
scas
sarl
mov
jnp
pusha
fadds
stc
xor
mov
daa
mov
sub
ds
jae
dec
je
popf
pop
dec
jno
pop
repnz
rorl
pop
mov
jmp
xchg
loopne
or
fdivr
cwtl
packssdw
data16
icebp
mov
insb
cli
mov
imull
lahf
bound
movsl
lea
into
xchg
inc
mov
push
loop
mov
sahf
lahf
loope
mov
cmp
jmp
dec
nop
sbb
fidivs
pop
pop
out
adc
add
cmp
ja
insl
mov
xchg
int
outsl
sbb
dec
mov
sbb
cmp
mov
dec
xlat
push
gs
imul
mov
jb
mov
push
or
mov
test
xlat
jnp
jg
daa
rcpps
xlat
rorb
dec
test
mov
inc
movsl
fdivrs
popf
aaa
adc
xor
ljmp
push
aam
mov
mov
xchg
call
sub
and
xchg
clc
adc
mov
cmp
push
shll
push
mov
out
adc
into
cli
pop
adc
adc
cmp
pop
iret
jns
xchg
sub
pop
out
adc
iret
pushf
jge
rcrl
sub
pop
push
dec
adc
mov
jl
testb
or
cmpsb
and
stos
loope
jnp
icebp
mov
imul
aaa
std
sub
fbstp
add
out
call
les
inc
mov
inc
dec
push
dec
jmp
enter
shlb
xchg
into
sbb
into
out
adc
scas
dec
outsl
inc
repz
loopne
xor
je
test
adc
in
dec
jecxz
xchg
mov
and
repnz
aam
addl
xor
xchg
xor
ret
mov
out
aad
mov
mov
popf
sbb
cwtl
ljmp
dec
gs
or
pusha
pop
sub
lea
pop
dec
fldt
mov
lods
cmp
into
imul
sbb
push
clc
adcb
and
mov
inc
xchg
mov
data16
testb
or
iret
or
jno
push
sbb
or
inc
sub
incl
jecxz
xor
test
fsts
cmp
mov
pop
and
adc
ret
mulb
mov
adc
pushf
adcb
sub
mov
out
push
ljmp
xor
cmp
mov
lea
aaa
push
arpl
mov
mov
sbb
and
xor
or
pop
and
xlat
sub
aas
sub
sbb
xor
adc
pop
xorb
fiaddl
aad
jl
ret
inc
das
fidivrs
xor
clc
xor
jnp
int3
sbb
xchg
icebp
ja
jl
int3
cmpsl
add
mov
cmc
jno
mov
xchg
xor
ja
imul
enter
outsl
andl
and
sub
inc
scas
orb
add
mov
dec
push
and
cld
arpl
pop
subl
or
inc
test
xchg
fwait
out
jae
dec
mov
xor
call
js
sbb
arpl
xor
addr16
ficompl
or
mov
sahf
jo
push
mov
push
vprotd
mov
insl
mov
xchg
and
cwtl
pop
jne
mov
divb
in
mov
stc
inc
xor
dec
cmp
jge
mov
sti
or
mov
fs
addb
jns
xor
and
pop
mov
jg
out
ds
je
lea
add
lds
jge
aam
lret
shlb
jge
mov
movsb
and
jnp
outsb
lcall
mov
xchg
sbb
aad
jg
cmpsb
and
inc
leave
push
outsl
mul
lds
mov
or
outsl
inc
lret
fistpll
in
mov
lahf
jecxz
or
imul
jae
cmp
icebp
jl
in
inc
test
les
jae
push
sub
mov
das
shlb
aam
mov
je
jge
mov
popf
fdivrs
imul
je
inc
pop
cltd
xchg
mov
dec
cltd
sub
and
popa
lods
xor
gs
mov
jb
pop
imul
cld
mov
bound
sahf
mov
fisubrl
xor
mov
mov
adc
loopne
pop
mov
fistl
xchg
cltd
lret
and
test
outsl
mov
orl
xor
adc
push
pop
dec
push
lea
add
xchg
and
or
sub
shr
xor
outsl
jp
fstpt
fs
lcall
push
xlat
lds
adc
shll
mov
push
call
adc
adc
mov
mov
add
test
mov
mov
in
popa
xchg
call
icebp
inc
mov
bound
ds
cmp
enter
inc
loope
aaa
and
jbe
out
rcrb
and
mov
xor
dec
lahf
and
xchg
or
pop
stos
mov
and
or
adc
sbb
lods
mov
imul
xchg
ss
mov
xor
and
push
ficomps
mov
and
repnz
pop
fimull
iret
lods
pop
ljmp
jge
adc
insl
dec
and
sbb
fcomps
pop
adc
shlb
pop
dec
adc
inc
or
jae
jecxz
pop
pop
clc
lods
insl
or
jno
or
add
mov
jo
aas
mov
mov
shrb
and
cmp
idiv
sub
jge
inc
shl
arpl
mov
xchg
out
pop
shlb
inc
mov
loop
cli
pop
xor
mov
sbb
and
inc
insl
popa
negl
cs
sub
mov
mov
into
ja
cmp
out
lret
adc
inc
fists
lock
lods
push
ds
std
cmp
insl
and
pushf
popa
sub
adc
cmp
xor
inc
out
dec
mov
adc
xchg
xor
neg
mov
sub
arpl
fmull
push
or
add
inc
in
cwtl
fisubrl
jmp
pop
and
add
dec
mov
movsl
cmp
xor
pop
push
inc
jne
pop
es
cmp
xchg
xor
repz
or
outsl
ret
add
dec
and
jg
add
dec
sbb
cwtl
enter
fnsave
mov
in
xchg
xor
add
js
and
dec
pop
fisubrl
mov
sbb
dec
cmc
test
xchg
xor
js
nop
dec
clc
and
inc
movsl
pop
adc
jb
push
mov
cli
ret
jle
loope
add
sbb
add
adc
dec
mov
jno
ljmp
xchg
repz
insb
inc
mov
repz
shll
xchg
mov
pop
dec
pop
fmuls
ja
push
ljmp
cmpsb
mov
xor
mov
and
lret
fs
bound
sbb
loope
xor
push
jne
je
mov
aad
leave
scas
scas
out
jle
sbb
xchg
and
push
xor
adc
jl
mov
jo
xor
xchg
push
mov
xlat
outsb
sbb
lock
and
div
popa
out
or
adc
ja
xor
icebp
cmp
icebp
and
ds
inc
mov
dec
addr16
dec
fidivl
add
repz
pop
or
fidivl
xor
mov
test
aas
fsubs
push
mov
and
ljmp
mov
sbb
ret
dec
push
or
or
loop
fwait
and
push
test
in
dec
or
xor
int
leave
jg
xlat
pop
inc
les
repz
js
mov
mov
in
mov
ror
nopl
arpl
push
fs
jne
mov
cwtl
push
hlt
xchg
push
loopne
mov
xchg
jmp
rorl
adc
jge
das
fisttps
xor
sti
js
in
and
push
bound
std
fnstsw
loope
inc
inc
imul
loopne
lds
into
adc
movsl
jb
shll
push
out
out
shll
xchg
inc
cmc
cmpsl
cmp
pop
jl
cmpsb
dec
jnp
sbb
and
js
int3
int
out
jbe
mov
jecxz
xor
mov
inc
fucomip
rorb
dec
push
cmp
xor
enter
ds
cld
or
ret
cmp
add
inc
cltd
adc
sub
jnp
or
les
mov
mov
sti
and
add
inc
fadds
mov
fwait
data16
sbb
and
push
imul
dec
jb
inc
inc
dec
lds
in
sub
ret
xchg
add
adc
out
adc
jno
movsl
dec
mov
cmp
addr16
je
add
sbb
nop
inc
popf
ficoms
push
dec
decb
mov
jnp
sarl
out
rcrb
fs
fs
xor
bound
add
sub
wbinvd
xor
and
mov
orl
sub
add
shrb
insb
fdivrs
mov
xchg
xor
xchg
clc
xchg
adc
cmp
int
jb
repz
jno
sub
out
adc
notl
xor
push
shlb
mov
pop
jl
jle
cmpl
mov
jns
jnp
popf
adcb
adc
imul
xchg
aad
push
add
ret
cmp
and
sbb
add
jp
out
sub
xchg
stos
inc
ss
data16
lock
rcl
ss
inc
or
pop
ljmp
cmp
sub
push
sbb
xor
data16
xor
leave
decb
pop
inc
push
mov
jo
jmp
mov
in
xor
js
mov
data16
arpl
dec
jg
add
mov
mov
pop
inc
push
fdivrs
adc
cs
ret
mov
pop
adc
lds
leave
pushaw
jl
aad
jae
pushf
jae
scas
lea
dec
inc
in
outsb
je
mov
enter
cld
fmull
clc
adc
sbb
push
shl
dec
add
jp
fdivrl
rcl
or
ja
fisubrs
movsl
pop
inc
addr16
jo
mov
pushf
sub
push
das
cltd
jns
stos
mov
push
or
and
jle
push
in
or
pop
push
test
mov
cmp
mov
mov
xor
loop
mov
aam
in
dec
adc
fnstenv
adc
pop
leave
mov
jne
and
adc
cmp
je
xchg
pop
bound
scas
cmpsb
negb
mov
pop
aas
aas
fcompl
fists
push
xchg
ret
fnstenv
popa
rolb
xor
mov
push
xor
test
mov
fdivrs
inc
xchg
addr16
mov
inc
shrb
imul
and
add
jecxz
jmp
dec
xbegin
adc
push
testl
pop
lret
adc
pop
dec
push
pop
xchg
cmp
mov
popa
shrl
dec
inc
movsb
ja
or
pand
ljmp
clc
jns
fildll
aas
test
inc
sbb
push
xor
jnp
jecxz
ret
enter
out
push
ljmp
push
and
cmp
xorb
addl
pushf
ja
adc
loopne
loope
imul
dec
fdivrs
xchg
stos
popa
jecxz
mov
outsb
fdivl
clc
cmp
scas
scas
jne
sub
lds
mov
and
push
mov
mov
lret
or
mov
sub
adc
repz
pushf
pop
jb
and
fcmove
push
ljmp
push
inc
mov
fidivl
jle
rcrl
cmpl
aas
test
scas
adc
add
cld
ja
pop
pop
call
xor
call
mov
add
outsl
adc
cmpsl
ret
daa
pop
aas
jmp
pop
enter
mov
mov
mov
and
loopne
adc
test
push
dec
pop
popf
pop
sub
stc
int3
mov
and
fdivp
pushw
mov
adc
mov
cli
cmp
and
inc
or
in
push
jbe
pop
cmp
mov
cmp
lret
pop
std
scas
or
push
loop
mov
mov
fnstenv
mov
shlb
int3
adc
mov
jno
ds
in
fisttpll
fs
adc
pop
lahf
sbb
in
mov
imul
adc
jo
nopl
cmp
imul
sub
das
mov
out
mov
jp
push
mov
and
inc
out
cmp
jns
push
push
outsb
lret
push
jo
shlb
mov
cmp
lock
dec
fcomps
push
in
fucomi
test
cmc
push
push
cwtl
out
cmpsb
push
jne
out
mov
xor
ret
push
jnp
inc
lods
xchg
cmp
sub
mov
xchg
out
gs
std
push
test
mov
sub
sub
scas
mov
bound
insb
xchg
mov
push
and
cmc
and
gs
lcall
adc
lock
scas
lret
sahf
insb
ja
stos
jae
push
jbe
push
or
mov
xchg
into
push
pop
push
push
daa
pop
jg
mov
js
addr16
jle
mov
and
adc
cmp
xor
imul
pop
iret
addb
in
add
int3
cmc
lock
lret
dec
cld
imul
mov
ret
in
add
in
nop
and
int
stc
imul
dec
test
jle
imul
pushl
inc
in
decb
int3
pushf
pushf
mov
out
rcrb
insb
push
xchg
shlb
scas
cmp
movsb
popfw
pushf
xlat
cld
sbb
cs
test
adc
jl
ret
mov
cmp
mov
int
lods
ljmp
cmpsb
bound
outsb
pop
in
jmp
and
scas
outsl
or
das
addl
dec
jae
jmp
movsb
shl
insb
out
push
aaa
scas
in
mov
jbe
test
cmpsl
jp
dec
leave
fstps
push
mov
sub
cmp
in
in
iret
cmp
sarl
add
aas
subl
lsl
int3
das
adc
push
mov
mov
or
mov
mov
push
adc
cmp
inc
call
movsl
stos
mov
nop
ljmp
jmp
mov
icebp
decb
dec
push
cmpsl
fnstenv
xchg
sub
ljmp
imul
sub
outsl
ja
jmp
inc
jp
xchg
sub
test
pop
out
loopne
push
lret
dec
sbb
stos
xor
sar
out
and
int
insl
dec
push
pop
int3
pushf
mov
outsl
addr16
push
mov
dec
lock
sbb
xchg
je
insl
jnp
add
rcll
mov
or
dec
outsb
ds
jo
dec
lcall
popa
jae
daa
pop
jge
aaa
sbbl
repnz
in
fcom
pop
aaa
mov
in
mov
mov
je
stos
push
hlt
add
repz
push
aas
mov
xor
dec
clc
mov
xchg
xchg
pop
mov
mov
mov
insl
das
xchg
repz
dec
push
cmp
cld
pop
xchg
std
pop
add
js
mov
adc
pusha
pop
sbb
in
lods
jo
insl
test
xchg
or
cmp
and
push
out
loope
or
imul
jg
xchg
add
mov
test
inc
pop
adc
pusha
pop
lds
dec
mov
add
mov
jge
mov
inc
scas
arpl
arpl
test
cmp
sub
in
sbb
ljmp
imul
lods
pop
cmpsl
incl
mov
adc
popa
shrl
hlt
cmpb
pop
decb
movsl
insl
mov
pop
negl
or
jecxz
mull
lcall
sti
cltd
imulb
xchg
das
lahf
jne
mov
xchg
jb
adc
nop
cmp
imul
mov
sub
loope
or
xor
call
sbb
push
fs
jmp
stos
adc
andb
out
xchg
mov
pusha
bound
in
mov
out
adc
adc
mov
test
iret
dec
ret
push
aaa
out
jmp
xor
out
mov
cmp
out
scas
jl
pop
xchg
incb
mov
daa
outsb
cmp
sahf
or
addr16
mov
mov
in
roll
pop
scas
int3
pop
lret
lea
xchg
mov
or
in
pop
sub
sahf
stos
shll
inc
int3
adcl
pop
fs
test
push
cmp
push
ret
ret
dec
mov
or
scas
adc
xor
push
add
add
cld
mov
dec
jl
ljmp
lret
stos
pop
xor
pminub
or
adc
push
clc
lret
mov
cmc
mov
sbb
orb
repz
add
std
fnstcw
dec
mov
in
adc
das
imul
outsl
xor
inc
sbbl
and
mov
int3
mov
loopne
shlb
xlat
out
das
mov
add
pop
push
outsb
or
inc
pop
mov
movsl
jge
or
adc
das
add
bswap
mov
mov
mov
into
test
es
out
stc
sbb
inc
cmp
jno
or
ljmp
cmpsb
scas
inc
jp
and
xor
add
clc
rcr
pop
sub
xchg
lret
aaa
pop
imul
ja
stc
rcrb
insl
and
std
jno
adc
mov
cltd
jle
pop
xchg
xchg
add
inc
mov
and
into
or
cs
jmp
out
or
mov
bound
sbb
or
sti
jle
jecxz
fcmove
xchg
int3
daa
fs
xchg
lret
mov
fnstsw
addl
sbb
repnz
adc
inc
dec
lock
jae
test
xchg
fxam
out
ret
push
or
xchg
inc
inc
sub
pusha
lods
or
std
sbb
or
std
cmc
jo
loop
hlt
scas
mov
test
add
loopne
lods
sbb
cmp
aad
popa
dec
insl
xor
dec
rcrl
scas
lcall
and
inc
ljmp
les
cmpsb
push
push
sbb
push
ss
jae
call
out
push
mov
in
lcall
enter
das
sbb
xchg
xor
pop
repnz
lods
test
aad
cmp
dec
popf
push
add
cli
call
push
push
popl
xchg
rorb
sub
popf
jne
mov
out
in
xor
repz
dec
outsl
cmpb
adc
xchg
arpl
cmp
pushl
das
shrb
not
push
xchg
mov
add
bnd
mov
and
flds
inc
or
pop
push
and
push
adc
stos
sbb
jbe
idivb
leave
sarb
jns
push
cmp
adc
sbb
fimull
pop
loop
popa
push
push
negb
test
fldl
mov
or
fimuls
mov
push
pusha
sub
imul
mov
movsb
push
xor
iret
neg
sbb
pop
fdivrs
sbb
les
testl
data16
loop
dec
mov
pushf
mov
shll
push
pop
jnp
inc
sub
inc
enter
nop
sub
cmp
jns
mov
lock
jbe
mov
lea
push
xchg
fstenv
inc
lea
mov
rcrl
cmc
stos
xchg
mov
mov
sahf
stos
push
shl
jl
in
push
fisubrs
mov
ret
popf
into
jb
test
cmp
popa
xchg
inc
mov
adc
or
repnz
mov
xlat
outsb
push
insl
es
push
dec
mov
sub
push
sbb
add
mov
xchg
add
and
jae
sub
pop
xor
jle
push
icebp
dec
jne
rolb
out
inc
sbb
jno
jg
mov
mov
push
add
ja
sbb
fiadds
scas
cmp
out
mov
mov
lret
xor
mov
jl
inc
xor
add
mov
ds
int3
mov
jae
stc
clc
inc
sub
mov
loop
ss
jns
push
cld
inc
loop
cwtl
call
and
rcrb
xor
stos
jl
movsl
fdivrs
push
loop
cmpsb
jns
mov
mov
hlt
cmp
lret
pop
push
adc
in
pop
jmp
pop
or
xor
sub
xchg
jecxz
push
nop
mov
icebp
inc
add
lods
sbb
push
jl
jmp
repz
loop
ret
or
jns
shll
rcll
or
xor
dec
adc
jmp
lahf
rorl
outsl
xchg
sbb
std
lcall
or
sbb
pop
pop
int3
rolb
mov
hlt
outsb
insl
jp
in
mov
movsl
cmp
scas
dec
jl
inc
add
jge
stos
xchg
dec
push
mov
and
pop
mov
hlt
mov
popf
out
int
fcmove
jo
das
rcr
hlt
mov
mov
add
fidivrs
dec
mov
push
pushf
adc
xchg
insl
cli
test
movsb
ds
loopne
add
adc
icebp
es
in
jno
bound
mov
daa
sbb
in
mov
mov
sbb
aas
add
xor
push
scas
push
jbe
sbb
pop
das
not
push
fdivs
popf
and
rcrb
mov
loopne
pop
out
or
add
pushf
jge
dec
aaa
inc
push
loope
add
stos
repz
decl
sbb
jmp
popf
js
fistl
pushf
call
pop
xchg
call
xorb
lcall
adc
jmp
fisubrl
mov
dec
js
iret
fucomip
pop
out
test
gs
rcll
sbb
sub
push
and
mov
pop
popf
loope
ja
pop
mov
pop
jb
sarl
cwtl
push
inc
jns
clc
push
push
outsb
jb
sub
test
xchg
mov
add
ficoms
popa
cmpsb
cmp
arpl
adc
sbbb
frstor
je
loop
add
jmp
cmpsl
mov
fwait
lods
ds
lods
mov
pop
popf
mov
inc
mov
mov
add
jecxz
add
xchg
sub
js
sti
fistpl
and
mov
aas
sbb
push
andb
xor
loop
jae
and
inc
or
adc
pop
mov
cld
sbb
out
inc
sub
jnp
sub
push
jae
loop
cmp
out
adc
fnstenv
mov
in
out
stc
ret
in
inc
clc
and
jecxz
outsb
push
out
sub
add
adc
inc
data16
xchg
addr16
sub
into
js
mov
insb
dec
int
push
call
rolb
stos
out
movsl
xchg
fdivr
std
dec
push
xor
inc
sbb
push
rorb
aas
loopne
jo
mov
push
sub
lds
push
je
subl
test
jp
xor
mov
xchg
sub
add
or
mov
dec
mov
ret
or
ret
mov
push
inc
xchg
jmp
lret
sub
cmpsb
xchg
pop
lcall
pusha
xchg
cmpsb
int
inc
out
pop
add
jne
mov
jge
loopne
insl
push
dec
mov
je
xchg
arpl
dec
xchg
repnz
lret
out
push
pop
les
dec
es
push
in
fistl
insl
push
push
imul
push
scas
lret
lea
pop
in
ja
in
jnp
dec
idivl
inc
pop
sub
mov
fsubrl
xor
test
adc
mov
fcoml
pop
js
dec
xor
gs
sub
push
leave
sbb
mov
xchg
mov
idiv
stos
xchg
mov
aaa
loop
and
ret
jmp
mov
movsl
cli
add
mov
lock
outsl
lret
dec
das
fdivl
movsb
mov
call
cmpsb
adc
fistps
loope
push
and
mov
adc
jne
mov
xlat
pop
mov
loop
sub
fbld
fists
aad
or
mov
xchg
dec
inc
fsubl
sbb
sti
mov
mov
fcomps
mov
push
movsl
mov
mov
adc
out
inc
adc
dec
xchg
ficompl
imul
pop
inc
pop
adc
inc
push
add
inc
dec
fisttpl
rclb
push
int
mov
xchg
idivl
sub
negb
insb
dec
mov
insb
cld
adc
jnp
mov
fisttpll
in
negl
dec
notl
stos
cmp
leave
inc
fstps
rorb
mov
sbb
call
test
lret
outsl
into
xchg
addb
jns
lock
test
xchg
mov
add
mov
inc
sbb
loope
fsubl
jp
dec
fsubs
cmp
je
jg
js
enter
mov
mov
pop
fs
shr
or
arpl
cmc
imul
jecxz
mov
inc
mov
cmp
shl
add
orb
xor
lods
popa
test
insb
sbb
xchg
cli
arpl
mov
movsl
fisubrs
pop
fwait
jno
dec
or
xchg
rcl
mov
xchg
mov
jle
and
adc
jle
sub
cmpsl
lret
push
popa
and
and
popa
pop
add
out
lahf
jge
popf
mov
push
jbe
pop
mov
mov
cld
push
sahf
mov
js
icebp
add
hlt
push
test
add
rorl
and
out
mov
xor
test
add
dec
clc
jecxz
xchg
jecxz
mov
mov
stos
pop
xor
and
mov
pop
xlat
push
cmc
dec
adc
push
lcall
outsl
in
stc
mov
sahf
daa
fmull
jnp
mov
out
aam
xor
ret
insl
jns
push
lcall
std
jp
data16
in
adc
cmpsl
pcmpeqw
sub
push
adc
mov
add
push
xchg
cmp
cmpsb
add
mov
inc
dec
lock
out
xchg
insl
xchg
push
or
out
es
add
sti
jae
adc
cmpsl
pop
jbe
pushf
aas
into
idivl
add
and
in
and
clc
inc
and
pop
mov
push
xorb
clc
xchg
or
int
xchg
jb
or
sbb
scas
insl
pop
movb
fdivrs
xchg
in
mov
stos
jmp
in
scas
pop
dec
sub
mov
mov
orl
pusha
pop
mov
aad
sbb
push
aam
jae
popf
mov
add
xchg
jge
test
nop
or
jl
test
sub
inc
or
add
sub
sbb
loopne
jp
pop
daa
orb
ficoms
daa
pop
jnp
imull
cmpsb
test
ficomps
mov
pop
dec
sahf
push
and
mov
mov
fistps
cmp
add
stos
inc
sbb
outsb
push
mov
push
jo
dec
fidivs
lret
out
jne
into
test
mov
sub
cmp
cmc
jge
adc
ja
loopne
pop
daa
stc
addr16
push
mov
xor
shlb
int
aam
lcall
and
pop
cmp
push
cmovns
mov
scas
jecxz
cmp
push
sbb
cmp
cmpsl
push
mov
mov
sub
sbb
in
inc
loope
sarb
pop
adc
addr16
movsb
push
sub
dec
xchg
cmp
out
dec
repnz
sub
test
or
mov
test
lea
lcall
xchg
xlat
mov
dec
idivb
pop
shl
decb
pop
setl
mov
fptan
xchg
jbe
sub
scas
or
shl
and
mov
je
and
ja
push
ljmp
or
cvtdq2ps
gs
mov
mov
mov
sub
or
stc
cmp
test
xchg
sbbb
jge
lret
adc
fimull
test
mov
addr16
mov
add
pop
call
pop
jecxz
push
sets
movsl
jge
sub
push
enter
sahf
out
scas
pop
mov
enter
cmp
add
test
sub
push
mov
cmpsl
imulb
jle
aaa
jo
jne
bnd
cmpsl
cld
inc
insb
sub
pop
push
inc
iret
push
ss
fdivrl
adc
cmp
cmp
jb
mov
mov
int3
pop
cli
dec
mov
fidivrs
inc
xchg
ljmp
sbb
and
ret
mov
and
mov
and
filds
hlt
sbb
mov
das
pop
aad
fnstcw
jbe
sbb
repnz
test
pop
push
adc
shrl
les
inc
pop
addl
push
pusha
loopne
into
lods
aam
xchg
pop
fst
mov
cli
inc
mov
cmpsb
jmp
mov
leave
and
add
pop
aas
shrl
add
or
push
cld
roll
or
fsubl
xchg
pop
lods
test
aaa
repz
jle
and
leave
push
cmpsb
loope
fidivs
cmp
cwtl
mov
xor
mov
lods
push
fsub
inc
adc
das
mov
add
or
pop
cmpsl
divl
sub
xor
lock
lcall
cmp
cmp
mov
pop
push
sbbl
lret
roll
pop
enter
movsb
lcall
shlb
cmp
dec
pop
dec
lods
aas
pushf
jne
dec
fiaddl
adc
in
aam
push
ror
lcall
cmp
test
add
fnstsw
or
jbe
add
cmc
xor
enter
jp
loope
fisubrl
fdiv
xchg
mov
fsub
jecxz
mov
icebp
and
je
add
cli
repnz
mov
jnp
cwtl
pop
adc
push
jo
and
out
pop
mov
bound
pushf
std
adc
xlat
jbe
movsl
je
push
cmc
jae
xor
les
xlat
mov
jbe
mov
ret
mov
popf
adcl
push
adc
outsb
sbb
xlat
adcb
cmp
lods
call
stos
push
loop
inc
dec
add
lods
fsubrp
jg
mov
pop
in
out
pop
push
dec
aad
sub
ss
outsb
mov
cmpsl
faddl
out
cltd
lcall
test
lods
lea
out
jae
mov
adc
stos
jnp
pushl
cmp
adc
push
xchg
adc
stos
popf
fmuls
jb
test
lods
add
add
fs
pop
fwait
mov
call
clc
pop
into
ret
lea
aaa
icebp
mov
sub
xor
shlb
hlt
dec
mov
add
pop
sbb
loopne
scas
jae
or
dec
shr
cltd
cs
subl
iret
dec
jne
loope
or
loopne
cmp
fnstenv
cwtl
and
icebp
call
jp
mov
enter
sbb
inc
pop
shl
push
ljmp
add
mov
sbb
inc
lret
shll
cmp
pushf
jp
jp
pop
xor
nop
xor
roll
fucompp
push
mov
imull
aaa
cmp
mov
sbb
or
out
jno
jno
push
mov
andl
sub
or
jnp
aad
into
jb
arpl
sub
ss
sub
popf
push
std
pop
push
pop
in
xor
lock
jb
mov
es
and
outsl
test
test
jne
mov
xlat
cs
repnz
pop
and
loopne
and
cmp
mov
movsb
in
outsb
xchg
cmpsb
cli
testb
add
jmp
push
in
scas
pop
sub
dec
jnp
repz
mov
in
test
lods
push
mov
or
cld
and
out
dec
mov
idivl
adcl
stos
cmpsb
hlt
imull
test
inc
mov
loope
leave
xchg
xor
stos
in
pop
mov
sbb
mov
lahf
inc
int3
lods
mov
push
lcall
mov
call
mov
dec
jmp
xchg
ss
sub
jle
jg
sub
int3
ljmp
pop
addr16
cmp
pop
nop
cli
dec
cld
ret
data16
lret
inc
jne
loop
aaa
push
adc
test
int3
push
js
xchg
daa
push
jg
and
mov
cmp
cmp
rolb
pop
ds
xorl
daa
cmp
popa
push
pushf
cmpsl
mov
hlt
mov
out
popa
mov
mov
pop
loope
loop
popf
mov
pushf
test
fs
jmp
fidivs
mov
iret
xor
mov
sub
stc
sub
ja
sbb
adc
jmp
test
decl
pop
sbb
aad
cmp
cmp
enter
jae
iret
xchg
out
movsl
cmp
sbbl
push
and
dec
arpl
add
mov
in
iret
addl
push
inc
adc
test
fdivrs
push
mov
imul
sbb
mov
xor
popa
xor
aad
jo
cwtl
or
and
jmp
outsb
popa
and
stos
pop
push
add
push
xor
outsl
xor
pusha
lds
cli
xchg
sub
xchg
stos
fstp
stos
rorb
fwait
mov
movsb
dec
in
cmpsb
add
mov
out
cmc
add
stc
jb
data16
stos
aaa
jp
bound
lret
sahf
ret
int
mov
repnz
insl
in
fs
xor
push
das
push
mov
lahf
int
ret
dec
cmpsb
js
xchg
sbbb
or
lret
or
mov
sub
mov
jae
in
dec
lods
sarl
int3
push
mov
mov
xchg
cwtl
movsb
pop
sub
pusha
push
jns
mov
repnz
test
push
adc
jno
es
bsr
adc
push
cmp
lahf
sbbb
adc
daa
ljmp
sub
js
stos
mov
pop
fs
rclb
sub
jg
fdivl
xor
pushf
shll
cmpsb
mov
sbb
sbb
xchg
mov
test
adc
fs
inc
pusha
lea
insb
xchg
aam
int3
cmp
xor
scas
insb
xlat
data16
xor
jo
xor
stos
outsb
iret
mov
pop
adc
pop
pop
pushf
inc
inc
cwtl
xchg
and
sub
call
sbb
fisubrs
clc
mov
lcall
or
dec
adc
push
push
push
pop
cwtl
aas
pop
mov
add
inc
aam
push
dec
xchg
int3
mov
sbb
push
cmpsb
sbb
jae
cmpb
mov
cltd
xchg
repz
imul
adc
imul
xor
adc
idivb
lcall
push
jge
cmpsl
mov
arpl
loope
inc
or
push
enter
mov
and
fs
jno
inc
pushf
mov
movsb
imull
fisttpl
in
repz
scas
out
jbe
ret
sbb
adc
pop
inc
jecxz
dec
and
jno
push
je
mov
xchg
inc
cli
and
cmp
xchg
pop
dec
js
int
adc
aas
out
jmp
lds
mov
test
loopne
filds
jmp
add
insb
sub
dec
and
mov
idiv
adc
push
cmp
sub
xchg
sbb
scas
inc
push
xchg
leave
out
add
loope
les
movsb
test
inc
mov
add
xchg
call
rclb
adc
loopne
push
jae
pop
adc
xchg
xorl
pop
fiadds
ja
add
stos
pop
out
test
inc
aaa
dec
pop
mov
pop
int3
mov
lret
out
cwtl
mov
fcoml
fsubrp
in
xchg
xchg
jb
dec
dec
xor
dec
push
mov
nop
sbb
clc
xchg
loop
mov
xchg
aad
pop
xor
shrb
js
aam
pop
loope
adcl
imul
gs
aam
dec
shll
dec
push
mov
xchg
push
adc
cmp
out
dec
fs
insb
popa
sbb
pop
mov
xor
and
repnz
sti
fldenv
fs
lcall
das
sub
repnz
jae
das
inc
inc
cld
scas
icebp
xchg
xor
inc
dec
push
js
mov
push
imul
cmp
es
shl
xor
mov
lods
lods
je
mov
outsl
dec
push
cmp
mov
mov
aad
bsr
pushl
clc
xorl
cwtl
pop
loop
dec
or
add
aas
sbb
push
call
or
jmp
movsb
dec
and
orl
cmp
jno
lods
addr16
inc
add
dec
jecxz
pop
sarb
test
xor
and
mov
lcall
add
cmp
mov
jmp
repnz
cltd
pop
repz
loopne
mov
jl
scas
push
push
xorb
sti
popa
and
mov
inc
or
sbb
push
xor
sbb
inc
inc
pusha
stc
ds
mov
lret
enter
sub
xor
xor
lret
lret
dec
les
dec
pusha
sub
add
and
jl
dec
dec
cs
sub
das
cmpb
out
sbb
sub
mov
mov
jl
call
cmp
subl
mov
mov
xchg
je
pop
cmpsl
jp
out
pop
jp
xchg
movsl
mov
popf
add
xchg
rol
mov
xor
test
xor
gs
sbb
mov
pop
xlat
ljmp
xlat
dec
push
mov
mov
pop
xor
cmpsb
les
mov
fdivr
stc
mov
xchg
cmp
mov
stos
imul
iret
sbb
sbb
jo
call
sbb
out
in
lock
out
dec
test
sub
in
adc
je
insb
roll
hlt
cld
sub
xchg
addps
es
ljmp
ret
xchg
daa
dec
add
repz
xlat
or
mov
inc
push
iret
rorl
lock
and
shl
sub
mov
ljmp
je
jno
or
xor
lds
ret
xchg
leave
addr16
mov
cs
adc
es
dec
xchg
insb
cmp
ret
xor
aad
loopne
pusha
push
je
out
add
cmp
mov
leave
ss
push
imulb
icebp
test
pop
out
sub
repnz
add
dec
mov
mov
iret
mov
insb
mov
pop
xchg
mov
in
adc
cmc
xchg
jecxz
fmulp
fwait
lahf
mov
lock
sbb
or
sub
lods
pop
push
and
pushfw
out
scas
push
imul
call
movsb
cmpsl
jg
sbbb
mov
or
xchg
inc
push
mov
fnstenv
push
call
pop
hlt
loop
inc
ret
repz
push
dec
mov
out
ret
sbb
subb
xor
mov
hlt
mov
je
add
inc
mov
xchg
lods
stos
and
vcvtdq2pd
pusha
lea
cmp
test
dec
jmp
jg
adc
jne
xchg
mov
cmp
loopne
cmp
lea
repz
call
fxch
xchg
add
push
adc
pop
lea
adc
and
mov
imul
lcall
adc
mov
jo
mov
maskmovq
imull
jb
loopne
mov
mov
jo
lock
sti
fldcw
mov
ficoml
pop
jge
push
jbe
mov
insl
jecxz
inc
push
cmpsb
mov
cmpsb
repnz
xchg
xlat
dec
or
inc
push
inc
hlt
jae,pt
mov
push
in
lods
push
cmpsl
xor
imul
mov
fildll
mov
adc
scas
lea
mov
jnp
faddl
cmovg
imul
aam
mov
inc
mov
inc
loop
repnz
mov
jns
xchg
stos
dec
scas
cmp
push
jns
xchg
jns
push
dec
aaa
jmp
jle
inc
je
outsb
sbb
dec
adc
test
mov
pop
ljmp
clc
fwait
cmp
fisttpll
je
lahf
stos
xor
jb
lret
mov
daa
insb
jmp
and
faddp
xchg
push
cmc
out
test
add
mov
test
daa
sbb
or
or
leave
mov
negb
adc
inc
scas
andb
fs
xor
mov
sbb
aad
xchg
sbb
outsb
aad
sarb
sbb
sbb
std
mov
sub
sub
std
xor
mov
mov
jo
lds
test
js
pop
lods
adc
jb
mov
ret
hlt
mov
pop
push
out
sub
mov
xor
mov
mov
std
add
sbb
in
loope
jnp
sar
push
sbbb
sub
arpl
mov
insb
fdivl
or
clc
leave
negb
outsb
stc
out
push
sbb
add
cmp
sbb
fsubl
ret
inc
rol
mov
les
sbb
push
xor
ret
inc
push
iret
dec
mov
sbb
call
mov
sbb
sbb
cwtl
inc
sbb
mov
inc
xor
pop
push
sub
push
adc
shll
pushf
cmpsl
mov
push
mov
lahf
ljmp
lret
mov
and
fcoml
or
call
dec
mov
add
and
movsb
out
xchg
pop
cmpl
inc
hlt
aas
adc
mov
in
add
inc
jmp
mov
or
enter
cwtl
inc
fs
pop
dec
ret
jmp
adc
pushf
mov
xchg
sub
sbb
jmp
jp
pop
mov
arpl
cmp
sub
addb
fildl
push
pop
xor
ds
cmpsl
cld
inc
add
cs
scas
daa
cmp
insl
dec
sarb
fdivp
loopne
xor
cwtl
in
imul
inc
mov
sarb
cmc
call
mov
inc
movl
clc
lods
mov
ret
aam
imul
mov
push
and
cld
stc
jns
push
mov
fildl
imul
and
mov
pop
inc
out
cmp
mov
push
inc
pop
jno
pop
push
jmp
shll
pusha
or
inc
push
sub
lock
cmp
add
mov
imul
mov
sbb
in
cmp
int
xchg
std
adcb
push
daa
mov
push
push
or
test
scas
xor
pop
sbb
pop
mov
dec
xor
pop
stos
or
test
cmpsl
dec
add
inc
out
bound
sbb
cmpl
mov
mov
mov
mov
loop
test
leave
push
loopne
scas
and
ficomps
movmskps
andb
bound
jmp
stc
imul
add
pop
neg
dec
fldcw
jge
mov
cmp
or
and
and
xor
cmc
jmp
loop
add
pop
mov
lock
in
popa
lods
xor
mov
xchg
ret
mov
push
inc
lahf
inc
mov
loopne
out
sbb
xchg
fnstsw
sarl
jl
adc
or
pop
and
fcoml
mov
inc
pushf
insl
xor
pop
mov
shll
scas
jne
outsb
pop
jo
pop
push
es
mov
test
idivl
add
mov
js
cmp
notb
imul
add
fbld
adc
mov
cmp
jbe
sahf
push
lret
aam
ja
orl
sub
rclb
mov
mov
into
mov
or
rorb
add
mov
imul
xchg
push
dec
mov
jp
int
mov
xchg
dec
jne
sbb
aas
and
pop
pop
fs
lret
jo
loope
adc
or
pop
mov
or
pop
imul
filds
add
jl
fcmovu
test
or
aas
mov
push
add
xlat
inc
push
pushf
call
addr16
dec
stos
adc
addr16
ds
inc
aas
jmp
inc
add
cmp
clc
jg
xor
cli
dec
inc
cmc
iret
jge
aas
aaa
mov
mov
mov
add
jp
shrl
push
xor
push
pusha
test
adc
out
dec
jo
shl
xor
leave
inc
ljmp
adc
adc
inc
repnz
xchg
xchg
xchg
sahf
aas
add
xor
push
xor
inc
sbb
loop
jno
repz
or
and
in
jmp
jae
adc
imul
inc
lahf
pushl
inc
xchg
mov
mov
cmp
bsf
inc
xchg
scas
popa
mov
repz
mov
dec
cmp
dec
inc
adc
mov
fdivrs
inc
inc
inc
push
sarl
mov
aas
fcomip
popf
dec
arpl
loopne
or
and
sbb
pop
sub
test
mov
fs
cmpsl
jmp
pop
add
jp
push
test
lcall
sub
cwtl
mov
push
hlt
aad
nopl
inc
into
mov
fwait
push
sbb
dec
test
mov
jle
scas
aam
push
cld
fiadds
fldln2
bound
or
test
in
pop
jne
sub
jo
repnz
add
call
ss
sbb
in
ds
int
and
cmp
lret
cltd
das
roll
je
clc
jmp
icebp
jecxz
jbe
mov
add
pop
jecxz
ficoml
cmpsl
xor
cmp
mov
aad
xor
inc
data16
fstpl
outsl
mov
mov
jb
cwtl
je
dec
cmpsb
add
sub
rolb
push
dec
lcall
add
xchg
inc
loope
mov
mov
cmp
jle
jbe
jns
and
jmp
popl
sarb
dec
or
cld
cmp
out
pop
cmpsl
cld
inc
sarl
addb
stos
iret
ljmp
push
es
mov
lock
shll
bound
and
test
lcall
push
repz
setne
push
push
sbb
adc
push
pop
out
pop
loopne
pop
push
add
std
add
test
push
xor
and
and
pop
sarb
cs
mov
inc
clc
stos
mov
loopne
es
lds
in
jle
jo
pmulhw
dec
fistpl
mov
push
imul
cmc
fimuls
sarl
loope
mov
push
cwtl
loope
scas
xchg
ficomps
xchg
hlt
cwtl
inc
testl
int
es
sub
cli
add
xor
movsb
and
sub
inc
je
setl
int
xchg
and
cmpsl
or
stc
push
clc
in
dec
sahf
sti
add
je
nop
sub
into
xor
out
movb
outsb
popa
mov
fldt
xchg
leave
inc
or
inc
insb
cwtl
jmp
xchg
cmp
adc
mov
mov
aad
jmp
popa
nop
pop
sahf
aas
xchg
xchg
push
pop
adc
push
mov
mov
ret
fstl
sub
inc
int
loop
lret
ljmp
pop
xchg
cli
clc
xor
mov
flds
jbe
in
je
repz
lods
dec
push
ds
lret
test
jae,pt
sbb
ss
cmp
mov
fistpll
out
sub
lods
outsl
adc
xlat
xchg
ds
or
jl
cmp
sub
shrb
xchg
mov
cltd
insb
mov
insl
std
movsl
pop
xchg
inc
shlb
xchg
sbb
sub
fsubrp
mov
inc
mov
out
call
jp
xchg
cmp
sbbb
inc
das
mov
enter
outsb
inc
pop
pop
add
or
in
inc
sbb
xor
aaa
xchg
mov
add
pop
mov
push
inc
outsb
stos
sarl
sub
dec
cwtl
ffreep
add
dec
bound
mov
btc
lcall
sbb
xchg
or
cwtl
sub
sub
sub
jmp
pop
mov
imul
mov
roll
ja
shlb
push
ja
dec
push
sub
mov
cltd
jp
cwtl
and
sbb
xor
test
xlat
pusha
clc
push
mov
out
push
dec
fdivl
and
pushf
or
fucompp
call
fstpl
mov
daa
jge
pop
xor
pop
mov
push
push
xor
mov
addr16
cld
sub
mov
adc
movb
out
data16
or
sbb
pop
ja
in
movsl
xchg
xor
ds
ljmp
xchg
call
add
xchg
inc
inc
dec
pop
inc
mov
cmpsb
cmpsl
inc
push
lods
mov
outsb
je
sahf
jbe
rolb
pop
sub
dec
mov
xchg
cmpsl
mov
das
in
popa
mov
mov
push
push
push
ficomps
sub
push
xlat
jb
mov
std
cs
andb
pop
jecxz
lea
adc
adcb
xor
addr16
push
int
pop
push
cmp
mov
lret
arpl
or
xchg
fstpl
fimull
xorl
pushf
pop
idivb
and
cmp
dec
lret
test
out
mov
mov
mov
and
sub
xor
mov
daa
push
lret
jl
push
or
in
into
xchg
outsb
cltd
push
mov
int3
adc
mov
xlat
and
mov
xchg
ljmp
or
cmpsl
stc
inc
push
add
mov
shlb
adc
lret
mov
cmp
adc
repz
jb
push
push
add
in
and
adc
out
jl
sahf
xchg
imul
sar
adc
lods
and
xor
push
das
popf
adc
or
clc
and
lock
inc
pop
bound
inc
lods
repz
lds
jmp
leave
adc
fildl
jmp
cwtl
sbb
mov
in
notl
movsb
aad
stos
cltd
ss
mov
lahf
xor
stos
inc
adc
inc
cmc
push
xchg
rolb
in
outsb
iret
cwtl
or
mov
sub
sub
ret
ret
fwait
stc
jno
sbb
mov
mov
insl
dec
pop
pop
xchg
sti
loope
out
cmp
mov
lret
popf
mov
je
addr16
cmp
push
mov
adc
xchg
call
movsb
leave
or
lods
push
scas
rcrl
jecxz
mov
pop
and
mov
arpl
js
inc
shrb
outsl
imul
jecxz
pop
pop
imulb
int3
ret
repnz
jnp
or
mov
mov
cmp
pop
div
push
add
lcall
mov
and
and
sti
mov
sub
enter
sbb
in
addb
mov
dec
fldt
push
jnp
mov
lret
adc
adc
cmc
dec
popa
cmp
dec
insb
or
lahf
fstp
xchg
jae
sbb
jns
mov
clc
mov
push
and
jne
test
test
call
add
add
pop
insl
rorb
int3
cli
jg
js
xchg
mov
or
push
mov
aad
xchg
pop
mov
and
or
or
subl
mov
jl
insl
rorl
add
push
leave
ret
xor
shrb
add
cwtl
lcall
adc
sbb
mov
push
rcr
dec
aaa
mov
mov
ret
movsb
sbb
out
aam
xor
jecxz
dec
gs
imul
adc
cmpsl
push
sub
push
fcomps
lock
and
xor
lahf
out
mov
pusha
mov
push
jge
mov
cld
jmp
jmp
rol
fdivr
sti
ret
or
mov
in
mov
notl
ret
dec
mov
insb
jae
enter
fldcw
arpl
push
imul
js
push
xor
mov
pusha
inc
cmp
and
pop
adc
movsb
push
cs
mov
push
loopne
int3
add
mov
cmp
test
or
cltd
cmp
scas
sub
dec
repz
mov
test
cwtl
jne
nop
lret
and
addr16
insb
repnz
jnp
mov
and
scas
xor
jmp
or
sbb
cmpsl
in
dec
add
dec
mov
loop
popf
mov
sbb
push
into
sub
dec
or
cmp
mov
lods
cmp
iret
add
cltd
frstor
jbe
or
lret
inc
push
or
pop
cwtl
stos
mov
sbb
adc
sti
jnp
vpcmov
jecxz
mov
jmp
test
aaa
fisttpll
xchg
out
fimull
mov
xchg
mov
dec
xchg
pop
add
pushf
jbe
test
or
arpl
xlat
aad
mov
adc
mov
push
pop
sbb
aad
orl
push
push
dec
mov
mov
cwtl
rol
outsl
dec
lret
sahf
pop
test
cmp
push
xchg
int3
pusha
push
cmpsl
and
movsb
ljmp
int
into
int3
mov
mov
idivl
mov
cmc
shl
jl
fst
jl
bswap
fsub
jnp
mov
dec
xchg
movsl
pop
xor
lods
push
dec
popf
mov
dec
mov
stos
mov
fcompl
sub
test
rcll
and
lret
inc
aad
dec
mov
es
mov
adc
out
sub
in
test
lret
and
xchg
call
loop
fsubl
test
pop
or
jp
and
cmp
in
push
test
add
jb
data16
sti
aad
fs
pop
pusha
sub
mov
cwtl
cmpsb
dec
push
mov
sahf
mov
mulb
add
shlb
into
cmp
fwait
in
cmp
sarl
out
shll
cmpsb
push
dec
xchg
xchg
jp
mov
cmc
jecxz
sub
push
stos
neg
ficoms
mov
insl
jae
enter
xchg
iret
fstpt
mov
jge
cmpsb
stos
pop
addr16
mov
js
das
mov
repz
clc
push
es
ret
pop
pop
insb
mov
xor
rol
or
es
sahf
js
popa
rcrb
add
in
xchg
mov
cmp
sbb
xor
inc
loopne
pusha
out
mov
adc
scas
dec
cmp
mov
push
sub
dec
pop
nop
push
mov
ss
dec
and
ss
cmc
mov
inc
sar
mov
xor
xchg
bnd
scas
push
loope
orl
addl
popa
pop
sti
mov
adc
xchg
xchg
lahf
ss
jae
nop
subl
mov
sbb
sbb
scas
std
aam
jecxz
pop
inc
and
adcl
xchg
movsb
jl
xor
dec
insl
test
adc
or
and
rcrl
and
jp
pop
inc
adc
fists
pop
lahf
dec
xchg
fs
pop
lahf
ret
pop
iret
lock
into
imul
scas
mov
mov
add
cld
sub
outsl
mov
adc
out
cmpb
push
inc
addb
dec
xor
adc
xor
test
incb
rorb
mov
fcmovb
or
xchg
fdivrl
mov
xchg
mov
xor
daa
or
hlt
adc
cmpb
mov
inc
cs
mov
or
jno
pop
aad
ret
push
pop
xchg
and
add
xchg
ss
pop
inc
popa
mov
sbb
lcall
loop
jns
sub
pop
lea
inc
cmp
ljmp
dec
mov
mov
loopne
repz
pusha
dec
xchg
adc
sbb
and
subl
mov
sti
dec
add
fnsave
testl
mov
scas
into
inc
xor
pop
fwait
rclb
xchg
in
repz
sbb
popa
mov
xchg
cli
cmc
push
sbb
outsb
mov
or
les
jnp
inc
mov
fsubrs
leave
mov
stc
test
dec
es
rcr
enter
push
mov
aam
mov
add
aas
inc
cwtl
sbbl
jae
pop
int
shl
mov
lds
sub
loopne
movsl
push
ret
cmp
insl
cltd
adc
andb
insb
in
dec
lds
sbb
xor
xor
sub
mov
add
fs
mov
push
and
setno
pop
ljmp
movsl
rcr
lcall
pop
out
mov
xorl
movsb
je
mov
aas
fdivrp
pop
sti
inc
sub
imul
aas
bound
into
aas
das
add
mov
push
lret
ljmp
dec
mov
call
ja
dec
fstpl
adc
addb
xchg
sbbb
or
popa
divl
jno
sub
mov
orw
dec
push
and
jo
or
arpl
lods
add
xlat
adc
add
movsl
js
inc
arpl
inc
fiadds
jle
pop
mov
inc
push
lock
fstps
push
or
mov
cld
push
push
subl
js
xor
adc
fwait
mov
jp
and
int
stos
sub
jb
sarl
mov
in
pop
in
or
clc
imul
xchg
add
or
jo
inc
loop
and
scas
jbe
lret
ret
incb
nop
adc
xchg
push
jne
out
push
add
push
cltd
push
sbb
jecxz
adc
mov
ja
or
adc
add
loopne
pop
pop
and
pop
jl
push
pushf
sub
xchg
mov
ja
lret
inc
mov
mov
insb
jbe
mov
mov
cld
das
and
cltd
mov
loopne
or
les
mov
int
xor
add
dec
mov
dec
mov
fmull
sub
lock
jae
loopne
mov
xchg
aad
push
dec
les
pop
pop
sbb
lods
cmp
stos
xor
mov
jg
mov
xchg
mov
cmp
mov
aaa
out
xor
pop
popa
xchg
dec
repnz
inc
xchg
sub
imul
or
push
jae
push
inc
jno
mov
push
inc
pop
mov
scas
push
jbe
dec
cmpsl
sub
mov
add
dec
sahf
fldcw
fs
push
adc
cmp
add
or
pop
push
mov
xchg
movsb
lock
mov
adc
cmp
mov
xor
sbb
mov
shlb
xor
push
loopne
andb
push
mov
add
mov
test
je
sbb
jae
xchg
sbbl
mov
lcall
aaa
loop
push
jl
mov
sub
idiv
loopne
loopne
shlb
movsl
pop
addl
das
xchg
lret
cmp
add
xor
pop
adc
mov
jecxz
in
mov
loop
shr
mov
cmp
push
mov
gs
cwtl
and
xchg
push
jnp
icebp
mov
mov
gs
dec
fdivr
aas
xchg
test
jp
jno
fldt
push
inc
fbld
jmp
fistps
pop
dec
je
ja
arpl
arpl
pop
scas
jmp
lcall
or
cs
xchg
pop
ljmp
in
xor
adc
lret
xor
int
rcr
mov
mov
sbb
fwait
jmp
sub
mov
popa
sbb
aam
mov
test
xor
xbegin
cld
mulb
xchg
test
pop
sbb
cmp
rorb
xchg
push
inc
jo
jb
cmpsl
inc
pop
int
pop
push
dec
das
imul
sub
pop
test
jne
mov
jbe
pop
enter
pop
in
sub
mov
aad
iret
mov
dec
pop
fiadds
push
xorps
test
xor
movsb
shlb
insb
add
test
cmpsl
enter
adc
enter
lds
jb
mov
and
stc
mov
fsub
push
out
and
lock
and
mov
or
sahf
or
push
mov
mov
sub
test
subl
push
add
enterw
cltd
ficomps
push
xlat
lods
xchg
out
shl
nop
sbb
orb
aaa
imul
sbbb
adc
add
xor
adc
jbe
imul
mov
xchg
imulb
jno
xor
and
movzwl
sub
outsb
out
dec
sbb
jns
fisubl
aam
int3
push
xchg
pop
ret
add
popf
mov
aas
inc
mov
jl
ja
inc
test
aaa
fsub
into
inc
jmp
imul
fxch
adc
cmpsb
pop
je
cs
mov
mov
call
idiv
je
inc
ret
orps
sub
jno
test
hlt
and
jg
cmp
pop
xchg
mov
ja
clc
push
dec
sub
jnp
sbb
test
push
movsl
ret
fstps
imul
cmp
push
mov
test
mov
in
fcomi
inc
adc
pop
cli
je
adc
ljmp
fcomip
mov
dec
enter
xor
xorl
jne
mov
ret
std
out
mov
jno
mov
mov
jg
popf
cs
xchg
hlt
js
addb
hlt
fisubrs
ja
push
sub
or
jo
inc
mulb
cmp
xchg
subl
mov
test
cmc
sbb
loop
and
lods
jae
add
jecxz
pop
movsb
xchg
add
mov
test
popa
imul
fildll
pop
push
gs
mov
jp
pop
mov
sub
daa
fidivrs
xchg
pop
and
sub
push
stos
stc
cmp
lods
jg
arpl
sarl
fucompp
insl
jbe
leave
mov
pop
in
or
lods
and
adc
popf
pop
dec
mov
xchg
icebp
jge
popf
fnsave
pusha
nop
push
sbbb
xchg
jle
cmc
dec
mov
jns
nop
mov
pop
movsb
and
imulb
mov
insl
mov
jne
add
stos
loopne
jl
rorb
inc
scas
adc
mov
mov
psubw
fidivrl
sahf
mov
add
hlt
sbb
rcr
inc
cmp
std
js
pusha
aas
inc
xchg
inc
cld
pop
stc
mov
fisttps
js
dec
test
repnz
cwtl
addr16
jmp
insl
pop
sahf
lcall
lret
movsl
rclb
fld1
rolb
lcall
leave
mov
es
pop
mov
fidivrs
fcoml
mov
cmpsb
sub
ret
lods
cmpl
insl
enter
push
popa
cmovno
test
xor
jl
push
arpl
je
leave
lcall
mov
ret
fs
fstpt
and
ret
insl
xor
mov
dec
cmpsb
sbb
mov
cmp
jmp
jns
mov
ds
lock
nop
pop
mov
sub
stos
add
int
xchg
jno
add
packuswb
dec
out
rolb
pop
scas
sbb
or
mov
mov
push
adc
xchg
mov
addr16
movsl
fnstenv
mov
dec
jns
outsb
jae
or
mov
pusha
clc
adc
mov
loop
inc
push
mov
mov
adc
je
popf
scas
shrl
adc
out
outsb
xchg
das
add
mov
in
ja
hlt
scas
mov
out
test
or
add
add
push
sbb
insb
andl
add
add
aam
and
xchg
les
pop
push
xchg
jmp
dec
daa
pusha
addr16
pop
out
add
std
jns
sbb
repnz
stos
pop
dec
mov
dec
inc
mov
into
pop
jmp
jne
mov
and
insb
lock
test
jbe
lds
mov
aaa
clc
ret
lret
or
sub
or
sub
push
inc
fsubl
repnz
arpl
and
mov
cwtl
int3
push
sub
daa
aas
lea
jne
pop
push
mov
push
testb
out
call
test
add
ds
dec
jo
push
icebp
jecxz
or
std
loop
mov
hlt
push
fnstsw
inc
mov
or
ss
sbb
push
mov
push
popf
shrl
outsb
jmp
nop
mov
aaa
stc
pop
test
sbb
popa
out
add
mov
loop
mov
push
cmpsl
jmp
std
adcb
int3
xlat
inc
rol
pusha
and
rcrl
adc
sub
icebp
jge
cmp
pop
jmp
push
sbb
inc
dec
clc
mov
icebp
inc
pop
xor
inc
mov
xchg
fwait
and
add
movsb
clc
shll
stos
or
lret
and
popa
int3
call
enter
and
mov
and
mov
jb
xchg
adc
pop
test
inc
inc
ss
daa
pop
push
xchg
pop
insb
push
inc
pop
add
stos
pop
pop
pop
inc
push
outsl
popf
sbb
scas
dec
jns
sbb
xchg
push
sub
das
inc
rcrl
jmp
cmp
push
ret
push
dec
clc
jnp
dec
sbb
inc
adc
ficompl
and
push
dec
stos
pop
sbb
stos
loopne
sbbb
test
adc
mov
jae
pop
addr16
pop
in
add
addr16
daa
sub
and
mov
icebp
test
push
fcomps
pop
jle
aam
inc
jp
movsl
aas
mov
shl
fnstcw
sub
aaa
cs
cmp
xor
clc
scas
sub
sbb
inc
sbb
xlat
and
adc
test
jmp
dec
inc
fwait
out
xchg
jecxz
pop
ss
lcall
dec
mov
inc
jecxz
inc
pop
or
leave
shlb
adc
dec
scas
push
sahf
fildl
mov
xchg
add
add
out
repz
jae
sub
cmp
xchg
es
mov
mov
push
cmpsb
xchg
or
icebp
pushf
cmp
add
aas
lock
test
call
out
sub
sub
fsubrp
out
push
in
xlat
cwtl
in
jno
fimull
lret
or
mov
jmp
mov
add
imul
lret
and
mov
insl
daa
jae
pop
push
inc
fnstsw
cli
adc
repnz
pop
fcmovne
stos
pusha
popf
sbb
push
jnp
dec
xor
pop
incl
xchg
stc
jne
xchg
mov
xchg
or
sub
pop
cld
and
loopne
imul
repz
xlat
sub
push
fldcw
iret
dec
mov
insl
lret
cmp
imul
ss
and
jbe
add
test
push
pop
lock
cmp
roll
rorb
icebp
stc
les
sbbl
faddl
mov
cmpsb
adc
pop
mov
push
inc
mov
inc
push
ss
sbb
xchg
lea
sub
xor
jae
pop
add
jecxz
aam
sbb
xchg
js
mov
dec
mov
mov
ror
pop
add
xchg
inc
and
add
cmp
js
mov
sbb
je
movsb
pop
shlb
jmp
mov
lea
stos
pop
loop
pushl
loope
cmp
sub
dec
xor
data16
pop
sbb
mov
shlb
movsb
mov
ficoms
test
and
add
xorl
xlat
sbb
pusha
sub
jmp
and
sbb
xor
push
jnp
sub
and
pushf
jo
pop
stc
fists
or
push
fdiv
stc
lahf
fimuls
daa
inc
jl
dec
dec
int3
pop
sbb
mov
cmp
push
push
inc
aad
cmp
lock
scas
lods
int
lahf
and
push
mov
popa
jecxz
add
mov
cmp
loope
and
lret
fldl
inc
mov
insb
dec
mov
fs
push
push
imul
sub
cs
sub
lock
add
push
jns
test
lods
or
inc
addr16
fldt
out
orl
cmpsl
inc
repnz
and
jo
arpl
fs
and
shll
pop
push
idivb
test
enter
inc
loopne
outsb
popf
es
lods
cmp
xchg
and
mov
inc
xchg
and
mov
mov
arpl
cltd
outsb
mov
jle
cmp
in
sub
decb
cmp
sahf
jmp
jno
es
mov
mov
test
loopne
lods
mov
mov
sub
cmp
ja
mov
pop
push
in
xchg
jb
adc
es
pop
sub
aam
mov
popf
icebp
stos
push
dec
push
push
fisttps
sub
xchg
push
push
and
xchg
hlt
pop
fildll
addr16
jl
loop
push
xchg
fisttpll
adc
popf
outsl
mov
sub
sbb
aas
jge
fs
loop
ljmp
xor
jno
movsl
inc
inc
repz
mov
cmp
daa
push
jl
ds
lock
loopne
dec
inc
and
push
mov
je
xchg
jne
shrl
dec
ja
mov
lret
and
test
clc
sub
lcall
or
xchg
repz
and
shll
popf
or
push
cmp
ja
fisttpll
sub
xor
out
mov
scas
push
cmp
add
jno
mov
push
lea
leave
pop
sbb
cmpsb
cs
sub
xlat
jne
pusha
and
or
sbb
ss
pop
inc
mov
lods
movsl
int
cmpb
add
out
bound
mov
mov
daa
js
in
movsl
test
cmpsb
dec
std
mov
cmp
daa
mov
sbb
fs
mov
xor
pushl
es
jecxz
cld
fcomps
lods
test
add
pop
mov
cmp
pop
daa
testb
sarl
adc
mov
cmp
pop
dec
dec
clc
dec
out
jnp
lcall
xor
sbb
lcall
sub
sub
dec
jge
scas
in
aas
push
sub
xchg
nop
sub
scas
cli
add
inc
sub
sbb
push
das
adc
mov
dec
cmp
xchg
push
dec
sbb
in
pop
sarl
ss
pop
mov
push
jmp
or
xchg
test
int3
add
in
or
push
xor
fsubrl
stos
cltd
xchg
sub
jnp
fisttpl
call
add
stc
jnp
mov
pop
push
sub
cmp
fstpl
daa
clc
and
push
mov
mov
call
loope
jns
fcoms
imul
jp
fs
mov
jns
movsb
decb
mov
std
add
leave
mov
dec
lods
iret
push
jb
gs
mov
out
ljmp
sbb
sbb
fdivl
ror
sarl
fwait
mov
lds
sarb
add
jge
xor
ss
data16
cld
inc
repz
adc
lret
cli
fdivs
sahf
bound
andb
iret
setle
out
mov
scas
mov
push
enter
js
mov
jnp
mov
sti
and
sbb
adc
lods
add
dec
daa
repz
and
pop
mov
or
sti
popa
push
jg
or
inc
lods
test
xchg
adc
dec
xchg
add
negb
push
popa
movsb
stos
ror
adc
add
decl
cmp
jecxz
ljmp
cmp
lock
sub
lods
adc
sub
lds
mov
add
daa
in
cmp
cmpsb
leave
push
hlt
repnz
sbb
dec
loopne
xchg
push
and
xlat
adc
mov
sbb
add
imulb
xchg
lds
jp
outsb
cmp
aad
xor
push
push
test
xor
sbb
lds
fimuls
inc
push
push
jno
and
stc
loopne
test
mov
jecxz
flds
mov
fs
jno
test
jns
dec
enter
test
out
or
imul
xchg
ljmp
cli
nop
push
enter
dec
imul
adc
lcall
sbbb
cmp
cmp
inc
pop
cmpsb
pop
dec
sarl
stc
mov
inc
lret
inc
call
lret
fimuls
clc
jo
pop
pop
jbe
dec
aam
jb
mov
test
adc
fcmovne
into
push
sbb
xor
adc
dec
push
jle
lret
loope
sub
nop
add
fcomps
xchg
sub
incl
sbb
out
lret
and
ds
out
sub
jg
pop
mov
push
in
std
call
mov
jb
mulb
mov
daa
and
int
adc
pop
bnd
or
clc
stc
push
lcall
fdivs
out
cmpsb
xor
xchg
push
sbb
inc
out
repnz
call
out
push
cs
insl
jb
daa
fwait
cmpsb
cld
jmp
or
xchg
sub
add
inc
fs
test
push
fwait
ret
repz
cmpl
rolb
push
push
inc
mov
add
hlt
dec
xchg
mov
mov
jle
clc
fsubs
and
ret
addr16
fwait
pop
adc
jbe
pop
movsl
dec
fists
xchg
mov
cmpsb
not
add
dec
xchg
enter
popa
push
cmp
mov
cmpsb
js
mov
fdivr
popf
xor
jb
mov
outsl
pop
mov
cld
out
xlat
push
pop
arpl
mov
xchg
repnz
lock
aas
clc
scas
leave
scas
xchg
adc
dec
cmp
cli
adc
xor
push
ficoml
lahf
pop
sti
shll
cmp
pop
or
orl
cmp
or
mov
xchg
outsb
movsb
fisubs
jns
dec
mov
insl
insl
mov
push
mov
inc
ds
lea
insl
outsl
fmull
sbb
sub
fmulp
sti
add
xchg
ret
adc
outsl
xor
push
dec
mov
outsl
pop
push
jge
inc
mov
repz
icebp
jo
or
push
jae
ljmp
cmp
in
jb
dec
insl
mov
xchg
sahf
dec
jbe
xchg
sub
mov
add
jmp
and
imul
data16
cmp
pop
popf
push
shrl
sub
or
dec
das
sbb
add
nop
mov
rorb
jl
pop
sahf
adc
adc
nop
jp
xor
popa
std
aad
or
xor
lds
adc
faddl
mov
mov
repz
insb
push
mov
js
inc
adc
in
cwtl
je
lret
int3
bound
addb
iret
aad
nop
test
jmp
push
movb
test
push
popa
aad
inc
adc
out
fidivl
mov
inc
imul
dec
divl
jne
clc
outsl
aam
les
inc
xor
xlat
xor
adc
int
movsl
mov
mulb
cmp
cmc
inc
loopne
lahf
lods
ret
dec
jge
lahf
dec
mov
enter
push
sbb
xor
xor
loopne
outsb
popa
std
scas
xlat
dec
pop
dec
mov
pop
lret
pop
jl
jbe
lock
cmc
dec
add
idiv
dec
hlt
lods
cmp
loope
adc
fs
push
mov
in
stos
cld
sub
imul
and
sbb
push
pop
jno
dec
pop
dec
jno
xchg
rclb
jp
sub
fsubr
cmpsl
push
lcall
or
aam
mov
push
cmpl
lret
fsub
xchg
les
pop
sbb
enter
cld
sbb
sbb
loope
jecxz
pop
test
push
test
and
xchg
movsb
pop
fldcw
push
aas
cld
es
int3
test
fs
shl
dec
pop
and
or
pop
cmpsb
or
ds
dec
test
jne
pop
test
xchg
clc
fildll
gs
add
mov
mov
shrl
icebp
push
shlb
in
adc
movsb
add
xchg
mov
xor
stos
ja
sub
dec
inc
mov
je
leave
xor
sbb
or
lods
cltd
and
jg
or
lahf
push
adc
loopne
cltd
pop
jae
out
pop
repz
inc
psubsw
xor
mov
sub
and
push
adc
xchg
fbstp
push
sbb
test
inc
sub
adc
lcall
inc
jno
or
inc
pop
push
addb
mov
rorl
mov
das
adc
jmp
xor
cld
test
stos
out
sub
sbb
shll
sub
sbb
push
lret
sbb
mov
push
sbb
adc
dec
fxtract
xor
in
fildll
lahf
scas
cmp
dec
or
jne
cld
mov
pop
xorb
into
pusha
pop
lods
jns
sub
add
dec
movsl
call
insl
das
cmp
cmp
sbb
inc
mov
cmp
in
push
mov
sub
sarb
pop
popf
push
fdivrp
jae
and
fwait
test
sbb
test
sub
mov
hlt
mov
xor
xor
aaa
jbe
jne
out
or
js
fs
xchg
popa
mov
ret
mov
xlat
xchg
cmp
push
sahf
xchg
gs
adc
or
push
int3
cld
dec
stos
outsl
insl
loope
lcall
add
and
sahf
shl
cmp
dec
mov
in
aam
stos
mov
jb
arpl
xchg
outsb
testb
int3
mov
cmp
xlat
pop
addl
or
push
add
xor
std
xor
ret
or
aas
push
or
push
mov
and
ret
popa
adc
mov
xor
and
pop
mov
sub
out
mov
jecxz
mov
in
pop
hlt
or
or
ret
outsl
js
test
fistps
push
inc
movsl
stos
test
push
in
repnz
mov
lret
jno
out
repnz
dec
in
js
push
and
or
push
lods
mov
sbb
mov
in
into
inc
and
data16
mov
dec
push
jecxz
test
test
xlat
jecxz
xchg
xlat
mul
decl
dec
mov
jnp
or
sar
mov
sahf
out
ret
push
cs
mov
daa
out
out
push
or
pop
pop
test
xor
stc
je
mov
push
sbb
xlat
jmp
add
out
rol
push
mov
lods
bnd
or
aad
pop
fidivrl
clc
and
and
push
lcall
jnp
pop
and
cmp
dec
inc
jmp
mov
test
pop
inc
cwtl
enter
retw
fimuls
xchg
dec
out
loop
in
xchg
add
mov
jns
xchg
sbb
sub
push
sub
inc
inc
lea
mov
or
iret
push
pop
je
js
inc
js
inc
outsb
cmp
ljmp
gs
add
ja
dec
fmul
jecxz
mov
add
ret
cmc
mov
test
mov
sbb
aaa
lods
adc
rcll
scas
hlt
push
xor
js
dec
pop
fsubp
push
fldl
pop
ljmp
xchg
lds
shlb
into
push
mov
and
filds
nop
pop
mov
pusha
ror
stos
mov
pusha
mov
or
pop
in
out
xor
cli
outsb
sbb
mov
cmp
pop
mov
aaa
arpl
dec
or
or
lret
aaa
jle
out
sub
inc
int3
mov
es
inc
and
popf
roll
adc
and
stos
and
aad
ret
icebp
mov
stos
xchg
mov
mov
das
add
mov
test
mov
out
xor
push
mov
push
lea
lret
test
push
jnp
es
bound
shrb
ja
cmp
add
in
dec
div
xchg
push
ljmp
adc
hlt
and
mov
push
mov
emms
mov
jle
sbb
adc
mov
je
pop
mov
add
imul
cld
pusha
test
mov
mov
push
ret
into
cmp
addr16
cmp
jbe
pop
pop
lahf
cld
adc
rcl
loope
ja
mov
shrl
test
cmp
ds
mov
jg
nop
adc
insl
movsl
dec
subl
test
pop
icebp
or
xor
std
xchg
int
sub
loop
std
insl
xchg
cmp
mov
test
mov
xchg
data16
xchg
pop
ja
jl
movsl
jnp
insl
daa
inc
iret
cli
andb
cwtl
mov
jmp
pushf
orb
xchg
shl
or
jb
sbb
call
cltd
dec
add
loope
sbb
insb
adc
out
ljmp
jbe
ret
sbb
push
jno
sbb
push
mov
or
lret
popf
push
push
enter
fcompl
lcall
cmp
mov
push
push
les
xchg
divb
mov
out
push
xchg
add
push
sub
jno
cmpsb
notb
sub
dec
push
and
or
ss
addr16
add
js
ret
lock
hlt
mov
je
fldcw
subb
fcmovu
imul
daa
add
ljmp
jmp
in
jbe
jae
fwait
or
cltd
lret
sbb
push
out
lret
jnp
fxch
movsb
gs
jb
xchg
mov
add
repnz
inc
cmp
adc
and
bound
mov
sbb
push
push
mov
les
xor
les
mov
push
pop
leave
movsb
xchg
mov
enter
xlat
es
mov
outsl
sub
pop
popa
repnz
jae
out
xchg
add
xchg
jmp
out
add
enter
lods
jae
ret
inc
jl
mov
push
xor
insb
push
cld
lcall
into
xchg
dec
pop
mov
out
sti
jecxz
imul
xchg
sti
pop
push
adcb
push
inc
push
repnz
mov
in
cmpsl
fwait
xor
sarl
and
out
or
ss
out
mov
inc
inc
negb
in
pop
fwait
cmp
xlat
pop
and
jp
dec
imul
bound
lret
pushf
xchg
mov
sarl
pop
or
pop
push
subb
cltd
stos
sbb
scas
mov
jle
repz
push
leave
mov
mov
add
clc
test
in
cltd
cld
es
sti
sbb
cmp
pop
or
sbb
call
jb
jmp
push
cltd
or
lahf
popa
mov
outsl
lea
or
and
or
inc
scas
mov
mov
das
pushf
add
cli
mov
jnp
out
fcomps
dec
stos
xlat
test
mov
lods
xchg
push
mov
arpl
insl
enter
push
test
vmovntdq
xor
mov
cwtl
lret
mov
and
xor
mov
js
push
bound
cmpsb
push
nop
dec
out
jl
repnz
shlb
or
ffree
pop
and
ret
imul
in
repnz
or
enter
mov
xchg
jbe
pop
mov
cld
jns
inc
mov
fisubs
sbb
dec
ss
data16
arpl
in
outsl
or
mov
mov
mov
mov
inc
xchg
jnp
subl
inc
into
cli
test
jg
in
mov
cld
add
xchg
inc
iret
stos
nop
aaa
lahf
loop
popa
cmc
and
pop
loop
mov
movsl
mov
inc
sub
jg
scas
xchg
cmpb
push
xchg
adc
call
xchg
fnsave
sbb
pop
jmp
xchg
jle
inc
popa
sbb
test
xor
adcb
in
mov
inc
mov
and
dec
push
inc
aaa
mov
mov
xchg
push
mov
mov
fdivrs
sbb
pop
or
mov
hlt
xchg
sbb
mov
outsb
jnp
jns
sbb
fsubp
lds
jns
or
in
shlb
ss
imul
test
test
jecxz
imull
sub
inc
in
popf
repz
cmp
cmpsb
fidivs
pop
xchg
add
xor
add
and
jb
repnz
ret
xor
pop
sub
xchg
dec
ret
scas
les
push
mov
jl
and
iret
clc
sbbb
jmp
popa
add
clc
test
jne
stc
jecxz
adc
jge
xor
repz
cmp
outsb
mov
pop
pop
or
mov
test
and
mov
popf
adc
lods
or
mov
jbe
andb
hlt
daa
cmp
ror
int
into
data16
or
xchg
lods
xchg
pop
mov
push
incb
js
jp
push
push
sbb
jl
jnp
insl
mov
xchg
pop
iret
stos
cmp
jmpw
pop
xlat
stc
and
ror
mov
adc
mov
call
enter
add
shll
lea
inc
std
mov
jae
push
je
sub
in
dec
pop
cld
adc
fadds
loop
lahf
lcall
xlat
inc
cwtl
movsb
out
inc
jecxz
jl
das
inc
inc
popa
mov
xor
loope
add
jb
dec
mov
inc
adcl
sub
mov
jmp
mov
push
lcall
cmp
lret
fsubrl
cmp
pop
sub
mov
xor
pusha
data16
loope
in
insl
lret
scas
xchg
ljmp
xor
xchg
xchg
into
mov
xor
inc
cmp
ds
mov
pusha
leave
sbb
leave
fs
mov
xorb
xor
pop
push
push
push
mov
dec
insl
into
ljmp
imul
jbe
xlat
lods
mov
test
in
dec
std
jle
add
in
inc
fxch
sub
and
lahf
shld
jg
cmc
mov
adcb
pop
dec
mov
add
out
mov
fdivrs
or
mov
xor
out
and
insb
popf
icebp
out
adc
cmp
out
les
jmp
xchg
mov
rorl
aaa
add
jecxz
dec
push
fcomps
lea
inc
add
adc
push
sahf
jp
jns
mov
mov
inc
xchg
pop
insb
dec
cltd
leave
les
mov
sbb
loop
loopne
xchg
ror
inc
fs
mov
outsl
mov
jnp
out
push
das
add
test
inc
insb
fwait
call
xchg
xchg
sub
cmp
add
mov
sbb
mov
mov
jmp
in
jmp
mov
aam
dec
jle
push
cmp
add
out
or
push
imulb
ffree
inc
iret
aam
lret
dec
xchg
mov
or
pushf
pop
xchg
mov
into
cmpsb
ret
xchg
sbb
push
cs
lea
add
xchg
inc
cmc
faddp
mov
je
loope
out
roll
sub
push
ss
or
or
movsl
ds
imul
rcrl
xor
fisttpl
cmp
jne
jle
xor
mov
lahf
mov
rolb
lcall
lds
and
mov
faddl
je
rol
mov
jo
push
sahf
push
add
cmpsb
repz
dec
add
ja
inc
hlt
or
add
lahf
repz
fldenv
mov
push
xchg
test
and
xchg
xor
ds
mov
outsb
int
and
push
sbb
xor
dec
movb
sbb
ss
inc
sub
repnz
cli
pop
and
call
cmp
mov
test
or
mov
imul
cmp
push
popa
mov
pusha
cmp
xchg
jns
out
flds
imull
test
arpl
and
sub
mov
add
fstpt
in
or
insl
loop
lahf
mov
pushf
or
mov
adc
push
loop
adc
mov
sub
pop
aas
outsl
add
xor
fildll
repz
inc
xlat
out
out
dec
xchg
pop
aas
xchg
in
dec
push
mov
rol
adc
jo
dec
insl
lea
cmc
xchg
pop
leave
in
repz
lret
sbb
pusha
pop
mov
mov
stos
cmp
and
aaa
test
dec
sbbl
sbb
fucomp
add
pop
lahf
dec
or
sbb
in
scas
mov
xchg
lods
rcl
ljmp
xor
je
xchg
in
xlat
adc
push
or
add
out
das
push
add
xchg
or
or
mov
xlat
enter
add
jae
adc
in
cmp
leave
jecxz
lahf
push
cwtl
lret
sub
bound
xchg
adc
sub
dec
pop
aas
notl
in
mov
movsb
inc
mov
and
outsb
andb
loop
adc
adc
push
or
movsl
loopne
sbb
pop
mov
push
loope
xchg
fwait
jae
cmp
out
add
push
pusha
roll
test
shll
jle
push
cs
ret
add
scas
inc
adc
rcrl
pop
scas
pop
mov
xchg
xchg
mov
cmp
jne
imul
jp
mov
or
out
sub
out
pusha
mov
sbb
jns
mov
negl
out
test
mov
cwtl
cld
sbb
sahf
cmp
ffreep
leave
jns
fsubr
sar
mov
mov
pop
sbb
js
pushw
xchg
jne
cmpsb
gs
cmp
clc
push
mov
mov
repnz
inc
shr
fs
inc
sbb
jb
orb
aad
sub
loopne
nop
insw
xchg
das
popf
push
adc
daa
dec
jge
in
inc
and
or
pop
fisubs
mov
mov
cwtl
sub
add
push
js
jecxz
add
mov
enter
adc
out
cmc
icebp
cli
mov
std
xchg
pop
push
pop
lret
aas
mov
lret
xchg
fcompl
sub
jecxz
aam
imul
cltd
dec
dec
andl
test
add
bound
add
pop
inc
or
fidivl
push
pop
fstpl
pop
sbb
and
cmp
vcvtph2ps
das
cmpsl
or
repnz
lds
adc
addr16
mov
jbe
mov
test
movsb
fldenv
jp
sahf
lds
pusha
sub
aad
sub
mov
outsl
push
and
pop
adc
xchg
in
push
enter
ret
outsl
out
pop
or
xorb
pop
sbb
jg
cmpsl
in
cmp
mov
jp
mov
shr
test
jl
mov
aas
and
pop
adc
xchg
mov
mov
mov
pop
sub
mov
adc
or
inc
rcrb
xlat
mov
xlat
mov
subl
rcrb
jnp
xorl
imul
push
lods
push
inc
ds
and
add
pop
pop
xchg
add
dec
ja,pt
inc
into
xchg
jne
add
cli
bound
mov
mov
imul
mov
mov
pop
pop
jg
jmp
lock
cmpsb
push
xor
jo
in
iret
mov
imul
add
aam
cltd
aaa
jg
pop
xor
mov
mov
pop
mov
insb
adc
test
push
sub
cmp
in
mov
imul
and
mov
cmp
pop
push
jo
jmp
popf
xchg
repnz
mov
fsubl
add
jo
cwtl
push
pushf
inc
aaa
lods
mov
adc
xchg
out
xor
jnp
dec
mov
jae
push
cwtl
int
mov
aam
sub
mov
aam
movl
jl
loope
jbe
pop
jg
inc
push
fstpt
aas
lret
mov
addr16
repz
cli
inc
leave
pushf
push
inc
imul
jge
xlat
jge
inc
fnstenv
push
jle
notb
or
lock
mov
and
xchg
lea
adc
shrl
mov
in
inc
daa
and
push
cmpsl
push
push
push
jbe
ret
pop
imul
lcall
and
inc
lods
pop
inc
dec
inc
in
sub
sarb
insb
jnp
cmc
adc
pop
sbb
cmpsl
mov
mov
imul
push
repnz
push
dec
inc
rcrl
addr16
inc
sbb
mov
rclb
jg
jge
dec
int3
xor
pop
lcall
imul
jecxz
pop
insb
adc
xor
dec
adc
sahf
stos
ds
into
xchg
sbb
out
shll
and
xor
aam
stos
jo
das
push
cmp
nop
mov
add
inc
jl
nop
std
pop
adc
jl
xor
loope
jp
lcall
out
stos
js
ja
cwtl
cmp
jae
push
or
test
xchg
xor
inc
pop
mov
mov
sub
lods
sbb
push
in
mov
idivb
sbb
es
cmp
ljmp
xor
imull
bound
push
stos
dec
shl
test
dec
sbb
mov
test
imul
jne
pop
jecxz
mov
sub
icebp
scas
sbb
popf
and
shrl
push
jmp
inc
cltd
lods
test
pop
es
mov
dec
xchg
adc
adc
xor
sbb
andl
mov
mov
push
icebp
adc
inc
sub
fsubrp
inc
mov
les
inc
cs
mov
call
add
push
push
adcb
orl
xor
nop
cmpsl
mov
mov
add
cmp
adc
icebp
xchg
mov
ret
mov
fsubr
inc
cmc
scas
push
mov
into
arpl
xor
add
xor
mov
pop
jns
sahf
out
lods
push
add
ficomps
aas
xor
mov
data16
in
lcall
pop
test
add
mov
push
xorl
aaa
test
in
mov
stos
mov
mov
jbe
jno
and
or
pushf
mov
adc
xor
call
imul
adc
dec
push
push
dec
pop
dec
sbb
in
push
ffreep
sarl
sub
dec
jl
insb
xor
dec
push
addb
xchg
push
pop
sbb
xchg
pop
jns
pop
cs
mov
das
ljmp
subb
cmc
std
jmp
pop
xor
pop
popf
pushf
fwait
pop
outsb
add
mov
mov
divl
adc
inc
hlt
call
and
push
stc
xor
or
in
push
pop
and
cmpsb
gs
pop
std
sbb
gs
imul
lods
ljmp
cmp
mov
mov
in
sub
mov
jb
ja
je
idiv
test
idiv
mov
lock
mov
dec
mov
pop
movsb
xlat
dec
lods
mov
pop
or
fdivr
inc
cmp
and
dec
mov
jae
fimuls
push
sub
jns
into
jmp
mov
mov
in
lret
popf
inc
push
clc
outsb
loopne
lahf
and
lahf
mov
add
jmp
inc
out
jg
jno
mov
xchg
and
hlt
push
fstl
pop
mov
outsl
ficoms
lahf
mov
shl
rcrl
xorb
sbb
cmc
jno
xor
and
inc
sbb
testl
addr16
loop
xchg
sbb
mov
lds
and
mov
mov
mov
xchg
sti
stc
mov
inc
adc
sbb
mov
je
arpl
lods
into
ljmp
mov
mov
rsm
int
push
mov
sub
insl
jmp
xchg
dec
js
arpl
xor
repnz
call
mov
push
pop
popf
testb
mov
sub
mov
and
inc
movzwl
or
in
sub
ja
int3
das
cs
inc
lds
idivl
insl
pop
add
int
xchg
mov
mov
sti
sbb
or
int3
sbb
xor
add
mov
test
roll
push
rcll
dec
cmp
es
pop
imul
bound
mov
stos
jp
jne
int
sar
jl
scas
mov
adc
aas
lods
xchg
lock
imul
or
mov
in
in
popf
pop
aad
enter
add
ret
lahf
in
scas
cs
mov
test
fcom
add
jp
mov
inc
leave
and
inc
sti
pop
das
jge
lcall
xchg
outsl
shlb
mov
bt
andb
stos
sbb
fldcw
loopne
mov
roll
lods
cmp
ljmp
sbb
push
push
sub
mov
xchg
shlb
fdivrp
push
or
pop
mov
mov
test
test
pop
cmp
or
xchg
int
add
mov
das
cmp
or
cmp
inc
cmpsb
addl
mov
aas
sbb
lahf
pop
mov
xchg
sub
inc
outsl
sub
add
in
xor
mov
loopne
js
pop
sbb
cmp
dec
scas
dec
das
inc
sbb
sahf
dec
rorl
mov
clc
ficoml
inc
ja
jl
sahf
scas
imul
outsb
cwtl
lret
dec
pop
xchg
dec
das
ret
stos
gs
dec
adc
js
jbe
test
ljmp
push
es
sbb
jns
lcall
aas
out
dec
jmp
jmp
xchg
mov
add
out
popa
jns
test
daa
gs
xor
pop
lcall
sbb
add
pusha
in
sub
ss
test
adc
rcrl
jb
sbb
dec
and
xor
cltd
and
imulb
shl
idivl
lods
cmp
test
jns
outsl
jne
push
add
fisubl
imul
inc
xlat
push
mov
daa
inc
sbb
xlat
dec
xchg
pop
xor
and
mov
out
mov
xor
in
mov
nop
bnd
lret
pop
pop
fwait
in
imul
push
add
lock
push
mov
xor
roll
and
or
cmp
mov
xor
int
inc
pusha
lods
inc
xchg
lods
dec
mulb
push
das
shll
dec
cmpl
xlat
movl
loop
cwtl
popa
jp
pop
inc
aad
cmp
lcall
js
rcll
push
jmp
cmp
dec
cmp
in
jl
test
mov
mov
cmp
jo
pop
mov
cs
xor
xlat
data16
lret
jne
mov
scas
pop
arpl
mov
fldt
sarl
outsb
jle
xchg
jae
movsb
sbb
pop
ja,pn
jne
loop
xchg
mov
push
fildll
test
pop
sub
sub
aam
into
mov
push
xorl
push
cli
inc
insl
pop
data16
in
incl
mov
cmp
inc
fidivrs
push
add
lahf
pop
aas
sar
adc
mov
data16
test
rolb
sti
mov
mov
mov
push
mov
mov
pop
out
inc
rcl
cwtl
and
test
inc
push
pusha
arpl
mov
imul
dec
or
addb
push
push
enter
cmp
and
sbb
iret
push
jbe
mov
frstor
lock
test
mov
inc
sbb
mov
push
test
lahf
imul
pop
test
inc
dec
xor
mov
arpl
lea
sahf
push
outsl
dec
ret
stos
sbb
mov
mov
test
jne
hlt
neg
into
decb
repz
push
lods
xchg
jbe
test
inc
outsb
movzwl
sbb
inc
out
push
imul
sbb
push
test
mov
aaa
aad
sbb
lods
arpl
push
xchg
and
dec
out
insl
dec
lods
jl
sbb
fstpt
outsb
mov
clc
push
and
xor
xor
xchg
mov
sub
sti
mov
add
xor
mov
xor
lea
xchg
mov
mov
mov
sbb
test
ds
lds
inc
inc
rol
mov
call
jo
imul
mov
insl
jae
lcall
mov
sub
inc
pop
mov
xchg
jp
xchg
dec
clc
dec
test
icebp
sbb
jmp
iret
insl
xorl
mov
out
pop
call
cmc
clc
pop
aam
or
je
jmp
cmp
ftst
pop
inc
mov
jns
xchg
xchg
outsl
mov
ret
cmc
scas
jb
lcall
out
cltd
outsl
jbe
xchg
xor
jg
adc
push
sub
lret
notb
or
cmp
inc
rcrb
xor
inc
int
ds
or
xchg
cmp
out
adc
and
dec
les
ja
sub
jb
or
imulb
ja
mov
mov
je
in
sbb
xchg
in
sbbl
mov
mov
int3
dec
mov
je
jne
inc
push
mov
inc
mov
ret
cs
inc
mov
insb
aaa
mov
stc
jle
and
jge
add
pop
ret
mov
pop
xchg
aam
stos
sbb
jle
pop
daa
ret
ss
shll
xor
lret
jl
sub
enter
jle
push
dec
sti
push
or
call
pop
lahf
mov
dec
movsb
xchg
pusha
in
ss
cmc
enter
fstl
cli
xor
hlt
aad
lea
je
pop
fbld
push
push
sti
fiaddl
and
push
mov
scas
mov
and
insb
mov
sub
fwait
addr16
sti
push
mov
in
cmp
jle
daa
stos
xor
shlb
fwait
xor
mov
pushf
or
inc
sub
or
popa
add
rclb
mov
sahf
sub
push
jecxz
int3
xor
mov
cmp
xor
jge
push
inc
jg
lods
test
je
mov
add
mov
adc
mov
mov
or
sbb
scas
jge
push
push
sub
aad
and
pop
pop
xchg
mov
and
mov
and
adc
loopne
mov
int3
sbb
cmp
rcrb
sub
push
mov
dec
movsb
adc
leave
sub
add
or
push
sbb
lds
cmpsl
repz
xchg
xor
lret
out
or
lea
fisttps
dec
sbb
fildl
or
mov
pop
je
pop
inc
fucom
mov
stos
xchg
es
or
cmp
xor
or
mov
insb
fisubrl
pushf
inc
out
xorb
cmp
xor
in
add
mov
mov
mov
xor
ret
repnz
mov
outsl
mov
fs
sahf
add
xchg
dec
xor
out
dec
cltd
in
dec
push
movsb
lahf
mov
jno
cmp
push
in
push
rol
fildl
arpl
xor
add
fst
fwait
cwtl
paddw
fs
lahf
xchg
xchg
cwtl
bound
and
sub
push
pop
pop
insb
mov
inc
xor
mov
imul
dec
sub
mov
jg
insb
mov
adc
xchg
sbb
dec
mov
in
gs
xchg
jbe
jge
gs
pushf
movsl
shll
or
sbb
ljmp
ret
loope
cmp
inc
jne
js
add
cmp
xor
or
ret
cmp
arpl
xorb
enter
pop
pop
sbb
divb
xor
xor
pop
mov
inc
aaa
fadds
sbb
jl
xchg
lret
fs
pop
xchg
or
mov
aam
and
pushf
xlat
das
loop
dec
cmp
jl
cwtl
or
lret
clc
cli
test
sub
pop
xchg
xchg
mov
fwait
lret
adc
mov
xchg
je
sbb
cmp
xchg
mov
incb
sub
loopne
out
or
sbb
ds
inc
repz
xor
arpl
rorb
rcll
mov
aaa
cmpsl
mov
pop
orb
test
repz
or
push
jne,pn
sub
ljmp
or
add
out
pop
mov
insb
mov
sbbb
mov
hlt
jle
mov
imull
lock
outsb
xorb
xor
xchg
pop
mov
xor
testl
leave
jnp
out
sbb
and
faddl
xor
loope
movd
sbb
add
jp
or
mov
mov
je
adc
test
loopne
xor
int
lea
lret
dec
and
imul
sub
add
and
and
sbb
mov
push
mov
lods
xor
mov
lock
es
mov
fnstenv
xchg
idivb
mov
ficomps
test
xchg
nop
sbb
cmp
js
and
xor
das
sub
movsl
push
je
subl
ficomps
xchg
sbb
jmp
push
out
cmp
fcmovu
sbb
lods
jmp
sbb
xor
ja
jno
cld
in
outsl
in
sbbb
sub
mov
xchg
rcll
mov
ret
arpl
mov
cltd
mov
xchg
out
fdivr
inc
mov
xchg
pop
mov
jno
and
xchg
ljmp
enter
outsb
jnp
int3
movsl
jg
jno
jnp
fs
ret
int
adc
test
push
movsb
sub
insb
mov
shr
xor
push
scas
mov
jns
xor
aad
sub
outsl
pop
outsb
lock
sub
imull
or
jmp
inc
adc
push
mov
in
dec
fwait
pand
movsl
test
pop
push
lahf
xchg
popf
cmpsb
or
inc
incl
push
mov
scas
ljmp
add
mov
icebp
test
gs
xchg
xchg
xchg
mov
fs
pop
shll
jbe
sbb
jno
movsb
sbb
mov
mov
in
jno
repnz
lods
in
aas
addr16
mov
or
aam
int3
dec
xchg
and
mov
jl
ljmp
xchg
lds
arpl
xchg
int
test
cmp
sub
xchg
cmp
push
adc
popf
push
aas
mov
jmp
and
jb
les
cmc
pop
mov
jne
or
das
gs
mov
addr16
int
inc
test
xlat
popa
lcall
sbb
mov
sbb
add
loope
bound
or
mov
pusha
fs
xor
pusha
xor
imul
mov
mov
and
rcrl
and
mov
mov
int3
inc
pop
mov
sub
int
int
and
lods
xchg
aaa
outsb
out
lock
insb
fstpt
in
fwait
in
insb
jecxz
push
cwtl
fstps
mov
jae
mov
stos
dec
aad
pop
xchg
stc
call
lods
popa
addr16
addr16
jp
clc
pushl
inc
cmp
je
pop
jecxz
loope
xor
movsl
or
jmp
pop
fbstp
int
mov
loope
sbb
bound
ds
shll
out
xchg
mov
int3
lahf
nop
jb
adc
movsb
mov
cld
sub
scas
pop
jecxz
mov
scas
rorb
push
cld
jl
insl
xor
ja
data16
std
mov
movsl
jns
pop
fisubrl
cwtl
testb
xchg
mov
nopl
cmp
xchg
test
and
hlt
cmc
adc
add
outsl
xchg
subl
xchg
mov
into
sti
lret
jp
imul
ss
stos
out
mov
mov
ds
dec
jbe
jno
mov
sti
mov
out
test
pop
cltd
enter
enter
sbb
push
adc
and
dec
rclb
and
outsl
jl
adc
mov
mov
cmpsb
in
popa
fs
in
lcall
mov
int3
lcall
stos
test
fwait
lret
in
hlt
iret
xchg
cmp
addr16
cmpl
faddl
dec
outsb
adc
cli
jb
incb
loop
insb
aad
xchg
inc
sbb
popf
lock
cmp
or
icebp
add
sbb
and
or
and
mov
mov
nop
ds
xor
paddusw
loopne
test
mov
dec
add
mov
pop
flds
call
iret
sbb
gs
mov
fisttpl
or
push
or
call
dec
lods
js
addr16
mov
ljmp
adc
fwait
dec
in
xor
orb
test
insl
inc
and
xor
mov
adc
pop
stc
and
unpckhps
ds
dec
sub
mov
jecxz
push
adc
mov
mov
inc
je
xchg
into
scas
cmp
cli
das
ret
jbe
in
mov
inc
mov
push
pop
push
sbb
daa
jl
mov
icebp
fwait
inc
fcmovbe
sub
dec
sarb
mov
adc
outsb
mov
jo
addps
lret
jb
lcall
mov
xchg
into
jmp
pop
adc
jbe
fsubl
aas
sub
mov
inc
sub
enter
mov
ss
adc
sub
out
adc
jbe
cld
dec
mov
mov
fisubs
aam
pop
push
jno
leave
popa
call
clc
sahf
cmpsl
cld
xchg
out
mov
out
mov
das
lahf
outsb
mov
test
or
enter
pop
mov
cld
cmovb
cmp
push
lock
cli
jp
cmp
inc
push
scas
movsl
xchg
hlt
push
outsl
ficoms
roll
inc
imulb
mov
insl
mov
pop
movsb
mov
sbb
dec
xchg
inc
or
pop
xchg
xchg
pop
pushf
imul
aad
fcompl
inc
pop
aad
mov
leave
mov
fistpll
cmpsb
mov
and
push
xchg
lock
xchg
movsb
lock
push
adc
mov
in
gs
test
inc
ret
movsl
ret
in
xchg
stos
xchg
enter
lds
mov
int
stos
lea
inc
andl
push
xor
sub
xor
lods
mov
stos
fs
stos
adc
lock
pop
jne
rcl
and
mov
push
daa
jecxz
fstps
loopne
scas
mov
imulb
push
xor
gs
or
stos
inc
fadds
fildll
outsb
jp
inc
xchg
mov
shrb
xchg
add
icebp
lds
pop
in
mov
loopne
sub
in
cmp
out
pop
adc
testb
stc
out
adc
push
xchg
dec
jg
push
cmp
aad
imull
inc
inc
xchg
sbb
fs
adc
mov
add
jmp
push
aam
jbe
or
sub
push
push
gs
lret
sbb
and
xchg
mov
push
fs
push
lock
fisubrl
pushf
insb
test
push
dec
xchg
lock
mov
outsl
adc
pop
imul
xchg
push
sub
std
jbe
cli
pop
cmp
ret
sbb
pushf
outsl
jno
mov
jmp
lods
icebp
sbb
sub
or
xchg
or
pushf
insl
cmp
fs
into
scas
pop
add
test
cmpsb
xchg
xchg
mov
mov
mov
movsl
loopne
loop
sub
push
aad
and
sub
pop
or
fistl
repz
inc
sub
sbb
xchg
pop
jbe
mov
pop
xor
and
mov
icebp
fnop
in
push
sbb
push
fs
inc
inc
adc
shlb
aaa
in
sub
pushf
shl
sbb
imull
sub
pusha
cmp
and
push
imull
push
stos
out
shrl
mov
jmp
sarl
mov
mov
inc
call
sti
cmpb
leave
outsb
andb
and
jno
add
pop
cmp
mov
cs
xor
xchg
cmp
push
fwait
and
call
xchg
push
mov
int
std
lcall
out
ds
push
lock
lods
das
mov
xor
pop
pop
or
shr
aam
xor
xchg
add
shrb
in
das
subl
inc
cmp
hlt
js
cmpsb
xor
or
pop
fs
clc
iret
into
aaa
mov
push
stos
xchg
mov
or
ret
cli
loopne
rorl
in
or
inc
or
sbb
jb
sub
cmp
and
cmp
les
inc
adc
jo
and
xchg
pushf
pop
mov
scas
icebp
das
arpl
out
push
push
mov
cwtl
xchg
sbb
ret
js
cmp
jo
dec
push
and
mov
push
cmpsb
push
outsb
pop
sbb
pop
cmpsl
xchg
push
mov
cs
dec
xchg
push
pop
ljmp
adc
xchg
roll
and
dec
scas
je
jnp
xor
shlb
stc
mov
out
ret
xor
mov
out
mov
sub
out
cld
lds
iret
xor
push
cs
repnz
dec
cld
adc
pop
popf
int
push
sub
nop
xor
movsl
lret
lds
inc
repnz
sbb
stos
lea
jnp
test
dec
pop
aad
cmc
add
sahf
xor
lods
pushf
mov
hlt
lods
or
pop
push
aad
mov
mov
in
out
lahf
orb
jmpw
fistl
lods
lcall
jl
sbb
cli
aaa
enter
xchg
cwtl
and
xchg
xchg
mov
push
rol
xor
dec
outsb
or
pop
and
jno
psrld
outsb
ja
add
addr16
sbb
push
xchg
or
push
rcr
call
neg
lret
sub
sahf
dec
rol
lods
sbb
mov
mov
adc
push
xchg
push
out
xchg
xchg
imul
sub
push
pop
xor
jp
mov
inc
dec
adc
lret
loope
sub
mov
insl
xor
jnp
aam
lock
ja
jg
pop
dec
imul
loope
movsb
or
adcb
popa
jb
push
xlat
push
dec
outsb
jno
mov
inc
jns
push
adc
or
cmpsl
fcmovnb
pop
cltd
fisubl
pop
mov
push
inc
jl
mov
mov
xchg
into
stc
sbbl
add
mov
jae
xor
mov
cmp
push
xlat
loop
mov
in
sbb
sub
jne
ret
cmp
or
cmc
sarb
jg
fldl2e
loope
loop
fldenv
sub
int
dec
icebp
mov
cltd
sbb
lret
jnp
stos
or
mov
pop
shrb
outsb
xchg
add
jge
aam
movsl
and
push
lahf
test
stos
mov
mov
add
aam
es
jmp
xor
fldcw
mov
imul
jmp
icebp
or
hlt
jae
jl
ficoml
pusha
addr16
push
jecxz
nop
cltd
in
xchg
insl
loope
push
mov
testb
sbb
jle
mov
cmp
into
loopne
aas
sub
test
pop
adc
sub
or
sub
push
sbb
lret
lea
shll
sbb
shll
aaa
add
mov
fadd
test
in
nop
sahf
out
icebp
nop
xor
ljmp
cmp
stc
push
icebp
insl
popf
stos
jb
add
mov
pop
pop
mov
ds
or
rcrl
add
sbb
cmp
into
jo
cmp
pop
dec
call
xchg
test
mov
mov
add
mov
sub
fnstcw
aam
jmp
mov
shll
push
dec
inc
push
and
mov
js
sbb
mov
adc
mov
and
inc
imull
gs
les
iret
jb
lods
jecxz
mov
jo
xchg
scas
jecxz
add
add
inc
mov
xchg
sub
mulb
divb
icebp
sarl
mov
mov
stc
sti
idiv
xor
outsl
xchg
add
mov
das
and
and
xor
cmpsl
or
mov
scas
and
mov
jb
loop
fst
cltd
push
jne
lods
xor
aam
jb
popa
sahf
lret
pop
pop
mov
or
inc
pop
xor
sbb
sub
ficoml
test
cmpsb
iret
adc
xchg
pop
mov
pop
sub
std
xor
in
lock
mov
or
push
loope
in
xor
insb
idivl
xchg
divb
add
pop
inc
cmc
movsb
pop
cwtl
push
jl
arpl
xchg
add
rorl
dec
fs
hlt
std
dec
dec
sbb
std
mov
fldl
ficomps
loop
adc
adc
mov
popf
cmp
insb
outsb
mov
xorb
jmp
jbe
movsb
shrb
mulb
stc
sub
push
pop
sti
inc
inc
je
xchg
loop
sarl
int
xor
fs
jl
add
pop
mov
lods
icebp
lea
xchg
mov
dec
clc
dec
jmpw
xchg
inc
jne
pop
sahf
mov
push
lahf
mov
adc
cmpsl
aam
stc
xchg
jne
addl
insb
xor
movsl
xchg
lea
pop
ffreep
dec
test
iret
adc
leave
jae
rolb
rol
mov
sti
push
xor
popa
out
jae
movsl
or
push
fiadds
fbld
negl
ret
imul
cld
push
roll
jl
mov
inc
mov
or
inc
and
fdivrs
das
insb
lret
test
jae
test
xchg
cmp
inc
cmp
push
loopne
fidivrl
aad
adc
roll
nop
stc
mov
lcall
inc
or
stos
loop
adcb
daa
aam
pop
mov
and
aaa
mov
jns
and
mov
push
mov
xor
in
sub
mov
adcl
sti
outsb
mov
mov
loop
xchg
jne
mov
loope
in
rcll
test
in
je
xor
jmp
sub
and
sub
in
jo
repz
in
pop
je
dec
paddsb
jle
test
scas
pop
push
gs
roll
inc
add
push
test
pop
or
mov
xlat
in
cmc
xchg
jo
or
jp
mov
push
mov
insl
xor
dec
bound
cmc
sbb
fistps
adc
dec
and
loope
sub
and
xor
push
mov
mov
aad
or
and
shl
push
gs
sbb
je
push
push
test
loop
jecxz
cmp
and
cmp
or
mov
and
push
cmp
outsl
pop
rorl
or
fiaddl
pop
xor
dec
inc
loopne
sub
push
adc
add
pop
or
inc
stc
repz
xor
mov
xor
or
or
cli
insl
lds
and
jecxz
inc
je
xor
push
fistps
jp
cli
aas
mov
mov
add
and
inc
push
sbb
aam
add
fdivp
dec
pop
scas
dec
jl
mov
in
and
inc
pop
xlat
or
add
push
mov
iret
push
popa
in
mov
ds
or
mov
sub
shrb
sahf
push
scas
imul
pop
adc
pop
cmp
loopne
sub
inc
jae
cwtl
jnp
jmp
inc
in
dec
mov
inc
cmp
js
popf
push
jnp
jl
pop
mov
shll
into
std
std
xchg
cwtl
aaa
pop
dec
in
out
fists
or
andb
cmp
dec
mov
jge
dec
adc
mov
adc
jmp
push
fidivrl
jae
nop
test
out
sbb
dec
adc
mov
dec
sub
cmp
arpl
and
int
cmp
fdivp
jg
inc
out
dec
repz
cs
cmp
mov
je
pextrw
sahf
das
in
sbb
cmpsl
ljmp
dec
or
dec
push
in
lahf
hlt
cwtl
cltd
xchg
push
xchg
js
and
adc
rcll
lds
rcrb
int
pop
mov
mov
xchg
adc
dec
and
mov
out
test
imul
aam
mov
mov
mov
mov
jl
neg
add
jp
adc
pop
loopne
iret
xchg
lea
dec
pushf
add
es
movsl
mov
xor
sub
fbstp
divb
jmp
xor
roll
movsb
aaa
cmp
cs
mov
bound
hlt
dec
in
mov
lret
pop
rclb
add
enter
inc
adc
pop
add
sub
imul
lret
adc
lds
in
jge
sub
pop
ror
dec
stos
rcrl
test
iret
cvtdq2ps
ss
and
adcb
jecxz
addb
sub
or
out
mov
dec
out
xchg
mov
cmp
fwait
xor
pop
mov
cmp
pop
and
mov
arpl
sub
lock
cmp
mov
gs
js
sub
jle
dec
push
inc
out
pop
stc
xor
cmp
xchg
jne
lods
sub
test
push
dec
dec
nop
jns
adc
xchg
int3
lret
xchg
xchg
gs
cmp
out
or
outsl
mov
je
pop
les
xchg
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
cmp
daa
popf
mov
dec
xchg
xlat
pop
jg
ja
pop
sub
jo
scas
jg
sahf
sbb
out
fcompl
sbb
xchg
icebp
mov
rcll
push
loop
into
xor
sub
sarl
push
popa
insl
mov
cmpsb
lods
int
sbb
mov
mov
jl
mov
in
adc
hlt
pop
ljmp
repnz
cmc
cmp
imul
call
mov
out
shll
roll
jge
repz
push
repnz
pop
cmp
movsl
lods
addr16
cmp
pop
sub
icebp
cmp
mov
addb
mov
inc
xchg
ljmp
ret
fldl
insb
jo
mov
outsb
sti
movntq
jecxz
adc
lahf
jae
outsl
dec
mov
mov
hlt
cmc
inc
dec
shrb
jl
mov
lea
mov
mov
sarl
xchg
ss
mov
test
inc
mov
cmpsl
rclb
lds
xor
push
inc
and
jmp
cwtl
rorl
fidivs
adc
inc
and
ja
jbe
mov
mov
fildll
push
nop
sbb
inc
int
cltd
je
pop
adc
inc
push
dec
insb
and
push
xor
out
mov
sub
arpl
sub
ss
test
fyl2xp1
lahf
push
stc
popf
cmp
and
cmp
jne
cld
cltd
jo
idivb
lods
fisubl
lea
and
jge
sbb
incb
aad
mov
mov
lret
xor
add
fs
push
jne
or
jae
xchg
mov
out
bsf
popf
stos
mov
or
insb
ja
xor
lds
sbb
cs
sub
out
cmp
cltd
pop
jge
lcall
sahf
incb
out
test
jl
fcomps
mov
test
xchg
in
lahf
jg
xchg
push
add
nop
out
add
or
out
adc
lods
mov
cwtl
mov
test
dec
adc
sub
adc
shll
pop
or
sub
mov
test
cs
push
fs
mov
jo
jbe
cmp
mov
das
pop
cmpsl
lods
jo
inc
imull
xchg
dec
and
inc
inc
stos
ret
and
pop
push
int3
addr16
mov
shll
lds
test
push
add
push
jno
dec
mov
sub
add
loop
xchg
pop
sbb
jbe
add
adcb
into
pusha
leave
outsl
and
add
les
das
js
or
pop
test
jecxz
dec
mov
jbe
lret
jp
data16
add
hlt
pop
dec
int3
lock
aad
notl
inc
jne
lock
sub
jge
out
popa
jae
pop
sbb
cmpsl
enter
ja
in
call
arpl
stos
dec
xor
inc
aad
test
push
inc
andb
lea
fisubs
xlat
fsub
dec
xchg
push
push
jb
lret
adc
dec
es
jmp
test
pop
mov
sub
sub
orb
sbb
push
clc
fwait
pop
cmp
mov
xor
xlat
dec
icebp
lret
dec
pop
lret
jno
xor
std
sbb
int
lock
aam
ja
xor
pop
adc
lods
sub
mov
inc
mov
pop
pop
push
cmp
jae
or
jmp
pop
cmp
mov
xchg
mov
xor
add
scas
sub
xchg
jb
iret
xor
inc
add
add
int
shl
repnz
aam
pop
jl
movb
in
shl
jmp
jbe
cli
dec
lret
adc
xchg
ret
push
push
pop
pusha
ss
fwait
repnz
and
paddusb
int3
or
int3
mov
hlt
xlat
rcrb
add
pop
inc
cmp
fstpt
mov
lea
sbb
dec
xchg
xorl
sbb
jae
mov
inc
adc
call
adc
in
out
scas
fiaddl
insl
dec
mov
cs
mov
dec
sub
fisubrl
or
and
xor
xchg
sub
and
cmp
sub
xchg
je
leave
mov
cmpsl
jmp
lock
and
es
fsubs
dec
adc
cmpsl
push
pop
sub
psadbw
adc
ds
inc
pop
or
imul
enter
arpl
js
cld
pop
aaa
xlat
add
inc
out
lret
testb
sub
dec
aaa
sub
cmp
cmp
ds
aad
push
add
cmpl
mov
pop
sub
dec
sarl
cltd
fs
mov
ljmp
loope
js
je
imul
mov
dec
mov
cli
dec
xchg
jmp
imul
or
repnz
addl
pop
test
je
fmull
aam
jle
xlat
mov
jbe
insb
jae
lret
inc
out
xchg
jb
or
fstpt
insl
shrb
push
pop
or
xlat
push
pop
jb
sbb
xchg
pop
mov
rcrb
sbb
into
pusha
scas
inc
fwait
repnz
lea
add
jnp
mov
popa
outsb
fildl
or
sbb
mov
popa
inc
ror
lret
xchg
lods
mov
push
adc
frstor
and
mov
out
mov
and
inc
push
jl
in
cmp
pop
jb
repz
movsl
mov
scas
lods
out
jle
shlb
inc
pop
stos
dec
test
mov
mov
dec
lret
aad
push
dec
lcall
and
or
pop
sub
mov
les
xchg
dec
ja
cmpsl
enter
xchg
xchg
pusha
xchg
gs
jbe
arpl
cmp
cmpsb
sbb
lods
pop
jns
mov
sbb
ja
add
ja
movsl
sub
mov
xor
jmp
insb
xchg
neg
and
out
mul
jl
mov
xchg
xor
cmpsb
mov
jecxz
and
je
test
mov
ret
push
push
fistps
in
xlat
ret
cltd
sarl
fnstcw
xor
lcall
or
scas
cli
cwtl
rorl
cmc
jns
jmp
mov
dec
repz
xchg
jnp
daa
stos
push
dec
cmp
movsb
mov
pop
and
mov
fstpl
sbb
pop
xor
jo
std
pop
out
sar
jmp
or
fwait
mov
sub
push
pop
dec
jae
add
adc
jnp
cmpb
iret
xchg
dec
lods
jnp
mov
shr
xor
movsb
sub
mov
out
sbb
mov
or
fildll
pop
bound
movsl
jbe
jecxz
clc
ss
jne
xchg
jp
sub
xchg
fldcw
pop
inc
xchg
inc
mov
ret
or
fdivl
cmpsb
mov
std
jne
hlt
fdivp
mov
and
pop
popa
stos
jecxz
lahf
mov
shlb
int3
adc
or
ror
sbb
cmc
ret
push
add
mov
mov
xor
cld
loop
mov
cmp
scas
mov
rcll
jg
lds
aas
pop
pop
sub
popf
cwtl
sbb
inc
pop
adc
pop
bound
test
test
aaa
add
outsb
sti
imul
push
in
mov
xchg
shl
insl
out
in
in
std
inc
sub
mov
mov
aas
add
cmp
push
gs
in
sub
bound
pusha
iret
xchg
repz
jge
jl
jl
adc
xchg
jns
jle
fistpl
bound
sub
xor
mov
dec
push
iret
and
cld
fsubrl
inc
inc
pop
jo
xchg
add
jmp
test
fisubrs
mov
inc
xor
jl
xchg
enter
inc
pop
xchg
out
out
es
int3
inc
rcl
addr16
loopne
xchg
sti
lret
lods
add
and
andb
adcl
push
adc
sub
imul
outsl
mov
mov
lock
fwait
lret
popa
pop
add
negl
hlt
jno
lret
ret
sbb
adc
testb
ret
loope
icebp
cli
scas
push
stc
aam
lock
outsl
xlat
adc
mov
sahf
imul
fiadds
sti
mov
bound
mov
add
inc
jge
cld
fildll
out
or
sbb
test
movsb
jle
adc
stos
xlat
into
push
outsl
dec
sbb
mov
lret
mov
xlat
mov
lods
test
push
aas
cs
mov
bound
cmp
mov
and
pusha
or
icebp
mov
int3
daa
insb
test
mov
push
add
or
xchg
in
clc
adc
sahf
in
inc
jge
aas
in
pop
mov
jno
and
popa
rcrb
jbe
jns
push
pop
lods
adc
adc
push
or
call
sbbb
xchg
in
inc
push
and
push
sbb
mov
mov
jbe
shrb
or
pop
inc
test
adc
call
xchg
outsb
sarl
aad
and
sbb
adcl
test
dec
mov
insl
sub
inc
xor
cmp
mulb
cmp
push
in
jmp
pusha
cmp
add
jg
push
stos
xor
push
mov
xchg
pop
mov
icebp
cmp
add
and
mov
clc
mov
mov
dec
and
pop
pop
cmp
push
sub
mov
insb
sbb
mov
in
mov
popf
mov
xlat
cmp
movb
xlat
sub
push
int3
dec
mov
cltd
in
push
cld
in
inc
inc
pop
outsl
ror
mov
add
scas
lds
sti
adcl
imul
jbe
std
insl
ret
and
test
loopne
imul
ss
xor
mov
mov
mov
mov
in
ror
ljmp
ret
into
ljmp
iret
push
jb
mov
arpl
aas
sub
lock
push
mov
imul
repz
ss
mov
inc
ja
mov
cmp
dec
outsl
lret
or
pop
pop
inc
inc
in
les
add
or
loope
outsb
cld
repz
rcr
cmpsl
punpcklwd
lahf
mov
mov
mov
mov
jns
popa
flds
iret
stos
mov
mov
call
mov
jle
mull
mov
divl
xchg
lcall
pop
jp
mov
out
dec
pusha
fistpl
mov
mov
add
xor
pusha
push
inc
test
xor
sub
in
popf
dec
cmp
scas
rcrb
push
ja
in
fbstp
dec
leave
sbb
dec
aas
fcomps
imul
xchg
mov
into
inc
cltd
aam
pop
stos
cmp
addr16
inc
add
adc
bnd
xor
mov
jp
xchg
outsb
jnp
jbe
add
shlb
and
cld
dec
cmp
mov
lret
out
pushf
out
imulb
cmpsb
int
mov
push
push
push
arpl
cmp
mov
mov
sub
shll
sahf
out
push
ljmp
shrb
mov
leave
push
adc
jnp
dec
loope
xchg
mov
movb
lods
dec
xchg
js
ret
sbb
pop
icebp
pop
push
imul
addr16
repz
push
das
roll
mov
cltd
arpl
mov
pop
mov
or
add
pop
aad
stos
jle
cwtl
clc
aaa
pop
lahf
cltd
mov
jnp
popa
or
negl
cmp
mov
pop
cmp
inc
fbstp
mov
hlt
enter
push
psubd
jg
cmc
adc
mov
push
jle
jp
andl
and
addr16
or
sahf
test
stc
incb
dec
in
or
sbb
dec
cld
jl
scas
fdivrs
add
mov
mov
lahf
ret
sbb
mov
jmp
mov
dec
cmc
std
or
std
imul
jbe
test
sti
jae
sub
sbb
clc
mov
mov
dec
mov
scas
adc
aad
test
fidivl
dec
dec
cwtl
imul
ds
adc
xchg
arpl
pop
dec
and
cld
dec
test
dec
lds
dec
shll
and
movsb
jge
add
cmpl
ljmp
rcrl
mov
cmp
int3
jecxz
adc
lahf
popa
jo
xchg
jge
ss
lods
repnz
inc
sbb
push
sbb
std
aam
xchg
inc
sbb
push
push
mov
adc
add
imul
xor
or
xor
hlt
pusha
stc
add
sbb
in
mov
fnstenv
inc
cli
push
or
mov
iret
sbb
inc
dec
cltd
push
push
mov
push
mov
cmp
pop
scas
repnz
dec
mov
test
xchg
aaa
mov
jmp
rorl
lcall
sub
mov
and
push
fwait
cmc
dec
xchg
push
mov
rcll
sub
int3
clc
movsb
xor
rolb
call
int3
sbb
enter
repnz
push
sbb
shrl
subl
add
arpl
aaa
pop
pop
mov
pop
lret
in
sbb
inc
shrb
pop
adc
repnz
add
jp
pop
loope
sbb
push
negb
mov
insb
jbe
cmp
cltd
adc
call
xchg
test
xlat
aas
or
push
push
stos
jecxz
lret
jo
inc
xchg
testb
repz
xor
push
adc
rcll
inc
nop
mov
adc
dec
jb
stos
daa
push
out
push
mov
cmp
out
leave
int
add
pop
jo
outsb
stc
adc
push
rep
add
adc
scas
mov
gs
mov
std
sbb
push
mov
icebp
pusha
sahf
mov
jbe
mov
xchg
fwait
jecxz
jb
xchg
addb
fldt
scas
rcrl
push
sub
fcomps
cli
loopne
mov
mov
sbb
mov
inc
jmp
sub
jmp
mov
jge
adc
mov
dec
inc
sbb
adc
mov
push
mov
inc
add
push
mov
pop
jno
dec
or
jg
mov
inc
add
push
shll
dec
and
push
imul
gs
xchg
dec
iret
in
ljmp
cld
jnp,pn
nop
jmp
push
fsincos
mov
out
icebp
shlb
iret
addr16
stos
ss
add
jo
push
xor
lods
stos
jb
leave
adc
jl
or
test
inc
jae
out
rcrb
lds
fldcw
rolb
movsl
data16
repz
cs
aad
add
xchg
xchg
pop
loopne
jo
popa
lods
pop
lods
or
lods
pop
fcomps
outsb
fisubrl
cld
ja
test
insb
push
cmpsb
inc
insb
adc
dec
sbb
cmpsb
or
das
les
pop
mov
inc
popa
dec
push
and
fs
outsl
shlb
xlat
in
adc
pop
dec
test
mov
jmp
mov
inc
adc
repnz
les
cmpsl
add
dec
dec
repnz
out
call
mov
push
push
fucomip
push
add
hlt
fs
lods
aad
les
in
mov
mov
out
mov
sbb
lock
enter
xchg
mov
aaa
aas
mov
sub
mov
es
insb
adc
test
push
xchg
or
adc
adcl
aaa
nop
shlb
ja
out
or
push
arpl
lods
fucomp
inc
ficoms
mov
outsb
rorb
sub
cli
scas
xchg
xor
dec
adc
mov
and
repnz
or
xor
or
sub
sahf
test
js
or
shl
mov
pop
not
push
xchg
push
leave
jne
outsl
sub
inc
dec
cmpsl
fwait
jmp
jno
jg
addr16
hlt
push
cmpsb
stos
test
jmp
and
fucom
cmp
stc
dec
xchg
pop
test
idivb
lcall
loop
pop
out
pop
mov
xchg
cmpb
cmp
in
andb
daa
jnp
pop
add
xor
pushf
les
mov
add
xchg
xchg
test
out
pop
mov
ss
rcrb
pop
mov
lock
mov
in
in
inc
inc
loop
lock
les
sub
mov
inc
jp
jmp
push
das
jl
mov
mov
push
pop
pop
stc
jnp
sbb
dec
movsb
fiadds
popf
mov
xchg
mov
dec
std
clc
int
pop
sub
xchg
mov
xchg
mov
mov
push
das
push
and
sub
imul
sub
int3
je
testb
mov
cmp
sti
imul
repz
ficoml
lret
cld
and
ljmp
push
shl
les
lret
push
icebp
loope
cs
and
lods
mov
add
out
or
inc
nop
mov
pop
out
orb
icebp
test
enter
dec
push
jle
das
stos
int3
pop
pop
out
popf
aaa
repnz
int
jecxz
dec
scas
push
in
test
aas
enter
mov
pop
int3
outsl
mov
call
pop
sub
je
dec
xchg
xchg
sbb
jne
fdivl
pop
push
scas
ds
pop
insb
fwait
pop
ds
cmp
test
cmp
lock
or
jbe
mov
sarb
rcr
xchg
shlb
mov
xor
hlt
fsubr
and
repnz
and
mov
leave
pop
aad
sbb
test
mov
push
outsl
test
inc
ss
xchg
fadds
add
test
push
mov
push
dec
ret
rclb
fldenv
jns
sbb
push
outsl
xor
lea
mov
aad
add
roll
add
test
fdivl
test
leave
xor
lods
cmp
adc
dec
add
in
or
xor
push
sub
fstps
mov
sbb
mov
mov
mov
jge
pop
inc
lret
out
or
adcb
push
dec
aas
and
setae
push
scas
cmpsb
imul
and
dec
xor
mov
dec
mov
sub
jmp
js
fcomi
daa
fcomip
movsl
xor
sbb
out
js
xlat
aad
dec
fwait
gs
outsb
xchg
push
add
dec
int
insl
lcall
aam
cmpb
mov
and
or
xor
imul
push
arpl
mov
xor
das
push
lods
nop
push
rclb
mov
cmpsl
adc
vmwrite
mov
mov
adc
inc
daa
push
in
mov
mov
out
aam
shl
clc
jle
pop
movsl
outsb
adc
or
pusha
jmp
pushf
mov
cmp
add
xchg
call
jbe
mov
jno
mov
jno
inc
lea
push
bound
jo
cld
jg
jnp
xchg
fmul
mov
push
and
mov
sbb
dec
cmp
xlat
xchg
cmc
outsl
stc
pop
inc
rolb
xor
popa
pusha
xchg
cmp
add
xor
aas
push
shl
sub
jb
or
dec
shrl
jns
clc
cmpsl
push
ja
btr
js,pt
pusha
jno
sub
daa
cmp
in
sub
les
addr16
mov
mov
cmpsb
push
mov
xchg
pop
jecxz
dec
sbb
mov
mov
mov
int3
fisubrl
rcr
out
fimuls
pop
enter
push
sbb
xchg
dec
cmp
cmp
fisubl
rorb
add
push
lods
jecxz
lret
insl
mov
ja
das
lret
jle
outsl
xchg
add
dec
pop
pop
stos
fisubl
and
jecxz
data16
lods
and
adc
cmp
sbb
or
loop
sbb
mov
dec
test
xor
or
out
dec
xchg
sbb
out
mov
xchg
xchg
and
xchg
movsb
int3
leave
xchg
sub
cmp
jp
dec
outsb
xlat
jmp
sahf
push
jb
rcrl
gs
scas
sub
push
push
cs
mov
inc
jae
cmpsb
test
jnp
sbb
and
jmp
call
es
mov
jle
nop
cltd
loop
pushf
mov
mov
inc
push
inc
mov
or
fnsave
xor
insl
pop
mov
xor
mov
push
in
lods
cmp
sbb
mov
orl
and
mov
pop
cwtl
filds
aam
xor
test
rclb
fwait
mov
jae
mov
jle
push
mov
daa
out
test
or
sbb
lea
mov
std
xchg
jae
bound
arpl
lods
repz
fimull
push
and
and
icebp
push
jmp
sbb
and
push
fsubs
outsl
sub
sarl
or
loop
xor
popa
aad
dec
dec
ja
dec
jno
sahf
stc
add
adc
cmpsl
mov
dec
pop
js
cmp
sti
call
fbld
aad
sub
in
stos
mov
sar
dec
fidivrs
mov
sub
in
inc
loopne
fisubl
jnp
cli
mov
lret
cmp
ret
ljmp
popf
xor
jns
les
xchg
in
push
mov
icebp
jo
cltd
stos
iret
push
mov
pop
sub
sub
xchg
inc
clc
test
pop
movsl
lods
push
pop
jae
aaa
xor
adc
loop
out
ss
mov
int3
mov
popa
lods
adc
outsl
arpl
dec
fisttpl
or
jno
or
pushf
fnstsw
out
pusha
pop
enter
rcrb
cmc
sti
ss
xchg
inc
and
rcll
in
test
xchg
outsl
pop
jp
jmp
xor
cmpsb
sub
mov
jne
sarb
lods
test
test
xchg
pop
jge
pop
inc
jae
jl
out
push
pop
ljmp
fs
das
stc
fcoml
loope
mov
faddl
mov
mov
cwtl
daa
sbb
insl
dec
dec
xchg
sbb
incl
mov
jbe
in
add
fisttpl
loope
out
dec
sub
cld
and
cmp
sbb
mov
push
xor
sub
mov
ret
sbb
hlt
pop
cmpsl
cmp
push
dec
cmp
pop
xchg
push
movzwl
xchg
es
add
jp
or
and
stos
mov
rorb
mov
fisttpll
pop
pop
gs
in
and
xlat
sbb
pop
mov
sub
outsb
mov
mov
xchg
lods
and
pushf
xor
daa
pop
pop
outsb
insl
push
ja
and
movb
outsb
ljmp
jg
sbb
jecxz
pop
clc
sbbl
lea
fcmovnb
adc
xchg
xor
xchg
andb
or
ss
and
push
mov
shrb
push
pop
shrl
push
mov
adcl
test
cmp
fcompl
mov
fisubrs
add
fldl
aaa
ret
mov
cld
jle,pn
or
idivl
push
mov
and
sar
jge
mov
stos
outsl
fisubrl
into
lret
jl
dec
add
test
push
mov
add
mov
xchg
xchg
jnp
insb
mov
jb
sub
in
or
jecxz
lcall
cmp
mov
ja
jno
inc
xchg
and
mov
addr16
ds
jp
pushf
push
mov
and
adc
and
or
pusha
mov
in
mov
sub
cmpsb
je
aas
lahf
push
lods
mov
movsb
out
test
into
imul
push
popf
sbb
lahf
cmp
es
pop
data16
test
mov
cmpsl
mov
inc
insl
dec
aas
les
adc
jl
aam
push
cmp
or
xchg
inc
xchg
add
sub
dec
sbb
or
std
shll
lahf
sbb
push
push
sub
mov
mov
nop
push
pop
je
test
or
push
fdivl
push
ljmp
push
in
mov
inc
cmp
push
xor
lods
adc
ljmp
add
sub
jbe
mov
clc
push
ja
push
sub
inc
fwait
movsl
jge
adc
adc
dec
stc
sbb
push
fdivrl
icebp
xchg
push
in
inc
add
insl
sub
hlt
add
push
icebp
jmp
or
sub
rcrl
pop
lahf
pop
insl
and
mov
test
scas
test
lahf
jl
pop
bound
test
mov
nop
icebp
cmp
adc
cmp
call
fwait
leave
std
pop
cmp
sub
sbb
call
aad
push
into
sub
jmp
cmp
imul
jmp
sbb
cld
cmp
pop
lahf
xchg
lahf
xchg
out
je
loopne
inc
dec
pop
pushf
cs
jno
fcmovnbe
dec
cmp
push
adc
ret
fs
xchg
xchg
lret
int3
adc
sbb
out
adc
rorb
sbb
and
push
and
aam
push
jp
bound
jmp
cmp
lds
pusha
pusha
or
aas
mov
jecxz
mov
cwtl
and
into
outsb
adc
adc
inc
pop
mov
inc
jbe
and
popf
mov
mul
and
and
push
sti
repz
add
add
xchg
add
inc
xchg
popa
add
lret
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
add
mov
