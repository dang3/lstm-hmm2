sbb
add
mov
int
lods
out
dec
out
scas
pop
cld
dec
jbe
add
inc
stos
ja
dec
push
fstps
mov
and
push
test
std
bound
pop
pop
sub
pop
push
das
test
ss
rolb
in
jl
pop
imul
iret
pop
sub
test
sahf
mov
loop
loopne
cmc
sarl
mov
notb
arpl
jmp
inc
mov
cld
fwait
or
insl
mov
cmp
popl
sahf
jp
adc
test
mov
or
lret
cmp
fisubrs
aas
std
outsb
push
fists
adc
lds
or
lret
lock
scas
loopne
outsb
dec
clc
cmp
pop
mov
sub
mov
or
push
mov
mov
add
call
imul
mov
test
mov
insb
roll
xor
adc
lcall
sbb
pop
and
jle
out
int
mov
es
ljmpw
dec
lret
push
cmpsb
mov
mov
pop
push
call
sbbb
mov
jge
sbb
rcl
pop
mov
out
fdivrp
enter
movsb
push
jge
ret
in
insl
sbb
lcall
add
cld
and
mov
pop
sbb
les
pop
gs
ret
push
in
sub
insb
mov
jbe
mov
jo
pop
int3
es
leave
iret
movsb
or
lret
inc
stos
push
push
out
xor
mov
imulb
test
rcrl
ret
push
call
jne
dec
sar
cs
stos
andl
cs
jae
mov
dec
xchg
lret
out
stos
push
xor
imul
pop
loop
lods
lcall
xor
js
fbld
and
mov
jp
inc
push
imull
push
mov
dec
test
les
add
enter
popl
sub
cld
in
test
fsqrt
jp
sbb
iret
sti
xchg
xor
aad
jmp
fwait
mov
and
mov
scas
lods
loope
bound
cmpsl
ss
inc
pop
adc
fwait
push
cs
and
or
dec
dec
sub
lret
notb
shrl
push
add
pop
and
cmp
jno
repz
ret
sbb
jno
jno
lret
stos
sub
arpl
mov
leave
mov
sti
je
inc
sbb
mov
mov
mov
jne
aaa
mov
cmc
cli
nop
iret
lahf
hlt
push
cwtl
sub
lret
push
ret
aas
pop
dec
mov
push
test
sarb
push
or
ret
fstpl
and
in
gs
inc
inc
add
repz
fdivrl
popa
imul
aaa
mov
mov
ds
movb
inc
pop
mov
shl
or
imul
mov
pop
cmp
cs
dec
xlat
pop
ds
xor
xor
gs
fstps
arpl
cld
dec
ss
or
mov
mov
dec
xchg
ficoms
int
xor
subl
xor
int
jo
test
push
pop
pusha
and
sub
shlb
mov
sbbl
xor
sub
popf
sub
and
test
aam
repz
lret
das
cwtl
cmpsl
dec
aas
inc
sbb
ss
stos
in
stos
dec
out
pushl
loopne
mov
pop
fisttps
ret
rcpps
mov
and
fcoml
fidivs
aas
std
xor
add
xor
pop
inc
hlt
adc
jmp
mov
lcall
jb
jbe
xchg
lcall
or
sbb
clc
sbb
add
pop
das
jns
fcompl
push
inc
push
lahf
test
shlb
sti
in
ja
cmc
bound
pop
xchg
insl
lea
iret
and
sahf
push
in
or
mov
jg
jg
add
jae
subb
fisttpl
int3
mov
icebp
pop
xchg
xor
pop
mov
push
add
ret
out
push
outsl
sahf
rcll
adc
xchg
dec
in
inc
leave
loop
push
push
or
int3
mov
or
loope
aas
icebp
stos
xchg
mov
xchg
mov
cmpsl
ret
clc
int
pop
jl
jno
or
lock
lahf
mov
fldcw
call
imul
mov
push
rcl
lret
xchg
push
stc
iret
inc
aas
stos
in
inc
in
lea
pop
arpl
dec
sub
sar
movd
jae
out
bound
int3
or
xchg
clc
xchg
loope
cmp
and
push
push
hlt
std
mov
mov
fisubl
out
adc
push
push
dec
mov
sub
out
mov
jnp
jae
mov
addr16
inc
inc
cli
ror
xor
mov
and
lahf
bnd
lret
daa
lret
sub
push
pop
notb
and
arpl
pop
clc
mov
dec
das
fsubrl
data16
stos
gs
pop
xchg
imul
pusha
test
push
out
scas
jl
movl
inc
mov
jo
jnp
xchg
lret
cmp
mov
inc
push
das
mov
jp
into
shlb
fidivl
hlt
enter
loopne,pn
pushl
lret
or
add
pushf
sbb
or
and
orl
filds
or
mov
mov
filds
mov
mov
outsb
scas
bound
sahf
decl
stos
mov
add
and
test
roll
cld
rolb
adc
jecxz
dec
dec
push
mov
addr16
cs
in
sahf
sbb
mov
cld
inc
mul
outsb
cmp
mov
pop
dec
dec
movsl
add
mov
add
or
in
and
fmul
cmp
rorb
hlt
jg
pop
inc
xchg
and
xchg
dec
add
test
out
scas
out
inc
scas
pop
fisttpll
rcll
xor
xchg
jns
ds
cltd
adc
pop
dec
mov
ljmp
xor
arpl
aas
fdivrs
cmp
mov
cwtl
int3
out
jl
jnp
in
and
jae
cmpl
enter
shll
jo
ret
push
rcrl
arpl
push
adc
sub
mov
icebp
into
cwtl
nop
jle
mov
push
popf
sti
mov
dec
addr16
pop
fistpl
lods
in
sub
andl
call
iret
pusha
insl
movsb
push
cmpl
dec
fistpll
shr
mov
cmp
sbb
enter
repz
adc
ret
insb
sub
bound
sti
jae
sub
mov
mov
imul
rorl
out
pop
pop
inc
mov
mov
sbb
dec
addb
jl
pushf
movsb
mov
add
setle
imul
jb
sahf
pop
clc
mov
pop
dec
das
shlb
fstpt
add
mov
lret
sbb
subl
aad
dec
xor
ds
imul
jge
xor
test
jg
sub
mov
sbb
das
scas
jg
adc
js
fbstp
stos
cmpsb
lock
andl
dec
add
ljmp
jg
push
pop
inc
mov
data16
dec
pop
adc
xor
pop
push
pushf
sbbb
std
mov
inc
cmp
bt
dec
nop
push
adc
push
out
out
adc
jmp
pop
cmp
shrb
cmp
mov
pop
xor
repnz
sbb
sahf
mov
push
shl
cs
and
test
add
pop
int3
call
mulb
cmp
aaa
cmpsl
and
test
ja
dec
jmp
dec
xor
popf
jl
pop
dec
push
lahf
ja
fnsave
and
imul
es
daa
cmp
lcall
add
js
dec
and
mov
in
push
ds
push
push
cltd
loop
push
repz
dec
in
mov
sub
pop
cld
xchg
push
mov
rorb
addr16
or
dec
xchg
ja
mov
lea
enter
jae
cmp
dec
adc
in
out
adc
jg
push
or
adc
mov
add
sarl
or
lea
inc
pop
rcrb
cmp
lods
and
inc
int
bound
rol
addr16
jbe
add
jno
mov
iret
rolb
shl
mov
sub
adc
pop
push
or
mov
xchg
inc
icebp
push
ss
push
dec
xchg
arpl
mov
fbstp
pop
lods
add
aad
fistl
push
jae
mov
or
or
daa
pop
xchg
adc
adc
rolb
or
sub
jge
push
cli
sbb
xchg
test
gs
les
xlat
cmp
sbb
fs
adc
jecxz
jmp
lds
inc
decl
lcall
xor
mov
pop
xchg
mov
aas
cmp
and
in
fmuls
jp
fistps
lgs
std
or
push
push
gs
clc
hlt
dec
and
mov
or
fistpl
push
pop
and
clc
or
inc
or
fucomp
and
je
outsl
fisubrl
repz
cmpb
fwait
push
sbb
popa
mov
push
movsb
sbb
mov
cmpb
fwait
adc
in
test
and
adc
aas
mov
mov
lahf
into
jns
adc
imul
mov
inc
jp
add
sub
ficompl
add
and
movsl
dec
fistps
ja
mov
in
sbb
rcl
mov
add
mov
pop
lret
pop
inc
xor
mov
sarb
cmp
mov
call
push
add
cmp
dec
cltd
into
stos
aam
sbb
xlat
mov
sub
ficomps
rclb
sbb
int
push
stos
sub
adc
test
rcl
mov
lret
imulb
int
movsbl
out
scas
das
adc
sbb
mov
mov
lret
orb
fs
or
imul
imul
daa
and
aad
mull
rcll
and
sarl
stos
movsl
pop
jle
lea
test
and
sbb
xchg
in
fstpl
xchg
nop
push
repz
stos
and
ret
clc
lahf
int
pop
repz
adc
push
ret
mov
xchg
inc
add
xor
sti
aas
loope
cmpsl
xlat
adc
imul
cmc
in
js
sbb
and
andb
cmp
in
add
mov
insb
mov
repnz
xchg
sbb
aas
iret
mov
clc
mov
mov
inc
icebp
imul
xor
mov
popf
or
inc
push
test
xlat
out
cmc
mov
cld
lcall
into
mov
xchg
dec
mov
fcoml
inc
inc
stos
mov
shll
adc
popa
in
data16
ret
cmpsb
xchg
xchg
in
nop
xchg
stos
mov
xchg
stc
fildl
jae
xchg
add
mov
mov
sub
imul
or
jne,pn
pusha
ljmp
nop
leave
sbb
cmc
adc
push
call
insb
arpl
push
jmp
or
in
sbb
leave
pop
mov
imul
and
adc
cmp
and
ljmp
sub
push
push
aad
lds
sti
or
and
fucomp
cmp
push
cli
leave
sub
sbb
and
movsb
nop
mov
jo
push
mov
insl
rolb
push
jle
jecxz
pop
push
mov
fsubp
popa
daa
fcompl
xor
xchg
push
in
nop
lea
sub
mov
push
jp
sbbl
jle
push
adc
clc
call
dec
scas
pop
jp
in
and
jecxz
imul
test
add
pushf
addr16
mov
mov
repnz
push
mov
int
push
arpl
sub
movb
jle
xor
inc
subb
imul
fadds
data16
mov
xor
sub
jb
adc
sbb
sbb
cwtl
dec
fldenv
fistpl
jnp
pop
jb
gs
ljmp
mov
ljmp
add
int
rcrb
ret
nop
insl
enter
cli
gs
lea
lods
and
push
sub
mov
mov
pop
iret
loop
or
inc
adc
notb
inc
jb
adc
fcoml
mov
push
adc
sub
pop
inc
pop
xchg
or
in
push
push
imul
mov
cmc
lcall
mov
gs
es
movsb
scas
in
popf
outsb
loop
adc
mov
xchg
out
cmp
mov
jnp
lea
mov
rolb
xchg
into
jge
cmp
bound
xchg
addps
fidivrl
fnstenv
mov
out
dec
mov
ljmp
mov
mov
cmp
test
leave
jg
dec
ret
int
inc
mov
mov
mov
movsl
mov
push
fs
arpl
clc
vphaddubd
xor
xchg
scas
adc
cmp
cmp
outsb
inc
cltd
jmp
push
push
test
dec
inc
enter
xchg
jge
mov
xchg
pcmpeqb
lcall
nop
ror
xor
mov
cmp
test
mov
sub
mov
call
inc
jbe
fsubl
sbb
or
lods
sub
mov
in
sub
sub
mov
mov
inc
jae
es
push
lea
and
arpl
ljmp
lret
sbb
or
movsl
inc
mov
jns
testb
cmp
add
ds
ja
inc
inc
punpckhdq
inc
jl
and
lcall
jmp
fidivrs
in
mov
fs
sub
and
addr16
or
mov
lcall
or
cmp
fimuls
sub
sub
push
ds
out
fldenv
ret
lahf
dec
mov
or
mov
and
sbb
leave
test
dec
repz
js
testb
mov
cmpxchg
sub
call
sbb
xor
popa
cmp
add
divb
addr16
dec
push
push
int3
add
push
cmp
shrb
or
mov
dec
inc
cmpsb
pushf
cmpsb
mov
dec
or
mov
fisubrs
imul
add
push
jbe
leave
xorb
popf
filds
popf
or
fidivl
repz
inc
jne
mov
lods
inc
inc
xchg
cmp
pop
addb
gs
lods
out
mov
insb
sub
sbb
jecxz
jno
sbb
xorl
pop
insb
and
cmp
inc
inc
xlat
jae
insb
enter
ds
inc
aam
xchg
sub
ja
xor
xchg
ret
pop
sub
mov
pusha
and
add
adc
push
in
and
jge
pop
jle
cmpsb
popf
add
push
cld
ror
rcrb
aam
enter
xchg
test
cwtl
jge
mov
mov
pop
adcb
out
sbb
int3
out
ffreep
or
mov
push
hlt
push
int
pop
add
imul
mov
aad
sub
ljmp
mov
push
sbb
test
pop
ret
idiv
push
leave
stc
rcr
into
fistpl
ret
xchg
pop
int3
adc
popa
push
adc
pop
xchg
sti
pop
sub
in
adc
jae
cmp
divl
xor
mov
das
sahf
pop
add
pop
and
test
mov
add
jbe
dec
mov
insb
pop
les
mov
stc
mov
rcrl
or
dec
int
mov
or
imul
jmp
push
jne
adc
mov
test
sbb
nop
sub
jne
push
pop
adc
adc
fpatan
jnp
ror
or
sub
les
add
cmpsl
jg
mov
cli
cmp
adc
stos
pop
or
xchg
sub
cmp
lock
push
mov
in
and
push
pusha
push
movsb
pop
push
sub
jge
dec
mov
mov
cli
push
mov
arpl
cmp
and
push
or
insl
lods
sub
mov
test
test
push
lret
cmpsb
test
clc
outsb
pop
cmpsl
xor
test
dec
int
stos
push
and
dec
lcall
iret
dec
jne
adc
aas
push
call
in
jge
jae
mov
inc
inc
adc
fnstcw
or
lea
adc
inc
xchg
int3
repnz
fnsave
add
and
pop
push
popf
pop
insb
fcomps
inc
popf
test
and
pop
and
push
notb
loope
test
enter
repz
insl
dec
sub
pop
ljmp
fs
cmc
insb
mov
pop
push
xchg
cmp
add
lds
imul
fs
aaa
out
and
sbb
and
in
sub
jecxz
rcrb
jge
mov
push
shrl
inc
mov
rep
icebp
pushf
scas
add
push
push
insl
cmp
jnp
ss
test
aam
shll
adcl
adc
in
mov
lds
xor
test
jmp
adc
mov
add
lahf
les
dec
and
insb
imul
gs
or
mov
xchg
daa
cmpsl
ljmp
mov
xchg
loop
jno
mov
bound
and
frstor
dec
push
leave
and
mov
and
out
xchg
dec
lret
mov
test
inc
dec
test
and
cmp
xchg
pushf
jne
jo
mov
or
loope
jecxz
in
mov
int
adc
jl
fimull
pop
sbb
jl
cmpsl
test
or
pop
ficoms
xchg
xlat
jle
mov
je
jmp
add
rolb
mov
or
addl
mov
pop
orl
fisubl
cmp
jo
jbe
std
mov
lret
sub
jnp
testb
sbb
fnstenv
test
js
mov
mov
and
lahf
clc
daa
rorl
mov
test
dec
bound
stc
movsb
sbb
rolb
sbb
add
fcmovu
dec
mov
fcmovu
pop
jne
push
inc
leave
fsubs
sarb
push
pop
inc
adc
into
pop
xchg
mov
das
ja
mov
stos
push
lock
jae
and
popa
mov
jno
mov
dec
cli
push
mov
add
data16
xchg
int
shrb
std
xlat
out
mov
jbe
push
pop
shrl
inc
push
fists
pop
loopne
fcom
jb
xor
outsl
lcall
jmp
test
stc
int3
test
xchg
aas
sub
mov
sbb
fsubrl
push
adc
lock
inc
fimull
dec
leave
mov
daa
jno
out
fwait
je
fisubs
mov
rorb
and
pop
xor
sti
xor
sbb
push
jbe
sbb
cmpsl
out
push
jb
aad
push
mov
mov
test
add
iret
sub
movb
inc
sub
push
shll
test
and
dec
dec
rorl
pusha
pop
jge
adc
push
stc
je
cmp
push
xor
pop
sbb
push
xchg
pop
and
pushf
fimull
mov
cmp
jle
mov
pop
inc
xlat
inc
mov
loope
mov
hlt
push
xchg
scas
pushf
adcb
popf
or
repnz
and
lods
aam
imul
cmp
lods
cmp
xor
test
sub
les
xor
mov
jb
fadds
js
mov
push
sub
out
sub
push
aas
inc
pop
cmp
cmpl
sti
sub
fwait
dec
push
xchg
xor
xchg
xchg
xchg
adc
enter
addb
push
addb
cmp
scas
insl
fistl
cs
adc
cmpsb
scas
xor
jle
add
push
leave
cwtl
mov
xchg
push
push
push
cld
dec
loope
or
enter
stos
add
test
gs
lock
sbb
jmp
and
pop
insl
push
pushf
xchg
fs
mov
jne
inc
leave
out
outsl
into
daa
and
sub
shlb
inc
jne
push
mov
orb
pop
leave
bound
push
test
push
cmp
ret
add
aad
mov
es
cmpsb
and
pop
insw
and
pop
aam
ficoms
and
hlt
lea
sahf
xchg
xor
inc
mov
loop
ds
mov
arpl
int3
mov
stos
mov
pop
inc
repnz
into
jo
loope
lret
mov
mov
sbb
shl
mov
in
call
cltd
ret
arpl
imul
notl
and
das
ja
test
sar
test
pop
mov
daa
dec
fisttpl
cmp
pop
dec
push
call
rol
aaa
mov
notb
jb
aaa
movsl
adc
xchg
mov
and
dec
cmp
mov
or
inc
add
pop
leave
into
mov
jp
test
or
in
mov
fcmovb
stc
xchg
cmc
rcrb
jl
cmp
or
xchg
cs
pop
push
jae
in
das
out
sbb
push
fwait
adc
test
xchg
bound
clc
das
pop
ret
mov
idiv
jl
stos
or
sahf
shrl
je
push
loope
test
xor
or
ja
sub
inc
or
out
test
push
or
jbe
lods
cmp
aad
out
pop
cmpb
pop
add
pop
push
add
xor
rclb
jecxz
mov
sbb
rclb
aam
adc
addr16
iret
in
ss
bnd
iret
adc
mov
mov
psubsw
cli
outsl
jge
ficoml
mov
push
xchg
sub
mov
mov
dec
mov
pop
dec
pop
mov
faddp
adc
jge
mov
das
jg
imul
andb
xor
ljmp
imul
out
jg
out
sbbb
fcom
rcrb
mov
jmp
mov
inc
daa
or
mov
shrb
and
pop
nop
shrl
mov
push
iret
push
cmp
fcompl
mov
gs
or
jbe
and
mov
add
jg
jns
mov
popf
fmuls
lret
lret
jbe
mov
imul
xchg
mov
push
jbe
jno
cmp
jp
mov
test
fisubs
mov
fadd
push
dec
shll
insl
test
leave
and
stos
imul
jnp
mov
ljmp
cmp
int3
dec
dec
dec
dec
ret
add
pop
cs
mov
mov
push
dec
adc
jb
add
sbb
scas
push
cmpsl
xor
shr
sbb
inc
dec
jnp
testl
inc
cmpsl
jnp
lcall
jg
jno
je
mov
pushl
adc
inc
fdivl
hlt
mov
sub
mov
mov
outsl
jle
loope
mov
andl
addr16
add
push
xlat
icebp
call
lds
xor
push
and
rcll
das
xchg
dec
clc
popa
call
adc
jne
jns
rorl
and
pop
fdivrs
popa
cmc
scas
sub
xchg
push
int
and
jmp
pop
movsb
dec
ja
inc
add
mov
ret
mov
dec
push
hlt
add
inc
rcr
pop
fdivs
js
mov
decb
in
jbe
push
mov
pop
add
iret
push
in
int
inc
inc
enter
cmpsb
inc
push
pop
mov
mov
leave
cmp
scas
pusha
lret
adc
mov
inc
mov
mov
mov
jecxz
sbb
scas
jle
movsl
mov
in
jle
test
sbb
sub
or
inc
xchg
dec
pop
push
addr16
pusha
mov
imul
insb
fldz
mov
test
scas
cli
and
bound
xor
and
je
loope
fidivrs
cmp
sub
bound
movsl
add
add
dec
cmp
and
push
xchg
dec
movsb
popa
cmp
jecxz
and
adc
popl
pop
fistpl
push
sub
jae
add
xor
lahf
pop
rcll
fnstcw
shlb
adc
lret
pop
sub
je
imul
inc
sub
cmpsl
out
jns
and
addb
cmp
in
movsb
dec
outsl
cli
push
mov
push
adc
loopne
fcmovnu
mov
pop
out
aad
daa
mov
movsl
int3
add
aam
xor
sbb
test
repz
and
xor
or
repnz
pop
inc
sub
add
inc
xchg
pop
push
cwtl
push
test
sbb
or
mov
sub
ret
mov
pop
jg
mov
aaa
lods
gs
sub
push
orb
pop
pop
inc
rol
ss
mov
cli
xchg
daa
lret
cmp
and
mov
int
jl
into
jge
sti
xchg
push
dec
mov
mov
jg
xchg
pusha
pop
add
pop
cltd
xlat
orl
scas
sub
repz
daa
sub
sarl
xchg
cmp
popa
mov
mov
mov
lahf
int3
dec
repz
iret
mov
and
inc
xor
popf
loopne
sarl
sbb
and
scas
sub
sub
or
loop
sbb
adc
mov
shr
add
jl
data16
mov
mov
stos
rcll
cmc
in
add
push
inc
outsl
push
adc
mov
pop
jp
rcr
popf
mov
loopne
sub
jae
mov
ss
ds
repnz
inc
fcmovnu
xchg
into
rcl
cmp
mov
arpl
pop
inc
sarw
pop
mov
push
mov
adc
mov
push
sahf
rorl
jg
cltd
ficoms
stc
mov
ss
gs
lea
inc
jle
negl
negl
movsb
xchg
jne
cmc
stos
add
pop
arpl
daa
cltd
push
scas
shll
repz
dec
dec
jg
outsl
cmc
inc
push
xchg
sub
cmpsb
mov
fdivrs
inc
fsubrs
xor
lea
mov
push
xchg
push
lock
repz
mov
rcr
jns
and
out
xor
jo
loop
je
add
adc
xchg
adc
pop
mov
mov
pop
shrl
mov
or
sub
addb
mov
sub
pop
xchg
les
mov
ds
out
addr16
mov
sbb
sub
mov
push
mov
sahf
ljmp
in
sub
ret
rorl
jne
push
out
stc
push
or
inc
push
sbb
push
adc
xchg
sbb
into
ljmp
dec
lret
xorb
int
adc
in
jae
call
sbb
mov
xchg
popa
ja
imul
std
cwtl
add
es
pop
sbb
aam
mov
decl
mov
imul
mov
pop
in
push
shrb
xchg
pop
imul
cmpsl
add
sbb
test
into
mov
bound
fs
or
rolb
xchg
and
pop
rolb
mov
or
pop
out
mov
cli
je
sub
cltd
pushf
aad
mov
cvtps2pi
test
aaa
and
add
or
jge
rol
in
cmp
nop
xchg
xchg
cmp
popa
testl
mov
mov
lcall
push
dec
sbb
outsl
mov
push
in
test
je
test
push
sbb
mov
mov
or
cmp
cmpsl
dec
adc
inc
pop
rcrb
je
and
sarl
inc
clc
inc
dec
cmpb
lds
xchg
in
and
fdivp
mov
jmp
cmp
pop
cmpsb
sub
dec
scas
mov
and
mov
adc
je
lret
add
mov
inc
call
dec
int3
push
ret
in
xor
push
pop
aam
xchg
outsl
fdivrs
jae
cmpsl
lretw
movsb
popf
cmpsb
out
mov
call
add
repz
je
nop
jno
xchg
adc
into
jb
or
pop
out
je
sub
pop
mov
setge
fidivrl
wrmsr
lods
mov
or
mov
and
cld
idivb
jl
xor
xchg
cld
pop
mov
cmc
push
push
cmp
push
push
pop
cmp
cmp
mov
bound
mov
pop
mov
roll
sub
scas
iret
mov
xchg
xor
cmp
movsl
mov
enter
mov
sbbl
test
jnp
out
mov
mov
stos
sbb
lea
loop
push
ss
jb
mov
cli
mov
sbbb
adc
ret
in
cmpl
cmpsl
and
into
jns
ret
out
pop
repz
sub
inc
adc
mov
pop
inc
cmp
aad
stc
andl
and
addl
fs
sbb
jle
jo
shll
dec
fbld
mov
nop
hlt
arpl
negl
mov
fadds
or
add
add
adc
cmp
xchg
xor
lret
mov
idivb
in
add
je
or
mov
inc
mov
xchg
push
pop
lahf
inc
mov
xor
pop
sti
iret
adc
stc
movsl
mov
loop
sarl
xlat
inc
cmp
repnz
scas
icebp
dec
mov
jnp
or
sbb
xchg
or
std
adc
imul
xor
pop
notl
adc
push
push
sub
nop
addr16
pop
arpl
packssdw
shll
stos
inc
cmp
pop
or
repz
xor
mov
test
ds
push
loope
aad
pop
sbb
popf
scas
test
fwait
mov
imul
idivb
cmpsl
pop
testl
adc
subb
sub
fs
ret
cmp
push
or
mul
frstor
mov
cld
xor
adc
mov
je
pop
or
jecxz
pop
and
fstpt
add
hlt
sub
dec
test
dec
sahf
or
jnp
cmp
push
repz
dec
nop
mov
push
mov
mov
jmp
cmpsl
jne
xchg
arpl
dec
mov
lret
sbb
adcl
cmp
jcxz
pop
mov
xchg
jns
ret
xor
mov
sub
xor
xchg
push
dec
xor
pop
hlt
jle
hlt
clc
cmp
ljmp
push
jbe
call
cmpsw
xchg
cmp
mov
or
mov
sub
scas
outsl
cmp
popa
and
ss
int
mov
in
jne
inc
and
leave
out
mov
xchg
add
inc
xor
mov
sub
lret
call
dec
sub
mov
jb
xorl
repz
jae
fs
inc
fistpl
or
test
push
xchg
stos
mov
pop
aam
jbe
adc
daa
rcr
jmp
dec
mov
insb
arpl
stos
push
test
arpl
leave
jb
jmp
jno
mov
pop
mov
loope
shrb
mov
ljmp
pop
std
jne
jo
xor
pop
mov
xchg
popf
xor
inc
fwait
aad
iret
popa
push
cmpsl
pusha
cmpsl
sbb
xchg
sbb
adc
ret
mov
xchg
cmp
out
jae
dec
shll
and
pop
int3
jae
mov
mov
mov
xchg
test
lcall
lods
movsl
leave
or
rcl
mov
aad
sub
js
inc
push
mov
adc
lahf
out
cmp
dec
mov
rolb
lret
mov
push
popa
gs
add
data16
cmc
dec
enter
xchg
loope
pop
sbb
fld
jp
mov
icebp
or
mov
jnp
inc
out
rcrb
movsb
lods
mov
nop
lahf
push
sub
xchg
loop
add
push
xchg
sbb
mov
cmp
cmp
jns
mov
pushf
outsb
in
dec
add
inc
mov
stos
or
movsb
aad
sbb
pop
xorb
or
mov
add
pop
mov
arpl
cmpl
sbb
inc
or
cmp
jg
jnp
into
lea
push
adc
inc
sbb
xchg
mov
daa
cld
ds
add
out
add
and
inc
aad
mov
jp
int3
cltd
inc
mov
and
or
jle
sub
jl
subl
aaa
daa
gs
dec
push
daa
mov
add
in
xor
cmp
jmp
inc
insb
loopne
nop
push
xchg
cli
fldenv
xchg
test
mov
mov
mov
insb
xor
sub
jp
mov
or
mov
mov
hlt
dec
jne
push
testb
and
das
ret
push
adc
jg
mov
push
or
mov
iret
inc
ljmp
pop
in
pop
pop
xchg
pop
inc
sbb
inc
jnp
fs
cmp
mov
rclb
and
inc
loopne
add
dec
jnp
dec
adc
sbb
cmc
es
sbb
dec
cltd
pop
out
lock
and
inc
lea
mov
into
mov
cld
jo
imul
stos
mov
jb
adc
lahf
mov
mov
sbb
sbb
lea
push
or
imul
ret
jmp
push
and
lea
aas
aas
lea
adc
sahf
sbb
xor
jae
leave
sbb
aad
cs
loop
popa
push
jp
nop
xchg
cltd
pop
nop
scas
xor
add
cli
xchg
add
lods
dec
jne
ja
jg
xchg
loope
xchg
jae
dec
mov
xor
jo
pop
adc
aam
mov
lahf
stos
mov
or
jns
pusha
adc
sar
sbb
and
mov
iret
scas
and
xchg
mov
dec
arpl
loope
add
loope
push
scas
cs
out
xchg
cld
and
adc
mov
jns
inc
xchg
sbb
enter
out
or
xor
cmp
jb
testb
mov
daa
and
cmp
mov
inc
stos
lahf
cmp
pop
sub
sahf
lea
enter
into
sub
dec
mov
push
es
lea
cmp
adc
add
xchg
jbe
popf
pop
mov
xchg
cmp
mov
mov
jne
push
mov
xchg
in
insl
ficoml
mov
and
cmc
jmp
jle
in
or
push
jno
jb
lods
mov
nop
inc
xchg
test
aam
mov
mov
xorb
pop
pop
add
pop
rcrb
std
mov
adc
lea
std
fwait
call
mov
push
out
or
stos
mov
aad
fisttpl
push
sarl
inc
dec
cmp
push
and
sti
es
add
std
ret
or
bound
icebp
and
in
dec
daa
mov
dec
adc
test
lret
inc
mov
sub
bound
jge
mov
push
jb
test
jmp
fmull
adc
out
sarl
cmp
dec
clc
out
mov
or
rcrw
xchg
inc
add
scas
sti
loop
jle
cmp
xchg
lods
sbb
cmc
jmp
cmc
icebp
mov
int
mov
jecxz
mov
sti
sub
pop
add
xchg
xchg
lods
xlat
cmp
cmpsl
std
inc
sub
add
adc
out
loopne
lcall
or
mov
addr16
inc
test
cwtl
popf
mov
jmp
pusha
push
in
nopl
dec
rol
and
xor
orl
push
add
jb
and
mov
mov
test
add
adc
fnstenv
sbb
mov
rcrb
adc
popf
sarb
jp
mov
push
xor
cmc
jecxz
mov
ljmp
jg
stos
lret
cmc
fidivl
jne
imul
mov
sbb
inc
xor
loope
mov
mov
sarb
gs
lock
test
pop
adc
jbe
cmp
jo
shr
or
mov
jnp
sahf
setg
insl
shlb
and
add
cmp
mov
pushf
insl
cmpsb
adc
adc
sub
mov
mov
sub
mov
jo
mov
pop
cwtl
inc
cli
test
flds
insl
inc
clc
push
mov
and
loop
loope
mov
xor
cmp
lcall
mov
fwait
push
enter
fistpll
dec
push
mov
test
mov
xchg
mov
scas
out
paddd
pop
insb
dec
or
pop
cmp
sbb
push
outsl
das
rcrl
or
add
and
sbb
jmp
sub
mov
in
jae
add
in
jns
jbe
lahf
das
aam
sarb
jl
daa
jo
out
inc
nop
inc
notb
hlt
lahf
lcallw
cltd
mov
cmp
scas
xor
mov
loopne
daa
rorb
dec
fcmovnbe
inc
mov
imul
ds
dec
outsb
aas
clc
stos
in
in
xchg
fwait
and
add
dec
cmpsb
inc
aaa
mov
jecxz
sbb
jo
xlat
cmp
scas
stos
xor
dec
loop
lods
icebp
jno
pop
rol
mov
repz
mov
sbb
jle
mov
pop
cli
inc
inc
adcl
call
icebp
lea
mov
je
mov
cmc
aam
and
inc
daa
shll
jmp
lahf
jns
stos
call
std
inc
mulb
scas
adc
cld
test
outsl
sub
aas
pop
cli
add
jne
or
stos
jp
sub
ret
push
sbb
xchg
aas
sub
cli
xor
leave
rorl
pop
enter
enter
or
in
leave
mov
mov
cmp
popf
xor
lret
add
mov
jno
repnz
lret
cmc
or
je
xor
iret
xchg
test
roll
xor
in
pusha
cwtl
mov
xor
sub
dec
stc
test
xor
mov
push
jg
jno
repnz
inc
sti
pop
cmp
xchg
and
xchg
aam
stos
fstpt
insb
test
testl
cs
mov
cmpb
mov
jb
jmp
aad
stos
es
mov
xchg
mov
sbb
mov
shl
dec
cmpsb
mov
add
sti
lret
inc
pop
fmull
jecxz
dec
add
pop
mov
scas
cmpsb
loope
cwtl
sub
lock
and
divb
outsl
mov
pop
nop
cmp
xchg
xchg
inc
sbbb
mov
bound
push
add
mov
cmpsb
inc
vaddps
loope
push
adc
sub
movsb
xchg
xchg
call
xchg
cli
inc
dec
icebp
mov
mov
mov
mov
aaa
mov
mov
cmp
sahf
pop
test
pop
or
or
sahf
lahf
jl
pop
in
shlb
loope
pop
sbb
movsb
aam
cli
insb
push
js
stc
mov
int
jp
pop
mov
fs
adc
scas
imul
lea
add
idivl
mov
call
fmul
pop
out
push
mov
sti
lcall
pop
loope
addr16
pop
je
test
notl
out
out
out
mov
pop
add
dec
jb
fsubl
mov
jmp
mov
pop
stc
pop
add
add
aad
mov
and
jno
icebp
test
mov
adc
adc
mov
icebp
push
add
xor
loopne
sub
int3
insl
bound
cld
arpl
mov
loope
loope
out
mov
mov
sbb
or
pop
ficomps
out
jg
loopne
rcll
aas
enter
push
sbb
xchg
adc
and
arpl
xlat
mov
es
sub
adc
push
dec
movsl
jp
jns
xor
int3
jp
push
cmc
inc
add
stos
js
mov
sahf
adc
sub
cmc
lea
sar
ret
testb
nop
dec
mov
push
cmpsb
jle
jnp
jo
fbstp
cltd
jns
mov
gs
addb
fisubl
fldt
js
xchg
xchg
xor
sub
fildl
roll
sub
and
out
mov
lret
cmp
test
test
jmp
push
mov
in
shll
or
push
push
jnp
lock
pop
sub
adc
out
cmp
and
ja
sub
scas
mov
jmp
mov
fwait
mov
cwtl
xor
or
loopne
je
orl
push
add
jg
fisubrs
mov
jp
ds
inc
and
push
rcrb
cmp
sbb
ss
push
aam
ret
test
mov
adc
inc
dec
xor
mov
xchg
adc
loopne
imul
mov
jbe
adc
jns
jl
cmpsl
rcrb
dec
pop
or
out
mov
stos
pop
jns
adc
ss
mov
mov
es
js
push
stos
pop
pop
inc
sbbb
pop
ficoml
les
mov
inc
inc
aad
cltd
push
arpl
dec
ds
js
in
stos
mov
popa
inc
fsubp
pusha
mov
or
in
adcb
mov
mov
nop
xchg
jecxz
or
test
jb
jmp
stos
mov
cmp
mov
dec
pop
dec
push
movsl
mov
dec
addb
push
stc
adc
shl
shl
ret
adcl
stc
fxch
divb
imul
mov
sbb
sub
pop
jl
cmpsb
jge
pop
jno
fimuls
sbb
push
imul
jbe
test
mov
xor
mov
inc
add
push
lcall
adc
mov
outsb
sub
adc
xchg
xor
arpl
mov
fiadds
xchg
jne
nop
push
incl
test
jae
mov
mov
push
cwtl
xadd
pop
jl
inc
jb
mov
je
test
xor
cmp
fnstenv
push
insb
jg
pop
cmp
push
push
fistpll
jo
push
jecxz
mov
jns
mov
xor
mov
dec
int
jbe
mov
dec
mov
adc
sub
jmp
xchg
sbb
lcall
cwtl
movsb
and
cmpsl
cld
jnp
rorl
lahf
sbb
lret
mov
scas
dec
dec
cli
push
pop
ja
xor
adc
pop
push
shrl
icebp
rolb
decb
adc
jae
xchg
mov
loop
pop
and
nop
sti
cwtl
mov
lock
repnz
fcomip
scas
inc
adc
add
cwtl
orl
cmpsl
and
cs
lret
jmp
sbb
icebp
mov
insb
dec
mov
xchg
dec
jb
cmp
xchg
outsb
imul
orb
mov
fidivs
or
xor
mov
in
jae
pop
adcb
loope
or
cltd
pop
or
fcomi
pop
push
add
ds
test
mov
bnd
cmc
sbb
ds
addl
cmc
sbb
outsl
mov
jne
or
sbb
pop
das
mov
mov
xlat
xchg
dec
cli
and
lahf
and
out
push
outsl
mov
pop
pusha
jb
adc
mov
or
sub
call
jb
lds
sbb
pop
call
adc
shlb
outsl
sbb
push
xor
js
ja
clc
xchg
and
lods
insb
pop
inc
add
pop
arpl
mov
ss
add
xchg
add
cmp
dec
cli
xlat
mov
ss
out
mov
xlat
sub
andb
pop
xchg
dec
call
lret
push
xchg
cmpsl
movsl
jl
or
dec
cs
sub
xchg
push
pop
incb
lods
cmp
or
add
nop
xchg
and
lcall
xchg
into
mov
subl
add
adc
cmpsl
cmp
lahf
push
cmpsl
xchg
dec
xor
repnz
mov
push
adc
jbe
jae
jne
and
sahf
push
pop
xchg
cmp
add
rcrb
iret
adc
xchg
shr
insl
nop
sahf
data16
pop
and
call
adc
dec
fdivs
test
stos
fidivs
fimuls
arpl
imul
sub
shl
lds
xchg
inc
mov
in
adc
lret
and
mov
pop
mov
dec
lret
neg
and
jne
cmp
jg
gs
xchg
xor
adc
pop
fldenv
jmp
jecxz
xor
mov
sbb
pop
lahf
mov
xchg
cmp
mov
xlat
nop
pop
jle
lahf
adc
xchg
mov
inc
aam
cmp
mov
movsb
popf
ret
lret
test
mov
xlat
mov
add
pop
jge
inc
in
xor
int3
push
fwait
cmpsl
cmp
out
stos
or
push
ret
pushl
dec
sub
fmull
ret
dec
sub
or
sbb
xchg
mov
fs
inc
mov
arpl
sbb
fsubp
pop
leave
repz
out
jae
in
mov
nop
sbb
mov
mov
sub
hlt
add
in
test
xchg
push
push
adc
push
xchg
jo
xchg
sub
cmp
movl
outsb
sbb
lock
pusha
ja
xchg
pusha
lret
mov
cmp
insl
mov
mov
aam
lahf
inc
dec
in
jns
mov
or
mov
ss
push
sub
scas
push
mov
test
mov
jns
and
xor
mov
jo
xchg
mov
sbb
inc
enter
movsl
mov
cli
pop
fnstsw
mov
xor
mov
lret
adc
orb
mov
xor
jecxz,pn
gs
ret
neg
mov
jb
arpl
mov
sub
mov
icebp
lret
xchg
aad
subb
lea
pop
xor
and
and
dec
mov
sbb
add
je
or
lock
cmp
sub
ret
mov
push
test
lahf
inc
xchg
xor
fcoms
lret
int3
lret
cmp
mov
sub
inc
xchg
ljmp
pop
int
cmp
aaa
add
jp
sbb
cmpsl
std
adc
cld
push
pop
iret
and
mov
adc
in
negl
mov
fnstenv
adc
cld
push
and
sbb
xchg
add
mov
mov
mov
inc
sti
xchg
lods
enter
or
or
lods
ds
icebp
loop
xchg
jg
test
xor
hlt
clc
mov
xchg
pop
jg
cmovne
dec
dec
rol
add
ret
jl
cmpsl
aad
adc
jg
sub
inc
cwtl
mov
lods
mov
sub
dec
pop
xor
pop
pop
cmp
mov
sti
aad
push
loope
pop
mov
out
and
dec
add
in
mov
lret
fwait
sbb
inc
int3
test
sbb
mov
rol
xchg
pop
dec
leave
and
ljmp
fs
leave
aas
xchg
lods
mov
loopne
int3
cmp
ss
imul
mov
adc
ljmp
aam
jo
mov
in
xor
mov
call
imul
push
mov
incb
insl
in
testb
jns
inc
jb
data16
mov
inc
xlat
aaa
divl
mov
mov
test
xchg
imul
sbbb
xchg
and
lret
and
imul
dec
into
ljmp
or
fwait
xor
stc
test
mov
movsl
bound
ja
push
dec
xchg
mov
loope
outsl
loop
mov
push
aam
mov
xlat
push
loopne
inc
sub
enter
mov
xor
jne
lret
lret
pop
xchg
jns
pop
push
pop
jp
aas
mov
inc
inc
fwait
sbb
leave
cmp
fsubrp
clc
pop
rorl
das
jb
sbb
dec
mov
inc
in
adc
movsl
repz
dec
je
enter
mov
cmp
clc
addb
xlat
ja
push
sub
jg
cmp
icebp
popf
movsb
cwtl
and
inc
push
sbb
ret
stos
inc
pop
dec
jmp
mov
sub
sbb
je
xchg
into
test
inc
fisttps
xor
jge
fdiv
mov
loop
xchg
aad
cmp
in
add
pop
loope
mov
inc
push
jns
int
fucomip
jnp
push
sub
or
or
js
inc
es
add
cs
sbb
xchg
xchg
es
loope
cwtl
cs
cmp
xchg
cmpb
or
rcr
dec
cmp
cmp
jmp
outsb
mov
xor
xchg
or
push
pop
cwtl
sbb
add
jl
test
clc
pop
stc
lret
loop
push
scas
sbb
pop
outsb
fsubrl
nop
add
push
movsb
lret
cmpsl
out
xchg
js
daa
sbb
test
insl
cld
js
iret
test
pop
cmc
or
clc
popa
mov
inc
mov
lods
inc
adc
adc
lock
xchg
jb
stc
ds
mov
stos
add
sbb
mov
ret
push
fsubrl
jne
sub
pop
jnp
pop
ss
xor
sti
jge
xor
aam
pop
and
cltd
ret
pusha
jmp
adc
mov
jbe
adc
adc
orb
sub
fstpt
push
xor
xchg
stos
cmp
and
mov
aam
fcomi
rcrb
lcall
fwait
bound
idivb
inc
lret
cmpsl
dec
mov
xor
lods
outsb
out
xor
mov
or
dec
push
in
xor
aad
cli
roll
aas
rorb
ficoml
addr16
aaa
shrl
lret
mov
ds
inc
nop
sub
inc
cs
dec
lock
xchg
mov
out
stc
dec
dec
inc
andl
test
jb
pop
enter
xor
imul
sbb
mov
lahf
mul
sub
jge
gs
int
sbb
je
sbb
loope
fiadds
push
xor
aam
jl
sub
pushf
or
jg
in
inc
push
pop
enter
xor
xchg
xor
sbb
cwtl
out
mov
loop
sub
in
inc
icebp
xchg
cwtl
jmp
shr
mov
jne
js
and
pusha
subl
add
xor
je
push
out
insl
cltd
sbb
scas
daa
cli
inc
roll
mov
xchg
adc
mov
mov
les
test
mov
pop
push
xchg
mov
arpl
je
hlt
addr16
pop
into
outsl
lcall
ljmp
xchg
adc
sbb
fwait
std
into
mov
jl
inc
mov
mov
jle
add
adc
mov
outsb
sbb
in
roll
adc
push
addl
jle
add
mov
jmp
mov
cs
in
hlt
push
jae
xor
xlat
jns
lock
test
sub
in
jle
stos
lret
pushf
aam
sub
je
aam
sbb
xchg
sbb
dec
sub
clc
sbb
je
bound
ret
xor
pop
add
jg
ret
jg
dec
subl
hlt
int3
int
pop
push
inc
fisubs
loopne
popf
dec
jnp
lahf
leave
or
jl
xchg
pop
mov
cltd
inc
and
cli
das
mov
test
test
or
pusha
in
stc
jo
xlat
jno
adc
xlat
lods
and
cmc
jge
or
or
pop
mov
mov
stos
filds
fsts
aas
xorb
out
cmp
jle
xchg
add
hlt
mov
jecxz
jae
mov
xchg
xchg
icebp
sar
mov
dec
ds
jmp
jge
test
in
add
rol
adc
js
lret
xor
out
fistpll
test
cmp
add
cmp
xor
dec
or
subl
fwait
sbb
xchg
inc
ficoml
lret
outsl
andb
mov
sbb
pop
push
out
test
pop
sbbl
and
outsb
and
xchg
rcrb
insb
call
std
sti
std
jne
fimuls
lret
pop
mov
jmp
jns
push
lahf
imul
push
or
cmc
imul
jnp
sahf
stc
das
ljmp
jmp
ret
xlat
fistps
cmc
cs
cmp
cs
push
pop
add
gs
daa
in
pop
xchg
fwait
push
pop
fcmovbe
xor
data16
jge
stos
das
adc
sbbl
mov
jns
ljmp
mov
cmp
sbb
push
dec
or
or
movsb
adc
xor
or
es
mov
in
imulb
mov
push
ljmp
call
int
fnsave
or
cmc
mov
cmp
sbb
rcr
out
shr
enter
cltd
jp
cld
je
sub
stos
lcall
adc
dec
pop
lea
sbbl
sbb
lods
xchg
test
fwait
or
adc
and
rclb
popa
movl
xor
or
lahf
pop
mov
or
mov
movsb
push
pusha
ret
ljmp
dec
mov
shl
xor
fistps
jbe,pn
stos
sbb
jbe
xor
cmp
or
adc
mov
push
cmp
cmp
out
inc
dec
movsl
fstl
xor
mov
adc
loopne
dec
and
mov
adc
push
xchg
or
inc
popf
mov
in
mov
in
nop
hlt
int
push
jp
clc
mov
jne
mov
lcall
xor
je
mov
xchg
loop
add
add
dec
shrb
outsb
inc
movsb
or
orb
lods
addr16
sub
jge
pop
sbb
fstpt
push
js
popa
xor
es
out
xchg
mov
in
xchg
adc
jmp
fstpt
jmp
inc
test
ljmp
dec
mov
bndldx
push
into
icebp
and
pushf
clc
xchg
jge
xor
ja
pop
pop
push
xor
outsb
jmp
mov
pop
jg
fcompl
add
std
in
add
out
inc
in
js
cli
pop
push
jp
lea
scas
and
scas
push
push
aaa
or
and
sbb
or
sbb
xchg
mov
sti
ja
adc
int3
jbe
jne
add
push
push
test
jbe
stc
ss
mov
out
aas
dec
mov
dec
jne
jg
cmp
mov
enter
pushf
fisubrl
jo
test
pop
hlt
lock
ljmp
jg
dec
pop
add
sub
lods
and
push
fdivrp
and
imul
idiv
lahf
jp
lods
dec
je
dec
pusha
mov
mov
adc
mov
call
fbld
push
imul
test
or
loopne
rcr
push
add
sbbb
dec
jp
in
mov
push
inc
push
mov
lock
aad
outsl
sub
das
rorl
sub
scas
cmpsl
enter
add
mov
aad
pop
adc
push
push
and
lahf
into
imul
ficoml
push
aad
pop
xor
popf
xchg
cmp
and
sarb
sbb
cmp
and
sti
shll
cmp
outsb
dec
enter
jmp
aad
add
fdivrp
push
jnp
pop
std
iret
cmpsl
cmpsl
into
ret
fnstcw
push
push
cli
sbb
cwtl
push
aaa
xchg
mov
clc
sbbl
jge
pop
dec
lret
fcoms
and
mov
loop
hlt
in
daa
inc
lods
imulb
stos
out
dec
outsb
dec
outsl
sbbl
fildl
call
clc
jmp
push
xchg
cmc
cwtl
movsb
or
cmpsb
sbb
pop
fldcw
imul
inc
aas
add
int
stc
jg
call
mov
movsb
cmp
and
mov
sahf
lods
aam
fstps
adc
aas
outsl
xchg
sbb
jmp
push
mulb
loopne
xor
pop
ror
xchg
dec
aam
leave
mov
sti
sbb
pop
inc
jno
cmp
lea
test
in
adc
addr16
xor
mov
or
cmp
stos
fisubl
sub
adcb
pop
xchg
inc
testb
mov
out
out
or
cs
push
stos
dec
dec
cwtl
push
push
in
ret
sbb
mov
loopne
dec
out
int
add
mov
loopne
das
lods
xor
cmp
mov
mov
gs
daa
fld
ror
mov
fucomp
push
adc
sbb
add
pop
fwait
lods
jns
icebp
stos
mov
or
add
pop
loopne
mov
add
cli
pop
cmp
lock
inc
push
subl
mov
roll
jb
movsb
xor
cmpsl
dec
bound
and
sbb
cmp
in
push
es
repz
outsl
cmpb
dec
push
stos
pusha
es
stc
push
outsb
jmp
cltd
jecxz
aad
sarl
cli
inc
mov
scas
jge
adc
pop
int3
and
dec
iret
fnstcw
clc
loope
bound
mov
adc
ja
arpl
out
orb
push
lea
dec
call
call
mov
mov
lock
fimull
xchg
shl
xchg
sub
cmp
stos
jae
dec
shlb
ss
test
test
out
sub
clc
sbb
inc
pop
push
out
sbb
xchg
pushf
dec
ja
push
xor
cmp
xor
test
pop
xchg
cmc
lret
or
or
xchg
dec
or
cmp
adc
push
mov
vpmadcsswd
jbe
push
jl
mov
rorl
enter
pop
in
outsl
insl
xchg
push
xor
jo
mov
fs
pop
pop
pushf
pop
roll
frstor
jmp
inc
lcall
or
movsl
sub
fcoml
int3
loop
loop
cmpsb
enter
cmc
ret
shr
or
mov
out
xchg
loopne
jae
das
clc
rclb
fadds
gs
mov
scas
out
inc
shrb
pop
or
loop
xchg
mov
fstpl
mov
adc
fwait
je
mov
jbe
push
dec
rcrl
mov
push
hlt
push
fld1
insb
repnz
push
rcrl
fs
mov
out
sbb
out
ror
mov
mov
test
pop
popl
mov
mov
fisttps
or
xchg
push
sub
pop
mov
xor
xor
mov
iret
push
push
pop
scas
mov
cld
push
xchg
xor
loope
adc
je
adc
movsl
test
jo
sub
inc
arpl
mov
sub
adc
ret
popa
imul
scas
push
cwtl
and
scas
je
aaa
push
sbb
imul
aas
pusha
clc
mov
int
cwtl
fwait
add
mov
pop
xchg
mov
mov
adc
stos
std
pop
bound
pop
data16
gs
lcall
or
pushf
mov
mov
push
push
insb
cld
jbe
add
push
ds
rcrl
push
adc
cltd
aad
test
fcomps
sbb
lock
int3
daa
mov
js
loopew
cmp
and
je
lods
movb
mov
inc
lods
inc
jno
sarl
dec
les
mov
cmp
lds
out
jae
scas
xchg
add
push
cmp
loopne
lock
sbb
push
and
xchg
arpl
push
mov
test
cmp
xor
or
push
imull
loop
adcl
ficomps
dec
cs
test
dec
or
pushf
push
clc
mov
sbb
jbe
xor
flds
jcxz
inc
fwait
sbb
idiv
pop
leave
insb
popa
adc
add
and
cmp
sahf
mov
sti
nop
nop
adc
and
iret
fldcw
xchg
push
xor
add
insl
popf
add
pop
pop
and
ret
mov
cmp
rorl
dec
out
test
imul
pop
in
int3
loop
mov
xchg
das
stos
ret
inc
test
mov
bound
fimull
jbe
sbb
mov
std
or
mov
and
and
pop
fnstsw
lea
jmp
push
and
lret
aam
stos
lcall
sahf
inc
insb
dec
sub
movsl
stc
mov
xchg
enter
cmp
je
rcrb
and
add
xor
movsl
test
cmp
mov
sbb
mov
sbb
lret
mov
and
imul
ja
enter
enter
ret
daa
outsl
push
jmp
stc
or
adc
inc
lock
cmp
mov
dec
push
fldln2
fisttpll
or
pop
cli
cmp
lods
ljmp
fwait
cld
pop
pop
pop
into
sti
adc
orl
dec
fildll
xchg
sub
mov
and
cmp
imul
lret
in
adc
gs
mov
shll
sahf
dec
shrl
pushf
xchg
mov
push
push
aad
add
push
pop
xor
mov
mov
test
fimull
imul
imul
pop
nop
mov
insl
ds
hlt
cmp
xchg
xlat
enter
lret
mov
dec
movsl
push
pop
inc
mov
ffreep
clc
add
js
jae
test
lret
xor
pop
sub
or
sti
lcall
hlt
push
stc
jle
jbe
push
or
sub
aad
mov
or
inc
test
xlat
clc
jne
adc
imul
test
in
aaa
mov
jne
dec
inc
int3
push
pop
stc
add
and
movntps
into
xor
cmp
add
xorb
mov
daa
stos
jecxz
sbb
sub
mov
arpl
pop
lods
stos
xchg
jecxz
sti
fists
dec
adc
cmc
int
pop
jl
test
sub
add
sub
xlat
xor
and
mov
mov
ss
or
lahf
adc
in
cmp
dec
push
push
lods
push
cli
cmp
dec
add
push
xchg
imul
xchg
mov
fwait
push
dec
xchg
sbb
push
mov
jb
jns
out
pop
push
enter
loopne
dec
loopne
stos
loop
fs
mov
movsl
adc
sbb
aaa
call
cmpsl
lock
mov
out
in
mov
ljmp
shl
mov
cmp
icebp
adc
and
call
das
xchg
popf
daa
mov
dec
inc
xchg
ficoml
xchg
sbb
dec
int
ret
rcl
sahf
jl
inc
add
shlb
ret
shl
lret
call
mov
mov
jmp
cmc
arpl
fsts
int3
test
fsubrs
loop
pop
xchg
aaa
outsb
add
mov
sbb
jge
fisubrl
fstl
push
and
in
aam
jp
and
xchg
push
push
mov
enter
ss
inc
sbb
andb
popa
lcall
mov
pop
movsb
pop
cmp
jmp
mov
lods
cmp
jmp
movsb
jne
push
mov
xchg
inc
lcall
repz
mov
and
mov
faddp
out
cmpsb
popa
les
mov
cli
push
das
dec
mov
push
ja
cs
addr16
add
and
fldt
dec
mov
sub
mov
into
and
jnp
mov
ljmp
push
add
xchg
fadd
das
in
add
xchg
cmpsl
sub
cmp
jmp
clc
inc
es
in
add
fldl
sub
gs
jne
notb
pop
mov
daa
and
jns
adc
int3
out
mov
imul
or
xor
scas
in
lods
jno
mov
push
cmp
and
mov
std
es
das
out
jne
popa
xor
push
and
cmp
fnstsw
lock
mov
test
repz
jecxz
jle
pusha
mov
xchg
in
pop
inc
mov
mov
inc
sti
shlb
xlat
push
inc
shrl
mov
leave
fidivrs
mov
ret
scas
mov
add
xchg
cmpsl
ljmp
cs
and
mov
lods
addb
inc
ljmp
mov
stos
add
outsb
leave
pop
push
lock
shlb
add
lret
lret
mov
dec
ja
pusha
mov
shr
and
out
ja
mov
test
std
xor
sbb
scas
popf
imulb
test
lock
adc
push
fmull
addr16
lock
mov
dec
mov
mov
pop
push
xchg
lahf
fsubl
insb
jbe
dec
xor
sarb
adc
cmpsb
jo
jae
inc
or
sub
xchg
cmp
and
mov
lds
dec
inc
sbb
lea
ljmp
cs
dec
hlt
jmp
and
mov
dec
inc
xor
out
repz
clc
lods
add
aas
add
inc
das
dec
or
std
mov
push
add
push
test
filds
daa
jl
mov
sbb
push
gs
in
cltd
cmp
mov
cmp
enter
fs
test
std
sub
fs
fidivs
pop
shrb
mov
mov
lods
popf
insb
push
xor
std
hlt
xorl
push
cmp
push
xor
sbb
cmp
and
inc
mov
subl
jo
cmp
jns
jg
lcall
mov
sub
gs
and
mov
testb
or
mov
pop
icebp
mov
xchg
mov
xchg
add
add
lret
mov
xchg
or
add
and
pop
cmp
or
int
sub
jns
mov
fiaddl
mov
stos
sub
test
pop
mov
ds
stos
xor
sbbl
jns,pt
xor
pop
hlt
ss
ja
scas
xlat
repnz
add
cmp
mov
mov
push
lcall
cltd
mulb
subl
and
add
xchg
lea
or
loop
iret
daa
jns
mov
lcall
and
iret
loopne
push
ret
and
bound
sbb
adcl
pop
sti
insb
and
mov
mov
jp
lds
cmpsl
dec
sbb
aam
das
decb
test
push
or
mov
addr16
xchg
push
mov
mov
dec
mov
das
flds
jo
mov
fs
daa
arpl
mulb
mov
jmp
jecxz
sub
jecxz
enter
out
fdivr
je
and
push
test
lock
cmp
int3
add
xchg
rcrl
xchg
xchg
lock
rorb
xchg
fidivs
dec
lcall
nop/reserved
jge
sbb
inc
inc
fcomip
in
roll
lock
dec
inc
out
addr16
fistpll
rcll
inc
mov
xor
loopne
lds
cmp
movsl
outsl
icebp
scas
jmp
jge
mov
push
dec
sub
or
pop
push
rol
in
adc
jg
scas
mov
jl
pop
add
sub
sub
jne
mov
leavew
pushf
jmp
push
in
dec
cld
mov
add
cmp
sub
int
push
sahf
or
pop
and
xchg
inc
jmp
into
test
scas
adc
adc
xor
popa
mov
sub
cmp
mov
inc
call
pop
jbe
shlb
push
iret
cmp
xor
add
loopne
incb
ss
and
imul
mov
pop
cwtl
mov
clc
movsl
add
xchg
mov
xor
pop
and
stc
inc
mov
push
ret
popa
mov
fnstenv
add
in
stc
add
loop
or
in
pop
andb
in
mov
stos
imul
movsl
leave
cmpsb
lcall
filds
pop
sub
xchg
outsl
sub
mov
mov
xchg
add
xchg
add
jg
cld
repz
aas
ret
pop
test
mov
xchg
imul
stos
scas
or
jb
sbb
mov
inc
xchg
mov
outsb
jge
std
xchg
mov
mov
lds
mov
std
fst
pop
xchg
daa
rcrb
rorl
jmp
ret
mov
jg
testb
xor
mov
or
mov
xchg
jb
pop
inc
frstor
pop
xor
cld
fsubp
enter
insb
mov
mov
int
xchg
dec
inc
mov
adc
imul
jmp
stos
pop
sub
xchg
out
cmc
std
fcompl
scas
iret
add
test
std
xchg
dec
insb
jge
hlt
mov
sbb
es
enter
mov
xor
push
out
fdivrp
dec
pop
push
cmp
rcll
js
or
add
push
mov
xor
mov
mov
xor
mov
or
inc
lock
out
push
in
xor
pop
cmp
dec
dec
sbb
iret
add
adc
mov
adc
outsl
jmp
jmp
test
add
pop
aas
xor
pop
pop
mov
enter
xchg
push
push
outsb
repnz
outsl
or
data16
addr16
shrl
rcrl
or
xor
xchg
into
cltd
test
out
jnp
adc
dec
lds
mov
jmp
or
in
shl
and
and
ljmp
loope
xchg
mov
insl
mov
xor
inc
sub
repnz
cltd
push
sub
test
xor
and
xor
loopne
gs
sbb
mov
add
cld
outsl
mov
add
inc
punpcklbw
mov
call
mov
push
adc
aad
imul
xchg
inc
dec
lock
or
sbb
sbb
cld
push
popf
and
je
inc
adc
xchg
lcall
dec
rcr
hlt
xor
inc
fidivrl
mov
jb
push
xor
je
mov
xor
and
or
insb
mulb
cmp
jecxz
adc
imul
dec
xor
rol
jecxz
adc
call
jb
repnz
mov
jle
jmp
ja
or
mov
das
scas
mov
shll
fldcw
lds
cld
jne
jge
inc
dec
cli
mov
insb
enter
pop
sbb
mov
cwtl
stos
or
xor
jp
ret
sti
dec
and
mov
inc
lods
decl
lahf
stos
idiv
shll
mov
sar
jns
cmc
inc
mov
inc
add
fsubrl
cmc
test
sub
dec
and
add
mov
cmp
rorb
push
adc
repz
aaa
lock
cwtl
pop
dec
enter
fsubs
lret
mov
sbb
mov
scas
pop
lcall
cmpb
cmp
sub
repnz
or
cmpsl
lds
inc
push
pusha
pop
aaa
mov
cmpsb
xchg
int3
fs
or
adc
aaa
xor
lods
test
inc
adc
std
enter
icebp
xor
mov
andl
ret
xor
jle
in
xor
jb
jb
push
inc
imul
test
inc
ss
adc
fcoml
in
aaa
sbb
dec
js
mov
or
cmp
mov
andb
sub
out
mov
clc
jecxz
dec
jl
sub
jae
jmp
repz
scas
cmpsl
or
xchg
sub
cmp
and
outsl
cmpsb
in
punpckhbw
xor
icebp
push
xchg
fisubrs
pop
mov
push
pop
cld
jnp
mov
cmpsl
and
int
test
cmp
out
bound
test
push
int3
mov
rcll
orl
outsb
mov
xchg
pop
test
mov
ja
fisttps
shll
roll
mov
dec
cld
movaps
jno
ds
adc
adc
fsubr
aaa
mov
mov
mov
addr16
xchg
inc
dec
aaa
scas
cmpsb
and
xor
int
repz
popa
pop
imul
or
aaa
mov
jbe
or
xchg
inc
dec
imul
pop
in
clc
jle
sub
lret
push
popa
pop
adc
or
mov
sarb
daa
cmc
cmp
fs
test
cmp
push
cmc
loope
lcall
ja
sbb
loop
iret
mov
incl
inc
push
pop
stc
into
dec
inc
cmp
cmp
xchg
xor
cmp
stos
stos
mov
xlat
iret
je
in
sub
loopne
jge
mov
mov
mov
xchg
cmp
push
dec
dec
cmpb
shlb
nop
ljmp
sub
mov
cmp
jecxz
popa
sbb
in
sbb
push
out
lret
loop
in
lods
pop
lahf
pop
into
sbb
or
popa
xchg
pop
call
das
jp
mov
pop
ja
pop
fidivs
popf
test
mov
and
dec
mov
rcrl
mov
mov
mov
mov
inc
lods
jg
cmp
mov
cli
scas
mov
stos
jae,pn
and
mov
leave
or
int3
add
sar
ja
cmc
imul
outsl
ljmp
xor
imul
mov
inc
or
jmp
cmpsl
clc
in
cmp
ret
je
sbb
mov
inc
ficoms
imul
fxch
ljmp
loopne
xchg
shr
sti
lods
push
cmp
or
loop
inc
loopne
jmp
and
or
ljmp
shrb
ja
aam
daa
fisubrs
push
into
mov
in
in
xchg
sbb
push
and
pop
out
mov
popf
jge
ffreep
and
cmpsl
or
insb
jno
das
lahf
xor
dec
sub
ds
push
loope
mov
out
xor
shll
jo
lds
pop
fmul
sar
mov
int
inc
mov
dec
xor
xchg
xchg
fdivs
or
adc
adc
inc
or
and
add
push
pop
add
cmp
jno
je
adc
add
xor
daa
jp
shr
out
fcmovne
mov
pcmpeqd
jp
xchg
fidivrs
mov
push
jmp
daa
pop
movsl
sub
xchg
jnp
mov
cmp
xchg
sub
lret
sbb
sbb
sbb
sbb
and
repz
nop
lock
adc
lea
cmp
inc
adc
xor
repz
idivb
sub
cmp
sub
jne
jl
add
xchg
push
movsbl
or
lea
lret
pop
sbb
arpl
lahf
add
mov
mov
mov
das
mov
xchg
int3
sub
xchg
sbb
push
insb
pop
push
int3
inc
mov
jae
and
jb
es
icebp
shll
insl
adc
or
hlt
cmpsb
rcrl
jecxz
repz
test
cli
cwtl
mov
sarl
rcrl
pop
leave
fiadds
testl
lea
inc
mov
clc
js
xor
xchg
popa
mov
dec
in
dec
aaa
testl
jle
hlt
pusha
cltd
xlat
mov
movsl
cld
push
outsl
sub
jnp
sub
add
in
popa
jbe
jbe
dec
inc
pushf
adc
test
imul
dec
pop
imul
cmp
sarl
cmpsb
cli
sbb
mov
lods
std
mov
clc
nop
add
mov
adc
sbb
outsb
inc
lahf
jp
adc
imul
pop
aam
call
fldt
fstpl
xchg
adc
cmpsl
jmp
dec
push
jno
popa
js
rcl
or
jns
jno
cltd
sub
fsubrs
inc
daa
pushf
push
lds
adc
imul
jae
rorb
adc
arpl
mul
testl
pop
adc
in
mov
dec
popf
rclb
jb
lret
rorl
or
sub
fsubrl
repnz
add
pop
pop
ja
and
dec
cs
add
mov
jns
cmp
push
pop
or
cmp
ss
jge
idivb
in
pusha
xchg
loope
adc
leave
shlb
fwait
clc
xchg
pop
cmc
je
pop
push
mov
dec
sub
push
outsb
movsl
dec
lods
mov
push
repnz
pop
sbb
jae
xor
lods
mov
cmp
mov
rdpmc
mov
mov
xchg
adc
out
cmp
xchg
inc
adc
dec
call
dec
mov
lds
cmp
sub
dec
js
arpl
sbb
cmp
or
jae
aas
shrl
jbe
subl
in
scas
in
lret
mov
xor
loopne
dec
es
or
stos
sarb
sbb
gs
xlat
mov
pop
dec
sahf
jae
pushf
add
out
leave
xor
xchg
test
clc
rolb
inc
jb
int
push
call
fwait
push
xchg
jl
push
or
jae
or
pop
in
test
sub
xchg
xchg
test
mov
add
sahf
stc
lods
pushf
xchg
subl
movsb
inc
pop
jbe
pusha
rorl
pop
cmp
inc
lods
xchg
pusha
inc
lret
out
inc
mov
daa
test
test
pusha
aad
insb
mov
xor
xor
xor
fidivrl
cmp
incl
stos
outsl
addr16
xor
arpl
inc
or
or
rcrl
inc
or
adc
ja
out
and
shll
inc
sbb
scas
mov
sti
xor
mov
cwtl
test
icebp
sysexit
loopne
add
xor
adc
pushf
push
pop
test
jne
sbb
pop
mov
adc
sub
fstpt
loop
sub
pop
cmp
fs
sub
popf
xchg
push
add
notl
call
add
pop
pop
dec
fcomi
call
lcall
negl
outsb
jle
pop
mov
lock
into
mov
stc
rclb
adc
out
bound
jmp
data16
lret
mov
sbb
mov
sbb
or
cmpsb
lret
lea
bnd
sub
aaa
imul
ljmp
call
cltd
into
jg
mov
add
jb
enter
mov
lret
add
mov
lods
stos
movsb
testb
fistpl
add
push
lahf
push
lock
sbb
mov
cltd
xor
lcall
movsb
push
ljmp
das
in
je
mov
xchg
test
int3
xlat
sub
sub
add
adc
loopne
inc
out
mov
sbbb
sbb
cltd
adc
jb
xchg
xor
jns
sti
outsl
aad
dec
cld
stos
adc
xlat
sarl
stc
xchg
mov
rclb
movsb
lret
or
mov
mov
push
mov
gs
fnsave
stc
and
cwtl
les
add
sbb
lock
jae
andl
call
rcll
test
push
sub
or
add
scas
or
pop
jne
popa
bound
jecxz
scas
fstpl
loop
imul
pop
roll
imul
and
and
mov
cmp
mov
xor
lods
ret
mov
lods
mov
lret
int3
adc
cmpsb
jno
cmp
sbb
fsubs
xlat
pop
xchg
xchg
push
test
sub
inc
in
push
push
jge
idivb
stos
mov
fs
negb
in
xchg
scas
incb
call
jae
push
and
inc
shll
or
pop
lock
scas
test
adc
hlt
dec
or
decb
popa
bound
fistpll
movsb
sahf
cmp
repnz
jb
mov
in
xchg
aas
jbe
pop
arpl
rolb
iret
dec
mov
and
mov
es
and
xor
mov
xchg
jl
mov
dec
adc
or
dec
int
std
lds
icebp
mov
pop
jle
lcall
in
imul
rcl
mov
mull
push
aad
aad
enter
imul
jne
pop
rol
cmp
clc
lds
in
fs
mov
push
test
bound
outsl
das
out
dec
sbb
mov
lock
pop
adc
sbb
es
js
and
icebp
aas
aad
sub
pop
mov
in
fnsave
fwait
ljmp
jnp
in
cmp
int3
jb
addr16
or
stos
lock
loopne
addr16
adc
jne
xor
cltd
ljmp
mov
jle
lods
mov
inc
fimuls
hlt
mov
xchg
movsl
add
fcoms
repz
sub
xor
jns
push
pop
and
xchg
mov
cmp
cmpsb
insl
stc
lret
divb
push
fisttpll
addr16
fnsave
repz
mov
pop
push
cld
sbb
mov
loop
xchg
clc
push
stc
addr16
sbb
clc
clc
aam
sbb
lret
mov
test
add
lock
push
test
mov
nop
test
dec
stc
cld
mov
out
xchg
dec
xchg
mov
cmp
mov
enter
xchg
subb
push
jo
sub
jne
outsl
ss
faddp
ror
sbb
or
outsl
mov
aaa
loopne
pusha
inc
inc
pusha
dec
cmp
stc
in
adc
mov
mov
sub
fldenv
jb
sub
outsl
sbb
or
scas
xchg
mov
jne
les
pop
xchg
es
leave
fsubs
xor
mov
stos
ficompl
adc
push
pop
lret
fs
mov
jbe
mov
push
ljmp
sbb
mov
inc
sub
imul
push
inc
movsb
pop
sbb
pop
xor
pop
pop
pop
sti
or
lea
rorb
mov
je
movsb
or
push
and
xchg
xchg
dec
out
inc
xor
fsubrs
int
aas
xor
fwait
cmpsl
out
xchg
aaa
vpcmpgtd
std
shrl
test
xor
mov
mov
popf
dec
stc
mov
jle
sbb
sbb
insb
ror
das
les
nop
and
push
push
jmp
mov
call
mov
dec
mov
pop
mov
ret
test
mov
inc
sbb
push
sti
push
sub
and
inc
test
dec
mov
sahf
fcomp
lods
sub
outsl
testl
repz
movsb
inc
jle
and
cmpsb
mov
daa
adc
in
shll
jae
push
ror
jge
ds
dec
enter
inc
pop
mov
pop
push
jmp
test
jnp
repz
and
das
dec
sbb
inc
and
fcoml
shlb
out
xchg
popf
arpl
roll
out
push
scas
jmp
adc
cli
in
push
mov
jmp
out
pop
xchg
cwtl
mov
fcoml
push
cli
jno
mov
ja
int3
jl
xor
push
dec
mov
inc
sbb
mov
jecxz
inc
xchg
aam
and
addr16
inc
pop
mul
add
ret
jno
pop
std
sub
sbb
orb
push
sbb
cmp
addl
cmp
push
xor
xchg
imul
xlat
mov
pop
sbbb
mov
lock
mov
fs
in
mov
sbb
or
pusha
add
ds
add
insb
jg
rcll
int3
sbb
mov
aaa
jmp
sub
je
mov
pop
or
jle
push
lahf
add
inc
push
cmp
mov
inc
ficoms
dec
pop
sbb
pop
xlat
fdiv
jmp
xor
aas
add
cmpsl
testb
scas
sbb
xor
jb
mov
out
xchg
inc
cwtl
shrl
hlt
mov
js
sbb
xor
test
add
inc
push
testb
pop
out
mov
xor
pop
mov
repz
pop
lock
pop
clc
clc
loopne
push
inc
andb
gs
xor
fstpl
cmpsb
sbb
shlb
cwtl
xchg
sub
notl
xchg
fisubrl
sbb
imul
imull
xchg
mov
push
dec
outsb
mov
adc
and
imul
or
and
fdivr
or
stc
sub
cs
ja
dec
xchg
inc
roll
mov
repnz
sbb
das
dec
sub
out
incb
jae
cmc
sti
and
outsl
stos
jmp
aam
popw
lahf
inc
ds
ja
jne
mov
push
jecxz
cmp
dec
clc
int
test
mov
add
sub
xchg
mov
imul
jns
cmp
cs
cli
cld
push
mov
std
pusha
cwtl
lock
jmp
pop
addr16
lock
add
pop
ror
sbb
pop
out
xor
cltd
ret
jp
push
jg
mov
insb
fs
adc
jge
ds
adc
out
sbb
pop
push
pop
rol
std
mov
shlb
xor
cmp
ret
inc
movsb
add
sbb
lahf
inc
jne
addr16
fimuls
jle
push
or
xchg
inc
ss
nop
jp
aaa
mov
imul
and
cs
push
loop
xchg
mov
filds
xlat
rcrl
test
xchg
out
mov
inc
faddl
outsb
and
lods
mov
jp
popa
push
adc
shrb
call
xchg
xor
add
lods
xor
stos
pop
cld
add
insb
or
mov
jo
inc
mov
push
lret
std
fdiv
dec
dec
add
sti
push
dec
push
icebp
daa
add
sbb
ljmp
inc
and
in
mov
in
jno
jecxz
push
roll
jecxz
dec
in
xor
imul
lock
mov
adc
adc
daa
test
inc
xchg
scas
mov
bound
xor
jns
mov
stc
dec
outsl
lock
xchg
popa
xchg
jno
outsl
add
push
insb
adcb
adc
out
mov
jne
push
and
ret
pop
stos
outsb
ja
sbb
cmp
cli
mov
imul
cmp
xchg
cli
pop
stc
mov
or
arpl
cwtl
divb
stos
cmc
mov
xlat
cmp
daa
or
push
out
add
mov
ror
test
xor
daa
pop
popf
pop
xchg
lret
mov
add
mov
daa
mov
popa
dec
push
sub
jb
out
fs
jl
lret
sbb
cmp
repnz
mov
stos
push
jb
add
addl
jae
aaa
cmp
xchg
or
add
adc
add
addb
mov
mov
push
ja
int3
cmp
mov
pop
addr16
xchg
sbbb
mov
xor
fmulp
add
adc
ret
jecxz
je
lret
lret
addr16
mov
sbb
jne
mov
out
sbb
xchg
adc
int
push
lcall
loopne
sbb
or
push
mov
dec
imul
idiv
mov
mov
into
test
mov
sbb
mov
outsb
push
dec
push
mov
movsl
jb
mov
mov
scas
push
fldcw
xlat
cmpsb
nop
insb
push
dec
jbe
adc
cltd
enter
sbb
inc
pop
test
mov
lods
in
xlat
sarl
cmpsb
pop
mov
sub
jge
roll
in
dec
jb
and
movsl
mov
inc
pop
arpl
sbb
test
xchg
xchg
jp
push
adc
mov
xchg
and
shl
sub
sahf
dec
ss
jnp
or
mov
mov
lahf
add
shlb
sub
test
dec
xor
sub
iret
push
lods
into
pop
sbb
pop
or
mov
push
shll
rcr
xor
test
cmpsb
popf
imul
andb
dec
push
mov
cmc
std
inc
xchg
das
nop
mov
loop
inc
adc
arpl
pop
xor
in
jno
adc
mov
rclb
in
add
cltd
sbb
aaa
cmp
movsb
sarb
aad
in
jno
outsl
popa
and
jle
jg
or
scas
testl
leave
jecxz
iret
cltd
sbb
nop
shll
rclb
pop
and
add
shll
test
in
xor
out
adc
cmpsl
aaa
es
lock
pop
adc
push
xor
push
cmp
rcrb
push
xchg
cmpl
jnp
test
sbb
ja
icebp
pop
mov
nop
add
sbb
cmc
andl
out
cltd
mov
int3
add
sub
mov
pop
push
cmpsb
xchg
xchg
dec
dec
stc
imul
enter
fnsave
add
jno
mov
fcompl
mov
hlt
insl
dec
push
dec
out
insb
stos
bound
push
imul
or
cmp
lock
fcmovb
mov
adc
std
xlat
fisubs
inc
aaa
pushf
scas
pop
les
popf
imul
pop
dec
inc
adc
sbb
pop
inc
xor
mov
mov
scas
mov
xchg
lods
xchg
xchg
mov
sub
iret
imul
call
subb
arpl
adc
xchg
jnp
daa
or
incl
imul
repz
xor
pop
xchg
pop
movsl
xchg
add
add
xor
aas
cmp
int
pusha
in
pushf
or
je
std
add
jns
outsb
xchg
into
sbb
xor
enter
stos
inc
xchg
cmpsl
push
cmpsb
movsl
je
xchg
jmp
aad
adc
dec
xchg
xchg
xor
mov
fstp
jnp
jle
ds
lods
xchg
cmp
xor
pop
loop
shlb
xor
jmp
xchg
or
mov
mov
and
dec
or
iret
ss
in
insl
push
push
arpl
push
add
mov
jge
mov
mov
fdivl
test
pop
pusha
inc
out
adc
xchg
mov
jle
pop
inc
sbbb
jg,pn
in
imul
incb
push
std
out
push
leave
ret
dec
adcb
mov
mov
outsl
js
jbe
sti
xor
in
dec
xchg
cmp
in
dec
pop
fstps
mov
js
cltd
or
movsl
mov
jl
cs
mov
mov
lret
arpl
adc
mov
inc
mov
mov
mov
ja
xchg
or
insb
ret
cmc
lret
mov
and
daa
add
cmp
xor
jb
lahf
push
pop
shll
push
push
loope
sub
sbbl
fcoml
pop
pcmpgtb
mov
dec
jb
xor
sub
jne
xchg
mov
aam
jne
sub
gs
sbbl
or
mov
dec
and
dec
test
mov
adcl
adc
jae
jns
mov
loope
out
jns
dec
xlat
dec
or
jne
sbb
push
pusha
lods
cmpsl
sbb
pop
fimuls
adc
adc
push
cmp
cmpsb
js
movsl
lret
sahf
pop
adc
fwait
lea
sahf
movsl
sbb
mov
push
mov
repz
scas
rcrb
adc
mov
push
xchg
sub
in
sub
sbb
mov
loope
loope
test
insl
pop
cmp
icebp
jg
dec
jns
mov
lea
jo
xchg
pop
aam
pop
sti
push
mov
pop
mov
push
mov
stc
or
xor
insb
sub
fwait
add
dec
inc
push
cmpl
mov
xlat
mov
fisttps
pop
sti
lods
cmp
mov
xor
daa
sbb
inc
mov
pop
adc
inc
or
dec
and
arpl
hlt
pop
dec
xorl
es
sahf
into
aam
or
lea
adc
pop
cmpsl
mov
jae
lret
pop
adc
inc
mov
cmc
sbb
add
pusha
xchg
xor
fcompl
xor
paddsw
rorb
adc
arpl
out
or
add
push
xchg
or
xchg
call
lods
cmpsl
scas
mov
outsb
sub
adc
into
push
leave
pusha
mov
push
push
sbb
mov
mov
arpl
cmp
out
out
or
aas
mov
xor
push
mov
xor
lods
decl
test
push
and
cmp
push
stos
and
sub
xchg
aad
mov
and
divb
mov
xorb
xchg
jae
push
lods
and
jae
xchg
cmp
pop
repnz
repz
leave
xchg
loop
lods
mov
adc
push
add
les
mov
mov
dec
and
es
repz
out
iret
jecxz
xor
push
test
pop
and
aaa
cwtl
out
and
stos
fmul
cwtl
popa
lds
addb
cmpsl
fistl
dec
aaa
ret
and
jo
xchg
pop
clc
mov
movsb
xchg
ss
dec
sub
fnsave
pshufw
ret
fidivrs
push
call
sbb
cmpsb
xchg
xchg
loope
cmp
sarb
jne
rolb
pop
mov
pop
out
sub
loop
les
lahf
movsl
ret
mov
test
rclb
insb
aad
and
mov
and
ret
cmp
sbb
dec
xchg
ffreep
inc
ret
int3
sbb
xchg
incb
mov
jnp
aam
push
sahf
push
dec
pop
stos
addr16
pop
and
repz
loopne
test
insl
xchg
insb
mov
push
mov
enter
push
jg
adc
pop
xor
fnstsw
es
inc
inc
cs
xchg
lcall
outsl
dec
call
dec
inc
in
ds
add
inc
gs
sbb
call
jae
adc
outsl
subb
movsb
andb
mov
rorl
jnp
or
enter
or
and
xchg
pop
xchg
mov
scas
jns
xchg
aaa
shll
mov
cmp
mov
inc
inc
out
and
mov
pop
fiaddl
pop
int
rorl
divl
rorb
fsubs
pusha
fwait
jnp
fwait
jae
mov
fildl
jnp
fisubrs
cmp
test
loop
dec
xrelease
xchg
mov
jbe
push
push
xchg
mov
dec
loopne
push
loopne
rclb
loope
daa
scas
shl
fisubs
test
push
imul
aad
mov
xchg
inc
add
add
push
pop
pop
xlat
and
mov
aam
fwait
jle
ljmp
xchg
sbbl
pop
fistl
nop
and
jno
mov
dec
cmp
sub
js
lods
sahf
mov
sbb
das
pop
mov
leave
and
mov
cld
jle
dec
fwait
aam
push
xor
stc
icebp
dec
cs
push
add
mov
sbb
cmp
scas
dec
inc
stos
push
add
pusha
sbb
into
xchg
add
mov
push
mov
mov
sub
dec
in
add
pushf
mov
movsl
dec
mov
pop
aaa
or
das
jg
push
sub
or
inc
and
jecxz
jns
mov
add
xor
jno
int3
fisttps
lret
sub
repnz
jmp
cmp
mov
adc
ss
dec
dec
push
lods
push
inc
xor
sbb
mov
push
cmp
add
scas
xchg
ret
out
cmc
push
fstl
ja
cld
pop
xor
stos
dec
sbb
adc
jo
faddl
hlt
ds
xor
repz
addl
lret
mov
imul
inc
sti
sbb
push
add
sub
adc
dec
out
or
jae
xor
jge
mov
jl
pop
rol
fildll
faddl
in
push
cmc
cmpb
ret
pop
xchg
std
dec
das
xchg
sub
dec
mov
cmp
lahf
lret
leave
mov
insl
mov
add
fcoms
pop
pop
addl
popf
mov
es
xchg
mov
push
out
xchg
inc
cmp
arpl
ret
push
outsl
les
cli
and
mov
xchg
clc
jae
or
fisttps
call
inc
push
cmp
xchg
jo
xchg
or
fstl
cwtl
ljmp
sub
lock
das
mov
test
lods
sbb
fdivl
push
std
aad
sbbb
sahf
je
xchg
inc
xchg
fists
mov
insb
pop
jecxz
andl
int
xchg
ds
bswap
push
push
jg
adcl
push
addr16
fwait
sbb
out
pop
inc
sahf
push
inc
icebp
sarl
and
xor
data16
rorb
lret
dec
jns
popl
mov
ja
mov
fistpl
pop
shll
dec
dec
mov
push
fs
xor
jo
cmp
push
or
or
sbb
mov
xchg
mov
mov
push
adc
js
ret
jp
adc
or
push
divb
adc
cmp
repz
cmp
movsb
std
push
sub
scas
adc
sbb
stos
mov
add
gs
clc
mov
pop
out
mov
addr16
int
cmp
addb
xor
cmp
mov
or
test
pop
mov
loop
clc
std
xor
insb
mov
push
inc
movsl
out
data16
sbb
aam
fsubl
movsl
mov
pushf
das
movsb
out
sbb
inc
cmpsb
push
push
adc
cmp
xchg
adc
lock
mov
sub
iret
js
mov
fs
sbb
sbb
stc
sub
lret
fdiv
jb
xlat
into
loope
fcmovne
xchg
lret
nop
addb
jo
outsl
fisttpll
lock
mov
in
inc
cmc
mov
push
movsl
arpl
push
and
xchg
pop
orl
sbb
fmull
scas
mov
inc
fimuls
mov
test
out
lea
add
std
pop
imul
outsb
pop
sarb
push
dec
sbb
int
pusha
xchg
mov
jo
xor
rcl
sbb
cmp
mov
xor
inc
mov
leave
cld
pop
sbb
pop
out
mov
mov
add
add
push
insb
nop
out
cwtl
hlt
and
out
fsave
or
movsb
insl
ss
cmp
add
push
pop
push
push
les
xchg
movsb
sub
ret
out
sub
divb
mov
xchg
mov
push
add
dec
mov
cli
mov
and
push
js
push
or
les
repnz
jne
arpl
hlt
movsb
sbb
into
rorl
pop
dec
aaa
adc
xor
test
addr16
or
xorb
mov
pop
push
fcoml
add
pop
push
sbb
pop
out
les
imul
xor
fcom
je
lcall
xor
cld
sti
push
and
or
push
mov
push
rclb
scas
mov
in
xchg
mov
sbb
mov
fadds
sbb
xchg
fisubs
inc
cld
or
pop
add
xchg
xor
insb
sarb
rcll
jo
aaa
xor
mov
sti
int3
add
in
loope
cs
out
aad
call
ret
cltd
xchg
in
je
pushf
and
ret
mov
inc
cmp
inc
je
add
das
mov
lods
gs
imul
xchg
or
jnp
loopne
ds
xorb
mov
xchg
ds
xchg
inc
outsb
pop
jnp
xor
fistl
inc
sahf
jne
outsl
enter
inc
sti
insl
or
bnd
jmp
mov
mov
dec
dec
or
mov
ljmp
stos
aam
sahf
inc
adc
mov
jp
jp
ja
lcall
sbb
or
icebp
rorb
loop
or
std
mov
addl
lahf
pop
ss
or
pushf
pop
xchg
pop
inc
stc
dec
nop
xor
xor
sub
leave
ret
call
leave
fcoms
cmpsb
or
sub
inc
fdivl
push
jmp
inc
cwtl
push
and
gs
cld
mov
repnz
loopne
lcall
push
adc
push
enter
mov
repz
movsl
mov
sar
inc
repnz
movsl
xchg
or
mov
mov
mov
lcall
mov
les
sbb
cs
imul
xor
mov
and
jmp
inc
sbb
js
imul
ds
xchg
mov
imul
ljmp
mov
daa
xchg
daa
mov
xor
out
xlat
movl
lcall
push
jnp
fsubrl
pushf
push
insb
clc
add
inc
adc
aas
into
shlb
push
repnz
push
jp
out
or
jg
movl
shrl
and
mov
and
scas
adc
fstpt
movsb
or
pop
cld
leave
and
ret
lcall
incl
cmpsl
insb
mul
pop
mov
push
test
sbb
repnz
mov
clc
adc
or
cltd
or
orl
xor
inc
pusha
sub
outsl
cld
addr16
xor
add
shrl
mov
fnsave
push
adc
sbb
jnp
xor
jecxz
xor
roll
mov
out
or
shrl
andl
pop
xor
push
sub
mov
out
mov
outsb
into
push
sbb
jne,pn
ret
mov
std
in
iret
cwtl
jmp
pop
ret
mov
mov
sub
adc
jnp
inc
xchg
aam
adc
ret
popa
imul
dec
repnz
xor
mov
dec
addb
mov
aam
leave
out
xor
or
mov
enter
test
mov
and
rcrl
popa
jb
adc
cmc
rcll
repz
in
mov
sub
leave
mov
jo
inc
insl
dec
popf
cli
imul
out
out
push
sub
add
jnp
call
push
icebp
test
orb
cwtl
xor
pop
cmp
das
xor
loope
and
xchg
adc
sub
repnz
cltd
gs
push
rcll
dec
stos
test
mov
mov
mov
cmpsl
push
jne
in
push
cs
cmc
and
shufps
test
jg
jne
addr16
int
in
aaa
fisttpll
dec
mov
jmp
mov
stc
test
in
dec
loop
xor
outsl
sbb
pop
loope
mov
dec
jo
and
xor
loop
fs
adc
leave
rorl
or
rcrl
shrl
and
pushf
insl
pop
out
adc
cmc
sbb
jle
jle
mov
sbb
sahf
sbb
bound
xlat
in
cmp
cmp
xchg
xor
pop
imul
jl
mov
lret
ds
xor
aaa
out
jecxz
cli
mov
fst
and
inc
mov
jbe
push
repnz
sbb
js
inc
mov
inc
xchg
jp
xor
push
pusha
scas
push
outsl
push
gs
and
and
std
and
aaa
lret
cld
fsubrs
push
sub
cmp
adc
xor
fidivl
push
jbe
fisubl
xchg
push
fisubrs
dec
scas
sub
scas
lods
cmp
scas
pop
addr16
movsl
sub
rolb
lret
js
push
sbb
and
mov
dec
cltd
xor
adc
rcrb
add
and
cmpl
ror
repnz
adc
dec
lret
lret
push
sahf
inc
xchg
decb
clc
js
and
loope
jo
imul
in
jmp
es
in
jl
mov
push
xchg
fucomi
orb
cmp
mov
mov
cld
xor
xchg
fisubs
and
fdivrl
in
pop
jnp
adc
test
adc
in
xor
xchg
lods
adc
cwtl
iret
pop
mov
xor
and
jle
adc
int3
mov
inc
xor
sub
lds
std
jae
dec
inc
add
pop
adc
lret
test
ljmp
pop
add
insb
ljmp
loope
loope
dec
sbb
lods
xchg
jle
mov
pop
mov
push
movsb
xchg
pop
jb
pushf
jae
les
xchg
pop
lahf
ret
neg
and
mov
shrb
dec
imul
pop
sub
ds
aad
dec
cmp
sti
jns
int
and
jns
xor
add
push
xor
aaa
shlb
xchg
pop
fwait
mov
mov
cld
pop
add
jnp
test
out
loope
add
lods
xchg
add
jno
sbb
aad
mov
jp
mov
loope
fwait
inc
inc
and
rorl
subb
mov
enter
dec
mulb
xor
sub
call
xchg
addr16
cmp
xor
hlt
in
ljmp
sbb
ret
test
out
sub
fisubl
loop,pt
push
mov
jle
dec
popa
mov
xchg
mov
inc
sub
in
sbb
arpl
inc
sarb
lret
imul
mov
in
cmp
sbb
jo
pop
inc
mov
sub
hlt
cltd
jge
repz
inc
mov
xor
and
xchg
aas
mov
xor
clc
xchg
push
in
or
mov
mov
mov
xor
push
pop
fcompl
sbb
lock
and
jbe
xor
inc
sbb
fucomp
xchg
cli
xor
test
pop
or
mov
jae
or
jb
pop
lret
aas
popf
ret
stos
push
fyl2xp1
mov
mov
scas
sti
repnz
hlt
and
sbb
xor
mov
popa
pop
sub
mov
mov
pop
sub
dec
mov
loopne
jae
inc
xor
jge
dec
jb
fcmovnbe
jp
lds
pminsw
ret
xor
adc
cmp
cmpsl
mov
add
fldenv
adc
loopne
jl
jmp
sbb
sub
fsts
pop
in
stc
fisubrl
add
enter
push
ja
int3
xchg
in
xorl
xchg
xor
cmp
cmp
mov
mov
sbb
insl
cwtl
cmp
mov
xchg
adc
push
xor
pop
imul
imul
out
or
negl
push
in
out
adc
ds
dec
mov
pusha
fnsave
daa
adc
je
mov
std
cmp
xor
and
mov
xchg
xor
nop
jp
pop
or
pop
push
imull
lock
mov
popa
cmp
jnp
nop
bound
mov
dec
inc
stos
mov
sti
repnz
idiv
jl
cmp
xor
hlt
das
and
mov
loop
aam
fbld
mov
cmp
fs
aaa
dec
or
ljmp
and
shlb
fcmovnb
jo
pushf
sub
pop
mov
int
push
add
mov
or
push
test
sub
dec
hlt
xor
test
pop
scas
fmuls
or
int
xchg
xchg
fildll
imul
xchg
jmp
loopne
jecxz
sbb
mov
in
xchg
push
adcl
xor
out
cmpsb
inc
and
stos
dec
nop
mov
in
mov
push
imul
sub
pop
pop
addb
das
xorb
sbb
rcl
test
out
xchg
filds
std
repz
mov
mov
inc
jnp
cwtl
test
lahf
jmp
int3
adc
out
int
and
adc
loop
cmpsb
les
xchg
and
dec
cld
enter
sbb
mov
xlat
jge
cwtl
sub
pop
xchg
push
add
push
pop
ret
clc
scas
inc
jl
sahf
pop
sbb
adc
inc
movsl
xchg
cwtl
adc
mov
lcall
sub
outsb
inc
push
cs
or
mov
sarb
in
int3
push
loope
imul
cmc
push
in
mov
daa
add
clc
inc
push
mov
sti
add
cmp
or
mov
sbb
ret
lret
add
jnp
push
pop
and
out
sbb
jle
les
dec
jl
insl
je
inc
mov
cld
jp
icebp
aaa
inc
int
repnz
adcl
rcrl
jno
mov
cmp
fisubl
pop
icebp
pushf
push
and
adc
push
cmpsb
jp
sbb
ja
push
data16
insl
daa
adc
loope
push
mov
xchg
cmp
pop
aam
jp
mov
sbb
fs
out
inc
push
popl
adc
pop
xor
mov
outsb
adc
dec
sub
mov
scas
insb
jge
scas
fcomps
mov
arpl
jns
arpl
and
xor
push
pushf
xchg
and
out
sbb
aad
adc
call
in
sbb
stos
daa
lock
test
pop
insl
add
sub
loop
fdivrl
add
imul
inc
cmpsb
in
mov
shll
and
loopne
ja
xchg
pop
push
jne
iret
pop
jbe
mov
int
jmp
icebp
adc
popf
leave
push
mov
ffreep
das
orb
and
daa
fmull
mov
outsb
mov
mov
in
nop
out
mov
jecxz
pop
int3
aam
mov
and
fucomip
jecxz
jecxz
jno
xchg
aad
aas
adcb
mov
cltd
jo
mov
xchg
es
popa
and
or
cltd
inc
xchg
jo
inc
push
mov
lock
rclb
hlt
arpl
xchg
pop
xor
adc
dec
repz
sub
jl
cmp
xchg
push
leave
sbb
je
mov
dec
loope
jecxz
or
js
in
test
jnp
mov
add
mov
aas
xchg
jb
sub
icebp
or
sub
pop
cli
jge
test
xor
adc
js
cmp
testb
sbb
filds
pop
mov
mov
cmp
mov
fcompl
lods
dec
cli
jae
sub
adc
adc
cmp
jbe
jnp
iret
sub
mov
inc
aad
loope
scas
lea
mulb
rdpmc
fwait
xchg
xlat
adc
popf
push
cltd
pop
cli
data16
ds
adc
and
inc
fsubrl
lods
mov
cwtl
pop
movsl
btc
xchg
mov
sbb
mov
jo
les
xor
ljmp
fwait
jg
jae
cwtl
pop
mov
jnp
lods
mov
mov
push
inc
mov
or
icebp
push
xor
int
sub
mov
adc
bnd
and
xor
lahf
imul
enter
add
pop
mov
pop
xor
mov
dec
daa
notl
data16
cmp
jmp
lea
jp
popa
call
loope
dec
push
push
out
sbb
mov
dec
push
adcb
stos
loopne
jecxz
imul
jl
sbb
cmp
xchg
mov
cmp
push
sub
lock
push
push
iret
push
sub
rcll
push
cmp
je
sbb
sti
mov
fcomps
mov
or
add
or
aam
xor
int3
jno
insb
movb
mov
or
repnz
inc
sahf
fwait
aas
lahf
jecxz
push
xor
aad
stos
enter
xchg
sbb
outsl
fistl
add
add
ss
aas
xchg
jne
inc
sub
push
lcall
fnstsw
stos
jo
pop
sbb
shl
jecxz
jbe
dec
arpl
push
outsb
sub
xor
add
mov
movsl
mov
push
dec
mov
loopne
sahf
mov
pop
push
das
mov
sub
jg
or
inc
out
in
jecxz
in
jmp
mov
xor
lods
cmp
jnp
sarl
add
fdivrl
arpl
or
dec
adc
or
mov
mov
jb
jns
sbb
xor
mov
rclb
fisubs
int
push
xchg
loopne
test
icebp
repnz
jmp
enter
pop
ror
and
movsb
sub
fsub
add
es
aas
pop
mov
ja
jns
inc
cmp
pop
add
add
out
mov
adc
scas
mov
dec
mov
sarl
and
jne
shll
lret
dec
and
xchg
mov
scas
lret
push
push
stos
xchg
mov
loope
sbb
add
inc
jle,pt
ds
lds
inc
imul
call
pop
push
xchg
xor
movsl
fcompl
jne
adc
xor
pop
ds
popf
mov
adc
adc
or
roll
clc
dec
data16
int3
inc
stos
mov
pop
test
js
sbb
adc
incl
sahf
enter
dec
xor
decl
loopne
movsb
loopne
movsl
xchg
in
pop
aas
adc
dec
jns
xchg
mov
and
sub
push
iret
add
xor
lret
push
or
lret
repz
jmp
add
leave
mov
cmpl
add
ss
rorl
jnp
push
mov
xchg
sub
and
xor
xchg
push
stc
mov
in
sbb
loop
mov
pop
xor
lret
jecxz
out
sahf
sub
mov
outsb
or
xor
pop
jno
push
and
cmp
jae
test
xchg
mov
sub
ss
mov
pop
dec
pushf
stos
and
jb
test
test
cmp
shll
fcmovnu
push
sbb
add
inc
sbb
adc
xchg
xchg
loop
and
xlat
sbb
mov
mov
into
add
push
lret
scas
mov
ds
mov
insb
movsb
es
sbb
loope
fimuls
nop
fs
lahf
jp
push
fisttpl
pop
pop
jp
or
ret
andb
iret
cmp
jle
test
stos
test
inc
mov
icebp
aam
stos
push
xor
push
es
xchg
xor
in
cmc
push
fsubr
push
push
sub
dec
push
xor
les
push
sub
ret
test
clc
xchg
add
push
negl
ljmp
mov
mov
in
lcall
push
mov
xor
movsl
dec
pop
hlt
addb
test
mov
sbb
lods
lds
les
cmp
mov
cwtl
sahf
notl
dec
pop
mov
pop
inc
mov
adcl
fadds
leave
add
fcomip
inc
and
xor
data16
cld
push
fcoms
dec
ljmp
adc
cmp
cltd
ret
loope
dec
xor
cmpb
pop
shlb
pop
cmpsl
push
push
std
call
xchg
hlt
inc
mov
sbb
repnz
adc
movb
jno
pop
pop
roll
adc
mov
test
imul
mov
sbb
sbb
scas
outsb
inc
xchg
mov
repnz
mov
popl
push
fidivs
pusha
and
aam
addl
rcrl
movsb
lea
mov
ret
push
daa
fucomp
xchg
iretw
popa
sbb
or
stos
fisttpll
in
push
push
jl
divb
inc
shrl
adc
stc
stos
cli
test
in
iret
out
test
lock
sbb
ret
jne
adc
mov
xchg
mov
xchg
and
pushf
in
cmp
out
or
mov
adc
int
int3
repz
outsl
gs
sbb
cmp
sbb
mov
das
ret
clc
jecxz
daa
push
lock
mov
jmp
inc
jnp
or
dec
mov
into
mov
jge
sub
int
movb
cld
push
push
lret
movsl
xchg
fldln2
addr16
aam
and
icebp
pop
or
mov
out
inc
add
dec
pop
hlt
add
xchg
add
push
sbb
je
mov
test
xorb
mov
add
dec
call
xor
mov
mov
cmp
cld
push
jmp
sub
sti
xlat
enter
pop
in
mov
cmp
lret
jl
xchg
mov
dec
lock
repnz
sbb
cli
dec
lods
inc
add
fsubl
stos
xor
push
fldcw
dec
cltd
jle
cmc
jp
and
rclb
aas
push
mov
bound
fdivr
pop
mov
ss
loope
push
mov
inc
dec
lods
or
insl
fildll
leave
test
or
xchg
xchg
fisttpl
js
scas
aam
addr16
pusha
std
jbe
inc
and
loope
sub
or
clc
lahf
jb
rorl
ds
or
lret
and
dec
or
iret
jg
adc
push
out
add
mov
int3
stos
inc
push
stos
fstps
or
clc
enter
movsl
daa
out
mov
loopne
jbe
and
fs
out
mov
clc
test
inc
xchg
leave
inc
jbe
pop
jp
dec
js
inc
xor
adc
cltd
adc
fsubrp
sub
and
inc
adc
cmc
lods
out
out
xchg
shrl
int3
adc
mov
add
push
and
push
mov
sub
xor
dec
jbe
xor
mov
emms
bnd
test
push
icebp
xor
insb
fistpl
nop
sbb
int3
insb
and
mov
mov
mov
scas
inc
gs
pop
sbb
mov
ret
aam
sub
lds
push
les
mov
mov
xor
xchg
mov
inc
jecxz
cs
loope
mov
fstpt
dec
sbb
es
lret
add
sbb
imul
or
pop
roll
jecxz
xchg
std
jg
ljmp
pop
in
push
adc
pop
xchg
test
or
lahf
jl
iret
out
pop
out
divl
xchg
les
mov
ja
scas
std
pusha
ja
push
pushf
sub
nop
adc
lret
lods
mov
adc
inc
pop
stos
and
mov
popf
clc
cmp
cmp
jle
mov
ret
js
or
xor
mov
das
xor
add
dec
scas
mov
jno
push
stos
gs
test
repnz
lods
int
mov
jp
adc
jno
addr16
mov
test
aas
test
les
cmp
aaa
jmp
sub
mov
hlt
xchg
lock
popa
inc
dec
mov
fildl
or
int
pop
imul
cmc
test
movl
adc
shll
popf
sbb
insl
xor
add
js
jae
in
cmp
pop
sub
rclb
lds
push
outsl
push
shlb
int3
or
enter
stos
inc
sbb
mov
dec
jbe
test
movsb
mov
sub
xor
data16
push
cmpl
mov
sahf
imul
jmp
adc
or
out
jo
popa
or
cmp
xchg
xlat
ss
dec
jp
mov
and
test
fwait
add
pop
ficompl
sub
xchg
sarl
loopne
xchg
mov
test
das
xchg
cwtl
cmovne
or
adc
cmp
push
paddb
adc
ljmp
jne
test
jg
cmp
xor
sahf
ficoms
pop
jno
add
pop
test
in
lcall
pop
fsubs
sbb
in
fdivrs
cmp
mov
pop
mov
jmp
hlt
es
fnstenv
inc
mov
nop
jo,pn
dec
clc
out
mov
and
mov
repz
mov
leave
arpl
inc
dec
push
or
or
or
outsb
jno
xor
mov
in
sub
jmp
jnp
sbb
ds
cmp
test
scas
scas
out
push
aaa
inc
pop
cmpsb
cmp
es
xchg
vmwrite
ljmp
adc
lret
sub
stos
mov
fdivrs
mov
adc
pushf
shrb
sub
pop
mov
xchg
shrb
cmpsb
fadd
push
push
push
scas
adc
inc
push
jno
inc
daa
add
fwait
and
sbb
push
stos
fsts
repz
test
cmp
ss
rclb
add
fs
xchg
in
or
dec
jnp
ret
filds
or
pop
cmp
dec
inc
inc
push
inc
mov
inc
xchg
and
or
inc
and
adc
insb
shll
sbb
mov
fs
ss
jle
mov
and
jns
jl
sbb
xor
insb
inc
test
ret
jnp
sahf
dec
dec
jmp
loope
loope
insl
stos
sbb
adc
dec
stc
outsb
dec
jl
push
dec
test
dec
xor
bound
in
fidivrs
push
xor
loope
add
adc
push
push
push
mov
cmp
rcrb
out
mov
pop
or
cmp
lahf
xchg
out
mov
insl
or
or
jno
adc
cld
hlt
mov
add
mov
and
lods
sbb
test
xchg
test
loope
adc
mov
ret
inc
insl
fucomip
fstpt
dec
xor
lock
push
mov
pop
mov
inc
add
ret
lret
lea
icebp
or
das
setl
inc
adc
adc
and
inc
xchg
movsl
out
dec
mov
shll
stos
mov
fs
mov
jmp
pop
xchg
mov
outsb
push
ret
jbe
repz
or
push
subb
fldl
pop
mov
mov
lcall
orl
mov
in
test
lds
sbb
pushf
lcall
lcall
cli
xchg
xor
scas
je
xlat
mov
pop
nop
xchg
leave
inc
mov
xor
sti
in
xor
mov
push
or
sbb
sbb
cltd
push
jae
pop
push
aaa
lock
les
sbb
insl
hlt
jbe
icebp
inc
fwait
jle
sahf
fstpt
push
inc
ds
int
dec
cld
lds
arpl
into
ja
test
cmc
rcll
outsb
jge
scas
pop
pop
or
add
aad
test
fiaddl
ret
int3
ret
daa
outsb
mov
stc
in
ss
cmc
outsb
pop
mov
mov
push
cmp
push
lods
or
mov
in
test
rolb
xor
shl
dec
lock
push
jmp
addr16
in
test
mov
aas
test
sub
popa
push
fdivr
add
sbb
test
shlb
int3
push
sub
push
fnstsw
scas
aam
pop
ret
mov
scas
sti
push
cmp
mov
jae
hlt
sbb
clc
sbb
xor
scas
scas
les
int3
into
cmp
xor
push
aad
adc
rorb
andb
jnp
jbe
push
jnp
cmc
fwait
scas
adc
ffree
or
out
gs
sarl
and
cs
insb
xchg
imul
cli
mov
pop
dec
jb
jle
sub
faddl
lahf
sbbl
out
pop
dec
cmp
imul
imul
xchg
lds
jmp
and
adc
in
mov
fmul
or
aas
shr
sbb
sbb
adc
loope
sub
test
icebp
mov
out
repnz
cmp
inc
jo
xchg
pop
add
sbbb
pop
cs
add
push
xchg
movl
inc
popf
mov
insl
push
xor
leave
lcall
insb
out
pop
sbb
pop
jbe
sbb
adc
cmp
ret
das
xor
push
sbb
jno
cltd
cld
in
cmpl
dec
xchg
nop
fistpll
xor
cmp
fdivr
cvtps2pi
dec
pusha
adc
fdivrs
and
pop
bound
push
add
jge
rolb
aad
movsb
mov
jae
out
pop
int
jl
ror
inc
mov
inc
shll
fldl
mov
dec
cmpsl
jo
cld
imul
adc
je
filds
test
enter
cmpsl
or
lds
jb,pn
jae
test
aaa
in
pop
push
mov
stc
mov
inc
ljmp
lcall
inc
out
test
movsb
jbe
mov
packsswb
inc
pop
mov
xchg
push
pusha
sbb
or
mov
xchg
icebp
lcall
push
rorb
mov
mov
aad
js
lock
insl
xchg
mov
mov
mov
aas
addb
out
sub
or
insb
dec
test
aad
mov
dec
scas
fucom
cmpsl
ficoms
mov
out
ja
mov
mov
paddusw
and
ror
subb
mov
xchg
xchg
xchg
pushf
scas
popa
loop
pop
mov
stc
jbe
dec
push
lahf
adc
daa
dec
sub
dec
fnsave
ds
mov
add
ja
mov
sub
pop
icebp
or
add
call
sarl
fnstsw
push
mov
xor
sbb
dec
pop
loop
repnz
xchg
mov
and
test
ror
sub
stos
xchg
adc
test
lret
dec
or
lea
cmp
add
jg
neg
mov
ret
mov
fldl
test
lahf
mov
mov
jp
leave
jmp
dec
and
mov
in
popf
add
xor
and
and
nop
mov
xchg
mov
and
mov
shrl
pop
iret
xor
pop
xor
sub
xchg
ljmp
lock
adc
xor
lds
fimuls
inc
jae
xchg
nop
iret
scas
add
adc
pop
in
mov
call
in
sbb
call
insb
mov
push
lret
outsb
and
push
insl
push
orl
push
jge
adc
es
adc
cli
lahf
push
xchg
fs
push
test
add
xchg
fs
call
push
ret
enter
jbe
push
cmp
pop
xor
lock
cmp
mov
cld
sbb
or
loopne
pop
pop
pop
push
inc
movsb
mov
leave
popf
cmc
jl
mov
dec
sbb
mov
data16
jae
rcrb
dec
je
cli
xchg
test
pusha
lods
mov
iret
mov
in
push
sub
mov
mov
mov
jecxz
jle
add
imul
stos
int3
sti
xor
cwtl
inc
std
and
cmp
mov
mov
inc
xor
mov
repz
inc
testl
sbb
mov
fnstsw
pop
sbb
fisttpl
add
sbb
idivb
adc
cvtps2pd
fs
cltd
xchg
and
dec
inc
std
xor
sub
cs
inc
add
addr16
sub
or
jae
jmp
add
lods
pop
les
out
pop
xchg
push
out
sub
fldt
add
or
fldt
mov
ret
cmp
dec
bound
out
int
leave
pop
mov
push
movsb
push
ljmp
cltd
cmpsl
jmp
add
pop
add
xor
insl
iret
inc
test
mov
mov
push
ror
mov
xor
sub
inc
hlt
andl
dec
mov
pop
stc
jl
ds
and
popf
or
push
pop
or
add
std
inc
push
daa
push
mov
jmp
pushf
xchg
aam
adc
loope
sub
adc
xchg
add
jmp
cmp
jl
adc
mov
sub
cmp
sub
icebp
push
test
cmp
fsubr
inc
mov
sub
sbb
test
pop
inc
pop
and
lock
dec
leave
push
test
cltd
and
xorb
mov
mov
push
inc
cmp
mov
push
addps
movsl
ss
jb
repnz
addl
mov
stos
mov
and
sbb
sbb
add
cmp
pop
ror
cwtl
jge
push
lahf
lret
xor
fxch
lods
lcall
jmp
mov
adcl
inc
or
aas
ljmp
sub
jne
test
ja
clc
jbe
inc
adc
loopne
jge
jae
stc
int3
data16
fcmovnb
ret
push
popf
jge
orb
hlt
stos
in
or
or
movsw
sub
sbb
sti
mov
cmp
rcrb
cld
out
xchg
push
adc
out
add
dec
push
mov
push
lods
cwtl
inc
dec
lcall
ljmp
bound
inc
lock
sbb
daa
lret
cmp
pop
push
fildll
inc
int
dec
sbb
popf
fisubrs
inc
int
rorb
lret
les
mov
cmc
pop
movl
pusha
add
cmp
jp
in
mov
mov
nop
sbb
in
sub
jne
jb
std
or
into
daa
adc
pop
push
xchg
jno
fwait
cmpsl
sahf
sub
mov
in
cmpsl
repz
mov
fisttps
lock
scas
xor
lock
test
push
mov
cld
icebp
mov
pop
and
jb
js
lods
shrl
cltd
pop
addr16
adc
cmp
scas
outsb
into
adc
jp
aad
xchg
mov
cmpsb
sub
notl
shrb
jnp
add
lods
mov
nop
arpl
push
xlat
adc
sub
clc
repnz
push
push
cmp
or
cmpsb
jbe
push
adc
pop
imul
sbb
jl
jmp
jno
or
jmp
push
inc
xchg
loope
mov
idiv
pushf
push
add
mov
jg
int3
pop
mov
sbb
or
dec
push
shrb
push
popa
shll
movsl
fsubrs
adc
inc
mov
pop
mov
repz
fwait
xlat
adc
je
mov
hlt
lods
cmp
push
push
in
out
es
into
popf
int3
dec
or
fimuls
roll
dec
std
inc
cmp
sub
cmp
or
shll
inc
add
dec
cli
jne
jb
ret
cmp
mov
sub
mov
push
or
dec
outsb
popa
lret
mov
sub
cmpsb
pop
cmpsl
sbb
out
adc
xor
loop
jmp
xchg
pop
sti
gs
fnstenv
cmp
jmp
out
and
xor
mov
fidivs
pop
arpl
cmp
jns
mov
mov
and
nop
pop
jmp
adc
jecxz
cmp
inc
clc
imul
sub
mov
sbb
xchg
sahf
or
cwtl
xor
sbb
pushf
add
repnz
dec
cmp
mov
imul
pop
cltd
sbb
xor
jae
std
mov
mov
cld
xchg
movsb
or
jbe
sub
sti
dec
mov
fcoml
or
mov
stc
out
cmpsb
in
out
lods
xchg
es
ret
into
jle,pt
cwtl
movsb
test
lods
fwait
inc
daa
in
imul
push
mov
adc
push
and
mov
sub
jl
rcr
sub
daa
out
jb
jmp
jb
push
fadd
sbb
jne
mov
shr
dec
sti
iret
mov
mov
dec
xchg
loopne
clc
jns
in
add
pop
pop
arpl
out
int
jp
popf
and
ror
add
fmull
add
imulb
mov
push
mov
mov
loope
and
cmp
inc
ret
sbb
mov
fildl
movsb
mov
pop
adc
mov
and
fabs
xor
out
andb
xchg
movsl
lea
push
test
pop
out
pop
xchg
insl
into
or
movsl
xchg
aam
and
adc
pushf
dec
lret
cld
dec
push
xchg
or
jp
pop
das
ficoms
stos
jmp
rorl
inc
leave
iret
sbb
movsl
jo
popa
gs
inc
imul
pop
scas
mov
push
ret
test
enter
jne
loopne
test
pop
movsl
xchg
pop
jb
rclb
mov
inc
xchg
cs
test
or
push
sbb
lcall
xchg
mov
shlb
lea
sub
repnz
adc
jo
popa
jmp
sbb
lcall
sub
pop
push
sahf
mov
dec
sarb
cmp
mov
ja
or
xchg
push
push
cld
bsr
js
xor
fdivl
push
xchg
mov
jne
pusha
xchg
orb
pusha
cwtl
mov
sbb
or
mov
push
fistpl
lcall
aas
gs
or
icebp
orb
test
loopne
xor
das
lret
and
in
xchg
addl
into
mov
inc
pop
js
push
push
and
sub
pusha
or
or
jnp
inc
push
sub
arpl
inc
jmp
mov
mov
xchg
push
or
sti
cmpsb
or
clc
mov
pop
insl
pop
icebp
mov
xchg
sub
scas
mov
dec
enter
dec
les
pushl
sub
fwait
subb
pop
iret
mov
sub
fsubrs
pop
add
cmp
jbe
lret
add
add
inc
enter
lcall
cmp
mov
bnd
loopne
push
lods
xor
push
pop
pop
imul
mov
neg
or
jb
test
cmp
adc
test
jb
dec
dec
pop
ficomps
insl
insl
push
adc
notb
inc
cwtl
sbb
int
fnstcw
fwait
dec
addr16
cs
sbb
mov
insb
jnp
cmc
bound
addr16
lcall
les
or
xchg
cli
and
lock
dec
sbb
push
mov
adc
jmp
inc
adc
cwtl
sbb
sbb
and
xchg
out
repnz
adc
scas
cltd
inc
mov
pop
movsb
xchg
sub
jmp
andl
call
dec
rol
mov
cli
loopne
andb
out
jns
rclb
xor
mov
push
repz
imul
pop
hlt
xchg
call
enter
inc
sbb
lahf
loope
movsb
fiaddl
repnz
mov
movsb
mov
movsb
icebp
enter
mov
in
jl
fs
jle
xchg
jo
sarl
xlat
fldl
sbb
in
addr16
test
cli
add
adcb
dec
ja
bound
mov
cld
or
pop
pop
data16
pop
cli
xchg
mov
and
mov
frstor
daa
mov
push
mov
sbb
lods
dec
lds
inc
add
push
xorl
pop
shld
dec
mov
add
fnsave
mov
xchg
negl
xchg
mov
pushl
mov
mov
xchg
dec
xchg
mov
mov
xor
fcomi
mov
xchg
xchg
jae
sbb
sub
icebp
lock
adc
les
idivl
je
inc
jmp
cmpsb
aam
push
jmp
mov
mov
xchg
mov
pushf
cmp
hlt
mov
in
call
jnp
cmp
loop
fadds
mov
shll
bndldx
xchg
mov
movsl
pop
sbb
sbb
mov
scas
cmpsb
sub
jg
mov
mov
lods
fldt
ror
addr16
data16
repnz
xchg
adc
int
pop
lret
insb
sbb
mov
subl
xor
in
push
bnd
mov
push
xor
iret
lahf
push
jmp
push
lea
jne
icebp
stos
cmpsl
mov
sub
adc
and
in
mov
push
push
dec
inc
mov
push
pusha
out
jmp
push
xor
scas
mov
test
je
lods
sti
inc
sti
shrb
inc
sub
out
ja
not
outsb
adc
das
out
cmovg
and
push
push
lods
jbe
xor
jnp
sbb
push
dec
xchg
xor
push
cmc
push
test
pop
fsts
mov
scas
add
and
clc
mov
lock
fwait
xchg
cltd
xchg
rcrb
in
fs
adc
mov
dec
test
mov
lea
filds
or
jmp
mov
sub
les
ret
popf
xchg
mov
sub
xor
repz
fldcw
imul
in
das
loopne
push
push
mov
call
mov
aad
ljmp
jge
or
mov
and
sbb
and
pusha
inc
lcall
dec
mov
add
dec
jb
in
mov
dec
jae
loope
addr16
call
dec
psubusw
jnp
call
outsb
xor
pop
inc
loope
dec
add
sbb
inc
sub
out
cs
fcmovnbe
scas
mov
add
jmp
mov
lahf
test
loop
test
push
sub
xor
pop
aad
leave
shlb
and
lret
or
mov
adc
push
or
stos
mov
mov
jae
je
adc
mov
scas
adc
push
mov
or
mov
out
push
mov
mov
mov
or
cmpsl
pop
insb
sar
lods
lret
addr16
cmc
dec
test
pop
out
ds
shll
cmpsl
and
sbb
sbbl
add
cmpsl
jmp
js
add
nop
xchg
jle
xchg
and
iret
xchg
push
inc
std
pop
lea
push
inc
or
cs
mov
pop
fwait
stc
aas
sub
sub
jge
sbb
in
ret
pushf
dec
push
inc
das
add
int
mov
jb
pop
jb
lcall
pop
push
test
mov
sbb
ja
sub
dec
ss
mov
das
jge
pop
add
sahf
sahf
cmpsb
and
aas
dec
sub
dec
jmp
xlat
in
and
and
lock
push
loope
insb
push
js
sahf
stos
imul
bound
and
into
pop
push
out
je
cwtl
fwait
sbb
loopne
lods
xchg
cmp
pop
fwait
rcl
lock
mov
pop
icebp
or
adc
dec
ret
in
sbb
xchg
pop
mov
xchg
and
sub
sbb
repz
sub
mov
inc
loop
push
lahf
mov
cmp
xchg
cmp
das
cltd
push
sub
data16
push
insl
bound
cmp
adc
bound
mov
cmp
or
ds
mov
sub
lds
lahf
daa
sbb
sti
sub
dec
jnp
movsb
in
jge
or
cwtl
pop
ret
pusha
loopne
stos
pop
iret
cmpsl
add
push
inc
jmp
xlat
cmpsl
scas
cltd
andl
xchg
sbbl
out
push
xor
dec
pop
mov
popa
sub
orl
sti
fidivs
jno
movsb
cli
cmp
std
rorb
mulb
cmc
pushf
outsb
xchg
lods
das
or
pop
dec
out
dec
mov
xchg
mov
or
inc
jge
negb
outsl
mov
xor
int
sbb
out
out
call
and
xchg
xchg
pop
sub
xchg
hlt
loopne
dec
loop
jp
pop
aad
mov
xor
mov
pusha
enter
adc
call
jb
sub
adc
inc
mov
push
lret
lea
lret
aam
pop
jb
sub
pushf
scas
rol
cmp
pop
mov
jp
popa
sahf
int3
out
xchg
leave
fadd
jae
cmp
sub
xor
in
cmp
jge
xchg
push
xchg
lods
or
mov
loopne
jp
dec
lret
xor
cmp
pop
xchg
mov
out
xor
inc
cli
sarb
movsl
pushf
push
pop
mov
dec
pop
mov
xchg
xchg
fdivr
adcb
jg
or
push
push
fnstcw
stc
ds
and
adc
into
dec
sar
mov
lea
fs
lea
cmp
ja
dec
fs
mov
cmp
xchg
jo
add
rcr
nop
jb
and
and
jb
xchg
sbb
mov
adc
ljmp
nop
ja
sub
jl
arpl
dec
js
ja
idivl
aaa
mov
std
jns
xchg
stos
push
outsb
push
and
in
leave
dec
sbb
inc
clc
xor
fmull
in
cmc
mov
les
xchg
xor
cmp
sarb
pop
pop
stos
jae
mov
mov
rclb
push
rolb
xchg
jmp
inc
mov
and
inc
push
xchg
or
negl
sub
cltd
cwtl
int
hlt
int3
aas
adc
and
scas
mov
das
les
shl
dec
movsb
aaa
mov
or
push
adc
sti
dec
sbb
cltd
cmpsl
shr
jp
fs
imull
les
in
outsb
out
sbb
jno
xorb
sbbb
bound
and
or
mov
cmp
push
push
push
push
xchg
xor
dec
test
loope
aaa
andl
fiaddl
jmp
xchg
daa
push
push
inc
repnz
enter
movsl
push
subb
roll
pop
adc
mov
lea
and
inc
push
dec
je
add
pop
leave
sbb
jl
loope
lret
inc
scas
cmp
push
dec
test
ss
jno
xor
das
mov
sarl
popf
cmp
repz
shll
cld
repz
mov
or
mov
adc
sub
pop
int3
push
and
add
out
shr
call
fiaddl
das
mov
and
insb
mov
inc
dec
test
lcall
adc
sbbl
out
hlt
cmp
dec
outsb
and
mov
test
imull
call
mov
aad
lret
add
and
mov
xchg
unpcklps
push
mov
xchg
sarb
popf
movsl
repnz
enter
clc
clc
jmp
ds
pusha
mov
jbe
jb
daa
fldl
lods
mov
mov
mov
cmovb
xchg
push
shrb
mov
push
pop
push
int
mov
in
leave
ja
push
sarl
fs
out
fnstenv
das
xchg
outsl
mov
in
clc
inc
lods
sbb
or
cwtl
xchg
in
jo
bnd
es
fisubs
jg
lea
das
and
dec
lcall
lds
arpl
sahf
sti
push
nop
fisttpl
cli
gs
test
in
addr16
inc
xlat
fwait
pop
add
sti
mov
test
iret
pop
sub
int
pop
mov
add
xor
cltd
leave
add
jbe
out
add
push
fs
adc
cwtl
cmp
test
shll
mov
out
xor
aam
mov
jbe
xchg
jo
aad
cmp
fs
jb
mov
je
stos
and
out
cwtl
jbe
mov
xchg
stos
rorb
push
in
cld
mov
add
or
sahf
xchg
in
in
imul
outsb
ljmp
inc
pop
inc
das
ja
mov
jno
add
jecxz
movl
xchg
mov
or
out
fcom
push
rcl
leave
push
and
int3
rol
inc
jmp
and
or
in
sub
xchg
adc
or
jb
lahf
add
pop
data16
stos
push
lcall
dec
shlb
ficomps
out
ss
or
insl
dec
inc
lock
xor
movb
push
jnp
es
xchg
int3
lret
mov
dec
inc
add
push
xchg
push
mov
push
das
mov
push
jl
mov
push
and
int
pusha
je
jo
mov
push
mov
in
xor
sbb
mov
arpl
mov
lods
in
push
aaa
pop
inc
xor
mov
addr16
lret
test
pop
sub
add
mov
test
sbb
jg
push
cld
mov
and
mov
pop
or
out
xchg
pop
sbbb
int3
sub
xchg
nop
dec
push
cmp
jne
rorl
gs
jmp
aaa
test
mov
mov
outsl
adc
shlb
jmp
or
pop
mov
es
imul
inc
outsb
jb
jo
pop
mov
inc
adc
or
jge
mov
ret
test
test
popf
addr16
dec
xchg
and
bt
dec
cmpsb
stc
test
push
adc
out
imul
push
push
mov
or
jo
push
loopne
data16
cmp
nop
icebp
ja
sbb
mov
mov
add
sti
lahf
jno
les
repnz
in
add
ficoms
inc
inc
bound
push
and
movl
mov
xchg
aas
stos
inc
cld
pop
mov
and
imul
gs
sub
jns
jecxz
sbb
pop
daa
test
sarb
mov
cmpsb
std
daa
cli
xchg
xchg
dec
pop
inc
pusha
xchg
enter
imul
clc
pop
cltd
movsl
inc
in
push
mov
scas
pop
ret
xchg
cmp
add
or
stc
scas
mov
ffreep
add
push
push
mov
daa
dec
out
popa
je
dec
imul
pop
add
mov
xchg
xor
insb
or
mov
scas
scas
jmp
add
ficoms
jb
cmpsb
and
loope
xchg
push
je
cmpsb
aam
xor
scas
popf
mov
inc
mov
je
mov
das
xchg
or
sub
fwait
mov
callw
shlb
ljmp
inc
adc
xor
pop
pop
frstor
lds
outsb
pop
jo
lea
jne
add
cmpl
les
push
add
jmp
mov
in
add
jnp
scas
add
test
ja
inc
movsl
scas
pusha
mov
mov
dec
inc
lds
jl
lods
aaa
cmp
mov
aaa
inc
adc
je
ds
inc
int3
mov
mov
jb
mov
inc
daa
and
sbb
out
mov
mov
inc
push
push
mov
xorb
pop
add
mov
iret
mov
nop
cs
loop
insb
push
je
mov
dec
and
cs
adc
sub
sub
xor
jl
mov
insl
cmp
mov
push
out
mov
push
add
stos
js
xor
cmpsb
js
pop
ret
orl
popf
adc
push
pop
std
sub
imul
rorb
sub
xchg
jae
sbb
icebp
in
mov
in
shlb
enter
fistpl
jnp
cmp
pop
inc
cli
inc
or
pop
out
fstpt
push
xchg
gs
shrb
sub
aas
xor
loope
fsubrs
sub
sub
into
lods
js
or
movsb
lahf
mov
jp
mov
mov
movsb
cld
mov
xchg
int3
add
psraw
psubw
movsl
cmp
sahf
and
sbb
adc
bound
ja
gs
sahf
imul
daa
adc
cmp
cmp
or
mov
jb
sarl
inc
and
mov
cwtl
daa
xchg
jle
sub
mov
cmp
inc
inc
addr16
adc
imul
ss
pop
mov
aas
add
cmp
insb
jmp
test
sahf
dec
xchg
rcl
fprem
scas
imul
mov
and
fstp
mov
outsl
ret
mov
in
dec
or
sub
lret
out
gs
lcall
movsl
cs
xor
lods
hlt
push
inc
mov
sbb
dec
mov
xor
cmp
xor
push
pop
xchg
push
addr16
xor
and
pop
test
cld
imul
vpandn
rcll
adc
mov
push
dec
xor
sub
aad
pop
and
imull
out
aad
outsb
mov
push
pushf
adc
lret
push
shlb
xchg
subl
inc
xchg
jle
jne
or
scas
inc
cmc
xchg
add
jae
sub
gs
mov
sub
stos
push
ds
out
jg
pop
dec
sub
rcll
cmp
add
sahf
repz
jmp
addl
mov
cwtl
and
or
out
popf
inc
stos
icebp
push
jmp
test
movsb
scas
mov
adc
aaa
jne
out
arpl
jne
aaa
or
jae
jne
out
fisubrs
adc
push
dec
jno
adc
negl
inc
push
lcall
in
pusha
in
sbb
mov
jp
push
jp
shlb
push
adc
add
out
xchg
lret
or
repz
inc
pop
pop
lea
scas
push
adc
mov
pop
fimull
gs
movsb
inc
aam
pusha
cld
mov
loopne
adc
mov
push
jp
in
nop/reserved
cmc
and
mov
inc
and
xor
aas
daa
lock
imul
and
mov
dec
push
mov
fwait
nop
and
sbb
push
pop
jecxz
jne
jmp
cmp
push
int
push
inc
dec
adc
loopne
call
idivl
dec
cwtl
mov
outsb
ss
push
jo
xchg
or
das
mov
lahf
sbb
das
out
xor
fmul
jmp
stos
hlt
mov
jns
adc
jb
push
jecxz
push
cmp
scas
pop
leave
mov
testl
sahf
inc
aam
frstor
cmpsb
xor
ss
imul
xor
jnp
in
ja
out
adc
imul
divb
push
shrl
mov
xchg
and
cmp
mov
dec
dec
mov
pavgw
out
dec
rolb
scas
dec
roll
inc
xchg
cwtl
push
sbb
sti
cmp
clc
and
xorl
aam
fbstp
loopne
ret
inc
addr16
mov
inc
sti
inc
jmp
rcrb
rorl
movsl
jae
sub
pop
movsb
add
dec
push
pop
xchg
adc
mov
sub
shr
imul
sti
sub
cld
adc
fbstp
scas
add
mov
iret
mov
inc
stc
add
jnp
gs
lods
mov
das
add
xor
lds
sti
cltd
or
nop
xor
add
xchg
mov
xchg
icebp
xor
inc
negb
mov
sbbb
out
sbb
imul
insb
mov
repz
xchg
mov
push
popl
mov
pop
sub
or
ret
jno
cmp
dec
dec
and
mov
jge
mov
mov
adc
aad
scas
int3
ficomps
cmpsb
imul
inc
push
aad
std
rclb
dec
ret
movsl
lock
popa
fnstenv
mov
ficoms
mov
push
jno
xorb
or
sarb
nop
movsl
mov
push
cmpsl
mov
inc
arpl
lea
cmp
pop
cmp
mov
push
inc
dec
push
jb
shr
js
cmpsl
pop
cmp
loop
repnz
ds
sarb
outsb
daa
adc
xorb
or
cmpsl
jae
andl
loop
sbb
jmp
ret
dec
mov
lds
pop
jle
cmp
lock
mov
ja
adc
fimull
adcl
pop
pop
in
ret
inc
data16
or
mov
dec
jno
mov
out
lods
xchg
test
lods
insb
cmp
les
rol
xlat
test
push
push
scas
std
jb
rcrb
push
mov
jmp
std
sub
pop
push
mov
cmp
movsl
out
ljmp
mov
sbb
adc
cmp
aad
test
inc
push
int
sbb
adc
push
arpl
mov
sub
mov
xor
push
daa
mov
pushl
pushf
fists
push
pop
popf
test
fcoms
decl
push
dec
push
and
adc
mov
fldenv
mov
outsl
sbb
in
inc
leave
mov
add
ret
push
mov
test
fisttps
inc
mov
mov
ljmp
xlat
xor
inc
cld
jp
jb
or
das
or
lods
in
mov
je
or
je
dec
pop
add
and
cli
pushf
pop
fdivr
popa
lods
pop
xor
testb
jecxz
test
inc
std
outsl
adc
sub
fmull
ljmp
roll
loopne
or
or
add
mov
fbstp
add
call
xchg
add
ret
es
add
mov
pmaxub
rcl
clc
insl
aaa
loope
and
or
js
pop
jmp
mov
cmc
dec
jae
inc
movsb
lret
daa
fsubl
inc
aad
movsb
fwait
add
sub
mov
pop
dec
scas
mov
xchg
imul
stos
ffree
mov
add
arpl
pop
call
ss
push
cmp
stos
xor
shrb
popl
pop
and
insb
xlat
dec
dec
gs
inc
adc
lods
sub
jns
mov
movsb
pop
jl
out
adc
lret
inc
in
mov
mov
add
push
cmc
insb
xchg
add
fidivs
jnp
push
xor
and
mov
scas
scas
or
xchg
orb
add
mov
shrb
inc
sbb
pop
dec
pop
outsb
mov
outsl
aad
outsl
aaa
shl
in
sbb
add
add
sahf
mov
add
add
movsl
ret
in
cmc
outsb
add
test
mov
push
mov
outsb
add
pop
dec
test
rorl
mov
mov
push
sbb
push
les
out
and
mov
inc
lods
ds
mov
out
dec
lret
mov
sub
fbld
sub
dec
cmpsl
sbb
mov
movsb
and
in
ror
cmp
leave
shl
fs
imul
jo
sarb
stos
nop
push
mov
jnp
bound
in
xor
push
jb
push
pop
decb
lock
pusha
loopne
int3
inc
push
pop
adc
fidivrs
aam
jg
stos
pop
push
jecxz
or
adc
xchg
std
xchg
out
cmp
stc
inc
call
cmp
nop
test
add
adc
fs
rcr
cltd
and
lea
mov
iret
add
loope
xor
inc
cmpsl
sub
repnz
arpl
out
sub
mov
std
push
andb
mov
clc
or
sar
mov
mov
das
movsl
mov
loop
sbb
cmp
fstpl
xchg
popa
icebp
xchg
dec
xor
imul
push
ds
iret
popa
fcmovne
inc
jbe
dec
cmpsb
ficoml
sub
pop
dec
pop
lods
pushf
dec
pop
insb
adc
test
mov
icebp
mov
jp
cwtl
adc
mov
jp
in
sbb
movsb
and
pop
sahf
rol
mov
das
push
xor
or
cmp
pop
pusha
dec
jbe
xchg
or
or
xchg
lods
xor
adc
jbe
sub
xchg
ljmp
xchg
push
mov
cld
xchg
ret
in
push
das
cmc
and
mov
xor
gs
xchg
mov
test
mov
mov
je
or
in
js
mov
shlb
xlat
jp
mov
cld
jbe
outsb
push
orl
mov
or
les
inc
sbb
mov
push
mov
sub
and
xor
lods
xchg
lsl
push
pop
pop
cmp
pop
push
and
and
ficoml
icebp
inc
pop
pop
fwait
mov
not
xor
addr16
cmpsb
xchg
loope
cmp
je
mov
pop
sahf
out
push
sbb
push
std
stos
pop
or
int
fidivrl
aad
leave
test
push
adc
add
mov
mov
cmp
movsb
xor
nop
call
repz
push
or
test
adc
fs
fsts
das
mov
fsub
or
faddl
dec
and
adc
shrl
or
arpl
dec
or
adc
pop
pop
rorb
out
enter
pop
mov
adc
add
out
jns
push
fwait
outsl
lods
pop
push
mov
out
in
mov
jbe
cmovl
adc
bound
dec
push
inc
icebp
sbb
xor
aam
mov
mov
cmp
daa
inc
stos
sbbl
cmp
cmp
push
fwait
jmp
cmp
inc
aaa
mov
cltd
cmp
mov
push
inc
andl
cmc
stos
push
cli
gs
outsb
in
cmpsl
js
add
pop
lea
popf
adc
movsl
sarb
adc
jnp
mov
mov
mov
ss
or
scas
jg
clc
and
outsl
adc
fwait
movsb
pushf
aas
leave
fcoml
fstpl
ret
aas
mov
add
mov
mov
test
mov
aas
cs
sbb
mov
repnz
decb
shrb
or
and
xor
sbb
or
or
leave
test
arpl
push
rcr
divb
popa
and
test
std
sub
xchg
dec
sarl
aad
loop
pusha
mov
dec
xor
dec
mov
or
mov
shl
inc
inc
outsb
mov
dec
cmpsb
fstl
pop
jne
pop
xor
mov
dec
and
sub
mov
xchg
shlb
adc
cmc
pop
sbb
fwait
add
xchg
or
push
push
pop
sbb
mov
outsb
xchg
and
or
xchg
or
ss
movsl
or
adc
scas
mov
mov
repnz
fildll
xchg
ljmp
fmull
xchg
cmp
nop
sbb
xor
xchg
out
insb
jnp
bound
push
jecxz
jmp
arpl
in
rcrb
and
and
std
jns
sbb
cmp
test
cmp
test
fisubrl
imul
cmpsl
or
sub
pop
inc
in
cmp
xchg
mov
scas
jb
cmp
int3
icebp
or
test
cmpsb
std
or
adc
pop
rorl
adc
jg
add
sbb
and
add
sub
mov
stos
mov
sbb
mov
xchg
mov
test
jno
lret
mov
hlt
xchg
adc
mov
xchg
popf
cmc
sbb
xor
jmp
and
mov
and
and
aaa
inc
fdivs
and
test
mov
adc
mov
mov
test
div
aam
mov
adc
test
push
mov
cmp
outsl
inc
xorb
js,pt
jmp
or
push
mov
sub
shlb
pop
dec
out
sbb
scas
sbb
popf
ret
int
arpl
mov
lods
mov
aam
jle
and
cmp
int
outsl
pushf
testb
lret
imul
stc
mov
sub
jle
divb
push
lret
add
and
mov
je
cli
xchg
mov
jmp
inc
out
js
inc
xchg
mov
pop
notb
stos
pop
loope
sbb
pop
mov
jecxz
pop
sbb
xor
pop
stos
cltd
jb
movsl
xchg
inc
adc
dec
mov
dec
xchg
dec
lds
movsl
mov
mov
pop
push
fistpl
mov
or
cmpsb
jge
rcrb
xchg
outsb
jbe
dec
xchg
out
xor
cmp
push
faddl
iret
cltd
scas
jp
push
mov
pop
inc
lcall
ljmp
and
aas
pusha
sub
ja
mov
dec
je
cmp
scas
add
sbb
gs
push
adc
mov
shrb
inc
addr16
jns
xchg
sbb
push
in
cli
dec
mov
bts
mov
adc
pop
inc
push
cwtl
lret
lret
leave
jecxz
adc
sub
cmpb
dec
shll
in
fs
lods
in
in
adc
in
push
arpl
insb
cs
adc
div
dec
adcb
insb
cmp
jmp
mov
push
test
inc
sbb
add
mov
push
and
xchg
xor
js
or
or
cmp
pop
sbb
or
jne
movsb
mov
xchg
ja
cmpsl
fs
xchg
push
shrb
mov
insl
lods
movsl
pop
mov
lret
cli
mov
shll
mov
insb
jae
lods
mov
mov
xorb
and
jb
scas
adc
lahf
cmp
add
xor
mov
xchg
xor
movsb
push
xchg
push
stos
push
pop
pop
cmp
xchg
or
xchg
data16
incb
idivl
negb
or
pop
scas
push
and
mov
stos
pop
inc
mov
bound
fimuls
adc
or
add
sahf
jmp
int
ret
mov
jbe
shlb
mov
loopne
pop
cltd
lret
mov
loopne
popf
or
inc
lea
sbb
xor
xchg
jge
lods
pushf
mov
movb
cmp
sbb
scas
out
add
pusha
xor
repnz
sarl
mov
insl
add
cltd
dec
out
dec
fildl
inc
pop
sbb
pop
jb
dec
fisubs
lock
sub
and
popa
cmp
movsl
insl
and
and
xchg
mov
push
or
rcrl
xchg
sub
mov
ja
or
sub
outsb
push
xchg
xchg
popa
xchg
out
dec
cmp
push
es
cmp
cmp
popa
cmp
mov
push
dec
jmp
sbb
js
dec
enter
sbb
imulb
sub
gs
xchg
jge
nop
sub
adcb
lret
cmp
sarl
aam
jmp
pop
in
inc
aas
mov
cmc
out
in
or
mov
jnp
lods
sahf
mov
in
or
mov
inc
jnp
out
or
inc
add
pinsrw
sti
ljmp
es
call
shrl
jmp
or
shrb
daa
rcrb
push
stos
insl
jmp
dec
push
in
adc
cwtl
repz
pop
jmpw
dec
ds
mov
jne
in
ret
jo
ljmp
push
mov
mov
xchg
mov
hlt
lahf
mov
jne
cld
scas
mov
pop
aam
sbb
into
cltd
cmp
lea
dec
xor
and
push
ds
int3
sbb
mov
cs
cmc
nop
adc
sbbb
ljmp
pop
jle
cwtl
imul
popl
fwait
mov
mov
int3
mov
cli
pop
bound
mov
push
mov
mov
mov
jns
rol
orb
jno
adc
rcll
sub
loop
xor
mov
es
mov
cmp
adc
inc
ljmp
out
jge
testl
dec
int3
sbb
lret
jge
push
adc
push
daa
push
dec
jae
fiadds
xorl
mov
ljmp
stc
xor
cwtl
inc
addr16
jg
dec
xchg
push
repnz
or
push
cmp
js
push
push
jg
pop
in
xchg
jge
icebp
das
or
hlt
lds
xor
dec
aad
cmp
int
adc
push
stos
cmp
sub
in
push
bound
mov
cmp
adc
mov
push
mov
mov
test
outsl
cmp
mov
pusha
xchg
sbb
shrl
fisubs
js
mov
mov
imul
jno
ds
push
and
dec
arpl
and
pop
mov
jp
test
pop
and
cmp
ds
adc
loope
or
fsts
add
sub
les
xchg
sub
sbb
mov
push
inc
sub
movsb
sahf
xlat
mov
loop
lds
fsub
xchg
js
xchg
int3
insl
fstp
jae
inc
fldt
push
xor
add
pop
push
movsl
xchg
xor
in
outsb
xchg
ljmp
jmp
mov
mov
jle
aad
inc
sbb
cmp
adc
xor
fistps
lret
repz
mov
stos
mov
sbb
popa
aas
fidivrl
ret
sub
xchg
sbb
pushf
lds
sbb
mov
dec
roll
sbbb
mov
pop
daa
mov
cld
fldenv
loop
fwait
push
fs
push
mov
dec
mov
notl
cmp
lahf
out
cmpl
int3
loopne
push
ja
shrb
dec
rorb
jnp
or
leave
add
movsb
xchg
jle
xlat
mulb
xchg
fdivs
mov
stc
adc
jae
pusha
pop
in
adc
test
mov
inc
jecxz
dec
hlt
ja
mov
adc
ja
or
repnz
xor
xchg
mov
adc
or
inc
xor
mov
imul
push
scas
adc
adc
jb
repz
ret
xchg
jl
fisubl
sbb
call
push
ljmp
mov
into
into
fdivrs
int3
insb
sub
pop
ret
xchg
sbb
sub
fiaddl
add
add
mov
and
inc
adc
test
ljmp
loopne
jno
push
xchg
sub
lods
loope
data16
mov
sub
push
jmp
insb
pusha
cli
pop
cmp
cltd
sub
fucomi
js
dec
fstps
mov
dec
jge
cmp
xlat
clc
inc
mov
jne
and
bound
shrb
andb
pop
mov
das
into
pop
and
aad
loopne
jmp
sbb
insb
jge
scas
mov
mov
push
pop
mov
je
hlt
mov
jmp
cmp
xor
jge
das
iret
leave
int
pushl
std
inc
dec
fistl
xchg
jle
cmp
mov
jae
and
or
aam
out
mov
arpl
frstor
and
fistpll
rcr
fcoml
cmp
push
imull
clc
outsb
in
mov
add
fsubrp
push
jge
jo
pop
movsb
ds
daa
push
test
sbb
in
lahf
lret
add
sbb
push
mov
aaa
adc
adcl
cmpsl
out
lea
or
dec
lock
in
fwait
pop
stos
cwtl
push
mov
cmc
insb
jg
notb
add
fcompl
inc
mov
or
rcl
sbb
adc
sub
pop
into
cwtl
dec
inc
mov
subb
mov
repnz
add
mov
xchg
mov
mov
jns
push
jns
push
adc
xchg
add
idiv
scas
cwtl
gs
cli
into
push
xchg
je
aaa
cmp
pop
jne
int
outsb
mov
mov
cmpsl
xchg
sbb
mov
mov
into
xor
das
call
pop
dec
inc
mov
repnz
shll
stc
test
push
sbb
cmp
adcb
push
shrb
cmpsb
popf
push
adc
push
dec
sbb
sub
lahf
xchg
xchg
push
ljmp
inc
mov
add
shll
shl
addr16
dec
repnz
filds
mov
mov
pusha
or
ffree
mov
push
inc
int
imul
subb
pop
lahf
jle
rcl
sbb
sbb
xlat
adc
ds
movsl
push
jmp
lcall
out
sarl
daa
sub
xor
clc
pop
cmp
pop
add
adcl
bound
and
shlb
mov
xchg
aas
stc
andl
stos
pusha
cmpb
das
nop
cmp
dec
mov
mov
pop
mov
je
shlb
icebp
iret
ret
jae
std
mov
sahf
mov
movsl
sbb
cmpl
fdivrl
xchg
cmp
clc
lods
jle
shl
imul
fistpl
fs
xlat
xchg
aam
jo
push
lods
push
xor
mov
xor
enter
cmc
or
xor
pop
dec
dec
das
push
push
ret
adc
lret
dec
idivl
xor
shl
sbbb
test
dec
shll
dec
popf
pop
hlt
js
test
inc
sub
mov
pop
cmp
in
jb
test
test
pop
mov
adc
in
dec
adc
adc
push
pop
addb
cmp
pop
inc
mov
roll
jmp
mov
push
or
insl
xchg
aad
or
stc
sub
jp
ja
sub
int
or
dec
repnz
fisttpll
pop
xchg
dec
cli
dec
jbe
add
int
xchg
xchg
push
pop
scas
push
and
inc
push
in
pop
mov
iret
lods
xchg
xchg
stos
lock
in
xchg
dec
insb
popf
xor
mov
mov
es
popf
mov
icebp
mov
dec
enter
stos
scas
dec
test
lret
js
out
cmp
and
mov
in
jl
je
fwait
sbb
cmp
je
dec
int
mov
push
push
loopne
dec
inc
dec
or
aad
loop
xor
aam
jecxz
bound
inc
rorb
sbb
popf
or
xor
pop
enter
mov
dec
xor
jmp
mov
sbb
fldt
movb
xor
fsubp
leave
stc
lea
aaa
add
test
xor
scas
popa
xchg
mov
mov
aad
sub
les
push
adc
xchg
aam
shll
scas
std
cmpsb
rorl
mov
into
leave
enter
cmc
mov
int
mul
dec
pop
mov
shlb
imul
lcall
dec
ret
in
push
xor
jecxz
fldenv
mov
jmp
in
negl
dec
and
sbb
inc
inc
sbb
mov
cli
fpatan
outsl
mov
filds
mov
xchg
xchg
mov
movb
adc
mov
lock
lods
inc
cli
or
cli
or
adc
cmp
push
insb
ficompl
lcall
push
fisttps
mov
js
daa
inc
xchg
dec
popa
push
js
loop
dec
sbb
popa
inc
mov
insb
add
jl
inc
sbb
inc
call
test
push
xor
jno
je
pop
enter
icebp
lea
dec
add
mov
and
movsb
and
jae
imul
dec
fiaddl
jl
cli
adc
cwtl
sub
sub
outsl
dec
mov
add
lock
cli
rcl
jo
xor
out
xchg
divl
inc
inc
andl
pop
jo
inc
sbb
mov
stos
push
fisttpl
push
and
lods
mov
pop
std
flds
je
cmp
sti
inc
decb
sub
dec
sub
inc
call
sub
add
push
lock
aas
in
loop
sub
test
clc
jg
sub
fwait
les
pop
cmp
scas
pop
or
imull
inc
xchg
mov
lods
jmp
ljmp
push
ret
add
lahf
outsb
adc
sbb
jmp
push
jle
orl
pop
iret
pusha
push
dec
push
add
test
pop
sub
gs
mov
sub
mov
pop
xchg
stos
cmp
imul
jp
mov
cmp
cmp
lods
pushf
test
adc
popa
out
push
inc
cmp
and
gs
jmp
add
fidivs
lods
mov
sub
mov
rolb
cmpsl
mov
adc
ret
pop
je
gs
aad
ds
insl
pop
push
in
lods
sbb
sub
aas
and
mov
dec
cmc
insb
cwtl
jge
add
stos
addr16
jb
std
and
lds
add
loopne
mov
mov
cmp
push
mov
mov
push
fisttpll
divb
gs
ficompl
fst
lret
lcall
movsl
hlt
sub
ret
sub
lods
sub
sub
and
pop
sub
sub
mov
jle
push
nop
sbb
mov
xor
sti
mov
fdivr
mov
fmull
rcll
lods
mov
fcompl
movsl
adc
add
xorl
adc
es
inc
imul
adc
cmp
or
adc
cmpsl
pop
test
mov
cld
fsubrp
sub
addb
imul
xchg
xlat
ret
xchg
ljmp
fidivrs
xchg
dec
fldcw
shll
popf
adc
add
or
lea
or
fs
dec
inc
rorb
into
cli
pop
test
rclb
ret
dec
mov
or
pop
jl
je
jmp
ret
nop
push
mov
paddq
sbb
sub
adc
push
sbb
sbb
sub
cmpsb
push
lret
mov
jmp
test
mov
jg
mov
test
imul
mov
mov
enter
xchg
ds
pop
mov
adc
pushf
adc
das
mov
or
and
pop
sbb
out
sahf
lret
cmp
push
pop
int
scas
inc
dec
pop
push
daa
aam
cmp
loop
fwait
roll
add
pop
cmc
xor
cli
insb
mov
and
dec
pop
sub
nop
pop
ret
inc
xchg
sub
dec
cmc
lods
or
arpl
das
pop
aad
out
jl
pop
adc
jnp
scas
push
ret
mov
pop
inc
mov
push
aas
test
cld
jb
push
lcall
fldl
inc
lcall
push
sub
test
or
call
jecxz
fstpt
cmpsl
jo
add
push
cmpsb
jmp
scas
ja
std
jl
mov
and
fnstenv
lock
rcrl
mov
jg
push
fmuls
xor
push
sbb
xor
pop
hlt
movsl
add
lcall
mov
or
je
mov
les
aas
rep
test
push
sbb
out
mov
mov
fs
cmp
or
aad
shlb
out
adcl
cli
xchg
lds
jno
xor
pop
push
sub
jb
jbe
cmpsl
mov
orl
test
es
mov
xchg
cwtl
fnstcw
lds
in
ja
inc
sub
pop
pop
push
pop
and
aaa
push
sbb
out
fcoms
xchg
insl
mov
jl
out
je
or
ror
test
mov
dec
rcl
mov
xor
mov
outsb
xchg
cwtl
fcoml
inc
sub
pop
dec
pop
mov
in
loopne
push
shll
mov
or
insb
dec
dec
jno
test
inc
push
pop
push
lods
in
in
rcrl
jmp
imul
and
inc
mov
adc
loop
jno
pushf
and
pop
fldl
fdivr
mov
and
rorl
cwtl
jp
enter
decb
lret
or
mov
je
ror
iret
ret
sub
gs
dec
pop
cmpsb
jnp
pop
lea
jns
inc
xor
sub
jp
call
push
jecxz
cmpsb
mov
cmpl
ret
outsb
fs
jb
inc
fistl
scas
pop
or
sbb
sbb
jp
mov
cmp
shl
fimuls
out
xor
out
movsl
imul
iret
cs
ret
adc
scas
pop
incb
rolb
add
pop
rcr
jns
inc
xchg
addb
icebp
icebp
sbb
aam
test
cltd
cmp
and
jle
mov
outsw
push
xor
sbb
mov
sub
mov
and
mov
daa
fimuls
adc
icebp
and
je
popa
inc
shl
push
pop
cmp
pop
rcll
mov
imul
repz
or
add
xchg
xor
push
dec
mov
cmp
jmp
stc
or
jo
dec
inc
inc
add
test
cmpsl
sbb
cmp
stos
in
mov
stos
push
aam
and
sub
xor
cmp
in
je
and
test
sbb
arpl
or
jae
loop
xor
or
xchg
cmp
dec
fists
pop
jle
fcoms
ja
mov
dec
lock
cs
daa
push
es
push
push
lods
add
sub
adc
xlat
push
and
shl
or
jge
fdivs
mov
or
and
adcb
add
add
sub
loop
popa
xlat
fstpl
mov
stc
jae
xchg
enter
mov
sbb
out
xor
xchg
sahf
insb
divl
adc
int3
or
jae
movsb
stos
cmpsl
mov
adc
insl
add
xlat
subl
clc
fcmovb
jl
adc
jns
mov
sbb
aas
int3
xchg
sub
xor
es
fsubl
divl
inc
jnp
xor
pop
mov
mov
outsl
scas
loope
vcvtsi2ssl
inc
pop
ja
pushf
scas
fs
imull
imul
loope
mov
adc
xchg
and
insb
mov
imul
jno
xchg
and
hlt
xchg
nop
xchg
out
xchg
cmpsl
jmp
adc
loope
loope
hlt
dec
call
aad
add
add
leave
imul
lahf
int
mov
sbb
cwtl
test
popa
icebp
sbb
cwtl
add
cmp
icebp
add
jg
sbb
aam
das
out
js
pusha
cmp
fcomi
cmp
negb
mov
jmp
imul
out
lahf
sub
xorb
addr16
rorb
push
daa
fmul
xor
inc
icebp
subb
xchg
sbb
mov
adc
lahf
and
mov
pop
mov
cmp
out
lods
movsb
jne
sub
ds
or
sbb
sub
loop
call
cs
pop
mov
mov
test
dec
sub
ljmp
hlt
cmp
jle
test
daa
xor
addr16
outsb
sub
cld
mov
sub
out
fnstenv
jp
std
inc
cld
sarb
addr16
inc
lret
je
aad
push
arpl
lods
jp
and
dec
sub
cld
lock
xchg
insl
stc
xchg
int
mov
movsb
push
outsb
jle
iret
push
xchg
sub
in
push
cmpsl
mov
jg
adc
cmp
fdivl
xchg
stos
outsb
cld
cli
push
fildl
jg
outsl
dec
pop
xchg
push
sbb
push
aad
sub
pop
pop
or
lods
mov
mov
aaa
sti
int
jb
push
loopne
or
and
adc
bound
aad
xchg
jbe
or
add
xchg
scas
jae
lods
dec
pop
test
adc
mov
mov
inc
pop
pop
mov
fldt
inc
push
imul
push
nopl
add
stc
sub
mov
and
dec
mov
or
push
sub
push
pop
mov
mov
imul
inc
addl
and
hlt
insb
rclb
jo
pop
out
lahf
or
mov
mov
das
jle
sub
test
xchg
mov
mov
inc
add
arpl
and
xor
jle
fmull
fists
lahf
jns
std
adc
cmp
pop
pop
aam
push
fnstenv
inc
mov
scas
pop
xchg
push
or
repz
dec
js
cli
xor
add
pop
add
sbb
mov
fadds
shl
mov
ds
insb
push
xor
dec
bound
mov
ret
out
test
mov
adc
js
mov
gs
inc
clc
sub
adc
fsubl
sti
daa
notl
mov
jno
and
outsb
jb
inc
loopne
push
mov
mov
push
mov
mov
add
sbbl
and
scas
bound
lret
shrl
xor
mov
int3
xor
push
cmp
adc
pop
add
mov
adc
into
sarb
mov
pop
adc
data16
adc
cli
push
sahf
imul
push
jo
mov
and
movsl
mov
dec
out
jns
enter
and
mov
rorl
push
daa
inc
push
ja
add
push
fiadds
push
lret
push
test
push
mov
xor
fistpl
repz
inc
mov
push
xchg
sub
adc
inc
inc
cmp
ret
outsl
add
sahf
cli
cmp
data16
xor
pushf
aad
add
inc
imul
shlb
in
hlt
mull
pop
loope
xor
out
pop
mov
cli
mov
aad
cmp
pop
inc
pop
scas
movsb
pop
in
push
xchg
loop
mov
push
push
and
hlt
popf
mov
sbb
call
mov
andb
mov
jg
mov
inc
fnsave
push
jne
mov
add
bnd
fiaddl
xchg
lea
push
cmpb
sub
dec
push
fsubs
into
sbb
cmpl
shlb
push
mov
clc
out
insl
sub
cmp
movsb
pop
mov
mov
xorl
sbb
cwtl
insb
or
pop
adc
dec
dec
in
lods
arpl
imul
nop
lods
loopne
in
xor
inc
mov
test
or
mov
ljmp
xchg
mov
and
cmp
aad
or
xchg
xor
in
pop
mov
or
out
inc
mov
das
dec
test
dec
addr16
cmpl
add
in
out
mov
xor
xchg
pop
out
or
lea
xor
jb
mov
mov
jge
std
ljmp
iret
pop
into
mov
dec
aad
ret
cmp
outsl
incl
mov
mov
ljmp
and
in
icebp
jbe
les
pop
ret
movsl
add
cmpsb
sbb
add
in
xchg
aas
mov
jge
mov
mov
sub
xor
jp
xor
test
xchg
mov
pop
movb
sbb
dec
jo
mov
movsb
gs
cwtl
xor
out
jns
movsl
adc
shll
mov
sti
lret
lret
repnz
loopne
loope
in
dec
xor
out
hlt
push
jl
lock
ret
data16
dec
add
add
or
outsl
jmp
popa
ds
mov
dec
or
out
cmpb
insb
iret
pop
les
sbb
js
jae
ljmp
ss
push
dec
hlt
into
cmp
in
adc
cmpsl
push
push
test
push
aaa
ja
clc
fwait
std
push
cmpsb
outsb
xorb
inc
lea
imul
stos
jae
dec
aam
jp
inc
sbb
jecxz
sahf
test
lods
imul
mov
sub
sbb
push
sub
cmp
or
pop
fwait
sbb
xchg
dec
ds
or
fsubl
inc
ds
adc
fidivl
nop
loope
daa
fldenv
insl
pop
inc
lods
ffree
stos
negb
sub
push
ret
test
jno
aaa
jne
adc
and
aas
aas
lret
xor
and
inc
cmovnp
lcall
cmp
pop
dec
xchg
pop
sti
xchg
loope
add
lea
and
dec
sbb
and
add
lods
mov
pusha
jmp
mov
imul
or
xlat
xchg
jmp
sbb
inc
push
std
bound
jp
aaa
xor
ljmp
add
sub
int
mov
cmpsl
jg
push
testb
mov
mov
subl
dec
mov
pop
scas
imul
push
dec
es
ja
shll
mov
cmc
scas
jno
std
daa
xor
cld
cmpsb
fidivrl
sub
push
sahf
loopne
jo
adc
mov
jo
test
inc
andl
icebp
cmpl
push
in
xchg
imul
scas
nop
popa
jae
jbe
pop
aas
pushf
ret
xchg
sbb
je
mov
sarb
add
mov
and
gs
scas
inc
pop
lret
mov
or
mov
sub
sub
xlat
sub
int3
and
stos
pop
or
inc
mov
ja
outsb
sbb
sub
push
ret
mov
xor
and
and
sbb
mov
and
pop
enter
cmp
xor
lret
shl
adc
or
int
push
fidivrl
lcall
add
mov
xchg
push
push
sub
jne
cmp
jo
mov
push
cmp
lock
data16
sti
aaa
rcl
xlat
aam
fisttpl
iret
and
mov
dec
inc
sub
and
or
mov
sub
inc
dec
les
mov
cmp
rcrb
adc
outsb
xchg
cli
push
in
stc
std
inc
leave
push
sub
roll
dec
inc
xor
mov
call
inc
mull
mov
cmp
lods
add
sub
push
cmc
je
and
mov
adc
dec
add
cs
mov
addr16
pop
ret
in
test
shll
xlat
mov
sub
rcl
ret
out
lods
lock
mov
ds
mov
sub
cli
mulb
scas
mov
sub
lret
mov
push
cmp
fdivrs
mov
iret
pop
outsb
mov
lods
xchg
lret
adc
cmp
pop
shll
cmpsl
xor
movsl
sub
out
stos
es
pushf
aad
je
adc
mov
gs
jae
aad
test
mov
jle
data16
cmp
inc
and
pusha
jne
fnstcw
loope
lods
and
ret
sbb
adc
lods
mov
xchg
cli
ror
xor
pop
mov
jg
pop
ficomps
cld
push
push
popa
mov
aad
das
orb
mov
jb
lods
lds
jnp
lret
test
adc
xchg
hlt
pop
daa
pop
pusha
and
push
jl
imul
lret
mov
mov
in
stos
lock
sbb
cmp
cmp
imul
rorl
xchg
jle
dec
pop
cwtl
ljmp
jae
fidivrs
popf
sub
movsb
cmpsb
jbe
adc
ljmp
ja
sahf
push
fiaddl
popf
sbb
and
push
mov
roll
es
aad
ret
adc
test
sbb
ja
jl
xor
dec
testb
sub
mov
jl
mov
push
fldcw
mov
sub
cs
stc
or
xchg
jbe
lret
repnz
push
sar
adc
shrl
mov
test
jne
psrld
gs
xchg
cmp
sub
cmc
jnp
lods
mov
lods
lds
and
loop
cld
scas
xor
leave
scas
push
pushl
xlat
bound
decl
insl
sbb
push
stos
clc
sahf
andb
jmp
clc
stos
jbe
inc
out
ds
outsl
cmp
push
daa
inc
jmp
leave
mov
cmp
xor
mov
cmp
sub
sub
and
xor
pop
call
xchg
push
out
pop
xchg
cmp
xlat
lret
cmpsl
lret
ss
jp
addb
jmp
lret
cmpsb
mov
fmulp
test
aaa
js
xchg
mov
cld
ret
fistl
push
mov
adc
lods
fs
cmp
add
and
mov
pop
enter
cmp
aaa
jnp
jmp
adc
mov
cmp
dec
mov
xchg
les
sarb
sbb
push
lahf
test
add
movsb
insb
dec
imul
loopne
or
scas
ficomps
loop
add
jne
sahf
and
mov
out
fmul
mov
mov
shl
or
pop
lds
sbb
lods
leave
jge
stc
cmpsb
mov
cmc
ret
outsb
pop
sub
shlb
mov
pop
negb
push
cwtl
mov
popf
faddl
out
cmc
mov
mov
xchg
mov
inc
mov
adc
jae
dec
sahf
xor
incl
xchg
outsl
mov
add
sub
push
ljmp
outsb
hlt
jmp
repz
mov
add
jae
xor
or
jp
dec
adc
push
mov
lea
mov
rclb
mov
and
push
jno
jbe
mov
cmpl
sti
adc
push
scas
mov
mov
mov
popa
dec
mov
push
push
jns
adc
scas
pop
and
movsl
sti
mov
int3
cltd
out
xchg
cld
or
std
rorl
xchg
adc
mov
sub
clc
lret
test
mov
mov
mov
xchg
leave
aaa
adc
push
stos
sbb
jno
sbb
rol
add
dec
clc
test
and
jmp
xchg
test
je
xor
fwait
jns
push
test
not
jns
outsb
daa
and
popf
adc
jge
in
push
cmp
shlb
push
shrl
insb
inc
lea
adc
jbe
addr16
dec
and
in
bound
add
enter
jp
cmp
mov
mov
out
out
cltd
xchg
cld
subl
in
daa
pop
mov
pop
mov
pop
outsb
in
std
sub
jns
popf
mov
enter
sbb
sbb
sbb
dec
mov
test
notl
cld
adcb
xchg
xor
mov
add
mov
dec
pop
movsl
mov
jp
and
mov
mov
clc
mov
adc
icebp
dec
data16
vmovq
arpl
push
mov
jp
pop
mov
loopne
loopne
mov
xlat
mov
loop
and
mov
icebp
lods
fists
sub
stos
sbbb
sub
and
addr16
mov
add
xlat
mov
or
out
ret
sti
mov
lods
cmpsl
mov
ljmp
cmc
mov
shrl
jo
ret
cmp
push
mov
imul
mov
inc
xchg
in
stc
adc
sahf
ds
ljmp
push
ret
jb
jbe
mov
xchg
stos
jno
call
mov
aaa
mov
pop
pop
into
mov
jecxz
dec
jl
push
adc
js
js
pop
rolb
cmpsb
mov
mov
mov
loope
xlat
sti
mov
xor
inc
das
loopne
ret
push
or
inc
sbb
rcrl
xchg
loop
xorb
push
call
int
add
mov
pop
ds
lock
cmp
sbb
cmp
std
pop
rclb
lret
inc
mov
ret
test
test
aam
repnz
add
lods
popf
fsts
or
pop
loope
shll
xlat
out
dec
add
adc
adc
xor
icebp
xchg
add
and
sbbb
addr16
out
xor
inc
xchg
int
cs
sub
pop
xor
jl
xchg
frstor
lock
cwtl
sub
nop
add
aaa
test
inc
incb
psraw
popa
outsb
add
mov
je
mov
push
ret
mov
inc
and
pusha
adc
cmc
lods
cli
sbb
adc
add
dec
jae
addl
rol
pop
jae
sub
adc
fcmove
pop
es
mov
imul
aam
scas
rcrb
mov
xor
aad
push
mov
pop
and
js
sbb
lcall
std
in
dec
ds
arpl
and
dec
gs
es
fdiv
data16
loopne
ljmp
lods
pop
popa
sub
loop
push
and
mov
and
sbb
jns
cmp
add
fildl
loopne
fldl
hlt
int3
adc
add
cmc
imul
lret
out
jg
sbb
mov
mov
pop
xorb
sbb
or
loope
jge
xchg
loopne
arpl
pop
inc
add
adc
gs
sub
andb
and
es
cld
daa
loopne
jbe
imul
test
cmp
rolb
and
into
sahf
arpl
mov
xor
xor
ljmp
jl
cltd
jns
and
outsb
ret
cmp
jg
lods
fs
adc
fcom
out
cltd
lret
cmp
hlt
pop
aaa
sub
dec
bound
enter
dec
lock
rcpps
ds
fsubrl
pop
push
out
xchg
sarl
insl
outsb
cmp
fisubs
cmpl
stc
xor
leave
lret
xchg
mov
fisttpl
dec
rcr
mov
sbb
clc
push
scas
fwait
xor
push
dec
lock
mov
fistps
and
sub
add
pushf
inc
sarl
jp
dec
dec
cs
mov
shrb
push
or
mull
sbb
sbb
push
adc
lahf
cmp
xlat
aaa
stc
repnz
pop
sbb
in
fs
push
mov
and
mov
xchg
pop
mov
faddp
cmc
divl
cmpsb
sahf
aaa
sbb
jmp
push
lds
testb
sbb
das
jae
je
in
je
pop
or
mov
outsb
mov
cli
loop
mov
into
inc
pop
loop
pop
push
and
loop
jge
je
icebp
dec
push
sbb
jno
jle
push
insb
mov
loopne
ljmp
divb
lahf
adc
lods
xor
aad
mov
xchg
mov
pop
add
dec
test
sbb
cmp
aaa
das
push
dec
add
and
daa
dec
sub
inc
movsb
jno
xchg
and
lcall
push
mov
mov
fbstp
adc
nop
aam
mov
pop
sub
test
xchg
push
push
xlat
and
jl
and
daa
push
arpl
or
pop
pop
clc
js
movsb
clc
aas
out
xor
xor
aad
or
mov
lods
addr16
sub
dec
add
push
jnp
lahf
sbb
cmp
inc
mov
xchg
dec
cmp
into
mov
dec
pusha
sub
decb
sub
mov
fcomps
jecxz
mov
jae
push
fcoms
clc
fdivs
js
in
pop
flds
cld
add
pop
pop
sub
xchg
fnstsw
jne
mov
adc
add
inc
fcoms
ja
jecxz
cmp
or
inc
in
inc
jp
mov
add
sti
or
or
sti
add
cli
fmulp
mov
push
bound
dec
pushf
sarb
lds
cmp
sub
mov
adcl
leave
test
jo
pxor
addl
nop
clc
xor
jmp
cmp
movsl
in
jge
mov
mov
add
push
adc
and
sbb
mov
inc
je
dec
cmp
mov
fucomip
jne
scas
cmp
pop
or
movsb
mov
xlat
hlt
sub
sbbl
adc
sbb
shlb
xor
fwait
mov
rolb
jno
dec
cld
rcrl
jecxz
jbe
jne
add
aas
loopne
mov
cmp
jb
sub
or
das
jno
cmp
movsl
or
or
push
or
mov
xor
ljmp
xchg
mov
imull
cmp
push
shlb
jp
mov
repz
stc
mov
pusha
cwtl
fstl
subl
mov
mov
and
pop
mov
out
mov
std
adc
arpl
jae
sbb
clc
xor
das
adcl
int3
push
cmp
pushf
outsb
out
sub
shrb
scas
fstl
lret
mov
repz
icebp
stc
repnz
mov
cmp
in
xchg
into
mov
dec
scas
bound
cmp
int3
mov
int
or
js
add
xchg
jp
cmp
cmp
pop
push
fsubs
stos
in
or
jne
or
and
cmp
add
lods
cmp
stc
js
pop
fwait
jle
in
movsb
push
sbb
sub
or
jne
xchg
push
data16
lahf
sahf
mov
bnd
out
daa
ja
mov
out
in
xor
int3
in
gs
jnp
sbb
dec
jno
imul
push
cltd
push
xchg
imul
mov
push
ds
jb
aaa
mov
or
in
stc
icebp
arpl
inc
imul
mov
inc
add
xchg
movsb
orl
or
mov
mov
iret
cmpsb
mov
xchg
and
xor
inc
pusha
enter
stos
xor
mov
stos
pop
and
xor
mov
jp
fwait
sub
xor
stos
shll
aas
add
cld
fwait
xchg
sbb
dec
mov
insl
cmpsb
popa
push
mov
das
xor
push
pop
push
mov
jmp
mov
pop
psubq
push
dec
xor
je
xchg
aad
dec
rcrl
aam
or
ds
cmp
pop
inc
movsb
psllw
push
jno
ja
push
mov
loope
scas
xchg
pusha
lret
push
test
clc
jmp
clc
outsl
cmc
mov
outsb
add
add
xchg
dec
daa
pop
test
push
mov
push
mov
int
stc
cmp
dec
outsb
out
jb
repnz
out
jmp
in
pop
inc
shr
mov
pop
pop
call
xchg
enter
hlt
sahf
pop
jl
jp
mov
push
stos
jnp
cmp
mov
xchg
adc
mov
out
and
adcb
mov
lods
test
fsubrl
test
in
xchg
lret
repnz
lret
mov
pop
pop
or
xchg
iret
sub
nop
cmp
dec
pop
popl
inc
lods
cmpsl
jne
aaa
out
or
int3
repz
cwtl
dec
cmp
mov
gs
pop
rorl
aad
inc
cwtl
adc
test
xor
in
movb
dec
xor
inc
subb
mov
dec
lds
test
xchg
or
cmp
pop
gs
lods
jmp
sub
xchg
and
bound
shll
loop
mov
out
stc
pop
mov
cmp
mov
xchg
lcall
pop
xor
ss
mov
insb
cmpb
adc
test
mov
cmc
xor
imulb
stos
mov
sarb
mov
dec
in
and
out
dec
es
ret
cmp
or
dec
xchg
in
xor
popf
outsb
cli
or
inc
fdivs
mov
mov
or
sbb
pop
xor
xchg
in
push
repnz
jne
int3
dec
stos
rol
xor
cmp
cmpsb
sbb
push
sbb
adc
sarb
aam
xchg
out
jmp
xorb
sub
call
mov
lret
add
mov
jb
rolb
scas
fsubrs
xchg
test
jg
add
mov
es
fbstp
dec
xchg
mov
or
jno
jmp
jbe
inc
into
pop
push
xor
mov
jo
stos
negl
cmp
or
push
aas
jno
xor
rorl
mov
sub
ja
enter
mov
jecxz
fists
jnp
mov
rorb
aaa
jge
dec
lods
push
pop
add
jp
inc
sub
aad
stc
and
mov
in
shlb
leave
xchg
xor
repnz
out
jno
xchg
repnz
lods
xor
cmpl
xchg
in
lock
jl
loope
call
ss
or
in
ljmp
les
lods
xchg
insb
stc
ret
outsl
fs
xchg
stos
or
cwtl
popa
xor
xor
pop
mov
lret
std
incb
in
cmpsb
clc
or
lcall
lret
int3
jne
and
pushf
shlb
test
fsubrl
outsl
add
ds
mov
aad
cmpsb
movsl
fidivl
int3
jmp
out
ljmp
xchg
or
es
test
in
lock
xor
test
add
add
jmp
inc
scas
mov
stos
orb
cld
popf
aad
adc
sub
jge
mov
dec
int3
sub
dec
or
mov
jns
xor
das
mov
mov
imul
call
adc
lcall
pusha
js
pusha
mov
mov
jle
inc
std
mov
gs
jge
inc
subl
inc
pusha
jnp
and
mov
or
int3
adc
stc
mov
push
mov
aam
sub
adc
fstl
arpl
mov
pop
out
or
mov
les
and
cltd
pop
lods
popf
lods
scas
xchg
pop
cli
push
ss
or
bound
aas
jecxz
mov
lret
imull
fistps
lods
shlb
sbb
inc
sti
push
mov
aad
mov
mov
adc
push
lea
test
repz
pop
inc
cmp
shlb
in
shll
cmp
jo
xchg
jg
lea
jnp
xor
push
xchg
daa
mov
icebp
insl
jnp
test
add
push
add
dec
fwait
jb
dec
rcrl
sbb
rcl
sbb
pop
cmpsb
and
stos
xor
inc
xor
repnz
mov
rcll
stos
stos
mov
idiv
sbb
mov
or
and
sub
insl
bound
movsl
movsl
pushl
stos
sub
xlat
jbe
cmp
xlat
add
pop
shlb
inc
movb
sarl
repnz
int
mov
subl
scas
sub
mov
stos
out
lret
push
lret
dec
leave
mov
xor
popa
xchg
cmpsb
iret
lods
jbe
push
rcll
cmp
aam
clc
and
subb
lds
mov
and
sub
xchg
mov
clc
mov
imul
in
dec
mov
into
es
std
in
por
xor
idivl
jae
in
test
scas
mov
stc
dec
fsubrs
mov
adc
cmpsl
sbb
xchg
ret
or
nop
inc
mov
sub
in
xor
idivl
inc
out
popf
or
jb
int3
lcall
xchg
and
xor
cltd
or
and
dec
repz
add
repz
int3
inc
adc
pop
in
test
lea
mov
lcallw
mov
dec
adc
xchg
mov
mov
addb
sbb
and
sub
xchg
inc
push
push
cwtl
iret
call
xchg
js
iret
or
repnz
xchg
cmpsb
cmp
ss
es
sbb
test
or
loopne
mov
and
gs
popa
jle
push
ds
pop
jl
mov
stos
adc
jbe
loopne
hlt
mov
jnp
jae
jnp
and
loop
sbb
outsb
lret
push
push
sub
inc
loopne
std
icebp
cmp
or
rolb
pusha
ficoml
mov
dec
xchg
js
pop
ss
pusha
and
inc
cmp
mov
lcall
bound
sbb
insl
sub
inc
jg
xor
cwtl
xor
sbb
push
addr16
mov
sbb
sti
scas
aam
jecxz
pop
into
pushf
xchg
xor
gs
cmp
sbb
outsb
insb
mov
inc
in
fwait
push
stos
movsl
mov
mov
mov
xchg
imul
pop
push
loopne
and
inc
daa
out
ret
lds
push
outsl
sbb
xchg
aaa
jl
lds
xchg
insl
sbb
mov
outsl
jns
aad
icebp
pop
popa
sti
in
ds
imul
jge
cmpsb
mov
xor
bound
mov
lcall
imul
lea
ja
enter
xor
call
mov
lods
mov
cli
jo
jnp
mov
jne
inc
icebp
rcrl
jno
adc
aad
cld
out
jno
call
or
sub
outsb
jp
js
jbe
adcl
pop
bound
fildll
mov
ficompl
lret
lcall
xor
dec
shl
dec
je
imul
lods
push
aas
lods
out
inc
inc
mov
loope
pop
cld
jnp
sbb
addb
mov
ds
hlt
inc
inc
adc
vmovapd
ret
clc
sbb
mov
push
jecxz
dec
mov
mov
jmp
push
sarl
sti
sar
mov
pop
dec
mov
les
popf
xor
jae
outsl
xchg
out
fcomp
cmpsl
jo
std
jl
and
leave
in
adc
pop
fbstp
inc
jne
cmp
hlt
repnz
adc
fdivl
cltd
outsb
push
xchg
sub
jae
and
pop
push
ffreep
xchg
xor
or
sbb
rolb
int3
clc
push
rorl
cld
cmpsl
add
call
jae
jmp
cld
fdivr
push
fisubrs
out
je
cmp
xor
lods
cmp
arpl
das
gs
daa
out
repnz
mov
std
cmp
inc
xchg
xchg
shll
sub
fsubs
add
subl
mov
xchg
mov
in
sbb
jnp
add
dec
cwtl
out
test
xchg
in
push
iret
mov
pushf
mov
jno
stos
jb
xlat
insb
push
push
push
cltd
loop
jge
xlat
sarl
fcmove
sub
jae
xor
adc
or
cmp
mov
movsl
pop
imull
adc
fisttpll
nop
test
jg
push
add
jecxz
xchg
faddl
mov
pop
xor
pusha
sbb
repz
lret
arpl
out
das
push
or
push
bound
idivl
inc
ja
loopne
repnz
das
xchg
loop
jmp
cmpb
mov
xchg
sbb
inc
idivl
pop
int
mov
cmpb
pop
std
popf
xor
xchg
sahf
sbb
fs
jae
pop
push
rcr
aaa
repnz
lds
std
test
add
push
xlat
inc
outsb
dec
lock
add
into
push
sub
call
push
lret
adcb
or
and
insb
paddsb
aas
out
js
loope
dec
mov
push
mov
adc
enter
xchg
push
jne
pushl
inc
orb
ja
fs
cmp
int3
adc
popa
sub
jg
pop
mov
ss
jnp
imul
adc
mov
jo
insl
roll
lcall
out
in
popf
jb
bound
adc
fbld
shrl
jmp
std
lods
pop
xchg
shrl
ljmp
cmpl
inc
imul
dec
cmc
push
nop
push
mov
cmp
lea
jge
in
addb
jne
lret
iret
lock
and
das
dec
fmuls
mov
xchg
adc
push
rclb
dec
shll
out
loop
push
cmp
in
pop
push
ror
add
adc
xchg
mov
dec
jecxz
mov
mov
pop
imul
cwtl
cwtl
xchg
dec
and
in
imul
inc
repnz
bound
imull
ret
imul
push
scas
add
test
cmpb
rolb
scas
pop
push
dec
testb
jnp
inc
push
divl
clc
fsincos
cmpsl
xor
orb
pop
imul
jp
dec
insl
sub
jecxz
mov
call
fld1
jbe
pusha
push
outsl
test
xchg
aam
and
shrb
cmp
push
add
stos
mov
loope
shlb
cli
in
std
popa
out
jno
jbe
pushf
mov
xchg
xchg
jne
aam
mov
sub
xor
jnp
es
add
repnz
test
js
pop
cli
fisubrl
in
out
mov
in
and
xchg
add
inc
or
jle
test
push
fs
dec
mov
fdivrs
jle
mov
and
push
lock
cmp
loope
out
cs
or
dec
mov
jo
push
inc
pop
dec
xor
dec
pop
dec
lret
sub
out
ljmp
fstl
adcl
gs
fcomps
sbb
nop
push
push
xchg
mov
xor
pop
lcall
xchg
andb
ret
push
cs
ret
and
lahf
mov
xchg
pop
cli
stos
faddp
jnp
and
test
leave
sbb
fimull
mov
sub
adc
lahf
fdivrl
dec
adc
in
cmp
push
cmpsl
or
fsubs
inc
xor
xor
xchg
xor
pop
das
jg
mov
pop
or
mov
add
push
mov
arpl
push
sbb
mov
xchg
xor
dec
lahf
jnp
jb
in
scas
incl
insb
mov
filds
loope
outsl
adc
aam
jb
jmp
cmp
pop
mov
pop
arpl
mov
inc
xchg
movsb
out
inc
xor
mov
gs
idivb
loopne
gs
sub
adc
cmp
gs
mov
inc
js
dec
mov
mov
add
inc
aam
in
rcrb
or
push
jp
cmc
fidivrs
jg
pusha
ret
cmc
loope
push
push
dec
mov
clc
adc
add
clc
xor
addb
out
sub
adc
outsl
mov
push
mov
mov
xlat
divb
pop
pushf
jo
push
das
ss
dec
mov
cmc
dec
lea
fstpl
clc
adc
adc
dec
or
xlat
imul
or
inc
or
lds
fcomps
cs
or
jge
flds
xchg
stos
mov
fdivs
loop
dec
inc
cmp
pop
idiv
push
xor
gs
push
lahf
fcoms
sbbl
xchg
rcrb
mov
test
and
jecxz
cmpsb
jbe
lahf
mov
insb
call
imul
repz
sbb
test
sub
sub
push
loope
aam
in
push
jb
addr16
faddl
cs
popa
cvtps2pi
outsb
sti
pop
sub
movsb
pop
add
cwtl
xor
sti
je
inc
xor
outsl
movlhps
jnp
ja
rcll
lods
in
loopne
jp
xchg
xlat
sub
xchg
mov
xchg
push
repz
orl
icebp
aad
call
call
mov
xor
mov
add
insb
add
push
pop
stc
scas
outsb
fisubs
test
bnd
outsl
and
mov
adc
inc
aas
stc
lcall
std
mov
fisubs
push
mov
mov
idivl
and
sub
mov
in
jns
xchg
xlat
sub
fisubrl
mov
int
pop
lret
out
daa
pop
pop
cwtl
jae
sbb
and
stos
cmp
mov
lds
stc
xchg
inc
sbb
xor
jge
es
dec
sbb
je
mov
gs
sti
aad
xor
out
movsb
jecxz
mov
and
adc
fcoml
jne
add
mov
inc
and
jo
fbstp
inc
int3
loop
dec
inc
loope
movsb
shll
pop
inc
stos
pop
mov
stc
mov
out
jae
pop
cmpsb
lds
or
inc
adc
mov
inc
adc
mov
test
cltd
out
ljmp
xchg
repz
addr16
cmp
fnstenv
jne
mov
add
mov
lock
mov
mov
cmp
call
pop
shll
dec
cmp
data16
cmc
mov
adc
std
lcall
lret
sub
lahf
xchg
dec
fs
mov
test
mov
loope
mov
cmc
sahf
shlb
clc
jns
sub
data16
fnstenv
mov
fwait
xchg
imul
cmpsb
and
adc
ret
push
mov
mov
adc
jmp
arpl
js
adc
lock
push
aaa
insb
lret
int3
into
aam
push
jmp
pop
out
cli
lock
cmpl
or
stos
and
adc
test
lret
lods
and
or
aas
jae
inc
mov
jne
xchg
and
repnz
adc
rcl
iret
aas
dec
and
popf
push
and
jge
lret
xor
cmp
daa
pop
mov
mov
push
cld
sbb
aad
faddl
dec
mov
adc
lock
out
jp
inc
and
cld
xor
pushw
into
mov
popf
in
jnp
inc
lods
ret
push
mov
sbb
push
xor
xchg
imul
mov
jns
loopne
mov
daa
stc
xor
xlat
hlt
push
ja
fwait
shll
in
mov
jno
daa
mov
sub
push
cmpsl
xor
sbb
divl
push
sub
arpl
leave
push
fiaddl
push
jae
insb
movsb
add
xchg
jne
mov
cmc
pop
ja
push
push
insb
push
dec
adc
mov
inc
insl
add
and
mov
sbb
rolb
inc
add
sbb
pop
ffree
jg
or
push
loope
int
mov
pop
ret
mov
push
pop
std
fnsave
cmp
jl
ret
xlat
lea
xor
movsl
clc
xor
add
adcb
cmpsb
stos
mov
xchg
xchg
push
int
int3
jb
cmp
loop
leave
pop
xchg
xchg
jmp
out
dec
dec
inc
cmp
fcomps
push
push
inc
mov
pop
adc
push
cmpsl
stos
sbb
repz
test
add
nop
mov
mov
dec
pop
xchg
lds
and
add
ret
pop
dec
and
shr
xchg
mov
inc
repz
mov
sub
nop
std
ss
fldenv
repz
je
sub
mov
in
repz
jnp
mov
cs
sahf
roll
test
push
xchg
fcmovu
or
fcompl
push
ds
in
inc
and
fidivl
jns
aaa
cwtl
adc
dec
push
mov
dec
sub
jnp
lahf
mov
add
sbb
and
and
push
sub
cmp
cmp
dec
mov
imull
sbbl
fisubrs
mov
mov
pop
pop
lock
call
sub
cwtl
aam
xchg
faddl
addr16
lcall
fwait
mov
push
dec
orb
xor
in
sti
push
jns
ss
and
xchg
mov
sbb
adc
enter
sbb
sub
ret
push
popa
aaa
repnz
jl
sbb
mov
pop
rcll
add
fmuls
std
je
mov
adc
enter
pop
inc
shl
lcall
pop
pop
cmp
psubsb
pushf
fninit
adc
jecxz
cmpsl
jno
lds
das
xor
bound
push
ja
jb
ja
fsubs
je
bound
es
adc
fsubl
cmpsb
mov
pop
and
imul
mov
fsubr
outsl
pushf
dec
loop
cmpl
mov
adc
xor
cmpb
jp
push
or
adc
xchg
out
push
in
sbb
outsb
jg
inc
ss
xor
adc
loope
adcl
inc
cmp
sti
jne
and
sbb
dec
stc
out
xor
shrb
adc
test
or
icebp
add
outsl
cmpl
arpl
xchg
ja
dec
inc
sub
js
vcmpss
stos
push
push
sbb
test
xchg
mov
and
test
xchg
imul
call
mov
incl
imul
sahf
ljmp
adc
sbbl
inc
mov
sbb
lret
xchg
sub
sbb
pop
pop
stos
pop
mov
mov
in
enter
mov
push
data16
rclb
cmp
pop
movsl
cmc
inc
outsb
xchg
ret
mov
xchg
xchg
ficoml
test
dec
add
mov
xchg
xor
mov
pop
mov
adcb
jle
aas
out
inc
xlat
mov
cwtl
in
pop
jg
aam
xchg
dec
xor
mov
or
push
stos
ret
inc
int3
dec
sbb
fcoms
jb
lcall
and
mov
ss
xchg
data16
hlt
insb
jne
pop
icebp
movsl
and
add
aaa
xchg
or
popa
mov
push
fisttpl
test
stos
dec
pop
lcall
add
fwait
pop
out
scas
xchg
call
int3
andb
cmp
int
xchg
mov
ja
lods
test
adc
and
push
das
daa
push
dec
add
outsl
arpl
sub
sub
lods
cltd
sbb
adc
lods
das
das
xor
cmp
or
cmp
sub
ss
lret
in
add
stos
xchg
sub
notb
lret
fcmovbe
or
sub
faddl
inc
sarl
jecxz
xlat
push
xor
cmpl
shlb
insb
xchg
push
pop
les
mov
imul
mov
enter
icebp
push
inc
leave
jecxz
cmc
jb
stos
gs
or
mov
jle
inc
movsl
test
dec
fucomi
mov
sub
push
dec
fnsave
out
nop
sbb
xchg
mov
push
pop
add
jne
in
call
cmpsl
ds
gs
sbb
test
scas
iret
pop
sbb
xor
dec
fcmovnu
inc
icebp
or
insb
pusha
fsqrt
add
mov
addr16
lea
jne
outsl
adcl
lock
or
ljmp
pop
cwtl
nop
jo
iret
mov
push
je
mov
and
dec
loope
nop
inc
div
push
hlt
roll
push
dec
loopne
outsl
aaa
std
jns
jecxz
dec
xchg
push
aaa
into
popf
adc
outsb
fcoml
ficompl
in
dec
push
mov
shlb
cmp
not
pop
push
cmp
mov
jl
daa
mov
cmpsb
sub
clc
dec
ret
xor
into
cs
cmpsb
mov
mov
test
rcl
and
imul
hlt
jne
pop
insl
push
cltd
mov
xchg
popa
fidivrl
div
jnp
add
gs
mov
jae
push
popa
jno
int3
xchg
mov
aaa
imul
mov
cmp
scas
and
cmpsl
xchg
dec
and
sub
rorl
out
aas
jp
mov
jmp
push
cld
mov
sub
int
mov
jb
mov
push
xlat
pop
test
rcll
pop
or
lret
mov
cmp
sbb
les
sbb
add
lret
mov
fstpt
and
and
shrb
mov
or
notl
pop
shlb
inc
or
sti
enter
loop
push
popf
orl
xchg
f2xm1
pusha
sbb
inc
ss
lahf
or
divb
imul
adc
fs
adc
ffree
jo
fstl
mov
add
pop
jne
sub
in
mov
mov
lahf
push
and
pop
js
inc
ja
pop
xchg
mov
and
outsb
call
jle
fsub
idiv
mov
adc
dec
sub
fstl
push
movsb
sub
fdivs
sub
shlb
insl
call
cmp
cmp
data16
mov
mov
insl
mov
mov
adc
iret
fs
dec
inc
jno
dec
jno
sub
and
cltd
sti
cltd
add
jno
gs
lods
mov
push
xchg
sarl
out
shll
mov
mov
jp
xor
and
pop
leave
dec
xchg
cmpsl
lds
mov
mov
in
clc
imul
push
movsb
jecxz
adc
xlat
push
xchg
aam
fmuls
outsb
add
pusha
pop
fchs
xchg
mov
scas
fwait
or
mov
jno
cmp
cwtl
fcoml
xchg
sub
xor
enter
jmp
outsb
push
dec
dec
inc
ljmp
aam
lcall
sarl
jecxz
mov
cld
nop
scas
insl
pop
jge
jbe
push
add
push
aas
sbb
mov
mov
xchg
pop
xchg
xchg
lods
std
or
jae
push
cmp
mov
xchg
add
sete
jp
lar
mull
mov
adc
jge
loope
test
test
lods
or
in
xchg
jle
sub
mov
jge
shl
push
xor
mov
lock
or
jge
addr16
hlt
add
jno
mov
call
ja
fsubs
dec
add
lahf
stos
dec
push
jne
mov
dec
and
in
jmp
cmp
bound
ljmp
jns
test
sti
movsb
inc
push
sbb
cltd
and
xchg
jno
xor
lods
push
mov
lds
int3
cmp
mov
fsubs
sbb
ret
jne
into
cmpsb
push
push
push
jnp
fwait
into
popf
push
cltd
and
mov
or
jg
out
das
ljmp
hlt
out
pop
repnz
ret
xlat
sbb
adc
push
enter
test
pop
mov
xchg
sub
aas
je
test
ret
fldenv
daa
dec
fs
push
ret
dec
xchg
inc
insb
cwtl
mov
sbb
into
add
cmp
rolb
xchg
inc
dec
add
jp
fwait
push
shll
ret
into
int3
cwtl
dec
adc
lods
mov
scas
ret
jecxz
loopne
mov
loopne
rclb
sbb
gs
inc
push
add
add
push
ror
outsl
ret
and
jmp
popf
or
div
addr16
jmp
ret
test
ficompl
or
xor
das
pop
mov
pusha
fnsave
xor
clc
fninit
push
rolb
repz
xchg
sub
cli
lret
test
dec
sub
gs
mov
mov
and
subb
mov
cmp
inc
cli
or
push
rcr
mov
jl
push
insb
push
push
mov
or
push
adc
iret
loope
lods
and
pop
jge
xchg
add
movsb
inc
and
sbb
mov
and
test
jns
stos
adc
sbb
sub
mov
out
popa
mov
pop
test
push
and
mov
jecxz
fnsave
mov
adc
ja
inc
mov
and
aas
arpl
clc
sub
imul
xlat
push
mov
cli
push
xor
dec
add
sub
pop
adc
out
xor
push
addr16
lods
stc
sbb
test
fnstenv
inc
xchg
and
cmp
jnp
jl
movsb
push
mov
and
cmp
pop
mov
decl
sub
cmp
fld1
into
sahf
aam
insl
adc
repz
or
mov
mov
cmpsl
push
pop
stc
js
inc
or
pop
inc
fstpl
pop
aad
mov
dec
cmpsb
jmp
push
push
fistpl
cmp
repz
xchg
pxor
sub
repz
gs
mov
push
clc
popf
mov
imul
jmp
dec
sbb
fadds
decb
bound
out
jge
loope
cld
mov
ja
adc
lahf
push
mov
push
cltd
mov
nop
in
jmp
and
push
dec
inc
xchg
insb
test
fwait
jp
sbb
push
push
lret
pop
dec
das
or
add
sti
ret
or
sbb
repnz
push
or
push
dec
add
es
mov
es
roll
sub
sbb
aas
nop
loopne
cmp
mov
int
in
jo
cmp
mov
lock
and
mov
addr16
push
sub
popa
xchg
push
or
xor
imul
dec
lds
inc
ja
inc
outsl
push
lcall
xlat
aam
outsl
sarl
fmuls
or
push
push
inc
aaa
xchg
xor
addl
pop
cli
pop
imul
xor
mov
sbb
rclb
adcb
jne
xchg
jno
sub
hlt
iret
aam
or
das
call
pop
leave
xchg
dec
arpl
mov
sbb
jnp
push
sub
xchg
sbb
and
sti
dec
fcompl
fcmove
mov
pop
xlat
je
cmp
ret
mov
cmpsb
std
loop
data16
popf
nop
rcll
push
daa
inc
sbb
jb
gs
xor
dec
jge
idivb
mov
add
adc
jne
das
clc
add
inc
pop
mov
sti
mov
pop
pop
scas
jnp
out
sbb
push
mov
int
insl
mov
xlat
clc
ret
leave
push
xor
mov
xchg
bswap
icebp
loopne
and
lods
sbb
cmp
mov
sbb
test
cltd
aaa
in
sbb
test
sarb
inc
orb
adc
mov
pop
adc
roll
inc
sub
mov
ja
stos
jae
mov
imul
mov
gs
in
rcr
not
xchg
hlt
cli
sti
push
cmp
aad
adc
adc
xchg
xor
pop
sub
out
imul
sbb
cmpsl
pusha
insl
jne
xor
push
push
pushf
js
xor
sub
mov
iret
mov
xrelease
dec
loop
daa
push
xchg
jae
sbb
les
fldl2e
aad
mov
lret
or
jl
inc
aas
mov
cmp
xchg
stos
leave
insl
rorb
or
in
mov
js
cltd
inc
xchg
push
pop
mov
lea
and
xchg
or
xchg
jle
mov
mov
dec
lcall
pushf
lock
pusha
mov
inc
and
push
loope
iret
pop
inc
fistpll
dec
cmp
xchg
sahf
rclb
dec
push
imul
outsl
bound
push
push
sbb
lret
pop
push
stos
xor
xchg
out
xchg
neg
cmpl
pop
call
push
shll
lret
push
js
lods
ss
xchg
pop
int
sub
in
daa
popa
mov
psubsb
dec
xor
enter
sub
mov
mov
out
cld
iret
and
add
cs
lock
gs
cmp
jg
mov
out
mov
and
lret
pop
stos
dec
cmp
jle
je
inc
sbb
add
dec
adc
cld
shll
push
cs
push
mov
and
push
or
adc
popf
ja
dec
out
mov
push
push
std
mov
inc
scas
call
push
add
push
jg
cwtl
pop
push
pushf
mov
dec
pop
sub
pop
sub
fisubrs
out
inc
mov
fstpt
in
sbb
jp
jb
scas
out
and
jg
adc
pushf
lret
adc
ja
pop
pop
addr16
daa
pusha
xor
dec
mov
pop
cmp
bound
pusha
xorb
pop
xchg
lea
leave
fsts
scas
push
cmp
je
mov
mov
lea
ret
cmpsb
imul
or
in
xor
sub
dec
dec
inc
dec
or
ret
shll
insw
scas
dec
into
add
xor
jge
mov
adc
dec
fwait
pop
adc
insl
cmp
pop
fwait
cmp
pop
push
or
std
xchg
aaa
adc
push
and
mov
addl
pusha
xor
pushf
mov
push
and
aas
sub
cwtl
xor
xor
add
cltd
mov
inc
jmp
push
add
mov
jae
mov
inc
push
test
or
dec
push
dec
jne
lods
mov
das
je
into
arpl
cmp
xlat
lcall
sbb
xchg
xchg
pop
push
lret
ljmp
cmp
or
mov
decl
leave
out
lcall
xchg
andb
bound
loop
ja
and
fdivs
scas
daa
xor
push
repz
leave
arpl
ret
aam
xor
xor
adc
icebp
adc
testl
movsl
test
cmp
sbb
mov
push
outsl
push
jo
add
xor
lods
push
pop
jnp
push
rcl
lea
mov
je
dec
adc
cmpsb
jnp
mov
stc
out
pop
or
arpl
cmp
mov
test
fldenv
sbb
mov
cmpsl
aad
cmp
fbstp
ss
add
fisubrl
jecxz
es
push
icebp
pusha
cld
das
mov
call
push
lock
pop
or
inc
xor
inc
addr16
lret
push
dec
lcall
and
decb
nop
mov
or
loopne
mov
dec
mov
and
ficoms
orb
loopne
es
cmp
stos
imul
xor
outsb
push
xchg
xchg
or
sbb
sub
daa
push
movsb
fcmove
insb
mov
xchg
jo
fnsave
push
cltd
insl
bound
scas
jb
pop
dec
nop
mov
pop
rcrl
mov
jge
sub
shrl
cmp
testb
fadd
push
jns
mov
mov
ret
or
iret
ljmp
fstpt
mov
lret
data16
sub
mov
cmp
mov
loope
push
push
sbb
test
sar
enter
stos
sbb
jecxz
pop
adc
ja
inc
mull
movsl
out
fdivs
test
mov
arpl
inc
and
ret
lahf
xor
add
mov
cmpsb
xchg
enter
sahf
es
or
mov
cli
sahf
insb
push
and
jnp
movsl
pop
stc
ds
cmp
mov
inc
jl
aam
testl
mov
lock
aaa
test
push
lret
mov
mov
in
repnz
sbb
je
lods
popa
andl
dec
xchg
add
pop
add
or
push
xlat
out
jl
mov
lock
dec
jne
roll
aam
jbe
mov
ss
add
pop
sbb
and
test
pop
push
bound
pop
out
jge
jns
jb
sub
out
or
jns
adc
push
imul
and
jg
jns
fnstsw
test
loop
fwait
inc
incl
lea
repnz
xor
dec
ds
lahf
add
add
pop
or
mov
xor
in
repz
test
movsl
shll
mov
and
insb
fdivrl
into
and
out
pop
push
or
nopl
add
pop
movsb
fs
dec
jecxz
shll
dec
test
scas
or
pop
in
xchg
testb
xchg
stos
xchg
mov
clc
inc
sub
icebp
aam
xor
and
add
sbb
imul
dec
lods
mov
lcall
inc
into
jno
call
filds
in
je
addb
mov
in
std
push
outsl
cld
mov
push
les
sti
cmpsl
imul
inc
xchg
fistpl
fdivl
loop
sbb
cmpsl
push
lods
cltd
in
divb
pop
sbb
xor
sbb
mov
pop
push
inc
inc
xchg
lahf
xor
cmp
cltd
loopne
cmpsl
dec
sbb
loope
das
movsb
mov
in
sub
movl
fbstp
adc
mov
mov
push
push
pop
jge
xor
xchg
mov
add
ret
mov
int3
enter
dec
fsubr
clc
out
mov
pop
repnz
ja
imull
xchg
mov
repnz
lret
jo
insb
sub
dec
test
mov
jno
dec
and
fldt
mov
popa
aas
stos
xlat
mov
mov
xor
mov
hlt
in
pop
xorl
add
subb
aam
xchg
stos
xor
sub
xchg
daa
mov
mov
add
fbstp
and
push
mov
nop
ret
in
and
xchg
dec
daa
outsl
push
cmpsl
daa
data16
mov
pop
xchg
rclb
lahf
xchg
push
xchg
lret
pop
or
rcrb
lahf
clc
nop
push
cmp
filds
bound
xchg
push
inc
mov
cmp
xor
call
dec
xor
jmp
outsl
pushf
cmp
pop
inc
movsl
rol
fidivrl
fisubs
xchg
mov
adc
rcrl
xchg
inc
arpl
test
jae
jp
push
shlb
jnp
daa
imul
jne
loop
movsb
cmp
mov
xchg
sub
push
daa
pop
add
lods
sbb
lcall
xchg
dec
cmp
sbbl
fiaddl
sbb
mov
out
cltd
ret
add
cmpsb
xor
pop
xchg
das
subl
mull
and
lret
idiv
orb
xor
xchg
jno
ds
lds
ds
xor
out
stos
pop
cmp
shrl
lret
jo
jl
mov
repnz
xchg
adcb
bound
mov
xor
lods
dec
daa
aad
add
cmp
jnp
and
xor
fmuls
jg
cmc
and
inc
pop
out
cli
into
rcr
movsl
push
sub
roll
mov
jnp
leave
fadds
mov
inc
sbb
divl
shl
push
adc
adc
dec
dec
jl
aad
jge
add
pop
sbb
inc
cmp
mov
pop
mov
pushf
les
sub
mov
jbe
inc
ficomps
scas
or
and
sub
icebp
rorb
sbb
pop
mov
xor
push
cmp
xchg
movsl
xchg
jl
aam
inc
mov
push
xor
jl
pop
sub
lock
pop
movsl
xor
jmp
xlat
dec
lock
and
dec
pause
aas
jne
lods
jnp,pn
pop
push
dec
stos
push
dec
les
scas
stos
dec
and
daa
icebp
fldl2t
dec
mov
repz
xchg
test
imul
loopne
jg
push
ret
faddl
es
mov
or
mov
rolb
mov
repnz
inc
testb
push
sbb
add
sub
jmp
out
loop
std
lods
push
js
push
add
mov
lahf
in
lret
lret
lahf
sub
xchg
inc
pop
push
push
mull
inc
out
cmp
push
xchg
ret
roll
dec
xor
cld
iret
mov
add
add
pop
enter
call
fs
int
mov
xchg
adc
lret
in
out
iret
cld
push
push
adc
fstpl
setp
inc
pop
nop
and
je
shlb
xchg
xchg
mov
leave
pop
das
scas
leave
ret
xor
movsl
insl
pop
inc
dec
jg
jp
mov
jae
add
pop
das
loopne
cmpb
jne
sub
adc
insb
xor
icebp
sub
mov
inc
ja
int
aad
pop
lods
outsb
ljmp
daa
mov
in
xchg
pop
push
lock
push
loopne
test
and
jle
in
xchg
fiaddl
cmp
push
ss
dec
adc
gs
popa
mov
mov
dec
jecxz
and
pop
jb
je
lock
sahf
ror
insl
in
je
lock
cmp
loop
add
iret
or
jo
out
fbstp
mov
ja
mov
rcrl
sub
enter
pop
cmpsb
inc
mov
dec
jno
sbb
pop
add
push
jg
int
clc
hlt
pop
mov
fdivl
or
lahf
mov
int3
pop
mov
orl
jb
fchs
rclb
xlat
cwtl
dec
mov
push
cltd
test
mov
sbb
jg
inc
xchg
clc
jmp
push
sbb
shll
xchg
insb
fldt
adc
jecxz
cmp
mov
or
xor
jl
cs
add
mov
pop
cmpsb
pop
out
add
mov
orb
jns
and
push
add
pop
mov
add
mov
xchg
enter
repz
cmp
sub
push
into
aaa
inc
sbb
test
ret
push
mov
and
push
push
test
repnz
out
lea
xchg
hlt
dec
out
pop
mov
cmp
push
xor
mov
aam
and
push
aaa
dec
flds
xor
dec
orb
add
ret
imul
out
in
push
lahf
mov
mov
pop
push
into
dec
adc
lods
clc
jl
jo
cld
mov
sub
ljmp
das
mov
mov
iret
enter
sbb
loope
jo
xchg
fcmovu
mov
add
add
adc
cmp
sbb
mov
adc
call
xchg
je
push
inc
xchg
mov
xchg
pop
out
cwtl
mov
cmp
add
dec
shrb
or
xor
xlat
call
in
inc
das
leave
les
mov
test
and
arpl
ds
and
adc
js
pop
addr16
loopne
sbb
les
in
push
inc
jl
push
outsb
adc
xchg
cld
loop
cmc
call
jl
sti
push
jg
lcall
test
inc
cld
push
scas
sbb
xor
push
or
rorl
ds
cmpb
hlt
fisttps
pop
inc
xor
nop
mov
xor
les
add
sbb
jmp
out
xchg
in
outsl
dec
and
xor
push
popa
push
pop
bound
cmp
cmp
daa
fsubs
jae
adc
hlt
jnp
mov
inc
push
jno
pop
jle
xor
pop
mov
xor
add
mov
in
lods
cwtl
add
sub
lods
cli
xlat
xchg
sbb
aad
xlat
andb
jns
icebp
cld
pminsw
dec
cmc
xlat
out
scas
sbb
jmp
stc
ret
out
jno
outsl
push
xchg
dec
mov
lret
mov
cwtl
lcall
cs
or
jns
sbb
dec
adc
enter
adc
repz
and
and
rclb
pushf
jno
lret
ja
jae
out
in
and
adc
push
test
xchg
aas
outsb
data16
test
cmpsb
sbb
mov
shr
pusha
add
clc
mov
add
fs
push
push
aaa
lret
scas
cmpsb
out
frstor
orb
push
sarb
xor
lods
pop
arpl
cmp
cmp
inc
mov
in
xchg
mov
dec
and
loop
lock
pop
xchg
es
sti
xchg
imul
ljmp
mov
or
je
xchg
dec
lret
mov
lret
ds
inc
iret
stos
fadd
pop
jnp
sub
mov
push
ret
into
or
ror
test
das
xchg
add
add
rcrb
sti
xchg
lcall
hlt
fdiv
repz
xor
in
push
sahf
cli
out
and
jns
stc
in
sub
lods
adc
pushf
xor
lea
loop
in
xlat
push
jae
rcll
outsb
mov
lcall
inc
push
lds
lea
pop
test
lret
notl
mov
adc
adcl
nop
xor
sub
push
mov
loop
cmp
lds
mov
jo
xchg
or
and
imul
xchg
xlat
lret
mov
ljmp
fsubs
push
pop
pop
adcl
xchg
outsb
xchg
pushf
inc
scas
add
pusha
pop
pop
push
mov
cmpsl
cmpsl
inc
and
out
mov
in
sub
adc
outsb
aam
mov
inc
ret
lock
lret
fisttpl
repnz
icebp
mov
push
les
cmp
lcall
sbb
pop
and
imul
mov
test
arpl
lea
out
lcall
das
mov
pop
pop
dec
loope
sub
fs
into
inc
inc
adc
loope
stc
inc
repnz
subb
xor
test
bound
sub
pusha
lret
outsb
pop
adc
xor
nop
or
repz
dec
jbe
cmp
cltd
jecxz
lret
pop
adc
push
nop
inc
mov
out
in
lods
mov
ja
xor
mov
xor
aaa
test
stos
sti
cmp
sbb
mov
cli
cmp
sub
inc
mov
pop
inc
sbb
cltd
mov
jbe
xor
or
imul
inc
dec
pop
dec
fs
pop
jecxz
xor
lret
lret
bswap
mov
dec
push
popf
push
imul
lahf
scas
mov
xchg
outsl
les
imul
cmp
xor
xchg
cmpsb
sbb
sbb
into
stos
hlt
leave
and
movsb
push
mov
pusha
cmpsb
push
xor
icebp
push
mov
mov
sahf
cmpsl
fsubs
xchg
push
mov
cmp
mov
sbb
cmp
cmp
lahf
cmp
fcoms
ds
jbe
scas
pop
dec
jo
adc
xchg
in
xorb
dec
jae
mov
enter
pop
call
mov
imul
mov
movsb
push
mov
xchg
mov
mov
ficoms
movsl
and
out
jge
mov
cmp
add
mov
pop
mov
ljmp
scas
jae
xchg
cltd
pusha
lahf
or
cwtl
sbb
fistpll
call
adc
inc
sbb
pop
mov
in
mov
ror
adc
sbb
movsl
sbb
fxch
mov
out
scas
cs
and
lret
jg
sub
test
sbb
pop
jb
xor
sbb
xchg
mov
aam
mov
stos
cmpsb
sbb
add
scas
xchg
hlt
sub
arpl
push
mov
and
lret
jnp
jno
dec
inc
aas
pop
data16
and
jmp
inc
popf
pop
sub
lods
imul
les
adc
cmc
cmp
popf
sbb
and
adc
test
mov
inc
gs
push
cld
rorl
xchg
sub
sbb
fnsave
notb
out
push
add
popa
mov
inc
data16
jg
jp
or
xor
mov
cmpsl
inc
push
cmp
jae
movsb
imul
add
data16
xchg
sub
js
fsubp
jno
sub
sub
and
push
cmc
mov
jb
fldenv
mov
jle
cmp
or
adc
adc
xchg
push
rclb
adc
or
pop
mov
in
and
mov
fldenv
pop
mov
jecxz
adcl
adc
cli
sbb
jne
xchg
ljmp
add
or
mov
adc
aad
sbb
lret
mov
mov
push
xchg
sbb
js
mov
xorl
lahf
clc
in
add
ljmp
push
xchg
je
stos
cmp
xor
je
sbb
mov
iret
push
in
xchg
out
jo
jge
les
pop
pop
adc
jecxz
inc
scas
lcall
ret
jge
jge
sbb
dec
pop
mov
pusha
mov
fldenv
popf
cwtl
xchg
subb
clc
dec
les
mov
push
jge
clc
mov
xchg
data16
rorb
inc
jne
cmp
enter
push
ss
aam
cmpsb
notl
add
dec
sbb
mov
pusha
mov
test
cmp
cmp
fcoms
pushf
cmp
mov
pop
add
ss
sub
mov
lret
sub
lret
sub
pop
push
popf
mov
loope
dec
imul
fs
pop
aas
iret
mov
lahf
xchg
imul
ret
js
nop
mov
mov
or
iret
add
mov
lahf
sti
push
lds
movsb
cld
lahf
daa
mov
xchg
shrl
das
sbb
cli
mov
adc
jns
dec
movsb
jbe
xor
cmp
xchg
sbb
cmp
jge
insb
or
push
xchg
out
push
arpl
push
push
cmp
xor
mov
inc
cmp
fcmovbe
dec
sub
bound
jae
arpl
cld
out
enter
mov
hlt
shlb
imul
push
stos
cmp
xchg
sub
mov
pop
mov
mov
and
fnstenv
into
adc
mov
insb
mov
mov
adc
lcall
scas
push
cmpsb
icebp
adc
pushf
cmpsb
push
loopne
or
lods
dec
pusha
faddp
sbb
inc
mov
mov
arpl
jo
loop
out
xchg
movsl
das
stos
daa
sbb
loope
and
xlat
cmpsb
mov
mov
pushw
sub
imul
jae
sbb
pushf
into
jae
or
cli
arpl
clc
lods
jp
cmp
into
pop
sub
dec
ja
cmp
sbb
xchg
jo
mov
push
das
xchg
xchg
dec
sarb
aaa
dec
xchg
xlat
test
ja
adcb
xchg
inc
push
cmp
fs
pop
xlat
sti
imul
jp
data16
outsb
bnd
mov
jp
xlat
loope
adc
jmp
mov
and
adc
adc
fisubl
movsl
jbe
nop
insb
lods
fildl
fisubs
test
sahf
leave
cld
mov
or
movsl
fwait
mov
and
sahf
mov
jbe
scas
add
sub
pop
orb
addr16
adc
mov
jecxz
xchg
sbb
rorb
push
mov
pand
xchg
fwait
lock
mov
aad
jae
sar
push
inc
loope
xchg
mov
test
add
test
jnp
popa
mov
mov
insb
xchg
xchg
ret
adc
and
xchg
aas
inc
ja
dec
popa
mov
push
jo
xor
aam
adc
sbb
or
mov
sbb
jle
adc
sahf
dec
mov
dec
outsl
cwtl
adc
mov
sub
in
icebp
mov
sbb
sbb
lret
stos
mov
mov
mov
xor
idiv
hlt
inc
stos
stos
xor
sub
pop
xchg
sub
push
xchg
shll
outsb
stos
jnp
sbb
out
inc
sbb
testb
lods
adc
leave
testl
mov
cmc
and
xchg
int
in
xchg
cmp
xlat
and
jno
das
xchg
outsl
hlt
loop
js
enter
pop
xchg
xchg
mov
inc
pop
outsl
push
push
mov
lock
mov
clc
je
popf
sub
push
ljmp
hlt
mov
mov
or
xor
loop,pn
je
dec
sub
cwtl
fsubr
call
push
cmc
lahf
mov
xchg
leave
mov
jle
mov
and
cmpsl
test
inc
adc
fistpl
cmpsb
cli
adc
push
outsb
xchg
add
enter
add
aam
das
es
pop
sub
movb
sbb
and
rol
loop
dec
xor
pop
fildl
dec
xor
inc
and
inc
jbe
dec
sbb
mov
lcall
outsl
test
push
mov
cmpsl
fistpll
pop
cmpsl
lcall
imulb
push
js
adcl
mov
mov
push
ret
dec
movsl
insl
adc
cmp
mov
add
push
push
mov
in
cltd
cmp
cmp
leave
js
and
jle
das
int3
fwait
outsb
call
nop
adc
adc
inc
mov
inc
orl
add
pop
add
cmc
in
aam
mov
outsb
aad
push
xchg
aas
mov
cs
push
cmpsl
sub
xor
imul
jecxz
add
push
pop
mov
addr16
pop
das
stos
push
push
xor
filds
mov
ja
jmp
ja
stos
ret
insb
lds
mov
std
jle
sub
cmp
out
out
inc
cmp
je
aad
push
or
movsb
push
inc
ljmp
jl
push
ljmp
out
add
jns
movsb
pop
and
inc
push
cmp
test
stc
adc
jo
sarl
mov
inc
sub
mov
and
daa
sub
pop
cmp
cmp
nop
imul
shlb
sbb
mov
push
sub
inc
xor
fsubrp
and
sbb
mov
mov
cmpl
add
mov
movsl
xchg
testl
popf
hlt
jmp
mov
sbb
inc
out
js
clc
or
jg
rorl
ss
stos
idiv
sbb
sbb
vmovntdq
iret
sbb
ja
push
rolb
pop
inc
hlt
jle
xchg
xchg
add
scas
mov
sub
sub
leave
add
adc
lcall
lahf
aam
mov
xlat
dec
xchg
stos
and
mov
mov
sahf
or
sbb
pushf
aad
push
out
dec
addr16
pop
iret
clc
out
dec
lea
cmp
cmpsl
shl
mov
das
xor
add
jg
sbb
adcb
cmc
int3
aam
xor
out
sbb
sub
mov
fcompl
cltd
out
testb
ja
or
rcll
and
fsubl
cmp
mov
pop
pusha
jns
fimuls
or
mov
lods
adc
dec
xchg
add
pop
add
addb
fwait
shrb
lods
jp
aas
sti
rcll
sti
mov
xchg
lock
inc
ljmp
sub
add
imul
cmpsb
lods
cmp
mov
sbb
jmp
adc
pop
lods
das
xlat
push
add
mov
stc
push
ljmp
mov
enter
sbb
imul
faddp
add
xor
mov
shll
in
mov
mov
outsl
fadd
mov
cmpsl
out
mov
push
cmp
xchg
out
or
or
jg
push
test
fs
pop
jno
psubb
push
dec
nop
test
test
fisubl
add
cli
cs
xor
pop
mov
std
inc
adc
push
and
icebp
mov
sub
and
fstpl
pop
add
lock
adc
fcmovne
std
lds
lahf
push
movsl
incl
xorl
xor
ja
push
mov
mov
out
lcall
xor
fsub
inc
push
adc
arpl
insl
mov
mov
sub
bound
scas
lret
cmp
adc
adc
cmpsl
in
lods
fbld
mov
scas
cmp
ret
adc
inc
jne
gs
daa
xchg
mov
mov
mov
mov
jae
out
popf
xchg
dec
jo
pop
add
lock
add
add
lcall
pop
pop
mov
stos
push
jnp
inc
out
cmp
fsub
aaa
std
aas
lret
aaa
aad
lahf
and
jo
and
mov
jl
adc
clc
xchg
jge
xchg
mov
push
jo
cmp
and
cmc
out
dec
jae
inc
xorl
mov
roll
and
and
dec
mov
lds
xlat
mov
cltd
pop
cmp
leave
jecxz
add
push
in
shrb
xchg
push
push
mov
cwtd
call
int3
cmpsb
push
xchg
testb
fldl
mov
push
mov
push
ljmp
lret
mov
push
movsl
cmpsb
pop
divb
call
lahf
lea
inc
les
lock
pop
jae
jge
mov
fst
loope
adc
mov
test
scas
fwait
mov
out
data16
sub
xchg
mov
aaa
cs
mov
test
out
shlb
aaa
dec
push
dec
push
scas
fildl
mov
cmp
andb
jbe
pop
shll
fsubl
fisttps
loope
cmpsb
in
lods
xlat
jge
mov
cmp
push
sahf
imul
add
enter
adc
cltd
aaa
mov
mov
std
jno
and
jg
aaa
fnsave
mov
shr
jmp
fidivrl
push
ds
sbb
iret
cld
rcrl
mov
and
push
push
mov
mov
imul
and
std
sub
sbb
scas
mov
push
add
pusha
scas
jecxz
outsl
or
cmpl
lret
pop
add
jp
add
jns
test
dec
fisubl
xor
scas
daa
sub
add
ret
testb
stos
lea
dec
adc
pop
inc
xchg
cmp
dec
fcmovnb
inc
add
outsl
sbb
gs
mov
addr16
and
cmp
mov
icebp
movsl
dec
dec
lcall
mov
push
and
xor
cwtl
xor
jne
mov
ficoms
sub
arpl
fistl
inc
cmp
jg
leave
enter
inc
push
mov
fdivl
add
jg
adc
pop
ds
jnp
aas
inc
push
add
cmp
mov
outsb
inc
in
bound
jecxz
push
mov
xchg
pop
sbb
xor
idivb
lcall
sbb
and
or
test
add
mov
mov
shrl
test
xor
out
scas
cmp
and
mov
mov
int3
cmp
sub
cmp
test
out
sbb
lret
imul
push
repz
mov
xchg
add
pop
inc
xchg
imul
iret
sub
cmp
or
mov
dec
dec
ja
mov
xchg
sbb
outsl
movsl
cmp
in
cmp
mov
pop
pop
stc
idivb
cwtl
sarl
jmp
mov
mov
lods
lods
mov
mov
sbb
cmc
xchg
inc
aas
stos
add
xchg
sbb
push
inc
push
out
jmp
xor
jae
bound
mov
frstor
imul
and
adc
mov
adc
sbb
mov
mov
push
or
lock
imulb
cmp
out
inc
mov
dec
xor
jecxz
cli
add
pop
add
int3
sub
sarb
xchg
sub
leave
lcall
pop
call
jns
out
cmp
in
sub
int
jnp
into
test
aas
and
lock
sub
sarb
push
jae
shr
mov
and
lods
mov
and
jns
push
xor
out
shl
es
add
sahf
ret
jp
jp
pop
into
jo
shr
push
hlt
adc
mov
mov
sbb
add
xchg
add
arpl
stos
add
les
jne
xchg
push
fcmovu
pop
add
pop
scas
addr16
loope
mov
cli
push
inc
ja
lret
lods
mov
inc
stos
inc
add
push
and
ja
jge
sub
xor
loope
xchg
orb
lahf
test
sahf
mov
out
jp
dec
jns
arpl
daa
xchg
lcall
cwtl
push
jnp
adc
outsb
jle
lock
out
add
in
shll
int
dec
scas
mov
xor
pop
into
or
in
xlat
test
test
imul
mov
or
sbb
pop
daa
cmc
icebp
dec
adc
int
rcll
in
pop
icebp
cmp
xchg
and
out
inc
jbe
sbb
pop
lds
sub
push
sbb
pop
add
dec
jmp
aas
mov
outsl
add
out
je
push
cmp
jbe
jns
dec
sub
push
in
xor
sarl
outsb
inc
fstpl
ss
add
scas
fs
mov
mov
nop
pop
xor
xchg
push
shrl
add
and
lock
jne
pop
leave
and
ss
enter
jmp
test
sub
mov
xlat
pushf
inc
jne
jnp
flds
xor
fdivrl
lret
addr16
mov
mov
fdivr
inc
push
dec
ficoml
pop
cmp
inc
sub
loopne
stc
icebp
push
movsb
out
xchg
bound
jb
mov
inc
mov
ror
mov
xorl
ret
push
insl
jp
and
cmp
mov
cltd
andb
mov
xchg
rorb
push
inc
pop
sub
xor
cmp
insl
lcall
jecxz
enter
sub
mov
pop
and
mov
clc
mov
xorb
sub
cmp
scas
fcmovnu
mov
inc
iret
or
jge
in
into
xor
aas
jne
mov
dec
not
in
adc
outsb
pop
pop
ds
clc
push
cmp
lods
movsb
jb
or
insb
jg
mov
mov
push
bound
js
sub
aad
push
sub
pop
inc
shll
dec
sbb
fnstsw
add
mov
adc
inc
pushf
lock
stos
fists
push
pop
out
repz
push
subl
scas
jno
xlat
jnp
jg
adc
les
push
adc
mov
adc
cmpsl
mov
jno
loop
mov
je
je
and
inc
jl
lret
push
mov
arpl
fldenv
nop
mov
mov
test
pusha
mov
daa
inc
in
pop
std
dec
test
mov
mov
pop
pop
outsl
adc
xor
fstl
insl
cwtl
xor
popf
push
xor
ret
in
mov
pop
adc
xchg
push
jecxz
add
dec
test
insl
rorl
ret
or
movsb
mov
out
cmp
in
ljmp
pop
jge
cmpsb
xchg
or
inc
orb
pusha
add
push
jae
pusha
stc
nop
nop
shl
mov
clc
or
inc
cmp
dec
call
adc
enter
sub
mov
and
jmp
cwtl
dec
ss
mov
insl
mov
cmp
jo
xchg
jl
fnsave
fs
inc
lcall
lret
addps
cmp
cmpsb
fdivr
inc
sub
pop
pop
mov
cwtl
popf
push
adc
cmp
loope
aaa
or
inc
jns
out
pop
ss
repnz
xchg
test
cld
and
cmpsb
pop
lods
sbb
sub
in
xchg
add
mov
jns
mov
mov
aas
jo
addl
in
int
idiv
push
adcl
push
push
nop
sub
sbb
inc
dec
sbb
xchg
or
mov
sbb
mov
out
mov
or
or
cmp
dec
mov
lret
adc
ja
lds
cltd
inc
adc
aas
mov
cli
data16
stos
into
int3
mov
dec
repnz
movsl
enter
cmpsb
idiv
outsl
xchg
adc
pop
cmp
imul
pop
rorb
sub
push
enter
and
pop
xchg
mov
jmp
mov
inc
sar
inc
stos
jecxz
push
mov
fldt
out
out
orb
adc
mov
jnp
fs
push
insl
lret
outsb
sbb
mov
mov
sub
cmp
lcall
mov
and
jnp
mov
cltd
pop
sbb
or
fwait
add
fisubs
mov
or
or
cmp
mov
jmp
test
loopne
mov
jne
inc
mov
jge
inc
xchg
cs
outsl
cmpsb
in
loop
adc
jo
xchg
mov
lods
imul
out
cmp
dec
cmpsb
in
push
sahf
js
sub
icebp
arpl
inc
pop
inc
or
jo
or
lea
mov
les
push
mov
call
mov
pop
and
rorl
out
aad
xchg
push
shrb
push
cmc
ss
mov
xchg
sahf
push
and
mov
es
cmpb
gs
fdivs
scas
mov
mov
jne
loopne
xchg
mov
andb
sahf
jne
add
mov
inc
jo
cmp
test
movb
out
sub
cwtl
xchg
mov
mov
daa
xchg
cmp
and
sbb
push
push
cmpsb
mov
mov
add
sbb
xchg
fists
cmc
out
mov
push
pushf
pop
shl
xchg
push
stos
dec
mov
push
daa
in
push
xlat
mov
inc
pop
jecxz
and
in
push
mov
jg
xchg
lret
xchg
inc
std
jns
push
cmp
and
xchg
ficompl
and
loop
rcll
test
push
leave
aad
push
jne
dec
pop
add
cmc
mov
xchg
xchg
sub
push
fdivr
inc
mov
jecxz
iret
loopne
shll
mov
pop
js
sub
negb
jnp
cli
or
dec
mov
cmpsl
mov
shl
xor
push
es
adc
aas
push
jp
and
add
xchg
lret
sti
fidivrl
inc
mov
or
scas
rol
pop
sbb
jmp
mov
shrb
and
jl
jmp
jecxz
xchg
xor
daa
mov
push
lea
fsubl
pop
lret
sbb
cmpsb
or
mov
stos
xchg
mov
xchg
mov
aas
xor
cmp
mov
pop
fsubp
pop
ret
sbb
mov
les
xor
daa
or
adc
cld
aas
jne
xor
pop
mov
pop
jnp
lods
and
pop
ljmp
ss
daa
stos
insb
loopne
jmp
fnsave
push
push
ffree
add
mov
pop
add
xorb
cwtl
in
pop
call
sub
mov
mov
xchg
pop
aaa
adc
and
repnz
xlat
and
adc
lret
mov
xorb
movsl
inc
aad
adc
push
inc
fstp
lea
cmp
pop
mov
cmpsl
dec
jnp
repnz
dec
into
out
rcl
cmpb
gs
xor
subb
mov
push
mov
in
pop
lods
test
mov
jne
das
rclb
cld
leave
dec
mov
jmp
fisubrl
cmp
jle
test
lods
xchg
loopne
out
push
mov
or
pop
mov
shlb
add
cmpsb
int
outsb
std
ds
call
adc
push
cmp
out
xor
test
loope
and
or
ja
repz
jbe
mov
xchg
pop
jb
lcall
xor
daa
repnz
and
add
pop
imulb
mov
cs
insb
aaa
mov
sub
aas
mov
pop
dec
int3
sahf
pop
pop
dec
mov
out
punpckhbw
dec
scas
filds
scas
out
and
add
mov
sarl
pop
add
jmp
inc
aam
fwait
repz
jl
push
ret
and
lods
and
mov
mov
adc
shl
pop
mov
and
insl
aaa
pop
dec
int
mov
push
inc
outsb
inc
scas
mov
push
data16
sarb
mov
or
movsl
mov
mov
pop
sub
pop
lahf
loope
mov
in
lea
push
test
ret
push
rorl
test
or
sbb
jmp
cmpsb
mov
nop
lcall
sarl
add
out
aam
mov
dec
push
out
push
xchg
xchg
and
xchg
inc
sub
pop
xchg
jl
jo
cli
jle
cmp
ss
sbb
ret
je
mov
je
loop
addb
mov
lods
jno
icebp
sbb
cmp
push
sub
or
shl
sbb
fnstenv
pusha
es
ja
push
dec
adc
std
pop
mov
mov
popa
leave
dec
scas
xlat
adc
inc
pop
mov
or
pop
shrb
icebp
into
mov
jecxz
push
stc
aaa
int3
cmp
cwtl
dec
pop
add
iret
adc
pop
cmp
sbb
lock
stos
pop
loop
cli
nop
sub
xchg
fmuls
xchg
fstl
cmpsl
push
mov
push
mov
or
cmp
lret
pop
or
cmp
pusha
push
imul
dec
leave
shll
mov
mov
ret
jae
dec
push
mov
mov
iret
and
cli
lods
outsb
sbb
adc
pop
out
mov
sub
mov
cmpsb
movsb
arpl
push
out
mov
loope
lahf
test
push
scas
in
inc
cmp
in
mov
mov
inc
lock
inc
add
fstpl
fisttpll
int
inc
adc
mov
inc
arpl
scas
mov
pop
inc
add
daa
inc
mov
mov
mov
xchg
sbb
sbb
and
push
out
nop
jmp
xchg
aam
jl
jmp
inc
cltd
idivb
test
aam
loop
mov
and
cmpsb
nop
fwait
or
lahf
jmp
add
dec
mov
mov
push
add
lods
cmpsb
xchg
mov
xchg
cmp
and
negb
clc
add
cmp
fwait
pop
inc
adc
xor
jbe
xor
xor
mov
popf
bnd
pop
jbe
in
hlt
xchg
mov
lahf
xchg
repnz
daa
test
mov
pop
jns
icebp
loope
int
jne
inc
pop
cmp
dec
das
xor
filds
subb
sub
mov
jb
cwtl
cmp
mov
lock
push
iret
movsb
cwtl
sarl
call
cmp
inc
push
fcoml
fs
sub
and
xor
verw
test
int3
fisttpl
lret
int
push
sub
mov
ss
push
inc
cmpsl
fcos
jnp
dec
dec
hlt
sbb
cmp
add
pop
loopne
mov
lods
jp
mov
cwtl
aaa
pop
push
xchg
and
push
inc
lods
sub
mov
in
cmp
jmp
cld
jg
or
adc
adc
mull
pop
pop
jp
das
mov
mov
jecxz
jns
xchg
inc
cmp
inc
imul
aam
ljmp
xor
and
push
outsl
icebp
stc
aaa
jl
dec
popa
sbb
scas
shll
inc
cmp
or
inc
mov
inc
leave
push
ljmp
ljmp
jmp
ss
adc
outsb
lock
nop
mov
and
sbb
das
sub
cmc
push
mov
test
and
fcoms
es
mov
aas
dec
push
out
mov
cli
in
scas
mov
xchg
and
xchg
movsl
pop
inc
shrl
push
sub
cwtl
popf
or
cmp
cli
mov
into
test
inc
dec
inc
shll
inc
sub
add
jg
dec
mov
outsl
rol
cmp
loope
pushf
cmp
push
mov
jmp
xchg
adc
imul
rcrb
sub
xchg
cmpsb
add
sub
stos
popf
push
fcomip
lcall
scas
mov
out
scas
mov
xor
mov
xchg
jbe
mov
test
adc
sahf
jge
push
lods
aas
test
jp
sarl
enter
mov
push
push
mov
fildl
in
push
pop
xchg
pop
jns
sbb
push
mov
iret
mov
mov
out
adc
adc
std
mov
loope
jb
into
dec
outsb
mov
fadd
lahf
icebp
js
sbbb
jmp
inc
test
mov
pop
lods
cmp
mov
push
cmp
cmpsl
stc
adc
sahf
inc
ja
fstl
push
stc
cmpsb
sbb
int3
jg
lret
icebp
cmp
mov
dec
sub
out
jne
cmp
fdivrs
jns
xchg
mov
loope
and
int3
or
call
inc
mov
mov
popa
jae
mov
shll
sbb
js
test
adc
jne
jns
sbb
add
jg
push
andb
sbb
fstps
int
lods
mov
xchg
popf
sahf
mulb
aam
outsl
arpl
notl
mov
mov
sub
pusha
cmc
insb
jnp
dec
call
ljmp
xor
test
sbb
test
cmp
je
sub
testl
push
sbb
sbb
jnp
cmp
lods
fistpl
jmp
leave
mov
leave
addb
in
and
aas
mov
ja
pop
cmp
sbb
and
add
push
adc
xchg
sbb
dec
stc
rolb
out
out
xchg
imul
mov
xchg
test
mov
xor
mov
mov
or
inc
xchg
and
fstpt
xor
repz
xlat
call
mov
scas
fwait
inc
int3
push
sub
dec
push
xchg
push
or
jb
xchg
mov
inc
or
or
cmp
cli
out
aam
sbb
rcrb
xchg
push
sahf
aad
cs
xchg
pop
mov
lods
inc
sbb
add
mov
ret
sbb
pop
sub
sub
js
mov
pop
aad
scas
xchg
mov
rcl
aas
popa
and
pushf
add
push
xor
cld
test
cmpsb
imul
mov
and
xor
imul
push
ljmp
adc
lods
loop
inc
pop
dec
mov
pop
dec
adc
orb
fcmovbe
pop
daa
pop
inc
mov
add
mov
pushf
sbbl
adc
out
pop
add
pop
jno
fidivrs
cld
iret
loop
mov
addr16
fistpl
pop
mov
stc
mov
rclb
add
insl
sti
data16
mov
mov
out
fdivrp
or
xor
ss
inc
aad
mov
loop
cld
and
ret
ljmp
mov
push
popf
mov
test
push
jl
call
sub
dec
shll
pop
idivl
lret
mov
jecxz
sub
aad
aam
in
and
dec
mov
pusha
test
imul
mov
jns
negb
adc
push
subl
mov
rcrb
ljmp
pop
aaa
sub
jb
add
daa
jmp
mov
mov
jo
mov
les
mov
or
into
sarl
pop
in
cmp
out
push
std
sti
mov
lock
mov
xor
sbb
xor
jb
sbb
xlat
cwtl
ja
pushf
pop
notl
gs
stos
dec
test
push
dec
xchg
pop
lcall
popa
jb
mov
ss
sahf
xchg
arpl
pop
call
mov
sub
xor
and
mov
push
pushf
mov
mov
and
bound
mov
sub
mov
or
mov
xchg
sarb
aam
dec
sbb
pop
pop
imul
and
mov
adc
and
ret
xchg
ret
mov
dec
out
popf
cmpsl
pop
hlt
adc
push
arpl
jecxz
xor
mov
ja
mov
xchg
mov
push
inc
or
cmp
adc
in
or
loopne
add
cmp
shrb
std
add
das
enter
lock
mov
add
xchg
add
jg
lret
stos
stc
cld
lea
xchg
repz
rol
pop
jecxz
sub
jb
and
inc
and
rcrl
cmp
push
scas
js
push
xchg
or
mov
test
mov
cmp
repnz
mov
aaa
xchg
push
xor
sbb
push
sub
sbb
in
arpl
jge
push
mov
idiv
sarb
je
cmpsb
test
sub
test
mov
push
or
and
out
mov
sar
or
jne
dec
jno
xor
sub
gs
pusha
inc
add
dec
mov
mov
cmpb
sub
add
add
sti
and
ds
in
lods
arpl
xor
xchg
pushf
sub
inc
data16
aam
or
jmp
sahf
mov
pop
adc
sbb
add
mov
mov
push
popa
stos
jae
adc
rcll
aad
inc
xor
push
mov
sbb
scas
mov
out
cld
add
nop
jge
mov
mov
dec
or
cmp
add
movsb
inc
pop
jne
test
bound
fwait
push
push
push
repz
pushl
fisubs
sub
cmovge
scas
das
fisttpl
mov
push
lock
pop
stc
sbb
pop
dec
dec
xchg
inc
xor
rcll
and
repz
stos
outsb
lahf
test
mov
iret
adc
jno
sbb
pop
jle
inc
jo
cmp
insb
sbb
scas
insb
push
shll
out
push
jbe
clc
add
mov
mov
testb
xchg
pop
scas
dec
lods
xchg
out
push
jp
rcrl
cs
int3
int
jno
cs
adc
lods
pop
mov
dec
dec
std
push
repz
mov
fisubrs
in
jo
sub
popa
add
movsl
xchg
inc
in
mov
xor
adc
jecxz
loop
inc
push
std
dec
mov
sbb
pop
aas
in
xor
std
lods
inc
movsb
lcall
loope
jae
xor
adc
pushf
fwait
mov
cmp
inc
jp
pusha
shlb
push
rcll
stc
test
roll
test
mov
cmp
mov
jmp
add
pop
jp
mov
adc
aad
mov
daa
shl
test
rorl
mov
je
sub
stc
jle
mov
scas
out
inc
mov
rorb
push
das
jnp
cmpsl
inc
sbb
ret
pop
int
ljmp
test
mov
push
xor
psubsb
jp
insb
xchg
inc
inc
aam
data16
fmull
repnz
je
inc
and
inc
mov
cld
adc
inc
pop
mov
mov
inc
enter
out
aad
sbb
and
add
mov
mov
mov
xchg
jp
data16
lret
pop
dec
cmp
mov
inc
mov
std
sti
mov
push
xchg
test
jbe
pop
nop
dec
sarl
jecxz
stos
xchg
jns
clc
ret
inc
add
mov
dec
jg
cwtl
loopne
mov
or
nop
lret
rol
jge
push
in
popf
lcall
dec
sbb
mov
xchg
shrb
adc
pop
dec
scas
out
mov
pop
jmp
rcll
out
and
jnp
stos
add
inc
xchg
jmp
jae
fstpl
je
cmp
movsl
std
lahf
xchg
xchg
mov
push
icebp
or
fisttpll
or
mov
and
shll
push
pop
cmpl
and
xor
hlt
jge
jge
and
lock
sub
and
adc
fmul
out
jmp
jle
dec
push
mov
cmp
popa
or
ret
test
pop
iret
popa
push
imul
inc
das
jle
es
lods
dec
and
lret
call
fnsave
jecxz
push
pop
mov
cwtl
mov
pop
mov
cmp
outsb
lds
adc
fimuls
enter
cmp
fs
adc
test
popf
mov
mov
insb
lcall
inc
jo
pop
icebp
inc
jg
shl
lahf
lret
fidivrs
bound
int
add
jge
loope
add
scas
mov
jl
mov
into
mov
sbb
scas
mov
nop
negl
jp
shll
xchg
or
imul
sti
or
inc
sti
adc
cmp
mov
int
sbb
clc
sub
scas
mov
jp
lret
notl
push
pop
or
push
fwait
or
icebp
xlat
movsb
mov
mov
fdivl
orl
loope
lods
mov
pop
cwtl
cli
or
outsb
or
dec
mov
imul
jle
cli
loope
mov
das
xor
pop
sbb
jno
cwtl
xor
je
inc
and
std
aaa
and
sbbb
mov
sahf
mov
mov
imul
in
lahf
sbb
cmp
stos
rorl
jmp
pop
inc
sbb
outsb
scas
pusha
push
js
outsl
cmc
jecxz
inc
gs
rcll
mull
mov
roll
cmpsb
rcrl
rcll
sub
mov
sbb
fdivs
inc
in
jno
fisubs
cmp
mov
pop
cs
push
jecxz
scas
test
or
gs
sbbb
mov
ljmp
mov
cmp
push
ret
lods
push
lea
les
sbb
push
push
push
iret
repz
shl
or
or
jmp
ds
mov
inc
or
push
and
cmpsl
or
mov
cmp
or
push
imul
jl
mov
clc
push
les
roll
adc
pop
pop
or
frndint
mov
adc
enter
push
push
mov
add
mov
adcl
enter
cmpsb
add
mov
push
mov
frstor
adc
add
jp
xor
and
sub
or
and
js
jg
jecxz
daa
cmpb
xchg
das
mov
aas
loope
mov
jno
jbe
pop
pop
pop
push
loop
ds
inc
mov
daa
call
adc
shl
xchg
jns
sub
and
mov
scas
mov
pop
lods
scas
add
inc
int
xchg
sub
push
xor
dec
dec
inc
sub
repnz
fdivs
adc
jns
les
cmpsl
push
js
xchg
jne
sbb
fdivr
pop
sbb
jmp
xchg
dec
mov
sub
sub
mov
dec
dec
clc
scas
push
mov
fldt
in
lahf
call
or
cld
popa
out
or
inc
push
sub
xchg
add
fs
push
outsb
jnp
dec
insb
push
fidivs
rolb
adc
aas
and
sbb
pop
mov
repz
or
pop
mov
push
aad
pop
arpl
loopne
outsb
xor
or
call
and
add
push
es
add
pop
gs
xlat
or
push
jl
js
fmulp
imul
or
push
adc
mov
lcall
sbb
xchg
int
xlat
pop
outsb
xchg
inc
push
pop
icebp
leave
sbbb
push
pop
and
ss
pop
cs
push
adc
pop
sub
subl
jp
loop
push
and
jae
repnz
repnz
inc
ljmp
lods
cmpsl
out
lcall
inc
mov
enter
seto
int
orb
adc
mov
stos
mov
cltd
rol
imul
mov
int3
sub
xchg
jecxz
rol
xchg
mov
push
or
inc
xor
jle
dec
test
popf
cmp
mov
cmpsb
push
test
add
mov
sub
in
xor
test
outsb
cmpsl
pop
push
shll
out
loope
fwait
mov
mov
fiadds
or
xor
loope
pop
and
mov
or
fists
mov
lds
insl
insb
and
add
iret
mov
jle
xchg
cs
icebp
add
sub
or
inc
jg
sub
xchg
andw
not
jno
dec
pop
add
xchg
jl
mov
mov
mov
add
out
jecxz
sub
clc
adc
mov
add
jbe
dec
jl
sbb
inc
add
jmp
rcl
cmp
sub
xchg
or
ficoml
in
push
pop
jns
stc
rol
mov
inc
mov
subl
pop
mov
bound
gs
xor
pusha
in
mov
fwait
mov
dec
fidivl
test
xchg
pushf
daa
jae
push
push
shll
lods
or
orb
sub
mov
push
fwait
xchg
pop
popf
pop
not
andb
inc
movsb
add
dec
inc
push
imul
jb
mov
fnstcw
xchg
fists
dec
mov
lds
jle
sub
cmpsb
pop
ret
add
and
mov
outsb
sub
sbb
stos
movsb
hlt
inc
add
insl
jo
inc
stos
ds
hlt
sbb
popf
mov
add
and
add
aaa
ret
dec
fisttpll
dec
repnz
xchg
je
lahf
enter
dec
dec
cmp
dec
mov
lret
mov
hlt
dec
jp
and
ficoml
test
sbb
sti
imul
dec
cmp
inc
or
adc
test
lea
ret
negl
jb
adc
jns
and
clc
subl
mov
push
aad
add
loopne
jnp
pop
lahf
pop
loopne
adc
mov
into
js
outsb
mov
cmp
push
ja
xchg
inc
xchg
add
lahf
in
fisubl
sbb
hlt
pop
dec
mov
inc
sub
sub
and
or
pop
pop
cli
jbe
jge
adc
lcall
insb
jle
sbb
dec
sub
mov
movl
sti
mov
shlb
mov
test
and
and
insb
nop
mov
sub
popa
mov
add
lods
sub
hlt
daa
and
or
mov
ljmp
mov
inc
orl
rcr
rcrb
int3
xchg
cli
and
pushaw
xor
arpl
clc
out
outsb
and
mov
loope
sub
fdivs
xchg
inc
cmp
out
pop
and
xchg
xor
xchg
jb
nop
jp
xor
xorb
shrl
add
mov
or
cmp
ljmp
leave
stos
jae
mov
call
in
sub
or
or
das
sahf
mov
rorb
stc
hlt
or
js
mov
test
cmpsl
rolb
dec
pop
xchg
scas
push
sarl
ds
lods
call
or
and
gs
sbb
jnp
and
jae
sub
addr16
stc
mov
xor
fwait
xchg
cs
in
push
dec
or
cmp
insl
inc
fstpt
mov
call
fidivrs
sbb
ja,pt
dec
xchg
out
adc
mov
and
push
popa
jne
aas
mov
push
inc
sbb
pop
or
pushf
stos
xchg
rcl
adc
aaa
dec
push
mov
dec
xchg
or
pop
scas
divb
add
inc
aad
adc
fdiv
jmp
test
xor
cmpsl
jnp
shll
aam
push
fidivs
cli
addr16
pop
fmuls
adc
addb
hlt
out
in
dec
mov
and
add
push
sub
fdiv
dec
and
xchg
sub
sbb
scas
fsubrp
jns
add
jbe
mov
insb
arpl
lret
inc
and
add
xchg
pop
cmpsl
loop
or
sub
ss
mov
jno
dec
mov
int
int
stos
cltd
adc
hlt
or
jle
inc
leave
fsub
sbb
roll
mov
fdivrp
jmp
inc
sbb
test
cmp
insb
sbb
mov
lcall
push
pop
push
int3
xor
or
jl
cmpsl
mov
inc
loop
jno
test
gs
negl
scas
dec
pop
mov
mov
sub
xchg
lods
fcoms
movsl
outsl
cmp
leave
cmp
loopne
dec
jae
jl
aas
ret
mov
lea
mov
push
jge
gs
mov
pop
mov
xchg
jmp
sbbl
sub
lcall
scas
xor
daa
mov
xchg
jmp
jl
xchg
lods
jno
dec
insb
mov
icebp
mov
daa
rcll
scas
shll
push
cwtl
sti
lds
jg
pusha
gs
pop
iret
popa
jae
fisubs
hlt
int
jnp
mov
aas
daa
popa
pop
test
dec
fs
jp
mov
inc
fdivrp
test
mov
and
rorb
jg
and
test
pop
inc
push
fwait
roll
xchg
push
jg
movsl
das
arpl
fistpll
jmp
cltd
and
push
scas
or
jle
and
pop
bound
mov
std
and
ss
int3
adc
push
or
iret
jbe
pop
dec
mov
icebp
adc
or
mov
push
out
pop
inc
js
js
mov
scas
sbb
jg
mov
xor
xchg
pop
pop
stos
mov
cmpsb
xor
xchg
inc
call
mov
lods
or
aaa
sub
pop
dec
dec
push
hlt
sub
add
pop
loope,pn
xor
lods
pop
into
int
push
out
nop
mov
dec
jl
add
int3
push
outsb
insl
pop
test
repnz
lret
adc
fstpt
mov
dec
jge
jge
clc
inc
mov
mov
out
jp
mov
mov
jae
mov
je
sub
into
xor
mov
sub
ja
call
test
jo
jno
pop
dec
xor
and
adc
jge
mov
out
pop
or
mov
mov
divb
loope
adc
cmpsl
xor
jns
jge
repnz
repnz
mov
in
inc
lock
mov
dec
or
aam
rcl
cli
je
lods
bound
dec
xchg
cmp
and
cmp
test
jbe
roll
fnstcw
rclb
lock
mov
dec
mov
adc
mov
das
subb
repz
pop
or
orl
pop
sar
sub
iret
add
push
ret
cmp
push
bnd
jecxz
or
push
shll
and
movsl
js
cmc
fcmovb
lods
add
push
xor
popa
sbb
jne
xchg
mov
sub
dec
mov
lods
pop
lock
mov
xor
adc
pop
push
inc
mov
cmpsb
mov
cltd
repz
inc
ljmp
xor
adc
xchg
jp
xchg
test
mov
lock
cmp
mov
movsb
or
aas
negb
fwait
mov
popf
mov
movsl
enter
insb
inc
dec
or
imul
ret
lret
and
mov
sub
and
test
push
add
pop
or
pop
sub
aad
fsub
in
lods
add
fwait
xchg
pop
dec
push
lret
dec
daa
lret
pop
pop
or
jo
xor
inc
or
movsl
lods
push
movsb
out
mov
imul
ljmp
cld
into
lds
dec
and
mov
push
loope
dec
xor
fidivl
cli
mov
rcl
pop
mov
pop
repz
xchg
pop
pop
add
pop
sub
nop
mov
cmpsl
adc
lods
mov
js
mov
sub
mov
js
or
stos
jns
push
or
hlt
pop
push
jmp
adc
inc
ret
jnp
push
call
sarl
movsb
sbb
cmc
pop
mulb
orl
lods
out
orps
push
mov
test
jge
fimuls
jg
je
or
stc
pop
lret
push
mov
and
push
leave
addl
jmp
inc
scas
xor
xor
push
std
xor
out
xor
mov
cmpsb
mov
mov
arpl
jmp
and
lcall
mov
ja
sbb
insl
pop
sub
or
mov
divb
imul
cmp
lds
push
cmpsb
cmp
adc
mov
icebp
jns
popf
sub
jl
iret
xor
xor
repz
jb
mov
test
rcrb
std
lods
stos
es
ret
das
xor
cmc
aaa
mov
cmp
dec
fwait
adc
test
cmpsb
ds
push
lea
es
mov
mov
mov
scas
push
mov
fwait
pusha
mov
push
sub
inc
cmp
push
add
movsb
adc
xchg
sbb
arpl
cmp
dec
or
dec
rcrl
and
xor
xchg
in
aam
mov
movsl
jbe
fmul
xchg
das
add
mov
jge
add
repz
push
add
cld
mov
push
adc
sub
into
inc
jno
shlb
mov
in
and
mov
into
inc
in
adc
dec
imul
test
mul
mov
push
inc
mov
add
jecxz
scas
stc
addr16
push
js
mov
add
rcrl
pop
mov
mov
mov
hlt
or
push
inc
lods
stos
add
cli
add
cld
data16
les
inc
sbb
pop
and
popf
and
jnp
xor
jnp
out
jbe
fyl2x
insb
jae
adc
jo
les
sahf
xor
in
mov
jnp
lock
ret
sbb
nop
adc
lds
and
mov
mov
int3
scas
fldt
xchg
xchg
and
jmp
test
cmpsl
fldlg2
xor
icebp
cwtl
pop
pop
xor
negl
and
pop
cmpl
add
fcompl
lock
js
frstor
popa
push
inc
push
xchg
dec
dec
mov
rcll
imulb
test
icebp
pop
pushf
push
and
mov
sahf
ficomps
mov
mov
push
mov
jnp
dec
stc
cmpsb
test
cli
mov
pop
notl
js
mov
and
cwtl
jp
sub
mov
in
adcl
xorl
sub
adc
and
inc
pop
aam
js
sub
fs
lods
and
mov
es
cld
xlat
xchg
push
mov
xorl
cwtl
cltd
pop
and
cs
mov
or
pushf
xchg
or
insl
pop
sbb
insb
decb
nop
fidivl
filds
roll
call
out
sbb
xlat
pushf
inc
mov
cmp
leave
js
out
sub
fisttps
cld
cmc
addb
pop
and
clc
fistpll
sub
fcompl
cmp
test
cmp
es
shr
and
jp
and
outsl
shlb
sub
out
cmpsb
dec
cmpsl
lret
jecxz,pt
fsubl
hlt
cmp
mov
adcb
ss
aas
and
mov
stos
imul
ds
xchg
or
aam
sbb
ljmp
aas
nop
dec
and
pop
cmpsb
sbbb
test
enter
xchg
jle
fdivs
fdivs
sti
xchg
mov
aaa
push
mov
push
xchg
mov
scas
repnz
lock
testl
andb
ret
dec
call
mov
ja
lcall
sub
pop
push
mov
xchg
xchg
shrb
hlt
sti
int3
ret
sbb
les
add
cmpsl
lds
loope
jle
inc
inc
pop
test
shlb
sub
or
jl
xor
mov
adc
lret
jno
out
adc
xor
or
pusha
cmp
fsubl
arpl
fcmovne
push
pop
pop
loope
or
inc
insl
mov
mov
popf
test
cli
dec
xchg
movl
sti
jmp
add
sub
repnz
dec
lods
pop
xor
popa
inc
out
imul
fisttpl
daa
into
jl
sub
add
push
addl
jns
lock
out
ret
push
enter
inc
cli
call
pop
xor
das
push
pushf
mov
inc
cwtl
push
mov
in
cmc
sbb
cmp
sbb
fidivs
loopne
mov
fs
call
jns
aaa
out
das
dec
int3
inc
xchg
inc
push
mov
and
jbe
sbb
ret
pop
pop
inc
xchg
push
xchg
pushf
mov
ss
insl
mov
cmpsl
dec
inc
aad
or
out
mov
mov
hlt
test
mov
mov
or
pop
push
xor
or
inc
fs
add
push
fs
out
sbb
fnsave
call
xchg
gs
std
and
push
push
ss
xchg
pop
mul
loope
pop
cmp
mov
stos
xor
sbb
xchg
add
mov
cmp
subb
mov
xchg
dec
or
bound
stc
vmwrite
addr16
stos
jge
loop
les
pop
push
ss
and
jge
xor
mov
outsl
cltd
std
adc
shl
inc
loop
mov
mov
cmp
pop
xor
icebp
jno
jno
xor
jnp
pop
dec
std
dec
loope
fdiv
insb
push
adc
scas
mov
adc
out
and
out
push
inc
jmp
imul
cmp
insb
pop
outsl
fstpt
sub
xchg
jmp
test
sbb
test
jle
outsb
repnz
arpl
push
loopne
push
dec
mov
add
fsubrs
mov
xchg
push
fsubs
ret
int
add
in
sub
cmpsl
jmp
sub
and
ret
mov
xchg
fs
ja
or
add
and
lods
mov
push
insl
add
inc
js
pop
jle
repz
pop
jle
jmp
inc
lds
loope
imul
sbb
add
mov
insl
aas
sub
test
repnz
stos
xchg
xchg
xlat
stc
dec
mov
outsl
cmpsb
outsb
adc
test
jno
dec
add
fdivr
fucomip
rorl
imulb
cmp
cmpsb
in
fstpt
inc
fnstcw
push
pop
cmp
cmp
pop
xor
push
push
push
enter
std
cmc
dec
mov
adc
mov
dec
icebp
fxch
pop
int3
and
pop
pop
sarb
cld
mov
data16
or
test
or
mov
psrad
movsl
sub
hlt
push
jmp
or
mov
cmp
movsb
ja
cld
inc
jg
sub
les
xlat
fsubr
mov
addl
sbbb
lods
pop
int3
fnstsw
lds
cli
sbb
pextrw
xor
fidivrl
ja
lcall
rorb
sbb
push
or
nop
es
mov
outsl
cmp
je
loope
adc
sti
xchg
mov
lret
into
lcall
sbb
sbb
mov
adc
neg
add
mov
push
aad
movsl
jae
sub
cwtl
mov
sbb
sub
sti
inc
pop
pop
rolb
fbld
adc
sbb
jae
mov
sub
test
xchg
and
mov
push
pop
or
rcll
popa
xchg
decl
or
repz
std
enter
div
cmp
sti
enter
in
mov
ljmp
loope
js
fistl
scas
add
dec
inc
xchg
aaa
add
andl
mov
daa
mov
cmpsl
sub
push
dec
fdecstp
data16
daa
mov
adc
mov
dec
cmpsb
add
push
sahf
sub
sahf
ja
mov
cs
out
inc
mov
cltd
sbb
ret
dec
dec
pop
rorl
push
mov
mov
std
push
jae,pt
loope
sbb
sbb
jge
mov
scas
adc
pop
jp
add
loope
and
in
dec
addl
jae
sub
sub
movnti
add
in
push
adc
repnz
stos
lock
loopne
stos
stc
or
push
mov
add
test
clc
mov
pusha
fildll
fs
movsl
sub
jmp
pop
push
clc
cmpsb
pop
cs
push
loopne
aad
icebp
jns
xchg
pop
in
mov
mov
add
xchg
lret
out
inc
insl
loope
lods
and
pushf
mov
mov
xchg
in
repnz
add
push
push
inc
in
xor
insb
inc
cmp
sbb
push
dec
pop
xchg
rcrb
jb
cwtl
push
arpl
int
and
pusha
rcr
jmp
fbstp
lcall
sbb
pusha
add
sub
dec
cmp
imul
inc
fmul
pop
push
jb
fimuls
insb
jmp
add
xor
fnstsw
sarl
scas
je
push
dec
mov
cwtl
ret
sub
mov
imul
push
or
sti
mov
or
roll
insb
xor
xchg
jns
negl
outsl
xor
sti
cmpsl
mov
decl
data16
mov
mov
repz
scas
mov
movsb
inc
stos
cli
popf
add
lds
sahf
adc
aaa
ss
dec
aaa
iret
addr16
xor
lods
icebp
inc
dec
push
leave
pushf
inc
xor
adc
or
leave
or
jg
mov
mov
lret
jnp
push
jmp
ds
pusha
or
aad
test
sbb
inc
jecxz
xor
push
sbb
dec
insl
aas
movsb
pop
adc
or
mov
sbb
shlb
mov
inc
cmp
sbb
scas
arpl
hlt
shl
ss
inc
imul
loop
pop
loopne
inc
lret
adc
mov
cmp
xorl
jge
sub
sbb
xor
fldcw
mov
stos
cmp
mov
jnp
mov
dec
pop
mov
mov
inc
in
stc
jmp
xchg
pushf
pop
sbb
xor
mov
aam
mov
loop
imul
es
lds
pop
mov
stc
sbb
cmp
fs
xchg
orb
cmpsl
test
rcll
pop
aam
repnz
cmc
push
pop
ret
lret
fcoml
dec
mov
inc
mov
cli
daa
ss
insb
test
jb
test
adc
add
js
ret
and
pop
pop
cld
loopne
addb
dec
popf
cmp
or
add
mov
rcll
ljmp
lds
inc
jmp
fidivrl
aaa
shll
lcall
test
mov
inc
movsb
jbe
punpckhdq
lret
jns
imul
test
movsl
xlat
or
popa
mov
jb
loop
cmp
mov
pop
cmc
lods
in
in
xor
sub
jo
inc
xor
enter
ret
pop
pop
and
inc
sbb
mov
sti
cmp
pop
int
das
push
jbe
sbb
lods
outsl
je
xor
pop
ds
ret
adc
popa
jg
inc
adc
inc
mov
popa
jmp
inc
or
adc
jl
inc
mulb
out
es
insl
xchg
jae
loopne
in
aas
cmp
add
fisttps
loopne
xchg
inc
xlat
mov
popf
loope
sbb
enter
fdivrs
and
push
int3
inc
sti
std
mov
jo
jl
lcall
inc
mov
aam
mov
aam
inc
cmp
je
pop
lea
fidivl
dec
xchg
leave
pop
cs
inc
repz
cltd
inc
adc
cmp
pop
cmpsb
test
mov
xchg
sub
jns
jp
loop
popa
and
lock
sahf
jle
push
sub
inc
pop
and
lea
adc
mov
divb
inc
mov
cld
inc
test
repz
cmp
bound
mov
cwtl
mov
push
scas
dec
cmp
and
repz
xor
cwtl
repz
stos
and
leave
xor
jmp
fsubs
jbe
shl
addr16
dec
inc
pop
test
sub
push
mov
sbbb
xor
addl
std
xchg
adcl
push
clc
xor
jb
pop
out
jns
jne
fistpll
adcb
inc
mulb
lahf
push
sub
jne
xor
and
les
call
fcompl
pop
jecxz
testl
inc
rcrl
in
xchg
mov
adc
push
jno
push
xchg
push
xchg
push
xor
mov
sbb
into
add
shll
lods
jecxz
or
sbb
dec
dec
mull
dec
icebp
push
cmpsb
imulb
insb
inc
inc
test
test
sarb
out
dec
stos
xor
test
sbb
addr16
sti
pop
jge
int
rcr
loope
mov
pop
sti
popf
movsb
mov
inc
and
mov
decl
cmp
adc
popf
jge
out
lds
imull
xchg
xchg
into
inc
movsl
cli
or
adc
jp
pushf
dec
arpl
xchg
mov
add
sbb
mov
jno
dec
popa
mov
mov
popf
sbb
pop
ret
negl
pop
xrelease
or
icebp
adcb
imul
cmpsb
movsl
aaa
les
hlt
dec
aam
xchg
cmp
int
sbb
jb
push
insl
dec
add
leave
lret
sti
dec
lock
pop
repz
js
lret
and
cmc
cmpl
lret
lds
cmp
mov
adc
aad
ret
icebp
dec
xchg
shlb
adc
lock
aaa
iret
sub
add
xchg
test
into
mov
leave
add
mov
pop
xchg
xchg
sub
adc
lods
adc
pop
jmp
pop
mov
xchg
or
movsl
add
pop
loope
arpl
js
into
mov
pop
movsl
outsl
add
add
adcl
add
js
or
xor
ja
shrb
shrl
enter
fwait
outsl
fbld
dec
mov
mov
sahf
sbb
das
movsl
mov
add
and
repz
sbb
aam
adc
lds
add
mov
int3
inc
push
loopne
jnp
imul
cmp
add
inc
xor
scas
add
in
pop
and
repz
lret
aas
xchg
jo
and
stos
leave
popa
push
or
pop
movsb
pop
push
mov
inc
or
jg
es
imul
add
or
pop
popf
mov
cmpl
das
lret
dec
cmp
adc
xorl
pusha
jp
mov
cmc
or
sbbb
xchg
jecxz
and
mov
add
popf
adc
sub
xor
pop
inc
mov
mov
paddusw
in
xchg
push
sbb
or
test
ss
jne
in
mov
dec
js
ret
dec
psrad
push
jne
in
clc
sbb
rcl
ss
xlat
divl
in
or
push
adc
js
movsb
jge
add
and
test
mov
lods
inc
aas
jns
loop
clc
or
sahf
ret
popa
or
or
fstpt
pop
xchg
xor
jns
fnstsw
fistpl
leave
pmullw
sub
out
enter
mov
add
mov
loopne
and
out
add
stos
cmp
sbb
sbb
adc
xor
rclb
call
inc
les
pop
pop
lods
or
pop
icebp
fdivs
dec
outsl
cmc
shll
xchg
out
cli
jo
push
xchg
outsb
data16
add
in
push
aaa
ljmp
ljmp
push
ljmp
mov
push
aas
mov
pop
lea
jl
iret
xchg
mov
frstor
mov
andl
imul
fstps
sbb
not
mov
out
or
or
push
adc
mov
pop
icebp
into
adc
add
inc
jae
iret
dec
outsb
stos
popf
movsl
mov
aam
pushf
mov
sub
fistl
xor
enter
xchg
std
xchg
gs
push
and
cmp
cmp
ret
int3
sbb
stos
leave
jmp
and
dec
mov
sahf
mov
or
push
mov
xchg
jmp
outsb
add
fs
test
mov
repnz
xor
jns
sbb
xchg
fsubrl
outsb
jmp
aaa
icebp
loopne
pushf
sub
mov
pop
insb
pop
pop
addb
out
lea
dec
nop
lret
stos
in
arpl
mov
test
ret
das
ds
unpckhps
cmpsb
outsl
in
mov
lods
lock
outsb
fisubs
mov
pusha
jp
add
fwait
aam
test
lds
adc
or
add
test
mulb
inc
lea
lods
jo
repnz
push
out
pop
in
cmp
js
inc
js
xchg
mov
in
bound
jge
pop
sbb
cmp
sub
jae
adc
mov
shll
inc
movl
sbb
mov
int
fwait
cmpsb
pushf
ljmp
fsubrs
adcl
mov
icebp
sbb
jmp
insb
sbb
and
xor
jo
pop
jp
and
fwait
cli
test
sarb
pop
sahf
andl
je
arpl
or
jecxz
repnz
fisttpl
scas
in
cmp
jl
mov
dec
fstpl
jecxz
ss
outsb
mov
ret
xchg
in
shlb
repz
test
daa
or
jecxz
cmovo
aaa
shr
repnz
fwait
or
popl
sub
mov
loopew
out
in
mov
dec
scas
adc
push
dec
ret
xchg
mov
cmp
sub
inc
push
jp
mov
jl
inc
pushf
fnstenv
imul
adc
jnp
sbb
and
les
test
add
pop
outsl
mov
add
jae
xchg
imul
ret
sahf
ss
mov
inc
sub
cmpsb
jecxz
adc
xchg
mov
inc
pop
imul
xor
mov
push
stc
sarl
adc
xor
xor
inc
es
jns
mov
test
mov
cli
xchg
ljmp
xchg
lods
div
out
xchg
icebp
xor
inc
sub
out
sarb
xor
notb
movsl
xchg
mov
dec
xchg
sub
push
and
push
dec
jmp
fcomp
stc
loop
cmpsb
cmp
mov
fnstcw
orb
clc
inc
push
pop
dec
dec
test
cmp
pop
shl
in
jnp
mov
inc
sbb
pop
mov
cmp
insl
jg
and
movsl
enter
or
lcall
cmp
dec
xchg
push
jmp
shl
sub
cmp
inc
add
and
or
add
cld
cmp
insb
shlb
aam
jno
into
mov
aaa
clc
inc
push
push
adc
jle
mov
daa
jns
cmp
xchg
leave
add
mov
fcmovnu
test
cltd
sub
lds
jle
xchg
lret
cmpsl
jge
lock
cmp
aad
adc
adc
adc
jecxz
leave
cmc
lahf
rcll
cmpsl
test
or
decl
rol
in
sub
in
add
jmp
mov
add
sahf
mov
inc
mov
dec
in
adc
ret
push
sub
lahf
in
add
insb
pop
ficoml
rorl
mov
ret
pop
dec
sbb
pop
nop
sub
add
adc
fistps
enter
repz
adc
adcb
mov
jno
adc
pushf
inc
jmp
ret
mov
xor
xchg
jne
push
pop
jne
push
add
pushf
xchg
ja
ret
es
xor
mov
daa
mov
imul
sbb
mov
lods
into
int
out
push
bound
iret
sub
inc
enter
sub
nop
sub
pop
fldcw
xchg
dec
adc
pushf
mov
shl
add
outsl
jmp
mov
daa
ljmp
test
xor
mov
add
jg
dec
sbb
dec
repnz
movsb
int3
cmp
cmp
bound
rcr
push
mov
fsub
cmp
scas
stos
iret
ja
sbb
mov
sbb
jmp
dec
and
jns
mov
call
je
je
add
pop
jo
movsl
xor
into
adc
jno
add
enter
ds
lds
xchg
lret
das
aaa
lret
imul
out
adc
dec
scas
sbb
dec
xor
clc
cmpsb
adc
aad
adc
cs
popf
ficoms
push
sub
add
sarb
xchg
jp
add
aad
add
gs
mov
sti
pusha
adc
lret
sti
jnp
addl
std
push
pop
loop
and
or
mov
sub
dec
call
fsub
dec
shl
mov
mov
jbe
imul
sar
fsubs
out
je
mov
inc
imul
pop
cmc
pushf
xchg
add
cltd
inc
add
sbb
mov
movsb
mov
fstpt
and
sub
mov
shlb
mov
aas
rcl
adc
adc
outsl
std
pushf
jl
dec
fwait
xor
iret
mov
sub
mov
cmp
cs
daa
mov
fs
xor
in
cmpsb
into
cmp
fs
call
xchg
icebp
dec
or
cmpsb
xor
insb
call
out
mov
mov
test
jl
xor
mov
pusha
dec
gs
jae
loop
jno
push
dec
fldt
sub
xor
mov
push
lret
sub
out
dec
inc
cmp
stc
iret
out
dec
mov
sbb
inc
lret
je
bound
cmp
push
inc
mov
push
sbb
inc
jae
inc
sbbb
pop
mov
loop
out
or
adc
imul
je
stos
cmpb
or
adc
jae
stos
push
pop
clc
enter
push
push
or
jae
mov
jne
out
mov
fstps
adc
cmc
jmp
in
sarb
inc
pop
stc
xchg
cmp
sbb
out
or
jns
cmp
icebp
sub
data16
rcrl
sahf
notl
repnz
jle
xchg
pop
int
sub
jecxz
fidivl
int3
outsl
fstpl
push
lods
in
and
fisubrl
test
push
mov
fidivrl
dec
cld
jb
pop
pop
push
es
clc
inc
sbb
in
jl
mov
repnz
int3
enter
popf
inc
repz
adc
mull
mov
dec
sub
sahf
pop
mov
aaa
inc
in
push
sbb
sbb
cli
xor
loope
lret
cmp
mov
dec
and
ficomps
test
in
adc
jnp
fisttpll
mov
je
gs
popa
cmp
mov
xchg
jmp
xchg
sub
mov
aam
rcr
inc
xchg
push
outsb
push
je
repnz
xchg
dec
jmp
cmpsl
stos
cs
jnp
aaa
add
pusha
or
sub
gs
clc
and
sbb
sub
jge
sbbl
jbe
lret
adc
mov
fs
xor
jecxz
dec
cmp
pop
fistpll
push
mov
ret
fwait
xchg
imul
std
mov
add
hlt
inc
fldt
inc
test
mov
inc
loope
xlat
aam
dec
or
fidivrs
mov
adc
inc
push
out
sub
pavgb
popf
cmp
cmp
inc
sub
mov
mov
mov
sub
mov
je
and
sbb
insb
cmpsl
push
jle
out
push
jo
mov
jae
jne
inc
adc
imul
mov
adc
sbb
push
jb
pop
push
jl
ljmp
lods
cmp
pop
mov
negb
xchg
sbb
xor
cs
and
dec
pusha
insb
stc
xchg
in
lcall
lods
mov
sub
jbe
xchg
leave
pop
sarl
fnstcw
imul
xchg
adc
dec
fidivrs
jo
enter
mov
cmp
popf
xchg
js
fstps
or
loope
mov
add
cmpb
je
lock
into
scas
mov
sub
lahf
das
fldt
out
loope
xor
cwtl
sbb
push
imul
mov
mov
imul
xor
cmp
or
lds
lret
inc
and
aam
or
loope
loope
lret
int
mov
loope
inc
fsubr
rcrb
icebp
dec
ds
fistpl
pop
out
jl
add
mov
push
js
mov
pop
push
mov
outsl
pop
pop
rorl
ret
lock
push
dec
cs
cmp
add
mov
pop
fmulp
hlt
mov
mov
aas
out
test
pop
imul
adc
fstpt
jp
inc
arpl
mov
gs
cmp
jle
push
lret
xchg
stos
clc
xchg
adc
push
ss
lret
lock
push
ret
hlt
and
xor
out
dec
loope
push
sub
pop
inc
xchg
fxam
rcr
jmp
adc
mov
aaa
push
push
insb
inc
mov
or
xchg
sbbb
inc
test
ficomps
mov
sbb
xchg
sub
fiaddl
mov
bswap
xchg
repz
arpl
aad
mov
in
push
shlb
ret
or
stos
cmp
addr16
fiadds
nop
fsts
xchg
icebp
push
mov
rorb
fimull
loopne
je
insl
sub
sub
cmp
mov
cs
inc
rclb
clc
lcall
bound
or
out
xor
mov
outsb
jmp
push
mov
les
out
mov
sti
or
cld
jecxz
popa
push
jae
inc
and
inc
dec
mov
xchg
jecxz
push
fdivrl
or
xchg
out
jl
xchg
enter
cltd
mov
fdivrs
das
imul
xchg
je
jnp
jle
leave
ret
es
pop
cmpsl
jle,pt
cltd
pusha
cs
pop
sub
int3
xchg
inc
es
repz
mov
push
pop
test
xchg
xor
ljmp
repz
and
xchg
mov
movsl
loopne
sbb
pop
inc
dec
cmp
mov
add
aaa
lea
sbb
in
push
or
test
pop
jmp
lock
add
repnz
adc
jp
fcompl
mov
push
testb
movsb
and
mov
sub
shr
enter
std
icebp
in
xor
mov
pop
xchg
xor
nop
push
or
scas
and
cmp
stc
lods
nop
pop
in
punpckhwd
sub
test
shlb
scas
stos
jl
push
mov
insb
inc
inc
xor
mov
out
inc
sbb
push
mov
cmp
daa
ds
or
cs
sarb
arpl
cmc
lds
pusha
xor
mov
mov
jmp
js
rorb
xor
or
push
dec
or
dec
pop
and
int3
mov
mov
sub
mov
mov
adc
jmp
enter
mov
cmp
dec
dec
int3
bndldx
lods
mov
jne
mov
or
mov
out
test
cwtl
in
adc
into
popf
loope
inc
and
movsl
arpl
imul
movsl
mov
movsb
fxtract
sub
add
cwtl
xchg
sbb
out
or
lret
int
dec
pop
in
mov
add
bound
xorb
aas
adc
sub
insl
fiaddl
aaa
out
pop
aas
stos
lsl
mov
xchg
es
adc
pushf
push
aas
sub
and
pop
lock
push
ret
xchg
sbb
adc
mov
aam
push
insl
out
dec
xor
inc
xor
dec
rcr
jge
mov
in
repnz
lds
das
ficoml
das
xchg
sub
fidivrs
pushf
mov
push
add
sti
iret
mov
push
repnz
mov
add
pop
sbb
popf
jl
xchg
inc
mov
or
stos
add
or
in
int
daa
push
insb
sbb
shrb
shll
loopne
pushf
inc
and
jmp
sub
gs
fcompl
cmp
dec
js
fdiv
mov
icebp
jle
sahf
rorb
lock
sbb
dec
iret
xlat
ret
cmp
enter
ds
addr16
lret
push
xchg
in
les
inc
xor
les
es
cld
call
pop
xchg
dec
pop
mov
jg
mov
ds
js
adc
push
or
or
pop
push
fcoml
in
clc
roll
mov
sub
je
dec
pop
jns
xor
cli
out
push
and
shrb
test
adc
dec
cmp
mov
xchg
icebp
in
daa
xor
jge
jnp
pop
xchg
mov
pop
pop
or
arpl
in
imul
xor
cmp
push
movsb
in
in
mov
sub
ss
push
movsl
dec
xor
je
out
and
dec
sarl
or
fsubrs
or
push
daa
scas
push
or
rolb
cmp
je
mov
dec
insl
push
add
aaa
xor
ret
ror
xor
cs
loop
mov
insl
or
es
dec
sbb
movsl
push
ljmp
pop
push
loop
lds
add
fistps
mov
push
push
dec
pop
add
and
jl
xchg
jno
rorb
int3
xchg
xor
sbb
fcoml
fwait
enter
mov
mov
lods
mov
xor
pop
xor
popf
or
mov
mov
add
push
adc
add
xor
xor
rcr
sbb
inc
icebp
cmp
mov
fsubl
mov
ds
sub
push
sub
sub
shll
adc
mov
icebp
mov
mov
subb
cmp
add
mov
inc
mov
movsl
jmp
pop
mov
inc
mov
in
out
cmp
sahf
sbb
xor
std
and
push
xor
push
pop
mov
jecxz
jns
dec
daa
mov
mov
addr16
jnp
cmpsb
jg
cltd
mov
sub
xchg
mov
pop
jbe
mov
cmpsl
mov
inc
mov
cli
xor
sar
mov
dec
sti
ds
fwait
mov
mov
test
sub
pop
mov
stos
pop
loope
xorb
add
mov
inc
mov
mov
jmp
shlb
inc
ss
inc
imul
repnz
outsl
xchg
and
jp
popf
stc
pop
push
xor
gs
popf
pop
add
aaa
add
inc
cmp
ss
cmp
jnp
fcmovnu
sub
cmp
sti
add
mov
cmp
in
sub
jl
xchg
jecxz
sub
out
push
test
and
pop
xlat
jp,pt
cltd
xchg
iret
out
fnsave
or
shlb
loope
push
sub
xchg
push
sub
mov
fdivrs
movsl
adc
sub
sti
adcl
pop
das
js
mov
addr16
or
mov
imul
push
jne
cld
fcmovnb
mov
icebp
pop
xorl
xor
cmp
sbb
loop
dec
rol
int3
ret
arpl
outsb
cmp
mov
lcall
fstl
dec
in
sti
lcall
andl
or
and
movsl
daa
mov
adc
mov
lret
fmull
jle
xor
daa
loopne
add
outsb
mov
mov
fwait
addb
and
pusha
not
mov
jae
call
es
mov
mov
cmp
xor
mov
sti
adc
adc
test
jae
jg
push
sub
mov
mov
mov
push
jge
sbb
test
mov
js
pop
xor
xor
lds
dec
jmp
popa
or
ret
pop
mov
pushf
push
fucomi
and
mull
int
into
pop
rolb
pop
lret
and
icebp
jae
xor
inc
iret
test
pushf
shl
je
mov
fcompl
pushl
xor
and
dec
cmp
mul
jnp
pop
sub
push
mov
les
sub
push
sub
inc
push
pop
repz
dec
jb
in
mov
rcrl
sahf
mov
repz
out
ljmp
scas
or
add
add
mov
add
call
out
mov
add
adc
push
ja
call
jle
nop
mov
mov
stos
lret
les
and
xor
jo
cli
fsubrl
mov
xchg
fdivrs
out
pop
repz
clc
dec
mov
ret
jno
push
repz
daa
in
dec
add
jnp
adc
leave
or
cld
fstps
mov
pop
daa
xor
xlat
inc
rcll
lds
lds
xor
rorb
out
scas
pop
sti
pandn
jb
jecxz
scas
sbb
mov
cld
xor
mov
popl
andb
add
sbb
add
pushf
ljmp
nop
cmp
and
iret
cli
dec
inc
inc
pop
rcrl
in
add
jo
or
mov
adc
mov
hlt
outsb
pop
pop
jp
jge
dec
dec
daa
push
js
test
xchg
sahf
mov
sti
mov
jmp
sbb
push
dec
int
push
fldt
add
mov
inc
push
lret
int
adc
and
enter
aam
add
pop
mov
add
inc
leave
mov
sbb
fninit
lods
stos
testl
xor
in
add
fldl
cmp
adc
jle
int
or
fisubl
fstp
out
sbb
xchg
pop
cmp
inc
out
repz
fmuls
jle
inc
aad
mov
jb
xchg
sbb
dec
pop
sub
or
in
nop
jmp
stos
sbb
iret
xchg
ds
aad
fwait
sub
adc
test
enter
cmpsl
insb
shl
stos
insl
leave
xor
and
leave
in
clc
sti
out
adc
mov
inc
cmp
pop
gs
adc
cs
mov
sbb
mov
loopne
push
and
popa
pop
leave
push
lods
fsubl
xchg
mov
je
pop
fnstcw
lods
cmp
push
sub
stc
shlb
mov
addr16
dec
mull
jno
xor
fdivl
push
push
outsl
andl
add
pop
jle
xor
pop
mov
xor
jp
sbbl
mulb
rol
push
das
jnp
jb
adc
mov
shlb
mov
sbb
inc
pop
dec
pop
sbb
xchg
inc
ficoms
push
daa
repnz
fs
xor
mov
xor
sbb
adc
fucomi
mov
sbb
fisttpl
or
je
pop
dec
xchg
outsb
jb
adc
sar
stos
adc
mov
jmp
mov
pop
pop
xchg
jecxz
fwait
idivl
dec
push
jbe
mov
pop
aaa
adc
les
inc
out
push
mov
dec
xor
sbb
jle
arpl
mov
subl
adc
inc
sbb
cli
addr16
cs
les
dec
cmc
stos
aad
dec
add
in
adc
dec
sahf
adc
pop
fcoml
into
test
push
sub
ss
mov
aad
out
popf
mov
dec
cmc
pop
repnz
outsl
out
popf
aaa
jle
cld
jno
addb
jg
pop
ret
aam
jle
jns
sub
dec
hlt
lock
popf
jae
lcall
sbb
lcall
out
cmp
and
cmp
jns
adc
fdivl
pusha
jp
mov
mov
outsl
and
xchg
outsb
pop
inc
xchg
pusha
or
adc
jae
mov
loop
sahf
out
rclb
push
xlat
data16
rorb
add
cmc
mov
ret
mov
aas
inc
stc
or
out
mov
mov
add
or
xor
sub
daa
push
arpl
arpl
lock
test
bswap
test
dec
aam
into
fisttpl
dec
dec
ss
xchg
nop
pop
sbb
jl
mov
fisubl
ret
xor
pop
push
or
jnp
clc
lcall
inc
es
daa
sub
jge
inc
iret
fadd
dec
mov
loop
cli
mov
pop
std
mov
mov
icebp
popf
je
adc
lret
fsubrs
pop
pop
inc
xor
jle
adc
lea
jmp
shl
lea
jb
push
and
pop
sbb
mov
mov
iret
movsb
lret
and
mov
cmp
mov
andl
popa
jmp
hlt
and
jmp
rorb
orb
push
sbb
pop
sti
or
mov
ror
mov
dec
aas
insb
out
jo
jge
jge
mov
arpl
ss
pop
adc
sti
add
cmp
push
xor
jp
jecxz
ja
and
xchg
popa
push
das
jnp
sarl
or
leave
in
xchg
xchg
and
jbe
roll
jo
repnz
inc
out
popf
pushf
dec
xchg
or
fs
push
mov
js
adc
xor
add
sbb
xchg
in
imul
negl
dec
repnz
imul
dec
enter
xor
lock
insl
in
sub
sub
push
rolb
sub
jle
jbe
roll
jg
jmp
push
std
or
std
pop
xchg
push
add
mov
adc
in
mov
cmp
out
cmp
dec
jg
sub
in
mov
pusha
xor
mov
aas
cmp
or
loopne
ja
push
sub
fldt
adcb
rep
dec
and
inc
mov
jl
or
xchg
push
sub
pop
add
xchg
mov
jecxz
inc
mov
pop
pop
or
lea
pop
outsl
xor
or
popf
orb
popf
rclb
jecxz
jp
popa
sysenter
pop
or
jno
pusha
and
je
fdivrl
sub
test
ret
test
cmp
sbb
mov
shll
mov
jmp
ja
xchg
out
ret
js
mov
pop
popf
cmp
sti
jb
enter
sub
xor
push
loope
lods
jp
sti
push
test
loope
xor
jge
xor
iret
pop
fwait
mov
add
push
push
jbe
jne
or
and
in
pop
ja
ret
pop
adc
xor
adc
xchg
orl
mov
ss
outsb
addr16
test
mov
cmp
add
scas
jp
ja
pop
xchg
std
mov
add
xor
mov
jp
push
test
push
rcll
push
sub
jne
jge
fildll
test
iret
into
jb
cmpsl
loope
out
in
pop
pop
fstpt
fbld
inc
sbb
push
es
cmp
mov
cmp
sbb
imul
hlt
dec
mov
xchg
add
pop
push
mov
scas
das
jbe
es
loopne
aam
ss
rolb
icebp
xchg
xor
sub
mov
push
cwtl
fistpll
loope
dec
out
in
and
jo
inc
jns
mov
xchg
icebp
xchg
xchg
xchg
mov
xlat
mov
fiadds
mov
xor
xchg
push
sub
jns
or
mov
cld
je
lea
ljmp
mov
out
pop
pop
push
and
je
rorb
cmp
mov
mov
or
outsl
adc
rolb
pop
movsb
push
out
lea
sbb
jo
stos
push
stos
lret
dec
enter
fs
jne
repz
jne
pop
enter
testl
mov
ficoms
lock
inc
cmpsl
jbe
pushf
repz
adc
lret
jle
jge
xchg
sbb
pop
xchg
jne
xchg
iret
dec
jno
scas
xchg
sub
jg
fnstcw
mov
lea
daa
sbb
fwait
push
int
xchg
xorb
pop
cld
popa
nop
stc
shrl
adc
mov
out
mov
dec
dec
pop
loop
mov
sbb
insb
test
dec
and
dec
mov
push
push
push
adc
xor
test
xor
cmp
shl
jmp
popf
subb
add
push
lret
imul
pop
aam
pushf
fstps
in
movsl
pop
filds
mov
jo
test
outsb
cmp
jno
gs
test
imul
aaa
cli
gs
sbb
dec
sub
pop
outsb
adc
repz
int
test
mov
cltd
sahf
out
xchg
loope
mov
pusha
ror
xor
int3
xor
fdivrs
cld
flds
mov
mov
xchg
gs
in
rcl
fcmovbe
sti
sti
push
mov
in
pop
pop
mov
out
nop
loop
inc
mov
ret
push
lods
imul
addr16
mov
data16
sub
cmp
push
popf
andl
xor
in
sbb
dec
call
divl
ret
xor
enter
aaa
push
rcll
out
out
pop
push
das
dec
adc
adc
push
inc
loope
aas
lret
lret
pop
mov
jmp
push
push
xorl
cmc
xchg
mov
or
test
mov
jg
addr16
out
xor
ficoml
sub
pop
xchg
test
inc
pusha
int
arpl
jp
jge
push
mov
gs
psrlw
dec
ljmp
fwait
fs
and
rclb
sub
pop
jo
pop
mov
int
xor
xchg
push
jle
sti
xlat
inc
xor
lahf
pop
nopl
mov
jno
out
jmp
pop
cld
icebp
jnp
shl
push
add
fdivrs
sbb
gs
ret
or
push
sbb
subl
or
jg
int
dec
mov
les
jl
lock
sbb
or
pop
dec
jno
fiadds
cmp
ret
mov
test
insl
mov
xor
mov
lret
mov
arpl
mov
movsl
scas
inc
xor
mov
fxch
mov
pop
push
mov
cmpl
frstor
cli
fwait
mov
aas
popa
mov
cmp
sahf
fwait
xor
push
jge
mov
mov
sbb
cmp
push
mov
dec
je
mov
cmp
mul
lds
stc
or
dec
xchg
push
pusha
inc
dec
cld
adc
push
int3
negb
lods
or
cli
jge
insl
js
fldt
jno
es
nop
pusha
repnz
or
fnstenv
hlt
out
int
push
pop
add
daa
ljmp
imul
ret
dec
jbe
and
push
dec
lock
push
fs
jnp
shll
inc
cmp
scas
jbe
in
stc
das
or
test
aaa
add
outsl
jo
add
pop
dec
test
mov
pop
xlat
sarb
mov
mov
int
scas
fs
int
out
and
fidivrs
cmp
adc
push
inc
push
loopne
outsl
popa
cmc
sbb
sbb
push
inc
or
aas
pop
adc
dec
cmp
cld
iret
xchg
in
fcompl
add
pop
gs
and
cmpsb
cs
testl
sbb
mov
sub
fisttpl
push
or
leave
nop
pop
adc
jne
push
pusha
mov
xchg
dec
and
push
inc
insl
rorl
inc
mov
rcl
pop
mov
in
cwtl
inc
dec
mov
xchg
adc
add
fldt
pop
shl
movsl
mov
out
and
ljmp
cwtl
inc
mov
arpl
lret
test
sbb
fs
enter
mov
or
aas
sbb
and
push
jno
lahf
or
daa
outsb
popf
push
fimuls
lcall
xor
jne
out
xchg
fwait
ljmp
sbb
mov
inc
jle
test
push
shll
aam
aad
jno
lahf
cmp
lret
cmp
sbb
popf
sub
sbbb
push
pop
or
jbe
add
cmp
mov
call
movsb
adcl
fwait
xor
cmp
add
js
dec
or
cmp
pop
test
clc
mov
lods
mov
js
imul
or
jae
sbb
scas
dec
mov
add
jb
sbb
xor
add
push
fidivrl
lods
cmp
sbb
sub
push
mov
dec
push
mov
call
cltd
aaa
ljmp
sub
xor
mulb
scas
jae
out
xchg
data16
popa
adc
leave
andb
cwtl
mov
adc
xor
or
and
push
out
jecxz
mov
xor
xchg
mov
mov
dec
or
lods
rolb
insb
fistpll
fwait
add
cmc
xor
cld
push
add
add
inc
add
pop
ret
xor
cli
out
xchg
cwtl
bound
cmp
xchg
rcrb
daa
mov
xlat
mov
cwtl
push
shrl
mov
enter
inc
cs
std
mov
xchg
dec
movsb
xchg
lods
fsubrp
xchg
cmp
call
addr16
pop
mov
orl
lcall
lods
dec
xor
push
test
test
sbb
and
sbb
je
int
and
cwtl
mov
and
mov
fcmovne
int3
inc
xor
out
test
and
mov
mov
ja
int3
scas
cld
js
pop
adc
shrb
lds
pop
mov
sub
faddl
jo
xor
outsb
cwtl
xchg
dec
mov
fisttps
dec
ja
addr16
andl
add
lret
push
imulb
adc
int3
jge
xchg
sarb
std
cmp
js
mov
divb
and
sub
cmpsl
mov
cld
and
cmp
jmp
andl
jge
aam
lcall
ret
mov
jmp
cmp
dec
dec
lcall
jne
pop
cltd
push
out
movsl
imull
push
adc
decl
jg
inc
stos
jnp
jp
das
or
push
mov
pop
jbe
xchg
or
std
sbb
and
rclb
and
rep
xchg
pop
mov
xor
sti
xchg
adc
dec
lds
push
sbb
cmp
pushf
icebp
adc
mov
lods
shrb
pusha
cmp
xchg
sbb
mov
movb
mov
out
sub
jp
fistps
xchg
mov
pusha
and
stc
vpxorq
xchg
scas
sub
or
aas
lds
pop
call
div
cmp
lret
inc
test
popf
loopne
lock
or
lahf
jno
movsl
xchg
repnz
push
jmp
notb
xor
dec
std
imul
adc
mov
into
popf
mulb
mov
lret
push
adc
pop
mov
mov
sahf
leave
push
mov
adc
ret
inc
push
add
pop
int
int3
push
int3
push
pop
or
fadds
pop
cwtl
jle
lea
je
and
imull
mov
xor
mov
mov
mov
or
and
outsb
mov
sbb
jne
pop
jle
test
rorb
pop
inc
dec
mov
jmp
imul
sbb
and
dec
xor
or
pop
and
xlat
stos
jl
int3
xchg
xchg
outsl
mov
adc
decl
int
mov
lcall
mov
sbb
inc
out
imul
cmp
sub
dec
pop
cmc
rcll
stc
xchg
jns
push
push
lods
subl
sub
push
imul
scas
loope
mov
in
cmp
xchg
pop
and
jg
aaa
call
push
int3
pop
test
gs
xor
mov
jne
cs
in
scas
lds
pop
pop
ljmp
cld
sbb
ljmp
adc
push
mov
out
adc
fdivrl
data16
and
xchg
pop
sarl
hlt
data16
mov
cld
subb
daa
xchg
jl
mov
je
je
inc
ss
dec
test
add
pop
jmp
pop
in
stos
mov
push
cmc
push
adc
nop
inc
rorl
lds
sarl
repnz
cmp
cmpsl
xor
inc
xchg
or
fidivs
jl
mov
xchg
fsubl
dec
adcl
adc
push
push
mov
test
cs
repz
sub
jae
das
push
push
add
fidivrl
ja
pop
mov
pop
sti
add
insl
and
pop
xchg
dec
ret
lea
iret
mov
xchg
and
jl
pop
cld
in
out
cmpsb
testb
sbb
mov
add
adc
outsb
cmp
stc
mov
inc
xchg
xorl
lods
pop
xchg
adc
mov
sub
pop
jp
add
cwtl
mov
push
sub
pop
mov
pop
cs
jecxz
inc
aas
lods
sub
rorb
outsb
sub
mov
adc
mov
sub
and
out
xchg
pop
lret
xchg
vpackssdw
cmp
push
inc
test
and
or
pusha
and
lcall
gs
aaa
adc
adc
xor
xchg
ljmp
xchg
xchg
mov
mov
gs
adcb
inc
mov
sbb
adc
iret
fstpt
nop
cmp
ret
lods
dec
push
stc
into
jnp
mov
mov
xlat
and
pop
xor
std
xor
lcall
cld
iret
dec
fldcw
cld
xor
mov
add
mov
push
repz
sub
cmpsb
mov
mov
xchg
lods
std
aam
dec
add
and
or
lcall
xor
addr16
pop
js
fsubrs
sbb
pop
or
jp
test
mov
sub
popa
dec
push
push
enter
dec
int3
ljmp
pop
mov
push
pop
das
jbe
lods
cmpsl
or
loop
iret
mov
mov
rol
test
test
push
adc
mov
inc
inc
and
addb
imul
dec
pop
int
mov
stc
lgs
popa
jge
cmp
mov
dec
xchg
mov
mov
fbstp
test
jle
pop
stos
sbb
inc
lea
out
rolb
fdiv
fcmovbe
jno
push
hlt
sbb
sub
xlat
cli
xor
jle
ss
jne
xchg
xchg
loop
es
pushf
xchg
fisubs
pop
or
adc
loopne
fdivs
pop
insb
dec
pop
and
jns
add
call
shlb
and
outsb
ret
data16
push
mov
clc
aas
into
mov
in
test
inc
dec
outsb
ret
inc
idiv
testl
add
sti
incb
insl
push
lcall
cmp
inc
xchg
lcall
push
ja
dec
push
jge
xchg
mov
mov
push
xlat
mov
and
insl
mov
movsl
jns
pop
push
enter
fs
add
and
adc
sarl
add
pop
fwait
pop
mov
inc
mov
jae
fdivrs
daa
and
jo
and
sbb
jecxz
add
pop
mov
mov
jge
dec
lods
sub
sbb
movsb
jnp
in
mov
cmp
repnz
xchg
mov
scas
cwtl
call
dec
xchg
pop
imul
arpl
pop
test
ljmp
icebp
nop
mov
jae
mov
mov
cld
cmp
add
cmpsb
mov
pop
mov
pop
dec
fdivp
xchg
div
test
xchg
aam
pop
fldt
add
adc
xchg
repnz
repnz
mov
adc
test
add
popa
push
aad
push
xchg
aaa
inc
mov
out
test
xchg
push
lcall
loope
and
jbe
xchg
cmp
pop
outsb
fwait
adc
xchg
fldt
adc
iret
jg
lods
sub
jge
loopne
add
inc
repnz
mov
and
pop
test
loopne
in
pop
push
repnz
inc
mov
push
xchg
fprem1
jl
lret
sub
mov
push
jp
inc
and
add
iret
push
mov
mov
mov
xorl
outsb
xchg
push
add
test
or
popa
loop
sub
jbe
in
in
jno
into
subb
push
mov
sbb
jbe
add
pop
and
lcall
sub
jb
adc
mov
orb
repnz
mov
adc
movsb
jecxz
sub
jno
push
xor
dec
lcall
push
and
enter
push
mov
xchg
ds
and
out
cmp
lds
leave
jg
sbb
fisubrs
fsubs
in
sbb
jl
jo
dec
in
dec
in
movsl
out
mov
fmuls
std
scas
xor
mul
lds
popa
jmp
negb
pop
jno
ror
int3
roll
adc
mov
jge
xor
jno
and
push
push
aaa
lods
sbb
push
sti
dec
ffree
inc
in
jns
int3
test
push
pop
movntq
daa
jl
lock
cs
xor
cmpsl
repz
repz
mov
in
and
mov
insl
inc
push
andl
and
rcl
mov
int3
fistps
xchg
int
jle
jle
lods
xchg
add
pop
jns
dec
mov
fwait
stos
je
adc
fbld
ljmpw
push
stos
mov
sub
dec
cmp
fs
loop
sub
stos
sbb
aaa
xchg
les
mov
adc
xchg
push
ficomps
pop
test
or
arpl
xchg
jne
mov
shll
push
push
scas
lods
mov
mov
mov
pop
bnd
ljmp
add
xor
cmp
mov
cmp
cmc
testb
outsb
je
pop
scas
push
and
sbb
subb
xchg
and
cmp
ficomps
jge
xchg
and
or
cld
cwtl
ret
rcr
insb
pop
lea
sub
or
sbb
lahf
movsl
rcl
and
mov
jg
ja
xor
adc
and
scas
xlat
push
mov
daa
movsl
add
pop
inc
sbb
shrl
lods
and
mov
xlat
popf
mov
gs
jbe
fisubl
pop
outsl
and
jns
mov
sub
add
stos
aam
dec
pop
lock
cmp
xor
jne
insl
sub
mov
pop
hlt
test
int3
adc
popa
sub
pop
sbb
xor
out
push
xor
push
mov
adc
pushf
xchg
stos
outsl
into
aas
xor
jo
ds
push
mov
mov
test
sbb
lcall
and
arpl
fadd
fisubl
mov
add
lcall
loop
pop
gs
test
add
test
ljmp
ljmp
fstpl
adc
mov
pushf
push
daa
push
mov
mov
adc
xchg
enter
xor
jle
iret
inc
cld
inc
fnstcw
and
lcall
in
dec
mov
sbb
fstl
or
inc
or
hlt
lock
xlat
aad
sub
idivb
outsl
mov
test
dec
imul
sahf
pop
push
daa
cmp
xor
lea
lcall
lahf
mov
sub
mov
xchg
mov
cmp
popf
sub
add
xchg
mov
dec
clc
movsl
mov
into
aas
xor
dec
ja
ljmp
imul
cltd
jp
pop
lcall
jle
and
ss
mov
aam
leave
push
xchg
jmp
out
out
out
arpl
sub
add
lret
stc
mov
ljmp
lods
adc
push
pop
popf
in
push
and
pushl
test
mov
aam
sarl
pop
xchg
dec
call
jae
out
ljmp
flds
adc
outsb
cs
jno
imul
xchg
xchg
movsw
ficoml
adc
jno
adc
xor
inc
mov
fmull
in
fwait
daa
out
insl
lea
frstor
sub
mov
xchg
std
adcl
mov
adc
out
pop
cmpsl
push
jne
jle
adc
gs
push
lret
add
or
adc
jmp
into
lret
xchg
fldenv
shrl
imul
leave
push
inc
pop
addr16
cmp
pop
adc
or
sub
push
aaa
popf
jle
or
or
pop
mov
dec
pushf
movsb
or
inc
lock
push
jge
pop
mov
lods
pop
push
xlat
loop
stos
xchg
sbb
je
jecxz
mov
cwtl
pop
pop
jns
outsb
and
in
fwait
add
hlt
lods
jnp
icebp
das
or
and
mov
test
pop
pop
mov
jnp
rcr
nop
movsl
lahf
clc
mov
ljmp
call
dec
sub
dec
mov
xchg
pop
sub
mov
sub
pop
iret
mov
std
dec
pop
push
xchg
pop
or
popf
sbb
repnz
sbb
hlt
addr16
enter
inc
dec
inc
add
pop
xor
shl
mov
test
pusha
fsub
mov
mov
push
dec
xor
push
loope
popa
les
add
pushf
or
cmpsl
subb
jae
aas
add
cmc
cmpsl
sub
je
ja
fisttpll
fcmovne
lock
movsl
adc
imul
add
cmpsb
in
sbb
je
add
jecxz
mov
rcrl
clc
dec
add
pop
test
aam
mov
add
leave
shr
ja
cwtl
mov
or
mov
cmp
gs
add
ljmp
out
pop
or
pop
mov
mov
push
sub
adc
fdivl
mov
mov
mov
sahf
mov
out
push
mov
pop
sti
aaa
fdivs
dec
sbb
cmc
jno
fisubs
xor
call
inc
push
cwtl
scas
add
pop
inc
jle
jp
mov
popa
lods
bound
in
std
inc
add
push
mov
jno
out
icebp
movsb
add
cmp
mov
insl
inc
xchg
sub
fsub
in
mov
divb
xor
and
and
sbb
stos
imul
shll
aam
jp
xchg
ja
adc
loope
ja
std
in
jnp
add
call
in
hlt
in
lock
lea
xchg
cmp
jecxz
sbb
aad
jb
jmp
or
icebp
jecxz
jns
out
std
xchg
into
xor
orb
nop
sti
or
adc
sbb
jne
aas
and
cwtl
lds
pop
sbb
pop
pop
shrl
scas
adc
and
add
das
add
and
imul
mov
repnz
mov
decl
mov
lret
mov
fiaddl
leave
fwait
mov
fdivl
mov
xor
sbb
push
daa
cmp
rorl
or
insb
scas
sub
pop
cmp
inc
xchg
out
mov
pop
ret
arpl
and
pop
jb
add
imul
inc
add
xor
inc
xor
fucomp
push
out
in
inc
test
nop
pop
clc
jo
mov
push
pop
movsb
loop
cmpsb
push
cmp
pop
mov
in
adc
or
jmp
mov
ds
scas
icebp
fyl2x
gs
cmpsl
sub
xchg
pushf
mov
cmpsb
pop
inc
push
ja
into
dec
cmp
push
ds
ds
inc
cmp
or
lods
and
push
dec
jb
cmp
dec
in
push
fsubrs
addl
inc
mov
fnstcw
incl
lret
and
lahf
mov
and
lea
jmp
push
mov
fldl
xlat
jns
pop
xchg
xchg
push
int3
rorl
js
lret
fwait
dec
fstl
adc
sbb
inc
lret
fs
pop
shll
adc
aam
test
sbb
add
in
outsl
mov
xor
out
and
jecxz
or
scas
inc
das
dec
add
jno
mov
push
movsb
adc
fmul
rcrl
mov
clc
inc
sbb
std
mov
add
xor
xor
jb
or
sub
sub
mov
pop
mov
jae
sub
popl
cwtl
lods
adc
mov
fisubs
push
test
mov
je
sbb
loopne
jl
sbb
cwtl
icebp
cmp
xchg
inc
loop
xor
mov
add
cmpsb
push
ljmp
lods
xchg
inc
inc
in
jns
scas
cmp
rcrb
dec
inc
andb
xchg
test
xor
dec
or
dec
jmp
nop
test
sbb
out
sbb
pop
lods
mov
or
pop
sahf
lods
shll
adc
jnp
fisubrs
pushf
aad
mov
cmp
inc
int
leave
cli
jne
pop
imul
xchg
daa
loopne
jmp
mov
sahf
stos
mov
push
jo
jbe
cmp
repnz
arpl
imul
jle
cmpsb
hlt
xchg
dec
jle
mov
ret
pop
fistps
cltd
mov
in
pop
mov
clc
mov
jl
xor
jmp
repz
mov
inc
aam
sbb
sbb
xchg
repz
mov
repnz
xor
cmp
mov
clc
inc
push
lds
mov
add
icebp
dec
mov
sbb
adc
cld
xor
in
stos
pop
test
sub
iret
sub
icebp
sahf
rorl
jo
imul
std
scas
scas
aas
test
dec
psrlq
sbb
sub
inc
aaa
fildll
outsb
adc
dec
mov
in
fcoms
jb
loope
fldl
mov
or
adc
mov
jecxz
xchg
cmp
or
out
jno
fnstsw
imul
add
mov
scas
xchg
mov
loop
pop
pop
xchg
mov
push
xor
ret
sub
inc
stos
fidivrl
shll
dec
sub
pop
lods
enter
or
push
and
xchg
push
rcr
ljmp
jns
mov
cmp
push
and
jmp
das
push
add
loop
bound
in
popf
pop
mov
lods
inc
cmp
out
xchg
jle
cmp
filds
dec
cmp
arpl
pop
cmp
cmc
loope
xchg
xchg
cmc
call
fmull
dec
push
jo
xchg
cld
mov
in
out
pop
xor
xor
adc
pop
ljmp
cmp
in
mov
scas
push
inc
xlat
je
ds
call
leave
add
jp
fldl
orb
and
sub
cmpsl
pop
popf
xlat
popa
adc
mov
sbb
je
xchg
mov
xchg
loop
popa
dec
mov
mov
mov
push
xchg
inc
adc
xchg
dec
mov
inc
lds
jne
cs
orb
or
test
mov
jno
mov
imul
ss
push
pop
xorl
push
push
xchg
mov
adc
xchg
cmp
in
rcr
sub
fsts
insb
popa
xchg
add
aam
enter
out
mov
jle
jl
ja
and
mov
in
iret
inc
int
notl
pop
outsl
lcall
jl
call
jmp
cmp
jo
sub
mov
je
sbb
sbb
sub
sarb
mov
out
fdivrs
mov
shll
or
jge
ret
rorl
rcrl
in
lahf
cmp
push
mov
dec
mov
add
dec
or
hlt
sub
in
jo
ret
and
push
cs
insb
mov
das
sbb
jle
inc
inc
mov
sub
imul
roll
xchg
push
dec
cmpsl
adc
dec
es
jmp
lret
js
mov
dec
jno
shl
cmpsl
imul
dec
jle
stos
and
icebp
adc
test
lods
jge
lds
sahf
jne
popf
xor
fidivl
ljmp
xor
mov
push
out
lret
pushl
jae
jp
jge
mov
loope
clc
push
pushf
or
xor
push
cmpsl
jp
lods
out
and
ljmp
xchg
inc
xor
popf
mov
loop
mov
dec
push
imul
pop
das
lods
mov
out
loopne
repnz
xchg
cld
push
mov
pop
popa
pushf
lods
jge
test
mov
inc
ret
outsb
scas
add
adc
cld
enter
negb
pop
jnp
xor
cltd
imul
jp
jne
jbe,pt
push
in
or
mov
outsb
sub
enter
mov
out
ss
ds
jge
pop
and
out
pop
clc
nop
inc
insb
lods
pop
push
pusha
out
xor
movsb
movsl
into
pop
shll
into
stos
shrl
stc
outsb
cmp
dec
mov
xor
cmp
mov
std
lods
fisttps
icebp
mov
pop
js
lds
lea
mov
xchg
mov
gs
mov
mov
mov
sbb
into
add
xchg
insl
outsl
daa
mov
xchg
cmpsb
das
js
jg
nop
ja
push
out
pop
mov
jle
mov
inc
mulb
xor
aas
pop
into
push
insl
sbb
imul
pop
outsb
xor
xchg
scas
cld
pushf
inc
pop
popf
sub
ret
xlat
cmp
mov
add
xor
lds
cmp
push
cmp
mov
daa
stc
je
pop
nop
add
lods
stc
lcall
pop
ret
push
loope
call
cmp
add
out
lods
lcall
int
test
xchg
push
nop
aam
insb
xchg
daa
aad
mov
fmul
xchg
inc
ss
ror
dec
push
cmp
xorl
in
imul
ds
dec
mov
fs
push
std
loope
or
lock
in
add
or
xor
cmp
int3
sti
add
sbb
pop
les
lods
daa
push
dec
mov
test
test
inc
test
dec
sub
stos
inc
sbb
dec
mov
sbb
inc
in
fwait
shlb
js
and
cmpsl
jns
je
xchg
sub
call
mov
mov
xor
lods
jnp
shlb
push
out
add
cmp
xchg
mov
add
sti
or
rclb
cmp
lret
orb
ficompl
mov
dec
scas
out
dec
and
dec
mov
add
cs
pop
push
stc
sub
jnp
std
lcall
add
or
push
jnp
mov
mov
sub
ret
shl
outsb
sub
add
xor
fwait
cmpsl
or
fldl
sbb
cs
nop
rcll
mov
or
inc
inc
call
cmp
inc
or
les
push
test
mov
xchg
xchg
xor
scas
dec
push
sub
enter
movsl
das
xor
jno
adc
mov
data16
mov
ljmp
ds
in
cmpsb
cltd
sbb
or
mov
insb
dec
pop
fs
push
sbb
lea
add
les
fdivrs
popa
loopne
cld
sub
cwtl
push
fwait
stos
ja
mov
sbb
jnp
fnstsw
and
in
lods
in
add
sahf
mov
cmpsb
cwtl
imull
pushf
xlat
push
mov
mov
icebp
inc
pop
add
sbb
rclb
fldcw
sbb
mov
adc
jmp
loope
imul
jl
push
in
mov
and
push
push
adc
test
cmpsb
sbb
ja
and
pop
movsl
jbe
jae
loop
mov
mov
adc
sub
mov
or
pushf
pop
mov
xchg
test
les
mov
sbb
std
movsl
cmp
xor
in
or
lret
sahf
mov
mov
and
ret
xchg
and
xor
mov
addr16
dec
jae
push
mov
sbb
gs
push
bound
out
int
sbbl
push
cmp
or
dec
pop
rorb
push
sub
scas
dec
dec
outsb
adc
xchg
pop
outsl
call
mov
push
call
sbb
sbb
imul
aaa
push
fistl
mov
push
int
push
jmp
rolb
dec
lahf
xchg
fs
add
popa
gs
xchg
push
pop
cmp
pop
enter
es
lea
inc
nop
pop
jo
andb
mov
xor
lret
test
fmull
aaa
push
adc
arpl
sbb
mov
pop
imul
xor
jnp
mov
jp
popl
and
sub
push
es
pop
inc
cmc
aaa
pusha
mov
lods
add
push
xchg
scas
lods
dec
sbb
mov
addb
xor
mov
sbb
scas
in
movsl
mov
nop
iret
test
xchg
rolb
add
popl
push
mov
jle
push
fldenv
cmp
jae
outsb
jae
es
jno
push
or
stos
popf
ljmp
sub
scas
push
adcl
sbb
xchg
lahf
hlt
dec
call
xor
mov
cs
push
pop
orb
xor
mov
push
and
xchg
push
repz
mov
xchg
xchg
sbb
aam
loop
sbb
push
pop
addl
sub
inc
dec
out
bound
inc
rcrb
test
scas
insl
mov
inc
inc
cli
lea
out
pop
daa
push
shl
adc
pop
sahf
js
jb
cli
lods
js
fld
mov
fsubr
cmp
mov
xchg
bound
fidivrl
push
outsl
loop
push
aas
shll
jae
jno
add
mov
adc
fidivs
push
inc
push
movsb
lods
fwait
cmp
cli
jl
jecxz
imul
iret
cs
and
mov
mov
idivb
rclb
mov
or
mov
cld
fs
shl
adc
pop
out
mov
pop
xor
fwait
adc
int3
js
cwtl
pusha
ljmp
out
lea
xchg
call
or
mov
movsb
pop
stos
pop
jl
xchg
sbb
xor
cmp
pop
nop
mov
add
sub
mov
and
clc
out
xorb
xor
pop
lds
jmp
mov
pop
pushl
push
out
fs
mov
loopne
cs
dec
jp
iret
pop
out
test
cmp
inc
pop
or
in
push
mov
sbbb
xchg
and
mov
adc
movsb
and
nop
push
insl
pop
stos
lahf
out
arpl
cmp
dec
jl
jecxz
div
out
lea
jb
lahf
cmp
inc
aas
adc
xchg
jne
inc
push
scas
or
push
mov
push
hlt
push
pop
out
cmp
divb
testb
fdivl
sbb
mov
or
iret
jo
popf
getsec
xchg
inc
push
push
pop
jb
adc
scas
sbb
sbb
enter
mov
push
js
mov
and
or
adc
cmp
cmc
or
stos
dec
addb
repnz
jl
xlat
jl
dec
xchg
lods
pop
imul
arpl
dec
push
fwait
out
mov
rcl
mov
push
mov
fsubs
jecxz
pop
xchg
adc
ret
out
dec
jp
and
jl
mov
sahf
loopne
mov
or
call
add
mul
sahf
mov
repnz
loopne
call
inc
bound
and
mov
push
scas
dec
xchg
stos
cli
push
xchg
in
adc
nop
les
pop
pop
lock
xor
arpl
pop
les
pop
sti
idivl
mov
int
jge
cmp
fiadds
pop
cmp
cmc
push
jle
pushf
cmpsl
mov
shll
out
cs
xor
push
insb
adc
lret
repz
mov
push
popf
jne
cmpl
call
fwait
shlb
dec
in
out
cmc
test
or
sbb
lock
sbb
jbe
lea
lahf
xorl
and
outsl
ret
sub
clc
mov
push
pop
inc
cmp
dec
movsl
addr16
les
pop
enter
bound
sbb
mov
xchg
mov
pop
xchg
sti
push
jno
repz
js
sbb
lret
xchg
xchg
fwait
mov
push
adc
inc
lret
inc
jo
xchg
mov
mov
lret
xchg
js
hlt
inc
dec
inc
outsl
bound
daa
dec
mov
sbb
cmp
mov
adc
pop
cwtl
test
push
ja
ljmp
dec
mov
push
incb
push
xor
jno
xorb
xchg
andb
fisubl
sbb
push
lret
jl
sub
mov
push
mov
test
jecxz
jns
scas
inc
in
dec
imul
adc
push
cmpsl
jle
push
testl
push
lret
sti
push
or
add
sbb
dec
lods
fbstp
jmp
test
sub
in
lock
adc
sbb
mov
sub
mov
imulb
inc
std
jnp
pop
scas
adc
mov
adc
scas
imul
fisttpl
ret
jmp
dec
mov
adc
je
dec
inc
ficompl
push
ds
mov
and
jle
xchg
into
pop
mov
pop
das
add
cltd
jp
mov
das
or
aaa
pop
test
addr16
or
mov
cli
fcmovbe
push
mov
xor
jecxz
mov
xlat
add
jb
inc
pop
push
push
pop
es
pop
push
jae
xor
dec
scas
mov
adc
test
lods
cmp
sti
es
xlat
aam
jns
add
pop
jle
fucomip
repnz
xor
sbb
add
fidivs
add
fistpll
int3
ja
sub
mov
mov
lret
fnstenv
stos
out
icebp
mov
mov
xchg
cmp
cmc
xchg
popa
and
int3
mov
rorb
insl
enter
mov
ficoml
mulb
cmp
mov
sub
jbe
aas
sarb
decb
or
add
cwtl
fdivrl
and
mov
adc
ss
loopne
dec
inc
mov
fwait
jmp
pusha
es
xor
jg
mov
and
sbb
popf
mov
add
jge
mov
fadds
mov
in
sbb
jne
add
lcall
sahf
sub
je
repnz
mov
xchg
stos
and
ss
mov
lcall
jp
hlt
psubusb
ss
cld
push
fiadds
xor
pop
dec
test
sarl
mov
jae
ret
xor
add
in
out
add
mov
repnz
scas
add
notl
lods
cmc
xchg
inc
push
scas
add
call
popf
push
jno
push
mov
lea
push
adc
xor
ja
xchg
dec
in
scas
or
jne
iret
cmp
js
mov
jo
lds
icebp
and
jne
inc
mov
movsl
gs
cmp
lods
mov
pusha
mov
push
jns
inc
or
fstpl
in
dec
push
or
loop
mov
pop
xchg
std
sub
or
inc
cs
sahf
leave
insl
mov
mov
test
stos
popa
icebp
sahf
push
in
xchg
xor
or
into
aad
push
sbbl
cmp
movsl
popa
mov
adc
pop
adc
stos
mov
jae
dec
jg
jnp
sub
loope
bound
mov
or
insl
mov
iret
inc
jle
fistpl
fs
loopne
into
and
aad
push
sub
mov
loopne
sub
add
push
push
adc
cmpsb
mov
imul
adc
sahf
loopne
pop
xchg
mov
or
pop
xchg
test
cmpsl
subl
cmp
and
stos
aam
decl
mov
mov
js
ljmp
loopne
cmpsb
ja
fdivrs
rcrb
ja
and
push
jae
imul
dec
jl
lcall
imul
lcall
hlt
pop
pop
pop
cmp
cltd
mov
insb
clc
dec
negl
sahf
xor
test
daa
mov
add
jo
test
cmpb
jnp
sbb
sbb
xchg
mov
pop
cmpsl
push
insb
dec
insl
cmp
ror
bound
inc
loop
push
arpl
cld
out
xchg
ret
pop
ds
push
xchg
stos
je
pop
mov
xchg
inc
loope
int
xorl
hlt
push
xlat
jmp
push
jp
and
stc
bound
or
mov
ret
pop
sub
shl
shll
sub
test
xchg
jg
jb
push
mov
das
mov
pop
jns
mov
jbe
vorps
inc
and
lahf
xchg
xchg
xchg
mov
dec
iret
inc
mov
div
lods
and
test
and
sbb
das
cwtl
cli
mov
dec
push
mov
pop
hlt
pushf
push
mov
xor
shl
lods
mov
imul
jle
into
shll
jecxz
jne
in
push
pushf
es
push
push
imul
pop
xchg
mov
dec
inc
xor
or
ficoms
inc
xor
sub
mov
pop
gs
xchg
push
out
pushf
lahf
or
insb
adc
pop
push
aaa
push
inc
cmp
pushf
mov
je
push
into
adc
cmp
in
push
pop
inc
rorb
fisubrl
pop
js
push
inc
sar
push
add
notb
pop
add
lretw
stos
repnz
mov
adc
sbb
shll
pop
xchg
fsubl
test
cs
ja
aad
and
in
out
mov
pop
jne
add
xorl
sbb
pop
hlt
ss
iret
ljmp
int
xchg
jmpw
outsb
cmp
lods
mov
xchg
jo
sbb
mov
dec
cmp
push
mov
in
and
and
mov
mov
icebp
test
and
and
xchg
sbb
inc
imul
mov
xchg
cld
adc
movsl
sbb
adc
lret
inc
shlb
sbb
push
jb
fsubrs
sbb
or
cltd
aam
inc
imul
mov
ffreep
iret
sub
lcall
mov
pop
cwtl
sbb
xor
push
lock
inc
insl
je
xchg
mov
lcall
and
xchg
cmp
std
adc
cmpsl
sub
aam
cmp
adc
shll
ret
add
les
mov
into
jo
pop
lds
sti
push
xchg
or
mov
cmp
lock
push
sub
inc
xchg
rorb
jl
fnstenv
cld
shl
stos
mov
test
in
push
mov
push
and
aaa
cwtl
loop
testl
int3
in
and
insb
mov
int
lcall
sub
xchg
stc
mov
call
add
leave
push
push
fcomp
in
or
addl
dec
xor
int3
es
dec
popf
enter
sub
jmp
mov
xor
loope
out
rcrl
fdivs
scas
nopl
jecxz
xchg
cmp
push
xchg
adc
xchg
dec
pop
pushf
mov
popa
add
inc
jbe,pn
stos
sar
pop
negl
dec
pop
addr16
sub
fwait
adc
xchg
push
cwtl
mov
std
nop
mov
sbb
jle
data16
ds
pop
push
jle
fldl
outsb
cmp
inc
into
outsl
mov
inc
add
mov
lret
cmc
adc
cmpsb
testl
movsb
mov
jb
fisubl
push
push
clc
lret
ds
dec
pop
orb
loopne
out
add
iret
shrb
hlt
mov
fists
push
ret
ret
jg
addb
jne
call
jb
mov
gs
jmp
dec
cmpsl
ficoms
fisubrl
movsl
cld
scas
insl
add
das
jl
push
lds
scas
xchg
pop
in
push
shr
xor
add
dec
xor
dec
mov
test
jmp
jecxz
mov
fdiv
add
or
push
dec
pop
jno
sub
popa
adc
jno
hlt
enter
sbbb
mov
dec
inc
fisttpl
es
cmpw
jp
jge
shl
push
sbb
jecxz
fs
inc
in
adc
mov
lock
adc
adc
mov
inc
push
fsubl
loop
scas
push
or
jl
int3
pop
leave
or
cmpsl
adc
fimull
and
test
xor
jns
dec
mov
mov
iret
inc
push
jne
jl
outsl
std
or
lret
testl
adc
and
mov
sub
ds
mov
dec
mov
xchg
cmp
push
push
push
jl
xchg
dec
fsts
cli
pop
mov
mov
imul
cs
scas
mov
mov
movb
dec
lock
fimull
imul
out
pcmpeqb
dec
pop
movl
jmp
in
loopne
xor
jle
jnp
cmp
iret
dec
mov
mov
jnp
cmp
sub
jbe
insl
and
cld
mov
inc
mov
cmp
or
pop
jbe
ja
nop
cmp
inc
iret
shll
push
mov
in
xlat
popf
cs
lcall
pop
sub
sbb
xorl
pop
jne
push
push
loopne
sbb
imul
sub
sbb
cmc
sbb
jl
iret
cmp
dec
xor
xor
push
fidivrl
jbe
stos
cmp
jb
mov
xchg
subl
and
outsl
mov
pop
lods
int
pusha
ret
and
out
mov
xchg
stos
sbb
mov
jno
in
add
clc
jg
daa
nop
cmp
add
push
iret
adc
xor
movl
jmp
sahf
ja
lds
pushf
mov
imull
add
aaa
jo
loop
and
in
or
scas
and
push
jbe
inc
or
xchg
sbb
rcll
addb
adc
into
jae
scas
mov
lods
sbb
add
ds
inc
outsb
dec
adc
ljmp
sub
push
jmp
mov
repnz
jno
icebp
push
pop
enter
push
xor
out
pop
scas
or
lods
sub
pop
in
sbb
xorl
xchg
dec
sub
mov
aas
sub
notl
adc
adc
mov
cmp
push
or
arpl
arpl
dec
cmp
sbb
das
push
or
loope
sbb
in
pop
sbb
mov
adc
lds
aam
and
pop
and
push
hlt
arpl
aam
mov
mov
addr16
dec
pop
pushf
shlb
test
ficompl
lods
and
sbb
jg
out
xor
dec
pop
dec
jns
dec
and
jge
out
and
lret
or
enter
mov
mov
scas
adc
push
pop
or
cmpsb
fsubp
cli
mov
jns
lret
xchg
lret
ds
loopne
cmpsl
int
gs
idivl
andb
xlat
pop
fwait
cld
in
jmp
ljmp
add
lods
data16
add
mov
adc
add
negb
sahf
xchg
mov
mov
mov
aaa
sub
dec
push
push
arpl
inc
lcall
adc
pop
outsl
xor
out
push
fiadds
nop
jg
dec
popa
or
lret
jae
xbegin
dec
xchg
lods
mov
mov
inc
insb
add
push
outsb
arpl
inc
test
xchg
retw
cmp
ficomps
lea
jae
imul
shlb
clc
pop
push
notl
dec
cmc
shl
mov
mov
dec
ljmp
jbe
pop
ljmp
sbb
dec
inc
push
lock
push
pop
sbbl
shl
fildll
stos
notl
js
xchg
nop
or
testl
sahf
imul
xor
repz
lds
test
shr
cltd
jbe
push
or
mov
movntps
pop
mov
inc
sbb
cmp
dec
push
sbb
xor
enter
scas
call
in
push
cmpsl
aam
sub
out
cli
popa
fisttps
push
ficoms
adc
xchg
xor
test
mov
ss
sub
loope
adc
cli
cmp
movsl
jnp
jp
icebp
cmp
inc
insl
pop
jno
push
ficomps
inc
loopne
mov
add
movsl
mov
test
imulb
test
ja
lods
sbb
into
jmp
movsl
ljmp
ljmp
adc
mov
or
mov
fmulp
pop
adc
xor
lods
and
cltd
mov
sbb
mov
adc
fistpl
inc
cltd
mov
sti
inc
daa
inc
cmpsb
jae
jmp
inc
aas
sub
mov
push
arpl
hlt
jmp
inc
sub
or
into
adcl
iret
iret
imul
das
gs
add
pop
mov
pop
out
push
fnsave
mov
jg
jae
loop
add
push
mov
dec
xchg
dec
xorb
mov
xchg
dec
test
shrb
xchg
test
push
jnp
adc
push
mov
xchg
sbb
fs
inc
push
idivb
shrl
xchg
cmp
pop
mov
push
cli
out
jae
rol
dec
push
inc
push
fbld
mov
movsb
sbb
mov
mov
jmp
iret
imul
pop
jnp
test
pop
adc
inc
ds
mov
cld
sub
cmpsl
jmp
in
mov
pop
mov
fidivs
jecxz
movsl
mov
mov
repz
fbstp
or
xor
lods
in
ljmp
jge
mov
push
dec
pop
scas
loopne
dec
inc
je
mov
in
fcomps
fcompl
xchg
rorb
mov
cmp
stc
mov
dec
or
incb
inc
aaa
mov
add
add
dec
adc
push
fidivrs
ret
lock
mov
shrl
pop
ret
hlt
adc
cld
daa
iret
aam
fisubl
cmp
inc
lret
js
clc
sahf
sub
ficomps
cmp
aas
xor
mov
dec
dec
in
jg
insl
mov
scas
int
push
iret
jmp
xor
mov
out
inc
rcrb
je
mov
imul
mov
mov
mov
pop
mov
call
mov
mov
and
mov
andl
les
fadds
add
sub
cmp
faddl
outsl
xchg
fdivp
push
sub
sub
push
repnz
inc
fwait
lds
push
mov
pop
jnp
test
pop
mov
daa
sub
data16
sahf
mov
or
push
js
insb
adc
push
sbb
push
xor
mov
data16
push
xor
mov
nop
add
in
lahf
xchg
es
test
xchg
xchg
pop
mov
aad
add
mov
mov
outsb
fst
loop
adc
pop
inc
clc
jecxz
sbb
mov
and
mov
fs
push
cmc
mov
inc
mov
mov
add
orb
lcall
jp
mov
outsb
ljmp
les
insl
mov
pop
test
dec
jmp
or
aas
dec
mov
out
xchg
mov
loopne
cmc
in
outsb
add
mov
adcb
sub
xchg
aaa
ds
and
subb
pop
pop
sbb
fwait
xchg
js
aaa
shlb
mov
lret
sti
sub
xchg
pop
inc
dec
and
loopne
rorb
sub
xchg
mov
xlat
popa
in
push
divl
mov
mov
and
fcoml
fs
or
mov
das
xor
mov
dec
in
mov
fs
pop
sub
test
sub
mov
inc
mov
adc
daa
ljmp
jbe
mov
daa
out
pop
movsb
adc
mov
xchg
push
call
and
cld
add
inc
divb
push
mov
dec
and
hlt
adc
cld
mov
dec
cmpsb
and
pop
lahf
pusha
mov
or
imul
pop
adc
sahf
mov
pop
sub
arpl
xor
bound
sbb
and
popw
shll
aaa
cmp
je
jne
cmpsl
mov
mov
or
lds
jmp
rcll
mov
and
adc
push
nop
syscall
add
lock
loope
lea
insl
adcl
imul
jecxz
cmc
inc
insb
fidivs
pop
movsl
call
sub
arpl
in
lds
cwtl
decl
insl
xchg
mov
jnp
mov
jae
sub
dec
int3
cmp
add
jecxz
dec
out
fistps
les
fldl
stos
rolb
mov
je
mov
pop
and
pop
dec
dec
ss
lret
shll
clc
fistpl
push
mov
pop
shlb
es
xchg
and
stc
ds
push
loop
add
and
pop
popf
popf
mov
jp
xchg
add
cltd
enter
push
pop
mov
or
add
mov
stos
nop
adc
out
pop
pop
in
inc
fcomip
push
lahf
mov
jbe
addr16
scas
inc
fdivrl
jp
xor
stos
in
jo
jnp
adc
test
ret
fucomp
sub
xchg
xchg
and
data16
test
cmpsb
sub
xchg
mov
iret
mov
repnz
bound
cld
pop
sub
ffreep
add
lock
jo
or
cs
xor
jae
in
addr16
clc
out
cmp
jne
shlb
dec
sbb
dec
sbb
nop
push
jecxz
jle
cmpsl
aad
mov
jecxz
rolb
inc
js
push
stc
jmp
add
jle
mov
sub
es
add
aad
in
in
pmuludq
or
jl
and
cmp
sbb
inc
addr16
enter
push
xlat
mov
out
cmp
adc
and
imul
mov
xor
pop
imul
popa
fwait
pop
mov
or
xchg
fisubs
ficomps
jo
jle
lds
cmp
les
dec
out
xchg
shrl
mov
adc
lods
add
push
xor
cmp
ja
in
arpl
insl
inc
in
lds
sbb
or
add
sahf
dec
xor
jae
sub
mov
jo
cmc
mov
or
lahf
push
test
dec
pop
sbb
mov
dec
repnz
mov
pop
dec
xor
mov
hlt
sub
sahf
mov
in
pusha
jge
dec
les
addr16
pop
test
out
pop
add
mov
je
sub
or
jbe,pn
pop
and
clc
adc
push
gs
movsb
into
lcall
cmpl
test
ret
rorl
sbb
sti
addb
stc
add
cmp
mov
sub
or
or
jne
xor
stos
cmp
pop
mov
sbb
xchg
adc
adc
inc
and
lret
lock
xchg
pop
ds
test
add
data16
aas
in
fcmovbe
xchg
mov
xor
mov
loopne
sub
ja
jne
mov
adc
mov
cmp
and
addl
mov
lahf
movsb
rol
sub
popa
mov
scas
testl
inc
cmc
ret
notl
push
add
popf
and
jp
cmp
out
inc
mov
popa
add
sbb
test
lcall
push
lds
enter
push
jo
cwtl
popf
push
das
stc
addr16
iret
arpl
in
in
inc
lods
jmp
int3
out
cmpb
cli
sbb
repnz
adc
data16
in
cmp
pop
pop
add
push
add
jne
outsb
ror
into
mov
loop
xchg
imul
adc
je
pop
jle
add
adc
leave
stc
std
pop
aaa
mov
lahf
sbb
xchg
mov
pop
cwtl
rolb
sub
sub
loope
xchg
ret
je
ds
dec
dec
rol
ret
pop
dec
mov
push
or
aaa
lock
lods
or
pop
in
sbb
rcrl
lahf
jecxz
jg
imull
cs
sahf
out
adc
adc
push
inc
xor
call
aas
das
je
addr16
out
scas
xchg
lds
fwait
xor
dec
ret
mov
fmuls
xchg
inc
push
push
loope
xchg
clc
and
cmp
sbbl
dec
aas
mull
lds
push
test
call
fisubl
cmp
loop
sbb
lret
jno
fcomps
or
xchg
jo
mov
add
push
inc
notl
inc
sarl
or
jbe
sbb
dec
addr16
push
aas
sti
scas
ret
sbb
cmp
jmp
jnp
loope
dec
mov
mulb
cmpsb
dec
aas
inc
push
sahf
xchg
sub
dec
xchg
mov
inc
stos
sbb
nop
jne
sbb
add
pop
mov
fucomip
push
or
loop
fcomps
fstpl
pop
pop
inc
push
push
mov
int3
daa
jne
xchg
push
xor
pop
and
popa
movsl
jp
sub
dec
sbb
dec
pop
mov
mov
in
inc
pop
loop
add
jg
dec
ret
jo
xor
and
xchg
inc
add
dec
in
insl
adc
arpl
lods
cmpxchg
stos
jge
jnp
xor
es
repnz
xlat
mov
jb
push
push
xchg
test
jp
mov
cmpb
popf
add
adc
movb
jmp
lcall
sub
xchg
shrb
cmc
repz
les
mov
das
roll
or
ja
hlt
and
inc
push
cmc
push
inc
pop
popf
mov
jg
neg
xchg
jno
shll
mov
mov
xlat
sti
sub
inc
leave
mov
imulb
test
pop
xor
ljmp
loopne,pn
mov
fisttpl
push
addr16
push
test
call
out
les
cwtl
sub
lds
cli
jbe
jnp
shr
addr16
je
push
repz
mul
pop
loop
and
dec
mov
sbb
jl
scas
adc
cmp
rorb
scas
dec
out
scas
add
pop
mov
xor
ss
adc
int
cli
sti
adc
daa
push
push
pop
sub
mov
psubsw
push
fstpt
add
mov
fld
roll
int3
pop
and
jb
cld
adc
and
cmp
xlat
jb
sbb
or
je
dec
sbb
cwtl
sub
lret
mov
mov
sub
xorl
cs
or
push
mov
pop
mov
jno
ret
dec
inc
add
mov
cmp
add
out
cld
sub
mov
sub
mov
jne
fsubrl
int
cmp
fldenv
cmp
lret
fwait
idiv
xchg
cmc
push
lret
pop
lahf
outsl
js
pop
jb
out
out
xchg
sub
insb
mov
stos
fisttpll
jnp
scas
mov
cmp
or
mov
insl
stos
jo
or
cmp
in
cli
and
pop
inc
jb
fiadds
insl
stos
pop
test
add
add
les
std
dec
xchg
xchg
mov
sub
inc
xchg
aas
adc
repnz
mov
insb
leave
sbb
push
inc
in
mov
push
fdivr
and
mov
mov
sub
in
icebp
push
mov
push
sub
inc
std
leavew
mov
cmp
push
xor
pop
mov
lods
adc
fdivrs
pop
xlat
mov
in
cmp
and
pop
and
int3
lods
sbb
data16
add
mov
dec
pop
pop
or
lods
out
xor
mov
das
fwait
mov
cmc
sub
lcall
sahf
mov
xor
dec
test
cmpsl
mov
mov
jb
call
pop
sti
add
pop
push
fwait
ljmp
lret
sbb
das
dec
or
sub
es
lds
repnz
jbe
int
jae
imul
and
js
sub
push
xchg
js
loopne
incl
cmc
fdivr
cmp
pop
adc
xor
and
pop
push
outsb
push
mov
cmp
jg
ret
mov
sbb
inc
dec
call
fldpi
test
hlt
sub
or
andb
inc
add
cmpsl
jl
pop
ss
in
dec
dec
sarb
into
push
dec
sahf
push
loop
inc
jne
and
stc
stc
inc
mov
and
mov
stos
xlat
cvtdq2ps
and
cmp
jmp
add
mov
xor
xchg
sub
push
cld
mov
lea
jl
jns
lock
sub
mov
push
dec
jg
sbb
rcrl
sub
sbb
inc
xchg
jmp
inc
mov
ds
push
bound
loopne
fbstp
push
daa
pushl
dec
sub
cmp
add
sbb
jae
loope
push
out
ljmp
sbb
leave
aaa
xchg
insb
imul
or
or
aas
cmp
pop
jl
jge
xchg
pop
dec
xor
or
aas
inc
sbb
xchg
cld
adc
pop
push
lods
aas
imul
sub
cli
dec
xorl
or
nop
jle
pop
arpl
dec
imul
xchg
in
das
jecxz
cmp
pusha
xor
cmc
arpl
and
ss
repnz
repnz
jbe
cmpsb
inc
imul
nop
movsl
cs
sub
movsl
adc
pop
jno
inc
inc
xor
mov
shlw
fmuls
popf
movsl
adcl
pop
inc
bound
pop
ljmp
jl
out
divb
inc
adc
inc
nop
out
es
dec
mov
mov
rolb
lret
lret
ret
ffreep
shrb
ja
dec
mov
idivl
inc
fsub
adc
add
fwait
jo
fnsave
fs
cmp
push
xchg
jge
push
subl
jb
sbb
imul
cld
aad
mov
fidivrl
xor
mov
sub
and
push
into
xchg
xchg
inc
sbb
dec
scas
mov
add
xbegin
jmp
mov
pop
adc
fldenv
mov
pop
mov
pop
adc
dec
mov
cmp
add
mov
xchg
pop
cmp
xchg
add
push
push
and
inc
int3
aaa
divb
jl
addr16
test
sub
les
pop
and
pop
push
adc
xchg
mov
dec
stc
lods
dec
icebp
iret
push
jl
inc
push
xor
adc
outsl
pop
mov
push
aam
test
adc
lds
push
and
lock
and
mov
pushf
cmc
mov
pop
or
sub
mov
adc
mov
xor
jge
dec
ss
jns
ret
or
pop
mov
fisubrs
les
lret
sbb
test
mov
inc
inc
adc
test
xor
frstor
out
jp
adc
fdivrs
sub
das
nop
adc
cmpsl
imulb
dec
sarl
subb
xor
lock
push
repz
leave
popl
rorb
loopne
or
repz
addr16
in
pop
ret
lea
es
mov
push
scas
lcall
es
or
add
push
jmp
sbb
push
or
in
in
arpl
cmp
push
xchg
adc
addr16
sarl
inc
addb
fsubrl
daa
sub
cwtl
arpl
xor
enter
mov
cmp
jecxz
sbb
es
fsubr
lea
cmpsb
mov
loopne
ret
mull
push
pop
inc
aam
fiaddl
pop
es
into
inc
int3
sbb
mov
inc
pushf
xor
icebp
aaa
inc
rcrb
cli
jns
into
iret
push
fstps
and
std
mov
mov
loop
scas
inc
popa
imul
cmp
jb
jge
adcl
sub
mov
in
jae
and
cmpsl
stos
bound
push
orl
or
ds
cmpsl
sbbl
lods
out
repz
int3
das
or
sbb
jle
lahf
push
and
jle
out
sbb
jbe
mov
add
hlt
lret
int
ja
testb
and
xor
mov
pop
lds
ror
jb
subb
inc
mov
add
repz
rclb
push
movsl
repnz
hlt
arpl
fnstsw
mov
int
arpl
sbb
jg
sahf
and
pop
repnz
das
jno
mov
xchg
in
sub
mov
or
xor
jecxz
icebp
std
sbb
or
or
cmp
clc
inc
push
mov
imul
sbb
mov
int
fs
xor
jb
rolb
adc
push
dec
mov
sub
mov
jne
sub
pushf
push
jns
mov
mov
adc
push
fisubl
loop
stos
sar
xor
push
imul
stos
and
and
aas
movb
ja
cld
scas
into
mov
jno
mov
jno
and
hlt
xor
sbb
mov
add
scas
test
leave
incb
nop
mov
adc
icebp
scas
jmp
out
jg
push
xchg
cmp
push
adc
mov
insl
push
or
movb
fs
adcl
mov
ljmp
jb
add
adc
pop
int
repnz
adc
ret
cmp
jmp
ds
xchg
fdivrl
jg
jge
daa
push
lret
daa
fidivs
inc
mov
mov
insl
mov
arpl
or
andb
pop
andb
fxtract
imul
dec
fstl
mov
ja
inc
ds
xchg
enter
outsb
jmp
sbb
imul
iret
movsl
cmp
push
ja
mov
test
dec
pop
je
js
jno
adc
cmp
push
push
mov
popa
pop
movsb
ret
std
stc
adc
into
dec
pop
insb
in
lret
mov
inc
mov
test
popf
inc
das
daa
sbb
aaa
fbstp
push
jg
xor
push
insl
cmp
mov
cmp
xor
and
test
aas
cmp
mov
iret
push
push
daa
mov
movsb
insb
dec
mov
xchg
xor
or
lea
dec
mov
mov
dec
xor
mov
xchg
je
jge
pop
aam
aaa
hlt
loop
int3
fbld
xor
sbb
add
adc
shll
pusha
xor
sti
xchg
loope
xor
or
mov
jns
inc
jb
ds
fs
jb
in
xchg
sub
in
sub
add
push
jns
sub
pop
shlb
orb
cltd
mov
int3
roll
jg
dec
xor
mov
aam
push
ss
decl
inc
scas
sahf
repnz
dec
push
and
xor
cmp
push
mov
or
jnp
push
jno
xor
mov
jo
add
xchg
cmpsl
sbb
mov
fcoml
or
fldl
push
dec
mov
lahf
mov
mov
lahf
xchg
mov
adc
mov
out
or
bound
adc
xchg
popa
add
or
repnz
xchg
mov
movsl
js
nop
mov
dec
and
loopne
mov
daa
call
addr16
popa
jnp
xor
xlat
cmp
mov
xlat
sub
test
add
mov
rcrl
xor
arpl
adc
std
push
pushf
mov
aam
adc
inc
push
int
pop
orl
ss
jae
jmp
fsubs
mov
lock
inc
sub
inc
cmp
pop
ds
jle
dec
daa
arpl
cmc
cmp
pop
aas
push
or
inc
mov
mov
mov
ss
fwait
cmp
mov
mov
sahf
es
xchg
dec
enter
scas
lock
aaa
pusha
mov
lcall
sbbl
mov
push
mov
je
cwtl
inc
adc
scas
inc
jae
mov
inc
xor
adc
mov
jnp
stos
pop
push
sub
cs
icebp
nop
dec
push
sub
std
fcmovnbe
mov
xor
mov
dec
pop
add
mov
pop
imulb
out
push
dec
std
dec
jmp
pop
mov
ljmp
out
jl
jno
int3
hlt
aas
jbe
xchg
adc
vmptrst
mov
dec
leave
ljmp
inc
shlb
idivb
pop
mov
mov
adc
imul
decb
cmc
sbb
lds
roll
ret
fisubrl
pop
leave
sarl
mov
jecxz
push
scas
sbbl
stos
das
xchg
roll
je
imul
lea
xchg
loopne
lock
or
sub
je
js
mov
jns
not
xlat
mov
insl
mov
push
dec
jns
mov
sub
adc
stc
cmpsl
sbb
in
data16
daa
sbb
push
xchg
and
outsb
call
call
cwtl
xor
je
mov
mov
jbe
into
subl
test
repz
mov
inc
push
mov
xchg
es
xor
shrb
mov
sti
jmp
jp
lea
test
into
in
out
out
aam
mov
aaa
cmp
aaa
dec
mov
jns
shll
insl
rclb
and
dec
lock
sbb
mov
push
jbe
mov
idivl
cmp
ja
or
mov
iret
xchg
inc
xchg
mov
pop
jb
lock
sub
out
push
ds
into
push
testl
aaa
testb
and
lea
stos
or
ret
pop
mov
sub
inc
xchg
inc
fcompl
lret
dec
shll
pusha
fs
adc
inc
daa
or
or
xchg
sub
fstps
mov
jns
or
data16
out
outsl
push
or
out
push
and
in
adc
add
mov
cmpsb
ficoms
test
mov
or
ret
test
loopne
jne
outsl
push
xchg
inc
rcl
imul
les
mov
loop
std
push
in
fmul
mov
push
clc
inc
inc
pop
sub
ret
cmp
js
adc
add
fs
sbb
and
sti
cmp
sbb
cmp
sub
lock
ret
and
dec
psrlw
cmp
bnd
test
push
xchg
pushl
dec
in
sub
sub
cld
pop
cmp
scas
in
jo
pop
and
sbbb
xor
repz
shl
cmc
jge
subb
jmp
subb
cmpsb
pop
mov
sub
and
jnp
or
mov
jl
mov
sbb
insb
jecxz
stc
scas
xchg
int3
dec
xchg
sahf
mov
jno
dec
cmp
lock
in
sbb
dec
push
cmp
popa
imul
test
xchg
outsl
xchg
mov
ljmp
or
jge
sub
cmp
pop
sbb
mov
out
jbe
jbe,pn
int3
shrb
cmp
cmpsb
and
addb
sarb
mov
push
push
sarl
pop
sbb
pop
push
jne
or
xchg
cs
insb
xchg
adc
loope
out
rorb
iret
movsb
in
mov
sub
incl
sbb
cmpsb
lods
dec
push
bound
cs
pop
and
movsb
jle
inc
sbb
mov
push
push
fwait
xor
js
sbb
sbb
jp
mov
or
imul
insb
mov
mov
popa
notb
test
sub
xor
in
mov
loopne
jo
movsb
and
and
loop
inc
fisubl
aaa
lock
and
xchg
xor
mov
loopne
add
cli
mov
cld
jl
mov
cmpb
loop
sbb
fiadds
sub
popa
dec
dec
jno
push
add
shl
pop
enter
pop
mov
in
mov
addl
flds
cld
mov
mov
inc
sbb
iret
mov
dec
jae
jb
shll
aas
and
dec
add
or
movsl
mov
jecxz
fcoms
sub
mov
cmp
sbbb
pop
mov
inc
cmp
adc
pop
lea
adc
lcall
xchg
and
cmp
mov
rorl
jb
jl
mov
mov
pop
add
pop
in
mov
inc
push
sbbl
iret
push
jecxz
fdivs
or
and
das
lret
mov
adc
sbb
jmp
xchg
and
push
xchg
cmp
icebp
lret
xor
cmpsl
adc
add
cmp
int
ficomps
jne
std
add
lcall
adc
fcomip
dec
fmulp
cmp
inc
dec
cmp
stc
jo
outsb
std
in
ja
xchg
mov
into
ds
or
add
fstp
clc
repnz
jne
or
mov
cmp
sarb
inc
jge
sub
imul
imul
jl
imul
mov
scas
std
fisttps
scas
aaa
roll
lods
call
jl
mov
movsl
call
mov
add
sahf
sbb
or
ret
jle
add
fwait
loop
fucomi
ret
jo
mov
dec
mov
ljmp
or
repnz
cmp
xor
or
adcl
mov
push
and
adc
and
adc
lock
movsbl
or
dec
pop
mov
adc
scas
push
sub
adc
xchg
lock
mov
test
repnz
aam
divb
loopne
add
popf
dec
scas
stos
aaa
inc
and
and
cwtl
jmp
push
add
adcb
fadds
test
and
ljmp
add
cwtl
fisubrs
fnstsw
js
pop
pushf
pop
movsl
aas
xchg
movsl
loop
outsb
sub
bound
into
dec
pop
pop
xor
jle
repz
xchg
xchg
or
sarl
push
orb
pop
push
fildll
cli
aas
stos
int
and
add
les
cld
icebp
in
fwait
sbbb
sbb
push
sbb
clc
fsubs
pop
ficompl
aad
and
not
andl
ret
sub
daa
push
enter
fwait
aam
pushf
outsb
jle
iret
andl
stos
add
cmp
fwait
jo
call
cs
xor
or
repz
hlt
dec
lock
stos
addl
inc
mov
mov
mov
gs
jnp
js
test
mov
test
out
outsl
sbb
rol
and
mov
xor
popa
dec
rsqrtps
cmp
jle
addr16
int
mov
or
adc
sbb
mov
mov
xchg
push
xor
push
fldenv
add
adc
iret
mov
arpl
fistpl
push
inc
mov
stc
xchg
dec
cmp
mov
fists
bnd
dec
adc
call
pop
inc
inc
scas
repnz
jbe
sti
cmp
ja
mov
lret
clc
sub
mov
mov
cs
out
pop
sbb
popf
sub
leave
xor
stos
mov
dec
pop
inc
dec
jo
clc
fisttpll
cmp
stos
les
jbe
nop
jb
cmovnp
add
loopne
movsl
roll
sarl
in
mov
push
insb
mov
cmp
mov
les
dec
jnp
adc
push
pushf
mov
mov
lods
int
mov
fldl
fbld
movsb
stos
test
imull
into
and
mov
rcrl
or
stos
lock
es
pusha
xor
pop
sbb
imul
pusha
jl
mov
lcall
repnz
sbb
add
jmp
adc
orb
imull
inc
loopne
adc
and
imul
repnz
adc
inc
out
dec
xorl
mov
add
mov
push
mov
into
mov
jl
sub
insb
push
in
stos
jae
pusha
gs
adc
pop
add
mov
xor
inc
sub
dec
pusha
leave
movsb
sub
push
iret
mov
in
pop
popa
sahf
cmp
aas
add
lods
push
aad
mov
sub
xchg
inc
cli
shrl
add
lds
adc
sbb
mov
lret
sti
jns
daa
in
mov
sub
dec
frstor
and
pop
mov
rorb
test
mov
ret
pop
lahf
int3
cmp
shll
leave
sbb
imul
into
pusha
cwtl
sub
insb
mov
lods
je
iret
cmpsb
stos
cld
xor
ljmp
adc
je
out
add
call
fdivrl
mov
fcmovne
pop
pop
jge
cld
push
out
sub
xlat
daa
cmp
pop
push
add
push
sub
cwtl
out
and
inc
push
sbb
and
mov
pusha
xchg
mov
les
sbbb
adc
and
xlat
adc
jecxz
jg
lea
push
cs
pushf
pusha
jge
ss
and
push
and
add
xchg
test
cmp
jnp
cmp
and
pop
xor
lock
fsubrl
cs
cmp
mov
mov
or
ljmp
cwtl
mov
jnp,pt
or
ljmp
cwtl
push
int
dec
mov
cs
das
imul
aam
lea
aam
jle
mov
jl
fstpl
mov
imul
jb
sarb
addr16
movsb
or
divl
push
xchg
adc
rcll
mov
test
add
aad
sub
dec
cmp
xchg
add
icebp
out
repnz
fbld
sub
mov
xchg
repnz
sbb
in
sub
pop
or
jg
sub
mov
xor
pushf
insl
xchg
xor
data16
sbbl
fwait
sarl
movsb
orb
sbb
mov
loopne
mov
addr16
out
aas
ljmp
jnp
adc
in
push
pushf
pop
jno
pop
inc
daa
hlt
mov
test
aam
jl
mov
push
mov
fwait
mov
push
sbb
sbb
sahf
lret
hlt
and
mov
xchg
mov
push
dec
push
jl
mov
in
jns
adc
xor
outsl
jns
ror
mov
add
iret
jg
aaa
lds
data16
pop
jbe
enter
lret
fists
mov
fwait
loope
lea
mov
jo
xor
mov
fldenv
cld
fwait
sub
test
ljmp
dec
out
in
ret
push
cmp
inc
jo
in
xor
test
idivl
sbb
repz
xchg
lret
rolb
push
in
cld
sti
cmp
cs
test
mov
popf
jnp
add
mov
sbb
or
xor
mov
dec
dec
and
rcl
jae
pop
cwtl
mov
cmp
xchg
mov
outsl
sbb
mov
dec
mov
sub
push
into
sahf
repnz
push
push
negl
lret
aaa
sahf
and
lock
lods
and
xor
jno
add
adc
lcall
fcmove
loope
aas
sub
add
in
ret
pop
push
adc
jle
dec
sub
mov
cmp
inc
scas
popa
divb
push
xchg
and
jae
mov
push
pop
push
and
mov
pop
out
cmp
fdivrl
push
ss
cmpsl
sbb
in
cltd
das
cmp
cmp
lock
and
inc
sbb
or
ds
testb
movsl
pop
sbb
sahf
stc
andl
mov
cld
andl
xchg
fs
add
outsb
mov
mov
mov
sbb
fst
xchg
cmp
nop
test
fldenv
pop
gs
push
push
or
adc
inc
jmp
loop
daa
into
mov
or
dec
sub
add
sarb
popf
add
bound
mov
mov
adc
sub
inc
movsb
subb
aad
scas
push
add
cmp
aas
pusha
and
iret
stc
push
pop
pop
insl
mov
lret
aaa
cmp
fsubrs
xchg
mov
cs
test
jge
sub
movsl
aam
insb
mov
lret
jmp
lds
jae
adc
cli
pop
addl
es
sub
data16
inc
test
cmp
cmp
dec
jb
aad
movsl
dec
in
sbb
cltd
mov
dec
lret
rcl
mov
out
into
pop
mov
jmp
or
push
push
ljmp
psubw
mov
decl
fcoms
sbb
mov
mov
or
aaa
mov
mov
mov
std
repnz
addr16
and
push
adc
jp
movsl
rorl
jp
jle
outsb
xor
push
sbb
sub
adc
movsb
xor
mov
push
addr16
adc
lods
pop
jmp
lock
cmp
jno
and
in
cwtl
and
lahf
mov
jbe
pop
call
adc
loopne
sbb
push
adc
stos
jle
sub
rcr
dec
into
lea
pusha
and
in
decb
sti
push
cmp
lock
push
sbb
jmp
dec
popa
pusha
repnz
sti
dec
and
sbb
data16
pop
push
cld
out
gs
mov
arpl
lcall
dec
add
mov
jb
fstpl
fcmovnu
test
mov
push
jo
dec
fildll
jecxz
ja
dec
call
mov
jbe
loopne
mov
cmp
lock
dec
inc
rol
into
in
stc
add
jns
pop
aad
mov
push
scas
xchg
shl
push
push
lcall
xchg
add
sbb
add
mov
inc
mov
repz
sahf
jnp
dec
pop
lcall
mov
stos
sub
mov
push
sub
imul
add
jae
popa
clc
lret
push
jle
adc
lcall
mov
fstl
lcall
addr16
dec
je
movl
mov
sub
adc
andl
notb
movsb
andb
push
iret
xchg
nop
popf
pop
insl
rorb
xor
sahf
cmc
or
dec
jo
jmp
dec
vhsubps
es
lock
push
jno
cmp
pusha
and
push
jecxz
ja
nop
movsl
jns
insl
mov
sbb
hlt
mov
stos
ds
lds
jmp
adc
cmp
out
hlt
cmpsl
idivl
xorb
add
cltd
test
sbbb
ss
inc
lods
pop
pop
int3
inc
xchg
sub
jle
or
lods
jle
outsl
andw
insl
test
mov
in
outsl
out
imul
subl
sub
fwait
push
mov
scas
sub
xchg
sbb
and
test
shrl
xor
or
das
gs
cld
imul
fadds
mov
icebp
cs
add
dec
rcrb
cmpsb
mov
cmp
adc
cmp
dec
outsb
adc
cltd
cmp
lcall
push
fnstenv
push
ja
cmc
popf
or
jns
out
and
cmpsl
icebp
fdivr
ficomps
aad
aad
xor
sbb
xor
mov
mulb
dec
sub
and
add
sub
insb
fsubr
stos
sub
add
fistps
mov
dec
inc
addl
aaa
mov
xchg
inc
adc
lea
les
out
mov
jg
mov
mov
scas
je
shl
js
pop
fstl
jo
js
test
dec
and
cltd
hlt
enter
pop
and
ljmp
mov
lods
push
imul
add
aas
or
push
in
stos
lahf
orl
mov
push
shl
insb
jge
sub
jmp
xor
daa
pop
jmp
sbb
lods
mov
jno
scas
sub
out
fdivl
inc
int3
test
adc
test
pop
fsts
xlat
jp
mov
ret
bound
ret
fimull
cmp
xchg
and
jp
xchg
scas
aaa
lret
lods
in
mov
dec
push
mov
xor
test
pop
and
dec
mov
int3
mov
xor
cwtl
adc
int
mov
mov
mov
popf
mov
push
xchg
cltd
mov
jnp
js
jle
sub
inc
testb
jbe
in
jno
pop
cmc
fistpl
add
dec
jne
fstpl
pop
bound
lahf
sub
push
or
out
dec
inc
add
test
ss
call
mov
hlt
xchg
test
adc
cmp
jb
pop
adc
decb
popf
sbb
cmp
out
mov
in
test
xlat
sub
filds
out
and
push
out
ss
inc
jns
jl
adc
xor
sbb
test
xor
orb
xchg
int
arpl
movsl
jne
test
movsl
mov
adcl
add
pop
sbb
push
xor
ds
fs
push
sbb
fwait
jns
xor
ss
stc
mov
lret
test
xchg
xor
xchg
and
imul
push
test
inc
sub
cmp
mov
xor
lock
inc
sti
lock
jno
mov
xchg
bnd
repz
scas
stos
test
jnp
cmp
sbb
inc
movsb
adc
jg
orl
lahf
jecxz
pop
fdivr
mov
jecxz
lret
les
sub
sub
add
mov
dec
push
mov
aas
mov
xlat
cmpsb
outsb
ja
adc
fdivrs
lock
in
inc
stos
sbb
adc
push
cld
jno
cmp
dec
jmp
mov
jbe
test
pop
pushf
adc
add
loop
jo
jge
std
cmp
loopne
push
pop
pop
roll
xchg
sub
lds
aam
aaa
stos
in
lods
cwtl
mov
cli
jae
xor
mov
stos
pusha
pushf
jno
and
fsubr
inc
pop
mov
lods
es
rcrl
mov
psadbw
in
or
clc
cmp
arpl
adc
std
in
jo
in
in
idivb
or
pop
test
pop
fs
cmp
rol
cwtl
or
add
mov
cmp
adc
or
mov
or
jne
mov
loopne
fwait
cmp
ja
mul
idiv
and
mov
jecxz
loop
test
xchg
inc
fwait
lcall
aas
jae
hlt
cmp
pop
adc
cmp
cltd
inc
insl
dec
loop
dec
or
pushf
sahf
dec
icebp
testb
outsb
dec
jno
mov
out
push
inc
cmp
cli
and
lcall
xor
add
push
push
cmp
adc
arpl
out
in
xor
paddw
pusha
push
dec
daa
iret
xor
scas
jae
pushf
fistpl
mov
loopne
mov
mov
dec
xor
mov
sbb
jbe
cmp
popf
xchg
aad
cs
jo
ss
cs
std
or
bound
aad
sti
fdivp
sub
jnp
ret
das
or
mov
icebp
rcll
stc
adc
ds
aaa
inc
or
or
mov
andb
subb
and
jno
mov
rolb
hlt
cltd
add
dec
shlb
xchg
inc
pusha
adc
pop
mov
adc
mov
mov
pop
in
popf
sub
inc
cmp
xchg
cmpsl
data16
add
mov
add
mov
dec
cmp
or
inc
adc
inc
into
sarl
fsubr
bound
orb
push
aam
xor
mov
lahf
out
and
outsb
xor
xchg
push
mov
jne
imul
stos
in
sub
mov
cmp
or
inc
jae
repnz
push
dec
add
inc
push
addb
push
mov
test
js
rcll
call
adc
in
ss
lret
pop
dec
rclb
mov
mov
and
lahf
mov
mov
inc
push
std
mov
mov
gs
xchg
test
out
leave
mov
xchg
or
inc
fprem1
int
add
dec
andb
mov
push
or
jmp
mov
sub
icebp
jno
movsl
stos
cmp
adc
dec
pop
in
mov
sbb
enter
mov
ds
mov
pop
dec
pop
stos
adc
out
in
cmc
mov
aaa
rcrl
cli
xchg
inc
jns
ljmp
jecxz
cli
loop
sub
dec
sbb
sbb
pop
sahf
iret
lcall
jnp
lahf
mov
cmpsl
sar
and
cmc
push
xor
dec
push
push
loopne
mov
mov
mulb
test
arpl
les
hlt
test
jle
add
repz
hlt
mov
xchg
cmpsb
or
mov
add
xor
iret
pop
push
or
sub
inc
sbb
lock
fsubr
lret
push
add
sbb
pusha
aad
sub
mov
or
nop
xor
lcall
mov
stc
scas
popa
sbb
int3
hlt
xchg
mov
mov
push
sub
test
ljmp
adc
addr16
add
sti
imul
cmp
nop
push
lods
test
sub
mov
sbb
sbb
add
push
sbb
cli
test
cld
pop
imul
ret
jle
cmp
scas
pop
pushf
movsl
addl
fsubrs
fldt
jecxz
mov
cmp
mov
rol
ret
lret
mov
addr16
pop
repnz
arpl
jns
push
jecxz
repz
mov
dec
push
and
stos
icebp
dec
stos
fsubrl
aas
psubusw
push
jp
or
insb
jno
dec
or
mov
mov
pop
mov
xchg
cmp
fdivr
dec
cld
adc
inc
or
pop
int
sub
jbe
cmp
test
pop
or
mov
testb
fdivl
repnz
jmp
lret
pop
mov
ljmp
or
push
inc
inc
mov
das
dec
push
mov
dec
dec
xchg
cmp
xor
push
lock
push
ror
dec
aad
mov
out
fldl
jns
call
movsl
mov
outsb
push
call
movsl
rol
sarl
outsl
adcb
inc
out
mov
xor
icebp
cmp
leave
sub
mov
mov
xchg
repz
pop
mov
arpl
fucom
push
dec
shlb
mov
cld
mov
jns
jge
imul
in
mov
mov
jae
int3
pusha
mov
pop
stc
adcb
fistpll
or
sub
insb
and
in
add
dec
fidivl
ljmp
inc
ror
xor
notl
fadds
scas
cmc
jecxz
jmp
cmc
das
mov
jo
mov
imul
jecxz
cwtl
xchg
aaa
cwtl
repnz
std
lock
enter
xor
pushf
inc
xlat
lds
inc
cmp
test
bound
and
xor
in
in
scas
mov
aam
mov
insl
fcoml
movsl
mov
pop
pushf
out
cmpsl
aas
push
mov
in
xorb
scas
shlb
lock
fnsave
or
ret
inc
mov
test
xchg
dec
lcall
movsl
push
and
arpl
aaa
cmpsl
push
iret
dec
mov
push
into
icebp
repz
orb
lahf
out
rcrl
dec
int
adc
data16
aas
cmp
xchg
ds
mov
pop
mov
cmp
jns
pop
xor
inc
push
mov
mov
push
hlt
pop
stc
or
add
and
xor
or
enter
inc
inc
pop
hlt
lcall
dec
sub
xor
pop
push
sbb
mov
scas
pop
push
repz
jne
aam
cmp
scas
pop
push
pop
leave
mov
in
jle
cmpl
out
negl
add
jle
xchg
leave
mov
imul
pop
bnd
inc
iret
pop
leave
dec
cmp
pop
mov
mov
mov
fxch
fildl
jge
mov
xchg
pushf
fwait
mov
xor
jne
lret
push
int
cmp
ss
ljmp
jl
loop
repz
stc
cmp
adc
cmp
test
mov
mov
add
mov
xchg
mov
xor
xchg
dec
movsb
jecxz
jne
fnstcw
and
vaddps
call
sbb
jno
xchg
push
iret
mov
jg
dec
outsl
jge
ret
xchg
call
addr16
dec
dec
pop
inc
xor
xorb
jle
int
out
outsb
cmp
add
cld
or
js
lret
xor
clc
lret
mov
sub
lock
shll
cmp
js
add
mov
inc
rcr
mov
outsl
xchg
imul
insb
sub
lret
mov
adc
or
and
xorl
and
add
inc
or
icebp
aam
push
sub
je
addr16
fwait
and
cmp
lods
xchg
decl
cmp
sti
mov
mov
loope
jle
or
cmp
adc
cmp
push
push
enter
out
and
sbb
test
adc
lahf
repz
and
nop
pop
xor
insb
or
jl
jae
xor
mov
ror
jnp
push
push
sub
dec
xchg
xchg
loopne
push
mov
sub
xchg
lea
inc
pop
shll
push
mov
jne
das
pusha
push
or
int3
cmp
cmp
mov
popa
xchg
sub
push
jnp
int3
js
xchg
outsl
dec
jmp
js
dec
int
or
xor
jnp
fucomi
push
lret
ret
mov
shl
sbb
outsl
jg
stos
adc
addb
pop
lods
lds
and
mov
cmc
xlat
inc
ret
in
mov
adc
mov
enter
bound
repnz
xor
rorb
xlat
mov
xor
mov
add
or
mov
jle
or
in
sub
icebp
test
repz
inc
mov
and
fisttpl
outsl
sub
xchg
ficompl
xchg
insb
repnz
fwait
xchg
pop
cwtl
int
enter
cmp
leave
test
imul
add
xchg
into
addb
pop
mov
push
xchg
pop
add
loope
out
jl
out
sbb
cmpsb
push
lods
iret
pop
sbb
mov
add
lret
test
fs
xchg
cld
fidivrl
cmpb
and
test
sahf
xor
pop
insb
sub
mov
mov
aam
lea
cwtl
xchg
into
into
sahf
jle
push
jns
add
cmp
shlb
push
xchg
jnp
in
enter
roll
mov
movsl
dec
cs
xchg
repnz
mov
cmp
popf
or
sti
push
into
cmp
mov
lds
sub
pop
adc
test
test
out
call
mov
jecxz
lds
dec
inc
js
mov
cwtl
imul
sbb
add
ds
imul
dec
mov
mov
cmp
movsb
fisttpl
pusha
and
dec
inc
push
xor
in
push
dec
cmp
push
aad
clts
inc
mov
xlat
dec
cld
mov
push
lock
loope
xchg
out
cmpsb
popf
inc
int3
pop
lods
mov
inc
js
xchg
or
imul
mov
rclb
jnp
inc
jnp
in
xor
mov
mov
mov
xlat
jg
mov
out
adc
xlat
data16
mov
fimuls
and
scas
adcl
pop
cltd
push
lret
ss
or
scas
fisttpll
mov
jbe
cld
or
cmp
out
push
arpl
lcall
jge
mov
aam
add
and
pusha
ljmp
lea
jbe
jle
add
push
jne
adc
dec
sbbb
mov
mov
daa
shrl
inc
mov
adcl
sbb
cmp
or
and
mov
lea
add
mov
das
add
jae
es
push
mov
imul
sub
push
and
subb
jg
xchg
lods
lret
hlt
or
mov
mov
les
cmp
sarl
mov
pop
int
jb
push
jnp
xor
mov
fisttpll
leave
mov
bswap
xchg
out
out
lcall
movsl
outsl
mov
jle
jne
mov
mov
lods
jo
pushf
loopne
inc
mov
scas
pop
imul
cs
push
cmp
mov
fwait
ret
xor
fstpl
sbbb
shll
divb
mov
or
or
cs
dec
adc
nop
testl
mov
adc
mov
mov
sub
lahf
insb
inc
cmpsb
mov
mulb
and
xchg
and
popf
js
inc
mov
mov
cld
xchg
pop
das
lret
lea
and
sub
jg
test
xchg
jecxz
add
icebp
inc
adc
popf
jnp
or
add
mov
lahf
arpl
dec
mov
pop
cmp
pop
dec
pusha
out
dec
fdivr
popf
adc
loope
outsl
repnz
push
mov
sub
gs
adc
arpl
xchg
pop
sub
inc
cmc
lea
arpl
lret
clc
sbb
or
lds
mov
mov
add
scas
xor
push
lahf
les
jns
lcall
mov
adc
sarl
clc
pop
es
cmp
mov
lods
out
xor
int3
aaa
imul
push
fiadds
or
daa
pop
in
mov
sub
inc
fldcw
adc
rorb
loop
dec
lea
lret
cltd
stc
sahf
incb
xchg
bound
andb
lds
std
xor
lret
xchg
cmp
jns
jo
cli
xor
fistps
mov
push
sub
mov
add
pop
dec
mov
cmp
xor
push
shlb
inc
mov
out
adc
add
inc
lcall
scas
cmpsl
insb
fisubs
add
sub
inc
ret
jo
cmp
mov
mull
mov
add
xchg
stos
jmp
xor
xchg
popf
enter
shl
xor
cmp
movsb
or
xchg
sub
cmp
push
cwtl
dec
clc
sub
jne
mov
xor
fwait
xchg
add
cmc
nop
push
movsb
fmul
inc
shll
leave
xor
push
cmp
ds
les
sarl
fdivs
movsl
xchg
xchg
fisttps
inc
mov
jns
xchg
sahf
mov
imul
lret
ds
xor
test
pop
int3
iret
or
push
repnz
daa
dec
addr16
jo
push
add
inc
push
in
shrl
adc
daa
inc
repnz
jmp
adc
movsb
pushf
jb
push
adc
cmc
or
mov
sbb
lcall
addr16
push
xchg
scas
push
mov
mov
ret
pop
xchg
fimuls
xor
es
mov
pusha
lea
push
fcmovne
pop
or
and
aas
and
push
sub
fnstcw
in
push
aad
adc
dec
jbe
je
je
test
jo
dec
imul
push
pushf
push
loopne
jae
outsb
ja
mov
popf
imul
dec
push
mov
lods
stc
dec
mov
clc
popl
add
push
inc
mov
cli
icebp
mov
or
and
rcll
mov
stc
push
xor
pop
and
loopne
nop
cwtl
shll
add
or
push
vandnpd
cld
adc
mov
aam
cwtl
flds
insb
sub
lahf
jmp
dec
push
sub
adc
sub
add
repnz
sub
sub
test
or
das
cmp
adc
nop
cmp
in
pop
nop
sub
movsb
cmc
in
cwtl
test
pop
push
cld
push
fisubrl
nop
cli
fisubs
shrl
movsl
imull
inc
add
in
mov
fwait
pusha
adc
sbb
adc
testl
fstpt
push
sti
push
xchg
stos
repz
es
xor
adc
push
push
lcall
shrl
pusha
aas
bound
mov
and
aad
mov
xor
jl
loop
lods
push
rorl
pop
ret
cmp
adcl
rcll
idivb
leave
not
or
mov
xchg
pop
shll
adc
or
cmp
or
add
js
enter
jb
shll
adc
dec
sub
stos
incb
out
fdivs
xchg
roll
mov
sub
outsb
push
mov
incl
call
and
cwtl
das
scas
lods
rol
fldenv
std
sub
lods
into
loop
sbb
jecxz
scas
pop
cmp
lcall
pop
scas
and
into
movsb
mov
test
cmpsb
cmpl
push
adc
add
mov
and
gs
inc
mov
pop
mov
movl
add
fwait
ja
mov
cmp
xor
cli
pop
pop
in
cld
scas
clc
icebp
aaa
jno
and
push
mov
inc
ljmp
dec
mov
mov
cltd
fcoml
fildl
dec
mov
sbb
aad
rol
cmpsl
fs
clc
out
dec
fldcw
pop
jge
nop
data16
and
sub
jp
inc
das
push
pop
aam
pop
scas
pop
xchg
or
lods
cmp
or
out
jno
pop
sbb
test
push
popf
scas
cld
daa
fstpt
loopne
rcrb
pop
mov
push
push
jg
cli
mov
adc
aas
adc
xchg
nop
scas
rorl
xor
pusha
sti
and
xchg
rorl
pop
pop
ljmp
cmc
push
mov
das
mov
test
push
sahf
test
push
mov
stos
test
mov
or
clc
xor
lahf
insb
push
mov
jb
fsts
dec
fwait
mov
js
and
mov
jle
add
shrb
xchg
orl
cmpsb
xor
mov
mull
cmc
test
mov
lods
adc
xchg
sub
inc
pusha
iret
lea
cmp
push
sbbl
add
insl
jp
inc
pop
lahf
stos
inc
popa
es
mov
fisttps
loop
push
cmp
lods
push
sbbb
lret
mov
mov
shlb
aaa
sub
cmp
xchg
int
push
and
andb
inc
cmp
jns
inc
jno
push
adc
mov
popa
push
mov
adc
or
cld
cwtl
fwait
and
xchg
icebp
xor
bound
push
push
psubq
cld
add
mov
lahf
add
cwtl
stos
inc
xchg
xlat
ds
xor
add
aam
or
dec
sub
and
stc
aam
mov
sub
mov
mov
aam
pop
xchg
sbbl
cld
adc
lods
mov
inc
movsl
cmpsb
xor
int3
je
cld
dec
test
es
pop
xorb
pop
xor
mov
neg
les
jns
fildll
iret
adc
or
fmulp
das
cld
jae
xchg
in
out
xchg
shll
popa
test
into
pop
jnp
loope
mov
xor
out
push
pop
mov
mov
dec
mov
iret
jne
push
loope
push
fmull
xcrypt-ecb
cmpsl
dec
ljmp
xchg
cmp
pop
push
xor
pop
cmp
sahf
sbb
fwait
mov
pop
test
mov
test
push
sub
es
cmp
xchg
jp
popf
mov
hlt
clc
inc
and
jmp
sub
dec
lret
ds
add
aas
xchg
mov
imul
mov
mov
push
or
dec
jno
push
hlt
popa
and
sahf
mov
mov
xlat
mov
fsubl
int
lret
and
cmp
scas
pop
xchg
loop
arpl
daa
jl
das
sub
adc
cltd
movsl
pop
inc
and
adc
jg
icebp
push
fadds
jae
jmp
and
jno
push
adc
mov
aaa
jns
fcomi
jge
sahf
pop
fsubl
xor
jb
adc
fs
popa
pop
dec
icebp
leave
xor
jno
repz
or
into
mov
imul
movsb
daa
adc
pushf
orl
mov
sbb
sarb
loope
push
sub
xchg
mov
repnz
out
std
lcall
adc
dec
movsl
sar
jnp
in
cmp
pop
pop
mov
adc
ret
mov
push
pop
pop
cld
mov
loope
int
xor
les
mov
jb
adc
repnz
div
push
push
adc
cmc
les
and
add
or
xor
das
xlat
fldt
sub
rclb
dec
or
stos
jg
inc
imul
mov
adc
cmp
jne
fsts
loop
int3
dec
pop
adc
scas
dec
jge
cs
jns
pop
sbb
out
xlat
hlt
xlat
xor
shr
mov
into
mov
aas
mov
sub
arpl
cmp
xchg
push
sub
sub
mov
jle
shrl
mov
gs
lea
ja
inc
jbe
add
ds
xchg
jae
int
shr
gs
push
aad
adc
rcrl
jnp
ljmp
mov
fs
cmpsl
jb
ds
test
push
adc
je
test
xor
rcl
stos
and
mov
inc
popf
dec
and
cs
jnp
lods
les
xor
fisttps
or
push
jmp
push
pop
data16
je
or
cltd
lcall
mov
lret
xor
in
jecxz
adc
in
pusha
adc
add
gs
push
mov
dec
pusha
push
inc
cld
cmpsl
arpl
outsl
insb
lahf
and
ret
insb
xchg
lret
adc
out
in
aas
push
lock
and
rolb
xor
fisubs
xchg
inc
jecxz
sahf
je
pop
dec
in
jecxz
pusha
lea
loope
mov
les
in
add
mov
sub
xor
nop
sti
es
leave
imul
les
inc
lret
cmp
aaa
pusha
icebp
shl
and
xlat
inc
push
mov
in
mov
xchg
jno
jo
rorb
add
jb
repnz
xor
or
sub
mov
jns
adc
test
xchg
jecxz
push
lods
lcall
add
scas
push
popf
mov
adc
sbb
add
stc
inc
dec
sbb
mov
bswap
cmc
adc
sub
js
shr
xchg
push
dec
jbe
lods
mov
mov
or
sbb
mov
xor
xor
ljmp
mov
mov
xor
inc
fidivrs
js
repz
aam
je
repnz
cli
or
fldcw
scas
jmp
fidivl
mov
shlb
xchg
jmp
je
cmp
mov
pop
stos
dec
shlb
mov
push
xor
inc
cmp
int3
call
inc
dec
fdivrl
mov
test
mov
push
cmpsb
push
iret
sarb
jnp
push
cs
movq
pop
lods
jg
das
lcall
push
hlt
sub
ljmp
in
lea
xchg
xchg
stos
pop
test
xchg
inc
and
out
xchg
jle
inc
add
or
js
leave
das
mov
xorb
outsl
sbb
pusha
or
popa
leave
add
dec
test
enter
mov
jge
cmp
popa
and
decl
mov
repnz
test
push
pop
add
mov
and
cmc
mov
mov
push
fisttpl
int3
scas
mov
sbb
sub
pop
and
adc
fistl
sbb
jl
mov
and
aam
imul
hlt
aas
mov
cmp
into
dec
push
dec
xlat
popa
cmp
jno
lret
ret
dec
jbe
cltd
mov
mov
int
scas
insb
push
pop
popa
inc
ds
and
push
sahf
icebp
cmc
adc
dec
cmp
add
push
in
nop
push
lds
roll
add
pop
or
icebp
xor
dec
xchg
mov
ret
sub
push
and
dec
or
dec
pop
lods
add
ds
dec
aaa
xor
xor
adc
sub
push
sbb
aam
jmp
xor
push
xor
mov
dec
adc
xchg
push
inc
insl
cmpsl
lds
mov
repnz
adc
frstor
stos
dec
stos
dec
jp
stos
cmpl
mov
and
sbbb
js
jmp
ja
lret
movsb
mov
out
je
scas
shrl
mov
pop
icebp
xor
inc
push
daa
pop
jg
scas
in
out
sbb
pop
sub
jnp
loope
push
and
push
adc
jle
mov
in
das
pop
movsl
je
mov
xor
arpl
pop
in
xor
mov
cmp
mov
add
add
aaa
xor
adc
lahf
sbb
pop
pop
dec
jnp
jl
cmpsb
aas
outsl
adcl
addb
lret
sub
jne
vpmadcswd
loopne
xor
lods
and
fildl
divb
std
fsubr
dec
sbb
repnz
and
pop
mov
xor
popf
push
and
jg
pop
stos
mov
cmp
arpl
xchg
push
popf
int
mov
jmp
aaa
jl
rolb
imul
ds
push
fiaddl
stc
cmp
mov
lret
pop
pop
adc
add
shll
jl
icebp
in
loopne
divb
and
or
sbb
cwtl
or
iret
roll
jle
data16
pop
arpl
mov
xchg
pop
add
jo
mov
sbb
sbb
out
rcrb
outsb
push
mov
and
pop
into
pop
leave
ja
add
lods
jae
add
in
push
dec
out
push
movl
inc
mov
sbb
xchg
push
inc
mov
pop
fnstenv
clc
jne
fsubrs
inc
out
and
jno
cmp
mov
and
lcall
push
in
add
out
cmpsb
cmc
jp
fmul
sub
xchg
pop
xchg
mov
jg
cmp
cwtl
incb
dec
mov
add
pop
cld
and
pop
jg
sbb
sbb
pop
cmp
nop
repnz
call
lret
add
and
inc
fsubs
push
xchg
repnz
mov
sbb
add
insb
nop
arpl
sub
or
sub
fistl
andb
aas
mov
or
mov
addb
enter
sar
ds
mov
and
push
cmp
cltd
and
xor
notb
dec
inc
add
pop
inc
iret
sbb
inc
jns
jg
sub
jno
pusha
cmp
jle
fidivs
push
ja
or
ss
andl
pusha
mov
jmp
jb
mov
arpl
fdivrl
je
push
mov
xor
inc
fadds
addr16
stos
movzbl
xor
mov
xchg
mov
xchg
pop
nop
sti
xchg
fistps
lcall
and
pop
jne
lret
inc
adc
movsb
mov
movsb
rolb
call
xorb
js
call
cwtl
mov
shrl
xchg
inc
jo
test
in
bound
cs
les
inc
arpl
mov
and
sar
call
test
jbe
xchg
shr
loopne
pop
sti
mov
jnp
lcallw
fimull
xchg
pop
push
in
mov
pop
in
jb
lock
or
out
or
adc
dec
and
inc
mov
sub
aad
dec
orl
std
jb
ds
pop
xchg
xchg
movsl
sbb
pop
ret
pop
xor
add
add
dec
jbe
ret
jg
pop
rcll
push
outsl
dec
adc
adc
out
mov
aas
and
dec
adc
sahf
push
enter
push
into
push
or
sub
in
push
mov
dec
jne
sbb
test
push
ficomps
or
and
sbb
or
cmp
adc
mov
scas
dec
xlat
test
insl
lret
adc
sub
mov
push
cmp
jp
and
and
pop
movsb
mov
cltd
xor
inc
push
shll
das
and
add
push
mov
cmp
hlt
shlb
sub
dec
cmp
mov
popf
sarb
fcmovnu
into
cmc
in
jb
enter
mov
push
into
xor
push
aad
xor
add
mov
movsl
mov
inc
mov
sub
mov
test
rcr
fwait
and
rolb
arpl
and
mov
pusha
int
pop
gs
addl
pop
dec
fs
xchg
sar
outsl
mov
lods
das
dec
movb
iret
and
ret
ljmp
mov
bound
aas
imul
push
ja
int3
aam
adc
repz
outsb
pop
ret
and
mov
stc
mov
xchg
add
sub
js
popf
rcrb
lods
dec
sub
xorb
int
xor
idiv
xor
arpl
sbb
push
jmp
cmpsl
sub
arpl
leave
subl
insl
les
les
pop
push
push
xchg
push
jl
out
xor
insl
test
push
jle
adc
dec
jns
xchg
les
mov
mov
cmp
cwtl
nop
pop
adc
jl
shlb
sbb
divl
faddl
xchg
fwait
mov
pop
xlat
lds
dec
shl
addr16
or
mov
xorl
mov
mov
mov
pop
arpl
incb
push
mov
les
daa
mov
mov
movsb
jge
out
test
hlt
jp
arpl
sbb
fisttpll
sbb
mov
movl
lock
incl
mov
mov
rorl
in
insl
xor
fisttpll
std
and
pop
lods
mov
repnz
gs
push
xor
jmp
xchg
movsb
sbb
xor
int3
popf
dec
and
leave
add
mov
sub
lock
roll
lahf
jmp
movsl
ds
mov
add
rolb
movsl
lcall
push
das
mov
or
mov
sub
xor
je
data16
inc
xchg
rclb
imul
dec
lods
lea
xor
jl
cwtl
test
or
or
dec
shlb
pop
shll
sub
jle
and
and
pop
fists
inc
fists
ret
dec
imull
add
inc
pop
loopne
inc
mov
jg
movsl
xchg
daa
mov
or
loop
xchg
xchg
outsl
test
pop
enter
mov
cmp
jb
je
inc
cmpsb
dec
sub
es
dec
or
xor
inc
adc
adc
loopne
out
sbb
std
in
dec
xchg
cltd
mov
lcall
lods
bound
xcrypt-cfb
cmpsl
daa
and
out
dec
lea
cmp
mov
divb
xor
push
or
xchg
lret
lds
aaa
lea
and
add
xchg
inc
push
mov
mov
or
hlt
in
mov
lcall
in
fnstsw
test
call
sbb
ss
test
pop
inc
idiv
mov
mov
jbe
mov
in
push
int3
pop
jo
stos
mov
iret
xor
bound
and
sub
or
jmp
inc
sarl
xchg
sbb
xor
push
mov
mov
jae
frstor
inc
sub
inc
xor
xlat
mov
mov
and
or
sbb
mov
mov
mov
xor
imul
xor
adc
sbb
ret
xor
push
adc
mov
cmp
test
mov
mov
loopne
cmc
mov
sbb
in
out
and
add
aad
pop
add
jle
add
fidivl
pop
insb
fsubrp
adc
jle
scas
pusha
sub
or
cmpsb
aam
pop
inc
xchg
cmp
icebp
mov
dec
cli
shrb
bound
xchg
jbe
push
testl
insb
ds
popa
inc
ss
mov
add
fsub
out
cmp
xchg
iret
sub
push
psubb
testb
mov
les
dec
mov
push
movsb
lahf
jge
and
loope
fwait
and
sbb
mov
leave
inc
jno
cltd
pop
call
xchg
pop
mov
jl
sbb
js
and
in
mov
imull
cmp
jbe
jno
jnp
jle
test
js
iret
mov
push
mov
mov
or
pop
fiaddl
test
sub
fnstenv
lret
bound
xchg
pop
jge
push
jbe
cmp
cmpsl
arpl
lret
iret
mov
in
xchg
popl
inc
das
and
daa
fists
aam
das
adc
fldenv
int
cltd
ja
aaa
push
scas
xor
mov
mov
push
cmp
in
ja
dec
xchg
out
inc
lea
push
je
and
sub
addb
xor
shlb
jp
int
mov
enter
ss
ds
shrb
pop
pop
push
dec
push
daa
dec
dec
scas
pop
stc
or
insl
push
rcrb
adc
jmp
test
pop
pushw
shlb
out
cmc
nop
int
xlat
mov
dec
sbb
add
mov
rol
jns
in
fcompl
jp
push
rcl
pop
mov
outsb
inc
mov
lret
insl
jmp
gs
ret
imul
push
adc
inc
ja
scas
sub
sbb
shll
imul
insb
ljmp
pop
repz
arpl
jo
cmpsb
jnp
je
jle
xchg
and
dec
pop
push
or
pop
call
andb
push
test
arpl
dec
icebp
pop
and
bnd
pop
mov
lock
js
jmp
mov
mov
aad
or
pop
hlt
mov
pop
pop
pop
jg
ja
aam
dec
rcrb
cs
xor
adc
scas
dec
movsb
or
movsb
mov
sti
mov
fcmovnu
je
mov
push
loopne
jmp
push
pop
mov
lahf
lcall
push
lock
xor
lea
sub
push
jmp
andb
mov
cli
jp
incb
ss
or
xor
mov
inc
sbb
jle
pop
mov
or
and
insb
mov
scas
sub
daa
aas
or
out
rclb
or
push
push
nop
fists
sbb
test
add
ret
sub
testb
aas
jns
aad
cmp
icebp
mov
push
jns
mov
rorl
jns
dec
xor
cmpb
dec
inc
and
enter
faddl
add
into
adc
fistpll
incb
or
mov
xor
lds
dec
hlt
test
fs
or
and
inc
imul
mov
fbld
mov
mov
sub
out
cmp
cmp
sbb
or
decb
xchg
iret
push
sub
aam
ret
push
pop
lret
dec
and
and
mov
shll
mov
and
and
movb
sub
lret
test
jmp
bndldx
pop
inc
jmp
pop
jo
mov
test
stos
sub
repnz
and
nop
lds
sub
xchg
addl
addl
xor
push
inc
adc
inc
fbld
xchg
out
loope
leave
dec
mov
stos
xchg
sbb
push
test
or
test
inc
enter
add
jmp
test
and
outsb
adc
aam
vpunpckhdq
scas
insl
fisttpll
aam
rclb
lcall
lods
repz
dec
add
push
clc
outsl
call
mov
xchg
xchg
ljmp
stos
fmul
int
int
add
pop
mov
scas
cld
test
movsb
push
addl
or
rep
xadd
lret
lret
push
lods
lods
xor
clc
adc
out
jne
mov
push
aad
pop
adc
xor
fmul
addr16
lea
mov
lds
lret
pop
mov
xchg
mov
test
jle
aas
sarb
xchg
mov
lea
xor
xor
mov
outsb
sbb
pop
fsubrp
inc
mov
sti
ja
mov
divb
mov
lea
nop
jns
outsl
push
das
fimuls
pushf
ds
stc
sarb
int3
gs
pusha
jl
ds
xchg
call
movsl
cmp
xchg
jmp
adc
arpl
pop
test
mov
pop
stos
gs
adc
jecxz
push
mov
or
fstps
dec
dec
stc
dec
fisttps
flds
add
xchg
push
mov
cmpsb
jns
hlt
sahf
mov
dec
and
push
int
or
dec
inc
cmc
cli
cld
jle
lahf
mov
out
aas
bound
sbb
inc
mov
into
xchg
clc
ss
jno
cld
int3
insb
xchg
push
int3
mov
lods
loope
insl
rorb
sub
push
outsl
pop
fwait
mov
cli
inc
aas
insl
xor
inc
add
cmc
fwait
dec
cli
cmpsb
mov
popf
jmp
mov
in
dec
test
fldenv
mov
repnz
pusha
fbstp
mov
pop
out
mov
cwtl
je
aaa
sbb
sti
loope
imul
jbe
pop
mov
repz
fisttpl
pop
inc
cmp
mov
mov
pop
leave
adc
mov
inc
lock
int3
jo
mov
push
imul
into
inc
cld
xor
push
inc
std
push
repnz
sbb
sub
repz
or
sti
sbb
fisttpl
icebp
add
sbb
inc
pop
dec
sahf
fwait
repnz
mov
pop
and
xor
std
clc
mov
ja
pushf
imul
rolb
mov
pop
xor
pop
shll
sti
push
and
lcall
mov
jl
cmpsb
and
jp
sahf
movsl
shlb
stc
insb
mov
adc
nop
pop
sbb
sbb
stc
push
xchg
cs
movsl
daa
aad
das
sub
cmp
loopne
dec
fstps
stos
test
push
sub
repnz
out
push
sub
gs
lret
lock
add
mov
out
insl
inc
fcmove
xchg
mov
cmp
insl
cmp
scas
icebp
mov
out
out
cmpsb
clc
out
mov
mov
scas
inc
je
repnz
add
xor
mov
xchg
inc
inc
pop
sub
xor
nop
stos
addl
pop
and
in
inc
dec
pop
cmp
pop
lods
stc
mov
pop
xchg
icebp
jne
inc
sbb
push
jmp
sbb
arpl
ss
and
ljmp
push
sbb
jmp
mov
jnp
and
or
inc
mov
enter
mov
xor
cmpl
and
popa
jo
xor
xchg
fstps
and
adc
daa
popa
or
dec
imul
pop
xchg
rcr
pop
dec
test
and
repnz
mov
xchg
cmp
or
out
sbbb
xor
push
fst
movsb
lds
push
jmp
jb
pop
daa
xchg
stos
xchg
pop
ja
push
outsl
rcll
cwtl
sub
sahf
cmc
rcll
scas
test
loop
push
enter
xor
fs
fmul
mov
cmpsb
outsl
cld
mov
mov
mov
or
mov
xchg
inc
xlat
pop
xchg
xchg
cmp
aaa
push
in
or
sbb
loope
sub
sub
or
xor
arpl
or
fs
push
into
mov
xor
rcrl
and
mov
popa
inc
hlt
sbb
mov
dec
pushf
es
xlat
jbe
sbb
jl
rolb
xchg
shll
scas
jb
je
pop
pop
pushf
mov
cmp
add
std
inc
dec
scas
xchg
mov
repz
ret
jle
push
imul
dec
pushf
or
cmp
es
or
jns
int3
cmp
or
xchg
lret
fimull
insl
sahf
push
adc
subl
jno
lcall
push
xchg
xchg
das
add
dec
jl
leave
insl
in
mov
fldenv
insb
aas
push
stos
popa
mov
push
dec
mov
fimuls
imul
pop
jge
shll
and
mov
pop
call
cs
inc
std
and
add
xor
mov
sub
xchg
xor
in
clc
int
hlt
xor
pusha
adc
movsl
add
mov
imul
cli
popa
jecxz
push
test
jecxz
into
cmp
ss
pop
cs
jge
lods
or
mov
int
and
xor
add
mov
les
idiv
lock
int
repz
lock
idivb
rcrb
inc
cli
mov
std
scas
xchg
jp
mov
pop
and
jp
mov
test
rorl
adc
xor
mov
imul
outsl
mov
sbbl
cmpsl
push
insb
cmp
xor
hlt
pop
and
imul
daa
fs
mov
mov
stc
adc
dec
clc
sbb
fs
adc
xor
in
push
icebp
mov
fdiv
adc
adc
xor
xchg
fxch
icebp
cwtl
push
pushl
cmp
or
jl
jge
xor
pop
cmp
fbstp
dec
shr
sbb
and
pop
popa
lahf
push
movsl
lret
arpl
movsb
cmp
adc
sub
popa
jge
pop
les
stos
daa
mov
in
xchg
xor
stc
pusha
sub
cmp
mov
dec
pop
wrmsr
mov
cmp
cld
cmp
out
xchg
xor
xchg
cmp
sbb
mov
inc
fwait
test
fisttpll
sbb
jo
mov
bnd
sti
pop
ss
xchg
out
mov
mov
loope
cmp
fisubs
test
fstpl
ljmp
je
mov
insl
ja
cwtl
dec
outsb
call
nop
dec
push
lret
or
lahf
repnz
xchg
and
sub
mov
push
add
and
mov
inc
xor
dec
mov
push
mov
inc
push
dec
in
mov
xor
lods
dec
or
lret
cwtl
nop
mov
ret
and
jae
jecxz
scas
cmp
stos
push
movsl
or
shll
mov
jnp
push
mov
es
in
and
aad
add
adc
outsl
push
std
repz
dec
das
cmpsl
adc
lock
push
js
test
arpl
in
test
dec
in
dec
outsb
pop
cmp
outsb
sub
fcomps
out
xor
xchg
es
hlt
push
lret
mov
leave
jbe
rcl
xchg
fdivl
jg
inc
das
push
xchg
mov
ss
andb
jge
movsb
and
mov
sarl
ficoml
dec
sub
xor
add
popf
lds
xor
jmp
inc
lea
dec
js
push
mov
addr16
and
outsl
mov
ret
shl
xchg
ljmp
dec
loopne
aad
rcrl
sub
scas
push
je
icebp
call
int
or
jg
and
test
inc
cmc
iret
push
shrl
sbb
lcall
mov
imul
mov
jns
je
cmp
mov
in
jo
push
mov
xchg
aam
cs
repnz
int3
out
xor
jmp
data16
add
jge
and
adc
xor
dec
and
test
jnp
dec
leave
dec
push
fsubrl
mov
pushf
push
leave
add
mov
or
dec
pusha
aam
fistpll
stos
sbb
cmp
dec
push
adc
lds
adc
sub
aaa
xchg
pusha
in
and
cli
aas
sti
add
mul
test
iret
scas
sbb
or
and
loope
pusha
stc
mov
fdivl
and
add
sbb
push
fwait
adc
jno
adc
fsubs
and
out
xlat
sub
fcmovnb
pusha
shll
mov
ds
mov
jp
rorb
jb
pop
inc
jns
inc
cmp
dec
sbb
jnp
jb
out
test
lds
jbe
sub
sub
xor
sbb
inc
mov
nop
lret
jecxz
stos
jne
push
stos
lret
ss
ror
les
scas
xchg
loope
cltd
push
inc
mov
and
mov
cltd
insb
fnstcw
mov
andl
mov
enter
pop
sbb
mov
fisttps
fwait
orb
orl
test
xchg
jno
pop
jecxz
mov
dec
arpl
cli
in
es
mov
cltd
fs
cmp
push
xchg
adc
cmc
fcoml
aam
jo
mov
das
iret
addr16
xor
xchg
cwtl
push
movsl
jmp
mov
or
pop
jo
outsl
inc
push
fwait
in
mov
inc
pusha
mov
inc
adc
addr16
cmp
cmp
adc
aas
xor
dec
shrb
test
gs
jl
jge
push
stos
insb
mov
loop
jle
xlat
clc
daa
loop
lret
mov
stc
sbb
sub
cmc
dec
hlt
add
pusha
mov
das
push
push
cmp
mov
in
sub
inc
push
sub
adc
mov
mov
pop
ret
jae
rcrl
push
jl
addr16
add
fistps
add
jmp
int
inc
sbb
jg
das
orl
lea
aas
outsl
rolb
adc
fimull
jp
mov
imul
pop
enter
sub
std
arpl
sub
leave
fsubp
inc
rcr
mov
add
and
fidivs
pop
adc
jno
jl
cmpsl
popf
cmpsb
fidivrs
es
sbb
scas
jne
pop
addr16
aaa
jne
push
jle
pusha
ret
or
cmpsb
mov
add
scas
test
adc
int
inc
pop
and
pop
cmp
add
aad
test
cmp
jecxz
pop
mov
inc
adc
fsubs
fs
subl
cmp
test
aas
sub
sbb
push
cmp
jmp
pop
adc
fucomip
imul
or
scas
mov
pop
lcall
adc
aad
test
pop
jge
test
inc
push
xchg
lds
cmp
mov
mov
pop
pop
test
clc
repz
cmp
jmp
sbb
ds
call
jge
mov
hlt
adc
scas
or
mov
mov
jmp
and
sub
aaa
mov
stos
jecxz
adc
cmpsb
inc
fnstcw
xor
adc
sbb
filds
ret
sbb
cmc
xchg
jmp
push
sbb
push
jbe
dec
cld
ljmp
xor
test
mov
xchg
push
das
pushf
xchg
sub
push
xchg
or
sbb
cmp
addr16
push
xchg
dec
inc
sbb
jecxz
das
arpl
mov
fsubrp
in
repz
fdivl
aam
outsb
rcl
cmc
mov
dec
or
clc
mov
imull
not
sbb
ss
push
add
xchg
cwtl
xor
inc
inc
aaa
or
or
gs
push
jle
sahf
dec
shll
std
int3
adc
lahf
jge
test
adc
out
xchg
fs
daa
dec
sub
xchg
mov
subb
add
push
sti
jg
lahf
inc
jne
loopne
sbb
dec
sbb
aaa
outsb
inc
into
clc
data16
mov
adc
pop
sbb
repnz
andb
bound
xor
push
pcmpeqw
cmp
push
pushf
mov
cmc
cli
lock
scas
cs
scas
mov
out
data16
test
jle
cmc
cmpsb
shlb
mov
test
cwtl
push
sbb
jb
gs
or
xchg
jge
lcall
cmp
popa
pop
sbb
je
in
stos
xor
mov
xchg
add
jnp
jle
in
dec
aad
lock
xor
aad
push
in
xor
aaa
lods
andl
add
in
imul
sahf
dec
sbb
scas
dec
call
jmp
clc
ljmp
xchg
aad
sbb
mov
data16
and
loop
jge
push
mov
hlt
cmp
mov
outsl
add
shrl
das
jns
xchg
js
lock
repnz
xor
push
fs
repz
repnz
mov
dec
inc
mov
jo
pop
or
int3
xchg
xchg
pop
data16
sub
nop
shlb
pop
movsb
add
lods
mul
inc
lods
pop
lock
jne
repnz
aaa
sub
dec
incb
or
sbb
shll
add
mov
daa
ret
mov
test
movsl
daa
push
or
pop
inc
lahf
xor
mov
sbb
push
call
jo
idivb
out
or
adc
push
jge
leave
and
cmovbe
fisttps
int3
xor
cs
sub
jg
sub
ficoms
mov
dec
mov
cmc
lds
pop
dec
push
mov
and
jp
notl
dec
add
add
int
scas
in
fdivp
out
xchg
cmp
xchg
or
jg
mov
mov
repnz
sub
aas
std
sahf
stos
add
xlat
outsb
adc
out
jge
ror
aam
push
sub
jl
xchg
push
cmp
sub
std
xchg
inc
out
jno
popa
int3
mov
push
lock
xchg
xor
hlt
mov
dec
push
cmp
and
cmp
lcall
push
add
shlb
les
gs
adc
test
scas
fidivs
add
out
jo
xchg
iret
pop
das
jb
sbb
je
or
fidivs
sbb
lret
arpl
out
lods
sub
sti
xchg
cmpsb
aad
clc
icebp
lahf
mov
mov
xor
mov
sbb
pushf
lahf
add
xchg
cmpsb
or
out
sub
imul
scas
insb
dec
mov
jae
mov
xchg
addr16
fisttpl
icebp
jle
and
imul
cwtl
jno
sarb
lcall
pop
in
xlat
cld
popf
clc
sbb
iret
insl
js
pop
mov
js
loopne
jmp
adc
gs
mov
xchg
xor
subb
in
xor
sahf
subb
out
push
sbb
inc
lret
data16
lret
add
push
inc
daa
push
inc
divb
push
cmp
sub
and
int3
inc
xchg
xor
outsb
cmp
out
mov
jno
lock
push
sahf
mov
mov
leave
fcompl
pop
sahf
pop
add
adc
push
cld
aas
sub
xchg
gs
mov
mov
decb
pop
ja
xor
push
addb
daa
cmp
sti
sbb
std
jo
fldt
adc
out
inc
push
push
mov
jb
cmp
jg
insb
icebp
cltd
cmp
scas
inc
dec
loopne
in
jle
shl
or
adc
pop
int3
jbe
push
mov
push
push
xchg
inc
xlat
cli
dec
scas
push
xchg
imul
xlat
repnz
andl
inc
test
stc
nop
sbb
push
in
inc
sub
and
ret
gs
xchg
int3
popa
cmpsb
sub
fwait
jge
aad
shrl
xor
ds
ja
xor
xor
roll
jle
jge
popl
xor
dec
js
cmp
sbb
cltd
rcrl
jecxz
jle
imul
lcall
cmc
out
inc
jg
push
and
pop
xchg
inc
jns
ficoml
out
and
scas
jo
push
sbb
jae
je
test
jb
or
adc
add
inc
dec
sbbl
pop
lods
into
jmp
imul
cmpb
stc
xchg
inc
jmp
sbb
fidivrl
mov
pop
dec
cmp
repz
mov
out
mov
scas
mov
test
fbstp
into
inc
dec
push
or
xchg
inc
ret
inc
dec
sarb
and
jecxz
pop
in
inc
add
movsb
and
xchg
mov
in
cmp
loope
aas
mov
pop
adc
xor
cwtl
and
ss
pop
sub
dec
mov
jge
outsb
notl
jge
cmp
sbb
sbb
adcl
pop
push
jecxz
and
sahf
mov
push
stos
xchg
fisubs
or
fxch
loopne
ja
pop
shlb
dec
aad
xchg
insb
fbstp
add
movsl
dec
cmc
xor
mov
lds
inc
xorl
lods
mov
mov
or
jb
cmp
add
out
xchg
sbb
sti
in
imul
movsb
jmp
outsb
mov
ja
mov
push
test
ficompl
sahf
fldcw
sub
pop
jle
dec
and
outsb
or
cld
pop
sbb
icebp
fwait
jne
movsl
adc
lods
xchg
icebp
pop
cli
jb
mov
mov
cmp
jae
jg
and
scas
xlat
xchg
call
lea
mov
insb
xor
sar
pop
jg
movsb
sub
int
call
in
out
mov
int3
cmp
mov
mov
shl
fidivrs
dec
xchg
in
xlat
sub
or
sub
in
mov
mov
xchg
fisttpll
adc
bound
push
dec
ret
jle
mov
scas
add
test
lcall
les
xor
scas
xor
pop
dec
inc
xlat
sub
cmp
sub
loopne
adc
jne
cmpsl
pop
gs
jg
pop
cmp
hlt
enter
xor
xchg
ficomps
lahf
jle
repnz
bound
sahf
mov
mov
dec
flds
push
mov
push
mov
aaa
cli
ror
jno
pop
mov
jle
and
mov
addl
xor
mov
int3
pop
sub
jmp
xchg
test
jge
pop
mov
arpl
push
dec
jmp
mov
clc
push
adc
stos
int
cmp
in
ret
xor
pop
int
mov
lods
test
popf
mov
jne
imul
jns
xchg
mov
bound
xor
adc
nop
out
sub
inc
out
testb
jge
fs
cmpsl
or
test
shlb
inc
arpl
fsubr
aad
sbb
pop
cs
out
and
mov
fbstp
shr
ret
imul
lea
push
rcr
or
mov
cmp
imul
mov
jecxz
sub
mov
pop
sub
std
inc
xchg
imul
jg
sbb
inc
test
push
sub
filds
and
imul
cltd
push
inc
std
pushf
out
and
inc
cmp
gs
outsl
fiaddl
mov
lahf
test
shlb
ss
adc
jmp
fmuls
cmp
jle
fwait
int
sbb
jb
and
mov
out
cli
aam
scas
nop
scas
jp
and
jg
adc
mov
pop
repz
push
jb
mov
cmp
adc
xrelease
sbb
leave
sbb
daa
outsb
lahf
aad
loope
dec
movsl
dec
inc
or
and
imulb
test
pop
movsb
or
or
pop
addr16
cwtl
stos
leave
gs
mov
mov
push
sbb
cmp
sti
cmp
cmp
cmp
fmulp
popf
mov
xchg
cmp
pop
pop
jns
jne
mov
in
lock
push
pop
sbb
insb
scas
sbb
mov
and
bound
dec
hlt
out
push
repnz
adc
push
fisubrl
xor
jl
mov
cmp
lcall
mov
movsl
xchg
ds
or
push
mov
jns
mov
out
sub
adc
out
adc
xchg
dec
jg
xchg
mov
insl
cmp
inc
pop
or
mov
xlat
mov
popa
loopne
sbb
out
dec
shll
push
push
xchg
out
and
push
in
dec
aaa
push
ja
in
jg
stc
xorl
mov
test
lret
faddl
mov
es
aad
aaa
rol
push
iret
push
jge
jnp
ficoml
inc
leave
sub
pop
leave
or
addr16
fdivrs
pop
xchg
push
mov
sub
cmpsb
sete
cmp
mov
push
in
pop
pop
inc
test
inc
or
mov
dec
xchg
xor
add
fxch
and
shll
sti
js
cltd
mov
sub
or
icebp
cmp
fwait
addl
jo
sub
fwait
sbb
push
and
lock
pop
bound
and
mov
jbe
lods
scas
sbb
mov
jle
mov
pop
inc
fildll
jo
ja
lods
or
push
dec
fs
sbb
and
leave
data16
sub
or
cli
mov
psubusb
jnp
fidivl
es
fbstp
push
push
jns
or
xor
sbb
sub
pop
inc
xchg
shlb
minps
dec
das
mov
ss
gs
loop
xchg
dec
shr
stos
aad
xor
mov
push
sub
inc
sbb
pop
popf
cwtl
insl
push
sbb
and
jg
mov
cmc
ret
push
out
data16
mov
ja
mov
ja
xchg
ss
pop
ficoml
outsb
cld
sub
or
adc
add
cmp
sbb
in
pop
sbb
adc
sahf
jp
jne
in
push
push
adc
cwtl
scas
xor
mov
sbb
test
add
sbb
inc
mov
add
push
not
push
and
enter
fsub
xor
mov
aas
sub
scas
outsb
pop
stos
dec
sub
pop
pusha
and
xor
add
fdiv
push
enter
jle
cwtl
nop
fwait
ret
nop
mov
and
mov
pop
out
lahf
je
mov
xchg
xchg
popf
dec
cmp
add
jne
jl
and
xchg
xchg
fcompl
cmp
aad
enter
adc
mov
aam
jmp
jl
mov
inc
mov
cmp
jge
ljmp
jbe
stos
fstpl
in
xchg
call
fistl
xchg
repz
mov
aam
int3
cmp
call
mov
or
gs
xorb
movsl
lea
push
std
sub
in
ds
pop
jle
enter
loope
mov
mov
call
and
or
mov
dec
xor
cmp
mov
imul
fwait
xchg
jo
mov
mov
mov
leave
dec
push
mov
fidivrl
pop
stos
push
sub
jbe
sar
mov
dec
clc
xchg
pop
repnz
push
sarl
imull
cwtl
out
lret
jae
and
xchg
out
fwait
cmp
xchg
xor
mov
les
ds
jns
outsl
dec
or
mov
shll
inc
adc
push
xor
inc
and
inc
inc
xchg
inc
addr16
cmp
repnz
mov
mov
add
lcall
jne
mov
loop
xlat
roll
push
call
stc
adc
push
mov
stos
sub
es
cmpsl
lret
les
cmc
xlat
add
mov
enter
lds
sub
add
mov
call
cmp
inc
fdivrl
mov
inc
mov
das
inc
das
mov
test
jns
or
sarb
xchg
or
testl
out
jmp
cmp
xlat
push
int
mull
inc
dec
inc
jae
xor
leave
lret
push
mov
xor
xor
mov
dec
mov
push
pusha
arpl
xor
adc
sti
jo
xchg
das
add
fcmove
loopne
mull
lods
adc
push
mov
pop
mov
repz
xor
gs
and
mov
popf
add
rorb
repz
dec
inc
sbb
nop
and
outsl
aad
mov
or
pop
sbbb
ret
sub
pop
lcall
out
dec
pop
test
mov
xchg
outsb
daa
xor
sahf
test
sbb
mov
mov
insl
mov
cmp
mov
cmp
push
repz
cltd
stc
cmp
sub
mov
mov
push
push
jne
sub
mov
add
dec
push
ljmp
mov
cs
js
in
dec
cmc
arpl
jno
fnstsw
int3
and
cmp
xlat
mov
add
leave
ficompl
sub
ja
das
stos
xor
mov
in
push
adc
out
call
inc
es
hlt
dec
dec
xchg
cmp
mov
cld
loope
fimull
sarb
cmp
clc
repz
js
sti
fldt
jl
insb
mov
decb
pop
mov
sar
hlt
in
jne
adcl
cwtl
js
jns
lahf
push
call
adc
xchg
cltd
mov
xlat
jae
aad
negl
mov
push
xchg
cvtps2pi
loop
sbb
call
imul
loope
sub
lock
orl
iret
pop
sbb
push
ljmp
bound
ljmp
ds
sbb
sahf
aam
stos
hlt
sahf
pextrw
sbb
adc
mov
add
push
sub
outsl
test
stos
iret
adc
push
imul
push
sbb
inc
iret
mov
daa
movsb
stos
call
outsb
repz
icebp
stos
push
sbb
out
lds
pop
in
popl
xlat
loopne
mov
dec
push
sub
or
mov
xchg
and
addb
pop
push
movsl
push
pop
sub
repnz
xor
mov
add
imul
push
call
push
scas
adc
daa
es
lds
xor
xor
or
rorl
repnz
dec
sarl
adc
sub
xchg
dec
test
pop
add
or
xor
mov
push
imul
lods
or
out
xchg
lret
icebp
das
aam
lock
dec
lret
mov
test
mov
js
and
pusha
les
mov
aad
adc
mov
jno
jl
sbb
mov
xchg
mov
aam
xor
jmp
std
repnz
pop
clc
scas
ja
enter
push
cmpsb
jno
jmp
jp
js
fwait
psadbw
and
cli
xchg
xor
cmp
mov
pusha
cmp
xchg
jl
fldln2
sti
mov
adc
pop
or
add
int3
sti
mov
dec
push
fcomi
push
jne
test
sti
mov
pop
jo,pn
dec
jbe
jb
mov
pop
pop
test
repz
mov
xor
inc
pop
or
dec
jmp
out
jle
or
fisttps
jns
imul
imulb
pop
dec
rcr
push
loope
add
jle
xor
xor
pop
jecxz
push
xor
loope
pop
xchg
or
xchg
inc
inc
or
mov
dec
insl
movb
sbb
jno
or
movsl
cs
rcr
dec
pop
out
dec
fistl
into
cmpb
shll
dec
push
push
mov
xchg
cmpsl
push
scas
jge
sub
xchg
sbb
or
pop
out
jb
cmpsl
adc
jno
in
fmull
and
cmp
add
adc
cwtl
aad
mov
lock
jnp
shlb
mov
xor
jno
inc
in
push
push
outsb
iret
ret
mov
xchg
push
add
testb
popf
insb
clc
pop
mov
test
lea
out
mov
idivb
cmc
push
xor
xorl
in
data16
xchg
dec
cld
call
mov
sub
aas
or
ror
xor
cmp
ja
repz
stos
cmp
pop
stos
stos
xchg
andb
or
into
lcall
loope
add
xchg
cmp
jmp
fmuls
sbb
push
push
dec
adc
outsl
mov
hlt
insb
bound
pop
cmc
stc
mov
xor
fwait
call
ds
in
mov
adc
add
shr
mov
push
add
cld
outsl
jb
push
mov
jnp
dec
fists
xchg
push
push
cmp
sbb
les
loope
or
enter
jbe
clc
scas
adc
repz
mov
push
repnz
xchg
mov
repz
xor
and
xchg
push
push
cmpsl
hlt
add
fsubs
in
cmp
add
add
enter
outsb
cmpb
cwtl
cltd
and
rorb
pop
dec
leave
dec
idivb
mull
adc
cli
and
mov
mov
push
test
jp
out
je
insb
push
xchg
lea
cli
fsub
xor
or
popa
pop
clc
adc
adc
dec
cmpsl
jno
std
scas
sbb
sbb
push
lock
pop
testb
push
jp
shl
mov
pop
mov
and
repz
cld
inc
aaa
inc
push
imul
cmp
push
std
push
outsl
and
add
adc
jnp
sbbl
stos
gs
or
xchg
cmpsb
dec
nop
or
pop
out
mov
fdivrs
outsb
shr
jns,pn
add
out
addr16
and
jne
or
loopne
roll
lods
call
cmp
les
push
push
or
mov
xchg
outsb
imul
mov
lock
xchg
scas
lods
cmpsl
xor
imul
jge
jg
pop
nop
dec
xor
pusha
adc
data16
cs
aas
outsb
loop
xchg
andl
pop
sti
mov
fldcw
outsl
or
int3
clc
adc
mov
in
shrb
fisubl
cmp
out
push
xor
mov
mov
push
mov
es
lret
test
or
rcll
mov
jae
jbe
rcrl
into
loopne
pop
test
push
jmp
push
mov
hlt
arpl
cs
mov
sahf
pause
xchg
ss
inc
fisttpl
add
in
jnp
aam
loope,pt
es
add
xor
in
sbb
pop
outsb
rcr
dec
in
jne
jg
ss
mov
add
popf
cmpsl
jp
xor
cmp
jg
daa
or
insl
aaa
mov
pop
stos
pop
in
pop
xor
scas
jecxz
fldl
push
iret
stos
mov
jo
sbb
and
adc
adc
xchg
inc
and
sbb
pop
pop
mov
mov
and
fisttpl
xchg
scas
incl
into
adc
xchg
std
pop
adc
test
mov
jo
add
ret
pop
xchg
imul
push
mov
repz
jg
mov
test
enter
mov
sub
jnp
jle
sub
call
push
push
xor
pop
popa
arpl
mov
pop
ret
popf
outsb
xchg
aam
bswap
or
fs
inc
or
mov
gs
inc
pop
aad
cmp
fnsave
rorl
fsubrs
or
mov
dec
loop
sbb
inc
push
rcr
jle
pushf
mov
xchg
insl
pop
push
xchg
ds
icebp
jl
and
js
adc
mov
cwtl
mov
jne
xchg
fst
push
ljmp
int3
cmpsb
push
sbb
fstp
ficomps
mov
and
aam
cmp
movsb
pushf
pop
add
aad
jno
mov
cmp
mov
mov
add
movsl
and
xchg
cs
in
pop
lahf
inc
xchg
cmp
test
inc
xchg
arpl
pop
xor
dec
mov
fsubrl
loop
mov
filds
push
stos
lahf
enter
jmp
ljmp
inc
movsb
insb
movsb
stc
clc
jno
mov
int
cmp
pop
fcompl
push
push
adc
mov
popf
aam
aam
inc
sub
dec
test
test
sub
mov
in
pop
movsl
jle
insb
or
or
or
rorl
fists
or
pushf
inc
mov
scas
ds
pop
cwtl
adc
mov
rorb
inc
push
aam
xor
dec
inc
dec
in
add
lret
sub
int3
sub
iret
std
pop
add
xor
cmp
sbb
and
jno
xor
divb
xor
cmp
cmp
in
loopne
mov
aaa
xchg
jne
jns
pop
lcall
add
hlt
insb
jne
or
pop
popf
sahf
xchg
adc
pop
sub
cmpsb
xchg
xlat
pop
xchg
aas
inc
cmpsb
mov
and
pushf
out
cmpsl
je
push
lcall
sub
pop
outsb
movsb
cli
push
dec
int
jno
mov
mov
jnp
data16
dec
out
into
and
xor
push
xchg
je
mov
lods
or
add
popf
pop
pop
inc
pop
hlt
cmp
stos
jo
loop
js
jmp
fwait
incb
xchg
outsb
push
js
and
fsubl
orl
jmp
cmp
and
mov
test
ficomps
clc
fistl
adc
pop
push
rclb
inc
or
gs
push
jle
mov
lret
and
or
in
enter
xlat
xor
fld
mov
jo
sti
mov
sbb
arpl
xchg
jns
xor
mov
out
inc
sbb
mov
rorl
leave
out
cld
daa
sbb
popa
out
mov
push
add
xor
jg
add
repnz
mov
jmp
cmc
inc
lods
shll
insl
jg
sub
scas
push
and
data16
fisttpll
test
add
ficomps
and
roll
pusha
ficompl
jl
scas
fsubs
pop
lods
jb
dec
cmovb
aad
adc
ret
cmp
mov
adc
xlat
pop
xchg
jmp
mov
cli
sti
cld
sbb
cmp
sub
rclb
and
xor
sahf
pop
cmp
xchg
ret
jp
mov
jb
inc
pushf
aad
jns
mov
xor
cmp
mov
pop
in
test
stc
mov
lret
lret
push
xchg
pop
jb
xlat
push
add
pushf
sub
int3
xchg
jb
push
test
das
or
test
fcmovbe
mov
cmp
mov
or
mov
fcomps
enter
incb
mov
stos
lea
xor
dec
lcall
inc
std
xor
xchg
dec
mov
fistps
xchg
cltd
push
arpl
inc
add
cld
pop
jno
jae
stos
pushf
ljmp
inc
insl
nop
adc
mov
test
mov
stc
int3
ja
adc
leave
divps
and
out
pop
dec
rcll
lahf
adc
cld
lret
add
call
xor
jge
not
bound
fisubrs
inc
inc
xor
das
jmp
xor
cmp
add
mov
sbb
fstps
sub
push
mov
and
inc
mov
shrb
dec
mov
mov
push
dec
mov
loope
test
mov
dec
lods
loope
xchg
fmuls
dec
mov
pop
clc
je
and
pop
bound
addr16
sbb
sahf
test
xchg
lods
cmp
cmp
shlb
mov
add
ds
fsubs
mov
mov
and
ss
xor
cltd
cmp
bound
push
fdivrp
xchg
out
int3
xchg
cmp
ficomps
push
lods
cs
jp
out
mov
clc
cmpsb
loope
xor
push
outsb
cltd
cmp
movsl
jmp
push
mov
cmpsb
in
enter
jecxz
jmp
mov
jmp
in
pop
stc
ljmp
js
fwait
shlb
fidivs
ficompl
sub
jae
xor
xchg
fisubrl
xor
pop
push
mov
loopne
cmp
add
mov
dec
je
daa
int
xchg
xchg
pop
adc
fidivrl
lret
rorb
dec
pop
cmp
rorb
push
and
jnp
data16
fwait
pop
lahf
inc
or
icebp
xor
imul
sahf
imul
mov
xchg
mov
jno
fcompl
fnstenv
insl
sahf
push
sub
in
add
push
clc
rolb
and
in
xchg
add
int
imul
jbe
pusha
adc
in
mov
mov
push
cli
out
loop
xchg
pop
jl
test
push
mov
cmpsl
rorb
mull
mov
in
dec
insl
push
cmp
mov
inc
sub
add
cmp
mov
dec
mov
cld
and
cli
and
sbb
sub
mov
mov
andb
movsb
es
test
scas
mov
adc
lds
fbld
ds
je
mov
cmpl
add
xchg
pop
ret
clc
push
shlb
add
or
out
or
addr16
cmp
xchg
in
ret
sar
and
out
dec
adc
sbbl
xor
icebp
rclb
pop
add
lret
ss
enter
clc
roll
or
inc
aas
aad
push
fdivs
int
lret
popf
repz
xchg
popa
imul
lock
push
jle
imul
out
xor
lds
dec
into
jns
pop
shl
lahf
xchg
cmc
ret
cli
mov
fsubrs
sub
ljmp
mulb
lea
loop
xchg
mov
cwtl
xchg
adc
mov
sahf
sbb
inc
pushf
aaa
sub
test
lods
das
dec
testb
and
scas
ljmp
popf
xor
pop
push
xchg
mov
subb
dec
adc
fnstcw
push
cmp
mov
mov
pop
jno
lods
mov
jno
or
lea
test
jp
add
inc
pop
loop
repz
dec
cs
iret
insl
in
imul
xor
dec
push
cmp
ret
sbb
fsubl
dec
fmul
fadds
fsubrl
cwtl
stos
push
add
out
sub
cmp
aad
cli
enter
push
inc
fadds
mov
test
adc
dec
cli
fnstsw
and
outsb
inc
and
sub
fmull
insb
push
ljmp
int3
in
push
popf
cmc
pop
leave
mov
dec
addl
fs
fwait
xlat
int3
xchg
fmul
icebp
pop
les
adc
sub
imul
aam
sar
inc
test
gs
or
enter
loope
call
xor
push
push
dec
push
dec
adc
xor
adc
ss
cmp
jmp
pop
cwtl
mov
sti
scas
repnz
and
rorl
jle
out
adc
xor
int
adc
addl
lret
loopne
cs
popa
pop
push
imul
out
fucom
jl
and
push
jecxz
aad
rcll
jmp
mov
inc
adcb
adc
inc
adc
xchg
fimull
sbb
sub
mov
bound
or
adc
test
data16
scas
outsb
fdivs
cmp
inc
fnstsw
fisubrl
xchg
xor
dec
push
lret
push
adc
nop
outsb
sub
add
out
cmc
xchg
popa
data16
jle
shl
filds
xchg
cltd
lds
adc
xchg
inc
aad
mov
shlb
xor
leave
imul
xchg
xchg
cmpl
lods
insl
add
jne
mov
lock
xchg
in
xchg
loope
lds
jp
add
addl
pushf
push
out
rcll
dec
shrb
stos
out
enter
divb
mov
gs
mov
call
int
sbb
xchg
or
scas
test
imul
or
cmc
or
xor
dec
pop
fists
ret
mov
or
popf
and
cmp
repnz
pop
pushf
adc
push
fwait
pop
sbb
xchg
xchg
cs
xchg
lods
scas
sbb
imull
int3
xchg
cmp
pushf
das
cmp
dec
je
int3
cld
pusha
imul
and
xor
lock
shll
xor
popa
push
xchg
lret
dec
inc
scas
shrb
out
pushf
mov
test
cmp
and
push
inc
mov
pop
dec
psubusw
call
xchg
in
pop
jo
xor
jl,pt
inc
das
hlt
cld
pop
inc
cmp
shlb
repz
mov
fs
cli
mov
or
inc
out
adc
popa
push
in
bound
jae
or
mov
lods
adcb
pop
jno
push
xor
ja
or
ret
addr16
sbb
shll
lods
or
push
mov
and
mov
in
jl
push
jle
xlat
push
icebp
push
push
mulb
cli
jge
fsubs
sub
mov
inc
inc
ja
adc
scas
pcmpgtb
stc
cmp
mov
int3
loopne
fidivrs
xor
jno
mov
xchg
sbb
push
lds
jae
xchg
cmp
mov
outsb
fdivrl
sub
push
fbld
stc
push
add
xor
xchg
sub
mov
jmp
and
jge
incl
and
push
xchg
dec
sbb
inc
mov
mov
iret
fwait
lahf
mov
pop
out
mov
decb
ljmp
mov
xchg
adc
lcall
jg
jl
dec
adc
dec
jo
orb
pop
inc
lret
jb
dec
or
ljmp
scas
aaa
test
mov
cmc
out
std
pop
in
sub
dec
xchg
insl
fsub
or
mov
pop
jp
jnp
push
jae
cmpl
jns
icebp
int3
jecxz
add
stc
pmulhuw
stos
cmp
cmpsb
int3
mov
maskmovq
imull
mov
movsl
jmp
stos
insb
push
add
jbe
sbb
call
mov
aam
jns
fildl
push
ret
xor
int3
es
mov
mov
iret
insl
or
and
and
and
adc
js
push
and
dec
dec
dec
jg
jle
cwtl
pop
int3
int3
add
je
hlt
sti
and
xor
inc
lahf
dec
inc
push
test
lods
enter
inc
ss
mov
pop
rcll
mov
mov
sub
ja
pop
add
and
mov
rcll
pop
fwait
sbb
dec
call
pop
mov
stos
add
lcall
fnstcw
mov
jbe
aas
cld
inc
rcr
aad
leave
fidivs
mov
sub
push
pop
jle
pop
xchg
xor
aad
push
scas
dec
xor
jmp
out
jg
adc
dec
push
xchg
mov
loopne
mov
popf
mov
ds
rcll
movsl
cwtl
add
stos
movsb
sarl
pusha
mov
pop
jp
dec
sahf
sub
iret
push
add
push
push
fstps
adc
jb
enter
add
jle
ret
cld
imul
aam
sub
and
mov
push
rol
fwait
cmpsl
push
push
lret
jo
lret
mov
or
inc
sub
neg
out
out
inc
mov
mov
cwtl
sub
cmp
jns
xchg
mov
shlb
or
inc
je
xor
and
loopne
sub
sub
fwait
mov
mov
pusha
test
test
daa
jecxz
lock
mov
mov
mov
lods
xchg
xor
mov
push
pushf
outsl
pop
sbb
mov
dec
pop
cli
dec
sub
in
mov
jge
ljmp
sub
into
fisttpl
enter
jl
xor
sub
or
xchg
imul
jl
xor
pop
lret
jmp
popl
mov
imul
jne
test
mov
mov
jmp
or
cld
mov
aad
ret
xor
cmp
push
repz
jle
shlb
aam
fstpt
clc
divl
ret
gs
mov
xchg
mov
mov
add
int
cmpsb
and
xor
pop
lea
and
arpl
mov
inc
inc
lods
in
cmp
push
adc
cli
dec
jae
push
testl
mov
fstps
insl
cmp
pushw
cmpsb
fisubl
xchg
insb
fcmove
fsubl
bound
mov
sbbl
ss
push
loope
sbb
or
sbb
push
sub
idivb
fwait
jno
rorb
xchg
inc
jge
sbb
adc
sarb
mov
xor
pop
mov
ret
clc
adc
mov
sub
rcrb
mov
dec
or
xor
cmp
ja
push
xchg
adc
aaa
mov
sar
cmpsb
fdivrs
loope
xlat
and
mov
ret
mov
mov
pop
mov
jmp
scas
sub
jo
out
outsl
cmp
imul
or
outsb
lea
je
inc
mov
aam
xor
pop
imul
mov
out
cmp
shlb
inc
sbb
das
das
lock
iret
test
mov
sub
inc
pop
sbb
sub
dec
and
fwait
sub
dec
mov
mov
out
fdivrl
and
test
mov
dec
nop
sub
inc
lret
xor
adc
sbb
sti
and
dec
lods
jecxz
add
push
adc
popa
ret
iret
add
inc
mov
int
pop
mov
stc
jle
dec
push
into
aam
dec
outsb
fsubrl
adc
shl
std
ss
subl
xchg
pop
cmpb
xchg
rcrl
ret
imul
hlt
push
ficoms
addb
sub
dec
push
inc
scas
xchg
xor
fcoms
xchg
mov
lret
sub
sbb
repz
sar
fistpl
cmp
daa
push
mov
popa
xor
popf
test
sahf
jecxz
xchg
ret
dec
fcomps
into
mov
sbb
insb
pop
lods
inc
xchg
sarl
or
cmp
rcll
ret
subb
cmc
sbb
sub
ficomps
and
ds
inc
adc
push
pop
inc
inc
mov
mov
mov
pop
mov
out
push
dec
arpl
pusha
fistpll
lock
jb
cmp
sub
add
fiadds
es
xor
fiadds
rorb
mov
push
je
loop
push
daa
test
adc
dec
mov
mov
insb
lahf
jmp
movsb
sti
jecxz
cwtl
mov
and
mov
int3
stc
and
pop
sub
daa
lock
cmp
xor
arpl
sbb
aam
mov
mov
adcl
mov
sbb
sub
jo
mov
jnp
gs
rclb
jge
loopne
addb
test
push
adc
fldcw
ret
adc
pop
out
jmp
aas
or
jge
inc
mov
add
jle
xchg
mov
push
loope
cmpsb
jb
sahf
push
pop
pop
cmp
inc
pusha
jle
out
std
adc
stc
ja
push
sahf
out
ror
orl
and
jle
adcb
cwtl
cmp
pop
loop
enter
xlat
dec
std
pop
lea
rep
je
lods
incl
fistl
sub
push
xchg
call
insb
inc
test
dec
jmp
sub
subl
into
xchg
call
cwtl
dec
mov
cs
xor
in
jl
into
dec
inc
jecxz
sub
mov
dec
ja
inc
sub
or
push
addr16
pop
lods
pop
outsb
inc
imul
popf
enter
rcrl
or
into
dec
push
jne
mov
cmp
in
lock
enter
insb
cmp
loop
mov
fisttpll
xor
cmpsl
andb
std
je
mov
imul
cwtl
fisttpl
xor
pop
pop
cwtl
imul
movb
xchg
jb
and
decl
mov
dec
jge
ja
jne
push
cmp
rclb
fs
adc
bound
xchg
jb
inc
insl
lcall
push
divb
or
mov
fidivl
push
and
insb
loopne
add
adc
push
rorb
and
mov
mov
scas
inc
mov
push
mov
adc
std
cmpsl
mulb
xor
push
insb
xchg
cmp
cld
out
xchg
cs
xchg
xchg
cs
stos
mov
push
loope
cmc
insl
rorb
test
pop
scas
cmpb
cmp
xchg
jg
ja
popa
test
fisubrl
mov
in
notl
cwtl
dec
shrl
mov
dec
rclb
push
inc
mov
aaa
enter
cmp
into
sbb
lock
cmp
shlb
dec
push
imul
lock
mov
xchg
shll
loope
inc
jge
mov
loope
enter
mov
add
in
mov
add
adc
xchg
ret
and
ret
insb
mov
ja
mov
xchg
pop
mov
sbb
test
mov
adc
cltd
es
xor
push
push
loopne
flds
inc
pop
jecxz
std
int
int
dec
out
cmc
loope
mov
jecxz
in
pusha
xchg
cmp
stos
lods
test
out
jmp
jbe
inc
subb
popa
inc
and
pop
pop
xor
or
xor
jns
scas
repnz
cwtl
inc
and
cmp
insl
push
movsl
lahf
xchg
sub
arpl
ret
ret
divb
mov
jge
jae
or
popf
shll
out
test
fmuls
pop
imul
mov
pushf
sbb
push
push
xor
jae
sub
dec
cmp
pusha
popa
and
sub
mov
dec
mov
inc
fsubp
jp
sbb
pop
jnp
fidivrl
xchg
xor
mov
adc
insb
mov
leave
add
pop
popa
cmpsl
cmpsb
mov
cmpsl
xchg
movsb
jl
mov
ljmp
cmp
cmp
fistl
les
ret
xlat
inc
mov
mov
out
into
pop
ret
xor
fwait
xor
outsl
repz
add
and
notl
jno
loopne
cmpsl
mov
loope
pmaddwd
fsubrs
cld
cmpsl
fnstsw
lahf
or
pop
out
outsb
jl
cltd
dec
stos
ljmp
mov
push
in
xor
adc
lret
and
pop
xchg
addr16
or
or
lods
or
mov
mov
ds
inc
loope
pop
push
out
adcl
incl
lea
cmp
xlat
inc
or
cs
push
inc
stc
mov
inc
add
pop
add
repnz
or
lcall
rorb
push
add
into
test
push
outsl
out
jmp
inc
es
imul
dec
lds
pop
jmp
and
sbb
mov
cmp
lock
test
mov
lea
xchg
mov
dec
fadds
out
aam
mov
push
adc
fs
pop
shll
and
dec
cmc
sub
push
shl
push
pop
cmp
add
cmp
cwtl
xchg
test
mov
xor
jae
data16
fildll
jmp
out
pop
rorb
adc
dec
inc
stc
mov
pop
jns
xchg
mov
mov
sbb
dec
push
sbb
and
cmp
subl
add
xchg
fisttps
fisttps
pop
imul
mov
mov
jae
testb
sti
cs
add
adc
add
dec
popf
imull
addr16
mov
sbb
shlb
cmpsb
mov
mov
shlb
add
cmp
pop
out
popf
xchg
add
push
dec
icebp
lret
in
int3
adc
cltd
xor
jmp
xor
aaa
rcrb
jb
pop
or
movsb
pop
subb
nop
pop
pop
or
jg
jb
rol
movsb
mov
sbb
nop
inc
sbb
outsb
ret
sahf
xchg
scas
insb
fisttpl
and
or
lret
scas
in
fists
push
daa
addr16
rolb
sbb
scas
flds
repnz
aad
mov
add
dec
sub
out
mov
push
jecxz
xor
dec
lds
rcll
imul
dec
xchg
out
adcb
out
nop
push
xchg
jo
lahf
pop
mov
hlt
xchg
jg
push
mov
cmpsl
and
outsb
mov
adc
mov
cwtl
adc
loop
mov
imul
int
adc
std
imul
repz
pop
das
push
xchg
insb
jns
and
jp
in
mov
cmp
lods
add
jg
orl
lods
xchg
xchg
push
mov
pop
rclb
and
add
pop
inc
dec
xchg
dec
xchg
idivb
pop
adc
push
loop
shrb
mov
aam
call
ja
cmp
mov
lret
push
push
and
push
iret
sbb
mov
add
repz
imul
pop
popf
ror
dec
add
ret
sub
mov
enter
mov
addr16
cwtl
ror
dec
stos
mov
lcall
mov
xor
cmp
xlat
xchg
lods
je
dec
hlt
and
mov
ss
push
pop
loop
rcr
sub
int
xor
jnp
xchg
sti
imul
inc
nop
daa
pushf
daa
push
jmp
push
roll
mov
and
xor
mov
shl
mov
adc
aam
roll
push
xchg
and
dec
xor
mov
cmpsb
adc
mov
mov
mov
inc
in
es
push
xchg
and
mov
std
xor
imul
loop
mov
inc
xchg
inc
aam
mov
into
pop
pop
xchg
pusha
arpl
loop
decl
and
shr
loopne
pushf
lret
cwtl
hlt
mov
jle
fwait
pop
aad
xor
imul
xchg
addr16
cmc
aas
movb
or
imul
cld
call
sub
outsl
enter
xchg
sbb
leave
lock
gs
xchg
cmpsl
inc
das
test
addr16
pop
mov
cltd
imul
dec
xchg
sub
sub
stc
pop
dec
mov
pop
shlb
pop
mov
xchg
stos
push
sub
mov
xlat
cld
cmc
and
xchg
xchg
cmp
aam
fildll
mov
cmp
ret
fisubs
jmp
scas
pop
jmp
imul
cltd
pop
ljmp
sbb
mov
dec
popa
test
dec
xor
fstpl
sub
add
scas
shrl
outsb
adc
xchg
jmp
dec
testl
xchg
out
and
pop
xchg
aam
ss
cmp
scas
push
xor
xchg
rclb
ret
test
pop
es
xchg
aaa
mov
lea
leave
cli
shll
xor
repz
or
add
je
jmp
add
fsub
dec
shrb
fwait
aas
testl
mov
lds
xchg
jl
ljmp
rep
fbld
mov
imul
jp
jmp
in
popf
jg
aaa
and
les
leave
push
dec
xor
add
addb
and
fsubrs
aad
push
stos
sbb
pop
push
mov
cld
clc
adc
jae
int3
cmp
mov
xor
add
mov
popa
stos
jmp
movsl
mov
jge
mov
negl
dec
ficompl
popa
in
loopne
jbe
jae
popa
xor
jg
xchg
jo
in
insl
mov
pop
js
ret
xlat
push
xlat
dec
bound
hlt
jno
sbb
add
mov
fs
loop
rsm
outsl
inc
inc
cli
les
sub
jmp
fistpl
repnz
popf
lock
pusha
push
pop
aas
lcall
jae
jbe
xor
mov
cmpsb
imul
loopne
lods
or
cld
dec
lods
push
mov
int3
push
call
rclb
incl
cmp
sahf
popf
inc
not
orl
test
std
aaa
inc
push
mov
jge
xchg
jne
pushw
outsb
adc
jle
sbb
xlat
and
outsl
xchg
divl
xchg
jg
jno
test
lret
stos
std
xchg
pop
lahf
icebp
dec
push
mov
testl
in
into
aas
imul
les
nop
add
js
notl
aas
xchg
mov
adc
sub
jo
ljmp
popf
pop
scas
test
xchg
dec
or
fwait
sbb
sub
daa
ja
popf
push
je
pop
inc
xlat
repz
push
imul
and
pop
xor
mov
pop
nop
fimull
sbb
outsb
inc
or
cmc
adc
das
lret
addb
aam
xchg
sti
icebp
imul
push
adc
xchg
std
andl
mov
lahf
add
pop
pop
fcomip
pop
or
and
sti
rcrb
mov
divb
and
jo
and
mov
ja
xchg
xchg
mov
movsb
push
xchg
mov
and
pushl
cmp
push
adc
movsb
hlt
pop
sbbb
mov
fbstp
mov
sub
jo
cmp
mov
add
mov
lea
or
sbb
cltd
mov
test
adc
lods
mov
es
or
pusha
jl
mov
cltd
push
stc
mov
inc
popf
std
pop
lods
fldl
sub
adc
dec
stc
jo
jb
movsl
insl
xor
fldenv
leave
push
les
pop
mov
into
dec
fnsave
cmc
pop
adc
scas
jo
rclb
in
sbbl
mov
mov
lret
in
adc
sbb
or
adc
mov
int
jbe
call
sbb
cmp
mov
inc
jmp
sahf
enter
sbb
mov
push
and
push
cmp
out
inc
shl
int
arpl
lret
adc
or
loopne
and
aam
mov
sbb
fisubrs
dec
call
stc
fcmovnb
mov
cmpsb
pop
into
xchg
cmp
clc
mov
mov
lods
and
dec
cmp
movsb
mov
adc
push
jecxz
std
fsubrs
mov
popf
mov
fnsave
and
int
and
pop
mov
call
hlt
out
mov
ja
and
addr16
xchg
jle
aam
data16
call
movsl
jmp
fs
lods
mov
int
lret
int3
pop
rolb
add
cmc
pushf
xchg
ja
dec
icebp
sti
xchg
movsl
nop
jg
add
sbb
sbb
add
fimuls
or
shlb
jecxz
ja
pop
fucom
cli
jg
adc
or
cmpl
jns
fidivs
iret
push
and
fnsave
and
xchg
xchg
aas
sbb
jae
lret
xor
xor
cmp
call
sbb
fsubl
mov
push
ret
movsl
inc
repz
repz
jo
xchg
push
cmp
mov
dec
insl
inc
test
jp
jge
out
pusha
mov
cmpsb
pop
les
popf
mov
mov
dec
push
xchg
push
add
roll
cmpl
into
pusha
mov
aaa
xchg
add
jno
pusha
ret
dec
int3
loop
gs
aaa
iret
pop
int3
push
shlb
lret
dec
sahf
xchg
cmpb
lret
fistpl
inc
fprem
into
repz
push
push
or
aam
pop
into
cmpsl
orl
inc
and
stos
movsb
sbb
add
jo
jmp
in
fstpl
mov
dec
cmp
lock
or
fwait
and
idiv
mov
outsb
mov
ss
rcll
js
fstpl
xchg
sahf
daa
sub
nop
nop
fimull
gs
adc
in
ds
daa
fisubrl
push
inc
jmp
iret
fwait
lahf
cmpsb
jno
fwait
xor
cmc
mov
scas
mov
lock
push
inc
and
sbb
fs
add
push
leave
sbb
and
mov
adc
daa
xor
je
mov
push
mov
pop
xchg
iret
xchg
mov
out
rcl
inc
repz
cli
bound
loopne
fmulp
and
fstpt
incb
pop
and
addr16
ret
insb
and
jbe
jecxz
push
jmp
lret
mov
ret
inc
scas
ljmp
dec
xor
sarb
enter
testl
inc
jbe
push
cmpsl
mov
fidivrl
shll
jnp
ja
inc
clc
movsb
pandn
adc
les
xor
push
xchg
inc
sbb
insb
jle
cli
pop
pushf
int3
ss
into
dec
ret
gs
pop
fnstcw
testl
rcll
mov
nop
xor
push
js
jle
test
inc
mov
sub
xchg
insb
ret
or
or
loopne
pop
outsl
sbb
shlb
push
js
stos
inc
jbe
leave
into
out
jnp
inc
sub
push
cld
out
dec
adc
cwtl
adc
out
sbb
sbb
push
fnsave
mov
fidivrl
xor
ret
jp
inc
cmpsl
fcompl
loop
mov
push
inc
call
movsl
mov
xor
movb
sub
bound
imul
mov
push
xor
sub
mov
rcrl
testb
jg
xlat
les
subl
loop
inc
xchg
std
inc
test
add
pushf
cwtl
addb
xor
outsb
add
sbb
pop
pop
shrl
xchg
lret
pop
mov
in
popa
fwait
scas
hlt
pop
sub
mov
mov
data16
push
jne
and
jp
sub
jecxz
xchg
pop
xchg
push
cs
lods
adc
jecxz
cwtl
mov
sbb
sbb
pop
jne
fcmove
adc
jo
mov
test
ret
push
stos
mov
sar
sub
les
scas
faddp
mov
dec
xchg
ss
loope
daa
jg
imul
ficompl
sbb
push
pop
leave
inc
ret
lods
aas
sbb
mov
mov
xchg
mov
movsl
js
mov
jmp
mov
or
popf
and
mov
jmp
mov
cmc
and
decl
xchg
mov
sub
sti
movsb
adc
or
jge
xchg
daa
inc
jo
jns
pop
stc
jno
sub
mov
sbb
sbbb
xor
pop
adc
lods
repnz
dec
sti
jns
leave
pop
jbe
jne
mov
dec
sub
push
push
and
dec
jle
mov
enter
inc
movsb
add
int
inc
inc
lods
mov
out
push
xorl
outsb
in
jg
add
out
popa
sbb
mov
add
add
pop
adcl
jecxz
dec
cmp
jo
nop
lahf
repnz
sbb
push
aad
out
and
dec
sub
sahf
ds
inc
mov
ds
push
xchg
push
xor
repnz
and
ja
lods
mov
sbb
leave
xchg
inc
dec
ja
pop
fisttpl
ficoml
ret
mov
in
dec
mov
in
nop
aam
jecxz
pusha
out
std
add
pop
jle
sti
mov
xor
mov
loope
ljmp
xlat
mov
dec
push
rcl
repnz
adcl
mov
mov
loopne
sub
or
mov
call
loop
int3
xorl
fistps
xor
push
sar
push
adc
jbe
stc
or
fldt
sub
push
pop
push
sub
mov
movsb
jp
mov
mov
ja
push
rcr
testb
call
adc
loope
mov
test
scas
lret
xchg
cmp
sub
xchg
cltd
lret
xor
inc
ret
nop
xor
sbb
mov
inc
mov
fidivrl
movsb
adc
outsl
in
cmove
mov
sbb
mov
jns
or
mov
sub
pop
data16
add
xchg
out
sub
inc
xchg
xor
cmp
and
lds
and
pop
push
cltd
dec
pop
lea
lret
pop
cltd
push
cmp
lret
into
in
int
stos
xorb
add
or
hlt
jge
out
shrb
movsb
das
push
cmp
nop
dec
sub
xor
addl
pop
stc
cli
mov
push
mov
insb
pop
cmpsb
leave
out
push
mov
test
loop
jns
mov
lods
pop
fldl
add
push
adc
jge
adc
subb
repz
adc
jmp
jmp
mov
or
dec
add
add
fwait
sub
scas
cmp
outsl
or
push
testb
mov
dec
test
jbe
or
jg
jns
mov
sahf
lret
rolb
push
daa
aas
fisubl
xchg
cltd
iret
lahf
inc
adc
scas
jg
imul
mov
and
cmp
movsl
sub
xchg
cmp
mov
jns
pop
clc
je
cmpsb
in
fistl
cwtl
and
ja
mov
push
cld
mov
loopne
aaa
jp
andb
hlt
add
push
mov
mov
mov
jmp
out
sub
xor
and
cmp
pop
pop
dec
cmp
push
jae
dec
pop
inc
ss
sub
adc
pop
inc
inc
mov
popf
pop
out
add
adc
shl
add
int
sub
js
sub
push
decb
mul
pop
or
xor
jp
mov
dec
fstps
xchg
loop
pop
outsb
out
fisubrs
and
fsubr
sahf
sahf
hlt
push
fidivs
in
adc
lods
shr
sub
rorb
xchg
xor
incb
pop
xor
aas
or
sbb
or
insb
mov
mov
sub
jecxz
shlb
enter
xor
mov
movsb
jbe
push
sub
movsb
mov
dec
and
into
inc
jae
repnz
mov
sahf
lret
push
mov
stos
into
pop
and
cmpsl
pop
push
outsl
lahf
jge
inc
fsubrp
xchg
ja,pn
pusha
es
sbb
stc
pop
sbb
add
dec
xor
adc
lods
lods
xor
fistl
or
js
sbb
and
js
ljmp
in
cmp
ds
mov
sub
popl
out
mov
inc
pop
sbb
xchg
enter
and
divb
mov
aas
sahf
inc
mov
mov
jno
mov
add
rorl
fucomp
es
stos
add
out
aam
mov
and
inc
int
or
mov
sbb
inc
cs
sbb
push
ss
pop
icebp
andb
jbe
and
push
jp
xor
or
mov
ss
sahf
add
jns
xchg
xlat
pop
cmc
pop
add
pop
sub
addr16
stos
stos
jecxz
inc
test
add
repnz
movsl
mov
cmpb
stos
cmp
sub
aad
std
and
test
lret
jp
cvtpi2ps
les
add
pushf
push
pop
ficompl
push
sub
adc
adc
mov
xor
frstor
jg
sbb
push
mov
cmp
pop
lret
mov
mov
xchg
mov
cmp
push
int3
dec
imul
cmp
ficoml
ret
xor
outsb
pop
stos
je
sub
adcb
inc
cmp
mov
shrb
push
mov
mov
pop
add
lcall
cmp
es
in
pop
lcall
cmpsl
cltd
mov
mov
shl
jl
mov
hlt
ss
std
inc
adcl
mov
lds
decl
test
ja
aam
in
pop
daa
cwtl
outsl
or
popl
fidivrs
out
rorb
xor
xor
les
movsl
bnd
and
sahf
rclb
cmpb
add
insl
insb
stos
pop
xchg
add
mov
dec
xor
dec
mov
xchg
pop
jmp
movsb
fdivs
cld
repz
push
into
fwait
mov
call
nop
push
fistpl
inc
xor
pop
dec
mov
push
outsl
es
xor
pop
and
mov
adc
test
test
sub
in
jo
mov
movsb
les
push
ret
sbb
push
jge
or
out
icebp
mov
fimull
cli
icebp
sahf
pop
dec
dec
xchg
xchg
xor
push
dec
enter
jb
gs
lock
jmp
fists
ret
fcoml
sub
scas
ret
pop
sbbb
adc
or
cwtl
ret
aaa
inc
push
sarl
in
dec
fcomps
fisubrl
shlb
adc
jb
pop
add
iret
inc
inc
insl
jbe
in
jp
cld
aam
cwtl
fsubrs
fmuls
jno
jmp
clc
mov
cmpb
fidivrl
push
sub
insb
scas
dec
jl
xchg
sub
insb
sub
push
push
dec
and
add
push
enter
adc
jecxz
btsl
cmp
out
cmp
sub
filds
cmp
push
sbb
int
pop
ljmp
sub
hlt
mov
into
xor
mov
aaa
imul
pop
inc
mov
fs
or
sub
js
add
pusha
sub
jae
dec
jle
adc
fcompl
clc
pop
xor
into
inc
enter
and
push
sarb
cmc
cmp
push
jno
sub
fdivrs
les
pop
jns
or
sbb
jmp
fs
and
jp
xlat
pop
pushf
sbb
sub
movsb
adcb
fisubrl
push
std
mov
test
lods
dec
pop
pop
test
push
add
sahf
cmp
mov
daa
push
dec
and
or
clc
dec
sub
cmp
and
in
pop
mov
loopne
into
jbe
cmp
rclb
pop
or
sbb
rorb
sbb
loopne
jno
mov
cmp
mov
mov
jp
mov
icebp
jb
adcl
hlt
mov
xor
and
cmp
test
loop
pop
cmc
inc
xchg
adc
pusha
cmc
jae
cmp
insl
in
fsubs
xor
repz
ja
mov
icebp
lock
test
or
pop
sbb
jp
cltd
xchg
data16
add
sbb
addr16
stos
pop
pop
mov
push
xor
mov
rorl
ss
in
jns
xlat
pop
fcompl
test
or
sbb
xor
mov
nop
leave
cld
cld
xor
jne
adc
adc
loop
enter
popa
sbb
loope
xlat
cmp
mov
scas
into
push
shll
xor
je
leave
scas
mov
mov
ror
dec
sub
add
push
xchg
jo
mov
mov
xor
rorb
sahf
aas
adc
jge
int
push
fstps
mov
sub
loope
cmpb
shrb
cmp
les
and
mov
push
or
scas
stos
in
scas
add
lods
jmp
inc
daa
andl
mov
dec
lock
push
bnd
dec
push
pop
mov
popl
int
xchg
push
and
mov
cmp
sahf
leave
es
imul
test
addb
dec
or
stos
jle
addl
movsl
movsl
push
test
pop
aaa
sbb
hlt
pop
int
shld
xchg
addr16
dec
adc
mov
stos
bound
jge
loopne
test
adc
jns
cmp
add
jmp
fldl
mov
or
scas
push
out
jns
jp
adc
or
fistps
out
ret
and
fimull
adc
test
mov
lods
jg
shll
push
sbb
inc
repz
mov
pop
push
and
mov
mov
hlt
adc
push
std
or
inc
mov
jbe
insl
pop
add
xchg
pop
dec
aam
fidivrl
out
xchg
jl
mov
imul
xchg
push
lods
xchg
cmp
gs
xor
insl
pop
sbb
data16
push
icebp
lcall
push
pop
aas
xchg
jecxz
xchg
out
fisubrs
push
push
add
push
mov
lcall
cltd
adc
call
aas
xor
adc
inc
cmc
insb
mov
scas
or
lret
xchg
and
ret
xchg
cmc
ret
add
pop
dec
imul
xchg
imul
ret
aas
inc
arpl
or
cmc
outsl
jle
loope
inc
or
fists
fistpll
mov
add
leave
stos
test
movb
dec
lods
cmp
daa
xor
stos
addr16
xchg
jo
and
and
fidivrs
addr16
fiadds
mov
and
pop
dec
xchg
loope
push
pushf
xchg
cwtl
jg
adc
cld
add
and
dec
ss
jg
mov
adc
fcoml
and
add
jne
inc
pop
sarb
mov
mov
mov
mov
fistl
sahf
aam
insl
mov
pushl
mov
cld
or
lods
aas
xchg
mov
push
pop
iret
subl
push
sbb
pop
and
mov
push
rcl
mov
insb
shll
adc
lock
push
jo
mov
dec
mov
in
mov
scas
push
sti
ret
aam
pop
add
mov
fcmovu
adc
pop
into
mov
es
clc
mov
jae
notl
scas
mov
ret
cmpb
jno
addr16
push
mov
jp
add
ret
adc
cmp
pop
out
ret
inc
out
or
mov
out
les
mov
add
adc
stos
xorb
insb
sbb
and
dec
xchg
mov
insl
je
mov
adc
aas
push
hlt
jne
dec
addb
push
pop
lods
outsb
std
push
divl
cmpsb
jg
pop
aam
xor
ds
sbb
adcl
pop
aas
into
pop
idivb
aam
add
mov
test
add
jbe
callw
cmp
lret
or
sahf
jle
sbb
es
or
mov
lods
insb
roll
sbb
sti
or
arpl
sbbl
scas
stos
scas
xor
cwtl
clc
movb
inc
lcall
push
pop
mov
pop
or
pop
and
das
leave
inc
popf
dec
daa
add
or
xabort
mov
aad
inc
jae
ja
jnp
stos
sbb
icebp
imul
adc
notb
sub
pop
shl
pop
push
arpl
xchg
dec
loope
int
push
inc
cmp
inc
sti
or
insl
lods
les
mov
or
mov
push
popf
dec
loop
fs
test
movsl
jl
stos
fsubs
dec
inc
cli
repz
repz
xchg
dec
jmp
xchg
push
sbb
lahf
hlt
fistl
xor
sbb
sbb
mov
sub
push
aad
adc
lahf
pop
jo
movsb
aaa
sbb
or
arpl
add
push
pop
neg
dec
popa
adc
popa
mov
int3
cmpb
dec
mov
mov
dec
xor
xchg
push
push
das
cwtl
add
sub
sub
fiaddl
aad
jne
mov
sub
lock
jl
xor
jo
adc
data16
fcoml
lret
repz
movsl
push
testl
jp
pop
xchg
repz
in
int
pop
inc
xchg
pusha
es
xchg
pop
gs
xchg
mov
or
ljmp
inc
mov
mov
mov
mov
pop
and
in
and
mov
imul
push
mov
or
leave
or
sub
outsb
lret
xchg
add
pop
dec
inc
or
xor
data16
inc
inc
negb
mov
loopne
iret
test
test
xchg
push
xor
xchg
stos
leave
xor
scas
mov
inc
repz
fistpl
mov
cli
ja
mov
dec
loopne
xchg
pushf
mov
inc
mov
popa
and
and
ss
jmp
clc
out
push
pop
pushf
mov
inc
loope
mov
pop
sbb
int3
ret
stos
adc
push
repz
cvtps2pd
js
subl
add
outsl
mov
out
data16
push
shrl
mov
mov
les
xchg
adc
sahf
test
data16
dec
jmp
pop
dec
aad
fildll
adc
add
fnsave
sub
and
mov
testl
stc
pushf
inc
dec
leave
push
adc
fildll
negb
mul
or
lret
bound
sub
xchg
xor
lock
add
fadds
es
ficompl
cmpsb
fists
dec
fisubrs
rorl
fisubs
test
hlt
out
in
test
pop
lret
imul
mov
mov
iret
insb
andl
push
sbb
mov
rorb
mov
jecxz
cli
test
sub
lret
lods
imul
test
mov
sbb
sbbl
shl
rclb
cld
xor
and
pop
jg
jne
shll
lea
repnz
scas
inc
and
sub
inc
int3
pusha
jne
inc
pushf
sbb
push
or
stc
movsl
addr16
xchg
outsb
lods
adc
gs
out
lcall
inc
or
pushf
xchg
inc
mov
mov
ret
ss
mov
test
and
xor
adc
loopne
mov
push
ja
int
and
insl
addb
add
test
xchg
add
xchg
fiaddl
les
pop
push
jmp
inc
repz
inc
jns
fisttps
fstpt
and
addr16
adc
cmpsb
out
jecxz
cmp
and
and
inc
repnz
out
aas
roll
xchg
jecxz
lock
shlb
cmpsl
mov
js
or
outsl
mov
aas
adc
inc
xchg
cmp
add
out
push
stos
repnz
aaa
cmp
xor
aas
scas
hlt
mov
mov
lret
add
mov
lret
sbb
daa
adc
xchg
repz
call
sbb
clc
xchg
push
dec
mov
pop
andl
mov
add
repz
mov
scas
loope
outsb
or
ljmp
fs
lods
mov
lcall
leave
pusha
cltd
mov
mov
inc
dec
jle
mov
xchg
mov
fcompl
dec
movsb
insl
mov
or
xchg
inc
jecxz
lahf
push
sti
int3
cmp
xor
xor
add
xchg
das
test
loopne
and
or
std
cmpsl
xchg
outsb
lock
psubsb
jno
stos
inc
scas
sbb
cmp
sub
sub
neg
push
sub
xor
lahf
mov
gs
pop
stos
gs
xlat
cmp
das
cmp
xchg
push
push
pop
dec
in
bound
rcrl
jns
jle
pop
xchg
jecxz
jl
sub
out
add
pop
jae
imul
xchg
bound
in
and
fiaddl
and
or
mov
cmpsb
movl
mov
push
mov
lahf
dec
fists
jne
sahf
push
out
es
mov
dec
sbb
int3
adc
inc
lods
xlat
dec
add
jno
mov
lahf
dec
daa
in
pop
fdivrp
or
scas
xor
sbb
push
cli
xchg
ja
xchg
or
neg
sbb
push
lahf
bound
cs
sub
lret
mov
enter
stos
loope
cmpsl
clc
addb
filds
push
jmp
dec
xchg
leave
inc
inc
jnp
clc
push
cmp
lea
pop
cmp
push
das
jae
lods
dec
ja
fmuls
rcrw
testl
adcl
nop
sti
xchg
nop
nop
pop
inc
lret
sbb
stos
add
push
xor
jmp
sbb
lock
add
sbb
les
fnstsw
cltd
iret
pop
sti
testb
sub
sahf
jne
mov
imul
les
outsb
cmp
jecxz
mov
jmp
jns
inc
setne
or
insb
call
and
mov
loope
mov
aad
dec
mov
add
sub
adc
inc
adc
movsl
jnp
imulb
cs
pushf
cmp
adc
ficomps
mov
stos
rorl
inc
pop
sbb
or
adc
adc
jo
sar
xor
dec
stos
mov
cmpsb
xlat
inc
inc
movsl
lds
out
push
je
adc
inc
stos
sbb
test
inc
jp
daa
clc
sbb
push
xchg
sbb
mov
aam
test
mov
lods
lods
stos
pop
test
scas
dec
sub
mov
add
ja
mov
push
icebp
inc
repz
push
mov
rclb
nop
push
shrb
shr
sbb
in
dec
fmul
and
add
add
add
sbb
dec
cli
xchg
jns
fisttpl
int
sbb
adc
incb
dec
cmp
dec
or
ljmp
outsl
push
sarb
or
mov
out
push
mov
mov
pop
or
dec
adc
and
in
push
hlt
push
pop
xor
outsb
mov
lahf
jnp
push
mov
js
mov
scas
test
or
pop
popf
cmp
sahf
xchg
imul
jl
or
ljmp
xor
insb
int
push
pop
mov
add
xchg
inc
mov
cltd
mov
loope
stos
mov
negl
dec
pushf
fld
cmp
sbb
pop
enter
mov
xchg
xor
or
adc
pushf
push
adc
roll
inc
mov
andl
add
sbb
and
lods
rcrb
xor
push
das
jg
and
subl
and
mov
jge
sub
sub
imul
shlb
xor
adc
pusha
aaa
and
aam
out
jnp
and
insl
mov
pop
mov
aad
adc
mov
cmovno
cmc
lret
daa
mov
bnd
mov
add
insl
jecxz
cmp
psadbw
fwait
dec
in
icebp
xchg
fxtract
xchg
bound
shlb
pusha
pop
jg
filds
or
mov
sti
jmp
dec
xor
das
cmp
test
adc
and
fsubr
insl
sub
aaa
mov
or
jg
and
clc
xor
push
jp
xchg
cmp
addr16
cmp
fnstcw
inc
jmp
out
lods
jno
inc
lret
inc
popf
dec
in
pop
nop
push
mov
cmp
ja
pop
mov
out
stos
pop
xor
out
mov
shlb
pause
fstpt
push
loopne
loop
xor
ret
repnz
dec
push
xchg
lahf
sarb
mov
jp
and
flds
cmpsb
push
subl
xchg
icebp
in
dec
push
jo
jns
jo
adc
mov
in
lahf
pop
test
pop
mov
insb
ss
imulb
jne
sub
not
or
bound
sahf
rcrb
hlt
jae
clc
dec
sub
aas
mov
mov
pop
jns
mov
sub
ud2
cmp
lea
je
xchg
push
dec
and
xor
fs
and
sahf
jno
mov
cmpsb
scas
pusha
dec
inc
jb
sbb
shrb
xchg
fldenv
jp
or
xchg
adcl
sahf
xor
pop
mov
pop
dec
es
and
jne
leave
or
ret
and
leave
jmp
sbb
inc
insl
mov
shlb
outsl
repz
filds
cmp
mov
dec
insl
aas
lock
test
and
cmp
scas
ret
out
adc
or
mov
jae
xor
mov
insl
mov
push
ret
cwtl
stc
mov
mov
pop
xchg
loope
mov
or
fucom
dec
mov
stos
sbb
ss
ja
mov
pop
inc
dec
dec
xor
add
mov
xor
pushf
push
dec
cmpsl
and
mov
xchg
fst
aas
dec
clc
and
ficoms
mov
add
xor
mov
push
push
push
mov
lret
insl
sub
inc
xor
mov
dec
cs
mov
adc
add
jmp
pushf
inc
pop
pop
addr16
adc
clc
mov
push
xor
xchg
jp
xchg
jns
shll
pop
mov
jmp
adcb
and
inc
test
in
jb
fnstenv
ljmp
inc
les
xchg
push
add
sbb
bound
xor
fstps
data16
lods
cmp
rcrb
mov
repnz
mov
sub
add
lahf
mov
push
mov
mov
push
inc
jb
sbb
testl
and
es
inc
addr16
jecxz
es
std
mov
ret
cmp
and
les
cmp
pusha
adc
loop
cmpsl
pop
or
pushf
push
or
xor
fs
inc
and
shrl
cmp
mov
dec
mov
shll
arpl
mov
call
int3
mov
ret
xor
repnz
dec
mov
push
sbb
push
testb
pop
scas
xor
popa
and
mov
test
dec
lcall
scas
pusha
mov
mov
jb
sbb
xchg
stc
jnp
push
sbbb
stc
imul
sbb
xchg
ss
jnp
shl
dec
in
add
shlb
int3
mov
mov
imulb
cmc
lea
sbb
push
ror
setbe
xchg
orb
faddl
push
inc
jp
xchg
or
fwait
adc
imul
int
push
xor
std
imul
push
leave
adc
outsb
cmp
xor
jle
test
data16
das
sub
std
xchg
jle
push
push
push
cmp
jecxz
push
cmp
or
add
cwtl
add
into
fisubrs
push
xchg
xchg
insb
mov
int3
iret
or
cltd
jnp
push
pop
push
ljmp
ret
aad
fisubrs
mov
outsl
mov
mov
dec
mov
jns
jge
push
or
addps
fldcw
inc
negl
sub
sub
jp
or
jecxz
mov
cmp
jo
lahf
lret
sarl
enter
je
sub
fistpl
add
and
push
fmuls
jb
mov
mov
pop
adc
xchg
add
sti
adc
jno
sub
movsb
test
xchg
add
cmpsb
dec
out
xor
mov
mov
test
cmp
dec
or
inc
in
ja
icebp
and
loope
shrl
test
jmp
jae
cmp
mov
je
sbb
roll
jns
in
adc
outsl
cmp
push
push
out
ja
test
cmp
mov
inc
pop
in
mov
jae
scas
movsb
add
mov
pop
loop,pn
lahf
in
push
js
icebp
mov
or
jecxz
mov
das
sbb
fldcw
js
and
fs
push
movsb
sbb
xchg
adc
pushf
sbb
or
xchg
adc
fisubrl
cmc
mov
mov
ret
cmp
jmp
shll
fdiv
hlt
bound
bswap
stc
int3
rclb
cmp
push
mov
cltd
cmp
mov
rorb
pop
ds
mov
push
scas
pop
rcll
cmp
rcl
into
jns
data16
mov
aaa
iret
dec
sbb
jmp
je
mov
scas
in
or
pop
inc
test
loopne
sbb
jbe
xchg
and
inc
pop
in
or
frstor
in
add
arpl
add
inc
pusha
push
xchg
mov
cmp
mov
jo
inc
loopne
sub
lcall
lea
data16
gs
mov
push
mov
adc
or
sbb
pop
lods
imul
out
frstor
in
or
xor
mov
insb
push
fsubl
push
jmp
mov
or
xlat
scas
pushf
mov
mov
mov
add
xchg
or
xchg
movsb
sbb
mov
lret
inc
mov
in
pop
push
mov
shll
mov
jae
cmp
in
jo
mov
loop
xlat
daa
dec
lea
jmp
push
sbb
or
sbb
aad
aam
add
data16
inc
cmc
mov
mov
cld
push
mov
and
test
sub
mov
mov
pop
sahf
rcrl
inc
ss
mov
mov
cwtl
rorb
ss
hlt
sub
cwtl
mov
mov
add
dec
pop
adc
daa
sbbb
outsb
inc
dec
xchg
popa
add
sbb
push
test
sbb
xor
xchg
inc
sub
cmp
adc
mulb
sub
dec
cmp
sti
dec
movsb
gs
aas
cmp
xor
cmp
ret
ret
lods
outsl
xchg
test
sub
out
jge
mov
sbb
cmpsl
lock
imull
add
inc
mov
xor
dec
sbb
shlb
dec
bound
pushf
lock
dec
je
leave
cld
mov
pop
cmp
mov
inc
inc
sub
daa
or
jae
mov
arpl
jbe
cld
jmp
and
sarb
fbstp
push
jmp
lods
or
movsb
and
xor
pop
lcall
cmpsl
sub
xchg
add
in
mov
push
mov
lahf
ret
outsl
jo
lcall
pcmpeqb
jns
or
mov
icebp
cmc
sarl
xlat
and
fcoml
lods
in
repz
inc
mov
cwtl
jecxz
cmp
into
inc
xor
sub
or
add
push
pop
jno
notb
xchg
mov
movsb
ss
pop
push
adc
cmp
mov
shl
or
push
pusha
pusha
outsl
lret
test
lahf
aad
xchg
fisubrs
addb
aam
pop
imul
loope
push
fwait
adc
push
lret
adc
jae
in
jge
cmp
bound
loopne
push
jg
lret
popa
les
push
and
mov
or
cmp
mov
fcoml
jo
sbb
into
push
xlat
and
sbb
daa
add
adc
in
jno
outsl
sbb
aas
sti
aad
in
arpl
mov
jbe
scas
lds
mov
inc
rclb
push
hlt
lret
xchg
or
add
dec
sub
mov
mov
dec
dec
loopne
sub
jno
push
in
imul
sub
roll
mov
and
leave
divl
sub
testl
outsl
xchg
cmp
popf
icebp
xor
mov
mov
fidivrs
push
jp
push
dec
dec
arpl
or
push
mov
in
or
push
subl
outsb
jns
lcall
push
sar
pop
inc
inc
pop
scas
andb
add
mov
xor
lds
or
lahf
out
inc
cmp
das
xor
js
shlb
fdivrl
jmp
ror
xchg
cmpsl
lods
mov
mov
and
in
lret
mov
sbb
xlat
ja
call
add
mov
inc
movsl
xlat
mov
pop
xchg
icebp
mov
das
mov
adc
fistpl
cmpsb
outsl
adc
cli
jns
inc
cmp
in
test
cmp
jp
fst
repnz
mov
jp
dec
loop
rclb
insl
das
loope
sub
dec
mov
test
dec
mov
orl
sub
sub
sbb
repz
dec
jns
pop
jg
adc
mov
insb
sub
iret
cmpsb
cs
and
pop
jmp
xchg
ror
push
lret
add
cmp
int
sub
popf
stc
add
cld
adc
stc
popa
mov
push
imul
xor
pusha
and
cmc
push
mov
into
pop
addr16
cmp
std
mov
fmull
rol
inc
jne
fadds
xchg
and
cmp
sahf
inc
mov
stos
hlt
jmp
punpckldq
lods
popa
pop
dec
mov
cmp
dec
decl
cltd
fists
movsl
aas
pop
shlb
pop
das
lret
cwtl
mov
pop
repz
dec
sti
xor
mov
popf
dec
fsub
cmp
in
push
jp
lcall
sarl
out
aaa
xchg
lods
repz
sub
out
in
into
inc
and
ret
jne
scas
mov
int
inc
fwait
sbb
push
jl
int
adc
out
lret
lods
mov
jecxz
test
enter
and
sbb
pop
push
incb
xor
or
mov
addb
test
cmpsl
jg
pop
test
xchg
xchg
push
mov
add
pop
add
aaa
test
add
pushf
sti
dec
lods
xchg
cmpsb
add
push
lea
ja
push
or
pop
incl
add
int
push
ja
cmpsb
cmc
xchg
pop
out
mov
sbb
pop
xchg
ja
inc
cli
subb
inc
mov
adc
xor
jnp
or
or
fistpl
cmp
pop
std
test
out
out
dec
lock
add
or
cmp
add
xchg
or
repz
popf
xor
and
and
jle
push
or
cmp
fsubl
pop
xchg
movsl
mov
mov
adc
xchg
scas
xchg
in
mov
test
push
in
lods
jl
pop
xlat
push
mov
movsb
inc
popf
mov
pop
adc
add
arpl
mov
sahf
sub
cmpsb
xor
out
add
jbe
imul
jecxz
xchg
pop
inc
xor
mov
jnp
imul
sub
inc
pushf
lds
int
ret
cli
jo
sub
imul
or
out
jmp
mov
push
xor
add
and
push
mov
imul
and
adc
dec
bound
push
adc
adc
mov
ss
inc
out
scas
cmp
adc
add
inc
jge
mov
mov
xchg
repnz
pop
xchg
add
push
aad
fsts
das
lea
sbb
mov
adc
ljmp
test
or
xchg
or
push
cmp
push
lock
add
push
in
push
cmpsl
or
add
stos
out
out
push
loope
arpl
cmp
jle
call
push
clc
jl
repnz
or
ja
fsubrl
sub
in
fst
and
push
jae
dec
pop
jle
or
fsubrl
and
cmp
xchg
jge
adc
xchg
mov
fildll
pop
inc
sbb
add
das
dec
clc
stos
dec
pop
adc
out
shrb
lret
jns
scas
inc
js
aaa
gs
mov
fdivrs
out
in
pop
enter
pop
test
inc
mov
mov
jbe
in
mov
mov
movsl
hlt
xchg
push
and
std
sbb
push
jp
xor
adc
xor
sbb
call
inc
lock
imul
xor
repz
inc
xlat
aaa
cwtl
dec
sub
insb
outsl
jmp
push
outsb
sbb
xchg
data16
pop
mov
jl
sahf
mov
xchg
mov
out
pop
jns
add
out
inc
add
jae
aad
sbb
test
ror
pop
aas
adc
xlat
adc
rorl
adc
das
jae
arpl
pop
popa
pushf
cmp
out
int3
int
xchg
js
dec
andb
popf
sahf
in
leave
or
jmp
popl
pop
jae
pop
add
cmpsb
mov
popf
sub
incl
mov
xchg
dec
and
mov
lahf
mov
push
pop
sub
cmp
xor
push
pslld
dec
leave
repz
mov
cmc
jmp
pop
outsb
jge
sbb
cmp
sub
out
into
and
aaa
or
xor
add
inc
inc
and
dec
gs
dec
addr16
sbb
pop
inc
out
jnp
lods
mov
mov
cmp
cmp
fsubs
mov
movsl
sets
or
cs
bound
jno
fbld
mov
jle
daa
enter
mov
jge
jl
sub
ljmp
mov
dec
mov
jns
mov
lods
and
push
jbe
fisttpl
push
inc
lret
mov
xchg
test
sub
and
or
mov
cmpsl
sbb
out
loope
sub
pop
mov
pop
cmc
xor
scas
add
scas
xor
cltd
sub
popf
xor
jno
gs
xchg
outsb
xchg
adc
or
popw
cmc
pop
pushl
sarl
andl
enter
xchg
movsl
lret
ja
jl
jl
fwait
nop
jecxz
imul
unpckhps
cmp
rcll
push
jmp
sbb
cs
sbb
aam
xor
stos
inc
xlat
ficompl
mov
dec
jge
clc
push
imul
inc
aas
jne,pn
imul
mov
adc
mov
adc
shll
ds
add
push
clc
ret
or
jl
push
or
or
sub
jo
hlt
push
imul
push
ds
mov
das
icebp
xchg
cld
je
lods
loope
pop
test
insl
xor
mov
dec
push
nop
fisttps
dec
sub
subl
lahf
add
or
add
out
pop
pop
push
xor
sub
inc
fimuls
dec
dec
leave
test
jns
movsl
jbe
pop
or
dec
iret
lock
inc
adcb
sbb
mov
pushf
test
jno
scas
jns
jmp
adc
pop
inc
add
stos
test
cmc
sbb
sub
cltd
test
in
adc
mov
push
leave
inc
repz
sbb
push
mov
mov
pop
std
sti
mov
sbb
add
jmp
mov
push
dec
test
fdivs
and
and
nop
pop
mov
pushl
adc
stos
es
add
adc
lods
inc
and
sub
sub
ljmp
or
pop
lock
leave
xlat
jne
mov
mov
push
daa
xor
out
arpl
in
imull
xchg
xor
clc
int3
pushl
lea
test
lea
lahf
pop
dec
mov
add
xchg
mov
in
loop
sbb
sub
ds
mov
mov
inc
scas
pop
jle
aaa
xchg
pop
sub
std
xchg
je
push
pop
icebp
mov
loope
ja
nop
and
mov
mov
test
frstor
dec
push
fimull
mov
jbe
ds
ds
cmpsl
lock
sbb
add
mov
push
fists
popa
adc
push
dec
int3
sbb
pop
lahf
xor
push
popa
loopne
aad
js
or
enter
adc
scas
or
jno
mov
loopne
mov
je
mov
push
in
pop
loope
mov
nop
xchg
sub
cli
js
lods
xor
pop
mov
jbe
and
add
ljmp
ret
ds
adc
mov
push
out
stos
mov
stos
cmpsb
or
push
dec
xchg
or
in
mov
xor
outsb
adc
xlat
add
inc
std
push
mov
ffreep
jge
das
cltd
or
adc
sarb
xlat
push
add
mov
xchg
push
push
gs
add
in
fmull
cmpsl
addl
xor
jno
mov
or
fs
xor
cwtl
stos
push
xchg
mov
cmpsl
push
insl
xchg
jge
or
jecxz
sub
push
xchg
stc
gs
and
mov
cmpsl
std
mov
sub
lret
mov
push
xadd
out
and
add
and
shrl
loop
data16
and
fs
pop
shlb
jmp
mov
mov
mov
mov
mov
andb
repz
pop
into
divb
fists
pop
aaa
fnsave
jbe
fstpl
jmp
dec
mov
dec
or
dec
sarl
jns
jle
pop
lahf
data16
test
mov
cmp
lods
mov
jne
stos
cmpsl
jg
jle
cmp
sbb
ja
push
pushf
shr
push
sahf
mov
out
shlb
pop
add
jg
imul
mov
sbb
les
cmp
pusha
in
xchg
sub
inc
fcmovne
mov
xor
imul
cwtl
xor
jnp
mov
lods
jmp
add
fmuls
movsl
stos
cmpsl
mov
inc
mov
fcmovnb
dec
mov
mov
xchg
push
lea
xchg
cmp
dec
cld
shrb
mov
dec
mov
mov
jle
lds
icebp
dec
push
ljmp
ret
inc
cs
xor
xlat
pop
aas
and
dec
push
movb
loop
pop
mov
insl
mov
test
dec
pop
aam
aad
ljmp
adc
in
mov
sbb
aam
dec
test
mov
bound
xor
sbb
or
jae
and
fs
push
lahf
push
insb
in
sti
lea
cs
dec
je
repnz
dec
mov
ds
add
jge
mov
aam
and
mov
mov
xor
jp
mov
jne
sbb
ficompl
pushf
push
mov
and
cmpsl
add
jno
insb
aam
jg
enter
out
or
testb
aad
pop
cmpl
jmp
out
rcrl
mov
adc
dec
out
mov
push
push
cmp
pmaxsw
mov
es
jne
lea
add
add
mov
mov
roll
pop
push
xchg
in
dec
lods
xor
and
dec
inc
movsb
stos
adc
xchg
push
sub
das
sbb
jnp
fsubrp
jecxz
pop
js
mov
sub
dec
dec
jl
orb
cmp
xor
mov
data16
and
frstor
jb
js
cmp
mov
loope
and
shl
mov
or
mulb
sub
and
or
xor
cmp
ret
xor
test
clc
jge
push
mov
aas
sbb
inc
pop
adc
pop
xchg
add
stos
dec
insl
out
mov
aam
cmpsl
pop
ja
cmp
test
xor
test
dec
xchg
ret
test
iret
cltd
cmp
xor
shr
aad
aas
stc
cmp
xchg
pop
cmp
fisubrl
enter
push
jl
mov
sti
cmc
popa
adc
mov
vpcmpeqw
les
sbb
xchg
imul
shlb
mov
add
aad
or
repnz
xor
xor
aas
and
push
jmp
or
out
and
push
testb
push
fsts
inc
std
jns
pop
pop
idivb
fs
and
dec
sarb
cwtl
inc
into
push
adc
jnp
test
cmpsl
repnz
jne
test
mov
pop
idiv
jne
sbb
mov
in
fwait
pop
sub
dec
pop
ss
arpl
dec
adc
mov
data16
xor
add
int
lcall
push
frstor
sarl
ja
leave
lods
scas
dec
enter
fmull
mov
stc
jbe
push
push
mov
icebp
ja
test
ds
addr16
clc
repnz
fs
push
or
mov
pop
add
jns
lcall
mov
and
add
popf
out
mov
jns
cmpsb
xchg
fsts
pop
mov
inc
loop
iret
add
out
sbb
icebp
and
dec
mov
jne
test
fucomip
push
iret
cld
stos
push
clc
push
push
rol
mov
xor
push
scas
xor
daa
jmp
xor
rcrb
movl
push
push
cmp
jl
jecxz
fstpt
cs
sbb
adc
cmp
mov
pushf
pop
mov
scas
push
jmp
add
push
mov
adc
or
shll
cs
xor
loope
mov
aas
jne
and
mov
negl
pop
mov
mov
ja
cwtl
pop
sbb
shl
sbb
enter
nop
push
push
in
xchg
xlat
add
imul
les
xchg
int
and
lods
mov
jle
jmp
and
sbb
das
out
aas
xchg
int3
insl
cmp
nop
jbe
stos
aad
mov
add
and
dec
test
rorb
jne
push
mov
shlb
ja
sbb
jns
xchg
jmp
pop
sbb
clc
test
mov
das
xchg
out
insl
in
push
int
and
push
leave
sbb
std
lods
pop
in
mov
scas
add
cmp
sahf
mov
cltd
cmp
mov
dec
rcrl
jno
and
lret
and
lods
cmp
inc
loop
sahf
sub
push
std
clc
js
pushw
iret
lret
dec
add
or
sbb
dec
pop
mov
sub
adc
pop
mov
lcall
push
inc
mov
cmc
je
inc
gs
ficoms
mov
test
in
sub
imul
adc
mov
iret
loope
lods
rcrl
xchg
pusha
daa
inc
cmp
push
repnz
jnp
cmp
aas
nop
xchg
adc
inc
mov
fidivs
stos
jnp
jnp
dec
adc
cli
fisubrs
sub
insl
mov
in
bound
pop
cmpsl
jnp
jmp
sub
sbb
mov
mov
sti
sarl
mov
cmp
scas
jo
mov
lods
sbb
cmp
push
sbb
xor
hlt
xor
push
cwtl
or
test
fs
scas
ja
add
insl
xor
repz
mov
clc
cmp
jnp
inc
pop
and
xchg
outsb
ja
adc
lea
lahf
aad
xor
mov
notl
data16
mov
gs
gs
add
fwait
xor
mov
sbb
sub
xor
bound
mov
xlat
sub
call
es
push
shl
adc
imul
xor
shr
lahf
sbb
xor
jg
xor
push
mov
push
roll
pop
bound
push
xlat
sub
mov
push
into
es
xchg
jo
sub
cmp
cmp
push
imul
adc
mov
daa
lcall
mov
out
bound
jo
das
pop
scas
sub
fld
jecxz
and
ror
xchg
xchg
jge
push
addps
push
cwtl
lret
adc
outsb
xchg
in
dec
int3
out
mov
add
jp
inc
jns
and
xchg
mov
cmpsb
iret
mov
dec
cmpsb
out
mov
xlat
cmp
imul
int
fstl
iret
jne
pushl
adc
and
aad
xor
stos
bound
imul
jecxz
dec
or
push
inc
aad
cmpsb
fcmovnb
adc
cs
jl
repz
mov
jge
mov
scas
add
or
xchg
ret
or
push
inc
pusha
popa
and
addr16
dec
mov
cli
or
rcll
test
push
mov
pop
or
sbb
loope
inc
dec
cmc
ljmp
jecxz
add
lock
and
inc
sbb
aas
push
ds
cmp
sub
jecxz
xchg
fisttpl
clc
inc
imul
call
repnz
das
cmc
sbb
arpl
imul
and
lcall
mov
xor
insl
lods
stos
bnd
roll
lahf
in
sbb
ja
orps
pop
push
push
repnz
dec
mov
or
inc
xor
addb
push
pop
and
mov
or
sub
icebp
jecxz
mov
push
pop
mov
out
adcl
out
cmc
and
notb
push
and
and
xchg
mov
or
nop
xor
pop
sub
jb
push
adcl
pop
clc
push
insb
in
adc
jecxz
insb
jl
adc
and
or
sbb
insb
movl
jbe
out
mov
cmp
rol
in
insb
jns
push
pop
mov
sbbl
mov
scas
aas
out
xchg
mov
mov
sub
sbb
xlat
ficoml
hlt
subl
sbb
imul
mov
mov
iret
mov
sub
iret
test
int3
sti
jne
jne
hlt
inc
aad
sbb
or
sbb
cmp
addr16
jmp
xchg
xor
and
scas
ljmp
sbb
push
ficompl
lds
fs
inc
stos
jns
sbb
jo
pusha
push
int3
popa
sbbb
gs
cwtl
sti
popf
push
test
hlt
add
or
in
cltd
test
xchg
jg
out
lock
add
cmp
or
scas
mov
mov
mov
dec
jge
pop
mov
cli
lcall
js
mov
insb
insl
scas
xor
cmp
repz
outsl
pop
shl
sub
notb
sub
pushf
pop
cmpsl
mov
xchg
cmpsl
mov
ret
push
lret
movsb
cmp
xchg
sbb
das
xor
repnz
adc
mov
mov
test
xor
add
xor
int
cmpsl
daa
adc
jg
sbb
adc
cmp
xchg
loop
stc
and
in
lods
cmp
cmp
daa
daa
sub
mov
pop
and
popf
aam
cmp
mov
loop
dec
sti
push
rorl
js
or
or
inc
jge
adc
in
add
cmp
test
outsb
call
xchg
mov
test
pop
mov
add
arpl
gs
mov
mov
add
inc
inc
xor
mov
scas
in
cli
fistpl
icebp
mov
jb
repz
mov
sub
sub
fisubrs
dec
mov
ret
imul
push
out
mov
test
jecxz
mov
and
mov
sahf
arpl
dec
xor
loope
sbb
inc
jecxz
xor
sbb
xor
xchg
jo
sub
cwtl
sub
ja
nop
inc
mov
and
mov
dec
sub
xchg
jne
popf
inc
lahf
mov
inc
test
cmc
inc
xor
pop
cwtl
mov
js
dec
and
fadds
jbe
fnstsw
push
mov
mov
or
rcl
movsl
jno
xlat
push
loop
sbb
and
adc
jb
sar
dec
cmp
pop
push
mov
addr16
aam
inc
xor
in
call
sti
push
or
insl
loopne
adc
fisubl
sub
mull
pop
les
jg
movsl
cmc
xchg
mov
or
js
jp
out
stos
loope
ds
loop
add
stc
ja
imul
out
push
stc
out
out
xor
cltd
enter
cmp
movsl
xchg
mov
movsl
pusha
in
pushf
mov
dec
shl
fwait
jg
aas
jbe
imul
fcmovbe
cmpsl
out
sub
test
ss
repz
xchg
mov
and
mov
adc
movsl
fwait
bound
sub
in
hlt
cmp
or
push
fcmovbe
xchg
jmp
mov
pop
outsb
shr
imul
push
cltd
leave
pusha
int3
mov
faddl
push
pusha
xor
fisubrs
cmc
nop
jne
xor
popa
cmp
jmp
adc
mov
xlat
xchg
out
or
cld
mov
lods
popf
mov
data16
adc
xor
out
or
or
mov
jl
or
xor
or
lea
sbb
xor
pusha
xchg
mov
inc
lahf
fnstcw
add
or
dec
roll
mov
les
adc
jne
and
or
pop
mov
cltd
ret
ja
cli
arpl
xchg
rolb
lahf
or
mov
popf
fwait
shl
sub
nopl
xor
imul
pushf
mov
sub
push
fstl
rcrl
movsb
in
icebp
shrl
lahf
mov
pop
int3
pop
in
nop
mulb
fisubrl
std
cs
and
adc
aaa
mov
in
dec
popa
jne
push
lds
mov
in
rorl
or
in
mov
xor
inc
mov
dec
add
xchg
pop
aas
flds
out
mov
mov
mov
inc
xor
dec
mov
data16
jae
and
sub
jns
or
pop
or
mov
stos
sbbl
repnz
dec
lret
repz
pop
sub
mov
clc
out
outsl
cmp
mov
rcll
inc
xchg
jecxz
xchg
inc
mov
pop
mov
sub
jmp
sbbb
push
push
inc
add
sub
inc
pop
mov
or
rcll
push
adc
ljmp
lods
popa
add
and
lcall
sbb
cli
inc
pop
jge
enter
outsb
stc
pop
rcrb
repnz
cli
add
adc
add
xchg
dec
xor
pop
cmpsl
orpd
std
pop
and
js
cltd
inc
mov
or
ret
jns
popf
lret
xchg
cmp
xor
hlt
repnz
xchg
sbb
imul
inc
dec
lret
jo
mov
add
or
push
jle
inc
clc
lret
std
popa
mov
rorb
mov
pop
cwtl
inc
scas
dec
nop
xchg
mov
out
outsl
add
mov
mov
pop
hlt
inc
daa
push
add
mov
stos
xor
adc
push
lods
out
xchg
stos
mov
lds
xor
jge
jmp
movsl
stos
in
inc
daa
divb
jg
outsb
dec
mov
mov
je
cmpl
outsb
out
inc
or
lea
adc
into
mov
cltd
out
jo
cmpsl
push
cmc
dec
jo
rcrl
ljmp
xor
sbb
inc
loopne
test
mov
rclb
xchg
aas
lods
sbb
mov
sbb
add
mull
jp
push
and
xchg
dec
scas
jg
in
vcvtsi2ssl
push
mov
sub
sub
test
sub
sub
xchg
mov
das
mov
repnz
and
add
mov
pop
jge
ret
data16
mov
stc
popf
call
ret
jge
inc
fwait
in
imul
jnp
out
stos
iret
pop
sbb
mov
ret
mov
xchg
ret
sbb
pop
sbb
or
outsb
test
ret
jne
arpl
sub
adc
loop
jl
into
cmp
dec
pop
push
cmc
add
int3
dec
cmp
inc
or
lock
sbb
scas
jl
fldl
sub
add
mov
stos
and
pushf
mov
fs
pusha
cli
test
in
mov
pop
pop
xchg
mov
xchg
mov
add
or
cmp
inc
outsb
jb
jns
aas
rorb
xor
sbb
inc
mov
out
push
mov
lods
andb
xchg
mov
mov
adc
in
push
add
and
cwtl
xor
xchg
test
aas
dec
bound
enter
mov
sbb
mov
inc
xchg
mov
cmp
xor
adc
xor
and
push
sbb
push
cmpsb
dec
pop
sub
adc
lea
inc
xchg
popa
or
lea
xor
rclb
and
mov
push
or
xchg
in
daa
mov
sbb
rol
or
das
enter
in
pushf
adc
xchg
adc
and
in
repnz
mov
mov
mov
xlat
loopne
sub
add
xlat
jmp
in
std
mov
jp
outsl
and
enter
fisubrl
push
leave
and
jb
dec
mov
mov
cmp
jg
push
mov
jge
mov
ja
fdivl
lea
sbb
mov
xor
icebp
enterw
bound
jb
sub
out
loopne
push
xchg
pop
je
aaa
inc
jmp
or
jl
cmpsl
test
push
xchg
cs
add
loop
mov
aas
ss
and
iret
jmp
jge
mov
sbb
add
push
lods
mov
and
cmpsl
fmull
xor
inc
and
xor
mov
push
mov
loopne
sbbl
lahf
aad
add
jae
jg
aam
push
mov
cmpsl
cmp
jo
aaa
lods
ret
icebp
xor
push
dec
adc
jb
adc
mov
outsl
lahf
out
into
cmp
push
adc
outsl
sub
mov
inc
push
cmp
or
push
fstpt
pop
xor
in
jle
mov
cmc
mov
data16
lcall
jge
jbe
imul
in
lods
xor
leave
fdiv
shll
idiv
inc
dec
ret
ja
jo
cmpsl
int3
mov
lcall
mov
add
shrl
inc
stc
icebp
mov
nop
pmulhw
sub
scas
or
sahf
sub
mov
psllq
add
sarb
xor
jbe
test
pop
mov
push
rorb
hlt
xchg
sbb
pop
sti
push
sahf
pop
sub
rcrb
dec
stos
pop
or
or
jle
pop
loope
lret
lret
adc
and
jl
cwtl
inc
or
sbb
adc
repz
cli
lods
scas
sbb
add
cmp
fs
loopne
and
scas
sub
xor
daa
xchg
sbb
imul
fwait
outsl
jle
shll
mov
sub
out
bound
and
dec
sahf
or
xor
dec
fiadds
pop
lret
aas
fisttps
cmp
test
movsb
shlb
push
jae
ljmp
call
pop
movsb
inc
cmpsb
sbb
push
fildll
jl
cmp
pop
sbb
sbbb
mov
mov
pop
jb
or
call
lret
xchg
xchg
sub
lret
sti
cmp
mov
fnstenv
ret
test
outsl
lods
mov
jbe
mov
lret
inc
or
aas
jmp
cs
cmp
arpl
add
jecxz
arpl
sbb
sbb
mov
scas
sub
cli
pop
int3
sbbl
outsb
repnz
jne
mov
and
mov
jmp
testl
jg
jge
subl
roll
dec
mov
cmp
push
mov
xchg
add
repnz
lcall
dec
pushf
fs
out
inc
into
jge
daa
rol
inc
and
inc
adc
ror
fdiv
std
mov
out
inc
filds
push
push
jae
sbb
mov
xor
adc
add
aas
xchg
cmpl
dec
or
sub
inc
pushf
loop
dec
adc
aaa
xlat
sbb
sub
imul
dec
cwtl
push
test
push
mov
dec
les
cmc
dec
or
cmp
fstpt
out
ret
test
inc
mov
and
mov
or
lea
xlat
push
das
repz
lea
jb
cmpsb
adc
xchg
leave
xor
scas
push
jo
dec
dec
or
inc
jle
jl
loopne
sub
cmp
push
xchg
xchg
inc
pop
scas
in
or
and
jae
mov
jo
adc
in
movsb
iret
push
fwait
movsb
add
mov
push
mov
stos
bound
cmp
jnp
mov
xchg
jg
xor
movsb
xchg
inc
inc
loope
pushf
insb
sti
jge
aas
or
mov
mov
pusha
movsl
lret
and
leave
jne
jnp
inc
lock
mov
jge
xor
inc
mov
pop
add
inc
or
jae
addr16
js
shl
ss
fwait
ds
push
lret
adc
lcall
push
xor
xchg
mov
xchg
ficompl
add
jle
out
or
and
cmp
push
ss
jmp
and
sbbb
sbb
inc
or
ds
xchg
aas
out
add
push
xor
subl
pushf
lock
xchg
or
cmc
outsl
fsubrs
gs
test
outsb
pop
or
push
jmp
imul
sub
das
stos
ss
inc
movsl
fdivr
fxch
pop
cmp
adc
mov
gs
push
adc
stc
cmp
int
negb
mov
xor
push
in
shl
imul
lret
xor
push
das
and
mov
test
jb
and
dec
arpl
push
xor
fs
dec
mov
push
pop
dec
into
xor
add
testl
iret
ret
mov
cwtl
jae
mov
sub
aas
sbb
jae
xlat
add
sbb
sub
push
out
jge
add
push
push
out
jp
pop
sbb
mov
jmp
neg
stos
jbe
push
xor
adc
push
sub
fdiv
jmp
xor
stos
pop
sub
int
mov
dec
test
mov
jmp
test
pop
inc
dec
addl
pop
test
loopne
pop
pop
jno
sahf
adc
mov
cmpsb
loop
pushf
lds
mov
sbb
jg
xchg
lahf
add
dec
pop
out
mov
roll
sti
in
jbe
and
adc
push
pop
outsl
cmp
stos
inc
and
adc
pop
xchg
mov
inc
jle
or
cs
and
adc
inc
sbb
jo
jno
lahf
mov
inc
aas
push
jle
data16
nop
pop
repnz
mov
leave
adc
mov
push
dec
push
ljmp
or
mov
jmp
bnd
inc
daa
scas
cmp
aam
frstor
popa
loopne
push
xorb
push
rcrl
or
or
cs
dec
imul
movsl
jne
sub
sub
sbb
dec
aam
iret
mov
lods
gs
rcll
jge
mov
pop
insb
lods
inc
shll
ds
mov
movb
xchg
cmp
sub
add
pop
ljmp
mov
sahf
sub
in
dec
dec
and
jbe
cs
pushf
add
movl
icebp
pop
jo
andl
xchg
mov
pop
stos
ds
pop
sbb
das
and
push
pop
call
jmp
sti
lea
cmp
loopne
inc
pop
out
pop
rcl
std
lea
addr16
stos
fisttps
enter
test
fcmovb
repz
js
adc
psraw
add
jo
rorl
pop
cltd
fdivs
jns
pusha
stc
mov
rcr
jmp
xchg
fildl
add
aaa
jp
inc
add
arpl
inc
les
xor
jne
repz
pusha
jb
sub
mov
inc
xor
jmp
cwtl
sar
jmp
addr16
push
sub
xor
enter
push
test
ja
dec
ljmp
xchg
sub
xchg
les
fisttpll
mov
in
push
push
nop
and
lock
mov
loopne
sbb
push
mov
inc
loopne
lods
js
cwtl
adc
cmp
push
ret
bound
and
popa
pop
lret
lret
push
pushl
in
movsl
cmp
xchg
inc
push
stc
out
pop
pop
ds
in
out
xor
fcompl
aam
pop
cmpb
push
dec
or
add
pusha
es
clc
mov
jecxz
mov
inc
jno,pn
sub
push
jns
ds
add
loopne
jp
mov
push
fs
xchg
add
ror
cmp
or
ja
dec
mov
mov
lahf
jg
popf
dec
cmp
fucomip
push
sbb
stos
aas
pop
or
sbb
pop
repz
int
adc
fmull
mov
pushf
movsl
outsl
dec
bswap
sbb
mov
xchg
push
or
adc
data16
movsb
outsb
dec
xchg
inc
sbb
add
cmp
mov
enter
out
sub
mov
dec
jb
sub
out
mov
sub
jg
jecxz
inc
lret
mov
icebp
push
fstpt
or
lock
mov
mov
xchg
inc
jp
stos
fldt
push
add
adc
sti
clc
ja
inc
sbbl
mov
xchg
lret
adc
xchg
xchg
mov
mov
aam
lea
dec
push
aas
into
xchg
xlat
mov
lret
into
xor
xor
leave
cmpsb
int3
jecxz
and
std
pop
orl
or
push
stos
imul
xor
xor
mov
or
test
dec
xchg
mov
fwait
mov
lret
jmp
gs
lods
sub
mov
add
push
sub
lock
mov
andl
cs
mov
stos
and
adc
rcl
mov
loopne
outsb
jb
or
and
add
sti
stos
lods
pop
das
test
ja
test
scas
setp
xchg
cmpb
xchg
xchg
loopne
in
push
jmp
xor
xchg
daa
rcr
jmp
mov
ss
and
push
pusha
sub
das
stc
jbe
jl
sub
push
jecxz
and
lds
jne
cmp
mov
adc
mov
bound
fmuls
out
push
xchg
bnd
fs
mov
dec
addl
xor
xor
inc
push
xor
sub
sbb
test
rclb
adc
push
imul
sub
inc
outsb
sarl
add
add
loop
mov
or
das
or
mov
enter
push
call
in
push
outsb
and
mov
mov
cmp
out
inc
and
push
add
je
xchg
and
mov
jbe
jl
fstpl
mov
mov
rcr
push
hlt
mov
and
cmc
jnp
xchg
out
dec
aad
lock
jmp
loopne
cmp
sbb
xchg
mov
jbe
gs
add
cmp
pop
xor
sub
push
imul
je
inc
clc
in
popa
and
mov
mov
movsb
fs
xchg
pop
mov
insb
add
es
sbb
fcom
sahf
mov
ficompl
cmp
insl
pushf
loopne
inc
and
insl
and
sahf
movsb
imul
add
mov
push
mov
das
cmp
cwtl
sbbl
xchg
mov
sbb
and
add
or
pushf
in
ret
jo
lret
addr16
pop
mov
je
subl
testb
js
mov
loope
mov
mov
in
adcb
std
or
sbb
sub
sbb
and
rorl
repnz
jecxz
cwtl
pop
ljmp
loop
cwtl
cwtl
andl
adc
and
aad
shl
push
cmpsb
dec
mov
iret
pop
sub
pop
jns
je
je
test
sbb
or
mov
mov
imul
jmp
add
mov
xchg
pop
mov
stc
daa
test
push
pop
lret
mov
in
dec
fnstsw
cwtl
leave
jo
test
sub
pop
xlat
loopne
adc
push
js
and
fcos
dec
into
lods
frstor
sbb
push
adc
push
xorl
pop
and
push
push
jne
mov
lods
dec
inc
sbb
insl
rcrl
iret
cmp
in
in
lea
out
push
inc
jns
pop
out
xor
and
arpl
ficompl
cmp
add
push
ja
lcall
dec
test
fs
or
push
adc
dec
scas
fdiv
andb
adc
jecxz
push
pop
loopne
loop
ror
cmpb
stos
pusha
xor
iret
ret
or
shlb
push
dec
adc
fs
jmp
in
xchg
test
inc
sub
sahf
push
adc
mov
and
and
pop
jle
adc
xchg
pop
push
push
jb
sbb
sub
push
out
xlat
pop
pop
mov
icebp
mov
aad
dec
out
adc
cmpsb
ljmp
stos
movsl
ficoms
inc
out
addr16
out
jae
mov
out
xchg
sub
sbb
stos
add
jl
push
and
pop
dec
sub
mov
mov
fstps
andb
fmull
stc
fbstp
enter
sbb
xchg
xlat
mov
daa
repnz
out
test
movsl
icebp
lret
imul
out
fdivrs
pop
call
out
cwtl
call
xor
jno
stos
mov
adc
sbb
push
jno
inc
imul
jp
data16
sbb
pop
xchg
out
mov
sub
mov
lods
out
xchg
sti
pusha
into
pop
inc
imul
push
mov
mov
scas
hlt
fistl
fs
sub
jnp
das
xacquire
xchg
pushf
lock
stos
mov
sbb
mov
insb
xorb
aas
faddl
cmpsb
dec
movb
rolb
mov
repz
jge
outsl
insl
mov
jae
mov
push
sub
icebp
cmp
aaa
adc
loope
push
mov
add
push
or
cmp
mov
xlat
pushf
lods
push
mov
pop
and
jg
or
sub
negb
xchg
pop
dec
lea
mov
cmp
lcall
addb
mov
adc
fsubl
push
pop
adc
pop
push
rclb
sar
sub
fwait
mov
mov
pop
fwait
cli
scas
ret
inc
rcrl
imul
adc
gs
dec
fiaddl
jg
in
lret
adc
inc
out
nop
test
cs
mov
or
or
pusha
push
fcmovnu
cmp
js
sbb
sbb
xchg
mov
cmp
cltd
sub
or
negl
loope
pop
das
bsf
adc
cmp
or
dec
pop
int
or
sbb
jp
outsb
mov
sbb
testb
jg
ret
add
mov
add
repnz
mov
shlb
enter
test
dec
lds
mov
dec
in
xor
push
into
inc
adc
inc
sub
stos
je
ret
mov
je
xchg
add
mov
mov
fidivs
lcall
push
mov
xchg
jnp
ljmp
and
bound
nop
mov
ret
shll
push
out
fscale
fdivrl
jno
imul
fnstsw
shll
test
enter
jno
push
mov
insl
add
inc
fmul
mov
push
lods
jp
or
pushf
jl
scas
mov
mov
lea
out
cmp
into
stos
scas
cmp
lods
or
aaa
leave
push
push
inc
leave
push
imul
xchg
lret
fiadds
das
test
fcmovnbe
or
push
inc
movsb
iret
clc
int3
loop
xchg
adc
enter
xchg
add
ror
ret
cmpsb
xchg
push
clc
dec
shll
nop
ljmp
jns
lea
repnz
push
and
and
enter
negb
in
out
inc
jecxz
scas
test
sbb
xor
rcrl
shrb
loopne
sti
arpl
jns
mov
sbb
sbb
jnp
movsl
inc
mov
sbb
fistpll
in
lock
pop
enter
loop
lahf
arpl
imul
pushf
loop
and
je
add
add
pop
fistpll
stos
or
out
mov
out
inc
inc
xchg
cmp
mov
andb
mov
and
testl
pusha
dec
jne
fsts
cmp
imul
out
push
pop
jecxz
mov
jl
ds
cli
mov
and
push
push
and
outsb
sahf
sti
leave
push
pop
dec
pop
test
add
sub
cmc
jmp
popf
lods
loope
xor
mov
jl
push
stos
test
lock
clc
loopne
or
negb
jae
sub
hlt
dec
mov
popl
jbe
jne
je
or
jae
cmp
xchg
mull
xchg
idivb
loope
icebp
push
dec
pop
mov
and
lds
je
adc
call
dec
pop
mov
xor
pop
pop
mov
jg
mov
xchg
ret
mov
push
gs
ds
add
mov
add
jns
dec
in
mov
mov
jecxz,pn
call
pop
in
fldenv
add
add
dec
stos
out
mov
or
sub
lods
lahf
mov
movsl
fdivr
aaa
adc
inc
lahf
or
lret
sub
fsubrs
add
sbb
mov
loop
and
jno
or
sbb
xchg
mov
fdivr
xchg
fistl
test
pop
pop
pop
js
xor
add
jo
jbe
bound
dec
jb
push
test
out
mov
scas
scas
mov
outsb
inc
pop
sahf
lds
pusha
and
out
xchg
and
jecxz
xchg
push
sbb
xchg
rolb
lahf
mov
pop
pusha
paddb
add
mov
mov
insl
syscall
push
sub
cli
dec
sbb
inc
iret
sub
enter
stos
subl
xor
sbb
jl
out
cmc
mov
ja
xchg
push
aam
int
sbb
or
jg
sub
sub
or
cmp
scas
into
scas
lret
test
inc
cmp
pushf
adc
aas
and
test
xchg
xchg
sbb
inc
jp
push
pusha
fcomp
leave
inc
cmc
adc
lea
out
xchg
scas
pshufw
and
jne
lods
xor
jge
pushf
and
dec
xchg
aas
jo
adc
add
aaa
std
cmp
movsb
push
mov
cwtl
mov
aam
mov
outsl
inc
lock
arpl
mov
xor
jge
jns
not
xor
aas
nop
push
and
xor
push
orl
mov
out
test
and
mov
addr16
xor
mov
hlt
xchg
and
stos
dec
push
cmp
shl
push
xchg
push
jns
jno
inc
popf
lods
adc
fisttps
push
cli
je
es
sbb
and
bound
pop
nop
adc
es
cmpsb
neg
mov
fcoms
jg
or
push
push
cmp
icebp
cld
adc
or
rorb
mov
sub
jg
xchg
stc
cmpsb
push
fisttpll
add
cmp
jo
scas
pop
cmp
sbbb
lods
out
hlt
mov
loope
or
sbb
jg
xor
jecxz
add
ja
out
mov
sbb
enter
insl
xor
or
xchg
lods
push
in
xchg
loop
in
lcall
test
lods
jmp
mov
xchg
shr
lea
scas
jnp
adc
cmc
sub
sub
lahf
xor
lds
jno
sub
xchg
test
ds
arpl
clc
ljmp
roll
jg
ret
mov
in
adcb
stc
dec
sub
and
xor
cmp
dec
mov
and
faddp
cmp
ds
int
dec
jns
es
arpl
loop
adc
fsubs
and
cli
adc
xor
xchg
adc
and
push
jae
mov
mov
aas
fsubrl
ret
cmp
testl
repz
sub
fbstp
xor
mov
xor
ret
in
in
shlb
xor
sahf
sub
dec
fstpl
scas
xchg
repz
push
mov
inc
sbb
pusha
push
sbb
fwait
push
fidivl
sbb
or
out
dec
mov
shlb
jo
xor
in
pop
cltd
or
lods
add
mov
sub
jnp
fidivrl
add
mov
call
iret
mov
inc
jl
fwait
sbb
std
lea
push
clc
mov
loope
sub
mov
adc
mov
leave
dec
mov
inc
setle
or
inc
push
adc
jne
adc
cmpsl
jl
jnp
pop
xlat
fldcw
mov
dec
dec
ret
pop
xchg
in
dec
fsubrl
cmc
dec
push
push
dec
mov
dec
adc
inc
fidivrs
iret
mov
scas
enter
pop
lock
test
inc
add
sub
enter
and
mov
in
lock
stos
mov
pusha
pop
rclb
sbb
or
dec
cwtl
add
mov
ds
xor
lcall
push
push
cld
push
or
cmovbe
test
and
pop
in
fcmovb
sub
and
stos
out
sub
xchg
push
xlat
es
jns
cmp
ficompl
adc
jecxz
mov
push
dec
pop
mov
inc
stos
xchg
fbstp
icebp
sbb
pop
xor
jo
in
scas
xchg
in
repz
sbb
add
adc
jg
int
jnp
pop
bound
jns
xchg
loop
out
jne
scas
scas
inc
loopne
lea
loope
pusha
fistpl
lret
cld
pop
and
std
and
sub
fcmovne
clc
push
pop
inc
sub
mov
xor
insl
outsb
out
mov
adc
adc
cmp
jns
inc
in
aaa
inc
into
popf
pushf
adc
pop
jo
sub
dec
clc
xor
test
inc
outsb
clc
imul
xor
inc
sti
mov
xor
cmpsb
test
cmp
fisttpl
sbb
ljmp
inc
into
in
jecxz
loope
arpl
stc
fs
iret
roll
xchg
jnp
out
push
mov
inc
orb
mov
push
cmp
mov
frstor
dec
mov
cmpb
push
ljmp
or
in
test
cli
fwait
cmc
pop
jmp
xor
xor
bound
inc
dec
mov
sub
pop
sub
xchg
pop
and
mov
dec
pop
pop
cmp
jmp
dec
rcll
jmp
out
inc
jge
insb
adc
orl
addr16
mov
sti
sub
jo
popf
ljmp
scas
and
dec
mov
cmp
inc
pop
rolb
cmp
mov
sarl
push
rcr
jle,pt
fidivs
pop
bound
jge
inc
inc
xlat
mov
adc
xchg
lods
jmp
mov
or
mov
mov
roll
inc
je
in
pop
js
aam
mov
repnz
paddq
lds
lods
fwait
movsl
scas
shlb
jo
push
pop
ret
sub
jmp
out
movups
testb
mov
sbb
mov
and
sub
cmc
and
aad
test
pop
add
pop
xor
mov
imul
xchg
push
jnp
mov
int3
sbb
dec
and
dec
dec
es
outsb
inc
xor
mov
andb
subl
push
arpl
xchg
flds
push
jbe
je
sti
inc
insb
adc
jo
jne
xor
xchg
sub
jns
or
lret
fcompl
cmpsb
mov
mov
xlat
dec
dec
lods
xchg
in
scas
mov
rorl
push
mov
sub
cmp
or
sti
fwait
inc
popfw
mov
pop
das
add
loopne
gs
sarl
adc
cmp
jno
ds
or
jp
shlb
outsl
aam
sub
lock
add
mov
adc
jg
cmp
test
pop
cli
push
shr
xlat
pusha
iret
into
cmp
mov
xor
lods
inc
dec
xlat
dec
or
clc
adc
xor
or
popa
repnz
jge
outsb
loope
push
jns
and
dec
cmpsl
mov
inc
pop
jae
adc
sub
clc
xchg
hlt
in
je
xor
leave
sbb
out
aaa
sti
iret
lods
push
rcr
cmp
jmp
stos
inc
sbb
and
or
dec
repnz
jmp
outsl
and
sbb
das
adc
hlt
mov
mov
imul
cmp
add
in
shrb
dec
sbb
aas
mov
lods
loop
sub
hlt
movsb
aaa
imul
frstor
ret
int
mov
int3
ret
mov
xlat
dec
daa
pop
push
js
cld
cmpsb
and
xchg
pushf
inc
jg
cmpsl
hlt
imul
adc
pop
lret
into
dec
and
cmp
gs
or
lret
ljmp
ljmp
pop
shl
imul
and
shr
dec
or
int
aam
imul
imul
dec
test
jne
insb
mov
mov
jecxz
hlt
jnp
ret
jecxz
out
lods
mov
cwtl
inc
cs
pop
ds
dec
cmp
xchg
andl
jl
popa
mov
or
or
mov
sbb
or
repnz
out
pop
movsl
push
push
lock
ret
jae
jns
in
sti
xlat
mov
fnsave
or
cmp
movsl
adc
lret
lahf
adc
add
push
inc
mov
inc
or
cmp
xchg
mov
test
pusha
pop
scas
ljmp
or
dec
ja
je
scas
gs
sub
popa
xchg
scas
mov
fsts
mov
in
jg
in
ret
adc
pop
mov
add
jle
popf
pushf
movsb
loope
or
ret
and
and
sbb
inc
pop
pop
ja
and
mov
stos
fidivs
sti
jmp
aad
sbb
loopne
or
dec
stos
pop
and
push
cmp
inc
mov
xchg
aaa
cmc
mov
loope
stos
in
adc
sbb
sahf
cmpsl
ss
and
call
adc
nop
inc
repnz
inc
lds
or
scas
mov
xchg
push
sar
shrb
adcl
scas
pop
and
mov
push
mov
sbb
xchg
movsb
out
cmp
insb
movsb
nop
or
std
cmp
sbbb
push
ret
aad
cmp
xor
push
in
out
subb
sbb
daa
sbb
ljmp
mov
mov
jnp
and
call
mov
loopne
sbb
jle
out
add
mov
pop
xor
jb
imul
movsl
inc
lret
les
test
push
enter
ficomps
rclb
or
jmp
mov
aas
cld
push
loopne
jge
cmp
push
or
sbb
imul
insb
push
xor
pop
insl
mov
jge
push
fs
movsl
movsl
or
push
adc
mov
and
push
sub
shlb
pop
aad
js
out
jns
ror
roll
sbb
out
in
inc
pop
gs
subl
ja
cmc
mov
fwait
mov
sub
sub
mov
dec
jg
or
out
pop
inc
hlt
sti
in
jne
orb
shlb
ljmp
mov
call
pop
jnp
sbb
push
mov
xor
pop
push
cmc
dec
fists
and
pop
aad
mov
xchg
fstpl
pop
insl
inc
mov
dec
sbb
inc
iret
mov
jae
xchg
mov
inc
pop
ja
movsl
xor
in
jle
aam
insl
imul
pop
punpcklbw
loope
mov
shl
stc
cli
jne
stc
xchg
ficomps
aas
sbb
add
scas
pop
add
popa
out
sub
jmp
ficoml
ret
jp
or
lret
loopne
in
scas
cmp
xchg
into
xor
nop
mul
outsl
push
cwtl
jp,pt
add
mov
arpl
movsb
xor
data16
xor
call
daa
jno
aaa
shr
scas
hlt
fwait
ljmp
test
jo
mov
xor
daa
fldcw
decl
or
sub
aaa
aad
js,pn
ret
iret
shlb
xor
sbb
mov
fldt
popf
mov
adc
out
push
mov
sbb
test
xor
scas
jle
scas
jle
negb
fstpt
sti
xchg
or
or
insb
orl
in
test
filds
cmp
addr16
mov
push
jns
or
pop
dec
push
sbb
sub
movsl
nop
out
dec
cltd
in
jg
or
push
xor
in
es
xchg
into
cmp
add
jae
jge
jle
fwait
cmp
in
or
shll
pusha
je
xchg
js
gs
lcall
mov
cmp
jmp
je
mov
pop
push
xchg
xchg
cmp
fdivrl
enter
clc
das
aam
pop
jne
dec
adc
loop
mov
push
pushf
or
adcl
jbe
add
xor
jb
pop
add
shrl
aas
dec
ret
addr16
mov
and
ret
xor
mov
rorb
push
fisubrs
test
mov
cmc
jg
ja
mov
mov
xchg
repnz
mov
adc
jno
inc
fcoms
jge
inc
cmp
mov
pop
or
outsl
hlt
scas
pop
push
shrl
sbb
add
imul
sub
add
jl
jle
pop
stc
shll
iret
xor
imul
mov
stos
add
lods
cmp
pop
outsl
loope
insb
sub
xchg
xchg
jmp
scas
jbe
pop
jecxz
jl
mov
faddl
push
test
lret
jae
inc
mov
inc
xor
adcb
movl
fmull
lods
inc
shl
lret
or
mov
and
ljmp
int
imul
or
dec
jge
divb
mov
xchg
jp
mulb
andl
cmpsb
inc
mov
sbb
bound
and
mov
nop
fadds
in
add
pop
push
mov
daa
add
scas
cmc
xor
insl
sbb
js
push
xor
daa
inc
dec
jbe
lahf
testl
in
jl
pop
cmpsl
popa
cmp
and
and
je
inc
adc
or
adc
mov
mov
xchg
loope
sbb
test
mov
cmp
cmp
sti
mov
int3
dec
mov
and
insb
test
adc
out
stos
jnp
mov
test
int3
rclb
jo
js
add
out
xchg
xchg
and
xor
jno
dec
imul
mov
subb
shrb
inc
pop
lods
add
scas
lods
les
pusha
jg
aaa
mov
and
mul
dec
popf
xor
fldl
movsl
xchg
sbb
and
dec
roll
mov
ja
jecxz
scas
adc
mov
xor
ret
shrb
pop
fldcw
sub
aaa
lret
cs
push
sbb
fidivs
call
xchg
dec
and
js,pn
ds
inc
and
add
cmp
xchg
mov
addr16
bnd
mov
lods
inc
mov
loop
pop
pop
imul
adc
ds
add
pop
lea
add
lret
aam
push
cld
mov
jo
faddl
outsl
ds
dec
and
xlat
scas
sub
es
pop
aaa
in
and
fistl
in
or
mov
mov
mov
sti
jle
cmpsl
and
mov
negl
sbb
fwait
cmp
cli
mov
pusha
inc
jno
push
into
data16
ljmp
daa
cmp
add
lcall
add
jg
jle
pop
je
icebp
sbb
xor
jb
lret
lret
and
xor
push
ja
out
or
jb
push
fsubs
push
sbb
sub
decb
adc
jl
or
jno
popf
les
mov
cld
lahf
inc
in
fcmovnb
or
lahf
imul
test
inc
outsb
sti
dec
repz
stos
inc
mov
jmp
imul
pop
or
aas
or
sarl
inc
pushf
ret
mov
test
adc
xor
repnz
mov
push
aaa
test
std
xchg
mov
loop
das
fdivl
add
loope
fisubl
or
lds
out
fnstsw
adc
pop
out
ja
int
enter
jl
mov
out
out
mov
in
ffree
mov
dec
ret
in
pushf
sub
lods
data16
int
mov
push
movsl
adc
cld
test
mov
sub
out
subl
loop
insl
or
cs
mov
adc
fmuls
mov
lods
in
or
mov
aad
loop,pt
scas
xor
test
mov
and
scas
pop
push
xchg
cwtl
in
andb
frstor
mov
cmp
dec
dec
inc
xchg
stos
sub
icebp
js
dec
push
sbb
push
jns
xor
fucomi
pop
cmp
inc
jge
pop
sarl
ret
mov
mov
push
and
rcrb
stos
cmp
bnd
pop
loop
out
dec
mov
out
pop
in
icebp
dec
jne
jecxz
and
pop
cmp
divl
xchg
stos
movb
add
test
pop
idivl
divb
std
das
out
inc
adc
divl
mov
pop
sbb
scas
test
movsb
push
mov
jecxz
inc
mov
dec
mov
jb
into
bound
movsb
stos
xor
mov
in
outsb
and
flds
pop
mov
pushf
lods
jnp
xchg
inc
cltd
push
adc
fldcw
fsubrl
or
fdiv
jb
cmc
or
sbb
pop
bound
xchg
mov
in
ljmp
add
imul
jmp
xchg
inc
ror
xchg
imul
fisttpl
clc
inc
out
adc
nop
lahf
add
repnz
into
shll
jbe
aam
dec
lret
xchg
sarb
jp
lret
dec
xchg
jo
cmpsb
mov
ret
sub
ret
pop
xor
shl
jo
xchg
xor
mov
mov
xchg
movsl
jge
cmp
inc
out
int
push
or
xlat
in
cli
movb
fs
in
inc
jne
mov
arpl
dec
push
notl
aad
in
lahf
xchg
jle
dec
mov
shll
dec
stos
cltd
jp
fiadds
cmp
popl
stc
ss
rcrb
in
leave
jp
and
add
dec
and
mov
push
clc
aam
pop
inc
sti
lods
and
lahf
and
ret
std
pop
in
xor
shll
insl
inc
sti
or
or
sub
les
aas
sbb
int3
orb
scas
and
and
lods
adc
lret
scas
push
add
movsl
les
push
ret
dec
mov
sbb
data16
cmp
in
test
xchg
jno
xchg
fstpt
and
push
aad
fdivrl
push
stos
insb
leave
sahf
rcrl
add
ss
add
and
jp
push
loopne
or
or
adc
and
repz
cltd
cmp
pusha
fwait
dec
mov
lea
jbe
pop
je
repnz
jbe
popa
jnp
push
sub
pop
movsb
out
popa
lcall
pop
pop
push
push
rolb
jae
push
sahf
fs
daa
adcl
inc
subb
lock
shrl
into
sbb
cld
jmp
into
into
adc
in
dec
hlt
dec
xor
movsl
pop
scas
lret
push
lock
cmp
ret
fmul
in
sbbb
push
fwait
je
cwtl
stos
push
das
aaa
fldenv
hlt
mov
fisttpll
lock
rcrb
inc
mov
lea
dec
jle
test
cmpb
inc
lds
lock
add
mov
pop
sahf
inc
push
add
cwtl
push
cmp
mov
imul
xchg
xchg
push
adc
sti
rolb
push
mov
dec
shrb
movsl
in
push
out
ljmp
cltd
cmp
mov
mov
loop
cmp
inc
imul
fisubrl
movsb
aad
scas
inc
nop
mov
cmpsl
dec
ret
test
push
out
mov
stc
dec
std
bound
mov
lret
shl
js
int3
mov
mov
and
sbb
dec
pop
stos
mov
and
jmp
adc
in
rcl
popf
jge
mov
mov
fcoml
sub
aaa
cltd
xor
daa
cmp
outsb
test
push
cmp
push
shrl
push
sub
sub
enter
and
cs
and
xchg
pop
into
xchg
pop
imulb
rolb
cmp
out
pop
aaa
mov
ret
std
pop
push
xlat
push
lcall
push
and
lock
pop
or
lret
xor
call
jge
repz
pop
or
sar
mov
out
dec
out
jno
inc
inc
mov
mov
mov
call
imul
aas
loopne
xlat
or
stc
cwtl
xchg
ret
sbb
rclb
pop
cmpsb
jle
stos
and
shll
popf
mov
jge
lret
ss
or
jne
jo
and
fmull
or
jle
scas
fisubs
rorl
sbb
jg
in
jno
lock
mov
add
jno
mov
mov
ss
in
xor
fucomp
dec
int
xchg
mov
xor
xchg
in
jae
pop
xor
scas
movb
sti
jae
lock
push
xchg
fidivrs
mov
mov
clc
das
jp
cmp
sahf
sahf
sub
jno
and
les
and
dec
out
adc
inc
jp
xchg
add
test
sub
jl
xchg
mov
mov
or
mov
test
push
jae
cli
and
in
push
sub
xor
repz
scas
xor
sbb
mov
sub
sbb
sbb
pusha
jno
and
pusha
pop
jge
cmp
negb
stos
mov
mov
mov
ficompl
es
mov
push
pusha
cmp
lods
adc
rcrl
sbb
jecxz
pop
sbb
push
mov
je
fidivrs
inc
test
sbb
xchg
cmp
xor
insb
jbe
sbb
out
mov
fmull
adc
scas
ret
add
mov
cmp
mov
fmul
fnclex
dec
decb
jg
or
mov
jne
jb
stos
mov
popf
push
sahf
push
inc
mov
mov
xor
negb
ja
xor
dec
rorl
jg
std
ss
push
cmp
test
daa
js
ss
daa
arpl
ficoml
dec
add
xlat
sub
lahf
jg
xchg
lods
lret
lret
rcl
arpl
jns
lock
fildl
mov
mulb
cmp
js
pop
orb
loopne
test
div
pop
add
xchg
cmpsl
mov
xor
rcrb
and
bound
sbb
add
test
rolb
iret
inc
outsl
movsb
xchg
mov
imul
push
mov
lcall
cmp
rolb
push
out
scas
xchg
insl
ss
das
pop
lods
lock
or
pop
mov
sbb
ret
xor
push
adc
dec
mov
out
sub
jl
or
xchg
popa
or
push
mov
xchg
dec
lcall
push
pcmpgtd
and
jl
cmp
xor
aam
sub
lahf
mov
cmp
mov
add
je
mov
and
cmp
dec
cmp
aaa
mov
sarb
or
cltd
mov
add
clc
mov
pop
iret
aaa
dec
mov
jl
fnstcw
cmpb
cmpsl
mov
cmp
dec
into
aas
js
mov
loopne
sbb
mov
mov
sbb
in
push
call
cld
andl
sub
xchg
in
roll
dec
mov
sub
and
cld
mov
add
jg
and
shl
movsl
lea
loope
fcoml
add
adc
lret
jne
out
xor
ficoml
add
nop
lea
mov
fdivs
push
ss
ljmp
dec
test
mov
je
out
push
call
rol
sbb
icebp
or
dec
cmc
daa
push
in
aad
sbb
cltd
daa
inc
mov
hlt
inc
mov
pop
cwtl
dec
dec
pop
mov
iret
call
cmp
ret
xor
cmp
pop
mov
loop
lds
lods
iret
fcom
inc
jno
addb
xchg
mov
iret
add
jmp
bound
dec
sbb
push
leave
nop
sub
push
bound
pushf
dec
aam
test
insl
mov
lret
fisubrl
xor
jnp
das
jnp
addr16
push
nop
fwait
cmp
ss
cmpsl
sub
enter
cmp
cmc
addr16
mov
repz
stos
or
cmp
jmp
xor
mov
and
mov
inc
pop
mov
cmpsl
adc
mov
jecxz
clc
push
int
push
xlat
andl
out
dec
push
sarb
shlb
push
movsl
loopew
dec
rclb
and
pop
cmpb
in
fistpll
dec
aas
add
repnz
add
scas
les
imul
fadds
cmpsl
pop
push
movsl
push
je
inc
add
add
loopne
fwait
inc
xor
lock
mov
cs
xchg
sahf
icebp
std
sub
outsb
push
sub
sub
cmp
subb
out
daa
mov
pusha
daa
mov
jecxz
call
push
mov
mov
aaa
push
cli
mov
cmp
sub
out
add
shrl
mov
push
push
adcb
sti
out
insb
sub
test
or
jae
int3
add
test
aad
jmp
insl
loopne
pop
adc
dec
in
mov
jne
lahf
into
jno
push
movsb
jns
add
push
mov
pop
nop
dec
rorb
loopne
stos
pop
loopne
dec
sbb
jg
and
jb
cmp
sub
dec
adc
jle
push
stos
mov
cli
cmp
fs
sbb
popa
pusha
js
mov
jo
xchg
and
inc
movsb
sub
rol
or
dec
lock
out
xchg
out
rcl
sub
fs
bound
test
adc
jmp
pop
sbb
subb
popa
in
stos
scas
mov
aam
insl
movsb
sub
mov
fwait
repz
scas
ds
adc
movsl
push
lahf
push
stos
icebp
xor
pop
mov
lea
fisttpll
rcll
add
mov
iret
imul
aas
jp,pt
push
mov
aas
push
outsb
mov
or
push
adc
sub
mulb
shr
shrl
jno
xor
insl
xor
jo
xchg
pop
sahf
xor
jecxz
jge
daa
mov
popf
mov
cwtl
shrl
adc
xchg
out
inc
mov
xor
mov
jne
mov
in
std
ja
addr16
pop
mov
push
push
int3
leave
mov
sbb
in
sub
aam
ds
in
out
add
popa
mov
lock
outsl
jl
movsb
test
adc
cltd
push
call
sub
jle
outsb
pop
das
push
adc
aaa
pop
dec
movsb
xchg
aam
mov
jne
imul
out
cmp
addb
jae
mov
dec
inc
pop
arpl
mov
fsubs
jecxz
jno
push
sub
ljmp
shr
js
mov
lret
and
xor
and
dec
lcall
nop
stos
in
daa
mov
jne
addr16
fptan
adc
std
push
fldt
mov
fadds
sub
push
jge
or
cld
and
push
frstor
xchg
adc
cmp
dec
mov
and
loop
ret
add
stc
push
xor
xor
mov
inc
sbb
aas
jl
orl
push
lret
adc
je
sub
push
rolb
pop
jecxz
mov
add
xchg
mov
jno
and
mull
add
fidivl
outsb
jnp
xchg
rorl
push
enter
inc
imul
out
into
outsl
xchg
into
je
test
sbb
add
cmp
int
push
mov
xor
dec
xchg
fnstenv
push
js
cli
xchg
mov
loope
lret
push
dec
vshufpd
or
loopne
xchg
cmp
xor
popf
add
add
dec
outsl
stc
shlb
cmc
adc
arpl
pop
mov
mov
fcompl
mov
leave
aas
in
mov
jp
mov
xchg
dec
push
jle
and
hlt
dec
call
jecxz
xor
repz
jns
mov
loop
stc
lock
jmp
daa
xor
cmp
insl
xor
cltd
push
insb
dec
cwtl
mov
cld
xchg
cmp
lds
xor
cltd
jbe
or
or
fcompl
push
xchg
fldt
cmp
lods
mov
cmp
add
fcoms
pushf
push
sub
js
popa
mov
sub
mov
xor
mov
push
ja
ret
testb
push
fcmove
add
cmp
mov
imul
mov
loopne
shrl
or
test
leave
adc
xlat
and
test
add
xchg
sub
jns
push
inc
and
movsl
dec
push
dec
cmp
xor
lret
cmc
scas
in
mov
ss
adc
aam
pop
lcall
mov
mov
js
mov
lods
loope
jne
mov
jo
sahf
jo
and
cmp
iret
and
or
jle
js
xor
cmp
pop
out
xor
movsb
lahf
dec
jge
lahf
mov
movsl
pop
lock
cmp
cld
xor
ror
mov
xchg
jg
rolb
loope
repnz
imul
pop
popf
mov
xchg
nop
lds
aad
sub
cwtl
pushf
sti
add
int
fistl
fnsave
nop
or
cmp
push
jnp
mov
sub
cmp
ja
insl
sbb
lods
cmp
aad
or
mov
push
in
and
mov
sub
insb
cli
jbe
push
adc
jg
pop
push
leave
test
and
fwait
sbb
addr16
cs
sahf
cwtl
imul
push
mov
std
push
mov
xchg
pop
jae
std
dec
and
repz
adc
sub
sub
sbb
and
ret
xchg
mov
int3
mov
js
dec
and
cld
aas
mov
mov
lcall
add
dec
es
out
push
movsl
jae
mov
sbbb
pusha
movl
sbb
push
adc
mov
imul
inc
or
mov
push
cs
ja
roll
adc
les
and
sbb
lods
sbb
lods
or
aaa
push
mov
xlat
loope
cltd
mov
bound
push
jns
push
cmp
adc
mov
dec
ret
mov
inc
adc
pop
add
imul
xchg
pop
mov
xchg
imul
int
push
inc
and
jae
movsb
fwait
mov
and
test
xchg
stc
insl
mov
iret
jp
and
dec
loop
and
test
push
sub
mov
mov
xchg
lret
xchg
cmp
lds
shll
push
pop
cmp
mov
dec
add
sbb
push
mov
pushf
add
stos
mov
xchg
cmp
loope
test
repnz
in
mov
push
or
int
test
test
mov
lret
lret
jnp
inc
mov
std
xchg
push
jle
pushf
sbb
sub
cltd
pop
mov
in
inc
insb
lods
sbb
loop
aam
arpl
ret
fwait
incb
inc
add
push
inc
lret
mov
pusha
cwtl
pop
and
push
xchg
ret
lock
sbb
mov
aas
pop
mov
sub
sti
jo,pt
ljmp
stos
scas
push
int
jecxz
scas
in
faddl
in
repz
jno
mov
into
push
in
repnz
aam
mov
ljmp
rcrl
dec
ficoms
jae
shl
testl
dec
cmpsl
lock
scas
into
mov
rolb
add
pusha
push
int3
into
push
in
or
lods
js
add
addr16
or
in
dec
dec
dec
sub
push
jno
bound
sbb
xchg
movsl
push
fisttps
rcr
lcall
rcrb
adc
sub
push
loop
sarl
pop
mov
aas
xlat
addb
xchg
std
pusha
lcall
pop
dec
cmp
cwtl
ljmp
out
adc
jl
scas
add
dec
negb
cmp
add
pop
push
mov
pushf
push
aam
push
jle
js
fwait
leave
cmp
mov
pop
xlat
cld
pshufw
arpl
enter
mov
in
test
cs
fdivr
xor
mov
movsb
paddb
jg
in
stos
cltd
push
fildl
push
scas
out
add
aaa
add
xchg
mulb
mov
push
adc
data16
adcb
lods
iret
lcall
push
sub
sub
mov
push
cmp
push
js
outsb
or
repz
jne
sahf
call
pop
outsl
push
push
inc
and
xor
stc
fiadds
jecxz
testl
inc
cmpsl
outsl
fstp
pushf
pushf
pusha
out
jbe
jb
aas
mov
jne
mov
xor
in
xor
test
ljmp
xchg
insl
pop
imul
std
jmp
mov
fsts
mov
into
popa
jle
fisubrs
xor
movsb
ja
imul
sbb
xor
or
push
add
pop
or
inc
mov
inc
mov
lods
out
jns
outsb
int
rcr
mov
fcomps
out
daa
fdivrl
addr16
sti
jle
adc
pop
mov
xchg
mov
ret
inc
popl
fwait
into
outsl
and
sbb
fcomps
xchg
lea
popa
in
and
mov
std
or
popa
inc
mov
jge
inc
or
inc
aam
mov
push
xchg
incl
sub
ficoms
sub
ret
pop
hlt
inc
push
sub
fnstenv
std
decl
ds
out
jno
mov
imul
xor
aad
and
lret
repz
ret
mov
out
sbb
push
xlat
cmp
mov
pop
loop
adc
out
push
adc
gs
dec
xchg
dec
xor
mov
cmp
mov
mov
in
aam
adc
pop
and
xchg
xchg
and
sbb
imul
xchg
stos
mov
movsl
decb
lret
add
add
scas
ud2
inc
icebp
scas
xchg
js
sbb
sbb
sub
aad
rolb
sub
push
mov
and
adc
out
jge
dec
fildll
dec
scas
inc
xor
sbb
repz
imulb
out
cmp
js
jne
popf
xlat
ljmp
lods
pop
add
das
sub
sahf
inc
or
das
sti
mov
or
xchg
ss
lock
cmp
push
xchg
repz
stc
add
ret
pushl
repz
mov
sub
shr
test
jne
addb
fcmovu
push
jg
pusha
sub
movsl
lock
in
popa
adc
mov
sbb
or
test
and
mov
pop
lods
lret
mov
ds
je
std
sub
sub
cmp
mov
inc
push
fs
stos
dec
xchg
add
loopne
lock
inc
je
adc
sbb
aas
sbb
inc
jns
insb
sti
adc
out
cmc
rolb
xor
fistl
testb
stc
arpl
fistpll
cltd
inc
rorb
out
xchg
cmp
int
js
subb
stos
testb
js
sbb
imul
pop
les
dec
lahf
xchg
pop
push
test
sbb
fldenv
adc
mov
out
nop
cmp
push
xor
insb
mov
jp
xlat
movsl
pop
push
ja
dec
sub
and
loope
sbb
lods
inc
ret
jbe
mov
xchg
out
mov
push
inc
ror
loop
jge,pt
dec
sbb
rclb
push
rolb
mov
sub
shrl
cs
mov
nop
roll
jle
cmpsb
jp
sar
xlat
xor
lcall
ss
pop
imul
jbe
jns
add
arpl
cmc
cmp
lret
mov
sub
jb
je
lret
orl
jle
jne
sbb
out
ja
add
clc
aad
leave
insb
sbb
xchg
test
mov
inc
pop
pop
inc
sub
outsl
add
test
addl
cmp
stos
popf
ficomps
ret
cmpsb
pop
pop
sarb
fiadds
ret
mov
aam
scas
inc
lret
cmpsb
jo,pt
xor
jne
scas
mov
xchg
mov
sub
mov
mov
inc
cmpsl
and
cmp
push
mov
stc
clc
sarb
pop
das
cmpsb
pop
sub
mov
and
inc
inc
sub
cmp
mov
aam
and
into
inc
xchg
inc
push
js
sbb
sbb
pop
arpl
xor
dec
es
jb
mov
mov
sbb
mov
pop
es
insl
lods
sbb
dec
pop
or
divb
aam
mov
mov
xor
and
jl
test
test
jmp
and
mov
mov
in
bnd
adc
xlat
inc
out
daa
leave
jge
js
push
gs
insb
rcrb
pushl
test
mov
jge
mov
add
lods
mov
lcall
and
les
jp
jno
inc
ljmp
adc
pop
jge
sbbb
or
or
sub
mov
add
inc
rolb
xchg
adc
test
bound
pop
push
sub
dec
pop
inc
pop
mov
adc
push
dec
cltd
outsl
add
jge
mov
push
push
ss
pushf
shrl
jecxz
pop
mul
int
add
dec
mov
fidivs
cwtl
jne
inc
inc
cs
push
add
cmp
ljmp
es
sbb
and
ja
mov
push
mov
add
cmc
out
mov
in
jno
repnz
aad
cmpsl
in
pop
shl
insb
xchg
ss
push
fdivr
inc
jmp
add
and
xor
or
jnp
je
jo
ss
movsb
xor
push
icebp
jne
push
mov
jmp
push
mov
or
pop
je
in
xor
jo
fcoml
push
repnz
les
push
imul
or
nop
add
sbbb
add
mov
adc
mov
xor
jge
scas
movsb
xchg
mov
aas
std
xchg
insb
mov
out
iret
es
jo
clc
and
inc
addr16
mov
std
sbb
pop
js
inc
xchg
mov
aaa
dec
call
cwtl
adc
je
jae
cmc
push
out
into
inc
lret
roll
fwait
out
jg
or
cmp
adc
xchg
xor
leave
pop
mov
pop
pop
rorl
decb
jne
mov
mov
cmp
mov
sbb
fcoml
and
xchg
roll
adc
mov
xor
add
das
mov
adc
pop
pop
lds
aaa
sub
jnp
jg
jns
cli
mov
ss
xchg
push
test
dec
popf
daa
in
cwtl
ljmp
hlt
pop
loopne
test
je
int
xor
inc
adc
setp
lock
push
shll
inc
pop
mov
or
dec
dec
adc
ret
arpl
push
jnp
mov
adc
int
or
cmp
cmc
and
gs
dec
popa
xor
lahf
sbb
and
mov
sti
jecxz
inc
out
setno
repz
pop
xchg
inc
push
xchg
test
test
push
scas
shlb
lahf
cmc
hlt
popa
mov
je
std
jp
sti
push
pop
push
xchg
adc
mov
setns
sti
imul
fcmovnbe
insb
mov
pusha
nop
stos
mov
pushl
movsb
push
inc
push
cld
test
nop
push
test
pop
xor
jg
push
repnz
push
push
xor
cmp
pop
cli
and
push
mov
gs
adc
or
xlat
stc
pop
in
mov
imul
pop
mov
iret
ljmp
mov
imul
fsub
sub
pop
jl
js
push
and
xor
xor
mov
test
aad
inc
sbb
dec
cmc
xchg
push
adc
jbe
jnp
mov
xor
dec
and
xchg
adc
sahf
movsl
fistpl
xor
int3
lcall
rcll
pusha
ret
mov
pop
add
pop
inc
pop
pop
xchg
fldcw
pusha
xor
adc
enter
sub
add
dec
add
add
cmc
rep
daa
adc
je
sbb
push
sub
lahf
divl
push
gs
jno
in
lahf
sbb
pop
cmc
int
stos
and
add
aam
add
fisttpll
sbb
rcrb
out
pop
push
pop
test
addr16
clc
sub
cmp
mov
and
in
popa
cs
lret
es
cmpl
jne
jb
sbb
push
cmp
pop
in
fsub
pop
jg
mov
sbb
rolb
int3
sub
mov
mov
fisttpl
rorb
pop
xchg
and
scas
scas
movsl
js
insl
and
sbb
push
out
xor
inc
aaa
inc
pop
in
ja
loope
out
fisttps
cmp
jmp
fsubrl
outsb
pop
arpl
xchg
sarb
mov
sbb
mov
in
cmc
mov
pop
sub
aam
inc
mov
test
in
mov
push
dec
fistl
mov
push
insb
and
mov
inc
push
cmp
and
push
mov
push
js
sub
sub
and
jecxz
push
cmp
xchg
fstl
inc
sub
in
mov
stc
or
aam
dec
jne
xchg
rcrb
pusha
sbb
pusha
xchg
dec
shrl
xor
mov
pushf
insb
scas
mov
xchg
cli
in
mov
jno
push
or
loopne,pn
jne
stos
cld
dec
jecxz
aam
mov
jo
out
adc
jmp
dec
popa
rorl
xlat
addr16
push
cmp
inc
pusha
jb
es
mov
aas
xchg
outsl
ja
lods
loopnew
mov
xchg
or
out
cmp
mov
lea
sahf
pop
mov
mov
push
xchg
out
call
mov
sti
aas
outsb
insb
xchg
imul
jge
add
mov
jnp
push
aas
icebp
shll
not
jbe
repnz
sub
shlb
dec
jl
lods
ds
mov
cmp
sbb
push
xchg
mov
cmp
enter
cmp
add
push
ljmp
leave
std
jl
xchg
mov
lahf
mov
sub
faddl
cmc
mov
lcall
add
pop
imull
lahf
into
jbe
pop
adc
testl
rorb
mov
cmp
rdmsr
lock
js
sub
jg
or
inc
jp
ds
in
nop
cs
sub
out
xor
subl
mov
mov
out
jae
dec
dec
int
or
scas
inc
cmp
ret
mov
push
fstpt
sbb
inc
icebp
in
idivb
sahf
adc
lds
inc
push
cmp
and
and
jp
int3
sbb
push
lahf
outsb
jo
testb
jmp
mov
aas
pusha
outsb
lret
repz
mov
movsb
push
xor
mov
mov
es
sub
mov
mov
add
leave
and
jg
and
inc
cmp
test
sbb
xchg
add
mov
out
add
add
scas
inc
aad
test
ds
stos
add
shll
cmp
mov
or
sbb
sub
out
sbb
imul
jge
mov
mov
xor
imul
icebp
dec
arpl
xor
mull
insb
bound
or
xor
scas
push
mov
enter
aaa
movsb
pop
sub
pop
inc
pop
adc
or
mov
repz
bound
loope
jbe
add
sbb
in
sbb
mov
xchg
into
dec
dec
pop
pop
mov
cs
pop
push
movsb
call
jnp,pt
sti
ja
pop
int
mov
xchg
dec
pop
cmp
adc
jle
or
ud0
fadds
mov
mov
dec
cmpsl
mov
pop
nop
inc
cmp
and
ss
cmp
add
xor
cmp
dec
cmp
xchg
fidivl
test
sub
dec
mov
stos
lret
jae
jmp
cmpsl
into
pop
mov
cli
les
inc
loope
mov
cmpsl
ret
sbb
jle
pop
in
and
fstpt
test
imull
stos
in
into
inc
mov
push
leave
test
test
jmp
xchg
test
xlat
and
std
pop
loope
outsl
and
jecxz
mov
ds
ret
xchg
pop
ret
add
fwait
mov
jp
ds
cmpsl
popf
sbb
mov
loope
icebp
or
arpl
mov
sbbl
dec
outsl
shr
mov
outsl
pop
inc
mov
leave
pop
inc
rcr
and
and
mov
out
pusha
jmp
xor
pusha
inc
idiv
jle
push
adc
cmp
or
xor
push
shl
sbb
push
loopne
or
dec
xor
xor
push
mov
rorl
test
mov
cmc
hlt
repz
dec
push
jne
lret
jmp
fimull
insb
adc
add
loop
adc
loopne
stos
fildll
scas
das
jae
lret
test
outsb
and
mov
imul
popf
ja
loope
das
adc
jecxz
cli
adc
jb
shl
fidivrl
mov
inc
mov
aam
pushw
push
std
loope
push
push
shll
mov
leave
sbb
sbb
mov
subl
mov
inc
push
push
sbb
ljmp
out
outsl
mov
xchg
adc
movsb
sbbl
pushf
and
hlt
and
mov
and
cs
mov
test
adc
sub
xor
outsb
in
adc
add
sti
xchg
out
aas
sbb
clc
aaa
sub
int3
adc
push
pmulhw
test
jmp
mov
iret
pusha
cmp
push
mov
imul
sahf
pop
popa
mov
adc
inc
pop
xchg
jle
mov
imul
mov
sub
xor
imul
stos
push
test
clc
inc
cmpl
orb
mov
mov
incl
stos
imul
and
adc
xor
fadds
mov
pusha
xorb
shlb
push
lahf
imul
jl
jnp
xor
pop
jo
ret
fstpt
and
sbb
push
scas
sbb
mov
sti
loop
ja
mov
inc
push
mov
jmp
lea
imul
movsb
call
icebp
pop
push
sbb
movsl
out
pop
test
shll
enter
sahf
lret
inc
repz
not
fistps
sub
push
xorl
or
jb
sbb
jg
pop
adcb
jp
hlt
iret
je
add
fistps
adc
mov
xor
or
jne
leave
fisttps
scas
push
test
pop
mov
pop
stc
mov
pop
int
mov
mov
cmp
mov
pushf
xor
je
imul
push
or
fistps
push
sbb
inc
js
fimull
enter
movb
inc
icebp
icebp
adcb
das
out
rol
imul
and
cmp
dec
fists
add
add
aas
je
sbb
mov
jge
and
das
inc
cmpsb
cmp
xchg
jo
jp
movsb
fdivr
mov
cmp
sbb
dec
cmc
mov
pop
jg
mov
jge
mov
sbb
shll
or
mov
xchg
add
into
add
mov
les
push
in
les
cmp
psraw
fildll
movsb
lods
outsb
mov
and
pop
out
sbb
data16
movsb
jecxz
mov
push
addr16
sbb
jp
aam
pop
jo
xor
jbe
adc
mov
xchg
jl
stos
ja
jmp
cmpsb
inc
test
ss
or
push
test
insb
aas
pop
repz
lret
inc
outsb
nop
inc
inc
jns
push
mov
fisttpl
mov
add
movsb
xchg
rcll
vprotd
sbb
xchg
lock
scas
adc
dec
sbbl
cwtl
dec
push
fstp
dec
scas
in
out
call
push
imul
rclb
jl
add
outsb
jns
jae
push
dec
test
mov
cmc
or
or
push
sbb
jge
adc
jge
fdiv
and
sbbb
or
xchg
mov
hlt
mov
mov
ret
out
mov
push
inc
int3
roll
dec
fmull
mov
fnstcw
ds
aaa
js
dec
stos
cld
sbb
adc
into
stc
mov
pop
sbb
mov
call
pop
js
adc
call
loopne
imul
lods
jecxz
roll
js
outsb
adcb
in
push
cmp
dec
int3
pop
cmp
dec
popa
iret
ficoms
and
jle
aad
mov
cmpsl
mov
sub
movsb
push
popa
ljmp
dec
push
fs
icebp
or
cmp
scas
xchg
icebp
nop
pusha
mov
dec
das
popf
hlt
or
xchg
cmp
rcrb
jp
adc
sbb
mov
test
mov
mov
pop
dec
dec
sub
popa
add
movsb
adc
shr
pop
push
cmp
movsb
cs
mov
data16
jbe
les
mov
xchg
xor
cwtl
fadds
add
jge
mov
dec
cmc
js
mov
test
stos
frstor
outsl
or
jp
in
adc
cmp
loope
sub
adc
icebp
xchg
jmp
ret
in
pop
ret
pop
cltd
push
iret
in
ret
and
jnp
inc
pop
rorb
dec
cld
stos
mov
pop
out
xchg
int
and
push
pusha
pop
pop
mov
push
aad
in
data16
mov
test
adc
add
subb
mov
mov
popa
popa
mov
jle
fs
adc
cmp
ret
stos
inc
movsb
jge
push
pop
jmp
loop
inc
inc
dec
lods
out
sbbb
scas
sbb
dec
xchg
jge
lea
mov
in
stc
add
sbb
add
fisttpl
and
out
hlt
adc
hlt
icebp
xor
lds
dec
jo
jge
xor
adc
xchg
jp
clc
ss
les
pop
stc
jle
inc
stos
push
pop
aas
aas
xor
outsl
fcomip
xchg
inc
inc
jle
lcall
idivl
in
xor
mov
mov
mov
cmp
push
add
lahf
pop
enter
lcall
fisubrs
or
scas
jo
int
lock
push
cli
inc
movsb
pop
xor
outsb
or
das
out
xchg
fistpll
pop
adc
mov
in
cs
in
cld
mov
mov
lcall
out
mov
mov
sub
and
or
fisttps
and
mov
popf
and
stos
outsl
cmp
ljmp
or
lret
and
pop
jle
or
xchg
pop
ja
add
add
je
pushl
cs
sbb
outsb
mov
dec
lea
imul
push
mov
adc
in
out
std
xchg
js
in
cmc
les
sti
inc
hlt
or
sbb
sbb
inc
test
sbb
in
mov
bound
or
dec
push
arpl
dec
dec
push
subl
call
sbb
inc
mov
int
loope
or
je
xchg
mov
mov
cmp
mov
inc
pop
shr
xor
jge
push
fldenv
xor
popl
repz
mov
mov
loop
xor
insb
mov
dec
rolb
out
xor
mov
and
mov
push
and
dec
pop
pushf
imul
test
enter
movsb
loope
adc
fxch
testl
sub
push
sub
loop
test
ja
scas
xchg
popa
mov
cmpsb
cmpb
xor
out
scas
dec
jp
dec
dec
adc
lcall
push
leave
jnp
call
mov
xchg
adc
push
bound
jg
sbb
cmc
cmpb
mov
pop
repz
add
in
mov
push
test
loopne
xor
aam
push
cmpsb
jl
pop
sub
inc
inc
sub
cmp
lock
cmc
shll
mov
jmp
xchg
call
jo
mov
in
sbb
sbb
movsb
popf
xchg
cmp
xchg
das
hlt
inc
or
mov
jle,pn
repz
adc
in
int
sbbl
out
and
or
outsl
mov
push
pop
ljmp
ror
sub
shrd
and
mov
frstor
sbb
or
cli
pop
add
jecxz
sarl
fisttps
ljmp
cmp
shrb
or
leave
test
mov
repnz
mov
andl
stos
add
jnp
lahf
aaa
adc
cli
add
leave
push
adc
inc
inc
add
sbb
mov
or
aad
mov
daa
pushf
inc
adc
and
lret
popf
jmp
ljmp
mov
and
jmp
jno,pn
cwtl
mov
dec
add
inc
hlt
mov
inc
loop
pop
and
int
roll
inc
ja
jl
in
sahf
in
decl
rol
lods
ljmp
lcall
loope
inc
xor
mov
loopne
pusha
jle
add
loope
pop
pop
movsl
push
ja
imul
add
jns
push
fistps
dec
cmpsl
lret
add
sub
jge
and
scas
add
jnp
iret
mov
test
call
mov
pop
popa
and
int
xlat
test
fcompl
sbb
out
repnz
dec
stc
mov
je
fidivl
jo
dec
test
imul
dec
lea
inc
popa
push
negb
pop
imul
js
push
cmp
dec
nop
pop
cli
in
pop
jns
inc
xor
push
dec
cmp
jnp
adc
pop
pop
repz
mov
outsb
sub
xorb
lret
scas
push
les
jbe
add
fld
lret
fs
mov
addr16
sbb
and
inc
insb
adc
nop
dec
sti
daa
ljmp
data16
push
jmp
outsl
in
es
outsl
pop
inc
cmp
xor
sub
adcb
sarb
sbb
push
add
and
pop
out
sub
and
cli
sub
jbe
movsb
push
fbstp
imul
xchg
daa
sbb
add
int3
xchg
xchg
popa
mov
xchg
mov
xchg
sub
scas
sub
inc
lea
push
push
inc
sub
mov
and
push
xchg
jmp
lcall
sti
lahf
dec
jg
jo
scas
jns
jmp
mov
inc
push
testl
pop
inc
lret
shl
push
dec
sub
in
inc
ds
adc
insb
mov
icebp
adc
push
pop
movsb
outsl
push
pop
cmp
stos
stos
and
mov
sub
mov
push
nop
adc
push
sarb
mov
iret
out
aas
jnp
rcll
push
xchg
mov
mov
jle
cmpb
jnp
xor
imul
fistps
arpl
add
and
cltd
lahf
cmp
lea
icebp
sub
fdiv
mov
rcr
cmpsb
jae
sbbl
cwtl
loop
pop
adc
enter
or
sbb
and
mov
sbb
xchg
mov
jne
xchg
jnp
in
jnp
dec
ss
dec
sbb
and
mov
negb
jp
xor
popa
and
out
push
xor
push
sub
ret
push
iret
std
icebp
out
lea
mov
inc
icebp
push
jge
movsb
mov
adc
mov
sti
mov
push
xchg
adc
inc
add
dec
adc
jle
jo
lds
gs
dec
cmp
lcall
xor
mov
mov
lock
and
jo
add
out
shll
into
aad
pop
dec
hlt
mov
sti
xchg
cmpsb
push
xchg
adc
sub
and
mov
sbb
pop
or
or
test
mov
into
fsubl
call
cmpsl
lds
xchg
jp
pop
sbb
mov
mov
lret
dec
inc
pushf
fbstp
jmp
scas
js
sbb
adc
dec
clc
sub
lods
inc
mov
aad
pop
divb
repz
cmp
xorl
hlt
cmp
ds
shr
shl
mov
jnp
rol
mov
or
into
or
cmp
inc
and
jl
in
xchg
jl
push
push
fiaddl
push
cmp
leave
ljmp
test
xor
gs
add
iret
cmp
sub
loop
sub
ljmp
jmp
ret
aad
in
xor
or
add
aad
testl
sub
cmp
add
popa
sbb
sbb
or
test
shlb
sti
sub
cmpsb
inc
mov
sbb
imul
lds
adc
cmp
and
sub
mov
mov
je
cmc
popa
mov
sbb
shll
and
fldenv
fwait
out
icebp
push
mov
pop
jecxz
push
aad
lret
in
xchg
out
mov
ss
add
dec
cs
jg
and
popf
jne
or
mov
pop
imul
inc
sub
add
pop
sti
movsl
arpl
sbb
and
sbb
into
cmp
sub
rclb
jg
test
mov
int
dec
xor
add
xor
enter
inc
shld
sti
nop
out
jns
bsr
jp
es
cmp
pop
add
inc
sub
loope
xor
mov
dec
nop
incb
pop
sbb
sub
movsb
imul
movsl
ret
dec
jo
add
ret
orb
push
dec
aad
mov
inc
bound
inc
mov
fisttps
adc
cmpsb
outsb
inc
sbb
dec
outsl
mov
inc
addb
aaa
shr
sub
in
sbb
inc
fisubs
xchg
lcall
js
hlt
sbb
adc
ss
adc
aas
psubd
push
mov
jecxz
std
gs
pusha
ljmp
insl
push
iret
into
cmp
xor
mov
mov
mov
and
xor
xlat
popa
cmpsl
pop
stos
mov
mov
fmuls
cmp
cld
sbb
js
aas
aam
je
gs
or
movsb
andl
inc
push
outsb
int
pop
push
mov
xchg
rolb
bound
xchg
daa
mov
stos
mov
js
or
shlb
jmp
add
dec
inc
pusha
insl
and
loopne
inc
ficompl
jmp
outsl
xchg
nop
jb
aam
test
aam
add
mov
hlt
out
faddl
and
jo
jo
inc
inc
imul
fnsave
movsb
or
ss
ret
xor
pop
pop
push
and
imul
inc
inc
inc
jmp
push
fsub
clc
jbe
push
sub
popf
adcl
jno
sar
or
ss
pushf
jp
mov
and
dec
mov
mov
fstps
lret
jp
insl
dec
sbb
stos
cli
mov
cmp
lahf
cmpl
sub
mov
pop
dec
aas
lcall
mov
mov
mov
jae
mov
add
mov
mov
mull
out
cld
push
cmp
mov
shrl
xor
int3
sub
mov
pop
cmp
out
adc
ret
hlt
xor
adc
or
popa
xchg
mov
and
and
mov
lods
jmp
ljmp
or
clc
xchg
das
fcmove
and
scas
dec
sbb
out
mov
jmp
imul
add
mov
loop
mov
or
fwait
es
mov
xchg
stos
cmp
push
adc
xor
sbb
ror
cmp
jns
sbb
lahf
js
mov
dec
dec
das
aam
in
and
bound
sbb
jb
out
xchg
sbb
lods
fwait
add
adc
dec
pop
or
mov
xor
jnp
sbb
mov
pusha
ds
mov
mov
mov
gs
pop
mov
xchg
ja
icebp
hlt
outsl
fwait
popf
fwait
push
loopne
dec
cli
out
into
pop
sahf
xchg
dec
loopne
pop
ljmp
insb
movsb
xchg
xor
adc
jecxz
lock
fmuls
das
into
adc
lock
add
sbb
dec
cmp
fs
rolb
scas
push
les
cs
dec
xchg
outsl
lds
cli
jo
pop
push
pop
bound
int3
insb
ficompl
mov
xchg
add
stc
or
insb
mov
sub
inc
dec
addr16
push
enter
or
or
cmc
popa
std
cs
jo
shlb
jle
stos
ja
sub
add
in
inc
gs
sub
icebp
adc
test
loope
xchg
bnd
adc
jge
fldt
movl
fdivrs
lods
sbb
ss
pushf
pushf
pusha
inc
jg
jae
or
shrl
mov
stos
les
shrb
subb
xchg
jnp
adc
outsb
stos
push
ss
push
jl
add
stos
jb
inc
xlat
inc
sub
lret
ret
stc
call
fsubl
or
xchg
fildll
in
xorl
and
dec
es
lock
xchg
repz
lods
push
outsb
orl
shll
and
inc
mov
pop
bound
test
sub
negl
mov
push
cs
mov
mov
sbb
sbb
jae
cs
ljmp
mov
sub
jns
mov
push
movsl
frstor
xchg
jmp
mov
frstpm(287
ds
stc
rclb
fnstcw
ljmp
pop
in
cmpb
test
into
xchg
pop
push
mov
push
mov
test
clc
inc
lock
jbe
inc
mov
shl
in
cmp
stc
xor
hlt
ljmp
pop
jno
call
psubw
add
cmc
inc
xorl
mov
std
movsb
out
xchg
dec
push
pusha
inc
mov
xlat
xchg
imul
mov
test
adc
outsb
lea
js
mov
mov
cmp
imul
iret
lret
inc
xchg
cmc
lea
fstl
dec
out
or
aad
aaa
mov
sub
or
add
mov
sahf
out
xchg
movsl
push
adc
cmp
shll
push
lods
or
mov
pop
jb
or
es
loopne
cmc
mov
cwtl
mov
int3
mov
leave
xlat
clc
pop
test
lea
cmc
ss
shlb
pop
push
sub
and
insb
jmp
adc
imul
xor
lods
mov
dec
cmpsl
mov
sub
inc
adc
xor
mov
in
jo
mov
mov
adc
mov
daa
pop
dec
stc
pop
push
lahf
pushf
mov
push
jl
ja
rcr
imul
or
js
in
jns
jb
pushl
jne
lahf
fcmovb
int
adcb
cmp
fists
mov
lods
xor
pop
jo
xor
lock
adc
mov
adc
sub
in
and
mov
ja
xchg
div
shrl
scas
adc
ret
or
pop
sti
add
mov
lcall
imul
cmovl
test
test
sub
jl
jb
or
pop
cmpsb
cmc
dec
jo
loop
test
mov
mov
xchg
gs
mov
or
lock
mov
push
loopne
movsl
stc
imul
aaa
jg
jbe
jb
dec
test
ss
push
fwait
jmp
test
inc
outsb
insb
cli
movsl
popa
sbb
test
add
sbb
jecxz
dec
ljmp
iret
xchg
sub
repz
and
insl
fisubs
movsl
ds
and
nop
push
and
lock
cmpsb
xchg
add
repz
sub
hlt
test
mov
inc
imul
sbb
jbe
add
xchg
in
repnz
ret
cmpsl
add
std
icebp
lods
mov
outsl
adc
cld
fs
out
fs
lea
dec
fmull
lret
dec
jge
jb
and
ss
scas
inc
xchg
mov
or
mov
pop
lods
mov
and
sub
inc
mov
cmp
cmpb
gs
pop
xchg
jmp
xchg
call
sub
push
or
outsb
cltd
mov
jge
cmp
cmp
jo
inc
pop
pop
pop
cmp
jbe
lret
in
fcompl
cmpb
cmp
push
fs
scas
inc
fnstsw
mov
shl
shlb
jmp
mov
mov
xchg
leave
jge
ja
dec
lcall
and
dec
jae
mov
popa
lret
and
cwtl
pop
xlat
fimuls
dec
mov
ret
sti
sub
iret
test
and
mov
jp
mov
incl
mov
jo
out
xor
cmp
aad
mov
lahf
les
push
into
lea
mov
pop
pop
xor
loop
dec
cmpb
mov
cmp
in
cmc
and
inc
sbb
pop
inc
iret
xor
aas
insl
aad
push
mov
lret
mov
sub
popf
in
test
les
pop
adc
stos
mov
mov
push
or
pop
inc
test
sub
fdivrl
nop
mov
and
or
clc
adc
out
jle
inc
jno
or
ja
inc
dec
xchg
sub
sahf
jo
rol
jmp
mov
pop
inc
lret
mov
jae
shll
xor
xchg
jl
shll
enter
sahf
mov
data16
addr16
mov
or
fmuls
data16
lea
pop
push
out
ror
cmp
jne
iret
fsts
xor
test
outsl
dec
pop
aam
bound
cli
jae
ror
jecxz
and
xchg
in
xor
push
adc
jae
xor
push
enter
fs
and
push
jno
ja
cmp
enter
clc
xchg
add
dec
xor
or
mov
stos
adc
mov
inc
and
inc
cli
add
popf
xchg
push
imul
ljmp
mov
test
adc
xchg
sahf
mov
push
stos
das
or
clc
daa
mov
testb
dec
or
xchg
in
mov
pushf
or
push
mov
cmpsl
test
scas
ret
and
outsb
orb
pop
jle
divl
mov
sub
aam
push
sbb
lret
pop
imul
sbb
bound
mov
outsb
cmp
dec
xchg
dec
dec
inc
loopne
test
or
arpl
orb
out
in
dec
stc
mov
inc
repnz
and
jmp
ja
add
dec
sbb
out
mov
add
int
adc
xor
dec
jmp
mov
stos
sub
shll
gs
gs
xchg
stos
xor
imul
mov
pop
divb
and
shrl
xlat
jg
ret
xor
pop
mov
pop
imul
pop
aaa
sbb
sub
dec
jle
dec
pushf
push
pop
mov
out
loopne
ja
icebp
movsl
mov
xlat
jp
rclb
inc
andb
mov
imul
mov
adc
insl
mov
pop
loopne
loop
leave
and
mov
iret
xor
sti
cmp
pop
fs
pop
scas
jnp
lea
cmc
jg
ljmp
add
es
je
dec
rorl
iret
fadds
rorl
out
test
cli
mov
sahf
sbb
xor
nop
xor
sbb
pop
cmp
or
jnp
xchg
test
in
fstl
mov
fs
daa
pop
inc
inc
out
ret
int3
jp
mov
dec
js
xor
das
sbb
sahf
mov
pop
adc
dec
aaa
loope
popa
add
push
iret
or
xchg
loop
pop
mov
dec
inc
xor
arpl
cmc
inc
sahf
leave
push
push
loope
pop
into
pop
pop
stos
jbe
loopne
push
or
xor
ffree
pop
aad
ret
or
leave
je
sub
mov
adc
xchg
push
outsb
lds
pushf
sub
mov
test
lret
in
sub
lods
inc
xor
pop
scas
fs
push
push
sbb
dec
mov
push
test
cmp
fsts
pop
jmp
mov
lret
xor
pop
ljmp
sbb
repz
aam
dec
mov
xlat
and
fwait
out
inc
inc
mov
jle
xchg
fwait
inc
std
xchg
out
outsl
dec
sbb
in
rcll
mov
or
ret
xchg
sbb
loopne
mov
sub
mul
jl
in
jge
loop
cmp
imul
movsl
ret
sbb
js
dec
out
in
cli
int3
push
js
xchg
cmp
pop
sub
pop
test
or
adc
cmp
or
dec
jo
pop
lock
add
andl
push
cmp
into
push
push
stos
fisubl
scas
or
add
lods
sti
les
ljmp
in
pop
stos
pusha
rorl
push
cmp
push
fisubrl
arpl
addr16
in
cmp
js
insl
mov
adc
mov
cltd
xchg
push
cs
add
sti
xchg
enter
adc
adcb
push
xor
nop
aas
scas
adc
sub
loope
sub
cmp
xchg
into
jg
mov
stc
inc
aad
xchg
inc
mov
xor
xchg
jmp
jne
imul
xchg
xchg
sbb
jnp
ret
leave
loope
ret
sbb
sbb
jne
shll
ret
iret
cmp
mov
dec
xor
xor
pusha
sub
jmp
mov
lea
mulb
lcall
mov
push
mov
flds
lock
sub
loope
push
mov
xchg
cmp
cwtl
cwtl
xchg
js
aas
cltd
decl
aad
icebp
fmull
mov
out
cmp
clc
jge
jno
or
push
mov
fs
arpl
xorl
adc
test
sub
or
daa
xchg
push
cltd
loope
out
xor
xor
std
sub
nop
mov
jnp
js
inc
jecxz
in
outsb
push
std
hlt
les
mov
mov
hlt
mov
xor
sbb
xor
push
jecxz
fdivrp
cmp
ja
mov
sbb
lret
sub
push
and
dec
stc
add
insl
push
jge
outsb
int3
push
in
popf
and
sbb
cmp
movsl
lods
sbb
mov
pusha
and
outsb
loope
sbb
scas
inc
hlt
jmp
jg
sub
xchg
arpl
add
lds
ret
adc
frstor
cmc
add
xchg
gs
lods
sub
insb
aaa
ja
cmp
mov
inc
test
insb
mov
loopne
sbb
mov
adc
jle
mov
ds
sub
in
xor
sbb
in
xchg
lods
pop
mov
xchg
push
repz
and
lea
pminsw
pop
outsl
std
push
jmp
stos
call
jle
xchg
adc
inc
mov
pop
pop
xchg
sahf
push
sub
dec
loopne
mov
pop
shl
ds
pop
pusha
leave
aas
cmp
push
adc
aam
testl
xchg
adc
inc
fidivs
push
loop
sbb
out
lods
mov
cmp
and
aam
xor
mov
jo
aam
addb
insb
push
outsl
movsl
sub
into
das
je
sarb
xor
xor
ljmp
addb
adc
push
jb
nop
bound
test
outsl
icebp
aam
or
incb
lret
sbb
flds
movsl
mov
push
mov
push
imul
lret
mov
xchg
dec
inc
stos
je
jo
outsl
xor
in
xchg
insl
enter
dec
movsl
fs
cmp
and
mov
inc
das
clc
in
sbb
hlt
mov
outsl
lret
mov
jg
ret
and
scas
pusha
push
xchg
or
imul
sbb
fildll
cmovnp
shlb
add
fiadds
xor
les
cmp
pushf
lcall
mov
shl
xlat
pop
outsl
mov
es
xchg
lods
or
sub
inc
mov
js
mov
xchg
inc
outsl
xchg
je
ljmp
xchg
add
mov
inc
enter
arpl
adc
or
rorb
movsl
cld
mov
inc
fimuls
scas
sarl
in
jnp
dec
ja
jbe
or
push
push
pop
outsl
add
scas
or
xchg
pop
or
mov
int
cltd
jmp
call
int
in
aam
and
ljmp
out
lds
shlb
mov
lahf
jno
cltd
hlt
push
jl
xlat
orl
lahf
cmp
testb
and
push
mov
roll
inc
mov
ds
imul
mov
loope
pop
inc
ret
jne
xchg
pop
pushf
fsubs
in
daa
xor
sbb
push
xor
enter
cwtl
or
push
arpl
mov
cmc
out
xchg
mov
jb
fisubrl
je
cmc
ja
sti
daa
mov
int
inc
cmc
xchg
mov
dec
xchg
sar
xlat
dec
and
shlb
leave
stos
std
sbb
and
push
push
mov
xorl
stc
adcl
loop
add
pusha
mov
jbe
filds
or
xchg
and
sub
loop
loope
cmp
push
pop
or
pop
xchg
lret
jnp
sahf
test
mov
fisubrs
cmp
mov
cs
adc
mov
imul
in
adc
dec
imul
adc
dec
mov
jmp
jle
push
cld
cli
test
xchg
stos
sub
out
or
inc
mov
out
pop
sbb
lahf
ret
jo
ret
mov
int3
lret
and
scas
ret
and
jmp
adc
sti
scas
fldl
xchg
xor
cmp
ja
ficoml
test
mov
gs
pop
push
sub
xor
mov
jae
test
clc
cmp
inc
out
fldpi
push
popa
out
movsl
lret
xchg
fsubrp
xorb
adc
mov
shrl
test
dec
xor
push
pushf
jg
dec
and
xor
or
test
add
push
sbb
jl
fldl
enter
cmp
scas
scas
rcll
dec
repnz
pop
les
adc
in
pop
mov
out
inc
pop
jmp
push
in
adc
push
jmp
xlat
movsb
mov
dec
js
jl
aas
imul
insb
mov
pusha
mov
sbb
data16
and
or
inc
in
pop
fs
fs
mov
lcall
xchg
dec
aas
aad
push
pop
pop
pop
pop
xchg
bound
mov
addr16
and
mov
inc
mov
mov
push
dec
pushf
dec
adc
sub
je
push
scas
xchg
movsl
push
rclb
out
add
push
adc
outsb
insb
or
xchg
int
or
js
popf
pop
mov
test
or
lock
clc
icebp
mov
repnz
cmpsb
loop
repnz
movsb
ficoml
in
sub
lods
nop
cs
mov
or
pop
popa
call
adc
push
sbb
xchg
inc
ljmp
orb
fnsave
cltd
xchg
cli
dec
xor
sub
adc
imul
sub
popf
cli
stc
mov
inc
push
push
call
lods
pushf
ret
pop
push
inc
popa
cmp
mov
int3
adc
wbinvd
pop
repnz
lods
in
in
rolb
or
lcall
adc
cmpb
dec
push
fcoms
and
jno
movsl
pop
or
outsb
mov
inc
aad
dec
cmp
inc
cmpsb
inc
mov
jecxz
jge
stos
or
jns
cmp
mov
jp
dec
test
adc
pop
pop
js,pt
rorl
adc
xchg
xchg
pusha
inc
sti
mov
jl
arpl
icebp
jmp
addr16
pop
adc
ret
gs
mov
fsubl
addr16
xchg
int
loopne
and
jecxz
cwtl
push
inc
out
aam
popf
mov
pop
or
xor
sti
aas
pop
out
push
push
shlw
mov
jecxz
bound
sub
inc
fbstp
sbbl
lods
rcrl
cmp
and
jl
fcompl
sbb
fsubrp
iret
call
movsl
push
inc
pop
insl
or
rcrl
stos
adc
push
cld
mov
in
or
mov
xor
pshufw
pop
inc
lcall
fildl
cmpsb
jg
xor
cmc
add
sbb
cltd
mov
or
jmp
std
push
ficompl
ja
xchg
fwait
pop
fistpl
cmp
rclb
arpl
fldt
jne
pop
lds
inc
inc
push
sbb
inc
mov
ljmpw
dec
mov
arpl
pop
cwtd
rcrb
sarb
push
inc
push
or
outsl
addr16
repz
add
addr16
ja
mov
xchg
in
test
pop
popa
out
add
out
sahf
loope
ret
into
mov
scas
rol
adc
push
arpl
sti
or
nop
leave
lret
aad
jl
lret
leave
cmp
push
add
add
pop
xor
or
mov
sub
inc
loop
int
xchg
pop
fdivs
mov
inc
xchg
les
push
xchg
add
xchg
js
xorb
jp
adc
sub
ficomps
pop
in
sub
adc
inc
fldl
stc
iret
adc
pop
sarb
jo
bound
dec
fs
xor
and
pop
jns
push
fdivr
test
test
mov
mov
shlb
loop
push
jl
xchg
rcrb
and
fsubs
dec
mov
imul
xor
or
fs
stc
popf
test
mov
or
dec
imul
popf
inc
jb
out
sahf
xorb
test
out
push
sbbb
jmp
inc
mov
mov
mov
inc
lock
jb
cmp
dec
pop
test
xor
insb
push
scas
cs
movsl
jae
xlat
fwait
out
sbb
xchg
test
sub
mov
lods
daa
mov
jne
or
mov
rol
jle
pusha
mov
js
adc
and
fisubl
cmpsb
mov
mov
mov
jg
pushf
push
adc
or
xchg
testl
inc
scas
hlt
push
xchg
push
gs
jg
mov
sar
jne
les
dec
push
adc
out
cmp
outsb
das
xchg
shrb
pop
enter
addr16
jae
and
cs
fs
adc
cltd
mov
jg
std
cmc
lods
dec
in
mov
jb
lods
aaa
jg
pop
xchg
jle
stos
aas
data16
outsl
push
sub
mov
cli
xchg
lea
cmp
dec
push
out
aaa
clc
lahf
test
insl
mov
lret
mov
lret
jne
fcompl
sub
scas
into
pop
jnp
lock
or
int3
pop
jp
and
loopne
push
push
out
dec
daa
lcall
xchg
pop
ja
jl
cmp
loope
cmp
inc
pop
xchg
dec
push
adc
insl
or
xor
pop
imul
push
cmp
and
popf
jbe
and
mov
daa
add
ret
sub
and
jle
push
add
cs
or
adc
stos
pop
sub
inc
sbb
mov
dec
rcl
stos
insl
push
lds
test
scas
cmc
mov
jge
xor
mov
lds
inc
lret
push
xchg
fsts
xchg
sbb
scas
scas
outsb
cld
into
jp
aas
jl,pn
stos
pushf
sub
inc
test
shrl
mov
in
cld
cmp
inc
ja
roll
lahf
clc
add
lods
movl
xchg
pop
addb
adc
mov
fwait
imul
out
mov
insl
inc
and
pop
mov
cmpsb
jae
stos
mov
sahf
ret
inc
pop
pusha
fists
push
fidivrl
test
add
aam
loopne
inc
lahf
pop
ret
xor
xchg
rcll
leave
lods
ds
mov
data16
xor
es
mov
mov
mov
dec
pop
pop
mov
sbb
mov
xor
xchg
divps
loope
xor
cmp
sbb
ds
pushw
loopne
enter
inc
les
cs
std
in
add
inc
popf
mov
in
stos
mov
shlb
jecxz
xchg
jae
movsb
sub
gs
adc
or
or
lock
pusha
pop
dec
jae
addr16
mov
fimuls
cltd
xlat
xor
mov
ret
mov
aaa
jge
mov
imul
mov
mov
push
and
jae
xchg
shlb
push
sbb
push
lds
pop
and
adc
mov
je
insb
loope
cli
mov
mov
insb
dec
into
cwtl
leave
movsb
cwtl
jno
push
or
mov
mov
mov
mov
int
cmp
shll
loopnew
mov
in
dec
out
sub
daa
xor
pop
js
sub
inc
mov
push
sub
mov
movsb
xchg
add
test
pop
jp
hlt
jae
mov
aam
les
psubusb
sbbb
repnz
decb
or
pop
sbb
xor
daa
mov
add
ljmp
jmp
mov
mov
adc
sbb
push
mov
pusha
stos
xorb
arpl
pop
or
cwtl
and
jb
pop
push
imul
inc
sub
pop
jno
cmp
roll
aam
adc
cmc
pop
add
inc
sti
mov
mov
shll
data16
mov
dec
popf
mov
mov
cmpsb
cmc
lds
push
xchg
jg
or
xor
out
leave
pop
xor
mov
cmc
inc
hlt
jecxz
fiadds
test
or
push
dec
mov
dec
mov
pusha
andb
movsb
lret
out
xor
pop
jnp
je
stos
enter
mov
test
and
add
add
out
lret
add
push
and
movsb
dec
xchg
bound
aas
xchg
jnp
sahf
js
sub
in
and
pop
adc
pop
pop
cwtl
xchg
fadd
xchg
lea
jbe
push
sub
add
test
mov
shlb
in
and
pop
dec
in
cmp
cwtl
jbe
clc
jnp
inc
cmp
jno
push
add
test
jmp
pop
cmp
aad
std
xchg
test
test
inc
rdpmc
jne
mov
out
roll
sbb
icebp
sbb
and
mov
inc
cmc
or
add
push
or
repz
pushf
add
cmp
aad
jbe
pop
pop
ficomps
inc
inc
xchg
shlb
lock
mov
rcl
and
test
push
jb,pn
pop
into
jmp
pop
cmp
fs
int3
or
gs
jne
dec
mov
push
in
dec
xchg
pop
mov
ljmp
outsl
psubq
pop
push
js
xchg
cltd
push
add
stos
dec
das
mov
jns
mov
pusha
in
add
in
add
lods
hlt
dec
xchg
imul
ds
stos
movd
push
push
or
xchg
insl
mov
xlat
xchg
jl
popf
push
mov
jo
cmc
inc
fstpl
sahf
mov
cmc
mov
adc
call
repz
or
sbb
pop
pop
jnp
sub
lcall
sbb
or
call
mov
cmpsb
cmp
mov
cmp
sub
lahf
lock
out
nop
jns
xchg
int
xor
aam
popa
mov
shl
xchg
mov
shr
addb
inc
divl
in
push
leave
mov
loopne
cmc
or
push
mov
daa
ss
hlt
cmpsl
stos
jge
cltd
jae
dec
pop
rcrb
push
rclb
jmp
fnstcw
fisubl
or
adc
xchg
clc
jp
xorb
xchg
lahf
or
mov
mov
js
mov
aam
es
aad
rcrl
adc
leave
shlb
adc
inc
and
jnp
add
cmc
or
push
enter
jl
sub
xchg
repnz
fimull
cli
data16
rcrb
mov
out
push
call
enter
dec
push
push
or
cmp
idivl
mov
sbb
inc
xor
les
jae
fsubs
xchg
shl
repnz
lods
and
lds
popa
pavgb
std
lods
popf
mov
xchg
mov
js
adc
sub
and
sub
popa
pop
ja
movsb
xor
lret
lahf
mov
sub
or
xchg
mull
imul
hlt
mov
pop
mov
shr
cltd
mov
xchg
push
lock
aad
outsb
lret
stos
xor
mov
jnp
jg
cs
pop
aaa
ja
add
lcall
dec
mov
cmp
mov
mov
add
push
sub
fdivs
mov
mov
or
push
std
into
int3
inc
adc
cmc
icebp
addr16
outsl
inc
popa
ljmp
inc
cmpsb
fbld
ljmp
inc
sub
sub
and
dec
jnp
lock
insb
lret
or
xchg
push
int3
jnp
or
mov
jge
dec
shlb
and
mov
dec
push
test
int
sbb
add
clc
addb
sarb
adc
in
frstor
pop
lahf
in
popf
aaa
idiv
xor
or
or
mov
or
jmp
lea
daa
jmp
fsubrl
jne
push
mov
jne
ds
inc
js
sub
mov
sub
mov
js
rol
push
mov
sbb
sub
aaa
dec
xor
mov
inc
add
mov
and
daa
mov
cmp
pop
pop
inc
pop
movl
shll
lret
sti
les
or
out
jb
push
scas
push
xchg
scas
lea
cli
neg
and
push
pop
sti
fmuls
fwait
test
addr16
pop
adc
cmpsb
cli
and
adc
pop
push
mov
push
fst
push
jns
cli
dec
xor
mov
lods
iret
mov
jno
jp
adc
cmc
jno
and
inc
les
jmp
hlt
sarb
out
ljmp
xlat
xor
fsubrl
add
pop
test
cmc
std
mov
outsl
xor
test
repnz
mov
xchg
shrb
rol
leave
mov
dec
testl
or
pop
xor
xor
lret
pop
enter
sbb
out
push
push
pop
xor
adc
fsubs
out
jne
adcl
pop
pop
rcrl
mov
sub
into
aas
lret
lock
fldlg2
punpcklbw
mov
enter
imul
jmpw
push
aaa
add
pop
or
push
scas
adc
cmp
pop
cltd
xor
push
cmpsb
out
xchg
mov
jecxz
das
in
loop
push
xor
loopne
out
jp
push
adc
cmpsb
popa
stos
cmc
sbb
mov
xchg
shld
push
jmp
lret
frstor
sar
mov
dec
cmpl
mov
jae
mov
cmp
lahf
ror
std
repz
stos
adcb
mov
push
jne
mov
lds
inc
repnz
sub
mov
sahf
fists
jno
cmp
pop
xor
cwtl
fucomi
test
lret
lret
leave
xchg
jle
add
outsl
inc
adc
mov
jg
out
mov
push
insb
popf
stc
dec
mov
stos
push
decl
icebp
insb
hlt
push
mul
adc
test
jmp
loopne
daa
popa
clc
inc
cli
movsb
fimuls
mov
inc
imul
aas
shll
xchg
scas
push
insb
xchg
inc
popa
fsubrl
pop
je
push
mov
out
dec
ljmp
mov
out
mov
push
push
push
or
add
mov
test
jae
xor
out
add
mov
cmp
jne
jno
loop
xorl
jle
shll
cltd
out
aaa
jge
pop
xchg
dec
shll
icebp
inc
in
aad
repz
adc
stos
add
cmp
xor
or
clc
repnz
and
mov
js
pop
add
subb
fsubrl
mov
fsubr
jmp
xchg
sbb
xchg
mov
loope
add
scas
call
fsubrs
imulb
pop
rclb
push
dec
mov
pmaxsw
push
jmp
out
repz
sub
adc
mov
add
cmp
fimull
out
jae
mov
add
xor
push
int
push
fsubs
mov
pop
or
and
loop
fimull
lcall
pop
bnd
dec
out
cs
cmp
adc
repnz
sub
cwtl
mov
pop
cmp
push
sub
jmp
test
xchg
mov
fstpl
mov
cmpsb
add
push
aaa
mov
or
ret
fdivrp
push
insb
or
mov
mov
pop
sbb
adc
pop
jbe
xor
and
push
bswap
add
jne
cmpsl
add
or
fstpl
and
fwait
push
std
cltd
mov
hlt
icebp
inc
movsb
outsb
ret
xor
nop
leave
add
inc
dec
mov
jecxz
sahf
lock
notl
shrb
adc
cld
mov
dec
jge
add
fwait
sub
mov
jo
pop
iret
xchg
mov
iret
jae
xchg
sahf
jb
iret
roll
iret
cmc
jne
imul
push
mov
ds
mov
mov
push
test
lret
inc
test
sub
mov
cmp
in
mov
jae
outsb
stos
das
and
shrl
jmp
cld
xor
inc
xor
fsubl
mov
ficompl
mov
inc
cwtl
movsb
mov
ss
xchg
push
dec
inc
lods
fwait
das
popf
sbb
sti
mov
in
or
sub
lock
outsb
adc
and
or
jns
xchg
mov
adc
lods
xlat
fcmovu
sub
add
mov
gs
insl
stos
inc
pop
jbe
mov
add
xor
mov
mov
adc
out
adc
mov
cltd
js
pop
mov
jno
add
jle
test
fwait
xchg
mov
scas
pop
jne
push
scas
es
cld
divl
mov
mov
push
mov
xchg
add
dec
xchg
arpl
pusha
std
sbb
mov
or
data16
xchg
mov
or
cmpsb
jecxz
mov
xchg
mov
inc
dec
in
push
push
xchg
mov
push
lea
in
sub
jb
inc
jae
ret
cmp
or
int3
cmpsl
pop
adc
mov
xor
mov
scas
jmp
fprem1
xchg
jo
mov
std
jp
jne
js
mov
shlb
jne
idivb
rorl
add
movsb
lret
sub
cld
xor
stos
ljmp
cmp
test
dec
sbb
fstpl
idivb
dec
aaa
call
or
and
adc
nop
repz
and
pop
mov
xchg
mov
lock
icebp
ljmp
adc
mov
sub
inc
loopne
jb
xor
fsubl
fs
mov
loop
xlat
and
pop
sbb
int
sub
aaa
testb
mov
dec
lcall
cmpsl
mov
or
fbstp
and
je
ds
jg
loope
xchg
jno
sahf
pushf
xchg
lods
fldl
push
cmp
mov
jecxz
or
cmp
pop
in
adc
add
cmp
xor
inc
jne
ret
lods
fidivrs
jb
inc
xor
pop
mov
pop
cmp
outsl
cwtl
movsb
or
addr16
int3
int
cmpsl
xlat
xor
pop
inc
inc
pop
xchg
cmp
int3
sbb
mov
cmpsb
pop
sahf
repz
jne
sbb
ret
dec
cs
cs
jns
mov
mov
inc
in
test
cmp
adc
rclb
pop
shrb
out
adc
rol
inc
lret
sub
xchg
insl
adc
jno
rorl
inc
sub
cmp
adc
aam
xor
cmpsl
sub
xlat
ds
test
daa
mov
xchg
jne
hlt
sbb
mov
scas
xor
pop
and
icebp
jb
add
and
je
mov
testb
rcr
dec
rol
mov
in
adc
popf
mov
xchg
rcl
inc
int
mov
insl
mov
ss
icebp
ds
leave
push
mov
xor
es
or
ds
js
or
xchg
mov
rcrb
aam
pop
stos
sub
ret
fldenv
sub
imul
movsl
mov
xchg
lahf
sbb
outsl
fs
jl
jge
dec
out
in
clc
mov
mov
icebp
insl
addr16
fucom
aam
or
dec
sub
fists
or
sub
stc
push
pop
pop
mov
mov
sarb
lea
push
faddl
int
add
cmp
push
mov
jg
imul
push
pusha
mov
xchg
shrb
daa
test
push
enter
jno
or
es
fcomi
das
fs
lds
add
push
in
dec
out
aad
push
push
push
out
lds
scas
and
daa
push
aam
es
and
dec
out
add
jl
mov
adc
dec
js
mov
jne
jecxz
lahf
sbb
outsl
adc
inc
mov
fisubl
mov
adc
movsb
imul
pop
and
fs
xchg
mov
arpl
repz
adc
js
inc
mov
inc
xor
imull
popf
cmp
xchg
sub
sub
xor
ljmp
sub
inc
mov
rcll
inc
outsb
aam
je
lcall
fs
out
std
jecxz
icebp
sbb
popf
push
mov
xchg
dec
mov
cwtl
gs
push
push
push
out
pop
mov
and
div
leave
push
fs
mov
aam
inc
pop
cmp
lret
inc
frstor
xor
pop
in
sbb
sub
inc
jne
cwtl
push
adc
std
cmp
hlt
and
cs
imull
into
div
add
adc
testb
fcom
sbb
ja
sbb
into
cmp
push
mov
dec
imul
mov
in
mov
adc
push
mov
xchg
aaa
icebp
iret
outsl
jne
push
xchg
fisubs
xchg
push
pusha
sbbb
dec
lds
into
xor
gs
jb
ret
test
mov
lret
add
imul
cltd
call
xor
cmp
lahf
adc
test
push
inc
nop
ret
pop
cmc
repz
cld
fbld
das
push
push
lahf
lds
or
int
pop
cs
insb
incl
cmp
cmpb
aaa
cmc
inc
xchg
add
sarl
repnz
pusha
jle
sub
bound
aas
loop
dec
loope
pop
cld
in
mov
cmpsb
mov
aad
dec
stc
jl
aad
mov
dec
aaa
jns
pop
dec
mov
scas
scas
lcall
xchg
cmc
rclb
push
sub
add
ds
mov
hlt
dec
adc
mov
cmpsl
cld
adc
insl
jno
leave
cwtl
inc
xchg
add
sub
mov
push
mov
stc
add
jbe
inc
pusha
into
cmpsb
cmp
jae
mov
add
xchg
and
cmp
insl
test
inc
ds
lods
iret
leave
mov
push
inc
mov
inc
repz
sbb
ret
shrb
call
sbb
inc
or
mov
xor
cmpsb
icebp
stos
inc
xchg
cmp
dec
adc
adc
xor
ljmp
rcrl
repz
xchg
fsin
sbb
inc
ja
nop
pop
int
sahf
imul
stos
leave
test
pop
sub
mov
dec
movsl
fwait
dec
fst
fwait
xchg
loopne
pop
iret
fiaddl
cmp
push
pop
cs
testl
lret
pop
decb
int
xchg
cmc
mov
in
and
xchg
ja
leave
lea
sahf
fnstsw
sub
inc
insl
jnp
inc
xor
in
sbb
pop
popl
cmp
ret
rol
push
pop
mov
mov
icebp
aad
or
test
dec
lods
push
inc
xor
outsl
inc
rolb
aad
jnp
xchg
cli
cltd
push
sti
in
mov
ja
push
notl
dec
sbb
out
sbb
push
cld
data16
test
dec
push
call
aas
lahf
xor
sahf
sub
sbb
mov
add
lods
dec
dec
jbe
and
rcl
pusha
mov
cmpsl
sbb
sbb
dec
inc
push
js
test
test
mov
and
test
pop
leave
cmp
sub
loop
test
mov
ljmp
lods
cltd
or
ljmp
fisubrs
scas
push
loop
xchg
or
adc
push
xchg
ja
roll
xor
sar
test
or
sbb
movsl
pop
addr16
fisubrl
imul
into
outsl
and
mov
in
std
xor
jecxz
outsl
je
push
std
sub
in
arpl
inc
frstor
iret
out
xchg
call
popa
testl
cmpsb
pop
push
adc
xlat
ljmp
add
mov
rcrl
test
shlb
repnz
xchg
sbb
call
jb
gs
xor
xor
icebp
xor
lret
cli
jns
inc
mov
mov
mov
and
idivl
cltd
add
pop
shlb
xchg
pop
fs
cwtl
outsb
mov
js
dec
xchg
jae
dec
iret
cmp
xchg
add
daa
mov
inc
pop
mov
mov
leave
dec
inc
add
cmp
insb
dec
dec
orb
mov
and
add
adc
fisubrs
ljmp
mov
or
das
mov
mov
push
ret
aam
jmp
fadd
pop
test
pusha
dec
pop
jbe
into
pop
pusha
out
stos
mov
jbe
add
icebp
repnz
daa
mov
jns
arpl
ds
pop
pop
xor
mov
dec
or
or
das
dec
into
sbbb
movsl
mov
sbb
inc
rolb
js
aam
jbe
fbld
mull
and
push
cltd
push
xchg
es
lret
jle
sarl
pushf
lods
outsl
add
lahf
cmp
aaa
or
nop
jne
lcall
in
test
out
out
cmpsb
jnp
test
arpl
hlt
cmc
leave
addr16
cwtl
fsubp
sub
in
xchg
lock
xchg
and
sbb
lcall
sbb
inc
and
push
jb
and
pop
shl
add
push
adcb
aad
in
fcompl
cmpsb
jmp
pop
mov
jg,pt
jle
loopne
shr
mov
jo
sti
and
jae
mull
orl
or
cltd
insb
cltd
bound
ja
or
dec
jle
sub
mov
mov
pop
jp
leave
stos
pusha
xor
iret
mov
sub
arpl
sti
xor
sahf
mov
aaa
rcrb
add
mov
xchg
int
sub
adc
lea
xor
push
or
jg
or
les
lods
push
scas
aad
jae
or
inc
mov
stc
xor
pop
xor
mov
repnz
mulb
inc
jne
imul
xor
stc
or
fisttps
jne
bnd
outsl
push
xchg
dec
jo
xor
in
xor
cmp
stos
arpl
xor
mov
or
xor
popa
fidivl
adc
mov
mov
mov
loopne
mulb
addr16
mov
pop
lahf
xor
jmp
cmp
push
out
stos
in
sub
sub
repnz
mov
in
test
aaa
inc
pop
negb
stc
and
outsb
mov
mov
sahf
jne
or
inc
xchg
xchg
xchg
mov
add
push
dec
push
fs
insl
and
push
mov
push
push
add
jno
filds
cmp
clc
jns
and
xchg
dec
fmuls
rol
popa
mov
push
mov
adc
push
roll
arpl
outsl
in
mov
push
jl
pop
imul
aaa
push
divb
cwtl
xchg
or
sbb
in
scas
adc
in
fsubl
sbb
test
sub
cmpsb
mov
into
or
in
addb
mov
lods
sahf
xor
inc
cmpsb
cs
sbb
daa
xchg
mov
push
xchg
lret
lahf
std
adc
je
scas
xor
scas
adc
cmp
cld
sub
pop
lock
in
scas
push
sub
ret
mov
mov
pop
stc
and
or
daa
sbb
push
lahf
psubusb
push
xor
ror
cltd
fisttps
adc
js
in
fucomp
jecxz
push
xor
lock
dec
daa
subl
stos
xchg
adc
adc
mov
test
out
push
mov
inc
sbb
scas
and
popa
pop
out
sar
push
or
xor
push
aam
imul
or
push
in
outsb
mov
in
orb
or
pop
addr16
add
add
mov
fstps
lret
mov
jg
mov
jp
fsubrs
bound
ljmp
jmp
lahf
cmp
jle
push
lock
cltd
cmp
xor
shlb
das
xlat
and
lcall
inc
arpl
cmp
insl
out
push
mov
jmp
fnstenv
or
imul
push
out
and
scas
inc
sub
mov
mov
mov
aad
sahf
lcall
inc
fdivrl
fwait
sub
mov
lods
sub
add
lods
mov
fildl
sub
mov
mov
inc
outsl
fldl
mov
sbb
and
jns
and
cmp
cwtl
add
sbb
std
push
xor
ljmp
pop
aam
jecxz
and
inc
cmpl
stos
adcl
mov
hlt
js
adc
push
dec
xchg
int3
mov
jns
enter
mov
sub
or
or
or
sbb
fnsave
cwtl
mov
push
lahf
lcall
dec
pop
divb
xor
ss
aaa
in
fstpt
or
pop
mov
lods
pop
mov
and
pop
daa
mov
aam
jle
cmp
xor
adc
imul
xchg
and
pop
mov
xchg
jmp
xorl
add
clc
pop
pop
sbb
push
pop
or
push
fcomps
sbb
mov
imul
xlat
and
xchg
or
jbe
fsubrp
lahf
xchg
pushf
bound
daa
inc
add
cmc
imul
xorb
lahf
dec
dec
loop
jb
xchg
pop
mov
je
mov
xor
cmp
aas
dec
loope
test
xchg
cli
jmp
adc
mov
dec
xorl
std
sbb
add
or
out
shrb
mov
loope
push
enter
and
sub
dec
test
xlat
mov
xchg
sub
mov
mov
lods
sub
xchg
mov
mov
cmpl
test
or
cmpb
sub
pop
jns
jle
cmp
dec
xchg
out
xor
clc
sub
mov
jbe
pusha
rcrl
pop
inc
push
aad
pop
or
daa
push
jnp
fstpt
fdivr
aad
jmp
out
xor
test
pusha
xor
lret
xchg
xchg
sti
xchg
aas
dec
dec
scas
xchg
or
xlat
mov
dec
sti
es
sbb
mov
mov
aam
aad
push
push
cmp
fisttps
add
dec
jg
xchg
mov
inc
xchg
js
add
popf
jl
fwait
inc
xor
jecxz
ljmp
jge
push
mov
xor
out
sahf
push
dec
stc
mov
out
in
cwtl
les
push
adc
loopne
imul
sbb
or
ljmp
or
dec
aaa
dec
in
aas
jae
out
popf
jecxz
xor
sub
cltd
lea
imul
inc
outsb
gs
popf
jns,pt
xor
out
cmpsb
insl
xchg
mov
jmp
cmp
ret
stos
decb
cs
into
aas
outsb
pop
mov
inc
mov
sbb
mov
sub
dec
jo
aaa
in
adc
fnsetpm(287
push
add
lods
mov
out
add
fimuls
scas
jbe
push
adc
int3
mov
fcompl
adc
loop
imul
ja
arpl
lea
nop
pop
mov
mov
rclb
and
mov
sarl
lret
mov
mov
jle
fwait
jno
jbe
cmpsl
nop
sub
dec
jle
aad
jb
or
les
ss
repnz
cmp
scas
je
or
lock
ss
rcrb
xchg
out
sub
pushf
andl
adc
gs
cld
lds
arpl
shll
insb
jno,pn
inc
and
loopne
sbb
test
adc
sub
ljmp
dec
gs
pop
mov
jno
lock
and
and
adc
roll
mov
xlat
mul
add
mov
in
xor
mov
mov
mov
lcall
movsb
stos
sbb
inc
mov
out
loopne
test
mov
and
push
pop
sbb
nop
nop
pop
scas
dec
int3
testb
mov
movsl
fsubs
je
push
sahf
lret
test
out
adcl
push
ficoml
or
in
jae
pop
push
iret
into
xor
add
pop
out
cs
push
push
arpl
push
shlb
lret
push
add
mov
jo
add
out
enter
fsubrs
lock
xchg
add
fadds
insb
test
pop
jo
jecxz
fists
repnz
push
call
inc
jp
mov
add
test
xor
jbe
jb
ret
pop
aaa
shlb
sub
and
popf
jno
inc
xchg
or
es
in
cmp
mov
std
mov
ja
pop
outsb
pavgb
or
loop
les
into
jnp
stos
sub
outsl
icebp
or
rcl
pushf
call
neg
dec
add
push
nop
pop
sub
cmc
in
adc
mov
jmp
add
mov
and
popf
push
pop
xchg
xchg
mov
aam
lock
popf
and
xor
fs
sub
nop
call
cli
push
cs
and
das
xchg
sub
movsl
fstpl
sub
adc
cmp
loope
mov
test
ja
push
cli
scas
fcomip
movsl
add
mov
icebp
push
mov
sub
and
mov
inc
lods
sbb
imul
and
aad
inc
cltd
int3
les
sub
sbb
jo
sub
repz
jns
inc
mov
into
sahf
rorb
sub
cmp
imul
sub
sub
scas
cmp
fnstsw
rcrb
pop
pop
adc
rolb
jnp
sbb
adc
shl
add
jg
nop
mov
in
sbb
mov
in
rorb
test
and
dec
movsl
mov
mov
xchg
add
xadd
jae
lods
out
or
and
jle
mov
daa
and
into
cmp
xchg
shll
add
cmpsb
mov
ficoml
sahf
fucomip
mov
pop
jge
mov
fidivrs
cmpsb
jb
mov
stos
sub
dec
lcall
mov
in
mov
shlb
outsl
cmpsb
push
and
xor
xorl
sub
popf
pushf
lods
gs
lret
jae
mov
lds
icebp
sub
jnp
cltd
scas
aas
sbb
ss
inc
jmp
jno
dec
sti
scas
aas
add
hlt
fcmovbe
icebp
push
pusha
push
je
cltd
adc
xchg
rorl
or
cltd
scas
jbe
test
xor
cli
jnp
dec
jnp
xchg
push
and
les
add
pop
mov
mov
ja
jmp
lret
movsb
mov
mov
rorl
sub
sub
ljmp
outsl
dec
addb
push
cmp
sarb
ret
orb
jmp
repz
pop
xor
jge
incb
mov
mov
and
scas
outsl
jbe
push
insb
test
or
mov
cs
rorl
iret
pop
xchg
shrb
mov
nop
lahf
inc
inc
sahf
and
add
test
icebp
bound
sbb
cmc
cli
push
dec
xchg
xor
stos
cld
or
mov
mov
in
shr
and
cmpsl
ret
rcrl
or
xlat
cmpsl
fldenv
mov
adc
push
mov
push
push
mov
leave
fwait
and
js
lahf
pop
fadds
stc
dec
sbb
push
movsb
sahf
add
lcall
data16
repnz
mov
shll
push
cmp
jle
leave
dec
mov
aaa
int
out
sub
icebp
stos
cs
cmpsb
mov
insb
xchg
stos
dec
shl
sbb
inc
mov
mov
add
inc
mov
popa
lret
ret
sbb
adc
xchg
sub
xor
dec
xor
pop
shll
aad
dec
filds
pop
cmp
pop
sub
mov
pcmpeqw
fwait
aam
fs
sahf
sbb
push
xchg
sub
adc
je
lahf
in
jbe
push
push
pusha
out
or
scas
in
mov
jno
mov
es
fbstp
nop
add
cli
mov
adc
mov
cmp
gs
or
outsb
data16
mov
mov
fwait
cmp
mov
mov
aaa
fsubrp
or
adc
mov
jp
les
push
scas
sub
je
mov
icebp
call
stos
popa
mov
lds
dec
sub
mov
adc
pop
lcall
mov
stos
dec
sub
and
mov
ds
xor
out
mov
mov
add
mov
scas
or
lret
mov
stos
lea
call
or
or
or
inc
add
sub
mul
dec
lcall
bound
pop
out
out
int
inc
lcall
push
push
lea
in
mov
xor
ds
mov
mov
sti
enter
lock
add
dec
mov
push
push
mov
inc
sub
aam
push
popa
and
mov
cmpsl
cmovp
and
cmp
push
aam
mov
cmp
stc
aad
dec
test
nop
pushf
push
rol
xor
daa
cmpb
cmp
jnp
fiadds
int
lock
repnz
pop
pusha
jp
aaa
aas
repz
add
xchg
mov
push
pop
xchg
vhaddps
push
hlt
bound
es
xchg
sub
dec
adc
xchg
cmpl
jb
pop
sarl
pop
xor
jbe
lock
fmull
or
ljmp
jne
repnz
iret
pop
or
sbb
add
enter
jno
pop
fcmovb
mov
mov
ret
pop
fcmovne
mov
lret
nop
jl
or
std
das
adc
dec
mov
adc
pop
cwtl
imul
push
pop
xchg
or
xchg
xor
shrb
in
int
xchg
bound
lret
jmp
dec
clc
mov
cmp
lret
bound
jno,pt
pushf
push
and
shll
sbb
out
imul
xor
mov
adc
mov
fbld
icebp
out
cmp
adc
cwtl
add
mov
sahf
leave
insl
js
repz
into
add
add
xor
frstor
pop
dec
xchg
xor
push
addr16
add
ret
adc
cmp
jecxz
lcall
xor
mov
mov
mov
subl
cmp
pop
xor
inc
mov
into
sub
add
jge
mov
xor
iret
pop
push
pop
sub
sarl
movsb
dec
jle
inc
sbb
ja
ret
sub
push
enter
adc
jns
adc
mov
sub
aad
mov
push
outsl
shrb
add
and
xchg
fidivs
push
push
sub
fcompl
or
cmp
cli
push
jmp
repnz
cmp
xor
aam
lods
mov
popa
jne
jbe
insl
sbb
sbb
xor
or
stos
dec
xchg
sbb
ret
pop
push
out
cmp
loope
jno
dec
shl
lahf
testb
imul
int
xchg
rol
fs
xor
out
ficomps
and
mov
or
in
add
cltd
test
sahf
pop
add
arpl
jmp
pop
mov
insb
lock
sub
icebp
push
dec
repnz
pop
dec
dec
das
aas
data16
push
add
adc
jmp
sbbb
push
sbb
roll
negb
repz
lods
jae
nop
xchg
sahf
ss
inc
mov
js
push
movsb
lds
sahf
pop
cmp
and
clc
out
mov
jmp
pop
lret
in
mov
popf
idiv
sub
pop
fimull
mov
or
add
iret
ret
adc
lods
or
jb
call
out
and
fdivp
in
lea
and
dec
es
mov
mov
fists
fidivs
and
daa
test
mov
lds
std
nop
adc
aam
sub
ljmp
sub
mov
iretw
js
mov
pop
add
aaa
sbb
test
mov
pushf
mov
add
push
xor
mov
cli
nop
stos
xchg
pop
xchg
xor
fiaddl
xchg
cli
mov
ret
sahf
jmp
sbb
xchg
cmp
in
adc
repz
cmp
adc
shrl
ja
mov
rclb
inc
int
push
dec
or
inc
push
rolb
rcl
adc
cmp
mov
mov
insb
or
inc
out
xchg
inc
mov
movsl
add
mov
mov
out
dec
ret
ss
inc
out
push
mov
cli
scas
vfrczpd
int3
push
les
mov
inc
push
shl
push
shl
inc
dec
test
cmp
adc
pop
push
add
and
mov
rcr
push
push
pop
mov
cmp
lret
or
ret
rcrl
push
mov
push
mov
adc
inc
jnp
mov
lods
fdivrs
and
jnp
sarb
rol
xchg
sub
cmp
stos
stc
xchg
and
mov
fcmovnb
sub
fidivrs
adc
add
and
insl
xchg
mov
push
sub
popa
xchg
push
outsb
mov
lahf
xchg
xor
aaa
test
or
test
andb
mov
shrl
aad
xchg
sbb
cwtl
jne
int3
imul
dec
fcmovnbe
cli
out
mov
out
fs
insb
adcl
xor
jnp
mov
cmp
int3
mov
push
ljmp
pop
clc
mov
push
inc
rcrb
cmp
rcrb
leave
call
popa
jmp
popf
popf
xchg
ljmp
or
xor
fwait
adc
mov
inc
test
push
lds
push
pop
les
xor
lret
mov
arpl
cmpl
add
adc
mov
repz
or
xchg
hlt
mov
call
sub
cmpsb
push
cmc
cmp
or
mov
add
out
mov
push
cwtl
pop
adc
shll
jo
pop
or
or
xor
or
adc
mov
negl
mov
arpl
pushf
sub
movhps
pop
mov
gs
jge
jnp
push
mov
dec
jmp
xchg
adc
into
mov
xchg
push
in
or
add
lds
sarb
sbb
test
pop
adc
add
push
mov
mov
or
mov
pop
imul
cmp
jge
out
pusha
stos
xchg
js
movb
arpl
push
addr16
inc
dec
fmull
cmpsb
jl
ja
xchg
je
incl
sbb
mov
and
xchg
scas
xchg
hlt
push
cmp
out
jnp
mov
mov
hlt
push
scas
adc
push
mov
sub
lret
aam
push
xchg
push
daa
lret
enter
test
and
fdivl
mov
je
popl
xchg
jnp
gs
das
or
xchg
ret
shll
xchg
in
lahf
pop
add
test
pop
jae
daa
mov
inc
pop
push
repz
in
lock
inc
mov
push
mov
push
outsl
imul
mov
add
mov
adc
rcr
ds
xchg
fcoms
lret
jbe
lahf
cmpsb
mov
push
insl
push
lcall
pop
mov
loopne
sub
sbb
adc
js
fiadds
int3
in
sub
xchg
cmp
pop
xchg
cmc
push
ljmp
sti
lods
xor
inc
cmp
inc
shll
mov
lret
pop
das
push
xchg
test
aam
fs
jge
xor
lcall
test
xorl
jns
add
out
pop
cwtl
dec
imull
cmpsl
das
adc
xor
repz
pushf
mov
mov
test
or
out
data16
xorb
loopne
dec
mov
fcoms
loope
push
push
out
jne
mov
dec
push
mov
pop
mov
loop
xchg
lahf
cmpsb
jle
clc
xchg
pop
fmuls
dec
push
stos
out
jge
pop
cwtl
adc
jb
xor
dec
cmpsl
into
xchg
popa
js
jg
fwait
mov
std
test
sbb
xlat
cmpsl
jl
hlt
mov
inc
push
inc
mov
xor
jae
out
ljmp
pushf
jo
pop
adc
adc
or
outsb
mov
int3
xchg
leave
sub
iret
int
xor
or
push
loopne
loopne
sub
sub
cmp
pop
push
pop
mov
sti
scas
das
into
mov
push
push
sub
jno
lahf
fadds
ss
stos
fwait
mov
loope
scas
test
and
daa
xchg
in
jbe
int
push
cmp
jns
push
arpl
xchg
adc
rcrl
ret
adc
xor
aad
shrb
mov
sbb
in
adc
iret
imul
filds
jns
xchg
push
and
cmp
mov
cmp
cwtl
jle
add
cld
pop
mov
test
xor
mov
shll
jl
mov
lea
xchg
lods
pop
xchg
cmp
dec
outsb
test
out
adc
in
aad
dec
shll
xor
movsb
test
dec
xor
clc
int3
lea
xor
aaa
mov
bound
rol
bound
dec
mov
add
jl
test
dec
mov
fld
xchg
int3
push
pop
fwait
hlt
aas
lret
fidivrs
aas
inc
cld
jne
xchg
imul
decl
hlt
and
mov
test
or
cltd
sbb
stos
imul
aam
aas
mov
cmovns
pusha
xchg
lds
add
ljmp
mov
and
rcr
cmp
add
mov
aad
cmp
jbe
jle
testb
clc
mov
jo
sub
and
pop
cs
aad
adc
dec
mov
push
fstpt
push
xchg
jecxz
xor
int
mov
pop
sbb
xchg
andb
shll
xchg
adc
mov
sahf
pushf
jmp
mov
ficomps
subl
sti
mov
cmp
push
loop
cmc
ficompl
in
jge
data16
fwait
iretw
jnp
and
pop
lock
jg
sbb
jns
mov
jbe
cmp
and
ljmp
hlt
adc
or
icebp
jecxz
std
ja
jne
in
imul
add
scas
cmp
les
push
inc
btr
mov
mov
fcmove
addl
jl
mov
adc
fdivs
inc
push
xchg
scas
cltd
rclb
mov
insl
test
in
cmpsb
sub
inc
adc
in
sbb
pop
vmptrst
pop
and
adc
out
xchg
adc
jne
ss
push
mov
roll
and
jbe
out
push
aas
pop
push
pop
inc
xchg
and
jae
stos
add
inc
incb
test
adc
clc
adc
fnstenv
das
sub
mov
mov
stos
je
add
inc
mov
ret
out
xchg
mov
xorb
pushf
jmp
movsb
aas
stc
inc
sub
xlat
lods
imul
xor
rcll
fst
xor
pop
test
cmpsl
push
dec
nop
pop
push
fistl
adc
push
es
icebp
and
faddl
xchg
push
xchg
jp
or
cmp
divl
mov
cwtl
inc
or
sub
pop
xchg
sub
sbb
popf
paddw
jb
out
pop
xchg
mov
fists
adc
inc
or
stos
imul
xor
addl
xchg
lret
sbb
xorl
loopne
sub
lods
mov
mov
leave
fidivs
jne
fs
push
int3
pop
inc
sar
add
inc
leave
in
xor
lods
lret
jp
cwtl
dec
push
ds
dec
mov
call
pop
xchg
aad
xor
repz
mov
fcomip
lcall
aas
movsb
leave
rolb
outsb
sahf
movsb
push
jnp
xchg
jmp
pop
dec
lods
ljmp
mov
sbb
adc
stc
in
push
adc
adc
or
jno
mov
imul
cli
mov
pop
sbb
jae
aam
sbb
sahf
cmp
adc
sbb
out
scas
jns
mov
mov
mov
push
scas
jl
fmuls
or
jo
push
fwait
aam
mov
int3
test
ljmp
jo
addr16
fnstsw
sbb
lret
popf
cmpl
cmp
mov
push
fsubs
mov
ds
inc
mov
jl
lods
insl
lcall
into
rcll
inc
push
push
mov
dec
out
test
pop
outsb
and
enter
sub
xor
icebp
mov
mov
mov
xchg
sbb
es
jnp
and
inc
ficompl
mov
addr16
jae
insb
mov
test
and
lock
sti
mov
mov
add
xchg
jle
fs
icebp
mov
push
hlt
ret
add
movsb
ret
aas
out
mov
jns
sub
sbb
or
into
cmp
stos
xchg
imul
dec
xchg
loop
rorl
lods
mov
rorb
arpl
inc
call
inc
lea
icebp
in
pop
cmp
lods
mov
fildl
punpcklbw
mov
dec
pop
fisttpl
repnz
lahf
mov
jle
mov
ret
lret
jb
xchg
in
pop
jle
pop
mov
jbe
mov
mov
cmp
or
jl
xchg
adc
stos
or
sbb
mov
sub
push
insb
adc
idiv
push
xchg
cli
inc
add
pop
jne
jnp
popa
mov
jmp
xor
lods
inc
aad
jle
mov
and
adc
add
std
jae
out
pop
adc
fstpl
push
inc
xchg
jmp
lret
in
inc
mov
dec
push
repnz
test
in
dec
mov
cmp
jnp
add
dec
subb
popa
jne
xchg
mov
or
jle
lods
shlb
cmp
push
insl
imull
enter
out
lods
xchg
call
arpl
into
push
cmpl
andb
fld
xor
xchg
in
lsl
data16
xchg
mov
pop
aad
aas
cmc
or
int
aam
in
cltd
dec
js
xor
es
testb
xor
xchg
pop
mov
adc
pushf
push
adc
xchg
insb
fadds
mov
inc
lret
mov
dec
adc
xor
outsb
fldt
and
add
push
test
push
sahf
jge
cld
ljmp
xor
clc
rorl
into
shr
jno
xchg
mov
pop
mov
pusha
aam
nop/reserved
jg
xchg
stos
into
xor
aas
arpl
sub
jae
daa
push
in
pop
jbe
popf
les
or
stc
fstpt
imul
repz
mov
jo
push
stc
add
roll
adc
psraw
jmp
mov
fnstcw
inc
fisttps
xor
dec
inc
inc
cmp
cld
sub
daa
or
scas
mov
lret
loop
jmp
je
stos
and
clc
push
xchg
sbb
inc
iret
or
fisubrs
cmp
sbb
inc
mov
gs
lea
push
stos
or
push
mov
sbb
out
roll
hlt
and
jl
pop
and
test
daa
sbbb
popa
ret
mov
out
xchg
inc
cltd
inc
fwait
outsb
in
sbb
test
jl
pop
lret
out
shrb
adc
fsts
sub
cltd
addb
xor
adcl
jbe
fwait
cmpb
shr
es
cmpsl
jns
out
rorb
sub
dec
imull
inc
gs
adc
ret
sbb
repnz
mov
rorl
orl
add
call
ret
fsub
roll
pop
out
mov
sbb
cltd
scas
xor
push
mov
push
sub
push
mov
mov
jle
aam
test
in
call
mov
sub
fisttpll
jge
sbb
out
push
mov
inc
lods
jns
mov
mov
push
pop
jae
cmp
push
pop
iret
shrb
xchg
or
push
push
and
movsl
hlt
shrb
sahf
push
sbb
inc
xchg
ljmp
xchg
dec
adc
xchg
fiaddl
inc
stc
cwtl
out
lret
mov
stos
repnz
out
xor
push
mov
cmp
adc
dec
inc
jmp
mov
push
cltd
pop
fwait
leave
inc
and
movsl
dec
fs
inc
sbb
cmp
or
mov
loope
pusha
pushf
adc
adc
inc
mov
imul
lahf
fs
ljmp
out
xchg
out
ljmp
dec
lods
shrb
xor
push
inc
dec
js
mov
xchg
xor
push
addr16
push
fimuls
lea
aaa
ja
inc
lret
push
pop
ffree
sub
add
sbb
inc
sahf
dec
jne
data16
fadds
xchg
mov
ficoms
xchg
xorb
je
jmp
add
add
out
xchg
sub
ss
or
pop
fiaddl
inc
lret
addr16
mov
imul
jo
sub
and
pop
pop
fadds
xor
mov
testl
dec
add
xchg
mov
aaa
jg
jne
adc
sub
mov
mov
adcb
xchg
jae
jecxz
push
mov
fistps
sahf
fmul
pop
cwtl
mov
lcall
loop
mov
cwtl
dec
jl
pop
subb
incb
lcall
ja
push
adc
pop
pop
mov
inc
dec
dec
dec
fnstsw
daa
outsb
pop
dec
add
mov
in
mov
les
jae
cmp
lock
sub
out
and
into
fists
sti
sub
or
push
add
js
add
stos
fsubrp
arpl
xchg
aas
sub
mov
add
mov
jl
stc
xchg
movsl
mov
adcb
adc
fildl
fs
popa
xchg
outsb
rolb
in
sub
rcl
cwtl
imul
inc
in
cli
add
loopne
stos
jbe
idiv
push
push
js
stos
pop
cmpb
lret
paddw
call
shlb
fstp
cld
stos
ja
pop
inc
cmp
in
lds
cmp
fidivl
or
sbb
lds
arpl
mov
test
xor
and
xlat
imul
cld
gs
cmp
jge
mov
out
cmpsb
rorl
sbb
pop
ffreep
or
inc
ret
inc
ljmp
push
mov
mov
and
insl
imul
mov
pusha
pop
repnz
pop
jo
fstp
push
and
movsl
push
in
xor
dec
mov
orb
or
mov
sbb
loop
and
mov
nop
and
aaa
stos
sub
out
xor
fcomps
pop
push
frstor
inc
mov
dec
out
int
xchg
inc
in
rcrb
pushf
sarl
mov
loop
lahf
pop
cmp
loopne
inc
mov
push
pop
sbb
cs
out
je
popf
xchg
pop
xchg
sbb
xor
mov
out
lahf
inc
fcomps
gs
cld
stc
xchg
jo
push
into
cmp
xchg
test
adc
out
fwait
jo
mov
mov
mov
lock
or
sbb
inc
lahf
decb
adc
rcl
push
push
xchg
out
lea
pop
sub
inc
inc
loop
int
mov
mov
mov
in
jl
push
and
out
sub
mov
xchg
xchg
cmpsl
mov
pop
jge
jg
arpl
fs
mov
xor
nop
mov
fs
push
bswap
inc
cmp
addl
mov
insb
sub
pop
frstor
pop
ret
and
mov
negb
adc
in
enter
mov
test
add
dec
push
jp
nop
scas
daa
mov
ja
lods
call
add
hlt
pop
imul
test
cmpsb
jge
ret
jb
inc
icebp
push
pop
in
and
insl
sbb
out
add
adc
or
arpl
xchg
jae
arpl
sbb
stos
dec
popf
mov
adc
adc
pusha
popa
jb
ret
xchg
test
mov
jecxz
cmp
sub
cmc
idiv
scas
mov
ljmp
jbe
ret
lods
fwait
aaa
xchg
mov
push
filds
jge
cld
cli
movsb
xlat
dec
arpl
mov
inc
icebp
outsl
dec
add
push
xchg
add
sub
cmpsb
stos
ljmp
aad
imul
jg
inc
cmpsb
outsb
and
xchg
add
pop
mov
hlt
sub
mov
std
stos
mov
cmp
sahf
dec
jge
addr16
jle
mulb
pop
mulb
inc
aas
and
int3
dec
jp
loop
popa
out
icebp
push
mov
pop
pushf
push
test
test
sarb
inc
loopne
incl
cmp
pop
aam
and
and
hlt
sbb
gs
dec
mov
insl
push
lcall
je
push
xchg
jns
and
xor
xchg
xchg
lcall
jnp
rol
mov
jmp
lods
cmc
out
mov
or
mov
xor
imul
and
inc
loope
xor
mov
mov
adc
add
cs
pop
jae
popa
mov
enter
add
add
jmp
in
sti
pop
sbb
incl
pusha
pop
jne
xor
xor
adcl
mov
jo
scas
jns
lcall
push
fwait
stc
addl
addr16
push
lret
push
aad
repz
mov
jecxz
inc
inc
leave
sub
add
daa
dec
or
aas
loopne
xlat
clc
rcrb
xchg
adc
adc
lea
ljmp
push
daa
ljmp
test
insl
fs
ss
dec
push
mov
mov
icebp
push
stos
in
inc
xchg
into
bound
insl
cmp
pop
sti
insb
arpl
inc
rolb
ficoms
popf
pop
sub
insb
mov
pop
aas
stc
in
sti
nop
pop
in
adc
mov
lretw
cmp
push
loope
and
ja
ljmp
mov
mov
adc
call
inc
fisttpl
mov
insl
adc
setl
mov
movsl
int
jecxz
into
sar
push
xor
cmp
fs
sbb
mulb
cwtl
inc
xchg
pop
sub
sub
dec
addr16
shl
xor
jl
adc
push
dec
push
ds
jae
jo
enter
lock
scas
scas
add
dec
imul
js
xchg
icebp
add
jecxz
lds
and
push
or
dec
insb
cmp
pop
push
fs
pushf
and
adc
aad
cld
inc
outsl
mov
sbb
pop
std
loop
mov
xchg
cmp
jge
push
sub
mov
mov
lea
inc
rcll
and
dec
dec
xchg
in
xor
push
faddp
xchg
rcrl
repz
rclb
xchg
inc
testl
sbb
mov
fsubs
mov
sub
rorl
rorl
ds
ror
add
sub
sti
push
mov
rorl
mov
pop
xchg
dec
xchg
popf
lock
add
test
or
jp
sbb
push
out
sbb
push
outsl
mov
cltd
mov
dec
outsb
or
jecxz
les
lahf
out
and
and
lcall
enter
cmpsl
popa
inc
xchg
mulps
leave
push
jb
mov
int
mov
push
mov
enter
and
xchg
std
sbb
das
cmp
mov
push
imul
mov
ja
adc
xor
test
xlat
insl
icebp
xor
dec
push
inc
out
pop
and
arpl
dec
jmp
push
fnsave
pop
das
gs
in
xchg
lods
pop
jmp
mov
gs
psraw
and
pop
dec
pop
icebp
push
ds
or
mov
clc
lock
pushf
je
pop
sbb
out
xor
mov
outsl
negb
add
test
xchg
pop
les
cmp
into
ret
or
es
iret
fidivrs
xor
cmpsb
scas
aas
add
xchg
and
pop
xlat
mov
add
scas
repz
sti
ja
dec
sbb
push
int3
into
add
rorl
sbb
push
cmp
andl
add
shrl
xor
jb
sbb
mov
xchg
and
and
fiadds
outsl
push
loope
and
push
cmp
in
cmp
xor
lock
test
js
adc
and
fsubrl
les
or
xchg
out
xchg
subl
in
add
mov
cltd
jl
fldpi
jbe
jl
and
mov
in
fldcw
add
daa
jne
adc
popf
push
dec
frstor
push
adc
mov
in
inc
xor
mov
in
mov
js
out
cltd
jmp
imull
mov
test
out
mov
dec
js
shlb
jb
xchg
fmull
jg
es
enter
and
cmpsl
add
xchg
push
cmpl
cmp
aam
rclb
or
push
int3
test
leave
pop
or
push
pop
flds
cmp
test
subl
jge
sub
inc
je
inc
imul
shll
add
push
and
add
push
imul
jae,pn
aas
test
fcoml
sub
divl
lds
jbe
cli
add
dec
cmc
in
xlat
sub
jp
lea
pop
or
or
adc
lea
adc
call
repnz
mov
ret
add
jmp
add
xchg
mov
push
mov
nop
loopne
sub
cmc
jno
fwait
lea
add
cmp
stos
decb
xchg
dec
push
push
ss
xor
mov
sbb
xchg
fistl
pop
shll
int3
mov
dec
adc
mov
pop
jno
fdivp
inc
sbb
pop
hlt
push
clc
les
xor
cld
jg
out
mov
neg
bound
cmpsl
mov
mov
mov
repnz
sbb
int
insl
imul
ljmp
scas
sbb
addr16
lea
or
fidivl
inc
xchg
lahf
stos
xchg
xor
stc
sti
dec
cmp
ja
test
adc
outsl
inc
and
imul
sbb
and
cld
lods
arpl
or
int
mov
leave
xlat
push
xor
ss
xchg
aas
mov
fwait
mov
mov
lea
push
sbb
sub
jp
sub
xchg
arpl
xchg
iret
or
push
push
dec
sarb
add
pop
enter
pop
hlt
pop
sti
and
xchg
add
shll
mov
das
cmp
cmp
cmp
inc
out
push
adc
push
pop
lock
xchg
jmp
pop
mov
sbbb
mov
lods
insb
inc
fmul
adc
fisttpll
push
mov
mov
xchg
jp
addr16
fnstenv
dec
xor
xor
les
cmp
xor
lods
imul
enter
sbb
mov
out
cwtl
push
hlt
and
int
hlt
stc
pop
mov
nop
pop
sub
xlat
pushf
shll
pop
adc
xor
in
stos
inc
mov
dec
out
push
aaa
repnz
fdivrs
xchg
push
imul
imul
fnsave
out
cmp
test
insb
andl
rolb
jns
pop
out
sub
jmp
sbb
out
and
jnp
cmp
jmp
mov
test
xchg
inc
adc
and
and
dec
cmp
iret
xor
adc
add
and
test
cmp
lods
cs
out
jmp
dec
clc
dec
inc
and
js
lcall
sbbb
dec
sbb
dec
fwait
jo
aam
cmp
fidivs
dec
jb
adc
cld
cs
add
push
adc
repnz
xchg
cli
sbb
addr16
cmp
mov
push
xchg
fidivrs
stc
dec
js
bound
int3
inc
xchg
andb
shr
xor
or
iret
fadds
or
imul
sbb
jg
xor
nop
mov
inc
xchg
js
adc
cmp
mov
sub
gs
dec
out
push
dec
jnp
rcrb
imul
jo
outsb
data16
int
inc
sub
jl
dec
stc
popf
pop
and
out
fldt
mov
push
and
lods
push
cltd
cli
pop
jbe
stc
cmpsb
ret
call
ja
lcall
lock
mov
ljmp
mov
adc
xchg
inc
mov
lahf
dec
test
or
jnp
pop
mov
jns
imul
test
jae
cmp
adcb
iret
mov
addl
flds
icebp
mov
fcomp
push
repnz
add
jnp
ds
sbb
push
cwtl
add
jns
repz
push
daa
and
push
add
rorl
dec
scas
lret
inc
sub
inc
mov
cmp
repz
dec
test
mov
xchg
lret
or
mov
sub
and
mov
dec
sub
or
push
mov
dec
xor
mov
sahf
pop
and
lcall
xor
ss
iret
pusha
repnz
push
mov
mov
idivb
mov
fnsave
les
mov
cwtl
mov
daa
flds
mov
rcrb
sti
push
mov
test
sbb
push
sarl
pop
lods
and
shll
inc
xor
rorl
xchg
inc
cmp
mov
in
jns
add
add
repz
pusha
test
pop
stc
adc
frstor
hlt
pusha
push
inc
push
je
jns
roll
jno
or
movsl
popf
dec
into
pop
cs
outsb
mov
pop
mov
lret
outsb
sub
in
incb
std
or
xchg
push
pop
xchg
lret
inc
aam
jo
push
mov
fstpl
leave
cltd
pusha
mov
pop
mov
in
fldcw
ret
mov
mov
aas
ficoms
dec
imul
xor
cmpsl
xchg
cmp
sbb
mov
into
sub
jns
xlat
fcmovnu
leave
mov
outsb
xor
aam
pop
lods
fnstsw
test
mov
mov
int
sbb
sarb
adc
sub
fcmovne
aas
std
mov
push
icebp
flds
cmpsb
ret
xchg
fistl
out
sti
add
or
dec
into
repz
dec
mov
and
pusha
call
enter
push
stos
loope
ss
das
add
mov
xchg
jno
movsb
loop
jecxz
cltd
dec
ja
and
ds
cltd
mov
clc
subb
add
pop
or
fs
adc
pop
mov
je
imul
sub
ud0
cmp
das
daa
testl
and
jae
dec
pop
std
int3
shlb
push
lock
add
or
add
sub
lods
ret
pop
bound
je
out
lea
and
sbbl
sub
ret
push
xchg
sbb
jecxz
adc
add
or
insl
push
mov
or
aaa
inc
ret
mov
lods
mov
int3
cmpsl
out
or
and
inc
push
shl
insb
cli
cmp
fsubr
cmpsb
test
cs
rolb
mov
mov
rcrb
mov
idivb
jecxz
and
inc
lds
in
loop
jl
mov
push
stos
jp
rorl
add
xchg
into
std
ljmp
push
jo
lock
add
jmp
jmp
hlt
push
test
cltd
adc
or
les
jl
mov
xor
scas
cltd
sub
mov
aad
xchg
pop
xor
sub
repz
cli
lret
ret
ret
call
push
add
xchg
hlt
test
push
popa
pusha
in
lods
pushf
lret
push
aam
loope
das
shl
add
push
out
sbb
aam
dec
and
sbb
insl
out
sbb
xchg
icebp
test
adc
mov
sbb
push
outsb
cs
dec
mov
bound
xchg
rclb
pop
pop
fcmovb
lds
mov
jge
popa
sub
xchg
adc
push
mov
pop
lods
jmp
add
das
add
dec
jge
out
xchg
aad
ja
insl
scas
into
clc
aad
test
int
cmpb
test
jmp
xor
rcll
orb
scas
fcmovbe
movsl
aad
dec
pop
imul
mov
adc
xchg
fisubl
or
outsb
inc
add
push
mov
xor
mov
xor
mov
shlb
pop
mov
pusha
fistpll
cmp
movsb
scas
cli
int
push
pop
lret
pop
mov
cmp
sbb
mov
cmpsl
flds
jb
inc
pushf
lds
test
std
mov
pop
cwtl
mov
ret
mov
inc
aad
pop
pusha
inc
shrb
arpl
mov
test
out
pop
aas
mov
pop
cmp
push
mov
test
xchg
fs
enter
mov
aam
cld
adc
add
ret
mov
pop
push
push
lret
push
pop
add
movsb
repz
pop
jo
orl
or
in
in
mov
dec
dec
out
imul
sub
rep
mov
mov
call
out
xorl
or
inc
inc
int3
pop
pushf
int
push
mov
jg
pop
mov
shl
mov
fwait
pop
inc
popa
in
call
in
fdivrs
outsl
mov
outsl
imul
fmull
xchg
and
push
mov
test
fidivrl
cmp
cmp
dec
ss
and
vunpcklps
shll
lods
push
cmp
repz
stc
lret
mov
into
pop
pop
mov
dec
dec
jae
dec
push
into
lea
adc
loope
xchg
sub
ljmp
jo
cltd
jbe
inc
pop
out
push
data16
sub
or
xor
cwtl
cld
popa
xchg
push
frstor
xor
cmpsl
mov
lea
jnp
into
xchg
lcall
popf
and
pop
fisubrs
add
shll
clc
add
in
sub
mov
scas
cmp
and
or
cmp
dec
fdivl
mov
aad
inc
push
pop
dec
or
outsl
push
inc
stos
mov
dec
les
imul
add
in
in
push
loope
mov
outsl
dec
mov
dec
mov
push
push
inc
cmp
cmova
leave
pop
jns
data16
mov
dec
incb
out
cmp
add
mov
loopne
mov
cltd
cmpsl
pop
cmp
add
nop
adc
inc
ret
jnp
sub
mov
add
sub
aaa
mov
fninit
add
pop
pop
inc
sub
out
aam
loope
jle
adc
jb
mov
in
push
mov
popf
pushf
mov
out
pusha
sbb
pop
lcall
and
bound
push
gs
add
loop
add
xor
mov
inc
xchg
mov
sub
je
je
insb
int3
mov
inc
adc
mov
sub
enter
mov
jg
aas
mov
jecxz
cmp
daa
adc
decb
adc
pusha
bound
adc
cwtl
cmpsl
sbb
in
nop
dec
movsb
mov
into
stc
in
cmpl
cmp
add
push
fisttpl
shlb
mov
dec
xchg
jge
adc
and
ljmp
sub
push
xchg
lods
mov
or
enter
push
imulb
sub
mov
mov
js
dec
je
xchg
xor
or
xor
out
xor
cmp
jb
lods
or
scas
scas
movsb
mov
xor
add
out
aaa
lock
das
cs
ljmp
xchg
pop
test
or
push
push
jecxz
notb
stc
sub
in
mov
test
ja
cmp
popa
rorl
or
shr
popa
in
stc
pop
loopne
sub
adc
jne
pop
dec
push
dec
cmp
or
imul
cmp
lret
push
ret
incl
xlat
sti
jb
fisubl
xor
sar
loopne
cmp
stc
or
mov
adc
pop
cmpsl
xchg
outsb
ret
out
subb
cwtl
cmp
js
ss
out
jb
sub
cmp
push
int
test
pop
push
aas
das
outsb
out
adcb
scas
xchg
lods
cmc
adc
icebp
int3
and
dec
inc
pop
mov
inc
lret
and
xchg
cmp
roll
fs
das
and
stos
clc
loope
lods
rolb
sub
out
push
iret
push
cmp
scas
push
mov
ss
cs
jmp
popa
cltd
lea
out
icebp
leave
adc
in
in
cmp
into
popf
mov
shlb
xchg
cmp
dec
into
sub
lret
jne
push
push
jl
idiv
lahf
sbb
insl
fbstp
subl
inc
dec
mov
push
pop
xchg
mov
xchg
sub
pop
es
in
or
sub
ret
cmpsl
ss
cmp
cwtl
fistpl
cmpsb
movsl
popf
mov
cmp
dec
dec
movsb
mov
inc
xorb
repz
dec
gs
xor
lods
imull
push
jecxz
dec
mov
or
mov
scas
mov
stos
mov
and
sub
arpl
fcomps
push
fucomip
repnz
ret
pop
stos
negl
fs
or
cmpl
test
mov
lea
mov
lret
jno
shr
imul
sbb
pop
cmc
flds
xchg
lods
sbb
outsl
orb
ljmp
mov
push
in
loope
or
and
cmp
hlt
and
xchg
sub
xchg
mov
ret
out
lret
pop
adc
add
adc
or
es
jb
adc
lods
inc
add
or
jle
mov
outsb
mov
adcb
sbb
lock
push
rorb
shlb
pusha
aaa
push
pop
xchg
cmp
xchg
lds
xchg
xor
mov
es
jns
push
test
jbe
mov
in
dec
jg
int
ret
adc
adc
adc
popa
loope
inc
iret
js
pop
jmp
jg
sbb
in
pop
jns
fwait
dec
in
mov
das
repz
cmpb
mov
xor
push
mov
sub
test
inc
test
dec
mov
mov
iret
push
add
loop
xchg
pop
scas
stc
mov
xchg
aad
pushf
xor
insb
sub
ss
gs
scas
fstpl
addl
les
mov
sbb
fidivl
pop
ss
inc
sbb
mov
int
sti
jae
jno
mov
push
out
push
xchg
mov
icebp
out
cltd
imul
mov
rorl
xchg
lret
loope
sub
lret
dec
wbinvd
scas
test
lods
mov
or
dec
fimull
je
les
cmc
xor
jbe
or
ljmp
sbb
lods
mov
insl
test
lahf
scas
adc
outsl
pop
pusha
push
mov
js
mov
js
in
lahf
push
push
push
push
in
ret
push
addl
adc
ret
sahf
fildll
lds
sub
dec
out
sbb
pop
out
daa
pop
xchg
inc
dec
addl
fwait
nop
fiaddl
movsb
in
pop
sbb
int3
mov
fcoms
lods
push
test
xchg
fstps
push
dec
jg
dec
sahf
dec
mov
xor
lds
cltd
jmp
push
pop
cmpsb
mov
push
sub
adc
sbb
mov
and
cld
mov
test
and
xlat
mov
mov
pusha
lret
adc
mov
push
or
lods
jb
jg
mov
mov
dec
aas
lahf
push
scas
and
cld
inc
sub
sub
insl
fwait
arpl
into
ja
mov
push
call
bnd
addr16
jnp
sub
mov
push
cmp
fcomps
xor
stos
or
bound
call
push
mov
xchg
mov
ror
out
pop
mov
outsb
test
movsw
mov
lock
cmc
cmpsl
test
xor
mov
mov
mov
cltd
inc
movsb
fwait
add
add
xlat
push
xor
or
sub
scas
js
push
adc
mov
arpl
mov
push
mov
jecxz
dec
jl
xchg
in
push
mov
in
dec
xchg
repz
xor
ja
push
scas
and
lea
push
dec
mov
and
xorb
aas
push
pusha
pop
xor
sahf
movsb
loop
sbb
mov
sahf
adc
sti
dec
cmpsl
mov
sub
sahf
cmp
pushf
in
aad
jmp
fxch
cmp
outsl
add
movsl
dec
sbb
scas
jle
xchg
cmpl
out
sbb
cmp
or
in
jmp
push
xor
mov
dec
dec
add
shlb
mov
mov
push
ss
or
fnstsw
cmp
push
notl
jb
mov
leave
inc
lret
mov
js
xchg
stc
pop
adc
mov
daa
xchg
rcrb
clc
cmpb
std
add
cmp
pop
cmpsl
clc
icebp
in
pop
sti
ret
outsl
and
pop
xor
mov
mov
gs
pop
or
mov
adc
adc
cmp
daa
lods
mov
js
insb
jno
and
clc
fxch
scas
fdiv
mov
loop
mov
sar
arpl
ljmp
dec
lea
jo
aad
pusha
pop
ds
sarl
cmp
jno
jno
cld
lods
inc
jae
aaa
xorps
fsubp
movsb
or
cmp
xchg
xchg
push
pop
mov
cli
out
dec
mov
add
arpl
sti
jmp
push
sbb
jne
pusha
nop
popa
sbb
call
out
stos
jg
sar
les
sbb
lret
je
or
push
mov
stos
mov
shll
or
ja
sbb
jmp
push
leave
aam
outsb
stc
inc
sbb
cmp
fistl
mov
sbb
dec
sbb
add
repnz
aaa
test
outsl
in
in
faddl
iret
das
sbb
dec
imul
mov
addr16
rol
lahf
xchg
aam
ficompl
mov
in
movntps
in
stos
sbb
testb
fcoms
data16
push
mov
notb
mov
inc
fstpt
pop
mov
push
insl
mov
lods
adc
insl
loope
ret
mov
movsl
sbb
and
mov
sub
movsb
rcrl
inc
outsb
mov
push
lret
je
push
cmpb
dec
and
sub
mov
lea
insb
jg
call
add
adc
scas
pop
fistl
xchg
sbb
and
pop
je
adc
and
jge
jo
mov
inc
dec
or
out
adc
sbb
jp
addr16
lret
shlb
xor
adc
cltd
insl
arpl
or
push
lahf
mov
cmp
popf
jnp
adc
or
loopne
jnp
adc
inc
cwtl
into
test
call
shlb
pop
js
sub
mov
sbb
cltd
jmp
stc
cmpsl
out
add
mov
frstor
xchg
xlat
cmp
sbb
sub
adc
fdiv
adc
enter
and
je
inc
out
stc
jmp
aaa
les
cmp
insl
loope
add
xchg
imul
sub
cmpsb
xlat
pop
lds
pop
stos
mov
loopne
inc
jnp
push
lret
fnstenv
incl
xor
jp
int3
call
xlat
dec
cmpsb
ret
jno
cmc
je
xchg
pop
cwtl
sub
cmp
lahf
adc
fsubs
jge
scas
pop
pop
sbb
dec
outsb
imul
test
jo
scas
sbb
mov
xchg
mov
mov
fadd
push
cmc
nop
add
mov
pop
dec
push
and
fistpll
fsts
sub
stos
lds
mov
jns
mov
sub
sub
popf
test
lahf
or
iret
add
enter
dec
scas
out
push
sbb
mov
sbb
rcrl
sahf
cmpl
inc
test
pop
fists
mov
lret
int
cmc
lahf
inc
outsl
imul
imul
jns
sub
mov
out
outsl
in
xchg
leave
mov
cld
bound
out
scas
mov
pusha
cmp
add
sub
pusha
shll
mov
push
xorb
or
or
mov
mov
sub
inc
push
pop
jnp
lahf
xor
sbb
push
push
push
push
mov
in
xchg
sarl
adc
int3
loope
das
stc
xor
popf
pop
dec
jg
leave
mov
xor
in
lret
fidivl
mov
sbb
or
arpl
add
add
int
scas
jg
mov
inc
pop
loopne
mov
scas
dec
pushf
dec
cmc
lret
add
mov
into
lods
jae
adc
jl
push
mov
pop
out
je,pn
insl
in
test
dec
fstpt
mov
push
cmpsb
ljmp
dec
mov
adc
mov
mov
mov
cmp
daa
out
cltd
fsubrl
mov
pop
das
cmp
adc
fs
fdivrl
push
inc
rcl
sahf
cmp
mov
pop
insl
sbb
adc
mov
popf
lret
dec
aas
inc
shll
pop
jae
imul
aad
lcall
lcall
or
loope
shlb
jmpw
fcoms
cmp
xchg
mov
icebp
pop
and
lods
sahf
test
aas
sahf
shll
ret
hlt
sub
mov
das
push
mov
mov
popa
sub
xor
leave
cmp
shl
and
cmp
xor
cvtdq2ps
fildl
mov
mov
fistpl
mov
mov
ds
xlat
hlt
or
and
aad
cs
xor
jns
pop
rorl
pop
jecxz
adc
fucomp
nop
popa
ffreep
xchg
sti
xchg
add
pop
ja
js
inc
data16
jle
push
push
cmc
insl
stos
dec
stc
mov
and
fstpt
xchg
sub
rolb
gs
jg
xor
je
pop
lods
lret
dec
inc
push
push
mov
inc
add
lock
enter
idiv
pop
testb
jno
cmp
and
mov
cmpb
mov
mov
cmp
insl
mov
mov
adcb
fsubl
jae
pop
les
insb
mov
inc
jl
pop
jns
je
sbb
rcll
jae
lock
outsb
pop
test
lret
or
repnz
or
data16
adc
add
push
and
outsb
add
sti
add
mov
fmuls
dec
inc
in
xchg
dec
or
push
scas
sbb
gs
cmc
cmp
aaa
xchg
subb
push
push
fisttpl
sbb
mov
adc
xchg
scas
adc
cmp
mov
neg
jge
add
xor
mov
lcall
imul
es
repnz
movsb
sbb
in
and
inc
ret
outsl
call
fs
fldt
cs
lahf
push
scas
xor
sti
cwtl
enter
arpl
dec
lahf
pop
mov
dec
aaa
inc
cs
ficomps
ss
xor
xor
lds
adc
inc
pop
pop
mov
dec
in
leave
orb
fnstcw
lods
fnstsw
jmp
and
mov
mov
push
xchg
and
repz
pop
or
mov
cmp
stc
iret
cmpsb
aam
jg
sbb
cmc
notl
clc
jne
cmp
dec
sbb
jo
dec
ret
mov
jb
pop
roll
nop
daa
lea
xor
mov
xlat
dec
push
xor
fistpl
aam
mov
push
adc
aaa
mov
jbe
jecxz
loop
jp
fistpll
lods
or
stos
xchg
pop
ret
xchg
cmp
sbb
xor
adc
cltd
stos
andl
movsb
fisttps
xchg
and
or
adc
je
test
xor
mov
push
inc
nop
xor
outsl
xchg
lock
aam
sub
mov
pop
fdivl
xlat
mov
add
pop
mov
call
mov
sbb
fisubs
mov
or
icebp
movsl
inc
push
pop
les
and
cli
sbb
add
shrb
mov
rcr
fldcw
lret
push
imul
adc
mov
clc
and
xor
mov
jo
mov
pushf
popa
iret
mov
dec
out
mov
sbb
mov
adc
ret
ds
mov
push
adc
inc
int3
add
sar
push
push
dec
xchg
cmp
js
adcl
and
js
jge
sbb
and
jns
popa
pop
jbe
nop
xchg
rcrl
into
lods
inc
sbb
into
dec
pop
push
aad
in
std
sbb
stos
dec
xchg
repz
scas
iret
das
cmp
icebp
insb
aam
adc
imul
jge
test
xor
mov
imul
test
push
xor
xorl
mov
lock
pop
mov
jbe
ficoml
and
stc
pop
in
cmc
out
imul
mov
sbb
das
es
imul
mov
nop
dec
stc
lock
insl
in
mov
xchg
sub
push
ljmp
push
mov
pop
cli
adc
inc
jb
jmp
dec
inc
lret
and
and
ret
jo
add
insl
in
enter
fs
scas
and
int
cwtl
adc
negb
xlat
fbld
cmp
cmp
jne
sbb
inc
lret
test
dec
nop
or
ds
xor
aad
pusha
stos
fwait
outsl
daa
inc
xchg
inc
sbb
mov
pusha
xorl
sarl
notl
daa
test
aam
daa
jl
loop
xor
popf
xchg
mov
std
and
jo
sahf
out
pop
movsb
pop
lea
ret
jecxz
inc
lea
pop
dec
mov
test
mov
and
push
sbb
lods
push
mov
and
adc
and
mov
inc
push
xor
fdivrs
add
fxch
gs
je
sub
mov
sahf
aad
xchg
cmp
fcmovnb
or
lods
aas
stos
push
stc
cmp
in
int
inc
xchg
repnz
pop
lods
imul
test
jmp
mov
mov
cmpsb
lcall
movsb
xchg
inc
mov
mov
fimull
out
sub
push
icebp
ljmp
xchg
cli
lock
cwtl
xor
sahf
pop
xchg
dec
out
xchg
mov
out
push
call
je
sti
and
test
test
daa
jge
in
jg
jmp
loope
scas
outsl
clc
stos
cmpb
int3
mov
dec
fidivs
dec
bound
inc
jo
push
fld
add
mov
insl
scas
aas
or
pop
jl
add
bound
xchg
pushl
mov
dec
xchg
mov
jmp
adc
cs
iret
mov
into
mov
mov
fbld
xchg
mov
adc
push
sti
test
jo
ret
and
movsl
and
jnp
mov
fistl
push
or
inc
or
and
icebp
adc
cmp
push
jo
enter
sub
lret
inc
movsl
dec
push
lahf
cmp
sahf
cltd
out
dec
lods
push
popa
cmp
cmp
out
adc
nop
cmpsl
ljmp
lods
push
pop
insl
les
out
ret
jge
ja
aaa
mov
cli
xchg
xorl
or
loop
sub
fildl
mov
push
and
pop
sub
dec
loop
pop
bound
pushf
xor
sbb
shrb
decb
iret
out
cmpb
jge
mov
xor
mov
and
cltd
mov
xor
popa
aam
jl
inc
fdivl
inc
dec
push
rol
dec
pop
jbe
jg
or
xor
fwait
out
push
jmp
lods
inc
addl
inc
mov
xchg
xor
loope
jbe
cwtl
js
fimuls
push
imul
push
jo
or
stos
mov
jo
xchg
dec
cmp
pop
test
jno
push
ds
pop
jp
pop
leave
lcall
in
sub
mov
jae
stc
imul
mov
ror
jmp
jl
jb
cmp
adc
inc
mov
fistl
mov
fisttpl
or
add
mov
shrl
repnz
not
outsl
or
jns
mov
ja
pushf
inc
fiaddl
push
lea
out
dec
mov
pop
push
lcall
shr
cmp
call
dec
data16
mov
jge
mov
rcr
push
outsb
mov
movq
arpl
pop
dec
leave
jno
mov
ja
enter
sbb
xor
int
pop
sub
stos
aas
lea
std
mov
leave
jns
aaa
mov
cmpb
negb
mov
ljmp
adc
loopne
out
pop
adc
inc
shll
movsl
movsb
dec
pop
push
std
sahf
jb
cs
insb
xlat
mov
add
movsl
mov
test
inc
inc
or
xchg
jne
add
cmp
cld
das
push
repz
sub
cmp
lods
arpl
mov
std
mov
pop
push
mov
ficomps
repnz
xor
jmp
jo
jge
sbb
int
cmp
jge
fldenv
test
mov
xchg
es
xchg
loop
movsb
lods
shrb
jmp
ss
in
and
adcb
jns
adc
das
xor
add
push
hlt
int
or
mov
ds
add
pop
add
xchg
mov
lahf
repz
insl
mov
fcoms
ds
inc
fstpl
mov
mov
push
ds
test
add
xor
and
mov
inc
ss
in
cmc
dec
jg
mov
sbb
out
cltd
out
cli
jb
jae
pop
cmp
push
int
in
push
aaa
int
fnstcw
aaa
mov
nop
lret
sbb
lods
loop
mov
cs
nop
lahf
xchg
inc
icebp
or
adc
sub
lret
inc
shll
mov
and
decl
inc
adc
cmp
adc
es
xchg
loope
and
dec
add
cmc
sti
into
sti
dec
cmp
movl
jge
xor
or
bound
cwtl
scas
pop
movsl
mov
ds
xor
mov
jg
mov
das
lret
cmpsl
or
or
xchg
mov
scas
mov
add
mov
aaa
or
stos
inc
sub
insb
fldenv
dec
negb
imul
aam
aad
lods
jge
mov
pop
gs
cmp
outsl
mov
pop
xchg
insb
dec
xchg
cmp
jnp
loopne
adc
shlb
xor
mov
push
aas
cltd
mov
inc
jge
xor
jne
xchg
inc
push
hlt
mov
cmp
das
cmc
jg
fwait
sbb
xor
jno
sahf
jp
repnz
sti
popa
test
dec
cmc
and
in
repz
sub
adc
pop
and
outsl
mov
xlat
fnsave
mov
mov
pminub
cmp
sahf
repz
fwait
jmp
pop
sbb
mov
mov
mov
jns
test
jnp
push
lahf
lods
push
test
stos
aas
jl
jae
mov
mov
adc
adc
data16
sub
aad
or
dec
stc
aad
addr16
adc
popf
xor
pop
fs
adc
mov
popa
aam
int3
fldl
cmc
inc
fnstenv
jle
jp
and
add
pop
jns
dec
cltd
aad
mov
mov
mov
ret
dec
jns
lods
out
mov
push
sbb
jecxz
test
push
xchg
xorl
or
xchg
loopne
mov
sbb
aas
pop
adc
jle
test
call
fldcw
sahf
or
mov
pop
add
nop
xor
add
mov
xor
ret
push
xchg
mov
cli
mov
int
xchg
cld
add
add
shl
xchg
add
xor
xchg
clc
lcall
mov
and
xchg
add
xchg
outsl
shll
and
addr16
jno
xor
call
insl
xorl
pop
xchg
rcr
lret
xlat
std
sbb
aad
and
jle
jle
nop
int3
call
aam
cmc
and
xchg
rorb
sti
jge
ja
dec
imul
or
int
sbbb
sbb
lcall
xor
faddl
and
xor
cmpsb
iret
xor
rcrb
les
sub
adc
scas
push
add
jno
jb
fidivs
inc
test
sbb
push
std
aam
in
jnp
mov
mov
daa
xchg
jmp
mov
pop
mov
jl
hlt
rolb
mov
lahf
clc
aaa
lds
icebp
mov
pusha
mov
pop
push
fidivrl
push
pop
cmp
adc
mov
dec
pop
lds
xor
es
mov
int
inc
mov
mov
and
mov
mov
sbb
xor
add
lods
bound
mov
jecxz
test
in
push
and
push
mov
jle
dec
sub
lods
ret
cwtl
lret
adc
loop
scas
or
sub
filds
testl
repnz
xchg
mov
lret
lea
dec
test
call
rcll
sbb
aaa
sub
mov
mov
mov
xchg
and
push
cmp
ror
or
ja
add
out
enter
sbb
pop
cmpsb
push
test
mov
out
and
pop
jmp
xor
fildl
push
adc
divb
push
mov
cmpsl
push
fs
outsl
icebp
stos
add
incl
fldt
das
pop
dec
push
adc
subl
cmp
insb
and
std
imul
sahf
cwtl
cmp
stos
jo
xor
add
test
imul
adc
outsl
sahf
daa
push
xor
jge
call
or
loopne
out
dec
mov
mov
jle
push
add
loopne
fs
fists
ret
mov
xor
cmpsb
fmul
or
movsb
js
cmpl
cmp
xchg
ret
xchg
pushw
xor
cmp
scas
pushf
movsl
cmp
das
pop
popa
incb
dec
mov
sbb
out
pushf
movsl
dec
add
jp
data16
mov
dec
in
xor
sbbl
fsts
test
jmp
mov
dec
and
push
lret
jb
jecxz
mov
adc
sbb
xor
sahf
and
stos
mov
mov
mov
aaa
sahf
sarl
sbb
fbld
mov
imul
jbe
sbb
loope
notl
and
mov
xchg
sbb
lahf
out
sarl
std
shll
int3
pop
ja
ficomps
push
pop
sti
repnz
in
sub
mov
cmpsb
sub
rcll
das
data16
jl
dec
sub
mov
or
push
cli
cmpsb
dec
push
cld
add
and
mov
lock
das
pop
sti
dec
jnp
js
inc
mov
push
rolb
clc
dec
mov
cmpsl
fwait
and
in
imul
xchg
sbb
dec
mov
xchg
out
sbb
and
fildll
call
jb
mov
jl
in
pop
pop
sbb
fcmovnbe
sysret
and
lret
aad
xchg
lods
loop
inc
aad
jo
push
sub
ror
xor
dec
jno
dec
adc
jo
mov
je
stos
pop
lock
pop
scas
dec
xchg
je
iret
or
outsb
or
mov
pop
iret
jb
sbb
clc
enter
cld
lods
xchg
lret
jbe
pusha
jmp
lcall
imul
repnz
lahf
enter
mov
jnp
cmp
ret
lods
xchg
imul
les
stos
mov
mov
lea
mov
add
bnd
das
int3
jmp
fst
xchg
imul
mov
push
adc
sbb
fidivs
ret
xchg
cmc
pop
daa
pop
cmp
adc
clc
mov
fstl
xor
sbb
mov
mov
and
in
ret
out
in
pop
xor
stos
ret
sbb
flds
stos
sbb
fdivrl
daa
pusha
bound
mov
dec
sub
sbb
push
fdivr
inc
ljmp
mov
and
push
xlat
mov
push
xchg
in
or
div
mov
pop
xchg
gs
aam
pop
mov
mov
inc
xorps
jge
jno
repnz
out
lret
push
mov
sub
adc
std
mov
dec
ss
xchg
xchg
xchg
pop
repz
mov
pop
add
fistps
adc
lods
push
nop
mov
mov
arpl
jnp
fadds
adc
dec
ljmp
fsin
push
das
push
pushf
lret
cmp
cmp
cs
adc
dec
icebp
and
cmpsb
sub
in
aad
popa
movsb
popf
xchg
jns
sbb
scas
xchg
ljmp
fwait
rol
mov
addr16
jns
ret
popa
loop
mov
ret
orl
cli
subl
mov
out
in
push
fnstcw
pop
inc
xchg
fistps
call
mov
faddp
sbb
cmp
adc
lock
adc
cmpsl
inc
jl
lock
popf
mov
repz
out
aam
jp
adc
xchg
test
add
mov
xchg
in
out
mov
fwait
mov
mov
cmp
jle
cmpsb
test
movb
shlb
subl
mov
sahf
jmp
xchg
cmpsl
jg
mov
jle
mov
pushl
int
or
sahf
iret
shll
arpl
cmp
insb
out
ret
lods
mov
lret
mov
shlb
dec
and
loopne
cld
in
call
xchg
ds
es
and
push
mov
jbe
add
jns
testl
decl
dec
rcll
fistpl
mov
and
or
and
inc
popl
into
sbb
outsl
aas
lahf
lret
cmp
les
sarb
jle
adc
add
imul
push
insl
dec
repz
mov
or
daa
xchg
pop
mov
mov
shl
test
rcrb
aaa
cs
xchg
je
fldl
cmpsl
out
data16
adc
fwait
addr16
notl
xchg
sub
sub
xchg
mov
cs
and
lea
lahf
cmp
aad
fsubs
cmp
in
enter
shl
dec
mov
or
mov
test
sub
add
add
cmp
xchg
push
popf
sbb
cmp
dec
push
pop
mov
daa
fcoml
mov
mov
xor
test
clc
and
push
inc
movsw
sub
lods
jbe
out
ss
fucomi
ficoml
neg
ret
xchg
adcl
mov
stos
mov
sbb
stos
lods
dec
sbb
adc
push
dec
lret
addr16
test
punpcklbw
loope
int
movsl
lock
fadds
sbb
das
jae
dec
pop
jecxz
loop
sub
cmc
push
cmp
sti
loopne
out
rcll
orl
mov
pop
add
lret
nop
xor
or
inc
inc
clc
ja
push
cmp
addb
dec
stos
pop
pushf
xchg
in
sbb
adc
mov
in
scas
sub
add
pop
mov
outsl
loop
in
add
xchg
fsub
out
pop
mov
test
dec
jp
pop
leave
in
pop
repz
xor
enter
cli
testl
aas
enter
pop
rcrl
inc
sbb
push
cmp
pushl
negl
mov
xchg
loopne
sbb
stos
inc
ret
jmp
push
bound
mov
jg
or
mov
jp
inc
cmp
int
int
ror
pop
imul
pop
inc
je
push
sub
cmp
pop
sbb
jo
insb
cmc
dec
adc
jmp
pop
fistps
sbb
cld
shll
push
cmp
scas
testb
outsl
outsl
sub
push
cli
jnp
iret
xchg
pop
jbe
xchg
scas
cmpsl
inc
pop
adc
int
cmp
dec
mov
ret
je
mov
sbb
and
cli
mov
dec
mov
inc
mov
xor
sbb
imul
mov
push
and
ret
inc
out
pusha
adc
add
cmp
stc
dec
or
and
mov
repnz
pushf
cmpb
inc
sbb
adc
vpsubsb
scas
mov
js
adc
shrl
add
add
movsb
inc
pop
loope
push
mulb
arpl
aad
sub
jnp
cmc
lock
arpl
cmpsl
add
push
mov
push
mov
in
mov
xor
mov
push
sub
jp
iret
jge
push
inc
adc
push
jnp
adc
cmp
adc
fnstcw
mov
mov
jo
sub
out
mov
dec
call
pop
xchg
adc
adcl
jmp
inc
notl
xchg
add
jb
fmuls
addb
jo
fidivrs
out
add
jge
dec
inc
sub
sub
pop
mov
adc
xor
sarb
dec
cmp
leave
pop
pop
roll
jecxz
dec
xchg
and
inc
xor
push
dec
popf
dec
shrl
pop
jnp
push
jno
rorl
dec
and
out
add
sbb
xor
popa
or
dec
cwtl
add
test
mov
fs
std
mov
push
mov
jp
fs
popf
xlat
stc
inc
xlat
fwait
cmc
lea
mov
out
jecxz
pop
sahf
mov
jge
negb
addr16
dec
sti
xor
cmp
orl
outsb
xchg
xchg
or
dec
inc
andb
jmp
pop
cwtl
pushl
addr16
cmp
xchg
cmp
sbbl
pop
movsb
xlat
push
aad
pop
lods
xlat
lret
mov
sar
shr
inc
insb
test
push
aas
mov
sbb
inc
cmp
jns
mov
fwait
cmp
jge
lret
mov
frstor
jp
or
out
push
xchg
into
xchg
mov
or
data16
fwait
enter
jns
in
pop
push
xor
sub
fnsave
dec
sub
jnp
dec
mov
xchg
sbb
test
mov
push
adc
mov
lahf
fisubrs
hlt
push
lahf
xchg
aam
mov
pop
pop
jge
xchg
xor
dec
fimuls
out
mov
xchg
dec
jl
fbld
add
shll
or
adc
mov
lods
xchg
fsubrs
data16
xchg
fisttpl
pop
jns
loope
insl
xchg
pop
lds
jo
jp
iret
ret
pop
sub
decl
xor
fdivl
push
adc
xchg
pop
pop
dec
push
fcmovbe
into
lahf
mov
jle
inc
jnp
pop
jns
add
in
rol
fidivrs
and
push
xor
out
push
jmp
icebp
cmpsb
icebp
stc
and
test
jmp
adcb
ljmp
lock
psrlw
dec
arpl
incl
xchg
in
mov
std
fwait
pop
jge
lea
js
or
sbb
das
outsl
xchg
jo
out
imul
into
lods
inc
jecxz
xchg
xlat
inc
test
jns
aas
out
fnstenv
test
jge
lock
sbb
dec
ja
ret
xor
mov
rcrl
mov
shll
das
inc
lods
insl
xor
cwtl
push
ja
sbb
in
add
jmp
jge
clc
ljmp
popf
popa
sbb
mov
adc
mov
xlat
daa
push
mov
test
out
leave
int3
fsts
inc
xor
ds
nop
pop
push
insb
rol
xchg
in
aad
outsb
packsswb
out
xchg
jmp
das
out
cmp
pushf
and
and
test
xchg
and
or
cs
add
xchg
mov
pop
loop
popa
mov
dec
shll
loopne
cltd
or
mov
xlat
sbb
xchg
push
std
sbb
stos
and
popf
cltd
lods
cwtl
sub
sbb
dec
cmp
mov
loopne
add
jo
push
push
ss
cltd
mov
jno
dec
mov
fs
cs
fwait
movsb
cmpb
cmp
sbb
rcl
cmpsl
xor
ljmp
pop
ja
repnz
fcoms
js
pmaxub
inc
test
pushf
sub
stos
cmp
je
out
dec
add
insl
shrb
minps
popa
jns
nop
inc
inc
or
cmpsb
cmp
ficoms
fdivl
jecxz
testb
jg
pop
das
push
aad
add
repz
cmpsl
sub
fldl
push
cld
jo
lcall
lret
adc
inc
out
repnz
xorb
mov
and
xchg
sti
pushf
inc
repz
popl
push
leave
je
pop
dec
add
add
xchg
js
int
dec
mov
xor
pop
mov
faddp
cmp
or
mov
lea
jae
leave
sti
hlt
hlt
out
mov
xchg
repz
mov
push
add
and
pop
pop
xor
and
dec
push
push
in
cld
lods
jg
jae
mov
fld
fdivrs
aas
frstor
pusha
inc
xor
push
cmp
int
adc
mov
pushf
in
fs
popf
pusha
xchg
ds
and
and
push
test
std
sub
imul
sti
repz
sub
xor
push
shll
or
xchg
mov
mov
mov
test
imul
idivl
cmpsb
xchg
sub
cmpsb
das
ljmp
pop
inc
inc
add
out
leave
sub
adc
inc
and
lods
jg
mov
pop
sub
dec
test
sbb
stc
lods
mov
popf
jno
movsl
nop
lock
or
push
mov
into
add
inc
mov
and
insb
movsb
mov
inc
lods
data16
shl
cmp
pop
sbb
ljmp
mov
aaa
pusha
negl
stc
fadds
push
mov
sbb
nop
mov
jmp
or
inc
outsl
push
pop
push
in
jbe
pop
pop
call
bound
lods
psllw
mov
fcoml
ljmp
in
lds
xor
out
sahf
out
push
into
push
mov
add
int3
dec
out
pop
out
je
jp
jae
clc
jmp
outsl
std
push
mov
mov
mov
adc
fisttpll
xchg
pop
dec
es
lock
rcrb
arpl
lcall
sahf
aam
cmp
cs
mov
or
or
gs
rolb
pmaxsw
test
std
or
cmp
in
cmc
repz
add
daa
lds
roll
repnz
idiv
cmpsl
out
pop
push
jbe
mov
jnp
and
xchg
mov
leave
add
jno
xchg
pop
pop
cltd
ret
or
pop
xlat
sbb
pop
push
mov
je
fisubrl
xchg
daa
push
into
inc
ret
repnz
mov
push
pop
fstps
mov
and
mov
mov
paddq
lock
mov
push
pop
mov
decb
dec
jle
ja
daa
sbb
or
rcrl
andb
mov
imul
and
adc
and
inc
cmp
mov
xor
in
jno
test
hlt
push
or
or
push
popa
decl
cmp
mov
cwtl
adcl
and
lock
dec
pop
bound
mov
mov
scas
pop
scas
jae
xor
andl
aam
jmp
xchg
jbe
mov
mov
xchg
dec
mov
cltd
scas
jo
xor
mov
sahf
dec
in
je
pop
imul
mov
xchg
mov
ljmp
push
cmp
jo
ss
sarb
popa
lock
pusha
pop
cmp
and
jno
pop
sbb
sub
xlat
jne
dec
xor
js
mov
pop
jle
int3
mov
pop
test
cmp
mov
adc
aas
adc
jae
in
cwtl
mov
loopne
fcomps
popa
mov
std
sub
out
lock
outsl
or
jle
pop
popa
inc
adc
and
mov
mov
repnz
mul
mov
mov
pop
or
aam
lret
subl
xchg
push
icebp
imul
mov
jecxz
daa
mov
in
inc
in
aam
daa
outsl
xchg
mov
leave
jecxz
jmp
shlb
scas
sub
lahf
cs
outsl
ljmp
inc
adc
gs
stos
mov
cmp
pop
lock
clc
sbb
mov
movsl
jp
cwtl
inc
sahf
lret
addr16
pop
leave
fs
call
pushw
les
call
jb
jns
pop
bnd
into
je
cmpsb
mov
movb
lds
or
iret
rol
jns
adc
sti
icebp
jae
mov
insb
mov
stos
ror
and
mov
pop
jecxz
cmc
inc
in
mov
xchg
andl
bound
stos
dec
xchg
jp
dec
or
leave
in
mov
push
gs
mov
mov
sbb
lahf
aaa
adc
dec
test
mov
sub
aam
nop
sub
in
mov
mov
mov
dec
movsb
xchg
or
and
pusha
ret
sbb
pop
inc
sbb
xor
repnz
sub
std
sti
cs
or
xlat
arpl
sbb
addl
xor
outsl
sahf
sar
adc
pop
jns
sub
push
lds
mov
inc
mov
cmp
lret
jae
or
repnz
xor
fwait
xchg
xchg
fcomps
lea
jne
call
test
xor
out
movsl
lods
add
rol
push
popa
xlat
inc
add
scas
call
mov
fwait
test
add
push
cmp
jae
lock
mov
ffree
mov
out
stos
adc
hlt
insb
repz
sub
sbb
imul
popf
cmp
pop
popa
and
incb
rorb
mov
adc
xchg
js
out
out
jno
or
jo
fisttpl
sub
sti
incl
das
and
fsub
sub
cmpsb
adc
mov
in
fidivs
inc
push
mov
aas
aad
push
shlb
in
cmpsl
lahf
es
out
out
jl
nop
mov
xor
mov
jg
sub
xchg
cmp
mov
lret
pop
adc
ljmp
sahf
fisttpll
mov
scas
in
jmp
fisubl
mov
push
adc
std
push
jecxz
hlt
dec
rcl
pop
out
das
mov
shl
and
dec
fisttpl
mov
cmp
inc
push
les
cmp
notl
cltd
gs
test
into
bnd
std
into
push
pop
inc
jmp
daa
inc
es
loopne
shrb
xchg
mov
aad
clc
mov
je
popa
test
lcall
testl
nop
sub
push
xor
fadd
fbld
clc
add
mov
dec
mov
lock
rorb
pusha
mov
nop
imul
loope
or
dec
sbb
inc
int3
jge
mov
pop
and
sahf
movb
ret
scas
push
stc
pmulhw
push
stos
cli
push
div
addr16
add
sub
sbb
jp
int
outsl
iret
dec
mov
dec
push
test
dec
lods
sbb
push
xor
pop
or
outsl
stos
adc
jo
mov
mov
pop
mov
push
enter
cmp
xor
sti
sbb
std
out
insl
mov
bnd
xor
repnz
adc
pop
out
or
lds
and
lret
out
movsl
mov
out
orl
in
icebp
fwait
or
testb
mov
int
xor
cltd
sub
stos
sti
sub
dec
mov
arpl
ret
push
in
jns
das
dec
sarb
pop
adc
aad
push
cmp
sbb
out
ss
xor
fwait
mov
fnsave
add
fsts
xor
sub
in
das
jg
sarl
sahf
xor
dec
add
cs
cwtl
inc
xor
mov
sahf
cmp
jg
imul
fisubrs
jno
pop
cmp
push
sbb
or
xor
inc
pop
aam
inc
sub
aaa
add
fists
and
pusha
adc
loopne
pop
pop
jle
out
rorb
in
mov
hlt
js
stos
rcrl
jnp
fcompl
push
scas
sub
ret
out
mov
push
fistpl
jo
mov
mov
xor
lock
adc
int3
rolb
lcall
dec
push
aad
cmp
mov
bnd
mov
inc
jae
sbb
sub
clc
xchg
lods
mov
push
movsl
in
ret
iret
out
hlt
jae
fprem1
fwait
inc
or
dec
imul
je
das
in
push
orl
leave
and
pop
mov
mov
xchg
loope
dec
push
mov
push
lahf
jg
ret
push
idivl
inc
enter
mov
lret
sbb
and
popf
out
cmp
negl
mov
into
and
push
cmp
push
or
jp
jno
xor
cltd
ror
xor
dec
jl
xchg
cld
cmpsl
scas
fs
pop
insb
int
xchg
pop
xorl
ja,pt
ret
inc
repz
push
sahf
xchg
dec
out
pop
push
push
popf
in
xor
xor
xchg
js,pt
fldt
mov
in
dec
xor
fwait
andb
inc
imul
fcomi
sahf
rcl
cmp
pushf
stc
or
mov
or
or
xchg
cmp
pop
mov
xor
ja
inc
xor
in
adc
inc
push
mov
dec
ds
jge
rcll
lcall
pop
fildll
sbb
lock
hlt
push
mov
dec
mov
mov
in
loopne
xorl
dec
or
mov
jl
push
push
jge
call
out
sarl
scas
ss
inc
mov
xchg
cli
loope
mov
cmpsb
fsubrl
loop
lret
call
xchg
lods
cmpsb
das
dec
popa
sbb
fmulp
test
ret
add
push
sub
pop
jnp
cmpb
ret
ret
mov
aad
pop
inc
icebp
decb
sub
adc
xor
cs
adc
cmp
mov
lods
add
mov
popa
ficompl
dec
in
cli
repnz
or
outsb
xchg
addb
inc
or
sub
into
dec
daa
bound
inc
pop
or
je
into
mov
push
mov
jecxz
inc
push
xchg
dec
pop
xchg
mov
fcmovnbe
icebp
and
push
push
stos
add
movsb
enter
hlt
xchg
pop
sbb
add
js
push
pop
and
jne
inc
insl
jmp
lea
lods
int3
ja
and
orl
adc
pop
and
ret
je
stos
loopne
ds
sti
or
lret
pop
mov
dec
jecxz
fs
aas
mov
js
jp
mov
stos
ret
add
dec
jnp
lret
push
iret
or
inc
pop
jl
xor
and
xchg
and
push
mov
shr
idivl
fs
adcb
add
aad
jmp
push
mov
outsl
sbb
sahf
xchg
inc
mov
dec
mov
jge
or
mov
repnz
cmp
jno
push
lret
pop
ret
dec
in
mov
push
aaa
std
orb
and
leave
mov
lret
std
pop
inc
lods
dec
stos
iret
inc
aam
outsl
test
test
test
pop
ret
mov
dec
sub
push
stos
rolb
test
shrl
loope
adc
xor
cmp
adc
sbb
pop
dec
clc
loopne,pt
push
and
roll
mov
jg
add
add
stos
andb
ljmp
addl
xchg
inc
icebp
adc
pop
iret
or
scas
and
push
loop
shrl
mov
mov
fwait
div
ja
sbb
and
jp
push
dec
fwait
xor
aas
clc
dec
adc
addr16
adc
and
jns
xchg
test
sahf
mov
push
into
dec
cmc
adc
lods
pop
addr16
push
nop
leave
sub
shll
pop
dec
daa
or
mov
push
dec
mov
sbb
sbb
xor
inc
sub
in
incl
mov
xchg
pop
push
dec
and
mov
mov
sbb
packsswb
mov
fcoms
out
dec
iret
adc
mov
pop
cmova
inc
cmp
add
lods
jl
or
sub
xchg
cmp
leave
mov
dec
push
addr16
cmpsb
push
pop
adc
int3
cmpsl
or
mov
and
adc
loop
lods
jbe
in
push
xor
mov
xchg
or
test
adc
scas
xchg
sub
sbb
jbe
and
jp
xchg
sub
sub
sub
lcall
pushf
pop
mov
scas
sbb
mov
push
movsb
jl
xchg
cli
xchg
xorl
pop
jge
jns
dec
mov
mov
add
jl
push
aaa
mov
je
into
pop
idiv
je
mov
in
test
jnp
test
bnd
gs
mov
sbb
addr16
movsl
adc
fbstp
dec
scas
stos
mov
pop
mov
ds
test
cmp
lock
and
add
sahf
jne
jle
inc
in
rclb
or
test
xor
scas
in
jae
insb
sbb
inc
nop
xchg
add
aaa
pop
push
mov
jbe
mov
add
push
dec
inc
daa
addb
push
stos
sub
call
aas
insb
mov
cwtl
sbb
push
mov
decb
fidivrl
mov
dec
in
fildl
mov
cmp
popa
adc
ds
or
xchg
mov
mov
dec
cmpsb
inc
pop
jge
jmp
push
decl
loop
jecxz
daa
fcompl
outsl
ss
fldenv
xor
pusha
jo
inc
mov
jg
iret
mov
lods
mov
jle
or
ja
push
ljmp
andl
sti
pop
cmc
iret
adc
lahf
movsl
fbstp
ret
push
push
inc
addl
jno
push
cmp
loop
ret
dec
dec
cwtl
xor
sbb
sub
mov
jae
jbe
addr16
push
out
dec
xor
adc
shrb
push
sbb
aaa
inc
es
xchg
lds
pop
in
jmp
and
dec
jecxz
add
in
cmpsb
mov
xor
stos
push
or
adc
cli
ss
outsl
jp
outsl
aad
sub
pop
or
push
mov
cwtl
test
adc
test
push
cwtl
jnp
cltd
aam
adc
push
cmp
lods
mov
sar
inc
mov
fisubrs
aad
cmp
mov
mov
xlat
mov
cmp
mov
add
into
jne
cmp
fcoml
lds
pop
sbb
lahf
in
pop
rcrb
sahf
push
mov
test
sti
xchg
jns
andb
adc
imul
test
fnstsw
add
add
out
mov
push
xchg
push
cmp
sbb
in
gs
push
pop
inc
testb
jp
push
ljmp
sub
in
sub
mov
mov
and
jb
cld
lods
popa
mov
insb
mov
movsb
std
or
mov
int3
adc
iret
and
insl
jns
ret
add
jle
add
jle
cld
mov
push
and
fstpt
call
inc
xchg
insb
push
lahf
mov
mov
cmp
mov
xchg
lcall
sbb
jo
dec
ficoml
popa
add
mov
xchg
xchg
ss
inc
aas
mov
mov
mov
divl
inc
lret
outsl
aam
shlb
mov
jecxz
outsl
xchg
xchg
push
leave
jbe
push
arpl
fistpl
and
mov
mov
mov
xor
rclb
adc
lea
pop
lret
imul
inc
mov
sbb
dec
mov
test
sti
mov
ds
cli
inc
push
mov
inc
mov
sbb
adc
scas
scas
scas
in
mov
fbstp
pop
jbe
sarl
and
add
repnz
jle
lahf
aas
mov
bound
pop
fisttpll
dec
insl
pop
push
popf
es
cmp
cmp
and
arpl
sub
das
stos
pop
fsubrs
nop
frstor
jmp
ja
shlb
sub
pop
les
mov
je
sarb
cli
jnp
xchg
push
add
bound
pusha
ljmp
sub
xor
cmp
sar
sub
xor
xchg
lcall
iret
sub
mov
call
sahf
push
ds
mov
xor
inc
xlat
mov
add
lods
dec
pop
fwait
nop
cltd
inc
jns
sbb
arpl
sub
jns
test
sub
ljmp
fimull
and
sub
xor
adc
mov
outsb
jge
lcall
test
mov
ljmp
sti
stos
inc
jnp
fwait
sub
push
mov
outsb
jbe
or
and
mov
mov
add
xor
or
xor
push
cmp
test
mov
sub
add
nop
fwait
adc
imul
mov
lret
movsl
inc
jo
push
push
lock
icebp
adc
test
and
jae
outsl
pop
pop
les
stos
mov
dec
dec
mov
jg
lds
stos
mov
iret
mov
mov
pop
sbb
mov
dec
jbe
bound
pop
dec
aaa
and
sub
add
insb
push
bound
adc
sarb
sti
cmp
pop
or
cmp
cmp
mov
mov
fwait
jae
in
push
ret
fisubl
rolb
mov
cmp
ds
dec
sbb
test
mov
sti
jae
subl
xor
sub
repz
fnstsw
add
repnz
mov
mov
in
jmp
mov
and
bound
push
insl
imul
sahf
das
mov
shrl
into
cld
roll
out
and
add
jbe
cmp
jge
jecxz
or
inc
add
fists
lret
pusha
push
add
loopne
pop
cmp
and
jl
push
jge
mov
ss
lods
mov
jo
add
inc
or
adc
outsl
vxorpd
or
hlt
neg
mov
pop
cmp
mov
jmp
add
pop
stc
lret
ja
pop
mov
imull
div
and
pop
cli
or
gs
cmpsl
cmp
jp
xor
mov
jg
mov
setp
div
inc
rcll
scas
fnstsw
mov
or
pop
fs
stos
andl
xchg
pop
pop
dec
mov
mov
orb
add
inc
sbb
xor
adc
cmpsb
mov
inc
mov
es
add
shlb
outsb
lret
lret
sub
mov
fldcw
or
ror
or
fistps
aaa
cld
ror
fistl
xor
mov
xor
adc
fisubrl
add
pop
jmp
pop
push
daa
jg
and
and
in
pop
push
and
and
sti
xchg
cmpsb
clc
or
insl
lcall
mov
es
push
repnz
jnp
jg
cwtl
cmp
arpl
dec
push
mov
out
sub
rcll
ja
mov
mov
loop
xchg
push
sub
lods
jo
bound
mov
shlb
mov
call
xlat
xchg
and
clc
repz
add
pop
cmp
ss
inc
inc
xor
or
dec
loop
fmull
push
sbb
pop
sbb
inc
xchg
jno
mov
xchg
xchg
cmpsb
adc
and
int
cmp
jl
ds
lcall
loopne
imul
out
push
stc
push
dec
imul
mov
hlt
sub
sbbb
mov
jg
pop
subb
in
sub
jg
aam
insb
push
divb
add
dec
clc
nop
inc
outsl
js
inc
mov
mov
sbb
test
rcrl
dec
daa
cwtl
mov
xor
or
mov
jb
mov
add
sub
jbe
out
inc
insb
mov
and
dec
push
xorl
fdivl
lahf
xchg
dec
cmp
inc
jnp
js
mov
adc
lds
cmp
hlt
xor
lret
mov
aad
cmp
mov
adc
inc
out
mov
add
imulb
repz
lds
test
or
jg
xor
pop
lea
jp
pop
gs
jns
scas
iret
or
pop
sub
pop
fcompp
shlb
xor
mov
pop
mov
adc
cmpl
mov
add
cmp
divb
js
addr16
js
pushf
iret
or
dec
cmp
push
mov
mov
xor
or
idivb
test
sahf
jle
cli
imul
pusha
pop
dec
fcomps
xor
push
add
mov
sub
add
mov
lds
cli
xchg
rclb
testl
inc
mov
test
mov
outsb
jg
les
outsb
push
stc
mov
sub
fists
jo
mov
test
imul
mov
jo
nop
cmc
pushf
and
xchg
leave
add
test
daa
add
adc
int
dec
adc
cmp
fnstsw
in
push
inc
or
in
lea
sti
and
sbb
xor
test
fwait
pop
push
sub
in
outsb
je
popl
mov
and
xchg
insb
jae
and
mov
mov
mov
cld
jp
daa
lret
mov
or
mov
js
mov
orb
insl
incl
dec
cld
cli
fadds
lock
outsb
loopne
repnz
jnp
rorl
and
lock
das
sbb
or
jno
adc
pop
inc
call
rcll
push
jg
test
out
out
lods
daa
and
push
or
jmp
jo
in
out
xchg
mov
pushf
pop
push
fs
fs
dec
js
rolb
aaa
repnz
fnstenv
movsb
data16
into
call
fwait
jno
jns
sub
jg
mov
jne
into
adc
or
arpl
out
mov
cld
mov
mov
push
enter
out
insb
lret
mov
in
cltd
and
out
rclb
xor
jmp
into
stc
push
sbb
cwtl
cmc
fdivr
leave
mov
iret
inc
push
jns
pop
cwtl
ficompl
cmp
add
test
mov
xchg
divl
push
in
mov
cmpsb
mov
sub
hlt
sbb
mov
sti
dec
popa
add
stos
mov
pusha
pop
jno
sbb
xchg
insl
dec
dec
nop
inc
leave
je
lcall
pop
or
push
loopne
js
std
cli
shll
mov
sub
fsqrt
out
ret
inc
and
jecxz
sahf
out
lret
in
xchg
arpl
leave
or
enter
ss
jmp
adc
aas
fdivl
inc
dec
jmp
xchg
cltd
xchg
or
fcoms
into
mov
test
rol
dec
adc
and
dec
mov
push
jnp
aaa
imul
cs
cmp
sub
pop
je
bound
sbbb
out
dec
scas
xlat
xor
jns
es
dec
adc
mov
jns
push
mov
inc
scas
into
iret
jmp
push
notb
jno
adc
rclb
cmpsb
and
loopne
popa
jge
sub
mov
fadds
dec
push
jb
lea
sub
push
lods
push
in
jecxz
sbb
xor
pop
or
adc
or
adc
xchg
jl
sbb
das
outsb
and
inc
xchg
int
pop
imul
sbb
sub
add
jmp
push
cmp
mov
or
mov
jno
cmc
jle
iret
jge
fwait
cmpl
rorl
push
push
cmp
jno
aas
dec
cmc
pop
mov
xor
jmp
loope
inc
in
insl
ss
inc
jmp
mov
roll
int3
sbb
aad
xchg
pop
stc
mov
movsb
and
jp
adc
rcll
and
nop
ja
jo
inc
ucomiss
ret
call
cwtl
lods
mov
fidivl
arpl
jbe
adc
fnstsw
sub
orb
jne
push
add
outsb
xor
mov
gs
mov
mov
or
mov
lds
push
aaa
js
fdivp
rorb
std
inc
lock
mov
stos
inc
push
cli
mov
cmp
lods
xchg
andl
xor
fisubs
jno
or
pop
mov
pop
and
dec
cmc
push
xchg
mov
fcompl
pop
sahf
or
and
jge
std
roll
fiadds
push
jecxz
dec
mov
xchg
pop
inc
mov
xlat
jge
and
push
lcall
xor
mov
dec
inc
arpl
lahf
rorl
xchg
jmp
or
jno
sub
je
cld
sub
xchg
lret
pop
cmc
rcrb
dec
mov
aam
incb
incb
stos
sbb
pop
mov
scas
mov
mov
test
lods
cmp
push
movl
mov
cmpsb
dec
dec
adc
push
jmp
in
cltd
xlat
mov
mov
cwtl
push
cli
pusha
pop
xor
shrb
int
mov
pop
mov
sub
xor
fstpl
push
jb
fildll
in
pop
daa
sbbb
jmp
in
mov
aas
mov
pop
adc
cmpb
into
cmp
pushf
mov
mov
aas
mov
test
int3
adc
lods
mov
sbb
adc
inc
add
dec
ja
pusha
mov
mov
sbb
pop
int3
rorl
jbe
dec
adc
dec
stos
insb
pop
imul
inc
push
jecxz
sbb
or
cmp
dec
adc
inc
push
mov
stos
pop
aam
jno
push
inc
or
mov
sub
jns
test
jnp
int3
fisubrl
mov
xlat
xor
mov
xorb
fs
mov
push
push
inc
and
add
lahf
insl
sub
fisubs
cmp
outsl
pslld
pop
adc
ret
xchg
sbb
xor
lock
inc
cmp
mov
jge
or
and
cli
enter
jbe
xchg
test
pop
adc
outsb
loop
stos
jl
aam
xor
jns
in
dec
mov
mov
xchg
ljmp
jnp
pushf
dec
mov
cmp
inc
jmp
frstor
add
dec
and
bound
sahf
jbe
xchg
or
out
call
push
xor
idiv
dec
pop
sub
les
inc
imul
xor
and
push
ret
js
or
shr
test
out
pushf
test
mulb
jmp
shl
adc
push
mov
pop
notb
or
bound
adc
dec
movsl
pop
insb
inc
dec
push
pushf
test
test
push
xorb
xor
fsubrs
fbld
sarb
dec
outsl
outsl
repz
test
mov
push
mov
mov
adc
mov
shrb
mov
add
and
test
or
sub
mov
fldenv
test
add
mov
mov
sbb
jns
movb
testl
cmp
adc
mov
push
loop
into
cwtl
leave
sbb
mov
pop
paddw
lret
stos
arpl
adc
aas
scas
pop
pusha
cmp
add
aaa
cmp
daa
mov
mov
xchg
jbe
mov
ja
push
xchg
jnp
mov
or
push
dec
xor
push
mov
mov
jl
mov
cwtl
bound
ret
jl
mov
dec
in
int
or
cmc
push
iret
jl
cmp
inc
jmp
repz
sti
jnp
mov
add
aas
mov
lea
out
std
inc
jb
and
fsubp
and
dec
sub
lret
clc
shll
data16
pop
mov
ds
or
mov
addl
add
pop
loope
test
push
jp
push
arpl
les
add
aad
vcvtsi2sdl
call
jl
inc
mov
insl
fcmovnu
sarb
add
fidivl
dec
inc
inc
mov
ret
and
mov
xchg
outsb
int
enter
sbb
mov
leave
push
mov
std
pop
aas
mov
push
xor
cmpsb
or
sub
das
cmp
cmp
push
adc
cmp
ja
jl
push
outsl
mov
and
out
imul
or
mov
out
or
xor
dec
pop
ss
mov
inc
fldcw
in
aad
or
imul
js
pop
xorl
mov
dec
mov
jl
fdiv
movsl
mov
mov
sub
mov
sub
cmp
xchg
fdivrp
mulps
push
mov
and
add
cmp
sub
xor
sub
stos
xor
ja
sub
push
mov
mov
fxch
lea
ljmp
pushf
mov
cli
and
testb
js
pop
and
pusha
dec
stos
mov
sub
js
push
insb
or
mov
xchg
cld
inc
int3
jg
les
repz
pop
adc
cmp
orb
test
jg
mov
jnp
add
dec
enter
inc
andl
push
scas
popa
rorb
inc
jl
data16
rolb
hlt
jmp
dec
push
mov
adc
pop
mov
jle
and
jae
cmpsl
dec
jmp
call
sahf
hlt
cmovs
js
mov
lahf
clc
pop
ss
in
cmp
loope
cld
or
das
inc
pushf
cmpsl
pop
bound
int
out
push
scas
test
mov
xorl
test
movsl
addr16
clc
popf
cmp
fld
fwait
enter
pop
js
out
sub
push
int3
inc
dec
adc
jo
push
nop
cmp
xchg
pop
or
xlat
mov
popf
fmulp
jge
lcall
arpl
daa
xor
adc
jnp
pusha
sarb
insl
sub
rorb
ljmp
sti
xchg
fsub
pop
jg
sbb
loope
jno
adc
in
xor
popf
cmp
mov
push
adc
mov
push
fs
mov
mov
inc
xchg
aad
push
mov
shrl
jne
xor
loope
dec
xor
jnp
and
sahf
lret
dec
cmp
inc
stos
jmp
aad
lret
insl
sti
enter
xor
xchg
jo
mov
lret
mov
and
sub
pop
mov
fs
or
insb
mov
push
test
lods
popf
cmp
and
jne
adc
cmpsb
add
push
lret
mov
sub
sbb
sub
lea
xchg
jg
dec
sub
pop
add
pop
mov
push
dec
inc
in
test
fwait
gs
sub
pop
xchg
sbb
sub
popa
jae
dec
cmp
push
cmpsl
pusha
aad
dec
shrl
jb
jmp
inc
and
clc
call
jp
pop
mov
xor
int
lods
adc
leave
lods
push
iret
les
js
fs
imul
jo
jne
fsubr
push
ror
cs
pop
or
or
shll
fisubl
and
pusha
ret
in
repnz
sbb
or
push
pusha
jecxz
push
adc
inc
test
and
sub
test
add
add
ret
stc
mov
mov
mov
adc
mov
mov
xchg
mov
mov
stc
jb
ljmp
or
adc
mov
mov
sub
adc
movsb
adc
insl
mov
cmp
mov
mov
xor
or
push
daa
mov
mov
out
sbb
mov
xlat
add
test
in
test
insb
cmp
test
cmp
push
jns
std
rorb
inc
test
add
cmc
mov
je
mov
sbb
or
movsb
fcmovu
mov
ret
mov
or
jb
mov
pop
scas
push
js
mov
dec
inc
pop
sub
cli
int3
xor
xor
push
pop
cs
cmpb
call
out
enter
pop
xchg
int
xchg
mov
mov
mov
jecxz
jle
pop
sbb
stos
add
fistpl
xchg
rol
stos
pop
mov
popl
les
sub
sbbb
nop
sub
icebp
subl
cmp
sahf
sbb
push
inc
push
sbb
mov
or
mov
lahf
iret
sub
ret
xor
jb
or
mov
call
mov
and
shlb
mov
pushw
and
pop
add
rcl
push
mov
in
aaa
sub
sarb
aam
in
mov
inc
scas
rorb
push
cld
pop
test
enter
jmp
popf
addr16
mov
inc
es
push
jle
cmp
jnp
incb
idivl
or
inc
mov
rcll
sbb
imul
hlt
enterw
cmpsb
movsb
xlat
dec
pop
or
cmpsb
xchg
add
mov
sbb
sbb
das
mov
int
out
outsl
mov
movsl
sbb
mov
test
mov
xor
add
lea
in
fcmove
pusha
push
and
lret
jge
cmc
dec
aas
pop
iret
lret
push
call
xchg
mov
mov
ds
pop
jg
adc
mov
sahf
mov
sub
cmp
xor
and
sub
mov
jecxz
pop
or
jge
lcall
mov
int
xchg
mov
into
outsb
sahf
sub
mov
in
mov
and
sahf
pusha
mov
or
repz
jmp
les
ror
xchg
add
jge
ljmp
push
adc
imul
cltd
cs
and
fs
xchg
enter
ss
sti
jge
fldcw
or
aaa
mov
and
in
xor
std
fucomp
call
jnp
push
add
imul
jb
cwtl
outsl
clc
out
xorl
js
jmp
and
push
ljmp
out
pop
dec
andl
dec
pusha
add
sbb
or
or
loopne
repnz
cmp
fldt
out
outsl
pop
and
lea
jg
popa
pop
adc
adc
xor
js
add
adc
sbb
cli
jne
push
jmp
popa
add
test
int3
out
rol
in
inc
add
aas
xor
push
cmp
mov
fsin
push
sbb
xchg
mov
sbb
jb
inc
jbe
insl
xchg
mov
mov
stos
inc
rsm
arpl
imulb
or
push
and
inc
stc
mov
scas
xchg
jl
pop
andb
xchg
testl
mov
out
xor
and
mov
imul
pop
lods
adc
ss
push
repz
mov
and
jns
mov
fldcw
mov
mov
adc
test
pop
negl
lds
xchg
xlat
sahf
loop
sahf
push
ljmp
adc
dec
mov
push
dec
jbe
outsl
jb
push
xchg
outsb
xchg
lods
lret
mov
fimull
popl
adc
xor
jo
ficompl
in
addr16
jb
inc
cwtl
imul
push
or
mov
add
pop
sub
sub
ret
xchg
push
inc
dec
fisttpl
hlt
rcrl
add
jns
lods
cmp
adc
mulb
push
xchg
outsb
es
push
pop
lahf
clc
fwait
inc
cmpsl
xor
add
mov
cmpsl
rclb
pop
fistpll
inc
fimuls
movsl
in
mov
mov
lret
call
fcmovb
push
lret
xchg
sbb
aaa
aad
mov
xchg
scas
add
ret
mov
mov
outsl
les
jecxz
call
lcall
dec
add
andl
scas
mov
mov
imul
lds
mov
out
cwtl
icebp
or
push
pop
lods
pop
test
fdivs
inc
jno
imul
sbb
addr16
hlt
test
in
movsb
or
test
mov
ljmp
mov
lods
jo
jne
push
push
add
imul
pop
insb
nop
test
fcom
outsl
mov
ljmp
loop
outsl
pop
das
xchg
mov
rolb
mov
pop
stc
sub
hlt
xor
nopl
call
jo
push
or
mov
pop
sbb
aad
and
cmp
fisttps
fldcw
es
add
dec
or
sub
cmc
rcl
push
shl
xchg
lea
and
adc
lods
xchg
sbb
xchg
push
scas
out
mov
ja
jecxz
adc
mov
mov
nop
pop
repnz
lss
test
xor
ret
test
mov
jne
and
or
inc
fwait
inc
xor
vpmacswd
jne
ret
and
xchg
and
and
lahf
push
push
jp
or
lcall
push
fisttpl
cmc
data16
or
ss
int
leave
mov
inc
push
sarb
ds
outsb
insb
enter
lea
test
test
jb
das
sub
fsubrs
je
xchg
mov
repnz
add
int
push
xorb
cmp
das
mov
call
cmp
xchg
xchg
add
insb
popa
call
clc
adc
sub
push
mov
lods
xchg
mov
jae
lar
js
sbb
push
jns
inc
mov
cmp
dec
rclb
mov
mov
mov
fcompl
sub
mov
sbb
adcl
jns
adc
sbb
mov
mov
lret
mov
and
pushf
xor
inc
mov
mov
lock
sahf
dec
int3
shrl
mov
cli
insl
dec
xchg
xchg
add
dec
fidivrs
and
out
and
jns
add
dec
jle
push
mov
cltd
jp
pop
cmc
lahf
enter
adc
ret
enter
repz
adcb
rclb
mov
fs
dec
mov
adc
xor
lods
xorl
out
roll
and
cwtl
ret
aaa
cmp
lcall
cmpsb
sub
cmpsb
les
adc
fisubrl
xchg
cmc
rcrl
mov
add
cmp
sub
loope
addb
mov
movsl
aas
inc
xor
sub
enter
inc
mov
out
jl
ljmp
sub
mov
fs
or
and
pop
cmp
jnp
xor
enter
fsubs
pop
push
cwtl
pop
ss
pop
sbb
pop
pop
sbb
push
popa
outsb
in
outsb
push
pop
leave
repnz
filds
xchg
push
mov
aad
xlat
lcall
adc
addl
mov
pop
in
lret
popa
fucom
push
imul
ret
cmp
into
jmp
pop
jae
int
mov
xorl
cld
adcl
add
fisttpll
dec
scas
mov
outsl
outsb
mov
jne
mov
mov
push
adc
inc
test
adc
and
pop
sarb
jge
mov
dec
sub
aas
subl
dec
mov
inc
call
lret
push
rcrl
rol
and
sub
clc
inc
mov
outsl
lock
pop
jo
ja
dec
and
add
dec
flds
mov
scas
sub
xor
ret
subb
mov
lret
fisttpll
and
fldl
xchg
std
jmp
outsl
stc
sub
arpl
test
push
rcrb
sarl
add
out
mov
repnz
fisubl
imul
and
and
repnz
movl
inc
in
mov
push
and
mov
xor
lock
test
mov
aaa
xor
imul
lret
xchg
pop
loop
imul
in
cmp
xor
test
mov
xchg
mov
test
aad
daa
lods
inc
xlat
adc
lods
xchg
or
andl
lcall
ljmp
les
inc
aaa
test
leave
push
pop
jns
lahf
fcom
stos
loopne
dec
out
lea
add
xor
cld
ja
pop
xchg
xchg
sub
dec
repz
gs
int
mov
push
and
addr16
jecxz
sub
xor
addr16
sub
inc
or
and
xchg
sarl
add
icebp
out
sub
loope
in
pop
dec
adc
mov
mov
add
jnp
fdivrl
add
push
push
ja
pop
xor
js
xor
adc
mov
push
mov
push
xchg
push
jge
jmp
sub
dec
cli
pop
sub
pushf
mov
shll
addb
daa
xchg
mov
add
add
shl
jo
jg
add
pop
sbbb
mov
sub
or
xor
imul
scas
inc
ja
in
xchg
lds
dec
or
xor
xchg
xchg
imul
add
xchg
fwait
ljmp
dec
or
sbb
vpmaddwd
dec
mov
in
sub
jne
leave
mov
outsl
jae
and
insb
lret
stc
fisttps
cwtl
leave
test
and
mov
movsl
inc
mov
in
jae
inc
mov
push
mov
mov
and
jmp
xchg
push
pop
and
repz
test
das
mov
jb
jae
or
imulb
lcall
data16
mov
push
lea
outsb
dec
mov
jmp
cmp
add
es
xchg
dec
iret
mov
out
pop
fnstenv
jl
insb
mov
stos
and
shl
jo
daa
adc
lock
add
ljmp
popf
enter
xor
adc
jmp
mov
mov
mov
jo
lds
lds
fs
testb
mov
iret
xchg
xor
jle
adc
insl
shl
bound
pextrw
add
push
pop
test
outsl
mov
xor
fsubs
stc
push
insb
jo
adc
inc
cmpsl
pop
add
cmpsb
frstor
pop
jl
jno
call
pop
or
add
xor
cmc
sub
fimull
dec
add
jno
mov
push
mov
inc
je
jle
shll
jg
xchg
push
jb
mov
mov
test
inc
push
xor
jp
push
test
out
jo
outsb
xor
out
xchg
push
and
jnp
push
lahf
cld
lock
pop
push
je
mov
jb
imul
sub
push
jmp
xor
cmp
xchg
fnstcw
lods
mov
push
mov
cmpsl
outsl
lret
sti
xlat
xlat
shl
ret
insl
orw
pop
loopne
jle
cwtl
pop
pop
add
jp
sbb
je
push
mov
jmp
cs
lds
movsl
inc
pop
pop
add
rcrb
inc
daa
mov
arpl
lret
push
add
add
push
push
lcall
xchg
xchg
mov
stos
sahf
aas
in
mov
imul
rcrl
test
mov
adc
inc
ret
sbb
fbstp
jo
sub
and
push
sahf
mov
stos
mov
sbbl
inc
test
jns
fistpll
cli
xchg
mov
and
mov
in
xchg
xchg
stc
cmp
mov
or
lret
mov
lds
stos
aaa
in
lock
add
add
lods
outsb
fsubs
add
mov
idiv
cvtps2pi
mov
push
mov
mov
dec
jno
add
in
jmp
mov
mov
stc
push
mov
dec
cmp
cld
nop
stos
in
inc
mov
fucomip
idivb
in
push
ds
ret
mov
movsl
in
sarl
jmp
hlt
pop
adcb
lods
pop
dec
orb
cmpsl
pop
jo
cld
hlt
fimull
bound
into
mov
fisubrl
stos
xchg
xchg
mov
pop
repnz
mov
mov
and
xorb
fsubs
xlat
mov
inc
repz
movsl
jne
jp
popf
pop
jp
xchg
cmp
sbb
pop
imul
dec
out
rcrb
shll
push
fcoml
mov
pop
testb
or
sub
je
es
mov
int3
push
xchg
pop
pop
arpl
ret
test
xchg
mov
std
fiaddl
mov
stos
loop
pop
xchg
xchg
int
addr16
rol
into
jecxz
mov
xor
jno
pop
cld
and
popf
xchg
sbb
fwait
sub
sub
xchg
inc
leave
in
push
and
fsubrs
addr16
cmpb
jge
mov
ficompl
add
cmp
or
pop
or
sbb
xor
negb
add
pop
sbb
test
sbbb
xlat
cs
mov
jge
add
inc
popf
iret
sub
sbb
push
test
or
push
psubusb
dec
cmp
pop
outsl
push
int
insb
jno
std
stos
cld
xchg
jle
xlat
out
std
sbb
mov
imul
into
jg
shll
push
cmc
mov
repz
fnstcw
add
out
mov
dec
stos
pop
les
xchg
outsb
fcompl
leave
cltd
pushf
insl
xchg
mov
lock
sub
cltd
or
and
mov
sbb
push
cmp
arpl
pop
jl
int3
jge
adc
fsub
ds
and
rcll
into
scas
std
jle
and
popf
xlat
fiaddl
sbbb
cli
sar
add
and
adc
or
repnz
sbb
js
mov
repz
jnp
roll
nop
shll
movl
or
cs
sub
jle
mov
mov
rcr
mov
jmp
jae
adc
lcall
repz
inc
cltd
pop
imul
mov
mov
aas
mov
cli
mov
je
xchg
cmp
ret
test
pop
push
ror
xor
aas
scas
jns
out
push
xor
inc
push
sub
sub
inc
out
in
test
popa
mov
outsl
pop
cmp
fsubrl
sbb
nop
test
xor
into
jge
lods
flds
cltd
lahf
mov
out
pop
jne
loope
sbb
popf
aam
mov
imull
jg
in
adc
dec
sarb
push
mov
adc
idivl
push
into
decl
xchg
sbb
ss
jl
mov
dec
clc
dec
fdivrl
cmp
cwtl
nop
inc
daa
cmp
jmp
fistps
fnstsw
aas
mov
mov
into
adc
adc
xor
pop
ret
sub
sub
je
mov
inc
jbe
or
les
push
pop
aas
je
sti
test
out
sbb
stos
lods
sub
push
in
rclb
add
fstpt
jnp
addr16
push
outsl
or
or
inc
dec
xchg
repnz
xor
cmpsb
sub
in
imul
push
mov
mov
sub
je
cmc
inc
ret
mov
jl
cltd
mov
mov
lahf
mov
inc
jbe
in
push
in
add
lods
hlt
sub
mov
push
dec
je
cmp
sarl
fdiv
out
push
and
popa
lahf
scas
movsb
in
or
out
sub
daa
mov
xbegin
ficompl
sbb
pop
mov
cmp
outsl
ffree
xor
outsb
push
cmp
gs
mov
cmp
jae
scas
jns
xor
push
adc
sub
xchg
mov
adc
mov
ss
push
out
mov
mov
fistpl
cmpsb
int
inc
sbb
mov
int
pop
bswap
loope
mov
push
sub
ret
fstpt
adc
and
rcll
repnz
xor
mov
fwait
or
arpl
mov
stc
mov
xor
fst
rclb
fdivrs
addr16
push
mov
cmp
add
mov
sub
add
and
pop
movsl
call
mov
xor
fcmovu
pop
push
sub
jle
add
mov
std
ret
mov
xchg
scas
into
lea
jl
cmp
mov
mov
mov
lock
fwait
push
mov
in
sahf
loope
inc
inc
sub
push
push
inc
insb
hlt
xchg
push
sub
arpl
shrb
adc
shlb
sahf
std
pop
lcall
fisttpl
dec
fcmovnb
std
jne
mov
iret
in
rcl
sbb
adc
in
jbe
jb
shll
das
mov
ret
mov
push
cmpsl
ljmp
mov
faddl
or
jmp
mov
and
testl
aaa
and
bound
test
fsubrl
mov
insb
fcoml
subl
xchg
and
jb
lcall
out
and
push
cld
lock
std
xchg
adc
in
fisttpl
loope
push
mov
sbb
inc
xchg
jbe
inc
mov
mov
mov
inc
lods
push
jmp
cmp
adc
outsb
and
aad
lahf
cmp
cwtl
xchg
mov
xchg
fs
lret
and
push
push
cmp
jb
xchg
inc
shrl
and
ror
sti
add
jnp
sbb
stc
cmpsb
dec
xchg
or
je
xchg
jg
xchg
fldenv
push
mov
jge
mov
sar
mov
push
or
xor
mov
lret
pop
or
int
jecxz
mov
cmpsb
jle
jno
lea
add
scas
cmpsb
inc
in
lret
stos
or
jl
in
xchg
jae
je
or
xor
jno
jmp
dec
test
test
out
sub
clc
out
aaa
and
fldt
dec
push
outsl
fisubl
jg
mov
sub
and
popa
xor
dec
mov
sub
rcll
and
sbb
jns
sbb
xchg
push
shlb
lret
sub
test
sub
int3
outsl
inc
add
cmp
cmc
xchg
lds
xlat
mov
mov
mov
fldenv
push
push
inc
pushf
pop
add
fcmovne
fiaddl
cwtl
rorb
dec
cmc
hlt
add
subb
mov
test
bswap
xor
lods
add
mov
mov
sar
inc
dec
or
mov
out
lret
dec
push
add
lcall
fs
insb
jle
dec
pop
add
xor
push
jg
mov
ja
pop
mov
stos
cwtl
jmp
repz
iret
lods
in
lret
icebp
andb
add
and
xchg
nop
sub
and
xchg
pop
aas
outsl
adc
jbe
ljmp
scas
mov
imul
shlb
in
mov
outsb
push
notb
inc
xchg
push
dec
jge
mov
pop
mov
fnsave
fs
pop
xor
jp
dec
pushf
lahf
iret
pop
mov
push
iret
pop
mov
push
and
pop
sbb
outsl
idivb
cmc
mov
mov
inc
popl
mov
mov
movsl
pushf
daa
stc
popa
push
repz
loope
add
sbb
push
pop
cli
das
daa
fildll
jb
xor
test
xor
enter
loop
imulb
add
sbb
les
push
sbb
and
ret
adc
ljmp
rcrb
add
inc
punpcklwd
adc
push
mov
iret
mov
stc
clc
push
and
sub
lea
mov
mov
cmp
cmpsb
imul
lock
dec
xlat
adc
xchg
xchg
cmp
lods
je
or
sub
mov
enter
sbb
push
mov
in
movsl
int
mov
sub
ficompl
mov
xchg
out
imul
scas
dec
rcll
insl
imul
jmp
enter
scas
pop
aad
arpl
loop
psrad
bnd
pop
push
mov
push
rorl
vucomiss
jno
int
mov
and
sub
sub
push
adc
jmp
mov
push
or
movsl
mov
pop
pop
loop
aam
es
out
les
nop
or
adc
dec
jae
or
jae
sub
and
test
add
ljmp
cmc
push
jne
aas
dec
add
xor
ja
jo
shll
lea
jg
fistl
xchg
or
ljmp
imul
xchg
stc
xor
sub
mov
pop
stc
sbb
xorb
cld
pop
pop
cltd
xchg
pop
mov
add
popa
sbb
xchg
pop
mov
outsb
pushf
stos
mov
div
sub
sbb
movsb
ljmp
shll
loop
sub
in
out
mov
mov
fwait
aaa
ds
loope
bound
sti
shll
dec
jo
dec
sbb
lret
pop
dec
pop
rorl
addr16
inc
dec
push
fs
jbe
fimuls
mov
js
mov
sahf
in
or
jnp
push
negb
xor
aam
loope
mov
xchg
ret
bound
hlt
data16
sti
out
and
jg
add
adc
cmpsb
inc
movsl
jp
push
adc
nop
cltd
stos
cmc
sub
or
adc
sub
xchg
sub
cmp
mov
ss
gs
aam
icebp
in
sbb
xor
xlat
fldl
sub
movsb
test
mov
popf
jle
inc
jmp
sbb
stc
xor
aaa
and
cli
std
inc
dec
test
arpl
or
rcrb
and
and
pusha
cltd
inc
les
sbbb
sub
xchg
mov
loop
mov
rorb
andl
jne
xchg
test
pop
adc
xchg
mov
mov
mov
mull
rorl
repnz
sub
cmp
push
mov
int3
or
test
mov
sbb
into
sub
stc
dec
packsswb
jns
pop
repz
in
test
testb
pop
sbb
mov
cwtl
and
or
mov
pushf
sub
int
popa
adc
cmp
xor
hlt
mov
loopne
cmc
mov
adc
data16
pop
dec
jnp
mov
aaa
clc
sub
adc
mov
fnstenv
sti
push
mov
into
dec
enter
push
sub
pand
clc
sub
xchg
flds
nop
and
push
cmp
sub
movsb
testb
push
out
clc
aam
jg
jne
les
mov
xchg
fs
mov
nop
xor
nop
es
pop
clc
mov
pop
addr16
push
xor
mov
movsl
push
fistpl
loope
hlt
das
and
enter
xchg
add
sub
jge
jno
out
aas
scas
cmc
rcrl
push
das
sbb
lods
or
fcmovnu
inc
mov
ja
loop
jg
aam
sub
push
fistps
pop
int3
and
jo
add
std
jge
xchg
ja
adc
inc
aam
scas
in
add
mov
movsb
sbb
dec
cld
cmpsl
pop
add
pop
mov
sub
cmp
dec
shll
test
insb
mov
sub
sub
ds
cmpl
cvtdq2ps
mov
inc
std
push
xchg
mov
outsb
cmp
pause
dec
mov
dec
icebp
in
nop
leave
lea
out
imul
sahf
ror
sbb
adc
mov
test
shll
pop
adc
dec
adc
mov
or
mov
xlat
inc
push
or
lods
test
insb
and
sub
movsb
or
gs
ret
movsl
xchg
pushw
inc
inc
mov
add
rorl
insl
sbb
sahf
hlt
add
sbb
add
shll
jo
rolb
push
imul
scas
adc
fiaddl
sbb
das
xchg
add
cmp
mov
sbb
call
xor
pusha
test
nop
or
lret
scas
inc
jbe
out
cwtl
push
loop
mov
sbb
pop
jl
mov
imul
sub
jae
mov
pop
add
mov
or
movsl
cltd
adc
ret
dec
out
inc
jnp
lcall
insl
pop
cld
ret
lcall
xchg
fistl
cmp
fcompl
xchg
mov
out
jmp
or
pushf
add
int3
push
cmp
inc
divb
jae
jnp
xor
lods
push
loopne
aaa
push
inc
enter
mov
outsl
sbb
out
sbb
mov
or
fs
pop
mov
push
inc
aad
jnp
scas
data16
push
jp
dec
mov
adc
xor
int3
inc
call
xchg
lret
outsb
aad
scas
pushf
mov
js
xor
cmp
out
les
jecxz
sti
mov
in
mov
mov
je
mov
adc
outsb
lods
lea
mov
lds
and
rclb
cmp
jmp
mov
mov
mov
stos
mov
xor
adc
jl
aas
pop
push
jno
scas
mov
mov
push
sub
mov
subb
inc
dec
roll
push
inc
sbbl
ljmp
push
adc
lods
out
ret
sbb
shlb
daa
das
daa
mov
pop
daa
loop
jnp
imul
out
movsb
nop
loopne
mov
add
mov
push
jge
jnp
out
loopne
fdivl
ds
push
test
iret
dec
pop
lods
or
mov
pop
add
shl
jb
pop
inc
push
das
cmc
pop
sbb
stos
out
clts
push
lods
mov
scas
xlat
or
jns
adc
loopne
push
xchg
mov
pop
xchg
pop
jae
mov
sbb
mov
jbe
int3
into
cmp
imull
lret
rcrl
pushf
mov
int3
movsb
sbb
adc
xor
cs
xchg
out
stos
mov
sbb
subb
pop
and
movsl
rcll
imul
fldenv
xchg
stos
in
adc
push
js
add
imul
pop
inc
add
sbb
inc
repnz
mov
adcl
jmp
dec
mov
inc
push
in
jbe
adc
pop
imul
nop
cmp
sbb
in
aaa
cmpsl
inc
add
call
push
jae
or
cltd
cmpsl
push
stos
push
jl
sub
xchg
fmull
mov
inc
and
ds
add
ja
das
xchg
insl
out
fwait
sbb
cwtl
dec
outsl
push
pop
popa
cmp
jl
mov
pop
out
in
mov
sahf
mov
sbb
shlb
add
cmp
add
lods
mov
and
ja
test
in
or
je
ficomps
icebp
cmp
push
push
rorl
ja
iret
jne
sbb
shlb
loop
repz
jb
enter
test
jg
mov
stos
mov
bound
dec
xchg
sub
ja
shll
cltd
dec
or
mov
sbb
lods
dec
in
hlt
mov
jno
cmpsl
and
insb
mov
aas
xlat
fdivs
bound
fildl
sahf
or
ret
add
decb
sbb
addr16
js
inc
fcomps
sbb
mov
and
mov
mov
loop
add
nop
std
in
mov
dec
cmc
and
pop
cwtl
lahf
sbb
roll
mov
jl
mov
push
dec
stos
xchg
je
sbb
loop
cmpsl
sbb
pop
aaa
shrl
and
dec
sbb
push
pop
sub
push
adc
test
repnz
fstpl
call
inc
sub
sub
fisttpl
outsb
xor
adc
mov
das
adc
xor
jl
loope
daa
pop
outsl
fdivl
push
pop
mov
aaa
push
lods
lock
scas
inc
lret
dec
pop
cmp
mov
dec
dec
or
mov
lods
bound
call
mov
outsb
add
push
xchg
jbe
jecxz
jbe
pushf
dec
cmp
jle
leave
das
mov
nop
loop
imul
ljmp
fimuls
repz
scas
cmp
lods
add
push
lds
dec
lds
test
cli
call
stc
pop
adc
popa
aam
mov
lret
and
push
mov
fistps
add
rcrb
fiadds
xor
push
mov
adc
ljmp
mov
and
mov
sub
pop
mov
mov
aam
mov
xor
mov
rcrl
xchg
adc
out
out
mov
sbb
mov
jg
nop
in
movsb
into
or
inc
pop
mov
out
enter
push
cmp
ret
lods
subl
in
bound
lock
jns
mov
xchg
sbb
cwtl
leave
sbb
outsl
scas
dec
and
cmp
xchg
xchg
pop
mov
cmpsb
pop
jnp
xor
push
mov
push
sahf
mov
lods
sbb
cmp
xor
pop
stos
sub
jp
mov
repz
int
mov
rclb
jo
mov
push
rol
jp
fmull
push
les
outsl
sub
jecxz
pop
test
jl
loop
mov
add
dec
addr16
out
jno
cmp
cs
dec
cmpsl
adc
inc
outsb
out
push
shll
in
out
cmp
and
imul
test
xor
mov
cwtl
xchg
or
or
fs
pop
pop
or
ret
mov
dec
push
or
cmp
scas
mov
rcl
fistpll
mov
pop
xor
add
enter
jp
scas
push
push
sbb
data16
cmp
cmp
cltd
sti
shrb
mov
push
fcomip
cmpsl
movsl
aaa
sahf
stos
push
jno
mov
sbb
ja
or
add
cmp
hlt
orb
mov
lock
cwtl
sub
fmull
icebp
mov
mov
or
sub
mov
mov
mov
pop
loop
int3
imul
sbb
cltd
dec
lret
enter
cmp
daa
push
stos
int3
sub
push
cmpl
cmp
push
fs
pop
sahf
jo
outsb
jno
lods
dec
movsl
adc
negl
pop
mov
test
jns
xchg
jmp
pusha
aaa
jecxz
aaa
sbb
jg
je
xor
pushf
cmp
cmp
jno
out
and
xchg
dec
xlat
or
lahf
notl
loope
lret
or
loopne
add
loope
leave
pushl
fstps
add
lods
xchg
pop
xlat
jmp
cmpsb
clc
dec
insl
push
mov
push
lods
push
push
add
xchg
aam
movsb
xchg
add
mov
push
jg
sub
lds
fwait
mov
movsl
movsb
sub
gs
mov
dec
and
cltd
mov
pop
lahf
mov
xchg
push
loopne
mov
mov
jnp,pn
mov
jbe
divb
loop,pn
mov
cmp
lock
ret
mov
mov
pushf
cld
fwait
mov
mov
sub
cmpsb
jns
insl
loope
icebp
push
ret
leave
lcall
sub
fsubrs
lods
addb
jecxz
xchg
push
add
insl
insl
call
mov
sub
mov
pop
pop
outsb
inc
out
pop
dec
lahf
pop
mov
dec
sub
loope
push
xor
or
repz
aam
inc
cld
outsl
adc
dec
lods
jnp
dec
into
ds
clc
stos
popf
stc
lcall
sub
mov
and
cwtl
lret
adc
jmp
jecxz
mov
pop
add
dec
sarl
xor
xchg
sahf
outsb
insb
shlb
or
shl
dec
lahf
popf
adc
mov
clc
or
out
inc
sbb
clc
sahf
push
not
sarb
popf
adc
mov
jmp
add
out
pop
sbb
mov
add
mov
jge
addr16
sbb
pop
mov
iret
and
daa
mov
mov
jp
add
or
hlt
jbe
jl
pop
fldt
push
or
scas
add
xor
rclb
sbbb
iret
xchg
cwtl
scas
scas
lds
mov
add
inc
rclb
mov
xchg
pop
dec
aam
stos
mov
pop
inc
jge
sbb
mov
lcall
dec
fmuls
add
pusha
movsl
test
in
pop
jnp
int3
cmp
movsl
or
fcmovu
inc
or
push
mov
push
sbb
sbb
sbb
sbb
sbb
loope
popf
xchg
dec
push
adc
mov
loop
lahf
int
insb
mov
outsl
pop
insl
rol
iret
cmc
mov
test
rol
pop
call
es
sbb
test
addr16
cmp
pusha
ja
lcall
cmpsb
in
inc
outsb
inc
sbb
movsb
mov
adc
mov
stos
xor
loopne
dec
or
mulb
inc
pusha
xor
mov
xchg
ret
xchg
inc
push
dec
aam
shr
cmpsl
cmpb
lahf
jns
imul
out
dec
lock
stos
mov
jl
xchg
fdivrl
mov
outsl
movsl
adc
push
push
popf
jno
xor
mov
and
sub
je
mov
movsb
mov
inc
nop
inc
insl
test
into
cltd
clc
add
les
jno
mov
loop
test
sahf
push
mov
cmpsb
xchg
dec
jecxz
loope
pusha
and
cpuid
adc
cmp
xor
inc
xchg
enter
mov
sub
call
out
dec
rcrl
popf
in
imul
jmp
or
mov
jns
mull
cs
mov
stos
in
psllq
minps
xchg
fldenv
push
jbe
jb
shrb
fstpl
and
fdivrp
dec
push
dec
and
sti
repnz
push
pushf
stos
jae
cmp
lea
test
mov
scas
hlt
cmp
xchg
add
js
jae
inc
jmp
lods
ss
mov
sbb
push
xor
pop
ja
sub
or
sahf
and
cmp
xor
sahf
in
stc
xor
hlt
mov
andb
add
fldl
xchg
push
test
or
xor
xchg
inc
lret
cmc
mov
or
je
pop
cmc
sbb
push
cltd
dec
rcl
call
std
testl
sub
cmp
stc
mov
loop
cmp
jle
add
cmp
inc
testb
sbbl
mov
les
or
mov
iret
outsl
fcmovnb
lea
adc
jns
out
inc
dec
push
insb
add
pop
divl
pop
scas
inc
clc
inc
adc
dec
xor
xchg
jnp
adc
fists
dec
add
fsubrs
xchg
movsb
xor
leave
sbb
inc
stc
mov
sti
mov
sbb
xchg
inc
mov
cmpsl
adc
or
hlt
xchg
cmpb
add
inc
pushf
in
xorb
repnz
push
scas
outsb
sub
push
popf
pusha
pop
xchg
or
add
push
pop
in
inc
stos
xchg
and
data16
mov
mov
sub
mov
out
pop
iret
jp
jno
dec
stos
pop
loop
xchg
push
xchg
add
inc
scas
iret
repz
pop
out
xor
and
out
or
xchg
fildl
add
mov
fnsave
jnp
mov
mov
mov
or
cld
aad
xchg
sbb
ja
sbb
bound
pop
xchg
inc
push
push
repz
sti
pop
inc
adc
sub
jnp
call
insb
fistps
js
dec
aam
fs
xor
xchg
adc
leave
xchg
cmp
stos
inc
iret
add
aaa
xchg
mov
inc
cwtl
mov
js
lock
js
cmp
xchg
add
int
cmpsl
mov
jg
ficomps
aaa
adc
aas
out
outsl
adc
cmc
or
sti
inc
jnp
out
test
lahf
pushf
mov
sarb
and
push
mov
stc
jle
into
sub
cmpsl
cltd
pop
push
sub
xchg
mov
push
add
mov
sub
mov
das
dec
or
lock
pop
popf
dec
orl
push
mov
faddp
movsw
mov
call
cmp
pop
in
mov
mov
and
sti
xorl
pop
sub
cmp
inc
cli
xchg
push
imulb
pop
adc
dec
scas
ret
ss
add
shlb
xor
hlt
mov
xor
sti
movsb
stos
jg
jbe
pushl
sarb
xor
dec
add
icebp
mov
xchg
lret
pushf
and
jbe
mov
inc
pop
mov
push
inc
xchg
shlb
mov
push
xchg
push
sbb
hlt
push
stos
es
bound
movsb
popf
in
rcl
lods
xor
jae
call
insl
dec
mov
mulb
lcall
out
jmp
cmp
add
movsl
cmp
and
stos
pop
mov
cmp
mov
pop
sub
aad
rcll
hlt
rorb
xchg
xchg
mulb
mov
sub
sbb
scas
or
divl
sub
push
daa
adc
cmp
aad
rol
clc
dec
fldl
in
pop
adc
cmp
int3
repz
dec
shlb
jmp
rcl
cmc
fs
or
mov
inc
pop
daa
xchg
test
imul
jbe
out
xor
mov
repz
xchg
mov
cmp
lock
sbb
mov
add
clc
sbb
aas
lock
cmp
push
cltd
sub
jmp
jle
add
xchg
pop
divl
cmp
push
mov
cmp
jae
push
cmp
adc
jno
sub
jnp
push
inc
add
mov
jno
stc
sarl
in
pop
fldcw
out
lret
mov
mov
cmp
insb
pop
shr
sahf
push
sbb
lds
add
dec
repnz
xor
or
xchg
leave
push
flds
and
lret
adc
out
shll
fidivrl
addr16
add
sahf
sbb
imul
push
movsl
cmp
out
push
and
dec
cld
mov
xchg
idivl
mov
push
scas
pop
lret
data16
insl
dec
pusha
and
xchg
xchg
je
or
ret
jnp
dec
test
mov
rolb
scas
xor
xchg
pop
sbb
or
mov
loopne
fstpt
loop
inc
cltd
int3
ret
fwait
cwtl
add
dec
mov
lods
fld
mov
pop
inc
mov
sub
push
fsubrl
popl
push
popa
push
push
adc
loopne
fnstcw
les
xchg
or
scas
xlat
jne
pop
jb
movsl
call
ficoms
jl
cmp
data16
and
push
cmp
push
ficoml
mov
ficomps
jo
fmull
sub
in
shl
adc
repz
pop
sbb
lock
loopne
xorb
fcompl
aad
and
cltd
sub
cmp
lds
sub
xchg
aam
pop
adc
mov
sbb
loope
hlt
dec
sub
pop
xchg
into
shl
ret
fs
xchg
iret
inc
ret
sub
add
mov
or
sbb
mov
aas
gs
cmp
aas
pop
daa
pop
cmp
adc
movsl
mov
fcomip
icebp
stc
mov
shl
lock
dec
adc
add
mov
add
in
jle
pop
out
and
les
lods
mov
jno
mov
jbe
arpl
sti
out
icebp
test
inc
push
lea
mov
fstpt
jg
imul
sub
inc
lock
jne
popa
cmpsl
outsb
mov
ret
pop
push
popa
ret
mov
popa
xor
mov
int3
rcll
lret
sub
cmp
orl
push
lret
flds
dec
mov
mov
fildl
xchg
sub
inc
pusha
ss
push
aas
aaa
jnp
or
push
cmpsb
push
or
imul
add
arpl
fmull
add
cwtl
cltd
jle
mov
gs
sar
cmp
jbe
sbbl
mov
test
inc
fs
mov
jo
cmp
adc
adc
icebp
push
negl
and
mov
jp
jecxz
sub
lods
fs
gs
sub
cld
daa
in
push
push
and
in
mov
mov
les
loopne
xchg
pushf
and
testb
jae
sub
js
inc
mov
sbb
mov
out
jp
mov
inc
sbb
add
mov
out
dec
loop
dec
mov
sbb
mov
shrl
scas
test
or
stc
or
or
ja
jae
ficomps
xchg
repz
xor
repnz
mov
jp
negb
lock
cs
in
jno
lahf
fld
pop
xchg
sub
fidivrl
inc
xor
mov
mov
cwtl
fwait
cmpsb
inc
jcxz
jp
out
mov
nop
push
add
js
cmpl
jle
dec
popa
xchg
xchg
in
push
lds
ja
int
fwait
sbb
test
imul
push
popf
lahf
lods
movsb
jmp
divb
mov
cmp
cmpsb
cltd
inc
aaa
push
add
sub
sbb
aad
cmp
loope
insb
sub
outsl
into
lods
imulb
fs
repz
subb
fcmovne
aas
mov
jle
mov
les
mov
jns
adc
outsb
nop
test
ljmp
xor
push
and
lods
nop
test
aas
cmpsl
lret
add
notl
or
lods
sbb
lahf
test
dec
jle
loop
xchg
push
pop
int
out
neg
repz
test
add
mov
movsb
xchg
sbb
imul
cmpsl
adcl
mov
data16
test
xchg
or
ja
out
lods
and
test
mov
jle
cld
imul
sbb
sbb
sub
mov
sahf
lret
or
pop
jmp
test
fcmovbe
inc
jecxz
out
es
arpl
popa
pushf
adc
lret
fs
ss
sub
roll
ds
jge
push
sbb
and
jbe
fucom
aam
mov
pop
std
hlt
pop
push
sub
rorl
and
and
test
loopne
aad
sti
push
ret
lret
out
imul
ds
sti
mov
jne
lcall
dec
mov
lds
aad
mov
popl
out
outsb
and
mov
xchg
stos
rorb
mov
cmp
filds
jb
in
xor
sub
aas
fmuls
cmc
sarl
int3
dec
lret
xchg
clc
repz
push
je
dec
inc
fisubs
fs
lea
and
push
jo
stc
add
test
add
dec
pop
in
es
inc
push
jle
sbb
in
xchg
dec
push
out
enter
mov
cmpsl
mov
push
dec
pop
ret
cmp
add
jg
js
push
imul
dec
sbb
or
pop
pop
lret
rorb
push
dec
pop
mov
sahf
sbb
call
xchg
adc
push
mov
dec
stos
andl
sbb
mov
fcmovnb
mov
mov
cmp
sbb
adc
fldenv
loop
hlt
mov
jae
andl
call
jmp
inc
shr
insb
mov
outsl
mov
int3
test
arpl
sbb
loop
cmp
iret
cli
rolb
push
and
push
ret
sub
mov
mov
sbb
rolb
mov
jne
loope
inc
adc
cwtl
dec
push
sbb
xlat
or
inc
data16
popa
push
cmp
cmpsb
test
out
jp
jge
adc
xor
jg
scas
jbe
lret
xchg
repz
jg
loopne
enter
dec
xor
cmp
lods
adc
gs
hlt
out
fisttps
popa
mov
std
and
outsl
je
cld
push
icebp
xchg
pop
xchg
sub
jmp
testb
add
pop
das
cmpsb
mov
int3
xchg
inc
pop
xor
test
outsb
sbb
mov
or
cmovle
push
dec
jl
int
pop
cmp
sub
subl
lahf
push
inc
xchg
das
test
faddl
enter
data16
shrb
in
lahf
std
sbbb
push
stc
les
notl
mov
mov
xor
pop
jl
cmp
enter
iret
add
ret
ljmp
pop
sub
mov
clc
jne
inc
lret
adc
mov
add
iret
lcall
out
jl
pop
mov
lods
mov
dec
pop
inc
push
jle
sub
lahf
int3
mov
sbb
mov
inc
push
incl
mov
cltd
stc
in
aad
cmp
arpl
dec
pop
pop
xor
or
push
pop
xor
fdiv
jle
mov
addl
mov
loopne
push
or
push
inc
sbb
dec
lods
jb
test
mov
fwait
pop
jmp
cmp
aam
repz
test
jmp
loop
clc
stos
lret
ds
rorb
icebp
enter
loopne
fistpll
dec
xchg
mov
into
pushf
mov
leave
fcmove
mov
loopne
cmp
add
lock
mov
jmp
in
sbb
sbb
or
js
jnp
imul
ud1
sub
push
sbbb
xchg
xor
outsb
fnstcw
movsl
movsb
pusha
mov
int3
fmuls
xor
push
fucom
jns
cltd
xor
pop
sbb
push
pop
xchg
shll
loope
imul
jle
or
jo
aam
pop
xorl
ror
popf
dec
mov
aam
popf
fsubrl
pop
sarl
out
fldenv
push
stc
int3
mov
aaa
lret
mov
sbb
clc
add
xchg
jnp
scas
loope
test
inc
push
jmp
mov
fstps
test
pop
sub
jmp
pop
and
xor
lea
iret
add
jo
mov
inc
aaa
push
movsb
daa
jnp
imul
or
mov
push
stos
cmp
mov
cmp
pop
fs
clc
cmpsb
mov
lock
mov
inc
inc
inc
inc
add
adcl
and
mov
dec
test
outsb
push
aam
inc
sub
pop
sti
pop
sahf
stos
fisttpl
std
data16
pop
xor
push
mov
pop
sbb
incl
mov
gs
sar
aad
mov
mov
xchg
or
dec
pop
mov
es
xchg
jle
add
aad
lods
inc
mov
xor
mov
sbb
jne
pop
add
pop
mov
fsub
xchg
pop
lea
pop
in
add
cmp
rcr
inc
sub
dec
adc
ljmp
sub
mov
push
jl
lahf
xchg
jg
mov
xchg
add
mov
jne
sbb
mov
push
push
push
jle
xor
xlat
and
repz
pop
std
push
subb
into
xor
inc
mov
lods
and
in
sbb
pusha
fildl
outsb
gs
adc
stos
repnz
aam
dec
das
cmp
pcmpgtd
insb
push
pop
lret
sbb
ffree
mov
mov
aam
xchg
lret
sub
push
jbe
cmpsb
sbb
mov
push
enter
mov
pop
dec
and
shll
mov
mov
sub
adc
mov
daa
inc
sub
scas
mov
insl
inc
cmp
adc
dec
mov
mov
shrl
mov
enter
xchg
in
shl
ss
aad
les
adc
scas
mov
pushf
roll
or
icebp
dec
scas
and
sub
cmp
or
jnp
std
sbb
ja
add
pop
gs
xchg
cmp
jb
scas
cmp
mov
outsl
push
dec
xor
mov
and
jge
fstl
adc
ret
adc
lods
pop
push
jmp
sub
mov
addr16
scas
xor
ljmp
push
pusha
mov
mov
lcall
xchg
jle
mov
aad
pop
lret
icebp
ljmp
or
fistl
in
jns
fbstp
mov
jmp
pop
sbb
scas
jnp
loope
in
fldln2
ret
in
push
dec
sbb
xchg
dec
jns
xchg
mov
or
aas
ret
inc
sbb
mov
push
or
sbb
dec
jle
test
call
jno
js
das
adc
and
cmp
sahf
aas
bound
out
mov
and
mov
sbb
cmp
bound
sub
or
stos
ret
popa
clc
xchg
push
and
dec
arpl
nop
cmp
xor
dec
cmp
pop
inc
lds
sbb
mov
cmp
out
mov
call
adcb
sbb
ffree
inc
xchg
outsl
adc
and
mov
mov
ficompl
pop
arpl
jb
push
pusha
or
pop
cmp
xor
in
cmp
jp
sbb
jbe
div
call
fs
pushf
fsubr
fidivrl
and
push
iret
push
pop
dec
aad
mov
jne
clc
sar
adc
mov
push
lret
and
pop
out
mov
mov
stc
xorl
mov
sti
inc
dec
mov
sbb
outsl
int3
pop
sti
imul
ds
cmp
lahf
jl
or
push
mov
aas
adc
pop
and
sub
movsb
xchg
and
cmpsl
ds
pushf
and
mov
js
lahf
xchg
notl
jno
or
lods
sbb
icebp
test
scas
popa
rcll
pop
sahf
pushf
pop
std
mov
ret
aam
adc
daa
push
mov
sub
push
mov
out
push
insb
cli
mov
pop
lret
add
adc
sub
sarl
xor
sbb
sub
mov
sub
mov
into
nop
test
add
shrb
arpl
inc
adc
leave
lock
fimuls
adc
push
out
cmpsb
bound
scas
lods
loope
shrl
mov
mov
or
sbb
enter
data16
adc
lods
jl
mov
out
sbb
cmp
sub
jno
shrl
mov
loopne
lret
add
inc
bound
js
dec
jg
add
push
inc
das
outsl
add
in
insb
jmp
outsb
mov
sti
mov
jns
int3
cmpsl
cmc
mov
lock
test
outsb
sub
xor
pop
and
repz
pop
popa
je
dec
adc
dec
mov
cld
jae
ffree
bound
push
pop
mov
iret
fstpt
fldcw
mov
cmc
jmp
fnstenv
adc
cmpsb
in
mov
xlat
adc
fldt
push
or
add
cmp
mov
test
and
xchg
push
cmp
dec
push
popa
cltd
add
imul
pop
orb
cmc
pop
ds
xor
jbe
add
xor
jecxz
or
jmp
arpl
dec
in
gs
aad
add
pushl
mov
nop
ror
cmp
mov
mov
movsl
lods
xor
or
mov
jmp
inc
dec
sbb
bound
and
add
inc
mov
aam
pop
pop
xchg
fadds
ror
aas
pop
pop
imul
mov
movsl
out
fimuls
xchg
inc
loope
push
stos
mov
dec
cltd
popf
push
lea
stos
int3
fs
mov
les
add
xchg
and
push
test
lahf
jns
mulb
ljmp
lcall
mov
ljmp
enter
scas
outsl
lods
jne
loopne
mov
inc
dec
mov
insb
sar
adc
dec
push
setbe
push
mov
shl
outsb
es
loope
or
pushf
popf
and
lcall
pusha
pop
leave
mov
jno
outsb
stos
out
pop
out
imul
xchg
rcl
das
push
lret
pop
cmp
sar
dec
xor
xchg
cmp
pushf
xor
jne
fwait
jp
out
adc
icebp
hlt
sbb
repnz
adc
int3
dec
sbb
push
test
mov
outsb
fidivl
dec
mov
or
push
insb
loopne
popf
or
fucom
cmc
jecxz
add
mov
dec
xchg
imul
pop
jl
enter
in
pop
cltd
dec
pop
orb
add
and
push
push
int3
mov
pop
add
leave
sbb
jnp
out
and
cmp
cmp
shl
fistl
mov
sub
or
mov
fildl
sub
loop
scas
out
xchg
repnz
cmpb
mov
jne
sbb
mov
xor
jno
gs
xor
mov
scas
aas
aad
cmp
jb
test
dec
dec
push
icebp
pop
pop
lods
jecxz
pop
adc
push
mov
jnp
scas
cmp
xchg
jge
cmp
adc
fildl
js
out
movl
daa
adc
cmp
xor
imul
fnstsw
ljmp
adc
xchg
sbb
or
mov
add
cmp
cmpsb
mov
pop
xor
sbb
mov
cltd
sbb
jecxz
cmp
push
ds
mov
sub
ficoms
dec
add
aas
inc
jno
movsb
push
icebp
mov
ss
movsl
mov
mov
add
xor
jmp
sbb
xor
popa
and
xlat
cld
dec
stos
cld
xor
in
sbb
idivb
aam
pusha
sub
add
sub
push
xor
lea
fs
sbb
sbb
jg
cmp
pop
pop
rcrl
lahf
mov
aas
and
pop
adc
push
addr16
or
inc
jecxz
repnz
subb
cmp
or
and
lds
xchg
xchg
jb
mov
jge
je
in
sub
jecxz
add
and
loop
adc
movsl
jl
sbb
stos
push
adc
lea
addr16
test
ret
sub
add
cmp
pop
pop
and
inc
sub
add
pop
fs
iret
sbb
inc
adc
fwait
outsb
pop
dec
int3
dec
jne
adc
push
sub
xor
ss
dec
bound
sarb
cld
jo
adc
sub
push
mov
setnp
ret
ds
sbb
add
mov
rolb
popa
in
loopne
jno
jle
imul
or
push
cli
call
push
outsl
dec
stos
cmp
xor
sbb
cs
aas
push
sub
popf
push
in
mov
sti
fdivrs
and
cmpsl
add
adc
sub
roll
pop
or
aad
lret
jo
cmp
sub
xor
add
nop
pop
shlb
push
xchg
cwtl
lods
sub
aad
mov
fcompl
sub
mov
sub
mov
in
in
xor
mov
xchg
pop
jmp
jnp
pop
imul
fsub
dec
mov
aad
jbe
repz
jg
and
adc
fnstsw
je
adc
in
repnz
cmp
pushf
incl
cli
inc
push
mov
out
cwtl
xchg
cs
psadbw
fldt
gs
or
ss
mov
mov
mov
cmp
mov
stos
mov
and
lods
jle
mov
inc
out
insb
pop
sub
cmp
push
subb
push
inc
pop
int
aas
cmp
adc
fcomps
pmulhw
aas
mov
lahf
mov
inc
jno
push
and
std
data16
push
adc
xchg
push
decb
std
cmpl
xorl
gs
or
fistl
out
push
adc
xor
clc
dec
daa
leave
lahf
push
jle
loopne
rcr
ja
shll
mov
rorb
lret
pshufw
adc
mov
adc
cmp
xor
je
or
xchg
test
add
mov
xor
js
inc
adc
sahf
insl
rcl
jnp
jae
mov
sbb
xor
jne
mov
and
lret
push
dec
ljmp
cmp
fdivl
jb
loope
dec
enter
sbb
mov
adc
sub
mov
mov
iret
imull
enter
mov
jge
pop
mov
sub
and
pop
repnz
ret
jb
push
outsl
fs
push
test
mov
push
mov
dec
push
outsb
pop
nop
add
movsl
movsl
mov
stos
js
iret
push
je
les
call
pop
push
mov
testl
pusha
adc
add
aam
or
sbb
lret
nop
push
in
repnz
dec
dec
icebp
scas
loope
adc
or
daa
fsincos
push
lret
pop
inc
pop
adc
mov
inc
sub
cmc
lods
out
stos
mov
scas
loop
add
arpl
test
mov
pop
les
pop
sahf
jo
cmc
sbb
aas
mov
jmp
xchg
add
jp
rep
pop
mov
jbe
aaa
cmpsl
inc
fcomps
into
or
mov
loopne
dec
js
in
sub
and
int3
mov
push
stc
sub
jg
outsb
insb
sbb
and
jg
popa
push
or
sbb
pop
mov
mov
ja
aad
pop
dec
mov
jecxz
lds
shld
incl
inc
and
or
negl
insl
lret
bt
out
cmp
js
pop
pop
es
jno
pop
xchg
das
and
popl
mov
insl
sub
mov
test
and
xor
pop
mov
repnz
jb
xchg
sbb
movsb
mov
sbb
jecxz
pop
xor
dec
push
popf
shr
lods
mov
adc
adc
jae
shll
cmpsl
and
lds
or
pop
sub
mov
imul
inc
test
mov
aad
pop
push
mov
jecxz
push
mov
mov
sbb
loop
outsb
xchg
in
adc
push
or
push
inc
test
pop
loop
outsb
sbb
fs
mov
xchg
pop
and
ljmp
int
and
inc
sub
aaa
sbb
inc
mull
pop
inc
icebp
das
mov
push
outsb
movsl
test
jp
imull
dec
xchg
sub
inc
sbb
sbb
repnz
xchg
mov
setb
cmp
out
imul
mov
rcrb
stos
pop
inc
inc
pop
mov
nop
ficompl
jl
iret
add
sbb
push
dec
icebp
lds
cmpsl
in
inc
jae
cli
je
std
xchg
clc
fwait
insl
lcall
outsb
cld
popa
sub
ret
inc
ljmp
cmp
jle
adc
out
dec
add
divb
add
dec
clc
les
mov
push
jle
sbb
add
jns
enter
push
test
sahf
das
xlat
fstl
mov
repnz
in
push
xor
pop
testl
add
sbb
jg
push
add
sarb
add
jb
dec
mov
inc
xchg
popa
bound
mov
pop
shrl
xchg
cmp
jnp
lret
jbe
loop
or
pusha
add
imul
addr16
inc
add
jbe
or
mov
arpl
pop
outsl
xchg
mov
fimull
xchg
rolb
js
int
sub
sbb
cwtl
or
push
dec
xchg
test
hlt
arpl
adcl
scas
mov
out
sbb
fldl
les
jecxz
push
cld
push
mov
xchg
lahf
shl
jae
lcall
cmp
sbb
sti
cmp
xor
fnstsw
fcmovnbe
cmp
mov
xor
sbbb
and
mov
or
cmpsb
xchg
aaa
pop
pop
sbb
xchg
jo
push
mov
cli
jb
or
sbb
mov
cmp
stos
lret
imul
mov
cmpsl
pop
scas
xorb
adc
int3
push
inc
mov
shlb
int3
rcrl
sub
scas
js
dec
or
out
sub
jb
mov
push
mov
es
ret
mull
cmp
mov
setns
ret
pusha
xchg
or
lcall
cmp
adc
xor
push
add
out
adc
jns
inc
ds
dec
add
int3
outsb
push
test
gs
push
sub
ret
adc
hlt
mov
pop
jp
stos
mov
das
js
loop
xlat
inc
lret
out
bound
cld
sub
xchg
loope
mov
stos
dec
push
or
hlt
mov
stos
jecxz
push
repz
mov
sbb
push
sub
outsl
ja
lcall
lret
fdivp
mov
test
mov
or
imul
adc
sbb
fwait
cmc
jge
cmpsl
in
push
movsb
push
cli
or
jg
mov
lahf
dec
loopne
movsb
andl
cld
mov
in
mov
imul
in
jns
hlt
mov
jo
aaa
fwait
inc
outsl
ret
pop
enter
inc
add
fadds
jl
mov
and
out
jo
dec
in
pop
mov
scas
stos
je
dec
jge
out
gs
shl
adc
add
lea
rcl
sti
lods
outsl
stos
xor
ss
insl
je
pop
imul
dec
cmp
fildll
rep
scas
add
lcall
inc
jno
dec
or
sub
jmp
sti
aaa
fnstenv
jno
dec
sbb
add
sbb
push
in
mov
pop
fcmove
scas
cmp
addr16
movsb
jg
or
and
mov
cwtl
and
dec
mov
xchg
sbbb
pop
push
sub
cmp
enter
add
mov
pop
rclb
icebp
sbb
jp
jae
loopne
xor
mov
mov
mov
fwait
dec
jge
adc
call
mov
sub
adc
xor
fchs
ljmp
push
mov
shl
push
aaa
add
cmp
sbbl
lods
popf
cmp
cmp
loope
cli
cmpsb
pusha
imul
mov
lcall
xor
adc
jns,pt
fdiv
jp
adc
jle
hlt
fstl
jl
and
pop
or
lret
ret
fbld
adc
add
stos
cmpsb
mov
jg
or
movsb
test
rclb
jge
negl
jnp
repnz
mov
stc
xor
pop
add
inc
repz
jo
sti
pop
add
test
scas
add
je
int3
xor
jp
dec
int3
in
and
lcall
push
mov
adc
cltd
adc
test
push
cs
jne
inc
pusha
dec
mov
xor
dec
mov
in
xchg
lcall
mov
cwtl
mov
outsl
aas
sub
mov
dec
xchg
sub
jmp
andl
in
xchg
push
mov
sbb
popa
push
out
rol
arpl
ret
xorl
imul
fwait
lods
test
sbb
test
dec
push
push
aam
inc
outsb
popa
sub
gs
cmp
sub
or
cmp
mov
sub
pop
xchg
mov
insl
data16
fxch
cmpl
push
cld
dec
scas
sbb
aas
mov
shlb
mov
test
roll
incl
stos
xor
mov
gs
repnz
pop
xor
je
inc
js
ja
fwait
repz
mov
cs
adc
call
das
cwtl
mov
mov
mov
fsubrl
push
xchg
inc
xor
inc
lcall
add
and
fdiv
test
or
sbbb
add
and
int3
adc
sahf
or
push
add
mov
shlb
mov
shlb
xlat
cs
lahf
out
jmp
lods
xor
test
into
mov
shrb
stos
or
mov
faddp
push
out
fistpl
xor
xor
out
or
dec
ds
pop
pop
jno
mov
mov
and
sub
sub
outsl
mov
push
xchg
fistps
ss
test
pop
inc
xor
xlat
test
or
pop
in
add
and
mov
outsb
or
jbe
scas
pop
cmpsl
fadds
pop
scas
sbb
cltd
push
dec
xlat
cmpsb
cmp
pop
add
lods
cltd
into
pop
frstor
cmp
and
dec
movsl
dec
in
jb
into
repz
xchg
mov
xchg
push
mov
push
sub
movsb
andl
mov
pop
xor
cmp
adc
imul
popf
ja
mov
push
lcall
cwtl
xor
mov
lods
scas
xor
repz
sahf
ja
xor
and
insb
push
pop
in
rcrb
pop
xchg
addl
sar
movb
xchg
sub
outsl
movsb
mov
std
rcrl
add
add
mov
addr16
nop
stos
in
imul
notl
and
mov
or
int
push
jne
sub
dec
outsl
lods
fists
test
test
pop
dec
test
or
rclb
cmpsb
lahf
mov
test
outsl
sub
sbb
repnz
icebp
sbb
or
daa
ror
jne
shrb
fstpl
popf
stos
xchg
xchg
inc
shll
adc
cmp
mov
sub
ficoms
jecxz
mov
imul
lea
popfw
jmp
cmp
ds
into
mov
mov
lock
xor
test
xchg
and
sub
or
test
jae
dec
pop
mov
in
data16
fbstp
or
dec
add
imul
in
in
adc
inc
sub
mov
jle
loop
fs
pop
fistpll
data16
xchg
orb
nop
frstor
icebp
fistpl
pop
psubd
repz
cltd
inc
mov
pop
mov
cmp
icebp
mov
in
jge
repnz
pop
mov
jne
ds
daa
sub
fists
std
push
jo
cmp
jmp
sub
cli
dec
jle
push
es
out
sbb
sub
pushf
xor
or
fidivrs
test
out
xor
mov
sub
push
push
and
aas
mov
xchg
out
or
jecxz
movsl
outsb
xchg
fnstsw
mov
repnz
adc
aad
xor
and
insb
rolb
aam
push
inc
xchg
push
cmp
cld
or
xchg
or
jno
das
sub
jo
fstpl
repz
test
call
xor
push
xor
lods
gs
call
dec
xor
pushf
cmp
aaa
and
add
mov
mov
pop
fstpl
data16
cmp
shrl
insl
pop
sarb
pop
dec
pop
jmp
loop
dec
arpl
jne
jmp
and
cld
cmpsb
mov
inc
sbb
aaa
adc
jecxz
lock
pop
enter
inc
sti
jg
or
jecxz
icebp
mov
xchg
cmp
cltd
mov
mov
out
and
push
mov
mov
dec
pmulhw
das
jle
sarl
adcl
or
mov
lds
movsb
faddl
sbb
push
inc
ss
sbb
pop
out
adc
jae
cmp
mov
nop
push
jp
xchg
adc
das
ljmp
test
mov
call
out
and
adc
hlt
dec
push
sbb
xor
aam
or
cli
jo
jle
cmp
out
bound
mov
sti
addl
addr16
cmp
js
mov
xchg
cmp
mov
mov
or
cmp
les
insl
shrl
imul
adc
out
sbb
fstpt
mov
adc
mov
sbb
add
pop
and
movsb
push
xor
scas
imul
fidivrs
outsl
sub
aam
or
cmpb
mov
sbb
jb
rcrl
test
sbb
out
mov
add
jns
rcll
mov
cmc
enter
imul
fs
sub
jmp
cli
outsl
xchg
jo
xor
xchg
leave
push
dec
cmp
inc
fwait
out
mov
xchg
xchg
cwtl
push
xor
mov
hlt
mov
aaa
push
pop
outsl
out
out
popf
push
mov
cmp
dec
loop
out
imul
ret
cmc
push
push
or
in
pop
shl
push
popf
ffree
sub
push
repz
dec
je
push
pop
popf
out
mov
sub
sbb
clc
pop
mov
mov
fwait
jo
ja
add
cmp
sbb
dec
lods
mov
lret
xor
icebp
or
aad
mov
lahf
inc
mov
shrb
cmp
jo
cwtl
adc
inc
popa
sbb
sbb
fldl
or
add
rolb
dec
and
push
stos
inc
mov
movsl
test
jecxz
test
jns
lods
push
mov
lea
sub
jp
clc
stos
fbstp
push
stos
not
pop
outsl
popf
test
sti
addb
xor
mov
incb
and
cld
sahf
jecxz
add
jns
add
aas
mov
add
adc
adc
mov
pop
adc
dec
fsubrs
or
cmpsl
adc
icebp
jg
in
scas
jae
add
icebp
test
mov
ds
mov
inc
mov
push
dec
mov
cmpsb
dec
cmp
das
rcll
scas
js
imul
mov
jne
sarl
scas
jno
push
pop
dec
out
lods
outsl
pop
pop
xchg
add
jl
pop
push
ret
mov
ljmp
xor
ret
mov
lods
xor
adc
icebp
xor
rcll
aad
xchg
push
inc
sub
ror
in
arpl
or
popf
push
out
lcall
or
inc
call
pop
iret
mov
mov
pusha
push
sahf
in
jmp
icebp
adc
mov
cmpl
jg
push
mov
cltd
add
sbb
sbb
push
repz
xor
int3
xchg
jbe
daa
push
fnstsw
xor
mov
rcl
outsb
push
ljmp
add
ss
lret
insb
mov
pushf
pop
out
jo
aad
test
aas
mov
shl
cmc
jle
mov
adc
adc
xchg
dec
mov
push
sbb
mov
aad
dec
add
pop
movsb
ljmp
fwait
mov
scas
mov
lcall
and
fs
loope,pn
and
lcall
push
jnp
icebp
mov
ficompl
or
jbe
lahf
lods
popf
and
mov
cmp
rcl
xchg
dec
jge
xchg
sub
in
xchg
sub
and
notl
cmpsb
into
aad
nop
xor
jae
enter
sbb
pop
xchg
jl
ss
add
fcmovnu
push
enter
out
pop
add
xor
inc
enter
pop
sbb
in
pop
std
test
pusha
insl
sbb
rcr
std
fwait
adc
dec
push
movsb
jb
push
daa
je
sarb
jae
test
mov
cs
jns
sub
jnp
dec
jo
leave
fisubrs
and
enter
mov
imul
pushf
iret
pusha
pop
mov
lcall
imul
je
mov
pop
pop
mov
dec
fisubrs
push
icebp
and
push
push
das
imul
inc
pusha
or
push
iret
out
std
in
in
idivb
sub
push
sbb
test
aaa
add
cmp
aad
mov
cmp
cltd
cwtl
lea
mov
adc
push
jg
shrl
sub
loope
mov
fistpll
sbb
nop
imul
stc
flds
adc
or
push
pop
lret
addr16
icebp
in
cmpsb
xor
sbbl
pop
adc
lahf
movl
jbe
push
out
js
repnz
cmpb
xchg
outsl
xor
inc
pop
mov
int3
mov
out
cmp
cmp
sub
call
pop
scas
rolb
pop
pop
insl
jb
dec
fidivl
cmpsb
push
dec
nop
stos
pop
push
sub
roll
repz
jg
sbb
lea
sub
cmpsb
xor
push
or
cmp
fildl
cmpsb
dec
mov
cmp
je
leave
push
xchg
sahf
hlt
xor
insb
stos
ret
in
sub
or
outsl
sti
scas
mov
xor
jge
data16
push
aas
arpl
mov
fcompl
int
xchg
es
pusha
xor
je
jp
xchg
cmpl
stc
mov
lock
out
mov
or
out
cmpsb
flds
mov
out
cmovbe
ja
std
dec
in
cmp
test
inc
fmuls
or
cld
sahf
xor
mov
mov
mov
inc
loopne
and
jl
notl
fs
push
xchg
inc
fisubs
test
scas
push
xor
test
pop
xchg
mov
repnz
popa
add
xor
inc
fisttpll
lds
filds
ret
push
es
pushf
mov
jg
dec
adc
sbb
imul
push
xchg
sahf
jns
mov
xor
push
in
sub
loop
and
sbb
and
fwait
push
test
and
in
adc
adc
mov
jge
fwait
out
bound
int3
daa
iret
mov
cli
mov
enter
ret
jno
js
rol
aam
nopl
imul
sarb
dec
ret
in
movsb
and
push
and
mov
pop
popf
add
and
sbb
inc
or
loopne
out
jge
mov
insl
scas
jg
scas
pusha
cmp
mov
pop
or
push
push
push
outsb
std
rol
add
mov
cmp
loop
xor
movsb
adc
pusha
mov
inc
push
repz
ljmp
out
clc
lea
mov
dec
sub
dec
pop
popa
testl
cmpsb
cmp
fcoml
pop
movsl
jge
cmpsl
repnz
xchg
sti
cs
mov
jb
jae
xchg
inc
inc
lock
jnp
push
cmp
icebp
gs
jmp
jg
int
add
pop
sub
sub
fldl
outsl
addr16
fidivl
sbb
pop
inc
ljmp
inc
and
mov
es
push
call
sub
pop
inc
test
jmp
movsb
mov
popa
aaa
mov
stos
sub
cmc
push
mov
pop
push
loope
add
jno
cmpsb
lret
test
jp
mov
out
pop
push
js
and
sbb
mov
cwtl
test
xor
mov
adc
jns
adcl
lret
outsl
and
xlat
stos
or
xchg
int
adc
test
and
xchg
loope
mov
cmpsl
pop
leave
inc
aaa
mov
pop
imul
addr16
xchg
out
jp
aam
imul
add
sarb
pusha
xor
inc
test
movsb
rorb
xor
inc
daa
mov
jns
or
stos
jle
sub
enter
movsl
pop
dec
and
subl
xor
add
bound
sub
jns
and
xchg
ljmp
inc
fsub
std
fmulp
fsubl
jecxz
or
inc
outsl
mov
outsb
xchg
dec
jne
popf
pop
mov
mov
jnp
repz
mov
js
jb
in
lods
in
inc
insb
inc
bound
outsb
fnstenv
push
dec
adc
ret
mov
pop
aaa
call
aam
cltd
popaw
aas
ficompl
inc
pusha
cltd
gs
jae
js
mov
into
aam
dec
jno
dec
pusha
popf
jbe
iret
loop
xor
adc
xchg
lds
js
lahf
js
mov
or
imul
js
in
add
mov
inc
adc
ret
or
and
rclb
lcall
add
mov
popf
idivl
dec
sub
mov
sub
jne
mov
in
test
jl
out
mov
ficoms
pop
hlt
adc
adc
out
adc
cwtl
inc
xor
inc
xorb
data16
je
leave
out
outsb
sub
arpl
lcall
loopne
xlat
ds
add
sub
mov
nop
in
test
xchg
jecxz
mov
jp
add
cmp
mov
test
test
jbe
pop
mov
ja
xchg
mov
sti
cltd
dec
sti
adc
xor
lret
cmp
add
cmp
sbb
mov
jg
jae
xorl
inc
and
js
ret
scas
pop
lcall
inc
cltd
push
xchg
push
xchg
scas
in
inc
arpl
popf
adc
sub
jae
xlat
push
sbb
mov
js
lods
add
shlb
mov
andb
jg
fwait
pushf
mov
fs
and
rclb
jge
insb
ljmp
jbe
int
lahf
shl
cli
fwait
sub
lods
jo
fidivrs
mov
jno
push
fistps
push
sahf
cmc
pop
ja
xchg
mov
sbb
pushf
adc
mov
push
push
lret
adc
fwait
and
mov
push
out
sub
mov
test
or
shl
int3
iret
xor
pop
xor
cmp
fists
ja
cmp
addb
aad
xchg
nop
in
loop
lcall
test
cmpsb
mov
sbb
xor
xchg
or
imull
test
xchg
sbb
popl
or
xchg
add
cmpsb
xchg
out
inc
frstor
cld
pop
cmc
xor
dec
jmp
shlb
pop
push
lret
jp
lods
shlb
or
jmp
fmul
push
sub
outsb
xchg
pop
inc
pop
xchg
inc
and
aad
pop
cmpxchg
adc
out
mov
sbb
repnz
inc
test
mov
shlb
repnz
mov
fnstenv
mov
inc
sbbb
pop
adc
push
clc
mov
mov
jge
mov
pusha
dec
lcall
xchg
add
mov
das
xor
sub
int
ret
add
or
jl
mov
push
rorb
push
cmp
div
movsl
pop
push
imul
into
xor
outsl
ds
sub
lods
daa
push
shrb
xchg
cmp
fistpll
jb
xor
mov
jle
mov
scas
or
movsl
push
int
dec
jge
cltd
sti
xchg
aad
and
es
push
xor
sbb
ret
xor
dec
xor
aaa
je
xchg
and
jne
shrl
sub
jae
or
cmp
xchg
lcall
add
pop
cmp
fcoml
das
mov
aad
pop
daa
jg
jmp
popf
rol
or
mull
push
xchg
pop
jg
nop
cltd
push
dec
sbb
enter
pop
cmp
int3
je
lea
mov
or
pop
out
adc
loop
int
not
mov
mov
fcoml
mov
lahf
mov
xor
xlat
cmp
sub
lahf
jb
lahf
jmp
adc
lahf
pop
rorb
mov
dec
lods
cmc
mov
rorb
les
push
call
bound
mov
push
or
push
pusha
shrl
dec
push
dec
jmp
cmp
fwait
jno
xchg
out
ret
mov
sbb
imul
mov
sti
outsb
ljmp
pop
sub
dec
scas
or
fdiv
push
test
dec
or
adc
faddp
in
cmp
cli
cmp
ds
xor
jbe
dec
dec
push
js
imul
in
or
fildl
pop
jb
push
aas
sbb
leave
xor
adc
jb
int3
jecxz
mov
inc
or
mov
mov
push
push
ds
mov
repz
fiadds
popa
jb
cli
fdiv
rclb
mov
lock
and
mov
shll
and
cmp
lods
push
out
xor
mov
pop
pop
lds
cltd
pusha
test
fsub
std
xor
dec
lret
dec
xor
mov
pop
dec
fisubl
sarb
or
xor
lcall
jecxz
xchg
xchg
or
xor
push
sarb
ror
in
mov
push
aaa
es
jns
insl
pop
ret
cmp
out
add
out
sub
aad
mov
sarl
rdmsr
xor
int3
lea
movsl
in
sub
lea
xor
pop
jecxz
push
shrl
push
inc
cmp
repz
push
cmc
rclb
cld
push
mov
aas
inc
and
cmpsl
adc
std
xchg
lcall
sub
gs
jl
cltd
sub
dec
and
cmp
jecxz
cmpsb
fbstp
rcrb
xor
add
mov
lret
cmpsl
or
ljmp
ret
pop
sub
scas
fsubs
scas
lcall
shr
test
add
in
aaa
out
dec
popa
int
loopne
push
fistl
dec
cld
xor
pop
std
mov
push
mov
insb
sub
xchg
inc
icebp
xchg
dec
jmp
sti
movsb
push
sbb
sub
mov
add
gs
test
push
in
fldt
insl
hlt
dec
scas
add
pop
push
lock
mov
call
adc
call
cli
sti
adc
mov
loope
pop
pop
clc
jecxz
scas
jle
fwait
lea
aam
fcoms
adcl
es
and
sbb
mov
loop
ss
outsl
mov
dec
adc
ret
mov
ja
pop
stos
mov
fbstp
fdiv
and
or
jmp
mov
stos
movsb
mov
lcall
adc
dec
or
shrl
loope
mov
enter
xchg
push
xorl
mov
shlb
mov
daa
jge
jae
stc
add
lret
inc
call
pop
cmp
pop
cmp
xchg
testb
xor
dec
push
pop
mov
in
jae
cmc
add
iret
and
dec
insb
push
lahf
dec
jl
sub
adc
lahf
mul
jne
movsb
and
push
loop
test
inc
call
lret
mov
jmp
pop
iret
lahf
flds
or
test
cmpsl
cmp
inc
mov
lods
pushf
pop
adc
mov
in
rolb
call
sub
ret
rcrl
mov
lahf
inc
pop
mov
xor
rorb
aad
cs
fwait
pop
jnp
pusha
mov
std
test
sbb
lea
imulb
cmp
add
pop
mov
sub
or
ficoms
lret
adc
xchg
imul
cmp
orl
push
jae
ficompl
cmpsb
pusha
mov
pushf
xchg
in
es
sub
cmpsb
mov
sti
mov
or
out
sub
mov
push
rcrb
shlb
mov
push
adc
cwtl
adc
into
movsb
not
sbb
cld
sub
xor
in
push
mov
or
add
inc
cltd
mov
dec
aad
or
repz
clc
push
lods
cmp
mov
xchg
adc
int
out
ret
sub
mov
cld
or
cmp
in
addr16
repz
stos
add
xchg
xchg
es
cmpsb
sbb
cwtl
cmp
dec
dec
or
pop
aad
xchg
and
rcrb
fxch
jg
or
mov
xchg
or
adc
adc
xchg
ds
fs
jl
lret
fbstp
pop
mov
shll
imul
sub
and
jg
xlat
stos
mov
outsb
popf
cmp
xchg
pop
adc
cli
mov
dec
mov
rcrb
mov
test
call
lea
dec
and
stos
stos
add
in
out
test
or
stc
adc
out
cwtl
inc
or
pusha
sub
out
cmc
mov
jmp
in
mov
rcrb
incb
fnstsw
adc
sahf
int3
fs
mov
stos
mov
cld
shrb
data16
xchg
cs
outsb
or
dec
xchg
or
push
inc
out
popf
or
sub
jl
add
pop
push
into
ja
jl
jb
or
mov
inc
lahf
jl
or
lahf
jae
popf
mov
or
push
pop
jge
jb
and
pop
cmp
int3
and
insl
into
inc
stos
loopne
push
xchg
cwtl
stos
arpl
imul
or
inc
sub
jns
sbb
je
jbe
dec
cmpsl
rclb
and
pop
adc
sbb
or
punpcklwd
mov
adc
or
leave
dec
mov
inc
stc
mov
movsb
data16
enter
mov
xchg
repz
int
cwtl
fcmovne
inc
dec
clc
outsb
loop
push
in
out
sahf
mov
clc
movsb
cld
xchg
aaa
sbb
xchg
leave
mov
cmp
push
fmuls
sbb
lret
es
push
add
fcompl
loopne
adc
ret
and
mov
lahf
movsl
idiv
pop
sti
and
lgs
fildll
lcall
daa
cmp
xchg
inc
leave
mov
in
mov
mov
dec
and
mov
adc
and
imulb
push
mov
dec
dec
xchg
sbb
rorl
or
bound
ja
mov
stos
movsb
cld
mov
movsb
sbb
xchg
ds
std
mov
sub
mov
ljmp
fists
or
mov
or
jno
out
or
gs
cmpsl
and
push
or
sub
jmp
cmp
push
aas
pop
adc
repz
push
jns
mov
mov
leave
imul
mov
jl
ror
sarl
or
arpl
cmp
push
ja
lahf
xlat
ds
lods
adc
mov
sub
dec
or
push
jg
in
dec
sub
mov
add
or
pop
xor
ret
inc
inc
pop
xor
jge
ja
imull
shlb
cli
cmp
push
stos
or
sbb
arpl
scas
add
xor
sbb
mov
mov
jp
loopne
into
ss
or
jbe
mov
das
add
dec
adc
repnz
outsl
xor
mov
mov
aad
sbb
push
push
fsubrl
bnd
sub
jb
and
js
dec
adc
test
or
xlat
insl
fsubrs
sbb
lahf
clc
cmp
loop
lahf
mov
in
adc
in
pop
xor
mov
loop
hlt
mov
sub
out
push
jmp
or
and
or
enter
fnstcw
mov
xor
fwait
or
mov
pushf
pop
adc
or
adc
mov
jp
push
out
cmp
push
js
cwtl
xchg
xor
lret
inc
fsts
mov
dec
mov
inc
icebp
shrb
dec
es
sub
sbb
mov
pop
adc
sub
mov
js
dec
sti
divb
lcall
pusha
andb
pop
into
dec
mov
cmovnp
mov
aas
sbb
mov
enter
inc
ficompl
scas
sub
add
stc
inc
stc
adc
imul
add
rcl
outsl
imul
sub
push
mov
popa
inc
filds
daa
and
mov
ljmp
addr16
ret
sub
rep
xor
sub
mulb
xchg
add
nop
lret
sti
lret
pop
jmp
dec
xchg
pop
scas
movsl
push
aas
and
pop
js
inc
cmpsl
sub
cs
je
and
cmc
mov
jo
push
push
testb
mov
push
cmp
sbb
stc
push
and
pop
out
cld
and
xor
and
ss
call
cmp
rclb
jle
ret
jno
dec
les
mov
jmp
sub
push
xchg
xchg
loop
add
sahf
push
cmp
sub
ret
ds
inc
imul
push
pop
jg
imul
aam
add
jmp
fisubrs
adc
les
sub
mov
mov
sbb
fdivrl
mov
sbb
data16
sub
push
or
jp
lret
xor
fisubrs
cltd
imul
or
in
sbb
xchg
clc
cmp
stc
jno
push
mov
jmp
cmp
push
lods
inc
push
out
jle
les
shlb
jmp
jnp
testl
sbb
lds
fs
cs
in
ret
mov
lods
lret
jle
in
stos
cmc
or
xor
add
scas
push
jecxz
lret
aaa
sub
pop
push
jl
and
mov
add
jb
ds
in
pop
jns
icebp
mov
loop
and
in
dec
fwait
aaa
sub
mov
lea
sarl
lods
mov
jmp
adc
clc
pushf
ret
xchg
sub
and
inc
cmp
mov
and
jae
lea
outsl
fsubrs
popl
or
icebp
cmpxchg
mov
cmpl
cmp
in
lds
jb
mov
cmp
mov
pop
push
pop
sti
jmp
mul
imul
dec
jb
jo
push
imul
test
cmp
dec
aam
sbb
icebp
sub
cwtl
cmp
pop
push
sub
pusha
xchg
sbb
loopne
xchg
lods
test
mov
sbb
mov
jo
or
je
int
adc
shrb
lods
les
aam
xor
dec
mov
insl
sbb
or
push
lea
je
dec
inc
xchg
or
pop
xchg
cs
push
test
sti
add
add
sub
jb
scas
mull
inc
mov
rclb
lahf
pop
jbe
sti
fcoms
push
scas
sbb
xchg
xor
mov
sub
fistpl
add
cltd
stos
shrl
xor
inc
out
cltd
pop
mov
test
push
mov
push
cli
mov
pusha
mov
jg
and
loope
rcl
or
dec
ljmp
mov
cmp
mov
ja
faddp
shrl
mov
loop
push
adc
out
enter
sub
imul
cmp
jno
aam
pop
mov
nop
xchg
xchg
fmull
pushf
xchg
test
fdivr
ds
repz
dec
imul
es
dec
and
xchg
push
sbb
add
cs
outsb
std
pop
jp
sbb
dec
or
mov
mov
repz
addl
adc
push
jnp
sub
push
setns
mov
mov
loopne
bound
push
cli
in
pop
cmpsb
sti
lcall
jmp
or
mov
sub
pushf
test
sub
xchg
sbb
test
cmp
sarb
mov
int
into
and
or
inc
gs
jmp
stos
cmpsl
mov
mov
and
xchg
or
ret
adc
or
xchg
aas
adc
or
and
jbe
cmpsl
stc
hlt
rcl
pop
call
sbb
shlb
inc
jns
mov
rcll
std
inc
imul
dec
hlt
lock
dec
adc
add
adc
pusha
into
mov
lcall
dec
xor
addr16
mov
jmp
mov
cmp
mov
icebp
scas
lea
lods
and
mov
mov
stos
mov
adc
mov
pop
cmp
int3
les
out
ficomps
mov
lods
mov
dec
mov
jno
mov
mov
lahf
push
out
fdivl
xchg
imul
fdivs
add
or
loope
xchg
sub
xorb
ret
stos
cmp
lods
mov
call
lret
mov
pop
mov
and
out
jno
sbb
push
sbb
sbb
xor
inc
mov
and
dec
outsl
sbb
jge
xchg
cmp
insl
leave
out
dec
add
and
sbb
pop
inc
inc
daa
adc
popf
and
push
mulb
or
movsb
fs
dec
int3
in
mov
jnp
mov
rcll
sbb
cs
xchg
add
mov
mov
push
dec
es
call
lcall
pushf
or
push
cmpsb
dec
or
lcall
push
lret
inc
aad
and
mov
fwait
and
pushf
mov
sbb
pop
out
call
repz
popf
loopne
scas
lds
fcoms
scas
rorb
dec
xchg
out
inc
pop
in
mov
push
fs
movsl
xchg
das
jbe
push
rcll
mov
mov
jecxz
dec
xchg
fidivs
arpl
mov
rol
idivb
div
lock
dec
cmp
in
test
mov
pop
xor
push
push
pop
inc
insl
ss
inc
divl
cmp
mov
sub
les
scas
leave
in
dec
mov
sbb
mov
in
add
pop
stc
sbb
imul
jns
insb
shl
mov
sub
adc
or
pop
push
lahf
and
mov
jo
sub
xchg
adc
xchg
test
push
push
in
cwtl
data16
sbb
push
push
mov
sub
ljmp
jecxz
xchg
add
mov
gs
sti
fisttpl
or
cs
rcrb
adc
dec
mov
and
insb
adc
pop
test
cmpsb
fwait
mov
imul
push
mov
dec
mov
test
xchg
jl
data16
cli
pop
sub
cmp
sarl
cmp
dec
adcl
adc
and
fdivrs
fcoms
dec
sbb
jne
mov
sbb
inc
repz
imul
cmp
popf
cmpsb
xchg
call
jns
stos
shlb
test
dec
pop
fdivr
cmp
mov
dec
xchg
movsb
and
pop
outsl
movsb
je
loope
lret
mov
fists
mov
dec
inc
scas
in
pop
or
lods
sbb
mov
add
mov
inc
or
add
and
push
push
jge
in
addr16
inc
fisubl
les
stos
outsl
fidivl
jg
push
shrl
xlat
daa
push
inc
out
fcomps
stos
push
cmpsl
xchg
jbe
rorb
ds
cli
mov
mov
xchg
inc
mov
movsl
pop
pushf
xor
sub
jb
pop
pop
bound
inc
adc
cmpsb
pop
cmp
cld
dec
insl
pop
bound
xor
or
ljmp
pop
loope
js
les
or
stos
orb
jp
sar
xchg
bswap
cmp
inc
cmpsb
mov
adc
push
mov
mov
mov
ret
add
lea
jl
loop
insb
scas
sub
push
pop
jge
bound
pop
lea
dec
and
stos
push
popf
mov
inc
xor
ss
mov
push
inc
adc
pop
jmp
and
ljmp
mov
and
push
adc
mov
cld
or
dec
scas
decb
popf
negl
mov
cmp
adc
hlt
bound
std
fidivrl
test
push
lcall
lock
jl
xchg
stc
sbb
push
adc
sahf
fadds
repz
fidivrs
push
inc
pop
cmp
mov
push
adc
in
pop
mov
push
cs
mov
das
jl
xor
push
je
mov
out
pop
ret
icebp
cltd
jmp
cwtl
add
lret
jg
xchg
out
scas
jg
xor
decb
jmp
push
rcll
add
cmp
filds
dec
enter
ret
andl
jns
aad
test
jecxz
pusha
sarb
dec
push
xchg
das
out
addl
push
cmpsl
ficoml
mov
call
shlb
or
mov
movsb
cmp
lds
xchg
pushf
mov
daa
adc
ds
push
fbld
dec
je
xor
fcmovu
jle
inc
fsubp
shr
aad
es
push
push
and
addb
or
loopne
cld
mov
sbb
ret
push
cmp
in
push
mov
adc
fidivrs
incb
sbb
stos
push
sbb
add
addr16
mov
shll
loope
dec
out
jb
cmc
js
loopne
and
stos
mov
push
pop
rorl
mov
mov
jbe
mov
cmp
shlb
int3
push
das
adc
mov
out
dec
test
add
fcomps
pop
imul
shll
ret
xor
add
imul
add
add
pop
inc
shlb
pop
andl
push
aaa
dec
mov
mov
adc
mov
adc
dec
sti
ret
test
addr16
imull
call
mov
fs
mov
mov
popf
sub
lcall
roll
xor
ljmp
in
cmp
mov
mov
lea
inc
jmp
dec
mov
push
jne
popf
sbb
daa
test
cli
dec
divl
cmp
xlat
outsl
and
ret
popf
aas
inc
mov
test
dec
sub
dec
ds
dec
idivl
xor
jmp
int3
lahf
xchg
xchg
or
xor
arpl
jge
mov
mov
xchg
inc
enter
int
shl
push
pop
adc
pop
hlt
and
mov
repnz
xchg
or
shr
test
jno
into
adc
ja
lret
pop
lcall
sub
mov
mov
int3
add
sbb
jmp
sub
sub
xor
insb
ljmp
aam
lcall
bound
jae
js
push
clc
aad
addr16
mov
mov
and
mov
enter
fs
xchg
stc
lcall
xchg
cmpb
js
nop
xchg
fs
sbb
sbb
aam
inc
loopne
mov
out
adc
pop
cli
movd
decl
cmpsl
xchg
add
scas
out
push
sbb
in
ret
mov
add
xlat
mov
fisubl
xchg
fnstenv
inc
pop
xor
push
adc
adc
pop
push
mov
sub
lds
ret
outsb
testl
push
rol
loop
sub
adc
dec
insb
inc
scas
leave
cltd
pop
sbb
fcoms
sbb
dec
cmc
lahf
stos
sahf
mov
inc
push
sub
mov
xlat
add
or
push
das
xor
inc
dec
incl
add
ja
fsubs
mov
movsl
and
imul
outsl
sub
xor
outsl
or
xor
sar
xor
push
and
push
movsl
movsl
jno
scas
inc
rcrl
mov
inc
stos
and
nop
ret
fdivrs
cwtl
mov
pop
insl
cmpsb
mov
ret
out
std
test
mov
dec
int3
or
pop
push
dec
lods
pop
inc
cmc
ljmp
inc
jbe
sbb
mov
sub
push
ds
xchg
jecxz
ffreep
into
in
dec
repnz
fcompl
add
jnp
test
ret
dec
jmp
cltd
clc
out
push
test
dec
fs
int3
sbb
or
pusha
loop
ds
jg
loopne
test
je
sbb
add
ret
lcall
es
stc
push
jo
dec
cmp
push
into
cmp
fimuls
jno
in
outsl
push
inc
add
cmp
xor
js
sub
adc
repnz
daa
push
enter
pop
addr16
adc
in
mov
jae
rcl
leave
push
repnz
es
pop
fsubs
push
inc
repz
and
emms
cmpsl
mov
and
sbb
rcll
inc
imul
xchg
or
lahf
fdivrl
ljmp
push
inc
dec
xchg
dec
rsqrtps
shll
mov
testl
add
inc
mov
sub
imul
mov
clc
and
lret
jmp
jbe
lea
mov
jns
repnz
repnz
xchg
push
mov
insb
movsb
xorl
ja
push
ljmp
rcl
push
in
xchg
and
iret
mov
into
in
jmp
out
pop
test
dec
repnz
adc
push
cld
inc
mov
mov
popf
inc
pop
jecxz
push
das
dec
data16
add
pop
or
lock
lcall
fistps
dec
push
aas
aaa
push
outsl
adc
rorb
push
mov
test
xchg
test
rorl
adc
or
ljmp
ja
sbb
pop
rorb
cltd
mov
test
push
enter
push
jo
xchg
adc
jmp
bnd
movsl
xlat
mov
aas
ret
and
popa
test
lock
inc
pop
ja
out
add
jne
xchg
mov
jne
mov
out
sbb
fsts
pop
les
mov
into
out
add
dec
sbb
cmp
cmp
mov
push
clc
int
shll
cmp
mov
xor
push
call
push
enter
or
daa
insb
mov
cli
in
sub
sub
incl
js
add
jne
xchg
shl
ds
stos
rcrl
out
cmp
mov
add
or
ret
out
leave
jmp
movsb
sub
roll
mov
test
or
sub
mov
mov
mov
xlat
and
xchg
in
fsubrp
xlat
cs
into
pop
inc
int
addl
add
adc
xor
out
sub
sti
lods
xchg
sub
push
out
or
pop
adc
and
out
and
jmp
fadds
push
mov
cs
adc
das
cmp
inc
cld
test
cltd
lods
je
and
xchg
sbb
mov
cmp
xchg
imul
fs
aam
and
xchg
outsb
bound
pop
in
scas
out
loop
push
inc
dec
push
and
into
push
int3
subb
xchg
lock
stos
xchg
sub
popf
jnp
jp
inc
pop
and
or
imul
xchg
fsubr
xchg
or
adc
std
mov
adc
adc
inc
push
jo
mov
add
mov
xchg
iret
lret
push
jno
std
fdivl
in
int3
inc
adc
test
xor
jle
ja
and
xchg
leave
sub
jnp
data16
cmp
jmp
jle
sub
in
ret
fsubr
adc
pop
xor
lcall
movsl
push
ljmp
sub
cmp
std
adc
mov
std
sahf
mov
cmpb
leave
loopne
xchg
test
xchg
dec
addb
cmp
in
inc
mov
and
cmp
sub
mov
cmp
push
and
les
loop
repnz
aaa
push
insl
dec
lcall
push
lods
sbb
mov
jae
adc
loopne,pn
push
test
in
sub
push
xchg
xchg
push
mov
inc
sub
in
mov
sub
mov
pmaxub
jae
outsl
ficoml
pop
mov
lods
aas
cmp
push
stos
xor
ficompl
or
pop
shr
pusha
push
sbb
repnz
sbb
test
xlat
icebp
jb
out
in
rcrb
add
mov
mov
add
in
sub
push
jb
sbb
or
loope
js
test
out
pop
into
nop
push
aad
cmpl
and
out
addb
add
test
xchg
jns
ljmp
les
sub
or
dec
push
sbb
inc
jns
jecxz,pt
cld
bound
shrb
les
jmp
lods
add
jae
sbb
xchg
cmpsl
mov
sbbl
iret
stc
gs
adc
ljmp
subb
fmulp
in
add
mov
addr16
sbb
push
and
jbe
or
xor
mov
fsubrl
mov
mov
xor
cmp
pop
pop
push
or
xchg
and
mov
mov
push
push
cmc
pop
sub
pop
test
movl
icebp
out
jle
nop
add
adc
in
jmp
mov
out
inc
or
es
mov
and
dec
xchg
jecxz
ds
out
xchg
mov
add
stos
push
mov
movsl
shll
rolb
pop
leave
sahf
jns
xorl
decb
shl
mov
enter
ss
loop
pop
mov
pop
shll
mov
lahf
dec
mov
outsb
cmpsl
cmp
lcall
insl
je
push
pop
jae
dec
inc
outsb
loop
adc
inc
xlat
lods
aad
cmpsl
pusha
jmp
pushl
jg
fimull
imul
and
adc
shll
or
or
mov
cwtl
cld
xchg
pop
popa
negl
mov
dec
mov
mov
scas
out
bound
in
cwtl
cmpsl
pop
lods
mov
jmp
adc
xlat
daa
into
mov
mov
mov
add
lret
add
mov
sbb
mov
xor
pop
ja
call
cmp
pop
or
enter
mov
push
adc
jp
popa
adc
lret
pop
xor
cli
gs
popa
mov
push
mov
mov
cmp
pop
je
push
iret
sahf
test
xchg
movsl
push
push
enter
cwtl
push
xor
pop
pop
outsl
and
jbe
and
or
popf
mov
lods
orb
icebp
add
mov
jmp
shll
pop
jne
pop
in
orl
je
mov
and
in
adc
enter
lcall
shll
cmpsl
jno
mov
xchg
jecxz
scas
test
ljmp
icebp
fstl
lock
cli
out
addr16
roll
movsl
outsb
or
cld
sub
lock
cli
sbb
pop
out
mov
mov
mov
cmp
pop
xchg
je
icebp
or
push
jmp
loop
jae
dec
int
cmc
pusha
mov
inc
movsb
push
push
callw
cmpsl
test
mov
xor
and
idiv
push
and
test
out
mov
dec
in
xor
int
inc
jge
xchg
addr16
xchg
lock
jno
jg
jo
sub
in
pop
mov
xchg
leave
pop
xor
push
cmp
lods
jb
rorb
cs
nop
cmp
in
cmc
test
jp
sub
adc
push
sub
lods
mov
cmpsb
inc
fs
test
lock
adcb
pop
rcrb
xor
out
insb
test
scas
lahf
mov
sub
aad
lds
out
ret
ja
inc
xchg
xor
es
push
lock
mov
daa
mov
adc
roll
cmp
jb
jae
mov
pop
ja
insb
lods
adc
xchg
pop
xor
rorb
xor
push
and
enter
sbb
inc
inc
dec
lea
xchg
adc
bound
insl
jns
ret
arpl
ret
and
push
das
test
mov
in
int3
sbb
adc
or
inc
mov
mov
cld
pop
ret
repz
mov
add
pop
shl
jmp
sti
xor
and
cltd
xor
or
in
xchg
inc
xchg
outsb
push
and
and
out
movsl
fisttps
pop
push
mov
adc
ret
sub
pusha
xchg
adc
or
stos
fcmovnbe
pusha
cltd
xlat
pop
sahf
repz
xchg
push
enter
out
xor
iret
lret
mov
cmpsl
mov
inc
ljmp
cmp
imul
cmpsl
gs
mov
inc
jb
or
popf
ret
sbb
push
fwait
and
mov
in
mov
mov
xchg
iret
dec
push
rorb
dec
mov
jl
shl
inc
data16
pop
inc
fwait
test
add
sub
or
out
pusha
cmc
cs
or
out
xor
push
jb
xor
mov
stc
mov
cmp
jmp
test
mov
insb
and
test
int3
pop
movsb
mov
xor
jns
outsb
dec
inc
ljmp
out
lods
xchg
jge
adcl
mov
dec
mov
gs
dec
mov
in
lods
pop
lds
push
adc
xchg
jl
hlt
adc
mov
inc
and
mov
cwtl
jae
leave
mov
pop
xor
adc
out
rclb
test
sbb
xchg
dec
negl
push
jae
mov
je
mov
cmp
bound
jnp
lock
lret
pop
xchg
notl
and
or
push
das
cmc
mov
inc
sbb
jns
lcall
inc
xor
inc
cmp
lods
xor
or
push
add
mov
repnz
cmp
xchg
mov
mov
jle
mov
cmp
and
test
and
cmc
push
in
push
cmpsb
movsl
mov
dec
push
ja
pop
adc
ret
fidivrs
jb
hlt
cmpsl
adc
lret
mov
insb
cmpsl
inc
repnz
inc
std
ret
cs
mov
inc
stos
lcall
adc
test
push
sbb
aam
clc
lds
aam
out
or
nop
lret
repnz
push
cmc
les
xchg
xor
jmp
int3
aaa
push
jle
add
adc
xorb
pop
repz
loop
pop
or
js
dec
xchg
aad
add
sbbb
jbe
mov
stos
jge
mov
sbb
jb
pop
pop
outsl
and
insl
mov
push
mov
out
pop
lds
jns
mov
popf
ret
leave
xchg
pop
ljmp
lea
int3
out
inc
mov
sbb
mov
enter
es
xor
in
xor
ss
jb
mov
add
or
fs
mov
add
je
das
into
inc
ljmp
mov
push
inc
mov
popf
enter
xchg
dec
fistpl
and
cltd
loopne
dec
and
outsb
pop
xor
sahf
aam
inc
pop
mov
add
pop
ret
fs
rclb
test
cmc
scas
xor
ret
dec
jmp
inc
inc
cmpl
ljmp
imul
sti
pop
push
or
out
sahf
mov
lahf
outsl
push
enter
push
aam
push
in
hlt
mov
pusha
jnp
adc
jge
push
hlt
aaa
sbb
scas
mov
inc
mov
pop
mov
repz
dec
push
jns
pop
mov
pop
fsubrp
sbb
or
cmp
sbb
in
out
or
pop
jnp
inc
mov
jns
sub
data16
push
sub
fcomps
xor
nop
xlat
push
loope
xchg
shrb
and
js
cmp
call
mov
call
out
stc
fidivrl
add
fidivrl
sub
shrb
out
outsl
and
cwtl
adc
mov
in
cmp
push
adc
sub
daa
pop
cpuid
add
pop
sub
xchg
in
xor
data16
movsb
dec
jmp
ja
lods
or
cmp
int3
jbe
sub
jo
inc
loope
mov
push
inc
and
and
out
jp
or
std
cmp
push
repnz
fnstenv
mov
mov
lahf
lock
add
pop
scas
cmpsl
xchg
push
push
jl
xchg
xchg
test
popf
loop
aad
sbb
bound
cmpsl
jnp
testl
add
ret
mov
imul
int3
leave
push
fdivp
mov
out
sub
add
cmp
cmp
pop
xlat
fcmovnu
mov
pop
subps
insl
int
lcall
pop
and
sub
or
mov
out
cmp
push
daa
inc
outsb
rsqrtps
scas
push
das
in
jno
dec
push
imull
add
call
popf
add
fistpl
push
mov
sub
pop
pop
es
adc
adc
mov
int
lea
outsb
jmp
mov
fisubrl
mov
scas
mov
cmp
pop
fdivl
adc
or
and
push
lods
sahf
stos
aad
arpl
push
jno
repnz
cmp
ds
push
call
cli
sbb
jmp
imull
insl
outsl
or
aam
rorl
mov
in
and
aam
mov
inc
fcoml
bound
dec
cs
sbb
sti
dec
nop
jmp
jle
add
nop
pop
fwait
sbb
lret
neg
add
aam
test
mov
lahf
mov
stos
jg
imul
popa
call
jo
adc
js
shlb
adc
push
test
jg
push
dec
mov
and
xor
cltd
popf
leave
int3
movsb
nop
je
aaa
jge
pop
hlt
cwtl
cmp
jmp
test
push
test
mov
mov
dec
mov
icebp
mov
or
andl
add
xchg
js
dec
jl
popl
mov
jo,pn
fcmovu
cmp
dec
jmp
fs
cmp
ljmp
mov
in
dec
and
imul
hlt
pushf
jno
dec
mov
mov
out
cmp
sub
ljmp
ret
mov
pop
cmp
arpl
mov
bswap
cld
mov
inc
ljmp
jb
outsl
xacquire
cmpsb
jle
cmp
mov
ja
mov
and
sbbb
aam
dec
cmpsb
adc
fsubp
mov
aad
pop
aam
lcall
push
pop
xlat
xchg
imul
jle
rcl
std
neg
fwait
xchg
test
cs
sub
ja
mov
imul
pushf
lods
leave
je
ret
popf
or
adc
jecxz
inc
stc
mov
clc
mov
in
clc
fsubrl
xchg
xchg
or
pop
add
cltd
xor
aam
sbbl
mov
mov
mov
or
lret
mov
mov
test
jge
xchg
xchg
in
add
cvtdq2ps
sbb
pop
sub
push
ss
sbb
inc
cli
sbb
adc
fsubrs
ds
jp
or
push
adc
xor
mov
and
pushf
test
scas
fidivrl
push
pop
mov
gs
addr16
enter
cs
or
xor
out
out
add
cmp
mov
push
jle
or
lret
sbb
in
mov
cmp
mov
rcrl
sbb
orl
xor
push
lds
add
ret
fimuls
jle
cmp
jp
fwait
push
mov
popf
loope
lods
xor
rol
sti
push
lea
sti
mov
adc
or
sub
je
negb
iret
and
and
ds
fsincos
imul
and
leave
iret
pop
pusha
gs
loopne
jg
fbld
mov
inc
sbb
mov
int3
sub
cmc
arpl
mov
lock
or
int3
inc
lret
and
sahf
jbe
movsl
inc
xlat
popf
sub
jno
xor
jmp
push
pop
mov
mov
sbb
imul
mov
jge
mov
mov
ljmp
movsb
jmp
pop
push
or
mov
repnz
or
or
push
dec
pop
outsl
test
jno
pop
jge
inc
pop
pop
mov
inc
sub
jge
shrl
xchg
lods
dec
dec
xor
mov
mov
sti
cmp
sbb
in
aam
in
inc
test
imul
add
xor
daa
out
xchg
sti
sarl
je
sub
sub
sahf
popa
or
in
test
cmpsb
addl
cmp
add
inc
fbstp
or
fmull
rorl
cwtl
mov
repz
push
xor
mov
repnz
xchg
xchg
inc
jle
xchg
jecxz
xor
stc
bswap
dec
dec
cmp
sub
fldcw
lahf
add
xor
inc
xor
push
xor
in
xor
mull
lds
push
dec
mov
xchg
sub
push
loop
int3
xchg
lods
inc
test
pop
xchg
and
stc
sbb
fstl
sub
pop
adc
fucomp
pop
out
dec
mov
jg
ficoml
dec
jmp
xchg
lcall
cltd
daa
int3
xchg
cmpsb
pusha
fstpl
lea
sti
shrb
andnps
jb
adc
imul
xor
shrl
loopne
aas
cwtl
pop
mov
sarl
insb
mov
push
push
aad
movsl
mov
popa
ficomps
adc
mov
and
in
or
repnz
pusha
imul
mov
loop
mov
mov
jno
cmpl
sub
out
fisubl
icebp
clc
ret
enter
and
xchg
or
pop
loop
inc
int
fnstcw
jo
push
bound
jns
notl
xor
mov
jo
jmp
fdivp
sbb
mov
loop
xchg
jle
dec
arpl
inc
inc
add
in
in
scas
int
add
clc
cmp
adc
dec
das
lods
stc
inc
cmpsl
stos
jo
xor
and
sahf
pminsw
outsl
insl
aam
pop
bound
xchg
push
xor
pusha
xchg
in
out
fs
mov
fstl
pop
popa
adc
js
movsl
or
xor
js
insb
fsubrp
mov
xlat
bound
out
inc
add
push
daa
jb
inc
sub
dec
cmp
dec
push
xchg
loopne
ljmp
mov
shll
and
je
mov
sbb
jg
cmp
lahf
lock
sbb
push
cmp
dec
xchg
mov
pop
xchg
into
imul
mov
sti
mov
pop
cmpsl
sbb
cwtl
ret
lret
mov
mov
pop
jmp
nop
aaa
xchg
xor
sbb
paddq
popa
out
aaa
add
int3
xchg
sbb
push
ret
xchg
xchg
es
pop
test
cltd
ljmp
icebp
imul
insl
test
shll
sub
loop
outsl
rolb
test
dec
pop
sbb
das
in
int3
je
jae
pop
stos
std
aas
mov
mov
pushf
aad
xor
push
inc
xchg
repz
addb
sbb
fiadds
xchg
push
lahf
adc
mov
addr16
sub
jecxz
aam
fiadds
push
pop
push
xorl
std
inc
mov
enter
stos
popf
mov
in
cmp
insb
xchg
pop
sahf
int3
add
and
sbb
insl
inc
ljmp
pop
dec
pop
xchg
test
mov
aad
sbb
jae
out
dec
das
cmpsl
sbb
popf
mov
or
xor
movsb
sbb
cmp
into
and
add
rclb
js
in
inc
shll
and
repnz
sub
jp
push
xlat
jecxz
xor
lcall
fistps
outsl
cld
cmpsl
rorb
and
ja
xor
jg
aas
mov
adc
cmp
inc
mov
adc
out
fstpt
iret
and
xchg
push
loop
outsb
dec
adc
ss
data16
xchg
into
sub
hlt
mov
or
fistpll
popa
in
loopne
je
xchg
mov
lods
jp
pop
xor
lock
adc
sbb
sbb
add
in
add
xor
rcrb
pusha
sbb
mov
outsl
sbb
inc
mov
pop
mov
pop
outsb
xchg
fistpll
cli
idivl
lods
mov
daa
inc
lret
dec
in
mov
or
or
std
ret
push
push
adc
push
ror
pop
cmp
xor
jge
pusha
pushl
mov
sub
xor
ss
dec
popf
push
fistps
ror
xchg
mov
scas
int
mov
lds
mov
mov
dec
xor
out
addb
dec
pop
fdivrs
in
xchg
addr16
xchg
adc
inc
fsts
lods
mov
insl
add
mov
out
mov
in
movsl
pushf
dec
sub
mov
js
and
and
lahf
fnsave
jns
and
cmpl
inc
xchg
fistl
ficomps
jmp
insb
das
ljmp
fcompl
pop
pop
push
or
push
sbbb
fs
push
adc
mov
inc
push
into
hlt
pop
sub
lcall
out
push
imulb
inc
sahf
sti
jno
pushf
orb
push
out
jle
jp
in
mov
lcall
add
negb
pop
dec
inc
subb
dec
push
adc
mov
mov
pop
stos
dec
mov
push
sahf
std
push
mov
es
adc
sbb
cmpsb
jle
adc
jbe
lea
cmp
jb
jne
sbbb
jle
xor
xchg
in
xchg
cmp
add
push
les
push
jl
daa
xchg
jbe,pt
and
add
or
in
mov
or
js
lods
pop
mov
dec
add
push
das
jg
cmc
lds
jle
jns
lods
addr16
cmp
dec
in
loope
cmp
out
dec
add
shll
out
in
mov
xor
and
sub
fs
xchg
jno
fiaddl
adcb
scas
call
mov
jge
mov
ljmp
bound
dec
cld
or
mov
push
and
mov
cmp
cmp
or
jp
stos
push
mov
xchg
lea
xchg
mov
out
cmp
inc
add
lock
out
dec
gs
data16
or
in
and
mov
je
or
jbe
push
mov
movl
in
cmpsl
cmp
dec
mov
out
out
dec
cltd
aam
test
insl
pop
mov
addr16
cwtl
fxch
or
sahf
add
fld
or
dec
xchg
dec
mov
out
xorl
sbb
adc
orl
into
xor
ja
push
mov
iret
les
cmpb
clc
mov
lcall
lret
out
push
pusha
adc
adc
and
xchg
dec
xor
ja
xchg
lcall
dec
sub
pop
stos
pop
and
jo
xchg
xor
ja
xor
jmp
into
sbb
mov
lcall
mov
pop
mov
adc
mov
add
clc
push
sub
shlb
fsubp
jle
sub
ret
and
xchg
mov
add
je
xor
lea
in
popf
add
insb
mov
pop
insb
jl
and
dec
mov
scas
mov
lahf
sahf
leave
fisubs
fistps
icebp
mov
xchg
outsl
mov
loop
inc
xchg
int
mov
pusha
std
testb
cmp
pop
aad
adc
sub
sub
jno
xchg
shll
xchg
sbb
cmpsb
mov
addr16
lea
ret
int
sahf
ret
mov
or
inc
fcomp
shll
jle
push
gs
imul
sarl
repz
fsts
divl
mov
leave
bound
ljmp
mov
mov
les
int3
scas
int3
rclb
mov
adc
dec
loope
cmp
cmp
aaa
push
imul
pop
addr16
inc
xor
xor
pop
sbb
mov
pop
inc
sbb
nop
jnp
cmp
jl
cwtl
loop
add
pop
mov
push
push
cmp
mov
xchg
insl
jecxz
ja
cmp
push
test
cmp
inc
jle
dec
xchg
sbbl
sub
flds
mov
in
jns
xor
xor
and
ljmp
es
test
cwtl
sub
and
push
mov
ljmp
call
rorl
test
and
lock
mov
inc
in
jae
cmp
add
and
int
cltd
push
clc
push
mov
adc
or
or
js
or
xchg
repnz
dec
sar
ja
xor
insl
adc
xchg
xchg
and
lcall
pop
out
dec
pop
insb
inc
push
fwait
mov
xchg
cmpl
addl
enter
lcall
add
cmp
and
mov
inc
inc
scas
sti
das
ret
sub
nop
xchg
jae
cs
xor
jle
leave
in
movsb
repz
sbbb
and
nop
inc
pop
fbstp
aas
das
lds
pop
mov
imul
repnz
ret
out
jge
repnz
jnp
jmp
push
mov
cmpb
popa
mov
stos
repnz
jbe
hlt
adc
clc
push
pop
mov
mov
push
fsubs
addr16
push
dec
inc
sbb
and
pop
mov
mov
ret
sbbb
leave
jle
hlt
test
nop
xchg
gs
xchg
fmulp
fistl
add
clc
gs
jno
sub
add
movsl
enter
push
jecxz
shrb
cmp
inc
lds
cmc
mov
dec
dec
xor
loop
inc
insb
aaa
xchg
jmp
push
and
loope
rcll
je
cmc
dec
jp
mov
cwtl
out
shrl
push
dec
or
pop
xor
push
lret
in
jbe
mov
and
movb
jno
cltd
jge
inc
shrb
fildll
inc
in
and
inc
cmp
pushf
jnp
stc
pop
int3
ret
sbb
sbbb
rol
sbb
sti
sbb
xor
pusha
mov
jge
movsl
in
and
pushf
inc
stc
mov
cmp
test
fdivrl
sub
lock
out
mov
mov
add
insl
mov
or
test
dec
js
fidivrs
stos
mov
pop
mov
gs
add
push
insl
adc
push
cli
les
subl
test
mov
ret
lods
xchg
lods
jnp
push
and
inc
inc
aad
cli
insl
jbe
push
push
xchg
jl
mov
xor
mov
stc
je
ljmp
out
jo
xor
lret
stos
pop
xor
mov
stos
jecxz
clc
xchg
bound
insl
adc
or
dec
adc
jge
aas
dec
add
xor
shrb
jae
cs
pop
mul
mov
push
pop
jb
adc
or
in
gs
mov
mov
shll
or
cs
outsb
ds
mov
inc
mov
jns
jns
fistpl
idivl
sub
test
add
lea
and
pop
jl,pn
in
push
mov
inc
and
fs
cli
mov
sub
in
push
pop
pop
jo
insl
xchg
push
mov
inc
xorb
je
sub
sbb
mov
mov
sar
mov
shlb
lods
mov
sar
mov
stos
xor
push
enter
outsb
cmp
cmp
push
pop
mov
lcall
mov
push
xlat
xor
pop
jg
mov
jns
rclb
adc
cmp
rorb
fidivrl
mov
push
adc
test
dec
or
movsl
jns
dec
imul
movsb
cmp
sub
fwait
mov
pop
pusha
aam
cmp
shll
bound
and
inc
push
push
xchg
rcll
nop
xchg
mov
mov
sub
mov
inc
sub
and
stos
jns
pop
add
js
subl
dec
jo
inc
dec
add
sub
add
out
jbe
imul
lock
mov
mov
shll
pop
jp
scas
repnz
lret
test
int
cmpb
int3
cmp
lret
test
mov
fwait
push
cltd
push
jmp
push
mov
push
or
test
inc
jo
push
notl
in
das
and
iret
xor
xor
mov
arpl
lods
sbb
scas
mov
xor
lcall
repz
cmp
xor
or
movsl
insb
xor
test
sbb
mov
and
xchg
sub
pop
inc
cmp
scas
test
mov
xor
cwtl
xchg
stos
push
xchg
movsl
mov
addr16
arpl
lods
and
mov
in
cltd
and
loop
mov
sub
movsb
push
leave
scas
xor
mov
sbb
test
addr16
icebp
adc
into
push
xchg
sbb
cmc
je
out
dec
or
fdivrs
aam
lea
loop
and
cwtl
push
outsl
dec
lods
je
adc
jle
inc
pushf
fwait
repnz
iret
addl
lret
mov
fucomi
dec
mov
hlt
lcall
push
ret
jae
push
popf
loop
sbb
xchg
divb
test
je
or
les
fucomp
jecxz
mov
adc
and
sub
push
fcomps
xchg
setge
cmp
nop
aam
inc
mov
aaa
adc
emms
cmp
scas
and
loop
pop
lock
push
mov
mov
add
ja
lds
gs
inc
and
scas
mov
test
in
fcomps
sahf
jl
bnd
xchg
add
cli
jne
pop
test
sub
add
sub
outsb
jb
dec
stos
fiadds
mov
push
inc
mov
inc
fistps
fbld
pop
pop
rcrl
and
inc
dec
addl
push
mov
dec
stos
xchg
adc
repnz
loop
cmp
popa
fwait
or
fdiv
cmp
subl
xchg
xchg
xchg
test
sub
fidivs
lods
rolb
or
pop
jae
cs
outsb
dec
aad
scas
arpl
fistpl
mov
aaa
adc
mov
js
mov
or
adc
push
fldl
push
and
out
jnp
fstl
xchg
mov
add
popa
and
std
inc
pop
ss
mov
sbb
xchg
stos
imul
jne
scas
sbb
gs
cld
inc
lds
fiaddl
mov
jge
mov
mov
idivl
xchg
pop
decb
jae
mov
add
push
into
shlb
popf
and
sahf
xlat
mov
jnp
mov
lret
pop
jmp
pop
mov
jns
dec
test
push
sbb
lods
inc
and
scas
jno
int3
call
pop
sti
push
cmp
mov
out
mov
cmc
mov
inc
push
aad
testl
enter
xchg
jno
inc
pop
cltd
ja
in
jne
inc
insb
mov
jns
jge
adc
fcmove
cli
or
jbe
xchg
popf
mov
sub
repz
adc
scas
mov
add
stos
mov
add
xchg
imul
fnstsw
das
inc
mov
pop
push
jnp
inc
xor
mov
jecxz
sub
popa
test
mov
push
je,pn
in
imul
ret
pop
shr
mov
shll
pop
add
test
cmp
aam
insl
lds
adc
sub
mov
mov
jnp
std
int
stos
cmp
idivl
mov
js
loop
push
dec
pop
lea
pushf
cmovo
xchg
test
out
enter
mov
or
into
cmp
test
aam
pushf
hlt
test
fwait
aaa
fs
lcall
xor
popf
adc
dec
movsb
shll
xchg
pop
push
imul
cld
mov
fadd
xchg
lods
arpl
and
adc
jecxz
into
mov
orl
jo
loopne
movsb
cli
fiaddl
sarb
cmp
int3
inc
push
sub
clc
xchg
cmp
lret
jecxz,pn
in
jmp
repnz
mov
and
out
add
icebp
xchg
lcall
out
fimull
jecxz
and
mov
ljmp
pop
into
pop
fbstp
dec
mov
lret
mov
in
xchg
lods
cmp
mov
stos
cmp
clc
xchg
test
mov
lods
xchg
sub
add
sub
jb
cmpl
cs
out
int
out
sub
inc
sbb
xchg
cmc
pop
dec
mov
sub
push
in
or
pop
test
sub
mov
imul
dec
sahf
insb
or
xor
xchg
icebp
pop
nop
dec
int
adc
jmp
mov
and
push
loopne
xchg
fld
xchg
add
jno
rorb
js
xorl
mov
mov
add
in
pushf
or
ss
out
push
xchg
push
lahf
lret
xchg
ja
sub
lret
stos
pop
cmp
in
mov
shrb
imul
adc
jns
xchg
fldenv
push
jno
xchg
fiaddl
pop
add
and
push
rcl
dec
mov
dec
dec
sub
xchg
cmp
jns
mov
stos
insl
jg
cmp
dec
pop
in
bound
xor
sub
jne
xor
stos
lret
aad
push
faddl
pop
sub
fnsave
xchg
push
sarb
push
xchg
jmp
mov
adc
mov
ljmp
mov
xor
cmp
pop
leave
xchg
data16
test
bound
or
incb
and
mov
inc
or
std
add
test
imul
dec
push
ficompl
test
loope
fucomi
mov
cmp
js
in
pop
lahf
jg
fidivrs
push
cmp
add
dec
cmp
add
push
sub
cmc
push
ds
insl
lea
lahf
jge
cli
dec
sbb
call
arpl
adc
loope
sbb
xor
or
pop
sub
repnz
push
loope
fnstenv
stc
push
jp
loop
jmp
dec
sbb
pushf
and
add
push
mov
ljmp
je
pop
sub
cmp
addb
aaa
sbb
mov
movsb
rcl
jae
push
add
loop
cmp
cmpsb
lods
aaa
push
sub
sub
lcall
cmp
cmp
repnz
je
or
or
movsl
gs
jge
orb
add
push
jmp
sbb
dec
mov
icebp
mov
les
adc
push
jl
stc
push
add
inc
sbb
push
ds
popf
nop
fwait
cld
and
aad
imul
fldcw
daa
mov
xchg
popf
addl
fisttpl
xor
pop
inc
bound
sbb
fisttps
mov
sub
or
xchg
out
dec
jl
push
jb
or
or
cmpsb
fdiv
hlt
dec
or
rclb
jbe
gs
lods
nop
aam
movsl
xchg
fbld
cltd
cmp
mov
push
outsb
les
inc
dec
sbb
cmp
lret
cmpsl
jnp
insb
xchg
xchg
mov
divb
pop
jmp
or
cmp
cmp
das
inc
repz
pushf
mov
xchg
lock
mov
std
xor
mov
idivb
je
push
mov
fistl
lods
push
inc
fadd
cmpsl
xchg
pushf
push
lret
jmp
incl
mov
add
dec
stos
sbb
in
mov
outsb
add
cmp
pop
ret
mov
iret
leave
sti
ss
xlat
cmp
icebp
aam
jno
fistpl
call
cmc
add
fcomip
hlt
and
jo
sub
xchg
mov
ss
icebp
mov
lds
push
lock
jecxz
enter
or
mov
pop
and
cmp
popa
popf
adc
xorb
daa
jbe
adc
xor
push
and
push
xor
mov
sub
jnp
rorl
repz
enter
lea
and
mov
push
cmp
loop
inc
test
data16
fists
aad
inc
movsb
hlt
adc
adc
fidivs
push
xchg
hlt
out
fs
sub
testl
test
frstor
cmpsb
cmp
or
pop
out
adc
int3
mov
push
adc
sbb
cmp
pop
mov
int
jp
xor
xor
outsb
popa
ja
mov
fwait
cli
pop
pop
mov
outsb
push
pop
pop
inc
fildll
xor
xor
lods
mov
sub
stc
push
push
stos
test
jl
jg
sahf
add
inc
and
mov
jmp
inc
pop
lcall
mov
mov
cmp
rcrl
rcrb
or
xor
pop
hlt
sahf
pop
fxch
push
inc
adc
imul
movsb
ja
dec
imul
mov
in
dec
addr16
lods
sbb
jno,pn
adc
jnp
jae
lods
je
mov
icebp
inc
jb
and
aad
cmpsb
push
push
sub
mov
mov
mov
test
add
push
or
xchg
xor
adc
sarl
loope
cmpsb
or
mov
mov
in
push
fimull
je
dec
mov
and
adc
push
add
add
fidivl
cmp
xor
dec
inc
push
fwait
sbb
aam
add
xchg
sub
and
adc
and
push
iret
and
test
sahf
rclb
cmpsl
incb
into
jl
jg
imul
scas
add
sbb
imul
jne
jg
lret
mov
mov
mov
in
dec
sbb
pop
and
xlat
adc
dec
orl
pop
adc
xchg
scas
add
cwtl
add
mov
in
sti
mov
xor
add
mov
popa
mov
cmp
cmp
jmp
cmp
xor
pop
fisubrl
incb
sbbb
push
sbb
lret
adc
add
mov
lret
push
adc
loopne
pop
mov
push
outsl
xchg
adc
imul
out
in
mov
lret
jo
lds
incb
jne
lods
inc
sti
loopne
xchg
mov
test
push
cltd
jno
outsb
mov
imul
xor
pop
lcall
das
inc
loopne
out
and
mov
rorb
push
cmp
test
jno
add
xchg
ljmp
xchg
cmp
rol
cmp
jb
mov
jbe
and
sbb
sub
imul
cmpsb
aam
dec
dec
or
dec
mov
arpl
inc
fldt
adc
dec
mov
jo
or
andb
sbb
lahf
cld
adc
stos
mov
clc
adc
jg
insl
xchg
add
sub
lahf
nop
xchg
or
push
scas
mov
shll
sub
shl
shr
loopne
das
or
lock
js
mov
imul
push
add
sub
sub
mov
ds
mov
lret
shrb
cmc
fucomi
outsl
jae
and
mov
lods
ficomps
dec
enter
stos
sbb
mov
rcrb
push
sub
sahf
fcomi
fnsave
mov
sbb
mov
ljmp
idivb
and
aaa
and
xchg
loope
add
lcall
mov
xchg
jmp
jecxz
call
xchg
shll
jae
dec
mov
cmpsl
xchg
stos
leave
stc
sub
push
mov
loope
sbb
out
fs
or
xchg
xor
imul
xchg
in
sar
insb
cmp
or
stos
sub
in
ret
push
lcall
rorl
add
aad
aaa
sbb
ret
add
idivl
into
pop
mov
add
out
and
add
push
sub
mov
test
sub
or
pop
dec
push
idivl
je
jecxz
xor
test
idivl
pop
loop
outsl
out
xor
insl
xchg
sub
adcl
gs
pop
out
adc
inc
lods
call
or
dec
pop
jae
xchg
in
inc
mov
add
shrl
sahf
xchg
inc
fwait
mov
sbbl
add
aaa
test
test
loope
aad
push
insb
addr16
push
xor
mov
xchg
in
sbb
pop
cmp
gs
push
movsl
pusha
das
lcall
or
and
cmp
cmpsb
xorb
dec
or
inc
test
hlt
pop
test
rcrl
jne
pushf
pop
in
insb
in
lret
fwait
or
insb
mov
adc
sbb
mov
scas
stc
mov
fists
ror
es
mov
in
test
add
fists
or
mov
std
push
insl
cmp
add
sahf
dec
repz
mov
aad
xor
cmp
fwait
jae
mov
jo
adc
sub
js
scas
pop
xchg
adc
lcall
in
pop
inc
setb
mov
cmpsb
jnp
js
mul
inc
mov
pop
inc
inc
popl
test
lods
int3
loope
push
test
sub
into
pushf
push
mov
ds
adc
adcb
imul
sti
andl
loope
jmp
or
adc
mov
nop
xchg
and
shll
xchg
dec
add
scas
test
roll
add
add
lods
lret
popf
xchg
ss
out
hlt
ret
push
repz
and
mov
scas
pop
fwait
fwait
cmp
sub
inc
pop
and
es
push
lock
repz
in
loope
arpl
add
dec
dec
xor
cmp
shlb
test
sarb
pop
daa
sub
sbb
fcoml
or
sbbb
and
mov
aam
fisttpl
and
push
rorb
push
sub
mov
aad
mov
cmpb
sub
mov
pop
insl
pop
mov
dec
fstpl
fsubrl
xchg
cmp
mov
ret
and
mov
mov
aad
out
mov
mov
ret
xchg
or
ja
inc
or
ret
bound
xor
outsl
inc
pop
push
push
sub
movl
popa
lret
daa
in
sub
mov
inc
cmp
mov
cmpsl
and
aas
adc
pop
sbb
imul
cmc
cmp
or
ja
mov
inc
sub
stos
jae
xchg
mov
mov
gs
xchg
es
mov
ss
repnz
shll
dec
add
das
mov
push
mov
aad
push
in
sarl
pushf
fiadds
sbb
inc
jp
shll
inc
lock
stos
jmp
inc
int3
rcl
pop
push
adc
pusha
dec
cmp
or
xchg
jns
mov
lds
aas
into
lock
aam
inc
sub
xchg
xchg
mov
daa
sbbl
fs
aad
xchg
sub
ja
inc
into
sub
or
and
push
out
xchg
adcb
arpl
je
lods
insb
xor
pop
aad
lahf
lahf
cld
and
sub
jb
xchg
xchg
in
sbb
inc
jmp
inc
and
imul
mov
and
popl
xorl
sub
xor
push
xchg
ja
mov
push
dec
out
shlb
mov
add
mov
dec
pusha
stos
pusha
scas
push
inc
inc
lods
and
rclb
ss
xchg
cld
mov
xchg
dec
dec
lods
inc
mov
stos
cs
into
mov
iret
iret
inc
iret
dec
mov
and
roll
xchg
rcll
jge
inc
das
lods
popw
loope
dec
jne
std
sbb
mov
add
pop
orb
and
sbb
cli
dec
test
cli
aas
sbb
xchg
push
imul
adc
jg
sti
sbb
pop
fcomps
in
inc
outsb
xchg
sub
mov
gs
cmp
loope
adc
mov
leave
aaa
jbe
mov
jo
pop
rcrl
add
mov
pop
add
pop
jl
lods
aas
cld
test
mov
add
sbb
jl
dec
inc
cld
and
cmp
inc
outsl
cld
push
insl
jp
and
call
iret
push
pop
std
inc
or
cltd
dec
outsb
pop
pop
in
mov
aad
mov
add
out
pop
imul
pushl
jle
inc
add
andb
or
call
stc
mov
clc
or
in
push
out
arpl
and
inc
or
and
test
in
call
mov
daa
push
or
aam
das
jp
outsl
adc
imul
int3
jb
lods
cmp
jge
in
cmp
add
push
cmp
ret
xor
repnz
js
xor
stos
xchg
addps
xor
push
jne
cmp
lods
stc
xlat
mov
sub
or
test
lret
rol
or
lods
inc
cmp
fiadds
mov
fstl
pusha
pop
popf
out
lahf
dec
mov
pop
das
jp
inc
icebp
mov
cmp
push
mov
int3
fcomi
pop
xor
out
jnp
in
push
dec
sti
fistps
jb
in
mov
mov
icebp
mov
shl
add
shl
mov
mov
adc
mov
mov
and
lea
or
out
movb
push
xchg
jnp
fxch
add
aam
es
xchg
dec
push
daa
ja
imul
adc
push
mov
ss
push
cltd
orb
shrb
xchg
sbb
dec
ret
cmp
repnz
mov
push
and
mov
push
outsb
cmp
out
mov
mov
dec
xchg
mov
mov
push
inc
scas
in
into
popf
xchg
rol
adc
xchg
and
add
cmpb
icebp
fnstcw
pop
aam
testb
mov
mov
aad
ss
lea
mov
mov
imul
test
or
cs
dec
inc
xchg
push
mov
cmp
roll
mov
mov
pop
push
fcomps
rcr
dec
std
imul
stc
pusha
adc
sti
aas
scas
cwtl
imul
mov
dec
dec
xchg
jns
pop
les
pop
subb
mov
jmp
mov
sbb
inc
test
repnz
pop
push
inc
xchg
les
aad
inc
nop
in
out
fs
and
sub
ljmp
loope
imul
lret
sbb
fldenv
mov
das
paddusb
cmpsl
pop
idivb
sub
je
dec
inc
fmull
scas
push
cmp
jecxz
lcall
adc
repz
jae
cwtl
mov
repnz
pushl
mov
sbb
stos
fwait
dec
mov
pop
mov
xor
jmp
out
xchg
jg
jb
call
xchg
push
dec
test
xor
in
push
push
lods
sub
rorl
mov
mov
out
mov
sbb
add
pushf
cltd
iret
jb
sti
cmp
lock
inc
mov
add
adc
gs
pop
sbb
mov
and
xchg
lret
fwait
mov
lcall
insl
call
or
cli
sub
loop
jg
sbb
sbb
xchg
fs
test
dec
mov
push
aad
or
sbb
cwtl
mov
cmc
mov
pushf
ret
into
push
xlat
int3
jo
jnp
lods
and
pushf
out
push
cmp
push
xchg
or
mov
mov
ss
aam
fidivs
or
cmc
es
sub
mov
lcall
pop
popf
inc
add
xor
pop
test
push
cmc
movsl
mov
mov
inc
dec
fdivrl
dec
sub
adc
push
or
ja
dec
pop
jnp
mov
test
repz
nop
xor
stc
daa
sub
mov
xchg
pushl
adc
cli
js
cltd
or
jno
cld
mov
lds
sbb
and
adc
adc
adc
adc
or
int3
sbb
xor
inc
mov
scas
jbe
vmaxss
stc
into
push
add
dec
cli
mov
jo
pop
add
arpl
sbb
arpl
mov
loope
or
pop
xor
pop
adc
inc
cmpb
mov
mov
push
xchg
xchg
ljmp
or
es
and
dec
jge
test
push
fadd
jge
sub
pop
fs
pusha
cwtl
enter
pop
leave
mov
insl
or
dec
mov
and
add
push
gs
jle
out
pop
jae
add
scas
aam
push
jp
mov
push
daa
ficoml
mov
dec
sub
daa
dec
xchg
enter
pop
and
mov
pushl
inc
and
sub
xor
int
movb
or
mov
ds
lock
sub
aas
outsl
into
jle
add
mov
incl
pop
jbe
ss
jle
pop
mov
inc
sbb
inc
out
pop
and
inc
pop
jno
jp
ljmp
arpl
loopne
xchg
mov
fdivrl
outsb
adc
js
lods
out
fwait
xchg
xor
xchg
mov
add
jbe
mov
daa
divl
rcll
cltd
stos
sahf
cmp
mov
vstmxcsr
lahf
in
dec
roll
ja
call
clc
mov
and
cmp
shlb
pop
notb
lods
jbe
or
mov
jae
dec
sbb
or
jae
fucompp
aam
add
xlat
test
dec
in
loop
adc
lcall
mov
adc
mov
in
pushf
lds
aad
scas
je
shll
movsb
jo
and
mov
xor
enter
xchg
jne
jecxz
xchg
lea
cmpsl
or
mov
stc
xchg
cmp
and
in
fnstcw
dec
add
aas
stos
cmp
das
popa
fnstenv
push
jl
pop
popf
stos
adc
pop
iret
adc
out
bnd
repz
cli
xchg
pop
push
mov
xchg
lds
adc
lods
pop
mov
xchg
mov
or
or
mov
pop
aam
inc
or
adc
out
push
js
mulb
add
push
xor
add
clc
push
mov
mov
cmp
xor
jmp
mov
and
push
ja
ret
and
fldl
mov
push
imul
test
dec
cmp
mov
in
andl
push
xchg
jge
int3
adc
js
push
stc
sbb
cmp
mov
in
lret
or
fistps
in
and
jle
sub
jp
ja
fwait
into
scas
cmp
add
mov
sub
inc
outsl
icebp
insl
ja
out
pop
iret
rclb
adc
shrl
int
dec
outsl
orl
pop
mov
or
jmp
pop
mov
hlt
test
sub
pop
push
cmp
stos
lret
jae
and
jb,pt
test
faddl
lcall
inc
cmp
rolb
push
jmp
incl
cltd
adc
enter
repnz
mov
sbb
xlat
shll
hlt
test
aad
fs
arpl
rorb
enter
dec
loope
mov
jg
outsb
pop
adc
dec
jnp
inc
ljmp
mov
cld
std
pop
test
test
loop
mov
mov
movb
into
sub
mov
mov
out
subl
mov
fwait
dec
xchg
incl
or
pop
dec
repz
fwait
xchg
in
dec
jge
or
or
xchg
inc
test
cld
xor
cmp
shr
pop
icebp
cmp
mov
xchg
sahf
dec
pushl
andb
pop
cmp
cmp
es
mov
sahf
dec
sub
test
pop
sub
fidivs
scas
test
jecxz
inc
sub
rcrb
mov
lods
inc
lds
xlat
push
jmp
cs
pop
push
das
das
ret
adc
jmp
push
lock
xor
push
xor
lods
fucomi
in
sbb
adc
xchg
pushf
mov
test
cwtl
adc
mov
es
add
cld
rol
push
sbb
in
mov
mov
and
stos
cmp
pop
cmc
sub
js
mov
loop
jecxz
js
stos
inc
out
icebp
sbb
jbe
xchg
jbe
dec
adc
movsb
xchg
sub
cmp
mov
cmc
sub
outsl
fs
xlat
fwait
mov
mov
mov
jo
in
pop
lahf
fisttpl
fbld
pop
jmp
mov
or
push
xor
inc
ret
loope
mov
xchg
scas
mov
lahf
out
outsb
mov
repz
aas
cmc
xorb
test
and
aad
push
in
loop
sbb
adc
shlb
inc
pop
push
lods
add
push
push
sbb
or
aas
pop
aam
sub
add
out
insl
sub
addr16
or
bound
pop
xorl
cmp
mov
lahf
add
frstor
mov
fucomi
arpl
jno
cs
jecxz
jbe
loope
xor
sub
pop
outsb
mov
cmp
lcall
mov
shlb
in
mov
mov
loope
mov
aaa
sub
jecxz
cmp
rolb
popf
jmp
adc
fs
pop
pop
xchg
jl
scas
mov
mov
lahf
xor
lret
lods
std
loope
and
cmp
popf
int3
and
rol
xchg
daa
frstor
cmp
ljmp
and
mov
icebp
in
mov
xor
pop
loop
loope
lds
push
mov
orl
imul
xor
jmp
imul
or
xchg
in
test
pusha
repz
mov
loopne
mov
out
popf
jmp
popa
stos
pushf
jge
push
jo
add
mov
mov
mov
mov
add
push
in
push
mov
xchg
dec
sub
jnp
cmp
inc
push
call
imul
mov
xchg
dec
lret
ss
int
pop
push
jae
jle
pop
arpl
add
inc
jnp
imul
dec
add
mov
sub
or
mov
mov
jge
jmp
push
push
and
xchg
je
add
dec
push
jmp
push
xor
dec
inc
mov
lock
push
push
xor
sahf
jp
xchg
jl
dec
jbe
lahf
mov
ja
popf
test
enter
fisubrs
push
and
test
pop
xor
and
sbb
inc
xlat
pop
std
js
int3
mov
sub
ljmp
jge
sub
cld
pop
sbb
adc
shlb
dec
inc
iret
fildl
mov
dec
xchg
pop
jne
repnz
lret
cmc
push
lods
clc
subb
movsb
adc
inc
xor
pushf
insb
xor
aaa
imul
imul
mov
sbb
pop
lahf
mov
dec
jecxz
inc
outsb
cmp
sbb
outsl
adc
outsl
mov
push
jmp
mov
aam
mov
lret
pop
icebp
cmpsl
sbb
dec
je
ss
enter
test
sub
fbstp
and
jae
inc
push
mov
mov
test
jb
and
test
jbe
push
loope
scas
mov
stos
and
push
mov
cmp
ret
rclb
inc
stos
stc
push
dec
cld
jo
aas
mov
hlt
in
out
outsb
call
add
imul
pop
orl
int
mov
push
lock
stc
movb
cmpsl
decl
int
push
adc
frstor
dec
sahf
and
cmp
scas
sahf
xor
mov
ljmp
fidivrl
mov
jle
shl
push
jne
mov
fisubs
sub
bnd
dec
mov
into
or
cmp
cmp
jno
inc
ss
sub
negl
lods
int3
or
pop
push
test
ss
xchg
outsl
or
jns
les
xor
in
rcll
pop
into
aas
adc
cvtpi2ps
inc
imul
jge
fnstcw
sub
mov
ret
sub
mov
leave
ja
dec
ss
fldl
es
and
add
repnz
xor
pushf
dec
inc
iret
xchg
test
jl
sbb
gs
mov
outsl
addr16
jne
rclb
sub
cs
mov
mov
or
pushf
add
dec
xor
sub
insb
and
xor
and
jo
sbb
jne
inc
jle
push
addr16
and
addr16
push
mov
cltd
mov
insl
sub
mov
into
cmpsl
rcll
add
loop
in
hlt
dec
dec
push
in
int3
push
les
ret
sarb
adc
flds
sbb
push
push
lahf
mov
sahf
xchg
inc
and
push
add
lock
pop
pop
aaa
imul
add
insl
imul
sub
jp
cmp
adc
pop
adc
out
lret
sub
xorb
cltd
daa
dec
neg
push
mov
cs
sub
jl
jns
xchg
mov
or
dec
popa
pop
add
sti
imul
mov
push
jnp
movsb
pop
pop
jae
rol
movsl
lea
notl
fs
hlt
aas
jecxz
mov
mov
fidivs
test
mov
jbe
mov
cld
sub
ret
or
cmp
in
icebp
and
psrld
mov
dec
sub
adc
leave
add
push
loop
sub
fcmovb
fnstcw
and
sub
xor
std
and
push
fimull
les
cwtl
stos
push
out
add
in
add
inc
inc
std
imul
jecxz
enter
dec
mov
fimull
sub
or
rol
mov
cltd
or
lahf
cltd
lods
mov
cltd
daa
dec
push
pop
pop
sub
inc
es
loop
in
hlt
cmpsl
mov
xchg
iret
lea
xchg
in
or
cld
jbe
stos
loope
xor
idivb
stos
or
stos
mov
stos
adc
xor
movsl
push
dec
cltd
inc
bound
aam
lret
fsub
jae
out
test
repnz
jne
insb
jbe
ror
fsubrl
dec
pop
movsb
adc
or
adc
or
mov
scas
stc
xchg
and
gs
lods
jecxz
add
movsb
xchg
ss
push
cmp
mov
arpl
lahf
shrb
mov
mov
arpl
sbb
xchg
clc
fstl
fucom
push
fwait
cmpsb
inc
subl
jns
popf
mov
push
mov
hlt
scas
pop
mov
xchg
jl
les
dec
stc
shr
out
push
das
gs
pop
int
push
ret
or
test
inc
add
mov
inc
jecxz
pushf
add
test
out
dec
dec
mov
ret
cmpsl
sbb
xlat
jp
cmp
lret
mov
outsb
inc
sub
mov
mov
inc
cmp
lds
inc
insb
pop
in
std
jmp
xchg
push
ficomps
xor
pop
add
add
das
into
mov
inc
mov
ljmp
stc
aaa
mov
mov
jecxz
icebp
nop
mov
aad
add
push
decl
ror
lret
sbb
in
push
sbb
sahf
int3
popa
xor
jno
jge
dec
rclb
decl
add
jecxz
xor
ja
xchg
xchg
dec
sarl
loope
jo
jbe
or
mov
inc
lret
pop
mov
push
jge
pop
adc
pop
pop
add
cmc
jge
xchg
int3
cmp
inc
shr
jnp
add
or
in
inc
fisubl
call
fstps
inc
into
mov
add
roll
pop
xchg
and
lods
push
scas
xchg
mov
mov
mov
into
push
test
inc
data16
lea
add
adc
aaa
sub
scas
dec
jecxz
test
mov
adc
lret
test
dec
aam
repz
push
out
xor
jnp
outsl
inc
aam
lcall
push
jae
lahf
xor
std
pop
mov
aam
push
gs
add
cmp
movsb
notl
mov
enter
jle
pop
pop
test
fnsave
mov
mov
cmpsb
loop
jnp
ret
ljmp
push
push
jg
setg
xor
stos
popf
insl
arpl
sbb
ss
ret
subl
sub
push
jmp
fistpll
jp
repnz
push
mov
and
hlt
sahf
cmpsb
nop
ror
stos
decb
out
sbb
into
dec
insb
or
xchg
mov
xchg
notb
xlat
mov
cmp
inc
jg
test
lret
xchg
lcall
in
js
or
add
iret
pop
imulb
mov
int3
lret
lret
sub
out
fwait
lock
mov
outsl
jae
fsubl
sbb
sub
outsb
out
mov
sahf
inc
mov
xchg
pop
cmp
sub
in
call
rcrl
movsb
int
dec
stos
push
mov
dec
stos
xlat
pushf
inc
push
popa
loop
loopne
cmp
jb
les
outsb
imul
and
mov
sub
jle
lea
xchg
adc
ror
push
add
or
inc
pusha
mov
aam
roll
pop
mov
lock
pop
das
dec
mov
ficoms
addr16
dec
cmpsb
outsl
push
xor
push
add
fnstsw
arpl
into
loope
ret
enter
aaa
int
inc
out
fbstp
call
push
mulb
mov
std
scas
rorl
lods
ret
callw
out
aas
stc
orb
dec
mov
and
clc
nop
fdivrs
pop
je
xchg
inc
daa
rcrl
mov
mov
jge
ja
mov
inc
sub
pop
idiv
sub
mov
pop
add
adc
fiaddl
adc
mov
std
sbb
jo
or
ds
jmp
rcll
jge
aad
pushf
jmp
add
mov
push
push
shll
insl
imul
ja
adc
out
adc
pop
lcall
mov
cmp
mov
std
insb
cmp
bound
pop
in
add
and
push
mov
les
call
iret
xor
adc
out
repnz
aad
xchg
dec
ss
imul
es
cmp
inc
dec
loopne
gs
nop
pop
and
and
hlt
out
setl
fldt
mov
fdivrs
cmp
mov
xchg
push
sbb
leave
jae
mov
ja
jae
xor
jl
call
int3
imul
or
enter
jb
sahf
dec
jecxz
das
cmpsl
mov
and
clc
add
xchg
add
mov
cmp
or
stos
pop
shlb
inc
xchg
push
iret
sub
push
push
xchg
cltd
pop
sub
cmp
daa
xor
fbstp
mov
mov
repz
lds
mov
cmc
jle
jl
cmp
sub
push
enter
push
aaa
mov
ficoms
mov
out
pusha
in
pusha
inc
and
cmp
pusha
lret
fstpl
fisubl
in
mov
mov
xchg
push
push
xor
lods
mov
sbb
push
xchg
mov
sbb
or
mov
pop
pop
fwait
fildll
pop
add
lock
xor
adc
fwait
lods
jb
int3
jp
and
and
xchg
cmp
push
add
in
cwtl
call
inc
mov
loope
mov
cmp
out
or
jnp
adc
jmp
sbb
aaa
test
cli
pop
and
mov
or
jno
lahf
int
fprem
or
scas
mov
iret
xchg
xorb
push
popf
es
and
adc
dec
sub
inc
ljmp
xchg
subl
pop
add
stc
dec
xchg
shrl
fwait
cmp
mov
or
iret
mov
addl
mov
push
add
inc
cmp
dec
xchg
jmp
mov
jp
adc
cmp
xchg
push
repnz
jnp
sbb
mov
les
mov
inc
js
jge
xor
mov
aam
sbb
test
mov
xlat
call
rcll
pushw
movsl
mov
out
movsl
leave
daa
mov
xchg
cmp
test
enter
or
loop
mov
sti
test
mov
jno
or
cli
xchg
repz
dec
or
pop
adc
sti
pusha
fbld
cmp
dec
sub
lret
and
loopne
jecxz
test
pop
out
adc
cvtps2pd
ss
push
add
xor
pop
pop
es
rcr
out
push
aad
add
nop
mov
enter
mov
push
jle
and
out
xlat
std
in
mov
dec
sti
push
sub
daa
cltd
mov
sub
imul
xchg
adc
pop
pop
sub
outsb
push
cmp
lods
pop
lods
cld
jbe
pop
adc
jnp
in
lods
xsha256
cmpsb
adc
fcmovb
inc
aad
sub
mov
cmp
imul
xor
jmp
dec
or
cmp
adc
movups
decl
cmpl
data16
pop
in
inc
sub
pushf
cwtl
jbe
fildll
in
and
push
call
sbb
jno
int3
jne
inc
sub
fs
pusha
cmp
mov
mov
hlt
jmp
popa
out
pop
das
sbb
cli
addb
mov
das
test
or
pop
scas
dec
imul
jl
or
jbe
mov
xlat
out
xchg
cmp
test
add
cmp
mov
cltd
mov
aaa
inc
dec
andb
push
adc
mov
pop
jge
xchg
inc
or
imul
movsb
jb
ljmp
push
bnd
loopw
xchg
inc
adcb
insb
cmpsl
xchg
adc
inc
inc
sub
fisubs
and
repz
enter
sbb
and
cmp
icebp
movl
mov
and
mov
dec
pop
and
xchg
jbe
jne
push
and
imul
push
loopne
mov
clc
mov
add
mov
mov
cmp
ds
inc
mov
push
test
mov
jmp
pop
fstp
in
push
inc
gs
in
jmp
inc
dec
aas
jae
hlt
mov
push
mov
lea
xchg
inc
mov
mov
xor
dec
xor
shrb
push
cmp
jno
cmc
scas
sub
fst
jns
lods
loopne
jnp
adc
cli
sbb
or
daa
pop
lock
add
jb
outsl
insl
adc
push
int
ror
xor
inc
lea
xchg
in
ljmp
push
mov
sahf
xor
dec
mov
adcl
xchg
push
call
scas
jl
pop
mov
or
add
inc
lahf
outsb
dec
push
popf
rcrl
mov
jo
imul
out
lea
ret
inc
movsb
aad
dec
out
xlat
adc
stos
bnd
lret
fdivrs
jmp
cmp
jb
xorl
push
loop
mov
xor
dec
into
js
xchg
fsubp
in
filds
fucomp
loope
jo
roll
lahf
xorb
inc
sub
add
loope
lret
or
xor
mov
fwait
bound
in
popf
int
dec
pop
ret
in
int
ja
ja
jbe
jmp
cmp
popf
sub
xchg
xchg
jmp
loope
lock
lods
inc
in
lds
int
dec
loopne
adc
aaa
cmpb
das
inc
mov
pop
xor
push
int
pop
stc
lea
mov
mov
jns
stos
rorl
or
sbb
ret
pushf
cmc
push
sbb
dec
test
mov
out
adc
mov
in
dec
xor
cmpsl
in
stc
out
test
shrb
cmc
sahf
and
mov
cmp
ret
call
push
mov
addr16
push
mov
xchg
fcomp
jl
fwait
lods
adc
fsts
pop
in
dec
test
xchg
xchg
inc
pop
jmp
sar
jbe
cmp
or
stos
test
pop
add
sbb
es
cld
inc
jl
shr
std
lods
mov
xchg
aaa
pusha
roll
int
test
or
xor
adc
aas
divl
cmp
dec
cld
mov
mov
cld
push
inc
dec
addr16
stc
add
pop
jg
mov
or
out
adcl
mov
mov
rcrl
xor
ja
pop
outsb
mov
and
cwtl
mov
int
or
add
negl
xorl
subb
xlat
and
icebp
cmpsb
cmp
fsub
popa
cmc
movsb
clc
idiv
sub
insb
inc
lret
sbb
pop
adc
sub
jl
scas
pop
sbb
jge
imul
pop
loopne,pt
adc
sbb
xor
push
sahf
sbb
loopne
mov
outsl
std
xchg
lahf
jp
sahf
out
pop
dec
stos
xchg
or
mov
add
lods
jecxz
dec
push
int
inc
lcall
bound
inc
sub
mov
imul
sub
or
push
ljmp
lret
inc
pop
push
repz
mov
out
adc
sub
or
push
fwait
cmpl
test
dec
in
push
push
div
ds
mov
clc
fmuls
and
or
roll
jg
ret
xor
push
mov
add
call
dec
or
test
int
shlb
outsl
xchg
pop
xchg
sbb
or
jae
add
outsb
or
cmpsb
aas
insl
or
aam
in
mov
xchg
pop
jae
push
jb
fstpt
sbb
mov
arpl
fwait
or
sbb
loop
les
lock
aas
jno
dec
fnstcw
mov
xchg
adc
add
push
shlb
scas
inc
cmc
jb
clc
leave
add
mov
fnsave
push
pop
lea
icebp
daa
or
into
jne
out
mov
adcl
pop
stc
push
ljmp
jnp
stc
int3
mov
cmp
jl
cs
arpl
add
ja
in
addr16
loop
ljmp
push
ss
mov
adc
xor
inc
call
mov
mov
jmp
adc
push
ret
sub
incb
add
fiadds
add
inc
fwait
jl
sub
mov
adc
adc
inc
mov
mov
ret
pop
mov
jl
data16
subb
cmp
shlb
xor
cwtl
shll
pop
cmpsb
mov
std
or
mov
insl
andl
sub
dec
cmc
std
stos
sub
cmp
loopne
xor
cmp
mov
mov
push
fisttpl
ds
je
aam
arpl
mov
and
test
cmp
mov
ja
out
xlat
jecxz
mov
nop
clc
pop
cmp
inc
outsl
fdivr
add
stos
and
mov
addr16
jns
repnz
popf
cmp
cli
sarb
jbe
dec
xchg
push
fidivrs
push
imul
popa
adc
xchg
out
add
sub
sti
mov
mov
pop
xor
and
cmpsb
js
pusha
fwait
xchg
mov
or
mov
sbb
cmpsb
mov
in
jp
std
int
cld
xchg
fcoms
ret
inc
xor
sbb
jo
into
clc
and
jl
popf
sar
daa
xchg
xlat
mov
push
cmp
test
jne
hlt
ret
aam
daa
mov
inc
fmuls
out
leave
cmp
mov
call
inc
sub
testb
int3
pushf
pop
sbb
or
negl
je
adc
sub
pop
data16
cmpsb
out
xorb
out
cmp
dec
jbe
scas
and
xchg
jle
out
inc
lock
cmc
into
jno
dec
jecxz
inc
pop
das
ljmp
sbb
ret
in
sub
xlat
adc
mov
popf
xor
push
push
jns
popl
imul
xchg
pop
or
repz
dec
mov
adc
cmpb
mov
push
bound
jmp
outsb
scas
lret
or
add
in
xchg
cmp
push
in
adc
mov
jge
jg
mov
fbld
ja
ja
sbb
jp
das
ljmp
aas
pop
jl
dec
or
or
push
jnp
in
jbe
jnp
sub
xor
or
mov
leave
cmpsb
ljmp
adc
pop
ljmp
pop
sahf
ret
pop
xchg
jmp
dec
daa
mov
push
shll
lret
dec
cmc
or
cmp
fdivrp
xor
or
add
mov
lcall
inc
fisttpl
xor
lock
sahf
sub
ss
daa
pusha
std
jge
lock
jb
or
and
xchg
aam
je
pop
aad
out
xor
aad
insl
adc
push
lret
pop
xchg
pop
das
insl
fldcw
push
mov
sbb
ret
xchg
cltd
cmc
out
push
mov
insb
data16
rcrl
daa
test
mov
repnz
icebp
stos
xor
push
shrl
sub
xchg
sbb
sub
cli
sbb
sbb
jnp
scas
popa
xor
mov
xor
add
add
inc
jae
flds
lsl
cmp
idivl
jg
rcrb
test
repz
jns
dec
dec
sbb
fcomps
imul
sbb
jge
lahf
jecxz
xor
sbb
cmp
scas
ret
filds
fimull
pop
lret
inc
mull
pop
fwait
adc
lock
mov
cltd
inc
xor
test
rcrl
popf
stos
testb
pop
xorb
cltd
test
aam
cs
jl
pop
inc
lcall
sbb
mov
je
test
pop
fidivrs
sbb
jecxz
and
ret
xchg
mov
rorb
fmull
xlat
sbb
add
xchg
xchg
pusha
into
jnp
add
xchg
adc
outsb
mov
iret
lahf
test
cld
sarl
push
test
mov
cmpsl
pop
aam
test
sub
shlb
xchg
cmp
cmpsl
sub
addl
mov
lock
std
ljmp
sbb
insb
popa
push
outsl
push
mov
and
jne
push
add
lods
rorb
pop
jp
add
pushf
loop
ftst
cwtl
push
dec
pop
dec
jb
jle
fldenv
ret
xor
jnp
mov
xchg
nop
sti
out
adc
jnp
sbb
push
addr16
mov
and
fwait
jp
daa
xchg
pop
pop
sbb
mov
or
xchg
jmp
sub
or
add
bound
movsb
mov
mov
push
and
popf
mov
repnz
jg
jl
jle
cwtl
mov
scas
fsub
mov
std
mov
arpl
add
add
mov
sbb
push
xchg
icebp
cmc
or
lods
push
jno
std
and
fdivrl
cld
cwtl
xor
jl
add
or
imul
cli
int3
mov
call
jg
clc
cmp
inc
stc
mov
gs
mov
jp
dec
test
pop
push
adc
jg
popf
adc
rorb
pop
cmc
jns
iret
sub
rcrl
fwait
xchg
xor
loope
inc
lahf
mov
orb
push
fwait
testb
into
sub
pop
fnsave
cmc
jae
mov
xchg
inc
dec
adc
out
in
mov
adc
arpl
rol
dec
outsb
jmp
fcmovb
adc
roll
cmp
pop
dec
repnz
sahf
mov
pop
lcall
inc
mov
cmp
dec
add
data16
testl
mov
lahf
rcrb
jns
bound
pushf
pop
inc
lea
mov
fdivs
lret
imul
std
mov
inc
inc
out
push
jns
bound
mov
in
out
int
mov
cmp
push
fdivp
into
sub
push
in
xchg
movsl
into
sbb
cmp
cmp
jns
mov
jo
scas
mov
ljmp
in
cmp
lds
cmp
cmp
push
add
push
frstpm(287
or
test
loopne
xor
push
fsts
jnp
jbe
call
mov
mov
ret
clc
dec
push
mov
mov
pop
and
repz
roll
ljmp
fmull
lods
lcall
ret
adc
je
sbb
testl
mov
pushf
mov
call
xchg
pop
push
pop
adc
adc
xor
loop
bound
out
mov
popf
shl
and
sbb
pop
sbb
stos
pop
test
popa
pop
outsb
sbb
push
lahf
mov
jecxz
sub
scas
repnz
repnz
rclb
and
mov
lock
call
or
mov
push
rcr
cmc
mov
mov
xor
mov
jge
sahf
mov
push
rcll
stc
cwtl
sub
fwait
xor
sarl
push
cmp
mov
sub
cmp
add
fisttpl
sbb
push
scas
adc
mov
sbb
pop
je
aaa
fs
mov
out
mov
fs
mov
push
pop
stc
adc
xchg
cld
mov
fs
sbb
add
in
and
cmpsb
mov
daa
adc
xchg
jmp
repnz
lock
mov
and
pop
xor
mov
lds
jno
jecxz
addr16
mov
and
xchg
js
andb
push
insl
arpl
test
jnp
sarl
sub
fdivrp
cmpsb
cli
sub
sub
iret
nop/reserved
mov
out
mov
leave
sub
dec
mov
push
or
mov
lock
inc
cmp
jbe
mov
push
xor
adc
or
or
int
es
stos
in
popa
cmp
mov
in
pop
dec
mov
dec
inc
in
roll
cmp
ret
jecxz
rcrl
and
shl
push
push
mov
stc
mov
sbb
and
popa
adc
out
jle
jb
push
inc
dec
inc
or
push
xchg
xchg
cmp
cmp
lret
mov
sub
inc
mov
mov
xor
je
inc
shlb
inc
sub
loop
xor
push
popf
test
inc
dec
sbb
or
or
decb
iret
fwait
sbb
jns
push
in
adc
cmpb
gs
fistl
or
orb
dec
pop
xor
nop
lret
sub
out
jl
repz
insb
push
mov
in
xor
fs
daa
test
xor
or
aaa
mov
lock
jae
inc
nop
mov
push
movsl
mov
fcmove
inc
add
mov
popf
sahf
pusha
jl
cmpsb
jl
in
cmp
add
fs
loopne
jl
les
cmp
jae
pushf
lret
cs
sarl
in
sub
push
stos
xorl
test
out
cmpsl
mov
cwtl
test
jecxz
imul
jnp
int
movsb
jno
gs
mov
js
loopne
jle
sbb
icebp
cmp
shr
jmp
in
xor
clc
popa
sbb
dec
and
fs
add
mov
sub
add
scas
repz
in
sahf
or
jnp
in
and
lods
arpl
xor
and
ror
nop
xchg
pop
out
pusha
or
inc
mov
test
jbe
mov
out
jnp
shrb
iret
pop
nop
movsb
inc
jmp
aad
outsb
sbb
jno
sub
arpl
jl
hlt
sub
mov
mov
sbb
sahf
inc
mov
dec
xchg
out
push
fcmovu
ds
pushf
lret
stc
stc
scas
dec
pop
cmpsl
int3
mov
aam
inc
insl
mov
sti
ret
pop
jo
adc
lock
repnz
inc
xlat
xchg
mov
jmp
fsts
xor
adc
and
cmp
mov
test
retw
xchg
sahf
out
and
sbb
inc
aad
inc
mov
xorb
add
gs
sarl
jl
sahf
and
imul
subl
jb
pop
sbb
stos
clc
popf
push
jnp
ss
cmp
mov
mov
fwait
push
push
push
cmp
pop
cwtl
xchg
rcrl
jnp
loop
add
test
sbb
int
mov
jbe
push
adc
mov
add
push
push
mov
test
dec
fnstcw
sbb
mov
std
adcl
sub
adc
fstpt
add
loope
dec
pop
rcl
sbb
mov
pop
pop
push
dec
stc
sub
cli
pop
mov
cld
mov
incl
inc
mov
xor
and
adc
aam
push
inc
sti
shll
mov
mov
mov
outsb
loop
int3
pop
or
dec
fwait
cwtl
push
outsb
push
hlt
cmp
xchg
lea
addr16
movsl
or
cld
jo
arpl
or
fimull
push
aas
cld
fldenv
jbe
stc
xor
scas
xchg
scas
pusha
add
pusha
stos
xor
inc
outsb
inc
scas
xchg
test
mov
icebp
into
xor
or
push
incb
into
xchg
cmpsl
jb
add
jmp
out
leave
ret
std
ja
or
or
mov
mov
sub
mov
mov
jnp
jns
mov
xchg
add
hlt
lahf
movsb
cmp
adc
hlt
out
and
and
inc
ljmp
orl
addr16
outsb
out
xor
ds
dec
mov
mov
sub
xor
loop
ss
xorb
xlat
subl
jmp
ja
popf
push
mov
mov
mov
jbe
xchg
push
inc
mov
sub
iret
imul
insb
push
push
lret
setl
inc
mov
mov
adc
fsqrt
inc
inc
add
lret
xchg
add
sbb
sbb
add
out
xor
mov
push
scas
and
sub
push
outsl
addl
push
and
jge
dec
dec
pop
insb
arpl
daa
xorb
and
dec
mov
pop
or
inc
mov
push
sbb
popf
jmp
js
mov
es
ret
cmp
int
mov
adc
sub
mov
push
gs
repz
xlat
or
dec
mov
cwtl
dec
icebp
sub
inc
test
movsb
outsl
push
data16
xor
movsl
mov
adc
jmp
repnz
out
xchg
outsl
pop
ds
xor
insb
dec
dec
rorl
inc
push
movsl
cmpb
jp
inc
mov
cmp
jbe
jp
vaddpd
fwait
addr16
push
xlat
das
cli
in
cli
mov
mov
push
jns,pn
arpl
or
and
sub
aam
outsl
pop
ja
jg
or
xchg
stos
mov
fisubrs
shlb
inc
push
lea
mov
xchg
test
dec
arpl
and
and
sbb
ss
push
pop
cmp
fdivrp
push
gs
adc
mov
mov
pop
add
pop
in
sub
lahf
fistpl
scas
lret
mov
or
dec
jecxz
xchg
pushf
out
data16
jmp
into
in
clc
xchg
out
in
lret
jns
xchg
mov
sarl
xor
mov
hlt
xor
cs
inc
in
add
inc
sub
mov
js
mov
pushf
mov
cltd
fwait
xlat
dec
adc
sahf
das
xlat
enter
xchg
aad
mov
push
sbb
push
test
jg
insb
inc
add
dec
inc
sub
clc
sub
lds
negb
mov
cmp
pxor
fdiv
les
jle
jg
sub
add
mov
in
jmp
mov
popa
ds
dec
scas
das
inc
mov
or
push
sbb
sbb
mov
lds
mov
add
rcrl
out
insb
jmp
or
and
jl
mov
inc
leave
out
cwtl
iret
push
jbe
pop
enter
shlb
insb
pop
push
notb
leave
shrl
in
int
lds
popa
sbb
lods
mov
sub
daa
arpl
jp
insb
or
mov
xchg
movsl
xchg
and
push
cmpsl
aam
add
sub
dec
sbb
adc
push
dec
movsl
ds
push
movsl
mov
pop
out
cmp
out
pop
movsb
jmp
mov
mov
cs
fisubl
outsl
cmp
jl
out
xor
cmpsl
push
icebp
int
mov
add
popa
jb
xchg
into
out
pop
in
mov
cmp
xchg
mov
ss
rcrl
arpl
push
imul
jns
out
int
imul
ret
push
inc
out
jl
aad
lret
testb
fcmovnb
cmpsl
dec
inc
je
test
sbb
jg
adc
xor
fadds
iret
adc
xchg
sahf
sub
xor
xor
sbb
outsl
mov
push
mov
and
pop
mov
filds
movsb
sti
dec
subb
jp
lods
aaa
adc
mov
ljmp
push
and
jne
sub
push
cmpsb
pop
sub
roll
test
jbe
je
jbe
mov
shrl
jg
cs
lods
popf
xchg
mov
mov
mov
in
xchg
stc
in
or
push
pop
repnz
fimull
int
loope
insb
es
mov
mov
xchg
lea
mov
xchg
in
std
mov
mov
pop
or
xchg
lcall
sub
mov
repnz
pop
cmpb
hlt
sub
sub
jp
notl
and
repnz
dec
dec
xchg
mov
adc
ret
ret
dec
dec
sahf
repz
sub
aam
cmp
xchg
cmpsl
jl
sarl
addr16
repnz
movsl
fnstsw
ds
cmp
pop
cmp
fwait
in
lock
sub
rolb
pop
loope
mov
in
rolb
push
add
rcll
das
inc
test
and
sub
js
clc
jo
cmc
or
shrb
and
iret
pop
push
aam
sub
add
pop
insl
imul
movsb
popf
lcall
inc
aam
sub
mov
stos
sub
or
add
clc
mov
inc
mov
lods
lcall
jno
imul
aam
addr16
push
cs
xchg
xor
xchg
dec
dec
sub
push
sbb
cltd
gs
insl
fistpll
repz
mov
add
or
inc
jle
int3
mov
mov
ljmp
fiaddl
test
in
cmp
ja
test
out
push
dec
notb
pop
mov
jl
arpl
sub
je
fistl
xor
jmp
xchg
flds
subl
outsl
shlb
imul
mov
jl
iret
dec
adc
stc
mov
xchg
push
or
xchg
pop
repz
and
frstor
inc
inc
cli
fxch
aaa
lret
push
push
loopne
xor
cmp
dec
out
jge
adc
clc
pop
lods
pop
loopne
add
cwtl
adc
jbe
mov
jmp
xchg
mov
pop
fstl
lahf
inc
adc
std
mov
lods
mov
jbe
rcrb
stos
push
or
add
cli
mov
dec
scas
test
sbb
mov
cmp
pusha
inc
sar
sbb
lods
pop
add
and
pop
fcomps
ss
jle
rolb
test
loopne
jp
int
pop
jp
fistl
cmpsb
lcall
jg
cli
scas
sbb
iret
xor
or
fwait
pop
insb
sbb
in
add
cmp
inc
cmc
call
test
ficoml
cmp
add
xchg
pushf
sub
in
int3
fs
shlb
mov
dec
fwait
loopne
add
sub
inc
or
jns
lods
outsl
and
rcrl
mov
cli
js
push
bound
adc
insl
sti
in
pop
scas
lock
push
cmp
in
loop
insb
push
mov
in
mov
xor
add
test
sbb
jecxz
pop
jns
add
sbb
fs
stos
push
in
cmp
xor
sbb
sub
loopne
dec
mov
scas
fldt
lret
stos
shl
sub
sub
mov
push
sti
fildll
mov
mov
jae
push
add
xor
mov
push
arpl
gs
inc
mov
fmull
dec
pop
adc
adc
pop
mov
cs
in
pop
xor
sahf
stc
fildl
hlt
push
inc
popa
insb
sti
push
push
cmc
sbb
xor
fwait
data16
mov
add
es
scas
push
push
jp
mov
sub
mov
daa
sbb
mov
cli
adcl
lea
xor
and
call
rolb
pop
aaa
bswap
int
ja
sbb
add
xor
rcrb
hlt
sub
pop
inc
cmpsl
rcll
pop
fidivrl
repnz
and
mov
imul
lret
ljmp
mov
clc
pop
pop
addr16
int
sbbb
adc
shrl
test
imul
mov
mov
stos
adc
fwait
xor
mov
inc
out
icebp
loopne
mov
cli
push
cmpsl
jmp
push
dec
into
ret
or
add
loopne
mov
cmp
int3
cltd
add
xchg
addb
xchg
into
or
pop
ss
pop
cmpsb
or
aaa
cli
lcall
xchg
repz
mul
lock
test
add
add
insb
and
mov
or
into
fs
mov
out
fwait
sarl
and
inc
xorl
out
das
mov
cmpsb
pop
insl
sbb
mov
andl
comiss
lock
ficoml
clc
sub
in
jp
stos
and
jle
aaa
inc
xchg
sbb
add
aad
das
xor
stos
jge
cld
nop
xchg
stos
shll
fsubr
shr
adc
pop
push
stc
cmc
imul
mov
inc
inc
lods
adc
mov
out
repz
test
lahf
mov
fs
pop
dec
jnp
xchg
jge,pt
pop
outsb
inc
pop
jns
push
lods
pop
in
outsl
stos
mov
push
in
jecxz
cltd
scas
pop
adc
insb
xor
lret
jo
jecxz
ja
lods
and
daa
inc
cmpsb
insl
pop
cmpsb
pop
jbe
cmp
bound
cmp
sub
xor
xchg
xchg
push
or
dec
es
cmp
pusha
aam
scas
xchg
subb
jns
mov
mov
dec
mov
sub
stos
inc
leave
inc
cmp
mov
jge
inc
enter
add
mov
test
out
add
clc
out
xchg
mov
jbe
mov
in
adc
insb
aas
popl
cmc
dec
mov
fwait
jne
mov
pop
cltd
xchg
mov
jb
cmpsb
std
cmc
fstpt
mov
in
push
iret
imul
call
sbb
push
clc
movsb
pop
cwtl
and
lcall
jge
cmp
inc
test
or
inc
mov
shrb
pop
sbb
or
div
dec
inc
xchg
sub
lods
mov
stos
mov
push
sub
xchg
xor
or
fimull
pushf
cld
push
and
nop
ljmp
aam
jl
fimull
cltd
leave
or
add
fwait
jae
inc
or
fisttps
enter
stos
xchg
push
test
adc
dec
cmpsl
xchg
es
lods
jecxz
lock
mov
adc
sbb
pop
xchg
sbb
mov
inc
jge
inc
mov
xchg
fucom
cmp
popf
pop
or
nop
mov
pop
mov
and
gs
inc
push
nop
icebp
inc
in
outsl
test
inc
jmp
fcoms
icebp
add
sub
cmp
out
mov
rol
iret
xchg
sbb
sahf
sub
jae
addr16
and
es
pop
xor
data16
gs
pop
jmp
sbb
outsl
outsl
test
clc
xchg
cmpsb
in
sub
inc
popa
lret
jl
inc
fcmovne
aam
mov
out
mov
mov
jno
jg
xor
inc
movsl
jge
and
dec
jne
stc
inc
stos
cmp
or
xchg
inc
scas
push
add
push
pusha
or
les
add
dec
in
aas
pushf
xchg
add
out
xor
mov
add
push
lods
and
or
sub
loopne
mov
ret
fs
push
arpl
or
data16
and
ljmp
bound
inc
add
sbb
dec
jb
hlt
test
insb
aaa
faddl
cltd
pop
xchg
and
aaa
jns
push
xchg
mov
insb
adc
or
or
inc
call
inc
cmp
sub
mov
dec
cmpsb
ja
out
pop
negb
lds
repz
mov
xorl
in
cmp
shlb
sbb
leave
or
data16
adc
pop
nop
test
fldl
or
ja
filds
cmp
mov
jbe
xor
and
pop
rcrl
or
icebp
shlb
mov
push
inc
mov
cmp
stc
jmp
in
cmpl
rcr
int
mov
in
xchg
sub
push
arpl
fsubl
insl
shlb
push
adc
adc
xchg
insb
aas
sbb
jne
aaa
push
in
fmull
mov
sbb
lods
pop
repnz
sar
repnz
test
test
adc
cltd
dec
sti
mov
mov
test
mov
cmpsb
cmp
inc
cld
es
shrb
pop
fadds
in
fcompl
xchg
shll
xor
push
add
pop
call
push
and
sub
jnp
rorb
test
lret
call
mov
mov
popf
pop
jge
aam
or
jle
push
loopne
and
inc
push
add
and
xor
cmp
xchg
and
loope
dec
push
data16
in
mov
lcall
rclb
scas
mov
int3
push
inc
sbb
and
addl
mov
fistpll
sub
fidivrl
pop
sbb
adc
into
leave
xchg
movsl
sbb
push
mov
cmpsl
ficomps
data16
adc
aaa
jbe
out
mov
fcmovb
int
mov
sub
xchg
lret
repnz
jge
mov
mov
fistpl
xchg
xor
dec
jbe
popf
mov
dec
and
loopne
lahf
push
jno
loope
cmp
fsubs
pop
or
shrl
bound
scas
sub
cmc
push
jae
jae
loope
ret
xlat
mov
mov
fsubrp
hlt
cmp
addb
cmp
jb
out
js
pop
dec
sbb
dec
imul
imul
pop
mov
xchg
sub
push
mov
sub
sbb
pop
incb
pop
test
mov
nop
pop
xchg
pop
push
imul
xorl
ljmp
iret
pop
jo
adc
cmp
jmp
scas
mov
rcpps
repz
mov
dec
sbb
addr16
mov
mov
gs
dec
leave
xchg
test
adc
xor
and
into
ljmp
mov
ret
add
mov
jl
scas
addr16
loop
mov
das
cmp
push
fwait
and
addr16
jmp
lret
mov
ja
rdpmc
ret
xchg
push
sbb
test
stos
mov
lret
inc
rolb
xchg
push
cmpsl
push
mov
roll
cmp
adcl
stos
jns
rcrl
mov
xor
adc
dec
mov
sbb
dec
push
push
jp
popa
test
add
gs
dec
inc
pop
loop
and
add
fidivrs
inc
daa
add
in
cmc
jo
sub
adc
mov
or
icebp
push
out
out
icebp
pop
push
scas
hlt
pop
and
mov
pusha
out
enter
imul
fmull
adc
xlat
xchg
push
iret
jle
lock
jge
addr16
mov
push
mov
loope
imull
push
push
mov
mov
xrstors
lods
repnz
mov
gs
sub
imul
or
pop
and
jne
popa
test
decb
popf
push
movlhps
jbe
sti
mov
jmp
les
in
dec
gs
into
mov
movsb
outsl
fidivrl
mov
movsb
sub
push
idivl
push
jae
sbb
cld
lds
cmp
sarl
stc
mov
xchg
lcall
pop
cmpsl
and
sub
inc
movsl
dec
cmpb
std
xchg
in
outsb
sub
add
inc
loope
sbb
das
sub
xlat
aaa
jecxz
rcll
sarb
sub
xor
xor
jp
or
mov
sub
adc
lret
jmp
movsb
inc
push
roll
xor
int
push
stc
xchg
arpl
sti
aas
dec
jle
movsl
pop
imul
cs
jnp
ds
ret
inc
and
push
popa
fidivs
adcb
push
xor
dec
xorb
in
pop
cltd
pop
jnp
sub
mov
cld
pop
mov
in
push
xor
pop
test
pop
call
mov
lret
mov
xchg
je
je
aaa
add
push
or
mov
mov
pop
lahf
or
cmpsl
sub
orl
fisubrs
dec
push
jg
pop
and
inc
test
test
jo
inc
xchg
into
xchg
push
loope
add
inc
aaa
test
fcomps
sbb
test
sub
jae
hlt
popa
in
or
lcall
xchg
push
lcall
test
push
xlat
sub
xor
jo
mov
inc
lods
sahf
out
cmp
outsb
fstl
adc
mov
ficompl
sbb
add
inc
mov
test
dec
lock
jne
lea
jb
push
roll
sub
loope
cmp
ret
xor
mov
xchg
stos
cmp
or
pop
xchg
addr16
pop
sub
cs
jecxz
fdivrp
mull
mov
ret
inc
sub
shll
add
in
sub
cld
adc
lods
stc
out
push
insl
add
push
or
shl
mov
imul
shr
dec
pushf
lock
mov
push
mov
cmp
fmull
cmc
test
int
inc
pop
pop
or
cmp
or
push
mov
mov
inc
inc
mov
xor
insb
and
lods
js
fcmovnbe
sarl
fsubp
dec
sti
scas
test
test
fbld
or
push
sub
push
mov
inc
xor
out
adc
lods
mov
mov
mov
push
pop
sub
lahf
mov
push
push
mov
arpl
fwait
sbb
leave
add
mov
xor
xor
or
enter
loopne
mov
adc
inc
lea
pushf
shlb
dec
clts
push
mov
mov
push
and
and
push
jle
into
dec
popa
dec
outsl
and
pushf
js
and
mov
loopne
into
daa
push
pop
ret
xchg
pop
scas
ffree
and
and
sbb
outsb
divl
jae
pop
fs
pop
scas
pop
and
mov
xor
cwtl
and
repnz
ret
into
pushf
pusha
out
jge
je
in
sbb
inc
rcll
clc
jnp
pop
sub
test
and
adc
aas
pusha
xlat
push
out
iret
pop
or
js
xor
test
mov
push
mov
mov
int
std
xchg
movsb
mov
sub
sti
ja
aaa
cli
jge
inc
jp
mov
aaa
aam
out
rclb
gs
ret
mov
ret
adc
mov
push
pop
lcall
mov
les
mov
cmc
cs
mov
inc
sub
cltd
ljmp
mov
dec
into
push
int3
sti
jnp
mov
xor
mov
push
push
in
pop
fstl
gs
xchg
cmpsl
std
lcall
in
cwtl
xor
ds
xchg
icebp
ficomps
mov
lock
xor
popf
cmp
pop
mov
mov
cld
and
adc
mov
faddl
sbb
xor
fsts
xlat
nop
cld
decl
ficoml
adc
test
add
pop
dec
hlt
add
lahf
hlt
fsubl
or
imul
dec
int3
adcb
mov
dec
mov
xchg
pop
xchg
test
jecxz
movsl
add
fidivl
sahf
mov
ja
subl
and
add
lea
mov
or
pop
inc
repnz
jno
inc
xchg
cmc
cld
add
jmp
sbb
pop
movsl
mov
clc
lock
inc
mov
cmp
push
out
push
pop
ds
icebp
push
xchg
insb
test
ljmp
sahf
mov
out
inc
jno
jge
add
pop
add
push
mov
repnz
push
mov
push
xchg
inc
hlt
sbb
cmp
pop
jg
loop
rol
pusha
addr16
js
shl
lods
xorl
in
push
mov
adcb
xchg
add
cli
iret
and
mov
aas
lret
imul
call
sub
sub
dec
inc
call
xor
dec
sarl
mov
jp
mov
addr16
addr16
xchg
sub
cli
sti
cltd
rcll
movsl
inc
js
dec
pop
add
cld
in
in
ret
into
hlt
jmp
push
dec
leave
pop
dec
mov
push
push
cmp
cmp
mov
stos
out
decl
iret
lret
mov
mov
lret
into
mov
xor
cmp
repnz
ret
add
xadd
movsl
jb
pop
test
xchg
fadds
bound
mov
push
rolb
mov
sub
outsb
sub
out
andb
sarl
int
test
dec
mov
inc
outsl
ret
or
pop
push
mov
sub
daa
mov
ficoms
gs
xor
in
fsubs
push
xchg
testl
pop
lods
rcrb
mov
test
xchg
adc
shll
lods
lds
sbb
aam
or
outsb
sub
stos
or
aas
loopne
push
mov
stos
shr
mov
jb
xchg
leave
fbstp
rol
dec
sbbb
jnp
mov
out
ficomps
aad
mov
mov
pop
inc
rorl
lahf
add
push
addr16
stos
sbb
jo
ss
out
mov
aas
mov
jno
add
scas
out
adc
cmp
popa
inc
xchg
xlat
xchg
sbb
shlw
xlat
pop
shlb
xor
cld
jns
cmp
pop
jmp
aad
mov
jge
loopne
jnp
jb
jnp
imul
xchg
xchg
xchg
insb
aaa
push
xor
pushf
inc
loopne
jns
je
mov
imul
lret
dec
cmc
call
pop
jno
ljmp
shll
lock
xrelease
mov
loopne
rorb
fcoms
into
xor
adc
std
mov
xchg
leave
mov
enter
imul
idivl
nop
insb
arpl
imul
pop
inc
push
repz
pop
mov
call
out
push
into
push
mov
dec
push
stos
push
testl
adc
loope
jg
aaa
jmp
loope
movl
test
jo
in
imul
push
jns
addr16
rorb
jns
fcomip
enter
push
dec
insb
dec
icebp
dec
roll
mov
das
pop
pop
lret
paddd
or
out
sub
popa
dec
pop
mov
pusha
adc
loope
rol
mov
xchg
pop
and
push
mov
stos
pop
add
repnz
les
pop
out
adc
loop
jae
sbb
enter
pop
lret
es
orb
rorb
push
imul
ret
xor
sub
les
imul
mov
dec
xchg
loope
pop
mov
imul
fwait
dec
pusha
aaa
or
loopne
mov
lret
loope
fdivs
call
sbbl
lds
daa
mov
int
push
gs
loope
jne
jae
je
or
inc
imul
repnz
leave
lock
mov
popf
or
loopne
and
jecxz
jo
in
leave
dec
cld
pop
stos
cmp
inc
mov
and
sbb
imul
ss
pop
repz
jae
stos
ja
fs
neg
loope
cmp
xchg
mov
loop
std
or
das
lahf
push
sub
pop
movsl
jg
subl
jl
movsl
das
and
and
loopne
cmpl
pop
sbb
pop
sbbb
mov
je
imul
gs
lret
or
mov
jmp
push
stc
sub
aad
rolb
loop
bound
cmp
lret
in
adc
sti
push
adc
insl
and
out
add
mov
inc
lcall
adc
pop
loope
push
stc
xor
insb
add
mov
add
stos
fidivrs
out
mov
mov
jecxz
sbb
cmc
push
and
jae
popa
xchg
hlt
jge
inc
lret
mov
or
jno
add
cli
sarl
sub
mov
cli
pop
sub
clc
mov
jmp
adc
into
xor
lods
adc
cmp
scas
mov
jmp
dec
push
jns
test
sbb
inc
mov
lcall
call
or
xchg
and
pop
and
test
cwtl
fdivl
fsts
lea
arpl
rorb
repnz
fstps
aaa
or
lock
cmp
stc
mov
xchg
pop
mov
divl
repnz
xchg
je
pop
pop
or
and
and
cwtl
push
negb
in
dec
and
and
bound
pop
outsl
pusha
ss
stos
mov
repnz
xor
std
or
push
les
inc
sbb
adc
sahf
inc
movaps
test
xchg
xchg
sbb
jbe
pop
lock
sub
mov
sti
dec
dec
push
and
sbb
movsb
fdivrl
xor
mov
mov
cmp
je
aas
call
sahf
aam
and
push
ror
jno
sbb
jp
push
orl
pop
mov
mov
inc
out
inc
push
add
icebp
sub
es
inc
cmp
mov
xor
out
cmp
cld
aad
mov
xor
loopne
mov
cli
addr16
jo
xor
js
stos
ds
cmpsb
repz
es
idivb
push
xchg
mov
jbe
lret
nop
pop
jns
sub
add
fmuls
lret
lea
xor
mov
fs
mov
cltd
call
dec
pop
stc
int3
push
sbb
fildll
add
mov
data16
fwait
push
std
mov
jns
testl
repz
shrb
inc
lret
jge
mov
addb
add
xchg
daa
das
adc
ret
dec
sbb
jo
or
sbb
fistl
cs
rorb
in
dec
push
inc
push
dec
fnstenv
jno
or
fsubrs
lock
push
pop
inc
mov
imul
cmp
pop
dec
mov
pushf
push
lcall
adc
adc
xchg
packsswb
out
fwait
inc
adc
daa
jnp
push
push
push
bound
add
sub
cmpsb
dec
daa
mov
mov
call
pop
push
add
outsl
push
lods
gs
cmp
pop
sbbl
and
pop
mov
mov
aad
pop
test
add
adc
cld
jne
pop
sar
xchg
push
lods
adc
enter
or
cld
aam
pop
addr16
test
sub
xchg
iret
inc
jns
into
out
push
les
gs
je
repz
pop
lds
mov
adcl
adc
ficoms
jae
adc
popa
punpckhbw
fwait
add
sub
data16
sub
nop
pusha
mov
paddusb
pop
or
mov
sbb
mov
mov
in
push
pop
cmpsb
ret
pop
arpl
int3
cltd
int
xor
jmp
lcall
insl
das
inc
add
inc
inc
fisttpl
inc
pop
add
inc
adc
xchg
jge
mov
scas
jle
fidivs
cli
sub
movsb
mov
insb
ja
nop
adc
in
sub
sub
add
jnp
das
stos
lahf
cmp
add
mov
xor
les
aad
scas
repz
daa
push
ss
jge
pop
test
enter
loop
jne
mov
pop
addr16
fcompl
jg
test
ss
je
ljmp
mov
pop
jmp
cld
sti
cmp
and
outsb
fs
faddl
shll
sbbl
mov
or
adc
ljmp
popa
jbe
insl
adc
mov
ja
mov
mov
mov
and
js
mov
mov
sub
sub
aam
in
je
mov
lcall
in
adc
push
add
adc
pop
enter
xor
leave
jg
sub
dec
cmc
add
jecxz
mov
scas
cli
mov
inc
inc
sbb
adc
dec
dec
pusha
aas
mov
xchg
mov
shrl
insb
fistl
xchg
inc
cmpl
out
mov
jae
sub
xor
outsl
inc
test
cmpsb
shlb
in
fldcw
stos
int
pop
and
shlb
stc
and
fcmove
jecxz
pop
xchg
in
js
mov
lods
or
push
cltd
mov
inc
add
sbb
fisubrl
sbb
sub
out
mov
mov
add
add
fisubrs
bound
ret
rorb
and
lret
addb
les
stos
pop
and
mov
out
mov
add
add
imul
or
dec
fnstenv
pop
xchg
movsl
jge
aam
cmpsb
or
mov
out
pop
push
fcomip
add
cwtl
and
mov
pop
mov
jecxz
notl
bound
pop
repnz
in
dec
pop
cmp
mov
xor
push
insl
cmp
popf
aad
shlb
add
scas
out
lea
ljmp
sub
pop
cmpsb
add
lahf
jle
movsl
loope
xlat
push
sbb
jg
sub
xchg
aaa
rclb
call
fcomps
loope
sbb
idivb
pop
lods
daa
adc
loope
out
je
scas
fst
icebp
and
orb
inc
push
frstor
pop
push
sub
dec
in
xchg
cli
sahf
jecxz
jne
iret
nop
int
aam
enter
shll
out
xor
mov
ljmp
insl
and
cmpsb
rcrb
aad
pop
push
repz
adc
sar
sub
out
icebp
pop
jne
lea
addr16
fdivrs
dec
outsb
pop
mov
lock
mov
push
int
subl
push
lods
push
repz
jns
cld
popa
push
popf
hlt
faddl
add
outsl
or
lods
mov
adc
repz
test
jg
ret
xchg
fisttpll
cmp
jno
sub
mov
pop
sbb
lret
stc
js
mov
insl
scas
fldenv
cmp
inc
pop
fucomi
les
and
inc
pop
xor
xchg
pop
cmp
fwait
int
adc
ja
shll
add
dec
cmp
pop
jle
cmp
add
xorl
push
pushf
in
push
gs
xorb
in
mov
mov
mov
mov
inc
cmpsb
mov
mov
sbb
dec
pusha
pop
add
loopne
insl
xchg
mov
fdivrs
fstp
push
ds
rolb
negb
push
das
add
or
loop
movb
push
add
push
icebp
idiv
gs
test
or
dec
xor
xchg
push
gs
pushf
mov
mov
jge
fcomip
mov
mov
std
inc
adc
cmc
insl
dec
xchg
movsl
xor
and
sbb
inc
adc
rolb
mov
and
js
loopne
ljmp
jge
xchg
sarl
ficoms
out
mov
pushf
jnp
adc
jg
and
out
jo
add
push
insl
in
push
inc
lahf
lods
push
xor
mov
repz
pop
pushf
push
mov
pop
inc
rcl
dec
sbb
inc
clc
dec
stos
push
test
push
shrl
rol
push
sub
mov
sbb
or
cmp
jecxz
mov
shr
adc
mov
pop
add
loope
mov
mov
xor
pop
xorb
push
sahf
test
sbb
xchg
adc
mov
xor
jne
aas
nop
push
outsb
jne
sbb
inc
pop
loop
out
push
clc
movsl
mov
repnz
and
adc
sbb
cli
xchg
adc
cmp
enter
xchg
into
bnd
fldt
jno
adc
push
sbb
cmp
mov
jle
jp
ss
cmc
repz
sub
sti
leave
push
xchg
insl
cmpsl
and
js
test
sbb
fs
sarb
movsb
jo
lahf
mov
insb
lock
ret
dec
mov
insl
popa
out
jbe
imul
std
stos
mov
and
xor
or
std
inc
push
mov
inc
aas
adc
ja
cld
ds
dec
fwait
mov
scas
dec
in
or
xchg
scas
mov
popf
push
cltd
mov
fstpt
and
out
pop
stos
fisubs
push
inc
in
dec
jge
mov
mov
lahf
inc
filds
add
add
bnd
inc
add
adc
lcall
test
or
pusha
test
adc
pop
push
arpl
ror
rcl
cmp
movsb
fst
aas
mov
shl
movsb
xchg
outsb
dec
jmp
data16
xor
cmp
adc
leave
xchg
mov
testl
jbe
cmp
adc
xchg
and
push
and
mov
daa
push
mov
aas
fstp
sahf
testl
repnz
daa
mov
pop
jge
mov
insb
cmpl
loop
mov
shlb
pop
das
testb
ret
in
mov
not
out
jmp
lfs
and
xor
xor
sub
ret
mov
xchg
cmpsb
inc
shrl
loope
data16
sbb
add
rclb
nop
mov
xchg
or
jb
or
lahf
push
pop
shll
into
push
orb
cs
sbb
daa
imul
test
pop
mov
jbe
loope
add
mov
jmp
adc
fsubl
repnz
mov
sub
mov
insl
jl
adc
add
je
jb
pop
jge
inc
sbb
imul
and
push
xchg
aam
mov
test
add
aaa
inc
pop
jecxz
xchg
xchg
rorl
fwait
push
cmp
sbb
mov
pop
push
imul
mov
adc
fisttps
in
cmp
adc
stc
repnz
decb
int
lahf
hlt
sbb
popf
sbb
sbb
insb
jae
pushf
add
adc
ret
xchg
insb
sbb
sbb
lea
and
xchg
out
xlat
push
cmp
sahf
gs
add
aad
ffreep
cwtl
lret
pop
dec
adc
push
add
in
mov
xchg
enter
pop
nop
test
or
jl
mov
rcr
cwtl
dec
pop
idivl
sbb
jo
gs
ja
popf
mov
jl,pn
xchg
cmp
fiadds
cmp
lret
mov
int
fnstsw
dec
shl
rorl
ss
inc
sbb
enter
jno
jbe
adc
or
adc
sbb
lock
cmpb
daa
adcl
jo
xor
mov
mov
xchg
icebp
jp
stos
ret
rorl
mov
addl
fisubs
jb
loope
push
insb
fcmovbe
pop
mov
das
push
loope
push
shrb
xor
sbb
arpl
decb
ljmp
icebp
jg
sub
lret
ljmpw
push
fsub
incl
xor
fbld
mov
icebp
jmp
andb
outsl
insl
push
outsl
jl
inc
imul
add
sub
cmp
std
push
sbb
cmp
and
push
or
data16
bound
jmp
push
movsl
dec
inc
inc
pop
xor
jb
popf
adc
clc
mov
push
sub
shrb
fstpl
es
andl
adc
push
dec
enter
xor
fcompl
out
mov
aad
sub
lods
or
int
js
out
jne
ljmp
movl
in
sbb
pop
in
rcrl
inc
in
or
xor
dec
repnz
adc
sbb
shll
out
repz
hlt
stos
repz
mov
divl
sub
inc
hlt
xor
dec
lahf
sbb
les
mov
fwait
enter
push
push
sub
repz
sub
and
sahf
movsb
sbb
clc
ret
sbbl
test
repz
pop
popa
leave
xchg
cmpsb
mov
in
inc
and
xchg
cld
jle
sarl
cmp
test
inc
mov
and
fs
mov
mov
aam
add
shrb
sub
sub
and
jmp
nop
out
lahf
pop
dec
and
jle
adc
mov
add
out
mov
lret
ret
lds
je
loop
mov
loopne
andl
cmp
stc
in
iret
rcr
loopne
xchg
repz
fadds
mov
jl
call
mov
insl
imull
and
dec
pop
sub
repz
mov
mov
inc
push
hlt
shll
or
xor
test
pop
mov
data16
mov
sarb
inc
pop
pop
jne
fistpl
in
add
mov
jne
and
sub
push
xchg
xor
mov
and
sti
in
push
jno
mov
cli
push
sbb
add
dec
js
mov
jb
push
adc
pop
pushf
push
pop
mov
fsubrl
out
inc
inc
mov
inc
leave
jecxz
test
sub
dec
and
pop
fidivrl
mov
inc
jle
movb
je
mov
adcb
push
fiaddl
scas
or
mov
shlb
add
inc
push
out
cli
or
test
lcall
inc
jns
add
mov
adc
xor
fwait
imul
lea
scas
mov
xor
or
sub
sub
cmp
sub
ss
shrl
fsubrl
push
mov
outsl
arpl
jg
cwtl
imul
xor
cmpsb
inc
scas
cli
out
push
adc
push
cmpsl
mov
ds
pop
jle
popa
call
pop
sub
fs
lds
data16
sub
or
cltd
sub
lret
dec
jns
push
and
sbb
rorl
dec
xchg
inc
xor
adc
push
pusha
data16
sbb
sub
mov
add
add
mov
cs
mov
repnz
fdivs
movsb
jl
cli
and
das
jns
jmp
mov
rorl
notl
adc
idivb
outsl
jns
loopne
fstps
push
lcall
lea
mov
mov
fdiv
cmc
xorb
xchg
mov
jp
ljmp
scas
loopne
std
mov
or
aam
pop
out
sbb
mov
or
cmp
sub
ja
pusha
sub
lods
in
loopne
jo
cmp
ficoms
or
loope
lock
mov
cltd
mov
adc
push
mov
mov
xor
xchg
pop
mov
and
inc
lret
addr16
push
xchg
push
xchg
sbb
jne
push
sbb
xchg
fstpl
pop
loop
in
pop
mov
mov
xchg
ja
lcall
ret
push
cmp
out
inc
sahf
mov
pusha
arpl
push
sbb
wrmsr
sbb
or
jo
lret
out
stos
scas
pop
aad
mov
sarb
inc
call
or
cmp
pop
rcll
or
lods
push
fdivrs
fdivrl
cli
rcll
mov
sub
push
pop
cmpsl
cmp
cmp
nop
fs
cs
mov
cmp
jg
push
pop
lds
sub
cmpsl
cmp
stos
mov
scas
add
xchg
lods
testb
out
sbb
imul
outsl
xchg
sbb
stos
push
js
test
or
iret
fwait
jge
in
sub
push
icebp
push
insb
sbb
shrb
shlb
popa
scas
fwait
outsl
jne
loop
add
movsl
hlt
scas
iret
adc
pop
lds
fisttpll
xor
cmpsb
pop
cltd
sub
inc
dec
push
jp
das
in
jo
fwait
cmpsl
add
ficompl
lock
test
push
xchg
inc
lds
je
or
fnstsw
mov
mov
cmp
sti
and
mov
sub
mov
int3
leave
sar
pop
aaa
xchg
mov
iret
loope
xor
inc
nop
clc
nop
andb
test
mov
enter
sahf
fnstenv
scas
ret
insl
sbb
ds
and
les
jae
and
sahf
push
mov
orl
pop
fsubs
mov
sbb
movsb
dec
dec
add
sbb
sub
sub
xor
mov
add
adc
cmpsb
push
add
push
xchg
stc
idivl
je
jns
js
fistps
aad
aam
xor
loopne
insl
arpl
aaa
addb
cmp
mov
mov
or
mov
loopne
and
imul
sbb
out
sbb
lea
test
pushf
jae
lahf
sahf
sub
lret
dec
dec
fadds
adc
inc
in
shll
xlat
aam
cmpsb
push
or
test
push
adc
aaa
mov
jecxz
pusha
jecxz
mov
sbbl
or
test
lods
pop
mov
std
ss
lret
in
js,pn
add
enter
lcall
out
jne
lcall
lods
lds
in
sub
lea
xchg
push
inc
jns
add
pop
jmp
mov
das
mov
hlt
in
xchg
cli
fldl
mov
in
dec
mov
es
and
scas
push
cmp
adc
add
ljmp
push
rcll
pop
test
es
daa
loopne
lret
mov
mov
fs
jge
dec
mov
cmp
outsb
ficoms
mov
cmp
fsubr
cmp
testb
jle
cmp
lds
das
sub
daa
push
xlat
or
cmp
bound
orl
loope
mov
inc
bound
push
xor
mov
and
fadds
or
int
lahf
mov
inc
into
xchg
popf
push
loop
loop
sub
rolb
out
in
sbb
and
add
cli
pop
mov
test
mov
loope
pop
ljmp
je
mulb
mov
sarl
je
mov
fs
adc
ss
loope
popa
adc
js
cltd
adc
aaa
ficomps
and
mov
lock
push
mov
push
xlat
mov
mov
adc
sbb
popa
out
cmp
mov
pusha
imul
jl
xor
push
rorl
xchg
movsb
loope
loopne
mov
xchg
hlt
iret
sub
mov
lea
jp
adc
fiadds
shlb
imul
outsb
dec
jp
sbb
mov
lods
jge
aaa
lods
xor
or
je
pop
ret
mov
sbb
rolb
lock
xorl
jo
cltd
je
mov
shrb
mov
push
adc
sub
sub
popf
loope
inc
lahf
cmp
or
repz
jne
mov
pop
icebp
jl
jns
jl
jecxz
push
loopne
call
cld
mov
lods
lds
mov
inc
sub
les
mov
push
sbb
roll
lahf
inc
repnz
xchg
inc
fwait
int3
mov
sub
adcl
js
inc
fistpl
inc
push
adc
fcompl
xchg
mov
mov
pop
aaa
sahf
lret
mov
pop
testb
scas
test
aad
xchg
test
jnp
scas
pop
bts
scas
mov
in
jbe
sub
push
sbb
mov
jl
mov
mov
cmc
lods
lods
ja
xor
loop
ret
or
mov
sahf
aaa
ret
daa
imul
push
subb
pop
mov
rcrb
push
outsb
addr16
dec
sub
sbbl
addb
xchg
jne
fwait
push
sub
inc
ja
addr16
aad
push
insb
into
jno
push
sbb
add
lret
ss
dec
jge
outsl
mov
pop
dec
ficomps
test
and
push
in
and
adc
mov
push
lods
sub
mov
push
jmp
shlb
or
jl
negl
leave
pusha
add
push
insb
out
out
in
add
icebp
testb
inc
out
add
pop
add
filds
inc
fcompl
ljmp
pop
pop
pop
inc
push
mov
das
xor
nop
inc
inc
sbb
out
cmp
iret
stc
movsl
inc
pusha
ror
iret
add
loopne
mov
mov
sbb
inc
ss
in
pop
pop
pusha
shll
pop
mov
sub
neg
outsb
andb
shlb
js
adc
lea
outsb
icebp
ja
or
or
enter
stc
jecxz
leave
and
jo
xor
xchg
jmp
ret
loop
pop
int3
dec
rol
sub
add
add
fcomi
gs
and
inc
xchg
jle
push
sbb
sub
popf
mov
push
cmp
testb
pusha
dec
loopne
clc
cmp
xchg
popa
or
pop
add
mov
lea
sbb
sbb
push
jnp
dec
xor
cmp
xor
setge
lret
lret
imul
inc
mov
imul
adc
es
es
lcall
push
push
loope
mull
mov
jo
int
xchg
and
cmp
push
pop
scas
imul
or
rol
fs
loop
repnz
dec
sbb
ss
mov
adc
addl
dec
roll
pusha
push
scas
andb
mov
divb
sbb
rorb
sub
test
pop
dec
aaa
dec
das
mov
pop
rcrb
or
fsubr
xchg
ss
pop
add
pop
bnd
jne
adc
cmp
lds
shrb
mov
sub
add
ret
in
jg
adc
add
xchg
nop
insb
sbb
jecxz
divw
jb
icebp
push
mov
sub
ret
icebp
out
adc
out
sti
sti
nop
mov
sub
jae
jp
repz
inc
push
mov
lret
call
and
mov
mov
call
lock
mov
lea
mov
imul
int
pop
mov
mov
jl
inc
mov
ds
jnp
mov
and
mov
push
and
aaa
sub
xor
inc
push
push
and
push
push
dec
insl
inc
cltd
les
repz
xchg
push
xchg
ficompl
out
lret
or
and
cld
rcll
and
pop
mov
test
sub
int
cmpsl
test
dec
movsl
sti
je
jle
pop
xor
mov
inc
addr16
hlt
lret
and
jmp
dec
iret
push
dec
into
adc
mov
push
imul
jno
loop
call
add
ret
out
stos
push
pop
es
adc
inc
jnp
or
sbb
fistpl
jne
mov
pop
jne
cmp
dec
fisubs
repz
push
jmp
sti
ret
insb
clc
cmp
inc
enter
mov
je
mov
adc
xlat
add
or
mov
movsb
lods
test
rcrb
test
enter
loope
cmp
pop
lret
test
jmp
xchg
push
dec
mov
stos
adc
les
push
sbb
mov
push
leave
fwait
out
jg
push
mov
mov
cwtl
std
jl
jge
xorb
decl
or
mov
popf
les
test
in
imul
push
iret
mov
or
mov
mov
imul
mov
or
or
call
pop
and
push
push
xchg
mov
hlt
jne
out
ss
daa
push
inc
hlt
xchg
sub
outsb
sub
sub
dec
rcrb
jns
bound
mov
mov
loopne
loop
jno
xchg
sbb
mov
movsb
mov
push
adc
lock
xor
sub
and
pop
xchg
jmp
ret
xchg
lods
push
shl
and
pop
loop
mov
adc
cmpsb
cmpsl
into
cmp
push
xchg
sub
mov
out
xor
rolb
xchg
lds
jmp
jbe
push
mov
push
loopne
imul
mov
jbe
cmp
push
pop
or
jmp
xor
stos
mov
mov
adc
sub
loop
je
imul
fcom
in
xor
outsb
push
mov
push
xchg
add
inc
loop
xor
ret
sub
dec
xchg
clc
hlt
add
pop
sbb
gs
incb
pop
cmp
addb
call
cld
adc
sub
xchg
sbb
sti
ds
rclb
outsb
into
imul
and
pop
mov
mov
fsubs
test
and
mull
pop
ss
mov
or
or
scas
adc
xor
pop
loop
or
mov
cmp
adc
adc
lock
inc
out
cmp
rorl
repz
pop
js
add
push
divb
mov
jo
mov
cmpsb
dec
cmp
pop
enter
pop
imul
stc
or
popa
and
or
jnp
shll
mov
int
rorl
orl
gs
mov
clc
jle
lret
bound
iret
into
push
sahf
xchg
loope
je
xor
addl
cmp
jl
mov
push
test
bound
pop
sub
xor
divb
repz
cmp
cs
js
push
cwtl
stos
pop
and
push
sub
std
pop
pop
cli
mov
push
mov
shlb
int3
dec
inc
mov
push
loop
imul
test
xchg
inc
in
xchg
hlt
cld
xchg
mov
test
xchg
dec
sarb
outsl
jns
int
es
cmpb
imul
fmull
and
fists
jb
andb
cli
rcll
inc
scas
sbb
xor
sbb
cmp
data16
mov
sub
mov
and
inc
addr16
idivb
loopne
mov
out
mov
out
push
out
aad
mov
xlat
sub
xchg
inc
mov
inc
inc
movsl
es
mov
cmp
and
sbb
ret
gs
test
insl
out
mov
stos
mov
pusha
arpl
jbe
cmp
cli
fbstp
mov
mov
lods
loopne
in
rcrl
push
push
push
inc
sub
cmp
cmc
lock
mov
adc
lret
dec
cmp
clc
lds
aas
mov
popa
push
lret
add
lods
imul
and
adc
loopne
leave
daa
out
push
cld
in
rolb
pop
jb
xor
shlb
and
lret
mov
rcll
xchg
int
sub
add
in
cld
push
cmp
imul
xor
fadd
push
xchg
fildll
xchg
xor
mov
jg
popl
cmpsl
mov
push
mov
fildl
call
enter
lods
and
out
pushf
mov
sub
mov
pop
mov
call
out
pusha
imul
mov
sbb
and
cmpsb
gs
imul
and
add
lahf
sbb
outsl
mov
adc
cmp
mov
mov
leave
xor
shll
sub
lahf
xchg
data16
out
imul
mov
xor
add
push
dec
daa
mov
cmc
sub
loope
mov
mov
pop
aad
xchg
mov
shlb
xchg
and
outsl
rcl
sbb
mov
leave
xchg
xchg
xor
cmc
push
lret
pop
test
fld
imul
fs
dec
ss
cmp
mov
lods
and
rolb
dec
or
fidivrl
push
aam
pop
xor
adc
pusha
mov
sbb
sbb
ficomps
jle
pop
sub
lods
movsb
enter
movsl
jp
lea
aam
sub
cmp
mov
push
mov
aad
mov
mov
out
movsl
cmpsb
scas
call
cs
fisubl
adcl
test
call
pop
fwait
or
insb
adc
in
jns
std
dec
mov
add
ja,pt
out
icebp
jno
ret
aad
pop
cmc
mov
push
decb
xchg
addl
mov
outsb
roll
sub
pop
push
ss
sub
cmp
dec
insl
data16
das
pop
insb
clc
into
jno
in
sahf
or
shrb
and
call
sub
inc
into
add
sub
sub
jbe
jecxz
inc
inc
rcll
int
pop
ljmp
jp
and
arpl
das
mov
leave
jb
fxch
aad
pusha
mov
xchg
xchg
pop
or
push
cmpsl
adc
adc
jo
gs
fdivs
sub
mov
jge
mov
add
in
dec
mov
add
push
pop
sahf
imul
mov
and
stc
dec
rol
add
icebp
mov
mull
iret
sbb
scas
stos
push
into
dec
mov
in
in
ss
inc
inc
sub
dec
mov
fcomps
sub
sbb
push
dec
xor
push
lahf
jno
loope
cmp
sbb
fstl
xor
push
shl
jge
mov
add
movsb
or
mov
lods
jb
jns
add
mov
loop
mov
jno
push
sub
mov
push
cmpsb
push
xor
shl
lds
push
mov
push
jg
test
dec
cmc
push
push
mov
pop
aas
inc
mov
sbb
and
xor
ja
test
nop
mov
cmpsl
xchg
push
xchg
out
xchg
fistpl
dec
jg
cltd
cwtl
popf
enter
jae
cmp
inc
imul
nop
push
dec
lret
out
clc
push
in
adc
f2xm1
cmc
mov
adc
and
rorb
xchg
icebp
push
add
mov
sub
loope
hlt
xchg
repz
scas
adc
outsb
ss
sbb
or
gs
in
mov
cmp
pop
cmp
sbb
add
pop
sti
cltd
pop
xlat
fs
ja
dec
cmp
ret
or
xchg
jno
loope
jb
movb
jbe
icebp
cbtw
xchg
jbe
inc
pushf
mov
inc
aaa
sarb
int3
cmp
or
ds
fnstsw
pop
sub
test
outsl
popa
cmc
mov
cmp
xor
lcall
mov
cmpsb
mov
cmp
gs
ret
icebp
add
push
mov
and
das
mov
les
jae
mov
loope
or
lea
jecxz
in
sbb
adc
xchg
cmp
cmpsb
iret
aas
call
ljmp
inc
or
mov
xor
loop
outsb
test
ret
repz
das
inc
push
adc
repnz
mov
out
repnz
ret
mov
icebp
vsqrtsd
fwait
aaa
lds
push
rcrl
or
fwait
test
jns
jo
pop
pop
add
mov
imul
mov
stos
and
shr
sarl
pop
pusha
je
jp
mov
add
sub
add
jmp
xor
push
fimull
subl
loope
push
outsl
lahf
shr
psllw
add
test
int
xor
icebp
xlat
or
jp
rcrl
push
aaa
adc
cmpsb
add
add
xor
cwtl
mov
push
xor
and
cmp
ja
push
test
out
mov
gs
or
mov
or
ljmp
push
sbb
fs
rorb
in
jmp
aas
leave
or
leave
imul
sub
in
in
pop
clc
or
add
lds
in
jbe
jnp
es
ja
das
arpl
add
enter
out
jo
add
cmp
imul
push
cmp
aad
scas
push
xor
dec
lock
aad
sbb
idivl
pop
xorb
int3
or
int3
repz
nop
ja
cmp
fbstp
inc
rorb
pop
andl
sbb
pop
nop
inc
jmp
inc
rorb
mov
std
inc
filds
or
inc
jmp
clc
in
pop
outsb
inc
jg
leave
jge
enter
sub
mov
cmp
mov
xlat
push
mov
je
popf
cmp
jo
jmp
mov
push
and
cmpb
cli
jns
or
roll
pop
and
test
rclb
jle
ljmp
mov
stos
pop
stos
mov
flds
adcl
cmp
out
sbb
lds
push
sub
push
movsb
rclb
pop
mov
cmp
xlat
jge
xor
ror
cmp
adc
or
dec
cmc
pop
xor
jnp
jmp
cli
push
and
in
imul
pop
lret
fs
jbe
js
mov
rol
shl
push
cmp
lds
push
lds
and
int
leave
leave
arpl
aam
je
fstpt
jns
divl
iret
jle
mov
jae
jmp
or
jle
sbb
stc
ret
jo
mov
cmp
in
call
cwtl
das
mov
pop
sub
aaa
clc
add
mov
pop
std
cmpsl
jmp
movsb
add
add
jle
adc
fwait
cli
dec
aad
mov
sub
ss
cmpsl
push
iret
scas
cltd
cld
jge
loopne
sub
inc
xor
test
in
cmp
stos
out
add
leave
mov
adc
dec
loop
pop
adc
stos
shlb
mov
decb
dec
mov
dec
gs
aam
negl
add
daa
repz
rol
mov
inc
cmpsl
and
pop
xchg
repz
fcmovu
xor
push
xor
adc
std
jg
repz
push
xchg
sbb
adc
adc
mov
jge
push
nop
adc
cld
mov
lahf
insl
pop
sbb
std
xor
dec
insb
outsb
mov
loop
push
lds
iret
inc
lea
jo
mov
push
and
fwait
pop
fisubs
and
and
lods
adcl
je
pop
sbb
rcrb
icebp
in
jl
loope
pushf
inc
xor
adc
xchg
aam
popa
faddp
inc
mov
fistpll
xchg
xor
fs
pusha
sub
pop
add
mov
mov
jecxz
lock
mov
dec
aam
test
cmp
xchg
movsl
ficoms
xor
jbe
ss
dec
xlat
push
add
popa
lds
xlat
rcll
and
push
xor
xor
jne
push
rcrl
xchg
loopne
jae
mov
pop
mov
xor
cmp
mov
test
nop
pop
push
mov
js
stc
shll
pop
inc
mov
cmp
repz
repnz
cmp
sub
add
sti
cmp
jb
stos
push
xor
and
addr16
mov
push
stos
mov
mov
mov
ja
es
inc
movsb
dec
mov
mov
lock
mov
insb
pop
or
scas
push
addr16
mov
in
notl
aad
xchg
push
sub
mov
mov
popf
xor
mov
hlt
test
xchg
mov
xlat
sub
cmp
dec
les
sti
inc
popf
sbb
dec
add
inc
mov
dec
iret
stos
cmovnp
lods
lret
cs
stos
nop
and
inc
int3
fwait
add
fs
jae
xor
out
adc
inc
dec
shlb
or
inc
neg
xchg
fstpt
in
mov
and
pop
pop
mov
jmp
rep
jne
push
out
sarl
test
int
mov
cmc
xchg
xor
xchg
test
adc
std
subl
or
movl
mov
inc
xor
mov
idivb
pop
and
push
cmp
out
push
or
lea
frstor
outsl
ljmp
int
in
addr16
in
jb
imul
lret
xchg
jecxz
pop
sbb
xchg
xchg
adc
rol
fidivl
pop
push
add
arpl
sub
out
jg
jno
push
push
add
sub
push
and
loopne
mov
out
mov
or
insb
push
pop
sub
iret
sti
ja
mov
sbb
mov
stc
rolb
loope
scas
ret
sar
push
movsl
mov
jne
or
dec
add
inc
pop
xor
daa
sbb
aad
out
cmpsl
loopne
lods
pop
fnsave
cmpl
imul
mov
push
lret
ret
insl
outsb
notl
shll
xor
adc
cld
dec
les
push
jbe
jle
dec
and
cmp
imul
jle
sarl
fs
out
and
push
enter
bound
fwait
test
mov
add
mov
jae
sub
jnp
fisttpll
sbb
mov
xor
movsb
adc
mov
xchg
add
nop
lcall
push
in
mov
and
arpl
les
stos
aas
in
mov
dec
flds
lea
aas
aas
adc
mov
aam
movsb
sbb
add
lock
add
inc
push
loopne
jns
mov
jg
ja
js
imul
repnz
int
jne
mov
mov
shlb
mov
sbb
dec
in
popa
scas
movsb
xor
rcll
push
mov
and
pop
and
lret
adc
push
fwait
add
ret
sub
jp
call
push
add
jo
scas
cmpsl
js
or
mov
out
lds
mov
pop
insb
pop
cltd
repnz
xchg
cmp
mov
jbe
pusha
das
xchg
dec
jmp
and
xchg
mov
mov
xchg
add
hlt
adc
test
sahf
arpl
sbb
lods
adc
pop
shr
out
push
out
inc
sahf
dec
xor
or
imul
push
sbb
dec
pop
jl
mov
pop
fisubrl
sbb
xchg
cltd
mov
aam
arpl
dec
and
es
negb
and
aas
sub
xchg
das
jmp
jecxz
lods
pop
out
push
mov
xchg
mov
push
jae
ja
lods
hlt
rorb
hlt
or
jge
sbbb
sbb
push
fcmove
sbb
mov
iret
cmc
jnp
ficoms
ja
or
cli
pop
sub
push
pusha
push
mov
cltd
std
in
fs
sbb
bound
add
or
sahf
lret
sbb
xorb
aaa
jnp
mov
xorb
pop
inc
cmp
push
aas
lret
mov
mov
jbe
sbb
pop
leave
sbb
jecxz,pn
jo
push
negl
fistpl
pop
cmpsb
cmc
cmp
or
popa
je
cmp
mov
pop
out
cmp
pushf
dec
ljmp
das
scas
std
stos
jo
incl
push
test
jbe
pushf
add
clc
cmpsb
sub
and
push
xchg
push
inc
aad
jb
jmp
pop
sbb
or
out
mov
div
out
cmp
test
fwait
call
adc
test
mov
adc
adc
mov
jmp
cmpsb
out
and
les
int
sub
xchg
shll
fdivl
sahf
mov
sub
clc
aaa
push
cwtl
aam
lea
dec
mov
push
inc
dec
cmp
pop
mov
sbb
scas
fstl
clc
or
xchg
repz
mov
pop
rcll
dec
mov
sub
insb
outsb
mov
daa
imul
pop
inc
xor
cmpl
xchg
into
imul
cmp
fwait
cmp
mov
outsl
mov
loopne
cwtl
or
cmp
jne
je
pop
xor
push
sbb
pop
xchg
into
ds
shll
jns
jl
sub
std
lahf
fnstsw
xchg
call
sub
pop
dec
lret
gs
xchg
cltd
cmp
cli
cmpsl
push
ficomps
jecxz
mov
rcl
loop
arpl
sbb
pop
imul
xchg
lret
loop
fistpll
push
fstps
mov
xchg
inc
pop
mov
pop
les
lahf
xor
repz
add
addr16
xchg
cmc
or
jle
sub
cmp
les
adc
dec
sub
js
lock
jo
es
leave
popf
aad
loope
dec
pop
and
xchg
call
mov
push
out
outsl
jae
shlb
jp
mov
jbe
fnstenv
xlat
fucom
sarb
cld
out
stos
in
iret
xchg
cwtl
add
push
frstor
cmp
sbb
xchg
and
mov
jno
mov
rcrl
enter
mov
insl
jno
mov
test
rcr
adc
adc
dec
call
jns
mov
mov
arpl
dec
fs
sbb
mov
adc
rcl
movsl
or
mov
call
int
jl
repz
jnp
das
add
add
jbe
push
sbb
pop
xor
ret
orb
xor
mov
add
scas
lret
add
in
popf
repz
fsubl
jg
imul
rolb
imul
xchg
int
mov
xchg
ret
testl
push
pop
add
in
or
stc
cmp
add
lods
into
or
test
cld
mov
sub
test
xchg
pop
daa
scas
cmc
add
roll
lret
in
push
int3
outsl
jecxz
cmp
arpl
ljmp
jg
mov
dec
popf
mov
mov
push
sub
xchg
outsl
sub
cltd
outsb
mov
lcall
jge
je
jbe
sub
movsl
out
adc
jb
jecxz
scas
cmpsb
jecxz
and
iret
sbbl
xor
mov
xchg
stc
push
adc
add
dec
dec
in
in
ficoms
inc
mov
sarb
and
jp
adc
xchg
dec
ja
mov
mov
xchg
push
ret
mov
cmp
sub
mov
movsl
inc
into
mov
loope
lahf
and
jnp
ds
out
cld
inc
pusha
loop
fs
add
hlt
ds
jl
push
mov
cmp
cmc
pop
subb
and
repz
mov
inc
mov
fildll
push
add
push
ds
lds
sbb
sub
clc
psubd
popa
rcl
daa
insl
adc
aas
sub
and
lcall
mov
lea
cld
mov
sub
cld
sub
cmp
or
mov
sub
fldl
add
push
mov
outsl
test
cli
push
lds
fsubs
and
out
cmpsl
icebp
hlt
sahf
fsubl
stos
cmpsl
sub
mov
faddl
imull
addb
std
sbb
mov
adc
cmp
rcrb
jl
adc
dec
iret
jns
mov
mov
mov
adc
aad
insb
movsl
cmc
ljmp
mov
inc
bound
and
mov
pop
repnz
enter
pop
push
ror
mov
int3
call
aaa
or
sbb
mov
push
xchg
mov
add
fistps
sbb
jo
in
cmpsb
aas
mov
iret
xchg
in
sbb
pop
outsl
inc
jg
jno
scas
clc
ja
cli
aam
mull
push
mov
pop
insl
inc
stc
les
ljmp
lea
sbb
pop
xor
adc
push
outsl
mov
out
jbe
loop
cmp
lret
pop
cld
lods
cltd
add
jne
pop
loope
lea
inc
pop
insb
adc
xchg
mull
addl
adc
call
jb
xchg
ja
aad
rcr
pop
and
aad
dec
add
dec
pop
aad
in
inc
adc
and
rclb
rcl
insl
jbe
push
cmp
shlb
cld
adc
cmp
adc
cli
add
sub
inc
pop
lret
sbb
jmp
pop
cmp
and
push
insl
fsubrl
js
xchg
out
add
sti
pinsrw
outsl
dec
xchg
xor
pop
mov
stos
dec
cli
ja
fimull
call
mov
sub
es
cmp
sahf
aas
in
inc
mov
xor
xor
adc
and
adc
je
loopne
movsb
repnz
inc
xor
cmpsb
in
sbb
inc
pushf
pop
repnz
test
dec
fwait
push
in
out
es
fcoml
xchg
dec
cmp
rcrb
xchg
out
cltd
xor
and
adc
cli
or
push
fwait
rcrb
xchg
fdivrl
add
rorb
pop
dec
jne
fs
popl
pushl
jns
sbb
jl
loope
mov
fstp
fstpt
sub
ret
cmp
lcall
mov
or
mov
fisubrs
pop
ja
hlt
dec
mov
push
cmpsb
ds
cmp
lds
sbb
inc
shlb
mov
push
jp
pop
les
scas
xchg
mov
xchg
inc
jns
jmp
sbb
inc
mov
movsb
sbb
xor
shlb
rorb
push
sbb
jecxz
push
and
push
inc
js
in
mov
sahf
sbb
int
push
je
out
testl
adc
cmp
push
jmp
shlb
adc
mov
sbb
leave
adc
cmp
pop
and
mov
mul
adc
pop
or
sub
xchg
pop
ja
dec
pop
xor
mov
pop
push
inc
cld
aad
jae
dec
sbb
sbb
test
hlt
xchg
out
fs
inc
mov
cmc
pop
cs
mov
aam
aam
xchg
test
loop
subb
push
adc
adc
mov
jb
icebp
inc
pop
cmp
and
sub
jns
inc
pop
xlat
test
dec
out
mov
xlat
mov
mov
push
shlb
push
inc
mov
lret
gs
inc
adc
mov
sbb
xchg
flds
inc
or
mov
aas
jp
jmp
mov
shrb
shlb
or
mov
daa
inc
mov
mov
mov
and
inc
adc
cmpsl
and
aas
ja
lcall
sub
enter
insb
ficoml
add
jecxz
cld
stc
mov
dec
cmpsl
insl
sbb
xchg
mov
shr
inc
inc
add
inc
inc
arpl
popa
xor
into
push
test
orl
inc
faddl
adc
cmp
pop
dec
aas
lods
call
scas
xchg
jl
xchg
mov
shlb
iret
mov
sbb
mov
out
loope
mov
test
jl
clc
push
repz
xor
mov
push
add
and
add
xor
inc
or
loop
push
es
imul
xor
invd
pop
mov
int3
jmp
negb
xor
xchg
xor
lret
and
sahf
adc
nop
out
ss
add
repz
addl
jle
bound
add
aam
mov
pop
test
dec
loop
add
and
fs
pop
cs
lods
ret
cli
scas
mov
adc
sbb
inc
push
idivl
adc
add
in
mov
fidivrl
loope
mov
push
leave
mov
mov
add
aaa
lahf
jns
es
xor
mov
mov
mov
add
cmp
inc
inc
fcmovnb
adc
mov
sti
js
pop
fs
fists
xchg
or
cmp
push
mov
test
lahf
aam
sbb
les
dec
mov
fs
or
mov
icebp
or
jno
cmp
fstl
mov
fbld
push
lahf
inc
fld
rorb
sti
pop
adc
dec
roll
ficompl
cmp
inc
fwait
adc
inc
mov
test
dec
lcall
lock
mov
outsl
fstps
mov
ret
mov
adc
adc
popf
or
xor
adc
mov
loopne
shr
loope
push
add
jmp
out
mov
jae
mov
fsubl
push
cli
daa
jbe
les
out
mov
xchg
dec
adc
adc
fldl
inc
pop
fnsave
add
cmpsb
inc
xchg
movl
mov
sarb
push
and
cli
push
mov
lahf
adc
aaa
movsl
jle
jl
rorl
inc
inc
cmpsl
dec
jl
mov
mov
jno
notb
stos
push
and
cmp
inc
cmpsb
stc
add
sbb
jns
dec
repnz
cmc
jl
movsl
xor
cmpsb
dec
inc
mov
and
add
scas
xor
mov
push
fmuls
je
xchg
sub
in
pop
imul
sub
mov
lds
inc
adc
xchg
or
scas
pop
cmpsl
inc
sbb
in
adc
stc
dec
xor
mov
cmovle
cmpsl
push
jns
pusha
adc
or
bound
test
repz
mov
push
cmpsb
les
add
icebp
pop
cmpl
sti
xchg
and
push
and
dec
call
xor
xor
jle
nop
shrb
lret
add
mov
inc
xor
insl
sahf
stos
je
clc
cld
insb
fcompl
dec
jg
aam
ljmp
loopne
xor
dec
dec
pop
xor
gs
xchg
imul
mov
cmp
ja
test
outsb
add
repnz
xchg
sbbl
aas
or
test
push
repz
insl
lret
rorl
jmp
js
mov
fstpl
pop
dec
inc
nop
into
jge
outsb
sub
jg
or
popa
sbb
sbb
es
xor
int3
shrb
xor
mov
je
jp
pusha
mov
addr16
lret
outsl
adcl
pop
rorl
insl
mov
out
pop
mov
popf
mov
jbe
test
cld
jns
jnp
xchg
or
outsb
fwait
cli
sbb
dec
push
pop
and
shll
xchg
lret
inc
mov
iret
cmpsb
inc
test
sub
adc
and
adc
jge
outsb
lcall
dec
xlat
ljmp
aaa
xchg
xor
add
sub
fidivs
lea
dec
sarl
xchg
sub
idiv
cwtl
pop
sub
add
xchg
add
mov
xchg
mov
roll
ljmp
popf
jno
test
xchg
insb
cmpsb
push
ss
jne
sbb
mov
sbb
pop
mov
xor
push
aas
lahf
imul
cli
or
daa
add
sbb
in
mov
mov
ja
lds
rcrb
out
enter
insl
or
adc
push
sbb
ret
dec
das
call
xor
inc
jb
xchg
arpl
or
int
aaa
inc
inc
push
xchg
mov
stos
push
fisttpl
inc
xchg
or
hlt
arpl
cs
xchg
mov
jne
xchg
nop
jecxz
push
arpl
cmp
xchg
mov
std
sub
mov
push
add
cld
out
jmp
mov
ret
jae
and
aam
xor
pop
mov
movsb
and
outsl
pop
mov
pop
or
roll
xchg
ljmp
imul
inc
xchg
loope
repnz
and
mov
mov
dec
gs
test
rcr
cmpsb
xor
aad
in
xor
mov
data16
or
mov
dec
inc
xchg
mov
push
fidivs
rcll
daa
mov
pop
sub
pop
ret
aad
hlt
dec
add
add
mov
inc
lods
ret
loope
push
pusha
dec
jge
fsin
mov
fiadds
out
xchg
out
mov
push
loop
pop
fisubrs
push
pop
mov
xchg
popf
xchg
je
hlt
cmp
outsb
or
mov
and
aaa
mov
adc
mov
mov
jns
mov
insl
fcoms
dec
divl
lret
push
je
imul
adc
xor
out
pop
sub
ds
pop
jmp
es
dec
sahf
es
fstps
cmp
std
add
scas
sbb
insl
cmp
xchg
and
fsub
loop
int3
rcrb
xchg
push
lahf
orl
mov
loop
arpl
inc
adc
sub
int
inc
lcall
cmc
mov
into
cmpsb
ret
gs
enter
jg
adc
dec
daa
xor
inc
pop
arpl
jnp
mov
inc
cmp
nop
out
loop
and
adc
or
pop
out
xor
adc
xor
inc
pop
into
int
xor
js
leave
addb
dec
stc
cmc
testl
sarb
xlat
fiaddl
in
jecxz
es
jecxz
and
stc
std
mov
lea
ja
test
and
sub
in
pusha
iret
dec
lds
and
aaa
adc
xor
nop
or
js
shlb
cmpsb
inc
mov
lods
into
fwait
loope
dec
xor
xchg
push
mov
addr16
subl
sbb
shl
imul
dec
xor
sub
addr16
inc
sbb
leave
dec
inc
popf
cwtl
push
lret
call
sti
test
jl
fdivs
mov
dec
ja
in
adc
xor
add
out
xchg
cli
daa
or
dec
lea
test
test
fildll
mov
cmp
fistpll
add
test
push
sti
adc
outsb
and
mov
push
mov
fucomp
jmp
or
clc
sbb
inc
ss
ljmp
das
push
loope
dec
jne
xchg
lret
sbb
add
jns
pop
mull
cmp
push
imul
sbb
js
cmpsl
xchg
mov
push
fstl
dec
lahf
popf
push
lret
cld
stc
fs
lret
cmp
hlt
loopne
mov
imulb
enter
cltd
mov
ss
dec
test
fisttps
jno
jne
cmpsl
add
imul
inc
dec
test
mov
pop
lods
ljmp
jge
or
das
and
and
repnz
test
adc
mov
pop
out
fistpll
cmpl
hlt
inc
std
push
outsb
push
repnz
lcall
lock
test
insl
mov
loopne
sbb
out
cmc
xchg
jp
cmp
cmp
adc
pop
pop
mov
xchg
mov
lea
pusha
mov
mov
cmp
sub
jle
stos
in
cmc
or
sbb
inc
mov
xlat
jle
mov
xor
nop
sbb
xor
xchg
mov
daa
rolb
sbb
sub
sbb
jnp
pushf
scas
jnp
inc
fwait
call
cwtl
stc
movsl
add
mov
test
fimull
mov
sbb
stc
out
jbe
sbb
inc
stc
cmp
popf
inc
pop
sub
push
insl
sbb
cli
mov
mov
adc
bound
es
cmp
out
pop
lods
aam
dec
or
and
cmp
mov
push
mov
lret
push
int3
out
ficompl
adc
in
ret
ja
lods
les
gs
mov
das
dec
repnz
out
sub
jno
inc
shl
fbld
pop
pusha
mov
sub
cmp
add
lock
push
insb
xor
sub
adc
mov
in
fs
lds
dec
xor
pop
adc
stc
and
arpl
push
aaa
jb
ss
in
stos
insb
jle
arpl
inc
xchg
rol
cli
add
push
bnd
pop
in
loope
mov
add
in
adc
rcl
sub
xchg
ss
out
cld
inc
pop
mov
out
jne
stos
stc
les
dec
ss
xchg
addr16
jne
sbb
mov
cmp
daa
scas
sbb
in
inc
lods
sbb
test
pop
push
mov
movsb
sub
inc
imul
inc
xchg
adc
jne
inc
cmp
pop
aaa
out
int
jns
xor
cs
dec
cli
andl
inc
test
mov
outsb
sub
scas
imul
add
push
adc
dec
push
xchg
test
fmulp
jbe
inc
mov
xor
pop
repz
or
mov
pop
outsb
xchg
orl
testl
mov
add
bswap
jno
xchg
inc
ds
repnz
mov
roll
jmp
fcmovnbe
jle
loop
dec
sti
subb
add
pop
testb
inc
lea
addr16
add
mov
inc
cltd
and
fs
loope
fisttpl
aas
insl
xchg
sbb
mov
enter
inc
rcrl
fstpt
adc
movsl
das
repnz
mov
aas
sarl
sub
mov
cmp
sti
mov
add
daa
daa
aam
fldt
test
mov
pop
pop
repnz
fcmovne
xor
xorb
inc
sbb
mov
dec
ss
sbb
lock
dec
pop
cwtl
inc
gs
dec
mov
mov
dec
lods
xor
cmp
push
fdivrl
mov
daa
sbb
pushf
clc
mov
call
jecxz
cld
push
jp
adc
sub
inc
test
fwait
mov
push
aas
shlb
dec
pop
add
mov
cmp
push
out
add
lret
and
inc
xor
call
sahf
dec
pop
mov
sar
cmpsb
test
sbb
or
into
xlat
inc
rcrl
mov
rep
mov
xlat
test
mov
adc
iret
cmp
add
xor
mov
push
cmp
fdivrl
mov
aam
roll
cmp
push
aas
shll
fsubs
js
lahf
pop
sbb
push
cmp
sub
pop
mov
ret
jmp
xor
filds
pop
rorb
push
xor
movsb
add
mov
and
mov
mov
and
sub
es
popf
sbb
out
mov
mov
cmpb
fadd
fnstsw
xor
sub
scas
adc
adc
cmpsl
pushf
das
lods
rcr
mov
sub
ja
sbb
xchg
push
mov
mov
fsub
xor
loopne
push
adc
pop
jecxz
repz
outsl
out
negl
das
sbb
jno
stos
inc
andb
loop
jle
test
push
jg
xchg
pop
cmc
cmp
adc
xchg
pushf
cs
inc
or
mov
jg
stos
dec
movsl
hlt
scas
dec
sbbl
pop
cli
or
jecxz
dec
int3
adc
aam
adc
clc
jl
in
movsl
incb
and
mov
xorb
pop
push
xchg
imul
cmp
movsl
dec
and
out
aas
pop
arpl
enter
pushf
add
xchg
and
adc
out
add
sub
xchg
and
arpl
adc
cwtl
push
in
fcomp
or
jecxz
jg
push
adc
cmc
mov
imul
js
push
cmp
mov
mov
lahf
mov
test
xor
dec
lcall
out
push
and
stos
ss
aad
pop
push
push
dec
mov
sti
pop
mov
and
jecxz
movsb
inc
jl
insb
jnp
popf
sbb
sbb
out
dec
imul
and
arpl
mov
adc
xchg
ret
das
mov
mov
xchg
jmp
mov
mov
fstps
or
je
jnp
sub
xor
cs
mov
mov
and
mov
test
clc
jns
aaa
sbb
cmp
fwait
push
js
movsl
fimuls
pop
lock
or
pop
pop
es
enter
lcall
leave
ret
sbbl
sub
push
mov
sti
or
daa
adc
mov
addb
ja
add
or
cld
out
xchg
cmc
fimuls
fcomp
add
je
adc
push
mov
mov
sub
mov
xchg
bswap
sbb
arpl
sub
adc
repnz
ds
frndint
inc
out
lret
inc
movsl
jne
adc
jo
enter
adc
mov
cmp
or
cmpsb
sub
outsl
and
stos
int
in
cli
fs
neg
fs
adcl
dec
mov
sub
ljmp
rol
and
test
xor
push
icebp
jbe
sbb
mov
dec
lea
mov
mov
or
rclb
add
fnstsw
pop
mov
fs
jge
pushfw
shrl
adc
imul
mov
xchg
ja
or
into
and
jb
clc
pusha
pop
rclb
call
leave
xchg
mov
testl
mov
jbe
popa
xor
shll
xor
and
xchg
xchg
clc
push
inc
aam
mov
fisubs
int3
mov
inc
mov
repz
xchg
add
mov
mov
repz
or
jnp
xchg
push
into
repnz
cmp
mov
xorl
sub
xchg
lcall
jmp
sub
or
lock
xchg
sbb
xchg
call
mov
xor
movsb
aad
lahf
movsb
loopne
inc
mov
mov
adc
push
mov
cmpps
test
js
lds
out
cli
into
add
jnp
and
pop
cli
jnp
lds
sbbl
cmp
cs
in
lods
dec
jb
mov
sbb
push
stos
nop
cs
lods
daa
jae
insb
popa
jmp
flds
jae
rcll
imul
adc
jmp
mov
push
test
pop
pop
pop
jmp
mov
adc
adc
loop
xlat
mov
int
mov
fidivrl
jecxz
or
div
pusha
or
sbb
in
mov
shrb
cli
or
loopne
sub
arpl
pop
call
lea
scas
sub
inc
outsb
pop
add
xchg
pop
dec
imul
fstpt
cmp
lahf
jge
xor
add
push
jnp
sbb
mov
adc
test
out
dec
adc
or
outsl
gs
jne
cmp
fwait
push
out
push
scas
fidivrs
dec
push
cmp
push
aad
iret
jp
jg
call
lret
push
jle
out
or
xor
out
lret
or
cmpsl
lock
lea
add
or
sahf
pushf
cmp
test
dec
inc
xor
xchg
add
cmpsb
bound
pushf
test
mov
subl
jl
fs
arpl
in
adc
stc
orl
scas
pop
xor
rcll
cmp
rol
test
int3
jle
pop
pop
push
and
dec
xor
bound
mov
jmp
push
shrl
cmp
cmp
inc
sub
mov
cmpsb
insb
adc
xchg
dec
rorl
add
add
inc
jp
jae
lock
mov
movsl
mov
or
ret
xor
test
add
aaa
int
sbb
sarl
je
fs
lock
xlat
fwait
mov
push
lds
scas
rcll
adc
into
or
xor
sbbl
sar
jmp
mulb
in
sub
cltd
pushf
xor
inc
imul
in
xchg
cmpl
jle
lret
mov
jns
rclb
fistl
add
jo
rcl
stos
orl
js
cwtl
dec
es
dec
push
mov
test
je
push
scas
and
mov
test
test
or
int
and
push
add
jle
cmp
lods
data16
xor
call
adcl
ja
mov
sbb
stos
jb
out
mov
mov
push
ficoml
fs
icebp
inc
cwtl
shll
sub
mov
mov
add
sub
cmp
cmp
je
and
xchg
jecxz
movsb
push
div
shlb
cmp
mov
xor
gs
btr
pushf
dec
imul
jp
or
enter
pop
mov
adc
dec
test
aaa
lods
push
mov
add
cltd
mov
ljmp
fdivrl
push
popa
aam
dec
jge
sbb
jne
lds
addl
mov
or
in
mov
add
movsb
movsl
xor
andl
daa
fucomi
and
repnz
sub
dec
push
addb
nop
mov
lahf
jmp
ljmp
in
mov
cltd
stos
mov
std
cmc
lock
cwtl
push
out
or
daa
fldcw
in
cmpsl
adc
pushf
cmp
cmp
and
imul
sub
jecxz
adc
xchg
jl
xor
dec
cmpl
pop
cld
neg
add
cli
jmp
sarl
inc
xchg
dec
inc
and
push
nop
stc
addr16
das
jp
add
xchg
fisttpl
xchg
xchg
mov
jb
fwait
cs
in
lret
outsl
pop
push
repnz
hlt
cmp
adc
in
sbbb
push
cmp
lret
pop
xchg
iret
rolb
call
xchg
ss
inc
xor
loope
data16
ja
sbb
test
stc
sub
lret
enter
xor
jo
sbb
mov
out
and
data16
lods
sbb
aas
cmp
inc
xor
or
adc
outsb
and
in
mov
xchg
and
adc
cmp
pusha
pusha
loope
jmp
enter
sub
shrl
mov
sub
xchg
cmp
or
rcl
into
sub
test
and
inc
lret
gs
push
and
lret
daa
in
lret
mul
pop
ds
lahf
loop
sbb
adcl
faddl
xchg
ds
jno
inc
fdivrl
xchg
push
mov
aam
xchg
in
outsl
lock
subb
test
nop
lea
mov
or
in
mov
xor
xchg
pushf
in
test
xchg
cs
pop
fstl
jo
es
iret
in
pop
pusha
rcl
pop
daa
testl
repz
lret
xchg
dec
ficoms
mov
sahf
mov
stc
lret
add
mov
ret
out
xchg
xchg
ss
or
es
push
mov
movsb
lds
sbb
arpl
add
cmp
fucomip
insb
loop
sub
jge
jae
std
sti
lret
lret
sti
or
inc
adc
mov
std
ja
ret
popa
or
cmp
mov
idivl
cmc
dec
xor
jnp
pop
cld
push
test
push
repz
push
sub
mov
aad
mov
jmp
loope
inc
es
push
mov
xchg
test
popa
sbb
sti
push
ret
lahf
cmp
es
or
sbb
and
loope
push
cwtl
mov
imul
mov
xchg
stos
outsb
movsl
mov
shll
mov
imul
movsb
push
cmp
dec
sub
push
ljmp
xor
adc
cld
arpl
cmp
push
in
daa
cwtd
cltd
add
divl
cli
cmp
xor
nop
loop
je
push
push
std
test
xchg
pop
adc
push
pop
xchg
or
sbb
cmp
rcll
stos
and
dec
movsl
call
dec
je
cwtl
push
bound
inc
mov
movsb
sbb
mov
data16
mov
pusha
pop
mov
enter
sahf
int
adc
ret
and
repz
in
push
ficompl
xor
push
loopne
pop
ficompl
mov
pop
daa
jno
mov
dec
lods
adc
sbb
stos
push
lds
stc
mov
mov
lea
add
cmpsl
ret
adc
push
aaa
adc
jge
or
and
jnp
adc
push
jg
fsubl
dec
fldt
ffree
lds
pop
mov
mov
jl
lods
sub
scas
dec
frstor
orl
stos
mov
xchg
hlt
in
mov
dec
xor
inc
les
out
fadd
push
and
jecxz
add
mov
test
mov
push
inc
rorb
lahf
push
jl
cltd
sahf
bound
mov
call
cmp
gs
adc
fnstcw
into
int3
push
les
sbb
lret
push
mov
fwait
loop
std
jl
xchg
and
mov
xchg
push
xor
lret
ss
mov
and
fidivrs
add
cld
jecxz
aam
call
es
jle
pop
sarb
add
adc
xchg
outsl
dec
lods
adc
daa
lret
jecxz
es
push
std
daa
sub
dec
sbb
inc
xor
fistps
test
jmp
mov
inc
je
testb
mov
mov
pop
jne
sbb
inc
inc
dec
fsubrl
add
inc
fsubl
add
aad
xor
or
lret
xchg
js
mov
mov
ljmp
ss
or
arpl
rcll
lods
sbb
cltd
mov
sarb
lods
pusha
pop
scas
and
out
ret
cmp
mov
push
jo
mov
enter
aaa
rorb
rcl
jbe
pop
sub
push
dec
test
adc
aad
jmp
fiaddl
stc
in
sbb
sbb
mov
cmpsl
add
jl
ret
push
mov
dec
add
inc
push
adc
daa
ljmp
mov
lret
pop
testb
pop
out
and
test
jmp
cmp
stos
je
xchg
adc
jnp
mov
in
test
push
inc
cmpsb
mov
ficomps
jmp
mov
sbb
mov
leave
mov
lods
cmp
pop
cmp
cltd
dec
sbb
idivb
xchg
xor
dec
add
mov
fdivr
jb
lret
jne
cmp
cltd
xchg
or
xchg
cmpsl
out
movsb
stc
mov
cltd
pop
push
xor
jg
ret
push
data16
push
dec
sub
add
xor
mov
push
xlat
pop
imul
mov
pop
loope
shlb
and
cmp
xchg
sbb
mov
push
dec
xor
pop
fistps
je
out
sbb
std
pop
jns
enter
test
cld
mov
inc
out
mov
arpl
in
inc
pop
cmp
lret
fisubrl
fs
jp
mov
mov
sub
shlb
mov
or
sbb
or
dec
push
add
or
data16
sub
imul
xor
adc
cld
in
cmp
push
lret
sub
jge
je
loop
mov
jp
aam
lods
push
decb
adc
mov
gs
inc
cwtl
push
test
lret
lcall
fmull
out
dec
jg
sbb
mov
xchg
fdivr
dec
shlb
and
inc
mov
adc
mov
fwait
jg
leave
movsl
popf
imul
movsl
mov
lock
push
movsb
sbb
ds
lahf
insb
orl
push
sahf
push
test
nop
or
dec
and
inc
aas
add
int3
push
and
fcmovnbe
jl
inc
scas
push
push
pop
lret
std
loope
cld
cmp
into
push
adc
call
icebp
xchg
mov
add
adc
in
out
sub
insl
push
cmpsb
push
repnz
repnz
mov
mov
dec
pop
add
das
stos
clc
pushf
stos
lahf
cwtl
inc
fmuls
loop
cmpsb
movsb
into
xchg
lret
inc
loope
ret
aaa
jbe
das
ljmp
lret
aas
test
xor
arpl
cmpb
cmp
es
add
and
scas
in
andps
les
loop,pt
lahf
and
xchg
in
mov
roll
pop
fimuls
mov
push
lock
stc
movl
dec
jbe
add
pusha
push
add
push
pop
loope
dec
adc
int
aad
sbb
stos
in
cmc
mov
notl
pop
mov
push
xchg
jp
inc
or
jb
fcmovnbe
and
jge
mov
mov
inc
incl
rclb
xor
mov
mov
in
dec
cmp
cmp
mov
push
pop
stc
pop
cltd
je
ds
fs
es
inc
and
repz
lods
in
dec
sbb
bnd
jnp
call
out
rcrl
sbb
popl
adc
sbb
scas
stc
cmpsl
sti
dec
ljmp
pop
ja
es
test
jns
or
popa
sbb
scas
xor
lods
rcrl
stos
mov
repz
mov
xchg
test
pop
rclb
fnstenv
mov
movsl
jge
in
cmp
xor
cmpsl
or
mov
mov
dec
call
test
push
inc
loope
in
popa
mov
inc
leave
lea
mov
in
gs
xchg
aas
test
out
movsl
push
sub
in
iret
xchg
sub
out
aam
and
daa
int
jle
pop
pop
jge
fsubrp
ljmp
cli
push
jno
es
stc
insl
aam
es
das
out
sbb
inc
les
shlb
mov
jno
mov
jl
mov
daa
cmp
mov
pop
cltd
adc
mov
jmp
out
fwait
inc
sbb
push
ds
enter
test
jns
cmp
inc
mov
inc
test
add
pop
pusha
push
jno
adc
push
mov
sbbl
dec
mov
jae
icebp
push
shrb
and
jg
jecxz
mov
lods
jp
clc
dec
jo
add
in
test
inc
out
add
jno
mov
and
daa
jp
mov
cmpsb
jecxz
shlb
fcomi
push
stc
adc
shl
adc
push
add
push
push
in
inc
pop
fmul
dec
loopw
adc
popa
adc
fstpt
xor
nop
pop
pop
movsb
xor
adc
shll
mov
or
subl
and
mov
lret
loopne
stc
sbb
pop
rorl
out
in
shlb
dec
xchg
mov
jp
push
adc
pop
adc
ss
test
and
cwtl
sub
push
aad
mov
mov
pop
mov
dec
push
or
xchg
mov
cmp
push
add
mov
stos
xchg
lahf
stc
imul
cltd
cli
out
adc
mov
jne
sbb
daa
add
daa
enter
jecxz
shlb
stos
sub
adc
roll
stos
js
xor
push
fidivs
jb
sti
movsl
jns
sub
sub
loope
pop
cmp
or
in
cwtl
mov
pop
and
int
insb
les
andl
mov
fmul
stos
addr16
ficomps
push
xor
call
mov
inc
sub
cmc
aaa
mov
inc
ljmp
cltd
inc
movl
and
scas
andl
cs
push
inc
dec
mov
mov
push
iret
jbe
adc
aas
push
sub
ja
push
xchg
pop
mov
mov
dec
mov
xchg
fmuls
aam
mov
cld
pop
popf
loope
mov
inc
fisubrs
call
adc
repnz
mov
pop
sub
sub
mov
in
push
or
xlat
enter
jecxz
add
push
xchg
sub
in
jb
ret
jecxz
pusha
push
repnz
stc
pop
repz
add
push
jl
dec
hlt
cmp
mov
xchg
pop
hlt
ret
xchg
jae
sub
dec
adc
leave
ret
repnz
jb
data16
push
pushf
popa
outsb
je
sub
enter
outsb
addb
stos
setle
outsl
ss
sub
add
sbb
imul
adc
jnp
shlb
stos
and
xor
es
scas
jnp
pop
cmp
and
xchg
pop
leave
dec
jo
jle
lds
imul
ds
cmpsb
ds
test
and
js
cmp
loopne
adc
xor
orb
nop
xchg
pop
adc
xchg
jns
adc
pop
push
scas
stc
sbb
or
mov
jo
xlat
adc
sbb
push
pop
cmp
mov
xchg
clc
stos
ds
mov
in
and
mov
push
shrb
jno
daa
sub
push
pop
je
mov
enter
lahf
mov
xchg
js
test
dec
std
ds
mov
call
loop
or
pop
xor
add
push
nop
scas
adc
or
sahf
pushf
xchg
rcll
sub
pop
push
out
ror
push
popf
push
into
sub
inc
js
mov
or
sahf
out
xchg
jne
popf
xor
stos
aas
sub
jg
out
adc
leave
lods
fdivr
push
fistpll
cmpsb
mov
mov
scas
lret
mov
rclb
pop
xchg
out
push
push
lds
mov
lret
stos
loop
fcoms
cmp
push
lret
imul
call
out
dec
pop
addr16
stos
int3
jge
dec
dec
fldcw
mov
daa
pop
xchg
jle
lret
aaa
shll
inc
xor
jp
addl
fs
lahf
fsubl
gs
loop
pop
push
adc
cmpsl
and
ficompl
mov
mov
dec
fmull
insb
repnz
sbb
add
xchg
nop
lahf
icebp
jnp
gs
jecxz
pop
mov
stos
gs
pusha
pop
mov
addr16
mov
sub
sbb
pop
push
sub
jg
iret
add
setno
iret
and
mov
mov
mov
and
push
js
cmp
push
clc
dec
adc
lcall
sub
call
inc
loop
aam
or
ds
in
leave
fs
add
rcll
mov
leave
push
inc
ds
xlat
lock
jbe
inc
or
pop
hlt
sti
mov
push
pusha
rorl
and
leave
push
in
movsb
or
mov
popa
and
pop
fnsave
add
ja
mov
in
arpl
jb
dec
dec
pusha
adc
aad
xlat
sub
outsl
repnz
arpl
das
insb
loopne
fs
je
es
pushf
xchg
pop
leave
in
push
dec
xchg
xchg
add
inc
addr16
pop
hlt
out
xor
test
xor
mov
rcrb
xchg
fstpl
cmp
xchg
xchg
addl
out
lret
aam
pop
adc
sub
xlat
mov
std
adc
push
sbb
aas
jmp
aad
pop
adc
call
mov
mov
add
frstor
push
push
sub
or
out
lret
pop
test
adc
dec
lock
bound
les
insb
xchg
push
sbb
jne
pop
ds
fwait
sbb
ljmp
out
xchg
rcrl
pop
call
icebp
xchg
rcll
or
scas
repnz
sahf
mov
mov
pop
mov
jp
jnp
mov
aam
fimull
mov
jge
and
iret
cmp
mov
stc
sub
mov
mov
rcrl
repz
mov
pop
pop
scas
dec
xor
push
idivb
mov
movsb
movsl
and
dec
js
lea
stos
mov
cmpsl
popa
add
hlt
clc
jl
pop
das
mov
sub
xchg
cmpsl
lods
jb
mov
ljmp
lret
loope
ljmp
cwtl
xor
sti
sbb
cltd
cld
mov
orl
loop
rorb
jg
mov
sub
popf
and
pop
cmp
ret
in
cltd
sbb
push
stos
cmc
jmp
leave
test
test
pop
sbb
mov
sub
inc
adc
fisubrs
add
mov
and
repz
mov
adc
push
add
stos
and
popa
sahf
jl
loopne
lea
adc
jbe
mov
imul
xchg
mov
xor
mulb
das
aam
jbe,pt
cmp
clc
rorl
adc
dec
lods
xchg
mov
jnp
sbb
mov
and
cmpsl
xlat
jnp
push
add
mov
mov
inc
ds
jle
int3
pushf
dec
test
mov
fstpl
jae
nop
adc
or
sub
stc
cmp
push
data16
pop
push
les
inc
insl
pop
xchg
xchg
negl
mov
stc
aam
jns
fmuls
jno
sahf
dec
jmp
jne
into
data16
xchg
jg
mov
push
aas
lea
or
insl
jns
sbb
pusha
ds
jae
add
sbb
scas
adc
mov
je
pop
out
xchg
adc
mov
adc
sbb
insl
mulb
enter
scas
bound
mov
in
ret
sbb
sbb
and
xor
js
or
orb
cmpsl
rcr
sub
xchg
add
cmp
xchg
leave
mov
cmp
stc
or
xchg
mov
push
xor
and
xchg
push
incl
daa
loop
mov
daa
test
in
out
mov
fwait
xchg
sub
div
mov
lahf
std
movsl
add
pop
fmull
jnp
add
movsb
or
xor
lea
xchg
push
mov
negb
push
rcr
cwtl
xor
dec
add
cmpsb
stos
fwait
ja
mov
das
pop
mov
ret
cmp
xchg
or
movsb
jle
push
repz
add
icebp
and
sahf
mov
push
sbb
adc
ror
jge
dec
loope
dec
js
push
div
and
shll
xchg
ret
imul
cli
inc
sbb
pop
mov
mov
and
movsb
fs
sti
fs
mov
ret
mov
es
hlt
and
sub
jecxz
push
pop
jge
add
out
out
dec
movsl
iret
std
movsb
stc
add
jge
and
loopne
aas
xchg
mov
hlt
inc
xor
cli
fwait
sbb
jb
je
imul
pop
cmpsb
jbe
enter
sub
sbb
push
fadds
mov
adc
ljmp
rcrb
fs
push
lret
adc
lock
push
jo
ljmp
jb
or
cmp
add
inc
cmpsb
lea
push
jmp
sbb
mov
insl
jb
adc
mov
jle
jb
fdiv
int3
sbb
aaa
sahf
data16
sbb
jne
je
sub
mov
adc
or
pop
adc
out
das
pusha
xchg
imul
mov
mov
ss
lcall
and
ljmp
into
and
mov
lcall
cmc
push
mov
push
cmp
adc
inc
subb
or
insl
and
lds
jecxz
cmc
sub
xlat
xchg
jb
std
jmp
push
lcall
int
jbe
cld
sahf
or
ja
inc
int
test
sub
cmp
or
inc
cmp
mov
inc
mov
fnstcw
icebp
pop
mov
pop
call
push
int3
movsl
push
adc
cmp
sub
nop
xor
arpl
push
aad
scas
mov
ret
bound
xchg
add
xchg
pop
lret
nop
or
rcr
lret
pop
shl
xor
mov
push
into
mov
mov
daa
adc
movsb
or
dec
jns
inc
mov
fisttpl
test
hlt
add
and
pop
daa
std
xor
dec
xor
pop
jmp
pusha
jmp
mov
mov
mov
sbb
icebp
jne
aaa
shrl
insb
push
mov
jnp
cltd
push
pop
lret
es
shlb
subl
cmpsb
cmpsb
pop
mov
mov
out
mov
movsb
leave
adc
and
sub
inc
xor
mov
data16
lea
pop
mov
xlat
aaa
and
pop
mov
movsl
lahf
push
enter
mov
and
or
cs
fwait
lock
cmc
pop
into
jp
es
fisttpl
adc
xor
adc
mov
movsb
aaa
sbb
loop
cmp
mov
mov
or
sbb
cmp
pushf
jns
fs
pop
xchg
pop
xchg
jbe
ja
aam
lcall
or
adc
push
sbb
push
add
cltd
push
cmp
push
test
loopne
push
mov
jg
jge
cwtl
cltd
sti
or
js
sub
sbb
leave
dec
xchg
cmp
test
js
aas
in
aad
jmp
mov
les
or
and
icebp
sbb
push
xchg
sahf
jl
fldt
ret
rcrl
and
sbb
push
aad
pop
jp
sub
pop
dec
adc
jmp
adc
ds
sbb
jnp
jae
jbe
into
arpl
lcall
xor
pop
std
inc
hlt
call
lods
cltd
jge
fistl
loop
sbb
jge
insb
pop
xchg
ljmp
dec
lods
decb
mov
out
test
fmulp
mov
cmp
dec
mov
ds
ss
pop
mov
push
popf
cld
cmp
cmpl
jne
and
jecxz
push
push
stc
inc
jnp
sub
hlt
cmp
xchg
imul
xchg
push
imul
stos
cmp
pushf
adc
xchg
and
sub
popf
jbe
jns
out
dec
xor
orl
std
inc
ljmp
cmp
stos
pop
dec
pop
mov
mov
insb
iret
outsl
repz
popa
jb
sbb
popa
add
out
insl
and
cmp
pop
out
mov
popa
xchg
or
rol
stos
xchg
ljmp
mov
test
loopne
insb
xor
push
lahf
adc
mov
aas
adc
fisubrs
je
leave
push
ljmp
cmp
mov
dec
mov
lcall
push
out
mov
adc
add
jnp
pop
clc
push
xorb
push
std
sbb
cmpl
push
add
rcrb
sbb
bound
aam
jle
push
jbe
test
jo
sub
inc
sarb
xchg
xchg
std
dec
or
call
ljmp
mov
fdivl
push
jp
jle
div
or
or
in
imull
aam
cltd
mov
mov
push
ficompl
push
shrb
int3
iret
enter
out
roll
or
sbb
xor
mov
jbe
mov
jae
fwait
cmp
out
xor
adc
push
mov
pusha
xor
mov
mov
out
in
dec
inc
or
pop
mov
adc
out
lret
sbbb
xlat
mov
inc
lea
jnp,pn
popf
sbb
shrb
js
push
vpsubusb
rcll
xchg
pop
jle
xorb
push
or
out
mov
push
add
mov
das
ds
mov
lock
loope
lret
push
arpl
call
cmpsb
xchg
daa
sarb
adc
mov
icebp
inc
inc
pop
and
imul
lock
dec
pop
loopne
mov
xor
push
mov
popf
xchg
sahf
mov
mov
pushf
lret
sub
movsb
cmp
mov
push
or
lods
into
stos
ficomps
pop
cwtl
movsl
ss
fidivrl
cmpsb
add
mov
inc
mov
dec
ljmp
or
sub
nop
inc
and
lret
rorb
or
in
push
dec
mov
and
sub
cwtl
mov
xchg
dec
cli
enter
call
inc
xchg
mov
test
fsubs
mov
icebp
pop
test
pop
pusha
push
nop
xchg
loop
aad
xor
and
mov
rol
into
inc
mov
test
orl
or
cmp
stc
sbb
pop
popa
sub
jp
add
jne
and
fldcw
sub
sarb
popa
cltd
fidivrl
sub
cmc
dec
fs
shl
outsb
sbb
mov
mov
repnz
xor
sar
cmpsl
sbb
or
das
xchg
test
loopne
ret
cmp
pop
jecxz
and
lahf
js
jp
inc
scas
jle
je
xlat
jecxz
push
pop
pop
mov
imul
pusha
mov
jae
and
fidivrs
dec
and
mov
mov
pop
jo
xchg
jb
out
adc
stos
cmp
sub
test
inc
xchg
xor
and
mov
jge
stos
pop
cmpsl
js
xlat
push
in
test
inc
outsl
jnp
inc
stc
clc
leave
outsl
lret
jp
and
dec
mov
popf
mov
lret
mov
mov
push
int
cld
dec
pushf
fwait
xchg
enter
or
nop
shrl
ja
jbe
push
cli
push
bound
gs
call
loopne
rorb
cmp
lcall
mov
scas
js
jmp
and
mov
pop
mov
shrb
je
push
fstps
popf
pop
scas
jge
test
ss
dec
jnp
mov
sbb
je
shl
out
popf
ret
xchg
push
mov
adc
adc
outsb
dec
cld
jge
sbb
movsb
insl
into
dec
mov
jecxz
pop
adc
dec
mov
push
mov
jge
sub
jmp
arpl
cli
aad
inc
inc
pop
xchg
aad
cmc
fidivrs
les
lods
pop
aas
aas
ljmp
adc
sti
xchg
pop
push
or
cmp
sub
xor
inc
inc
enter
mov
mov
pushf
jecxz
aaa
mov
add
daa
jne
mov
cs
xchg
jge
mov
hlt
in
mov
sti
dec
inc
fs
outsl
push
mov
mov
sub
adc
fucomip
insl
mov
mov
popf
stos
jl
pop
aas
pusha
inc
shrb
imul
inc
das
vpsrld
test
cmc
push
rclb
push
jb
rclb
sarb
sub
and
mov
and
out
es
outsl
jg
les
mov
lcall
ret
xchg
int3
test
out
inc
fiaddl
fwait
fwait
not
push
cmpsb
imul
mov
sti
jecxz
mov
push
sbb
addr16
xor
sub
dec
sub
xor
js
cmp
movsb
outsb
xchg
inc
faddl
and
lods
or
dec
pop
pop
cmp
cwtl
sahf
ja
es
sbb
lcall
mov
inc
fwait
shlb
imul
mov
or
ds
std
fstps
cmp
rol
dec
mov
push
movsl
cmpsl
imul
dec
inc
push
pop
jns
nop
je
add
pop
and
cltd
lahf
xor
sbb
mov
mov
mov
dec
imul
mov
and
cmp
push
lret
mov
cmp
fisttpl
rcrl
or
arpl
sub
mov
push
insl
pop
pusha
sub
jns
lock
push
jl
movsb
idivb
sbb
pop
inc
sbb
mov
insl
subb
int
mov
lret
shr
ds
test
scas
mov
into
int3
stc
push
jno
lods
rcrl
dec
push
cs
loopne
push
mov
pop
enter
out
mov
push
insl
pop
ja
lock
aaa
popa
icebp
daa
push
mov
scas
lea
mov
nop
std
pop
cmp
inc
mov
adc
mov
lret
and
movsl
push
mov
dec
add
jo
jno
xor
push
cmp
inc
push
mov
pop
pushf
xor
sbb
enter
pop
mov
fcmovne
inc
sbb
lret
lahf
mov
push
in
mov
idiv
dec
stos
ja
adc
aas
xchg
lcall
out
fcompl
mov
xchg
das
popf
inc
cmpl
add
into
xchg
mov
mov
punpckhbw
fstl
test
sbb
push
add
jno
leave
lret
ficoml
dec
cmp
or
mov
pop
fsubr
pop
or
lcall
fnstsw
fists
mov
lea
cmp
pop
jecxz
xchg
popf
test
jae
nop
jp
and
or
ss
adc
xchg
addb
jae
sbb
jp
lds
xchg
pop
and
in
cltd
mov
shrl
icebp
outsb
adc
repz
ds
rcl
cmp
mov
dec
sub
add
popf
and
loop
lcall
cwtl
add
ja
gs
sub
dec
fs
inc
add
push
ror
push
outsl
inc
push
cltd
lock
jno
int
mov
push
pop
sub
jo
cmpsb
out
dec
notb
jne
outsb
addr16
cmpsb
pop
xchg
sub
push
fbstp
scas
pop
or
mov
cmp
scas
js
lds
add
cmp
xor
aas
mov
les
xchg
test
cwtl
dec
mov
jg
xor
cmc
mov
lret
push
cmp
push
add
pop
sub
sub
outsl
dec
sbb
sbb
cmp
outsl
xchg
test
loopne
in
pop
push
rolb
rcll
sub
mov
lahf
aad
dec
mov
mov
xchg
call
rorb
fiaddl
lret
jbe
jle
xchg
push
dec
hlt
xor
arpl
pop
fs
push
sahf
aas
sarb
clc
sub
xor
lods
insl
or
push
ficoms
scas
imulb
fwait
int
mov
sbb
jnp
in
rol
mov
lret
bnd
sub
push
test
cli
sub
je
fistpl
and
scas
jno
add
adc
xchg
mov
stos
mov
mov
out
mov
dec
cmp
daa
fsubrs
nop
jno
inc
or
cmpsl
adc
sbb
xchg
adc
sbb
pop
incl
jne
fdivrl
dec
sbb
pop
and
cmpsl
or
pop
addr16
gs
loopne,pt
dec
inc
loop
dec
inc
pop
push
xor
cld
pop
and
xlat
inc
fimull
pop
mov
jp
push
stos
scas
sbb
movsl
stos
mov
mov
add
sub
addr16
mov
mov
shll
test
pop
pushl
mov
hlt
daa
and
cmc
jg
mov
cwtl
pop
pop
fs
pusha
je
mov
push
cltd
lcall
faddl
push
push
lds
xor
popa
dec
adc
sub
jnp
test
test
hlt
mov
loope
je
push
fdivrs
adc
add
bound
mov
sarb
in
cltd
cmp
sub
sub
mov
dec
cmpl
xor
xor
mov
pop
mov
sbb
jmp
outsb
out
mov
and
sarl
pop
in
push
xor
cmp
shll
aaa
roll
pop
dec
xor
cmp
sti
aas
lret
xor
retw
push
lods
out
pop
fs
fmull
frstor
xchg
push
dec
add
xchg
lcall
pop
or
dec
into
jo
fcomip
mov
pop
bound
mov
cmp
sbb
mov
jmp
mov
into
cs
adcb
mov
push
out
notb
test
mov
fs
aaa
push
mov
xorl
in
mov
push
mov
outsb
fucomi
mov
cs
rcl
xchg
pop
inc
xchg
xchg
cwtl
mov
or
xor
push
js
cs
and
sub
push
icebp
nop
mov
in
imul
lock
dec
cmp
std
ss
xor
ret
sub
sub
add
dec
xor
int
jnp
stc
or
mov
cmp
lods
jecxz
iret
mov
push
ss
cs
shlb
movsl
push
insl
push
mov
scas
bswap
pusha
dec
call
pop
and
jle
dec
test
es
jb
add
sar
out
xchg
xor
lret
xchg
ljmp
add
cld
fcomp
mov
aas
mov
fidivrl
mov
pusha
xchg
xchg
daa
jo
xor
jns
dec
sub
or
setns
mov
dec
adcl
or
jbe
mov
adc
adc
mov
mov
popa
push
jmp
push
ret
push
ljmp
test
ret
sbb
jmp
insl
sbb
addr16
faddl
je
lahf
sub
daa
add
or
addl
out
ljmp
cli
push
stc
repz
jge
sub
sbb
pop
add
mov
mov
xor
sub
in
aad
scas
shrd
mov
js
cmp
ss
xchg
mov
jmp
pop
inc
add
jmp
pusha
pop
je
lods
xchg
sbb
jbe
pusha
cmp
and
mov
lock
ljmp
cmp
fisubrs
ljmp
or
xor
fldt
xor
loop
cli
test
cmpsl
cwtl
inc
cmp
cmpsb
fdivrl
inc
daa
jns
and
imul
sbb
xchg
mov
push
pop
inc
mov
cltd
add
xchg
jmp
or
daa
adc
cmp
pushf
jno
dec
fdiv
mov
or
mov
lret
adc
xchg
movsb
loopne
cmpsl
addl
push
jl
pop
and
pop
es
neg
jo
pop
mov
or
adc
mov
cld
and
movsb
inc
mov
std
andl
push
pop
mov
add
jle
sbb
dec
mov
fs
or
pop
jmp
pop
adcb
mov
sub
pop
ss
adc
lock
adc
inc
xchg
shl
int
call
lret
adc
mov
jmp
sbb
add
and
movsb
and
ja
jle
mov
push
rorl
lods
cmpsl
mov
pop
and
sub
or
addr16
mov
dec
xchg
jae
lock
or
xor
xor
insb
ss
jne
mov
jne
ret
mov
push
cmpsl
mov
push
jb
jp
cld
xor
ret
ss
add
repnz
stos
mov
mov
jnp
cmp
adcb
mov
cli
cmp
imul
and
mov
dec
sbb
and
lock
ret
js
sub
cmp
iret
xor
adc
mov
push
xchg
scas
lock
cltd
lret
pop
inc
loope
mov
mov
loopne
test
push
test
paddusb
es
jmp
jb
xchg
jb
adc
jae
jnp
cmp
in
scas
mov
ljmp
jge
out
or
insl
cmp
xor
push
xor
and
xchg
pop
ret
dec
loopne
movb
mov
jb
dec
movsl
in
cmc
insb
jae
insb
jb
outsb
mov
int
xor
dec
jae,pt
rolb
ljmp
cmp
out
shl
add
fiaddl
or
movsb
pop
mov
loope
popf
mov
cmp
push
xor
fs
jbe
sub
outsl
leave
and
fldl
and
insl
ret
pushf
cwtl
and
or
ror
add
adc
enter
inc
insb
sar
call
add
mov
out
mov
gs
fimuls
outsl
add
in
push
jge
xchg
fsubl
cmp
or
lods
outsl
add
cmpsb
loopne
das
mov
mov
sahf
and
sub
mov
cmpsb
fwait
div
or
insl
dec
adc
data16
cmc
mov
pop
lods
jmp
stc
fsub
inc
sbb
dec
cltd
mov
sbb
stos
fsubs
cs
in
aaa
jg
and
jle
stc
jae
adc
in
sub
aam
cmp
jbe
push
push
pop
jb
pause
inc
clc
and
daa
int
jae
push
cmpl
xchg
push
inc
pop
sub
hlt
sub
js
adc
lods
sub
pand
jge
lcall
adc
push
imull
mov
cli
and
pop
jl
sub
stos
lods
idivb
xchg
sbbb
jo
sahf
jp
sbb
das
rorb
movsb
shrb
sub
sbb
int3
lods
pop
hlt
sbb
jg
das
testb
cld
lea
push
test
xor
pop
pushf
push
or
jns
mov
movsb
sarl
and
fstl
es
mov
movl
dec
mov
jo
ret
jmp
push
sahf
pop
insb
out
dec
jmp
cmp
ss
mov
ja
mov
and
xchg
sti
repnz
jg
xor
sbb
imul
pop
and
xor
and
mov
cmc
and
inc
jmp
jb
xchg
cltd
jge
sub
inc
dec
cmp
in
int
pushf
sub
adc
in
lds
fsubrl
fucom
pushf
and
jmp
adc
or
je
dec
pop
sub
mov
out
test
and
sbb
dec
jecxz
mov
das
fcmovu
push
pop
outsb
xor
xorb
sbb
aad
xchg
dec
outsl
je
xchg
xor
incb
fidivl
and
stc
push
lret
cltd
cmpsb
iret
jecxz
leave
inc
call
dec
xlat
mov
int
adc
adc
or
add
pop
fbstp
les
mov
push
sbb
aam
popa
push
mov
pop
mov
fwait
cmp
sahf
enter
mov
std
dec
xor
das
shll
mov
pop
das
mov
add
mov
sub
shll
popa
cmc
std
sbb
mov
push
mov
cmp
rcr
mov
mov
loopne
fwait
sahf
das
jnp
jl
loop
mov
shlb
in
xorl
or
mov
in
sub
cmpsb
mov
sbb
cmpsl
test
cmpl
stos
aam
test
mov
dec
adc
dec
pop
or
jo
xlat
fmul
mov
xor
cmp
ret
das
add
adc
or
push
sbb
sub
xor
mov
out
aaa
pop
mov
push
mov
fisttpll
lret
cmpl
xchg
adc
jl
test
repz
adc
xchg
es
mov
mov
cmp
rcrl
and
jns
test
inc
xor
lret
scas
dec
adcl
jno
addr16
push
jge
scas
cmpsl
mov
fwait
mov
dec
dec
lret
sahf
pop
inc
inc
or
sub
cmpsb
and
mov
jp
jecxz
mov
adc
outsb
dec
jg
cwtl
mov
dec
popa
add
push
mov
test
mov
repz
pop
mov
mov
inc
sbb
andl
mov
out
daa
notl
ss
push
xchg
decl
rcrl
fcmovnu
std
es
mov
std
mov
mov
inc
mov
add
jnp
arpl
jnp
repnz
push
adc
or
sbb
std
loop
pop
out
cmp
inc
enter
cmp
inc
mov
andl
xor
xchg
inc
ret
je
test
pusha
imul
pushf
xchg
xchg
fstpt
scas
imul
cwtl
mov
pop
std
xor
jmp
popf
dec
addb
lcall
xchg
add
sbb
fadd
sub
fwait
jl
mov
test
sahf
mov
out
fildl
stc
and
xor
repz
es
dec
push
jge
in
sub
out
or
loope
neg
mov
enter
pop
cwtl
add
dec
mov
cmp
mov
mov
jg
dec
or
enter
std
lea
and
and
enter
ficoms
test
ret
in
pop
sahf
lds
sti
inc
sbb
mov
xor
mov
mov
pop
outsl
dec
cmp
cltd
and
in
jle
cmp
lret
test
fldcw
insl
repnz
push
cmp
push
adc
cmp
mov
jp
stos
in
in
aaa
iret
mov
mov
cmp
enter
jmp
xchg
aam
sub
out
xchg
scas
mov
ret
jb
mov
cltd
sub
ss
xchg
cwtl
mov
mov
adc
or
cld
adc
mov
sbb
dec
orb
into
shrl
dec
fcomp
or
dec
sbb
sbb
in
pop
xor
lods
pop
pop
aaa
inc
out
in
test
and
ret
sahf
sub
adc
pop
dec
mov
and
cmp
cmpsb
pop
jb
shll
rcl
adcl
sbb
jbe
push
xchg
adc
dec
mov
mov
fdivs
out
je
nop
stos
push
call
pop
adc
cmpsl
jae
add
popa
gs
enter
fs
mov
rol
loope
push
xor
cmpsb
imul
push
sbb
je
sbb
push
xchg
jb
sbb
int3
pop
pop
jne
or
sub
jl
call
fwait
inc
adc
adc
adc
dec
xchg
lcall
fildl
cmpb
mov
and
xor
outsb
out
pop
adc
jp
mov
or
scas
push
inc
rcll
push
xchg
jmp
jle
out
pop
lock
adc
fistpl
jae
jg
jnp
add
aad
sub
and
jno
push
mov
push
xchg
ss
push
testb
aas
imul
insb
vmwrite
dec
mov
and
test
jl
js
or
fimuls
or
or
lock
inc
push
cmp
mov
enter
lcall
cli
and
jmp
in
pop
in
orl
push
int
mov
sub
push
shlb
jmp
sub
loope
xor
arpl
inc
jbe
mov
rolb
scas
movsl
fstpl
sub
cs
xchg
mov
je
fdivrs
cmpsl
insl
dec
cmp
loope
loopne
push
mov
loopne
scas
cli
mov
add
movsb
jg
shr
loop
mov
jge
cwtl
xchg
arpl
mov
subb
push
mov
adc
sub
nop
sbb
cwtl
mov
in
and
push
out
stos
imul
mov
fnstcw
push
dec
dec
push
jno
fwait
pop
cmp
outsb
testb
or
add
int
inc
cmp
push
inc
ret
cmc
adc
add
push
fsub
jmp
and
mov
aad
test
pushl
pop
leave
test
push
ja
fld
push
sub
jno
mov
sbb
inc
xor
das
loopne
bound
or
pusha
push
fcomps
mov
cwtl
lods
js
and
cmpsb
jg
fsubl
push
test
iret
push
dec
push
lret
gs
int3
arpl
mov
cmpsb
scas
cltd
jno
les
imul
push
xchg
ljmp
loope
and
ljmp
mov
and
lret
dec
fsubrp
pop
xorl
pop
sub
or
inc
div
mov
mov
movsl
mov
stos
mov
nop
or
jmp
sub
in
in
push
jmp
out
xchg
mov
and
mov
lock
jne
sbb
or
jne
fldenv
leave
scas
push
cltd
loop
or
add
pusha
jne
push
pop
data16
ret
sbb
stos
lahf
xchg
cmp
mov
pop
fisttpll
popf
cld
xchg
sbb
in
add
testl
ret
pause
shll
adc
or
xor
or
mov
mov
mov
loope
scas
sub
sub
cmp
sbb
lods
ret
pop
dec
cld
cwtl
nop
ret
sbb
adc
dec
test
inc
xor
cwtl
aas
jnp
xchg
jecxz,pn
std
ds
repz
pop
xchg
mov
push
insb
jae
imul
push
ret
fsubs
pop
mov
cltd
mov
adc
incb
call
out
loop
insl
fisubs
in
inc
insb
mov
repz
xchg
dec
adc
push
lret
ror
rclb
imul
pminsw
and
hlt
outsl
mov
out
jns
shr
les
pop
jg
test
push
icebp
bound
jae
add
sarb
xchg
jo
adc
pop
push
xchg
outsl
adc
lods
loopne
mov
daa
jb
cltd
pushf
dec
jg
shl
decl
movsb
mov
xor
jge
sub
xor
movzwl
inc
jecxz
aad
scas
mov
cmpsb
mov
push
ljmp
sub
ret
xchg
lcall
push
xchg
add
or
jnp
addr16
insl
insb
nop
fnstsw
add
jle
pop
xor
mov
out
mov
rclb
push
sbb
xchg
dec
lahf
cmc
nop
imul
push
mov
rcr
repnz
sbb
jmp
insb
fistpl
insl
out
mov
xlat
add
testb
repnz
daa
repz
loop
mov
dec
jnp
jb
jnp
push
sub
cmp
pop
xchg
mov
inc
inc
aam
mov
push
lret
push
pusha
icebp
in
imul
fldl
add
adc
inc
aaa
loop
andb
inc
adc
jg
push
push
xor
xchg
inc
push
mulb
ja
out
gs
push
cwtl
mov
es
lock
and
stc
mov
xchg
addb
xchg
test
repz
pop
sbb
jle
lds
bound
cli
inc
push
nop
xchg
nop
pop
loope
inc
sbb
cmp
xor
das
sbb
sub
push
loopne
mov
stos
loop
mov
hlt
sarl
lret
mov
cwtl
shll
jb
pop
xchg
sbbb
sub
xchg
cli
jno
mov
pop
adc
rclb
fcompl
fildl
add
shlb
sbb
jmp
movsb
sbb
pop
xchg
and
jo
cmp
loope
fidivs
cmc
xchg
inc
fisttpll
cmc
dec
cmp
mov
cmp
push
insb
in
push
sbb
outsl
popf
popf
lret
push
shlb
xchg
adc
icebp
outsb
cmp
aaa
mov
pop
outsl
jg
adc
nop
movsb
xchg
repnz
ds
frstor
inc
stc
push
sbb
lods
xor
mov
lcall
sti
jmp
mov
test
cmc
ds
add
hlt
pop
imul
adc
xor
mov
xorps
jle
adcl
mov
xchg
in
inc
xchg
or
mov
fwait
imul
aam
sub
lahf
add
and
lahf
add
jb
ja
out
das
or
push
xchg
mov
adc
push
mov
insb
jecxz
int
sbb
and
sub
mov
loop
push
push
mov
sub
test
mov
outsb
loope
cmp
pop
cmpsl
hlt
enter
pusha
cmp
push
in
and
push
xchg
add
mov
nop
repnz
rclb
jmp
xlat
int3
push
pop
adc
cs
xchg
pop
test
jecxz
les
int
mov
divb
sbb
mov
push
lret
xchg
dec
and
outsl
mov
xor
push
mov
leave
mov
outsb
xchg
dec
inc
outsl
cli
ret
mov
adc
cs
dec
jb
add
andl
imul
mov
push
or
icebp
popa
out
cld
lret
mov
jl
dec
push
ja
mov
sbb
sub
add
push
mov
mov
cli
das
pop
in
sahf
in
jmp
mov
and
add
sar
or
sti
cmpsl
iret
jne
sbb
jg
ljmp
insb
test
cltd
xor
push
cmp
push
pusha
pop
xor
rolb
fdivrp
lds
inc
sbb
pushl
xor
out
ret
enter
xor
mov
hlt
push
inc
shlb
sub
hlt
movsb
and
pop
jno
push
jbe
jmp
push
inc
testl
xchg
sub
or
shl
ds
mov
fcoms
adc
dec
or
mov
cmp
lret
mov
clc
xchg
adc
jb
lods
enter
fistpll
out
or
or
lds
jmp
pushf
lock
push
and
push
bound
pushf
mov
mov
das
cmpsl
sbb
in
cs
loop
mov
int
es
push
cmp
pop
lahf
stos
lea
mov
sub
xor
scas
jns
lcall
cmp
dec
es
pusha
call
cmp
ljmp
mov
mov
add
dec
pop
in
je
es
mov
jae
out
inc
cli
lret
pusha
pop
sub
std
popf
in
lahf
mov
loop,pt
mov
jne
push
repnz
mov
xor
sub
adcl
mov
repz
rclb
mov
fcmovnb
addb
xor
inc
lds
fdivrs
ds
fwait
pop
pop
testb
or
lods
les
pushl
lahf
cmp
mov
iret
and
popa
or
call
adc
sub
and
popa
insb
lcall
sub
push
jno
dec
or
aaa
mov
add
popf
in
add
and
mov
mov
jbe
add
adc
jno
or
pop
les
sub
ret
aam
jp
pop
es
or
leave
xchg
mov
add
add
ss
add
jecxz
mov
fwait
imul
test
in
cs
xchg
mov
xor
push
gs
shl
dec
mov
dec
or
add
cmp
xchg
jge,pn
xchg
xchg
sub
loop
int
ficoms
adc
push
xor
mov
cs
es
movsl
mov
arpl
hlt
adc
sub
xchg
adc
aaa
cli
das
jge
pusha
cmp
hlt
movsb
sub
jg
dec
in
and
push
push
xchg
test
cmp
out
loopne
sarb
xchg
cli
sub
pop
xor
loope
mov
test
fnstsw
stos
xchg
add
xchg
add
mov
cmp
in
out
sbb
push
test
jecxz
outsl
or
adc
add
lock
fisubs
or
out
or
das
ret
xchg
jo
or
fmuls
shrl
ret
test
or
or
sub
mov
and
mov
cmp
lds
bound
mov
push
xchg
stos
xchg
jmp
enter
addl
sbbb
push
lcall
sbb
jge
add
inc
mov
imul
pusha
jle
es
ss
pop
or
lods
mov
inc
in
insb
inc
cld
daa
push
clc
lods
pop
xor
pop
stc
mov
inc
xor
call
test
div
jae
iret
out
rcrl
ss
xor
xchg
add
adc
dec
jo
gs
adc
repz
pop
scas
push
adc
sub
out
outsl
adc
adc
dec
cli
and
and
lret
sub
xlat
sbb
xchg
xchg
aam
insb
sahf
out
lods
mov
or
jecxz
icebp
mov
push
xor
cli
pop
iret
and
dec
ljmp
add
outsb
mov
xchg
mov
mov
scas
ljmp
xor
dec
sarb
cmpsl
mov
inc
push
xchg
int3
mov
bnd
adc
nop
iret
add
dec
mov
daa
xor
sbb
dec
test
fnstsw
rorb
sub
outsb
in
cmp
push
pushf
scas
jae
xor
movsb
in
out
and
ljmp
les
call
xchg
push
mov
push
mov
mov
xchg
xchg
gs
movsb
mov
fcompl
movsb
rcrl
add
or
xor
fildl
jb
imul
flds
loopne
sub
cmp
pusha
ds
loop
mov
cmpsb
shll
arpl
mov
testb
adc
sbb
mov
das
nop
and
push
xlat
xor
cs
and
mov
push
inc
inc
out
adc
shll
loope
xchg
inc
stos
mov
out
pop
aas
lods
or
fcomps
shlb
lods
jle
test
fisttpll
lcall
fldcw
int
mov
pushf
imul
jo
sbb
xchg
jnp
outsl
imul
jbe
inc
mov
outsb
jae
je
xchg
push
inc
mov
les
outsl
dec
jb
in
dec
add
clc
mull
fdivs
int
push
fsubl
fidivrl
shrb
mov
adc
xlat
xchg
dec
pop
jecxz
push
jmp
cmp
ror
push
dec
mov
jl
mov
cli
lcall
sbb
out
lahf
add
add
inc
fmull
mov
xor
out
sbb
pop
enter
lds
inc
sahf
xor
das
aaa
jno
jbe
lahf
dec
push
cmp
pop
mov
sahf
jne
test
insl
xchg
pop
push
outsb
push
push
mov
test
and
mov
sarl
mov
incl
sbb
xchg
or
jo
cmp
jns
scas
and
and
or
loop
or
dec
adc
jle
lahf
pushl
add
mov
addr16
and
or
setg
mov
adc
dec
cmp
push
sub
jno
push
pop
mov
mov
fisttps
ret
push
push
xchg
xchg
subl
sub
pop
nop
filds
cmp
and
jns
shrl
mov
and
inc
insl
push
lret
daa
pop
lcall
pop
or
mov
add
jns
gs
lock
pop
xchg
sbb
int
ja
test
jnp
mov
cld
lock
and
dec
pop
jle
jns
mov
mov
dec
es
or
adc
fmull
imul
pusha
pushf
jbe
push
dec
mov
sub
repz
sbb
sub
enter
inc
jle
and
lret
mov
push
sbb
mov
out
cmpsb
out
lea
inc
sbb
fisttpl
in
leave
in
xor
repz
push
aaa
sub
je
mov
stos
rclb
adc
in
scas
jg
testb
fs
xchg
movsl
mov
add
jae
mov
dec
and
stc
in
jbe
xchg
fs
flds
add
sub
pop
data16
dec
pop
fidivs
pop
cwtl
ret
loop
or
mov
mov
xchg
or
rorl
adc
push
or
pop
xorl
sub
inc
dec
test
lret
repnz
rolb
fcomps
sub
fidivrs
xchg
xor
andl
mov
mov
mov
in
push
cwtl
lods
push
int
pop
clc
ret
jb
js
sbb
aaa
scas
mov
and
push
popf
sbb
cmpsb
push
push
sti
dec
les
xchg
push
add
out
hlt
daa
rorl
shrl
dec
or
std
das
ss
rcrb
das
mov
outsl
jne
leave
aad
xor
stc
iret
inc
pop
popa
mov
mov
mov
hlt
xchg
test
mov
xlat
or
mov
jge
or
pop
ret
mov
xchg
mov
loope
mov
dec
ja
imull
mov
push
or
lcall
fsin
sahf
cltd
adc
stos
fs
mov
gs
xor
pop
push
gs
popa
mov
gs
in
inc
sub
adc
aam
out
add
sbb
cmp
mov
ret
cmc
xchg
push
add
lahf
stos
icebp
adc
sub
lods
pushf
xchg
sar
mov
mov
cmp
pusha
jns
mov
and
adc
jns
cmpsl
mov
xor
pop
bound
xchg
dec
pop
shrb
lds
cwtl
dec
js
loop
sub
mov
aad
shlb
jecxz
arpl
adc
repz
sub
sti
bound
clc
jo
jbe
sub
xchg
insl
add
mov
imul
repnz
leave
pop
cmp
scas
insl
ljmp
jnp
fbld
xchg
pushl
pop
mov
das
sbb
lds
pushf
pop
jae
dec
mov
mov
sub
lret
out
mov
inc
sub
ja
push
xchg
lret
pop
pop
xchg
adc
dec
ret
jno
rcrb
push
pop
jae
addr16
pop
scas
js
movsb
stos
scas
sbb
fildll
mov
loop
inc
imul
cmp
add
adc
push
push
mov
out
rcr
insl
std
sub
loope
mov
inc
add
and
or
pusha
inc
jg
mov
xchg
adcb
popf
inc
xor
dec
pop
mov
pusha
jp
movl
push
sarl
js
popa
xchg
jns
sti
mull
mov
jle
pop
scas
cmp
add
inc
in
xchg
push
cmp
enter
pop
xchg
fldl
push
js
pop
xor
lock
and
adc
mov
pop
jmp
or
cmp
ljmp
outsb
push
cmp
or
scas
test
sbb
mov
data16
loopne
mov
mov
cmpsb
int3
jae
insl
out
popa
mov
in
mov
pusha
dec
arpl
mov
in
leave
out
inc
or
sbbb
mov
test
xchg
test
pmaxsw
push
xchg
mov
fwait
pop
xor
jp
mov
enter
add
test
jecxz
and
push
adc
xlat
pop
not
inc
xor
je
ljmp
inc
cmp
and
jl
mov
xchg
aas
inc
test
push
daa
pop
mov
imul
cmp
es
ss
cmp
cmpsb
mov
lods
enter
fwait
pop
lock
es
add
mov
daa
lds
out
xchg
pop
filds
dec
cmp
push
mov
jecxz
xlat
lret
or
das
rorl
fnsave
cmp
push
iret
xchg
leave
inc
dec
dec
icebp
stos
push
pop
fisubs
int
mov
pop
aam
inc
xchg
mov
mov
inc
or
lret
sub
int3
dec
sbb
push
in
pop
imul
jae
test
xlat
popf
ret
and
add
add
aas
jne
mov
and
fldcw
aam
push
mov
jp
mov
and
mov
cmp
fsubrl
mov
ss
dec
inc
pop
negl
imul
xor
mov
popa
push
fadds
add
jne
add
push
mov
rcr
mov
scas
mov
outsb
pop
idiv
mov
in
inc
inc
sbb
rcrb
mov
mov
lret
xchg
cld
sub
lds
mov
cmpsl
inc
xor
push
jmp
inc
pop
repz
pop
scas
or
clc
lret
shll
movsl
mov
jb
icebp
loopne
enter
xor
pushf
subb
push
sar
dec
push
fwait
push
lcall
stos
sbb
jge
and
mov
out
inc
mov
cltd
xchg
out
and
fimuls
stos
rcl
ss
push
lret
push
out
test
mov
int3
shlb
cmp
jge
out
jo
ljmp
xor
jns
test
imull
sti
popf
mov
mov
and
mov
xchg
loopne
push
lock
stc
lods
or
push
lret
push
jecxz
mov
sbb
lock
cs
stos
test
adc
cmp
sub
mov
mov
scas
push
xor
push
shr
es
cltd
pop
aaa
sub
arpl
inc
adc
imull
das
pop
mov
in
roll
add
dec
cwtl
data16
mov
jo
sub
push
jbe
fcoml
xchg
dec
adc
sbb
cmp
dec
or
fs
sbb
cmc
lds
or
xor
cmpsl
js
hlt
gs
mov
mov
mov
lods
xchg
mov
movsl
test
ret
sbb
cmp
sub
inc
xor
cmpsl
xor
int3
ret
jp
push
rcr
xlat
stos
add
je
pop
shll
test
aam
clc
call
stos
insl
inc
aam
leave
jl
stc
bound
packsswb
or
push
pop
shl
xchg
inc
mov
cld
int
fucom
cmp
mov
pop
jno
loopne
mov
fcomps
xor
pop
nop
subl
cmp
adc
or
mov
mov
fstpt
mov
xchg
adc
push
and
jmp
ss
pop
jns
push
mov
xchg
mov
mov
jl
mov
jl
add
stos
cmp
sbb
pop
xor
xchg
in
push
mov
pop
in
sahf
mov
pop
jb
and
idiv
cmp
mov
imul
and
stos
ja
in
xchg
sbb
in
test
cli
idivb
cwtl
loope
push
inc
inc
leave
jns
into
ljmp
xorl
mov
jnp
addr16
test
mov
pop
lcall
into
stos
int
jle
ss
shlb
icebp
push
push
xor
loopne
push
mov
dec
sbb
cmp
cmc
iret
bound
mov
sahf
push
movsb
js
rorb
fildl
dec
enter
shll
and
mov
loope
scas
loope
mov
inc
lds
popf
dec
push
fadd
shll
sub
pop
jns
xchg
mov
dec
cwtl
add
push
dec
cmp
in
loopne
mov
out
repnz
enter
xchg
sub
mov
mov
aas
mov
lds
ds
lock
sub
xor
jle
add
insb
jbe
mov
adc
insl
sti
test
push
pop
std
enter
xlat
jge
or
and
in
push
mov
push
inc
loopne
mov
xchg
push
dec
inc
dec
ret
mov
xor
xor
daa
aam
mov
mov
pop
lcall
sub
add
push
pop
ja
into
push
adcb
mov
idivl
or
loop
lret
jno
jmp
out
cwtl
add
cld
xchg
jo
clc
dec
rorb
jne
loopne
mov
xchg
icebp
push
cld
cmp
or
lock
and
outsb
xor
cmp
es
std
push
out
pop
pop
loop
cli
std
mov
imul
xor
test
fdivs
repnz
push
xor
hlt
mov
aam
sti
push
pop
push
fnstenv
push
je
lods
or
mov
inc
jne
pop
mov
add
jl
jl
push
loopne
xor
or
aas
mov
push
mov
stos
inc
fmuls
test
adc
mov
push
out
mov
ja
or
jecxz
out
addl
push
jnp
push
aad
xor
mov
cld
push
or
popa
mov
mov
sub
rol
push
mov
popa
ret
rclb
jnp
cmp
gs
scas
aam
fcomps
imul
ljmp
sbbl
pop
mov
insl
add
into
push
pop
cmp
xchg
cmp
fldenv
push
in
movsl
insb
or
fildll
pop
in
cmp
pop
insb
pop
jmp
push
inc
mov
push
xchg
jmp
ret
je
cmpsl
fcoms
xchg
imul
mov
int
sbb
mov
sub
rorb
fwait
lods
or
or
sub
jne
enter
cmp
inc
mov
adc
insl
adcb
xor
shr
fcoms
ficoms
mov
dec
into
loopne
divl
cld
jnp
mov
sub
fwait
cwtl
nop
pop
in
fs
adc
or
fisubl
xor
mov
xchg
gs
jl
outsl
lcall
or
xchg
call
imul
movsb
mov
ljmp
pop
test
ds
cmpsl
stos
ficomps
les
in
push
xor
out
loopne
xchg
leave
addr16
jnp
xchg
fs
inc
pusha
add
in
dec
insb
sub
popf
repz
sub
cwtl
in
notb
fstl
stos
addr16
jbe
pusha
rclb
jp
test
inc
push
pop
lock
insb
dec
lods
stc
jg
fprem
cmp
push
sahf
sub
pop
test
adcl
inc
popf
data16
out
imul
scas
xchg
lret
bound
sarb
pop
adc
fwait
imul
mov
das
mov
aas
mov
les
daa
push
cmp
mov
mov
lret
js
mov
jg
nop
add
aas
mov
ljmp
xchg
and
xchg
addr16
sbb
stos
adc
insb
in
fcmovb
jns
icebp
test
xor
inc
xchg
ljmp
movsb
addl
xor
jo
jp
dec
sbb
jns
subb
mov
je
push
aaa
mov
pop
mov
mov
daa
out
lds
lret
dec
mov
or
mov
or
in
stc
adcb
subb
cmp
dec
mov
pop
js
cs
push
mov
sbb
enter
call
movntps
mov
dec
mov
jge
add
jge
inc
scas
in
jg
mov
fmull
test
and
inc
cmpsl
push
sti
cltd
mov
pop
dec
ret
mov
lcall
push
xor
add
inc
pop
push
andl
ret
pop
dec
jnp
push
sahf
mov
mov
push
push
mov
lret
test
mov
push
push
push
mov
repz
or
in
and
loop
mov
xor
mov
popa
js
jge
gs
adc
lcall
clc
xcrypt-cbc
cmpsl
xchg
xchg
jae
pop
outsl
lods
popa
sbb
mov
and
je
push
movsb
daa
inc
push
mov
adc
es
out
adc
pop
push
push
ss
stc
push
in
scas
sub
mov
cli
jmp
je
dec
add
out
faddl
iret
jecxz
adc
jns
add
in
mov
mov
enter
push
jp
or
outsl
enter
xor
push
lahf
cmp
ss
dec
mov
and
rorl
enter
and
mov
xor
and
xchg
sub
xchg
and
out
jns
popa
xchg
or
add
cmp
sbb
pop
lods
mov
jl
or
out
jne
mov
mov
and
cltd
aaa
cmpsl
lods
pushf
enter
dec
imul
ljmp
cs
or
jge
aam
jp
dec
mov
inc
xchg
ret
add
mov
sbb
add
and
sub
popa
pop
ljmp
sbbb
loope
mov
bound
xchg
jecxz
sarl
or
inc
lret
fmuls
repnz
scas
jl
out
inc
pop
add
cmp
dec
movsb
out
mov
aas
and
or
cmp
sti
pushf
jle
jmp
push
or
ret
pop
adc
mov
pop
xchg
push
inc
adc
mov
add
sti
loopne
pop
sbb
mov
sub
add
xchg
and
test
cmp
out
negb
pop
repz
dec
and
in
inc
std
xchg
loop
out
add
xor
ret
push
jb
repnz
call
daa
scas
mov
xchg
es
jb
and
adc
mov
xchg
adc
adc
jae
into
add
ds
pop
gs
int3
xor
dec
or
sub
mov
clc
stos
stos
sbb
cs
add
xchg
insl
fdivr
sbb
fidivrl
je
mov
xor
in
sbb
cmc
mov
pop
mov
fmull
mov
jle
adc
add
outsl
bound
cli
adc
lods
or
push
jno
movsl
adc
rorb
add
jg
mov
xchg
xchg
hlt
xor
mov
hlt
icebp
xchg
stc
xchg
xor
rcl
dec
vmovss
jmp
out
dec
popf
adc
lahf
pop
scas
outsl
xchg
xor
cmpsb
or
rol
icebp
lcall
fmul
scas
adc
pop
lea
scas
int3
cmpsb
dec
mov
xor
insb
adc
pop
imul
mov
loop
arpl
ds
push
mov
pop
pop
addr16
fs
push
fdivrs
out
cltd
xor
jae
fildll
fldcw
or
js
into
loop
in
iret
inc
add
inc
mov
lds
in
test
push
dec
and
in
mov
mov
sub
cmp
pop
clc
in
aad
daa
push
lret
push
jno
add
push
adc
mov
lret
mov
push
inc
xor
hlt
adc
enter
xchg
imul
inc
push
stos
or
repnz
pop
leave
sbb
icebp
gs
xchg
and
sub
push
outsb
dec
insl
cli
xchg
lahf
dec
pop
lea
or
sub
addr16
pop
mov
jno
jecxz
mov
xor
in
mov
push
nop
xchg
stos
mov
movsb
mov
pop
inc
iret
insl
jl
xor
orb
fldl
insb
out
fstp
xchg
addb
add
xchg
fsubl
dec
gs
xchg
push
cmp
data16
outsl
ss
in
scas
push
mov
sti
ljmp
sub
aas
ljmp
ja
xchg
adc
cmp
add
test
xchg
and
pop
and
addr16
inc
push
adc
addr16
sbb
test
js
and
add
adc
stos
ja
mov
adc
lret
push
or
dec
out
add
pop
dec
fstl
mov
ljmp
data16
lds
or
std
mov
aaa
cmp
out
cmp
cwtl
add
cltd
sub
fisubs
fld
cli
or
push
shll
dec
popa
sub
dec
je
fdivl
cmp
addl
mov
test
mov
dec
movsb
sbb
mov
les
lods
aas
cmc
dec
inc
or
fcoms
push
jnp
xchg
ds
xchg
out
hlt
stos
xchg
sbb
jae
and
sbb
push
rcll
jmp
xchg
jb
pop
xchg
jnp
jmp
out
pop
call
cmc
clc
jmp
mov
aad
mov
mov
or
jg
lcall
mov
fiaddl
inc
inc
pop
lods
xor
shrl
cmp
xor
lods
subl
data16
pushaw
push
add
inc
mov
test
push
sbb
dec
mov
push
add
xchg
popa
mov
imul
loop
mov
xchg
or
cmpsb
aam
out
and
pusha
mov
cmp
cld
pop
loopne
adc
dec
hlt
fs
mov
inc
sub
adc
data16
pop
cltd
xchg
adc
sbb
loop
lcall
jge
out
push
notl
fwait
lcall
and
sbb
mov
sub
call
push
cltd
sbb
movsl
xlat
bound
sahf
mov
sub
leave
and
and
xor
stc
jnp
cmpsl
jne
outsl
dec
into
stos
iret
pop
mov
test
adc
pop
mov
cltd
jle
xchg
fcmovnb
sub
add
lahf
mov
dec
xchg
jmp
out
xlat
xlat
std
pop
jno
stos
test
ret
xchg
xor
dec
lds
loopne
add
lds
pop
dec
xor
pop
mov
jo
add
into
clc
and
push
sbb
rolb
fistl
data16
lods
cmp
scas
sbb
and
dec
cmp
cs
push
dec
pop
or
jge
imul
mov
fcompl
inc
jp
cmpsb
lcall
arpl
ja
cwtl
lahf
lahf
xor
cmc
or
jb
ss
shrl
xchg
sbb
ret
js
mov
push
adc
sub
xchg
dec
bound
sub
or
subb
push
test
test
or
xor
mov
pop
mov
hlt
fstl
insb
insb
cmpl
jecxz
or
or
push
push
sbb
enter
test
addr16
out
arpl
adc
pop
repnz
adc
or
test
cmp
inc
cmp
fs
ja
addr16
mov
push
lret
and
enter
mov
test
enter
movsl
xor
outsb
imul
mov
add
es
mov
out
push
push
push
pop
pop
push
adcl
mov
and
jo
add
cmp
dec
jg
call
ret
sub
daa
xor
js
sub
mov
ret
ljmp
xor
add
pop
pop
les
daa
jecxz
in
jb
sub
xchg
xchg
ds
xchg
jle
sahf
mov
bound
dec
dec
and
add
out
loop
int3
sub
fcom
pop
out
adc
in
lret
pusha
nop
cmpsl
imul
cmp
test
inc
dec
pop
loope
aad
dec
mov
mov
pusha
cmp
ja
adc
push
rcl
xchg
xor
jb
mov
jo
fwait
aad
and
lds
in
add
daa
inc
movsl
sbb
test
lret
mov
inc
in
cmp
xchg
adc
mov
lcall
jno
jge
push
push
dec
repz
out
inc
movsb
leave
and
and
inc
pop
mov
int3
jp
arpl
fcmovnb
push
xchg
cmpl
pop
push
push
pop
xlat
mov
mov
or
mov
sub
mov
xchg
in
fs
sub
xchg
xchg
lods
mov
mov
sar
sahf
jns
or
fs
xchg
lea
sbb
hlt
fisttpll
cmp
arpl
add
je
popa
ja
sbb
stc
ss
cmp
cmp
sbb
rcl
mov
cli
adc
fsubl
mov
adcl
repnz
mov
pusha
cltd
lods
or
out
xlat
in
out
stc
fidivs
xchg
shl
push
cmp
std
out
out
sbb
cmp
adc
cmp
pop
call
jl
xchg
xchg
inc
iret
jmp
mov
xor
ret
std
jecxz
push
and
push
xchg
mov
sub
in
repz
adc
rcrl
rol
leave
xchg
testl
xchg
mov
or
repz
jge
inc
adc
jecxz
negl
pop
push
xor
sbb
or
inc
addr16
stc
xchg
jg
daa
rorl
lea
pop
mov
rcrl
fistps
sbb
add
mov
movsl
adc
icebp
fsubrs
mov
xor
inc
pop
test
jl
adc
inc
add
adc
and
sub
std
cld
in
pop
loope
int3
sti
mov
xchg
sbb
xor
ljmp
push
adc
mov
decl
shrl
jns
out
gs
movsb
xchg
push
xchg
push
or
mov
dec
popa
jg
arpl
cmp
pushf
les
inc
out
pop
pushf
stos
pop
pop
jl
insb
inc
push
pop
or
sbb
pop
xchg
mov
test
es
sub
xchg
or
fistl
and
mov
mov
add
sub
xor
or
mov
mov
and
in
mov
sar
ret
cli
sub
testb
add
adc
push
push
cmpsl
dec
test
dec
and
xor
leave
addr16
add
lds
and
mov
cmpsl
inc
dec
push
pop
or
imull
xchg
pop
jne
xlat
sub
lret
pop
pushf
inc
push
pusha
xor
fninit
cmp
adc
sub
out
lcall
xor
jnp
rorl
adc
sbb
sbb
test
faddl
cmp
mov
mulb
xchg
mov
movsb
add
arpl
dec
rorl
daa
sbb
lcall
adc
add
mov
mov
loope
inc
mov
mov
imul
cmpl
mov
icebp
mov
cmp
nop
add
in
jge
mov
fnstenv
rcrb
sub
rorl
mov
je
add
xchg
call
sub
pop
das
sar
pop
dec
inc
mov
jnp
call
lret
jae
imul
mov
sti
jl
es
mov
test
mov
adc
xchg
leave
jle
fmuls
push
arpl
out
loop
pop
ljmp
xchg
sbb
movsb
ja
sbb
out
sbb
adc
dec
cmp
pop
xchg
cmc
test
lahf
fdivs
test
dec
je
add
mov
jmp
shlb
cmpsb
add
mov
jmp
adc
dec
xchg
pop
mov
dec
jecxz
cmp
inc
out
in
iret
mov
lcall
mov
xchg
into
ja
pop
add
jnp
push
fcoml
mov
jle
xchg
lock
test
subl
ret
repz
dec
or
int
test
mov
xor
push
jmp
test
cmp
enter
xchg
inc
outsb
and
mov
sarl
mov
jne
push
dec
scas
test
mov
imul
rol
daa
and
loopne
insb
or
js
cmp
insl
leave
or
jecxz
push
fdivrs
bnd
lcall
jae
jmp
clc
cltd
out
in
call
cmpsl
adc
and
pop
jmp
adc
xchg
sbb
ss
pop
sub
addl
jbe
int
pop
cmpl
cmp
adc
aas
aas
ds
adc
xchg
dec
filds
fnsave
adc
movsl
add
xor
mov
sub
cmp
cmpsl
jnp
dec
xlat
push
jbe
mov
push
leave
pop
cmpb
test
dec
sbb
adc
js
lods
mov
sub
lret
test
cmovge
push
icebp
pause
inc
popa
lds
andl
xchg
inc
push
and
push
xor
ret
fiadds
enter
sti
imul
pop
jge
insb
push
pop
push
je
div
mov
cltd
outsl
ds
test
fisttpl
stos
inc
sbb
cli
cmp
in
cmpsb
ret
popf
roll
inc
push
mov
fwait
pop
mov
cwtl
xor
pmaddwd
sahf
cmpsl
dec
push
lods
add
mov
pop
fs
xor
popa
ds
imul
mov
in
daa
ljmp
cmpl
xor
outsl
int3
adc
inc
xchg
fistpl
outsb
in
jns
or
fdivrp
popa
inc
push
int3
xlat
cwtl
fnstsw
xchg
and
inc
scas
mull
cmp
adc
push
sbb
mov
cltd
push
xchg
popa
dec
dec
and
dec
cli
repnz
out
out
pop
adc
jg
loop
sbb
frstor
mov
jnp
scas
scas
inc
cmpsb
xchg
push
aaa
shrl
mov
mov
stos
mov
dec
pop
sahf
push
nop
or
or
test
jb
and
push
arpl
sbb
xor
pop
pop
mov
xchg
or
pop
ljmp
push
lcall
mul
push
hlt
cmp
ljmp
jmp
xor
ret
pop
or
ret
int3
mov
mov
inc
in
add
rcrl
push
lock
mov
outsl
bound
pop
mov
push
cmp
lea
sub
add
scas
inc
sbb
cltd
mov
mov
repnz
rolb
nop
pop
sub
dec
mov
in
int3
sbb
lret
imul
daa
push
shrb
and
sub
push
loope
sbb
pop
push
or
aas
das
out
fwait
mov
clc
fistpll
ljmp
scas
cmp
loope
imul
mov
fstl
movsl
ror
xor
in
inc
adc
test
push
shlb
mov
push
sti
clc
mov
pop
inc
mov
pop
xor
imul
repnz
mov
add
add
mov
imul
outsl
or
popa
push
xchg
mov
sub
movsl
inc
mov
cmp
push
je
add
ja
sbbl
push
xor
push
push
lret
stos
sbb
rcr
push
lods
jb
orb
nop
xor
and
mov
fcmovu
fdivrs
fistpl
mov
data16
fwait
repnz
jae
sbb
pop
sbb
cld
sub
mov
jmp
call
dec
es
or
fdivrp
enter
inc
aam
int3
push
xor
mov
sahf
lods
call
aaa
insb
adc
cwtl
adc
das
push
mov
stc
int3
pop
js
jnp
je
adc
pop
xchg
sub
mov
aad
xor
xor
or
mov
outsl
and
hlt
jns
sbb
imul
jp
sub
jge
pop
or
lods
std
mov
sbb
ret
nop
or
add
nop
aaa
loope
enter
xorb
jo
dec
fiaddl
je
out
cmp
pop
insl
out
aaa
test
out
xchg
lds
or
mov
xchg
into
adc
mov
pop
inc
jge
daa
ja
pop
add
fldlg2
jo
jo
xchg
cmp
xchg
gs
jbe
cmc
imul
out
out
fs
lret
movsb
pop
imul
mov
xchg
jae
or
jae
mov
ret
sub
js
push
test
and
or
ror
lea
mov
int3
divl
ror
mov
lods
add
and
decb
mov
pop
sbb
pop
jo
mov
mov
decl
cmp
dec
jns
pop
ja
pop
add
pusha
int
insl
lahf
stos
add
jmp
pop
adc
pop
addr16
mov
mov
stos
loope
sahf
into
mov
adc
cmp
out
xor
pop
stos
and
push
add
arpl
insb
in
mov
or
pop
add
cmp
pop
cmp
sub
loop
das
lods
or
push
sbb
negl
cmp
mov
jo
mov
sub
test
and
into
hlt
push
das
test
leave
xchg
lods
jbe
pop
scas
mov
in
or
out
movsb
test
adc
fs
xor
pusha
cli
pop
add
fs
xchg
dec
arpl
push
mov
sub
test
sbb
rolb
push
cmp
mov
pushf
cmc
xor
adc
in
adc
push
je
mov
clc
adc
mov
mov
mov
ficoml
push
movhps
roll
loope
sar
int
dec
sub
into
cli
push
aas
orl
sbb
or
or
test
push
mov
pop
outsb
mov
xchg
daa
cmp
sahf
dec
divb
mov
cmp
das
cld
jle
and
pop
sahf
mov
test
inc
or
fs
cmp
movsb
pop
daa
sbb
loope
in
push
ja
sub
fwait
pop
jmp
fstl
out
decb
sbb
pusha
shlb
sbb
xor
ret
enter
bound
add
aad
jo
mov
push
mov
cltd
int
imul
scas
orl
xchg
scas
mov
ja
pop
rcll
iret
cmpsb
cmp
cmp
sub
xchg
hlt
push
inc
xor
out
push
mov
push
cs
jl
mov
icebp
out
fimull
inc
mov
push
mov
gs
loop
mov
jg
enter
ret
lods
orb
dec
in
or
jns
lds
lret
daa
add
adc
pushf
sahf
call
and
mov
aas
std
and
mov
mov
xlat
stos
das
sub
sbb
stos
jnp
xchg
iret
add
push
xchg
cld
das
js
dec
insb
rorb
rorb
rcl
ret
aad
call
dec
repnz
pop
or
and
sarl
dec
adc
xchg
jno
pop
pop
pusha
add
xor
popa
push
into
lret
mov
mov
push
lss
jo
push
sbb
dec
and
inc
flds
stc
pop
mov
or
push
and
test
ss
dec
inc
int3
inc
mov
rol
and
cmp
mov
sbb
cmp
pusha
popf
or
adc
in
adcb
mov
and
stos
lods
dec
xchg
and
sub
inc
cmp
shlb
mov
mov
sarl
pop
adc
mov
push
and
mov
cmp
jo
xchg
sbb
andl
fbld
mov
addr16
pop
cwtl
popa
push
testl
jp
inc
iret
sub
aam
orb
jle
cmp
pop
mov
push
movsl
es
sbbb
bound
repz
mov
aas
cmpsl
sbb
jecxz
out
jae
mov
stos
push
jp
rclb
lret
inc
xor
and
fnstcw
add
scas
lods
jecxz
cmp
mov
xor
jl
inc
mov
mov
xchg
xchg
scas
fstps
arpl
stc
cmpsl
add
cmp
xchg
add
mov
pusha
std
adc
xchg
not
add
push
and
mov
lea
gs
lods
test
push
jmp
fwait
lret
sub
ret
cmp
add
arpl
adc
test
or
mov
subl
add
aas
lods
mul
daa
dec
ja
int3
cmp
int
adc
shlb
adc
aaa
push
cltd
cmpsl
fsub
addb
adc
repnz
pop
jg
jnp
in
xchg
les
gs
mov
mov
xchg
js
lret
and
out
push
in
jge
inc
cmc
or
sahf
inc
jne
jg
adc
jg
test
das
shl
and
fdivp
push
push
or
and
jno
inc
sub
mov
repz
fsts
cmp
inc
ret
cmp
sbb
add
push
jnp
repz
jns
push
test
dec
lahf
pop
xor
jl
scas
adc
sbb
sub
pushf
inc
mov
dec
and
mov
mov
in
les
lock
ret
rorb
dec
sbb
fiaddl
push
mov
lahf
cmp
adc
add
mov
mov
push
fwait
aad
pusha
jnp
jmp
mov
imul
dec
stc
pop
mov
loopne
cli
cwtl
jno
cmp
cmp
fcmovu
lret
xchg
push
mov
cltd
out
jmp
stos
inc
outsb
aam
jle
inc
aas
in
jp
pop
loop
xchg
std
setge
stos
lret
inc
inc
sub
sbb
pusha
aad
push
sbb
push
rorb
call
into
add
pop
pop
xchg
pop
ds
mov
or
shr
addb
cli
add
dec
adc
sub
les
push
insl
iret
push
lock
xor
lds
out
xchg
das
jne
icebp
daa
push
push
shlb
int3
push
mov
mov
imul
stc
pop
jbe
or
loopne
sbb
push
jge
mov
mov
flds
dec
sub
mov
in
xchg
popa
jne
mov
and
pushf
outsb
inc
inc
push
jecxz
adc
lahf
incb
or
fldl
pop
cwtl
xchg
and
pop
lcall
fistl
jbe
push
cmp
shrb
mov
mov
lahf
or
outsl
imul
jmp
ss
mov
mov
mov
mov
xchg
mov
sbb
cwtl
pop
lret
mov
jp
in
sbb
push
jge
sbb
mov
xchg
pop
stc
cmp
inc
adc
scas
or
cmc
xchg
jbe
aaa
sbb
movsl
xchg
mov
xor
adc
arpl
decl
xor
jg
iret
leave
push
hlt
inc
scas
xchg
pushf
sahf
inc
dec
fs
mov
iret
into
jle
cltd
jbe
jo
arpl
mov
lds
jg
pop
loope
xor
mov
push
jge
cmpsb
jns
mov
mov
stc
pop
cmp
mov
mov
and
ljmp
mov
jmp
add
mov
das
xor
mov
call
dec
push
and
sub
in
cmpps
popf
mov
fmul
inc
push
ret
fdivrl
lods
ja
pop
loopne
xor
cli
push
popa
pushf
cltd
iret
in
enter
pop
pop
inc
xchg
fistps
add
cltd
sub
adc
orb
push
lahf
fcoms
pop
push
sbb
jp
es
arpl
icebp
xchg
call
add
loop
jb
or
xchg
mov
inc
out
cmc
int
stos
lret
ljmp
mov
mov
add
cmp
fisubs
shll
outsb
inc
push
repnz
jnp
arpl
sbb
lods
cwtl
fcmovne
loop
popf
xchg
xchg
icebp
push
addr16
fcoml
pusha
inc
int3
mov
rcrl
adc
and
push
aas
mov
and
cmp
mov
out
cmpsl
or
fsubl
jecxz
add
les
rclb
cld
cmp
sahf
mov
push
xchg
std
jmp
inc
add
es
test
mov
push
mov
ja
dec
cs
or
loop
fcmovnbe
pop
cmp
pop
cmpsl
orb
jo
cs
stos
add
xchg
leave
lods
cmpsb
in
les
ljmp
xor
xor
mov
cmc
gs
cs
addl
add
sbb
mov
adc
test
lods
sbb
lea
push
mov
fisttps
push
add
mov
pop
ds
scas
out
jp
pop
hlt
xor
jmp
movsl
das
and
mov
push
out
imul
aad
push
ficoml
and
xlat
sub
pop
in
pop
mov
fimuls
cwtl
lds
int
ja
mov
adc
or
mov
adc
lods
sarb
pop
iret
bound
adc
pop
aad
sub
ret
mov
sbb
dec
movl
out
movsb
dec
or
pop
xor
sub
insb
jbe
jnp
xchg
xor
lahf
xchg
xor
xlat
incb
test
and
lods
pop
cmp
and
dec
inc
int
jbe
adc
andw
jns
int3
pop
jnp
xor
push
out
lock
jecxz
lcall
cmp
sub
lods
in
adc
test
sub
jle
sub
xlat
mov
out
sbb
mov
push
inc
sbb
jb
shrl
push
es
cltd
jg
lret
mov
imul
jmp
and
ss
jo
test
push
mov
jb
cs
iret
nop
add
jb
in
fildl
dec
push
jl
mov
rcr
int3
xchg
dec
xchg
pop
inc
push
xchg
inc
lret
cs
pop
mov
ds
inc
inc
mov
dec
mov
iret
mov
ret
in
push
push
pop
inc
jmp
dec
les
mov
jne
push
mov
push
shl
cmp
inc
ja
mov
rolb
jbe
nop
sbb
in
jp
test
data16
sar
jge
sub
cmpsl
fsubrp
mov
mov
inc
jb
xchg
adc
mov
sbb
cmp
mov
in
popa
test
test
out
cmc
lds
and
add
inc
pushf
lock
pop
sbb
ds
inc
lock
or
xor
out
and
mov
ljmp
adc
inc
push
call
repnz
inc
lahf
int3
cld
or
inc
pusha
imul
fnstenv
or
ret
jbe
adc
jp
fprem1
cli
mov
mov
sbb
push
data16
dec
scas
cwtl
lds
rclb
adc
outsl
mov
js
push
int
sub
js
dec
and
daa
js
pop
xchg
cmp
out
lcall
dec
sbb
das
fnsave
push
sbb
and
stos
icebp
lahf
add
aad
std
dec
popf
adc
iret
aas
enter
dec
push
ds
sub
push
push
xchg
icebp
add
ljmp
mov
movsb
dec
repnz
clc
aam
shll
mov
loope
xchg
sub
mov
lds
inc
out
sbb
lret
and
test
mov
pop
lret
mov
mov
adc
in
push
lret
xchg
jp
ja
xchg
mov
mov
push
pop
add
mov
mov
and
addr16
or
adc
imul
sarb
lods
jmp
xlat
pop
fdivp
or
mov
jge
dec
aaa
scas
ljmp
and
js
mov
add
int
fsubrl
add
negb
jl
and
aam
jnp
or
lret
push
dec
fs
xor
lds
dec
mulb
push
sub
cmp
push
lcall
push
fidivl
jno
int
mov
pop
shrl
push
repnz
cmp
into
bound
rcrb
jecxz
mov
jno
out
mov
jp
call
test
gs
loopne
stos
cmpsl
xor
xchg
push
push
sub
out
sub
dec
test
sub
sbb
shll
shl
lea
and
daa
adc
inc
jge
insl
add
jecxz
scas
imull
cmpsl
cld
xchg
pusha
jns
fbstp
and
jge
pop
icebp
sti
adc
cmpsb
dec
mov
add
jae
pop
movsb
ret
faddl
jle
das
lea
xchg
mov
and
dec
shrl
lahf
jp
jnp
mov
inc
popa
sahf
out
or
jbe
ljmp
adc
push
mov
pushf
sub
xchg
in
idivl
mov
rclb
mov
nop
lcall
push
cmc
xor
inc
or
or
sbb
inc
cs
femms
imul
out
ljmp
push
mov
bound
prefetch
mov
sbb
pop
push
pop
jbe
test
or
cmp
push
add
fcomip
test
mov
mov
aaa
sti
jmp
xchg
cld
mov
pop
adcl
cwtl
sub
jno
rorl
inc
iret
loopne
xchg
gs
jmp
mov
push
sbb
popa
mov
push
xor
jne
pop
push
cmp
shrb
cli
fwait
dec
cmp
xor
stos
sub
xor
xchg
sub
inc
js
mov
mov
push
fsts
sahf
dec
adc
jno
add
jmp
xor
xchg
int3
mov
xchg
ljmp
shl
fmuls
or
and
dec
mov
lods
icebp
fimull
rorb
sbb
cmp
dec
xchg
call
inc
in
jae
xor
add
jo
or
or
in
ljmpw
cmc
imul
int
insl
insl
sahf
loopne
mov
pop
sub
loopne
stos
push
sbb
je
push
loopne
inc
push
gs
pop
push
std
pop
inc
les
jl
test
testl
cmc
pop
ljmp
or
cmp
shlb
rorb
xchg
xchg
sbb
or
shlb
fsubs
pushf
fcomi
pop
or
mov
mov
popa
sbb
imul
fdiv
jnp
pop
sbb
push
mov
sbb
push
mov
mov
adc
jns
shlb
shr
mov
jne
out
push
test
fists
fcoms
cmpl
inc
sar
mov
stc
add
fdivl
jnp
aad
mov
mov
hlt
out
stc
xlat
xor
push
lret
inc
mov
or
mov
pushf
leave
mov
enter
sub
ljmp
mov
cltd
mov
imull
dec
inc
ds
jge
daa
push
mov
movsl
sub
lds
xchg
cmc
adc
cmp
rcll
sbb
xor
ss
test
iret
cld
repz
mov
out
je
bound
pop
jns
xlat
adc
push
into
dec
inc
sahf
mov
pushf
fcmovbe
jae
out
and
sbb
jle
aas
sub
jmp
dec
lret
insb
inc
lahf
jecxz
cltd
inc
push
push
inc
leave
inc
cwtl
adc
or
test
jge
dec
gs
mov
jb
inc
mov
aad
mov
cmp
repz
push
mov
lds
mov
insb
lcall
decb
cmp
mov
addb
add
cld
stos
or
pop
je
adc
ljmp
cld
or
test
test
mov
add
xor
mov
outsl
lea
imul
cld
test
add
pushw
int3
adc
mov
push
dec
into
mov
inc
xorb
add
xor
js
pop
stos
mov
filds
sub
sbb
push
stc
sub
sahf
notb
jge
cmp
cli
mov
cs
pop
es
or
xor
stos
adc
adc
jmp
jnp
xchg
outsl
ja
ret
mov
jle
rcll
sbb
je
lahf
imul
cmpsb
nop
and
inc
cmp
bound
sar
mov
mov
shll
pop
rcrb
jge
aaa
add
pop
mov
or
out
in
xchg
in
xor
inc
adc
stos
repz
pop
lods
and
movzbl
sub
sbbb
repz
daa
enter
sti
sub
lret
pop
mov
adc
or
xchg
xchg
and
mov
and
cltd
daa
or
push
jp
cmpsb
push
outsb
rclb
ror
xor
push
sub
or
inc
sub
push
sbb
or
out
sub
sub
mov
pop
imul
pop
and
mov
add
mov
inc
cltd
enter
cmpsl
mov
mov
ret
jge
movsl
jne,pn
or
lcall
aam
push
push
cmp
jns
lret
stc
cmp
xchg
mov
loope
pop
mov
mov
pop
in
pop
jl
pop
in
inc
inc
mov
pop
sbb
cmp
mov
mov
fwait
sbb
fstpl
push
bound
mov
sub
mov
aad
or
leave
out
in
jnp
adc
cmp
xor
add
decl
sbb
shr
addl
push
lods
int
mov
adc
xor
jl
jb
adc
push
jno
push
lret
stos
jns
mov
clc
push
mulb
loope
xor
outsl
stos
and
psraw
pushf
mov
insl
pop
jns
js
push
out
sub
add
mov
xchg
jp
sar
cmp
movsl
cmc
push
mov
stos
inc
mov
push
les
ja
xchg
adc
add
adc
push
cmp
dec
clc
js
loope
fdivrl
xor
push
mov
push
fwait
aam
lods
pushf
bound
aas
repz
or
enter
sbb
sbb
xor
fsub
inc
cmpsl
sbb
dec
cmpsb
rcrb
add
fcomps
mov
adc
sbb
scas
fmull
mov
rclb
mov
mov
out
dec
fcompl
bound
mov
mov
iret
insl
stc
repz
push
loopne
add
and
ja
test
mov
fldl
cli
push
loope
sub
inc
cmp
mov
xchg
mov
xor
cmp
nop
mov
outsb
xor
push
xchg
call
mov
inc
out
push
stc
xor
jb
shl
inc
push
sti
inc
lahf
inc
nop
mov
pop
imul
scas
push
addb
mov
jecxz
out
xor
mov
jbe
mov
push
insl
fs
fwait
out
es
inc
addr16
jge
sub
lock
sbb
hlt
pop
mov
testl
std
push
add
shlb
and
cmp
sub
rorb
icebp
jbe
sub
add
cmp
dec
dec
sub
daa
xchg
js
sbb
scas
orb
jne
dec
inc
sub
jo
popa
mov
in
jl
imul
dec
inc
xor
roll
js
enter
test
packsswb
mov
lea
lcall
loop
inc
leave
jns
in
cmc
test
cmp
mov
inc
js
pusha
add
gs
jecxz
out
and
jmp
rcl
cmpsb
icebp
jnp
adc
add
jg
mov
xchg
dec
loop
pusha
f2xm1
pushf
insb
sbb
test
mov
add
fwait
sub
loopne
insl
push
pop
xlat
lret
mov
mov
les
adc
dec
jmp
psubsb
jle
outsl
inc
mov
dec
lods
push
hlt
mov
hlt
xchg
and
cmp
outsb
imul
sti
adc
lea
add
adc
pop
jo
test
lret
jecxz
mov
in
add
pop
or
les
inc
daa
loop,pn
jb
jl
add
inc
iret
aaa
jp
sub
push
push
in
add
adc
ds
in
imul
dec
inc
daa
rclb
sbb
and
cmp
pop
push
xchg
imul
add
xchg
stos
incl
push
mov
inc
push
mov
mov
mov
test
insb
pusha
les
cli
push
mov
test
jo
xor
rcrl
imul
shrl
cmp
jle
adc
mov
faddp
xchg
xchg
in
dec
aaa
add
dec
lcall
test
or
iret
das
xor
and
cmpsb
out
sbb
xchg
out
les
ja
lahf
jo
inc
pop
into
pop
fcoms
fs
ss
stos
jnp
pop
push
mov
aaa
fwait
jle
push
sti
iret
or
setnp
mull
xchg
inc
mov
lea
push
jecxz
mov
scas
fisubl
mov
and
xor
inc
xchg
cmp
mov
out
pop
iret
push
mov
decl
leave
pushf
sub
mov
pop
pushf
fildll
add
adc
dec
pop
fnsave
mov
sarl
adc
repz
hlt
cmp
inc
pop
rol
enter
dec
popf
push
fwait
pop
aam
pop
bound
cmp
sub
or
sub
or
out
cmp
imull
push
sbb
popf
cmpsb
sub
daa
clc
cmp
negb
inc
vrndscaleps
in
testb
cltd
dec
mov
sub
mull
bound
je
mov
or
inc
jecxz
push
and
push
or
out
js
call
xchg
stos
shlb
into
ds
mov
repnz
shll
pop
jg
imul
pop
pop
dec
fsts
fmulp
inc
dec
jmp
scas
jg
test
xchg
mov
and
adc
mov
add
and
push
mov
or
inc
pop
outsl
cmp
push
jp
sub
dec
pop
ss
cmpsb
or
test
adc
adc
lds
xchg
jp
jp
mov
jg
inc
dec
stc
sarb
cltd
pop
rcl
pop
jl
dec
push
jb
xchg
das
cli
cmc
into
roll
mov
mov
imul
fmull
jne
popf
adc
push
mov
popf
fidivs
and
popf
or
mov
imul
clc
clc
push
jb
inc
dec
jp
sbb
lcall
sbbb
lods
mov
out
sub
inc
pop
inc
shll
dec
repnz
aas
inc
xchg
mov
mov
clc
repz
inc
das
or
ret
stos
mov
or
orl
testl
push
add
cmp
mov
pushf
arpl
mov
icebp
fwait
mov
xchg
outsb
sub
in
add
cmp
or
mov
mov
jg
aad
fildll
adc
adcb
lock
push
mov
addb
cmp
mov
adc
les
and
or
sub
xchg
xor
jbe
andb
jmp
jg
out
pop
nop
dec
push
mov
dec
mov
adc
inc
loop
pushf
fsubl
adc
fidivs
aas
addr16
add
fidivrl
dec
fnstsw
ss
xor
popf
mov
mov
imul
js
mov
call
push
xor
pop
stos
and
fcomip
pop
stos
add
jnp
mov
adc
push
push
pop
in
mov
fisubrs
cwtl
imul
sbb
sbb
loop
sbb
and
or
iret
xor
cmpl
out
rolb
or
ret
push
mov
leave
mov
outsb
pop
shl
adc
jle
xor
pop
sbb
sub
add
daa
stos
cs
cmp
repz
or
aad
push
call
sub
jns
ss
enter
sub
inc
mov
faddp
mov
push
mov
mov
pop
mov
aas
lods
inc
mov
or
dec
jl
dec
je
inc
and
fldlg2
mov
scas
mov
xchg
mov
adc
mov
nop
adc
aam
je
cmp
pop
dec
sub
or
outsl
imul
pushf
xor
inc
pop
ljmp
fidivrl
xor
aad
iret
mov
ret
stos
int
mov
inc
mov
shlb
mov
dec
pop
ret
adc
adc
lret
pop
mov
mov
mov
daa
aam
sub
lahf
mov
and
lds
sub
xor
cmp
cmpsl
or
push
leave
aam
cmp
push
cmp
add
and
or
popa
pop
mov
pop
inc
cmp
mov
call
xor
push
ds
adc
orb
cwtl
add
lcall
dec
adc
rol
rcll
push
int3
sbb
pop
jmp
mov
mov
jle
adc
fbld
pop
ljmp
mov
insl
addr16
adc
sbb
enter
ss
out
inc
aas
fidivrs
pop
in
push
enter
and
jae
dec
clc
xorb
push
aam
push
jns
push
lret
enter
es
pop
flds
jmp
jnp
push
stos
adc
pop
fimuls
outsb
jmp
xchg
les
hlt
adc
cmp
out
inc
mov
or
dec
fsubrl
insb
and
fimull
pop
adc
push
dec
mov
loopne
pop
mov
push
mov
shl
and
or
mov
and
mov
clc
inc
push
push
xor
or
or
mov
in
outsl
inc
int
lock
mov
lcall
stos
scas
repnz
das
sti
inc
repz
cmp
inc
mov
add
lods
adc
mov
lds
call
sub
nop
mov
shlb
dec
ret
dec
ljmp
xchg
push
dec
lret
mov
addr16
xchg
push
gs
mov
jno
imul
lds
adc
bound
mov
add
sub
push
jp
adc
fmul
shlb
shrb
ret
push
mov
push
gs
lea
ljmp
rolb
sbbb
xchg
lcall
jg
mov
pushf
icebp
xchg
push
add
aas
enter
pop
inc
repnz
xchg
loopne
gs
xchg
and
xchg
es
ja
mov
mov
sbb
dec
jns
jae
cmpsb
sub
adc
pushf
push
and
adc
rorl
inc
jge
dec
lcall
adc
sbb
fdivs
movaps
das
gs
pop
mov
ja
movsl
lea
js
jns
mov
mov
popa
int3
mov
ret
into
pop
ror
mov
or
imul
adc
repnz
and
mov
cwtl
sbb
xor
sub
mov
js
pop
jns
xorb
sti
in
sub
lahf
popa
mov
sahf
pop
into
rcr
scas
jbe
xacquire
cmp
pop
mov
fs
sar
repz
sub
add
sbb
cmp
lock
idivb
push
lods
js
inc
xor
lods
addb
and
ret
mov
pop
andb
das
scas
je
ja
inc
jp
and
shll
xor
jno
sbb
inc
lods
xor
push
fimuls
ds
aas
out
or
stc
sub
aad
push
push
sbb
pop
or
sbb
mov
std
or
jae
aam
jmp
pop
pop
mov
push
xor
out
xchg
push
hlt
jne
mov
repz
inc
or
int3
in
popf
pop
pop
and
xor
cmp
cli
jo
popa
sbb
shlw
arpl
adc
push
orb
pop
lcall
out
jne
mov
outsb
dec
shrl
add
xchg
mov
jno
es
push
xchg
adc
das
or
ds
add
es
jns
loopne
cmp
popa
jbe
imul
lock
pushl
adc
fwait
das
test
les
fisttps
popa
mov
cmpsb
aam
les
mov
shll
xchg
jnp
imul
mov
mov
test
into
add
and
pop
jmp
ss
lds
icebp
stos
js
les
ret
adc
jne,pn
adc
aam
xlat
movsl
push
ret
rcrb
dec
dec
jb
pop
xchg
inc
sbb
or
daa
push
mov
faddl
mov
sbb
or
add
enter
inc
add
jle
idiv
in
lock
jbe
js
xchg
add
out
imul
and
daa
loopne
imul
adc
lods
int
xchg
mov
or
mov
fldenv
addl
sbb
mov
out
mov
mov
dec
dec
outsb
xchg
sub
pop
mov
out
pop
adc
pop
outsl
pushf
ss
mov
dec
shll
jne
cwtl
jle
jp
dec
insl
sbbb
ljmp
sbb
add
pop
add
sub
pop
loopne
test
inc
add
cmp
lret
and
pop
enter
cmpsl
ficoms
sub
mov
xor
pop
mov
sti
cmp
aam
test
and
inc
cmp
aad
lea
out
pop
xchg
add
sub
aam
out
imul
test
mov
mov
jnp
and
push
and
cmp
aas
insl
adc
sub
mov
pop
popa
push
inc
push
push
subb
or
jp
or
incl
push
pop
rcll
mov
ds
cmp
and
fnsave
loope
test
sbb
ljmp
out
fwait
or
es
decb
popf
hlt
adc
aad
xor
pop
xor
and
xchg
testb
pushf
mov
and
add
lock
clc
cmp
mov
xor
cs
mov
pop
dec
pop
test
ja
sub
adc
in
mov
jecxz
lret
sahf
push
inc
sbb
pushf
inc
xor
ss
icebp
stos
sub
cmp
shl
mov
sub
fldln2
sti
test
movsl
pushf
push
inc
ss
test
push
orl
sub
jecxz
test
push
mov
mov
jg
dec
or
outsb
fcompl
xchg
cmp
gs
and
cmp
push
mov
xorb
cmp
mov
pop
mov
inc
pop
push
xor
sti
sub
testl
jmp
mov
dec
push
push
popf
jecxz
sbb
shll
or
and
add
insl
stc
fsubr
sbb
cmc
je
loope
push
sub
jmp
cmpsb
cmp
aad
shll
stc
inc
icebp
mov
jns
or
dec
jnp
adc
jno
adc
movsb
int3
sbb
aam
jno
mov
movsb
pop
dec
mov
add
inc
mov
lds
insb
push
and
cmp
js
outsl
jae
sbb
hlt
jo
pop
inc
inc
insb
outsb
sub
idiv
testb
xor
sbb
mov
inc
or
ret
shlb
inc
decl
or
mov
dec
roll
ds
push
and
push
xchg
pop
add
or
sbb
hlt
cli
and
in
xchg
add
jbe
lea
xor
cmpsb
inc
orb
addl
ds
aaa
mov
push
cmp
add
lods
xor
mov
out
cmc
out
fimuls
lock
xchg
sbb
mov
adc
or
scas
jge
jbe
pop
outsb
and
push
xacquire
xor
dec
stos
add
cmc
ljmp
scas
jns
or
cld
mov
mov
xchg
hlt
cmp
gs
pop
inc
jmp
cmpsl
sbb
adc
jo
dec
cmc
inc
movsb
add
or
push
nop
mov
rcll
or
test
je
rorb
scas
mov
sub
mov
in
sub
loopne
shlb
addb
xlat
sub
ljmp
dec
sbb
cmc
xor
cmc
adcl
and
sub
lcall
cli
sbbl
test
mov
lock
stos
rcrb
out
inc
call
dec
clc
mov
stos
pop
add
sub
mov
or
test
je
out
test
rorb
pop
xor
pop
mov
fs
xchg
cltd
ret
mov
xor
ds
xor
and
push
je
mov
fs
imul
shr
sahf
add
sub
jnp
pop
sub
jns
mov
out
bound
movsb
test
stc
lahf
sahf
pop
pop
fwait
dec
push
jo
pop
dec
dec
lock
xor
push
pop
daa
cld
push
cmpsl
xor
sahf
lods
add
das
xor
cld
je
mov
xor
cs
mov
and
cmp
jle
in
test
arpl
add
in
inc
pusha
cs
fdivl
pop
xlat
incl
xor
scas
sub
inc
dec
pop
adc
mov
cmp
call
add
test
push
mov
mov
or
push
jb
push
frstor
adc
mov
cltd
ficomps
imul
cmp
xchg
inc
xorl
xchg
pop
test
out
fiadds
cltd
xor
inc
cltd
mov
mov
xchg
sbb
jmp
and
and
push
add
dec
sub
int
adc
movsl
dec
or
test
push
sbb
mov
sbb
push
mov
mov
xchg
sbb
jno
cmp
xchg
sub
add
arpl
cli
outsb
lods
pop
pop
int
add
adc
lods
imul
push
fistps
iret
xchg
mov
push
cltd
adc
ss
rcl
mov
sarb
push
divl
and
xchg
mov
mov
out
mov
sbb
sbb
pop
jb
dec
out
xor
rorl
pop
adc
std
dec
shl
xlat
fisttpl
mov
fdivl
mov
mov
out
js
and
shlb
xchg
mov
and
inc
jae
pop
add
sub
data16
xchg
aas
push
sub
add
xchg
aad
icebp
or
fdivr
mov
inc
inc
pop
pushf
mov
sub
add
loope
inc
jle
pop
push
mull
xor
mov
ficomps
fisttps
or
dec
cmp
mov
add
jecxz
insb
push
negl
adc
cs
cs
out
dec
ja
lds
mov
frstor
lahf
out
nop
xchg
or
pop
xchg
out
andl
mov
push
add
xlat
pop
sbb
push
dec
adc
es
jl
mov
mov
ljmp
sbb
cmp
adc
lcall
mov
dec
out
cmpsl
fdivl
addb
mov
inc
sub
pop
je
dec
arpl
pop
adc
sub
inc
inc
icebp
pusha
cld
cmpsb
pop
and
jge
sbb
or
ret
aam
repnz
xchg
fldcw
cltd
sahf
lea
xor
lcall
lahf
icebp
aaa
sub
rcr
shl
inc
mov
and
and
dec
sub
xor
adc
jb
inc
out
std
push
filds
xchg
dec
clc
out
push
rcrb
rol
xchg
sbb
fwait
cmpsl
push
icebp
mov
and
fwait
dec
xchg
scas
or
adc
add
mov
sub
out
aad
xor
into
ja
jl
dec
cwtl
rorl
sti
push
ror
cld
mov
xchg
stc
inc
addr16
add
sbb
clc
push
and
jmp
mov
repz
lahf
xor
loop
pusha
ljmp
insb
dec
jecxz
mov
sbb
test
mov
sub
adc
or
xchg
addr16
adc
sub
adc
rorl
fisubrs
and
scas
mov
jg
test
mov
les
xchg
dec
repnz
cld
dec
xor
sbb
outsb
and
loop
icebp
or
int3
cltd
pushf
shll
std
inc
xchg
inc
jge
lods
mov
mov
dec
and
add
xchg
mov
add
inc
pushf
cld
sarb
mov
fildl
aad
sahf
cmpsl
pop
xor
mov
and
je
aas
cmp
add
fsubs
daa
lahf
cmp
mov
pop
cmp
sub
push
push
divl
ds
sbb
inc
lret
adc
fisttpll
call
repz
mov
jno
stc
es
push
mov
lods
movsl
ret
test
inc
inc
mov
cmpb
jmp
rclb
inc
rorb
mov
pop
popf
cmc
pop
addr16
mov
call
xor
or
repnz
scas
and
cltd
mov
cmpb
jl
mov
dec
lcall
subb
xchg
push
ficomps
addr16
fsubs
imul
xchg
mov
lock
aad
jns
mov
mov
sar
les
stos
fisttpll
ret
aaa
mov
cmpsb
jle
add
cmp
inc
pop
sarl
nop
sub
sub
jmp
jne
cmc
cmp
mov
jo
outsb
mov
lret
in
mov
inc
inc
push
insb
jge
std
xchg
lcall
lcall
mov
or
dec
inc
adc
xlat
mov
pop
pop
enter
xchg
inc
scas
cltd
popf
ss
out
mov
stc
sbb
jmp
test
dec
lahf
outsl
addl
mov
ss
mov
pusha
rcll
fs
inc
mov
cmc
inc
inc
mov
adc
xor
std
in
add
cs
adc
mov
fsubrl
jb
mov
mov
sbb
mov
jle
xchg
mov
push
das
fwait
popf
inc
ss
mov
rcrl
sbb
push
xchg
mov
mov
mov
sahf
pop
outsb
cmp
clc
inc
push
adcb
test
jle
cmp
mov
mov
inc
sub
popa
and
pusha
sub
mov
mov
mov
icebp
mov
or
lds
lret
or
in
jns
mov
or
cmpsb
xchg
cmc
test
data16
aad
ds
rcrb
mov
or
stos
mov
sbb
addr16
in
adc
insl
xchg
xchg
gs
jno
add
jmp
inc
dec
xchg
inc
add
pop
xchg
test
aas
push
dec
xor
push
in
inc
int
adc
add
cmp
mov
mov
mov
xor
push
mov
cmp
scas
test
movsl
sbb
inc
jmp
adc
outsb
and
push
push
popa
into
push
lds
pop
dec
nop
cmp
cmp
pop
repz
inc
lret
fxch
fnsave
or
pop
dec
into
add
mov
dec
pop
shr
jp
gs
fprem1
icebp
test
or
lret
loope
dec
dec
leave
loopne
mov
and
mov
aam
cmc
lods
or
mov
add
xlat
sbb
sub
lds
sbb
push
lock
je
mov
xor
dec
mov
or
sbb
mov
ljmp
test
jg
push
sahf
inc
rclb
sahf
jne
push
mov
mov
xchg
mov
xor
jo
pushf
scas
ret
cmp
cmp
loopne
sbb
xchg
or
cmpsl
in
scas
inc
lock
rcll
ljmp
jbe
adc
and
add
repz
mov
push
dec
cmp
cmp
leave
inc
sub
adc
dec
out
cwtl
bound
dec
mov
dec
xchg
movsb
push
aaa
mul
and
and
stos
dec
inc
xchg
xchg
mov
dec
cltd
std
pop
dec
xor
or
cmp
mov
xchg
outsb
les
enter
push
xor
aam
lea
pop
push
jecxz
in
scas
pop
sub
aas
stos
nop
sahf
lea
mov
dec
out
fadds
ljmpw
and
jl
popa
outsl
jecxz
xorb
or
movsl
dec
mov
in
aad
cmpsl
ss
mov
daa
pusha
lods
gs
fsubrs
lret
push
add
sub
add
enter
into
push
jns
sti
stc
stc
dec
movsb
mov
push
or
add
les
xchg
and
cmpsl
add
xor
and
add
xchg
movsl
scas
loopne
cmpsb
add
pop
mov
jle
sar
jo
lcall
imulb
or
xchg
ret
sbb
dec
mov
add
arpl
push
lret
jg
repnz
ja
push
ret
sbb
arpl
dec
repz
rcrl
sarb
out
roll
lea
ja
sbb
push
sbb
inc
push
adc
andl
lea
lds
lahf
mov
adc
mov
inc
insb
sbbl
out
jnp
call
cmp
int
mov
jnp
jns
pop
pop
hlt
in
rol
sahf
dec
adc
lret
lret
add
inc
mov
lret
sbb
ds
mov
out
sub
cmp
in
in
stos
jle
sub
jae
push
pop
adc
aas
or
and
pop
adc
inc
cmp
jnp
and
mov
jne
enter
jo
bound
les
das
jl
add
mov
dec
sbb
cmpsl
ja
push
pop
outsb
sub
inc
aad
push
sti
stos
jmp
sub
xor
out
mov
xchg
out
mov
movsb
or
sahf
sub
pop
inc
adc
xor
dec
mov
jns
seta
rorb
jae
push
xor
addr16
call
xchg
xchg
add
or
test
inc
shrl
adc
push
add
push
test
mov
bound
push
xchg
jge
push
stos
jp
push
sub
add
pop
jl
addr16
sbb
sbb
mov
fstl
pop
pop
cmp
push
mov
outsl
sbb
movsl
in
ljmp
jmp
pushf
pop
mov
icebp
mov
push
mov
lock
das
jo
enter
cltd
push
lahf
mov
ja
lret
out
cs
sbbl
outsl
sub
push
aad
insb
and
mov
xchg
cs
add
adc
and
pop
mov
jge
or
inc
fstps
jmp
sti
push
cmpb
int3
gs
std
mov
repnz
inc
cmpsl
sbb
xor
lock
jae
mov
shl
scas
out
jb
cmp
mov
pop
aam
jmp
push
push
das
rcll
sub
lods
mov
idivl
imul
test
cmc
daa
popf
pop
inc
or
push
ret
sahf
mull
dec
imul
and
xchg
pop
lock
in
cli
mov
mov
mov
aam
add
push
inc
js
aam
push
rcr
mov
sbb
push
test
clc
in
xchg
push
lods
popf
and
push
pop
call
nop
xor
lcall
mov
xchg
cli
add
mov
xchg
int
and
sub
enter
mov
pop
jle
xchg
xchg
out
or
fsubrs
outsb
push
mov
cmc
add
xchg
fnstenv
xor
jns
ja
mov
ss
sbb
pusha
jb
aaa
mov
inc
into
test
insl
lock
jle
push
and
push
pop
and
add
cmp
imul
mulb
mov
mov
popf
pop
jge
xor
pop
jo
pop
insb
mov
pop
xor
and
xlat
lret
lds
jo
es
xchg
pushw
divb
jmp
fwait
daa
lret
push
bound
and
ja
xor
dec
ja
or
lods
pop
aam
ss
lods
enter
int3
push
mov
adc
push
mov
out
xchg
sub
pushf
hlt
loop
ret
mov
out
nop
or
cwtl
stc
add
adc
addr16
icebp
test
out
rolb
dec
arpl
inc
add
out
test
fidivs
xchg
in
pop
cmp
cmp
fisttpl
std
dec
sub
sbb
outsb
cli
or
mov
orb
out
call
dec
push
pop
xor
cltd
insl
rcrl
cmp
shl
sub
mov
mov
or
cmc
mov
rcl
fidivl
mov
xchg
subl
loope
dec
and
addr16
mov
pusha
jae
inc
leave
sti
scas
ja
jae
lods
inc
jb
shlb
popf
sbb
insl
es
call
mov
mov
rolb
inc
push
mov
arpl
mov
jbe
repnz
add
addr16
sbb
mov
dec
mov
leave
and
andb
in
xchg
mov
ret
bound
mov
pop
mov
cmp
call
fcom
out
in
inc
int3
cmc
repz
call
xchg
rclb
push
sub
mov
mov
aas
and
sub
mov
shrb
mov
push
cs
dec
cwtl
dec
pop
push
sbb
xchg
popf
call
cs
jbe
jmp
in
push
dec
push
xchg
das
mov
filds
std
and
xchg
xchg
fldcw
mov
inc
xor
fsubrp
add
mov
and
or
sarl
push
mov
jne
arpl
adc
cmovae
sbb
adc
les
dec
jecxz
daa
adc
sbb
sub
aam
and
stc
imul
cmpsb
xor
fistpll
or
addr16
xor
add
xchg
mov
lahf
into
lds
scas
jns
cmc
xchg
adc
inc
and
pop
pusha
mov
rolb
mov
lret
lret
inc
arpl
sbb
inc
push
mov
add
mov
pop
mov
pop
adc
mov
push
divb
mov
aam
into
add
and
in
inc
loop
xchg
push
sbbb
pop
imul
jae
mov
das
sbb
sahf
mov
outsl
jp
or
dec
mov
stc
sahf
fs
inc
jo
dec
in
pop
shrb
dec
push
dec
ja
addl
icebp
in
into
in
sbb
xor
test
cmc
push
sbb
lret
sbb
adc
scas
mov
insb
pop
or
push
ja
aas
adc
leave
xchg
loopne
out
stc
cmp
pop
pop
nop
mov
push
hlt
inc
pop
sbb
lods
bound
jg
inc
ss
fwait
sti
loopne
in
out
aad
fwait
rcl
sub
filds
jno
leave
push
mov
sub
xorl
stos
icebp
mov
icebp
mov
mov
cmp
outsb
xchg
in
push
mov
dec
iret
mov
fadd
in
ficoms
lds
push
mov
or
xor
cmp
out
arpl
faddl
test
call
adc
push
push
sub
cmp
mov
or
xor
lahf
sub
push
les
fcoml
test
jne
push
pop
rcr
cmp
sbb
and
cmp
imul
and
jns
push
jo
das
push
addr16
fisubl
ror
lcall
mov
mov
and
in
sbb
icebp
mov
xchg
and
mov
dec
pushf
xor
xchg
xchg
sbb
out
out
loopne
cmc
outsb
mov
idivb
cld
pop
lahf
movsb
and
js
iret
sub
push
or
call
xchg
push
sub
sub
loop
inc
lret
mov
pop
jle
pop
icebp
scas
adc
or
xchg
sbb
sbb
add
jne
lods
pop
push
xchg
repnz
shl
mov
and
xor
fbld
push
sub
jl
and
in
xchg
lcall
aad
cmp
mov
sbb
dec
cld
jmp
mov
aaa
xchg
sub
mov
mov
ror
xchg
sbb
addr16
dec
fiaddl
cmp
lods
jg
inc
cmp
mov
jae
jno
mov
jnp
aaa
mov
or
mov
sbb
lea
push
mov
add
in
cli
or
popf
inc
add
fdivl
cli
mov
fwait
xor
and
pop
scas
xchg
ret
leave
dec
jge
xor
jge
lret
icebp
inc
add
mov
rorb
push
in
imul
ret
mov
fmul
mov
sbb
push
mov
pushf
test
or
xchg
inc
nop
cmp
mov
push
mov
push
sub
sub
scas
jbe
repz
pop
pop
js
mov
xor
in
ret
dec
mov
jge
dec
cmp
inc
lcall
jle
push
sub
ds
lock
cmp
jecxz
insl
or
pop
push
inc
xchg
lcall
movsl
imul
popa
je
pop
inc
arpl
xor
movb
out
push
iret
push
lods
adc
or
test
add
xchg
inc
aas
sti
push
ret
mov
mov
xchg
jae
in
xchg
in
outsl
sub
hlt
xchg
push
sub
cmp
mov
sub
outsl
jo
into
and
push
xor
fstpl
add
test
pop
mov
mov
cmp
jnp
testl
sub
dec
adc
test
cmpsl
xchg
lods
stc
or
add
mov
aam
sub
arpl
ja
or
mov
adcb
movl
jge
movsb
sub
pop
pop
adc
xor
fistps
sub
pop
mov
sbb
out
stos
aad
test
es
fbstp
and
or
sub
das
pop
adc
inc
cli
rcl
jbe
lret
rcrb
jb
mov
lds
sub
push
stc
in
adc
mov
lret
int
rcrl
adc
test
sbb
mov
xor
xchg
scas
popa
je
ds
sbb
add
loope
andb
loopne
mov
xchg
imul
pop
fldl
jae
cmpb
nop
aam
mov
inc
fadds
mov
fs
ror
mov
fwait
jg
rcrl
int3
cltd
cli
add
lret
das
push
out
mov
inc
add
sbb
xchg
mov
jge
stc
dec
jnp
movl
push
fwait
push
sub
mov
bound
xchg
ds
adc
outsl
dec
sbb
push
fdivrs
outsb
push
in
mov
xor
jle
mov
pop
xchg
adc
aam
ljmp
lds
cmpsl
pop
subl
in
inc
push
jg
cmpsl
push
sbb
cmpsl
loope
pop
inc
into
divl
scas
xchg
jb
out
call
sub
cmp
dec
out
fisttpll
pop
mov
ficompl
add
dec
xchg
imul
fcompl
mov
out
aas
fcmovu
xchg
cltd
insl
adcb
loopne
cmpsl
xchg
and
leave
movsl
daa
inc
or
out
push
sarb
stos
jo
push
in
jns
daa
pushf
enter
lcall
sbb
adc
dec
test
add
pop
dec
lcall
in
lret
sbb
push
daa
jnp
rcrb
lods
cmpsb
xchg
sub
sbb
imul
icebp
dec
lea
popa
sub
xor
adc
dec
cs
scas
pop
negl
inc
data16
mov
adc
xchg
outsl
lods
neg
popf
mov
jo
call
add
sbbl
dec
in
mov
and
dec
jmp
mov
jp
jmp
sub
out
clc
jb
inc
sub
or
into
cld
jne,pt
pop
push
stos
dec
xchg
test
mov
pop
dec
mov
jg
sub
stos
lret
scas
cmp
jge
sub
mov
pop
dec
sarl
test
inc
call
fisubl
out
sbb
adc
push
sub
xchg
pop
cmpsb
push
push
lods
out
jne
in
int3
mov
ja
cmpsl
and
push
adc
incl
ss
out
mov
sahf
cmp
pop
jne
cmp
dec
aad
enter
hlt
adc
push
add
stc
test
mov
ret
repnz
mov
sbb
dec
push
add
outsb
hlt
xlat
mov
jnp
xor
js
lods
stos
xor
jno
test
jge
xor
cmp
rcr
jne
adc
out
cs
jbe
push
mov
repz
ret
or
cwtl
mov
mov
test
stc
rcll
xchg
movsl
xchg
out
ljmp
std
xchg
pop
out
sbb
jae
je
push
mov
pushf
mov
lods
inc
fucompp
lock
jb
insb
test
mov
pop
jecxz
cmp
and
mov
mov
pop
sahf
pop
jg
push
nopl
pop
fidivs
loopne
pop
cmp
and
cmp
je
mull
test
jne
ljmp
jmp
test
inc
pop
and
xchg
xor
push
pop
iret
push
adc
pop
and
filds
dec
xor
into
repnz
add
imul
mov
inc
nop
out
iret
jp
xchg
xchg
mov
fwait
ljmp
arpl
xchg
test
roll
and
ljmp
sbb
add
lcall
add
test
cmp
jns
push
jmp
mov
pushl
add
lret
cmp
sbb
sub
out
paddd
stc
or
insb
mov
pusha
fldl
in
dec
lret
ds
adc
jl
inc
adc
mov
mov
push
and
mov
repnz
add
test
dec
pushf
mov
fs
add
js
jnp
outsl
mov
fbstp
cld
xor
or
out
jb
pusha
push
ja
push
xchg
insl
jnp
test
js
push
inc
and
fs
jo
in
sbb
fdivr
dec
aam
add
mov
orl
jg
jecxz
and
enter
popl
aam
cmp
call
lds
aad
pusha
mov
push
jne
ret
fsubl
pusha
xchg
test
or
push
in
sti
jp
loopne
leave
popf
js
repz
xchg
ret
sub
dec
mov
enter
cmpsl
add
into
add
ja
add
xlat
lds
push
cltd
and
ljmp
jns
dec
xchg
add
dec
cltd
add
es
mov
xchg
inc
les
inc
pusha
decl
add
adc
in
mov
or
adc
cmp
xlat
xchg
sub
out
cmp
sbb
dec
movsl
test
dec
jns
mov
scas
dec
lods
frstor
ja
mov
adc
mov
pop
iret
xor
mov
add
dec
mov
and
cmp
roll
fs
mov
nop
lret
mov
cmp
cmc
mov
mov
mov
data16
add
mov
gs
push
jb
push
push
adc
add
dec
fnstenv
jle
pop
push
icebp
add
fwait
mov
push
lods
sbb
push
push
icebp
fcomps
ljmp
insl
mov
push
aaa
pop
pop
rol
pusha
cltd
pusha
and
dec
jno
cmc
sbb
sbb
call
inc
lcall
test
dec
inc
das
dec
aaa
mov
adc
or
mov
int3
cmp
hlt
and
jmp
dec
mov
aas
sub
sub
cmpsb
push
and
push
cmpb
jmp
pop
xchg
call
fs
shlb
xchg
mov
sub
mov
cltd
jmp
fstl
fs
repnz
subl
ret
rol
inc
xchg
subl
dec
push
rol
push
and
icebp
mov
aam
mov
shlb
adcl
mov
int
or
push
add
repnz
jp
in
stos
mov
scas
xchg
lahf
push
mov
insl
mov
mov
sub
xchg
inc
pusha
xchg
mov
loope
enter
jmp
cmpsl
stc
adc
cmp
mov
repnz
scas
adc
and
push
push
add
mov
jl
xlat
pop
test
ds
or
pop
jbe
mov
xchg
loop
mov
add
ds
pop
fmull
pop
and
cmpsb
mov
mov
mov
addr16
gs
adc
loop
outsl
push
into
movsb
fisubl
push
fs
cli
in
jp
fimuls
dec
pop
repnz
xor
inc
flds
decl
fisubl
mov
cmp
ja
mov
jecxz
mov
adc
mov
std
sbb
lea
pop
mov
jns
dec
les
pop
and
adc
xchg
in
mov
xchg
cmpsl
sbb
nop
outsb
popf
jg
lret
mov
aad
nop
sub
xchg
pop
rol
ficoms
nop
shlb
add
popf
stos
add
movsl
mov
lahf
push
clc
mov
outsl
push
scas
movsl
inc
adc
nop
out
cmpsl
sarb
lods
mov
mov
jno
movsb
jno
test
inc
sub
fwait
mov
aad
or
dec
or
loop
inc
push
add
leave
andb
neg
dec
enter
jmp
ret
rorb
adc
xchg
outsb
fildl
int3
push
xchg
xchg
xcrypt-ctr
cmpsl
cltd
rcrl
in
add
hlt
or
or
mov
cmpsl
push
lods
call
rcll
inc
mov
pop
decb
lock
lcall
and
clc
loopne
sbb
loopne
fcoms
xlat
loopne
aad
mov
aad
push
test
mov
xchg
mov
inc
adc
cwtl
gs
add
adc
mov
sbb
pop
rclb
cmp
cmp
cmp
sub
inc
jecxz
lcall
icebp
mov
cmp
jns
daa
mov
rclb
push
xchg
xchg
mov
mov
mov
loopne
lods
add
mov
add
loopne
test
push
jbe
fwait
ds
jg
hlt
adc
mov
xlat
mov
xchg
pop
sub
cmc
jns
push
jo
mov
pop
dec
mov
mov
or
and
daa
jnp
add
jmp
pop
mull
dec
pushf
xchg
push
sbb
cmc
jle
shlb
nop
push
testb
hlt
imul
imul
cmp
add
repnz
push
fisttpl
adc
outsl
jno
cmp
mov
and
push
xor
push
shrl
sub
icebp
push
nop
add
test
push
mov
inc
loopne
xchg
adc
sub
pushf
aaa
pop
pop
mov
mov
insb
movl
stos
jecxz
repz
push
mov
cmpsb
lea
dec
enter
jge
add
sub
push
cmp
mov
cmp
and
mov
cmp
sub
popf
pop
adc
cmp
shll
mov
adc
pusha
ficoms
test
push
and
pop
mov
add
cmpsb
dec
inc
rol
leave
pop
dec
shrl
lret
or
test
mov
dec
xor
mov
fisubrs
dec
push
and
daa
bound
loop
push
mov
inc
in
xchg
add
repz
push
js
pop
xor
cwtl
pop
arpl
aas
fldl
pop
aad
jmp
jge
ja
leave
xchg
or
cwtl
ficoml
push
mov
dec
push
push
out
lds
add
jecxz
lods
mov
leave
outsl
in
or
xchg
popf
mov
aad
fdiv
dec
lock
insl
insb
mov
fdivrl
push
sti
fs
sub
outsl
cmp
imul
xchg
iret
push
js
mov
or
mov
inc
cmp
sub
mov
fildl
pop
adc
push
inc
je
pop
cmpsb
divb
sahf
xchg
aas
orb
jb
pushf
push
inc
dec
or
mov
push
mov
jg
test
stc
adc
dec
adc
std
sarl
mov
pushl
add
inc
mov
aaa
or
xchg
cwtl
popa
jbe
lret
fdivl
sbb
and
enter
dec
pop
or
shll
stos
pop
or
leave
inc
sahf
outsb
rcr
push
scas
es
out
cmc
stos
aam
xor
and
jp
jmp
in
jg
fmul
pop
rcl
or
sub
and
pusha
sub
rolb
daa
cli
in
mov
and
jnp
push
cmp
inc
mov
fsts
inc
dec
inc
aaa
loop
loopne
mov
mov
loop
adc
push
lods
push
loopne
mov
cmp
adc
cmp
adc
scas
jge
in
jmp
lods
and
scas
enter
ret
adc
adc
nop
lahf
lods
sbb
push
cmp
sub
repnz
ror
mov
icebp
mov
ds
dec
xor
into
xchg
mov
add
loope
cmp
call
loope
outsl
divb
int
add
rcrb
cli
das
sbb
adc
pop
and
mov
js
lods
cmp
push
pop
rorb
into
pushf
push
data16
js
shl
enter
adc
mov
push
lock
push
add
ss
movsb
mov
icebp
jg,pn
dec
mov
stos
sbb
call
sbb
test
ljmp
test
lock
out
jne
or
sub
ljmp
jae
mov
icebp
pop
in
arpl
leave
or
sbb
mov
jnp
loope
push
mov
nop
sbb
sub
pop
mov
mov
gs
mov
fnsave
sbb
and
mov
cmp
xor
mov
loop
adcl
pop
sahf
popa
test
fidivrs
call
sub
dec
cli
fisubrl
je
mov
shlb
pop
and
int3
insl
insb
dec
aas
mov
mov
push
leave
enter
enter
test
sbb
out
jno
mov
adc
sbb
clc
testl
out
test
inc
mov
xorb
jb
sbb
inc
insl
add
bnd
mov
mov
lods
dec
popa
loopne
test
notb
aam
iret
sbb
insb
push
jge
hlt
stos
test
int
or
mov
inc
pop
es
loope
ljmp
fstpl
cwtl
out
sbb
push
in
adc
xor
mov
push
push
faddl
ror
mov
xchg
push
pop
imul
add
subb
je
xchg
add
arpl
cmp
out
xchg
and
loope
pop
sbb
sbb
setg
pop
cld
lods
sbb
imul
adc
jb
fyl2xp1
lcall
ror
cwtl
fldl
div
add
call
pop
adcl
pop
pop
ljmp
sti
lret
inc
mov
add
in
shrb
fwait
in
out
sub
leave
les
roll
lahf
adc
sub
inc
mov
aam
mov
movsb
sahf
mulb
add
lods
lret
push
hlt
repz
push
xor
mov
or
out
jnp
jge
mov
dec
cmpsl
xor
push
mov
not
mov
test
mov
pop
and
leave
cwtl
adc
adc
loop
pop
or
mov
xchg
cmp
popl
test
ret
loope
scas
shl
into
insb
nop
fildll
mov
push
sbb
fsts
dec
mov
fldl
stos
pop
pop
xchg
mov
inc
mov
mov
std
adc
push
inc
gs
push
cli
in
jecxz
mov
mov
xchg
daa
cmpb
int3
test
cmp
lcall
ret
mov
movsl
cmp
test
sbb
fsts
mov
aas
cmp
or
inc
dec
std
jmp
int
add
add
dec
test
cli
jmp
and
dec
out
dec
insb
pop
pusha
sbb
lret
jl
lock
cmp
cmp
lea
pop
sbb
cmp
or
xlat
push
out
dec
sahf
and
jae
hlt
dec
xchg
iret
rcrb
outsw
sub
xchg
xlat
hlt
imul
xor
subb
pop
push
pop
and
adc
fwait
xchg
mov
outsb
test
pop
idiv
push
push
xor
adcl
pop
sbb
test
mov
dec
push
add
rcl
or
fdivl
pushf
test
jo
int
pop
cmp
aad
stos
or
pop
mov
cmp
xchg
cwtl
icebp
mov
jne
push
lcall
xlat
dec
iret
imul
test
jl
and
negl
jno
cmp
mov
xor
push
rolb
adc
push
hlt
ficomps
pusha
push
jnp
in
cmp
jmp
imul
aad
add
fisttps
pavgw
pop
xchg
and
cltd
loop
xor
sbb
stos
sbb
push
roll
jle
test
outsl
adc
lock
ljmp
pop
push
pusha
jno
mov
stc
fcoms
jecxz
mov
or
out
or
sub
fstpl
adc
clc
or
data16
push
popa
jno
in
shrl
jp
shr
fidivs
push
mov
inc
or
push
adc
dec
sbb
mov
mov
inc
cmc
mov
xchg
lds
sub
ss
ljmp
mov
movsb
mov
pop
pop
lock
cmp
nop
pop
sub
dec
pop
add
mov
fdivs
stos
mov
movsb
stos
xchg
cmp
mov
xor
dec
sbbl
pop
int
adc
outsb
into
and
lock
ja
addb
loope
pop
jmp
add
mov
or
pop
xchg
or
in
mov
pop
pop
xchg
xor
cmp
dec
incb
add
sahf
jle
mov
mov
aam
push
aam
stc
hlt
mov
dec
iret
mov
es
cli
stos
inc
sbb
xor
sbb
inc
sbb
stc
jne
lods
setp
jo
inc
test
jnp
cmp
xlat
movsl
xor
xchg
cmpsb
mov
dec
dec
cmp
int3
notb
imul
movsl
mov
cli
push
adc
cmpl
mov
or
call
fcoml
int
imul
push
shll
push
data16
xchg
xor
jle
push
lock
out
popf
popf
lahf
lods
pop
movsl
mov
add
sub
iret
jmp
aad
les
lea
push
mov
fsubl
sub
les
mov
arpl
negb
push
fisttpll
push
out
mov
test
inc
mov
cmc
sbb
mov
xchg
imul
dec
or
push
cmp
add
xchg
sbb
mov
push
jl
ret
movsb
and
mov
sbb
sbbb
loopne
imul
aas
fwait
pop
jb
es
pop
add
pop
sbb
xlat
imul
fisttps
cmc
cmpl
jmp
fdivs
mov
insl
push
pop
jns
in
push
hlt
mov
lret
xlat
cmp
inc
mov
es
mov
in
std
sbb
rcrb
dec
sbb
add
cmpl
inc
or
call
push
jae
adc
mov
ret
cwtl
push
inc
mov
push
idivl
stc
subb
push
test
xchg
lock
addr16
fcomp
cltd
sarb
pop
adc
push
sub
sbb
mov
or
sub
mov
mulb
sahf
into
mov
jmp
push
xor
inc
adc
ss
sub
pop
lcall
sub
cli
repz
mov
aaa
pop
add
and
add
pusha
add
pop
insl
in
enter
and
lahf
push
and
das
mov
pusha
fdivr
lods
inc
pop
push
insl
mov
dec
pop
hlt
mov
inc
pop
dec
dec
les
repnz
inc
test
jmp
cld
mov
mov
fs
ja
sbb
imul
fistpl
inc
or
or
cmpsb
xchg
nop
iret
stos
popf
sub
std
jmp
sub
rorl
dec
jno
je
imul
scas
pop
into
dec
mov
lret
lret
pushf
mov
jnp
mov
divl
inc
jmp
pop
dec
sub
ret
pop
out
incb
inc
adcb
jb
adc
call
xor
pop
addl
out
ret
shlb
mov
jbe
pop
ja
or
cs
jae
push
push
or
insb
sbb
sbb
push
ret
mov
repz
arpl
dec
pop
jge
lahf
or
call
orb
jmp
shlb
and
fnsave
push
int
fs
fwait
subb
shrl
push
inc
push
xchg
aas
push
fstps
ljmp
nop
or
dec
ss
mulb
xlat
jae
sbb
shlb
jecxz
pop
cs
pop
loopne
xchg
mov
dec
stc
jae
mov
int
sti
lock
cwtl
es
cmpsl
out
inc
enter
cmp
or
pop
mov
and
or
aad
fdivrl
dec
push
jne
sbb
es
out
addr16
lods
ljmp
in
outsb
or
loop
rclb
xchg
mov
push
inc
fcoml
jge
cltd
inc
xor
mov
shr
push
pop
pop
adc
lret
orl
xor
push
dec
stc
mov
inc
pop
xchg
hlt
sub
push
adc
lock
fcoml
push
sbb
in
and
adc
sbbb
sub
sahf
inc
dec
repz
jl
adc
out
xor
cltd
int
dec
lock
test
dec
jmp
loope
or
or
pop
sarl
aas
jb
iret
nopl
fstpl
xchg
inc
imul
mov
sub
xor
mov
push
jnp
add
jle
cmp
cmp
sub
scas
sub
adc
popa
sub
divl
or
push
inc
mov
pop
xchg
outsb
sub
cmp
dec
in
cmp
add
and
pop
rolb
nop
clc
fdivrl
test
cmp
scas
mov
gs
sbb
icebp
sahf
je
pop
call
mov
cs
cmp
cmp
dec
mov
inc
mov
adc
cwtl
jne
mov
or
aas
cwtl
jg
lcall
pop
cli
xor
rclb
je
xchg
nop
jp
sbb
dec
pushf
lahf
out
lds
xorb
pop
les
push
mov
orl
mov
lods
jb
loopne
xlat
push
shll
or
jbe
cwtl
fadds
jp
xchg
xchg
xchg
sbb
jecxz
xchg
insl
sub
pop
mov
test
push
sub
cld
lret
les
and
jns
inc
or
mov
call
xor
adc
cmp
xchg
lret
mov
push
mov
mov
fs
int3
jecxz
push
movzwl
xor
cmpsl
out
xor
lea
sub
add
push
in
pop
jnp
outsl
inc
lds
nop
fisubrl
in
cmp
stos
push
insb
cmpsb
mov
clc
leave
lea
jae
das
lock
and
ficoml
sub
add
lret
shlb
int3
cli
lods
and
or
popa
popf
cmp
stos
inc
pop
aad
addb
popl
and
jo
or
mov
out
push
push
in
push
call
lock
icebp
loopne
notl
addr16
xchg
dec
mov
xchg
sub
inc
ficomps
outsb
in
inc
outsl
fstp
les
and
cmc
lods
cltd
fadds
fs
jmp
xchg
test
nop
jo
fs
pop
lds
push
jae
js
dec
aas
jbe
add
pop
jl
lahf
cmp
jne
bound
mov
xchg
fdiv
test
or
test
xchg
dec
jno
and
ds
sub
inc
lods
add
ja
pop
adc
int
xor
lods
sbb
sbb
mov
mov
xchg
jp
cmp
les
and
add
iret
lods
fisubl
fisubs
push
repnz
pusha
xchg
aad
adc
lods
push
sbb
notl
inc
test
and
daa
sub
and
out
add
xor
loope
aaa
mov
jo
test
hlt
outsl
cmp
jnp
mov
inc
sahf
pop
mov
shrb
cmpsb
cmpsb
pop
fimuls
bound
repnz
xor
add
push
mov
popa
xchg
adc
hlt
mov
push
mov
jmp
xchg
add
jae
mov
push
sbb
cmp
das
inc
sub
ja
xchg
inc
imul
out
iret
jp
cmp
xor
cwtl
pop
sub
cmpsl
xchg
shl
imul
jb
xchg
xchg
inc
mov
repnz
test
adc
scas
addl
daa
or
and
arpl
fwait
cmc
adc
leave
imul
popf
pop
lcall
mov
add
shll
idivb
enter
or
pop
mov
hlt
sub
sub
jg
inc
inc
rolb
pop
mov
je
sbb
mov
jmp
and
test
popf
adc
cmp
or
aad
inc
cmp
cmp
xchg
fldt
add
lds
push
dec
mov
dec
inc
fmull
test
pop
add
sub
pop
shrb
sbb
and
mov
jle
test
out
mov
outsl
sbb
shll
daa
push
test
fmuls
into
mov
xor
jo
loope
popf
cmp
cmp
nop
rcll
sbb
inc
jge
jecxz
xor
out
adc
dec
inc
xor
sbb
enter
inc
or
add
or
loope
loop
stos
icebp
sub
stos
jge
mov
imul
dec
add
xchg
pop
mov
jno
lock
daa
xchg
hlt
int3
movsl
mov
push
repz
insl
lea
pop
imul
sub
mov
jmp
pusha
push
mov
and
push
jg
orl
out
jmp
jbe
cmp
push
aad
sti
xor
adc
and
pop
cmp
ja
mov
dec
outsb
fs
ljmp
add
xchg
in
xchg
lret
cwtl
sub
mov
mov
popf
inc
jmp
rclb
pop
sub
sub
dec
cld
cwtl
mov
push
mov
adc
sbb
and
sarb
cli
fidivrl
loope
idivb
lock
imul
pop
movsl
mov
pop
xchg
popa
enter
clc
mov
or
lea
or
jne
add
lods
sbb
addr16
mov
lret
adc
mov
sub
pushf
and
xchg
push
movsb
xchg
mov
or
rolb
movsl
loopne
mov
mov
pop
leave
jae
insl
sbb
adc
push
stos
imul
lock
adc
xchg
inc
in
mov
rcrb
mov
xchg
std
hlt
jns
cld
push
pop
jbe
mov
add
mov
push
xor
adc
jp
push
fiadds
jo
es
ret
mov
mov
mov
xchg
mov
sahf
pop
sbb
out
lock
sub
shlb
dec
and
sub
insl
jg
cmova
shrb
fldt
mov
mov
sbb
push
arpl
mov
jo
pop
push
out
xchg
ret
sbb
cwtl
mov
xorb
in
test
movsb
inc
dec
mov
dec
jge
test
lods
adc
enter
jo
mov
cli
mov
xor
insb
mov
mov
subl
jns
adc
aad
mov
in
mov
mov
xor
xchg
jne
pop
stos
clc
out
ds
loop
or
movsl
adc
pop
leave
in
movsb
sub
sub
mov
or
lds
out
sbb
jl
aaa
bound
or
jecxz
and
push
rcl
fucomp
pop
or
mov
and
shlb
dec
push
int3
xorl
add
push
xchg
mov
pop
cltd
in
std
into
mov
loope
jbe
leave
out
loope
jns
cmp
sbb
es
inc
aam
scas
add
into
lods
mov
mov
je
sbb
rol
repnz
jmp
aaa
xor
test
jns
sub
je
je
inc
inc
fstps
sbb
test
cmc
ret
dec
das
imul
xchg
lock
repz
inc
sbb
mov
lcall
std
and
adc
sbb
inc
les
jp
out
cmp
leave
mov
cs
add
mov
imul
scas
push
sbb
mov
adc
ret
dec
sarl
inc
es
out
jnp
add
cmp
jle
imul
bnd
add
mov
inc
test
adc
mov
divps
jb
lock
mov
mov
mov
and
adc
xchg
cmp
inc
xor
out
es
jl
rcrl
sbb
xchg
mov
in
adc
or
adc
cmp
adc
psllq
sub
gs
ror
xchg
sub
repnz
je
cltd
cmp
mov
hlt
aad
addr16
or
lea
mov
hlt
fstps
inc
sbb
es
adc
mov
dec
insl
scas
std
and
in
int
gs
mov
addr16
ret
adc
xchg
popf
jle
das
faddp
cmc
test
adc
pop
pop
inc
or
test
sahf
push
add
mov
lods
and
lahf
jae
lds
pop
dec
pusha
mov
mov
jno
xor
inc
mov
sbb
lds
xchg
inc
dec
mov
fdivrs
xchg
or
jmp
pop
sub
add
lods
xor
stos
add
leave
push
data16
add
dec
mov
in
scas
test
xor
lahf
stos
repz
dec
inc
sbb
inc
imul
in
push
mov
out
sub
loope
cli
int3
imul
cld
mov
andl
xchg
sub
sub
jge
sub
mov
divb
popf
das
and
pop
xchg
loop
xchg
aad
pop
icebp
xor
mov
add
scas
sub
enter
and
inc
in
ret
pop
jns
div
cwtl
jp
xor
insb
rolb
xchg
sbb
bound
cmp
pop
pop
cwtl
loopne
xor
mov
mov
lea
fwait
adc
outsb
mov
mov
push
and
mov
xchg
push
add
lret
push
lret
cli
unpckhps
or
imul
mov
mov
mov
xchg
stos
xor
out
jecxz
fcom
dec
xor
cmp
sarl
aas
shlb
mov
xorb
xor
mov
jle
mov
inc
or
fistl
mov
shr
push
sub
sahf
sbb
mov
aas
repz
jae
mov
adcb
pop
nop
xlat
cs
cmp
in
inc
inc
sarb
xchg
rolb
xlat
push
cmc
in
mov
test
decl
inc
lods
mov
jmp
dec
lock
mov
push
sbb
aam
scas
add
or
lahf
push
fs
and
pop
scas
dec
leave
lods
es
rorb
mov
and
mov
fdivrl
addr16
loopne
mov
shrl
mov
push
jae
stos
sbbb
mov
stos
lods
cmpsb
and
jle
ret
xchg
mov
loop
outsb
xor
adc
push
mov
xchg
mov
les
aad
in
divl
roll
jnp
and
push
lods
adc
shll
repz
push
push
push
jg
aaa
jg
popa
int3
subb
test
xorb
jne
cmp
filds
push
sbb
dec
cli
popa
fildll
andl
xchg
cli
out
xchg
mov
dec
shr
jbe
pop
or
cmpb
jmp
lahf
adc
adc
inc
push
cltd
imul
sub
fwait
sbb
and
lea
jnp
push
or
cmpsl
loopne
int3
sub
icebp
call
add
xor
xchg
xchg
adcl
movsb
mov
je
jge
dec
adc
mov
movsb
fiadds
cmp
push
cli
flds
xchg
sbb
clc
dec
dec
jno
gs
daa
cmp
insl
add
jmp
test
inc
inc
mov
jmp
inc
movsb
into
imul
and
mov
cmpsb
movsl
int3
pushl
push
ds
dec
mov
iret
fsts
mov
or
inc
leave
mov
mov
std
pop
pop
and
sub
push
iret
and
into
dec
stos
jg
test
mov
movsb
pushf
inc
sbb
jmp
xchg
test
push
lret
xchg
into
sub
jge
sbb
ret
scas
gs
mov
cwtl
test
xchg
or
mov
out
mov
mov
mov
add
add
jmp
test
dec
jl
push
push
mov
or
andl
rep
xor
sub
fmul
fstps
dec
xchg
cmpsl
pop
adc
sbb
in
adc
mov
mov
sti
adc
cmpsl
popa
cwtl
js
loope
loop
mov
cmp
mov
pusha
movsb
cs
push
add
and
addb
dec
xchg
xchg
push
dec
or
insl
movsb
les
xlat
mov
jne
adc
and
aas
dec
shlb
dec
dec
mov
cli
and
cwtl
int
test
bound
iret
out
outsl
negl
addr16
jl
lret
mov
add
fildll
fsubrl
leave
xor
shll
outsl
jb
dec
mov
js
mov
pusha
push
cmpsb
xor
shlb
cmc
jae
addr16
hlt
pop
jbe
and
cltd
xor
jo
aaa
push
cmpsl
and
subl
cmpb
lcall
jl
xchg
mov
cmp
dec
jns
les
xchg
aam
icebp
lret
add
cmp
add
cld
push
lret
in
mov
sti
mov
shrb
jmp
add
shrl
mov
les
sub
out
mov
shrl
cli
jmp
rcll
stos
shrl
sub
les
flds
or
popa
push
enter
test
jecxz
ret
cmp
and
xchg
out
aam
or
adc
hlt
jnp
insb
adc
push
adc
inc
aas
cmp
scas
jp
xlat
mov
iret
lahf
mov
mov
xor
mov
adc
lea
negl
dec
fistpll
arpl
push
pop
push
lret
and
mov
mov
icebp
inc
adc
fwait
xlat
hlt
pop
jo
inc
jp
stc
sub
inc
cli
jle
inc
sub
pushf
cmp
mov
push
or
xor
movsl
add
mov
jae
xchg
iret
sub
cmc
jnp
or
rorl
pop
push
push
inc
int
sbb
mov
push
inc
fbld
pop
xchg
mov
mov
cwtl
or
xchg
xchg
mov
and
test
mov
in
and
dec
mov
stos
xchg
adc
dec
gs
cmpb
or
inc
push
out
jmp
and
aas
push
mov
jl
lahf
jg
aad
jbe
incb
push
adc
xor
and
mov
sub
cld
mov
addb
pop
mov
and
orl
dec
insb
pusha
rcrb
pop
dec
mov
mov
add
je
push
das
sbb
cmc
mov
loope
into
dec
pop
ret
js
sbb
jl
out
xor
dec
mov
sbb
test
fs
dec
loope
fstps
ljmp
sahf
adc
adc
clc
mov
xchg
cmp
inc
in
pop
jae
out
pushf
pop
aad
and
in
insl
xchg
lcall
mov
jno
cltd
scas
cli
mov
mov
jo
jb
xor
adc
pop
mov
xor
test
subl
out
loope
addr16
pop
inc
push
cmp
std
mov
mov
and
aad
mov
imul
xorb
push
dec
mov
mov
enter
je
and
pushf
xchg
aam
lcall
test
loopne
xchg
dec
xor
stos
sahf
jg
mov
scas
jns
roll
pop
xor
pop
sub
sub
and
add
sub
lcall
stc
lret
scas
lcall
dec
dec
sbb
iret
out
fsubrp
cmp
rorl
pusha
int3
icebp
cmp
adc
pop
pop
sub
bnd
repnz
aad
lock
push
push
sub
cmp
inc
mov
inc
or
cmp
xor
mov
xchg
jae
rolb
mov
jg
cmp
lret
mov
shlb
or
outsb
inc
das
pop
ds
ja
testl
cmp
push
mov
iret
aas
jne
test
gs
insb
sub
mov
mov
frstpm(287
add
std
mov
mov
clc
jbe
xchg
lods
or
inc
shr
jno
mov
sbb
add
mov
ret
mov
mov
fs
shrb
shrb
xor
lock
shr
inc
pushf
xlat
adc
test
enter
pop
adc
dec
lcall
arpl
call
or
pushf
dec
mov
xlat
enter
mov
add
jo
nop
pusha
add
pop
into
mov
pop
and
mov
and
sub
and
imul
add
ret
pusha
adc
roll
dec
fcompl
xchg
cmpsb
cmp
mov
jecxz
lcall
aam
dec
and
fsts
inc
sub
or
jecxz
movsl
jo
sbb
andl
sub
ret
cmp
pop
xchg
cmp
sahf
jp
or
lea
cmp
mov
mov
lea
pop
lret
nopl
jmp
add
divb
sti
jp
jne
sbb
sbb
cs
test
outsb
push
cs
push
gs
xchg
lods
and
and
add
push
jno
int
mov
mov
in
and
pop
sahf
add
pop
mov
mov
cmpsl
mov
dec
mulb
xor
pushl
test
sbb
add
jae
je
xchg
xor
loop
decl
xorl
dec
call
or
sub
pushl
fistl
into
std
addr16
or
push
push
adc
and
fnsave
add
cmpsb
fistpl
gs
jp
out
mov
push
retw
pusha
popf
movsb
push
jl
jbe
xchg
inc
insl
jmp
mov
scas
adc
mov
xor
shll
imul
push
adc
cld
xchg
shrl
push
shr
inc
dec
scas
pop
xchg
daa
pop
sub
sbb
mov
sbb
add
add
pop
cmp
sbb
pop
adc
mov
xchg
add
xchg
sub
jae
test
or
in
push
inc
jl
push
pop
xchg
lods
jl
lcall
pop
das
mov
test
xchg
push
push
jo
sub
jbe
sbb
pop
inc
in
push
cmc
dec
loope
dec
sub
pop
fistl
sub
mov
test
xchg
fisubs
fimull
rorl
out
pop
ret
push
adc
outsb
cmpsl
test
or
and
xorb
stos
jo
iret
sbb
inc
mov
mov
xchg
inc
push
repz
sbb
pop
dec
imul
dec
and
xchg
adc
in
js
inc
je
inc
test
jge
or
aam
fmulp
adc
scas
sti
rol
mov
xchg
xchg
adc
enter
jae
je
or
pop
jbe
or
add
out
orb
notb
fnstsw
mov
negl
fscale
test
cmp
jae
adc
mov
repnz
test
sbb
aam
xchg
fdivl
push
test
div
add
iret
xchg
cld
mov
cmpb
loopne
mov
sarl
pop
sbb
add
dec
sbb
subb
pop
pop
xchg
mov
data16
adc
cmc
imul
rorb
adc
dec
jns
call
jecxz
and
rolb
je
cmc
or
es
stos
lcall
sbb
mov
shlb
xchg
repnz
mov
lahf
xor
add
fdivs
lret
mov
insb
in
dec
adc
imul
mov
ljmp
outsb
and
fdiv
xchg
sub
mov
jl
sahf
pop
enter
add
fnstenv
xor
shll
loope
ficoml
jl
int
imul
aam
xor
icebp
cmpsb
dec
lret
out
sti
into
lods
add
cmp
mov
shr
lock
add
mov
jl
jmp
cmp
adc
lret
sti
lock
daa
mov
xor
std
lcall
addr16
lret
iret
insb
imul
sbb
or
gs
mov
int
out
test
or
mov
mov
inc
lock
pop
sub
pop
inc
xchg
push
xchg
mov
push
and
test
dec
cld
daa
sahf
pop
gs
cmpsb
xor
push
inc
stos
stos
aam
ficomps
pop
fstps
xor
fnsetpm(287
push
outsb
mov
inc
dec
iret
out
xor
dec
and
flds
subb
std
fsub
fbstp
rorl
xor
ja
jle
adc
sti
dec
fwait
mov
js
push
lock
jns
das
jae
int3
loopne
fnstenv
or
sub
in
xor
sbb
jecxz
dec
int
push
movb
push
pop
lcall
inc
pushf
ss
push
arpl
popf
movsb
xor
push
mov
enter
mov
jp
leave
sub
lods
ficoml
andl
pop
push
mull
or
cmp
xor
xor
dec
repnz
imul
lods
popa
fwait
lret
repnz
iret
sub
pop
jge
movsb
jecxz
pop
enter
movsb
insb
xlat
fldl
jg
ja
sti
mov
das
out
pop
push
inc
cltd
push
push
cmpsb
sbb
es
cmpsb
out
mov
pop
or
mov
inc
lods
xor
into
cwtl
repz
pop
scas
add
inc
mov
outsb
inc
ss
test
pop
push
push
loop
xor
push
rcrl
adc
mov
test
fidivrl
xchg
lds
out
adc
aad
adc
les
bound
cmp
dec
int
xchg
add
xlat
aam
repnz
lcall
xchg
test
ja
lcall
pop
cmp
xor
ljmp
jae
jmp
sbbb
adc
push
mov
cmc
xchg
ja
movsl
incb
test
xchg
inc
mov
mov
imul
xchg
jns
or
xor
jle
imul
cmp
xlat
xchg
xchg
mov
pop
arpl
sarb
in
mov
inc
gs
repz
jmp
jnp
inc
stos
enter
push
mov
cmp
mov
in
call
sub
test
neg
neg
outsb
jns
mov
jmp
push
xlat
repnz
mov
fmul
das
ret
imull
out
xlat
aad
cmp
jle
incl
test
call
bnd
test
push
outsl
cld
call
inc
cmp
jp
jg
add
xchg
cmp
and
cwtl
jnp
dec
shll
mov
aaa
jb
jmp
popf
repz
call
cmp
stos
neg
hlt
sbb
push
dec
mov
xor
inc
int3
inc
loop
dec
or
lea
mov
mov
aas
dec
dec
lahf
adc
cmp
in
xchg
push
fcoms
and
mov
cmp
sbb
out
out
loope
leave
pushf
lds
mov
shlb
jb
jg
into
and
cli
push
and
lret
stc
loop
orb
dec
cmp
mov
lahf
popa
jl
jle
pop
xchg
and
push
fs
push
lock
pop
pop
xchg
push
dec
leave
inc
sub
xor
dec
jne
jns
lods
mov
inc
andl
test
fisubrl
std
mov
aad
mov
enter
in
inc
in
ljmp
push
jns
int
stc
xor
divb
dec
test
add
movsb
jge
stc
mov
or
add
mov
adc
stos
add
lret
or
push
inc
mov
push
cmp
push
sbb
lea
mov
and
mov
std
test
fsts
out
lock
cltd
repz
jnp
xchg
repz
sub
xor
lea
sub
mov
pop
enter
inc
aas
es
sbb
ficomps
and
mov
xchg
test
mov
es
xchg
mov
aas
cmp
push
sbb
addb
in
adc
add
mov
mov
jle
aaa
outsl
sub
testb
popf
mov
hlt
insb
cs
push
add
cmp
cmp
out
lods
push
inc
sbb
inc
sub
in
fwait
xor
ja
clc
aam
lock
dec
jecxz
mov
test
jne
sub
push
push
ret
aaa
cltd
ja
xchg
jge
or
out
pop
pop
lret
addr16
jp
add
mov
shl
adc
pop
and
roll
out
sbb
insl
fdivrs
xor
inc
cmpsb
arpl
hlt
jecxz
push
mov
leave
out
addr16
or
sub
add
jmp
inc
mov
lret
push
pop
ret
les
sar
stos
les
cld
push
xchg
ljmp
mov
adc
dec
clc
push
jae
dec
loope
and
xchg
fs
sbb
pop
aas
or
or
loope
leave
outsb
jmp
pop
nop
clc
adc
mov
mov
pop
add
push
mov
fnclex
and
mov
jae
adc
jb
jp
push
test
xchg
jae
and
lock
mov
call
pop
ljmp
push
push
dec
cmp
loope
pop
dec
loope
mov
lret
outsl
mov
insl
inc
adc
sub
mov
or
rclb
jb
shll
push
or
xor
or
in
or
pop
ret
jl
mov
nop
mov
sbb
pop
mov
cmp
cmp
mov
shlb
insl
andl
lret
sub
cwtl
mov
mov
pop
mov
adc
sbb
dec
int3
les
scas
jbe
aas
jo
aas
outsb
stos
fimuls
rolb
imul
pop
cmpsl
mov
out
push
pop
xchg
shrl
fistpl
push
cmp
cmp
xor
or
mov
cmp
and
stos
ljmp
shll
js
inc
mov
push
enter
in
cltd
xchg
jae
scas
fwait
adc
arpl
pop
mov
out
loopne
cmp
movsb
push
iret
and
cltd
mov
out
and
fldt
loop
mov
pop
pop
jp
add
jo
adc
ja
and
pop
cld
fsubr
jl
loopne
lods
xor
and
clc
inc
xchg
out
dec
ja
sbb
int3
dec
lret
fidivs
pop
pop
incl
enter
jge
pushf
jmp
int
inc
mov
sbb
jnp
sub
mov
orb
lock
mov
test
xor
aas
xchg
inc
inc
insb
dec
inc
ljmp
mov
inc
xchg
jge
ret
mov
out
and
notl
outsb
pop
sbb
mov
outsb
pop
stc
je
loopne
sub
sub
addr16
mov
ficoml
sub
dec
mov
repz
jg
push
add
ja
cmpsl
inc
xor
in
jl
clc
ss
addr16
out
jno
popa
lea
pushf
cli
aad
dec
add
hlt
outsb
or
cmp
xor
dec
inc
hlt
inc
loope
xchg
jne
mov
jnp
movsb
sbb
cmpsl
sahf
loope
fsubr
or
clc
jp
arpl
pop
adc
mov
jl
ljmp
sbb
loope
push
cmp
push
mov
movsb
dec
sbb
xchg
test
lret
or
je
iret
mov
movb
mov
dec
jo
jmp
call
inc
lods
int3
add
jge
shl
fldenv
xchg
xor
mov
xor
pop
mov
pop
dec
iret
add
cmp
rorb
sub
mov
inc
mov
dec
lahf
ficoms
mov
es
cmp
roll
mov
fdivs
dec
and
insb
jbe
shl
test
xor
es
mov
sub
aad
push
lods
jecxz
jae
add
mov
in
addr16
aam
cmp
cmp
pop
lret
jne
cmp
addr16
imul
inc
cmp
jecxz
cmp
in
inc
xlat
sub
mov
sbb
xchg
sub
sbb
fs
scas
rolb
iret
int3
fbstp
loop
test
mov
rol
aas
push
popf
sub
or
mov
test
sbb
test
out
mov
xchg
popa
mov
cmovl
jle
mov
arpl
jmp
jns
sti
sar
mov
shl
xor
and
nop
jmp
pop
mov
repnz
mov
push
ss
cmpsl
popf
pop
repnz
lock
in
add
push
les
xor
sbb
xor
insl
jb
pop
pop
int
dec
mov
mov
sub
outsl
dec
mov
and
daa
je
push
mov
and
shll
and
jne
fsubs
add
shll
out
test
push
jb
test
add
scas
sti
lock
mov
movsb
cmp
test
rorb
sbb
mov
dec
icebp
add
xchg
mov
pop
das
adc
cltd
enter
aaa
xchg
cmp
clc
aas
xor
sub
out
pop
xorl
rolb
jg
and
or
mov
test
stos
bound
mov
mov
pusha
cmp
pop
adc
mov
jmp
cmpsb
mov
in
pusha
leave
xchg
movsb
lods
repz
icebp
dec
mov
les
cmp
fstl
ss
pop
ficompl
into
jae,pn
mov
and
idivw
pop
sbb
push
dec
pop
in
or
add
and
int3
or
and
push
mov
adc
pop
push
dec
out
add
and
rcl
jp
lahf
cmp
cwtl
out
or
mov
dec
xchg
add
in
mov
pop
jo
xchg
int3
ss
mov
stc
loopne
out
sub
fcompl
jg
xor
and
jno
test
and
dec
cld
iret
sbb
cmp
imul
pop
pop
mov
mov
pop
mov
imul
sbb
sar
movsb
stos
or
fdivr
add
or
mov
loope
sti
bound
push
pop
cwtl
or
sets
inc
call
pop
xchg
adc
jb
in
pusha
dec
inc
test
shll
inc
mov
cwtl
xor
sahf
mov
stos
sbb
cmpsl
pop
lret
daa
scas
cmc
xchg
stc
insb
xor
pop
push
mov
out
or
movsb
mov
icebp
inc
add
ret
out
xor
in
lret
cwtl
repz
popf
xlat
xchg
dec
push
push
jns
test
inc
xchg
mov
xchg
cmpsl
push
aad
sbb
pop
gs
es
into
inc
dec
mov
inc
imul
lds
push
in
iret
incl
mov
mov
ret
push
repz
xor
subb
ljmp
and
xlat
or
mov
test
out
and
pop
imul
xor
outsl
inc
mov
inc
sub
das
sahf
sbb
aas
mov
fstpl
mov
sbb
movsl
sti
pop
int
cmp
xlat
sti
cmp
frstor
sub
add
adc
inc
daa
mov
adc
and
insl
cwtl
mov
in
mov
rclb
test
sti
int3
fldt
xlat
xchg
aam
test
xchg
cmp
mov
cmp
xor
cs
mov
pop
or
fmull
clc
mov
inc
cmp
in
loopne
insl
subl
loope
pusha
mov
add
push
aaa
loop
pop
jne
adc
jmp
imul
mov
adc
xchg
jbe
cmpsb
data16
xchg
mov
divl
fisubs
arpl
or
daa
mov
jno
cmp
cmpsl
stc
xlat
mov
jg
xchg
push
dec
inc
ja
ljmp
fsubl
inc
std
sub
pop
pop
add
outsl
and
jae
mov
fs
jbe
push
pusha
mov
mov
inc
cltd
adc
xchg
cltd
and
jp
or
sub
in
jns,pn
push
lcall
and
inc
movsl
pushf
scas
iret
shl
outsb
adc
push
inc
cwtl
sahf
pop
cmp
mov
sub
sub
movsl
add
push
neg
push
or
push
jmp
mov
call
push
lea
adc
and
clc
mov
cmpsl
shr
cmp
push
xor
ret
fwait
jnp
sbb
nop
sub
fdivrl
sub
push
mov
popf
outsl
ret
test
cmpsl
cmc
aas
stos
je
mov
ss
inc
loop
push
mov
out
push
sub
xor
dec
jl
cmp
lds
fs
sub
loope
lods
jno
adcl
push
pop
push
in
dec
mov
mov
xchg
cmp
mov
ja
sub
and
cmp
jecxz
mov
dec
inc
testb
lahf
cmp
clc
lahf
mov
inc
cli
pop
adc
xchg
les
aas
pusha
or
bound
sub
je
nop
xchg
mov
add
add
push
inc
icebp
lcall
pop
push
jns
fwait
pop
sub
xor
mov
cli
mov
out
xlat
ja
inc
lret
sub
cs
test
loope
pusha
adc
or
fsubs
add
icebp
dec
cld
pushf
mov
inc
test
cltd
test
sub
test
xchg
idivb
mov
movsl
or
mov
outsb
sti
test
lret
addr16
ret
mov
repz
jl
mov
gs
das
enter
xor
adc
aaa
lret
shlb
jge
add
dec
sbb
bound
mov
add
inc
mov
aas
fwait
or
fwait
push
jbe
mov
dec
xchg
aaa
mov
mov
jmp
jmp
jp
add
adc
fists
cmp
xor
imul
dec
js
push
mov
cmp
xchg
lea
jbe
out
out
pop
dec
cmp
aad
jg
pop
test
dec
aaa
lret
xor
pushf
fs
jge
sub
jb
fidivrl
jae
xchg
sti
in
push
sbb
push
scas
sub
sub
jns
ja
push
test
xor
mov
mov
and
outsb
std
mov
addl
or
aas
jl
lcall
mov
jle
jp
sarl
and
stc
int3
arpl
data16
ret
leave
loope
adc
push
or
xchg
arpl
or
insb
into
inc
imul
cmp
call
adcl
scas
cmp
pop
jnp
ficompl
mov
nop
insb
gs
cli
push
mov
mov
orl
and
push
cwtl
rolb
fcomps
xor
xchg
mov
xchg
jg
lock
pop
xchg
dec
sbb
pop
sahf
test
loope
out
inc
pusha
loope
mov
movsb
mov
pop
pushf
out
or
mov
xor
xchg
outsb
int
pop
cs
clc
scas
aas
hlt
cmp
cmpsb
icebp
mov
lods
je
cs
lods
push
fwait
test
sub
call
daa
fsts
mov
mov
outsb
or
in
dec
into
pop
jmp
sarl
dec
mov
es
sbb
int3
push
mov
dec
aaa
inc
loopne
lret
push
jo
rorb
int
int
jg
pop
jmp
out
push
lods
movsl
mov
add
es
cwtl
mov
push
mov
clc
out
dec
es
add
das
fidivrs
mov
inc
imul
test
dec
add
enter
aaa
test
mov
jns
xor
cmp
icebp
sbb
push
xor
or
lea
lea
insl
loop
push
out
bnd
push
mov
mov
in
push
mov
call
pop
test
xor
jp
sub
push
cmp
stc
popf
hlt
bound
mov
cmp
ficompl
mov
mov
pop
xorb
cmpsb
jge
insb
adc
dec
mov
mov
pop
jo
or
into
imul
in
pop
movsb
sbb
add
push
mov
mov
adc
mov
add
xchg
test
jno
mov
sbb
jl
xchg
push
or
sbb
in
ret
sub
test
leave
inc
lret
popa
movsb
pop
repz
scas
push
jns
pop
xor
in
pop
or
andb
or
add
jno
call
xchg
mov
push
push
stos
xor
shl
jno
mov
sahf
aad
adc
lds
in
jno
inc
sbb
push
add
sbb
or
ror
push
imul
sbb
cwtl
pop
test
cmp
or
cld
testb
fs
mov
fisubs
mov
aas
imul
into
xchg
daa
pop
adc
scas
lds
sbb
inc
lds
divb
xchg
xorl
sbb
aad
movsl
sub
sahf
shlb
cmpsb
mov
in
xchg
sub
stos
add
ret
push
insl
cltd
pop
lcall
popf
xor
dec
xchg
pusha
sbb
mov
inc
or
movsl
xor
jl
push
sub
cmp
lret
mov
pop
adc
sub
mov
mov
sbb
ss
pushl
cmp
pop
fcomip
sbb
mov
jle
pop
jbe
mov
insb
and
insb
es
negb
jb
repz
ror
call
fnsave
enter
out
cltd
push
mov
scas
aaa
cli
orl
aam
push
or
out
lret
outsb
push
adc
sub
popf
int3
cmp
cltd
push
inc
adc
lret
inc
idivb
lret
jo
and
scas
cmp
into
adc
mov
cmp
xor
pop
pop
sbb
clc
aaa
test
adc
lock
sahf
or
cmc
xchg
aad
std
dec
push
dec
out
pop
xor
adc
inc
lods
jae
movsb
hlt
aas
gs
cli
ds
fwait
call
and
dec
in
mov
mov
loope
movsl
push
lcall
add
fs
mov
test
icebp
jecxz
pop
stc
nop
push
and
daa
and
xchg
pop
leave
mov
aaa
clc
test
lods
push
out
bound
pop
push
xor
xor
dec
inc
mov
xor
xchg
stos
sbb
xor
pop
or
cmp
scas
mov
mov
sbb
mov
xor
shll
fsubrp
jno
cmp
push
shll
and
pop
outsb
test
icebp
das
cmp
fsubrl
mov
leave
pusha
hlt
mov
mov
js
pop
mov
jl
cltd
sub
jbe
pop
mov
addl
xchg
and
shl
stos
push
je
pop
pop
push
sti
in
add
sbb
popa
adc
xchg
or
test
mull
pop
adc
inc
pop
int3
adc
jno
jmp
cmp
call
stos
and
sbb
sbb
pop
mov
outsb
pop
adc
daa
or
mov
sub
xlat
scas
push
add
ds
leave
outsb
push
fs
ja
xor
add
xchg
lods
mov
mov
pop
xchg
fbstp
add
lea
push
dec
fdiv
negb
jnp
nop
lret
mov
dec
pop
aas
push
xor
cmp
push
ljmp
or
xchg
je
lods
ss
pop
imulb
mov
sbb
ret
syscall
push
xchg
push
jno
mov
cs
jnp
loopne
dec
and
inc
outsl
pop
clc
lret
jo
dec
iret
mov
cmc
js
xchg
push
jbe
mov
mov
les
and
stc
sbb
push
movsb
test
pop
sbb
sub
cmpsl
sub
addr16
addr16
adc
add
pushf
shr
lahf
sbb
ret
cmp
inc
ret
cmp
daa
mov
mov
add
sarl
in
cli
pop
mov
or
test
adc
pop
es
xor
popf
mov
and
and
adc
sub
jb
pop
jno
and
mov
in
filds
fwait
or
mov
loop
pop
sbb
call
mov
fdivr
iret
nop
xor
jl
int
fnsave
xor
hlt
jp
adc
mov
xchg
in
dec
xor
dec
inc
mov
lods
sub
adc
inc
aas
sub
inc
sbb
or
and
xor
enter
mov
push
push
cmp
xor
xchg
call
fstpt
cmp
dec
xor
jmp
or
in
mov
xchg
adc
pop
lock
jno
in
dec
sahf
cmp
cmp
push
jnp
xchg
pop
loop
jb
imul
jmp
test
fwait
movsb
mov
jg
mov
mov
dec
mov
shlb
jne
int
cmp
in
ja
inc
push
into
scas
mov
in
dec
arpl
and
mov
push
movsb
jnp
cmp
jmp
aas
xor
pop
test
stc
into
cmp
repnz
cmp
jbe
mov
add
dec
std
xchg
mov
subb
inc
jnp
fs
pop
push
lock
adc
dec
and
jbe
out
les
addr16
or
dec
and
mov
addl
pop
lods
dec
pushf
mov
clc
add
in
jle
and
dec
dec
icebp
jle
fisubl
xchg
xchg
or
aad
sahf
pop
pop
das
stc
push
mov
sbb
push
shll
lret
cmp
aam
sbb
and
pop
adc
jge
stos
or
xchg
xor
inc
leave
push
jge
pop
in
test
in
inc
mov
dec
out
jmp
push
out
test
into
jnp
mov
dec
loopne
mov
mov
movsb
pop
xchg
xor
cmpsb
cltd
sub
roll
cmp
jb
das
leave
dec
orb
imul
cmp
and
mov
cmpl
push
sbb
iretw
fidivrl
xchg
in
mov
xor
jnp
jne
mov
jnp
jb
in
pop
xchg
fistps
xchg
mov
sti
popf
and
fnsave
ljmp
adcb
leave
cmpsl
aas
int
das
cld
inc
or
dec
and
cltd
adc
mov
mov
int3
dec
cwtl
mov
cmp
jb
push
mov
sub
push
add
in
jmp
or
pusha
es
sysenter
or
xor
sub
out
stos
xor
es
xchg
mov
pop
lock
sbb
jg
stos
cmp
xchg
xor
xchg
data16
in
in
push
jo
enter
or
subb
inc
fs
call
std
xor
shlb
mov
dec
add
rorl
cmp
das
jne
pushw
fmul
sbb
cs
pushf
mov
mov
and
sbb
stos
mov
stc
and
pusha
popf
pop
inc
mov
mov
sbbl
mov
test
mov
inc
mov
fwait
addb
sbb
add
lea
sbb
sub
jno
lret
fnsave
sub
mov
or
fcoms
subb
push
ljmp
mov
adc
rcll
pop
movsb
pop
push
out
cs
dec
sub
or
clc
addr16
loopne
cmp
sub
dec
aaa
call
cmpb
dec
daa
jle
mov
orb
faddp
or
arpl
fsubrp
or
out
cmp
jbe
in
fiaddl
imul
mov
add
mov
inc
fs
jae
push
out
addl
dec
shrl
mov
xchg
xchg
mov
mov
or
cmpsb
mov
push
insb
inc
inc
arpl
loope
mov
into
or
ja
stc
cmpsl
jb
mov
and
jae
sti
daa
test
and
insb
mov
jnp
aas
mov
jns
push
pop
sbb
push
je
or
cltd
in
adc
fildl
sbb
ljmp
pop
lock
mov
ffreep
sub
push
icebp
jmp
xlat
add
lret
or
enter
in
push
fs
imul
repz
lds
and
scas
xor
mov
pop
mov
aaa
lea
xchg
pop
mov
dec
rol
repnz
xchg
mov
pop
clc
imul
lock
and
inc
cmp
cmp
mov
lock
pushf
loop
or
add
xor
enter
jecxz
push
mov
sbb
call
movsb
insb
roll
loope
xchg
iret
jbe
jns
rcll
aad
mov
mov
imul
movsb
test
mov
sahf
or
jno
scas
cs
daa
nop
cmp
into
sti
rclb
mov
jg
mov
dec
enter
mov
aad
cmpsl
popf
and
xchg
and
negl
ret
cmp
pusha
bound
pop
pop
mov
scas
sub
fs
cs
test
sub
ja
jmp
xor
lret
sti
mov
scas
rorl
adc
orps
sub
adc
out
push
es
in
jmp
jle
pop
jnp
cmp
cmpsl
push
aas
daa
ljmp
and
xor
add
ror
jmp
xlat
in
inc
vprotb
push
int
or
ficompl
xchg
pop
push
mov
arpl
mov
and
scas
sbbl
call
lret
inc
jecxz
mov
and
inc
dec
ret
fnstsw
shrl
icebp
xor
shrl
gs
movsb
cmp
sub
or
push
push
fisubrs
jge
push
lds
push
fisttps
imul
sub
loopne
sub
fmuls
inc
xchg
or
repnz
jo
cmp
std
stc
mov
in
mov
aaa
cmp
xor
xchg
outsb
adcl
xchg
imul
aas
jge
sbb
pusha
push
test
xchg
pop
sub
jae
mov
add
mov
pop
jbe
decl
dec
sbb
jnp
mov
bound
test
xchg
lret
fwait
aas
dec
in
mov
mov
and
xchg
int3
in
inc
sbb
int3
je
stos
leave
and
imul
mov
xchg
mul
pop
stos
and
shrb
cmpb
in
sub
mov
xor
adc
jmp
adc
jb
xor
fdivrl
push
daa
outsl
testl
cmp
jno
enter
cs
sbb
clc
xor
dec
jno
cmp
pop
mov
and
into
pop
jno
pop
xor
aad
cli
push
sti
add
test
ret
repz
jae
pop
cmpl
testl
dec
cmc
push
add
inc
push
mov
push
mov
and
repz
test
ret
push
xor
xchg
orl
pushf
cmp
test
pop
add
xor
push
sbb
fisubrs
data16
add
and
inc
lock
data16
mov
jne
xchg
pop
adc
nop
push
inc
lret
out
hlt
xchg
clc
movsb
or
mov
das
mov
rcrl
pop
pop
add
cs
add
sarl
in
int3
mov
push
push
mov
pop
jecxz
xchg
out
jo
pop
or
xchg
enter
mov
add
cmp
das
movsl
cld
lahf
sub
xor
inc
iret
and
pop
movsl
pop
xlat
stc
js
sbb
jno
inc
movsb
pop
add
ret
adc
dec
fimuls
xchg
mov
mov
push
lods
mov
out
mov
aaa
stc
mov
aam
dec
mov
pop
add
sub
shrl
sbb
in
adc
ficomps
insl
jg
outsb
out
adc
sbb
pop
loop
roll
mov
jae
lods
jbe
and
pop
sbb
out
andb
xlat
xor
cwtl
dec
cmp
outsb
adc
pop
insl
mov
leave
ja
jno
adc
fucomip
xchg
je
jnp
mov
int
sbb
decb
fisubs
int
lea
and
popf
dec
inc
add
add
loop
cld
insl
cltd
jnp
dec
mov
jmp
jne
sbb
xchg
fstp
lods
lret
xchg
out
inc
and
cmpsb
add
mov
scas
sahf
pop
xchg
sar
int
in
andb
lods
mov
sub
ret
jmp
inc
lea
jge,pt
sti
mov
outsb
mov
ror
in
sub
enter
sbb
enter
mov
cwtl
push
jae
in
mov
cmp
pushf
ds
sbb
sbb
outsb
push
cmp
clc
loope
push
mov
lods
and
sbb
fdivl
cmp
jbe
mov
dec
mov
mov
aad
jo
xchg
add
mov
mov
ljmp
xchg
mov
push
add
fsts
mov
adc
fnstsw
fistl
fdivrp
pop
sbb
jne
stos
dec
mov
push
push
pushf
icebp
inc
rol
int
and
xchg
in
mov
das
mov
and
pusha
pop
ret
xor
mov
mov
js
dec
jbe
jnp
imul
fisttpll
and
stc
icebp
jb
jns
dec
shlb
ljmp
sub
sbb
in
jns
neg
loopne
int
mov
adc
lret
inc
rclb
mov
icebp
cmp
insl
insb
lret
and
push
xorl
arpl
insl
mov
sti
xlat
aad
scas
sbb
int3
std
inc
iret
push
test
push
inc
dec
jnp
or
mov
sbb
cli
cmp
and
call
pusha
inc
std
lods
sbb
cmp
push
xchg
mul
xor
xor
fs
push
inc
jl
mov
nop
mov
leave
pop
xor
and
mov
xchg
dec
cmp
fmuls
sub
xor
inc
jae
xor
xor
sahf
call
inc
aad
sub
ljmp
js
and
in
pop
stos
dec
loope
lods
xor
pop
call
es
aad
add
mov
and
fdivs
sbb
scas
and
lock
jg
push
jl
fnstcw
daa
sarb
sub
cmpsl
enter
inc
mov
loope
mov
repnz
jno
mov
fistl
shlb
sub
aaa
and
jbe
jl
mov
sub
mov
push
xchg
pop
mov
das
push
or
stos
xchg
jle
cmc
or
push
dec
pop
push
adc
push
mov
mov
test
pushf
and
and
push
in
lds
imul
test
jmp
int
fbstp
mov
dec
xchg
dec
mov
repnz
xchg
repz
jmp
push
imul
pop
jae
lods
pop
pop
mov
lods
in
pop
and
mulb
dec
test
leave
xchg
sbb
mov
inc
fdivp
imul
push
shl
jo
push
ljmp
std
clc
add
dec
aad
lods
mov
pop
ret
jb
jg
sahf
and
out
add
lods
adc
mov
inc
xchg
stos
sbb
cmp
lcall
out
push
stos
mov
stos
outsb
test
mov
or
aam
es
and
inc
push
push
jno
dec
notb
push
and
inc
ret
je
mov
push
out
push
jg
outsb
pop
pop
movsb
or
xchg
cmp
stc
push
or
or
mov
int3
and
mov
jge
in
jae
cmpsb
dec
push
or
and
adc
inc
sahf
std
xchg
cmpsb
push
test
es
sbb
mov
xchg
xlat
jge
frstor
jne
cs
stos
pop
lret
int3
mov
std
cwtl
scas
fwait
mov
adc
lea
movsb
rcrl
push
adc
shll
pusha
jo
push
push
or
mov
inc
pop
dec
js
inc
mulb
cli
fbstp
push
int
popf
stos
es
push
or
mov
sbb
jecxz
add
lahf
mov
mov
sub
addl
bound
fildl
push
test
xor
cld
mov
loop
fstpl
cmpsb
sbb
dec
cmp
push
push
fsubr
xor
pop
cmp
repnz
sbb
mov
movsl
rolb
rcll
mov
mov
ficomps
lret
pop
shl
jnp
cmp
pushf
inc
sub
out
icebp
enter
ret
test
jg
sub
mov
hlt
rclb
add
movsl
or
mov
mov
jno
or
iret
push
sbb
shrl
cmp
or
iret
mov
sub
rorb
inc
sub
divl
in
les
das
nop
adc
sub
xrstor
jno
mov
aad
add
mov
lods
loopne
fistps
sub
jg
aad
jl
push
out
xlat
in
lcall
inc
mov
fnstenv
mov
and
in
or
or
sub
adc
push
lea
in
popf
jg
loop
jge
jbe
dec
in
cli
lret
jbe
cmp
out
or
fwait
call
dec
sub
dec
jp
xor
mov
lea
dec
sub
dec
add
arpl
into
fs
stos
ss
cli
enter
or
pop
sbbl
and
jmp
push
cmp
push
xchg
sub
push
imul
jns
loopne
inc
jmp
sti
pop
dec
and
int3
or
loop
sub
jns
imul
xor
sub
out
out
and
cmpl
arpl
call
adcb
push
add
shll
loopne
imul
mov
ja
mov
pop
test
mov
shrl
das
mov
flds
add
jp
jmp
pop
mov
and
or
add
fidivl
mov
lret
xchg
mov
das
out
or
jb
loope
inc
je
stos
mov
and
pushf
cltd
adc
dec
decl
sub
inc
inc
test
mov
imulb
nop
test
bound
and
inc
nop
mov
jns
mov
daa
adc
in
inc
mov
or
das
testl
dec
xor
push
jbe
inc
outsl
xor
xchg
js
lret
mov
loope
loopne
ss
add
sub
mov
pop
xchg
xchg
loopne
cmp
lahf
push
push
idiv
pushf
dec
fidivs
ljmp
ret
daa
loop
add
dec
loop
inc
mov
sub
inc
push
dec
leave
push
les
jno
xor
fcmovbe
adc
ja
xor
out
push
sbbb
lahf
bound
mov
popa
and
jl
hlt
insb
pop
xchg
cmp
or
cltd
lods
lods
pusha
jno
out
push
ds
sbb
fs
or
jae
cmp
pop
xchg
js
pushf
shrb
shrl
jg,pn
clc
jmp
enter
jle
pop
adc
testl
leave
sti
and
sub
std
pop
push
sbb
mov
insl
pop
push
mov
xchg
or
mov
xchg
nop
pop
jb
fs
add
xchg
sbb
test
stc
icebp
xchg
and
or
add
fadds
mov
jle
pop
fwait
jl
stos
xchg
and
adc
pop
lock
xor
pop
sub
or
pop
call
lcall
inc
jmp
and
adc
pop
enter
mov
push
sbb
insb
lods
inc
add
mov
mov
scas
xchg
and
rorb
sbb
sbb
mov
xchg
inc
inc
sub
movsb
cmp
jae
enter
adc
fisubl
in
push
pop
lock
mov
mov
add
push
lock
pop
je
or
outsl
sbb
dec
into
fwait
mov
mov
cmpsb
push
gs
arpl
aaa
cld
push
jl
mov
lcall
mov
rolb
fisubrl
adc
fs
dec
dec
dec
je
sarb
dec
cvttps2pi
pop
add
ds
xor
mov
add
mov
iret
fstl
insb
mov
mov
xor
shll
enter
fwait
push
sub
pop
into
mov
xor
aad
cmp
lods
xchg
xchg
cwtl
cmp
push
loopne
lahf
es
fsin
mov
inc
sub
sbb
xchg
subl
bound
ljmp
xor
hlt
sub
test
jp
lret
out
jo
movsl
mov
mov
and
clc
sbb
mov
ret
fmuls
lds
aas
xchg
push
and
jne
push
cmpsb
faddl
and
xor
xor
jo
std
add
mov
and
fstl
jg
mov
xor
std
movsl
imul
adc
je
cmp
popa
mov
adc
cld
fcompl
repnz
icebp
xchg
xchg
dec
add
add
mov
xor
push
inc
mov
negb
mov
aam
cli
mov
movl
je
xchg
and
lret
add
clc
fwait
lret
fstpt
pop
ret
insl
cld
xchg
push
mull
sub
adc
xchg
movsb
push
mov
mov
sub
sbb
mov
jno
sbb
fs
inc
add
mov
frstor
push
lock
mull
adc
outsl
dec
jg
cld
push
pop
lcall
push
das
mov
sahf
push
scas
cmc
cmp
pop
repnz
jne
add
clc
in
push
xchg
jge
stc
inc
mov
popa
pusha
sub
sub
push
push
xor
mov
mov
repnz
ret
pop
jmp
orl
xchg
xchg
push
repnz
fucom
mov
es
je
shlb
icebp
xchg
sub
push
imul
inc
cli
adc
in
xor
xchg
enter
jno
cmc
ret
mov
xchg
js
fldenv
xlat
jmp
nop
and
inc
iret
push
push
pop
sbb
xchg
or
in
sti
and
out
pop
stc
mov
stc
jno
mov
mov
pop
stc
mov
cmc
out
frstpm(287
lods
add
je
out
jp
imul
adc
cmc
mov
mov
enter
sahf
and
fcomi
ja
mov
stc
xchg
inc
and
xor
dec
inc
lahf
xchg
push
pop
stc
jle
dec
pop
jle
sbb
popa
pop
enter
imul
cmpsl
mov
push
inc
jae
pop
popf
mov
adc
aam
negb
lods
dec
mov
inc
pop
js
add
fs
lcall
das
add
mov
mov
pop
cmp
imul
notb
loop
mov
fwait
sti
cld
mov
outsl
loope
jo
fimuls
pop
add
stc
pop
xchg
add
std
push
and
sbb
cmp
pop
dec
loope
stc
sbb
stos
icebp
lods
xchg
in
pop
repnz
and
jecxz
imul
cli
push
mov
scas
lods
outsb
daa
adc
xchg
inc
loop
sub
cmp
dec
jno
out
push
inc
sbb
cmp
fimull
cmc
cmp
sbb
lods
dec
mov
loop
push
lahf
jmp
imul
pop
lock
and
lcall
neg
scas
add
push
loopne
ret
js
xor
mov
xchg
je
jns
jp
iret
inc
les
enter
lret
scas
sbb
fsubs
outsl
mov
or
jge
xor
scas
push
inc
lahf
mov
cmp
lock
xchg
mov
pop
loop
add
rclb
movsb
or
xor
iret
mov
outsl
lods
inc
outsb
cmc
in
jnp
pop
add
ds
xchg
enter
fs
movsb
mov
xor
push
ljmpw
vdivpd
test
mov
jl
stos
repz
mov
inc
lock
add
movsl
sbb
es
rcll
mov
cs
in
stos
bound
pop
leave
mov
lret
mov
or
jge
pushf
mov
and
fwait
out
aas
iret
dec
out
and
data16
push
sbb
mov
sbb
jb
shlb
push
sahf
aas
mov
jp
inc
test
mov
fstp
xor
add
mov
pop
stc
enter
hlt
movsl
inc
add
mov
adc
xor
mov
jle
inc
adc
sub
fidivrs
mov
cmpsl
lcall
xchg
pop
push
pop
pushf
cmp
mov
xor
cltd
insl
andl
in
mov
jae
xchg
mov
mov
jno
jle
ja
in
shll
jg
out
shlb
mov
scas
and
repnz
test
add
je
adc
sub
xlat
or
shrl
sbb
sbb
sub
cs
clc
ss
lock
push
andl
idivb
pop
jmp
push
mov
addr16
rcl
fs
imul
sbb
shrb
cld
push
jo
add
dec
int
cmp
aam
xchg
xbegin
mov
sbb
cmp
sub
mov
int3
insl
xor
push
ljmp
sub
mov
lea
push
inc
sahf
nop
outsb
sbb
lods
inc
mov
adc
jmp
jb
jmp
push
mov
xor
pop
dec
out
popf
add
rorb
clc
jmp
cltd
popf
in
stos
sbb
mov
shll
lods
hlt
lahf
add
outsl
int3
jmp
adc
pushf
dec
cs
mov
mov
fists
rorb
jae
rclb
jl
mov
popl
or
in
rcl
fldt
push
cli
pusha
aam
int
test
push
insl
pop
inc
push
divb
jbe
test
les
mov
std
test
aas
and
jbe
xchg
movsb
mov
push
imul
mov
ljmp
mov
jnp
jmp
dec
adc
push
xor
or
popf
push
orb
jae
into
mov
shrb
inc
les
dec
xor
xchg
inc
adc
xchg
jmp
les
xchg
pop
hlt
inc
test
stc
mov
out
das
or
inc
add
sbb
pop
out
bound
shll
sti
push
insl
test
sbb
push
adc
push
ret
cmp
push
cltd
cmpsl
pop
gs
xlat
jp
add
into
xlat
aam
dec
xor
stos
popa
loopne
enter
mov
aam
fcoms
inc
pop
idivb
sub
push
ljmp
or
lret
cmpsl
cs
pop
jb
xchg
leave
fs
xchg
pop
or
rcrb
fucomp
mov
jecxz
inc
lret
outsl
rol
pop
or
fwait
mov
ret
sub
popa
xor
inc
mov
test
push
jcxz
je
adc
push
popf
xchg
outsb
push
or
popf
pop
push
fnclex
mov
test
insl
shlb
dec
fildl
fs
movsl
int3
push
pop
cmpsb
fs
and
dec
aam
inc
push
inc
jp
xchg
sub
mov
ss
mov
shll
insb
insl
aas
jle
adc
lods
or
sbb
and
das
jb
push
mov
stos
push
aam
scas
mov
xchg
cmp
dec
stos
mov
pop
cmpsl
andl
xor
cmp
andb
adc
push
fsubrl
pop
jmp
xor
ss
sbbl
jmp
insb
jns
repz
dec
jnp
cmp
not
lods
addr16
xchg
push
test
data16
cwtl
lods
mov
xorl
aas
jae
imul
or
xor
mov
loop
mov
jns
push
imul
jae
add
cmp
add
lret
sub
dec
mov
pop
jae
loope
sub
and
shl
sar
or
rolb
inc
jb
and
jle
xchg
or
mov
fadd
outsl
mov
sbb
dec
data16
out
xor
mov
cli
subb
mov
cmpsl
xor
in
fisttps
mov
jo
pop
xchg
jne
pop
insb
icebp
ret
jae
and
add
arpl
sahf
stc
icebp
mov
push
pop
jnp
inc
cmp
daa
mov
enter
push
dec
outsl
mov
sbbb
outsb
sub
xor
imul
and
stos
rcl
adc
pushf
pop
fdivrl
loope
pop
cltd
ret
insb
je
mov
mov
xchg
stc
rclb
jb
sbb
fistpl
sbbb
jg
imul
mov
pusha
fnstenv
push
aas
loope
jnp
cmp
mov
int
repnz
mov
add
add
fdivrl
ss
dec
adc
or
movsl
inc
sub
ds
leave
fwait
insl
ror
ss
push
loop
mov
mul
in
xchg
test
clc
push
cs
lods
adc
push
lea
arpl
neg
cld
push
gs
subb
sbb
pop
mov
mov
mov
das
push
test
ss
cli
int3
andl
mov
sub
jle
stc
push
dec
test
mov
mov
pop
cmp
mov
sbb
inc
mov
stc
push
sub
add
ds
in
outsb
mov
test
and
lahf
push
jmp
and
or
mov
add
popa
dec
jmp
jne
sbbb
sub
ret
sbb
dec
cmp
mov
xchg
xchg
cmp
xchg
sbb
popf
cwtl
jmp
adc
fwait
and
jp
push
rcll
sub
push
push
push
testl
or
movsl
xlat
xor
imul
add
pop
insl
and
or
loopne
sub
sub
clc
and
sub
shll
push
jl
sbb
xor
cs
subl
mov
jae
addr16
fstpl
fsubs
push
ja
fcomi
mov
fmuls
sub
fidivrs
rcr
loopne
lods
add
sub
push
dec
cmp
lahf
call
ss
pop
sbb
je
ja
hlt
push
adc
mov
pop
jmp
push
ret
test
fists
xchg
fcmovb
cmpsb
gs
jl
pop
mov
jbe
or
add
jns
and
xor
mov
testl
into
xchg
mov
xchg
push
cmpb
jmp
inc
mov
fs
mov
jecxz
lock
sbb
mov
cltd
loop
sti
loope
sbb
stos
or
dec
ret
inc
sahf
sub
push
cld
pop
add
pop
out
add
int3
add
bnd
xchg
clc
fsubrs
ja
subl
clc
aaa
popf
lods
stos
ret
out
std
push
pop
aad
lock
jle
lods
jb
mov
and
sbb
idivb
mov
push
pop
jbe
in
add
adc
out
icebp
sub
loop
lea
push
mov
adc
mov
inc
jae,pt
ds
fldt
fwait
jae
sbb
imul
lahf
push
mov
inc
pushf
pop
xor
mov
fbld
sub
arpl
sbb
xchg
mulb
add
aaa
add
fcomi
xchg
xor
pop
sbb
and
ds
push
cmpsb
cltd
int
shrb
ficoml
inc
mov
shrl
or
loope
fmuls
lret
cltd
fcoml
sub
xor
jmp
mov
xlat
pusha
mov
arpl
daa
pop
and
xchg
push
inc
lock
iret
popa
pop
lods
jne
imulb
or
xor
adc
xor
mov
push
test
fwait
sbb
movsb
inc
daa
sahf
lret
gs
push
cmpsl
sahf
ret
cmp
jno
pop
jl
mull
ds
push
and
or
stc
xchg
push
insl
cmp
mov
addb
repnz
push
push
inc
lret
rolb
pop
stos
inc
push
js
pop
jmp
push
sbb
xor
test
push
aaa
dec
or
xor
mov
push
fcomps
pop
mov
cmpsl
sbb
jbe
jne
sub
int
mov
sub
cmp
repz
xlat
jp
pop
aad
and
or
sub
lods
sbb
ret
pop
push
sahf
rcll
sub
push
stos
mov
jmp
mov
and
dec
or
pop
rcr
scas
pop
push
inc
sub
xchg
cmp
sub
pop
xor
loopne
repz
cmp
pop
in
stc
gs
and
adc
sub
dec
fs
das
imul
adc
jbe
adc
mov
jb
shlb
loopne
icebp
xchg
dec
mov
sti
jge
adc
ds
and
sbb
insl
pusha
subb
dec
gs
dec
push
in
lahf
icebp
fwait
cs
mov
mov
out
popa
inc
les
stos
fs
into
xchg
ja
jb
and
adc
mov
jp
mov
and
sub
repnz
sbb
pop
aaa
and
imul
stos
lahf
imul
or
push
outsb
jmp
in
xchg
xor
sbb
xchg
orb
pusha
inc
lea
dec
add
aad
stos
mov
xor
push
fcmovu
push
ficoml
lods
lea
push
orl
add
pop
shlb
rcrl
xor
cmp
in
add
mov
popa
push
stos
xor
leave
lret
adc
ja
jmp
imul
mov
pusha
inc
pusha
ja
xchg
lret
xor
jno
mov
pop
arpl
sub
jp
xor
mov
mov
sub
test
cmp
jnp
fucomi
gs
divb
dec
daa
stos
and
fwait
out
jecxz
aam
fldt
sub
add
mov
mov
push
cs
push
lods
mov
repz
loope
mov
mov
xchg
adc
jno
aaa
jg
inc
push
mov
jb
js
test
fsubrs
adc
ja
aas
outsl
test
or
shll
lcall
lcall
pop
loope
cwtl
les
jnp
inc
mov
add
rcll
and
insb
scas
sbb
sub
in
inc
ja
mov
lds
pop
test
sahf
push
jg
into
sub
add
cmpsb
out
xchg
add
rolb
rcrl
cmp
icebp
sub
push
enter
fildll
push
pop
stos
push
mov
xchg
sub
flds
xor
sti
jecxz
inc
pop
popa
fnstsw
icebp
mov
and
rorl
imul
adc
sub
movsl
xchg
out
push
fbstp
cmc
add
jb
adc
movb
mov
jl
popa
xchg
sbb
or
pop
leave
pop
sub
push
mov
icebp
dec
jecxz
outsb
inc
lahf
lret
and
pop
adc
pop
test
stos
sub
mov
sub
mov
in
cmc
shrl
mov
or
lea
or
xchg
scas
shrl
xchg
lcall
mov
rcrl
pop
movsb
outsb
sbbl
ret
les
rolb
imul
scas
add
int
fisubl
leave
test
and
cmp
sbb
pop
pushf
mov
cmp
sahf
xchg
test
daa
push
in
xor
pop
add
jo
inc
inc
test
cmp
cmc
add
frstor
and
lea
xchg
cmpsl
mov
shlb
inc
cmp
add
xchg
mov
xchg
lcall
add
stos
dec
push
je
in
sbb
shll
cwtl
xchg
jp
in
sbb
out
jns
add
inc
cmpsb
mov
push
push
loope
jb
jb
mov
sub
ja
ret
or
movsl
dec
xchg
push
fcompl
mov
jmp
jne
or
mov
lds
and
mov
lret
pop
test
dec
stc
sbb
add
push
pusha
popf
dec
jne
xchg
xor
push
daa
sahf
int3
inc
sahf
ljmp
cmpb
xchg
add
xor
dec
xchg
icebp
xchg
push
sbb
ficompl
clc
xchg
insl
stos
cmpb
cmpsb
mov
ja
inc
in
iret
fsubs
aam
and
daa
or
cs
cmp
or
js
push
mov
mov
sub
hlt
iret
insb
pop
push
scas
cmc
sti
fs
scas
in
rcl
and
dec
jno
lahf
jne
and
imul
lcall
sbb
aad
into
pusha
sub
fs
movsb
pusha
fnsave
push
mov
out
rcrb
inc
push
outsl
mov
pop
mov
inc
adc
sbb
jno
mov
sbb
mov
xchg
stos
cmc
mov
mov
shrl
xor
shlb
push
cmp
scas
sbb
xor
jnp
xor
into
and
hlt
jbe
mov
mov
fldcw
shrb
mov
lcall
cli
sbb
lods
fstpl
out
js
and
xchg
mov
cmpsl
mov
xchg
push
mov
lea
xor
dec
sbbb
jns
jecxz
push
sti
and
mov
push
mov
adc
and
inc
inc
lods
jp
out
inc
or
shrl
mov
loopne
sbb
pop
cld
nop
int3
xchg
xor
or
jb
mov
lret
jae
lods
jne
ss
add
shlb
adc
rcrl
mov
xor
ljmp
mov
jp
adc
add
mov
sbb
xor
int
dec
pop
adc
stos
loope
mov
out
mov
add
mov
mov
xor
push
mov
ret
and
sbb
add
out
xchg
int
mov
and
std
mov
in
xchg
mov
jecxz
mov
addr16
xchg
js
jg
insl
into
dec
cmp
jg
stos
cltd
pushf
xor
hlt
and
in
movsl
dec
movsb
mov
pop
dec
test
push
mov
je
mov
movsb
sbb
pop
jle
int3
pop
push
push
jno
scas
cmp
mov
dec
xchg
mov
inc
nop
lock
and
inc
mov
ret
inc
repnz
xlat
push
inc
sub
mov
add
dec
pop
push
icebp
sbb
sbb
push
cmp
pusha
sbb
insl
inc
push
and
sub
sub
daa
ficompl
push
int
jmp
sbb
jo
adc
and
cmp
adc
xchg
jp
mov
pop
mov
stc
loope
xor
lods
mov
inc
sbb
mov
cmp
pop
inc
push
int3
push
pop
in
movsl
fdiv
jns
sar
inc
bnd
jb
fstl
lods
loopne
mov
sbb
push
mov
mov
cmp
jb
insb
test
cltd
adc
sbb
cltd
test
ret
es
ja
sbb
pop
data16
lahf
int3
mov
lret
lea
icebp
loop
es
testl
mov
xor
fistpl
lret
cmp
pop
test
out
inc
stos
addr16
xchg
sub
out
sti
popa
jae
std
push
inc
jae
out
mov
mov
jl
jmp
pop
add
add
adc
fnstcw
push
jge
push
mov
mov
and
int
inc
adc
mov
mov
icebp
aad
std
out
lea
mov
movsb
mov
mov
jbe
shr
cwtl
xchg
mov
sub
lcall
mov
inc
call
fwait
mov
cmpsl
sub
jnp
mov
dec
and
scas
adc
in
std
popf
ficompl
and
sti
mov
rorb
fs
fistl
add
enter
mov
scas
into
mov
mov
adc
daa
jbe
cli
and
fldcw
mov
add
push
jecxz
dec
dec
dec
ljmp
dec
mov
bound
dec
hlt
cwtl
pop
aad
or
cmp
jbe
stos
push
loop
fsubp
push
xchg
adc
inc
ds
push
pop
nop
jmp
sti
pop
jg
fsubrl
sahf
test
movsb
addr16
adc
pop
ret
cld
jae
add
mov
shr
add
insl
mov
cmp
gs
jae
mulb
je
pop
popf
adc
aaa
jb
out
sbb
insb
mov
jge
lods
lcall
stc
xchg
les
push
pop
data16
push
mov
shll
cmp
jo
mov
dec
jno
push
add
jle
xor
aad
jo
ja
lock
paddusw
mov
mov
int
pop
out
fisttpll
sbb
mov
fldt
daa
repz
gs
push
jl
bound
pop
or
xor
les
arpl
nop
jle
adc
add
push
xor
in
xchg
int
pop
fldenv
pop
xor
cmp
repnz
or
insl
push
push
dec
jg
fsubs
push
std
adc
add
and
mov
dec
sarb
xchg
mov
jg
ss
jmp
movsl
mov
stos
dec
mov
adc
and
jb
xchg
sbbl
inc
into
xchg
cmp
jmp
xor
mov
mov
call
pop
pop
fisubrs
jne
cmp
lea
stos
or
cmp
mov
xor
adc
ja
popa
fmul
pop
inc
dec
dec
sarl
lret
repnz
scas
xchg
idiv
sub
cmp
lret
cld
rolb
push
xor
push
sub
xchg
sahf
addb
nop
jge
or
imul
xor
stos
mov
addr16
mov
ds
pop
adc
pushf
insb
repz
mov
pop
add
add
mov
ds
cmpsb
mov
lea
in
xor
cmpsb
add
inc
or
inc
cwtl
and
add
cmp
jo
or
mov
rclb
jns
push
jbe
std
mov
or
dec
in
mov
cwtl
mov
lahf
pop
aad
in
int3
sbb
enter
pop
push
stos
les
lahf
push
test
jp
cwtl
aam
pop
jg
jo
xchg
in
lea
jno
imul
cmp
fdivrs
cmp
dec
ss
sub
shlb
or
xor
xor
jae
sbb
out
ffree
shlb
sti
test
xchg
gs
push
xor
mov
cmp
xchg
xchg
dec
jg
out
frstor
in
mov
fstpt
sub
int
aad
aam
sub
mov
cmpsl
xor
js
jo
out
cmp
dec
inc
mov
inc
cmp
cli
inc
mov
mov
jb
jg
in
call
mov
arpl
loopne
jmp
sbb
enter
push
lahf
mov
and
inc
pop
pop
into
mov
sub
adc
adc
adcb
add
loopne
push
push
fnstenv
outsl
rorb
imul
or
lret
inc
or
cs
aad
sahf
push
cmp
out
lahf
push
push
push
aad
xor
add
mov
pop
movsl
pop
subb
hlt
addr16
and
icebp
dec
xor
pop
icebp
out
dec
out
ret
fisttpll
rclb
lcall
outsl
in
test
repz
adc
fwait
mov
push
jns
add
ja
xchg
inc
nop
aam
adc
movsb
and
icebp
mov
fcomip
sarl
sub
or
ret
dec
jl
jecxz
and
lock
dec
sbb
sub
aaa
pop
fildl
ja
icebp
mov
xchg
pop
les
push
and
mov
aam
mov
pop
and
sub
movsl
sub
mov
add
sub
mov
dec
stc
xorb
mov
mov
jl
decb
pop
sti
fmulp
pop
adc
xchg
lcall
aad
addr16
rcrb
movsb
adc
inc
fmulp
mov
into
add
push
cmpsl
dec
outsb
jae
pusha
test
movsl
lods
fisubl
daa
inc
iret
pop
xchg
jmp
sbb
xor
cmpl
and
adc
das
fists
adc
add
cltd
sub
fmulp
mov
xchg
mov
js
bound
addb
nop
cmpsb
jmp
stos
adc
push
jno
das
icebp
inc
decl
div
cmpsl
push
or
pop
movsl
insl
aaa
mov
jp
fbld
push
xor
adc
adc
add
aas
or
jae
insl
dec
int3
inc
adc
pop
cmp
ret
repz
push
mov
jb
jo
push
pop
or
and
mov
test
push
fdivrs
push
stc
pop
pop
sub
je
or
pop
push
dec
cmp
int
pop
sbb
aam
fwait
sbb
xchg
xchg
lea
and
test
leave
pop
push
mov
cmp
inc
daa
bound
jmp
sar
jecxz
or
and
inc
cltd
add
mov
dec
fimuls
ret
add
add
xchg
cltd
mov
mov
push
shl
stos
jmp
ret
and
dec
jecxz
lds
inc
jle
pop
out
lret
lret
roll
fcoml
mov
push
in
add
adc
xchg
mov
pop
in
push
push
sbb
in
mov
xchg
mov
jmp
aam
jb
subb
dec
stc
xor
or
lods
scas
iret
sub
movb
jae
adc
mov
sar
cmpsb
dec
mov
push
adc
xor
add
adc
add
xchg
inc
sub
cld
xchg
xchg
insb
and
cmp
inc
mov
xchg
lret
lea
lock
fidivl
mov
cmpsl
js
xor
ror
pop
ds
sbb
into
lods
add
dec
pop
jle
jne
mov
std
andb
add
les
dec
je
lcall
dec
push
pop
fisubl
jle
sbb
xchg
xchg
or
push
mov
push
inc
cmpsb
ret
mov
dec
fmull
lret
inc
inc
fdivl
push
insb
pusha
repz
xorl
push
xchg
sbb
mov
icebp
insl
in
inc
gs
into
pop
jns
imul
adcl
daa
sarb
popf
pop
and
pusha
roll
loopne
inc
sbb
xor
xor
jne
lcall
mov
jmp
aad
mov
popa
push
push
inc
pop
mov
rorb
xor
pop
pushl
push
jne
lret
xlat
insl
xchg
mov
adc
mov
sub
and
cmpsl
mov
daa
or
inc
pushf
lret
outsb
push
cmpsl
ret
imull
and
inc
xchg
cmp
in
testb
test
xorl
and
jns
jbe
jnp
ja
in
sbb
jno
cli
and
mov
dec
or
mov
cmp
in
inc
shlb
jg
fdivrs
test
inc
mov
jne
insl
or
insl
push
stc
sub
push
clc
sub
arpl
jmp
stc
insl
push
mov
xchg
mov
jo
push
push
sbb
and
shrl
stc
sarb
jge
or
mov
bound
jl
popa
out
imul
cmc
fwait
cmc
add
add
adc
inc
out
dec
test
hlt
mov
push
sbb
and
mov
adc
pop
dec
push
repnz
xor
sahf
xchg
es
addr16
xor
and
movsb
xchg
inc
fwait
sbb
mov
sub
testb
pop
out
arpl
push
into
rcll
shll
dec
gs
movsb
adc
and
inc
push
sbb
adc
iret
add
xorl
pop
hlt
in
dec
jmp
test
adc
sub
adc
xchg
xchg
push
xor
std
pop
jb
xorl
cmpsb
inc
lods
sbb
pop
fadd
std
test
outsl
lahf
rcr
bnd
pushf
addr16
addr16
mov
jle
cltd
push
push
pop
inc
ja
push
dec
dec
dec
and
xchg
xor
xchg
dec
std
mov
sbb
in
mov
add
movsl
jae
inc
ds
push
int3
repz
inc
mov
push
int
push
mov
imulb
or
bound
xchg
pop
mov
mov
xchg
sbb
lret
xor
xor
call
push
testl
popa
adc
cmp
imul
insb
push
jmp
pop
jmp
xchg
sbb
rolb
sub
dec
rcr
cmp
push
ret
and
pop
in
mov
lcall
or
cmc
aam
add
xchg
repnz
mov
stos
jns
sub
push
out
cmpsb
stos
cmp
sbb
inc
fcmovnb
inc
outsb
movsb
add
inc
das
lret
inc
ret
mov
fsub
push
sbb
mov
in
loopne
sub
add
arpl
repz
jae
pmulhuw
enter
in
sub
clc
outsl
pop
jmp
cmp
mov
lea
pop
addr16
xchg
shrb
push
loope
mov
dec
movsb
xor
dec
jg
jbe
dec
ja
cld
jmp
into
jbe
add
in
dec
int
arpl
movsb
xchg
bound
dec
leave
jl
fistpll
push
loop
nop
negb
sbb
push
mov
movsb
mov
jmp
xchg
adcl
sbb
subl
icebp
push
into
stc
data16
test
push
out
cmp
movsb
dec
mov
fsubrl
or
hlt
jno
inc
mov
jbe
pop
xlat
lock
repnz
fcomip
jp
mov
mov
jecxz
adc
stc
mov
inc
or
xor
aas
add
and
sbb
xor
cmpsl
insl
lds
inc
xor
lods
xchg
mov
popa
mov
mov
nop
enter
lret
mov
icebp
xor
add
dec
lret
xchg
mov
movb
jne
adc
mov
jge
repz
xchg
jge
push
pop
sub
mull
pop
adc
dec
pop
add
addr16
dec
mov
mov
jle
sub
xchg
mov
lods
enter
jle
in
mov
sub
mov
dec
enter
lret
repz
adc
cli
test
xor
adc
jl
xchg
jle
lcall
rolb
sub
sbb
ljmp
lods
and
xchg
mov
sarl
xorb
imull
xorl
push
cwtl
jno
into
lock
sbb
gs
insl
inc
mov
les
cmc
sti
outsb
lods
add
cmp
lds
push
mov
dec
inc
outsl
addr16
clts
frstor
pop
call
je
inc
dec
setp
and
jge
jmp
xchg
stc
push
cwtl
lahf
mov
in
add
and
mov
repnz
std
xlat
cmovle
push
cmp
insl
mov
stos
mov
dec
idivb
stc
mov
push
jmp
gs
cmp
lret
sti
dec
sub
add
pop
mov
add
mov
add
push
dec
sub
mov
xor
mov
ss
stos
sub
loop
sub
or
jbe
ja
out
daa
mov
xor
mov
aaa
push
pushf
and
divl
push
inc
adc
out
cwtl
dec
jp
outsb
xchg
pop
cwtl
jae
cmp
bound
push
mov
leave
dec
cmp
fmull
je
shlb
ja
pop
push
pushl
es
out
inc
js
clc
imul
jle
xorb
sti
add
test
mov
addl
jns
fwait
stc
mov
popl
movsl
dec
popa
mov
fisubrs
and
lahf
shl
in
pop
test
fsubrs
sub
mov
mov
mov
pop
outsl
mov
scas
cmp
and
add
in
mov
add
dec
hlt
jg
mov
out
nop
adc
vhaddpd
addr16
add
popa
outsb
shll
pop
pop
xchg
and
addr16
arpl
sub
in
fwait
arpl
inc
jb
insl
mov
cmp
cmp
gs
xchg
lods
adc
push
push
sub
icebp
dec
scas
push
and
push
push
mov
mov
gs
dec
xchg
leave
popa
cs
inc
lds
pop
dec
push
xor
pop
or
lea
xor
dec
mov
int3
adc
inc
dec
mov
xchg
js
fwait
cltd
mov
imul
faddl
mov
sub
mov
punpckldq
int3
cmp
xor
es
gs
and
fists
mov
call
es
jns
or
dec
add
addr16
addb
fcmovbe
imul
jbe
outsl
sahf
ss
push
out
out
insb
push
mov
lcall
mov
aas
ds
sbb
adc
sarb
xor
xor
pop
jecxz
mov
xchg
lea
mov
inc
shr
movsb
mov
sti
lret
jmp
push
or
add
jp
lcall
sub
cwtl
or
aam
daa
mov
test
fidivrl
loope
popf
mov
lahf
dec
xlat
les
mov
dec
cs
cld
cmpsb
mov
pop
rcrl
dec
call
push
inc
pop
dec
push
inc
cmp
enter
fwait
sub
aas
dec
aad
or
es
mov
push
xchg
sub
into
xor
pop
sti
aas
andl
hlt
enter
je
adc
dec
nop
in
mov
std
jge
push
push
ret
pop
add
fbstp
cmp
mov
out
push
pop
mov
inc
xor
xor
in
negl
ret
pushf
out
call
loopne
fisubrl
cmc
inc
inc
lret
add
push
mov
insl
or
inc
xlat
movsb
xchg
out
imul
adc
into
push
xor
clc
loope
pop
jno
mov
daa
add
sub
out
fdivrs
add
add
dec
dec
or
movsb
jle
mov
aas
push
sub
push
push
push
jb
out
testb
mov
inc
fwait
and
add
lret
and
inc
cmpsb
push
flds
pusha
pusha
nop
cwtl
xchg
gs
lea
cmpsb
icebp
sbb
push
das
icebp
jle
push
gs
xor
mov
inc
or
divl
or
push
call
outsl
jno
push
xor
lods
jge
mov
call
sbb
movsl
in
dec
scas
test
pop
sbb
dec
cltd
sub
mov
cmpsl
fscale
mov
cmpsl
pusha
hlt
jle
xor
inc
test
hlt
sub
mov
pop
inc
lret
popf
add
jecxz
or
imul
aad
faddl
xor
jbe
shlb
mov
lock
cmpsl
jns
fwait
dec
in
mov
adc
fisttpl
inc
scas
ss
mov
push
jg
and
inc
lock
and
adc
jae
mov
fstpt
push
popf
mov
icebp
stos
sub
mov
mov
nop
mov
sbb
cmpsb
xor
pushf
cmp
stos
fs
daa
jno
push
pop
lea
loope
rorb
mov
inc
rcrb
into
test
into
xor
movsl
mov
adc
dec
and
fisubrs
ja
jnp
pop
andb
jo
and
ror
dec
mov
push
or
jo
repnz
mov
jno
rcl
std
ljmp
in
scas
pop
out
dec
sbb
lock
divl
xor
pop
mov
lahf
xor
xchg
dec
test
pusha
cltd
lret
adc
ret
inc
or
je
dec
mov
sbb
imul
in
and
divl
dec
bound
scas
nop
lods
pop
dec
jns
mov
adc
leave
cmp
and
adc
or
xchg
xorl
pop
imul
push
add
cmpsb
and
ss
data16
jns
enter
sbb
add
lahf
inc
outsl
lret
jmp
movsb
add
xor
xor
adcl
xor
push
sarl
inc
addr16
inc
shll
cli
jmp
cmp
mov
mov
cmpb
mov
and
mov
testl
cmpsb
add
enter
scas
add
mov
sub
xor
into
mov
rcpps
ds
shlb
gs
testb
or
xchg
push
jg
in
sub
cld
outsl
movsl
insl
add
ljmp
mov
sub
out
xor
rorb
fwait
cld
shr
add
lock
pop
or
adc
imul
push
jnp
dec
mov
pop
xor
repnz
mov
mov
push
jp
xchg
push
mov
iret
mov
cmc
push
out
cltd
scas
rcll
mov
ret
pop
and
xchg
pop
ret
cmc
cld
sbb
dec
cld
rcrb
imul
into
pop
scas
movsl
mov
roll
in
cmpsb
aad
jae
mov
sub
push
out
cmpl
cmpsb
mov
fists
xor
ret
inc
mov
add
bound
les
push
stos
cmpsl
shlb
lods
dec
fstpl
fs
sbb
push
pop
andb
sti
jno
das
pop
in
add
mov
add
xchg
cld
popa
mov
push
mov
stos
lret
test
pop
cmp
xorl
shr
mov
jg
pop
cmp
ss
ss
xchg
dec
ljmp
in
push
lods
jae
jnp
das
sub
mov
mov
fimull
mov
mov
test
loopne
out
push
or
adc
jb
daa
idivl
cmc
adc
add
call
or
dec
iret
orb
sahf
call
std
jge
adc
test
inc
rcr
imul
mov
flds
into
stos
mov
pop
aam
sbb
mov
repnz
aam
rcl
xchg
mov
or
inc
fldt
clc
mov
push
imul
xor
rorl
pusha
mov
test
sub
addr16
jb
pop
fs
bound
mov
jg
lret
repnz
mov
or
jns
and
push
aaa
dec
mov
ss
in
add
pop
xchg
mov
inc
add
loopne
cmp
pop
fcmovnbe
jb
out
pop
arpl
push
daa
cs
ficompl
out
push
enter
hlt
sti
push
mov
cld
sbb
add
or
pushf
es
inc
cmp
sub
inc
mov
and
adc
das
data16
add
xor
add
scas
test
ret
test
cli
push
inc
repz
cmp
insl
cld
push
out
cmp
je
into
das
xchg
push
cmc
cmp
jp
loop
xchg
adc
adc
cmp
imul
std
xorb
mov
and
push
lret
mov
xchg
sbb
icebp
shl
test
movsb
dec
outsb
jl
loope
mov
push
xor
fwait
ds
xlat
xor
jp
adc
mov
scas
push
cs
sarb
inc
test
jge
dec
mov
dec
mov
mov
and
pandn
mov
les
push
imul
pop
aad
call
cmp
ljmp
mov
ja
lods
push
push
int3
inc
mov
xchg
ljmp
push
fxch
mov
movsl
sbb
adc
fdivr
inc
jecxz
fidivs
iret
lahf
mov
rcl
xor
ss
sub
out
jge
jge
mov
rclb
insl
pop
hlt
js
push
mov
movsb
mov
or
fs
mov
js
ret
pop
imul
lcall
inc
aad
cmp
js
mov
js
shrb
fstp
dec
dec
sarb
insb
inc
cli
mov
pop
push
outsb
stc
sahf
or
push
push
sbb
adc
mov
bound
jno
fld
mov
test
stos
ret
xchg
popf
insb
std
in
push
push
mov
inc
into
int
frstor
jmp
je
xchg
mov
push
add
lcall
into
mov
inc
mov
mov
fisubrl
xor
nop
add
jp
push
jns
inc
repnz
out
inc
dec
xor
pop
fstps
cmp
or
add
mov
push
cmp
arpl
push
mov
jp
jp
pop
jns
aad
hlt
stos
sub
fimuls
push
iret
jle
getsec
mov
and
sub
push
adc
aam
aad
pusha
divl
or
add
push
loop
push
dec
cmpsl
push
mov
movsb
mov
and
loopne
jae
lock
push
aam
es
inc
jge
mov
jmp
orl
xor
mov
mov
push
adc
adc
jl
jle
jno
das
push
insl
inc
push
ss
mov
adc
jb
aam
paddsb
mov
and
mov
js
adc
inc
xchg
push
lock
int
imul
cs
roll
pop
mov
ret
enter
jle
add
mov
jo
scas
xchg
mov
sub
sbb
cwtl
lods
pop
gs
lds
mov
mov
mov
lock
repnz
inc
shrb
sbb
dec
ss
push
ja
pop
inc
cmp
sbb
or
test
fisubs
cld
pop
push
mov
in
sahf
pop
xlat
rcr
inc
mov
in
push
lods
xchg
sarl
aaa
sub
mov
adc
lea
sub
cmp
jle
push
es
add
inc
popf
dec
push
mov
xchg
cwtl
aas
dec
inc
cmp
cmp
inc
inc
dec
outsl
jle
push
xchg
jno
push
popa
adc
jb
adcl
sub
loope
rclb
orl
test
lock
and
cs
out
sub
mov
std
subl
or
hlt
cmp
add
cmp
xor
mov
mov
inc
push
popa
inc
xchg
clc
adc
sub
cmp
mov
and
test
arpl
pusha
inc
nop
mov
push
add
adc
mov
pop
test
mov
cmpsl
aad
jb
lea
xchg
mov
lret
pop
movsl
fimull
sub
jbe
call
mov
sbb
bound
fwait
pushf
imul
in
lret
js
push
cwtl
adc
pop
sbb
in
loope
lds
jmp
movsb
insb
divl
iret
push
fcoms
into
inc
inc
bound
inc
aas
test
in
mov
loope
xchg
out
or
xor
add
mul
xchg
pop
xchg
jnp
sub
jae
mov
les
pusha
mov
jns
jnp
shrl
scas
xchg
pop
lds
imul
icebp
sbb
pop
mov
xchg
ljmp
out
movl
push
cmc
in
lods
xchg
mov
enter
pop
jle
xor
in
cmpsl
xchg
sub
repz
jae
adcb
adc
push
xor
jns
orb
repz
jo
xor
int3
fwait
jae
sub
dec
push
inc
mov
bound
orps
dec
int3
adc
xchg
dec
jne
sub
js
testl
mov
sub
inc
cmp
cli
jno
call
or
pop
cmpl
cmp
add
test
sub
dec
aam
data16
push
test
in
mov
pushf
cmp
xchg
lods
ret
pop
jp
pop
popa
jmp
lahf
push
out
dec
jle
imul
add
dec
mov
in
scas
jle
cmc
jmp
and
jp
loope
ret
cmp
xchg
mov
pop
test
xchg
sub
aam
and
lret
in
sarb
sti
dec
iret
mov
aas
out
sub
sahf
sub
xchg
daa
sahf
xor
fimull
sub
and
je
mov
mov
mov
cs
ljmp
xor
incb
sub
arpl
jg
inc
cli
or
movsb
sub
into
xorl
sbb
xor
sbb
cmp
mov
pop
inc
mov
vandpd
and
gs
and
lea
bound
xor
test
dec
lahf
or
or
inc
cmp
mov
adc
arpl
ds
imul
stos
jge
lods
fbstp
pop
ljmp
fstps
mov
inc
clc
popf
sbb
sahf
or
clc
cmp
out
cmp
xor
fistpll
dec
ficoml
adc
movsb
aam
jnp
fcomp
jae
push
mov
fidivrs
pusha
fsubr
pop
sbb
adc
popf
int
inc
pusha
cmove
mov
mov
xor
daa
or
cltd
ret
lds
shll
xlat
popf
into
pushf
rolb
fimuls
xor
cmc
loope
pop
imul
mov
repz
test
mov
lcall
aad
dec
and
mov
movsl
in
stos
pop
dec
loop
add
cmp
ret
mov
pop
push
xchg
or
inc
aaa
ja
mov
mov
rorb
ret
xor
dec
jae
les
in
or
leave
xorl
add
mov
loope
das
in
pop
fistps
ret
pop
bound
insb
shll
test
test
mov
dec
iret
add
cli
fwait
mov
fcmove
mov
ss
push
aas
sbb
fsubs
xchg
frstor
and
lea
fcomps
add
fldl2e
fildll
pop
shr
mov
testb
mov
outsl
jmp
mov
pop
pop
cltd
bound
scas
es
cmp
mov
pop
imull
lock
dec
insb
add
nop
or
cvtpi2ps
dec
int
fcoms
mov
push
orl
cmp
sbb
into
xchg
xchg
daa
stos
cmc
cs
add
repnz
mov
xchg
xor
jmp
aas
mov
rclb
ret
xchg
add
push
jl
aaa
gs
nop
mov
lds
xchg
lods
cmc
nop
jne
push
mov
dec
mov
jo
notb
call
push
inc
mov
sub
xor
mov
es
aam
mov
repz
popa
jge
xchg
ja
addr16
lret
int3
pop
icebp
bound
fwait
sub
sti
dec
es
xchg
clc
cmpsb
or
ret
outsb
sub
mov
jbe
xor
sahf
xchg
call
mov
pop
inc
jl
xor
rcl
push
dec
mov
lea
jmp
into
dec
inc
push
fsubl
sbb
out
test
iret
add
sti
pop
sbb
ret
dec
int3
inc
dec
cmp
scas
cmpsb
mov
mov
sub
shlw
add
stos
jecxz
push
pusha
sahf
aad
push
adc
cmovs
and
js
test
test
adc
enter
xchg
rcll
cmpsb
fstps
scas
sbb
aas
xor
sbb
push
jne
std
jno
pop
outsl
mov
inc
pop
mov
push
in
popaw
mov
in
jae
mov
xor
jns
cmp
adc
mov
out
and
push
int3
fiaddl
cld
pop
movsb
cmpsb
mov
xor
aaa
ret
xorb
and
add
sar
or
repz
daa
dec
xlat
inc
je
mov
rep
js
inc
in
jno
mov
jo
pop
jo
stos
lret
cltd
push
int
mov
cmp
push
mov
hlt
jle
aas
out
frstor
inc
jl
andb
mov
add
outsl
mov
hlt
xor
dec
xchg
mov
and
imul
add
insl
popf
int
loope
fisubs
shrb
mov
sub
or
mov
mov
fmull
mov
inc
in
gs
popf
xchg
mov
inc
repnz
in
add
outsb
test
mov
sub
sub
es
cmpsb
mov
mov
push
lret
jmp
imul
aam
cmp
push
jne
pushf
into
dec
ret
xchg
ss
mov
inc
add
dec
sar
pop
cmp
or
lcall
out
sub
stc
or
imul
mov
inc
and
aas
scas
arpl
data16
dec
fsubs
xor
push
imul
imul
pop
pop
xchg
xchg
and
sbb
insb
mov
mov
inc
in
gs
sub
sub
lea
push
adc
mov
lret
pop
loop
xor
fs
sbb
lods
fcompl
loopne
pop
jp
push
in
mov
mov
jecxz
pop
imul
xor
fldcw
or
imul
xchg
scas
clc
dec
mov
mov
mov
aad
out
xor
sub
jae
add
sub
xchg
and
jg
and
dec
setg
or
cli
rcll
xchg
out
mov
ja
sub
xor
test
jno
outsb
pop
aaa
pusha
or
add
push
imul
push
or
lods
das
shll
leave
in
loope
roll
movsl
adc
test
in
mov
fucom
pop
popf
filds
leave
mov
iret
dec
out
adc
aas
icebp
add
ss
pop
movsl
push
dec
adc
sub
rcl
sbb
pop
ds
and
cmpsl
inc
lea
negl
jl
inc
nop
pop
xchg
or
dec
insb
mov
outsl
stos
inc
mov
test
push
pop
pushf
fdivs
add
ss
and
cwtl
mov
mov
jl
stos
hlt
pop
sbb
mov
xchg
dec
dec
adc
out
sbb
lea
arpl
push
lret
cmp
and
mov
pop
and
mov
sahf
rcrb
jecxz
cmp
mov
pop
test
je
push
xchg
andl
lea
nop
dec
mov
pop
insl
add
mov
outsl
loope
into
int3
jmp
notl
mov
or
fimuls
inc
test
sbb
sbb
xorb
repnz
lahf
adc
flds
in
inc
inc
dec
jge
mov
ljmp
push
lret
xlat
outsl
xchg
pop
mov
fbld
mov
add
dec
daa
stc
sub
repz
jo
push
cmpb
jmp
das
push
stos
outsl
jb
push
sahf
dec
lods
mov
aaa
push
add
jbe
std
rorb
cmp
addl
xchg
shll
scas
cmp
ret
xchg
imul
push
and
mov
fdiv
stc
mov
jle
xchg
xchg
mov
mov
loop
dec
mov
in
mov
shr
ret
rcll
add
mov
insl
jecxz
xor
je
mov
push
sbb
mov
push
into
sahf
pop
push
into
repz
cs
inc
insl
in
rolb
add
fmuls
adc
loope
movsb
fadd
pusha
nop
je
rcrb
xchg
fmulp
cmp
lods
mov
ret
xor
xchg
lea
vmwrite
fwait
sub
andb
add
dec
cli
aaa
test
hlt
sbb
aaa
dec
mov
lcall
dec
je
into
and
cmp
hlt
sbbb
sub
stos
push
cmp
xor
inc
adc
scas
pop
sbbl
fdiv
add
xlat
sub
jmp
mov
fcmovbe
cs
mov
stos
mov
fiaddl
push
push
mov
pop
pop
ret
daa
or
ficoml
xlat
pop
and
inc
ror
sbb
movl
pop
je
fmulp
jbe
mov
fisubl
das
jae
sbb
cmpsl
in
mov
cld
rcll
int3
lds
lahf
test
xchg
divl
shrl
mov
mov
das
mov
mov
or
ds
mov
add
mov
jmp
xchg
cmp
xor
dec
outsb
mov
cwtl
lcall
xchg
push
xchg
cmp
pop
in
pop
je
inc
add
inc
pop
repnz
insl
inc
jb
mov
jns
int
xchg
jl
cmpsl
insl
dec
mov
jp
cmp
dec
adc
cld
sbb
cli
sbb
push
insl
insl
and
test
je
test
push
cmc
mov
loop
sbb
pop
repz
sub
jmpw
rorl
sbb
adc
jl
mov
xchg
mov
cmpsl
mov
mov
dec
jle
enter
inc
push
loope
ljmp
cmp
inc
hlt
int3
fsubs
pop
testb
loope
lcall
xchg
outsl
mov
mov
mov
push
and
mov
and
insb
shll
xor
insb
dec
dec
sub
xor
inc
and
push
repz
or
insl
jle
imul
dec
aaa
lods
fnstcw
adc
sub
cs
enter
cwtl
ficompl
loop
mov
cmp
or
cli
mov
cmp
mov
sbb
add
xchg
sbb
cmp
pop
test
iret
pusha
and
es
mov
insb
aad
and
add
sti
or
out
test
fs
fimuls
loop
cli
mov
out
out
jmp
dec
mov
addr16
lods
sub
cmp
dec
sti
cmpsb
adc
push
scas
xor
icebp
cmp
push
mov
cmp
or
mov
addl
shlb
xchg
in
loop
testl
mov
pop
or
lea
insb
ret
mov
addl
mov
sub
xchg
or
imul
sbb
jmp
jle
sbb
dec
push
add
lret
sti
int3
rcrl
jp
push
mov
dec
aam
aas
push
adc
sbb
rcl
fsubrl
imul
daa
mov
aam
movsb
rclb
mov
xchg
push
sub
and
lahf
jb
gs
cmp
idivl
cltd
inc
xor
rcrl
es
icebp
loope
xchg
xchg
jle
fsubrl
scas
dec
lods
addb
push
and
aas
jae
mov
jns
movsl
sbb
je
mov
gs
into
cwtl
jb
jp
add
mov
mov
inc
loopne
repz
cmpsl
in
fdivs
test
loopne
cwtl
cld
pop
add
xchg
cli
adcl
push
pop
sbb
es
rcl
adc
int
xor
push
inc
mov
cmp
jge
inc
out
pop
lods
mov
adc
fiadds
jmp
or
push
xor
je
pop
pop
dec
jns
mov
cmp
cmc
or
popa
cmc
mov
pusha
in
mov
xlat
pop
mov
push
mov
divl
xlat
xchg
aas
pop
push
inc
int3
jo
push
sahf
inc
faddl
add
stos
dec
sbb
jle
fldenv
aam
rol
cmpsb
subps
mov
test
call
ret
xchg
jnp
imul
add
loopne
jmp
push
sub
pushf
mov
jp
pop
inc
cmp
fwait
pop
test
add
xchg
sbb
and
dec
jb
push
sbb
aaa
jbe
add
lock
loopne
sbb
pop
les
out
xor
orb
push
fs
loop
pop
pop
aas
dec
mov
lods
out
test
sbb
arpl
lcall
jbe
lret
dec
lods
inc
nop
repz
loopne
cld
out
sbb
pop
daa
lahf
incl
xor
fsubrl
mov
fbld
inc
rorb
shll
inc
sbb
loope
shr
jge
movsl
ja
mov
push
inc
jns
dec
lret
sbb
and
test
jle
jne
dec
out
xchg
dec
and
mov
in
mov
mov
sbb
in
sub
and
cmp
push
jle
add
fldenv
xchg
cmp
mov
es
insb
in
cmp
scas
aad
stc
in
ss
out
xchg
les
fwait
fwait
xor
sahf
jb
int
fs
cmpsb
rcll
sbb
das
lcall
jnp
loope
jb
sub
push
xor
insb
mov
dec
jp
dec
or
and
fwait
stos
mov
movsl
adc
push
sbb
in
cmpsb
daa
neg
push
test
jge
and
outsb
inc
sbb
mov
xchg
std
mov
mov
aad
push
push
xchg
jmp
dec
or
fcmovnu
inc
jecxz
xor
sbb
lcall
or
or
sub
adcl
ret
outsl
mov
adc
sahf
test
stos
fisttpll
cmp
popf
mov
mov
aaa
jmp
sbb
jge
cmpsb
fwait
pop
repz
jne
imulb
mov
loope
sub
out
jge
mov
or
lret
mov
mov
cmp
mov
push
mov
jnp
mov
inc
testl
lcall
and
test
iret
aas
mov
add
xor
xchg
ret
shrb
jge
push
pop
dec
test
inc
out
test
cmpsb
inc
iret
lcall
xor
xchg
add
xchg
inc
jg
fsubs
test
pop
aam
movzbl
jl
in
mov
add
hlt
push
xor
sub
leave
rolb
sbb
xchg
cld
jge
push
xor
pop
xor
mov
push
fstl
sti
mov
or
xchg
pop
jmp
movsl
or
sti
aad
rcll
push
mov
les
pop
mov
cmpsl
mov
or
add
ds
insb
cmp
mov
mov
fiadds
dec
sahf
add
sbb
pop
inc
adc
popl
pop
xchg
add
dec
mov
adc
cmp
aaa
in
movsb
iret
push
outsl
xchg
sbb
jecxz
leave
pop
inc
cmp
test
ret
mov
mov
fnsave
int3
dec
push
add
push
mov
and
xchg
xchg
int3
lea
scas
mov
fcoml
rolb
dec
stos
add
sbb
out
outsb
fwait
xchg
ljmp
push
fisttpll
pop
inc
lods
and
adc
mov
adc
orl
testl
in
lcall
jecxz
stos
das
gs
test
push
cmpsl
mov
pushf
insb
pop
dec
lcall
pushf
jb
stos
ret
xchg
sub
pop
dec
loop
fsubrs
cmpsb
jg
repz
sti
inc
cld
adc
add
cli
xchg
mov
mov
xchg
pop
or
test
addb
inc
paddusb
xor
adc
xlat
push
xchg
enter
push
sub
lret
imul
pop
loopne
orl
es
pop
adc
lock
scas
dec
jge
cmp
or
insl
test
mov
add
out
test
test
xchg
mov
add
push
push
adc
inc
cltd
jl
add
jg
jbe
adc
mov
jb
in
and
cmp
push
test
jb
gs
pop
cwtl
pop
enter
int3
inc
mov
lods
and
jle
ficoms
sti
jmp
inc
mov
cmp
aad
xor
jbe
lea
jb
dec
jnp
push
adc
cwtl
es
xchg
pusha
call
mov
or
dec
inc
scas
les
pop
mov
sbb
xor
sbb
mov
xchg
and
stos
sbb
jnp
imul
lods
xchg
mov
push
ss
idivl
mov
pop
insb
test
fdiv
fdiv
add
leave
in
or
dec
loopne
pop
mov
cli
push
imul
je
cmpsb
outsb
sti
popa
inc
mov
out
cmp
lds
and
xor
pop
jmp
adc
sti
shrb
pop
cmp
pop
mov
inc
xchg
xchg
adcb
mov
insb
xchg
lea
out
fiadds
and
jae
cmc
sbb
cmp
stc
scas
pop
divl
adc
jbe
jg
dec
xchg
pop
mov
fdivl
mov
push
pop
and
mov
loopne
jle
xchg
les
xchg
add
imul
pop
lret
jl
pop
pop
stos
leave
push
popa
out
pop
cwtl
out
push
iret
icebp
in
sub
dec
or
sbb
push
lods
dec
dec
sbb
mov
daa
loop
mov
aad
xchg
or
mov
adc
ret
loopne
cmp
imul
sbb
pusha
sahf
popa
jns
out
sbb
stos
pop
sbb
dec
ss
test
push
xor
sub
mov
loop
nop
push
or
adc
addr16
into
mov
fadds
mov
mov
ss
push
fwait
sbb
jmp
mov
cmp
popf
insl
dec
das
sbb
add
dec
adc
cmpsb
and
cmp
jmp
add
push
clc
xchg
loopne
decl
sbb
cld
sub
out
cmp
pusha
sub
pop
mov
outsb
add
scas
je
adc
sub
jbe
mov
xor
jo
out
aam
mov
mov
int
and
fbld
inc
loopne
push
pusha
addl
les
jg
addr16
clc
jge
pusha
xchg
xchg
je
or
pushf
fbstp
in
in
jle
out
push
mov
scas
xchg
leave
sub
jne
clc
fwait
int3
push
out
ja
in
xchg
repz
ret
mov
fsubr
jge
sbb
gs
loop
popl
mov
cwtl
out
xlat
cmp
lods
dec
add
pop
add
out
sbb
push
adc
imul
testb
push
jbe
cs
jg
mov
inc
jp
mov
push
loope
rcl
and
fs
xchg
jae
in
add
xor
sbb
data16
pop
adc
sti
jno
test
pop
scas
lahf
and
dec
fmuls
rclb
mov
in
and
add
cmp
add
fldlg2
and
arpl
icebp
fsub
inc
lds
loop
xor
scas
leave
inc
rorl
dec
and
pop
lret
ffree
inc
mov
pushf
insl
jle
popf
and
sbb
inc
lods
rolb
rcrb
fdiv
fucomp
push
sub
mov
cmp
sub
xchg
js
jns
and
lret
xor
ret
xchg
movsb
mov
cli
cmp
mov
fmuls
mov
jmp
pop
push
adc
cmpsl
jecxz
push
insl
in
xor
ret
dec
push
cld
xor
arpl
mov
fidivl
hlt
jl
ficoms
test
cmpsl
cli
cli
mov
fiaddl
mov
and
mov
push
outsl
aas
dec
mov
ficoml
ja
xchg
cwtl
mov
sahf
lods
lock
cmpb
mov
repnz
std
dec
js
and
jbe
outsl
push
xchg
lahf
fbstp
inc
sub
pop
sbb
add
scas
push
push
maxps
ror
mov
or
clc
sti
xchg
cli
das
jne
movsl
outsl
cli
jne
fwait
dec
push
std
je
lcall
je
xor
push
fs
sbb
dec
mov
mov
insb
repz
mov
or
fidivs
lret
or
sub
jle
out
je
xchg
cmc
jl
sub
add
repz
nop
inc
and
mov
mov
in
push
mov
mov
pushf
repnz
xorb
call
dec
pop
mov
jge
inc
xchg
push
mov
flds
loopne
jmp
dec
xor
movsl
mov
sbb
hlt
test
lahf
shlb
sub
mov
xor
es
push
mov
nop
jbe
dec
adc
mov
loopne,pt
insb
imul
test
std
jmp
in
xchg
cs
icebp
mov
push
insl
mov
out
or
mov
movsb
inc
sbb
pop
std
jnp
loop
shrl
lods
mov
inc
mov
xlat
cmp
or
test
iret
je
sbb
xchg
jae
lret
and
shrb
and
out
mov
sub
mov
pop
jno
stos
data16
lds
mov
dec
ret
push
sbb
sub
adc
nop
loop
int
addb
mov
xor
shl
aas
popf
mov
pop
fistpl
push
inc
cmp
adc
mov
jo
add
cmp
mov
mov
push
xor
or
in
jmp
dec
xor
arpl
cmp
and
aas
or
fucomi
mov
dec
sub
ljmp
sbb
rolb
pop
das
pop
or
imul
movsb
loopne
push
test
xchg
inc
xchg
fs
mov
push
xor
xor
imul
mov
push
pushf
rorb
adc
mov
pop
pop
and
dec
pop
ret
adc
xor
push
push
lock
lahf
cmp
enter
or
add
ffreep
mov
lret
inc
xchg
pop
mov
addr16
cltd
inc
push
loop
data16
lea
sahf
les
punpcklbw
dec
sahf
adc
cmp
xchg
xchg
add
xchg
adc
pop
push
aad
ja
inc
adc
fldcw
xor
adc
negl
mov
inc
adc
and
stos
loop
mov
sti
mul
popa
jno
push
sub
andb
cmp
and
scas
jns
and
jl
call
in
push
jne
daa
mov
adc
dec
adc
xlat
mov
or
nop
dec
popa
xor
movsb
pop
out
lcall
inc
jbe
xor
pop
adc
inc
sub
push
mov
aaa
ds
into
jle
xchg
or
pop
or
ss
stc
imull
push
std
xor
mov
xchg
dec
jge
in
xor
data16
mov
mov
shlb
sub
cmp
pop
xor
sub
icebp
dec
or
stc
cmp
jne
outsb
sahf
daa
mov
mov
jle
int
cmpsl
pop
lods
lret
shl
xor
xchg
mov
mov
subl
fidivs
jmp
cmpsb
pop
jnp
or
cmp
in
xor
arpl
dec
sbbb
pop
repnz
jnp
mov
lods
cmc
push
std
cmp
das
daa
std
cwtl
xor
add
pushw
push
inc
xor
jmp
jmp
cmp
or
push
xchg
shl
lds
adc
mov
dec
movsl
fldenv
adc
jb
cltd
adc
and
and
cwtl
popf
add
push
fld
sti
dec
xor
int
popf
pop
loope
jb
cmp
cmp
mov
gs
fucom
bound
inc
adc
xor
repnz
mov
pop
cmpb
mov
or
or
add
push
xchg
in
dec
divl
scas
cmp
int
and
xor
pop
xor
andl
inc
mov
mov
fstpt
test
ja
mov
fcmovb
xlat
mov
je
push
es
aad
dec
or
loop
out
pop
loop
test
inc
sbb
sub
idivb
mov
push
stos
test
sbbl
scas
xchg
add
pop
xchg
or
fnstsw
sbb
mov
jecxz
icebp
and
sbb
loope
sbb
adc
pop
lcall
leave
inc
pop
ret
mov
mov
fsubrl
add
call
js
pop
outsb
sub
lods
pop
loopne
push
push
mov
rcrb
xchg
imulb
push
add
push
lods
cmp
mov
out
mov
ljmp
loopne
mov
out
xchg
iret
aam
mov
loope
int
pop
pop
nop
pusha
sub
xorl
mov
xor
push
xor
out
stos
insb
push
call
mov
aaa
int
push
in
xchg
adc
push
addr16
loop
ja
dec
jno
pop
fildll
or
mov
push
test
scas
mov
jmp
adc
int
shr
aas
outsl
pop
das
idivb
in
push
xor
imull
loop
mov
lahf
pop
xchg
xchg
shrl
xor
push
xlat
mov
pop
adc
addr16
cmpsl
inc
add
daa
jae
mov
scas
mov
inc
cltd
ds
or
pop
mov
sub
mov
mov
inc
in
inc
or
int3
jl
mov
adc
sub
mov
popa
jmp
cmp
mov
insl
or
jmp
mov
stos
add
sbb
test
inc
cmpsl
sbb
and
mov
je
jnp
push
pop
sti
rolb
adc
dec
push
mov
mov
sub
mov
scas
lcall
in
rcrb
dec
scas
in
ds
inc
movsb
mov
sub
jl
mov
clc
cmpsb
int
daa
add
iret
dec
xor
push
ds
cmpsb
test
out
sarl
or
std
orl
or
and
pop
push
xlat
adc
mov
mov
adc
jp
and
jne
insl
arpl
adc
clc
scas
lods
jecxz
ss
lds
inc
push
in
inc
ss
out
das
ss
pop
scas
add
push
jmp
insl
dec
imul
xchg
les
dec
dec
pop
dec
cli
sub
inc
sub
dec
push
mov
mov
cmpsb
pop
movl
scas
lcall
xor
aaa
lret
sbb
jno
adc
rclb
mov
mulb
inc
lock
xor
push
loop
fxch
loop
lret
xchg
push
sub
test
pop
inc
ds
fmull
mov
shrb
stc
test
and
cld
pushf
fwait
sbb
pop
in
mov
arpl
add
dec
cmpsb
in
inc
inc
fsubl
mov
pop
jne
inc
adc
push
jmp
and
movsl
sbb
mov
sbb
adc
dec
cli
mov
fsubl
mov
mov
adc
ret
add
outsb
roll
jno
subl
hlt
movsl
hlt
out
dec
add
jl
lahf
pop
iret
mov
push
jecxz
icebp
fimuls
test
mov
das
xor
call
sahf
dec
addl
mulb
in
hlt
jbe
inc
sahf
cmp
pop
sbb
jl
and
mov
jl
test
xorb
adc
loope
jecxz
add
xchg
add
jg
loope
das
pop
dec
mov
sbb
cltd
xchg
adc
inc
mov
fidivrl
sbbl
adc
sbb
adc
test
pusha
daa
iret
das
out
mov
sets
pop
pop
or
jmp
outsl
shlb
lahf
out
add
sub
and
push
mov
sub
add
in
lea
repz
add
rcr
or
dec
fisubrs
adc
cs
cmpsl
ret
pop
out
test
das
xchg
mov
bound
in
sub
push
mov
and
adc
int
push
dec
subb
mov
repz
loop
leave
xchg
mov
es
xor
mov
rorb
dec
imul
aam
sti
or
je
add
mov
push
mov
jmp
adc
push
mov
leave
push
popa
scas
mov
bnd
loop
out
es
xor
push
roll
iret
mov
aaa
in
fbld
rcl
fisubl
mov
cmp
inc
test
out
fcomps
cwtl
sbb
loope
std
inc
mov
loop
mov
jne
sub
loope
push
mov
ret
dec
or
fmuls
mov
rcrl
cmp
mov
outsb
lods
ja
ljmp
push
sbb
jb
xchg
cmp
fs
icebp
adc
adc
sub
push
lds
fsubl
xchg
fildll
cmp
jno
scas
iret
pop
cmpsl
movsl
xchg
sbb
cmp
inc
movsb
aaa
aam
inc
out
jnp
and
fcmovnbe
push
clc
je
adc
sub
ror
push
ljmp
ss
cwtl
outsb
lods
jnp
sbb
mov
adcb
loope
inc
mov
jge
sti
sahf
jp
and
mov
loopne
fisttpll
dec
mov
mov
vmwrite
mov
pusha
pop
xchg
clc
cmp
das
and
out
notl
inc
xor
push
jmp
movsl
pop
or
pop
push
jb
xchg
mov
add
xlat
sar
pop
pop
cmc
sub
xor
adc
loope
dec
daa
xchg
mov
rcl
repnz
dec
mov
lret
push
mov
mov
sub
dec
mov
sbb
pop
mov
cmp
mov
aad
sahf
dec
addl
and
into
nop
lret
mov
bound
sub
les
push
inc
jl
sub
out
xor
mov
ret
mov
push
imul
xor
push
pushf
xchg
mov
xor
outsb
mov
decb
enter
add
push
mov
sub
push
hlt
jle
xor
call
repz
hlt
mov
repz
es
scas
test
outsl
imul
jbe
dec
adc
dec
faddl
push
mov
push
lret
push
sub
loop
das
pop
sbb
jl
fsubr
stos
xor
cmp
decb
stos
cmpsb
dec
rorl
mov
pop
mov
jmp
stos
xor
sti
pusha
in
movsl
rorl
or
divb
js
jle
jle
jnp
les
nop
add
inc
inc
dec
insb
nop
jo
outsl
fwait
aas
pusha
ja
mov
sub
adc
repz
mov
adc
enter
pop
ficoml
mov
and
sub
into
aam
jmp
ljmp
pop
dec
mov
jbe
sar
rolb
adc
push
insl
cmp
cmp
dec
stos
push
pop
ljmp
imul
pop
dec
out
call
sub
push
fimull
dec
repnz
fcomps
xchg
cmp
dec
dec
and
pop
pop
movsb
xchg
sbb
sti
je
repnz
fldcw
inc
push
std
jmp
fildl
fistl
idiv
sar
push
sub
mov
sub
mov
xor
jbe
pop
rol
mov
out
enter
xor
fiaddl
jnp
int3
in
inc
icebp
clc
je
lahf
ret
shrl
inc
ja
test
inc
dec
jecxz
outsl
cmp
test
mov
je
gs
inc
leave
imulb
or
mov
mov
sub
xor
mov
movsl
shlb
shrl
pop
andb
ror
xor
jmp
xchg
repz
ljmp
adc
cmpb
mov
mov
mov
xchg
pop
ss
out
cmp
mov
out
mov
fcoml
inc
mov
ljmp
jecxz
sbb
lret
je
es
push
rorl
fstpt
in
imul
or
dec
daa
sub
pop
incl
mov
rolb
repz
cld
stos
cltd
dec
adc
dec
in
jle
push
adc
adc
pop
or
xor
mov
jo
mov
aas
lods
mov
and
into
or
inc
dec
icebp
push
cmpsb
push
pop
push
aaa
push
or
cmpl
pop
in
mov
add
dec
ss
push
int3
xor
pop
pusha
push
sbbl
jmp
stc
lock
roll
jle
fsub
mov
into
insl
xlat
add
push
fwait
xor
fwait
xchg
adc
fisttps
pop
add
aam
inc
xchg
pop
f2xm1
ljmp
pop
mov
cmp
ss
mov
shrl
mov
and
shlb
stos
mov
ss
dec
push
stos
cs
insb
dec
lea
ja
xor
repz
jge
mov
outsb
mov
aas
bsf
mov
mov
mov
adc
fstp
ss
je
popa
pusha
shl
mov
std
repnz
jne
je
bound
jle
sbb
cmp
adc
mov
stos
adc
aam
lea
mov
gs
bnd
data16
add
pop
in
mov
fucomi
sub
lret
outsl
mov
fdiv
mov
xchg
xor
inc
ret
or
scas
ljmp
push
mov
aas
fcoms
cmp
cmpl
aam
jmp
arpl
test
sub
cmp
lcall
pop
jecxz
aad
arpl
xchg
rcr
mov
pop
aam
in
mov
lods
jp
mov
mov
notl
addr16
call
xchg
sub
in
in
adc
lahf
test
adc
push
add
rcrl
push
cld
sub
fmul
aaa
push
rorl
stos
add
fdiv
iret
das
std
and
sub
dec
adc
fidivl
movsb
inc
test
nop
xchg
sahf
xor
movb
es
mov
enter
jb
pop
in
push
mov
je
jns
add
ret
cmp
mov
icebp
shrb
movsb
scas
mov
outsl
xchg
push
cmc
std
cmp
pop
je
dec
jne
adc
bound
xor
sbb
out
notl
mov
cwtl
mov
fistpll
push
inc
pushf
sbb
add
ss
test
sbb
mov
cltd
sub
test
loope
repnz
stos
mov
sub
mov
aad
or
dec
xor
repz
lea
mov
mov
fcomi
pop
loop
repnz
mov
mov
popa
add
inc
or
mov
mov
lods
repz
jnp
or
sbb
out
and
inc
lahf
dec
lock
push
out
lds
inc
pop
sbb
stos
mov
stos
sbb
aam
stc
fisttps
cmp
rorl
bound
pop
or
mov
rcrb
pop
fldenv
sbb
int3
leave
rolb
std
int3
cmp
lcall
in
popa
lcall
inc
push
mov
shrl
mov
ds
ja
sbb
xor
adc
lret
pop
jl
inc
bound
insb
xchg
outsl
push
pop
push
mov
jns
iret
sbb
jmp
pop
xchg
jae
shlb
cmpsl
jnp
push
stos
jp
movsb
mov
lahf
dec
test
xchg
fs
adc
lret
and
or
mov
es
daa
sub
dec
gs
das
out
popf
test
bound
mov
mov
ss
test
cmp
cmpsb
and
nop
mov
test
es
adc
dec
ret
imul
dec
mov
in
jo
dec
dec
sub
push
cli
inc
in
cli
push
icebp
inc
das
aad
xchg
mov
pop
aam
mov
jle
in
xchg
mov
xchg
clc
or
in
adc
and
sub
add
sub
xchg
pop
push
in
cmpl
test
lret
mov
adc
xchg
or
add
jecxz
add
mov
lds
in
adc
and
adc
addb
jnp
cmc
repz
nop
dec
in
hlt
push
fimull
sub
std
xchg
pop
inc
js
leave
xor
sbb
test
add
jo
gs
jo
xor
push
nop
repz
sbb
dec
fwait
pop
dec
push
add
jno
fisubrl
or
xor
or
or
and
js
pop
jb
cltd
sbb
aaa
adc
xchg
push
jl
sbb
lret
gs
aam
adc
dec
push
aas
push
jecxz
and
pop
mov
xor
je
inc
xchg
out
dec
adc
jb
pop
test
push
clc
xor
sbb
xor
pop
andb
mov
or
adc
add
cwtl
rorb
test
dec
dec
inc
add
into
lcall
lods
adc
fisttps
pop
mov
cmp
fdiv
inc
inc
ds
fcmovu
adc
cltd
and
push
jg
inc
lret
imul
pop
or
movsl
mov
jo
jno
push
push
add
push
arpl
cmp
push
xor
test
scas
addr16
sub
jl
dec
xchg
cmp
inc
mov
xchg
std
inc
pop
call
imul
imul
shl
test
xor
sbb
add
push
iret
insb
mov
data16
sarb
pop
iret
sub
test
bnd
cltd
xchg
mov
lcall
jb
push
call
pop
mov
or
and
inc
dec
scas
cld
xchg
jno
shl
pop
push
push
pop
and
mov
jmp
in
stc
test
xchg
push
in
mov
fisubs
inc
roll
js
loopne
fcoms
lret
xlat
mov
cs
xchg
adc
xchg
mov
hlt
add
push
and
test
cmp
cwtl
bound
in
mov
cmp
xor
imul
cmp
xchg
pop
xchg
adc
sub
adcb
insl
lea
fwait
mov
lods
inc
xlat
shr
xchg
xchg
adc
sub
fs
xchg
dec
mov
test
jo
in
fiadds
rorl
sub
inc
outsb
sbb
jp
push
out
outsb
stos
push
je
shll
mov
repnz
mov
bts
enter
fstpt
push
add
xchg
push
mov
loopne
scas
mov
cmp
adc
jo
adc
aad
cmpl
jp
jecxz
lods
add
adc
call
mov
lahf
or
sbb
aad
adc
dec
mov
movsb
inc
test
push
mov
sbb
repnz
hlt
inc
aas
adc
push
ret
aad
shlb
ret
push
sub
es
push
jg
and
mov
mov
xchg
pop
xor
mov
rcr
fsubs
int3
mov
scas
ror
repz
js
push
in
lahf
fcmovnu
sub
stos
sbb
repnz
adc
out
inc
ret
lods
call
adc
jnp
ss
bound
push
into
mov
or
jl
pop
daa
push
iret
mov
add
cs
jecxz
ficoms
das
sbb
mov
xor
dec
pop
mov
xchg
add
dec
cmc
jno
jmp
cmp
dec
lods
cmp
adc
addr16
out
out
dec
and
cs
mov
and
inc
imul
lods
lret
fnstcw
pop
dec
addr16
add
or
movsb
xorb
mov
out
push
stos
cmp
scas
and
pop
mov
lahf
sub
xor
jae
inc
cmpsb
sbb
sbbb
xor
push
out
adc
pop
adc
cmp
xchg
mov
les
lcall
xchg
mov
sbb
mov
mov
mov
pop
scas
sbb
pop
add
out
addr16
xor
sub
jno
or
daa
xchg
int3
adc
cmp
daa
ljmp
lock
leave
test
movsl
dec
movsl
mov
ja
pop
jl
cmp
sti
add
pop
inc
pop
fnsave
js
or
jno
ja
dec
lea
into
cmpsb
lods
mov
loope
out
mov
aam
push
in
push
inc
pop
add
aaa
mov
xchg
fs
fistpl
push
fdivrl
adc
add
aas
aad
ljmp
enter
add
adc
fists
test
dec
push
xchg
into
stos
imul
movsl
add
add
cld
lea
repz
xor
rorl
pop
fldcw
adcl
lock
push
mov
in
icebp
mov
mov
addr16
jle
aaa
loop
sbbl
mov
jbe
add
in
insb
cs
push
dec
lock
aam
scas
in
shr
inc
inc
adc
insl
mov
jmp
leave
cmp
sub
aas
mov
mov
rcrb
xorl
js
out
inc
test
leave
cmc
jo
dec
test
jge
addr16
movsl
movsb
adc
in
subl
mov
mov
cmp
hlt
shll
orb
inc
push
cmc
jno
movsl
rcrb
sbb
add
mov
add
sti
shr
negl
jnp
shrb
inc
pop
cli
mov
mov
cmpsb
jp
add
int
rolb
out
inc
jnp
gs
cmpb
shlb
or
cmpsl
push
jo
xchg
sbb
clc
data16
and
call
cmp
mov
push
out
pop
lods
in
push
add
arpl
add
jbe
jns
mov
jo
insl
pop
aaa
cmp
or
stos
and
or
mov
movsl
fildl
pusha
stos
jmp
jnp
dec
std
mov
lcall
clc
xor
xchg
mov
ljmp
sbb
cmp
push
popa
cmp
adc
xchg
leave
or
imul
es
mov
cmp
mov
cld
loopne
rdmsr
cld
dec
adc
std
mov
in
mov
call
jecxz
adc
add
scas
clc
sar
dec
shl
inc
xor
xchg
repz
cmc
mov
mov
push
loop
and
inc
push
movsl
pop
cmc
mov
xor
push
popf
mov
mov
ja
ljmp
ret
xor
add
bound
push
rolb
std
aas
fcmovbe
push
mov
sub
loopne
outsb
fcom
sbb
xchg
jmp
mov
jo
pop
mov
pushf
addr16
aad
aaa
push
sahf
sti
jnp
xor
pop
cld
movsb
push
or
mov
icebp
out
enter
xor
icebp
mov
xchg
mov
loop
dec
jo
stc
repnz
adc
jp
push
icebp
lret
add
sti
mov
scas
cmp
je
xor
roll
maskmovq
xor
inc
inc
xor
fdivl
ss
add
lds
stos
leave
pushf
adcl
bound
push
pop
dec
adc
int
fidivrl
jo
or
cmp
neg
mov
dec
sbb
imul
or
xchg
xchg
movsl
insl
dec
in
into
addr16
popf
inc
call
lods
sub
call
and
push
inc
pushf
mov
jnp
insl
push
insb
test
sub
ror
fcoml
add
out
mov
fdivs
icebp
ja
mov
aas
lahf
pop
mov
aad
in
fucomip
popl
sbb
mov
and
xor
push
scas
test
mov
and
jp
inc
fmull
andl
andl
push
outsl
xchg
mov
push
mov
pop
sahf
sti
mov
sbb
pop
je
pushf
jle
pushf
stos
pop
fldcw
xchg
sub
pop
adc
dec
in
push
rorl
in
adc
xor
ljmp
xor
sub
dec
cmp
pop
pop
add
int3
adc
jbe
pop
les
movsl
push
enter
dec
fnstenv
imul
dec
xchg
mov
dec
out
sub
std
and
dec
mov
shrb
push
clc
add
pop
dec
stos
adc
push
jns
adc
in
push
ret
loop
into
inc
mov
dec
clc
leave
pop
setg
loopne
mov
pop
stc
in
ret
push
xchg
cld
lahf
pop
jne
mov
ret
xchg
xchg
mov
pop
dec
xchg
inc
sbb
dec
inc
mov
movsb
cmc
dec
mov
andb
or
lea
cmc
jle
cmpl
imul
popf
dec
or
mov
sub
xchg
stc
fcom
bound
lcall
ja
sbb
je,pn
iret
mov
aaa
sub
lret
cwtl
in
orb
rorb
and
bound
sbb
popf
cmp
mov
xor
xchg
dec
dec
shr
data16
jmp
lret
movsb
rorb
mov
jmp
test
out
lea
lods
mov
sbb
xchg
add
cld
call
add
scas
push
xor
scas
dec
mov
sbb
imul
cld
clc
xchg
xor
ret
adc
jae
mov
mov
enter
mov
mov
in
jle
sub
jle
pop
fdivl
dec
lods
in
jno
push
inc
sub
jbe
sbb
out
test
les
out
sahf
sbb
push
pusha
sbb
jge
out
mov
push
xchg
pop
lds
inc
sbb
lahf
mov
sub
push
in
mov
lcall
mulb
shrb
inc
pusha
jp
and
and
dec
test
lcall
jge
orb
mov
mov
das
lea
and
pop
mov
or
movsb
push
ret
mov
cmp
push
out
aas
mov
sti
xchg
sarl
cmp
jge
mov
mov
stos
or
sub
mov
cmpsb
cli
adc
movsl
dec
aas
popa
pop
or
out
or
fldenv
out
sbb
in
push
adc
movsl
setno
cld
push
test
repnz
popa
js
jle
mov
sbb
xor
cld
push
fbld
test
xor
pop
ja
ficoml
and
inc
pop
pop
push
sub
enter
and
adc
jo
out
andb
pop
jmp
fsubrs
imul
stos
lcall
mov
add
lods
mov
and
xchg
cmp
xchg
mov
sub
in
test
lods
xor
adc
jne
lea
cmpsl
mov
sbb
loope
dec
aaa
cmp
xlat
sub
outsw
divl
out
out
cmc
add
mov
hlt
testb
sub
pop
xchg
lret
rcll
lret
stos
dec
imul
adc
das
sbb
sbbl
sbb
jle
sahf
jg
cli
cmpl
ret
push
jno
ficoml
std
cwtl
push
sub
adc
cmp
insl
jae
je
xchg
xchg
mov
add
dec
and
add
add
or
leave
xchg
loop
movsb
cmp
mov
int3
out
add
fdivr
mov
pop
es
insb
push
and
add
mov
dec
cld
push
sub
xchg
in
in
jns
jns
jp
cmp
hlt
xor
xchg
repz
sub
mov
out
sbb
jg
lahf
sbb
inc
pop
repz
mov
cmp
sbb
cmp
call
jge
inc
lret
cli
cmpsl
mov
stc
xchg
enter
int
loop
jne
lods
or
push
fcoml
psubusw
cwtl
sub
sbb
push
push
int
cld
je
incl
mov
jmp
pop
rorb
fidivl
dec
mov
xchg
pop
test
bound
jbe
daa
mov
repnz
fs
jne
sub
or
notl
lods
loope
test
dec
or
or
es
push
mov
inc
stc
xchg
xchg
std
xchg
insl
fadds
in
sbbl
sub
out
fdivs
int3
add
cwtl
pop
es
cmp
and
inc
sbb
ret
and
bound
popa
and
shll
or
xchg
or
inc
xchg
fiaddl
fsubl
fdivrl
je
push
push
mov
sub
mov
test
mov
clc
and
mov
mov
ret
or
ret
rorl
add
movsl
cli
out
out
mov
mov
loope
cmp
cmpl
xchg
sub
iret
scas
xchg
sub
popf
iret
lcall
mov
jp
xchg
mov
shlb
inc
mov
es
push
pusha
and
sub
push
stos
dec
cmpsl
cmpsl
mov
int
mov
pushl
xorb
pop
mov
pop
shl
fwait
jbe
andl
mov
andb
push
rorb
inc
push
pop
fdivs
fucomp
mov
adc
add
int3
pop
pop
aas
imul
or
lret
pop
stos
cmp
jns
mov
fwait
stc
jmp
gs
adc
outsl
test
cmpsb
test
xchg
push
push
outsb
lea
push
pop
dec
pusha
push
mov
std
std
adc
imull
jo
add
imul
or
and
imul
push
pop
mov
addl
xor
fsubrl
add
mov
push
movsb
and
lcall
xor
sbb
test
jg
popa
sbb
daa
dec
sub
cld
xor
adc
lock
pop
push
into
mov
jmp
push
xorb
adc
daa
pushf
aas
xchg
or
mov
cltd
jl
leave
xor
mov
inc
outsb
push
clc
add
sti
xchg
push
jp
xchg
adc
subl
mov
insb
dec
mov
sarl
jbe
insb
daa
jb
cs
repz
and
mov
popf
mov
sub
in
aad
aad
stc
dec
jge
rolb
and
jbe
jecxz
repnz
inc
ja
test
mov
or
std
inc
decb
dec
ds
cs
jno
in
rcl
push
ljmp
test
loop
out
and
addr16
hlt
xchg
lret
sbb
and
sbb
jno
bswap
xor
cmp
jbe
enter
icebp
jns
outsb
dec
cs
push
ss
call
cmpb
push
fld
cmp
loop
add
xchg
mov
mov
lods
rcrb
test
int3
or
inc
rcrl
mov
out
adc
xchg
fcompl
or
popa
ret
mov
fmuls
mov
mov
jg
xchg
sub
pop
lea
je
fmulp
adc
fstpt
or
out
iret
cmp
or
aam
jmp
cmpsl
mov
jo
popf
fidivrl
or
mov
stc
push
in
xor
frstor
out
jl
lds
jb
aas
movsl
ret
testb
rcrb
imull
jge
out
repnz
movsb
repnz
shrl
loop
call
mov
add
jle
sub
push
mov
fidivs
ljmp
in
stos
sub
int
sbb
subb
mov
aaa
mov
std
inc
cmp
test
jmp
test
popa
and
lds
cmp
mov
xchg
mov
arpl
cmc
test
enter
nop
sahf
mov
adcl
sbb
adc
mov
dec
xchg
cmpsl
inc
cmpsb
mov
pusha
aas
lret
pop
test
dec
rclb
jge
xchg
inc
lock
push
mov
nop
cmp
loope
sbb
stos
sbb
add
sub
fistpl
or
pop
lods
icebp
pop
cmp
pop
sub
or
inc
jne
repnz
adc
pop
ror
jnp
insl
cs
jae
push
xchg
rolb
jl
rcl
adc
mov
dec
repnz
inc
pusha
inc
or
hlt
xchg
div
xlat
cltd
jp
xchg
into
jmp
out
pop
loop
enter
add
testl
and
idivl
sbb
inc
out
rolb
push
int
adc
scas
lods
aad
jbe
pop
data16
cmp
xchg
mov
xchg
mov
mov
lret
mov
repz
sbb
in
imul
mov
loope
shrb
pop
lock
or
es
mov
dec
lret
xchg
gs
cmp
fiadds
jb
adc
in
xchg
lret
sbb
inc
int3
xlat
push
jnp
mov
test
add
sti
push
jbe
and
pushf
adc
lret
rcrb
test
int
pop
inc
add
inc
lcall
or
jl
adcl
push
sub
pushl
push
sarl
jmp
ret
test
mov
inc
xor
ljmp
ljmp
pop
in
ret
add
xlat
or
mov
sub
add
push
sarb
or
aas
push
movlps
lret
int3
xor
int
cmp
mov
xor
sbb
int3
in
in
inc
mov
xchg
and
fimuls
jecxz
inc
test
lahf
movsb
pop
lret
mov
sub
stc
iret
push
out
mov
shr
in
loopne
add
or
mov
push
loopne
jno
in
push
add
dec
test
cmp
das
add
divl
mov
dec
in
popa
js
call
adc
or
inc
inc
test
int3
push
je
push
std
ljmp
loop
call
xchg
insl
cmp
jb
hlt
fnstcw
aaa
loope
das
xlat
and
inc
cltd
cltd
fs
rolb
movlps
popf
mov
outsb
push
pop
iret
fldcw
mov
push
pop
test
adc
xchg
in
sbb
jns
mov
sbb
rcll
fcmove
jb
mov
mov
mov
orb
adc
jns
roll
ret
mov
jl
sbb
enter
addr16
ret
lds
out
xchg
mov
fidivrl
push
notl
push
and
add
loop
mov
sbb
call
or
mov
jo
mov
push
fistpl
js
in
and
rcll
jmp
fidivs
mov
into
push
cmp
xchg
aam
lret
sarb
mov
jbe
mov
pop
cmp
jl
cwtl
sbb
dec
xor
cmp
pop
add
pop
setp
lahf
sub
mov
in
setb
mov
and
xlat
mov
aam
dec
jno
and
roll
hlt
clc
jno
lock
dec
or
into
repz
in
cs
xchg
inc
aam
pop
push
push
xlat
add
das
mov
dec
std
fcompl
xor
mov
and
push
mov
mov
in
in
int3
iret
je
adc
adc
int
rcl
xchg
or
inc
loope
popa
bound
and
cmp
hlt
cmp
sbb
xor
jp
jl
mov
xchg
nop
push
nop
push
inc
testb
and
adc
jno
mov
pop
sahf
ljmp
test
cmp
mov
daa
test
loope
add
jnp
pop
xor
push
loop
sbb
into
lret
sbb
test
loopne
loope
xchg
cmp
mov
xlat
and
fwait
out
xchg
and
sbb
dec
repz
dec
and
cs
jmp
sbb
lods
mov
ljmp
xchg
dec
mov
inc
inc
imul
mov
sub
push
xchg
pop
xor
xchg
sub
dec
movsb
lret
push
pop
jp
in
pop
subl
cmp
aad
jl
and
dec
xchg
fadd
adc
daa
mov
popa
jge
pushf
dec
mov
testb
xchg
in
loope
sbb
in
fists
pop
frstor
dec
push
mov
pop
inc
loopne
sbb
cli
mov
mov
adcl
fidivrl
js
nop
push
lock
pop
push
fadds
mov
pop
imul
in
cmp
gs
repz
push
or
in
mov
rcr
mov
in
xchg
lahf
dec
mov
adc
sub
imull
lock
dec
test
popf
fwait
xchg
mov
sbbb
pop
fprem1
cmpsb
mov
xchg
rcll
test
dec
mov
sub
cwtl
shlb
mov
cmpsl
adc
adc
pop
jae
clc
stos
mov
cmpsl
aad
inc
jmp
and
mov
push
lret
or
mov
fs
fsubs
inc
mov
sbb
mov
into
mov
sub
mov
scas
lds
xchg
ja
mov
mov
cmp
lahf
div
adc
out
sub
pop
arpl
add
shll
sbb
fistl
repz
pop
sbb
test
imul
into
mov
mov
mov
mov
jo
lods
push
xor
adc
push
pop
mov
jns
mov
es
shrl
mov
jecxz
inc
pop
adc
outsl
sbb
or
insl
pusha
clc
and
dec
sti
rdpmc
pop
jo
adc
outsl
inc
imul
test
adc
mov
jae
inc
jge
add
stos
sub
ds
ss
add
inc
daa
and
ficoml
bndldx
add
mov
mov
jo
in
jle
inc
daa
aaa
or
lret
std
test
shrl
fidivrl
dec
adc
cli
and
and
sbb
std
adc
insb
xor
cmp
add
pop
adc
divl
addr16
cmpsb
sbb
xor
sub
mov
test
rorb
inc
xorb
xchg
pop
sbb
mov
addr16
das
or
sub
mov
xlat
hlt
lahf
jbe
lock
loope
data16
data16
mov
cmp
leave
bound
jb
iret
xchg
movsl
sarb
mov
sbb
adc
push
mov
out
out
sub
dec
dec
popf
cmp
inc
adc
lea
adc
xor
inc
inc
cmpsl
mov
mov
test
sbb
mov
int
xlat
test
or
or
sbbb
pop
xchg
mov
add
testl
imul
insl
orl
ror
movsl
pop
pop
and
pop
call
jle
pop
sti
and
lret
sub
sbb
mov
xorb
or
xchg
in
xlat
scas
pusha
icebp
mov
push
lcall
ja
out
jbe
or
sub
pop
or
xor
or
cmp
in
mov
mov
pop
xchg
fcompl
fsubrs
dec
jne
pushl
push
sub
xchg
mov
test
mov
mov
add
mov
fdivr
pop
fidivs
and
insb
sub
mov
inc
fs
ja
push
xchg
aam
sbb
int3
outsb
mov
inc
daa
or
dec
or
shll
pop
idiv
lea
jmp
mov
jnp
outsb
imul
add
lock
outsl
xor
std
repz
mov
mov
stc
or
push
jl
sbb
outsl
loope
fwait
icebp
test
call
jle
inc
pop
dec
jno
push
rcr
or
fbld
sbb
mov
cmp
sbb
push
xor
inc
xchg
imul
lea
xchg
xchg
mov
cli
ret
mov
cmp
daa
cmpsl
scas
repz
jp
nop
cmp
enter
int3
cmp
mov
and
ret
mov
aam
ret
mov
mov
popf
flds
sub
sahf
and
out
int3
sub
clc
mov
rorl
in
mov
add
mov
bound
sub
jns
mov
cmp
fwait
cwtl
dec
lcall
xchg
mov
mov
les
xor
cmc
add
sahf
mov
dec
andb
mov
insb
dec
fsubs
pop
sub
cld
ja
cld
cmp
mov
imul
mov
inc
push
jae
mov
add
hlt
mov
inc
fdivs
mov
out
out
sub
jmp
pop
insb
aam
leave
cld
js
pop
fsubrl
jns
imul
sub
add
out
out
jno
fisubs
push
sbb
outsl
in
lret
cmp
pop
icebp
xor
pushf
iret
sbb
pop
lods
scas
mov
inc
data16
jo
lock
dec
cmp
jle
popa
push
dec
jb,pn
pop
jbe
lds
push
shlb
int3
push
pop
lcall
fstps
xchg
scas
lea
jne
loop
and
push
imul
movlps
push
mov
sarb
mov
push
xor
jns
sub
cmp
sbb
ret
sbb
cli
xor
mov
call
es
pop
pop
add
push
sahf
adc
repz
jg
ret
in
pop
out
insl
xchg
and
add
inc
pop
aad
lock
cmp
fsubrs
clc
xchg
test
call
mov
dec
pop
pushl
jbe
push
dec
push
mov
repnz
lea
dec
mov
dec
aam
repz
mov
lods
inc
jnp
xor
into
into
sbb
mov
shrl
or
pop
mov
fimuls
sub
add
dec
push
pushf
mov
icebp
inc
jge
andb
xchg
push
lahf
fucomip
push
clc
inc
push
cmp
mov
call
xchg
movl
dec
xor
test
lahf
mov
mov
popa
scas
rorb
jo
xor
sub
lret
mov
or
loopne
lahf
xor
xchg
add
sub
lret
push
mov
or
imul
test
sbb
xchg
xchg
mov
xchg
imul
jns
add
xor
mov
xchg
adc
xlat
pop
push
das
leave
and
mov
repnz
orl
repz
test
imul
pushf
pop
push
xchg
out
test
xor
xor
mov
mov
and
push
add
xchg
loopne
mov
jns
and
cmp
pop
cwtl
sbb
and
lret
popa
mov
dec
jns
es
pusha
pop
jae
iret
and
out
jmp
insb
push
aaa
lret
sbb
or
sbb
enter
adc
repnz
push
push
test
jae
sbb
jl
cltd
mov
ffree
inc
pushf
ficoml
or
add
call
dec
xor
popa
cmp
xlat
and
sub
sahf
dec
inc
lods
jecxz
lods
xor
scas
jmp
je
add
test
add
and
push
or
cld
mov
das
xor
lahf
mov
ffree
fst
inc
loope
jmp
sub
test
data16
mov
fdivs
add
xor
std
sti
sti
ds
mov
jne
xor
push
pop
sub
sti
mov
mov
push
xorb
sbb
mov
mov
pusha
clc
mov
pop
test
das
lret
dec
movsb
push
cmpsl
xor
xchg
xchg
lcall
jl
lock
adc
push
pop
lahf
popa
mov
pop
sub
cli
psrlq
into
xchg
cmp
pop
push
jae
test
xchg
mov
fisubs
call
xor
dec
icebp
clc
jp
mov
add
loope
fisubrs
xchg
push
in
lods
fldt
fisubs
or
andb
inc
add
and
add
xchg
xchg
xor
dec
mov
push
leave
add
push
or
adc
cltd
gs
lahf
mov
pushf
dec
in
adc
mov
inc
ret
cli
loop
sub
lea
cmp
pop
inc
pop
mov
mov
cmp
cs
jno
ljmp
xor
fldl
in
test
pop
lock
in
xchg
sahf
aam
xchg
push
int
mov
cli
xor
ss
scas
push
shrb
cld
mulb
pop
scas
mov
sbb
fistpll
aas
mov
js
icebp
in
mov
icebp
mov
sbb
xchg
pop
xorl
icebp
std
mov
loope
fucomp
mov
lods
push
call
xchg
dec
mov
lds
jge
mov
inc
or
addr16
leave
fwait
xchg
loopne
jne
scas
mov
jne
dec
push
pop
push
mov
add
dec
add
daa
sub
les
lahf
xlat
xor
vmaxss
sbb
outsb
repz
lock
or
mov
push
xor
pop
repz
and
mov
movsb
in
push
or
push
sbb
test
fdivl
mov
loopne
insl
jl
lcall
call
in
inc
push
cwtl
jp
cs
aas
fidivl
std
pop
icebp
daa
add
mov
jge
xchg
mov
aaa
push
sbb
out
lahf
xchg
mov
cmp
out
mov
push
mov
notb
data16
stc
pop
cmp
int
insl
push
loop
lock
testl
push
das
shrb
sar
mov
mov
hlt
jb
push
jmp
sub
pop
jnp
inc
iret
inc
lret
cmc
call
sub
sbbl
cmp
mov
lret
push
outsl
cld
outsb
hlt
xchg
and
jmp
fistl
push
add
in
fbstp
sbb
fistpll
cmp
or
xor
or
xlat
inc
sbb
icebp
fwait
pop
sub
ljmp
scas
ret
fcompl
push
jb
in
scas
mov
negb
test
gs
cmp
insb
insb
test
and
jge
test
lahf
sbb
call
lahf
insl
add
xchg
out
addb
xchg
adc
jmp
cli
push
divb
ja
leave
shr
pushf
je
shr
add
xor
incb
push
cld
dec
and
nop
rcr
add
in
mov
jno
nop
xchg
lods
pop
insb
mov
xchg
mov
jl
mov
add
int
pop
or
test
call
push
push
dec
xchg
cld
mov
pop
ficomps
push
add
mov
sahf
dec
int3
mov
push
loope
push
sbb
cmp
mov
imul
shll
sbb
ret
cs
out
xchg
dec
add
fbld
and
insl
je
xor
jle
ret
and
sbb
leave
imul
dec
js
sub
out
dec
mov
sbb
adc
scas
adc
dec
aam
int3
mov
vsqrtps
sub
xchg
popa
inc
or
or
int3
shll
sub
sbb
mov
pop
mul
cmp
pop
jge
in
jnp
ja
inc
pop
cld
mov
out
insl
xchg
es
ja
and
dec
jbe
adc
mov
movsb
js
mov
inc
fcoms
roll
sub
das
addr16
int3
pop
sti
push
xchg
aad
stc
xor
cmp
add
pop
or
mov
jp
inc
sbb
scas
pop
fs
and
jecxz
xor
jns
cmp
push
outsb
aam
inc
or
fimuls
push
push
push
mov
in
push
or
xor
shll
cmp
adc
clc
pop
xchg
sbb
dec
pop
xchg
mov
adc
push
mov
lea
movb
push
cmpl
lcall
xchg
adc
push
movsl
jg
dec
imul
cmp
jbe
loope
mov
insl
cmp
xorl
push
iret
adc
push
hlt
mov
mov
iret
jbe
push
aaa
push
clc
lea
jge
fdivrl
sbb
jmp
mov
cmc
push
mov
aam
pop
mov
les
stos
add
clc
cmpsl
xor
scas
fadds
pop
mov
stc
movsl
in
dec
rolb
jns
fwait
jecxz
fwait
imul
push
cmp
xchg
sbb
cmp
add
aam
mov
clc
lcall
sti
pop
mov
xlat
js
pusha
sub
dec
cmp
mov
xor
xchg
pop
pminsw
mov
fcompp
pandn
data16
loopne
xor
fcmove
ret
imull
mov
js
cltd
ret
jns
cmp
fnsave
and
sub
mov
mov
ret
xchg
xor
out
cmp
jge
sti
insl
cltd
jbe
sub
rcrl
fwait
and
lock
jo
xchg
js
retw
sbb
nop
or
inc
push
mov
inc
cli
pop
pop
cmp
sbb
adc
ds
insl
in
and
lahf
sub
mov
push
add
test
test
aaa
pop
or
adc
mov
mov
add
scas
push
xor
jbe
pushf
testl
adc
ja
pop
loope
inc
ror
pop
add
test
lds
outsl
rorl
add
xor
insl
xchg
rclb
xor
aas
jnp
cmp
ja
lods
push
cmp
outsl
int
dec
mov
movsl
aaa
in
mov
pop
adc
sar
aaa
push
nop
sbb
or
push
fistpll
lcall
stc
mov
sub
mov
sbbb
cmp
mov
mov
gs
repz
jnp
loopne
xchg
sbb
mov
xor
jb
jl
dec
fldcw
sub
mov
test
je
out
fisubrl
or
in
shrl
xchg
in
jmp
lods
fisubs
rcr
push
lods
jmp
jge
dec
xchg
and
es
insb
mov
mov
inc
test
icebp
jns
push
test
jns
bound
test
jp
mov
sub
nop
sbb
mov
ja
outsb
push
push
mov
adc
jg
in
mov
pop
mov
xchg
mov
pop
in
loopne
pop
enter
mov
loope
dec
add
leave
pop
dec
out
mov
insb
mov
andl
les
pop
pop
andl
mov
push
sbb
push
call
dec
pop
push
push
mov
sbb
lods
mov
fstps
mov
sub
inc
shl
mov
arpl
xor
jl
jo
xor
add
and
sbb
popf
adc
push
or
jo
xor
lds
xor
and
lods
adc
lock
leave
jecxz
push
jg
xor
push
lock
mov
ret
in
fstl
jns
icebp
and
fdivrl
adc
ja
add
adc
xchg
and
arpl
inc
ficoms
mov
mov
cmp
dec
or
cmovno
dec
pop
int
out
stc
and
ja
dec
push
mov
sbb
xor
ror
subb
fdiv
pop
pop
xchg
push
adc
inc
xchg
fsubl
les
fucomip
cmc
mov
es
fisubs
je
icebp
stc
mov
mov
adc
xchg
xor
jns
cld
push
push
jg
jne
pop
stos
lret
mov
xor
out
in
adc
push
mov
pushw
inc
mov
pop
pop
ja
rcrl
out
xchg
jecxz
xlat
xor
mov
add
bound
dec
adc
bound
and
enter
cmp
repz
repz
inc
cmc
je
push
xor
rcrl
inc
mov
mov
adc
xchg
daa
and
dec
push
rcrl
inc
sbb
outsl
push
shrl
pop
shll
xor
fwait
jle
push
jge
add
inc
cltd
pop
push
xchg
sub
sbb
push
pop
push
push
negb
pop
loopne
lcall
adc
jecxz
xor
aas
sbb
cmp
out
add
test
mov
jmp
inc
adc
es
jmp
icebp
sbb
and
mov
mov
inc
shr
addl
adc
call
xor
mov
cmp
jnp
fs
inc
jnp
sbb
mov
push
fstps
call
pop
or
scas
and
cmpl
repnz
clc
mov
push
inc
cmp
xchg
add
enter
sbb
jb
mov
sbb
sub
stc
inc
adc
jp
jecxz
mov
inc
add
out
or
mov
stos
out
sti
fcmovne
mov
push
aas
pop
ret
dec
sbb
lret
push
sbb
in
sarl
mov
ja
daa
lcall
jne
les
mov
jmp
cmp
ss
push
add
sub
push
ret
jae
xor
adc
mov
ret
inc
fs
or
push
adc
xchg
enter
push
int
iret
out
push
lods
or
adc
mov
mov
mov
mov
pop
dec
imul
aas
lods
sbb
mov
pop
xchg
sub
scas
mov
stos
ja
pop
cmp
cltd
lds
cwtl
lret
and
lea
add
dec
cwtl
jmp
mov
mov
ret
cmp
insl
jb
insb
xor
jl
arpl
sbb
es
loope
inc
cmp
fwait
push
and
or
pop
call
insb
icebp
nop
dec
mov
repz
jnp
mov
push
mov
xchg
je
ss
mov
fdivs
daa
je
push
push
incb
out
mov
cmp
adcl
mov
sbb
std
out
cltd
aam
aad
add
clc
mov
jmp
push
or
fidivrl
sbb
or
rorl
or
sbb
in
clc
iret
xchg
arpl
jle
icebp
sahf
push
inc
sub
ss
mov
xor
icebp
mov
iret
xchg
enter
mov
rcrl
dec
push
jl
dec
insl
nop
cwtl
dec
sbb
ljmp
je
pop
push
sub
adc
dec
sub
popa
lahf
mov
aad
dec
pop
leave
add
pop
cltd
pop
imul
adc
sub
movsl
out
push
xlat
jne
sbb
enter
sub
or
jp
ret
pop
mov
shl
pusha
mov
cwtl
push
push
or
imul
mov
jbe
inc
or
mov
ja
pop
xchg
mov
and
arpl
hlt
lcall
sbb
xor
add
cmpsb
add
cld
mov
clc
mov
inc
xchg
clc
mov
fwait
sbb
movl
xor
sbb
xor
xor
sar
outsl
cld
idivb
lock
dec
pop
cmpsb
inc
lds
and
call
sar
xchg
pop
adc
lret
jecxz
cmpsb
mov
imul
ja
pandn
jo
pop
or
out
xchg
dec
pop
fnstsw
ret
out
and
or
clc
push
adc
add
cmp
mov
fsubp
movl
lds
mov
lret
lret
sub
stc
mov
out
mov
imul
xchg
xchg
mov
outsb
lds
and
add
adc
gs
jp
add
enter
insb
cmp
aad
cltd
test
aad
fcmovu
loope
jb
cmp
dec
mov
mov
inc
in
cmp
pop
scas
movsl
xchg
xchg
push
mov
pop
movsl
data16
insb
mov
fildll
clc
arpl
cmp
dec
sbb
mov
jb
nop
jge
dec
fmulp
pop
push
xchg
jp
pusha
and
and
std
mov
cmc
test
inc
add
iret
mov
imul
adc
mov
jnp
jecxz
cmp
les
aas
xchg
call
shll
push
aaa
adc
fistps
or
xor
fbstp
jno
sub
aam
inc
sub
scas
je
ficoml
outsl
or
jmp
inc
xchg
sbb
mov
ja
insb
aad
ror
xor
call
mov
inc
addr16
lret
pop
in
cmp
rcr
push
std
adc
cmp
int3
flds
jmp
scas
dec
pop
add
cs
test
fmull
cmp
dec
test
lock
mov
cmp
enter
and
jnp
or
rol
inc
jle
aam
push
stos
sub
mov
mov
jle
dec
cmc
dec
in
push
and
mov
popa
out
push
mov
outsb
ljmp
push
lret
test
clc
mov
xor
fimull
cwtl
hlt
sbb
in
imul
lea
push
pop
jns
and
lods
iret
and
test
in
leave
insb
movsl
dec
xorl
jecxz
inc
divl
test
clc
mov
push
mov
lret
push
movsb
sbb
jg
stc
xchg
push
pushf
addl
jo
add
jno
push
out
adc
cmpsl
lods
mov
mov
roll
and
sbb
jnp
test
in
pop
fwait
pop
xor
dec
andb
scas
leave
es
repnz
jo
hlt
adc
cmpsl
xchg
flds
leave
fwait
out
mov
aaa
leave
leave
in
psllw
icebp
jnp
shlb
pushl
inc
push
add
xor
or
arpl
rcll
inc
push
pop
jmp
stos
pop
mov
lods
sub
jnp
xorb
inc
scas
lea
cltd
jg
xchg
xchg
xchg
mov
push
nop
js
cwtl
lds
mov
xchg
into
xlat
into
mov
inc
pop
xor
inc
test
cltd
test
xor
pop
les
out
les
sub
fisttpll
fadds
adc
and
iret
jne
sub
es
adc
push
push
aam
cli
mov
sub
sbb
sbb
push
popf
cmp
mov
xchg
cmp
inc
popa
mov
clc
sub
dec
mov
push
or
repnz
cmp
jmp
xchg
sarl
pop
test
add
ja
mov
jge
xor
push
ss
pusha
adc
lods
int
push
iret
clc
jae
xchg
out
mov
xchg
lahf
add
sbb
mov
mov
mov
hlt
and
mov
jnp
and
stos
ljmp
gs
into
in
xchg
pop
js
or
insl
xchg
filds
add
inc
data16
stc
flds
mov
add
push
aam
nopl
adc
cmp
xchg
cli
or
lret
lcall
std
pop
jo
sbb
jno
loop
fstpt
into
push
pop
ljmp
les
mov
loope
fstps
and
ret
dec
lods
out
mulb
ret
adc
lcall
dec
or
mov
pushf
pop
and
pop
data16
sbb
dec
call
cmpl
int3
mov
jmp
cmc
mov
ss
movsl
fdivr
subl
push
popa
pop
pop
pop
pop
sub
pop
sbb
not
fs
test
xchg
dec
dec
fmuls
out
mov
xchg
ficoms
mov
mov
fsubl
in
cld
lahf
cmp
and
mov
jecxz
jne
shl
push
sbb
aam
xchg
add
jg
or
jmp
sub
clc
and
in
push
adc
repz
xor
add
sub
repnz
test
jae
les
sub
popa
jo
gs
sub
dec
test
push
add
push
jne
dec
dec
pop
cs
xchg
shll
cmpsb
bound
roll
lock
iret
xchg
out
mov
aam
lahf
xor
imul
gs
or
add
sub
jmp
pop
and
pop
add
dec
and
push
xchg
mov
mov
int
aam
xor
out
clc
jae
inc
xor
sbb
cmp
fcompl
pop
adc
jns
jle
xchg
cmp
or
xchg
and
jo
sub
insl
inc
jnp
mov
pop
and
mov
xchg
sbb
lods
jge
repz
xorl
mov
repz
cs
and
in
add
outsb
loope
aam
sbb
dec
cli
mov
repz
shll
add
and
test
fmulp
loop
movsb
fiadds
addb
xchg
push
mov
insb
out
ljmp
sub
mov
jp
inc
mov
aam
stos
or
je
insl
cmpsb
mov
sbb
js
lret
enter
dec
mov
sub
outsl
xor
push
lcall
rolb
icebp
dec
int3
mov
mov
stc
shll
int3
cli
jmp
mov
shr
notb
test
pushf
popa
leave
into
rclb
mov
sub
in
or
mov
mov
xchg
jb
pop
dec
sub
push
leave
sbb
andl
inc
rorb
cmpsb
pop
ja
pop
ret
or
lods
fiaddl
mov
imul
imul
test
pusha
sbb
mov
dec
divb
xor
mov
cld
or
add
sub
fstpl
push
add
clc
test
add
jno
push
mov
fsts
xchg
iret
std
sub
add
adc
mov
scas
push
js
out
int
xor
inc
mov
dec
cmpsb
pushl
lret
xor
js
mov
inc
pushf
inc
xchg
iret
lods
fucomi
pop
inc
popf
sbb
pusha
std
rolb
call
icebp
mov
mov
out
fmull
imul
pop
aaa
push
lahf
add
aam
daa
sub
call
aam
ficompl
cs
sbb
daa
mov
aam
jbe
cwtl
call
jns
pushf
int
hlt
rcr
rorl
test
jmp
negl
mov
stc
int
inc
mov
xchg
jle
sub
jne
in
jl
and
mov
xchg
test
imul
dec
mov
xlat
addl
push
shlb
jno
push
je
cli
scas
xchg
sahf
pop
push
push
or
lods
inc
enter
mov
hlt
mov
mov
mov
pop
pop
repnz
loopne
sbb
mov
mov
add
out
pop
fisubrl
inc
inc
ds
fcoml
mov
fmull
jg
ds
outsl
gs
mov
sbbb
outsb
cmp
or
lahf
addr16
or
sub
sarb
add
xchg
sub
test
pop
fdivl
adcl
rcrb
insb
icebp
test
in
dec
sub
and
das
xchg
or
mov
xchg
popf
fidivs
mov
mov
cmp
jmp
sub
xchg
or
mov
mov
js
test
push
cvtpi2ps
xchg
dec
incl
inc
jl
inc
in
mov
aad
je
and
mov
mov
sub
out
cmp
adc
stos
enter
mov
mov
push
xlat
mov
xor
rcrl
or
adc
in
push
xor
psubw
stos
lds
ficoml
push
js
inc
in
stos
pushf
sub
lret
mov
stos
out
cmp
fiaddl
in
mov
in
push
or
scas
cwtl
xchg
xchg
lods
pusha
push
sbb
in
aad
xchg
mov
aas
int
and
aad
xchg
xor
sbb
fidivrl
imul
andl
inc
xor
je
push
popa
mov
iret
jl
push
or
add
mov
push
push
stos
mov
outsb
or
mov
popl
xchg
js
cmpsl
and
movsl
mov
sbb
adc
lds
cs
mov
add
mov
cmp
insl
scas
jno
pop
push
push
mov
sbb
dec
fdiv
roll
adc
stos
shll
enter
outsl
or
stc
inc
cmp
jg
pop
cmpb
enter
test
adc
jl
pop
lock
ja
in
lods
jo
jmp
nop
fistpll
aad
std
movsb
ja
xchg
aas
xlat
xor
mov
jle
mov
sbb
pop
mov
cmc
cmpsb
or
lock
jp
or
les
cmp
call
mov
jb
nop
das
outsb
adc
aad
fstl
mov
cmpb
mov
fwait
test
pop
mov
or
fstpt
xor
cmp
cmp
dec
jae
xchg
mov
movsb
mov
rcrb
dec
icebp
lods
inc
mov
popf
mov
out
jl
imul
or
sub
orl
test
jo
arpl
sbb
jne
mov
cltd
add
loopne
in
lahf
lock
cmp
in
jp
mov
js
aad
pop
mov
aam
test
std
out
fmull
scas
jae
mov
jns
dec
jg
dec
jno
sub
mov
cld
add
mov
mov
outsl
push
icebp
call
mov
adc
out
cmp
pushf
iret
pop
cltd
cltd
sbb
lret
fwait
jbe
adc
outsl
add
or
lods
cmp
mov
adc
testl
test
xorb
pop
daa
xchg
push
dec
outsl
popf
mov
in
call
mov
mov
addr16
outsb
push
stos
sub
test
pop
mov
add
sbb
movsl
sbb
push
mov
imul
xchg
dec
movl
push
lods
xor
adc
xlat
jg
outsl
sub
sub
sbb
push
sub
mov
imul
cltd
sbb
and
ret
fwait
leave
ret
jno
hlt
cmp
mov
sub
sahf
sti
sub
scas
mov
aas
or
imul
sahf
fcmovbe
dec
push
rcrb
xchg
cmp
cmp
xchg
mov
test
ss
xchg
cld
and
clc
adc
adc
pop
and
mov
mov
mov
sbb
or
xchg
add
xchg
or
push
xchg
ret
mov
sub
subb
out
pop
xchg
enter
pop
add
repz
fiaddl
popf
or
sub
or
mov
mov
sbb
repz
incb
mov
scas
adc
daa
cmc
lret
mov
mov
js
push
dec
cld
arpl
mov
divb
repnz
pop
or
push
cmp
fwait
outsl
and
pop
adc
jle
sub
mul
and
dec
mov
inc
dec
mov
leave
fcomi
xchg
rcll
inc
rorl
cmpsl
movsl
ret
xor
fdivrs
push
aad
jo
pop
pop
jne
test
mov
mov
out
jae
sti
push
mov
pushf
pop
mov
jae
shrl
cwtl
rorl
and
cmpsl
jmp
nop
sbb
pop
jp
cld
nop
insb
imul
ret
fnsave
mov
xor
sbb
ret
jge
and
aas
addr16
cld
push
test
mov
int
ljmp
aas
sub
dec
or
repz
dec
outsl
ja
dec
push
sbb
mov
fmuls
fisubrs
mov
icebp
aad
arpl
xchg
adc
pop
add
or
and
movsl
add
xor
mov
adc
aas
push
mov
inc
cmp
loop
fnstcw
fwait
mov
pop
sub
lret
xchg
es
inc
fdivl
rol
je
jmp
daa
and
xchg
and
test
js
xor
mov
xchg
icebp
les
scas
lea
and
dec
push
in
in
xchg
pop
rolb
pop
mov
jmp
pop
pop
aam
mov
cmp
push
fistpll
aad
mov
add
xor
fisubs
pop
mov
bnd
push
jge
mov
gs
aam
imul
aas
out
pushf
mov
push
jno
test
and
mov
test
pop
out
or
jmp
push
xor
sub
lcall
andl
stos
fldcw
mov
jbe
mov
mov
sub
adc
pop
decb
insb
sahf
mov
and
scas
in
inc
mov
orl
mov
cmp
jmp
imul
das
mov
es
xchg
scas
inc
je
sbb
pop
push
popf
fsubrp
not
nop
pop
add
int3
lret
ja
clc
data16
jne
out
jno
sbb
or
dec
int3
cli
push
imul
jmp
loopne
aam
xchg
shl
test
cmc
gs
xor
lcall
in
sub
mov
popf
xor
testl
sub
jo
pop
cmp
or
inc
dec
fsts
adc
xchg
adc
fistl
cmp
arpl
es
mov
mov
mov
cmpsl
cld
lods
sub
sub
dec
push
mov
ss
mov
jb
test
fidivs
inc
dec
mov
scas
popa
jnp
add
cmp
dec
or
les
or
cmc
push
or
pop
leave
icebp
stc
jge
dec
into
out
push
daa
inc
movsl
adc
xchg
adc
shlb
mov
pop
fcoml
stc
jmp
ja
push
dec
add
lret
popa
adc
maxps
ret
in
rcrl
adc
push
and
shrb
push
cs
cmpsl
stos
aaa
fmull
pop
push
cmp
cwtl
and
clc
sbb
xchg
mov
out
mov
hlt
and
xor
imul
inc
push
rol
sub
inc
sbb
sub
outsb
xchg
jle
fistpl
xor
inc
loop
mov
push
push
and
pop
xchg
outsb
loopne
xchg
leave
in
cmp
fisubrl
dec
sub
fldt
ljmp
pop
push
cmp
inc
dec
pop
cmovb
xchg
jb
icebp
fcoml
jae
cmp
es
xchg
add
cmp
loopne
lds
jge
jle
bound
and
add
and
and
or
sub
xor
mov
add
lods
push
pop
or
in
fstl
xor
pusha
push
rorb
mov
mov
fldenv
pop
xchg
dec
insb
jbe
xor
inc
or
push
dec
push
xchg
and
aas
movsw
outsl
inc
cmpsl
popa
xor
inc
mov
aam
dec
test
jmp
xorb
fistpl
and
iret
and
push
sarl
not
nop
mov
call
test
mov
and
mov
ret
inc
stos
repz
repz
in
std
cltd
jae
scas
test
fdivrs
push
inc
int
lret
out
out
loopne
mov
daa
jl
into
int3
cs
fs
adc
stos
mov
adc
cmp
sarl
and
imul
pop
movsl
add
fnstsw
jl
add
dec
divb
scas
pop
inc
loope
xorb
pop
sahf
out
pop
mov
push
jae
gs
jmpw
lcall
fs
jle
cmp
fdivrs
inc
outsb
jae
push
fnstcw
push
pop
pop
or
mov
cld
xor
or
sti
sbb
adc
xorb
repnz
rcll
mov
adc
sahf
jle
push
xchg
jns
loopne
xor
loopne
inc
or
shr
fmul
push
and
sarl
pop
jnp
aas
fwait
xchg
sub
aad
adc
aad
push
mov
rolb
mov
lock
push
or
mov
dec
dec
sarb
jb
xlat
add
and
into
xchg
dec
pop
jmp
xor
sbb
lea
inc
push
or
xor
jg
jecxz
mov
test
fucomip
xchg
mov
lahf
into
stos
shl
push
mov
lods
add
mov
imul
push
fstpl
dec
sbb
ret
dec
mov
fcmovne
ljmp
lea
inc
mov
dec
xchg
jne
scas
dec
jg
add
insb
aam
je
gs
adc
xchg
cltd
lcall
cld
popf
jno
sub
in
divb
or
jge
push
push
or
rcll
ret
inc
add
out
fbld
or
or
sub
addl
adc
mov
push
sti
pop
pop
push
loope
dec
inc
pop
adc
mov
daa
gs
enter
push
pop
xchg
or
mov
les
dec
sbbb
xchg
stc
rcr
mov
mov
add
push
jp
or
push
popf
push
loope
mov
mov
cmp
inc
roll
daa
add
bnd
out
ficoml
pop
xchg
mov
dec
cld
jnp
add
or
addr16
sti
add
and
pop
pop
loope
mov
mov
arpl
in
imul
dec
mov
jg
jge
shrb
fdivl
pop
add
xor
out
lods
int
dec
sub
or
and
push
adc
dec
mov
stc
sub
xchg
cmpsb
in
movsb
movsb
dec
pop
outsb
pop
cmp
dec
hlt
leave
cmpsb
dec
das
cmp
mov
pop
aaa
jge
jmp
cwtl
je
sub
sub
js
mov
jecxz
test
jle
pop
pop
imul
mov
dec
adcl
dec
cmc
ljmpw
xchg
dec
enter
out
push
push
imul
push
sbb
mov
adc
leave
inc
cmp
mov
inc
dec
push
in
mov
sub
push
inc
mov
pop
mov
mov
cmp
inc
popf
mov
das
popf
add
mov
xchg
push
or
pop
mov
out
mov
xchg
fs
push
mov
pop
mov
push
fists
push
ljmp
je
cltd
cmp
and
out
bound
sbb
sbb
xchg
mov
fidivl
sub
jo
dec
in
sahf
aad
sub
js
loopne
into
pop
xchg
push
pop
sbb
sbb
inc
cmc
enter
nop
jnp
jno
sub
push
push
sub
mov
int3
shl
xor
inc
std
add
cvttps2pi
pop
inc
jno
cltd
les
mov
sub
mov
mov
lahf
test
stos
test
adc
dec
outsl
aad
incl
pusha
addr16
cmp
mov
daa
inc
test
test
pop
rcll
fldl
dec
push
add
in
ja
or
inc
mov
mov
loopne
xor
hlt
xor
repz
out
call
out
xlat
or
ds
inc
scas
cmpsb
test
adc
stc
xchg
xorb
inc
adc
imul
insb
out
xchg
mov
lock
iret
mov
xor
hlt
out
push
js
shll
sti
fstpt
cmp
test
adc
inc
fisubrl
repz
mov
fcomps
imul
lcall
push
cmp
ja
jnp
add
or
lods
popa
daa
pusha
test
call
or
into
mov
push
addl
mov
mov
int3
je
addl
fisubs
push
hlt
cli
scas
or
dec
mov
xchg
xlat
cmc
push
jno
mov
cmpsb
loop
inc
cmpsb
and
push
enter
jns
in
aaa
pop
xchg
push
xor
jecxz
int
cmpsb
mov
fstpl
push
mov
and
or
out
xlat
cwtl
or
lcall
mov
int
cwtl
loop
cmpsl
out
lcall
popa
jp
ja
or
mov
xchg
jge
jl
int3
cmp
popa
add
inc
xchg
mov
pop
mov
cmpsb
or
sti
cmp
ja
loope
out
pop
pop
and
xor
sbb
enter
lock
and
out
outsb
pop
aad
xchg
ret
stc
sub
popf
xchg
idiv
mov
mov
call
int
mov
stos
fdivrs
pop
mov
and
mov
push
cmp
xchg
inc
flds
pop
cld
xlat
in
fisubrs
jg
shrb
mov
js
or
cmc
lods
sahf
jle
jae
sbb
xchg
les
pop
inc
jge
sbb
lods
cmp
ficoms
repz
loope
jle
ds
sub
test
insl
in
mov
mov
mov
sbb
xchg
adc
mov
add
xchg
pop
repz
push
dec
test
adc
jl
sub
push
add
js
pusha
test
ja
mov
lahf
daa
movsl
arpl
icebp
into
mov
loop
mov
jnp
inc
cwtl
xor
in
or
or
addr16
sbbl
or
mov
aas
aam
jge
jb
xor
inc
das
dec
xlat
dec
mov
xchg
aam
inc
lock
rcll
in
call
pop
movsb
cwtl
pop
or
cld
shlb
jnp
xchg
lods
xchg
mov
mov
test
or
aaa
jo
or
nop
push
cwtl
or
mov
xor
cld
in
scas
and
sub
sub
gs
jnp
adc
and
popa
sti
scas
mov
clc
lret
adc
add
and
stos
iret
pushf
cmp
dec
in
insl
jae
sbb
pusha
int
mov
loop
dec
and
inc
xchg
mov
and
jl
sub
lret
mov
add
shll
rclb
ljmp
sar
sbb
mov
xchg
push
sub
in
sahf
cmpsl
cmp
shrl
andl
sub
and
mov
test
xor
sahf
lods
shll
add
and
or
loope
pop
adc
lea
pop
iret
clc
cmpsl
stos
mov
addb
push
or
fwait
jl
std
movsb
loop
sub
daa
xor
movsb
mov
xchg
or
shrb
fidivs
cmp
inc
jmp
popw
enter
es
psubsb
dec
sub
jecxz
mov
test
js
movsb
cli
ja
dec
adc
adc
insb
hlt
enter
cwtl
sbb
inc
in
dec
les
mov
jae
addr16
cli
inc
add
repnz
iret
mov
jg
into
jo
fisttps
xchg
mov
xchg
sahf
jg
cmp
icebp
jo
push
int
fs
ficompl
xor
dec
jecxz
arpl
pop
jecxz
int
cmp
xchg
add
mov
lods
popa
mov
roll
fsts
jp
movl
mov
pop
cmpsb
test
inc
enter
int
dec
push
sub
lret
sub
pushf
inc
call
sbb
loope
stos
cmp
and
and
jo
ffreep
test
jg
xchg
mov
push
dec
xor
inc
test
or
rclb
mov
cld
fistpll
jg
loop
push
fadd
mov
xor
in
dec
je
ja
adc
je
scas
fdivl
push
dec
jbe
insb
add
jmp
rorb
testb
xchg
sbb
lods
mov
aam
xchg
popf
je
adc
xor
and
push
xor
or
add
dec
sub
xchg
movsb
mov
into
xchg
xor
aas
or
pop
fcomps
rolb
dec
movsb
test
push
mov
mov
enter
xor
pop
jno
nop
bound
movsl
inc
imul
xchg
into
inc
insb
std
or
arpl
loopne
adc
gs
adc
pushf
pop
or
jg
push
mov
rcrb
xchg
or
addr16
pop
push
imul
mov
cwtl
push
jae
add
lds
and
ficomps
inc
push
lods
test
dec
and
lea
test
dec
and
cs
imul
shrl
xchg
sti
ds
aam
jbe
ss
loop
shlb
repz
pop
test
adc
test
dec
imul
int3
lea
mov
idivb
inc
clc
mov
xchg
shll
pop
fdivp
push
mov
add
scas
pop
out
mov
add
sub
enter
sub
xchg
repz
mov
xchg
mov
in
lods
std
gs
dec
mov
jb
test
xor
mov
mov
loop
outsl
sahf
scas
mov
lds
popf
in
and
mov
push
push
in
mov
inc
decb
cs
insb
adc
mov
pop
sarl
dec
push
and
inc
and
cmpsl
jg
lret
das
or
or
and
rorl
jecxz
jp
aaa
insb
in
cmp
enter
xchg
push
inc
repz
push
or
std
inc
inc
insl
sbb
test
movsb
and
cmpsb
jb
and
incb
and
dec
ja
push
pop
pop
fisubl
mov
stos
xchg
push
pop
xchg
mov
xchg
andl
ja
or
mov
jecxz
mov
pushf
push
inc
mov
int3
xor
mov
mov
iret
js
int3
lods
adc
leave
dec
sub
pushl
pop
fs
add
fsubs
stc
stc
stos
call
fcoms
push
ror
js
push
push
pop
addr16
add
pop
xor
pop
xchg
pop
int3
pop
hlt
lock
mov
mov
mov
push
lock
sbb
shlb
or
ljmp
push
and
xchg
mov
xchg
mov
fbstp
fstps
jb
dec
add
inc
and
lahf
test
cmp
inc
pusha
leave
sbb
shlb
sti
lahf
inc
dec
loop
out
ljmp
sub
sarb
sbb
mov
movsl
scas
pop
gs
sbb
push
push
mov
sbb
mov
mov
jnp
movsb
xchg
mov
push
xor
add
push
into
lret
inc
test
lahf
mov
and
xchg
push
mov
sub
lret
aas
xchg
jl
outsb
xchg
incl
dec
xchg
or
in
jne
pop
fwait
and
mov
popa
pop
jmp
jo
jae
inc
int3
in
xchg
ss
dec
lds
jnp
imul
sub
jp
pop
mov
gs
jne
sub
insl
mov
add
cmovo
xchg
int3
push
add
pop
adc
xor
into
mov
adc
push
idiv
pop
aas
cmp
mov
push
gs
out
adc
mov
je
adc
jl
iret
sbb
leave
rcl
sarl
xchg
mov
add
rolb
fsubl
lods
rorb
inc
dec
mov
mov
jno
js
pop
insl
or
stos
sbb
daa
and
and
mov
jge
repz
mov
lea
gs
enter
xlat
orb
int
or
shll
arpl
and
stos
jmp
mov
int
aad
in
jmp
sub
fwait
xchg
pop
or
fstl
ret
push
out
mov
add
lds
divb
sbb
das
fmuls
mov
mov
iret
dec
addr16
inc
adc
inc
push
xchg
imul
fnsave
xor
mov
mov
pop
lahf
enter
push
and
sarl
jbe
lret
adc
jmp
pop
out
pop
popf
mov
loopne,pn
rcrl
mov
jae
test
push
add
cmp
aad
clc
adc
adc
jle
sbb
push
clc
cs
repz
jge
jns
ficoms
push
dec
and
jle
mov
repnz
dec
pop
push
nop
loope
mov
xchg
inc
enter
mov
int
dec
leave
sbb
hlt
fistpll
nop
pusha
mov
stc
sbb
xchg
jb
xor
or
jmp
push
or
xchg
mov
pop
pop
int3
shlb
mov
arpl
fistpll
addr16
dec
jns
mov
add
ret
cltd
sub
add
scas
sbb
push
jb
loopne
inc
mov
mov
and
pop
out
cmp
adc
rorl
xchg
int3
or
add
lret
inc
dec
iret
loope
dec
arpl
das
outsb
movsl
inc
dec
add
dec
mov
adcl
cwtl
pusha
icebp
scas
add
mov
sub
and
and
loopne
arpl
fldl
jecxz
insl
push
lods
cmp
fistpll
daa
ret
or
lret
movsl
das
mov
mov
aaa
inc
lahf
add
into
sub
cmp
or
fmuls
bound
mov
lods
mov
mov
mov
dec
xor
add
bnd
jp
scas
sbb
and
icebp
jne
les
mov
or
dec
inc
or
fcmovne
adc
push
test
fimuls
mov
clc
pusha
repnz
sub
lea
push
or
and
xchg
add
lds
aaa
lahf
xstore-rng
cmpsl
add
in
clc
loop
cli
sarl
mov
adc
adc
bound
aam
fistpl
pop
sub
push
bound
sub
add
clc
imul
cmp
in
test
push
pop
push
push
fildll
addr16
cmp
fldcw
cmpsb
adc
mov
aaa
sub
xor
mov
xor
adc
cmp
jcxz
pop
sub
je
push
call
pop
inc
or
inc
popf
lret
das
push
out
sub
mov
gs
dec
enter
test
es
pop
ljmp
cmpsl
loopne
mov
scas
inc
scas
cmc
std
sbb
sub
pop
pop
mov
sbb
pop
or
daa
sbb
xchg
cmc
fimull
int
pushf
jmp
mov
and
shlb
scas
enter
movsb
loope
xchg
cmpsl
add
sbb
hlt
std
xchg
arpl
fcmovnbe
pop
sub
mov
push
imul
xor
mov
sbb
push
dec
cltd
push
sub
xor
lds
jmp
scas
ds
push
dec
inc
mov
hlt
rcrl
dec
movsb
idiv
sbb
mov
fwait
mov
cmpsl
xlat
mov
add
outsb
out
ss
sahf
dec
push
cmp
lahf
mov
adc
loopne
mov
cmpsb
jns
dec
lret
jae
push
push
imul
lods
inc
sub
xchg
or
push
mov
test
push
imul
xor
ss
in
and
imul
int3
cmpsb
je
sarl
sbb
inc
test
and
out
push
fs
clc
fmull
inc
scas
xchg
movsl
imull
jmp
sub
test
fstl
push
leave
fwait
mov
jns
loop
push
repz
jecxz
cmp
pop
pop
movsl
or
movsb
adc
jle
add
test
fidivl
int
rcll
into
jnp
cmpsl
cwtl
pop
xor
cld
ja
xor
repnz
cs
rcrl
fwait
push
mov
mov
pop
adc
movsl
stc
and
push
mov
mov
rolb
cli
sbb
fisubl
rcrl
add
sbb
sub
pop
test
add
mov
xor
mov
outsb
jecxz
out
cwtl
ret
fldenv
inc
or
loope
mov
mov
in
inc
loopne
xchg
out
pop
pop
cld
std
mov
rol
mov
add
clc
push
fdivr
gs
dec
jecxz
add
sbb
lcall
cmp
outsb
jns
out
jp
or
inc
jg
gs
mov
pusha
fcoms
iret
loope
jmp
mov
cmpsl
xor
jne
ds
add
hlt
sahf
push
push
ljmp
xor
mov
aas
xchg
loop
movsb
xor
push
cli
mov
sbb
arpl
add
or
sub
dec
mov
ljmp
cmp
xlat
xorl
enter
fmulp
sub
imul
cmpsb
aad
daa
out
in
cld
cmpsl
movsl
loope
lods
ret
xchg
and
imul
stos
notl
mov
pop
sarl
fiadds
pushf
pushl
cmp
push
sbb
gs
xor
ret
jnp
dec
lea
mov
xchg
daa
adc
imulb
rol
int
jge
test
loop
js
push
insl
sbb
lcall
mov
mov
ljmp
xor
aad
ret
sbb
add
mov
jbe
mov
and
jge
push
iret
dec
adc
add
test
sti
bnd
hlt
sub
add
mov
in
movsb
inc
pop
sub
negl
jg
mov
adc
xchg
cltd
mov
idiv
pop
or
adc
leave
push
pop
pop
push
lahf
incl
jecxz
mov
inc
adc
in
out
cmc
pop
inc
dec
ficoml
stos
movsb
lods
lret
ja
or
sbb
mov
xor
dec
aad
add
aam
mov
lret
nop
xchg
neg
adc
int3
shlb
lret
dec
das
ds
fs
mov
sub
push
pushf
xchg
sbb
mov
loop
fistps
arpl
ret
movsb
fsubrs
adc
adc
cmp
jge
mov
or
mov
inc
sub
addb
push
fs
add
mov
cwtl
add
pop
fsub
pusha
inc
pushf
lahf
jle
dec
into
sub
mov
cli
jo
xchg
dec
and
fsub
adc
outsl
xchg
xor
leave
add
stos
in
js
popa
xchg
lret
adc
or
outsl
or
stos
xchg
ljmp
test
mov
pop
sbb
addr16
mov
pop
cmp
pop
sbb
icebp
push
mov
pop
fnstenv
xor
push
sub
push
popf
pop
movsb
dec
in
ljmp
dec
sbb
adc
loop
test
jbe
lds
inc
sahf
rolb
sbb
sub
lods
out
mov
fmuls
xchg
int3
rorl
lahf
adc
ret
jg
hlt
lea
fs
mov
add
aaa
pushf
lahf
sub
clc
sbb
pushf
cwtl
xor
scas
jno
clc
incb
pop
cmpsl
stos
jns
stc
mov
mov
jno
les
push
xchg
mov
mov
jl
call
out
in
aaa
dec
pop
subb
sub
into
leave
lods
mov
stos
pop
dec
mov
mov
xor
jp
sub
sub
sbb
jae
fisubrl
mov
roll
xchg
arpl
sarl
popf
pop
and
push
lock
add
cmc
and
jb
add
cld
cs
das
mov
xorb
sbb
dec
out
test
cmpsb
in
pop
lods
push
gs
jae
jl
jb
cmp
or
pop
loope
add
nop
lods
xchg
das
fwait
xor
inc
ds
dec
outsb
fucomi
lret
pop
fcmove
jle
xlat
lods
sbb
xorl
pusha
fdivrl
mov
add
add
test
hlt
ja
stc
xor
outsb
inc
mov
jmp
mov
dec
fdivp
push
cmc
pop
rorb
pop
push
mov
jl
loopne
imul
mov
xor
pop
jo
inc
test
add
negb
js
ret
test
sahf
and
mov
lea
js
mov
arpl
inc
xchg
push
aam
xor
leave
repnz
incb
pop
lds
xor
repz
lods
xor
adc
aas
cmpsl
add
and
jecxz
push
aas
mov
inc
inc
xchg
cmpl
xchg
dec
fisubrl
ljmp
and
in
xor
jecxz
orb
or
add
nop
xchg
shlb
mov
sbb
mov
xor
sbb
push
sbb
outsb
adc
jmp
xor
inc
push
in
lods
movsb
sbb
inc
bound
or
jae
push
fwait
cmp
popf
cmp
mov
mov
aas
push
insb
and
dec
test
repz
xchg
jle
gs
fdivp
icebp
mov
mov
xchg
lock
pop
aaa
icebp
ret
xor
xor
mov
ret
ret
in
sbb
xor
jmp
and
mov
loope
cltd
testb
incl
jnp
insl
inc
std
ret
in
inc
inc
sub
into
pop
lcall
outsl
std
xchg
movsl
push
repz
dec
adc
add
movsl
lods
icebp
push
adc
lret
ret
cmpb
lock
sbbb
pop
in
xchg
mov
mov
dec
pop
daa
xor
enter
and
ficoms
das
add
adc
jnp
icebp
stos
lods
aam
aad
push
imul
lock
stos
mov
lock
cmc
idivl
daa
mov
mov
adc
in
call
sbb
xor
push
sbbb
flds
fwait
push
push
insl
sub
aam
inc
and
out
pop
mov
fmulp
push
xchg
adc
inc
pusha
push
scas
cld
push
sub
int
movl
mov
xlat
fistps
js
ret
xor
mov
push
pop
jg
inc
sti
lahf
sub
mov
mov
jg
jp
xchg
cmp
jbe
out
fs
xchg
out
pop
pand
repz
sbb
ljmp
cmpsb
popf
and
dec
imull
hlt
adc
xchg
out
lods
movsb
js
fisubl
push
and
into
jae
and
adc
and
insb
andl
adc
push
fcoms
add
inc
leave
xchg
or
mov
cli
or
cld
sti
ds
in
cmpsb
rcrl
push
sub
sbb
add
fdivrp
adc
or
imul
outsl
mull
jb
pop
pop
lds
xor
scas
jae
movsl
stc
fdivl
icebp
jg
push
xchg
sbb
cltd
rcr
xor
in
in
mov
and
sbb
pop
orb
dec
xchg
pop
out
insl
mov
dec
mov
fiadds
or
mov
fdivrs
mov
in
lock
xorl
pop
inc
jp
pop
mov
mov
dec
adc
fbstp
mov
mov
sbbl
add
daa
addb
loopne
ljmp
dec
push
and
cli
add
push
fstl
repz
dec
rorb
mov
call
sbb
dec
push
mov
arpl
popf
adc
xor
and
insl
push
fdivrs
and
in
jae
dec
jbe
ljmp
inc
aam
leave
xchg
inc
inc
mov
ljmp
std
fsubr
leave
ljmp
mov
fwait
popf
inc
xlat
outsb
sbb
dec
lods
cmp
imul
xlat
nop
and
add
or
jmp
mov
pop
cmp
call
jb
and
adc
sti
mov
inc
popl
push
dec
xchg
mov
xor
adc
out
mov
popf
test
daa
xor
loopne
mov
xchg
cmp
popa
sub
xor
cmp
sub
out
push
sub
cmpsl
ret
ja
cld
adc
imul
hlt
inc
movb
mov
das
hlt
push
xor
imull
xchg
inc
loopne
pop
pop
push
xchg
fsubp
rol
pop
fsubl
sub
mov
mov
sub
push
inc
and
cs
in
xor
stos
into
cmpsb
int
jg
mov
dec
cs
in
daa
mov
dec
das
push
or
push
ljmp
xor
xchg
sbb
xor
popa
aad
les
pop
fisubrs
mov
ret
imul
pop
fldt
pusha
xor
fimuls
cmc
fildl
lret
hlt
aam
jmp
lods
cmp
aas
das
inc
lods
ja
push
test
imul
lret
movsb
shl
icebp
outsb
je
cld
sahf
xor
jnp
lock
cltd
cmp
jno
push
in
inc
push
cmp
add
jge
cmp
and
sub
test
inc
adc
cmpsl
stos
ss
inc
popf
jg
popa
cmpsl
outsb
dec
rolb
inc
daa
aas
cmp
push
out
icebp
cmp
in
xchg
add
or
adc
dec
rcl
mov
dec
or
mov
dec
sbb
inc
xchg
mov
jo
adc
mov
fs
jno
sahf
imul
and
xlat
xchg
cmp
add
cwtl
negl
jle
leave
pop
loop
push
jb
dec
orb
imul
pop
push
xchg
clc
mov
leave
push
push
dec
xchg
add
cltd
adc
mov
fsubl
adc
into
cmpsb
xor
push
mov
sbb
inc
jl
and
dec
add
in
mov
lea
xchg
inc
adc
cmpsb
lcall
add
sub
addb
mov
mov
cli
add
mov
or
xchg
dec
xor
pop
adc
inc
das
cli
daa
loope
sub
outsb
mov
xchg
or
stc
pop
mov
sbbb
addl
mov
pop
pop
orb
fwait
sbb
data16
inc
inc
jge
dec
ret
and
std
call
add
shrb
push
add
pushf
mov
popa
jmp
popa
cmp
mov
push
in
in
enter
sbb
mov
or
sbb
fucom
and
dec
loopne
lock
mov
fdivl
scas
pop
mov
cmpsl
jbe
mov
decb
into
add
xorb
push
jns
pop
dec
push
pop
xchg
bound
outsl
push
mov
sbb
xor
dec
nop
bound
add
dec
xchg
out
mov
xchg
jno
insb
dec
outsb
xlat
shl
mov
movsb
mov
sar
out
je
cmp
jnp
push
bound
je
adc
adc
add
mov
mov
rcll
mov
aaa
sub
dec
xlat
mov
push
aam
add
mov
cmp
les
xor
and
popf
adc
xchg
and
push
out
push
sti
xorb
mov
xor
imul
push
or
jbe
add
ljmp
mov
push
hlt
mov
adc
popf
sub
or
inc
cmp
test
jecxz
sbb
cmpsb
call
out
es
cli
mov
sbb
in
and
je
aas
push
in
cmpsb
mov
ret
add
mov
inc
add
cwtl
popf
scas
push
add
jnp
cltd
inc
std
mov
andb
movl
mov
add
push
xor
movsb
mov
sbb
scas
lock
gs
and
xchg
sub
idivl
rcl
out
in
mov
push
ja
test
and
jmp
pop
inc
adcl
mov
or
mov
pop
pop
inc
lret
pusha
pop
test
test
and
ljmp
pop
push
stos
add
filds
pop
cmpsl
cmp
jns
es
inc
std
mov
mov
andl
xchg
cmc
sub
fwait
xchg
iret
lahf
subb
daa
xor
movsl
and
ljmp
sbb
cld
xor
pusha
clc
dec
mov
int3
lods
fldl
dec
mov
jmp
mov
mov
repnz
cli
outsb
les
adc
push
pusha
xchg
xor
pop
inc
mov
pop
into
cmp
jno
or
adc
ds
add
lea
mov
sbb
or
lahf
jp
loop
into
ds
and
movsb
cmp
orb
cmc
mov
out
adc
into
insl
mov
xchg
xchg
in
je
adcb
mov
lods
push
test
jnp
xor
cmp
adc
in
ds
pop
cmp
int3
lret
xor
fwait
cmp
sti
inc
mov
addr16
dec
inc
xchg
aad
jbe
repnz
lret
rolb
xor
mov
bound
jle
or
jecxz
btc
push
push
cltd
sub
jecxz
mov
loope
sti
pop
cmc
cmp
inc
popf
mov
push
pop
inc
fmuls
lret
dec
mov
cld
lahf
dec
and
xchg
jge
mov
push
mov
mov
ficomps
mov
notb
nop
push
sub
xchg
into
sbb
fwait
push
pop
orl
mov
mov
mov
dec
adc
data16
nop
call
jecxz
sti
xchg
in
inc
jo
fmuls
popa
push
jb
jl
inc
addr16
push
mov
in
in
mov
dec
add
arpl
xor
ror
incb
pop
xchg
xor
add
call
out
aas
cmc
cmp
out
lods
je
jbe
lcall
pop
dec
or
inc
mov
test
jo
movsl
fcompl
mov
pop
pop
call
or
jl
insb
jmp
dec
sub
xchg
dec
cltd
sar
pop
addb
out
push
arpl
xor
push
cmpsb
cmp
jl
cli
push
jbe
mov
xor
adc
adc
xor
test
pop
cmp
loop
pop
push
add
pop
divl
outsl
inc
lahf
mov
mov
mov
jp
movsl
dec
rolb
cmc
sub
jbe
dec
lret
mov
mov
sbb
in
xchg
adc
mov
jnp
loope
xchg
sbb
ret
and
mov
dec
pop
cltd
mov
aad
xchg
sbb
mov
xchg
incb
arpl
ss
out
inc
push
imul
adc
cmpsb
fidivrs
jg
pop
pop
dec
and
jmp
mov
icebp
xchg
inc
push
pop
clc
andb
dec
dec
sarl
ljmp
xor
in
out
cli
js
cwtl
data16
sbb
pop
adc
in
push
inc
xchg
stos
jae
stos
fidivrs
inc
xor
lods
adc
pop
sbb
mov
pop
test
aas
popa
outsb
xor
std
lea
jmp
leave
sub
pop
aam
std
popf
pop
cmc
dec
jnp
cmovno
sbb
repnz
push
jae
jl
inc
lahf
mov
inc
sbb
loop
mov
jle
hlt
mov
push
or
inc
lahf
scas
mov
and
lcall
enter
mov
shrb
shrl
push
js
inc
pop
pop
dec
add
or
jb
xchg
cmpsb
push
fwait
lret
and
xchg
mov
ds
sub
xchg
loope
in
push
inc
jg
mov
enter
xchg
xor
rorb
lcall
lcall
in
sbb
cmpsb
mov
xchg
loope
mov
arpl
daa
adc
fsubrs
mov
jge
fcmovne
mov
and
outsl
push
mov
xchg
xchg
cltd
sbb
loope
pop
add
sbb
and
and
pop
fcompl
and
test
fsubrs
das
test
les
inc
fisttps
cmp
fmull
inc
push
fs
pop
fstpt
cmp
andl
in
or
jbe
cmp
mov
or
imul
cmpsb
inc
mov
dec
mov
mov
daa
dec
adc
dec
sub
or
xchg
fwait
pop
mov
mov
mov
fcoml
mov
loop
cmp
rcrb
jns
add
xchg
xchg
es
push
and
push
cmp
fistpll
push
test
out
xor
fldt
fildll
pop
and
arpl
mov
pop
frstor
add
jp
adc
mov
jns
inc
scas
adc
inc
lock
call
add
cmpsl
push
cmp
xor
int
roll
xor
push
cli
and
icebp
mov
loopne
hlt
jne
dec
pop
sub
mov
lcall
cli
inc
pop
fldcw
lods
xchg
mov
lods
inc
imul
add
dec
jp
xor
add
imul
in
push
out
push
outsl
orl
in
jl
lahf
mov
fstps
xchg
test
int
sar
loope
or
mov
jecxz
and
cmp
popf
xchg
xor
sahf
jne
jg
dec
mov
mov
cli
sub
cmp
xchg
stos
mov
sbb
inc
cmp
mov
jbe
test
push
stos
and
je
pop
xchg
aad
and
fiaddl
mov
clc
iret
jae
xchg
adc
addr16
daa
mov
in
bound
test
cmp
add
je
ret
dec
mov
pop
cmpsl
and
xchg
pop
mov
add
mov
cmp
or
cmp
mov
sbb
pop
fwait
ljmp
ficoml
mov
cs
sahf
rcl
adc
fadds
cmp
mov
insl
lret
inc
mov
or
ds
iret
pop
fadds
lret
cmp
and
shlb
in
mov
test
jp
push
push
mov
sbb
xlat
das
jae
in
movsb
insl
xchg
mov
outsl
pop
and
test
jg
adc
xchg
xchg
mov
pop
std
jecxz
push
sbb
test
lahf
add
insb
or
jp
inc
pop
push
insl
inc
stos
pusha
mov
jmp
add
inc
and
mov
lret
or
mov
cmp
or
xor
mov
jmp
jns
xchg
jae
pop
enter
cmp
outsl
dec
push
movsl
jne
mov
push
ja
sub
push
not
nop
shlb
pop
cmp
jl
addr16
fwait
mov
sti
push
lods
mov
and
loope
push
inc
adc
sub
cli
into
and
ss
int
cli
pop
inc
nop
dec
roll
inc
mov
push
adc
fst
das
adc
inc
fidivs
mov
inc
ja
fdivl
lahf
les
inc
ror
push
or
mov
mov
mov
jmp
shl
lret
iret
mov
push
xor
test
sub
cmp
inc
xchg
dec
jne
int
loop
adc
push
cmpsl
out
dec
inc
adc
dec
subl
xchg
push
add
push
sbb
outsl
std
and
and
call
push
adc
mov
jae
hlt
and
xchg
xor
hlt
push
mov
sbb
loopne
pop
push
mov
lret
movsl
mov
shrl
imul
add
outsb
leave
pop
rcll
cmc
add
jle
xchg
mov
add
cmp
fwait
dec
hlt
add
shll
lds
in
dec
push
and
add
xchg
pop
pop
add
dec
dec
bound
mov
add
lods
sub
or
gs
jns
sbb
add
mov
jbe
jae
and
mov
insb
mov
into
cmp
cmpsl
pop
loope
rorl
pop
xchg
add
adc
pop
mov
aas
arpl
vsubps
std
stos
je
mov
testl
cld
push
call
mov
xchg
lods
xchg
jle
fisubs
fcompl
add
and
ds
scas
fisubl
add
emms
mov
aad
xor
lcall
inc
test
loope
test
je
sbb
pop
and
out
insb
adc
push
les
fadds
or
or
insb
xchg
shll
dec
cmp
outsl
push
loope
aaa
xorl
push
pop
stos
mov
mov
fwait
sbb
arpl
addr16
cwtl
scas
sbb
dec
int
fcoms
int
mov
cmp
test
fldt
call
mov
sbb
mov
stc
pop
aas
sub
nop
adc
clc
or
data16
scas
loope
dec
mov
push
popf
xchg
rcll
add
mov
xor
jmp
popf
cli
out
dec
lret
stc
lock
jmp
and
popa
fcomp
ret
push
mov
adc
cmp
int3
dec
and
xchg
mov
push
cmpb
adc
xchg
loope
cmp
or
and
test
lret
roll
push
add
sarl
pop
outsb
jno
xor
rcll
insl
dec
or
sti
sbb
dec
pushf
jo
mov
rcl
and
mov
fistpll
shlb
ret
sbb
or
sbb
je
or
xchg
pop
insl
fiaddl
push
fstpl
xchg
sbb
jge
lahf
outsb
lahf
inc
push
and
mov
mov
push
adc
enter
in
mov
xor
inc
mov
outsb
dec
mov
rcll
data16
adc
fs
xchg
dec
mov
int
jns
rol
jne
pushf
popa
adc
int
inc
push
push
fwait
push
leave
test
ss
repnz
rclb
in
in
or
pop
pop
pop
das
dec
and
xchg
and
movsl
add
bound
jmp
sub
jns
jp
andl
repnz
repz
test
clc
xchg
in
adc
pusha
pushaw
inc
xchg
jns
xor
ds
cmpb
enter
sub
jbe
loope
mov
xchg
pushf
lahf
mov
aas
in
cmc
mov
stos
fmuls
mov
xchg
sti
mov
insb
jg
inc
movsb
fisttps
sbb
inc
pop
and
push
and
or
sbb
inc
lret
popf
mov
push
cs
test
sub
in
adc
or
xchg
dec
in
incl
out
lret
pushf
sbb
mov
mov
adc
subl
inc
cmp
ret
and
shlb
lock
sbb
cli
rcr
bound
pop
rorl
push
loop
repz
and
and
out
inc
jmp
out
js
sub
xchg
add
or
test
inc
dec
ret
out
out
loopne
xchg
mov
sub
dec
dec
inc
mov
adc
dec
inc
adc
push
cmp
mov
mov
pop
push
movsb
ret
loop
push
outsb
cli
jmp
inc
shll
jbe
lods
rcl
aas
cmpsl
push
and
ret
lods
aad
rcl
cmp
clc
mov
cmp
loop
adc
pop
cs
sti
sbb
jb
sbb
or
lret
adcb
lret
cmp
or
dec
repnz
jbe
pusha
loop
aas
andl
pop
sahf
cmp
lahf
std
push
test
dec
mov
fldcw
inc
in
push
nop
mov
aad
jnp
or
push
popa
jecxz
enter
div
loopne
popa
cmpsb
pop
in
mov
fld
shrl
ror
pusha
push
dec
test
jae
sub
push
xchg
xchg
push
mov
pop
mov
ret
ss
jbe
mov
test
adcl
stos
dec
mov
sbb
outsb
int3
jne
xchg
pop
xor
clc
adc
loop
iret
adcl
fnstsw
mov
xchg
outsb
sbb
push
clc
adc
out
mov
sub
mov
fisttps
dec
xor
jg
rcrl
jp
scas
ret
lahf
lock
mov
shl
sbb
fs
stc
and
lahf
hlt
imul
cmpsb
xor
and
out
and
cltd
ljmp
sub
jae
xchg
sbb
test
dec
mov
jne
and
aas
out
jns
jbe
jle
or
jne
in
imul
imul
lcall
lds
xor
loop
cmp
clc
jp
fcmovnbe
mov
outsb
aas
andl
arpl
xchg
cltd
shl
addr16
int3
cld
xor
ja
cli
repz
mov
out
sbb
icebp
cli
xor
ljmp
in
adc
jnp
xor
and
mov
addr16
lods
je
negb
repnz
push
out
and
adc
cmpsl
test
fisubrs
dec
fnsave
fsubr
pop
inc
xchg
mov
mov
jmp
cmp
and
lret
mov
pop
daa
dec
xor
or
xchg
aaa
rcr
dec
sub
xchg
and
into
fmull
mov
es
dec
push
mov
jmp
outsb
mov
in
popa
xchg
insb
xor
mov
loopne
pop
push
mov
xchg
inc
into
sub
leave
xchg
das
inc
imul
aaa
mov
push
fists
adc
cmpsl
cmp
add
insl
mov
cmp
std
jecxz
in
sub
hlt
std
xor
cmp
aad
push
test
int
gs
cmp
enter
pop
mov
popa
call
add
addb
dec
or
pop
loopne
mov
lea
ja
shlb
ror
sbb
mov
das
sbb
mov
cltd
mov
movsb
adc
push
xor
flds
loop
push
cwtl
outsb
mov
push
out
inc
mov
inc
pop
movsb
dec
adc
insb
add
lret
data16
or
dec
shl
ds
adc
enter
sub
jmp
pop
sti
jl
mov
sarl
dec
ljmp
mov
jo
mov
and
cmp
push
icebp
push
mov
test
jae
add
pushl
adc
cld
loopne
stos
call
jo
sbb
mov
xor
in
adc
andl
pushf
arpl
adc
cmp
mov
inc
or
sbb
xchg
sub
dec
ljmp
sbb
or
test
icebp
cwtl
and
mov
test
or
out
sbb
in
and
adc
sti
pusha
push
frstor
sbb
jmp
aaa
cmp
add
clc
leave
fidivrs
fcomip
mov
pop
mov
push
fwait
push
adc
push
outsb
aaa
dec
scas
rol
inc
testl
cltd
xchg
jb
jge
push
push
xor
pushf
or
push
push
mov
mov
cmp
mov
scas
inc
hlt
clc
lret
mul
xor
dec
call
cmc
push
mov
sti
push
jmp
scas
dec
mov
xlat
mov
mov
jge
out
xchg
lea
sbb
das
movsl
inc
mov
dec
add
mov
mov
cs
pop
mov
push
lahf
lea
mov
mov
cltd
dec
push
mov
xchg
data16
xor
stos
rorb
ljmp
xlat
mov
jmp
lock
push
adc
insb
mov
leave
cmc
pusha
xchg
daa
mov
adc
pop
xchg
ds
outsl
mov
inc
or
fidivl
mov
sub
sbbb
dec
jno
pop
dec
xchg
movsb
movsl
dec
jp
pop
clc
add
das
iret
sbb
cmp
lret
sub
push
aam
pop
aad
lods
dec
mov
icebp
bound
fwait
mov
test
inc
cmc
movsb
es
out
inc
mov
jmp
sub
adc
mov
pop
mov
in
cmc
ret
testl
popf
lods
imul
out
xor
adc
adc
add
mov
add
push
cld
adc
in
pushl
xchg
mov
cmp
mov
stos
cmpsb
cpuid
aas
ljmp
jmp
xor
lcall
xlat
hlt
mov
sbb
dec
loope
and
inc
xchg
fcmovu
test
adc
pop
gs
xchg
in
int
cmp
push
add
loop
sahf
ljmp
sub
push
adc
mov
sub
js
mov
aad
pusha
dec
pop
rcrb
sarl
mov
or
jnp
add
imul
les
pop
add
fdivr
hlt
int3
scas
xchg
pop
cmp
stos
out
lea
xor
insl
sbb
enter
xchg
or
bndstx
mov
push
mov
mov
leave
mov
cld
bswap
mov
pop
test
dec
pop
xor
xor
into
pushf
mov
call
lods
lea
dec
pushf
sub
xor
aam
fistps
xor
insb
jb
cld
test
aad
rolb
fimull
jb
add
out
std
aaa
or
fwait
sbb
push
jge
dec
add
and
xor
pop
rcll
adc
std
fcompl
lcall
div
ror
je
or
pop
fdivs
jns
push
je
cmp
fdivrl
ljmp
cmp
es
lods
adc
ds
push
push
stos
cmc
lock
mov
in
add
ret
sub
sub
cwtl
insl
sbb
xchg
inc
push
mov
cmp
sub
les
mov
popf
and
xor
call
mov
dec
inc
inc
pop
cli
push
aad
cmp
push
or
lods
cmp
shrl
dec
sbb
test
xor
cltd
xor
test
and
test
fidivrl
out
fnstcw
pop
gs
outsl
lods
mov
mov
add
ror
subl
pop
negb
lods
mov
jg
shrl
xor
loopne
ljmp
cmp
jb
dec
cmpsb
sbb
aaa
pop
sub
adc
sbb
adc
jns
loope
mov
popa
pop
fistpll
enter
and
cmp
pop
hlt
addr16
xchg
adc
cmp
lods
pusha
aas
push
int
adc
lods
int
mov
dec
int3
scas
icebp
mov
and
sahf
inc
cmp
subl
cmp
jb
pop
out
mov
or
adc
mov
lahf
data16
jecxz
popa
adc
and
outsb
fisttpll
or
addb
daa
scas
data16
mov
aad
mov
hlt
aam
in
adc
shlb
push
gs
add
push
or
stos
sbb
fmull
fsubl
add
lea
pop
aas
mov
pop
xlat
imul
adc
lods
stc
xor
sbb
ljmp
test
jp
pop
xor
cmp
nop
in
cltd
fidivrs
stos
rcll
mov
adc
test
add
push
sbb
fiadds
shrb
testb
push
cmc
out
add
ss
sub
dec
lahf
xor
lret
jge
or
pusha
and
loope
pop
dec
sbb
es
inc
pop
jns
js
add
testl
adc
lret
mov
loope
pop
stos
fsubl
repnz
sbb
jno
inc
cmpsl
cmpsb
imul
sbb
sbb
lods
mov
push
shrl
popf
fsubl
shlb
dec
aad
cmp
cmc
out
aam
cmp
xchg
mov
outsl
in
sarb
add
xor
daa
cmpsl
mov
dec
adc
xor
loope
push
out
decb
ljmp
or
adc
sub
pop
sub
pop
aas
jmp
inc
ffree
push
sub
movsl
andl
push
imull
mov
std
out
movb
scas
add
mov
out
dec
in
mov
and
jns
push
testl
push
outsl
aaa
lret
xchg
insb
sbb
mov
inc
add
and
sbb
pop
sbb
pop
lea
push
mov
xor
add
mov
out
adcl
dec
fsubl
scas
in
mov
enter
sub
mov
cmp
fs
js
jno
jl
test
addr16
mov
outsb
xor
je
lahf
gs
or
aam
aam
jl
push
sti
inc
in
mov
outsb
mov
cmp
in
sub
xchg
nop
sub
add
cmpsb
and
inc
xchg
mov
mov
in
jge
ljmp
mov
mov
adc
xchg
and
sbb
push
or
cmp
xor
cwtl
or
ret
xor
incl
addb
dec
call
lahf
inc
xor
mov
test
rcrb
shlb
outsl
jmp
cli
hlt
pop
fucom
sbb
jbe
xchg
data16
jl
mov
pop
insb
scas
xchg
ja
push
mull
xchg
fadd
pop
sbb
in
stos
ret
fisubrl
dec
ret
cmpsb
fisubrl
jbe
xor
dec
sbb
stos
in
mov
mov
dec
mov
dec
mov
jae,pt
sub
les
jbe
jecxz
enter
xor
or
sahf
sub
stos
xchg
sarl
jmp
lahf
add
pop
sahf
fstpl
lcall
fcomi
inc
lods
mov
shll
jb
jmp
mov
jnp
or
outsb
inc
push
mov
in
cld
outsl
popf
mov
imull
mov
sbb
or
add
sbb
in
test
cmp
pushf
scas
mov
jno
push
faddl
mulb
pop
adc
lret
aad
add
sbb
xchg
hlt
call
or
jle
mov
fwait
sbb
inc
adc
jmp
movsl
faddp
in
dec
repnz
pop
mov
movsb
or
push
mov
fwait
cmp
push
frstor
xchg
cs
sub
sbb
cmp
cmp
pop
jb
je
push
ss
pop
lcall
sbb
jne
jmp
cmp
fsts
stc
cmp
into
push
loop
sub
das
movsb
in
pop
mov
sub
xchg
or
cwtl
and
adcl
push
push
mov
fmuls
insb
cld
fsubrs
test
sbb
pop
inc
xchg
lret
jbe
pushf
and
inc
sbb
int3
test
xorb
test
shrb
incb
nop
imul
jno
cltd
jnp
lahf
jp
xor
and
cmp
adc
push
mov
mov
pop
outsb
jmp
jmp
jle
jg
outsb
iret
mov
lods
lcall
into
xor
mov
lcall
mov
cmp
sub
adc
add
jae
push
sti
mov
xchg
imul
fisubrs
mov
lds
fs
sahf
test
inc
movsl
xor
cmp
pushf
or
mov
push
jge
ja
das
lret
addl
inc
mov
insl
je
jae
cmpsb
movl
lcall
inc
cmp
adc
cmpsb
outsb
cmp
mov
lret
inc
repnz
js
and
int
adc
movsl
jae
mov
lea
lods
and
dec
add
aaa
jp
pop
hlt
dec
jmp
cwtl
add
sbb
xlat
in
outsl
adc
loope
stos
push
cltd
mov
cmp
push
mov
mov
and
nop
xor
push
jb
neg
dec
cmp
sbb
sub
fstpl
push
cmp
scas
jnp
aad
push
push
and
xor
pop
scas
shll
sar
aas
push
pop
cmpsl
fadds
mov
push
push
pop
bound
xor
dec
adc
scas
movsl
cmp
cmc
cmpsb
fidivl
push
es
imul
dec
outsl
fisubrl
xor
lcall
loopne
xchg
arpl
in
popf
stos
xor
pop
imull
inc
pop
pop
jns
adc
xor
icebp
pushf
inc
push
xchg
scas
or
inc
repnz
mov
push
xchg
lock
add
out
adc
ret
pop
mov
pushf
inc
push
jne
lods
call
pusha
dec
dec
dec
sub
pop
cmpsb
cld
pop
ja
es
aas
mov
loopne
les
pop
movsb
mov
mov
mov
fstpl
push
dec
dec
cli
lods
fnstsw
and
insb
adc
daa
sbb
jno
rorb
out
add
cmc
jno
stos
xchg
fistl
rep
in
clc
lcall
mov
pop
jne
mov
dec
dec
aad
out
jns
cwtl
xchg
mov
adc
mov
insl
xchg
aas
cmp
mov
gs
js
ret
xchg
jp
and
fistps
lods
call
fmull
shl
jg
fimuls
jmp
jbe
mov
dec
insl
lds
mov
mov
inc
or
lret
addb
scas
rclb
pop
out
cld
je
sbb
xchg
notl
mov
aaa
adc
jno
out
daa
imul
sbb
push
pop
push
push
lret
cmpl
sub
and
mov
fcoml
outsb
sarb
jns
lea
enter
adc
sbb
fildll
inc
nop
push
and
pushf
xor
mov
jg
inc
push
mov
imul
sbb
jle
rolb
and
ss
pop
push
xor
les
push
sahf
xor
add
cmpsb
into
cwtl
or
push
pop
sbb
jb
test
mov
lret
mov
lods
dec
bound
ss
jl
cmp
popf
or
inc
jb
aad
js
jns
and
xlat
js
aam
ret
incb
xchg
in
cmpb
or
inc
fnstsw
jno
xchg
sub
mov
or
flds
lcall
mov
es
or
pushw
jle
sub
dec
push
pop
neg
in
loopne
add
add
and
pusha
add
mov
xchg
jecxz
jg
dec
xchg
lods
xor
mov
sbb
scas
scas
icebp
mov
ret
into
fstpl
out
clc
jmp
pop
repz
scas
ss
inc
imul
nop
mov
lcall
jecxz
mov
out
imull
dec
adc
out
mov
addr16
cli
mov
and
adc
sbb
nop
in
test
addr16
ret
sbb
aad
clc
push
fisubrl
ds
push
std
outsb
push
mov
stc
xchg
push
fdivrs
out
cmp
idivl
sti
inc
sub
mov
adc
ficomps
imul
das
lods
adc
dec
mov
mov
call
fidivs
arpl
and
xchg
call
pop
movsl
xchg
mov
insl
cmpsl
loop
and
xchg
std
mov
test
pusha
inc
cs
lret
xchg
out
sbb
in
subl
lahf
dec
cmp
rcll
ljmp
add
rorb
outsl
stc
call
pop
mov
orl
aad
xor
jle
add
or
fs
push
sbb
icebp
aad
movsl
aam
inc
jbe
sti
xor
mov
and
ljmp
in
rcll
dec
ret
loopne
inc
add
subl
shlb
and
ret
add
sub
cmc
mov
pop
mov
jge
pushf
outsl
stos
ds
mov
data16
adc
and
and
clc
in
jge
mov
adc
iret
mov
call
pop
pop
ljmp
in
xor
dec
je
jl
in
push
push
push
mov
lahf
imul
adc
xor
lret
sbb
mov
ss
cmp
scas
cmp
dec
andb
mov
jl
xchg
inc
in
xor
iret
mov
add
cmc
jno
inc
lock
or
aam
lea
sub
dec
out
lods
adc
jp
mov
sub
sahf
add
fwait
je
inc
add
mov
out
sub
mov
scas
and
add
sbb
push
test
add
jno
pop
adc
mov
fldl
leave
ret
inc
scas
cmp
out
jb
sub
sbb
mov
push
pop
por
dec
cli
data16
shll
push
mull
mov
mov
push
pop
test
jnp
jg
repnz
sub
pop
pop
std
and
xor
xchg
lds
lcall
mov
push
or
adc
inc
adc
arpl
cmpsb
adcb
cld
lods
mov
mov
imul
jo
daa
sbb
lret
ljmp
popf
inc
lahf
pop
cmp
xchg
sbb
adc
fbstp
iret
xchg
pop
mov
aaa
enter
jbe
xchg
cmpsb
push
jge
std
mov
sub
jno
mov
mov
enter
dec
imul
ret
mov
mov
fldt
lea
mov
inc
mov
adc
insl
jmp
sbb
fcomip
adc
xor
int
lcall
ret
lcall
aam
je
mov
mov
mov
mov
rcrl
mov
repnz
nop
enter
jne
aaa
and
mov
iret
cmp
ret
sarl
faddl
inc
add
push
out
and
icebp
cmp
or
cmc
push
cmp
daa
je
lret
dec
push
stos
pop
mov
mov
add
xorl
and
and
aam
fdivl
jmp
in
insl
cmpl
mov
std
dec
fs
movsl
xchg
xchg
mov
mov
cmp
sub
cmpsb
fwait
adc
pop
mov
xchg
sub
imul
jge
inc
push
sub
or
mov
mov
je
jmp
imul
imul
cmp
addr16
aam
loope
inc
lret
push
mov
or
aas
aam
inc
mov
sub
jmp
into
pop
adc
push
cmpsb
push
add
cmpsb
aad
or
pop
test
loope
fistps
cli
xor
mov
cwtl
popf
jp
xor
jb
dec
and
int3
mov
jo
fsubr
clc
pop
dec
cltd
das
mov
daa
outsb
gs
inc
int
fs
pop
cmpsl
mov
loop
dec
call
mov
xchg
add
push
ret
inc
adc
test
popf
rorl
xlat
mov
xor
add
mov
cmp
dec
fidivl
jmp
mov
adcb
mov
call
mov
ja
loopne
mov
add
jg
inc
inc
aam
fmul
movsb
push
xchg
dec
mov
bnd
push
mov
pop
add
cmp
mov
adc
push
pop
add
inc
cltd
rorl
inc
ret
pop
pop
push
mov
pushf
push
adc
iret
insl
in
push
outsl
lret
and
xchg
dec
or
in
loopne
xor
pop
xorl
sbb
testl
stos
arpl
push
and
jae
aas
js
dec
and
cld
adc
cmp
shll
test
sbb
arpl
dec
dec
cmc
mov
lahf
sti
lret
xchg
fs
cmp
sbb
loop
cmpsl
cmp
hlt
bound
insl
test
push
mov
xor
cs
sbb
das
cmpsb
xor
adcb
out
cld
sbb
cwtl
mov
sahf
fdiv
or
cmc
scas
push
adc
pop
pop
jb
loope
fimuls
icebp
js
fcmovu
jecxz
sbb
xchg
aam
test
mov
jg
aad
jmp
cwtl
mov
mov
xchg
add
add
ds
dec
aas
ret
and
pusha
subb
jae
movsl
rol
ljmp
or
lods
popf
adc
sub
push
cmp
mov
outsl
mov
rclb
pop
jl
test
inc
and
decb
jecxz
mov
jmp
push
push
dec
leave
push
jge
jns
pop
ret
jo
loop
mov
sub
mov
cmpsb
jmp
shll
call
cmp
addb
mov
xor
pop
xor
mov
mov
push
mov
leave
dec
dec
mov
lock
cltd
ds
xchg
scas
pop
scas
mov
dec
or
mov
pop
cwtl
add
icebp
or
fidivs
fbstp
push
cmp
lods
push
mov
shll
push
fs
fistps
rorl
je
in
dec
mov
pop
lcall
jbe
cli
pop
sbb
add
jmp
shr
mov
pop
ljmp
pusha
das
cs
pop
rcrl
out
adc
pop
sub
scas
mov
pop
leave
movntq
shlb
mov
jns
cmp
popa
adc
jl
xlat
dec
inc
dec
mov
xchg
mov
adcb
popf
ss
xchg
push
into
add
in
movsl
jae
mov
jecxz
and
adc
incl
ja
jns
mov
xchg
cmp
cs
xorb
jnp
mov
cmpb
add
cmc
dec
scas
aaa
ret
pop
dec
adc
add
or
repz
push
add
cmp
test
add
repnz
cmp
ffree
xchg
int3
cli
test
jge
imul
int
add
fwait
in
ljmp
flds
add
test
lret
push
testl
jns
sahf
sub
leave
xchg
test
into
push
adc
out
stos
ja
imul
stos
jns
es
mov
stos
movsb
jmp
mov
cmp
mov
jg
xchg
in
or
dec
icebp
outsl
scas
aaa
xor
ja
roll
push
pusha
adc
rcll
xor
jbe
sub
rorb
imul
mov
hlt
loop
int
pop
cmpb
lods
xlat
out
out
lds
or
mov
ret
jl
and
jmp
xor
pop
dec
pop
testl
mov
dec
repz
cmp
push
inc
jecxz
sbb
inc
push
inc
and
pop
or
repz
sbb
sub
jns
sub
mov
enter
or
lock
mov
lret
lret
mov
sub
sub
mov
inc
sbb
js
out
leave
mov
std
cmp
scas
notb
jecxz
ret
add
xor
mov
shll
test
imul
inc
adc
roll
idivl
inc
sub
xchg
adc
repnz
jg
stos
lret
lock
in
aaa
aam
inc
sub
sbb
sbbl
out
lea
call
scas
or
outsb
cmp
adc
dec
xchg
insl
sub
inc
aam
sbb
popf
xchg
pop
mov
push
xor
or
imul
in
aas
inc
fwait
lds
and
cmpsb
lret
fidivrl
xor
mov
pop
or
push
inc
mov
add
mov
sbbb
subb
or
push
mov
or
add
and
cwtl
push
repz
inc
int
mov
test
cltd
add
sub
loopne
out
les
ja
mov
shlb
xchg
inc
or
cmc
jl
sbb
pop
xlat
inc
mov
loop
enter
orl
nop
int
sbb
xor
mov
fwait
push
mov
movsl
loopne
shr
loope
std
cltd
xor
xchg
in
lds
lea
icebp
imul
aad
stc
sbb
fdivr
xchg
mov
ret
xchg
in
fisttpll
clc
adc
bound
add
movsb
gs
ss
pop
mov
mov
sarb
fistpll
jge
out
es
lods
mov
inc
popf
cmc
mov
xor
dec
cmp
nop
aas
xor
test
out
jae
lods
push
and
inc
popa
inc
nop
push
stc
mov
lcall
jecxz
xchg
xor
mov
ds
clc
stos
mov
faddl
cli
out
pop
mov
testb
xchg
popf
repz
push
es
and
push
out
jo
push
sahf
int3
dec
pop
lods
das
addl
arpl
adc
fs
mov
pop
jle
jg
inc
and
jne
push
mov
push
std
cmp
aas
andb
test
xor
cs
call
in
jns
or
sub
repz
rorb
push
ret
movsb
fidivs
push
js
lds
push
adc
and
and
loope
mov
pop
or
stos
dec
jecxz
cmp
sub
in
sub
stc
arpl
test
or
scas
cmp
mov
mov
push
fsub
mov
adc
xlat
add
sbb
mov
mov
mov
xchg
popa
and
cwtl
shlb
sbb
dec
mov
std
fwait
xchg
sub
icebp
xor
lods
dec
les
cltd
jge
adc
cmpsl
idivl
movsl
cli
jecxz
daa
mov
loopne
pushf
push
push
loope
loope
ljmp
imul
mov
jbe
popf
iret
adc
in
mov
push
pop
rcll
sbb
fadd
das
loopne
adc
pushf
mov
cmc
pop
sub
fidivrl
ret
inc
icebp
gs
mov
es
lods
int
cmp
fcomps
subl
mov
mov
jle
fisubrl
adc
xor
mov
cmpsb
add
mov
out
daa
cmpsl
cmpsb
xchg
xor
lahf
mov
popa
cmp
bound
cwtl
mov
xchg
scas
pop
ja
add
inc
xchg
data16
jg
dec
jecxz
jg
adc
test
enter
je
dec
mov
and
cmp
fsubrs
cmp
pop
jo
jbe
inc
mov
or
enter
jl
loopne
jno
xlat
sbb
sbb
roll
outsb
pop
icebp
xlat
or
xchg
pop
ss
das
add
stos
push
xchg
ficomps
gs
lea
dec
add
test
and
mov
int
pop
jle
mov
rcrb
fdivl
add
loope
test
fistpl
cltd
or
dec
outsl
inc
xor
pop
repnz
es
sub
insl
mov
ljmp
push
push
pop
ljmp
jl
pop
pushf
xlat
stos
or
in
jnp
jle
add
cmp
mov
push
fmul
mov
fstpt
pushf
daa
daa
xchg
xchg
sti
pop
cmp
jmp
ljmp
pop
ja
lahf
mov
push
clc
addr16
sbb
jae
xlat
jbe
jle
dec
rolb
iret
mov
cmp
js
dec
test
xchg
sbb
inc
loope
cmp
fwait
fs
hlt
cmp
int3
and
adc
int
jns
in
lea
mov
cltd
je
jo
mov
in
test
xchg
jle
pop
ret
nop
add
test
pop
outsl
sub
xor
lods
inc
test
outsl
add
mov
mov
dec
lcall
fadds
mov
xchg
cmp
es
fsts
jo
jno
mov
aaa
adc
les
dec
add
jbe
out
xor
adc
mov
or
jl
cmp
adc
dec
loopne
jae
fildll
xlat
push
dec
cmc
sub
in
jg
scas
sub
lods
mov
push
sub
sbb
xlat
or
lcall
lret
into
test
ja
xchg
pop
jge
out
pushf
fidivrl
add
push
dec
push
and
push
mov
mov
pop
cltd
shlb
addb
pop
push
arpl
mov
xchg
add
mov
out
fmulp
inc
aam
or
push
clc
mov
lea
loopne
insl
fnsave
mov
mov
pop
pop
mov
or
sub
pop
subl
add
jmp
int
push
sub
test
orb
adc
pop
jecxz
imul
mov
xor
inc
lock
jecxz
repz
jno
or
xlat
pop
add
xchg
jne
outsl
lret
iret
lahf
mov
mov
fwait
xabort
xchg
jl
rclb
jne
mov
cld
push
sar
subb
sub
sub
fcmovb
ss
push
jmp
xchg
popa
jnp
sbb
mov
adc
fcoms
jnp
test
leave
adc
out
inc
xorl
loopne
pop
cli
inc
in
mov
push
push
inc
adc
xchg
add
das
fnstsw
xor
test
mov
add
ds
rorb
aas
xchg
pop
sub
daa
iret
jo
push
mov
mov
xor
int
into
inc
inc
and
sbb
cltd
jnp
fisubs
out
and
push
sbb
lahf
insl
fmul
fs
in
pop
out
jo
jnp
fwait
lret
pushf
push
mov
cltd
fidivs
mov
mov
lret
js
mov
sbb
fisubs
out
sub
lods
push
ror
sub
cmp
ds
inc
jno
mov
imul
leave
push
rcrb
in
add
aam
push
jbe
negb
inc
gs
xchg
outsb
adc
jmp
insl
into
xchg
scas
inc
pushf
std
mov
pusha
xor
dec
xchg
js
mov
cmpl
cmp
dec
ficoms
jecxz
inc
movsb
arpl
cmp
clc
sbbb
repnz
popa
mov
cmp
pop
arpl
push
ss
cmc
aam
push
mov
orl
imul
sbbb
fidivrl
mov
jae
xchg
je
call
pop
mov
int3
cwtl
jo
stc
in
leave
push
jl
out
add
or
jnp
xor
ret
adc
scas
lods
cs
sbb
mov
add
inc
clc
sbb
push
out
lods
mov
adc
dec
stos
test
mov
fldcw
popa
popf
mov
xchg
pusha
and
stos
jae
dec
popa
xchg
sbb
push
xchg
inc
hlt
xchg
mov
sbb
shll
sbb
add
lret
dec
and
cmp
scas
movd
pop
xchg
xor
or
add
sub
jnp
mov
xor
push
sub
or
cli
aas
mov
fldl
and
lcall
rorb
cwtl
jb
cmp
xchg
jge
lahf
mov
hlt
enter
mov
mov
mov
fisubs
cmp
in
ffreep
push
lcall
mov
mov
push
jl
ret
fsts
pop
pop
fst
inc
xor
push
movsb
sub
lcall
sbb
mov
movsb
les
push
sub
movsb
xchg
fnstsw
jmp
lods
cli
test
sti
roll
push
sub
int
and
mov
jle
sub
inc
jbe
mov
and
aas
std
fwait
out
mov
jmp
cmpsb
mov
push
call
sbb
test
pop
test
push
or
push
jmp
jecxz
xchg
sarl
jmp
loope
mov
loopne
inc
adc
or
testl
push
xor
das
aas
mov
gs
push
jae
pop
add
nop
xchg
push
pop
out
ror
or
mov
and
push
stos
rorb
ja
and
mov
daa
aad
hlt
negb
and
cmc
sbb
mov
fs
ja
jp
jg
sub
lods
aad
insb
shlb
dec
push
jp
adc
cmp
je
xchg
xor
and
out
jno
movsb
jnp
xchg
sbb
sbb
fs
aad
cwtl
out
and
cmp
and
pop
sub
mov
lock
add
xor
sti
mov
in
jg
sbb
call
imul
xor
out
ds
pop
sahf
adc
sub
sti
loopne
jno
outsl
inc
repnz
xchg
lea
les
aad
cltd
pop
pop
popa
push
mov
aas
add
imul
dec
fcoml
pop
addr16
addb
pop
setae
xchg
in
imul
dec
add
dec
mov
xor
cmc
iret
enter
cmp
mov
mov
or
push
push
aad
mov
xchg
push
jns
daa
out
push
mov
cmc
cwtl
mov
lock
test
and
sbbl
xchg
cmpsb
arpl
jo
or
icebp
xor
test
fbld
out
push
jge
cmp
les
out
dec
cmp
bound
loop
pop
fcomi
inc
sbb
push
add
push
xchg
xor
sub
inc
pop
bound
inc
movsl
sbb
cmp
jmp
push
inc
imul
xor
lcall
sti
push
inc
divb
push
sbb
popf
xchg
add
loopne
inc
fnstenv
mov
xchg
dec
xchg
out
dec
sti
xchg
cs
out
dec
dec
pop
push
xor
dec
mov
push
out
test
inc
hlt
in
xor
pop
jmp
lods
cmc
and
dec
or
cmp
and
loope
dec
sti
or
push
add
addr16
fadds
xchg
fcoms
sbb
and
test
test
hlt
adc
push
push
jl
mov
inc
cmpsb
aaa
shl
cmp
popa
ja
dec
or
sub
aas
jmp
push
loopne
lahf
sbb
cli
jne
cmpsb
fnstcw
loop
jae
jge
popf
loope
movsb
popf
jnp
jecxz
std
jmp
mov
cmp
mov
mov
fldl
pop
inc
flds
repnz
inc
xor
in
mov
and
inc
xchg
rcr
movsb
mov
add
push
xor
xchg
sbb
arpl
sub
cmp
jno
mov
jbe
mov
xchg
mov
jb
mov
jbe
clc
aad
aam
int
lods
je
js
stc
sahf
jb
out
out
pop
mov
int
loope
shll
cmp
mov
fmul
stos
mov
fs
cmp
int
mov
shll
imul
inc
jecxz
shl
pop
dec
xor
ljmp
mov
in
pushf
fdivrl
jle
jno
scas
push
and
cmp
mov
inc
je
jns
or
fdiv
outsb
in
push
jo
push
outsb
out
cmp
sahf
lcall
stc
popa
xor
lds
sub
in
xlat
fmull
fstpt
repz
cli
push
cmc
pop
mov
lahf
sub
aas
jnp
loope
mov
or
or
dec
in
es
js
lcall
mov
mov
pop
clc
xchg
vpand
add
fwait
fwait
mov
pop
xor
in
daa
ss
push
std
test
ds
and
popa
ss
mov
int
inc
jle
inc
inc
stos
inc
in
xor
outsl
ret
dec
jg
test
in
dec
pusha
repnz
push
movsb
cmp
ficoms
pop
loopne
lahf
sbb
push
lahf
mov
sub
sub
add
addr16
cmp
lods
mov
push
ret
sahf
fsubrl
dec
rol
int
jp
add
lret
inc
or
in
xor
add
das
mov
adc
pop
stc
mov
and
scas
cmp
mov
scas
sub
divl
setb
sti
mov
ret
test
roll
negl
fidivs
paddsb
or
dec
jnp
dec
sub
loop
enter
and
cmc
insl
inc
xor
test
inc
dec
stc
inc
cltd
add
nop
decl
mov
cmp
sti
inc
sti
pop
cmpsl
sbb
bound
inc
ret
shr
dec
cmp
mov
mov
lret
sbb
mov
out
lcall
jne
mov
push
xchg
mov
inc
sbb
out
xor
pop
insb
pop
mov
in
popa
mov
movsl
cltd
pushf
ret
iret
insb
out
xor
xchg
inc
mov
pop
sub
mov
jb
cmp
xor
mov
lret
aad
add
rcll
stos
xchg
jbe
lds
cwtl
mov
mulb
pop
mov
bnd
push
pop
dec
mov
inc
popf
mov
xchg
adc
adc
mov
movsb
jb
andl
jl
je
aaa
dec
push
cmp
cltd
jb
lods
mov
aad
adc
movsl
jg
pop
pop
dec
lock
das
pushf
fs
pop
dec
push
mov
push
sbb
repnz
fidivrs
movsb
ljmp
insl
cmpsb
or
jl
clc
cltd
add
sub
sub
stos
sti
sbb
insl
rorl
sbb
cmc
lcall
xchg
cs
lods
cmpsl
mov
pop
cmpsl
fsubs
rcl
into
hlt
inc
or
enter
test
ret
sub
pop
push
mov
push
pop
inc
scas
mov
sti
inc
sbb
lcall
mov
adc
push
lahf
sub
rolb
repz
sub
rorb
imul
inc
ja
and
rclb
cmpsb
hlt
xchg
in
scas
stc
ror
xchg
lret
mov
test
in
cmp
add
pop
adc
jp
mov
pop
cwtl
adc
aaa
lea
adcb
fists
push
out
aad
mov
ja
lahf
adc
xchg
dec
lcall
or
in
popf
fsubrs
mov
pop
jae
inc
test
iret
jns
sub
pop
jge
adc
es
mov
lret
imul
inc
add
add
ja
adc
enter
xchg
mov
inc
lock
jp
hlt
std
mov
movsl
out
pop
adc
cmpsb
jne
data16
jg
pop
pop
and
out
mov
jmp
mov
jo
dec
aam
fnstsw
fidivrs
cmp
mov
push
jg
inc
or
shll
movsb
sbb
inc
pop
fdivs
cli
imull
or
jno
add
inc
stc
mov
sbb
pop
cmp
fs
xchg
aam
cmp
data16
pop
and
into
daa
adc
mov
push
push
imul
mov
pop
mov
mov
cwtl
bnd
and
pop
pop
int3
inc
add
insb
fwait
ljmp
cmp
mov
pop
loop
aam
lahf
add
fstpt
mov
sbb
in
fstps
and
imulb
fs
mov
jp
xchg
bound
or
push
mov
sbbb
mov
adc
repz
pop
out
jae
pop
and
cmp
mov
insl
fdivs
push
add
add
and
pop
jb
cmp
notl
movsl
rcrb
jns
lcall
and
add
cli
fwait
mov
test
icebp
mov
sti
mov
cmpb
push
add
xchg
out
pop
mov
cwtl
jp
test
lods
repnz
into
push
adcl
mov
jns
jae
idivb
ficompl
xchg
jne
jle
jbe
call
sbb
xor
cmp
cmp
add
or
lret
pop
leave
mov
nop
gs
jmp
mov
mov
mov
cli
pop
xor
jbe
out
jns
cs
lret
push
int
loope
iret
mov
gs
mov
popf
roll
cmpsl
sub
call
fdivs
aad
xchg
fs
popf
nop
jbe
rcrb
lret
stos
jg
adc
or
add
sbb
fwait
push
filds
stos
xchg
jg
nop
jns
lds
cmp
leave
outsb
add
pop
ret
fldenv
clc
popf
and
inc
dec
call
out
and
xchg
ror
dec
cmp
mov
pop
push
push
rolb
mov
mov
cmp
repz
sbb
enter
add
jg
mov
js
xchg
insl
test
dec
rol
notb
xor
repz
js
dec
xchg
xor
push
sub
lods
or
push
popa
inc
mov
push
out
subb
or
xchg
jmp
std
cmp
nop
ljmp
dec
pop
daa
int
outsl
stos
ljmp
mov
mov
jb
cs
repnz
adc
dec
fmul
addr16
adc
repz
push
pusha
mov
pop
pop
or
xlat
aam
xchg
cli
into
mov
cld
bound
adc
sahf
mov
inc
adcb
push
push
push
div
cld
mov
cmp
xchg
inc
inc
xchg
lds
mov
clc
cmp
dec
push
xchg
outsw
mov
vpcomb
dec
mov
cmpsb
dec
xlat
fdiv
pop
jg
and
daa
sti
mov
and
out
xor
mov
inc
sub
cmp
and
and
mov
in
mov
out
cmpsb
popf
pop
xchg
getsec
adc
add
pusha
std
aam
cli
cwtl
iret
push
mov
call
jnp
xchg
or
push
mull
or
stos
data16
jns
ret
inc
rcrl
shlb
push
fdivrs
insl
cmc
sar
ljmp
inc
mov
shrb
mov
movsl
add
sub
andb
sbb
fdivrl
jmp
dec
and
lea
idivb
mov
ffreep
data16
lock
es
rorb
fildl
pop
mov
push
fbstp
jne
jno
mov
xchg
push
fwait
data16
inc
jne
mov
fidivl
popa
pop
mov
ljmp
push
rorb
es
cmp
cld
inc
sbb
lcall
test
push
mov
add
ret
in
adc
das
jo
adc
cld
xor
loop
inc
orl
imul
cwtl
in
lock
test
cmp
loope
sbb
pop
rol
test
ds
in
jge
or
cwtl
movsb
mov
pop
iret
xor
mulb
xchg
imul
pushw
jmp
rcll
fs
jo
inc
jne
cmc
dec
outsl
xlat
mov
mov
cmpsb
jmp
mov
icebp
and
add
aad
push
xor
sbb
push
bound
lcall
push
or
ret
incl
out
xor
jp
aas
pop
sbb
lahf
and
jae
fimull
mov
and
add
and
cmp
mov
xchg
jle
popf
mov
mov
out
push
mov
lahf
push
xor
popa
mov
pop
pop
roll
xchg
add
mov
insb
cmpsl
mov
int3
xor
cmc
mov
outsb
lret
adc
icebp
pop
sbb
jp
loop
shr
sti
lock
ds
push
nop
cmp
ret
mov
ljmp
add
loopne
outsb
pushf
mov
subb
cmp
sbb
jne
cmp
sub
pop
mov
xchg
add
dec
adc
ljmp
out
push
stos
jecxz
push
push
ret
and
movsl
stos
ret
mov
cmpsl
inc
or
push
rcl
test
cmp
scas
lret
pop
pop
clc
or
or
inc
jmp
pop
jge
add
mov
mov
jns
icebp
cmp
sbb
jg
inc
xchg
fnstcw
aam
jg
jb
fidivrl
outsb
or
ljmp
or
sub
or
xor
scas
cltd
test
popa
jo
aam
repnz
scas
push
inc
jp
cmpsb
xchg
mov
pop
sub
and
mov
or
xchg
mov
push
gs
outsl
mov
sub
ret
mov
lea
and
mov
clc
sbb
dec
jb
sub
xor
cltd
mov
movl
scas
mov
push
sbb
cmp
popa
scas
push
std
mov
mov
xchg
add
aaa
fisubl
fsubrl
xor
xchg
pusha
pop
and
cmp
ss
or
dec
mov
dec
inc
scas
sti
fcompl
xor
lds
js
pop
sub
out
sub
icebp
sti
xchg
lds
fidivrs
push
xchg
out
out
mov
cs
mov
addl
cmp
sbb
cld
fcmovnu
mov
and
out
pop
lds
sbb
cmp
sub
jle
inc
les
adc
inc
pushf
sbb
and
or
ja
adc
ret
jno
scas
jnp
pusha
push
inc
mov
ret
and
lcall
jns
roll
repnz
xor
fdivs
dec
in
or
xlat
cmp
pusha
and
push
in
daa
lcall
sbb
out
pop
out
mov
cmp
mov
or
insl
loopne
je
adc
mov
imulb
mov
movsl
fcompl
shlb
jns
push
out
cmpsb
add
outsl
mov
sub
sub
adc
daa
aad
icebp
push
lea
sbb
cltd
mov
or
lods
imul
fs
arpl
rcrb
pushf
sub
jge
scas
xor
dec
pop
fucomi
shr
call
loop
adc
pop
sub
adc
dec
jne
in
mov
xchg
fnstcw
jo
sub
gs
in
aas
out
testl
in
sahf
push
sbb
jae
xor
ja
sub
sub
xchg
arpl
pop
pop
pop
sub
sbbb
hlt
inc
lret
adc
xlat
stc
cmp
cwtl
int
filds
repnz
sub
sbb
aas
mov
cwtl
shrb
es
pushf
jnp
dec
or
cmp
outsl
mov
inc
lret
mov
sub
adc
and
sbb
jno
out
jle
scas
adc
xchg
inc
int
cmp
popf
mov
icebp
mov
xchg
push
xor
pop
scas
das
xchg
sub
or
push
iret
lret
or
inc
insl
lcall
mov
lea
jne
fsubl
sub
int
lcall
das
popa
add
pop
js
or
les
fdivrl
pop
sbbb
gs
add
jb
aam
cmpsl
dec
inc
lret
lods
inc
mov
push
std
aas
movl
mov
subb
sbb
pop
fidivl
cld
pop
ds
je
mov
and
dec
hlt
sub
inc
lds
adc
gs
lcall
jo
jae
call
test
xchg
dec
xchg
push
cmpb
popf
lea
ds
pop
addr16
sub
jmp
in
pushf
and
mov
sub
cmpsl
dec
mov
rclb
sbb
mov
outsb
arpl
inc
dec
add
mov
out
xchg
daa
cwtl
in
jne
aas
xchg
xchg
xchg
out
repz
add
sbb
insl
data16
xchg
mov
movsl
pusha
jnp
out
push
dec
enter
dec
xchg
and
xor
or
popf
popf
jno
clc
push
dec
rep
lret
mov
loope
push
repnz
push
jle
cmpsb
xor
lret
adc
jo
sbb
sub
xchg
jg
js
in
jl
pop
sub
ficomps
pop
jae
roll
jecxz
or
lds
push
adc
add
sub
sbb
stos
inc
jnp
push
lret
nop
insl
inc
pop
inc
lea
pusha
movsb
mov
adc
and
les
in
pusha
pusha
mov
shr
push
push
out
pop
sahf
scas
add
add
je
mov
ret
xor
or
push
das
movsl
sub
shrl
int3
test
sarb
cmpsl
sbb
cmc
jp
or
idivl
fwait
lds
imul
pop
dec
popa
push
adc
sbb
lock
add
jmp
in
daa
mov
push
leave
xor
mov
nop
push
js
std
fs
and
icebp
repnz
das
std
adc
repnz
inc
adc
and
mov
out
push
inc
xchg
fyl2xp1
mov
cwtl
mov
fwait
clc
lret
insl
out
xlat
incb
cltd
add
inc
add
ss
into
jmp
insl
xor
bound
jp
js
outsb
and
adc
sti
push
add
mov
or
mov
and
js
daa
add
cmp
mov
add
xor
dec
hlt
inc
fchs
sub
pop
or
mov
mov
mov
jge
mov
mov
xchg
sbb
popa
push
dec
xor
pop
mov
lods
ljmp
push
mov
mov
sub
movsl
inc
ret
mov
pusha
aaa
add
inc
ffree
js
jns
ret
cmp
xor
mov
lret
push
push
cs
out
cmp
pop
nop
or
ds
fiaddl
push
sbb
mov
xchg
fcompl
sub
or
out
out
inc
subl
cld
or
fiaddl
popa
sub
cltd
adc
ficoms
std
stos
gs
insb
jae
mov
mov
jne
mov
jno
xor
sarb
bound
leave
push
lods
mov
mov
imul
and
popf
mov
jno
notl
xor
fistpll
mov
enter
rcll
mov
nop
adc
divl
mov
fmul
push
xchg
mov
sahf
cmpsb
lea
insb
push
sub
mov
xchg
out
push
nop
les
mov
mov
push
insl
push
es
push
testb
mov
jg
lret
mov
fcoms
sub
fdivs
xchg
lds
test
add
pop
enter
call
sbb
sbb
das
sub
xor
nop
mov
pushf
das
aad
sbb
scas
and
in
xor
and
int
popf
mov
add
fucomip
hlt
add
xlat
sbb
sbb
jmp
out
cli
push
add
mov
scas
fidivs
lahf
clc
pop
mov
arpl
cli
dec
sub
mov
cwtl
dec
mov
mov
int
test
mov
pop
and
add
xchg
mov
leave
and
mov
or
icebp
shlb
dec
jbe
imul
test
test
and
stc
imul
adc
out
add
shll
cmp
mov
enter
add
or
jmp
lods
sub
out
ss
ret
mov
dec
movsl
addr16
push
xor
mov
mov
inc
inc
dec
push
push
inc
insb
popf
xchg
lea
xchg
xor
xchg
andl
lret
shl
js
loop
push
mov
xor
imul
xlat
mov
faddl
dec
sbb
add
mov
xor
cmpsl
bnd
push
or
or
lods
cmc
daa
jl
lock
pop
sbb
fwait
stc
fstpl
fwait
mull
das
cmp
fbstp
aaa
xchg
mov
xor
or
xchg
mov
cmpsl
lret
xlat
push
and
or
dec
or
mov
fs
adc
dec
lret
insb
mov
pop
insl
sub
mov
stos
mov
push
imul
and
ljmp
je
dec
inc
idivl
out
mov
xchg
adc
sti
lods
ret
ds
movsw
and
rorb
push
push
incb
ds
mov
add
aas
out
mov
ds
push
shrb
dec
pusha
cli
mov
imul
dec
xchg
test
movsb
loopne
push
inc
mov
jo
mov
and
mov
add
daa
in
add
mov
push
fwait
popf
pop
pop
dec
fsubl
mov
jecxz
loopne
adc
je
add
xchg
and
mov
pop
pop
sub
imul
push
dec
jp
mov
sbb
faddp
rol
inc
push
inc
arpl
aas
repz
cmp
mov
mov
insb
dec
out
outsb
jo
aam
pop
ljmp
or
test
fnstenv
dec
add
insb
mov
insl
fwait
insb
cltd
pop
xlat
mov
pushf
inc
xchg
sub
std
fistpl
push
or
lock
mov
outsb
ret
addb
mov
in
add
and
jle
sbb
ds
test
push
addl
pop
xchg
scas
lretw
fdivr
jp
rcrl
push
out
in
into
pushf
sbb
aad
in
jle
push
loop
mov
cmp
aas
test
dec
add
mov
push
adc
gs
ja
mov
es
cmpl
pop
xchg
movsl
adc
mov
lock
aas
ja
dec
aas
aaa
pop
add
xor
gs
sub
inc
es
loope
sub
push
mov
gs
jecxz
ljmp
mov
xor
call
stc
lea
out
push
jg
mov
daa
ds
fiadds
lock
std
mov
fldcw
add
lahf
or
shll
and
ss
jns
and
adc
and
add
xchg
mov
ficomps
icebp
jp
xchg
cmp
pop
rcrb
bound
outsl
jmp
xchg
std
inc
xchg
and
sub
sbb
mov
call
push
aam
rolb
xor
outsl
repz
mov
xor
les
mov
xchg
scas
sub
push
sahf
xchg
repz
dec
lcall
push
pushf
push
loopne
dec
test
mov
cwtl
cli
lods
xchg
lods
cmp
aad
mov
mov
pop
fiaddl
stos
faddl
jbe
pop
leave
mov
ja
jae
nop
sbb
lds
in
jo
in
ljmp
in
stos
repz
rcrb
mov
jge
fdivl
fidivrl
inc
cmpb
aad
das
or
pop
sbb
pop
out
sbb
sub
add
lcall
mov
sbb
jle
and
pop
add
cmp
mov
or
xchg
test
adc
in
dec
xor
jmp
or
ss
mov
mov
sub
or
jae
add
test
pop
ss
out
iret
push
iret
rorb
inc
adc
push
iret
mov
out
push
test
push
fs
xor
les
ja
jae
jmp
jno
js
aaa
das
sarl
sbb
or
mov
ret
test
mov
daa
adc
cmp
aas
xor
xchg
push
stos
outsl
or
sbb
push
addr16
cmp
add
xor
lea
in
mov
int3
stc
dec
out
mov
xor
out
xchg
sahf
pop
push
cwtl
or
es
sahf
pop
hlt
sti
inc
jecxz
jnp
cmpsl
orl
jae
stc
lahf
stc
testl
bound
and
sbb
mov
push
dec
adc
jle
cld
inc
add
aaa
mov
adc
mov
movsl
cld
ljmp
xchg
inc
push
dec
dec
dec
push
jmp
or
inc
mov
fdivl
and
cmp
adc
fbld
outsb
outsl
adc
or
xchg
imul
dec
enter
xor
adc
imul
sbb
stos
fists
bnd
rclb
push
xor
aas
push
in
mov
and
cmpsb
or
aaa
in
in
cld
push
dec
sbb
into
loop
add
repz
xchg
sub
data16
mov
pushf
jnp
shrl
sub
aas
mov
in
push
sub
icebp
xlat
hlt
fimull
shl
mov
bound
inc
xchg
outsl
int
cmp
xchg
cmpsb
sub
das
mov
movsb
outsb
popa
jae
cmp
jecxz
rep
add
and
outsb
js
cwtl
inc
mov
pop
or
jbe
mov
push
out
jecxz
in
loope
and
mov
jl
clc
push
cmp
sub
js
loopne
dec
pusha
sub
xlat
insb
push
add
pushf
in
or
addr16
xchg
outsl
xchg
and
hlt
psubd
dec
adc
sub
push
and
movsl
pusha
call
xchg
fdivrl
jae
mov
pop
adc
rorl
add
insl
mov
add
cmp
sarb
hlt
jle
mov
mov
test
or
push
rcr
sahf
inc
int
sub
movsb
add
test
sub
inc
ret
mov
adc
cmp
out
popa
sub
fwait
pop
sbb
xor
aaa
jne
lods
rcrl
xchg
stos
inc
sub
rol
sahf
test
and
sub
push
imul
test
rorl
or
and
daa
pop
cmp
call
adc
out
xor
das
aas
js
xchg
cmp
inc
xchg
dec
jne
imul
mov
push
fldt
movsl
jg
adc
sub
adc
aad
jg
jns
or
jb
mov
loopne
lods
xchg
or
push
test
sub
rcr
lds
cmp
das
rcll
pop
or
sarb
ds
jecxz
inc
in
jae
stos
repnz
data16
sub
mov
xor
imul
rcrb
adc
movl
out
add
movsl
add
fs
jns
es
jb
cmp
mov
aaa
ja
push
lods
in
jbe
pop
xlat
cmp
dec
pop
addr16
fs
push
mov
pop
ret
and
into
sub
dec
les
adc
iret
push
push
movsb
aaa
or
inc
cli
mov
es
loope
lock
push
rcll
mov
repz
push
pop
int
arpl
or
ss
ret
pop
cmpsl
and
mov
mov
cld
inc
scas
hlt
and
xorb
mov
or
iret
xchg
cmpsl
xchg
and
and
iret
xchg
dec
xchg
xlat
imul
or
push
aaa
xor
push
or
or
ret
mov
dec
into
mov
dec
jle
movsl
test
ret
adc
nop
lcall
enter
add
pop
movsb
jle
dec
add
add
sub
arpl
mov
push
cmp
or
sahf
mov
mov
in
aaa
mov
je
push
or
sub
push
mov
xchg
clc
mov
lea
out
inc
push
nop
fnsave
mov
cld
sbb
and
jns
or
xor
idivb
jo
ret
dec
cmp
cmpsb
jp
and
sahf
insb
insb
mov
sub
jmp
cmpsl
insl
add
and
cmp
adc
and
push
pop
test
xor
rcrb
fsubrs
dec
jmp
add
jle
pop
mov
mov
inc
inc
testb
jl
es
sbb
lret
pop
adc
or
movsb
cmp
mov
dec
popf
js
jnp
cmp
sub
clc
or
push
push
arpl
or
test
push
push
and
repz
pop
xchg
mov
jl
hlt
idivb
loop
mov
or
std
adc
icebp
xor
dec
mov
mov
cmp
jnp
lahf
movsl
cmpb
pop
mov
in
sub
push
xor
mov
pop
outsl
stc
mov
fs
int3
bound
movb
or
xor
repz
out
push
xchg
cli
xorl
mov
or
cmp
xchg
icebp
hlt
mov
push
cld
fwait
jns
cmp
push
xchg
nop
pop
shlb
add
clc
pop
xchg
pop
or
cmc
cmp
mov
mov
mov
rorl
mov
lds
adc
mov
pop
cmc
inc
push
jl
fs
pusha
xchg
cmp
mov
ds
lods
in
aaa
pop
lahf
mov
iret
push
jb
cmp
fsubrl
rclb
in
das
inc
jae
adc
bound
push
cmp
arpl
cs
and
and
cltd
push
jle
daa
pop
je
cmp
lock
out
jno
push
xchg
insl
cmp
jle
cmp
out
pop
mov
repz
cld
scas
sbb
cwtl
pop
dec
jnp
insl
fcmovb
pop
xor
push
mov
mov
sub
fbld
or
inc
popf
inc
cmp
jbe
stc
inc
inc
sub
loopne
fnstsw
push
mov
insl
cli
out
mov
push
fstps
dec
mov
mov
inc
cwtl
outsb
loopne
xor
add
adc
ljmp
lds
arpl
cmp
insl
aas
jg
mov
loop
adc
andb
daa
mov
jnp
movl
pop
fsubrs
sarl
js
push
aas
push
inc
ds
sarb
int
mov
xlat
mov
movsb
loop
aad
inc
add
mov
sbb
cld
scas
sti
rcr
xchg
rcrl
in
mov
out
push
adc
push
lahf
lcall
add
in
pop
ds
jg
loop
cli
xchg
jns
sbb
push
fwait
xor
in
jns
push
rolb
jmp
and
push
push
leave
ljmp
sti
xor
or
pop
in
push
jns
cwtl
fwait
inc
popf
or
mov
popa
popa
fucomp
shr
inc
mov
out
inc
insb
push
cli
pop
mov
fucomip
dec
xor
std
dec
and
scas
in
test
fmul
repz
or
mov
mov
popa
rorl
int3
dec
fnstsw
inc
loop
cmp
in
ret
push
jb
xchg
jle
dec
adc
cmpsl
sbb
and
fcompl
xchg
roll
mov
add
sub
inc
data16
stos
notb
orb
sub
push
inc
pop
ja
or
push
or
dec
scas
lahf
push
bnd
xchg
cmp
addb
imul
lcall
shll
aaa
pop
xor
jg
clc
shl
jo
int
push
data16
jle
loop
shll
mov
icebp
sti
jns
hlt
jo
xor
pushf
pop
mov
gs
pop
pushf
xchg
insl
xlat
mov
pop
outsl
in
push
stos
pop
jbe
fisttps
outsb
insb
mov
in
mov
pop
lds
mov
out
adc
aas
rorb
inc
leave
fdivl
mov
stos
pushf
cld
fcomip
cmp
movntps
loope
sbb
and
arpl
iret
ret
imul
inc
testb
iret
sbb
dec
jl
cmp
stos
push
inc
pusha
lods
push
js
test
aam
out
repnz
popf
pop
adc
sbb
inc
xor
aas
fsubs
push
jecxz
icebp
sbb
lahf
mov
mov
mov
lcall
push
sbb
mov
xchg
das
dec
mov
in
outsb
daa
jle
jne
mov
inc
aam
mov
imul
push
and
add
fwait
mov
lcall
lahf
aaa
imul
js
mov
mov
popa
xor
movb
stc
mov
push
mov
outsb
pop
popf
xor
mov
dec
cmp
in
inc
adc
subl
mov
mov
cmpl
adc
les
sbbl
lods
inc
cltd
adc
xchg
push
adc
dec
jno
cmc
movsl
ja
test
adc
mov
jb
pop
jnp
or
dec
inc
sbb
iret
cmp
add
mov
aaa
sahf
ret
pop
and
mov
ss
inc
out
cmp
mov
pop
outsl
pop
xchg
ss
das
notb
jns
adc
lret
out
mov
ret
stc
data16
mov
jl
lahf
and
cmp
inc
cli
push
sub
lahf
xchg
sbb
mov
iret
dec
stos
pop
daa
sti
fsubl
das
icebp
imul
shll
cmp
jne
fnsetpm(287
fdivp
imul
sbb
outsl
fisubrs
xchg
cmc
test
mov
pusha
fildll
xor
sub
in
xchg
mov
sub
cmp
or
jne
stc
adc
inc
cmp
add
imul
xchg
iret
aaa
insl
repnz
push
adc
lods
or
mov
cmp
lret
adc
fs
jne
mov
cmc
and
frstor
cwtl
nop
jle
fstpt
push
mov
xor
sub
es
lret
in
out
push
adcb
mov
jmp
addb
push
shlb
add
fs
cmpsl
aaa
lds
cmp
adc
push
sub
outsb
mov
lds
popa
mov
sbb
insl
or
xor
stos
mov
xlat
sbb
lds
push
int3
add
xchg
and
or
cmpsb
repnz
out
sub
call
ljmp
jno
xchg
sbb
mov
add
mov
jne
xchg
cld
stos
lret
fs
dec
popa
call
aam
sub
lahf
mov
std
mov
xchg
push
fildl
adc
xchg
adc
ja
icebp
mov
jo
push
dec
xchg
pushf
in
rclb
movsl
dec
jp
rcrl
push
or
fstpt
sti
mov
in
xor
sahf
data16
sbb
stos
scas
pop
pop
jge
loope
add
jo
xchg
je
inc
int3
cmp
jg
inc
insb
pop
rclb
dec
mov
fdivrl
xchg
push
ficompl
pop
sub
loopne,pn
leave
popa
or
enter
push
in
mov
add
jnp
inc
xor
aaa
mov
sahf
pushf
inc
jno
jmp
xchg
push
bnd
pop
jae
xor
loop
push
dec
jno
test
xchg
mov
xor
mov
ret
cmpb
cwtl
adc
lock
das
push
sbb
jnp
sbbl
or
aas
scas
out
push
addl
cmovs
outsb
dec
outsl
cld
dec
jle
fstpl
dec
std
add
orl
xor
inc
xor
and
push
cmp
adc
push
dec
jmp
and
sub
mov
inc
dec
andl
jns
loope
sub
dec
dec
popa
mov
repz
xor
shlb
insl
lea
or
jne
push
arpl
xor
pushf
mov
xor
clc
test
lret
add
bswap
adc
sbb
xchg
jb
dec
call
sub
pop
mov
iret
push
std
jp
dec
dec
push
adc
jbe
jo
push
insl
lret
cmovl
std
aas
jle
int3
adc
mov
pop
fwait
cmpsl
and
gs
mov
pop
dec
negl
mov
push
sbb
push
jge
mov
sbb
sbb
movsl
or
rorl
divb
mov
aam
mov
push
outsl
data16
inc
test
cwtl
adcl
movsl
in
xchg
pop
leave
push
pop
loope
jecxz
aad
pop
sbb
daa
push
adc
pop
mov
add
mov
movsb
sub
and
push
mov
mov
xchg
or
daa
xchg
out
sbb
icebp
lea
and
out
es
cmp
push
pusha
push
lcall
imul
mov
sahf
pop
add
fisubrs
push
pop
scas
inc
cmp
leave
shl
pusha
mov
jl
sahf
pop
aad
in
jmp
in
mov
cmp
add
mov
cmpsl
adc
xor
icebp
ss
jne
dec
sub
aas
in
outsl
xor
repz
mov
mov
jae
cld
cmp
cmp
adc
in
in
in
lds
int
adc
imul
mov
adc
or
sub
dec
and
add
push
les
outsb
jo
pop
ret
mov
insl
rcr
pop
sub
or
fsubl
ss
pop
jbe
pop
mov
lahf
add
adc
push
cmpsl
incb
adc
cmp
outsb
sub
aam
push
out
mov
mov
pushf
subb
lock
sub
testb
scas
mov
xchg
addr16
fisubl
mov
jecxz
daa
shll
leave
mov
xchg
arpl
or
cld
lcall
rorl
sbb
out
cmc
xchg
loop
and
push
jne
mov
sbb
add
sub
inc
addl
icebp
dec
int
rorl
mov
add
icebp
sub
push
dec
mov
addl
xchg
icebp
push
fistpll
xor
xor
into
cmp
fucomp
mov
ret
mov
sub
mov
fidivl
lret
subb
subl
mov
aas
adc
bound
int
sbb
cmpb
cmp
adc
loopne
cmpsb
nop
call
add
lret
test
imulb
call
push
inc
pop
add
lods
inc
mov
sub
into
ja
dec
add
repnz
rcrl
sbb
data16
jecxz
jnp
xchg
sbb
into
push
in
sti
jge
shl
loope
scas
js
hlt
dec
jecxz
sub
mov
insb
enter
in
out
fcomi
hlt
out
jo
pop
xchg
je
pop
repnz
mov
pop
aam
add
int
dec
xorb
cwtl
and
xor
xchg
inc
mov
push
inc
xchg
pop
test
lods
dec
fcomip
push
enter
push
nop
push
mov
add
int
lret
cmp
arpl
nop
mov
pop
test
jmp
mov
out
mov
pusha
test
adc
jo
std
sbb
out
mov
xchg
push
push
cmpsb
sbb
cmpsl
repnz
sbb
clc
mov
adc
push
jl
loope
pop
xor
lds
fcoml
sbb
jnp
scas
jg
cli
insl
xchg
in
mov
hlt
mov
cltd
inc
pop
xchg
sub
mov
lods
push
imul
mov
fbld
xor
out
aas
rorb
addr16
xchg
jp
jl
inc
push
fbstp
aaa
mov
cmp
std
scas
arpl
adc
xor
inc
je
in
push
jae
inc
fmull
lcall
cmpsl
popa
xchg
mov
movsl
in
cmp
fwait
and
mov
cmp
sbb
jne
cs
xor
mov
popa
ja
push
xchg
in
jno
lahf
fldcw
pop
push
stc
jg
and
jo
cwtl
stc
push
jne
add
cmpsb
or
dec
mov
in
fiaddl
dec
pop
sbb
push
xchg
hlt
pop
nop
xchg
pop
adc
imul
cmc
std
sti
mov
and
jp
mov
mov
mov
les
push
movsl
inc
xchg
in
jb
int3
hlt
div
cmc
mov
ja
xchg
mov
push
js
ffreep
dec
mov
push
std
mov
dec
xchg
or
sarl
sub
dec
fnsave
sub
push
pop
or
inc
daa
sbb
pushf
adc
xor
lret
inc
push
pop
sbb
rorl
inc
fnstsw
sbb
add
repnz
pop
cli
addr16
test
xor
ret
or
int
fidivl
pop
dec
inc
and
xor
fldenv
add
ljmp
outsl
sbb
mov
outsl
mov
pop
cmpb
mov
out
dec
pop
je,pt
mov
add
test
out
xor
sbb
nop
pop
ss
sbb
dec
clc
inc
mov
repz
or
movsb
sub
sub
fiadds
pushw
mov
add
inc
cmpsl
shlb
mov
jbe
data16
int
arpl
add
push
fsts
into
adc
mov
lcall
jge
xor
or
imul
pop
jge
adc
loopne
out
out
cmp
repz
outsb
repnz
imul
pushf
lret
mov
out
xor
xchg
push
jbe
push
lds
shrb
int3
mov
and
lahf
push
mov
outsb
ss
cmp
test
mov
jmp
dec
mov
push
leave
lea
fsts
cwtl
adc
or
hlt
les
andl
popa
ss
push
add
stos
or
stos
sbb
rcrb
cmp
es
sbb
jae
out
into
pop
adc
cmp
xchg
hlt
xor
in
stos
and
into
loope
stos
adc
nop
outsb
fwait
mov
std
leave
loop
call
ret
cmp
cmp
sbb
jg
movsl
test
jbe
xor
mov
lahf
dec
out
fwait
push
xchg
lret
inc
outsb
inc
cli
jg
aam
je
push
ret
add
sbb
sbb
xorl
std
push
mov
jmp
aas
fistpl
test
xlat
pop
lods
mov
xchg
or
adc
xchg
or
fdiv
jle
sbb
sahf
pop
push
jbe
or
jnp
inc
add
popa
cli
outsb
adc
call
xchg
int
frstor
sub
or
aam
pop
inc
jecxz
add
sub
mov
cmpsb
test
loop
mov
push
mov
bound
out
push
in
mov
cwtl
mov
mov
pop
and
aas
rol
adc
xchg
int
push
sbb
mov
pop
mov
cmc
bound
pop
adc
out
jae
loopne
sub
xor
outsl
cld
loop
fwait
adc
shufps
scas
outsl
jge
call
pop
mov
lret
push
imul
and
inc
xor
jbe
loope
enter
xlat
jae
mov
pop
push
into
ds
jmp
xchg
sbb
inc
or
scas
lods
adc
push
out
lods
jle
cmp
jle
push
jno
xchg
inc
gs
dec
xor
out
dec
movsb
out
or
js
aad
and
in
ret
and
mov
dec
add
jo
cmp
movsb
mov
enter
mov
loopne
add
mov
fs
je
daa
rcr
pop
popf
xchg
pop
xchg
cli
adc
mov
dec
movsl
divb
into
std
dec
test
repnz
mov
add
xchg
push
jbe
mov
mov
fiaddl
bound
hlt
adcl
mov
push
popa
inc
mov
cli
outsl
push
mov
imul
pop
pop
imul
mov
and
fwait
mov
imul
clc
add
inc
or
pop
push
xchg
and
push
fcoml
std
rorb
in
mov
scas
mov
scas
jo
mov
mov
loope
cmc
rcr
jmp
adc
mov
pop
xor
mov
add
mov
sbb
mov
xlat
mov
adcb
sbb
imul
xor
xlat
aaa
adc
test
or
imul
rcrb
mov
out
les
mov
pop
sub
loop
mov
fisubrs
cmp
in
inc
push
cmc
sbb
jg
out
mov
popf
andb
lahf
add
jle
aam
push
fimuls
cmpsl
inc
cmp
icebp
mov
or
xor
or
dec
mov
xchg
sarl
mov
loopne
cmp
xor
pusha
js
inc
and
xchg
pop
mov
imul
cs
in
fisubrl
idiv
test
movsb
daa
xlat
xchg
shll
jne
cmp
xchg
push
test
enter
imul
push
push
gs
inc
push
lods
fidivs
adc
jl
pop
pushf
push
mov
movlps
jp
jns
fnstsw
mov
jns
sub
scas
pop
in
xchg
or
ret
mov
pop
and
hlt
adc
inc
icebp
dec
dec
mov
orl
lahf
inc
nop
mov
dec
imul
inc
mov
mov
lock
and
ss
pop
aas
mov
stc
mov
inc
sub
out
dec
mov
xchg
inc
fwait
pop
dec
insl
push
adc
push
jp
xor
xlat
xor
push
cwtl
jp
push
arpl
aaa
outsl
fsub
push
in
jg
adc
pop
dec
and
loop
sbb
stos
mov
jmp
adc
jns
jl
test
xor
jle
sbb
xor
adc
pop
imul
es
mov
or
push
jae
sahf
addr16
sub
pop
sbb
jno
inc
xchg
sbb
cmp
ss
insl
add
lock
push
mov
xchg
sub
mov
pop
repz
aaa
inc
adc
popf
cmpsb
xlat
roll
mov
mov
in
xorl
adc
mov
test
jne
or
push
push
mov
cmp
outsl
push
mov
dec
shlb
cmpsb
jl
cwtl
cmp
dec
mov
jge
or
imul
cmp
mov
sbb
insb
mov
xchg
mov
mov
push
dec
lock
jg
xor
dec
cltd
mov
push
jmp
sub
lret
les
mov
lds
cmpsl
jmp
sahf
lods
jl
dec
mov
sub
sarl
mov
in
shrl
mov
outsb
in
pop
dec
add
jns
loop
stos
xchg
inc
out
xchg
jge
loop
push
adc
bound
adc
call
sub
dec
sbb
pop
lret
je
in
jl
rorb
inc
xchg
lea
xor
jg
pop
je
mov
cmpsl
dec
or
sbb
ror
mov
jns
orl
sbb
jns
and
dec
out
or
cmp
loope
sbb
mov
in
mov
mov
loopne
int3
aaa
pusha
cs
push
mov
inc
stos
inc
jle,pn
popf
call
add
or
sub
push
jge
dec
or
pop
in
idivb
mov
testb
rorl
scas
mov
sub
push
cltd
stos
push
mov
cmp
fldenv
mov
push
push
and
cmp
mov
fs
mov
std
lock
jae
incl
mov
popa
pop
mov
xchg
popf
imul
out
sahf
and
mov
adc
enter
fistl
js
shl
push
loope
ret
mov
imul
inc
xchg
cwtl
sub
cltd
cmp
dec
mov
push
sahf
push
mov
push
xchg
cmp
jnp
lret
pop
aas
jbe
push
xor
shrb
adc
mov
in
insb
and
jmp
jmp
sub
inc
popa
hlt
and
add
cmp
jl
fsubl
jns
mov
scas
dec
or
sarb
jg
adc
arpl
popf
adc
push
psubq
sbb
leave
xchg
push
int
pop
and
gs
mov
adc
dec
push
cmp
pop
lcall
mov
pop
ja
and
sub
inc
data16
jmp
adcl
leave
push
mov
push
out
in
jbe
inc
dec
gs
push
pop
jnp
and
inc
or
inc
mov
dec
cld
mov
or
adc
xchg
rcrl
int3
call
in
push
into
fs
cmpb
sbb
daa
repz
test
and
or
shrb
inc
sti
inc
and
aam
jae
fimuls
imul
lahf
lret
call
in
stc
push
fimuls
lock
mov
cmpsl
jl
inc
call
hlt
jo
add
jle
jo
ja
aaa
dec
add
in
and
inc
xlat
mov
pop
in
pushf
xor
scas
mov
push
notb
jl
jns
gs
js
pushf
xor
callw
das
jmp
and
pop
xor
lcall
sbb
adc
loope
lahf
lods
nop
or
enter
push
shl
repnz
movsb
enter
adc
mov
les
daa
jnp
push
xorl
sbb
jge
jo
push
js
adc
mov
fldcw
orb
jg
aad
into
and
aam
sbb
sbb
push
xchg
nop
loopne
push
push
mov
xchg
loop
das
xchg
cmpsb
pop
es
mov
into
iret
sub
arpl
sarb
fs
dec
lods
adc
nop
mov
add
sbb
test
js
mov
mov
mov
test
fwait
or
mov
or
icebp
mov
add
repnz
sub
and
cld
test
jp
jb
ja
shll
cmp
mov
test
jno
aam
popf
push
add
repnz
fidivl
add
pop
adc
pusha
sub
pushl
pop
std
in
pop
dec
cs
movsl
jmp
xor
lret
cmp
adc
jg
aas
or
mov
and
add
pushf
or
jo
xchg
adc
test
into
daa
out
jnp
inc
leave
mov
arpl
push
lods
xchg
arpl
jecxz
inc
test
inc
scas
dec
jmp
jne
cmp
sbb
sbb
shlb
add
xor
pop
cmp
and
jl
nop
shrl
cmp
push
jbe
xor
mov
lret
sbb
xor
xor
adc
jg
or
es
sub
xorl
jo
sahf
inc
ljmp
add
into
fcompl
repnz
xchg
mov
xlat
xlat
cmp
cmp
mov
mov
inc
mov
sbb
aad
cmp
push
pushf
pop
adc
push
push
mov
mov
movsl
lea
aas
repnz
lahf
insb
push
loope
inc
out
frstor
dec
shll
icebp
xchg
cmpsl
add
loopne
mov
lock
cmc
sti
mov
dec
movsb
or
xchg
xchg
adc
scas
in
sub
xor
scas
inc
mov
fmulp
mov
repnz
jg
neg
aad
push
mov
fcmovb
xchg
inc
lock
push
inc
mov
xchg
iret
and
jle
leave
or
shrb
xchg
mov
jp
jl
btc
stc
rcrb
sub
sub
aam
pop
mov
pop
into
imul
and
sbb
in
cmp
sub
dec
mov
loopne
and
pop
adc
mov
push
sub
cmpb
sbb
std
addl
cwtl
imul
orb
cli
xchg
int
mov
lods
mov
test
mov
add
movsb
call
movsl
ljmp
or
lcall
mov
das
lahf
test
arpl
cli
dec
jg
fists
cld
pop
jb
subl
mov
insl
inc
jp
leave
mov
cmp
imul
adc
push
sbb
xchg
arpl
ffreep
clc
seta
jo
in
push
jg
dec
inc
nop
mov
sbb
arpl
outsb
jmp
sub
push
cmpsb
mov
lea
push
lcall
or
pop
add
xchg
mov
repz
clc
push
cmp
test
lds
adc
pop
and
push
mov
jb
push
addr16
mov
movl
inc
and
ds
push
test
insb
je
sarb
mov
sbb
dec
out
movsb
cmp
adc
loope
int3
mov
das
sbb
addr16
cmp
mov
or
popf
mov
hlt
enter
ficoms
ret
test
lcall
aam
es
jg
mov
jmp
ret
pop
add
shll
lds
popa
out
pop
mov
ljmp
add
lods
cmpb
lods
mov
push
cmp
mov
xchg
cmp
aam
sub
lret
lds
fisttps
mov
mov
pop
push
mov
xchg
and
pop
push
jmp
or
adc
adc
pop
enter
push
jge
movsl
lret
push
adc
xchg
adc
fwait
cmovbe
leave
xchg
addr16
mov
add
add
and
addr16
scas
or
dec
jecxz
jo
pop
mov
jno
dec
lret
pop
xchg
adc
xor
pop
fwait
inc
test
enter
ds
and
into
imul
adc
xchg
in
sti
test
push
xchg
fldt
scas
cmpsl
testl
mov
pop
push
dec
inc
pop
shlb
loopne
popf
sub
pop
adc
jns
sub
dec
inc
mov
mov
popf
jne
pop
and
sbb
adc
test
ret
call
push
mov
xchg
fidivrs
stos
sub
mov
popf
mov
lret
push
test
sbb
fcomi
cli
lret
fdivrl
dec
daa
push
fisttps
aam
add
cs
pop
std
testl
sub
mov
rcr
xor
cmc
push
mov
shl
jle
lcall
push
test
push
adc
xor
repnz
push
mov
adc
enter
lods
mov
out
add
jmp
pop
xor
xchg
jge
mov
test
add
mov
push
sbb
leave
add
cmp
pop
pop
jecxz
mov
sbb
lret
sub
clc
cmp
push
pop
pop
mov
push
mov
or
mov
js
test
inc
mul
sbb
or
jl
jl
out
push
lahf
push
sbb
test
mov
push
mov
in
cmp
dec
mov
and
jmp
mov
fidivrs
mov
imul
ss
dec
and
dec
clc
arpl
sbb
sub
in
mov
outsb
pop
dec
mov
nop/reserved
fwait
and
stc
jo
loope
int3
mov
mov
add
sub
xor
fistpll
aas
dec
lods
cli
int
gs
mov
aad
imul
leave
out
pushf
movsl
andl
orl
enter
and
stc
or
lods
popa
shlb
xor
jmp
out
sarb
push
push
push
add
and
inc
mov
fwait
mov
outsl
stos
lahf
pop
xor
lock
enter
mov
shlb
sub
daa
loopne
mov
jne
pop
mov
je
jo
aaa
add
in
aad
pop
xor
and
aas
fcomps
xor
and
xor
dec
pop
dec
jae
dec
xlat
xor
jge
sub
repnz
push
sub
jmp
sub
lock
jne
ja
adc
xchg
jne
mov
repz
in
dec
xchg
shrb
dec
inc
shl
stos
fstpt
mov
cmp
xchg
mov
icebp
dec
in
jp
mov
cmp
mov
insl
jp
fcom
dec
ja
lds
pop
xor
mov
push
repnz
aam
add
add
push
push
test
dec
pop
fisubrl
sbbb
sbbl
mov
ror
push
pop
or
inc
sub
inc
inc
popa
mov
mov
xor
xchg
jns
mov
sub
cmp
jne
add
sbbl
iret
push
jo
daa
adc
test
sbbl
leave
or
fiaddl
lcall
jp
or
adc
add
lahf
insb
call
mov
xchg
rorl
enter
push
adc
inc
add
outsb
or
sbb
mov
lods
cmp
out
sbb
rclb
cli
pop
jmp
and
ds
fidivs
call
cs
adc
xor
sub
mov
push
push
test
lea
cs
push
push
es
hlt
fsubs
or
dec
test
inc
mov
pushf
add
cli
shl
mov
mov
in
in
lods
dec
mov
xchg
outsb
sbb
cmpsl
and
pop
push
stos
repnz
jp
inc
pop
int3
inc
adc
cmp
mov
push
popa
aas
jmp
cmpsb
push
add
fcomp
mov
iret
aaa
jne
push
mov
fsts
imul
les
dec
aas
jle
cmp
test
push
jg
mov
and
sub
and
xor
dec
rcll
repnz
xchg
sbb
pop
cmp
pop
pop
lods
sbb
ja
mov
sbb
hlt
push
adc
leave
je
lcall
adc
lods
cmp
cmpsb
ficompl
mov
mov
add
jmp
popa
cwtl
mov
repnz
push
jns
idiv
cmp
rclb
push
sub
adc
loope
repz
les
negl
stos
lcall
aaa
adc
xchg
mov
sub
loop
add
push
add
jns
jne
jge
cmpsb
sbb
pop
mov
mov
movsb
xchg
mov
das
mov
aad
ret
cmpsl
xchg
popa
mov
popf
mov
lahf
jne
ja
fcmovu
xrelease
stos
iret
push
pusha
mov
dec
and
or
sbb
push
movsb
int3
mov
xchg
jne
stc
inc
mov
push
test
fsub
fdivp
iret
push
jae
notb
in
out
sarl
ljmp
add
test
dec
stos
adc
lods
jne
or
xchg
shl
push
ljmp
mov
sbbl
push
adc
mov
testb
inc
ret
call
rclb
adcl
lea
sub
movsb
into
mov
cs
mov
clc
sbb
cmp
mov
mov
lods
add
mov
pop
push
ret
and
mov
pop
fs
mov
insl
ret
xchg
xchg
or
inc
jg
lods
mov
icebp
arpl
imul
hlt
dec
pop
mov
insb
jge
rcrl
inc
sbb
test
pop
adc
dec
adc
jmp
fstp
in
mov
adcl
pusha
inc
xchg
ucomiss
or
call
lods
xor
call
adc
mov
and
or
negb
inc
jg
insl
ds
or
push
mov
xor
aas
or
aam
cmp
push
mov
stos
inc
adc
cli
stos
test
pop
add
nop
scas
push
inc
push
test
xor
push
imul
scas
dec
cmp
rolb
aaa
orl
jl
mov
outsb
insl
pop
inc
mov
sbb
xchg
inc
movsb
push
test
stos
mov
or
cs
out
repnz
mull
in
notb
jnp
add
cwtl
and
mov
mov
rcr
inc
add
pushf
dec
sbb
pop
or
fbstp
and
popf
arpl
adc
nop
stos
lods
add
adc
xchg
adc
xor
sbb
jae
imul
imul
stc
stos
inc
push
cmp
cmp
inc
push
daa
mov
jle
jle
jnp
arpl
pop
xchg
dec
rorl
test
scas
pop
adc
scas
adc
pop
mov
mov
aad
aad
jno
mov
cmpsb
jmp
xchg
inc
inc
mov
inc
sti
sbb
and
or
inc
jle
pushf
jecxz
insb
data16
xchg
mov
lret
and
xorb
nop
out
cld
mov
sbb
adc
loopne
testl
xor
flds
fdivs
aas
xchg
call
subl
idivb
ds
adc
pop
or
cmp
dec
mov
add
sub
mov
aam
jg
lret
lret
push
test
push
xchg
pop
fldl
imul
loopne
pop
mov
int
mov
mov
stos
hlt
repz
mov
cmpsl
mov
inc
lods
mov
loopew
lahf
ds
out
imul
mov
pop
ss
inc
pop
js
stos
push
lahf
sub
xor
mov
jecxz
dec
pop
clc
fwait
jecxz
fisubl
js
enter
leave
jno
aaa
in
lods
xchg
mov
popa
push
mov
sbb
nop
icebp
cmp
jecxz
add
xor
jmp
adc
xchg
inc
cltd
jg
and
rcll
mov
rolb
mov
in
fdivrl
mov
ljmp
sti
jb
cmpb
pushl
sbb
mov
jle
push
sbb
ret
push
mov
mov
lock
shlb
push
xchg
sbb
imul
sub
fwait
movsl
adc
xlat
sub
dec
cmpsl
hlt
mov
fildll
pop
cmpsl
out
xor
outsl
lea
cmpsl
jbe
mov
mov
adc
data16
add
and
insb
sahf
jbe
ret
pop
sub
bound
jecxz
pop
mull
pop
mov
push
insb
jmp
mov
int3
jle
fisubs
and
iret
jmp
sbb
jns
test
daa
fucomip
scas
sbb
repnz
cmpsb
adc
or
clc
cs
xor
mov
nop
xlat
cmp
sbb
enter
in
call
cmpsl
out
jl
xlat
imul
cmp
add
sub
inc
ljmp
rcr
divb
inc
int3
pop
fsub
pop
enter
sbb
shrl
push
xchg
icebp
js
daa
pop
xchg
dec
dec
in
inc
pop
aas
xlat
dec
ja
jbe
daa
push
fdivl
fs
add
fcompp
popf
lock
lds
xchg
lcall
and
dec
scas
je
test
test
lea
and
push
sub
xchg
mov
add
aaa
imul
bound
xor
cmc
cwtl
xor
or
insb
jnp
lcall
cwtl
lahf
pop
outsl
lret
jmp
outsb
sbb
fsub
out
call
cmpsb
jmp
cmp
leave
std
add
pop
cmpsl
sub
leave
out
pop
popf
xchg
push
push
and
cli
ss
mov
hlt
add
jecxz
insb
mov
push
adc
xchg
inc
sub
sbb
xlat
cwtl
push
xor
or
mov
dec
iret
xor
push
insb
mov
mov
aaa
add
outsl
lods
sti
lods
mov
lock
sub
push
push
inc
lahf
mov
gs
sbb
push
sbbl
mov
mov
bound
imul
cmpsl
pop
fsubp
inc
loopne
or
add
add
push
ss
push
or
and
push
scas
sbb
aad
and
pop
mov
jo
sbb
imul
in
ficompl
push
and
popf
push
repnz
call
insl
clc
jl
jnp
dec
sbb
cmp
inc
adc
cmp
mov
in
pop
adc
orl
out
sbb
mov
mov
mov
imul
and
mov
shrb
lea
in
in
and
ror
nopl
dec
mov
sbb
sub
inc
mov
inc
jbe
ja
sub
subb
jle
cmpl
xchg
sub
mov
in
insb
push
cs
pop
and
test
push
adc
lret
cmpsl
push
sbb
jl
gs
movsb
enter
enter
push
push
lret
sub
inc
cwtl
test
addr16
nop
xor
mov
sub
div
jecxz
mov
popa
test
shlb
lahf
dec
cltd
sbb
xor
add
out
adc
cwtl
and
aam
mov
mov
fdivr
fstps
mov
ja
or
sbb
or
andb
inc
push
or
jle
or
movsl
clc
mov
scas
loop
int
hlt
and
aad
bound
test
ds
or
xchg
add
mov
mov
xchg
sbb
mov
xchg
testl
js
enter
xchg
jg
or
repnz
fmull
stos
movsl
outsb
repnz
mov
cmpb
mov
ret
push
add
jne
or
jno
rorl
aad
cmpsb
or
pop
mov
popa
cmp
cs
fnstsw
xor
add
scas
inc
sarl
sti
mov
insl
imul
lcall
push
push
test
mov
and
jge
dec
fsubl
xor
and
mov
ss
inc
rclb
mov
sub
pop
pop
sti
sbb
mov
adc
mov
ret
aad
mov
adc
mull
mov
push
xor
push
mov
fnstenv
dec
outsb
or
pop
dec
push
or
clc
dec
call
int
daa
iret
cmp
mov
jl
bound
cmp
pop
mov
sbb
movsl
outsl
jne
lds
add
jg
pop
jmp
cld
mov
pop
push
sbb
xor
cmp
notb
dec
push
sbb
insl
mov
push
ljmp
out
lcall
js
imul
dec
or
jo
inc
pusha
xor
test
jb
sub
and
or
in
dec
cwtl
sub
and
popf
dec
push
xor
arpl
je
push
inc
mov
pop
out
and
rolb
cltd
inc
dec
adc
mov
xchg
scas
cmp
fbld
jae
into
cmp
push
dec
pop
enter
sbb
and
fistps
das
xchg
jbe
xchg
int3
scas
sbb
sub
mov
xchg
fistl
ds
lods
xchg
jns
out
rcll
mov
test
push
dec
leave
sub
inc
xchg
mov
out
sbb
out
jno
outsb
out
movsb
sub
out
imul
sbb
js
clc
cli
scas
aas
push
dec
mov
dec
outsl
or
dec
stos
mov
push
imul
dec
mov
add
movsb
sbb
adc
lea
repnz
iret
adc
cmp
jnp
dec
fwait
pop
mov
loope
jp
jnp
lahf
mov
test
sarb
aaa
mov
das
fs
mov
jecxz
fstpl
aad
fwait
nop
mov
cmp
mov
mov
and
test
and
inc
mov
test
pop
sahf
mov
dec
movsb
stos
push
into
mov
out
pop
mov
push
jp
mov
cmc
sub
push
addr16
std
aad
loop
jmp
call
loopne
and
xchg
sub
ret
fwait
pop
lods
cmp
les
pop
inc
pop
mov
or
vpaddsb
sub
push
sti
pop
sub
frstor
stos
iret
xchg
test
jae
xchg
fcmovnbe
jg
mov
cmp
shl
adc
xor
mov
or
cmp
ljmp
ljmp
dec
pop
shlb
lret
mov
into
pop
lahf
inc
sbb
movsl
xor
mov
and
and
in
or
loop
aas
fisubrl
jb
cmp
dec
mov
mov
sbb
imul
add
jnp
xchg
scas
sti
inc
jecxz
bound
in
adc
dec
fs
cwtl
xor
mov
inc
push
lods
arpl
lock
cmp
add
out
addr16
xchg
or
mov
data16
xor
sti
mov
stos
cli
cmpsb
push
pop
fisttpll
js
sub
or
rcrl
loopne
xchg
inc
clc
fldcw
sahf
mov
pop
jb
stos
mov
push
pop
adc
sbb
mov
jmp
add
cmp
dec
cmp
mov
push
ja
scas
push
shrb
fisttpll
loop
dec
cmp
sbb
mov
pop
mov
sub
add
pop
mov
jge
xchg
jle
jmp
fnsave
nop
adc
cmp
lahf
or
out
out
pop
incb
xchg
call
outsb
and
add
addr16
cmpsl
sbb
aas
fldenv
xchg
js
sbbl
mov
push
pop
or
inc
push
cmp
pop
test
js
imul
add
mov
and
shr
std
inc
fucomp
bound
xor
aaa
addl
ljmp
push
movsb
or
inc
xchg
fisttpll
shlb
shr
pushf
repz
mov
in
int3
sti
jae
cmp
xor
push
sbb
cmp
pop
pop
lock
ds
xor
mov
dec
sub
je
dec
lods
in
test
pop
xchg
sub
test
orl
in
xchg
inc
fcompl
jo
test
pushf
repnz
push
push
nop
mov
lahf
loope
mov
fmuls
loope
adc
or
inc
adc
mov
scas
jmp
and
mov
push
jg
cltd
lahf
shlb
push
inc
sti
es
or
insb
repz
and
data16
dec
mov
out
push
sub
xchg
cs
pushf
lds
mov
outsl
jmp
sbb
mov
repnz
xor
mov
cmp
pop
mov
sbbb
fsqrt
or
insb
popa
int
xor
dec
cmpsb
sub
inc
movzbl
jge
cmp
push
gs
mov
mov
dec
repz
stc
sti
popf
push
adc
into
jge
mov
push
or
xchg
push
cmpsb
cmpsb
cli
outsb
andb
daa
rorl
sub
xchg
sarb
sub
divl
xor
lret
loope
push
lret
mov
inc
adc
xor
ss
or
js
call
jmp
out
jb
jno
or
sbb
in
mov
pushf
push
push
cmp
sub
adc
les
nop
dec
dec
cmp
loopne
inc
popa
or
es
mov
cs
pop
mov
movsb
mov
sub
fisttpll
mov
fmul
repz
popa
and
imul
dec
xchg
in
lcall
mov
xchg
add
push
pop
and
mov
mov
xchg
insb
jg
call
je
mov
lock
pop
ds
in
dec
mov
stos
push
lods
movsb
fs
sarl
sub
jns
xadd
xchg
lock
mov
mull
or
popf
xchg
mov
nop
mov
roll
cmp
ljmp
mov
enter
push
push
mov
and
inc
clc
mov
pop
ret
mov
mov
mov
lcall
fists
cmp
push
sub
repnz
jne
loopne
rorb
mov
fs
cld
shr
mov
shr
cmc
push
cld
mov
cmp
or
divb
lcall
xchg
pusha
jno
xor
shll
out
fwait
leave
adc
shlb
adc
xor
popf
divb
cli
ja
inc
cmpsl
dec
or
lahf
and
sub
xor
syscall
cmpl
jle
xchg
jo
xor
xchg
test
xchg
lret
pop
and
iret
mov
xchg
stc
xor
fwait
out
xlat
and
int
sarb
add
lret
mov
rcrb
jle
or
lock
jmp
int3
or
sub
pop
ror
and
mov
dec
mov
mov
fdivrs
push
psubw
jae
pop
mov
popa
and
sbb
mov
jns
pop
je
pop
data16
test
adc
aam
dec
jae
mov
out
outsb
xchg
mulb
dec
data16
sbb
jne
push
cmp
ds
imul
jnp
int3
loopne
mov
inc
inc
dec
inc
mov
sbb
jnp
xor
in
sub
adc
flds
iret
adc
xchg
xor
mov
inc
xchg
xchg
xchg
loop
aas
push
pop
test
sbb
fistps
xor
dec
cmc
pushf
or
sbb
xlat
andb
pushf
lahf
lret
into
sub
add
stc
sti
pop
test
ret
ljmp
test
lock
push
or
roll
adc
rolb
shl
xor
dec
sub
push
loopne
jecxz
out
sub
jns,pn
in
xchg
sub
aam
push
shrb
dec
insb
push
mov
xlat
fidivl
inc
jle
data16
xor
fdivs
mov
fdivs
add
xor
or
pop
fimull
or
xchg
sarl
in
int
stc
std
out
mov
or
rcrb
xchg
ljmp
mov
cmp
out
xchg
outsl
pusha
pop
and
cli
sarb
xorl
or
aas
dec
push
sub
jl
pop
adc
cmp
inc
pop
test
cmpb
fcomip
mov
test
jmp
sbb
xor
nop
lods
stos
fwait
mov
lahf
cltd
leave
jl
or
cmpsl
push
addl
jg
xchg
hlt
pop
inc
dec
mov
ljmp
out
mov
sbb
clc
outsl
fmul
les
inc
cmp
and
jmp
mul
cmp
push
ljmp
xorl
call
fistpl
sub
or
mov
inc
and
jne
sahf
pushf
push
jns
int
cmp
jbe
xchg
lahf
sbb
or
xorb
call
pusha
cmp
ret
cmpl
outsl
pop
into
cltd
imul
mov
push
pop
push
scas
imul
rcrb
enter
mov
ficoml
repnz
out
pop
test
rorb
jbe
sub
out
or
repz
sbb
mov
lea
jb
imul
jo
mov
cmp
adc
jae
jl
repz
pusha
push
call
std
xchg
les
iret
and
xchg
or
mov
xorl
cs
mov
sub
dec
sbb
jmp
jnp
addl
add
jmp
lods
pop
mov
imul
repz
xor
dec
fimull
clc
repnz
push
mov
dec
ds
mov
jbe
shrl
ss
leave
adc
aad
mov
imul
ljmp
jp
or
mov
add
in
jge
or
push
jecxz
xor
sbb
xlat
out
mov
test
stos
xchg
jae
imul
add
pop
add
mov
shlb
xor
loope
pushf
add
xchg
xlat
cmp
cwtl
pop
mov
push
mov
scas
int3
mov
sbb
and
dec
jl
push
out
jg
fdivr
lds
int
jecxz
bnd
pusha
add
and
rorl
jo
mov
cmp
jbe
xor
insl
fs
pop
cmpsb
sub
xor
push
sti
lods
movsl
testb
pop
int3
push
test
or
in
sbb
icebp
push
jo
inc
rcrb
sbb
fs
sbb
cmp
int
cmpb
test
lods
push
inc
out
sub
gs
dec
popa
test
out
push
cmp
shlb
or
sar
jae
iret
mov
jp
mov
nop
or
lret
stos
jecxz
lods
jnp
mov
adc
loopne
in
loope
std
push
jns
rolb
loopne
jp
out
lea
jmp
inc
mov
pop
lret
sub
cmc
or
dec
pop
out
out
test
pushf
sub
push
ret
test
push
cmc
push
insb
frstor
mov
sub
add
cltd
aam
jns
shl
dec
ljmp
iret
shll
mov
push
int
in
out
fldenv
push
test
cmp
mov
cmc
adc
int3
fidivl
repnz
jmp
aas
movsb
cmp
repz
or
pop
popa
cwtl
push
in
xchg
shrl
das
pop
push
stos
fldcw
aas
movsl
test
pop
movsl
cmc
dec
sub
add
mov
hlt
jmp
add
add
mov
mov
or
or
cmp
aad
pushfw
pop
xchg
in
es
push
mov
mov
xor
lcall
lret
arpl
les
adc
cmc
addr16
jl
ret
notb
dec
iret
repz
or
sbb
dec
dec
dec
jne
popa
test
popf
jle,pt
out
or
and
scas
xor
mov
sub
mov
iret
test
out
leave
lret
cmp
mov
stos
int
mov
mov
pop
sub
outsb
inc
sbb
or
cltd
jle
cli
movsb
aad
push
fsubrs
bound
xor
and
fildll
lods
and
mov
cmpsl
and
addr16
movsl
idivl
in
pop
sub
scas
imul
and
and
fcmovu
mov
mov
fwait
cmc
ror
xchg
pop
dec
out
out
dec
lods
aam
mov
frstor
enter
mov
cmpsl
cs
int
popf
jb
xchg
iret
pop
std
repnz
xchg
aas
cmp
jmp
in
mov
mov
adc
cmp
scas
lret
cld
mov
outsl
clc
sbb
cmpb
sub
cmpb
in
int
inc
ret
jp
ret
in
dec
outsl
inc
sbb
popa
jl
cmp
aas
imul
fisttpll
stos
std
jg
jl
cli
jnp
xchg
nop
leave
cmp
adc
inc
lds
mov
shrl
add
fistl
out
push
xchg
sbb
mov
cmpb
add
jno
mov
js
jmp
push
pop
ret
or
inc
ret
out
std
jmp
pop
cmp
add
scas
out
data16
adc
sub
xor
popl
mov
jmp
mov
lahf
pop
int3
mov
adc
fiaddl
outsl
gs
pop
sahf
dec
hlt
cwtl
pop
xor
jmp
pop
lock
out
pop
push
mov
push
push
sbb
out
adc
push
addr16
jno
enter
out
scas
int3
push
jbe
add
mov
int3
dec
or
or
sub
mov
fwait
lock
jns
adc
pop
mov
and
cmp
adc
pop
pop
jecxz
cmp
shr
lret
cmp
addr16
paddd
xchg
es
mul
mov
pop
mov
ret
adc
add
mov
outsb
dec
xchg
in
loope
lea
push
push
pop
pop
cs
lock
daa
std
cmpb
movsb
or
cmp
inc
adc
mov
ret
push
addr16
je
adc
xor
cmp
push
add
mov
pusha
inc
xor
shrl
inc
xorl
jecxz
into
inc
push
push
mov
push
movsb
mov
push
cld
add
andl
pop
mov
add
mov
pavgb
fstps
or
push
xchg
filds
imul
test
sub
and
scas
sbb
mov
mov
aaa
das
out
sbb
pushf
xor
cmp
sti
jg
dec
inc
pop
mov
hlt
mov
jno
ds
xor
movsb
out
fidivl
into
push
enter
add
sbb
daa
sbb
pop
lock
pop
xchg
mov
loopne
push
stos
sub
xchg
mov
loope
xor
add
fs
pop
sahf
pop
jmp
int
in
sbb
movb
xorb
and
iret
dec
xchg
mov
pop
in
in
push
in
lds
out
adc
add
in
dec
jg
cmp
pop
ss
ljmp
mov
shlb
pop
dec
jecxz
inc
jae
xor
je
jge
pop
lods
dec
aas
jo
lea
mov
popa
and
jnp
jnp
or
std
sub
xchg
out
push
fdiv
add
fdivrs
mov
push
loop
sarb
cmc
jo
push
push
mov
mov
mov
mov
cmp
lret
aas
fldt
adc
pop
push
sub
pop
and
add
popa
into
pop
cltd
movsb
shl
jp
leave
lods
dec
cmpsb
push
hlt
ret
adc
jns
loopne
push
roll
jmp
push
subb
push
mov
pop
inc
shl
jecxz
in
add
mov
xchg
jno
sahf
or
mov
scas
daa
pushf
adc
cs
dec
pop
jno
or
mov
pop
mov
mov
xchg
push
pop
andb
cwtl
lea
fwait
adc
mov
pop
or
sub
mov
repnz
rcll
repz
push
pop
icebp
std
repnz
and
js
mov
xchg
icebp
mov
adc
inc
cwtl
adc
bnd
push
shlb
sbb
daa
pushf
inc
sbb
add
sti
sub
or
aad
dec
out
bound
divb
adc
fs
mov
movsl
mov
mov
mov
or
mov
xor
fwait
cmp
scas
add
dec
mov
fsubrs
mov
lods
xor
test
shr
mov
ret
je
dec
cmp
mov
mov
xor
fimull
mov
in
xchg
xchg
dec
xchg
and
pop
mov
jg
pop
xor
shlb
xchg
or
clc
pop
pop
ja
fldcw
and
dec
fsubr
loopne
ficompl
outsl
movsb
test
and
sbb
push
mov
in
dec
in
orb
in
add
add
pop
test
pop
pop
pop
imul
and
stc
iret
es
popa
data16
test
ret
mov
cmpsb
test
dec
inc
fldl
and
rclb
inc
loopne
add
jge
imul
cmc
mov
pop
das
iret
dec
lahf
in
es
mov
push
mov
mov
push
cmp
dec
pop
jbe
call
out
fadd
xor
lcall
and
mov
sar
pushf
lcall
or
in
push
mov
jns
aam
sub
pop
imul
jnp
sub
push
call
dec
call
insb
hlt
adc
mov
repnz
stc
fisttpll
push
jbe
bound
cmpb
pusha
test
push
fisttpl
sti
sti
lret
mov
cmp
ret
rcll
sub
clc
add
mov
push
cli
ret
enter
sbb
pop
mov
cmp
lods
lock
ret
and
fidivs
in
mov
sub
lods
in
addr16
aaa
cmpsb
xchg
jnp
mov
loop
in
imul
xor
pop
sbb
xchg
mov
cmp
ljmp
dec
sub
cmp
jl
sti
rorl
push
movsb
lods
iret
jo
mov
sti
cmp
repnz
dec
jo
pop
loop
cmp
das
das
xchg
outsl
cltd
cmp
leave
icebp
adc
lea
mov
lock
inc
ljmp
addr16
sbb
cmp
add
cmp
leave
rolb
insb
inc
popf
mulb
mov
xchg
lods
mov
mov
shlb
pop
loop
dec
mov
test
cmc
popa
inc
leave
adc
and
mov
lods
adc
arpl
mov
pop
cwtl
mov
mov
or
fcmovnb
icebp
fisubs
popf
xchg
lds
sbb
inc
div
addr16
shrb
lret
rcrb
cmp
mov
pop
aas
jecxz
les
sub
cmp
in
shrb
or
xchg
or
mov
inc
cmp
aas
add
lods
fdivr
push
ret
mov
pusha
jne
rorb
int
aaa
movsb
rcll
mov
or
add
xor
dec
sub
dec
js
inc
cmpsb
lahf
pop
aam
jnp
cmp
addr16
or
cmp
lret
sbb
inc
dec
mov
jecxz
iret
xchg
sbb
sbb
pop
sti
lds
ja
push
out
mov
test
push
push
or
cmpsl
inc
sbb
fcompl
jbe
ret
emms
pop
mov
testb
mov
mov
call
mov
popa
dec
jge
xor
addr16
int
insl
and
mov
dec
rcl
jg
mov
cmp
adc
cltd
sbb
out
adc
inc
push
lods
add
inc
adc
aas
sbbl
or
imul
jb
push
pop
cld
lods
shrb
inc
adc
mov
push
mov
jge
rcrl
add
xchg
test
lcall
test
mov
roll
imul
pushf
je
or
pop
in
jb
sahf
jge
iret
or
int
and
jl
push
mov
xchg
iret
inc
test
push
outsb
dec
push
lret
testb
lock
cwtl
aaa
rcr
into
mov
sti
aaa
js
push
push
mov
int3
xchg
mov
decb
sub
scas
scas
stos
ret
mov
test
push
push
test
test
or
cmpb
xchg
sub
jmp
adc
repnz
add
aad
cmpb
jb
test
push
and
lahf
sbb
push
pop
adc
inc
mov
mov
inc
dec
test
inc
int3
lret
loopne
adc
orb
fisubrl
pusha
mov
jle
popa
pushf
add
les
mov
and
and
cmp
iret
or
mov
incl
ret
sub
push
or
or
push
jmp
inc
inc
into
ja
stos
ds
mov
nop
mov
adc
jne
sub
adc
loop
pop
ret
xor
xchg
cli
push
iret
add
pushl
movsb
jae
mov
hlt
in
daa
lds
mov
inc
dec
jl
out
stos
xchg
mov
jne
ret
jnp
pop
jecxz
shrb
out
dec
push
ljmp
inc
xchg
inc
and
hlt
daa
pop
sti
cmpl
decb
adc
or
mov
cmc
rol
sub
insl
leave
push
in
mov
pop
scas
icebp
cmp
dec
hlt
jno
repz
push
inc
ror
ljmp
push
xor
das
push
mov
test
les
cmpsb
push
outsb
sub
xor
ljmp
dec
cwtl
xchg
pop
pushf
mov
or
jmp
and
pop
pop
int
fwait
loope
lea
fistpl
fidivrl
cwtl
cmp
sub
outsl
aad
arpl
fnstsw
mov
mov
idivb
dec
iret
in
adc
pushf
xchg
into
ret
dec
mov
sub
imul
in
mov
xchg
mov
test
movsl
test
or
mov
jno
push
leavew
push
cmpsb
cld
jno
mov
shl
mov
jecxz
daa
sbb
sub
xlat
lock
mov
mov
lahf
and
mov
movsb
mov
pop
dec
into
pop
testb
jns
cmpsb
sbb
add
and
mov
mov
xor
pop
shrl
cwtl
cmp
xchg
outsl
repz
dec
es
loopne
sbb
lret
and
aam
add
sbb
and
cmpsb
mov
je
cmpsl
mov
inc
out
xor
out
cld
pushl
jbe
lahf
sub
stos
adc
leave
cltd
adc
cld
rolb
jg
mov
imul
movsl
jb
cs
pop
inc
es
sub
push
xchg
push
or
or
mov
clc
jle
jo
mov
adcl
gs
xorb
lods
addr16
and
movsb
test
mov
mov
test
out
sub
aaa
mov
fwait
rolb
inc
iret
das
adc
jns
push
lcall
xchg
jnp
outsl
daa
mov
and
adc
incb
stos
add
imul
sti
sub
jl
push
das
fsubrp
out
sub
mov
xchg
hlt
and
push
sub
jae
shr
je
call
rolb
add
ret
mov
cwtl
xor
nop
mov
fbld
int
inc
nop
lds
into
icebp
or
sbb
sbb
push
cmp
nop
clc
pop
dec
fmull
insb
gs
idivl
xlat
lock
sbb
and
jbe
leave
jecxz
andl
daa
addr16
push
cmp
xchg
iret
xchg
test
fcompl
repnz
inc
mov
mov
push
int3
and
ja
ds
sub
jg
in
stos
call
push
lods
les
mov
jno
cmpsb
ds
push
daa
lods
and
pusha
pop
sar
push
pop
loopne
loope
inc
iret
ret
sub
dec
adc
sub
inc
hlt
sahf
imul
xor
mov
nop
test
add
push
and
ljmp
daa
inc
sahf
jmp
daa
cmp
mov
andb
insb
cmp
cmp
jnp
dec
cltd
inc
in
sub
cmp
xor
jl
shl
lret
push
adc
xor
sbb
and
xor
cmpsb
addb
pop
mov
addr16
mov
xchg
daa
xchg
data16
call
mov
jmp
daa
cwtl
xor
cmpsl
pop
adc
pushl
lock
lret
cwtl
and
or
dec
outsb
pop
mov
pop
mov
pop
gs
out
sub
inc
fidivrs
push
mov
cmp
icebp
xchg
adc
push
loop
xchg
xchg
jge
xor
pop
and
push
aas
mov
insb
sub
mov
jbe
mov
jbe
mov
and
xchg
decb
lds
stos
xor
into
mov
add
push
sbb
xchg
cmpsl
cmp
lea
sub
aam
fwait
arpl
pop
pop
jns
push
into
dec
rcll
cmpsb
test
cmp
sub
and
lock
xchg
ret
in
shrl
sub
out
sti
dec
sub
cli
outsl
pop
lcall
shlb
sbb
pop
shrb
sub
add
inc
sti
add
push
idivl
or
push
outsl
push
in
lcall
xor
mov
mov
xchg
sub
jge
cmp
icebp
mov
sbbb
gs
mov
loopne
sbb
cmpsl
pop
sub
cmp
add
out
sub
sbb
cmp
fs
sbb
outsl
loopne
sub
jle
movsl
lahf
pop
inc
stos
aas
call
cmp
lods
testb
inc
lret
or
jae
shll
into
or
repnz
dec
push
sub
add
dec
cld
push
xorl
xchg
in
mov
gs
test
xchg
push
pop
pop
out
and
repnz
jo
xchg
shll
inc
jecxz
inc
iret
insb
mov
cld
adc
fidivrl
pop
rolb
xchg
jge
pop
or
ficoms
aam
mov
test
pop
icebp
psraw
jo
out
dec
sbb
mov
pop
and
push
fmuls
js
xor
data16
sbb
aas
push
and
mov
mov
mov
add
lock
icebp
repz
leave
in
in
std
int3
sbbb
push
lock
out
popf
fdiv
mov
pushf
mov
ss
push
loopne
adc
xchg
std
js
push
jl
mov
ret
adc
in
push
add
sub
outsl
das
jle
or
inc
lods
sub
mov
pop
popf
idiv
ffreep
sbbl
out
aaa
add
mov
xchg
stos
cmp
and
les
or
fisubl
xor
jno
in
cmp
mov
adc
dec
or
lret
mov
ficompl
into
and
dec
orl
jl
in
cld
adc
daa
pushf
cmp
mov
shrb
push
int3
fsubr
fmulp
push
scas
jns
cmp
mov
push
in
test
jg
add
cmp
in
mov
nop
sbb
cmp
out
cmp
inc
push
sub
leave
leave
dec
dec
call
popa
cli
outsb
add
jl
adc
sub
lret
in
cld
xor
in
add
addr16
bnd
fdivp
mov
ficomps
out
mov
lret
inc
scas
roll
adc
test
es
lods
call
mov
jg
and
mov
shlb
pop
test
push
inc
xchg
popf
mov
pop
fiaddl
or
jne
or
or
jno
sbb
movsl
sbb
mov
mov
cmpb
sub
jo
enter
out
mov
push
cwtl
jmp
addb
out
inc
stc
cld
pop
mov
sbb
mov
loop
orb
sbb
test
jnp
and
fs
mov
jb
mov
jecxz
lock
out
addr16
mov
cwtl
mov
push
mov
mov
sbb
or
test
mov
cld
cmc
loopne
int3
push
push
xchg
enter
mov
mov
mov
sbb
int3
xchg
loope
sub
addr16
and
mov
and
and
lcall
faddp
stos
leave
inc
leave
mov
movsl
push
out
push
fsubs
adc
mov
test
pop
dec
jle
inc
out
pop
repz
add
cmp
cmp
inc
imul
jno
pop
cmp
das
xchg
sub
inc
mov
les
mov
add
pop
sbb
in
les
clc
cmp
int
inc
sbb
gs
lret
xchg
xchg
test
out
jge
sbb
cwtl
cmp
sub
xor
adc
cld
dec
mov
scas
add
jbe
into
cmp
dec
mov
je
out
lea
sahf
imul
pop
mov
push
dec
outsb
push
sahf
aam
hlt
das
adc
scas
add
adcl
pop
int3
xchg
ja
repz
xchg
xchg
sahf
xor
outsl
dec
insb
test
lods
test
and
fidivl
into
and
cmpsb
es
sbb
sub
mov
ljmp
popa
dec
jo
adc
mov
popa
scas
jo
xchg
cs
jecxz
xor
xor
cmp
movb
add
adc
dec
iret
sbbl
xchg
inc
out
jecxz
sbb
mov
jecxz
leave
jae
adc
jge
nop
cwtl
ljmp
iret
pop
les
push
add
add
add
dec
fidivrl
mov
stos
test
sbb
push
mov
je
xchg
lods
notb
xor
subl
xorl
nop
or
jns
out
xchg
movsl
add
mov
inc
cltd
xor
into
loopne
mov
and
ljmp
mov
mov
inc
cmp
and
pushf
add
inc
pop
imul
pop
sbb
adc
jmp
push
clc
mov
xor
loope
out
sub
shlb
shl
cs
lea
pop
push
daa
cmp
test
in
mov
pop
in
jo
cwtl
aad
ret
dec
test
jb
mov
out
mov
add
dec
xor
lret
jnp
adc
mov
mov
xchg
jo
jns
dec
out
rcr
out
cmp
mov
lahf
and
pop
mov
or
push
mov
push
and
stc
push
hlt
cli
inc
adcl
ja
cltd
xchg
mov
dec
push
mov
inc
push
mov
loop
xorb
inc
aam
fstpl
push
ret
nop
lds
cwtl
iret
push
or
repnz
out
or
cmp
sbb
mov
iret
data16
cmpl
lods
paddq
int
sahf
daa
push
test
test
xor
or
test
add
rorl
push
cmp
mov
xchg
inc
jge
scas
dec
lea
imul
push
imul
and
pop
xchg
jb
xchg
pop
cmp
lds
dec
inc
ljmp
cli
test
out
jmp
dec
psubsw
mov
pusha
sub
test
fbstp
jecxz
fcom
int
andb
mov
adc
jmp
and
addr16
xchg
adc
xchg
pop
jbe
enter
pusha
cmp
test
push
sub
push
mov
push
lahf
enter
and
nop
jle
or
dec
dec
xor
jmp
je
push
pop
pop
mov
push
jbe
mov
loopne
mov
mov
jle
jbe
repz
dec
mov
xor
ret
out
mov
sbb
loope
pop
dec
fwait
jo
push
out
xchg
mov
insl
pop
xchg
mov
shlb
testb
dec
fildl
push
and
icebp
xchg
mov
xchg
push
aad
js
call
into
add
push
push
stos
fimuls
cmp
stos
popf
nop
mov
adc
push
aam
fstpt
inc
or
push
je
imull
xor
iret
sbb
insl
add
out
cmp
xor
push
cmp
loopne
xchg
sbb
cld
in
scas
iret
xchg
and
jnp
cmp
mov
loope
inc
ret
sub
lods
cld
or
aaa
cmp
inc
xlat
and
inc
fstl
and
sub
mov
rorb
ret
mov
sub
mov
jo
adc
mov
inc
les
add
xor
cvtps2pd
xor
lock
sbb
inc
repnz
dec
sub
sbb
add
or
mov
sub
loope
outsb
inc
jmp
mov
inc
pop
bnd
add
mov
test
sbb
xor
clc
mov
cmp
inc
pop
add
xchg
mov
push
sub
testl
fstpt
ret
lods
scas
mov
push
push
mov
int
dec
jo
pop
inc
sub
jne
shrb
sbb
jmp
mov
adc
inc
mov
loope
jl
addr16
lcall
push
pushf
scas
jo
outsb
inc
mov
cmp
sbbb
fmuls
mov
cli
and
testb
xchg
arpl
xchg
adcb
push
jnp
pop
or
cwtl
pop
inc
mov
mov
mov
scas
jle
nop
jge
adc
fcmovu
and
enter
es
xor
xchg
sub
sub
es
pushf
mov
mov
or
mov
fs
sbb
bound
adc
out
inc
aas
and
ljmp
adcb
xchg
cmp
addr16
loope
adc
dec
inc
dec
adc
xchg
pop
sahf
call
shlb
dec
add
movsb
sub
outsl
mov
jmp
jge
inc
xor
sbb
jno
stos
sbbb
sub
repnz
pop
cmp
icebp
fistpl
fdivl
test
mov
das
mov
and
repz
sbb
in
std
add
push
loopne
xchg
adc
in
out
sarl
andb
lret
mov
dec
mov
outsb
mov
shrb
jns
into
data16
xor
dec
cmc
jl
add
std
rcl
jge
mov
ret
pop
shrb
out
xlat
outsl
pop
stos
mov
pushf
in
mov
pop
jle
ret
test
and
jge
add
jle
scas
call
cmp
dec
jl
push
inc
sub
loope
dec
mov
mov
push
pop
mov
call
mov
arpl
sub
inc
enter
adc
insb
popf
mov
cmp
pop
in
mov
adc
jl
push
or
lret
push
addl
nop
insl
loop
xor
xlat
shlb
xlat
sbb
push
push
and
mov
jns
stos
xor
mov
sbb
and
dec
push
lahf
fmuls
xchg
inc
fwait
mov
lret
pop
mov
jge
xor
pushf
shl
aas
xor
mov
inc
cmp
and
sahf
push
out
dec
pop
popf
stc
subl
pop
lahf
movsl
sbb
and
insb
imull
in
loopne
or
lret
mov
mov
out
add
loopne
mov
and
adc
aaa
mov
out
push
xor
dec
out
das
or
inc
xor
int3
or
hlt
sbb
into
pop
xchg
ss
fcomps
add
dec
inc
rol
aam
test
adc
jno
mov
push
xor
mov
xor
xchg
dec
sub
xchg
sub
dec
jae
or
mov
add
mov
or
sbb
add
aad
lods
jl
leave
pop
mov
jb
lahf
fists
rorb
pop
imul
pop
add
or
pop
daa
pop
jg
mov
vmovhps
and
es
push
xchg
rcrb
inc
dec
test
hlt
orb
lods
vsqrtps
push
and
pushf
mov
call
ret
mov
push
stos
sub
nop
xchg
out
mov
ret
dec
cmp
or
roll
leave
int
inc
les
ds
jg
adc
fcmovnbe
pop
mov
sbb
or
sub
add
add
pop
addr16
out
inc
mov
sub
jne
xor
mov
loope
ficoml
inc
leave
movsb
dec
jmp
push
pop
mov
dec
idivb
jmp
nop
cmp
shl
int3
pop
jmp
nop
testl
pop
mov
and
mov
mov
pop
popf
push
pop
fbld
adc
dec
ja
testb
lods
ss
xchg
jmp
mov
xor
and
addr16
out
cmpsb
aam
mov
xor
sarl
sub
rclb
scas
or
pop
lods
and
test
cltd
gs
xor
inc
pop
mov
out
cltd
out
xor
fst
jb
sbb
push
pushf
sbb
cmpsb
fbstp
xchg
cmp
dec
test
sbb
mul
adc
pop
lcall
sub
in
lcall
mov
call
pop
xor
je
jb
mov
mov
inc
aam
adcl
test
loopne
je
sub
jbe
cmp
dec
add
sub
mov
movsl
roll
ficoml
fldenv
stc
add
movb
imul
cli
inc
adc
mov
xchg
hlt
repz
pop
ficomps
cmpsb
add
popf
sbb
cmp
std
lahf
ss
pushf
xchg
mov
bound
in
push
out
xor
mov
sbb
mov
jl
dec
stos
mov
pop
or
sbb
or
or
sbb
dec
loope
hlt
mov
push
int3
mov
sbb
leave
insl
aaa
xor
cwtl
das
rolb
popf
cwtl
jmp
and
mov
mov
push
push
aaa
sub
xor
in
sbb
mov
jp
xchg
dec
insb
mov
push
les
jmp
mov
pushf
mov
pusha
fistps
jb
sbb
jge
mov
push
aaa
pop
dec
aad
and
pop
dec
mov
adc
inc
inc
jp
aaa
pop
mov
ret
rolb
orl
out
xor
or
jo
sub
jl
jns
ud1
das
call
je
fcmovb
cmpsl
addr16
or
sbb
mov
jnp
or
cltd
or
mov
out
push
xor
outsb
mov
xchg
xlat
pop
sbb
daa
sbb
xchg
xchg
xchg
pusha
sbb
sub
cmp
sub
pop
stos
and
iret
push
jae
xchg
int
mov
mov
iret
out
adc
lods
mov
fmull
jge
cs
sub
push
sub
jg
inc
jbe
into
jb
pop
xor
mov
sbb
and
pusha
sbb
pop
or
mov
mov
iret
out
or
out
sbb
mov
xlat
sbb
int3
and
insl
xor
es
loopne
adc
repnz
mov
cs
mov
pushf
pop
dec
push
aad
sub
dec
lods
jae
cld
cmpsl
or
dec
mov
sub
stc
pop
sbb
cld
mov
clc
dec
addb
pop
lret
inc
vcvttps2dq
fimuls
xor
in
sub
push
outsl
test
cmp
mov
cs
jno
mov
pop
inc
insb
cmc
inc
cmpsl
js
push
out
fucomip
lahf
push
ret
iret
xor
mov
add
fs
mov
imul
mov
and
and
mov
and
xchg
outsl
imul
insl
inc
inc
ja
mov
pop
sub
and
or
or
push
into
mulb
sub
test
lods
and
xchg
jge
insl
enter
lcall
pop
mov
mov
add
in
cs
push
clc
add
jmp
sti
or
jecxz
out
imul
arpl
push
xor
mov
subl
aas
mov
mov
xchg
lea
jbe
test
mov
push
mov
fucomip
and
fdivrl
xor
fsubl
cs
ss
mov
push
jg
addr16
out
jnp
out
mov
enter
mov
rolb
inc
je
mov
add
adc
push
pop
scas
in
dec
dec
fisubs
dec
cmp
sub
test
jle
and
push
inc
mov
mov
lods
mov
push
xchg
push
cmp
test
jge
leave
dec
mov
sub
push
outsl
adcb
jl
je
lods
imul
sbb
mov
arpl
stc
inc
fwait
xchg
aaa
cmpb
jle
cmp
movsb
mov
lea
or
jo
fstps
lcall
inc
inc
jg
jmp
xchg
or
pop
inc
pop
dec
loop
and
inc
fisubrl
mov
cmpsb
cmc
jbe
jno
call
inc
lods
mov
js
filds
movsl
adc
jns
or
lcall
mov
into
dec
test
aad
jl
inc
xor
push
dec
bound
mov
jo
test
sti
pop
sbb
test
mov
cmp
cmp
fsubr
cwtl
push
mov
insl
lock
jl
into
mov
jnp
cmp
imul
lock
je
mov
mov
repz
rcrb
lods
mov
xchg
rcll
movsb
jnp
mov
aam
jbe
js
fwait
lods
sbb
shll
lock
or
dec
repz
popf
and
adc
mov
jno
fimull
jnp
xchg
jge
pop
sahf
scas
pop
pop
das
add
mov
pcmpeqb
insb
imul
loope
jns
mov
or
dec
sub
sub
pusha
add
nop
daa
xchg
push
mov
sar
ja
xchg
pusha
jp
inc
cmp
popa
stc
and
or
cltd
and
jmp
in
inc
pop
movhps
addl
addl
popf
or
insl
inc
mov
daa
aas
cmp
mov
bound
jne
xchg
xchg
push
dec
es
rcll
jno
lret
ds
popf
push
gs
icebp
xor
and
xchg
add
js
fs
out
add
mov
imulb
push
fwait
aaa
leave
pop
shrb
mov
mov
cli
mov
pop
jae
imul
cmp
and
and
mov
rcrb
dec
enter
cmp
xlat
push
sub
icebp
lret
enter
adc
lock
fld
pop
mov
cmp
fisubrs
pushf
mov
int
jno
inc
movsb
cmpsl
or
cmc
ret
dec
push
or
daa
insb
dec
xor
cmpsl
xchg
fcmovne
daa
pop
jecxz
pop
cmp
sbb
out
sti
outsb
popf
fiadds
fmulp
scas
and
jl
aaa
inc
cld
lcall
inc
jmp
jp
das
int3
lds
imul
sbb
jae
add
pop
add
sbb
lahf
mov
pop
sbb
mov
or
lods
int3
xor
push
fstpl
dec
push
mov
or
cmp
xor
bound
test
or
adc
push
lock
fidivl
pop
jo
jmp
aaa
mov
inc
out
xchg
cmp
mov
push
cld
add
mov
jmp
inc
arpl
jle
pusha
aaa
mov
andl
push
fs
popa
ret
inc
inc
shll
daa
jle
insl
cwtl
pop
xchg
data16
cs
adc
icebp
or
scas
fstpl
dec
lret
sbb
sbb
adc
sbb
dec
out
lock
mov
sub
jno
xlat
stos
ret
sahf
outsl
fdivrs
or
pop
jge
es
cmpsb
test
aad
push
push
xor
dec
xchg
lods
and
fldenv
add
in
in
nop
sub
mov
inc
mov
bound
pop
sti
lret
mov
mov
data16
dec
mov
cltd
idivb
mov
jns
popf
add
mov
movsb
imul
mov
xor
push
loopne
cltd
es
xor
pop
rorb
push
sti
and
bound
stos
or
jbe
add
je
lods
fistpl
fadds
scas
sbbb
jns
mov
add
out
mov
or
ja
jmp
inc
inc
sarl
cltd
dec
cmp
pushf
rep
das
mov
pop
aas
xchg
ret
pop
xchg
xor
push
repz
lods
jmp
aam
push
sub
and
or
lods
mov
lods
fbld
or
pop
pop
addr16
mov
xor
adcb
sub
inc
xchg
pop
mov
repz
lea
nop
pusha
out
iret
pop
push
add
lret
repz
add
mov
ds
jmp
add
imul
xchg
xlat
cld
jns
shl
addr16
mov
scas
or
adc
pop
jbe
push
js
xor
lods
push
xor
jne
repz
mov
scas
jo
call
lret
icebp
addb
lahf
mov
xchg
iret
test
and
in
xlat
in
xor
cmp
int3
add
ds
push
xorl
nop
ret
push
cmp
sub
or
stos
add
mov
test
or
and
in
or
mov
lock
and
fsincos
mov
out
mov
loopne
and
inc
int3
shl
repz
sub
outsb
fisubs
lret
ja
ja
nop
out
loop
mov
sub
lock
cmp
iret
leave
mov
stos
lret
cli
jmp
push
outsl
mov
enter
mov
pusha
test
cs
daa
cmp
popf
dec
xchg
add
js
scas
out
sbb
imul
xor
mov
shlb
mov
push
sub
or
push
out
cli
pop
xchg
sbb
pop
sub
ret
dec
fcoms
cmc
cmp
bound
dec
push
adc
pop
addl
and
adc
fidivl
cmp
inc
sarb
pop
push
pop
mov
popf
and
sahf
add
aas
mov
mov
test
clc
fisubrl
and
cld
dec
in
jmp
arpl
xor
jge
test
cli
aad
adc
jb
jb
pop
jbe
jmp
sahf
cmpsl
inc
mov
fldenv
xchg
daa
lds
sub
repnz
or
leave
iret
dec
out
sbb
mov
or
mov
mov
negl
aas
inc
adc
and
scas
cmp
mov
push
adc
xchg
xor
cmp
fwait
push
pushf
mov
dec
push
mov
stc
js
dec
xor
or
sbb
push
push
push
mov
cwtl
sti
cmp
or
pop
xchg
lock
aas
mov
cmp
insb
xor
inc
repz
lret
out
inc
bound
pusha
push
out
inc
fsts
mov
mov
test
add
scas
imul
mov
adc
cld
push
daa
mov
xor
repz
xlat
dec
and
sbb
pop
fstpt
or
add
add
cmp
cwtl
pop
xor
xor
ss
sbb
cmp
ds
scas
data16
and
dec
scas
xor
or
cmp
jl
and
stos
ljmp
ljmp
aaa
repnz
xchg
pop
popa
pusha
jecxz
mov
lea
call
push
insl
mov
xlat
sub
mov
xchg
jno
adc
popa
jp
jns
mov
aad
push
dec
adc
iret
inc
xor
out
out
dec
inc
add
sub
and
rorl
and
mov
imul
fcoms
hlt
in
in
push
jo
scas
fldcw
dec
xlat
mov
pop
or
push
xbegin
hlt
repz
lret
lret
movsb
pop
xchg
fsubrs
mov
pop
cli
icebp
enter
pop
sub
test
dec
push
dec
mov
cmp
and
inc
sti
xor
sub
int3
inc
fstps
mov
lret
scas
sub
test
mov
xor
es
mov
mov
cwtl
cmp
bnd
aas
out
add
aas
ret
sub
xor
jle
xchg
jns
arpl
lcall
xor
das
in
movsb
adc
clc
and
dec
adc
push
incb
insl
cltd
inc
subb
push
cmp
clc
dec
shlb
in
xchg
cmp
mov
fs
std
cltd
add
ds
enter
dec
jle
pop
push
std
out
rcr
mov
xor
inc
lret
jno
xor
fildl
shrb
ret
xchg
mov
inc
inc
add
inc
and
xor
fisubl
pop
inc
pushf
push
adc
push
clc
mov
movl
or
inc
pusha
out
cmp
xchg
pop
roll
outsl
jmp
inc
mov
out
cmp
mov
sahf
bound
aas
sub
jle
shl
lahf
mov
push
push
loope
cmp
pop
adc
jae
cmpsl
inc
cmp
mov
adc
cld
in
jmp
push
insl
ret
pop
dec
jp
repnz
and
jo
fists
in
vminps
fmull
inc
sbb
push
mov
iret
repnz
popf
mov
dec
mov
xchg
stos
jg
pop
fstpt
leave
dec
out
dec
jno
lea
add
dec
pop
pop
and
push
sbb
std
mov
data16
fcomps
aad
sbb
stos
cmp
sti
xchg
aaa
jmp
mov
fisubl
decb
aaa
sti
dec
dec
cli
add
pop
adc
loop
pop
inc
imul
leave
add
popa
mov
sub
movsl
mov
xchg
imul
aad
lret
xchg
pop
leave
xchg
or
jae
mov
sub
insb
or
into
lahf
adc
cmpsl
lret
sbb
pop
loope
inc
loop
test
repz
dec
fisubrs
dec
xorb
push
and
or
lret
pop
add
mov
pop
push
shlb
mov
mov
cmp
int
scas
inc
inc
es
ficompl
cmp
xor
mov
sbbb
shll
jo
lret
into
stc
push
cmp
xor
and
daa
stc
xchg
fnstcw
cmpl
pop
fwait
jge
cmpsl
jae
xchg
mov
push
ss
jno
xchg
jb
pusha
adc
adc
mov
fcompl
out
jmp
leave
ret
aas
mov
xchg
jmp
push
cmpsl
test
mov
mov
enter
mov
ror
nop
ljmp
incl
xorl
ja
cmp
stos
mov
xchg
fsubrs
lahf
mov
and
cmpl
aam
xchg
mov
adc
mov
lods
inc
sub
aaa
cmp
hlt
aas
jmp
ds
or
loop
fildl
cmc
xchg
lea
lea
push
pop
scas
sbb
repz
cli
fldl
xor
sbb
sbb
mov
mov
lock
adc
pusha
insl
cmp
and
repz
xor
fcoms
ja
mov
mov
xchg
pop
sub
cs
mov
mov
or
lea
leave
jnp
je
sbb
mov
push
jmp
bound
dec
add
stos
je
cmc
movsl
cmp
sub
push
jle
dec
repz
and
jbe
nop
xor
stos
ljmp
or
test
cld
adc
or
inc
pop
popa
subb
pop
pop
sbb
mov
ss
in
psrlw
or
cld
pop
and
sbb
dec
jge
pusha
push
jl
pushf
test
sahf
adc
scas
iret
jno
add
cld
mov
daa
sahf
arpl
leave
aad
adc
hlt
push
dec
cmpsb
jl
shrb
cmp
hlt
gs
jecxz
pop
inc
jecxz
ss
stc
sbb
aaa
mov
jne
je
subl
enter
jmp
ret
mov
mov
add
inc
insl
mov
in
or
mov
lcall
mov
adc
mov
cli
pop
aad
xorl
sbb
mov
or
dec
add
jecxz
aad
jmp
xor
dec
addr16
adc
call
add
xchg
popa
popf
push
in
mov
mov
xchg
cmpb
sti
sub
pusha
movsb
sub
fisubl
je
push
cmp
ret
ja
das
sahf
sahf
inc
fadd
mov
addr16
push
cli
test
push
push
push
in
pop
dec
lret
mov
sub
outsl
arpl
lcall
mov
sbb
adc
and
and
scas
sub
sub
sbb
mov
maskmovq
jge
lds
mov
sub
mov
push
mov
dec
xchg
movsl
jb
mov
ljmp
mov
adc
insb
and
sbb
scas
ret
jp
fdivl
scas
inc
push
jmp
in
js
jg
or
push
inc
int
fisubl
xchg
in
mov
int3
dec
inc
outsb
je
xchg
mov
push
xlat
lods
mov
jl
aaa
jl
jle
and
adc
jo
cwtl
popf
adc
imul
fwait
cwtl
sub
mov
xchg
xchg
rep
add
dec
sub
xchg
stos
adc
scas
push
cmp
pop
xchg
lret
std
aad
xor
sahf
sub
pop
jbe
push
aam
push
imul
adc
cs
jo
repnz
movsl
or
inc
movsb
add
xlat
fidivl
hlt
stc
cld
test
jg
test
clc
testl
xchg
xlat
ss
mov
cmpsl
imul
popf
dec
cmpsb
out
pop
addr16
add
cld
adc
fildl
sub
push
ffree
test
cmp
push
xchg
aas
imul
into
xchg
mov
jl
push
icebp
repz
xorl
xchg
sub
js
dec
out
jecxz
outsl
negl
in
sub
push
cmp
adc
add
and
xor
push
jno
sub
dec
cmp
in
ret
dec
mov
mov
add
ja
cmc
pop
mov
mov
out
shlb
leave
xor
stos
push
test
mov
pop
fadds
push
mov
pop
repnz
pushf
xor
xorl
or
loopne
sbb
ss
or
xor
push
ss
loope
and
mov
mov
jmp
das
mov
mov
dec
clc
enter
lock
shrb
pop
add
add
mov
jp
or
jmp
mov
inc
or
and
mov
popa
xchg
jae
dec
inc
pop
inc
dec
cmp
xor
fisttps
out
xorb
arpl
aad
out
aam
rclb
leave
sbbl
rcrl
int
and
jno
int
iret
mov
mov
mov
mov
sub
jo
repz
pop
sbb
jnp
mov
fldcw
xchg
mov
pop
cmp
test
pop
jae
add
jo
jns
jno
pop
xor
bnd
xor
jns
push
mov
mov
stc
int
lcall
mov
int
fcmove
decl
and
push
fs
or
movsb
je
mov
adc
arpl
mov
dec
jge
shrl
and
addb
imul
and
cmp
mov
rorb
mov
pop
pop
xchg
add
jno
repz
lret
arpl
dec
popa
mov
in
jmp
lahf
adc
aam
cli
cwtl
fcmovne
sarl
loop
push
and
mov
push
jne
adc
push
cli
sub
mov
cmc
mov
mov
test
rcrl
cmovle
out
imul
lahf
xlat
xchg
dec
std
jnp
subb
mov
sti
movsb
shlb
es
lods
arpl
inc
pop
scas
pop
movsl
mov
add
xchg
mov
out
adc
repnz
mov
push
lea
sbb
mov
sub
gs
gs
test
or
mov
pusha
leave
and
sbb
push
and
cmpsl
stc
cmpsl
movsb
push
pop
cmp
jle
jge
loope
jge
fadd
out
std
dec
xor
push
int
loope
movsb
or
xrelease
es
loop
lock
mov
add
adc
fstpt
loope
std
push
cs
mov
imul
ret
mov
mov
push
push
repz
mov
xchg
inc
stos
cmp
push
inc
in
inc
enter
sbbb
pop
cmc
sbbb
sahf
sbb
mov
or
shlb
push
lret
mull
xor
mov
scas
sahf
or
cwtl
out
mov
adc
shl
jbe
cmp
cltd
cs
std
rolb
adc
js
lret
lcall
shr
cltd
or
lock
hlt
xorl
or
fcoms
pusha
sbb
pop
cld
mov
or
and
sbb
jl
icebp
adc
cmc
fiadds
sub
fistpll
jne
jnp
in
and
push
push
add
cmpsl
xchg
pusha
jno
cmp
cmpsl
and
xor
pusha
inc
jo
mov
mov
es
mov
icebp
cli
repz
cmp
dec
test
mov
sbb
nop
stos
or
inc
push
pop
ficoml
mov
inc
sub
in
in
push
enter
mov
add
into
push
pusha
cs
inc
add
xor
sub
mov
ss
xor
ljmp
clc
cmp
lea
mov
test
imul
mov
push
arpl
mov
fdivl
add
aad
add
adc
imul
xchg
mov
push
mov
push
jl
fistl
ljmp
aad
shlb
mov
enter
dec
fs
adc
pop
jbe
imul
xchg
push
into
add
xchg
jg
hlt
pop
rcl
mov
mov
xchg
jmp
or
fwait
hlt
incl
inc
pop
fistps
test
leave
push
mov
mov
add
stos
jl
clc
fwait
imul
bound
dec
fdivs
int
jo
lods
and
push
out
jns
mov
notb
dec
cmpsl
pop
scas
xor
enter
fs
xlat
daa
adc
leave
adc
sti
dec
pop
push
testl
add
pop
fisttpll
cmp
fbld
dec
pop
sbb
movsl
push
pop
fwait
lea
mov
push
bound
cs
ds
adc
mov
sarl
in
xchg
sub
push
or
leave
cli
fmuls
or
xchg
xchg
xor
and
pop
imul
sar
loope
aaa
gs
mov
dec
push
xor
lcall
xlat
adc
lea
xor
subb
dec
subb
inc
imul
push
push
shl
and
cltd
xchg
jle
sbb
repz
rclb
inc
leave
dec
jp
sbb
mov
mov
movzwl
mov
mov
sbb
inc
std
enter
inc
inc
jge
sbb
mov
outsb
push
push
scas
sbb
in
scas
cmp
divb
loop
and
pop
repz
pop
daa
scas
sub
and
jb
fs
rorb
mov
jae
xlat
mov
xor
push
aam
mov
sahf
jl
pop
mov
das
sahf
ret
xor
mov
inc
mov
add
fmuls
in
cwtl
pop
ja
mov
loope
mov
push
pop
push
pop
loopne
mov
lcall
sbb
aaa
push
in
add
inc
loop
std
mov
int3
push
vmovupd
cmp
sti
aaa
nop
popf
lret
out
and
cmpsb
jmp
add
jbe
enter
jecxz
aam
xchg
les
scas
adc
mov
inc
add
inc
push
inc
xor
cmp
shlb
das
sub
pop
movsb
push
addr16
cmpsl
cwtl
in
adc
int
in
arpl
cmp
lea
xor
out
jne
add
insb
inc
add
aam
rep
iret
in
mov
out
inc
and
es
cmp
fwait
rorl
test
aaa
sub
sub
loopne
mov
xchg
or
daa
push
mov
mov
rclb
icebp
aad
adc
int
push
cmp
dec
ss
sti
jecxz
mov
imul
dec
xchg
sub
cmp
and
test
mov
adc
lret
add
fstps
mov
data16
fldenv
ljmp
cmp
rorb
hlt
inc
mov
dec
pop
cmp
outsl
loop
and
jl
sbb
xor
leave
and
add
add
dec
jnp
int
dec
cmp
loopne
mov
jg
rcll
push
iret
outsb
es
mov
mov
xorb
inc
sub
jge
dec
gs
rcl
adc
xor
nop
ret
leave
test
test
lcall
jecxz
dec
leave
push
je
outsl
jns
mov
adc
xchg
cltd
rcrb
popf
pop
push
mov
pop
ss
push
add
add
cmp
ds
adc
clc
repz
ret
push
push
push
idivb
mov
cli
sub
scas
adc
adc
mov
or
jo
mov
arpl
rol
hlt
push
rcl
push
push
aaa
in
inc
push
js
es
enter
stc
aas
mov
test
jg
jns
jne
adc
inc
inc
or
mov
sti
mov
dec
stos
push
cld
xchg
les
hlt
mov
dec
adc
outsb
popf
inc
mov
jnp
cmp
in
inc
sbb
std
jnp
jp
mov
jg,pn
insl
mov
inc
stos
lcall
mov
push
cmp
movl
add
scas
movsb
jp
and
out
push
add
or
push
stc
mov
lea
mov
std
out
pop
xor
or
frstor
and
stos
popa
gs
pop
mov
push
imul
ficomps
sbb
imulb
add
jno
or
push
icebp
cmp
sbb
inc
ja
lret
add
and
mov
cs
hlt
jmp
mov
pop
cmpsb
fwait
mov
pop
mov
out
pop
push
mov
sbb
add
cmpsl
sub
jg
testl
mov
in
sbb
daa
ja
adc
sbb
cmp
clc
jecxz
fadd
or
lret
pushf
mov
lods
push
sub
test
arpl
bound
mov
les
push
cltd
push
add
imul
fsubs
cltd
jmp
or
xchg
das
jmp
ret
or
in
mov
movsl
and
aaa
mov
xor
inc
sub
inc
push
adc
sub
aad
xor
adc
aam
mov
sub
test
adc
shl
into
stc
pushf
xchg
test
lods
insl
mov
in
mov
mov
aaa
mov
dec
call
bound
jmp
sbb
jb
ret
mov
mov
jge
jbe
lods
mov
add
cmc
test
hlt
pop
cmp
aaa
cmp
aad
or
sarb
push
mov
hlt
ficoml
inc
add
ljmp
adc
and
cmp
mov
in
and
int3
imul
lcall
shll
in
sub
rolb
rcrl
add
xchg
idivl
ja
jo
cmp
pop
shl
inc
lds
addr16
xor
imul
push
and
ja
add
cltd
jmp
jnp
jl
iret
outsl
leave
jle
ja,pn
jne
xor
aaa
faddl
jb
mov
dec
scas
fstp
jne
pushf
popl
jae
pop
scas
ljmp
stc
lahf
pop
pop
push
xchg
pop
lret
mov
shrl
and
push
add
dec
insb
lret
push
dec
int3
mov
cmp
pusha
adc
mov
test
in
mov
mov
idivl
jb
push
xchg
popa
mov
insb
test
mov
repnz
sbb
scas
inc
dec
mov
mov
add
pop
push
cmpsl
cmp
sub
xor
fs
cmp
fiaddl
cltd
sbbl
jo
or
in
fmul
notb
ret
push
push
sub
xor
xchg
addr16
es
jne
enter
mov
inc
sbb
inc
dec
sti
repz
xchg
aam
fwait
lret
and
xorb
mul
out
in
hlt
mov
pushf
mov
sbb
lret
jg
and
adc
repnz
mov
cs
mov
scas
fdivrl
stos
mov
xor
aaa
lcall
cmc
sbb
movsl
pop
pop
daa
cmp
or
inc
addr16
inc
xchg
leave
dec
dec
test
or
xlat
sbb
sub
push
or
scas
repz
lahf
push
lea
xlat
lcall
push
and
mov
add
fnstcw
xchg
lahf
pusha
push
mov
push
cmpl
mov
add
inc
jmp
adc
or
add
jb
pop
pop
xor
xor
add
insb
and
mov
jns
insl
sbb
and
fsubr
cwtl
cmp
pushf
cmp
mov
xchg
add
or
mov
mov
jl
test
lea
ret
jmp
cmp
pop
getsec
or
in
jp
arpl
push
insb
mov
outsb
inc
mov
add
je
mov
xchg
add
es
pop
in
mov
adc
xchg
out
xlat
repnz
test
pop
mul
xchg
bound
dec
daa
arpl
push
into
push
dec
in
les
popf
and
aaa
dec
adcb
movsl
pop
jbe
or
pop
sbb
jecxz
xlat
and
testb
pop
icebp
cli
jbe
jno
data16
xchg
cmc
jmp
pop
and
andl
andb
ja
jle
and
mov
lods
adc
add
daa
lahf
lret
adc
insl
bound
push
or
fisubrs
jge
aam
outsl
scas
cmp
insl
cmp
xchg
jp
or
mov
dec
imul
cmp
pop
cmc
sti
mov
add
xor
or
fwait
adc
test
insb
jmp
dec
jno
cli
ret
push
jae
or
out
cmp
sahf
or
or
dec
cltd
add
mov
mov
xchg
sahf
filds
mov
push
mov
repz
sub
jle
or
push
ds
stos
xor
jae
fisubs
gs
push
inc
fsts
insl
push
scas
or
stos
fstpt
mov
cmpsb
jmp
mov
jl
clc
cmp
cmpsb
xor
pop
insl
dec
and
das
lds
jg
stos
rorl
sti
pop
jb
xchg
cmp
mov
sub
mov
or
xor
lea
fstpl
push
lods
mov
sub
iret
das
jmp
and
std
jecxz
push
hlt
ds
jno
pushf
mov
rcrl
sbb
inc
xor
jmp
jmp
lods
int
test
imul
mov
sub
stos
aad
xchg
and
repz
sbb
jp
xchg
fdivs
ja
sub
cwtl
gs
mov
inc
or
jns
sub
data16
cwtl
les
push
dec
lahf
into
or
inc
dec
nop
xchg
mov
and
sbb
mov
xor
aam
pop
push
ja
rcll
scas
jecxz
in
popa
clc
popf
outsb
mov
ja
shll
in
cmp
test
adc
mov
mov
test
shll
pop
fs
aad
xorb
inc
jle
ja
adc
roll
sbb
loope
sbb
mov
out
xchg
ror
fstp
xor
jle
xlat
mov
xor
sbb
inc
cmc
add
adc
xchg
callw
dec
ljmp
pop
jecxz
xor
scas
das
rcr
add
loopne
push
out
in
sbb
lcall
lock
xor
nop
ret
xchg
je
test
je
arpl
pop
or
xor
lock
mov
xchg
and
add
movsl
cwtl
push
add
inc
cmpsl
jle
dec
inc
shll
cmp
rclb
push
mov
push
fldl
clc
stc
fistps
test
loope
xor
add
jl
in
pop
mov
popf
popl
icebp
jmp
push
aaa
mov
das
rcrb
and
call
jb
xor
mov
ss
jno
insl
icebp
cwtl
push
dec
cmp
cmp
imul
scas
cwtl
ret
dec
insl
js
cwtl
jmp
or
imul
xchg
or
or
imul
and
pop
jns
leave
adc
add
imul
scas
mov
and
ret
mov
jns
sub
ja
or
xor
cmp
jbe
jg
mov
aaa
jbe
in
shlb
xchg
adc
adc
repnz
mov
push
mov
rcrb
out
dec
dec
mov
adc
outsb
cmp
orb
jp
out
mov
sub
xchg
cmp
xchg
jmp
or
add
leave
repnz
adc
push
mov
iret
xchg
mov
jb
mov
rcrb
xor
cmpsb
addl
dec
or
punpcklbw
jmp
loopne
mov
and
pop
lcall
into
push
sbb
in
push
push
sti
xchg
test
adc
add
push
cmp
and
gs
push
and
add
or
jge
mov
gs
cmpsb
lds
fwait
ret
fdivrl
push
jl
and
push
sub
scas
testl
mov
xor
cmp
add
mov
push
xchg
mov
hlt
push
push
int
jl
xor
xor
and
into
lret
add
pop
mov
and
lcall
jl
es
sti
fldl
nop
jmp
ja
loopne
filds
mov
shrl
hlt
cmc
int3
or
aaa
call
test
adc
dec
shll
push
or
dec
push
mov
lds
dec
repz
adc
add
movsb
push
push
mov
cmp
jecxz
je
cld
adc
mov
decl
jmp
fwait
mov
jns
mov
dec
icebp
lds
pop
stc
popf
int
imul
mov
in
push
mov
outsl
sbb
outsl
pop
push
inc
and
sub
call
mov
sub
icebp
std
test
mov
inc
ret
or
add
nop
out
push
test
iret
rcrb
sbb
pop
jo
loop
movsb
cld
mov
adc
scas
xchg
adc
cmp
aam
cmp
fistl
lods
push
jecxz
rorl
inc
shrb
adc
rorl
mov
aad
gs
bound
mov
dec
enter
xlat
ss
outsl
jg
push
xor
loopne
mov
cmp
xor
jnp
scas
leave
repz
mov
mov
or
daa
adc
loope
cld
aad
inc
movsb
enter
inc
sahf
xchg
add
jnp
sti
mov
mov
aam
or
vpaddw
pop
push
fldt
xchg
imul
or
adc
pop
repz
mov
roll
or
fs
xor
mov
jle
mov
xchg
out
imul
xchg
dec
fildll
adc
test
or
das
loope
xor
int3
add
dec
jmp
push
shr
stos
loop
xor
cli
inc
repnz
mov
cmc
daa
jns
andb
fsub
jns
addb
pusha
adc
inc
pop
in
pop
mov
int
add
ret
jb
decl
xor
add
fmul
xor
sub
arpl
sub
js
xchg
cmp
mov
dec
scas
add
ljmp
daa
xor
inc
testl
aas
fcoms
lahf
dec
sub
dec
mov
sub
and
xchg
push
mov
xchg
push
out
sbb
add
xor
push
push
stos
push
xor
inc
aam
xchg
xor
cmpsl
incb
cwtl
dec
sub
stc
mov
fimuls
inc
mov
sbb
mov
xchg
inc
int3
mov
cltd
insl
enter
sbb
jo
int
repz
nop
mov
pop
xchg
int
leave
inc
loop
push
mov
loopne
loope
adc
inc
or
out
xchg
out
xrstor
sub
loop
pop
cmpsl
jmp
int
push
pop
pop
push
dec
cmp
icebp
dec
push
out
pusha
pushf
xchg
jp
lods
adc
adc
dec
add
test
mov
out
push
mov
outsb
ficomps
cmp
push
and
or
or
mov
mov
cld
fs
or
sub
movsl
jno
out
fcmovnu
les
cmp
repnz
dec
out
cmp
mov
stos
insb
iret
pop
jne
adc
cwtl
scas
xlat
jne
cmp
cwtl
mov
repz
xchg
imul
xchg
int
push
xchg
and
enter
add
enter
enter
sbb
adc
mov
cli
or
lret
subb
pop
out
or
adc
pop
push
in
or
push
jle
mov
cwtl
jae
stos
and
cli
jge
mov
mov
mov
test
out
repz
ljmp
mov
add
lret
dec
cmp
in
scas
into
xlat
aaa
in
js
push
cwtl
scas
ss
ret
mov
sub
xor
lcall
dec
jp
jp
and
mov
icebp
mov
adc
pop
lahf
xchg
and
and
sbb
push
rcrl
in
cmp
fwait
daa
testb
mov
filds
xchg
std
fcoml
dec
outsl
mov
push
cmp
cmpsb
sub
loop
fimuls
jge
jb
and
sahf
cmp
pop
leave
test
mov
aaa
out
std
sub
xorl
mov
subl
jg
mov
xchg
add
pop
movsl
mov
mov
push
mov
outsb
jb
mov
dec
scas
add
pop
mov
scas
lods
mov
das
pushf
repz
jecxz
cmp
xchg
pop
push
rcrb
mulb
xchg
bound
stos
jle
mov
lcall
jmp
and
stos
data16
cmp
mov
in
inc
push
or
push
inc
repnz
sbb
mov
lods
lea
aam
push
push
iret
popa
mov
adc
es
xlat
lods
jno
sub
mov
fs
push
adc
addr16
jb
xor
pop
mov
sbb
rorl
cli
and
inc
test
shrb
inc
sbb
mov
push
iret
jmp
jl
repz
inc
lds
sbb
dec
shlb
adc
cmp
loopne
out
mov
lcall
jne
mov
pop
and
mov
xchg
mov
out
push
jge
or
and
repz
xchg
add
repz
pushf
imul
das
dec
pop
in
jmp
mov
pop
push
cmp
jns
in
inc
xor
or
dec
scas
test
cltd
ficoms
cwtl
nop
mov
cli
jbe
pop
dec
lcall
jle
loopne
or
rclb
dec
xchg
testb
scas
jo
test
aad
mov
call
mov
add
push
or
ffree
adc
test
xchg
fadd
mov
and
cs
sub
mov
stos
popl
xchg
in
xchg
jp
dec
and
pop
mov
mov
mov
jle
mov
adc
test
int3
movl
inc
jno
push
idivl
jb
pop
push
mov
sarb
bound
enter
cmp
sbb
xor
fwait
rolb
mov
jae
xchg
sahf
mov
movsl
jo
repz
std
ret
aam
pop
xor
and
mov
push
inc
inc
gs
les
mov
and
test
adc
dec
jmp
insl
pop
test
adc
jns
enter
mov
xor
shl
adc
dec
adc
in
or
add
imul
jne
cs
nop
dec
sub
mov
xor
dec
mov
mov
mov
addr16
mov
mov
divl
mov
jp
and
add
repz
adc
cli
pop
add
or
or
push
sub
incb
sahf
loopne
lret
enter
xchg
into
icebp
cmp
icebp
pop
jl
jp
mov
adc
add
jmp
stos
scas
test
fisttpll
insb
test
bound
aad
dec
mov
fmuls
sbb
mov
lods
adc
movl
aam
mov
idiv
xor
inc
arpl
sbb
mov
movsl
clc
insl
xor
xor
sbb
push
sbb
xor
pushw
cmp
pop
mov
fcomps
sbb
jge
sbb
scas
movsl
ret
insb
sbb
shlb
mov
sbb
fsubp
je
push
mov
fneni(8087
push
repnz
add
je
popa
push
mov
mov
sbb
and
insb
shll
xchg
popa
cmpsl
xor
popa
int3
adc
jnp
lds
scas
cwtl
sbb
out
sbb
inc
add
pop
hlt
mov
sbb
adc
xor
and
movsl
sbb
cmpsb
test
sub
jno
test
ja
les
pop
pop
dec
into
int3
xchg
stos
mov
push
adc
mov
jg
stc
sbb
or
test
mov
push
or
xchg
fdivs
mov
push
xchg
stos
insl
or
xlat
add
push
jns
addr16
dec
cltd
pop
popa
add
dec
sub
add
sbb
cs
xor
cmpsl
add
call
pushf
pop
cli
adcl
mov
jne
test
inc
xchg
enter
mov
jmp
sbb
mov
dec
xchg
pop
std
mov
cmp
arpl
dec
pop
mov
or
dec
jb
ret
dec
aad
lret
sbb
fisttps
cltd
test
movsb
or
push
mov
jge
in
mov
jecxz
popa
movsb
inc
jne
aam
loop
push
shrb
sahf
movsb
xchg
addb
xchg
jae
adc
int
gs
inc
and
push
jmp
into
push
scas
repz
mov
jbe
dec
lea
or
loope
lahf
lcall
mov
dec
mov
ljmp
mov
push
xlat
dec
js
loop
pop
pop
jle
test
popf
shlb
stos
pushf
lcall
pushf
cmp
mov
sub
mov
xchg
rorb
sbbl
jle
sbb
andl
lods
jmp
ss
jmp
and
or
hlt
test
inc
xchg
jb
jle
push
aaa
add
fcomi
out
pop
mov
leave
or
lea
xlat
lcall
out
xchg
test
or
shl
dec
loope
lcall
mov
loopne
sti
pop
jl
mov
lds
notl
fcmovu
outsb
hlt
clc
aam
addr16
clc
test
xchg
pop
std
jb
jmp
arpl
adc
push
push
test
or
xchg
cwtl
insl
mov
mov
pushf
test
repz
daa
das
in
add
xchg
loope
inc
sbb
jb
ret
fs
dec
jge
nop
daa
cmp
jg
or
xchg
out
mov
xchg
mov
lahf
das
repnz
out
cmpl
adc
out
sbb
popa
call
scas
fists
cvtpi2ps
mov
mov
fdivrl
push
push
repz
test
mov
jmp
dec
dec
jecxz
pop
pop
js
mov
cltd
adc
cmc
fidivs
loope
mov
xchg
jp
repz
scas
cmp
xor
divb
leave
shll
mov
pop
or
push
jmp
fildl
lock
leave
mov
cmp
jl
in
pop
adc
adc
movsb
adc
jecxz
push
jmp
mov
fs
add
push
add
cwtl
cmp
ret
in
xor
xchg
sar
mov
rorb
mov
inc
add
add
stos
test
adc
adc
or
adc
or
xchg
sbb
or
or
rorb
push
movsl
mov
sub
shll
jns
addr16
xchg
cmp
std
imul
jno
and
cmp
stos
lea
dec
pop
cmp
jge
pushf
imulb
push
cmp
std
dec
jmp
pop
dec
mov
xrelease
iret
test
or
arpl
cmp
sbb
push
add
mull
jb
pmaxub
xor
js
jg
add
stos
in
jp
jnp
push
dec
enter
fs
lahf
das
mov
imul
dec
push
pushf
fidivrs
iret
cmp
imul
lods
call
jecxz
call
shrb
inc
add
dec
cmpsb
cmp
lock
cli
jmp
add
rorb
sbb
flds
aam
mov
cwtl
push
lret
mov
sti
aam
adc
andb
imul
fcoml
push
sub
aaa
jl
lcall
cmp
pop
push
xchg
movsl
aad
scas
enter
fdivrs
ljmp
popf
adc
mov
push
adc
sar
and
adc
inc
jp
jb
clc
enter
shll
dec
test
loope
add
loope
sti
pop
fninit
cmc
cld
adc
mull
jmp
sub
popa
or
testl
sbb
mov
mov
and
push
mov
mov
dec
and
jmp
imul
push
inc
in
pop
dec
xchg
in
fs
movsb
test
or
cmp
xchg
sbb
dec
adc
pop
adc
dec
and
call
cmc
push
jle
adc
rcrl
pop
jbe
add
fdivrs
jg
pop
xchg
and
movsb
sbb
into
decl
mov
std
push
je
iret
int3
test
xchg
pushl
jp
cmp
cwtl
mov
pop
mov
lods
rorl
jbe
pop
in
mov
cmpsl
movsl
or
add
mov
cli
jp
popa
mov
cmp
rorb
mov
sbb
jmp
push
test
add
test
and
loopne
ficoml
adc
lcall
xchg
add
imul
lds
jns
out
fists
repnz
fidivrs
pop
jns
out
cmc
and
pop
lret
pop
aas
mov
mov
inc
les
cmpsl
jne
cmp
iret
inc
adc
jl
mov
test
fs
ds
loopne
cmpb
jp
movsb
ljmp
jmp
shll
push
scas
or
nop
cmp
je
mov
fdivrs
mov
sub
repz
adc
mov
fwait
dec
xchg
mov
sub
xchg
subl
add
shll
push
mov
mov
and
and
mov
or
inc
ja
mov
xor
aaa
in
cmp
mov
mov
pop
jmp
or
add
call
repz
sbb
mov
push
add
cmpsl
inc
inc
inc
das
sbb
lahf
ficomps
mov
out
sub
lods
int3
xchg
ljmp
xor
xchg
ficomps
inc
mov
mov
pop
lock
lods
insb
aam
es
xor
rorl
clc
es
pop
mov
xchg
data16
loopne
inc
cld
xchg
push
in
sahf
leave
insb
sbb
fisubrs
stos
dec
imul
mov
orb
sub
pop
stos
lods
dec
mov
mov
fwait
jg
and
int3
inc
faddl
fidivrl
and
jge
daa
out
or
ficompl
sub
leave
xor
mov
xchg
cli
mov
lods
movsl
ljmp
pop
lods
stos
or
and
jnp
loop
outsl
mov
push
xor
dec
cld
mov
mov
es
call
scas
pop
mov
inc
cmpsb
pop
sbb
and
fs
sbb
subl
imul
mov
stos
inc
mov
xor
clc
pop
lds
sbb
outsl
mov
jbe
mov
loop
aam
dec
push
fcomps
dec
aam
cwtl
adc
iret
leave
adc
inc
cmpsb
sub
mov
iret
scas
mov
pop
push
jle
iret
jmp
mov
js
pop
pop
leave
fcmovb
fists
aam
fbstp
dec
std
ds
xchg
arpl
shll
std
push
xchg
icebp
clc
ljmp
outsb
out
mov
jecxz
adc
adc
out
out
inc
loope
lahf
dec
mov
xchg
mov
add
aaa
lea
adc
sub
pop
mov
adc
xchg
mov
add
shl
or
or
jge
enter
outsl
lcall
mov
pop
cmp
sub
fildll
shrb
scas
test
shr
or
dec
mov
jbe
mov
lods
inc
aas
loopne
mov
and
out
inc
and
lock
cmp
insb
xor
movsb
jle
jecxz
push
mov
incb
rclb
push
ffreep
or
sbb
mov
xchg
xchg
add
mov
ljmp
push
test
mov
pop
jae
cmp
cmp
jno
inc
outsl
and
test
movsl
insb
mov
pop
mov
fwait
lret
fld
gs
js
leave
stos
and
and
xchg
inc
sbb
and
out
or
jg
jb
and
adc
adc
mov
xor
lea
push
and
ja
and
xor
mov
adc
ret
aaa
add
fisubrl
rcrl
loope
fmulp
adc
sub
into
gs
orl
mov
in
scas
add
jle
or
aas
fistpl
sbb
push
xor
xor
in
cmpsl
js
add
add
pop
push
scas
mov
xchg
sub
insb
int3
jg
xor
push
cmpsl
dec
jl
cmpsl
sbb
cmp
dec
sub
sub
or
test
cmc
xchg
outsb
fld
test
outsl
pop
xor
rcr
xor
jmp
push
repnz
adc
xchg
fbld
inc
repz
xorl
ret
sbb
push
cltd
mov
jnp
arpl
xor
cs
ret
jle
leave
push
or
mov
jmp
in
mov
lods
sahf
xchg
adc
sbb
icebp
mov
adc
xor
inc
cmp
js
mov
xchg
popa
cmp
dec
dec
and
fwait
xchg
ljmp
aas
add
xlat
add
lds
pop
imul
mov
mov
sub
ja
dec
shrb
test
pop
or
decb
mov
mov
mov
mov
mov
cmpsl
iret
pushf
test
lods
pop
lret
inc
and
mov
fs
inc
aaa
cmp
push
pop
jp
cmp
mov
popf
and
leave
test
pop
jno
add
push
push
mov
aas
hlt
scas
outsl
notb
lods
mov
xor
add
inc
cmp
push
mov
mov
int3
push
ror
popf
test
push
cmp
mov
cmp
dec
outsb
addr16
ror
ret
or
adc
scas
lea
xchg
cli
pop
insb
les
lods
jb
test
lahf
shr
aas
cwtl
push
adc
fcmovb
popf
mov
mov
out
nopl
iret
cltd
dec
stos
pop
dec
jmp
imul
roll
ret
jno
adc
or
and
out
jmp
daa
jg
ffree
add
jb
dec
orb
xchg
shll
or
lret
pop
add
push
lods
mov
sub
jl
mov
jmp
mov
mov
pop
dec
inc
xchg
adc
cld
mov
mov
pop
add
shrl
mov
sbb
ja
insb
sbb
inc
sub
inc
daa
or
jne
sbb
fstpt
sub
mov
testb
and
test
jbe
push
jae
cltd
sti
push
hlt
sub
stc
call
std
ljmp
in
dec
sub
fldcw
inc
lods
jae
lds
or
jbe
mov
sbb
mov
or
out
cld
sub
cmp
add
repnz
cmp
mov
mov
xchg
nop
sbb
rcrb
iret
mov
jne
fcmovne
add
pop
add
stc
adc
dec
jno
iret
addr16
adc
or
daa
and
cli
mov
jp
mov
jne
mov
adc
cmp
fscale
pop
or
mov
jno
aad
int3
aas
stc
sub
push
push
dec
sbb
jecxz
cwtl
xor
jge
or
add
mov
popl
pop
fistl
pop
pusha
push
rcl
cld
popf
and
shll
cmp
mov
test
lods
push
dec
ds
fildll
pop
xor
pop
rorl
xchg
inc
loopne
pop
int3
pop
insb
mov
inc
rcr
ret
ljmp
pop
xchg
xor
ds
add
lock
fnsave
cmpsl
fdivrl
adc
sub
mov
pop
adc
das
in
loop
rolb
jle
mov
addr16
push
or
inc
inc
enter
cmp
stc
daa
pop
cmpsl
es
loop
push
or
mov
adc
sub
js
adc
push
aad
push
stc
mov
lcall
or
add
rsqrtps
ds
xchg
jne
mull
jae
ficoml
mov
out
addr16
xchg
mov
repz
push
push
addl
stos
push
and
dec
adc
push
push
jmp
cmpsl
xlat
xchg
pop
adc
sbb
jge
fidivrl
aaa
mov
cli
mov
iret
lcall
jno
pop
shr
mov
mov
rcll
aaa
hlt
loope
rcll
sub
ret
xor
add
hlt
jno
cmc
fcoml
push
ljmp
arpl
inc
dec
xchg
cltd
gs
mov
adc
popf
ficompl
cmpsb
sbbl
xchg
xor
xlat
add
jmp
fstpt
mov
pop
dec
cmp
or
sbb
mov
arpl
inc
cwtl
lock
and
mov
push
pop
into
lock
aam
mov
loope
push
por
sub
mov
push
jno
mov
and
mov
pop
jno
dec
push
jle
div
push
imul
pop
pop
or
das
cmpsb
jnp
mov
mov
add
test
or
mov
gs
loope
cld
pop
bound
push
pop
loope
in
subl
sub
and
lahf
imull
lock
sar
les
addl
lods
cs
in
aam
mov
mov
ret
fmull
int3
push
or
mov
ljmp
mov
adc
dec
test
stos
lret
shlb
movsb
and
rol
xchg
xlat
mov
mov
je
rolb
inc
andb
cs
into
mov
rcrb
jmp
scas
cwtl
aam
leave
test
imul
testl
pop
popf
mov
add
sbb
ret
or
addr16
jb
out
repz
rolb
dec
jg
cli
movsb
cld
test
mov
push
or
loopne
adcb
int
dec
sub
adc
mov
mov
mov
in
xor
cld
fdivrl
fdiv
cmp
jno
mov
xchg
pop
inc
sub
jl
xchg
out
pop
add
jae
sub
xchg
mov
pop
pop
lea
sub
in
mov
jg
sub
insl
addr16
cld
je
mov
xor
cmp
push
test
mov
push
sbbb
stc
cmp
ja
test
outsl
pop
in
pop
es
imul
lods
jmp
pop
test
lret
and
jno
adc
scas
xchg
mov
out
imul
mull
leave
pop
mov
xchg
pcmpeqd
fsts
push
adc
sub
mov
pop
ret
cmp
das
push
xchg
jge
leave
int3
fldenv
add
and
pop
in
mov
test
sub
nop
inc
fisubl
mov
inc
xor
sbb
push
pop
jg
inc
out
jne
pop
pop
ljmp
and
fnstenv
call
xor
hlt
outsb
stc
andl
push
aaa
pop
psrlq
jp
push
stos
das
outsl
jo
dec
std
je
cld
cmp
jb
mov
push
and
loope
lret
push
insb
out
test
ljmp
inc
std
in
mov
jb
int
stc
loope
roll
push
subl
imul
daa
inc
cmc
insb
cmpsb
cmp
out
aam
into
jp
sarb
sahf
cmp
outsb
lds
aam
or
andb
aaa
cs
jmp
xchg
enter
add
dec
push
imul
jmp
dec
fmuls
cmpsb
stc
test
std
jb
mov
aam
inc
rcl
sub
fwait
fs
cmpsl
push
out
fcomp
int
push
fs
mov
and
outsl
push
and
in
es
es
add
mov
push
int
rcrb
jmp
shrb
mov
adc
cmp
push
cmpsl
sbb
push
jl
ja
xorl
in
cld
mov
loope
xchg
pushf
std
mov
and
jl
leave
shll
sub
pushf
and
sub
data16
leave
mov
cmp
mov
cmp
add
and
std
pusha
dec
shl
pop
jns
cwtl
ljmp
dec
insl
jb
dec
xchg
mov
sbb
fcmovne
mov
sbb
jmp
or
or
ja
in
cmp
mov
cmp
ja
test
pushl
dec
mov
pop
xlat
insb
push
push
sbb
outsb
mov
sti
inc
test
xchg
mov
push
daa
and
cmpsb
in
loop
cwtl
push
sub
xor
push
mov
int
adc
mov
xchg
daa
dec
mov
pop
cmovs
ja
xchg
sub
mov
push
xchg
out
inc
mov
pusha
push
push
push
pop
sub
iret
inc
repnz
aaa
push
movsl
mov
xchg
pop
mov
or
ja
pop
in
lock
gs
cmp
ja
cmp
xor
dec
fimuls
aad
add
push
sub
sbb
stos
lods
loopne
mov
lods
push
lock
xor
icebp
inc
cli
jne
and
lock
mov
mov
xchg
mov
mov
aam
mov
or
push
adc
lret
mov
insb
dec
out
xchg
and
mulb
jp
pop
arpl
loopne
bound
repz
cld
fnsave
add
mov
mov
in
jmp
cmp
inc
aas
lret
shll
jbe
push
jmp
roll
fiadds
xchg
xor
in
add
in
mov
into
dec
or
cmpsl
out
and
aas
mulb
or
or
dec
mov
outsl
cmp
lods
les
cmp
or
sahf
addb
push
test
cwtl
pusha
push
out
mov
cmp
pop
repz
mov
adc
mov
mov
das
cmp
out
lret
mov
pop
lahf
inc
xor
jnp
outsb
movsb
or
clc
inc
aaa
pop
lahf
mov
jl
sbb
out
lcall
pop
jecxz
jno
cmpsl
int
adc
jnp
or
fbstp
sbb
andl
inc
cltd
ret
inc
jg
or
jg
out
cmpsl
lahf
mov
pop
movsl
out
mov
idiv
fdivrs
jae
test
imul
fcmovne
dec
push
iret
fwait
lahf
popf
js
sub
mov
xchg
add
in
push
out
xchg
dec
stos
rcrb
pushaw
bound
xchg
mov
or
sub
imul
sbb
outsb
push
inc
cmp
inc
stos
insb
pop
push
cmpsb
cld
mov
aad
or
mov
jno
sbb
ss
ss
jl
xor
js
lahf
inc
xor
es
sub
cmpsb
test
pop
inc
push
jns
lods
add
jb
push
mov
or
stos
mov
icebp
ret
or
lods
inc
imul
jnp
or
sub
fs
add
add
adc
mov
and
xor
sbb
mov
jne
in
mov
movsb
ret
xchg
out
cmpsb
andl
and
fsubs
inc
cmpsl
cmp
push
mov
push
jecxz
dec
xor
jnp
dec
push
stc
sarb
mov
dec
in
shll
xor
add
movsb
repnz
mov
inc
icebp
mov
add
test
movsl
je
mov
clc
mov
pusha
or
sti
test
popf
adc
jo
inc
nop
in
ror
ja
pushl
mov
inc
icebp
jnp
lahf
mov
push
adc
push
dec
pop
clc
je
cld
aam
ss
push
sub
int3
mov
mov
test
and
sub
xchg
mulb
pop
ss
aaa
push
mov
in
outsl
and
lcall
lods
mov
dec
aad
cmp
sahf
mov
mov
out
int
cmpsb
or
jl
ds
not
orl
sbbb
sub
repnz
mov
push
addb
js
insl
jp
int3
pop
xor
movsb
fisttps
jnp
fbstp
sub
add
cmp
mov
rcr
mov
data16
and
mov
repz
movsb
insl
lock
cmpb
and
and
cli
sbb
adc
pop
mov
sub
mov
inc
lret
push
outsl
stc
push
imul
dec
push
popf
les
scas
outsb
scas
push
je
mov
cwtl
mov
dec
cmp
sbb
sbb
imul
inc
pusha
xchg
cmp
push
fdivrs
jl,pn
sub
pop
sahf
dec
lock
mov
add
mov
and
les
subb
mov
and
dec
in
cltd
or
aad
or
and
fld
icebp
sbb
cld
mov
movsl
xor
lods
ja
or
into
xchg
xor
jbe
aad
jl
jg
dec
cmc
iret
xchg
pop
cmp
dec
fistpll
inc
sbb
repnz
mov
adcb
sub
add
mov
in
push
and
movsbl
xor
mov
das
sub
or
inc
jns
lsl
cli
mov
inc
lret
add
popa
cmp
pop
jbe
jl
push
stos
lahf
call
outsl
pop
pop
shll
cs
test
cmp
int
stos
pop
ja
adc
add
mov
fsubl
add
stc
pop
lock
test
cmpsl
sub
ret
jae
inc
aad
mov
xchg
dec
adc
arpl
mov
and
cmp
pop
mov
sub
jmp
out
dec
lea
dec
call
mov
data16
inc
pop
mov
fs
jle
and
inc
mov
daa
or
add
xor
movsb
cltd
sbb
jg
add
xor
pop
pop
push
sti
adc
inc
ficoml
shlb
xor
sti
sub
sub
xor
test
lahf
dec
test
or
ljmp
add
push
das
stos
addr16
rep
sub
jo
pop
xchg
adc
shl
push
cs
aad
dec
pop
out
jecxz
gs
in
sub
sbb
mov
sbb
pusha
sub
arpl
push
xchg
lcall
mov
mov
in
xchg
pop
fcomi
fcomps
negl
popa
fimuls
ds
sti
xlat
push
popf
inc
cltd
push
dec
mov
into
gs
xor
stc
jl
cmc
aad
test
mov
pop
sbb
sbb
push
mov
mov
pop
xor
mov
pop
xchg
add
or
inc
imul
scas
jmp
lods
fisttpl
and
cmp
push
fsubrs
leave
sbb
addb
push
pop
adc
incb
out
jbe
push
xlat
sbb
or
dec
aad
lret
cmp
mov
scas
inc
ja
sub
push
insl
in
rcl
cmpsb
in
popf
ret
push
cmp
dec
xchg
fwait
add
rcrb
popf
lahf
xchg
out
mov
sarl
mov
sub
pushf
xor
dec
imul
pushf
fisttpl
inc
enter
mov
ret
or
in
cmp
jle
and
cmp
shlb
xor
inc
mov
lret
adc
xor
mov
lea
dec
sub
sbb
pop
add
pop
repnz
cltd
mov
mov
mov
lret
mov
mov
add
rorl
jl
ficoms
lea
lahf
lods
ret
stc
sub
inc
add
xchg
jno
mov
pop
popa
cmp
clc
mov
cltd
mov
iret
push
push
add
jne
and
xchg
fimull
adc
and
mull
xchg
inc
stc
leave
les
mov
xor
test
mov
lcall
repnz
sub
test
pusha
das
pop
cmp
cmp
adc
addr16
jge
sub
into
push
ja
insl
mov
fs
ja
inc
dec
or
xchg
jl
jbe
push
adc
add
stc
in
inc
gs
mov
or
mov
jl
jno
sbb
xor
shrb
mov
nop
jae
sahf
pop
adcl
or
cmp
ret
jo
mov
pop
mov
or
sbbl
xor
mov
sub
dec
aad
mov
gs
pop
sbb
add
insb
mov
or
add
inc
xchg
incl
xor
lods
add
push
dec
xchg
add
pop
bound
mov
mov
fdivrp
adc
imul
sub
data16
cs
dec
mov
ja
popf
testl
jno
pop
arpl
sbb
jp
in
jecxz
xchg
mov
fistl
mov
enter
mov
in
push
and
jo
sub
sub
int
mov
cmp
out
xor
lret
loope
stos
rcl
xchg
mov
push
pop
xchg
arpl
mov
mov
push
lahf
lods
scas
jno
js
sub
data16
test
movsb
loop
lahf
or
mov
inc
mov
pop
jle
dec
cmpsb
mov
sbb
xor
jg
pop
mov
or
mov
sbb
int
lret
mov
pop
push
test
sub
xlat
stos
push
ret
mov
sub
dec
mov
lods
mov
mov
gs
add
ljmp
rcr
xor
cwtl
fdivrs
bound
ja
sarl
in
jmp
xchg
das
jno
adc
jno
das
out
sub
mov
sti
inc
cli
sub
mov
shll
adc
cltd
cmpsl
jl
push
or
fisubrs
lret
shll
nop/reserved
nop
mov
lea
jne
pop
pop
push
push
or
mov
sarb
xchg
sbb
adc
or
or
dec
lret
call
push
dec
iret
xchg
subb
sbb
mov
dec
mov
cltd
iret
xchg
cmpb
jmp
test
xchg
stos
out
int3
stos
out
in
mov
ror
push
jl
fidivrl
adc
mov
push
imul
popf
jo
ucomiss
cs
int
out
xor
xchg
mov
fsubrl
xchg
sahf
mov
lods
sub
adc
outsb
jnp
arpl
outsl
or
or
mov
jne
and
and
sbb
mov
je
insb
iret
push
out
fwait
imul
push
push
jns
push
pop
pop
repnz
rcr
sbb
and
in
lret
std
mov
xor
pop
into
into
test
loopne
stc
pusha
sbb
fwait
movsl
cmpsb
push
test
int3
jo
cmp
iret
jo
cmp
mov
fcomip
cmp
out
je
ret
hlt
mov
mov
lret
mov
dec
push
clc
insb
inc
in
fs
ss
insl
fisubrs
aas
pop
mov
push
lods
jno
out
mov
lods
lods
mov
jp
je
push
push
adc
hlt
and
lds
mov
ficoms
cmp
call
mov
xchg
push
or
mov
lea
pop
xchg
rorb
push
xchg
ja
cwtl
aad
mov
adc
addb
dec
fucomip
into
mov
pop
gs
pushf
fucomp
inc
ljmp
cmp
hlt
mov
add
pushf
push
clc
test
or
ja
add
inc
mov
push
push
insl
xadd
fnstsw
cmp
pop
or
mov
adc
cmp
out
or
arpl
pop
cmp
xchg
aas
or
sarl
add
cmp
icebp
orb
cmp
lock
sahf
stc
mov
mov
insb
mov
xchg
jle
pop
in
shll
cmp
vcvtpd2ps
pusha
push
and
add
jno
cmp
xor
cmp
aam
xchg
push
into
divb
cmp
push
xor
mov
mov
ljmp
ds
cmp
pop
jge
dec
and
mov
mov
add
push
rcrl
or
xor
inc
insl
jbe
mov
inc
inc
cmpsl
mov
mov
push
and
adc
cmp
mov
ljmp
xchg
pop
mov
cmp
shll
fistps
push
cmp
pop
in
inc
ja
push
outsb
mov
insb
cmc
leave
pop
pusha
dec
cmpsl
cmp
popa
rcl
add
jae
rcr
daa
adc
pop
fsts
sar
adc
mov
inc
cmp
mov
les
enter
mov
pushf
lret
lds
fmul
mov
or
test
inc
gs
cwtl
pop
cmpsl
jne
cmp
clc
ret
or
adc
add
xor
or
add
out
popf
xchg
pop
scas
push
inc
sbb
ja
pop
sbb
dec
add
sub
mov
fmul
fldz
xor
shr
inc
arpl
mov
arpl
or
push
repz
mov
out
dec
stc
adc
in
jbe
or
cmp
pushf
mov
out
call
jae
ds
ljmp
out
dec
imul
jnp
cmp
fsubs
adc
or
pop
mov
repz
rcrb
inc
repnz
popf
inc
xor
test
int3
loop
mov
add
cmp
loop
xchg
mov
inc
daa
pop
enter
xchg
ret
mov
mov
mov
push
pusha
jne
sbb
inc
out
cmc
xor
pop
cmpsb
or
std
lock
cld
xor
lock
pop
mov
ror
dec
jae
rcrl
mov
or
mov
aam
dec
test
push
jno
mov
inc
or
mov
dec
inc
xchg
int
lods
orl
je
pop
dec
cmp
test
or
and
dec
xchg
pushf
notb
mov
test
test
sub
inc
pop
int
mov
and
cmpsb
pop
mov
sarl
lret
add
icebp
loopne
sti
xchg
fcmovnb
clc
xor
sub
lock
movsl
jns
cmp
enter
jb
xor
sbb
mov
fbld
push
lods
mov
nop
and
pop
fdivrs
mov
add
jle
es
mov
mov
imul
mov
jl
lock
int3
pop
mov
jmp
pop
jecxz
mov
push
mov
movsb
out
jae
call
mov
sahf
sub
addl
sub
mov
cmp
sub
cmc
cwtl
inc
jmp
ror
gs
sahf
sbb
lea
je
or
jne
sarb
adc
sub
test
mov
cmp
test
pushf
lods
cli
sub
lock
sti
int
cmc
lahf
loopne
dec
mov
xchg
dec
mov
jb
std
fmull
pop
nop
ficoms
push
xchg
mov
mov
cmp
bound
inc
mov
scas
les
lods
dec
mov
inc
jnp
dec
or
enter
cli
cs
jp
fwait
sub
push
jb
inc
push
push
push
mov
ds
sub
or
or
adc
jb
or
ja
and
ret
out
dec
xchg
movsb
test
push
mov
addl
mov
push
xor
lds
stc
test
jmp
lret
xchg
xor
jecxz
pop
ja
inc
sbb
cmp
das
cmp
push
sub
subb
lret
sarb
inc
addr16
sbb
lcall
sub
or
cmpsb
lret
enter
xor
fsubr
inc
leave
jnp
jae
adc
pop
jl
jmp
mov
or
lcall
xchg
ret
mov
es
mull
addr16
cs
fistps
or
sarl
icebp
fsubrl
mov
mov
sub
ret
aam
cmp
mov
push
sbb
and
xchg
testl
push
jl
pop
sub
lds
pushf
cmp
test
loop
cltd
mov
fsubs
aam
push
out
iret
in
push
jo
bound
icebp
and
pop
dec
or
cmpsb
mov
jecxz
into
sub
sbb
fwait
rcll
lods
scas
sbb
stc
jns
xchg
and
sbb
and
fs
xor
cmc
enter
dec
xor
or
fs
cld
and
ss
jno
es
test
js
and
pop
and
mov
push
aas
push
test
into
imul
push
ds
add
adc
mov
clc
mov
sbb
add
inc
ljmp
and
sbb
dec
or
data16
pusha
arpl
sbb
fcom
xchg
mov
jmp
push
or
jmp
test
sub
je
lea
mov
andl
aad
mov
cmpsb
shrl
mov
test
cmpsl
out
or
lods
call
jbe
mov
and
out
jmp
in
push
jbe
lcall
add
rolb
in
sbb
sbb
pop
stos
adc
rcl
scas
and
rol
les
gs
in
add
lret
and
mov
movsl
adc
adc
sarl
addb
dec
idivl
aas
xchg
fmull
out
divl
jge
out
mov
pop
test
std
imul
jmp
xchg
or
out
andb
pop
mov
add
stc
out
sbb
in
xlat
cmp
dec
mov
xchg
mov
inc
push
dec
test
dec
push
pop
push
fisubl
imul
mov
cmp
or
pop
xchg
jge
dec
das
xor
xlat
ljmp
pushf
clc
sbbb
and
enter
xlat
jns
imul
xchg
rcl
es
std
pushf
scas
in
mov
shl
scas
and
ret
cmp
insl
cltd
fisubl
xor
aad
adc
jae
push
push
jns
mov
sub
pop
call
sub
loop
ljmp
aad
mov
jle
mov
frstor
jne
jne
fbstp
pusha
jns
pop
add
push
daa
jge
movsl
xor
ds
xchg
test
imul
jnp
aaa
and
xchg
pusha
ljmp
scas
mov
inc
pop
cli
inc
loop
addl
add
into
ljmp
in
scas
lds
fidivrl
pop
cmp
ds
xor
sub
dec
or
sbb
and
add
xchg
pop
xlat
pop
xorl
fistpll
xchg
push
sbb
loope
dec
and
cmp
lahf
iret
test
xor
pop
jnp
push
mov
test
outsl
mov
out
sbb
test
movl
inc
add
flds
mov
push
cmp
mov
inc
cmpsb
inc
sub
or
inc
cmpsb
mov
leave
in
loop
sbb
sbb
push
mov
ret
popf
mov
pop
lea
out
cli
fs
or
into
xchg
cmp
rorb
xchg
aam
mov
scas
push
jle
lret
shlb
xor
cmp
and
sar
cmpl
fwait
scas
jg
cmp
jle
sub
icebp
sar
scas
cmp
dec
pop
jno
mov
into
jbe
push
push
outsl
in
ud1
xchg
pop
add
pushf
mov
ret
or
je
int
jb
xor
jmp
cs
xor
scas
mov
shl
mull
inc
pop
ret
or
in
imul
lret
icebp
push
lcall
mov
sbb
mov
jp
fnstcw
sahf
pop
pop
pop
into
aaa
inc
lcall
stos
jp
xchg
pop
jp
faddl
fcoms
mov
jle
push
je
cmpsb
cmp
xor
push
push
xor
mov
add
insb
dec
cmp
mov
xor
cltd
mov
hlt
sub
or
push
dec
imul
adc
dec
add
xlat
and
ret
cs
test
cmc
idiv
jl
dec
pop
into
pop
lcall
sbb
in
or
rcll
xor
mov
int3
pop
aas
icebp
xchg
sbb
adc
loop
or
adc
orb
sub
arpl
flds
popa
sbb
sub
mov
fiaddl
fwait
lret
aas
ja
inc
and
xor
gs
imul
fbld
fnsave
lock
cmpb
loop
jne
inc
shll
dec
daa
lcall
jae
rol
xchg
dec
fbld
push
xor
dec
xchg
aad
jbe
test
sub
shll
mov
inc
jmp
pop
lret
fsubl
xchg
xchg
das
pop
icebp
test
cmp
stos
pop
or
jnp
xchg
mov
lea
cmp
test
cli
mov
clts
or
fnstcw
inc
jno
xor
mull
fidivs
jge
sahf
pop
test
push
int
in
out
loope
adcb
mov
or
aaa
pop
fldenv
shrl
enter
add
adc
in
enter
mov
loopne
xchg
rcrb
out
insb
jns
rorb
jno
cmp
popa
pop
negl
and
and
jo
sub
aaa
das
inc
ret
dec
out
ret
push
stc
sar
in
fstps
stos
add
imul
cli
adc
push
adc
aad
mov
enter
adc
fwait
or
pop
mov
clc
int3
mov
sub
jae
test
mov
mov
lods
lea
scas
jo
js
aam
adc
in
inc
xchg
loope
sub
push
mov
sbbl
xchg
out
fwait
mov
idivl
test
cmpl
jnp
sbb
jbe
aaa
icebp
test
jne
jns
stc
dec
cmp
add
lret
adc
lahf
or
fwait
lret
in
push
test
rcrl
jecxz
mov
mov
mov
xchg
mov
cmp
pop
jnp
je
xor
lcall
lea
xchg
mov
scas
adc
cmp
fildll
inc
and
cmp
mov
mov
scas
inc
out
add
in
pop
sbb
jecxz
push
jnp
ljmp
mov
mov
rcrl
jle
call
mov
stc
mov
jg
lret
xchg
pop
and
and
fisttpll
in
cmp
adc
and
and
mov
imul
lock
push
popa
cmp
cmp
cmc
stos
std
sbb
lret
mov
lahf
cmp
xorb
je
cmp
adc
inc
out
divl
add
mov
push
das
push
cmp
add
mov
sbb
loope
mov
lcall
imul
mov
inc
mov
neg
or
inc
pop
mov
stc
pop
xor
adc
inc
adc
ds
ss
xchg
adc
lcall
mov
mov
adc
mov
pop
cmp
adc
xor
lcall
jb
mov
xchg
inc
pop
sbb
jnp
sahf
stc
cs
add
mov
lods
inc
movsl
rorl
pusha
aam
pop
std
xchg
adc
daa
daa
mov
and
dec
addb
jl
out
faddl
push
mov
mov
inc
xchg
and
out
test
mov
imul
sbb
fwait
es
aaa
inc
aam
push
arpl
mov
adc
cmc
push
int
mov
pop
in
insb
inc
test
loop
cmc
imul
push
popf
loopne
mov
push
fldt
cs
sub
iret
shrl
xor
xor
idivb
jp
aas
pop
clc
adc
mov
mov
inc
push
push
mov
in
ret
cmc
out
sub
std
jmp
fistps
adc
inc
and
jmp
jo
ja
jb
ret
push
lods
pop
push
jmp
pop
std
dec
xchg
mov
popa
cmpsl
cmc
in
cmp
mov
jbe
jge
faddl
cmp
and
push
mov
jb
stos
popa
push
loopne
into
cli
out
pop
idivb
lret
xchg
stos
adc
pop
push
sbb
cmpsl
inc
addr16
and
iret
cmpsl
sarb
test
cli
jae
or
jnp
psubd
jl
and
mov
push
jbe
mov
cwtl
fnsave
sbb
rclb
cmp
insl
or
pop
cmp
push
sbb
in
sbb
pushf
rcrl
into
pop
sub
mov
mov
std
or
stc
das
mov
repnz
insb
mov
imul
push
loop
or
out
arpl
mull
ljmp
stos
mov
mov
lods
jmp
insb
cmp
fst
push
lods
mull
push
loope
movsb
movsl
hlt
sbb
mov
je
sub
pop
and
xchg
sbb
pop
jmp
aas
sar
repz
enter
movsb
push
cs
cwtl
push
push
push
or
ret
xchg
mov
push
imul
mov
pop
push
cmpsl
mov
es
std
push
xlat
mov
pop
sub
inc
outsb
cli
inc
pushf
les
pop
jns
fwait
sub
ret
stos
cwtl
pop
jmp
adc
xchg
fdivl
movsl
sub
das
jecxz
hlt
mov
pop
outsb
bound
xlat
cmp
lods
add
mov
xchg
les
loop
add
jne
push
cmp
mov
push
inc
mov
in
lock
sub
call
pop
add
mov
add
call
repnz
roll
jp
lds
fists
mov
push
add
das
and
sbb
mull
loop
cli
fisubs
es
pop
shl
mov
addr16
add
fisttps
jb
popa
in
jb
xchg
mov
int3
mov
sti
xor
imul
dec
add
mov
xchg
out
mov
sbb
xchg
ljmp
push
sbb
inc
cwtl
pop
dec
addr16
mov
dec
pusha
pushf
mov
mov
dec
into
in
mov
xor
mov
jbe
ret
xor
orl
mov
movsl
pop
jne
push
out
loopne
inc
cmc
sbb
and
mov
dec
or
cld
jmp
jb
push
mov
add
loop
jns
std
cmp
xlat
mov
xchg
stos
js
das
lods
ja
out
jnp
aad
xor
cmpsl
adc
and
mov
dec
outsl
jne
sub
or
fiadds
fmull
jp
mov
lods
in
cld
mov
mov
mov
push
sbb
cmp
push
push
pop
and
and
aaa
jb
mov
out
in
dec
pop
push
rcl
outsl
push
add
push
and
cld
push
ljmp
adc
dec
stos
sub
mov
pop
push
mov
and
and
xor
cld
inc
sbb
dec
pop
mov
sub
bound
xorb
jmp
mov
repz
mov
jge
insb
nop
lcall
mov
sbb
or
xlat
xchg
mov
add
into
mov
sub
es
add
sti
les
pop
nop
xchg
sub
pop
fsubrp
mov
fists
jnp
adc
pusha
xchg
xor
jmp
sbb
jbe
mov
pop
pop
dec
nop
scas
mov
mov
int3
adc
mov
nop
pop
in
in
push
notb
fnstsw
xchg
or
jmp
mov
popf
cmp
inc
push
imul
mov
pop
sub
test
lea
jns
xor
inc
stc
adc
arpl
push
push
xor
sahf
mov
jo
mov
cmpsl
lahf
sbb
mov
clc
mov
mov
ss
or
cmc
cmpsb
or
hlt
clc
js
ret
data16
mov
and
jg
sbb
aad
and
in
lret
push
aas
pop
sub
dec
lds
movsb
xchg
add
mov
sub
cltd
xchg
pop
jnp
lret
dec
test
shlb
sbb
ficompl
xchg
icebp
cmp
lahf
ja
ret
dec
dec
push
mov
xor
push
leave
pushf
sub
imul
inc
or
data16
std
sbb
mov
cmp
loop
xorb
ds
in
dec
popa
adc
fadd
inc
add
dec
pop
aaa
mov
lret
pop
push
or
inc
add
popa
cli
and
xor
push
mov
push
adc
shll
xor
loope
sub
jp
add
fidivs
or
push
mov
push
fcomps
insb
hlt
lret
stos
ja
jno
dec
outsl
addr16
and
xor
cwtl
lods
lea
push
mov
and
mov
push
sti
and
add
int3
pop
sub
outsl
iret
mov
jle
and
jecxz
les
cmp
lret
or
dec
incl
scas
enter
jmp
xchg
in
ds
fisttpll
in
push
cmpsl
cld
dec
sbb
or
rcll
aam
add
sbb
add
sbbl
and
test
pop
scas
fildl
iret
idivb
clc
movsl
cmc
sbb
add
pop
push
cs
lds
loop
out
xchg
xorb
and
jne
xchg
ss
arpl
pusha
cmp
jo
fs
cmpsb
jle
xlat
popf
es
lock
push
jp
mov
pop
rcrl
xchg
lret
mov
insl
jnp
or
lret
mov
add
push
loope
jbe
xchg
and
or
pop
jmp
xchg
lcall
and
xchg
xor
enter
mov
pop
int3
fldcw
arpl
outsb
mov
sbb
adc
jle
insb
sbb
and
adc
pop
mov
and
pop
aam
mov
ljmp
push
jl
lods
jmp
push
or
or
loopne
and
ljmp
dec
mov
lods
jns
jmp
adc
sbb
aas
xor
xchg
enter
jge
ljmp
sbb
sbb
push
dec
jns
test
fists
sti
pop
pop
xchg
sbb
filds
pop
cmp
inc
cwtl
lcall
lea
stos
js
ds
shl
cmp
scas
call
lret
xor
mov
rcrl
mov
ds
push
jmp
jb
push
add
stos
dec
fnstenv
pop
xor
aas
sub
pop
in
and
shl
xor
stc
mov
or
adc
jae
sbb
es
test
mov
loop
fwait
xor
lret
adc
mov
nop
push
or
mov
aad
and
add
imul
add
es
das
std
mov
fistpll
sub
stos
dec
sbb
in
call
adc
andb
sub
adc
inc
mov
cmp
dec
je
cs
xor
sbb
inc
adc
jno
sub
pop
out
call
add
sub
and
out
push
mov
mov
repnz
mov
leave
fists
test
imul
mov
xor
fs
mov
fwait
data16
mov
ret
inc
mov
fsubrs
push
call
cwtl
sbb
fcmovne
sbbl
loope
or
adcb
imul
push
scas
mov
int3
sti
xor
fwait
pop
clc
sti
gs
test
fadds
dec
ljmp
pop
pushl
add
mov
sub
lods
jecxz
sahf
xorl
sbb
fcomps
dec
lods
lahf
aam
ds
sbb
test
xor
loop
inc
dec
lcall
fxch
xor
push
add
lahf
jnp
push
cli
daa
cmp
inc
push
cltd
in
add
pop
or
insb
arpl
aad
sti
mov
jl
jp
cmp
out
rcr
mov
lea
sti
scas
cmp
pop
lcall
sbb
inc
inc
stos
or
dec
xorb
stos
or
mov
xor
cmp
xlat
lock
add
jle
das
lods
or
xlat
fdiv
lods
mov
int
xchg
adc
jns
in
jno
mov
pop
test
jle
cmp
xor
sar
add
incl
sub
addb
out
mov
adc
or
cmp
add
xchg
and
pop
lret
fnstsw
inc
out
movsb
ret
or
outsb
aaa
sbb
rol
enter
ljmp
aad
orb
and
mov
jns
popa
stos
cltd
or
sbb
xor
dec
dec
pop
adcb
mov
fsts
jo
push
in
pusha
jo
arpl
xchg
dec
inc
mov
adc
ret
clc
jnp
repnz
fmull
pushf
push
jecxz
or
imul
mov
cmp
std
nop
int3
hlt
cmp
repz
sahf
in
xchg
adc
sub
mov
call
fsubl
or
and
push
pop
andl
enter
orb
inc
mov
cmc
lahf
out
sub
add
inc
mov
pop
or
lcall
movsl
adc
or
cmc
xchg
jle
mov
pop
sub
in
xchg
int
mov
cmp
insb
inc
pop
pop
jge
add
pop
stos
sub
mov
sub
push
pushf
fsubrl
sbb
dec
shrl
ljmp
lret
mov
adc
inc
and
xorb
push
push
mov
add
pop
jb
mov
push
ljmp
das
pop
mov
sbb
sbb
out
fimuls
mov
flds
mov
dec
mov
movsb
inc
sahf
test
loopne
cli
ficompl
popa
inc
jb
outsl
mov
scas
out
sub
fcmovu
enter
cmp
ret
inc
out
test
iret
js
and
sbb
push
outsb
lods
pop
es
in
jns
dec
out
sarb
add
aad
or
add
inc
pop
mov
out
scas
mov
dec
clc
nop
cmp
sti
test
pop
mov
sahf
aam
inc
sarl
jp
lret
jp
add
imull
or
loope
lahf
je
shrb
jle
mov
adc
pop
adc
push
xchg
mov
repnz
test
inc
cmp
mov
push
imul
loop
jle
orb
pop
mov
cmpsb
or
cwtl
iret
insb
rclb
and
push
seto
sub
dec
push
or
push
f2xm1
stos
out
inc
fs
dec
nop
push
out
mov
lock
sbb
lods
push
sbb
dec
xchg
fsubr
sub
dec
sub
fld1
or
icebp
xchg
dec
xchg
inc
inc
lea
jns
mov
or
test
inc
xor
inc
mov
call
xchg
shl
into
enter
jae
and
leave
lods
sub
pushf
mov
xchg
ljmp
daa
enter
adc
bound
xchg
imul
mov
into
pop
sub
cmp
popa
push
dec
pop
dec
pop
sahf
dec
cltd
cmp
sbb
ljmp
or
outsl
cmpl
fbld
aas
xchg
push
push
or
push
repnz
fsubrs
dec
dec
fsts
mov
cltd
mov
adc
jmp
pushf
out
add
pop
adc
outsb
add
in
push
mov
stos
xor
adc
clc
cld
lret
mov
sub
dec
push
and
and
mov
jns
mov
jne
pop
shll
or
arpl
in
mov
mov
adc
inc
cmp
sub
pop
std
mov
mov
inc
push
outsb
cmc
sbb
nop
roll
add
or
inc
jno
jno
fsincos
out
pop
xchg
cli
daa
fs
or
push
sub
iret
lret
fnstcw
mov
jns
js
mov
cwtl
bound
and
das
lods
or
jae
lret
imul
fisubrl
jo
shrl
lret
shll
mov
add
rcrb
push
js
pop
jecxz
movsb
cmc
inc
sbb
fcomip
mov
into
mov
xchg
lock
movsl
dec
sub
xor
in
pop
test
fbstp
pop
test
icebp
push
jo
imul
push
pop
repnz
mov
bound
jnp
mov
daa
cwtl
mov
mov
cmpsb
aam
and
sbb
stc
or
test
jg
ja
movsl
dec
lods
pop
dec
push
cmp
sbbl
and
repnz
jns
cmp
push
adc
jbe
movb
pop
cmp
add
loopne
xchg
ret
insb
mov
xchg
push
mov
fs
xchg
mov
outsl
mov
cmp
jle
dec
adc
mov
jne
sub
sub
fisubrs
aaa
xorb
dec
sarl
push
pop
scas
inc
or
je
xchg
and
push
jne
loopne
sbb
jbe
and
cltd
enter
xchg
fnstenv
xchg
lea
jne
pop
mov
pop
fbstp
inc
jne
je
enter
xchg
and
pop
pop
sbb
dec
mov
mov
pop
mov
push
aam
inc
and
mov
push
xor
xchg
push
loop
mov
addr16
xchg
jl
push
and
sub
xchg
mov
sbb
out
sub
mov
repz
pop
ds
pop
lret
std
pop
cmp
test
xor
int
or
mov
mov
mov
jne
sti
add
pushf
les
ret
aad
inc
cli
mov
mov
dec
int3
imul
sbb
je
cmpsb
sub
inc
jns
repnz
arpl
je
jnp
inc
adc
xor
xorl
negb
mov
adc
inc
mov
orl
icebp
push
sub
jl
dec
out
or
outsl
inc
cmp
aas
mov
clc
push
sub
cmp
jp
ficompl
dec
orl
cmc
popl
sbb
mov
iret
repnz
jecxz
scas
rorl
ss
repz
mov
or
lods
cmpsb
movsl
add
adc
push
mov
mov
ja
or
ret
mov
dec
dec
mov
outsl
and
or
notl
push
fwait
repnz
jns
pop
pop
sbb
dec
xchg
push
dec
scas
mov
repz
and
lds
jecxz
fs
jo
mov
adc
into
pop
fcoml
mov
cmpsl
jecxz
sahf
out
jnp
popa
inc
cld
cmp
cmp
and
lds
adc
adcl
pop
dec
mov
pop
pushf
hlt
movsb
ds
jecxz
mov
ds
push
mov
or
dec
aad
cmpsb
lret
outsb
mov
mov
insb
call
push
jle
xchg
xor
jns
scas
imul
adc
shlb
pusha
jp
scas
sbb
push
xor
aas
xchg
and
fadd
mov
push
ret
mov
pusha
adc
inc
hlt
pop
jg
xadd
aaa
rcr
daa
fiaddl
dec
roll
mov
sub
dec
xor
test
mov
mov
sti
loop
jbe
insl
mov
xor
popa
sub
loope
inc
jae,pn
xchg
cmpsl
mov
pop
test
xlat
mov
arpl
dec
mov
outsb
mov
into
pop
hlt
cld
int
repnz
jg
add
xchg
add
dec
sbb
sbb
das
iret
hlt
jp
lods
sbb
stos
enter
sti
popf
ret
or
cmpsl
cmp
sbb
data16
lds
dec
mov
adc
test
xlat
cmp
setl
mov
mov
pop
jbe
xchg
repnz
outsb
jno
xor
jge
mov
jle
outsl
jg
add
in
shlb
addr16
sbb
mov
pop
stc
out
enter
adc
mov
xchg
in
movsl
mov
xor
cs
sub
jo
das
add
mov
in
sbb
insb
or
ret
fs
add
rcrl
jmp
fldl
std
mov
inc
lock
inc
jno
aas
jb
xor
loop
cmpb
mov
mov
mov
push
in
aad
rcrb
outsb
sub
nop
jecxz
out
fidivrl
mov
mov
mov
dec
in
movsb
push
loopne
push
pop
push
dec
shrb
or
cmp
js
mov
mov
pop
popf
add
lcall
sbb
jge
jae
movsl
xor
cmp
or
push
hlt
inc
xchg
aad
loopne
sbb
ret
ss
mov
xor
pop
inc
addr16
sbb
adc
std
mov
call
jmp
stos
imulb
mull
test
pop
fs
pop
ficompl
mov
popa
cmp
mov
cwtl
fistpll
push
test
mov
mov
std
mov
cs
xor
mov
les
adcb
cmp
pusha
jmp
in
pop
push
lods
add
jne
dec
loopne
or
adc
aad
push
ret
or
stos
lcall
mov
adc
fs
mov
fnstsw
mov
lret
xorl
jne
and
sub
push
add
xchg
xor
dec
std
ljmp
xor
push
sti
xchg
mov
sub
jp
cli
dec
dec
pop
mov
mov
les
inc
xor
dec
loopne
sbb
mov
xor
jnp
push
xabort
pop
mov
imulb
gs
sub
pop
cmpsb
push
call
jbe
adc
pop
clc
mov
and
ret
jae
lds
hlt
jge
out
and
repz
jge
roll
leave
pop
inc
lea
xchg
mov
sbb
or
mov
cmc
xchg
pop
out
sub
xchg
jmp
test
or
hlt
testb
mov
test
mov
les
lock
addr16
or
mov
cmpb
mov
cmpsb
adc
pop
in
jae
outsb
or
mov
mov
pop
sarb
leave
jbe
lock
pop
lea
mov
sbb
add
cmp
jecxz
lods
hlt
xchg
call
jb
sub
xlat
pop
pushl
adc
test
test
or
push
sti
mov
in
cmpb
mov
lret
sahf
adc
fisubrs
jnp
mov
jns
push
ljmp
aas
jp
jb
je
fs
clc
lahf
fwait
es
in
push
ja
daa
xor
nop
jo
cltd
and
bound
cltd
out
fs
jle
xchg
push
mov
dec
adc
adc
mov
dec
xchg
push
imul
gs
std
aas
dec
lret
sahf
pop
mov
sbb
mov
cmp
fwait
loope
sbb
daa
shlb
sahf
add
das
movsl
add
mov
mov
xor
inc
and
clc
jbe
and
push
mull
mov
icebp
jae
pop
sub
nop
dec
sbb
lahf
pop
repz
mov
mov
xor
push
mov
push
and
inc
sti
rcr
stos
cmp
imul
pop
aas
test
jno
dec
xlat
add
sbb
sbb
push
decb
imul
cmp
and
pop
and
mov
pop
mov
pop
outsb
lods
push
adc
mov
int3
jp
xchg
rclb
push
mov
inc
not
mov
hlt
repnz
mov
aaa
int
adc
push
ret
lods
and
addr16
or
add
bound
test
stos
dec
lock
dec
shll
jecxz
xor
fcomps
adc
add
call
fmulp
mov
leave
loope
adc
xor
adc
push
pop
jecxz
call
aaa
mov
xchg
sub
add
jmp
jbe
jle
mov
imull
movsb
sub
pushf
lret
xchg
cmpsb
ds
cmp
cmp
movsl
shlb
lret
scas
or
xor
jns
pop
cmpb
ret
sub
xor
dec
or
pop
and
push
mov
adc
xchg
mov
jp
es
adc
push
jle
sub
or
loope
jmp
std
pushl
cli
sar
dec
ljmp
mov
or
addr16
stos
fstps
scas
xor
out
push
bnd
mov
ss
loopne
lret
xchg
jmp
cmp
and
testb
add
int3
mov
xchg
jp
ja
mov
inc
stc
jae
push
add
xor
cmpsb
insl
imul
fstpt
and
push
inc
adc
hlt
sbb
xchg
lahf
sbb
mov
jno
addl
adc
jmp
cmp
movsl
orb
jae
mov
cmc
jp
psubb
shrb
jle
dec
add
pushf
stc
sub
sub
std
xchg
leave
shll
insb
scas
iret
popa
push
jbe
dec
daa
cld
fidivl
aam
push
std
jbe
dec
push
push
out
cwtl
mov
or
movsl
iret
cld
aas
subb
adc
sbb
inc
inc
sbb
popf
adcb
mov
push
mov
pushf
dec
jmp
hlt
into
addb
stos
mov
pop
and
flds
es
pop
loopne
nop
mov
aas
lock
in
adc
pop
outsb
push
sub
inc
ss
fldl
leave
sub
adc
lret
mov
add
cwtl
cmp
inc
jg
rolb
insl
ret
idivb
cmp
leave
dec
stos
mov
mov
int
int3
xchg
dec
int
or
xor
insb
inc
cld
push
sahf
roll
dec
xchg
push
test
fs
xchg
xchg
enter
in
or
fbld
fisttps
iret
int
jno
cmpsb
outsl
in
hlt
shll
mov
cmc
push
shll
xor
sub
push
ss
outsl
sbb
into
cs
aas
scas
push
ret
ljmp
cmp
ret
pusha
xchg
out
dec
addb
dec
jmp
sahf
cmp
adc
divl
loop
int
adc
leave
fistps
pop
ss
in
sahf
test
je
arpl
inc
mov
mov
outsb
pop
sbb
jle
or
dec
arpl
push
mov
xor
pop
rorl
push
rcrl
sub
jecxz
push
and
jmp
fcoml
insb
out
adc
and
mov
inc
sub
add
and
sarb
aam
cmc
mov
in
mov
int
xchg
lahf
jg
xchg
movsl
in
je
push
loop
mov
stc
mov
insb
inc
dec
imul
mull
and
push
fnsave
jbe
inc
jnp
ficoml
pop
dec
lea
popa
cmp
adc
and
popf
or
or
cmp
popf
adc
stc
aaa
pop
je
popa
test
mov
and
mov
sub
jmp
pop
jns
mulb
xchg
sbb
mov
add
and
mov
aas
inc
ds
in
aad
in
pop
fxch
gs
and
dec
push
xchg
dec
cmpsb
sahf
dec
xchg
stos
hlt
jnp
lret
shl
in
push
adc
movsb
mov
pop
or
stc
pop
cmp
in
repz
nop
adc
imull
popa
pop
or
sub
adc
call
and
mov
ficomps
adc
mov
mov
lret
and
xor
les
push
aas
sub
jns
in
add
xchg
jb
xchg
mov
jl
jnp
sub
aaa
roll
insb
shr
jmp
mov
or
std
int
repz
cmp
scas
adc
mov
int3
rol
leave
xlat
inc
xor
sub
inc
int3
gs
add
jno
cmp
inc
pop
push
lcall
pop
mov
test
xchg
rorb
xchg
popa
hlt
push
jecxz
std
cmp
inc
push
mov
rcrl
push
lcall
sbb
xchg
mov
jno
pop
push
pushf
inc
sub
repnz
rorl
sbb
push
outsb
out
insl
xor
sbb
mov
call
jb
and
jb
clc
mov
shr
shrl
test
sbb
jecxz
shrb
ss
out
scas
mov
mov
movsl
cmc
adc
aam
cmp
jae
sbb
and
andb
xchg
hlt
cmpsl
sub
sbb
aas
push
lahf
pusha
pop
fisttps
fisubrs
mov
popf
xchg
mov
in
leave
xor
push
add
xchg
dec
xlat
mov
sub
dec
clc
lock
shll
aaa
out
adc
pushf
roll
add
push
or
mov
jnp
lods
cmpsb
push
adc
adc
adc
mov
cmp
mov
repz
js,pt
push
imul
stc
cmpsb
sub
jp
lea
sahf
inc
roll
mov
jae
stos
push
nop
and
and
xor
sbb
imul
aad
test
push
xor
adc
and
enter
fldenv
inc
inc
push
loop
mov
add
pop
out
and
jnp
das
xchg
data16
ss
test
mov
js
mov
sub
in
cs
call
cmp
pop
bound
or
adc
fs
enter
fdivl
push
aad
pop
inc
shlb
jns
imul
ret
jl
dec
or
push
daa
cmp
jle,pn
dec
movsl
ljmp
push
push
insl
jmp
sub
fisttps
ss
aam
xchg
push
mov
mov
mov
lret
adc
inc
test
push
rorb
sahf
cmp
fwait
xchg
xchg
jp
in
aaa
mov
das
or
lds
add
jecxz
inc
notb
cmp
jnp
inc
mov
and
cmp
cmp
sub
int3
aam
cmp
test
cmpsb
cmc
hlt
add
nop
push
mov
orb
jae
fstpt
mov
or
clc
aam
mov
cli
jmp
cwtl
ljmp
sbb
adcb
push
call
adc
sub
lahf
or
lahf
mov
add
jno
lods
repnz
cmc
sbb
icebp
pop
jne
xchg
xor
pop
xlat
or
aas
ja
cmpsl
pop
sub
data16
xchg
and
lahf
push
fsub
or
sbb
inc
mov
pushl
insb
loope
arpl
popf
jl
push
test
jl
pop
push
dec
inc
insb
dec
jnp
pop
cmc
sbb
adc
lahf
ret
pop
and
dec
jns
or
cs
pop
aam
in
push
sbb
lds
lea
vcomisd
sbb
jo
fidivrs
inc
jbe
ja
xor
sub
xor
jp
jle
rclb
das
jle
loop
testb
icebp
cmp
mov
pop
lds
mov
inc
sahf
dec
dec
mov
and
frstpm(287
or
jp
call
cli
xchg
mov
or
inc
loope
mov
ret
add
xchg
mov
cmp
pop
std
push
mov
push
dec
aad
testb
js
fisubrl
hlt
jbe
mov
sbb
and
cli
ficomps
ja
int
push
mov
xchg
mov
test
fidivl
addr16
lods
idivl
mov
mov
outsb
das
inc
mov
imul
cmp
dec
jns
in
jo
sbb
pop
filds
out
dec
xchg
stc
fsubl
adc
mov
fidivrs
jne
push
jge
idivl
cmp
movhps
xor
mov
push
adc
jecxz
fidivl
shl
insl
lret
out
pop
fwait
sbb
lret
jo
sub
add
out
inc
loopne
jle
fdivrp
cmp
stos
into
mov
jp
test
xchg
movsl
insb
cltd
in
sub
ss
or
push
xchg
cmp
pop
into
ds
mov
push
or
xchg
xchg
pop
push
cmpsl
aaa
iret
adc
pop
fcoml
out
jle
push
mov
lahf
pop
std
scas
jb
jns
sbb
sub
cli
inc
stos
mov
leave
scas
add
icebp
push
test
pop
or
or
sbbb
xchg
outsl
mov
cmp
cli
pop
mov
loope
xchg
ret
push
xchg
popl
in
cmp
gs
mov
pop
jns
pop
jecxz
and
jmp
add
js
aam
mov
pop
xchg
ja
int
jecxz
push
xchg
nop
xor
mov
push
lahf
test
std
xchg
dec
cmp
mov
or
pop
shrl
dec
lea
pop
sub
sub
ljmp
repnz
adc
stos
or
pop
add
loope
sub
mov
sub
fidivs
pop
dec
imul
adc
daa
inc
inc
aas
js
and
pop
fdivrs
inc
mov
jbe
js
insb
xchg
in
or
push
nop
loopne
dec
popa
cmp
pushf
outsl
ds
cmp
lock
rcr
ror
lret
add
cmp
or
ds
addl
sbbl
fsubrp
loope
xchg
mov
call
xchg
shll
adc
mov
xchg
ret
add
repz
pop
and
cltd
lcall
push
xchg
inc
stos
stc
cmp
test
scas
popf
cmp
or
and
push
mov
add
xchg
ljmp
jo
popa
or
xchg
push
xchg
mov
pusha
filds
dec
xchg
inc
jo
push
cwtl
sub
rcr
xor
mov
pop
cmp
les
sub
xor
in
push
call
mov
loopne
adcb
popa
fiadds
dec
ret
cmp
mov
dec
fstpt
dec
mov
mov
pop
pushf
xor
push
mov
movsl
xchg
mov
or
push
or
inc
ljmp
stos
aas
xor
inc
icebp
ret
push
scas
adcb
cld
cmp
outsb
dec
pop
mov
shrb
adc
out
cmp
inc
insl
jmp
lea
xchg
enter
hlt
mov
int3
push
mov
xor
pop
sbb
xor
cmp
mov
lods
fcmovne
idivl
scas
jmp
mov
mov
lea
lods
fidivrs
or
xchg
push
div
inc
pushf
repz
popf
dec
outsb
insb
stos
ret
shlb
cmp
mov
mov
cmp
repnz
pusha
test
dec
idivb
ds
pushl
inc
adc
lcall
jns
jne
xor
add
sahf
ret
mov
and
stos
push
cmp
lea
repnz
and
dec
fildll
sub
ds
int3
xchg
cmc
dec
cmp
sub
repnz
inc
mov
bound
add
jb
mov
pop
pop
je
cmpsl
mov
mov
flds
movl
fldl
shll
xor
insb
int
test
sbb
fists
mov
imul
imul
push
mov
ds
mov
xchg
std
data16
push
mov
cmp
dec
mov
push
jnp
dec
scas
mov
sub
adc
test
fisubrl
mov
mov
daa
inc
shll
pop
mov
mov
mov
xchg
loopne
ja
rcll
flds
lea
ds
sub
jge
enter
call
or
daa
cmpsl
int3
in
lds
ffreep
cmpsb
cmpsl
pop
and
repz
shrl
cltd
dec
lcall
xchg
mov
cli
sub
lahf
rcll
cld
mov
cmp
rcr
in
pop
push
mov
icebp
mull
mov
push
push
inc
mov
out
or
enter
mov
cmp
add
addl
add
enter
inc
addr16
xchg
pop
sarl
mov
mov
push
js
icebp
sub
adc
jmp
jo
jmp
xlat
mov
push
sub
jmp
ja
subl
mov
gs
addr16
movl
rolb
pop
fisubs
popf
dec
jecxz
add
outsb
rolb
nop
jl
fcoml
dec
mov
xchg
testb
add
sbb
lds
sub
into
cmc
push
cmp
movsl
es
fs
sbb
and
cmp
and
xchg
jne
lret
mov
sahf
xchg
xor
push
mov
mov
inc
xchg
imul
in
clc
in
cli
cmp
sub
add
add
scas
push
add
jle
push
mov
cmp
mov
xor
cli
xchg
and
ret
and
sbb
xor
mov
popf
es
outsl
add
insb
pop
push
push
dec
insl
push
cmp
inc
fxch
xchg
jmp
xchg
inc
jae
sbb
mov
mov
pop
xchg
test
xor
sub
xchg
mov
pop
test
shr
xlat
in
notl
add
pushf
xchg
mov
cmp
push
push
loopne
jecxz
sbb
lods
lods
in
cli
gs
mov
call
and
xchg
imul
insl
fsubrs
lock
mov
das
cli
sub
scas
and
aas
inc
sbb
in
lcall
or
mov
out
cmovnp
cmc
imul
or
out
cs
repnz
rcrl
int
repz
ret
in
cmpsb
clc
int3
jmp
add
clc
shll
pushf
out
jne
mov
mov
aam
imul
lret
xchg
mov
into
andl
lock
cmp
shlb
cwtl
mov
ljmp
push
repz
dec
mov
add
pop
nop
cmc
aam
daa
inc
sub
sti
enter
inc
jge
jge
xor
inc
xchg
inc
adc
out
dec
jp
mov
dec
add
jbe
rorb
arpl
mov
sbb
in
popa
shl
nop
xchg
inc
stos
out
fisubl
push
xchg
fidivl
xchg
xchg
sbb
shll
mov
scas
ret
adc
and
pop
dec
and
cmc
cmc
mov
ljmp
mov
push
xor
in
ret
fld
fsts
xor
push
sub
sub
out
rol
in
pusha
mov
push
sub
ljmp
fcoml
ljmp
jne
outsl
jno
filds
inc
sti
out
pusha
out
mov
lret
mov
popf
mov
pop
inc
outsl
adc
in
sahf
ficoml
pop
adcl
arpl
clc
popf
mov
xor
cwtl
xor
pushl
or
lock
pop
inc
mov
rclb
mov
pop
cltd
inc
xchg
in
dec
xchg
sbb
int3
cmc
mulb
sub
lods
adc
lock
ficoms
add
add
fnstenv
jecxz
mov
fld
mov
mov
out
jae
das
stos
adc
data16
clc
inc
sarl
into
loop
sbb
imul
push
ds
and
mov
cld
jg
pminub
sbb
xchg
pusha
sub
fwait
xchg
rorb
pop
dec
mov
sbb
mov
push
pop
dec
push
pop
les
jl
and
push
sub
rclb
sub
insl
xor
cwtl
xor
aad
std
pop
ret
add
scas
leave
pop
mov
in
dec
jecxz
mov
pop
rorb
xor
add
push
xlat
call
hlt
rorb
scas
out
pop
and
movsb
into
jno
push
and
pop
inc
dec
mov
test
sbb
fs
or
repz
and
mov
cmp
mov
or
gs
push
jmp
mov
cld
and
and
popa
add
add
insl
jmp
adc
adc
test
jmp
mov
lods
scas
xor
addr16
sbb
adc
pop
adc
push
repz
inc
repnz
add
jle
xor
xor
mov
adc
hlt
imul
aas
sbb
aad
fildl
sahf
jns
cs
jns
jns
add
loopne
aas
dec
sbb
jge
cwtl
fisubrs
jmp
pop
lods
fldl
pusha
je
xchg
cmpsl
dec
test
push
andl
mov
jl
outsl
scas
cmpsb
arpl
lcall
jnp
adc
bound
mov
addr16
sahf
gs
lock
lea
dec
push
xor
or
jno
shrb
xlat
inc
push
cs
lahf
in
and
sbb
sub
loopne
sub
lds
mov
cmpsl
gs
or
xchg
leave
in
fiaddl
sbb
test
lcall
outsl
cmpsl
adc
xor
xchg
sbb
jecxz
jmp
cmp
inc
dec
sub
je
fwait
dec
insl
idivb
push
shl
cs
test
ret
dec
add
test
sbb
rcrl
pop
sub
add
in
add
arpl
inc
fs
adc
ficomps
call
out
leave
bound
mov
inc
jb
xchg
push
aam
mov
sbb
inc
popf
mov
jbe
push
sub
xorb
fbld
lahf
cld
jl
jne
push
mov
stos
lods
repz
outsl
test
pop
imul
or
sbb
pop
shl
outsl
les
mov
cmp
dec
out
cmp
cmp
dec
imul
xor
mov
cmp
push
dec
iret
cmp
jno
mov
sub
adc
test
out
and
popa
cmc
mov
cltd
stc
jmp
sbb
xor
jmp
fsubs
sbb
xor
iret
inc
int3
fisttpl
inc
loop
and
mov
pop
lods
xchg
xchg
fsubl
adc
add
sbbb
or
or
dec
cmpsb
cmp
out
dec
out
jnp
and
dec
mov
and
movsb
hlt
loopne
clc
inc
mov
xchg
inc
dec
sti
int
pop
out
sub
test
mov
lret
cmp
imul
jne
mov
inc
adc
jle
incl
loop
mov
adcb
mov
shll
add
cmc
cmpsb
imul
pop
std
rorl
sub
rcrb
and
or
cmp
pop
aaa
push
js
and
push
dec
testb
jno
es
in
call
sbb
orl
outsl
mov
out
push
and
xor
pop
mov
int3
ja
mov
mov
jle
les
sbb
jno
aam
xor
cmpsb
rcl
addr16
stos
xor
dec
ds
insl
push
xchg
pop
adc
imul
ja
loope
pop
gs
repnz
xchg
sbb
cltd
stos
in
test
ss
rclb
xchg
push
ljmp
push
fs
mov
repz
scas
push
ljmp
scas
and
xchg
pop
mov
rolb
cwtl
mov
aas
mov
cmp
imul
movsb
add
leave
mov
in
int3
sahf
xor
pop
aad
xor
mov
fidivrl
or
repnz
fwait
mov
cli
ds
add
push
es
hlt
insb
jl
imul
jne
mov
push
pop
mov
jp
outsl
adc
cmpsb
sbb
add
movl
fisubrl
cmc
ss
lcall
cmc
mov
leave
dec
lock
je
daa
out
into
loope
add
mov
and
ss
pop
fldt
shl
loope
aas
das
call
sbb
movsb
mov
and
insl
pusha
jmp
mov
adc
and
bound
int
loopne
test
mov
movsb
repnz
dec
call
pop
fimull
vandps
leave
add
aam
push
xchg
inc
pop
sahf
jmp
xor
mov
mov
flds
xor
aad
je
xchg
bnd
cwtl
jecxz
cmp
cmp
push
mov
dec
inc
fadds
fs
aad
cmc
addl
xchg
push
jb
xorb
dec
es
adc
and
mov
mov
aas
push
dec
sbb
pop
pop
adcb
xor
das
dec
inc
push
int3
daa
mov
mov
cmpsb
mov
bound
push
clc
push
mov
xchg
add
inc
jbe
pop
ret
sub
mov
sub
mov
rcl
insb
jmp
dec
sub
aaa
adc
mov
xchg
sbb
mov
add
sub
incb
mov
pop
mov
in
xchg
aaa
cs
adc
push
pop
outsl
fsubr
or
mov
xchg
es
sahf
and
outsl
or
lea
iret
xchg
filds
inc
fdivl
repz
xor
pop
push
adc
dec
xlat
jmp
fldl
out
dec
dec
subb
shrl
xor
daa
mov
pushf
icebp
aad
dec
mov
movsb
cmp
inc
jo
push
cld
mov
icebp
lcall
push
push
jb
int
lcall
je
xchg
push
push
pushf
rep
fwait
push
inc
add
loopne
iret
in
pushw
repz
fistpll
js
cmpsl
jg
push
sahf
xor
pop
outsl
mov
xchg
inc
lds
push
sub
out
and
xlat
hlt
mov
stos
xor
insl
or
jns
inc
lods
arpl
and
sbb
cmpsl
cmp
aas
mov
pop
idivl
jecxz
mov
push
and
mov
lahf
jae
data16
dec
xchg
scas
stc
sbb
aam
cmpb
xlat
testb
and
mov
popa
dec
fdivl
mov
call
testb
push
cs
jp
ret
mov
insl
cmpsl
inc
idivb
xchg
mov
jno
inc
stc
movsb
or
push
push
lcall
dec
jl
movsb
popf
enter
mov
inc
sbb
mov
mov
mov
ret
sub
rcl
xor
shr
rcrb
fisttpl
enter
scas
dec
mov
and
in
aaa
clc
test
sbb
cs
rol
mov
mov
les
dec
popa
inc
out
jecxz
adc
pushf
aas
sub
adc
rcll
out
les
xchg
or
into
bound
cmp
sbb
repnz
dec
mov
cwtl
or
adc
dec
fstp
mov
cwtl
push
loopne
fstl
cltd
adc
or
test
jbe
stos
inc
imul
insl
pushf
and
adc
inc
in
loope
dec
test
jb
gs
push
cmp
xchg
push
or
pop
mov
cld
stos
aas
mov
andb
in
cmp
out
sbb
add
lcall
push
jb
inc
inc
movlps
mov
or
rcr
lea
int3
xchg
incb
in
in
idivb
cld
leave
nop
xor
ret
cmp
ds
jnp
adcb
xchg
hlt
and
lret
pusha
cmp
jl
mov
adc
adc
pop
scas
jmp
pop
pop
cmc
adc
bound
sub
mov
ss
divl
mov
ret
mov
mov
mov
and
fmulp
ja
mov
xchg
mov
leave
test
movsb
cmp
stc
insb
mov
dec
sub
pusha
adc
mov
fisttpl
movsb
sub
loope
pop
aaa
into
mov
std
add
xchg
scas
jns
stos
mov
inc
fstps
push
mov
out
xchg
sbb
cmp
push
sbb
js
xor
sti
and
movsb
fs
pop
mov
imul
insb
shlb
pop
pop
lds
lcall
daa
xlat
pop
ss
mov
pop
rcrb
xchg
fstpt
ja
sti
jl
jno
xlat
sbb
jo
cmp
mov
aam
jnp
shlb
hlt
nop
and
mov
sub
outsl
jge
subb
je
lds
pop
popf
iret
mov
cmp
movsl
dec
icebp
nop
mov
cmpsl
mull
shll
testb
inc
inc
nop
daa
loop
add
decb
adc
sbb
div
mov
lds
add
div
and
das
arpl
add
sbbb
inc
daa
adc
lods
push
cmp
xor
dec
ds
jns
shrl
clc
repz
repz
lcall
test
inc
xor
xchg
push
mov
and
scas
in
shrl
ljmp
jp
cmpsb
aaa
int
push
pop
jmp
lea
stos
outsl
mov
pop
inc
pop
orl
mov
loope
jbe
inc
mov
or
cmpsb
add
ss
inc
mov
aaa
out
lods
call
cmp
sub
mov
pusha
push
cmp
into
outsl
push
pop
lds
movsl
aad
sub
aas
xchg
roll
fwait
dec
jg
and
insl
push
lcall
lret
mov
cld
popa
cmp
mov
fidivrl
mov
rsqrtps
push
push
add
xchg
mov
loopne
adc
fstpl
pop
add
add
mov
mov
jne
mov
mov
cmpsb
push
ret
outsl
pusha
cmpsl
mov
sbb
pop
xor
sub
fdivs
adc
sbb
stos
mov
sub
subl
xchg
lret
sbb
hlt
push
sti
fwait
sbb
xor
hlt
mov
push
cmpsl
rorb
test
jne
sub
xchg
aas
cmp
jb
incb
imul
mov
cmp
lret
sbb
pop
lds
ds
sub
hlt
stos
ds
daa
fwait
jnp
dec
rol
lcall
andl
flds
outsl
cmp
add
pop
cmp
inc
and
aaa
add
dec
repnz
test
insl
cmp
mov
inc
int3
cmp
cmp
inc
dec
int
fwait
mov
movsb
jae
imul
mov
jl
shr
out
push
mov
xchg
call
cmp
std
out
mov
xchg
xchg
xchg
lahf
xor
and
cmp
hlt
lcall
shll
addl
push
in
mov
cmpsb
xor
add
cwtl
mov
mov
js
mov
imul
mov
adc
scas
fs
or
cmp
mov
jnp
ja
rorb
cwtl
push
adc
push
out
in
out
ret
jg
push
jb
jmp
int
push
sbb
jmp
outsb
js
outsb
sbb
icebp
in
jo,pt
or
pop
testb
sub
call
mov
ljmp
inc
testb
les
mov
push
testb
out
push
inc
out
push
adc
mov
sbb
fstl
mov
adc
push
lcall
and
cs
sub
push
into
mov
je
mov
mov
xchg
jno
and
imul
adc
stos
inc
cwtl
xor
imul
imul
inc
sub
sbb
lods
cmp
mov
add
imul
jae
lods
imul
mov
push
cld
sbb
mov
outsb
xor
in
js
imul
jg
jge
mov
adc
pop
add
addr16
push
sub
and
push
pop
or
mov
adc
clc
inc
and
mov
cmc
fstpt
sub
lods
and
enter
fistl
repnz
bound
adcl
jge
repnz
jmp
js
xchg
pop
adc
xchg
sbb
popf
cltd
lcall
andb
sbb
cmp
push
inc
loop
mov
test
pop
mov
sub
outsl
inc
aad
addl
stc
daa
mov
jg
sbb
jp
xchg
or
mov
rep
test
lahf
dec
cld
sbb
cs
add
mov
lret
inc
mov
int
add
mov
dec
inc
cld
jns
lods
mov
int3
mov
add
push
push
cltd
lret
std
jmp
or
test
cmp
cmpsl
xchg
adc
sti
addb
in
imul
push
adc
jl
and
jb
xchg
shlb
sahf
mov
mov
inc
mov
cmp
jecxz
adc
ss
sbb
sub
cmp
or
jne
xchg
mov
cltd
fwait
mov
xor
push
dec
xlat
xchg
cli
and
mov
movsl
fidivrs
lea
mov
scas
aaa
mov
shr
jns
imul
jns
xchg
pop
es
rcr
in
add
leave
mov
mov
mov
push
jp
das
test
fidivrl
hlt
call
ror
scas
test
cmp
sub
xchg
mov
jecxz
xchg
shlb
out
test
adc
inc
iret
pop
data16
xchg
lds
xor
outsl
xchg
lret
inc
das
fisubl
sbb
add
test
rcrl
mov
sbb
mov
mov
mov
cmpsl
imul
ret
mov
dec
pop
dec
fsubrp
clc
in
and
stos
push
jp
mov
add
movsb
add
xchg
add
mov
push
adc
ret
mov
adc
pusha
sbb
loop
and
fwait
jge
add
ret
add
add
aam
scas
xchg
cmpsb
popf
push
cmp
test
cmp
out
mul
scas
jmp
inc
and
int3
push
inc
aam
in
or
out
push
sti
dec
xchg
jg
cmpl
xchg
fbld
push
pop
adcl
and
bound
or
sahf
add
test
mov
test
paddw
out
lods
xchg
xchg
je
add
and
xchg
push
mov
sub
out
loopne
out
xor
mov
sar
cwtl
decl
sti
mov
sbb
jae
push
push
outsb
stos
fsubrs
repnz
outsb
jle
or
push
movsl
das
mov
negb
fidivrs
sarl
push
sub
test
sub
loop
xchg
pushf
and
push
sub
push
je
xor
xor
cmp
js
lahf
fsubrs
frndint
mov
in
fcmovnbe
sbb
push
adc
rcrb
fcompl
or
loopne
and
adc
xchg
xchg
mov
adc
stos
decl
sahf
scas
mov
sbb
cmpsb
fstpt
pop
sub
mov
mov
das
jge
push
pop
out
cli
mov
pop
inc
jle
movsl
jae
push
mov
js
fwait
sar
sahf
mov
out
mov
adc
sahf
jmp
aas
out
adc
cld
inc
inc
fadds
push
adc
lret
sbb
xor
mov
jo
mov
or
mov
in
lret
ds
test
cmc
jnp
or
push
or
mov
mov
jmp
push
testl
iret
aad
dec
mov
mov
or
sub
cmc
bnd
cld
jecxz
pusha
mov
loop
andl
mov
insb
xchg
sbb
repz
loop
push
sbb
cmp
in
push
jp
mov
or
mov
mov
jle
jge
jge
inc
lret
cmc
pop
dec
xchg
lret
jle
sarl
ja
stos
daa
pop
and
mov
mov
int
jno
add
out
arpl
call
aaa
loop
sbb
loop
in
subb
lock
pushf
sti
jnp
xchg
xor
das
das
ror
add
xchg
scas
out
out
sbb
cltd
mov
sbb
pop
mov
push
int
and
inc
fwait
xchg
ljmp
xchg
sub
test
mov
lret
cmp
add
ss
pop
out
mov
popa
sub
xor
xchg
xchg
jmp
mov
inc
cs
jbe
int
sub
loope
inc
pushl
jg
pop
lea
mov
xchg
inc
adc
ss
cmc
jnp
and
mov
cmp
sub
sbb
cli
cli
imulb
xchg
or
lea
mov
mov
add
inc
jp
icebp
sub
addr16
fbstp
and
mov
outsl
call
fs
pop
pop
dec
xchg
cmp
or
stos
call
pusha
xchg
adc
rcrb
cmp
pop
std
cmpsl
icebp
xchg
int
popa
mov
loopne
out
add
mov
add
push
sub
mov
sbb
inc
lds
inc
inc
and
add
das
jg
and
fcmovne
jb
movsb
rcrb
inc
lods
push
inc
scas
sahf
movsl
mov
cli
pop
or
push
jecxz
mov
adc
xor
jge
loope
mov
daa
dec
mov
in
test
push
mov
push
rolb
mov
push
and
scas
mov
sbb
inc
xlat
enter
xchg
shll
ja
insb
xor
add
push
imul
iret
sbb
add
mov
pusha
mov
test
cmp
leave
dec
cmpsb
pop
and
xchg
lock
lods
stos
mov
jl
and
xchg
insb
out
adc
dec
fisttpll
lahf
and
in
jle
int3
js
or
dec
dec
xchg
das
jmp
into
push
loope
dec
pop
sub
sbb
sar
mov
push
dec
dec
sub
cmp
sbb
push
es
int3
xchg
inc
stc
add
push
mov
cmp
mov
cmpsb
push
or
mov
out
mov
test
and
lret
lods
or
pop
cmp
push
xchg
jb
ja
pop
or
push
mov
fwait
or
xor
xor
push
cmp
ret
jne
or
xlat
cmp
loopne
call
orb
sbb
xor
sti
dec
test
negb
xchg
jg
int
push
popf
movsb
sub
imul
leave
ljmp
out
sbb
cmp
pop
jecxz
inc
gs
pop
ljmp
xchg
push
xchg
jle
push
test
sbb
and
cmpsb
orb
and
mov
rol
pop
jo
outsb
out
mov
iret
or
mov
mov
inc
xchg
std
or
into
jmp
sbb
fcoml
or
jg
popa
int3
inc
sub
mov
je
cmp
outsb
sub
and
lds
lret
xor
sbb
sub
push
addr16
mov
fnstcw
loope
push
mov
arpl
in
rol
aam
xchg
or
jb
mov
sbbb
jmp
repnz
push
mov
insl
popa
xor
or
mov
jl
lock
nop
push
data16
dec
shlb
dec
xor
push
hlt
pop
cmp
mov
jnp
mov
mov
mov
xor
stos
jb
into
xchg
xor
and
inc
jnp
fisubs
nop
stc
jno
jb
pop
loope
mov
jecxz
push
lds
push
push
jmp
in
testb
icebp
jg
sbb
xchg
ja
gs
out
ret
fucomi
jns
push
daa
mov
push
mov
imul
loop
cmpsb
enter
mov
add
xchg
xor
or
cmp
lods
sbb
dec
cmp
icebp
or
stos
decb
insl
daa
es
pushf
pop
or
cli
push
ja
xchg
cs
push
lret
ja
clc
enter
sub
add
pop
dec
pop
cmp
push
cltd
push
insb
cmp
cmp
lret
stos
xchg
lret
cmp
xchg
mov
add
int3
lods
aaa
mov
push
mov
inc
imul
fs
pop
push
dec
insb
xor
pop
dec
push
push
xchg
inc
jae
and
scas
sti
sub
movsl
popa
pop
ffree
je
and
jo
mov
sub
cwtl
fwait
cmpsb
les
mov
faddp
xchg
popa
adc
stos
rcl
lods
sbb
aam
outsl
push
mov
test
inc
fwait
cs
pop
jae
dec
movsbl
push
jl
in
mov
scas
sbb
shll
jb
in
scas
addr16
icebp
mov
inc
push
std
es
or
adc
mov
push
test
jge
cld
or
sarl
adc
xchg
insb
lret
std
jge
push
mov
lret
shl
dec
imul
cwtl
xchg
out
push
sub
inc
push
xor
jge
mull
ret
cmpsl
and
cmp
xor
out
daa
pop
cmp
cmp
add
arpl
sbb
dec
sti
repz
cmpsb
cmp
adc
jno
call
add
adc
popf
xor
pop
xlat
aam
sbb
insl
cmc
xor
ljmp
outsb
aad
xchg
cmp
inc
sti
sub
ret
jno
test
push
movsl
add
jmp
shl
out
or
pop
enter
sub
loope
mov
inc
sbb
ja
push
cmp
es
xor
adc
push
rorb
or
push
arpl
jae
cmpl
jp
dec
mov
imul
xchg
lods
push
bound
mov
xchg
aas
xabort
lock
cmp
outsb
jl
pop
popf
aad
adc
jae
jg
sahf
sub
leave
mov
push
in
test
sbb
mov
push
in
pop
andl
loope
mov
mov
leave
dec
es
notl
pop
inc
imul
mov
lea
mov
pushf
dec
lahf
xchg
push
sbb
pusha
push
dec
dec
mov
xor
lret
mov
movsl
cmp
fldenv
push
mov
cltd
dec
sbb
insl
das
cmpsb
jb
lea
cmp
xlat
mov
icebp
inc
push
jae
cmpl
pop
add
push
xchg
ja
ret
andl
rolb
push
lahf
movsb
cmp
in
xor
imul
dec
jge
int3
in
mov
xchg
inc
dec
jmp
clc
or
outsl
sbb
jle
call
push
and
mov
cltd
es
pushf
mov
push
xchg
pop
fs
fisubrl
add
dec
cmp
mov
cmp
pop
adc
test
cmp
jae
fsubrs
lods
out
mov
out
pop
adcl
dec
lea
aaa
push
push
imul
mov
shlb
arpl
add
pop
dec
scas
xor
pop
mov
pop
add
push
mov
sub
xor
std
mov
sbb
lods
data16
xor
jb
in
mov
nop
push
in
mov
sub
xor
addr16
loope
lods
pop
out
movsl
test
les
jmp
call
and
inc
xlat
aas
pop
or
mov
mov
adc
aam
sti
sub
mov
data16
jg
xor
adc
fldl
jns
test
pop
jle
jmp
cwtl
xchg
lods
ja
xchg
in
test
lcall
sar
es
sub
mov
fsubs
test
add
lahf
inc
loop
or
pop
pop
popf
xchg
fisubrl
inc
in
ret
sbb
rorl
inc
sub
or
popa
cmpsb
dec
mov
daa
stos
cli
push
stos
in
fstpl
lods
fnsave
or
rorb
mov
sub
pop
add
mov
sub
ss
lods
sub
cmp
push
cli
call
loopne
fs
mov
arpl
jmp
lret
mov
jbe
add
inc
pop
mov
mov
enter
fwait
jne
daa
dec
jne
cmp
and
push
std
hlt
or
int
sub
jge
lods
lret
dec
adc
cmp
sub
and
sbb
sbb
dec
cmp
pusha
mov
xlat
pop
stos
mov
cmp
mov
adc
test
loope
or
jnp
push
sbb
jg
mov
xchg
xchg
xor
cltd
push
pop
les
mov
sbb
inc
shlb
call
xchg
push
push
ret
cwtl
cwtl
out
popl
and
or
cld
stos
cwtl
mov
sahf
out
xor
fwait
mov
add
xchg
fidivs
popa
inc
push
sub
lods
pusha
mov
xchg
addl
jb
pop
lods
icebp
rcll
pushf
loop
sbb
cmpsl
fwait
mov
popa
movsb
xchg
adc
mov
mov
shl
sub
mov
loopne
pop
mov
in
into
and
inc
and
data16
jge
aaa
and
mov
mov
test
push
lret
adc
dec
aad
xchg
push
bound
jle
and
orl
inc
nop
mov
pop
pop
xchg
dec
add
rcrl
jae
pop
std
jg
int
addl
xchg
lahf
xor
js
xor
pop
mov
xor
fucom
jle
ret
dec
mov
dec
xchg
inc
mov
push
test
sbb
adcl
dec
pusha
mov
jae
dec
and
idiv
in
mov
out
add
fimuls
fucomip
idivl
loop
dec
les
les
xchg
push
xlat
lahf
movsl
mov
pop
inc
lret
subl
shrl
sub
jno
inc
inc
and
cmp
xlat
ret
std
pop
adc
jmp
lahf
imulb
pop
sti
jmp
xor
mov
jg
mov
jnp
pop
dec
lret
aaa
lret
mov
cmpsl
mov
sbb
mov
scas
adc
dec
lret
out
dec
das
arpl
out
sbb
insl
jl
in
daa
push
imul
push
fwait
xor
fsubrl
sbb
sbb
mov
stos
mov
xlat
pop
and
cmp
mov
or
sarl
subb
jle
inc
jp
xchg
push
push
push
sbb
enter
cmp
pop
stos
push
mov
push
mov
fmulp
ja
out
mov
shll
sub
adc
dec
and
cmp
push
repnz
jp
cld
push
xchg
fidivl
stc
out
sbb
das
add
inc
mov
iret
rcll
out
cld
push
pop
imul
mov
lds
dec
xorb
pop
xor
les
adc
adc
dec
testb
cwtl
adc
add
mov
popf
loop
out
inc
inc
imul
adc
aam
rcll
adc
int
adc
cli
fisubrs
and
push
in
mov
lds
sti
jne
jge
adc
lcall
mov
cmp
cmp
mov
jns
testl
in
cmp
in
fcmovb
lods
loope
push
orb
jp
sbb
outsb
call
adc
jmpw
jmp
inc
sbb
aam
pop
mov
pusha
test
imul
hlt
or
pop
fs
cld
mov
dec
ds
inc
push
je,pn
add
xor
lahf
inc
push
mov
push
adc
pop
and
push
rorl
xor
add
mov
ljmp
orl
into
mov
mov
daa
sub
or
and
test
mov
mov
jg
inc
rolb
fsubl
addr16
cmp
pop
lret
lea
mov
stos
push
xchg
jbe
icebp
idivb
loope
mov
or
push
xor
cmp
dec
out
imul
mov
cwtl
out
popl
lcall
sub
outsl
push
arpl
jmp
xor
jno
aad
xlat
mov
inc
push
dec
loopne
push
pop
pop
cmp
test
sub
mov
xor
push
icebp
xor
call
bound
sbb
in
idivb
inc
inc
mov
sbb
adc
xchg
push
call
sbb
rorl
std
cmp
arpl
and
shrl
pop
push
ret
push
push
pop
daa
cmp
mov
fidivrl
pop
mov
and
cmp
or
pop
mov
adc
dec
pop
mov
sbb
test
or
in
into
int
cmp
pop
lea
into
mov
fs
fistpll
inc
add
shll
outsb
push
xor
mov
mov
pop
insl
addr16
sbb
shl
dec
pop
dec
inc
test
movsl
fisubs
or
pop
mov
jmp
sub
gs
mov
cs
and
sub
push
cwtl
or
push
xchg
outsb
sub
xchg
mov
movsb
test
imul
rorb
fs
xor
or
jg
fstp
mov
inc
cmp
ljmp
push
test
int
je
sbb
pop
bound
pop
lret
shr
int3
sub
adc
or
fwait
mov
std
mov
hlt
fxch
jmp
sub
nop
mov
inc
pushf
push
pop
mov
imul
push
mov
inc
mov
icebp
push
jmp
lret
or
rorl
test
stos
xor
xor
push
leave
int
cmpl
push
mov
dec
mov
mov
inc
fbstp
lret
ja
scas
je
pop
pop
jo
mov
and
push
lea
movsb
sbb
movsb
leave
clc
popa
mov
movsb
jnp
cmp
cmp
xchg
sub
xor
xor
mov
out
gs
out
sbb
fidivrl
repnz
mov
xchg
inc
inc
adc
cmpsb
jo
sti
pushf
jg
inc
mov
xchg
roll
dec
push
call
dec
repz
gs
in
add
jg
decl
icebp
arpl
insl
sub
and
and
loope
sub
adc
jp
std
test
daa
andl
or
push
call
or
push
fildll
push
push
ja
repnz
xchg
iret
mov
pop
cli
icebp
test
repz
cmpsl
jb
mov
mov
push
loop
lods
xchg
in
call
add
push
jle
mov
fistpl
sub
in
dec
mov
add
mov
xchg
icebp
or
jns
shl
push
movsl
clc
mov
dec
call
mov
add
or
je
sbb
sub
and
or
clc
adc
jmp
test
inc
push
addr16
push
pop
inc
lret
mov
movsb
pinsrw
mov
push
jl
or
dec
cmp
iret
popf
sbb
add
divb
add
insb
xchg
lods
lods
clc
aad
popf
and
fisubrs
adc
sti
sub
aad
adc
mov
dec
adc
mov
hlt
pop
fdivl
pop
mov
mov
outsl
lret
aas
mov
pop
das
adc
jae
mov
dec
xor
ja
mov
pop
cs
mov
xor
sbb
jno
data16
or
cmpsb
mov
cmp
cs
int
push
cltd
sub
cmc
mov
xchg
jge
cmp
lret
addr16
fsubs
inc
incl
push
or
imul
pop
cmp
dec
pop
daa
mov
push
lahf
or
pop
mov
jg
add
add
adc
sahf
add
add
mov
ljmp
les
insb
cmp
sub
test
popf
shlb
repnz
outsb
jl
add
mov
je,pn
lcall
ret
push
dec
xchg
fcompl
jecxz
mov
dec
jne
inc
les
pushf
push
iret
push
sbb
in
mov
outsb
insl
mov
leave
popa
sbb
mov
daa
call
xor
jle
into
xchg
and
cmp
inc
lods
pop
cld
ret
sahf
pusha
or
lret
clc
and
mov
testb
fisubrs
sub
test
or
sub
sub
popa
nop
mov
cli
push
sub
or
sub
outsb
dec
pop
les
add
lds
movsb
divps
test
or
shl
pop
inc
rorb
clc
pop
insl
xlat
dec
or
xchg
adc
in
lret
es
push
adc
int
jnp
pop
or
cmp
inc
mov
and
dec
sub
or
xchg
mov
lds
shll
shlb
cli
mov
sahf
jae
adc
jnp
dec
pop
movsl
xchg
sbb
mov
xlat
dec
fdivrl
sbb
adc
lret
inc
scas
add
pop
loope
aaa
mov
add
arpl
push
mov
test
cmp
and
jge
je
jns
shl
push
cmp
pop
mov
mov
jbe
idivl
popf
dec
ja
fcoml
jae
sub
scas
push
pop
pop
ja
jae
loope
test
adc
jl
mov
add
push
loope
test
clc
frstor
push
arpl
test
jnp
test
lahf
data16
in
push
mov
lahf
daa
sub
ja
stc
mov
repz
xchg
adc
nop
imul
push
cs
shll
div
sub
gs
pusha
imul
orl
add
imul
loop
and
mov
pop
mov
aad
jo
js
leave
sub
addr16
stc
rorb
inc
fwait
mov
mov
mov
mov
or
mov
sub
xor
lods
adc
fwait
movsl
cmp
sbb
push
sahf
ss
inc
pop
ret
pop
xchg
fdivrp
cltd
add
dec
jns
pushf
test
lret
mov
icebp
movsl
rclb
dec
pop
sbb
inc
adc
adc
jno
cmpsb
adc
imul
xchg
cwtl
sub
loopne
gs
imul
testb
aam
push
xchg
movsb
inc
pop
pop
outsl
mov
and
mov
cmp
cmc
iret
mov
pusha
xchg
sub
pop
pop
pop
pop
nop
rcr
push
call
repz
rorb
mov
adc
mov
jle
lea
adc
lds
and
cmp
ss
bound
aad
lret
cmp
cmc
es
shlb
adc
ja
xlat
and
loop
inc
mov
cltd
mov
in
adcb
cmp
push
add
mov
fs
adc
inc
scas
rclb
test
je
and
imul
mov
inc
or
or
pop
adc
pop
sbb
loop
add
test
mov
adc
adc
and
xchg
lods
sub
lcall
mov
inc
notl
fwait
push
mov
test
fistpll
and
sub
neg
inc
push
jnp
add
lret
xor
mov
mov
test
fnstcw
int3
mov
inc
insb
push
rcrl
mov
ret
in
repz
add
scas
pop
jo
mov
and
imul
xor
or
test
fldl2t
into
repz
scas
push
jl
xchg
xchg
push
sub
mov
shlb
xor
push
push
test
es
adc
cmc
sahf
repnz
add
cmp
call
xchg
mov
lock
and
mov
dec
xor
fcmove
push
jg
out
mov
cmp
cmpsl
std
jecxz
add
setg
jno
mov
dec
cmp
push
xchg
push
clc
inc
cmp
mov
into
cwtl
and
cmp
clc
ret
les
lea
int3
pop
and
gs
ret
jo
sarb
out
call
smsw
lret
std
ljmp
mov
cmp
mov
pop
mov
jecxz
aam
push
popa
inc
clc
jmp
sub
rorl
jge
xor
jb
fwait
jae
imul
push
das
push
adc
movb
popf
pop
ds
mov
lods
jno
pop
mov
pop
xchg
xchg
gs
clc
in
jns
ljmp
sub
dec
mov
cmp
into
sub
pop
insb
cmp
adc
mov
or
xchg
leave
add
std
fwait
or
push
mov
fst
jo
stos
xor
add
push
sbb
xchg
sub
repnz
je
mov
mov
jbe
rolb
sbb
sbb
adc
or
push
mov
pop
mov
call
lret
loopne
sub
mov
ror
mov
mov
add
adc
push
add
mov
fidivs
adc
mov
xchg
sbbb
in
or
shrb
ret
xorb
imul
push
pop
push
rcrb
dec
incl
jecxz
aaa
out
sbb
pop
daa
mov
insl
mov
xchg
cmpsb
or
negl
sbb
adc
dec
cmp
xchg
ja
out
xchg
or
xor
jae
stos
dec
push
and
inc
and
pop
mov
pop
mov
pop
or
stos
out
jmp
leave
pop
cwtl
pushf
pop
gs
inc
sbb
pop
lds
adc
sub
jne
jle
rclb
push
movb
sbb
push
mov
pushf
inc
push
pusha
cli
out
and
sbb
inc
mov
gs
out
mov
sahf
movsl
sub
idiv
and
cmp
ljmp
test
ficoms
mov
out
add
repz
std
das
pop
cmc
aaa
mov
cmpsl
cmpsl
mov
and
jle
push
pop
lret
jl
jae
icebp
add
stos
in
mov
mov
pop
inc
jmp
mov
je
mov
cwtl
or
dec
jns
ficoms
iret
imulb
rcl
mov
mov
xchg
xchg
mov
cmp
test
sti
or
sub
jb
stc
jp
jg
pop
jge
das
mov
into
sub
iret
pop
xchg
mov
scas
lcall
fsub
cli
xchg
mov
popa
or
mov
or
mov
and
mov
inc
nop
adc
lock
add
adc
ja
sub
popa
es
int
xor
ljmp
dec
popf
inc
sub
inc
inc
and
int3
and
pusha
pop
mov
sub
mov
adc
inc
ja
mov
test
repz
push
int
cmc
jae
mov
xchg
fs
xchg
in
lods
outsb
test
stos
push
aaa
push
lds
jbe
test
mov
pop
push
sub
lcall
insb
jb
fldl
in
cmpsb
inc
cltd
adc
fwait
sti
xor
js
in
cmp
scas
in
in
sbb
test
push
sbb
cld
cmp
dec
aas
sub
movsb
cwtl
iret
loope
cmp
jb
xor
dec
pop
xor
mov
cmp
inc
addr16
sub
inc
mov
push
sbb
ss
movsb
in
subb
mov
lods
repnz
xchg
mov
sub
fldenv
push
mov
xor
movsb
xor
enter
jb
push
sbb
andl
or
lds
cli
pop
sbb
lods
mov
lcall
stos
aaa
xchg
ret
mov
mov
inc
test
mov
pusha
mov
dec
fisubs
push
sahf
pop
cmc
inc
xchg
ja
xor
push
cwtl
adc
or
sbb
mulb
pop
jl
cmp
rorb
stc
in
lds
mov
dec
adc
sarb
push
adc
sbb
jo
lods
xor
ret
jecxz
lods
into
es
pop
xchg
push
and
mov
je
shrl
cltd
jnp
icebp
fsubrp
inc
sarb
jb
push
push
and
sbb
and
push
pop
dec
jmp
xchg
sbb
iret
jb
sbb
mov
es
mov
jle
aas
das
sbb
cmp
addr16
pop
mov
jne
pushf
lods
rcll
pop
das
in
stc
lds
pop
sub
and
shl
cltd
add
or
pop
dec
mov
or
lods
adc
mov
adc
movsl
lea
out
xchg
jne
pop
fnstsw
sbb
mov
sbb
fisttpll
adc
adc
cmp
or
jp
jle
push
jo
movsl
movsb
dec
stos
sbbb
mov
test
in
push
les
jb
jns
pop
pop
xor
push
mov
xor
push
pop
aad
lret
add
adc
lea
aad
mov
xor
sarb
push
push
int3
sbb
xchg
add
jge
or
xchg
adc
mov
jle
xchg
fldenv
sub
outsl
cmc
pop
jbe
xchg
hlt
xlat
loope
imul
inc
dec
fldl
rcrb
ljmp
gs
scas
inc
xor
pop
fwait
jle
dec
orb
fcmove
pushf
jge
cmp
or
mov
dec
mov
aam
scas
add
add
out
xchg
xchg
scas
je
aam
jp
sbb
dec
add
push
xlat
mov
dec
and
jns
inc
or
push
addr16
adc
sbb
adc
lar
dec
pop
insb
jle
sbb
insl
scas
pop
aaa
lahf
pop
jnp
sbb
jg
sbb
mov
aas
cmp
xor
imul
rolb
out
inc
add
ficomps
xchg
jmp
int
stos
pushl
push
add
pop
mov
outsl
insl
push
mov
les
in
fucom
aam
xchg
outsb
add
daa
push
pop
arpl
push
gs
loop
or
js
push
pop
inc
sub
loope
pusha
call
xor
xchg
add
push
and
fs
jo
mov
lods
mov
or
xor
xor
dec
and
mov
pop
aaa
lock
push
movsl
xor
push
cmpl
cltd
mov
mov
in
lock
push
jb
mov
xchg
shlb
or
inc
add
decb
adc
adc
addr16
jb
lds
ret
jg
mov
loopne
mov
movsl
jo
adc
popa
add
aam
push
mov
adc
push
movl
jp
xchg
mov
jo
dec
fs
xchg
popa
cmpsl
push
test
iret
mov
lahf
or
inc
pop
xor
sti
mov
add
push
cwtl
jmp
cmpsb
xor
sub
in
bound
insb
inc
inc
xchg
cmp
xchg
in
nop
sub
xor
push
push
push
jg
mov
insl
test
inc
xchg
mov
das
mov
xchg
inc
ja
and
cmp
loopne
jbe
mov
sbbl
clc
dec
movl
or
jae
add
inc
sub
jns
push
dec
fs
mov
ret
imul
push
inc
dec
cmp
xor
xchg
adc
push
pop
in
adc
xor
popa
iret
hlt
sarb
or
dec
gs
adc
ss
mov
out
mov
xchg
les
pop
jb
push
xchg
pop
sub
mov
cli
int
xchg
inc
scas
adc
dec
push
cmp
xchg
push
sbb
popa
cmp
push
popf
cmp
pop
mov
xor
push
push
xchg
jp
enter
sbb
or
pop
or
xchg
test
xor
out
loopne
stos
jbe
xor
jmp
push
cs
repnz
jns
cmpsl
and
push
ret
mov
lds
mov
push
mov
xor
icebp
push
xchg
inc
pop
cltd
shll
and
ffreep
dec
mov
and
insb
pop
add
es
mov
pop
and
add
scas
test
js
in
ds
enter
mov
sub
inc
mov
sbb
shrb
cmpb
sahf
mov
pop
push
or
clc
je
shrb
xor
aas
adc
push
dec
and
lcall
xchg
shlb
add
out
loop
out
inc
into
sub
cli
pop
out
icebp
xchg
sbb
lret
jae
sub
xchg
clc
icebp
lret
imul
test
jo
shlb
sub
xor
leave
xchg
push
jg
xchg
insb
andl
sbb
add
cmpsl
mov
sti
popf
and
cld
sti
and
mov
jg
fsts
sbb
cs
divb
cltd
xchg
in
push
xor
sahf
ficoms
rcrb
push
arpl
jle
push
mov
xor
xchg
pop
movsb
stos
jl
push
or
repnz
jbe
push
in
mov
xor
rcr
fcomip
dec
int
xor
push
xchg
adc
mov
or
mov
or
adc
loope
adc
cs
sbb
add
in
cmc
mov
jmp
in
movsb
jo
cmpl
dec
lret
adc
mov
jp
les
sub
mov
cmp
stc
nop
cmp
inc
fmull
imul
imul
dec
or
sti
insb
pop
or
mov
jg
arpl
je
adc
pop
xchg
or
pushf
adc
stos
xor
pop
jae
dec
fcoml
push
fldcw
xchg
daa
out
cli
idiv
mov
sti
lret
push
mov
idivl
push
adc
loope
aaa
data16
push
xor
and
xchg
push
pop
decb
sub
mov
rol
push
mov
inc
jae
bound
pop
shlb
xchg
push
rorb
sub
daa
icebp
shr
fwait
into
mov
or
aas
add
xor
lret
pusha
daa
sbb
inc
sub
add
mov
sub
dec
ror
shll
rcrb
mov
gs
mov
sbb
push
mov
inc
fidivrs
jg
insb
or
or
cmpsb
pop
iret
nop
nop
popa
js
jle
insl
mov
rol
sub
or
test
mov
test
out
movsl
rolb
xchg
daa
arpl
jp
and
sbb
adc
pushl
pop
fsubs
and
xor
xchg
jmp
outsl
js
fadds
imul
inc
fwait
dec
jle
push
sbb
shll
pop
sbbl
xor
insl
ss
cmpsl
jl
jge
lret
shl
pop
and
mov
lods
jl
jge
pop
mov
mov
nop
or
movsb
pusha
or
and
ja
outsb
fiadds
sbb
jle
mov
adc
jae
lods
insb
push
and
cmp
sbb
imul
inc
inc
bswap
push
mov
mov
mov
lds
inc
adc
test
test
hlt
mov
and
and
xor
sti
mov
lds
lret
xchg
inc
cmpsb
es
mov
cmp
jecxz
scas
fcom
fnstenv
movsb
inc
es
repnz
sbb
imul
pop
mov
sbb
repz
xchg
pop
or
daa
cwtl
jno
jle
pop
mov
fwait
ret
fdivrl
in
sbb
cmp
mov
lds
faddp
mov
stos
dec
pop
cmp
cmp
stos
ljmp
jbe
insb
outsl
pop
outsl
mov
jmp
lea
jo
iret
and
clc
nop
and
push
imul
pushf
adc
addl
les
notb
mov
idivb
xchg
xchg
inc
adc
fcmove
js
bound
jo
test
dec
mulb
das
mov
aam
cltd
outsb
test
ss
or
lret
push
out
sbb
pushw
pop
add
daa
pop
xchg
or
push
xor
stos
or
xchg
pushf
add
inc
cmc
add
scas
lcall
call
addr16
jmp
daa
lahf
daa
push
mov
mov
cmp
loopne
stos
jg
push
rorb
or
push
jmp
inc
xchg
sub
out
mov
lret
fwait
xchg
mov
movsl
test
or
pop
pop
je
adc
mov
jae
in
and
ret
mov
lods
inc
pop
inc
dec
sub
repnz
negb
sub
push
insl
mov
sub
test
fwait
xor
mov
or
ljmp
push
dec
inc
or
push
test
jno
sub
test
sbb
stos
mov
loope
and
jnp
hlt
inc
sub
mov
xchg
pop
cwtl
xchg
mov
mov
cmp
push
out
xchg
add
pop
add
je
icebp
jmp
das
shl
adc
in
lret
xchg
fisubrl
push
rorl
jl
pop
nop
inc
and
xor
addr16
adc
hlt
add
call
cmpsb
jno
arpl
sarl
cmpsl
cmp
mov
dec
cmp
xchg
sub
mov
lret
sub
mov
add
push
cmpsb
mov
loop
add
lret
movsl
ljmp
ja
jns
out
out
xchg
aad
inc
sub
fs
xlat
movsl
mov
outsl
sub
cs
cmpsl
mov
inc
mov
inc
sub
test
jl
call
out
push
pop
fnstenv
daa
push
push
outsl
adc
inc
fcomp
repz
dec
jns
cmp
ljmp
ja
das
stos
cmp
lea
xor
xchg
leave
daa
sbb
inc
pushf
adc
add
mov
rclb
adc
inc
and
push
lcall
xor
xor
cld
scas
fwait
mov
sahf
xor
jae
and
int3
xchg
mov
mov
mov
sbb
gs
add
lods
test
xor
ret
icebp
jns
in
xor
pop
jl
test
dec
fadds
fldl
pushf
mov
xlat
sar
fdiv
inc
jnp
test
add
mov
clc
jb
mov
ret
dec
push
popa
mov
inc
add
and
inc
push
ror
jbe
rorl
popa
ljmp
enter
mov
xor
mov
jne
dec
cmp
pop
movsl
xchg
les
sub
stos
xor
movsl
mov
orl
sbb
enter
mov
mov
test
xor
xchg
iret
je
movsb
xor
pop
pop
and
jp
test
fisubs
jbe
inc
ficompl
add
push
cmc
sub
dec
xchg
mov
fisttpl
xchg
dec
add
xchg
loope
and
fwait
adc
pop
xchg
xchg
jmp
shl
cld
sub
repz
or
mov
cmc
xchg
inc
xchg
or
and
test
or
fildl
or
mov
lea
insl
test
test
pop
or
dec
dec
ds
add
sbb
cmp
sbb
mov
into
lods
jns
add
dec
int
adcl
mov
call
in
sub
lret
ss
sub
inc
and
cmp
and
cwtl
lock
lds
sub
aaa
out
cmp
cmpsw
pop
sub
test
cmp
adc
pop
sbbb
mov
addr16
pushf
xchg
mov
push
cmp
dec
lds
outsl
sbb
sbb
lret
pop
push
ja
sbb
in
fisubs
sub
or
mov
insb
loope
mov
fisttpl
std
repz
stos
cli
cmpsb
jmp
xchg
cmc
mov
sub
sbb
das
fsubrs
stc
out
jae
jmp
nop
jne
cmp
iret
roll
mov
cmpsl
push
pop
movsl
adc
sbbl
insl
mov
scas
pop
xor
in
mov
inc
push
stos
movsl
out
shll
repz
sahf
shl
xor
pop
je
mov
jecxz
sub
xor
mov
cmpsl
adc
adc
in
in
pop
pop
pop
mov
sub
lret
mov
lcall
lds
bound
cmpsl
xchg
nop
or
test
jb
pusha
dec
enter
sub
jno
mov
mov
and
mov
push
mov
ja
ret
mov
dec
dec
jge
dec
fstps
in
or
outsl
lods
cmova
add
pop
aad
fistpl
movsb
mov
mov
xor
repnz
nop
push
and
mov
jle
out
in
push
mov
int
and
shll
scas
mov
repz
jae
inc
dec
lret
les
push
lret
insl
shll
sti
sti
mov
xchg
dec
push
sbb
push
mov
cwtl
test
in
inc
les
add
pop
push
aad
dec
les
pop
xchg
in
mov
mov
pop
or
sti
adc
xchg
sub
rol
push
mov
inc
ss
push
pop
cli
data16
mov
insb
pop
pop
sub
mov
push
popa
mov
cmpsb
fwait
in
inc
repnz
add
hlt
ret
push
adc
enter
mov
icebp
adc
inc
ss
out
cmp
push
icebp
xor
es
insb
mov
add
in
mov
cmp
jo
add
lea
inc
adc
xor
mov
test
or
iret
sub
mov
push
movsb
inc
std
pusha
jbe
in
lea
push
into
out
nop
jecxz
pop
pop
loope
pop
cmpb
xchg
sbb
pusha
outsb
jge
stos
jnp
unpckhps
jnp
xchg
pop
jnp
mov
pop
inc
pusha
sahf
adc
xchg
mov
jbe
idivb
out
lock
stos
lret
add
cmpsl
stc
das
push
test
inc
mov
movb
xchg
jl
mov
scas
or
sbb
xor
or
aam
xchg
or
out
stos
jmp
add
mov
roll
insb
out
jecxz
push
mov
aaa
push
in
out
inc
mov
jns
cmp
and
push
cmp
dec
leave
xchg
mov
ds
bound
sbb
idivb
cmpsb
enter
stos
inc
inc
xchg
lods
adc
lods
aad
xchg
fisubs
out
xor
mov
sti
mov
cmpsl
nop
je
mov
jg
jg
and
sbb
rcrl
jae
data16
movsb
cmpsb
mov
push
jmp
sbb
orl
fwait
test
xchg
xabort
and
dec
cld
dec
sahf
fs
inc
cmp
mov
int3
or
outsl
sbb
sub
push
mov
sub
pop
cwtl
mov
pusha
lret
jp
nop
arpl
push
push
das
mov
in
ljmp
std
ret
add
aad
push
sbb
addr16
push
mov
shl
in
mov
mov
cltd
push
mov
add
lret
push
mov
dec
pop
xchg
add
stos
pop
pop
fs
out
xor
sub
jg
fidivrs
cltd
cs
inc
cwtl
inc
aad
jo
xchg
jne
shll
jns
push
in
stos
cltd
leave
and
or
pop
inc
mov
mov
lahf
sbb
out
inc
xor
jbe
dec
mov
test
jge
mov
xchg
adcb
adc
sbb
sbbb
xchg
inc
push
sub
mov
cmpsl
push
call
mov
mov
jnp
lds
data16
mov
lods
call
daa
test
add
in
jbe
add
in
lahf
and
cmp
inc
and
mov
test
pop
lret
xchg
push
subps
xor
jne
xchg
lret
sub
mov
fisubrl
add
rolb
bswap
pop
mov
xchg
pop
lods
push
sub
imulb
mov
pop
jno
call
xlat
fisttpl
cmp
mov
add
push
push
pop
xlat
lods
mov
inc
mov
adc
and
mov
mov
jae
sbb
movsb
jp
jno
imul
clc
xchg
xor
in
sub
push
dec
mov
divl
xchg
cwtl
inc
outsb
dec
xor
cli
mov
mov
into
test
inc
mov
push
cmpsb
xchg
push
not
push
jnp
stos
pop
pop
cmp
inc
fwait
adc
jno
pop
ljmp
aad
inc
xor
fbld
nop
lret
mov
int3
test
push
fs
sbb
and
mov
shrl
fs
mov
mov
cmp
dec
bound
popf
mov
sub
mov
push
out
push
jecxz
fistl
or
test
out
mov
xchg
ret
out
inc
cltd
lcall
pop
push
adc
inc
mov
push
fs
hlt
jno
xchg
sub
push
mov
add
addr16
sub
scas
add
outsb
dec
mov
fldenv
adc
mov
cli
scas
insb
loopne
dec
mov
mov
outsb
fs
aam
and
dec
cmpl
test
divb
mov
adc
int
or
call
push
mov
inc
adc
push
insl
in
div
daa
pop
push
dec
jne
pushf
test
sub
jno
jg,pt
subb
rorb
cmpsl
push
mov
roll
inc
jae
lahf
mov
pusha
pop
pusha
xchg
push
mul
push
loop
adc
out
in
lock
les
mov
pop
leave
dec
inc
jns
or
test
mov
out
mov
cmp
push
xchg
dec
and
add
inc
popa
xor
out
shll
nop
test
pop
lret
add
push
es
or
es
pop
add
iret
sub
xchg
jle
jnp
jge
jnp
andb
fimull
in
test
and
xor
insb
imull
adc
movl
das
test
cmp
mov
inc
aad
imul
jp
pop
into
scas
sar
xor
mov
cmp
sbb
or
pop
or
jae
sbb
mov
call
cld
jne
xchg
clc
xor
mov
pushw
imul
cmp
mov
in
add
aad
mov
sbb
cmp
xor
outsl
ss
xchg
xor
xor
lret
iret
add
pusha
xor
nop
and
out
outsl
out
in
enter
dec
nop
dec
xor
sub
repz
dec
loope
icebp
push
adc
es
jae
testl
cmp
push
test
mov
sub
jp
pop
cld
inc
cmp
dec
aas
pushaw
dec
cmp
jb
xor
imul
adc
sub
mov
in
or
mov
and
pop
hlt
filds
fsubl
push
inc
cs
jmp
cs
dec
xorl
jo
inc
inc
and
mov
clc
mov
mov
enter
sbb
or
sbb
shlb
out
push
int
push
cmpsb
fwait
ret
fidivrs
rcrb
rclb
pop
cmpsb
in
stc
adc
pop
push
push
iret
cwtl
xchg
inc
scas
mov
and
ja
into
iret
xor
stc
std
inc
popa
adcl
imul
mov
ja
pop
xchg
fstl
movsb
cmp
jns
jp
inc
cmp
das
test
std
sub
stc
sbb
lds
stos
stos
je
add
dec
stos
pop
repnz
lea
cmp
shl
test
cwtl
push
mov
and
shlb
stos
ja
xchg
add
enter
jmp
jnp
sub
or
mov
pop
xor
mov
movsb
push
les
cli
shr
xlat
bound
xor
mov
dec
sbb
and
adc
push
xchg
adc
add
cltd
add
ret
int
mov
arpl
xlat
arpl
xchg
ret
pop
test
mov
mov
popa
fldenv
add
test
inc
das
ja
mov
into
scas
pop
scas
cli
pop
push
xchg
fisttps
or
xchg
scas
xlat
int
adc
mov
add
mov
jecxz
popf
cld
inc
and
sbb
add
cs
adc
or
push
dec
jg
js
inc
aas
mov
addb
mov
sbb
ficomps
push
int3
xor
shrb
gs
loopne
js
fdivrl
test
aas
faddp
xlat
lock
mov
and
in
arpl
sets
and
mov
je
daa
lahf
repz
cmp
aas
push
pop
leave
mov
add
sub
sub
mov
lods
ret
pushf
xchg
lret
push
pusha
push
xchg
mov
mov
call
js
push
fwait
pop
jle
cmp
cmp
test
ljmp
mov
or
leave
lret
into
or
test
mov
movsl
jo
mov
pop
cltd
sbb
xor
test
pop
bswap
xchg
mov
leave
loope
iret
mov
inc
sbb
adc
dec
out
pop
mov
out
or
sbb
into
inc
dec
jecxz
push
mov
shll
pop
leave
push
adc
stc
out
cld
dec
std
aam
cmp
or
push
dec
pop
mov
lods
jmp
lcall
ss
adc
jb
push
xchg
lds
xor
es
cwtl
std
test
xor
push
push
push
fsubl
outsl
outsb
ss
cmp
jno
jl
adc
daa
insl
mov
mov
ss
cltd
pop
cmpsb
fwait
jns
fldenv
loop
mov
lods
and
je
and
jnp
in
fdiv
jbe
dec
adc
mov
dec
cltd
or
movsl
ror
jnp
cwtl
mov
sub
lods
mov
and
cmp
cmc
pop
jne
jo
iret
stc
mov
out
xchg
and
pop
jmp
jmp
lcall
xchg
cmpsb
xor
aad
push
dec
jb
fwait
out
in
lret
jmp
mov
jmp
addr16
out
ljmp
lret
push
xor
mov
test
es
into
sahf
loope
sti
or
in
cwtl
inc
addr16
mov
pop
movsl
int3
pop
and
sbb
pop
ror
cltd
push
incl
push
mov
popa
sahf
ret
aam
filds
push
mov
fiaddl
cmp
jmp
js
and
std
jecxz
dec
jns
outsl
ljmp
add
cmp
xchg
and
jb
dec
cmp
cwtl
out
xor
stos
mov
mov
pop
mov
cmp
and
stos
lret
mov
inc
mov
jmp
outsb
inc
sub
test
sahf
add
mov
pop
mov
adc
ljmp
push
movb
inc
into
push
xchg
adc
adc
add
cli
xchg
insl
or
lret
adc
loope
lret
mov
cmp
mov
add
inc
andb
in
pop
push
outsl
leave
mov
and
add
jmp
push
xor
cli
inc
mov
push
sahf
push
rcl
pop
repz
stos
sub
or
test
popa
add
in
loope
jbe
mov
popa
cltd
and
xor
or
fdivrp
jecxz
fistl
mov
out
ljmp
sbb
mull
ret
push
cmp
mov
inc
jmp
rol
test
lds
outsb
dec
mov
push
add
pusha
movsl
sbb
cmp
inc
push
movb
fisubrl
dec
aas
clc
mov
mov
push
lcall
push
scas
icebp
ficompl
dec
push
lret
cmp
loope
sbb
shrb
cmpl
sbb
pop
push
xor
add
sahf
pop
les
push
jo
xchg
pop
inc
adc
aam
pushf
clc
scas
sar
js
mov
call
mov
lret
mov
pop
jae
and
loope
xor
mov
pop
mov
inc
adc
cwtl
jb
xchg
ds
add
lahf
sub
cli
mov
arpl
aas
xor
jl
mov
cmp
mov
inc
sar
fdivs
and
sbb
lock
stos
mov
int3
in
or
in
pop
push
movsl
outsl
sbb
aas
pop
cmpsb
outsb
test
out
popa
push
pop
bnd
out
dec
sar
scas
push
pop
mov
cmp
cmpl
loopne
jmp
lea
xor
mov
mov
cli
outsl
cmp
and
pop
lahf
push
aad
mov
mov
out
sbb
pusha
loopne
sbb
xor
aaa
daa
sti
lds
cmp
icebp
push
pop
xor
test
sti
sub
int3
cmp
mov
sbb
andb
je
aad
mov
stos
lcall
add
xor
cmpsl
fimuls
cmp
mov
les
loopne
cmp
imul
mov
rcpps
mov
jno
mov
xor
sbb
adc
addr16
loope
cmp
fisubrs
shl
jmp
imul
ret
in
push
fsubl
faddl
aaa
lds
xchg
clc
xor
scas
icebp
mov
aas
lds
sub
add
popa
or
mov
or
mov
pop
loop
dec
xchg
xchg
les
add
pusha
in
imul
je
xor
fld
xchg
cmp
cmp
mov
push
push
ja
pop
or
push
or
call
mov
ja
xlat
inc
mov
nop
and
fldl
dec
dec
out
push
std
mov
xchg
iret
lds
jp
stos
sahf
and
pop
enter
out
aas
xor
test
jmp
js
push
lds
inc
mov
cltd
inc
xchg
add
ret
repz
sbb
sub
arpl
and
xchg
dec
xor
inc
cmp
lret
out
jbe
ljmp
ja
add
jbe
adcb
repz
pop
jns
sub
push
aaa
pop
cld
xlat
ds
repz
int
sub
fsubrs
push
iret
xchg
dec
jle
xchg
mov
push
sub
sbb
pop
insl
test
outsb
cmp
xor
sub
jg
mov
in
repnz
cwtl
xchg
mov
movsb
loop
xchg
das
xchg
fsubl
xchg
packssdw
push
nop
xchg
negl
sbb
add
sbb
or
loopne
loopne
cmpsl
sbb
jbe
mov
stos
lret
mov
mov
out
pushf
test
fisttpl
hlt
jae
inc
aad
in
mov
into
jg
inc
push
pop
aaa
pop
stos
mull
adc
mov
ret
dec
adc
inc
lds
loopne
xchg
hlt
call
pop
repnz
pop
sbb
mov
fsubr
lahf
sub
mov
in
into
shll
out
jnp
xchg
adc
ljmp
cwtl
in
aam
push
or
fisttps
pop
das
movsb
inc
aad
insl
pop
test
fiaddl
pop
adc
cs
xor
sbb
idivb
and
jnp
popl
cmp
cli
pop
pop
ljmp
in
sahf
or
out
jnp
ret
jp
mov
dec
aad
scas
fucomp
push
clc
and
push
mov
imul
fcoms
jle
mov
dec
mov
sbb
enter
xchg
loope
jg
enter
adc
mov
pop
sti
ss
mov
mov
adc
jl
sub
hlt
and
cmp
mov
mov
add
mov
sub
xor
popa
das
daa
sub
repz
jge
hlt
das
push
cmp
clc
sbb
sbb
add
xchg
int3
les
push
test
mov
pop
mov
jmp
ret
or
xlat
xor
jb
mov
int
inc
pop
in
xchg
mov
sub
push
xor
dec
enter
and
inc
cltd
sub
sbb
addl
xlat
adc
or
dec
adc
push
lds
and
shlb
ljmp
shll
sub
push
xchg
pop
rcll
negl
dec
push
add
int3
jmp
inc
adc
or
xorb
push
data16
stos
test
mov
and
sub
push
push
and
xor
sub
jg
sub
sti
add
out
xor
inc
or
loop
orb
rorl
aas
add
pushf
jb
mov
jnp
dec
and
out
sub
pop
inc
and
fdivrs
pop
fadds
jle
jg
mov
cmp
loop
data16
push
ljmp
xchg
pop
cltd
and
ds
add
subl
ljmp
and
mov
dec
pop
fimull
js
push
pop
sub
movsb
jge
xchg
cmp
cltd
aaa
push
in
lcall
nop
lea
inc
cld
rclb
imul
jecxz
bound
xor
mov
cwtl
inc
ds
xor
dec
loope
cli
ds
leave
push
mov
push
ja
mov
jmp
cmp
or
cmp
ficompl
outsl
mov
cmp
sti
nop
sub
push
das
repnz
inc
outsw
push
rcrl
loope
pusha
mov
dec
aam
add
push
jg
cmc
stos
dec
clc
lahf
mov
fnsave
inc
outsb
aam
shl
mov
stos
sbb
cmp
mov
lods
lock
imul
sbb
test
fwait
mov
in
mov
lods
out
mov
xchg
mov
cmc
loop
xor
pop
jge
mov
mov
jo
push
push
push
into
xchg
shrb
xchg
and
sub
add
sbb
or
xor
loope
in
sub
lret
cmp
movsb
mov
push
ror
inc
mov
loopne
jb
fwait
aas
in
ret
fsubs
sarl
gs
mov
es
jae
pop
or
call
pop
cmp
cs
enter
xor
jo
lret
sub
cmp
push
pop
mov
pop
xchg
ds
in
fisttpl
cmp
in
in
or
fsubrl
rolb
int
xchg
int3
adc
fs
dec
ljmp
xchg
pop
sbb
mov
pop
mov
nop
ret
lods
and
insb
cmp
dec
cmp
cs
cwtl
lods
lds
loop
sub
or
xchg
arpl
cmp
xchg
or
pop
clc
test
lds
sbb
jbe
jae
fistpl
add
fadds
mov
in
lds
jns
pop
add
cli
sarb
stc
pop
jecxz
adc
and
jno
out
pushf
cmc
pop
cmpsl
jns
push
pop
movsl
sbb
iret
lahf
cmp
pop
xchg
inc
popf
mov
cmpsl
fldl2t
cltd
mov
or
cmpsl
into
out
scas
pop
clc
stos
push
jb
xchg
jl
mov
mov
mov
inc
sub
fsts
arpl
mov
popa
cs
push
or
and
addr16
fdivrl
xchg
jmp
mov
jecxz
les
add
dec
cmp
xor
sub
pop
mov
add
cmp
xchg
or
mov
je
xchg
adc
cmp
stc
pop
pop
scas
fwait
es
enter
xchg
in
mov
sbb
jns
dec
push
xchg
sbb
rcrl
stc
je
xor
inc
leave
je
sub
adc
sub
pushl
xchg
cmpsb
ja
cmp
loope
ss
cmp
push
fldenv
xor
inc
jmp
mov
jge
stos
adc
mov
mov
fisubs
je
jo
inc
ja
fisubs
mov
add
clc
inc
mov
stos
jmp
sub
push
push
clc
lds
mov
add
and
inc
add
pop
mov
mov
jge
lds
lahf
pusha
js
loop
stc
imul
add
js
fs
push
dec
outsb
jge
and
mov
add
lock
mov
cwtd
cltd
iret
stc
fwait
imul
add
jae
mov
or
ret
cmpsb
push
add
dec
dec
popf
jmp
push
sub
pusha
je
dec
clc
mov
add
addr16
mov
ret
pop
out
mov
out
push
or
dec
movsl
mov
mov
xlat
decl
pop
pop
push
jo
call
pop
sbb
scas
xor
icebp
in
or
push
sbb
ds
lahf
andb
mov
push
in
mov
lods
cmp
call
dec
pop
bound
pop
lcall
lods
ja
aas
stos
cmpsl
jle
inc
add
cmp
repz
xchg
lods
cmp
lea
mov
pusha
xor
cmp
mov
cmc
aam
push
mov
adc
push
mov
or
xchg
mov
pop
inc
mov
cmp
test
dec
out
leave
pop
test
rolb
pusha
push
jmp
mov
outsb
jl
shrb
scas
bound
pushf
loope
cmpsb
dec
mov
lea
shr
imul
mov
fmuls
xor
ljmp
xchg
aaa
jae
jno
xlat
push
outsb
insl
cld
mov
push
loop
pop
inc
leave
push
fimuls
mov
adc
mov
mov
ret
loope
push
and
and
sbb
repnz
lods
lahf
or
mov
push
sahf
mov
pop
fs
cmp
xchg
xchg
xchg
pop
mov
insl
out
fs
xor
xchg
sub
cmp
lock
divl
xchg
ret
lods
adc
push
dec
daa
pop
mov
popf
bnd
and
jg
int3
sbb
insl
insl
les
repnz
sbb
cwtl
fnstenv
lods
adc
jb
lret
test
es
jae
out
insl
xchg
xor
or
mov
inc
outsl
data16
pop
inc
mov
in
test
ds
mov
or
push
xor
dec
ljmp
fistpl
mov
aaa
rep
xlat
loop
dec
scas
or
add
in
dec
into
mov
into
enter
or
bound
mov
xorb
out
dec
inc
shl
dec
fdivrp
stos
pop
aas
adc
fidivs
or
push
je
mov
in
addr16
das
push
push
xlat
clc
inc
daa
arpl
push
bound
je
les
dec
loopne
mov
mov
cmp
outsl
cmp
cmpsl
pop
sbb
ss
loopne
add
and
std
jno
sbb
fs
addr16
mov
sub
popl
cmc
bound
imul
nop
repz
sub
addr16
ret
cltd
xor
xor
pushaw
push
stos
outsb
loopne
imul
sti
mov
or
mov
sbb
test
adc
cmp
sbb
mov
and
lods
and
mov
sbb
icebp
mov
pop
inc
push
push
paddd
and
je
outsb
dec
pop
xchg
sbb
adc
outsl
cs
ffree
dec
ficoml
mov
test
scas
cmp
hlt
mov
and
sarb
ds
cmp
out
sub
out
jbe
stos
daa
mov
sbb
push
sub
std
nop
lea
sub
mov
je
popf
jbe
sub
movsl
xchg
enter
fmuls
add
fmull
ss
or
mov
insb
xor
push
ret
and
xlat
push
nop
jge
scas
xchg
dec
ja
in
mov
rcl
call
xlat
out
jne
sub
cmp
or
or
or
mov
sub
dec
sub
add
fidivs
es
cli
repz
jl
add
movsl
pop
mov
scas
and
out
test
or
xor
mov
lahf
mov
jecxz
push
pusha
pushf
pop
cmp
int3
outsl
pop
outsl
xor
ja
mov
out
sarl
test
sbb
sti
sbb
push
aam
std
nop
xchg
pop
push
mov
leave
aaa
lock
addl
mov
jo
mov
or
and
iret
or
ds
rolb
arpl
dec
xor
mov
or
inc
inc
ljmp
and
iret
in
add
jo
inc
nop
lods
pop
pop
push
add
les
cwtl
pusha
insb
int
cmc
sbb
pop
mull
add
mov
add
int
scas
mov
mov
sbbb
aam
inc
std
in
inc
dec
dec
lahf
or
add
pop
xchg
xor
loope
fcmovnu
xor
or
ss
dec
js
inc
or
leave
adc
jecxz
insb
add
lds
xchg
and
mov
out
inc
in
xchg
mov
cmp
cli
es
std
add
jo
dec
ficompl
into
shlb
mov
inc
test
add
push
pop
xor
jmp
rorl
scas
pushf
push
mov
cmpsb
std
int
filds
pop
and
lcall
jge
das
mov
mov
shlb
imul
pop
adc
mov
roll
or
lret
gs
lret
jle
scas
mov
dec
fadd
adc
jae
mov
enter
call
fisubrs
dec
mov
pop
dec
lcall
push
push
or
add
sbb
shll
ret
xor
sti
fisubs
jmp
inc
call
inc
fnstcw
into
inc
pop
jmp
push
test
aaa
ret
dec
xchg
xorb
mov
inc
jp
inc
and
sarl
jl
daa
and
push
iret
mov
mov
xchg
out
mov
adc
or
test
fidivrl
push
mov
jnp
leave
pop
scas
roll
orl
pop
ss
clc
jae
mov
sti
repz
push
pusha
sbb
push
xchg
add
std
sub
xchg
ret
jo
mov
js
ss
js
int
push
mov
je
rcrb
jne
jb
cmp
std
mov
sub
cmp
xor
sarb
sar
imul
inc
aam
and
addl
dec
xchg
push
jecxz
pop
ret
jle
xchg
mov
xchg
cmp
mov
xchg
cli
and
pop
loope
push
pop
sahf
ja
and
dec
sbbl
test
mov
lock
lods
imul
push
fsubs
mov
sarl
std
sbb
cmp
and
and
out
fildll
and
push
jmp
fiaddl
mov
fidivrs
and
je
add
pop
mov
clc
or
xchg
cwtl
pop
jle
sbb
mov
decl
faddl
out
in
fdivrp
adc
push
out
xchg
outsl
out
push
or
cmp
insl
hlt
dec
rorl
repnz
rclb
in
jl
adc
pop
mov
mov
sahf
pop
xchg
outsl
adc
popa
mov
lods
mov
test
adc
push
mov
inc
sub
xchg
pusha
xor
popl
nop
lahf
sub
add
adc
imul
pop
stos
enter
xor
push
scas
clc
sub
insb
xchg
sub
cmp
sbb
outsb
cmp
leave
and
pop
movsb
add
insb
sbb
shrl
aad
xchg
cmp
scas
add
int3
scas
lods
js
sub
push
shll
fcoms
scas
sub
cli
cmp
inc
xchg
push
nop
loopne
jp
cmpsb
push
insl
mov
push
int
sub
out
pop
inc
xchg
pop
dec
mov
inc
push
jl
int3
cmp
test
xor
cmp
out
cmpsb
inc
repnz
pushf
jp
in
or
dec
mov
lds
scas
pop
lods
into
and
cmp
std
adc
jb
std
push
out
xor
jo
inc
fwait
andb
add
in
cwtl
enter
mov
jb
push
lret
xchg
gs
xchg
loop
mov
pusha
shrb
mov
arpl
insl
jo
inc
dec
mov
mov
cs
je
xor
daa
scas
stc
xor
add
xor
xlat
flds
mov
or
xorl
enter
push
into
rcr
xor
lret
repz
cltd
pop
movsl
js
jmp
adc
in
inc
arpl
fsubl
cs
cltd
scas
int
imul
pop
lahf
out
lret
test
das
icebp
lods
inc
repz
and
adc
cltd
push
sub
sbb
rolb
gs
aam
je
fists
aas
pop
int
and
call
pop
sbb
fwait
adc
nop
mov
push
cld
test
movsl
or
mov
jb
jae
insb
popa
jne
mov
lret
adc
mov
sbb
dec
movsl
mov
leave
jmp
push
nop
or
dec
xor
rcrb
sahf
xlat
ja
push
xchg
inc
cwtl
movsl
fistl
dec
movsb
mov
pusha
pop
call
dec
aam
out
gs
lods
xchg
pop
jae
mov
fistpl
inc
std
pop
mov
pop
sbb
jle
nop
loopne
inc
test
inc
ret
and
neg
stc
and
dec
mov
xchg
icebp
test
mov
xchg
fs
jns
ror
sbb
push
scas
inc
cmp
or
test
lahf
pop
repz
es
and
dec
pop
lods
aam
jp
jnp
scas
push
shll
cs
pop
bound
aad
call
pushf
push
shll
jb
sub
or
mov
mov
ret
imul
pop
outsb
dec
imul
scas
jnp
fldenv
insb
inc
or
xor
mov
or
and
cld
mov
mov
lds
movsb
or
cwtl
cmp
or
cmp
add
xor
push
mov
mov
imul
jnp
ret
mov
adc
cwtl
sbb
push
into
push
daa
out
mov
pop
in
push
xchg
sbb
aam
and
sbb
and
mov
out
add
xchg
push
fabs
inc
lret
div
scas
pop
sub
push
lret
mov
ret
pop
mov
dec
dec
jne
push
and
ljmp
xor
shl
lds
jae
lcall
cld
lcall
mov
int
mov
xor
lret
or
roll
shrl
enter
push
sbb
adc
mov
pop
mov
pop
lahf
sbb
pop
out
and
loop
xchg
jp
popa
cmp
dec
cmp
jg
xchg
adc
mov
ret
movaps
or
mov
mov
sti
les
ljmp
lret
idivb
or
dec
out
sbb
add
adc
out
mov
call
lods
aam
sti
jge
and
inc
fwait
mov
or
in
mov
add
sub
push
sub
movsb
cmp
inc
dec
dec
push
dec
add
shl
lret
jge
mov
test
out
std
dec
add
add
movsl
and
icebp
roll
cmpsb
sbb
and
and
xchg
dec
or
sbb
jecxz
sti
enter
push
adcl
pop
jle
in
mov
mov
sub
iret
dec
loope
aas
jmp
ret
jnp
ss
mov
arpl
pusha
xchg
adc
adc
dec
int3
lret
roll
push
dec
mov
cltd
nop
and
sarl
aas
pop
sub
mov
push
arpl
or
jb
cs
aaa
incl
loope
push
push
pushf
sbb
insl
add
mov
push
out
jno
imul
jl
xor
mov
mov
sarb
out
xchg
stos
jle
repz
or
or
roll
ds
mov
or
movsb
popf
in
in
rcr
lret
subl
pop
dec
fcmovu
add
aaa
dec
cmp
enter
dec
loope
sbb
shlb
lock
cmpsl
insb
inc
sub
cmp
daa
pusha
cld
fcompl
add
adc
dec
or
mov
cmp
mov
in
lea
lret
enter
jge
fdiv
or
xor
fcoml
or
mov
mov
add
cmp
decb
clc
data16
les
add
lods
adc
out
aaa
cmp
test
inc
mov
adc
ljmp
fs
out
dec
mov
xchg
sbb
stos
mov
cmp
in
push
add
push
arpl
icebp
jle
pop
out
mov
mov
arpl
push
insb
adc
imul
dec
imul
lea
add
push
fwait
jle
add
fcoms
repnz
popf
cltd
pop
xor
or
mov
mov
ficoms
push
cs
cmpsb
inc
adc
sbb
sub
in
and
adc
je
lods
repnz
pop
add
ss
fsts
inc
lock
pushf
dec
xchg
mul
fldcw
add
movsl
adc
mov
pusha
adc
sub
lret
shr
inc
mov
fsubrs
mov
adc
jb
dec
push
clc
shl
xor
enter
lds
or
mov
in
adc
inc
add
push
fadds
push
in
cmp
in
ret
pop
popf
in
mov
push
add
pcmpeqd
lret
xchg
imul
fstpt
mov
mull
xchg
int
and
mov
inc
sub
dec
bound
add
xchg
push
fnstcw
jl
jno
movl
hlt
lcall
dec
or
int
insb
addr16
xorb
pop
dec
cmc
outsb
aaa
aam
push
adc
xchg
mov
es
xchg
pop
adc
push
xor
cld
test
add
cmp
adc
jp
push
bound
lcall
mov
aas
adc
cmp
mov
int
add
xor
push
gs
dec
or
movsl
daa
enter
ss
insl
ljmp
fwait
dec
jle
dec
rcl
mov
cwtl
arpl
repz
jmp
mov
sbb
sbb
fildl
dec
out
das
jo
aas
imul
icebp
and
ret
adc
adc
cmp
out
sub
mov
jl
fiadds
sbb
sbb
orl
mov
jae
inc
cmp
push
sub
shll
stos
stc
dec
int
lcall
and
push
inc
push
or
mov
sarb
jp
push
cmpsl
data16
jp
cmpxchg
or
fdivrl
pop
fildl
and
adc
rol
jno
aas
rclb
test
pop
int3
sub
adc
cld
push
je
mov
sub
add
fisttpll
mov
fdivr
cmp
test
mov
pop
cs
xchg
push
icebp
repz
pop
pop
adc
imul
movsb
xor
es
mov
cmpsl
aas
pop
sbbb
popa
sub
sub
insb
scas
jle
xor
mov
pushf
jle
ret
inc
lods
loope
jo
aas
sbb
lret
mov
adc
mov
ret
into
inc
lods
sbb
push
jne
or
stos
jle
ljmp
cmpl
push
mov
pop
je
pop
mull
pop
xor
daa
sub
movsb
call
daa
mov
mov
movsb
insb
add
mov
dec
mov
decl
cli
lock
jle
pop
add
aas
inc
rorb
jne
in
scas
dec
pop
push
mov
xchg
push
sti
sub
mov
sbb
sti
outsb
popf
repnz
jge
or
inc
mov
loopne
dec
inc
in
mov
xchg
mov
push
lcall
sub
rcll
rorl
lcall
jecxz
rorb
xor
add
incl
scas
xor
push
mov
cwtl
cli
rcr
test
fs
test
mov
pop
fdivrs
pop
push
cmp
int3
xchg
outsb
push
cmp
sub
xchg
fsubl
mov
je
pop
mov
and
mov
pop
mov
cmp
dec
push
mov
jle
jne
pop
cmpsb
shll
cwtl
aad
inc
cli
test
je
xchg
and
or
gs
dec
mov
push
pop
pop
sub
jb
cld
mov
xchg
jg
add
enter
pusha
cmp
or
cwtl
daa
and
mov
cmp
mov
sub
movq
cld
sahf
fldt
fstl
dec
inc
jnp
arpl
dec
cmp
mov
sahf
cmpsb
fsubrp
imul
add
into
adcl
xchg
mov
fs
repz
xchg
pop
cltd
xorb
add
inc
push
xor
call
adc
mull
lret
incb
leave
out
xor
jnp
mov
lea
xchg
lahf
mov
mov
and
pop
movsl
std
sbb
out
cmp
and
pop
xchg
cli
int3
loope
fimull
cmp
push
ret
push
pop
mov
xor
mov
andl
mov
in
popf
pusha
nop
and
fimuls
lods
outsl
mov
inc
call
aam
mov
pop
mov
jns
test
fwait
movsl
mov
movsl
dec
test
divb
xor
sahf
dec
cmp
or
pusha
push
sub
ret
jle
hlt
inc
or
xorl
in
sub
dec
mov
hlt
mov
lods
xor
cmpsl
stos
pusha
call
mov
dec
xchg
and
adc
and
mov
add
sub
test
cwtl
pop
addr16
aam
sub
add
and
rclb
jge
mov
jns
push
or
and
cli
insb
pusha
inc
and
adc
in
cmp
push
imul
xchg
nop
cmp
dec
test
addr16
repz
xchg
cltd
add
bound
mov
mov
push
jmp
loope
adc
dec
lea
or
dec
cmc
pushf
orb
pop
imul
push
repz
fdivs
outsb
sub
mov
ret
lahf
inc
mov
out
imul
push
repz
subb
dec
movsb
sbb
inc
sbb
aaa
dec
push
and
lock
cld
dec
ror
sbb
sbb
and
pop
add
into
xor
aam
jb
out
loopne
daa
xor
pop
jle
lea
jmp
inc
cmp
jge
shr
cmpsb
fsub
sbb
jp
and
negb
out
inc
mov
push
repnz
ror
aas
loop
push
adc
or
rolb
jg
ljmp
outsl
dec
aam
leave
push
cmpsb
or
xchg
jle
gs
and
mov
sub
xchg
push
incl
ljmp
in
ljmp
gs
sbb
jbe
pop
adc
xlat
enter
rcl
pusha
in
in
cmp
pop
inc
xchg
subb
lret
pop
dec
jecxz
cmp
cs
repz
mov
and
lahf
mov
push
xchg
mov
cltd
dec
sarb
addb
pop
je
and
fs
adc
mov
adc
shrl
dec
push
cld
inc
mov
xchg
or
push
mov
dec
adcb
jle
cmp
cli
insl
xor
or
dec
mov
lock
lret
mov
pop
je
out
repnz
cmc
pop
fcomps
stos
arpl
xor
iret
icebp
pop
push
scas
pop
sub
gs
loopne
and
loop
mov
pop
ret
dec
call
sub
jle
pushf
pop
add
mov
sub
xorl
adc
mov
cmpsl
push
sub
daa
pop
adc
les
cmpsb
jg
in
cmp
leave
les
mov
mov
arpl
dec
sti
mov
fdivrl
lcall
fcoml
push
int3
dec
cs
fisubrs
std
xor
adc
call
arpl
add
int3
jbe
xor
sti
dec
or
inc
sbb
pop
pop
cltd
add
in
cld
cmp
pop
pop
in
sub
test
xor
fistl
clc
mov
call
es
flds
das
xchg
scas
dec
gs
mov
popa
aaa
inc
push
jae
insl
jl
movlps
ficoml
sbb
mov
push
dec
stos
inc
shr
sbb
dec
xchg
and
mov
lcall
scas
sbb
cs
je
mov
cltd
test
pop
shll
add
into
adc
imul
clc
jmp
sub
push
iret
mov
outsl
xchg
pop
mov
clc
mov
mov
jno
cmp
push
inc
or
into
js
adc
pop
jl
pop
mov
jns
scas
xor
or
sub
fwait
pop
ja
xchg
aaa
icebp
push
aas
jbe
pushf
or
aaa
add
push
pop
test
cwtl
int3
and
lock
adc
lods
jo
inc
loope
and
ljmp
gs
lret
pop
inc
hlt
insl
in
cmp
in
call
or
lds
xchg
pusha
int3
lds
es
and
lods
loope
or
pop
mov
sbb
mov
pop
jb
fiaddl
mov
jg
loope
fildll
sub
mov
das
jge
mov
push
cli
push
gs
data16
cmp
add
insb
push
adcb
enter
loope
loopne
inc
inc
test
inc
jg
xor
iret
mov
xchg
and
fdivrs
lret
aas
mov
adc
xor
shll
popa
hlt
mov
xor
fwait
rcrl
xchg
out
jo
loopne
ret
test
xor
jp
cmc
adcb
mov
pop
xor
in
out
sub
xchg
mov
lret
mov
loope
pop
aad
icebp
call
mov
mov
pop
jbe
in
rcrl
repz
outsl
lea
into
mov
scas
mov
notb
fwait
imul
sbb
mov
in
scas
mov
out
adc
mov
pop
mov
fdiv
in
mov
lcall
sbb
cmc
mov
aam
dec
or
push
pop
subl
dec
and
fildll
shl
mov
aas
aad
or
shlb
repz
sarb
sbb
sbb
xchg
dec
insl
je
and
shrl
fcmovnu
add
arpl
stc
cmp
mov
mov
mov
hlt
mov
pop
dec
add
getsec
xor
xchg
lods
aad
ret
lcall
jecxz
xchg
cwtl
pop
mov
mov
das
nop
dec
ret
pop
loopne
iret
mov
dec
sub
into
cwtl
push
dec
mov
xor
cli
mov
inc
dec
daa
add
jnp
push
clc
cli
cmp
stc
and
enter
mov
sbb
push
push
stos
mov
insb
inc
push
es
shlb
cmp
xchg
test
jb
loopne
mov
ljmp
in
cmp
adc
fnstcw
cs
in
sbb
mov
addb
in
add
xchg
pop
xchg
pop
repz
jle
xor
fistpl
cmp
mov
adcl
pop
fsubp
dec
cwtl
cmp
insb
push
loopne
sub
icebp
inc
mov
in
and
shll
insl
vpunpckldq
cli
sti
int
dec
mov
mov
cmp
inc
sub
lock
adc
aaa
or
cs
inc
inc
imul
xchg
mov
adc
sbb
and
adc
int3
aam
sarb
in
mov
inc
pop
lret
mov
inc
adc
aas
testl
pusha
mov
pop
es
xchg
sbb
mov
movsl
cmp
dec
mov
scas
stos
aaa
je
mov
in
pop
mov
pop
push
or
push
mov
or
adc
mov
int
in
add
call
fstps
out
xchg
out
push
and
stos
sahf
jmp
scas
dec
jb
jecxz
shrl
sbb
ret
ljmp
ljmp
les
jecxz
xchg
test
mov
sub
jns
movsb
int
jb
mov
cmp
sbb
int
stos
addr16
or
add
test
mov
jno
cmp
xor
xchg
cltd
insb
cmpsb
dec
loopne
cld
repnz
mov
jne
adc
fwait
inc
dec
sub
fistpll
hlt
ss
xor
nop
in
fildl
dec
push
lret
mov
xor
fs
gs
push
mov
jne
mov
mull
xchg
xor
insb
verr
mov
and
dec
test
aad
test
arpl
sbb
and
addr16
push
cmp
mov
cmp
pop
cltd
loope,pn
jbe
test
and
mov
lock
pop
or
rcrb
mov
or
mov
cmp
jmp
stos
jo
cli
or
stos
xchg
xchg
cmpsb
lods
cmp
fs
add
test
jo
test
lcall
xchg
add
or
lret
aad
xchg
fdivrp
rcr
pop
jb
xor
add
fistl
insl
pop
in
xor
push
sub
mull
mov
popa
fildl
add
adc
sti
aaa
mov
mov
jae
and
fwait
sbb
jp
subl
cmp
je
lret
popa
sarb
cmp
push
imul
cli
lahf
lret
mov
aaa
jb
outsb
fisubrl
cmc
add
mov
and
pop
pop
jno
outsb
add
mov
loope
mov
mov
lcall
pop
call
pop
xor
inc
ret
in
popa
pop
lods
aaa
repnz
mov
fisubrl
mov
clc
cs
repnz
xchg
loope
pushf
jp
or
aaa
mov
fimull
or
add
es
xchg
je
loope
xchg
jo
cmp
mov
outsb
jmp
mov
pop
pop
xchg
xor
lock
push
push
cwtl
push
push
adc
pop
pop
inc
mov
mov
cmp
jo
and
xchg
fisubl
adc
imul
jo
xchg
lock
push
and
fists
test
pushf
pop
sbb
ds
dec
and
pushf
sahf
inc
cmp
cmp
push
stos
mov
or
mov
test
lods
cli
lods
mov
cmp
sbb
jne
push
push
xor
or
adc
lahf
adc
mov
dec
mov
xchg
je
std
or
mov
mov
scas
ja
mov
push
fcoml
repz
mov
adc
lret
xchg
stc
pop
dec
add
fcompl
or
jnp
push
fldt
cld
cmpsb
shll
and
scas
mov
mov
mov
jae
gs
add
outsb
out
inc
int3
das
jecxz
cmp
or
cmp
popa
cmc
add
and
xchg
cltd
sbb
push
stos
nop
mov
shlb
fists
mov
jb
xor
or
faddl
popa
or
imul
hlt
jne
enter
jl
bound
scas
sub
ja
arpl
dec
sub
push
mov
mov
mov
notl
pop
xor
test
in
sbb
pop
ffreep
icebp
adc
cli
jecxz
push
pop
gs
pop
nop
and
mov
push
ficoms
lds
xor
inc
push
mov
out
lods
jmp
jecxz
push
cmp
mov
nop
sbb
mov
xchg
and
lret
sbb
shlb
mov
push
mov
jb
dec
and
in
shlb
mov
jns
xorl
lds
faddl
jb
mov
dec
add
lea
in
mov
sti
sbb
into
test
sub
ljmp
and
data16
and
mov
mov
scas
pop
std
sub
dec
xor
xor
je
cmpsl
lock
and
fcmovb
jl
aas
sub
test
insl
mov
mov
or
rcll
inc
fldenv
push
jl
pop
cld
xor
mov
stos
popa
xor
mov
sarl
jne
xchg
sub
mov
repnz
sbb
sbbb
sbb
je
scas
jne
and
mov
mov
cmc
xchg
leave
push
inc
xor
mov
sbb
andb
sbb
pop
xchg
or
jge
dec
fmull
or
xor
das
xchg
xchg
nop
andb
adc
stos
mov
xchg
loopne
mov
jp
imul
mov
decl
jo
aas
dec
adc
fwait
inc
sbbl
push
inc
mov
sub
adc
add
fsubrp
add
in
add
ss
ss
lcall
test
addr16
test
orl
stc
fiaddl
aam
add
dec
add
adc
in
iret
xor
out
add
mov
insl
lea
sub
aas
insl
xlat
iret
loopne
andps
dec
pop
jp
lahf
arpl
mov
adc
cltd
add
sbb
rorb
sbbb
pop
sahf
mov
sbb
dec
and
movsl
aam
std
cs
clc
lret
inc
pop
xchg
es
jnp
sbbl
or
push
aam
push
dec
js
or
jne
sbb
sti
push
aaa
loope
lods
push
cmpsl
rclb
mov
cwtl
sbb
idivl
dec
ret
mov
int
xlat
cld
cmp
sbb
dec
or
cmp
pop
lods
mov
xchg
ja
into
inc
push
mov
xor
mov
and
xchg
aas
inc
mov
gs
jle
push
or
jmp
push
inc
adc
fisubrl
cmp
std
cwtl
pop
aam
add
pop
jno
xor
cli
jl
dec
paddq
je
sub
loope
jo
insb
movsb
cmpsl
loope
lcall
and
pop
and
icebp
mov
lods
push
pop
cmp
shrb
dec
mov
push
lret
mov
decl
movsb
pop
lods
mov
sub
int3
lock
jno
mov
add
mov
les
mov
cmp
andb
or
imul
sub
push
add
jecxz
dec
das
mov
je
rcll
jne
iret
mov
dec
imull
adc
mov
mov
push
and
adc
shl
xor
inc
sbbl
dec
jnp
xchg
pop
popa
mov
arpl
and
and
popa
imul
add
mov
out
xchg
js
sub
xor
pusha
pop
bt
loope
arpl
pop
fs
mov
mov
pop
push
inc
ja
xchg
daa
push
sub
dec
or
jl
mov
add
jp
enter
sbb
movsl
lds
idivl
add
jno
jge
in
mov
dec
mov
cmovbe
es
popa
mov
adc
ret
dec
orl
or
fwait
add
sbb
loop
fwait
sbb
cmp
add
adc
xchg
cmp
pushf
int3
into
mov
repz
fldt
push
stos
inc
mov
insl
sbb
dec
dec
cmp
pop
xchg
testb
lcall
lret
add
mov
rcrl
xchg
cmp
psubd
xor
lret
jp
stc
je
movsb
xchg
rcrb
cs
or
decl
jl
cmp
push
mov
test
push
sbb
push
push
sbb
out
jp
lcall
fucomip
lret
rcll
scas
cmp
mov
xlat
inc
mov
inc
and
mov
stc
add
xchg
addr16
jp
cmp
ss
xchg
mov
call
sub
jbe
fwait
fwait
sti
popf
icebp
fcoml
mov
divl
pop
xor
push
jb
mov
inc
fbld
jo
cmpsl
cli
icebp
je
rcll
jne
jo
xlat
mov
sbb
rcrb
fmuls
fldt
and
xchg
sahf
gs
data16
dec
lcall
scas
filds
xor
fcmovb
mov
roll
hlt
xchg
fnstcw
fldl
or
sub
push
mov
lods
cmp
popa
sub
push
mov
push
mov
addr16
mov
stc
sbb
or
mov
out
sbb
sub
sub
push
js
sbb
jns
fildl
aaa
fcmovbe
movl
adc
pop
dec
mov
lods
xor
adc
ja
lods
stc
movsb
inc
push
push
or
popf
add
dec
jo
icebp
mov
mov
jge
leave
cmpsb
in
push
add
sub
iret
into
movsb
js,pt
pop
pop
test
xchg
and
out
push
xlat
out
or
cs
or
fcoms
push
dec
and
sahf
xchg
std
ret
and
aam
pop
jp
pusha
sub
fdivrp
pop
dec
out
movsl
add
mov
nop
sbb
fstpt
xchg
gs
jmp
or
push
push
push
mov
aaa
mov
sarb
cli
loopne
add
test
sub
incl
xor
mov
xor
inc
in
mov
add
fwait
jl
mov
das
dec
fcmovnu
movsb
mov
jne
clc
insb
adcb
insl
and
cmpsl
jae
jne
mov
les
inc
push
and
inc
sbb
cmp
sub
push
adc
pop
add
push
jb
addl
mov
mov
xchg
xor
jnp
add
sbb
test
push
xor
push
in
mov
or
leave
iret
scas
sti
inc
jmp
stc
les
mov
mov
shlb
and
pop
das
cwtl
sti
test
push
leave
pop
movl
addb
mov
jmp
xor
sarb
mov
push
adc
jns
andl
xor
xor
jl
xchg
divb
push
cld
inc
push
sti
xchg
repz
imul
push
mov
pushw
in
and
xor
mov
push
push
testl
xor
mov
jns
inc
int3
push
mov
sahf
ja
mov
scas
jns
mov
sub
jp
cld
les
mov
rol
out
xchg
pop
aas
fmull
dec
sbb
push
xchg
or
cmp
jbe
dec
nop
mov
test
xor
sbb
cvttps2pi
es
mov
sahf
sbb
mov
add
movsl
or
stos
inc
out
lods
insl
rcll
inc
test
in
jle
insb
or
push
pop
sahf
gs
cli
cli
gs
lret
xchg
popf
add
lret
sbb
xchg
xor
or
pop
mov
repz
lea
xchg
ja
sub
push
lret
mov
cs
and
xchg
dec
std
push
fcomip
sti
pop
jbe
aad
ret
xchg
cmp
mov
lcall
iret
scas
sarl
leave
in
sbb
shlb
cmp
addr16
jo
aaa
pop
inc
sti
sbb
insb
js
push
mov
inc
and
xchg
pop
or
sahf
movsl
pop
addl
inc
mov
xor
lock
xor
or
lods
cmp
sbb
hlt
rorb
push
pop
sbb
dec
pop
xchg
imul
cmc
pop
js
mov
mul
out
sub
mov
mov
or
pop
ss
js
jno
pop
and
lret
int
insb
mov
aam
push
lahf
fidivl
stc
jp
xchg
xchg
push
je
sbb
ja
fcmovb
and
jecxz
add
jl
add
mov
in
inc
lret
pop
inc
and
inc
xor
pusha
fisttps
jg
std
out
sub
mov
xor
xlat
or
and
xchg
jae
xchg
cmp
pop
cmc
push
bnd
pop
scas
pop
je
pop
clc
in
cmpb
fidivs
fisttpll
xchg
cmp
inc
adc
inc
or
stc
subl
rcrl
iret
cmpsb
inc
cmp
mov
push
notb
xchg
ret
dec
je
pop
fimuls
incl
xchg
cmp
mov
repnz
jae
jnp
loope
adc
inc
rclb
imul
fwait
push
es
dec
movsl
and
lock
sarl
push
push
sub
sub
inc
jnp
iret
das
dec
xchg
hlt
cmc
or
in
cmp
gs
sahf
jbe
inc
test
mov
imul
fwait
dec
inc
sbb
shrb
dec
movsb
mov
xchg
sub
sub
and
push
pop
fstps
mov
out
fiadds
sub
clc
mov
decb
push
jnp
gs
loop
cmp
aam
test
pop
leave
in
xor
repnz
lcall
push
cmpsb
fisubrs
xor
inc
sub
je
arpl
add
and
daa
mov
or
stc
jae
jo
or
fwait
xchg
ds
add
fadds
ljmp
sub
pop
lret
rorb
stos
sbb
shll
nop
cmpsb
xchg
pushl
lahf
add
push
int
push
in
fisubrl
movsb
mov
or
das
call
test
stos
dec
mov
push
scas
arpl
imul
or
jge
mov
mov
negl
dec
imul
fs
ret
cwtl
mov
and
sbb
xor
xchg
add
jmp
adc
cmp
icebp
sbb
outsb
subl
dec
out
aas
out
mov
lret
mov
push
adc
aad
movsl
fisubrl
mov
add
mov
dec
pop
push
cwtl
pop
mov
push
push
sub
mov
lock
sbb
inc
outsl
call
ret
pusha
clc
mov
push
mov
mov
mov
andb
adc
lock
pop
jbe
lods
subb
movsl
mov
jno
in
pushf
jecxz
xchg
rep
aaa
lcall
call
ret
cltd
sub
lret
out
cmp
adc
imulb
adc
rcrl
mov
pop
lret
sub
cmp
jae
test
xchg
repnz
pop
adc
dec
dec
push
xchg
rclb
xchg
or
rep
or
fisttps
sub
adc
xchg
cwtl
push
ret
andl
ja
pop
ret
cmp
test
incb
pop
add
test
lret
jb
push
xor
mov
addb
std
movsb
xor
push
jb
pusha
or
sbb
mov
addl
pop
ret
rorb
and
repnz
adc
nop
mov
mov
je
xor
pop
mov
xor
movsl
and
push
mov
sti
mov
das
pop
je
outsl
cmp
mov
leave
dec
pop
insl
test
inc
and
cmc
scas
sbb
mov
push
sub
inc
cli
cmp
add
repz
out
aad
fisubs
in
into
psubw
pop
pop
lods
imul
inc
cmp
cmp
mov
lods
xor
scas
mov
jecxz
in
push
fisttpl
test
orl
xchg
outsb
adc
pop
jg
repz
jae
out
mov
mov
call
in
mov
pop
sub
lea
out
daa
test
push
pop
xchg
dec
cmp
test
mov
push
enter
push
sub
insl
arpl
add
dec
sbb
xchg
jle
in
test
xchg
call
jb
push
sbbb
fistps
adc
jne
out
xchg
mov
subb
or
dec
xchg
and
adc
mov
dec
inc
push
sbb
push
inc
lret
sub
mov
add
adc
pop
sti
and
push
sbb
jl
enter
leave
repz
fisubrl
movnti
or
xor
sbb
jo
mov
ljmp
adc
pop
and
adc
sti
jbe
mov
enter
cmc
sti
shl
pushf
jnp
test
stos
adc
fidivl
push
fucomi
idivb
outsb
mov
dec
push
loopne
adcl
jnp
fistpll
rolb
or
push
mov
jbe
mov
mov
shlb
paddw
pusha
pop
fsubs
mov
sub
sub
jp
jp
add
xor
int3
dec
lret
daa
outsb
xchg
loop
into
xor
mov
push
movsb
sbb
test
cli
mov
and
jge
fldl
adc
push
lahf
pop
aas
inc
aaa
push
push
add
add
push
sti
es
mov
and
cmp
push
jg
mov
add
push
int
push
pop
sbb
dec
adc
dec
out
dec
sbb
nop
cmp
shl
shrb
xor
sbb
lock
xchg
icebp
mov
and
dec
out
sbb
ffreep
xchg
inc
fwait
inc
xchg
mov
shrb
push
aaa
in
paddusb
mov
bound
cmp
jne
inc
xchg
test
cmc
xchg
jle
test
mov
mov
sbb
add
push
adc
inc
pop
jne
inc
shll
out
lea
push
add
xchg
mov
cs
mov
std
shrb
into
imul
push
mov
lret
sbb
aas
push
add
ljmp
cmp
mov
loope
lret
dec
adc
movsl
lcall
xchg
xchg
jecxz
popf
jg
xchg
jecxz
jns
xorl
jge
adc
int
jmp
push
lcall
or
sbb
ljmp
fwait
cmp
xor
xchg
pop
fistps
cld
aas
jge
jns
sbb
xchg
cmp
test
enter
cltd
push
xor
aam
mov
lea
sbbl
xchg
not
ja
out
jmp
push
nop
pop
xlat
ret
mov
mov
and
push
out
leave
add
push
addr16
inc
push
add
xlat
pop
mov
js
xchg
mov
mov
pop
mov
into
xchg
scas
push
es
fistpl
adc
dec
dec
xchg
inc
loop
shl
jbe
add
mov
imul
mov
sbb
loop
pop
shr
cltd
stos
or
pop
add
test
xor
test
cmp
hlt
add
notl
fbld
mov
push
or
add
jb
or
pop
dec
push
lods
pop
push
mov
subl
mov
mov
adc
out
cmp
adc
and
das
fdivrs
fs
movsb
gs
mov
data16
cmpsb
outsb
add
and
insl
into
test
push
dec
cli
mov
roll
inc
jmp
mov
push
mov
cwtl
ret
out
cmp
outsb
pop
shrb
mov
cmpsb
adc
mov
and
js
xchg
inc
pop
pop
xor
in
dec
fstps
iret
not
clc
jge
stc
cmpsl
adc
add
add
push
fisttpll
loopne
cmc
movsl
cwtl
and
test
aam
pop
add
imul
jae
jno
loope
enter
push
js
mov
push
jnp
dec
idivl
jnp
shll
inc
push
aas
insl
sub
mov
push
int
mov
addb
adc
sbb
mov
dec
dec
adcl
sub
in
cwtl
jns
das
mov
outsb
addr16
outsl
in
xchg
mov
add
mov
jb
ror
pushf
xchg
mov
mov
lods
sbbb
mov
or
pop
into
in
insb
dec
xchg
stc
repnz
sub
mov
cmpsb
dec
jb
movsb
ret
dec
ljmp
outsb
lret
cwtl
and
imul
jmp
mull
fs
cld
repz
les
push
cmp
cmpsb
jb
fstpl
mov
dec
add
xor
int3
pop
fs
push
mov
ljmp
or
popf
mov
push
fmuls
out
pop
xchg
scas
clc
push
sub
repz
mov
fcmovb
pusha
inc
fsubs
ss
test
adc
push
inc
pusha
lahf
popf
movsl
sub
push
xor
mov
jo
jno
inc
cmp
mov
xchg
jle
jns
movsl
pop
pop
dec
je
fcoms
inc
or
inc
push
daa
cmpsb
push
in
inc
stos
pop
in
lahf
push
mov
pop
testb
sahf
mov
xchg
int
movsb
repnz
out
mov
popf
outsl
shl
sbbb
xor
mov
jp
and
insl
lods
cmc
clc
iret
mov
add
sti
or
aas
ja
jecxz
das
mov
pop
push
lds
scas
lds
aam
and
add
sahf
jb
jl
cld
cmp
dec
je
aad
cmp
push
imul
cmp
jnp
aam
xchg
fidivrl
es
dec
dec
pop
push
mov
mov
add
std
sti
outsb
insl
fistpll
mov
and
pop
clc
push
sti
cmp
add
mov
loope
jge
popf
push
and
icebp
mov
xchg
sbb
pop
ja
mov
and
and
jl
pop
jmp
xor
int
shll
insb
cld
or
jbe
sbb
mov
pop
ljmp
rolb
scas
or
xor
dec
gs
stc
int
mov
fiadds
loope
inc
mov
jo
xchg
jmp
pop
jno
test
aas
in
sbb
cld
repz
sbb
sbb
inc
mov
cmp
mov
out
lods
mov
out
pop
or
inc
insl
scas
push
std
mov
sbb
mov
push
mov
inc
pusha
shld
fldl
popf
arpl
mov
mov
sub
clc
insb
push
outsl
inc
pop
push
pushf
sub
les
fisubl
aam
stos
lahf
mov
push
mov
xor
cwtl
into
jg
adc
out
inc
sub
xchg
testl
mov
sbb
out
jae
jl
and
lcall
xchg
push
sub
pop
inc
loop
add
jb
xor
out
fmuls
nop
mov
scas
sub
fildll
push
stos
cmp
pusha
pusha
inc
loop
and
fwait
dec
in
sub
testl
xchg
and
mov
jle
loope
xlat
and
ds
or
jbe
pop
push
cmp
mov
loop
test
and
rolb
sbb
and
sub
xor
orb
ror
call
insl
add
rcrb
in
pushf
sbb
mov
or
data16
pop
or
add
sti
std
in
ljmp
pop
or
dec
in
xor
mov
mov
pop
and
adc
jb
cld
cmp
movsb
dec
jg
and
jb
inc
mov
dec
sub
cmpsb
sub
cmp
and
les
imul
or
sub
pop
mov
ss
sub
fcoml
fwait
mov
push
adc
out
cmp
sbb
jle
jmp
mov
js
jae
push
xchg
mov
je
jl
popa
xchg
fisttpl
mov
jns
lods
cltd
mov
push
jmp
daa
xor
lret
js
sti
pop
push
mov
and
jno
jbe
add
int3
and
adc
dec
push
jecxz
dec
in
cmc
mov
pop
ja
mov
out
ljmp
sarl
xor
mov
pop
push
movsl
fadd
cmp
std
mov
mov
fcompl
das
xchg
shll
jl
or
addb
push
dec
cwtl
xchg
rorl
jmp
xlat
pop
mov
cwtl
das
mov
mov
xor
mov
jmp
int3
push
decl
adc
in
mov
les
jmp
pop
adc
jne
xor
mov
mov
loop
enter
cli
in
add
mov
mov
xchg
sbbl
dec
and
or
enter
pop
pop
stos
js
jmp
in
push
fsub
lcall
aas
popf
scas
or
mov
fisubl
xor
aam
jg
ret
xor
xor
mov
je
sahf
dec
jge
adc
fidivrs
sub
test
adc
push
mov
js
inc
sbb
cmc
push
ret
inc
aas
loopne
cltd
ljmp
cmp
lea
int
fisttpl
pop
push
mov
or
inc
xor
sbb
ljmp
cmp
jo
jae
call
sbb
add
movsl
dec
mov
sub
push
sub
or
cmp
outsl
add
sbb
clc
push
inc
lahf
mov
sti
jg
subb
jno
dec
sub
cwtl
insb
out
insb
dec
and
lock
mov
fs
push
lcall
movsb
mov
daa
jb
cs
and
roll
inc
pusha
dec
push
dec
add
mov
xlat
in
jmp
ljmp
ret
mov
push
sbb
sub
or
dec
jge
push
cmp
sbb
into
add
int3
clc
repz
jp
sub
rcrl
mov
sbb
lcall
fs
dec
pop
pop
jae
pushf
cmp
mulb
jb
addb
sbb
aas
insb
inc
repnz
push
and
and
mov
add
dec
ret
fcmovnu
xchg
adc
pop
repnz
std
out
xor
pop
mov
adc
jp
cli
xlat
int3
mov
out
enter
fisubs
adc
mov
dec
cmpsl
dec
mov
loopne
fsubr
cmp
dec
sbb
push
int3
shl
mov
adc
or
add
cld
fcmovnb
jecxz
dec
mov
cltd
jl
push
lret
jmp
mov
into
mov
in
lods
cld
cmp
mov
xchg
ret
cld
sub
jp
fcmovb
mov
mov
or
mov
jns
insb
xor
pusha
dec
addr16
sub
adcb
mov
sbb
mov
pop
dec
fstpl
scas
sahf
xchg
xor
mov
das
sbb
pop
movd
xchg
mov
les
std
dec
and
pop
or
jecxz
lahf
sti
and
xor
inc
fsubrp
mov
cmp
sbbl
adc
scas
push
icebp
cmp
out
fs
mov
cmp
nop
fstl
scas
shrb
stos
mov
xchg
int
sub
fidivl
fldenv
or
adc
adc
mov
in
xorb
jbe
sub
inc
fxch
add
pop
mov
and
pusha
stc
testb
roll
cmp
mov
jnp
sub
hlt
shll
outsl
into
xchg
pop
pop
pusha
jne
cmpsl
pop
add
pop
hlt
jge
pop
fsubrs
rcr
sbb
pop
cmp
js
sbb
call
jne
testl
mov
ds
lods
outsb
sub
cmp
adc
xchg
xchg
sub
or
int3
jns
imull
arpl
in
pop
test
fldcw
jmp
loope
sbb
data16
cmp
mov
sahf
js
sbb
mov
popf
cmp
lods
shl
sub
pop
enter
push
dec
mov
mov
popa
inc
jmp
dec
lret
mov
aas
xor
outsl
cmc
add
xchg
and
pop
and
insb
mov
xchg
pop
mov
jns
sub
push
addr16
xor
mov
loopne
fs
stc
inc
lret
sbb
mov
dec
and
lea
push
push
jbe
data16
sub
test
in
cltd
mov
and
test
add
fldcw
jp
ret
push
outsl
cmpsb
pop
xchg
push
cmp
nop
mov
xor
in
add
mov
xchg
pushf
mov
cmpsl
push
loop
xor
mov
add
xor
std
sahf
or
icebp
enter
push
std
adc
cmpsb
fldl
mov
lds
cs
xchg
adc
sbb
lahf
js
les
cli
cmp
sbbl
roll
jns
xlat
xor
sbb
sub
hlt
iret
aad
out
xor
xor
jo
mov
leave
push
sbb
push
jl
add
daa
dec
sti
inc
cmp
mov
inc
sub
stos
je
das
sbb
xor
xchg
inc
cltd
test
ret
insb
fisttpl
pop
notl
cltd
inc
movsl
aaa
ljmp
mov
push
sahf
sbb
mov
shrb
lods
cli
in
jecxz
inc
nop
inc
xor
dec
cmc
sub
lods
ret
jl
jo
inc
add
sbb
repnz
xchg
movsb
stos
mov
scas
cmp
dec
jmp
sti
aas
and
daa
stc
jbe
icebp
mov
xchg
pop
sub
mov
es
fnstcw
cmp
adc
int
mov
pop
mov
outsb
pop
pop
sbb
testb
or
xchg
jge,pt
rcrl
in
aad
add
cmp
incl
mov
jnp
lret
out
std
jle
mov
or
xor
jno
pop
stos
pop
jbe
mov
add
outsb
fstps
jnp
stos
iret
mov
lods
rcl
jmp
outsb
aad
mov
add
dec
sbbb
arpl
movsb
aad
mov
nop
push
xchg
popf
sub
cmp
adc
mov
jmp
shll
sbb
rcrl
jae
arpl
cli
cmc
xor
mov
sarl
arpl
jge
jae
outsb
mov
ds
xchg
imulb
ret
lods
mov
xor
push
dec
jb
xchg
add
inc
push
ja
sbb
xchg
or
hlt
pop
fwait
stc
lods
mov
sub
lods
mov
or
lea
mov
add
pop
xchg
fptan
lock
add
dec
inc
cli
lret
mov
cmp
rolb
and
jge
test
sarl
imul
lahf
cs
or
jecxz
lock
and
jbe
mov
push
sbb
xchg
cmp
or
push
enter
xor
cli
mov
push
fimuls
cmpl
loop
daa
pop
ret
stos
fsubrl
push
jb
inc
out
push
cmp
jbe
sbb
xchg
clc
cli
add
adc
sub
mov
sahf
movsb
ret
xchg
mov
or
sub
in
js
pop
cs
or
pop
push
clc
aad
push
sarb
fcompl
dec
push
bound
sbb
dec
and
cmp
xchg
dec
xor
mov
pop
dec
inc
popf
lods
and
lahf
push
ja
mov
and
cmp
mov
or
xorb
dec
push
mov
std
inc
push
es
jae
jp
push
add
insb
test
xchg
and
sbb
fs
sbb
or
in
xchg
setge
es
test
dec
test
mov
addr16
dec
and
inc
pusha
jae
pop
xor
dec
lret
xchg
push
in
dec
jle
cmpsl
out
fcoml
sub
notl
int
mov
or
gs
imul
pushf
mov
cltd
mov
bound
ret
xor
les
fcomi
push
inc
adc
mov
sub
addr16
cmp
movb
lcall
lcall
pop
insb
sub
adc
and
sbb
imul
jge
cmp
sbb
nop
mov
push
inc
jecxz
mov
xor
es
movsl
lahf
lds
xor
inc
out
jnp
daa
sub
and
stc
add
loope
fnstcw
arpl
in
jbe
mov
cmpsl
and
adc
mov
dec
cwtl
mov
jno
iret
mov
insb
jmp
xor
cmp
pop
xor
cs
insl
push
lret
xchg
push
pop
lret
mov
dec
add
mov
mov
jno
nop
sahf
cmp
mov
ret
pop
lahf
and
jae
in
adc
icebp
dec
mov
lds
scas
adc
xchg
sub
xchg
mov
adc
lds
iret
sub
pop
cmp
push
fidivrs
pop
stos
jb
sbb
pop
rcll
data16
xchg
add
repz
sbb
cli
mov
fmulp
int3
xrelease
fwait
cmp
int3
xor
enter
scas
jle
adc
scas
into
add
hlt
sbb
mov
jp
mov
lret
pusha
mov
add
mov
in
xchg
mov
add
jno
jmp
push
push
inc
push
repz
or
push
das
dec
cld
cmp
out
addr16
push
cmpsl
add
fldenv
loop
es
addl
aam
jno
fldpi
js
mov
sub
or
es
and
jns
cwtl
cmp
aam
dec
cld
fstpt
mov
inc
sti
sub
in
sub
stos
ret
sub
pusha
xchg
in
jp
out
lret
jle
nop
cmpsl
mov
lock
jl
inc
repnz
push
dec
ret
test
push
xchg
in
stos
jae
jno
daa
scas
sub
xchg
jge
cmp
push
dec
dec
int3
jecxz
sub
or
adc
inc
mov
in
lds
mov
jle
sbb
scas
icebp
into
push
les
dec
jp
push
mov
dec
or
aam
stc
mov
mov
pop
and
add
dec
inc
or
into
mov
cli
rcll
rorb
mov
cwtl
mov
addr16
insb
inc
in
out
xchg
pop
clc
jb
out
mov
js
xchg
mov
mov
inc
js
sbb
xchg
hlt
pop
das
mov
mov
mov
fimull
add
jae
mov
jae
jmp
sahf
into
scas
jmp
int3
dec
ret
out
daa
xchg
ja
fcmovnb
jno
iret
mov
lahf
xchg
data16
mov
cmpsb
scas
push
mov
ret
dec
iret
jle
shrl
movsl
stos
jecxz
jae
xor
push
and
outsl
aaa
sbb
cltd
cmc
insl
pop
dec
insb
mov
adc
fistpll
cmovno
shl
sub
add
jae
adc
inc
aad
xchg
lea
push
dec
int3
xchg
les
ret
jb
mov
inc
pop
lods
repz
mov
sbb
fisubs
icebp
insl
xor
or
xchg
loopne
sbb
and
jle
aad
xor
jns
inc
jae
les
inc
lret
fildl
fildl
shrl
pop
test
jp
cwtl
repz
out
test
xcrypt-cbc
cmpsl
aam
int3
cmpsl
add
adc
sbb
inc
add
push
push
xchg
and
dec
pop
in
ret
mov
arpl
mov
jmp
xorb
loope
mov
mov
hlt
push
jb
sbb
xlat
or
lcall
xchg
push
mov
clc
jmp
inc
or
lea
cmpl
cmp
push
mov
xor
mov
xchg
fdivrl
jmp
hlt
mov
mov
sub
sub
pop
push
mov
and
xor
jmp
mov
ret
aas
nop
add
xchg
in
cmp
mov
ret
push
push
xor
pop
adc
js
cmp
add
data16
inc
lret
cmp
or
push
in
push
jae
xor
clc
pusha
inc
mov
xor
xor
loopne
mov
xchg
andl
cld
shll
sbb
pop
clc
aad
fstps
mov
shlb
and
pop
lret
dec
fcoms
dec
outsb
mov
cltd
jle
xor
in
mov
jae
xor
movsb
ss
insb
inc
jl
inc
shl
mov
adc
mov
dec
cmp
into
inc
or
mov
stos
clc
call
lret
repnz
pop
inc
push
sbb
bound
push
roll
aas
push
mov
inc
mov
cli
mov
inc
ss
push
xchg
xor
xchg
outsl
jge
mov
ljmp
push
stos
xchg
add
sub
cmp
cs
fmuls
push
mov
inc
dec
lock
sub
lods
or
dec
fisttps
xlat
sbb
or
mov
mov
xchg
rorb
push
ja
mov
cltd
add
push
clc
cmp
dec
cmp
adc
out
les
es
and
push
jle
rorb
sub
outsl
je
push
je,pt
pusha
sub
cmp
sbb
shrb
shll
xchg
mov
shrb
push
bound
push
lods
mov
js
pop
push
imul
jns
bound
add
bound
dec
mov
adc
mov
dec
btc
mov
xchg
mov
insb
or
pop
mov
mov
repnz
lock
add
out
test
cld
push
nop
pop
sub
into
xchg
into
arpl
hlt
jecxz
cwtl
jp
mov
call
jae
in
lea
std
cld
xchg
fcoms
out
rcrb
cld
popa
scas
insl
add
jp
add
repnz
lods
lods
test
ja
xchg
sub
dec
xchg
test
sbb
dec
mov
mov
pop
outsl
mov
xchg
fadd
adc
jne
pop
call
adc
call
xor
loop
jnp
or
lds
insb
lods
jnp
adc
scas
test
inc
les
inc
ficoms
push
mov
movsb
fildl
xchg
imul
popa
cmp
ss
xchg
dec
dec
push
push
mov
cmp
cmp
imul
fbstp
repnz
stc
scas
sbb
adc
jl
jmp
and
jp
movsl
test
push
mov
lds
cmp
inc
xlat
popa
inc
divl
add
fwait
cpuid
cmpsb
pop
push
inc
xlat
mov
inc
adc
int
rorb
cmp
cmp
dec
rcl
xor
or
dec
ljmp
insb
mov
mov
mov
mov
iret
mov
mov
mov
mov
dec
mov
mov
outsb
aad
ds
into
cmp
add
mov
dec
out
stos
enter
enter
adcb
sbb
fisubs
sub
dec
cli
cmp
mov
loop
clc
sub
jbe
shl
xorb
mov
mov
xchg
jnp
or
ret
scas
xchg
loopne
out
mov
leave
fimuls
imull
mov
xchg
dec
push
je
scas
test
jns
imul
dec
jp
xor
and
fisttpl
sbbl
mov
js
inc
or
jo
jno
adc
or
jecxz
sub
jl
js
sbb
cltd
bound
inc
aaa
adc
xchg
jge
jae
jb
jge
sarl
sbb
or
dec
pop
icebp
aad
adc
lock
sbb
pushf
xchg
sbb
mov
adc
push
sbbl
addr16
sti
cmp
pop
es
int3
mov
popf
mov
fmuls
cmp
scas
inc
mov
inc
and
or
insl
daa
push
fdivs
dec
test
xchg
mov
lods
jle
icebp
jne
ds
repz
addr16
and
cmp
cs
mov
mov
aad
enter
or
sti
pushf
std
aam
add
cli
sub
lods
mov
xchg
fmul
movsl
dec
mov
fld
sub
add
adc
test
imul
push
dec
pusha
xor
push
fnstenv
or
fildl
mov
in
cmpb
pushf
or
stos
dec
sbb
test
shll
aad
mov
or
mov
xor
fmuls
into
in
mov
out
arpl
xchg
cmpsl
xor
sbb
xor
outsl
fsubrs
leave
fists
les
mov
dec
scas
inc
es
fiaddl
mov
lahf
in
loopne
getsec
fldt
mov
push
or
mov
test
mov
and
out
gs
ret
test
hlt
pop
inc
cli
mov
dec
std
xchg
push
cmpsl
lds
mov
into
jl
lds
outsb
push
int3
inc
stos
add
mov
cmp
lret
mov
cmp
mov
sub
inc
pop
ljmp
imul
xchg
mov
out
pushf
xchg
std
xchg
push
sahf
pop
or
sbb
movsl
stc
movsb
inc
cltd
repz
js
jo
pop
lcall
fwait
add
loope
xorl
sbb
add
lret
mov
ret
rclb
cwtl
xor
in
xorb
mov
pop
mov
mov
or
inc
inc
aas
sbb
sub
adc
cmp
scas
into
mov
nop
outsl
push
dec
xchg
and
sbb
push
xchg
sbb
stc
push
arpl
aad
pop
add
stos
mov
sahf
cltd
shll
rolb
in
mov
sti
mov
push
das
fwait
lret
jecxz
andb
iret
fisttpl
pop
test
lods
sbb
mov
into
lahf
jnp
jge
clc
in
or
mov
fadds
das
sti
jge
mov
inc
mov
and
cmpsb
loopne
fsubrl
cmp
push
or
add
push
ficoms
push
xor
inc
pushf
and
inc
ret
cmpsb
cwtl
mov
lods
cmpsl
push
cmpsb
xchg
xchg
push
stos
lahf
jg
add
push
rcll
loop
adc
push
js
lahf
sarl
ja
mov
popa
shrb
imul
ja
scas
cmc
add
xchg
outsb
and
lcall
outsb
inc
inc
mov
push
fistps
mov
popa
call
shll
dec
mov
cli
push
push
in
test
mov
push
mov
movsl
mov
pop
cld
adc
repz
sub
cmc
pop
push
je
test
aam
outsl
mov
out
aad
mov
adc
mov
inc
ret
pop
out
std
sub
mov
fildl
xchg
mov
int3
add
push
jns
pop
mov
lret
or
shlb
iret
or
push
jo
mov
and
push
pop
pop
pop
push
add
jne
adc
xchg
push
mov
sub
fidivl
mov
lcall
and
outsb
inc
popf
cwtl
fsubrs
add
data16
loope
fcompl
cs
and
push
in
arpl
sub
xor
add
sub
stos
fadd
lock
xor
outsb
pop
xor
mov
mov
add
mov
imul
add
nop
fs
loope
or
jbe
ror
cmp
push
cmp
fimull
or
popf
jle
les
xchg
mov
cmc
fstpl
lcall
ret
mov
cmp
push
testb
mov
js
adc
dec
or
in
ret
divps
pop
int
mov
xchg
dec
mov
bound
int3
xor
xor
mov
or
mov
inc
sub
xchg
pop
loopne
xchg
adc
test
aas
cmpsl
mov
sbb
mov
mov
movsb
inc
test
or
loop
push
repnz
cmpsl
jnp
ds
in
ja
lret
mov
xor
xor
loop
or
mov
jno
test
imul
and
cmc
push
mov
in
or
push
rcr
dec
stos
ds
dec
adc
pop
imul
out
push
inc
outsb
sub
push
push
out
mov
push
in
fdivrs
scas
mulb
inc
adc
pop
ss
dec
divb
sub
test
push
cmp
adc
mov
inc
outsb
and
int3
sbb
jle
out
sub
cmp
xor
mov
xor
add
pop
call
cmp
hlt
ja
in
jns
int3
mov
and
or
jp
jp
out
xchg
mov
shlb
lahf
dec
adc
ret
dec
movsb
pushf
dec
shll
aam
push
cmpsl
nop
jae
jmp
jg
test
xlat
lock
lcall
enter
mov
nop
xor
mov
mov
xchg
lods
mov
pop
sub
stos
push
movsl
into
xor
or
mov
dec
movsb
xor
sub
mov
xchg
das
lock
ss
xchg
shlb
mov
std
fnsave
test
cld
pop
push
stc
jo
adc
adc
and
int3
mov
inc
push
mov
sbb
push
clc
inc
insl
loope
cli
aaa
mov
cwtl
pop
dec
lcall
jmp
inc
cmp
inc
stos
shll
mov
jb
dec
push
add
push
in
pop
add
and
jb
and
push
add
inc
es
cmp
daa
je
bnd
iret
mov
sbb
dec
push
aam
pop
add
into
or
test
dec
jb
mov
dec
jnp
dec
and
jbe
rcll
aas
mov
add
ja
sbb
outsb
scas
sarb
fbstp
aad
pop
popa
or
cwtl
sbb
icebp
int3
int3
pop
add
nop
lds
sti
lcall
ja
sub
lahf
sbb
push
sub
mov
adc
mov
lock
jbe
pop
scas
gs
xlat
adc
jg
mov
mov
jmp
add
aam
add
push
fsubs
adc
loop
xchg
jne
test
sbb
lret
scas
out
pop
jl
xchg
pop
jns
ja
mov
cltd
cwtl
inc
es
leave
ljmp
arpl
sub
shll
lods
ret
jge
loop
inc
mov
pop
pop
sub
lods
in
int3
inc
jmp
out
xchg
jp
cli
mov
inc
jecxz
in
push
adc
fs
lret
jnp
lock
ret
pop
xor
mov
stos
iret
xchg
ret
jmp
dec
jecxz
jnp
adcb
in
adc
dec
imul
cmp
pop
call
sbb
add
lahf
adc
push
pop
sub
mov
push
sub
pop
movsb
push
jg
jo
outsl
enter
lcall
sbb
repnz
sub
ljmp
mov
mov
cmp
cli
aam
sub
sti
xchg
icebp
dec
push
stos
gs
leave
cmp
fs
je
dec
cltd
jge
sub
fwait
jno
xor
jae
aad
push
jmp
xor
jb
sbb
mov
lret
cmp
mov
ss
imul
inc
je
loop
add
sub
cmp
push
sahf
cmp
nop
iret
test
jp
out
mov
pushf
sub
xchg
push
inc
ds
stos
sbb
movsl
xchg
popf
xchg
sub
xlat
cwtl
jo
sbb
and
sbb
leave
jae
rcll
repnz
lret
imul
aaa
je
pop
popf
outsb
mov
ds
gs
daa
mulb
dec
fs
lcall
leave
addr16
shr
push
lret
arpl
jns
mov
stos
push
pop
mov
stos
ljmp
nop
pop
enter
rcr
jbe
pop
jne
jecxz
or
push
adc
cmp
inc
adc
test
pop
repnz
mov
loope
jle
fimull
call
adc
mov
sub
mov
add
cli
mov
clc
inc
pop
dec
push
push
push
sbb
aad
or
mov
fadds
or
adc
cmpsl
aas
or
or
jmp
aam
xorb
scas
out
cwtl
cmpsl
das
jno
xlat
test
inc
sets
rcrl
xchg
movsl
pop
mov
call
fwait
ret
push
imul
in
adc
adc
testb
mov
mov
int3
iret
dec
inc
jmp
les
cwtl
sti
rcr
jo
nop
mov
adc
out
insb
imul
cmp
xor
pushf
rcrb
push
pop
fisubl
movsb
cmc
mov
mov
in
or
jne
add
mov
xor
arpl
notl
or
nop
icebp
out
cmp
arpl
int
test
test
push
push
mov
mov
inc
jmp
clc
es
fdivs
je
sbb
sti
aaa
mov
adc
pop
mov
push
xchg
push
insb
mov
pusha
out
adc
jne
and
dec
adc
in
xchg
xchg
mov
mov
movsb
fldl
push
jge
cld
int3
jge
push
arpl
clc
rcl
lret
jmp
in
insl
aas
or
mov
fmul
addr16
rorb
jmp
or
sbb
add
leave
outsl
gs
scas
mov
mov
and
lcall
adc
cmpsl
push
dec
idivb
scas
jecxz
and
shlb
mov
out
clc
push
test
sbb
fmull
outsb
iret
cmp
jg
xchg
pushf
pop
xchg
fsubr
mov
add
pop
and
mov
jbe
jge
push
fisubrs
mov
dec
in
icebp
push
test
orl
cmpsl
add
ficompl
mov
jle
mov
mov
and
mov
add
xlat
aaa
mov
cmp
mov
in
add
stos
and
mov
out
cmp
push
sbb
add
cmp
sub
cmp
hlt
rcll
ficoms
lret
les
xlat
cmpsb
push
orl
push
sbb
sbb
pop
fs
add
adc
movsb
pop
loope
cmp
fcompp
push
lods
lret
push
sub
add
mov
add
insb
push
inc
lret
pop
mov
push
mov
inc
addr16
or
lcall
enter
pusha
sub
pop
addb
add
sbb
pop
mov
ljmp
dec
subb
mov
mov
push
mov
ss
pop
mov
cmpl
fidivs
loopne
pop
mov
push
mov
jmp
pop
std
adc
mov
in
test
lea
int3
dec
cmp
iret
icebp
jae
jnp
out
pop
xor
inc
xchg
and
loopne
mov
dec
rorb
push
jae
adc
push
and
mov
jae
mov
and
cmpsb
aaa
sbb
sbb
pop
sbb
popl
cmp
mov
jbe
lcall
loopne
mov
repnz
xor
sbb
add
std
mov
inc
in
jle
pop
aas
arpl
adc
xchg
mov
jnp
jns
mov
rolb
in
leave
cmc
push
add
add
inc
sub
and
outsl
push
repnz
daa
dec
shl
cld
xchg
mov
inc
dec
mov
pop
mov
push
add
inc
dec
arpl
jp
inc
mov
cmp
aaa
pusha
bound
pop
dec
pop
cmp
jb
fisttpll
mov
and
cmpsb
jp
ret
mov
mov
or
jmp
out
popa
mov
sbb
sub
push
hlt
jp
cli
or
popf
data16
cld
push
and
xor
adc
or
mov
cmp
loop
adc
xor
mov
or
jo
pop
jge
les
addr16
jmp
push
lds
dec
ljmp
mov
xor
jp
add
dec
dec
mov
push
addr16
mov
dec
out
test
test
dec
js
xchg
nop
outsl
lcall
out
mov
cmpsl
push
sarb
movsb
addr16
mov
outsb
icebp
mov
and
mov
adc
cltd
mov
subl
xlat
inc
fdivr
inc
or
xchg
test
icebp
scas
cmp
or
sarl
ds
outsb
mov
or
push
and
ret
addr16
subl
in
popf
pop
pop
cmpsl
mov
sub
and
mov
shll
jne
in
test
add
jp
pop
xor
out
aas
fcmovbe
and
mov
xor
inc
add
and
inc
out
mov
es
push
sbb
sub
dec
push
sbb
add
xor
dec
push
mov
clc
sub
orl
push
jle
mov
lds
fdivrl
mov
bswap
sbb
test
repnz
cmp
in
cmp
cmp
pop
lods
popf
lcall
pop
roll
add
in
cmc
push
or
mov
push
outsl
jae
or
stos
xchg
mov
test
sub
nop
pushf
fbld
or
xchg
ret
cmpsb
cld
jp
mov
movsb
pop
mov
shll
les
ss
aaa
lock
cmp
xchg
fsubrs
imul
jl
lret
add
mov
ret
push
loop
mov
in
imul
mov
fsubr
int3
aam
xchg
ja
stc
int3
orb
std
mov
mov
js
insl
sub
ror
outsb
arpl
bts
jecxz
pop
push
push
cmp
xchg
mov
adc
mov
jle
xor
and
xlat
push
xor
fistps
jnp
mov
add
repnz
popa
test
test
cmp
add
inc
nop
push
inc
pusha
cmp
out
and
lret
lods
in
mov
scas
xor
imull
and
xor
xchg
xchg
loope
sbb
jns
scas
mov
mov
fwait
jb
aaa
fxtract
lret
mov
xchg
lods
in
adc
xor
lcall
add
and
xchg
sub
test
fdivrl
lea
xor
mov
ss
mov
ljmp
or
icebp
jmp
imul
add
mov
pusha
xor
cltd
pushf
push
cmp
add
and
es
popa
xor
mov
jae
pop
lock
sbb
cmp
out
jmp
push
stos
push
imul
jle
aad
adc
mov
fidivs
mov
pop
cwtl
mov
cmpsb
fdivrs
and
in
push
sbb
cli
mov
jl
repnz
xor
xorb
jbe
stos
das
mov
xor
sub
jns
mov
shll
clc
push
add
push
data16
push
clc
xlat
movsl
xor
pushw
or
mov
inc
inc
ds
aam
sub
es
add
gs
rorl
jne
cmp
mov
daa
mov
cmc
fidivs
cmp
jl
daa
jnp
repnz
outsb
test
bound
test
add
adc
add
mov
imul
loopne
mov
hlt
jnp
xor
push
jno
push
pop
xchg
mov
jbe
inc
and
insb
repnz
fistl
inc
fstpt
xor
cltd
sbb
aas
xchg
push
ret
stos
je
adc
xor
sahf
sahf
and
rorl
jo
stc
adc
fdivl
pop
sub
outsb
clc
int3
call
fadds
mov
aaa
ffree
pop
mov
push
ja
pusha
ds
sub
xchg
rcrb
mov
loop
ja
lret
or
add
cmp
in
and
xchg
cmp
flds
add
js
xchg
jno
mov
lods
popf
lds
scas
mov
add
xor
shrl
push
jle
xor
movsb
popf
mov
fadds
push
sub
repz
ljmp
jge
aad
rol
pop
fs
mov
add
xchg
lahf
stc
add
dec
sub
aas
inc
and
mov
sarl
lods
cld
xor
mov
sub
icebp
testb
xchg
call
daa
fsubrp
mov
push
dec
dec
ss
es
inc
int
jo
or
in
xchg
je
mov
lahf
jge
stos
cmc
jecxz
sbb
jne
mov
pop
mov
data16
xor
scas
jb
xchg
jge
orl
mov
jo
xchg
push
mov
aam
scas
lea
push
js
cmp
in
shlb
adc
pop
sub
and
mov
or
data16
add
jg
xchg
xor
xor
sbb
fiadds
sbb
jnp
xchg
dec
inc
syscall
mov
lcall
daa
orb
out
movsl
das
int3
aas
pop
clc
cmp
xchg
sbb
xor
cwtl
lret
cmp
lea
mov
stc
es
lret
pusha
jnp
aas
push
shrl
jb
add
pop
mov
movsl
hlt
jb
aam
rol
lcall
es
mov
imul
dec
lahf
pop
push
xchg
cmpsb
jmp
push
notl
fdiv
push
pop
pusha
inc
dec
and
xchg
adc
out
js
jge
ds
cmp
and
pop
lock
adc
mov
adc
leave
xchg
sbb
shlb
data16
clc
push
push
lock
ds
enter
pushf
add
jle
pop
xor
xchg
insl
xchg
adc
and
sub
xchg
mov
fwait
push
sbb
hlt
add
out
outsb
mov
mov
loop
ja
sti
xor
fsub
sahf
lods
pop
sub
test
add
cltd
scas
dec
and
xor
mov
mov
jae
bound
push
aaa
xor
into
add
add
xchg
pushf
and
jge
sub
or
mov
push
insl
pop
xor
lret
xchg
mov
mov
sbb
scas
ret
adc
stos
fadds
jo
ret
outsb
sub
mov
xchg
in
sub
in
scas
add
iret
sub
add
imul
pop
test
cmpsb
fisubs
jle
xor
lds
mov
nop
pusha
inc
push
int
shll
dec
push
xchg
dec
out
ja,pt
xchg
jbe
mov
jbe
push
into
mov
dec
fnstsw
jne
add
push
sbb
out
cmpsl
lret
sub
add
cwtl
and
adcb
rcrl
fimuls
mov
sti
sbb
xchg
int
scas
movsl
mov
xchg
cmp
sub
fsubr
dec
icebp
mov
shlb
iret
sqrtps
repnz
mov
sbb
mov
jnp
data16
xchg
pop
and
rcl
adc
addb
jg
xor
pop
inc
dec
dec
pop
jns
test
sbb
rorl
adc
or
in
xchg
dec
aam
push
pop
pushf
xchg
adc
loope
pop
sub
xor
cmp
cmp
mov
mov
mov
enter
rorb
je
in
sbb
add
sarb
arpl
inc
jnp
sarl
out
cmp
pop
sahf
push
inc
inc
cs
out
cld
inc
xor
stc
jmp
insb
dec
jge
xor
ret
jmp
aam
jns
cmp
in
sbb
data16
dec
ret
push
ret
mov
movsl
sbb
jl
cmpb
cld
ret
sbb
cmp
xchg
lds
mov
out
mov
scas
push
mov
into
aad
and
stc
sbbb
push
adc
fistpl
je
push
mov
xor
mov
and
push
xchg
jo
sbb
fdiv
lcall
push
addl
xorl
lret
adc
icebp
imull
pop
sbb
leave
clc
jns
xor
pop
je
scas
std
cmp
outsb
dec
aad
cmp
or
data16
ret
xchg
gs
imull
add
or
jb
xchg
fdivrs
mov
jle
lret
test
push
sub
push
fldt
pushf
inc
or
adcb
ds
adc
xlat
push
inc
scas
or
mov
sub
sti
aaa
insb
xorl
repnz
inc
xchg
fiadds
cmpsl
lock
stos
sub
xchg
mov
out
lods
mov
adc
add
mov
cld
jno
in
icebp
popf
mov
xchg
repz
add
cmpsl
pop
jmp
jae
lcall
mov
xchg
arpl
lods
fnstenv
push
loopne
shr
or
or
call
push
and
leave
data16
or
cmp
das
scas
or
push
jae
inc
stc
pop
inc
xlat
out
lds
and
inc
ss
neg
dec
mov
sbb
lea
add
adc
loope
in
cwtl
ret
cld
in
pop
or
dec
movsb
push
mov
xchg
add
cwtl
inc
adc
hlt
cmp
out
outsl
mov
data16
xchg
pop
rorl
pop
add
stos
lret
push
or
cltd
cld
bsf
fidivrs
jbe
or
js
aas
test
xchg
lahf
aam
arpl
ja
aas
jnp
pop
jns
stc
movsl
xchg
pop
push
mov
hlt
ds
pushf
cwtl
pop
mov
cmpsl
mov
repz
pop
push
stos
and
lcall
fs
and
aad
jns
add
sub
rcrb
js
dec
insl
add
nop
pop
push
pushf
stos
test
fidivrl
fmuls
jno
push
movb
mov
and
out
pop
out
jmp
rcrl
outsl
aad
roll
and
pop
int3
adc
xchg
out
dec
or
and
scas
sub
stc
loop
mov
jmp
jg
push
notb
xchg
mov
or
xchg
cmpl
dec
data16
in
dec
cwtl
sub
inc
pop
fisubl
adc
xor
mov
or
or
sbb
xlat
in
pop
shlb
cmpsb
xchg
mov
sti
inc
mov
jne
push
jle
enter
into
fs
jecxz
imul
idivb
andb
lods
lock
lods
sbb
mov
and
popa
jge
dec
adc
test
xor
add
pop
mov
scas
imul
or
dec
xchg
aas
ljmp
scas
imul
mov
and
aas
jb
pop
cs
mov
push
mov
add
mov
ret
movsb
pop
sbb
cmpsl
jns
or
iret
lods
leave
dec
aas
mov
lret
jecxz
pusha
lret
mov
inc
xchg
adc
pop
push
cmp
pop
out
into
xor
in
mov
pop
mov
cmp
pop
jb
aad
fwait
adc
fdiv
sub
and
xchg
cmpsb
cmp
mov
inc
or
fdiv
jg
ss
mov
pop
pop
test
fidivs
sbb
pusha
xor
dec
mov
and
mov
add
mov
aad
cmpsb
jnp
mov
scas
xchg
pusha
fidivl
stos
jge
inc
mov
fldl
mov
push
pop
adc
js
push
subl
sahf
mov
mov
mov
mov
mov
lahf
and
mov
sbb
xor
sub
out
add
scas
in
sub
bnd
addl
fisubrs
adc
push
or
out
popa
push
jecxz
mov
push
cmp
dec
xchg
push
and
push
fsubrs
sti
pop
push
xchg
cs
sar
lds
xchg
sbb
sbb
aam
dec
pop
bound
push
mov
cmpsb
stc
ljmp
mov
fs
mov
cmc
dec
jns
sbb
sahf
lahf
sbb
loop
imul
adc
xor
aam
out
stos
dec
mov
sub
xor
pop
fcom
lods
scas
popa
or
cmp
xchg
sub
in
add
xchg
pop
push
addr16
aaa
cmc
iret
jno
test
lahf
fs
sti
lahf
in
es
ficompl
mov
into
add
test
pop
fisubl
lea
push
roll
cmp
xchg
outsl
scas
pop
xchg
dec
imul
addr16
call
jp
cli
cwtl
fmull
and
jnp
sub
jno
mov
shrl
enter
lea
inc
dec
mov
aas
inc
fisubl
scas
mov
inc
push
or
sbb
jne
jg
outsb
adc
xor
leave
ret
and
testl
or
push
mov
in
nop
jl
inc
adc
nop
shlb
mov
xchg
mov
divb
jb
sbb
sbb
adc
mov
sti
xchg
mov
mov
push
outsl
aas
std
add
pushf
gs
out
popf
rcrl
ret
packsswb
popf
shlb
je
or
cwtl
xor
outsb
dec
push
adc
inc
mov
fsubrp
push
cmc
mov
cld
sub
xchg
inc
aam
dec
test
scas
and
inc
jb
fmul
mov
out
cmp
cmp
cmp
cmp
adc
vmovdqu
xchg
out
fiadds
outsl
fisubs
nop
lahf
nop
int
mov
or
xor
jl
add
sub
dec
sarb
enter
nop
cmp
sub
sahf
xchg
mov
or
add
out
fwait
mov
sbb
je
or
cmc
dec
in
mov
sbb
mov
imul
cltd
ljmp
lcall
mov
add
js
scas
cmp
push
mov
jmp
fisttpl
inc
and
pop
mov
popf
adc
lea
xchg
lret
mov
adc
xor
mov
jp
mov
fldl
dec
mov
push
mov
xchg
dec
sar
xchg
enter
lock
lea
xor
cmp
xor
aam
push
jbe
mov
dec
push
push
aam
push
inc
add
push
aaa
or
mov
add
movsl
adc
mov
mov
sub
xchg
sbb
outsb
cli
lcall
jge
repz
adc
pop
outsb
mov
scas
hlt
std
lret
pushl
add
xchg
int
mov
pop
jp
fwait
mov
mov
mov
mov
lods
int3
incl
push
sahf
subb
mov
je
xlat
in
leave
cld
sarl
inc
movsb
roll
ja
aas
shlb
mov
sbb
int
cmp
iret
xchg
or
or
push
lcall
xor
loope
out
push
int3
ja
ljmp
lret
cmp
mov
cli
sub
lret
cs
mov
cmp
inc
or
xlat
lock
push
out
imul
xor
lcall
icebp
sub
in
cld
js
cmc
ret
jae
mov
imul
mov
cmc
aas
sbb
cld
cmpsl
subb
scas
test
mov
fistl
movsl
enter
mov
inc
push
jnp
ds
xchg
cmp
rcll
aas
lcall
aaa
imul
scas
cs
pop
ja
adc
rorb
sub
call
rolb
icebp
or
xor
mov
rorb
cmpsl
mov
sub
xor
mov
int3
leave
outsl
cmp
aam
sti
addr16
idiv
pop
mov
in
addl
sub
sub
data16
adc
daa
or
cs
ds
pushf
mov
imul
jb
pushf
fisttpl
imul
pusha
push
adc
jno
mov
mov
xorl
pop
ss
lea
int3
repnz
scas
sub
lea
xchg
std
mov
jmp
or
push
pop
cmp
pop
push
add
sub
sub
mov
stc
cmp
xchg
test
xchg
icebp
dec
dec
aad
mov
push
adc
aam
dec
or
mov
dec
testl
arpl
cmp
mov
mov
jns
lods
sbb
adc
sub
lea
jne
jmp
lods
mov
xlat
and
loop
dec
push
dec
jne
jo
inc
les
movsb
incb
pop
lods
insl
xor
push
popa
jb
cmp
je
enter
pop
std
or
adc
rcr
cmp
pop
out
xchg
jbe
stos
jnp
sbb
add
adc
jmp
dec
imul
cwtl
pop
shrl
xchg
enter
rolb
jg
pop
cltd
and
out
testb
les
dec
xchg
mov
std
ja
mov
ss
xchg
popa
push
jnp
cmpsb
subb
gs
pushf
dec
add
mov
adc
xchg
mov
imul
lods
sub
inc
pop
mov
inc
mov
lahf
das
lock
jle
ficoml
lock
sbb
xchg
xchg
jmp
popf
out
cmp
push
icebp
cld
mov
cmc
jmp
pop
mov
mov
add
popf
dec
insl
cmp
std
divl
sub
sahf
xchg
pop
sub
addb
lcall
aas
enter
inc
cltd
insb
rcrl
sbb
arpl
pushf
enter
loopne
add
xor
pop
mov
pop
mov
inc
out
and
repz
jl
dec
sub
mov
sbb
insb
and
mov
mov
xchg
ret
repnz
lret
mov
mov
daa
cmc
ss
xchg
sub
addb
push
scas
lds
push
pop
jbe
cmpsb
cld
pop
sub
sub
dec
mov
inc
inc
xor
test
push
pop
popa
out
int3
dec
mov
sahf
dec
inc
jne
xchg
dec
cmp
movsl
mov
push
jl
fstl
xchg
sub
int
cltd
insl
sahf
out
and
jmp
xchg
stc
mov
mov
roll
and
sarl
dec
and
xor
sub
icebp
xchg
pop
lret
addl
roll
jle
xchg
test
push
jns
fucomi
stc
cli
xchg
pop
xchg
xchg
cmpsl
sub
js
xchg
jg
pop
cli
dec
jns
mov
enter
inc
out
or
or
inc
divb
xlat
enter
push
leave
push
ret
outsl
add
add
cmpsl
jns
pop
fidivs
push
xchg
mov
dec
jae
repnz
cmpsb
lret
or
addr16
lahf
imul
cld
jl
ljmp
fldt
loope
pop
shlb
add
loope
inc
popf
jno
or
pop
aam
fnstcw
lock
mov
sub
cmpsl
or
orb
dec
pop
dec
or
ret
insb
xor
inc
and
add
insl
sub
add
stos
mov
add
push
xchg
dec
les
jne
ljmp
into
stos
lea
ret
filds
and
mov
cld
fwait
mov
push
sub
jg
mov
lret
cli
bound
sbb
mov
orb
ljmp
fdivrl
push
or
cmpsl
or
gs
mov
sbb
and
xor
aad
add
add
imul
sbb
pop
push
std
pop
nop
push
sti
xor
rcrb
cmpsb
xchg
test
jle
push
mov
adc
and
stc
lahf
out
adcb
and
mov
stos
fdivr
adc
jne
mov
mov
pushf
inc
icebp
int
xor
cld
cld
or
sub
sarl
jns
lea
outsb
std
add
pusha
fstpl
popa
sub
push
insl
mov
roll
shrb
aaa
mov
mov
or
jle
dec
add
out
push
and
icebp
mov
pop
int
dec
mov
adc
in
xlat
add
fisubrs
stos
ret
cmpsl
scas
aaa
dec
mov
cmpsl
xchg
add
enter
sahf
lea
aad
mov
add
out
jg
adc
in
adc
repnz
insb
cmp
push
or
imull
jge
sub
mov
lods
or
jb
icebp
xchg
rclb
xchg
in
data16
inc
xor
pop
daa
sub
negb
loop
fistps
insl
cmc
cmpsb
arpl
jmp
mov
xor
add
jg
dec
shrl
jle
out
xchg
push
insl
jmp
inc
add
cmp
movsl
lods
scas
pop
repnz
jmp
inc
adc
lret
imul
loopne
cli
xchg
mov
ret
push
sarb
addl
out
dec
int3
pop
mov
mov
rcl
pop
pushf
lock
insl
add
and
and
mov
mov
dec
mov
or
mov
xor
pop
adc
test
fdivr
xor
xor
xchg
xor
mov
repnz
mov
sub
pop
hlt
add
into
jne
and
out
lds
jle
lcall
sti
mov
add
adc
jns
pop
ret
cmp
inc
sarl
mov
lahf
shl
gs
les
cmpsb
xor
add
rorb
aam
jg
popf
movsb
leave
stos
adc
inc
dec
adc
pop
mov
mov
je
call
mov
mov
gs
mov
out
test
pop
push
mov
push
imul
fcom
and
or
jmp
xchg
jmp
sahf
loop
push
jl
xchg
dec
and
aaa
dec
jnp
jns
imul
cmp
mov
mov
outsb
xchg
lods
mov
mov
popf
dec
int3
sub
popa
ja
inc
fadd
xchg
ljmp
out
ret
sbbl
pop
mov
arpl
daa
popf
dec
ds
push
jmp
insb
popf
movsb
fisttps
dec
lret
mov
jmp
or
les
xor
cmpsb
sbb
fsubrs
popa
dec
insl
ds
fwait
out
aaa
ss
inc
shlb
add
addr16
das
push
jbe
nop
rclb
and
sbb
aad
add
sbb
inc
adc
inc
pop
pushf
cmc
int3
xor
rcrb
adc
mov
insl
sbb
jle
rorl
out
repnz
ret
aam
imul
cmp
jge
cltd
das
pushf
dec
les
add
jl
and
into
lcall
mov
repz
ljmp
xchg
adc
fcomps
dec
cmp
sarl
xlat
pop
mov
sbb
daa
pop
cmp
xchg
ja
repz
jmp
pop
inc
xchg
gs
outsb
cwtl
popa
call
mov
jb
inc
scas
dec
mov
insb
aam
mov
dec
and
leave
pop
dec
jg
or
dec
push
or
mov
mov
es
fs
iret
in
inc
and
aam
and
add
loop
ficoml
sbb
lock
dec
and
add
aas
adc
inc
mov
inc
lock
push
cmp
cmp
cmp
idivb
xor
insb
dec
dec
popf
into
xchg
bnd
mov
test
outsl
mov
pop
mov
inc
sbb
adc
inc
sahf
mov
clc
mov
and
mov
push
loopne
push
xor
test
push
jne
sbb
dec
notb
int3
loope
mov
pop
push
push
inc
call
cs
push
mov
insl
jb
out
dec
mov
or
sub
dec
dec
shrb
in
jle
dec
jp
ret
stos
stos
repnz
push
cmp
pop
push
pop
mov
mov
es
fimuls
les
out
sub
mov
popf
push
pop
mov
int
into
or
scas
mov
rcll
in
cmpsb
out
js
aad
ja
nop
jae
add
jns
sbb
popa
imul
mov
std
push
xor
push
in
lret
loopne
shrl
fistl
and
mov
int3
dec
mov
sub
sbb
sub
ja
arpl
xchg
ret
test
and
cs
icebp
outsl
or
stc
scas
add
popf
mov
xchg
into
push
ds
dec
xor
mov
les
xchg
jecxz
add
pop
xchg
shrb
pop
sbb
add
sbb
push
dec
sub
dec
jmp
sar
jo
mov
mov
xchg
and
or
std
repnz
xchg
cmp
test
pop
subb
test
jnp
mov
mov
adc
mov
loopne
sub
push
loope
mov
ficoml
push
push
mov
or
outsl
fs
ret
add
iret
add
mov
sub
inc
inc
add
lods
or
jle
push
push
jae
cs
inc
sbb
adc
mov
imul
ret
movsb
push
mov
pop
push
icebp
cmpsb
adc
push
or
mov
lods
lods
fnstcw
addr16
pop
and
fcomps
scas
dec
ja
cwtl
jo
movl
mov
icebp
add
fisubs
xchg
sbb
cmpsb
sub
icebp
sub
xor
xchg
jp
ficompl
mov
imul
mov
pop
pop
xchg
pop
dec
mov
notl
and
int
push
jo
ljmp
inc
jl
into
dec
add
mov
ficomps
jg
dec
dec
insl
int3
cmp
pop
sub
sti
xor
sti
push
dec
imul
inc
adc
cmp
sub
xchg
mov
mov
repnz
lods
jp
cmp
sub
out
popf
mov
adc
lcall
inc
adc
adc
dec
mov
lods
jl,pt
fwait
stos
xchg
xor
push
sar
insl
jge
addr16
aas
sbb
cmpsb
push
cmpsl
xchg
sub
jns
rclb
std
int
jno
aad
data16
or
pop
dec
in
ss
add
clc
dec
sarb
fisubl
out
in
mov
mov
jp
sbb
test
fs
test
cmpsb
add
cmp
outsb
or
inc
leave
shll
in
pop
es
add
lock
mov
sahf
or
and
subl
clc
xchg
std
mov
shl
sub
into
or
std
outsb
iretw
xlat
sbb
addr16
xor
add
mov
dec
pop
lods
insl
xor
data16
xchg
xchg
insb
into
out
mov
cmp
dec
mov
add
cld
jge
mov
rcll
stos
and
ljmp
movsb
cmp
dec
jb
or
jp
xchg
push
mov
pop
hlt
fiaddl
stos
sbb
mov
and
push
mov
cltd
or
xor
iret
stos
and
adc
jb
in
cli
imul
mov
cmp
pop
das
pop
push
cmp
aas
add
mov
lret
icebp
lock
mov
hlt
into
jnp
push
mul
rcl
pop
xchg
sahf
sub
jmp
inc
xchg
loope
clc
movsb
pushf
mov
loop
jecxz
push
mov
outsl
mov
nop
in
sub
xorl
stos
insl
dec
push
or
xchg
aad
negb
addr16
xchg
in
or
xlat
out
pop
lret
xchg
or
and
pop
in
push
repz
jmp
add
dec
add
scas
push
mov
pop
fistl
subl
jbe
add
dec
enter
ja
out
lods
cmovns
cld
repz
sbb
addb
pop
push
or
mov
es
jo
xchg
pop
addr16
ds
repz
inc
mov
jg
pop
adc
xor
mov
pop
lret
jns
stos
leave
pop
mov
es
and
das
sbb
test
mov
je
in
in
add
fcmovb
in
jno
fidivl
dec
imul
ret
add
cmp
aaa
xor
add
aaa
in
popa
and
das
inc
ljmp
push
cmp
test
repz
and
ds
jno
fadds
inc
cmp
dec
loope
mov
gs
cmp
sub
pop
arpl
pop
out
push
xor
mov
cmp
mov
mov
outsl
loopne
out
push
pop
int
js
jno
cmp
xchg
sub
pop
pop
push
or
stc
ds
addl
and
andb
data16
sbb
push
push
in
aaa
ljmp
ja
iret
ja
push
loop
xchg
pop
sub
subl
movsb
or
sbbl
jns
sbb
jo
or
in
pusha
sub
out
sbb
sub
xchg
cmp
push
mov
out
cmpb
ret
mov
sbb
rol
loop
imul
mov
aam
cmp
mov
mov
pop
adc
xchg
outsb
sub
push
rorb
push
icebp
inc
mov
movsl
mov
jbe
test
pop
out
sti
fisubrl
mov
mov
aas
jb
call
inc
adc
sub
std
jp
inc
add
sbb
mov
scas
ljmp
xchg
push
xor
add
lods
mov
mov
xor
aad
aas
data16
roll
mov
iret
std
add
fldenv
push
rcrl
sbb
popa
stos
or
js
or
enter
scas
ds
cli
lds
mov
cmpb
push
xchg
fisttpll
das
jae
sti
pusha
jl
pop
shlb
inc
and
sarl
repnz
sahf
xchg
sub
fildll
cmpl
test
sarb
mov
aam
gs
ret
push
daa
rcrl
cmc
imul
out
popl
arpl
jb
xchg
jecxz
inc
loop
add
sub
cmp
fcmovne
jmp
cli
stos
dec
sub
dec
push
mov
dec
sub
adc
jecxz
js
shlb
stc
push
sbb
add
into
lahf
fidivl
sub
jge
push
into
test
out
mov
call
nop
es
mov
lds
sbb
out
call
push
cmp
iret
xorl
xorl
cmp
aas
int3
in
icebp
xchg
inc
or
loopne
rcrb
sbb
mov
mov
xchg
cmp
daa
pushaw
jnp
ret
pop
insb
push
and
popa
in
out
add
add
xor
sahf
out
pusha
sub
fmull
jbe
add
xor
imul
mov
mov
mov
add
scas
pop
rclb
out
mov
jp
sbb
popa
aam
push
jmp
mov
mov
pop
adc
mov
jmp
jmp
filds
inc
mov
mov
dec
loopne
jns
pop
mov
mov
popa
xchg
lret
pop
test
sbb
stc
push
or
test
jl
ret
insl
and
add
movsb
cmp
mov
in
push
rolb
mov
rorl
jbe
mov
push
fldcw
xlat
mov
lock
add
lret
jns
andl
mov
sbb
jl
subb
or
imul
roll
adc
nop
xorl
sbbb
out
and
scas
push
xor
ljmp
repnz
mov
shll
cmp
lock
mov
jl
lock
jmp
mov
mov
and
incl
rcll
iret
or
sub
divl
test
pop
mov
nop
mov
lds
fmuls
fsubr
pop
in
imul
sub
mov
inc
dec
mov
fcomps
insl
leave
js
lret
outsb
add
cli
nopl
test
jp
ss
xchg
lcall
and
in
inc
mov
cmp
push
jbe
js
fimuls
xchg
cmp
adc
adc
mov
sti
sbb
lods
in
lea
in
jns
xor
mov
lods
sahf
testl
lock
lahf
lods
cmpsl
sbb
call
pusha
inc
sub
test
js
jmp
imul
add
gs
and
jnp
mov
pop
jnp
add
jge
leave
pop
pop
cmp
jp
test
imul
jns
mov
iret
add
mov
dec
xor
cli
xchg
jmp
adc
out
pop
mov
push
push
js
lahf
xor
mov
js
mov
fdivl
cmpsb
inc
sti
sbb
adc
inc
xor
rorb
sbb
sub
in
repz
mov
stc
adc
pop
in
loopne
mov
out
aam
fs
popf
das
pop
or
mov
and
mov
loope
push
pop
sbb
jecxz
lds
pop
gs
loopne
pop
ja
arpl
ja
adc
mov
test
out
xchg
ret
addl
push
sbb
fsubrs
mov
ds
add
dec
fadds
dec
iret
dec
fstpl
jae
aas
lahf
fcmovnbe
sbb
nop
push
pushf
lea
rcr
stos
xchg
aaa
and
ds
int
or
jno
xlat
cmc
push
dec
ss
mov
out
ror
cmpsl
push
lods
push
popf
jbe
jmp
bnd
ja
nopl
inc
daa
pop
mov
xchg
shl
mulb
outsb
mov
mov
mov
stos
xor
mov
addr16
dec
outsl
jnp
popf
add
xlat
mov
push
sbb
push
fsts
call
fmull
jg
repz
dec
add
imul
popl
rorl
adc
pop
push
inc
in
sub
test
mov
or
xor
movsl
sbb
out
xchg
stos
jp
adc
push
repnz
mov
mov
add
test
out
daa
ljmp
ror
in
popf
sub
mov
mov
push
cli
insl
xchg
xor
fildl
xor
cli
xlat
dec
adc
das
jo
or
and
jge
shrb
stos
dec
adc
vcvtps2dq
mov
popf
inc
jnp
flds
cmc
stos
call
pop
ret
gs
mov
dec
lret
pushf
or
cmp
and
sbb
cs
sub
es
out
inc
pop
or
inc
ss
in
and
cmp
mov
xchg
mov
push
popf
popa
sbb
pusha
jb
dec
inc
lods
lods
in
mov
gs
cmpps
jo
mov
test
icebp
push
dec
mov
xchg
add
ret
lods
mov
aas
pop
xchg
inc
xchg
aaa
mov
loopne
jge
sub
fs
push
lret
add
and
xchg
shr
jb
add
adc
pop
imul
xchg
neg
std
mov
inc
daa
sar
pop
fldenv
loop
gs
push
push
ljmp
jnp
pop
in
cmpsb
inc
jnp
lret
xor
jo
xchg
decl
pusha
das
sub
dec
arpl
js
push
call
jns
testb
lret
sbb
cs
addr16
insl
adc
pop
or
lret
dec
fmul
mov
imul
test
mov
ljmp
bound
lcall
vmovapd
cmc
nop
outsl
pushf
and
mov
bound
enter
push
lahf
lods
leave
xlat
fs
js
mov
pop
xor
mov
jno
push
sahf
pop
dec
xchg
xlat
dec
cmc
pop
andl
pop
jbe
inc
rorl
push
mov
mov
fucom
dec
push
or
xchg
rolb
lods
scas
mov
es
or
dec
loope
jg
cmp
adc
sbb
mov
mov
ds
lds
ret
sub
loopne
add
rcr
outsb
pushf
xorl
adc
push
lds
adc
lods
sbb
adc
push
or
and
stos
lahf
sti
scas
jb
mov
xchg
push
dec
push
stos
push
lea
jbe
lock
mov
inc
sub
pushl
mov
sub
rorl
enter
push
xchg
inc
mov
ror
fildl
push
xor
aam
xor
ds
lock
enter
xlat
or
iret
dec
mov
pop
fmuls
xor
scas
xchg
push
mov
xchg
std
ss
cwtl
jecxz
mov
iret
fwait
cwtl
xor
mov
push
fsts
jnp
fisttpll
insl
outsl
cmp
sarb
mov
cmc
das
scas
fcomip
xor
dec
mov
xor
icebp
mov
das
adc
cmp
bound
and
jbe
pusha
adc
fimull
scas
mov
pop
pop
push
cmp
inc
mov
leave
in
mov
addr16
scas
xor
sub
xor
add
aaa
lock
mov
xor
jge
or
mov
outsb
call
fwait
inc
pop
out
pusha
cmp
std
xlat
rcl
or
pop
aam
sub
sbb
nop
add
rclb
jmp
idiv
addl
xor
mov
push
movsl
dec
clc
aaa
pusha
pop
inc
jmp
jecxz
lret
data16
sbb
jbe
pop
ljmp
cltd
xor
bnd
outsb
add
inc
test
adc
dec
or
decb
fdivl
cmp
pop
sbb
push
inc
adc
mov
in
insb
push
xchg
aaa
pop
inc
fistps
sbb
fdivl
jns
aad
pop
icebp
fwait
cmp
imul
popa
add
jne
pushf
shrb
sti
dec
add
adcb
cmc
loopne
xchg
int3
cmp
push
add
adc
iret
sub
xor
clc
sbb
lahf
mov
add
and
movsb
mov
xchg
jbe
push
stos
push
sbb
je
nop
setb
dec
add
enter
and
jo
frstor
mov
das
jno
mov
pop
mov
push
jae
nop
sub
jp
faddl
lea
movsl
scas
dec
mov
sbb
ja
pop
jle
dec
mov
xchg
in
ret
scas
lods
ja
add
jle
int
xchg
jne
shlb
xlat
jo
mov
je
sbb
insb
or
repz
xchg
xor
js
int
pop
pop
ret
popf
out
rdtsc
push
inc
dec
mov
sub
mov
mov
push
fnstenv
sbb
into
pusha
pop
mov
add
pop
movsl
jnp
mov
ljmp
adcb
or
jb
sub
dec
fstpl
pop
ljmp
push
das
dec
cli
insb
imull
ss
aad
ss
cmpsl
stos
or
jg
ljmp
int
and
add
inc
push
push
push
test
mov
pop
test
ret
mov
ret
push
lcall
stos
xorl
aam
js
fiadds
int3
decl
iret
fwait
scas
lods
adc
sub
lcall
test
repz
mov
push
mov
xchg
sub
lods
adc
daa
mov
fbstp
jle
sbb
lods
cmp
lret
test
push
pop
sbb
xchg
mov
pop
cmp
divb
inc
ret
out
mov
mov
sub
mov
stos
loop,pn
push
stos
fnstenv
outsl
jle
xchg
push
push
jns
lods
das
pop
sbb
mov
or
out
test
icebp
leave
test
popf
lret
push
xor
dec
add
push
outsl
jl
dec
dec
mov
mov
es
cmc
pop
xorb
fdivl
insl
push
in
inc
xor
and
push
roll
cmp
xlat
cld
pop
mov
sbbb
call
push
sbb
jne
loop
sti
out
loope
pop
in
inc
cmp
in
inc
push
cmp
push
sarb
test
push
sarl
dec
divb
and
sahf
sub
or
mov
xchg
jae
cld
ss
ds
and
xchg
ja
jl
out
and
pop
sbb
dec
push
add
cli
pop
xchg
testb
loope
mov
push
push
mov
mov
inc
vmaxpd
xchg
jmp
push
cmp
pop
cs
inc
sbb
sub
cld
shrl
js
je
ret
xchg
dec
sti
outsl
call
pop
jmp
addr16
je
loopne
xor
cmp
inc
sahf
mov
and
mov
xor
xchg
dec
push
and
int
in
test
mov
std
push
sub
fnstenv
push
test
lock
xchg
mov
rclb
or
jmp
add
cmp
cmp
xchg
mov
jno
adc
testl
add
ds
xchg
fwait
mov
lods
pop
dec
cmpsb
repnz
pop
das
push
lock
in
movsl
mov
sbb
push
push
adc
cmpsb
mov
dec
and
icebp
pop
cwtl
les
rcr
jno
in
adc
mov
and
iret
dec
push
adc
or
rcrb
push
insb
fbld
test
cmp
pop
ss
idivl
dec
sub
inc
xor
jge
es
xlat
or
mov
cmp
push
xchg
or
dec
jmp
jno
push
add
mov
outsl
mov
xchg
enter
inc
in
fdivrs
stos
and
shrb
mov
xchg
aad
hlt
add
pop
xchg
sub
shl
fistps
or
pop
mov
ret
sub
std
jp
cmp
mov
adc
xlat
cwtl
pop
sub
shrb
in
jo
jo
fists
fildll
loope
scas
test
testb
xchg
jmp
imul
pop
push
xchg
out
mov
jge
jg
fldt
test
enter
repz
nop
jbe
insl
adc
cmp
jle
jg
inc
cmp
pop
imul
xchg
sti
mov
fmull
inc
inc
repz
mov
das
push
mov
or
cmp
shlb
outsb
and
pop
cmp
lcall
push
xor
fdivr
dec
xor
stos
ss
jae
lds
popa
jecxz
aas
pop
lcall
out
neg
xchg
movsl
pusha
pop
jl
inc
fists
cmp
inc
dec
push
dec
ja
mov
fwait
outsb
inc
xor
es
orl
and
mov
cmc
loopne
repz
sbb
ret
sbb
inc
mov
outsb
fistl
mov
push
cmpsb
mov
les
jo
out
or
add
sbb
gs
cmp
xchg
xchg
mov
insl
cmp
or
lock
outsb
movsl
repz
int
cmp
outsl
aas
mov
mov
fs
pop
fnstenv
pop
mov
pop
movsb
shlb
daa
stc
ljmp
jge
cwtl
xchg
iret
aad
mov
add
mov
lock
or
mov
out
mov
sbb
mov
xchg
aam
roll
loopne
push
xor
mov
mov
inc
call
and
ret
or
dec
mov
sbb
loop
addr16
jg
imul
xlat
ror
in
sahf
and
and
cwtl
ret
mov
cmpsb
insl
aas
lcall
outsl
jp
fdivs
mov
js
pusha
inc
inc
pusha
mov
out
fldl
lret
pop
sbb
cmp
ret
add
xchg
adc
aad
in
in
cs
cltd
test
lahf
movsl
iret
xchg
xchg
mov
xor
pop
adcb
sub
shl
sub
sbb
ljmp
cwtl
sbb
sbb
xchg
lahf
sbb
or
lods
push
jge
jns
cmp
hlt
shll
or
xchg
orl
xor
pusha
xor
mov
dec
xor
jmp
das
dec
pop
cmpb
fcomip
in
data16
les
and
mov
jmp
mov
call
inc
test
jbe
inc
xchg
jg
scas
cmpsb
ljmp
test
jne
and
ret
fs
je
stc
mov
lock
xchg
push
shll
sbb
pop
ja
daa
jg
mov
xchg
inc
mov
fnsave
bound
test
mov
enter
add
sub
push
push
cmpsb
scas
pop
out
and
mov
fcompl
or
inc
jp
push
jp
dec
xchg
sub
mov
dec
js
je
aaa
lds
mov
ucomiss
pop
pop
insl
jl
xchg
push
cmp
lods
inc
dec
push
inc
out
fidivs
aam
inc
or
outsl
sub
fdivr
test
insl
dec
shlb
lcall
or
add
sub
scas
ret
cmp
imul
repnz
imul
push
sub
push
gs
call
hlt
in
fwait
test
sbb
jns
add
ret
jns
jo
fldcw
mov
lds
daa
mov
push
gs
outsl
or
movsb
test
shll
call
repz
xchg
or
and
mov
fistps
pop
orb
inc
mov
test
and
lock
push
jle
lret
push
mov
int
jbe
push
jb
mov
inc
mov
outsb
inc
mov
nop
mov
xor
xor
filds
inc
pop
in
cmpsb
ds
pop
loop
pop
push
lds
jmp
js
test
ds
bound
xor
xlat
inc
sub
xchg
btr
cli
jae
in
andb
pop
ljmp
pop
enter
or
std
mov
xchg
adc
mov
jbe
cmpsb
sarb
loope
popa
dec
call
rolb
idivb
cmp
in
xchg
je
xchg
loop
repz
push
jge
sbb
mov
push
jmp
pop
pop
pusha
or
jp
pop
jmp
inc
sahf
dec
call
dec
subb
dec
mov
adc
subl
jb
jle
js
negb
sub
jg
jmp
jo
xchg
shr
int
das
in
pop
cli
cmp
iret
mov
push
fsub
dec
js
popf
xor
fsubr
xchg
push
inc
pop
xchg
cld
mov
jp
mov
ret
push
mov
shrl
cli
xor
cld
lret
clc
icebp
push
mov
adc
push
cltd
iret
sub
nop
sahf
pop
test
stos
mov
stos
bound
push
mov
fsubrl
movsb
add
mov
push
jl
jne
pop
es
call
xor
mov
adcl
rcr
push
jbe
xchg
push
aad
cmp
rcr
xor
mov
jne
mov
das
add
fdivs
jecxz
orb
cmp
movsl
faddl
scas
push
push
push
and
sub
orl
aam
fs
mov
das
dec
lods
sub
sub
cs
mov
jle
inc
xor
jo
xchg
sbb
adc
and
push
std
fidivrs
push
inc
xchg
jno
nop
xor
mov
pop
in
mov
mov
popfw
negb
cmp
xor
daa
sub
mov
dec
imul
movsl
addr16
mov
std
add
and
testl
inc
gs
jb
lds
pop
sbb
sbbl
fcmovnb
movsb
xchg
xor
push
xor
in
add
mov
add
stos
or
jp
test
pop
xorb
enter
and
sub
sbb
inc
inc
mov
add
test
pop
jecxz
test
fisubrs
inc
xchg
pop
fstpt
daa
push
ret
testb
insb
inc
fwait
test
sbb
add
mov
cmp
adc
call
xchg
mov
mov
int
lock
fstp
icebp
jo
jp
inc
dec
jg
movsb
movsl
jg
mov
shll
xchg
int
repz
int
sbb
push
pop
lock
pop
ds
fimull
cmc
icebp
or
mov
inc
xchg
in
cld
test
sarb
test
mov
loop
call
push
cmpsb
xor
ljmp
xchg
jge
popa
cltd
shl
xchg
or
and
sub
pushf
fwait
pop
jl
insb
mov
lds
mov
xor
cmp
rep
shll
paddusb
mov
inc
shrl
jle
cmp
fidivs
inc
pop
push
jae
lds
es
push
mov
das
adc
inc
in
lret
test
mov
pop
aas
ja
xchg
das
out
mov
popf
dec
popl
fildll
jnp
xchg
test
cmp
add
fdiv
mov
insl
lods
popl
jecxz
push
stos
enter
mov
xor
scas
popl
adc
mov
mov
loop
test
jl
pop
jg
sub
loopne
jo
cmp
mov
loop
cmp
pop
xor
scas
xchg
ja
enter
scas
push
xchg
jae
testb
mov
push
jae
xlat
out
pop
inc
mov
xchg
rclb
std
popl
mov
jno
push
sbb
scas
jno
mov
adc
xchg
insl
pop
stos
mov
out
sbb
in
jecxz
jno
insb
dec
sub
push
inc
pop
inc
xchg
mov
inc
pop
data16
cmpsl
mov
sahf
arpl
mov
and
daa
push
xor
scas
mov
fwait
mov
inc
cld
test
in
pushf
sbb
sbb
inc
jmp
push
imul
jmp
das
mov
dec
and
sub
push
sbb
dec
lret
cmp
ja
mov
pop
sbb
cmp
mov
pusha
jo
ds
mov
sti
push
jmp
sbb
cs
xchg
shll
das
push
xchg
mov
fldl
dec
adc
ja
or
repnz
addr16
movswl
mov
imul
jge
sub
addr16
adc
sub
mov
pop
imul
shrb
stos
pop
es
mov
pop
mov
push
jl
mov
xchg
call
sbb
mov
xchg
out
in
pop
and
jne
jge
adc
push
jecxz
enter
jbe
scas
shrb
mov
gs
pop
js
fxch
in
aas
inc
push
rcrb
or
sbb
cmp
daa
sarb
lock
mov
fwait
cltd
xchg
cmp
std
or
mov
stos
mov
xlat
fistps
mov
xchg
push
fnstsw
xor
inc
ret
xor
mov
nop
or
rorb
adc
or
fidivs
xchg
cli
int
dec
add
jecxz
jo
and
inc
dec
jnp
test
int
mov
mov
pop
push
add
sub
inc
pop
mov
add
loope
mov
cmc
pop
xchg
rolb
xchg
xlat
pop
jbe
xchg
roll
fdecstp
push
cs
mov
or
jne
and
into
loopne
xor
test
push
and
rorb
leave
enter
jmp
lods
idivl
test
cmp
cmp
cs
sub
int3
inc
into
mov
and
jne
xchg
mov
pop
call
mov
idiv
add
ret
js
mov
mov
lods
lea
in
pop
ss
mov
pop
je
push
push
int
adc
pop
or
pusha
andb
sub
icebp
mov
adc
sar
stos
push
inc
rolb
inc
mov
rcl
rcrl
enter
sbb
cmp
testl
xchg
mov
pop
cwtl
fdiv
cmp
sub
fdivrs
push
aaa
int
sbb
push
cld
jle
mov
dec
pop
jbe
int
lahf
fistps
adc
stos
adc
push
mov
loopne
or
pop
aad
jecxz
add
mov
popa
add
sbb
jbe
and
pop
sub
adc
sub
push
jno
sub
retw
push
mov
sub
lahf
hlt
cmpsb
mov
cmp
mov
sub
mov
mov
adcl
mov
cmp
mov
sbbl
mov
loope
jmp
fiadds
popf
and
lock
je
scas
cli
imul
mov
mov
push
mov
pop
and
enter
xor
add
push
xchg
cmp
and
aam
shl
push
cmpsb
adcl
dec
push
or
test
add
cwtl
int3
loope
jbe
jecxz
sbb
xchg
and
shlb
mov
lret
push
add
and
pop
cs
fwait
or
xchg
dec
or
jecxz
push
icebp
push
cmp
scas
in
mov
rorb
lods
fcoms
mov
lret
xchg
lods
and
pop
mov
jae
or
push
sub
mov
add
leave
jnp
xor
in
icebp
jmp
jmp
shll
sti
mov
sbb
and
inc
int
cltd
cli
jnp
or
sbbb
cmp
add
jns
pop
out
imull
aas
pushf
stc
cmpl
pushf
ja
hlt
inc
and
and
or
pop
outsb
jno
sarl
xor
mov
test
inc
aad
imul
imul
xor
loope
cmc
fwait
cwtl
mov
mov
sbb
aaa
mov
push
jne
fidivrl
das
jbe
mov
pop
andl
add
mov
push
jne
push
adc
dec
xchg
xchg
push
cmp
add
or
cmp
stos
xchg
out
jno
pusha
push
into
cmc
imul
outsl
call
loopne
pop
lock
jl
jnp
lds
pop
stos
ljmp
adcl
loope
daa
in
cmpsl
pop
add
push
jle
mov
mov
dec
pop
adc
ja
mov
push
cmovnp
mov
lds
gs
push
add
popa
lods
inc
test
push
hlt
jne
jmp
push
and
das
sti
xor
mov
fwait
loop
pop
mov
leave
out
xchg
push
shrl
sahf
cmp
sti
or
xchg
xchg
mov
cmpsb
lds
imul
xor
cmp
xchg
cmp
jnp
das
add
jle
ss
mov
addb
cmpl
dec
clc
std
sub
add
xchg
nop
sbb
or
hlt
decl
sub
fildl
push
mov
mov
mov
fs
mov
mov
movsl
cli
and
call
nop
std
loope
mov
fisttpl
imul
mov
rol
leave
mov
xorl
ja
movsb
pop
hlt
pop
lret
xor
popf
adc
jae
lcall
daa
in
jb
scas
inc
jne
add
fildl
xor
test
fidivrs
push
cmpsl
shlb
sbb
cmp
mov
jae
testl
cmp
icebp
add
imul
push
lcall
iret
fistpll
dec
paddw
push
xchg
call
ja
inc
sahf
xchg
outsb
and
mov
psubd
xchg
mov
es
repz
add
pop
lret
inc
in
add
je
cmpsb
shll
xchg
pop
push
dec
inc
push
nop
pop
inc
sbb
or
call
sbb
test
insb
add
pop
mov
jb
jecxz
bound
fisubrl
mov
bound
xlat
pop
int3
popf
call
lahf
lea
mov
and
outsb
mov
xchg
clc
iret
dec
xor
push
or
sarb
lods
gs
fsubl
ja,pt
loop
arpl
orb
lods
push
insl
and
push
mov
xor
jg
data16
mov
cmpsb
out
and
mov
call
nop
lds
sub
xchg
loopne
lock
int3
dec
shrb
dec
fwait
mov
rclb
stos
cmp
and
mov
lahf
xlat
inc
dec
ljmp
lret
cmp
or
lods
or
xor
lret
test
cmpb
dec
aaa
mov
mov
or
cld
xorb
mov
js
mov
mov
lods
mov
fwait
sub
sub
call
inc
jge
sub
mov
xchg
xchg
jb
sti
cwtl
fsubl
mov
mov
out
sti
or
mov
gs
insl
les
iret
fdivrl
js
xorb
bound
xchg
or
pop
mov
leave
mov
push
pop
or
gs
pop
adc
inc
sub
mov
addr16
in
xchg
xchg
arpl
mov
shlb
sbb
and
push
sti
in
fadds
and
dec
sti
rorb
add
add
adc
je
push
inc
enter
sub
cmpsb
movsb
out
inc
push
movsb
sub
xor
test
xchg
and
mov
xor
iret
movsl
shll
add
push
push
movsl
adc
pop
test
cmpsl
loope
jecxz
scas
inc
pop
or
movsl
les
and
mov
gs
pop
rorl
jcxz
and
dec
lock
mov
cmc
pop
inc
aaa
mov
mov
mov
je
inc
push
out
xorb
jp
mov
stc
push
mov
sub
es
aam
pop
cmpl
imull
mov
add
out
inc
stc
es
adc
sbb
shr
jmp
mov
fiaddl
icebp
add
insb
lock
mov
fsubl
daa
incb
test
movsb
and
xorb
xor
loop
pusha
mov
jne
out
mov
imul
dec
xor
xor
dec
add
sbb
bound
test
mov
push
jnp
sbb
dec
mov
pop
mov
inc
push
jmp
inc
out
xchg
sbb
cwtl
cmpsb
mov
add
sub
xchg
mov
jecxz
lret
push
in
in
push
or
imul
fidivl
call
mov
xchg
ljmp
cs
adc
psubusw
pushf
test
xchg
fnsave
sub
mov
dec
ret
inc
outsl
shlb
mov
out
repz
mov
sarl
fbld
popl
std
out
in
arpl
addr16
dec
adc
mov
add
dec
dec
mov
aaa
inc
std
in
dec
and
fwait
ror
cmp
aas
mov
adc
inc
cmpsl
jmp
mov
fiaddl
mov
sahf
adc
jnp
add
xchg
cmp
mov
ljmp
data16
sarb
fisubrs
xor
xchg
fdivrl
push
das
or
outsl
cmp
xor
mov
loopne
jo
popa
out
push
daa
stos
push
decl
into
or
imul
cmp
pop
das
mov
or
jle
sbb
inc
mov
adc
fildl
sahf
push
inc
ret
pop
movsb
inc
or
sbb
outsl
xor
filds
imul
shlb
dec
movsl
nop
mov
xor
fadd
xchg
ffree
pop
push
lds
not
out
xchg
or
or
lods
and
fstpt
inc
push
out
xchg
adc
push
fcoms
testl
je
sub
imul
inc
fwait
push
stc
js
sti
xchg
sarb
xchg
sbb
repz
xor
iret
xchg
sar
cmp
das
in
lcall
sbb
xchg
sbb
cs
dec
sarl
and
hlt
jle
fwait
xlat
fwait
dec
jge
lcall
xchg
push
sbb
ss
add
insl
in
inc
test
lret
out
pushf
in
stos
sub
pop
and
mov
fistl
sti
add
lea
lret
dec
lret
xchg
cmp
fcomi
insb
loop
pusha
sti
jo
mov
test
inc
push
lret
add
pop
negb
stos
sub
fwait
adc
iret
cmp
mov
pop
jecxz
jl
mov
loope
push
rcll
add
xchg
add
cmp
sbb
xor
sarl
xabort
cmpsl
leave
test
pop
mov
imul
mov
adc
nop
adc
sub
cli
push
imul
mov
jne
fldenv
and
mov
mov
add
ficompl
push
imul
dec
cli
cld
popf
xor
adcl
jae
mov
repnz
inc
mov
aad
imul
dec
jg
cmc
mov
inc
add
xor
outsb
sbb
and
sbb
out
mov
xchg
outsb
repnz
aas
imul
mov
testb
movsb
add
fldcw
test
imull
xchg
xchg
imul
jns
subl
push
mov
pop
in
aad
stos
mov
daa
pop
jae
sub
ss
pop
cltd
push
sub
ret
jb
aaa
sub
stos
adc
lds
mov
push
lods
push
stc
dec
gs
ja
dec
mov
loope
mov
icebp
xchg
mov
fnsave
mov
mov
jbe
cmp
jp
push
jle
aam
leave
jge
call
sub
sahf
dec
cmp
dec
rorl
testb
jbe
pop
mov
into
pop
iret
cmpsl
lahf
sbbb
lds
mov
sub
push
pop
and
cltd
and
ret
stos
das
ror
jle
arpl
mov
push
popa
or
test
jmp
test
xchg
xor
xchg
outsb
xchg
loope
imull
mov
shrl
mov
pop
lds
and
mov
pop
xchg
pushf
loop
mov
daa
mov
mov
xorl
pop
dec
and
movsl
adc
adc
clc
dec
fimull
lock
lret
repz
sahf
and
out
cs
lretw
lret
js
xor
push
push
dec
add
aam
bound
inc
inc
mov
pop
and
cmpsl
mov
sbb
imulb
stos
stos
push
cmc
cmp
dec
jmp
test
dec
xlat
xchg
outsb
cmpsb
dec
push
in
sbb
leave
cmpb
xlat
mov
sbb
sbb
out
sbb
pop
sbb
shrl
push
ds
adc
inc
mov
lahf
sub
cmp
jae
ficoml
adc
jno
cmp
fsubs
das
sbb
jmp
lds
filds
ljmp
enter
jo
testb
mov
stos
ror
fcmovbe
in
dec
in
addr16
or
sbb
sub
add
pop
fidivl
sub
pop
xor
dec
adc
lcall
add
cltd
xor
xchg
in
cwtl
arpl
fs
push
lods
in
in
cs
push
jne
xchg
shl
adc
adc
sar
fnstcw
addr16
and
inc
adc
movsb
insl
into
mov
fsubl
xchg
in
test
movsl
jl
pop
nop
add
push
xor
and
ud0
pop
scas
mov
mov
lds
addr16
outsb
lods
jnp
mov
or
lods
xchg
mov
data16
mov
pushl
push
repz
dec
mov
cmp
es
fadd
jns
fildll
out
cmp
mov
or
xor
dec
pusha
jmp
outsb
push
mov
ret
aam
xchg
push
repz
or
mov
push
push
movsl
push
lcall
lods
shr
sub
sti
or
mov
fwait
ja
testl
dec
push
xor
pushf
call
clc
sbb
or
dec
xchg
in
mov
add
dec
daa
pop
out
sbb
cmp
pop
and
stc
in
cmpsb
push
jg
jbe
inc
scas
and
rcrl
jle
or
dec
sbb
mov
lods
inc
inc
dec
aaa
sbb
lret
cmpsb
dec
sbb
daa
dec
or
mov
push
sahf
cli
cltd
cwtl
inc
mov
lea
inc
add
arpl
mov
mov
popl
mov
inc
cld
repnz
dec
jle
es
fwait
adc
iret
sti
push
lods
loopne
and
pusha
leave
pop
pusha
mov
cmp
mov
popa
inc
jmp
shl
pop
lcall
rclb
hlt
pop
lret
dec
inc
mov
test
add
ds
in
cltd
pop
jp
repz
icebp
js
fwait
push
mov
fdivrs
mov
popf
push
pop
subb
ret
lret
aas
dec
cmc
clc
std
push
mov
push
incl
adc
cli
mov
sbb
inc
fs
inc
jge
sub
push
lods
rol
mov
or
stos
inc
les
es
fwait
dec
mov
mov
fildl
adcl
ret
jecxz
cmp
outsb
sbb
ret
cld
call
cmpsb
jecxz
enter
in
jns
cmpl
mov
and
inc
std
lds
mov
sahf
add
int3
or
decb
dec
js
sarl
repz
aas
xlat
rol
stos
add
in
adc
mov
mov
push
icebp
cmp
sub
adc
and
mov
and
pop
outsb
inc
jae
aaa
ret
jecxz
sub
adcb
lea
loopne
jg
das
fidivs
cmp
push
mov
jae
shrb
in
sti
pop
jno
in
aas
mov
cmp
test
jmp
pop
mov
and
scas
in
stos
mull
and
mov
lea
jbe
cmp
xchg
roll
rep
addr16
add
xor
xchg
mov
stos
int
testb
leave
jb
cld
lock
test
imulb
push
repz
push
dec
adc
and
imul
loope
pop
or
fadds
mov
jp
mov
in
loopne
ljmp
dec
mov
insb
fsts
in
lret
pop
out
xor
test
pop
xlat
sub
stc
mov
inc
je
sahf
mov
add
iret
popf
ja
sbb
xchg
xor
pop
and
jmp
movsl
imul
push
jmp
push
dec
inc
xorb
mov
mov
fdivr
stos
inc
adc
xor
mov
mov
fisubrs
mov
sbb
push
mov
stc
dec
jecxz
mov
jl
push
dec
push
lods
xor
xchg
rcll
push
pop
adc
pop
repz
shlb
ljmp
mov
icebp
sbb
das
jle
outsl
sahf
cmp
mov
orb
or
daa
dec
or
jl
in
fwait
dec
inc
loop
add
ds
cmp
mov
add
cmp
int3
xchg
cmp
gs
jg
add
mov
jl
out
fcmovne
daa
sub
lods
xor
addb
dec
mov
sub
xor
inc
inc
lret
lds
jp
enter
pop
adc
sub
push
and
pop
xchg
xchg
loop
cmp
fwait
clc
lret
inc
rcr
outsl
sahf
push
insb
push
pop
inc
and
das
je
fadds
jne,pt
lcall
adc
cli
test
push
mov
mov
adc
int
nop
sub
fwait
mov
lods
or
lock
mov
lds
pop
sti
xor
cwtl
and
sub
jnp
pushf
or
jp
xor
gs
mov
mov
test
nop
in
mov
add
and
frstor
pushf
sbbb
or
rep
daa
xlat
fstps
push
sub
leave
jp
imul
rcrb
sub
mov
inc
cli
add
fldcw
fimuls
dec
jo
push
mov
std
sub
cmpsb
stos
xchg
addr16
jb
cmp
in
lcall
mov
sub
fistpll
adc
mov
cld
sbb
lock
pop
pop
mov
std
or
jle
mov
into
mov
je
inc
push
cmp
push
stos
xchg
stos
dec
or
ss
insl
dec
mov
incb
rcrb
or
jne
movl
sub
adc
mov
mov
dec
arpl
orl
inc
push
imul
popf
call
inc
rol
push
test
pop
pop
ljmp
arpl
cld
repnz
sbb
sar
in
sub
sahf
subl
jge
shll
sbbl
je
cmpsb
out
add
add
cld
fsub
mov
lret
pushaw
pop
sbb
inc
mov
push
xorl
jmp
cmp
and
push
add
lea
imul
inc
rcrb
and
adc
push
decb
dec
enter
push
xchg
divb
cli
cmc
and
mov
lcall
pop
sarb
movsl
xchg
into
out
pop
out
lret
loope
lahf
dec
lahf
fstl
lods
cmp
sub
pop
cld
stos
xchg
lahf
dec
fsts
clc
push
in
mov
add
inc
out
mov
dec
pusha
adc
daa
jp
sub
add
fbld
mov
stos
stos
lcall
movsb
pop
xor
stos
sbbl
mov
dec
push
jae,pn
xor
push
adc
jge
call
das
cmpsl
jl
push
jae
adc
leave
pop
insb
insl
stc
ret
filds
adc
jmp
mov
aam
js
repnz
loop
addr16
inc
xor
lahf
rcrl
int
cmc
inc
sarl
pop
mov
pushf
icebp
mov
pop
pop
scas
std
lods
ss
les
sahf
testl
popf
pop
mov
ljmp
and
loope
ret
mov
xor
rcrb
inc
out
scas
dec
and
enter
push
repnz
adc
lea
scas
or
mov
xchg
adcl
in
lods
cli
mov
rcrb
test
in
or
jnp
pop
cltd
add
cmp
mov
enter
icebp
xor
adcl
jne
push
js
jge
sbb
add
daa
add
add
push
sbb
sbbb
inc
insl
and
arpl
mov
ret
xlat
mov
jle
push
hlt
cmpsb
lret
in
push
push
jmp
cmc
jg
lock
lods
push
mov
in
imul
mov
cmpsl
pop
dec
sbb
and
and
mov
rclb
or
mov
fwait
inc
sub
paddw
jmp
outsl
push
pop
call
adc
les
inc
dec
pop
dec
pop
pop
xor
pop
dec
pop
push
xor
xchg
rorl
cmp
xchg
das
or
in
dec
and
sub
hlt
sbb
movsl
js
cmp
ret
add
loopne
cli
jb
sbb
ljmp
mov
jb
int
adc
test
cli
or
clc
pop
paddusw
pop
jecxz
cmp
out
push
stos
and
sbb
mov
cmp
ror
jp
adc
jl
cmp
dec
and
cmp
jb
in
mov
pop
dec
xor
je
shrb
lds
fdivrl
cltd
xor
int
xor
pusha
add
pop
and
movsl
jmp
mov
outsb
iret
push
add
insl
test
pushf
mov
add
movsl
xchg
dec
jp
dec
ret
cli
in
fists
push
rorb
imulb
nop
andl
out
dec
pushf
pushf
and
inc
sbb
cmp
movsb
in
mov
lret
into
jo
das
out
xor
cmc
cmp
sub
pop
mov
je
je
jo
mov
ljmp
mov
sub
das
outsl
stc
je
int
lret
repnz
inc
adc
jb
lods
outsb
pop
repnz
sbb
inc
or
imul
movsb
dec
xchg
cwtl
or
pop
je
insl
jno
cmp
decb
xchg
aam
or
jo
or
test
jb
and
xor
dec
divb
jns
lods
pop
stos
adc
jnp
sbb
fsts
jecxz
jno
sub
lea
cs
inc
fs
sbb
pop
hlt
cmp
sahf
push
mov
int
stc
xchg
jbe
jp
push
jb
out
cmp
movsb
sbb
sarl
xchg
mov
repz
sub
xchg
pop
inc
pop
or
repnz
pop
pop
xorl
fwait
cld
xchg
mov
xor
xor
inc
hlt
repnz
and
dec
or
xlat
in
cmpsl
xor
sbb
cmp
sbb
or
out
mov
mov
dec
add
fnstcw
jbe
and
xchg
movsl
add
xor
popf
icebp
aaa
xchg
sbb
mov
jne
pop
gs
out
jnp
jnp
xor
scas
cltd
and
xor
inc
mov
and
cwtl
adc
mov
or
jne
mov
push
sub
xchg
xchg
hlt
arpl
lcall
rcrb
imull
inc
dec
insl
xorl
loopne
fstpl
sbb
outsl
inc
pop
xlat
scas
push
jb
adc
pop
and
and
xchg
add
mov
pop
leave
adc
das
pop
mov
gs
jo
es
xchg
testl
cli
add
mov
movsl
stos
roll
movsb
shrl
mov
scas
cmc
shll
adc
imull
lods
loopne
dec
jecxz
je
pop
jnp
inc
mov
shl
and
jmp
ljmp
lahf
cmp
jle
jge
shrb
mov
cmpb
lahf
insl
dec
sbb
ret
shlb
mov
aad
ja
fiadds
mov
subl
popf
or
push
fsubs
sbb
es
xchg
xchg
pop
xchg
adc
es
mov
sub
mov
into
push
aam
pushf
push
repnz
rcr
mov
sbb
std
mov
push
imul
add
fwait
loop
in
mov
es
inc
push
jne
dec
mov
lods
add
hlt
out
jecxz
aam
inc
lock
inc
adc
push
and
lahf
mov
js
aad
cmp
push
in
shll
ret
cltd
es
xlat
push
push
mov
enter
mov
cmp
or
into
xchg
mov
jns
cli
sub
sbb
inc
dec
inc
dec
mov
or
sbb
mov
sub
rcl
dec
repnz
ja
jnp
sub
pushf
push
jmp
hlt
call
inc
in
fisttps
xchg
lds
in
mov
enter
scas
jbe
mov
fucomi
inc
lcall
outsb
pop
lods
inc
inc
test
inc
xchg
sub
dec
icebp
xor
mov
pop
insb
mov
dec
testl
enter
and
cltd
call
add
rcll
add
or
jo
dec
jg
ret
bound
mull
inc
mov
mov
pop
push
test
pop
fadd
pop
cld
pop
sti
push
xchg
shlb
mov
lods
aam
push
push
into
daa
dec
ret
add
mov
loopne
or
pop
aaa
xlat
rcrb
lret
mov
xor
xchg
and
sbb
ror
lea
push
mov
pop
imul
stc
fstp
inc
jl
loope
mov
xchg
and
push
fcoml
lods
sbb
out
lock
dec
xor
adc
pop
sub
repnz
push
mov
mov
push
cmp
pusha
call
jne
mov
pop
inc
jb
push
mov
add
stc
xor
jns
sti
lds
lcall
lret
xor
push
in
push
fs
rorb
out
and
aad
pop
roll
fs
jno
int
mov
jl
aam
pop
cmpsl
pusha
mov
xor
test
inc
divl
out
add
lcall
ret
flds
sub
imul
ficoms
jl
dec
imul
dec
lds
push
or
mov
xchg
sub
in
add
adc
into
out
pop
das
jge
enter
out
je
ss
mov
je
dec
addr16
dec
mov
clc
cmc
insb
movsb
fs
shll
vpsubsw
jmp
xchg
inc
jg
pushf
loop
cli
cmp
mov
int3
sub
not
jno
add
mov
rol
shlb
inc
scas
and
mov
into
scas
sti
pop
inc
mov
pop
lret
add
f2xm1
pop
mov
and
aaa
enter
aad
out
ret
mov
push
push
sbb
lea
pop
sub
push
stos
cmpsl
jg
out
mov
cmp
jge
inc
adc
pop
cmpsb
mov
out
xlat
mov
xor
cmc
lahf
enter
jnp
mov
loopne
enter
pop
cwtl
cmp
jle
into
test
out
sbb
les
pop
scas
cmpsl
popl
sbbb
cltd
xor
cltd
sub
in
inc
push
push
sub
mov
stos
push
leave
pop
xchg
or
iret
in
les
scas
jnp
and
test
push
outsb
and
aam
iret
data16
in
movsl
cmp
int3
sbb
pop
dec
adc
xlat
mov
adc
pop
sub
xchg
cltd
stc
and
pushf
dec
add
idivb
jo
xchg
pop
sbb
ret
sbb
ret
cwtl
xor
pop
inc
scas
cmp
sub
jle
mov
mov
push
repnz
jae
std
adc
push
mov
xchg
ljmp
push
sbb
push
out
mov
mov
int
cwtl
mov
push
pushf
cmp
in
in
jae
dec
mov
xchg
push
in
adc
shrl
and
shrl
dec
sti
ret
sub
pop
stos
sub
dec
add
cmp
xor
cmp
in
and
jnp
and
xchg
cmp
cmc
mov
lods
movl
icebp
or
xlat
roll
push
pop
fidivs
mov
jge
push
jmp
es
cmp
pop
pop
push
jle
popl
pop
cmp
les
movsb
sbb
cmp
dec
xchg
fldenv
pop
or
hlt
lods
pop
xchg
hlt
pop
aam
iret
and
popa
cmp
and
jmp
bnd
ficoms
clc
test
jne
push
out
push
pop
xchg
add
call
add
sub
aas
sbb
adc
pop
xor
mov
dec
pop
mov
and
cmp
jmp
insb
mov
mov
cmp
fwait
adc
mov
cwtl
movsl
push
loop
pop
test
lahf
out
in
mov
les
mov
into
cmp
iret
fcmovu
cmp
es
out
fwait
or
sbb
mov
lret
popf
ljmp
mov
es
mov
std
fstpl
mov
scas
mov
not
fsubr
and
sub
ss
dec
icebp
or
hlt
mov
push
sub
pusha
inc
push
mov
das
insl
test
mov
xchg
sub
mov
dec
fdivs
pop
mov
adc
rorl
push
mov
push
jge
shl
adc
test
xor
sbb
mov
es
sub
test
cld
jbe
notb
inc
push
shll
pop
cli
aas
stos
pop
out
inc
pop
in
rol
push
jecxz
xor
in
dec
cmp
mull
push
dec
cmc
xor
cmpsl
xor
outsl
into
cli
pop
sbb
imul
arpl
mov
adc
sub
jns
jl
xchg
rcll
lahf
inc
ret
pop
test
fdivl
pop
out
xlat
sub
jae
insb
adc
inc
mov
mov
and
jns
in
sahf
sti
sub
xchg
push
or
mov
into
and
jecxz
inc
loope
push
lahf
in
inc
push
daa
scas
mov
cld
jns
fucomi
fadd
xor
in
jle
push
inc
mov
imul
cld
stos
jp
cmp
or
push
je
mov
jmp
adc
add
popa
lret
xchg
mov
rorb
push
ds
sbb
fldt
es
or
mov
lods
mov
pusha
movsb
inc
out
ljmp
push
push
clc
or
jns
jne
cmpsl
stos
stos
scas
test
inc
mov
cmc
xchg
int
add
or
or
pop
dec
push
push
clc
push
insb
mov
and
insl
daa
lret
mov
jmp
roll
in
pop
lahf
iret
ret
add
xor
dec
mov
fwait
movsb
lds
lea
jae
sbbl
insl
jle
adc
sbb
xor
adc
sbb
pop
ljmp
rol
push
ret
cmpb
call
push
lahf
pushf
lods
dec
mov
nop
xlat
fprem
imul
pop
ds
and
into
mov
sub
push
and
out
pushf
repz
in
add
xor
inc
out
jmp
aaa
cmc
mov
lods
movsl
push
adc
and
fwait
lea
dec
xchg
inc
daa
xchg
add
dec
stos
cmp
mov
into
ja
ja
rcr
cmp
push
jmp
mov
push
stos
or
and
test
in
cmp
outsb
mov
mov
shlb
cwtl
or
mov
push
and
cmc
mov
fsubrl
sbb
movsl
add
cs
insl
addb
sub
mov
pop
xchg
jo
ret
stos
mov
rclb
leave
lock
xchg
sarb
jns
mov
fildll
insb
jp
and
add
outsl
dec
sahf
and
and
scas
shlb
popf
xchg
cmpsb
mov
ja
ret
push
pushf
repnz
dec
test
push
outsl
movsl
out
aam
aam
dec
mov
loopne
inc
daa
ret
stos
ds
out
or
and
lcall
xchg
pop
pop
lods
icebp
add
divl
cmpsl
mov
xchg
fmulp
mov
lock
dec
enter
jno
orb
adc
inc
mov
fucomp
scas
fdivr
loope
or
scas
rcr
adc
mov
pop
dec
cmpsl
or
jno
cld
sbb
inc
jmp
lock
jae
dec
inc
sbb
add
mov
push
gs
jp
das
data16
add
jge
popf
cmpsl
sbb
jecxz
fisubrl
lret
rcrl
and
sahf
fistpll
in
pop
iret
push
mov
cmc
cmp
loope
push
jg
xor
xor
sub
add
xchg
and
mov
jnp
int
jno
fwait
outsl
jae
sub
jb
jns
call
inc
adc
sub
xchg
mov
into
lcall
rcrl
mov
mov
lods
jb
mov
scas
loopne
mov
sbb
scas
test
or
test
pop
cmc
adc
mov
jmp
iret
pop
mov
mov
add
dec
push
dec
push
xor
imul
sti
cli
jae
xor
ds
pusha
xchg
jecxz
fucomp
cltd
jg
aas
mov
js
inc
adc
pop
test
mov
fisubl
or
adc
mov
xchg
adc
xor
jns
jno
pop
in
aad
paddq
sbb
in
lods
mov
clc
fisttpll
mov
dec
cmpl
sub
cmp
mov
leave
pop
add
dec
rcrl
jno
jp
mov
sarb
loop
cpuid
xchg
and
mov
scas
rcrl
fwait
push
lcall
xor
out
cltd
mov
cmp
xchg
sarl
lods
pop
aas
xchg
pusha
data16
push
push
xlat
pop
mov
shll
aam
sbb
das
out
dec
fldl
imul
aam
or
push
sahf
lods
inc
fistl
adc
ljmp
inc
cwtl
imul
xchg
xchg
mov
fadd
mov
and
and
cld
imul
jecxz
call
xchg
sub
fdivr
es
ja
std
inc
out
push
jmp
es
sub
les
shr
or
es
lcall
mov
mov
push
outsb
mov
or
movaps
aam
mov
pop
loopne
pushl
mov
in
mov
cmp
pop
mov
stos
or
repz
rorl
jns
flds
fidivrs
mov
and
inc
xchg
imul
or
xor
sub
cwtl
push
xchg
cld
xor
or
sub
mov
xchg
outsl
outsl
arpl
and
aas
jbe
add
sbb
iret
mov
out
hlt
push
aad
mov
sbb
push
dec
lods
leave
add
mov
adc
into
pop
test
cmpsl
inc
test
sbb
out
sbb
aad
mov
push
push
fprem1
and
push
push
in
push
mov
pop
andl
add
mov
clc
loop
push
pop
sub
inc
mov
push
mov
stos
jle
push
in
mov
push
stos
and
sub
sbb
sub
mov
shll
and
jp
popa
mov
movsl
push
cmp
pop
test
vandps
ror
or
mov
jmp
pop
icebp
insb
mov
jge
int3
cmp
adc
aas
xor
inc
push
mov
aam
stos
test
andb
xchg
fdivr
rorl
add
int3
arpl
shl
push
mov
aam
fbld
imul
mov
xchg
adc
sarl
sbb
ds
scas
mov
cmc
add
push
jge,pt
mov
cwtl
out
mov
jge
aas
add
pmaxub
les
inc
pop
shll
and
outsb
scas
insb
sub
mov
mov
adc
cmp
or
stc
sub
cmpb
cwtl
bnd
xchg
es
popa
dec
sub
mulb
jns
adc
cwtl
mov
hlt
nop
js
push
out
push
divb
into
xchg
jae
aas
les
fildl
sub
in
outsb
rcpps
mov
cmp
repnz
adcb
inc
jae
in
xor
jecxz
xchg
cmp
xchg
push
xor
scas
xchg
js
mov
xor
jnp
jmp
imul
sub
ss
imul
in
in
xchg
shll
mov
in
mov
adc
xchg
dec
int
mov
xor
or
ljmp
and
ror
jnp
sub
jo
testl
inc
push
xor
dec
stos
ficompl
sub
xor
fistl
pop
add
dec
jae
xchg
adc
arpl
xor
sete
fcmovbe
lock
outsl
xchg
and
inc
jge
dec
mov
ljmp
cs
lret
lret
nop
aas
dec
pop
aaa
lcall
jno
dec
sbb
mov
sti
and
adcb
cs
shlb
es
add
xorl
lcall
leave
icebp
fists
xorb
dec
sub
add
hlt
lret
into
outsl
push
nop
cltd
aaa
in
xchg
lret
sbb
mov
out
inc
or
add
int
mov
ja
in
ret
inc
and
es
jae
ss
inc
int3
or
dec
adc
and
out
mov
add
shrb
repz
jg
xor
std
pop
dec
aam
pop
sub
imul
aas
into
mov
inc
pop
insl
push
lea
jb
flds
jno
or
mov
or
sub
fs
xor
ret
jmp
lds
pop
sub
pop
inc
out
adc
dec
jae
lods
test
insl
sub
daa
gs
shl
sub
or
jne
lds
push
shlb
mov
lret
adc
insb
je
sbb
mov
inc
mov
mov
pop
cmpsl
or
jmp
inc
lods
mov
mov
out
cmp
dec
add
addl
sbb
pop
sti
cmp
cs
lcall
mov
insb
and
leave
xor
add
cmc
leave
mov
stos
inc
xor
jmpw
mov
mov
popf
xor
inc
pop
jno
cwtl
int3
aaa
dec
je
inc
clc
jecxz
fisubrl
pusha
mov
addr16
ljmp
stc
pop
leave
fiadds
mov
pop
and
insb
cld
or
rcll
add
fsubrs
dec
jns
jle
xchg
testb
mov
clc
ljmp
cmp
js
jge
pop
cmc
mov
dec
jle
or
xchg
sub
repnz
popa
xor
das
push
xor
testl
stos
and
cmp
sub
jne
lods
movsb
out
and
arpl
mov
jge
and
cmpsb
lods
outsb
mov
mov
dec
cmp
push
lret
lods
sbb
push
lods
cld
cmp
inc
jle
mov
in
or
shl
cmp
rorb
mov
lods
out
or
mov
dec
inc
out
xor
xchg
pop
xor
lds
outsl
shrb
lcall
lds
sbb
incb
jbe
dec
daa
xor
jb
in
sub
adc
dec
jb
sbb
jne
bnd
jne
insb
je
fadds
das
add
in
push
mov
fs
xor
aam
push
mov
insl
fwait
cmp
mov
adc
addr16
outsb
mov
xchg
repz
inc
mov
inc
fsubrl
jb
hlt
outsl
pop
mov
cmp
outsb
es
stc
and
sbbl
stos
into
dec
mov
adc
daa
pop
or
cmp
bound
inc
xchg
mov
cwtl
xlat
stos
dec
imul
popa
inc
aam
pop
cmp
in
adc
cwtl
cwtl
jbe
mov
inc
rcll
loopne
imul
pop
push
jle
mov
xchg
cs
data16
pushf
roll
xchg
jle
loope
inc
xchg
fcomps
jne
std
jo
pop
sub
xor
fwait
xor
or
js
xor
xchg
out
pop
or
jb
xchg
jb
pushf
jbe
dec
ds
xor
ficomps
lods
or
dec
test
xlat
dec
in
mov
xchg
jmp
push
cmp
in
or
sub
sbb
mov
lods
shll
dec
push
mov
loope
lods
jecxz
inc
gs
leave
mov
mov
and
mov
pop
mov
inc
add
push
jnp
fistpl
ss
out
ret
gs
ret
xor
jbe
jmp
imul
gs
jb
std
cmp
test
push
or
es
adc
out
inc
pusha
jmp
loope
popf
sti
scas
or
sub
gs
cli
aas
cmp
mov
dec
fdivrs
sbb
push
jl
adc
xchg
iret
add
aad
dec
lret
xor
mov
into
dec
dec
fnstenv
out
sbb
out
movsb
lods
or
scas
dec
repnz
lock
flds
out
stc
pop
mov
les
test
cmpsl
sbb
sbb
or
lods
data16
pop
push
pusha
pusha
and
aad
loopne
inc
adc
jg
aaa
mov
out
add
sub
xor
dec
push
es
inc
sarl
mov
cmp
xor
jno
xlat
call
cmp
loopne
mov
xchg
cmp
pop
sbb
xchg
inc
jno
icebp
jbe
pop
mov
inc
cltd
xlat
or
xor
pop
dec
and
mov
out
addb
sbb
cmp
je
or
nop
jo
mov
pop
shll
dec
stos
fidivl
cmpsb
pop
xor
addr16
mov
mov
sbb
hlt
and
add
pop
xorl
addb
into
inc
iret
aas
and
sbb
in
lret
shlb
mov
imul
cmp
jnp
and
add
jne
or
cltd
nop
push
jge
xchg
cmpsb
icebp
aam
pmaxsw
and
or
mov
js
cmp
in
sub
add
jno
pop
imul
and
les
addr16
mov
adc
mov
sub
inc
pop
ljmp
jg
push
inc
mov
cmp
xchg
mov
es
movsl
xchg
xchg
sti
xor
and
sbb
add
sub
xchg
roll
pusha
fnstcw
ss
push
in
call
and
mov
push
pusha
fcom
mov
ss
adc
cmp
mov
fwait
popf
xchg
lods
or
insl
adc
and
das
movsb
sub
ror
int3
nop
cmp
mov
xor
in
jmp
pop
popf
pop
xchg
popf
adc
dec
fldlg2
mov
ret
xchg
and
mov
sbb
cmp
lret
cmp
push
xor
adc
push
mov
pop
inc
push
in
add
mov
pop
sub
xor
lock
jl
sub
fldcw
inc
mov
aas
xchg
cmp
out
test
xor
xchg
add
pop
stc
jns
ret
or
mov
sub
fistpl
roll
movsl
mov
xchg
jmp
ljmp
sbb
adc
rcr
std
ret
mov
cmpsl
add
push
sub
mov
and
enter
cmpl
gs
cmp
pushf
gs
outsb
push
loop
xchg
xor
insb
leave
dec
cmpxchg8b
mov
bts
add
iret
fwait
sti
addl
adc
mov
pop
adc
and
pop
push
decl
test
repnz
rcr
adc
mov
adc
test
xchg
mov
dec
addb
inc
aam
std
pop
cltd
in
xchg
lahf
insb
cmc
test
mov
sahf
adc
jecxz
sub
aaa
bswap
inc
cli
mov
jo
or
xor
pop
push
or
arpl
test
ffreep
lods
sub
xor
cmpsb
inc
loopne
jp
inc
mov
mov
aaa
cmpsl
cmp
into
in
loope
jl
test
jnp
xchg
dec
push
dec
mov
and
adc
jmp
fbstp
aaa
sbb
cltd
mov
mov
pop
jae
gs
mov
mov
enter
jbe
jl
push
xchg
cmpsb
mov
lea
bound
xchg
mov
jbe
cmpsl
mov
inc
shrl
xor
push
fbld
adc
cmp
ljmp
les
add
inc
jle
adc
xchg
xor
fists
das
addl
popf
dec
arpl
and
std
aas
rolb
stos
popf
cmp
jg
jl
sarb
jbe
dec
inc
add
enter
shll
xchg
sub
jge
adc
sbb
dec
outsl
or
mov
dec
and
bound
into
cmp
adc
arpl
pop
cmp
je
pop
lret
sub
xchg
rorl
add
dec
push
xchg
xchg
outsb
jno
aaa
sub
adc
xor
pusha
addr16
adc
arpl
test
popf
stc
add
add
cmp
xchg
dec
and
jb
lret
jns
mov
ss
pop
xor
imul
ljmp
lahf
sahf
pushf
dec
jbe
pushf
or
mov
pusha
es
mov
leave
clc
mov
mov
or
pop
mov
push
cmp
add
movsb
imul
push
enter
sbb
rcl
inc
mov
rorl
xor
lods
loope
nop
mov
pop
mov
daa
or
test
enter
jb
pop
mov
mov
cmp
mov
cmp
dec
adc
ljmp
push
jecxz
movsb
scas
rcrl
sti
or
test
adc
mov
scas
insb
mov
cwtl
mov
outsl
out
mov
and
pop
dec
popa
push
adc
xor
pop
orb
push
add
mov
outsl
das
pop
xor
add
ret
jle
pop
mov
add
jle
mov
jo
mov
fwait
stc
and
mov
mov
mov
or
fsubp
dec
inc
jae
inc
shr
divb
cmpl
push
mov
hlt
push
or
out
ffree
mov
inc
pop
and
jge
mov
inc
adc
dec
iret
cs
push
rcr
fbstp
xchg
test
call
insl
or
dec
mov
dec
mov
jb
pop
mov
addl
shrl
fnsave
imul
lret
test
xchg
bound
sti
push
inc
fmuls
mov
jle
ljmp
add
sub
mov
addr16
adc
dec
push
jns
mov
movb
jnp
and
bound
mov
stos
xchg
jo
sahf
mov
mov
mov
imul
call
sub
push
popf
shl
out
cmp
sti
aas
cwtl
cmpsb
sub
xchg
xor
mov
lods
insl
inc
adc
mov
imull
jecxz
sbb
pop
testb
lahf
test
repnz
rclb
add
outsl
subb
clc
sbb
push
and
inc
mov
sub
sbb
popa
testl
add
sbb
fidivrs
mov
cmp
sub
cmc
cmp
jne
push
mov
xchg
xor
nop
orb
jnp
adc
push
xor
inc
cmpsl
and
inc
pop
pop
xchg
dec
jno
mov
mov
movsb
xlat
cltd
rcrb
pushl
mov
push
and
movsb
ss
adc
or
mov
int
ja
imul
fbstp
jle
or
xor
lret
imul
mov
mov
pop
and
scas
shlb
mov
or
xchg
xorl
outsb
cwtl
adc
xlat
jge
dec
sub
dec
out
cmp
lret
adc
mov
popf
imul
test
cmp
insl
cmp
inc
sbb
cmpsb
and
jge
ret
clc
mov
xchg
fndisi(8087
ret
test
addr16
bound
mov
inc
or
repz
mov
jmp
add
xchg
inc
xor
inc
xchg
mov
ret
das
mov
lods
jecxz
enter
xchg
into
incb
iret
mov
shr
add
sub
jo
xchg
cld
outsb
mov
and
dec
sub
mov
sub
arpl
stc
inc
dec
sub
rcll
leave
dec
out
inc
xor
adcl
dec
pushf
jns
and
sbb
xchg
jle
outsb
ret
mov
add
pop
test
xor
cmp
inc
lahf
test
outsb
inc
pop
sbb
cmp
sub
dec
push
jno
ljmp
out
pop
fisttps
xor
and
js
cs
nop
clc
or
out
lds
mov
push
lret
sbb
cmp
and
cld
sub
pop
fistpll
fistpll
xor
push
scas
mov
sbb
fs
sub
sbb
mov
mov
lret
cmp
jmp
insl
out
test
jns
sbb
stos
cs
inc
out
sbb
test
xorl
insb
add
and
loopne
hlt
inc
stos
dec
push
sub
pop
testb
loop
stos
cwtl
xchg
scas
loop
mov
imul
or
dec
mov
in
ss
dec
imul
pushf
add
mov
clc
js
xchg
and
sub
and
pop
or
jp
pop
xor
stos
cli
gs
lret
mov
sbb
jecxz
scas
mov
sahf
mov
push
in
cwtl
lods
dec
in
pop
xchg
aam
cmpsl
gs
cltd
adcb
xor
and
in
fsub
mov
cmp
push
cmp
sti
nop
mov
lcall
gs
ret
xor
sub
mov
les
shlb
test
push
mov
out
test
ret
and
out
daa
xlat
test
into
jmp
mov
insb
iret
jp
aam
mov
repnz
fs
mov
or
push
jnp
push
test
mov
add
mov
jbe
imul
cmp
sbb
xchg
dec
push
inc
testl
out
pop
xor
adc
or
idivl
std
cmp
or
outsl
cmc
cmp
xchg
xchg
push
rcrl
xchg
cld
xchg
mov
icebp
fneni(8087
inc
xor
sub
jmp
mov
repz
popa
add
dec
inc
out
lcall
repz
pushf
pop
mov
mov
xor
push
jg
shll
mov
add
out
js
inc
and
push
shlb
rcl
das
in
pop
cmp
push
cmp
mov
jbe
out
sub
xor
stos
in
xor
loop
sti
xchg
je
push
push
lds
mov
ljmp
enter
xchg
mov
fisubrs
fdivr
or
jns
xlat
push
push
cltd
push
and
xchg
push
mov
aaa
das
pusha
push
mov
ljmp
sbb
sub
rclb
pop
mov
adcb
inc
pop
pop
add
xor
push
push
dec
movsl
xor
pop
sub
sub
xlat
inc
shl
sbb
daa
push
and
push
loope
cmp
sti
xchg
push
mov
sar
xor
cmc
or
ljmp
daa
dec
bound
fdivp
imul
mov
mov
pop
jge
push
xor
rorl
sub
les
mov
stc
push
mov
orl
ja
jge
aam
shll
push
aas
push
popa
pop
inc
cli
xor
arpl
fisttps
pop
xchg
ret
xchg
daa
or
andb
repnz
jno
mov
pop
jecxz
stos
mov
cmc
mov
scas
lahf
adc
lret
aam
in
test
stc
pop
xchg
adc
dec
pop
xchg
cmpsl
out
das
jae
cmpsl
xor
sub
xor
mov
pop
cld
lds
mov
in
sbb
cltd
inc
sti
int3
push
imul
std
and
sbb
jne
adc
xor
in
inc
loop
xor
fldt
jnp
xchg
jge
lahf
iret
add
fs
push
cmp
rcll
push
adc
inc
stc
xor
stos
into
rolb
mov
sti
je
mov
out
push
pop
sbb
push
fiadds
stos
or
ja
jb
jge
aaa
addr16
subl
jmp
outsb
in
ja
push
dec
push
icebp
xor
cmp
dec
or
cmp
jmp
mov
je
lcall
inc
and
or
jnp
pop
ja
dec
cmpsl
mov
push
push
push
in
mov
gs
aaa
add
sub
xchg
mov
dec
push
iret
sbb
test
xchg
sub
test
mov
pop
addr16
or
lods
xchg
and
popf
lret
and
xchg
dec
out
push
loopne
jbe
mov
cmp
push
sahf
cmp
add
bswap
push
incb
xor
inc
ds
or
adc
sbb
imul
jo
push
leave
jp
inc
pop
mov
ffreep
icebp
int3
sub
mov
int3
jbe
sbb
or
pop
cli
mov
les
and
sarb
push
repz
inc
xchg
inc
jl
imul
mov
mov
js
enter
stos
dec
sbb
jno
iret
es
shrb
jnp
icebp
mov
pushf
pop
xchg
sub
inc
jb
fiadds
lods
xor
dec
adc
jo
pop
in
sub
xlat
adcb
sbb
dec
mov
push
pop
call
pop
outsl
jno
xor
out
mov
loop
pop
and
or
adc
fxch
push
minps
fimull
adc
mov
or
pop
bound
inc
out
insb
mov
inc
in
sub
jnp
fstl
jp
push
fimuls
xchg
cmpsl
sbb
scas
sahf
mov
pop
xchg
pushf
jg
ljmp
lcall
fsubrs
ds
push
or
sahf
add
xchg
inc
cmp
imul
hlt
jmp
daa
lea
pop
mov
dec
mov
fs
add
xchg
fistpl
loope
nop
hlt
lods
int
loope
lret
test
ficoml
ret
mov
xchg
xor
sub
fisttpll
push
add
inc
pop
jecxz
ss
stos
and
div
ss
mov
fdivr
stos
dec
push
cmp
out
push
push
repnz
cmpl
add
or
popf
sbb
jge
push
or
les
xchg
lahf
jae
pushf
push
fistpll
adc
test
dec
int
jg
xchg
add
por
cld
aad
dec
jbe
adc
mov
aas
push
add
lds
inc
push
insb
sbb
outsb
lret
testl
mov
inc
insl
mov
fmulp
inc
pushf
jb
js
ret
pop
cs
pop
push
cltd
push
movsl
lds
pop
inc
loopne
cmp
pushf
ret
mov
push
lods
lret
jae
and
rcrl
lea
int3
dec
pop
xchg
out
dec
insb
jmp
aaa
pusha
cmpsl
pop
les
sub
ja
pop
lods
inc
inc
jg
or
xor
push
js
or
gs
mov
addr16
shrb
aas
rcrb
into
aam
scas
hlt
sbb
gs
es
xor
add
mov
outsl
into
cld
into
in
pop
adc
sub
and
enter
jp
adc
enter
int3
in
fcoms
push
cmpsl
shll
fisttpl
shlb
and
hlt
or
jbe
aam
rorl
adc
sub
test
sub
gs
sub
add
into
adc
mov
scas
push
sub
sbb
pop
xor
add
mov
mov
mov
pop
arpl
sub
aam
pusha
add
popa
les
cmp
fcmovne
sti
daa
in
shrd
cmp
mov
mov
scas
or
or
cltd
cmpb
and
das
and
icebp
sub
data16
outsl
jbe
stos
addr16
mov
xlat
jns
inc
cli
vmovaps
daa
xchg
pusha
jp
mov
jns
out
lret
or
jae
movsb
loopne
cmc
cmp
push
mov
outsb
push
push
test
mov
inc
xlat
cmp
test
cltd
in
pop
outsl
mov
and
cld
adc
sti
xor
lcall
fcomps
in
scas
push
adc
aas
sti
addr16
int
loopne
dec
push
mov
jge
gs
lret
push
insl
daa
call
cmc
rcll
xchg
cmp
inc
jecxz
push
js
add
mov
xchg
xchg
cmp
xchg
jns
cmp
add
xor
je
ret
les
ljmp
je
jp
mov
add
mov
or
cmp
adc
cmp
call
mov
push
mov
out
sub
push
xchg
mov
mov
test
xorl
or
mov
adc
rorl
xchg
add
cmpsl
sbb
outsl
ret
push
sub
sbb
inc
add
inc
lret
mov
sub
sub
or
mov
mov
xor
bound
xchg
ficomps
outsb
aad
adc
dec
mov
xor
inc
jbe
hlt
out
fcos
insb
mov
dec
xchg
adc
inc
jmp
inc
xor
fwait
orl
int
push
xchg
cmp
cltd
cmp
push
out
dec
jl
loopne
mov
xchg
ja
cmp
lock
xchg
adc
inc
in
rolb
scas
cmpsl
mov
cmc
jecxz
fsts
cmc
into
clc
xchg
jno
jns
out
adc
push
cmc
test
repnz
sub
jp
or
mov
add
pop
outsb
into
std
xlat
call
lds
js
imul
cwtl
arpl
mov
mov
dec
dec
jle
mov
sub
jg
std
aas
inc
lods
test
xor
or
sub
adc
mov
sti
cmp
jo
sub
dec
leave
repz
insl
push
mov
cmp
mov
das
sbb
pop
insb
nop
adc
xlat
cmp
xor
sbb
shr
imul
hlt
jb
xchg
sub
xchg
add
sahf
inc
adc
addb
rolb
and
js
fdiv
repz
icebp
jbe
push
stos
and
and
mov
imul
xchg
push
jg
adc
sbb
sub
cwtl
mov
jl
mov
stos
push
or
hlt
out
aad
adc
mov
xchg
cmp
test
and
jle
xchg
or
mov
cmc
push
xor
pushf
cmp
dec
xchg
mov
push
scas
lcall
mov
mov
push
fstpt
or
xacquire
inc
pop
test
stos
xlat
cltd
cmp
pop
inc
sti
pop
push
jl
mov
add
test
xchg
mov
jns
iret
loopne
mov
int
inc
mov
cmp
push
cmpsb
js
rclb
fistps
cmp
dec
mov
inc
hlt
imul
adc
xchg
movsb
out
xchg
leave
dec
rcl
leave
push
cmp
sub
aam
add
jbe
lret
or
sub
adcb
enter
push
mov
pcmpgtb
ljmp
and
cmpsb
or
and
cmp
sub
insb
in
push
test
xor
or
daa
and
pop
pop
test
or
lahf
add
cmp
jns
sbb
fimull
aas
movsl
cli
adc
aam
sub
sub
adc
out
stc
call
imul
cmp
push
dec
test
jecxz
add
xor
push
cmp
inc
rclb
mov
enter
sub
ljmp
dec
fcoms
inc
fistps
push
fmuls
adc
sbb
call
jmp
in
je
jo
or
xchg
in
lea
cmp
mov
ffreep
jnp
mov
cmpl
xlat
addb
xor
add
push
jbe
xchg
test
mov
fs
jns
cmpsl
adc
or
inc
pop
jno
lcall
ljmp
shl
bound
mov
xchg
push
ds
aad
in
loop
xor
js
mov
fdivrl
mov
icebp
and
jae
int
pop
mov
movsb
pop
fdivrs
imul
mov
shrb
aaa
mov
in
dec
push
enter
lods
dec
or
jmp
decb
sahf
stc
loope
repz
iret
stos
mov
gs
sbb
xchg
and
pop
cmp
orb
sarl
in
insb
sub
shll
xor
out
loopne
inc
dec
xorl
push
mov
cltd
ret
popf
xor
in
je
lcall
pop
dec
cs
inc
and
mov
pop
cmp
bound
movsb
ret
movsb
xor
or
xchg
movsl
sbb
pop
mov
fs
iret
pop
xchg
movsl
push
cmp
pop
cmp
mov
in
pop
into
lcall
outsl
cmp
inc
push
jecxz
mov
jns
push
enter
pushaw
pusha
test
jne
popf
adc
dec
mov
pop
or
hlt
loopne
pop
nop
mov
sbb
mov
jns
outsb
dec
insb
mov
add
divb
jnp
repnz
mov
shrb
sbb
xor
fwait
sti
std
jp
push
mov
popf
mov
adc
dec
jmp
and
add
xchg
sbb
mov
pop
push
cmp
xor
fldenv
xor
cmc
mov
sahf
dec
jo
int
mov
sub
jl
or
and
and
stos
add
xor
sbb
cltd
aaa
push
jl
add
xlat
jae
mov
cli
out
loop
pop
lcall
jnp
adc
sbb
and
push
push
sarl
push
fbstp
idivb
test
mov
hlt
xlat
xor
lret
mov
pop
orb
ds
xchg
fs
testb
das
outsl
pop
adc
lock
xchg
ss
sub
mov
lret
ret
fadds
ja,pn
iret
pop
or
inc
push
adc
or
cmovp
test
inc
sbb
mov
jmp
loope
jg
mov
ret
xor
insl
cmp
dec
and
addl
mov
cmpsb
mov
push
fwait
lret
jb
int
sub
adc
cmp
mov
je
jg
pop
fcomi
mov
pop
cmp
jnp
pop
stc
ret
jnp
cs
dec
fdiv
repnz
arpl
add
jns
pop
mov
xor
or
inc
into
into
pop
xchg
daa
and
xor
sbb
popf
mov
aam
cmp
mov
add
orl
sbb
sub
cmpsl
mov
aam
add
jge
or
jle
jnp
sub
popa
stos
xor
ss
push
push
loope
xorb
out
loopne
lret
imulb
sbb
xor
cmp
test
insb
mov
int
pusha
push
fprem1
inc
sub
pop
nop
fdivrs
push
push
jno
movsb
xchg
int3
lods
pop
mov
insl
into
mov
das
cli
dec
jnp
lcall
lods
iret
jmp
mov
cmp
mov
mov
pop
aad
adc
mov
xchg
push
fwait
and
sbbl
mov
lock
nop
fsubs
jbe
mov
sbb
lods
je
xchg
rcrl
jno
sbb
lahf
rcll
mov
stos
lret
xchg
fxch
lds
aaa
out
adc
pop
cmp
stc
fldenv
cltd
jge
sbb
popa
js
ja
mov
std
dec
fnstcw
inc
pop
aad
ret
outsl
pushf
sub
add
pop
ficoms
daa
addr16
lods
fwait
outsl
pop
cmp
sbb
setle
dec
inc
out
xchg
out
and
or
nop
push
ret
adc
and
adc
pusha
pop
jmp
add
dec
cli
fsubl
sti
rorb
push
roll
test
call
or
ret
mov
dec
cwtl
dec
or
and
sbb
mov
ret
xchg
jnp
imulb
and
into
call
dec
pop
xlat
ja,pt
and
pop
jbe
roll
sub
or
call
aam
outsl
fwait
mov
push
mov
push
test
sub
loop
jg
mov
push
aad
dec
aas
loopne
call
call
movb
rclb
sbb
pop
add
inc
xor
adc
jno
scas
cwtl
pusha
sbb
pop
mov
cld
movsb
call
pop
xchg
cltd
pop
idivl
inc
jo
jo
addr16
add
or
push
pop
shlb
inc
rorb
repz
cld
mov
cmc
sub
cmc
dec
negl
fcmovu
imul
sbb
mov
jge
arpl
push
dec
fistps
repz
jl
mov
aam
and
fiadds
adc
cmp
ds
imul
push
dec
mov
xchg
scas
dec
adc
repz
jae
call
loop
push
xlat
cmp
inc
adc
rorb
movsl
adc
xor
push
ficomps
inc
add
rolb
and
gs
adc
or
fists
push
push
sahf
stos
lret
push
xchg
movsl
fmuls
gs
aaa
cli
cltd
scas
popf
mov
sub
pop
pop
inc
and
dec
sarb
cmpl
test
xor
jmp
sbb
sbb
lock
mov
xor
in
sub
xchg
mov
aad
ret
inc
jmp
nop
lock
sub
xor
lods
mov
inc
inc
jl
mov
and
pop
fimull
sarl
xor
mov
and
push
push
mov
sbb
mov
fwait
iret
aas
jno
xchg
mov
sahf
aaa
inc
pop
cmpsb
jb
mov
ds
cwtl
cmp
mov
shll
mov
enter
inc
mov
sub
dec
incb
sbb
jb
ret
xor
adc
add
mov
shr
push
popf
push
pop
xchg
cld
shll
add
pop
sbb
mov
sarl
pop
push
aas
cltd
inc
push
or
mov
xchg
push
sti
popf
xchg
jecxz
rolb
out
in
or
sbb
sbb
mov
pushl
int
sbb
aaa
mov
pop
sbb
jno
fsubrl
push
out
mov
popf
jl
ror
mov
sti
and
jbe
mov
or
mov
sbb
das
imul
adc
xchg
movsl
mov
pusha
test
xor
add
xchg
xchg
cmc
jnp
rorb
xor
jae
out
xlat
ss
sub
into
jbe
rcrl
jne
cmc
cmp
stc
imul
push
xchg
sub
sub
inc
outsl
jmp
int3
out
push
popf
mov
dec
jg
xchg
jge
ja
fsubl
sub
mov
cwtl
xor
out
nop
decl
cmp
pop
addl
shlb
subl
out
adc
pop
aam
push
fisubrs
outsb
pop
iret
adc
jnp
adc
outsb
adc
fcompl
and
mov
add
or
jl
in
loop
mov
or
sbb
std
jb
aad
das
xlat
jo
pop
xor
xchg
nop
int3
mov
dec
pop
or
sub
xor
mov
mov
pop
mov
sbb
push
inc
ljmp
scas
sub
aam
mov
scas
imul
dec
sbb
push
mov
pushf
xor
xchg
lock
adc
inc
mov
cld
or
loopne
mov
mov
jp
pop
push
fldt
xorl
divl
es
push
cmp
scas
push
xchg
cmp
pop
sbb
or
jne
mov
jg
push
jmp
push
enter
pop
xor
test
cmc
arpl
adc
sahf
fiadds
adc
dec
ljmp
scas
aam
scas
mov
jns
js
mov
xor
jecxz
and
fucomi
or
ljmp
xchg
dec
std
pop
push
jns
lea
xchg
les
iret
mov
mov
testl
jle
pop
cmp
aam
sub
ret
adc
lahf
insb
cmp
or
xor
pop
dec
rcrb
pop
in
ss
push
negb
mov
or
adc
loope
mov
sub
pop
mov
push
cs
mov
es
jno
fisubrl
pushf
dec
ret
add
pusha
stc
sti
into
and
mov
adc
cmp
test
xor
jp
jle
push
pavgb
cld
lcall
mov
ret
xchg
mov
fdivrs
enter
aad
negb
out
pop
pop
in
push
rcrb
adc
jnp
aam
push
push
addr16
xchg
aaa
push
dec
and
lea
imul
mov
push
lret
xor
xor
popf
mov
dec
jg
inc
pop
rcrb
pushf
mulb
lds
fbstp
push
rorb
xchg
pop
fiaddl
test
mov
jnp
sub
je
int3
andb
jg
stos
ljmp
mov
pusha
add
sbb
jge
xor
test
das
dec
adc
xchg
iret
fnstenv
jl
adc
sub
std
pop
mov
cld
mov
sti
cmp
ds
andb
inc
cmp
call
xor
movsb
jl
add
scas
sbb
xchg
andl
xor
fmulp
out
dec
push
mov
cmp
bound
cmpsl
nop
pop
jecxz
mov
iret
add
adc
fsubr
cmp
fsubl
push
xchg
jge
in
mov
dec
in
cmpsb
cli
rcll
outsl
outsl
and
ja
pop
adc
scas
jle
inc
addb
mov
sub
sbb
adc
je
popf
inc
ret
dec
jle
lahf
imul
arpl
mov
loopne
xchg
jno
sub
inc
movsl
jo
xor
sub
mov
or
jns
adc
jle
or
inc
fnstsw
or
out
stc
sub
push
enter
or
xchg
push
cmp
lret
pop
fnstenv
in
clc
sbb
mov
in
aam
cltd
ret
xchg
xor
fwait
jg
ficompl
dec
les
das
mov
hlt
fisubrs
in
inc
or
aaa
xor
fadds
add
push
test
mulb
push
adc
jbe
mov
cmp
dec
and
mov
movsl
dec
addr16
rcrl
out
sti
mov
into
out
push
pop
outsl
pusha
enter
mov
adc
cltd
xor
mov
rorb
fwait
add
inc
dec
in
inc
lcall
hlt
dec
mov
je
pop
xlat
push
sub
push
orl
mov
sub
jg
sbb
fcomi
pavgw
push
popf
pop
outsl
aaa
ss
push
push
jno
dec
sbb
ja
inc
aam
fidivl
jne
movsl
xchg
arpl
nop
mov
js
pop
push
bound
scas
int3
mov
adc
and
jg
lea
push
rcrl
sbb
inc
push
into
xor
mov
fisubrl
mov
jne
hlt
addr16
loopne
fldl
mov
mov
pop
push
clc
sub
xchg
add
lods
stos
pop
xor
mov
push
cmp
push
or
pop
push
dec
or
mov
into
add
xorb
pop
xchg
push
pusha
mov
sbb
aam
addr16
add
mov
adc
addr16
clc
sbb
mov
and
movsb
jecxz
jns
test
sub
jb
dec
xchg
xchg
inc
jb
xor
dec
outsb
mov
rcrl
dec
mov
jmp
inc
in
rcll
jp
jb
hlt
jbe
loop
cs
dec
add
inc
adc
xchg
aam
add
adc
aas
out
mov
mov
shl
or
sbbl
subl
ljmp
stos
inc
push
mov
jns
cmp
cmp
nop
popf
mov
outsl
leave
repnz
cmp
cmp
or
das
jg
mov
pop
in
jne
mov
jl
addr16
repz
dec
xlat
fisttpl
cs
cmc
or
addr16
arpl
jb
xor
dec
out
movsl
mov
sbb
cmp
ss
clc
es
lods
mov
cwtl
xor
and
mov
filds
pop
cwtl
inc
pop
arpl
xchg
jne
push
and
xchg
mov
adc
or
xchg
cli
cld
bound
jle
sti
stos
loope
cmp
xor
push
testl
mov
mov
mov
sbb
cmp
push
cld
mov
mov
xor
rcl
xchg
clc
nop
and
or
pop
insb
push
adc
stos
popf
je
fidivs
jg
insl
pop
jmp
cmpsb
cmc
ljmp
imul
sub
das
mov
ja
bound
adcb
inc
push
decl
cs
cwtl
and
test
lea
fwait
inc
bound
fisubrs
push
jae
test
cltd
outsl
jecxz
sub
sbbb
add
dec
mov
dec
bound
inc
xchg
adc
jge
or
cli
out
adc
dec
pop
insl
jbe
imul
adc
inc
sub
jnp
and
sbb
xchg
xchg
mov
negl
out
xchg
sbb
in
std
fdivs
dec
jns
pop
jae
decl
popa
push
dec
ljmp
pop
xchg
mov
pusha
xchg
aad
mov
testl
and
xchg
mov
adc
sub
arpl
mov
outsl
adc
jp
loopne
mov
es
and
or
fwait
pop
ror
test
data16
push
mov
lcall
stos
ss
lcall
xor
in
cmp
sub
test
mov
std
fs
sahf
jnp
clc
daa
add
jae
nop
mov
dec
test
push
fwait
repnz
adc
stc
cmpsl
jecxz
adc
jle
ds
xor
push
pop
cmp
sub
lea
fisubrs
data16
inc
popf
dec
dec
or
rorb
dec
insl
sub
jp
movsb
cltd
jecxz
xchg
outsl
cmp
mov
or
dec
mov
in
jns
leave
in
out
lods
jbe
nop
in
repz
sarl
mov
imul
sti
in
push
xchg
jecxz
es
dec
xchg
push
lcall
sub
push
cmp
mov
fwait
push
lea
movsb
test
xor
inc
fldenv
lods
cli
jno
les
int3
int3
fsub
adc
pushf
fadds
iret
mov
xchg
pop
dec
ret
inc
ret
shll
test
mov
int3
ficompl
divb
addr16
xor
inc
pop
mov
inc
mov
cmp
push
iret
xchg
xchg
rcrb
mov
cmc
test
dec
ss
push
test
xchg
mov
push
add
jbe
out
test
xchg
sub
and
xor
and
sbb
lods
mov
rclb
imul
shrb
cmp
ss
jp
fs
out
aaa
mov
into
inc
xor
and
mov
rcrl
or
nop
jno
outsb
cmp
mov
iret
mov
mov
enter
sbb
repnz
pop
mov
pusha
inc
inc
jecxz
mov
mov
hlt
mov
fwait
xor
mov
call
jbe
sub
es
dec
fldl
sbb
mov
stc
in
mov
movsb
negl
leave
int
aam
call
xor
add
adc
dec
loope
fidivs
cmp
jp
or
dec
rcrl
pop
mov
testb
insl
pop
mov
ret
testl
mov
loop
rolb
out
outsl
and
pop
clc
fldcw
pop
aam
out
xor
push
movsb
mov
iret
fcmovne
mov
sbb
movsb
cs
xchg
mov
insb
mov
cmp
push
and
out
cwtl
int3
lods
fistps
sub
cmp
mov
mov
sbb
and
out
cmp
les
mov
sbbl
or
in
out
ret
push
hlt
xlat
mov
add
pusha
icebp
mov
push
sub
xlat
orb
push
mov
push
and
xor
fisubrl
pop
movsb
movsl
mov
push
dec
xchg
cmp
loopne
add
ljmp
fimull
ja
gs
icebp
shll
addb
inc
xor
push
cltd
icebp
push
rorl
int
push
ss
xchg
enter
xor
mov
sbb
xchg
jns
xor
adc
and
repz
mul
movsb
adc
mov
loope,pt
adc
sbb
stc
cs
pop
add
sbb
jno
leave
and
aas
push
mov
sub
pop
xor
sbb
out
push
loope
add
icebp
int3
testb
int3
imul
and
and
fsubrp
add
pop
mov
lods
push
pushf
mov
imul
sub
cmpsl
jae
setne
popf
cmp
push
cmp
add
xlat
cmp
mov
mov
mov
mov
jae
inc
mov
push
gs
add
mov
xchg
add
cltd
cmpl
fstpl
aad
mov
xor
cs
jne
push
sbb
adc
sub
je
push
mov
xchg
and
popf
fdiv
jo
mov
stc
popa
push
in
cmp
sub
pop
loop
lahf
mov
subl
lcall
xchg
xchg
andb
jmp
scas
inc
xchg
mov
in
inc
cmp
stos
mov
imul
pop
pop
cmc
enter
and
or
ljmp
mov
popf
sub
pop
xchg
cltd
mov
rcll
clc
or
cmpsl
xor
pop
adc
adc
les
xor
loop
push
insl
push
clc
pop
int
jmp
mov
int3
mov
and
or
inc
mov
jne
jo
addr16
lock
imul
jg
and
and
bound
cmp
adc
add
xor
mov
sub
mov
jmp
fcmovne
inc
jnp
xchg
sub
repz
and
mov
fstps
outsl
pop
cmp
mov
in
cld
pop
lea
xchg
scas
sbb
add
adc
stos
cmp
lods
js
ja
jnp
shlb
push
cmc
movsb
aas
inc
or
xchg
pop
fistps
jmp
mov
fistl
jae
stc
push
xor
xchg
sbb
fldcw
inc
dec
lret
call
and
sub
aas
sub
or
cld
push
idivl
mov
push
add
mov
sub
je
popf
and
jmp
jl
or
pop
jnp
sub
test
ss
cmp
icebp
inc
xchg
stc
and
fmul
dec
mov
cmpsl
ss
adc
dec
add
shll
stos
je
daa
stos
cmpsl
inc
sub
setl
push
aaa
sbb
test
pusha
mov
lret
mov
pop
and
cs
les
jo
push
rcr
addl
repnz
jno
or
mov
add
int
and
subl
mov
ds
rcrl
scas
mov
mov
or
loope
pushf
loope
or
and
xchg
mov
enter
pop
in
pop
clc
jb
pushf
or
dec
inc
xor
js
sub
andl
pop
out
lds
dec
lods
adc
repz
xchg
jge
cmp
sbb
sbb
mov
cmpsl
cmpsl
cli
adc
andb
cs
dec
in
sub
mov
xchg
pop
into
lods
mov
or
xor
addr16
xor
cltd
lods
test
and
stc
test
int
mov
enter
cmp
and
ja
or
lea
repnz
push
mov
and
jns
imul
sub
lock
adc
sbb
iret
int3
into
not
xchg
or
outsl
and
leave
xchg
loopne
fcompl
cmp
das
sbb
xchg
dec
and
sbb
mov
outsb
adc
push
std
mov
jmp
cli
fwait
xor
jno
mov
fwait
gs
jmp
or
stc
enter
pop
scas
fwait
pop
and
aam
out
xor
or
out
lahf
adc
mov
or
add
int3
pop
sbb
fimuls
aaa
adc
pop
add
inc
lods
popa
scas
xor
mov
mov
pop
ja
repnz
jp
jbe
popf
sub
dec
cs
xchg
adc
es
lcall
mov
push
and
shl
or
cmp
mov
inc
scas
shll
jae
sbb
inc
push
lods
mull
and
xchg
mov
jb
sub
jbe
inc
push
or
cmp
aam
xor
adc
push
dec
add
dec
adc
lods
dec
jne
fdivrs
mov
add
mov
and
xchg
cli
clc
lods
xor
xchg
jle
mov
mov
emms
mov
sub
add
add
das
imul
add
mov
jnp
xor
mov
xor
push
movsb
adc
lret
and
dec
or
mov
dec
loope
xor
mov
pop
das
inc
or
push
lods
adc
jno
jbe
or
inc
orb
scas
iret
addr16
push
pop
jns
jno
jnp
push
dec
js
gs
cld
outsl
jmp
scas
jmp
xchg
xchg
cmc
inc
mov
dec
xchg
xor
and
fstp
fists
sti
roll
push
cmc
push
push
mov
mov
in
das
cmpsl
push
inc
push
jae
popf
adc
cmp
jg
ret
sbb
mov
mov
pop
sbb
mov
jbe
fimuls
pop
add
sti
pop
dec
cmp
sbb
mov
je
inc
push
adc
or
sbb
xchg
xor
push
repz
pop
lcall
mov
pusha
jge
outsl
sbb
jmp
std
pop
cmpsb
jmp
inc
lea
xor
jbe
dec
das
stc
mov
inc
pusha
fldt
cli
notb
lret
mov
push
pusha
dec
inc
cli
adcl
inc
movsl
jb
das
ret
pop
push
sub
and
mov
pop
add
inc
sti
pop
lret
push
pop
xchg
in
add
insb
pop
xchg
jmp
aas
and
mov
lods
lcall
loopne
fimuls
sub
adc
call
mov
or
mov
sbb
fdivrs
mov
pop
gs
pop
arpl
fiaddl
inc
push
call
xchg
pop
xor
cmpsl
std
cmpsb
push
push
inc
cli
sbb
loope
cmp
pusha
jo
mov
mov
popa
push
test
push
in
mov
insb
adc
nop
mov
jecxz
jae
outsb
lods
xor
ja
je
push
shlb
stos
pop
jle
push
jmp
sub
testl
test
sti
ja
adc
jo
sub
out
scas
inc
xlat
int
push
sbb
xchg
out
or
and
dec
adc
mov
lcallw
mov
mov
jns
adc
in
push
movsb
dec
lret
cltd
aaa
test
iret
or
push
adc
fsubl
sbb
or
rcll
cltd
in
inc
cmp
addr16
sub
xor
iret
cmp
pop
les
xchg
pusha
aas
pop
xorl
cmpb
nop
loop
push
lret
and
or
dec
push
pop
push
dec
jnp
sub
ror
and
cmc
mov
aad
sti
add
inc
or
enter
je
dec
test
ja
les
mov
jae
lods
daa
dec
and
mov
int3
push
cmp
inc
outsb
push
pop
sub
pop
cmp
in
cmpsl
sbb
jo
dec
and
mov
sti
fisubl
inc
sub
push
xor
movb
stos
mov
cmp
adc
dec
inc
push
or
mov
das
arpl
mov
pop
and
jne
lea
test
pop
fnstenv
push
cld
push
push
mov
adc
dec
jb
and
dec
scas
cmpsb
and
inc
lret
out
add
inc
movd
ficoms
fisubrs
push
iret
cltd
or
xor
hlt
ret
ret
and
test
nop
fcomps
pop
lods
aas
cmp
loop
enter
mov
mov
sbb
pop
and
mov
cmp
ljmp
lret
mov
or
loopne
mov
pop
into
lahf
mov
dec
adc
jp
lods
gs
pop
nop
adc
popf
sbb
jg
mov
push
and
out
xlat
cs
pop
xor
xor
or
ret
loop
fdiv
dec
lods
pop
cmpsb
add
in
in
ljmp
loope
into
ror
into
int
ret
cmp
adc
mov
out
pop
and
mov
je
sbb
mov
ja
roll
lods
call
sbbl
adc
inc
xor
mov
inc
add
mov
outsl
push
cwtl
icebp
dec
stos
leave
fldcw
or
std
adc
fdivr
fmuls
pop
or
addb
and
cmp
sahf
dec
mov
shl
sbb
and
shlb
push
enter
or
mov
notl
xor
or
cli
fwait
xchg
inc
loopne
mov
pop
sub
add
aam
loope
cli
or
mov
mov
aad
loopne
jge
xchg
mov
sbb
mov
jae
or
mov
lea
sub
dec
bound
not
mov
dec
pusha
addl
fistps
leave
pop
cmp
mov
js
add
push
loop
outsb
fstpl
test
std
stos
int3
ja
hlt
fwait
and
xor
lret
xlat
mov
sahf
cmp
xadd
ds
mov
push
into
ficomps
pop
mov
add
aad
xor
insl
stc
out
add
and
and
in
mov
testl
xor
fldt
xchg
and
stos
movsl
icebp
dec
cmp
xor
cmp
pop
fcompl
jge
push
lahf
sub
inc
and
incl
pop
inc
test
ror
adc
mov
xor
sbb
lcall
dec
mov
push
dec
mov
sbb
das
fistl
movsb
shrl
lea
add
insb
ds
jbe
shll
mov
pop
daa
outsb
inc
adc
sbb
repz
in
inc
data16
sub
in
xchg
xor
fsin
ret
fdivrl
add
ret
mov
arpl
in
pushf
cmp
cmp
insl
pop
loope
xor
mov
fadd
jp
xor
repz
pop
in
sbb
in
in
rcrl
and
sub
fadd
mov
lcall
jp
jle
in
pop
cmpsb
push
and
imul
aaa
fsubrp
sbbb
xor
lds
xchg
sarl
xor
bound
stc
inc
divl
outsb
mov
aad
add
push
mov
mov
notb
pop
mov
roll
mov
mov
out
sbb
and
add
cmp
mov
orl
mov
mov
mov
and
cltd
jge
and
mov
pop
cmpsb
imul
les
jmp
push
jb
add
adc
clc
jnp
sbb
pop
push
xchg
push
pop
aam
out
addr16
xor
sbb
mov
test
sub
pusha
imul
inc
ret
sahf
inc
dec
and
sub
pushf
ffreep
add
ret
stos
into
pushf
xchg
adc
inc
sbb
xor
in
xor
cli
sahf
mov
fxch
adc
out
adc
push
mov
insb
sbb
pop
or
cmpl
pop
test
add
and
push
test
shlb
pushf
jns
out
mov
mov
add
repnz
fsubr
aad
jmp
pushf
push
jmp
fsubrl
jae
in
jnp
std
xchg
pop
ds
dec
decb
cmp
pop
adc
fstpl
loope
mov
mov
pop
push
push
cltd
cmpsl
mov
lahf
add
inc
cmp
loopne
mov
xor
xlat
movsb
js
cmpsb
stc
movsl
call
jle
sbb
xchg
lods
cmp
dec
idivb
dec
hlt
xor
mov
andb
jne
mov
inc
je
jmp
pop
xchg
jg
ret
call
pop
adc
cmp
or
sbb
lcall
mov
stos
lds
and
je
lret
xor
fcomp
mov
int3
pop
in
rorl
cmp
mov
push
or
lea
je
icebp
mov
xchg
add
stos
and
lods
jb
xchg
cmovo
xor
jbe
das
sub
test
cmp
rol
ljmp
fisubs
addr16
lea
xlat
inc
mov
mov
out
mov
enter
sbb
mov
sahf
mov
jo
mov
inc
sub
sti
sub
fucomip
ljmp
sti
cmpsl
mov
rep
push
jno
xor
xor
jae
movsb
mov
xchg
inc
jmp
jge
lods
adc
and
mov
mov
pop
shlb
push
xchg
sub
pop
rcl
adc
sti
lods
dec
ljmp
fldl
mov
push
xor
out
jmp
mov
inc
in
test
mov
pop
mov
bound
rorl
xchg
sub
flds
or
push
add
hlt
cltd
cmp
inc
stos
jmp
mov
push
ja
ja
jge
rclb
sbb
outsb
push
andb
fidivrl
pop
add
fsubs
push
stos
inc
icebp
rclb
xchg
jns
lret
dec
loopne
enter
rcrb
in
mov
out
mov
mov
push
jae
mov
pop
dec
dec
pop
xchg
popf
gs
ret
or
imulb
es
out
lret
daa
fwait
and
pop
push
sahf
clc
jmp
fs
or
mov
push
pop
lods
mov
movsl
cmpsb
orb
cmpsb
cli
movsl
aad
inc
out
in
pop
outsl
push
fldl
stos
xor
adc
xor
fidivrs
mov
adc
movsb
cmp
xor
es
lret
sahf
les
shll
add
es
mov
jl
popf
je
divl
add
pushl
cmpsb
fistpll
out
jo
push
adc
mov
or
popf
lcall
adc
icebp
cmp
add
push
jae
cmp
daa
bound
sbb
dec
cmp
xchg
aaa
push
jae
dec
sub
jmp
adc
dec
inc
sub
xor
adc
mov
push
jbe
test
xchg
popf
push
pop
inc
sbb
sbb
ficomps
push
inc
xor
sub
xchg
mov
cld
inc
push
arpl
jnp
jnp
jb
sub
cmp
push
aas
sub
sub
les
and
pop
dec
and
cmc
push
xchg
cmp
or
pop
lock
cli
lea
adc
mulb
pop
pop
stos
inc
jmp
or
icebp
xor
adc
add
sbb
jmp
inc
jge
mov
daa
add
fsubs
je
or
in
test
xor
jle
iret
div
mov
pusha
lcall
test
insb
mov
leave
push
addr16
mov
adc
jmp
sub
filds
xor
in
add
repnz
les
add
xor
jo
popa
cmp
push
lock
or
inc
dec
nop
imul
adc
das
repnz
jl
push
fmuls
insb
inc
or
xchg
push
sbb
ret
pop
scas
loopne
lds
add
orb
scas
fidivrl
leave
jle
scas
pop
shrb
or
and
mov
or
mov
jnp
mov
mov
ss
xchg
rcr
sahf
mov
dec
pop
mov
inc
adc
int
add
push
cmp
inc
testb
andb
mov
pop
sbb
push
scas
data16
sti
out
fiaddl
dec
bound
enter
lods
push
movb
fs
adc
lock
pushf
and
mov
imul
iret
push
idivl
ret
push
xchg
xchg
inc
int3
shll
and
cmc
dec
ss
and
cmpl
es
mov
sub
push
sahf
mov
in
adc
repnz
mov
xor
in
pop
leave
enter
pop
pop
dec
notl
cmp
shr
cmp
das
or
dec
mov
mov
xor
dec
daa
enter
xor
aam
addr16
les
flds
bound
xchg
adc
test
test
or
ret
mov
push
inc
ret
testb
andl
push
arpl
pop
mov
adc
add
roll
adc
in
sub
enter
pop
fildll
lock
fimuls
mov
inc
xor
and
call
adc
cli
add
add
popf
inc
jle
ljmp
jb
in
insl
nop
mov
ret
cli
mov
dec
repnz
add
aad
lds
jg
test
mov
leave
je
xor
movsl
mov
dec
and
jge
jae
or
mov
push
shrl
test
xchg
push
gs
rcll
aad
outsl
cmp
std
ja
addr16
xchg
adc
lret
cld
clc
cmp
mov
adc
aas
inc
push
adc
pop
dec
push
rorl
iret
xor
adc
add
hlt
inc
adc
mov
movsb
jmp
cwtl
adc
sub
push
pop
mov
test
out
xor
pop
movsb
into
gs
adc
cmp
mov
rclb
lahf
xor
movsb
out
mov
test
popf
add
in
vmovlps
lret
pop
enter
cmp
push
arpl
test
inc
and
sbb
sub
movsb
dec
lcall
in
pop
lahf
jne
push
or
outsb
jmp
repz
cltd
push
subb
dec
xlat
pop
int
and
sbb
jno,pn
out
xor
jmp
dec
call
adc
fwait
sub
push
dec
xchg
inc
or
movsb
sbb
mov
stc
cmp
lret
mov
negb
jbe
repnz
pushf
inc
and
cmc
pop
daa
mov
pop
imul
mov
leave
rorb
jo
pop
jmp
rorl
ja
cmp
push
mov
mov
lock
std
cmp
mov
fstps
inc
mov
mov
xchg
dec
mov
fadd
jp
in
push
push
neg
add
cmp
xchg
inc
xchg
mov
jae
xchg
or
ds
sbb
jge
movsl
mul
push
pmaxub
pop
loop
and
insl
jle
aaa
xchg
sbb
sahf
push
or
dec
stos
ror
lret
push
mov
push
cs
idivl
mov
or
cmp
dec
or
arpl
test
pop
mov
into
pop
pop
into
inc
and
roll
ss
mov
fisttps
jmp
xlat
call
pop
icebp
or
dec
aas
loope
lds
ret
int
popa
rolb
int
sbb
adc
dec
inc
jb
mov
test
mov
iret
out
sub
jno
adc
mov
lret
pushf
imul
pop
mov
cwtl
minps
sbb
leave
daa
cli
nop
sbb
shlb
roll
jns
je
shlb
mov
mov
pop
loop
pop
inc
or
xor
jns
stc
cltd
xadd
dec
mov
fisubrl
sub
int3
pop
add
and
jle
mov
into
cmp
movsb
orl
lods
cmp
mov
push
cmp
mov
cmp
jne
movsl
xor
mov
stos
jmp
mov
xchg
rorl
sar
jge
add
filds
mov
mov
aad
loop
rorl
xchg
rcrl
in
mov
out
sub
in
rolb
jge
cmp
adc
jbe
jle
mov
clc
mov
cmp
int3
jbe
cmp
popl
xor
mov
jno
xchg
mov
mov
lods
jp
lret
cmpsl
mov
pop
jne
xchg
jo
xchg
loopne
cmpsb
fdivr
inc
inc
mov
das
xchg
dec
pop
incb
lcall
lds
cmp
in
pushf
ret
movsl
xchg
ficomps
push
xor
repnz
mov
inc
test
xchg
mov
mov
addr16
out
nop
cmpl
dec
add
jmp
int
add
xor
jle
adc
fidivrl
lret
xor
stos
insl
out
fisubrs
or
inc
cmc
fdivl
sahf
dec
or
frstor
aas
or
xchg
ret
insl
add
outsb
sub
inc
xlat
mov
inc
hlt
mov
xor
jge
and
bound
lret
iret
dec
pop
mov
add
popf
test
fnsave
cmp
jno
nop
cmpsl
mov
dec
dec
stos
mov
out
test
cli
out
xchg
out
fdivrl
mov
sub
rclb
xchg
lahf
out
jae
or
mov
xor
push
or
or
inc
insl
cmc
push
test
lcall
pop
sbb
aad
inc
lock
adc
mov
int
mov
imul
idivl
add
addr16
lea
mov
jg
cmc
sub
dec
arpl
movsl
xlat
mov
jecxz
cmpsb
fsubrs
stos
adc
loope
cmpsl
mov
loop
mov
ret
jmp
call
dec
test
stos
inc
dec
xor
loope
std
cmp
xchg
pop
outsl
xchg
into
sub
fimuls
adc
cld
pop
test
enter
call
sub
or
hlt
repz
adc
pop
add
fmul
movsl
or
sub
dec
aad
aam
aad
stos
or
fadd
rcrl
pop
test
stos
adc
mov
dec
pop
mov
data16
or
add
cli
insl
xacquire
shll
add
pop
mov
je
out
push
aam
cltd
sub
clc
and
sbb
std
and
adc
daa
dec
movsl
push
scas
sar
dec
push
clc
dec
hlt
int
cmp
inc
sub
ljmp
jmp
xor
jbe
xchg
fstpt
loop
repz
dec
xor
sbb
cmpsb
ret
jmp
add
fisubrl
xchg
in
addr16
into
aaa
out
jno
fsubrp
insb
xor
outsl
sahf
lods
les
ljmp
ret
adc
sub
mov
cli
xchg
repz
xor
mov
dec
adc
ficoms
jp
pop
pop
xlat
movsl
and
fsubrl
adc
pop
xor
scas
cmp
xchg
push
xchg
nop
or
dec
mov
mov
mov
outsl
xchg
outsb
dec
sub
xchg
xor
cmp
ss
xchg
mov
dec
pop
jno
xchg
hlt
push
pop
jnp
or
into
paddusw
test
cs
cmc
mov
aaa
mov
xchg
mov
mov
pop
xor
and
xor
std
hlt
nop
fcmovnbe
in
fimull
sub
dec
pop
push
mov
fwait
mov
pop
push
or
cld
incb
in
pop
dec
xchg
pusha
pushf
and
dec
fs
scas
mov
jecxz
dec
lds
icebp
push
mov
and
and
push
imul
les
jo
adc
das
jo
loop
xor
mov
test
add
cmc
cmpl
mov
cmpsl
xchg
fimuls
cmp
pop
mov
mov
in
adc
movsl
or
jb
sbb
sub
leave
mov
jge
sub
dec
sahf
out
int3
movb
in
sbb
mov
rorl
mov
mov
lcall
inc
cmc
repnz
rclb
add
jl
ror
psubb
adc
cmpsb
clc
in
cli
clc
and
add
mov
mov
lea
inc
jne
call
shrb
push
out
fs
sbb
lods
aaa
xchg
dec
popf
adc
cwtl
popf
out
inc
sbb
add
leave
fadds
ret
mov
xchg
das
jge
adc
and
repz
xor
in
cmpb
cltd
lods
loopne
paddusw
inc
pop
stos
or
fmul
ja
data16
sbb
divl
nop
fisttpl
pop
fsubs
loopne
mov
hlt
in
fsubp
mov
fwait
cld
mov
js
pop
mov
inc
jge
loopne
js
xchg
jle
ret
mov
pushf
and
jnp
jg
in
clc
push
jmp
orl
test
mov
xchg
xchg
in
lret
fdiv
adc
adc
jge
or
sub
int3
push
enter
stos
popa
jle
mov
pushf
mov
mov
or
and
test
sbb
inc
daa
enter
push
xlat
dec
mov
pop
xchg
ffree
or
leave
stc
shl
cmpsb
movsl
add
imul
push
cli
jno
pop
repz
cmp
ret
sbb
and
adc
xchg
imul
mov
push
sbbl
stc
xorb
hlt
sbb
cli
xchg
jg
mov
arpl
pop
jnp
scas
mov
fistpll
sbbb
int
sub
xchg
pop
pop
aam
inc
lcall
pandn
test
cltd
out
xor
xchg
jnp
sbb
jne
mov
into
add
movsb
lods
lods
sub
and
lea
imul
andb
dec
pop
es
mov
std
sahf
cmpsl
test
ficomps
jne
mov
enter
xor
mov
imul
cli
outsb
iret
push
pop
jecxz
xlat
xchg
fidivs
or
pop
mov
or
ret
and
ret
mov
xchg
jbe
and
lds
mov
sbb
in
or
mov
pop
shll
nop
jmp
adc
pop
or
insl
push
push
adc
inc
and
fcmovnb
mov
sbb
jno
sub
das
and
js
cmp
mov
jmp
mov
cmpsl
inc
mov
loop
clc
shrb
mov
call
xchg
rclb
add
mov
push
push
mov
sbb
inc
lods
cmp
pop
dec
mov
mov
fwait
leave
mov
mov
rorb
call
push
imul
mov
dec
pop
jge
shrl
jl
lea
aaa
leave
cmp
mov
pushf
shll
ja
outsb
mov
add
mov
fs
gs
call
mov
mov
xchg
sub
or
xor
cmc
dec
sub
outsb
jns
repz
call
push
and
outsb
jmp
xchg
pop
pop
cltd
call
pushf
aas
lret
xchg
lcall
test
mov
dec
jns
and
jle
cmp
sbb
xchg
ret
add
cmp
and
out
adc
sahf
adc
ss
mov
scas
mov
xor
lret
jb
inc
sub
xchg
jecxz
mov
dec
jp
iret
sub
repnz
dec
nop
inc
rclb
pop
push
out
fsubp
sub
test
add
sarb
dec
test
jno
add
insl
daa
call
xchg
lock
and
jns
push
cmpsb
mov
test
movsl
movsl
dec
jno
pusha
inc
cmp
add
jl
push
cltd
add
cs
adc
rcr
push
adc
fstpl
jnp
xor
sbb
push
push
push
ds
hlt
dec
mov
add
cmp
shlb
data16
icebp
lods
fwait
cld
ja
imul
fwait
add
jmp
clc
or
sub
cs
sub
mov
cmp
popf
lcall
lds
mov
movsl
daa
jmp
daa
test
lret
sarb
loope
insl
arpl
mov
movsb
pop
mov
add
popa
iret
addr16
or
add
push
sub
or
shlb
mov
add
aad
ja
pop
movsl
inc
lods
push
out
lds
stos
arpl
adc
mov
stc
jbe
jg
pop
mov
mov
push
mov
loopne
ficoml
in
push
jne
dec
mov
lahf
loopne
xor
sub
fimull
pop
jo
pop
mov
cs
jns
ficoms
stc
lods
cwtl
popa
fnstcw
pushf
loop
add
adc
push
icebp
xchg
mov
repnz
mov
mov
push
ljmp
insb
ljmp
clc
in
jns
sahf
stc
nop
rorb
aam
rol
jecxz
ret
mov
mov
pusha
shlb
jo
fsubrp
mov
fimuls
in
pushl
mov
adc
sbb
mov
jg
pop
pusha
mov
xor
sbb
sub
adc
scas
aas
loop
dec
sahf
pop
ret
in
mov
adc
dec
dec
mov
fadds
cmp
lds
movsl
mov
pop
pushf
xor
and
cld
sbb
lock
stos
dec
cmp
jmp
out
test
loopne
cmpps
sbb
fwait
mov
call
sahf
cmp
sub
push
popa
leave
sar
jg
nop
xchg
xor
int3
popa
fwait
or
dec
rcrb
imull
mov
mov
iret
shl
push
mov
ror
idivb
idivl
insb
mov
xor
jb
imul
sub
stc
cmp
and
stc
inc
or
imul
ret
loope
sbb
clc
and
test
repnz
test
dec
inc
shll
loop
cmp
push
insb
pop
out
cmp
repz
cld
nop
call
das
scas
aam
daa
adc
or
divl
shrb
aam
mov
push
inc
ja
xchg
nop
fucom
cs
and
loope
xchg
out
mov
stos
scas
or
or
aas
mov
cltd
pop
aam
out
ret
xchg
in
loop
pop
mov
ja
sbb
ficomps
aas
mov
loope
pop
mov
ret
jp
pop
insb
jecxz
pop
xor
pop
sub
or
popf
jae
mov
vmread
pushl
roll
inc
loopne
into
scas
in
mov
inc
arpl
mov
daa
inc
pop
and
add
lahf
pop
cmp
inc
dec
inc
popf
loope
imul
repnz
sti
arpl
in
adcb
jp
pop
addr16
lcall
mov
or
out
dec
clc
inc
mov
insl
mov
testl
outsb
adc
movsb
gs
dec
add
dec
shl
xchg
inc
mov
ljmp
add
repnz
rol
push
dec
scas
frstor
or
in
dec
sub
data16
or
or
or
mov
push
pop
push
jns
inc
mov
sub
test
inc
subl
scas
sub
aaa
fldenv
retw
lret
repnz
push
ret
movsb
fistpl
xchg
cmp
cmp
xchg
aaa
aaa
clc
mov
adc
sbb
std
icebp
rcrl
push
mov
mov
scas
mov
or
je
xlat
ljmp
sbb
mov
sub
jl
sahf
dec
cwtl
inc
enter
popa
push
mov
push
jge
movsb
daa
or
cmc
icebp
and
xchg
dec
add
ljmp
xor
mov
cltd
cs
add
or
iretw
ja
cld
cltd
lahf
xchg
sub
rorb
jecxz
adc
jne
icebp
lcall
add
push
jo
mov
lods
jle
xchg
cmpsl
add
cli
mov
fstl
testb
movsl
ds
and
mov
jmp
lret
lcall
cmpsb
repnz
pop
cmp
outsb
mov
cmp
pop
jae
je
pop
scas
or
cmc
push
aad
data16
or
fs
mov
jo
or
jns
xorb
sarl
push
das
xchg
push
xor
push
adc
cmc
mov
jmp
push
jne
inc
leave
sub
pop
imul
or
jg
pop
scas
rol
frstor
mov
xor
arpl
aam
or
addr16
icebp
iret
push
mov
lret
dec
js
and
add
orl
lds
mov
inc
repz
adc
lcall
in
xchg
mov
in
pop
push
paddb
push
jmp
mov
fistpll
add
inc
jae
mov
lods
fdivp
pushf
stc
cmp
lret
dec
ds
and
popf
xorl
mov
add
or
sti
pcmpeqb
or
and
jge
in
lahf
fs
frstor
or
inc
mov
gs
mov
sbb
pop
sub
subb
stc
add
clc
add
lcall
out
out
pop
xchg
in
mov
cwtl
mov
filds
pop
jnp
dec
xchg
and
fdivr
fcoml
lds
fwait
sarl
fbstp
adc
push
ficoml
in
loop
mov
fisubs
sti
dec
push
mov
inc
insb
scas
notl
pop
xchg
mov
sbb
inc
sbbb
cmp
test
cmpsl
je
xor
fcompl
push
dec
push
xchg
mov
pusha
lea
xor
movsl
insl
fwait
call
push
lret
rcl
dec
jns
repz
cmc
push
pop
adc
or
jb
in
sub
mov
ljmp
adc
sbb
out
sarl
lret
lea
call
jg
and
push
sub
xchg
xchg
in
cs
test
loop
rorl
mov
mov
xchg
arpl
jb
fsubrp
push
into
pusha
jo
std
inc
mov
sub
mov
adc
scas
int3
jo
mov
aad
mov
ja
test
inc
aam
fildl
inc
inc
add
out
or
aas
push
pop
dec
out
int
lret
jbe
mov
xchg
xchg
and
and
add
rcll
or
jno
mov
enter
mov
push
test
mov
adc
loop
enter
fcomi
dec
mov
leave
negl
pop
cmp
sarb
fwait
adc
cld
xorb
xor
popf
addb
jmp
cmp
push
mov
jle
inc
jle
popf
or
add
outsl
jno
mov
call
inc
cmpsl
xchg
and
mov
and
cltd
lea
pop
sbb
inc
fld
mov
jnp
mov
pushl
out
xor
enter
xchg
mov
iret
das
mov
mov
and
push
mov
or
sbb
and
mov
sub
lret
xor
call
jmp
gs
cmpsb
aaa
mov
jle
pop
or
outsb
sbb
adc
cwtl
mov
jecxz
leave
jp
mov
xor
int
xor
iret
lds
or
mov
movsl
pop
mov
ds
std
xchg
jns
test
xor
mov
aaa
aad
add
mov
nop
cmp
or
adc
xchg
and
sub
cmp
pop
sbb
dec
ss
add
xor
addr16
int3
push
xor
or
sbb
cmp
out
pop
aad
mov
push
sbb
push
roll
lods
or
shll
pop
out
and
sub
jmp
sub
stos
xor
stos
scas
sbb
cmp
xchg
pushf
mov
jg
subl
ret
mov
scas
movsb
mov
pop
in
popf
cmc
or
cmp
xchg
int3
stos
mov
ficoms
repz
vcvtps2dq
les
les
in
and
dec
mov
jb
sub
or
adc
sbb
enter
pop
xchg
xor
shlb
addb
cli
aad
mov
mov
add
fstpl
xor
lock
rorb
popa
or
roll
sti
or
dec
fbld
aad
repnz
bound
iret
lahf
xor
add
jp
jae
jmp
mov
icebp
pop
fwait
mov
dec
push
add
inc
and
test
int3
lret
inc
out
fidivrs
movsl
add
push
sub
pushf
test
pop
in
mov
rcrb
std
scas
xchg
fs
sahf
pop
and
pop
cmp
rcr
and
sub
add
jb
xchg
rolb
movsl
aas
fistpl
adc
lahf
ret
add
push
xorl
pop
mov
movsb
loop
jl
pop
scas
xadd
inc
xchg
inc
fcoml
rorl
movsl
mov
inc
cli
ss
push
loope
mov
and
xor
or
lods
mov
ss
xchg
mov
mov
enter
xlat
cwtl
jns
lret
out
sahf
aam
inc
sub
push
xchg
call
lods
push
xchg
or
or
cltd
pop
xor
in
or
jmp
test
in
mov
fsubr
mov
mov
divb
in
mov
adc
adc
mov
lea
cmp
jne
jmp
imul
outsb
sahf
pop
mov
sti
mov
sti
addr16
popa
xor
push
inc
mov
xchg
popf
pop
push
sbb
dec
stos
insb
or
pop
cs
inc
pop
cltd
pop
push
movsb
test
xlat
movsb
and
mov
outsl
jmp
pop
mov
jbe
iret
idivb
dec
sub
adc
push
sub
add
repz
sbb
outsl
or
movsl
lods
pop
mov
xchg
inc
insb
jb
xorb
jne
xor
mov
lods
fwait
jnp
dec
imul
and
jo
and
or
dec
adc
pop
add
pushf
repz
dec
cmpsl
cld
enter
sbb
stos
dec
sti
adc
push
add
pop
aaa
add
xor
ss
cltd
lahf
xrstor
pop
mov
shl
mov
rcll
and
fdivl
adc
roll
push
push
adcb
ljmp
dec
mov
es
sets
jmp
je
ret
outsl
mov
jae
notl
fdivs
jb
addr16
jg
scas
push
popf
sub
loope
jmp
out
int
ja
leave
pop
mov
loopne
adc
icebp
push
mov
adcl
push
jg
mov
les
cmpsl
cmp
shlb
dec
rcl
ret
ds
enter
inc
jne
mov
sub
dec
and
cmpsb
and
cltd
xorl
loopne
lods
fistpl
mov
sbb
add
stos
jo
sub
and
addl
mov
push
add
cltd
mov
shll
je
push
inc
add
pop
inc
mov
jmp
stos
addl
push
sbb
pop
xchg
jmp
push
add
dec
call
adc
mov
lret
aaa
jae
jne
jno
push
mov
mov
mov
mov
jae
mov
icebp
add
sub
push
das
fcoms
push
xchg
les
mov
mov
mov
in
ds
jl
icebp
ljmp
or
mov
lret
add
aad
js
fdivl
test
out
mov
add
mov
sub
fstl
fnstcw
and
push
dec
mov
mov
pop
push
and
cmpl
sbb
gs
call
movsl
push
push
xchg
aas
popf
adc
fisubs
incl
and
cmpsl
nop
xchg
adc
cltd
mov
movsl
std
jp
je
outsb
sbb
xchg
xlat
adc
jne
cs
cwtl
into
and
stos
lds
jo
sub
sti
cmove
mov
hlt
mov
fsubr
push
testb
jmp
push
push
mov
inc
arpl
dec
sbb
scas
add
add
fsts
mov
arpl
adc
lea
xor
lds
lock
mov
mov
mov
sbb
out
sbb
test
int
aam
test
pusha
decb
nop
cmp
mov
jae
inc
mov
int3
leave
pop
and
fcmovnb
and
cmp
jae
sahf
aad
cltd
mov
or
shl
mov
out
mov
aam
push
es
addb
movsl
or
sbb
or
mov
sub
cmp
mov
aas
fcompl
lahf
ljmp
pop
pop
push
or
stc
adc
adc
rolb
xor
pop
xor
arpl
fs
nop
ljmp
fidivs
js
sti
push
shrl
push
mov
pusha
mov
adcb
cltd
fdiv
mov
xor
xchg
int
adc
call
shlb
test
cmpsl
pop
or
mov
inc
mov
add
decl
cmp
lea
cmpsl
push
cwtl
dec
jge
sub
dec
inc
xor
test
loope
push
dec
movsb
aas
mov
std
in
mov
lea
cmpl
sub
xchg
addr16
sub
cltd
mov
fnstenv
cmpsb
mov
pop
movsb
mov
ds
rol
fs
inc
insb
xor
out
lds
or
pushw
lods
in
les
ds
jnp
sub
cmp
call
jb
inc
push
push
scas
add
scas
sti
fs
shlb
test
sarb
lcall
mov
dec
or
jecxz
lahf
fs
sbb
lea
push
push
movsb
cmp
loope
lods
or
pandn
mov
aad
mov
es
add
lds
idivl
repz
gs
sub
cmp
xchg
inc
mov
add
mov
call
out
fistpll
mov
sub
xor
and
cmpsl
push
inc
incl
mov
movb
fidivl
xlat
mov
popf
and
shlb
out
dec
push
push
pop
lods
inc
cmpsb
out
and
or
das
adc
and
adc
push
sti
outsl
das
aaa
es
loope
mov
sbb
fidivl
cmp
pop
dec
dec
xor
xorl
es
sbb
or
adc
lods
imul
xor
fnstcw
out
out
scas
xor
mov
lock
push
adc
in
or
aas
push
fisttpll
loope
dec
out
cmp
fldcw
xor
insl
dec
dec
mov
daa
sbb
ja
add
cmpsb
lock
mov
mov
sti
test
add
push
inc
loopne
xor
sbb
mov
sbb
push
adc
into
inc
pop
mov
adc
xchg
mov
push
jp
cmp
cli
jne
fbstp
dec
lods
frstor
cmp
mov
mov
inc
xor
jo
and
dec
or
jp
mov
sbb
lahf
pop
add
shll
test
cmp
dec
popa
add
movsl
mov
inc
mov
lods
jg
addr16
jbe
shll
jp
mov
in
push
push
call
popf
sbb
adc
ljmp
jl
mov
stos
xlat
mov
xor
xor
jg
and
inc
and
xor
loop
shrb
sbb
dec
or
push
sub
repz
in
mov
inc
dec
out
adc
dec
das
jbe
and
lds
xchg
das
adcb
mov
jbe
push
pop
cltd
sbb
fists
imul
jge
mov
adc
pop
ja
addr16
sbb
clc
mov
in
std
push
mulw
dec
enter
push
out
sbb
mov
fidivrs
cmpsl
dec
mov
adc
out
int
mov
loop
cwtl
cmpsl
mov
inc
jbe
push
xchg
adc
mov
pop
cmpsl
das
adcb
subl
sub
sbb
shrb
mov
push
sti
bound
jmp
push
mov
stos
pcmpeqd
lods
push
jmp
pop
pop
ds
sbb
test
dec
cmpl
jbe
xchg
jae
jl
mov
sbb
inc
shlb
add
ret
mov
fstpt
shrb
xor
loop
jb
mov
outsb
adcl
pop
pop
scas
fnstcw
movsb
or
add
xchg
clc
sbb
and
jp
or
repz
mov
mov
sbb
add
xchg
rorb
int3
or
jge
mov
sub
push
jg
inc
mov
and
mov
das
add
cmc
mov
sti
jne
test
inc
xchg
push
inc
push
out
adc
pop
xchg
out
data16
jne
in
int
adc
pushf
adc
inc
repnz
ljmp
pop
dec
push
cli
inc
jle
and
and
xchg
push
add
out
add
arpl
sub
pop
push
mov
pop
pusha
mov
clc
hlt
daa
pop
popl
jb
jae
jns
lcall
fwait
xchg
push
push
sub
xchg
aam
imul
out
mov
cmpsw
jb
or
xchg
mov
insb
hlt
bound
xor
dec
xchg
cltd
pop
jne
movsl
push
mov
dec
cmp
mov
and
mov
dec
push
cmp
adc
mov
scas
or
cmp
cmpb
mov
outsb
or
or
xlat
enterw
lock
sub
test
std
loope
adcb
sbb
push
out
adc
jo
gs
lods
push
pop
xor
cmp
popf
adc
imul
into
mov
jmp
sti
adcb
cltd
ss
aam
jb
pop
faddl
in
pop
stos
and
outsb
cltd
aad
push
insl
imul
scas
jle
mov
stos
lret
cli
push
rcrb
pop
cmp
fldpi
enter
inc
mov
dec
xchg
js
or
mov
mov
adc
add
push
xchg
test
or
push
in
addb
pusha
xchg
mov
scas
xor
dec
push
lds
mov
xor
stc
fsubr
stos
sbb
subb
leave
fldl
xor
jmp
mov
xor
or
add
data16
mov
cli
jl
mov
push
out
outsl
jne
push
cmp
cmp
aam
mov
inc
push
and
iret
mov
loopne
lcall
xchg
sub
cwtl
out
cmp
jmp
stc
mov
imul
ficompl
add
lods
rcrl
cmpsb
mov
repz
cmp
and
add
mov
insb
push
mov
xchg
mov
mov
loope
adc
into
addr16
mov
dec
addr16
adc
or
and
cmp
push
iret
ret
jnp
mov
jp
sahf
std
shrl
mov
hlt
lea
or
pop
jp
xchg
or
jno
aad
cmp
xchg
les
popl
pop
ret
gs
cmp
sbb
cmpsb
call
adc
std
mov
insb
push
sbb
idiv
mov
mov
outsl
jmp
int
mov
les
dec
jb
dec
pusha
push
repz
cmp
mov
mov
inc
inc
sbb
jp
cld
pop
push
mov
in
jnp
test
dec
push
xchg
mov
cmpsb
push
andl
je
aad
dec
mov
sbb
pop
cld
xlat
out
lea
xchg
outsb
push
adc
rorl
dec
sub
lret
test
dec
pop
mov
sahf
inc
rcrl
mov
enter
loop
jno
and
jmp
jns
xor
insl
xchg
or
pop
dec
inc
iret
leave
test
push
push
pop
and
jle
fnstsw
sbb
add
sub
and
or
or
xor
fidivrs
mov
cwtl
bound
addr16
jae
cltd
lahf
daa
sbb
stos
fcoms
inc
hlt
mov
testl
push
data16
dec
push
arpl
std
cmpsb
fnstenv
inc
imul
mov
addr16
ret
clc
jae
jp
popf
dec
cmpsb
and
mov
pop
fwait
cmp
lcall
mov
or
pop
or
jp
in
les
inc
lods
pop
test
pop
cli
loop
and
das
adc
enter
int
movsb
sub
mov
aas
xchg
push
andl
cmp
and
fimull
outsl
daa
cli
sbb
jmp
in
inc
inc
in
fs
data16
call
bound
pop
jle
gs
test
repnz
fwait
xchg
adc
aas
jnp
cs
loopne
pop
stos
imul
fucom
iret
sti
xor
pop
mov
mov
andb
sti
es
and
or
cmp
dec
fst
pushf
mov
or
out
pshufw
add
je
pusha
rorl
dec
fstpl
ds
popf
xchg
cli
hlt
es
sub
outsl
fsubs
lcall
and
adc
mov
insb
inc
mov
rcll
adc
dec
push
dec
shl
test
in
dec
add
decl
xchg
xchg
lret
fwait
in
mov
xor
pop
shlb
outsl
jne
xchg
mov
pop
xchg
dec
mov
xchg
pop
inc
cwtl
push
push
popf
adc
cmp
jmp
push
mov
pushf
inc
sbb
repnz
in
icebp
xor
jne
mov
pop
lock
pop
out
ss
cmp
push
adc
scas
cli
imul
cmpsb
xchg
push
nop
pop
pop
and
scas
mov
adc
sbb
dec
mov
roll
adc
pop
sbb
jno
inc
jp
sub
shlb
mov
adc
mov
addr16
pop
iret
inc
lahf
add
cmpl
mov
push
fadds
orl
pop
jo
decb
enter
gs
jge
cmp
addr16
addr16
cmp
jg
int
aaa
insl
lds
jbe,pn
test
xchg
fstpt
lock
cmp
js
fsubl
jle
hlt
sbb
or
cmc
cld
pop
inc
lcall
inc
push
jne
jecxz
jp
xor
iret
sub
aad
in
xor
out
je
out
scas
and
out
sub
add
push
stos
cli
faddp
hlt
xor
cmpsb
push
inc
jbe
dec
es
push
adc
lret
addl
ret
neg
mov
dec
mov
jl
roll
add
inc
inc
das
sbb
and
mov
in
aaa
cwtl
cltd
and
imul
adc
sarb
idivb
sbb
sub
xchg
mov
lods
or
out
sub
daa
add
mov
movsl
stos
jnp
or
aaa
sbb
test
gs
in
dec
push
cmc
push
lods
fsubs
pop
popf
mov
push
rcr
lret
sahf
inc
call
dec
movl
adc
arpl
bnd
xor
fxam
repnz
push
jge
cmp
leave
in
and
mov
in
cmp
fs
xchg
test
mov
jne
fstl
jno
push
pop
mov
cmp
int3
mov
gs
mov
ja
popf
pop
stos
xchg
shr
inc
icebp
aaa
cmp
xchg
sub
xchg
dec
fdivrl
pop
es
dec
xchg
mov
cwtl
mulb
int
sub
popf
rcrl
sbb
addr16
scas
mov
add
push
push
sub
mov
cmpsb
mov
addr16
sub
pop
nop
ret
popf
inc
gs
xor
pusha
scas
test
repz
mov
cmp
mov
sub
out
mov
test
sbb
jle
int
aas
fmull
fnsave
jbe
cmp
mov
cmpsb
pop
pop
jp
xchg
jmp
cmp
xchg
lods
pusha
mov
cmp
push
mov
and
insb
or
sub
adc
jb
jg
add
mov
hlt
cli
adcl
or
enter
ss
jmp
xor
mov
dec
arpl
sti
je
inc
mov
leave
es
repz
xor
mov
or
repz
inc
scas
ds
xor
inc
push
cmp
loopne
out
iret
mov
shld
test
stos
xchg
add
iret
rclb
adc
push
flds
loopne
dec
inc
ljmp
push
in
lock
and
rcl
add
mov
leave
xor
or
arpl
jmp
rclb
or
mov
lret
mov
adc
out
roll
inc
or
sbb
ret
dec
or
inc
dec
inc
xchg
xchg
adc
adcb
lock
cld
add
ret
xor
out
icebp
call
push
shrb
mov
dec
push
push
popf
fdivrl
xor
scas
dec
lret
jle
out
dec
dec
cltd
fbstp
orl
sbb
mov
in
sub
xchg
xchg
adc
aas
xlat
imul
sub
sbb
jp
inc
cs
sbb
out
popf
inc
xor
aad
xchg
sub
lods
inc
movsl
aad
xor
xchg
fs
xor
jmp
js
push
dec
ds
mov
test
pop
in
outsb
int
push
in
shlb
repz
iret
lods
inc
mov
push
jle
int3
cli
xchg
mov
mov
dec
dec
mov
stos
repz
adc
xchg
pop
lds
test
cmc
lods
lahf
xchg
nop
jl
push
push
aas
xor
sub
and
pushf
jl
mov
xor
push
pop
jle
inc
adc
in
mov
and
test
sub
sbb
add
mov
inc
add
ret
jne
fldt
add
lret
stc
sub
fbstp
fdiv
mov
jge
sbb
jp
adc
push
shr
sbb
dec
lret
pop
call
jae
test
push
sbb
inc
push
fldl
sbb
inc
mov
add
sub
sbb
insb
sub
dec
rcl
jmp
add
xor
push
cmpb
stc
cmp
jle
mov
cmp
aam
pop
sbb
fwait
sbb
sub
jae
push
xchg
lret
fsubrl
inc
xchg
dec
sub
and
fs
sbb
loop
or
pop
add
hlt
adc
pop
stos
es
sbb
mov
int
xchg
mov
lds
push
xchg
sarb
loope
xor
lahf
mov
aaa
jg
into
push
xor
ljmp
aas
filds
jl
in
ret
push
xlat
push
leave
mov
data16
adc
pop
sbb
jmp
sahf
pop
dec
add
loopne
inc
fwait
cmp
daa
flds
in
mov
arpl
adc
push
inc
rorl
aaa
nop
xchg
fs
fcmovnb
jl
mov
sbb
add
cmp
ljmp
dec
dec
std
vpsubusb
ret
adc
adc
pop
mov
sbb
out
fstl
add
icebp
xchg
sub
int3
dec
xor
push
jnp
mov
or
mov
pop
je
pop
xor
mov
lahf
std
fildll
pop
cmp
lock
and
stc
pop
lds
in
bound
iret
inc
push
int3
movsl
adc
or
push
rol
fdivrp
stos
xor
sub
aaa
rorb
xchg
iret
andb
pusha
pop
nop
and
push
lret
test
push
xchg
fmull
mov
arpl
and
mov
iret
and
sub
add
jle
mov
jae
fimuls
into
ret
sarb
stc
fidivs
fidivrl
stos
xchg
test
sti
sub
xchg
xchg
pop
xchg
push
push
cmp
add
jge
mov
push
loopne
adc
dec
jnp
add
outsb
inc
mov
pop
mov
int
bound
pop
fsubrs
add
out
mov
jmp
inc
js
out
push
js
mov
xchg
lods
sub
and
xchg
test
dec
jle
gs
jg
in
jg
movq
mov
mov
mov
into
ficompl
fwait
mov
xchg
sub
sub
or
cwtl
mov
js
fiadds
lcall
aaa
lds
push
dec
pop
sub
inc
inc
cmc
mov
inc
jl
loope
into
cmp
inc
xchg
lods
mov
cltd
lods
lahf
push
jns
mov
stos
push
fs
jne
mov
lock
or
xchg
rcll
lods
mov
inc
imul
lret
mov
mov
in
mov
mov
aas
cs
es
fsubrs
sub
pop
outsb
jmp
sbb
xor
or
js
insb
repz
xchg
push
loope
call
push
xchg
sti
fisttps
dec
sub
loope
jmp
movsb
inc
fists
scas
mov
in
int3
outsb
pop
cmp
insl
xor
aam
mov
pop
shll
ljmp
lcall
cmpsb
inc
sti
sbb
or
mov
mov
in
pop
jbe
push
popa
cmp
and
into
sbb
fstpt
mov
lcall
cmpl
sbb
mov
sbb
outsb
call
cmc
push
repz
cmc
cld
add
dec
aam
shlb
cmc
dec
mov
mov
mov
mov
push
and
mov
inc
jno,pt
ds
into
add
cld
lcall
add
ds
mov
lock
cmp
shl
cltd
push
inc
data16
pop
mov
jg
nop
int
sbb
mov
sub
sub
xchg
iret
xor
aad
inc
sahf
sub
div
andl
push
xlat
mov
int3
xor
push
pushf
jmp
cmpsl
cmpsb
dec
insl
mull
add
dec
mov
or
adc
stc
fwait
xor
mov
rcl
xor
cmovo
jle
mov
es
pop
outsb
mov
mov
outsb
sub
jno
mov
push
stc
xor
dec
test
repz
mov
aad
xchg
nop
ss
test
mov
mov
mov
mov
jo
arpl
das
lcall
xchg
lods
or
add
dec
cmp
bound
das
loopne
pop
sbb
dec
add
pushf
popa
xor
inc
mov
mov
jmp
xlat
adc
aas
cmp
dec
lcall
clc
jge
jne
bound
jl
ljmp
xchg
mov
icebp
jl
in
mov
mov
push
pushf
cli
out
in
mov
in
cmpsl
sarb
mov
cmp
push
lret
push
rorl
lahf
jns
xchg
hlt
xchg
inc
inc
mov
sub
push
lret
lds
pushf
stos
mov
mov
repz
or
lock
jo
jns
test
in
popf
cmp
outsb
fidivs
orb
mov
jne
pusha
sbb
out
push
jl
pop
ljmp
mov
loopne
call
ljmp
das
push
cwtl
iret
cmp
andl
adc
adc
jge
in
mov
cltd
sub
mov
movsb
cli
in
push
xor
dec
xchg
sbb
outsl
aaa
pop
inc
enter
push
enter
lret
adc
sub
mov
pop
stos
scas
sarl
in
pushf
pop
add
and
cmpsl
fcompl
mov
jnp
xor
sub
adc
jecxz
and
adc
mov
lret
jne
in
mov
shll
xchg
data16
stos
fs
jl
ficoms
mov
jb
sub
inc
lret
sahf
jge
xor
mov
pop
mov
add
adc
xor
lods
lods
fwait
cwtl
hlt
and
fdivl
pop
pop
imul
call
pop
cltd
or
sub
loope
mov
in
dec
sub
mov
ficoml
andb
jle
dec
xchg
sbbb
movsl
unpckhps
jo
stos
adc
dec
xor
jge
test
add
mov
fcoms
mov
clc
scas
push
fistl
bound
inc
cmp
jmp
cld
addb
jne
add
ljmp
adc
mov
mov
add
pop
int
jle
rol
inc
mov
cmp
dec
subl
daa
int3
mov
iret
mov
orb
bound
outsl
mov
xor
es
rcrl
fistpl
sarl
cmp
lods
jle
jge
dec
sub
out
mov
cs
shl
fadd
aad
fwait
cmpsb
sbb
je
cmp
mov
lea
pop
outsb
lods
idivb
and
scas
xor
loope
cld
jecxz
in
cmp
dec
out
sub
jp
push
xor
inc
fidivl
shl
das
and
jmp
sbb
repz
or
insb
dec
xchg
pop
xor
pop
leave
lods
dec
xor
insb
push
enter
sbb
stc
lcall
sahf
push
ret
ficoms
pop
and
arpl
in
add
mov
movsl
jb
ret
mov
lret
cs
lret
into
pop
push
lcall
lods
sbb
pop
dec
push
dec
xchg
into
das
mov
mov
fcomps
sbb
adcl
sarl
push
fidivs
movsl
rcr
das
dec
mov
ljmp
mov
mov
fidivrs
mov
mov
mov
mov
test
sbb
mov
mov
mov
lcall
mov
xchg
adc
pop
adc
cmp
push
pushf
cld
nop
fcoml
push
sub
lcall
jl
sahf
sub
into
fldt
inc
and
inc
in
add
pop
jle
adc
inc
mov
insb
xor
test
lock
push
add
mov
ja
adc
call
jecxz
sti
out
mov
sti
jae
scas
cmp
inc
pop
in
mov
add
mov
dec
aaa
mov
dec
xchg
lret
inc
cmp
pop
push
inc
and
dec
xor
push
in
aaa
int3
push
and
orb
xor
sbb
imul
out
scas
inc
pop
adc
lods
or
xor
out
jne
loop
mov
roll
cmp
jbe
mov
stos
add
les
std
inc
push
mov
int3
in
int3
xlat
sahf
pop
outsb
dec
cs
flds
mov
mov
frstor
insl
ret
insb
sahf
xor
mov
push
jno
test
jp
scas
pop
mov
rcl
xor
int3
test
add
pop
mov
and
jns
or
mov
mov
mov
mov
xchg
in
arpl
sub
jae
push
popa
movsl
sub
scas
sbb
andl
repz
jl
xchg
int
popl
fdivs
inc
cmpsl
add
mov
or
scas
fs
adc
jbe
xchg
fidivrs
fistpl
outsb
mov
test
aad
jmp
lret
mov
out
add
out
push
dec
fdivs
orb
cltd
add
mov
and
test
mov
mov
inc
sub
mov
mov
or
cmp
mov
or
in
js
out
sbb
test
inc
cmpsb
sbb
mov
jns
xchg
call
in
xchg
sbb
add
jae
push
icebp
xor
pop
inc
pop
mov
xchg
lea
pushf
or
sbb
mov
adc
jl
fisubs
test
xchg
add
test
inc
push
xchg
jns
insl
jl
push
repnz
fisubrs
lahf
cmp
lods
mov
fcmovne
scas
sub
mov
or
mov
cs
pop
arpl
cmpsb
add
pop
cmp
adc
mov
mov
dec
cmpsb
push
cmp
xchg
jae
lods
ret
in
mov
xor
stc
xor
add
or
cltd
sti
enter
push
fs
pop
mov
inc
add
add
dec
test
dec
jmp
push
sub
addb
jmp
fucomip
add
sub
cmp
outsl
arpl
das
pop
sub
xor
mov
shll
mov
pop
call
mov
std
stos
inc
push
cli
pushf
jge
mov
cmp
pop
push
in
jns
in
gs
pop
mov
mov
clc
cmpsb
insl
mov
adc
sbb
cmp
es
bound
mov
mov
cmc
ficompl
inc
iret
je
mov
mov
mov
in
adc
inc
pop
mov
adc
adc
push
test
xor
dec
sbb
fildll
cmp
push
pop
xchg
inc
aas
aam
xchg
fwait
dec
mov
push
in
dec
inc
lahf
xchg
xor
pusha
add
mov
sbb
sbb
or
xchg
jbe
inc
mov
mov
xchg
stos
stos
lods
in
or
adc
fisubrl
mov
iret
pop
lock
adc
movsb
fsubp
roll
xchg
xlat
aam
aam
jnp
lea
push
sbb
cmp
cmpl
ds
mov
xor
pop
bswap
and
cld
pop
add
bound
mov
minps
fwait
pop
inc
dec
clc
clc
sbb
mov
mov
push
jge
fsubl
mov
sub
xchg
fidivrs
cmp
sub
call
lret
aaa
test
std
popf
cs
in
mov
sub
cmpsl
popw
push
cld
rclb
sbb
lods
add
xor
add
mov
push
pusha
dec
test
dec
out
jecxz
push
lahf
adc
movsl
out
cmc
stc
lcall
lahf
mov
cmc
cmp
das
sub
jbe
fldt
sub
out
dec
lret
mov
or
stos
sti
test
sub
scas
lods
pop
and
mov
mov
cmpsl
add
iret
lret
xchg
push
push
sbb
int3
adc
loop
outsb
and
cld
inc
push
or
pop
fcom
mov
outsl
shrb
dec
gs
or
ljmp
xchg
or
or
es
jg
dec
mov
cli
mov
jb
loope
jg
mov
or
add
cs
pop
mov
lods
int
pop
mov
dec
lret
repnz
mov
or
sub
mov
mov
test
jne
insl
mov
lds
incb
flds
jno
repnz
inc
iret
jae
mov
and
aad
imul
push
xchg
ja
xor
aas
mov
sub
sub
add
jno
and
fdivrs
sbb
cli
lahf
cwtl
mov
xchg
or
mov
sahf
push
fdivrl
xchg
and
stos
inc
loope
add
fcompl
add
dec
adc
bound
sub
jns
dec
lock
sub
pop
arpl
in
lock
cli
ret
mov
dec
lahf
push
jge
call
mov
add
imul
mov
mov
mov
dec
addr16
loope
icebp
add
and
lret
jle
sbb
pop
imul
mov
rcrl
jne
lds
out
sub
adc
adc
mov
jmp
sbb
das
fcomps
sub
fwait
jg
jns
or
into
lock
into
mov
xchg
cli
shl
cmp
out
cltd
push
inc
fnsave
dec
test
cmp
hlt
jmp
dec
or
push
icebp
cmp
stos
sbb
stos
gs
repnz
adc
dec
sub
push
repz
fnsave
sbb
push
sub
insb
cmc
cmp
push
int3
cmpsb
push
lcall
mov
outsb
dec
fs
jge
add
pop
push
enter
addl
stos
push
mov
ret
dec
cmp
int
adc
cmp
sub
cltd
lds
mov
xor
xor
sti
cltd
sub
ja
out
cmpsl
mov
sbb
cmp
lret
dec
addb
or
imul
dec
or
adc
es
fldl
or
jmp
movsl
sub
dec
outsb
dec
inc
add
mov
mov
sub
add
inc
in
adc
xchg
xchg
jbe
pop
std
push
and
lods
rcr
insb
loopne
push
push
imul
pop
mov
pushf
adc
mov
mov
xchg
loope
push
jns
mov
add
js
push
xchg
ficompl
cmp
or
cmp
cmc
jnp
and
mov
jp
fdivs
or
xchg
ficoml
js
mov
faddl
cltd
mov
xchg
mov
pop
jp
sbb
repz
and
arpl
out
dec
push
outsb
cli
outsb
jno
ss
push
or
cmp
dec
dec
mov
fldz
stos
pop
rcl
ret
lahf
mov
pop
mov
test
dec
push
push
add
cld
in
mov
jb
ror
adc
xchg
addr16
fcoms
les
sub
xchg
aaa
push
add
bound
lods
imul
test
inc
sbb
and
cmp
pop
mov
add
mov
adc
std
outsl
call
inc
pop
jg
pop
adc
jns
pop
xor
in
adc
xor
into
push
pop
mov
in
or
inc
cli
jno
mov
xchg
aaa
aad
fsubrp
daa
sub
fimuls
cmpsl
cli
lods
fwait
int3
aad
jmp
mulb
and
shr
lds
sbb
decl
cmp
xor
mov
fnstcw
adc
cli
mov
shl
add
in
xchg
mov
stos
stos
leave
inc
inc
dec
in
leave
inc
cmp
pusha
jo
cltd
mov
inc
inc
lret
leave
push
out
insb
aaa
mov
pushf
push
cmp
mov
jecxz
inc
mov
jl
mov
testl
dec
jnp
aam
or
inc
test
and
mov
into
shlb
out
dec
in
push
pushf
lret
popf
aas
inc
or
andl
add
push
andl
enter
add
pop
jns
mov
mov
stos
addr16
outsl
or
lea
jge
xchg
outsb
jl
outsb
pop
jnp
ret
lahf
inc
inc
pop
jo
popl
dec
xchg
inc
ljmp
fldenv
pusha
cli
sub
and
xor
std
je
fcomip
clc
jno
mov
push
test
ljmp
pop
loopne
mov
adc
test
ljmp
je
ret
popf
mov
add
dec
cltd
outsl
add
fwait
in
out
dec
iret
subb
test
jnp
in
pop
inc
and
out
pop
std
push
test
adc
sub
push
test
mov
xchg
sub
jge
jmp
stc
les
stos
adc
ja
jg
ret
jbe
lds
aam
dec
jecxz
lods
fs
and
sbb
push
mov
iret
stc
fwait
xor
repnz
jnp
and
call
pop
mov
lods
lss
enter
sub
jge
in
aas
ja
ja
pop
movb
popf
push
push
mov
jb
xor
shll
pusha
push
std
jb
push
push
sub
adc
mov
test
mov
icebp
inc
testb
add
mov
dec
sbb
hlt
inc
cltd
lods
dec
xchg
cmp
aaa
pushf
cmp
cmc
mov
lea
pusha
into
xchg
andl
shll
repnz
movsb
add
jge
inc
mov
sub
push
push
cmp
mov
sbb
mov
xor
repz
inc
inc
push
cmp
cmpsb
push
xchg
fisttps
stos
push
pop
mov
sub
fiaddl
jne
movhlps
testl
pop
jge
popa
pushf
fsubl
es
loopne
lcall
insb
and
lds
imul
into
xchg
flds
mov
mov
jbe
repnz
xchg
xchg
adc
hlt
adc
ret
or
mov
aad
fsubl
or
inc
rcll
iret
test
test
out
ljmp
sahf
test
or
aas
iret
pop
insl
test
and
repnz
imul
dec
adc
and
fidivs
dec
add
add
daa
sub
pop
bound
adcl
xor
and
adcb
jns
xchg
fists
jae
call
cmp
inc
ss
js
push
std
pop
adc
xorb
pushf
shll
jo
cli
dec
or
orb
mov
and
sub
jg
mov
or
xor
stc
clc
in
xchg
xchg
mov
jne
or
mov
push
pop
sub
scas
inc
popf
divb
inc
mov
ljmp
sbb
or
sbb
std
mov
xchg
and
push
add
jb
movsb
or
xchg
sub
push
popf
sub
insb
sub
pop
push
andb
lcall
jns
cmp
sub
aam
outsl
lea
lds
jge
test
loopne
std
pop
and
jl
test
pop
test
scas
mov
cmpsl
sub
push
in
aad
pop
jo
inc
jnp
adc
mov
dec
pusha
adcl
in
inc
inc
js
and
xorb
idivl
nop
add
cmpsl
cmp
je
cmc
inc
dec
addl
fcomi
daa
and
xor
lods
daa
lods
xchg
cmpsb
mov
pop
cmp
mov
sub
pop
add
ret
hlt
addr16
jecxz
jbe
add
js
sbb
popf
push
fistpll
jnp
inc
or
add
adc
scas
and
jb
xor
cltd
fcompl
mov
xchg
xchg
out
adc
sub
ret
fsubl
pushf
call
arpl
fcoms
fistpl
and
enter
dec
insl
and
imul
mov
lret
pop
in
out
push
enter
sub
ss
hlt
pop
pop
imul
jno
sbb
popf
test
mov
mov
and
jmp
dec
xlat
lock
loop
je
mov
aaa
andl
adc
push
loopne
cs
push
cmc
addl
adc
mov
int
les
push
xchg
ret
rorb
sbb
add
add
pop
push
push
sbb
hlt
jbe
jmp
sbb
cmpl
cmp
push
aas
loop
push
mov
js
xchg
dec
dec
aad
test
cmpb
cmp
sahf
jle
dec
paddw
insl
and
mov
hlt
pop
jno
pop
jl
scas
lea
std
divb
daa
into
sbb
xchg
mov
es
jne
push
std
cmpsb
into
lahf
fsubl
outsl
lea
mov
pop
or
cltd
adc
loope
xor
imul
mov
popf
push
lds
arpl
bound
mulb
mov
fs
jp
in
sbb
and
int
xlat
stc
sahf
and
rcr
in
add
out
sti
inc
shrl
lods
push
enter
xchg
add
sbb
or
hlt
jae
lret
je
mov
inc
stos
bound
stos
lcall
fbstp
xchg
push
scas
jae
and
aad
cmp
mov
or
rcrb
or
nop
pop
mov
jl
adc
loopne
adc
and
inc
push
mov
sti
std
lods
fcoms
mov
sub
xchg
imul
adc
pop
mov
push
cmp
iret
cmpsl
push
arpl
and
sbb
sti
pushf
or
cltd
inc
jg
data16
lret
jo
mov
xor
cltd
outsl
jnp
flds
mov
fnstenv
bound
mov
cld
out
repnz
test
xor
inc
fdivrl
in
movsl
stc
jecxz,pt
add
fadd
mov
cmp
lret
jae
fcomps
rol
add
stc
insl
mov
popa
mov
add
pop
stos
push
mulb
mov
cmp
les
mov
adc
aam
xor
mov
aam
dec
sub
dec
pop
andl
lock
push
repz
and
mov
out
cwtl
adc
push
clc
mov
imul
mov
add
xor
ja
mov
ja
mov
ret
push
xchg
lock
lods
and
sub
sub
pop
cmp
hlt
neg
cwtl
pop
inc
mov
xlat
lcall
out
addr16
stc
jo
xor
add
call
add
lcall
loopne
movsl
lcall
push
inc
lahf
xor
fdivrl
sbb
leave
lcall
aas
push
aam
pop
stos
lret
xchg
ja
jmp
fistps
aas
out
cmp
adc
jo
aaa
daa
jbe
inc
mov
mov
mov
jo
aad
test
add
test
push
xchg
jl
rcll
sarl
mov
dec
sub
inc
add
aam
sub
out
into
and
jl
ret
imul
mov
shl
data16
mov
fsts
cmovbe
and
ret
es
xlat
push
mov
mov
mov
aaa
cmc
jae
lock
mov
in
test
andl
shrl
in
fucom
adc
ljmp
sub
mov
fcomps
add
jecxz
add
xor
lods
cwtl
mov
rcrb
xchg
das
imul
rcr
inc
cmp
xchg
adc
mov
push
inc
les
into
and
arpl
imul
or
ret
inc
fsubrl
pop
lret
out
test
jns
in
xchg
bound
add
dec
outsb
xchg
jmp
add
jbe
push
shrb
pop
dec
dec
and
jl
mov
divl
ret
test
das
std
fsqrt
or
mov
les
adc
mov
jge
call
std
mov
std
pop
inc
jl
gs
test
repz
adc
test
jbe
and
pushf
dec
stc
sub
mov
aas
xchg
push
dec
mov
cs
dec
mov
jne
sbb
cs
cmc
pop
add
fimull
add
push
cmp
cmpsb
push
inc
icebp
mov
cmpsb
sub
test
sub
pop
jno
jne
movsl
daa
mov
xlat
adc
lock
sbb
add
loopne
mov
jns
mov
cmp
ret
daa
mov
push
xor
push
mov
mov
call
das
test
mov
cmp
cmpsl
loop
fisttpll
xchg
testb
mov
outsb
sub
subb
and
sbb
dec
and
jle
mov
add
mov
pop
dec
adc
xchg
or
push
mov
into
mov
pop
jns
cmp
call
push
shlb
je
push
pop
iret
xor
nop
adc
jp
addb
cmp
movsl
fdivrl
push
in
jno
lods
dec
mov
jecxz
pop
dec
adc
cmc
fdivrl
xchg
aam
or
cmp
and
loop
xchg
mov
xor
cmp
inc
jae
imul
or
pop
adc
sub
in
stc
sbb
addr16
lock
push
inc
mov
mov
mov
pop
jmp
and
lock
daa
dec
dec
mov
ja
mov
jmp
rcr
xor
into
movsl
sbb
sbb
lock
cmp
jbe
adc
ret
and
sub
mov
mov
fwait
mov
mov
mov
repz
inc
cmc
jnp
inc
xlat
add
sub
stc
mov
das
push
data16
in
mov
fistl
fwait
sti
notl
add
mov
into
sbb
dec
out
push
mov
jns
jg
push
push
xor
pop
fiadds
xchg
dec
and
pop
mov
sub
cs
std
sti
cmp
adcb
stos
dec
mov
sub
cltd
das
movsb
add
xor
dec
into
inc
adc
leave
and
mov
shll
jns
inc
daa
repz
repnz
pop
jp
stos
add
pop
cmp
sub
les
adc
test
rolb
mov
cs
xor
jno
mov
cli
push
leave
enter
push
xor
add
push
add
cmc
into
pop
dec
mov
jp
cwtl
andb
mov
pusha
dec
jns
jg
adc
rcll
imul
std
lea
jp
sbb
insl
hlt
and
lcall
xor
ljmp
aaa
mov
push
adc
test
push
dec
sti
push
inc
cmpsl
pop
mov
ja,pt
push
dec
push
jmp
not
adc
jns
scas
jae
in
pop
push
test
adc
fwait
cmp
sub
push
ljmp
xlat
popf
rorb
mov
lcall
adc
imul
push
dec
jp
lods
dec
dec
loop
cmc
lcall
and
adc
data16
xchg
mov
les
xchg
rcl
fwait
icebp
stos
jmp
pop
mov
mov
add
movsb
xchg
cwtl
out
sbb
jnp
jbe
push
jg
sbb
shrl
stos
sub
leave
cs
xchg
jg
sub
adc
leave
or
addr16
sbb
jo
outsb
enter
pushf
xorb
xor
mov
lret
jae
mov
inc
outsl
cmpsb
pop
dec
pop
hlt
jmp
xchg
fistps
stc
lds
inc
push
push
pop
adc
ret
test
mov
movsl
fcmovnu
cmpsb
fs
inc
mov
je
pop
div
cmpsl
int3
mov
inc
fidivrl
pop
outsb
inc
pop
jae
repnz
jp
jb
pop
dec
xchg
stc
les
popf
movsb
iret
int3
push
mov
cmp
pushf
mov
shr
or
push
outsb
pop
dec
cld
out
test
xchg
jo
and
mov
lahf
rolb
adc
lahf
xor
inc
or
aad
dec
xchg
test
pushf
and
ja
into
dec
mov
das
mov
cwtl
mov
xor
test
xor
mov
pop
pop
sarl
xchg
lss
or
adc
stc
in
pop
mov
filds
push
repnz
icebp
dec
sub
cwtl
je
sbb
das
inc
mov
pop
pop
sub
pop
push
jbe
add
inc
int
insb
pop
test
pop
add
inc
pop
adc
mov
inc
lcall
xchg
out
cmp
cwtl
cmp
mov
and
push
stos
mov
adc
xchg
dec
inc
fnsetpm(287
jge
sub
clc
push
insl
pop
popa
lods
cmp
push
popf
fs
sbb
rclb
lret
std
xor
stos
daa
ret
shl
push
jmp
cmp
imul
es
jle
sub
movsl
jae
add
add
or
mov
adc
fldl
xor
xchg
or
cli
js
pop
mov
push
push
inc
mov
dec
dec
mov
in
pushl
or
mov
cmpl
gs
adc
in
ja
inc
inc
les
daa
or
cwtl
dec
push
outsb
adc
sahf
sbb
sub
jp
or
ljmp
jae
les
sbb
scas
push
mov
mov
xchg
ret
gs
pop
push
jl
jmp
dec
imul
leave
sub
dec
mov
addl
aas
add
adc
lds
adc
in
push
rcl
dec
shll
mov
mov
repnz
sbb
add
andl
and
ljmp
daa
or
fbld
jle
inc
xchg
mov
add
ss
ja
scas
sbb
pop
insb
lock
or
sub
cli
std
xor
stc
cmp
fdivr
movsb
dec
sub
jbe
mov
rorb
add
xor
inc
xor
xor
pop
mov
shrl
mov
in
dec
rorb
aaa
test
pop
pop
scas
out
add
in
pop
rdtsc
push
icebp
push
xor
dec
xor
sahf
jge
push
cmp
out
xor
mov
add
or
movsl
in
jae
into
mov
xor
imull
mov
pop
rol
lret
les
push
es
repz
call
push
adc
sbb
shlb
mov
or
shll
dec
daa
add
xor
pushf
push
inc
xor
push
std
rorb
stc
cmp
push
dec
add
xchg
cmp
loopne
rorl
dec
addb
xor
xchg
xor
cmp
cmp
test
lods
sarb
dec
adc
and
lahf
cs
add
sbb
daa
inc
cmp
mov
and
mov
mov
pop
adc
add
xchg
push
out
leave
mov
aam
cmp
sbb
das
push
test
dec
sbbl
cmp
dec
jmp
cmp
xchg
mov
mov
cmp
cltd
push
xlat
mov
cli
aad
cmp
and
cmp
push
mov
mov
outsl
add
push
sub
sarl
and
add
rcrb
adc
inc
sbb
pop
pop
addr16
aas
cmp
cmp
fstpt
inc
add
or
adc
jg
xor
jbe
fildll
mulb
mov
faddl
inc
xor
int
mov
mov
mov
adc
pop
and
rcll
xchg
mov
xchg
mov
mov
lock
imul
or
jle
adc
mov
fldcw
inc
in
xchg
sarl
pop
in
mov
das
push
pushf
stc
push
inc
addr16
sar
xlat
out
out
xor
xor
popf
mov
andl
and
cltd
call
test
jae
outsb
cmc
std
fidivs
xchg
mov
and
xor
mov
in
and
mov
mov
movsb
mov
add
in
xchg
or
cs
popa
out
xchg
sub
add
cltd
pop
mov
xchg
sub
adc
add
add
or
mov
push
fwait
sub
enter
inc
ficoml
div
inc
jno
mov
cli
mov
push
loopne
add
out
sub
inc
in
imul
sbb
dec
test
loope
jno
cmp
arpl
and
mov
mov
xor
push
xchg
insb
and
xchg
jp
arpl
inc
inc
mov
push
sub
jp
lods
xor
dec
adc
xchg
cmp
aam
cmp
pop
push
jg
pop
push
insl
bound
stos
dec
rclb
inc
dec
xchg
shll
and
push
mov
mov
jg
sti
imul
iret
mov
mov
outsb
test
cmpsl
cmc
add
jo
int
aad
nop
cmc
stos
leave
pop
insl
push
push
push
cmpsl
ds
mov
jo
xor
movsl
imul
je
fsubrs
xchg
cmc
mov
fcompl
mov
cmp
and
xor
popf
mov
scas
mov
testb
cmp
xchg
push
xor
fcoml
sub
test
divb
mov
pop
in
fwait
jmp
pushf
mov
push
xchg
sub
sub
shlb
add
pop
enter
xchg
addr16
jne
xchg
xor
adc
cmp
leave
outsb
test
cmp
mov
cld
xor
lods
inc
imul
jno
and
rolb
pandn
cltd
mov
and
outsb
sbb
sti
push
outsl
mov
outsl
sbb
mov
lods
jae
jp
in
test
pop
cltd
imul
ds
sub
mov
pop
push
jbe
jle
std
out
mov
stc
inc
jp
jmp
xor
jb
push
leave
aaa
mov
cmpb
mov
fsts
scas
lods
daa
xchg
sub
inc
outsb
cmpsl
cld
sub
and
push
add
inc
nop
pop
push
add
movsb
push
mov
outsb
add
lahf
mov
aas
cmp
sbb
cmp
push
bound
or
movsb
xchg
mov
jl
mov
cmpb
xor
pop
cwtl
mov
or
in
loop
jns
rclb
insb
or
mov
fldl
fstl
mov
and
dec
push
jmp
icebp
cmp
pop
jae
mov
in
adc
fistpll
shl
or
movsb
xchg
or
psubsb
fimuls
adc
out
push
mov
daa
lcall
mov
ljmp
adc
cmp
in
fiaddl
cltd
loop
add
lods
rclb
jmp
push
sbbl
in
cs
cld
pop
push
fcmovu
das
lods
stc
mov
js
jg
bound
inc
and
cld
pop
cli
movsb
lea
push
mov
stos
loopne
add
xchg
loopne
sub
xchg
cmpsb
xor
push
adc
adc
ja
sub
inc
xchg
push
inc
pop
jb
test
ret
and
and
and
mov
inc
xor
mov
stos
or
fwait
jl
inc
dec
in
add
sahf
pop
dec
sbb
mov
push
jecxz
inc
push
and
xchg
jbe
xchg
sbb
fs
enter
aaa
andl
cli
or
pop
out
in
andl
pop
lret
mov
or
std
enter
insl
out
loope
out
mov
lret
out
ret
ljmp
xor
mov
andl
mov
out
xor
mov
or
cli
adc
jo
sbb
ja
push
jno
lcall
ljmp
add
fists
pop
lcall
jecxz
insl
fidivs
pop
loopne
inc
lcall
and
sbb
jp
jl
pop
rcrb
cmp
jp
mov
aad
lret
test
inc
in
or
addb
test
adc
mov
int
push
pop
das
hlt
cmpsb
in
xor
dec
hlt
scas
mov
mov
outsb
fldl
xor
xchg
pop
mov
or
mov
mov
and
add
xor
stos
imul
push
in
sub
insb
inc
pop
sbb
pop
jg
pop
adc
dec
jae
push
adc
into
les
nop
cmpsl
test
rolb
fs
push
shrl
sub
int3
scas
loope
push
xchg
pop
inc
shl
sub
push
lods
imul
push
sub
rcl
in
testb
inc
iret
jne
inc
lcall
sbb
pop
pop
mov
test
mov
jg
pop
es
jbe
push
pop
or
and
and
push
adc
add
adc
outsl
mull
xchg
cmp
xor
movsl
adc
jae
fsub
dec
mov
cltd
int
std
cmp
sbb
lret
add
aaa
add
xor
and
mov
jmp
daa
push
pusha
xchg
insl
mov
jb
push
pop
mov
jne
lods
lea
lock
je
mov
outsl
mov
inc
mov
in
pop
inc
lods
fsub
sub
mov
mov
sbb
rclb
dec
into
sbb
cld
imul
push
or
fdivs
dec
inc
add
fstps
pop
mov
xor
push
xor
mov
mov
fdivrs
jns
fs
fidivs
shrb
int3
jnp
shlb
xor
push
data16
mov
mov
or
dec
or
pop
adc
in
repz
loope
pop
test
sub
negb
pop
das
movsl
ret
pop
sub
push
jle
sbb
jno
fistpll
or
ds
shrb
icebp
push
out
push
jge
add
jno
xchg
dec
test
pop
outsb
inc
aas
push
lock
mov
or
cmp
xchg
add
movsb
aam
in
dec
lds
xor
loopne
mov
mov
sub
dec
ja
xchg
cmpb
sub
xchg
repnz
cmp
es
aam
pop
rcll
jp
int3
stc
xchg
mov
aaa
sahf
or
adc
aas
jb
mov
jmp
out
lahf
adc
fnstcw
push
xlat
push
mov
ja
imul
pop
or
jl
push
aam
scas
xorl
xlat
xor
mov
ret
push
mov
or
icebp
je
lock
push
or
stos
and
xchg
jl
sub
sbb
jecxz
adc
pop
in
por
stc
xor
xor
cmpsb
icebp
and
fcoms
mov
xorl
fcmovbe
add
out
mov
mov
pop
push
orb
aas
sbb
sbb
jne
mov
les
jnp
or
sub
popa
adc
cltd
pop
jge
sub
fs
jmp
popa
xlat
fsubr
test
pop
sbb
adc
insb
dec
jl
xor
pop
inc
aad
cmp
cmpsl
mov
jl
fistpl
xchg
aam
ffree
mov
push
push
shll
stos
mov
push
dec
subl
scas
fisubrs
mov
or
inc
or
mov
repnz
cmp
adc
jno
mov
pusha
int
adc
jp
clc
push
pushf
fldt
int3
add
pop
pusha
mov
lds
push
jnp
cmp
ljmp
adc
cmpsb
mov
mov
int3
in
int
stos
pop
push
fs
lret
xchg
iret
jl
pop
loopne
ret
adc
aam
sbb
inc
int3
or
shll
push
int
bound
push
loop
vpackuswb
jb
cmp
in
rorl
loopne
sahf
add
cmc
iret
xchg
lahf
mov
xor
adc
sbbb
cltd
push
add
scas
rcrb
sub
shll
leave
push
mov
pop
mov
aad
push
mov
lcall
and
mov
in
out
out
add
arpl
test
cmp
dec
gs
rorb
add
mov
fsubr
dec
lahf
jp
mov
push
in
dec
les
lcall
rorb
jnp,pn
fmull
cmp
sub
std
jp
mov
daa
sti
push
mov
add
dec
adc
lcall
sti
aaa
xchg
push
mov
adc
or
and
inc
faddl
js
std
mov
jno
lret
push
push
shll
sub
nop
outsl
xchg
lds
movsb
std
rclb
sbb
dec
out
add
out
and
inc
pop
pop
push
xchg
test
cmp
shll
inc
push
cmpsl
mov
pop
ja
aam
ss
std
add
mov
shrl
pop
mov
hlt
push
mov
mov
push
push
xor
mov
or
andl
lret
adc
js
jmp
stc
aaa
mov
lods
repz
shlb
dec
fs
aam
out
mov
mov
adc
movsl
cmpsl
and
jg
jmp
aaa
fwait
sub
notl
sar
and
filds
or
mov
std
mov
mov
insl
int
out
mov
rcrl
arpl
mov
adc
or
jno
mov
push
jge
dec
ret
int
or
insl
int3
pop
imul
pop
in
dec
cltd
mov
mov
cli
sub
jns
outsb
dec
cmpsb
cwtl
negl
add
stos
jns
popa
inc
inc
push
jb
add
fisubs
lret
movsl
xor
lcall
in
es
ds
push
testb
clc
faddp
inc
pop
mov
lock
int3
cmp
cmp
loop
lds
daa
loop
daa
fs
mov
push
sub
xchg
cld
call
ds
cmp
cmc
jge
scas
xchg
mov
shlb
shll
data16
in
and
xchg
pop
jo
xor
insb
mov
add
rclb
mov
pop
xchg
push
xor
hlt
in
imul
int
maskmovq
notl
ja
les
test
inc
daa
into
sti
aad
insl
pop
sub
sahf
fimuls
mov
xor
mov
pop
test
test
mov
jle
outsl
data16
push
pop
mov
icebp
movsl
xchg
repz
cltd
test
stc
push
scas
insb
mov
and
addl
and
out
push
cmc
mov
adcb
push
mov
xor
sub
mov
xor
aam
adc
mov
xor
dec
mov
inc
mov
jl
pop
mov
mov
jo
inc
add
mov
inc
lret
repnz
fadd
stos
add
cmpsl
mov
jbe
or
in
stos
subl
sub
ret
movsb
pop
daa
inc
sahf
xlat
mov
or
or
int3
ret
js
movsl
shlb
aaa
pop
cli
mov
xchg
popa
lret
es
mov
aas
sub
jns
dec
sbb
xchg
iret
sbb
fsubp
ret
data16
pop
dec
aad
pop
mov
je
mov
xlat
je
out
outsl
sbb
adc
push
stos
or
and
cli
sbb
test
sbbb
shr
mov
test
jmp
nop
push
imul
mov
sub
adc
xor
cld
add
sahf
lock
fsubp
sub
bnd
shrb
daa
int
call
loop
lret
sub
fistps
cmp
or
fistps
dec
data16
test
adc
xor
jb
fnstcw
mov
nop
repz
popf
mov
cmp
mov
xor
jnp
mov
fisttps
icebp
mov
lea
or
push
mov
std
imul
stos
xchg
sub
and
or
pop
xchg
pop
lahf
incl
cltd
mov
jb
pop
ficomps
pushf
mov
mov
lods
addr16
iret
mov
sub
sub
mov
push
enter
jl
dec
and
or
addb
orb
add
sbb
loopne
cmpsl
stos
flds
fcmovnu
or
and
jl
jl
xchg
xchg
icebp
imul
jbe
push
push
inc
mov
inc
or
xor
adc
xchg
cmpsl
jb
inc
outsb
adcb
mov
popa
out
int3
daa
imul
pop
xor
mov
mov
jp
adc
cmpsb
xor
or
aad
frstor
dec
push
loop
mov
rol
xor
sahf
and
sbb
ss
fidivl
test
aam
iret
push
movsb
dec
syscall
lods
push
inc
lock
inc
dec
sbb
scas
subl
pop
fsubrs
pop
add
dec
imul
pop
out
mov
push
pop
add
clc
pop
pop
insb
scas
pop
fwait
add
pop
pop
andb
mov
jecxz
sub
mov
les
xor
or
lret
test
cmp
nop
xchg
insb
jb
mov
pextrw
cmc
shrb
and
mov
insl
push
jl
popf
sbb
jae
pop
popa
dec
js
pop
pop
jne
cmp
movsl
cwtl
push
add
xchg
push
insb
mov
jae
fistpl
adc
inc
mov
mov
addb
scas
inc
lods
mov
aaa
xor
stos
sub
xchg
cld
lcall
adc
fistpl
jae
mov
add
xor
fs
or
xchg
and
ss
std
mov
add
cmpsb
dec
push
push
cmpsb
cli
add
jecxz
das
or
push
icebp
inc
jmp
sbb
mov
jmp
jbe
jno
aas
ficompl
mov
mov
lret
pop
inc
daa
notb
fdivrl
lods
daa
fisubs
xchg
cs
lahf
js
push
pop
sahf
aaa
faddl
xchg
sti
int
mov
inc
js
scas
cld
pop
mov
aad
aad
lods
es
xchg
inc
cltd
sarl
pushf
orb
xchg
sti
fabs
pusha
push
push
sbb
adc
mov
mov
inc
mov
cmp
xor
inc
adc
mov
inc
sahf
idivb
dec
inc
add
das
xor
fildl
outsl
out
adc
stos
sub
scas
adc
cmp
fisttps
or
lcall
mov
cmp
xchg
minps
mov
dec
mov
xchg
push
add
jl
dec
mov
call
xor
push
icebp
nop
leave
in
shr
jmp
cmp
cmp
xor
lret
pop
js
lret
in
subb
and
push
pop
sahf
push
push
shr
test
mov
inc
mov
dec
push
enter
and
lret
dec
int3
xchg
pop
in
xchg
js
fists
repnz
js
pop
cmp
sub
push
mov
pop
std
mov
stos
sbb
jl
push
inc
pushf
cmpsb
out
sub
dec
js
aas
push
cmp
inc
mov
xor
jnp
fldcw
xchg
or
ficompl
cmc
pop
xor
mov
jns
pop
fdivs
daa
xchg
popf
cltd
cli
out
inc
jbe
jmp
lret
xchg
dec
xor
sub
mov
rcr
cmp
ja
inc
loop
arpl
pop
insl
nop
fisttpll
scas
repz
push
lds
adc
dec
arpl
ss
daa
arpl
or
jmp
jecxz
loop
xor
int3
lods
scas
loopne
or
xlat
aad
hlt
sahf
pop
mov
mov
and
lea
inc
movsb
inc
sub
dec
outsb
shll
or
push
lahf
xchg
sbb
into
sbb
ja
push
xor
sbb
dec
sub
jg
fistps
inc
push
cli
cmpsb
jno
fisttps
sub
addr16
jmp
jns
imul
out
or
out
xor
push
jnp
dec
sbb
push
insl
mov
and
jno
incb
cmp
roll
in
ficompl
push
inc
addl
popa
andb
sbbb
ljmp
bound
xchg
jae
fsub
js
mov
sub
sarb
popa
std
fwait
adc
aas
fsubrl
dec
fnstsw
mov
xor
mov
rcl
lret
sub
lods
push
in
adc
bound
cmp
cmp
pop
decl
aas
sbb
lret
in
fstpt
leave
and
xor
push
addr16
sbb
imul
jae
sub
sbb
xchg
mov
mov
cmc
xchg
dec
ficompl
jnp
mov
xor
mov
cltd
jbe
mov
rolb
mov
lret
inc
jl
xchg
jecxz
daa
push
sbb
mov
dec
imul
mov
dec
mov
js
in
stc
ficompl
jns
ret
jg
xchg
shr
in
dec
idiv
int3
inc
cmpsl
sbb
jo
and
hlt
xor
push
or
and
or
xor
cli
je
adc
movsl
lds
sub
jmp
imul
mov
mov
inc
sarl
call
std
ret
mov
cmp
test
xor
sub
xor
adc
cmp
into
adc
mov
subb
cmp
call
add
or
mov
hlt
inc
cmp
dec
xchg
jo
xor
mov
add
daa
cwtl
arpl
pop
fucomp
shll
lock
mov
mov
sub
adc
lahf
push
imul
xchg
test
subl
out
jmp
iret
std
and
xchg
js
mov
mov
pop
scas
cmpsb
mov
jge
cmp
stos
pop
mov
xchg
sahf
fnsave
sub
das
fadd
clc
divb
in
mov
stc
aas
negl
fs
dec
xchg
xchg
add
xchg
adc
call
sbb
xlat
and
xchg
or
into
test
dec
aaa
lret
xchg
mov
stos
inc
cmp
jae
push
rcrb
cmp
fwait
jns
stc
in
inc
loope
jb
push
sbb
xchg
xchg
cltd
pop
das
fwait
stos
pushf
out
pushf
pop
mov
cmp
mov
xor
fisttps
xchg
add
cmp
daa
cwtl
cld
lahf
or
mov
adc
mov
push
loope
mov
mov
je
loope
adc
pop
mov
pop
xchg
xchg
push
into
xchg
pop
mov
stos
jb
pop
cltd
mov
incb
mov
loop
popf
xchg
std
xchg
aas
pop
xchg
lock
addl
repnz
mov
jg
add
jmp
pop
sub
pushf
mov
pop
mov
mov
or
mov
sbb
dec
pop
insb
fdivrs
inc
cmp
ret
or
xchg
lock
inc
mov
loop
aaa
fwait
jecxz
outsl
les
dec
sbb
test
fs
loopne
push
idivl
test
aad
or
insl
shl
fidivs
mov
jmp
pop
lods
sbb
xchg
adc
push
inc
imul
aam
and
mov
and
xor
adc
add
dec
cmp
push
sarl
negl
push
sub
rorl
mov
push
cmp
out
cmc
std
shlb
or
movsl
pop
cmp
lods
mov
jl
inc
dec
adc
pop
pop
cmp
mov
bound
adc
cld
insb
test
mov
outsl
sub
ja
out
and
int
lods
jmp
or
mov
sbb
xchg
out
sti
sub
jnp
shr
nop
in
aaa
in
ss
add
xchg
add
or
sbb
cmp
fwait
scas
loop
pusha
add
js
cmp
mov
repz
sbb
out
lea
sbb
or
mov
sahf
xchg
mov
push
and
mov
push
ficoml
xchg
loopw
daa
jnp
movsb
pop
or
cld
lea
popa
and
sti
lods
xchg
jbe
dec
or
out
sbb
and
add
rcr
lods
jne
fistpll
leave
ss
jle
das
enter
sbb
lock
adc
into
jno
jle
jge
fimull
sub
jnp
pop
mov
push
movsb
pop
shlb
dec
pop
neg
out
mov
xchg
pop
pop
or
sbb
fldcw
sbbl
lds
sub
xchg
repnz
clc
pushf
xchg
inc
pop
out
popa
lret
inc
out
xchg
fidivrl
push
test
test
pop
inc
mov
inc
sub
xor
jl
xchg
mov
xor
and
insl
pop
jnp
xorb
ja
jmp
push
notl
sbb
adc
inc
jb
dec
mov
or
push
xor
push
nop
xor
popa
push
jbe
push
cmp
iret
dec
push
sub
cli
leave
sub
cwtl
or
arpl
dec
or
mov
dec
fnclex
pop
xor
pop
iret
cmp
stos
jg
gs
add
daa
addr16
or
push
dec
cs
lds
mov
and
dec
repz
push
dec
xchg
mov
test
fsubrs
lret
mov
xchg
push
cld
rorl
das
mov
inc
and
dec
xchg
mov
xor
sub
pop
pop
dec
fwait
stos
outsb
cmpsb
imul
popl
jne
mov
and
dec
sbb
xor
sub
and
cmp
repz
std
or
cmp
jg
sbb
lcall
lds
push
lock
jle
push
pop
movsl
repz
les
cld
repz
push
inc
adc
and
outsb
cmp
in
xchg
cmovs
dec
movsb
imul
add
xchg
into
in
shl
xchg
movl
out
push
repz
mull
imul
mov
in
lret
dec
subl
push
ror
xchg
adc
mov
pop
adc
cmp
xor
addl
inc
sub
xchg
pop
int3
mov
inc
add
pop
jg
dec
xor
fcoms
pop
cli
cld
jo
push
push
cmp
addl
insb
push
popa
adc
cmp
or
out
adc
repnz
out
test
xchg
mov
jno
sub
jge
mov
or
add
xor
mov
or
in
sti
repz
jle
jge
inc
addr16
xor
lea
jo
fbstp
sub
icebp
repz
mov
xchg
mov
call
mov
jl
jle
jb
loop
mov
dec
addr16
rcrl
mov
lods
jno
js
xor
jne
adc
adc
mov
adcb
sbbl
jo
fucomip
sub
mov
push
xchg
pusha
cmp
cld
int3
in
push
xor
push
sbb
or
lret
sub
out
cmc
test
jb
test
shlb
insl
xchg
xchg
sti
push
adc
mov
push
mov
mov
pop
xor
jge
lock
rcr
cmpsl
aam
adc
pop
mov
jae
or
arpl
rcl
dec
ljmp
push
popf
xor
outsb
jo
add
inc
add
dec
movsl
rcl
mov
dec
xchg
xor
mov
shl
pop
rolb
push
lock
mov
scas
std
test
xchg
jg
push
cld
in
pop
std
pop
popa
cmp
or
or
fidivrl
or
imul
xchg
pandn
loopne
sub
pop
bound
lock
shlb
std
dec
ret
jp
les
xchg
cli
daa
or
xchg
mov
jmp
ds
adc
pop
out
sub
inc
xor
adc
shld
mov
adc
pop
pop
cmp
int
sahf
sub
push
mov
scas
mov
adc
out
adc
jnp
xchg
pop
imul
out
jb
pusha
mov
iret
pop
sub
repnz
mov
pop
xor
jg
and
test
scas
repz
fwait
popl
cmp
mov
icebp
inc
push
lea
aaa
and
dec
and
sub
add
push
pop
popl
cmpsl
jns
popf
lods
and
jae
cmpsl
nop
mov
mov
mov
dec
shll
pushf
and
lods
and
xchg
inc
xchg
insl
inc
xchg
xlat
push
fwait
dec
clc
int3
or
mov
push
xchg
push
sbb
mov
and
jecxz
cwtl
pop
mov
adc
sub
fdivl
mov
xchg
sarb
shl
aaa
xchg
fistl
in
push
scas
movsl
stos
jne
js
cltd
and
xchg
pop
iret
inc
outsl
cs
xor
fs
jae
cmp
jno
ret
fsubl
xchg
daa
fs
mov
xor
lods
sbb
adc
pop
inc
insl
in
mov
xchg
cmp
add
es
in
adc
xchg
data16
fwait
xor
or
inc
cmp
addb
mov
xchg
add
xchg
dec
xchg
push
shlw
mov
sbb
dec
repnz
ret
inc
lea
popa
xchg
in
inc
or
fimuls
rorb
mov
out
fwait
and
pushf
data16
out
or
rcrl
insl
leave
ret
inc
dec
test
shrl
push
icebp
loop
rcrb
sbb
pop
lahf
mov
test
pushf
sbb
jmp
sbb
fstps
call
sub
loop
and
aam
push
int3
adc
js
mov
ja
cld
pop
sub
scas
call
ds
cmpsb
xor
fs
xchg
xchg
xchg
shl
in
adc
repnz
pusha
add
inc
cmp
mov
rcrl
bound
sbb
mov
sub
outsb
js
loopne
push
adc
js
outsb
dec
lret
cwtl
sub
xor
sub
jl
cmp
out
sbb
and
mov
mov
faddp
xchg
hlt
xchg
sbb
rcl
outsb
dec
push
neg
into
mov
xor
pop
mov
push
jns
ds
xor
or
ret
dec
daa
pop
xchg
mov
mov
add
jecxz
sbb
inc
and
in
movsl
mov
mov
scas
jecxz
xchg
loop
or
xchg
in
xchg
xor
aas
mov
sub
shrl
sub
dec
ljmp
xchg
loopne
mov
adc
adc
mov
fcoms
push
test
sbb
mov
jno
in
jno
inc
cmpsl
push
sub
jl
xor
dec
fisttps
das
call
pop
out
or
push
mov
mov
dec
inc
fsts
mov
lahf
lock
mov
xor
pop
insl
test
sbb
push
inc
lahf
rclb
sbb
cmpsb
das
push
xchg
shrl
pop
cmpsb
pop
jp
insb
mov
sub
out
dec
leave
stos
cmpsb
aas
xchg
insl
cmpsb
push
pop
pop
in
mov
ja
pop
mov
add
mov
jp
pop
jge
push
or
xchg
jg
or
pop
insb
addl
iret
mov
lock
fiadds
testb
in
and
insb
sub
popf
fidivl
data16
mov
cmc
push
lfs
inc
loope
out
sbbb
pextrw
popf
icebp
xchg
loop
stc
stos
cld
or
dec
insl
mov
sahf
sub
call
ret
cmp
or
inc
push
sbb
or
daa
push
ljmp
test
inc
and
fisubrl
fcom
or
stc
or
fcmove
jae
adc
icebp
add
add
mov
insb
icebp
xor
mov
pop
jge
js
mov
testb
gs
or
sub
cmp
leave
dec
ja
addr16
loopne
inc
jmp
mov
sub
mov
clc
aad
ficompl
es
imul
push
xor
dec
sbb
rorl
cmp
mov
cmp
in
iret
pop
movsb
subl
fadd
movsl
mov
pop
stc
addr16
and
mov
dec
sbb
xor
mov
sub
mov
xor
dec
stos
cmp
and
push
sub
jge
add
loop
xchg
cmpsl
insl
outsb
cmp
in
and
inc
test
cmpb
addr16
ret
xor
push
mov
xor
enter
jae
ret
cmp
ss
in
add
pop
and
movb
call
insl
jl
xlat
pop
insb
jnp
loopne
cld
dec
mov
scas
sbb
imul
xchg
xchg
imul
popa
add
dec
cmpsl
or
and
lahf
adc
subl
outsb
add
mov
push
jb
les
shrl
scas
jbe
imul
pop
ja
fnstsw
jb
push
mov
loope
push
icebp
xchg
xchg
add
inc
mov
sub
mov
xchg
cmp
dec
and
cmp
jo
mov
lea
dec
int
inc
cmp
test
xchg
dec
sbb
jg
fwait
in
pop
data16
dec
push
xor
cmpsb
lock
push
je
fiaddl
mov
mov
icebp
and
ljmp
popa
mov
insl
jno
cmpb
dec
sub
repnz
pop
inc
lods
add
sub
movsb
add
mov
or
mov
fsubr
int3
movsb
push
add
adc
sti
or
xchg
push
fiadds
insb
jnp
enter
inc
inc
sbb
leave
xor
inc
ret
out
mov
fdivs
js
test
popa
mov
push
mov
inc
andl
repz
add
int
leave
inc
cs
nop
mov
clc
pop
cltd
xchg
mov
aad
push
xor
daa
ds
out
mov
pop
idivb
arpl
faddl
mov
insl
mov
xor
cmpsl
push
mov
test
inc
aam
int3
in
enter
test
dec
fstps
cmp
or
pop
sahf
cmp
imul
jle
mov
lea
scas
add
ljmp
jg
cli
es
iret
add
test
ds
in
pop
data16
jl
mov
lcall
push
dec
ds
add
inc
sbb
lock
imul
aam
lods
cmp
push
test
xor
inc
rcrb
mov
out
lea
pusha
sahf
scas
dec
mov
les
mov
or
movsb
call
cmpsl
call
imulb
push
arpl
push
inc
shl
movsb
cmp
adc
out
dec
inc
ficomps
das
cmc
sbb
pushf
lods
push
ss
shl
test
ljmp
sub
jne
add
arpl
xchg
ja
add
mov
pop
or
xlat
adc
movsb
out
repz
mov
jns
jl
fwait
cmp
call
pushf
inc
gs
movb
out
sbb
rcrb
lock
jmp
or
adc
push
cmc
jbe
dec
test
xor
inc
rorl
adc
fdivl
dec
shrb
sub
out
es
pop
adc
push
mov
push
outsl
int3
xor
lods
ret
stos
xor
or
xchg
dec
int3
loope
fnsave
fists
test
sub
sub
dec
or
and
test
dec
lds
mov
or
and
sti
adc
pop
shl
pop
jnp
inc
dec
loop
mov
adc
gs
jecxz
aad
test
insl
aam
mov
add
mov
stos
movsb
adc
mov
mov
outsb
jb
or
ja
cmpsb
ja
jecxz
outsb
xor
dec
lahf
xchg
stos
loop
adcl
push
and
nopl
dec
mov
xchg
sar
push
lock
mov
pop
sub
push
xor
sbb
pop
jbe
cmc
jle,pn
xchg
pop
mov
inc
imul
pop
push
loopne
sub
and
dec
push
mov
sbb
push
and
adc
lea
jg
jae
scas
pop
iret
sbb
sub
mov
sub
ret
lock
ret
push
lcall
imul
aaa
xlat
les
push
xor
pop
fstp
cmpsl
gs
adc
std
push
fwait
sbb
adc
ret
stos
bound
mulb
dec
sbb
add
inc
xchg
insl
or
cmp
cmp
scas
test
ja
cmc
mov
mov
add
xlat
jae
into
je
int3
jbe
repz
popa
sahf
icebp
imul
ja
push
or
or
or
scas
rorl
pop
repz
mov
in
inc
sar
dec
sti
xor
jne
jmp
mov
cmp
repz
ljmp
jg
inc
sub
aaa
inc
cltd
shr
leave
push
jmp
mov
leave
and
sbb
loop
sbb
mov
mov
pop
inc
xchg
stos
aas
in
xchg
es
sbb
cmp
test
lods
addr16
xor
or
adc
inc
imul
push
or
inc
sub
inc
mov
mov
lcall
outsb
dec
inc
sub
out
ret
out
push
nop
sbb
sub
and
mov
adc
sbb
add
add
jne
xor
inc
mov
rcl
mov
dec
imul
adc
or
mov
mov
or
push
out
mov
pop
add
stos
and
push
xchg
add
loope
xor
inc
cld
pop
adc
stc
sti
stc
xorb
imul
pop
sbb
ffreep
nop
xor
fiaddl
push
test
push
jecxz
rclb
inc
out
test
jnp
pop
xchg
xor
add
mov
stc
push
inc
xor
sub
rolb
cmp
push
dec
icebp
jae
fcompl
cli
stc
negl
sbb
in
leave
lock
mov
cmp
or
lock
mov
pop
in
scas
or
mov
xor
push
sbb
lock
push
sub
push
sbb
mov
in
sbbb
jecxz
out
inc
jmp
sub
fsubr
frstor
mov
out
and
jg
push
aas
stos
sahf
int
adc
cmpsl
adc
out
out
inc
jecxz
push
aad
in
fcomps
mov
das
inc
nop
cltd
sub
dec
add
add
push
out
mov
out
lahf
add
fst
cmp
xchg
jbe
aas
sub
inc
mov
jmp
pushf
cmp
xor
inc
cwtl
shll
aaa
shr
xor
xlat
sbb
dec
mull
push
stos
sbb
hlt
mov
xor
inc
je
xlat
sti
cmp
lds
pop
call
aaa
int
add
mov
ljmp
dec
int3
scas
xorl
fdivs
hlt
test
mov
pushf
out
addl
lock
mov
out
dec
aas
out
mov
loopne
into
pop
jns
dec
js
loop
int3
je
xor
sbb
cs
push
push
lods
loope
add
push
pop
clc
out
xchg
push
loopne
push
push
inc
aam
aad
negl
inc
je
nop
add
add
mov
push
loope
sahf
mov
cltd
add
shr
or
sub
sub
mov
lods
pop
mov
sbb
icebp
push
cwtl
inc
in
sub
inc
xor
dec
scas
sbb
mov
mov
adc
rolb
sbb
xchg
in
push
or
mov
movsb
and
cmp
cmp
mov
pop
cwtl
and
pop
xchg
xchg
inc
fmul
jecxz
insl
mov
mov
inc
mov
adc
ss
dec
pop
mov
xchg
mov
fnstenv
leave
mov
push
xchg
push
cs
mov
xor
dec
fwait
adc
mov
aad
mov
mov
jle
mov
dec
out
loope
xor
cltd
push
cmpsl
lcall
xchg
cld
movsl
vmread
jmp
stos
inc
pop
jns
arpl
out
cltd
iret
mov
pop
mov
sbb
in
cmp
jnp
and
gs
push
lret
jle
xor
lock
push
push
pop
or
std
pop
es
call
jge
and
push
add
fcoms
sbb
or
mov
clc
mov
mov
mov
jno
pop
test
jge
or
jo
ds
lahf
sbb
and
push
mov
imul
mov
std
nop
push
shrl
jg
xor
data16
lea
in
add
adc
cltd
mov
push
pushf
lret
and
hlt
scas
inc
or
nop
lds
daa
mov
mov
aad
cmpsb
sub
adc
jne
dec
push
das
ret
mov
stos
ds
cmpsb
mov
sbb
xchg
add
xlat
ret
aad
push
lods
push
add
rorb
sub
mov
dec
lods
pop
shll
es
fsubrl
shlb
jb
pop
inc
and
adc
aam
popf
sub
addb
mov
push
shrb
lahf
pop
leave
js
jecxz
sbb
test
pop
mov
les
sbb
mov
iret
mov
lods
inc
int
and
sbb
in
jmp
outsb
stos
or
leave
mov
mov
out
popf
mov
dec
push
in
xor
push
add
cmpsb
es
push
mov
cmp
jg
fldt
pop
out
mov
xorl
adc
dec
mov
xchg
cmp
mov
dec
dec
test
jbe
push
lea
sbb
sar
rorl
xchg
les
or
add
iret
adc
std
jle
push
push
int3
adc
into
pop
jecxz
mov
incl
mov
test
ret
call
mov
mov
out
pop
sbb
loopne
js
jno
movsb
outsb
xchg
loope
dec
aaa
paddb
adc
sbb
mov
cld
fildll
aam
psllq
cltd
pop
int3
in
cwtl
mov
ret
push
jle
add
sub
xor
lds
insl
cmp
decl
stos
out
addl
jae
mov
add
and
sbb
dec
mov
test
and
stc
xchg
out
fstps
stos
cmc
fwait
jae
add
dec
pop
dec
xchg
jns
rcr
mov
mov
movsb
xor
dec
cmp
adc
aam
mov
insb
push
stos
or
add
push
and
stc
leave
mov
mov
and
call
repnz
mov
imul
fstl
les
stos
inc
dec
cmp
dec
shrb
cmp
or
clc
lahf
jg
mov
sbb
jno
xor
push
int3
test
cmpsl
cmc
or
mov
test
outsl
int
adc
jb
ret
mov
pop
push
sar
add
repz
repnz
push
cmp
inc
inc
cmc
lods
mov
dec
mov
stos
sar
es
xor
lret
xchg
dec
jle
or
outsl
mov
xchg
dec
and
mov
pop
dec
mov
rcr
fdivl
js
aam
dec
pop
lret
push
mov
das
clc
das
or
mov
pop
fisubrs
inc
lret
xchg
mov
mov
ret
sub
je
repnz
cmp
arpl
jnp
lds
inc
ja
cmpsl
jo
pop
dec
adc
iret
mov
push
call
xchg
stos
les
cmovl
mov
adc
xchg
dec
mov
mov
nop
sub
dec
push
mov
mov
jo
aaa
xchg
sti
test
dec
mov
sbb
inc
inc
cltd
stos
mov
push
aam
add
jmp
mov
and
popl
sub
aam
add
cmp
int
cmp
mov
insl
lods
stc
movsb
imul
repz
push
sub
jnp
aad
sbb
push
mov
das
bound
or
test
shr
bound
test
push
pop
push
add
scas
lods
sbb
inc
shl
rcll
jnp
cmp
test
jo
cwtl
and
loop
stos
mov
adc
mov
mov
sub
icebp
lcall
push
test
sbb
shlb
imul
int3
mov
sbb
jg
pop
mov
add
jae
dec
jl
adc
mov
xchg
sub
add
xchg
sbb
mov
dec
rcrl
push
fisttps
sbb
imul
push
push
in
out
sub
ljmp
xchg
mov
cmp
mov
movsb
jl
call
fidivrl
and
sbb
jle
iret
fadd
push
cmpsl
mov
lods
adc
loopne
shlb
jl
inc
data16
pop
rorl
pop
add
lea
mov
add
imul
adc
in
pop
in
or
push
outsb
or
jne
out
jmp
xlat
xlat
clc
dec
ret
enter
mov
les
mov
push
adc
mov
aad
mov
int
sbb
dec
inc
and
movsb
and
enter
call
mov
push
xor
dec
jb
sbb
pushf
xor
jmp
gs
inc
mov
jmp
push
bt
push
imul
jecxz
xchg
add
mov
sarl
popa
push
dec
repnz
cli
xchg
cmpsb
pop
xchg
in
push
mov
enter
js
aad
mov
subb
imul
mov
sbb
mov
sti
dec
pop
outsb
inc
aam
and
inc
jae
dec
mov
js
add
ljmp
cld
mov
loop
shl
out
pop
xor
out
or
fcompl
xchg
movb
inc
sub
lret
inc
or
cmp
sub
sbbb
mov
mov
and
inc
sub
xor
mov
das
ficompl
jae
outsl
stos
lds
cwtl
mov
clc
cli
jno
loopne
mov
jmp
adc
add
clc
aad
adc
shl
repz
roll
aad
hlt
cld
cmp
fwait
add
mov
addr16
cmpsb
test
xlat
jbe
and
cwtl
movsb
rclb
mov
mov
add
stos
fsubs
inc
pusha
not
cmp
and
adc
pop
sbb
xor
and
nop
and
cmc
push
js
push
pusha
pop
sbb
or
push
xchg
mov
jmp
jbe
dec
jmp
xchg
sub
les
bound
jns
push
adc
sub
mov
rcr
adc
xchg
push
ss
popl
adcb
insb
sahf
mov
pop
popf
orl
jecxz
push
jp
and
mov
xor
addl
es
les
ss
cmp
xchg
xchg
sub
xchg
jecxz
dec
jecxz
loopne
or
mov
icebp
movsl
push
movb
cmp
fidivl
jecxz
or
sbb
std
lahf
add
pop
mov
mov
aam
fnstcw
mov
insl
pop
loope
mov
or
sub
xor
lcall
push
pop
das
loope
stos
mov
jmp
insb
or
pop
out
sti
add
popf
mov
lds
iret
pop
pop
mov
xchg
cmp
jbe
add
pop
dec
xchg
bound
jge
mov
jge
add
mov
or
adc
negl
xchg
sbb
pop
stos
inc
aas
cmp
aaa
mov
mov
aad
rep
test
popa
in
xor
testb
cltd
lret
xchg
mov
pop
adc
inc
sbb
push
xlat
imul
add
push
cs
in
std
mov
xchg
dec
stc
adc
int
push
jle
adc
inc
inc
inc
lret
in
in
mov
lock
cmpsl
mov
ret
stos
or
and
ja
mov
mov
inc
mov
push
mov
fimuls
pop
xor
push
mov
pop
cmpsb
int
pop
loope
xchg
xchg
inc
outsl
insl
shrl
dec
pusha
adc
and
jp
mov
sub
pop
pop
mov
inc
insl
push
and
lods
les
inc
adc
fsubs
xor
mov
or
xor
aad
lahf
xor
icebp
adc
add
mov
ds
xchg
es
scas
loopne,pt
add
adc
mov
add
push
jnp
cs
mov
mov
ja
idivb
int3
xchg
in
mov
xchg
rol
xor
dec
lods
insl
add
cmp
es
in
xchg
pusha
loop
xor
mov
jb
test
adc
aad
pop
xchg
mov
idivl
aad
fdivl
push
pop
lret
orl
lea
pop
adc
ret
aad
out
call
or
movsb
mov
dec
int
test
mov
imul
mov
js
adc
pop
in
jbe
in
and
mov
loope
sub
cld
mov
pop
sub
add
pop
dec
jns
movsb
cmp
mov
xor
mov
xor
pop
movsl
or
out
inc
or
imul
or
shl
adc
pop
lahf
or
xchg
ss
outsl
jecxz
insl
mov
fmuls
push
cltd
repz
shr
xor
sbb
jne
mov
cwtl
pop
push
mov
repnz
mov
and
insl
cs
xor
mov
jno
pop
and
push
jbe
jmp
push
mov
mov
sub
sarl
or
push
aaa
adc
aam
inc
add
std
sbb
ja
sbb
xchg
push
leave
push
aas
outsl
sub
rcll
out
fisubrs
stc
data16
lcall
iret
inc
xchg
incl
stos
sbb
loopne
out
rorl
dec
int3
ret
out
dec
inc
and
movsl
outsb
decb
fldenv
pop
xor
sti
jne
and
pop
movsb
lret
mov
lcall
xchg
arpl
mov
jne
aas
xchg
stos
out
shr
sub
xor
sub
xchg
mov
daa
xor
lahf
mov
inc
ficompl
rcll
rcrl
jno
vorps
andl
shl
sbb
popf
sbb
inc
sub
mov
das
pop
jecxz
pusha
loopne
data16
jl
out
call
es
mov
sub
dec
daa
cwtl
daa
jno
dec
iret
mov
repz
push
cmp
sarl
add
add
cmpb
mov
inc
sbb
lds
pop
fldt
dec
dec
aad
addr16
fidivs
je
sub
cmp
add
jnp
xor
sbbb
shrb
fwait
arpl
stos
mov
jo
arpl
jmp
test
lret
setge
and
ss
jmp
add
lret
mov
repnz
xor
sub
scas
dec
cli
mov
pop
inc
cmp
inc
adc
pop
jnp
sbb
or
push
xchg
mov
test
xchg
lock
notl
loop
dec
ret
scas
sbb
pop
pushl
scas
mov
dec
lret
sbb
sbb
adc
jb
stos
fistps
daa
jo
int
or
or
pop
cmp
sarb
jg
jl
aaa
jmp
adc
or
loopne
push
js
rcrb
push
push
andb
jbe
mov
or
popa
jg
or
jo
lods
lret
lea
pop
sbb
mov
lock
jo
enter
sub
jecxz
repnz
jae
sbb
mov
test
sbb
adc
push
fsubs
cmp
roll
and
ljmp
leave
jae
test
mov
insb
sub
adc
adc
jae
out
dec
xor
cs
cmp
pop
imul
das
sub
xchg
fists
out
xor
inc
pop
cmc
jge
sti
and
cmp
subb
add
mov
mov
jmp
jo
aad
into
dec
in
and
jbe
add
bound
cmc
popa
aam
fsubl
in
fidivl
gs
lret
pop
loope
jecxz
sbb
mov
cmp
adc
xchg
loopne
push
or
jge,pt
out
xor
js
mov
add
xchg
pushl
push
jb
les
mov
mov
fs
stos
loop
in
jmp
fistpll
push
daa
test
test
sub
xchg
stos
mov
jecxz
ficomps
push
sbb
por
pop
xchg
pop
and
pop
push
inc
push
xor
dec
mov
inc
js
push
pop
jo
cmpsb
rol
inc
pop
inc
sti
mov
jae
lock
repz
sahf
sahf
sub
or
or
mov
mov
insb
lock
jns
mov
xchg
lods
pop
aaa
sbb
adc
mov
cmp
inc
xor
fcmovnbe
sub
sub
int3
lea
fdecstp
insb
cli
inc
ret
push
and
sbb
aaa
nop
jl
lods
lods
xchg
xchg
imulb
cld
xor
xchg
jecxz
or
jne
pop
mov
loope
inc
sub
bound
fs
jge
stos
jl
add
in
ljmp
xchg
nop
and
in
mov
aam
in
sbb
ret
pop
fucom
popf
andl
movsl
outsl
xor
insb
mov
sbb
xor
lea
cmp
dec
test
arpl
dec
sbb
push
xchg
or
sbb
int
push
hlt
pop
mov
xchg
mov
cmp
jno
das
jnp
std
push
mov
std
or
mov
aas
bound
pushf
ficomps
inc
inc
cmpsb
cmp
pushf
je
outsl
mov
adc
gs
clc
adc
fisubrs
sti
lret
jae
cmpsb
and
aam
cmpsl
fildl
enter
push
xchg
imul
xor
adc
inc
bound
iret
push
push
cmp
push
leave
lods
jmp
mov
cmp
fisubs
and
fsubrs
imul
shrb
xchg
scas
mov
stc
jno
orb
push
fwait
adc
scas
cmp
inc
lret
sub
pop
mov
push
inc
sbb
sbb
cmc
and
and
mov
clc
mov
jge
sti
and
rclb
xchg
insl
jecxz
sbb
pop
inc
adc
adc
xor
fs
out
xchg
insl
xchg
movsb
das
das
sub
pushf
sti
mov
jge
dec
mov
xor
adc
int3
or
xchg
sub
mov
mov
cs
mov
ja
pop
dec
nop
mov
lods
mov
jns
dec
in
jge
adc
loopne
xchg
pusha
in
jmp
xor
add
fs
cmp
xchg
sub
sbb
mov
decl
pop
sub
push
adc
repz
push
xchg
or
leave
sub
mov
mov
leave
cmc
lahf
std
adc
ret
repz
add
sub
dec
clc
gs
int
pop
das
xchg
fwait
iret
sbb
cltd
pop
outsb
stos
sbb
movsl
jg
fisubrl
adc
or
mov
jl
out
mov
je
cmpl
jnp
or
aad
mov
jg
je
cmc
inc
xor
outsb
or
add
ds
mov
dec
pop
addr16
mov
lret
fiadds
mov
lahf
div
test
scas
ljmp
lea
add
jb
and
dec
ret
shlb
pushf
xchg
loope
or
jbe
arpl
pop
sti
shlb
aas
cmpb
stos
jp
faddl
xor
jle
sub
dec
aas
aaa
inc
inc
ss
sbb
cld
fistps
das
dec
sbb
xchg
mov
lods
les
mov
adc
popa
jg
jns
jnp
movsl
push
outsb
addr16
ffree
xor
rolb
add
inc
aas
jge
adc
sub
push
into
cmp
loopne
inc
es
ficoml
scas
fwait
xor
xor
lret
xchg
add
or
jo
push
pop
mov
andb
mov
out
movsb
shll
mov
cld
push
lods
movsb
scas
mov
cmp
add
add
xchg
aam
cmp
data16
mov
stos
adc
popa
stc
xor
aas
push
addr16
pop
dec
shlb
jno
int3
stc
mov
outsb
lods
mov
sarl
jae
or
inc
mov
sub
push
cmovo
push
and
addl
jmp
mov
jecxz
and
mov
lret
mov
int
cmp
mov
in
jns
xchg
dec
lret
push
cmp
jg
repnz
mov
sbb
jno
pusha
xor
pop
xlat
sbb
aas
scas
jmp
scas
and
or
data16
mov
loope
pop
shlb
mov
fucomip
mov
std
call
xor
push
popa
jns
repnz
sahf
mov
int3
sub
push
xor
lds
lea
cmp
sub
stos
data16
cmp
adc
ljmp
jbe
sbb
out
jecxz
cmp
xorl
mov
xchg
mov
fwait
leave
cwtd
divb
enter
iret
shlb
mulb
cmp
add
jge
loopne
jno
stos
lods
jnp
subl
dec
pop
inc
add
jne
mov
inc
pop
mov
mov
imul
sbb
jmp
adc
mov
rclb
push
ja
mov
iret
push
sub
lock
inc
movsl
std
mov
insl
roll
in
or
or
lods
mov
dec
lret
in
sub
push
dec
pop
in
ret
push
cmp
push
pop
lahf
push
xchg
push
outsb
lahf
push
pop
add
xlat
loop
pop
xor
mov
lret
jnp
mov
adc
inc
mov
inc
jge
enter
idiv
int
lret
lret
out
ret
sbb
pop
cs
or
or
cld
mov
mov
inc
dec
cltd
xchg
dec
cwtl
push
leave
or
stos
movsb
adc
cld
sub
cltd
lods
sbb
jnp
nop
lods
push
outsb
popf
sarb
imul
cmc
or
inc
sbb
pop
clc
push
xchg
int3
cltd
mov
test
jle
sbb
popa
push
cmpsl
pop
loop
pop
dec
ss
push
divb
sub
add
pop
inc
iret
gs
scas
inc
mov
cmp
xor
mov
add
mov
test
cli
repz
call
movsb
sub
popf
mov
sbb
sub
pop
xchg
jnp
dec
jno
jb
or
push
andb
cmpsl
data16
sbb
dec
sahf
scas
cmp
or
add
sarl
cmp
sbb
popf
sbb
jae
pushf
adcl
aad
mov
fs
jb
push
inc
sbb
aas
push
iret
xor
je
ja
arpl
aas
lahf
leave
mov
popa
cmp
pushw
das
xlat
pop
pop
aas
add
xchg
lahf
icebp
cmp
insb
lods
adc
data16
jp
pop
sbb
adc
lret
stos
je
pop
ret
sub
popa
dec
or
inc
sarl
out
mov
inc
adc
lret
and
lahf
mov
fidivl
lea
dec
mull
repnz
flds
ftst
out
shll
xchg
stc
dec
sarl
int
cmp
pop
mov
fldcw
xchg
ret
pop
cmc
cmpl
fxch
inc
cmp
rcrb
pop
jo
jp
jno
repz
fs
push
mov
add
call
call
insl
xor
jno
mov
out
adc
xor
or
test
push
stos
add
and
test
popa
push
push
xor
jg
enter
add
xchg
jae
mov
stc
cmp
aad
add
cmpsb
push
dec
loopne
fwait
jge
mov
jle
mov
ljmp
es
aam
popf
out
cmpb
stc
pusha
int3
test
mov
and
jo
cmpsl
xchg
adc
nop
lretw
jmp
xorb
pop
rcll
mov
mov
add
jnp
fcoms
ss
je
bound
mov
lahf
sub
icebp
mov
inc
jne
push
xor
js
mov
or
mov
add
bound
cwtl
in
fdivrl
push
cwtl
mov
out
xor
lea
aaa
nop
loope
lret
mov
js
scas
cmp
jno
adc
je
fwait
pop
mov
out
cmp
sbb
enter
mov
call
call
mov
inc
mov
sbb
outsb
mov
add
cmp
sub
push
mov
je
xchg
lcall
gs
cwtl
cltd
cmpsb
aad
mov
icebp
xor
or
sub
jne
or
mov
popf
lds
dec
mov
and
add
lahf
lods
pop
push
gs
xor
jmp
ror
and
gs
pushf
mov
ljmp
xor
mov
movsb
sbb
test
xor
notb
int
ret
es
lret
jle
sub
mov
cmp
mov
js
mov
cmp
test
ret
or
fbstp
cmp
mov
pop
jnp
fnstenv
pop
test
cmp
push
fwait
in
mov
inc
push
mov
pop
in
cmp
std
jb
mov
xchg
sahf
int3
sbb
cmpsl
xor
test
pop
lods
push
pop
cs
rcl
pop
mov
mov
std
xchg
pushf
js
xor
movsl
jge
push
arpl
xchg
repnz
jmp
out
and
dec
cwtl
ffree
scas
sub
xor
or
repnz
fstps
bound
pop
mov
sub
mov
addr16
mov
adc
out
lret
sub
je
cli
orl
lret
adc
test
cmpl
push
inc
mov
inc
lods
jge
or
xchg
test
sahf
js
in
mov
sahf
dec
inc
cmpsl
stos
insb
into
cmp
xor
test
cmp
or
fimull
dec
xchg
popa
ret
rcrl
shl
int3
lods
mov
push
jg
aam
cli
sbbl
sub
pop
pusha
pop
testl
out
xchg
add
sbb
jno
les
arpl
rolb
out
inc
aas
cmc
mov
hlt
push
jmp
fildl
repnz
cmpsl
movsl
cld
xchg
jbe
shl
inc
or
mov
andl
dec
jbe
aam
arpl
cld
jmp
ds
out
pushl
and
mov
das
lret
push
add
cwtl
sti
jbe
aam
fstps
repnz
inc
pop
mov
js
push
mov
pop
add
or
add
fcmovbe
lods
insl
and
loop
pop
jg
adc
out
and
sbb
ret
subl
pop
mov
dec
fadds
inc
xchg
stos
aaa
cld
pop
sub
add
jecxz
jbe
or
push
push
push
mov
loopne
mov
scas
je
scas
or
cmp
cli
ja
insl
add
adc
rcrl
fistps
sahf
cs
add
sub
insb
pushf
mov
aaa
in
insl
adc
scas
stc
and
mov
mov
scas
incb
jle
adc
and
mov
mov
mov
rorl
mov
jp
daa
call
mov
lock
loope
cld
cli
cmp
pop
lret
inc
xor
mov
sub
xchg
fistpl
cwtl
into
jge
ret
cli
jmp
inc
push
fnstsw
pusha
je
pop
fnstenv
lock
mov
int
mov
fisubs
inc
outsl
outsb
testl
mov
out
dec
iret
and
jns
jp
fnstsw
mov
mov
call
cmpsb
mov
jne
inc
in
mov
dec
ljmp
outsb
data16
add
push
or
jecxz
mov
xchg
in
add
inc
cmpsl
dec
fwait
sbb
call
dec
pushf
add
dec
and
mov
cmp
aam
insl
stc
pushf
adc
mov
jns
inc
cmp
aad
pop
fistps
xor
clc
sub
hlt
jb
fisubrs
xchg
jle
out
pop
decb
mov
inc
clc
pop
cltd
mov
cmp
test
mov
shll
pop
mov
repz
inc
ds
mov
in
test
pop
hlt
mull
and
popa
jl
sub
imul
sti
iret
cld
stos
xchg
push
adc
cmp
loope
add
ja
nop
jg
pusha
or
or
pop
xchg
aam
xchg
mov
insl
cld
call
xor
stc
inc
mov
inc
pop
inc
dec
lcall
cld
push
test
xor
jnp
sbb
sub
dec
cmpsb
cwtl
jle
pop
popf
mov
mov
int3
xor
push
push
xchg
dec
mov
xor
andl
popa
mov
insl
les
ds
cmpsb
inc
fbld
jns
test
out
shll
xor
repnz
mov
out
cmc
out
test
fwait
push
repz
or
jmp
sub
lods
out
les
sahf
adc
insb
xor
mov
cltd
lret
add
pop
cmpsl
sarb
lock
jg
or
movsb
aam
out
repnz
scas
xchg
lcall
out
js
inc
xor
into
push
pop
movsl
lods
fldt
daa
pop
adc
dec
stos
cmpsl
jnp
mov
push
and
lea
dec
dec
adc
jne
pop
loop
in
lock
push
mov
sbb
cmpl
lahf
jmp
bound
nop
movsb
mov
dec
sahf
mov
fsubs
push
popa
out
sbb
loopne
fnstcw
adc
popa
aam
pop
movsb
push
jae
sti
pop
and
add
mov
ffree
test
push
and
mov
aaa
pop
es
push
pusha
je
push
push
and
adc
fimuls
jns
push
stos
mov
ficompl
jnp
push
mov
divb
shll
jo
push
repnz
jl
adc
and
sbb
push
mov
shl
cmpb
fidivl
mov
ss
fsubr
in
cmp
push
mov
sub
cmp
subl
mov
inc
lahf
sahf
inc
inc
rorb
iret
push
gs
loope
clc
jge
add
inc
jae
fucom
inc
pop
stc
mov
sbb
push
sbb
dec
inc
jmp
adc
jne
cmp
or
sbb
xor
xor
orb
sahf
mov
and
xchg
in
pop
inc
aam
mov
mov
xlat
int3
lret
out
pop
popa
cld
hlt
iret
pop
incl
and
push
and
sub
or
mov
adc
outsl
jecxz
xor
test
stos
and
in
out
push
sbbl
bound
out
imul
mov
sahf
rcll
notl
push
cmp
mov
jne
inc
add
dec
movsl
or
sub
jmp
fwait
mov
jns
mov
mov
lret
xor
es
pusha
int3
in
pop
push
sub
rolb
lcall
enter
xchg
inc
aaa
pop
cmpsb
or
jge
pop
push
scas
gs
push
shll
out
pop
add
push
inc
jae
lahf
test
and
xchg
int3
popa
add
cmp
jl
addr16
jb
inc
adcb
push
in
push
pop
and
pop
std
in
mov
loopne
fxam
mov
mov
js
adc
in
mov
cltd
and
or
adc
mov
lods
pusha
dec
push
mov
dec
in
mov
and
adc
mov
add
in
push
nop
mov
lahf
jo
sub
and
xchg
test
icebp
ds
sub
or
scas
jb
xor
sahf
bound
imul
pop
and
cmp
test
es
mov
adc
scas
push
loop
xchg
jnp
xchg
cmp
in
bound
jge
pushf
sbb
mov
shll
loop
and
das
aaa
rcll
and
lods
sub
mov
insb
test
cmp
mov
outsl
aam
push
jmp
daa
jnp
sbb
stos
pop
adc
pop
xor
dec
sbb
rolb
sbb
call
xor
cmp
outsl
sub
fstl
cmp
imulb
xchg
push
int
lcall
jb
in
aam
por
sarb
int
add
out
sar
push
push
jecxz
cltd
fs
cld
mov
jo
les
pop
ret
pop
push
popa
ds
into
insb
mov
mov
add
pop
jbe
enterw
and
and
fistpll
fstpt
aaa
sbb
xor
mov
loop
mov
pop
or
outsb
out
fs
jl
inc
and
inc
ret
cmp
xchg
data16
add
pop
or
push
mov
pop
test
sub
andl
push
jge
sbb
lds
mov
xchg
cmp
sub
inc
daa
xchg
ror
jle
fcmovb
xchg
pop
idivb
or
jp
pop
sub
ljmp
call
jge
aad
jmp
mov
jecxz
aaa
sub
sbbb
inc
test
sarb
mov
repz
psubsw
sub
jg
imull
pop
mov
ss
add
sub
push
out
push
or
iret
outsb
test
outsl
xchg
fs
mov
testb
inc
mov
aad
jno
test
lcall
scas
mov
mov
daa
fistl
xchg
add
and
movsb
out
aaa
ret
sbb
sbbl
ds
out
mov
xor
inc
cli
leave
xor
jmp
sti
icebp
movsl
add
cmpsl
pop
sub
fidivrs
cmp
cld
outsl
push
ret
sti
sbb
adc
sti
sahf
lods
inc
mov
xor
movsb
or
divb
sti
push
enter
pop
lods
loope
jns
mov
scas
sbb
xchg
dec
inc
dec
aam
stc
repz
mov
sbb
jp
loop
jg
push
sub
dec
push
xchg
mov
nop
inc
test
fisttpll
and
loope
clc
ja
test
mov
lret
std
mov
and
push
inc
mov
push
cwtl
sub
fisubrs
pushf
add
std
imul
ror
lret
push
xor
inc
lret
ss
cltd
inc
jl
mov
add
pop
and
lret
ffreep
pop
out
test
test
pusha
or
push
cmp
mov
xchg
jmp
sbb
mov
int3
pop
sbb
or
inc
aas
cmp
mov
and
fs
fsubl
cmp
mov
lcall
fstps
inc
xchg
in
mov
ja
inc
mov
xor
hlt
arpl
or
mov
fisubrs
iret
repnz
aas
mov
cld
add
push
push
shlb
pop
add
or
jae
int
xchg
jb
adc
push
push
aaa
mov
or
iret
stc
or
xchg
adc
aas
fisttpl
stos
mov
in
in
repz
adc
es
and
leave
out
lret
push
sbb
fnstcw
into
jecxz
and
pop
loopne
push
jg,pn
das
xorl
pusha
add
call
jo
fwait
xchg
dec
xchg
js
sub
inc
add
and
out
pop
cltd
imul
iret
divb
addl
and
sbb
jmp
push
jns
rcrb
je
rcrb
cmp
mov
call
mov
hlt
lret
in
cmp
mov
stos
jge
test
in
push
push
mov
fsubl
in
sarl
push
sub
push
add
mov
sub
inc
outsl
mov
lock
cltd
aaa
ret
and
out
es
adc
imul
jno
jl
mov
rorl
inc
adc
pop
shll
add
lock
pop
jno
imul
lock
add
fldt
nop
xchg
lret
xor
push
imul
sub
std
icebp
jg
es
or
fxch
sbb
addr16
adc
and
movsl
hlt
or
outsb
je
cmp
mov
mov
mov
pop
testb
jg
adc
lret
adc
pop
nop
aad
xchg
cld
loope
xchg
lret
jg
xchg
jno
dec
es
jb
divb
fdivrp
cmc
sub
jg
test
mov
sbb
mov
pop
in
sub
xchg
push
dec
adc
add
push
dec
lods
xchg
xor
cli
scas
outsl
loop
xor
and
in
and
adc
push
lea
xchg
ds
aad
add
je
jnp
and
xchg
and
mov
sahf
xchg
or
mov
add
push
lret
aam
repnz
outsb
pushf
jg
push
dec
sbb
call
or
mov
sbb
push
and
hlt
and
xchg
pop
inc
dec
mov
mov
cltd
push
xchg
test
mov
dec
xchg
or
je
ds
popa
mov
mov
imul
lahf
xchg
mov
ror
mov
in
imulb
ljmp
dec
into
xchg
lods
cmp
sub
or
sahf
loopne
subb
jb
out
fstpt
cmp
loopne
sti
lods
outsb
mov
pop
lahf
fbld
fldl
idivl
fiadds
mov
cld
frstor
jge
sahf
movsb
mov
pop
mov
mov
stos
in
ljmp
shlb
iret
mov
cmc
jo
aas
and
rcrb
push
test
dec
test
and
push
mov
addr16
add
lods
jmp
notb
jb
sbb
adc
jmp
cld
xchg
lcall
sub
or
or
gs
shll
add
xchg
int
test
jp
and
ja
pop
dec
push
lcall
mov
sahf
push
addr16
js
push
add
pop
sbb
cs
daa
imul
adc
call
sbb
iret
pop
cld
bound
fwait
stos
cwtl
dec
inc
aam
mov
sbb
xchg
ret
xchg
sub
js
jge
sub
andb
mov
jle
mov
idivl
or
xor
lods
sbb
arpl
aaa
mov
je
flds
jp
arpl
std
int
cmp
adc
lahf
cs
jl
adc
aad
or
mov
test
call
inc
fdivrs
pusha
into
or
rolb
add
loopne
xchg
mov
jmp
cmp
sahf
adc
and
push
insb
aad
cmp
or
adc
adc
sub
and
mov
or
aaa
ds
mov
mov
or
xor
mov
and
sbb
aaa
ds
aaa
adc
pop
aam
daa
bound
mov
mov
push
mov
cli
pop
aam
cwtl
sbb
outsl
fmuls
cs
je
mov
adc
getsec
jl
incb
aas
sarb
rep
dec
xchg
add
dec
jl
aad
sub
mov
mov
lcall
cld
lock
mov
xchg
popa
inc
push
enter
inc
push
popa
pop
stos
pause
sbb
sub
xorl
mov
jo
ret
mov
ljmp
xor
fs
negl
xchg
inc
sbb
jae
stos
push
or
subb
dec
mov
mov
test
cmp
push
hlt
mov
adcl
mov
fcoml
int3
stos
mov
lock
lcall
out
lods
std
in
xchg
pop
mov
rclb
std
adc
pushf
mov
ja
jno
fsubl
mov
mov
and
loopne
xchg
fiadds
and
loope
ljmp
dec
adc
mov
hlt
pop
in
xor
scas
outsb
cmp
outsb
gs
xorl
jmp
cmp
mov
rorb
jns
sub
stc
xor
jmp
jle
xorl
shll
add
fdivl
cwtl
daa
push
faddl
leave
lds
push
push
jg
imul
jg
fs
dec
shl
push
and
imul
dec
gs
dec
jns
ficomps
andb
push
xchg
dec
push
push
or
sbb
adc
push
push
add
xchg
in
mov
sub
imul
mov
cli
push
cmp
and
addr16
inc
mov
mov
push
xor
mov
pop
adc
and
daa
gs
popa
mov
push
push
mov
test
clc
sbb
scas
add
outsl
dec
jb
cmp
dec
mov
lods
test
dec
popf
jle
int3
xorb
lock
xchg
fs
aam
fcoms
xchg
push
sub
xchg
add
lods
xor
nop
mov
aam
lods
push
cmp
jp
add
ret
jnp
dec
cmpsb
insb
lcall
es
jo
test
pop
lods
xchg
nop
aas
lock
psrld
sub
fbld
dec
cli
xor
loope
mov
lock
aam
arpl
sub
dec
lret
stos
or
pop
jg
jmp
lods
in
in
orb
insb
cmp
xchg
push
rcrb
sbbb
or
inc
fcmovne
add
test
out
push
push
push
jp
clc
fisttps
mov
and
or
cmpsl
add
push
pushf
lock
pop
cmp
sub
test
addl
jae
or
mov
cmp
jbe
push
in
pop
mov
dec
das
push
or
fcoml
fildl
cmp
repnz
xchg
or
push
inc
cmpsb
subb
or
cltd
fcmovbe
std
cmp
inc
pop
stos
aaa
mov
dec
lds
sbb
lret
shll
int3
subl
cmpsl
inc
mov
decb
pop
mov
dec
inc
pop
rcrl
pop
mov
fildll
xchg
arpl
fstl
jge
and
or
out
adc
xlat
ficompl
pop
push
adc
sti
xor
ret
mov
xchg
inc
and
outsl
lret
bound
push
cmpsb
data16
or
mov
lahf
xchg
leave
xor
pop
pop
sti
push
sbb
xor
stc
mov
enter
cmp
sbb
pop
divl
cmp
ljmp
cwtl
mov
ljmp
mov
push
mov
mov
dec
aaa
dec
inc
lods
sub
sbb
imul
ss
aaa
push
sbb
mov
adc
movsb
out
mov
lret
sbb
inc
daa
mov
icebp
pop
mov
cmpsb
mov
or
inc
cmp
adc
lret
aam
ss
or
mov
adc
nop
xor
cmp
xor
aaa
adcl
fcomip
popf
push
pusha
in
das
or
gs
aas
xor
inc
inc
push
cmp
xchg
imul
jnp
daa
pushf
hlt
jne
cmp
push
mov
sahf
push
cwtl
inc
mov
mov
in
insb
jg
and
inc
mov
insl
leave
pop
pop
adc
mov
inc
mov
repz
imul
sbb
bound
je
in
scas
cmpl
xor
xor
mov
aaa
pusha
sbb
sub
leave
scas
pop
es
shll
fmull
pop
cmpl
ja
mov
in
jmp
mov
adc
xor
dec
push
xchg
stc
sub
enter
cli
sarl
or
inc
jmp
mov
and
mov
mov
leave
in
cmp
outsb
aas
fidivl
dec
leave
mov
xor
push
das
inc
jns
fisubrl
dec
shrb
adcb
shlb
cmpsl
pop
xor
insl
clc
out
into
hlt
inc
mov
push
xchg
jne
shlb
pop
sbb
jns
data16
cmp
subb
aaa
mov
into
push
xor
mov
sub
or
lret
push
aad
leave
ret
outsb
lahf
fildll
mov
jl
mov
adc
cld
and
pop
mov
sbb
orb
push
pushf
cwtl
push
jbe
addb
test
sub
add
jne
ja
out
push
xchg
pop
into
push
inc
adcl
jno
pop
inc
sbb
inc
add
push
bound
add
outsl
lds
dec
imul
nop
insl
jg
cmp
inc
andl
sub
out
add
mov
movb
jns
mov
jle
mov
add
rcrl
sbb
out
cmp
addr16
das
aam
dec
pop
and
inc
or
lods
push
insl
into
bts
sub
addr16
xor
mov
adc
shr
sbb
call
inc
sub
adc
mov
or
xchg
lahf
dec
lret
clc
call
xchg
add
push
jae
sub
popa
mov
sub
in
pop
sub
imul
int3
aas
jnp
cmp
pop
pop
xchg
sbb
xchg
rcrb
hlt
push
inc
adc
mov
mov
jnp
pop
xchg
adc
mov
icebp
push
cwtl
push
or
repz
bound
mov
pop
sub
cli
out
dec
jmp
inc
jmp
les
sub
jb
mov
scas
adc
mov
mov
push
imul
lock
out
add
mov
test
add
mov
ljmp
repz
testl
adc
push
xor
sub
clc
lea
movsl
rcr
dec
sti
rol
pop
aad
in
inc
add
jle
jnp
pop
inc
push
jp
and
lods
iret
push
loop
jmp
mov
xchg
out
fsubs
xor
dec
pop
jg
pop
xchg
repz
int3
adc
jnp
pusha
sti
and
fsubr
in
sbb
insl
gs
js
dec
pop
lret
cmpsb
and
je
pusha
je
xor
popaw
xchg
lahf
sub
and
jne
cmc
lock
and
ret
imul
adc
push
push
push
mov
lret
rcll
testl
sbb
xchg
int3
cmp
mov
test
jmp
leave
shlb
mov
push
movsl
ja
mov
rcl
cwtl
lahf
sbb
fxch
pop
data16
je
loopne
jno
rcrl
fidivrs
hlt
in
unpckhps
fldcw
sub
or
sbb
scas
mov
dec
lahf
pop
lret
lea
cmp
lods
fnstsw
stos
mov
mov
jecxz
pop
xchg
shl
lcall
das
mov
les
mov
xlat
add
inc
rclb
mov
pop
sbb
out
daa
out
dec
inc
repz
call
in
enter
or
fcompl
mov
ljmp
and
cmc
adc
mov
push
jns
sbb
popa
clc
xorb
dec
jae
je
sub
mov
mov
add
fs
into
inc
cmp
mov
adc
loopne
jb
inc
mov
pushf
arpl
push
push
mov
int
iret
testl
cmp
push
add
fstl
dec
xchg
adc
fbld
mov
outsb
sbb
mov
mov
lock
or
pop
mov
cmpsl
fcomp
pop
repz
test
jno
daa
out
lret
test
fdivp
ss
or
daa
test
cmp
movsb
mov
ror
lods
cwtl
adc
enter
negb
pusha
rolb
push
lock
test
test
jp
dec
xlat
pop
dec
enter
mov
inc
sub
lds
add
add
mov
cmp
out
outsb
aaa
or
mov
repnz
pop
or
dec
cld
adc
sarl
imul
repnz
push
push
test
mov
sub
xchg
jne
imul
or
pushf
jecxz
fisubrl
outsl
push
cli
pop
out
test
adc
push
xor
std
push
or
or
lock
int
cmovp
ss
jno
inc
jge
push
sbb
pop
ret
pusha
mov
cmp
mov
dec
addr16
mov
push
pop
mov
pusha
push
sbb
addb
add
add
ret
adc
fisttps
das
fstpl
sbb
aam
add
sub
push
jge
cs
shl
cmp
xor
and
xchg
lret
loope
call
mov
inc
xor
and
popa
sub
test
out
lcall
pop
and
jmp
push
adc
dec
shl
jbe
aam
andb
dec
mov
lea
adc
and
fnstsw
inc
cltd
mov
ss
sbb
sub
mov
fnsave
lcall
inc
addr16
std
jg
fisubs
dec
xchg
ja
out
sub
pop
mov
repz
call
shlb
mov
in
fwait
jecxz
divl
sbb
icebp
mov
add
fdivrs
insl
push
fimuls
lock
pushf
orb
ret
aas
mov
rolb
mov
mov
pop
insb
fs
scas
cmp
ss
outsl
inc
adc
inc
or
in
inc
jmp
jecxz
mov
dec
jle
fcoms
cwtl
dec
or
ffree
xlat
sub
js
sbb
cmp
out
jne
sbb
sbb
jge
or
add
std
cld
addr16
mov
xorb
mov
push
ljmp
xchg
xor
fisttps
jle
repz
push
push
or
inc
add
dec
inc
aaa
push
nop
idiv
in
mov
lret
sub
pop
aas
or
idivl
xor
fnstsw
imul
cs
stos
pop
sub
mov
in
aam
mov
dec
lods
fs
js
mov
sub
or
mov
rcrl
cmpsl
adc
jnp
xchg
negl
xchg
lds
hlt
inc
in
xlat
iret
cmp
adc
sbb
adc
jmp
fcomi
popa
sub
xor
imul
iret
adc
mov
jb
sbb
inc
addr16
leave
movl
ja
insl
dec
jmp
shrb
push
lret
imull
filds
shll
sub
jge
jnp
xchg
shl
ficompl
divl
cmp
insl
push
push
in
push
mov
roll
out
fildll
inc
xlat
in
dec
lahf
pusha
movsl
add
loopne
popa
insl
cmp
mov
std
xor
sahf
movsb
shll
jnp
into
movsl
cmp
mov
loop
inc
insb
leave
jg
adc
out
dec
clc
mov
data16
pop
pop
fcmovnu
lcall
cmp
add
sub
sti
pop
rcll
and
mov
mov
call
scas
dec
dec
push
jle
mov
movsb
ss
sahf
adc
cmp
cmp
loop
mov
jp
push
add
jg
fdivr
icebp
mov
push
xchg
jle
dec
insl
loope
or
sub
fdivrp
pusha
test
push
cltd
std
pop
je
loope
lret
mov
cmp
imul
jbe
mov
popa
out
sbb
xchg
pushf
pop
mov
pushf
dec
and
mov
popf
bnd
sti
sbb
adc
push
dec
ffree
cmpsb
mov
enter
or
jbe
adc
add
leave
mov
xchg
adc
ja
cli
ja,pn
ret
scas
stos
in
lock
outsb
xchg
outsb
xchg
fs
cmpl
push
push
jbe
xchg
clc
in
cwtl
hlt
mov
or
cld
mov
mov
add
jp
aas
addr16
dec
mov
std
or
push
xchg
jae
fldenv
imulb
add
xchg
pop
and
mov
loop
nop
pushf
cld
jno
les
or
xchg
xor
dec
fldt
or
ds
mov
dec
push
cmpsb
orb
cmp
je
jl
mov
lcall
lea
jp
and
mov
jb
fwait
addr16
lret
xchg
adc
aaa
cmp
fstp
rorb
xchg
jecxz
or
mov
lret
inc
sub
pop
scas
xchg
aaa
adc
adc
jno
cmp
lcall
pop
push
push
leave
jle
dec
add
popf
push
stc
out
mov
clc
loopne
pop
aad
xor
jb
mov
cmp
data16
cmp
movsb
bound
add
test
pop
dec
xchg
es
imul
push
incl
mov
mov
or
or
lret
test
and
arpl
ja
loope
adc
or
dec
fwait
lret
aaa
dec
cli
pop
rorb
cmp
pop
daa
sbb
xchg
movsb
icebp
or
scas
daa
or
lods
add
push
rolb
test
out
sahf
imul
push
sub
aad
imul
pop
icebp
xor
cmpsl
std
gs
clc
mov
xchg
rcll
idivb
cmpsl
test
mov
mov
data16
cltd
loope
gs
popf
test
adc
aas
push
pop
nop
mov
sahf
push
push
jns
sub
insb
cmp
cmp
call
push
mov
pop
andb
aaa
mov
push
pop
jmp
push
inc
jns
inc
dec
or
ds
repz
fisubrl
cmp
xlat
stos
inc
daa
sub
stos
fdivrp
or
sub
sub
aad
push
stos
movsb
inc
push
addr16
and
jg
shlb
jno
add
cmp
xor
jmp
mov
dec
fisubl
sbb
out
testb
mov
push
jb
sarb
fwait
xor
ss
imul
xchg
mov
dec
xor
sti
aaa
and
pop
xor
ja,pn
or
xchg
sbb
add
dec
inc
sub
stc
dec
mov
jb
iret
lock
mov
pop
xchg
popa
add
xchg
data16
int3
mov
aam
ret
lds
adc
mov
sbb
movsl
mov
pop
jbe
jl
mov
ljmp
sbb
sarb
xchg
mov
ss
in
xor
pop
dec
test
dec
mov
cmp
jns
mov
out
ds
call
mov
insl
test
dec
arpl
and
cwtl
add
shr
and
mov
xorl
addr16
sub
push
dec
int3
pop
mov
scas
adc
push
stos
mov
mov
mov
scas
xchg
push
repnz
add
adc
cmc
cmp
out
int
push
shr
push
loop
mov
jg
push
mov
iret
pop
pop
mov
loope
into
inc
cs
xor
mull
cmp
jns
jg
push
mov
es
mov
jecxz
sahf
pusha
mov
aam
subl
mov
lods
mov
add
in
fcmovb
std
aas
inc
xchg
arpl
cmp
or
popa
cld
push
hlt
stc
push
call
mov
and
cmp
nopl
and
push
icebp
jb
push
pop
shr
sub
inc
pop
sbb
stos
shll
in
jmp
mov
neg
inc
arpl
mov
pop
and
push
icebp
aam
xchg
mov
lods
sub
clc
cmp
repz
js
mov
enter
sti
inc
push
lahf
mov
jmp
dec
dec
xor
idivb
jl
add
push
or
cmpsl
sub
aad
stos
test
jne
or
jns
lret
sbb
cmpsb
pusha
out
gs
sahf
jae
repz
cwtl
cmp
and
imul
mov
push
cmp
push
mov
cmp
cmpsl
jo
sub
and
push
lods
out
pop
test
repnz
push
mov
jns
insl
add
in
push
push
aam
rclb
adc
add
inc
imul
imul
add
adc
mov
pop
dec
and
sahf
mov
jl
in
xchg
cmp
lds
fldt
outsb
xchg
push
mov
or
aaa
and
mov
pop
and
or
in
xchg
pop
fistps
sbb
rcr
mov
sbb
fdivrl
sub
mov
cmpsb
mov
jne
rolb
add
daa
cmp
hlt
scas
mov
jecxz
f2xm1
cmpsb
or
dec
nop
mov
mov
sub
lds
arpl
int
pop
iret
test
inc
fs
sbb
xchg
test
cli
call
cmp
cmpsl
xor
jnp
pushf
hlt
inc
push
popf
mov
adc
dec
outsl
mov
inc
or
in
sbb
xor
dec
add
adc
rcll
push
cwtl
xchg
insb
pop
inc
jp
jne
dec
pop
mov
push
loop
lock
test
ljmp
bound
mov
psubw
push
xor
mov
and
ja
cli
sbb
dec
jbe
adc
push
insb
pop
lahf
fildl
xchg
ja
mov
xchg
test
aaa
test
andl
add
cmp
ret
adc
jmp
les
xchg
xchg
nop
sbb
neg
lea
sbb
repnz
lods
jbe
mov
ret
mov
add
xchg
imul
lcall
lahf
flds
ret
mov
jne
jp
pop
mov
mov
les
push
ficompl
cmc
and
repz
mov
mov
and
push
cwtl
imul
and
repz
jo
inc
xor
push
cmp
icebp
xor
pop
pop
jecxz
out
add
in
insb
sar
das
xor
jl
cmp
jno
pop
popa
sbb
sbb
and
test
xlat
sub
cs
push
jge
xlat
xchg
mulb
sti
inc
imul
sarb
cs
mov
jl
jns
pop
push
mov
add
or
fstpt
mov
mov
sbb
loopne
xchg
gs
stos
adc
push
mov
and
shlb
out
jbe
push
inc
dec
sub
add
fstpt
jbe
ja
ret
data16
shrb
les
loope
push
sbb
int3
repnz
and
notl
xor
int
stos
test
push
or
daa
in
lds
inc
leave
adc
fs
or
pushf
push
rclb
cmp
add
mov
lods
cmp
or
hlt
inc
mov
cmp
icebp
mov
aam
ret
jb
rclb
xchg
scas
xlat
cwtl
mov
lea
inc
leave
lret
sub
xchg
xor
scas
or
and
and
insb
dec
jl
cmc
gs
loope
adc
rorl
pop
je
or
lahf
pop
ds
jbe
testl
pop
pop
and
mov
aad
pop
push
add
enter
out
mov
dec
jmp
aas
sub
sbb
jmp
jmp
lds
fcompl
shlb
test
mov
inc
iret
leave
mov
rclb
imul
ret
outsb
xor
mov
lock
je
xlat
mov
jle
repnz
movsl
sbb
inc
mov
cltd
rorb
les
mov
lea
outsl
enter
shlb
inc
pop
jmp
mov
xchg
cmpsl
mov
rol
aas
lcall
pop
scas
nop
pop
outsl
xchg
aaa
mov
mov
loopne
mov
scas
push
decl
mov
dec
xchg
pop
jns
shll
pop
xchg
xor
testb
out
fcoms
inc
aam
bound
pop
notb
bound
push
dec
je
or
sbb
xor
lds
mov
lret
addr16
ftst
ret
sub
enter
test
jge
mov
mov
arpl
cmpsb
lahf
sbb
mov
mov
jbe
popf
adc
fwait
push
mov
cmovge
sub
adc
les
outsb
outsl
lcall
loop
mov
lret
mov
insl
jg
xor
hlt
cli
ret
lahf
push
add
jge
mov
add
add
adcl
push
leave
pop
jbe
xchg
popf
lahf
arpl
je
mov
inc
mov
jb
xlat
push
or
mov
insb
ret
imul
out
leave
add
xlat
arpl
mov
icebp
mov
mov
fdiv
lret
loop
fcomip
push
in
jmp
and
jp
and
stc
lret
lock
pop
bound
orb
push
fsubs
sbb
jecxz
or
dec
pop
out
int3
ds
sysexit
mulb
imul
jmp
add
and
push
push
sbb
je
rcl
lods
add
movsb
test
sub
mov
add
fwait
out
xor
inc
stc
dec
mov
and
aaa
mov
xchg
inc
fimuls
repnz
outsl
sub
push
mov
stc
mov
adc
cmp
imul
add
notb
xchg
shl
dec
push
jg
bound
ret
mov
sbb
stos
or
inc
loop
inc
arpl
je
xor
xor
and
pop
xchg
or
repz
aam
mov
addr16
loop
inc
push
les
mov
and
jne
imul
sub
add
or
ljmp
enter
mov
xor
mov
ja
and
cli
sbb
std
xchg
jmp
push
push
jge
and
insb
add
loopne
and
rorb
push
pushf
fcmovnbe
mov
jecxz
cmpsb
pop
ds
push
pop
iret
lods
sbbl
or
int3
add
push
cmp
adc
sub
scas
or
inc
inc
idivl
jle
jne
jo
fnstenv
jns
inc
cmp
repz
jmp
inc
inc
xchg
push
sub
loopne
stos
inc
jns
stos
xchg
adc
mov
mov
arpl
xchg
stc
das
mov
shll
cmp
cwtl
idivl
sbb
jo
sub
xor
mov
adc
pop
pop
ret
cmp
cmpsl
in
rclb
bnd
fdivr
lret
pop
mov
inc
aas
sbb
xor
and
push
mov
fwait
mov
jle
insl
je
jmp
inc
addl
sbb
cmpsb
dec
lock
imul
adc
lret
push
inc
push
dec
and
or
shlb
inc
mov
stos
rcll
sub
sbb
sbb
clc
arpl
test
mov
push
loop
inc
xor
jle
sub
mov
jns
push
call
loope
not
add
xor
mov
ja
xchg
aad
mov
jo
fmuls
jp
inc
in
adc
inc
cmp
add
pop
lods
jns
lock
and
nop
mov
pop
push
hlt
xchg
cwtl
test
dec
xor
hlt
popf
sar
pop
mov
fs
jae
cmp
sbb
clc
xchg
mov
shll
cmc
pop
fcomp
es
addl
mov
mov
push
pushl
imul
pop
movsb
mov
inc
cmpsb
pop
adc
inc
cmovo
stos
inc
xchg
shr
test
xchg
cld
punpckhwd
das
push
popf
movsl
mov
jae
xchg
mov
aad
jle
aaa
xchg
ljmp
mov
cltd
inc
lret
mov
ret
push
push
mov
cmp
pushf
and
sub
sub
sub
dec
add
rol
popf
mov
scas
ret
or
ss
sti
push
fs
js
pop
fwait
push
mov
push
mov
mov
repnz
int3
mov
dec
jmp
sbb
movsl
sbb
rclb
shlb
lods
cltd
repz
fists
lcall
sub
and
adc
je
dec
mov
int3
test
and
sub
sub
inc
imul
dec
rclb
mov
cmp
jnp
push
xchg
clc
xlat
pusha
xor
ret
pop
sub
mov
bound
push
std
into
cmp
lods
pusha
in
scas
popa
pop
movsb
stc
adc
lret
mov
and
mov
push
jb
cmp
push
or
xchg
xor
fistps
and
rorb
mov
cmp
mov
lcall
adc
nop
adc
push
repz
mov
inc
push
push
and
cld
inc
cmp
fimull
or
mov
mov
rcrl
call
movsl
repnz
push
jecxz
sub
das
mov
enter
hlt
daa
inc
rorl
cmc
mov
and
cmp
jb
jmp
cltd
mov
sbb
lahf
sbb
sbbb
popa
insl
sbb
movsl
sahf
ja
rcll
lods
mov
stos
lea
bnd
lods
in
and
sub
or
mov
or
rorb
hlt
or
sahf
sub
push
ds
fs
jecxz
fsubrs
gs
leave
mov
or
lods
and
rcll
jg
adcl
in
sbb
jo
mov
inc
xchg
scas
xchg
cmp
jle
sub
ds
push
out
pop
add
push
ret
pop
test
idiv
cmp
lods
inc
ljmp
add
jmp
cmp
insb
cmp
in
pop
stc
xor
aas
jecxz
mov
ds
xchg
icebp
jns
lea
mull
popf
inc
pop
js
shll
fbstp
jbe
sti
loopne,pn
les
push
xor
xor
aad
mov
pop
sub
and
mov
cmpsb
or
nop
push
in
push
mov
sbb
aaa
sub
and
fwait
jl
lcall
jp
dec
lea
lods
mov
leave
dec
rolb
lcall
push
cmp
enter
jecxz
cmpb
cmp
jne
arpl
xor
pop
sub
inc
inc
inc
out
jmp
sub
cli
cmp
cmp
push
mov
call
enter
push
jl
lret
dec
and
dec
enter
mov
jmp
stc
and
sub
flds
pop
push
shlb
adc
out
xchg
ljmp
mov
shll
inc
loop
push
cmpsb
jae
mov
cmpsl
fwait
loope
and
xchg
mov
outsb
cmpsb
in
mov
lahf
jns
push
jb
out
mov
push
cli
jae
push
mov
aam
stos
popf
pop
hlt
xchg
xchg
jl
cmp
sbb
insb
jg
cmp
aas
mov
cmp
mov
xchg
call
dec
xchg
outsl
mov
jnp
outsb
jecxz
inc
or
dec
add
shlb
roll
inc
adc
add
dec
mov
sub
repz
dec
inc
mov
adc
lahf
adc
iret
je
pop
loop
xchg
cli
out
adc
mov
hlt
enter
mov
xchg
push
ret
dec
les
pop
xor
inc
add
inc
jmp
xchg
sbb
mov
jnp
add
fucomp
lahf
mov
test
mov
pop
adc
jb
in
sbb
out
daa
push
int3
xchg
push
sbb
fistps
cwtl
sbb
jns
dec
std
add
out
idivb
mov
cs
fistpl
cvttps2pi
enter
sub
in
pop
fdivs
jmp
in
insl
inc
fdivrp
mov
mov
outsl
lret
xlat
fistps
and
iret
mov
inc
xchg
cmc
decb
sahf
out
loope
and
and
es
lock
adcl
sbb
sub
lahf
lods
sbb
xchg
jmp
xor
mov
mov
push
dec
fiaddl
mov
lcall
cmp
arpl
jnp
gs
xor
out
jl
subb
cwtl
pop
inc
sti
lds
jecxz
inc
mov
aam
jnp
jae
clc
das
out
adcb
fcomp
lret
arpl
mov
pushl
sub
into
mov
cmc
jl
adc
xchg
dec
jnp
ret
push
mov
or
or
mov
pop
ret
rcrl
movsl
pop
and
pop
test
jl
test
repz
bound
and
fcom
in
jmp
and
les
fwait
mov
sti
arpl
pop
xchg
mov
xor
push
movsb
les
inc
mov
repz
adcl
fs
mov
adc
sahf
cmc
outsb
outsb
outsb
pusha
mov
jp
fsubs
adc
sti
adc
add
mov
scas
pop
jle
jge
cmp
stos
adc
sarb
mov
lcall
inc
sbb
cmp
pop
inc
dec
leave
jo
outsl
sbb
and
lahf
add
push
push
imul
int
aaa
dec
xor
decl
sub
and
ja
inc
xor
fisttpll
ret
push
sarl
or
hlt
je
ficomps
fbstp
jae
mov
lcall
mov
ja
xor
adc
psraw
mov
out
lods
dec
clc
testl
outsb
or
into
cmp
push
cld
dec
pop
or
adc
in
ja
xor
jne
dec
inc
arpl
fiadds
jbe
adc
shrl
outsl
inc
lret
out
mov
mov
mov
add
pushf
inc
dec
rcll
ds
sub
loop
aam
push
inc
jno
adc
enter
cmpsl
cwtl
stos
mov
jno
lods
stos
jae
jb
jle
cltd
int
lret
pop
or
xchg
xor
loop
jno
dec
xchg
sti
dec
xchg
mov
xchg
out
cs
mov
xor
fcmovnu
push
mov
xor
add
lock
xchg
popa
sub
push
xor
loop
fsub
sub
dec
mov
arpl
pop
mul
aam
cmove
hlt
jb
int
cli
fistl
jnp
inc
lods
test
jae
addr16
iret
loop
in
sub
sub
cwtl
jle
lahf
dec
cmp
je
mov
out
pop
add
and
pop
mov
gs
movsb
pop
roll
in
shll
jb
fcoml
popf
xchg
add
xor
push
negl
inc
sbb
subl
out
loopne
out
test
mov
xor
lahf
mov
cmp
clc
xchg
in
clc
inc
imul
or
mov
inc
xor
in
pop
jle
sbb
jnp
insb
ljmp
and
fwait
test
adc
lods
fs
xlat
sub
cmc
mov
call
pop
mov
or
push
xchg
lock
imulb
inc
mov
loope
xor
push
rcrl
and
repnz
inc
and
pop
mov
aad
cli
inc
test
xchg
adc
stos
inc
mov
fcompl
jae
outsl
mov
mov
push
rol
ljmp
xor
jge
xchg
add
sbb
and
pusha
mov
xor
div
pop
loop
mov
gs
cltd
jg
leave
fistl
test
fcmovnbe
and
cli
add
or
lret
fisttpll
fnstsw
jecxz
adc
sub
cmpsl
pop
adc
dec
ret
andl
loop
lock
ljmp
dec
xor
imul
sub
ret
push
cwtl
jge
push
mov
sub
ret
mov
or
inc
xchg
lock
xor
cmp
mov
fucomp
sbb
add
or
stos
lods
mov
push
jnp
pop
xor
xchg
add
fwait
push
sbb
pop
adc
jle
rclb
mov
movsl
fcmovb
xchg
inc
das
test
pop
popf
int3
dec
testl
sub
mov
jmp
or
into
int
mov
mov
fisttpl
jmp
mov
inc
pop
jecxz
lret
jno
sub
adc
inc
xchg
mov
sbb
leave
cmp
pop
lcall
lods
sub
adc
sbb
jbe
outsl
imul
mov
lret
into
int
pop
bound
and
dec
cltd
inc
dec
int
xor
repnz
and
sbb
int3
add
fstpl
jl
dec
or
push
roll
xor
dec
sbb
and
adc
insb
add
rorb
jb
popa
jl
mov
push
xor
or
jae
mov
jmp
adc
adc
cmpsl
shrl
adcl
mov
mov
adc
xchg
outsl
pop
mov
lods
mov
pop
push
ror
fdivp
pop
inc
jb
repz
xchg
aad
mov
jb
and
out
js
out
sub
sub
sbb
les
int3
hlt
mov
mov
testl
lret
shlb
stos
xchg
adc
pop
out
dec
sbb
or
mov
adc
push
imul
or
test
xchg
sarb
inc
adc
popl
inc
sbb
cmp
mov
xor
dec
mov
enter
jl
pop
test
insb
push
inc
jnp
out
xchg
jl
lret
cs
mov
dec
lcall
fdivrl
pop
dec
adc
lea
cmp
sub
out
inc
arpl
add
lds
mov
or
clc
pop
mov
sub
loope
aaa
mov
fidivl
pop
mov
cltd
jecxz
aas
inc
jne
aaa
and
xchg
or
xor
mov
rcl
mov
imul
add
lahf
inc
add
pop
add
mov
lret
outsb
nop
orl
push
repz
bound
fldl
and
dec
mov
xchg
cmp
outsl
imul
ficoml
cmc
sbb
add
jl
popf
add
sbb
sbb
jmp
adc
mov
sbb
mov
sub
mov
jo
leave
xchg
das
ror
in
push
lret
int3
dec
inc
imul
sub
loop
sbb
cwtl
movsb
lods
adcl
xchg
icebp
movsl
mov
or
cmp
sbbl
test
push
xor
adc
inc
xchg
scas
jo
mov
inc
dec
imul
movsb
adc
out
push
lret
ljmp
or
in
dec
cmp
mov
mov
repnz
out
data16
and
jle
xchg
mov
mov
repnz
faddl
xchg
mov
push
fsubl
mov
scas
pop
mov
xor
inc
push
or
notb
cs
imul
mov
in
sub
out
or
ret
je
cmp
fmuls
mov
adc
dec
mov
dec
in
lock
cs
sbb
add
push
cmp
or
pop
loopne
push
test
add
cli
dec
mov
loope
test
mov
test
rdmsr
outsl
or
pop
xchg
in
xchg
fadd
xchg
dec
jne
in
scas
ds
jo
stos
adcl
cmp
scas
fsub
mov
and
dec
inc
jnp
add
les
xchg
test
jbe
cmp
lea
mov
cmp
jbe
pop
mov
xor
xor
xlat
or
mov
cmpsl
iret
add
xchg
decl
and
xchg
out
movsl
pop
jne
push
xor
iret
out
push
test
mov
shll
cli
mov
push
cmpsb
push
and
icebp
movsl
clc
cmpsb
xor
jmp
flds
cmpsl
das
fistpl
jmp
xchg
dec
or
shrl
jecxz
jle
ljmp
mov
pop
adc
cmp
sbb
xor
push
js
push
popa
jp
add
jbe
jmp
fnstenv
mov
add
outsb
xor
scas
iret
cmp
mov
cli
xchg
movsb
mov
dec
sub
inc
jnp
lret
out
and
inc
std
mov
xor
adc
pusha
or
pop
out
jp
xchg
mov
maskmovq
testl
xchg
dec
mov
pop
in
cmpsb
cmp
cmp
mov
jo
cwtl
sbb
adc
fxch
pusha
in
pop
in
notb
inc
jle
mov
insb
pusha
icebp
or
jno
pop
jb
lds
cmpsb
insb
or
loop
fidivs
test
cld
addr16
loope
pop
push
mov
bound
push
sbb
aaa
jle
sub
sbb
dec
inc
mov
ja
shrl
in
dec
inc
decl
popa
sub
cmpsb
aam
in
scas
mov
mov
mov
fisubrs
loopne
mov
lcall
dec
test
mov
addb
popa
add
inc
xlat
mov
push
mov
cmp
mov
jno
das
lods
shr
jp
mov
cmp
clc
mov
or
sahf
adc
in
inc
xor
mov
push
jo
sub
and
cmp
add
add
into
mov
rorb
mov
test
mov
jl
and
mov
push
mov
inc
add
es
mov
push
xor
stos
fisubrl
or
jno
push
mov
sub
add
stos
jns
cmp
lods
imul
fildll
lret
and
int3
scas
inc
cs
xor
in
mov
push
adc
dec
pop
adc
loopne
push
int
and
push
dec
movsl
inc
pop
inc
mov
jns
data16
push
stc
dec
jle
jle
pop
dec
test
les
aam
incl
sub
xor
mov
fs
outsb
cmpsl
adc
mov
adc
imul
sub
in
push
in
add
mov
mov
pop
sbb
fcompl
sub
mov
mov
or
repnz
mov
jmp
dec
and
and
dec
bound
out
mov
lods
pop
ror
out
or
jbe
and
cmc
sub
aam
xlat
fcomi
pop
sbb
mov
mov
mov
pushf
out
loope
adc
mov
mov
jmp
enter
add
push
pop
leave
mov
add
pop
in
xor
imul
push
pop
and
jo
inc
jno
pop
repz
inc
pop
jbe
mov
stos
mov
loop
inc
les
pop
inc
movsb
push
mov
xchg
jl
xchg
mov
jns
inc
adc
dec
popf
push
icebp
test
push
cmc
sub
mov
push
sub
jmp
dec
push
pop
fcompl
inc
out
dec
inc
xor
and
lods
pop
outsl
insl
test
and
les
pop
cld
jg
mul
mov
mov
jle
xor
dec
imul
lret
movsl
jnp
pop
lods
repnz
ja
dec
or
ret
or
enter
mov
movb
addb
sbb
in
fbstp
lret
adc
rcrb
adc
adc
add
pop
lcall
ret
cmpl
fmuls
fcoml
shlb
xchg
dec
mov
jg
jne
les
push
ja
pusha
xor
lcall
mov
pop
sub
pop
dec
pop
cli
xchg
push
jg
cmp
mov
and
sbb
push
mov
xchg
enter
ds
mov
sub
aam
pop
mov
mov
inc
adc
and
out
fmull
jb
lods
pop
cs
xchg
popa
or
in
insl
adc
cli
xor
add
jmp
pop
lahf
dec
pop
push
scas
cmp
pop
adc
bound
or
leave
jb
xchg
test
adc
add
xchg
imul
scas
mov
mov
leave
or
mulb
sub
mov
movsl
inc
push
add
or
mov
test
int
pop
shr
xchg
jmp
jmp
aad
rcrl
xchg
lods
aam
gs
je
je
jp
mov
mov
stc
push
inc
mov
cmp
das
sbb
fildll
ret
or
cmp
pop
jg
addb
sbb
add
lret
dec
inc
stos
cmpsl
xor
push
repz
cmp
push
sbb
and
xor
sub
stos
sti
push
mov
adc
int3
jl
sub
int
in
aas
aad
mov
cli
idiv
dec
or
push
hlt
mov
lods
cwtl
mov
adc
push
add
add
int3
out
ret
outsl
xlat
mov
mov
iret
jp
xchg
test
cmp
add
scas
repnz
imulb
xor
jo
cmp
mov
push
mov
rclb
in
imulb
xchg
cmc
inc
and
push
cli
int3
mov
nop
mov
inc
push
push
mov
pminsw
cmp
ficoms
jae
sbb
cltd
ss
outsl
xchg
mov
push
xchg
and
adc
xor
xor
out
inc
je
jbe
enter
arpl
hlt
pop
jecxz
push
lock
dec
and
lock
fcmove
fldl
mov
mov
lret
repz
push
inc
std
pop
lea
inc
jne
loopne
addr16
cwtl
cmc
xor
sub
inc
test
cmp
cmp
stos
sub
sub
mull
mov
mov
repz
cmpsl
repnz
fdivr
movsb
lock
dec
add
sbb
xchg
addr16
or
jl
add
addb
mov
xchg
mov
inc
or
jle
sbb
mov
fists
loop
xchg
lea
sub
jg
sub
icebp
scas
stos
dec
imul
mov
pusha
stos
sub
inc
mov
xchg
stos
pop
inc
sbb
test
in
loope
pop
fisubrs
mov
fstpl
jg
rolb
jo
jl
xor
mov
push
inc
or
dec
jge
xchg
ss
sti
gs
imul
mov
std
ss
mov
mov
cltd
mov
inc
adc
cmpsl
aas
clc
sub
or
iret
dec
mov
push
push
out
xchg
mov
add
or
pop
shlb
mov
mov
jns
mov
dec
dec
jp
mov
fcomps
mov
fcom
and
or
movsb
adc
cmp
pusha
lret
and
mov
inc
insb
push
cmp
in
add
stc
bound
arpl
hlt
xor
test
scas
mov
jne
mov
in
pop
dec
out
sub
f2xm1
int
in
push
and
je
xor
push
das
stos
mov
in
push
and
inc
rcrb
dec
out
aam
sub
dec
mov
mov
aam
pop
jbe
jge
jnp
movsb
nop
int3
les
fdivl
aaa
out
insb
outsb
lret
cmp
mov
rorl
out
int3
xor
cs
ficoms
int3
aad
sub
xchg
and
push
mov
sub
and
sub
fucomp
mov
gs
hlt
andl
repnz
sub
fwait
xchg
into
ljmp
sbbb
mov
scas
pop
inc
aad
xchg
stos
out
adc
orb
lret
or
mov
popa
mov
xchg
sbb
push
test
cmp
mov
int
ljmp
outsb
js
mov
xchg
cmp
std
js
cmp
cmpsl
cmp
and
mov
sbbb
mov
rolb
rorb
add
or
inc
aaa
cmpl
inc
rcl
dec
sbb
cmp
inc
xchg
imul
imul
insb
sub
mov
sub
std
sbb
fnstcw
enter
int3
xchg
jl
mov
cmp
sar
ret
imul
test
loope
inc
or
inc
fsubrs
lods
repz
roll
mov
dec
lcall
lds
add
fsub
xchg
and
sbb
pop
scas
cmp
cmp
xlat
ja
pop
stc
push
push
inc
mov
inc
lock
lds
add
and
inc
or
jmp
ja
push
pusha
jbe
push
rcr
test
cmp
add
xchg
mov
pushf
push
movsl
and
ret
cmp
out
mov
push
push
shll
mov
lcall
xor
lods
mov
push
lds
sahf
fiadds
in
es
dec
mov
xor
push
cli
jb
or
push
enter
mov
xlat
out
push
adc
add
xor
nop
movsl
popf
in
sub
dec
cmpb
ljmp
insl
leave
add
in
lea
xchg
shlb
sbb
lahf
dec
popf
int3
jge
leave
add
sbb
jg
nop
lds
ret
in
pop
ret
mov
sub
scas
or
into
xor
cltd
adc
push
adc
jge
fs
mov
in
cmp
push
call
ret
int3
mov
inc
rep
pop
jne
sub
lcall
or
loop
xchg
sbb
jno
insb
test
and
mov
push
fimuls
cmpsb
fcoml
jns
ja
lret
jp
cmp
std
clc
xor
adc
ss
data16
mov
xor
jle
dec
mov
sub
int3
or
cmp
add
push
mov
jb
push
es
cmpsb
mov
insb
add
out
mov
stos
xchg
xchg
push
cmp
in
mulb
dec
bound
and
xchg
xchg
sbb
inc
jl
movsl
lock
adc
inc
pop
out
pushf
fidivrl
js
xchg
nop
sub
pop
adc
xor
mov
test
loopne
roll
stos
pop
mov
add
pop
xor
sahf
dec
fdivs
mov
lret
adc
push
mov
flds
mov
es
mov
lahf
cmp
stos
sbb
test
xchg
in
arpl
test
mov
xor
adc
pop
imul
loop
push
push
jo
scas
enter
scas
add
ss
or
dec
in
push
push
fs
inc
dec
lahf
loop
mov
imulb
outsb
dec
mov
mov
iret
lods
sbb
sbb
mov
fbld
pop
xor
mov
in
jge
nop
sti
inc
xchg
push
ret
mov
xchg
hlt
insb
ja
aam
scas
cwtl
add
sub
daa
xor
outsl
mov
daa
loope
and
ja
scas
sbb
inc
and
das
adc
stos
xor
js
pop
sbb
out
adc
insl
faddp
xor
xchg
imul
sbb
pop
out
and
ljmp
fistpl
imul
test
add
sbb
aaa
jecxz
push
push
rolb
jo
in
sahf
mov
iret
jg
and
sti
shrl
cmp
push
fists
into
adc
sbb
je
rcrl
mov
test
inc
or
imul
push
in
xchg
dec
sbb
mov
mov
push
push
pop
mov
lahf
call
xchg
fwait
sub
test
in
and
movsb
inc
pushf
jae
lock
push
nop
outsb
xor
dec
outsb
les
push
je
test
adc
fwait
mov
scas
ljmp
lcall
push
fwait
cmc
push
fldt
ja
mov
shll
int
pop
mov
shl
mov
sti
fstl
sbb
or
push
inc
push
mov
mov
faddl
sbb
out
pop
mov
sbb
jge
dec
fistpll
sbb
add
ret
scas
or
dec
and
adc
bound
lea
sbb
adc
cmp
jge
xchg
bound
stc
faddl
cmp
and
mov
mov
push
pop
sub
pop
mov
divb
or
lcall
jp
or
lcall
adc
adc
inc
scas
bound
insl
outsl
push
and
mov
lods
outsb
nop
sar
pop
pushf
out
push
insl
mov
cmp
jge
mov
orb
mov
sbb
pop
sbb
lods
sbb
sbb
push
pop
das
jb
push
pop
jno
outsl
inc
adc
in
pop
sti
cmp
es
sub
xor
repz
div
push
xor
dec
aaa
push
rcr
lds
xchg
dec
punpckhwd
enter
and
mov
pop
inc
imul
mov
sbb
lods
push
rcl
mov
out
loope
test
pusha
stos
ljmp
push
push
push
inc
filds
xorb
jne
sbb
push
mov
int3
pop
das
mov
jo
dec
or
jo
inc
pop
jmp
cltd
adc
ret
inc
or
mov
mov
loop
sub
hlt
ljmp
in
pop
int
sbb
mov
pushf
aam
cli
mov
jnp
sarb
dec
or
imul
fcmovnu
gs
jnp
mov
jmp
fdivr
cli
inc
adc
jbe
loopne
sbb
inc
hlt
rcrl
sub
pop
cmp
cld
xchg
popa
nop
inc
leave
push
mov
fldenv
les
mov
ja
sahf
rolb
repz
sub
cmpsl
sbb
inc
push
std
jecxz
add
and
pop
cmpl
rdpmc
xor
or
cmpsl
imul
pop
add
call
jb
pushf
loope
mov
fmuls
or
jge
cmpsl
inc
sub
jbe
push
mov
adc
fisttpl
push
inc
dec
push
jns
insb
push
addr16
sub
adc
ret
sti
add
movb
and
push
and
pusha
lcall
lcall
clc
mov
pop
or
mov
jle
fisubrs
outsb
xlat
jmp
jp
push
in
nop
shll
stc
sub
xor
outsb
sbb
imul
jecxz
jb
pop
incb
fimull
and
push
cmp
jp
cmp
fwait
ds
dec
jnp
xchg
sbb
testl
into
pusha
inc
pop
in
lods
aas
outsb
add
shrl
sbb
int
jb
rclb
pushf
dec
xchg
insb
pop
stos
divl
or
inc
xchg
sahf
stos
outsb
cli
add
jmp
adc
mov
jae
push
insb
inc
seta
pop
or
sub
mov
stc
mov
out
lods
cmp
imul
push
push
mov
jbe
das
jg
in
fdivrs
push
sbb
outsl
sub
push
cld
push
adc
js
test
xchg
cmp
dec
enter
fldcw
aad
mov
shr
sbb
and
les
mov
nop
inc
cmp
and
subb
movsb
or
dec
stos
xchg
repnz
insl
jge
jmp
mov
pop
push
and
test
adc
lods
mov
addr16
dec
icebp
and
imul
cmp
mov
loop
xchg
gs
or
sti
das
push
lahf
mov
roll
cltd
movsb
rol
les
push
lds
in
lock
inc
lock
ja
cwtl
outsl
dec
rclb
imul
fcoms
int
add
aad
mov
icebp
rorb
cmpsb
sarl
and
add
jb
stos
xor
dec
push
mov
xchg
insb
add
adc
sub
sub
pop
insb
stc
jae
xchg
cmp
sbb
test
fld
mov
mov
adc
adc
inc
mov
insb
lahf
mov
mov
or
inc
jo
push
insb
mov
adc
fs
pop
dec
mov
mov
mov
pop
outsl
fsubrl
sbb
mov
imul
aaa
sub
cmpsb
sahf
ficoml
pop
jo
mov
ficoml
cmp
movsl
scas
in
pop
push
ror
outsb
sub
pop
pop
scas
andl
mov
dec
cmpsl
negb
sti
cmc
cmp
scas
divb
sub
and
lock
int
scas
orb
sbb
mov
pop
adc
jo
push
ret
mov
int3
add
dec
xchg
mull
dec
cmc
sbb
cli
iret
jmp
cmp
fcmovne
sub
mov
insb
jge
fldenv
ljmp
aaa
xchg
out
xchg
push
dec
xchg
ss
ja
sub
xchg
lret
in
jl
data16
xor
stos
int
iret
rcrb
jns
sub
into
std
xlat
ljmp
mov
rcrb
and
mov
insb
pop
dec
fldl
push
pop
mov
jbe
push
repnz
mov
cmp
push
cmpsl
and
in
out
das
xchg
adc
fsub
inc
push
lock
jecxz
push
lds
push
aaa
lock
or
mov
adc
mov
sarl
xchg
je
xor
or
mov
ficoms
divb
loope
jnp
ret
hlt
fwait
stc
pusha
lods
ljmp
pop
int3
mov
orb
jp
adc
mov
scas
or
mov
cli
pop
sahf
andb
pop
add
negl
mov
out
stc
mov
aas
test
xor
in
mov
sarb
xchg
ja
mov
movsb
xor
dec
sub
sbb
xlat
iret
sbb
inc
aaa
sbb
push
cwtl
xchg
sub
mov
cmpl
fisttps
or
cmp
hlt
or
cltd
sbb
push
sbb
dec
pop
mov
aad
stos
cmp
xchg
jge
push
outsb
xchg
clc
adc
xor
push
or
push
inc
cltd
adc
movsb
fiadds
mov
push
fdivrl
xor
mov
insl
xchg
lds
aad
js
lret
std
inc
inc
push
jp
shrl
sub
pop
adc
inc
fsubr
fbstp
mov
sub
jbe
outsb
dec
cwtl
inc
in
aas
add
and
in
sub
loopne
pop
pusha
ret
cli
cmc
jle
outsb
ds
ja
insl
fisubrl
aas
ja
inc
in
ds
cmp
mov
ficoms
out
mov
jne
push
jg
and
imul
lcall
insb
out
ret
mov
fidivl
ss
fnstsw
mov
into
push
inc
and
or
pop
imul
mov
jp
pop
pop
addr16
xchg
dec
stos
dec
clc
cmp
cwtl
inc
cmpsl
scas
xor
pop
and
repnz
push
pop
mov
push
pushf
push
fs
xor
outsb
and
insb
dec
push
std
push
mov
pop
jb
lock
pop
rol
dec
mov
xchg
and
outsl
cmp
imulb
hlt
cmpsb
aad
sbb
sub
outsl
out
xchg
dec
bound
test
add
xchg
addr16
dec
push
fbld
test
fmuls
adc
clc
pusha
mov
test
pop
lret
push
stos
shr
xor
jne
movsb
outsb
insl
bound
cwtl
mov
sahf
lret
mov
xor
push
adc
or
ret
push
push
int
fmull
loopne
jmp
loope
stc
jne
xor
ret
lret
sar
inc
jecxz
orb
xchg
nop
btr
in
mov
inc
cmp
mov
push
test
sarl
xchg
xor
lock
and
mov
mov
or
fnstsw
fcmovb
mov
lock
jle
and
inc
nop
imul
pop
imul
insl
sbb
pop
and
movsb
mov
lahf
stc
sahf
mov
pusha
xchg
mov
push
imul
dec
hlt
imul
cs
and
pop
inc
mov
mov
add
insl
fstl
mov
dec
arpl
xchg
ja
cmc
push
loope
in
mov
mov
cmp
mov
and
out
add
dec
aad
mov
cli
and
push
push
cwtl
cmp
add
cmp
push
cmpsb
pop
pop
inc
push
push
dec
sbb
leave
mov
or
clc
xchg
mov
scas
sbb
imul
fnsave
repz
fs
inc
jno
fwait
pushf
inc
subl
sub
movsb
pop
mov
adcb
pop
xchg
cld
ljmp
imul
inc
cmp
xchg
jp
xor
adc
in
lds
xor
jecxz
and
sub
pop
lea
push
xchg
dec
add
cmp
xchg
mov
push
sub
test
mov
je
dec
outsl
mov
add
test
fsubrp
cmp
xchg
push
ja
adc
loopne
xchg
cmpsb
bnd
push
mov
jg
lock
sub
jp
in
mov
mov
test
sbb
cmp
mov
push
fwait
sbb
repnz
jecxz
fildl
out
mov
rcll
icebp
cmp
cmp
cmp
cmp
sbb
jecxz
pop
out
dec
out
clc
pop
sbb
xchg
scas
mov
mov
xor
scas
push
fmull
imul
sbb
cmp
push
sbb
xor
pushl
stos
hlt
cltd
cmp
cmpsb
cmpsb
pop
lods
test
lods
movsb
add
ret
loop
push
push
pop
sub
jno
scas
popf
lods
push
push
mov
cmpb
pushf
or
jns
fidivrl
xchg
mov
out
popf
fwait
mov
add
cld
jle
in
mov
mov
push
and
xor
sub
mov
cmpsl
inc
sub
popa
sti
or
inc
divl
lock
out
pop
mov
xchg
mov
add
ret
xchg
or
sub
popa
add
icebp
xchg
jg
add
sub
push
ljmp
sbb
mov
test
enter
das
jnp
jle
addr16
mov
aad
pushf
mov
cmp
sub
or
mov
mov
mov
popf
mov
jbe
fldenv
push
rcr
fwait
mov
test
lret
lds
jg
or
mov
jecxz
imul
push
and
push
dec
fistpll
loope
std
or
in
lods
add
dec
xchg
movb
push
adc
and
push
cmpsb
daa
shrl
or
xchg
lcall
adc
into
movsb
push
xorb
into
sub
loopne
fimull
push
mov
sub
lcall
mov
and
pop
add
stc
inc
dec
clc
push
inc
test
jmp
stc
mov
leave
inc
mov
add
mov
push
add
into
sub
xchg
pop
xor
jp
push
fs
sbb
mov
andb
add
sbb
cmpsl
std
sub
dec
push
push
pop
pop
sub
mov
jg
jl
dec
in
ret
xor
test
xchg
xchg
mov
cmp
cmpsb
push
adc
arpl
mov
mov
cmp
mov
sub
fstps
or
push
jnp
call
jg
loopne
cmpsl
cmpsl
int
imul
or
mov
cmp
or
cmp
daa
movsl
jmp
lds
aas
mov
dec
cli
adc
push
into
and
arpl
mov
pop
xchg
stos
dec
dec
popa
jne
jp
cs
mov
ss
mov
xchg
icebp
cmp
mov
and
jge
push
add
inc
notl
popf
mov
test
js
ja
dec
into
iret
repnz
out
sahf
shr
add
adc
push
xchg
movsl
data16
push
dec
inc
sub
scas
ds
vpslld
push
mov
hlt
push
inc
negb
insb
inc
repz
mov
ds
pushf
xlat
pop
mov
scas
cmp
push
push
popa
sub
sbb
mov
icebp
data16
lahf
jge
add
inc
or
ret
repnz
neg
xchg
mov
push
pop
arpl
ljmp
aas
rorb
mov
pop
push
xchg
std
sbb
or
adc
inc
jo
cmp
fdivrl
mov
not
es
xor
and
mov
imulb
mov
dec
cmp
repz
shlb
push
pop
cld
push
dec
pop
lods
mov
pop
pop
xor
dec
inc
imul
xor
push
and
icebp
and
jp
scas
mov
push
jmp
and
or
or
addr16
pop
xchg
push
cmp
or
negl
jbe
xchg
in
dec
xchg
mov
fs
stc
pop
lcall
cmp
imul
lock
sub
sub
xor
arpl
inc
xchg
aaa
or
lods
mov
or
or
adc
mov
aaa
xlat
sub
inc
inc
cmp
ret
aam
out
ret
or
mov
add
cli
ss
cmp
pop
aaa
and
push
test
inc
push
neg
add
jbe
cltd
out
lea
pushw
stos
xor
inc
pop
mov
adc
out
in
cli
iret
jl
movsb
sbb
jmp
ja
shlb
rcrb
stc
cli
jnp
sti
dec
xchg
or
cmp
fadds
mov
je
dec
rorl
cs
mov
lods
out
hlt
mov
inc
fcmovnb
rdpmc
in
sub
jae
mov
loope
adc
push
sub
fcomi
lds
and
dec
add
aam
mov
into
in
test
ror
inc
neg
mov
iret
sbb
testb
xor
hlt
scas
mov
xor
test
cli
sbb
out
add
cwtd
stc
js
lret
adc
decl
sbb
repz
int3
lahf
cmp
lret
aam
sti
jecxz
aad
scas
cmp
sub
jae
arpl
xorb
rcr
loop
cmp
addr16
aaa
in
addb
popf
dec
sbb
sub
add
jge
jl
mov
fmull
mov
test
in
jmp
cmp
sarb
jae
mov
dec
pop
xchg
repnz
cltd
std
adcl
lods
outsb
mov
adc
sahf
add
aaa
std
cs
mov
in
pop
mov
inc
push
aad
not
sub
idivb
sbb
mov
sub
xchg
mov
xor
mov
push
jle
jne
or
or
fwait
or
xor
push
mov
xchg
insl
test
sbb
fs
mov
arpl
push
inc
mov
fsubrs
lret
popf
sahf
das
xor
roll
jb
adc
rcrl
mov
insl
shlb
mov
push
pop
add
pop
push
rolb
pop
test
sub
fs
mov
scas
out
mov
aaa
ret
shl
push
dec
das
push
sub
dec
xor
ljmp
sarl
xor
mov
stos
pusha
or
pusha
cmc
pop
rcr
push
add
mov
es
adc
gs
repnz
loopne
movsl
mov
test
add
xchg
push
mov
mov
mov
les
inc
xchg
iret
ret
das
jnp
fistps
sbb
inc
xchg
inc
pop
pop
pusha
aas
push
ds
mul
out
sub
sub
test
add
sbb
xor
pop
xchg
inc
xchg
pop
jb
cmp
pop
inc
fsubrl
xor
das
jecxz
repnz
cmp
addr16
in
mov
add
cmp
packssdw
into
adc
in
outsb
test
ja
adc
int
mov
clc
mov
mov
loopne
xor
pusha
xchg
cmp
xlat
dec
xor
aaa
std
test
cmp
jne
lock
mov
test
xchg
sub
movsb
loope
mov
fsts
push
gs
push
pop
out
movsl
cwtl
daa
push
movsb
dec
mov
mov
jbe,pt
and
movsb
add
js
ds
sti
idivb
addb
dec
shlb
cmpl
pop
out
or
sub
jns
shl
repz
bound
push
punpckhdq
push
cld
xchg
ja
dec
add
xchg
and
push
xor
test
movsb
mov
jne
cmp
push
cli
outsb
fdivs
inc
test
fs
mov
stos
push
adc
daa
iret
stc
mov
jmp
mov
mov
inc
xchg
mov
adc
jno
es
je
mov
jne
pusha
lds
inc
jg
adc
popf
pop
stos
orl
mov
stos
pop
mov
push
andl
adc
test
rclb
les
dec
mov
and
fwait
xor
xchg
scas
outsb
xchg
pop
push
sub
xchg
loop
lock
ret
stos
adcb
iret
fcmovnbe
mov
enter
cmpsl
pop
repnz
lret
pushf
pop
xchg
and
pop
mov
xchg
xor
sub
cmp
xchg
insb
nop
stos
sub
call
rorl
dec
or
sbb
adcl
out
jo
leave
jo
mov
xor
sub
xor
mov
or
fcomps
insl
js
fmuls
mov
mov
icebp
push
and
sbb
mov
test
mov
and
lahf
shrb
jno
xor
popf
jl
aad
fcomi
aad
shrl
inc
out
test
stc
test
loope
pop
add
jle
xor
orl
jns
mov
xor
xor
in
sbb
aas
and
jl
push
in
xor
or
inc
lret
hlt
adc
leave
pop
aaa
pop
lret
mov
stos
push
out
push
ja
icebp
popf
in
xor
icebp
xchg
lcall
adc
cwtl
hlt
popf
xor
xchg
push
add
inc
movsl
add
xor
dec
add
mov
or
mov
mov
add
push
push
hlt
dec
pop
aam
push
rep
nop
std
mov
rolb
mov
test
push
int
jecxz
mov
mov
inc
stc
dec
inc
mov
sub
mov
fwait
sbb
insl
ja
scas
xchg
cltd
mov
movsb
xchg
push
in
or
push
ja
stos
sbb
insb
adc
shll
bnd
lcall
mov
inc
mov
sbb
in
sbb
movsb
or
sub
and
pop
sub
mov
lods
imul
jmp
xchg
and
xor
pushf
cmp
cmp
mov
mov
int3
and
sbb
mov
mov
sbbl
sbb
and
push
test
xchg
test
test
or
mov
push
xor
push
lcall
test
mov
das
clc
mov
adc
pop
mov
dec
mov
xor
mov
add
push
or
pushf
aas
daa
rcll
sub
mov
out
in
into
sbb
ret
sbb
jle
jo
jecxz,pt
out
js
inc
addr16
cwtl
xor
fwait
stc
lock
sub
sub
cmpsl
inc
idivl
popf
stc
pusha
into
mov
mov
pop
lds
imul
decb
les
add
cli
test
ret
push
mov
mov
and
push
xor
into
lock
mov
xchg
mov
ds
jecxz
insb
xchg
sbb
jge
push
cmc
xor
xor
mov
imul
cmc
jl
inc
and
call
lods
and
xor
test
xlat
sub
das
insb
mov
mov
shlb
or
push
xchg
mov
push
jae
dec
sub
test
ret
push
jmp
aad
aaa
ret
test
or
out
into
xor
push
fldt
pop
ja
sbb
pop
or
and
nop
jmp
cli
ss
push
xchg
ljmp
out
cmpsl
scas
nop
iret
mov
jge
pop
dec
dec
testb
test
cld
xor
push
dec
mov
xor
rclb
cmp
xor
inc
loop
std
adcl
cmpsb
mov
jo
adc
cli
ja
sub
std
dec
adcb
outsb
xchg
push
cli
mov
cmp
aad
out
movsb
mov
fsubrs
push
push
jecxz
ficomps
imul
jl
push
inc
jnp
cmp
mov
aam
lods
xchg
loope
pusha
gs
daa
sbb
cmp
in
dec
pop
jbe
push
xor
pop
add
sub
call
adc
fisttpl
lahf
adc
mov
dec
or
pop
dec
fsts
outsl
cmc
adc
into
jae
pop
and
cwtl
call
lods
fsts
cmpsl
frstor
lcall
push
mov
idivl
and
dec
out
gs
add
mov
mov
mov
sub
enter
mov
orb
imul
pop
enter
or
or
out
call
cli
ljmp
mov
xor
call
xchg
push
scas
test
adc
cmpsl
jle
ss
into
mov
pop
xor
inc
mov
imul
jne
or
pop
outsb
xor
and
ds
sub
xchg
sbbl
out
mov
xchg
testb
data16
xchg
cmpsl
pop
call
inc
cmp
lahf
pop
xchg
xor
mov
push
popf
and
sbb
mov
push
or
movsb
mov
rcrb
outsb
cwtl
push
aaa
insl
and
dec
mov
movsl
jmp
repnz
jbe
lahf
into
pop
mov
add
fisubrl
cmpsb
xchg
fdivrl
ret
loop
lods
sahf
xchg
pusha
push
push
jle
repnz
dec
add
js
js
pop
xchg
fisubrl
cmc
adc
aad
lcall
xchg
mov
fwait
mov
fucomip
leave
dec
daa
icebp
es
cmp
popa
push
gs
mov
mov
mov
bound
add
mov
les
inc
jp
sub
neg
xor
jle
icebp
call
inc
shll
test
aas
fistpl
inc
xor
int
or
push
nop
mov
jp
fsubs
xchg
and
xchg
cltd
xor
iret
mov
mov
cmp
movsl
xchg
ljmp
xor
jle
push
les
outsb
pop
sbb
in
jno
lret
xchg
push
outsb
cmpsl
xorb
arpl
daa
inc
lcall
stos
sub
mov
adc
rorl
add
aas
xor
lahf
in
iret
stos
notl
outsl
add
push
out
mov
pop
inc
push
mov
xchg
push
out
fnstsw
pop
pop
xchg
mov
inc
fsubs
loope
ja
aaa
jae
jbe
testb
xor
lods
test
outsl
mov
cmp
sbb
hlt
jno
mov
in
or
mov
js
dec
xchg
and
nop
jns
cwtl
cltd
push
ret
add
andb
xchg
lea
loop
cmc
cmp
mov
dec
push
push
jecxz
pusha
push
gs
shrb
lcall
cltd
dec
xchg
inc
jae
pop
jecxz
push
andl
scas
cmpsl
cmp
testb
rclb
adc
push
xor
mov
pop
lods
xchg
jge
in
adc
mov
push
jmp
pushf
fcoms
int3
jb
sbb
xchg
shll
adc
mov
push
aad
push
inc
cs
jg
mov
fidivs
out
ja
xor
imul
ret
out
add
push
pop
dec
sbb
int
add
push
mov
rol
cs
mov
sub
xor
push
or
mov
cld
orb
and
sub
test
std
and
cmp
mov
jl
lods
fs
cli
pop
adc
jecxz
iret
pop
xor
xchg
cmp
fidivrs
and
jo
fisttps
pop
add
sub
mov
ss
and
push
ret
testb
scas
outsl
inc
int
lock
mov
mov
mov
mov
add
sub
outsb
add
repz
dec
enter
xchg
sub
sbb
dec
rcrb
je
adc
push
push
mov
in
and
and
out
xor
sahf
mov
pushf
ret
xchg
mov
mov
test
loope
daa
cmpsl
rclb
jle
iret
adc
push
stos
pop
loop
inc
imul
sub
xchg
insl
lret
xchg
inc
xor
shlb
pop
andl
push
mulb
mov
pop
adc
sub
les
mov
cld
sbb
push
cmp
pop
es
add
fisubl
jb
mov
pop
popa
jmp
movl
sbb
xchg
in
and
mov
pushf
out
cmp
xchg
stc
rcr
inc
addl
lods
cmpl
pop
pop
sub
jmp
arpl
adc
mov
dec
addr16
lret
push
xor
push
lcall
ror
fwait
clc
sub
movsl
add
add
pusha
mov
out
xor
add
dec
orl
push
xchg
pop
push
and
stos
jg
sbb
or
out
sub
pusha
outsl
cs
pusha
adcl
dec
outsl
sbb
loop
repnz
aas
dec
xor
mov
xor
hlt
sub
sub
jp
in
stc
icebp
fsubl
int3
push
test
cltd
test
aad
fildl
jns
or
mov
mov
inc
inc
xorl
dec
hlt
jmp
sub
xchg
xlat
jbe
mov
pop
in
negl
xor
dec
or
mov
jecxz
jp
mov
mov
popf
ljmp
mov
jns
iret
cltd
xchg
or
mov
dec
dec
pcmpgtd
adc
lsl
icebp
push
imul
xor
aam
outsb
add
sbb
push
lea
test
std
lds
aam
popf
lods
inc
fwait
mov
sbb
pop
js
pushw
imull
daa
addr16
cmp
in
fwait
mov
or
outsl
push
cmp
icebp
mov
inc
jmp
sbb
add
xor
fidivrs
xor
sub
or
mov
jl
adc
xlat
movsl
jno
aam
sub
adc
xchg
or
xchg
imul
icebp
or
movsb
sub
add
ljmp
ja
jle
jge
inc
lods
fwait
mov
arpl
and
cmp
mov
outsb
sub
rclb
int3
je
mov
xor
jnp
and
fstpt
xor
mov
es
xchg
ss
xchg
jb
cmp
test
jl
repnz
test
outsl
jo
stos
dec
scas
dec
inc
pop
add
loop
int3
adc
dec
push
rolb
push
ja
repnz
pop
pop
mov
xor
jge
jbe
xor
iret
popf
mov
mov
pop
xchg
cmp
aam
fdivrp
lcall
mov
in
push
xor
xor
push
xchg
sbb
insl
push
icebp
fstpt
push
and
mov
xor
xor
pop
jns
or
outsl
and
inc
and
outsl
je
pop
or
cmpsl
mov
inc
movb
xor
bound
dec
jl
test
mov
mov
scas
loope
loopne
int3
lcall
dec
iret
stos
sub
push
xor
or
push
push
popf
ss
in
es
and
leave
mov
xor
xlat
adcb
adc
or
pop
pusha
push
and
sub
inc
push
and
jbe
fcom
xor
push
mov
lods
inc
xor
fs
inc
por
into
hlt
inc
lret
cmp
mov
cmp
sbb
push
xor
jle
push
pop
cmp
outsb
lret
jecxz
sbb
data16
dec
adc
out
out
cmp
sbb
movsl
scas
mov
pop
lret
rcr
data16
mov
aad
fidivrs
fldt
jb
pusha
mov
inc
cmp
inc
sti
shl
imul
loopne
lret
and
loop
mov
jne
jge
lcall
push
cmpsb
add
cwtl
aas
xchg
cmpsb
fsubl
add
inc
cmpsb
data16
pop
das
cmp
jmp
xor
fisttpl
push
and
mov
pushf
mov
fcmovne
xorl
mov
fdivrs
sub
sbb
push
fwait
mov
ret
cld
inc
and
cmp
nop
pop
add
shlb
ret
mov
push
stos
ds
push
cltd
pop
scas
in
insl
mov
mov
mov
cmpb
adcb
sarb
loope
adc
jp
and
cmp
int
movsl
dec
adc
jnp
xlat
jnp
pop
mov
add
test
mov
inc
pop
cwtl
call
cld
xchg
je
jge
mov
test
push
pop
xor
inc
sub
sub
mov
out
adc
fisubs
mov
filds
aaa
fldenv
aad
aam
bound
mov
data16
hlt
mov
loope
push
mov
inc
imul
pushl
cmp
imul
jne
or
inc
lock
pop
data16
cmpb
xor
leave
dec
push
jmp
xor
pop
pop
inc
add
mov
shll
repz
cmp
add
or
mov
adc
pop
mov
test
lahf
mov
mov
xchg
imul
std
test
imul
xor
repnz
addr16
nop
int3
fwait
rorb
cmp
mov
pop
loop
jmp
push
xchg
je
jl
loope
je
or
sbb
mov
ret
addr16
adc
push
cmp
push
ss
and
mov
adc
cmpl
inc
xchg
lret
mov
in
pushf
push
clc
mov
push
push
ficomps
mov
aaa
cmp
aam
mov
into
mov
dec
pop
dec
push
aam
xchg
loope
sbbb
fsubs
cmp
mov
or
dec
push
push
sub
push
or
sub
test
adc
push
mov
xchg
mov
shrb
enter
jnp
jle
je
aam
inc
cld
jne
mov
stos
test
popa
jbe
sbb
dec
ss
lret
xchg
mov
adc
or
loopne
mov
and
int
pop
adc
push
add
fxch
pusha
aas
fidivrs
lcall
repnz
addr16
ja
movsb
pop
cmpsb
adc
jb
ficompl
sahf
sub
bound
mov
stos
cld
or
std
lds
xchg
fsubrl
iret
lahf
dec
test
in
adc
pop
sbb
lret
sub
andl
cmp
in
xchg
push
push
xchg
inc
sbb
fabs
sbb
dec
out
xor
ficoms
cmp
or
rcrb
sub
cli
adc
sub
add
hlt
sub
arpl
insb
cmpsl
outsb
dec
push
pop
xor
cli
push
test
cmp
mov
xchg
out
out
add
outsl
movsl
testb
sub
fmul
jp
jne
call
mov
repz
mov
or
mov
sbb
xchg
pop
jo
ret
fildl
mov
mov
xchg
sarb
cmpb
pop
mov
aad
jl
xchg
inc
test
scas
mov
xor
cli
cmc
movsl
lret
jmp
mov
mov
popa
mov
or
mov
dec
mov
sub
je
push
xor
mov
clc
push
add
in
sub
mov
mov
cmpb
les
hlt
xor
std
ret
out
xchg
scas
jmp
aad
ja
and
pop
pop
clc
sub
aam
test
cmp
mov
inc
push
sbb
stc
pop
fldcw
push
pop
inc
sub
and
push
cli
jg
mov
andl
mov
imul
sub
jge
hlt
xchg
mov
scas
and
pop
mov
dec
and
jmp
rolb
fst
cwtl
inc
sub
mov
pop
cmp
mov
repz
jns
popa
aam
xor
es
int3
popa
jnp
mov
testl
adc
add
in
mov
pop
push
sub
adc
mov
test
adc
stc
out
out
loopne
dec
cltd
xchg
test
je
xchg
cmp
xor
jg
sub
push
arpl
nop
nop
rcll
stos
shlb
mov
dec
add
sub
mov
sbb
lods
mov
mov
mov
pop
lods
inc
mov
xchg
idivl
fsubr
push
pop
cmp
inc
mov
bsr
int3
dec
fdivp
xor
xchg
mov
pushf
mov
mov
add
orl
pop
cld
dec
lds
mov
rcrl
sbb
xchg
jae
mov
ret
loope
cmp
sbb
outsl
insl
hlt
xor
mov
push
push
mov
dec
hlt
into
fimull
mov
mov
sub
insl
imul
sti
fnsave
nop
pop
lahf
push
std
pop
jg,pt
mov
ret
push
cmp
lock
or
xor
std
cmp
mov
xor
push
jno
stos
mov
cwtl
jecxz
loopne
cld
popa
imul
push
or
inc
imulb
mov
xchg
cwtl
ja
push
call
jge
mov
and
mov
test
cli
mov
push
sub
sub
out
les
data16
stos
inc
inc
xchg
dec
xor
test
jg
mov
minps
fidivrs
pop
jb
jle
stos
push
call
addr16
jns
fdivl
inc
jo
in
aam
xor
mov
xchg
push
cmpsl
xor
ret
fdivl
and
decl
push
cmp
sbb
mov
shll
jno
sbb
pop
inc
fcompl
lods
das
lods
xor
or
jnp
push
jp
cmp
insb
ss
sbbl
rcrl
cmpsb
sarl
or
leave
xchg
ljmp
adc
jmp
cmp
mov
push
in
sti
xor
push
cmc
jmp
das
lcall
and
imul
dec
pusha
cmp
dec
jecxz
or
test
test
xchg
in
mov
adc
subl
stos
leave
mov
out
ja
loopne
xchg
push
call
sub
jle
adc
xor
repnz
mov
jmp
test
push
fimuls
lock
ret
aas
dec
hlt
push
fbstp
inc
mov
sbb
dec
ds
inc
stos
xchg
xchg
or
pusha
mov
fisubrl
repz
test
cmp
adc
mov
jp
lods
aam
pop
mov
aad
jo
stos
jne
jb
das
xchg
fs
stos
xchg
lahf
xchg
sti
sbbb
mov
repz
add
adc
divl
cld
clc
xor
int3
sub
pop
imul
inc
aam
inc
push
jmp
mov
xor
mov
aas
jle
push
sbb
sbb
pop
outsb
scas
sbb
movsb
fucomp
add
stos
out
xchg
ds
dec
and
nop
aam
xchg
mov
dec
sub
icebp
in
imul
xchg
cli
andb
mull
jno
dec
xor
dec
mov
ja
sarb
rolb
xor
sub
sub
lds
mov
out
jl
dec
cmp
mov
in
bnd
pop
dec
aas
addr16
sub
mov
adc
jns
jge
cwtl
fisubrl
in
inc
out
out
inc
cmp
and
pop
lret
push
jmp
dec
fs
enter
pop
iret
add
jns
shl
push
adc
push
shr
jmp
lret
cmp
and
add
dec
adc
push
popf
or
xlat
jl
movsb
jp
push
sub
or
inc
sbb
incl
int
mov
imul
and
jo
fucomip
testb
xor
dec
push
test
test
mov
gs
xchg
testb
orl
enter
js
fcompl
arpl
insb
push
ds
cmpsb
xor
pop
sbb
popa
jnp
call
pop
add
mov
stos
cmpsb
loop
add
push
icebp
mov
adc
xchg
pop
insb
hlt
mov
and
pop
int3
cmp
mov
cmpl
or
fwait
scas
fs
and
mov
pop
sub
lret
bound
mov
cmp
mov
xchg
push
imul
lock
jae
adc
xor
in
loop
mov
pop
in
sbbb
in
loope
shrb
pop
icebp
sub
out
push
mull
mov
cmp
mov
or
sbb
sbb
xor
mov
or
push
fisubrl
jge
fldl
cwtl
clc
test
mov
jge
cli
jle
and
cli
and
pop
mov
mov
mov
int
shrb
shrl
fdiv
cmc
and
ss
push
adc
sbb
outsb
mov
sub
out
test
ja
gs
pop
pop
scas
ja
rcrb
add
and
lret
shrl
mov
jg
dec
test
lods
test
jg
std
shlb
ds
dec
cmp
stc
sbb
add
lock
gs
sub
sti
sub
push
clc
subb
push
xchg
pop
jg
add
aam
gs
xchg
or
ljmp
std
jo
inc
ss
ds
ret
cmp
inc
popf
fistpl
cli
pop
lret
roll
xchg
inc
mov
or
int
arpl
mov
mov
clc
dec
les
popf
in
les
xor
scas
pop
repnz
and
inc
xorl
push
mull
mov
repnz
iret
pop
fstl
aad
test
adc
cltd
mov
mov
dec
sbb
call
test
sahf
inc
mov
pop
fiadds
xchg
mov
ja
stc
out
dec
stos
sti
roll
push
add
add
lcall
pop
out
mov
push
dec
cmp
out
lret
shlb
pop
loop
xchg
inc
and
push
adc
test
in
lds
mov
inc
imul
xchg
sub
out
mov
pop
sbb
mov
in
cwtl
frstor
int
bound
mov
in
pop
cmpsl
inc
rorb
pop
daa
inc
dec
lods
call
xor
jno
jno
in
aaa
ljmp
and
cld
orb
rcll
jb
or
data16
movl
fs
nop
filds
inc
pop
push
mov
call
int3
outsl
mov
je
icebp
push
sbb
ds
push
pushf
cwtl
dec
xor
mov
and
leave
stos
xor
sbb
or
cltd
hlt
mov
mov
cmc
xchg
mov
sbb
mov
icebp
or
cmc
mov
sbb
inc
cmp
jae
push
dec
leave
mov
sarl
nop
bswap
mov
iret
push
stos
xor
push
nop
ror
mov
xchg
test
push
rolb
popa
jl
push
fcmovnb
mov
pop
push
sahf
lcall
pop
xchg
sub
stos
in
stos
shlb
mov
lea
mov
sbb
aas
movsb
fdivs
loopne
xchg
xchg
dec
mov
jecxz
test
loop
add
outsb
pop
dec
inc
adc
ret
out
sbb
neg
add
mov
sbb
push
and
push
xor
icebp
push
pushf
bound
out
inc
mov
fldl
in
icebp
adc
xchg
popa
pop
mov
imul
sbb
xor
sub
xchg
aad
aaa
mov
sti
jnp
lds
mov
stc
jmp
fadd
les
cmp
sub
pop
push
jbe
pop
xchg
das
hlt
sub
mov
aaa
mov
pop
hlt
nop
stc
movsb
enter
sub
mov
lret
inc
std
sbb
sti
rclb
in
inc
icebp
jmp
and
insb
inc
adc
jo
or
ret
jb
out
jo
or
jbe
push
inc
sbb
in
xchg
out
and
adc
mov
push
test
out
mov
push
in
mov
xchg
sbb
cwtl
pop
push
ds
mov
sti
movsl
jo
mov
andb
cmp
push
hlt
movsl
adc
int3
das
push
cltd
pop
test
negb
pop
xor
fdivs
push
data16
ds
in
cmpsb
out
inc
hlt
imul
jno
push
dec
sub
cmpb
mov
jp
dec
scas
adc
daa
or
xchg
jnp
les
push
pusha
shr
clc
add
pop
fsubl
cli
repz
push
lods
xlat
sub
in
jno
enter
mov
mov
adc
loope
rolb
dec
fisubl
push
test
and
insb
insl
pop
sub
jo
bound
cmp
pop
out
lcall
dec
mov
jecxz
xor
and
test
mov
xchg
mov
and
dec
mov
lock
pop
aam
xchg
ja
cmp
aad
pop
cld
pushf
ds
pop
sub
and
test
mov
iret
js
and
repnz
xor
adc
pushf
test
cmp
sahf
jne
push
push
add
push
insb
fisubrl
out
xor
mov
xchg
add
mov
mov
pushf
and
and
lock
aam
out
in
divl
sti
pop
dec
dec
imul
jge
pop
pop
cltd
mov
push
imul
mov
inc
lcall
or
jns
inc
lcall
jnp
add
mov
sbb
pop
or
mov
test
int
ret
mov
pusha
pop
popa
cli
sub
mov
mov
lds
pop
cltd
je
in
mov
aam
daa
cwtl
imull
cmpsl
push
imul
data16
loope
fs
fucomip
adc
pop
and
xchg
test
lcall
lds
jg
adc
mov
adc
and
pop
jge
std
cmpsl
mov
push
jl
cmpl
sub
aas
stc
lahf
inc
or
dec
push
pop
and
aam
cmpsb
icebp
or
push
or
mov
inc
jnp
arpl
andb
fucom
sbb
aam
push
ljmp
jg
push
xlat
add
or
pop
mov
loope
and
pop
dec
cld
sub
add
adc
and
xor
out
inc
out
pop
inc
cmp
shll
xor
idivb
nop
xchg
xlat
xlat
jb,pn
leave
fdivrs
xchg
push
outsb
mov
jl
xchg
rolb
imul
in
jns
cld
and
jp
cmp
pusha
pop
add
cltd
repnz
xor
int
add
rorb
mov
shrl
mov
xor
icebp
sub
repnz
test
or
dec
add
int
gs
inc
arpl
dec
rorl
in
scas
jb
inc
cltd
addr16
in
inc
jb
insb
cmpsl
xchg
add
sbb
jg
cmpsl
jl
int
and
rcl
mov
xor
jae
nop
xchg
inc
mov
shll
sub
icebp
lods
xlat
xchg
out
int
das
dec
mov
pop
mov
fs
adc
dec
adc
dec
jl
mov
jae
inc
insb
cmp
arpl
cmp
push
call
fisttpll
add
loope
mov
sbb
fsubrl
sbb
or
or
inc
or
push
mov
into
dec
push
incl
icebp
mov
jl
push
sbb
outsl
in
out
xchg
jb
jb
fs
outsb
dec
dec
and
mov
insb
jno
call
gs
sbb
mov
clc
test
mov
sbb
xchg
js
gs
mov
ljmp
popa
mov
fimull
sbb
mov
adc
test
pop
xchg
dec
aam
test
imul
notb
icebp
scas
push
repnz
mov
xchg
jns
xchg
push
lcall
cwtl
sar
cmpl
adc
mov
and
std
and
andb
loope
test
pop
jmp
outsb
cltd
mov
mov
loop
in
jecxz
arpl
mov
cmpsl
xor
cmp
jbe
repnz
ret
pop
movsl
pop
fwait
fadds
dec
ja
js
rcrb
and
xchg
rorb
inc
and
mov
cwtl
jno
aam
mov
dec
xchg
ja
fdivrl
popa
into
cmp
sbb
loopne
mov
lods
push
cmp
out
push
cmp
push
aas
xlat
ror
psubb
in
adc
inc
adc
fadds
dec
roll
lea
or
testb
jge
les
outsl
xchg
jns
lods
push
imul
inc
mov
adc
fwait
jne
fidivs
sbb
fsubs
jle
jl
nop
push
sub
mov
pop
xor
fadds
adc
sub
cltd
sbb
mov
subb
loope
pop
into
fbstp
jae
and
pop
mov
ss
push
lds
add
xor
or
ret
int
xchg
loope
adc
mov
inc
mov
ret
int
add
fistl
adc
jb
xchg
mov
or
daa
sub
lcall
push
lock
test
or
add
pushf
sub
ret
inc
rcl
cmc
fucomi
maskmovq
negl
push
bnd
in
inc
std
adc
lret
pop
in
or
jnp
and
and
dec
xor
cmpsl
aam
ret
jecxz
cmp
mov
pop
outsb
cli
xor
xchg
inc
imul
leave
push
aaa
sbb
or
shll
call
ljmp
mov
stos
idivb
leave
mov
mov
xor
mov
lods
and
push
popf
cltd
pop
shlb
daa
dec
xor
stos
insl
popl
sarb
pop
loop
int
pop
jmp
pop
in
jmp
jb
fidivs
loope
mov
or
clc
sbb
push
out
cmpsb
xchg
in
sub
in
mov
loope
jbe
testb
mov
aaa
das
dec
mov
neg
cmp
jge
stc
inc
sub
pop
mov
testl
das
aam
cmp
arpl
ucomiss
mov
enter
scas
dec
xor
cmp
out
adc
lret
mov
mov
scas
cmp
or
movsl
mov
fildll
je
dec
sbb
loop
cmpsb
ret
add
out
pop
cmp
arpl
mov
mov
jbe
outsb
bound
lcall
rcll
bswap
inc
movsl
ret
push
adc
xor
faddl
flds
pop
pop
clc
je
aaa
and
adc
out
es
call
movsb
push
lds
cmp
inc
xor
hlt
iret
add
fwait
repnz
and
test
lds
dec
pop
pop
mov
and
push
push
mov
xchg
nop
pop
xchg
sbb
loopne
mov
inc
add
in
lods
into
add
ja
mov
outsb
int
mov
dec
pop
js
or
inc
push
popf
or
mov
xchg
dec
pop
int3
cmc
std
roll
jo
jnp
loope
repnz
jmp
xchg
fistpll
mov
mov
push
push
mov
idiv
lahf
mov
lcall
shlb
lods
xchg
insb
sub
mov
inc
mov
stos
mov
push
mov
push
ja
icebp
sub
out
pop
stc
mov
lods
test
data16
pop
lods
mov
pushf
dec
cli
call
cmpsb
popf
dec
ja
decb
fcmovnbe
cmp
jmp
jmp
cltd
cmp
sbbb
sbb
dec
testb
dec
andl
hlt
cmpsl
shll
mov
jge
test
xchg
int3
pop
xor
mov
push
xchg
in
insb
imul
pop
add
test
int
hlt
inc
cltd
inc
pop
scas
shlb
into
xchg
addb
cmp
enter
cmp
addr16
or
sar
jno
jbe
std
repnz
call
mov
adc
je
test
inc
jae
push
add
inc
outsl
xchg
jno
test
clc
fbstp
push
and
xor
imul
pusha
sti
into
add
fstp
cmp
imul
mov
sub
dec
mov
or
ret
out
sub
in
or
inc
fistpll
daa
es
add
sub
enter
movsb
sub
mov
adc
sub
test
test
inc
mov
push
lret
sbb
test
or
lea
push
adc
mov
mov
scas
or
push
lods
jne
lods
jae
arpl
je
dec
mov
mov
mov
dec
pusha
insb
int3
jne
popa
jne
loop
mov
test
cmpsb
xchg
loope
dec
adc
jmp
or
dec
daa
fwait
outsb
stc
insb
lcall
push
inc
mov
out
mov
sub
inc
pop
xor
dec
insw
push
stos
mov
xor
dec
ret
sbbb
jbe
je
jg
or
mov
mov
mov
jae
and
jnp
adc
and
jmp
pop
dec
mov
ret
jl
jmp
rcr
lahf
xchg
mov
cmpsb
scas
mov
xor
sbb
dec
call
jo
adc
pop
pop
enter
push
dec
addr16
cmp
mov
shrd
xchg
pop
das
inc
in
loop
push
dec
imulb
lods
and
into
mov
in
inc
and
out
in
fsubl
jns
mov
dec
and
iret
adc
cmp
pop
roll
shll
cld
mov
pop
add
mov
xchg
loope
fs
movb
jp
jle
xchg
pushf
pop
jmp
sbb
addr16
fnstcw
enter
negl
cwtl
mov
sbb
sbb
mov
inc
mov
test
in
hlt
hlt
adc
pop
shrl
testb
adc
jge
pop
inc
flds
cli
and
xor
xchg
scas
push
loop
lods
mov
out
cli
push
xchg
inc
sub
rorl
ret
in
and
sbb
lods
jbe
push
mov
cmp
out
or
notl
enter
pop
lcall
pop
out
add
in
movzwl
cwtl
sbbl
adc
call
adc
sahf
mov
dec
rcll
aam
inc
sbb
scas
lods
cli
mov
leave
cld
mov
mov
fndisi(8087
outsb
push
cmp
mov
add
add
into
fs
out
jmp
lret
int
cmpl
mov
pusha
aas
inc
into
mov
shrl
lahf
mov
in
fstpl
jecxz
clc
adc
mov
sbb
xor
into
mov
inc
outsl
mov
imul
push
mov
adc
jae
imul
jmp
hlt
aam
mov
in
xor
mov
cmpsb
pop
sbb
arpl
add
mov
sub
cmp
pop
and
pop
in
mov
sarl
pusha
inc
rcrb
out
pop
loope
pop
leave
cmp
fcomp
out
xlat
ret
cmp
and
stc
push
mov
inc
mov
dec
cltd
es
add
jae
pop
cmp
loop
sti
movsb
or
mov
pushf
out
adc
js
outsl
add
cmp
pop
movsb
rclb
loopne
aaa
stos
xor
iret
or
and
jae
sahf
inc
push
mov
sub
push
mov
jmp
sbb
mov
pop
pop
outsb
mov
push
dec
ret
add
xor
ret
je
and
mov
mov
mov
rorl
insb
push
mov
xor
cld
xor
scas
push
or
cmpsb
add
mov
ja
dec
dec
iret
repz
out
loop
jns
lods
fiaddl
cmpsb
popl
pop
jecxz
aas
icebp
push
in
fdivs
and
nop
mov
fnstsw
push
push
mov
test
lcall
lds
push
das
lods
push
or
pop
or
loopne
pusha
push
gs
decb
mov
int3
es
es
pop
pop
pushf
dec
out
fs
jle
sbb
iret
dec
outsb
fidivrl
jl
push
and
jne
xchg
cmp
pop
lahf
std
sahf
dec
movsb
stos
jmp
push
inc
aas
or
cmp
les
xchg
add
ja
test
in
sbb
mov
mov
repz
cmpsl
cmp
fmull
iret
inc
jmp
in
jno
sbb
mov
notl
fdivrs
adcb
adc
xchg
cmpb
rclb
addr16
loope
mov
xchg
call
out
add
jb
cli
into
cmpsb
stos
jmp
push
addb
push
sub
cmp
sbb
mov
fprem
scas
mov
cmp
cmp
push
pop
xchg
xchg
mov
insb
popa
test
sub
adc
jno
test
jno
fcompl
mov
scas
push
add
adc
cmp
orb
sub
pop
fldl
and
xchg
outsb
cmp
or
mov
add
imul
push
cmp
push
cwtl
rol
pop
leave
lahf
jnp
mov
cmp
inc
cmp
and
rcrb
repnz
push
repz
sahf
rorb
pusha
mov
lcall
add
inc
jbe
sub
movsl
cmpsl
xchg
in
loop
and
fnstenv
xor
dec
std
movsb
add
jbe
jl
mov
push
out
das
ja
lea
mov
adc
out
addr16
and
lods
in
sarl
aam
cmp
clc
sub
mov
push
test
cltd
pop
mov
mov
mov
aas
int
and
jnp
xchg
pop
arpl
outsb
push
mov
enter
test
jecxz
add
outsb
xorl
cs
add
lock
xlat
repnz
fstpl
cmpsb
mov
movsb
cmp
mov
cmp
jne
add
test
stos
xchg
bound
in
xor
mov
xchg
repz
pop
and
mov
jns
sub
out
std
fwait
mov
or
sub
out
arpl
addb
jp
and
xor
cmpsb
jne
push
fucom
stc
pop
sbb
test
jecxz
ds
and
mov
push
mov
negl
mov
inc
in
jp
cmp
cltd
hlt
pop
push
adc
jns
or
lret
sbb
movsb
sbb
cld
pop
sbb
mov
imul
jbe
test
jg
sarl
shll
aaa
ret
ja
jne
mov
shll
int3
repz
gs
jg
imul
popf
out
adc
fildll
push
scas
and
imul
rol
adc
or
pop
sub
xchg
fcomi
sbb
xor
mov
popf
inc
xlat
es
jmp
decb
push
gs
daa
lcall
mov
dec
ret
xchg
repz
mov
loopne
stc
cmp
lcall
stos
pusha
outsl
jl
leave
lods
sahf
mov
fsub
vpsraw
cmp
daa
pop
jbe
inc
mull
arpl
dec
fimull
cmpsl
les
jp
mov
dec
sub
xchg
in
mov
jo
mov
jge
lret
jp
jmp
andb
ror
pop
lcall
clc
push
ret
cmp
dec
out
sub
das
xor
rcr
aam
adc
dec
fidivs
shll
pop
xor
roll
xor
outsl
cltd
dec
enter
fucomp
pop
mov
push
aad
iret
jg
test
mov
mulb
mov
pop
dec
or
cmp
stos
ljmpw
jno
fucomip
jb
push
mov
inc
push
jecxz
xchg
lods
jecxz
inc
mov
popa
jp
loopne
inc
bound
xchg
ret
lret
mov
jo
pop
hlt
fsubp
rcrb
push
flds
shrb
es
mov
jno
leave
pop
mov
cmpsb
push
cli
pushf
nop
jne
xchg
sub
aam
sbb
aaa
dec
fnsave
daa
mov
movsb
cmp
pop
gs
cmpsb
lods
dec
adc
push
outsb
dec
mov
or
pop
sbb
dec
lcall
jo
mov
sahf
fsubrs
outsl
es
mov
bound
pop
jge
adc
fmulp
scas
pop
mov
gs
inc
ror
pop
out
xor
or
divl
pushf
inc
test
inc
outsb
cmp
xor
pop
fbstp
or
inc
cmp
jne
mov
popl
push
inc
cmp
push
subb
test
jae
mov
das
inc
ficompl
push
adc
mov
adc
sti
arpl
cld
mov
icebp
push
icebp
or
sbb
pop
pop
mov
xor
cmp
adc
dec
inc
inc
xchg
xchg
push
jbe
lds
outsb
lock
dec
mov
scas
in
push
mov
data16
xchg
leave
jnp
mov
lea
add
adc
dec
pop
or
cmp
flds
cmp
lret
push
pushf
adc
lahf
mov
sti
or
sahf
outsl
adc
and
mov
std
stos
pop
outsl
mov
xor
repnz
icebp
mov
in
mov
adc
and
mov
push
je
add
clc
or
mov
es
cmp
xchg
arpl
mov
or
test
daa
cld
mov
mov
clc
fstl
mov
clc
shll
outsl
imul
xor
enter
push
scas
shlb
push
leave
in
push
movl
sbb
mov
lds
imul
int3
jmp
in
je
or
mov
xor
dec
mov
pop
xchg
sub
sbb
xor
out
out
push
std
ret
sub
xor
sbb
xchg
cmpsl
out
fs
jns
or
sub
inc
fwait
popf
adc
or
fs
xlat
out
fcmovnu
clc
addr16
and
data16
shl
pop
xor
daa
cli
dec
dec
mov
inc
imul
fdivrs
mov
dec
dec
mov
jns
or
push
pop
int3
fisubrl
ds
jl
fsts
sbb
inc
lahf
mov
dec
and
jns
adc
sub
sbb
inc
gs
pop
jg
xor
xchg
sti
pop
pop
pop
push
sbb
idivl
cltd
call
out
sbb
stc
push
lds
add
cmpb
inc
cltd
jb,pn
mov
push
hlt
push
and
cmc
scas
cmp
dec
das
pop
fisttps
ds
mulb
xchg
xor
fists
jmp
je
jb
leave
clc
sahf
cmc
and
inc
icebp
adc
xchg
inc
cli
mov
mov
filds
mov
js
push
out
arpl
lret
subb
or
mov
mov
arpl
mov
cli
sbb
aad
adc
mov
push
add
pop
lods
xor
ds
fists
cmp
xchg
out
rolb
adc
add
jp
or
dec
out
sub
mov
cld
xlat
mov
es
or
mov
xchg
push
add
xor
pop
imul
repnz
mov
cwtl
cmp
pop
sub
or
xor
pop
cmp
xor
inc
scas
mov
in
lock
mov
test
add
cld
push
mov
fldt
adc
dec
popf
outsl
mov
arpl
cmp
jmp
jbe
popa
cmp
push
aad
call
test
inc
ret
sbb
adc
mov
movsl
dec
insl
cmovle
bound
pusha
icebp
shlb
ds
nop
cmpsl
jns
outsb
rol
loopne
adc
adc
test
out
je
aad
mov
mov
ds
jmp
test
jle
popf
xor
test
and
cmc
lret
xchg
and
jmp
rorl
outsl
push
ss
scas
or
jno
loope
inc
xchg
xor
cs
aad
pop
xchg
fs
pop
inc
test
xchg
notb
push
test
sbbl
xchg
rclb
mulb
rolb
mov
out
aas
scas
sub
out
mov
jb
xchg
mov
and
sbb
jge
mov
sub
push
fcmovbe
popa
push
and
icebp
and
das
cmpsl
adc
pop
cmc
add
out
lock
insb
or
mov
pop
xchg
jle
pop
ror
rorb
lock
xchg
aaa
push
mov
mov
add
mov
and
jp
addr16
pop
popf
call
test
ss
mov
mov
mov
cld
adcb
jbe
cwtl
rcll
inc
std
or
imul
xor
cld
daa
sub
pop
int
push
ret
out
leave
jbe
mov
das
sub
cmp
dec
ret
pop
cmc
pop
jge
insb
or
sti
or
or
bswap
pop
movsb
lret
insb
mov
iret
mov
loope
arpl
gs
inc
dec
cmpb
ret
add
add
and
adc
stos
jge
int3
imul
inc
in
rcl
je
scas
sub
out
pop
mov
sub
int3
int
jae
or
jo
pop
insb
pusha
int
frstor
aas
fisubs
mov
add
mov
lods
mov
mov
sub
jg
mov
int
add
mov
mov
loop
fs
add
and
and
xor
lods
cmp
sbb
mov
mov
out
mov
xor
aaa
inc
and
xchg
ljmp
mov
fldt
push
mov
inc
outsb
add
invd
jb
ja
dec
icebp
bound
or
in
enter
xor
push
or
dec
pop
in
add
jp
mov
xchg
cs
incl
push
fwait
jne
xor
fiadds
adc
jg
pop
xchg
pop
push
cmc
xchg
js
pop
jmp
mov
int3
fadd
cmp
sbb
pop
mov
xor
jo
hlt
dec
adc
pop
mov
test
and
outsb
cli
fiaddl
mov
scas
nop
sbb
adc
cmp
sub
ljmp
in
add
dec
cmpsb
mov
pop
cld
fists
cmp
fmull
inc
pop
ret
xor
lds
sarl
pop
mov
pushf
xchg
sbb
xchg
jnp
sahf
push
in
xor
push
and
and
add
sbb
loopne
lods
pop
adc
pop
mov
stc
movsl
ljmp
mov
cmp
add
movsb
aad
imul
test
es
mov
xor
cmp
jno
js
adc
inc
and
fldcw
sbb
imul
push
mov
sub
notb
aaa
enter
stos
call
imull
jg
mov
data16
mov
jo
stos
pop
jne
fistl
and
add
movsb
push
push
xchg
movsb
aam
rcll
adc
pop
xchg
fmuls
sbb
fwait
pushl
rclb
ja
fstps
pop
pop
iret
pop
repz
fwait
out
adc
arpl
push
cmp
imul
jecxz
pop
je
popl
ljmp
stos
into
cmp
sub
dec
push
xor
pop
mov
lret
ljmp
dec
mov
icebp
aam
inc
in
mov
rorl
jne
out
mov
xlat
dec
mov
test
sti
cwtl
cmp
add
jb
rorb
or
dec
xchg
xchg
vpmadcsswd
sbb
adc
sub
inc
insl
pop
insl
pop
pop
movsl
mov
ficoml
inc
movsb
jno
jae
mov
inc
imul
popf
inc
aas
rorl
inc
lds
dec
push
js
ja
dec
lcall
sbb
inc
add
adc
pop
mov
insb
arpl
push
mov
jmp
push
pusha
dec
and
xchg
cmp
xchg
pop
dec
sti
mov
pusha
clc
popa
out
add
lea
in
imul
cmp
leave
int3
cmc
pusha
es
shlb
aad
xchg
ss
adc
stc
ss
and
push
pushf
mov
jg
stos
mov
add
cmp
cmc
pop
cltd
stc
mov
mov
stos
sub
lret
xchg
sbb
lret
push
pop
push
bound
test
mov
insb
sbb
jne
inc
aas
or
cmc
stc
into
sbb
dec
jo,pn
xchg
mov
bound
aam
lods
mov
out
dec
dec
pop
inc
and
loopne
scas
inc
xor
push
push
inc
xchg
xchg
push
fcmovnbe
mov
lea
mov
xchg
and
imul
or
mov
cld
dec
mov
mov
and
mov
inc
cmc
mov
fwait
dec
jecxz
jae
fmuls
mov
add
int3
inc
push
out
iret
push
jns
mov
xor
pop
push
les
adc
sbb
sub
pop
or
mov
test
cmp
and
out
pop
xchg
int3
mov
sub
inc
addl
sti
filds
les
mov
cwtl
subb
scas
push
pop
testb
mov
mov
xchg
arpl
xchg
and
ret
nop
adc
subb
push
sub
mov
mov
je
xor
lret
cmp
cmpl
mov
inc
push
xlat
cmpsb
add
inc
fdivl
sub
ss
mov
adc
sti
sub
insl
add
fisttpll
ds
es
lea
xchg
cmp
dec
clc
mov
pop
mov
in
scas
jmp
test
in
and
int3
xor
cmpsl
sbb
test
mov
adc
sub
and
incb
sbb
leave
into
scas
or
jne
mov
stos
popa
add
pop
jecxz
jbe
mov
aad
dec
adc
movsl
ret
flds
inc
jmp
dec
cmp
jge
adc
pop
add
scas
add
push
add
movsb
add
mov
and
cmpsl
orl
mov
sbb
loopne
pop
mov
mov
lea
nop
enter
sub
aam
cmp
mov
mov
mov
sbb
cmp
addr16
lds
sub
mov
cmp
dec
mov
ret
jmp
or
fists
sti
sub
cmp
adc
xor
fsub
cli
daa
mov
cwtl
mov
pop
fidivrs
notl
aad
cld
pop
jnp
mov
sub
mov
out
add
imul
add
xor
dec
jb
mov
xchg
enter
jle
inc
fnstsw
mov
pop
lock
mov
xlat
aam
mov
xlat
xchg
or
test
sub
add
cld
ds
pop
xchg
stc
dec
push
mov
test
pop
xor
pop
pop
outsl
push
push
clc
or
pop
mov
out
cmpsb
add
dec
hlt
xlat
aam
mov
out
cld
aaa
insl
and
dec
clc
sub
mov
rorb
jp
fs
push
cli
jp
xchg
gs
push
cmp
pop
pop
data16
jmp
xor
pop
pop
cld
rcll
mov
push
sbb
dec
jle
mov
mov
jl
sbb
or
movsl
xor
cmp
int3
inc
stos
xor
and
je
mov
xchg
out
inc
adc
sub
loop
clc
xor
das
cmp
in
sbb
or
int
dec
push
push
mov
stc
sub
mov
js
sahf
jo
cmp
xchg
test
mov
push
movsl
into
push
adc
cli
jae
cmp
and
je
lea
sbb
lds
dec
jecxz
mov
sbb
inc
push
mov
sbb
mov
pusha
xchg
dec
js
jle
sarl
hlt
push
pop
fsub
aad
add
and
cmp
add
out
mov
cmp
ja
mov
sbb
pop
sti
adc
cmpsl
test
lea
lahf
fidivrs
mov
mov
fisttpl
ja
cmp
divl
scas
sub
or
fadd
lds
faddl
sub
enter
cltd
rcr
in
lods
mov
fucom
loope
out
jmp
lret
out
daa
pushf
outsb
rclb
jp
cwtl
add
inc
mov
cmp
dec
lcall
cmp
xorb
mov
inc
fsubp
jle
stc
sub
cmp
mov
ds
xlat
add
adc
pop
imul
cmpsl
push
xchg
or
jo
pop
ljmp
xor
lods
adc
jmp
insb
xlat
mov
and
adc
inc
call
lcall
es
cvtdq2ps
sbb
stc
mov
xor
dec
dec
mov
andl
xor
cmpsl
mov
loopne
mov
jecxz
idiv
push
loop
lcall
rcll
pop
repz
and
arpl
add
adcl
xlat
fisttpll
je
cltd
pop
jnp
xor
orl
xor
sub
loopne
xor
xchg
pop
pop
mov
dec
ja
adc
cmp
adc
and
add
mov
loope
cltd
fsave
inc
fsts
mov
jae
add
cli
pop
stos
mov
or
loopne
cmpb
xor
push
out
adc
cmp
sub
push
dec
xchg
add
mov
pushf
clc
pop
mov
adc
cli
pop
and
scas
sbb
mov
lock
divl
lock
pop
adc
sbb
xor
jg
jnp
cmp
shrl
test
sbb
fwait
xor
hlt
xchg
pop
cmp
cmp
insb
rcrl
mov
add
outsb
stc
test
adc
mov
or
pushf
push
sub
aaa
push
sub
push
xorl
jno
ret
arpl
adc
rclb
add
aad
enter
sbb
push
xor
orb
lret
aaa
cmpsl
in
andl
jmp
lods
mov
xchg
mov
or
or
and
popa
out
iret
ficompl
enter
insb
sub
cld
push
or
or
clc
add
call
cmp
sub
mov
mov
mov
pop
xchg
or
pop
mov
cwtl
test
xchg
fbstp
cmpsl
js
mov
sub
dec
mov
dec
lea
cld
icebp
inc
loope
lods
inc
or
sbb
inc
or
mov
mov
sbb
lcall
lock
lret
lods
ljmp
insl
inc
inc
sbb
fldt
aad
dec
imul
cmpsl
repz
int
lods
cmp
pop
inc
enter
mov
ret
inc
cli
iret
pop
rcl
add
and
xlat
je
push
inc
les
sub
packuswb
lret
scas
push
test
inc
sarb
mov
int3
push
aaa
mov
in
in
push
iret
lods
js
test
aam
inc
pop
enter
pop
push
int
and
mov
fimuls
call
and
xor
ds
add
jae
adc
shrl
arpl
xor
xor
jl
imull
xchg
jle
lret
inc
movsb
sub
mov
addr16
add
jb
outsl
add
cs
push
addl
sub
mov
repnz
inc
push
pop
test
aaa
xchg
addr16
mov
xor
xor
mov
cs
aam
and
push
mov
jnp
cmp
ja
sbb
rcrb
inc
out
ja
pop
fnstcw
sbb
xor
mov
repnz
imul
mov
scas
icebp
loopne
adc
push
xor
les
ficoms
mov
lock
in
je
dec
xchg
cmpsl
pop
add
push
inc
push
sti
mov
shrl
pop
xor
in
mov
dec
aaa
test
adc
daa
popf
inc
dec
and
int
cli
test
mov
and
hlt
add
pop
mov
sarb
lea
cmp
and
inc
mov
sarl
push
push
sarl
pop
mov
mov
imul
iret
and
pop
flds
rcl
call
clc
ficompl
jo
inc
dec
dec
insb
push
fwait
ret
inc
aas
mov
inc
dec
sbb
mov
adc
sub
xor
iret
inc
inc
idiv
scas
orl
testb
je
mov
lods
mov
add
popf
cmpsl
xor
fcomip
mov
js
ss
andb
sahf
mov
dec
sbb
sti
sub
in
lret
aad
pop
dec
jb
pop
or
push
or
or
outsb
and
cmp
cmp
loop
lret
ja
sahf
shll
jnp
cmp
sub
mov
mov
jp
lahf
and
inc
jae
jg
gs
cmp
mov
call
dec
and
sbb
cmp
fisubl
mov
cmc
call
dec
jns
sahf
lret
fninit
add
mov
aas
and
dec
mov
sbb
sbb
mov
sub
mov
lods
nop
flds
mov
push
je
pop
fwait
mov
sbb
movsb
push
ljmp
les
adc
inc
loop
mov
leave
mov
out
push
jge
cmp
push
cmp
adc
iret
cs
ret
idivb
inc
mov
daa
pop
fistl
sar
pop
sti
cmpsb
cltd
pop
push
cmp
push
fcmovnu
and
shlb
stos
dec
sbb
inc
inc
dec
leave
movsl
xchg
fisttps
mov
outsl
pop
jmp
nop
push
or
mov
dec
lret
pop
ja
roll
loopne
add
es
cmp
adc
popf
dec
fsts
xchg
lock
xor
aad
out
out
xor
loop
stc
mov
sub
stos
push
cmp
pop
daa
push
iret
cld
js
fisttps
xlat
dec
xor
xchg
mov
arpl
aad
adc
pusha
sbb
fstpt
add
and
jnp
les
sbb
test
pop
into
lret
lods
in
jp
sbb
and
cmp
aad
out
popa
adc
adc
push
sbb
aad
lods
push
mov
cmpsl
arpl
test
ds
and
daa
scas
sub
xor
bnd
aaa
inc
inc
scas
inc
pop
insb
loope
add
nop
pusha
push
test
fwait
xor
mov
pushf
add
repz
pop
dec
adc
mov
or
nop
cmp
jno
jb
insb
mov
loope
out
push
int3
mov
dec
scas
iret
ss
sub
sbb
std
mov
or
sahf
adc
aam
jb
sbb
out
lods
icebp
in
push
xor
fsts
popf
dec
stc
sbb
push
jl
loop
adc
push
testb
jno
lods
and
mov
daa
pop
out
pop
ret
and
jae
or
incb
cmpsl
ret
lods
jl
arpl
cli
adc
popa
sub
mov
sbb
insb
jp
mov
fsubrl
push
rolb
jp
stc
out
popf
dec
mov
in
cmp
xchg
fldcw
push
out
inc
popa
or
ds
mov
dec
lahf
push
into
jo
or
fisubl
cltd
jg
jp
testb
and
xor
push
pop
xchg
mov
cmpb
scas
jl
jns
idivb
dec
fwait
pop
jbe
mov
stos
leave
xchg
gs
outsb
sti
dec
fimuls
clc
or
adc
ljmp
scas
pop
lcall
int3
rorl
jp
fisttpl
sarl
dec
xchg
inc
sti
mov
mov
hlt
pop
lock
stos
push
sub
xorl
sub
dec
inc
push
xor
repnz
nop
adcl
mov
bound
fimuls
cltd
jns
ja
cs
jl
xor
mov
scas
mov
mov
or
out
jne
xchg
xor
in
in
decl
jp
daa
loopne
mov
pop
sahf
cli
outsl
icebp
pop
inc
xchg
daa
jae
cwtl
or
cmp
shlb
js
push
stos
dec
call
daa
jbe
push
cmp
fwait
lods
jp
cmpsb
clc
mov
sub
dec
pop
aaa
push
push
cmc
dec
movsb
popf
rcrl
scas
shrb
adc
mov
cwtl
jno
lea
push
jns
cmp
sahf
push
sub
jmp
sub
int3
or
mov
iret
mov
shll
and
sarb
push
mov
jp
adc
xor
inc
push
std
cs
dec
ds
scas
dec
xchg
jmp
test
jge
jmp
decb
inc
sbb
dec
lahf
xor
es
cmpsb
jne
mul
xchg
pop
cmp
jge
add
leave
addb
cltd
cltd
and
in
rcrl
push
sar
mov
dec
mov
ret
add
cmp
loope
push
add
in
out
mov
jne
push
divl
fchs
pop
cmp
mov
dec
cltd
out
pop
addb
inc
into
jbe
dec
in
push
sbb
jae
dec
dec
push
test
sbb
lds
or
push
sub
xchg
adc
add
pop
push
mov
mov
dec
cmp
js
cmc
add
xchg
int3
negb
xor
or
lcall
jle
movsl
addr16
aaa
xchg
fs
jl
pop
dec
and
push
outsb
mov
mov
or
jmp
and
push
sub
shll
inc
ret
jnp
lods
inc
pop
jmp
shlb
adc
in
adc
jnp
inc
andl
push
aam
lods
or
jno
fwait
or
push
add
imul
or
out
sahf
les
push
or
cli
jbe
sbb
pop
or
or
into
ljmp
dec
roll
loope
cltd
sbb
push
sbb
xchg
cmp
cmp
mov
shll
int
dec
add
lods
and
cltd
dec
cli
mov
xor
insb
js
push
add
xor
mov
insb
loope
repz
mov
add
sbbb
mov
push
aaa
cli
add
aaa
sub
xor
xchg
or
daa
cmpsb
add
mov
pop
sarl
mov
sub
fs
xlat
pop
lods
out
imul
adc
ja
stos
jle
push
shlb
iret
push
push
jl
les
inc
fwait
std
inc
cmc
xchg
lahf
adc
mov
aaa
pop
and
inc
in
adcl
jmp
out
clc
es
xchg
sbb
jle
mov
cmp
in
adc
les
mov
or
and
lds
cmp
mov
and
in
int3
pop
mov
xchg
movsb
pushl
mov
cmp
adc
xchg
scas
xor
push
jnp
mov
lcall
shlb
xor
test
mov
inc
adc
mulb
mul
lods
or
adc
leave
outsl
mov
repz
mov
push
popa
xbegin
mov
sub
pop
dec
dec
add
lahf
cmp
in
mov
cmpsl
inc
adc
pusha
add
lods
lret
outsb
xchg
mulps
outsb
sti
das
sbb
aas
sbb
dec
mov
lret
into
or
cmpsl
mov
add
aad
in
bnd
lcall
outsb
sti
cmp
mov
mov
mov
adc
lds
popf
dec
aas
mov
xchg
lahf
jl
pop
sub
shll
adc
sbb
jmp
dec
cld
jl
mov
jae
jo
cmpsl
pop
clc
mov
std
mov
ret
cmp
test
xor
jne
lods
add
enter
or
jnp
jp
xlat
fidivs
cmp
push
cmp
adcb
add
add
outsl
scas
ret
repz
push
je
ret
ffreep
mov
lock
aaa
xor
or
aas
push
hlt
fidivl
data16
push
nop
cli
xchg
pop
jae
or
inc
out
adc
enter
enter
push
add
jne
or
loopne
ljmp
sti
jmp
sub
fsubl
pop
add
dec
test
lock
push
out
pop
shl
rcrb
mov
sub
push
movl
adc
push
dec
aam
shrb
mov
out
arpl
xor
push
rorl
repnz
movsb
es
inc
ret
fistpl
pop
xor
arpl
lods
push
lret
cltd
pop
pop
jmp
in
mov
nop
add
push
jo
or
insb
cmc
mov
adc
and
dec
cmp
aad
shlb
sub
sub
aam
dec
js
push
addb
lret
push
cmpsl
xchg
shrb
xor
xchg
push
lds
mov
sub
and
sti
sti
rorb
in
xchg
mov
sub
inc
jmp
mov
stc
lods
pop
ret
js
mov
or
sbb
loope
jecxz
leave
pop
push
pusha
and
mov
cld
add
add
lds
js
push
adc
jl
testl
adc
lods
adc
push
pop
loopne
mov
and
in
and
stos
dec
add
cmc
jmp
cmp
outsl
adc
inc
lods
cmp
mov
lods
mov
sub
rcrl
dec
shrl
pop
loop
cmc
xor
in
jno
dec
das
push
pop
daa
inc
adc
test
jne
setbe
nop
sub
je
or
adc
cs
rcrl
fnstsw
lods
popf
jg
movsl
cmp
test
mov
jns
roll
sbb
out
push
xor
sbb
mov
push
dec
and
jne
imul
in
cltd
push
cmp
orb
inc
negl
cmp
jb
aaa
or
sbb
into
push
stc
test
xlat
inc
or
dec
jb
jge
cmp
sbb
arpl
adc
mov
xchg
jle
dec
aas
lret
mov
fnstsw
test
cmpb
xor
imul
cmp
fidivrl
jo,pt
notl
inc
inc
fsubrl
and
adc
push
mov
jle
inc
xor
test
jne
test
aaa
repnz
pushf
dec
jle
lods
adc
loop
roll
int
imul
ret
insb
rorb
pop
aad
fdivrl
mov
adc
pop
cmp
push
inc
xchg
pop
repnz
pop
fdivp
adc
ficoms
fxch
aas
frstor
inc
lods
cwtl
jmp
outsl
rclb
out
andb
sbb
pop
leave
cmp
lds
dec
and
lods
pop
leave
mov
pop
aad
xor
loope
jle
imul
sbbb
mov
mov
push
jmp
xchg
jb
xchg
mov
dec
jle
int3
add
pop
ljmp
adc
cmpsl
xor
push
mov
lret
mov
xchg
push
in
stos
push
cmpsl
mov
jns
les
xor
mov
mov
mov
mov
cmp
shll
cmpsl
inc
cs
or
stos
inc
sub
cmpsb
imul
dec
sbb
xchg
pushf
xchg
aad
push
adc
fistl
loope
sub
mov
mov
test
dec
int3
add
lock
sub
lea
and
sbb
addr16
mov
cmp
mov
xchg
divb
lock
loope
inc
int3
js
xchg
mov
dec
and
or
mov
jmp
xor
mov
call
sub
add
in
in
push
push
cmp
test
dec
bound
mov
sub
add
cmp
or
lock
xchg
flds
stos
loop
push
inc
rcrl
stos
fcom
mov
es
sub
adc
rcrl
jmp
ja
mov
lds
and
daa
leave
divl
add
dec
pop
inc
xchg
inc
and
fistpll
daa
nop
cmpsl
sub
cwtl
loop
js
pop
cmpl
repnz
cltd
mov
sbb
mov
inc
pop
push
insl
mov
sub
inc
jp
stc
fistpl
dec
push
or
adc
adc
aad
sarb
stos
xor
dec
pop
mov
cmpsb
pusha
sbb
out
shll
add
leave
cmp
test
sbb
out
mov
and
outsb
fdivp
mov
in
ret
cwtl
in
xor
jns
add
lock
ljmp
cmc
outsb
and
jno
enter
lcall
ret
push
mov
jge
icebp
pushf
xchg
pop
lods
ss
xchg
adc
stc
rol
add
mov
pop
mov
mov
lods
pop
xchg
and
pop
jae
enter
jg
jb
dec
lods
lea
in
data16
lods
ds
inc
jmp
push
and
adc
loope
and
inc
das
pop
jbe
out
xchg
call
pop
imull
cmp
decl
dec
or
in
negb
ret
aad
pusha
rcrb
insb
popa
insl
xor
adc
ret
jne
insl
sub
into
in
rclb
cwtl
dec
inc
dec
popa
inc
mov
lea
add
pushf
xor
xchg
mov
in
adc
cmc
inc
rcrb
xchg
into
sbb
dec
mov
data16
repz
ret
or
lds
sbb
std
xchg
sub
mov
lret
test
jae
jbe
sarb
maxps
outsb
sti
inc
test
sub
mov
cmp
and
repnz
cltd
scas
mov
push
add
fisttps
mov
jb
nop
lret
inc
bound
and
add
lcall
mov
gs
fs
test
jb
xchg
dec
xor
shrb
lret
jbe
aaa
mov
jp
xor
push
adc
lods
add
xor
rcr
xchg
cmp
subl
jp
icebp
inc
jge
adc
cwtl
mull
lea
mov
lock
xchg
adc
dec
lahf
test
popa
jmp
fisubs
out
cmc
adc
sti
cmpsb
sbb
pop
arpl
mov
leave
rorb
sub
and
dec
call
jbe
pop
lock
adc
xchg
ss
dec
push
cmp
and
lods
popa
jp
jg
xor
jne
pop
fisubrs
and
repnz
fistl
jmp
loopne
jns
cmpsl
jmp
sarb
xchg
mov
xor
dec
mov
rcr
mov
cmpb
lea
lcall
lds
call
adc
icebp
scas
xor
in
fsubrp
pusha
fcmovnb
xor
aam
sahf
mov
test
add
xchg
pop
ret
faddp
mov
sbb
adc
jnp
movsl
mov
or
gs
adc
call
xchg
pusha
xor
shr
faddl
and
or
lock
out
cmp
outsl
daa
mov
mov
test
gs
aad
cmc
sbb
mov
jne,pn
adc
dec
js
cltd
dec
mov
pop
lcall
or
pop
js
popa
and
push
into
mov
icebp
and
fstps
lret
int
cmp
or
dec
cmp
lods
out
add
xor
adc
cmpsb
ljmp
inc
jo
fidivrl
add
cmpsb
outsb
and
ss
cltd
inc
mov
push
movsb
lcall
mov
xchg
in
pop
push
outsl
xlat
pop
mov
addl
sarl
push
clc
mov
jo
and
push
or
dec
push
hlt
sti
sbb
test
nop
jae
outsb
repz
jl
ficoml
sti
enter
scas
lods
addr16
xor
pop
fwait
push
sub
cwtl
push
sub
sub
js
inc
or
push
cltd
daa
cmp
push
lock
sub
and
mov
and
or
mov
fwait
mov
sbb
xor
popf
or
loopne
mov
sti
mov
inc
adc
cmp
mov
in
xor
lcall
mov
mov
jae
push
lcall
pop
fcmovnbe
or
push
fcoms
shl
scas
dec
mov
ret
or
xchg
test
stc
fwait
jo
jnp
pushf
icebp
fs
in
sub
test
mov
inc
pop
insl
bnd
push
dec
out
ret
mov
lds
mov
enter
xchg
fists
dec
mov
xchg
or
push
mov
not
push
pop
ret
jno
add
loopne
aad
push
fimuls
sub
mov
jg
in
jb
dec
jne
lods
xchg
dec
cld
in
mov
stos
mov
or
mov
enter
testl
xor
mov
jae
jbe
mov
sub
stos
mov
cmp
test
aad
mov
add
add
leave
or
adc
mov
dec
movsb
sub
add
push
push
insb
xchg
fs
xchg
mov
cmp
pop
movsb
outsb
lcall
or
jne
bound
adc
test
dec
je
sqrtps
popf
fidivs
push
mov
rcrl
push
iret
outsl
and
jge
imul
loop
insl
out
aad
in
adc
outsl
mov
fs
sbb
adc
fisubl
aam
scas
jbe
add
mov
fildll
cmp
sahf
or
mov
and
out
scas
cmc
mov
jbe
fistpl
cld
xchg
sub
cli
shlb
mov
movsl
jb
sub
pushf
rcrl
sub
fnsave
inc
sbb
add
pop
dec
xchg
leave
rorb
mov
roll
adc
xlat
inc
or
mov
fidivl
xchg
add
xor
xlat
dec
cld
ss
push
cmp
dec
mov
inc
xchg
push
or
adc
adc
imul
sti
jg
inc
xchg
xchg
rclb
push
pop
stos
in
dec
pop
int3
mov
pop
jp
outsb
ja
sbb
insb
shrl
sbb
jae
inc
push
sub
loope
push
dec
mov
pop
mov
mov
loopne
dec
sub
dec
sbb
sub
into
jnp
jo
xor
into
jp
inc
ss
mov
fists
imul
and
mov
mov
pop
xchg
push
add
or
inc
or
out
inc
int3
mov
or
cmp
jg
aad
mov
mov
insb
lahf
fwait
scas
push
mov
pop
subl
out
push
sbb
icebp
sub
dec
push
jno
and
mov
in
cmpsb
fwait
inc
add
pusha
icebp
mov
dec
push
sahf
cmp
mov
xor
out
sbb
jbe
xor
hlt
cmpsb
push
adc
mov
push
test
arpl
xchg
test
cmp
xor
lahf
and
sti
rcr
rclb
cmc
cwtl
cltd
mov
add
mov
out
repz
inc
pcmpeqb
jns
lahf
jmp
inc
lods
xchg
popfw
test
mov
sahf
or
scas
add
jp
sbb
mov
repz
cli
ljmp
lea
mov
in
xor
and
popa
cmp
lahf
loopne
fcomp
hlt
mov
sbb
cli
pusha
jb
es
ret
mov
loopne
scas
push
movsb
xchg
test
mov
dec
mov
int3
pushf
stos
movaps
lcall
or
cmp
hlt
iret
xchg
pop
insl
mov
dec
outsl
mov
icebp
xchg
orl
test
sbb
cmp
andl
cmp
fwait
scas
push
repnz
pop
jecxz
loop
imul
ret
leave
pop
in
jge
nop
fisubs
xchg
pusha
pop
push
push
sub
jns
call
int
repz
shll
bound
in
or
popf
mov
cmc
add
lret
sub
xor
cmpxchg
push
sti
ss
in
or
mov
out
sub
mov
and
les
repz
mov
dec
aad
popa
mov
aaa
data16
adc
mov
sub
test
xchg
aas
xchg
mov
adcl
mov
cwtl
mov
loope
and
pop
sti
clc
jb
jae
adc
cmp
jno
lea
ret
or
lahf
inc
mov
lea
dec
pushf
push
cli
into
dec
popw
xchg
popf
je
mov
call
jmp
mov
xchg
pop
xchg
out
or
jne
notl
mov
or
rorb
lea
xchg
lcall
hlt
inc
cltd
lock
ljmp
xchg
pop
dec
repnz
icebp
lock
adc
mov
lret
xchg
mov
cmpsl
or
mov
aad
insl
mov
and
imul
mov
int
testl
jns
cltd
icebp
adc
jp
sub
adc
cmp
scas
push
pop
cltd
roll
outsb
int
popa
rol
imul
cmp
scas
or
mov
sahf
in
rcll
into
dec
int
aas
xchg
inc
movsl
test
mov
outsb
in
xor
in
fdivs
fcoml
cltd
mov
cmp
pop
sbb
ret
jae
sbb
mov
scas
pop
int
aam
loop
mov
inc
mov
jbe
lret
mov
mov
inc
stos
adc
xor
or
testb
push
sti
aam
out
mov
outsl
and
xchg
push
out
jecxz
mov
popa
and
into
aad
rolb
pop
adc
sub
pop
aaa
adc
data16
pop
mov
ljmp
fisubrs
jnp
scas
stos
mov
rorl
xchg
daa
jle
xor
mov
xchg
in
inc
pop
fadds
mov
out
and
sbb
jnp
sub
push
sbb
push
aaa
mov
dec
xchg
lods
pushl
pop
testl
jb
lods
add
les
leave
mov
dec
jmp
xor
xchg
rcrl
add
das
mov
pop
pop
adc
dec
jno
daa
push
xchg
shll
js
js
loope
cmp
cmpl
pop
xor
mov
lcall
call
pop
push
or
ret
inc
jne
outsb
pop
mov
inc
insb
xchg
clc
dec
out
fnsave
sub
push
insb
jb
jno
add
mov
pop
push
push
or
sub
mov
loop
gs
insb
addl
or
jno
cmc
inc
xor
das
js
jl
out
cmp
int
push
mov
sub
cmp
xchg
push
imul
pop
lods
les
pop
repz
dec
fnsave
mov
in
lods
adc
cmp
insb
mov
mov
loopne
sbb
jno
cmpsl
mov
mov
mov
popf
stc
cld
outsb
leave
mov
push
lret
push
mov
mov
sub
imul
adc
xor
xlat
insb
test
xor
fdivl
pop
add
inc
cmpsl
fstpl
cmp
push
dec
fdivrs
mov
jne
inc
mov
push
or
xchg
and
cmc
std
adc
hlt
inc
xlat
xchg
mov
sub
jb
pop
or
dec
mov
mov
xlat
out
movsb
in
mov
loop
leave
lret
cmp
push
test
mov
and
push
inc
pop
sub
lea
gs
out
mov
xor
jge
shll
nop
mov
cmp
pop
add
cmp
ret
xor
jae
stc
xor
enter
dec
mov
sti
nop
xchg
mov
lret
mov
out
jnp
cli
jp
andb
sbb
shlb
push
inc
fidivs
mov
sbb
movsb
xor
neg
outsl
xor
gs
sub
lcall
clc
fstl
sub
add
and
jns
or
gs
xor
push
mov
cli
fdivs
push
add
push
add
push
pop
rcrb
push
cli
xchg
movsb
pop
rclb
xchg
pop
int3
jne
sub
daa
loopne
movsl
ljmp
jmp
and
and
pop
dec
sti
adc
imul
call
add
sbb
out
ds
lahf
cmp
loope
fsubp
sti
stos
cmpsb
mov
cmp
les
int
insl
sarb
jne
mov
inc
sti
sbb
dec
ret
xchg
and
out
js
and
movsb
xchg
add
nop
mov
mov
push
mov
out
xor
lahf
sbbb
xor
pop
jl
cltd
dec
leave
xor
jg
xchg
mov
mov
movsb
jl
in
push
adc
decb
xchg
and
scas
or
test
fdivr
mov
mov
out
lods
adc
in
lds
mov
xor
mov
lods
mov
aas
mov
lcall
adc
pop
rorl
pusha
loopne
cli
or
hlt
inc
dec
xchg
or
pop
jne
adc
aas
sbbl
pop
bswap
hlt
andb
cmpsl
pop
loope
lock
adc
rcrb
xor
out
icebp
and
sub
fimull
push
in
lret
int3
xor
ds
fucom
jb
pop
adc
xchg
lods
adc
es
sub
add
outsb
imul
lock
cmpsl
daa
aas
fimuls
fwait
dec
jnp
pop
inc
lret
inc
imul
gs
sbb
add
lret
pop
std
les
dec
mov
fnstcw
and
pop
cmp
push
pusha
rolb
aas
stos
dec
cmp
adc
inc
mov
cs
add
fidivrs
xchg
lea
ss
rcrb
dec
lods
pop
push
loopne
push
sub
mov
mov
gs
dec
or
push
jl
enter
dec
loope
int3
inc
push
sbb
xchg
xchg
adc
bound
js
lds
mov
xchg
push
lret
cmpsl
icebp
loop
pop
or
lods
fnstcw
test
or
adc
notl
outsb
outsl
imul
dec
add
std
sarl
subl
mov
in
dec
inc
xlat
push
cltd
jbe
and
cmp
adc
jg
xor
sbb
fldt
and
mov
das
mov
imul
push
pop
or
mov
mov
out
mov
into
fnstcw
ret
data16
and
iret
addr16
jecxz
add
in
test
orb
lods
or
inc
outsb
aas
mov
xor
cmp
insl
lret
xchg
jle
call
cs
add
pop
out
cmp
or
mov
lret
mov
rcr
shl
test
cmc
iret
popf
mov
push
mov
lock
lods
scas
adc
mov
dec
xor
mov
mov
and
popf
iret
mov
dec
divl
mov
xchg
mov
setb
sbb
and
test
test
mov
lcall
jge
sub
add
jmp
pop
cmc
sub
addr16
sbb
xchg
inc
ret
xor
mov
clc
outsb
jno
mov
push
leave
mov
into
loopne
xor
mov
popf
imul
loop
cmp
xchg
cmp
fistps
mov
add
out
pop
jmp
adc
pop
pop
cmp
std
mov
int3
enter
mov
sub
adc
lds
aam
adc
cmp
jno
movsb
or
and
xchg
ss
out
pop
lods
lea
call
push
js
setg
shll
sub
mov
leave
fsubrl
mov
imul
mov
cwtl
dec
pop
pop
sbbl
fmuls
jl
mov
test
frstor
jmp
stc
mov
nop
jecxz
arpl
inc
imul
adcl
adc
repnz
mov
loop
mov
dec
scas
pop
mov
push
dec
mov
add
push
in
jbe
testb
push
mov
loope
pop
xchg
or
loope
and
mov
mov
xchg
push
outsb
and
mov
xchg
sub
mov
scas
jp
jb
jecxz
sub
sbbb
adc
push
cwtl
hlt
cmpxchg
lods
call
pop
mov
sub
pop
loopne
js
xor
fdivl
mov
ficompl
push
clc
fistps
pop
push
mov
pusha
test
into
arpl
popf
rcll
and
rcrb
jmp
sub
insb
ret
repnz
orl
aaa
mov
inc
jmp
pop
cli
jns
or
sbb
mov
fwait
pop
xchg
insb
popl
je
xor
ret
mov
mov
inc
pop
loope
insb
nop
nop
ss
test
sub
test
sub
popf
mov
jo
xor
push
fldl
push
sbb
data16
ror
pop
sar
mov
xchg
ljmp
pop
cmc
lock
fldt
into
mov
xchg
cmp
aad
mov
jmp
dec
mov
pop
adc
xlat
and
adc
push
inc
cltd
dec
pop
jl
push
mov
cs
lret
inc
shl
or
push
aad
out
stc
mov
jns
iret
jo
sub
js
xchg
jg
ret
push
aad
les
jecxz
stos
cwtl
inc
scas
push
aad
adc
cs
cmp
fs
cmc
ljmp
dec
jns
in
out
pop
xor
ret
shl
pop
outsl
pop
xor
sub
fisttpl
arpl
sub
xor
and
adc
out
lcall
push
add
in
or
bound
fmul
mov
repz
push
bound
loope
das
shll
adc
jge
pop
arpl
and
sub
test
movsl
mov
stos
inc
xchg
mov
pop
pop
fstl
fisttps
sahf
or
fistl
test
adc
lods
and
sbb
aas
add
push
push
push
test
push
arpl
push
ds
sbb
notb
pop
pop
loope
and
mov
out
test
outsb
sbb
int3
and
or
repz
shlb
das
dec
dec
fidivs
pop
dec
inc
pop
jp
cmp
dec
dec
mov
jo
jl
dec
aam
popa
cmp
add
lret
dec
pop
loopne
mov
pop
or
aaa
lock
jns
cmp
xor
add
js
inc
dec
adc
xchg
sbb
pop
and
pop
adc
pop
dec
test
pusha
jae
add
jnp
and
shll
mov
enter
addr16
jns
addr16
lods
dec
mov
pop
std
xchg
push
addr16
out
sub
dec
or
loopne
out
jg
push
shll
popa
sbb
mov
call
xchg
jp
xor
sub
add
bound
jmp
cli
les
repz
repz
loope
sbbl
out
imul
inc
test
and
je
jmp
sar
movb
out
cmpb
pop
mov
push
xchg
icebp
fnstenv
mov
mov
aaa
sub
sub
mov
dec
sub
push
sub
jbe
fldt
aam
cmpsb
mov
imul
rcrb
stos
lock
sub
out
sub
pushf
sub
xorl
insl
popf
insb
iret
stc
mov
dec
fwait
jl
ljmp
enter
dec
add
add
sub
add
pop
test
into
icebp
pop
mulb
pushf
mov
cli
pop
add
outsl
mov
nop
ds
add
aad
pop
add
outsb
inc
xor
sub
stos
aad
cmp
leave
mov
testl
in
leave
xor
movsb
popf
dec
loope
sbb
incb
adc
pusha
iret
pop
outsl
push
das
cmp
in
adc
test
lods
int
or
imul
rcrb
loop
xchg
notb
inc
mov
repnz
pop
test
ljmp
std
aam
inc
mov
add
lret
push
mov
mov
xor
mov
fsubr
lds
pop
or
andl
insl
pop
mov
xchg
mov
fadds
mov
sub
rorl
stos
adc
sub
fimull
cld
rcrl
nop
lods
xor
xor
push
jle
cmp
movsb
and
test
insb
sub
les
jle
jmp
loope
push
pop
cmp
xor
cmp
jae
rorl
mov
lret
sbbb
jae
push
mov
icebp
jbe
lahf
mov
jle
mov
inc
movsl
mov
push
mov
mov
lcall
xchg
pop
cmp
ja
jns
stc
lcall
rorb
mov
pop
fstl
push
out
aam
data16
adcl
jp
add
mov
xchg
fwait
inc
out
lret
mov
mov
sbb
fldl2t
or
pop
movsb
addb
cmp
insl
push
and
rcrb
daa
subl
sub
out
or
sbb
or
gs
test
test
out
mov
inc
daa
subb
dec
inc
adc
jno
cmp
dec
das
sub
icebp
sbb
dec
hlt
mov
push
jnp
arpl
and
subl
call
nop
lcall
test
pop
aas
sbb
je
lea
loopne
stos
adc
sti
add
fdivrp
sbb
mov
fwait
outsl
js
xchg
cmp
jg
jb,pt
push
sbb
ljmp
imul
cmpl
jmp
adc
cltd
cmp
or
test
mov
leave
testb
sbb
sbb
repz
outsl
imul
xor
fisttps
dec
dec
jae
stos
enter
inc
insl
enter
loope
xchg
daa
das
cmp
push
xor
push
lahf
fldenv
idivl
xor
pop
sbb
mov
adc
fnsetpm(287
mov
movsb
jns
int
pop
cli
xlat
sub
mov
dec
bound
inc
fwait
mov
in
int3
and
mov
popf
loope
sahf
mov
xchg
pushf
pop
in
loopne
dec
daa
stos
fcompl
xor
loopne
str
repz
sbb
push
leave
mov
pop
pop
shll
nop
fnsave
inc
shl
ret
test
cmp
lock
loope
push
icebp
jno
dec
or
ja
sub
aad
out
das
inc
lret
push
subl
lcall
mov
cli
loope
fisttps
mov
sub
jg
mov
inc
dec
daa
cmp
adc
push
push
and
mov
push
inc
mov
scas
scas
mov
dec
hlt
adc
out
and
das
repnz
dec
cmp
sbb
imul
or
mov
loopne
out
pop
pop
inc
pop
aaa
push
pop
mov
subl
nop
mov
repnz
addr16
and
call
add
xor
cmc
ja
mov
inc
xchg
jo
jo
push
xchg
cmp
loope
inc
adc
pop
dec
fwait
mov
add
lods
pop
adc
mov
fsts
ja
sub
push
inc
xchg
push
push
int3
int3
cmp
jmp
or
jmp
enter
jbe
inc
or
add
fcom
inc
jno
ljmp
jbe
dec
sbb
push
inc
push
sbb
jecxz
mov
jae
inc
stos
dec
mov
inc
iret
aam
sahf
sbb
clc
and
mov
call
cmp
lahf
hlt
int3
pop
ljmp
add
xlat
mov
rclb
dec
push
jb
dec
dec
dec
pop
aam
notb
insb
sbb
pop
test
mov
jle
dec
arpl
data16
fmuls
add
mov
add
lcall
shlb
jmp
inc
mov
xsaveopt
inc
stc
fs
idivb
pop
fsub
jae
lahf
cmp
iret
lods
add
popa
leave
loopne
push
es
outsb
and
xor
jp
outsl
jl
fisubl
jecxz
xchg
pop
pop
test
repnz
int3
mov
test
ja
shll
fnstenv
pop
ss
xor
mov
nop
jne
jnp
xor
inc
mov
jbe
mov
and
aam
stos
icebp
insb
sahf
jecxz
repnz
cmpsb
mov
jmp
movl
jns
mov
hlt
push
pop
ss
pop
in
pop
and
nop
sub
sti
push
cmc
fsubr
jp
sbb
mov
fsubr
adc
adc
adc
or
cmp
arpl
mov
in
sbb
sbb
insl
mov
aaa
jle
xchg
push
in
mov
scas
pusha
cmp
push
into
sbb
jo
pop
and
popf
fbstp
aas
inc
sub
fucomp
jl
stos
aas
pop
mov
or
int
push
bsf
dec
pop
sbb
add
push
mov
xor
mov
jns
cld
cmp
in
aam
mov
cmp
xor
jae
adc
mov
pop
mov
or
or
sub
or
sub
loopne
outsb
loopne
pop
idiv
sarb
adc
mov
jle
adc
neg
sbb
mov
std
jp
push
pop
pop
xchg
into
mov
cmp
das
cmp
mov
mov
test
stos
setg
andb
lock
pop
jo
xor
cld
mov
cli
sti
dec
dec
cltd
add
jp
out
dec
fcomp
jo
xchg
sub
bnd
or
cmp
sahf
insl
mov
lea
push
push
frstor
cmp
cwtl
test
or
jne
sub
scas
cmp
loopne
test
sbb
std
stc
inc
adc
adc
mov
xor
sarb
lods
into
and
xchg
test
push
adc
mov
dec
push
lock
dec
stc
adc
mov
cmc
test
add
leave
fwait
in
in
aas
and
pushf
mov
push
push
outsb
mov
repz
lret
loope
push
lods
add
ss
mov
dec
xor
std
cltd
sub
sbb
in
mov
hlt
outsb
push
test
pop
insb
je
or
outsb
pop
dec
jne
ds
jecxz
dec
sub
or
lods
jnp
jg
rolb
iret
dec
sti
loop
cmp
cmpsl
push
int
cltd
inc
mov
xchg
stos
fcompl
add
insb
fwait
cmp
pop
es
roll
movsb
jns
scas
ret
jecxz
insb
js
or
ret
je
dec
dec
push
jo
mov
stos
faddp
gs
adcl
jge
sbb
push
fsubr
rcrl
push
cmp
cli
fcoml
test
lds
gs
mov
sub
pusha
xor
push
clc
inc
bound
push
adc
pop
je
les
fs
ficompl
in
pop
inc
fst
xchg
rolb
rolb
dec
pop
repz
lods
mov
xor
and
in
mov
and
jbe
mov
xchg
adc
fs
sbb
push
roll
jo
inc
dec
in
add
xchg
stos
jnp
add
int3
mov
jnp
adc
cmc
shlb
xor
imul
sarl
and
lahf
cmp
pop
pop
mov
dec
fnsetpm(287
jbe
rclb
adc
mov
xor
jmp
and
dec
xor
js
add
mov
repnz
fisttpl
mov
inc
push
mov
add
mov
scas
insb
mov
in
inc
in
push
mov
insl
hlt
xor
add
lods
inc
sbb
sahf
cmpsb
imul
and
lock
test
sub
dec
idiv
sbb
push
mov
fst
leave
cli
aaa
sbb
out
or
push
mov
xchg
bound
xlat
ret
xchg
pop
or
sub
shll
pusha
addr16
test
sahf
in
unpckhps
inc
or
popf
insb
jbe
add
push
xor
in
ss
cmp
das
movsb
test
xor
add
xchg
jecxz
mov
inc
rcrb
iret
rcrb
lds
adcb
jmp
stos
popa
adc
pop
das
sbb
popf
push
mov
or
push
aas
and
test
xchg
pop
xchg
shll
or
dec
jle
pop
mov
jne
insb
add
xchg
cmpsb
cwtl
xor
mov
stc
sbb
sub
adcb
inc
out
rolb
lret
test
pop
push
cwtl
xor
adcb
test
add
or
mov
xlat
xlat
gs
cmp
lea
enter
push
lods
scas
add
sub
add
cmpb
jns
loop
lret
mov
shr
mov
imul
inc
jl
cmp
push
jno
cltd
sarl
sub
xchg
inc
into
jg
jbe
jo
push
and
lea
and
movsl
es
jg
inc
xor
and
enter
dec
sub
cld
jne
push
rcrl
mov
sub
lock
lea
pusha
repnz
xor
arpl
mov
in
mov
mov
and
divb
mov
xor
dec
xor
repz
insb
insb
mov
ror
pop
pop
lret
inc
arpl
lahf
sub
pusha
mov
xor
loopne
add
pop
arpl
mov
cld
sahf
add
sub
sbbl
push
xchg
aaa
mov
and
sub
adc
fwait
std
popa
push
sbb
ret
mov
daa
popf
shlb
pcmpeqb
inc
add
lcall
dec
gs
stc
dec
movsb
pop
mov
mov
xor
clc
xor
icebp
cli
daa
or
out
jg
out
pop
add
fstpl
add
push
lods
popa
mov
jp
mov
in
lahf
or
mov
imul
push
xchg
dec
test
jg
cld
unpckhps
and
out
and
dec
xor
enter
mov
jbe
out
inc
std
jle
je
mov
sbb
mov
popa
sbb
sub
in
cmp
cmc
cli
aad
xor
mov
int
outsb
adc
and
loop
outsl
popa
into
xchg
xor
sarb
fstp
ds
outsl
test
push
sti
jae
push
cli
ds
mov
bound
orl
cltd
lret
cmpsl
popa
dec
mov
pop
scas
push
cmpsl
int
movsb
sbb
inc
mov
push
cwtl
lret
or
leave
outsl
jl
or
mov
test
popa
jne
addr16
jns
mov
int
andb
daa
inc
lods
clc
enter
ret
lahf
sub
repnz
mov
sbb
mov
pop
mov
scas
mov
ljmp
add
ret
lret
cmp
add
xor
or
or
rorb
fsubs
in
movsb
jns
mov
inc
hlt
lret
and
imul
fwait
stos
push
jg
mov
popf
and
pop
adc
out
push
sub
test
mov
sbb
jge
and
or
add
inc
test
or
pop
pushfw
or
aaa
loop
adcl
mov
push
movsl
pop
lods
and
cld
mov
outsb
in
mov
je
ss
jp
mov
mov
cwtl
dec
mov
rclb
daa
mov
imul
nop
adc
adc
cltd
xchg
mov
cltd
fsts
lock
sbb
divl
and
imul
dec
dec
and
pop
adcl
aam
fidivs
dec
mov
push
int3
push
xchg
in
enter
sub
ss
sub
xor
mov
mov
jp
push
sub
je
shll
inc
dec
pop
iret
adc
out
psllw
sbb
shl
mov
loope
decl
nop
insl
mov
outsb
imul
xchg
icebp
push
aas
std
pop
test
jbe
bound
add
cmp
in
fnstenv
pusha
cmp
jo
fistpll
dec
sti
lret
shlb
pop
mov
pop
cmp
push
push
push
lcall
daa
insl
loope
mov
and
pmaxub
add
xlat
int
inc
in
pop
scas
fdivl
arpl
inc
in
or
cmp
jne
and
imul
clc
cltd
jnp
cs
addr16
add
lock
hlt
or
xchg
sub
mov
push
bound
repnz
dec
mov
insb
std
inc
pop
aaa
ficoml
stos
jbe
enter
clc
daa
js
cmpb
adc
pop
pop
or
mov
jmp
and
mov
int3
cli
pop
ficoml
int3
aaa
rcr
test
loop
cmc
outsl
sti
inc
or
in
call
jmp
sbb
movsl
cld
fisubs
sbb
mov
rorb
cmpsb
pop
in
cs
cs
hlt
mull
mov
les
std
test
dec
out
pop
lahf
insl
pop
pop
cmc
imul
jae
mov
cmp
jnp
decb
movsl
cmc
or
adc
lret
out
pop
pop
hlt
dec
mov
test
adc
push
sub
subl
adc
cmp
jge
push
mov
or
in
inc
mov
aam
xchg
inc
ss
cmpsl
xchg
cltd
js
pop
or
shlb
push
mov
mov
or
fisubs
aam
pop
xor
lahf
push
call
fucomi
loopne
cmc
xlat
rcll
adc
js
movsb
flds
sub
mov
and
xlat
add
ret
daa
sbb
fwait
sahf
mov
stos
fsubrs
icebp
jbe
lea
mov
push
cmp
push
pop
in
add
pop
dec
mov
xor
cmp
mov
lds
in
adc
and
scas
clc
mov
cltd
fstpl
mov
ds
xor
push
push
jp
cmp
or
pop
mov
jnp
xchg
push
ljmp
std
mov
sub
sub
fidivrs
data16
sub
loope
outsl
es
sub
dec
cmp
lods
aad
jae
mov
in
stos
test
pop
addl
imul
mov
frstor
fdivrs
mov
nop
call
stos
fs
or
jp
cwtl
pop
je
call
jno
pop
mov
sbb
sub
dec
sbb
mov
pop
mov
dec
imul
xor
outsb
push
rolb
roll
inc
mov
insb
adc
lock
pop
ja
shll
sarb
sub
cmp
jecxz
sbb
iret
fisubl
outsl
sbb
push
rolb
pop
and
repnz
fcoms
mov
sti
sub
pushf
test
push
sub
adc
push
jbe
pop
xchg
pusha
add
cli
dec
scas
outsb
xchg
mov
pop
pop
pushf
lods
scas
jo
push
stos
add
shlb
add
hlt
xchg
dec
xchg
mov
ret
ss
rcll
mov
out
pop
rol
inc
add
sbb
mov
movsb
sbb
cld
in
test
cmpsl
xchg
add
scas
ljmp
sub
add
into
lock
or
insb
das
incl
pop
lock
adcl
fcmove
shll
repz
xor
and
mov
ss
push
jno
and
cmp
out
cmp
sti
dec
lcall
add
leave
fwait
rclb
insb
xchg
icebp
cmp
adc
insl
loope
and
or
clc
mov
push
popa
test
inc
sar
sbb
jne
dec
xchg
ficomps
stc
shlb
xchg
dec
popf
movsl
int
loopne
jns
add
std
movsl
enter
cld
push
inc
mov
jnp
insl
pop
ljmp
ss
rcpps
pop
fwait
adc
addr16
push
mov
xchg
inc
repz
and
js
inc
fsubrs
jnp
adc
lock
mov
mov
jno
mov
jmp
aam
arpl
cmc
scas
sub
pop
add
cmp
call
popa
lods
shlb
add
add
stos
jg
pop
in
nop
cmc
test
and
mov
jbe
je
insb
jns
adc
test
adcb
xor
or
mov
lods
jecxz
mov
mov
icebp
sbb
inc
mov
ljmp
sub
ja
pusha
and
js
inc
movsb
enter
addr16
ja
imul
mov
mov
pop
mov
gs
icebp
jp
mov
and
cmpsl
inc
sbb
jbe
cltd
pop
xor
insl
adc
bound
ffree
test
adc
push
push
cli
dec
sbb
lea
scas
push
xchg
stos
call
mov
mov
dec
add
pop
cmp
push
shr
mov
sub
test
mov
les
leave
mov
sarl
lahf
lret
out
xchg
aas
adc
mov
xchg
or
add
or
hlt
pop
mov
cmp
inc
xor
sub
popa
cmpsl
pop
loope
movsl
lcall
popa
push
xchg
gs
jl
pop
jl
xchg
sub
adc
jge
mov
ljmp
fwait
mov
lret
pop
shl
lods
push
shlb
push
xchg
mov
cltd
dec
sbb
andl
out
popa
repnz
push
lock
xlat
sub
and
xlat
pop
fidivs
lcall
cmp
inc
push
in
inc
add
xor
xchg
jno
repnz
sub
fcomip
enter
movsb
mov
jp
inc
lahf
sbb
ret
lret
pusha
mov
or
adc
mov
js
sbb
pop
push
in
cmp
sarl
dec
mov
test
cmp
test
pop
repz
lock
xor
scas
shl
mov
lret
outsb
sub
inc
push
mov
mov
test
adc
movsl
push
fldcw
sbb
add
cwtl
rcll
inc
push
pop
jb
pop
and
sbbb
sti
mov
pop
jnp
es
cwtl
mov
pop
mov
mov
mov
stos
push
and
nop
outsl
mov
and
rorl
xchg
in
add
add
jp
push
pop
lret
dec
push
push
push
mov
ret
pop
dec
cld
pop
repnz
xchg
cmp
xor
or
mov
popa
sahf
leave
push
clc
and
sub
cmpsb
jne
ja
mov
nop
or
mov
repz
or
xchg
and
mov
pop
ja
dec
fstpt
popf
fsubl
add
mov
addb
pop
sbb
xchg
pop
pop
xchg
outsb
shlb
sti
pop
xchg
xor
cld
cmpsb
cmc
lret
mov
mov
dec
lods
xor
fwait
mov
add
das
fisttpl
lcall
inc
xorb
pop
mov
cmp
or
outsb
das
stos
outsl
pop
or
xchg
push
xor
jge
jnp
xchg
dec
dec
inc
mov
mov
xor
repz
cmp
mov
testl
loop
cld
lcall
daa
test
bound
pop
cmp
ret
xchg
mov
outsl
sbb
pop
mov
cltd
repnz
push
xor
xlat
lds
into
adc
in
xchg
enter
stc
mov
lret
lret
jbe
mov
dec
cmp
in
decl
sahf
outsb
sub
cli
xor
rolb
lods
or
inc
loop
jl
inc
mov
cmc
outsb
dec
sub
mov
push
push
fs
and
cltd
aaa
fiadds
lods
xchg
scas
int3
insb
or
lods
outsb
mov
xchg
out
rclb
call
in
pusha
clc
fidivs
dec
test
popa
sarl
sbb
testl
mov
loope
dec
jmp
inc
lea
adc
jo
es
in
in
in
mov
bound
lret
stc
mov
js
pop
movsl
ret
sbb
ret
int
imul
int3
sub
mov
lds
inc
xor
inc
sub
xchg
adc
jmp
add
cwtl
push
xor
jecxz
test
and
out
push
jo
mov
mov
popf
aad
sbb
aam
loop
jno
out
dec
imul
or
xchg
out
out
push
mov
xchg
mov
mov
test
hlt
repz
sub
jae
popa
insl
andl
leave
push
test
stos
fdivrl
cld
js
jge
or
in
mov
jecxz
jno
xor
sbb
dec
jp
es
sbbl
mov
pushf
dec
aas
inc
push
mov
test
push
mov
insb
xlat
push
inc
stc
sbb
pop
mov
adc
lcall
fs
xor
hlt
dec
add
cmp
ret
jmp
nop
push
mov
mov
sbb
repz
fstps
hlt
sbb
push
cmp
adc
js
push
inc
std
or
movsl
push
sub
inc
dec
push
jae
xchg
push
add
inc
iret
mov
and
scas
pop
mov
pop
or
adc
out
push
or
dec
xor
or
and
sub
mov
cli
cmp
pop
out
out
ret
xchg
pop
xchg
mov
inc
inc
inc
dec
aad
add
mov
inc
pop
cli
or
jae
adc
lock
and
into
clc
add
inc
cmp
les
push
push
fbld
bound
loop
mov
ds
test
xchg
push
mov
cmp
shlb
js
into
or
sub
stc
cmpsl
sbb
mov
fnstsw
xchg
mov
scas
inc
stos
cld
stos
ds
inc
jne
scas
xchg
fdivrp
xor
and
mov
es
add
repnz
imul
push
mov
inc
sbb
loope
std
into
lock
add
adc
sub
and
xor
divb
ja
mov
fdiv
jbe,pn
call
dec
adc
pop
mov
sub
shlb
mov
jno
inc
loope
mov
and
dec
add
and
out
xorl
xor
ror
inc
imull
sahf
dec
cmpsl
xor
mov
mov
lret
data16
aam
inc
adc
fstp
mov
pop
fs
jmp
push
sbb
or
jmp
pop
mov
aam
push
pop
test
sbb
out
adc
jns
mov
and
fsubl
lock
push
or
icebp
xchg
dec
int
inc
clc
add
xor
repz
stos
imull
add
pop
repnz
cmc
xor
dec
sub
ret
and
jno
aad
cmp
imul
repz
inc
adc
mov
jl
inc
mov
inc
inc
test
adc
and
pushf
cltd
int3
cmpb
sub
jmp
push
mov
cli
push
in
mov
sarl
rcll
scas
jae,pn
push
out
scas
cli
sub
adc
cwtl
lret
pop
popa
sub
mov
hlt
jns
jle
mov
jecxz
add
xlat
aaa
stos
ss
jg
mov
lret
mov
cmp
or
lods
inc
mov
notl
jle
notb
scas
cmp
xchg
loopne
mov
jno
mov
out
and
or
out
inc
dec
test
dec
movntq
add
and
repz
ja
loope
add
pop
in
mulb
jnp
push
hlt
lret
push
fcoml
aad
bound
out
mov
mov
push
and
xchg
inc
xchg
into
mov
imul
bound
lock
out
cmp
in
mov
outsl
es
pushf
imul
xchg
pop
lds
push
leave
push
jle
mov
cmp
rolb
popw
xchg
dec
imul
out
ljmp
fs
fnsave
jnp
or
push
and
xor
mov
out
mov
lds
sbb
adc
stos
or
mov
rolb
imul
fidivs
or
add
ljmp
dec
out
scas
adc
jnp
cmp
jmp
xlat
or
es
pushf
xor
push
std
and
sarb
daa
popf
inc
add
cmp
cmp
daa
int3
jl
xor
pop
sbb
pop
add
mov
fdivs
subl
cmp
add
sub
jnp
shrb
lea
dec
mov
dec
jg
leave
xchg
iret
sub
inc
sub
cmp
push
repnz
test
sub
inc
sub
jns
xchg
push
outsb
frstor
jecxz
jnp
pop
jo
push
mov
mov
insl
icebp
cmp
arpl
aas
cmc
loope
dec
js
fwait
dec
add
pop
mov
lea
in
or
mov
cmp
imul
dec
adc
jae
mov
xchg
mov
mov
loopne
out
inc
adc
mov
adc
pop
mov
or
psrlq
jge
sbb
jecxz
out
sub
dec
mov
dec
push
out
fdivs
add
mov
push
ret
xchg
xor
mov
das
in
stc
in
jae
lock
push
adcl
mov
mov
push
out
dec
xchg
movl
insb
mov
cmp
clc
mov
arpl
adc
lods
push
and
fnsave
dec
pop
mov
xor
xchg
ds
stos
es
and
pop
lret
movsl
dec
jno
jne
fsts
cmp
in
lret
flds
mov
pop
fnsave
mov
mov
cwtl
fs
adc
pop
dec
int3
out
pop
push
jge
mov
psubusw
popl
cld
mov
ret
aaa
cli
sub
inc
shlb
dec
or
xor
sub
leave
cmc
jns
inc
shrb
cmp
add
adc
stos
adcb
xchg
push
mov
ds
cld
sub
out
adc
inc
pop
pop
push
push
or
jle
dec
cmp
or
pop
out
add
outsb
fdiv
scas
xor
xor
xchg
movsb
fwait
lds
mov
repnz
outsl
inc
or
rcrl
test
stos
cmp
dec
cmpsl
xor
ja
jb
subl
dec
add
rolb
jno
enter
cmp
call
xchg
repnz
push
int
clc
lret
inc
cmpsl
movsl
test
je
inc
add
rolb
sarb
into
shr
les
les
pop
movsl
mov
sbb
je
xchg
xchg
dec
cmp
fwait
icebp
insb
push
pop
loopne
push
nop
hlt
cmpsl
je
fidivrs
sub
xchg
cs
clc
std
sub
int
inc
or
lcall
pop
pop
ja
into
xchg
push
mov
insb
adcb
int
clc
inc
push
ds
jb
xchg
icebp
outsl
jbe
fsubp
jmp
fbstp
ljmp
sahf
mov
cmp
imul
icebp
mov
sahf
out
aad
jns
mov
repnz
xor
in
adc
fstl
mov
rcrl
fidivs
add
bound
out
sbb
in
dec
mulb
cmp
xchg
jb
cwtl
cli
inc
adc
ret
inc
aaa
dec
dec
sbb
mov
adc
idivl
cmc
sbb
pop
dec
test
adc
fdivl
rcrb
jae
lret
negb
imul
sub
jmp
jae
push
std
notb
int
into
mov
lcall
ds
jne
data16
jns
xor
xchg
cmpsl
mov
fdivrl
sarl
cs
mov
mov
mov
ja
lret
push
aad
sub
inc
outsl
xorb
movsb
xor
lahf
in
test
push
xor
jecxz
mov
adc
stos
iret
sbbl
xor
add
mov
adc
pushf
arpl
sarb
outsb
lcall
adc
nop
cmpsl
test
dec
cmp
xchg
lret
outsw
dec
icebp
ficoms
xchg
jle
scas
in
out
imul
ljmp
inc
clc
add
test
mov
lock
xchg
mov
cmc
aam
mov
and
std
mov
mov
mov
sbb
scas
in
lcall
or
mov
leave
sbb
das
xchg
add
fidivrl
add
imul
in
decl
pop
inc
aam
adc
xchg
mov
popf
lret
xchg
gs
dec
inc
sbb
push
xor
cmp
and
sti
cwtl
sub
cmp
loope
loop
repnz
xchg
cld
lahf
add
pop
and
mov
mov
sbb
bound
jb
notl
cmc
fwait
sub
and
pop
inc
mov
add
and
movsl
add
sub
add
cmp
das
dec
in
les
icebp
pop
jmp
sahf
mov
aam
inc
cmpsl
dec
adc
outsl
cwtl
cmp
sub
mov
inc
in
add
data16
add
lahf
xchg
outsl
xchg
in
and
dec
xlat
insb
push
adc
repz
ljmp
test
adc
rcll
lds
shlb
aaa
or
call
jge
jnp
and
arpl
dec
pop
jle
lock
daa
or
jecxz
dec
lods
repnz
xchg
sbb
es
xlat
mov
sbb
push
xor
daa
ja
dec
jle
call
dec
sub
cmp
sti
and
xchg
xor
pop
add
mov
pusha
hlt
dec
out
cmp
inc
notl
in
aam
in
push
xor
mov
pop
xchg
mov
les
movsl
dec
add
sbbb
and
xorl
push
mov
test
loope
in
ds
cmp
mov
ss
sub
loopne
lret
xchg
xor
test
mov
mov
push
mov
roll
mov
bound
outsb
dec
movsl
cmc
sbb
push
lret
add
lret
cmp
movsb
dec
je
nop
xchg
insl
jg
push
push
loopne
cltd
mov
hlt
cmp
gs
pop
loope
adc
jecxz
daa
push
data16
rcll
pop
jae
hlt
mov
push
fbstp
popa
inc
shll
adc
cmovae
or
test
sub
xchg
inc
loope
leave
stc
pop
sub
mov
mov
or
sub
cltd
loopne
aad
lcall
jge
jb
xchg
mov
xor
js
add
jae
sub
push
inc
fdivs
jae
insb
xchg
dec
lret
arpl
dec
mov
ret
mov
pop
jno
in
hlt
ja
sub
jp
pop
into
mov
cmc
sub
aad
imul
outsb
adc
inc
sbb
ja
int
pop
cltd
sub
ret
inc
sbb
test
pop
sbb
addl
jb
mov
lds
jle,pt
push
mov
pop
lods
and
das
adc
das
dec
ss
data16
push
push
imul
pop
movsb
loopne
dec
jae
cs
adc
mov
cmc
insb
scas
bound
mov
sub
xlat
loopne
call
cmpsb
adc
repnz
mov
in
pop
movsl
aam
clc
pop
fucomi
push
hlt
addb
inc
js
sbbb
addb
and
mov
out
mov
or
cld
push
push
hlt
stos
mov
sub
mov
add
jbe
ljmp
push
xchg
adc
imull
push
xor
jl
stc
pop
jmp
out
push
sub
dec
xor
fcoml
in
cmpsl
jnp
push
mov
orb
sub
int3
push
add
pop
xchg
ds
sbb
cmp
sarb
pop
dec
iret
cmc
cmpsb
mov
dec
mov
jae
cmp
in
jns
sti
pop
inc
and
jl
adc
mov
push
js
jl
imul
sub
in
mov
out
xlat
push
out
lret
push
add
push
push
repnz
cmp
sbb
xor
mov
adcb
inc
pop
jmp
shll
sbb
push
xchg
jp
adc
in
xchg
mov
cmpsb
sar
test
sub
out
adc
xchg
xchg
dec
pushf
into
scas
adc
js
add
aas
lret
lcall
sbb
xor
pop
mov
jp
mov
test
inc
mov
fnstcw
cmpsl
aas
mov
pop
dec
sbb
rcl
sub
imul
mov
aad
fimull
jbe
test
mov
inc
or
push
mov
push
outsl
and
sub
dec
call
pop
pop
addr16
and
or
idivb
inc
mov
adc
mov
hlt
and
lods
inc
dec
shll
lret
imul
cmp
add
shll
cld
test
insb
adc
aas
adc
sbb
sbb
sub
pop
pop
xchg
andl
jg
gs
mov
out
mov
xchg
cld
dec
xor
in
das
cmp
bnd
or
repz
scas
ja
es
xor
xchg
dec
mov
fistpl
mov
mov
sbb
repnz
test
in
arpl
cmp
pop
jbe
dec
cmp
dec
daa
loopne
imul
fsubl
mov
fidivrl
jne
out
jb
or
push
mov
or
idiv
sub
sub
mov
jmp
mov
or
sbb
cmpsb
push
shll
mov
mov
mov
sub
aas
mov
pushf
dec
out
sbb
xor
test
push
and
addr16
in
dec
cwtl
lret
jg
jl
mov
xchg
out
sub
and
sub
repnz
sub
push
and
pop
mov
pop
or
scas
xor
push
insw
into
pop
or
in
dec
pusha
arpl
pop
daa
enter
aad
ja
aad
popf
xchg
push
inc
sub
lcall
jo
rclb
into
push
rorl
shll
aad
in
jae
shl
aad
loopne
jl
sti
cmpsl
xchg
dec
mov
jnp
xchg
jle
push
adc
pushf
sub
outsl
lahf
xor
dec
inc
pop
test
nop
inc
inc
jl
dec
pop
insl
pop
jge
adc
fdivrl
nop
fcomi
pop
xchg
mov
aad
dec
sub
cmpsb
adc
pop
into
xchg
rcl
aas
lret
sub
pop
sbb
add
and
inc
mov
adcl
out
mov
sub
lahf
xor
je
mov
sbb
fnstenv
sbb
and
rorl
std
inc
ljmp
pusha
scas
clc
rcl
cmp
inc
ret
int3
ds
shl
inc
jmp
loopne
cmp
cmp
or
push
adc
jp
fsubs
push
jg
cmp
sub
push
adc
push
repz
stos
xor
aas
addr16
rorl
lods
adcl
ja
mov
clc
jmp
pop
jmp
xchg
push
mov
jmp
popa
xchg
mov
push
notl
push
jno
and
ret
idivl
inc
xor
fwait
cld
cmp
mov
arpl
mov
int
xchg
idivb
movsl
in
ss
pop
sbbl
ds
and
sub
push
push
pop
mov
dec
mov
pushf
ret
mov
int3
pushf
jecxz
mov
cld
pop
or
xchg
xor
jb
pop
push
add
xor
add
jae
clc
add
xor
stos
pop
cmp
adc
push
xor
rcll
les
pop
add
cmp
js
xchg
sbb
rcrl
mov
fimull
jb
mov
popa
std
shll
repnz
fdivrs
mov
out
jae
pop
test
inc
fisttpl
jp
arpl
mov
ja
dec
pop
jae
sbb
ret
jge
push
or
inc
pop
xchg
fisubs
xchg
scas
mov
mov
mov
loope
pop
insb
inc
jne
mov
xor
sbb
dec
outsl
lcall
xlat
xor
fwait
movsb
adc
cmp
sahf
pop
xor
sti
ss
adcl
xchg
adc
jnp
mov
jge
rorl
mov
aaa
or
das
mov
inc
adc
push
out
lds
lock
mov
dec
xchg
in
jns
dec
mov
filds
mov
shrb
pop
push
push
into
mov
outsl
dec
pop
mov
sahf
and
inc
push
adcb
push
movsb
pushf
inc
pop
inc
js
mov
std
xchg
call
daa
repz
pop
arpl
and
test
or
add
test
mov
jo
dec
or
adc
sti
and
loopne
jo
mov
dec
outsb
mov
xor
jg
pop
pop
push
cmp
xchg
movsb
push
repz
jne
pop
ja
xchg
mov
mov
lcall
xchg
sti
fidivl
or
je
and
jle
sbb
cwtl
ljmp
sub
xchg
imul
cwtl
xor
or
jns
int3
fsub
outsl
fistpll
add
dec
xchg
stos
cmp
cmp
js
jb
movsb
out
xchg
addb
push
mov
loopne
mov
lods
ret
rorl
addr16
ret
and
jno
adc
inc
filds
add
sub
fildl
push
sub
insb
je
mov
push
jl
js
push
js
adc
ret
mov
test
movsl
test
push
das
inc
imul
jno
ret
adc
pop
cmp
ja
mov
int
mov
cmp
mov
xchg
dec
xor
sub
jl
xchg
int3
fs
jle
pop
jge
or
sbb
cld
imul
lahf
and
ss
sub
xor
std
rcl
xchg
out
sbb
cmp
cmc
mov
cli
imul
mov
sub
mov
aam
push
js
mov
mov
sbb
iret
inc
scas
xchg
nop
lahf
call
adc
pop
out
cmp
jmp
xchg
les
mov
dec
push
leave
nop
lahf
inc
sbb
insl
rorb
mov
and
dec
popf
pusha
repnz
push
jecxz
xchg
adc
pop
sub
sahf
addr16
mov
aas
sub
mov
outsb
xlat
mov
popf
or
sub
insb
xchg
sub
mov
stos
or
data16
loopne
ljmp
out
jo
sub
rclb
fidivs
push
dec
jo
daa
adc
inc
fldl
and
and
scas
or
xlat
sub
mov
movsb
cmp
jnp
test
or
std
cli
dec
push
data16
adc
inc
aad
out
adc
arpl
pop
in
or
add
clc
ret
cld
hlt
mov
ljmp
popl
inc
pop
daa
inc
push
inc
mov
sbb
loopne
add
cmp
test
dec
adcl
lds
scas
ds
loopne
sub
jo
and
push
mov
push
cmp
inc
dec
push
push
sub
jecxz
leave
pop
pop
inc
mov
mov
lds
mov
mov
aaa
or
les
in
mov
or
sbb
enter
mov
std
dec
mov
mov
push
xor
pop
dec
sub
jmp
sub
cmc
dec
cmp
pop
xlat
mov
adc
xchg
in
mov
out
jo
inc
cmp
decb
out
or
loope
mov
sbb
cmp
lods
jmp
cld
cmpsb
add
mov
in
push
jnp
ljmp
out
xor
xorps
pop
bound
clts
or
fisubrs
mov
popf
jmp
mov
push
cmp
jle
pop
xor
ds
dec
pop
cmp
cmp
add
inc
insb
or
jbe
push
mov
imul
addr16
out
out
push
dec
adc
push
loopne
pop
insb
fldl
pop
stos
dec
push
test
pop
xchg
aad
outsb
popa
movsb
out
pushf
aaa
popa
call
sbb
inc
lods
out
mov
es
mov
dec
idiv
lcall
inc
jp
int3
jg
xor
std
add
push
scas
xchg
das
mov
adc
mov
sti
fs
add
imul
cli
mov
mov
jno
notb
jecxz
scas
fildll
cs
mov
int
inc
fiaddl
sub
cltd
cmpsl
or
sbb
pop
int3
shlb
adc
data16
movsb
jl
pop
aaa
adc
fdivrl
dec
rol
mov
mov
cmpxchg
into
inc
add
out
ret
addl
dec
dec
mov
mov
lods
fs
jae
divb
mov
and
mov
xor
idivl
adc
cmp
cmp
pop
inc
push
sbb
je
fbld
adc
std
test
rorb
cmpsl
arpl
cmp
hlt
jns
int
sarb
or
xor
adc
sbb
loope
mov
mov
in
int
and
pop
icebp
mov
dec
inc
data16
and
stos
sbb
rcrl
pop
dec
lcall
pop
hlt
adc
pop
mov
leave
frstor
lods
popa
adc
imul
ds
lea
inc
into
fwait
jmp
cmp
and
sbb
mov
push
dec
push
ret
out
xchg
mov
mov
add
gs
mov
leave
mov
clc
ds
mov
sbb
jl
repnz
pusha
pmulhuw
fwait
int3
fcmovbe
cmp
mov
pop
lea
popf
pushf
daa
pop
or
fucomi
sub
test
sti
dec
pop
in
xchg
inc
fs
pop
add
je,pn
dec
push
pushf
aas
add
xor
xorl
in
in
adc
cmpsb
add
and
idivl
mov
mov
inc
or
sbb
pop
imul
pop
cli
mov
jne
or
jns
cwtl
pop
push
jno
lods
xor
fisubs
sub
inc
ret
inc
jl
insb
xor
jmp
jecxz
rcr
jbe
mov
ss
adc
cs
popf
jl
xor
mov
lret
and
adcb
sub
mov
xchg
lds
cmpsb
rol
pop
mov
scas
cmp
lods
mov
xchg
inc
ficompl
shl
cli
mov
cmpsb
orl
mov
sub
xor
and
aad
movsb
sub
xor
jb
pusha
or
in
sub
or
and
adc
xor
into
jmp
jbe
dec
test
sub
mov
xchg
mov
loope
shlb
sbb
ret
pop
xchg
icebp
jno
inc
mov
inc
sahf
cmp
popf
cld
mov
lahf
aam
daa
dec
loop
mov
stos
test
dec
outsl
xchg
ret
xor
mov
sbb
rcl
je
test
jmp
loopne
push
pop
xchg
mov
fnsave
and
mov
jae
movsb
dec
cli
jnp
lret
push
mov
fnstenv
adc
mov
test
sahf
scas
ljmp
mov
stc
lcall
lods
mov
sub
pop
and
rcrl
lret
sbb
aam
sbb
js
pushf
mov
pop
jno
push
stos
ret
movsb
sub
sbb
sbb
adc
jg
and
ljmp
mov
or
rep
dec
js
ret
insl
fisubrl
xchg
out
xchg
jge
loopne
jle
outsl
jge
lret
ret
imulb
enter
mov
sub
dec
in
mov
jmp
dec
add
mov
xchg
out
js
dec
pop
jae
push
dec
sbb
in
mov
xlat
mov
sbb
cmp
pavgw
pop
idivb
mov
dec
push
int3
repz
je
arpl
xchg
inc
pushf
mov
fmuls
loopne
xchg
in
cwtl
add
add
pusha
ss
mov
gs
arpl
ret
rcr
mov
rcr
mov
and
mov
push
loopne
jp
or
jns
call
adc
pop
and
xchg
jp
into
fistl
stc
out
rol
lret
or
push
mov
xor
mov
int
cwtl
xor
test
fsubrl
or
xor
mov
jnp
and
push
out
push
loop
and
nop
mov
add
daa
orl
add
pop
jno
add
pusha
sbb
jne
mov
subb
fstl
add
or
sarl
mov
loopne
into
adc
jmp
adc
xor
fwait
mov
sub
fimuls
add
sbbl
jb
pop
shrl
sbb
stos
mov
pop
pop
jbe
pop
cld
jp
or
jg
shlb
and
cwtl
pop
scas
ror
ss
test
mov
dec
mov
or
xchg
xor
sbb
cltd
popa
push
int
pop
xor
pop
cmp
es
jae
call
cs
cmc
mov
sub
dec
insl
jle
in
mov
sbb
dec
push
fsubrl
mov
and
sbb
out
mov
adc
pop
test
int
fs
jle
inc
or
sbb
das
inc
dec
bound
push
cltd
movsl
xor
aam
and
push
sbb
cmp
cmpsb
cmp
mov
sahf
pop
jae
xchg
cltd
mov
fiaddl
push
jge
or
xorb
xchg
dec
dec
pop
stos
xor
pop
int3
cmc
xor
cmp
cld
sub
ss
sub
mov
stc
sti
outsl
dec
xchg
cmp
mov
mov
int3
pop
iret
scas
pop
push
pushf
push
pop
xor
mov
xchg
mov
leave
fs
mov
std
mov
aam
das
pop
popa
mov
inc
bound
inc
adc
xor
mov
adc
jb
inc
test
pop
enter
push
adc
imulb
push
jno
icebp
add
nop
cmp
in
shr
inc
stc
sub
dec
push
mov
dec
add
lock
cli
sbb
sbb
push
fiaddl
dec
scas
stos
lods
sub
pop
cs
mov
stos
hlt
hlt
push
aad
and
sbb
cs
and
mov
faddl
xchg
or
enter
mov
addb
pop
in
pop
push
hlt
aam
out
incb
out
adc
ss
or
shr
popf
xor
shrb
jae
test
jno
mov
cmp
xchg
xchg
je
dec
cli
lret
add
add
fs
fnsave
sub
push
nop
or
inc
push
sub
or
daa
jle
lcall
int3
add
dec
les
inc
int
in
push
or
xlat
dec
cmc
hlt
dec
lods
inc
call
push
std
loop
addb
arpl
cltd
sub
dec
lea
xor
add
mov
dec
adc
cmc
lahf
xchg
mov
sbb
dec
test
mov
int
ds
fisubrl
pop
fwait
hlt
sub
stc
dec
mov
stos
adc
mov
daa
pop
xorl
mov
jo
les
add
push
stos
xor
ja
gs
mov
cmp
xchg
loope
or
mov
sbb
add
fimull
sbb
pop
insb
pop
push
push
pop
leave
sahf
scas
lea
test
push
jmp
fisubl
adc
lds
arpl
aad
mov
fisttps
pop
cmp
sub
mov
and
cwtl
scas
ret
jg
sub
insl
sahf
sbb
sbb
clc
xor
sub
mov
jae
mov
movsb
adc
xchg
mov
cs
rcr
xchg
mov
shll
or
sbbl
shrl
xchg
jae
and
sbb
ret
inc
lds
scas
cmpsl
push
push
shlb
ja
repz
add
in
cmp
lock
push
stos
mov
std
fnstcw
test
push
iret
mov
lods
jno
push
out
mov
out
enter
cmp
in
or
shl
xor
mov
lret
loope
lods
mov
pop
pop
inc
ss
in
adc
ja,pt
jnp
addr16
lret
inc
or
cli
outsb
shll
push
sub
xor
rorl
jge
aaa
and
jmp
dec
popf
lea
cld
sbb
dec
adc
or
fisubrs
push
xchg
jae
movb
mov
in
rcl
lds
mov
push
stc
pop
jne
xchg
adc
sub
insb
mov
repnz
pop
cmp
leave
cltd
sub
sub
pop
andl
xchg
mov
subb
lock
add
test
lods
ret
mov
push
jo
push
popa
inc
push
stos
sbb
clc
xor
and
outsl
jb
ucomiss
and
xor
sti
or
inc
lcall
and
jbe
xorl
xor
insb
aaa
pop
jg
dec
xchg
sub
sbb
aas
push
cltd
mov
or
in
and
sbb
adc
test
fwait
adc
leave
divl
lahf
mov
sarb
loop
movl
or
inc
xchg
inc
outsb
int
jl
sbb
test
jle
push
inc
mov
notl
dec
sbb
mov
or
mov
imul
jecxz
xor
jp
mov
jmp
sbb
in
cmp
fimull
dec
adc
rcrb
pop
sub
cmpb
sub
jnp
mov
pop
pmaxub
cltd
cmp
ffreep
stos
lods
pop
je
jecxz
imul
pop
and
das
mov
repz
loope
andl
movsb
mov
push
cmp
out
aaa
pushf
stc
sti
mov
movsb
and
loope
mov
add
xchg
xor
and
xchg
in
add
fdivrp
lret
and
stos
cmpsb
in
adc
test
fcompl
dec
out
addr16
aaa
mov
jnp
sub
insl
xchg
mov
icebp
fwait
mov
jg
icebp
fcmove
mov
pop
push
xchg
test
push
cltd
push
cmp
cmp
test
add
xor
sbbb
or
call
cwtl
mov
mov
mov
xchg
xlat
mov
imul
pop
cltd
jae
sti
pop
les
xchg
xchg
or
add
iret
xchg
xlat
imul
out
inc
stos
mov
ret
add
es
cli
sub
aas
cmp
xchg
dec
xor
lret
push
jge
mov
jg
dec
hlt
lods
or
jmp
pushf
sahf
mov
dec
mov
scas
and
scas
add
cmp
xchg
adc
or
aam
and
repz
jns
cld
mov
arpl
pop
xchg
test
xor
in
lea
sarl
into
shlb
ret
sub
faddl
mov
mov
rclb
inc
mov
dec
orb
movsb
or
imul
mov
test
mov
sub
jne
jno
and
mov
jnp
aam
ss
cmp
jb
popf
mov
inc
pop
push
aad
and
stc
mov
cmp
gs
cltd
outsb
jne
lods
sbb
push
or
fsubr
in
ja
dec
lret
and
nop
and
mov
add
cmc
fmuls
inc
jno
xorl
and
or
jbe
xchg
jae
ret
std
mov
add
movsb
jmp
aad
xchg
ror
imul
pop
xchg
cmp
in
ja
pop
test
pop
adc
mov
xchg
xchg
pop
ret
pop
adc
jecxz
rcl
in
popa
addr16
iret
mov
jnp,pn
mov
sti
jno
pop
mov
xchg
rclb
insb
in
add
out
mov
not
dec
xor
and
xlat
pop
jbe
push
out
imul
ja
outsl
push
pop
stos
repnz
lods
jge
pop
popa
jecxz
shlb
cli
insb
jg
aaa
and
push
jnp
xor
jmp
mov
xchg
add
test
ds
subb
mov
repnz
or
fimuls
xchg
andl
inc
xor
dec
adc
add
pop
repz
roll
movsl
or
cld
jae
mov
mov
or
xchg
stos
insb
or
stc
stos
pop
roll
inc
imul
fstpt
sti
movsl
subb
or
ja
js
repnz
mov
cmc
jg
stos
xchg
int
push
sti
jl
jno
adc
andl
sub
mov
movsb
inc
sbb
adc
lds
arpl
out
je
inc
xor
lret
fwait
sub
in
roll
loop
push
movsb
stos
add
add
subb
shll
std
cmpsl
pusha
sbb
fdivr
nop
push
jmp
adc
jmp
inc
xchg
sbb
xor
mov
pop
lahf
inc
ja
arpl
mov
imul
iret
aaa
mov
clc
andl
out
popf
mov
popf
fs
cwtl
cli
and
outsb
enter
xchg
shr
cli
cmp
sub
jg
movb
jbe
mov
icebp
fdivs
cld
sub
pop
pop
call
out
xchg
clc
xchg
inc
out
mov
xor
cs
jg
mov
ljmp
or
scas
push
pusha
popf
and
mov
mov
push
adc
cmp
mov
test
lods
cmp
scas
je
cmpl
push
sub
xchg
ds
negb
int
data16
je
or
or
cmc
stos
dec
mov
xor
shr
dec
adc
inc
cld
and
dec
test
lock
cld
or
mov
mov
into
or
push
xchg
mov
fcomip
rcll
dec
js
sbb
stc
out
cmp
mov
clc
push
cmp
je
xchg
mov
lret
xchg
jg
movsb
adc
insb
inc
cltd
mov
jl
push
test
sbb
adc
pop
jbe
mov
cltd
addr16
inc
lods
lds
mov
sbb
loopne
cmpsb
mov
adc
jle
imul
xor
pusha
out
xchg
fcompl
and
pop
fisubrl
out
xor
mov
dec
cld
outsb
insl
jae
repz
cmp
sub
movsb
push
sti
jp
addr16
outsl
mov
inc
mov
and
mov
inc
cmp
xor
sbb
add
mov
sub
xlat
inc
sub
or
popa
pop
scas
outsb
cmpsl
and
aas
xchg
mov
loopne
outsl
ds
jno
int3
xchg
insb
sub
jnp
and
and
repnz
addl
mov
push
repz
call
jbe
add
xchg
ret
fldl
cli
cmpsb
jp
cmpsl
fldl
push
enter
adc
cmpsb
adc
xchg
mov
adc
aam
test
push
cltd
or
or
cmp
shrb
daa
xchg
fstpl
push
out
pop
cmp
cmp
icebp
fsub
xor
ljmp
rorb
loop
lods
or
jne
adc
dec
or
mov
loopne
arpl
adc
ljmp
xor
test
xchg
add
hlt
pop
adc
fwait
cld
stos
lock
out
test
iret
xor
push
nop
sbb
fldcw
jle
mov
fxam
or
jno
cmp
xchg
sti
or
iret
adc
sub
push
dec
or
dec
std
jne
sub
jecxz
out
mov
and
stos
mov
in
xor
test
jbe
notb
sub
aam
jmp
scas
pop
sub
negb
push
fidivl
jb
insl
xor
inc
enter
popa
push
rolb
test
cmp
shrl
out
rdpmc
fbstp
push
je
jl
mov
in
push
push
scas
std
adc
sti
mov
add
sti
mov
shrb
and
nop
aaa
cmp
xchg
rcll
cmpsl
sbb
or
sahf
into
and
aad
dec
sbb
push
icebp
fidivrs
mov
cld
scas
mov
inc
adcl
cmp
insb
ficoms
sub
mov
push
fisubs
or
or
repz
xor
jnp
xchg
inc
shl
pop
rcrb
mov
bswap
fcmovbe
jp
adc
lods
rcl
aam
sbb
mov
jge
sbb
mov
jo
stc
test
cmpsb
mov
clc
scas
inc
xchg
fstl
aam
mov
mov
mov
aad
inc
pop
les
jbe
cltd
and
out
out
push
jle
and
into
cwtl
sub
arpl
jl
and
inc
lock
mov
hlt
call
adc
mov
mov
incb
dec
xchg
or
insb
sbb
inc
arpl
and
movsb
cmp
rcl
inc
out
out
sub
push
xchg
push
jmp
std
add
pushaw
stc
pop
es
in
int3
call
dec
int3
scas
pop
cmp
fisubrs
leave
jge
mov
pop
aas
jb
sbb
sub
pop
or
ja
xor
pop
mov
or
popf
push
flds
jne
xchg
xchg
imul
pop
insb
mov
adc
mov
loope
cli
into
xchg
mov
faddl
lea
xchg
fcompl
mov
adc
xor
out
and
sbb
pop
and
gs
cs
icebp
sti
xchg
mov
pop
fdivs
inc
mov
sub
mov
imul
in
insb
loope
mov
shrl
mov
into
push
dec
mov
jmp
dec
lcall
or
cmp
ja
xchg
insb
ficompl
gs
adc
and
add
fisubl
cmp
and
ret
push
ja
sub
je
jg
pop
mov
mov
jae
xchg
jbe
xlat
daa
cmc
sub
sbb
sub
xchg
sbb
frstor
test
scas
adc
js
jnp
xchg
jmp
or
cmp
icebp
int
and
cmp
into
addl
mov
inc
repnz
in
cmpsl
inc
in
mov
cs
xchg
test
pop
sbb
mov
fsubs
lods
fldl
xor
aas
out
add
pop
inc
data16
daa
or
and
pop
pop
xor
daa
jle
lahf
dec
cmp
testb
enter
pop
sbb
cli
cmpsl
dec
mov
shrb
and
or
mov
dec
test
dec
push
loope
pop
std
in
jg
loop
push
jg
mov
aas
insb
pop
rorl
cmp
mov
faddl
cmpsl
cmp
fnsave
adc
mov
insb
or
loope
mov
cwtl
cmc
movsl
les
push
sbb
dec
inc
adc
jbe
cmp
icebp
mov
outsb
insb
pop
mov
or
jbe
push
rorb
add
sbb
sub
daa
cmp
pushf
insb
in
loopne
dec
je
loope
xor
and
xchg
sub
and
and
fiadds
aas
out
xlat
icebp
and
dec
ja
int3
mov
fstpt
insl
fdivr
out
dec
cwtl
cld
mov
pop
add
imul
lea
shll
or
xchg
std
jo
das
xchg
je
out
lcall
pop
push
jbe
pop
cmc
dec
jb
push
and
inc
imul
cmp
dec
ret
add
lock
add
je
in
or
daa
testl
xchg
sbb
lret
pop
fidivl
fnstenv
cmp
inc
push
scas
daa
sbb
daa
out
adc
or
add
repz
movsb
lret
mov
jns
test
xchg
ror
neg
sub
cli
cmp
je
and
pop
fs
jne
jecxz
mov
lds
jge
jno
fsts
icebp
lahf
pop
inc
int3
mulb
jnp
cmp
sbb
movsb
popf
ljmp
xchg
push
roll
adcl
push
loopne
dec
xchg
test
xor
sarl
add
out
jo
sub
xorb
sbb
mov
dec
insl
cs
sbb
out
mov
dec
std
addb
push
pop
fnsave
outsb
sbb
push
mov
sbb
pop
vmovdqa
and
int3
mov
int3
imul
push
ds
out
mov
sub
cli
fs
in
aam
pop
movsb
cmp
jmp
rcr
psubsw
mov
orb
jle
xor
push
pop
aad
push
inc
das
mov
mov
and
in
fcompl
mov
adc
push
pop
add
add
xchg
and
dec
das
adc
or
push
orb
bound
cltd
mov
sub
cmp
or
xchg
and
push
inc
mov
pushf
cmp
enter
fbld
ret
push
mov
xchg
insl
daa
push
cmp
jg
mov
add
add
jne
imul
jg
lods
mov
hlt
sbb
addr16
cltd
and
jmp
push
inc
js
sahf
xchg
mov
rclb
mov
jmp
push
fs
movsb
ds
iret
push
lcall
outsb
outsb
outsb
jle
addr16
dec
cli
sbb
scas
lds
mov
cld
insb
mov
push
ficompl
cmp
xchg
xchg
daa
call
mov
repnz
int3
sti
jl
inc
repz
out
nop
or
dec
push
aad
dec
leave
stc
inc
ret
add
jg
mov
push
lods
sbb
sub
mov
in
rorb
repz
cwtl
push
push
sub
lret
popa
andl
cmp
or
ja
inc
xor
out
shll
loope
fnsave
sub
sbb
sbb
fstps
push
imul
leave
push
out
mov
outsl
movsb
push
xchg
popf
mov
mov
lea
mov
idivb
push
daa
repnz
xchg
lcall
mov
push
mov
and
fs
in
mov
int
stos
fs
out
stc
mov
arpl
scas
jl
push
mov
pusha
in
mov
xchg
scas
xor
rcl
mov
inc
push
lea
bound
lds
je
stos
sbb
ret
xchg
addr16
and
fcoms
repnz
scas
dec
pop
test
out
add
push
pop
inc
add
vmovss
push
inc
pop
fcmove
xchg
repnz
pop
out
and
adc
jbe
mov
stos
fldcw
lods
and
into
jmp
inc
loop
sub
mov
sub
popf
ds
out
clc
outsb
mov
rolb
xchg
or
jne
fwait
ret
cmp
mov
or
mov
sti
lods
outsl
pop
sbb
xchg
jb
adc
lds
popa
jl
stos
dec
mov
sub
and
xor
push
popf
mov
sub
gs
stc
inc
in
sahf
xor
cmpsb
sbb
dec
lods
sub
int
dec
jae
rorb
sbb
std
ret
jp
outsb
lods
jne
out
pushf
hlt
and
das
or
ja
bound
in
or
mov
xchg
movsl
imul
xchg
daa
add
pop
jmp
icebp
aam
mov
arpl
xorl
pop
jmp
push
popa
pop
js
lds
or
dec
add
lcall
mov
pop
rorb
xchg
adc
jo
pushl
pop
and
pop
fsubp
jo
inc
adc
pop
mov
sbb
pusha
bound
cs
adc
push
imul
sbb
loopne
xchg
repnz
out
push
push
jno
push
pop
push
xchg
out
iret
nop
nop
aas
jp
xchg
jl
je
shl
mov
and
mov
mov
lcall
cmp
jae
mov
push
stc
cld
and
adc
sbb
adc
cmc
xchg
bound
xchg
cmp
and
daa
rcr
inc
into
inc
fdivrs
mov
jae
push
mov
leave
loope
jge
mov
pop
xchg
xor
clc
add
xor
mov
stos
dec
pushf
popf
cltd
jb
cmp
push
cmp
mov
int
sub
hlt
xchg
test
movsb
mov
lahf
push
movsl
mov
cmp
mov
cmp
out
lods
hlt
in
sahf
aas
push
and
pop
popa
stos
jecxz
bt
add
ds
lcall
gs
out
aas
icebp
in
xchg
leave
dec
jno
inc
shll
adc
or
mov
adc
push
jl
stos
enter
stos
scas
sbb
mov
mov
or
mov
test
sub
xlat
lret
in
jmp
push
jge
fwait
orl
pop
pushl
mov
sub
inc
cmp
aam
pop
aad
and
pop
mov
movl
push
subb
xor
mov
push
xchg
xorl
test
aam
lahf
xorl
jge
pop
or
imul
clc
jo
fidivl
dec
sub
xor
mov
and
jb
ret
jge
mov
adc
inc
sbb
shl
fldl
test
je
dec
in
fcomip
jo
jnp
cmp
sbbl
idiv
sub
sbb
jmp
lods
insl
shlb
add
cmp
lds
sub
fs
out
or
sbb
adc
pop
out
cmc
pop
lret
dec
repnz
xchg
outsl
add
xchg
jb
sbb
mov
xchg
xchg
sub
xor
mov
and
dec
fnstenv
xor
or
adc
fs
cld
in
leave
add
xlat
xor
mov
push
cmp
insl
mov
xchg
cs
add
out
lock
mov
into
cmp
mov
push
sbbb
fsubl
lahf
int3
pusha
and
fadds
shrl
data16
imul
loop
call
iret
and
sbb
mov
xor
dec
pop
fdivrl
scas
ret
add
ret
mov
icebp
loopne
mov
cmp
fwait
sbb
push
xor
rcll
daa
mov
rolb
dec
ret
mov
sub
inc
push
icebp
daa
rorb
rcrl
or
xchg
push
xlat
js
popf
pop
cld
out
push
cmp
mov
push
mov
pop
xchg
inc
xchg
repnz
ja
stc
aam
sbb
jl
mov
sbb
or
xchg
adc
pusha
enter
outsb
fcomps
dec
dec
imul
addr16
add
and
int
outsb
scas
inc
aad
mov
stos
sbb
mov
or
jge
fwait
xor
outsl
lahf
xor
fmull
call
sahf
lds
xor
jbe
in
and
xchg
mov
mov
in
xchg
ret
mov
scas
ret
fs
adc
mov
paddusb
mov
int
dec
mull
dec
cld
xor
shrl
into
popa
and
fstpl
xor
inc
and
repz
fadd
mov
or
jnp
test
mov
xchg
neg
push
jo
add
das
fs
arpl
jbe
shrb
js
adc
ret
push
ja
enter
aam
jle
and
push
inc
sub
sar
gs
jb
in
js
in
push
or
xchg
sbbb
push
jo
leave
test
cmp
enter
gs
xchg
ss
testb
mov
jae
xor
pop
xor
xchg
mov
enter
lahf
mov
pop
sbbb
xor
fdivl
shlb
adc
cmpsb
inc
hlt
mov
jle
push
add
and
xlat
repz
adc
cmp
pop
xlat
jns
xchg
lret
lret
and
adc
push
imul
movsl
clc
imul
stc
jnp
inc
sbb
or
in
jno
mov
fcomps
adc
jle
jbe
mov
jo
aad
jle
push
lods
pop
out
fstps
mov
lret
or
pop
data16
inc
xchg
add
cmc
addr16
faddp
cmc
jne
inc
mov
xchg
xchg
push
loope
cltd
mov
push
mov
ret
in
mov
mov
in
imul
mov
es
mov
jle
pop
push
sbb
insb
jecxz
repnz
mov
inc
and
cltd
jecxz
cld
in
xor
cmp
out
cmp
or
cmp
or
push
dec
xchg
pusha
int
mov
icebp
xchg
scas
rclb
fcomps
es
push
mov
dec
mov
sub
dec
in
pop
jle
std
xlat
dec
in
push
inc
repnz
rcrl
add
sbb
ljmp
xor
or
lods
mov
arpl
inc
adc
pushf
sbb
jae
sub
dec
cmc
push
mov
lea
shlb
fs
aad
into
cmp
call
enter
hlt
stos
clc
sub
xchg
inc
lods
jmp
aaa
sbb
scas
jecxz
subl
hlt
jmp
push
out
cmp
les
cmpsl
test
popf
xchg
aas
fsub
fsubs
cmpsl
inc
loope
xchg
or
test
sub
andb
dec
not
in
in
les
jl
ja
jl
jp
cmp
les
aam
mov
gs
paddusb
addr16
or
lahf
jb
popf
sub
ja
jl
jl
mov
sub
adc
test
cmp
ss
iret
call
fldl
or
orb
sub
mov
jne
mov
cmp
push
and
mov
jae
xchg
adc
mov
push
pushf
and
pop
xchg
adc
xchg
sbb
sub
xchg
or
icebp
pop
xor
test
les
xor
clc
sub
fnstcw
std
mov
xchg
add
and
insb
cmp
pop
inc
jnp
adc
subb
push
sub
aam
fildll
insl
pop
adc
push
mov
push
lret
sub
xchg
divl
adc
adc
int
inc
lcall
jge
cmpsb
daa
rcrl
rcrl
pop
pop
pop
cmp
dec
cs
sbb
loop
jg
lret
and
push
imul
repnz
fiaddl
ffreep
shrb
pusha
push
xbegin
sbb
enter
push
js
movsb
jecxz
test
lods
mov
divl
and
out
imul
fs
mov
jns
push
xchg
mov
mov
xchg
aaa
mov
push
sub
inc
dec
add
xor
inc
or
inc
pop
or
xor
sarb
outsb
push
pop
movsl
dec
fs
sbb
push
jmp
push
scas
daa
shll
js
push
mov
icebp
mov
insb
pop
mov
ficoms
into
fstl
addl
or
mov
adc
sub
mov
dec
jle
xor
sti
or
fs
mov
icebp
mov
jecxz
mov
ret
jnp
xor
pop
xor
xchg
in
std
lahf
mov
stos
adc
inc
inc
cmpsb
shr
pop
rolb
inc
add
or
inc
out
pushf
test
dec
ds
mov
lcall
inc
pop
add
push
lods
sahf
outsb
dec
les
out
je
iret
cs
adc
jb
inc
jge
cmp
dec
xlat
inc
into
jb
cmp
hlt
cltd
and
hlt
push
xchg
loope
test
push
sbb
fdivrs
imul
mov
pop
xchg
lods
ficomps
in
mov
pop
add
push
add
das
ja
inc
ljmp
sub
scas
in
jle
outsb
pop
mov
hlt
push
push
inc
gs
arpl
adc
cmp
rcrl
inc
mov
lock
xor
mov
les
cli
ret
aas
adc
xchg
push
adc
stos
bnd
inc
hlt
jnp
sub
popa
jp
clc
vunpckhps
pop
outsb
rcr
test
lret
cmpsb
jb
xor
jno
ret
std
mov
aam
sbb
mov
jmp
mov
sub
pop
push
leave
mov
cwtl
out
mov
push
cmp
loop
ficoml
inc
jle
xchg
addr16
aad
add
lret
inc
jg
jbe
mov
outsl
js
stos
sbb
je
mov
icebp
rol
shl
fwait
sarl
mov
lds
cmpsb
xor
push
dec
sbb
adc
sub
cmp
cmp
pop
push
mov
pop
dec
cli
cmp
icebp
loopne
cmp
jle
pop
push
daa
insb
movsl
push
xor
and
jp
lret
dec
mov
cld
sbb
cmp
addr16
mov
mov
or
dec
imul
or
xor
mov
int
bound
lahf
inc
sub
je
sbb
sbb
adc
jmp
xor
cmp
inc
pop
test
mov
pop
mov
mov
into
jae
push
scas
jne
loop
js
shll
adc
dec
test
and
xchg
sbb
js
sub
popf
xchg
repnz
jecxz
mov
sub
inc
sahf
add
pop
rorl
fstpl
or
adc
test
mov
mov
jnp
pop
xchg
cmp
mov
fdivrs
xlat
cmpsl
enter
je
lahf
push
daa
fisubrl
lea
xor
xchg
outsb
dec
stos
and
add
cmp
mov
fbstp
inc
and
aad
arpl
movsb
xor
or
lret
cmp
inc
std
fldenv
icebp
add
cmp
cli
cld
jns
fldt
mov
test
mov
enter
in
fistl
dec
and
inc
inc
in
cmp
shrb
popa
inc
push
jb
mov
pushf
fwait
pop
push
jb
test
fdivrl
mov
loope
adc
test
or
movsl
gs
addr16
mov
test
les
pop
lret
mov
leave
cmpsb
or
in
add
push
aad
sbb
movsb
jno
cmc
xchg
ljmp
mov
sbb
push
fadd
lret
lret
jne
sbb
rorl
int
imul
clc
jbe
shll
jecxz
pop
movl
xchg
sbb
pop
cs
cmp
push
inc
in
idivl
sbb
mov
xor
or
sbb
adc
lea
jp
repnz
jbe
or
add
hlt
fs
test
sbb
ret
lahf
fbld
repz
jmp
sbb
and
stc
mov
stc
xchg
imul
push
movsb
in
jecxz
mov
js
scas
mov
lds
call
lods
es
pop
cld
push
and
or
stos
adc
sbb
stc
test
inc
sbb
mov
or
test
out
lret
lret
ret
jne
cmpsl
pop
subb
lea
adc
dec
in
fmuls
mov
hlt
scas
jo
imul
xchg
mov
je
jg
dec
push
popl
mov
pop
outsb
je
shll
dec
push
fisubrl
int
add
and
lock
or
mov
xor
std
inc
jnp
outsb
cmp
adc
dec
sbb
pop
test
std
push
jo
cs
aad
fidivrs
cmpsb
movsb
push
push
push
cwtl
aad
fnsave
lret
cld
cmc
dec
into
cmc
daa
shrb
add
xor
pusha
jae
inc
or
test
push
sarb
cwtl
jne
jne
adc
fwait
es
pop
xchg
orb
test
ret
dec
sbb
sub
std
xor
pop
addr16
dec
stos
fidivl
or
mov
add
jmp
mov
push
sbb
cltd
out
mov
jl
hlt
not
adc
mov
xor
ret
repnz
or
mov
movsl
pop
jne
dec
mov
cmp
push
imul
popf
test
pop
ds
gs
into
push
sub
loop
mov
test
pop
ret
push
pop
fdiv
js
fwait
pop
xchg
fildll
mov
jmp
sub
fsub
aam
sahf
int
mov
insl
aad
pop
add
inc
inc
pop
das
xor
inc
jnp
test
lahf
js
push
xor
dec
test
and
pop
insl
std
std
cmp
scas
or
test
dec
shrb
test
jle
divb
push
mov
pop
adc
outsl
pop
loop
push
fmul
icebp
cvttps2pi
jne
add
fcomps
or
pop
or
call
rclb
loop
les
xchg
sub
out
dec
call
jp
popa
sahf
aad
lret
pop
sbb
fimull
adc
imul
xchg
es
sub
aam
dec
fdivrs
xor
sti
cmp
mov
xchg
push
or
lcall
std
adc
frstor
jg
test
lcall
jl
or
sarb
in
test
cmp
mov
rcll
pop
inc
sub
jo
insl
sub
popa
aad
rcrl
xor
pusha
sbb
sar
pop
xchg
push
into
mov
xchg
sub
je
mov
jae
mov
or
aad
scas
dec
stos
sbb
jns
ss
filds
rcr
fs
mov
in
jle
adc
or
cmpsl
testl
cmpsl
mov
daa
loope
lea
cwtl
sbb
mov
out
mov
inc
mov
dec
roll
inc
add
push
xchg
in
out
loope
mov
loop
add
lcall
shl
mov
leave
push
cmp
jmp
xchg
sti
ret
sbb
cmc
mov
cmp
aaa
shrl
jns
xchg
data16
sub
or
sub
stc
and
add
in
cmp
loopne
inc
shrl
inc
punpcklwd
mov
pop
add
xchg
jbe
xor
das
test
xchg
inc
or
fistpl
sar
dec
cli
sbb
std
pop
setne
lock
push
es
sub
mov
adc
aad
mov
repz
xchg
lahf
loope
ja
cmp
fisttpll
cmp
add
cmpsl
inc
cld
pop
mov
mov
inc
pop
pop
push
push
jmp
mov
sub
repnz
gs
inc
loopne
add
jo
add
enter
jecxz
xchg
pop
xchg
dec
int3
cld
cmp
aas
push
jg
adc
mov
mov
je
lret
sbb
pushf
insb
xchg
test
push
jle
dec
bound
mov
and
pop
sbb
push
out
push
pop
lods
fs
xchg
mov
push
cmpsl
inc
ds
loopne
cltd
xchg
in
sbb
sub
add
test
xchg
mov
mov
cmp
push
test
movd
imul
jle
jl
loopne
lret
pushf
adc
std
sbb
testl
sub
push
in
ret
sbb
xor
adc
into
nop
inc
xor
ficomps
mov
adc
xor
insl
xor
in
cmpsl
xchg
ss
ja
cmp
dec
mov
mov
xchg
test
ds
lret
pop
mov
sub
cltd
aad
and
fstps
fsubl
mov
sbb
fildll
push
loope
xor
sbb
outsb
gs
imul
add
popa
and
inc
cmc
mov
or
jl
sahf
push
mov
add
cmpsl
push
xchg
mov
sub
fs
sub
mov
cmp
push
imul
pop
int3
push
sahf
push
push
bound
fs
idivl
mov
xor
fldt
push
lods
mov
ljmp
sbb
push
pop
loop
mov
adc
je
jb
mov
ja
test
sbb
dec
sbb
mov
out
cmp
inc
adcl
jne
aad
sti
imul
jecxz
movb
pop
insl
loopne
mov
jmp
std
xlat
int
push
xorl
fisttpl
adc
icebp
push
ret
rdpmc
or
dec
jle
imul
sub
shlb
int
aas
mov
shll
movsl
movsl
jle
push
cld
cli
lret
fcom
add
mov
xor
ror
and
int
pop
sti
loop
scas
xlat
adc
jae
push
repnz
int3
sbb
out
mov
add
mov
jns
mov
xchg
and
subb
mov
or
add
jae
xchg
mov
scas
int
sbb
fs
jge
sub
jns
fnsave
out
mov
mov
das
mov
faddl
adc
mov
out
cmpl
add
hlt
hlt
xchg
jg
lods
jle
push
push
and
mov
mov
cmp
mov
inc
repnz
into
dec
xchg
mov
outsb
call
test
dec
push
scas
ret
dec
mov
sub
shlb
insb
and
bound
push
out
add
push
fbstp
mov
mov
out
scas
and
adc
pop
fcmove
test
jecxz
mov
outsl
push
jmp
adc
xchg
in
bound
jg
ucomiss
add
mov
and
orb
mov
lret
fcompl
mov
jg
jnp
jo
jmp
xchg
add
inc
mov
hlt
push
sub
dec
jecxz
lret
aad
bound
mov
adc
std
sbb
std
cmpsl
inc
dec
paddw
cmp
push
mov
and
xchg
dec
add
ss
push
mov
inc
pop
out
mov
cmpsl
lods
fisubl
test
sbb
jge
cmp
cs
lods
in
xchg
and
repnz
fmull
testb
xchg
push
push
movsl
jnp
xchg
enter
lcall
and
mov
mov
xchg
and
jnp
cli
or
mov
cld
shll
mov
xchg
aaa
sahf
lea
lods
cmp
jmp
inc
jmp
lret
push
repz
das
xor
in
test
xor
mov
arpl
mov
mov
pop
pop
orb
out
in
jle
mov
add
js
filds
rcll
cmpsb
addr16
ljmp
dec
stos
ja
loop
push
std
loopne
mov
mov
push
outsb
sbb
dec
shr
shr
push
cmc
mov
sti
or
push
xchg
test
mov
inc
xchg
add
push
test
add
aaa
sbb
mov
mov
sbb
ss
ret
push
sbb
push
xlat
jne
ja
int
shrb
test
sarl
or
fcomp
int3
push
scas
lret
sbb
rcll
sbb
or
add
xlat
pop
cmovne
adc
es
sub
sbb
and
std
and
sub
and
ret
pop
dec
mov
lahf
jbe
push
sahf
insl
movsl
unpcklps
clc
cmp
bound
or
cmp
es
and
adc
pop
and
mov
test
sti
push
cmpsl
dec
clc
fwait
std
int3
leave
sbb
in
or
or
jp
cwtl
sti
pop
aam
jo
dec
xchg
push
sbb
sbb
add
rorb
push
inc
jns
in
sahf
mov
inc
inc
add
inc
rclb
aaa
xor
jp
dec
notb
mov
jae
mov
in
xor
cltd
mov
lahf
jne
test
mov
and
add
call
jp
fcompl
shrb
xor
and
mov
adc
inc
push
out
adc
pop
insb
dec
pop
pop
lea
push
lea
iret
push
xchg
and
xor
out
push
inc
add
ret
aam
stos
fstl
into
sbb
sub
int3
pop
sub
dec
sub
cld
inc
nop
stos
sub
mov
push
std
push
jnp
out
sub
idivl
adc
std
dec
adc
mov
mov
jecxz
mov
mov
adc
jbe
lock
xchg
xor
jmp
xchg
lods
idiv
push
movb
ja
pop
test
inc
fs
shr
sbb
popa
fcoms
push
jbe
push
xor
inc
sub
js
lcall
repnz
or
sahf
xchg
xor
test
insb
sbb
scas
add
fmuls
or
lahf
fs
outsb
test
rcl
mov
dec
add
adc
push
stos
call
lock
fcompl
sub
in
add
movsb
inc
xchg
inc
pusha
add
out
mov
into
aam
mull
bswap
scas
xchg
xchg
jmp
pop
add
jns
lret
jbe
ds
jmp
inc
in
mov
jl
jmp
sbb
push
cld
imul
es
imul
xor
daa
es
xchg
mov
adc
jb
pop
cmp
int
xorl
jmp
iret
mov
and
ret
aam
iret
push
xchg
sbb
pop
xchg
inc
mov
js
cmp
dec
and
dec
and
movsl
adc
mov
js
aam
insl
xor
mov
xchg
out
cli
ret
cs
jmp
mov
mov
lods
jo
cmpsl
sub
test
stos
xchg
in
cmpsb
aam
pop
push
and
jb
in
and
les
pusha
lea
aaa
into
movsb
fdivr
jmp
mov
fs
pop
mov
pop
xchg
rolb
and
mov
cmp
xchg
push
or
inc
lds
iret
data16
add
jmp
divb
mov
int3
dec
or
imul
push
adc
ljmp
ret
in
testl
stos
mov
inc
loopne
leave
jmp
int3
pop
xchg
mov
push
xchg
lahf
push
cmp
iret
cmpsl
add
fistpl
outsl
mov
mov
mov
mov
ret
sbb
add
fidivrs
in
pop
push
aaa
scas
fcoms
push
add
popf
test
inc
aas
cmp
gs
ret
rcrl
aam
sti
or
adc
popa
test
push
rcrb
loopne
ja
pop
dec
jb
addr16
testb
and
movsb
pop
push
lea
adc
cmp
leave
mov
test
bound
jnp
mov
inc
arpl
call
imul
mov
xlat
adc
push
insb
in
mul
mov
cmpsb
int3
and
mov
mov
cld
negl
push
repnz
mov
imul
push
and
repnz
out
ss
jmp
nop
cmp
sbb
xchg
imul
push
or
xchg
mov
jp
jg
adc
mov
cltd
jecxz
addr16
push
pop
cmp
mov
jge
sub
add
xchg
stos
lret
lods
fadds
mov
dec
dec
daa
fldl
out
cmp
jge
add
rcr
pop
ret
roll
jmp
jg
test
repnz
ror
cmp
test
xchg
lret
or
adc
sbb
mov
pop
das
cmp
mov
jle
jo
int3
icebp
add
cltd
and
or
pop
or
xor
testl
cmp
test
movsb
push
jbe
fidivl
pop
in
xchg
pop
xor
inc
das
out
xchg
or
push
mov
test
xchg
sahf
sbb
cmp
das
dec
imul
mov
lret
push
adc
dec
cmp
pop
or
int3
jne
mov
push
stos
push
pop
das
jl
imulb
pop
repnz
mov
lahf
stos
stc
lcall
sbb
shr
cmp
out
xor
push
ljmp
xchg
push
outsb
add
js
arpl
arpl
sti
and
loope
sahf
stos
jae
or
xchg
ds
aas
jo
adc
dec
out
adc
jbe
cmp
mov
pop
push
sbb
jmp
mov
lods
adcl
xchg
jg
clc
dec
out
pop
add
jb
jle
mov
out
and
mov
xchg
push
pop
mov
cmp
lods
or
stc
pop
mov
aad
les
push
mov
and
icebp
sub
jg
pusha
dec
shll
push
lods
ja
add
imul
lret
or
sbb
enter
jae
aas
jp
mov
add
xor
in
xchg
ljmp
push
packssdw
imul
shlb
jno
in
lret
pop
push
pop
mov
xchg
stc
push
imul
sbbb
jmp
int
das
mov
xorl
loopne
roll
lret
stos
shll
pop
mov
pushf
jo
pop
mov
push
scas
adc
sbb
rolb
jbe
push
loope
adc
jmp
sbb
cwtl
jge
arpl
or
mov
push
pop
movsl
fdivl
or
mov
mov
jo
mov
js
ds
adc
stos
das
mov
fistpl
stos
sub
pop
je
xor
sub
and
notb
daa
test
inc
cmc
mov
sub
movsl
ljmp
cmp
movsb
pop
jae
pop
xlat
add
sub
mov
les
push
nop
addb
in
dec
sbb
push
pop
shrl
insl
sbb
jecxz
hlt
ret
pop
push
hlt
aam
inc
xorl
adc
cmp
mov
fmul
shrl
loopne
sahf
shll
icebp
jl
sbb
inc
mov
lret
or
adc
add
and
add
lret
adc
pop
xor
hlt
fincstp
das
xchg
push
push
das
jecxz
or
aaa
push
pop
and
roll
jbe
push
adc
pop
adc
push
or
mov
push
pop
or
int
leave
repz
add
int3
pop
in
push
das
fcomip
dec
dec
ret
jnp
cli
sub
inc
fidivs
test
pop
mov
shr
dec
ja
pop
sbb
pop
in
lds
or
int3
cmp
pusha
dec
pushf
jmp
outsl
out
jecxz
or
xchg
mov
push
nop
push
mov
enter
push
mov
arpl
cwtl
mov
loop
pop
cld
pop
add
add
aaa
in
stos
psubusw
adc
xchg
mov
lds
pop
fists
push
sbb
cmp
push
into
ljmp
sub
cmp
push
mov
pop
stos
fisubrs
sarb
xor
in
stos
xlat
cmp
add
aas
or
xor
sub
jmp
sbb
mov
test
nop
sti
test
or
mov
loope
sbb
stc
outsl
jmp
adc
pop
sbb
dec
inc
xor
les
xor
mov
jne
xor
sbb
imul
xlat
data16
sub
and
inc
aaa
js
push
add
dec
imul
jbe
dec
inc
or
or
shll
mov
xor
cmc
in
cmp
mov
lock
sti
incb
pop
imul
in
or
push
inc
fidivl
xchg
lret
es
jp
adc
sub
ss
pop
adc
outsb
cmc
int
insl
mov
inc
into
lods
fstp
test
cltd
mov
pop
mov
fs
mov
sbb
dec
mov
nop
ret
dec
jecxz
lret
jo
adc
xor
mov
push
imul
cltd
clc
or
not
cmp
xor
dec
in
cmp
xchg
push
stos
push
inc
andl
outsb
lcall
in
pop
dec
adc
cli
xor
or
test
or
pop
xchg
mov
jge
push
jb,pt
sbb
hlt
adc
xchg
xchg
and
fnstenv
push
sti
mov
xchg
mov
dec
popf
fdivr
cmpxchg
and
loopne
xor
mov
int3
arpl
aam
jecxz
movsb
imul
mov
cmpsb
inc
pop
jo
rol
mov
lret
jbe
das
loop
inc
test
movsl
xchg
sub
push
push
ret
mov
sub
push
scas
inc
repz
mov
add
mov
mov
cli
mov
xor
mov
mov
shlb
aas
jbe
pop
push
repnz
jno
cmp
xchg
inc
inc
sbb
jo
sti
xor
lret
mov
movsl
nop
mov
mov
js
stos
adc
ret
mov
aas
enter
mov
add
lahf
dec
lods
and
xchg
lock
rclb
jb
pop
in
ds
out
pop
fisubrs
ja
mov
pusha
sti
inc
gs
pop
call
int3
lcall
pop
lahf
aam
dec
cld
scas
pop
idiv
xchg
push
sub
cli
jp
scas
out
xchg
adcl
pushf
gs
cld
ds
ds
dec
je
lret
inc
aas
fdivrs
mov
push
out
loopne
cmp
aam
cli
int
cmpsb
or
lods
mov
dec
add
push
fsubl
icebp
int3
cli
insb
adc
fimull
int
cmpsb
dec
outsl
repz
push
pop
mov
dec
xor
xchg
iret
cmp
in
sub
lcall
repnz
mov
lds
adc
aad
dec
xor
dec
leave
stc
mov
sub
or
in
dec
add
lock
cmp
mov
xchg
aas
pushf
clc
cmp
repz
lock
inc
pushf
mov
aad
jnp
mov
shlb
std
and
mov
add
in
ret
xor
jb
push
lea
adc
cld
xor
test
out
je
inc
sbb
mov
lods
sbb
cmp
sbb
in
and
mov
and
ja
test
xor
fsubrs
mov
iret
out
insb
test
repz
fsubp
and
or
dec
inc
adc
lods
mov
icebp
loopne
stc
xchg
adc
movsl
pop
dec
movsl
inc
mov
xor
cmp
mov
jb
push
cmp
mov
scas
sub
je
jne
insl
push
orb
jecxz
adc
subb
icebp
xchg
mov
std
sub
stos
fdivrs
mov
jo
into
sub
je
idivb
push
add
lock
inc
push
lods
cmp
jecxz
rorl
xor
and
jbe
into
bound
test
mov
loope
out
adc
mov
arpl
imul
rcr
jb
pusha
cmp
int
xchg
lods
mov
inc
push
jp
push
mov
imul
sbb
cmp
cwtl
mov
addr16
insb
sub
fdivl
and
or
or
pmuludq
das
pop
pop
movsb
sbb
loope
pop
xor
mov
nop
call
rclb
fidivrs
into
dec
stos
or
mov
and
out
lret
test
fdivrs
adc
leave
push
sar
cmp
es
cmp
ds
jg
les
add
dec
jno
mov
mov
lock
mov
sbb
adc
pushf
loope
mov
mov
pop
pop
lods
movsl
sbb
mov
cmp
mov
fbstp
fstps
sbb
jl
mov
call
mov
push
jg
add
adc
pop
pop
scas
sub
notl
loope
imul
mov
cwtl
aad
rclb
push
jmp
adc
lods
pop
andb
aas
fwait
lods
cmp
dec
jns
dec
xor
test
loop
test
movsb
push
ja
shrl
mov
std
jne
xor
mov
ja
pop
mov
das
jle
ret
out
outsb
push
movsl
push
adc
sub
iret
cli
and
sub
daa
pop
mov
in
pusha
outsl
and
sub
or
popf
pop
sahf
jge
jmp
jne
sub
ja
mov
andb
aam
jno
push
jne
push
mov
mov
pop
leave
notb
lret
dec
in
pop
push
movsl
nop
cmp
jb
inc
or
xchg
add
gs
je
test
scas
in
push
mov
sub
add
stos
or
dec
mov
pop
xor
das
xchg
insl
push
xchg
lret
mov
push
inc
and
into
cmp
es
and
push
shl
test
cmpsb
jp
lcall
and
mov
sbb
cs
ds
rcrl
out
nop
dec
aam
repz
inc
insl
cmp
push
mov
ret
scas
call
mov
xor
out
dec
imul
xchg
mov
lcall
bound
inc
push
fnstcw
push
pop
frstor
xchg
shlb
mov
arpl
inc
fimull
lods
in
lcall
fidivrs
cmp
adc
or
fidivl
xlat
sbb
pop
dec
mov
jecxz
addr16
jns
adc
repnz
scas
daa
mov
push
lahf
adc
loop
outsb
cmp
repz
mov
push
ret
imulb
insb
or
push
fidivs
cmp
xor
imul
sbb
imul
rcr
call
xchg
data16
push
das
mov
lock
mov
loope
add
mov
movsb
pop
add
xor
into
ret
lea
fwait
stc
mov
testl
mov
in
cmp
or
mov
mov
stos
leave
push
sub
xchg
add
shr
sarl
arpl
cmp
fisttpl
imul
idivl
jl
lods
adc
sbb
jnp
mov
jno
push
adc
mov
pop
push
pusha
out
ret
loopne
icebp
jmp
dec
inc
push
lret
or
mov
inc
and
sub
mov
xchg
or
movsb
mov
gs
xchg
xchg
jbe
dec
lret
repz
jo
mov
mov
rcrl
fcoml
xor
in
push
or
mov
movsbl
mov
xchg
pusha
emms
cmp
pop
mov
call
sbb
jo
dec
push
adc
xchg
jmp
cs
nop
jle
fsubrs
mov
push
cmp
out
loop
hlt
leave
mov
loopne
pop
dec
and
jb
xor
loope
jecxz
adc
sbb
rclb
add
xor
sbb
sahf
in
pop
imul
je
lcall
mov
dec
lods
clc
ficoms
push
je
lea
and
fwait
sbb
push
psrlq
jle
daa
in
sub
lcall
lock
pop
sbbl
add
dec
xor
into
gs
mov
and
sub
xchg
cmp
scas
cwtl
mov
decl
mov
mov
sbb
jb
jmp
lds
scas
fdivrs
jae
dec
aaa
jmp
or
test
jmp
mov
pop
int3
inc
aad
stc
adc
mov
xor
shrb
push
or
insl
aam
xchg
mov
or
mov
imul
inc
push
scas
and
mov
sub
testb
fisttps
cs
mov
in
cltd
imul
sbb
or
sbb
inc
mov
mov
xchg
lds
pusha
xchg
sub
adc
sub
es
mov
sub
cmp
dec
dec
div
sbb
cmp
jb
pushf
pop
repnz
addr16
icebp
sub
push
out
shl
in
popf
fcoml
and
lret
push
adc
mov
iret
or
adc
dec
xor
pop
xchg
xchg
xchg
or
jl
nop
fucomi
adc
adc
ret
rclb
fwait
pop
repz
push
leave
repz
push
push
adc
aas
sub
or
movsb
ds
mov
mov
fimull
push
fsts
push
inc
cmp
sub
and
xor
dec
test
push
pop
inc
jbe
test
and
int
or
dec
sub
aas
cli
pop
stc
mov
xchg
sbb
inc
je
jl
or
js
xor
nop
mov
mov
leave
adc
fidivs
sbb
sub
addr16
popa
repz
pextrw
mov
jae
push
mov
sahf
or
outsl
fistps
repz
sti
sub
loopne
or
clc
pop
popf
and
movsl
mov
outsl
jecxz
ficoms
jne
mov
xchg
inc
les
mov
inc
roll
jg
out
in
pop
std
and
adc
incb
pop
flds
sub
inc
mov
fwait
stos
cmpsb
aas
test
inc
cmpsb
inc
loop
push
adc
pop
mov
add
in
inc
xchg
decb
shlb
mov
push
fdivl
popf
inc
or
nop
jb
jle
dec
push
cmp
ja
cmp
scas
ljmp
clc
mov
arpl
jmp
test
pop
mov
jo
inc
adc
dec
fcompl
mov
scas
jns
mov
jge
add
repnz
xor
js
xor
je
add
scas
xor
mov
js
pusha
mov
jmp
inc
push
xor
add
arpl
push
mov
dec
jae
pop
fistpl
or
mov
xor
stos
jns
movsb
ffreep
cwtl
dec
sub
test
mov
mov
push
push
pop
push
sub
xlat
into
xchg
stc
sti
jg
pop
xchg
xor
pusha
jmp
stos
loop
mov
lock
inc
sub
sbb
shr
fld
jbe
jmp
cmp
xchg
flds
rcll
cmpsb
cld
xor
dec
mov
pop
add
add
mov
cmp
pop
sarb
sbb
aam
daa
nop
cli
jecxz
filds
inc
loop
cltd
jp
ja
adc
je
push
mov
mov
lret
ret
sub
movsb
imul
movsb
mov
push
sub
fidivrs
cld
mov
mov
jo
mov
jb
cli
pop
iret
xor
dec
pop
adc
cmpsl
sbb
test
mov
xchg
sub
pop
mov
pop
mov
push
cmpb
dec
fisubs
lea
ss
sbb
mov
cltd
push
popf
pop
inc
jge
pop
ficomps
shlb
jmp
xorl
pusha
add
sub
mov
ja
aam
ficomps
lahf
inc
jmp
mov
mov
cmp
jl
sub
add
scas
jle
rcrb
rcll
sbb
mov
push
adc
xchg
pusha
or
xor
and
push
daa
lahf
push
mov
fldl
push
fildll
sahf
dec
lock
inc
icebp
outsl
push
out
mov
in
lea
dec
mov
fnstenv
jo
fisttps
cld
cmpsl
cmp
and
sub
test
test
arpl
sub
lcall
fsubrp
mov
dec
jns
jp
dec
fstp
xchg
lcall
repnz
mov
adc
out
stos
xor
jmp
in
loope
call
inc
cmc
insb
dec
imul
int3
xor
sbb
loopne
dec
test
aam
shrl
in
fcomi
sbbl
das
out
in
mov
xor
sub
sti
sub
xor
pusha
ficompl
clc
in
jmp
or
stos
add
xor
push
mov
sub
cmp
cld
push
push
pop
mov
repz
repnz
movsb
outsl
mov
hlt
xchg
pop
rorb
jb
mov
outsw
fs
repz
mov
cmpl
dec
cmpb
hlt
imul
push
jno
pusha
jp
mov
xor
sarb
lea
or
xchg
jl
add
sub
sahf
push
cmpl
sub
sub
mov
pusha
divb
enter
lahf
shrb
jbe
movsb
add
xchg
and
and
jge
lds
cmc
mov
rcll
cltd
or
cwtl
sbb
cld
jecxz
mov
xchg
lods
cmp
ret
pop
or
movsl
call
sbb
lret
or
lods
or
pop
cmpsb
mov
sub
xor
cwtl
test
sub
or
push
dec
xchg
xor
and
adc
and
pop
fsubrs
xchg
ss
push
mov
sub
push
push
mov
mov
xor
scas
mov
orl
xchg
dec
mov
rcrb
mov
jp
add
pop
mov
movsl
fcompl
push
mov
xchg
xchg
jo
inc
in
jge
sbb
cmp
lahf
mov
jge
add
mov
sbb
add
sarb
jnp
ljmp
stos
mov
dec
xchg
cmp
mov
xchg
movsb
cmpsb
push
das
jecxz
mov
sub
cmp
gs
xor
xlat
out
das
incb
jp
cmp
loope
or
lods
es
test
xchg
pop
test
sti
ja
dec
mov
jg
mov
enter
pop
lret
add
cmp
jne
inc
leave
insl
bound
popa
sub
lds
jno
out
fsts
and
test
mov
xchg
jns
push
pop
or
pop
adcl
xor
cld
push
sarl
std
nop
scas
addr16
aaa
and
mov
push
movsb
sti
testl
xor
fistps
cmpsl
shrb
adc
insl
aaa
jmp
loope
mov
push
fnsave
in
inc
aam
popf
xor
insb
insb
adc
jnp
insb
mov
movsb
fidivs
out
cmp
sbb
cmpsl
mov
push
cld
push
jl
fwait
xor
enter
cwtl
out
dec
lods
xor
jo
jp
dec
add
ret
jge
mov
pop
popa
or
mov
push
jb
add
jp
mov
mov
cld
jecxz
xchg
lcall
das
stc
or
fldenv
or
pop
es
lock
or
add
xchg
clc
jae
xchg
push
fmull
cmpsl
cld
sbb
dec
inc
jo
mov
movsl
push
mov
cmp
push
push
sbb
or
mov
jle
frndint
fidivrs
adc
into
out
movsb
push
jmp
sahf
push
movsb
mov
adc
sbb
mov
mov
btc
mov
jnp
in
fdivs
pushf
loopne
bound
fisubs
lea
or
aaa
dec
in
imul
in
test
sbb
ja
pop
and
in
jle
addl
jno
out
cmp
push
xor
stc
pop
jnp
testb
pop
sub
mov
iret
out
repnz
rcrb
movsb
stc
shll
xlat
inc
xchg
repnz
imul
les
jns
cli
aas
lds
cmc
mov
mov
sbb
dec
loopne
testb
mov
mov
imul
mov
in
mov
fbstp
ljmp
into
and
jbe
cmp
inc
stos
adc
dec
mov
mov
ficompl
jno
pushf
push
std
cltd
push
outsl
movsb
sub
dec
dec
repz
add
jg
and
test
push
xchg
bound
aam
mov
mov
lock
clc
lds
jmp
xchg
popl
cmp
js
fisubrs
pop
jle
adc
cmp
and
cltd
mov
repnz
rcll
cltd
add
xchg
xchg
imul
inc
sbb
call
adc
adc
pop
push
push
jae
mov
aad
xchg
sti
inc
jbe
pop
mov
push
cld
pushf
daa
aaa
mov
pop
outsb
popa
cwtl
repnz
mov
pop
and
cmp
jb
dec
lods
jbe
add
jecxz
test
mov
lock
lods
popa
je
xchg
xor
mov
iret
pop
pop
mov
dec
mov
sbb
in
addr16
xchg
push
pusha
sbb
ds
jg
ret
aad
int
out
xchg
or
test
cmpsb
in
rolb
mov
pop
test
cmc
pop
out
outsl
dec
aaa
stc
shll
call
dec
pop
lret
insl
push
add
test
pop
inc
sahf
mov
mov
adc
imul
fcoms
sub
xchg
cmp
pop
out
lods
jge
sahf
or
mov
mov
in
add
out
into
push
push
inc
dec
push
sub
nop
mov
loope
add
fcomps
addr16
testb
jp
and
or
testl
pop
int3
jcxz
cmpsb
into
jg
cmpsb
mov
xchg
and
movsb
enter
dec
or
xor
inc
jp
adc
into
xchg
lds
es
xor
dec
pop
lock
test
test
push
adc
sbb
xor
pop
pushf
les
sub
test
repz
cmp
xchg
aas
dec
mov
test
lret
call
sub
test
xchg
cmp
inc
add
cmp
stc
rcrl
mov
cmp
dec
pop
cmp
lds
das
sbb
push
sbb
aad
gs
pusha
call
scas
mov
insl
mov
inc
mov
xor
mov
pop
inc
mov
popf
mov
xchg
inc
rcr
mov
jo
jge
add
mov
ret
das
add
std
std
pushl
out
adc
lods
lock
repnz
mov
enter
call
loope
test
ret
mov
call
bound
xor
pop
test
cmc
mov
adc
imul
and
sub
push
ficompl
push
jo
add
dec
sub
fwait
inc
inc
adc
outsb
jne
xlat
pop
lea
sub
sbb
jno
xchg
push
dec
and
sbb
fiaddl
push
ret
loopne
insl
nop
mov
movsl
rclb
fldt
jne
rol
push
pop
push
pop
cmp
test
inc
cmp
iret
imul
lahf
dec
mov
mov
cli
mov
pop
mov
inc
sub
cmpsl
push
mov
inc
movsl
push
data16
jl
iret
pop
jns
pop
and
addr16
not
adc
pop
dec
mov
mov
lret
mov
inc
and
out
outsl
into
jb
stc
and
mov
fmulp
cmp
sbb
pop
fisttps
xor
dec
aam
or
aad
jle
int
lock
pop
enter
xor
aas
push
notb
loope
jecxz
dec
adc
in
inc
ds
fwait
mov
push
cwtl
xchg
ljmp
adc
addr16
sbb
cmp
int3
cmp
pop
jg
jnp
lret
mov
inc
stos
je
imul
push
sub
pop
and
mov
and
mov
test
bound
scas
and
clc
mov
mov
sub
or
push
add
test
inc
cmpl
cli
xor
push
cmp
mov
shl
mov
ret
or
ret
scas
lahf
in
inc
jo
cmp
xlat
inc
std
shlb
loope
mov
jge
push
icebp
ljmp
scas
and
dec
add
aaa
fnstcw
mov
mov
divb
xchg
repnz
and
loopne
mov
or
stc
shll
inc
inc
add
cmp
out
mov
sub
push
and
cmp
cmp
and
fs
andb
gs
jno
xor
addr16
aaa
adc
iret
mov
movsb
inc
fwait
adc
mov
xchg
ds
mov
mov
pop
mov
stos
into
sar
add
or
popa
sbb
adcb
mov
xchg
es
xchg
scas
cmpsb
out
test
cltd
shrl
je
sbb
sbb
jbe
out
mov
in
dec
repz
mov
ljmp
daa
mov
pop
adc
test
incl
ja
jno
test
adc
cmp
jge
rcll
jb
sti
pop
mov
test
adc
pop
push
fisttpl
es
adc
jnp
cmp
rorl
dec
fs
shll
icebp
in
push
data16
mov
ja
jns
in
inc
or
orl
mov
das
dec
fsubp
pop
ret
repz
test
pop
mov
in
leave
mov
in
inc
mov
sti
pop
data16
add
pop
test
imul
test
test
mov
jo
inc
cmp
and
adc
pop
inc
in
inc
mov
inc
inc
pop
lret
mov
popf
xlat
add
push
fwait
popa
mov
js
mov
push
shlb
nop
add
cmp
movsb
and
inc
mov
scas
pop
mov
jne
xchg
aas
or
int
mov
pop
icebp
push
sub
pop
and
and
std
mov
loope
insl
xor
mov
aad
xchg
cli
push
shll
daa
bound
idivb
das
pop
add
fists
iret
sub
lea
pop
push
shl
mov
movsb
adc
outsb
adc
and
xchg
outsl
cmpsl
adc
stc
je
imul
and
nop
push
in
xchg
jecxz
shr
mov
insl
ljmp
lods
addr16
sbb
jge
dec
sbb
mov
mov
xchg
lret
sub
pop
fwait
mov
or
pop
stc
in
cmp
xlat
pop
rolb
pushf
call
ret
dec
dec
repz
inc
clc
jge
xchg
cs
jmp
out
jb
cld
loope
xorb
stos
shll
xor
push
push
pushf
push
push
out
jg
cld
xchg
push
mov
icebp
push
jmp
loop
xor
add
rorl
mov
pushf
test
ret
xor
dec
xor
xchg
inc
and
popf
push
testb
fld1
movsb
adc
push
pop
and
test
clc
sarb
adc
movl
cs
mov
xor
lds
in
int3
xchg
mov
mov
cmp
clc
sbb
and
jmp
and
push
addl
cmp
xchg
cmp
xor
sub
pop
cmp
xor
ja
js
sub
es
sub
inc
xor
out
jns
adc
rcrb
inc
hlt
lret
xor
enter
inc
adc
pop
mov
dec
or
popa
pop
lret
addb
nop
cltd
jns
add
lcall
or
xchg
in
and
dec
push
sbb
xchg
ficompl
mov
out
ss
xor
sbb
pop
jbe
repz
dec
sbb
cs
cld
sahf
mov
movsb
inc
jl
enter
mov
mov
movsl
data16
push
lahf
lock
xchg
cltd
xchg
jbe
lods
pop
jns
js
mov
pop
mov
testb
jbe
cmp
xor
outsl
cmc
sub
adc
repz
fstps
cwtl
rol
add
push
sbb
lods
insb
sbb
repnz
or
outsl
imul
cltd
pop
test
or
es
test
les
ja
and
xor
push
or
insl
push
mov
cld
adc
mov
adc
lods
jecxz
or
addr16
mov
into
jge
or
cmp
push
dec
mov
cmp
mov
aas
test
sub
cmp
xchg
cli
pop
es
mov
ljmp
sbb
or
int
mov
stos
cmpl
cmp
shrb
mov
test
xchg
or
gs
in
mov
xor
ljmp
ljmp
adc
in
adc
sarb
cmpl
loopne
jnp
sahf
mov
repz
add
scas
in
sbb
add
adc
test
jne
adc
orb
scas
out
cmp
imulb
nop
add
push
or
mov
jle
fwait
cmp
int3
pop
pop
cmp
inc
push
fistps
inc
sub
aam
dec
jbe
dec
imul
push
mov
xchg
sbb
icebp
call
pop
leave
in
pop
pop
xchg
dec
sub
jg
add
mov
push
outsb
dec
pop
jecxz
mov
pop
jne
movb
mov
dec
xor
jg
pop
adc
lods
pop
insl
cld
sarb
adc
push
imul
cmpb
sahf
pop
xchg
fimuls
fbstp
ret
notl
pop
xchg
popf
adc
enter
sti
std
xor
fiaddl
ss
rolb
and
mov
popf
xor
mov
in
pop
jp
jne
call
add
jnp
inc
dec
pushf
int
hlt
icebp
dec
lods
and
loopne
xor
push
jae
adc
inc
lret
or
int
movsl
pop
pusha
scas
arpl
push
jne
orb
mov
movsl
flds
movsl
sbb
push
lods
mov
xchg
xor
jl
daa
addr16
lahf
cmc
jecxz
cld
hlt
outsl
test
fisttpl
sti
push
cmp
dec
mov
in
ljmp
sarl
push
out
sti
adc
jmp
add
movsb
lock
adc
sbb
cmp
jmp
roll
dec
jle
aas
cmp
loop
out
push
add
std
sub
enter
popa
adc
pop
add
xor
sti
cmp
lods
sbb
mov
repnz
ret
repnz
in
daa
push
test
mov
daa
xchg
loopne
xchg
mov
pop
loop
inc
push
pop
push
shll
and
xchg
out
out
das
out
icebp
lcall
insl
out
popf
cld
cld
and
dec
imul
jmp
mov
and
dec
pop
les
arpl
cmp
or
jno
or
xchg
pop
das
add
ret
ds
mov
ret
mov
cmp
xor
inc
das
movsl
mov
mov
icebp
push
pop
movsl
dec
cld
mov
mov
push
daa
lcall
imul
sub
mov
pop
sub
scas
out
push
divb
je
aad
das
dec
cmpsb
or
inc
mov
rorb
cmp
sbb
inc
or
scas
ret
cld
sti
push
addr16
mov
or
or
js
pusha
adc
jae
sbb
sub
dec
push
std
test
leave
ss
mov
aaa
subb
xchg
push
popf
pop
inc
dec
out
cmp
mov
shll
lock
xchg
ja
ret
fcmove
loopne
stc
cmp
out
push
jno
aas
sbb
out
iret
pop
fidivrl
addr16
jnp
cmp
sub
push
mov
int
sbb
imul
add
das
dec
mov
adc
sahf
xchg
movsl
and
in
in
pop
pop
pop
adc
mov
push
lcall
je
jns
fists
js
push
sub
jmp
popf
jo
ret
sbb
fstpt
jecxz,pt
jge
cs
dec
aaa
add
or
pop
xchg
xchg
repz
inc
push
iret
sahf
fsubr
mov
xchg
or
mov
loope
adc
push
xor
leave
push
mov
cltd
dec
pop
movsb
dec
inc
pop
xchg
repz
jg
lock
adc
push
sbb
loop
in
jmp
jo
stos
mov
imul
insl
sarb
jno
pop
fldcw
adc
cmp
outsl
scas
sub
mov
out
sub
xchg
push
mov
imul
inc
add
out
mov
xchg
shl
inc
sub
icebp
sbb
adc
and
out
jae
and
push
subb
xor
jle
cli
jl
pop
leave
push
and
pusha
or
repz
sahf
adc
sbb
cmp
nop
imul
cmpsb
nop
pop
aad
leave
push
ret
lods
sub
sub
mov
cmp
dec
inc
pushl
mov
stc
cs
pushf
hlt
sub
add
cmp
aad
imul
dec
inc
or
cli
aam
push
inc
test
fnsave
jp
cmp
mov
and
jns
imul
fsub
mov
jle
divl
in
aam
jno
lods
xchg
push
add
jge
mov
jle
out
fucomi
ds
pop
lock
xchg
mov
in
dec
mov
rolb
int
iret
sbb
sbb
aam
pop
xchg
or
fcompl
into
idivb
in
stos
sbb
cli
lods
repnz
ja
cmp
fildll
call
aad
cli
jno
mov
imul
and
pusha
gs
rorl
int
stc
loop
in
push
adc
or
jecxz
xchg
inc
or
mov
or
or
inc
and
rcll
in
xchg
add
and
dec
stos
in
ret
sbb
lock
std
sbb
cmp
cmpsb
mov
fistpll
adc
sbb
push
xor
xor
cld
clc
cmp
jbe
push
pushf
push
into
sahf
shufps
dec
inc
push
xchg
jne
add
out
int
xlat
dec
sub
fists
andl
add
push
fdivs
jge
xchg
inc
inc
inc
jge
push
int
dec
xlat
lahf
ja
inc
adc
out
inc
in
lds
stc
xchg
mov
sbb
arpl
cmpsl
ret
dec
nop
mov
addr16
push
mov
inc
aaa
cmp
dec
mov
pop
ss
add
xchg
lods
sti
shrb
fs
inc
or
orl
cmp
mov
ret
push
cmp
adc
repz
daa
jecxz
jnp
fs
cli
mov
rcrb
jbe
add
pop
in
fstpt
and
xchg
int3
push
lds
xchg
mov
lods
test
dec
xor
jo
jb
inc
lds
push
or
pop
mov
or
mov
fs
out
repz
outsb
add
inc
jbe
mov
ljmp
dec
xchg
shll
xchg
inc
jmp
lods
mov
rorl
mov
push
cmp
pop
mov
jae
sub
call
leave
jbe
fistpll
ja
jg
push
and
inc
outsb
sar
in
loope
push
mov
jbe
jns
data16
roll
lods
in
test
mov
stos
adc
popl
pop
enter
mov
push
lahf
push
cmc
lock
mov
test
adc
and
push
sbb
cmpsb
mov
xchg
xchg
outsb
movzwl
scas
sahf
mov
int3
push
stos
adcb
add
ret
sahf
ret
pop
ret
jae
add
mov
jno
sub
pop
in
ret
stos
inc
sbb
inc
lock
mov
pushf
fsubs
shll
cwtl
fists
shll
test
push
mov
dec
je
fs
in
loope
loop
in
dec
daa
dec
mov
cmp
jno
ds
or
jne
mov
mov
les
jl
sbb
sub
rorl
dec
mov
pushf
add
mov
adc
sub
xchg
ret
jmp
add
mov
lods
mov
mov
shll
and
div
ss
movsl
in
pusha
ss
and
xlat
das
arpl
ljmp
insl
sbb
in
jcxz
loope
fsubs
cmp
cmp
mov
add
cmp
movsl
mov
sbb
sti
in
lahf
out
cmp
jmp
movsb
loope
rorb
mov
lahf
sub
xchg
cwtl
xchg
add
jbe
mov
push
pop
inc
pop
out
mov
mov
mov
into
aas
lret
jl
out
add
daa
cmpsl
push
clc
jnp
xchg
int
mov
hlt
jg
mov
stos
jle
loop
adc
jecxz
outsl
ja
icebp
icebp
mov
sbb
addr16
int
sub
aad
in
push
or
jns
cmp
gs
sub
or
xor
rcll
dec
ret
push
repnz
xchg
and
jmp
pop
neg
movsb
mov
dec
pop
lahf
inc
adc
fwait
jae
loopne
jg,pt
push
lret
push
jae
xor
sub
mov
sbb
stc
ret
push
test
push
ficoms
jl
mov
adc
adc
ljmp
sbb
push
xchg
xchg
stos
xchg
or
arpl
nop
mov
adc
jl
cmp
movsl
xchg
add
arpl
sbb
mov
inc
sbb
mulb
cmp
jmp
push
lret
lock
push
lods
sbb
cmpl
push
and
pop
cmp
addl
loope
popa
push
cwtl
mov
lcall
xchg
cli
dec
jecxz
sbb
out
ja
dec
repnz
scas
sub
out
pop
pop
fstps
scas
movsb
add
jb
xor
mov
push
push
in
pop
and
dec
pop
sbb
lds
cmp
pop
xchg
dec
dec
imul
in
in
inc
dec
clc
inc
pop
leave
pop
xor
fwait
jns
aad
jmp
lret
popa
out
nop
cmc
ja
arpl
add
je
mov
xor
sbb
pop
cmp
jle
stos
and
mov
xor
dec
mov
pop
mov
inc
pop
adc
inc
and
sbb
push
cmc
dec
punpckldq
stos
add
pop
jo
jmp
les
or
adc
es
push
and
cmc
scas
daa
mov
in
out
popf
sbb
sub
lods
jl
cmpsb
pop
inc
pop
adc
or
cwtl
ret
jb
popa
movsb
loop
pushf
andl
mov
popf
mov
test
mov
je
sbb
xchg
sbb
sarl
xchg
lret
mov
pop
imul
shrb
push
ss
stos
iret
pop
cli
lods
push
mov
sahf
push
out
daa
add
int
pop
mov
push
nop
push
push
xchg
sub
add
cmp
cmpsl
lea
sub
push
test
js
cmp
xchg
std
enter
mov
xor
cs
mov
xor
outsl
push
cmp
dec
test
aad
mov
outsl
mov
adc
in
cmpsl
iret
sub
in
and
bound
ret
repz
push
aad
cltd
sbb
cmpsl
jns
arpl
mov
in
mov
scas
pop
out
pop
fwait
hlt
lock
xchg
adc
jmp
insb
std
sub
xchg
rclb
sub
test
ja
lahf
cmpsb
push
repnz
push
sbb
mov
inc
enter
scas
shll
fsubrs
nop
add
test
cmp
cmp
adc
fcomip
inc
pop
rcll
out
dec
mov
mov
stc
jo
out
adc
fldl
xchg
cmp
lcall
lahf
outsl
dec
decb
push
adc
mov
cmp
pop
push
mov
mov
jno
cmp
movsb
sub
sbbb
shlb
xchg
add
cmp
adc
int3
dec
dec
roll
ss
test
test
mov
inc
push
mov
xchg
mov
add
fwait
loop
xchg
pop
xchg
xchg
and
dec
xchg
psrad
xchg
sub
pop
and
add
push
jnp
or
and
mov
addr16
xor
push
fistpl
inc
dec
push
rcrb
arpl
repnz
jo
inc
and
insb
mov
xor
jo
adc
test
je
rcl
lret
loope
fwait
jae
out
aad
int
gs
int3
vandnps
jno
inc
mov
loope
scas
iret
lret
lret
cld
ds
cmpsl
arpl
push
test
ljmp
movmskps
shll
hlt
push
ss
or
mov
mov
shlb
imul
sbb
push
push
pop
int3
daa
enter
cmpsb
xlat
adc
hlt
mov
xchg
fcoml
fisubl
je
aas
popf
dec
dec
or
push
sti
push
mov
and
pop
sub
mov
sub
lds
fimuls
sarb
xchg
nop
stos
fistl
je
jb
mov
add
popa
cmc
test
add
cmpsl
dec
bound
mov
fwait
repz
mov
test
and
mov
cmp
push
loope
fildl
lret
sub
xchg
sub
test
and
dec
jl
lret
clc
dec
loope
imul
pop
shl
adc
call
adc
dec
add
arpl
ss
call
pop
repz
fidivrl
aad
mov
dec
hlt
orb
les
xorb
stos
js
pop
icebp
popf
mov
addr16
push
cs
clc
pop
cmp
or
lahf
inc
iret
insb
ret
sbb
js
lock
test
dec
ret
mov
cmp
mov
xchg
mov
jmp
and
jecxz
and
iret
in
add
sbb
push
fstl
adc
xor
dec
call
std
int
sub
adc
in
insb
outsb
imul
push
sub
sub
js
and
rolb
fdivl
adc
stos
sub
shrl
popf
xor
rcrb
add
clc
xor
lods
lods
pop
sub
push
imul
pop
bound
pop
add
fdivrl
xchg
dec
movsl
fidivs
and
scas
jecxz
or
cmp
arpl
cmp
add
int3
adc
decl
sub
stc
fsubrs
into
lahf
bnd
push
scas
ljmp
mov
mov
dec
into
xchg
imul
jae
cmp
sbb
data16
jmp
mov
in
sub
xchg
push
pop
xchg
into
lcall
xor
adc
in
cmp
fstpt
xor
xor
fdivp
aaa
pop
dec
pop
push
inc
sbb
push
flds
push
xor
lds
sbb
mov
pop
xlat
in
add
cmp
fimull
cs
sbb
sbb
mov
and
xlat
adc
les
cltd
and
sbb
cli
in
mov
cli
ds
inc
xlat
enter
test
inc
cmp
dec
lods
dec
lcall
mov
or
sbbl
and
push
cltd
dec
fs
jecxz
int
inc
sub
and
jg
das
mov
je
mov
mov
cmp
mov
fwait
jno
pop
lret
daa
addr16
sub
adc
arpl
mov
aam
ja
out
jno
adc
stos
cmp
sub
imull
pushaw
cmc
daa
mov
daa
test
fbld
cld
dec
fwait
bound
pop
pop
mov
and
sti
or
orl
fimuls
xchg
or
addr16
push
or
test
repz
jno
lret
cmp
cmp
push
mov
scas
addl
fistpl
lahf
fwait
addr16
mov
xor
inc
cli
xchg
gs
arpl
sarb
in
aas
xor
xor
push
in
mov
daa
sbb
dec
lret
cmp
push
int3
lahf
in
push
and
mov
ja
and
ss
cltd
xor
pusha
out
int3
add
clc
mov
sub
or
push
sub
in
popf
int
movsl
int3
cmp
mov
mov
adc
lods
dec
adc
data16
int3
in
push
shl
jns
dec
imul
pop
and
xchg
dec
mov
cmp
mov
xchg
ds
sub
sahf
jp
sbb
fiaddl
mov
fbstp
pop
lods
ljmp
les
repz
xchg
hlt
lret
mov
mov
test
mov
pop
pop
adc
mov
pop
xchg
pop
xchg
inc
fistpll
fbld
mov
jae
jae
loopne
ja
das
inc
movsl
adc
lret
sbb
insb
int3
mov
movsb
jmp
test
test
add
push
enter
shll
add
inc
cs
pusha
lret
adc
sub
aad
adc
lret
jle
test
mov
popa
dec
shl
cs
add
xchg
cmp
clc
cwtl
pop
stos
dec
in
adc
cmp
sti
loopne
jo
push
fidivs
jne
adc
test
call
add
sub
mov
pop
sub
push
ret
push
xchg
jl
adc
scas
mov
xor
mov
cld
mov
xor
or
lock
test
inc
ljmp
pop
ret
add
fnstenv
idiv
pop
pop
mov
out
add
push
sahf
pop
dec
pop
fadds
js
cmp
jp
pop
ret
jmp
and
dec
leave
xchg
in
mov
sbb
xchg
cmp
pop
inc
and
jne
xchg
mov
xchg
lods
movsb
pop
fisubrs
jae
fwait
pop
popf
jl
aaa
jae
fadds
inc
movsb
or
mov
mov
inc
or
push
push
fsubp
pop
or
jge
adc
les
sub
sbb
les
push
mov
dec
in
cmp
and
jmp
push
xchg
fstl
stc
lret
push
fmul
sub
adc
sub
fsub
mov
imul
lahf
or
mov
jb
stos
lods
test
idivl
or
das
dec
sbb
outsb
mov
jb
sbb
mov
insl
cmp
push
dec
fdivrs
or
push
pushf
aas
clc
push
test
push
cmp
hlt
inc
ljmp
xor
adcl
movsb
adc
imul
lcall
sbb
push
sbb
test
mov
push
popf
push
push
sahf
shrl
ja
pushf
or
pop
gs
jp
mov
subb
mov
mov
mov
mov
mov
aad
stos
and
adc
shl
fadds
xor
sbb
das
mov
fcomps
jns,pt
std
push
imull
sbb
enter
fdiv
inc
ss
cmpsl
xor
mov
pop
inc
std
mov
lds
stos
test
jg
mov
or
fwait
jno
xchg
adc
push
jbe
cwtl
shlb
out
popf
mov
and
fadd
mov
sub
fisubl
xchg
fnstcw
imulb
adc
sub
xchg
mov
mov
sbb
fcoml
xchg
jnp
and
mov
cmp
xor
xorl
pop
pop
xor
mov
aas
fisubs
xchg
jae
out
inc
jne
loopne
mov
inc
push
push
or
std
aam
into
repnz
daa
push
jnp
mov
fs
xchg
xor
scas
mov
cmovns
or
pop
cmpsl
rcll
inc
jecxz
call
sub
adc
stos
sar
lcall
pusha
shll
inc
loop
xlat
cs
xor
ds
hlt
dec
mov
sahf
mov
mov
adc
pop
jbe
xor
test
add
inc
in
mov
enter
lea
adc
stc
sbb
xor
inc
iret
cs
lods
push
xor
aaa
dec
lods
dec
clc
popf
loope
pop
lods
jnp
sub
jecxz
cmpsb
cltd
out
imul
jns
xchg
lret
add
or
rcll
les
jno
mov
jge
int
pop
xchg
clc
xor
rorb
mov
lret
inc
ret
push
cmp
or
cmp
jmp
jmp
fldenv
out
push
xor
adc
add
mov
cmp
push
mov
sub
or
inc
inc
test
adc
or
or
xchg
repz
les
das
sbb
dec
popw
outsl
add
or
push
sub
addr16
mov
push
and
sub
outsb
inc
das
scas
outsl
das
rclb
push
sbb
out
rorl
mov
pop
fcomp
test
mov
push
into
pop
movsb
jns
adc
mov
xor
pop
out
dec
lods
cld
dec
aad
xlat
sahf
cs
popf
mov
xor
lret
pop
js
inc
or
jnp
mov
mov
sbb
outsl
popf
sbb
and
dec
ljmp
or
outsl
xchg
imul
push
add
scas
and
sahf
mov
shll
test
add
push
scas
jg
leave
dec
daa
ljmp
add
movl
out
sbb
or
dec
pop
scas
pop
push
call
fiaddl
mov
faddl
xchg
xchg
loope
jne
adc
lock
arpl
int3
xor
and
mov
ret
add
js
mov
push
sub
mov
jnp
add
adcb
mov
inc
fstps
fwait
xor
and
mov
jo
adc
loopne
loopne
stos
popf
sbb
xorl
and
and
daa
ljmp
fucomi
inc
xor
mov
rclb
adc
lds
daa
and
imul
pop
in
mov
call
pusha
lods
sbb
xor
pop
xor
mov
subl
subl
adc
adc
stc
lock
and
pop
mov
jmp
addb
nop
add
cmpsb
xchg
pop
loope
dec
aam
stos
mov
or
cmp
mov
cld
enter
add
dec
rcll
cmpsl
adc
lods
pop
pop
jns
xchg
inc
popa
inc
pop
lret
adc
add
mov
xor
xor
fsts
mov
or
xchg
repz
lea
adc
inc
outsl
pushf
in
cmp
inc
sbbl
pop
mov
pushf
add
fsubrs
movsb
xchg
adc
fldenv
jp
in
std
test
loopne
fsubr
mov
insb
add
fstpl
lahf
mov
pop
loop
fmuls
mov
jp
mov
push
mov
push
mov
lar
jns
dec
test
dec
and
cmp
fimuls
cld
adc
clc
aam
nop
or
or
cmp
js
in
jp
inc
dec
inc
xchg
or
loope
sbb
imul
data16
test
popf
rolb
fdivs
and
pop
fsubr
stos
add
test
sub
add
fisttpll
stos
jmp
repz
mov
loop
fistl
dec
jnp
das
inc
in
push
jge
mov
mov
dec
add
inc
movsb
in
lahf
inc
cmpl
inc
mov
mov
lods
out
jmp
mov
sti
push
mov
and
shlb
xor
mov
push
gs
sti
test
inc
push
dec
fldt
push
int3
gs
addr16
mov
leave
add
adc
pop
ret
jns
ja
mov
inc
cmp
cli
mov
sub
add
stos
stc
cli
jnp
push
xor
cmp
push
sar
adc
lcall
fsubs
stos
fcomps
fcompl
or
push
push
mov
outsb
enter
xchg
ret
aad
pop
push
mov
add
out
adc
add
cmp
push
jmp
or
inc
jmp
sar
rcrl
pop
ss
ret
pop
fwait
popf
jns
stc
std
dec
push
pop
fs
scas
es
divl
les
insb
xchg
cmp
adc
dec
pushf
add
and
pop
je
jns
inc
aas
shl
adc
mov
cli
cld
subb
push
inc
push
jo
leave
sub
push
xchg
stc
and
jbe
push
bound
mov
aas
repz
cli
int
jo
fnstenv
pop
into
pop
insl
mov
xchg
adc
push
jp
stos
pop
test
push
cmp
and
cwtl
stos
xchg
int3
cmp
jne
add
lret
or
xor
fs
scas
xor
mov
adc
xchg
push
mov
add
mov
push
stos
lock
or
dec
fcomps
xlat
out
lods
dec
test
insl
in
repnz
stc
std
and
push
rolb
mov
lock
std
pop
adc
push
xor
cwtl
imul
testb
cmp
jle
pop
test
xchg
imul
mov
xor
loop
fdivs
and
or
mov
dec
adc
sub
sub
loop
inc
rcll
leave
sbb
xor
mov
dec
mov
rclb
ja
call
push
loopne
push
fwait
addl
mul
mov
inc
mov
inc
pusha
or
inc
mov
js
mov
sbb
mov
cmc
mov
repnz
out
mov
xor
mov
out
mov
test
mov
scas
and
xchg
loope
mov
addr16
nop
cmc
pop
add
inc
std
loop
aad
fwait
add
mov
push
pop
loop
push
xor
imul
add
fs
xor
arpl
aaa
sbb
and
je
aas
loopne
xlat
jno
in
cmc
push
cmp
cmp
xchg
jecxz
es
xor
xor
add
xchg
mov
jnp
mov
cmp
stos
push
push
or
mov
pop
pop
cmpsl
push
or
lock
bound
xchg
adc
cli
movsb
lds
push
fs
subl
icebp
int
fsubr
in
scas
out
or
jb
mov
sub
jp
out
nop
movl
or
stc
and
inc
jle
jns
mov
sbb
cmp
sub
mov
mov
sbbb
sbb
dec
sbb
xchg
jmp
sub
nop
push
and
push
rorb
std
mov
stos
fcoms
bound
sub
aaa
stos
mov
imul
mov
bound
ret
fisttpll
mull
cmp
cmpsb
arpl
repz
pop
stos
jne
and
mov
dec
repz
mov
push
sub
jb
dec
clc
lret
sbb
outsl
adc
mov
xchg
xor
xchg
fdivr
mov
addr16
push
pop
cmp
jnp
imul
lahf
pushf
loope
xchg
mov
lea
mov
int3
jbe
push
loop
sbb
add
sub
loope
rcrl
sysenter
lds
xlat
ss
or
cmp
jecxz
pop
jno
mov
sub
cld
xor
or
repz
dec
mov
xlat
dec
sbb
je
xorb
repnz
inc
clc
cmp
andl
sub
or
mov
imul
into
pop
mov
mov
add
test
popf
outsl
enter
mov
dec
icebp
into
cwtl
movq
inc
mov
jo
push
add
cmpsl
rorb
fmulp
rcrl
rcl
rolb
repz
insl
test
hlt
outsb
push
dec
mov
fisttpl
and
test
push
push
push
mov
pop
inc
dec
xchg
push
imul
adc
fsubl
jb
xchg
popa
dec
aad
jmp
aaa
and
pushf
jae
cmp
test
stc
mov
xchg
inc
popa
negb
dec
cmp
mov
and
movsb
mov
lahf
mov
xchg
mov
or
mov
push
add
mov
lods
scas
cmpsl
test
dec
clc
jl
movsb
ret
cwtl
xor
scas
mov
mov
mov
or
or
scas
sbb
inc
ret
cmpsb
xchg
sub
push
adc
push
jle
stos
loopne
hlt
insb
add
and
sbb
in
sbb
cwtl
mov
or
aad
movsb
adc
lods
push
inc
fstpl
xchg
test
insb
dec
dec
inc
aaa
sbb
cmpsb
jnp
inc
xor
in
adc
xor
inc
stc
fwait
mov
pop
loopne
push
xchg
xor
pop
flds
ss
lds
sahf
movsl
jmp
push
outsb
dec
in
pop
dec
add
mov
jbe
sub
rorb
sbb
mov
inc
sbb
add
aam
lea
xchg
pop
or
jmp
leave
pcmpeqb
arpl
outsl
int
sub
xchg
out
jns
int
fists
out
inc
pop
jbe
in
mov
cltd
int
pop
aas
pop
push
icebp
outsb
imul
push
test
and
cmc
cmp
mov
sbb
pop
cwtl
shll
ljmp
js
arpl
cs
sub
xchg
rclb
ds
mov
and
outsb
sub
cmpsl
cmp
subl
lock
js
mov
sub
inc
dec
pop
inc
roll
mov
icebp
test
ja
dec
jno
sti
icebp
test
jg
xlat
add
lahf
out
inc
or
int3
jnp
jge
and
pop
mov
jecxz
movsl
es
add
lock
nop
aas
or
int3
ja
xor
lea
pusha
add
xchg
cltd
xor
pushf
or
in
mov
sub
jge
movsb
cli
adc
xor
jl
and
xor
popl
jg
jo
pop
movsl
cwtl
fs
pusha
add
notb
subb
jmp
cs
mov
xchg
aas
dec
cmp
mov
es
insb
mov
add
and
sbb
divl
popf
test
in
xchg
mov
into
fsincos
test
retw
out
add
fisubrl
dec
lret
xchg
inc
stc
call
out
jmp
popf
rclb
and
scas
movsl
loop
inc
or
orb
add
outsb
xchg
and
and
and
mov
adc
scas
xchg
jp
sbb
cmp
mov
aas
roll
mov
sbb
mull
push
sti
adc
jge
int3
arpl
fwait
loopne
jne
mov
cmp
sbb
movsb
jecxz
mov
shlb
mov
xor
gs
xchg
cmc
js
dec
mov
pop
les
imul
ds
lahf
lods
and
in
iret
imul
xor
xor
cmpsl
fwait
dec
cmp
ret
int
cmpsl
lret
push
loopne
lods
imul
push
xchg
dec
dec
mov
jle
dec
repnz
or
xor
popl
mov
push
push
lods
lods
jno
inc
mov
out
mov
jle
int
cld
xor
cmpsl
mov
data16
sub
pop
pop
arpl
mov
dec
push
imul
test
and
lds
fimuls
mov
fldt
test
and
ja
and
mov
jl
lcall
dec
or
int3
adc
cmp
in
mov
inc
test
gs
add
fsubl
mov
or
push
sbb
loopne
js
addb
xchg
and
test
out
iret
out
fstps
lahf
out
add
in
stos
add
es
jne
cmpb
push
cld
inc
and
mul
push
jmp
pop
cmc
loop
jp
push
jmp
add
aaa
jl
mov
adc
stos
nop
ss
mov
mov
inc
and
popf
push
sbb
xorb
and
pop
mov
std
movsb
and
inc
ret
leave
inc
js
sbb
lret
xor
aad
or
xchg
aad
leave
mov
shl
or
insl
push
jb
jne
jno
loopne
inc
sbb
push
sti
adc
fsubr
xor
je
pop
rcrl
cs
and
cmc
loopne
leave
sahf
pop
mov
fdivrs
lods
lcall
xor
push
jecxz
xchg
xor
and
test
xchg
stc
push
pop
stos
repnz
loop
cmc
fisubrl
sub
dec
mov
sbb
inc
nop
hlt
jecxz
ret
cmpsl
xor
gs
andl
or
ljmp
les
mov
ret
repnz
jns
sub
or
outsb
push
xor
arpl
idivb
lods
inc
add
push
negl
jp
push
xor
mov
mov
lcall
in
les
ficoms
movsl
loopne
push
ds
cmp
in
sub
adc
mov
sub
jne
inc
lods
mov
in
push
call
test
sbb
xchg
jns
test
enter
sub
arpl
mov
popa
xchg
cmpsb
pop
cmpsb
cmp
movsl
sub
pop
sbb
aaa
shr
icebp
in
mov
lods
call
add
push
xor
pushf
das
ret
adc
pop
insb
adc
xchg
aas
mov
sub
sbb
mov
adc
out
sub
fstps
xlat
push
mov
inc
ss
orl
mov
mov
outsb
ret
dec
ja
inc
in
jp
shrl
pop
inc
icebp
aas
fxch
data16
push
jae
jp
xor
pusha
mov
xor
add
popa
std
out
or
jb
mov
mov
adc
ret
gs
dec
sbb
push
int
and
mov
pop
add
enter
sub
ss
lock
test
insl
jge
or
pop
aaa
add
in
stc
sbb
loopne
mov
rcrl
stos
dec
add
fs
sub
jle
xor
xchg
or
inc
jg
xchg
in
mov
aas
mov
fistps
mov
sub
cmpsw
ret
push
adc
pop
leave
out
mov
rolb
jnp
lods
lds
mov
outsl
mov
push
sub
cs
cmp
in
rcll
out
ffree
sbbb
sahf
imul
js
xorl
fsubl
fwait
jl
lods
sbb
inc
dec
icebp
inc
jnp
push
in
dec
push
outsb
push
into
mov
cmpsl
jle
push
pop
stc
dec
adc
mov
addr16
jmp
bound
and
test
ret
fists
in
orb
pop
xor
leave
iret
xchg
popf
out
mov
cmp
aam
je
adc
inc
aaa
mov
cmc
xor
shr
xor
lds
sub
mov
out
out
xlat
or
pop
mov
mov
aam
outsb
scas
sbb
imul
jge
sbb
sub
jle
and
leave
fdivrs
insb
xchg
push
mov
es
jecxz
or
stc
jge
xor
shll
sbb
mov
or
or
jg
out
test
xlat
jbe
adc
das
cwtl
xchg
inc
imul
fimuls
jnp
and
leave
push
shll
rolb
jmp
xchg
push
fsubrl
add
and
and
jge
sub
loopne
loope
sbb
sub
inc
mov
mov
mov
jbe
mov
mov
movsl
je
sub
push
dec
push
jge,pt
mov
adc
add
jmp
pop
mov
inc
insl
insb
push
fnstcw
sub
lahf
push
ds
lds
cmpsl
mov
lods
and
mov
or
xor
imul
insl
arpl
popa
xor
mov
or
xchg
push
pop
fidivrl
pushf
aam
sub
mov
out
xor
or
insb
cmp
int3
jns
sub
pop
jae
pop
in
mov
and
cmp
cmp
lcall
aaa
xorl
sub
iret
sbbl
cmpl
dec
adc
sbb
cs
xchg
or
mov
pop
out
dec
clc
jp
repnz
mov
fwait
insb
leave
inc
cwtl
lea
lea
out
out
cmp
add
pusha
push
cltd
pop
jno
pop
aad
jnp
lret
pop
lods
mov
popf
cmpsl
push
sub
out
lcall
cmp
out
cmp
shrb
lds
pop
mov
popf
test
cld
mov
lcall
aam
inc
inc
out
orps
and
outsb
lcall
sub
or
cmovb
ficompl
and
sub
mov
add
es
sbb
subb
xor
xlat
std
lea
gs
or
mov
xchg
dec
lock
cwtl
push
jno
mov
pop
sub
les
xchg
vmovaps
and
cli
xchg
or
test
jmp
push
ret
jle
or
jns
stos
jae
inc
mov
ret
js
push
xlat
test
out
inc
rclb
inc
data16
push
inc
cmp
xor
or
xor
stos
movsb
jle
jns
pop
out
enter
imul
jno
sahf
mov
mov
xchg
sub
cltd
jle
sti
adc
push
jle
dec
scas
mov
sub
subb
xlat
mov
jb
ret
arpl
mov
or
mov
mov
and
inc
lcall
enter
push
rorb
add
sbb
inc
mov
add
fcoml
mov
mov
inc
iret
mov
popf
inc
adc
divb
and
inc
pop
aaa
cltd
or
dec
dec
pop
mov
push
lock
shll
mov
adc
mov
fstps
sub
or
test
mov
push
imul
shl
push
xor
xchg
sub
subl
sub
inc
iret
movsl
sub
loope
dec
mov
push
mov
cmp
mov
lods
int3
enter
jno
adc
aam
insl
push
enter
xchg
mov
icebp
das
dec
lea
imul
mov
pop
jle
test
push
push
dec
mov
jno
test
push
addr16
loopne
add
dec
popa
dec
aas
and
call
or
minps
mov
inc
and
ds
daa
fbstp
xlat
arpl
xor
jge
aad
dec
add
xchg
cmp
xor
lret
andl
in
jge
jl
stc
fnstenv
add
lods
jp
imul
and
stos
and
les
test
jns
mov
dec
clc
mov
fistps
mov
les
mov
pop
xchg
pop
test
outsl
fldcw
arpl
adc
cmp
push
ret
and
aas
xchg
sbb
push
inc
dec
movsl
shlb
mov
sbb
mov
movsb
and
mov
mov
cmp
mov
sbb
push
cltd
jp
popa
mov
dec
or
popa
sbb
rclb
push
and
jbe
jl
fildl
inc
iret
push
xchg
ljmp
getsec
and
mov
scas
sbb
in
in
or
sub
pushl
xchg
pop
test
cmp
loopne
push
lods
fs
into
inc
pop
lret
cmovbe
sbb
cmp
fdivrs
xor
xchg
push
lods
int3
stc
fadds
movb
mov
hlt
loope
sub
add
jo
and
lods
flds
cmp
fstpl
les
xor
jle
or
call
sar
adc
fisubrl
mov
clc
xor
and
push
cmp
sub
or
push
xor
jns
jecxz,pt
ljmp
fwait
jnp
stc
jae
mov
xchg
decb
xchg
clc
xor
push
lret
push
xchg
lret
or
pushf
int3
mov
loop
pusha
dec
xacquire
sbb
add
inc
push
push
decb
mov
fwait
pop
xor
mov
daa
dec
pop
push
test
inc
adc
lahf
cmp
addr16
push
cld
mov
add
pop
push
shll
mov
imul
sbb
leave
mov
sub
dec
pop
ja
rcrb
clc
dec
jno
mov
sbb
cmp
scas
dec
or
push
pop
xchg
cmp
mov
jp
inc
cmp
pop
and
pop
mov
es
sub
fistpl
repnz
add
xor
xor
jns
movl
in
adc
cs
sub
loope
lods
add
sahf
stos
mov
xchg
add
pop
rclb
mov
mov
and
mov
push
push
mov
push
mov
pushf
push
dec
jmp
ficomps
out
xchg
push
push
push
mov
jg
bound
xchg
jp
push
ljmp
lds
xchg
cmp
cmp
scas
mov
sub
subb
mov
jg
stc
or
lods
or
xchg
gs
outsb
sbb
int3
lods
out
jl
pop
inc
jnp
sarb
fistl
ja
mov
jp
pop
fisttps
jno
lcall
lock
mov
mov
mov
adc
test
xchg
pop
fwait
mov
roll
test
jmp
cmp
jge
dec
mov
cmp
or
push
push
lds
das
icebp
hlt
punpckhbw
push
mov
mov
sub
das
sahf
hlt
pop
int
mov
ret
and
sbb
gs
pop
pop
stc
stos
in
stc
scas
xor
mov
dec
xor
ja
or
mov
gs
mov
sub
rcr
push
hlt
lcall
incb
and
popf
or
sahf
ja
cld
int
and
push
mov
xor
sbb
mov
pusha
inc
sbb
lea
aaa
mov
call
xor
mov
movsl
push
xchg
test
aas
dec
or
mov
push
addl
dec
aam
pop
or
jbe
icebp
pushl
mov
and
popa
mov
lret
int
imul
fcomip
shlb
adc
out
dec
jnp
xor
inc
pusha
jg
sbb
xlat
xchg
add
pushf
les
icebp
inc
add
pop
iret
inc
jl
clc
dec
pop
ja
repnz
stos
inc
push
ficoms
sub
in
cli
cmp
aam
push
gs
cwtl
cmp
inc
xchg
pop
inc
scas
add
jae,pn
cmp
rcrl
insl
bound
sub
loope
sbb
and
mov
dec
out
jmp
push
pop
cmc
mov
cmpsb
jno
sbb
add
sub
imulb
dec
adc
icebp
add
outsl
loop
push
mov
iret
test
data16
mov
jecxz
add
flds
jmp
adc
and
jmp
out
dec
aam
dec
push
and
mov
fbstp
les
in
testl
or
push
mov
and
jecxz
iret
out
xchg
and
cmp
mov
pop
ljmp
lods
cmp
scas
cld
bound
sub
add
mov
and
pushl
mov
jo
dec
sub
icebp
jp
push
mov
jo
aad
dec
das
je
leave
mov
in
hlt
lret
sbb
push
pusha
push
sahf
mov
rorl
call
dec
mov
add
test
add
inc
dec
test
pop
mov
insl
int
fs
js
push
mov
pushl
mov
rcrl
stos
mov
pop
repz
sub
xchg
jl
and
jbe
adc
ret
inc
cmp
iret
cmpsb
insb
cmp
pop
cmp
cmp
fwait
call
gs
cmp
imul
dec
xchg
daa
push
push
mov
loop
mov
sbb
sub
mov
sti
mov
mov
sar
and
out
cmp
int3
inc
inc
push
insl
pushf
inc
loopne
push
outsl
mov
gs
sub
lret
imul
gs
adc
mov
movsl
stos
out
adcb
pop
xchg
mov
loope
outsl
out
pop
loop
jns
test
mov
aad
fwait
pop
mov
cmp
or
push
ja
jmp
push
sti
lds
ljmp
rolb
lods
cmp
jmp
mov
dec
jae
push
inc
mov
pop
mov
leave
lret
mov
and
lret
cmp
cmp
cli
push
aam
arpl
data16
cmp
mov
enter
jne
out
jp
adc
std
jne
adc
jbe
push
sub
test
lock
pop
cmp
pop
push
in
pushf
out
push
adc
push
ja
xlat
jp
decl
push
mov
dec
mov
push
shl
pop
xchg
cmp
fwait
lods
in
dec
cmpsl
ds
mov
xor
gs
pushl
in
jae
test
mov
push
in
leave
add
aas
addb
inc
dec
or
arpl
loopne
dec
data16
inc
int3
jbe
je
pushf
xchg
fisubrl
movb
add
cmp
dec
push
ret
jno
mov
pop
fcmovbe
or
inc
bound
push
mov
repnz
clc
orl
sub
in
pop
lret
mov
mov
in
clc
pop
mov
fstp
ss
cmp
pop
mov
and
in
mov
stc
push
cmc
mov
dec
adc
or
fldl
test
mov
mov
mov
dec
lds
xchg
lahf
inc
lock
stc
addl
mov
xor
mov
popa
jne
xor
push
adc
xchg
push
out
xchg
dec
mov
popf
in
add
in
sbb
pushf
or
mulb
pusha
mov
popf
mov
icebp
div
jns
out
and
add
test
sarl
pop
xchg
cmp
pop
icebp
add
push
xor
es
shr
stos
sbb
lds
aaa
fcoml
sub
movsb
cmpsb
fldt
xor
lds
inc
dec
jnp
push
lds
add
cmp
int
push
lock
rclb
mov
rcll
sbb
lds
fistpll
je
jnp
fsubs
mov
imull
push
or
jmp
pop
cld
es
fldcw
cwtl
inc
pop
and
add
add
or
lods
mov
in
fisubrl
mov
ret
or
sub
cmp
and
push
inc
data16
ljmp
loope
or
sub
adc
mov
mov
fwait
and
jo
mov
scas
into
or
pop
push
cmp
pop
jle
imul
sub
xor
pop
sti
add
jmp
xchg
push
int
jmp
xchg
pop
lods
out
sub
cs
xchg
insb
sub
punpckhwd
lds
mov
cld
push
mov
fnstenv
fisubs
lcall
or
scas
sub
icebp
ljmp
and
fldl
push
and
inc
fsub
imul
sbb
in
inc
dec
fldt
out
and
insb
aaa
insb
jp
pop
div
icebp
rcrl
jl
not
fs
repnz
mov
test
or
xor
mov
aad
xchg
in
jne
sbb
scas
outsl
and
mov
out
popa
or
mov
push
fwait
inc
movsb
les
mov
xchg
ljmp
call
int
mov
add
inc
cmp
in
cmpsb
cmpl
hlt
pushl
fldcw
lock
push
jle
sub
cmp
iret
xor
ljmp
jle
imul
jne
mov
adc
sub
pop
mov
fwait
daa
test
notb
outsl
ljmp
dec
lret
in
popa
xor
fisubl
aas
adc
dec
push
mov
inc
icebp
out
ret
cmpsb
clc
fildl
sbb
and
xchg
adc
lahf
movsb
lds
aad
shll
std
push
inc
daa
sbb
test
xor
push
test
dec
arpl
cli
cmp
push
mov
daa
fldcw
mov
mov
out
ret
sub
je
inc
xor
or
or
mov
je
xchg
xor
pop
ja
stc
ja
fld1
inc
inc
inc
icebp
ret
fst
sbb
cmp
xor
mov
cmp
jl
mov
push
sbbb
fldt
adc
sbb
repz
ds
ljmp
inc
ret
jb
out
mov
pop
mov
mov
jo
xchg
jo
arpl
xchg
stos
cmc
sahf
jmp
lds
pop
mov
push
mov
sbb
cltd
dec
cmc
jge
mov
jp
xor
repnz
out
mov
jge
lcall
daa
and
or
adc
pop
pop
add
push
cmpl
arpl
add
ret
jns
add
dec
cltd
pop
cmp
jb
inc
aaa
xchg
fldcw
loopne
xchg
aas
das
pop
pushf
pop
jmp
in
adc
jne
mov
loope
dec
outsb
dec
xchg
call
out
loope
push
les
mov
nop
pop
jnp
and
sbb
or
xchg
add
cmp
sub
movsl
gs
js
or
and
xchg
jnp
cwtl
xchg
cwtl
xor
pop
inc
add
mov
out
mov
xor
repnz
je
xchg
loop
mov
sub
jnp
shl
leave
pop
fwait
cmp
movsl
lea
mov
xor
xchg
dec
fadds
pop
cli
sbb
xchg
cmp
xchg
mov
inc
xor
dec
or
int3
inc
sbb
xchg
pop
lds
stos
jl
jno
loop
cmp
push
sti
sub
mov
jnp
int
push
std
sub
insl
push
addb
or
cmp
pop
jge
cmpsl
xchg
jne
loop
pop
pop
mov
mov
movsl
cs
and
stos
add
lods
and
das
stos
mov
aaa
sub
adcl
mov
xchg
pusha
sbb
xor
adc
aas
insb
mov
das
mov
push
ret
cld
pop
push
pop
jne
push
les
sbb
testb
fdivrs
gs
dec
push
jo
pusha
cltd
jnp
sub
sbb
lret
cmpsb
je
xchg
pop
adc
stos
aad
jbe
iret
xchg
xor
fcmovne
jnp
nop
les
ljmp
iret
rcr
in
scas
add
jmp
jns
fsts
fst
inc
mov
sbb
pop
dec
cmp
dec
cmp
imul
mov
leave
cmp
and
sub
sub
cmpsl
pop
jge
inc
repnz
aam
sar
push
sahf
call
cmp
nop
dec
scas
faddp
xor
push
and
pop
dec
imul
or
out
dec
add
adc
mov
std
bound
fcoml
scas
xor
gs
enter
out
inc
cltd
sbb
or
xchg
insb
and
std
fisubrl
shlb
repz
push
orb
inc
shlb
xchg
push
sahf
jmp
mov
jecxz
stos
jge
loope
mov
xchg
subl
mov
jnp
xor
mov
out
sub
fucomip
add
adc
decl
inc
pop
mov
aam
aas
mov
pop
adc
mov
pushf
shrb
arpl
jle
push
scas
stos
aas
xor
data16
ss
add
fldt
ljmp
popf
dec
sub
std
xchg
test
ja
mov
pop
mov
scas
dec
fiaddl
sbb
xchg
loopne
lret
in
mov
int3
and
adc
mov
adc
imul
test
addr16
mov
inc
and
push
sub
mov
cld
adc
sbb
or
fsubs
jns
aam
cmpsl
addb
xor
repnz
call
repz
ljmp
xor
rorb
and
sti
cwtl
xor
rcrb
cli
ret
inc
aaa
inc
mov
idivb
idivl
xor
std
mov
jbe
push
inc
test
bnd
outsb
popa
out
idivl
jb
ljmp
sbb
fistpll
xor
push
and
movsl
xchg
shrl
and
loopne
fwait
push
sub
and
mov
idiv
jne
jmp
sub
inc
or
ret
sbb
pop
dec
inc
pusha
jmp
sub
or
adc
movsl
lock
mov
pushf
or
push
out
cli
out
xchg
and
shll
andl
inc
jp
push
movl
push
in
push
inc
inc
insl
adc
icebp
or
shl
outsb
outsb
push
xchg
sub
lahf
xor
push
push
in
dec
mov
pop
xchg
in
add
inc
fwait
mov
mov
mov
and
jno
xchg
jne
jmp
dec
in
add
jmp
push
cmc
sbb
pusha
pop
stc
testl
stc
mov
and
lods
aam
mov
cmp
inc
in
lcall
sub
jle
mov
jg
xchg
mov
test
xchg
inc
imul
and
mov
mov
sbb
inc
cltd
pop
repnz
push
push
jmp
and
mov
fisttpll
xlat
mov
or
divl
mov
mov
into
decl
jb
adc
mov
mov
and
xchg
xor
inc
shlb
cmp
sbb
out
std
mov
or
xor
cmpsl
mov
sub
xor
and
aad
daa
push
xchg
pop
ficoml
jg
sbb
sbb
sub
std
add
pushf
push
adcb
or
jae
stos
adc
cmp
rcll
and
adc
mov
out
fldl
xor
loopne
sahf
cli
dec
dec
shl
xor
js
decl
mov
xchg
arpl
inc
sahf
push
mov
aas
mov
xchg
xor
push
push
cmp
shll
push
pop
pop
push
pop
ret
movsb
in
rcrl
mov
cld
xchg
mov
das
xchg
push
cmc
xchg
aad
push
movsb
jae
push
push
mov
shlb
mov
push
mov
adc
negl
sub
dec
popf
lret
or
push
push
push
sub
bound
cmp
sbbl
mov
cmpsl
xchg
fisttpl
ret
mov
xchg
fcmovb
cmp
xor
gs
push
jo
mov
test
mov
adc
test
scas
cmc
dec
push
ret
andl
movsb
sub
pop
or
and
inc
lea
mov
mov
adcb
mov
or
iret
and
sbb
jnp
sub
addb
icebp
lcall
pop
mov
fidivl
rcll
enter
leave
jmp
stos
ret
data16
or
cmp
mov
mov
rcrb
pop
enter
aad
fcmovne
insl
push
xor
cmc
adc
aad
push
fcomps
jae
push
sbb
out
mov
test
addr16
movsl
fists
outsl
jne
and
fucomip
test
add
ffreep
sub
sub
negl
mov
shl
stos
cmpsl
es
das
test
pop
sarl
pop
lret
repnz
lds
jno
lods
sarb
fldcw
divl
rcrb
insl
std
lret
sbb
pop
int
xchg
pop
sbb
repnz
dec
push
xchg
push
push
mov
stos
aas
out
push
jmp
lds
movsl
jno
mov
scas
shlb
in
and
out
or
adc
fiaddl
xorl
add
cld
call
icebp
jl
fimuls
fbld
cmc
stos
shr
and
sub
movsb
testl
mov
mov
in
push
or
leave
ret
icebp
sti
lret
fnsave
ret
fdivrl
jge
test
test
or
jg
aam
mov
mov
inc
movsl
pop
mov
jne
sbb
dec
push
push
cmp
mov
jb
test
gs
mov
test
lahf
jge
jnp
and
xor
notb
sahf
ror
sub
and
mov
lcall
cld
cld
and
cmp
sarl
aas
cld
icebp
push
bound
dec
insb
pusha
pusha
push
xor
sub
and
stos
je
mov
inc
or
jge
in
and
repnz
mov
ds
xchg
cmp
adc
xchg
cmp
push
punpckhdq
lods
inc
sub
mov
sbb
leave
out
pop
inc
cli
in
stos
insb
or
jge
lea
cld
movsl
les
shll
outsl
sbb
pop
xor
aad
arpl
loope
cmp
lahf
inc
pop
std
lcall
pop
inc
fwait
cld
scas
pop
repz
mov
push
jb
aaa
push
loopne
fbld
push
and
jge
dec
pop
inc
fstpt
movsl
les
cmpsb
pop
xchg
jle
jne
pop
pusha
cs
jmp
ljmp
or
das
test
mov
jle
ja
clc
lea
out
and
dec
adc
shl
dec
fisubrs
mov
pushf
adc
stc
je
pop
sti
nop
lret
dec
mov
mov
mov
and
inc
pop
lret
pop
mov
push
pop
arpl
xchg
adcl
dec
mov
xchg
sub
dec
xlat
setg
xor
xchg
or
xor
popf
add
in
enter
je
xchg
dec
jb
out
pop
push
shrb
adc
jle
add
repnz
pop
roll
pushf
adc
popf
mov
and
dec
cmc
leave
rcrb
stc
inc
ja
fs
add
dec
xchg
rep
cld
sub
dec
aaa
jmp
jge
jge
sub
stos
mov
cmp
xor
fcompl
popf
sti
inc
xor
mov
mov
ds
dec
and
push
in
insb
scas
adcl
push
imul
sub
xor
add
mov
out
dec
out
scas
jle
pop
xor
lds
inc
cmp
and
mov
addr16
mov
dec
rorl
mov
cmp
stc
sub
in
jge
xor
or
dec
insl
pop
dec
mov
inc
mov
sub
fsubp
cltd
jp
fsts
xlat
filds
pop
subb
iret
fsubl
movsb
push
sti
mov
das
cltd
mov
clc
out
stos
cmpsb
jno
shl
xchg
icebp
jl
adc
sub
push
loopne
push
jg
jnp
jnp
fnstcw
or
pop
out
xor
xlat
mov
sub
xor
call
je
shrl
xor
adc
push
inc
cmp
jge
sbb
lahf
enter
lods
add
scas
jmp
xor
daa
outsl
lods
iret
ret
mov
mov
inc
mov
inc
pop
out
push
push
lods
int
lahf
sbb
loopne
cltd
aad
pop
pop
ljmp
xlat
fildl
nop
stc
push
lds
ljmp
pusha
insl
cmp
sbb
mov
mov
adc
push
test
mov
mov
dec
outsl
dec
das
dec
mov
fwait
push
pushw
pop
push
add
xlat
push
sub
sbbb
imul
data16
lcall
jmp
add
pop
add
jmp
pushf
jp
lock
and
aas
js
lret
movsb
xor
xchg
dec
lahf
imul
xor
push
loope
pop
idivb
cmp
test
cwtl
sar
sbb
fimull
push
aas
cmpsb
clc
dec
lock
out
mov
sahf
test
in
addr16
jae
mov
or
mov
and
and
repnz
aas
fxch
xor
out
ja
cmpsb
aad
dec
movsb
insb
mov
jmp
add
mov
sahf
mov
cwtl
insb
and
and
cmp
push
mov
std
inc
sub
pop
adc
push
divb
lea
xor
cmpsl
fdivrl
cmp
inc
jb
mov
jo
inc
jmp
imul
inc
fistps
cmp
push
jecxz
mov
push
hlt
xchg
insl
mov
dec
gs
subb
push
sti
xchg
mov
sub
fsubrs
add
leave
mov
mov
inc
addl
pop
jno
and
cltd
push
xor
sbb
mov
daa
scas
sub
xchg
icebp
imul
and
adc
push
rclb
mov
xchg
mov
jp
pop
nop
sub
inc
sub
mov
into
inc
lods
mov
inc
sub
lcall
push
jle
sub
mov
sbb
ds
cmp
sub
arpl
sbb
mov
cmpsl
mov
lret
shlb
insl
shll
jg
inc
mov
pop
fs
test
jecxz
ljmp
jns
and
or
add
scas
test
cli
mov
push
push
and
mov
shl
xor
std
sti
ss
lds
add
xchg
pop
sbb
imul
divl
dec
insb
mov
jg
or
xchg
pop
cmp
mov
adc
push
push
jne
mov
ds
cli
cmpb
sub
or
mov
pop
pop
loop
add
cmp
lret
rcrb
pop
clc
insl
stc
add
sbb
jp
cmp
cmpsl
adc
xchg
jl
sbb
or
mov
rol
outsl
cs
adc
pop
jne
fildll
cwtl
mov
fimuls
jge
mov
jp
xchg
mov
sub
add
push
in
pop
lret
stc
push
push
pushf
push
fdivrl
sub
outsb
aam
and
mov
dec
imul
ret
jb
mov
mov
mov
sub
outsb
cmp
pop
and
inc
inc
xchg
push
xor
cmp
add
mov
pop
into
xlat
push
mov
mov
jb
sbb
xor
mov
hlt
cld
xor
lods
sub
movsl
adc
lret
stos
out
lahf
test
mov
and
mov
scas
movsl
jge
insl
xor
ss
mov
adc
cld
mov
cmpl
movsb
push
push
mov
mov
scas
mov
jl
mov
mov
scas
pusha
in
inc
mov
dec
out
das
shll
pop
sbb
sbb
jne
mov
jge
sbb
pop
xchg
cmpsb
jno
xchg
adcb
rclb
pop
pop
outsl
movsl
inc
lret
jbe
psubusw
decl
mov
sarb
cmp
shlb
fisubrl
lret
lods
dec
outsl
or
sti
push
xor
rolb
stos
cmp
mov
or
clc
stos
jge
xchg
shrb
movsb
cmp
leave
leave
push
out
das
xchg
loope
add
jno
aam
shll
stc
lahf
push
inc
outsl
jmp
cmp
stos
loope
mov
repnz
adc
fisttps
jnp
dec
insb
mov
sbb
mov
lods
lock
xchg
aam
xor
jbe
jecxz
mov
mov
aaa
xor
inc
mov
and
cld
pop
and
test
add
lret
in
mov
jecxz
jle
lret
xlat
inc
xor
xor
aad
repz
mov
adc
cmp
pop
out
jnp
push
or
dec
push
aad
adc
pop
sub
pop
mov
jmp
jnp
adc
out
jge
dec
ds
in
sbb
popa
pushf
mov
les
idiv
pushw
data16
aam
cmc
mov
fsts
xchg
jbe
arpl
addr16
cs
movsl
cmc
and
aaa
or
roll
ja
add
call
mov
enter
xchg
rclb
push
mov
ljmp
xchg
cmp
dec
pop
cli
movsb
dec
xchg
inc
or
das
clc
cltd
sub
sub
push
inc
sbb
pop
pop
cmp
jmp
mov
mov
push
lods
cwtl
xchg
sub
xor
pop
nop
sub
xor
cmp
mov
or
outsl
daa
dec
loope
mov
push
aaa
push
inc
cli
dec
mov
clc
inc
mul
loope
outsl
xchg
fwait
jecxz
inc
lahf
aam
ds
dec
lahf
push
mov
sbbb
jle
sub
stos
clc
push
xor
cmp
fwait
inc
or
test
or
rcll
pop
push
pop
mov
xchg
movsb
outsb
gs
ja
fxch
pop
and
cmp
arpl
dec
inc
popa
jmp
pop
lahf
xor
mov
xchg
dec
jl
cmp
xor
stos
cltd
lret
lcall
adc
cmpsb
data16
out
lea
sbb
xchg
outsl
pop
cwtl
jg
hlt
sub
xor
call
xor
gs
push
pop
dec
fbstp
fidivl
sbb
scas
int3
add
jo
shlb
into
das
in
jo
inc
mov
shlb
push
insb
cmovae
adc
pushf
enter
outsb
popf
fistl
das
popf
je
shlb
add
jb
loop
and
mov
push
movsb
and
xchg
ja
imul
and
pop
mov
mov
sub
ss
xor
jnp
and
mov
push
mov
cmp
cmp
decb
fs
jbe
pop
lock
das
jb
loope
jg
sarl
imul
aam
jo
pop
xchg
call
int
xor
or
cli
jnp
or
js
mov
add
inc
hlt
stos
pop
hlt
icebp
pop
pop
xor
sbb
jns
out
mov
pop
dec
or
cmp
inc
jmp
and
pop
mov
std
repnz
push
adc
insl
and
cmp
scas
sahf
mov
xchg
mov
or
pop
cmc
aad
mov
mov
mov
dec
jo
jb
pop
sub
xchg
pop
and
jno
cmp
cmp
ja
in
aaa
inc
or
xchg
push
loop
xchg
lea
aaa
popa
js
mov
js
nop
sub
jno
and
cmpsl
or
pop
movsl
dec
pop
dec
out
xor
mov
mov
mov
pop
adcb
inc
mov
mov
jae
stos
push
push
mov
aas
pop
and
mov
add
insb
mov
in
add
pushf
push
or
inc
sbb
ficompl
sbb
adc
dec
in
mov
dec
clc
adc
xor
mov
pop
push
dec
scas
repz
out
roll
test
jbe
popf
iret
stos
pop
push
dec
mov
imul
mov
sub
mov
mov
mov
mov
lds
pop
xchg
in
mov
inc
or
repz
xor
pop
pusha
push
cmp
out
mov
out
cltd
lds
xlat
mov
cmp
sbb
in
mov
push
divl
aas
mov
xchg
out
or
repnz
push
jb
jne
mov
push
scas
mov
pop
dec
dec
xchg
jge
in
jl
rclb
aad
pusha
mov
pop
cs
ret
mov
mov
mov
outsb
cmp
push
divb
sub
cmp
inc
data16
add
shrl
bound
and
std
push
out
jmp
pop
insb
adc
mov
push
shll
call
mov
cmp
mov
sbb
cmp
pop
cwtl
pushf
lods
or
pop
inc
cwtl
dec
loope
gs
nop
xorb
mov
mov
xchg
in
xchg
adc
mov
mov
mov
mov
test
in
xchg
stos
jmp
jo
inc
xchg
aam
popf
xchg
neg
mov
mov
jbe
push
push
inc
call
enter
dec
insl
insl
adc
in
scas
add
negb
mov
pop
stos
fdecstp
mov
icebp
mov
loope
sbb
xlat
or
test
jno
mov
xor
int3
stc
push
scas
mov
cmpl
adc
pop
jbe
mov
test
pop
mov
rolb
add
andb
ret
bound
jae
dec
mov
ja
mov
xchg
cmp
adc
fwait
imul
cmp
push
out
and
jle
out
xchg
mov
mov
nop
mov
add
lcall
nop
jecxz
mov
aam
int
pop
repz
pusha
cmc
dec
jp
stos
ret
cltd
std
or
pop
scas
adc
pushf
jnp
jne
outsl
lcall
loop
sahf
or
xchg
push
loope
pop
lahf
xchg
ljmp
lea
xor
mov
test
hlt
jne
mov
push
nop
inc
and
dec
ss
mov
xchg
cmp
fidivrs
sbb
add
push
sbb
mov
je
cmp
and
xchg
in
andl
fisttpll
fmulp
mov
fmull
divb
enter
sbb
cwtl
dec
ss
xor
enter
mov
inc
cmpsb
roll
jmp
movsl
ss
sbb
jae
mov
jle
jge
test
xor
test
cs
adcb
sub
mov
push
push
movsl
cmp
pop
or
ds
in
ja
mov
or
or
jae
jns
push
pop
pop
test
sysret
js
add
adc
mov
int
push
xorl
and
jle
cltd
push
mov
das
dec
cld
pop
js
scas
das
adc
cmp
lds
mov
cmc
les
pop
inc
mov
subb
adc
lret
mov
mov
jno
inc
xlat
add
cwtl
sbbl
jae
data16
mov
push
lods
sbb
inc
cmp
jo
lea
or
dec
sahf
out
lcall
cwtl
mov
jle
imul
ljmp
inc
jp
lret
movsl
fs
mov
lret
xchg
cmp
jmp
cmp
push
and
jp
jo
inc
test
sub
imul
sbb
pop
or
xor
pop
gs
xchg
mov
or
jno
xlat
icebp
fsts
jno
sbb
ds
xor
xchg
fmull
xor
mov
xor
xor
pushl
jge
fisubrl
add
repz
dec
or
pop
fnstenv
add
or
ljmp
into
in
nop
add
jmp
enter
popa
dec
scas
mov
fmulp
nop
push
jecxz
lock
fsubl
ds
mov
dec
or
and
dec
mov
mov
mov
test
pushf
inc
jecxz
iret
sahf
nop
in
fcoml
lock
sub
cs
fcoml
call
mov
add
in
les
es
cmp
sub
popa
dec
mov
mov
and
repz
mov
in
adc
mov
pop
push
sub
mov
insl
pop
ret
mov
dec
mov
or
loop
push
daa
fs
and
jecxz
fdivrs
and
adc
fwait
cli
dec
jle
or
push
dec
jne
pop
or
xlat
call
mov
jp
or
adc
and
xchg
mov
cmp
add
aad
dec
xor
add
push
pop
cld
xchg
fidivs
mov
scas
dec
push
loopne
and
dec
or
fidivrs
and
repz
push
dec
xchg
cs
push
cmp
imul
dec
rolb
ret
cmp
lret
loope
inc
push
xlat
jbe
xor
inc
pop
cwtl
shrb
or
arpl
test
arpl
xchg
add
xchg
xor
add
xchg
push
adcl
xchg
jl
movsl
push
xor
sahf
cmp
insb
push
popf
sbb
out
push
stos
add
jle
mov
sbb
jp
int
xchg
pop
xchg
sbb
loopne
push
jo
ds
jg
cwtl
mov
and
push
xor
das
mov
mov
cmp
xchg
cld
lret
mov
clc
ret
xchg
push
mov
loope
jno
adc
shl
inc
adcb
sub
bnd
mov
jp
push
dec
xchg
jmp
mov
xlat
ljmp
jmp
mov
push
idivl
mov
or
mov
mov
sub
clc
repnz
outsl
rorl
add
ja
insl
in
cmp
loop
out
popa
push
cwtl
rorl
int
adc
fcoms
push
leave
or
or
inc
jnp
iret
fwait
adc
mov
pmulhw
out
jb
inc
cmc
insl
pop
add
cltd
mov
pop
test
fidivrl
fbld
mov
and
mov
push
push
scas
loopne
rcll
or
stos
in
test
xchg
cli
cltd
mov
vandps
rcll
sub
push
ljmp
mov
push
mov
in
mov
jmp
sahf
mov
enter
or
insb
lea
mov
cli
sub
sbb
cld
pop
and
sbb
sub
negl
mov
iret
xchg
jo
adc
xchg
in
fst
jp
jp
std
sub
fistps
dec
jae
repnz
pop
mov
cmpsb
clc
clc
cwtl
popa
adc
sub
jmp
fcoml
sbbb
mov
dec
sub
stc
pushf
into
or
fs
mov
inc
or
fs
xlat
das
inc
std
fs
aam
pop
outsb
pop
cmpsl
int3
mov
cmc
lcall
nop
cmp
sarb
xchg
stos
pusha
mov
push
mov
scas
inc
mov
ljmp
insb
jae
jp
es
clc
cmp
roll
cmp
loop
inc
sub
and
scas
pusha
scas
and
les
pop
test
in
mov
xchg
sarl
gs
mov
fwait
mov
jle
pop
negl
and
jge
test
pop
popf
scas
xor
test
imull
aam
adc
rolb
pop
dec
jl
in
daa
or
xchg
repnz
push
iret
cmp
ja
popf
cmp
je
push
jbe
dec
dec
leave
lret
pusha
push
lds
push
aaa
movsb
xor
leave
pop
sub
sub
test
mov
jg
andb
es
leave
fidivl
cltd
push
enter
mov
pop
adc
pop
xor
add
imul
sbb
jb
pushf
inc
leave
aam
push
or
daa
mov
cmp
dec
cmp
icebp
adc
adc
ds
popf
xor
call
dec
cmp
and
sbb
imul
jl
sbb
inc
push
fcoms
jecxz
jle
bound
movsb
xchg
jmp
int
or
cmpsb
mov
mov
test
xorl
inc
mov
push
push
aam
je
ret
sbb
in
adc
dec
jecxz
adcl
add
pop
lock
inc
sub
sub
movb
adcb
push
mov
adc
sbb
jns
pop
mov
sti
icebp
xorb
je
jo
out
and
sahf
mov
inc
inc
xchg
insl
subl
loopne
xor
xchg
adc
rclb
cmp
popf
popf
int3
sti
sub
stos
sub
movsl
mov
test
call
nop
adc
ss
jge
and
lds
or
shrd
dec
call
inc
mov
cli
test
push
test
lods
nop
loopne
fwait
in
inc
cmp
ret
pop
jge
dec
int
mov
ret
aad
test
cmpsb
jns
or
sub
push
mov
ss
imul
pop
into
push
ret
mov
sbb
xchg
cmp
mov
std
test
cmpsl
cmp
or
jnp
or
pop
mov
push
dec
cwtl
mov
xchg
and
and
or
xchg
mov
dec
ret
loop
fcompl
xchg
shl
int
cmp
cmpsb
stos
sub
scas
rep
pop
sub
adc
lds
test
das
push
mov
insb
fisubrl
push
sub
cltd
ljmp
in
sub
mov
adc
addr16
xor
inc
test
test
add
dec
outsl
in
test
dec
sbb
mov
imul
xor
dec
pop
push
scas
xchg
jge
inc
sub
cmpsl
js,pt
add
jae
ss
xor
dec
push
jno
outsb
or
pop
sbb
dec
xor
mov
sub
or
mov
xchg
ljmp
fmuls
mov
inc
out
sub
loop
outsb
ljmp
int3
ficomps
push
sbb
rcrl
xor
sub
push
ror
jno
outsb
pop
movsb
icebp
jmp
adc
mov
sti
das
sbb
int
sbb
je
and
lret
ja
push
pop
cli
xchg
push
mov
xor
mov
stc
scas
mov
stos
pusha
out
sarb
fs
popf
mov
push
aaa
daa
cmp
inc
xchg
cltd
dec
push
mov
dec
popf
pop
ret
mov
push
nop
stos
xchg
jns
sub
gs
mov
ret
and
iret
jle
repz
mov
loop
cltd
dec
adc
out
shr
movsb
or
jp
out
xchg
fdivrs
add
shlb
and
ficomps
mov
sbb
fcoms
loop
mov
pop
push
adc
insb
mov
adc
fisubrs
xchg
sub
shlb
ja
mov
insb
sbb
sbb
dec
mov
lcall
xchg
shll
dec
jmp
outsl
push
cmp
dec
cmp
dec
dec
inc
inc
adc
xor
mov
cs
ds
and
add
into
inc
testl
mov
out
push
int3
hlt
aad
fwait
jb
sbb
inc
lds
icebp
xor
push
lea
mov
xchg
mov
cmp
insb
test
dec
ss
xchg
lods
shl
xchg
adc
call
mov
icebp
mov
outsb
outsb
icebp
jg
ljmp
jmp
repz
arpl
fwait
mov
sub
call
xlat
mov
push
fdiv
mov
sbbl
fiaddl
jno
adc
pop
pop
ret
cmp
lret
xor
mov
in
pop
jp
lods
xchg
pop
lods
in
jb
subb
sub
jmp
sub
test
jo
clc
xor
outsb
dec
insl
or
jbe
add
packsswb
xor
lret
stos
in
ds
pandn
or
xor
aaa
and
xchg
pop
and
push
test
sub
mov
mov
hlt
pop
jmp
cltd
movsl
sub
or
xchg
out
adc
ret
sub
or
ljmp
out
push
push
test
enter
pop
aas
int3
pop
loope
mov
cmp
popf
mov
lods
add
bound
outsl
jg
ret
xchg
mov
lcall
adc
xor
pop
repz
sub
cmpsl
repnz
mov
jp
orb
lods
es
fistps
aam
std
add
fldl2t
inc
mov
rcr
dec
test
and
adc
mov
repz
or
xor
cmc
movsl
xor
adc
xchg
loopne
repz
cmp
mov
les
nop
bound
insb
std
inc
scas
daa
call
xchg
mov
subl
lahf
jg
mov
lcall
in
in
push
mov
cmp
adcb
and
sub
stc
sub
aad
and
in
dec
jle
xchg
add
insl
mov
add
mov
inc
lock
dec
push
mov
fsubl
lea
scas
mov
xor
fsubp
mov
sbb
push
std
xor
mov
fimuls
jb
movsb
jae
or
push
popf
push
out
sbb
sub
xchg
daa
inc
popa
fs
jae
inc
cmp
enter
push
in
out
imul
sti
push
jmp
call
pop
inc
or
cmp
pop
mov
lret
or
pushf
mov
je
in
inc
popf
add
mov
lock
and
inc
sub
lea
adc
mov
mov
jp
cwtl
enter
shl
sub
shr
jle
cmp
fs
xor
mov
xchg
mul
jb
cwtl
icebp
mov
or
nop
mov
cvtps2pd
jae
lea
inc
mov
mul
xor
mov
mov
pop
pop
and
mov
mov
mov
les
adc
mov
xchg
fldt
clc
mov
outsl
int3
or
les
inc
imul
fdivrs
into
js
ffree
pop
jnp
popa
jl
jmp
adc
cld
lds
fisubl
sub
out
push
push
stc
shll
aad
jmp
dec
mov
push
pop
packssdw
sbb
jnp,pn
sub
dec
out
adc
outsb
jle
cmpsb
dec
xor
push
in
cmp
movsb
loope
mov
stos
outsl
cltd
sbbb
int3
mov
dec
pop
pop
js
mov
cmpsb
cmovge
mov
fsubr
ret
dec
addb
jl
lret
into
mov
outsl
jecxz
leave
shrl
cmpsl
cmc
out
push
inc
ret
lds
fnstcw
imul
cltd
fnsetpm(287
and
ds
insb
test
xchg
sub
into
mov
test
imul
mov
pop
mov
out
movsb
jl
inc
dec
pushf
jp
push
into
mov
push
and
xlat
pop
cmp
dec
hlt
call
int3
sti
sub
mov
gs
sahf
sub
fldt
sub
out
mov
ja
dec
push
dec
mov
movsb
cmp
loop
xchg
push
xchg
jne
push
mov
push
sub
stc
aam
mov
pop
scas
inc
mov
xor
pop
and
icebp
pop
sub
dec
mov
das
ljmp
popf
fsub
mov
jno
adc
lock
adc
and
inc
leave
rcll
sub
xchg
lock
xchg
push
xor
xchg
aad
sti
xchg
sub
sbb
popf
push
stos
adcl
rorb
arpl
jecxz
cmpsl
xor
jbe
stos
pop
pop
pop
cmp
or
gs
mov
call
rolb
lods
mov
es
imul
mov
mov
sbb
ret
sub
push
sub
movsl
xchg
popf
pop
and
lock
iret
movsl
jnp
lods
adc
andl
cmp
sbb
add
adc
dec
je
daa
mov
cmp
cmp
adc
loop
ss
repnz
push
cld
push
adcb
cmp
ucomiss
ljmp
push
fstps
mov
jecxz
xchg
bnd
push
xor
movsl
sbb
loop
mov
call
nop
sub
lods
push
dec
cmc
pop
setl
sbb
mov
in
fsubrs
imul
push
or
lods
inc
cld
cmpsb
mov
into
pop
test
sbb
outsl
push
sbb
shll
sbb
insl
cli
mov
popf
fists
stc
lea
sbb
mov
lea
lcall
dec
icebp
movsl
sub
or
dec
insl
xor
pop
pop
mov
lock
rorb
or
xlat
adc
mov
and
cmp
sub
insb
xchg
daa
lds
nop
gs
add
push
push
xor
cmp
add
xchg
mov
aam
and
popf
inc
ljmp
popf
adc
adcl
iret
sub
call
jo
jnp
adc
nop
or
mov
xchg
mov
adc
incb
lcall
call
out
lds
nop
pop
xchg
xor
xor
cmpsl
xchg
sbb
fistpl
jb
or
nop
or
imul
shlb
push
xor
mov
imul
mov
dec
and
sub
roll
ja
into
cmp
or
cwtl
fnstcw
inc
je
sub
cmp
sbb
adc
movsb
inc
aas
shrb
inc
ds
nop
xor
mov
and
sbbb
sar
fcoml
add
pushf
rorb
dec
mov
in
jo
pop
pop
out
adc
pop
fdivs
cmpsb
sub
adc
sub
xlat
subb
push
push
mov
mov
popa
mov
inc
mov
mov
in
popf
dec
sahf
outsb
data16
jecxz
lret
cmp
push
ljmp
cwtl
xchg
and
adc
fsubrp
cmp
jecxz
test
cli
inc
jb
cmp
adc
or
mov
lods
xchg
cmc
dec
cs
test
cld
xor
pop
lods
xor
insl
enter
das
insl
adc
jp
jbe
push
out
lods
push
bound
jo
jg
inc
jl
rcl
or
sbb
and
adc
imul
and
or
and
in
in
or
leave
hlt
outsb
jno
cmc
pop
push
mov
in
andl
cmpsb
mov
xchg
cmp
scas
push
cmp
inc
sbb
pop
mov
insb
or
je
cli
dec
hlt
jmp
mov
mov
sub
mov
mov
movsl
dec
jne
adc
cmp
cmc
loop
fsubs
mov
sbbb
test
add
cmp
inc
ret
xchg
nop
std
adc
xorl
mov
outsb
jns
subb
cmpl
insl
ret
mov
xchg
aam
testb
aam
jno
in
jo
mov
xchg
push
adc
push
jmp
jo
lea
sub
push
mov
dec
xor
mov
mov
sub
pop
imul
test
lods
sarl
loop
fdivl
jl
scas
and
inc
mov
pop
push
or
cwtl
mov
sahf
sbb
dec
push
and
leave
push
ja
out
fwait
dec
fwait
pop
ds
and
popf
mov
ds
out
sub
mov
out
mov
push
cltd
sti
shlb
fidivrs
neg
jp
inc
push
ljmp
sub
push
mov
dec
sbb
popf
adc
divb
sbb
mov
jmp
aad
sub
sbb
outsl
imul
lcall
push
xor
faddp
pop
jmp
lahf
loopne
xchg
sub
lahf
sub
push
push
pop
jecxz
push
out
cmp
cmp
cmp
cltd
xor
lret
popa
in
outsb
and
lcall
test
sti
leave
into
xor
fwait
jle
cli
sbb
icebp
out
jbe
ss
stos
sbb
jecxz
popa
fstpl
out
mov
cmp
sti
jo
add
repz
lahf
pop
sub
data16
std
outsb
add
lret
mov
push
sbb
stos
xor
outsb
jecxz
xchg
loopne
xor
jnp
dec
jp
shlb
idivb
loopne
push
inc
jmp
out
xchg
xchg
cmp
xor
div
push
or
xchg
adc
stos
xchg
pop
jg
adc
sub
fstpt
add
push
hlt
cmp
xor
sub
sbb
shrb
scas
data16
icebp
cmpsl
push
gs
sbb
and
or
mov
mov
pop
dec
sbb
inc
cmp
cmp
sub
js
mov
ljmp
pop
inc
pop
adc
dec
inc
adc
xorl
aam
mov
inc
fidivl
inc
nop
ret
xchg
fdivrs
inc
inc
jg
push
imul
add
jmp
lret
fidivl
mov
lret
in
pop
ret
or
push
xchg
inc
push
cmp
dec
mov
cmp
push
shlb
sub
dec
xchg
les
inc
repz
mov
pop
loopne
stos
leave
or
es
out
fstp
jae
inc
popa
adc
inc
ja
imul
xchg
fs
out
pop
in
js
aad
push
test
fxch
es
cli
push
push
jae
and
xchg
out
stos
or
and
or
je
out
pusha
fs
cmc
addb
pop
stos
cmp
push
pop
ds
dec
xor
shll
jno
push
insl
sbb
jno
bound
out
dec
repz
cmp
dec
loope
adc
mov
sub
shlb
repz
jecxz
xchg
inc
cltd
mov
jo
xor
jo
inc
in
mov
jg
sbbb
outsl
mov
xchg
in
addr16
mov
call
add
inc
lahf
hlt
pop
jmp
fsubl
shl
fs
mov
push
mov
leave
aas
mov
lea
xor
push
cmp
adc
pop
addr16
cmp
mov
shrl
cli
out
dec
mov
and
jl
pop
scas
aam
ret
xor
js
imul
bound
icebp
std
jbe
xchg
daa
test
mov
stos
cmp
lcall
fidivrs
xor
inc
int
clc
mov
mov
fidivrl
icebp
popa
aas
aam
gs
mov
xor
mov
js
jg
dec
out
jle
cli
mov
dec
ret
iret
sub
sub
mov
cmpb
jbe
call
js
clc
nop
lret
sbb
loope
sbb
add
and
into
mov
and
sub
int
dec
add
out
mov
xchg
inc
ret
xchg
push
mov
shll
xchg
test
call
fscale
add
xor
rcrl
cmp
mov
and
mov
mov
leave
dec
pop
popa
inc
call
xchg
and
repz
xchg
popa
dec
cmpsb
jbe
imul
sub
adc
lret
sbb
add
push
sbb
xchg
lret
sbb
push
pop
loope
add
mov
lcall
sbb
dec
sbb
pushf
pop
cld
inc
outsb
mulb
roll
lock
jo
or
pop
sub
push
inc
imul
addr16
dec
lea
ss
mov
pop
or
into
lock
rorb
andb
xchg
pop
pop
cld
into
cmp
ds
sbb
jno
mov
scas
mov
adc
int3
push
mov
jnp
fs
rorb
sti
or
or
push
mov
push
je
cld
ds
pop
inc
dec
sbb
dec
xchg
mov
jge
or
add
adc
ret
cmpsl
jecxz
aas
lret
in
dec
loop
sub
and
lea
addl
xor
mov
aaa
push
fwait
jle
movb
and
faddp
call
pop
rclb
mov
add
mov
out
xchg
imul
lcall
dec
fwait
mov
mov
add
idivb
push
scas
jne
lods
add
bound
push
xchg
jecxz
jo
add
xchg
insb
pop
cmp
adc
out
stos
push
mov
xor
jae
inc
rcrl
daa
push
rolb
mov
inc
popf
sbb
mov
dec
aaa
dec
pop
sub
js
les
aas
mov
mov
out
lret
mov
jl
int
int3
jbe
mov
inc
ret
enter
mov
std
int3
mov
push
push
in
jno
adc
sarl
les
icebp
fs
dec
cwtl
and
jns
pop
pop
arpl
or
ja
push
or
xchg
flds
in
stos
aaa
inc
pop
or
mov
jp
inc
int3
jns
xor
outsb
aaa
insl
dec
xchg
lret
mov
cmp
mov
leave
sahf
je
and
mov
faddl
push
out
repnz
mov
inc
std
lea
idivb
xchg
cwtl
mov
dec
lcall
movsl
call
ss
xor
dec
loopne
pop
ja
lods
mov
imul
jle
popa
jle
stc
mov
mov
jns
pop
movsl
sub
mov
xchg
xchg
out
inc
add
sub
sub
test
int3
jmp
cld
sbb
cmc
in
pop
shrb
or
push
jb
mov
std
mov
push
push
iret
fistpll
std
minps
and
addr16
test
cld
outsl
and
je
xchg
aaa
jl
rolb
mov
xor
dec
fcom
inc
inc
xor
dec
lcall
jb
sbb
mov
test
popf
movsb
pop
fldl
lock
xor
sub
out
fildl
fdivl
sub
enter
xlat
jns
js
lods
out
adcl
aas
je
mov
es
mov
movsl
addr16
rolb
add
mov
cld
cmpsl
cmp
lret
enter
sahf
pusha
push
fwait
sbb
test
negb
ljmp
stos
fbstp
xchg
cmp
test
push
push
insl
and
sub
daa
adc
xchg
frstor
sbb
and
mov
xor
outsb
xor
sahf
into
insb
inc
orb
mov
in
adc
addl
inc
pop
sub
xlat
decl
pop
mov
jmp
xor
cld
inc
xor
das
or
shrl
popf
out
cmpsl
dec
xchg
test
fisubl
movsl
mov
add
sbb
repz
mov
std
mov
xchg
hlt
jae
sbb
sub
cmpsl
or
sbb
or
les
mov
js
aaa
addr16
aas
push
xchg
fmull
stos
mov
mov
hlt
out
call
int3
lds
dec
xchg
popf
sahf
add
xlat
ficoms
jbe
adc
loopne
and
js
push
lods
mov
aam
sbb
inc
mov
adc
aas
sti
and
push
aad
mov
rolb
daa
add
pushf
arpl
sbb
je
call
icebp
cmp
mov
sti
cmp
mov
dec
add
xchg
lret
add
stc
mov
or
xchg
andl
out
adc
jo
xchg
mov
cmpl
jbe
lock
sbb
iret
pop
jge
fisttpl
pop
mov
inc
lahf
insb
pushf
add
jmp
ds
xchg
or
or
pop
sbb
pop
xlat
jmp
pop
stos
movsb
gs
push
and
pop
jecxz
adc
adc
cmp
mov
daa
xchg
fcmovnu
push
inc
jl
faddl
jae
lods
mov
jno
ss
out
cmp
ljmp
cs
sbb
mov
cmc
sub
inc
adcl
sbb
xor
pop
jle
out
xlat
rolb
ret
push
jge
lret
xor
leave
fidivs
xchg
lcall
pop
call
sub
dec
nop
shrb
fs
addr16
sub
loopne
add
push
inc
ds
outsl
pushf
hlt
push
ds
aam
jmp
fs
jp
lds
xchg
push
sbbb
ds
repnz
or
ds
add
mov
std
dec
or
inc
and
cmp
xchg
dec
adc
rcrb
mov
push
pop
arpl
push
lcall
lret
pop
in
cli
jo
lret
push
rcrl
scas
xchg
add
xchg
scas
cs
aam
mov
mov
lret
xchg
scas
sti
mov
outsl
and
repz
iret
pushl
inc
std
imul
add
aaa
sbb
mov
pushf
aad
movsl
std
add
popa
mov
xor
movsb
push
popf
pop
scas
jne
add
add
out
insb
dec
adc
call
push
lret
repnz
dec
pop
jp
stos
dec
or
sub
loop
cmp
push
push
ret
int3
jbe
dec
mov
mov
pushf
xor
xor
cmp
adc
mov
inc
push
xor
cltd
int3
mov
or
mov
pop
and
mov
xchg
and
cmp
cmp
mov
fmull
xrelease
pop
adc
fnstsw
jno
in
push
lods
xlat
fimull
jns
in
jns
mov
ds
xor
lahf
fistpll
cmpsb
ficompl
mov
fisubl
hlt
sbb
push
out
adc
sub
and
add
sub
xchg
movl
sub
dec
lret
inc
lods
daa
addr16
je
pusha
mov
xchg
pushf
push
mov
mov
shll
push
mov
sub
adc
xor
insb
clc
push
int3
inc
add
sbb
mov
out
adc
nop
jle
sub
or
loopne
movsb
mov
mov
in
pop
dec
push
daa
pop
jns
inc
jle
scas
mov
int3
andb
insl
cwtl
jle
iret
lret
in
sbb
dec
sti
mov
add
jnp
out
bound
scas
sub
out
lock
jmp
loop
add
mull
fsub
out
shl
and
mov
jb
insl
mov
or
sbb
dec
loop
enter
nop
and
bound
stos
test
xchg
mov
shrb
push
int
scas
mov
lahf
pop
adc
and
sub
xchg
outsl
adc
mov
inc
shl
xchg
shl
and
dec
out
bnd
sub
arpl
sbb
adc
push
fs
push
mov
mov
mov
mov
ljmp
push
mov
mov
mov
xchg
mov
inc
fistps
push
int3
jle
pop
hlt
stos
mov
inc
loopne
sub
loopne
andl
out
mov
and
stos
ret
sbb
rcll
fildl
icebp
mov
call
jge
mov
push
cmp
ret
inc
test
pop
cmc
or
call
add
pop
fs
rcr
add
movsb
mov
lds
out
test
repz
loopne
fadds
xor
fbstp
mov
je
in
ret
ret
in
dec
orl
scas
and
sti
mov
movsl
stos
in
pusha
es
xchg
gs
lock
shll
inc
pop
xchg
sub
mov
push
pop
repnz
pop
outsb
jno
mov
dec
sub
les
xchg
inc
and
jne
xor
into
scas
sar
stos
mov
imul
jo
pop
leave
jne
xchg
mov
movsb
rclb
js
sbb
sub
outsb
sub
dec
mov
and
rcr
insb
and
dec
repnz
stos
add
mov
or
vcvtdq2pd
mov
sbb
bound
popa
cld
clc
jne
pop
sbb
enter
sub
xor
push
xchg
add
mov
sbb
aam
sti
xchg
jbe
or
add
dec
mov
fsubl
sti
pop
jg
inc
jmp
aaa
inc
ss
sbb
icebp
dec
cltd
add
dec
push
icebp
cwtl
je
and
xchg
das
push
xor
dec
je
inc
test
mov
jo
push
jl
jmp
sub
nop
jo
in
in
mov
dec
jle
iret
imul
mov
jg
mov
fcoms
testb
fbld
and
inc
dec
les
ss
stc
pop
add
adc
roll
cmc
mov
xchg
add
cli
test
pop
jg
and
xchg
jne
fnstcw
call
xor
jb
stos
fnstenv
mov
int3
cmp
dec
mov
movsl
adc
repnz
jle
mov
fstpl
imul
push
in
ss
aas
mov
adc
movsl
popf
lea
push
outsb
jo
sahf
jl
sti
popa
lahf
jecxz
testl
pop
cmp
dec
sahf
mov
push
lret
lods
cltd
mov
int
mov
mov
ja
push
push
xchg
cmp
lock
inc
and
xchg
outsb
push
dec
sbb
sub
push
dec
sub
aad
xlat
mov
ss
mov
mov
mov
push
add
and
or
cwtl
push
mov
imull
lods
cmovle
jns
scas
in
dec
fldl
fisubs
inc
dec
rcrl
and
out
pop
in
mov
jno
mov
lods
sub
dec
xchg
push
push
dec
sbb
repz
jle
neg
jg
push
dec
pop
je
or
xor
jl
into
push
push
jg
push
sub
push
pop
fwait
ret
push
pusha
mov
fidivrs
push
pop
xchg
mov
xchg
fidivl
popf
setp
fisubl
pusha
jg
hlt
and
aam
push
pop
ja
push
inc
jge
pop
mov
lret
sub
das
xor
adc
adc
repz
push
gs
sbb
scas
dec
rol
mov
jecxz
ja
push
pop
jb
xor
sbbb
int
jno
push
call
adc
dec
mov
ret
jp
xchg
scas
mov
add
add
lea
popf
mov
jns
push
add
xor
xchg
xor
lahf
in
arpl
mov
cs
lock
cmp
pop
pop
pop
movsb
pop
movsb
mov
mov
push
inc
ja
je
enter
dec
stc
sub
repnz
mov
fbld
ret
dec
add
or
nop
mov
ljmp
je
pusha
xchg
sahf
fisttps
sbb
les
aaa
mov
push
or
pop
jp
add
dec
lahf
sbb
jp
cmp
lret
lret
mov
outsl
or
shld
bound
addr16
or
add
popa
sub
and
andl
adcb
xchg
loope
or
orl
xchg
mov
imul
xchg
mov
pop
loope
pop
dec
ss
into
cmpsb
jg
ja
xchg
xor
outsb
mov
jg
dec
dec
cmp
push
lds
bound
add
jns
xchg
mov
call
int3
sbb
xor
dec
mov
lods
xchg
icebp
in
lret
mov
xor
adcl
sub
insl
das
dec
inc
adc
mov
jmp
inc
cmpb
movsb
int
repz
jns
dec
mov
jg
add
je
test
int3
cmp
imul
adc
sub
pop
pop
jne
cmp
aaa
cmp
cmp
repz
rcl
or
aaa
fcoms
test
pop
fimull
sbb
test
movsl
cwtl
aas
or
negl
mov
mov
loop
stos
mov
and
sarb
testl
in
std
sbb
jno
xor
stc
dec
js
sti
jne
aad
fisubs
push
mov
cltd
loope
mov
mov
jecxz
fnsave
js
inc
jmp
leave
and
adc
inc
movsl
movsl
xlat
mov
fisubrl
pusha
inc
sbb
jb
xlat
cmp
xchg
out
orl
jb
cmp
daa
push
fwait
pushf
fcmovbe
dec
pop
cmp
mov
test
sub
add
sub
aam
jne
stos
adc
shrl
fcoml
mov
dec
push
jge
dec
xor
ja
jo
in
xchg
jno
movsw
jb
sti
sbb
mov
imul
lods
jbe
xor
pop
xchg
mov
jle
pop
inc
push
xor
mov
push
and
adc
mov
sbbb
fs
testb
jns
dec
xor
cmpsb
dec
push
or
pop
adc
scas
adc
movsb
js
inc
rorb
inc
mov
stos
mov
mov
pop
imul
pop
adc
ret
movsb
int
sub
lock
ffree
arpl
bound
pop
jnp
ret
xchg
mov
mov
js
push
arpl
pop
jecxz
and
mov
lret
lods
in
popa
or
sbb
iret
cmpsl
mov
mov
xor
in
sahf
mov
sti
sbbb
push
add
iret
mov
icebp
out
sbb
jp
subb
testb
lret
mov
and
cmpsl
outsl
jecxz
sbb
sbbb
inc
add
adc
lcall
and
addr16
sub
inc
shl
repnz
int
pop
inc
pusha
subl
sbb
mov
fildl
lret
fists
cwtl
and
popa
add
lds
fildl
mov
add
jae
cltd
mul
repz
pushf
cmp
mov
aam
scas
stos
inc
leave
add
filds
jns
aam
xor
jns
dec
mov
gs
inc
add
sub
jle
add
ss
ret
xor
mov
leave
inc
push
jecxz
jmp
daa
ds
mov
stos
vpaddq
or
dec
pop
xchg
sbb
xchg
dec
lock
mov
pop
jnp
das
dec
loopne
sbb
lret
sub
sbb
f2xm1
dec
lea
adc
daa
adc
xchg
cmpsb
stc
cli
pusha
jmp
scas
cmp
dec
sub
or
orl
mov
lcall
push
mov
jae
out
rcll
adc
aam
fidivs
jae
scas
cwtl
push
cld
cmpb
les
push
pushf
add
mov
pop
mov
scas
les
jb
xchg
sub
cmp
pop
mov
push
xchg
xor
sbb
sbbb
adc
push
sbb
es
sub
cmp
out
shl
jbe
es
xorl
mov
jb
ljmp
mov
aam
rcll
cmpsb
insb
movsl
sbb
pop
enter
pop
and
int3
inc
incl
cli
and
jne
and
into
pop
icebp
fadds
out
in
aaa
enter
mov
in
push
arpl
pop
incl
test
jb
dec
push
and
cmp
jp
out
in
jne
cmp
adc
push
stos
mov
cltd
push
pop
sarb
notl
pop
add
icebp
cli
mov
data16
add
inc
fistpll
jno
fxch
fisubrl
adcl
outsl
push
mov
mov
out
push
pop
mov
test
cmc
adc
jo
je
adc
adc
ret
sti
push
jl
mov
sbb
mov
cmp
adc
mov
mov
or
jle
jne
sub
insb
cld
sbb
clc
popf
sahf
stc
out
pop
aas
ljmp
sbb
mov
ret
pushf
dec
sbb
rcll
imul
movsb
out
sahf
icebp
sub
sub
scas
mov
pop
pop
pusha
cmp
cld
loope
lods
mov
lret
stos
cld
jb
add
push
sub
push
ss
test
push
sahf
sub
adc
ljmp
push
mov
iret
fdivr
push
xchg
xor
outsl
mov
push
sahf
jae
xorb
jae
inc
adc
call
or
sub
dec
loop
popf
loopne
jle
fisttps
cmpl
loop
cwtl
adc
fisubrl
in
rorl
xor
int
jg
mov
inc
fidivs
loope
mov
js
inc
fdivrl
into
push
daa
mov
ret
cwtl
test
xor
xchg
xor
sbb
sub
pop
lods
fisubs
stc
lret
add
jg
inc
rclb
movsl
stos
test
cmpsl
pop
outsl
mov
push
adc
repz
les
xchg
sub
cmc
sbb
push
nop
les
out
idivl
mov
mov
in
push
xchg
fcmovnb
pop
sub
stos
popf
addr16
cld
cmc
jbe
mov
das
inc
mov
adc
lock
out
jg
cmp
add
in
pop
sub
lods
mov
int3
in
inc
aad
sub
add
pop
dec
pop
sbb
mov
shr
and
mov
add
and
add
mov
movsb
xor
out
imul
xlat
mov
adc
sahf
cmp
inc
mov
lea
loop
rcl
mov
jb
jb
mov
pop
cli
ror
aad
pop
movsl
sub
ds
adc
popl
pop
mov
push
mov
sub
xor
add
imul
push
fsubr
fcomip
mov
and
cmpsb
jge
adc
xor
xor
dec
or
xor
adc
insb
lahf
sub
xor
dec
lahf
dec
das
mov
jl
pop
lods
or
les
incl
mov
pop
inc
sub
inc
fstpl
loop
xor
adc
jae
xchg
push
insl
lock
inc
or
or
inc
fsubrl
inc
aas
xor
mov
sub
cltd
loopne
mov
gs
clc
push
hlt
std
sbb
mov
clc
jb
outsl
inc
or
int
dec
fldcw
sub
hlt
aam
push
jle
jle
push
or
ss
mov
lods
aaa
mov
insb
lock
jl
jno
cs
lret
das
sub
add
mov
push
add
imul
enter
dec
sub
sbb
in
movsb
lea
pop
repz
mov
push
mov
or
popf
cmc
test
pop
mov
jp
icebp
dec
imul
mov
pop
loope
jge
xor
stos
shl
roll
jae
pushf
repz
repnz
mov
outsb
data16
or
es
pop
lcall
iret
inc
xor
jg
add
imul
jno
cwtl
in
push
arpl
je
and
add
push
fildl
pop
push
arpl
or
loopne
push
add
sbb
movsb
jnp
notb
out
popw
mov
sub
add
jno
stc
popf
sbb
mov
sbb
clc
adc
cmp
inc
cmp
dec
cwtl
cmp
enter
stc
inc
ljmp
mov
adc
cmpb
repz
sub
shlb
pop
pop
add
xchg
popa
out
mov
loopne
gs
ret
rorl
jo
and
xorb
icebp
outsl
addr16
pop
cmpsl
ret
adc
sbb
jmp
inc
push
cli
orl
mov
aam
mov
sub
leave
xchg
outsl
outsl
dec
fisubrl
pop
lock
loope
sub
push
jp
pop
jle
iret
jl
fbld
xor
lods
xchg
xchg
xor
mov
add
in
in
jne
mov
sub
test
out
mov
jb
stos
es
jge
sbb
cmp
fcomps
das
or
mov
adc
sahf
push
ljmp
ljmp
insl
and
cli
popa
cmpsb
xchg
decl
fstpt
sbb
cmpsb
lcall
out
cmp
or
add
int3
xchg
lea
xchg
inc
rclb
into
js
ficoml
int
addr16
aad
jae
scas
jnp
jnp
push
test
add
sahf
arpl
or
fimuls
pop
in
je
or
push
lret
jne
movl
jge
sub
ficomps
fs
xchg
xchg
xor
shl
jno
jnp
mov
and
xchg
cmp
sbbb
enter
fsub
scas
mov
lcall
fisubrs
xor
les
mov
stos
push
inc
sti
popa
xchg
sbb
arpl
test
adc
inc
sub
nop
inc
mov
push
dec
jmp
jnp
sub
cmp
pop
dec
imul
pop
xlat
sbb
addr16
cmpsb
sub
shlb
mov
aam
daa
mov
pop
inc
mov
push
enter
cmp
dec
rorl
push
sti
dec
arpl
dec
mov
arpl
out
sub
cmp
into
sbb
jle
push
out
addr16
dec
mov
ljmp
lods
xor
cmpsl
roll
scas
enter
sub
aam
mov
push
stos
out
mov
stc
pop
cs
insl
popf
cmc
pmaddwd
out
daa
out
cmp
push
cmp
sahf
insl
mov
mov
jle
inc
mov
lock
out
sbb
add
inc
aaa
dec
or
insb
mov
and
adc
or
and
sbb
into
sub
fnsave
pop
add
dec
idivl
xor
imul
int
ljmp
mov
push
cmp
jno
cld
sarl
adc
nop
cltd
lds
das
xchg
sbb
mov
add
ja
pop
subb
hlt
daa
jmp
stos
data16
movsb
inc
pop
mov
mov
sbb
lea
iret
cmp
push
xchg
ror
outsl
popf
gs
dec
inc
or
ret
push
daa
sbbb
data16
stc
or
sub
push
lea
test
xchg
shll
ja
mov
gs
out
xor
sbb
mov
lock
lcall
insl
lods
repz
jb
loope
adc
fsubrl
into
std
lcall
insb
cld
daa
xor
movsl
out
jl
sbb
rcrb
add
pop
or
lods
cmp
add
ja
dec
loop
sahf
mov
push
fdivp
xor
xlat
repnz
jg
and
adcl
nop
loope
fs
mov
add
add
xchg
mov
aas
adc
mov
jbe
ljmp
lods
sbb
jo
jmp
pop
jae
sub
je
or
pop
mov
sarb
cmc
jl
lahf
or
sub
test
adc
add
add
xchg
xchg
mov
lahf
lcall
add
pop
sub
jecxz
dec
add
stc
mov
test
out
xchg
inc
repz
loopne
dec
dec
decb
ds
aas
fst
int3
pushf
cmp
mov
cmp
or
mov
sub
outsl
lahf
adc
stos
pop
sub
jo
mov
adc
or
scas
repnz
or
pop
push
push
repz
pop
cltd
stos
add
and
ja
dec
pop
mov
ljmp
loop
ret
inc
data16
fnsave
mov
in
fwait
push
adc
ss
iret
add
popf
ret
sub
xchg
pop
movsl
sbb
test
test
ret
xor
mov
mov
mov
jmp
cmp
mov
push
lods
pop
adc
mov
sub
out
pop
jae
adc
aas
xor
mov
jmp
mov
subb
test
push
int
popa
aam
popf
lods
mov
mov
adc
mov
fs
negb
in
mov
clc
test
push
icebp
mov
and
ljmp
std
sbb
pop
sahf
icebp
rorb
pop
mov
jbe
enter
insb
test
mov
and
test
cwtl
mov
pop
xor
stc
jge
adc
add
xor
aam
addr16
and
sub
inc
iret
mov
cltd
jno
popf
lea
xchg
pusha
cmp
dec
xchg
mov
mov
mov
jge
push
xchg
xchg
push
imul
bound
adc
push
iret
jno
cmp
pop
std
xchg
xchg
pop
in
push
push
jp
les
stos
inc
fdivs
in
fsubl
xchg
dec
or
xchg
mov
mov
xor
dec
fdivrs
adc
es
adc
xlat
stos
cmp
ds
cmpsl
cmp
scas
cld
mov
xchg
lahf
movsb
stos
xor
mov
sub
adc
jne
push
pop
je
fsubs
lock
das
loopne
inc
mov
mov
sbb
mov
or
shlb
lock
shl
es
or
mov
dec
dec
pop
outsb
cmova
sub
mull
mov
dec
adc
cmpsl
adc
pop
pop
sbb
int3
pop
jp
sub
mov
imul
addr16
inc
dec
enter
jp
out
sbb
dec
pop
cltd
push
lcall
pop
enter
xor
clc
imul
pop
push
push
fldt
mov
notb
dec
jns
xchg
jb
push
movsl
add
xchg
pop
inc
xchg
mov
lea
ret
call
mov
out
jmp
mulb
dec
arpl
add
aaa
sub
icebp
mov
fs
mov
in
mov
dec
and
xor
clc
hlt
movsl
std
ss
test
cs
jecxz
push
add
out
mov
dec
lds
mov
int
jge
mov
xchg
scas
aam
inc
js
dec
xor
hlt
sub
push
iret
sub
mov
fiadds
cmp
cmp
jmp
mov
insb
arpl
int3
call
cmpsl
daa
lcall
xchg
push
dec
test
sbb
sbbl
adc
cld
pop
negb
add
imul
xchg
adcb
pop
pop
test
fdivs
ret
xor
in
incl
cwtl
int
out
xlat
inc
cld
movsb
fistpll
data16
or
fwait
lock
rcrl
mov
js
sub
lea
pop
xchg
dec
call
js
jbe
data16
dec
xchg
icebp
fucomp
pop
fstps
pusha
pushf
lcall
sub
pusha
mov
jnp
mov
ss
js
aas
icebp
or
fs
sbb
mov
pop
xchg
jae
mov
mov
fimull
adc
insb
lahf
mov
lcall
ret
sarb
mov
inc
outsl
lret
ret
call
fildl
ret
push
test
push
roll
pop
js
fstpl
lret
test
add
bound
mov
jno
adc
mov
icebp
loopne
push
aad
movsb
movsl
adc
lea
jl
sub
cmp
jns
mov
jb
mov
xor
pop
aaa
call
clc
hlt
ss
dec
pop
popa
into
or
cmpsl
popf
xchg
pop
imul
mov
into
mov
adc
cmpsl
cltd
and
mov
adc
inc
data16
scas
jl
inc
je
jne
and
cmp
sub
xor
push
adc
orl
in
push
xchg
push
scas
js
test
sub
mov
jne
mov
mov
shll
inc
scas
in
out
daa
fstps
aaa
xor
lea
gs
sbbl
mov
mov
rcrl
xor
sahf
cltd
lret
mov
xchg
sub
data16
mov
xchg
add
sub
xor
mov
in
leave
in
pop
adc
or
adc
and
xchg
or
clc
xchg
pop
pop
gs
fiadds
mov
cmp
jne
outsb
test
out
jo
ljmp
dec
inc
adc
daa
out
add
push
leave
or
jb
or
enter
hlt
test
nop
aaa
cmp
xchg
cmp
inc
sub
mov
movsb
ret
stos
fisttps
jbe
outsb
test
mov
aas
push
mov
inc
and
jecxz
gs
test
cmp
xchg
adc
or
addr16
js
and
mov
das
mov
mov
ja
xchg
add
and
push
xor
loop
loop
imul
sbb
repz
cmc
pop
scas
cmp
sub
xchg
and
sbb
cmp
push
cltd
rorl
testl
scas
repnz
mov
sub
inc
pop
sub
adc
sbb
xlat
js
in
xor
mov
adc
mov
lods
in
scas
push
in
push
fistpl
repz
inc
lock
sti
out
jb
cmp
cli
mov
or
cmp
imul
fisttps
lret
popf
imul
sub
addr16
fmull
out
adcl
shr
push
shl
jbe
out
fiaddl
andb
outsb
shrb
pop
int3
test
xor
test
shlb
popa
out
fnsave
pop
jg
test
data16
fcoml
movsb
addr16
push
lods
or
dec
sarl
cmpb
push
test
sti
test
lock
add
rcr
inc
mov
fdivrp
in
sub
mov
mov
fwait
loopne
add
mov
add
sarb
pop
out
pop
dec
xchg
mov
lods
hlt
xor
in
rcll
bound
sub
sub
stos
pop
inc
sub
hlt
cmp
int3
push
sub
sbb
test
arpl
das
call
mov
hlt
mov
in
je
jns
and
fildll
mov
ret
push
pmulhuw
std
aad
in
mov
into
xor
aaa
mov
pop
ret
out
ret
mov
in
imul
cs
leave
pop
test
aas
leave
mov
lret
aaa
outsl
dec
rcrb
or
enter
xor
ror
enter
fs
jp
push
pop
sbb
sbb
pop
mov
arpl
jl
jno
or
test
pop
fistpll
sbb
push
or
aas
pop
sbb
or
and
push
out
popa
sahf
or
sbb
mov
shlb
test
stos
cmpsb
hlt
mov
push
xchg
add
xchg
popa
rcll
xchg
or
stos
push
das
push
enter
cmc
jo
in
or
mov
loope
add
xchg
sbb
sbb
and
int
popa
fisttpll
adc
and
xor
jnp
std
rorb
and
pop
stos
std
push
adc
mov
movsb
bound
outsb
pusha
xor
cmp
xchg
adc
push
in
test
dec
das
dec
fs
or
add
mov
mov
ss
fsubs
test
adc
sub
sbb
or
pop
and
mov
pusha
shrl
arpl
cmpb
xor
push
adc
fcmovu
dec
ds
out
movsl
mov
push
inc
lods
je
push
outsb
test
lret
pop
imul
scas
pushf
xor
mov
andl
mov
mov
jmp
arpl
or
idivb
mov
ljmp
sahf
out
or
push
and
nop
test
subl
dec
mov
addr16
add
cmp
sahf
jno
sar
and
pop
ds
sub
xchg
sbb
sbbl
call
mov
in
ds
jmp
add
lods
push
pop
xchg
mov
sub
or
js
lods
pop
pop
mov
scas
add
rol
jmp
clc
mov
out
int
jl
fisttps
mov
ror
push
icebp
testb
aad
shll
gs
out
into
sbb
mov
or
xchg
std
or
mov
pop
mov
push
mov
jbe
mov
mov
clc
xor
test
mov
mov
clc
mov
test
je
mov
lea
out
push
adc
ret
cld
mov
fdivrp
sar
dec
adc
dec
sub
mov
inc
out
lds
or
sub
sahf
cwtl
mov
pushf
push
repz
stc
sarb
ja
xchg
xchg
lcall
add
inc
or
jle
pop
js
mov
mov
pop
mov
or
in
sti
push
lea
fmull
into
les
andl
lods
js
in
lock
or
mov
roll
xchg
mov
dec
or
fidivrl
sub
popf
in
in
out
jo
bswap
sti
push
add
pop
jp
fidivrl
push
xchg
popf
push
adc
test
dec
jns
jae
inc
scas
push
aam
lods
add
jae
and
daa
repnz
inc
xchg
aam
push
nop
nop
aad
fists
leave
and
int3
sub
push
xchg
inc
mov
loop
dec
daa
pslld
popa
mov
test
mov
clc
adc
or
popf
xor
loope
test
mov
mov
mov
lahf
into
sub
mov
pop
popf
dec
cmp
out
imul
dec
lret
adc
test
xor
sbb
rorb
iret
jg
test
jnp
cmp
mov
and
mov
test
jo
mov
cld
mov
mov
enter
xchg
pop
fidivs
push
ret
pushf
jl
fdiv
jge
dec
adc
mov
jb
idiv
sbb
inc
repnz
dec
andl
dec
bswap
aam
inc
icebp
insl
cmp
ljmp
fdivr
fistps
scas
icebp
mov
push
cmp
pop
jo
jmp
ljmp
push
lods
or
mov
adc
push
out
gs
push
in
cmpsl
sbb
pop
add
mov
xchg
sti
and
xchg
pop
lods
sbb
sbb
adc
or
leave
enter
pop
add
mov
pop
push
xor
sbb
xchg
je
test
loopne
xor
test
xor
mov
out
xchg
and
hlt
xor
outsl
jbe
mov
lods
testb
xchg
insb
shrl
lods
ds
mov
xchg
sahf
add
cmp
imulb
adc
bound
jecxz
aaa
movsb
jnp
inc
cmp
int
ja
xchg
lea
or
into
cltd
enter
or
lds
ja
in
push
icebp
je
inc
movsb
pop
int3
jo
loopne
xchg
repnz
popa
fdiv
mov
inc
repz
hlt
push
sbb
add
xchg
or
lods
push
inc
sub
jg
out
pusha
jg
js
ret
cmp
xor
and
aam
nop
pop
mov
scas
loopne
sub
cld
loope
js
out
insl
mov
mov
dec
fidivrl
mov
mov
out
add
xchg
add
mov
sbb
filds
scas
pusha
mov
xchg
lret
mov
in
pushf
fcmovu
insb
cmp
movsl
faddl
test
mov
aaa
mov
imul
mov
dec
daa
mov
dec
xor
jne
cmp
sarl
ss
mov
aad
popf
jae
pop
mov
mov
fnstenv
mov
fstl
jge
inc
jo
xchg
mov
sti
xlat
nop
inc
test
ljmp
push
into
pop
and
int3
mov
adc
in
lock
daa
xchg
pop
aad
xlat
int
sbb
push
mov
cmc
lret
es
jge
in
xchg
fimuls
lahf
dec
add
pop
mov
xlat
or
add
stos
adcb
test
popf
push
sub
jae
lcall
jae
pop
push
daa
daa
adc
scas
xor
inc
inc
mov
pop
pop
enter
cmpsb
adc
jmp
rorl
ja
divb
add
mov
sub
repnz
ret
subl
rol
leave
hlt
lret
sbbb
xor
mov
mov
push
push
je
pop
jnp
adc
sub
xchg
xor
leave
add
scas
mov
pop
cwtl
sub
and
enter
test
outsb
inc
jmp
dec
xchg
xchg
mov
xchg
jbe
aad
jge
mov
test
xor
pusha
or
shlb
sbb
and
xchg
outsb
add
or
sbb
inc
pop
lea
jo
int
push
lods
or
cmp
lods
dec
xchg
push
cmp
jns
orl
in
add
out
out
jmp
mov
ljmp
mov
pop
popf
inc
xlat
movsb
icebp
add
and
or
int
idiv
mov
psadbw
xor
jmp
movsb
sbb
setle
repz
add
sbb
sbb
jns
roll
call
cmp
add
in
mov
inc
and
jle
pop
add
lcall
xor
cmpsb
adc
xchg
mov
cmp
mov
movsl
add
mov
roll
inc
insl
and
pop
mov
arpl
test
jns
sbbb
inc
jbe
jno
fstps
or
mov
jge
out
cmp
push
sbb
push
jmp
pop
xor
and
mov
loopne
test
rolb
sahf
loop
pop
pop
data16
fcoms
xlat
lock
sbb
clc
push
jbe
cmp
add
mov
or
mov
xlat
push
push
sarb
push
adc
out
pop
dec
pop
dec
std
and
push
mov
hlt
mov
mov
xchg
mov
xor
subl
shrl
add
rcll
pop
dec
push
lods
push
mov
mov
xchg
js
sub
shll
das
mov
pop
or
dec
inc
stos
sub
dec
shlb
cmp
fidivs
movq
mov
dec
scas
mov
jo
int
insb
xor
xor
dec
dec
std
add
mov
fstl
xor
push
dec
or
xchg
push
or
pop
cmpsb
mov
movsb
xorb
dec
call
fcoms
inc
insb
mov
leave
out
jo
aad
xlat
nopl
push
sub
enter
je
xchg
out
mov
insl
shlb
imull
in
mov
xor
push
cmc
cmp
mov
dec
lods
jmp
test
arpl
mov
pushf
inc
rcll
add
jae
dec
or
sbb
inc
and
movsl
cmp
in
adc
test
dec
int3
sbbl
and
pop
jmp
pop
out
mov
add
mov
movsb
cli
cs
or
or
into
lahf
jo
ss
xor
push
ss
ret
xchg
inc
and
scas
loope
in
mov
mov
jmp
test
pop
inc
xchg
cli
jecxz
std
les
jge
dec
pop
xchg
rcrb
movsb
or
inc
xor
adc
leave
mov
rorl
les
xchg
add
push
fsubrs
or
sbb
in
ds
sbb
and
sbb
push
stos
sub
add
xchg
pop
and
sahf
xchg
imul
ss
push
jle
cld
lcall
and
hlt
out
stos
iret
ljmp
mov
and
test
xor
ret
out
jbe
loopne
test
sub
inc
add
ds
jecxz
shll
pop
cmpsl
test
lcall
xor
jmp
jmp
fidivrl
cmp
xchg
icebp
or
pop
mov
xchg
fidivrl
into
cs
test
add
in
sbb
push
test
xlat
xchg
push
sub
or
adc
or
mov
das
stc
add
sbb
incb
cmova
xchg
add
push
pop
and
jge
mov
pop
jl
imull
pop
fsubrl
test
cmp
int
sbb
jl
scas
mov
cmc
inc
iret
ret
ds
outsb
jnp
xor
mov
jmp
fsubrs
arpl
mov
inc
cmpsb
cmp
cmp
frstor
mov
std
gs
rcrl
fstps
dec
outsb
or
sbb
mov
mov
or
adc
mov
nop
jmp
mov
dec
jo
pusha
inc
jmp
lret
dec
inc
out
mov
idivl
adc
inc
adc
cmp
cmp
inc
adc
push
mov
popa
mov
stc
inc
in
xor
inc
add
jl
jns
mov
pop
in
mov
inc
out
lahf
jne
cli
xchg
cmp
mov
nop
mov
pop
mov
cmp
and
pop
in
aaa
pop
stos
sbbl
push
push
scas
jo
or
jne
addb
sbb
sbb
movsb
inc
xchg
out
xor
push
or
insl
out
ret
fiadds
fdivrp
pop
xor
mov
cs
pop
ret
sbb
shrb
shr
int
pop
sub
fnsave
adc
push
cltd
test
xor
repnz
clc
and
mov
ret
fsubs
cmp
loop
stos
testl
out
out
pusha
outsl
adc
and
mov
jmp
sbb
mov
pop
imul
push
jge
nop
dec
and
cmp
pop
add
add
mov
and
sbb
mulb
add
test
ss
mov
in
aas
add
inc
sti
pop
mov
nop
mov
icebp
pop
xchg
popa
into
loop
sbb
in
pop
dec
sub
sbb
mov
lods
mov
pop
out
inc
fcmovb
mov
mov
sbb
js
inc
out
outsb
stos
clc
push
orl
or
adc
ret
ror
lds
lret
into
jo
scas
into
adc
test
mov
add
push
cmp
imul
mov
cli
js
adc
test
rcl
loop
push
push
aam
bound
inc
pop
push
pop
incb
sbb
dec
jmp
outsl
cmpsb
test
out
sub
and
out
or
inc
cmp
dec
xchg
sub
inc
insb
lds
stc
mov
pop
enterw
or
or
f2xm1
clc
pop
int
push
lahf
lret
xchg
push
imul
adcb
jecxz
aam
mov
outsb
jno
push
add
or
stos
sub
shrl
imul
int
adcb
cmp
and
lahf
rclb
push
push
push
and
int3
inc
or
sarl
movsb
dec
sbb
clc
xlat
adc
popf
ret
cmp
sti
pop
ds
pop
lret
cltd
push
fldl
call
inc
inc
push
mov
or
sbb
xlat
loope
cltd
mov
push
ljmp
lret
dec
pop
cmpsl
dec
mov
pop
mov
xchg
push
ret
sub
inc
rcrb
inc
lds
push
out
adc
add
bound
scas
xor
xchg
push
lret
imul
sbb
enter
cli
lcall
shlb
push
cmp
call
pop
xchg
sbb
ret
sbb
mov
inc
sub
lret
idivl
mov
dec
add
mov
mov
iret
mov
mov
test
aaa
pop
stos
int
and
sub
lahf
fdivs
test
or
adc
push
sarb
sub
jecxz
das
or
sub
and
push
xchg
mov
adc
jle
inc
fstps
aam
mov
mov
std
push
rcrl
jo
dec
sub
jecxz,pt
pop
daa
enter
das
cmp
shl
repnz
add
cwtl
dec
pop
xor
sub
pop
ljmp
imul
inc
nop
push
shlb
sbb
inc
orps
adc
mov
test
scas
dec
jmp
sub
aam
daa
mov
aam
sub
or
out
mov
out
add
jb
adc
xlat
and
decl
push
cmp
pusha
xchg
js
xlat
test
fidivrl
pop
clc
call
mov
sbb
dec
push
and
jnp
pop
sub
mov
mov
xchg
lods
mov
mov
mov
sub
mov
enter
cmc
jns
aaa
lods
ljmp
addb
inc
cli
inc
sub
push
cltd
rolb
dec
aaa
adc
inc
dec
push
xchg
ret
pushf
test
cltd
sarb
in
sub
sarb
fcmove
or
aas
mov
pop
out
in
cmp
adc
mov
jbe
pop
or
xchg
addr16
cmp
in
xchg
push
xchg
or
push
outsl
call
xchg
dec
xor
nop
dec
fimuls
xlat
fstpl
push
sub
sbb
jae
cmp
sti
subl
pop
mov
fbld
rcrb
pop
sub
aad
jae
ficoml
fmul
fists
sbb
pop
cmp
sub
fwait
pop
jae
loope
inc
pop
inc
pop
sub
loopne
test
or
sub
jbe
cs
in
repnz
mov
inc
nop
movl
inc
sbb
imul
iret
je
adc
pop
push
sub
xchg
push
cmc
sbb
ljmp
xchg
or
mov
xchg
fwait
cmp
retw
movsl
cwtl
sbb
in
cmp
stc
xchg
aaa
dec
mov
sbb
dec
sub
fisttpll
adc
fcoml
mov
loope
xor
add
push
fstp
add
jle,pn
push
cmp
xor
pop
ds
fsubp
push
cmp
jl
push
mov
repnz
les
and
and
xchg
xchg
cmc
nop
pop
inc
xchg
add
test
jecxz
xor
mov
imul
add
popa
int3
in
pop
cmp
push
insl
pop
xor
cmpsl
cmp
idivb
lods
std
inc
pushf
jmp
jg
fildll
pop
push
iret
sub
xchg
cmc
add
in
or
sbb
testl
hlt
jge
cmp
sbb
pushf
jo
rorb
xor
repz
adc
outsl
out
xchg
call
fs
jbe
into
bound
sbb
pop
aam
pop
repz
adc
jmp
mov
sub
mov
call
bound
xchg
push
popa
clc
out
das
arpl
cmp
sub
push
jbe
jge
rcl
lods
xlat
adc
and
push
fs
ljmp
cmp
scas
aad
cmp
repnz
sbb
loopne
add
jne
push
int
pop
mov
xor
add
xchg
push
jno
xchg
cmpsl
jge
xlat
dec
pushf
aas
cmpsb
and
mov
test
mov
or
sbbb
scas
mov
mov
divl
sbb
mov
mov
add
sbb
xlat
mov
jmp
sub
push
js
adc
aam
inc
mov
xor
or
cli
sub
push
inc
stos
loopne
in
xlat
xchg
add
call
adc
push
or
push
test
mov
and
lret
popf
fidivrs
and
in
sbb
lret
cmpsl
fdivr
pop
daa
xor
pop
adc
mov
ljmp
jbe
rorl
cmc
or
icebp
mov
push
insb
ret
push
and
mov
in
xchg
jns
std
xor
movsl
xchg
mov
fs
popf
adc
sarl
push
push
inc
repnz
jmp
clc
insl
inc
jmp
xchg
outsb
aam
mov
add
repnz
rolb
xchg
repz
mov
push
add
je
popa
aas
jno
mov
in
addr16
inc
pushl
and
jns
mov
cs
loop
mov
jge
dec
add
mov
pop
xchg
push
int
pop
or
xorb
sbb
inc
loop
cmpsb
iret
sub
push
not
xchg
sbb
xchg
pop
rorb
or
xor
imul
pushl
mov
cmc
mov
lods
inc
add
out
mov
dec
xchg
push
out
mov
shrl
lods
loop
jno
dec
mov
dec
jmp
mov
sub
aam
pop
in
mov
fistps
pushf
push
xchg
or
pop
pop
outsb
and
popa
shll
cmp
xchg
ds
mov
dec
cmc
jns
cld
ja
jno
scas
clc
push
in
lret
stos
pop
xchg
mov
je
and
jb
and
insb
push
mov
jbe
pop
push
push
sbb
cwtl
test
push
repnz
cmpsl
jmp
sbb
pop
mov
ss
pop
sbb
in
test
xorb
cld
mov
pop
shlb
sub
imul
das
daa
loopne
rol
enter
jmp
cwtl
inc
adc
mov
xchg
lods
xor
mov
bound
jge
add
arpl
xchg
daa
xor
fsubrs
imul
jle
cmpsb
cmp
dec
lds
leave
not
jge
imul
and
inc
aad
outsl
pop
sub
add
call
push
push
jnp
call
sbb
push
lahf
daa
movsl
xchg
jb
push
scas
lahf
andb
icebp
je
add
xchg
inc
adc
mov
fisttps
addl
sub
mov
xorl
mov
sbb
push
adcb
js
incb
int3
add
scas
out
repnz
movsb
push
dec
xor
mov
jle
loopne
outsb
pop
jecxz
xchg
pusha
shll
aaa
popa
lcall
fists
and
dec
xchg
mov
inc
xlat
add
daa
push
lods
out
popf
lcall
fcompl
sub
push
mov
mov
cld
addr16
inc
xchg
dec
lret
cmpb
push
lock
mov
xchg
sbb
xchg
rorb
or
and
stos
repnz
movsl
clc
mulb
enter
or
and
and
sub
les
xchg
cmpl
popa
cwtl
cmpl
add
dec
ret
shrb
push
push
jl
inc
push
rorb
pop
mov
xor
aas
xorb
loope
jmp
jbe
jl
xchg
fldenv
push
fdivrs
scas
movsb
inc
push
das
push
push
out
popa
das
movsb
mov
jns
dec
cli
cmp
mov
push
jge
mov
xchg
cmpsb
mov
add
mov
faddl
xchg
and
cltd
and
jbe
fstl
dec
or
aas
dec
imul
adc
movsl
adc
outsb
loope
dec
out
add
mov
in
repz
sar
arpl
sub
mov
pop
xchg
cmp
stos
mov
sti
nop
rol
repz
pop
and
cmp
cld
push
stos
sub
imul
clc
inc
aam
dec
jns
push
cmp
xor
pop
les
outsl
xor
push
in
mov
mov
in
fstps
in
mov
fstps
je
mov
repnz
inc
or
test
outsb
inc
cmpl
je
or
inc
jbe
int
push
ss
xchg
mov
test
mov
scas
xchg
mul
cmpsl
dec
mov
dec
jb
bound
xchg
test
sbb
mov
or
pop
jne
pop
into
add
xor
adc
push
lret
rcrb
rcll
in
je
pop
pop
pop
jae
mov
js
push
sbb
jg
dec
outsb
fadds
xchg
xor
adc
mov
mov
push
push
fwait
cmp
movsl
dec
and
sub
movmskps
push
dec
adc
shl
js
pop
mov
insl
mov
dec
mov
es
lcall
popl
adc
or
dec
mov
mov
lcall
js
xor
pop
in
sub
jae
mov
cmp
sub
cmpb
lea
aad
add
and
add
int
sub
inc
xchg
cwtl
andb
lcall
or
arpl
adcl
cmp
rorb
fldt
push
mov
test
in
insb
sbb
ret
loope
inc
icebp
dec
pushf
inc
xor
xchg
scas
or
loopne
push
xchg
lret
cli
jnp
fcomp
movsl
adc
dec
jecxz
aas
lret
das
dec
add
xchg
js
jmp
jmp
cmp
call
jecxz
xchg
shrl
push
repnz
push
mov
dec
cmc
out
xchg
outsl
inc
bound
push
or
call
es
dec
pop
pop
mov
adc
lods
jl
add
ss
cmp
popf
push
mov
pop
sbb
xlat
jb
push
ja
adc
popf
inc
jle
mov
rcl
pop
leave
adcl
xchg
jg
jb
outsl
rcrl
fdivp
ret
or
cli
push
sti
rcll
cld
pop
decb
add
lret
ja
sbb
faddl
out
mov
jns
push
bound
adc
je
in
sub
lods
int3
cli
pop
adcl
fcmovnbe
int3
or
rcr
dec
in
jns
sub
sbb
data16
movsb
jb
cltd
loopne
fnstsw
xchg
pop
xchg
xchg
cmp
in
sbb
mov
adc
repnz
push
and
sub
add
andl
add
mov
xchg
cmpsl
cld
cmp
dec
loope
outsl
mov
jne
or
es
pop
fimull
mov
cmp
and
rcrl
stos
xor
in
call
lret
enter
aas
data16
aam
pop
cmp
in
dec
jle
jecxz
imul
sbb
out
leave
jb
dec
lret
ret
and
mov
sahf
jp
insb
stos
in
push
xchg
dec
mov
shll
leave
add
repnz
js
and
or
lahf
dec
mov
pusha
insb
out
ret
or
mov
jno
mov
mov
xchg
fs
movsb
mov
nop
cmpsb
jl
sub
lea
incl
cmpsb
xlat
popf
dec
insl
cmp
or
push
aaa
jle
or
aad
lahf
jbe
imul
adc
mov
add
sub
stc
out
jle
das
insl
push
pop
test
sub
stos
mov
sbb
nop
sbb
push
aam
cmc
and
dec
enter
sbb
cmpsb
push
shlb
sub
xchg
mov
cmpsl
mov
mov
loope
pop
pop
push
inc
inc
ficoml
mov
dec
mov
mov
pop
xchg
and
push
mov
xchg
jo
cltd
xchg
mov
int
push
ds
cmp
pop
add
sub
push
gs
pop
nop
scas
clc
mov
in
leave
xor
mov
xchg
into
cmp
aaa
xchg
or
sbb
cmp
ret
jle
sbb
xor
daa
std
jl
jmp
jno
mov
das
cld
dec
icebp
mov
push
mov
hlt
andl
movzwl
icebp
pop
jge
sub
mov
adc
jb,pt
pop
and
or
es
dec
pop
adc
and
addr16
jae
or
popa
cmp
cld
jne,pt
aad
loope
mov
xchg
mov
outsl
xor
push
enter
add
inc
jl
es
shll
add
ret
mov
aam
or
out
roll
movsl
sub
pop
pop
std
or
jne
xor
sub
sub
rcrl
xor
out
daa
outsl
mov
inc
aad
test
movsl
or
dec
in
outsb
mov
arpl
jne
pop
std
into
das
inc
jmp
cmp
cmp
jecxz
data16
scas
inc
xchg
mov
cmp
xlat
push
div
insl
add
jle
adc
push
pop
shll
jne
cmp
sub
inc
add
push
or
dec
popa
xor
cwtl
push
xchg
in
lds
rorb
and
jno
lods
dec
lock
loop
insl
fcoml
aas
cwtl
xchg
jnp
mov
adc
shl
or
adc
aaa
jmp
inc
ja
data16
ljmp
sub
data16
add
sbb
mov
sbb
add
int3
popf
add
push
fsubrs
mov
adc
inc
xchg
adc
jne
sti
aas
cmc
out
insl
pushf
xor
sahf
hlt
clc
out
mov
mov
add
xor
lods
or
ljmp
cwtl
dec
pop
mov
push
and
lcall
xorb
adcl
insl
push
mov
outsb
sub
jo
cmp
sub
sahf
cs
iret
mov
xchg
mov
add
fs
aas
jb
xchg
mov
repz
mov
sub
xchg
and
fstps
inc
rcr
dec
xlat
data16
push
cmp
push
adc
ret
ljmp
mov
mov
mov
inc
shl
les
lret
icebp
jne
adc
mov
adc
outsl
push
and
call
loopne
xor
jno
push
sub
je
es
push
dec
jnp
add
or
push
jl
inc
xor
rol
inc
or
js
jp
xor
outsl
push
loopne
and
jb
xor
outsb
adc
icebp
xchg
cmp
sbb
cld
hlt
in
push
mov
push
cmc
dec
mov
inc
push
mov
or
xchg
cmpsb
jmp
aaa
and
sub
popa
add
push
in
cli
push
sarb
inc
icebp
loope
fwait
daa
sahf
or
mov
in
sti
gs
fs
push
push
jns
inc
int
cmp
je
push
mov
dec
push
lods
pushf
iret
cmp
dec
leave
scas
scas
lret
inc
sahf
pop
mov
orb
mov
xchg
test
jne
cwtl
insb
test
mov
arpl
mov
scas
popl
jo
xbegin
fiaddl
std
inc
ret
push
popf
stos
mov
rolb
ss
xchg
or
iret
mov
cs
pop
xor
lahf
mov
mov
xchg
imul
je
mov
movb
push
xchg
pop
cli
mov
loop
fwait
mov
inc
lahf
and
mov
lock
xchg
push
push
addl
or
stc
jb
shll
or
jle
xor
and
pushf
daa
outsl
fildl
pop
std
ja
cmpsb
test
add
rorb
std
xor
arpl
mov
addr16
fiadds
sbb
aas
push
insb
fdivrs
les
xchg
insb
mov
ror
ret
pushf
mov
xchg
sbb
xchg
movsb
int
mov
push
xchg
cmp
out
dec
xchg
cwtl
jmp
sub
sarl
aad
fcomps
ud0
shl
ss
mov
iret
mov
xor
shll
push
call
mov
sub
dec
mov
imul
dec
push
inc
loop
inc
sti
cmp
push
jnp
fsubp
mov
fisubrl
push
jecxz
dec
rolb
dec
adc
das
stc
dec
sbb
mov
mov
je
out
cmp
xchg
xor
adc
stos
icebp
sub
adc
push
adc
mov
je
pop
arpl
push
push
jnp
push
leave
xchg
lret
sub
mov
hlt
mov
cmovg
dec
insb
je
push
into
sbb
push
loop
imul
inc
jns
push
pop
jl
sbb
fldl2t
xor
in
out
mov
out
shll
in
pop
in
popf
shl
inc
xchg
into
xchg
fwait
push
pop
sub
ret
aam
shl
pop
mov
out
xchg
mov
mul
fistpll
push
xor
mov
push
daa
in
test
jle
test
sub
add
adcb
mov
lds
xor
add
ss
fstp
pop
mov
int3
dec
jnp
ret
fsubrl
out
fidivl
and
push
adc
xchg
fs
in
and
jl
rolb
out
and
mov
pop
mov
sarl
mov
cmp
dec
movl
jmp
sub
sbb
in
mov
push
dec
adc
mov
inc
cmp
shlb
scas
lret
jg
push
test
jo
xchg
mov
subl
movsb
test
cmpsb
lahf
xchg
stos
xchg
dec
inc
and
popa
push
cltd
fbld
enter
jg
es
cmpsb
in
enter
imul
xchg
adc
mov
ljmp
lcall
jecxz
lahf
shrl
mov
xor
xchg
pop
dec
pop
mov
adc
cltd
or
arpl
push
repnz
xor
fisubrl
shlb
dec
pop
outsl
repnz
test
out
inc
dec
or
lock
dec
ret
mov
aad
push
lret
xchg
imul
mov
clc
jl
loop
sbb
bound
sbb
jmp
push
je
inc
sub
xchg
dec
aas
rorb
push
mov
hlt
push
jnp
fisttpll
sub
aaa
pop
cmp
dec
stos
mov
or
and
jg
jo
popa
xchg
xchg
ret
enter
mov
repz
std
and
scas
sub
sbb
cmp
repnz
jae
out
rorl
int
push
sbb
mov
pushf
mov
in
push
mov
ficoml
lea
not
outsb
push
int3
int3
and
mov
in
pop
lret
mov
sbb
cmc
or
imul
mov
test
mov
aaa
sub
or
aad
iret
outsl
xchg
mov
jo
dec
test
xchg
aad
inc
xor
jmp
test
lods
inc
and
xlat
mov
add
call
push
mov
pop
es
movb
in
adc
sub
or
mov
js
adc
mov
cmpsb
inc
jno
xchg
mov
or
xchg
mov
mov
test
lea
out
stos
lret
mov
scas
popf
xor
pop
dec
jb
jg
subb
push
sub
in
sbb
loop
addr16
mov
insb
ljmp
dec
dec
push
push
flds
cmp
xor
int3
enter
ds
and
inc
out
mov
das
call
incb
mov
xchg
insl
repnz
mov
cmpsl
test
xchg
jmp
push
jg
or
jb
movsl
dec
sbb
push
or
push
repz
sti
cmp
fdiv
movsl
cmc
or
and
mov
mov
pusha
sti
movsb
lds
ja
mov
call
xchg
dec
or
arpl
ss
std
push
mov
out
fists
lods
imul
fmul
xchg
jle
mov
enter
popf
testb
fs
sahf
pop
pop
pop
cmp
add
mov
pushf
dec
push
cmpsb
js
mov
orl
imul
mov
sub
scas
pop
and
lret
or
xchg
pop
out
xchg
jecxz
inc
add
es
fcompl
cltd
jmp
pmaxub
mulb
xchg
das
cs
insb
push
js
loopne
or
fimuls
negb
pop
add
pop
push
lret
sbb
stos
xchg
ds
inc
xchg
imul
js
add
ret
rorl
mov
or
pop
cmc
pop
jg
inc
imul
xchg
xchg
add
xor
aas
negb
rorb
hlt
out
dec
into
lahf
stc
mov
scas
push
out
fidivs
loopne
shrb
cmpsl
or
jne
iret
call
mov
dec
icebp
sbb
xchg
pop
adc
ret
add
leave
cmp
inc
negb
adc
ret
mov
jp
vpextrw
lds
jl
mov
ret
and
xor
inc
add
arpl
xor
out
cmp
fistpll
pop
call
je
pop
ss
imul
outsl
pop
ret
imul
call
jp
insl
outsl
das
stc
inc
and
xchg
mov
adc
jnp
data16
lea
out
inc
and
mov
inc
insl
cmp
sbb
jg
stos
add
mov
xchg
sbb
sub
frstor
fisubrl
ds
jecxz
push
ljmp
sahf
xchg
mov
inc
aas
movsb
push
dec
repnz
dec
pop
xor
xchg
dec
mov
xor
sti
jg
in
and
pop
xchg
mov
or
out
outsb
mov
push
or
loopne
mov
sub
in
aam
dec
data16
dec
out
inc
cwtl
and
mov
lock
andl
and
pop
daa
sbb
out
jo
in
pop
push
div
sbb
cmpsb
je
inc
dec
mov
je
pop
and
int
pop
push
stc
adc
mov
pop
pop
fimull
fcomip
jmp
rorl
mov
inc
xchg
xor
xor
movsb
insb
lret
adc
mov
jmp
jg
lods
sub
push
lret
into
jle
mov
dec
add
xor
fistpll
sbb
add
fwait
or
push
in
cltd
lock
movsl
cmp
dec
cltd
std
sub
mov
dec
push
fdiv
mov
sbb
pop
or
cltd
adc
pushf
xchg
leave
sub
dec
es
aas
mov
push
jno
cmp
lea
mov
xchg
popf
xchg
out
out
pop
fdivl
stos
pop
icebp
mov
aad
test
leave
ds
lcall
jo
aaa
jge
jl
mov
movsb
enter
shlb
stos
push
js
sub
cwtl
lahf
scas
lahf
leave
inc
push
enter
js
pop
mov
push
inc
test
inc
adc
mov
inc
pop
jp
pop
ss
mov
sar
or
sahf
mov
inc
es
xchg
inc
fnsave
mov
imul
mov
in
cltd
int3
stc
mov
les
jnp
int3
loope
stos
repnz
xor
push
adc
testl
sub
inc
or
xchg
mov
mov
xchg
incb
inc
sbb
test
mov
xor
xor
mov
lcall
inc
ljmp
rcrb
lods
aam
adc
mov
aaa
jae
jmp
mov
ljmp
add
test
pop
xchg
call
loopne
std
mov
and
ret
outsb
cwtl
sbb
pop
loope
pushf
push
mov
aaa
out
scas
cmpsb
popa
rorl
xor
push
xchg
in
test
fs
mov
dec
dec
or
shrb
repnz
xchg
test
cwtl
shlb
inc
aam
les
xorl
push
push
jne
sub
or
lock
cmp
movsb
fs
fdivl
les
add
dec
jns
imul
xchg
mov
and
jne
adc
pop
lock
test
sbb
movsl
xor
test
jnp
sub
mov
and
lcall
xor
je
dec
lods
jmp
std
test
fst
sub
loopne
mov
xor
imul
mov
nop
xor
mov
lds
pop
mov
mov
fmuls
or
push
insl
xchg
subl
jle
add
mov
imul
lret
fstl
cmpsb
lock
out
cmp
pop
cwtl
inc
push
sub
inc
or
movsl
xor
push
clc
sti
imulb
out
xchg
out
add
jecxz
push
mov
fs
pop
xchg
sub
mov
or
das
jnp
clc
lret
in
cmpsl
daa
fnstenv
aam
lahf
fmul
inc
rcl
sub
xor
push
movsb
mov
pop
cmp
fistl
adc
icebp
inc
stos
cmp
sbb
push
cmp
shll
push
loop
cmp
push
imul
ljmp
into
mov
jle
lret
dec
pop
mov
mov
xor
out
push
loopne
test
nop
icebp
xchg
jge
andl
mov
xorl
aad
add
xchg
mov
jmp
sub
push
movsl
js
xchg
inc
scas
jns
mov
mov
mov
mov
daa
repz
jle
je
das
fneni(8087
mov
lret
sub
jl
jle
and
ljmp
xchg
pop
sbb
nop
inc
push
push
xor
out
jae
sbb
push
push
cmp
xor
cs
out
enter
sbb
cli
popf
lcall
mov
lret
int3
loopne
sbb
push
pop
in
sbb
std
je
aad
add
adc
popl
cmpsl
xchg
stos
pop
pop
add
les
pop
jbe
ret
cwtl
pop
sahf
fldl
out
out
sbb
in
lods
fisubrl
cli
adc
fisttpl
daa
mov
push
ret
cmpsb
push
test
cli
jns
pushf
sti
cmp
dec
cld
icebp
mov
mov
in
js
jecxz
mov
mov
sub
fcmovbe
les
mov
scas
into
cmp
mov
js
sbb
push
cld
repz
andb
movsb
sub
inc
mov
or
fs
xchg
mov
frstor
sarl
mov
jnp
xchg
test
mov
in
sbb
lret
icebp
mov
sbb
arpl
cmp
addr16
aam
sub
cmp
dec
add
push
adc
pop
enter
ficomps
push
and
jno
retw
pop
xchg
in
push
sbb
mov
push
jecxz
leave
loope
sub
stc
pop
jp
push
subb
clc
mov
fcoms
xchg
shlb
add
push
mov
mov
pushf
scas
ds
int3
rcrl
add
in
add
into
pop
mov
push
in
repnz
jo
clc
cmp
leave
ljmp
daa
jg
and
loope
push
adc
lods
in
jns
sbb
dec
pop
sti
loope
push
test
mov
pop
cld
shlb
scas
scas
and
fisubrs
push
jb
insb
or
rcrl
and
cli
pop
fildl
dec
push
lods
mov
xor
lock
inc
out
lcall
seta
dec
xchg
call
ss
leave
addl
pop
aad
cmp
mov
pusha
aas
imul
cld
clc
ret
test
lret
push
xor
ret
cs
or
out
insl
mov
xor
lret
shlb
sub
movb
jg
xor
enter
add
jno
call
mov
add
push
insb
mov
sbb
xchg
mov
sub
movsb
xchg
lods
sub
pop
dec
stos
rorb
outsb
inc
pop
icebp
fists
test
jbe
aam
cmc
sarl
xor
adc
xchg
or
cmp
lahf
adc
bsr
subb
or
out
mov
xchg
adcl
jle
jle
pop
shlb
inc
test
sahf
jae
shr
cmp
pushf
adc
dec
adc
sub
cmpsb
pop
scas
cmp
lods
sub
push
decb
push
and
sahf
jno
or
sbb
shll
cmpsl
jnp
push
jg
pop
pop
cmp
nop
mov
push
lret
fbstp
jmp
loopne
sarb
jmp
cmp
lods
shl
andl
pushf
sub
stc
std
pop
into
mov
push
fdivrl
addr16
mov
stos
lock
inc
jne,pn
xor
push
mov
xor
jne
out
pop
xchg
xchg
movsb
fs
jecxz
sub
stc
dec
je
mov
mov
jne
pushl
sbb
ficompl
adc
push
xchg
dec
xchg
loop
jl
aad
daa
xor
mov
mov
mov
jge
mov
push
push
fstp
test
pop
shlb
cmpsl
std
lods
mov
mov
nop
data16
loope
daa
or
aam
cmp
fmuls
out
xchg
mov
in
movsb
sub
sub
jae
adcb
leave
cld
mov
aas
scas
sbb
or
cmc
mov
adc
jmp
jmp
fdivl
scas
popl
or
ljmp
repz
adc
or
sbb
pop
das
stos
movsb
daa
cs
push
into
sbb
adc
js
movsl
paddq
dec
das
fadd
inc
sti
sti
mov
cs
mov
cmpsb
add
xchg
rcrl
sbb
dec
fbstp
repnz
jmp
inc
in
mov
ds
mov
jge
outsl
fsubrp
pop
lods
inc
pusha
scas
mov
mov
push
jns
mov
data16
sub
pop
jnp
and
xor
push
add
stos
pushf
mov
jae
xor
or
int
xchg
push
mov
mov
dec
adc
imul
addr16
xchg
inc
roll
xchg
xlat
inc
lods
mov
pusha
aam
jp
lcall
test
pop
je
loop
inc
sahf
jno
mov
xchg
ss
addr16
aam
inc
and
pop
lods
int3
dec
out
lret
lret
orb
push
cmp
or
fnstenv
push
xor
mov
sbb
jle
jo
dec
dec
test
xor
mov
sbb
sub
sbb
xchg
jmp
jo
dec
dec
addr16
aaa
dec
push
dec
push
jp
add
add
dec
jecxz
mov
xchg
stos
fcoml
xor
jl
add
hlt
test
mov
mov
pop
sbb
cmp
push
inc
sub
jp
icebp
xchg
dec
cmpsb
aas
adc
cmp
push
jo
and
mov
int3
sbb
int3
jns
int3
xchg
sub
mov
dec
push
mov
and
dec
popa
ficompl
insb
ljmp
lock
aam
lea
pusha
data16
mov
xor
mov
pop
mov
ficomps
inc
push
ljmp
cmp
jl
repnz
ja
xchg
das
xchg
in
mov
les
shl
mov
mov
pop
mov
jae
ret
fimuls
clc
cmpsb
adc
loop
jl
es
ss
dec
les
xor
cmp
inc
aas
lret
cltd
cli
jmp
cwtl
adc
outsl
mov
fwait
mov
sti
xchg
lea
in
xlat
jbe
xor
adcl
push
push
fwait
xlat
mov
and
mov
sbb
jnp
xor
inc
and
jp
lret
mov
mov
sbb
inc
ficomps
dec
int
sub
pushl
or
pop
pop
lea
sbbl
push
jne
ss
and
pusha
xchg
enter
fsubrp
or
ss
mov
mov
enter
test
stos
in
push
leave
out
ret
dec
mov
lock
mov
jmp
xchg
into
mov
mov
das
mov
out
nop
icebp
adc
and
fwait
and
adc
and
jae
fcmove
jb
aas
adc
mov
daa
sub
rcrb
push
testb
jne
mov
push
add
and
push
push
xor
repnz
fidivrs
jge
daa
push
jge
jg
lcall
movsb
mov
mov
add
cmc
lock
fstpl
and
shll
sub
xchg
push
ret
push
scas
mov
inc
shlb
dec
xchg
scas
and
xlat
mov
or
pushf
scas
std
pop
call
nop
outsl
jo
fucomp
jb
xchg
dec
inc
addl
sub
cmp
lds
ja
mov
sbb
cmp
es
jle
outsb
xlat
or
mov
add
out
mov
mov
adc
adc
adc
xchg
add
repnz
cmp
xchg
mov
xor
pop
mov
mov
xchg
adc
add
icebp
clc
ret
lahf
mov
aam
xor
insb
or
add
sbb
xor
ja
mov
and
add
dec
fstpl
sub
into
mov
pop
hlt
aad
ds
daa
gs
jl
fwait
addb
push
sub
mov
inc
pop
and
push
sahf
sbb
inc
push
andl
mov
pop
add
test
xchg
mov
fucom
out
push
test
in
adc
int
clc
out
repz
loopne
pop
jecxz
scas
and
or
mov
loop
or
and
inc
dec
and
int
mov
shr
mov
push
leave
mov
jno
aas
pop
ret
inc
and
and
addr16
xor
icebp
cmp
sbb
mov
jae
adc
mov
sub
mov
int
lret
dec
stos
in
push
mov
cmp
xor
sub
daa
bound
pop
and
loopne
out
cld
mov
xor
ficompl
ret
add
fistpll
cmp
clc
loope
sti
xchg
inc
ljmp
xor
rclb
std
or
dec
sub
aam
cmp
loop
and
mov
and
mov
sarb
js
sbb
fistl
jge
mov
jp
dec
dec
in
sub
add
pusha
daa
push
mov
sub
aaa
cmp
jne
fs
add
enter
sub
jge
or
mov
pop
jns
in
pusha
push
mov
cs
sbb
sti
clc
xor
adc
xchg
mov
dec
loop
pop
cli
pop
filds
ljmp
jne
cld
fldenv
lea
dec
xchg
mov
add
bound
jecxz
sbb
adc
or
insl
popa
popa
pop
nop
pop
jne
sbb
mov
mov
leave
cltd
pusha
jb
cmp
adc
lret
stos
jl
dec
sbb
in
cmp
daa
push
std
insb
fisubl
xchg
jl
hlt
sub
lret
sbb
in
xor
mov
movsl
mov
adc
jmp
arpl
or
insl
loopne
jmp
pop
je
push
xchg
push
mov
or
ret
push
push
xor
jbe
fadds
ljmp
push
cld
push
sbb
shll
out
hlt
push
std
ja
lret
scas
dec
fnstcw
into
jae
add
pop
sbb
fs
in
in
out
sbb
insb
addl
add
outsl
or
ret
mov
lds
add
mov
data16
mov
mov
jecxz
in
mov
cmc
sub
leave
testb
xor
sbb
sbb
jb
in
out
ss
test
hlt
jb
push
ret
decb
push
jne
stos
pop
decl
push
mov
sub
in
cmp
popf
push
sub
push
cmp
jno
cmp
idiv
lods
mov
idivl
rolb
ficomps
adc
sbb
ja
into
cmp
lcall
pop
adc
pop
jo
repz
dec
iret
xchg
clc
pop
dec
sti
mov
and
cmp
pop
mov
xor
mov
and
inc
lret
lea
adc
aaa
lret
push
pop
sbb
test
mov
sub
enter
cltd
gs
jmp
loopne
jno
adc
mov
fidivl
lock
cmpl
mov
mov
lock
lock
outsl
xchg
movl
orb
insl
sbb
in
xchg
dec
cwtl
push
pop
add
push
test
ss
fbld
imul
mov
outsl
or
inc
movsb
inc
out
outsb
mov
xchg
jbe
addr16
inc
loopne
pminsw
sbb
push
arpl
rorl
inc
mov
ret
mov
sahf
jnp
lret
stos
je
pop
popf
ret
aam
add
jmp
inc
cli
push
cld
dec
and
xchg
push
repz
pop
outsl
mov
xchg
push
outsb
bswap
and
mov
test
hlt
push
push
out
jle,pn
in
dec
std
orl
js
dec
dec
mov
cmp
call
push
sub
in
cmpsl
gs
inc
scas
xor
mov
addr16
stc
into
jb
out
mov
fldt
dec
xor
pop
sub
popa
lret
je,pt
enter
insl
cltd
aas
pop
cmpb
or
jno
ss
or
add
out
fmuls
inc
lea
fadds
jecxz
enter
inc
mov
clc
adc
in
mov
sbb
ds
fildll
pop
fstpl
shll
maxps
outsb
xor
mov
mov
jmp
fcmovnbe
xchg
xchg
pop
testl
jecxz
jl
aaa
inc
test
lea
stos
pop
loopne
gs
push
mov
fsubrp
shrl
insl
pop
jb
sbb
mov
and
xor
push
stos
mov
ret
pop
mov
jg
cmp
ss
xchg
inc
adc
ret
fldenv
jmp
mov
mov
pop
push
lods
cmc
divb
adc
pusha
ja
ret
cs
dec
xor
adc
orl
out
lock
nop
inc
cli
std
cmc
sarl
cmpsl
and
mov
js
push
outsb
aas
pop
scas
sub
add
adc
jo
jbe
or
je
dec
sub
mov
ljmp
mov
lcall
jge
repnz
mov
stos
and
or
movsb
jmp
int3
out
mov
cmp
adc
mov
repz
dec
test
sub
jno
test
lahf
mov
and
aam
add
jmp
cmpsl
xchg
mov
fistpl
in
inc
jnp,pn
aaa
cli
push
stos
or
fbstp
bound
in
pop
jp
mov
dec
sbb
adc
mov
cmpsl
daa
in
hlt
sbb
xor
cmpsb
iret
enter
mov
loope
cmc
pop
pop
push
negb
mov
sub
mov
jl
fidivl
repz
mov
mov
daa
xor
arpl
sub
jmp
cmp
jne
adc
jbe
flds
mov
pop
pop
int3
ret
push
iret
outsb
mov
ret
and
mov
fnstenv
and
es
aam
out
xchg
xchg
pusha
mov
push
jl
and
test
int
dec
ficomps
xchg
lahf
stos
mov
dec
mov
inc
pop
cmp
call
sub
sbb
lods
sub
xchg
adc
cmpsl
mov
mov
out
xchg
data16
jmp
shrb
outsl
mov
mov
xchg
add
xorl
sti
jnp
push
cvtps2pi
fwait
movb
or
and
lock
popa
adc
pop
adc
inc
sbb
filds
inc
xchg
lahf
cltd
lahf
or
jmp
loope
scas
mov
fcmovne
lea
insb
and
loop
jg
sahf
scas
adc
sub
mov
mov
outsb
stos
mov
inc
dec
mov
inc
jmp
aam
imul
add
sbb
jnp
and
adc
cmc
dec
xchg
rorb
data16
mov
lea
mov
cmp
test
lcall
xchg
pop
or
sti
dec
decb
mov
int3
test
push
add
or
sarl
sete
cmovb
test
mov
negl
loope
xor
mov
inc
popf
popa
mov
sub
pop
shrl
jl
pop
mov
sti
test
inc
and
push
out
fcoms
adc
pop
adc
mov
lret
push
std
cmc
jle
xor
sbb
lahf
adc
xlat
bnd
cs
mov
inc
lds
sbbl
dec
pop
mov
or
stos
xchg
or
enter
inc
sbb
hlt
jg
rorl
cmp
inc
sub
cmp
pop
movsb
aad
aas
pop
mov
and
stos
pop
cmp
xchg
lret
test
cmp
and
cmpsb
in
cmp
fst
add
xchg
pushf
mov
push
cmpsl
mov
hlt
and
test
loop
push
mov
pushf
je
push
xchg
cmpsb
sbb
adc
loope
xor
mov
mov
mov
outsb
in
call
or
js
insl
ds
dec
pop
push
lret
rcll
popa
nop
mov
xchg
fisubrs
add
mov
jge
xchg
test
rclb
sub
pop
inc
pop
and
in
jmp
adc
and
movsb
sbb
cmp
mov
repz
jmp
popa
addl
dec
popa
pop
gs
fidivs
pop
dec
dec
ljmp
xor
loope
mov
sub
dec
adc
jne
jnp
inc
mov
clc
rcrb
jb
dec
fldt
push
dec
fs
adc
xchg
adc
inc
xchg
inc
mov
cmp
mov
les
int3
ret
jge
dec
push
sub
lahf
int
jecxz
jae
cwtl
cmp
and
loopne
fwait
sub
adcl
es
arpl
jae
les
fbstp
cmpsl
mov
inc
and
mov
and
or
mov
jne
push
repnz
adc
and
gs
adc
jne
mov
jbe
jo
jo
push
fldcw
das
gs
inc
push
dec
fcmovnbe
lds
lcall
lock
mov
xchg
push
jl
xchg
lds
lea
movsb
shll
testl
push
fsubr
sub
sbb
push
jle
iret
sub
addr16
push
pop
xchg
and
mov
lock
cmp
mov
and
cmpsl
push
xchg
arpl
jns
fiadds
mov
sbb
adc
fcoml
pop
loopne
shr
repnz
movsl
mov
rcll
lds
sub
in
adc
inc
and
sbb
lea
and
jae
jmp
adc
ja
test
dec
insl
sar
mov
pop
addr16
push
in
icebp
push
enter
adc
bound
std
lahf
lcall
xor
lahf
lret
push
push
int3
mov
fbld
daa
add
out
negl
sbb
std
test
test
mov
jg
imul
lods
jl
cmp
inc
pop
or
fdivrl
jp
scas
aad
mov
pmuludq
and
inc
nop
adc
sti
pop
das
or
jnp
push
xchg
push
xor
xor
cmp
xchg
pusha
mov
es
mov
or
cmp
inc
pop
inc
mov
push
lahf
cmc
je
pop
fnop
dec
popa
scas
cli
popf
nop
sub
inc
adc
cmc
cmp
jne
repz
push
aaa
leave
imul
mov
cmpsb
fnstsw
ja
dec
pop
add
insl
sbb
out
repz
xorl
in
xor
pop
lea
xchg
jbe
xchg
pop
aad
pop
lods
nop
out
jne
pop
fstpt
lahf
xlat
mov
inc
test
repz
test
ret
jp
push
mov
xor
cmc
dec
push
es
mul
int3
add
and
mov
push
add
or
cmp
mov
inc
outsl
push
pushf
test
add
fistpl
clc
imul
fldl
out
push
movsl
cld
lret
push
loope
ret
push
xor
inc
subl
mov
fisubrs
cmp
cmpb
nop
xchg
scas
jae
out
fs
out
mov
je
xchg
sbb
cltd
jecxz
stos
xor
mul
cmc
xor
push
xor
push
inc
xor
or
mov
fwait
inc
repnz
and
xchg
add
pop
lock
mov
aas
das
mov
and
push
jb
scas
mov
in
call
cli
add
lret
pop
notl
ljmp
lods
lahf
mov
mov
or
repnz
test
dec
dec
notl
xchg
add
adc
test
notb
in
xor
daa
ljmp
sbb
out
push
push
cmpb
mov
shlb
std
push
xor
loope
inc
lret
xlat
inc
sbb
cmpl
cmp
in
pop
dec
jb
push
ror
aam
or
xchg
mov
or
cli
sub
mov
push
push
sbb
push
fcmovnbe
dec
insl
stos
push
mov
icebp
jbe
pushf
outsl
cld
sbb
pusha
add
ja
pop
jnp
daa
or
fisttps
icebp
inc
fcmovb
push
jns
push
test
inc
and
jb
sub
xlat
in
cld
or
push
jno
sarl
shl
pop
sbb
stos
data16
xor
mov
pop
sbb
mov
mov
pushf
sbb
or
pop
xor
mov
fcoml
push
sub
push
aas
out
cmp
into
inc
add
inc
add
shrb
xor
mov
gs
testl
lea
lret
xor
fwait
out
jle
mov
mov
jmp
add
xchg
or
or
test
sub
ds
jbe
jg
loope
xor
mov
cli
mov
add
pop
cmpsb
add
fs
sti
sub
mov
inc
mov
lods
pop
add
test
cmpsl
dec
mov
mov
cmp
fistl
adc
aam
out
pop
mov
jmp
aaa
rorb
les
or
mov
outsl
pop
xchg
jbe
push
sbb
movsl
sbb
mov
popf
xchg
mov
psubd
sbb
mov
adc
test
lcall
sub
dec
mov
decl
mov
push
mov
inc
mov
lahf
mov
aam
fsubl
mov
mov
push
scas
sbb
xchg
daa
push
lods
ret
loopne
mov
in
mov
inc
dec
xchg
orl
outsl
rolb
out
cmpsb
mov
int
add
add
inc
jge
push
pop
sbb
scas
xchg
sbb
mov
adc
adc
rcll
pop
mov
pop
aaa
mov
and
add
mov
fimuls
nop
mov
xchg
push
pop
inc
test
add
mov
lea
in
mov
das
bnd
cmp
mov
fdivp
fbld
add
xchg
mov
adc
xchg
std
inc
std
jp
arpl
mov
shlb
add
data16
push
pop
jecxz
divb
cwtl
jmp
cld
rcrl
divb
push
scas
mov
cmp
pushf
fwait
notb
dec
scas
push
sarb
icebp
cmc
pusha
sub
pop
jp
adc
mov
push
aaa
mov
dec
sbbb
mov
cs
xorb
xchg
dec
or
pop
sub
jg
aaa
sbb
pop
xor
cmp
pop
dec
xor
sbb
xchg
ret
jg
mov
jp
jge
enter
jl
daa
insl
rorb
xchg
stc
jge
push
unpckhps
inc
ljmp
cmp
jg
mov
mov
fsubp
ljmp
enter
cmc
ljmp
test
xchg
lock
fstpl
sbb
das
pop
pop
sub
imul
shll
out
sub
xchg
daa
sub
jns
and
jns
jb
pop
add
mov
jge
push
inc
pusha
loope
shrl
jnp
mov
int
pop
and
mov
mov
cmp
js
imul
push
pop
mov
inc
xchg
sub
fstpl
rolb
mov
xchg
mov
movsb
stos
add
and
rcrl
data16
sub
sub
and
push
adc
dec
jecxz
xor
dec
repz
cmp
test
sbbb
add
mov
es
int
inc
mov
lret
inc
xchg
gs
sbb
pop
nop
pop
lods
xchg
jmp
gs
mov
and
fdivl
and
in
sub
loop
in
pop
clc
outsb
jle
push
add
popf
adc
lahf
inc
or
add
cmp
cwtl
popf
jmp
je
mov
enter
pop
call
inc
ds
call
mov
push
cmp
das
xchg
gs
push
lock
add
mov
dec
jno
and
xchg
sti
fwait
push
mov
xor
jns
andb
dec
inc
adc
mov
inc
fistl
sub
sub
jne
pusha
mov
icebp
call
into
cmp
test
orl
cmp
bound
idiv
aas
add
mov
cwtl
hlt
mov
jne
mov
or
cmc
adc
jb
insl
icebp
jo
push
pop
popl
ret
sahf
jg
cmp
repz
xchg
clc
fistpl
and
cmp
jge
mov
stos
test
in
jae
mov
sub
addr16
mov
les
lahf
pop
dec
lods
mov
and
mov
mov
xorl
push
jl
movsb
adc
mov
push
xorps
pop
ss
ret
push
mov
inc
lahf
mov
popf
xor
add
pop
shll
pushl
and
shll
in
mov
sbb
mov
pushf
jne
imul
mov
sbb
sub
adc
and
mov
in
out
call
adc
aad
lret
idivl
sub
mov
and
pop
add
xchg
outsb
mov
push
push
shl
dec
into
cltd
xchg
jb
inc
push
repz
enter
and
jns
iret
and
push
lahf
xor
flds
fimull
fwait
xchg
mov
les
mov
jnp
lds
test
xchg
mov
or
nop
jo
das
rclb
lcall
incb
jns
add
cmp
lods
pop
filds
push
stc
repnz
dec
mov
pop
jmp
pushf
xchg
cmpsb
lcall
xor
xchg
pop
push
repnz
cmpsl
incl
mov
add
xchg
pop
adc
push
data16
or
sbb
xchg
pop
push
scas
dec
sahf
add
dec
ljmp
movsb
add
mov
dec
xor
pushf
outsb
adc
cmp
xor
inc
mov
lock
subl
cwtl
sub
mov
lds
mull
loopne
out
jmp
mov
inc
aam
sub
aad
push
loope
sub
xchg
dec
adc
mov
call
fdivl
in
repnz
fsubrs
adc
sbb
or
mov
sub
adc
dec
add
jmp
add
sbb
xor
call
icebp
mov
fs
je
scas
sub
xchg
inc
loopne
rolb
push
call
out
pop
outsb
push
shlb
mov
mov
xchg
dec
shr
loope
push
mov
dec
xchg
stos
neg
dec
shlb
push
out
loop
repz
cmc
jae
hlt
lds
shll
jns
mov
fwait
stos
movsb
nop
mov
lods
subl
mov
or
cwtl
mov
adc
bound
loop
ret
mov
aaa
into
xchg
out
xchg
out
cmp
xchg
push
mov
push
lret
cmc
cmpsl
sub
leave
test
outsb
int
out
in
pop
aam
mov
aam
sbb
icebp
in
mov
in
fldt
subl
inc
jnp
test
cltd
mov
ret
adc
mov
je
add
push
pop
nop
fisubs
movsl
mov
xor
push
cmp
fnstcw
jle
test
dec
sub
imul
lret
inc
je
dec
mov
xor
cmp
cli
jno
lods
in
jle
push
cmpsb
pop
icebp
or
in
bound
mov
push
movsl
cmp
and
or
cmc
or
xor
in
out
outsl
aaa
pusha
cmpl
int
or
out
test
daa
mov
mov
das
sbb
jo
iret
fsubl
xchg
aam
dec
pushf
dec
xor
xor
cmp
ret
jo
add
fs
imul
iret
and
mov
sbb
xor
lds
push
jg
dec
and
sbb
or
xor
xchg
xchg
loopne
mov
movsb
jecxz
mov
or
hlt
stc
das
fidivl
repz
scas
out
dec
in
adc
or
aaa
xor
inc
out
or
or
into
push
dec
sub
stos
mov
pop
ret
mov
ss
std
imul
adc
jbe
mov
xlat
push
jl
and
pop
xchg
mov
jmp
leave
jnp
mov
popf
aas
jecxz
pop
stc
sbb
dec
gs
lret
fwait
mov
adc
loopne
popf
xor
and
pop
lea
push
insl
pushf
pop
adc
inc
lods
mov
pop
xchg
inc
push
jnp
lret
jnp
or
jo
mov
mov
cmc
test
cmp
ds
and
xchg
prefetch
sti
lods
int3
lahf
xlat
xchg
rorb
pop
lret
fdiv
scas
jno
js
movsl
push
jae
and
and
fwait
mov
out
stos
lods
add
push
enter
xor
lea
xor
adc
mov
jp
popf
mov
in
enter
call
aad
outsl
movsl
into
push
jge
clc
inc
mov
inc
jo
mov
outsl
xchg
nop
icebp
mov
pop
aas
jns
cmp
and
dec
jno
xor
ret
sbb
sbb
repnz
mov
dec
push
or
cli
mov
lock
pop
sbb
inc
lods
sahf
stos
loope
xor
mov
loop
and
stc
and
std
jmp
xor
fdivp
pusha
in
popa
cwtl
mov
addr16
pop
or
pop
push
jno
aas
rcr
test
int
cmp
cmp
sbb
jle
jae
mov
clc
inc
pusha
add
dec
pop
repz
dec
xchg
dec
into
inc
sbb
and
mov
fbstp
pop
pop
mov
xor
mov
jb
stos
add
cmp
jmp
xor
jns
adc
lret
iret
push
pop
jnp
xchg
out
inc
movsb
scas
and
sbb
aad
pop
add
xor
aad
mov
mov
jae
lret
test
imul
push
jle
mov
dec
ljmp
sbb
push
inc
mov
test
jl
mov
jo
jp
xor
mov
roll
mov
ljmp
dec
push
out
push
pop
cmpsl
mov
int
xor
inc
push
jmp
in
ds
inc
pop
dec
cli
dec
notl
lcall
movsl
in
js
cmc
iret
jno
mov
outsb
push
mov
stos
dec
outsb
dec
mov
jmp
sbb
adc
xlat
clc
imul
add
aam
out
flds
push
sbb
mov
pushf
push
iret
cmp
or
sti
aad
divl
das
xchg
movl
ror
xchg
sbb
inc
mov
test
adc
orl
sbb
int3
clc
popa
mov
aad
div
lcall
push
mov
push
xor
push
jnp
add
xchg
notl
into
cltd
xchg
xor
inc
aas
lds
xchg
mov
int3
or
mov
ds
mov
or
in
jge
lods
add
and
scas
mov
sbb
ret
rclb
fcmovbe
mov
out
stos
xlat
adc
cmp
or
adc
aaa
out
fcompl
jg
int
fisubs
test
ret
andl
hlt
pushf
fidivs
xchg
test
push
adc
inc
sbb
mov
int3
mov
daa
pop
pusha
mov
ret
sub
test
and
ret
roll
add
data16
mov
xchg
and
cmc
add
ja
scas
lret
fiadds
or
mov
push
cltd
cmp
repz
pop
cmpsb
mulb
cmp
lahf
sub
dec
push
outsl
cs
mov
mov
loopne
loope
std
push
sbbb
sti
sti
cwtl
push
out
sub
lcall
into
inc
cmp
divb
inc
outsl
add
aas
adc
dec
in
push
pop
mov
scas
and
fucomi
dec
xchg
push
cmp
sbb
and
jbe
xor
pop
icebp
stos
and
leave
loope
inc
pop
rcrb
cmpsl
push
les
movsb
mov
popa
test
xor
cmp
inc
les
sbb
lret
addr16
mov
adc
jmp
mov
not
sub
and
lods
dec
scas
loopne
xor
sbb
inc
xchg
push
int3
and
push
das
mov
cmp
fwait
push
sbb
movsb
mov
and
les
sub
mov
outsl
mov
fwait
cltd
sbb
lcall
inc
pop
xor
mov
xchg
jmp
repnz
or
mov
data16
aaa
call
sahf
inc
jae
push
scas
in
cmp
mov
pop
in
adc
scas
in
xor
out
cltd
pop
gs
loop
enter
aas
aad
dec
jb
out
sbb
xchg
negl
addr16
push
scas
movsb
ror
add
xchg
pop
cmpb
or
add
mov
pusha
mov
das
gs
sub
and
sbbb
cmp
push
lcall
arpl
xchg
push
push
jbe
pop
xor
jno
inc
outsl
xchg
in
lods
inc
lods
cld
lahf
jne
inc
pushf
pop
xor
dec
into
xor
fisttpl
sub
pop
push
mov
ja
bound
leave
cmpsb
out
sub
cwtl
movsl
and
ljmp
sub
sbb
sbb
cmpsl
repnz
adc
jecxz
and
cltd
mov
in
fs
int
mov
cwtl
and
loopne
lock
pop
cld
and
sbb
xorl
cmp
nop
cmc
js
xchg
mov
int3
popa
jmp
aaa
push
test
rcr
repz
mov
test
jb
add
xchg
cmc
adc
mov
push
xchg
jmp
bound
mov
bound
cmp
test
stc
ss
mov
xchg
out
es
or
push
mov
push
adc
add
xchg
push
je
push
mov
and
lcall
shlb
nop
xchg
adc
outsl
ret
or
or
test
je
mov
jno
jge
adc
cmp
loope
xchg
xchg
shr
add
lret
sti
xchg
sbb
xor
outsl
jge
lret
and
daa
inc
pop
fisubrl
jae
inc
daa
out
mov
mov
xor
out
cmp
aam
clc
sbb
mov
lea
add
xorb
jge
cltd
inc
addb
scas
mov
xor
mov
inc
and
cli
jns
xor
mov
push
sub
jbe
xor
push
add
jg
arpl
in
or
mov
scas
sub
inc
fwait
imul
sbb
iret
int
add
int
movsb
ds
mov
mov
movsb
mov
movd
rcll
sub
mov
inc
fnclex
fldl
scas
inc
stos
sub
pop
jns
out
and
mov
mov
mov
mov
mov
mov
in
es
adc
cltd
jno
jae
cltd
jo
bswap
pop
xchg
cmp
mov
pop
cwtl
stc
dec
data16
jae
aad
js
and
jmp
push
and
lcall
in
scas
dec
pop
xchg
rolb
sbb
dec
inc
loopne
orl
adc
xor
movl
xchg
pop
ljmp
add
out
scas
data16
add
rcll
scas
popf
push
xor
push
mov
ss
gs
push
push
or
lods
or
inc
sub
or
push
or
fstps
dec
jne
bnd
jle
xchg
rol
lcall
clc
sbb
jecxz
lret
jge
xor
jns
loop
psubd
add
mov
xor
pop
dec
pop
and
add
adc
and
adc
daa
data16
stc
popf
mov
mov
sbb
lods
loop
push
mov
sub
repz
xor
mov
cmp
and
loop
adc
outsl
ret
mov
xchg
dec
out
mov
add
movsb
clc
fldt
test
icebp
jb
xor
inc
loopne
repnz
push
jle
cmpsl
or
rorl
push
jle
pop
int3
sbb
pop
lock
add
test
jb
inc
shr
xchg
dec
stc
icebp
pop
repnz
push
sbb
xchg
into
push
jl
jecxz
push
inc
dec
les
leave
mov
push
push
push
mov
icebp
sub
inc
stos
mov
cmpb
add
mov
add
cld
or
aam
push
xchg
loopne
ret
test
js
add
xchg
xchg
es
jae
or
push
aaa
aam
jb
mov
dec
repz
fnstsw
out
jae
scas
adc
int
scas
fsts
mov
nop
push
jl
xorl
data16
outsb
push
hlt
push
mov
jge
int3
jno
shr
xchg
daa
jns
xchg
pop
sub
test
adc
aaa
int3
push
cmc
push
dec
cmp
mov
sarb
mov
fnstenv
add
stos
add
pop
mov
test
push
inc
test
jno
mul
imul
mov
sbb
adc
cmp
ret
into
mov
and
adc
push
or
lret
aad
data16
jmp
mov
add
pop
jg
imul
add
dec
pop
dec
sbb
mov
clc
sub
push
cmp
testb
cmp
lock
add
mov
loopne
aam
push
add
push
into
or
int3
scas
pop
cmp
aam
jno
mov
sbb
lods
jae
mov
push
ljmp
sub
inc
rcll
add
pusha
mov
lret
pop
imul
mov
sbb
sarb
ja
in
or
cmpsl
arpl
jae
push
sarl
adc
dec
nop
arpl
lret
in
test
mov
imul
sbbl
or
jecxz
xchg
pop
sbb
rcll
inc
aaa
lock
pop
and
mov
adc
inc
lret
cld
dec
das
mov
rorb
push
mov
ds
inc
dec
in
nop
mov
inc
cs
or
jnp
sub
repz
mov
scas
dec
push
xchg
pop
sbb
or
shl
aam
nop
mov
test
inc
js
sbb
dec
and
test
rcll
jl
jnp
cmp
adc
hlt
bound
test
pusha
mov
movsl
xchg
sub
push
idiv
out
test
pop
mov
pop
push
subl
sbb
inc
int
add
and
pop
push
lahf
adc
ja
mov
sti
es
mov
out
shr
out
jecxz
pop
jmp
mov
dec
sbb
xor
imul
sbb
aaa
jl
sbb
and
stc
sbb
add
clc
imul
iret
sub
aaa
xlat
adc
movsl
cwtl
mov
xchg
jge
add
xchg
insb
testb
and
mov
mov
dec
sbb
pushf
lds
mov
and
adc
mov
xlat
adc
push
rclb
movsb
in
mov
inc
in
or
js
out
sbb
push
arpl
sub
and
and
femms
xor
repnz
xlat
fcompl
notl
fildll
cli
jb
mov
jbe
lods
mov
sub
or
idivb
fs
add
jno
lret
pop
jp
out
cmp
testb
popa
xor
jae
jno
mov
xchg
fcom
mov
test
or
jp
shlb
fwait
mov
inc
mov
jle
dec
es
cmp
icebp
dec
outsl
cwtl
shlb
jae
fld
push
in
enter
mov
sub
xor
inc
xchg
mov
sbb
aad
sbbl
pop
dec
lahf
stos
lods
and
insb
mov
ror
sbb
adc
insl
dec
daa
popf
jns
jns
sub
sbb
add
push
cmp
cltd
js
push
jo
enter
std
push
neg
loopne
xchg
sahf
dec
jecxz
lcall
stos
cmp
cli
jne
add
mov
mov
test
or
idivl
out
push
fs
das
fildll
mov
cmpsb
inc
int3
out
fwait
sub
sahf
subb
mov
out
pop
push
fstpl
idivb
pop
fwait
rcll
lds
ret
iret
out
je
push
lods
add
xchg
xlat
dec
add
dec
dec
jle
inc
es
dec
rcrb
xchg
insb
xor
xor
mov
call
dec
cmp
subb
outsl
xchg
xorb
add
mov
test
and
out
subl
jecxz
jp
and
jmp
fdivrl
inc
out
xlat
mov
cltd
sbb
add
inc
ja
or
add
pop
mov
std
jno
je
lcall
push
jbe
hlt
pop
lds
pop
movsl
pop
and
inc
or
cs
imul
or
sbb
clc
test
mov
mov
in
lods
dec
and
push
push
dec
sub
ds
inc
cmpsb
and
add
loopne
jns
mov
in
xchg
fcomp
cld
sub
leave
insl
arpl
cld
test
dec
insb
xor
sarl
sahf
in
pop
repnz
icebp
cmp
mov
mov
pop
insb
inc
or
mov
int
cmp
fs
pop
in
stc
push
adc
mov
idiv
cs
sub
popa
xchg
jne
test
mov
jnp
push
test
inc
jb
push
rcr
pop
movsb
ja
dec
adc
xchg
mov
daa
int
fbstp
and
stos
dec
mov
mov
xchg
adc
cmp
sbb
cmc
sub
mov
jl
push
xchg
push
sub
jmp
sbb
dec
mov
adc
test
inc
or
fisttpl
and
popf
movsl
ss
fisubl
inc
data16
les
mov
add
push
dec
pop
push
xchg
loop
push
mov
cmc
xor
int3
lods
loop
out
addb
adc
loopw
jo
addr16
add
in
dec
mov
mov
cmp
and
add
aad
xchg
dec
or
dec
enter
xchg
push
cmp
xchg
xchg
mov
inc
jae
xchg
inc
lds
push
lods
mov
lcall
mov
dec
out
enter
sub
lcall
mov
es
add
test
jp
shl
int3
stos
dec
mov
roll
jg
cld
cli
nop
loope
sar
cmp
sub
or
cmp
fucomi
stos
in
jle
sub
sahf
das
push
inc
fs
es
inc
loopne
cmpb
pop
sbb
fcoml
jne
jp
push
fs
add
xor
adc
pop
out
pop
scas
push
bound
mov
leave
scas
mov
add
test
arpl
aam
push
andb
adc
pop
push
jmp
in
in
or
test
and
out
xchg
dec
scas
int3
addr16
stos
sub
or
aam
pop
xchg
imul
jg
mov
stos
imul
xchg
push
cld
outsb
sahf
popf
push
jne
sbb
adc
jg
in
movsl
pusha
adc
popa
and
jae
xor
daa
or
pop
insb
pop
int3
jmp
mov
ds
push
push
je
jg
xchg
pop
fwait
add
and
pop
push
movsl
aas
mov
jmp
xlat
push
sahf
mov
dec
stos
xor
test
jne
test
lods
outsb
mov
xchg
push
ror
iret
lock
adc
mov
daa
imul
mov
outsl
jp
jo
imul
jns
and
in
push
pop
mov
data16
cmpsb
dec
mov
jle
sbb
jne
aam
jnp
xor
jmp
popa
add
out
testl
sbb
mov
add
dec
scas
scas
jae
test
pop
ficoml
ljmp
mov
in
je
test
mov
and
fucomip
mov
or
pop
cmpsl
rclb
je
inc
arpl
je
jo
jnp
imul
test
cltd
mov
jnp
push
test
add
clc
mov
aam
int3
jb
notb
les
frstor
shr
mov
ret
jecxz
xchg
scas
arpl
or
xchg
mov
sbb
mov
je
or
jbe
mov
cmpsb
lret
popa
pop
and
lret
test
inc
mov
push
mov
stc
mov
mov
sub
xor
popa
jnp
push
mov
stos
mov
ret
stos
cmp
aam
shl
jb
ss
mov
add
push
pop
icebp
xor
push
ror
push
and
arpl
inc
pushf
je
arpl
pop
cmp
jnp
scas
or
sub
mov
jnp
ss
cli
xchg
jb
jmp
xor
into
loope
lock
mov
and
jmp
mov
loope
jl
std
in
jb
mov
ret
mov
mov
cmp
push
or
nop
dec
test
dec
inc
push
sbb
data16
fistl
mov
adc
push
loopne
inc
xchg
xchg
call
fwait
mov
mov
ss
jecxz
add
inc
into
pop
or
gs
jp
je
push
push
cs
pop
xlat
mov
in
mov
insl
jb
add
fsubr
test
out
cmp
in
and
jle
ljmp
push
adc
dec
xchg
xor
sarl
sub
ficoms
fistpl
aaa
cmp
xor
sub
or
jge
pop
repz
fildll
cmc
pop
push
ret
es
loop
pop
xchg
test
add
sub
dec
lods
inc
ljmp
inc
or
xchg
mov
sub
xchg
ret
dec
xchg
mov
outsl
jmp
jg
pop
call
mov
sti
xchg
xlat
outsb
clc
dec
jns
push
mov
cld
add
insb
inc
hlt
mov
mov
fsts
adc
pop
in
sbb
lods
sub
popf
sub
pusha
repnz
xlat
loopne
xlat
stc
cs
mov
sub
jg
ljmp
daa
mov
xchg
stos
call
iret
push
es
pop
xchg
pushf
jbe
insb
inc
pop
insb
daa
inc
aad
inc
push
mov
jbe
pop
pop
movsl
add
aaa
pop
dec
mov
scas
xchg
xlat
lock
cmpsl
orl
or
pop
repnz
push
push
jne
add
jmp
test
aad
add
push
xor
jns
scas
loopne
dec
cli
loope
cs
enter
data16
insb
mov
mov
mov
adc
sahf
daa
add
lods
cmp
xor
xor
scas
loop
dec
jb
cmp
xor
test
lods
test
jb
sub
loopne
orl
push
iret
icebp
stos
movsl
and
loop
and
sub
aam
push
mov
shll
aam
cmpsb
mov
adc
in
xlat
dec
inc
sbb
mov
cmp
jb
add
cmpsb
fdivrl
lock
sub
mov
inc
insl
xlat
ret
in
dec
mov
psubusw
xor
adc
je
les
inc
push
sbb
mov
cmp
xlat
rolb
sbb
pop
pop
jl
imul
gs
sarb
into
imul
mov
sahf
ja
mov
fwait
loope
lods
dec
inc
cmp
std
in
lea
cmp
and
sbb
ret
lock
xchg
mov
cld
popa
sbbb
addr16
or
les
daa
pop
popf
outsl
rcr
add
pop
scas
shlb
adc
pop
fprem1
ss
xor
adc
sbb
jmp
into
insl
jns
call
jge
mov
imul
xor
je
mov
gs
mov
xchg
jbe
gs
test
loope
stos
push
lcall
adc
jb
sub
out
and
popa
cld
push
cmp
xchg
movsl
roll
lods
ja
inc
adc
aad
pop
dec
pop
cmpsl
data16
scas
jbe
rcll
jnp
ficoml
stos
test
add
stos
cli
lret
cltd
mov
jg
fucom
lock
test
mov
ljmp
loop
jns
test
push
mov
inc
sbb
xor
sbb
lods
pusha
adc
lcall
jns
jge
lds
scas
xchg
std
inc
cmp
in
stos
rol
push
pop
add
mov
iret
lods
out
adc
dec
lret
addr16
and
mov
movaps
std
sar
test
lret
scas
mov
push
imul
repz
stc
imul
mov
adc
mov
addr16
cwtl
xor
in
dec
add
hlt
push
xor
pop
sti
leave
movsl
clc
inc
mov
inc
sub
push
shlb
lock
cmp
mov
sub
and
fsubl
xchg
cmpsb
std
ltr
jo
sbb
mov
sbb
xor
sar
pop
popa
sahf
dec
jg
or
and
pop
jbe
push
dec
cmp
pop
bound
jge
xchg
mov
mov
lret
test
sbb
nop
lds
xor
or
call
mov
jmp
adc
shl
imul
pop
sbb
push
sub
mov
outsb
outsb
gs
inc
add
and
pop
shlb
sbb
cs
lret
pusha
ja
or
cltd
push
je
inc
arpl
insb
pusha
cmp
scas
mov
add
mov
int3
mov
enter
mov
mov
stos
mov
sub
jns
and
aaa
test
rcl
cmp
inc
inc
inc
and
mov
xchg
lods
push
push
push
push
loop
lahf
imul
loopne
and
or
push
popf
push
stos
movsb
in
or
jp
nop
and
adc
sbb
in
jl
xor
mov
out
bound
and
pushf
loopne
aas
mov
pop
pusha
inc
int
jo
stc
mov
outsb
mov
enter
lea
dec
mov
fucomip
lods
push
aad
jnp
adcl
dec
ret
pushw
sub
stc
dec
xchg
das
addr16
mov
xor
pop
mov
push
mov
dec
mov
arpl
or
fsubrl
push
push
mov
aaa
mov
pop
sahf
in
cli
rep
lds
addb
out
dec
jbe
push
add
aam
inc
cmp
jbe
outsl
jmp
aaa
hlt
push
inc
loop
repz
out
fnstcw
insl
and
negl
movsl
mov
fdivp
mov
icebp
adc
sub
rcl
mov
es
out
rorb
popf
das
pusha
roll
outsb
adc
ret
push
daa
mov
push
sbb
mov
adc
cmpsb
mov
cmc
dec
jl
mov
mov
fdivrs
fcomps
mov
rolb
cmpsb
pop
insb
pop
scas
insl
mov
xchg
xchg
sub
fdivs
fstpl
ja
repz
pushf
das
pop
jle
sub
lcall
sahf
pop
xchg
lods
inc
outsb
testl
lock
es
lock
sub
pop
sub
pop
out
dec
pop
fsub
cld
adc
pusha
add
ret
xlat
icebp
rorl
mov
js
out
sti
jno
jbe
insb
sbb
jp
fists
pop
in
imul
push
sub
stc
nop
and
add
jp
aam
push
sbb
push
repnz
push
cmpsb
push
jl
or
inc
jg
outsl
dec
mov
inc
test
fyl2x
pop
or
hlt
imul
or
int3
mov
stos
xor
mov
adc
mov
xor
mov
xchg
aaa
sub
stos
cmpsb
or
pushl
adc
test
bswap
mov
fldl
and
int
sub
loopne
jp
jae
aam
les
fildll
insl
pop
imul
push
dec
sbb
out
sbb
sbb
sub
imull
loope
lea
or
insb
mov
seto
mov
add
mov
xor
and
jno
cs
sub
sti
inc
sub
jb
sbb
mov
scas
pushf
ds
adc
push
and
xor
mov
adcb
dec
stc
aaa
popa
add
mov
pop
shlb
inc
dec
add
add
into
int
dec
xchg
jl
sbb
mov
mov
pushf
pop
pusha
popa
cwtl
fcoml
out
loopne
pop
test
pushf
cmp
out
sarb
push
adc
icebp
mov
scas
push
xor
pop
insl
sbb
iret
clc
imul
add
jl
inc
inc
push
jnp
add
xor
sbb
cmp
loop
les
xchg
adc
aam
mov
test
sub
dec
pusha
mov
jo
sbb
std
sub
adc
jns
loope
add
sti
mov
cmpsl
cmp
js
cmp
jge
add
std
popf
fidivs
sbb
pop
pop
xor
mov
test
jnp
xor
mov
cmpsl
in
dec
push
inc
mov
mov
aad
into
sub
push
ret
js
pop
pop
or
jge
or
cmp
mov
dec
gs
out
shl
andl
jmp
call
add
jmp
fdivl
xchg
cli
xchg
mov
ja
sahf
js
into
fwait
xchg
mov
scas
mov
inc
mov
cmc
les
lods
cmc
sub
jnp
insl
pop
stos
push
push
nop
movsb
or
pop
mov
nop
dec
add
pop
sub
or
call
pop
out
sar
movsl
sub
jb
lret
push
jo
mov
xor
lea
jnp
push
mov
test
sub
mov
push
add
jmp
loopne
arpl
scas
jle
pop
or
or
jecxz
jmp
push
mov
inc
mov
fwait
dec
pop
fsubl
lret
mov
inc
and
or
les
aam
or
dec
mov
andl
fwait
shrb
movsb
mov
out
sub
mov
lret
pop
push
sbb
and
call
or
add
icebp
fsqrt
jp
mov
inc
sarb
leave
popf
into
push
stc
sbb
pop
push
rcl
cmpsl
js
dec
stos
clc
jge
test
xorb
xchg
lret
dec
mov
loope
bound
dec
jnp
shll
cmp
jge
les
pop
loopne
aas
lock
addr16
popf
dec
outsl
outsb
enter
cmp
test
adc
and
jmp
sub
cmp
sub
add
rcrl
and
cmpsb
lahf
inc
fwait
xlat
jae
js
insl
ss
xor
dec
mov
pop
xchg
outsl
mov
jae
xchg
dec
inc
or
push
push
testl
add
leave
scas
xchg
aam
and
mov
pop
pop
and
leave
rorb
imul
lret
ret
cltd
shlb
aas
faddl
das
or
sub
adc
je
sub
xchg
xchg
aaa
out
addr16
in
insl
cwtl
stos
lock
push
sti
xchg
aad
pop
xchg
push
js
outsb
mov
imul
xor
in
dec
pop
imul
sarb
or
dec
xlat
cli
cmp
xchg
sbb
adc
insb
pop
pop
or
stos
popa
push
sbb
loopne
cmp
push
test
call
pop
cmpsl
sub
lods
popf
outsb
push
adc
aas
pop
es
push
pushf
cs
jp
jge
ljmp
paddb
nop
cs
adc
adc
push
pop
push
mov
cld
dec
pop
pop
adc
cmpsb
fwait
inc
or
jle
mov
sti
xchg
addr16
sbb
dec
sbb
jne
adc
sub
cmp
add
add
mov
xchg
and
arpl
fsubrs
inc
add
pusha
adc
ljmp
or
mov
cli
pop
testl
jns
pop
mov
push
cli
imul
dec
jecxz
imul
jmp
cmpsb
cmp
lahf
lods
push
inc
xchg
insb
adc
push
ljmp
lret
mov
mov
movsl
push
aad
push
das
mov
repz
xor
loop
xchg
loope
fxch
bound
pop
bnd
push
shl
gs
adc
jl
jae
std
sub
add
stos
imul
mov
in
popa
jl
arpl
std
loopne
jp
nop
outsb
jge
push
mov
xor
xor
in
xchg
in
in
mov
xchg
adc
xor
or
pop
addl
dec
outsl
jmp
fsubrl
stos
bound
jg
loope
lock
adc
fwait
inc
mov
mov
jne
stc
lods
or
loop
rol
repz
mov
xor
loopne
lahf
dec
cmp
pop
shrb
sahf
dec
scas
mov
std
lods
roll
jge
xchg
rorl
pushf
rclb
ds
pop
jnp
sub
cmpsb
lods
mov
sub
jge
pop
sbb
lods
aaa
imul
xor
aaa
popf
lahf
jb
push
sbb
adc
sahf
pop
test
and
push
addb
pushf
add
stos
mov
shr
push
adc
cmp
mov
mov
rolb
jecxz
mov
push
insb
int
cmc
ret
or
aaa
cmp
ret
fs
cld
jge
imul
aas
or
es
ds
and
int3
jno
xchg
je
sbbb
cmp
nop
lret
or
js
out
out
mov
and
inc
js
fcomip
stc
xor
cmp
xchg
outsl
jg
inc
push
push
sbb
inc
loope
js
out
xchg
cli
lahf
loope
cmp
cmp
lock
mov
clc
fidivrs
in
ficompl
cmpsb
mov
sbb
mov
addr16
hlt
stos
fiadds
rolb
xchg
inc
jge
xor
xchg
int3
ds
xor
ljmp
or
mov
fisubrl
inc
push
iret
cmpsb
sbb
pop
jno
push
in
aas
add
mov
icebp
les
sub
aas
or
mov
push
dec
or
dec
add
pushl
test
mov
mov
dec
mov
sub
and
sbb
js
adc
cmc
mov
and
jmp
xchg
xchg
push
jp
cltd
and
cmp
adc
mov
ds
jbe
pushf
loop
add
pop
jmp
jo
ljmp
pop
and
or
std
sbb
xchg
rcrl
orl
ljmp
pop
ficoml
test
sbb
sti
jge
mov
dec
sub
xchg
mov
jnp
arpl
repz
insl
mov
fcompl
bound
push
mov
outsl
add
clc
std
and
pop
or
adc
or
pop
jmp
scas
push
dec
jne
repnz
cmpsb
adc
in
repz
pop
lret
mov
inc
cld
les
lahf
cmpsb
cmpsb
or
xor
add
jl
inc
es
dec
sar
mov
and
lea
dec
clc
out
sbb
movsb
pop
addr16
fnstsw
sbb
and
fmul
sub
test
stc
mull
cli
mov
aaa
stos
fnstenv
scas
jno
or
movswl
mov
sub
les
ja
shll
aas
loope
scas
orl
push
jnp
inc
push
mov
adc
sbb
or
movsl
pop
xor
jl
lcall
lret
in
out
xchg
mov
imul
or
inc
fimuls
sbb
popf
push
sub
pop
fs
jnp
adc
sbb
ds
popa
cmp
adc
inc
jg
add
hlt
dec
sub
dec
mov
push
jle
fcoms
xchg
hlt
and
lods
lret
jae
jns
pop
mov
cwtl
xchg
pop
cmp
and
push
insl
jnp
and
cmp
std
mov
jne
xor
xor
into
mov
mov
cmp
dec
push
mov
xlat
cld
mov
mov
repnz
sar
cmc
xlat
ds
scas
out
fsub
test
imul
fwait
jg
push
fs
push
xchg
or
push
sbb
dec
sbb
xor
clc
inc
push
std
sarb
cmpsl
fldcw
int
xor
mov
jns
out
loop
or
push
push
jge
or
enter
lods
les
stos
mov
lahf
call
daa
inc
cmp
aad
imul
test
cld
sub
mov
mov
mov
fistl
or
lahf
and
dec
push
shll
xor
xchg
sahf
jge
adc
test
popf
jno
jae
mov
or
stos
sbb
jno
lods
xchg
in
repz
mov
dec
mov
loop
sti
imul
jp
pop
enter
aam
add
push
dec
add
mov
out
dec
or
jle
xorb
std
push
bound
shll
mov
or
pusha
aas
dec
lcall
mov
movsb
faddl
or
jle
add
cmp
mov
xchg
dec
jo
mov
xadd
xchg
dec
xor
aaa
fwait
mov
loopne
les
sarw
mov
sub
sti
fstps
jl
xchg
mov
mov
cmp
cmp
aam
jae
mov
cli
adc
pop
xor
jmp
js
js
int
test
lret
pop
push
push
ds
push
ficoml
stos
pop
xchg
inc
lret
pop
cmpsb
fstps
cltd
repnz
xor
pop
data16
cmpsb
inc
dec
sub
pop
add
ljmp
inc
ljmp
or
icebp
aad
xor
stc
adc
fcomps
cmp
or
xor
ss
aad
stos
cmp
sbb
lret
mov
mov
sbb
jge
insl
je
ss
xor
and
mov
in
and
fstps
push
lods
mov
scas
test
insb
mov
or
dec
incb
jge
sbb
ljmp
dec
cs
jmp
arpl
pop
ret
jbe
or
sub
cmp
aam
inc
imul
das
mov
cmp
mov
fistpll
stos
cmpb
mov
xor
dec
or
push
pop
sub
pop
cmp
test
sbb
enter
inc
inc
dec
test
add
int3
sbb
mov
test
sar
sbb
out
fcomps
cltd
xor
inc
cwtl
flds
cli
in
mov
or
xor
cmp
shlb
mov
int
pop
or
dec
pop
daa
pushf
mov
dec
add
pop
mov
int
out
imul
pop
xorb
jne
mov
nopl
and
cmc
ss
fcmovbe
outsb
lahf
mov
inc
scas
add
lods
and
in
jmp
ja
stos
xor
dec
sti
dec
push
push
xchg
dec
sbb
mov
xorl
lcall
fldcw
popa
cmp
les
cltd
bound
add
pop
daa
cld
pushf
dec
pop
std
repnz
imul
ljmp
or
in
aas
fld
call
fcmovnbe
push
adcl
mov
push
inc
ja
mov
inc
pop
ss
inc
in
bound
and
xor
aas
dec
jl
xchg
mov
rolb
or
sub
cmc
xchg
push
mov
sub
clc
lods
pop
daa
insb
pop
fisubrs
sub
fsubl
push
cli
imul
andl
in
outsb
frstor
xor
xor
mov
addr16
arpl
icebp
lcall
cltd
push
xor
flds
mov
imul
data16
cwtl
xor
jle
fildll
aad
push
outsl
jae
aad
xchg
cli
mov
loop
xlat
test
dec
mov
mov
jnp
mov
aam
xor
inc
int3
sub
fimuls
dec
std
outsb
add
mov
fisubs
xor
mov
hlt
mov
fimull
lea
pop
pop
mov
add
gs
in
xlat
movsl
fdivrl
fsubs
jnp
push
pop
pop
insb
or
add
dec
cli
insl
ret
arpl
mov
dec
pop
fcmovne
cmp
xchg
adc
push
sbb
imul
movsb
lods
testl
push
push
repnz
jne
pop
shrb
jmp
mov
sub
addb
or
int
adc
insl
cmovg
sub
pusha
sub
dec
lret
lods
sbb
pop
dec
lods
push
jns
lds
cwtl
jg
mov
popa
and
inc
cmp
sub
adc
pop
mov
sbb
test
dec
or
mov
mov
inc
popf
and
lds
ror
mov
outsb
xchg
pop
out
test
loop
aaa
mov
into
mull
pop
or
out
orl
sbb
in
adc
das
addr16
int
inc
dec
fwait
clc
sahf
mov
dec
in
or
cmp
sbb
mov
mov
pop
dec
dec
je
rorl
negb
icebp
roll
lds
not
pop
in
in
xchg
lea
xchg
ret
in
mov
dec
xorb
nop
adc
arpl
mov
inc
je
das
lcall
pop
xor
ds
bound
cli
jbe
fstl
adc
jno
jmp
rcll
subl
cs
sub
filds
pop
dec
lret
push
push
lret
dec
pushf
das
xchg
imul
adc
xchg
mov
pop
add
insb
push
icebp
jmp
test
fstpl
mov
push
sbb
stos
sbbl
sbb
adc
mov
sbb
mov
mov
xchg
lods
xlat
mov
dec
xchg
and
leave
mov
cmpsl
mov
movsb
sub
cli
arpl
and
ja
ljmp
mov
push
jl
jnp
sbb
sub
sarb
fwait
xor
mov
add
pop
hlt
pop
cmp
xor
cmpsb
test
adc
mov
rcrl
dec
sbb
xchg
mov
mov
fwait
push
inc
in
sbb
or
iret
pop
dec
cmp
cli
cmc
add
movsl
ljmp
adc
testl
ret
xor
and
jle
fidivl
jo
sub
out
ljmpw
jno
inc
inc
cld
jne
loope
adc
scas
inc
repnz
jmp
arpl
add
xchg
pop
push
cmpsb
cltd
outsb
scas
das
jle
xchg
shrb
jge
mov
ficoml
xor
shll
dec
mov
aas
dec
xchg
push
cmp
ljmp
shlb
push
rcrb
pop
sub
imul
jb
sbb
and
bound
and
nop
lret
out
xchg
leave
out
mov
pop
or
gs
xor
in
push
or
dec
xor
dec
add
cmpsl
test
rorl
pop
fcoms
aas
or
pushf
adc
pop
sbb
add
cmpl
fisttpll
stos
cld
mov
movsl
enter
cltd
mov
inc
jbe
aam
or
loop
dec
pop
push
mov
or
dec
jl
push
or
test
mov
and
mov
inc
mov
pop
popa
int3
loope
popf
mov
cmpsb
rcrb
mov
adc
int3
mov
mov
and
sbb
es
inc
aaa
push
out
sbb
push
mov
aas
and
fs
cld
mov
and
and
jge
js
sub
xchg
mov
sbbb
cmp
fldl
push
test
out
ljmp
adc
imul
mov
data16
xchg
xchg
cmp
pop
sub
adc
push
cld
ljmp
pop
or
and
pop
xchg
cmp
adc
xor
mov
pop
xor
xor
xchg
aas
xor
int
add
popa
dec
adcb
mov
data16
aaa
lret
inc
and
pusha
fucomip
jbe
cmpb
rcr
pop
or
mov
iret
pop
dec
into
dec
mov
outsl
mov
dec
cmpsb
inc
lahf
roll
adc
pop
xchg
cmc
hlt
push
fists
pushf
adc
in
mov
repnz
mov
pushf
jae
fimuls
loope
pop
dec
aaa
lcall
repz
sub
and
mov
movsb
in
add
bound
cmp
or
divl
jg
xorl
adc
mov
outsb
outsb
iret
mov
xchg
inc
mov
out
rorl
mov
sbb
mov
pop
rclb
jne
bound
push
notb
int3
pop
pop
jg
mov
ss
test
lock
or
les
fcomi
inc
fstps
leave
inc
and
push
xchg
fwait
stos
mov
inc
add
adcl
lahf
repnz
inc
xor
ret
inc
fucomp
sbb
or
jno
mov
daa
addl
gs
popa
mov
aas
xorl
ljmp
xchg
xor
pop
cmp
loopne
and
clc
sbb
xor
stos
fnsave
mov
shlb
fbstp
fwait
push
setp
inc
pop
loop
mov
pop
mov
mulb
cwtl
lock
repz
inc
mov
push
inc
lods
test
stos
jo
sbb
inc
dec
movsb
insl
pop
jbe
fnstenv
outsl
fcoms
mov
insl
mov
mov
mov
xchg
jbe
aad
cwtl
dec
rolb
outsb
xor
aaa
pop
fistps
out
nop
lods
ja
mov
gs
jecxz
mov
imul
rclb
and
cmp
sub
mov
dec
in
mov
jl
test
dec
in
xchg
mov
sbb
xor
adc
imul
push
into
subb
aam
mov
or
add
daa
mov
mov
inc
cmp
test
popa
mov
loope
push
imul
jb
les
int3
ds
xor
jbe
not
push
jecxz
cld
push
mov
xchg
lret
xchg
cmp
clc
fucomp
sar
cmp
inc
add
divb
fstl
leave
pop
cltd
xor
pushf
arpl
imul
cmpxchg
inc
jns
or
rcrl
cltd
push
out
pop
mov
pop
out
imul
sub
pop
andl
lret
mov
out
shll
cli
xor
aaa
pop
xchg
cmpsb
sahf
out
rorl
iret
andb
fld
negl
mov
pop
jmp
stc
jp
lods
jmp
jmp
fildll
es
iret
mov
aad
pop
or
movsb
fs
inc
inc
outsl
lcall
pop
mov
jb
bound
mov
dec
push
adc
shr
ret
cld
pushf
xor
int
and
sbb
sbbl
ret
test
inc
xor
pop
push
add
loopne
cmpsl
lret
mov
orl
push
inc
bound
ss
out
mov
mov
or
pop
mov
sbb
xchg
lea
push
js
push
xor
fsubp
pushf
faddl
imul
adc
mov
stos
and
shrb
adc
add
mov
lcall
push
mov
lcall
imul
fmul
sahf
adc
ficompl
jae
sub
out
addl
pop
mov
scas
sub
inc
sub
ljmp
icebp
dec
fildll
lcall
and
adc
in
adc
pop
clc
test
pusha
xor
or
scas
or
ret
sbb
sbb
bound
mov
xor
and
push
or
in
inc
aaa
xchg
outsl
add
or
clc
lret
in
lret
jbe
jnp
int3
pop
hlt
cmc
push
xchg
jbe
js
push
ret
cmp
push
cmp
adc
xchg
sbb
pop
xor
adc
add
sub
das
push
insl
shll
dec
xchg
xchg
popf
or
int3
sub
outsl
adc
dec
pop
lgs
dec
arpl
sbb
inc
leave
dec
pop
pop
notl
sbb
dec
test
or
lcall
mov
repz
dec
int3
push
sub
inc
jno
je
add
mov
xor
scas
cli
jb
rorb
xchg
mov
pop
leave
adc
orl
and
pop
mov
fiadds
lret
in
aaa
cmpb
sub
outsb
lahf
mov
dec
xchg
scas
cwtl
push
adc
inc
mov
mov
data16
mov
cltd
dec
pop
movsl
inc
in
loopne
lahf
mov
mov
stc
dec
fwait
or
dec
adc
and
dec
sub
fiaddl
mov
int
test
out
cmp
call
div
pop
add
push
dec
aam
int3
mov
xchg
cld
sub
sbb
adc
pop
scas
pop
mov
stos
mov
ss
adc
pop
add
adc
lods
inc
pop
repnz
or
sbb
jae
jnp
pop
inc
push
jecxz
add
aam
jle
loope
nop
cmpsb
mov
push
mov
push
data16
mov
xor
inc
pop
xor
loopne
dec
push
cld
mov
js
sub
das
rcrb
in
sahf
push
and
pop
inc
outsb
jl
pop
xor
dec
dec
mov
ss
mov
inc
xchg
pop
call
xor
lahf
mov
or
pop
sbb
pop
push
pop
jb
jg,pt
pushf
out
dec
lods
sub
adc
pop
mov
addr16
test
leave
jbe
mov
push
pop
leave
stos
push
xchg
sahf
dec
lock
adc
clc
mov
std
adc
mov
push
stos
aad
fsubr
jbe
mov
sbb
rcrl
cmp
psubd
and
rclb
xor
in
jle
adc
mov
lods
mov
aam
cwtl
sub
fcmovb
icebp
fstpt
pop
xor
pop
shrb
mov
shlb
xor
or
mov
sub
xchg
pop
inc
xchg
out
in
sbb
adc
jo
leave
sti
pop
jecxz
dec
xor
ja
fbld
adc
lcall
das
lds
and
addr16
push
andb
pop
push
pop
lcall
add
stc
cmpb
ljmp
push
das
notb
mov
xlat
test
xchg
dec
pusha
roll
fdivs
push
lods
in
xchg
sbb
cmc
pusha
lret
ds
pop
ja
mov
xchg
idiv
es
xchg
fidivrl
gs
pop
xorl
pusha
cmc
pusha
sahf
mov
mov
sahf
add
fsubr
cmpb
mov
mov
jb,pt
xor
rclb
dec
ja
add
or
mov
dec
mov
push
sub
aaa
xchg
dec
enter
icebp
das
leave
js
leave
jge
xor
mov
into
mov
popf
sub
leave
repnz
adc
jbe
inc
and
mov
ret
lock
dec
addr16
insb
sti
inc
jl
push
lcall
dec
cmp
pop
inc
and
mov
adc
inc
pop
jmp
movsb
lcall
test
xchg
jae
int3
jns
push
push
cwtl
jmp
pop
or
mov
mov
jl
movsl
out
ret
push
mov
pop
data16
pop
das
adc
pop
stos
push
cmp
ss
jl
mov
sahf
or
insl
jbe
or
jns
add
fwait
lock
testl
out
in
pop
outsb
mov
ja
push
loopne
push
adc
adc
push
std
lds
out
out
adc
push
cmp
pushf
push
xor
lea
and
cmp
jno
fisubrl
mov
adc
testb
cli
fdiv
inc
ret
repnz
jl
xchg
and
imul
das
cmpsb
fscale
or
lea
popa
das
arpl
jno
mov
pop
mov
dec
fs
inc
scas
mov
andl
push
lock
seta
loop
xor
and
addr16
and
movsb
pop
movsl
push
and
xlat
in
cltd
or
cmpsl
gs
mov
paddusb
sub
aaa
cmp
pop
pusha
pop
push
adc
outsl
sub
adc
xchg
pop
or
int3
push
ss
pop
daa
popa
fsubrl
stc
repz
in
adc
js
bound
inc
mov
pop
add
push
int3
push
mov
in
call
outsl
xor
out
inc
dec
lds
adc
rclb
push
rcrl
fidivs
dec
movl
xchg
mov
inc
xchg
fistpll
jo
mov
out
mov
inc
jae
or
dec
and
ljmp
push
push
push
icebp
sbbl
daa
push
js
cmp
call
lods
push
xchg
inc
xchg
outsb
sahf
test
shr
dec
jg
mov
xchg
shlb
jne
repnz
jmp
and
pop
push
and
add
dec
bound
pop
test
inc
and
xor
inc
add
inc
sub
push
and
cmc
or
mov
xchg
cmp
in
movsl
cs
cmp
out
push
add
dec
cmpsb
js
or
daa
in
sub
push
in
std
sbb
hlt
sub
cmc
repnz
shll
mov
cmc
push
push
or
sar
sbb
aas
mov
sarl
push
leave
push
aas
aas
or
lock
sbb
sub
inc
adc
mov
mov
sub
jmp
xchg
out
test
pop
cld
std
mov
in
cwtl
pop
dec
cli
test
movsb
jge
cwtl
cmp
sbb
and
movsb
bt
mov
lahf
xchg
or
bound
sahf
push
mov
call
xchg
adc
push
stc
dec
dec
xchg
mov
rcrl
xchg
xchg
leave
fdivr
es
data16
imul
lcall
repz
mov
mov
add
loope
mov
mov
or
adc
pop
mov
add
mov
cmp
pop
aas
mov
jmp
cli
movsb
test
neg
lock
jo
inc
xchg
mov
adc
mov
dec
jbe
test
dec
dec
mov
pop
add
sub
stc
sbbl
cmc
or
testb
push
mov
cmc
add
pop
mov
push
cmpsb
popa
dec
xchg
popa
jae
jno
fs
cmc
mov
pushf
pop
mov
repz
test
add
ljmp
call
xor
jo
stos
mov
lret
rcr
mov
xor
and
mov
adc
cmpsl
sarl
add
or
popa
sahf
mov
add
fwait
push
ja
jecxz
cmc
fwait
jp
inc
xor
mov
jecxz
sar
push
pop
outsb
ja
sub
into
add
nop
gs
sahf
pop
test
jne
hlt
cld
rcll
dec
sub
lret
mov
pusha
adc
cli
pop
clc
idivb
mov
dec
jge
ficomps
cmp
fistpll
orl
push
pop
push
and
jae
cmpsl
jle
dec
jne
sahf
dec
repz
jecxz
sub
xor
subb
xchg
mov
repnz
fmuls
xor
stos
in
leave
jb
inc
adc
les
and
mov
and
adc
xor
andb
sti
mov
out
sbb
mov
push
cmc
test
mov
dec
rcrb
loop
mov
add
insl
mov
pop
adc
in
std
bound
sbb
outsb
xor
adc
xorl
ss
test
daa
test
lds
je
inc
fsubs
push
inc
mov
xchg
ret
pop
mov
and
dec
daa
dec
adc
pop
mov
das
add
or
mov
sub
sahf
rcrb
rcl
cmp
out
jns
lea
sbb
icebp
icebp
inc
cli
adc
push
jecxz
ficompl
mov
scas
inc
push
rol
push
in
mov
popa
clc
push
aam
dec
shrl
hlt
outsl
mov
and
dec
push
dec
iret
cmc
arpl
push
or
or
mov
fcomps
inc
xchg
aas
into
pop
shl
insb
xchg
jne
cmpsl
and
aaa
insl
mov
sar
xchg
cmp
pop
imul
jns
mov
loop
pop
push
icebp
fmulp
pop
push
xor
mov
pop
in
movsb
and
ss
lods
xor
and
les
add
je
leave
push
inc
pop
adc
jge
leave
aad
cmp
xchg
aas
jl
leave
mov
sub
pop
lahf
loop
cmpsb
or
testl
cmp
icebp
lret
movsl
mov
icebp
pop
js
test
adc
mov
cwtl
ja
xchg
sub
movsl
xchg
cmpsl
xchg
pop
add
in
lret
std
rcrl
sub
xor
mov
pop
pusha
addr16
mov
pusha
cltd
pop
xorb
inc
adc
jne
out
loopne
inc
pop
in
in
inc
bound
les
mov
mov
mov
xlat
sahf
push
rcrb
pop
mov
sub
jno
mov
hlt
mov
push
inc
fcmovne
jecxz
adc
ds
lds
ja
mov
cmpsb
ret
push
sarb
and
mov
testb
jl
sub
pop
sbb
push
or
mov
decl
pushf
movsl
jp
add
mov
jecxz
das
mov
in
mov
jbe
js
push
add
mov
mov
or
jno
mov
jbe
jp
ret
adc
add
or
mov
std
lods
aaa
xchg
out
and
sbb
inc
call
fisubs
mov
jae
fsubs
dec
test
mov
je
dec
xlat
test
xorl
out
test
cmp
lret
mov
pushf
sti
xlat
cwtl
psubd
push
aaa
add
and
jg
cld
mov
sub
pop
add
adc
xchg
out
js
aas
ret
and
mov
pop
adc
movsl
jne
dec
js
mov
jg
dec
mov
shlb
dec
rcrl
out
dec
pushf
leave
movsl
and
jno
jb
sahf
pop
addl
push
pop
int3
test
jecxz
or
jbe
inc
jns
mov
mov
sti
inc
pop
sub
fsubrs
outsl
cmp
mov
pop
add
rcr
dec
cmpl
push
imul
test
fs
pop
out
sub
cltd
mov
xor
mov
out
cmpsb
adc
imul
ja
push
shll
sub
scas
push
dec
and
gs
ja
inc
ret
sbb
adcb
std
adc
and
pop
shll
jne
mov
mull
cmp
or
cmp
xchg
xor
xchg
dec
mov
jp
or
mov
popa
pop
xchg
cmpl
lret
negl
and
adc
push
test
dec
fimuls
insl
inc
inc
sbb
cmpsl
mov
mov
test
daa
mov
xor
test
dec
les
ret
mov
inc
test
ret
negb
outsb
inc
popf
mov
rcll
sbb
icebp
popf
idivl
mov
lcall
mov
and
xchg
jno
inc
insl
push
aad
and
movsb
mov
adc
ror
cltd
iret
lods
les
or
adcl
fbstp
xorb
sarb
adc
faddl
push
std
or
mov
cmp
cld
jp
fistps
lret
jns
int
push
idivl
rcll
movb
dec
mov
cwtl
ficoms
xor
aas
push
push
xchg
rcrl
sbb
and
jne
jae
mov
adc
dec
sahf
les
xor
inc
shll
inc
pop
out
inc
sub
aas
inc
pop
pop
dec
ds
pop
in
fsubp
lods
pop
pop
add
lock
mov
mov
adc
mov
inc
or
lahf
pop
loop
pop
fucomp
into
in
ds
xchg
mov
aad
xchg
mov
sbbb
sbb
add
xchg
ds
adc
addb
int
insl
cmc
in
jo
scas
sub
sbb
std
shll
mov
mov
sbb
jecxz
nop
stos
push
sbb
jle
fistps
cmp
cmp
xchg
pusha
sbbl
mov
inc
cwtl
push
repz
cmc
cs
or
outsl
xlat
fidivrs
pop
ret
jl
dec
inc
loopne
jecxz
xchg
imul
mov
testb
popf
es
addr16
push
sub
sub
mov
xor
jo
notl
pop
dec
stos
fsubr
pop
xchg
daa
cltd
cmp
cmp
xor
mov
cmp
data16
cltd
pop
sub
cmp
jo
add
ret
fwait
leave
push
mov
stc
pop
insl
jnp
sbb
sarb
call
cmc
in
cltd
mov
jbe
xor
inc
add
orl
enter
dec
or
inc
xor
dec
call
xor
push
int3
bound
add
lahf
push
mov
cmpsb
sub
mov
ljmp
mov
mov
mov
rcll
dec
hlt
ss
lods
ds
ret
inc
mov
test
pop
inc
push
mov
push
adc
shrb
aad
fdivs
fnstsw
pop
sbb
cmc
add
push
xchg
daa
fdivs
xchg
xor
cmp
adc
js
aaa
imul
cmp
xor
inc
adc
test
decl
sbb
pop
dec
insb
dec
movsb
jae
les
push
sub
lods
xchg
dec
and
subb
das
shll
leave
ljmp
mov
dec
xchg
icebp
push
repnz
cmp
pop
inc
push
inc
stos
pop
push
push
clc
psadbw
pop
mov
pop
xorb
xor
push
bound
adc
scas
jge
dec
pusha
add
xchg
test
push
lea
inc
push
loop
int
mov
js
dec
push
pop
stos
daa
insl
cmc
xor
mov
lds
mov
repz
popa
dec
lcall
and
sbb
cltd
clc
or
fsubrl
or
outsl
jl
add
test
sub
push
jb
mov
mov
fimull
popa
and
std
adc
pop
packssdw
mov
jmp
popa
mov
pushf
mov
nop
call
mov
es
adc
rolb
cmp
lahf
sbb
mov
repz
daa
and
fiadds
mov
push
data16
cs
mov
outsb
outsb
pop
and
frstor
stos
push
or
dec
mov
sbb
cmp
push
jno
dec
enter
push
int
ret
fistpll
sub
sbb
push
and
jno
repz
fistps
in
dec
mov
pop
xchg
xchg
movsb
bound
negl
test
pop
lods
pop
rolb
shl
push
xor
popa
loopne
xchg
mov
pop
adcb
or
or
xor
int
sbb
pop
clc
or
mov
mov
adc
jbe
subb
jge
mov
stos
cwtl
xchg
push
in
stc
fsubl
out
adc
sar
dec
sub
pop
sbb
mov
call
mov
std
es
inc
aam
xchg
pop
add
jno
lahf
fcmovnb
or
sti
push
xchg
dec
lahf
or
dec
sbb
or
jmp
push
nop
popf
arpl
push
filds
nop
and
xlat
mov
mov
jg
jecxz
ds
out
dec
or
fs
lods
int3
mov
sub
mov
mov
cmp
repz
dec
sbbb
inc
and
push
mov
mov
mul
daa
insl
loopne
and
adc
ret
inc
add
and
negb
leave
add
pusha
cmp
mov
gs
and
imul
movaps
adc
and
jg
lock
pop
sbb
dec
test
mov
jnp
sub
mov
and
out
xchg
mov
sub
xchg
shll
mov
jns
ret
lret
dec
adc
test
inc
sar
out
sub
pop
push
sub
fstps
movsl
popf
jne
adc
pop
fdivrl
lock
push
stc
subl
outsl
mov
dec
cwtl
popf
jnp
lcall
jno
inc
adc
push
shlb
mov
mov
jb
inc
jne
lods
out
mov
xchg
mov
nop
sti
mov
mov
cli
add
jl
mov
or
mov
in
aam
lcall
add
jb
push
mov
jle
xlat
std
enter
sub
into
insl
scas
andl
rolb
push
loope
es
adc
add
mov
mov
movsl
or
lahf
adc
out
mov
add
lods
imul
nop
pop
lds
ds
pop
dec
adc
or
sbb
mov
jbe
outsb
jmp
jnp
inc
inc
mov
hlt
popf
push
and
mul
cmp
fildl
xchg
call
decb
dec
dec
mov
out
add
test
dec
pop
shrb
jle
dec
nop
mov
adc
inc
test
cld
push
mov
jecxz
sub
cmp
add
mov
stos
popf
pop
mov
mov
sub
ret
mov
icebp
xor
dec
outsl
insl
cmp
movsl
mov
adc
mov
pop
mov
adc
test
ret
push
add
and
mov
mov
push
ljmp
je
test
test
sahf
dec
inc
inc
adc
pushl
lahf
fsubrs
jns
xchg
mov
pushl
xchg
testl
stos
clc
lret
loopne,pn
push
enter
rcl
dec
clc
ja
jo
xor
mov
jnp
leave
xor
test
jmp
pop
outsb
scas
in
mov
pop
sbb
mov
sar
in
mov
adc
ljmp
enter
arpl
add
imul
dec
lret
inc
jbe
mov
fidivs
mov
inc
sbb
movsb
push
jmp
repz
out
sbb
es
aad
mov
loop
mov
push
xorb
enter
hlt
lret
jle
mov
sbb
add
sbb
mov
or
inc
or
cmp
stos
add
les
and
fs
mov
mov
shrb
push
add
ljmp
cmp
loopne
nop
xchg
jl
mov
outsl
mov
inc
test
and
fxtract
stc
cmp
mov
popa
jecxz
mov
lcall
imul
scas
test
dec
cmp
pop
inc
and
lods
mov
stos
jge
sub
in
cmp
scas
aas
mov
pop
and
xchg
addl
fsubrs
jbe
inc
pop
lods
and
push
sbb
sub
mov
pusha
shlb
xchg
push
pop
cld
xorb
roll
in
popf
shll
scas
test
jl
dec
out
scas
loop
outsl
pusha
shlb
call
gs
cmp
add
cmpsl
scas
call
mov
dec
mov
mov
inc
dec
dec
xchg
pop
pop
add
or
push
pop
jge
out
lds
jle
add
jecxz
pop
loope
sub
xchg
xchg
sbb
test
fdivrl
test
xchg
ficomps
scas
std
notl
dec
stc
insb
dec
fisubl
addr16
test
mov
add
xchg
xor
movsl
aam
shll
inc
mov
jle
repz
shrl
add
mov
jbe
cs
les
dec
filds
scas
test
lret
ret
mov
test
loop
mov
sub
cmpsl
xor
dec
jno
sub
sub
out
addr16
mov
movsl
or
push
fcmovnu
adc
mov
push
lcall
xor
stos
xor
nop
inc
fstpl
cmp
jae
adc
es
push
push
ja
inc
push
jb
leave
xor
ret
cmpsl
inc
icebp
inc
lahf
hlt
sbb
adcl
inc
pop
test
cmp
mov
push
jle
sarl
test
add
cli
mov
fadd
inc
cmovle
lds
cwtl
sub
ror
popf
xor
jnp
jmp
push
jp
lds
mov
cmp
pop
sbb
rolb
lds
jno
or
dec
sahf
out
inc
push
pushf
lahf
or
lds
push
ret
bound
pop
subb
sbb
je
pop
mov
jmp
mov
popa
inc
gs
mov
jle
mov
pop
cmc
push
or
movsl
ret
adc
fsubl
adc
mov
rclb
and
pop
xchg
mov
sub
pop
ret
cmp
mov
sub
enter
xchg
lods
sub
call
fsin
cmp
jmp
cwtl
cld
cmp
fsubrl
negl
inc
inc
hlt
adc
fbstp
mov
pop
pop
inc
movl
jmp
push
push
or
adcl
mov
sti
cmc
iret
xor
jmp
and
rsqrtps
les
fisttps
les
sbbl
cwtl
in
outsl
cmp
pop
or
mov
addr16
mov
int3
or
sbb
arpl
dec
xchg
sub
cmp
std
jp
xchg
or
jnp
inc
test
in
cmp
ror
loop
jo
xor
lock
pushf
es
lock
add
mov
add
test
xchg
test
repnz
hlt
mov
mov
stc
fnstcw
push
adc
ds
push
mov
dec
ret
cmpsb
mov
push
sub
push
or
push
iret
add
int3
sbb
pop
push
adc
lds
and
popa
mov
outsb
je
js
repnz
sarl
out
adc
mov
jl
mov
sbb
jae
and
add
fs
sbb
sub
push
cli
inc
fsubl
pop
pop
test
daa
pop
jge
push
repz
test
loope
lods
sub
bound
ljmp
fisubs
mov
mov
and
ljmp
pop
adc
push
mov
repnz
ljmp
fucom
jp
call
shlb
test
inc
jg
cmp
mov
add
dec
ret
ljmp
pop
add
loopne
outsl
icebp
out
cmp
jo
xor
mov
or
ljmp
sbb
in
fidivrs
inc
add
in
jmp
pushf
or
jae
mov
sub
cmpsl
push
cmp
jne
cmp
divl
push
out
repnz
dec
jge
call
in
mov
mulb
mov
loopne
push
pop
icebp
mov
ja
mov
cmpsb
and
cmp
mov
data16
dec
cmp
and
packssdw
and
outsb
fisubrl
rorl
xchg
jecxz
mov
fisubs
inc
add
inc
pop
jmp
jle
mov
in
testb
std
cli
add
xor
cmp
cli
jmp
xchg
mov
fnstsw
in
es
cmp
sbb
es
rcrb
inc
roll
dec
fmuls
out
call
cmpsb
jmp
mov
mov
xor
and
aad
push
in
add
pushf
repz
mov
cmp
mov
mov
push
sbb
sti
ds
xor
xor
stos
jb
mov
sti
out
mov
mov
imul
inc
aaa
jae
jge
in
test
mov
adc
nop
xchg
push
ret
mov
addr16
mov
pushf
cld
xchg
jl
jno
loopne
fimuls
inc
push
or
and
cs
push
push
add
lods
jne
add
and
and
pop
add
mov
in
push
xor
xor
rcrb
jmp
dec
test
stos
andl
cmp
pop
push
adc
aam
loopne
xchg
js
andb
clc
lahf
das
adc
or
daa
mov
mov
movsb
mov
sbb
jge
mov
orb
test
cli
shll
shl
mov
xor
imul
cmp
inc
ja
cmp
ret
test
sub
inc
adc
cli
and
and
inc
sahf
imul
push
xorl
adc
dec
sub
sub
jp
ljmp
inc
sahf
in
adc
xchg
mov
popa
xchg
fstl
dec
and
lods
mov
xor
std
faddl
sub
in
mov
lea
aas
push
int
sbb
hlt
or
xor
push
shr
loopne
insl
xor
cltd
xor
inc
jmp
scas
adc
xor
push
sbb
adc
mov
cwtl
mov
icebp
push
loop
js
aad
cmp
mov
add
fstps
int
mov
mov
mov
ds
inc
jge
mov
sub
jno
push
pusha
and
fidivrl
ljmp
add
mov
pop
push
pop
jle
addr16
push
into
pushf
jb
pop
inc
and
sub
out
int
out
fnstcw
les
cmp
push
dec
aaa
xchg
mov
xor
addl
push
jge
jge
lret
lock
jmp
mov
aad
xor
outsl
adc
adc
in
out
fwait
and
pushf
es
jne
dec
mov
cld
popa
push
out
dec
pop
pop
daa
pop
and
shll
test
mov
and
push
xchg
sti
fninit
dec
mov
in
inc
mov
mov
out
push
pop
insb
stos
inc
arpl
je
sbb
mov
icebp
cwtl
pop
inc
jecxz
shlb
je
idivb
cmp
push
xor
aas
rolb
lods
inc
xor
addr16
pusha
jb
add
add
lret
jnp
stos
push
das
xor
loope
xor
faddl
adc
push
sub
repnz
cmp
sub
int
out
and
bound
inc
loope
int
inc
ret
psubusw
repnz
xor
push
lret
incl
push
ret
pop
jmp
inc
cs
xchg
dec
cs
rorl
adc
xor
ljmp
jg
cld
pop
fistpl
das
decb
out
aad
stc
inc
mov
clc
or
test
js
mov
roll
cmp
sub
cmc
popa
xchg
xor
idivl
movsl
ss
sub
adc
jmp
or
insb
or
dec
cltd
movsb
mov
xor
iret
arpl
fstpt
arpl
dec
adc
iret
pop
and
add
leave
loop
shlb
nopl
fwait
popf
aad
ds
movsl
sahf
xor
cmp
push
rclb
lret
sarb
lcall
pop
ljmp
ret
btc
jle
das
mov
or
add
push
cmp
xchg
les
and
lcall
fstps
mov
insb
and
faddp
insl
sub
mov
or
xchg
popa
roll
push
jno
or
lods
sub
cmp
popf
cmp
scas
daa
ret
mov
pop
lcall
stos
add
dec
aas
jae
movsb
bound
xor
aad
sti
push
xchg
xchg
xchg
xchg
cmp
insb
inc
mov
cmovp
mov
out
add
jecxz
ss
dec
sbb
and
scas
xchg
cmp
xchg
xorb
lods
push
ret
pause
dec
ficomps
sarb
mov
jnp
orl
push
mov
aas
insb
adc
sbb
inc
and
mov
daa
push
pop
fs
xchg
dec
insb
scas
xchg
lds
addr16
cmp
inc
xchg
xor
pop
inc
cli
int3
adc
scas
fxch
mov
xchg
mov
mov
ds
repz
or
pop
hlt
push
imul
insl
jecxz
movsb
mov
fwait
pop
stos
and
dec
pop
nop
cli
push
or
dec
lods
bnd
or
lods
dec
jno
xchg
lock
sbb
or
mov
imul
inc
jge
das
pop
push
in
lods
out
cli
in
test
adc
ljmp
outsl
es
int3
push
mov
clc
scas
or
mov
test
jg
ficoms
sbb
sti
push
pop
mov
repnz
mov
cmp
jb
subl
mov
cmp
testb
pop
dec
sbb
adc
ja
aam
or
xchg
lcall
mov
push
jnp
in
jge
in
xchg
jecxz
daa
or
jo
movsl
cmp
sti
push
lods
dec
movsl
push
jae
aam
cmp
test
sub
aaa
ds
jmp
fcmovu
loope
sahf
popa
and
adc
push
push
mov
mov
sti
push
ret
loop
sub
push
cmpsl
aad
aaa
lds
movsb
and
cmp
mov
jae
subl
jne
loop
in
sub
cmpsb
pop
xchg
das
pop
testl
adc
inc
inc
lods
stos
popa
adc
fadd
add
cltd
mov
sti
test
shlb
das
cmpsb
repnz
mov
and
mov
loope
inc
push
push
fisubrl
or
out
insl
test
decl
and
jmp
in
insb
xor
mov
insb
ljmp
push
or
sbb
js,pt
out
loopne
hlt
jmp
mov
out
aaa
rcll
sub
aad
xchg
jne
and
or
sbb
xor
repnz
ret
sbb
push
mov
arpl
rclb
jb
ss
mov
pushf
xor
jbe
jle
adc
ret
sti
scas
xchg
fwait
es
cmpsl
lret
stos
push
test
xor
or
jmp
mov
mov
filds
mov
xlat
mov
das
pushf
or
sbb
jmp
pminub
pop
xchg
adc
outsb
pop
popf
push
dec
daa
push
pusha
jecxz
movsl
mov
xor
clc
push
or
xor
repz
ret
fildll
jb
adc
inc
aaa
lds
sub
push
or
in
std
xchg
das
nop
or
cwtl
enter
out
adcb
movsb
mov
cmpsl
scas
fcoml
sbb
xor
push
adc
mulb
xchg
mov
adc
cwtl
mov
in
orl
and
rcrb
sub
cmc
daa
je
es
jp
adc
out
imul
mov
icebp
negl
mov
in
call
jl
add
and
adc
lret
and
setne
mov
jnp
sub
cmp
xor
pushf
rol
test
outsb
std
imul
pop
pop
pop
mov
pusha
fildl
sub
cld
data16
xchg
sti
sbb
push
outsb
adc
out
scas
push
lds
sbb
repnz
xor
test
ds
adc
mov
xor
pop
push
mov
jo
bound
jge
rorl
xlat
or
mov
sbb
out
sub
iret
push
loop
in
mov
out
shrb
andb
mov
adc
repnz
adc
dec
dec
test
sti
in
enter
cmpb
outsb
pop
mov
jp
jb
sbb
dec
push
jp
adc
mov
into
rcl
and
pop
mov
push
push
mov
dec
push
or
pop
ret
xlat
inc
push
push
notl
dec
mov
addr16
movsb
nop
lahf
int
mov
ja
push
sti
lret
and
daa
sbb
jge
cli
shll
aad
push
out
lds
push
pop
shrl
add
and
pop
and
scas
xlat
aad
push
test
xchg
lret
loope
sub
sbb
test
push
pop
repz
mov
mov
xchg
inc
hlt
xchg
cs
sub
loop
clc
lret
add
mov
jl
shrb
out
cwtl
sbb
test
xor
mov
dec
push
xor
push
testl
dec
mov
lds
cmp
mov
addr16
negl
xchg
int3
xchg
aam
ljmp
pop
add
jns
pop
divl
sbb
cmpsl
das
adc
dec
and
movsl
jp
shrl
mov
push
lea
lea
stos
lret
insb
int
and
add
xorb
std
int
add
loop
push
pop
jo
add
and
fmulp
mov
sbb
sahf
pusha
rol
rolb
in
push
in
iret
cltd
push
xor
sbbl
cmpsb
pcmpeqb
dec
fcmovnbe
mov
xchg
mov
dec
fmul
popa
out
int
mov
lcall
cmp
out
movsb
add
inc
jne
out
stos
cmp
pop
mov
sub
cli
and
xchg
sbb
outsl
sub
shl
jno
dec
imul
out
sub
add
or
inc
fs
push
push
mov
cmpsl
and
call
cli
movsl
sub
jmp
jnp
mov
mov
addr16
and
and
dec
add
push
mov
jmp
popf
pop
xchg
nop
jmp
cmp
aad
dec
push
lcall
popa
jns
loopne
and
xor
pushf
mov
mov
mov
push
jg
inc
jge
das
das
mov
andb
fs
mov
mov
gs
or
fsts
stc
mov
popa
mov
or
test
mov
lds
mov
or
mov
movsl
test
or
jmp
cmc
lahf
stc
rcl
jle
adc
mov
push
int3
inc
sahf
inc
es
pop
xchg
xor
xor
fistpll
mov
mov
int3
insl
mov
in
fwait
jp
ljmp
repz
out
std
call
pop
data16
sbb
add
mov
call
push
repnz
mov
push
out
mov
negb
mov
imul
lcall
int3
xchg
jns
sbb
outsl
jne
cmp
call
imul
mull
pop
push
insl
testb
daa
xchg
add
jecxz
xchg
mov
loopne
pop
xor
mov
push
addr16
xchg
int
fcomps
jge
sbbl
adc
add
pusha
enter
pop
sahf
adc
cmp
cmpsb
mov
inc
push
loopne
jno
cmp
sub
add
lret
inc
push
mov
stos
bound
mov
push
pusha
cmp
lret
cmp
pop
pop
cs
jns
inc
mov
jg
int3
mov
mov
les
pop
xor
nop
cmc
sbb
fistps
fidivrs
lret
lods
inc
dec
inc
mov
or
fwait
lods
fdivs
faddl
mov
and
and
test
pop
pop
cmc
sarl
xor
popa
pop
popf
lods
hlt
mov
leave
scas
mov
lret
inc
xlat
inc
mov
pcmpeqd
mov
es
or
adc
mov
ret
fidivrs
mov
pop
inc
dec
notl
bnd
and
mov
dec
shll
xchg
test
ljmp
xchg
out
jbe
sbb
sub
dec
mov
dec
jb
sbb
es
sub
add
cmc
scas
and
xor
cmpsb
test
imul
cmp
gs
mov
js
sub
dec
outsl
dec
nop
xor
mov
into
stos
push
cmp
stos
pop
repnz
jle
ret
xchg
cmp
into
mov
lock
cwtl
mov
lret
adc
pushf
mov
cmc
add
or
mov
jg
leave
arpl
cmp
stos
dec
or
pop
popa
xor
push
and
mov
jne
cmp
int3
jb
jmp
and
sbb
inc
icebp
add
cs
push
cmp
fwait
and
adc
stos
sti
adc
in
add
fmul
and
fidivrs
mov
adc
dec
inc
cld
ss
sub
jle
sub
mov
nop
pop
hlt
xor
pushf
in
movb
or
out
aam
pop
shl
repnz
mov
mov
adc
roll
cmp
jmp
sbb
sbb
js
js
dec
jne
pop
mov
sarl
dec
cmp
xchg
mov
pop
push
push
movsb
fwait
xchg
jnp
aas
push
push
rcl
icebp
add
mov
jno
cld
sub
dec
adc
jp
sbb
xor
mov
iret
adc
mov
sub
cmp
sub
jmp
popa
not
cs
xchg
popf
xchg
adc
mov
jl
mov
inc
push
test
mov
testl
xor
sbb
aad
sbb
out
clc
stc
out
or
mov
sub
cld
push
addr16
lods
xor
or
and
iret
daa
std
dec
in
cmp
mov
xchg
nop
dec
sti
pop
je
imul
scas
insb
mov
rcll
ja
inc
incb
or
lea
cmp
sub
mov
test
push
fs
fcompl
add
mov
or
fimull
sbb
push
xor
mov
mov
or
cmpsb
fnsave
and
mov
push
fnsave
inc
insb
ficoml
rorb
shll
movsb
in
imul
je
add
jb
in
scas
mov
lds
es
mov
inc
daa
pop
in
call
push
mov
test
aaa
test
or
xor
ljmp
xlat
bound
mov
cmp
adc
sbb
outsl
ret
inc
push
sahf
or
loopne
cmp
jne
pushf
jg
push
inc
pop
repz
rclb
ror
stos
add
adc
fldt
fsubs
ficoml
mov
inc
icebp
fsts
sbb
xor
push
pop
out
cs
out
xchg
inc
shll
xor
aas
dec
mov
test
aas
xlat
xchg
sbb
shrb
sub
mov
in
loop
in
mov
repnz
in
lret
and
push
lcall
movsl
lcallw
fidivrs
pop
pop
jecxz
dec
mov
mov
shll
jns
pop
loopne
xchg
dec
addr16
xor
ret
mov
and
loop
addb
push
lea
mov
inc
in
cmpsl
cmc
cmp
xchg
roll
icebp
or
push
ss
inc
out
fwait
in
bswap
ret
ss
cmpl
lock
mov
push
sti
das
lcall
lcall
pop
das
insl
pop
xor
sbb
ljmp
pop
repz
dec
mov
insb
push
sbb
popa
lret
jg
lods
mov
lods
cmp
ljmp
roll
int3
in
imul
cld
mov
adc
mov
scas
cli
or
pop
repnz
add
dec
lret
out
orb
cmc
fucomi
fldcw
jno
scas
inc
sbb
push
mov
add
xchg
pop
xor
push
jae
add
je
enter
sti
mov
call
pusha
push
sbb
or
stos
pusha
xchg
cmp
cmp
jno
pop
frstor
mov
mov
int3
xchg
sub
rcrl
adc
outsb
out
sbb
dec
rcrl
xorl
rep
inc
push
and
sbb
xor
lcall
out
xlat
fs
xchg
loop
push
dec
and
xchg
ss
testb
stos
push
lret
push
jb
mov
push
pop
mov
shl
xchg
jne
mov
aas
xor
test
pushf
jbe
xchg
xchg
add
dec
xchg
dec
inc
or
mov
mov
pop
jl
push
cwtl
mov
jne
outsb
pop
cmp
cmc
jmp
cmp
mov
icebp
ret
mov
pop
push
out
mov
sub
inc
dec
push
mov
cmp
cs
cld
mov
ss
cmpsl
test
fsubl
and
adc
cmp
push
aaa
cli
outsl
jmp
inc
sub
das
les
int
sbb
cli
jecxz
stos
imul
dec
mov
push
jle
and
dec
outsb
shll
jecxz
jae
loopne
and
and
sarl
enter
ljmp
pop
jge
add
popa
orl
or
mov
inc
fistps
pop
sbb
sbb
notl
shrl
xlat
pop
sub
xor
pop
adc
test
dec
cmpsl
lret
xchg
stos
push
sub
or
dec
or
dec
xchg
and
je
or
xchg
jp
dec
sub
xchg
pop
pusha
jae
imul
es
push
ljmp
adc
sub
lahf
lea
aad
clc
and
sbb
ret
hlt
jge
xor
push
or
mov
jo
stos
pop
aad
outsl
jmp
and
cmc
adc
fdivl
in
out
ljmp
mov
scas
ret
pop
bound
pop
cmp
pop
test
mov
sub
insl
fcmovnu
inc
scas
sahf
sbb
xchg
add
xor
sbb
xchg
cmp
jns
pop
fs
test
push
sti
add
mov
mov
and
mov
daa
lods
arpl
aam
push
xchg
pop
lock
adc
arpl
cmp
add
addr16
repz
adc
aad
jbe
mov
cltd
mov
cmp
xchg
cli
adcb
repnz
ljmp
pop
subb
or
outsb
push
rcl
les
mov
pop
mov
in
imul
hlt
dec
les
adc
out
lds
sti
add
lea
dec
incb
xor
mov
ljmp
mov
sub
inc
xor
lea
push
push
or
nop
pusha
pop
mov
lahf
inc
dec
iret
jnp
xlat
mov
mov
pushf
add
ret
test
cld
and
sbb
subb
jge
imul
push
and
loopne
cmc
iret
xor
xchg
pop
lss
sbb
lret
mov
jge
add
push
push
cmp
add
pop
cs
sti
or
push
jne
test
sbb
mov
mov
in
add
cs
push
stc
mov
mov
fldt
inc
icebp
call
mov
lds
pop
xchg
mov
pop
and
pop
ret
or
lret
negl
mov
or
push
mov
dec
lds
push
incl
sub
lret
lahf
fildl
push
dec
mov
add
mov
imul
sbbl
enter
mov
loope
and
mov
mov
movsb
mov
cmc
enter
adc
sub
jbe
dec
xor
stc
jp
lods
out
daa
inc
add
xchg
jle
imul
mov
vandps
jmp
xlat
jmp
cmp
loopne
stos
daa
adc
jbe
mov
push
mov
mov
mov
mov
scas
adc
cmc
ja
inc
aam
cmp
lods
sbb
fwait
bound
out
and
push
fs
cmp
pushl
hlt
fistpl
pop
push
das
mov
test
sbb
mov
adc
lcall
aad
jmp
push
aad
insb
cmc
sarb
sub
mov
lock
mov
adc
adcb
and
xchg
jg
fwait
call
cmpsb
out
xchg
outsb
loope
adc
loop
test
out
mov
clc
pop
push
sub
cmp
cs
movsb
mov
xor
sub
fwait
test
push
test
stc
and
add
subl
repz
sub
repz
fs
mov
movsb
je
loopne
aad
and
aas
enter
push
fnsave
sahf
inc
rcl
dec
aas
rcl
mov
lret
fnstcw
mov
mov
lret
lds
cli
mov
mov
adc
nop
xchg
jle,pt
xchg
insl
pop
fst
js
ss
xchg
hlt
out
push
jns
je
xchg
add
inc
std
dec
imul
dec
pop
pop
jb
pushf
js
dec
scas
and
nop
cmp
dec
jmp
mov
lds
mov
sbb
cmp
std
xchg
cwtl
lret
mov
mov
shrb
aad
sbb
je
or
mov
mov
push
pop
filds
lock
jae
mov
xchg
xlat
or
push
int3
jp
mov
or
xchg
add
push
cmpb
testb
movsl
lahf
inc
aam
scas
aaa
adc
dec
sbb
jmp
xor
mov
cmp
int
cmc
inc
cmp
clc
data16
cmp
pop
inc
jno
aaa
icebp
pop
mov
xchg
add
mov
daa
add
mov
ret
cmc
cmc
insl
test
jmp
add
push
jne
cmp
xchg
out
shrl
and
iret
cltd
adc
cmpsb
popf
xor
ss
lock
mov
insl
orb
hlt
dec
repnz
leave
outsb
cld
adc
xor
fldcw
mov
ja
xchg
push
scas
xor
shlb
xchg
insb
repnz
jg
dec
sbb
ja
pop
xchg
test
cmp
or
jle
pushf
dec
push
sarb
decl
inc
xchg
add
push
std
push
xchg
dec
mov
filds
gs
pop
mov
in
ret
test
in
pop
dec
pop
jp
add
dec
xor
push
dec
adc
imul
inc
inc
insb
cmp
or
clc
xlat
dec
js
jno
pop
push
sbb
lock
mov
dec
mov
dec
dec
cmpsb
call
punpcklbw
fs
loop
jmp
xchg
inc
movsb
adc
inc
data16
jp
int
mov
pop
cmc
lods
push
xor
je
popa
mov
adc
rolb
and
int
pop
testb
xchg
imul
insl
nop
int3
sub
xchg
inc
je
inc
ljmp
xorb
lret
bound
pop
fdivrs
xlat
jle
out
xchg
push
int3
push
rcr
dec
adc
pop
jns
adc
in
ret
popf
jne
insl
ljmp
cmp
cltd
pop
mov
cmp
mov
sbb
xchg
enter
xchg
int3
cmc
lret
fistpll
mov
jo
jmp
pop
inc
jge
sub
mov
inc
xchg
and
fisubrs
sbb
or
gs
clc
dec
xchg
mov
aad
ljmp
call
into
mov
movsb
cmpb
jb
out
adc
jp
or
in
icebp
pop
mov
inc
xor
in
push
mov
dec
pusha
aam
pop
xor
loope
pop
jg
aad
sbb
push
ftst
mov
loop
pop
fs
add
lret
pop
jge
dec
sub
sbb
jecxz
fs
pop
xor
xchg
sarb
pop
dec
icebp
inc
iret
stc
ret
int3
stos
shl
adc
out
jb
test
and
mov
cmpsl
les
inc
lret
xor
in
inc
jbe
inc
mov
xchg
insb
out
jbe
xchg
mov
mov
sbb
imull
vmaxsd
lea
cltd
adc
aaa
arpl
or
mov
sub
sahf
pop
fdivrs
int
shlb
ja
dec
into
jbe
cli
repz
jl
cli
out
mov
mov
xorl
sub
popf
jbe
inc
pop
test
push
push
rcrl
add
or
in
push
vmptrst
je
mov
jne
rolb
lods
xchg
mov
insb
shlb
xor
rorb
das
sub
ret
sub
lret
xor
pop
sub
jo
bound
adc
aaa
repnz
push
stos
push
mov
or
xor
and
sbbl
lret
cmpsl
xchg
xchg
stos
cwtl
xchg
or
and
pop
sub
jecxz
testl
xchg
movsl
test
arpl
cmpb
enter
lea
popa
pop
shll
and
leave
cmpsl
cli
xchg
jge
push
sahf
inc
pop
shll
pop
fnstenv
testl
test
xchg
sar
pop
daa
add
push
aaa
ds
lea
xlat
out
mov
jnp
dec
mov
xchg
addr16
lea
aaa
cmpsl
jmp
orb
rolb
inc
loopne
adc
push
sbb
pop
cmp
push
das
push
xor
test
inc
xchg
sub
movsl
mov
scas
lcall
pop
ljmp
jl
and
xchg
lock
dec
mov
jne
mov
movb
and
ljmp
in
ss
sbb
imul
and
jecxz
cmpb
push
jg
outsb
in
and
lahf
mov
loope
test
xlat
push
lods
scas
jns
clc
fdivr
dec
sub
aas
popa
sti
push
xor
mov
fistl
mov
pop
outsb
or
lods
test
xchg
lret
and
in
mov
mov
xchg
inc
mov
movsl
in
jo
push
shl
lret
xchg
outsb
mov
inc
flds
jmp
addr16
cmp
sbb
loop
out
sahf
cmc
movsb
pusha
scas
fwait
test
scas
mov
test
mov
in
xchg
sbb
jg
xchg
jne
les
xchg
shrb
cmpsl
mov
or
mov
sub
leave
push
lahf
xor
inc
fs
lods
fldenv
andb
adc
mov
push
sbb
cmp
mov
cmp
dec
lods
stc
add
pop
incb
aaa
loope
dec
dec
adc
ret
mov
clc
fimuls
add
dec
sbb
ss
xor
jae
arpl
mov
jo
dec
adc
jo
sbb
out
mov
in
cmp
mov
push
andl
pop
pop
xchg
pop
fmuls
movsl
adc
push
mov
je
xchg
xor
lcall
jne
add
test
jmp
mov
out
or
mov
push
psubq
xor
cmp
rclb
cs
and
push
lods
mov
loope
mov
dec
add
inc
movsl
mov
test
stos
aam
and
jmp
push
mov
cld
jb
popf
scas
scas
lcall
xchg
add
mov
adc
dec
int3
test
clc
jecxz
and
fwait
je
inc
cmp
cmp
cmp
pop
pop
xchg
lods
jle
jp
dec
push
ret
ret
rcll
cmp
lahf
dec
sarb
imul
cmpsl
pop
add
add
fcomps
leave
add
pop
mov
mov
inc
push
jbe
addr16
add
lahf
icebp
jp
lret
test
push
push
mov
and
lahf
or
insl
and
mov
je
popf
cmpsl
sahf
les
jge
ret
and
mov
mov
mov
fcomps
push
or
adcl
push
cmp
xor
arpl
push
cmp
pop
aas
push
adc
jmp
cmp
popf
movhps
inc
dec
ja
scas
xor
cmp
movsl
rcl
jo
mov
mov
movsl
adc
fdivrl
movd
into
stos
add
xor
push
ja
inc
ret
lock
xor
or
cwtl
mov
pop
jae
adc
pop
les
xchg
pushf
mov
icebp
outsb
xchg
xor
arpl
jae
in
pushf
push
mov
jg
inc
lods
mov
cwtd
push
fdivrl
and
mov
inc
jle
sub
inc
adc
pop
add
mov
pop
ja
xchg
outsl
call
repnz
push
punpckhdq
dec
xchg
pusha
dec
mov
push
icebp
or
sti
je
inc
mov
in
lds
inc
dec
jns
mov
inc
test
jnp
pop
adc
pop
ljmp
int
std
stos
ret
jbe
pop
sbb
xchg
adc
pop
xorb
xchg
mov
adc
cwtl
ds
xor
ret
cmp
or
ja
iret
aaa
cmp
aad
lret
or
push
mov
push
ret
sub
bound
mov
inc
js
mov
insl
mov
inc
push
push
push
fildl
out
aam
inc
leave
sbb
dec
clc
jl
ljmp
push
inc
pop
cmp
movsl
cmp
dec
ja
outsl
addb
cwtl
mov
int3
bound
test
lods
sti
je
pop
adc
mov
xchg
jne
dec
into
mov
test
mov
les
jp
repnz
xchg
mov
inc
dec
mov
or
mov
std
arpl
in
push
das
cmc
xor
xchg
add
xor
adc
xchg
lock
adc
adc
out
push
xor
lods
mov
inc
add
insb
inc
push
cmp
stc
std
out
sub
in
push
insl
cmp
push
cli
ret
sub
cmp
mov
out
mov
mov
mov
sarl
je
aad
cmp
cmp
loopne
loop
addr16
pop
jae
shlb
fsub
xchg
mov
cmpl
ret
shr
cmp
aad
mov
sti
push
push
cmp
or
jae
ret
int3
and
fwait
adc
stc
mov
add
cmp
fdivrl
pop
and
leave
hlt
subl
and
ss
sbb
aam
scas
stos
mov
jne
xchg
adc
dec
inc
test
jns
stos
insb
data16
cmp
rolb
loopne
ficoml
inc
and
popf
mov
fmull
sub
jb
sbb
mov
iret
aad
jmp
fcomip
and
jns
shll
push
xchg
sti
sbb
or
adc
push
stos
sbb
pop
pushf
push
ficompl
mov
pop
and
mov
js
adc
test
pop
popf
xchg
push
dec
sahf
push
sbb
xor
pop
test
inc
jmp
dec
mov
mov
pop
and
pop
mov
adc
mov
in
sub
push
aas
adcb
adc
aaa
cltd
lret
cmc
test
call
add
clc
hlt
add
cmp
shll
xchg
test
mov
push
or
dec
movl
jno
insb
and
inc
xor
popa
cmp
jmp
jns
cmc
inc
xchg
test
or
xor
ret
and
imul
mov
sarb
rclb
hlt
and
ficoms
add
fidivrs
cltd
mov
mov
int3
insb
loope
lret
adc
mov
xchg
xchg
hlt
icebp
lods
inc
or
push
inc
jne
inc
iret
sbb
ret
arpl
int
add
fnstenv
xchg
push
movsb
aas
xchg
xor
in
sbb
push
mov
xchg
lretw
popf
leave
xor
mov
pop
clc
psubsw
jle
pop
and
xchg
mov
popf
inc
div
ja
idivl
xchg
xchg
push
outsl
and
push
pop
or
cli
int
xor
lret
incl
repz
loope
mov
cmpsl
xlat
inc
inc
nop
aas
push
or
ljmp
xor
mov
sbb
outsb
cmp
shll
hlt
mov
add
mov
lahf
mov
sub
mov
movsb
dec
fstpl
cwtl
loop
out
out
nop
cs
cmp
shll
sub
mov
xor
pop
ljmp
cmp
rcl
sub
mov
shrl
fwait
sub
jg
dec
pop
xor
push
mov
or
daa
sahf
mov
fwait
cwtl
adc
mov
enter
add
scas
ret
jbe
or
scas
xchg
rcrl
ja
add
fsubs
sahf
xchg
sbb
xchg
lcall
jle
mov
or
sub
sub
dec
cmp
and
ficompl
mov
push
or
pop
adc
add
int3
mov
jle
lret
mov
call
sahf
iret
mov
leave
in
dec
movsb
dec
push
aam
in
aas
mov
dec
roll
movsbl
int3
aad
jl
movsl
mov
sbb
dec
test
cltd
cwtl
xchg
mov
inc
mov
adc
xchg
dec
stos
xor
mov
jbe
push
mov
fldl
leave
aas
out
xchg
push
in
push
mov
adc
xchg
mov
das
add
test
push
mov
xor
mov
popl
call
or
adcb
jmp
cld
dec
push
addr16
xor
sub
cld
pop
or
sub
push
cmpsb
addr16
add
aam
cli
cmpl
xor
ret
xchg
invd
and
test
sbb
repnz
xlat
aam
or
xchg
xchg
mov
out
jecxz
movsl
sti
jae
loope
pop
movlps
stos
fstl
clc
or
loopne
or
lahf
pusha
popf
mov
jecxz
arpl
pusha
mov
jl
sbb
addr16
dec
mov
or
dec
dec
inc
int
in
inc
push
jb
test
push
ret
fbld
ret
cltd
inc
repnz
pop
xchg
sub
shlb
fbld
jb
mov
add
aas
add
xchg
rcrl
icebp
in
and
jl
push
add
cmp
into
iret
mov
inc
adc
mov
xor
push
cmpb
jbe
sbb
fwait
jbe
inc
mov
xlat
cli
adc
and
dec
andl
jne
int3
das
dec
outsb
sub
sub
cltd
xchg
ljmp
loopne
andb
pop
repz
xchg
cmp
mov
xor
jns
out
xor
adc
pop
cmc
fiadds
sub
xchg
cmp
sti
ja
fwait
loope
and
pop
jge
andl
push
paddq
sub
mov
push
jb
or
sbb
and
sti
sahf
subl
test
adc
fisttpl
sub
mov
push
push
divl
sbb
mov
outsl
sub
adcb
or
mov
sbb
repnz
roll
mov
movsl
je
push
jl
sbb
lods
jl
adc
mov
add
shrb
adc
ljmp
pop
mov
adc
adc
cwtl
stos
rcl
cld
xchg
int3
out
fsubrl
push
sbb
cmp
sbb
xchg
pusha
xchg
les
imul
mov
dec
pop
inc
lods
or
movsb
mov
or
test
stos
cmpsl
mov
popf
lods
and
cld
popa
daa
test
test
imul
test
mov
ss
arpl
ret
dec
adc
ds
mov
das
and
subb
mov
lods
xor
outsb
sbb
adc
xchg
or
scas
dec
fstps
push
enter
add
dec
mov
enter
cmpsl
mov
xor
out
jnp
mov
dec
shrw
iret
dec
pop
popa
or
mov
push
out
ret
adc
ds
xor
pop
sub
cmc
arpl
jnp
mov
pop
mov
call
popa
nop
dec
jp
or
cltd
mov
pop
mov
mov
stos
call
or
xor
xor
dec
mov
jp
sub
add
jg
or
mov
jo
insl
out
jp
add
stos
lock
inc
pop
jbe
push
adc
jl
xchg
loop
mov
push
mov
insl
push
mov
test
orl
and
cmp
xchg
fwait
mov
cmp
mov
in
int
dec
roll
sub
scas
jle
rolb
outsl
pop
cmc
or
add
popf
dec
dec
stos
not
adc
filds
jnp
mov
sbb
daa
inc
imul
push
add
cmpsl
rorb
push
shll
in
in
sbb
xor
jp,pn
push
fnop
cmp
icebp
fwait
sub
cmpl
lahf
push
jecxz
sbb
out
lods
enter
shll
popf
lods
mov
xchg
fs
stos
repz
adc
loope
or
std
movsb
mov
pop
xor
popf
and
hlt
xor
xor
cmpsl
dec
and
imul
movsb
cmp
sub
sub
popl
mov
hlt
dec
jmp
push
inc
inc
insl
sub
adc
inc
lcall
cmpsl
dec
xor
mov
fmull
out
mov
outsb
sahf
sbb
mov
dec
aad
push
sub
xchg
rorb
subl
mov
push
jmp
xchg
and
and
nop
popa
out
and
sbb
ss
mov
clc
add
jge
sub
in
scas
dec
xor
js
mov
cs
adc
fcom
fiadds
xor
jne
inc
sbb
inc
jne
adc
mov
pusha
push
add
dec
jb
adc
aam
imul
das
pop
mov
or
ds
setae
jmp
repz
shl
ljmp
inc
rcrb
push
test
nop
inc
inc
sub
pop
add
js
mov
pop
push
int3
mov
xor
dec
movsb
das
mov
inc
mov
add
mov
adc
pop
mov
cmp
mov
fildll
cmpsb
xchg
pushf
jl
in
mov
sahf
addb
fsts
out
xlat
fsubrs
inc
and
ficompl
gs
lea
jle
add
iret
std
popa
rcrl
jns
mov
xor
loope
dec
cmpsl
sbb
negl
sub
dec
fidivrl
cmc
int
xchg
add
mov
or
fstl
mov
xor
je
xchg
test
or
setle
gs
je
jmp
mov
loopne
adc
pop
enter
ja
inc
mov
jb
lea
xchg
sbb
dec
pop
xor
sbb
fnsave
ss
iret
sub
and
sub
push
pop
push
in
adc
xor
fnsave
outsl
or
sbb
sub
arpl
je
outsl
in
push
addl
or
or
fwait
mov
mov
lods
repnz
cmp
and
adc
dec
inc
sbb
xchg
adc
dec
pop
rcll
cmp
popf
jl
out
out
pop
sub
aad
ja
cmp
insb
movsl
pop
cltd
mov
insb
push
arpl
sub
movsb
loop
pop
xor
push
mov
cmp
and
jg
test
clc
pop
sbb
popf
fidivs
cmpl
repnz
push
xchg
push
aad
cmpsb
dec
push
and
xchg
lret
xchg
sbb
sbb
inc
lret
lcall
mov
lret
int3
repnz
or
jne
rcr
nop
mov
mov
dec
jl
dec
mov
aad
jb
and
in
pop
lods
jg
xchg
push
dec
imul
mov
lods
pop
nop
inc
adc
js
les
cmp
sbb
js
mov
fisttpl
inc
jp
hlt
idivb
mov
ss
cmp
pop
scas
aad
mov
cmp
cmpsl
sahf
add
shll
decb
sti
lret
lahf
cmp
enter
pop
xor
xor
jmp
inc
adc
mov
int3
imul
push
aas
imul
xchg
cmp
cmpsl
mov
dec
dec
movsl
sarb
fisttpll
lds
xchg
adc
nop
jno
loopne
das
sub
cmp
xchg
pushf
xchg
and
pop
or
inc
xlat
ret
mov
mov
ret
loope
pop
mov
sub
inc
xchg
mov
push
int
addr16
and
lahf
fnstsw
sarb
xor
adc
loop
and
pop
notb
fldt
call
inc
xchg
stc
jecxz
push
dec
xor
pop
xor
test
jns
lahf
sbb
adc
fwait
inc
jle
aad
mov
hlt
lea
xor
dec
push
movsb
adc
jge
movsl
or
sbbl
fucomi
pop
jl
mov
mov
dec
mov
push
outsb
mov
lea
mov
scas
pop
mov
loop
cmpsl
xor
pop
mov
frstor
and
sti
push
std
sub
sbb
cmp
daa
xchg
dec
fsub
mov
and
xchg
inc
or
in
fadds
push
ret
test
xchg
inc
jl
xor
icebp
and
push
sbb
repnz
add
sbb
aam
mov
xor
jo
lahf
ss
push
stos
andl
jmp
xor
and
repz
mov
imul
fwait
cmp
out
fisttps
mov
test
pop
dec
loopne
pop
fmull
into
lea
inc
rcll
push
out
push
cltd
in
sub
push
sub
aam
in
dec
and
hlt
sbb
out
sbb
out
mov
lds
mov
imul
aam
stos
cs
mov
sarb
jbe
mov
imul
icebp
aad
sub
jo
test
mov
lret
icebp
dec
sub
cmc
xor
jle
mov
or
jg
cmp
mul
push
movsl
flds
or
test
mov
adc
mov
push
xchg
sub
aam
enter
enter
xlat
jnp
pop
sub
xor
lahf
mov
push
mov
mov
mov
xchg
sub
lock
out
cmp
ret
inc
adc
add
xchg
cmp
jmp
xorl
daa
push
flds
xchg
sbb
pop
loop
int3
mov
jbe
ja
sub
adc
sbb
sub
nop
add
mov
mov
mov
ficoml
movsb
pop
pop
add
sub
mov
jmp
out
out
push
jp
in
leave
pusha
push
bound
addr16
ror
sahf
pop
loop
and
sahf
pushf
adc
xlat
pop
loopne
cmp
dec
out
fs
dec
lret
pop
jns
rcl
or
xchg
mov
cmp
les
or
pop
inc
fsubs
cmp
incb
xlat
mov
xchg
mov
or
dec
xor
clc
sub
lret
jp
jno
bound
mov
push
xchg
lods
jecxz
ja
mov
push
mov
xor
sub
sub
fwait
adc
sub
data16
shrb
mov
sub
add
ljmp
push
push
scas
mov
into
shl
mov
mov
push
fs
sti
cli
or
inc
cmp
add
outsb
add
inc
mov
mov
fsubrs
clc
and
cwtl
pop
jle
mov
popa
jl
sub
push
dec
mov
shrl
decl
push
fs
xlat
or
jbe
int3
sub
insl
xchg
dec
repnz
sub
pop
mov
and
scas
cwtl
xchg
mov
aaa
xchg
and
push
push
push
push
adc
sbb
adc
adc
pop
xchg
outsl
pop
pop
lcall
aas
xchg
mov
out
jecxz
mov
arpl
push
jnp
outsl
fs
dec
aas
lahf
into
int
jmp
push
lds
sbb
call
sub
ds
sub
mov
stos
cmp
cmp
lahf
insl
mov
and
lahf
xchg
cs
inc
jns
ja
sub
icebp
mov
sahf
adc
sub
into
inc
mov
adc
rclb
data16
test
pop
cmpsl
mov
int3
pop
mov
lods
push
jb
rcll
sbb
adc
add
cmpsl
xchg
lods
into
add
imull
jae
add
das
imull
shll
push
dec
imul
in
mov
push
add
aam
pop
add
nop
movsl
pusha
outsb
and
inc
repz
lahf
fwait
es
testl
icebp
adc
push
sti
icebp
sbb
shlb
sub
inc
add
sti
adc
adc
incl
ja
dec
xchg
sbb
add
cmp
xor
adcl
xchg
mov
sbb
and
icebp
pusha
xor
or
mov
lret
cmp
sarl
inc
movsl
test
adc
sub
pop
das
aas
xor
out
inc
hlt
data16
inc
and
pop
out
mov
sbb
cmp
stos
pop
or
imul
imul
inc
mov
sub
inc
xor
fnstcw
sti
add
sub
push
outsb
jne
popa
aas
mov
shlb
push
call
mov
icebp
and
mov
add
roll
fdiv
repz
xchg
mov
xor
dec
stos
nop
lcall
adc
mov
rcrb
and
sub
out
mov
xchg
cwtl
cld
sbb
xor
enter
add
in
and
or
std
xor
cmp
mov
shrb
dec
adc
ret
int
sub
push
jp
push
jp
loopne
ljmp
lods
xchg
repz
cmp
push
fiadds
sti
jo
adc
push
jl
add
pop
jb
clc
pop
adc
ja
dec
fsubl
jnp
sub
jecxz
mov
mov
lods
jnp
inc
movsl
mov
iret
fsubs
dec
sbb
loopne
js
mov
sbb
movsl
and
sub
xor
jmp
sub
or
shlb
dec
adc
inc
cmpsb
xlat
fs
xchg
add
loope
andl
mov
repz
cmp
repnz
aad
sub
fs
test
std
push
cltd
pop
sarl
push
add
sub
imull
push
mov
jbe
add
mov
mov
std
inc
jo
subb
push
test
lock
aad
cltd
mov
fwait
jae
test
lcall
jmp
push
xor
sbb
pusha
mov
cld
add
lcall
dec
je
movsb
mov
pop
mov
sbb
cmpsb
jg
subb
or
mov
flds
fistpl
lods
std
lds
pop
lahf
push
mov
pop
mov
add
jno
pushf
jno
mov
js
mov
or
outsb
in
sbb
jp
mov
push
mov
jo
add
push
push
sub
sub
lret
and
in
dec
fildll
push
xor
movsl
jl
rcrb
or
or
adc
icebp
mov
mull
or
outsl
mov
sbb
shrl
sub
mov
inc
mov
mov
bound
add
mov
outsb
jo
mov
xchg
arpl
push
test
adc
test
shlb
mov
stos
loope
dec
shl
mov
xchg
frstor
mov
rcr
mov
and
add
dec
leave
jns
pop
pop
inc
mov
fs
loop
test
add
mov
lahf
fsubs
cmp
insl
sub
bound
into
pusha
or
jecxz
js
push
mov
daa
mov
and
jbe
pusha
xor
dec
xor
add
and
stos
jb
shll
sbb
cmpsb
ds
int3
divb
xchg
mov
in
mov
add
test
insl
xchg
mov
cld
and
bound
leave
or
xchg
add
xchg
jnp
std
fnsave
fcmovnu
dec
cmpsb
out
imul
pop
test
cmp
mov
pop
fwait
mov
mov
pop
mov
fstpt
mov
cli
rcrb
sbb
in
sub
cld
dec
in
fstpt
stos
lods
sub
orl
stos
mov
cmp
pop
dec
fldcw
and
clc
sbb
xchg
add
adc
pop
test
jp
sti
cs
scas
mov
mov
clc
fcmovbe
jl
es
cmp
lahf
cld
xchg
xchg
dec
in
inc
je
sahf
outsl
mov
dec
rcr
repnz
cmp
mov
dec
pop
push
cmp
xor
cs
mov
sub
mov
mov
and
loope
test
mov
addl
addr16
scas
mov
clc
cmp
shll
faddp
xchg
add
jmp
mov
xorl
jg
adc
jb
sub
in
addr16
dec
xchg
inc
lret
into
insl
xor
shrl
mov
daa
push
cmp
push
insl
cmp
mov
and
shll
pop
jmp
sbb
pop
or
ret
subl
or
rorb
repz
mov
jl
jge
add
nop
movsl
daa
jecxz
jo
syscall
jnp
fldt
mov
out
cmp
test
sbb
add
xorb
fwait
mov
bound
lcall
or
pop
sbb
mov
pop
orl
mov
add
inc
xchg
cwtl
and
loop
or
pop
mov
dec
in
jl
ret
push
mov
repnz
pop
or
jp
and
and
cli
inc
or
sub
out
xchg
jno
enter
add
inc
adc
mov
cmpb
mov
inc
insl
pop
andl
in
xor
push
loop
imul
ret
lahf
shl
mov
or
jns
mov
push
xchg
imul
lds
out
or
sbb
xor
push
insb
adc
jg
aad
or
insl
lcall
cmpsl
and
add
jne
arpl
adc
adc
mov
and
jecxz
mov
movsl
pusha
dec
mov
shlb
call
inc
pop
xchg
je
test
ljmp
dec
in
mov
add
dec
pop
ret
lock
leave
out
stc
push
mov
iret
cltd
mov
out
adc
test
mov
xor
stos
adc
pop
and
arpl
cmp
xor
cmp
push
mov
into
sbb
sahf
je
fwait
aam
out
add
pop
push
test
xchg
test
sbb
fs
out
inc
push
mov
inc
mull
push
mov
jmp
mov
testl
fsubr
pop
ja
popf
mov
pushf
leave
incb
std
cmp
push
or
movsl
out
adc
pop
push
scas
in
xor
ret
mov
das
cs
dec
mov
fcom
jl
push
data16
or
lret
adc
push
insl
jne,pn
push
ljmp
push
jl
xchg
fcomps
insl
ror
pop
push
movsb
pop
jae
and
jbe
xchg
jle
sub
cmc
outsb
repnz
push
cmovge
sub
xchg
ss
mov
dec
push
push
push
jno
cmpsl
lcall
dec
sbb
gs
xor
pop
nop
imul
dec
mov
int
pusha
sbb
and
imul
cltd
std
pop
cmp
sbb
das
out
aad
push
mov
mov
sahf
push
cli
jo
jnp
mov
adc
and
mull
fucomip
dec
add
ljmp
aaa
cs
jle
mov
xor
push
pop
xchg
sbb
fs
clc
mov
out
loopne
mov
adc
icebp
in
xchg
push
mov
or
dec
movsl
sub
jle
jb
or
call
xor
inc
and
jle
ds
data16
sti
xlat
repz
sub
int
cli
sub
loop
mov
je
xchg
fstps
popw
test
imul
cmp
enter
pop
aam
into
shlb
cltd
in
movsl
daa
in
jp
les
adcl
andb
js
fs
popa
loopne
mov
insb
xchg
cltd
cmc
cli
adcl
out
mov
out
test
sbbl
cltd
cmp
loope
xlat
jecxz
rcll
push
pop
jecxz
mov
mov
xchg
leave
mov
mov
ror
mov
enter
push
lea
add
pop
pushf
dec
jb
je
pop
pushf
ret
movl
mov
shr
push
xchg
pushf
int
fwait
dec
inc
jne
inc
mov
xchg
out
push
loopne
sbb
imul
jns
and
add
lods
pop
or
push
mov
jnp
scas
test
push
fdivrl
pusha
mov
outsb
int
mov
lcall
cld
scas
outsl
pop
cmpsl
std
ficomps
rorl
fbstp
cmpsb
cld
jns
mulb
pop
adc
arpl
mov
popl
fcomip
jp
mov
mov
test
pop
repnz
nop
sbb
or
outsl
clc
rsqrtps
jae
out
push
lcall
daa
jp
add
int
pop
sbb
push
add
test
xchg
addr16
lret
iret
add
push
inc
push
lods
cmpsb
push
sub
sub
mov
cld
arpl
mov
ja
xchg
cwtl
fs
push
and
fs
jo
jnp
add
js
or
jb
andb
repnz
lock
jp
adc
inc
cltd
int
aam
adc
out
stos
lods
fsubrl
cld
cmp
xchg
adc
and
xchg
stos
xchg
mov
fcmovnbe
mov
ss
adc
cmpsl
mov
les
decl
push
data16
ljmp
mov
adc
ds
push
std
std
inc
ja
orl
sbb
jg
sbb
add
mov
pop
std
xor
int3
xor
ret
mov
mov
ljmp
movb
je
pop
clc
outsb
mov
mov
mov
inc
push
mov
jae
mov
cmpsb
int3
repz
out
cmp
xchg
push
dec
daa
adc
sub
popf
or
mov
xor
sbb
xchg
or
aaa
mov
ficoml
jge
stc
pop
jbe
ljmp
shrb
jns
and
xor
add
jmp
pop
or
mov
mov
pusha
adc
fisubs
sub
arpl
lds
aaa
popa
pop
pop
fsts
loopne
and
or
insb
andl
inc
mov
orl
stc
test
add
fidivrl
dec
clc
sbb
aaa
inc
cwtl
cmp
lahf
scas
xor
push
cmp
imul
pop
inc
push
je
add
cmc
cmp
imul
push
xor
popa
enter
rclb
sti
xor
les
out
dec
push
fmuls
testl
push
xor
std
mov
nop
int
lock
adc
stos
lods
xchg
jno
jecxz
gs
insl
mov
enter
push
ret
ljmp
xchg
and
mov
mull
testb
cld
setae
in
xor
divl
mov
adc
fiaddl
mov
mov
or
in
rclb
mov
repz
pop
dec
mov
mov
pop
das
popf
je
dec
repz
sub
jg
inc
dec
data16
adc
mov
into
pop
jle
aas
add
jge
inc
out
jg
cs
pusha
xchg
std
mov
popf
push
rcrl
popf
mov
mov
mov
push
test
xor
notb
adc
jae
arpl
cld
lock
inc
xchg
inc
adc
push
add
xlat
mov
pop
dec
mov
shll
cmp
inc
mov
loopne
sub
pop
mov
inc
sub
ret
cld
loope
imul
rcrl
cwtl
sbbb
xchg
fbstp
jbe
shlb
dec
and
ljmp
in
faddp
das
leave
inc
push
mov
or
push
inc
xor
mov
push
in
lahf
sub
add
or
xchg
xchg
adc
jecxz
enter
dec
dec
xchg
mov
scas
movsb
cs
push
enter
jge
emms
cs
out
ret
fimuls
and
push
pop
mov
fldenv
inc
pop
test
popf
xchg
and
outsb
in
xchg
dec
add
call
dec
dec
and
pop
in
pop
mov
mov
jo
mov
mov
aas
inc
xchg
sub
pop
js
mov
test
push
cld
sti
cmp
fisubrs
scas
bnd
pop
dec
cli
sbb
xor
xor
fsubp
push
lods
xor
movnti
pushl
into
mov
jb
mov
or
call
orb
int
out
inc
fidivs
adcl
xor
jnp
adc
pop
dec
cmp
mov
inc
jge
mov
jp
xchg
add
or
mov
sub
in
aaa
push
clc
cli
filds
and
dec
imul
fcoms
in
cmp
adc
in
push
pop
add
es
push
fcoms
jbe
std
mov
xchg
lcall
xchg
fcompl
int
icebp
arpl
aam
push
or
add
cmpb
or
pusha
push
xor
repz
mov
push
push
jmp
gs
scas
jnp
stos
loop
mov
dec
xchg
pop
insb
std
add
fstpl
add
inc
or
add
dec
iret
mov
lods
fmuls
push
test
and
outsb
sub
cmp
cmp
xor
lock
les
adc
clc
inc
adc
pop
mov
adc
cmpsl
mov
sbb
jmp
in
int3
push
jecxz
stos
popa
cmp
mov
xchg
outsl
jmp
sub
xchg
jb
imul
hlt
in
loope
pop
pop
pusha
mov
mov
jmp
cmp
mov
xchg
adc
cld
lret
incl
dec
leave
pop
testl
or
push
mov
sbb
dec
or
cltd
scas
cs
cmpl
cmp
jns
bound
out
jae
cmp
adc
jnp
fistps
or
jae
fdivrs
xorl
xor
cmp
das
mov
icebp
test
mov
xchg
leave
push
je
add
pop
out
add
pop
inc
insb
lods
in
xor
leave
cs
and
add
xchg
into
sahf
in
stos
les
jns
cs
scas
or
mov
repnz
fistl
lods
call
dec
pop
xchg
pop
mov
pop
incb
mov
scas
test
cltd
push
jge
pop
loope
cli
xlat
imul
xchg
inc
inc
dec
or
pop
dec
push
movsb
pusha
lret
push
ljmp
clc
test
out
xor
add
fwait
or
pminsw
cwtl
sub
lock
fadds
addl
mov
add
or
or
push
pop
cmc
and
lea
mov
stos
adc
pop
mov
push
loope
or
pop
outsl
mov
insl
sub
xchg
mov
inc
cmp
lock
inc
stos
push
dec
aam
dec
mov
js
mov
rolb
sbb
xor
in
loopew
pop
pop
stos
mov
mov
gs
dec
inc
repz
repnz
ss
stos
xchg
fwait
scas
mov
popf
xor
ja
jo
cmp
cs
and
rcrl
loop
stos
scas
ficoms
addr16
pop
xor
lret
inc
sub
gs
mov
stos
dec
cmp
out
ss
xorb
std
jns
movsl
xor
pop
dec
imull
and
pop
push
es
lret
mov
not
mov
scas
fmuls
in
add
js
dec
xchg
dec
shl
loopne
jle
mov
push
fst
cwtl
icebp
push
add
mov
push
inc
lods
sti
lret
ds
dec
inc
push
adc
ja
cmp
addr16
fisubl
fmul
mov
xchg
adc
insb
inc
fs
sbb
sbb
fadd
sarb
rorb
stos
stos
out
mov
cld
push
add
and
out
test
and
push
insb
or
movsl
jb
xchg
jne
jo
mov
mov
bnd
daa
and
mov
push
mov
ret
sbbb
test
pop
sbb
push
push
andl
pop
mov
scas
jno
mov
ss
into
push
pop
ror
iret
aas
pop
idivb
rcr
popf
scas
cmp
mov
rep
bound
les
data16
xor
pop
sbb
sbb
inc
add
mov
int
into
and
dec
and
lods
xor
mov
dec
pop
hlt
cmp
repnz
mov
in
pop
repnz
dec
pusha
loopne
xchg
idivl
mov
cmp
pop
sahf
insl
push
icebp
lea
inc
aas
arpl
xor
xchg
roll
jbe
sbbb
pop
das
aas
int3
test
sub
pop
mov
inc
dec
in
imul
shl
mov
int
aaa
fisubrl
and
aas
and
pop
xor
daa
sub
mov
fiadds
rol
jle
mov
xchg
inc
aad
jge
lahf
out
push
xor
and
lret
sbb
push
push
pop
xor
add
inc
or
sub
aas
shlb
adc
das
inc
mov
nop
dec
int
out
sti
xor
sti
jb
imul
rol
aas
cmp
mov
xor
stos
lret
fcoms
outsl
andl
push
icebp
adc
movaps
popf
jb
in
inc
inc
push
aad
mov
scas
mov
push
push
mov
aaa
xchg
rcll
mov
jns
imul
idivb
jns
mov
push
je
es
clc
mov
sub
std
in
lret
add
outsb
stos
imul
adc
shlb
scas
mov
icebp
mov
lods
fsub
xchg
and
lret
aad
and
cmp
mov
es
dec
xchg
rclb
push
cltd
sbb
std
dec
insl
xchg
dec
movl
div
inc
lds
sarl
sbb
pop
adc
mov
adc
movsb
and
testb
incl
shll
aas
xchg
cmc
lahf
lret
pusha
xchg
dec
leave
fstpl
outsb
in
jl
leave
leave
jae
int
pop
imulb
dec
mov
and
iret
dec
add
xor
push
pop
cs
mov
mov
imul
mov
adc
lcall
or
outsl
xchg
and
inc
cmpsb
dec
scas
lods
out
lret
into
std
in
int
call
xor
mov
mov
jp
dec
scas
inc
in
sub
pop
xor
je
mov
xor
call
fidivs
xchg
insl
mov
push
xchg
lea
and
loope
lahf
sahf
popf
nop
and
out
lds
ret
jns
jg
repz
dec
cmpb
and
fistps
jmp
mov
js
dec
in
and
pop
test
dec
ss
mov
cmc
das
test
push
ret
sub
sti
imul
test
stos
sub
push
jb
push
les
cmp
fadd
ss
mov
push
push
inc
dec
xchg
lret
ss
lret
pop
fistps
ret
mov
or
inc
lcall
imul
ss
mov
jl
ja
adc
jnp
add
fsubs
inc
test
pop
jecxz
sbb
and
sbb
lds
pop
push
test
or
lret
and
mov
add
pop
rcrb
jno
mov
popa
ljmp
mov
or
push
sbb
lods
into
add
and
sbb
mov
pop
jmp
lods
jns
add
cwtl
es
adc
ljmp
cltd
mov
das
sub
movsb
in
test
xchg
cltd
movsl
loopne
bound
repz
adc
cli
leave
pop
sub
push
push
xlat
lods
frstor
rcrb
xor
mov
arpl
xchg
cwtl
das
or
mov
pushf
cli
inc
adc
pushf
fimull
jp
inc
test
dec
rep
pop
jp
xchg
push
xchg
ficoms
jo
push
cmp
adc
mov
mov
insb
and
jle
mov
xchg
sarl
inc
or
lock
inc
aam
inc
push
test
or
dec
arpl
push
cwtl
mov
jne
sbb
sub
ja
clc
pop
pushf
call
jle
add
jno
aas
cmp
fildll
dec
das
sar
mov
xlat
out
mov
pop
fisubs
sbb
sbb
jl
mov
push
insl
inc
inc
dec
xor
sub
aas
or
push
adc
dec
test
lret
cmpsb
cmc
xor
stos
jns
shlb
insb
cld
arpl
insb
pushf
shlb
pushf
sub
daa
sbb
scas
popf
sbb
hlt
push
inc
ja
xor
jle
pushf
xchg
jle
add
mov
ss
or
cwtl
jmp
pop
jns
mov
jle
push
push
push
inc
xchg
xor
pop
xor
mov
test
mov
and
push
test
jp
xchg
push
mov
out
mov
mov
mov
jo
lahf
gs
cmp
push
inc
int3
sbb
aam
pop
fildl
into
xlat
call
adc
push
add
es
in
insb
out
xchg
ds
test
xor
in
sub
mov
pop
loopne
or
sub
aaa
stos
mov
xchg
jl
out
xchg
test
fwait
hlt
add
mov
inc
cmc
mov
sub
dec
inc
cmc
jns
fs
or
dec
aas
shrl
movsb
enter
hlt
mov
pop
insl
pop
mov
das
push
arpl
xor
call
jno
pusha
pop
mov
ret
arpl
xchg
in
xor
sti
mov
mov
jmp
jbe
push
nop
push
cli
or
mov
fldl
push
pop
cli
cmc
jns
test
popa
out
ret
pop
mov
loop
cmp
or
lcall
and
mov
jle
push
pop
mov
pop
dec
ja
push
pop
sti
jne
das
icebp
ud2
inc
push
mov
jbe
pop
rorl
andb
pop
cmpsl
pop
scas
rcrl
xchg
sub
lea
cmp
add
repz
cmp
push
inc
leave
iret
push
mov
ror
jecxz
cmp
mov
inc
test
in
mov
jmp
or
mov
xchg
jmp
shrb
lock
imul
jns
mov
sbb
fldl
or
lret
clc
mov
lods
sbb
sahf
xchg
loope
jle
sbb
jno
ret
pushf
insb
iret
jb
push
mov
push
mov
add
mov
adc
imul
inc
inc
inc
adc
push
out
in
fcoms
jnp
cs
and
push
test
mov
call
loope
sub
jno
mov
aam
sub
imul
mulb
outsb
outsb
sti
xor
cmp
pop
pop
push
cmpsb
add
mov
test
push
fwait
push
dec
and
lods
bound
and
stc
mov
push
adc
cmp
dec
xor
mov
push
out
cmc
out
push
lock
leave
fwait
adc
movsb
cwtl
in
sub
add
mov
add
ret
outsl
popa
fnstsw
lret
push
add
xor
pop
mov
jecxz
sarb
scas
push
cmp
xchg
js
dec
ds
mov
imul
sub
add
shrb
loop
in
in
push
pop
jecxz
xlat
inc
and
push
dec
adc
loopne
add
lret
push
mov
and
test
std
push
in
mov
mov
sbb
adc
stc
mov
adc
and
and
iret
stos
in
pop
jmp
pop
push
push
mov
mov
inc
hlt
xchg
sub
fs
inc
lret
arpl
imulb
stos
fcmovu
data16
int
adc
cmp
or
arpl
or
movsl
icebp
xchg
add
pushf
adc
ss
push
outsl
sub
jo
iret
add
pop
lahf
xchg
cmpsl
ss
mov
dec
add
jg
stos
cmpsl
and
cmp
mov
and
bound
xor
push
out
cld
push
sahf
cld
leave
mov
lea
inc
stos
inc
add
stos
jl
sub
jg
mov
cltd
push
and
mov
sub
insb
inc
sub
xchg
nop
roll
js
add
in
pop
out
mov
ret
and
je
insl
sbb
js
stos
hlt
cmp
fwait
scas
inc
ljmp
adc
frstor
jmp
lret
test
sub
adc
shlb
mov
mov
push
sub
rcrb
sub
add
xchg
mov
icebp
add
cmp
cmp
push
lahf
mov
jmp
stc
push
adc
lods
push
nop
push
repnz
lds
or
jne
inc
fnstenv
mov
push
mov
push
movsl
dec
je
pop
xor
das
mov
mov
scas
push
cmp
sub
orb
fldenv
mov
mov
xchg
jo
std
cmp
push
gs
xlat
pop
dec
andl
adc
xchg
shll
mov
cltd
push
mov
bound
sub
sbb
xchg
push
and
mov
sti
imul
sbb
call
test
adc
cmpsb
fsubp
aam
in
ret
into
mov
xor
cmp
adc
pop
shll
push
flds
cmpsb
xchg
mov
gs
xchg
sub
inc
jle
dec
int3
scas
sysret
std
stc
lret
mov
and
fmuls
pop
add
dec
out
insl
mov
jmp
jo
jns
fst
outsl
inc
mov
dec
push
addr16
mov
pop
shrl
mul
push
add
lret
sub
or
mov
pusha
je
outsl
ret
pusha
mov
jg
pop
mov
sbb
xchg
or
cmc
aad
push
pop
adc
sbb
lock
loop
je
stos
dec
dec
xchg
xchg
inc
test
scas
ds
insb
push
in
pop
ljmp
filds
dec
fidivs
test
stos
cli
or
jb
mov
test
cmp
cwtl
cld
adc
mov
xchg
loop
stos
in
stos
mov
cwtl
stos
pusha
jge
stos
sbb
mov
shll
cs
enter
leave
in
lcall
jmp
jge
lahf
xor
add
or
inc
sbb
add
shlb
xor
std
mov
in
jo
sbb
or
sahf
and
lret
pop
xor
int3
or
scas
xchg
ds
arpl
push
icebp
sbb
clc
sahf
stos
dec
or
inc
lahf
das
and
adc
inc
sti
sarl
sbb
or
call
adc
dec
ss
cmp
sub
xor
in
jns
push
mov
decl
loopne
sub
popf
pop
repnz
rcll
out
movsb
adc
add
inc
mov
out
fadd
pop
pop
pop
or
test
inc
dec
cwtl
cli
movb
xor
mov
mov
add
dec
add
pop
mov
scas
in
cmpsb
nop
xor
mov
fidivrl
or
mov
push
lret
pslld
push
mov
jmp
and
inc
mov
mov
push
add
pop
pop
lret
shll
out
into
push
insl
inc
fdivr
jg
mov
add
push
fsubrl
shll
jge
mov
dec
add
mov
mov
outsb
sub
mov
ds
xchg
cmpsb
cli
je
fcoms
es
lea
shll
pop
test
aas
test
call
xor
xchg
imul
cwtl
gs
in
push
pusha
iret
cmp
rorl
jns
push
in
iret
dec
inc
cli
mov
push
mov
test
ljmp
xor
or
out
add
int
inc
mov
mov
mov
push
cmp
mov
dec
xor
iret
pop
inc
xor
ret
push
loop
ficoms
imul
xchg
mov
pop
ljmp
hlt
cmpsl
jo
inc
add
xchg
mov
mov
xor
call
adcl
mov
mov
mov
scas
inc
cmpsl
or
call
push
mov
fldl
cmp
inc
pop
data16
out
inc
mov
jmp
push
loop
aas
dec
xor
aaa
fidivs
pop
insl
sbb
xlat
loope
cmpsb
mov
paddsb
lahf
add
test
ss
push
mov
xor
cli
cli
cmp
fbstp
stos
es
mov
mov
aas
or
mov
into
add
jl
int
fsubrs
popl
iret
xchg
in
out
mov
loope
mov
adc
rolb
cmc
xchg
loopne
out
mov
fnstcw
inc
int3
push
in
lock
iret
sti
jecxz
lods
xchg
adc
fisttpll
pop
jne
out
out
mov
jnp
out
hlt
jge
aam
inc
clc
pop
pop
pop
hlt
pop
adc
loopne
jecxz
outsl
sahf
jp
js
iret
daa
shlb
fsubs
adc
mov
cli
push
sub
jbe
and
mov
mov
filds
or
jl
lea
mov
and
mov
femms
push
popf
negl
mov
cmp
popa
loope
xlat
jmp
xchg
add
jge
ret
xor
push
push
outsl
push
adcb
jle
xchg
test
push
xor
xor
pop
imul
xor
sub
jmp
dec
xlat
dec
ud1
ret
push
mov
mov
sbb
sub
loope
jnp
or
test
inc
and
cs
icebp
jno
push
imul
int3
pop
inc
frstor
test
enter
ja
xchg
push
imul
push
mov
mov
subb
or
inc
push
add
pop
and
hlt
mov
aaa
inc
sti
dec
shrb
sub
pusha
mov
inc
adc
pop
rcll
in
popl
popa
sub
pop
daa
ret
adc
enter
in
mov
jg
aas
adc
adc
or
push
mov
loopw
inc
pushf
bound
dec
mov
in
add
call
mov
test
cmp
push
or
aas
cmp
js
lret
push
pop
xor
iret
adc
mov
movsb
jae
fstpl
je
xchg
pop
sar
pusha
push
jl
sub
lret
push
cld
xchg
test
xchg
cmp
mov
or
pop
not
inc
in
push
xor
cmp
outsl
fndisi(8087
stos
sahf
mov
push
xchg
lds
inc
cwtl
icebp
mov
lods
mov
add
ja
push
in
cwtl
jp
sbb
ja
mov
sbb
adc
xchg
jns
int3
mov
arpl
push
mov
cmp
popa
loopne
push
sbbl
xlat
lods
push
cltd
mov
pop
jecxz
jge
push
add
stos
movsl
addl
pop
lret
andl
inc
cltd
inc
cmpb
inc
mov
outsl
shl
orb
fdiv
out
push
ljmp
movsb
jecxz
cmpsl
xchg
cmpl
add
addr16
cmc
push
out
aam
imul
xor
dec
fisubl
scas
add
inc
jb
dec
fstpt
xor
jecxz
stc
dec
sti
pop
pop
aad
fwait
push
add
add
sub
scas
jmp
addr16
pushf
pop
mov
mov
lea
int
and
push
pop
lods
fimuls
jns
sub
out
cvttps2pi
pop
loop
inc
push
pop
xlat
add
mov
xor
adcb
xchg
test
xor
leave
int3
pop
subb
in
daa
mov
lahf
test
mov
mov
or
push
jb
ljmp
test
pop
add
push
xor
xor
jg
dec
add
cltd
stos
cli
stc
mov
dec
jecxz
lcall
int3
into
cli
lock
push
cmp
testb
insb
insl
sub
sub
fdiv
hlt
jb
je
loop
jno
or
mov
test
sti
rclb
push
xor
enter
mov
sbb
and
or
and
insl
pop
cmpsb
or
clc
loope
cld
sbb
pushf
lret
cmp
nop
or
mov
fldl
mov
mov
dec
cmp
adc
xor
iret
or
push
cli
sbb
gs
mov
ret
xchg
dec
mov
mov
jno
sbbl
fstpl
jmp
stos
leave
aad
sub
arpl
das
lret
xorb
push
push
stc
scas
sub
cld
inc
fcmovne
xor
xchg
aaa
push
jns
sti
lcall
adc
add
rcl
insl
sub
jb
push
in
jg
and
lods
cli
aas
push
fnstenv
ret
loopne
test
cmp
mov
cld
cmp
inc
or
and
inc
jbe
sub
xchg
jp
call
pop
pushf
inc
cs
add
mov
or
jae
xchg
in
xor
cltd
adc
cmpsl
cmp
lahf
dec
xchg
lods
cmp
xchg
jae
test
mov
jp
ret
lock
pop
push
out
xchg
or
js
fstpt
pop
arpl
xchg
mov
fwait
push
or
in
mov
sub
sub
fcom
pop
fwait
jne
cwtl
or
push
sub
cmpsl
cmp
aas
adc
mov
xor
orb
hlt
adc
dec
ficoml
adc
push
jno
add
sbb
mov
add
pop
lods
das
movsl
push
xchg
movsl
mov
clc
inc
jecxz
jle
jle
cmc
es
add
mov
push
adc
jnp
aad
xor
push
out
rclb
cltd
insb
mov
jno
push
sarb
jb
cli
mov
mov
push
xchg
lods
loopne
in
int
lea
addb
or
int
sub
add
in
dec
imul
mov
and
sub
inc
inc
insb
mov
sbb
ret
enter
xor
pop
stos
mov
and
mov
or
stos
popa
repnz
xor
mov
jle
mov
adc
cmpsb
xchg
and
xchg
inc
xor
sti
in
popf
mov
faddl
pop
adc
negl
mov
mov
jmp
xchg
jl
jecxz
dec
imul
push
mov
data16
push
out
das
adc
movl
lods
dec
add
fisttpll
push
fsub
pop
push
outsl
sub
outsb
jo
bound
popa
std
xor
in
push
das
leave
xchg
mov
mov
mov
mov
jg
xchg
mov
pop
mov
movl
rcrb
pop
add
aaa
jle
xor
mov
notl
insl
pop
pushf
sarb
xchg
adc
dec
sahf
je
inc
cmp
stos
adc
mov
jnp
inc
sub
pop
scas
andb
jae
inc
adc
bound
call
mov
push
in
jecxz
repnz
scas
movsb
cmpsb
movsb
ja
inc
mov
xor
mov
ds
mov
cs
out
lea
adc
and
sbb
roll
jmp
dec
xor
cs
cmp
and
lret
pop
xchg
jb
ss
cmpsb
loopne
mov
mov
and
out
inc
in
adc
ret
add
aas
gs
mov
add
inc
sub
pop
jge
push
or
adc
add
or
mov
xchg
lods
mov
lahf
jecxz
jns
leave
fcmovnbe
bound
mov
mov
ja
lcall
mov
dec
stos
fsubrs
add
js
push
sbb
inc
push
mov
mov
sbb
loopne
pop
test
shl
jae
sbb
and
dec
sarb
cmp
mov
add
js
mov
pop
fnstcw
mov
ljmp
jl
arpl
xor
iret
jnp
xchg
push
ljmp
add
jl
hlt
mov
stos
out
push
fdivrl
cmp
shll
mov
aas
cmc
insb
jge
and
push
jo
stc
pusha
and
roll
sbb
cmp
sbb
mov
inc
adc
les
inc
mov
in
call
jo
das
sub
pop
and
ret
sbb
scas
stos
es
xchg
popf
push
sarl
add
or
dec
aas
fwait
pushf
mov
and
in
jl
sub
pop
cwtl
cld
or
lret
add
xor
jno
stos
pop
rorl
or
push
mov
mov
inc
stc
les
mov
and
cwtl
clc
add
popf
or
mov
jae
dec
test
sub
adc
jbe
or
sub
stos
adc
mov
inc
pop
mov
fs
pop
ret
lock
mov
adc
in
les
jb
add
aad
mov
xchg
jne
xchg
ficompl
repz
stos
jmp
mov
icebp
loope
std
inc
dec
adc
sbbl
arpl
dec
sub
lahf
fidivs
push
imul
cmp
sbb
sbbl
mov
aaa
xor
or
out
jg
lock
mov
daa
adc
cmp
mov
inc
insl
cmp
call
imul
mov
ss
lods
jl
pop
push
arpl
dec
pop
fsubl
pop
stc
or
inc
std
adc
js
pop
clc
loop
sub
push
push
mov
fcoms
notb
or
arpl
mov
addr16
pop
cmp
xchg
xor
add
adc
and
sbb
push
clc
es
mov
mov
test
je
and
aas
repnz
std
mov
clc
arpl
pop
lcall
lds
cmp
gs
add
inc
mov
outsb
xchg
add
pop
push
mov
push
bound
jp
cmp
xchg
push
je
in
sbb
inc
or
enter
outsb
rcl
mov
mov
jb
mov
ret
cmc
add
pop
cmp
sbb
outsb
ljmp
cmp
lcall
sbb
scas
lods
repnz
and
and
and
ds
jnp
xchg
push
stc
fsub
dec
addr16
adc
fstps
mov
outsb
push
testb
push
shll
adc
mov
ret
jno
fs
cld
sar
add
roll
shlb
inc
in
pop
inc
cs
test
int
cmp
inc
mov
stc
mov
ret
dec
nop
mov
xlat
stc
insb
add
push
adc
mov
inc
sbb
xor
and
pop
cli
fsubrl
out
push
insl
mov
icebp
inc
sub
in
mov
imul
mov
js
mov
in
lcall
outsl
jne
data16
es
fisttpl
xor
ljmp
mov
add
xorl
aas
xor
sbb
loop
cmpsb
clc
imul
jmp
mov
daa
mov
xlat
rol
add
cmpsl
rcll
sub
orb
xor
jbe
add
ret
out
and
pop
xor
jg
or
test
pop
sub
or
mov
lea
frstor
push
dec
fsubrs
add
jne
add
mov
sub
pop
roll
mov
and
fmull
gs
mov
ljmp
ljmp
jg
adc
cmpsb
jnp
mov
repnz
xor
xchg
dec
cwtl
xor
aam
jg
dec
jne
lds
mov
and
inc
shl
out
jno
out
push
xchg
repnz
divb
xor
int
cmpsl
sub
movsl
add
or
push
cmp
sub
push
mov
pop
cmpl
lcall
fnstsw
lods
inc
dec
ss
adc
jnp
out
cmp
out
cmp
mov
push
sub
dec
lret
divl
push
cmp
inc
xlat
mov
jno
clc
mov
or
xchg
inc
les
fdiv
popf
and
mov
enter
gs
and
xlat
lods
pop
cmp
jo
jnp
stos
in
test
ss
movsb
push
cli
cmp
loopne
enter
aad
dec
stos
jle
cmp
je
pop
dec
sub
sarb
cmpsb
es
mov
cltd
dec
into
dec
dec
shl
mov
insb
xor
push
mov
or
daa
imul
clc
adcb
or
jmp
xchg
cmp
jl
aad
push
adc
dec
push
cmpsb
sub
jg
mov
push
adc
pop
or
inc
arpl
imul
scas
or
pop
mov
js
pop
mov
pusha
push
shrl
mov
pop
data16
inc
dec
leave
add
xchg
jge
dec
imul
arpl
mov
or
and
outsl
adc
or
mov
fs
dec
jb
mov
je
mov
aas
mov
cli
sub
cmp
decl
icebp
mov
adc
loop
sbb
std
in
push
mov
add
stos
pushf
cld
lds
and
jmp
xchg
cmp
lret
cmp
mov
cmp
xor
andl
int3
inc
aam
cmp
neg
lahf
xor
outsb
sbb
pop
jbe
add
out
fisubl
cmp
sti
leave
inc
lods
jbe
cmpsb
inc
lahf
pop
and
ljmp
test
pop
inc
test
cwtl
mov
mov
pushf
jge
jnp
pop
gs
mov
mov
push
mov
scas
and
cmp
push
in
gs
cmp
push
xor
xlat
cmp
push
cmp
xchg
push
cmp
clc
push
cmpsb
dec
adc
sub
repnz
fstl
dec
and
int
fldenv
movsb
lea
cmp
xchg
adc
jne
cmc
dec
aam
ja
jl
jl
add
push
mov
fdiv
or
mov
mov
and
and
mov
mov
cmp
adc
push
repnz
cmp
xor
int3
aas
out
loopne
cmp
push
or
in
inc
in
jl
arpl
frstor
or
idiv
push
xor
arpl
xchg
andb
in
dec
push
jae
inc
test
push
dec
cmc
mov
in
cmp
sub
js
mov
pop
shll
iret
cltd
orb
mov
popa
ds
imul
fnstsw
addl
dec
jb
repnz
jmp
hlt
xchg
sbb
stos
mov
or
jnp
adc
pop
pop
mov
pop
jnp
mov
lea
xor
add
loop
mov
outsl
cmp
push
xchg
sbb
cmp
fisubl
jae
or
out
mov
xlat
jg
pop
push
movsl
dec
addb
and
sbb
and
into
das
daa
cmpsb
orl
hlt
mov
xor
lcall
outsb
inc
add
and
push
adc
xor
mov
sarl
cli
dec
cmpsl
push
push
xor
enter
int3
pop
mov
and
and
or
cmpsl
xadd
and
add
dec
fucomip
ss
mov
inc
jne
push
sbb
es
js
sub
pop
cltd
sbb
iret
cs
aas
hlt
inc
or
sbb
rcrl
jne
jb
sub
enter
int
push
mov
dec
or
rclb
lea
cwtl
jnp
shll
test
pushf
push
ds
leave
mov
or
sarb
fidivrl
rcrl
xchg
xchg
and
cmp
stos
stos
mov
dec
out
icebp
cmp
sub
leave
pop
mov
dec
mov
sub
push
hlt
rolb
pop
jmp
xor
or
roll
sub
fnstcw
nop
gs
jo
shrb
daa
mov
push
pusha
inc
in
testl
xchg
pusha
add
lock
or
pop
les
test
adcb
cmpb
jecxz
jp
cwtl
xorl
push
in
xor
mov
sub
xchg
xor
mov
push
lea
test
push
push
call
mov
adc
mov
test
jmp
inc
mov
in
orb
mov
movl
jecxz
mov
bound
lcall
test
icebp
repz
jo
ror
cmp
sbb
xlat
adc
into
add
popa
fistpll
xchg
cmp
fdivp
cmpsb
xor
outsb
cmc
insl
nop
cmc
ds
mov
lock
inc
xor
and
test
sbb
pushf
lods
fistps
xor
add
jbe
xchg
mov
enter
js
daa
xchg
add
aad
out
lahf
insb
cli
cli
jmp
lcall
idiv
mov
aam
das
push
ds
jecxz
push
mov
sbb
pop
rorb
cmpsb
add
aam
jg
dec
fistl
and
mov
cmpsl
jb
and
mov
add
xchg
test
mov
nop
inc
rolb
rclb
sbb
add
mov
nop
das
pop
popa
out
sub
xor
imul
das
dec
aam
ret
adc
sub
lcall
sarl
out
adcl
dec
and
mov
imul
sbb
push
ret
mov
xor
or
popa
lods
daa
pushf
and
mov
cmc
mov
rcrl
cmpsl
or
and
pushf
lahf
and
mov
push
cmp
mov
call
mov
add
lock
fstp
lret
js
xor
dec
push
das
sub
cli
xor
fs
cwtl
lret
adc
add
sti
jle
jo
daa
inc
and
rep
sbb
sub
jbe
dec
push
cwtl
mov
mov
in
movsb
call
sub
adc
ret
add
mov
add
mov
into
cwtl
insb
xor
push
pop
sub
jecxz
insl
add
mov
push
dec
jb
and
push
inc
jle
pop
or
inc
push
dec
mov
pop
sub
stos
jp
dec
dec
lds
test
cmp
stc
insb
jno
aam
aas
dec
fdivp
push
rcl
push
xchg
cmpsl
mov
push
jo
pop
add
cmpsl
outsb
add
push
add
cmp
rcll
xor
cmpb
add
in
fsub
sub
mov
or
push
data16
inc
sbb
loop
and
movl
pop
stc
dec
dec
movsl
inc
lods
popa
imul
pushf
int
xchg
xor
mov
xchg
aas
ret
xchg
stos
in
push
rcrb
out
loop
sbbl
dec
push
push
shlb
lcall
in
mul
mov
sub
cmp
or
inc
lods
test
lea
ret
repnz
mov
popa
les
push
mov
and
add
jecxz
test
into
fwait
sti
lock
hlt
inc
nop
neg
push
cwtl
imul
add
loop
ljmp
adc
es
ret
aaa
sti
adc
stos
add
jne
test
or
lods
push
ret
out
fmull
fwait
cld
and
gs
inc
push
imul
mov
loop
xor
rolb
test
shlb
mov
iret
icebp
xchg
andb
stos
pop
xchg
in
rcrb
nop
or
inc
xchg
mov
insb
frstor
pop
out
insb
div
cmpsl
lret
fsubrs
push
jae
inc
sbb
mov
push
mov
das
mov
push
popf
mov
pop
orb
pop
sbb
sub
inc
inc
movsb
inc
sbb
mov
xorl
adc
xor
pop
popa
jns
jne
insl
clc
cmc
das
lds
out
sti
int3
mov
cmp
mov
mov
mov
cmp
sbb
insb
imul
idivl
mov
and
inc
in
push
js
mov
cmc
mov
pop
popa
push
mov
imul
pop
loopne
movsb
cmpb
cmp
pop
pop
dec
std
pop
loop
stos
cli
fs
mov
cli
mov
inc
in
fists
sti
cmpsl
out
add
cs
inc
mov
in
adc
push
das
adc
mov
and
xor
std
xor
inc
mov
mov
shlb
incl
xorb
sarl
jbe
cmpsb
aam
es
insb
jecxz
shll
jecxz
pcmpeqb
pusha
into
add
jo
arpl
insl
in
add
push
and
lds
inc
mov
xchg
push
adc
pop
xor
push
adc
decl
push
jo
lock
out
addr16
add
mov
in
std
stc
inc
loope
xor
daa
sti
in
inc
into
xor
add
fwait
cli
jge
popf
mov
ret
push
adc
lret
cli
pop
push
xchg
sub
adc
sub
imul
daa
scas
stos
and
adc
cwtl
gs
jno
mov
push
jnp
les
jne
fwait
clc
cmp
in
push
movsl
aam
push
lock
adc
xor
push
mov
push
jg
and
xchg
push
cmp
fstpt
sub
jle
cmpsl
mull
pushf
mov
hlt
add
lods
and
xchg
and
sub
shrb
xlat
xchg
pop
dec
dec
xor
in
xchg
jae
mov
daa
cmp
mov
pop
lods
xchg
sub
dec
cmp
pusha
add
ss
pop
mov
ret
pop
gs
add
lahf
aam
and
es
pop
into
fimuls
pop
jbe
sub
out
aad
adc
repz
xchg
lods
jle
adc
and
in
pop
ja
das
mov
push
popa
cmp
jmp
fmull
jle
jbe
cmp
divl
fdivs
adcw
sbb
cltd
and
stc
jmp
mov
fdivrl
xchg
or
arpl
setle
lods
xor
daa
je
lret
jne
xor
sub
or
das
mov
and
pushf
rorl
es
test
in
testl
push
pop
scas
fdivp
and
cmpsl
jecxz
fs
ss
pushf
sbb
jbe
test
loopne
adc
hlt
lcall
dec
repnz
sub
pop
adc
inc
mov
pop
js
mov
inc
lret
xlat
xchg
rcr
or
insb
in
stos
cltd
fwait
test
and
insb
add
and
or
mov
loop
cwtl
inc
imul
xchg
mov
cmp
xchg
push
mov
pop
mov
std
jge
mov
in
and
xchg
jg
mov
popa
pop
add
pop
xchg
ret
add
push
inc
inc
div
clc
mov
push
inc
pop
push
les
insb
test
movl
sbb
and
scas
xchg
cmpsl
pushf
shll
jo
sbb
sbb
mov
les
les
je
push
jle
push
test
jle
ja
sbbl
jne
mov
jmp
mov
jmp
loopne
mov
in
xchg
xchg
movsl
shrb
pop
xchg
inc
sub
mov
outsb
outsb
pusha
or
movsl
or
movsl
pop
mov
and
mov
mov
inc
bound
sub
cs
and
test
inc
mov
mov
int3
push
xchg
xor
aam
shr
add
ss
in
insb
ja
stos
adc
push
lret
divps
push
daa
push
lcall
mov
sub
adc
les
fxch
je
xlat
jno
push
pushf
xchg
sahf
sub
fistpl
movsb
mov
frstor
pop
mov
into
mov
mov
clc
adc
xchg
pusha
test
pop
call
lcall
pop
imul
hlt
cwtl
mov
xchg
lods
jl
lcall
or
int3
enter
fcoml
in
adc
lods
jbe
shll
cs
push
cmp
fimuls
adc
or
fs
cli
sbb
jmp
cwtl
enter
fisubs
push
fcoml
sbb
std
inc
pop
mov
jl
xchg
xchg
popa
test
bound
pop
mov
xchg
add
pop
cwtl
xor
push
jb
ret
jl
cmpb
inc
push
dec
insb
call
pop
fisttpl
mov
xchg
lret
sub
out
das
sbb
pop
int
pop
dec
mov
cmp
je
mov
fsubs
in
orb
mov
mov
addr16
stc
rcrl
sbb
sarl
imul
mov
cmpsl
xchg
jbe
jmp
and
sbb
cmp
in
mov
loop
je
lcall
sti
or
cmp
cmp
mov
test
lea
aaa
dec
push
jmp
inc
dec
lahf
inc
loopne
cld
sahf
adc
jg
movsl
adc
push
jp
dec
mov
sub
push
xorl
cmpsb
mov
mov
and
mov
gs
push
shll
xlat
jbe
aas
mov
dec
loop
jp
popf
mov
gs
add
push
add
or
das
push
into
pop
adc
mov
xor
cmpsb
mov
push
mov
sarl
push
ljmp
fisubl
push
xor
xchg
daa
fstpt
jae
mov
fldt
cmp
mov
push
add
sub
or
and
mov
gs
repnz
cmpb
aas
fstpt
stc
nop
gs
faddl
out
sub
mov
leave
outsb
imul
pushf
jo
sbbl
and
push
xchg
push
adc
dec
mov
adc
add
jl
cmp
in
sbb
fwait
lret
ljmp
shrb
outsl
aad
jg
or
add
or
jo
fwait
pop
and
xor
out
pop
adc
pop
stos
les
pop
data16
cli
fcoml
pop
out
in
test
xchg
xchg
add
lret
ret
jmp
mov
inc
or
adc
test
adcl
mov
or
sbb
sub
jge
or
scas
lcall
sbb
ds
jbe
das
movb
mov
xchg
push
pop
push
cmp
cmp
jmp
pushf
dec
mov
xchg
xchg
in
xlat
jbe
adc
jae
dec
test
gs
sub
adc
ljmp
shrl
push
or
xorb
push
aam
cmp
cs
xchg
int
inc
mov
jmp
jb
fwait
out
sbb
push
pop
loope
dec
sbb
jge
mov
mov
push
jmp
sbb
mull
fs
fisttpl
sti
inc
adc
pop
jmp
pop
or
stc
adc
js
sbb
adc
nop
and
adc
pop
movsb
pushf
sub
roll
or
dec
pushf
test
cwtl
or
popl
fdivrl
jo
iret
mov
cmp
lret
ficompl
mov
popf
add
mov
lcall
in
into
popa
ja
cltd
iret
pop
mov
addr16
scas
fmuls
xor
out
xchg
leave
in
sub
add
push
pop
loopne
in
shll
je
aam
cmpsb
dec
lret
pop
mov
pop
rcll
pop
lock
out
imul
ljmp
shrl
mov
and
dec
add
dec
xor
jl
mov
pop
test
lea
add
jecxz
push
lods
dec
sub
pop
xrelease
mov
push
roll
pop
lea
add
addr16
fimuls
in
scas
sbb
stc
mov
in
mov
mov
shrb
in
push
add
lahf
sbb
test
test
imul
inc
and
cmp
mov
lock
mov
rolb
pop
mov
xchg
ja
lock
mov
xorl
test
sbb
cmpsl
fwait
pop
cmp
fcmovb
cs
les
jp
mov
or
test
xor
adc
test
loope
or
pop
scas
jl
lea
mov
push
out
add
push
sbb
cmp
stc
je
or
sub
fcoml
sti
fs
scas
dec
aaa
sbb
pop
inc
ret
or
push
xchg
jmp
cmp
pop
sbb
dec
fcoml
push
lods
push
ss
xchg
mov
pop
sbb
inc
inc
es
mov
pop
cltd
cmp
push
nop
dec
inc
mov
jmp
pop
andps
sbb
bnd
xchg
cwtl
sub
outsl
inc
xchg
shll
cmp
movsb
fsubp
push
mov
xchg
inc
and
add
sbb
loop
leave
fs
loopne
fcomi
in
add
inc
sbbb
ficoms
pushf
fsub
push
ss
fistpll
ljmp
and
pusha
fdivr
inc
dec
mov
inc
aad
es
movsl
cwtl
and
dec
loope
movsb
aas
mov
test
sub
mov
sub
or
rorb
dec
ret
jecxz
or
mov
cmp
sub
cmp
fs
and
jno
inc
daa
push
loope
jl
mov
pop
stos
xchg
insl
iret
ss
xor
cmp
or
mov
enter
xor
pop
ret
push
or
xor
lcall
pop
fiaddl
push
inc
mov
popf
or
test
test
lods
stos
les
pop
sarl
pop
ficoms
pop
enter
jp
das
push
mov
xor
xor
aaa
rcl
imul
and
push
jecxz
clc
pushf
leave
loopne
scas
inc
gs
loope
push
and
pop
cmp
sbb
movb
mov
adc
inc
adc
sbb
bound
lods
decb
inc
pop
and
inc
adc
pushf
sbb
xchg
sbb
les
je
sahf
xor
inc
jge
mov
popf
stos
es
jo
call
and
test
mov
mov
pushf
mov
arpl
sbb
push
jecxz
sbb
sub
out
lock
fidivrs
pop
arpl
movsl
les
mov
sbb
das
lahf
or
imul
xor
imul
sbb
aam
cmpsl
aad
call
push
cmc
xchg
roll
adc
mov
cmpsb
pusha
push
data16
lds
mov
push
aaa
add
mov
fcompl
scas
popa
jle
stos
mov
add
bound
mov
cld
and
int3
xchg
sbb
push
jle
lock
stc
lods
mov
cld
sub
pop
lret
pop
les
sti
jmp
das
ret
lea
sbb
xchg
mov
push
cmc
push
rcrl
cld
xor
bound
push
in
sbb
inc
out
push
pop
movsb
lock
imul
mov
cmp
mov
dec
fdivs
sub
mov
push
lahf
or
pop
dec
mov
push
insb
cwtl
inc
out
push
repnz
movsl
push
cmp
push
cmpsl
pop
jbe
hlt
xor
rolb
enter
xor
in
aaa
cmp
sub
fldl2e
lods
cmp
ljmp
jmp
sbbl
jmp
and
push
cli
or
xchg
rcl
pop
or
cmpsb
mov
jmp
push
repz
fisubrs
sti
std
idivb
mov
sub
fbld
mov
adc
sbb
xchg
shlb
cmp
jno
inc
ljmp
aad
push
int3
push
in
das
jb
movsl
je
mov
sub
add
pop
push
pop
jle
mov
xchg
or
xor
xor
lahf
xorb
jge
fdivrs
jne
pushf
mov
stos
jg
sahf
push
pop
cld
iret
cld
in
sarl
mov
popl
jg
and
sub
ds
lock
sbb
shrl
lea
dec
stos
dec
fiadds
jecxz
das
mov
cmpsb
iret
add
nop
mov
pop
cs
mov
mov
sub
inc
mov
push
xlat
std
mov
lods
fldt
push
les
push
aam
xor
inc
push
mov
iret
test
jg
add
int
outsl
xorb
scas
and
jle
data16
inc
xchg
mov
outsl
negb
popf
lds
lods
ret
pop
add
or
sahf
mov
pop
and
daa
and
movb
jns
xchg
cmc
popa
stos
jmp
xor
fiadds
in
cmp
push
cwtl
test
and
outsb
inc
pop
mov
adc
dec
xchg
pop
scas
popa
test
aad
nop
adc
add
rcr
cmp
xchg
pop
jg
mov
dec
mov
jne
cltd
sub
les
lahf
pop
in
test
sbb
cmp
or
push
push
je
dec
sarl
push
adc
das
push
or
je
mov
adc
lahf
leave
outsl
dec
or
hlt
movsl
inc
add
adc
movsb
mov
sbb
out
sbb
jne
xor
nop
fs
jns
mov
loop
lods
mov
mov
mov
xor
push
fcmovne
add
adc
xor
add
mov
aad
rcrl
cmpsb
test
call
sbb
jmp
mov
lret
pop
add
idivl
sub
mov
popf
adc
out
stos
js
popf
shr
mov
xlat
filds
cld
add
jae
sub
test
test
sbb
js
inc
popa
or
aas
enter
cmp
pop
mov
add
mov
jbe
sbb
popf
jb
outsl
sub
push
ds
push
push
cmp
jl
popf
frstor
inc
dec
and
scas
push
inc
sahf
popl
sahf
inc
mov
mov
jno
ljmp
mov
fnsave
inc
mov
adcl
dec
xchg
lea
cmp
mov
push
sub
jb
bound
xchg
scas
add
ja
dec
inc
fisttpll
push
iret
int
pushf
inc
cmp
add
repnz
call
mov
ror
clc
int3
fdivs
cmp
nop
jne
ret
mov
dec
push
arpl
push
popf
push
dec
icebp
cmp
pop
jl
push
sbb
and
mov
adc
adc
inc
mov
and
jmp
leave
push
push
retw
rclb
push
xchg
mov
aam
mov
lock
pop
push
xchg
iret
aad
mov
out
int
std
push
cmpsl
xchg
incl
xlat
cmp
int
lock
icebp
jge
test
xor
lock
clc
fs
or
add
add
push
jl
cltd
and
outsl
sub
push
lods
mov
cmpsl
sub
jne
out
std
dec
or
mov
rcll
sbb
sbb
cwtl
outsb
popf
inc
stc
aaa
iret
in
in
es
into
loop
xor
inc
in
pop
sti
xor
call
mov
xor
movsb
scas
add
ror
adc
in
push
decl
mov
push
js
mov
dec
repz
jae
ficomps
jno
stos
sbb
rorl
dec
xor
lcall
daa
decl
pop
adc
xor
sbb
mov
mov
in
je
cmp
out
fcomps
cmp
outsb
push
call
loop
out
shlb
in
fcmovu
movsb
cmp
or
das
pop
xor
scas
mov
pop
push
cmp
pop
sub
dec
loop
mov
repnz
sbb
aas
lods
adc
test
jnp
lock
popf
add
lods
mov
and
in
adc
arpl
lcall
push
cmp
mov
xchg
les
push
or
adc
ret
addr16
roll
mov
and
inc
inc
and
test
or
cmp
sbb
adc
jb
test
lret
in
cli
inc
add
jo
push
ljmp
ret
pop
pop
setle
subl
xor
xlat
fs
fldcw
mov
sbb
dec
das
inc
jmp
mov
and
dec
sbbl
jns
cmp
adc
pop
fisubrs
dec
cli
int3
mov
pop
cmpsb
pushl
jecxz
push
movsl
leave
inc
push
pop
ror
cwtl
xor
mov
jae
negb
pushf
in
adc
nop
frstor
mov
cmp
and
mov
test
out
add
dec
jae
push
fcoml
fs
xorb
xor
rolb
xchg
fwait
xchg
mov
jns
leave
negl
dec
push
jl
mov
int3
into
pushf
xor
in
dec
fldcw
dec
sub
aaa
inc
popf
enter
repnz
push
std
xchg
sub
cmp
pop
xchg
int3
movsb
jg
sub
inc
pusha
rcr
orl
pop
pop
and
mov
jae
decl
cmp
shll
mov
inc
rolb
jp
pop
scas
dec
movsl
dec
push
mov
dec
jge
idivl
jne
in
inc
push
imul
push
mov
jmp
add
ds
add
xchg
sub
mov
lahf
cli
cmc
xorb
xor
pop
pop
pop
js
or
jp
inc
jno
orb
or
xchg
cli
repz
ja
stc
sub
fsubrp
cmp
inc
xchg
ret
rcl
xor
aas
sbb
mov
arpl
or
insb
fnstsw
cltd
ja
push
cli
cmp
int
sub
fistpl
push
or
cmp
rol
shlb
and
rcrb
sbb
sub
cmp
pop
sub
in
loopne
xor
neg
mov
sub
xor
ja
xor
addr16
loop
out
mov
and
xchg
xchg
mov
iret
push
inc
outsb
in
xchg
cmp
stos
xor
and
loope
or
jmp
insb
andb
pop
xor
iret
aam
sbb
rclb
or
and
dec
mov
mov
lock
mov
lret
pop
jae
push
ret
mov
out
mov
ds
adc
pop
popa
cltd
dec
jne
xchg
jno
jns
lret
iret
mov
lods
xorb
inc
or
enter
in
gs
jns
xor
mov
stos
imul
mov
jp
adc
subl
jbe
sbb
mov
pop
shl
push
outsl
lds
int3
mov
mov
add
sub
imul
rcr
aad
cmp
int3
aam
mov
push
pop
push
bound
movsl
stc
aad
cwtl
mov
iret
shll
add
pop
lods
call
mov
inc
add
cltd
int
shrl
into
xor
lods
scas
leave
sbb
inc
xor
cwtl
je
push
enter
loopne
push
in
fnstcw
in
jmp
or
or
ficoml
sub
sbb
divl
pop
jne
in
sub
inc
rol
cmp
mov
push
pop
jle
nop
and
adc
xor
ja
es
add
ds
mov
test
jns
push
rclb
cmp
or
rcll
inc
inc
jle
lret
notl
std
in
out
sarl
int3
inc
jo
les
into
inc
shlb
lret
push
or
fistps
fdivrs
shlb
shlb
pop
push
dec
push
bound
jno
jge
icebp
and
repnz
jo
cmpsl
jae
sbbl
sbb
imull
in
je
mov
je
popf
test
sbb
or
pop
fcmovu
loop
in
sahf
push
push
pop
hlt
adc
notb
mov
push
lock
ret
rcrl
xchg
adc
faddl
or
mov
addl
sbb
jecxz
mov
mov
and
mov
je
das
adc
or
imull
mov
movsl
add
lock
cwtl
pop
fidivs
imul
icebp
add
fistps
clc
cltd
sub
push
sub
mov
lcall
call
addr16
dec
dec
jb
cld
jno
xor
data16
dec
cld
sti
mov
ss
clc
push
cli
test
push
jno
mov
jp
fisttpl
xor
adc
and
repz
jnp
push
rdtsc
xor
clc
addr16
scas
stos
mov
out
mov
dec
cmp
mov
int3
insl
std
call
or
mov
out
loop
adc
jb
jmp
cmp
ret
jmp
in
mov
pop
scas
leave
sub
fnstenv
xchg
aaa
mov
cltd
cli
and
mov
aam
jl
out
adc
adc
adc
mov
adc
add
insb
mov
pushf
and
icebp
sar
pop
pop
cmp
pop
ret
push
ljmp
jb
mov
mov
jae
lahf
sarl
and
jne
rcl
push
ret
mov
jnp
push
or
shrl
insb
jp
jle
sub
and
je
insl
orl
in
mov
movl
inc
cmp
cmpsb
xor
sahf
out
adc
adc
jno
lods
inc
inc
loop
mov
arpl
icebp
push
loope
testl
mov
sti
xchg
pushf
ficompl
dec
roll
fstpt
jmp
adc
jne
cmp
mov
int3
test
jnp
mov
repnz
lret
arpl
aad
sarb
sub
push
push
pop
push
mov
filds
mov
add
in
call
in
add
add
xchg
lahf
jbe
ds
inc
mov
mov
adcl
ljmp
xchg
push
sub
jg
pushf
dec
inc
addb
in
rorl
mov
sub
sub
aaa
addl
js
adc
in
imul
pop
iret
adc
dec
jg
lcall
std
gs
and
lds
mov
cltd
mov
clc
test
mov
jo
push
shlb
push
out
sahf
push
lock
loop
xchg
jno
mov
rorb
outsb
pop
test
sarb
into
les
outsb
xor
xor
clc
pop
mov
jno
sbb
dec
inc
sahf
mov
cmp
cli
fcmovne
pop
dec
out
and
mov
mov
and
xchg
addl
bound
xchg
mov
push
fdivr
fsub
push
xchg
cmc
adc
xor
lods
test
mov
stos
mov
aaa
pop
push
into
xor
jae
out
cwtl
add
imul
in
adcl
cmp
ret
fisubrl
in
fbld
sbb
sbb
bnd
add
js
and
icebp
inc
out
sahf
mov
pop
push
push
je
jg
mov
add
loopne
cmp
out
xor
adc
mov
and
repnz
cld
repz
pop
sbb
mov
mov
scas
xchg
mov
push
testb
ret
jecxz
or
cli
in
push
xor
pop
loopne
mov
add
mov
push
cs
adcb
pusha
loop
lahf
sbb
dec
mov
mov
shrl
xchg
dec
dec
shlb
fnstsw
dec
test
negb
xor
outsb
and
add
aad
mov
jl
lret
inc
pop
icebp
movsb
mov
or
leave
mov
icebp
mov
gs
pop
push
pop
jne
or
bound
jnp
xor
imul
mov
ret
dec
je
or
addr16
cmp
dec
scas
jns
cld
lds
lahf
mov
mov
cmpsl
lret
jecxz
aaa
data16
mov
xchg
sahf
test
jg
xchg
jge
es
jl
orb
jns
push
mov
mov
xchg
jecxz
or
in
or
stos
adc
stc
call
les
sbb
xchg
sub
cwtl
enter
adc
adc
sbbb
push
xchg
cmc
mov
pusha
aas
outsb
icebp
mov
imul
cmp
sar
test
lahf
jbe
push
lret
call
rcrb
jle
popa
mov
xchg
jno
leave
lcall
daa
scas
adc
lds
dec
addr16
mov
push
add
cmp
fists
jle
sarb
mov
lahf
and
push
push
sub
add
dec
and
popl
xor
aas
mov
cltd
mov
ds
adc
cmpl
xor
or
fwait
clc
popa
dec
cltd
lahf
cmpsb
mov
orb
or
insl
jmp
out
or
adc
pusha
or
push
inc
add
xor
data16
pop
add
in
popf
push
mov
std
mov
push
and
insb
ja
push
cmp
js
and
mov
lods
jns
xchg
or
add
ficomps
adc
popa
mov
jl
or
pop
lds
xlat
les
mov
movsb
cmpsb
mov
jecxz
xor
jmp
push
iret
sub
push
stos
dec
push
adc
mov
add
fadds
loopne
ret
adc
jecxz
xchg
mov
adc
test
mov
mov
pop
and
adc
loopne
subb
pop
leave
divb
jno
fidivl
clc
sbb
lret
addr16
test
gs
adc
dec
mov
inc
les
arpl
push
cmp
xorb
adc
daa
inc
and
dec
sub
mov
lock
add
mov
xor
sub
cmpsl
sbb
inc
or
inc
insb
mov
idivb
jb
jle
aaa
xor
arpl
mov
push
mov
push
sbb
mov
fwait
xlat
xor
pop
das
out
fwait
mov
into
rdtsc
daa
mov
pop
sti
jae
sbb
cmp
cmp
pop
stc
lret
xchg
addl
dec
cmp
jmp
inc
mov
test
test
or
je
inc
xchg
int
pop
mov
fdivrs
jecxz
pop
push
xchg
out
push
mov
cs
imul
jae
enter
mov
outsb
xor
lds
pop
and
jb
cmpsl
imul
fcoms
xchg
sub
xchg
and
sub
lret
push
push
dec
mov
out
lea
xor
and
mov
cmp
call
pop
lock
jno
fwait
xchg
xlat
dec
or
inc
mov
inc
test
mov
sub
sbb
sub
fisttpll
stos
fisttpll
ljmp
rcl
sub
int3
add
add
push
inc
shll
fdivs
popa
js
rolb
pushf
call
pusha
cmp
adc
cmp
mov
loopne
or
jl
sub
push
jo
xchg
addr16
sbbb
bound
dec
call
sbb
xlat
xor
pop
xor
dec
push
jmp
jnp
dec
test
in
mov
dec
aam
and
push
in
pop
in
sub
mov
adc
mov
cmpsl
push
ret
jae
mov
mov
sbb
fs
notl
cmc
jmp
scas
fcoml
mov
xor
jl
pop
cmp
mov
sbbb
push
popa
addr16
fs
cmc
lods
xchg
mov
ss
sahf
sub
rclb
iret
mov
subl
push
sub
vorps
jae
aas
iret
push
jnp
xchg
lcall
fimull
or
adc
xor
lahf
xor
cmpsl
ljmp
loop,pn
outsb
in
pop
cmc
xor
and
jg
or
adc
int3
jg
or
cmpb
addr16
insb
sub
lea
sub
inc
aam
sbb
jne
popa
pop
mov
lods
fistps
or
lahf
mov
ffreep
adc
cmpl
addr16
push
jns
add
xor
mov
mov
sahf
lock
es
push
xor
movsl
dec
cmp
fidivs
or
jle
subb
out
mov
and
sub
dec
xchg
shll
das
lret
lret
fisubl
nop
adc
push
adc
sbb
test
cmp
push
push
xchg
jbe
adc
cltd
xor
jecxz
mov
scas
mov
cli
aad
xor
lcall
mov
mov
mov
cmp
jl
bound
jp
jl
mov
ss
pop
sbbl
js
jmp
add
mov
sbbl
and
push
leave
inc
fisubl
pop
add
jl
and
sbb
in
cmp
push
stc
testb
std
pop
cmpsb
fnsave
int3
aam
mov
iret
ljmp
pop
stos
fcom
testl
adc
shrl
cmp
or
push
in
rep
add
scas
xor
pop
add
jge
xchg
subb
clc
loop
adc
lret
outsl
movups
jmp
or
mov
icebp
sbb
pushf
add
cmp
sha256msg1
fdivl
adc
push
jae
rorl
cli
arpl
mov
jo
mov
sub
adcb
or
xchg
in
out
lret
imul
and
andb
aas
jge
cmpsb
imul
jg
and
push
cs
sub
dec
imul
add
data16
sub
xor
shl
shl
xlat
imul
pop
movl
cltd
pusha
cmp
xchg
lret
mov
pop
inc
test
nop
dec
mov
enter
cmp
mov
add
dec
mov
adc
adc
xchg
popf
test
jae,pn
pop
push
xchg
ss
jae
sti
cmp
rcll
test
mov
push
pusha
and
push
movsl
lret
xchg
jg
outsb
adc
test
pop
cs
adc
sub
and
inc
test
cwtl
fsubl
xchg
cmpl
arpl
cmpl
push
inc
xchg
call
fucomp
jae
icebp
repz
sbb
stos
cwtl
mov
cwtl
in
jnp
xchg
push
lret
fdivrp
xor
nop
jg
aas
jg
mov
addb
movsb
push
cmp
adc
repnz
sub
and
shrb
adc
pusha
mov
push
out
rcrb
popa
adc
or
mov
clc
insb
dec
add
push
push
aas
and
pop
lock
mov
pop
das
fisttpll
test
ljmp
jle
data16
aaa
lock
adc
rcrb
dec
nop
stc
test
ss
adc
pushl
adc
jle
ret
outsl
aas
adc
push
cmp
bound
and
rorl
lret
pop
repz
mov
mov
jmp
pop
arpl
pusha
fwait
cwtl
es
sbb
rol
das
fidivs
or
mov
jbe
lods
imul
adcl
and
push
mov
adc
xor
sar
ljmp
mov
cmp
enter
nop
ja
mull
dec
pop
xchg
dec
out
sub
test
mov
insl
cmpsb
lods
cmpsb
xor
test
adc
nop
dec
shl
in
cmpsb
sub
dec
adc
lods
lds
or
subl
fcoms
fwait
incb
mov
in
loop
adc
push
and
lds
fwait
xor
jge
cmp
je
not
jnp
mov
xor
out
loope
jmp
sbb
int3
in
loopne
ss
sub
ss
sbb
repnz
aaa
loopne
jge
push
popf
push
push
mov
lock
sahf
pushw
and
xchg
in
and
mov
or
gs
xor
nop
aam
movsl
cmp
std
fnsave
or
ljmp
push
pop
and
pop
rolb
cmp
rclb
and
mov
or
or
sbb
out
int
and
jne
or
cmpl
pusha
sub
xchg
fmull
cmp
aad
subl
pop
lods
or
mov
pop
cmp
add
mov
pop
in
dec
jmp
xor
mov
cwtl
push
addl
mov
push
jl
jbe
pop
leave
fldt
sbb
add
out
sbbl
int3
ficompl
sti
movsb
xor
pop
nop
mov
fwait
ret
pop
clc
test
push
in
mov
cmc
xor
pop
sti
fimull
or
cmp
jns
dec
dec
push
push
and
push
aaa
pop
cmpsb
cltd
test
hlt
adc
mov
ja
sub
sbb
sub
pop
mov
mov
pop
add
pop
fs
imull
pop
cld
mov
fisubl
ds
mov
icebp
and
dec
and
std
xor
outsb
mov
mov
push
push
cwtl
pop
js
ja
imul
cmpl
jle
push
jmp
add
jo
mov
dec
mov
movsl
and
ljmp
std
outsl
cwtl
pop
add
and
cmp
mov
cmp
imul
sbb
cmpsl
lea
jae
xchg
sub
filds
push
xchg
and
js
xchg
pop
movsl
xchg
push
stc
lahf
jge
jecxz
scas
mov
scas
mov
mov
sbb
cmp
scas
shll
lods
fidivrl
insl
loopne
xor
xchg
je
dec
pop
pop
jge
insl
jmp
cmp
in
cmp
insb
xchg
iret
psubsb
gs
xor
mov
adc
clc
inc
push
mov
lock
mov
pop
sti
mov
mov
adc
insl
xchg
add
mov
les
xchg
add
xchg
shll
jns
jmpw
dec
test
xchg
sub
jmp
dec
xor
cmp
pushf
icebp
rol
adc
xor
arpl
gs
push
stc
lock
cmp
mov
xor
lcall
rcrl
xchg
pop
cltd
jg
mov
or
cmp
cmp
lods
sarl
test
stos
lods
cmp
lock
xchg
test
lcall
out
or
xchg
in
out
mov
das
fdiv
cmpsl
push
fwait
sub
and
insb
outsb
push
inc
inc
ja
subb
mov
enter
int
fdivl
fwait
mov
out
adc
cli
lods
or
gs
mov
mov
mov
rcr
push
jns
and
aaa
jle
add
fistpl
in
ljmp
xor
sub
sbb
aas
stos
lret
xor
je
or
cs
cmpsb
add
shlb
xlat
jmp
push
and
test
xor
xchg
sbb
cmc
or
xchg
imul
std
pop
pop
xor
insl
call
into
shlb
mov
lret
aas
jle
iret
jmp
adc
xor
xchg
lcall
cmc
lods
pop
sub
pop
xchg
movsb
mov
cltd
xchg
jo
add
outsb
xor
adc
sub
pusha
faddl
jns
loopne
inc
pop
iret
xor
insb
xchg
test
push
mov
es
dec
int3
test
xrelease
jecxz
mov
pop
mov
insl
aas
jne
xchg
xor
in
xchg
out
push
mov
in
dec
aaa
fsubr
lods
adc
fisubrl
jbe
ja
add
cmp
fidivrl
add
push
dec
pop
sub
mov
loope
mov
push
fidivs
stc
sub
in
adc
dec
fisttps
and
and
mov
ljmp
test
add
fcoml
sbb
push
enter
pop
test
call
dec
sahf
iret
pop
je
sbb
mov
test
sub
es
push
xlat
sub
sub
pop
mov
lock
or
jnp
pop
neg
sub
pop
push
mov
stc
data16
cmpb
test
imul
mov
sbb
pop
adc
pop
cmp
add
add
push
jmp
cmc
daa
sbb
xlat
js
add
mov
data16
sub
cld
je
or
out
and
lret
neg
pushf
orl
fs
sbb
xchg
outsl
mov
daa
ret
cmp
mov
rsqrtps
inc
adc
xor
push
sar
mov
lock
enter
mov
out
ficompl
inc
sbb
stos
xchg
cli
movsl
add
fwait
push
push
jae
repnz
daa
adc
insl
loop
jg
jmp
xorb
pop
push
add
xor
loop
cmpsb
faddl
in
cld
loop
fs
push
into
or
mov
fs
sub
xor
lcall
add
test
les
mov
xlat
add
xor
repnz
pop
jae
push
jle
dec
xchg
push
roll
fstpt
mov
sbb
inc
scas
popa
dec
sbb
add
imul
imulb
xor
sbb
inc
push
ljmp
in
cmp
pop
adc
pop
xchg
lods
xchg
bound
call
sbb
rorl
out
cltd
pushl
dec
mov
mov
aas
jge
ret
add
push
aaa
sub
cwtl
into
and
aaa
out
sarb
push
lret
inc
jo
rclb
movsb
mov
fsts
mov
fidivrl
orps
xor
fcmove
stos
pushf
out
sbb
push
xor
pop
sahf
test
push
dec
loopne
pop
mov
jge
sahf
movsb
mov
lods
scas
pop
mov
jnp
add
push
jg
push
mov
jo
dec
sahf
popa
shrb
jg
sbb
mov
pop
xchg
test
test
shll
xor
dec
nop
movl
push
std
push
xchg
inc
jns
lea
adc
out
jne
repz
loop
jno
in
cmp
and
mov
dec
sub
fstpl
pusha
clc
or
adc
mov
mov
into
fbld
sub
inc
cmp
icebp
jl
test
cmpsl
sti
cs
jmp
lahf
push
pop
andl
mov
ds
and
ljmp
and
adc
add
mov
ret
iret
and
adc
bound
cmp
add
adc
iret
cmp
dec
xor
sub
inc
and
sbb
loopne
mov
dec
fcmovbe
xchg
xor
or
icebp
outsb
or
mov
pop
add
sub
adc
sbb
fwait
out
loopne
roll
addb
sbb
xchg
andl
push
sub
inc
cmp
sub
or
xlat
cmp
lea
add
xchg
mov
mov
inc
push
xor
rcll
rol
cmp
jmp
std
dec
mov
cmp
mov
mov
daa
add
dec
jbe
dec
lea
enter
and
sub
jb
es
inc
and
rcrb
adc
pop
lock
xchg
or
adc
scas
push
pop
pushf
fbld
int
loopne
mov
into
lock
cmc
jne
mov
xor
pop
ret
shrb
jecxz
fisttpl
push
call
dec
data16
mov
xchg
fs
test
push
mov
jno,pt
xchg
or
pop
je
push
and
iret
outsb
sbb
les
shrb
adc
aam
imul
mov
sub
or
mov
insl
cmp
mov
je
xor
or
pop
imul
xchg
lds
xlat
jge
out
jne
pop
fs
test
lds
cmp
xchg
and
xchg
adc
push
push
mov
push
test
cmp
lret
cltd
push
and
dec
xlat
sub
ja
test
jmp
lcall
les
lea
nop
cmp
lret
mov
sub
xchg
nop
mov
jecxz
inc
mov
add
jle
mov
outsl
arpl
mov
int
mov
lret
fistps
jl
add
mov
insl
pushf
adc
add
popf
dec
arpl
cmp
mov
xchg
mov
shrl
push
sub
repnz
cmp
sti
mov
xchg
dec
adc
in
mov
shlb
aad
cmp
or
test
push
outsl
cmp
push
mov
pop
sbb
mov
push
adc
negb
and
sbb
xor
mov
lahf
add
stos
mov
lds
xor
cmp
jo
loope
pop
aaa
icebp
cmp
lock
add
shrl
test
loop
scas
mov
lods
pop
or
lcall
jg
out
ljmp
rorl
cmp
aad
mov
lods
pop
mov
data16
cmp
adc
cmp
sbb
rorb
dec
fsub
cld
mov
or
jo
adc
inc
xor
xor
sbb
mov
push
xor
test
popl
add
out
rep
jbe
lds
imul
xor
mov
xchg
je
jne
sahf
sbb
jp
jae
add
cwtl
xchg
call
shll
cmp
push
std
add
pop
out
lea
ret
ret
stos
dec
sti
loopne
or
push
and
mov
fcomps
bound
sbb
in
ret
fcmovne
aaa
pushf
or
jg
xchg
adc
outsb
inc
cmp
sbb
and
sub
ja
mov
pop
dec
xor
and
xor
ret
das
push
sbbl
pusha
xor
push
push
inc
inc
jg
mov
jle
and
movsb
int3
shll
dec
jp
jnp
in
pop
mov
xor
push
rolb
push
sbb
bound
adc
std
mov
mov
or
jmp
in
loope
mov
jecxz
jp
aad
mov
cwtl
mov
and
sub
int3
int
mov
dec
or
inc
mov
popf
in
adc
adc
lods
jg
jbe
mov
dec
sahf
mov
adc
cmc
pop
iret
dec
ret
sub
pusha
jle
test
int
sub
pop
lock
mov
dec
nop
inc
pop
in
je
pop
and
pop
cltd
out
cmp
insb
sub
adcb
insl
mov
mov
shl
mov
pop
mov
sahf
pop
pop
in
maxps
pop
testb
fdivl
adc
xor
mov
inc
dec
popa
cmp
loopne
test
out
loope
mov
int
loop
xchg
xchg
cmp
rclb
fcoms
pop
push
xor
in
out
pop
mov
pop
orb
pop
lods
add
sub
cld
sbb
jnp
hlt
jb
sarb
dec
rol
leave
mov
sub
movsl
test
aam
xchg
nop
and
icebp
sbb
jae
in
cmp
sub
push
mov
addl
sarb
or
adc
scas
sbb
mov
rorb
pop
loope
dec
gs
in
or
cmp
push
cli
pop
inc
popa
mov
ljmp
in
and
daa
cmp
cmc
add
sbb
push
jnp
xchg
pop
jo
mov
popa
xor
sub
fxch
ljmp
mov
std
add
cmp
movsb
fldcw
mov
pop
fisttps
lods
pop
cs
push
int
popf
dec
cmpsb
jb
mov
xchg
je
negb
flds
and
outsl
loopne
in
fwait
xchg
fdiv
sahf
lds
insl
mov
loop
repnz
and
mov
shl
int
cwtl
jnp
sub
or
or
decb
cmp
ljmp
xchg
ret
cmp
and
rcll
jl
mov
mov
or
cmc
or
pop
ja
fnstenv
xchg
and
movsb
mov
push
test
nop
xchg
lock
sarl
lods
cld
pop
jecxz
iret
jmp
out
jae
jbe
sub
mov
out
jecxz
daa
add
imul
dec
push
jb
mov
dec
addr16
and
shll
cmpsl
sub
push
push
dec
xchg
jp
mov
mov
insl
mov
push
or
int
sub
ds
bound
add
cmpl
mov
or
mov
sub
negl
in
popa
mov
mov
insl
aam
cmp
mov
inc
lcall
mov
add
lahf
es
and
adc
ja
ja
dec
adc
add
or
outsb
outsb
sbb
repz
lea
lods
in
inc
xchg
icebp
xorl
test
cmp
and
stos
mov
mov
ret
ret
outsl
and
sarl
mov
pop
pop
cli
pop
push
pop
mov
xchg
xchg
into
jle
lods
jns
ds
jno
jl
imul
jg
dec
sbb
push
bound
sbb
mov
xor
xchg
dec
insl
inc
call
xor
arpl
outsb
insb
add
add
inc
or
call
outsl
cmp
fs
adc
leave
cli
dec
or
inc
ljmp
or
jnp
mov
mov
jns
inc
inc
jno
cmpsb
push
addr16
pop
fucomip
call
maxps
das
push
mov
xchg
mov
fisubl
scas
xor
aad
outsl
ror
ret
jb
out
dec
scas
loope
lret
or
out
mov
sbb
bound
adc
jne
mov
jne
push
or
in
mov
sub
outsb
out
jmp
inc
imul
mov
aam
and
sbbl
lahf
iret
mov
jb
scas
in
ljmp
cmpsb
es
cli
cmp
jo
mov
mov
cmpsb
inc
test
jl
sub
inc
clc
lea
dec
mov
jmp
lret
mov
fcmovne
fadds
sub
test
ret
adc
popa
out
add
pop
adc
cmp
mov
push
push
pop
lahf
out
mov
push
pop
jne
insl
adc
test
xor
sahf
into
lods
jb
push
pop
enter
xor
ljmp
repnz
lods
fistpll
jle
cmpsl
jp
dec
shl
sub
pop
cmc
lds
add
sub
inc
xchg
fmull
cmpsb
sub
shrl
call
xor
sub
lret
ja
mov
sahf
xor
xchg
cmp
add
cmp
add
insl
xchg
cmc
push
cltd
and
sub
inc
cmp
add
lock
mov
dec
inc
std
add
int3
jmp
or
dec
or
fmul
outsl
je
add
push
jns
dec
loope
xor
pusha
pop
cmc
fwait
cmc
cltd
fsubs
push
or
adc
idivb
push
jno
lds
xchg
cmp
das
enter
sbb
add
xchg
gs
test
aam
fisubs
rcrl
inc
iret
add
mov
mov
inc
mov
pop
out
inc
dec
inc
fnstenv
push
fisubrs
popf
xor
mov
stos
or
fidivs
and
outsb
lods
push
sub
push
divl
jle
adc
ret
sbb
test
xchg
jae
xor
je
sbb
push
pop
add
les
lahf
jae
mov
cmp
mov
test
pusha
cmp
lock
addr16
cmpsb
ret
add
xorl
test
jbe
cmp
inc
cmc
xchg
int3
lret
mov
in
inc
push
adc
inc
cld
dec
mov
das
cmpsl
lret
imul
mov
fwait
pop
or
or
lock
pop
lods
out
popf
shl
sub
inc
push
xor
mov
adc
roll
cmp
imul
push
dec
cmc
push
xorl
gs
rcll
test
push
rol
or
inc
pop
movsb
mov
aaa
inc
fsubrp
add
insb
andb
sbb
movsl
mov
stos
or
mov
cs
dec
mov
sub
out
lods
lods
repz
out
ja
inc
mov
mov
adc
push
stos
adc
out
lahf
cltd
pop
and
pop
in
mov
in
sub
add
or
mov
mov
clc
aaa
out
addr16
outsb
orb
pop
je
inc
int3
sbb
stc
aaa
xchg
add
imul
push
fdivl
cmp
jg
rcll
mov
or
and
imul
insl
jns
bnd
cmp
mov
push
addb
rcrl
sbb
xchg
xor
dec
dec
and
ds
xchg
mov
xchg
push
dec
mov
push
sub
insb
iret
int
mull
das
xor
mov
mov
std
cli
cmpsb
add
mov
xchg
jge
ret
jns
inc
jnp
push
shlb
dec
push
mov
stos
cmp
mov
sarl
insb
movsl
mov
add
push
stc
mov
jns
outsb
inc
clc
insb
sbb
nop
sub
aaa
dec
jne
jge
and
xor
hlt
fcoml
ret
cmpsb
sti
fisttps
andb
popf
mov
add
ss
dec
hlt
mov
inc
repz
inc
sub
xor
pop
das
test
cmp
adc
fidivrl
fnstcw
and
movsl
xchg
inc
mov
mov
aam
dec
sbb
xchg
dec
lret
rorb
pop
daa
sub
or
out
ret
filds
jb
jbe
scas
int
stc
mov
mov
imul
inc
push
rolb
mov
jns
dec
sub
xor
test
in
je
dec
fildl
xchg
push
xlat
push
xchg
push
andb
mov
inc
ret
or
add
pushf
sbb
push
test
mov
jmp
daa
mov
imul
push
shlb
fldenv
pop
cmpsl
add
mov
mov
and
add
shlb
inc
add
jg
mov
jno
mov
sub
mov
stos
sbb
test
bndstx
adc
sbb
xchg
repz
shll
adc
mov
or
inc
push
adc
xor
lock
stos
mov
or
mov
test
mov
mov
ror
fcomps
xor
shrl
and
xor
xor
dec
push
cmp
iret
or
jno
mov
push
push
xchg
js
sahf
pop
lcall
pop
jecxz
adc
jle
sbb
fimull
popa
ss
popf
mov
sti
xchg
imul
add
lock
xchg
js
loop
fiadds
dec
jecxz
adc
dec
xor
ficoms
xchg
popf
hlt
imul
add
sti
pusha
je
bound
sub
in
push
pop
adc
sbb
pusha
stos
stos
mov
xchg
cmc
cmp
mov
or
sbb
daa
inc
mov
lea
ja
ficomps
xor
cwtl
dec
cwtl
sbb
xchg
and
lock
add
pop
and
jne
sbb
dec
ficomps
movsl
push
lret
repz
rorl
out
xchg
data16
mov
dec
add
repnz
adc
or
in
filds
xor
xor
lea
xchg
sbb
xor
sbb
xor
jno
mov
jne
std
ljmp
scas
jecxz
popf
dec
xchg
adc
int
pusha
out
mov
fbld
js
pop
sub
int
mov
pop
inc
imul
mov
xchg
cmp
push
push
outsb
jl
dec
pop
sbb
fisttpl
das
jle
push
dec
or
in
mov
roll
sub
daa
and
dec
inc
and
sbb
jl
imul
push
jle
sbb
mov
bound
movsl
lods
cwtl
leave
in
add
cli
xchg
lods
std
cmpsl
jmp
sub
dec
xchg
sti
lds
in
mov
dec
mov
push
add
fwait
jg
mov
movsl
sbb
sub
push
xor
jg
out
xor
aam
lahf
xor
and
lods
lret
notb
dec
imull
push
cmp
addr16
xchg
or
cmp
add
jb
cmp
in
mov
fwait
dec
mov
mov
sub
xchg
out
mov
jae
xchg
mov
notb
addr16
ds
lret
out
bound
xchg
cs
test
movsb
mov
pop
xchg
pop
inc
jns
fs
shr
or
add
ret
iret
mov
add
push
cmpsl
mov
mov
es
pop
push
insl
add
popa
or
pop
ret
add
lahf
inc
dec
rep
filds
jmp
outsl
out
js
xor
shr
lcall
andl
sbb
jne
pop
mov
jmp
pusha
in
sbbb
addr16
arpl
and
cmp
and
sti
repnz
test
out
and
jle
dec
or
jne
sub
clc
cmc
pushf
add
fcomi
pop
call
dec
into
mov
jno
js
icebp
mov
into
inc
lods
stos
inc
pop
movsb
in
add
push
jecxz
push
and
add
and
inc
and
lret
cld
call
push
rcrl
sub
jmp
andb
mov
jg
loope
cmp
push
xlat
adc
xor
loop
int3
daa
lret
inc
fdivr
sub
jmp
cmc
xor
push
fstl
lea
fidivl
adc
loop
mov
jp
mov
sub
aas
stos
cmpsb
frstor
dec
ss
push
insl
aad
fisubrs
fidivl
es
testl
mov
jle
cs
sahf
and
inc
hlt
lods
insl
adc
cmp
popl
sub
enter
push
xor
mov
xchg
call
cmp
xor
cmp
cmp
es
cmp
stc
mov
mov
or
imul
mov
mov
add
inc
xor
push
jmp
stos
dec
outsl
cmc
daa
jo
icebp
inc
cltd
pop
je
mov
les
in
mov
enter
fbstp
mov
mov
pop
or
enter
push
repnz
and
jbe
lret
fdivp
cmc
jo
and
orb
mov
std
pop
lahf
lods
mov
insl
xchg
int
iret
push
ds
out
vmulpd
bound
and
jge
and
add
pop
ja
fldcw
dec
aam
insl
cmpsl
inc
lock
xor
out
leave
inc
adc
inc
aas
dec
and
jne
push
dec
ret
jecxz
sbb
add
mov
cmp
cmpl
aaa
sbbl
jecxz
movsb
daa
xchg
xchg
and
inc
jb
and
push
icebp
movsl
adc
repz
rcll
add
sbb
out
inc
add
cmp
push
das
jnp
fsubs
jp,pt
pop
pusha
mov
ljmp
aas
notl
add
scas
mov
sbb
lds
sub
fistl
or
lods
sbb
inc
addr16
repz
cmp
cmpl
cltd
pop
movsl
daa
jo
jge
jnp
sub
js
in
jne
lea
out
pop
push
mov
imul
adc
push
stos
dec
cmc
sub
arpl
and
mov
mov
xchg
or
jb
cltd
aas
jne
lret
mov
leave
mov
mov
mov
stos
mov
mov
push
in
loop
mov
mov
daa
mov
push
push
mov
jbe
cmc
out
ret
sub
notb
int
xor
xchg
xchg
or
sub
inc
adcb
xor
subb
push
pushf
fildl
dec
dec
jo
adc
push
outsl
js
or
sarb
mov
int
xchg
sub
lods
fidivs
arpl
add
fistpll
mov
mov
add
insb
dec
mov
jg
mov
cmp
and
repz
sbb
add
push
push
or
cmp
push
jmp
mov
pop
mov
lret
mov
std
xchg
mov
insb
xor
xchg
xchg
ss
ja
push
and
test
in
adc
xor
or
addr16
imul
xchg
mov
jp
push
scas
fsubrs
aaa
stos
dec
xor
lret
push
and
dec
popf
xorl
mov
sub
or
mov
shr
dec
cmp
stos
pop
aas
fistpll
mov
dec
mov
jne
data16
push
mov
pusha
xor
pop
cmp
inc
xor
shll
lock
push
sub
cmc
jne
ljmp
cmovs
ss
xchg
xchg
mov
push
pop
popf
or
dec
lds
cltd
sub
cs
xor
add
push
decb
jns
and
cli
xchg
push
std
add
in
cltd
das
insb
adc
dec
and
pop
pop
shll
imul
and
icebp
addr16
test
mov
lods
fwait
pop
loope
call
cltd
sub
imul
out
jbe
inc
ss
pop
pop
int
orb
mov
mov
push
xor
jne
hlt
and
adc
sub
test
rol
push
adc
pop
cmp
xor
pusha
sbb
je
jo
jecxz
xchg
test
jg
sub
pop
test
in
insl
mulb
popf
add
lods
xor
mov
jb
rclb
mov
hlt
mov
jbe
add
shl
shll
push
jae
sub
sbb
sub
and
hlt
scas
cmp
adc
fmuls
dec
inc
fsubs
popa
shl
je
jg
cwtl
fdiv
dec
push
jecxz
jb
cmp
ficompl
cltd
sub
fnstenv
js
mov
mov
push
pop
mov
paddd
sub
jmp
loop
mov
repnz
leave
dec
xor
jb
xchg
mov
cmp
mov
sub
imul
dec
test
andl
sub
or
inc
and
int
add
fwait
ret
out
inc
int
mov
cld
rcrl
shrb
push
lods
and
shrl
test
push
repnz
rclb
push
cmp
jns
loopne
faddl
shr
aaa
shlb
in
jbe
lock
imul
mov
aam
cmp
pop
popa
pop
jb
mov
or
stc
and
shll
pop
fiaddl
mov
cmpsl
lret
pop
mov
sbb
push
inc
clc
mov
jne
mov
out
jbe
jmp
or
clc
dec
fiadds
loope
push
xor
sub
and
fwait
loope
ret
sbb
shrb
xchg
xor
pop
push
adc
outsb
outsl
mov
pop
das
fstl
movsl
insl
dec
out
cwtl
push
loopne
jae
shlb
adc
sbb
push
xchg
sbb
sub
add
sub
pop
jb
iret
pop
fsubl
xor
divb
mov
and
dec
mov
mov
lahf
int3
adc
addb
incl
cld
add
add
push
loope
mov
pop
lods
xchg
sti
inc
int3
sub
insb
fcoml
cs
pop
outsb
pop
xchg
mov
std
inc
or
mov
add
jns
xchg
mov
stc
xor
dec
mov
notb
lods
push
mov
out
add
xchg
int3
ss
sti
sub
xchg
lret
mov
rorl
fwait
sbb
and
add
stos
loope
push
les
lock
popa
sarb
js
leave
sub
inc
roll
sub
and
mov
add
sub
and
jb
es
outsb
and
dec
lods
ja
push
xorl
dec
mov
or
cmp
bound
mov
jecxz
ret
inc
insb
jp
jmp
pop
mov
out
dec
xor
lds
movsb
orl
or
inc
xor
dec
adc
adc
js
hlt
cltd
sbb
mov
cld
mov
or
xor
xor
popf
shrl
pop
cltd
xchg
stos
addr16
in
lcall
insl
or
pop
dec
movsl
push
lea
sub
out
je
mov
sahf
jbe
orl
mov
imul
in
imul
rolb
and
loopne
cmove
add
jp
mov
call
pop
cmp
or
push
jne
mov
mov
lcall
repz
lahf
rorl
mov
sub
jo
fwait
push
les
push
leave
push
loop
push
test
xchg
repnz
popf
and
enter
push
imul
out
sub
cmp
stos
aam
dec
xchg
push
or
jnp
in
popf
cmp
push
xchg
movsl
add
xchg
cmp
push
stos
stc
cmpb
dec
sbb
add
pusha
cmp
data16
daa
mov
mov
push
repz
in
jno
xchg
out
clc
mov
jns
lret
sbb
mov
mov
cltd
inc
lcall
dec
lds
or
mov
out
pop
adc
in
add
dec
in
add
mov
in
sub
dec
or
xor
mov
inc
enter
dec
lret
xchg
pop
push
dec
fs
stos
sub
sub
sub
into
push
xchg
sahf
pusha
movl
callw
add
mov
cmp
out
pusha
xor
fs
adc
jno
stos
push
testl
mov
inc
repnz
xor
movsb
pop
decb
mov
cmp
xchg
xchg
cmp
add
cmp
mov
popl
pop
push
imul
fldt
lods
xor
pop
stos
adc
in
add
mov
sub
mov
mov
popa
into
and
adc
jb
mov
popa
add
or
std
stos
lods
sbb
aas
push
cmp
mov
jle
dec
je
in
mov
pmuludq
sbb
sub
cwtl
shll
rep
jb
jbe
inc
vpshab
cmp
loop
xchg
stos
dec
add
or
inc
mov
lcall
movsb
rcrl
pop
insb
int3
je
pop
sub
jo
dec
into
imul
mov
repnz
test
push
loopne
ds
and
lret
sahf
and
gs
fnsave
cwtl
outsb
mov
xor
mov
xor
in
ret
sbb
inc
scas
jnp
aam
mov
jnp
push
movsb
iret
outsl
xchg
das
fsub
jae
ret
pusha
addr16
loope
ret
enter
mov
test
or
lods
adcb
adc
adc
jnp
adc
das
out
jbe
loope
jb
out
lret
stos
gs
mov
and
push
popf
insl
inc
enter
mov
pop
insl
pop
and
outsb
lock
lds
jbe
fidivs
mov
fdivs
xchg
icebp
mov
adc
out
and
pushf
xchg
loopne
xor
shrb
ss
pop
testb
in
outsb
bound
pop
and
rclb
and
jl
dec
mov
int3
adc
scas
scas
sub
leave
lods
repnz
dec
ss
mov
movsb
cmp
adc
add
lock
into
cmpsl
in
sbb
mov
jae
jl
mov
cmp
xlat
mov
out
scas
inc
xor
mov
adc
fimull
mov
cmp
or
test
fwait
and
add
insb
in
imul
jae
add
lret
in
lret
xor
mov
je
push
out
cmp
jmp
mov
jo
lcall
in
push
adc
lcall
lahf
sub
push
xchg
fs
fldenv
in
aam
test
aam
sbb
sub
pop
std
pusha
call
pop
mov
int
stc
in
test
jnp
xor
mov
adc
push
mov
jl
lods
sbb
and
mov
mov
loope
fnstenv
push
mov
xor
ljmp
pop
sbb
out
mov
xchg
jle
push
sbb
loope
mov
xor
cmp
pop
mov
femms
jg
das
jg
fidivs
test
cmp
leave
sub
mov
push
rolb
test
pop
fyl2xp1
repnz
mov
imul
push
push
pop
out
sti
js
cmp
fdivrs
aaa
gs
xchg
and
mov
bound
jle
xor
xchg
sub
xchg
in
les
aam
xchg
arpl
pop
push
mov
mov
dec
out
sarl
push
ficomps
leave
and
test
sbb
xchg
iret
jecxz
xchg
push
jge
jmp
sti
inc
and
xor
sbb
xchg
sub
push
mov
jne
and
pop
lods
mov
xor
int3
dec
insb
lcall
nop
lods
push
mov
stc
pop
insb
mov
test
in
loope
sub
and
mov
loopne
stos
cmp
xlat
cs
pushf
in
scas
xor
fisubl
add
cmp
xchg
add
inc
aas
cmp
or
mov
icebp
mov
pop
and
int3
lcall
pop
jns
pop
push
jp
jns
xor
fbld
imul
inc
xchg
aaa
mov
inc
jmp
in
jmp
inc
aaa
test
ret
inc
adc
nop
xchg
mov
add
mov
lea
pop
jb
cld
or
mov
gs
fsub
cmp
cmpsb
mov
pop
add
and
xor
popa
add
fs
rorl
repz
clc
xchg
mov
lods
test
fildll
fwait
sub
les
xlat
in
insb
loopne
mov
in
mov
sub
daa
push
mov
sti
das
cmp
mov
xchg
cld
out
rorb
subl
fldl
sub
dec
add
nop
xor
jge
pop
divl
shll
cmp
scas
and
addr16
testl
test
lcall
lds
jno
pusha
mov
stc
pop
fdivl
inc
xchg
pop
mov
outsb
fnstsw
xchg
popa
lods
es
outsl
je
lcall
adc
fcoml
shrb
rcll
pop
ret
es
push
jae
push
scas
insl
lret
scas
inc
jb
ret
cli
js
cmp
cwtl
cs
stos
cwtl
fucom
mov
and
pop
mov
pop
outsb
xor
sub
int3
rcl
pop
cmp
push
dec
outsb
pop
aaa
add
mov
aas
mov
push
sbb
arpl
lods
dec
xchg
cmpsl
adc
test
ret
dec
fnstcw
subl
iret
in
por
jp
inc
stos
iret
dec
cli
mov
sahf
cli
cltd
repnz
dec
mov
push
xchg
jmp
test
or
dec
xchg
es
fstpl
pop
add
gs
lea
xor
mov
aam
mov
sbb
test
aam
in
cmpsl
and
mov
push
andl
adc
mov
iret
xor
inc
mov
mov
and
mov
inc
jns
clc
enter
cli
mov
shrb
pop
push
sarb
ja
es
or
inc
dec
scas
pop
stc
pop
es
in
jl
int3
dec
inc
xchg
adc
je
adc
sub
sbb
cmpsl
test
fdiv
gs
fsqrt
adc
adc
xchg
iret
mov
fcompl
movsb
or
mov
daa
pop
nopl
aad
inc
and
testl
in
xchg
push
mov
cltd
and
inc
cmpl
cmp
sbb
addl
out
xchg
movsb
aas
and
repnz
fs
int
daa
and
lock
out
push
xchg
loope
add
test
jb
cmpb
add
sahf
mov
jbe
cmp
in
pop
mov
and
add
add
js
pop
cltd
je
mov
popa
push
jnp
dec
fiadds
sahf
rorl
and
or
mov
sub
fldenv
push
jo
jae
dec
shrb
lods
insb
pop
cli
ja
iret
xor
cmc
sub
fisubrs
add
add
cmp
mov
xchg
jo
push
testb
js
inc
cmp
jge
es
add
rcrl
cmp
inc
sbb
jecxz
pop
push
test
shll
scas
mov
dec
test
mov
sub
je
fcoms
loop
cwtl
mov
and
mov
int3
arpl
mov
pop
pop
into
ret
mov
outsb
in
movsl
int
dec
jmp
lock
fimull
sbb
dec
lods
mov
dec
sub
cmpl
std
dec
pop
cli
mov
cmovp
xor
mov
xor
mov
jl
and
sar
lods
pop
push
inc
adc
inc
ja
jge
jnp
loop
js
jl
repnz
sbb
mov
loopne
sub
pop
cmp
jge
sub
clc
lea
jp
cmp
pop
and
hlt
jmp
insl
cmpsb
jge
jno
mov
movsb
jbe
es
push
adc
sbb
jno
lods
push
and
push
jle
inc
into
add
inc
sbb
cs
cmp
std
sub
inc
loope
cltd
fiaddl
dec
cli
sarl
and
inc
repz
sbb
inc
inc
adc
fdivs
adc
aam
andb
dec
cmp
leave
incl
cmp
js
add
jb
mov
cld
pop
fs
pop
nop
cmp
mov
cmp
xchg
adc
push
leave
iret
xor
divb
xchg
jp
shrb
loopne
repz
fucom
aam
xchg
push
dec
jno
leave
shr
js,pt
mov
cld
mov
fidivs
xchg
leave
sub
adc
out
rcrb
jns
mov
imul
js
inc
mov
mov
push
jle
nop
frstor
jne
mov
add
add
pop
sbb
mov
hlt
push
mov
in
adc
js
mov
aas
cmp
pop
push
lahf
add
jl
aam
out
jb
imul
pop
push
add
jb
jae
dec
xor
add
jmp
int
jle
pop
subl
in
fstpl
mov
inc
rcll
lret
sbb
test
out
lcall
adc
dec
test
sbb
lcall
or
nop
popa
aas
loop
sbb
pop
int
int
out
inc
cmpsl
push
lret
popf
sbb
push
inc
test
das
out
out
mov
pop
shll
loopne
rcr
dec
inc
jmp
adc
shlb
fsts
lahf
xor
popf
xchg
cmc
into
inc
orl
dec
insb
inc
mov
imul
sbb
xchg
imul
ret
inc
iret
cmp
int3
mov
dec
jg
sub
rolb
lods
fidivrs
ret
xchg
push
cld
stos
jge
inc
cmp
push
mov
dec
cltd
cmp
lahf
or
and
sahf
stos
pminsw
cmpsl
fsubs
addl
and
xor
fs
cs
xchg
fsts
sub
adc
dec
jp
insl
call
dec
or
gs
jge
orb
dec
stos
mov
lcall
sub
pop
add
inc
shrl
xchg
mov
xchg
and
test
idiv
pop
lock
stos
ds
loopne
mov
or
adc
call
test
shrl
mov
xor
or
hlt
or
or
jge
mov
movsb
sub
mov
fwait
lods
pop
mov
arpl
xor
movsb
pop
jne
jge
add
mov
js
cs
fwait
or
or
data16
lods
cld
cmp
pop
jae
mov
in
sbb
test
rcl
dec
aad
aam
aaa
in
or
xchg
dec
fistpl
mov
push
mov
mov
ljmp
lods
mov
mov
data16
insl
jge
push
push
jg
adc
add
stos
arpl
call
les
adc
sbb
adc
xor
inc
jmp
sbbl
cmp
daa
test
xchg
out
iret
mull
dec
fdivrs
fdivrs
fisttpl
ret
dec
loop
mov
ljmp
out
xor
loopne
out
cmpps
push
xor
loope
inc
jge
sbb
dec
jle
bound
ret
cli
insl
dec
or
fchs
or
test
rcrl
push
fisubrl
jge
fs
int3
out
pop
cs
int
mov
push
ret
pop
jae
xchg
pop
clc
add
call
popa
out
out
jge
push
addr16
pop
pop
imul
jnp
stc
jo
popf
adc
sub
insb
fs
and
add
stos
cmp
pop
cld
call
add
subb
dec
cld
es
pop
and
xchg
add
pop
lea
lods
add
scas
mov
xchg
frstor
pop
inc
push
jbe
push
lret
push
arpl
fldenv
imul
in
push
stos
shl
pop
dec
mov
inc
ljmp
jo
xor
movsb
arpl
jge
and
pop
sub
mov
adc
lret
loopne
jecxz
mov
imul
aad
sbb
fcompl
jp
loop
lods
push
test
dec
cltd
xlat
int3
movsl
out
cmpb
dec
imul
sub
fstp
or
stc
ja
dec
inc
push
call
or
shll
mov
test
xchg
xchg
jno
call
xor
movsl
repz
mov
mov
cmp
aam
and
arpl
dec
jne
test
cmp
mov
das
jbe
lods
jp
jp
mov
push
and
push
fwait
push
pop
sub
lods
jecxz
mov
rcrl
sub
out
pop
mov
les
xor
push
iret
outsb
rclb
cmpl
dec
out
cld
sub
iret
fwait
sub
jo
inc
xchg
dec
inc
int3
xchg
or
jmp
sbb
sbb
adc
cmp
xchg
in
sbb
and
xor
jno
mov
ficompl
mov
out
cmp
es
ja
inc
push
push
rclb
in
lahf
jp
or
int3
repz
rcrl
lret
xchg
jne
adc
add
mov
add
xor
mov
adc
pushf
stos
mov
std
cmpsl
xlat
sub
cld
scas
fnstsw
loop
mov
adc
das
cmp
stc
std
shlb
add
lock
insb
xor
push
pushf
cmpb
pusha
jmp
sar
push
push
cmp
lods
je
out
dec
popf
lcall
sbb
out
push
int
mov
mov
mov
mov
les
rol
stc
les
dec
das
xor
ss
cmpsl
enter
push
push
rorl
inc
inc
cltd
xchg
ror
push
adc
pop
jbe
pop
adc
sub
sub
sbbb
add
loop
push
jns
cmp
aad
lods
add
dec
cmpsl
sbb
test
push
sbb
xchg
adc
jg
lret
ret
cmc
mov
push
nop
testl
test
cs
aaa
push
inc
dec
cmp
jb
ds
lret
rorb
test
gs
xchg
sahf
jmp
sbb
pusha
pop
mov
xor
fildll
dec
mov
fwait
mov
lret
xor
sub
jle
in
loop
xor
jle
das
popa
in
mov
xchg
pop
inc
es
xchg
inc
call
test
dec
xlat
ljmp
maskmovq
pop
and
pusha
loop
jp
mov
or
ss
push
pop
es
push
loope
fisubrl
xor
stc
pop
mov
mov
out
or
push
push
sahf
or
mov
pop
pop
mov
dec
outsb
and
and
cmp
mov
test
xor
sub
inc
fstpl
mov
flds
dec
inc
arpl
fstpl
push
add
scas
sub
filds
out
push
aad
adc
cmc
xlat
lods
lcall
repnz
insb
fsts
push
cs
ss
ja
imull
dec
pop
sub
stos
xchg
sub
lea
add
inc
ret
dec
sbb
testb
ss
dec
cmp
mov
loopne
mov
dec
pop
dec
add
cmp
sub
in
mov
or
gs
jmp
mov
push
jo
mov
sahf
sub
in
mov
add
pop
dec
add
push
dec
mov
sub
mov
into
jge
push
jnp
cltd
inc
sbbb
pusha
mov
push
cs
jg
test
push
inc
xor
push
rep
xchg
add
jp
imul
sub
fs
sbbb
mov
adc
jno
jp
inc
sub
pusha
xchg
test
adc
push
inc
cmc
cmp
pop
jp
and
scas
andb
rorl
pop
es
dec
loope
ficompl
ljmp
das
idiv
jmp
fxch
xchg
test
or
mov
adc
mov
adc
add
clc
fbld
into
and
movsb
mov
xor
test
iret
xchg
xlat
and
pop
xor
jae
cmp
aad
and
pop
pop
cmp
aas
insb
adc
add
testb
stos
or
aaa
movsb
dec
add
lahf
in
cmp
scas
je
mov
mov
fsubrp
xchg
push
xor
pop
mov
jmp
and
out
cmc
xor
sub
ds
cmpsl
mov
push
andl
jmp
mov
stos
js
xchg
inc
lret
adc
xchg
push
xchg
mov
testl
popf
sarl
xor
sbb
popf
call
add
pop
or
adc
sub
mov
and
sbb
scas
movsl
fists
lea
jg
mov
out
outsb
sahf
ja
out
add
lea
push
jae
dec
mov
dec
push
fcomps
out
adc
jnp
jle
mov
stc
push
out
int
cmp
insb
stos
jp
push
sbb
ds
fldl
or
fdivl
cld
neg
cltd
adc
stos
xchg
leave
xchg
xor
push
mov
ret
xor
pop
mov
inc
stc
and
test
scas
stc
xor
aam
push
movsl
movd
dec
xlat
into
xchg
or
fstpl
sbb
aad
sbb
cld
sbb
je,pn
push
dec
xlat
push
addr16
pop
mov
mov
les
imul
cli
mov
xor
add
push
cld
subl
and
call
sbb
and
push
test
jle
in
fldenv
dec
cmp
and
xchg
xchg
insl
iret
cmpsl
add
pop
adc
int3
inc
sub
sub
mov
out
or
or
sti
outsl
popa
mov
fadd
lret
mov
jo
int
dec
xchg
xor
daa
inc
fwait
orb
cld
sbb
push
sbb
xor
add
enter
jne
jo
jl
mov
test
mov
cmpsb
lret
xlat
adc
inc
push
pusha
inc
cmp
ret
jb
adc
test
dec
sub
dec
rclb
sbb
mov
push
adcb
pop
jl
pop
imul
call
sti
pop
fwait
jge
dec
mov
cmpsl
jg
mov
inc
jns
sarb
fcmove
fisubrs
lret
sub
aas
inc
cmpsl
jnp
in
enter
mov
scas
add
flds
xor
add
stos
inc
sub
cld
nop
mov
ds
scas
fidivrs
es
int3
sub
incb
or
ret
insb
mulb
jns
out
add
out
pop
out
cmc
aas
xlat
mov
jl
icebp
and
dec
imul
dec
mov
outsb
repz
lea
popa
mov
push
adc
adcl
push
sbb
outsb
mov
movsl
and
js
mov
add
add
lock
lahf
das
cmp
ficoms
hlt
pop
mov
add
sahf
dec
add
stos
sbb
sub
cltd
orb
dec
insb
push
push
loope
lods
mov
lahf
imul
out
and
stc
stos
cwtl
mov
dec
movsb
push
adc
mov
fucomip
cmpsl
cmp
movsl
cli
jmp
pop
xchg
mov
loop
ret
adc
jno
add
aas
pusha
bound
lcall
inc
and
push
stos
shll
sbb
jecxz
xchg
or
mov
cmp
pop
aad
cmpsl
nop
jmp
inc
xchg
mov
lret
mov
out
jae
je
sbb
mov
movsb
xor
imul
adc
and
std
lret
and
mov
mov
shrl
push
loopne
jns
mov
insl
cli
sbb
daa
cmpsl
inc
xlat
inc
fwait
outsl
rclb
je
inc
jb
jle
sbb
and
lods
lcall
sarl
dec
mulb
bnd
sub
iret
mov
dec
or
inc
mov
fstps
mov
add
adc
mov
sub
lret
stc
cmc
lret
lock
xor
mov
xor
mov
or
xchg
xlat
fcom
enter
clc
jle
cmp
loop
and
and
out
jp
mov
jmp
jbe
std
adc
icebp
jl
push
cwtl
dec
mov
pop
enter
int
jmp
sbb
dec
and
enter
call
push
mov
adc
cs
cmp
incb
test
repz
dec
fcmovbe
lea
add
and
data16
test
push
movsl
inc
adc
and
int3
sub
leave
in
add
in
cmpsb
xchg
cmpsb
daa
dec
lret
imul
mov
or
into
mov
ljmp
pop
popa
mov
in
inc
fbstp
outsl
push
push
lods
clc
cmp
jo
lret
sahf
sub
fwait
lret
in
mov
inc
add
shl
daa
mov
dec
jmp
adc
icebp
shlb
int3
pop
mov
push
jb
lods
test
push
pop
dec
jae
push
lods
sub
insb
dec
nop
in
cli
mov
add
mov
out
lds
mov
dec
add
call
lret
icebp
push
es
nop
cmp
jecxz
fdivrl
mov
cmp
out
dec
subb
outsl
pop
dec
ficomps
sub
sbb
popa
stc
aaa
cmc
or
sbb
sbb
cli
or
sub
in
fisttps
es
loop
push
pop
pop
fcomi
xorb
fadd
cmpsb
add
mov
test
data16
rorb
hlt
insl
stos
push
cli
sub
or
popf
and
push
cwtl
mov
or
stc
dec
xchg
xchg
js
cmp
ljmp
inc
shrb
inc
cmp
mov
orb
xlat
aad
arpl
xchg
out
cmc
pop
cmp
jmp
adcb
xor
mov
xchg
lcall
dec
hlt
and
dec
lcall
scas
push
lcall
dec
fs
test
and
loopne
pop
jmp
xor
dec
fsubr
mov
inc
lea
add
lret
inc
pop
pop
add
mov
jbe
jo
ds
mov
out
push
fcompl
cwtl
sbb
and
stos
in
mov
fadds
imul
cli
aad
fstp
rorl
pop
push
popf
xchg
or
aaa
push
outsl
add
pop
mov
mov
mov
dec
pop
and
lock
les
pop
xchg
fimuls
xchg
cmc
sbb
or
or
dec
into
aad
cld
add
lcall
pushf
es
mov
push
cmpb
mov
lods
xor
addb
jns
in
iret
pop
cmp
ds
in
lcall
push
cs
lods
call
ret
faddl
fistps
mov
push
push
ja
ss
pop
in
bound
cmp
inc
mov
inc
das
mov
stos
insb
fsubs
repz
lock
mov
push
mov
cmpxchg
scas
repnz
mull
outsl
jl
xlat
ljmp
xchg
das
test
dec
lds
outsl
in
cmpsb
scas
jge
mov
cld
ret
roll
or
dec
adc
nop
jecxz
inc
inc
jns
pop
xor
inc
int
movsl
in
inc
cmp
cmpl
fcoms
dec
shlb
das
jno
jmp
outsl
jo
ds
cmpsl
mov
incb
xor
jle
in
push
jl
cs
sbb
int
dec
xor
mov
jle
adc
mov
mov
mov
add
add
test
nop
push
xchg
jb
or
adc
testb
cltd
cmpsl
stc
insl
int3
mulb
fidivs
xchg
aaa
mov
mov
push
adc
rclb
push
arpl
sub
adc
or
jns
xchg
fisubrs
scas
adc
fwait
adc
and
xchg
xor
cmpb
push
inc
jo
push
sbb
mov
or
daa
fs
jecxz
and
div
push
push
adc
shll
add
test
fs
push
movsl
ja
cli
sbb
push
push
lret
inc
movsb
mov
iret
mov
xor
xor
es
sarl
loope
test
push
pop
xlat
lds
mov
dec
les
adc
push
fidivrl
xor
mov
rolb
lds
imulb
cmpsb
xchg
js
mov
mov
dec
in
sbb
jbe
xor
dec
cmp
enter
repnz
testb
sub
jg
xchg
enter
std
mov
push
jbe
lret
jne
ljmp
lcall
sub
in
mul
or
dec
pop
mov
mov
xchg
sti
mov
push
scas
push
jp
adc
mov
inc
or
lcall
cwtl
xchg
mov
fstps
movsl
xlat
xchg
jg
mov
loop
mov
cmp
mov
cmpb
repz
inc
das
mov
cmp
and
mov
out
es
repnz
sub
cmpsb
stos
frstor
mov
dec
bound
addr16
out
ret
adc
or
mov
in
inc
out
mov
pop
out
and
add
arpl
inc
in
jbe
lods
lret
in
stos
or
mov
inc
and
lods
in
test
fidivrl
mov
fcoml
cmpsl
in
inc
int
pop
out
adc
flds
lods
cmp
sbb
jl
aaa
imulb
mov
sub
mov
lret
sbb
cld
int3
xor
fstpt
sti
xchg
mov
lods
xor
cld
test
popf
sbb
mov
icebp
and
sbb
xchg
scas
es
imul
movsb
pop
mov
arpl
mov
insb
sub
mov
inc
je
es
addr16
xchg
jp
dec
fidivl
sub
in
loope
sarb
jae
addr16
sti
fisubl
adc
sbb
adc
pop
or
lahf
dec
push
mov
sbb
jbe
inc
data16
out
adc
scas
mov
mov
cs
jbe
push
mov
or
or
mov
adcl
stc
mov
ja
mov
sub
inc
xchg
jbe
add
lret
xor
sahf
xor
push
ja
mov
mov
loope,pn
sub
and
mov
subb
push
or
dec
mov
lea
mov
jg
faddl
dec
add
xchg
cmp
sbb
push
stc
jle
hlt
enter
out
inc
and
lea
xchg
cwtl
xor
inc
in
lods
sub
mov
call
cmp
fwait
mov
cs
fstl
lcall
inc
push
mov
push
xor
jno
dec
outsb
pop
inc
mov
hlt
lahf
addr16
lds
mov
cmp
clc
cmp
in
fwait
rolb
mov
stos
sub
push
xchg
cmp
and
or
pop
cmp
in
mov
or
inc
rorb
cli
movsb
jge
push
int
xchg
sub
pop
push
cmp
push
std
mov
js
insl
xor
popa
mov
outsb
pop
pop
push
cmp
sub
fistpll
push
cli
test
cmp
cmpsb
dec
test
das
xor
stc
arpl
cmpsb
mov
ret
mov
lcall
scas
test
jg
cmp
out
imul
rol
xchg
aam
fadd
push
mov
push
jne
movsb
pop
out
dec
fdivl
xchg
push
lods
int3
in
mov
fmulp
or
mov
xchg
or
stos
mov
ret
pop
test
ja
fwait
ret
jnp
pop
fchs
cltd
jecxz
flds
pop
mov
ret
arpl
xchg
mov
sbb
cwtl
mulps
or
fdivrs
xor
push
ljmp
ds
cmp
in
jle
je
repnz
cmp
sub
xor
cmp
test
and
mov
leave
xor
adc
je
inc
jecxz
push
pop
dec
test
inc
pop
mov
cmpl
mov
inc
jp
jnp
mov
fcoms
and
repnz
push
js
cmpsb
mov
scas
pop
mov
mov
popf
pop
pop
loop
outsb
repz
imul
sbb
cmc
jecxz
jp
push
pushf
je
loop
mov
push
rorl
int
stc
ret
bswap
pop
adc
xor
hlt
nop
and
leave
add
sbb
ret
xchg
cli
xor
rclb
fwait
loop
add
decb
push
xchg
jge
sbb
add
in
jo
mul
sbb
cmp
aam
jmp
orb
mov
jp
cwtl
aas
and
cmp
fildll
inc
mov
xchg
push
mov
movsl
es
push
repz
inc
js
lcall
push
lods
jg
xchg
in
xor
leave
scas
xlat
call
jl
inc
push
cmp
mov
shrb
cwtl
lahf
and
jae
mov
mov
js
scas
fmuls
mov
rcr
stos
and
mov
or
pop
mov
aad
pusha
movsb
jb
xchg
test
iret
lar
cmc
or
mov
add
push
dec
xchg
mov
mov
mov
push
dec
or
mov
xadd
int3
stos
idiv
xchg
in
test
inc
dec
gs
sarl
cmp
lcall
mov
adc
lcall
shrb
mov
mov
stos
cmp
and
fcoms
adc
aas
or
mov
jns
out
ljmp
adc
jle
add
push
and
or
xor
adc
ss
into
mov
aad
push
cmp
fisubl
jmp
mov
fcmovnu
aaa
inc
mov
decl
shll
int3
cltd
addr16
fidivs
adc
pop
xor
or
add
adc
push
loopne
daa
cmp
xor
fiaddl
leave
mov
xchg
imul
sub
pop
inc
ret
mov
ja
dec
inc
xchg
jo
pop
push
lret
mov
lret
adc
inc
repnz
mov
inc
leave
pop
movsl
push
inc
movl
addb
out
dec
mov
inc
repnz
adc
cmp
xchg
lcall
xlat
or
sbb
int
xlat
xor
sub
fidivrl
scas
fistps
push
dec
loope
mov
sbb
mov
ljmp
frstor
push
int3
fwait
dec
mov
jl
xchg
hlt
pop
xor
xor
call
lret
test
add
jl
or
iret
data16
mov
pop
cmc
daa
pop
push
jle
ja
fmull
lods
aad
idivb
lods
pop
and
lock
or
or
js
push
push
arpl
jl
inc
push
loope
push
push
mov
xchg
adc
mov
pushf
lea
imulb
sub
dec
dec
xchg
jbe
push
jmp
mov
mov
test
in
int
jl
test
jecxz
sbb
and
arpl
aam
repnz
cld
bound
frstor
inc
imul
xchg
repz
cmc
mov
push
cwtl
push
mov
mov
mov
jbe
push
xchg
adc
movsb
sub
ljmp
mov
cmp
outsl
mov
mov
and
daa
jl
cmp
test
or
cmp
lds
xor
ds
repnz
or
xchg
cmp
pusha
inc
gs
enter
cmp
pop
in
cmp
iret
or
jno
jae
sti
jnp
lret
bound
lret
or
in
addr16
fstl
loopne
push
popa
jmp
nop
and
or
and
sbb
and
stos
and
andl
adc
or
or
test
imul
mov
add
stos
push
xchg
loop
add
xchg
fucomip
ljmp
loopne
nop
arpl
lret
or
and
sbb
sarb
ljmp
mov
aas
addr16
push
fnstsw
jp
and
lods
jno
cltd
xchg
ljmp
xorb
pop
mov
ficoml
cltd
inc
inc
xchg
sbb
sbb
mov
dec
add
xchg
pop
push
adc
inc
jge
sub
sbb
adc
xor
or
and
sbb
push
push
adc
adc
jns
and
or
scas
mov
pop
xlat
jmp
or
jle
xor
sahf
mov
jmp
mov
aas
jecxz
imul
pop
hlt
adc
daa
adc
scas
jns
push
dec
pusha
fscale
adc
mov
test
pop
mov
add
add
sub
cmc
lods
jmp
adc
cmp
jne
xor
dec
pop
xchg
and
cld
xchg
jae
mov
pop
add
inc
jne
jo
lock
add
mov
inc
hlt
fsub
mov
push
jae
mov
jbe
cmp
test
mov
adc
pop
shrl
sbb
popf
ss
movlhps
mov
add
jmp
js
stos
pop
int
ficoms
mov
adc
pop
push
lock
je
mov
mov
pop
adc
lea
add
inc
mov
xchg
icebp
stos
xchg
pop
sbb
pop
out
mov
mov
adc
insb
insl
add
ror
imul
lods
jmp
fidivrl
jbe
dec
out
ret
xchg
xchg
mov
int3
scas
sub
test
jo
pop
sbb
pop
jge
adc
dec
push
sbb
jmp
xor
call
xchg
mov
mov
sbb
jle
inc
sub
mov
filds
cli
pop
push
xchg
std
or
int
outsl
inc
and
push
roll
push
xor
test
sbb
mov
adc
outsl
mov
pop
and
jecxz
cmc
xchg
rcrb
loopne
sbb
js
cmp
repz
stos
mov
mov
adc
pop
and
mov
lcall
dec
jne
mov
push
out
push
iret
lret
cwtl
adc
sbb
int
ss
adc
adc
outsl
sti
mov
xlat
lahf
mov
clc
jno
cmpsb
cmp
repnz
imul
cld
or
repz
mov
and
dec
inc
xlat
adc
and
lcall
in
mov
sub
xor
ficomps
hlt
stc
or
ja
xchg
ss
pop
inc
mov
pop
imul
jne
inc
mov
mov
ds
les
insb
lahf
cs
adc
faddp
mov
xchg
fwait
shlb
lahf
jl
call
mov
pusha
stc
or
push
fcmove
in
cli
dec
jmp
loopne
sti
cmp
les
and
out
mov
ss
xor
jb
mov
ret
rolb
sub
pop
cmpsb
shrl
lret
or
push
or
jmp
sub
mov
int3
xchg
enter
aad
and
inc
xor
sar
add
mov
push
out
faddl
jmp
or
xor
std
popa
xor
lss
mov
pop
aaa
and
pop
fdivr
jbe
data16
addr16
pop
mov
ficoms
xchg
xor
gs
std
sbb
sbb
stc
mov
xchg
xor
adc
rolb
cmc
inc
enter
inc
pop
push
or
dec
cli
mov
lret
movsl
into
pop
gs
insl
loop
into
testb
aas
add
add
jge
mov
and
insl
js
dec
jbe
and
xchg
push
ss
lds
test
mov
into
xchg
in
sbb
test
fucom
push
lahf
loop
shll
jns
in
sub
or
push
cmc
xor
pop
call
xchg
out
jno
push
pop
add
xchg
cmp
int3
rcrl
and
loope
mov
movsb
imul
mov
out
mov
outsl
xor
fcmovnbe
inc
sbb
in
push
cmc
in
loopne
mov
jmp
jecxz
shlb
fwait
mov
xchg
push
sbb
out
test
push
aad
ss
xchg
add
jg
mov
sbb
pop
pop
dec
xchg
in
jne
call
mov
mov
mov
clc
xor
xor
gs
mov
add
or
rol
sarb
pusha
xchg
jb
dec
in
imul
jo
or
xchg
cld
push
nop
cmp
mov
mov
push
in
push
sub
jb
orb
mov
fwait
xor
out
or
and
add
mov
jl
js
repz
push
cmpsb
adc
cld
lods
sub
jnp
scas
xchg
mov
pop
fdivp
xchg
ljmp
les
mov
test
insb
pop
push
imul
mov
or
xchg
out
insl
xchg
and
orb
jecxz
mov
cwtl
mov
cmpsl
call
fs
jb
jp
jge
xor
mov
stos
jp
sub
test
mov
cli
jg
clc
insl
ret
lods
les
add
add
cld
adc
push
or
lret
call
rolb
xchg
cwtl
pop
stc
xchg
lret
fistps
push
je
gs
rcrl
lods
cltd
mov
gs
adc
mov
in
xorl
imul
xlat
or
out
sbb
mov
dec
dec
pop
insl
fisubrs
pusha
shll
addr16
into
cmc
mov
push
insl
sbb
dec
data16
jb
or
or
mov
adc
push
push
data16
lods
or
add
test
lock
mov
mov
movsb
call
lgs
call
adc
mov
aad
jno
ja
cmp
out
mov
jbe,pt
cmp
imul
inc
xlat
imull
push
mov
aam
inc
push
or
push
xchg
mov
mov
pop
sub
push
iret
cmp
pop
add
or
sub
fsubrs
cmpsb
sbb
cmpsb
mov
das
xor
mov
sub
inc
outsl
xchg
iret
inc
stos
push
push
xor
iret
lret
push
out
and
xor
sbb
xchg
xchg
add
mov
mov
jnp
push
sbb
cmp
ds
je
pop
mov
add
xchg
movsl
pop
cmp
std
inc
lahf
sub
jbe
fisttps
sahf
cmp
xor
cmp
mov
addb
shll
mov
lock
and
sbb
lahf
xchg
push
xor
or
adc
xor
inc
mov
pop
in
or
xchg
mov
sbb
cmp
jge
dec
movsb
int3
jecxz
clc
cltd
cmp
adc
jp
lahf
ljmp
outsb
and
imul
cmp
popf
pop
add
ret
mov
push
enter
ljmp
or
mov
daa
mov
xchg
lods
shrl
and
lock
into
mov
mov
adc
cmp
adc
inc
fists
out
adc
data16
scas
sub
xchg
data16
jge
iret
inc
ret
ret
adc
fbld
inc
mov
jno
pop
pop
enter
aad
pop
add
adc
xchg
jmp
push
sub
add
icebp
nop
xor
outsb
stos
mov
ljmp
test
inc
mov
or
mov
push
shrl
push
pop
lock
packsswb
sub
mov
inc
hlt
pop
jbe
inc
push
mov
stos
inc
push
push
insb
sbb
int
mov
mov
data16
push
push
imul
jb
sub
in
into
lds
inc
adc
cmp
testb
dec
xchg
sbbl
into
push
xlat
iret
and
clc
addr16
jnp
cmp
adc
cld
adc
inc
shl
xor
hlt
fistl
lahf
not
xor
sub
xchg
mov
cwtl
push
shll
aaa
aas
bound
jmp
and
mov
and
push
xchg
sbb
push
cmpsl
and
pop
pop
adc
mov
mov
cmp
fnsave
add
ret
nop
jns
mov
adc
cmpb
scas
pushf
jmp
jl
pop
repnz
mov
xchg
cli
mov
cmp
or
mov
and
mov
adc
pop
pop
stc
lods
add
inc
or
lds
push
dec
sbb
fnstsw
adc
enter
mov
jge
lcall
das
bnd
leave
dec
mov
push
cmc
mov
lcall
rorb
xor
mov
or
add
out
mov
pop
out
push
jno
and
inc
ret
movsb
sbb
idivb
inc
lods
pop
les
sbb
fsubrl
sub
dec
push
push
insb
adc
test
push
jno
pop
inc
test
jnp
stos
bound
mov
imul
mov
movsb
push
lods
inc
sub
dec
sbb
rcrl
mov
push
and
ljmp
in
aaa
sbb
ss
imul
into
cwtl
and
cmp
pop
shlb
push
rclb
pop
sub
dec
push
popf
rclb
mov
pop
cmpsb
hlt
and
leave
es
lods
pushf
and
xchg
xchg
and
mov
dec
bound
into
shrb
shr
add
mov
add
push
inc
hlt
or
cmp
inc
fldt
adc
frstor
scas
jmp
mov
sbb
aam
bsf
dec
inc
or
cmpsb
andb
and
push
les
data16
sub
mov
mov
mov
cli
pop
inc
ror
push
mov
push
rcrl
jo
fistpll
dec
ds
dec
fcmovbe
outsb
lret
int3
xor
pop
jb
mov
stc
push
lock
mov
sbb
pop
stc
and
cmp
mov
das
int
aaa
pop
pop
or
andb
rolb
jl
cld
std
xchg
dec
adc
shrl
pop
push
aaa
xchg
test
mov
sub
pop
jmp
xchg
popf
xchg
out
jne
adc
test
rcll
cld
clc
lret
cmpsb
push
pushf
imul
xchg
lea
pop
fmuls
jecxz
add
sbb
mov
lahf
inc
push
cmp
sbb
mov
sti
movsb
jl
sti
xor
jne
les
adc
or
push
adc
jl
jns
pop
mov
and
fldenv
pop
pop
scas
sbb
dec
lds
push
sub
testl
lret
push
std
cld
xor
xchg
scas
fstpt
xchg
mov
jecxz
xor
lods
and
mov
addr16
pop
jno
jl
mov
and
test
mov
movsb
jo
into
in
fwait
shrl
jns
xchg
insl
and
imull
rclb
mov
dec
sub
dec
aad
jmp
cld
jg
jae
mov
stos
push
insl
imull
addr16
stos
xchg
enter
sbb
xor
mov
mov
push
jle
insl
sbb
enter
cmp
jno
out
ret
xchg
sbb
sbb
dec
mov
inc
fidivs
test
push
adc
mov
stos
pop
iret
mov
pusha
xchg
inc
sub
lret
xor
popf
sbb
sbb
ss
xor
imul
jne
aas
outsl
shrl
dec
nopl
xchg
fwait
aas
adc
stc
push
dec
data16
lea
sahf
enter
dec
inc
shrl
push
mov
cli
and
arpl
stos
ss
jnp
sub
ret
imul
pushf
adcb
xor
aaa
adc
mov
lods
loopne
mov
sarb
insb
fsubrp
add
mov
sbb
jno
lds
xchg
pop
sahf
or
outsb
or
cmpsb
mov
xchg
add
gs
cmp
sub
insb
adcb
push
out
out
call
xlat
mov
mov
das
stc
insb
push
gs
stos
xchg
je
das
fwait
mov
scas
aaa
scas
mov
push
cmpsl
push
jmp
and
insb
xchg
iret
lahf
dec
jae,pt
fneni(8087
ljmp
lock
mov
mov
test
aam
into
lock
sahf
ret
inc
sbb
inc
arpl
repz
dec
aad
xchg
xchg
fisubrs
mov
mov
ljmp
outsl
fnstsw
dec
sbb
xor
push
decl
addr16
mov
ret
outsl
push
and
jp
dec
mov
add
mov
daa
or
xor
aam
lds
pop
push
sub
pop
sbb
and
scas
lret
mov
push
mov
loopne
mov
leave
imul
test
movsb
inc
and
test
test
cli
xchg
imulb
movsb
lods
sub
inc
pop
in
or
in
aas
icebp
mov
in
outsl
js
lds
scas
push
cmc
push
cli
add
mov
lret
lods
bswap
dec
aas
xlat
pop
inc
xorb
in
fimuls
mov
bound
ret
fwait
icebp
lahf
jle
push
inc
add
test
pop
push
popf
fcom
jno
mov
add
mov
out
cmp
clc
mov
inc
push
int3
xor
and
sbb
dec
in
lcall
pop
inc
movsb
push
mov
leave
mov
loop
sbb
std
shl
lods
add
pusha
jg
mov
xchg
or
xor
sbb
jmp
loop
fs
xchg
lret
mov
cmp
jp
cmp
dec
xchg
xchg
mov
pop
mov
xchg
loopne
lret
arpl
lret
outsb
fcomi
icebp
loope
in
dec
aaa
add
adc
ret
outsl
aad
outsb
divl
add
cmpsb
in
aad
lods
jnp
inc
push
es
jnp
rclb
and
call
lahf
fstl
test
push
dec
fstpt
cltd
test
push
movsl
jl
cmp
cmp
notb
inc
pop
sbb
xor
or
pop
cld
pop
lods
movsl
scas
fwait
jb
mov
clc
add
rcl
mov
arpl
push
hlt
int
test
mov
xchg
and
ljmp
and
cmpsl
push
in
scas
xlat
push
rorl
mov
outsb
inc
mov
xchg
fistps
dec
rcrl
call
pop
jno
das
call
lcall
ljmp
mov
mov
mov
jmp
fwait
xchg
mov
mov
mov
jne
clc
sub
push
fs
jmp
testb
adc
int3
out
xor
stc
in
fbld
fst
scas
inc
test
fsub
and
aas
iret
pop
add
addr16
push
inc
jmp
mov
fwait
add
push
xorps
dec
aaa
or
ss
inc
pop
in
pop
xchg
cmp
mov
pop
jbe
xchg
jb
lds
push
out
leave
fs
sbb
popf
push
stos
adc
out
out
xor
or
push
call
inc
add
pop
cmpsl
and
mov
xchg
pushf
sbb
mov
clc
lret
inc
xchg
sbb
mov
fldcw
pop
imul
mov
pop
add
int3
fnsave
inc
gs
cmpps
dec
sahf
rorl
adcl
in
test
mov
mov
movsl
cs
dec
mov
push
pop
loopne
xchg
cmp
loop
xor
pop
scas
cs
insb
jp
icebp
pop
pop
cs
adc
jp
push
push
ss
cmc
stos
call
mov
lock
cmp
cmpsl
add
in
ljmp
mov
leave
imul
mov
adc
call
inc
dec
arpl
dec
imul
scas
in
cmpsl
adc
mov
adc
jg
loopne
xor
dec
scas
xor
mov
scas
arpl
int3
bound
sbb
movsl
or
mov
fcmovb
xor
fcmove
sahf
and
fiadds
lret
ss
shlb
jb
pop
jmp
faddp
cmp
mov
lea
imul
xor
outsl
bound
adc
aaa
in
push
test
shlb
outsb
hlt
arpl
outsb
and
xchg
lahf
std
fdivr
andl
movsl
das
jge
fwait
sbb
sub
cs
cltd
cltd
pop
pop
popl
cmp
cmc
mov
or
xor
fwait
jl
mov
movsl
test
andb
and
inc
jbe
scas
mov
pop
call
or
iret
gs
xchg
andl
mov
push
mov
or
or
mov
and
push
cmp
mov
push
in
int
int
loope
das
adc
test
cmpsl
cli
sbb
xchg
mov
cmp
pop
or
cmp
aas
loope
pop
jmp
jno
bound
xchg
fsub
sahf
mov
mov
movsl
dec
mov
pop
inc
sbb
fsubrl
jle
sub
jno
mov
shlw
or
add
add
jae
popf
mov
push
push
ja
mov
mov
das
xchg
mov
sub
dec
xor
xor
insb
sub
or
pushf
aam
adc
jno
in
call
jmp
ds
pushf
cmp
hlt
dec
out
ss
xchg
push
js
push
hlt
aad
xorl
adc
sub
ret
sbb
pop
leave
xor
arpl
cmp
xchg
inc
cli
mov
mov
sbb
dec
add
dec
out
in
addr16
idivl
insb
lods
ret
or
pusha
sbb
jmp
mov
insb
in
mov
cmp
fnstenv
call
dec
ss
cwtl
sbb
lahf
sub
sub
rcrl
pushf
sub
fsubrl
insl
insl
int3
sbb
scas
arpl
jp
shlb
mov
mulb
sbb
inc
mov
sbb
pop
test
shll
jns
adcl
addb
mov
idivb
scas
dec
test
xchg
mov
pop
or
scas
push
sbb
push
nop
arpl
fistps
sti
jmp
and
frstor
jnp
sahf
dec
ja
in
push
js
sub
ret
pop
int3
mov
iret
mov
pop
jecxz
pop
fcmovne
or
and
jge
sub
icebp
test
outsb
notb
movl
mov
ljmp
xchg
stos
dec
push
push
mov
mov
cltd
loopne
test
or
cwtl
int
dec
scas
pushf
rcrl
rcrb
xchg
test
fs
push
orl
mov
push
pop
test
jp
mov
push
inc
pop
je
lcall
mov
push
mov
mov
cmp
xchg
xor
cmpsl
mov
jb
notrack
clc
add
shrl
lods
fdiv
push
adc
jg
jo
sti
loop
jg
fisttpll
int
inc
add
out
xchg
and
sarl
fwait
icebp
jo
or
std
dec
mov
sbb
push
mov
adc
lret
repnz
shr
sbb
xchg
cmpl
or
add
push
mov
xchg
and
add
mov
sbb
jmp
jne
or
or
call
aaa
jecxz
xor
xchg
push
rorb
cmpsb
jo
int
rcll
aaa
xorl
gs
insl
jns
loopne
mov
nop
lods
cltd
outsl
cmp
cmpsl
dec
es
out
xor
leave
jb
sbb
fsubs
jl
mov
mov
fwait
mov
aas
test
stos
push
in
pop
push
cmpsb
mov
jne
movsb
scas
add
pop
adc
lret
and
scas
xor
mov
ja
call
xor
xchg
and
pop
daa
mov
and
inc
xchg
mov
mov
jecxz
and
dec
or
out
mov
mov
mull
and
and
sub
lds
fcomi
jmp
jb
sti
adc
int
in
ja
jmp
in
decb
call
sub
psrlq
sbb
mov
mov
std
test
mov
jmp
mov
cmp
sti
test
mov
loopne
lods
push
ret
cwtl
ds
push
cwtl
loopne
xchg
pushf
pop
ret
jnp
cs
push
push
jns
mov
fs
adc
fs
cmp
lea
movsl
sbb
push
adc
outsb
stos
fcmovnb
dec
into
mov
stc
out
push
or
lcall
add
or
jle
in
test
pop
fs
les
dec
ljmpw
fsub
cmp
stos
arpl
pushf
jecxz
mov
andl
and
fcompl
push
xchg
inc
mov
aad
mov
cmc
jecxz
sbb
addr16
stos
mov
pop
sub
outsl
and
xchg
pop
mov
xchg
xchg
mov
hlt
mov
mov
inc
mov
jo
bound
nop
mov
and
dec
rcrb
xchg
into
push
mov
mov
shl
dec
pusha
push
test
sub
cmp
push
test
fnsave
push
pop
or
outsl
mov
daa
adcb
adc
cmpsl
dec
jns
lods
outsl
in
mov
or
jge
lcall
movsb
sub
popa
testb
shlb
daa
in
add
cld
pop
xchg
out
adc
or
ljmp
popa
popf
out
shll
mov
jbe
test
inc
cs
adc
int
push
roll
mov
sbb
repz
push
imul
icebp
dec
cmpsl
pop
mov
add
xchg
fcmovnb
mov
lret
mov
sbb
mov
pop
mov
jmp
iret
dec
ja
imul
or
jb
xchg
and
jge
sbb
inc
push
stos
mov
adc
and
dec
cmp
push
pop
jno
dec
jnp
and
cmp
nop
adc
jle
pop
cwtl
dec
loop
dec
jmp
outsl
test
aad
shlb
push
out
mov
or
sub
and
mov
icebp
jecxz
pop
pop
test
dec
add
adc
clc
nop
shlb
xor
jae
mov
mov
jae
inc
mov
imul
ljmp
addr16
dec
in
scas
pop
sub
je
mov
dec
dec
insb
pop
mov
popf
mov
and
jae,pn
clc
aas
pop
scas
sbb
inc
or
mov
imul
pop
out
fcoms
or
and
testl
repnz
sbb
nop
fidivrl
cmp
test
stos
pop
js
arpl
xchg
iret
mov
mov
int
xor
xchg
test
out
xor
mov
and
sti
pop
cmpsl
and
mov
mov
mov
nop
stc
aad
push
popf
sbb
jae
fnsave
dec
icebp
stos
bound
das
jbe
loope
xlat
mov
cltd
stos
push
xor
sbb
dec
dec
rorb
mov
jle
xor
fnstcw
pop
cmpl
xor
cltd
pop
xchg
push
stos
testl
jmp
add
addr16
adc
push
sbb
int
sbb
icebp
dec
loop
arpl
pop
xchg
arpl
jnp
or
sbb
fbstp
bound
inc
jle
or
or
andb
out
xchg
ret
cmp
sbb
cs
lods
and
js
sarl
fwait
cmp
push
or
add
mov
xor
jb
int
fmull
pop
mov
adc
jl
jae
mov
add
in
stc
lret
mov
push
xor
insl
push
scas
sbb
xchg
fcoms
sbb
sbb
cld
ret
cmp
jno
repz
sbb
idiv
push
aad
jle
test
inc
mov
testl
pusha
add
pusha
pop
sub
jb
sti
sub
xchg
in
jmp
loopne
pusha
and
sub
rcrb
movsb
and
outsl
xlat
cmp
fs
push
test
pop
or
sub
es
inc
sbb
push
icebp
dec
pop
cli
mov
pop
cs
sub
and
arpl
sub
sub
dec
fsubs
mov
les
xchg
loopne
jmp
sbb
imul
mov
xor
inc
and
outsl
jne
dec
add
cmpl
xor
inc
or
ds
leave
ds
jmp
cmc
fcoml
mov
and
in
jg
or
gs
rol
cmpsb
test
int
aad
rol
mov
push
xchg
or
call
sbb
cmp
xchg
cmp
mov
add
lock
out
lds
sbb
test
test
mov
xchg
xchg
orl
ret
addr16
mov
mov
loopne
sbb
mov
jo
push
mov
mov
stos
loope
pop
pop
ret
xor
sbb
xor
mov
mov
xor
push
xor
sub
pusha
aas
push
lds
xchg
sbb
repz
aaa
sub
push
mov
cmp
xor
je
test
sub
in
or
leave
mov
lods
mov
aas
sbb
and
out
cmp
inc
pushf
sahf
movsl
outsl
sub
lods
je
push
inc
push
adc
sti
add
push
scas
sub
lds
in
dec
xchg
push
das
test
cmp
int3
or
js
shl
cmpsl
add
xchg
outsb
in
mov
mov
mov
pop
mov
bound
dec
std
or
ljmp
inc
pop
and
mov
pop
mov
and
fcomps
ficoms
in
lods
jmp
mov
mov
mov
or
lock
mov
aaa
js
jp
jl
xor
cmpsl
lahf
frstor
mov
xchg
hlt
in
dec
into
pop
es
mov
add
mov
das
outsb
outsb
mov
push
pop
lcall
pop
icebp
cmpsb
rcll
arpl
pushl
lock
jbe
dec
je
daa
stc
scas
dec
xchg
outsl
cmc
push
pop
xchg
jmp
lret
enter
dec
shlb
repz
inc
idivb
fiadds
mov
xchg
sbb
into
mov
cmp
mov
ja
ret
dec
movsl
and
pop
repz
cmp
jae
ljmp
dec
in
push
push
int
mov
mov
dec
in
int
stos
sbb
fwait
mov
out
dec
jecxz
sarb
in
cltd
dec
in
int
nop
sub
shlb
mov
pop
lret
add
mov
mov
adc
fwait
and
push
cmp
inc
adc
ja
arpl
xor
les
subl
lods
pop
sub
mov
popf
test
out
cltd
push
inc
sub
mov
iret
stos
mov
scas
xchg
and
hlt
pushf
sahf
adc
cvtps2pi
xor
in
dec
fsts
jp
xor
inc
out
cli
loope
push
es
pop
nop
xchg
lret
mov
pop
fildl
xchg
mov
repz
nop
sbb
push
jns
sbb
repz
or
jnp
cmp
mov
add
jmp
push
fsubs
add
repz
cmp
inc
sbb
and
adc
inc
adc
stc
mov
data16
lds
dec
mov
adc
mov
daa
mov
leave
es
or
notl
js
test
push
pusha
cmpsb
dec
cmpxchg
pushf
pop
cmp
xlat
stc
adc
hlt
movsb
fildl
dec
mov
aas
cmp
imulb
test
stos
call
dec
jle
icebp
push
push
sti
cmpb
fwait
add
sahf
jmp
xor
add
popf
loope
imul
ficoms
mov
pop
xchg
lret
xchg
mov
aad
cmp
lret
imul
dec
jge
out
test
xchg
cmp
out
jnp
aaa
jl
mov
lahf
out
jns
add
scas
inc
push
dec
cld
xchg
int3
xchg
ficompl
aad
enter
sbb
push
mov
outsl
aaa
jecxz
ja
mov
push
rcl
mov
ret
in
cltd
sub
jns
pushf
cmpl
sbb
out
and
push
sbb
aam
jae
shl
pop
sti
mov
mov
in
aas
xlat
lcall
adc
inc
or
pop
mov
inc
mov
rcrl
aam
xor
cmpsl
xor
jmp
sbb
push
cmp
jle
add
jns
and
insb
shl
frstor
pop
test
dec
scas
lahf
aam
shlb
test
popw
add
roll
pushf
push
pop
dec
pop
cmpsb
shl
lods
mov
or
jns
ljmp
lock
adc
jnp
and
sar
loope
mov
lods
pop
and
cmpsl
mov
stc
fdiv
mov
call
ss
sahf
xor
scas
xchg
inc
cld
imul
ljmp
fs
cmp
ret
pop
mov
int3
mov
lcall
cltd
stc
ret
int3
jle
lods
xlat
jmp
nop
aam
push
rclb
icebp
push
pusha
les
sub
fistpl
lret
jecxz
pop
mov
lea
sbbl
push
test
or
cmp
stos
jecxz
aam
cmpsb
fdivl
cwtl
jnp
stos
cltd
sbb
sti
imul
popa
ss
inc
jnp
sbb
xchg
xor
dec
test
mov
and
adc
pusha
adc
cmp
inc
dec
ds
sub
shll
sbb
test
stc
xor
jecxz
les
push
pop
push
mov
pop
je
in
sub
fmuls
or
xorl
movb
inc
sbb
sbb
mov
adc
add
clc
and
pop
pusha
icebp
cmp
rcll
and
fs
test
jge
into
dec
in
pop
shll
xchg
fucomip
clc
mov
insb
xchg
lods
or
outsb
adc
loope
jnp
lea
int3
mov
or
xor
pop
addr16
jo
scas
test
aam
cmp
jmp
jb
xchg
mov
xor
cmpsl
lock
je
xchg
pop
xchg
imul
hlt
mov
lret
push
or
jp
aaa
movsb
pop
cmp
enter
mov
test
ret
sub
adc
rcr
int
adc
adc
mov
inc
mov
sbb
cmpsb
sbb
mov
arpl
pop
mov
or
pop
ret
daa
pop
xchg
or
xor
xor
andb
push
scas
add
adc
pop
bound
pop
scas
push
xchg
les
push
scas
lock
mov
mov
les
call
or
push
cmp
inc
outsb
jo
outsb
repnz
rcll
mov
mov
sub
dec
dec
xor
jo
cmp
pop
lods
aas
sbb
sub
xchg
inc
push
sub
sti
push
cmp
mov
popf
dec
pop
push
fidivl
sbb
rcrb
xchg
xor
jns
pushl
sub
mov
push
mov
lret
push
cltd
and
iret
sub
movsl
add
mov
jnp
sbb
loop
iret
popf
sbb
jns
std
push
cmpb
sahf
in
cmc
xchg
aad
stc
in
sbb
and
or
cmp
or
inc
scas
std
add
xor
jecxz
inc
fwait
popf
xchg
pop
shrb
pop
mov
cmpb
ljmp
leave
test
fdivr
and
and
jae
jp
lods
leave
sub
call
test
pop
sarb
ret
xchg
cmpsl
loopne
sub
add
out
out
fstpl
shl
xchg
dec
adc
into
std
inc
addr16
pop
adc
or
pusha
xchg
popf
shll
sahf
cmp
cmp
dec
idivl
std
das
stos
and
clc
jno
lahf
mov
cmpsb
lret
loop
jbe
scas
mov
mov
mov
push
into
jge
dec
adc
mov
cltd
leave
or
mov
mov
icebp
lods
inc
outsl
add
test
addl
arpl
dec
xchg
jecxz
mov
mov
idivl
inc
in
iret
cmp
addr16
pushf
mov
imul
cmp
sub
jno
mov
pop
mov
inc
inc
into
xchg
mov
pop
xlat
or
or
mov
dec
sbb
movsl
outsl
xchg
mov
pop
jp
ret
loope
mov
lahf
imul
aam
cli
int3
xor
sbb
iret
dec
ss
insl
lods
jb
xchg
sub
add
jle,pt
jbe
add
xchg
inc
scas
mov
inc
in
ffree
fnsave
sub
xor
mov
xor
addr16
fbld
xchg
push
mov
lock
adc
jbe
xchg
push
fiaddl
bound
insb
pop
adc
dec
cmp
ficomps
inc
dec
imul
jae
das
pop
cli
xchg
sbb
and
testb
loopne
and
add
push
into
inc
jp
push
cmovl
ja
adc
jbe
test
pop
out
or
popf
lahf
addr16
jns
xlat
mov
pop
ja
pusha
movsb
fidivs
sub
adc
roll
aad
insb
push
cmc
xchg
lods
mov
mov
jecxz
ret
sub
dec
ljmp
xchg
popa
fdiv
out
jb
in
mov
je
int
lret
jg
add
push
movsl
or
xlat
push
imul
daa
sbb
dec
mov
lods
std
xchg
dec
inc
push
mov
test
jmp
stc
or
add
xor
mov
rorb
fcmove
sbb
push
dec
in
xchg
mov
sub
and
mov
dec
xchg
push
jecxz
mov
inc
lret
jmp
lds
stos
es
es
pop
scas
push
cmp
jae
ja
rorl
aam
fisttpll
mov
jo
sbbl
icebp
adc
mov
xchg
dec
sbb
fbstp
and
mov
cmpsb
flds
and
dec
cli
push
insb
and
mov
nop
push
mov
loop
xchg
aas
sbb
mov
mov
lcall
pushl
xor
aad
dec
repz
and
jl
xchg
xor
cmp
aas
popa
pop
jecxz
sub
dec
fdiv
sbb
je
out
dec
cmp
push
cmc
ds
das
mov
mov
xchg
dec
mov
movsb
dec
std
fdivrs
iret
inc
xor
movsb
fs
mov
pop
sub
stos
into
leave
aas
jae
jmp
dec
repz
cmpsl
push
scas
mov
mov
sahf
test
andl
lea
inc
jbe
jb
xchg
fildll
stc
cmpsb
pop
inc
dec
outsl
jl
xchg
adc
cmpsb
lods
adc
push
mov
roll
jnp
inc
pop
mov
stc
mov
or
mov
sbbl
adc
orb
into
test
cmc
ret
and
loop
addr16
popf
mov
sbb
dec
cwtl
or
out
aam
add
or
mov
xchg
cli
ficompl
pop
ljmp
dec
sti
pop
dec
dec
push
iret
mov
fstpl
inc
in
in
add
inc
inc
add
shrb
push
mov
int3
sti
jp
imul
lcall
in
adc
and
sub
cmc
mov
out
mov
fistl
rorb
jno
ret
sbb
insl
sbb
loop
lods
mov
push
xchg
popa
xchg
cmp
addr16
imul
mov
push
jns
mov
orl
push
inc
je
push
and
and
fstpt
popf
mov
sub
out
pop
in
jno
adc
jbe
pop
xchg
inc
pusha
int
xor
jecxz
push
cmp
mov
or
inc
in
hlt
sub
jae
nop
pop
movsb
scas
xchg
or
push
and
icebp
dec
mov
and
subb
mulb
rol
inc
pop
cli
jmp
xor
push
out
js
push
mov
leave
mov
lea
sbb
into
cmp
inc
xor
ss
pop
ret
dec
fdivs
aad
loopne
cmp
aas
add
addr16
sbb
iretw
lods
sbb
lock
fcmovnu
popf
jle
or
loopne
and
push
jne
je
mov
mov
leave
xchg
mov
bound
repz
aad
test
adc
je
nop
sub
shlb
inc
push
sub
cmp
test
add
jb
xchg
stos
sbb
xor
sti
cmpsl
mov
push
jo
das
mov
popa
push
sub
fincstp
xchg
mov
xor
int3
aad
add
enter
inc
jne
push
aaa
inc
cmpsb
ljmp
scas
adc
aam
add
rcl
or
scas
mov
pop
jmp
sbb
push
mov
fmuls
mov
adc
push
sub
inc
sub
push
fcom
mov
and
jl
inc
gs
nop
sar
fsub
lahf
jno
pop
push
inc
xor
sub
xchg
pop
mov
mov
push
jp
lods
lea
popa
in
push
sub
negl
pop
jae
rorl
iret
or
gs
orl
fidivs
sarl
pop
mov
mov
pop
je
pop
dec
and
jp
mov
mov
inc
push
ja
rclb
es
sub
xchg
fsubrs
cli
mov
dec
push
sarb
into
cmp
pop
adc
mov
ss
test
out
aaa
cld
xchg
push
pushf
lea
jae
mov
cmp
xor
or
adc
lea
out
sub
xchg
rcl
in
in
mov
pop
jge
les
mov
jg
sahf
icebp
jmp
and
jno
pop
xchg
cmc
pop
aas
int
or
xchg
loopne
inc
enter
std
notl
push
stos
mov
std
imul
or
sbb
mov
incb
cmc
add
test
mov
cltd
pusha
mov
sbb
cli
or
cmp
aas
mov
fldcw
into
add
aam
lods
popf
inc
jp
test
jne
xchg
ljmp
mov
cmp
arpl
out
sub
add
xchg
push
out
test
dec
test
fisubs
iret
pop
dec
pop
cmpsb
in
and
xchg
inc
aad
or
xlat
xlat
dec
xchg
bound
xor
mov
xor
data16
xor
popa
cmp
mov
rorb
add
add
out
mov
cld
dec
or
mov
insb
cwtl
xchg
and
adc
or
inc
insl
es
sbb
ret
cli
mov
mov
lds
outsl
and
xchg
xchg
test
loop
cmp
icebp
cmp
xchg
cld
xchg
ds
lahf
cmpsl
mov
int
jno
cld
cmpsl
sub
lret
mov
cwtl
xchg
fwait
and
test
fcomp
mov
mov
in
repz
push
in
pusha
push
sti
jl
ss
out
and
inc
addb
mov
jns
shlb
stc
bound
loope
pop
xchg
imull
and
sub
push
or
push
in
adc
fwait
hlt
pop
cmp
js
xor
xlat
les
mov
movb
xchg
subl
add
push
daa
inc
dec
sbb
push
into
cmp
pop
je
sbb
imul
cmp
xor
and
dec
ja
sbb
mov
lock
jg
pop
loopne
add
xor
add
rol
cmc
rol
cmc
aaa
int
dec
stos
pop
daa
mov
test
jno
stos
hlt
fdivs
jp
push
out
loop
cmp
jp
pusha
cmpsb
sub
outsl
mov
lret
dec
push
pop
outsb
xor
dec
inc
sub
das
icebp
orl
in
mov
sahf
pop
push
dec
test
inc
sbb
enter
fsubs
or
cs
divb
jg
sbb
xor
outsb
inc
lcall
leave
adc
mov
sarb
scas
lea
and
subb
jno
mov
mov
jae
dec
cmp
test
push
pop
add
in
cmpsl
aam
and
xor
pop
mov
stc
int
xor
jbe
std
push
pop
xchg
dec
divb
js
sbb
repz
daa
mov
mov
inc
xchg
xchg
test
push
ret
mov
ljmp
lret
scas
loopne
lock
loope
dec
cwtl
jae
xchg
and
adc
jl
movsl
fildl
xchg
test
add
in
clc
outsl
lahf
repnz
mov
or
mov
addr16
sub
mov
xor
fsubrl
mov
iret
mov
or
and
popf
cltd
fstl
out
sub
repnz
adc
or
inc
jnp
mov
mov
push
fst
data16
mov
sbb
dec
or
shll
push
repnz
jp
dec
xor
and
pop
push
mov
movsb
cld
in
out
xchg
lcall
jne
cmp
xor
inc
iret
insl
sub
loopne
fsts
sbb
shlb
add
ds
ljmp
hlt
aad
nop
dec
inc
inc
rcrb
push
hlt
scas
mov
pop
dec
sub
out
or
xchg
pop
sub
sarl
push
inc
pop
shrl
es
push
sahf
pop
sub
inc
das
or
andl
pop
cmp
repz
or
xchg
add
push
xorb
mov
xor
cmp
adc
inc
jge
ss
js
xchg
add
repnz
adcl
in
or
pop
icebp
inc
dec
xor
push
xlat
mov
in
mov
add
xor
cli
mov
dec
dec
stos
cs
data16
lods
mov
sarl
repnz
xchg
fsubr
cmp
xchg
testl
adc
dec
sub
add
inc
call
sub
xchg
fneni(8087
jg
ret
arpl
sub
aas
imul
dec
jns
push
out
xor
ds
loopne
out
pop
xchg
add
mov
ret
add
pop
push
cli
cmp
lods
pop
movl
sbb
sbb
jl
mov
cmpl
xor
call
sti
dec
test
and
jge
decl
xchg
mov
inc
mov
and
mov
cmpsl
xchg
test
push
sahf
xor
sbb
adcb
jg
cs
add
test
sub
mov
mov
js,pt
mov
mov
test
fmuls
or
outsl
xor
pop
push
cwtl
mov
cmc
in
daa
outsb
lret
cld
mov
sub
decl
push
shrl
sbb
fcmove
adc
dec
nop
mov
add
pop
pop
andb
mov
and
clc
jl
js
loopne
pop
pop
jl
xor
outsb
repz
sti
mov
gs
notb
decl
jmp
popf
loopne
nop
fmulp
pop
push
pushf
movsb
sub
push
xor
xchg
mov
add
pop
int3
sub
dec
ljmp
dec
cmp
mov
clc
je
cmp
out
mov
cld
xlat
ret
jl
dec
in
jecxz
inc
pop
or
xor
lret
addr16
adc
add
cmp
int3
les
push
jmp
pop
adc
rorl
pop
mov
xor
cmp
push
mov
je
dec
ljmp
cltd
mov
cwtl
and
mov
dec
divb
js
sbb
inc
call
icebp
out
cmp
cmp
xorl
mulb
and
scas
addl
dec
movsl
add
cwtl
or
or
mov
inc
aam
or
dec
mov
mov
sbb
bound
and
imul
fs
sub
ret
fwait
push
mov
testl
or
pop
stc
aaa
shlb
push
aas
push
push
push
int
adc
inc
pop
mov
inc
inc
push
cmp
lahf
sbb
jecxz
sub
in
mov
dec
loop
movsb
ja
jecxz
mov
mov
push
inc
out
adc
jne
mov
data16
inc
movsb
or
idivl
fcmove
inc
xchg
inc
push
adc
popf
mov
xchg
xchg
and
pop
in
fs
out
xchg
es
sbb
add
roll
jecxz
xor
call
sub
sti
and
and
push
rclb
in
or
add
mov
outsl
jb
jmp
mov
imul
out
xchg
lods
xchg
add
loopne
mov
xchg
cmp
jne
ret
fcomps
data16
cwtl
mov
inc
movsl
mov
jbe
pop
xchg
pop
cs
cltd
clc
clc
mov
icebp
inc
jecxz
jg
movsl
in
arpl
add
fldt
dec
shll
add
and
mov
xor
push
add
inc
enter
movb
adc
gs
push
sbb
out
xor
pushf
mov
push
inc
mov
fistl
push
or
xchg
adc
es
fcoml
inc
push
dec
add
aam
mov
loope
adc
xor
outsl
cmp
mov
jecxz
push
lahf
jecxz
daa
repz
popf
xchg
ret
jne
mov
adc
aas
ffreep
jae
mov
out
pop
negb
cmpb
loop
jecxz
mov
push
ja
loopne
or
aad
adc
mov
in
mov
mov
das
dec
inc
js
mov
je
shr
dec
jb
jnp
xorb
adc
dec
mov
stos
push
and
add
das
pop
cwtl
lods
ror
pop
shrb
sub
dec
or
imul
or
sub
orl
cmp
jge
inc
popa
push
rclb
xor
fcmovnbe
adc
inc
sub
adc
mov
incl
inc
mov
xor
adc
fcompl
mov
das
or
push
mov
sahf
mov
push
shll
insb
push
out
test
inc
les
stos
and
or
and
push
pop
adc
xor
adc
scas
rolb
mov
or
aam
filds
jecxz
lods
or
pop
je
jmp
mov
xor
push
clc
imul
inc
fisubs
inc
jbe
and
push
daa
scas
sbb
ret
not
popf
cmp
ficoml
adc
hlt
mov
or
push
dec
sbb
jbe
popa
addb
adc
pop
sub
sarl
and
xorps
out
xor
popf
nop
sahf
jbe
movb
add
aaa
adc
sti
cld
adc
scas
and
adc
lahf
push
imul
data16
es
jmp
push
mov
in
mov
cltd
xchg
in
push
adc
mov
mov
aaa
xchg
insb
popl
or
aam
jecxz
mov
push
push
fdivs
mov
sbb
or
arpl
bound
xchg
iret
fcomp
rcll
dec
rclb
or
pop
rorb
ljmp
mov
sbb
cmp
mov
arpl
sub
jb
and
mov
add
lock
jg
sbb
fs
sub
mov
mov
idivb
hlt
jmp
adc
or
cmp
stos
mov
add
call
adc
xlat
shlb
push
fcomps
mov
es
in
scas
jge
and
shl
std
jp
pop
les
add
dec
hlt
cmpsb
decb
cmpsb
packssdw
stos
push
leave
iret
inc
push
lock
loope
lea
pop
push
mov
mov
shr
ja
mov
ret
repnz
adc
dec
mov
ret
sbb
arpl
dec
sbb
push
out
mov
inc
cmp
pop
loopne
lods
das
dec
loop
dec
pavgw
push
jge
adc
jb
test
pop
inc
subb
jnp
imul
lods
push
push
mov
xchg
lahf
jle
lahf
enter
jp
mov
cmp
movsl
inc
push
add
inc
jmp
jae
dec
mov
push
shl
jecxz
out
mov
por
movsb
fdivs
and
sbbl
fbstp
mov
aad
jp
neg
push
clc
sbb
fstl
add
dec
out
fdivl
cmp
fs
pop
repnz
out
addr16
or
popf
jb
jg
or
mov
int
jle
xchg
test
xchg
mov
subl
push
add
inc
lcall
pop
jns
xor
mov
icebp
xor
jmp
scas
mov
mov
movsb
mov
mov
add
ret
int3
cmc
ds
stc
push
repnz
pusha
pop
stc
pop
sahf
pop
or
sub
xlat
lcall
sub
jns
cmp
adc
and
ret
lcall
adc
add
xchg
pop
das
bound
sbb
jno,pn
mov
mov
adc
aam
sarb
test
lds
push
imul
cmp
cmp
and
push
inc
aas
and
mov
aad
pop
test
adc
pop
pushf
sbb
inc
xor
daa
rcrl
sahf
jae
ret
pop
xchg
inc
pop
outsb
xor
lods
call
mov
in
add
mov
jp
lea
cmovg
xor
jmp
dec
xor
pop
in
mov
les
ret
push
stc
lcall
cmp
fstps
or
cli
fistpll
das
pop
mov
iret
aas
imul
aas
push
pop
std
push
std
xchg
fisubl
mov
add
and
mov
stc
div
push
add
rorl
pop
inc
or
add
xorb
imul
and
mov
lock
cmp
repz
movsl
jmp
out
es
jg
rcll
movsb
aaa
sbb
std
pop
pushl
xor
aaa
rcll
lods
mov
gs
out
push
das
adc
shlb
and
ja
push
push
adc
push
add
jg
in
imul
outsl
push
dec
leave
rolb
or
jns
jmp
mov
cwtl
pop
mov
push
mov
in
test
lods
xchg
dec
xchg
add
sub
sbb
pop
pop
je
into
sbb
rcrl
inc
push
adcb
addl
shl
inc
add
adc
into
xorl
loop
movsb
lea
mov
push
pop
mov
nop
mov
nop
movsl
mov
jecxz
mov
cli
add
sub
fsubrs
orl
mov
pop
push
mov
cmpsl
leave
and
cld
sarb
mov
mulb
jno
push
shlb
jbe
enter
scas
cwtl
test
inc
mov
les
ja
add
jle
pop
insb
lret
adc
mov
jnp
adc
cli
pop
dec
andl
xchg
xor
push
mov
and
repz
gs
test
inc
mov
lds
push
outsl
mov
xchg
push
mov
jb
cli
test
std
test
sub
fisubrl
push
jbe
sbb
inc
or
sbb
jns
loopne
lret
fdivr
pcmpgtd
or
cmpsl
cmc
pop
mov
xlat
add
ret
int3
inc
add
sarb
call
repnz
push
and
and
sbb
push
or
loope
aad
or
jb
jae
lret
insb
scas
lret
or
inc
xchg
xchg
mov
gs
sub
icebp
jl
mov
or
xchg
push
adc
test
jmp
in
mov
jo
jl
ljmp
mov
xchg
sarb
pop
jmp
mov
pusha
mov
jge
mov
mov
jl
repz
cmp
or
pop
fmul
xor
fbld
and
popf
stos
aas
out
cmpsb
push
in
daa
cmp
fwait
addr16
jnp
dec
fidivs
mov
mov
adcl
aam
xor
and
ret
or
std
int
xor
xor
xor
cs
inc
jo
outsb
jns
pop
cmp
xchg
xlat
psrad
inc
sysret
mov
ss
jmp
outsl
cli
sbb
iret
push
call
loope
sub
jp
neg
rcl
mov
mov
or
movsb
shll
pop
pop
push
loope
mov
jne
jp
fdiv
mov
mov
cld
inc
int
push
cmc
pushf
cmp
pop
sahf
add
imul
ja
fcmovne
mov
daa
movsl
enter
or
lret
dec
mov
pop
sub
aam
mov
dec
aas
pop
pop
dec
cmp
loop
enter
jbe
data16
sub
int3
dec
sub
enter
js
mov
and
xor
incl
pop
jg
xchg
mov
dec
test
dec
bnd
and
aam
mov
xchg
pop
dec
mov
mov
in
sahf
out
das
pop
mov
mov
aaa
or
pop
mov
pop
je
cmp
testl
cmp
sub
lds
fcmovbe
shrd
popa
sub
lock
and
std
mov
and
add
std
out
push
inc
xor
loopne
popf
shll
sbb
ret
inc
div
adc
stos
mov
ljmp
jns
icebp
cmc
or
jg
xorl
mov
xchg
imul
fldenv
nop
ret
add
out
cmp
cmpsl
repz
xchg
pop
in
xchg
cmpsb
xor
dec
add
fidivs
lea
lea
mov
cld
insb
xchg
lahf
cli
nop
xor
cmp
xor
ret
push
or
add
inc
stos
mov
inc
sahf
adc
and
inc
sub
les
negb
imul
adc
push
fadd
adc
sbb
test
hlt
sub
mov
cmp
pop
js
mov
mov
add
push
repnz
jle
mov
fsubrs
add
mov
inc
pop
xchg
lret
mov
mov
pop
jp
cmp
inc
pop
ret
es
cmp
push
jge
dec
cmp
mov
je
pop
fstpt
mov
adcl
inc
hlt
je
jg
pop
dec
push
out
sbb
xor
movsb
insb
in
push
pop
shrb
xchg
data16
leave
loopne
es
add
pop
cwtl
movsb
hlt
mov
mov
jecxz
stos
mov
popa
cmc
mov
fcompl
aad
pop
sub
jl
pop
push
loopne
sbb
sti
add
bound
mov
out
pop
and
xchg
cmp
mov
push
dec
gs
lcall
pop
cmp
out
xchg
iret
push
add
and
ss
xchg
fisttpll
sub
jnp
sbb
stc
add
fcompl
cld
cmpsl
xor
pop
ljmp
xchg
sbb
xchg
ret
loop
cmpsl
aam
push
sub
clc
inc
cwtl
xchg
cmp
inc
or
or
jle
xor
inc
mov
unpckhps
sub
outsb
sti
repnz
loop
bnd
sbb
in
repnz
dec
sub
xchg
lahf
sbb
xchg
xor
sbb
mov
and
sub
sbb
movsb
into
andl
enter
ss
inc
test
fwait
bndldx
or
cld
cltd
fnsave
lods
testl
jl
and
pushw
das
xor
je
ficomps
lods
aad
or
in
movsl
in
clc
popf
push
jmp
cmp
dec
push
gs
sub
adc
fidivrs
pop
in
ret
pop
shlb
jae
push
pop
in
outsb
test
inc
xchg
xlat
lret
pop
in
cmp
outsb
in
or
cmpb
lahf
stos
andl
ficoms
mov
jo
test
add
mov
sub
into
fbstp
jmp
dec
jp
push
imul
xchg
xor
push
aaa
xchg
dec
xchg
push
aaa
adc
dec
mov
or
imul
in
lods
pop
es
cmp
out
in
outsl
inc
loope
insb
sub
mov
aam
dec
pop
in
sti
jp
cmpsl
dec
mov
scas
add
push
aad
or
fcompl
push
aad
xchg
movsb
fsubl
push
add
inc
jp
push
mov
xlat
adc
imul
clc
push
aam
mov
and
mov
loop
push
test
jnp
xchg
or
and
clc
jbe
push
and
cmp
outsl
pop
repz
lret
je
xchg
push
dec
xchg
test
and
push
xchg
mov
cmc
cmp
jp
loopne
xlat
inc
jo
push
push
mov
and
std
and
pop
push
add
xlat
aas
xchg
xchg
xor
aaa
mov
lahf
mov
mov
mov
adc
add
icebp
stos
call
jbe
pop
aam
add
mov
mov
xor
movb
imul
mov
out
jno
lahf
jne
ret
lock
push
les
js
sub
das
pop
fstpt
pop
xchg
adc
je
aas
pop
cmp
adcl
lock
fsubs
test
decb
push
into
xchg
out
lods
aas
and
daa
stc
into
xlat
cmpsl
mov
add
pushf
pop
pop
jae
mov
push
inc
movsl
sub
sub
cmp
pop
cmc
shl
add
fnstsw
xchg
cld
push
pop
lods
mov
cmp
push
cmpb
movsb
cmp
adc
xor
ds
mov
push
sbb
out
sbb
dec
das
mov
add
sbb
xor
jge
hlt
test
jp
dec
dec
sbb
pop
jl
mov
test
das
stos
xor
fisttpl
rcrb
mov
pop
out
xchg
dec
cli
mov
add
iret
aam
or
push
jbe
or
cs
and
mov
outsb
inc
push
dec
push
inc
xor
or
stos
sub
test
jnp
dec
imul
sbb
xchg
out
jle
xchg
test
test
jp
add
xchg
scas
inc
pop
mov
ss
push
adc
lahf
adc
lods
ret
mov
mov
cmp
push
cs
xchg
or
push
adc
js
insl
addr16
mov
xor
stos
jmp
rcrb
xor
mov
rclb
mov
add
insl
xchg
aam
cli
fisttps
sub
lock
mov
cli
add
and
adc
adc
aam
mov
jnp
enter
imulb
mov
push
add
inc
inc
mov
inc
cmpsb
int
sub
bound
dec
mov
push
mov
adc
add
jp
pop
dec
stos
sub
or
and
and
pop
sub
fwait
xor
fnstenv
ret
fstpt
dec
add
sub
andb
cmp
imul
call
pop
xor
cmp
push
insl
stc
adc
add
aaa
xchg
lea
mov
cmp
cmpsb
cmp
sbb
ja
bound
sbb
fdivrl
fwait
in
sbb
mov
jno
and
jg
aam
push
and
ss
pusha
rorb
xchg
icebp
pop
jae
aad
adc
jno
lods
imul
vpxor
and
push
adc
mov
scas
jae
in
ret
push
and
cmp
xchg
inc
pop
popa
add
lds
test
pop
jno
int
jp
ficoms
push
adc
pushf
jnp
outsl
icebp
adc
icebp
es
push
aas
fwait
out
mov
xchg
dec
cmp
popa
mov
lahf
jg
dec
jp
or
jns
adc
pop
mov
inc
aas
inc
mov
mov
mov
jnp
adc
int
inc
icebp
xchg
lea
in
mov
ret
dec
insb
addr16
fstpt
or
inc
aam
add
js
pop
aaa
mov
call
jge
push
enter
mov
nop
dec
mov
insb
das
in
jns
xor
dec
mov
and
xor
or
push
outsb
mov
test
pop
xchg
pop
sub
ret
push
xor
aaa
repz
aas
mov
ss
enter
xchg
aas
adc
add
push
and
out
mov
test
or
pop
xchg
dec
pop
fisttpl
inc
xchg
out
xor
xchg
lret
stos
lock
push
fwait
cli
lock
ds
pusha
cltd
int
sbb
enter
out
push
mov
lods
push
std
jle
push
sub
inc
jmp
jbe
jno
sbb
mov
sbb
mov
in
sub
sbb
xchg
daa
and
xchg
push
hlt
xchg
dec
xchg
adc
xchg
lret
mov
mov
hlt
cmpsl
lods
mov
shll
jmp
popl
and
inc
negl
arpl
imul
xor
cmp
popa
popf
lahf
mov
cmp
push
add
mov
popa
imul
sbb
sub
push
dec
cmp
movsl
xorl
mov
ss
arpl
test
fs
inc
int
jle,pt
pusha
pop
xor
push
or
stc
pop
mov
leave
pslld
test
jge
lret
ret
sub
add
pop
push
je
adc
xchg
and
or
sbb
mov
sbb
cmp
add
negl
mov
ficoms
andl
jecxz
mov
mov
shr
inc
push
lds
xchg
lods
pop
fdivp
ret
adc
mov
pop
stc
fdivrs
xchg
fwait
leave
shl
xor
inc
sub
xor
aam
ja
jb
jmp
cmc
sbbl
leave
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
mov
mov
pop
test
mov
int3
lods
inc
sbbb
out
sbb
or
jecxz
sahf
pop
enter
pusha
shlb
cli
or
insl
adc
dec
nop
out
mov
sti
loopne
adc
mov
adc
mov
outsb
std
push
xor
leave
mov
popa
cmp
xchg
sbb
sarb
mov
jle
jnp
cmp
xchg
xchg
cmp
xor
mov
and
sub
enter
dec
mov
pop
jne
jmp
jae
aam
stos
push
jo
clc
leave
pop
dec
loope
add
mov
sub
aas
icebp
sbb
sbb
sar
lds
pop
xchg
xchg
aad
cmp
or
pop
add
loopne
fsubs
push
mov
into
add
lcall
cmpl
inc
rcr
fdivrs
jnp
nop
ljmp
push
testl
fiaddl
or
xchg
mov
fnstenv
js
stos
fcoml
add
push
les
out
insl
sub
adc
fsubp
mov
loopne
mov
lahf
cmc
lret
push
les
add
lret
sahf
idivb
push
out
sbb
jo
sti
leave
out
loop
push
pop
adc
into
dec
push
and
std
bound
push
mov
mov
unpckhps
idivb
cmp
fxch
mov
dec
test
cmpsb
adc
sbb
pop
add
and
jns
mov
mov
dec
fstl
adc
or
cwtl
lahf
stos
fwait
mov
repz
stos
bound
negb
mov
and
loope
imul
addr16
xchg
mov
inc
xchg
cli
leave
cmpsb
inc
mov
cmpsb
mov
fcompl
cmp
sbb
adc
inc
jbe
sbb
outsl
gs
lret
inc
push
cmpsb
adc
cltd
or
shlb
in
sbb
sub
ljmp
jecxz
shr
sahf
pop
mov
pusha
jle
iret
mov
mov
in
loope
mov
or
push
cmp
mov
fcompl
push
insb
jge
pop
imul
stos
shll
push
mov
out
pop
add
pushl
xchg
dec
cmc
js
pushf
jge
in
inc
jae
iret
test
xchg
push
xor
js
insb
pushf
push
mov
das
pop
mov
into
pushf
jno
in
add
loop
scas
cltd
sbb
adc
loop
idiv
adc
shll
xlat
fstpt
inc
mov
popf
lea
mov
imulb
mov
cli
ret
lret
sbb
xchg
inc
mov
fs
pop
sub
stos
mov
cli
pop
out
ljmp
mov
into
mov
push
mov
out
mov
sub
cmp
test
cmpsb
sub
loopne
lcall
inc
icebp
pusha
cli
loopne
adc
push
aas
pop
mov
cmp
decl
test
dec
xchg
mov
divl
mov
aad
mov
shrl
jmp
mov
popf
repz
lret
sub
dec
cld
cmp
pushf
cli
bound
fdivr
std
inc
rorb
mov
stos
add
mov
xchg
out
test
and
cmp
insb
xor
adc
sub
cmp
sbb
in
jmp
push
fmuls
bound
outsb
repz
lods
in
dec
dec
push
sbb
mov
mov
cmp
sbb
out
pop
cmp
push
push
sarl
push
jecxz
test
inc
into
dec
jecxz
bnd
fcoms
or
sub
mov
pop
sub
sub
fistpll
filds
sbb
or
jg
mov
cmp
and
dec
inc
cs
push
cld
cmp
jg
xchg
icebp
mov
or
mov
loop
adc
xor
or
inc
ja
xchg
loopne
sub
push
imul
das
lock
sti
fmulp
cmp
inc
push
sub
out
int
popa
inc
pop
adc
test
jmp
push
xor
jo
cli
mov
fwait
and
push
xor
pop
stc
ret
jg
add
inc
mov
in
test
pop
rorb
mov
push
add
inc
and
cld
xchg
push
int
mov
int
in
or
adc
dec
lock
adc
bound
lods
les
movsl
jb
out
imul
out
or
aam
push
out
dec
ljmp
daa
xor
and
or
push
test
movsb
jnp
lods
shrb
cli
cmp
cmpsb
arpl
out
jecxz
lock
dec
inc
xor
inc
in
lods
fdivr
and
and
out
mov
and
add
or
sbbb
test
adc
flds
lret
cmp
cmp
inc
jmp
add
popf
adc
inc
sti
or
mov
push
cmp
sub
jl
xor
fidivrs
mull
jecxz
movsb
sub
outsb
imul
push
sub
and
cmp
inc
sahf
popf
mov
mov
test
xor
sbb
jnp
lods
rcll
mov
aaa
inc
setnp
loope
mov
ds
fwait
inc
and
es
or
mov
xor
imul
pushl
jae
adc
mov
pop
sbb
sbb
shlb
jno
out
xor
ds
loope
jmp
daa
jge
pop
mov
pop
movl
push
and
sarl
or
push
out
mov
mov
xchg
mov
jae
jmp
mov
std
int
pop
jle
mov
imul
mov
rorl
dec
pop
xlat
je
adc
popa
int3
dec
dec
popa
pop
lret
push
leave
mov
adc
push
cmp
in
enter
inc
in
imul
dec
pop
jns
es
adc
push
or
aam
sbbl
rol
sub
mov
xchg
inc
shll
jmp
dec
out
push
dec
mov
daa
outsb
pop
scas
cmp
cmp
jl
lods
jb
xor
lcall
xchg
out
aas
xor
or
aam
cmovb
jns
inc
repz
test
sbb
paddw
sub
pusha
fnstsw
scas
cmpsl
pusha
jb
push
push
js
fdivrs
jb
jle
test
test
js
mov
popf
pop
out
stc
popf
cld
ljmp
dec
or
push
test
and
test
jecxz
xchg
cmp
lods
imul
xchg
mov
or
lods
pop
jmp
jl
add
es
ret
fistpl
xchg
aad
insl
inc
lret
inc
nop
pop
sti
clc
call
fidivrl
enter
mov
xlat
jo
out
inc
push
mov
or
push
or
rclb
pushf
int3
por
add
je
dec
int
cmp
or
hlt
mov
add
dec
xchg
outsb
mov
loope
fimuls
mov
lds
cmc
lret
adc
aas
scas
cmp
popa
ss
sahf
mov
pusha
rclb
adc
or
or
into
aad
xor
xchg
out
dec
repnz
stos
dec
or
out
mov
mov
pop
je
mov
lcall
mov
in
adc
xchg
jb
jb
or
add
inc
inc
scas
jge
jg
cmp
lcall
das
sub
mov
popf
sub
repz
xor
test
inc
int3
mov
rorl
jg
ret
xor
lods
jae
loop
sub
mov
sbb
out
ret
outsb
les
hlt
xchg
cmp
scas
fildl
stos
addl
xor
ret
divb
bts
mov
jl
arpl
fiaddl
xor
inc
mov
test
push
cltd
insl
or
cmp
mov
test
mov
add
lret
fwait
ja,pn
std
adc
in
clc
out
rorb
incl
test
das
rcl
call
pop
mov
push
dec
jbe
or
pop
sbb
pop
xor
icebp
in
rcrl
movsl
rcrl
repz
lret
or
cmp
roll
jmp
pop
into
fwait
lret
xorl
mov
or
xor
popf
xchg
je
inc
cmp
fildll
loopne
adc
test
int
and
insb
dec
jecxz
xchg
in
push
mov
shl
jne
mov
pop
mov
into
ja
scas
pop
fnstsw
lret
ss
mov
or
es
jo
jp
int3
mov
mov
adc
cli
loop
sbb
int3
sub
test
sbb
aad
pop
loopne
add
cld
mov
or
andl
xchg
lods
mov
roll
mov
sbb
pop
int3
testb
inc
bound
mov
pop
dec
les
cmc
push
cwtl
sbb
repnz
lret
push
jp
mov
arpl
or
stc
jb
pop
cmp
shl
enter
dec
and
mov
or
and
mov
leave
mov
das
mov
sub
scas
mov
cmp
cmp
mov
ja
pop
mov
leave
leave
loop
mov
int3
lahf
jg
sub
inc
push
adc
mov
or
dec
icebp
push
dec
cltd
cmp
bound
inc
mov
mov
pop
leave
and
and
mov
add
inc
mov
sbb
enter
lds
pop
xor
dec
inc
out
jnp
clc
fisttps
adc
cwtl
push
pop
xchg
int
jns
mov
sbb
pop
arpl
dec
icebp
sbb
fldlg2
rcl
pusha
ficoml
filds
jo
mov
pop
mov
outsb
inc
jae
mov
lods
jbe
aas
fidivrl
movsl
mov
jno
sub
pop
int
lods
lahf
into
sbb
mov
sub
ficoms
out
sahf
xor
jl
inc
jge
xchg
cli
lret
jl
pop
push
dec
sbb
or
es
adc
lods
inc
pop
sti
inc
mov
xchg
fwait
sbb
andb
pop
into
adc
mov
jbe
lock
push
xorl
pop
jle
adc
das
lods
out
sub
pop
cwtl
mov
mov
movsl
pop
mov
out
sti
mov
out
sub
or
mov
jbe
insb
leave
inc
aaa
xor
mov
ret
cwtl
ret
fldl
jne
add
jb
inc
jno
int
addb
filds
pop
mov
outsb
insl
jo
stos
aad
dec
cmp
in
sub
out
xlat
sbb
or
pop
cmc
ret
xor
jp
xor
stos
pop
pop
gs
hlt
xchg
push
mov
in
pop
push
in
fwait
sbb
adc
sahf
mov
inc
add
test
dec
xor
xchg
adc
mov
mov
sbb
xor
stos
fcmovbe
adc
mov
andl
bound
or
xor
ss
mov
push
adc
xchg
fmuls
into
cmp
insb
push
mov
cmp
outsb
or
mov
bound
enter
push
cmp
mov
jmp
iret
mov
ss
rcrl
bound
ja
cmp
out
mov
push
frstor
test
icebp
pop
dec
mov
repnz
je
ljmp
ljmp
dec
in
lock
pop
das
dec
rorl
xor
jge
mov
int
mov
adc
xor
add
repnz
sub
call
popl
sub
popa
add
xlat
loop
in
test
lcall
push
data16
out
push
mov
add
xor
sbb
outsl
inc
push
ffreep
jl
test
out
lods
xchg
sar
es
sbb
mov
insl
or
or
xchg
sub
imul
int3
cwtl
inc
out
pusha
fldl
jae
cs
ss
push
fmulp
and
std
pop
ret
add
inc
icebp
sbb
sub
push
or
jb
enter
in
cmc
mov
fisubrl
inc
ja
rcrb
xchg
sbb
testb
xchg
mov
ret
repz
in
sti
enter
xchg
adc
scas
xorl
shll
or
test
mov
dec
mov
ss
lds
and
and
mov
inc
test
shlb
or
in
icebp
sbb
fcomp
jmp
data16
cmp
enter
mov
xchg
adc
addr16
inc
jnp
push
cmp
test
xorb
and
cmp
insb
ss
pop
sahf
lea
outsl
pop
push
rolb
or
clc
cmp
mov
cmp
pop
xor
mov
lock
xchg
push
stos
pop
xchg
stos
movsl
mov
xor
push
inc
sahf
mov
jb
outsb
pop
push
pop
rep
cmpsb
sbb
inc
xchg
fucomip
jge
cmc
add
call
or
js
fadds
dec
out
loopne
aam
add
out
movsl
mov
ret
ss
push
pop
in
push
popa
inc
mov
in
xchg
imul
xchg
imul
xchg
inc
add
icebp
hlt
pop
sub
mov
inc
jnp
mov
fnsave
lret
leave
cmc
or
mov
or
cmp
sbb
leave
xchg
pop
leave
mov
xchg
nopl
and
and
push
jne
adc
xchg
cmp
pop
xor
mov
stos
and
add
sbb
fwait
cmp
adc
imul
or
fisttpll
mov
repz
dec
add
mov
std
cmp
es
push
fstpl
dec
lret
push
sarl
jbe
cmp
or
mov
stos
sbb
jno
add
jnp
fiadds
inc
inc
pop
enter
push
mulb
test
pop
xchg
outsl
int
in
adc
jecxz
mov
inc
lcall
xor
clc
dec
cmpsb
out
xor
cmp
jne
push
fisttpll
pop
fisubrl
bound
xor
addr16
cmp
xor
inc
loope
adc
adc
mov
sub
sbb
sbb
inc
push
pop
inc
pop
inc
cltd
jns
rcll
lock
push
insl
or
clc
sub
and
in
stos
fldt
imul
push
inc
pop
stc
push
mov
mov
xchg
test
pop
fisttpll
jg
push
and
subl
aad
es
loopne
pop
cmpsl
push
jae
in
cli
sub
push
jmp
mov
sti
xchg
xchg
add
jp
mov
test
jmp
imul
movsl
aaa
stos
cmpsl
cmp
jo
mov
push
mov
daa
imul
jge
ljmp
ffreep
cmp
mov
fists
push
test
stc
je
or
mov
ret
add
adc
push
fcmovu
jp
mov
aad
xchg
incl
test
adc
int3
rol
or
xchg
je
jbe
sub
pushf
shl
jmp
mov
xchg
xchg
mov
jbe
ss
push
cmp
inc
sub
pop
push
loope
cwtl
pop
mov
gs
dec
mov
pop
jb
lret
in
adc
jp
xlat
sbb
and
div
insb
popa
test
loope
out
sub
cs
xchg
pop
leave
rclb
xchg
xor
inc
popf
stos
cltd
movb
push
imul
pop
mov
rcl
scas
pop
pop
and
dec
sbb
mov
addr16
js
mov
inc
enter
cltd
dec
popf
adc
adc
mov
andb
aam
dec
sbb
inc
cmp
jge
sub
dec
popf
or
xchg
lods
dec
sbbl
fwait
jmp
pusha
loopne
or
ss
pop
push
cli
aam
scas
lret
sbb
ffreep
cmp
das
aam
mov
or
mov
add
sub
pop
iret
pusha
mov
xchg
sbb
and
cmc
loopne
sub
jle
dec
fnstcw
xor
call
push
imul
cmp
lahf
idiv
cmp
les
jns
sbb
aad
adc
or
xchg
mov
rcrb
addr16
sar
adc
rcr
pop
jle
jmp
mov
add
pop
push
mov
stos
mov
push
into
lea
rclb
jns
push
xchg
xor
addb
stc
sub
push
lret
stos
popf
xchg
pop
lods
jne
rcrl
clc
and
aad
cs
outsl
sbb
jecxz
jns
iret
ret
sub
loope
aam
sbb
aaa
loop
mov
roll
js
inc
fs
pop
cmp
je
pop
mov
cli
stos
inc
push
mov
mov
add
outsb
and
rcll
mov
or
and
lret
fisttpll
mov
jl,pn
fwait
sahf
aaa
push
or
jle
inc
mov
cwtl
sbb
test
loop
push
insb
and
inc
mov
jecxz
mov
dec
xchg
insl
and
loop
push
pushf
cld
mov
mov
jge
out
jp
fs
jne
sub
sbb
cmpsb
sub
sbb
aas
cmp
mov
sbb
out
out
rcrb
inc
aaa
fiadds
scas
mov
test
in
mov
pop
negl
adc
cmc
mov
shl
repz
orb
mov
xchg
xchg
sarl
sbb
or
push
dec
scas
loop
int
addb
fstpl
pop
mov
jnp
adc
sbb
add
ret
xor
daa
cmpb
add
sub
aaa
add
jns
jmp
cld
xchg
mov
push
hlt
scas
xor
lea
mov
mov
mov
sub
jle
adc
push
lock
fidivl
ss
aam
cltd
sub
xorl
imul
pop
pusha
and
dec
inc
lret
lcall
pop
fstpl
dec
xor
inc
mov
or
xchg
jp
stc
adc
inc
cmpsb
mov
inc
mov
sub
push
and
rcll
sbb
jno
sub
ss
mov
mov
cltd
mov
pop
ja
dec
jp
call
dec
fsubrl
cmp
dec
pop
nop
negb
fisubs
or
xor
push
fimull
pop
inc
ret
leave
mov
xor
popf
das
ret
shlb
jle
rcr
and
xchg
pop
sbb
rcll
mov
pushf
mov
out
je
cltd
rclb
inc
pop
adc
mov
in
frstor
sub
add
and
push
jbe
or
cmp
leave
inc
or
mov
addr16
jecxz
jb
bound
pusha
sbb
sub
pop
mov
cmpsb
movsb
dec
popa
loop
xor
test
and
incb
mov
jo
xchg
pop
loopne
pushf
xor
sbb
adcl
das
popa
cmp
notb
inc
inc
call
negb
sbb
jnp
lods
lcall
pop
iret
adc
dec
inc
out
sarl
dec
ds
xor
pop
or
dec
es
in
fiadds
adc
adc
shl
jle
push
sbbl
push
data16
mov
cwtl
mov
sub
adc
fwait
mov
sbbl
test
or
shlb
jmp
sbb
mov
mov
dec
aaa
or
push
add
push
push
or
leave
fadds
and
pop
mov
es
add
cmc
jecxz
fdivs
cmp
mov
or
xor
and
fldl
out
pushf
js
sub
cmp
pop
push
lds
loopne
mov
and
daa
pop
add
lahf
mov
push
mov
and
mov
icebp
inc
cwtl
in
sbb
xor
xor
rcr
xchg
mov
xchg
cmp
je
clc
inc
xchg
push
mov
jno
ja
xor
jl
pusha
xor
pop
test
adc
jmp
sbb
push
out
scas
ja
xchg
sub
jp
xor
dec
fcompl
scas
pop
out
aam
adcb
cmp
shrb
stos
xor
call
mov
shlb
cmp
xor
pop
lds
sub
dec
jle
js
sbb
lcall
push
inc
int
roll
mov
sub
lods
enter
lcall
out
mov
add
and
rcll
std
jecxz
scas
in
jae
daa
cmpsb
mov
bswap
aaa
or
out
sub
hlt
and
mov
ds
data16
add
xchg
dec
xchg
mov
pop
insb
sti
mov
xor
stos
adc
dec
dec
test
test
pushf
push
jne
loop
lahf
mov
mov
sub
test
push
pop
mov
outsl
push
inc
popf
aad
pop
jns
sarb
mov
and
add
xchg
sub
add
mov
xchg
sub
loopne
mov
dec
dec
xorl
push
sahf
xor
popf
neg
xor
lock
cmp
mov
lods
insl
imul
rcrb
shl
cmp
push
or
mov
std
mov
pushf
fsubrl
in
or
ret
loop
lret
ret
sub
xlat
mov
inc
jg
push
adc
nop
int3
outsb
jecxz
push
and
stos
pop
pop
jns
addr16
push
cld
bnd
inc
les
jb
daa
mov
stc
sbb
jp
lods
mov
jle
cmp
test
pop
or
push
mov
imul
cld
cs
or
imul
pop
pop
fdivrs
leave
shrb
mov
aad
mov
adc
jmp
dec
xor
imul
movlps
and
int
rcll
cmp
jg
jecxz
cs
nop
cmp
mov
sarl
xlat
adc
sti
mov
es
sub
dec
jnp
mov
test
shll
xchg
dec
sbb
stc
mov
scas
add
cmp
notb
mov
add
movsl
iret
sahf
pop
repz
xchg
shll
imul
cmpsl
cmpsb
aam
mov
pop
add
out
repnz
inc
daa
loopne
fisttpll
push
out
lock
mov
cltd
xchg
jns
xor
jp
mov
jg
rol
mov
aaa
ret
fxch
or
and
jne
in
fistpll
arpl
and
mov
dec
jl
dec
orl
jae
das
and
shr
cld
sub
xchg
std
dec
pop
sbb
mov
cmpsl
popf
std
and
sub
insb
js
in
sub
or
jno
push
dec
pop
scas
jecxz
cltd
scas
scas
mov
rcrl
add
xchg
andnps
data16
mov
inc
pop
mov
jae
outsl
pop
outsb
adc
aad
xchg
loopne
call
mov
fld
leave
out
jae
lret
xor
int
xchg
jmp
xor
xlat
sbb
ss
iret
notl
test
xor
mov
cmp
add
out
fstpt
stos
sub
cmp
push
pop
sub
mov
mov
out
add
shll
xchg
dec
inc
cltd
xchg
or
aaa
jno
roll
test
xor
loope
addr16
cwtl
shl
sbb
les
testl
add
pop
icebp
or
push
sti
jns
cmp
shll
shll
dec
pushf
inc
pop
sub
out
push
xchg
adc
jo
inc
imul
dec
lcall
mov
jmp
jg
aaa
lds
out
scas
in
iret
jl
ret
add
jge
cwtl
pop
das
push
xor
je
dec
rcrb
into
test
hlt
shrb
xor
push
std
mov
xor
jns
lahf
pop
fidivrl
sbb
xchg
mov
inc
loopne
xor
lahf
pop
cmp
jo
jle
xchg
adc
rcll
out
lods
pop
ret
cmpsb
into
dec
and
push
adc
ss
xchg
popa
inc
and
movsl
xor
mov
dec
mov
out
mov
decb
js
jns
clc
adc
dec
aam
test
push
insb
hlt
inc
dec
jbe
mov
pusha
stos
dec
shl
nop
popf
push
arpl
das
pushf
xorl
dec
sbb
out
fiaddl
pushf
loope
push
ret
mov
fmull
popf
lcall
mov
inc
out
mov
in
lea
sbb
xchg
pop
push
fstpt
subb
pop
leave
xchg
mov
adc
inc
lahf
push
int
dec
cmp
dec
xchg
mov
or
sbb
pop
mov
pcmpeqd
sub
inc
sub
push
jno
sbb
sarb
mov
sahf
std
lods
mov
mov
scas
outsb
push
jmp
fwait
hlt
lds
stos
pop
pop
push
xor
jle
movsb
mov
outsl
push
aam
pushf
daa
sub
jne
fwait
add
and
out
fidivrl
mov
lret
mov
sbbl
cwtl
int
cmp
cmpsl
test
in
inc
out
lret
popa
roll
cmp
push
mov
notl
xchg
adc
mov
push
xor
and
xchg
lock
test
int
ds
dec
mov
stos
cmpsl
int3
sbb
push
enter
dec
pop
and
bound
sti
rcrl
popf
mov
jo
cs
negb
and
rcrb
add
mov
movb
ror
mov
andl
jo
inc
call
mov
popf
inc
xchg
movsl
xchg
dec
and
lea
aas
pop
mov
roll
sub
jecxz
cld
cwtl
jae
rorb
pop
test
in
mov
pop
pop
push
loopne
test
sbb
out
cmp
adc
xchg
movsl
inc
add
aas
js
insl
mov
out
in
push
stos
add
xor
sti
movsl
aad
dec
lods
test
dec
xchg
hlt
ja
push
or
xor
stos
out
inc
inc
idiv
xor
loope
jbe
gs
lret
xchg
mov
leave
das
add
mov
rcr
sub
xor
lcall
stc
xor
outsl
dec
cmp
insl
jge
sar
sti
sahf
push
sub
inc
mov
or
orl
sub
add
iret
lret
rcrb
jp
clc
mov
cmp
mov
in
js
adcb
mov
fwait
mov
pop
jbe
into
xor
push
test
sti
pop
adc
lret
or
push
hlt
pop
mov
mov
insl
mov
push
scas
cld
out
xchg
xchg
je
repnz
stos
mov
jp
nop
adc
mov
shll
cwtl
int3
sbbb
adc
mov
mov
ljmp
push
mov
inc
in
jecxz
fnstenv
lods
mov
sbb
ret
inc
movsl
add
and
fsubrl
js
cltd
sarb
loopne
jecxz
leave
fwait
and
cmp
rcrl
jns
stos
cmp
test
enter
ret
roll
repz
dec
mov
add
push
add
pushf
les
cmp
mov
stos
jnp
dec
cmp
insb
aas
cmp
mov
out
hlt
sbbb
popa
leave
hlt
dec
clc
ds
shlb
enter
lahf
bound
jle
and
hlt
mul
adc
cltd
dec
fists
out
pop
cwtl
sub
push
pop
xchg
inc
pop
push
lods
jl
jl
jmp
insl
push
in
ret
jmp
push
push
cmp
push
cmp
add
outsb
test
test
add
sarb
out
mov
mov
pop
or
cltd
mov
les
scas
jge
mov
mov
pop
mov
mov
sbb
jno
call
scas
jne
call
out
push
push
push
aad
call
xchg
jnp
push
sub
push
lret
inc
sbb
cltd
pop
or
in
xchg
jl
insb
roll
mov
cld
inc
lret
daa
push
or
addr16
les
mov
adc
dec
scas
mov
dec
hlt
insb
in
aas
inc
mov
or
pop
or
xchg
or
es
jp
sbb
mov
repz
fldenv
or
pushf
arpl
insb
pop
imulb
sub
xlat
lods
mov
add
fcoms
or
push
jp
inc
adcl
test
xlat
hlt
pop
pushf
push
sbb
test
add
mov
movsb
lods
and
ret
mov
dec
ja
shrb
call
cmp
fidivl
ljmp
mov
pop
push
in
jl
dec
sti
jg
add
hlt
mov
shlb
dec
adc
cld
in
push
mov
sbb
mov
imul
shrb
mov
or
jo
pop
mov
mov
rcrl
add
sbb
mov
idivl
nop
add
xor
fimull
shlb
insl
or
jl
dec
ljmp
hlt
jo
sbb
pop
dec
push
test
adc
inc
aaa
test
fwait
pop
dec
in
xor
or
ret
mov
and
pop
out
dec
aaa
sbb
jg
shlb
sbb
mov
mov
sub
out
pop
adc
pop
mov
lret
push
test
repnz
mul
in
cld
mov
movsl
jge
pop
enter
jns
loopne
daa
sub
scas
jae
lea
or
jmp
hlt
or
outsb
push
mov
push
push
insl
mov
sbb
cmp
jne
mov
pusha
dec
mov
mov
sbb
add
mov
mov
out
add
shll
add
or
fisubrl
arpl
movsl
jp
punpckldq
lcall
and
mov
aaa
pop
jecxz
sbb
rcr
ss
cmp
dec
test
xlat
lock
add
add
and
mov
pop
mov
inc
stos
and
pop
out
rcl
je
xchg
mov
xchg
push
cmp
push
lds
out
ret
lcall
add
add
add
sub
popa
add
pop
add
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
movsb
mov
add
mov
add
mov
