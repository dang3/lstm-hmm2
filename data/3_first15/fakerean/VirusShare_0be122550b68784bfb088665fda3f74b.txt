push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
add
mov
mov
or
mov
mov
imul
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
repz
jae
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
cmp
push
mov
mov
inc
jmp
fldt
push
aas
aam
es
in
jge
cmp
xorb
sti
pusha
inc
mov
xchg
orb
call
inc
adc
jb
into
cs
arpl
stc
call
js
pop
xchg
pop
fucomp
addr16
mov
aad
ja
stos
jo
fwait
pop
mov
fdiv
inc
ds
mov
sub
pusha
scas
xchg
push
je
pop
jle
aas
aad
ja
push
addr16
cmpsl
shll
jno
cmp
or
or
dec
mov
sub
adc
lock
jp
inc
push
movsl
pop
jecxz
pusha
and
inc
mov
cltd
lcall
addl
or
xor
jle
mov
mov
xchg
add
adc
xchg
rorb
stc
imul
inc
sub
sahf
mov
adc
pushf
pusha
in
clc
or
fcmovb
ds
jno
ret
testb
ja
mov
in
repnz
jno
int
or
sub
pop
and
test
pop
stos
cmp
dec
lcall
push
mov
insl
cmp
lret
push
stos
cmp
push
cmp
inc
test
pop
or
lcall
bound
push
data16
and
test
adc
mov
jp
push
sbbb
aad
lcall
lahf
push
cmp
pop
fwait
mov
pop
cmp
popa
test
rcr
pop
les
fidivrl
mov
mov
int
test
sbb
add
adc
and
mov
shl
mov
sahf
xor
in
xor
xchg
sub
adc
pop
push
mov
jae
sub
mov
test
std
fldcw
pushf
call
pop
subl
dec
arpl
jg
loopne
pop
and
leave
call
push
jg
lcall
mov
ljmp
pop
add
mov
pusha
and
adc
and
jbe
or
out
pop
push
test
outsb
push
lds
pop
pop
mov
psubd
sar
cmpsl
arpl
mov
mov
dec
pop
rcrl
scas
dec
jecxz
xchg
ficompl
jb
enter
cwtl
pop
push
sbb
push
sbbl
sbb
int
pop
cwtl
dec
sbbl
xchg
imul
mov
jp
stos
adc
xor
xchg
fidivrl
sarb
repnz
stc
btr
pop
idivl
inc
das
stos
mov
popa
sbb
cmc
mov
jnp
fs
lea
push
lea
test
std
call
stc
push
cs
or
pop
sub
or
das
xchg
mov
out
or
test
aad
mov
sub
cwtl
outsl
and
ljmp
xor
andl
outsl
adc
mov
addr16
inc
and
or
les
rolb
or
scas
fmull
iret
add
fs
adc
jmp
add
je
add
sbb
rcrl
cmp
sub
pop
and
repz
sbb
adc
push
or
jge
xchg
push
ret
lret
sbb
xchg
mov
mov
add
sub
insb
nop
add
aas
jp
jnp
mov
mov
mov
mov
int3
iret
mov
inc
stc
leave
pop
cmp
xchg
pop
cmp
pop
pop
jge
lds
loope
daa
mov
lcall
das
in
gs
ret
sub
sub
enter
dec
icebp
adc
mov
cmp
enter
add
fwait
in
sub
fdivrs
shrl
push
movsb
or
mov
cld
lds
xchg
aam
int
shll
outsb
mov
and
or
cmp
xchg
add
sbb
mov
sbb
inc
jmp
test
xchg
xlat
and
mov
sbb
sub
and
adc
pop
mov
xor
ss
xor
je
pop
jnp
jp
scas
jg
adc
jne
push
jle
fs
mov
mov
popf
adc
jle
das
push
cld
mov
mull
xor
stos
outsb
out
js
in
or
mov
mov
xor
out
test
or
es
outsl
into
jle
mov
repz
xor
out
inc
rcll
aaa
clc
xor
dec
push
dec
sbb
push
xchg
sti
loop
xchg
lods
lods
jae
pop
pop
push
insl
mov
popf
sahf
adcb
dec
jae
xor
mov
daa
shll
dec
mov
les
cmpsl
out
sahf
sahf
mov
push
cld
lret
adc
jp
test
cli
fcompl
sub
cmpsb
xchg
call
loop
rol
repz
push
sub
dec
jnp
ds
sub
mov
jmp
or
jmp
push
gs
jns
sub
pop
pop
xchg
idiv
mov
lock
mov
imul
add
pop
dec
inc
cmp
and
dec
out
mov
and
lds
jecxz
cmc
dec
ja
das
in
icebp
xor
xchg
clc
test
mov
xchg
js
xchg
and
xchg
rcr
mov
outsb
pop
movsl
pop
adc
push
mov
mov
int3
arpl
and
lret
and
data16
fisubrl
shrb
pop
mov
scas
xor
jb
fwait
inc
sbb
mov
adc
test
movsbl
out
or
cmp
mov
loopne
mov
push
xor
fwait
push
fisubs
jmp
jo
dec
push
mov
inc
addr16
into
adc
popa
loope
cmp
xor
pop
dec
inc
outsl
push
imul
jnp
cmp
and
lret
jmp
imul
sahf
inc
dec
lock
pop
fstpt
dec
lret
cld
sbb
cs
in
out
pop
sbb
inc
dec
and
cmc
or
imul
push
or
push
addr16
movsl
pop
xor
mov
addr16
mov
and
jecxz
hlt
popf
insb
sbb
mov
popa
lods
test
icebp
sbb
fwait
xchg
push
dec
test
mov
test
mov
mov
cwtl
das
mov
xor
into
mov
out
xor
mov
jne
adc
sub
or
loop
add
arpl
in
pop
test
or
and
sahf
xchg
das
xor
dec
ret
push
inc
sbb
push
scas
ljmp
sahf
add
or
cmp
out
push
push
insb
cmp
test
push
xor
xor
jnp
mov
arpl
mov
aaa
xchg
imul
push
pop
sbb
mov
ret
out
cmp
mov
es
or
out
lds
in
cmp
xor
mov
add
cmpsl
xor
outsb
fcoms
in
mov
cltd
xchg
mov
xchg
push
jl
mov
repz
or
xor
movsb
pop
dec
xor
jmp
fcoml
sti
popa
xor
mov
xchg
mov
sti
and
insl
out
js
outsb
ljmp
je
ror
dec
push
xor
adc
mov
push
cwtl
aad
xlat
push
dec
sbb
sbb
inc
jge
fdivrs
jle
andb
hlt
adc
ja
cli
sub
or
stos
push
rolb
add
test
repz
lock
pop
xchg
int
stos
push
inc
mov
adc
or
shll
cld
sub
mov
sarl
xchg
mov
push
sti
pusha
cmpsb
xchg
gs
xorl
mov
nop
add
shrb
or
mov
mov
loopne
or
std
negl
xlat
out
push
fnstcw
mov
sub
push
fisttps
aaa
xchg
int
mov
arpl
out
sti
xchg
xchg
cmp
pop
jne
lcall
adc
movsb
xor
popf
xchg
insb
mov
addb
add
lcall
fimull
mov
hlt
push
leave
mov
sbb
popa
pop
jnp
ficoml
inc
push
mov
mov
lods
jbe
fwait
jmp
jo
or
mov
dec
jno
cwtl
loopne
out
dec
mov
mov
loopne
jecxz
sub
fstpl
cmp
dec
jge
inc
push
gs
mov
loopne
fwait
mov
ljmp
dec
shlb
pop
cmpsb
xor
clc
outsl
mov
push
loop
aaa
push
pop
inc
jbe
mov
in
pop
lret
inc
sbb
repnz
push
repz
gs
xor
aas
pop
sbb
add
inc
das
outsl
mov
and
cwtl
data16
sarl
imul
add
lret
imul
into
test
sbb
sub
fidivl
sbb
sti
sbb
xchg
push
xor
mov
xchg
jne
dec
push
out
adc
repz
scas
int
sub
into
js
jo
jnp
push
jnp
lock
pop
push
mov
in
xor
dec
loopne
outsb
sub
loopne
or
xchg
pop
push
push
subl
fistl
mov
jb
inc
mov
in
inc
pop
sub
cwtd
inc
adc
jecxz
insl
lahf
jp
test
into
inc
lods
push
xchg
or
psrad
stos
or
int
jmp
popf
or
fistpll
mov
add
dec
and
je
aad
test
mov
inc
mov
jnp
adc
pusha
fisttpl
adc
or
mov
enter
xchg
jmp
test
cmp
popf
adc
dec
push
mov
push
pop
pop
mov
push
roll
ss
in
cs
imul
fucomp
clc
shl
fbld
xorl
fnstenv
repz
in
jbe
push
decl
sti
lahf
lods
xchg
std
cmp
fsubl
push
mov
jge
in
mov
and
in
inc
adc
mov
jb
sbb
int3
ds
jle
ja
shr
pop
add
mov
test
jo
fnstsw
pop
movb
or
out
or
mov
add
xchg
loop
push
insb
clc
movsl
add
mov
mov
inc
repz
loop
cmp
das
mov
mov
test
cmpsl
add
movsl
adc
cmp
cltd
inc
inc
inc
jnp
faddp
mov
push
sbb
dec
push
mov
xchg
jo
xchg
cmp
lcall
sub
fwait
roll
jne
xor
inc
test
xchg
jo
sub
addl
or
and
cmpsb
lods
xor
in
inc
xlat
aas
pop
pop
outsl
sbb
repnz
lods
insb
sti
fbstp
pop
enter
lds
sbb
cmp
inc
jns
sbb
xchg
mov
cmp
addr16
xor
sub
xor
and
mov
psrld
jns
fadd
popa
push
aad
imul
mov
add
xchg
mov
repz
push
jb
jns
xor
mov
out
repnz
into
inc
push
in
aam
out
cmp
push
mov
xor
pop
call
adc
mov
mov
cld
push
cmp
aad
bound
inc
mov
sbb
inc
cli
in
and
pop
and
pusha
loopne
pop
sub
pop
paddd
push
clc
push
jp
fs
xchg
xor
inc
lret
lea
ret
jp
imul
mov
ucomiss
mov
lret
mov
or
es
aas
pusha
mov
xchg
push
mov
mov
shlb
ja
ljmp
mov
mov
fstpl
insl
mov
sbb
rol
cli
jo
mov
cwtl
jp
xchg
mov
cld
sub
mull
sub
xchg
mov
out
cmc
inc
fs
xchg
adc
addb
testb
pushf
cli
fildl
mov
insb
push
test
call
flds
cmp
inc
movl
dec
xchg
iret
or
mov
mov
mov
push
mov
arpl
push
and
nop
fisttpll
mov
cmc
pop
push
loop
ljmp
pop
lods
add
mov
sbb
adc
sbb
inc
mov
xchg
insb
inc
stos
inc
in
adc
sub
mov
arpl
sbb
add
xchg
mov
adc
cmc
cmp
and
mov
jo
dec
and
ss
clc
lret
jno
rclb
push
sti
dec
dec
pop
loope
jnp
mov
jle
push
subl
fistpl
push
rorl
jb
mov
repnz
repnz
xor
mov
or
ret
dec
and
sub
stos
enter
mov
fdiv
inc
push
sahf
cltd
mov
loope
cmpsb
mov
inc
pusha
daa
dec
addr16
xor
sarb
push
shl
and
and
inc
pusha
xor
cmp
inc
cmp
jns
adc
push
push
mov
mov
call
pop
mov
pop
jno
inc
add
fcompl
out
lods
dec
pop
inc
and
mov
dec
sub
icebp
imul
andb
jmp
pop
cmpsb
fld1
pop
aad
add
in
sbb
adc
rol
xchg
cmpsl
xchg
push
cmpsl
lock
or
pop
leave
nop
xlat
push
int3
pop
into
mov
cmp
addb
test
sub
or
sbb
xor
cltd
movsl
shll
jmp
arpl
pop
aad
inc
mov
mov
mov
fdiv
rcll
pop
fldenv
insb
sub
lods
xchg
stos
or
xchg
addr16
sbb
lds
add
push
inc
pop
adc
jno
mov
mov
es
rol
imulb
jmp
pusha
je
ljmp
pop
mov
jns
mov
mov
andb
xchg
push
imul
ret
andl
test
seta
andb
int3
jge
inc
mov
adc
adc
imull
popa
cli
cmp
dec
bound
leave
mov
adc
mov
pop
mov
lock
mov
lds
sub
loope
lahf
hlt
lods
pop
fs
sbb
fcmovu
fadds
mov
daa
stos
xor
push
xor
jp
loope
sahf
cld
jae
adc
shll
pop
xchg
in
mov
fsubr
cwtl
jl
sbb
rclb
cmp
cmc
mov
xor
inc
pop
out
je
mov
cmp
out
pop
cmp
adcl
adc
xor
xchg
jmp
pop
adc
sbb
imul
clc
pop
roll
or
jmp
testl
loope
addr16
lahf
leave
stos
sbb
cmp
cmpsl
or
dec
dec
push
sub
std
xchg
add
or
dec
pop
imul
out
or
xchg
mov
add
out
dec
popa
stos
mov
clc
sahf
xorb
cld
jb
rorl
cmp
cmpsl
mov
mov
repz
stos
jnp
mov
js
scas
jge
inc
fimull
and
lods
mov
lods
mov
fwait
iret
sub
dec
xchg
movsb
xchg
pop
or
in
jmp
sub
and
fidivrs
lds
negl
mov
mov
lds
leave
icebp
or
and
xchg
jns
mov
loop
lahf
sub
mov
popa
pusha
nop
push
scas
leave
ss
mov
mov
outsl
pop
test
insl
lea
mov
out
out
adc
add
xchg
dec
notb
insb
add
xor
cli
xlat
js
popa
lret
hlt
xchg
mov
and
push
sbb
and
out
shrb
in
jmp
pop
jg
repz
sbb
in
add
mov
ret
mov
xchg
cmp
push
add
add
aas
mov
push
dec
cmpsb
out
mov
jmp
inc
push
jp
pop
push
mov
jge
push
popf
inc
adc
xchg
cmp
xchg
adc
mov
sub
adc
jbe
ret
mov
movsl
xor
pop
cmc
push
mov
jbe
and
push
mov
mov
push
and
mov
cltd
dec
lea
stos
inc
adc
scas
andb
sbbl
adc
je
jl
aam
scas
cmp
daa
add
fnstcw
cmpsl
or
fnstsw
mov
lcall
shlb
arpl
int3
stos
pop
cmp
out
add
mov
imull
xchg
and
leave
lods
loope
pop
xchg
pushl
out
aam
mov
push
mov
mov
sti
pop
loope
mov
aam
pushf
mov
ds
in
sub
jle
push
jae
ret
sub
cmpsb
push
xchg
xchg
push
repz
ja
inc
xchg
pop
fsubr
inc
pcmpgtw
aad
push
cwtl
cmp
cs
inc
jae
xor
inc
mov
sbb
sub
cmc
idiv
push
jecxz
test
ror
mov
or
orb
push
xchg
mov
pusha
xor
fcomps
sbb
jl
sbb
shll
pop
js
fwait
sbb
divb
lahf
inc
xlat
jnp
ret
pushl
loop
mov
mov
std
add
in
cwtl
call
dec
shlb
orl
pop
sbb
or
or
pushf
aam
movsb
cmp
xor
ss
icebp
in
add
lahf
jmp
add
xchg
pop
lods
dec
int
jo
pop
movsb
dec
inc
stos
xchg
or
fwait
lcall
pusha
mov
es
sub
dec
loopne
xor
inc
cmp
addr16
sahf
shl
mov
lcall
popf
xchg
popa
out
jne
sbb
insl
jb
insb
inc
leave
push
shlb
insl
mov
fisttps
aam
fwait
sub
xor
add
mov
xchg
aam
adcb
cmp
shll
pop
ret
or
cmp
pusha
xchg
cmp
pushf
repnz
sub
jg
fistps
jge
jo
inc
dec
mov
das
clc
inc
frstor
push
pusha
and
pop
xchg
pop
jg
push
je
xchg
cli
ret
and
mov
cli
stc
sbb
mov
stos
inc
in
mov
test
xchg
jmp
cmp
push
imul
mov
xchg
mov
xchg
pop
sub
or
shrl
dec
cmp
mov
push
sub
mov
adc
aam
push
push
mov
sub
xor
stc
out
inc
arpl
mov
sub
mov
push
test
jbe
shll
ret
jo
xor
mov
sbb
aaa
mov
mov
outsl
cmp
daa
and
mov
les
mulb
mov
dec
and
les
aam
orw
add
sub
cmpsb
mov
cmp
das
je
xchg
not
call
push
imul
adc
jbe
adc
sub
cmpsb
shlb
shlb
stos
ror
fs
dec
out
sub
pop
dec
push
jns
movsb
push
mov
jne
pop
aas
inc
addr16
and
push
ljmp
jae
xchg
stc
rcrl
xor
ficoms
icebp
jns
mov
lea
test
dec
dec
popa
sbb
jb
lock
dec
sbb
sti
mov
mov
or
test
popf
pop
pop
xchg
int3
pop
jno
lods
mov
mov
cmp
sub
jo
aas
fnstsw
dec
lock
mov
mov
add
andb
stos
ror
push
loope
inc
movsb
cmp
int
shrl
lds
pop
rolb
lock
mov
sub
movsb
mov
mov
inc
rorb
rolb
subl
enter
scas
nop
xchg
inc
push
push
dec
fnstsw
jns
sub
or
cwtl
xor
aad
rorb
stos
test
in
rorb
sub
mov
orl
lods
push
or
rorb
mov
clc
adc
push
sti
and
repnz
mov
insl
aam
iret
inc
rcr
int
mov
pop
repz
call
fcmovu
mov
fstl
jp
jns
pop
add
adc
test
jo
hlt
inc
cwtl
cmp
cwtl
dec
mov
cmp
lods
sub
aas
push
fmull
or
mov
jmp
pop
fwait
mov
cmc
xor
mov
insb
leave
in
sub
ljmp
fnsave
inc
mov
fstpt
popa
es
sbb
icebp
call
jg
popf
jmp
dec
hlt
insl
pop
push
jg
dec
lock
mov
push
jb
xchg
jo
stos
push
mov
pushf
mov
outsl
add
add
or
pmaxsw
repz
xchg
test
sub
jnp
les
pusha
andb
data16
dec
ss
cwtl
cmp
loope
into
cld
jo
pop
add
push
mov
jg
repz
lcall
or
mov
cmpl
repnz
jbe
pop
push
loope
lods
push
sbb
push
stos
outsb
mov
or
negb
cld
xor
test
pop
or
dec
sbbb
mov
aas
mov
fidivrs
adc
sti
inc
lods
adc
cmp
ss
push
mov
pushf
fdivrs
enter
adc
imul
inc
sub
jbe
das
push
inc
pop
mov
xor
xor
jg
addr16
enter
inc
inc
pop
hlt
jg
push
scas
shrl
int3
dec
adc
mov
sub
fdivl
sub
push
xor
fisttpl
pusha
ret
xor
fwait
jmp
mov
pop
and
and
inc
jmp
adc
jl
add
leave
fwait
rcrb
into
sub
xlat
dec
mov
aas
movsb
jle
subb
rorl
or
push
xorps
xchg
popf
mov
or
bound
insb
cmpsb
push
mov
in
test
std
xchg
in
add
xor
rcl
ret
aad
cld
push
mov
loop
inc
dec
add
and
mov
fmuls
mov
mov
lea
xor
lahf
dec
and
mov
dec
test
xor
adc
jae
into
mov
sahf
int3
fimuls
in
insb
mov
mov
inc
imul
xlat
add
sub
inc
sbb
inc
add
int3
push
je
mov
mov
out
ljmp
xor
dec
jmp
cltd
inc
ds
sub
push
sub
iret
or
and
repnz
or
jle
and
mov
out
movsb
shll
mov
jge
int3
dec
nop
push
xor
fstpl
fbstp
clc
aaa
jmp
pop
or
aaa
inc
sbb
mov
adc
inc
and
jl
xor
ja
push
and
stc
arpl
test
dec
stos
push
iret
std
push
es
adc
jae
mov
push
and
clc
inc
js
cmp
cmp
rcrl
inc
sarl
inc
into
out
dec
or
fnstcw
dec
pop
jecxz
mov
adc
mov
or
test
adc
add
adcb
dec
mov
or
pusha
mov
aad
jmp
inc
ret
stos
cltd
inc
xchg
dec
sbb
pushf
in
sarb
jb
aaa
lahf
mov
sbb
push
push
adc
sbb
mov
andb
dec
fsubp
insl
cmpl
and
popf
pop
das
daa
rcrb
pop
sarl
xchg
mov
sbb
icebp
dec
in
mov
in
in
test
shl
mov
std
stos
cld
sbb
call
mov
pop
sbb
shlb
cmp
mov
enter
mov
jno
mov
not
add
xchg
out
testb
mov
adc
fucomip
jmp
scas
mov
sti
mov
repnz
pop
fldcw
xor
fucomip
xchg
sti
maskmovq
notl
sub
xor
cwtl
and
jl
add
jns
push
aam
push
test
andb
sbb
fwait
sbb
cmpsl
push
testl
int
andl
jnp
dec
jg
sub
mov
fcoml
fistl
cmp
jns
inc
adc
loop
push
sbb
rcll
xor
xchg
pop
cs
add
shr
mov
adc
cmc
pop
cmp
rolb
mov
push
ds
leave
jl
cmp
scas
and
xor
jo
daa
pop
xchg
jbe
mov
inc
stc
jecxz
inc
sbb
mov
xchg
lods
push
add
and
ds
enter
add
cld
mov
lcall
xchg
rolb
cltd
pusha
popf
push
push
sarl
fs
dec
adc
inc
mov
and
loopne
lods
sub
test
cmp
cli
cmp
outsl
nop
clc
pop
mov
or
xchg
pop
add
in
leave
mov
iret
aad
cmp
push
enter
nop
mov
ret
jl
arpl
sbb
sbb
andb
cmpsb
pusha
add
jae
mov
pop
push
dec
pop
ror
mov
cmp
xchg
leave
sbb
adc
cmc
lcall
inc
sti
xchg
ret
or
fiadds
jo
push
jne
jg
sbb
in
inc
or
jne
in
mov
dec
push
out
pushf
mov
dec
fiadds
mov
test
fsubrl
repz
cmpsb
incb
adcb
push
dec
xor
sbb
js
mov
repnz
ss
movsb
loope
mov
xor
sub
cmc
jno
push
dec
xchg
fldl
fsubr
inc
ds
rorb
arpl
sub
imul
in
sub
cmp
cmp
sbb
add
out
loope
inc
add
test
cwtl
insb
xchg
mov
add
push
lock
out
push
insl
movsl
imul
ja
lea
repz
into
daa
mov
scas
mov
jnp
arpl
jne
xchg
sbb
test
clc
sub
lcall
inc
enter
pop
mov
cmp
shll
shll
xchg
sbb
insl
xchg
jns
in
pushl
mov
aas
mov
test
fsub
mov
cwtl
jae
mov
pop
out
imul
test
mov
add
dec
and
fs
shl
lods
ret
mov
jnp
dec
cmpsb
sbb
jge
push
sti
push
dec
outsb
fcmove
and
jns
sbb
movsb
ljmp
xor
cmp
das
push
test
mov
faddl
arpl
jns
ja
arpl
inc
test
fdivs
pop
pop
xor
add
mov
add
ret
loope
pop
scas
popf
or
xlat
push
cmp
or
and
jmp
or
mov
cld
clc
cmp
xlat
rcl
call
idivb
xor
jecxz
mov
ret
js
xchg
xchg
push
movsl
rol
imul
jmp
sarb
mov
and
pop
pusha
clc
pop
dec
shlb
or
fdivl
sbb
adc
inc
and
pop
scas
pusha
add
sahf
push
adc
shll
pop
mov
insl
inc
cmp
gs
imul
ljmp
loopne
lods
inc
sub
jnp
jmp
aad
pop
pushf
addr16
mov
out
jno
fnstsw
inc
jb
xchg
pop
lcall
cmc
out
sub
pop
les
arpl
imulb
test
push
in
insl
adc
nop
fldcw
adc
cmp
mov
mov
and
testl
jns
mov
shrl
adc
mov
imul
iret
push
out
sub
mov
outsb
repz
jb
lock
jp
les
aad
mov
fisttps
mov
negb
mov
lock
in
inc
daa
std
addr16
sub
jne
mov
dec
les
mov
push
aad
and
fs
icebp
inc
sub
mov
int
inc
cli
jns
cmc
mov
push
mov
jae
or
fstps
jge
or
ds
gs
sbb
cmp
lret
fsubrs
scas
cmp
adc
jge
mov
sbb
test
xor
incl
aam
and
push
bound
flds
sbb
add
xchg
mov
xor
dec
sar
scas
pop
aad
inc
in
sub
pop
pop
jno
jns
loope
add
lds
sarl
adc
lea
das
cmp
int3
cmp
repnz
mov
dec
aad
hlt
add
out
aas
cld
cmp
imull
pop
xor
sbb
arpl
dec
mov
dec
jb
cli
adc
adc
inc
sub
mov
cli
sub
xchg
lods
push
sub
inc
mov
inc
dec
in
in
jns
in
xchg
mov
or
fcoml
mov
mov
fs
repnz
outsb
sub
jp
cmpsb
js
push
or
addl
jmp
sub
pop
sti
sti
adc
movsb
daa
gs
dec
xchg
cmp
inc
mov
lahf
cmp
in
icebp
movzbl
aas
out
aad
or
iret
nop
push
push
nop
and
cmp
push
clc
add
jp
inc
lods
sbb
rorb
xor
dec
fwait
out
adc
xchg
or
cmp
into
pop
mov
outsl
repnz
mov
fsts
test
mov
mov
sahf
shrl
xor
sbb
xchg
sub
sbb
push
push
jg
in
stos
xchg
xchg
dec
sti
xor
movl
daa
xchg
popa
cld
xchg
push
sbbb
mov
jae
outsb
cli
js
cmp
insb
pop
inc
in
inc
test
loopne
push
xlat
push
mov
daa
jne
out
fidivrs
jp
mov
mov
ss
out
sar
rol
mov
imulb
pop
jmp
xchg
lds
push
push
repz
sub
cmp
ficoms
inc
push
dec
push
xor
adc
dec
and
ret
mov
dec
repnz
dec
xchg
cmp
movsb
cltd
js
mov
sbb
out
cltd
push
mov
in
mov
in
jecxz
outsl
sub
jp
into
xor
sub
push
cld
scas
push
push
jle
dec
sub
pop
ret
inc
sbb
into
insb
sub
popa
mov
nop
mov
fnstcw
pop
sub
fs
and
and
dec
dec
and
adc
add
mov
jp
or
pop
or
sub
dec
mov
pop
mov
fs
mov
mov
sbb
ds
loop
pusha
xchg
push
in
and
mov
popl
lock
mov
int3
fisubrl
xchg
pop
cltd
sbb
xchg
dec
pop
cmp
dec
and
aam
movsl
es
jl
inc
in
xchg
ror
mov
mov
mov
pop
sbb
mov
icebp
sbb
loopne
lahf
sub
xchg
sub
ds
shrl
cltd
repnz
jne
cmp
mov
jmp
adc
loop
popf
mov
mov
inc
jno
shlb
jo
push
xchg
ljmp
jmp
add
cmp
cltd
adc
fildl
je
icebp
adc
in
enter
and
out
lret
gs
xchg
dec
out
push
fcomp
inc
imul
inc
lcall
adc
dec
call
es
pop
fs
adc
adc
inc
mov
movsl
xchg
addr16
xchg
dec
mov
movsb
je
clc
xor
jno
js
clc
repnz
bound
dec
and
inc
ljmp
fs
jo
jae
mov
repnz
in
sbbl
sbb
daa
rcll
fimuls
dec
pop
inc
and
adc
por
mov
add
incl
aaa
sub
sub
hlt
push
push
sub
adc
pop
jp
sbbb
mov
in
add
inc
or
dec
push
sbb
rolb
out
xlat
inc
push
sub
dec
mov
outsl
mov
in
mov
pop
xchg
leave
mov
test
orb
imul
mov
data16
sub
sub
add
pusha
jae
imul
jno
cmp
add
lock
test
mov
mov
jg
out
mull
out
sti
mov
cli
add
hlt
push
add
rcrl
arpl
insl
add
arpl
jmp
movsb
fiadds
pop
or
pusha
div
add
mov
movsl
nop
dec
cltd
ret
adcb
int
imul
jo
stos
stos
cli
cmpl
jo
pop
and
push
clc
add
sbb
shll
sbb
ss
popa
ret
pop
jne
daa
and
daa
roll
xchg
aad
inc
adc
jge
aas
push
pusha
jecxz
test
jae
jne
mov
xor
sti
adcb
in
mov
dec
mov
push
popf
pop
pop
push
cwtl
mov
sub
add
ljmp
loope
lods
sub
adc
cmpsb
xlat
imul
dec
ljmp
mov
xor
xor
add
xchg
push
sbb
sahf
dec
pop
mov
mov
shl
cmpsb
les
and
in
push
adc
bound
sahf
mov
movsb
mov
or
and
dec
mov
cmp
add
mov
fistpll
iret
rcrb
inc
cmpsl
sbb
pop
ret
jge
cli
div
sub
mov
ss
aam
cmp
inc
outsb
push
pop
sub
popf
shrb
mov
rorb
cld
pushf
push
xchg
mov
dec
or
cmpsb
leave
aad
adc
push
jo
jle
adc
dec
daa
test
and
or
dec
xor
inc
pop
inc
sbb
mul
vmovdqu
loopne
dec
fcmove
jb
rcrb
mov
cmp
pop
mov
add
pusha
sbb
add
or
jecxz
or
or
gs
lea
test
shl
pop
rcr
add
add
shr
test
jnp
sbb
mov
add
je
adc
loop
mov
xchg
or
xor
jle
push
sbb
adc
loopne
or
fdivs
add
jne
and
je
push
idivb
adc
jmp
popf
xchg
aas
mov
inc
fxch
into
mov
in
and
repz
mov
push
cmpsl
mov
or
leave
jmp
mov
cmc
mov
mov
xorl
and
mov
not
push
shr
push
xchg
or
rcrl
rcll
xlat
jecxz
jmp
testl
add
mov
hlt
bound
leave
mov
out
dec
js
push
xchg
repnz
movsb
mov
shl
mov
andl
xor
jge
cmp
shl
sub
loop
fidivrl
out
sub
rolw
xchg
xor
fwait
jbe
cmp
inc
mov
cwtl
lret
jge
jae
push
xchg
cmp
arpl
mov
sub
fistpll
mov
push
xor
leave
stos
movsb
cmpsb
cltd
ljmp
shll
inc
test
lea
and
rol
mov
dec
fsub
sbb
sub
bound
dec
cmp
sub
negl
sub
repz
imul
mov
xchg
push
mov
fbld
add
lahf
mov
xchg
clc
sarl
jle
mov
in
repz
notl
pusha
out
imul
sbb
orl
adc
out
shlb
in
stos
jle
adc
and
or
loop
mov
popa
inc
sbb
shll
repnz
mov
pushf
popa
push
divb
lock
cmp
int3
cmp
fwait
mov
jae
mov
jnp
movsl
jl
outsl
pop
clc
mov
and
xchg
icebp
das
pushf
fistpll
les
add
xor
or
out
and
inc
repz
fwait
shrb
ljmp
ljmp
adc
inc
lret
xchg
imul
cld
das
push
cld
or
pop
cwtl
movb
and
sub
push
dec
std
jle
lret
ds
hlt
rorl
fnstsw
nop
cs
inc
mov
jno
push
push
inc
xor
mov
or
mov
test
xchg
lock
pop
inc
or
fmuls
push
jo
out
fs
mov
data16
mov
sbbb
lds
xchg
sbb
sar
push
dec
shrl
push
test
notb
dec
adc
cmp
xchg
jae
movb
adc
leave
inc
mov
or
punpckhdq
popl
mov
push
popa
lcall
mov
adc
nop
or
mov
push
sarl
mov
mov
push
push
test
mov
dec
movsb
pop
shll
sbb
clc
adc
out
push
aam
push
jne
or
pop
pop
iret
cmp
or
cmp
gs
imul
ss
inc
mov
in
add
sbb
sbb
rcrb
inc
mov
into
sbb
ficoms
int3
mov
xchg
lods
pop
xchg
jnp
stos
xor
inc
sbb
icebp
sub
and
cmpsl
repz
adc
xchg
fs
sbb
fwait
je
xor
mov
shrl
nop
sbb
into
xchg
ljmp
inc
and
and
pop
pop
push
js
imul
mov
mov
jge
mov
and
aaa
mov
cmp
in
shlb
or
sbb
adc
stos
mull
in
adc
popf
cmp
imul
scas
or
inc
cmpsl
dec
leave
jo
filds
lods
jg
jl
dec
movsb
xchg
cmp
xchg
rorb
out
addb
in
mov
fistl
mov
adc
ret
test
into
negl
leave
js
fistpl
test
mov
pop
js
or
mov
sti
adc
stos
stos
mov
cwtl
fcompl
clc
add
jmp
mov
ds
mov
jge
jae
mov
pusha
push
pusha
xor
xor
cmp
outsl
cmp
ss
jnp
repz
cltd
cld
test
ds
js
xchg
fidivrs
jb
icebp
cltd
dec
push
mov
pop
dec
xchg
mov
test
cwtl
nop
sahf
test
pop
test
mov
inc
xchg
inc
sbb
fstps
nop
pop
sbb
push
push
inc
xchg
in
pop
cmp
add
scas
ds
scas
ja
andb
out
mov
xor
fstl
sbb
fs
sbb
lods
scas
or
add
repz
je
test
push
xchg
div
or
cld
lea
sub
jmp
xchg
mov
mov
lahf
inc
daa
ss
pop
sti
add
in
jle
cmp
pushaw
dec
loope
mov
push
outsb
dec
sbb
hlt
push
mov
push
es
ds
add
mov
mov
ror
shll
repnz
sub
stc
fcompl
rorl
imul
xor
jg
aas
lock
cltd
and
test
sti
sub
hlt
cmp
call
cmp
lret
cmpsl
jl
mov
mov
outsl
mov
add
in
jo
gs
adc
mov
adc
inc
and
lds
mov
adc
cmpsb
in
cwtl
xchg
mov
gs
ss
xchg
ret
adcl
mov
add
sbb
in
push
mov
loopne
gs
mov
push
dec
jne
pop
outsb
adc
cmpsl
orl
aaa
and
das
cmpsl
mov
inc
rol
add
dec
popf
cmp
and
clc
dec
pop
popf
orb
add
mov
mov
add
ds
and
or
addr16
lods
sbb
pop
dec
loopne
jnp
jno
pop
test
xor
cmp
out
sub
mov
loop
mov
inc
sbb
popa
xchg
add
add
add
hlt
lods
pop
or
or
push
adc
aaa
mov
loope
pop
stos
or
inc
test
adc
mov
xor
leave
dec
int3
sbb
cmpl
movsl
mov
cmp
add
sti
adc
xchg
sbb
inc
fstpl
gs
xchg
inc
adc
jl
push
test
xlat
cmp
cmpsb
jle
jae
fstps
push
mov
icebp
sub
lds
mov
and
pop
sahf
lret
sub
into
sbb
je
lods
cld
mov
out
out
inc
out
sbb
int
cmpsl
out
add
xor
call
mov
jge
cwtl
mov
daa
mov
push
ret
aam
xchg
xorl
ss
xor
lret
or
mov
into
shlb
pop
data16
inc
stc
sbb
push
sub
mov
push
cmp
mov
pop
imul
mov
push
pop
mov
divb
cmpl
cs
dec
movsl
cmc
push
fsts
inc
and
ret
adc
jns
scas
xchg
and
arpl
rcrl
out
adcb
mov
loope
stos
roll
cmc
sub
push
cmp
stos
mov
jno
je
movsl
aad
and
int3
mov
jmp
ret
test
nop
cwtl
xor
cmpsl
or
cmp
int3
mov
scas
leave
xor
andb
cmp
adc
enter
or
imulb
fstpt
jg
adc
push
push
jb
xor
sbb
xchg
mov
cmpsl
fsubr
rorb
minps
adc
sub
jp
js
mov
lret
jbe
push
mov
mov
sbb
push
gs
pushf
hlt
push
dec
movsl
adc
jnp
mov
jp
and
aas
sbb
pause
xchg
pusha
mov
fisttps
adc
in
sub
adc
add
dec
es
pushf
xor
push
mov
pop
mov
mov
stos
jnp
push
jb
andl
xor
xchg
cmpsl
int
popf
popf
incb
imul
xchg
sub
jne
out
jno
dec
sub
int
sbb
sahf
add
xchg
fisubrl
dec
xchg
mov
xchg
push
xor
call
in
js,pn
sbb
jns
imul
test
js
xchg
sub
test
xchg
fbld
insb
sbb
daa
out
jns
dec
cmp
push
call
lock
add
cmp
adc
test
push
mov
orl
loope
mov
dec
orl
popf
add
loope
mov
std
xorl
push
push
push
pop
sbb
lcall
mov
mov
lods
sbb
mov
stc
mov
daa
adcl
sbbb
testb
push
fs
mov
inc
lret
xchg
adc
leave
xor
out
mov
int3
mov
mov
test
pushf
mov
pop
scas
xchg
scas
jge
pop
xor
lea
jbe
pop
sbb
out
into
pop
adc
test
xor
das
mov
ss
push
test
jge
push
cmp
je
cmp
sub
loop
call
xor
xchg
pop
adc
adc
jecxz
jno
pop
test
fisubrl
mov
and
mov
push
xchg
sarl
push
cltd
insl
pop
shlb
out
jg
pusha
xor
cli
xchg
lock
lret
dec
fcoms
xor
and
lret
push
out
stos
ret
ret
daa
das
cmp
sbbl
mov
add
std
sub
xlat
test
cli
pop
pop
cmp
jg
mov
mov
mov
xchg
pop
pop
xor
jno
pushf
ljmp
and
in
cmp
lret
dec
xchg
popf
mov
sbb
sbb
call
jbe
stos
mov
cli
inc
sbb
cmp
or
rol
dec
or
cwtl
adcb
cmp
cmpsl
push
cmp
and
loope
sbbb
mov
addr16
push
xchg
or
sub
enter
cmc
and
mov
call
add
leave
inc
aam
lds
push
pop
cmp
push
test
adc
mov
xchg
push
mov
ja
rclb
lcall
jo
mov
arpl
xchg
into
push
imul
lret
cltd
mov
roll
add
push
jge
out
add
pop
or
or
jmp
in
push
hlt
aas
xchg
fisttps
sub
repz
std
loopne
cmp
cmp
fdivl
fstpt
dec
ret
insb
xchg
adc
adc
lods
sbb
out
sub
push
cmpsb
sbb
cmp
adc
test
cmp
cmp
pop
gs
insb
inc
fnstenv
dec
mov
jae
mov
imul
push
jmp
ljmp
or
test
insb
dec
lods
adc
jne
dec
hlt
hlt
mov
sbb
lcall
rorl
cs
stc
xor
ljmp
jge
lret
cld
jp
insb
cltd
or
aad
les
sti
lret
lock
fmull
mov
and
loopne
dec
xchg
adc
rclb
and
out
jae
fbstp
pop
dec
in
enter
mov
sbb
pusha
xchg
pop
xchg
push
test
mov
cmp
lock
xchg
inc
sbb
enter
sub
or
push
cmpb
int
mov
movb
cli
ja
jge
sbb
in
jl
pop
ss
dec
loop
xor
jl
stos
add
jp
call
lahf
pop
push
cmp
jae
sbb
lods
inc
scas
push
idivl
dec
mov
add
pop
lret
fbld
adc
mov
push
lahf
or
mov
push
dec
mov
loopne
in
cli
stos
lock
into
sbb
push
mov
enter
movsb
addb
fdivrs
cmp
sub
add
add
in
fwait
or
push
inc
movsb
sbb
insb
pop
ffreep
or
mov
or
inc
push
sbb
inc
fnstcw
pusha
ret
push
test
incl
psrld
stc
mov
push
pop
or
inc
insl
push
test
sub
sub
aam
push
scas
pushl
pop
dec
xor
clc
nop
fmul
rcrl
pushl
jmp
push
xchg
gs
cmp
pop
stos
mov
mov
les
sbb
out
sub
or
mov
push
stc
ljmp
aad
jg
leave
loopne
repnz
into
cmp
gs
test
cltd
das
cli
push
shrl
and
adc
inc
jle
pushf
decb
idiv
outsl
and
in
lcall
enter
pop
orb
enter
sub
lgs
or
js
mov
sbb
dec
push
lahf
adc
data16
push
orl
lds
mov
pop
test
adc
xchg
add
and
pop
clc
mov
xchg
addl
sbb
stos
mov
inc
rcrb
test
fcoml
xchg
xchg
xchg
mov
push
push
jp
into
mov
cli
mov
pop
lret
jbe
repnz
mov
lret
inc
pop
cmp
adc
pop
adc
lret
das
push
xor
out
add
pop
mov
push
mov
inc
xor
or
mov
movsb
sbb
call
sub
aam
inc
or
sub
adc
jle
enter
jo
xchg
mov
inc
cmpsb
fucomi
aad
enter
inc
mov
fxch
mov
cmp
je
jno
or
xchg
imul
jae
pop
jnp
lea
cmc
and
and
ljmp
push
jae
push
gs
and
sub
popa
pop
xor
sbbl
mov
stos
push
sbb
pop
movsl
hlt
pop
pop
repz
pop
push
lcall
xchg
sbb
mov
or
das
dec
jne
adcl
incb
ret
or
inc
jns
add
mov
and
jl
add
dec
ss
cmc
cli
not
fdivrl
repz
in
add
inc
xchg
mov
fcom
lock
std
lcall
lods
fnstenv
movsl
loope
or
cmp
pusha
cmp
and
sub
outsl
push
clc
cwtl
in
and
and
gs
subl
aaa
dec
sti
jns
lock
mov
add
xor
fcomps
hlt
and
xor
ss
cli
mov
jne
sbb
loopne
xchg
push
rcrl
mov
fcmovu
repnz
push
jmp
sub
je
mov
jno
xchg
pop
and
in
iret
aas
mov
push
push
jb
cmpsl
cmp
adc
dec
add
fsubr
push
popf
xchg
lock
pop
dec
adcl
inc
mull
add
mov
xorb
hlt
jp
inc
dec
filds
mov
mov
mov
push
fcoml
pusha
mov
and
fsts
popf
ss
jns
pop
sub
inc
add
xchg
xor
in
dec
xor
add
or
jge
fldt
mov
fwait
sub
pop
out
add
cmp
xchg
mov
fistps
xor
in
xchg
cs
and
stc
jns
jbe
jle
int
mov
push
cmp
sub
lock
mov
lea
hlt
aad
sub
scas
cmp
mov
dec
sub
cmpsb
frstor
lret
inc
mov
mov
dec
lds
cs
and
cltd
out
outsb
mov
pusha
mov
push
adc
jno
stc
and
dec
sub
imul
mov
mov
sub
xor
mov
imul
push
adc
xlat
sub
inc
int
cmp
mov
push
arpl
add
push
push
mov
pop
daa
cmp
dec
je,pt
xchg
xchg
fbld
test
ja
test
lret
popa
aad
jo
in
leave
fcmovnu
mov
jmp
inc
xchg
mov
and
xor
sbb
pusha
ret
pop
fsubr
enter
mov
push
pop
gs
mov
cmp
ret
cmpsl
mov
dec
mov
rolb
cmp
inc
cmp
es
pop
rorl
adcb
pop
inc
fdivs
mov
lcall
loop
xor
rclb
or
adc
insb
out
mov
push
mov
pop
inc
loopne
popa
jge
sub
int
inc
cmc
in
dec
lods
repz
push
sbb
imul
aam
aas
adc
mov
cmpsb
push
xchg
stos
popa
loop
cmpsb
repz
sbbl
dec
sbb
cmp
dec
decl
fnstsw
add
fwait
mov
pop
or
mov
cmp
cmpsb
xor
adc
jne
dec
push
vpcmpuq
orb
push
xchg
fldl
pop
adc
sbb
dec
addb
mov
das
dec
mov
sti
mov
pop
leave
gs
pop
movsl
stos
jmp
outsb
aad
mov
pop
movsl
or
sti
mov
and
scas
lret
test
cltd
sbb
mov
icebp
mov
mov
jbe
lret
popf
jno
gs
dec
lods
cmpsb
sbb
stc
into
nop
push
repz
fimull
movsb
ja
ret
sub
mov
ja
jo
movsl
pop
cmpb
push
dec
out
jo
in
or
jno
jnp
or
cmp
cmp
lahf
aas
add
sahf
testb
fcoml
aaa
cmp
dec
and
cmp
stos
mov
push
in
test
adc
gs
repz
fwait
icebp
jo
mov
jp
pop
lea
imul
sbb
insl
aas
icebp
or
dec
sbb
pop
repz
movsb
push
sub
or
sub
aas
lea
lds
mov
dec
mov
pop
and
inc
add
pop
xchg
lret
lret
lea
push
mov
enter
mov
inc
into
jl
imul
adc
fcom
or
mov
mov
inc
or
inc
pop
popa
mov
fwait
adc
xorb
cmp
dec
push
dec
rolb
adc
rolb
ds
pushf
adc
repz
cmc
fs
mov
lret
insl
pusha
mov
adc
adc
in
sbb
ret
push
pop
cmpsl
lods
or
dec
sbb
cld
mov
outsb
xor
adc
jle
adc
cmp
in
dec
test
lret
notb
sbb
xor
mov
dec
jbe
mov
pop
cmpsl
jecxz
dec
add
mov
pop
mov
push
xchg
js
mov
pop
dec
lret
jle
xor
cmc
mov
loope
psrlw
mov
out
fsts
call
mov
sub
scas
xor
mov
push
or
xor
mov
pop
and
popa
mov
mov
test
inc
jl
sub
psllw
push
jg
xchg
mov
fwait
xor
mov
dec
cltd
adc
xchg
mov
lret
xchg
add
jne
mov
dec
das
out
std
stos
mov
rolb
imul
iret
cmc
data16
pop
add
shlb
aaa
cs
icebp
dec
mov
loope
mov
sbb
mov
test
push
loop
inc
fildl
jno
in
mov
mov
inc
sar
mov
add
dec
mov
mov
push
jae
shrb
dec
pause
jne
insb
pop
or
mov
push
jmp
je
imul
sub
outsb
test
inc
dec
jl
mov
outsb
sti
sti
adcb
in
movsl
stos
xchg
lret
lcall
loope
jo
cltd
push
mov
data16
test
dec
clc
mov
mov
fs
dec
in
fucom
sbb
orl
xchg
popl
out
jnp
cmpsl
mov
cmp
stos
xorl
push
sahf
daa
mov
cmpsl
je
stos
xchg
dec
sub
stos
or
push
shl
cwtl
mov
test
jecxz
jg
shll
inc
xor
in
dec
es
rcrb
xchg
dec
cmp
sahf
sbb
mov
mov
stos
push
sub
enter
aas
subl
push
sub
pop
lret
fbld
inc
aam
stc
and
push
call
fildll
jge,pt
push
mov
lret
bound
mov
jg
or
cmp
dec
xchg
mov
iret
mov
enter
ds
addr16
pop
cmp
mov
fwait
jl
cmpsb
xor
mov
mov
sub
jo
mov
imul
arpl
cmp
xchg
stos
push
and
or
rdmsr
jo
push
dec
test
xchg
adc
pop
mov
test
pop
xchg
push
outsb
mull
push
mov
mov
mov
mov
adc
lahf
xchg
xor
add
add
jecxz
enter
jmp
dec
inc
out
push
insl
out
rcll
mov
jl
cmp
rcll
rcrb
xor
jbe
in
daa
js
xchg
popa
add
mov
mov
addl
dec
xchg
repz
pop
lods
outsl
ja
xchg
sahf
js
sbbl
scas
cli
mov
xor
fldl
sbb
xchg
movsb
adc
mov
cltd
cmp
adc
sahf
xor
jb
jno
jo
push
cltd
leave
pusha
mov
push
sub
mov
or
sub
sub
xchg
shll
inc
loop
mov
adc
push
jp
or
sets
xchg
mov
in
mov
test
inc
ss
fisubrs
aad
enter
nopl
lcall
adc
sti
sbb
push
xchg
adc
xchg
fwait
test
xchg
ss
mulb
cltd
push
or
iret
lahf
je
ret
shr
clc
repnz
call
add
cmpsb
hlt
out
sub
lods
sarb
stc
fwait
push
out
and
jae
incb
addr16
pushf
addr16
cmpsl
outsl
jmp
stc
xor
mov
xor
pop
int
pusha
and
jp
cwtl
sarb
push
fisubrl
es
cwtl
xor
test
dec
sbb
in
in
subb
insb
xchg
outsl
aad
lret
push
xchg
cmpsl
mov
jnp
test
and
sub
adc
pmulhuw
pop
out
orl
push
mov
popaw
mov
jbe
jbe
lret
push
sbbl
or
call
int
mov
out
testb
ror
insl
test
arpl
loopne
imul
fsubl
xor
push
xchg
aaa
add
add
pushf
mov
imul
inc
push
inc
aas
add
into
lock
pop
jp
jge
and
pop
mov
fnstenv
bound
sarl
int
push
ret
clc
mov
pop
sbb
sbb
lea
call
or
daa
les
movsl
aaa
add
mov
lods
pop
inc
xchg
cld
push
add
pop
cmp
jns
adc
push
push
cltd
fstl
stos
insb
test
add
je
arpl
repz
add
emms
fs
popf
je
xchg
mov
into
lods
and
dec
sti
push
sub
sbb
mov
mov
mov
and
and
sub
mov
lcall
and
xchg
lods
decb
adc
je
xchg
cmpsb
xor
and
jbe
jmp
stos
push
lahf
adc
fmuls
jae
mov
gs
leave
test
xor
push
dec
dec
ret
mov
xlat
or
fisttps
inc
movsb
mov
in
movsl
adc
rolb
outsb
or
pusha
fs
stos
adc
sbb
fs
fs
pop
push
adc
add
aam
lock
lret
daa
and
dec
inc
or
pop
jg
dec
jmp
xor
aaa
cmpsb
popf
mov
pusha
nop
dec
inc
sub
xchg
sbb
jge
ret
mov
lods
sub
icebp
and
nop
xlat
pop
push
rcl
aaa
scas
test
fldt
add
dec
jl
pushf
int
mov
das
push
push
loope
cmp
js
ss
outsl
ljmp
dec
cmp
lcall
push
cmc
push
cmc
repnz
jmp
mov
or
xor
inc
add
adc
push
mov
and
ss
test
pop
scas
mov
push
outsl
xchg
jbe
sub
fistps
data16
or
mov
jmp
mov
ficomps
sub
push
mov
out
ret
lahf
xor
jns
or
or
push
pop
inc
out
mov
aaa
cmpsl
fwait
jns
filds
mov
test
xor
nop
cmc
sbb
fsub
sub
sarb
int
sub
imul
adc
imul
pusha
adc
push
sbb
mov
push
mov
sbb
in
push
or
push
cmc
ret
xor
jnp
mov
jge
or
sbb
rep
subl
pop
jmp
mov
cltd
pop
mov
imul
inc
rcrl
dec
in
pop
enter
cltd
nop
movsl
add
je
push
js
aaa
in
insb
add
mov
jbe
mov
inc
mov
sbb
daa
mov
fildl
loopne
lret
aam
push
fmull
add
mov
xor
or
mov
adc
lret
cli
mov
mov
pop
and
fcmovnbe
loopne
sbb
fcoms
jne
lahf
add
lret
rcl
adc
push
jo
jo
ss
lods
je
xchg
adc
jne
sub
add
out
jnp
xchg
aas
jns
mov
mov
jp
nop
movsl
add
inc
or
add
cmpb
test
int
jnp
das
mov
jo
mov
cli
test
movsb
je
mov
mov
jbe
leave
push
dec
jl
sbb
das
movsb
inc
sbb
jecxz
cmp
js
loopne
rcrb
fcomps
loope
dec
push
jge
mov
push
dec
je
push
inc
outsl
jns
mov
sbbb
fstpl
fbld
int3
jne
xor
loopne
scas
les
cmp
jnp
je
jp
push
or
mov
loop
fcomps
insb
sbb
js
movsl
dec
arpl
fisubrs
sub
push
hlt
adc
stos
leave
mov
les
sub
jecxz
mov
mov
or
and
hlt
in
fdivl
sti
inc
jbe
add
jecxz
push
sub
mov
in
jo
add
enter
pop
adc
dec
inc
mov
jecxz
mov
xchg
int
jo
outsl
sub
xchg
mov
xchg
jecxz
hlt
sub
in
out
push
pop
out
jg
inc
and
jns
repnz
pop
rorb
insl
and
loopne
sti
xchg
dec
pop
jnp
sub
fs
cmpsb
cmp
pop
xor
mov
inc
jbe
and
popa
push
jne
lahf
pop
mov
dec
xchg
test
sahf
mov
lret
incb
adc
and
jo
lds
xchg
test
fists
dec
xchg
mov
lods
push
sub
or
sbb
out
sahf
sbbb
repz
lds
cmpsb
js
add
jno
push
xchg
scas
push
mov
inc
mov
dec
pop
popf
les
sarl
xorl
jbe
shll
mov
popa
dec
in
inc
data16
xchg
andb
jmp
jle
cmp
pop
je
mov
loope
pop
inc
dec
sub
call
add
inc
sbb
xchg
push
push
adcl
mov
mov
sub
mov
loop
notb
jecxz
or
pusha
adc
mov
cmp
xchg
cmp
inc
arpl
jmp
xchg
push
cld
mov
add
sarb
shlb
fucomip
and
mov
and
cmp
sbbl
popa
mov
push
cmp
pop
bound
sub
jge
adc
out
inc
outsl
adc
xchg
mov
xchg
aam
ror
lea
lods
adc
and
inc
cltd
push
mov
add
test
sub
jo
jnp
fmuls
push
push
jmp
sbb
pop
xor
andl
and
stc
jbe
in
xlat
pushf
data16
shrl
leave
jae
sbb
or
arpl
or
sar
xor
sahf
call
sbb
rcrl
cld
popf
cli
cmp
data16
int3
mov
orb
mov
cmp
pushf
or
adc
cs
mov
in
xchg
sub
jae
mov
in
and
jge
je
pop
icebp
dec
les
and
push
or
sti
movsb
or
cmc
dec
dec
test
repnz
pop
decb
fnstsw
sub
imul
andl
lods
pop
mov
dec
or
enter
inc
scas
push
add
adc
nop
outsb
jle
sbb
mov
mov
or
ret
cs
test
push
hlt
lret
test
mov
int
mov
xchg
push
test
in
sbb
movsl
std
jae
lock
ret
insb
call
sub
shlb
cmp
jnp
fcompl
test
mov
fs
scas
mov
sahf
mov
jno
pop
repnz
dec
lods
repnz
pop
inc
in
jbe
mov
cmc
leave
hlt
ss
subl
call
add
inc
inc
cmc
adc
mov
jnp
jae
sub
adc
add
cli
data16
push
movsl
xchg
and
cli
jno
and
stc
shlb
imul
cmp
push
adc
pop
sub
test
inc
push
jmp
enter
fmul
loop
aaa
jle
or
insb
aad
das
push
mov
mov
test
mov
jno
cmp
adc
inc
incb
call
jb
sbb
fwait
mov
ret
lods
or
andb
dec
mov
hlt
or
rolb
mov
inc
test
icebp
stos
int
jns
add
pop
lcall
ficoml
push
or
sbb
in
das
cmp
in
cmpsb
jbe
fists
out
pusha
jns
or
popf
adc
mov
jo
mov
aaa
stos
xlat
push
sbbb
js
ja
mov
or
adcb
cli
popf
das
sbb
clc
icebp
iret
cmp
push
iret
fwait
mov
cmpsl
aaa
lods
mov
lcall
mov
mov
mov
mov
sbb
pop
xchg
pop
jo
nop
es
mov
icebp
cmp
lret
repnz
and
mov
jecxz
aaa
iret
ljmp
xor
dec
mov
lods
ret
repnz
jle
pusha
insb
flds
into
mov
push
mov
push
into
pushf
xchg
insl
mov
flds
inc
cmp
fidivrl
pop
mov
mov
enter
loope
ljmp
xbegin
mov
and
jge
mov
pop
mov
or
loope
pop
repz
orb
jmp
dec
mov
or
syscall
mov
sarb
pop
ficoml
out
jg
fidivrl
xchg
pop
push
cmc
dec
test
fs
mov
cmpsb
int
iret
sbb
dec
pop
xchg
and
les
cmp
ret
mov
fisubl
out
iret
pop
shlb
shr
rcl
cmp
subl
bound
jl
stos
out
push
lret
push
mov
xchg
jmp
mov
mov
pusha
int3
push
sbb
addl
test
outsl
mov
cltd
sbb
inc
int
loop
adc
test
adc
pop
aaa
int3
imul
sbb
out
or
sub
mov
inc
fisubs
jb
mov
cld
add
hlt
pop
out
scas
mov
adc
sahf
mov
or
cmp
pop
mov
lock
rcrl
pop
sub
or
add
fwait
pushl
mulb
stc
cmp
mov
adc
add
xor
push
shl
fists
jae
dec
dec
fldenv
sbb
add
imull
sub
bound
aas
sbb
lods
dec
jg
iret
jae
mov
add
mov
aad
iret
mov
andb
jmp
addr16
cmp
xchg
outsl
jp
xor
sbb
mov
pusha
dec
out
xchg
js
shl
push
movsl
xchg
mov
addr16
add
add
and
xlat
jmp
mov
mov
test
cmp
scas
and
sub
push
cmp
int3
mov
inc
das
adc
sub
adc
mov
lcall
push
mov
sbb
or
das
pusha
in
roll
adc
mov
sbb
cmp
lahf
scas
imul
outsl
neg
mov
aam
bound
out
cli
rcr
mov
jno
pop
mov
clc
sub
out
sbb
mov
mov
mov
mov
out
pop
ret
or
pop
xor
fs
addb
aas
cmc
cmp
add
pop
fmull
mov
xlat
popf
xchg
inc
test
mov
push
out
aaa
jl
outsb
or
sub
mov
repnz
and
aaa
pop
dec
sbb
sahf
inc
push
mov
fildll
adc
rcrb
andl
or
scas
das
mov
je
gs
aas
and
aam
mov
mov
mov
in
roll
nop
adc
shl
bound
in
mov
mov
sarb
arpl
fisubrl
cmc
cmp
xchg
or
divl
js
push
sub
jmp
std
in
repz
xchg
insl
push
negl
cli
ret
loopne
xor
jb
nop
mov
sahf
cs
aam
lock
loope
sub
fldt
push
movsb
pop
aam
fwait
out
test
imul
testl
call
inc
popf
add
mov
test
jle
push
shrb
scas
or
cmp
push
inc
leave
stc
arpl
test
jbe
pop
andb
cld
lock
jmp
cmp
notb
push
adc
push
nop
popa
mov
jmp
nop
xchg
jb
adc
mov
cmp
in
addr16
arpl
ret
pop
push
orl
push
lds
add
mov
jg
pop
sub
xor
xchg
sub
or
pusha
mov
in
sub
mov
adc
sbb
hlt
xchg
jno
mov
test
pusha
jne
inc
arpl
xor
dec
xor
testb
adcl
dec
xchg
cmpsl
aas
aas
pop
sbb
adc
and
arpl
cmpsl
jg
inc
pop
wbinvd
or
faddl
movsl
mov
lods
jp
sbb
icebp
dec
mov
ret
or
pushf
sti
shlb
add
and
or
scas
xorl
test
ret
mov
jb
and
push
mov
xchg
repz
ss
ficoms
mov
push
test
jmp
int
lahf
pusha
jae
cmp
sbb
std
inc
pop
cmp
rcrb
jnp
movl
popa
test
leave
insl
enter
xor
xchg
test
jg
lret
outsb
xchg
xor
punpckhbw
in
mov
xchg
fists
push
jmp
pusha
test
call
cmp
sub
mov
imul
shll
addr16
push
mov
ss
adc
inc
dec
adc
sub
push
jge
push
xor
test
push
sti
add
orb
shll
inc
adc
dec
mov
dec
mov
xlat
mov
movsb
mov
sbb
les
jg
xchg
shrl
adc
mov
pop
test
fwait
sbb
push
push
aad
xor
inc
arpl
jb
cwtl
cwtl
lods
popa
jle
jmp
xor
mov
xchg
pop
xchg
cmpsl
std
ss
call
leave
pop
test
ficoml
aam
inc
insw
sub
and
xor
cmp
sbb
outsb
jns
and
out
pop
and
push
fnstsw
ror
ret
jae
fiaddl
push
push
jae
xabort
lahf
xchg
popa
add
dec
in
lea
loopne
shrb
cld
je
mov
fcompl
jbe
loope
push
or
mov
xchg
mov
daa
and
add
mov
gs
jle
cs
sbb
fisubl
xchg
sub
cwtl
cld
mov
xchg
jp
bound
fsubs
in
or
sbb
scas
adc
sub
dec
xor
push
test
dec
sub
out
push
xlat
jbe
cmp
mov
scas
rcrl
sarb
mov
sub
xor
sbb
idiv
dec
pop
inc
gs
lock
add
inc
inc
shrl
cld
lods
lcall
idiv
mov
roll
add
and
dec
hlt
outsl
xchg
arpl
adc
movsb
popf
xchg
jecxz
push
mov
loopne
addb
jno
loop
jno
push
gs
out
test
loope
dec
or
fstl
xchg
or
cmp
stos
and
or
fucomip
mov
mov
fstl
add
sub
negl
cwtl
adc
insl
nop
cli
cltd
and
mov
inc
cmp
daa
fbstp
xchg
leave
and
dec
inc
aam
cltd
shll
pushf
sbb
stos
std
jecxz
and
imul
xchg
ljmp
int3
add
mov
pushf
insl
jnp
or
xsha1
cmpsb
or
xchg
or
mov
cmp
es
rdmsr
out
jecxz
popf
test
ss
fiadds
dec
mov
sub
jo
lods
xchg
or
or
sbb
push
sbb
imul
mov
out
in
cld
adc
insl
pushf
movsb
out
cmp
mov
add
and
adc
push
lret
mov
insb
xor
jg
fnstenv
push
pop
pop
push
aam
test
dec
mov
pop
test
and
push
push
sub
mov
add
dec
jns
jae
pop
lds
stos
in
mov
loope
popf
mov
lcall
pop
aas
fisubs
mov
pop
clc
cmp
in
xchg
imul
pop
cltd
aad
cmp
or
dec
add
dec
cli
aas
adc
jmp
ss
repnz
bound
das
out
push
mov
and
cld
xchg
cmpsb
sahf
loop
mov
std
into
cmpb
push
mov
inc
sahf
adc
xchg
fcomps
aad
xor
push
cmc
mov
ja
or
xchg
test
push
sahf
inc
sbb
cli
push
mov
xchg
push
push
enter
sbb
repz
mov
or
in
and
sbb
lods
daa
push
push
and
push
rcrl
pop
or
imul
add
stos
mov
shlb
jg
jns
dec
aam
mov
jo
dec
stos
mov
popa
icebp
jnp
jg
cld
mov
call
jns
int3
xchg
popa
lahf
ret
sub
pop
pop
jg
repz
ljmp
movsb
jmp
int
push
xchg
add
add
mov
lahf
and
pop
cltd
sbb
test
jg
sub
scas
xor
inc
ss
sarb
push
popa
inc
cld
out
push
lret
test
shrb
jp
jecxz
leave
test
or
movsl
fisttps
jno
imul
sarl
or
jg
mov
into
call
add
jnp
adc
test
xchg
xor
dec
pop
mov
push
dec
add
pop
xchg
xor
je
add
repz
je
lock
arpl
leave
ret
dec
and
xor
adc
pusha
push
sub
jl
dec
xor
lods
aas
push
cmp
mov
ja
jbe
mov
pop
and
mov
push
fnstsw
dec
sbb
push
mov
in
adc
adcl
sub
test
enter
add
mov
std
mov
jl
cmc
mov
fisttpll
sub
inc
js
pop
sti
mov
iret
mov
xchg
test
xlat
cli
and
das
mov
dec
xor
and
loopne
pop
pop
xor
jmp
sub
lret
sub
test
push
scas
ja
pop
pushf
or
outsl
lods
sbb
push
fimull
xchg
jg
orl
dec
xchg
jle
jae
jns
dec
outsl
mov
jmp
test
outsb
xlat
sbb
dec
mov
incb
in
movsl
inc
call
outsl
xor
push
add
cmp
out
rol
outsb
and
mov
test
xor
inc
xchg
dec
ja
xchg
mov
andb
or
xchg
dec
ljmp
mov
xor
ret
outsb
mov
fwait
and
cmpsb
xor
adc
xchg
das
out
in
incl
mov
or
adc
rcl
push
in
movsb
cmc
sbb
out
mov
int
out
xchg
sbb
jecxz
jo
jge
outsb
jnp
gs
dec
lock
xchg
jnp
iret
inc
pop
push
mov
mov
or
addr16
or
iret
pop
adc
fsubrl
or
sub
lods
jbe
repnz
pusha
jmp
popa
mov
xor
jb
ds
sbb
lret
and
xchg
or
pop
out
fsubs
xlat
sub
mov
push
sarb
cld
imul
pusha
hlt
js
sbb
mov
xor
jp
arpl
push
lea
pop
mov
cltd
lds
inc
dec
mov
test
ljmp
cmpb
test
dec
movsl
pushf
in
mov
daa
inc
cmp
xor
test
movsl
into
dec
sti
cmp
and
pop
mov
daa
outsb
jmp
add
test
scas
int3
aam
mov
sahf
iret
and
inc
mov
push
or
sub
push
sahf
push
push
and
js
mov
sbb
loopne
pop
sub
fcmovnbe
and
out
xchg
inc
mov
pop
lock
xchg
pop
push
sub
dec
loope
sbb
mov
je
xor
idivb
in
xor
or
leave
mov
mov
addr16
lret
lret
jbe
lcall
dec
test
dec
push
les
jne
test
pop
sbb
xchg
xchg
icebp
push
push
push
pop
cmp
cld
lret
clc
jne
arpl
jecxz
sbb
sarb
sbb
addr16
loopne
xor
out
mov
xor
inc
in
stos
gs
das
inc
call
loope
xchg
cwtl
bound
scas
and
dec
cmp
les
push
dec
adc
dec
pop
dec
adc
popf
xchg
mov
jb
jns
mov
mov
movsb
inc
fldt
decl
daa
or
push
adc
mov
dec
lods
pop
outsl
cmp
push
jecxz
and
imul
ja
sbb
into
jg
lock
adc
ret
pushf
dec
cmp
das
jg
les
mov
jno
sub
popa
ljmp
in
js
sbb
jge
pop
and
pop
pop
and
inc
repz
inc
pop
pop
sub
add
pushf
ficomps
repz
bound
xor
xor
int
pop
hlt
movsb
and
movsb
fstl
std
test
lods
xchg
adc
jbe
inc
adc
mov
push
push
in
mov
xor
mov
or
popa
push
loop
adc
cltd
mov
addr16
out
mov
and
call
mov
add
aad
mov
iret
mov
add
std
push
push
cli
add
sbb
push
jbe
test
cmp
pop
mov
mov
jmp
sbb
mov
fcmovnu
dec
fisubrs
orl
or
hlt
mov
mov
lods
in
jbe
lods
clc
jb
pop
and
nop
js
mov
push
test
ss
aad
mov
push
pop
fistpl
insl
mulb
cmp
int3
fcoml
dec
hlt
fst
jne
xchg
or
sbb
add
and
cltd
dec
cmc
xor
leave
push
push
fdivs
add
jae
decb
ret
cwtl
shll
push
outsl
pop
mov
jnp
sub
aam
lret
push
inc
test
pop
loope
cmpsl
pop
jb
pop
pushf
mov
xor
dec
orl
xor
xchg
xchg
dec
insb
mov
mov
and
mov
mov
out
dec
aaa
mov
xor
dec
test
aad
loop
les
jmp
fsubs
mov
rolb
repz
scas
dec
dec
adc
bound
ljmp
add
out
dec
mov
sub
pop
pop
jo
lds
leave
add
sbb
xchg
popa
stc
sub
mov
jge
lret
sti
add
imulb
jne
add
cmp
out
push
push
pusha
and
enter
sub
outsl
inc
xor
fadds
mov
and
je
mov
sbb
xor
test
hlt
mov
or
mov
sbb
cmp
cmove
out
sbb
push
jmp
int
jecxz
in
in
lods
add
pop
out
mov
rcrb
cli
mov
shr
sbb
push
icebp
xchg
push
jl
sub
jge
insl
shll
mov
lret
test
xor
test
push
ret
pop
lock
cmp
mov
sub
rcll
xor
and
pop
out
or
or
pop
dec
arpl
push
loopne
dec
inc
or
sub
out
jp
nop
repnz
leave
cli
jb
inc
push
insl
pop
jns
imul
movsb
pop
loop
rcll
mov
sbb
cmp
or
insl
ficompl
imul
cli
les
push
push
jp
lods
aaa
adc
std
inc
jl
mov
leave
cmp
mov
mov
lds
mov
clc
mov
rcr
scas
cs
xchg
mov
aas
popf
stos
movsb
mov
mov
clc
dec
pop
pop
mov
dec
dec
scas
rorl
pop
test
add
int3
test
js
subw
and
mov
cwtl
or
xchg
jae
xor
repnz
pop
add
loopne
fwait
sbbl
push
pop
sub
pop
pop
xor
xchg
or
jns
dec
sbb
adc
addb
mov
outsl
pop
shr
mov
adc
aaa
pop
inc
push
jns
test
call
cmp
xchg
popf
xor
aas
mov
sub
call
mov
sbb
ljmp
inc
gs
fs
jbe
xor
test
fldcw
int3
sbb
mov
xor
add
sub
out
addr16
inc
loopne
mov
sub
jecxz
sarl
test
fisubl
pop
push
jp
or
add
mov
sbb
or
leave
sub
imul
fs
mov
cli
xor
lcall
add
mov
push
inc
sub
ds
cmp
lahf
xor
xchg
jecxz
mov
jne
movsb
sbb
pop
rcll
mov
scas
movsl
jae
clc
notb
push
rolb
push
movsl
call
lods
sbb
mov
test
dec
inc
jle
jecxz
bound
imul
pushf
out
fldcw
inc
jl
cmp
add
jl
pop
mov
ja
lahf
int3
jb
das
xlat
icebp
push
xorl
ret
aas
fcmove
clc
ret
push
pop
loop
add
jb
pop
fsubs
rol
push
adc
sub
test
rcr
cli
outsl
scas
inc
outsb
cmp
lods
loop
cmp
mov
jbe
push
ficomps
xchg
popf
adc
or
lahf
mov
lock
sub
mov
xor
iret
push
and
test
repnz
xchg
adc
push
fdivrs
jns
lea
pushf
out
push
jo
stc
lret
lea
xchg
subl
xchg
scas
adc
xchg
scas
rcr
fdivrs
insb
cmpsb
fisubs
test
sti
lahf
mov
mov
jo
xchg
test
ret
sahf
dec
jno
rcrb
dec
pop
icebp
mov
pop
aam
into
gs
mov
xor
loopne
ds
push
mov
cld
push
mov
bound
dec
nop
ret
addr16
adc
pop
xlat
int3
pop
pop
aaa
sbb
inc
mov
xlat
cld
mov
jg
jmp
adc
loopne
lret
jb
lahf
mov
jle
rcl
fsubl
in
jne
inc
xor
cmp
mov
scas
pop
pop
lahf
shlb
add
clc
loopne
repz
fmull
into
pusha
loop
mov
jbe
cmp
push
sub
mov
insb
out
adc
mov
daa
aas
sbb
int
fistpl
pop
xchg
test
inc
in
cltd
inc
xchg
pop
xlat
mov
or
fs
dec
add
cmp
jg
adc
xchg
into
icebp
fxrstor
fsubs
mov
push
mov
sub
push
repz
mov
enter
push
jne
jmp
das
rcrb
add
sbb
inc
xchg
pushf
fbld
mov
subb
xor
int
push
nop
pop
imul
pop
sbb
jns
mov
movntps
sbb
int3
std
mov
addl
in
jae
mov
stc
cmc
adc
inc
push
adc
push
xchg
out
pop
cli
xchg
leave
fs
imul
jmp
push
sbb
outsl
iret
into
imul
sbb
pop
cmp
jbe
mov
mov
loop
pop
inc
ljmp
stos
hlt
dec
sarl
enter
ret
orl
mov
adc
pop
sahf
movsb
xor
call
popl
lcall
mov
mov
mov
mov
std
cmp
inc
inc
jmp
cs
outsl
mov
pusha
sbb
subb
dec
xchg
ds
icebp
or
fdivp
movsl
dec
outsl
xor
jle
mov
ljmp
push
push
add
es
lock
sti
andl
xchg
lahf
andl
cld
pop
daa
mov
imul
cmp
cmp
jo
and
or
mov
mov
add
sbb
fisubs
mov
xor
or
xor
aam
or
fs
jb
mov
mov
and
mov
push
dec
addr16
andb
mov
cwtl
sub
push
xchg
lea
xchg
std
mov
sub
dec
test
add
sbb
pop
sbb
mov
lock
shlb
lret
inc
mov
rcrb
and
lret
les
lds
mov
adc
stos
outsl
adc
inc
into
sarl
outsl
daa
in
mov
arpl
sub
sub
mov
cmpsb
and
sub
jmp
sbb
rcrb
mov
mov
fimull
dec
in
imul
repz
arpl
jl
push
and
clc
mov
ret
insl
adc
jl
jge
mov
test
dec
inc
es
fsubl
jb
adc
stc
jg
xchg
insb
cmpsb
stos
ret
int3
test
xlat
push
lret
jae
loope
xor
adc
lcall
std
sub
mov
dec
mov
fwait
jecxz
xor
xchg
je
roll
lea
mov
mov
gs
jns
ret
sub
mov
repz
dec
mov
outsl
add
xchg
roll
xor
sarl
mov
cmp
out
jecxz
popa
imul
int
pop
imul
add
shrb
fs
mov
popa
dec
repz
jbe
ret
pusha
xor
jecxz
pusha
sahf
cmpsb
call
iret
xchg
pop
fistl
sarb
lock
ret
xor
add
popf
mov
mov
ljmp
ret
mov
out
dec
dec
test
xor
add
mov
mov
add
sbb
rcl
inc
cld
xor
push
iret
movsb
mov
dec
adc
popa
pop
mov
rcl
xchg
mov
push
push
mov
call
sbb
icebp
sbb
dec
push
jl
cmp
pop
push
cmp
push
rcll
and
push
push
int3
sbb
lret
or
xchg
xor
mov
mov
andl
out
mov
inc
int
cmpsb
add
xchg
inc
cld
xor
cmpb
sahf
popa
pop
es
push
test
mov
es
cmp
or
fs
movsl
xchg
dec
sti
cmp
jno
leave
imul
jne
xchg
sahf
or
push
cmc
movsb
out
dec
mov
das
inc
cmp
js
or
mov
insb
test
mov
stos
mov
and
sti
sbb
pushf
inc
dec
es
and
popf
xor
mov
inc
fimull
xchg
dec
sbb
in
scas
arpl
int
test
imul
fstp
sahf
test
pop
mov
xor
in
inc
push
dec
pop
das
dec
pushf
inc
outsb
mov
mulb
es
addr16
lret
shll
addb
mov
mov
cmpsl
lahf
add
jecxz
dec
data16
pop
mov
fildl
cltd
out
ljmp
or
jns
stos
mov
xor
rorl
mov
adcb
add
or
dec
fcompl
jmp
cli
jo
aam
adc
ljmp
or
out
test
dec
ret
xorl
ret
aam
push
mov
xchg
lods
jbe
imulb
stc
bound
push
insl
stos
jp
sub
scas
push
adc
negl
cmovge
mov
xor
cltd
jb
imul
mov
in
and
lea
ficompl
pop
dec
je
out
mov
ds
mov
inc
adc
sar
sbb
psubusb
rorb
jle
pop
icebp
jae
mov
data16
enter
sbb
cmc
clc
xchg
roll
fwait
sbb
movsb
ss
subl
lea
push
movnti
mov
and
sub
dec
fld
jl,pt
add
mov
mov
and
xchg
mov
mov
mov
and
lods
out
fwait
push
adc
push
roll
loope
push
sbb
and
xchg
daa
aaa
mov
mov
adc
xor
inc
adc
adc
pop
sbb
movsl
inc
mov
in
dec
mov
mov
daa
sub
pop
jno
call
jmp
pop
je
je
push
pop
call
adc
mov
clc
mov
aaa
xchg
cmpsl
movsb
mov
sbb
xchg
mov
imul
les
add
das
pop
push
int
mov
jb
sbb
sbb
xor
add
inc
adc
jle
addl
imul
jl
push
repnz
mov
and
imul
scas
cmp
jmp
sbb
stos
fstps
push
push
xchg
js
test
out
mov
cmc
pop
aaa
testl
jnp
add
add
fwait
mov
jns
test
push
mov
dec
popa
callw
push
add
and
int3
insb
mov
je
js
jns
dec
inc
and
add
adc
into
leave
sub
ficoms
xchg
cltd
loope
inc
jl
div
or
lret
xor
fnsave
jmp
push
shlb
and
divl
jbe
add
das
xchg
ss
movsb
sub
scas
outsb
div
add
clc
cs
adc
inc
out
mov
fs
frstor
jno
xchg
inc
jecxz
xchg
std
mov
jb
in
hlt
sti
gs
mov
jl
lret
insb
sahf
and
xchg
cltd
jnp
add
jne
pop
and
jb
xchg
jl
lret
lods
loope
push
inc
ret
fdivs
mov
xor
aam
icebp
scas
and
push
call
sub
push
rorl
fs
icebp
jl
je
int
and
pop
shlb
popf
xchg
sub
mov
jbe
mov
or
stos
test
push
mov
cmp
mov
xchg
push
sub
popa
jae
mov
add
out
dec
sbb
imulb
enter
aaa
sub
int3
je
out
sbb
dec
jmp
out
push
cmp
pusha
sahf
cmp
or
pop
xchg
je
lret
or
jae
aad
xchg
dec
add
mov
notb
add
push
mov
fisubrs
fdivrl
push
fucomp
shrl
hlt
sarl
dec
ja
push
adc
add
pop
sbb
in
ds
ret
test
xchg
push
mov
stos
mov
xchg
outsl
and
dec
testb
in
out
or
or
push
jae
adc
xchg
sbb
add
in
add
mov
dec
int3
cld
rcl
mov
stos
lock
lock
push
sub
jge
lahf
mov
xchg
jmp
jle
xor
jb
ja
fistpl
sbb
mov
cmpsl
cld
mov
pop
or
inc
gs
mov
lds
lret
xor
iret
ret
fwait
xor
sub
sti
outsb
sbb
dec
js
adc
pop
mov
stos
dec
jnp
push
pop
and
mov
sub
xor
cli
add
cmpsl
mov
and
imul
xor
cs
out
and
pushf
int
xor
dec
aad
inc
push
dec
mov
inc
jnp
out
mov
clc
mov
std
mov
cld
jmp
and
in
cmpsl
clc
out
sbb
fidivs
add
inc
into
sbb
aam
xchg
jbe
sub
dec
bound
sub
lcall
movsb
xchg
clc
stos
out
mov
or
cmp
jb
test
jb
mov
or
sub
in
xchg
in
or
push
out
test
jg
es
adc
es
mov
pop
and
orl
jle
stos
in
add
add
mov
in
xchg
out
shll
xor
mov
or
lods
scas
lods
inc
sub
jl
dec
stos
xchg
ss
dec
imulb
push
movsl
lods
xchg
loop
xchg
ret
pop
push
xlat
fsubr
fmuls
movsl
push
rcll
jne
jo
bt
adc
movsb
sbb
cwtl
test
adc
mov
pop
xor
imul
xorb
fcompl
cmp
xchg
pop
adc
cmp
cmpsl
inc
add
or
orb
imul
jb
pop
mov
inc
daa
or
fucomip
cmpsl
mov
mov
adc
mov
ficompl
aas
fimull
pusha
sbb
sahf
jb
cwtl
pop
cmp
insb
push
jl
data16
lds
jl
mov
loopne
in
insl
mov
in
ss
pop
fdivrl
out
jb
xchg
pop
mov
aad
ficompl
movsb
hlt
and
lods
imull
and
loope
mov
inc
push
push
cmpsl
rclb
sub
lods
mov
out
lret
pop
add
jo
mov
xchg
imul
cltd
scas
add
mov
mov
sarb
cmc
pop
lret
jno
adc
push
out
jg
pop
sbb
push
xchg
in
dec
jae
or
jns
pop
xor
cli
push
add
or
push
nop
ret
adc
mov
xor
add
jp
pop
lahf
loop
rol
ja
aas
fmulp
adc
out
xchg
inc
data16
daa
add
jge
push
ds
or
mov
push
insb
loopne
push
icebp
xor
adc
mov
or
jecxz
dec
sbb
negb
fnsave
in
clc
in
xbegin
push
fldl
test
mov
fildll
push
mov
sbb
test
js
xchg
pop
dec
bound
pusha
jnp
lret
mov
mov
fs
or
and
or
aad
push
sti
bound
xchg
jge
lret
in
lods
popa
sbb
mov
mov
das
mov
sahf
push
dec
jns
aad
xlat
lods
xor
out
dec
out
push
sti
icebp
sub
pushf
cmpsb
sbb
fldl
mov
dec
repz
push
pop
sti
jecxz
sbb
jns
xchg
sbb
cmc
mov
sbb
push
xchg
inc
stc
push
pop
mov
mov
and
pop
push
push
in
push
call
roll
mov
jne
inc
pop
inc
enter
jge
cli
xor
enter
or
mov
mov
push
sti
in
or
adc
fisubrl
cli
sub
adc
icebp
push
out
push
popf
xorl
mov
inc
in
cmp
inc
cmc
cmp
dec
jnp
loop
test
pop
cltd
rcll
and
les
pop
ja
scas
pop
jnp
xor
fnstcw
sar
sbb
mov
pop
jbe
xor
mov
stos
out
xor
lret
sub
fstl
adc
nop
fidivl
sbb
add
add
pop
or
popl
mov
inc
cmp
ret
pop
dec
les
and
xlat
mov
add
pop
xor
xlat
scas
int
lods
push
mov
mov
lea
adc
movsb
adc
push
mov
inc
jo
jg
shrb
addr16
jmp
cmpsb
repz
mov
loop
mov
mov
push
rcl
lods
pop
add
jb
scas
push
inc
jae
repz
lods
fildll
shll
cmp
push
ljmp
test
mov
popf
fidivrl
je
data16
xchg
xchg
cmpsl
or
lret
cltd
aaa
adc
push
xor
jb
sar
fistl
out
lret
fwait
sub
cmp
mov
pop
adc
pop
sbb
and
adc
test
push
add
inc
mov
inc
addr16
pop
or
fistpll
cld
and
icebp
mov
ja
aaa
cmp
ffree
add
rcrb
sub
pop
jnp
ss
repnz
xor
xchg
dec
stos
pandn
sub
mov
hlt
adc
jbe
je
add
cli
movsl
lock
adc
es
xchg
insb
push
cmpsb
inc
das
push
dec
mov
insb
lret
mov
and
lds
add
inc
mov
xchg
dec
xchg
push
inc
clc
cs
adc
cmp
mov
jge
mov
fnsave
repz
mov
mov
insl
je
jecxz
add
shrl
adc
push
jp
fs
push
js
loop
fnstcw
mov
int
ret
dec
cmp
pop
test
cmp
fsubrs
inc
jns
subb
cmp
push
mov
push
mov
mov
ljmp
mov
jle
add
rcrb
jmp
lret
pop
inc
sbb
cmp
rclb
mov
inc
sbb
xor
iret
ror
sub
stc
jnp
in
mov
das
pop
mov
push
std
nop
loope
xlat
push
adc
and
int3
cmpsl
cld
subl
das
je
add
lock
xor
lock
mov
pushf
ret
in
popa
xlat
out
fcmovu
jns
fcomps
fldenv
jo
sub
mov
enter
jg
lods
ror
mov
int
sarb
sahf
daa
ljmp
je
out
stos
jmp
xor
mov
push
out
rorl
mov
jg
repnz
adc
inc
adc
in
sbb
xor
loopne
xlat
fisubrs
imulb
adc
push
sbb
jle
hlt
or
icebp
xchg
push
pop
jb
inc
xchg
and
rol
push
sbbb
ljmp
jae
adc
ss
sarb
inc
push
or
jo
xchg
arpl
cmp
push
and
pop
push
shrb
scas
lods
mov
pop
lret
out
mov
and
bound
mov
sbb
stos
ljmp
xor
fidivrs
arpl
imul
mov
or
stos
mov
movl
dec
stc
adc
inc
test
inc
les
inc
stos
add
cmpsl
mov
xchg
shlb
stc
cmpb
mov
out
shr
outsl
adc
dec
lock
out
cli
adcl
jg
arpl
mov
add
mov
mov
and
pop
cmpsl
jecxz
outsl
cmp
add
sub
pop
jge
sub
dec
cs
mov
add
hlt
out
test
mov
out
and
fnstenv
daa
cmp
or
cmpsb
mov
out
pop
fcoml
add
add
iret
fwait
or
sub
in
sbb
lret
push
shrl
call
shlb
sarl
popf
xchg
insb
inc
dec
adc
xlat
mov
and
iret
push
out
loop
xchg
cwtd
cmp
inc
dec
xchg
pop
repz
jb
das
pop
mov
adc
int
mov
call
jno
mov
rcrl
ljmp
pop
mov
in
push
ficoms
push
sub
cmpsl
mov
cwtl
inc
mov
icebp
pop
ret
sbb
orl
push
imul
ja
mov
je
leave
add
pop
fidivl
or
outsb
mov
fs
xor
push
in
outsb
jmp
js
es
in
push
inc
cmp
push
in
jmp
pop
inc
sbb
popa
sub
sbb
dec
mov
sbb
inc
dec
add
xlat
clc
outsb
mov
pop
mov
out
ljmp
ds
ja
out
in
sbb
cmp
adc
push
sahf
or
shr
test
hlt
fucom
mov
ret
or
aaa
mov
rcr
loopne
call
push
loop
pop
cmp
mov
xor
push
xchg
subl
mov
jbe
cmp
ja
push
movsb
in
mov
aad
out
scas
ret
mov
jns
jmp
test
or
add
gs
mov
xor
lea
sub
or
mov
dec
dec
fildll
xor
call
mov
mov
out
push
mov
or
repnz
in
mov
outsb
insl
jbe
push
std
or
pop
in
and
pop
ret
stos
push
jecxz
mov
hlt
xchg
cmp
daa
pop
mov
mov
neg
and
fsub
gs
mov
jnp
adc
push
sub
daa
and
push
sub
dec
push
nop
or
jo
sarl
stos
cli
cmp
lcall
push
push
pop
fsub
sub
lcall
mov
jbe
outsb
mov
adc
js
adc
lret
mov
and
cmp
mov
cmc
addr16
mov
cli
mov
out
xorl
jge
mov
ja
inc
mov
sti
sbb
mov
or
nop
pop
movsl
xchg
and
out
jns
pushw
dec
stos
sbb
and
ret
insb
scas
pop
stc
pop
sub
lahf
subl
popa
inc
daa
dec
clc
xlat
cmp
cmc
imul
fdivrl
push
lahf
ljmp
push
push
jbe
imul
jmp
or
xchg
notb
out
cmp
mov
xchg
sbb
roll
push
jmp
sahf
sub
push
mov
into
and
aam
sarl
cli
dec
enter
cs
jmp
add
int
push
les
pop
jecxz
insl
pop
cs
leave
lock
push
xorb
xchg
inc
mov
push
add
add
xchg
sub
lds
fcomps
lds
mov
rol
xlat
in
pusha
push
in
mov
lds
loope
xchg
aam
das
sbb
and
push
dec
pop
xchg
xor
sub
xor
mov
xor
push
gs
sarl
test
push
xlat
add
jle
mov
mov
cli
add
cmp
cmp
cmova
pop
icebp
stos
and
in
les
outsl
in
fwait
int3
out
out
std
std
test
imul
push
jp
adc
movsl
movsb
adc
xchg
stc
jle
rorb
lcall
or
mov
dec
hlt
dec
pop
imul
dec
xchg
sti
icebp
mov
dec
loop
dec
sahf
fstl
cmp
cmp
xchg
mov
push
cmp
cli
inc
and
fwait
dec
mov
xlat
and
push
cli
jecxz
fnsave
add
fildl
pop
sbb
outsb
dec
seta
or
mov
pop
cmp
xor
aas
add
and
out
inc
rcrb
out
cli
ret
jp
xchg
adc
jns
mov
lea
sub
sbb
sbb
add
jp
ja
popa
pop
mov
inc
xor
imul
mov
cmp
xchg
sub
cmp
xchg
dec
psrld
pop
fildll
jl
mov
sbb
popa
push
jno
mov
andl
daa
push
mov
push
mov
pop
lods
cmp
iret
mov
shl
rorb
repz
mov
out
addr16
xor
adc
loopne
push
aam
aad
out
push
out
add
xchg
pop
in
or
sub
lahf
push
cmp
xor
jnp
pop
addr16
xor
mov
subl
movsb
ficompl
adc
adc
repnz
inc
js
into
inc
xchg
loop
sahf
cmp
mov
pop
out
jne
adc
jbe
lret
stos
shrb
inc
sub
xchg
inc
in
push
cmp
mov
push
inc
mov
push
ds
mov
aaa
add
pushf
and
push
push
mov
inc
or
shr
sbb
lret
push
push
movb
xor
cmpsb
lock
mov
outsb
cmpsb
nop
cmpsl
sub
inc
leave
or
xor
inc
xchg
lret
mov
or
dec
xchg
test
xor
adc
scas
shll
ja
jmp
data16
fcmove
ficompl
mov
mov
test
call
push
movb
sbb
jo
setae
mov
xor
xor
leave
lods
cmp
jl
repnz
arpl
cmp
scas
xchg
mov
rcrl
bound
fwait
inc
lock
pop
movsl
sbb
push
dec
adc
in
xor
out
add
outsl
in
sbb
aas
jbe
cli
test
fwait
push
ffree
inc
out
dec
sub
mov
mov
hlt
jbe
dec
mov
xchg
ljmp
fdivs
ljmp
repz
lods
adc
outsb
into
lds
movl
dec
add
push
aad
xor
loop
cwtl
pop
push
aam
dec
pushf
fsubs
sbb
or
daa
mov
fcoml
test
dec
fnstsw
fwait
xchg
or
or
mov
mov
hlt
inc
cmp
cmp
sarl
and
cmp
mov
cmp
or
les
cmp
mov
das
cmpsb
add
mov
aas
xor
test
ja
mov
dec
pop
inc
pop
fucomip
xchg
inc
loopne
push
mov
xor
sub
pop
sbb
in
rcrb
icebp
jl
lock
add
sarb
pop
inc
lahf
jle
mov
stos
xor
popa
mov
sarb
daa
pop
and
add
xchg
mov
xlat
ds
jbe
pop
out
popf
cmp
fdivrl
cld
xor
xchg
mov
cwtl
lret
popf
xor
xchg
sbb
adcb
xchg
mov
pop
shl
or
and
jp
loope
add
popa
in
loopne
mov
push
mov
ljmp
in
jnp
xchg
ljmp
test
jle
lahf
cwtl
mov
ljmp
rol
dec
jbe
cld
pop
rclb
add
pop
ret
loopne
je
add
loop
jmp
lods
stos
cltd
mov
jne
clc
add
mov
pminub
shlw
push
hlt
mov
sti
cmp
or
jnp
xlat
jge
sti
xor
dec
dec
popa
inc
push
aam
pop
out
shrb
cmpsl
adc
mov
jl
xchg
popf
pop
call
mov
out
xchg
stos
mulb
dec
out
dec
cmp
inc
addb
mov
movb
orb
add
xchg
ja
pop
inc
pushf
mov
mov
lahf
cmc
mov
mov
movsl
sub
shll
mov
cmp
hlt
cmp
mov
imul
imul
fsubs
jae
xor
sub
imul
inc
xchg
adc
lahf
fisubs
into
sbb
lahf
aaa
cmp
imul
xchg
jne
mov
xchg
adc
sahf
shrl
orl
inc
mov
mov
mov
lcall
testb
mov
push
xor
mov
idivb
int3
nop
loope
mov
out
sbb
mov
pop
xor
mov
jp
call
push
test
pop
fidivl
sub
dec
inc
ljmp
xor
add
push
stos
negl
stc
sbb
adc
loopne,pn
xchg
outsl
ljmp
aam
popa
jle
and
mov
mov
mov
fimuls
mov
inc
pop
fadds
out
xor
call
add
xor
mov
xchg
xchg
xchg
gs
lods
out
and
cmp
aaa
push
mov
sub
sti
in
jnp
addr16
sahf
out
sbb
push
cwtl
insl
pop
mov
sub
jg
test
lock
jmp
int3
fdivrl
bound
push
dec
cld
adc
jbe
adc
insl
aas
cmp
fbld
mov
xlat
jecxz
add
mov
scas
hlt
sub
sub
lods
jb
sbb
pop
gs
imul
loope
das
cmp
push
pop
adc
aaa
pop
int
stos
and
leave
mov
mov
enter
push
jb
out
rcll
pop
movsb
repz
mov
fists
pop
lea
xor
xchg
jecxz
xchg
fwait
shl
insl
add
cmpsb
or
mov
ret
mov
mov
test
lcall
xchg
add
dec
enter
imul
bound
and
shll
or
testb
jge
outsb
inc
es
fwait
stos
xor
inc
loop
fimuls
adc
aaa
adc
pop
adc
leave
popf
or
sub
cltd
in
mov
and
sti
cmp
movsb
fisttpl
fadds
or
aas
sbb
cmpl
popa
mov
testb
lret
cmp
jp
or
in
mov
arpl
ljmp
bound
fwait
nop
test
idivb
in
aad
insb
jg
cmp
xchg
pop
fnstsw
sbb
repz
xchg
ret
sub
mov
pop
sub
xor
pop
out
popf
jno
insb
mov
add
push
mull
cmc
inc
test
xchg
cli
mov
rcrb
test
test
push
out
sub
hlt
fisubrl
sub
jmp
add
bound
inc
push
addl
lock
movsl
jb
lea
cmp
cmp
movsl
cltd
lock
cmp
in
mov
repz
push
push
fcmovu
mov
rorl
jbe
mov
lret
and
in
jmp
inc
mov
test
add
inc
mov
sbb
dec
scas
sahf
xchg
sbb
addr16
das
aas
sub
rclb
adc
inc
imul
mov
mov
adc
test
adc
or
sbb
mov
arpl
mov
in
add
leave
push
inc
sbb
push
jbe
ja
shlb
daa
pushf
fs
loope
cli
jmp
insb
or
xchg
mov
pop
add
jl
aas
js
add
mov
add
in
and
nop
add
popf
icebp
in
aaa
cmp
push
mov
loopne
mov
mov
je
sar
lock
loopne
daa
cmp
mov
mov
jne
jl
add
sbb
bnd
inc
shll
insb
xchg
mov
mov
std
popl
clc
or
mov
insl
push
push
in
jecxz
cmp
xor
cmp
fnsave
mov
movsb
lds
mov
cltd
sub
sbb
insb
arpl
sahf
dec
notb
xor
les
aam
or
and
fldl
push
xor
ja
or
push
fwait
cli
mov
mov
ja
sub
jge
mov
sbb
clc
std
stos
cmp
pop
cs
dec
mov
dec
pusha
inc
pop
mov
cmp
ds
mov
out
ret
fmuls
test
add
xchg
sti
mov
xchg
into
dec
test
add
fisttps
addr16
mov
and
call
jp
push
jg
in
popa
mov
insb
addr16
stc
leave
icebp
movsl
pop
xchg
insl
icebp
cmpsl
in
pop
push
nop
sti
ja
sbb
push
push
push
jle
ds
sahf
xor
jge
mov
ret
stos
popa
pop
fsub
ficompl
jo
mov
mov
pop
push
hlt
push
addr16
pushf
dec
adc
adc
loope
cmpsl
int3
stos
mov
ret
pop
roll
roll
push
neg
sub
sub
cmp
adc
cmp
dec
push
push
icebp
pop
push
jmp
mov
and
sahf
or
mov
into
pop
or
mov
gs
shlb
mov
or
jo
ret
xor
in
loopne
push
mov
sbb
or
filds
lods
sub
fmuls
jb
out
adc
mov
inc
aad
cmp
pop
cmp
pop
and
mov
dec
rcll
roll
push
fdivs
mov
popf
icebp
jo
pop
jmp
push
pop
xchg
mov
and
cmp
ds
mov
pop
push
dec
in
mov
or
sbb
push
pop
pop
pop
mov
popw
push
inc
repnz
jge
shrb
xchg
js
jnp
adc
cmp
in
test
sub
or
enter
push
add
mov
sbbl
mov
pop
sbb
out
nop
mov
test
mov
orb
in
jo
jecxz
and
pop
insb
sbb
sbb
rcll
ret
inc
fisubrs
cmpb
ret
cli
mov
repz
ljmp
jae
out
jl
sub
outsb
dec
jb
ret
push
mov
insb
nop
out
push
or
leave
push
inc
cld
xor
sub
jg
repnz
icebp
lret
or
or
push
dec
cmp
fidivl
jno
pop
out
fs
or
mov
or
mov
fcoms
in
les
pop
lcall
je
push
or
fisttpll
sub
aam
repnz
mov
push
mov
xchg
addb
adc
aam
aas
mov
sbb
jmp
iret
push
in
jmp
jo
xor
lods
push
inc
cwtl
imul
mov
hlt
fistpll
mov
pop
enterw
sub
sahf
push
push
mov
inc
orb
repnz
xchg
sbb
lds
cmp
adc
outsl
push
sub
xchg
jle
ret
jmp
test
lret
test
sbb
fcoms
addl
call
lahf
mov
and
cmpsl
xor
sub
push
stos
fldcw
int
push
or
rcl
ret
jns
stos
inc
pop
xchg
insb
pusha
jmp
dec
add
and
dec
jbe
ds
sbb
out
mov
divl
scas
sub
dec
dec
mov
xchg
mov
jle
stos
push
loop
pop
nop
pop
fwait
inc
repnz
push
maxps
mov
inc
jnp
or
push
push
fwait
jmp
shrb
cmp
inc
aam
mov
xchg
stos
int3
add
mov
push
outsb
adc
inc
addl
data16
pop
roll
out
cmp
daa
pop
in
jle
adc
dec
push
push
and
jge
iret
not
dec
enter
arpl
insb
test
mov
dec
lcall
push
sub
jecxz
mov
sar
jbe
jae
pushf
aam
sub
iret
iret
xchg
mov
push
lcall
inc
mov
xor
std
mov
std
sub
data16
fmul
movsb
sub
insl
test
pop
sub
adc
mov
sub
mov
xor
xlat
sbb
imul
ret
push
xchg
fdivs
fstl
rcl
push
je
pushf
jno
inc
call
cmp
imul
add
mov
ljmp
jge
out
test
daa
and
gs
sub
stos
cmp
ja
sbb
and
push
pop
arpl
xor
add
add
test
pop
jnp
stc
adc
js,pt
sbb
cli
add
adc
push
sub
in
or
cmp
pop
xchg
addr16
test
pop
jecxz
fbstp
mov
xor
lock
aaa
jbe
je
push
je
inc
lret
inc
out
push
sbb
mov
jmp
mov
cmp
aad
push
or
xor
movsl
mov
or
ret
pop
add
insl
dec
xchg
add
iret
xchg
jno
push
xchg
imul
add
lret
dec
mov
jbe
cli
mov
jp
enter
mov
mov
lods
dec
in
xchg
jg
out
arpl
pop
inc
xlat
scas
ja
movsl
jo
lcall
adc
test
xlat
pop
pusha
mov
inc
sub
cld
pop
push
dec
adc
insl
mov
xorl
mov
divl
cmpl
push
xor
or
int3
shlb
enter
xchg
dec
mov
call
pop
inc
arpl
cltd
mulb
push
jge
ljmp
outsl
ja
mov
jecxz
push
mov
rep
ret
sbb
out
mov
repz
cmp
mov
in
pop
sub
pop
pop
mov
fwait
mov
subl
mov
idivb
dec
scas
dec
mov
jns
insb
ds
mov
mov
scas
add
test
cld
mov
sub
cld
or
sbb
loope
mov
inc
push
arpl
adc
rclb
lcall
aam
xchg
jo
adc
call
xor
or
int3
call
push
inc
call
and
or
in
push
sahf
fwait
sub
test
push
mov
add
jp
and
mov
inc
outsl
mov
scas
jnp
repz
lea
pop
cmp
sti
mov
xor
call
push
mov
push
cli
xchg
mov
fildll
push
push
rorl
imul
imul
cmpsb
pop
inc
push
pop
jl
repnz
dec
lahf
in
pushf
cwtl
psubsb
mov
mov
xor
mov
and
popa
pop
test
jp
outsl
fnstsw
pushf
jle
sub
cld
pop
cmp
push
add
int
mov
mov
dec
insb
sbb
mov
cmpsl
jle
dec
xchg
outsl
imul
jle
jb
int
xor
fwait
je
push
inc
xor
lods
and
inc
cmp
jmp
dec
xor
js
pop
ret
add
in
or
fsts
in
mov
adc
xchg
lods
pop
jno
daa
jns
test
pop
inc
mov
push
ja
jecxz
jno
xlat
add
lahf
repnz
xor
jl
adc
pop
fwait
dec
xchg
inc
in
pop
loope
test
and
jne
mov
adcb
les
leave
pop
jb
and
pop
stos
fwait
jg
into
inc
push
fimull
xchg
inc
sub
ss
push
inc
jg
neg
jmp
inc
icebp
push
aam
ret
xlat
loope
pop
or
stos
and
xlat
jge
pop
or
or
pop
jno
lods
jno
jae
xlat
sbb
jmp
or
insl
pop
xor
aaa
mov
xchg
sbb
scas
repz
xor
popf
movsb
lcall
adcl
icebp
fmuls
push
lods
pop
push
imul
jb
inc
push
mov
pop
gs
push
fildl
into
adc
push
loop
insb
push
ss
push
jbe
push
mov
lods
adc
add
addl
xor
sub
in
inc
mov
ljmp
popf
inc
ja
cmpsb
subl
stc
xorb
dec
dec
out
std
mov
popa
cmc
or
icebp
rcrb
neg
mov
push
imul
std
mov
cmc
lcall
arpl
mov
arpl
mov
xchg
loope
movsb
push
cmpsl
and
sub
imul
out
aam
fisubs
pop
jg
cmp
push
clc
loope
mov
out
or
adc
mov
ja
mov
or
add
fstpt
insl
ret
mov
gs
adc
pop
imul
xchg
out
addl
pop
out
push
shr
outsl
xchg
ret
dec
mov
rcrb
dec
dec
pop
push
out
divl
inc
insb
ds
test
aaa
ja
rcll
es
test
pop
mov
sti
push
mov
ja
pop
mov
cltd
adc
cwtl
fucom
enter
mov
aas
adc
repz
jne
stos
lods
dec
les
fsubl
rcll
jmp
dec
sahf
enter
stos
scas
loop
lret
xchg
pusha
rcll
pusha
lock
cmpsl
push
pop
xchg
xchg
scas
push
ja
and
and
push
lods
xor
icebp
enter
std
arpl
lds
repz
push
rolb
arpl
mov
mov
jnp
xor
mov
dec
out
aad
jl
pop
js
mov
jo
push
rcrb
jno
cwtl
incb
iret
nop
dec
pop
mov
add
popa
inc
mov
out
or
add
int3
mov
stos
dec
adc
or
imul
mov
pop
dec
out
hlt
dec
orb
pop
lret
adc
pusha
test
push
pop
bound
cli
push
lret
es
mov
adc
adc
dec
loop
xchg
leave
add
lds
inc
xchg
fwait
les
cwtl
dec
inc
pushf
push
xlat
addr16
push
or
mov
mov
xchg
pop
aaa
add
sbb
adc
stos
scas
mov
lahf
std
mov
dec
mov
xchg
clc
jmp
push
fwait
cmp
leave
jne
mov
mov
dec
jae
jae
inc
jp
adc
xchg
lret
stos
pop
stos
sbb
jmp
test
dec
rcrb
decl
jmp
push
pop
cmp
pusha
fisttps
aaa
and
mov
adc
sub
adc
mov
inc
and
lret
fsubrl
sar
pop
push
cmp
pop
adc
jb
sbb
lahf
lahf
dec
jae
shl
jae
fs
ljmp
xchg
sub
inc
ss
shr
or
sub
cmp
testl
insl
push
movsl
jp
shll
fidivs
outsb
scas
enter
mov
xchg
xchg
xor
or
mov
out
cmp
cmp
shll
cmpsb
jne
ja
in
inc
cli
imul
ss
das
icebp
repnz
sub
sbb
add
andl
dec
mov
xchg
stos
mov
pop
out
mov
adc
mov
cli
xchg
out
das
and
push
je
cmp
xchg
inc
das
ljmp
xor
xor
pop
popa
jecxz
shll
shl
imul
jb
jns
mov
xchg
je
pop
inc
loope
cwtl
xchg
and
fadds
stc
dec
jnp
pop
std
dec
imul
mov
sbb
lcall
pop
xor
mov
out
mov
cwtl
and
call
std
cld
dec
fcoms
lods
popa
inc
ss
pop
loop
rorb
dec
clc
mov
hlt
ds
cmp
push
js,pt
adc
movsb
std
or
jl
loope
inc
out
test
mov
lds
sbb
dec
mov
shl
fst
pushf
add
repnz
imul
pop
bound
xchg
sbb
in
mov
inc
add
imul
push
dec
xor
jnp
add
adc
inc
sbb
xchg
xor
insl
fsts
icebp
iret
mov
lahf
xor
mov
xchg
add
pushf
mov
leave
add
xchg
dec
test
push
and
roll
mull
aas
out
push
xlat
add
iret
jg
push
fcomp
ljmp
pop
aad
cltd
add
in
mov
lods
jle
movsl
iret
jecxz
mov
sti
mov
adc
sub
xchg
adc
pop
cwtl
jl
test
push
xchg
push
aas
fmull
sbb
call
lds
push
decb
shlb
sbb
and
lods
sbb
adc
jp
jo
adc
and
enter
dec
xlat
scas
sbb
aam
ljmp
mov
jns
add
or
in
mov
movsl
dec
cwtl
lock
lea
mov
pop
insl
shrb
ljmp
cld
sbb
lds
mov
or
pop
adc
ds
inc
cmp
cmpsb
jnp
lahf
stos
jbe
ret
mov
rcll
add
or
andb
int
sub
je
push
jecxz
sbb
mov
pop
jge
je
lods
cltd
imul
into
loope
lods
mov
ret
sub
arpl
jg
enter
adc
cmp
popf
lods
jns
enter
jb
inc
mov
push
divb
cli
subb
sti
add
add
js
bnd
sbb
add
pop
shrl
pop
and
jle
mull
push
or
mov
cwtl
das
aas
add
and
jmp
and
mov
ljmp
into
inc
pop
pusha
shrb
pop
pop
pop
outsl
inc
in
mov
cmc
stc
fwait
in
pop
mov
in
fimuls
test
push
lret
xchg
or
nop
push
das
mov
testl
xlat
sbb
xchg
fst
or
mov
push
fucomip
adc
les
test
inc
sbb
xor
shl
mov
dec
cmp
mov
test
in
loop
inc
push
negl
xorb
push
enter
fwait
aas
mov
and
mov
or
xchg
or
sub
aaa
jge
lods
xchg
cmp
xor
fwait
push
sub
outsl
in
dec
aam
push
adc
lahf
dec
push
jecxz
loopne
mov
pop
vsqrtps
mov
lods
repnz
dec
add
nop
mov
add
iret
dec
int3
mov
call
outsb
inc
out
push
adc
add
push
in
addr16
bswap
mov
sti
mov
cwtl
orb
adc
sarb
push
sub
movsl
mov
popf
xchg
lock
xlat
lret
stos
inc
std
insl
sub
ds
push
cltd
xchg
push
mov
mov
pop
out
fcmovnbe
xchg
scas
push
add
call
pop
nop
pop
inc
daa
out
or
or
mov
dec
mov
lods
test
popf
mov
scas
dec
loopne
push
mov
sbb
adc
pop
mov
fadds
out
push
sahf
in
xchg
or
fidivl
dec
sbb
and
mov
dec
nop
test
pop
fldenv
pop
dec
mov
push
xor
repnz
outsb
inc
lret
and
mov
fnstsw
cmpsl
mov
mov
mov
mov
mov
shll
std
mov
push
add
push
imull
fisttpl
pop
mov
aad
jb
daa
or
test
shll
and
sar
adc
psubsb
sbb
add
mov
bound
jecxz
xor
adc
or
sbb
repz
jecxz
scas
lcall
cltd
es
daa
mov
mov
and
xchg
push
lret
fwait
or
rcll
call
jp
mov
mov
mov
nop
rcll
jmp
data16
lret
jle
pop
dec
and
sub
mov
xor
jbe
cmp
push
insb
cmc
stos
ret
mov
leave
in
fistl
dec
mov
push
xchg
push
mov
sbb
aad
jo
rclb
adc
xchg
out
xor
test
lock
add
addl
cltd
cmp
testl
cmp
lcall
lahf
xchg
or
pop
cmp
std
push
jnp
mov
inc
xchg
pop
add
cmp
add
mov
je
enter
jbe
repz
cs
sbb
push
sub
roll
arpl
leave
mov
cwtl
or
shll
and
add
icebp
aam
faddl
icebp
jge
lock
inc
scas
inc
dec
sub
in
gs
movsb
inc
jle
mov
test
mov
add
lret
scas
aad
adc
or
mov
cmpl
fdivl
mov
jb
inc
push
adc
jge
inc
cmpsb
lret
push
add
inc
pop
in
push
jne
push
pop
adc
mov
push
mov
daa
fs
xchg
repnz
dec
adc
in
pusha
pop
push
lods
test
sbb
dec
int
xchg
sub
cmpsb
sbb
xchg
icebp
sbb
lret
loop
xor
lods
icebp
inc
test
std
stos
ficompl
jno
shl
insb
call
dec
into
in
filds
ret
es
pusha
popa
dec
pop
push
test
and
mov
aas
into
adc
je
clc
shlb
xor
cmp
adc
xor
dec
out
mov
icebp
push
fimull
or
adc
ret
add
adc
add
pop
repz
push
pop
sti
gs
mov
adc
btr
mov
loopne
sbb
sub
imul
in
pop
addr16
xchg
stos
shlb
pop
push
aad
dec
js
lret
jb
inc
push
lods
aas
mov
out
fisubl
pop
cmp
into
mov
sahf
movsl
lods
and
stos
mov
mov
inc
or
popf
mov
mov
xchg
dec
scas
std
or
cltd
fstl
leave
leave
imul
pushf
mov
sbbb
fidivrl
loope
in
addb
addr16
add
pop
call
leave
xchg
cwtl
arpl
std
inc
sbb
cmp
pop
ret
adc
jg
pusha
push
sub
and
cmpsb
daa
test
push
outsl
fcmovnbe
xor
ja
fadds
sbb
inc
add
test
out
dec
fcmove
mov
xor
inc
adc
movsl
jb
push
fucomi
out
mov
push
iret
xlat
imul
inc
jae
js
out
ret
in
sub
add
pop
jne
popf
std
das
jp
test
mov
idiv
sbb
xchg
push
daa
out
and
mov
ja
push
push
push
push
jl
dec
or
inc
pop
mov
sbb
add
or
and
and
leave
sar
inc
fildll
adc
cmp
adc
movl
cmc
mov
sub
adc
and
arpl
mov
xor
mov
jo
jae
lret
pop
pop
sti
jno
ficomps
loope
lcall
sbb
jnp
ret
sub
and
dec
jbe
hlt
addr16
and
pop
pop
leave
sbbl
sub
mov
jae
arpl
lahf
adc
sbb
int
mov
and
xchg
mov
pop
mov
adc
add
orb
adc
mov
add
insb
jp
sub
dec
or
xchg
fwait
jbe
inc
cmpsl
mov
faddl
les
jno
icebp
or
or
loope,pn
sbb
out
cmp
loop
jge
push
incl
dec
cmpsb
and
ret
sti
mov
pop
in
leave
jge
jb
inc
popa
shl
or
in
mov
call
dec
mov
or
clc
aam
jne
mov
sub
pop
pop
xchg
lds
mov
enter
jne
xor
xor
sbb
jge
roll
loope
std
push
gs
outsl
xor
outsl
pop
in
pop
and
mov
std
lock
jmp
mov
xchg
repnz
fldcw
movsb
xor
in
icebp
mov
sub
push
sbb
lret
adc
mov
mov
jo
dec
mov
mov
jmp
mov
das
rcll
add
loop
push
add
sbb
sbb
hlt
in
rclb
mov
dec
js
movsl
jmp
cmpsl
bound
or
fadd
push
lcall
in
add
scas
orl
sub
jp
sub
cmp
aaa
ret
add
scas
xchg
jl
xchg
jo
mov
out
adc
jge
pop
push
adc
xorb
add
cmp
lods
es
adc
rorb
fidivs
data16
jbe
aad
xchg
insb
lret
lret
cmpsl
cmp
lmsw
orb
bound
pop
mov
notb
and
call
enter
xchg
or
sahf
jp
xor
cmp
jae
inc
adc
lcall
and
bound
ja
xchg
pop
inc
aaa
sbb
fucomp
or
out
xchg
mov
mov
insl
test
in
loope
jle
add
addb
xchg
push
das
cli
ds
mov
cmp
icebp
shl
mov
loopne
adc
out
ret
mov
leave
mov
jecxz
lret
fldl
sub
pop
es
jne
inc
sbb
sahf
jne
ja
or
xor
fbstp
mov
mov
insl
xchg
outsb
outsl
sbb
or
fidivl
jmp
push
push
push
fsts
movsb
jp
enter
pop
pushf
pop
dec
add
mov
and
stc
fadds
incl
gs
enter
add
orl
ljmp
bound
pop
jp
push
inc
popa
dec
imul
pop
jbe
jg
inc
out
jne
jne
in
mov
loopne
pop
add
adc
and
mov
push
sub
jno
jp
inc
test
mov
dec
and
jb
mov
add
iret
gs
in
mov
mov
sub
mov
jmp
test
popa
mov
jnp
pop
je
lock
enter
sbb
xor
stc
xchg
xor
pop
or
sub
mov
fisubrl
sbb
sbb
roll
cmp
pop
lahf
loopne
bound
pop
mov
stos
lahf
out
push
sub
stc
push
int
sbb
jae
sbb
test
test
jl
add
xchg
adc
clc
orb
cmp
xchg
jecxz
imul
fwait
and
adc
sub
in
addr16
mov
andb
fsqrt
sbb
cmpsl
jecxz
fs
adc
rolb
inc
test
ss
gs
inc
out
pop
imull
jnp
pop
popf
call
pop
sbb
mov
ds
in
cmpsl
iret
xchg
xchg
push
call
mov
jl
adc
scas
inc
shll
movsb
loopne
in
adcb
out
bsf
std
loop
push
mov
push
inc
jae
inc
arpl
and
mov
and
sub
push
stos
xchg
loop
je
mov
into
lcall
inc
or
mov
add
sbb
jbe
xor
into
xchg
outsb
jne
mov
xor
pop
aaa
fimull
aam
fimull
das
lcall
movsb
sbb
addb
fcomp
fmuls
dec
push
lods
mov
add
popf
ds
into
mov
xor
into
mov
dec
cmp
filds
out
dec
roll
notl
inc
ret
mov
ja
rolb
or
or
call
popf
lret
push
rcrb
mov
jecxz
inc
cmp
lods
jge
adc
pop
mov
int
lock
lcall
ret
push
std
sbb
test
add
dec
xchg
sub
lcall
popf
into
fidivrl
mov
adc
xor
jbe
xchg
iret
in
mov
cmp
ret
mov
int3
adc
pop
mov
xor
dec
inc
ss
popf
adc
cmp
inc
loop
hlt
jg
lret
and
fs
mov
adc
movsb
sub
adc
pop
das
and
pusha
psrld
repnz
dec
stos
shrl
cmp
dec
movsl
insl
cmp
xor
sub
cmpsl
andb
mov
fldenv
cmp
enter
in
test
add
mov
inc
daa
cwtl
mov
test
insl
jle
mov
pushf
xchg
pop
dec
xor
jecxz
sbb
stc
push
in
adc
and
mov
test
mov
inc
jmp
xchg
testb
pop
ret
sbb
mov
mov
out
sbb
sub
sbb
cmpsb
movsb
or
fstl
pop
iret
movsb
mov
es
jns
mov
repz
push
jmp
lods
iret
das
inc
jbe
jl
dec
shlb
das
mov
popa
rolb
cmp
fbstp
imul
adc
cmp
push
pop
dec
dec
jns
adc
push
dec
popa
cmp
jge
cmpsb
xor
out
pop
aad
and
outsl
push
shrl
loop
pop
mov
lret
jecxz
sub
sub
cmp
fsubrs
xlat
fwait
inc
icebp
jl
or
sbb
clc
jb
mov
lcall
in
mov
lret
xor
imul
fwait
test
jmp
add
push
fists
in
mov
out
insl
sbb
scas
sub
xchg
mov
addb
ljmp
inc
insb
repnz
lods
nop
lret
hlt
add
repz
sbb
adc
int
arpl
movsl
sub
and
iret
cmpsl
das
xor
sub
out
scas
lret
cmp
lcall
inc
jbe
inc
fs
pop
test
iret
popa
jb
push
push
imul
mov
mov
addb
inc
out
cmp
jno
add
loopne
bound
cmp
cmpsb
mov
lock
push
lock
sub
icebp
push
fistps
xchg
enter
mov
cltd
pusha
and
jb
sarb
jno
cltd
mov
mov
and
adc
lcall
test
imull
lahf
stc
or
sub
icebp
or
or
mov
push
ss
push
enter
push
icebp
and
sbb
or
clc
cwtl
jno
sbb
push
fldl
fisttps
pop
pop
aad
in
sbb
cltd
ss
or
lea
ss
clc
pop
inc
mov
xchg
dec
int3
aaa
push
loop
pop
dec
dec
dec
fists
rorb
movsl
int
cmp
push
mov
loope
push
mov
cmpps
test
cmp
cli
xchg
pop
cli
mov
or
test
mov
add
rol
sbb
sub
mov
out
pop
jecxz
and
sub
cmp
lret
dec
arpl
mov
mov
out
shll
scas
sub
aam
cld
pop
or
ljmp
sbb
cld
jns
xor
shrb
and
daa
add
dec
out
jecxz
xor
mov
in
ss
mov
repnz
sbb
mov
stos
inc
sbb
lret
push
xor
and
jge
push
xor
add
add
and
mov
aam
test
mov
addr16
jo
push
daa
adc
icebp
in
das
push
stos
mov
xorl
or
mov
clc
in
ret
aaa
ret
sbb
por
pop
loop
sti
les
xor
lcall
mov
push
scas
adc
mov
jecxz
or
imul
and
add
lea
cmp
pop
mov
jmp
xor
out
xor
sub
fsub
repnz
test
aas
ss
insl
jb
xor
or
or
push
cmp
clc
cmp
jb
push
ljmp
sbb
jg
lret
add
das
jge
xor
and
imul
loope
inc
adc
jnp
das
sbb
movsl
ss
out
cmp
popa
pop
push
popa
push
mov
fcomps
mov
mov
in
and
adc
mov
jb
gs
jae
into
aas
std
sbb
cmp
xchg
fwait
mov
xor
jo
test
cmc
pop
cmp
pop
ret
xor
cmpsb
push
sbb
aaa
push
xor
test
outsl
inc
imul
popf
stc
rolb
test
cli
sub
andl
push
jns
mov
cmp
pop
and
cmp
inc
int3
mov
sub
jecxz
xlat
push
or
pop
mov
and
xlat
mov
lret
popl
jg
nop
lds
lods
mov
stc
add
imul
js
inc
add
sub
cs
mov
sbb
out
or
adc
sbb
sahf
orl
aaa
leave
out
and
push
sub
mov
mov
imul
fcoml
in
adc
mov
cmp
fsts
lds
lret
push
dec
sbb
pop
xchg
lret
ret
xor
push
rolb
mov
int
sbb
xor
loope
mov
repnz
out
pop
repz
or
sub
andb
mov
and
inc
add
or
xchg
loope
repz
add
mov
jo
jle
xor
aam
jbe
inc
inc
push
pusha
jo
cs
stos
mov
cmp
mov
test
mov
jge
and
insb
ret
xor
lods
pop
icebp
mov
iret
adc
fnstcw
lret
mov
and
pop
push
dec
mov
cmp
push
mov
inc
hlt
shrb
pusha
jo
sub
test
divl
lahf
fstpt
call
popf
fistps
push
sub
testb
frstor
out
or
dec
inc
xchg
and
inc
add
ret
dec
mov
or
and
arpl
sub
ja
pushf
or
mov
xor
add
inc
addb
xor
pop
scas
iret
jnp
push
dec
rolb
leave
sbb
adc
push
mov
push
mov
std
mov
leave
cmp
mov
xor
mov
fidivrl
inc
push
push
inc
outsb
add
inc
dec
mov
cmp
fwait
jmp
aaa
or
mov
cmp
or
sarl
jne
pop
and
fsub
sub
sbb
enter
pop
orl
inc
js
dec
sbb
gs
jg
push
mov
cmp
insl
mov
pop
or
dec
push
xor
cmp
fsubr
inc
mov
pop
inc
out
lahf
sub
iret
xchg
sub
int
sbb
sarb
xchg
jp
hlt
daa
dec
mov
inc
pushf
mov
divb
jmp
push
pushf
bound
mov
sub
out
fcom
mov
adc
inc
jmp
gs
inc
push
mov
mov
mov
jns
shlb
es
or
ret
adc
fwait
and
fildl
cld
insb
fwait
das
push
mov
pop
mov
jne
bound
iret
loop
and
int
adc
test
xor
and
in
test
or
idivl
dec
jae
ss
pop
aaa
push
mov
das
xor
cmc
fimull
dec
jbe
sub
jo
push
sbb
cmp
test
lods
mov
jg
mov
shrl
cmpl
fidivs
mov
mov
scas
jne
push
aaa
cld
shrb
jle
push
stc
scas
mov
pop
cmc
popf
sbb
test
cmp
xlat
fcomps
cmc
ss
mov
fstl
cmp
inc
fdivl
cmp
sub
pushf
or
scas
or
push
push
jp
fisubl
dec
nop
sub
adc
lods
jle
pop
inc
nop
popf
out
jns
andl
jmp
rol
mov
test
fisubl
push
inc
stos
sub
sub
adc
adc
test
mov
scas
xchg
and
mov
and
lods
pop
adc
fstpl
decb
jg
enter
sub
cld
push
fisubl
jo
mov
jmp
inc
ljmp
mov
sub
into
cmpsb
or
fwait
mov
mov
or
jne
xchg
lock
cmp
into
cmp
jg
mulb
sbb
test
sbb
sub
push
es
int3
enter
cmp
imul
aad
mov
sbb
lret
mov
fstps
daa
pop
mov
adc
outsb
mov
lods
mov
cli
and
sti
xchg
push
adc
ds
clc
iret
sbb
mov
add
inc
jp
push
insb
in
clc
push
xchg
and
mov
pop
je
mov
aad
mov
pop
or
add
xchg
scas
std
fmull
pop
sub
mov
lods
ffreep
ds
jo
daa
jo
or
mov
mov
sub
dec
call
mov
pop
push
or
xchg
movsb
inc
out
adc
jo
dec
loope
fstpt
insb
out
sub
adc
out
cmp
js
adc
xchg
aaa
jno
rcrb
mov
sub
arpl
lahf
add
add
enter
or
xchg
xchg
push
mov
push
cmpsl
pop
sahf
or
mov
and
scas
sub
jge
dec
ja
mov
mov
lahf
testb
int
loope
jmp
push
fdivs
loope
or
sbb
and
ror
pop
xchg
mov
repnz
xchg
hlt
fimull
in
inc
push
sub
imul
bound
ja
es
pop
sub
mov
test
inc
cli
push
and
nopl
or
sbb
arpl
push
mov
ja
mov
push
aaa
mov
mov
ret
sub
arpl
mov
push
pusha
cmp
jl
stos
iret
sbb
cmpb
adc
jge
inc
mov
repz
in
lock
xor
inc
icebp
ja
repnz
mov
outsl
xchg
mov
je
popa
add
test
aad
into
ja
xlat
xor
jo
xor
pop
lock
jno
mov
inc
jno
in
cli
imul
es
or
jmp
insl
sub
ror
mov
mov
and
lret
sbb
mov
add
sub
lods
int3
pop
xchg
pop
dec
jecxz
add
mov
xchg
rclb
out
push
lock
mov
inc
mov
dec
xchg
cli
xor
mov
daa
add
addr16
and
jle
adc
fadds
mov
cmc
sbb
dec
xor
sarb
inc
call
add
mov
mov
push
lcall
push
es
sbb
int
add
add
jae
mov
std
dec
mov
cmp
add
lret
jne
shll
push
popa
push
sbb
push
jb
sbb
pop
jno
xorl
push
adc
daa
dec
push
sub
stc
popf
lods
nop
aad
shr
ljmp
mov
add
clc
mov
outsb
jecxz
sbb
push
pop
push
ffreep
and
push
fucomi
jns
mov
andl
cmp
inc
lea
fstl
shlb
inc
popf
ret
pop
or
jbe
inc
or
cmp
imul
lea
ljmp
adc
mov
nop
int
jne
sarl
mov
imul
pop
mov
adc
dec
adc
add
sbb
mov
sub
jg
cmp
dec
cmp
call
adc
pop
inc
inc
cltd
xlat
aas
and
xchg
enter
or
or
push
in
repnz
or
inc
mov
and
mov
adc
mov
test
xlat
aaa
std
adc
xlat
xchg
xor
outsl
mov
in
fisttpl
add
cmp
mov
adc
dec
mov
lret
xchg
fs
lock
js
inc
mov
mov
sub
inc
das
xchg
fildll
jecxz
rep
fdivl
push
iret
cwtl
lods
mov
adc
stc
jl,pn
orl
lea
pushf
jno
push
push
push
jge
adc
mov
pop
xchg
lods
adc
mov
push
cmp
pop
and
fiadds
mov
out
fisubrl
cmp
or
test
cwtl
mov
mov
adc
nop
addr16
sbb
jmp
std
cmp
mov
pop
pop
lret
dec
inc
mov
sahf
jns
leave
mov
pop
inc
jmp
and
and
sub
shlb
mov
sbb
push
add
push
out
aas
lea
cmpb
cltd
mov
lahf
push
repnz
fsubrl
xchg
nop
fsubs
test
rclb
cmp
push
xchg
push
std
stos
push
push
mov
xchg
inc
sbb
add
sub
or
in
mov
iret
ljmp
rorb
pop
cwtl
jae
push
jne
pop
dec
cmpsb
add
mov
or
dec
push
or
into
rclb
jge
test
iret
ret
addr16
and
out
and
cmp
push
std
sub
sarl
add
lea
pop
fwait
or
daa
push
xchg
sbbb
mov
ficompl
loopne
cmpsb
adc
xlat
xor
jo
pop
testl
adc
lds
mov
pop
fistps
jb
xchg
add
int3
lret
xor
jl
fistl
push
int
and
fbld
dec
ret
cwtl
lahf
dec
aaa
cmp
insl
gs
clc
xor
es
scas
pop
scas
sbb
jo
stos
stos
jns
clc
fisubrl
inc
incl
jmp
fwait
pop
jp
in
push
out
out
pop
inc
subb
jle
out
lds
jns
inc
mov
pop
data16
push
xchg
mov
pop
push
adc
jns
jmp
jns
divb
and
imul
mov
sub
xor
and
mov
dec
inc
dec
sbb
test
fisubrs
out
iret
ret
or
je
mov
mov
stos
icebp
inc
dec
jecxz
push
insb
add
aas
and
inc
cmpb
pop
jnp
fs
cmpsl
inc
sub
call
jmp
inc
mov
xchg
adc
ss
call
mov
out
sub
fisttpll
inc
or
mov
add
and
call
push
rclb
mov
fwait
insl
out
andl
das
push
filds
bound
sub
nop
push
mov
pop
xchg
cmc
fcoml
inc
imul
repz
lock
shrb
movsl
aad
test
dec
pop
cmp
test
dec
cmpsl
push
leave
movsl
push
dec
jnp
pop
dec
loop
push
sub
in
int
ret
cmp
sub
push
mov
jns
xchg
lret
nop
lods
jb
add
push
clc
std
leave
repz
sbb
inc
jne
pcmpgtd
inc
cwtl
mov
les
xchg
add
mov
mov
push
lds
rcl
add
jecxz
outsb
xchg
ficoms
xor
loopne
shll
pop
stos
cmpsb
pusha
inc
mov
mov
es
push
popf
pop
dec
int3
in
loopne
dec
js
xchg
test
and
pushf
lock
imul
stc
mov
and
add
js
aam
mov
xorb
and
iret
sbb
lock
add
or
divl
int
mov
ret
mov
sbb
std
add
jmp
or
pop
cmpsb
xadd
inc
fistl
in
andb
outsl
or
xchg
mov
dec
or
fnsave
punpckldq
dec
rcl
insl
test
movsl
outsl
sub
nop
inc
xchg
xchg
mov
insb
into
jl
int
push
or
cs
fists
test
or
mov
push
stc
mov
jnp
inc
pop
inc
dec
addr16
add
and
cmp
dec
push
sbbb
jle
sub
ja
or
arpl
xor
dec
fdivr
and
cmp
push
lcall
jle
push
xchg
push
xchg
hlt
xor
mov
jae
js
sbbl
sub
dec
xchg
fcmovu
test
in
and
ja
dec
insl
xorl
dec
dec
cmp
lods
mov
mov
mov
pop
xor
sub
outsl
lea
push
scas
add
jb
push
test
push
and
adc
fsts
loopne
xchg
scas
xor
mov
sub
leave
leave
mov
add
cmc
data16
mov
push
xchg
xchg
push
sti
jno
mov
and
jbe
xchg
pop
or
pushf
push
mov
dec
mov
xlat
xlat
mov
add
mov
xchg
mov
inc
or
lret
mov
stos
int3
call
cltd
es
and
push
adc
pop
lock
ret
dec
xchg
cli
pop
out
repz
cmpb
sbb
das
mov
movsl
sbb
push
mov
inc
enter
mov
mov
loop
sbb
dec
mov
or
push
pop
jns
mov
repnz
aad
pop
xchg
mov
jge
stos
adc
sbb
clc
adc
mov
add
enter
inc
out
mulb
hlt
jmp
cs
sbb
and
push
stos
rclb
mov
push
outsb
ss
dec
or
call
xorl
repnz
test
mov
or
add
idivl
push
mov
enter
pop
frstor
out
fimuls
xchg
int
fsts
out
inc
jecxz
or
out
mov
subb
data16
mov
pop
inc
mov
shlb
mov
enter
loope
mov
mov
dec
je
cmpsl
rclb
in
cld
jge
dec
test
dec
cld
mov
push
imul
xorb
in
arpl
push
add
mov
out
mov
aam
jb
rorb
jbe
cmp
aaa
pop
push
cmp
and
mov
bound
clc
leave
pop
outsb
dec
adc
mov
xchg
aas
pop
cwtl
mov
and
add
ret
mov
adc
bound
xor
sbbl
adc
rclb
pop
sbb
xor
nop
nop
in
pop
pusha
call
xor
dec
push
and
and
ret
addl
mov
push
stos
addl
cmp
jmp
pop
or
je
outsl
pop
xchg
gs
je
leave
push
test
xchg
shrl
add
hlt
mov
divl
xlat
fwait
inc
pop
pop
xchg
es
mov
adc
or
and
mov
je
mov
test
add
inc
leave
aad
in
dec
clc
mov
jns
lods
add
push
sub
lods
dec
and
clc
mov
mov
sub
aas
stc
stc
sbb
rorb
dec
insb
in
ret
xor
xchg
enter
lcall
stos
jge
notb
xor
je
xor
test
bound
out
imul
jle
and
sahf
popf
xor
add
or
push
xchg
outsl
cltd
cmp
je
or
mov
or
sub
and
cmc
add
cmc
sbb
scas
testl
fs
jnp
and
lods
ss
das
pop
test
shrl
xchg
cmp
add
in
shlb
adc
xor
or
add
iret
fs
iret
jmp
lcall
vmwrite
std
ret
enter
sbb
or
add
mov
arpl
mov
gs
sbb
cltd
out
mov
out
jo
mov
mov
mulb
jns
dec
sbb
scas
mov
lret
cmp
mov
xchg
lods
xor
data16
adc
not
add
sub
outsl
mov
cmpb
adc
out
xchg
sub
cltd
fsave
imul
xchg
push
lods
sbb
jbe
lods
mov
lahf
sbb
xchg
sub
ja
iret
in
stos
cmp
mov
pushf
cmpsl
and
sahf
mov
scas
xlat
ffreep
sbb
movsb
push
xchg
out
jge
and
test
mov
xchg
mov
xchg
fdivrs
xchg
xlat
adc
mov
jno
inc
xlat
add
lcall
dec
test
fdivrs
movsb
sub
xor
lret
dec
sub
sub
mov
sbb
mov
adc
outsb
rcrb
ljmp
test
sbb
leave
add
sub
add
rcll
and
xchg
mov
pop
mov
movsl
jl
sbb
in
fcmovu
call
das
fidivs
test
mov
ds
xor
push
cmp
clc
popf
xor
or
flds
decb
mov
inc
push
xor
jno
sub
jns
dec
inc
cmp
add
leave
or
mov
mov
les
push
enter
adc
adc
fiadds
jl
test
test
xchg
mov
notb
imul
cmp
call
addr16
dec
sbb
or
inc
mov
adc
stc
xorps
imul
or
mov
xchg
sub
stc
pop
jecxz
js
push
js
add
or
sbb
out
std
gs
sbb
push
xorl
shrb
cmp
mov
jp
scas
pop
in
inc
or
ds
pop
outsb
stc
insb
inc
dec
dec
push
add
inc
into
cmc
cmp
push
push
fs
push
lea
rcrl
mov
lds
xchg
and
addr16
push
inc
dec
xor
and
mov
pop
add
fmuls
aaa
rorb
xor
outsl
scas
push
or
addr16
push
movsb
inc
pop
lahf
mov
insb
cltd
and
vmwrite
cmc
cmp
std
dec
dec
and
fsubr
aas
push
test
sti
push
mov
mov
imul
hlt
leave
sti
add
xchg
sbb
pop
pop
lods
insb
adc
jb
call
imul
jns
leave
or
repz
std
aam
jnp
lds
data16
cmp
lods
jg
shrl
xchg
add
pop
jne
cwtl
fcmovu
push
fcmovnb
pop
jns
xor
clc
jle
shrb
jle
add
psubd
jne
popf
push
fs
hlt
xor
or
lcall
inc
cmpsb
rol
mov
jo
pop
loopne
addr16
or
xchg
movsb
pop
jno
jmp
scas
cmp
push
clc
repnz
lock
mov
xchg
ret
push
cmp
xchg
adc
sbb
and
test
xor
lds
pusha
push
cmp
into
les
inc
ja
pop
fnstsw
ficoms
icebp
stos
rorl
int3
pushf
dec
int
mov
shr
insl
aam
mov
nop
and
add
dec
andb
sbb
xor
imul
popf
ljmp
add
jp
jl
mov
fiaddl
dec
gs
sub
call
movsl
sbb
jns
shrb
aam
jl
stc
add
pop
jb
xchg
sub
jns
push
pop
ds
ja
ds
and
inc
add
push
outsl
cmpsb
cmp
mov
sbb
je
subb
adc
std
fs
lock
js
les
pop
adc
push
mov
inc
in
cli
cmp
push
fdivrp
xor
aad
add
loopne
outsb
ljmp
add
stos
or
push
mov
mov
in
xchg
shl
cmp
jecxz
xor
test
jo
mov
imul
pop
scas
je
cwtl
in
test
dec
pop
xor
das
pop
sarl
js
cmpl
push
cmp
je
cmp
stos
mov
imul
ret
fldenv
subl
mov
jg
bnd
inc
adc
rcrb
or
shll
pop
mov
sahf
sahf
cmp
xchg
hlt
add
mov
mov
inc
aad
xchg
arpl
xor
bound
sbb
in
pop
sbb
cmp
fimull
scas
mov
jne
adc
sahf
sbb
cwtl
sbb
scas
pop
ret
test
fildll
mov
lds
fcoml
sahf
repnz
scas
mov
xorl
sub
cwtl
xchg
cmc
mov
pop
cmp
stos
cmp
flds
push
mov
xchg
pop
test
pop
lea
push
add
stos
add
push
adc
xchg
dec
scas
cmp
dec
test
les
dec
pop
ljmp
ret
and
pop
mov
xchg
inc
bnd
xlat
ljmp
in
aam
inc
outsl
enter
mov
daa
push
inc
aaa
enter
enter
in
and
mov
cmpl
or
or
lods
jnp
xor
lea
je
cld
imul
xlat
sbb
jo
fcmovu
push
imul
mov
lahf
fwait
pop
xchg
fidivrl
stc
cmp
sbb
cmp
std
pop
sbb
push
xchg
mov
mov
rclb
adc
dec
insb
sbb
sub
cmc
inc
push
je
push
push
test
movb
adc
lods
fwait
outsb
or
mov
test
mov
sbb
dec
arpl
cmp
adc
mov
jne
hlt
test
adcb
adc
cs
xchg
mov
stos
cld
and
icebp
jb
add
jge
or
mov
jbe
mov
jb
mov
rcl
mov
mov
adc
ljmp
mov
dec
push
mov
out
and
inc
lcall
mov
xchg
sub
outsb
lock
andl
fimull
aas
popf
cld
aad
mov
add
scas
xchg
dec
xor
xor
rorb
into
cmp
mov
subps
xchg
mov
fwait
add
sub
cmp
sti
out
sub
insl
jnp,pn
mov
daa
stos
cltd
lret
xor
pop
push
jp
inc
cmp
fsubrl
push
std
sub
xchg
pop
xchg
or
cmp
insl
xchg
xlat
loop
jne
stc
jae
sbb
dec
lahf
das
pop
popf
add
jg
push
push
rcrb
imul
xchg
fst
daa
mov
mov
mov
jmp
push
mov
sub
ficoml
cmpsl
mov
or
xor
dec
xchg
cld
mov
ret
pop
xlat
xchg
dec
idivl
cwtl
jae
inc
sub
ret
cmp
xlat
xchg
cmp
sti
inc
inc
leave
testb
sub
leave
jne
in
in
push
sub
xor
lock
into
inc
push
mov
mulb
jge
mov
jmp
popa
mov
push
push
dec
and
incb
iret
mov
cmp
ljmp
out
test
iret
fsub
loopne
jo
mov
cltd
and
xchg
inc
sbb
add
xchg
mov
in
mov
dec
int3
mov
inc
lret
movntps
daa
in
pop
ljmp
jge
loope
scas
sbb
scas
into
icebp
cmp
in
shrl
xchg
jo
das
sbb
cmp
cmp
daa
xlat
mov
sahf
jecxz
pop
and
ret
push
stos
jo
cli
or
jb
jp
enter
mov
movsl
dec
push
push
loopne
call
repnz
in
cmc
test
fmul
mov
jo
pop
ds
sti
push
lret
out
cmp
repnz
fwait
sub
cld
setle
sbb
pusha
test
fcomps
clc
std
cmp
adc
scas
in
sbbl
nop
add
xchg
dec
mov
in
or
repnz
movsb
xor
xchg
mov
jecxz
call
push
addr16
jecxz
insl
push
jnp
dec
and
in
add
pop
sub
mov
cld
pushf
dec
add
xchg
lods
dec
jbe
sub
sub
inc
mov
sbb
push
ss
in
or
jp
xchg
sar
mov
jmp
inc
push
pop
imul
push
xchg
and
lahf
addr16
pop
push
add
jae
mov
push
push
mov
cli
dec
movsb
notl
into
xchg
lcall
xchg
aas
sub
ja
mov
out
mov
jbe
add
sub
sub
sub
jne
add
clc
mov
and
mov
xor
xchg
push
xor
scas
imul
and
pushf
xor
sub
push
loope
cmp
insl
mov
dec
adc
inc
xorl
cmc
psrlw
sbb
popf
mov
push
xacquire
add
sti
mov
iret
mov
pop
mov
cmpsl
nop
mov
adc
xor
sbb
add
inc
outsl
addb
jg
shrb
lods
xor
movsl
push
add
cmp
cld
push
loope
add
stos
add
mov
dec
mov
sub
hlt
outsl
cwtl
ss
mov
cli
mov
scas
jp
out
xor
mov
mov
scas
mov
mov
or
adc
pusha
and
xor
xor
dec
sub
xor
cmp
or
mov
lds
or
adc
cld
add
cmp
add
mov
int
push
jle
adcl
fistpl
sbb
and
testb
fwait
inc
jmp
mov
imul
or
sbb
inc
xor
mov
mov
inc
movl
outsb
shlb
cmp
add
in
mov
lea
mov
add
out
mov
jg
mov
loop
shll
xor
inc
dec
mov
mov
fistps
arpl
adc
or
inc
jg
push
xchg
lods
jno
inc
shrb
sbb
mov
dec
les
mov
xor
or
inc
jb
mov
leave
icebp
mov
mov
shll
push
pop
mov
icebp
ret
dec
sub
push
pop
add
pop
xchg
add
add
pop
sbb
dec
testb
jns
in
jp
cmp
test
gs
mov
outsl
lea
jl
js
scas
out
mov
subl
adc
leave
sub
pop
es
adc
rclb
cmp
xor
add
push
repnz
cmpsb
nop
adc
add
dec
scas
jmp
jns
xchg
ja
clc
xor
sub
xor
lahf
sub
insl
rcll
pop
jle
jmp
add
jo
aaa
jge
in
push
mov
dec
mov
xor
ror
and
popf
pop
in
pop
cmp
mov
add
mov
sahf
lock
in
out
mov
sbb
leave
into
shl
jo
jns
pop
fldl
out
adc
and
popa
and
jno
jo
xchg
test
mov
gs
push
mov
jmp
pop
mov
inc
test
mov
scas
in
and
push
mov
insb
push
inc
dec
jbe
xor
push
or
cld
leave
sub
push
push
push
dec
lahf
cmp
push
xchg
inc
inc
repz
mov
push
jb
mov
inc
mov
data16
push
mov
loop
inc
jp
or
mov
loope
adc
sub
pop
shlb
mov
int3
repnz
jo
cwtl
pop
jmp
popa
push
repnz
or
dec
out
and
push
mov
cs
stos
and
mov
leave
cmp
fcmove
into
xchg
dec
or
xchg
and
sub
xor
add
fsubl
nop
mov
xchg
mov
fnsave
cmovae
cmp
fisttpl
enter
inc
int3
adc
push
lds
push
pop
imul
aas
pop
fsubl
gs
add
test
cmc
push
xchg
daa
and
fidivl
inc
icebp
lods
iret
mov
or
or
sub
mov
aas
jnp
xchg
rorl
mov
mov
sarl
mov
mov
inc
iret
pop
push
imul
or
test
cltd
push
adc
rolb
les
mov
outsb
shl
orb
mov
sub
mov
addr16
add
dec
insb
insb
xchg
sub
inc
cld
cmp
cmp
scas
push
and
pop
insl
xchg
je
add
sub
jmp
or
imul
cmpsl
outsl
sub
stc
vprotw
xchg
xchg
push
rolb
jne
call
cmp
push
int
sbb
cmp
fadds
stos
out
jo
add
loop
gs
imul
ds
sub
fnstenv
cmp
push
stos
fsts
adc
cmp
and
movsl
add
jecxz
add
flds
push
mov
pop
imul
and
movsb
inc
mov
jl
jnp
push
push
scas
mov
mov
arpl
popa
jae
jnp
push
in
mov
push
mov
insl
pop
lods
lock
sub
pop
aas
add
jp
and
or
dec
xor
push
sbb
je
outsb
jb
je
lods
cmpsb
push
test
leave
loop
scas
cs
push
mov
mov
mov
loop
sbb
push
mov
mov
inc
sbb
dec
outsl
fisubrl
jecxz
xor
xchg
sub
adc
sbb
pop
fisttpl
lahf
outsl
push
adc
addr16
jo
lret
out
fs
das
andl
add
orl
and
lods
out
jb
sahf
push
sbb
cmp
push
lock
in
sti
addr16
daa
push
clc
fimull
push
cli
test
and
leave
mov
cmpsl
imul
out
push
cmp
shr
jge
and
and
ss
mov
sti
or
cmc
or
mov
add
sbb
das
inc
les
jnp
pop
fstp
orb
pop
add
sub
fldl
lds
jnp
sbb
mov
adc
cmp
testl
je
xchg
add
mov
adc
adcb
addl
rcrl
test
pushf
lods
inc
xchg
xlat
js
loop
jnp
jo
jb
scas
clc
inc
inc
xchg
pop
sub
and
inc
jae
pop
scas
lds
mov
test
shrl
lods
mov
push
pop
mov
mov
lods
inc
add
aaa
stos
mov
add
xchg
test
fisubrl
popa
and
push
roll
mov
inc
iret
out
int3
add
cmovle
cvtps2pd
popf
fcoml
sub
out
cmp
sti
pop
outsb
ret
inc
cltd
mov
stos
incb
or
pop
scas
sub
js
mov
gs
adc
pushf
ret
mov
fidivrl
or
push
pop
push
cmp
aaa
sbb
sbb
rorl
or
pop
ljmp
mov
inc
scas
push
mov
jge
es
rcll
xorb
arpl
sbb
fcoml
dec
stos
mov
aad
adc
sbb
sbb
mov
jbe
test
ret
lahf
or
mov
cmp
sbb
adc
pop
mov
test
mov
test
sarl
mov
push
dec
rclb
cmp
callw
mov
iret
pop
sbb
jne
hlt
in
cmc
icebp
sub
daa
notb
scas
fists
shll
xor
xor
mov
lret
jo
in
into
lods
and
pop
sub
sahf
fisubs
loop
sbbl
ds
rclb
rolb
out
ja
lods
out
test
mov
into
cmp
inc
mov
pop
loop
xor
push
xlat
adc
divb
aas
and
sbb
lret
jle
repz
jmp
cmp
cmpsl
pop
dec
dec
aaa
push
outsb
cmp
jmp
pop
adc
test
fcomi
cmp
and
lods
mov
test
test
jle
test
xchg
mov
fdivrl
les
lahf
out
dec
and
movsl
or
scas
pop
adc
std
sub
xchg
dec
rolb
or
and
insl
mov
sbb
into
fisubrs
stc
sub
adc
sub
lods
iret
dec
or
push
add
jb
hlt
int
inc
mov
jp
mov
or
imul
roll
and
cld
and
mov
bound
pop
mov
inc
push
inc
sbb
adc
jnp
push
mov
mov
dec
and
out
fwait
jo
les
stos
push
mov
sbb
test
and
and
repnz
scas
mov
addb
xor
jmp
mov
fdivr
int3
pop
nop
pop
inc
mov
sti
shl
jno
mov
insb
push
fs
jge
movsl
ds
int
jns
mov
push
jg
pop
daa
xchg
jp
pop
fs
lcall
pop
cmp
pop
dec
jns
nop
inc
lret
imul
repnz
int3
mov
pop
pop
pop
dec
adc
xchg
ret
lahf
in
fldl
arpl
sbb
and
add
push
mov
movsb
cmpb
or
pusha
repz
roll
pop
movsb
adc
into
shlb
pop
sub
stos
clc
ljmp
add
mov
es
sub
stos
les
hlt
sub
sbb
hlt
icebp
jo
mov
in
adc
in
js
xlat
inc
pop
mov
icebp
js
aam
aad
jg
hlt
lret
addr16
lods
fstps
mov
cli
pop
mov
push
mov
mov
ret
ja
pop
mov
add
nop
mov
jge
dec
ss
xor
push
xor
mov
jg
pop
xor
adc
addr16
or
outsb
cmp
and
faddl
jecxz
and
cmc
sbb
and
loop
cld
sbb
push
nop
mov
mov
pop
mov
push
int3
aad
movsb
mov
leave
test
ljmp
adc
jo
loopne
adc
mov
push
mov
mov
fildll
inc
arpl
pop
cld
fdivrl
lea
mov
in
mov
xor
les
xchg
adc
pusha
sub
ror
sub
mov
std
pusha
add
stc
fs
testb
adc
insb
cmp
call
xor
xor
daa
add
pushf
test
sbb
fwait
adc
imul
repz
sbb
sbb
les
mov
jb
int3
jmp
mov
mov
nop
inc
in
add
lahf
add
rep
call
inc
lret
das
jmp
jg
add
sub
dec
in
jle
loop
clc
loope
dec
mov
shl
cmp
jl
mov
negl
pop
push
int3
mov
adc
aam
insl
sub
repnz
rcr
adc
sbb
shlb
mov
mov
xchg
fdivr
cmp
xchg
ret
scas
lcall
int
hlt
lret
fmul
mov
xchg
roll
fsub
test
sahf
rcll
sub
xor
cmc
mov
movb
or
jge
outsb
test
repnz
jge
divb
call
loopne
mov
mulb
sbb
or
insl
pushf
fsubrp
mov
shlb
or
pop
or
inc
shlb
sbb
mov
fs
js
cmp
push
or
bound
pop
pusha
stc
jmp
gs
add
push
adcb
les
jg
xchg
and
cmp
data16
jbe
pop
pop
mov
aam
mov
push
pop
ds
xchg
leave
pop
jecxz
xchg
xor
leave
lahf
rclb
jecxz
mov
mov
mov
cmp
and
jno
sbb
mov
pop
sub
sbb
pop
cmpsl
push
out
add
pop
in
jnp
icebp
mov
aam
inc
dec
repnz
mov
dec
cmpsl
inc
cmpsl
js
cmpsb
es
sub
or
xchg
xorb
add
lret
dec
stos
add
jl
dec
xchg
mov
push
movsb
jl
mov
pop
data16
fcoml
stos
repnz
jno
inc
mov
and
das
cwtl
or
sub
lcall
sti
in
sbbb
push
ja
xor
or
pop
mov
add
lcall
mov
dec
cs
es
std
decb
insl
jp
xchg
sub
pop
jno
jo
add
sbb
fisubrl
aas
push
dec
lock
pop
add
rcr
and
lcall
jp
pop
adc
xchg
loope
sahf
cmpsb
add
and
lret
jae
mov
inc
and
les
pop
push
scas
and
sahf
mov
call
pop
jg
inc
mov
cld
lods
xchg
cltd
xchg
mov
int3
push
pop
sti
das
add
push
xor
fistpll
xchg
fwait
stos
les
repz
jmp
jle
lods
jns
jne
inc
sub
and
iret
lds
loop
dec
arpl
mov
mov
adc
add
dec
jb
or
das
inc
aad
and
xchg
sub
cld
adc
pop
scas
xor
dec
add
or
lods
xchg
das
cmp
or
jmp
cwtl
jo
in
push
in
xor
lcall
out
cltd
mov
xor
or
test
nop
xchg
jb
push
push
adc
sub
fcomps
fistps
out
xlat
inc
popa
iret
insb
mov
sar
aaa
out
outsb
ss
xor
stos
lea
add
addr16
movsb
mov
xchg
push
inc
mov
rcrb
fnstcw
add
pop
fstpl
movsb
ret
rcr
mov
es
xchg
adc
out
nop
scas
flds
sbb
sub
xor
sub
and
pop
jle
insl
push
add
xor
loopne
cltd
dec
dec
subl
mov
push
mov
pop
or
mov
jbe
and
xchg
adc
or
pushf
mov
cmp
and
xchg
fildll
ss
sub
pop
aam
daa
push
push
shl
and
and
mov
scas
adc
cwtl
jb
cmp
adc
mov
xor
sub
stos
dec
mov
pusha
clc
out
cmpsb
xor
les
add
sub
mov
adc
inc
in
xchg
push
and
in
ljmp
mov
call
aas
mov
lret
jp
ds
sub
mov
and
imul
pop
cmp
mov
int
inc
mov
repnz
out
hlt
mov
push
dec
cmp
pop
fimull
mov
mov
inc
jg
inc
mov
imul
jmp
jp
add
dec
out
test
add
insb
dec
sub
xchg
mov
mov
mov
aas
pop
in
sti
inc
test
insl
push
movsl
aam
add
dec
xchg
jge
jns
mov
push
paddsb
mov
ja
fwait
jge
in
xor
test
test
mov
lret
data16
xor
lret
popa
xor
add
lret
pop
fs
xor
dec
inc
out
inc
xchg
test
pop
mov
jg
scas
or
nop
add
xchg
mov
pop
in
scas
jns
scas
lods
out
stc
arpl
sahf
ret
pop
sub
xchg
pop
mov
add
into
cld
popf
test
add
cli
cmc
ss
iret
cs
adc
pop
jmp
add
stos
sbb
cwtl
aad
pop
in
xchg
xor
in
mov
dec
int
dec
scas
or
xchg
fnstsw
daa
test
ret
dec
sub
mov
lods
fildll
mov
mov
cmp
pop
dec
pop
insl
lock
dec
das
lret
sbb
aam
cmp
insl
sub
sahf
je
adc
pushf
dec
dec
sar
test
roll
fisubrl
pop
cmp
cltd
sub
push
xor
insl
pop
ja
xor
mov
ficoms
mov
lahf
lods
in
out
push
int3
and
inc
popf
std
xchg
jecxz
dec
andl
dec
ret
adc
jo
pop
test
jg
fdivrs
insl
sahf
jb
fiadds
add
add
ljmp
mov
sahf
inc
js
xchg
cli
ljmp
addl
mov
loop
and
xor
es
inc
fsubr
mov
jno
idivl
orl
sub
and
leave
jo
xor
dec
and
fstps
mov
lock
ljmp
data16
je
daa
inc
ljmp
mov
icebp
mov
insl
or
fmul
daa
mov
xchg
xlat
pop
shr
ffree
inc
insl
lahf
sbbb
inc
mov
mov
aad
addr16
sbb
add
fcmovbe
ljmp
push
xchg
mov
and
sbb
js
mov
xchg
cmpsl
fwait
mov
pop
or
loop
xchg
xchg
lret
call
cli
xor
stos
fs
data16
lods
push
in
sbb
pop
pop
xor
push
xchg
adc
xchg
shrl
inc
lcall
and
repz
inc
pusha
sub
jmp
dec
and
mov
insb
mov
insl
xor
jns
or
push
rol
aaa
fnstenv
adc
cs
add
mov
mov
dec
xchg
movsl
xchg
movsb
outsb
add
mov
mov
mov
pop
fnsave
pop
dec
ds
xchg
mov
mov
mov
mov
sbb
jge
test
into
cmp
scas
or
js
cmp
mov
pop
mov
je
clc
lret
jae
add
sub
fldt
cli
pop
mov
cmp
adc
xchg
cld
rcrb
sub
cwtl
add
or
cwtl
insl
and
inc
xchg
and
shlb
push
sbb
mov
arpl
inc
aas
cmp
call
sub
mov
mov
dec
idivl
insl
cli
dec
pop
hlt
ss
loopne
dec
push
aaa
jo
push
sbb
dec
jle
mov
mov
stc
outsl
inc
test
loop
aas
test
fnstenv
scas
mov
ss
shl
ret
mov
add
add
imul
mov
xor
int
leave
rol
cmp
ret
out
pop
out
or
repz
fs
fimuls
cld
fisubrl
push
cmp
mov
mov
clc
cmp
or
cmp
mov
cmp
and
jno
cmp
adc
mov
loope
cwtl
ljmp
sti
test
xor
ss
inc
xorl
dec
cmpsb
add
fidivrs
cmp
clc
lret
je
cmc
cmp
jge
aas
xchg
les
add
push
and
dec
adc
inc
inc
sti
mov
push
dec
xor
push
aaa
adc
testl
xor
inc
pop
out
cmpsb
jg
cmp
cmp
mov
jbe
push
hlt
cmp
shl
pop
push
fwait
cmp
arpl
andb
xchg
xchg
int
inc
scas
mov
cmpl
sti
xor
jecxz
mov
jmp
imul
xor
cltd
add
fistl
in
push
loopne
into
sub
std
gs
xchg
dec
adc
adc
push
je
sbbl
popa
sahf
push
scas
jne
jnp
add
sbb
mov
nop
iret
mov
jbe
aam
sbb
movsl
je
pop
iret
dec
sub
and
push
inc
divb
ja
jmp
jmp
push
dec
xchg
lea
aas
and
mov
fadds
xchg
mov
test
sub
xchg
aam
pop
and
sub
jnp
push
in
xor
xchg
out
xor
test
lea
fwait
jno
pop
sub
nop
mov
dec
pop
ret
shr
sbb
push
sarb
or
mov
testl
mov
mov
leave
push
outsb
or
test
loopne
sub
or
adc
out
pop
das
xor
xchg
filds
jmp
push
lahf
push
xchg
adc
lea
mov
imul
xchg
push
inc
push
cld
sarb
push
repnz
in
cmp
fwait
sbb
ret
xor
cmp
push
mov
and
xor
in
daa
iret
cmp
push
pop
jno
mov
cld
jae
sub
dec
dec
out
inc
jnp
jg
and
gs
mov
or
push
data16
dec
sbb
int
mov
jae
out
pop
pop
jne
dec
pop
fisubrs
fwait
jnp
sub
lds
arpl
xorb
test
pop
jge
jl
push
sub
dec
movsl
xlat
stc
cmp
pop
mov
cmpsl
movsb
sbb
jo
pop
sahf
fwait
dec
out
and
inc
enter
lock
mov
pop
xor
or
popa
push
pop
adc
inc
lret
cmp
cmp
adc
lods
loop
mov
or
xchg
shr
push
xor
insb
cmp
sbb
stc
mov
xchg
mov
xchg
inc
push
xor
push
daa
scas
lods
push
divb
adcb
xlat
pushf
add
loope
outsl
push
lahf
mov
lahf
fidivs
mov
loopne
mov
and
iret
inc
test
cld
add
aad
and
repz
sti
xchg
cmpsb
pop
sub
xor
mov
les
pop
jmp
shlb
add
jl
push
dec
adc
arpl
imul
push
shlb
cwtl
cltd
xor
jp
into
inc
inc
sbb
add
pop
aas
adc
push
push
inc
add
push
and
insl
sub
lods
add
in
sarb
popf
mov
sti
pop
aad
aas
sbb
pop
jnp
fwait
push
lea
loop
push
sbb
imul
mov
mov
push
clc
sub
ret
or
mov
dec
bound
mov
imul
cmp
xchg
mov
repnz
mov
fwait
mov
cmp
cmp
inc
xrelease
lret
fs
bound
jp
fsub
push
pop
in
jo
fmul
sbb
je
adc
add
ror
xchg
dec
loop
xchg
pop
add
stc
sbb
fbld
je
imul
filds
enter
push
push
call
pusha
lods
xchg
push
out
test
mov
lcall
and
inc
pusha
or
shrb
test
push
addl
or
dec
xor
mov
push
sbb
cmp
stos
jge
repz
shrl
mov
pcmpeqw
inc
sub
mov
neg
sub
sub
and
xor
pop
nop
rol
fs
js
mov
ds
outsl
jae
jle
ljmp
out
outsb
stos
shr
into
clc
dec
fs
cmp
push
lahf
sahf
or
aas
push
mov
and
cmp
sbb
pushf
in
cmp
aam
inc
lods
jp
adc
cmp
lods
in
or
mov
push
and
sbb
push
mov
push
sub
xchg
std
fidivrl
lds
pushf
out
add
pop
or
movsl
xor
cmpsl
inc
sbb
jbe
dec
pop
add
dec
dec
and
lea
std
mov
jl
xchg
add
xchg
pop
mov
pop
or
cmc
arpl
lock
sub
ja
or
icebp
xchg
insl
pop
nop
push
leave
fwait
ljmp
in
scas
cld
push
mov
mov
ss
adc
jge
mov
adc
popf
and
push
pop
les
shll
xchg
pop
sbb
sti
sbb
sub
test
in
and
mov
adc
movsl
cmp
out
testl
nop
push
mov
mov
push
icebp
push
les
mov
jmp
and
inc
adc
in
or
sub
call
mov
push
cmp
pop
fs
xor
mov
push
scas
mov
lods
arpl
outsb
outsb
push
out
jnp
push
inc
dec
xchg
leave
or
cmp
out
xchg
outsb
mov
push
imul
adc
push
sbb
lahf
xchg
jbe
call
jp
ja
clc
adc
ficoml
fimull
push
push
cmpsl
dec
push
dec
push
jno
adc
jno
inc
sub
jp
js
enter
dec
pop
test
cli
dec
jmp
mov
dec
cmp
pop
lds
add
clc
sarb
mov
dec
xchg
std
popa
xchg
add
mov
rolb
xchg
push
repz
outsb
repnz
pop
inc
fwait
pop
sti
mov
pushl
call
dec
cmpsb
stos
lret
jp
adc
fisttpll
mov
fmul
rcll
sgdtl
pop
push
mov
sub
mov
sub
loopne
cmp
sbb
leave
push
js
addr16
fadds
mull
test
jnp
xchg
popf
movsl
mov
repnz
jo
daa
jle
aaa
push
mov
ret
dec
jne
int
adc
and
fadd
jbe
aaa
rolb
jg
mov
imulb
stc
xchg
cli
mov
cwtl
or
push
cwtl
lods
js
or
movsb
popl
mov
and
push
sbb
xlat
sub
or
dec
jle
test
pop
jnp
rcrl
ret
and
inc
fs
stos
mov
les
fwait
xor
push
push
int
sub
popa
loopne
in
js
sub
cli
ret
push
iret
jne
lcall
mov
gs
std
sahf
daa
stos
cmp
popf
mov
and
std
arpl
dec
sub
push
jg
int3
cld
mov
std
in
xor
jbe
lcall
fiadds
jmp
testl
add
lret
mov
sarb
and
cs
jmp
push
aad
mov
lret
sub
enter
cmp
add
sbb
push
jo
pop
sbb
push
mov
adc
cli
pop
fmuls
fdivr
inc
jg
sbb
sbb
dec
daa
add
mov
add
lret
fs
push
xor
ljmp
jnp
pop
stos
push
adc
sbb
xor
mov
adc
and
imul
cmp
push
repz
mov
enter
sub
jns
jbe
pop
mov
out
cmpsb
add
aas
filds
enter
sbb
pop
inc
test
in
mov
int3
mov
int3
xchg
aas
std
sbb
addr16
adc
xchg
pop
pop
mov
clc
clc
xchg
sarl
idivb
mov
pop
repz
jnp
dec
mov
outsl
repnz
sub
pop
cmp
or
xchg
mov
je
incl
mov
dec
inc
in
iret
ja
jnp
sarb
inc
pop
mov
or
or
stos
rcl
inc
hlt
mov
xchg
add
outsb
sub
mov
in
orb
ror
cltd
adc
sub
scas
xchg
push
mov
dec
xlat
pop
in
mov
imul
arpl
add
aaa
mov
ss
xlat
fiaddl
imul
jmp
jle,pn
enter
out
repnz
test
pop
dec
inc
or
adc
nop
clc
addr16
push
stc
inc
mov
push
mov
dec
fisubrs
ss
cmp
mov
or
and
pop
hlt
jge
out
cmp
stos
cmp
cmpsl
pop
inc
add
lahf
cmp
in
lock
or
jge
lea
fcompl
xor
sbb
adc
add
enter
xor
test
fdivrs
int
sub
push
je
repz
out
f2xm1
scas
mov
imul
pop
addr16
dec
inc
cmp
mov
in
shll
shlb
adc
xor
je,pt
cld
lock
sbb
lds
int3
lds
mov
rorl
or
mov
cltd
mov
dec
jmp
fsts
fnstsw
jmp
pusha
inc
pop
daa
ficompl
scas
popf
push
mov
or
inc
jl
sub
dec
push
jmp
push
jb
je
addl
imul
cmp
or
cmc
push
and
xchg
int3
jg
pop
xchg
fs
stc
mov
loope
or
fldt
enter
loop
xorl
loopne
sbb
cltd
dec
jnp
jle
daa
add
gs
mov
lea
dec
mov
cmpsl
cmp
ret
fldt
popa
push
adc
movsb
std
xchg
dec
and
xchg
sbb
push
addr16
das
mov
cmpb
or
push
mov
insl
fsts
dec
push
outsb
js
in
loopne
xor
fsubrl
sarb
xchg
loop
lods
jnp
dec
ror
mov
sub
out
jbe
loope
xchg
daa
repz
inc
pop
mov
add
and
stos
dec
clc
lss
adc
push
repnz
cmpsl
mov
xor
xor
pop
mov
lock
inc
mov
xchg
dec
in
lods
add
sbb
push
into
call
pop
dec
and
xlat
ja
frstor
shl
repz
addr16
movsb
xchg
adc
and
call
xchg
cmp
lea
jmp
dec
notl
dec
lret
clc
sbb
dec
sbb
aam
xchg
shlb
push
js
lahf
divl
repz
xchg
repnz
nop
in
int
imul
sub
ljmp
adc
orb
andl
mov
cmpsl
andl
push
pop
rol
add
rolb
jae
iret
test
aad
fisttpll
lds
rcll
orb
fisttpll
mov
and
movsl
pop
dec
mov
or
stos
gs
push
add
or
and
or
pop
mov
cs
add
gs
jmp
ret
mov
push
and
add
and
enter
cmpsb
inc
or
flds
dec
sub
mov
je
mov
and
mov
roll
xchg
pop
or
pusha
ljmp
add
sbb
jo
xor
sti
jae
mov
inc
popf
jb
sti
leave
xchg
mov
jns
je
arpl
dec
or
subb
jge
jae
xlat
popf
dec
inc
adc
xor
rcl
jae
or
mov
jno
push
mov
jbe
mov
jle
test
fldl
inc
test
fldenv
mov
cwtl
xchg
scas
getsec
sbb
xor
sub
test
sub
iret
inc
sahf
mov
fldt
out
mov
jnp
xchg
ss
or
adc
fidivrl
mov
stc
das
adc
ret
aad
sub
fimuls
call
imulb
inc
addr16
stc
jnp
sbb
and
lcall
clc
mov
mov
cld
dec
icebp
inc
adc
aad
mov
mov
sbb
popa
xchg
inc
mov
mov
frstor
push
xor
cs
out
xchg
in
gs
mov
in
rcrb
ret
mov
out
cs
leave
ja
fs
cmpsl
xchg
xchg
push
cwtl
push
lods
test
adc
jae
mov
jns
push
jno
ret
ret
xchg
jnp
scas
mov
fistpll
ljmp
mov
idiv
incb
arpl
jmp
mov
movsb
jnp
in
cli
adc
gs
inc
xchg
inc
nop
mov
stos
loope
fiaddl
pop
xchg
aam
sbb
inc
arpl
jl
imul
push
sbb
loop
sbb
pop
faddp
int
imul
mov
dec
lock
cmp
lret
lret
insb
fbld
rcll
cmpsb
adcl
jecxz
xor
xchg
push
out
adc
or
jle
daa
inc
pop
fadds
int3
or
insl
jb
push
es
aad
in
out
sbb
push
xor
lcall
popa
nop
xchg
pop
pop
lcall
mov
stos
pusha
sub
mov
xlat
mov
or
cmp
dec
arpl
outsb
push
jae
repnz
sbb
les
icebp
popf
jne
fstpl
int3
mov
es
xchg
les
xor
jmp
add
lret
fdivr
inc
mov
iret
hlt
push
fcmovb
cmp
sub
push
cmp
les
in
push
add
rorl
sbb
cltd
pop
mov
pushf
mov
push
or
sbb
jnp
mov
in
pushf
ds
pop
jb
mov
mov
sub
xchg
imul
sbb
and
shl
in
and
sbb
ret
xchg
pop
shlb
xor
pop
out
ffree
fistl
cmp
fs
scas
xchg
pop
incb
nop
or
dec
mov
je
mov
es
xor
int3
pop
mov
test
xchg
andb
xor
sbb
ljmp
scas
bts
push
repz
in
int3
sub
fsubp
stos
lds
iret
lahf
lds
out
popa
scas
cwtl
and
jle
and
mov
ret
arpl
cld
adc
pop
adc
inc
aad
inc
shll
imul
lods
mov
jmp
fs
in
add
iret
inc
sahf
sbb
dec
outsl
pushf
cmpl
lea
lret
mov
test
lahf
jne
lods
shll
testb
hlt
pop
sahf
jp
xchg
loopne
sbb
je
hlt
fisttps
jb
fstpt
push
out
jo
das
mov
or
int3
clc
insl
xor
addb
fdivrs
mov
dec
imul
mov
dec
lods
mov
mov
cmp
xor
adc
pop
rcl
add
jecxz
in
pop
in
inc
and
push
mov
or
mov
pop
cmp
aad
shrb
gs
hlt
shr
ja
in
xchg
and
ret
mov
in
dec
xlat
jecxz
repnz
or
addr16
push
andb
xor
push
push
aaa
rorl
or
aaa
jg
js
push
pop
mov
imul
dec
or
int3
dec
rcrb
add
lret
insb
jno
mov
xor
rcrb
push
rolb
sbb
nop
mov
test
dec
dec
mov
add
mov
inc
adc
sbb
enter
imul
push
addr16
lods
adc
lods
cmp
add
sub
adc
jge
xlat
jns
sub
sub
cmpsl
aaa
push
daa
in
sbb
jno
push
jmp
call
sbb
subl
dec
and
jp
inc
je
das
bound
or
dec
shrl
test
jb
ja
repnz
pop
testl
loopne
cmp
push
scas
adc
repnz
pop
aaa
adc
fbld
pop
nop
call
mov
add
dec
mov
add
ljmp
fucomi
mov
sub
notb
xchg
addr16
pop
push
cwtl
inc
scas
js
pushf
push
mov
rcr
arpl
fwait
dec
int3
out
test
popf
nop
sbb
in
pmulhw
in
dec
repnz
cmpsl
inc
mov
add
movsl
xchg
xchg
push
insb
pop
notb
xor
mov
stos
ljmp
fisubrs
dec
inc
jmp
inc
std
or
sahf
jmp
or
divb
movsb
inc
and
lods
jg
rorb
and
test
fisubrl
cmp
aad
adc
mov
fcoml
mov
xor
fcmove
jne
mov
sbb
mov
xchg
push
mov
sub
jecxz
das
add
xor
rol
out
repz
mov
into
enter
pop
xchg
ret
or
fldl
dec
sub
pop
fs
loop
shl
or
lahf
std
insb
xchg
mov
bound
les
jl
cld
mov
andb
xor
aad
inc
sahf
cli
jp
jnp
enter
rcll
mov
jl
fs
lahf
cld
addr16
cld
pop
shl
mov
pop
sub
test
dec
sub
inc
push
pop
mov
fstpl
push
push
lret
or
adc
add
jmp
inc
je
sahf
insb
pop
dec
xor
jl
jne
add
xor
dec
inc
mov
pop
push
dec
add
mov
push
ret
stc
cmp
mulb
test
inc
out
cmp
test
xor
loopne
gs
ret
shlb
out
gs
cmp
inc
or
and
xchg
inc
xor
add
jo
jg
adc
push
out
push
in
pop
daa
scas
xor
push
mov
pop
add
test
sbb
clc
xlat
mov
mov
in
jb
cmp
xlat
aad
mov
stos
pop
cmc
push
out
cmpsl
adc
cmpsb
pop
mov
test
push
clc
mov
sub
mov
insb
lods
test
jbe
subl
pop
std
cmp
icebp
fmull
xchg
push
or
dec
inc
pop
loope
lock
mov
outsl
inc
xchg
or
inc
and
mov
bnd
int3
xor
sub
xchg
dec
add
adc
xor
or
iret
xchg
add
mov
jbe
pop
aaa
add
mov
push
fstpl
int3
jb
mov
mov
rcll
push
mov
nop
cmovge
cld
jne
inc
adc
add
repz
push
loopne
in
jmp
movb
push
and
mov
dec
push
nop
in
pop
or
sahf
daa
dec
cmpsb
inc
insb
push
aam
fiaddl
pop
das
andl
cwtl
mov
pop
aad
xchg
or
push
cmp
or
imul
lcall
push
or
setae
lcall
or
add
int
sbb
xchg
dec
test
outsl
sarb
sub
inc
js
cli
cmp
aaa
pop
inc
mov
stos
or
cmp
mov
fdiv
and
jbe
outsb
aas
sub
mov
rorb
and
xchg
dec
enter
xchg
mov
or
sbbb
std
insl
mov
xor
and
and
aaa
pop
orb
test
pop
mov
popf
adc
out
lds
scas
mov
mov
xor
sahf
test
xor
mov
mov
xor
adc
xchg
sbb
enter
rcl
in
cmp
cs
jge
sub
lahf
mov
sbb
jp
dec
push
mov
shll
call
xor
push
rorb
inc
cmpsb
jp
mov
mov
sbbb
xor
jge
sub
push
fmuls
xchg
jl
push
out
xchg
push
jns
sahf
xchg
push
sub
and
xchg
xor
or
in
scas
cmp
push
sti
divl
sbb
jg
dec
add
inc
movsb
and
imul
fldz
mov
dec
push
xor
pusha
fcmovnb
testl
mov
cmp
ss
sub
std
data16
rcrl
and
mov
push
jle
call
dec
loope
stc
test
scas
sbb
xor
jg
xlat
push
mov
out
push
mov
jle
adc
mov
ljmp
mov
mov
in
in
and
rclb
and
add
inc
leave
xor
mov
mov
mov
or
mov
push
and
lahf
ret
outsl
or
mov
shll
mov
jecxz
pop
cmp
lret
pushf
dec
repnz
shll
jno
pop
test
cmc
into
fcmove
lea
cmpb
adc
sbb
cmp
in
je
ss
push
dec
mov
mov
fldcw
xor
mov
jo
ss
adc
hlt
sub
cwtl
mov
mov
or
sub
pop
cmp
fiadds
mov
mov
and
test
pminub
in
out
cli
in
scas
in
pop
cwtl
mov
xchg
adc
xor
fldl
loop
mov
gs
sub
mov
mov
and
cmp
jb
or
jns
insl
lahf
std
loope
dec
add
sbb
jae
mov
adc
dec
shl
mov
pop
repz
or
inc
mov
ficoml
loopne
xor
cs
imul
test
xchg
pop
imul
nop
dec
push
xchg
fsubl
pop
jae
and
shr
mov
or
sti
push
ficompl
popa
sahf
mov
subb
movsl
adc
push
cmp
push
sar
xchg
sub
cmc
mov
addr16
xchg
test
mov
icebp
jmp
loop
testb
les
icebp
shlb
idiv
jno
sub
sbb
inc
push
cwtl
jo
xor
movb
push
test
pop
bound
xlat
ret
sbb
dec
int
jg
les
sub
cwtl
fcompl
aaa
mov
push
inc
enter
rcrl
cli
iret
adc
daa
pop
outsl
push
scas
sub
push
adc
add
pop
jns
sti
jnp
adc
mov
mov
jne
mov
or
js
xchg
add
and
or
xor
popf
arpl
arpl
mov
pop
inc
sub
and
push
sbb
add
jge
int3
xor
pop
les
jns
cmpsb
dec
leave
ds
cmpsb
dec
pop
xchg
xchg
cmpsb
lret
push
add
jp
jnp
loope
push
mov
push
mov
daa
in
pushw
test
xchg
rcr
jmp
or
mov
cmp
jge
jmp
sbb
jne
arpl
and
jle
notl
pop
cmc
xchg
rolb
movsl
cmp
dec
xlat
sub
das
stos
test
imul
daa
test
inc
shlb
push
movsl
adc
pop
push
mov
int3
push
xchg
clc
lods
add
xchg
cs
in
lock
pop
jbe
pop
cmpb
leave
adc
lret
mov
adc
jmp
mov
popa
rcrb
ljmp
pop
push
nop
es
inc
xchg
xor
call
mov
mov
inc
out
pop
cmp
das
loop
cmpb
sub
mov
roll
cld
inc
std
pop
sbb
xor
scas
mulb
mov
js
enter
fnstenv
cwtl
ljmp
sbb
mov
inc
dec
iret
add
nop
loop
out
js
shlb
cmp
or
das
movsl
dec
add
cmp
xchg
lret
xchg
fcomps
ja
pop
sahf
scas
or
jb
das
test
pop
xchg
jbe
repnz
insl
imul
in
ljmp
pop
lds
inc
mov
imul
mov
cmc
mov
cmp
cmp
aaa
mov
and
xor
cmp
push
push
sbb
hlt
movsb
testl
sbb
cli
xchg
sub
rorl
sub
inc
xchg
add
inc
mov
mov
fwait
push
adc
shlb
lock
push
sbbb
sbb
mov
mov
mov
sbb
arpl
stos
mov
lods
fists
mov
cmpsb
fidivl
xlat
call
enter
mov
movsb
in
cwtl
adc
pop
pop
fcomps
or
test
cmp
or
and
dec
imul
jge
ss
dec
mov
mov
xor
cmc
add
lret
imulb
xor
pop
xchg
lods
lcall
ljmp
sub
push
cmp
jns
repnz
icebp
pop
pop
add
adc
pop
leave
lods
ja
xchg
push
test
add
xchg
inc
push
jle
and
cmp
ja
adc
sbb
mov
inc
filds
push
inc
xchg
pop
or
dec
inc
jne
mov
sbb
pop
outsb
inc
jno
rcll
mov
fwait
fs
repnz
sbb
jge
adc
push
push
sbb
push
pop
push
out
popf
xor
jae
mov
mov
mov
jbe
popf
cmpsl
popaw
test
imul
test
pop
out
adc
inc
out
mov
lret
rclb
rcr
jecxz
stos
sbb
je
jae
je,pn
mov
imul
movsb
loopne
mul
mov
arpl
sbb
pop
or
outsb
pop
bound
lock
lea
mov
or
popa
jbe
push
pop
add
pop
pushf
jbe
cmp
mov
in
jne
pop
pop
push
xor
ss
pushf
insb
lret
in
divl
imul
mov
cmpsl
scas
xor
popf
pop
test
stos
adc
pop
test
mov
xchg
mov
div
popa
lahf
xchg
mov
mov
push
inc
pop
jmp
int
mov
or
loop
fsts
ja
push
dec
inc
add
ds
xchg
xor
mov
stc
daa
es
sub
shlb
or
repnz
and
mov
push
add
cmp
inc
inc
imul
mov
jb
dec
inc
test
cmp
mov
jge
hlt
pop
and
lock
xchg
sbb
imul
sbb
push
jecxz
pop
jecxz
adc
enter
ficoml
inc
jp
push
scas
push
sti
push
cmc
out
xlat
xchg
imul
inc
push
clc
loope
imul
dec
mov
mull
cmp
push
bound
lcall
outsl
inc
ror
mov
cld
inc
insl
fmull
xchg
arpl
jnp
es
imul
xchg
addr16
ss
inc
pushl
mov
fcmovbe
cmpsb
xor
mov
push
adc
xor
idiv
jns,pn
sahf
push
ret
sbb
or
loop
xor
dec
addr16
jmp
inc
les
insb
jmp
xchg
jp
out
mov
pop
jae
mov
fwait
ja
aad
call
lods
stos
scas
xchg
fsubrp
repnz
and
loope
orb
out
push
arpl
jg
in
mov
in
sahf
stc
icebp
int
repnz
xchg
pop
pop
mov
or
mov
cmp
fdivr
push
sub
int3
lods
leave
iret
mov
mov
jmp
pop
sbb
dec
in
shll
mov
xchg
xor
out
ret
pop
mov
lret
lcall
lcall
into
pop
test
cmp
dec
mov
xchg
rcl
mov
insl
inc
aas
mov
mov
ss
js
popf
orl
insb
out
dec
dec
and
sub
es
faddl
jge
or
adc
div
pop
adc
mov
jecxz
xchg
cmp
or
repnz
adc
mov
in
sub
cmp
loop
mov
or
adc
ret
pop
outsl
cmpl
sti
jo
outsb
rcll
stc
aam
imul
push
adc
push
popf
jne
sub
lret
cld
mov
add
stos
cmp
fcomps
pop
or
in
iret
sub
rcll
fs
inc
iret
sahf
sti
lods
xor
lock
test
jo
mov
jo
sub
xor
ja
std
pop
loope
push
sbb
or
mov
es
int3
lret
loop
shll
mov
pop
fcmovb
call
jb
insb
aam
mov
sbb
sbb
add
adc
sub
fnsave
sub
pop
or
dec
xor
pushf
mov
mov
out
jns
mov
rol
push
or
cwtl
mov
jle
push
sub
movsl
notl
es
mov
fisubs
in
fldt
inc
insb
pop
leave
dec
xor
add
mov
pop
xchg
pop
insl
mov
cld
dec
outsl
pop
fcoms
lods
shll
add
mov
jg
imul
inc
push
push
mov
sbb
rcrl
fistps
mov
push
or
cli
movsb
cmpl
loop
push
mov
outsb
movhps
add
mov
test
cmp
or
in
fstps
call
inc
cmp
call
inc
xor
out
and
loope
jmpw
adc
fldt
rorb
and
mov
fcompl
mov
sahf
jbe
jecxz
and
test
test
aad
mov
out
movb
ret
xchg
cmp
mov
pop
dec
cmp
cmp
sub
mov
das
jo
call
orl
mov
xchg
js
icebp
push
sbb
lds
pop
sarl
imull
stos
lea
sub
aam
addl
push
pushf
sub
mov
push
xor
pop
bound
test
sbb
test
lret
data16
inc
outsb
and
sub
cmpsb
das
jae
xchg
out
int
jmp
aaa
mov
leave
mov
popf
adc
imul
ret
inc
fwait
or
out
ja
sbb
and
dec
lods
insb
xchg
dec
xchg
fnstcw
push
adc
or
lret
cmp
pop
xchg
mov
icebp
lds
mov
dec
jne
and
lahf
enter
jle
jp
cmpsl
fisubrl
inc
mov
gs
xchg
daa
cmp
xchg
aad
jmp
jne
test
out
cltd
xor
outsl
outsb
lret
aaa
les
sti
push
popa
xlat
pop
pop
fidivrl
ret
rcll
jns
xchg
fsubl
cs
cmovle
je
fidivs
in
push
test
shlb
jl
std
jle
loopne
jo
jnp
iret
pop
aam
sub
push
int3
fcoml
inc
cld
and
inc
push
es
or
dec
mov
jecxz
jb
jge
pop
ficompl
popf
cli
push
inc
fs
cmp
push
sub
mov
es
and
xlat
jno
ds
sar
push
mov
jl
xor
ljmp
movsb
mov
es
cmc
mov
mov
fcmovne
push
cltd
sarb
roll
sbb
inc
loop
pop
lea
test
movb
jg
insl
mov
leave
shll
pop
rcll
jo
inc
push
add
inc
movsb
sbb
sbb
ret
pop
push
push
hlt
push
verr
aam
out
inc
addl
int
fimull
pop
add
push
call
push
mov
add
sub
loope
and
push
in
pop
dec
push
insl
push
sbb
mov
xchg
adc
or
cmc
rol
or
cmpsb
fsts
subb
sti
lods
mov
into
dec
pop
bound
ds
push
out
jmp
push
enter
jg
fwait
adcl
adc
int3
dec
sbb
stos
aaa
scas
adc
scas
jae
fdivrs
test
mov
rorl
andl
push
fdivs
add
jnp
into
mov
icebp
lret
ret
ret
jnp
popa
push
xchg
je
insb
sub
enter
sbb
stos
das
outsb
xorb
xor
mov
xchg
clc
xchg
les
dec
call
add
cltd
arpl
inc
cmp
aad
imul
push
pop
adc
jbe
xlat
nop
mov
stc
lds
pop
inc
pop
and
repz
imull
sub
mov
lods
sub
push
cmp
das
das
aam
cld
sub
xchg
dec
pop
in
push
popa
mov
testb
adc
andl
enter
out
cmp
aas
sti
cmp
xchg
sbb
aaa
mov
and
cwtl
stos
mov
mov
pop
cmp
cmp
fbld
jo
mov
cmp
jns
pop
mov
cmc
dec
popa
nop
imul
std
int3
xchg
imul
icebp
xchg
ja
das
divl
shll
sbb
mov
pop
xor
movsl
pusha
or
popa
cld
cld
xchg
mov
adc
das
fstl
arpl
popf
xor
data16
push
push
out
out
dec
andl
mov
lahf
fimull
imul
mov
outsb
mov
test
jae
shll
sbb
inc
jecxz
pushl
stc
outsb
inc
add
mov
ljmp
inc
rorb
cld
loop
push
inc
or
je
jns
inc
inc
icebp
cmp
or
or
sarl
dec
std
sbbb
int3
pop
dec
dec
or
ficompl
ljmp
sbb
popa
sub
cmp
cli
pop
xchg
and
dec
fmul
jmp
or
cmp
cmp
xlat
incl
dec
or
cltd
adc
in
xchg
in
fidivrl
inc
lcall
nop
sbb
into
and
lret
scas
stc
fimull
mov
int
leave
or
inc
sahf
pushf
and
repnz
jb
or
or
ficoml
in
dec
jle
or
rcl
stos
jp
aaa
adc
ret
xchg
inc
and
push
jo
ljmp
gs
fwait
and
xchg
aas
adc
jp
fbstp
inc
fldt
mov
cli
mov
jecxz
sub
dec
orl
shrl
pop
sbb
sub
xchg
loope
fwait
rolb
jns
insl
push
scas
mov
shr
int3
sub
shll
or
add
jle
mov
sbb
push
shll
nop
into
pop
mov
adc
add
or
mov
aas
aad
lret
push
das
pusha
jno
sub
fiaddl
test
mov
imul
adc
cmp
icebp
adc
or
cmpsl
jl
xchg
jmp
pushf
cmpsb
mov
dec
data16
lahf
pop
xchg
adc
cmp
cld
aam
cmp
jmp
lea
movsl
jmp
inc
scas
andb
mov
add
xor
or
cmp
ud1
outsl
mov
xchg
imul
test
sbb
aad
adc
jbe
pop
leave
and
sub
pop
lods
or
in
in
push
add
add
xchg
push
cmpb
ds
sub
cmp
imul
xlat
scas
mov
cmp
xor
xor
out
or
repnz
cli
or
mov
xchg
jecxz
cmp
xor
and
jecxz
sub
int
ja
pop
ljmp
nop
out
je
pop
add
xchg
stc
push
in
jo,pn
mov
mov
enter
stos
gs
fcoml
test
mov
mov
push
cmp
lcall
inc
js
add
fwait
sbb
rcrl
dec
jle
mov
xchg
push
lcall
lret
pop
jp
lret
cs
mov
cld
mov
mov
in
lret
add
add
test
and
adc
add
jns
xchg
and
rolb
pop
rep
cs
mov
and
insl
ja
lcall
pop
mov
sbb
jle
cmp
rcrl
dec
bound
xor
movsb
popf
add
in
cwtl
push
std
jno
test
stos
je
stos
xor
std
cmpsl
fwait
push
das
xlat
sahf
mov
gs
cs
add
lahf
test
pop
sbb
addb
mov
sbb
mov
cmpsl
mov
sub
pop
enter
imul
int3
je
adc
loope
nop
loope
push
push
cltd
xchg
shll
jb
cmp
mov
add
aam
movsb
lods
shr
sub
in
mov
int
push
jecxz
sub
pop
daa
repz
adc
mov
jb
int
stos
and
rolb
jp
outsl
inc
je
and
sub
imul
out
outsb
push
push
sbb
jle
testb
mov
adc
pop
jmp
movsb
ficoml
dec
cwtl
lods
stos
fsubrl
hlt
inc
and
test
lods
or
or
rclb
and
add
fnstcw
sbb
push
aaa
cmp
insl
andl
int3
adc
and
sub
xchg
xchg
loope
dec
push
mov
fwait
sbbl
pop
sbb
mov
sub
sub
mov
pop
stos
and
addl
out
push
scas
inc
test
pop
gs
adc
push
mov
jae
in
sti
pop
setle
cs
jne
aaa
push
dec
loopne
int
pop
jge
orl
push
mov
shll
xchg
das
aad
adc
in
mov
mov
dec
push
int
mov
rcll
sub
push
ret
popa
daa
or
sub
movsb
fsubrp
mov
cmp
pop
or
mov
mov
fisubs
loope
cmc
int
ss
dec
jmp
cmp
jle
pop
adc
into
cmp
add
cmp
inc
adc
mov
sbb
in
ss
lea
cltd
rclb
cmp
jae
mov
mov
movsb
int3
push
test
dec
sbb
mov
cmp
shlb
inc
icebp
pop
jb
add
fldl
sub
mov
cmp
sub
sub
mov
mov
aaa
in
icebp
cmc
mov
jmp
push
adc
pop
mov
pop
jae
scas
loope
orl
hlt
or
jnp
in
adc
or
lock
push
adc
test
fldenv
clc
jne
shl
aas
outsb
gs
mov
loopne
mov
icebp
fcomi
sub
push
enter
test
out
dec
fistps
sbb
mov
add
pop
lock
sahf
popa
lock
les
jns
inc
dec
rorl
or
jp
jp
mov
pop
jno
lea
sbb
roll
sub
in
dec
imul
jns
push
aaa
inc
and
push
data16
inc
lods
mov
jecxz
imul
cmpsb
cltd
pop
mov
push
jmp
jp
out
or
stos
and
ja
xor
jae
mov
xor
ds
cmp
pop
and
rclb
mov
pop
fdivrs
imul
mov
xorb
mov
adc
mov
and
sarb
in
into
xor
out
movsl
cld
out
dec
popa
or
pop
pushf
fldcw
add
insl
mov
test
or
push
es
push
lret
pop
inc
pop
loop
sub
fldl
xchg
sub
mov
jne
xchg
clc
mov
sub
arpl
inc
mov
add
out
popf
mov
mov
dec
repnz
dec
shll
and
in
call
pop
roll
f2xm1
std
fidivrl
sub
sub
movsl
xchg
insb
aam
add
mov
js
xchg
aam
lods
pop
dec
mov
int
xchg
arpl
repz
test
icebp
mov
imul
push
mov
xchg
sub
adcl
xor
fadds
mov
enter
jae
pop
insb
lret
push
daa
mov
fwait
cmpsl
rcrl
pop
xchg
sti
sub
mov
jo
iret
lock
daa
pop
pop
sbb
cmpsl
xchg
das
push
xor
popf
call
push
mov
fcoml
dec
adc
in
xorl
data16
ret
jb
loopne
sub
push
xor
aas
pop
cwtl
pop
inc
sub
inc
pop
fidivrs
clc
sub
paddsw
xchg
insl
xchg
push
sbb
adc
or
mov
pop
das
xorb
fidivs
inc
cwtl
pop
mov
fcomp
mov
adc
mov
inc
sbbl
mov
fistpl
and
in
mov
add
add
call
data16
ret
ja
call
mov
cmp
inc
lods
push
shrb
jbe
loopne
push
adc
nop
fs
icebp
or
fcmovnu
scas
rorb
jne
bnd
cmp
mov
push
cmc
sbb
cmp
in
sub
push
adc
jmp
ficoms
jne
xchg
shlb
stos
xchg
lret
mov
gs
lock
clc
xor
and
decb
sbb
or
mov
inc
fsubl
and
pushf
mov
daa
jp
loope
fwait
jge
outsl
mov
sub
mov
fisubs
fnstsw
popa
aaa
jg
cmpb
fwait
ljmp
sub
cmpsb
or
or
nop
inc
and
rcll
mov
pop
lret
or
icebp
lods
jmp
cmp
stos
cli
push
xchg
daa
clc
xchg
mov
push
data16
push
mov
stc
xchg
and
sbb
insb
hlt
adc
xor
mov
xchg
jne
mov
pop
pop
sbb
mov
adc
aam
add
sbbb
jecxz
inc
js
fwait
cmpsl
add
arpl
mov
adc
fisubrl
out
push
or
xor
sub
pop
aas
icebp
pop
mov
jl
cmp
fsub
lret
stc
aaa
sub
shrb
push
ds
mov
call
mov
mov
cmp
mov
fs
or
jns
in
cmp
int
fisubs
hlt
mov
cmp
dec
add
or
fstps
dec
jl
add
test
out
ja
mul
inc
push
cmp
jbe
pop
cwtl
or
inc
addl
add
and
dec
out
or
mov
or
inc
mov
negl
dec
ret
out
xorb
ja
or
jae
xchg
into
dec
ret
push
adc
ja
gs
push
repnz
pop
out
rolb
xlat
loope
shlb
inc
mov
mov
enter
rcrl
sub
mov
add
push
in
mov
adc
adc
cmp
rclb
pusha
jge
dec
cltd
push
push
mov
jecxz
icebp
int3
ret
cmpsl
std
in
cmc
pop
inc
jns
popf
and
inc
ljmp
int
iret
lods
push
daa
dec
jmp
in
sub
and
cltd
xchg
lods
push
xchg
aaa
sbb
mov
push
jae
push
sahf
adc
and
or
lds
loope
mov
xor
repz
mov
add
pop
add
arpl
dec
cmpsb
ret
in
or
cmp
xor
lock
mov
loop
loope
shlb
out
mov
enter
pushf
arpl
test
rolb
push
jns
mov
loopne
xchg
ficomps
dec
imul
xchg
data16
push
sbbb
aas
je
or
xchg
sti
aas
dec
or
sub
mov
gs
cmp
mov
jle
xchg
lods
and
xchg
xor
fucomp
push
add
fs
das
or
jnp
cwtl
in
outsb
mov
dec
test
add
negb
jne
inc
mov
popf
and
sub
in
lods
ficompl
daa
sbb
xor
lods
pop
adc
mov
mov
and
dec
loopne
cmpsl
fsubrs
pop
mov
adc
outsl
iret
pop
add
cli
call
arpl
or
push
mov
fisttpl
or
shrl
or
loopne
icebp
repnz
and
adc
or
hlt
and
in
mov
and
roll
aam
pop
xor
pop
mov
mov
ja
adcl
xor
pop
jg
fcmovb
add
sub
rorb
out
jns
das
jo
adc
or
fstl
push
or
add
in
lods
sub
lcall
inc
dec
sub
fildll
cltd
mov
lods
adc
lods
adc
xchg
xor
lds
xchg
jg
xchg
adc
xor
aad
addr16
xor
shl
repz
mov
and
psubd
mov
sbb
dec
gs
mov
inc
aam
push
jle
inc
rorl
dec
jmp
jbe
lcall
lret
push
scas
fdivrs
nop
mov
shl
add
aas
or
pop
mov
lock
mov
jnp
imul
dec
sub
lock
mov
fisubs
lods
lods
lcall
dec
cmp
lcall
fisttpll
ret
cmp
push
xor
lret
call
pop
ja
fiaddl
push
fidivrl
scas
adc
mov
fwait
cmp
rcrl
push
shll
xchg
les
cli
adc
mov
jecxz
ficompl
in
adc
mov
pop
push
out
jns
adc
pop
and
inc
pop
adc
pop
dec
push
add
shll
mov
loopne
xchg
and
push
popa
mov
pushf
jnp
pop
sub
daa
xchg
and
out
sbb
and
mov
fucomi
jl
addl
ret
aaa
ret
popf
inc
xchg
jge
mov
insl
push
inc
test
xor
dec
stc
out
adc
and
mov
enter
lock
subb
jl
push
mov
jecxz
ja
pushf
push
push
cmpb
mov
xchg
cli
push
dec
push
std
jg
repnz
and
dec
push
pop
sub
mul
and
sbb
frstor
orl
dec
cltd
adc
notl
jb
stc
inc
jl
and
adc
stos
push
xchg
out
neg
mov
lahf
and
sub
mov
jnp
pop
or
jecxz
dec
stc
xorl
aas
in
clc
sbb
lcall
sahf
into
daa
outsb
in
mov
fsubrl
push
xor
shlb
lahf
push
nop
jb
mov
mov
mov
clc
or
lea
js
ss
mov
stc
cs
pop
sti
lret
or
shl
int
mov
rorb
fsubp
sub
or
xchg
outsb
push
js
cmp
dec
or
sbb
outsb
xor
out
cmc
std
mov
add
dec
imul
lahf
mov
es
imul
dec
sub
mov
lret
popa
jecxz
lods
pop
inc
jle
jle
cmp
mov
cmp
inc
inc
xor
jnp
jo
scas
inc
outsl
out
mov
xchg
in
test
or
lods
sti
fs
lahf
dec
push
aam
mov
ret
pop
scas
cmp
push
lods
mov
jmp
sbb
addr16
push
xor
xchg
jo
fs
add
sub
xor
xor
inc
and
and
loop
xchg
mov
out
cmc
push
adc
into
iret
add
lods
push
inc
mov
or
jns
js
outsb
sbb
push
mov
popl
bound
mulb
stc
jbe
add
ds
adc
outsl
mov
and
cwtl
fcoml
fstpt
std
in
faddp
jno
jo
cmovo
test
ja
xchg
jg
out
dec
push
push
mov
popf
in
cld
pop
and
or
add
sub
fsubl
push
mov
fbstp
decb
shrl
jle
xchg
outsb
xor
enter
jae
push
jb
and
jae
mulb
fs
mov
pop
mov
push
sbb
hlt
add
xchg
testl
sbb
jns
je
and
stos
dec
repz
or
lea
insl
dec
mov
outsl
dec
jg
outsb
aaa
push
and
fstpl
fcmove
and
cmpsb
inc
jge
bound
cmp
call
pop
incb
sbb
push
push
outsb
iret
xchg
xchg
mov
xchg
cmpsb
je
sbb
cmp
ss
pop
adc
and
mov
sarl
rcl
or
scas
dec
out
fsub
push
dec
jl
push
leave
push
mov
ret
mov
sti
mov
xor
mov
scas
lahf
sbb
int
jecxz
fldt
xor
cltd
outsl
popa
daa
jge
gs
sub
int3
call
xor
insl
mov
jle
das
cmc
jnp
fldcw
xchg
fwait
addr16
popa
lea
jnp
and
jmp
subb
out
pop
loope
out
push
dec
push
xchg
mov
out
add
pop
sbb
in
xchg
fwait
mov
fnstcw
jecxz
mov
es
fldl
sbb
push
arpl
repz
movsb
inc
xor
mov
aad
cmpsl
xlat
jg
sub
icebp
stc
addr16
out
cmp
jae
mov
repnz
enter
insb
xor
cmpsl
out
lahf
jge
repz
push
lea
setno
hlt
dec
mov
stos
andb
stos
fcomp
popf
xlat
lea
mov
cmp
adc
stos
inc
imul
push
out
sti
cmp
clc
inc
add
cli
pop
jno
movsb
cs
lcall
or
shr
dec
xchg
or
or
or
jnp
xor
test
je
push
mov
inc
movsl
push
ret
aad
sbb
pop
pushf
dec
scas
movsl
push
mov
lcall
sahf
push
mov
loop
and
insb
iret
cmp
push
sub
mov
inc
stos
mov
cmpsl
pop
xlat
insl
loopne
push
aam
icebp
push
loop
push
or
or
sub
mov
ss
xchg
js
dec
in
pushf
push
pop
xor
icebp
clc
out
cwtl
jno
repnz
sbbb
xchg
shr
inc
jns
pop
lahf
xchg
popf
dec
aaa
xchg
inc
ds
xchg
add
add
stos
jbe
daa
mov
pop
fdivs
subl
dec
jle
fmulp
repz
jne
rol
and
in
mov
popf
mov
inc
pop
sarl
lahf
inc
lods
mov
shr
mov
inc
dec
popf
insl
dec
ret
aad
jmp
movsl
adc
in
and
pop
pop
lcall
dec
nop
pushf
cld
ljmp
inc
dec
pop
pop
sub
fwait
outsb
insb
arpl
roll
sbb
movsl
out
push
aad
xchg
pop
int
adc
data16
add
imul
mov
lcall
aas
or
test
in
mov
sbb
pop
popa
pushf
mov
fdivr
nop
mov
scas
and
mov
aas
push
out
cmp
aad
lahf
test
xorb
mov
cmp
insb
mov
adc
jecxz
pop
int
mov
ja
ss
cli
movsl
orb
push
push
movsb
sub
cmpsb
aam
test
cmp
adc
cmpl
push
popa
xor
sbb
xchg
lock
imulb
mulb
xor
sbb
push
lods
mov
mov
add
mov
fxch
sbb
cmpsb
adc
mov
outsb
xor
dec
rcr
outsb
scas
enter
jno
int3
xchg
adc
inc
jmp
xchg
xor
mov
sbb
pop
ljmp
cwtl
aam
or
in
pop
sub
popf
pop
je
sarl
ftst
inc
push
mov
jmp
test
pop
fmul
mov
outsb
mov
das
mov
mov
cld
ljmp
lods
das
loop,pt
pop
mov
lods
fdiv
dec
pop
ljmp
js
mov
xchg
push
sub
ja
loopne
sub
jae
add
jb
mov
dec
and
mov
cmpsl
push
in
stos
xchg
cmp
sbb
pop
xor
add
mov
fistpl
lock
jo
xchg
jno
pop
mov
cmp
or
lcall
fwait
inc
mov
sbb
push
pop
mov
sti
push
adc
and
icebp
es
push
insb
enter
das
push
mov
leave
ja
add
mov
sahf
imul
stc
flds
sub
jno
dec
sbb
inc
lcall
lds
or
or
push
sub
adc
push
xor
pop
ja
lret
stos
push
xchg
mov
aam
adc
movsb
mov
or
dec
lcall
fcmovne
mov
les
lret
ds
insb
out
popa
sbb
mov
and
ja
sbb
push
jb
aaa
jns
jmp
sub
les
jbe
out
mov
add
stos
fistpl
lret
push
push
lea
fidivl
notb
int3
test
ss
ja
test
imulb
bound
xchg
loopne
dec
mov
mov
xchg
imul
sbb
popa
fsubrs
out
dec
jae
aad
test
adc
sub
addr16
les
leave
js
add
adc
mov
aam
xlat
xchg
std
adc
inc
scas
addr16
push
jmp
das
loopne
cmpsl
rcr
inc
and
bound
adc
xlat
andl
out
aas
popf
adc
out
in
pushf
lods
pop
and
fnstenv
rcll
jle,pn
pop
ja
dec
call
call
std
sbb
rcrb
push
xchg
fcompl
pop
and
inc
lds
dec
jecxz
xor
adc
lretw
into
mov
push
sub
mov
shrb
mov
in
outsb
inc
cs
fimull
lret
inc
icebp
or
pop
jb
and
sbbl
mov
rorb
mov
movsl
push
pop
fstpt
pop
bound
mov
push
jns
aaa
into
xchg
out
das
stc
push
xchg
adc
outsl
clc
xchg
fisubs
pop
ds
sub
pop
popa
adc
mov
addl
popa
ficoml
and
push
or
lahf
xchg
js
rclb
pop
cltd
xor
jae
rorb
ret
loope
adc
xor
gs
cmp
lret
mov
std
xor
jne
push
sub
push
mov
adc
mov
jne
arpl
jecxz
add
lahf
push
addr16
mov
cmc
repnz
push
movsb
xor
dec
mov
and
in
and
scas
dec
push
sbb
arpl
or
or
lock
inc
xor
ret
add
add
test
sbb
and
aad
repz
in
loope
or
push
push
icebp
adc
aaa
daa
sub
inc
jo
fdivrs
ret
xchg
imul
xchg
push
in
mov
cmpsl
and
jb
int3
or
lret
data16
and
scas
mov
iret
mov
testb
push
pusha
jns
imul
pop
and
jle
jno
out
xchg
ds
nop
lods
jb
outsl
or
jle
sbb
sub
insl
ss
mov
fbstp
dec
add
icebp
clc
fisttps
cwtl
xchg
mov
insl
jg
xchg
pop
mov
mov
stos
inc
je
mov
push
addr16
mov
dec
out
ficoml
aad
mov
mov
mov
pop
cmpsb
mov
xor
push
rcl
jl
sbb
js
mov
insl
cwtl
lea
mov
es
push
mov
cmp
repz
mov
cli
rcrl
jne
xlat
test
jns
out
jae
inc
cs
jae
cmp
dec
lock
jnp
dec
sbb
sbb
das
lahf
aaa
lret
pushf
push
hlt
cli
pop
aad
cmc
sub
popa
pop
jns
lahf
mov
std
vmaxpd
add
xchg
lahf
or
cld
jae
lahf
pusha
push
xchg
sub
bndstx
jg
ljmp
insb
and
xor
leave
bound
pop
jo
test
insw
nop
mov
push
cmp
inc
add
jmp
call
pop
push
das
add
add
test
nop
sbb
xchg
dec
aaa
xor
jbe
adc
cmp
mov
jb
repz
xor
xchg
incl
aas
ret
das
cmpsl
jne
pop
mov
arpl
or
ds
outsl
pop
in
mov
gs
cmp
and
cmp
sub
in
cmp
test
jbe
and
ds
mov
mov
pushf
inc
lret
je
aaa
pop
add
into
orl
out
scas
dec
adc
jle
push
and
cmc
out
aad
arpl
cmp
adc
adc
lcall
push
xor
mov
loopne
stos
mov
mov
arpl
mov
imul
dec
popa
gs
pop
out
movsl
pop
xor
rep
mov
or
test
xchg
rcr
push
sub
cli
sbb
pop
inc
mov
repnz
sub
iret
das
fsubrl
int3
dec
xchg
icebp
out
and
stc
daa
outsb
mov
or
loope
jmp
cmp
mov
mov
daa
insb
lcall
out
loope
jbe
or
push
faddl
sub
clc
dec
inc
scas
fxch
dec
cmpsb
cmp
and
cmpsl
adc
ds
ret
in
jmp
xor
pop
lods
mov
in
mov
add
push
ja
and
xor
aad
adc
test
or
push
das
pop
int3
jg
ret
jg
jl
lret
roll
sub
dec
orl
jne
fxch
sbb
push
lock
sahf
je
sar
mov
rcll
in
ret
mov
mov
jno
adc
pop
ret
fisttps
jp
dec
jl
test
pusha
or
push
push
jno
test
xchg
cmp
repnz
mov
push
cmovs
pusha
xor
and
test
gs
push
and
push
fisubs
loopne
lret
inc
mov
xor
push
sahf
xor
outsl
aaa
lods
xchg
mov
insl
dec
xchg
sbb
pusha
push
dec
mov
xchg
imul
incb
test
pop
push
dec
loope
sbb
idivb
mov
mov
scas
clc
lds
pushf
iret
insl
cli
inc
cmpsl
in
js
pop
dec
jo
or
and
iret
xor
lods
and
adc
loopne
xor
rcll
leave
add
repz
or
adc
pop
hlt
cld
jg
xchg
pop
imul
xchg
fdivs
mov
dec
inc
dec
mov
and
jl
mov
or
mov
xchg
and
push
sub
sub
dec
fisttpl
jecxz
leave
xor
push
fwait
ss
sahf
test
stos
dec
icebp
dec
pop
cli
out
jne
cmp
add
bound
jnp,pn
mov
cmp
sub
pop
pop
ja
push
xlat
xchg
dec
xor
xchg
xor
mov
push
mov
cmp
negl
sub
loop
push
mov
ss
mov
fwait
ss
xchg
sub
aas
cwtl
pusha
push
sbb
jle
adc
push
xchg
sub
jl
cmp
sbb
aaa
lds
pushf
xchg
xchg
xchg
outsl
add
mov
imul
int3
notl
in
or
jge
aaa
sub
test
test
or
adc
or
adc
or
mov
cmc
adc
push
cli
movsb
push
outsl
cmp
sub
push
mov
xchg
push
repnz
les
ja
mov
jl
in
pop
mov
shr
and
xor
rcll
and
sbb
pop
dec
sti
in
outsb
loopne
cmpsb
fs
js
adc
je
dec
dec
push
loope
test
out
je
call
and
sarb
or
repnz
mov
cli
hlt
popa
pop
mov
push
stos
addr16
out
scas
push
pusha
add
push
pop
cltd
cli
jg
adc
xchg
incb
xorl
std
inc
lds
cli
lods
jb
dec
and
jle
push
imul
dec
shlb
clc
int3
push
js
nopl
ss
lods
lock
cmp
jmp
fnstsw
push
icebp
xor
and
roll
fcomp
mov
test
mov
pop
and
aad
out
cmpsb
fcmovnb
or
mov
mov
xor
icebp
mov
mov
adc
cmp
je
js
insl
pop
popa
es
adc
repnz
adc
mov
push
xor
popf
std
ss
test
and
sbb
cmp
das
addr16
lea
rcll
inc
enter
add
call
lret
add
into
or
scas
sub
popf
mov
cmp
lods
adc
imul
aam
cmp
inc
movsb
addr16
les
call
mov
or
hlt
mov
jp
dec
gs
repnz
jmp
lret
sub
shll
iret
pusha
jg
mov
xchg
adc
xchg
mov
add
scas
pop
rolb
jne
pop
inc
fstpt
push
lret
js
dec
sbb
les
adc
pop
sub
sahf
mov
cmc
ss
fistpl
xchg
rorl
and
les
sub
out
sub
xchg
ds
sbb
ss
nop
stos
pop
jbe
xchg
xchg
push
fadds
roll
mov
lcall
imul
out
dec
add
sbb
data16
and
movsb
fiadds
jns
sub
jge
mov
stos
into
cmp
aas
popf
cmp
jbe
mov
xchg
dec
pop
lea
shll
out
jmp
je
cli
pop
or
shlb
mov
lea
fsts
mov
fs
or
sub
xchg
add
add
cmc
sbb
jnp
mov
loopne
aad
movsb
or
sbb
sub
xchg
cmp
cmp
fsubl
stos
xor
inc
mov
sbb
pop
mov
shrl
daa
aaa
loopne
divb
inc
test
in
xchg
push
jns
or
and
leave
dec
xchg
jbe
xchg
add
xchg
push
stos
scas
sbb
pop
and
outsl
lods
inc
xchg
in
fildl
insb
adc
sub
insb
add
xchg
sar
bound
cmc
out
cltd
pop
dec
sbb
mov
not
bnd
into
cmp
pop
ja
sub
div
shr
aas
dec
dec
mov
rcr
sub
fs
in
insl
lods
subb
cmp
or
bnd
loope
sar
or
insl
test
cwtl
push
mov
decb
push
js
add
adc
mov
xor
mov
mov
jmp
out
pop
in
test
mov
mov
enter
mov
mov
mov
call
add
lcall
jae
aaa
add
iret
inc
push
mov
js
or
push
imul
out
sub
fcmovnu
mov
mov
mov
arpl
out
movsb
std
xor
imul
push
cwtl
sub
ljmp
mov
inc
jne
fistpl
add
lahf
dec
add
mov
into
loop
sahf
xchg
add
mov
xchg
rclb
add
aad
mov
aam
dec
xchg
loope
lcall
mov
int3
sar
scas
push
add
xor
ds
dec
xor
stc
push
mov
cmp
and
pushf
in
mov
xchg
rcll
mov
xor
adc
mov
xchg
mov
lret
jb
mov
xchg
in
stc
negl
or
fiadds
mov
add
or
pop
aad
scas
out
cmp
mov
sarl
dec
std
mov
pop
add
test
stc
ret
and
gs
sub
into
popa
fs
addr16
pop
lcall
sarb
rcrb
pop
notb
ja
lock
nop
mov
jge
fists
lcall
sbb
dec
popa
or
test
popf
dec
stc
mov
imul
sub
shll
fsubrl
cmpsl
aam
jmp
test
mov
imul
movsl
pop
shrl
jo
push
sti
sbb
mov
pop
xlat
test
xchg
repz
mov
outsb
and
cmp
out
lret
ret
sub
into
daa
adc
pop
cmp
push
adc
push
xor
sahf
xchg
sti
lahf
imul
cmpsl
jecxz
das
cltd
cltd
mov
pop
inc
jnp
clc
dec
aas
repz
loope
enter
pop
push
in
rcll
cs
xchg
mov
fisttpll
push
push
fildll
into
pop
popa
mov
jns
nop
pop
cmc
into
dec
into
shrl
cltd
fcmovnbe
cmp
je
dec
xchg
sbb
jecxz
stos
jbe
aaa
into
cmp
movsl
idivl
and
cs
mov
and
or
add
mov
mov
pop
xor
add
cmpsb
fadd
cmp
hlt
and
pop
mov
mov
aad
push
add
inc
outsl
iret
push
iret
dec
outsl
jne
subl
das
adc
cmp
int
pop
xchg
lret
add
int
lcall
cmp
outsb
lahf
loopne
cmp
cmp
sbb
test
xlat
je
inc
lcall
or
fnstenv
xor
jnp
xor
mov
jno
aaa
out
jg
lock
pop
xchg
adc
aas
clc
out
popf
inc
sbb
movsl
push
adc
xchg
or
add
inc
mov
movsl
pop
fisubrl
xlat
popa
mov
pop
jmp
mov
or
jns
adc
or
push
outsb
xor
shll
nop
lcall
pop
add
jae
jns
lods
sahf
cmp
aaa
adc
fstpt
jne
bound
jne
into
jle
mov
rorb
push
pop
lret
lret
js
loop
lret
sub
out
inc
ror
push
sub
into
ret
xor
xchg
dec
imul
cmp
mov
or
nop
aas
jne
sub
pop
int
sbb
stos
xchg
mov
sbb
fldt
lods
dec
dec
mov
pop
mov
call
cmpsb
cltd
les
popa
xchg
imul
stos
or
xchg
cmpsl
sub
rorl
xchg
xchg
popa
xor
xor
xchg
out
lretw
dec
sbb
out
fisttps
xchg
push
sahf
cmp
inc
cmp
pop
cmp
jnp
xchg
test
fst
push
inc
pop
adc
xor
shrl
lock
jg
xor
fstpl
repz
jnp
adc
pop
test
xor
or
pop
imull
pushl
jnp
lods
enter
inc
jmp
adc
mov
dec
cs
lcall
mov
out
rcrb
lds
aaa
sub
gs
sub
or
sub
mov
gs
or
push
dec
fnsave
mov
int
mov
imul
add
xchg
nop
pusha
mov
iret
out
sub
push
mov
sarl
xor
xchg
lea
scas
adc
jmp
and
jg
fldenv
and
fmul
aad
mov
lahf
repnz
mov
mov
mov
and
mov
inc
loopne
add
mov
inc
jp
cmc
push
mov
cmp
mov
mov
repz
dec
push
push
push
pop
test
pop
les
lods
jo
add
sub
into
icebp
ss
xlat
lcall
xlat
sub
mov
lods
pop
pop
or
push
mov
add
mov
jne
dec
sub
lret
adc
push
pop
jle
repnz
sbb
adcb
loop
mov
mov
xchg
icebp
rorb
mov
in
bound
lea
mov
adc
repnz
mov
lods
cmp
into
rcrl
cmc
dec
sti
sbb
and
ds
adc
fadd
push
call
dec
leave
int
ret
jg
jbe
dec
js
mov
push
pop
fistps
adc
out
inc
mov
mov
or
arpl
stc
add
xor
aad
add
sub
xlat
aad
fildl
testl
xchg
or
fildl
xchg
call
hlt
lods
sbb
daa
mov
aas
test
jne
inc
pushf
das
and
daa
int
loopne
in
push
jmp
fimuls
jbe
mov
mov
enter
mov
movsb
xchg
mov
popf
push
xor
adc
xchg
repnz
push
outsb
xor
xor
inc
aad
push
das
add
cwtl
int3
jp
sub
jg
call
sub
cmp
repnz
mov
mov
pusha
outsb
pop
cltd
sahf
inc
xchg
jnp
sbb
inc
das
enter
in
jne
movsl
sub
jmp
fucom
mov
loope
mov
xor
jle
pop
cmp
jl
push
xor
ret
jne
and
int3
into
xor
data16
pop
icebp
sbb
add
fdivrp
scas
sub
ss
subb
sub
push
mov
mov
mov
cld
movsl
pop
add
jle
out
int
and
sbb
adc
rol
repnz
subb
jno
ret
add
push
incl
add
les
arpl
stc
loopne
mov
lret
mov
inc
add
ficomps
and
push
fstps
adcb
pop
jns
mov
push
ror
mov
push
roll
icebp
daa
test
fdivl
mov
sbb
xchg
jmp
and
mov
imul
jns
xchg
or
cmc
mov
mov
ds
adc
adc
mov
and
jmp
sahf
push
mov
xor
aam
mov
shl
inc
dec
sub
int
inc
mov
fbstp
or
cmp
loopne
imul
sub
daa
mov
cltd
js
ds
shr
popl
inc
addr16
in
adc
xor
inc
mov
shrb
jmp
add
stc
push
insb
int3
mov
inc
xor
xchg
std
add
fmull
loop
xchg
lcall
add
inc
cmp
add
cmp
movsb
cmp
add
sub
jae
test
fldl
leave
xchg
out
cli
sub
mov
add
mov
pushf
inc
stos
mov
push
out
inc
cld
sbb
aam
icebp
stc
test
xorb
cmp
mov
xor
mov
cmp
adc
out
pop
dec
imul
add
jb
loop
mov
cmpl
jp
rcrb
cmp
sbb
ret
lahf
push
sub
shl
xchg
iret
push
adc
push
inc
or
in
jae
xor
xchg
fdivrp
orl
aas
fdivrl
mov
add
scas
pop
mov
inc
push
mov
in
mov
fwait
pop
xchg
mov
inc
andl
jno
and
mov
ljmp
in
lahf
adc
pop
fwait
shll
movl
cli
jnp
mov
or
mov
movsb
mov
inc
mov
mov
repz
dec
mov
in
jne
add
push
xchg
cs
jne
mov
imul
and
jg
mov
fidivl
mov
in
and
cli
mov
es
scas
insb
push
scas
scas
scas
mov
out
mov
pushf
ffree
xchg
fldenv
dec
push
jg
test
test
cli
sub
popa
sub
dec
jb
cmp
ljmp
lock
push
bound
cmp
pop
xor
daa
mov
ds
mov
mov
popf
inc
test
fistps
inc
out
icebp
fdivs
lea
mov
imul
jbe
pusha
daa
insl
push
jb
xchg
sarb
rclb
mov
out
lahf
imul
sub
dec
outsb
push
les
mov
in
scas
xchg
int3
cmp
sub
rcrl
cmc
mov
test
pusha
mov
xchg
adc
cmp
notl
push
loope
sub
or
xchg
and
iret
push
enter
jbe
fsub
testb
in
push
sbb
fcmove
fstps
push
testl
mov
or
adc
cmp
jp
mov
and
jecxz
mov
test
orb
pusha
int3
fimull
aam
in
in
adc
mov
fistl
orl
testb
inc
rorl
cmc
ficomps
mov
inc
or
jge
cmpsl
mov
inc
jo
push
ret
and
out
jge
outsl
loope
std
std
pushf
lods
push
icebp
out
pop
mov
pop
mov
jo
test
testb
ret
jmp
es
test
loope
mov
xor
mov
daa
aaa
movsb
out
in
adc
xor
popa
movsb
cmp
out
and
adc
lods
xorl
stc
into
pop
cmp
js
jecxz
or
xchg
hlt
mov
in
or
sbb
nop
jp
notb
iret
nop
or
or
lods
gs
pop
movsl
xchg
shl
xor
push
mov
push
or
and
dec
outsb
or
ret
shl
leave
repz
out
adc
push
jns
enter
mov
mov
inc
sub
mov
cs
adc
ds
or
in
data16
mov
jae
pop
cld
add
mov
add
cmpb
sbb
dec
enter
jnp
into
inc
cmp
test
or
test
popf
nop
test
scas
mov
out
mov
jnp
cmp
sub
inc
pusha
adc
sub
jae
mov
jns
push
clc
ret
push
ss
sbb
lahf
and
pop
mov
repnz
dec
or
stos
mov
repz
push
leave
xor
jg
cmp
ljmp
lcall
sbb
sub
cs
cwtl
push
adc
dec
mov
adc
mov
lcall
fcmovnb
test
mov
stos
out
sub
pop
into
push
and
imul
add
flds
addr16
pop
repz
cli
jnp
or
mov
mov
adc
inc
push
popf
mov
test
imul
int
xchg
and
mov
fldenv
daa
in
lret
js
dec
ja
repnz
mov
mov
orb
pop
dec
les
test
push
dec
nop
jl
jo
push
jne
data16
jno
xchg
mov
lret
sbb
cmp
adc
loope
or
lcall
jne
or
fdivrp
xchg
adc
jb
idiv
jnp
pop
test
push
jge
stos
std
aaa
outsb
xchg
std
pop
arpl
movsl
aas
loop
dec
les
pop
cli
inc
mov
scas
push
mov
cld
out
cmp
frstor
fmulp
jle
and
cmpsl
fsubrl
test
shl
add
loope
sub
aad
roll
int
and
xchg
fbld
fidivl
int3
outsb
xor
add
add
cltd
cmp
fidivs
mov
aad
inc
out
dec
ss
popa
stos
cmc
xchg
popa
mov
pusha
dec
pushf
test
xchg
lods
sbbl
shlb
popa
sbb
sub
leave
push
movsl
pop
je
mov
add
or
push
sbb
xor
roll
inc
test
fisttpl
in
mov
out
xchg
roll
pop
sub
aaa
leave
mov
mov
repz
xor
imul
out
and
subb
imul
cmp
dec
and
jb
fwait
data16
cli
xor
or
push
xchg
jmp
sub
pop
xchg
sub
shlb
inc
xor
xchg
loope
bound
mov
push
or
push
scas
setg
pushl
test
fcompl
and
iret
cwtl
fcmovu
jmp
es
adc
into
sub
cmc
mov
movsl
jmp
xor
ret
inc
or
rcll
popa
clc
movsb
cmp
sub
cmp
cld
fsubrp
add
scas
sbb
je
mov
cmp
es
clc
mov
jge
lahf
add
call
adc
into
ja
pop
mov
aam
dec
lock
int3
xor
sti
lahf
mov
cld
in
pop
jns
adc
in
mov
insb
jecxz
and
sbb
lret
lods
pusha
test
cmp
sti
pop
mov
xor
je
insl
push
bound
push
loopne
inc
in
dec
arpl
and
jl
popa
jg
sbb
in
out
pop
mov
cmp
insl
fisttpl
dec
cli
push
ljmp
sbb
imul
xor
les
das
cmpsb
push
mov
sbbb
add
pop
cmpsb
test
lods
addr16
xor
mov
ret
cli
inc
dec
sub
fldenv
int3
mov
pop
nop
icebp
dec
sarb
movsl
cli
pop
outsb
push
cmp
es
dec
jnp
in
mov
jmp
loop
out
int3
loope
push
mov
cmp
sub
xchg
inc
in
push
dec
sarb
in
inc
add
jmp
dec
loope
push
push
fisttpl
adc
out
pop
daa
ljmp
push
pop
rcrb
das
stos
cmp
add
xchg
inc
dec
push
jno
popl
and
ffreep
leave
xor
lret
in
lods
push
dec
push
das
cmp
mov
mov
dec
mov
test
cld
aaa
add
or
insl
divl
pop
stc
mov
mov
call
cmp
ljmp
sub
or
fildl
jg
fisttpl
cmp
xchg
aad
dec
push
and
mov
jl
or
aam
push
adc
stos
and
out
push
push
loopne
inc
roll
mov
inc
cmp
push
pop
mov
fisubrs
cmpsl
in
mov
mov
cmp
ljmp
pop
push
enter
ret
push
pushf
and
clc
lods
mov
jmp
fcompl
add
push
movsl
mov
or
push
jnp
rolb
and
sub
mov
xor
push
mov
mov
mov
addr16
cld
jg
sbb
add
rcrl
sub
insb
inc
sub
cs
push
mov
rorb
dec
dec
movsb
add
aam
inc
and
pop
lock
add
cs
add
fwait
or
xor
out
pop
xor
sub
jbe
or
fcomps
and
cmp
mov
daa
mov
push
out
mov
ljmp
out
xor
enter
push
sub
pop
ds
ljmp
sub
cmp
popa
test
cmp
mov
sub
call
mov
bound
sbb
sub
sub
dec
and
aad
xchg
mov
in
out
gs
inc
jl
test
call
dec
mov
xchg
push
dec
repnz
out
in
int
push
je
or
pop
sarb
xchg
inc
jl
xor
push
loop
dec
mov
fdivrs
addb
insl
jb
pop
dec
int
adc
imul
mov
jp
xor
or
pop
inc
pop
cmp
das
mov
fwait
adc
andl
sbb
sbb
add
movq
lahf
mov
mov
mov
int3
inc
dec
iret
aaa
inc
leave
xchg
ret
out
mov
shl
fmull
repnz
arpl
movsl
incb
repnz
jne
ret
rcrb
leave
loopne
mov
xor
add
ficompl
pop
icebp
dec
leave
sub
arpl
mov
pushf
xlat
mov
jae
or
xchg
xchg
ret
pop
roll
test
cmp
test
in
pop
dec
sarl
push
jmp
call
fistl
xor
jp
test
loope
int
or
cmpsb
push
push
aas
or
out
icebp
mov
pop
bound
jg
idivb
and
mov
jae
sbb
mov
mov
push
sbb
inc
lods
add
sbb
mov
jmp
mov
fucomi
sbb
stos
xchg
icebp
out
add
enter
mov
sbb
and
loopne
lahf
lock
xchg
std
sub
sub
mov
cmp
dec
imul
mov
push
sar
lds
cltd
mov
cmp
shlb
scas
push
or
push
nop
jp
push
pushf
negl
or
mov
mov
xchg
adc
cmp
aaa
dec
fcmovu
out
stos
fcoml
xor
insb
or
sarb
dec
repnz
jle
or
sbb
jl
and
ljmp
sbb
xchg
fadd
xchg
lret
dec
pop
dec
pop
stos
push
xchg
cmp
and
fwait
pop
notb
and
push
adc
xchg
add
das
mov
sub
nop
inc
js
outsl
cmp
mov
pop
xchg
mov
xchg
cmpsl
or
inc
xor
pusha
jecxz
jle
pop
sub
mov
mov
jnp
cs
push
xor
je
xor
outsb
scas
inc
insl
mov
mov
pop
dec
cwtl
test
push
mov
aas
or
test
fdivrs
nop
ds
mov
lods
cmp
lret
nop
mov
icebp
inc
sub
cld
inc
sub
in
cwtl
test
mov
pop
adc
rcrb
pop
push
in
pop
leave
push
jbe
fdivs
mov
rcll
repz
call
cli
js
jnp
push
xchg
ds
jmp
sti
dec
xchg
add
lock
loope
and
and
lret
sub
out
ret
test
loope
icebp
add
push
in
pop
jne
popa
aad
xchg
push
push
cld
push
leave
cmp
sub
das
inc
outsb
jecxz
pusha
lret
cmc
cmp
xor
pop
xor
xchg
mov
sbb
xchg
xlat
stc
jle
inc
gs
aaa
mov
mov
add
cmpsb
mov
insl
addr16
lods
lods
xchg
mov
ret
pop
push
mov
ficompl
or
cmp
sbb
rcr
and
popa
ss
push
sahf
int
mov
js
repnz
lods
sbb
and
add
divl
das
xor
mov
or
mov
jl
xlat
jle
int3
dec
xor
dec
add
lds
sbb
adc
cmpb
jl
out
xchg
add
mov
jg
inc
push
cmpsb
push
lret
pusha
insl
xchg
out
loop
in
sbb
pop
xchg
mov
pop
in
jbe
adc
cltd
sahf
outsl
stc
add
hlt
mov
nop
pop
out
xor
jo
sar
xor
clc
roll
scas
repz
in
mov
enter
fldenv
sub
call
das
mov
cli
mov
cltd
add
lret
pop
lcall
cwtl
dec
insl
pushf
fcoms
and
je
fnstsw
mov
jae
mov
lea
lods
popa
xchg
lods
add
idivl
outsl
push
xorl
or
sbb
and
dec
jle
jmp
mov
dec
xchg
add
cmp
or
rol
ret
ljmp
mov
cmc
iret
xchg
and
mov
popa
test
xchg
xorl
mov
iret
insl
xchg
ds
push
push
xor
orb
fisubl
sbb
xchg
mov
pop
add
out
push
ret
aad
loop
sub
je
stos
add
adc
jp
sub
xchg
ret
fcompl
scas
xor
mov
or
cmpsl
fdivrs
scas
xor
in
mulb
mov
jne
mov
mov
jb
pop
fstpl
adc
fwait
ljmp
js
sub
inc
out
das
icebp
or
into
aam
or
addr16
adc
ljmp
add
ljmp
fdivrs
ret
cld
and
push
lods
jnp
mov
pop
and
jmp
inc
cmp
cltd
inc
ss
dec
cwtl
sbb
adc
aam
mov
loopne
dec
shr
ret
dec
in
test
das
jb
xlat
mov
dec
pop
inc
add
mov
mov
mov
mov
mov
sahf
sub
imul
inc
int3
jge
inc
lea
gs
ljmp
or
enter
leave
nop
mov
add
or
bound
aas
mov
and
inc
add
adc
jp
mov
xchg
mov
adc
lret
jbe
les
or
mov
lods
imul
movsb
xchg
jne
cmp
mov
jge
xor
loopne
xchg
negl
mov
add
mov
mov
loope
movsb
cmp
lds
icebp
xlat
dec
cmp
int
clc
push
rorl
sbb
pop
and
and
jno
and
pop
add
outsl
push
das
insb
aad
jno
std
mov
mov
and
adcl
mov
enter
adc
xor
and
xor
jecxz
push
mov
fwait
loop
js
loope
pushf
sbb
push
xchg
sbb
dec
cmpsl
loop
mov
fs
data16
mov
fyl2x
xchg
push
in
jb
lcall
inc
or
icebp
xchg
push
mov
das
push
hlt
decl
push
stos
mov
inc
rclb
popf
adc
cmpsb
jp
aad
mov
push
push
pusha
adc
xor
push
dec
cltd
dec
sti
mov
mov
xchg
cmp
inc
test
mov
push
mov
lahf
inc
cmp
popa
aaa
jle
xor
dec
mov
fbstp
push
jmp
cltd
mov
stos
pop
cmp
mov
and
fcomps
insl
sbb
cld
leave
push
leave
daa
mov
scas
jecxz
rclb
movsl
ljmp
cmp
mov
ret
inc
pop
lea
orl
adc
adc
shrb
shr
jg
in
adc
cmc
divl
and
push
movsl
mov
outsb
mov
dec
mov
das
mov
xchg
repnz
jo
mov
or
xor
out
mov
jg
pop
aaa
leave
fcoms
adcl
leave
pushf
std
in
mov
mov
sub
mov
adc
pusha
mov
bnd
push
push
aas
jno
push
mov
shlb
outsb
testb
ljmp
jg
mov
jmp
in
mov
into
adc
outsl
dec
test
inc
jns
arpl
dec
aas
testl
imul
cmp
repnz
pop
aam
mov
inc
mov
cwtl
push
dec
dec
scas
cmp
icebp
insl
push
pop
decl
or
mov
das
cmp
aas
sub
aaa
sbb
jnp
mov
add
scas
test
xor
xchg
scas
or
in
addl
sub
nop
je
pop
jmp
sub
and
pop
int3
pop
push
add
sub
sbb
pop
cmp
mov
cwtl
adc
cwtl
fnstsw
adc
int
mov
mov
cmp
cmp
pop
adc
es
imul
dec
jp
xchg
lret
mov
pusha
pop
or
xor
rol
sub
outsl
cmp
push
lret
into
lods
ja
dec
fcmovu
dec
cmp
push
xchg
sbb
fmull
sub
leave
outsl
sti
xor
add
bound
lret
insl
lock
xorb
adc
addr16
iret
or
lret
push
ds
mov
rcll
out
inc
push
pushl
popa
mov
in
xlat
imul
sbb
outsl
inc
test
push
inc
popl
lahf
push
and
std
and
mov
in
sbb
mov
dec
dec
xor
rclb
xchg
jnp
jge
stos
inc
call
call
pop
jp
sti
cmc
adc
sbb
addb
xchg
lret
mov
and
sbb
mov
lds
mov
add
jbe
clc
andb
aaa
sbbl
pop
sub
out
imul
je
cli
or
jecxz
and
add
or
sub
push
stos
imul
cwtl
out
das
shr
adc
pusha
bnd
ficoms
mov
sub
pop
fsubs
cli
cmpsl
xor
fimuls
mov
or
lock
inc
pop
cmpl
ret
xchg
jo
clc
cltd
icebp
in
and
dec
dec
loop
add
pop
add
cmp
stos
insl
daa
push
sti
jmp
jbe
pop
shl
pop
iret
fstps
pop
sub
jge
sbb
sub
rcrb
inc
xchg
ljmp
push
dec
sub
inc
mov
fsqrt
cmp
pop
push
or
popa
jb
pop
and
mov
cmp
loopne
lahf
icebp
mov
push
mov
inc
mov
sub
jb
fstpl
in
cmp
jae
mov
cmpsb
cwtl
and
mov
push
add
test
fwait
imul
push
and
xchg
xchg
test
adc
push
cld
daa
pop
nop
push
inc
fiadds
pop
sbb
aaa
in
add
cmp
fcmovnbe
xor
lods
sarl
clc
pop
and
lret
sbb
adc
mov
push
sbb
je
movl
pop
aaa
fld
or
rclb
cmp
mov
or
dec
repz
ret
ljmp
inc
fistpl
sbb
inc
dec
push
and
push
js
or
sub
xor
mov
xor
push
nop
xor
pop
push
stc
push
jecxz
and
jno
sbb
cmpb
jle
out
inc
mov
std
inc
lahf
pop
std
dec
mov
pusha
and
dec
in
ds
das
fldcw
insb
leave
jno
add
and
add
imul
das
jl
pop
popf
mov
mov
aad
jp
mov
adc
pop
insb
inc
xor
nop
jecxz
pop
call
mov
movsl
dec
negl
loope
mov
jno
fbld
test
add
popf
add
push
add
xor
adc
cwtl
in
fistl
push
mov
mov
pop
shlb
sbb
sahf
mov
jle
xorb
and
inc
xor
and
nop
jecxz
int3
xor
jecxz
aad
sbb
lret
push
jp
mov
fwait
push
lock
xchg
add
std
xorl
fsub
dec
adc
dec
push
add
jns
std
cli
dec
divb
lds
test
cld
popl
mov
adc
jns
dec
mov
mov
push
pop
adc
in
jb
sbb
xchg
pop
jno
sbb
ret
clc
add
shll
sbbb
xor
jb
scas
sbb
mov
dec
div
and
in
sub
mov
push
push
test
mov
pop
ja
cwtl
mov
cld
adc
jge
push
pusha
fucom
cltd
push
adc
mov
push
mov
pop
jg
xor
nop
or
orl
shlb
cmp
sbbb
mov
adc
pop
mov
xchg
mov
hlt
test
sub
mov
iret
inc
jno
xchg
rcl
and
add
push
jge
xlat
jp
scas
jb
push
push
push
ret
mov
adc
dec
pop
push
les
jmp
stos
fisttpl
xchg
dec
jo
daa
xchg
jmp
shll
sub
sbb
jmp
gs
sarl
xchg
inc
loopne
movsl
mov
cmp
add
insl
popf
add
sbb
cmp
cmc
mov
mov
and
sub
loope
push
dec
pushf
ret
cli
movsb
jno
or
dec
lcall
stos
push
data16
addr16
mov
je
das
arpl
sub
dec
xchg
mov
mov
mov
jmp
dec
fiaddl
daa
in
mov
xchg
repz
test
scas
sbb
dec
aam
jb
mov
movsl
lea
idivl
leave
jo
cmp
inc
cmp
lahf
shl
mov
arpl
inc
jno
xchg
les
mov
hlt
mov
jmp
or
or
movsb
das
sbb
adc
push
pushf
push
stc
pop
jecxz
loope
or
out
pop
imul
mov
jle
sub
sub
mov
int3
add
mov
popa
cli
pop
cmp
cmp
ja
imul
xacquire
or
insb
ror
mov
mov
or
int3
hlt
mov
sub
cwtl
inc
or
gs
mov
enter
pop
pop
push
sub
pop
push
clc
or
pop
push
dec
fidivl
faddl
mov
addr16
adc
outsl
sub
pop
out
int3
popf
in
in
mov
add
dec
cmp
loopne
insl
outsb
pop
push
mov
lods
jl
or
add
lret
jle
nop
in
mov
out
fisubrl
mov
sub
call
stos
vxorps
popa
mov
adc
push
mov
xchg
jp
pusha
sbb
cmp
out
stc
je
gs
loope
xchg
pop
arpl
hlt
dec
xlat
outsb
shrb
add
in
or
or
jecxz
mov
adc
xchg
pusha
mov
push
xchg
push
fs
fistpl
loopne
sub
xchg
lret
jns
ljmp
std
out
add
xlat
mov
mov
xlat
xor
jo
mov
aaa
pop
call
into
mov
jecxz
cmpsb
mov
sbb
test
in
xchg
pop
inc
push
clc
imul
dec
clc
push
test
ret
rcrb
sbb
popf
rcll
ljmp
test
jno
mov
and
or
xchg
cmp
fsubrl
int3
lahf
sbb
jb
mov
ljmp
ds
sarl
adc
mov
stos
popa
stos
ret
pushf
mov
ja
jne
pop
imul
cmpsb
cltd
push
mov
push
xchg
test
jmp
mov
aaa
arpl
ret
cmp
jp
enter
rcll
mov
pop
aad
ret
nop
xchg
lds
xchg
push
ret
and
add
xchg
dec
inc
repnz
ret
pop
adc
jbe
popf
mov
push
sbb
dec
jle
fcomip
rorb
adc
jne
inc
cwtl
mov
hlt
or
or
pop
sti
dec
lcall
and
xchg
loopne
mov
popf
mov
data16
cs
xor
or
in
pop
lcall
int
xor
pop
sub
xor
mov
jo
stos
pushf
insl
xchg
inc
adc
rcrl
pop
xorb
add
int3
xor
int
lret
push
push
push
push
or
lock
aam
into
out
or
jl
cmp
test
mov
dec
pushl
repz
mov
vshufps
mov
pop
std
push
lods
call
je
cmp
gs
sarb
push
enter
add
popf
push
or
cmp
subb
les
int
mov
dec
daa
xchg
scas
or
scas
and
movsl
pop
stos
mov
fdivrs
adc
xchg
sbb
js
hlt
lahf
repz
and
js
mov
das
xor
xor
xor
adc
mov
hlt
mov
mov
cmpsb
push
stos
in
cli
dec
xor
ss
push
in
dec
lret
sbb
loopne
inc
dec
notb
and
pop
les
cmp
mov
push
mov
inc
sub
mov
xchg
and
push
sub
daa
hlt
or
dec
mov
sarl
xchg
dec
out
push
xchg
pop
mov
mov
add
cmpsl
cmc
loop
lret
xchg
jmp
dec
push
pop
xchg
stos
cmp
insl
fsubrl
add
pop
cli
outsb
xlat
pushw
dec
rcl
push
adc
xor
sub
fwait
in
sbb
lods
popa
mov
test
lds
sbb
xor
or
out
xchg
cmp
in
cli
fs
data16
dec
and
dec
sub
in
pop
dec
insb
mov
xchg
fisubrl
movsl
pop
shufps
roll
mov
mov
push
rcrl
xchg
jmp
aas
addr16
jmp
lock
mov
add
lcall
fcompl
dec
daa
jg
push
arpl
push
and
sbb
cmp
aad
push
and
std
cmp
out
sbb
add
clc
xlat
inc
jnp
aad
clc
test
push
xor
adc
add
mov
or
aad
test
dec
addr16
sbb
and
mov
fucomip
mov
outsl
xchg
dec
imul
and
das
mov
mov
mov
test
mov
mov
and
mov
movsl
xor
sbb
sub
push
cs
int3
mov
dec
stos
mov
adc
push
adcb
imul
daa
or
cmp
pop
out
xchg
mov
fidivl
out
jo
cmp
sbb
stos
fs
xchg
pop
xchg
pusha
mov
movsl
xlat
push
or
xchg
mov
dec
in
adc
rcrb
xor
pop
pushl
addps
dec
xor
icebp
sahf
jae
pop
scas
pop
bound
mov
cmp
or
fs
icebp
pop
test
dec
pop
inc
pop
std
faddl
or
jnp
popa
dec
sarb
cmp
inc
add
cmpsb
sbb
data16
xor
adc
mov
cmp
lds
sbb
adc
scas
mov
add
mov
cli
test
cld
mov
pop
cmpsb
xor
sbb
dec
gs
push
insb
inc
mov
flds
xlat
scas
cli
xchg
les
inc
mov
inc
rolb
sub
push
mov
inc
sbb
mov
into
jecxz
test
rcrl
jl
mov
adc
cli
or
mov
fcmovnbe
adc
mov
mov
mov
lds
aaa
sub
push
cmp
cmpsl
fxch
aas
out
sbb
cli
aad
dec
ffreep
mov
je
mov
fsubl
clc
nop
xchg
fwait
sub
nop
sub
mov
jge
jnp
in
pop
cli
bound
outsl
dec
mov
jmp
pop
sub
sbb
push
cli
dec
outsl
sbb
jp
pop
in
and
aaa
mov
lock
imul
pop
xchg
ljmp
xchg
mov
sbb
sahf
lods
int3
test
scas
mov
dec
mov
imul
jae
and
or
shr
sub
in
fwait
outsb
fs
test
loope
ret
jb
xchg
idivb
lods
dec
loop
dec
cmp
jg
adc
insl
imul
out
pop
repz
mov
jb
inc
mov
dec
push
cmp
pop
xchg
pop
dec
jg
or
lret
call
lahf
pmullw
bnd
iret
insb
jae
sub
fbld
adc
or
pop
repz
cltd
addb
lock
scas
adc
mov
cs
jl
dec
add
push
cmp
xchg
rclb
jmp
dec
lahf
or
shll
faddl
mov
repnz
clc
aas
lea
lcall
jb
repnz
sub
shrl
test
pop
div
xor
fs
fcompl
pop
adc
inc
pop
xor
gs
out
ficoms
add
mov
enter
leave
stos
mov
xor
andb
dec
xchg
mov
insb
arpl
aaa
sub
outsb
dec
ja
lods
xor
inc
dec
sbb
jno
xchg
xchg
mov
xchg
or
fdivl
push
filds
dec
pop
add
and
mov
push
popf
mov
or
es
mov
ja
dec
push
mov
test
call
xchg
sbb
hlt
loope
push
xorl
rcrl
popa
jne
jb
arpl
mov
orb
leave
test
repz
dec
out
mov
dec
fildll
xchg
add
repnz
mov
aad
and
outsb
cwtl
mov
pop
lcall
pop
and
mov
lcall
popf
cli
out
test
and
fnstenv
loopne
orl
jecxz
jl
sub
mov
roll
shrl
sub
ret
fisubrl
leave
inc
clc
jbe
fwait
repz
pop
inc
fidivrs
loope
js
fldcw
pop
inc
or
lret
mov
push
dec
lcall
push
loope
sbbb
dec
jnp
loop
jno
and
dec
pop
inc
sti
push
adc
inc
sub
or
mov
xchg
gs
sub
les
iret
add
jb
xor
inc
aaa
pop
es
jno
and
subl
mov
dec
int3
adc
test
in
ja
mov
pop
orb
stc
andl
ss
push
lock
and
adc
out
mov
ljmp
push
push
in
outsb
push
sub
std
pop
push
push
mov
fiadds
adc
xor
push
mov
push
jae
jns
popf
sub
cltd
dec
call
or
cmpsb
sbb
clc
cmp
popf
repnz
inc
out
scas
addr16
push
and
test
popa
ret
lea
jb
enter
dec
xor
cmp
clc
leave
lcall
push
jge
or
dec
sbb
gs
mov
clc
pop
addl
inc
mov
cmp
inc
push
push
lahf
dec
scas
jne
inc
mov
scas
lds
leave
stos
sub
mov
and
pop
mov
mov
sub
adc
and
mov
add
jl
lret
test
sub
cwtl
jnp
mov
leave
xchg
mov
imul
jmp
mov
movsl
test
addr16
jnp
xchg
in
repnz
out
and
lock
ret
pop
dec
push
aad
or
xchg
adc
mov
std
push
daa
cmp
xor
mov
mov
xchg
dec
mov
mov
mov
sub
fs
push
adcl
nop
adc
jnp
jl
popa
inc
pop
mov
inc
int
in
push
push
and
xchg
pop
into
add
in
xchg
aas
insl
sub
sbb
sbb
ret
ss
pop
repz
arpl
iret
sub
dec
mov
lcall
adc
stc
adc
pushf
lock
fwait
or
xchg
xor
out
je
add
push
mov
push
mov
inc
loope
push
push
pop
fwait
and
inc
out
add
xchg
cmpsb
mov
lea
bnd
fnsave
cld
dec
test
shll
repnz
and
out
mov
loope
sbb
mov
push
xchg
iret
mov
mov
mov
push
aas
push
dec
fmull
mov
cltd
stc
or
daa
inc
into
inc
mov
or
lock
js
addr16
adc
sbb
shr
xchg
fwait
adc
fxch
dec
sbb
xor
and
lcall
push
test
fdiv
icebp
jno
push
int
push
bound
fsubp
jle
sbb
sar
lahf
push
mov
out
xchg
inc
cmp
ret
leave
sbb
sbb
cmp
loopne
xchg
jmp
jmp
xor
push
fsubrs
pusha
ffreep
cmp
pusha
push
popa
add
xchg
imul
fsubrp
and
test
xor
test
mull
xlat
and
andb
js,pt
mov
adc
jne
xlat
imul
pop
add
insb
mov
push
jnp
lds
aas
out
loope
inc
jle
pushw
dec
jb,pt
mov
movsl
or
cs
sbb
loopne
xor
inc
stc
cmp
pushf
mov
xchg
mov
cmc
insb
nop
xchg
pop
in
clc
pop
mov
inc
scas
addr16
out
push
inc
and
jo
nop
out
jmp
pop
out
mov
stos
scas
out
cld
dec
jmp
fcmovbe
in
mov
or
sti
stos
jae
mov
push
jns
jp
lods
aam
shl
cmp
mov
ficompl
repz
sub
sbb
les
xchg
mov
or
xchg
idivl
out
dec
xchg
nop
pop
daa
incb
inc
inc
fs
popa
dec
and
adc
xchg
outsb
adc
mov
pop
bound
cmp
sub
dec
pop
xchg
mov
dec
mov
jl
adc
gs
inc
sub
scas
call
mov
adc
pusha
adc
add
lret
lods
fisttpl
movsl
aaa
aad
mov
mov
push
fwait
je
push
mov
fdivrl
jp
sbb
cmc
or
dec
xchg
fimuls
in
ret
pop
in
cmp
cmp
dec
and
dec
dec
fs
xor
or
pop
inc
mov
shrb
insl
mov
sub
xchg
and
mov
out
cwtl
dec
sub
repnz
fldenv
fldl
not
push
das
hlt
fadd
out
mov
push
mull
push
push
ficompl
shl
mov
sbb
jmp
mov
rcrl
les
xlat
adc
cmp
out
push
div
arpl
add
dec
loop
dec
ljmp
inc
jmp
loope
cltd
and
lcall
push
cmp
add
mov
imul
add
cmpsb
gs
and
loopne
jp
xchg
inc
and
adc
dec
in
sbb
mov
pushf
lcall
cs
ficompl
or
xchg
out
cmpsb
xor
pop
mov
mov
icebp
push
push
movsb
jge
out
push
mov
aas
cmp
in
jb
pop
test
sbb
imul
scas
es
and
arpl
cwtl
and
mov
adc
xor
mov
outsl
xchg
filds
aad
outsb
push
pop
shlb
cmpsl
mov
xchg
outsl
sti
push
jmp
xchg
movsb
in
stos
incw
cltd
sti
xor
mov
and
les
std
in
xchg
add
cmpsb
cmp
mov
outsb
incb
add
inc
pop
lcall
dec
out
jp
lahf
aas
std
or
imul
sub
xlat
push
xchg
test
out
pop
sarl
out
add
stos
xchg
jnp
mov
jno
xlat
ret
push
pop
xchg
mov
into
jmp
cmp
shrl
les
dec
cmp
and
cmp
out
adc
push
push
out
fsubs
xchg
in
sub
xor
mov
add
mov
sub
mov
pop
mov
pusha
mov
inc
lcall
adc
xchg
pushl
adc
fdivl
jnp
xor
fnstcw
sbb
roll
fs
pop
mov
inc
sub
inc
mov
movsl
add
imul
inc
addr16
rcr
nop
sarl
cmp
inc
cmp
pusha
cmp
mov
arpl
test
xor
dec
push
sbb
mov
mov
cmp
cmp
adc
jne
xor
inc
out
cwtl
sahf
inc
or
add
mulb
into
lcall
leave
rolb
adc
xchg
jns
or
jle
pop
jo
ljmp
popa
movl
repnz
xchg
mov
pop
enter
sub
inc
adc
or
and
sub
mov
in
mov
or
lret
xchg
std
add
scas
aaa
or
cltd
mov
sub
in
and
cmp
push
dec
int
rcrb
sbb
jle,pt
jg
loopne
jno
movsb
icebp
pop
loope
mov
push
mov
push
xchg
test
pushf
mov
int3
cmp
xchg
rclb
in
dec
adc
jns
jbe
and
xchg
jbe
lcall
and
jmp
mov
std
fwait
sub
shl
cmp
add
push
mov
or
sbb
jno
mov
sub
sub
insb
jb
sbb
stos
fimuls
sahf
cld
cmc
int
mov
mov
jb
insb
mov
inc
jge
mov
jp
pop
mov
imul
dec
iret
incb
push
fimull
pop
jne
mov
leave
push
xchg
scas
out
fcmovb
push
or
xchg
sub
clc
push
mov
lock
inc
add
mov
pop
rorb
ret
mov
jg
push
jbe
sarl
lds
mov
pop
out
es
dec
pop
daa
hlt
mov
xor
repz
jbe
jb
xchg
add
daa
dec
ss
sbb
jecxz
sahf
incl
mov
test
dec
stos
sbbl
pop
jg
push
inc
popf
add
les
cld
inc
mov
lods
test
push
cmpsb
inc
sub
adc
jge
push
rep
outsb
idiv
movsl
ret
cmc
mov
int3
dec
popaw
or
inc
push
jo
out
mov
and
inc
mov
or
xchg
out
adc
xchg
xchg
fcmove
cmpsb
add
jb
pop
lods
pushf
lods
dec
insl
jnp
xchg
sbb
jo
rolb
lret
loop
je
xchg
add
pushf
iret
sub
inc
mov
ret
sbb
movsl
ljmp
push
jge
aas
enter
rcrb
insb
int3
mov
nop
gs
adc
mov
adc
mov
scas
das
and
or
xchg
xor
sti
cltd
sub
stos
jae
mov
inc
aaa
and
cmp
inc
in
std
jno
shrb
jle
enter
addl
sbb
in
test
xchg
add
push
inc
mov
jmp
mov
pop
xchg
stos
sti
dec
ret
push
fildl
fs
loopne
pop
xchg
mov
das
repz
mov
pop
shrb
jns
cmp
out
scas
mov
dec
sub
scas
inc
popa
pushf
adcl
push
adc
pop
lds
cld
out
pop
insl
daa
xorb
sub
and
adc
ja
aam
push
dec
push
mov
outsl
decl
inc
adc
fst
rorb
cmp
notl
jb
decl
loop
sub
jecxz
jl
sbb
dec
aas
and
inc
nop
lods
dec
xchg
fcoml
pop
ds
insb
in
lret
dec
inc
cwtl
sbb
mov
mov
jo
push
and
pusha
sbb
and
sub
mov
pushf
cmpsb
ja
loopne
jmp
ret
dec
shlb
adc
lret
jg
jl
mov
cmp
jno
mov
fnstenv
pop
aam
in
ss
push
dec
push
repnz
scas
ss
loop
cmp
fistpll
and
adc
mov
pop
xor
mov
sti
add
into
lock
adc
mov
inc
jb
fisubl
fs
outsb
lods
xchg
sbb
lret
cmp
or
or
mov
dec
lods
and
mov
rcrl
in
inc
mov
mov
push
inc
lahf
pop
rcrb
xor
jae
insl
pop
cld
ljmp
mov
mov
mov
lcall
dec
enter
pop
mov
shld
data16
stos
frstor
dec
xlat
test
xchg
push
dec
sti
div
cmp
push
mov
add
push
mov
pop
imull
aad
nop
pop
fists
mov
sub
pop
jns
sbb
inc
ficompl
cmpsb
ds
push
or
rorb
mov
sbb
jbe
cmc
mov
repz
fstl
aas
mov
shr
mov
pop
iret
pop
subb
xor
int3
inc
cmc
test
xor
negb
sub
loope
fs
cmpsb
sub
sub
jecxz
fistps
jl
cmp
adc
sub
xchg
lea
mov
mov
movsl
and
dec
xor
xor
add
jecxz
inc
mov
idiv
repnz
insl
scas
add
jno
push
hlt
notb
jle
imul
mov
cmp
mov
testl
outsl
xor
int
push
and
aas
or
add
pusha
imulb
imul
inc
out
mov
sbb
div
mov
mov
mov
mov
test
mov
push
andb
sbb
pushf
ret
dec
sub
dec
loop
pushf
insl
pop
and
mov
jg
jl
imul
mov
pop
mov
and
jg
out
in
mov
and
adc
fistpll
jl
insl
mov
and
loope
dec
jp
mov
dec
xchg
inc
insl
ret
mov
pusha
mov
ljmp
lret
mov
ljmp
xchg
fwait
shl
or
pusha
jge
pushf
aad
fsubl
leave
les
lea
add
cltd
lods
dec
pop
dec
adc
cli
push
mov
insb
sbbb
mov
push
push
jbe
or
and
and
sarb
stos
xchg
mov
in
cmp
cmp
dec
xlat
ja
inc
stos
fucom
mov
lea
fsubl
lods
cmp
aas
mov
loopne
fildll
sub
push
call
push
dec
jecxz
nop
stos
and
add
dec
mov
jge
inc
fmuls
sahf
dec
cld
ja
xor
cwtl
inc
fst
lock
lahf
mov
or
mov
cli
add
xor
pusha
xchg
js
loopne
inc
mov
xor
nop
xor
pop
add
jnp
mov
sub
movsl
rorb
inc
stc
mov
xor
adc
cli
push
fadds
inc
lret
fbstp
repz
jae
dec
add
push
mov
mov
inc
icebp
rcrb
cmp
push
ds
mov
stos
pop
xchg
mov
cltd
nop
fmulp
pop
inc
mov
mov
or
rolb
hlt
pop
pushl
movsb
cmc
sbb
or
inc
jl
add
xor
mov
xor
xchg
ds
stos
ret
fsubrl
stos
iret
mov
shlb
cltd
daa
test
and
arpl
ficompl
add
cwtl
xchg
popf
pop
xor
cmpsb
aaa
jbe
ret
fstps
pop
fucomip
lods
sbb
mov
das
enter
data16
jno
pop
call
dec
or
les
sbb
pop
xchg
jecxz
ds
rolb
and
dec
ret
jb
mov
insl
cmpl
or
jl
insl
loop
lcall
push
push
pop
pop
jmp
hlt
jo
push
or
loopne
push
daa
lock
stos
dec
fbstp
mov
adc
and
movsl
add
pop
sar
xchg
in
mov
pop
ds
ljmp
cmc
movsl
addl
mov
push
daa
pusha
lret
cld
sbb
lock
repz
das
cltd
outsb
jns
out
mov
ds
adc
mov
and
xlat
aas
and
ret
jle
and
inc
aas
int
sub
push
pop
jo
cmp
inc
xchg
les
and
adcl
mov
mov
in
lret
push
xor
fcoml
mov
xchg
in
dec
mov
clc
push
rcrb
fwait
gs
int3
scas
lret
xor
pop
sub
jbe
or
rcrl
xchg
and
ja
data16
sti
stc
and
jecxz
jns
ds
out
popa
in
shrl
inc
aad
shrl
adc
jno
pop
xlat
imul
stc
sbb
jg
cmc
xor
shr
mov
pop
mov
cmp
jb
movsl
loope
cmc
jno
pop
xchg
mov
cmpsb
sbb
aad
frstor
push
test
mov
and
ds
ljmp
test
mov
call
and
data16
push
mov
dec
jge
cmpsb
mov
push
or
adc
mov
pop
out
jle
fsts
lcall
int3
sarl
jecxz
sbb
mov
stos
addr16
push
add
movsb
sti
repz
adc
insw
pop
sub
test
and
push
cwtl
bound
xor
lods
out
pop
js
sbb
stos
pop
fidivs
ss
ret
mov
adc
xor
inc
fwait
mov
and
sub
push
sbb
loop
dec
and
mov
sbb
xor
popa
dec
inc
loop
mov
sub
inc
mov
and
sub
dec
mov
mov
jmp
mov
cmp
xchg
pop
stos
pop
sbb
xchg
daa
sbb
scas
test
mov
mov
pop
jnp
xchg
loope
dec
subl
cmp
inc
jmp
and
lea
push
inc
xchg
adc
cmc
test
pop
aaa
rol
xchg
loop
out
enter
popa
add
mov
inc
pusha
xor
rclb
xlat
dec
jp
ds
mov
jmp
pop
jge
nop
cli
rolb
mov
cmp
add
fimuls
lcall
add
push
mov
icebp
mov
enter
dec
xor
clc
dec
aam
sbb
inc
jg
btc
ret
xor
addr16
dec
xor
mov
and
push
jp
dec
mov
jp
or
push
add
je
ja
mov
jbe
insb
movsb
push
mov
sub
add
rclb
dec
fidivs
int
xlat
and
pop
loop
mov
cmp
cmp
jne
mov
test
add
ds
inc
insl
jnp
int3
mov
pop
lods
rep
movsb
pusha
enter
scas
dec
mov
ror
shll
inc
push
rorb
ds
inc
mov
and
mov
scas
dec
rcl
aaa
inc
cmp
scas
push
rcrb
addb
cmp
mov
jne
mov
das
mov
or
mov
push
pop
das
jno
xchg
mov
imul
push
aas
imul
addr16
sti
lods
fwait
in
and
sbb
stc
movsl
xchg
xchg
ss
test
lret
mov
call
lea
sar
pushf
ret
roll
pop
in
rcll
pop
mov
imul
adc
sbbb
imul
dec
cmp
or
clc
jecxz
push
inc
pop
pop
mov
repnz
jmp
mov
xchg
cmc
inc
sbb
jl
lret
fcoml
lods
pop
cmp
pop
cmp
xchg
mov
jl
push
fs
jp
movsl
push
and
dec
stos
push
dec
add
stos
inc
lahf
cwtl
adc
pop
xor
and
push
aaa
aaa
mov
cwtl
jmp
xor
and
lds
push
lahf
push
inc
stos
mov
mov
roll
jecxz
rcll
rep
fmull
xor
repnz
cmpsl
cld
ret
shlb
loopne
loope
pusha
filds
xor
adc
jns
xor
cmp
or
adc
xor
lds
add
in
add
sbb
cmp
cmpsb
adc
imul
outsb
js
cmp
mov
aad
test
pop
enter
push
mov
frstpm(287
pop
cmp
mov
mov
pop
aam
nop
sub
dec
and
mov
rcrb
push
ficompl
and
or
shrl
test
int3
call
ljmp
jmp
lret
pop
in
xchg
testl
lret
pop
cmp
xchg
sub
adc
dec
sbb
mov
push
cltd
adc
xor
jae
and
cmpsl
ficoml
mov
jno
adc
sub
nop
push
and
out
popa
mov
test
push
lods
push
xchg
aaa
xor
and
inc
jne
mov
push
outsb
mov
insl
fdivrs
mov
out
in
lods
leave
cmpsb
stc
mov
jg
movd
pop
inc
add
pop
sbb
stos
jb
xlat
adc
stc
cmp
lock
test
inc
push
ljmp
mov
fistl
pop
out
xchg
push
sahf
jmp
in
cmp
or
sbb
sub
push
ss
fisttps
lcall
daa
sarb
loopne
push
xor
jbe
out
stos
or
adc
ds
mov
push
aam
scas
enter
aad
enter
je
sub
push
mov
stc
push
jns
or
xchg
sbb
rolb
rolb
stos
cmpsl
jp
jge
test
stos
ljmp
jp
aam
addl
enter
push
xor
xchg
stc
in
rcrb
mov
cmp
jno
push
jbe
inc
xor
pop
gs
pusha
jecxz
arpl
sub
jg
loope
std
mov
movsl
xchg
xchg
lret
push
in
sub
lret
scas
lods
mov
mov
popf
loop
pop
cmp
arpl
incl
mov
shrb
jns
sbb
mov
pop
push
lret
pop
push
dec
les
inc
add
pop
hlt
xchg
mov
inc
cmp
popa
shlb
and
push
shlb
in
nop
cwtl
jmp
add
in
xchg
adc
je
cli
push
test
iret
sub
xlat
sub
sub
mov
int
mov
inc
stos
mov
sbb
fiadds
or
aas
sub
cmp
dec
add
xor
outsl
jae
je
pop
xchg
pop
cld
cltd
mov
je
clc
shlb
inc
pop
das
jns
testl
adc
cmp
mov
mov
inc
xchg
sub
out
int
sbb
cmp
stos
xchg
mov
xchg
int3
mov
xchg
call
dec
aas
scas
mov
imul
push
mov
iret
xchg
inc
pusha
movsl
enter
sbb
cmp
stc
add
push
and
sbb
cld
push
stos
std
insl
and
das
jecxz
mov
stos
cmp
dec
and
sub
xchg
lock
out
push
push
add
aaa
cld
inc
lds
dec
xchg
loope
xlat
fs
adc
push
popf
addr16
jp
sub
pop
in
in
in
pop
sbb
dec
or
sbb
xor
shrb
out
stos
mov
push
in
lock
or
and
xchg
stos
sub
or
iret
add
cli
push
int3
mov
adc
mov
enter
jg
inc
ret
mov
cmp
repnz
jg
add
mov
lock
or
push
loop
mov
sbb
jmp
fistpll
stc
sub
cmp
dec
nop
jg
pop
mov
fnstsw
sbb
cmp
dec
cmpsb
mov
xchg
fcmovnbe
popa
insl
movsb
out
push
jo
pop
xchg
shlb
jno
cmc
xchg
jno
adc
gs
push
xor
xchg
enter
cmp
iret
mov
mov
add
loope
xchg
arpl
mov
stos
hlt
sahf
cld
push
mov
outsl
or
clc
lcall
mov
mov
call
sub
add
mov
leave
or
nop
dec
push
and
dec
xor
cmp
and
cli
pushf
dec
pop
repnz
shlb
xchg
push
add
and
lret
ja
out
bound
push
in
lds
into
in
mov
adc
add
mov
call
les
sub
imul
cmp
imul
adcl
mov
and
insb
repnz
out
jo
rolb
icebp
inc
je
push
or
push
lret
jge
jge
xchg
and
js
popa
xchg
add
in
fs
xor
int3
push
inc
insb
loop
mov
inc
sub
sbb
rclb
cmp
xchg
clc
cmp
pop
jmp
fistpll
outsb
nop
cmp
mov
cmp
jbe
mov
loop,pt
jge
adc
push
xor
adc
mov
sub
in
jb
mov
mov
sahf
sbb
das
mov
call
fsub
mov
and
mov
xor
mov
fiaddl
lahf
jl
mov
stos
mov
mov
je
outsb
adc
xchg
shrl
adc
daa
std
stc
cmp
imulb
inc
mov
popf
mov
mov
jbe
insb
movsb
mov
adc
in
in
aam
or
cmp
in
push
pop
rorl
jns
popf
in
cwtl
das
incb
fldt
push
into
fs
out
pop
shrl
add
dec
pop
push
enter
pop
or
sbb
dec
mov
mov
jae
inc
enter
fcoms
xchg
mov
decb
test
iret
and
adc
in
test
lret
and
ja
dec
aaa
bound
cwtl
pop
xor
fwait
push
pop
sbbb
dec
or
mov
xchg
orb
enter
sbb
pop
xchg
aad
adc
icebp
sahf
rcrb
mov
push
ret
out
gs
test
daa
push
adc
sub
jns
dec
scas
test
or
adc
cmp
jns
sahf
leave
hlt
out
cmpl
mov
pop
add
mov
sbb
mov
test
mov
jnp
mov
test
jge
jl
sub
push
mov
dec
sbb
pushw
mov
jle
mov
shrb
and
lds
repz
aaa
test
repnz
jbe
ss
pushl
aad
aaa
mov
imul
mov
aam
push
pop
psllq
and
push
ret
inc
in
mov
mov
pop
adc
mov
cmp
test
push
jmp
push
sub
popf
incl
cmp
ret
xlat
push
mov
out
aad
dec
enter
imul
sub
and
aad
sbb
inc
lods
adc
mov
fmuls
jge
sbb
fists
out
iret
mov
jno
pcmpeqd
pop
addr16
cmp
pop
sahf
mov
sub
mov
xchg
sahf
iret
insb
out
sahf
mov
xchg
adc
or
cmpsb
leave
inc
or
cmp
shl
push
hlt
in
shll
xchg
mov
stc
ret
lods
movsl
vpmullw
add
dec
cmp
mov
cmpsl
in
xchg
mov
xchg
cmp
aam
leave
rcrl
mov
push
in
cmp
test
cmp
call
xor
jo
imul
ss
cmpsb
mov
in
loopne
pop
mov
push
add
jbe
dec
jb
sbb
leave
push
sub
jg
xchg
andl
inc
mov
sbb
mov
mov
pop
std
loop
les
cmc
ret
inc
sarl
or
stos
xlat
fiadds
jg
movsl
cmpb
loope
clc
mov
xchg
out
jmp
lcall
and
lcall
sbb
jbe
sub
lret
ds
pop
sub
orps
in
nop
in
jbe
mov
frstor
mov
adc
and
mov
shlb
pusha
ret
push
pop
sbb
imul
dec
lret
es
outsl
mov
testb
aaa
mov
jl
mull
test
sub
cmp
or
jno
mov
in
lahf
cmp
jle
scas
sbb
xor
sahf
ja
movsb
testb
stc
cmp
mov
or
hlt
xchg
inc
fisubrs
pmaxub
dec
and
push
lret
sbb
push
notl
mov
pop
sbb
pop
jmp
xor
scas
fdivs
jmp
xchg
dec
cmp
add
mov
xchg
sub
jne
sahf
mov
jmp
adc
or
in
or
sub
push
push
dec
cmp
sarb
clc
femms
imull
jno
mov
in
fwait
mov
scas
in
jmp
aas
arpl
add
test
fdivrs
imul
sub
stc
and
call
push
xchg
mov
aaa
mov
cmpsb
jbe
divl
dec
xor
out
push
push
pop
sbb
dec
into
ret
cmpsb
sub
pop
popf
or
pusha
data16
enter
pop
xchg
lret
add
push
inc
sub
outsl
sarb
push
addr16
sbb
dec
mov
jle
dec
sbb
xor
insb
lods
bound
pushf
adc
and
insb
mov
and
sbb
add
adc
inc
xor
out
and
insl
jmp
jne
xor
add
loopne
movsb
mov
dec
mov
hlt
sub
int
sbb
cltd
das
jo
test
out
mov
out
fucomi
lahf
adc
fldt
jmp
sub
je
sbb
push
push
repz
pop
jmp
or
insl
in
sub
mov
icebp
jns
cmpxchg
fimuls
xchg
test
icebp
jns
arpl
sbb
dec
int3
xor
pop
xchg
mov
and
es
cmp
push
cmpl
out
fiadds
lret
push
dec
pop
cli
or
mov
stos
aad
sbb
lea
mov
into
push
add
inc
movsb
pop
loopne
sbb
pop
cmp
push
cmp
sub
fstpl
inc
jne
rcll
push
mov
into
mov
ljmp
fisttpl
fdivl
mov
enter
mov
testb
stos
pop
loopne
adc
xor
push
movl
scas
jbe
inc
or
jg
adc
xor
dec
pop
sub
and
lods
popa
cmp
arpl
test
bound
fidivrl
jne
aas
mov
mov
adc
loopne
les
repz
fidivl
ds
adc
push
sub
loope
cs
cli
ja
xchg
fnstenv
push
sbbl
movsl
aad
mov
out
insl
gs
lret
pop
cmc
inc
sbb
mov
insb
outsl
ret
xor
sar
push
aaa
int
lcall
ror
sarb
nop
lahf
dec
in
clc
jge
lret
sbb
sub
int
dec
or
mov
hlt
dec
mov
pop
cs
mov
jecxz
cmp
mov
push
bound
or
aas
out
push
sbb
roll
int
out
jo
ljmp
outsb
push
jne
cwtl
out
rcrb
or
in
les
clc
mov
fdivrl
mov
lahf
mov
imul
mov
movsb
das
sahf
outsb
fnstsw
pop
cmp
xlat
cmp
mov
sub
repnz
jge
cmpl
addr16
stc
loope,pn
and
fnstenv
cmp
call
push
mov
mov
mov
jmp
bound
andb
sub
add
pop
ja
mov
inc
test
decb
popa
fsub
mov
push
or
jle
cmp
lea
add
dec
pusha
xchg
mov
add
jge
push
or
mov
icebp
sbb
in
xchg
ret
shll
clc
scas
push
fsubr
jmp
int
dec
mov
orl
jmp
int3
cmp
mov
sti
stos
jo
test
dec
mov
lcall
pop
cld
clc
stc
leave
aam
sti
inc
pop
int
ljmp
icebp
negl
dec
jmp
sbb
jnp
inc
push
push
out
ret
jge
mov
cmp
jmp
mov
rorb
jo
mov
cltd
aad
push
and
lock
cs
es
bound
sti
xchg
test
popf
inc
stos
add
pushf
mov
push
pop
les
adc
and
into
insb
inc
xchg
pop
xor
dec
mov
mov
jno
lods
xlat
test
mov
or
loopne
jl
enter
pop
cmp
shrl
in
jo
outsl
clc
insb
pop
leave
push
dec
adc
sub
xor
mov
push
aas
sub
cli
jb
in
jae
movsl
sbb
roll
loope
push
cmp
xchg
dec
dec
cmpsb
lea
mov
push
push
and
cmp
outsl
push
stc
pop
cmp
shrb
ret
mov
jae
std
adc
jl
fisubrs
lods
movsl
xchg
mov
shll
xchg
mov
jb
movsl
fwait
inc
mov
push
pushf
stos
add
cltd
inc
es
es
push
push
in
shrd
pop
faddp
xor
pop
ds
cwtd
jno
push
cmpsb
int3
loopne
push
pop
xlat
jmp
mov
pushf
adc
cmp
add
add
ljmp
test
pop
inc
fisttpl
ljmp
jb
in
cmp
test
mov
and
inc
add
cmpsl
cmpsl
inc
xchg
mov
cmpsl
data16
mov
fcmove
mov
and
cmp
jno
mov
fisttpll
add
mov
xor
dec
sub
push
dec
repz
pushf
out
incb
cmpsb
lret
stc
mov
test
popf
inc
stos
sbb
dec
enter
pushl
mov
mov
ret
sarl
fs
adc
call
ss
or
fiadds
or
rclb
push
jns
jae
or
add
movsl
call
cwtl
or
push
lds
fdivl
push
out
bound
mov
pusha
xchg
clc
push
dec
inc
fwait
outsl
maxps
jae
push
sti
adc
push
fsubl
pop
xor
jno
inc
jmp
fistps
pop
mov
sub
ret
ds
repnz
push
xchg
inc
and
push
mov
sub
ss
push
mov
ja
mov
iret
out
addr16
add
int
fdivl
rclb
in
icebp
imul
test
pop
push
fwait
pop
out
lcall
pop
push
cmc
sbb
jbe
loope
out
lahf
xchg
push
out
int3
movsl
add
xchg
popa
push
dec
pop
dec
repnz
mov
xchg
daa
jmp
xchg
ret
mov
or
xchg
mov
icebp
adc
shll
loope
fsub
dec
fildll
and
sbb
push
ss
push
adc
xor
fdivp
clc
push
adc
push
inc
imul
mov
pop
loop
lods
mov
lods
mov
jbe
adc
rorb
jae
arpl
dec
pushf
loope
jge
outsb
pushf
jo
mov
mov
cmp
fistps
mov
sbb
cmp
add
in
pusha
jg
push
sbb
orl
sbb
ljmp
xchg
xchg
mov
dec
lds
sarl
lods
dec
xchg
loop
mov
dec
fisubs
cmp
xor
subb
je
js
sbb
and
sbb
fwait
sub
rcrl
sahf
mov
push
cmpb
mov
cmp
xchg
push
je
gs
add
and
xchg
pop
and
imul
ret
lds
popa
xchg
addl
data16
sub
mov
fidivrs
sbb
push
call
lds
in
imul
mov
icebp
jge
and
arpl
dec
fisubrl
outsb
movsl
dec
in
dec
or
aaa
les
lcall
loop
pop
dec
adc
scas
mov
add
inc
sub
pop
lds
cmp
pop
sub
lahf
or
aaa
mov
dec
ja
xchg
dec
jge
sbb
adc
and
jbe
push
mov
or
jae
mov
and
add
jb
inc
xor
mov
adc
mov
dec
mov
dec
mov
pusha
sub
movsb
rcll
sub
jno
out
push
inc
in
cmp
cld
imul
dec
inc
lahf
inc
mov
jno
fstpt
xchg
add
stos
mov
loopne
sbb
xchg
stos
cmp
fisubl
scas
popa
cwtl
mov
clc
ret
dec
pop
das
out
jnp
pop
xchg
xor
cli
mov
add
add
pop
and
jne
fistps
push
and
xchg
push
pop
inc
outsb
lcall
inc
ds
cld
aaa
jmp
push
push
xchg
and
inc
pop
jbe
sbb
cmp
push
lods
xchg
xchg
mov
push
int3
mov
inc
ret
xchg
scas
je
outsb
gs
inc
sub
mov
out
jne
sub
mov
fisubl
push
push
aad
add
inc
dec
jp
add
lds
sub
stos
xchg
mov
in
sub
sti
rolb
jp
adc
xchg
in
gs
dec
sbb
sbb
adc
inc
cs
add
scas
mov
pop
or
pop
add
pop
je
xchg
add
or
or
ljmp
sub
pop
lock
ljmp
fcmove
pop
shlb
and
mov
sub
adc
in
mov
fcompl
dec
fcmovnu
xchg
xchg
iret
cmc
sbbb
repz
lea
jp
nop
fsub
xor
movsb
sub
dec
sub
pop
std
dec
jp
or
pop
notb
push
repz
add
add
jg
pop
bound
cwtl
sbb
add
addl
into
pop
aad
mov
inc
outsb
out
lsl
cmp
in
sbb
xchg
aaa
out
fcompl
xor
fsubrl
adc
fwait
lret
ds
xor
xchg
outsb
int
cmpsb
aaa
xchg
or
xor
popa
jp
in
mov
xchg
ffreep
je
xchg
ja
adc
pop
mov
bound
cmc
outsb
dec
mov
add
aam
adc
and
outsl
std
xchg
cmp
lods
cmp
sub
jge
sbb
xor
sub
shr
mov
cmp
or
dec
xchg
mov
stc
mov
push
out
or
and
pop
inc
mov
orl
sbb
sub
adc
ss
add
xchg
cld
mov
popa
xor
cltd
xchg
pop
ficomps
and
cmp
icebp
sbb
lea
and
push
hlt
mov
and
xchg
inc
xor
or
fsubrl
sahf
cmp
lcall
imul
adc
xchg
sub
fwait
lds
lretw
in
cmp
sbb
sti
bswap
cs
lcall
mov
lds
ret
nop
and
mov
xchg
sbb
pop
pop
subb
cmpsb
mov
inc
retw
dec
and
int
and
dec
cltd
dec
pop
xchg
fmull
dec
rcrb
scas
addb
mov
xor
dec
dec
dec
mov
sbb
cmc
mov
enter
sub
jmp
sbb
sub
negl
jge
mov
push
sub
cmpsb
sarb
mul
imul
decb
push
ss
xchg
jecxz
xchg
xlat
cli
add
sbb
mov
sub
dec
push
fwait
cmc
adc
pop
cmp
fwait
lret
dec
push
sarl
in
sbb
jecxz
push
shr
int
xor
dec
fs
insl
fbstp
ret
cmpsl
mov
dec
js
arpl
repz
je
dec
and
mov
outsl
out
iret
dec
jae
inc
cmc
stc
adc
dec
mov
stc
adc
mov
pushf
jle
outsb
cmp
adc
loope
lock
dec
adc
divl
mov
mov
sbb
push
std
das
pop
push
enter
fadds
push
das
repz
jg
inc
dec
push
add
add
outsb
leave
mov
jecxz
in
inc
out
jno
mov
outsl
adc
fucomp
or
sbb
jnp
int3
rorl
push
jbe
or
out
ja
mov
roll
insb
mov
leave
sarb
xchg
incb
shrb
in
scas
sub
out
and
mov
push
ret
xchg
mov
rclb
lret
fiadds
loopne
push
sti
mov
jg
sub
jge
adc
insb
pop
jb
sbb
fildll
add
movsl
pop
xchg
inc
cwtl
adc
push
mov
scas
shl
pop
and
dec
out
sbbb
add
or
repnz
outsl
adc
xor
adc
mov
dec
sarb
sbb
and
jns
jmp
jo
add
push
cmpb
mov
mov
leave
pushf
ja
push
fsts
or
dec
and
pop
out
and
negl
adc
pusha
cltd
mov
popf
ret
js
pop
jge
sub
pushf
cmp
lods
call
mov
cmp
ljmp
cmp
notb
lods
lret
push
jbe
loopne
push
cmp
push
mov
mov
sbb
enter
mov
dec
nop
cs
jb
lret
sub
in
add
fsubrl
or
imul
movsl
mov
mov
test
inc
cmp
push
enter
mov
jg
lcall
nop
std
push
jge
mov
sub
inc
inc
adc
mov
pop
pop
mov
adc
movsl
in
xchg
xchg
mov
pop
js
mov
fwait
jl
mov
or
mov
inc
daa
outsb
flds
outsb
mov
lret
push
mov
xchg
mov
jne
ret
clc
dec
loop
jnp
fdivr
loop
xchg
decb
jecxz
jns
shll
arpl
xchg
jl
fldcw
rorl
mov
cmp
mov
pop
out
push
pop
jecxz
stc
or
mov
or
jg
push
jmp
sub
cmp
aad
pop
repz
jg
adc
add
lret
mov
xlat
jnp
rcrb
iret
and
add
pop
adc
push
mov
xor
subb
and
imul
push
dec
mov
dec
jl
insl
push
mov
add
mov
lds
outsl
adcl
jnp
dec
adc
dec
sahf
lret
lods
ja
pushf
jne
push
or
adc
xchg
and
mov
rcl
notl
sahf
stc
fistps
je
jl
mov
ret
lahf
pop
std
inc
fbld
or
jnp
xchg
add
js
push
imul
adc
inc
jge
out
sbb
sbb
mov
insl
dec
jno
jbe
mov
add
jbe
push
dec
sub
in
and
repz
xchg
sub
adc
xor
cli
shlb
ficoms
xor
jg
push
xchg
push
cmpsl
aaa
jmp
popa
push
enter
int
pop
scas
pop
xchg
ljmp
daa
jge
repz
arpl
sub
xchg
xchg
std
sbb
inc
jnp
ja
daa
out
cmp
in
scas
lods
in
push
scas
fnsave
lret
jno
sbb
push
pop
or
lret
push
push
adc
clc
jno
int
pop
and
enter
inc
and
popf
addr16
mov
stos
cmp
sbb
lret
popf
mov
in
loope
stos
pusha
in
push
xchg
xor
cwtl
or
insl
push
pop
xchg
mov
ljmp
pop
xchg
push
int3
adc
repz
dec
sahf
push
sub
xor
xor
push
or
fucomi
push
xchg
inc
or
in
cmp
jmp
ja
add
jmp
int
add
data16
inc
loop
repnz
mov
mov
fsubrp
cmp
or
stos
mov
or
jb
std
mov
pop
dec
add
mov
jge
xor
mov
mov
and
inc
and
pop
imul
fs
test
movsb
ret
cmp
iret
mov
idivb
sub
repnz
sbb
mov
cmp
test
push
push
icebp
jne
mov
repz
pop
mov
mov
incb
push
dec
rcrl
ss
sub
pusha
mov
int
xlat
stos
idivb
outsb
or
xor
test
insl
dec
out
filds
cld
jbe
push
or
fcomps
dec
lahf
in
dec
icebp
insb
lods
insb
shll
push
mov
or
xchg
rol
jmp
adc
aad
pop
or
shll
imul
and
es
cli
enter
sbb
pop
mov
and
pop
inc
push
or
jno
push
push
cmp
sbb
es
push
and
shrb
lcall
movsb
cmp
fucom
stc
pop
or
cmp
add
jl
pop
jo
dec
inc
jns
les
imul
loope
push
mov
repz
stc
out
jl
push
lea
fwait
sub
xlat
popf
repnz
xchg
mov
dec
mov
int
std
mov
adc
fmuls
or
dec
adc
mov
mov
cli
addr16
outsl
adc
jmp
push
fsubs
fildl
popf
sub
ja
xchg
in
stc
ss
inc
icebp
popf
fdivs
jle
xor
loopne
cmp
mov
pushf
adc
ss
sub
jno
mov
test
sub
xorb
mov
andb
fcompl
xchg
push
push
ja
mulps
clc
or
aad
frstor
adc
mov
inc
vpshaw
pop
push
shll
sbb
sbb
gs
je
rcrl
lret
addr16
cwtl
jns
negb
lock
aam
cltd
pushf
xor
in
mov
add
add
ficoms
ret
out
cmpsl
pop
jmp
mov
mov
adc
or
lahf
dec
insl
jno
in
std
xchg
add
lahf
fwait
ss
movsb
jp
or
imul
cli
ljmp
jmp
jbe
iret
pop
push
dec
loope
and
push
fdiv
adc
sbb
jg
enter
aam
dec
dec
repnz
cmc
sub
insb
std
and
fs
les
loop
test
sarl
cld
sahf
add
dec
mov
jecxz
movsb
xchg
andl
adc
sti
add
cmpsb
jge
mov
pop
mov
int3
scas
out
les
mov
shrb
insb
and
or
cld
loop
arpl
je
shlb
sbb
sahf
dec
repz
inc
daa
popf
fs
cs
out
sub
notl
repnz
popa
pop
test
in
sub
nop
insb
cmp
daa
shl
xchg
aaa
jo
xchg
in
mov
punpcklbw
in
fcomi
mov
push
xor
jle
push
int3
and
outsb
add
xor
fwait
jl
pusha
mov
inc
and
mov
adc
movsb
mov
mov
dec
loope
lret
add
cmp
lock
fistpl
ja
repnz
lahf
xchg
mov
and
push
mov
dec
dec
dec
push
lods
mov
loop
test
sbb
push
pop
das
int
sbbl
sub
shlb
xchg
xchg
cmp
mov
ljmp
lahf
xchg
jmp
mov
xchg
int
xchg
lea
cmovg
add
and
adc
imul
pop
mov
in
fwait
imul
adc
mov
jo
into
leave
xchg
mov
movsb
mov
sbb
jle
int3
xchg
fcompl
mov
les
enter
test
insb
cmp
push
xor
incl
std
jge
scas
popa
imul
inc
int3
insl
js
push
fs
xchg
push
test
xor
cmp
divl
bound
and
inc
and
sbb
and
sbb
xchg
pop
mulb
mov
mov
pop
cltd
inc
pusha
lds
movsl
fstpt
mov
lret
and
addr16
jae
stos
jle
mov
push
jo
int3
xor
cmpsb
mov
mov
xor
mov
cwtl
fcoml
sub
sarl
int3
sar
cmp
xchg
inc
jmp
dec
sbb
out
out
pop
dec
and
mov
in
pop
push
sub
jle
test
pop
push
add
adc
mov
xor
push
inc
mov
and
dec
or
incb
sahf
lret
test
leave
inc
xor
scas
jae
lahf
mov
push
aad
lock
out
pop
mov
push
cmp
in
sbb
xor
imulb
loopne
sub
pop
into
adc
adc
and
push
out
mov
rcll
ja,pt
insl
push
ss
dec
xor
lret
mov
sub
pop
pause
dec
xchg
fwait
adc
mov
inc
push
xchg
inc
jae
aad
and
leave
mov
mov
pushf
xchg
lahf
mull
jno
and
sbb
aad
push
sub
xor
mov
sub
std
pop
or
jl
loopne
les
rorl
mov
popf
pop
int
repnz
arpl
pop
aas
jecxz
inc
xor
mov
add
sub
push
cld
mov
mov
adc
pop
in
inc
fisttps
fistpl
repnz
clc
mov
int
jo
nop
std
ds
pop
dec
ds
sbb
push
jl,pn
addl
rcrb
lret
ja
bound
mov
mov
pop
pop
cwtl
arpl
test
pop
lcall
and
jnp
clc
in
leave
ficomps
ret
in
jo
repz
adc
aas
and
cltd
lea
xchg
pop
push
mov
iret
loop
pop
rcll
dec
test
xor
mov
inc
mov
fdivs
push
aas
ljmp
or
sbb
mov
pop
test
or
movsb
insl
sti
subb
mov
pop
mov
push
loop
lods
pop
jmp
sbb
and
out
jle
adc
push
aad
pop
sbb
hlt
data16
or
xchg
inc
das
push
mov
aad
iret
repz
in
ret
cld
aas
pop
mov
sbb
dec
orl
scas
dec
dec
or
jb
add
push
jmp
adcl
add
addr16
xchg
pop
and
subb
jp
mov
rcrl
inc
mov
loop
pushf
cmp
rcrl
mov
push
add
adc
lea
std
scas
test
or
push
mov
adc
arpl
stos
pop
push
arpl
repz
ficoms
dec
or
pop
and
out
cmc
addr16
cmpsl
sarl
adc
sti
popf
dec
clc
fistpll
dec
mov
inc
and
rcr
sub
out
mov
xor
lret
mov
adc
shll
lea
jns
xchg
adc
test
mov
add
stos
lock
decl
stos
fistpll
in
das
es
inc
sbb
and
inc
in
pop
cmp
pop
test
insl
cld
in
ds
mov
aaa
xchg
sbb
fwait
xorb
lods
mov
adc
cwtl
lea
data16
pop
cmpsb
popa
dec
mov
outsl
inc
mov
push
mov
and
icebp
stc
lret
xlat
cmc
out
loope
and
fsubrs
rcrb
inc
mov
or
adc
mov
mov
fdivrl
and
jne
shll
pop
lods
lret
adc
mov
shrb
lea
adc
jae
jl
or
insl
xorl
and
loopne
popa
cmpsw
mov
aas
popa
mov
notb
fiaddl
fwait
cmp
and
popf
jl
lahf
push
inc
mov
shlb
xor
mov
cmp
fsubrs
mov
and
lcall
jp
arpl
jl
mov
rolb
sarl
jecxz
mov
les
mov
imul
push
rclb
addr16
push
mov
mov
testb
fs
js
pop
pop
dec
cmp
aaa
mov
dec
add
pop
or
pop
jg
inc
push
stc
roll
push
shll
pushf
mov
clc
push
push
call
adc
int
push
and
mov
jge
cmp
flds
aad
lods
cs
in
sub
inc
push
xchg
xor
jmp
jmp
ficomps
cmpsl
sub
fildl
orl
out
xor
xchg
mov
popf
or
leave
sub
aaa
add
sbb
or
xor
into
and
ja
xlat
add
jnp
mov
xchg
inc
lods
js
pop
clc
jmp
xor
mov
xor
in
or
stos
and
or
dec
addl
push
sub
push
pushl
fcmovbe
test
dec
push
mov
shlb
daa
cmpsb
pop
movsl
adc
inc
dec
cmp
or
jo
testb
push
jecxz
jno
ljmp
push
jecxz
push
or
inc
jns
adc
jae
pop
pop
push
lcall
pop
mov
cli
add
adc
sbbb
xor
or
out
dec
pop
xchg
mov
lods
rol
push
cmpsl
dec
sub
mov
fcomps
sub
jmp
cmpsl
in
dec
push
jmp
cmp
addr16
call
mov
leave
xchg
loop
fbld
es
lock
enter
aas
add
cmpsb
sub
cmp
lret
pop
adc
aam
sub
nop
push
mov
test
or
std
out
mov
or
bnd
jo
addr16
jmp
and
cmc
pushf
mov
pusha
fldt
add
jne
nop
icebp
std
popa
stos
lcall
insb
popa
sarb
cwtl
mov
xor
hlt
adcl
xor
aam
jno
xor
jle
ds
push
test
cltd
mov
jbe
add
mov
push
js
loopne
outsb
jns
rorb
daa
mov
out
pop
fmul
jnp
dec
ds
xchg
das
not
stc
int
pop
rcrl
loope
cmp
outsl
in
cmp
push
jns
sub
int
jo
mulb
daa
cmp
ffree
stc
lock
paddusw
jecxz
into
std
fcoms
jle
adc
pop
push
pop
cmpsb
shlb
int3
inc
scas
in
xor
jns
mov
sbb
adc
mov
imul
nop
cmp
std
fs
cmp
cmpsl
test
jns
bound
insl
push
daa
leave
dec
fisttpll
sbb
sub
imul
dec
mov
cmpl
xor
mov
lret
cld
pop
mov
jg
sbb
cmp
mov
sbb
mov
and
insb
out
xchg
push
jmp
scas
adc
mov
jecxz
or
inc
mov
dec
popa
mov
xlat
mov
dec
xor
dec
mov
push
mov
stc
sub
jae
jp
mov
mov
je
push
pop
jle
xchg
jae
in
sub
cltd
mov
mov
xchg
or
inc
adc
testl
aad
cmc
push
test
and
cmpsb
and
popa
fs
cmpsl
mov
out
jnp
push
xchg
add
mov
or
lods
adc
inc
and
mov
or
pop
sub
pop
repz
xchg
das
mov
add
push
lock
fs
ja
add
mov
ret
mov
mov
out
lods
andb
inc
dec
dec
adc
xchg
pop
cmp
imul
cs
call
push
pop
cmpsl
xchg
adc
dec
out
test
loop
or
sbb
dec
mov
repz
vpcmpeqd
mov
fwait
and
pop
push
mov
stc
fldenv
mov
lods
pop
cmp
jmp
call
lods
jns
adc
pop
xchg
out
add
jo
push
push
mov
shll
ss
int3
fidivl
loop
out
lock
mov
nop
push
jae
fisubs
mov
push
adc
xchg
addb
hlt
jecxz
movsb
out
cli
xchg
cli
pushw
mov
mov
in
jne
sti
xor
in
ja
movb
shl
scas
sti
mov
push
inc
into
ja
cmp
sbb
arpl
mov
aas
scas
fwait
ja
rolb
in
fsubl
inc
mov
cld
pop
and
sbb
pop
sbb
arpl
ljmp
pop
and
aad
mov
shlb
js
jg
mov
lret
rol
icebp
mov
dec
mov
rdtsc
outsl
or
clc
mov
imul
shlb
adc
push
in
lea
es
push
sbb
les
mov
das
adc
lods
lret
and
inc
js
in
xchg
mov
nop
pop
lods
nop
or
inc
add
sub
push
out
scas
mov
mov
notb
aad
ja
mov
fwait
add
xor
ds
std
ss
and
pop
mov
xor
es
push
imulb
aam
imul
mov
sub
ret
xor
jmp
arpl
test
lods
addl
stos
sarl
push
mov
aad
jg
mov
arpl
pop
outsb
sbb
sbb
inc
lret
cmp
outsb
int3
sbb
sbb
fstps
inc
ss
mov
negl
and
mov
test
repz
dec
popa
jl
lods
mov
push
mov
iret
fildll
push
add
push
sbb
xchg
sbb
inc
xchg
leave
je
cld
fadds
dec
iret
aas
in
cmpsb
or
mov
fwait
push
fcoml
cmp
ficoml
push
outsb
jbe
sbb
pop
cs
jo
lahf
lcall
lods
pusha
aaa
cmpsb
jae
adc
test
mov
aaa
adc
jae
sub
in
pop
cmp
std
cmpsb
jb
mov
ljmp
adc
mov
mov
adcb
inc
repz
sub
pop
mov
outsb
in
sbb
mov
sbb
mov
or
adc
jns
lret
roll
pop
dec
cld
lret
aam
push
mov
gs
mov
lret
adc
jge
xchg
in
jb
sti
jne
movq
stos
jp
lcall
popf
xchg
and
sub
xor
or
lock
stos
in
mov
movsl
and
stc
dec
jo
mov
sbbl
xchg
inc
xor
xor
push
aaa
test
dec
cmc
inc
cmp
cmp
lds
push
adc
cmpsl
jnp
jg
jno
aas
arpl
or
xchg
pop
shr
cmc
or
rorb
cmp
push
fistps
jae
and
dec
and
sub
icebp
mov
sbb
out
lock
sbb
jge
jns
aam
pextrw
je
into
sbb
sub
std
mov
lea
pop
pop
ljmp
jl
sub
fs
int
shrl
mov
mov
inc
rorl
nop
adc
adc
cli
sub
test
mov
pop
daa
mov
ja
arpl
daa
lods
xor
mov
fwait
cmpsb
mov
test
mov
repz
sbbl
jns
dec
pop
jecxz
pop
in
sbb
jae
ror
pop
data16
sbb
cli
outsb
lods
mov
les
mov
inc
mov
fldl
fcomps
mov
pop
pop
shlb
add
ja
mov
bound
fs
std
jns
mov
pop
roll
pop
mov
dec
xchg
shrb
xlat
cmp
jp
filds
mov
cmpsb
pop
xor
xchg
add
cs
into
loope
loop
daa
das
cs
dec
shlb
push
js
add
xlat
push
ret
fmul
and
fnsave
or
adc
adc
pop
cmp
call
inc
pop
and
or
inc
sahf
add
sub
mov
dec
push
dec
jno
pop
push
pop
xchg
cs
loopne
push
pop
push
jae
jo
ret
sub
adc
idivl
jbe
push
inc
dec
mov
push
xor
and
cli
adc
or
pop
shlb
cmpsl
je
jp
mov
dec
adc
mov
fcompl
mov
add
and
in
in
out
orl
mul
jb
shr
imul
les
mov
cmpsl
imul
mov
ret
xchg
test
movsb
les
fs
out
mov
push
and
jmp
jbe
cwtl
mov
pop
sub
inc
mov
dec
pop
jl
mov
sti
inc
mov
sbb
int
jge
mov
ja
jle
jp
xor
xor
das
push
aad
ds
hlt
stc
test
xor
adc
xchg
mov
movsl
mov
and
sub
lods
push
xchg
lea
inc
pusha
inc
hlt
add
and
rcr
adc
mov
or
dec
push
repz
add
js
dec
std
dec
xchg
mov
test
mov
mov
sbb
addr16
insl
scas
repz
les
in
pop
pop
sbb
nop
and
movsl
sbb
fldl
mov
int3
adc
aaa
jnp
mov
dec
cmc
daa
decb
push
dec
xchg
outsl
shlb
mov
xlat
aaa
xchg
mov
push
sti
jecxz
adc
jp
pop
outsl
jmp
xor
popa
sub
pop
inc
or
cmpsl
out
mov
and
rcll
cltd
scas
out
das
cmp
ffree
repz
pop
out
mov
xor
mov
sub
sti
push
pop
mov
outsb
leave
inc
rcr
repnz
in
dec
sbb
and
jb
es
mull
add
stos
dec
xor
repz
push
mov
dec
mov
sahf
jp
add
stc
ss
cmp
cmp
xor
aaa
std
dec
incl
mov
cmp
int3
cmp
mov
add
fldcw
mov
insb
sub
roll
js
clc
pop
jb
add
mov
push
inc
xor
movsb
pushf
fdivrs
mov
pop
dec
mov
es
adc
ss
jnp
sub
sub
scas
roll
out
sahf
pop
fnsave
pushf
mov
testb
addr16
je
mov
hlt
cmp
mov
sbb
push
cmpsb
lea
cld
jnp
mov
ds
int3
cmp
orb
out
enter
adc
push
sbb
test
mov
js
test
cmp
movl
loopne
in
xlat
sar
mov
push
aas
dec
ficoms
dec
into
mov
mov
cmpsb
jb
cmp
and
xor
sub
pop
cmc
xor
cld
inc
mov
pop
push
lret
std
adc
add
xchg
fsubrl
pop
fstpl
sub
add
imul
push
fucomi
mov
inc
mov
aaa
push
leave
lods
cmp
inc
dec
pop
xchg
sti
cmp
sub
dec
cs
cltd
xchg
adc
cmp
decb
jg
notb
add
push
push
add
out
sub
jns
cwtl
lods
sbb
or
cmc
roll
fcmovbe
xor
in
push
fstp
sub
stos
jg
mov
mov
sub
pop
mov
pop
out
add
test
fisubs
mov
arpl
sub
addr16
hlt
or
movsl
imul
and
adc
mov
jle
xchg
fs
cmp
mov
mov
lds
ss
inc
jns
jae
repz
xor
int3
mov
lahf
stc
cld
adc
adc
std
in
jae
xor
movsl
addb
rclb
pop
add
roll
sar
xor
daa
outsl
rorb
inc
sarb
in
pop
movsl
sub
dec
mov
pop
aam
nop
xor
jle
mov
stc
lods
cmp
enter
pop
and
cmp
mov
cmp
dec
scas
leave
testb
enter
fwait
cmp
lret
insl
movsb
and
add
inc
sbb
outsb
mov
scas
adc
mov
sub
xor
data16
mov
push
shlb
sbb
dec
xorb
dec
dec
cmp
mov
lret
mov
jnp
les
std
cmp
ret
xor
jae
inc
add
add
sub
adc
sub
jle
sarb
or
xchg
mov
add
jno
push
arpl
aaa
mov
clc
and
ret
mov
jno
xchg
fsts
inc
or
sbb
les
mov
inc
test
out
or
mov
add
or
fwait
decl
call
ret
and
aam
js
jb
out
imul
fs
cmc
cmp
xor
cli
lods
dec
cltd
setae
or
pop
jnp
icebp
adc
mov
cmp
fists
mov
or
insl
pop
addr16
or
ret
push
shrl
dec
in
ja
mov
int3
out
mov
or
ja
ds
dec
mov
fwait
cmpsl
or
pop
gs
jo
mov
sbb
pop
xor
fldlg2
scas
pop
xchg
pushf
xchg
xchg
sbb
mov
sbb
adc
out
aaa
or
mov
mov
les
shll
and
es
sub
out
inc
lods
cld
es
jmp
out
rclb
fsubrl
sub
test
test
les
movsb
pushl
mov
insl
shrl
mov
push
mov
into
sti
insb
stc
pop
call
mov
out
call
cvtpi2ps
es
popa
icebp
fildll
lea
into
ret
not
pop
sar
je
jne
or
inc
ljmp
sti
enter
clc
mov
arpl
push
mov
cwtl
xor
mov
sbb
mov
fldl
cli
cwtl
or
mov
stos
push
rcr
xchg
mov
and
pop
testb
andb
pop
fsubl
fwait
imul
push
mov
xor
fdivr
xor
fdivrl
xor
int3
add
out
jle
push
inc
out
xchg
add
jl
cltd
jecxz
sbb
rcl
jg
and
shrl
adc
add
xor
cmp
ds
lods
cmpsl
dec
jae
ret
xchg
dec
jmp
out
push
cmp
sarl
clc
cmp
loopne
cmp
or
push
add
lcall
jp
subb
scas
mov
sbb
dec
bound
inc
or
scas
rorb
mov
shrb
mov
or
push
xor
in
insb
das
inc
and
and
xchg
add
sub
nop
imul
cmpsb
out
jle
mov
jnp
mov
je
add
popl
sbb
xchg
push
mov
lahf
cmp
pop
push
xchg
into
sbb
stos
or
into
addl
out
mov
or
jle
rcrb
cmpsl
testl
in
pop
mov
test
fimull
pop
bound
int
xchg
shl
mul
outsl
fildll
jge
xchg
cwtl
shll
sub
lods
addr16
sbb
cwtl
fisttps
jb
mov
repz
mov
icebp
push
jns
mov
enter
push
jbe
cmp
xchg
mov
or
push
fistps
loope
jbe
and
cmc
mov
cmp
cltd
insl
sbb
test
xchg
adc
pop
push
mov
pop
pusha
cmp
in
push
sbb
lret
int
pop
mov
and
add
adc
loopne
cmp
mov
sub
iret
scas
sbb
insl
sub
jnp
inc
mov
imul
das
insb
ja
mov
add
and
lret
ret
lea
inc
clc
mov
call
movsl
es
xchg
pop
sub
or
hlt
push
jnp
test
ljmp
cwtl
push
jbe
sahf
nop
pop
xor
push
and
pop
push
ret
inc
ficoms
pop
lahf
and
hlt
adc
lcall
dec
and
mov
inc
push
xlat
cmpsb
call
or
adc
xor
jge
push
jg
imul
fwait
xchg
push
pop
mov
push
mov
push
xchg
clc
lahf
fs
mov
lock
subl
imul
jae
sub
lods
mov
push
lods
pop
rolb
pop
ret
jo
js
adc
pop
insl
nop
idivb
dec
lods
push
mov
add
mov
ja
push
lods
dec
lods
stos
shl
aaa
pop
outsb
jp
ja
mov
cmp
lret
lods
pop
xchg
pop
cltd
fsubrp
leave
pop
out
andb
lret
js
mov
in
sbb
decl
movb
mov
out
enter
std
popf
dec
ret
sbb
mov
ljmp
xchg
cmp
ds
insl
stos
outsl
mov
jecxz
ret
or
out
imul
pop
pop
aad
mov
jl
jecxz
sbb
and
push
and
out
pop
inc
xchg
lods
sti
xor
push
add
push
and
add
sti
pop
iret
imul
out
ret
push
lcall
gs
xor
inc
cltd
imul
jecxz
xchg
or
sti
lret
aad
lods
mov
jne
mov
repz
stos
cmp
adc
adc
lock
jge
inc
roll
add
sbb
mov
mov
pop
loope
add
jae
cmpsl
inc
out
inc
jo
mov
and
xchg
lret
jecxz
pop
scas
lret
roll
pusha
jle
fsubrl
lret
jge
mov
cmpsl
or
mov
xor
js
stos
and
jecxz
mov
cmpsl
pop
leave
lods
popf
shr
jecxz
call
in
lcall
jb
inc
js
cli
std
rcrl
imul
adc
fnstenv
mov
scas
shrl
nop
xchg
pop
daa
mov
mov
mov
xchg
and
pop
fwait
add
add
push
sbb
ja
xor
mov
dec
iret
ret
xor
les
jnp
mov
stc
stos
cmpsb
lds
inc
sub
mov
sbb
adc
pop
dec
aaa
cld
adc
jne
es
lods
fwait
dec
sbb
sbb
aad
or
pop
jns
sbb
in
jp
sbb
cmp
stos
lret
lock
sbb
pop
mov
xchg
les
mov
pop
je
and
cltd
bnd
outsb
inc
dec
hlt
xor
test
or
and
out
xor
imul
push
jp
xchg
xchg
pop
addr16
scas
out
jecxz
inc
xor
inc
lcall
ficoms
sub
and
aad
pop
fwait
cmp
popf
cmpsl
stc
or
jo
sub
lret
xor
ja
inc
stos
push
mov
divb
in
and
filds
mov
dec
aas
xor
push
ss
dec
out
xchg
inc
xchg
xor
xchg
es
and
iret
pop
repnz
adc
insl
fldenv
xchg
mov
jge
add
push
loop
jmp
in
push
push
push
rclb
in
in
xor
int3
gs
sbb
fldenv
adc
pop
loop
xor
adc
mov
pop
xchg
pop
lock
cmp
xor
xor
pushf
daa
cmp
arpl
ficoms
into
shlb
push
sbbl
jmp
mov
pop
sbb
push
and
ds
cmpb
stos
add
pop
push
inc
mov
lods
cs
inc
adc
pop
xchg
dec
pop
jmp
sbb
pop
jb
cmp
int3
das
pop
sub
das
dec
outsb
cmp
and
movsb
push
dec
daa
popa
jb
mov
cmpsl
mov
iret
mov
imul
sub
mov
inc
data16
cmp
adc
test
pop
push
in
cmp
mov
fsubr
std
push
rcll
and
rclb
cld
dec
sti
cmc
jo
sub
mov
pop
cs
jno
das
inc
sub
inc
mov
jmp
cmp
ja
sbb
dec
add
adc
mov
mov
movsb
inc
cmp
clc
add
mov
sbb
stc
push
xor
mov
dec
mov
mov
add
sub
movsb
stos
jle
sahf
push
shll
stc
mov
lock
xor
dec
dec
inc
stos
dec
cmp
push
pusha
mov
imul
mov
push
stos
mov
inc
adc
dec
mov
inc
inc
or
scas
out
sub
int
mov
orl
idiv
pop
mov
xchg
push
add
jns
pop
jmp
lods
push
loop
in
test
pop
and
pop
xchg
out
outsl
pop
out
in
jecxz
adcl
sub
xchg
scas
add
cmpsb
push
sub
jmp
imul
addr16
mov
incb
shrl
in
scas
pop
pop
cli
inc
fdiv
mov
out
aad
mov
imul
rcl
pop
shlb
cmc
and
jg
int
insl
lcall
or
xor
call
cli
fs
xor
jge
outsb
lahf
cmpsl
dec
mov
idiv
mov
jnp
push
xor
dec
leave
sub
pop
fisubl
subb
stos
xlat
aas
xchg
sbb
hlt
xor
ljmp
dec
ss
cmpb
ja
int3
icebp
pop
mov
pop
in
mov
test
mov
out
rorl
aam
sub
xchg
or
add
out
inc
fdivr
rcrb
rcl
pop
subl
gs
mov
adc
cmp
add
stos
sahf
outsb
paddq
repz
shl
test
jns
or
push
sub
jle
mov
mov
mov
mov
inc
push
test
jg
mov
scas
fmul
bound
sbb
ljmp
push
mov
aas
xchg
mov
and
or
rcl
add
and
lds
mov
mov
aas
xchg
mov
loop
imul
adc
dec
jecxz
and
fadds
sbb
scas
outsb
push
stos
add
cmp
movsl
jae
into
leave
push
push
pop
dec
nop
arpl
out
clc
and
int3
adc
xlat
or
scas
dec
pop
sub
lret
ss
addr16
in
cmp
push
leave
cmpsb
sbb
outsb
lods
cmp
sbb
jg
inc
push
push
mov
jg
inc
mov
insl
lods
std
test
pusha
push
lods
adc
lock
cs
pop
mov
lods
xor
or
pop
cmp
dec
leave
cmpsb
push
cmc
outsb
dec
scas
rorb
sub
cmpsl
insb
fistpll
sub
in
and
mov
add
popa
dec
xchg
psubw
mov
hlt
push
xorb
add
sub
mov
dec
cwtl
inc
js
lods
scas
lcall
dec
push
jle
jp
ds
cli
lret
dec
mov
add
xor
mov
pop
mov
and
loopne
pushf
xchg
shlb
add
adc
xor
adc
mov
jg
and
into
push
aam
das
xchg
lods
lcall
outsb
add
adc
mov
pop
popf
daa
pop
sahf
push
gs
and
aad
enter
ds
out
aaa
imul
das
mov
xlat
sti
pop
adc
fcomp
sbbl
and
jp
xchg
shl
pop
loop
jno
cmp
outsl
adcl
sbb
call
jne
fdiv
mov
add
lret
cwtl
ret
push
dec
cmp
pop
mov
lcall
adc
jge
mov
inc
andb
jnp
jp
mov
and
loope
dec
push
inc
dec
jne
inc
pop
dec
sahf
jmp
or
jg
lcall
inc
popf
daa
scas
adc
enter
dec
sub
and
loopne
movsb
pop
add
mov
mov
sahf
cmp
fst
jb
fiaddl
push
add
or
jb
pushf
repz
arpl
push
stc
push
inc
stos
sbb
sub
incb
dec
aas
pop
push
push
ja
dec
cltd
lahf
test
sub
jns
dec
pop
and
in
sbb
popa
insl
mov
sbb
mov
sub
cmp
mov
loop
rolb
icebp
sbb
inc
xor
pop
std
push
push
or
xchg
nop
lock
or
and
scas
in
pop
and
jp
push
mov
inc
lock
mov
aam
adc
jg
notb
mov
data16
ret
xor
js
mov
into
cmp
imul
dec
imul
ds
mov
cwtl
adcb
rep
cmpsb
in
jecxz
sbb
in
add
inc
rcrl
xchg
mov
push
jmp
sbb
inc
sti
mov
add
aam
or
and
popa
jne
pusha
mov
inc
fsubl
rorl
sub
rorl
sub
xor
aaa
jne
mov
js
rcrl
push
popf
mov
gs
lahf
mov
sub
sti
test
ss
es
pop
je
outsl
mov
push
outsb
adc
testl
daa
add
jne
sbb
jmp
and
mov
popa
pop
add
jno
ja
in
and
into
mov
xchg
movl
sbb
hlt
dec
dec
mov
insl
aad
add
mov
out
mov
pop
fnstenv
jecxz
movl
push
fstl
pop
and
push
das
data16
xor
rcrb
aam
cld
out
out
hlt
lds
jge
aas
inc
shlb
fiadds
outsl
lods
into
inc
loop
mov
enter
ret
push
fisubrs
jae
inc
jno
call
or
out
cmp
adcb
push
in
push
insl
inc
cwtl
into
mov
adc
jp
enter
loopne
push
rcll
pop
xchg
call
jno
fisubrl
pop
jns
and
out
test
or
jae
pop
lock
imul
push
xchg
xchg
sbb
sub
mov
inc
xor
pop
xchg
lret
xor
insl
xlat
pop
jne
xchg
pop
mov
cmc
jne
mov
and
push
and
andb
bnd
cli
repz
mov
jmp
or
xor
decb
icebp
adc
add
fistpl
movsl
xchg
jne
das
movsb
bound
xchg
pop
sarl
dec
cmpsb
into
pop
and
and
rdtsc
push
imul
stc
and
mov
xor
into
bnd
adc
orl
jno
ret
pop
fisttpl
mov
insl
inc
push
add
in
jae
mov
push
pop
es
in
icebp
sarb
repnz
push
lock
mov
cltd
js
xor
sub
sti
pusha
test
call
adc
int3
pop
int
jae,pn
or
stos
sub
inc
aas
stos
cli
pop
outsl
lcall
sbb
das
push
iret
pop
call
sub
dec
lret
mov
xchg
notl
enter
add
cld
or
loope
adc
dec
cmp
dec
push
int3
mov
xor
mov
add
xor
in
jb
pop
mov
dec
adc
lods
dec
cmp
fwait
ss
dec
leave
jne
jge
xchg
test
sub
jmp
sub
pop
bound
fs
push
clc
dec
in
ljmp
dec
jno
test
sub
mov
out
pusha
int3
adc
test
jbe
push
iret
sbb
xlat
setae
faddl
arpl
xchg
add
in
sbb
repnz
sti
in
mov
sti
add
cmp
pop
aas
jae
ret
xor
jp
jbe
jge
and
add
cmp
sbb
dec
fisubrs
imul
test
pop
pop
sbb
mov
and
sbbl
and
xlat
or
inc
arpl
gs
inc
xor
movsb
inc
jns
aaa
mov
orb
jle
lret
aam
shlb
test
stos
push
mov
das
pop
adc
mov
add
xor
mov
jb
mov
lods
mov
lcall
in
repnz
ja
int3
rcrl
shll
js
dec
adc
rol
aam
pop
pop
lea
adc
xlat
dec
andl
lcall
inc
add
xor
xchg
xchg
fidivrs
lret
push
ss
pop
xchg
cmpsb
fmulp
pop
fsub
mov
and
jmp
or
dec
jp
cwtl
mov
fstl
sub
daa
popf
cmp
ds
xor
inc
mov
roll
ret
enter
sbb
mov
sub
mov
bswap
movsl
dec
or
fstpl
out
cs
sub
sbb
mov
mov
je
sbb
cmp
test
cmpsb
push
xor
gs
push
cmp
out
xchg
cmpsl
pop
push
add
dec
dec
mov
mov
mov
sub
lcall
gs
xchg
cmpsb
mov
mov
in
jp
sbb
push
int
cmp
ficomps
dec
jno
into
stos
lahf
pop
into
scas
rorl
mov
sub
lret
mov
push
testl
gs
or
push
pop
mov
pushl
repnz
pop
fs
test
mov
dec
repz
lret
ss
insl
das
mov
fisttpl
loope
add
xchg
and
repz
stos
xor
enter
sbb
ds
xsha256
cmpsb
aad
enter
out
nop
fs
repz
insl
lret
movsb
movnti
enter
pop
inc
inc
or
jg
call
and
pop
dec
xlat
inc
push
mov
mov
jle
addb
mov
sbb
mov
push
outsb
lret
or
leave
ss
pop
stos
jbe
aam
icebp
popa
leave
mov
cs
mov
fsubl
sti
inc
adc
bound
testb
pop
cmp
fbstp
call
aaa
out
sqrtps
fsubr
push
mov
cmp
or
mov
cltd
movsl
lahf
dec
adc
test
loop
js
xchg
std
cmpsl
data16
jne,pt
repz
jae,pt
mov
push
pop
sub
lahf
push
mov
and
adc
sbb
mov
mov
dec
push
aas
pop
xchg
movsl
imul
jg
in
jns
std
imul
loopne
je
cs
cmc
push
notb
fstl
ret
mov
jp
test
jmp
and
or
jle
stos
jg
sbb
pop
lock
lret
lea
jg
stos
mov
lock
sub
loopne
iret
pop
adc
inc
xchg
and
push
pop
add
insl
leave
mov
ljmp
into
shlb
pop
stos
mov
push
mov
filds
ret
psllq
sub
cmpsb
cmpsl
inc
sub
cmp
sar
test
les
mov
mov
es
leave
popf
call
mov
sbb
dec
and
test
and
add
mov
es
cmp
inc
pop
and
and
mov
fimuls
xlat
xchg
lock
and
jp
cwtl
sub
ret
jbe
shr
xchg
adc
mov
dec
call
imul
not
sub
dec
mov
sub
push
dec
subl
cmp
lock
or
or
xor
enter
inc
inc
push
dec
mov
mov
cmp
cltd
xlat
sti
push
lock
sub
ficoms
in
jecxz
into
cld
cli
jb
dec
sbb
aaa
cmp
xchg
out
pop
mov
sub
lea
jge
sahf
lret
add
push
pusha
stos
sub
push
aam
adc
cmp
xlat
loop
int3
iret
push
push
incl
cwtl
push
or
aad
mov
push
mov
inc
movsb
push
sub
fidivl
push
and
jmp
cmp
into
repnz
sub
jns
inc
fistpl
dec
jge
add
out
sti
dec
push
pop
les
insb
mov
push
ja
scas
sub
and
dec
inc
xchg
aaa
lea
dec
xlat
mov
xchg
mov
push
fstpl
mov
mov
dec
or
bound
jae
cld
pop
ret
dec
inc
dec
add
sbb
push
adc
adc
aaa
insl
xor
cli
and
cmp
int
pop
mov
ds
and
jns
stc
out
cltd
ret
add
mulb
lcall
scas
and
cmp
lds
pop
stc
shl
loope
stc
fisttpll
lret
mov
sbb
cmc
xor
mov
cmpsb
outsb
mov
scas
jb
das
pop
push
out
sahf
loopne
adc
mov
mov
pop
cwtl
push
ds
inc
push
popa
repz
pop
scas
pushf
mov
addr16
mov
and
push
cmpsb
shlb
mov
jbe
loop
arpl
mov
dec
hlt
pop
adc
int
call
dec
cmp
jge
leave
cmpl
insl
les
or
or
aaa
into
das
jl
es
and
xchg
loop
mov
icebp
ds
shrb
pop
lahf
fbstp
add
cmpsl
xchg
xor
dec
pop
loopne
jle
dec
dec
mov
add
int
shl
adc
add
or
and
cmpsb
xor
sub
adcb
add
scas
test
loope
int3
jle
add
mov
aas
push
ja
push
mov
jecxz
push
pop
adc
sbb
nop
idivl
push
in
std
dec
push
ret
xrelease
sbb
mov
inc
sahf
push
ret
pop
lods
loopne
pop
mov
cld
push
sbb
inc
add
aas
lcall
loop
les
or
mov
jp
in
data16
xor
out
jecxz
sbb
adc
xchg
adc
push
sub
sbb
in
test
mov
int3
mov
int
lret
aam
outsb
push
inc
std
mov
or
and
in
add
insl
iret
sub
push
lock
push
xchg
gs
inc
or
out
cmp
pop
xlat
push
jae
add
adc
pop
lret
jp
mov
xchg
stos
sti
ja
xchg
inc
sti
inc
repz
dec
ret
add
mov
lcall
mov
push
xor
fcoms
inc
aad
mov
sarb
jb
mov
icebp
ja
lock
push
shrb
inc
inc
push
fwait
stos
dec
mov
cmpsb
push
pushf
mov
xor
or
out
lret
adc
pop
xchg
mov
adc
in
or
test
or
fdivrp
xchg
mov
cmp
pop
or
sbb
cmpsb
inc
mov
jbe
repz
out
mov
pop
dec
push
stc
fmuls
addr16
fdivs
dec
sub
in
push
push
mov
jmp
mov
dec
sub
pushf
jp
push
shr
lods
fcmovnu
sub
jecxz
cwtl
fs
jl
xlat
imul
inc
jo
in
bound
sbb
aam
ret
or
cld
mov
or
mov
imul
inc
xor
lea
sarl
push
movl
movsb
push
mov
mov
mov
xchg
or
out
push
lods
push
in
loop
les
insb
xchg
lock
roll
sbb
in
cli
add
cmpl
or
aas
mov
ss
decl
and
test
pushf
xchg
jge
ds
adc
ret
jl
repz
int
aam
shl
sub
mov
jae
fdivs
orb
lock
and
mov
mov
imul
add
int
push
push
jle
pop
in
or
icebp
mov
jp
push
andl
stc
pop
ret
inc
nop
sub
xchg
stos
mov
cmp
cmp
into
dec
cld
add
cltd
push
bound
mov
pop
mov
dec
dec
sub
shl
dec
pop
outsb
mov
ret
orl
cmpsb
sub
fildll
mov
xchg
pop
bound
arpl
sbb
and
inc
jo
xchg
or
and
in
adc
mov
stos
jmp
mov
adc
xchg
imul
ss
iret
outsl
shrb
lret
or
mov
jne
pop
cmp
paddsb
xchg
subl
lret
lods
push
dec
repz
jns
aas
daa
sbb
f2xm1
add
mov
mov
xchg
inc
leave
sbb
jge
push
dec
rcrl
int
mov
in
cmpl
xor
fbld
add
out
jl
mov
mov
or
roll
inc
jmp
jbe
ret
pushf
xor
mov
sahf
fcom
stos
repnz
cmp
cmc
dec
sbb
nop
dec
adc
or
mov
sub
popf
cs
push
jge
cmp
ret
aaa
cld
sub
dec
out
ror
cmp
fisubrs
out
lds
add
sbb
je
xchg
and
mov
adc
mov
mov
outsb
fisubrl
add
cmc
fucomi
fwait
arpl
xor
bswap
inc
sub
sbb
xor
pop
add
std
pop
cwtl
mov
lock
addr16
loopne
imul
jb
jp
jle
cmp
shlb
pop
adc
ljmp
clc
dec
or
popa
test
aad
push
cmpsl
xchg
dec
rcrl
dec
pop
jmp
jmp
dec
or
jb
jae
adc
and
jo
out
stos
rol
aas
and
fidivrs
xchg
dec
add
stos
mov
mov
pop
xor
mov
lock
mov
movsl
or
dec
inc
imul
inc
mov
mov
add
cltd
testl
jne
mov
leave
dec
test
test
cmp
aaa
loopne
insb
mov
push
aaa
js
imul
je
andl
lret
dec
dec
jbe
jecxz
rorl
cli
jnp
test
lea
add
adc
imul
lods
shll
icebp
clc
icebp
dec
inc
jnp
mov
cwtl
faddl
mulb
add
pcmpgtb
shr
aas
sbb
fildl
push
xchg
ret
adc
xor
gs
lods
imul
and
ss
aas
addr16
pop
mov
push
js
jmp
ljmp
jge
fnstcw
negb
push
ret
shrl
mov
or
out
xchg
sarb
jg
push
movsb
dec
aas
xor
arpl
inc
jnp
js
jp
sub
fbstp
pushf
fucomi
lret
movsb
nop
lea
cmp
daa
cmp
fidivrl
dec
push
cld
xchg
shll
call
jns
lock
lds
xchg
sbb
add
xchg
popa
xlat
mov
loop
cmp
lret
out
push
fwait
mov
push
dec
mov
dec
pushf
jae
data16
mov
inc
inc
pop
sbb
andl
mov
mov
stc
dec
mov
std
iret
push
sbb
ss
hlt
sbb
xor
dec
lock
cmp
imul
loop
sbbb
pop
adc
add
xchg
inc
in
pop
cltd
xor
mov
push
repnz
inc
jmp
int3
add
cmp
out
jbe
lock
aas
cmp
in
fdivr
sbb
add
lea
push
mov
adc
outsb
mov
rclb
fistl
jl
and
jge
lret
xor
and
xlat
bound
ljmp
sarb
lret
imul
xchg
cmp
xchg
aaa
fidivrl
jo
movsl
ljmp
mov
sbb
mov
aam
fidivrl
ss
es
pop
inc
aas
rorl
bswap
ficoms
aas
fmuls
sub
fstp
imul
cmpsl
dec
jge
mov
inc
jmp
es
repz
jp
lcall
cmp
push
jne
stos
out
adcb
jecxz
or
cmp
xlat
sbbl
jne
push
lds
aad
cmp
cmpsl
mov
mov
iret
mov
dec
or
cmpsb
pushf
call
push
sbb
nop
xor
mov
add
pop
push
mov
movsl
sbb
incl
jle
repz
jmp
jp
shl
outsb
adc
sbb
push
loopne
mov
mov
leave
movsb
push
mov
mov
mov
adc
or
sub
xor
into
jns
add
rolb
les
cmp
jle
lods
adc
inc
test
out
pop
iret
mov
hlt
cmp
mov
xor
rcrl
divb
repnz
cltd
adc
or
dec
add
scas
in
repnz
out
repz
xchg
jecxz
dec
cwtl
pop
cmp
adcb
aad
pop
loopne
dec
lock
mov
outsl
mov
adc
jnp
movsb
xor
fnstcw
bound
jb
ja
cmc
popa
mov
pop
dec
lret
lahf
adc
xchg
scas
lock
ficomps
dec
inc
adc
in
push
ja
xor
andl
lock
ds
add
cs
lahf
ja
mov
xor
mov
hlt
mov
ficoml
enter
outsl
pusha
data16
loopne
or
jle
dec
inc
nop
sub
lret
sbbb
lods
mov
ljmp
iret
mov
sub
mov
inc
ja
ja
lret
lahf
sbb
add
or
cmpsl
cs
loop
ror
cli
aam
sahf
cwtl
int
push
fstpt
daa
xor
adc
sub
adc
cs
push
mov
dec
fstps
cli
mov
test
movsb
ss
adc
sti
mov
aam
scas
scas
rclb
movsl
adc
ljmp
idivl
jo
push
lret
insl
and
andb
xchg
fsubrl
jbe
and
jne
cmpsl
push
mov
mov
jns
adc
push
mov
gs
jne
push
pop
cltd
fistl
and
pop
scas
dec
fcmovb
inc
sub
js
ljmp
sti
mov
loope
push
fildll
cmc
pop
cmp
scas
lret
mov
leave
and
jmp
mov
loop
lock
push
cmpsl
scas
mov
jmp
or
std
rorl
mov
mov
cmpsb
adcb
add
test
shll
jmp
pop
cmp
cmp
mov
ss
sbb
xlat
rorl
jecxz
out
repnz
and
ficomps
cmpb
xor
sti
mov
mov
mov
jmp
fstpt
dec
xor
inc
sbb
xor
adc
jo
inc
imull
adc
mov
and
loop
in
rcl
out
dec
shrb
and
jae
in
movsb
mov
stc
rclb
fisttpll
mov
push
mov
test
xchg
leave
pusha
add
pop
insb
push
addr16
pop
in
push
xor
sarb
xchg
ja
jns
sub
adc
fildll
pop
mov
inc
cmp
mov
outsb
jmp
daa
out
sbb
mov
fdivs
ds
inc
loopne
mov
jo
out
mov
cmovb
stos
adc
mov
inc
movsb
push
sbb
cld
sbbl
cltd
inc
sbb
ret
in
cmp
std
gs
push
dec
shlb
loope
or
vmwrite
mov
add
xchg
push
push
shll
lods
sbb
adc
in
pop
or
outsl
pop
leave
dec
out
stos
sub
push
jmp
aaa
ja
dec
icebp
xchg
insl
add
lods
fcoml
aam
int3
orl
add
cmp
popf
scas
xchg
jl
dec
adc
add
dec
mov
int3
mov
movsl
jno
sar
add
add
scas
or
insl
jno
cmovle
or
fidivrl
jbe
jmp
jg
inc
pop
mov
cmpsl
xor
call
dec
out
sahf
push
mov
adc
jns
int3
hlt
repnz
xchg
adc
xchg
inc
mov
pop
std
mov
loop
cmp
xchg
lds
sbb
xchg
mov
or
leave
cmpsb
mov
cs
dec
mov
das
dec
movsl
push
push
sub
inc
fcoml
or
call
mov
mov
xor
push
mov
jle
add
addb
ret
ss
loope
test
add
sbb
pop
dec
cmpsb
xchg
call
sbb
movsb
repnz
sbb
repz
js
jae
mov
daa
dec
xchg
outsl
jmp
das
mov
push
pushf
lahf
out
test
dec
aas
inc
xchg
cmc
adc
mov
mov
aad
lea
inc
cwtl
mov
aam
out
addr16
imul
mov
and
cmpsl
scas
dec
je
xchg
push
insl
fwait
jmp
add
out
jbe
or
insb
enter
cmc
inc
imul
repnz
sbb
scas
mov
and
mov
dec
jp
cmp
mov
out
push
push
mov
ret
lahf
cmp
bound
aas
sbb
cmc
cmp
fidivrs
xchg
xchg
cmpsl
shll
inc
and
repz
or
mov
je
sub
sarl
cld
mov
lahf
cld
adc
xorl
sub
sbb
jns
and
and
mov
xchg
aam
stos
sub
pop
outsb
dec
lock
pop
cltd
lret
and
in
xchg
push
cmp
jae
pop
jb
pop
sbbl
lea
add
and
test
and
in
adc
push
adc
std
repz
dec
and
shll
pushf
xchg
loope
xchg
sbbb
sub
dec
leave
mov
jg
cmp
sbb
sbb
shrl
lret
pop
lahf
mov
mov
test
rorl
mov
push
sbb
or
xchg
mov
sbb
pop
in
out
or
aas
into
mov
sub
outsl
or
std
into
fcompl
push
imul
rolb
call
nop
test
cmpsl
inc
mov
aam
addr16
cmp
imul
lods
mov
jnp
xchg
outsb
inc
adc
xchg
and
xlat
popf
mov
movsl
pop
mov
lods
inc
xchg
jo
lock
lcall
test
lods
out
lock
rcrl
and
xchg
repz
ret
push
mov
test
xchg
in
outsl
out
lods
and
ror
sbb
arpl
cld
mov
push
movsl
insl
clc
sub
inc
push
cld
fistpl
test
aaa
psubsw
pop
mov
jmp
call
inc
in
jg
pop
mov
lahf
xor
mov
int
mov
jle
into
mov
mov
ret
aad
ds
or
pop
andb
popf
mov
cltd
xchg
adc
ficompl
xor
jecxz
imul
adc
data16
xlat
sar
cmp
add
popa
call
sub
adc
ret
pop
push
test
sahf
and
das
test
iret
adc
fsubrl
ret
inc
cmpsl
xor
cmp
out
xor
fstp
sbb
sub
cmp
sarl
jnp
in
scas
dec
mov
sub
call
aam
repz
mov
dec
push
repz
fimuls
outsb
andl
pop
sti
movsl
cs
jp
mov
xor
std
sub
push
pop
add
lods
sub
cmpsb
jl
xor
enter
rcrl
xchg
xchg
jmp
push
leave
lock
cmpsb
mov
mov
sub
and
adc
addr16
xchg
add
xor
inc
dec
sbb
fsubl
lea
popf
or
dec
in
andl
cmc
pushf
cmp
xor
mov
xchg
jo
fs
es
xchg
popa
ffreep
xor
ds
xchg
pop
or
push
cmp
ret
jl
sbbl
aad
push
jl
test
mov
push
adcl
dec
push
and
pop
orb
adc
sub
dec
and
data16
adc
mov
inc
jno
mov
jns
repz
push
shr
dec
in
mov
ffree
add
call
aaa
mov
cmp
mov
sbb
fmull
movsl
imull
pusha
lret
movsb
xlat
cld
scas
pop
data16
test
imul
cmpsb
pop
push
ja
mul
int
test
call
xor
sub
fstpt
sub
fwait
push
in
lret
aas
icebp
lock
push
or
add
sbb
add
out
inc
mov
loopne
out
iret
lahf
loop
ss
adc
aad
enter
cmp
out
xchg
cmpl
iret
pushf
popf
lock
inc
insb
cmp
daa
mov
aam
pop
inc
or
adc
xor
fmull
out
mov
das
xor
cmp
es
pop
fsubr
lods
sub
mov
fwait
pushf
test
mov
aas
shlb
dec
add
daa
ret
out
fwait
xchg
cli
xchg
mov
aaa
lods
pop
pop
lret
or
lcall
sub
out
sbb
outsb
js,pt
cld
jo
mov
xchg
mov
mov
xor
add
cwtl
sub
fsubs
repz
pushf
stos
xchg
jae
xor
push
bound
mov
and
ja
jp
jp
mov
push
jns
and
lret
filds
xor
insb
hlt
sahf
shrb
enter
push
popf
jge
test
ljmp
or
mov
push
cmp
inc
data16
lods
inc
inc
cmp
cmp
or
cmp
add
cmp
or
jmp
in
push
jp
push
sub
and
dec
fsts
shrl
sub
sub
adc
or
test
xchg
fimull
pop
sarb
cmp
nop
adc
outsb
into
stos
inc
lea
iret
xor
inc
mov
test
popa
mov
dec
out
lods
aas
ficomps
adc
lods
nop
xor
call
push
enter
xchg
dec
lret
stos
ds
push
popf
cmp
xor
cwtl
inc
mov
clc
dec
fucom
mov
shlb
fisttps
cwtl
or
inc
cli
xor
sarb
mov
mov
sarb
cmp
mov
scas
add
sub
mov
mov
movsl
fiaddl
pop
rol
and
sub
lods
xchg
ljmp
popf
push
in
and
out
mov
loopne
or
pusha
xchg
inc
jecxz
dec
xchg
add
push
sbbl
sbb
sub
xor
pop
sti
test
sub
dec
add
das
iret
repz
icebp
sub
aam
cs
push
xor
mov
pushf
scas
fwait
pop
in
push
mov
and
xchg
rclb
ret
stos
sbb
arpl
test
mov
test
pusha
int
out
pop
and
jle
test
loopne
xor
mov
outsl
mov
and
xor
test
in
jmp
jnp
lcall
js
movsb
xchg
adc
dec
mov
scas
stc
popf
cmpb
incb
add
inc
jmp
int
popf
insl
ret
xor
dec
loop
and
adc
adc
jo
mulb
or
xchg
ljmp
jno
fnstenv
data16
rclb
inc
jo
popl
fcoml
cmp
adc
sbb
and
roll
ret
and
cmp
push
or
outsb
aaa
lret
repnz
xlat
mov
jg
dec
mov
add
loope
jg
add
add
xchg
pop
mov
daa
xchg
jb
repnz
adc
icebp
fldt
jp
insl
adcb
add
mov
cmp
insb
psubsb
add
pop
mov
in
in
inc
or
outsl
jp
and
xchg
shll
lods
mov
dec
nop
ret
add
jg,pt
int3
inc
adc
popa
mov
mov
loope
aad
leave
clc
lret
xor
xchg
inc
mov
stos
adc
stos
ja
roll
sub
push
or
jo
dec
std
rcl
push
es
lret
jle
in
pop
test
mov
lahf
stos
push
jae
or
lds
push
jp
std
fsub
loope
push
mov
lahf
shl
insl
clc
and
xor
test
ret
push
mov
inc
aam
je
rolb
out
cmp
adc
mov
js
fildl
bound
jle
fs
dec
mov
adc
xchg
sub
call
cmp
jo
inc
sbb
dec
pop
and
lea
pop
mov
mov
jne
test
in
movsb
xchg
mov
xchg
sub
and
outsb
cs
arpl
cmpsl
scas
sub
mov
sbb
push
popf
js
sbb
inc
stc
inc
sbb
xchg
int
int3
adc
lods
cli
pop
lahf
rol
loopne
push
scas
mov
pop
xlat
mov
enter
cmpsl
or
push
cs
and
jg
inc
or
or
sub
mov
das
jecxz
jg
popf
punpcklwd
inc
popa
fwait
lahf
jecxz
scas
lods
mov
sbb
mov
scas
sub
dec
into
ret
cmc
cltd
mov
out
pop
mov
mov
dec
jle
cltd
xor
out
add
lret
mov
mov
or
pop
push
imul
inc
jecxz
jg
adcl
jmp
inc
cmpsl
sbb
xor
adc
pusha
push
inc
clc
add
loopne
dec
aaa
xchg
jbe
adc
sub
sub
leave
cmc
mov
scas
repnz
rcll
mov
out
cli
mov
loope
popf
cmp
mov
lods
push
ss
orl
mov
or
loopne
xchg
mov
fsubrl
stc
push
push
imul
cmp
stc
add
loope
cmp
cli
into
pop
or
scas
movsb
mov
lea
xchg
icebp
scas
out
movsl
push
in
add
mov
and
jp
cmp
adc
dec
notl
xor
jns
push
sbb
and
jno
sbb
out
pop
mov
daa
cmp
pop
push
xchg
xchg
mov
scas
ror
aam
das
mov
mov
rcl
mov
jmp
arpl
divl
lret
and
pop
scas
adc
mov
out
xchg
cld
pop
loopne
stos
ljmp
rcrb
mov
enter
mov
addl
in
xor
jg
push
das
arpl
jmp
sbb
out
call
iret
es
inc
lret
out
xorb
inc
out
push
ljmp
jp
leave
or
ja
jle
ds
daa
movsb
jae
pop
push
xchg
fdivrs
mov
cmp
lea
mov
pop
or
push
pushf
out
sbb
jnp
fs
xchg
jmp
fxch
or
out
or
scas
cltd
sbb
cwtl
sub
in
add
ljmp
clc
es
pushf
lret
sbb
sbb
push
dec
aam
push
loope
shr
aam
sub
mov
xchg
bound
lds
ljmp
lods
fucompp
lods
out
cltd
push
std
mov
les
jmp
xchg
jg
sbb
jecxz
mov
pop
xchg
lret
pop
repz
aaa
stos
sub
inc
clc
insl
add
cld
pusha
out
sub
fcmove
add
mov
mov
jmp
cmp
lds
stos
pop
xor
inc
je
mov
mov
xchg
push
fwait
test
pop
addr16
and
mov
jo
popa
aad
dec
sbbl
in
js
jns
ss
push
imul
jo
dec
jp
mov
lcall
lahf
fdivl
adc
push
lock
xchg
mov
jge
push
mov
and
push
jbe
mov
adc
jne
adc
jae
pop
stc
out
addr16
sub
stos
xchg
mov
or
jo
out
in
xchg
hlt
xor
ret
push
mov
mov
xchg
sub
daa
lock
sahf
pop
inc
mov
mov
les
or
testl
push
mov
push
cmp
out
xor
mov
gs
and
aaa
stos
dec
cltd
mov
daa
and
dec
adc
or
lret
es
add
xor
test
push
data16
mov
repz
cld
fistl
and
pop
xlat
test
out
mov
or
and
xor
lcall
loop
sub
push
fscale
and
sbb
jmp
rcrb
xchg
gs
cmpsb
movsb
imul
jecxz
mov
or
ret
enter
jl
pop
inc
push
rol
mov
cs
or
push
mov
out
push
sub
aaa
xor
mov
jb
ja
ss
sbb
cmpsl
fwait
push
sbb
vmovaps
rcrl
negb
pushf
pop
in
and
mov
dec
jnp
jo
dec
push
mov
or
or
cmp
enter
jo
insl
add
fiaddl
outsb
xchg
in
addb
dec
jns
push
add
sub
mov
loopne
dec
mulb
test
mov
jmp
rorl
rcll
sub
inc
add
enter
push
imulb
adc
gs
or
js
add
aam
icebp
leave
not
cld
xor
mov
dec
add
fisubrl
add
mov
mov
daa
fcmovne
lret
push
mov
cmp
adc
cmpsb
negb
lds
scas
pop
mov
aas
fnstcw
xor
popa
movsb
hlt
pop
loop
pop
test
je
mov
push
ret
testl
and
insl
dec
das
pop
ss
insl
mov
mov
mov
es
pop
outsb
or
or
xor
addr16
aas
xor
das
mov
xchg
movq
or
addr16
mov
leave
and
daa
out
ret
sahf
lds
pop
lahf
inc
sar
into
fdivs
test
idiv
cmpsb
and
pop
test
cmp
shll
mov
pop
dec
rcr
icebp
jmp
add
jae
and
sti
daa
push
push
and
or
fistpl
adcl
nop
add
outsl
and
std
or
sub
and
dec
lret
sti
jg
test
pop
xchg
repnz
in
xchg
mov
sahf
sub
cmp
cld
adc
xchg
mov
iret
lods
mov
xchg
dec
int3
lcall
mov
orl
adc
sti
mov
je
dec
in
mov
sarb
push
idiv
add
xor
pop
jns
adc
pop
in
pushaw
mov
inc
pop
jl
xor
sbbb
xchg
lods
outsb
popf
hlt
cmp
pop
jb
or
cmp
add
shrl
mov
inc
pop
inc
dec
add
shll
sub
jne
pop
cs
jnp,pn
adc
dec
cmp
lahf
inc
dec
sbb
mov
adc
jle
push
sbb
pop
fmuls
fnstenv
mov
pushf
pop
push
inc
in
adc
jb
mov
or
lods
inc
mov
add
cvtps2pd
test
jle
adc
add
xchg
cmpsl
rorb
or
mov
or
rol
xor
int3
call
xchg
cmpsb
fisubs
and
cmc
mov
mov
xor
jo
test
add
testl
pop
inc
loopne
inc
inc
orl
jp
js
jns
in
push
cmpl
dec
test
mov
int3
dec
and
daa
imul
mov
mov
out
outsl
dec
mov
insb
and
xchg
fwait
pop
sti
cltd
loop
push
xor
dec
lahf
in
push
rol
inc
add
sbb
movsb
dec
fs
push
mov
inc
xchg
pop
inc
out
aaa
test
inc
inc
outsl
jmp
add
dec
jle
fldcw
pop
cmp
dec
lods
mov
mov
mov
out
lcall
lahf
or
test
sbb
scas
mov
andb
mov
data16
mov
pop
pop
rorl
dec
out
lahf
pop
inc
stos
push
aaa
dec
push
out
dec
sbb
test
cmp
cmp
sysret
cs
adc
sub
sbb
mov
or
mov
das
sbb
shrl
push
imul
lea
xlat
call
shrl
jae
lods
sti
clc
test
sbb
pop
insb
dec
lds
add
or
out
fdivrl
lods
scas
iret
push
sub
cld
jl
call
or
jno
inc
dec
jnp
fisubrl
xchg
inc
inc
jg
repz
xchg
add
out
test
jne
dec
call
inc
and
movsb
movsl
jo
popa
sbb
push
or
push
in
je
lahf
and
pop
sti
jl
rcrl
dec
mov
push
xchg
loopne
fwait
push
insl
pop
leave
fldt
rorb
pop
push
xchg
mov
mov
xor
cmp
sahf
pop
das
cmovae
xchg
dec
shlb
out
dec
xor
fisttpll
loopne
aam
cmp
loope
dec
loope
test
push
cmp
mov
adc
iret
cwtl
push
test
scas
jp
mov
insl
jp
popf
mov
xor
sti
sbb
adc
insl
mov
xlat
rol
fs
fisubrl
daa
cltd
lea
xchg
mov
enter
hlt
xor
and
mov
adc
xor
pop
mov
cmpl
mov
iret
mov
and
cld
jne
insb
flds
sub
in
iret
lds
clc
cld
xor
testl
mov
jp
insb
lea
into
inc
xor
in
fimuls
loop
gs
xor
sub
je
jle
mov
cmp
mov
ds
mov
add
sti
adc
add
xchg
in
ret
cmpsb
adc
lahf
or
jae
stos
mov
xchg
pop
faddl
push
mov
xor
dec
cmc
xchg
pop
mov
dec
mov
hlt
fisubrs
clc
cmp
add
out
shll
cmp
pop
in
mov
data16
xchg
add
fadds
mov
fwait
mov
mov
test
mov
out
aas
and
xchg
and
jle
dec
aam
mov
ficompl
jmp
inc
mov
jl
cmp
movsl
icebp
mov
aas
imul
jmp
ljmp
ret
sahf
rol
jb
insl
jmp
xchg
xchg
rol
mov
test
aas
call
or
fs
dec
or
imul
mov
xchg
std
pop
sbb
cmpsb
mov
mov
push
lods
xorl
arpl
call
push
xchg
pushf
add
aas
xchg
mov
mov
cmp
xchg
iret
pop
mov
in
mov
xchg
sub
mov
cmp
push
inc
call
scas
cmp
cwtl
xchg
sbb
cltd
int3
xchg
imul
adc
mov
loope
xchg
int3
ds
outsl
in
xor
out
fcompl
testl
push
mov
pusha
pop
out
push
iret
icebp
divb
jb
cmpsl
dec
loopne
loopne
in
push
sub
sti
clc
jne
xor
cli
xlat
fwait
mov
pop
mov
sahf
out
xor
or
icebp
fdivrs
xchg
xchg
sahf
sbb
xor
mov
cmc
adc
jbe
stos
sti
out
xchg
push
movsl
cwtl
jecxz
inc
push
pop
or
jge
es
shlb
in
sbb
lahf
push
mov
scas
mov
imulb
jle
std
aaa
cmpl
inc
imul
pop
xchg
enter
inc
hlt
pop
mov
xchg
fsub
mov
mov
xchg
loop
aam
or
dec
xchg
fistl
pop
mov
iret
je
call
push
scas
or
gs
mov
addb
call
push
jle
cli
aad
addl
adc
cs
pop
xor
popa
popa
add
loope
push
cmp
inc
push
push
cwtl
call
cmpb
repz
fdivr
mov
mov
dec
jno
jge
jne
or
sub
daa
pop
cmpsb
sbb
scas
sahf
push
ja
or
stc
in
xor
mov
xchg
aam
lds
ljmp
popf
rcll
aaa
and
push
fstpt
xchg
or
shlb
and
adc
push
push
jl
decl
fsubrp
mov
push
outsb
xor
adc
inc
imul
movlps
push
out
leave
add
loope
adc
ja
inc
sbb
mov
mov
mov
cmp
sbb
fsubl
fdivl
xchg
inc
mov
pushf
push
adc
push
cmp
xor
sahf
jno
or
lock
cmp
jle
imul
gs
clc
mov
pop
cmp
push
pop
or
sti
maskmovq
xchg
sarl
mov
and
cs
nop
imul
push
inc
std
mov
push
lds
pop
mov
orb
insb
test
fwait
pop
inc
mov
jmp
cwtl
scas
mov
adc
pop
and
jnp
sub
inc
loop
jae
inc
pushf
je
in
mov
sub
push
negb
mov
sti
mov
adc
popf
pop
inc
imul
xchg
xchg
fsubrl
mov
and
mov
fmull
lcall
add
stos
imul
scas
jp
push
aad
lods
ret
xor
mov
faddl
inc
fcomip
jg
enter
adc
cmp
dec
sbb
in
out
out
cmc
add
push
pop
adc
and
pop
cmpsb
dec
pusha
adc
loope
stc
and
out
mov
stos
mov
push
test
sbb
sbb
test
mov
in
xor
xchg
sub
push
mov
loope
jg
lds
push
mov
es
scas
int3
aas
shrl
or
imul
pop
xchg
pslld
push
scas
xor
mov
sub
adc
aad
orps
add
shrb
mov
and
inc
into
mov
cmc
xor
push
int
push
loope
add
cli
outsl
xor
push
mov
inc
out
xor
mov
outsb
mov
lahf
xchg
xor
pop
push
sub
nop
out
std
xchg
rcl
int
daa
ja
cmp
dec
pop
xchg
lea
jmp
popf
xor
dec
fnstsw
push
push
in
adc
and
jbe
int
xchg
dec
repnz
dec
mov
ljmp
repz
xchg
pop
call
aad
sar
daa
sbbl
jnp
jno
dec
pop
lret
add
out
inc
xchg
insl
fucompp
add
stos
icebp
hlt
out
and
adc
adc
daa
push
pop
or
mov
xor
mov
in
or
cmp
push
bound
or
int3
xor
inc
jmp
mov
pop
push
adc
mov
mov
or
pop
loop
push
movsb
jno
mov
xchg
and
push
lods
int
movsb
int
leave
leave
out
mov
xchg
ret
roll
cmp
or
inc
mov
pushf
pop
push
in
loop
mov
cmpsl
xchg
outsb
push
movsl
movsl
fcomi
cli
mov
dec
pop
and
jle
mov
sbb
test
fcomps
mov
sub
push
xor
cmp
cmp
sbb
adc
jl
jae
jecxz
lods
in
rcll
sti
mov
pushf
call
mov
mov
adc
mov
mov
hlt
cmpsb
xchg
mov
movsl
pop
sub
outsb
test
gs
mov
imul
fildll
dec
jmp
mov
cmpsb
cmp
pop
test
scas
gs
test
inc
hlt
push
cwtl
lock
inc
lcall
or
cmpsb
sti
pop
dec
loop
mov
push
cmpb
ror
leave
inc
icebp
xor
and
cmc
sbb
loopne
bndldx
ret
rorb
outsl
leave
jo
adc
mov
pop
xlat
stos
arpl
ss
xchg
cmpsb
shll
cmp
dec
cltd
repz
insl
xchg
in
in
lods
mov
push
xchg
lds
pusha
jb
ret
fidivrl
aad
loope
imul
or
sub
cmc
mov
push
or
inc
mov
test
lock
lods
push
dec
and
adc
imul
xor
push
out
mov
cld
or
add
ret
jno
out
mov
inc
jge
jns
push
push
cs
xchg
je
xor
or
xchg
pop
cmp
mov
movsl
xchg
cmp
dec
adc
jle
jl
std
mov
std
mov
push
test
arpl
xchg
or
scas
xacquire
test
mov
or
divl
hlt
xchg
fs
dec
dec
int3
cmpsb
jecxz
lods
sub
lret
xlat
std
fistpl
int3
rep
mov
fisttpl
lret
enter
pop
lret
stos
lahf
push
xor
mov
test
sub
jg
stos
dec
mov
cmp
dec
jp
sub
lods
mov
sub
rcrb
sbb
jge
lahf
lock
das
stos
push
std
pop
inc
cmp
inc
inc
mov
decb
pusha
in
and
stos
dec
sub
and
sti
pop
enter
loopne
adc
or
fimuls
rol
push
pop
push
cmp
push
movsb
cmp
adc
std
dec
inc
mov
icebp
outsl
mov
add
sarb
add
fwait
and
mov
out
sub
std
addr16
inc
mov
fisttpll
mov
jnp
jmp
or
add
push
and
cmp
sbb
or
lret
mov
rcl
adc
lret
leave
insl
enter
movsb
push
inc
fs
pop
mov
xor
enter
add
mov
jnp
add
sub
mov
frstpm(287
cmp
dec
fs
call
adc
cmp
out
popf
shrb
out
rorl
jecxz
enter
mov
adc
inc
loope
dec
push
subl
hlt
scas
daa
inc
adc
inc
mov
push
jecxz
and
scas
leave
notl
idivl
jno
adc
sbb
in
enter
push
std
mov
mov
sub
pop
dec
push
pop
pop
movsb
mov
outsl
nop
cld
pop
dec
aad
aad
mov
inc
fcomps
sbbb
iret
in
jp
jb
mov
scas
pop
mov
fdecstp
dec
cmp
add
repnz
test
shrb
into
xor
adc
js
or
xchg
mov
add
mov
movsl
xor
or
mov
outsl
pushf
pop
repz
cld
push
shl
jbe
and
repz
insb
push
xor
and
lds
call
xchg
add
inc
mov
sbb
adc
mov
xor
xor
jnp
pop
dec
rolb
push
orb
cmp
bound
testb
outsb
push
adc
inc
movl
xchg
and
imul
enter
inc
jns
dec
jb
jmp
insl
inc
mov
aaa
jns
sub
fyl2xp1
ss
popa
ss
push
cmp
xorl
aad
xlat
fdivs
loope
pushf
mov
imul
lock
dec
mov
cmpsl
push
jb
pop
data16
mov
or
or
push
dec
jecxz
mov
sbb
in
sub
test
dec
jnp
adc
mov
mov
lods
fwait
xor
ljmp
push
cmpb
xchg
ds
mov
jmp
movsl
sub
push
loop
imul
leave
sbb
mov
movsl
xchg
fisubl
dec
cs
insl
cld
fldl
scas
xchg
dec
jge
mov
rcr
inc
or
add
cmp
stos
lret
lcall
sub
div
lret
les
mul
mov
stos
lcall
lock
cwtl
lret
cmp
and
cmp
cs
bound
push
fcmovb
rcr
or
test
int3
mov
or
shll
in
scas
or
sub
stos
into
and
lock
sbb
adc
in
add
cmp
push
rclb
test
stos
jp
push
lds
jb
pop
jno
test
jno
imul
xchg
subl
shll
loopne
in
div
vmovlpd
cmpsl
scas
xor
jno
in
inc
pop
dec
push
out
mov
js
pop
sbb
es
int
out
sbb
xor
cmp
xchg
call
inc
out
int
lret
fsubl
push
pop
push
cltd
imulb
mov
mov
lahf
add
pop
jp
push
outsl
inc
mov
and
jle
iret
add
aaa
pop
jne
mov
mov
sub
mov
call
xor
ja
out
in
scas
sub
iret
adc
or
sbb
jle
scas
xor
pop
dec
jbe
jmp
je
jnp
add
jo
xchg
add
mov
xor
shll
das
mov
adc
xchg
loopne
jne
jle
fsubr
clc
movl
cltd
sbb
sbb
out
iret
inc
sahf
push
in
ret
nop
adc
xor
or
cmpsl
mov
dec
bound
movsb
loopne
mov
fidivrl
lods
xchg
xor
adc
dec
sub
imul
push
popf
xor
enter
ljmp
inc
pusha
or
jecxz
adc
mov
cs
dec
mov
add
xlat
daa
into
mov
aad
mov
je
mov
lods
fyl2x
jmp
mov
outsb
int3
cmp
dec
adc
xchg
mov
xchg
dec
add
notl
icebp
shl
sbb
das
pusha
jo
flds
pop
fildl
sub
aam
lret
repz
enter
inc
xor
imul
inc
mov
jns
cmp
ljmp
nop
repz
xchg
push
fcoml
insl
pop
insl
mov
mov
mov
les
js
mov
ljmp
push
aam
inc
sub
int
dec
pop
xchg
add
dec
cmpsl
jge
pop
loopne
jbe
jge
cmp
push
pop
mov
into
jns
into
add
fs
movsb
or
inc
jo
cmpb
sahf
or
cmc
pushf
insl
inc
invd
push
inc
adc
adc
das
popf
push
shrl
aam
jbe
je
pop
and
sbb
shlb
or
sbb
mov
sub
std
stc
pop
xor
xchg
in
popa
loopne
stos
xor
ja
mov
xchg
sub
or
push
mov
repz
inc
pusha
cli
sub
pop
loope
adc
push
call
mov
xor
aas
fdiv
sar
rcr
outsl
js
sbb
out
jbe
xchg
insb
push
xor
cli
out
lds
sarl
fistl
lods
pusha
test
lods
sbb
mov
xchg
pushf
jb
mov
loope
sub
dec
xchg
xchg
mov
in
jnp
aas
leave
out
sub
sub
pop
pop
and
aas
out
pop
repz
or
push
lods
xchg
sbb
sub
jns
mov
add
fsubs
inc
push
rcrl
imul
or
adc
jg
cld
in
lcall
sub
sbbb
jno
cmp
mov
jb
xor
aad
aam
call
je
scas
lds
int3
outsb
mov
inc
sbb
test
lret
pop
in
add
sub
jne
push
scas
pop
mov
pop
in
dec
bound
test
lock
mov
outsb
xor
and
ss
ds
ljmp
jno
call
imul
xor
inc
faddp
jbe
or
dec
pop
inc
jo
pop
dec
jle
rcl
or
out
lcall
pop
or
scas
inc
shl
sbb
fs
xor
xchg
jg
inc
shll
repnz
icebp
icebp
repnz
int
stos
enter
xchg
mov
sub
stos
daa
add
mov
adc
jo
insl
add
test
std
sarb
mov
pop
mov
shrd
jmp
repz
dec
xchg
aas
in
loop
mov
clc
adc
shll
test
test
pop
int3
cs
xor
jecxz
sub
sarl
push
pop
and
cwtl
mov
mov
cvtdq2ps
adc
jge
mov
into
data16
sbb
mov
insb
lsl
cmpsl
inc
xor
outsb
iret
xchg
enter
mov
add
hlt
lods
in
pop
xchg
or
lret
orb
sbb
pop
mov
cli
data16
push
fwait
xchg
inc
inc
in
jg
cwtl
in
and
repz
test
stos
test
insb
and
jge
mov
shll
sub
mov
or
cmpsl
mov
popf
add
repz
cmp
out
xchg
mov
ss
outsb
dec
rclb
cwtl
loopne
insb
stos
jmp
cmpl
xchg
xlat
leave
cmp
add
pop
mov
or
das
cli
ja
scas
sbb
mov
adc
mov
mov
push
cmpsl
jl
xchg
mov
adc
ss
sub
movsb
fildll
movsb
fldenv
xchg
adc
popa
fcomip
cmpsl
scas
jns
cld
stos
repz
in
xorb
push
sub
cltd
fcomip
xchg
mov
push
or
fistl
jecxz
mov
mov
add
out
inc
fmul
ljmp
repz
lds
xchg
add
cmpsl
fdivp
push
enter
stos
jbe
enter
mov
sarl
cmc
out
fistpl
int
fsub
xchg
or
outsb
xor
mov
jo
push
mov
popf
jge
mov
jge
and
sub
mov
jns
mov
test
scas
arpl
xor
test
sub
jle
pop
push
sbb
add
fistpl
pop
ljmp
cli
xchg
out
ret
fs
mov
andl
adc
jae
cmp
pop
xlat
dec
into
dec
rcl
loop
cmp
inc
adc
cmpsb
outsb
push
jp
int
lret
push
icebp
lods
jle
lcall
jno
pop
push
icebp
jp
mov
pop
inc
xor
dec
dec
test
add
fwait
repnz
xchg
outsb
out
or
xchg
lcall
stos
popf
add
mov
fisubrl
popa
cmp
mov
outsb
mov
pop
mov
clc
fcomip
inc
rorl
fiaddl
sbb
test
sbb
ds
or
mov
loope
xor
jecxz
add
xor
int3
xchg
pop
push
and
lods
pop
fucomip
call
inc
jmp
je
add
test
sarl
mov
xor
jb
sbb
xor
adc
xor
jl
pop
sti
das
test
icebp
dec
cmp
rol
xchg
out
sbb
jle
inc
aad
push
ljmp
je
jae
mov
stos
pop
pop
push
add
sbb
push
stc
xchg
icebp
fildl
sub
out
movsb
insb
lods
and
mov
rorl
push
mov
inc
stos
jg
push
popa
push
and
push
movsl
fnstsw
les
call
outsl
dec
faddl
cld
stos
lods
mul
sbb
scas
xor
ds
dec
or
ds
sbb
mov
or
pop
insl
and
add
inc
push
nop
push
mov
scas
cvttps2pi
movsb
scas
lods
or
in
dec
pusha
fwait
push
rorl
cwtl
gs
cmp
sub
and
mul
fwait
add
fdivs
test
push
cvtpi2ps
lahf
pop
inc
out
out
repz
push
aad
inc
push
cld
add
enter
pop
ss
and
push
lods
xor
in
testb
mov
dec
movq
stos
or
rol
adc
push
dec
pop
inc
inc
inc
or
ret
add
adc
or
or
movsl
lret
cmp
mov
dec
ljmp
mov
test
mov
xlat
adc
jae
mov
mov
cmp
mov
roll
xor
jle
int3
fwait
inc
mov
xor
jl
xlat
fcomps
cmp
ficomps
notl
add
and
xchg
or
fbld
leave
sub
push
jns
adc
loope
lds
cld
jl
lret
js
test
aas
and
mov
pop
addr16
push
sub
dec
push
enter
xor
roll
mov
mov
ja
push
or
mov
mov
fwait
test
je
outsl
dec
jmp
cmp
repz
in
and
sbb
jp
mov
inc
adc
je
xchg
xchg
mov
jmp
push
jb
xchg
inc
mov
push
sbb
cmp
inc
in
pop
add
aam
push
and
dec
sbb
xor
mov
and
pop
adc
inc
add
xchg
adc
cmp
jns
insl
movsb
mov
fdivrl
sub
inc
fistl
int3
mov
push
inc
cltd
jecxz
cli
dec
mov
jmp
ret
int3
sub
cmp
ljmp
xchg
or
mov
pushf
sub
mov
cmp
jo
mov
sub
ljmp
cmp
lahf
mov
imull
imul
xchg
jnp
dec
pop
aas
mov
jmp
mov
adc
arpl
rcll
decb
stos
out
mov
out
sub
lock
insb
mov
push
push
in
cmp
pop
pop
fnstsw
mov
fsubrs
mov
fisttpll
stos
mov
loope
add
test
in
shr
add
movsl
cs
in
add
or
repz
lret
pop
mov
pop
mov
push
pop
shr
push
sahf
cmp
pop
or
ja
and
push
xchg
insb
lea
cli
xchg
fld
cmp
cmp
or
cli
push
mov
push
pop
push
andb
jb
incb
movsl
sbb
es
fimull
movsb
mov
xchg
adc
and
imul
ljmp
mov
outsl
sbb
dec
cmp
int
arpl
int
enter
and
fstpt
or
and
sub
cmpb
hlt
insb
stos
aas
adc
repnz
test
adc
mov
lret
pop
inc
dec
stc
loopne
loop
lret
dec
sub
jp
xchg
repz
in
cmp
leave
out
icebp
aad
leave
push
adc
cmp
or
push
push
cwtl
mov
cmp
in
test
mov
sub
clc
out
pop
push
shll
pop
push
imul
sbb
xchg
xor
mov
sysret
pop
shll
inc
pushf
js
cmp
pop
xor
fstpt
ss
and
add
aas
xchg
movsb
in
push
push
jmp
aad
aaa
or
cmpsb
sbb
dec
dec
mov
ja
push
sub
aam
cmpb
out
mov
sti
and
pushf
mov
into
inc
into
outsb
addr16
pop
jb
movsb
fwait
jns
je
xchg
fiadds
sbb
xorb
das
mov
cmp
icebp
inc
cmc
leave
sub
sbb
ret
inc
push
call
movsl
mov
jge
aas
xor
int3
stos
es
xor
push
out
gs
rolb
jns
in
cmp
xchg
in
push
inc
mov
push
fnsave
push
stos
xchg
jns
lods
xchg
ss
icebp
mov
jnp
lods
rolb
mov
inc
nop
ljmp
mulb
pop
out
mov
cmp
loopne
das
and
push
sub
push
cmp
or
aaa
inc
in
fistps
scas
dec
xor
mov
fdivrs
and
adc
or
cmp
sbb
in
lret
mov
mov
in
mov
test
jns
jle
hlt
jo
daa
jae
mov
aaa
inc
dec
mov
shlb
test
push
add
iret
or
mov
jbe
test
mulb
test
mov
dec
jg
jo
add
inc
or
mov
jmp
leave
imul
adc
out
inc
outsb
cltd
rclb
outsl
addl
pop
inc
add
orb
lock
stos
inc
dec
cmp
jne
jne
dec
jmp
icebp
jns
out
rcrb
int3
pop
pop
test
mov
lahf
rorb
pushf
icebp
cli
jo
dec
pop
dec
inc
shrb
xor
mov
jb
jle
popf
pop
and
xlat
movsb
andl
lcall
fs
pop
mov
sub
dec
push
cmp
xchg
adc
sbb
loop
dec
test
je
sbb
lcall
mov
aam
xor
mov
cwtl
aas
jno
adc
sbb
sub
or
pop
push
jns
aad
add
mov
xchg
mov
pop
adc
mov
out
iret
inc
int
sub
and
scas
out
test
push
call
mov
xor
pop
ss
sbb
out
push
lods
xor
or
inc
test
push
jnp
cmp
pop
xchg
sub
dec
pop
or
jno
pop
out
push
push
pop
add
dec
mov
call
in
fldcw
js
mov
sahf
inc
int
mov
mov
cld
push
das
mov
out
jg
dec
cmp
push
sub
or
xor
mov
jno
addl
int3
push
mov
arpl
cld
mov
in
push
fmuls
lret
cmp
lods
es
and
andl
xchg
adc
xchg
adc
push
or
les
jbe
jecxz
mov
sub
into
or
lods
adc
test
pop
ss
ret
mov
iret
insl
and
int3
pop
inc
clc
jecxz
mov
test
jb
add
dec
or
dec
std
mov
ficoml
movsl
lcall
sub
cmc
inc
jp
pop
dec
dec
roll
mov
and
sub
jge
sub
sub
dec
clc
aam
loop
loop
fs
sbb
mov
mov
sub
xor
into
add
test
add
or
pop
dec
sub
mov
pop
ret
mov
sub
dec
xchg
mov
dec
pop
aaa
mov
ljmp
sub
dec
jbe
sbb
cmp
push
jns
enter
clc
test
shll
icebp
sahf
or
and
add
ja
icebp
data16
mov
rorl
into
sub
ja
pop
push
mov
imul
adc
mov
jae
pop
push
and
stos
imul
js
mov
fsubl
cli
lods
fisubl
xor
sub
xor
mov
xor
sbb
mov
ljmp
in
jge
data16
jecxz
pop
test
jno
lahf
adc
dec
mov
sti
or
rorb
mov
pop
sbb
lcall
dec
movsl
cmpb
bound
lds
or
in
rcll
ret
xor
push
movsb
pop
xor
std
imul
clc
dec
jl
jmp
rolb
scas
test
data16
out
movsl
imul
lods
xchg
xor
mov
fs
loope
push
loopne
inc
out
xchg
cmp
and
mov
inc
or
into
loop
jmp
add
dec
mov
adc
pop
xor
cmp
jp
pop
push
xor
in
ljmp
mov
mov
mov
sub
xorb
les
iret
mov
mov
pop
rorb
mov
stc
fstps
addb
cmpsb
mov
mov
xor
cmc
add
divl
into
in
rorb
aad
das
call
mov
add
add
push
pop
out
push
addr16
cmp
xlat
xchg
jle
sub
int
jbe
loopne
leave
hlt
xchg
sarl
or
sub
pop
mov
ljmp
pop
outsb
and
push
pop
insl
cmp
mov
push
pop
xchg
imul
shrb
inc
or
imul
aad
add
std
mov
test
adc
pushf
cmp
icebp
mov
jge
dec
cmp
mov
into
in
dec
mov
sbb
sbb
mov
iret
add
ja
scas
jns
in
lods
lret
rolb
movsl
in
jg
lock
dec
jb
int
xor
push
push
add
lods
jmp
in
movsl
mov
push
push
fwait
push
xor
pop
dec
fdivr
jbe,pt
icebp
ret
inc
or
xchg
cld
sbb
cmp
cmp
ss
inc
add
jne
push
xchg
add
movsb
inc
insl
test
xchg
pop
mov
inc
testb
sbb
ret
imul
movsb
jge
sub
dec
daa
sbb
dec
cmpsb
aam
enter
std
cld
sbb
fwait
gs
mov
adc
fstpt
call
xor
jbe
aam
push
or
fisttpll
jmp
into
lret
sbb
mov
scas
or
push
and
shrl
lods
inc
mul
mov
lods
shrb
pop
ja
sub
fs
inc
out
ret
xor
or
sbb
gs
sub
mov
fcomps
movsb
lcall
dec
push
clc
sbb
enter
lret
gs
cwtl
or
sbb
in
jns
jo
push
loopne
jg
inc
mov
orl
sub
pop
int
mov
dec
lock
lods
jg
mov
xchg
repz
jnp
or
mov
sbb
inc
xlat
mov
xchg
lret
inc
loopne
dec
pop
mov
inc
repz
fucomip
xor
push
js
cmp
popa
into
mov
push
mov
mov
cli
cmpl
jno
xlat
xor
cmp
jecxz
push
sbb
add
jb
xor
jg
fwait
xchg
jmp
ds
mov
add
sbb
or
je
sbb
mov
and
inc
pop
sarb
les
and
cmp
inc
lahf
or
leave
pop
inc
dec
cmp
ja
xor
cmp
pop
or
ret
mov
mov
pop
push
orb
in
stos
jge
sub
push
sub
ret
scas
or
les
cwtl
mov
pushf
test
pop
stos
jg
rcl
inc
addl
out
enter
icebp
lods
js
sbb
sub
out
pop
lods
mov
mov
mov
pop
clc
pop
mov
push
push
mov
cmpsl
repnz
push
xor
insl
gs
push
or
mov
negb
addl
jns
out
or
fwait
push
sbb
push
fists
in
xor
mov
je
jge
sbb
sub
icebp
dec
mov
xchg
scas
aas
shl
scas
daa
push
mov
dec
shl
call
in
filds
dec
js
icebp
add
or
movsl
in
xchg
bound
fs
xchg
mov
pop
data16
dec
pushf
std
cmpsb
and
push
mov
push
aad
xor
mov
jo
sbb
dec
imul
xor
mov
mov
dec
fldl
pushf
andl
pop
mov
or
or
jmp
loope
inc
mov
shrb
divl
shlb
push
push
imul
jnp
nop
in
xchg
cmp
mov
push
call
mov
push
and
cld
inc
cmp
cs
push
cmp
pop
dec
cmp
push
mov
or
dec
ds
clc
test
sbb
cmp
add
mov
sub
imul
pop
mov
push
xor
inc
sti
clc
mov
dec
jb
sbb
test
pop
pop
xchg
lahf
fsts
sbb
jae
ds
lret
dec
es
xchg
cli
mov
add
repnz
cmc
inc
cmp
js
jnp
aaa
jb
and
lock
adc
mov
sub
xor
das
or
movsl
sub
nop
int
mov
ret
not
cmp
pop
mov
movsb
cmpsl
movsb
inc
adc
mov
dec
pop
cmpsb
add
xor
sub
inc
aam
mov
divl
mov
sub
lahf
loope
rcrl
es
xchg
inc
aad
cmpsl
iret
push
lea
xor
add
lret
jae
cmp
cvtps2pd
dec
or
mov
inc
mov
je
sarl
cli
xchg
jp
jp
dec
outsl
insb
lds
pusha
xchg
fistpll
dec
mov
scas
inc
repz
mov
mul
or
push
ss
ret
sbb
aas
loop
test
int3
jae
xor
in
lcall
mov
mov
shlb
inc
jmp
xor
dec
sbb
ret
push
xor
sub
adcb
pop
js
push
jnp
scas
lret
fwait
xlat
mov
jbe
cmpb
cmp
ds
fisttps
imul
xchg
movsb
dec
outsb
dec
jns
fcomp
jne
stc
jle
add
mov
mov
sub
cmp
jnp
cmp
jae
dec
mov
das
adc
push
scas
sahf
jo
ret
lods
adc
mov
or
pop
cmp
mov
daa
push
sarb
push
push
push
dec
adc
clc
leave
xor
cmp
dec
shlb
or
mov
lahf
mov
gs
loopne
in
subb
xchg
decb
aam
test
enter
adc
shrl
and
out
inc
repz
mov
subb
xchg
mov
clc
mov
ljmp
inc
mov
push
dec
inc
mov
stos
aas
sub
adc
stos
into
sub
and
clc
ja
xor
mov
and
cli
test
add
mov
out
clc
cld
std
js
jne
inc
inc
push
add
sub
add
outsb
or
inc
roll
adc
pop
mov
inc
pusha
lock
clc
movsl
sbb
pusha
nop
xchg
incb
and
add
int
aad
dec
cmp
push
mov
inc
push
imul
xor
repnz
jp
das
mov
push
push
mull
lahf
jae
imul
std
jae
aas
sub
pop
loopne
sbb
aam
js
jne
ljmp
idivb
je
in
sub
push
mov
add
or
cmpsb
sbbl
add
xchg
push
adc
xchg
imul
xchg
push
scas
sub
loope
stos
shll
fimull
das
jae
jno
dec
mov
iret
inc
mov
icebp
xchg
rcll
stos
repnz
sbb
hlt
cmp
sbb
xlat
imul
mov
sbb
lea
enter
test
push
xor
adc
xchg
shlb
sub
sbb
mull
jo
stos
xchg
ds
push
dec
rorl
jecxz
call
mov
insb
mov
push
stos
in
lret
push
stos
mov
or
call
lahf
push
or
out
shll
sti
mov
push
bound
test
and
dec
mov
daa
sti
or
pop
inc
adc
jmp
nop
negl
xchg
pop
pushf
lock
addl
pcmpgtw
inc
clc
push
pop
mov
sbb
out
sti
repz
call
lods
sbb
xchg
loope
incl
in
mov
fbstp
cmpsb
mov
popa
mov
pop
leave
and
sti
xchg
out
or
mov
cli
xor
jg
xlat
rcrb
push
in
out
jge
leave
mov
inc
cmp
push
psubsb
and
jne
inc
repnz
cmpsb
pop
ja
or
iret
and
fwait
cltd
mov
in
lret
fsubs
mov
add
mov
xchg
jo
xor
insb
inc
inc
sti
dec
cli
cmc
std
popf
push
cmp
lods
push
xor
pop
pushl
in
dec
aam
jb
mov
shrb
nop
fyl2x
je
pop
shll
pushf
sahf
adc
fldt
test
mov
mov
out
add
mov
mov
or
ficomps
jmp
mov
jae
xchg
xchg
in
push
fisubs
rcrl
fdivr
jl
adc
xchg
cmp
adc
mov
in
repz
pusha
inc
sar
imul
adc
jne
push
pop
pop
mov
in
xor
push
out
jae
test
gs
inc
in
jns
jmp
repz
pop
and
into
fs
fnstsw
js
sub
jb
push
jne
add
repz
jbe
push
sbbl
bound
mov
icebp
jle
outsb
mov
sbb
pop
xchg
push
inc
sbb
nop
dec
pop
out
outsl
ret
mov
lahf
pop
mov
test
incl
adc
xchg
mov
sbb
mov
arpl
ljmp
ljmp
adc
xchg
mov
xchg
shll
icebp
iret
fidivrs
sbb
xlat
idivb
test
mov
stos
mov
sbbb
mov
pop
mov
fldenv
push
pusha
xor
sbb
cwtl
test
mov
scas
dec
jbe
ss
stos
xlat
fisubl
push
mov
sti
add
sbb
push
and
push
push
xchg
dec
jl
cmc
hlt
cmp
jmp
cmp
popa
add
std
jbe
xchg
sbbb
add
mov
sbb
in
sti
jl
cli
xor
dec
aam
pop
lahf
mov
adc
insb
sbb
enter
xchg
scas
mov
fprem1
xor
scas
ror
xor
push
popf
mov
enter
rcrl
and
aam
xor
scas
cmp
gs
arpl
ret
jmp
push
dec
xchg
push
push
push
jge
dec
push
lock
pop
sbb
sbbl
insl
repnz
and
arpl
pop
fadds
out
fmul
mov
push
stos
sbb
repz
jne
mov
lea
iret
jl
cltd
outsb
lcall
sbb
insl
adc
imul
js
fisubl
sub
dec
sbb
pop
sub
sub
iret
xchg
add
or
or
xor
add
mov
nop
mov
xchg
fdivl
and
sub
loopne
jns
int3
enter
jne
std
mov
pop
bound
lret
jecxz
fs
inc
xchg
jg
sbb
add
dec
add
pop
rcll
daa
inc
dec
inc
sbb
int3
mov
fcmove
aas
add
pop
adc
repnz
xor
cli
ja
cmp
mov
sub
cmp
and
mov
js
repnz
pop
sbb
mov
test
or
dec
jbe
cs
mov
lock
dec
inc
sub
sbb
push
in
aas
and
xor
sbb
call
lock
stos
jmp
repnz
dec
cltd
pop
adc
stos
add
nop
imul
fcmovbe
and
dec
sahf
test
out
jns
jl
push
jle
test
sbb
iret
sbb
insb
dec
and
fs
das
vunpcklps
fadds
mov
ljmp
pop
dec
mov
mov
popf
inc
cwtl
jp
or
outsb
push
idivb
jmp
fnstsw
mov
push
push
popa
push
arpl
adc
test
sti
mov
or
push
lcall
scas
xchg
sub
dec
or
sub
stc
or
decb
xchg
mov
pop
xchg
in
stc
std
mov
ret
inc
mov
inc
add
push
test
shll
mov
cmp
sbb
inc
aas
sbb
dec
dec
xchg
pushl
dec
jne
push
and
mov
push
popa
push
mov
and
cld
mov
ret
popa
pop
mov
test
inc
icebp
popf
pusha
rol
or
pusha
cli
jo
call
mov
js
mov
xor
pushl
xorb
je
xor
leave
popa
lods
dec
or
mov
int3
push
jb
cmpsl
in
mov
sub
inc
pop
in
lret
addb
int3
iret
pop
ljmp
pop
jae
enter
dec
jo
outsl
ret
push
pop
pusha
addr16
inc
sarl
push
mov
fwait
adc
das
adc
movsl
mov
cmp
pop
fcompl
loop
iret
cmp
sub
sarb
xlat
ret
push
dec
sub
add
sbbb
repz
jnp
pushf
sub
lods
roll
out
pop
push
add
bound
fldl
fwait
and
in
jns
test
sub
jne
fs
jmp
sub
popa
or
int3
outsl
cwtl
insb
mov
push
jp
loop
mov
out
fmuls
and
xor
xor
fsubrs
ljmp
add
aad
jmp
mov
stos
fisttpl
paddsw
fsubl
mov
sbb
mov
lahf
scas
add
aad
xlat
xchg
push
jne
aaa
out
and
mov
ds
std
ds
movsb
out
jecxz
imul
jae
pushf
mov
imul
xchg
pushf
leave
gs
sti
movsl
ja
js
mov
pop
mov
xor
rcr
fldl
hlt
pushf
push
aad
adc
out
push
add
mov
call
pop
sti
pop
sbb
jae
mov
cld
pop
and
inc
jl
fs
push
pop
ja
cmpsb
or
mov
lret
sbb
jno
sub
in
dec
test
les
ret
imul
out
xchg
sbb
shlb
or
jbe
je
sub
xchg
sahf
mov
jns
lods
lea
rclb
arpl
cli
inc
enter
notb
lret
pop
in
cld
pushf
inc
cmp
aaa
into
ret
cmp
popf
repnz
push
cmp
jo
pop
imul
sub
xor
faddl
cmp
sbb
mov
push
scas
pop
mov
mov
jge
test
and
jl
dec
ficoml
and
rcr
dec
and
cltd
mov
mov
ret
adc
push
jmp
jge
and
data16
or
mov
add
sub
imul
cs
ss
int
lock
rorb
jne
jo
jne
inc
or
bound
int3
jb
rcrl
movb
mov
and
mov
and
int
mov
pop
xor
icebp
cmc
jb
stc
xor
loope
lahf
imul
out
sub
mov
dec
arpl
mov
xor
xchg
and
loop
xor
fcmovnu
jo
aaa
or
mov
push
pop
scas
inc
pusha
mov
fldcw
fwait
mov
pop
jmp
pop
dec
push
insl
dec
adcb
imul
cmp
adc
jmp
adc
cmp
xchg
shr
popf
pop
xchg
mulb
loop
stos
push
mov
mov
movsb
inc
jmp
aam
arpl
xchg
fs
orb
xchg
jmp
scas
out
pop
sub
and
cmp
xchg
push
mov
stos
outsb
lea
and
or
loopne
je
test
cmp
fwait
sub
mov
push
mov
add
add
iret
aaa
test
mov
popf
xchg
sbb
fsubrl
cmpsl
cmc
and
mov
sarb
insl
leave
lret
scas
shlb
mov
fldpi
ret
push
fsubl
xchg
cli
ja
jge
enter
shll
stos
jno
sbb
dec
paddw
xor
mov
insl
pop
loop
ss
add
xor
cs
sbbl
in
sbb
shrl
arpl
xchg
adc
jle
repz
or
pushf
push
jmp
jbe
int
dec
sahf
fcmovnu
lret
iret
mov
push
divl
icebp
loopne
movl
fldenv
add
addr16
rcll
jg
mov
das
xchg
out
sbb
pushf
fs
mov
mov
clc
insl
imul
xchg
das
dec
jns
loope
xor
daa
mov
add
jns
movsb
loopne
push
xchg
xchg
and
jnp
int3
jnp
mov
adc
inc
cmpsb
notb
int
and
pop
hlt
adc
jmp
adc
popl
dec
adcb
jns
stc
mov
sahf
sub
push
fwait
sbb
mov
jb
push
pusha
incb
outsb
es
movl
in
push
mov
test
lahf
xor
mov
xor
dec
insl
in
mov
dec
mov
push
call
imul
fwait
loop
ret
roll
imul
cli
mov
sbb
adc
sahf
test
pushf
lock
daa
sub
gs
sub
push
sub
jo
or
mov
mov
pushf
test
and
lahf
inc
jb
mov
int
sbb
shll
or
jbe
inc
inc
cmp
mov
sub
test
sub
cmp
sbbb
xchg
sub
add
pusha
jp
cmpsb
xchg
lret
xchg
mov
sbb
test
dec
icebp
pushf
pop
push
mov
push
cmp
lock
lods
xchg
sbb
lahf
outsl
adc
sbbl
fldt
mov
or
cmp
decl
subb
bound
push
adc
fwait
mov
loope
jmp
popa
das
shl
pop
adc
jo
add
xchg
loope
gs
ret
mov
inc
push
xchg
fdiv
jge
push
repnz
add
jns
pop
xor
fimull
push
repnz
xor
es
adc
imul
insb
push
stos
cmpsb
lea
icebp
xchg
sbb
inc
sub
adc
push
jecxz
repz
and
lea
mov
stos
mov
adc
insb
sub
push
hlt
ret
or
clc
repz
daa
testb
repnz
les
xchg
js
andb
push
pop
fwait
mov
cmc
mov
mov
add
test
pop
xchg
inc
jb
mov
xchg
jecxz
jmp
mov
cmpb
pusha
dec
push
lcall
adc
push
mov
sbb
out
fstpl
subl
bound
repz
setae
mov
pop
hlt
aad
adc
mov
xor
push
mov
inc
shr
push
rolb
jno
in
or
leave
add
xor
out
inc
xor
pop
jbe
mov
out
in
dec
pop
sbb
and
pop
mov
adc
add
lods
jp
dec
mov
mov
xlat
mov
lock
inc
dec
inc
mov
bound
jl
orb
inc
stos
aas
popa
stos
cmp
lret
insl
cwtl
pop
adc
mov
dec
js
int
mov
rclb
movsb
andb
lret
mov
jb
insb
mov
sti
out
rorb
jle
jno
cmp
pusha
xchg
push
mov
push
dec
cmpsl
mov
es
sub
pop
arpl
xlat
add
fisubrl
test
scas
jb
loop
jp
or
insl
sbb
pop
test
or
ret
dec
les
test
aam
mov
or
loopne
pop
add
pop
cmp
dec
xor
cmp
xchg
and
mov
sub
jecxz
xorps
inc
sub
pop
test
mov
loop
adc
sbb
cmp
sarl
int
push
nop
stos
imul
xchg
test
stc
in
mov
repnz
dec
int3
xchg
ret
std
mov
push
pop
fcoms
mov
out
hlt
insl
nop
jb
inc
adc
jns
stc
fstpt
mov
pop
push
incb
fistpl
dec
ss
je
mov
test
fldl
xchg
pop
inc
fimull
sub
mov
sub
stc
aas
cld
add
fs
sbb
adc
cmp
and
pop
test
adcb
clc
cmp
stc
nop
jge
fistl
int3
aad
push
gs
sub
sarb
push
xor
repz
data16
mov
cmpsb
push
mov
fstps
mov
mov
cltd
pop
hlt
mov
adc
mov
loop
cmp
mov
ja
and
fwait
pop
add
arpl
push
mov
cltd
pop
ret
xlat
pop
dec
movsb
jmp
incl
stos
fucomi
imul
cmp
ljmp
stos
popa
pop
and
je
test
xor
jmp
scas
js
int3
or
pushl
sbb
jno
lahf
jne
lahf
stc
adc
jno
sub
push
mov
add
test
mov
push
xchg
outsl
xchg
mov
or
mov
mov
mov
out
mov
lock
or
xlat
mov
bound
cltd
sub
cld
push
push
fbld
insb
pop
jp
xor
mov
pop
xchg
xchg
dec
loope
xlat
push
orl
je
jno,pt
ret
push
mov
std
cmp
add
inc
hlt
xchg
and
adcl
pop
add
test
jno
jae
mov
dec
int
add
and
xchg
stos
out
gs
inc
mov
shl
push
outsb
dec
sub
nop
mov
cmp
lds
xor
out
rcrb
lcall
xor
std
push
adc
ss
test
fists
pop
jno
dec
outsl
mov
lds
repnz
mov
dec
and
addr16
stos
scas
aaa
cmp
clc
cmp
ffreep
call
movsl
sbb
mov
pop
mov
in
and
dec
lret
jae
push
mov
inc
jl
lds
fs
pop
push
sarl
mov
cmp
cs
pop
sbb
cmp
sahf
aam
inc
es
test
sarb
mov
movb
jns
inc
sbb
pushf
insb
lock
sbbl
lods
out
and
repnz
fcomip
xchg
fildll
adc
push
and
mov
lret
imul
push
dec
add
cs
out
lahf
cmc
pushf
rorb
stos
out
xor
jmp
adc
and
pop
pop
daa
fs
inc
mov
aad
push
cmpsl
sti
dec
cs
or
cwtl
push
enter
adc
add
add
sarl
lods
notb
mov
mov
jne
mov
push
aam
xchg
daa
fsubrs
push
push
and
fsubrs
mov
mov
and
push
dec
addl
jne
sti
xchg
and
mov
in
hlt
repnz
in
int
push
and
loop
mov
lods
in
push
in
scas
bound
or
jmp
lods
das
adc
int
mov
lods
pop
gs
loope
add
sar
jbe
xchg
push
outsb
stc
mov
or
loop
and
push
loopne
testl
fildl
fists
dec
xchg
push
or
xchg
sbb
push
mov
jno
ret
mov
and
push
addr16
arpl
cmp
mov
jae
addr16
mov
out
cmc
cmp
or
mov
mov
push
adc
ljmp
xor
ret
or
xor
repz
jecxz
mov
cli
inc
ds
jecxz
adc
test
in
mov
inc
add
mov
cmp
push
cmpsl
pop
xchg
jns
fwait
cs
push
imul
test
add
test
addb
adc
sub
xchg
bound
js
mov
lock
ljmp
xorb
iret
jmp
xchg
fisttpl
shlb
mov
out
ds
ss
mov
popa
aam
iret
shrl
sbb
ss
lcall
mov
xor
or
add
mov
or
inc
pop
sub
push
dec
mov
xor
xlat
icebp
js
jg
fwait
pop
xor
pop
sbbb
adcl
aam
je
movb
xor
nop
jno
ljmp
aas
mov
aad
pop
mov
sbb
std
mov
xor
ss
inc
sub
and
and
in
add
mov
jne
loop
mov
xchg
cmp
xchg
mov
xor
jmp
push
push
lret
sbb
mov
popl
nop
lods
stos
pushf
pop
movsb
sbb
cmc
int
push
adc
mov
aad
lock
mov
dec
sti
out
adc
or
mov
dec
adc
lds
xchg
stos
sbb
pop
mov
cmpsl
mov
push
mov
int3
repnz
pop
daa
je
add
loopne
out
es
dec
cltd
test
xlat
mov
mov
push
test
aad
jb
jns
and
inc
mov
and
mov
stc
push
push
xchg
push
sub
fcompl
test
mov
jo
rorl
int
dec
push
push
stos
iret
xlat
and
pop
xor
repnz
into
fisubs
das
inc
outsl
int3
fstl
lret
add
inc
dec
mov
dec
int
icebp
mov
jge
nop
lea
fs
repnz
loope
jno
out
test
test
xchg
loopne
sub
mov
cmp
xor
in
outsl
jno
pushf
dec
or
sbb
sbb
ss
lea
and
fcoms
idivl
dec
imul
mov
cmpsb
pusha
dec
dec
lea
push
mov
mov
scas
nop
mov
rorl
adc
pop
in
aaa
and
sbb
or
jnp
sbb
and
mov
jmp
push
cmp
push
jb
sub
jp
mov
inc
add
scas
and
jle,pn
mov
dec
push
push
jo
cmp
clc
ret
sbb
pop
add
mov
xchg
inc
mov
lods
fidivrs
jne
xor
in
xchg
push
fistps
rol
and
xlat
insb
add
and
sbb
cmp
lret
movsl
add
mov
lret
int3
rolb
mov
cmpsl
push
cmp
loope
sarl
imul
cld
dec
pop
fs
cmp
xchg
push
data16
or
das
jle
out
cmp
push
add
aad
pop
cmpsb
call
pop
imul
xchg
push
inc
ds
pop
hlt
shrb
pop
and
aaa
add
xor
pop
cltd
lahf
mov
adcl
or
push
adc
jb
js
jge
push
addl
sbb
adc
jp
sbb
test
fidivl
jne
dec
dec
aad
xchg
fldenv
sbb
test
hlt
pcmpeqw
add
out
rorl
cmc
lret
sub
push
and
mov
cltd
stc
rclb
jl
push
adc
cmc
movsl
insb
fcmovbe
aaa
add
loop
dec
pop
sbb
cmp
lea
and
and
popa
cs
lods
adc
mov
aaa
clc
add
jecxz
lds
mov
scas
lock
out
push
lsl
xor
ret
xor
int3
inc
push
xor
jno
mov
jbe
jl
int
cli
inc
inc
clc
jg
fists
stos
jmp
sub
inc
jae
lds
mov
inc
jnp
rcl
aad
xchg
cmpl
out
loop
mov
int3
add
imul
fs
int3
mov
xor
in
cmp
std
xchg
out
popf
pop
push
and
mov
scas
cmpsb
in
insl
add
in
cmp
in
insl
callw
push
iret
xorb
jbe
iret
les
loopne
jle
test
push
aad
enter
push
aaa
xchg
daa
inc
fcom
popa
nop
in
inc
sub
test
jmp
jns
sub
mov
mov
jno
insb
in
sbb
jl
or
and
enter
push
mov
pop
push
inc
pushf
ret
and
xchg
dec
adc
lret
xchg
mov
lahf
pop
scas
jle
rclb
call
stos
push
mov
pop
enter
repz
aaa
and
add
add
dec
pop
jmp
rclb
push
pop
xor
mov
data16
insl
pop
cs
scas
popf
hlt
mov
and
fcoms
mov
rcrl
xchg
jle
adc
dec
or
cli
stos
stc
imul
jmp
test
mov
leave
add
xchg
xchg
jmp
or
mov
cmp
fwait
mov
scas
mov
cwtl
dec
and
dec
imul
pop
je
sahf
popa
dec
out
dec
xchg
sbb
ffree
fs
rdtsc
test
adc
jb
das
out
out
ret
mov
jnp
cmpsb
mov
lcall
loop
cmp
sub
movsl
jns
push
stos
mov
lcall
nop
call
add
cltd
rorl
pop
inc
mov
add
ja
or
lods
push
dec
in
clc
ja
pop
mov
js
xchg
inc
inc
cmpsl
mov
sti
or
jnp,pn
movb
xor
xor
pop
jb
mov
mov
or
loopne
call
lods
rorb
les
imul
test
stc
add
xor
pop
jl
rcll
popa
lods
xchg
insl
imul
mov
or
test
daa
mov
addr16
mov
setle
xchg
ret
push
imul
dec
les
pop
lret
das
push
add
jp
mov
mov
lahf
cs
jecxz
shl
call
stos
jnp
cld
or
mov
dec
add
ret
push
jle
pop
push
ljmp
cmpsl
rcrb
cwtl
jb
rorl
xor
dec
lcall
sbb
mov
cld
jbe
or
pop
pop
lock
bound
test
or
jmp
xlat
sbb
and
mov
push
scas
nop
ss
add
loop
mov
mov
mov
mov
dec
mov
fwait
insl
jae
divb
sbb
incl
dec
popf
movsb
test
jp
loop
jle
jb
sbb
loop
out
testl
push
div
stos
dec
bound
enter
xor
jp
mov
data16
adc
pop
cmpsl
pusha
mov
sub
xlat
sbb
fmull
xchg
mov
std
sub
ret
lods
and
mov
xchg
jle
lds
jle
mov
ljmp
test
cmp
iret
aas
xor
mov
cmp
mov
cwtl
push
sub
fsubr
mov
rcll
cltd
pop
popf
cs
mov
and
pop
jns
stos
lret
mov
lea
and
rcrb
aaa
imul
test
cmp
push
pop
in
pop
pop
addl
xchg
lock
dec
xlat
sbb
xor
loope
pop
movsb
dec
and
mov
xchg
test
or
cltd
out
pop
inc
daa
rorb
jmp
ja
cmp
mov
xchg
dec
pusha
scas
out
std
aas
imul
and
arpl
push
add
or
ja
scas
cmpsb
mov
xor
sbb
out
push
add
sbb
leave
push
inc
out
xor
aam
jmp
pop
lds
mov
xchg
repz
jmp
repz
mov
push
imul
xor
xor
int
mov
lock
je
xchg
push
push
scas
xchg
insb
das
test
mov
push
mov
sbb
std
js
inc
loopne
das
mov
mov
mov
adc
mov
loopne
jne
cmp
mov
add
clc
pop
mov
int
call
sub
push
repnz
cmpsb
ret
mov
fists
mov
testl
stos
outsb
cmpl
lock
call
mov
dec
scas
cwtl
mov
and
sbb
lds
lahf
sbb
fisttps
leave
xor
cli
stos
jns
pop
aas
fbstp
inc
hlt
or
cmpl
rorl
aaa
test
xor
stos
cli
fsubrs
add
mov
dec
jbe
jnp
into
lds
fistpl
sbb
sub
cmp
das
das
dec
xchg
out
icebp
popf
lea
add
xor
sbb
andl
inc
pop
mov
ja
mov
jl
push
pop
inc
jo
mov
xor
andl
push
and
sbb
and
push
loopne
jl
mov
cmpsb
movsl
and
inc
inc
orb
call
and
or
sti
sbb
cmp
dec
mov
jmp
leave
pop
adc
shll
aam
pop
dec
mov
test
lock
cltd
or
inc
mov
ret
mov
ret
loope
arpl
mov
add
pop
mov
mov
push
in
leave
ficomps
add
hlt
add
outsb
lds
sub
dec
adc
addr16
lock
and
mov
outsb
arpl
ljmp
sbb
das
jno
stos
fisubs
add
bnd
lock
xor
xchg
inc
mov
push
or
jo
ret
rcrb
cmpsl
add
fstpl
pop
pop
pop
xchg
enter
xchg
aas
pop
aaa
mov
sbbl
mov
add
inc
xor
montmul
cmpsb
xchg
push
and
jae
push
push
inc
dec
add
dec
mov
pop
adc
imul
loopne
out
jno
out
or
mov
arpl
nop
and
or
andl
jns
icebp
sarl
mov
outsb
mov
cmp
mov
sub
lock
int
rolb
leave
xchg
std
mov
stos
sub
xor
or
popf
pop
aad
mov
jecxz
push
adc
dec
pusha
mov
sub
hlt
push
mov
mov
xchg
sbb
push
loop
je
sub
jg
adc
daa
fs
bsr
push
dec
div
ljmp
hlt
adc
loopne
in
mov
mov
jg
and
xor
add
adcb
ljmp
adc
jo
push
outsl
daa
fld1
shll
mov
and
xchg
ja
ljmp
fsubl
and
fadds
shll
outsl
pop
je
xchg
and
inc
aad
pop
jno
pop
lea
mov
cmp
rorb
into
shr
mov
ja
pushf
cmpsl
out
mov
sbb
stos
dec
mov
xchg
ret
lea
cld
xchg
jmp
sbb
daa
je
push
repz
nop
push
out
push
pop
pop
xor
jle
xlat
push
and
loope
hlt
push
call
and
mov
inc
lods
or
mov
xor
push
in
sbb
shlb
cmpb
dec
cmp
xor
pushf
stc
call
mov
jnp
shrl
in
xor
dec
or
rcrb
xchg
hlt
mov
mov
xor
and
rolb
xchg
insl
sub
sub
insl
aaa
int
xorb
sub
in
mov
inc
mov
int3
xor
inc
mov
sbb
ret
push
cmpsl
loope
stos
test
mov
push
xchg
push
test
jbe
jbe
push
out
push
mov
fdivrs
pop
cwtl
cmp
push
data16
rcll
fdivs
jmp
fisubrs
mov
mov
call
lret
jl
push
mov
mov
pop
bound
and
cmp
lock
inc
xor
sti
mov
out
bound
movsb
adcl
fisubs
lods
imul
insl
xor
inc
enter
pop
xchg
lret
nop
aam
arpl
pop
add
jne
std
cwtl
test
dec
hlt
jae
movsl
in
mov
mov
cltd
dec
push
inc
pusha
cmpsb
ss
xor
nop
dec
lea
and
dec
incb
jmp
fs
and
xor
decb
fwait
dec
hlt
fstpl
pop
cltd
js
or
and
jmp
adc
jbe
pop
mov
in
out
loop
ds
inc
fistpl
lds
subb
mov
call
mov
sbb
es
xor
inc
jecxz
xchg
inc
insl
into
fcompl
scas
mov
test
dec
shlb
in
ret
in
inc
dec
sub
orl
pop
mov
gs
jb
ret
dec
pop
jecxz
int
movsb
mov
mov
testl
jnp
pushf
and
test
cmp
inc
pop
push
gs
mov
int
daa
fistpl
jae
jg
negl
imul
xchg
jb
outsl
xchg
sbb
inc
mov
and
movsl
test
jae
sub
ror
cld
ret
in
sbb
daa
mov
and
std
addr16
cmp
lret
inc
xchg
test
fcomps
jmp
shr
test
jns
jg
xchg
mov
popa
out
push
lahf
adc
rorl
sahf
adc
rolb
popf
ret
or
push
jne
jbe
ja
pop
mov
pop
shlb
aas
or
mov
and
in
mov
mov
pop
push
push
xorl
sub
sbb
push
jno
movsl
test
sub
pushf
push
push
fimuls
test
xlat
ja
out
outsl
addr16
insl
lods
fnstenv
xor
jns
out
lcall
mov
lds
pushf
jle
push
shll
pop
lcall
inc
pop
mov
push
sbb
mov
mov
cmpl
bound
fmuls
mov
movsl
idivb
int
movsl
test
sub
push
mov
mov
fisttpll
shrb
out
jb
push
lods
imul
scas
jl
scas
push
test
and
and
cmp
xor
push
ss
aam
orb
in
pop
sbb
stos
loop
and
pop
sahf
xchg
or
sub
lock
nop
sarl
dec
xor
ds
push
ljmp
test
mov
jle
addb
cmp
daa
testb
mov
inc
mov
leave
push
sub
data16
and
adc
mov
adc
pop
xchg
mov
pop
mov
mov
xor
and
movsb
loop
cltd
mov
cmp
scas
push
or
or
add
loopne
aad
push
lcall
sub
push
mov
mov
adc
jbe
push
jg
fstl
and
sarb
mov
cli
inc
pop
inc
and
dec
pushf
daa
push
arpl
mov
iret
xor
sub
cmp
xchg
adc
add
lods
dec
push
mov
ret
subb
mov
xchg
inc
cmpsl
sti
or
iret
fmulp
or
sub
sub
out
cmpsl
les
idivb
imul
lods
cmp
xchg
xorb
xchg
mov
cmp
cltd
xor
gs
sub
add
pushf
jmp
adc
scas
fcomps
and
adc
inc
ljmp
mov
lret
mov
cmp
pop
mov
or
lcall
test
hlt
mov
insb
push
adc
subb
ljmp
push
insl
push
adc
rorb
cli
xchg
or
jbe
xchg
out
mov
add
adc
sub
imul
add
loope
and
mov
stos
mov
test
sub
clc
xchg
into
out
or
cmpsl
orb
or
mov
push
dec
jb
es
shrl
shl
lcall
pop
push
add
adc
insl
jb
mov
outsb
cmpsl
fs
and
jl
adc
mov
sarl
mov
leave
add
pop
xchg
push
rorb
cmp
push
sbb
push
or
sbb
iret
pop
adc
dec
jno
adc
stos
lea
movl
inc
xchg
jp
and
loopne
pop
pop
imul
lahf
inc
push
sub
jg
inc
adc
inc
imul
aam
inc
jb
ds
mov
or
push
lea
add
or
cmp
out
mov
les
xchg
sbb
and
arpl
mov
xlat
data16
cli
adc
movsb
sbb
hlt
add
xor
enter
adc
aaa
mov
inc
nop
int3
sub
inc
outsb
cld
jmp
lret
xor
mov
sbb
sub
imul
xor
cmc
add
sub
movsl
dec
fimuls
ss
push
xor
adc
xchg
or
xchg
push
mov
icebp
ja
pop
inc
mov
fnstenv
repz
movsb
aas
lods
add
jbe
fldenv
aaa
jnp
push
mov
clc
ret
std
aas
mov
fnstcw
mov
and
lret
shll
fs
sahf
cmp
out
dec
arpl
scas
stos
xchg
add
jmp
ss
loope
xor
mov
out
mov
and
repz
out
mov
jnp
mov
cli
adc
mov
cmpsl
mov
mov
in
mov
mov
loope
jmp
flds
xor
cwtl
inc
movsb
jle
pop
outsl
into
pop
cs
adc
stos
addr16
inc
and
cltd
cs
rcll
aam
cmp
jno
ss
or
or
jge
hlt
and
dec
pop
push
call
xor
inc
shl
cmp
pushf
push
mov
lret
jo
jecxz
push
push
sarb
pop
shlb
cmp
and
mov
mov
xchg
cmp
mov
and
adc
cmp
pop
fdivrs
dec
xor
sti
adc
fisubs
fs
nop
sarl
cmp
pop
cmp
hlt
ret
lods
popa
daa
imul
cld
xor
dec
call
jno
loop
sbb
cmp
sub
mov
insl
shlb
ljmp
das
jg
pop
xchg
out
shll
shl
cmp
shll
ret
mov
xchg
pop
fwait
jge
popa
cpuid
mov
add
adc
dec
adc
test
add
sbb
and
sbb
arpl
cmc
push
das
lcall
xor
imul
mov
mov
xchg
sbb
cmp
adc
xor
mov
sub
pusha
fmull
or
cmpsb
lock
xor
xchg
adc
daa
rolb
xchg
fnstcw
jp
ret
mov
insb
daa
fiadds
push
or
sbb
movsb
stc
inc
lods
testb
push
push
sbb
sbb
iret
cwtl
push
shll
lret
cwtl
loope
sbb
mov
cmc
leave
mov
mov
jmp
mov
fsubr
aas
inc
push
inc
sbb
xchg
repnz
pushf
inc
cwtl
and
mov
lods
pusha
adc
nop
sbb
ljmp
pop
or
mov
push
sbb
or
or
xor
pop
das
xorl
icebp
imul
inc
xchg
pop
movsb
and
pop
lahf
cmc
push
mov
into
xchg
mov
mov
in
fwait
jecxz
int3
and
xchg
sbb
cmp
out
dec
das
aad
lea
dec
loopne
mov
aaa
ss
fs
lods
pop
xor
add
cltd
adc
clc
inc
sahf
mov
push
jmp
dec
dec
ljmp
andb
mov
push
data16
sbb
aam
loop
pop
addb
adc
xchg
xor
jmp
push
or
insb
int
into
cmpsb
and
inc
cmp
mov
xchg
lock
sub
lret
push
sub
pop
push
repz
inc
stos
cmpsl
outsl
mov
fsubrl
mov
cmp
mov
ficomps
add
outsb
inc
sub
pop
ja
inc
ret
aam
cmp
in
xor
clc
ret
lcall
mov
inc
rorb
je
rorl
leave
xor
sub
jno
push
inc
dec
jecxz
int
loop
and
cs
out
rol
leave
das
add
mov
adc
push
mov
jecxz
cld
test
jae
or
or
sbb
out
bnd
jmp
in
cmovno
mov
mov
xchg
inc
fucompp
repz
ret
pop
cmp
lret
mov
ret
push
push
pop
push
dec
fsts
sbb
xchg
aas
test
mov
test
push
mov
ret
pop
testb
or
and
pusha
jno
adc
lret
into
xlat
fnstsw
sub
pop
dec
das
movsb
imul
pop
mov
jns
inc
push
movsl
cmp
cmc
bound
sahf
adc
stos
mov
ljmp
dec
bound
mov
and
jecxz
mov
insb
aaa
adc
rcll
into
xchg
add
add
je
dec
xor
adc
rolb
mov
imul
emms
testl
xchg
sbb
add
xor
sbb
mov
sub
jbe
jbe
cltd
or
mov
push
dec
xchg
mov
loopne
sbb
ret
jno
je
clc
pop
xor
out
mov
cmp
shrb
movsl
push
rorb
sbb
push
add
cmpsb
pop
pop
shll
mov
sarl
jmp
aaa
push
cmp
mov
or
subl
sub
adc
mov
adc
clc
rcrb
adc
jle
loope
arpl
mov
roll
out
mov
inc
jns
jo
out
popf
mov
outsl
xchg
push
add
add
les
into
rcrb
dec
dec
sub
aaa
stos
movsl
add
daa
inc
xchg
dec
bound
pop
movsb
les
lods
sti
mov
popa
xchg
lods
pop
and
in
les
cwtl
sub
ss
push
loopne
cmp
loopne
mov
xchg
fsubrl
xor
lds
inc
jo
mov
les
daa
lea
in
xchg
adc
jae
sub
xor
sbb
adc
xor
lea
call
call
dec
inc
ss
xchg
dec
clc
dec
aad
ljmp
mov
add
cli
insl
fcomps
loope
adc
push
outsl
push
mov
insl
fwait
mov
jb
sub
ss
xor
loopne
stc
add
rorb
xor
mov
xor
daa
push
into
or
ss
mov
scas
test
jno
or
sbb
xor
inc
pop
sub
jg
in
data16
aas
sbb
jle
nop
daa
lods
in
xchg
vpblendd
call
dec
cmp
test
hlt
xor
dec
pop
or
cmp
fsubs
fstl
insb
push
notl
sbb
pushl
movsl
sti
sub
shl
stos
insb
das
in
pop
inc
and
mov
xchg
out
into
mov
out
sub
inc
xlat
fisubl
mov
lret
orl
xchg
inc
cltd
orb
jle
mov
push
imul
pop
fidivs
add
and
pushf
fwait
les
dec
sbb
mov
jl
sbb
mov
and
push
xchg
mov
mov
dec
add
mov
cmp
cs
mov
push
push
popa
int
fstp
sub
jo
clc
cmp
push
push
sarl
mov
inc
lods
outsl
cmpsb
mov
cmpl
cltd
push
mov
out
push
mov
sbb
inc
in
lret
rcrl
sub
sahf
insl
aam
and
mov
mov
xchg
scas
mov
shll
push
pusha
icebp
push
cmpsb
xor
pop
mov
sub
mov
test
lds
or
pop
fisubl
adc
sbb
or
jbe
mov
movsl
dec
cltd
mov
fsubrl
adc
outsl
jnp
popf
icebp
mov
call
fistpll
int
mov
es
jnp
sub
push
popa
push
insb
movsl
bound
mov
push
mov
mov
int
pusha
adc
cmovns
or
adc
lcall
mov
out
rep
cmp
xchg
sahf
popa
aas
das
dec
push
pop
ficomps
stos
sub
jp
out
sahf
dec
pop
test
in
mov
push
dec
dec
adc
pop
out
xchg
dec
mov
fnstenv
xchg
cmp
mov
rolb
xor
jo
hlt
mov
jp
mov
addb
mov
aam
pop
scas
or
dec
mov
outsl
in
jmp
adc
push
xchg
lds
push
fbstp
out
hlt
movsl
pop
cli
xor
jns
push
and
in
inc
out
xorb
cmpsw
inc
stc
movsb
or
fnsave
xor
sti
shrl
sahf
xchg
jge
adc
insl
push
dec
aas
or
jae
or
popa
stos
jo
bound
pop
mov
lods
lahf
fmulp
pop
gs
fldcw
sub
add
mov
inc
cmp
inc
xor
or
push
fdivs
mov
cmp
xor
out
movb
lods
jno
call
sbb
sbb
orb
ret
mov
daa
faddl
aas
mov
les
jl
xor
outsb
inc
outsl
cmp
inc
popa
shll
mov
jg
jns
movsb
xchg
frstor
push
loop
addr16
push
lock
xor
ret
sub
adc
inc
mov
cmp
and
and
and
push
sti
push
add
cmc
leave
mov
xchg
std
daa
pop
add
mov
and
mov
add
icebp
and
xchg
fnstcw
xchg
aam
and
fdiv
inc
lret
mov
mov
jo
inc
add
mov
iret
mov
lret
sar
aad
fdivl
jp
in
jbe
lods
roll
or
xchg
mov
mov
mov
les
mov
mov
push
mov
add
cmp
cmp
xchg
stos
test
jmp
xchg
push
inc
jae
std
data16
into
inc
jg
sbb
push
test
js
ss
imul
loopne
mov
cld
xchg
cli
in
mov
aas
arpl
pop
cmp
and
or
test
shll
mov
fnsave
nop
fdivrs
mov
enter
fnsave
xlat
mov
mov
sbb
push
dec
xchg
jmp
imul
lods
idiv
shll
and
cmpsl
mov
lcall
dec
fistpl
jg
leave
cmp
mov
inc
mov
into
inc
dec
clc
mov
sbb
cmp
sahf
xchg
fmuls
dec
ret
xchg
xchg
inc
push
leave
push
add
jbe
mov
jle
mov
into
sbb
test
lods
pop
pop
pop
add
fsubl
ss
xor
pop
std
push
jg
dec
lret
dec
mov
out
pop
inc
pop
push
and
xchg
fs
hlt
push
popa
xchg
xor
jae
xchg
lret
les
mov
cmc
clc
adc
dec
mov
iret
add
push
or
mov
fldl
in
sarl
cld
stos
push
testl
imul
add
shrl
fmuls
push
dec
jp
xchg
or
fiaddl
lcall
insl
mov
lods
mov
outsl
xor
fwait
sbb
add
sub
and
mov
pop
fnstcw
sub
push
inc
mov
cs
pusha
add
jle
push
jne
sub
or
int3
jmp
push
outsb
loopne
inc
arpl
repnz
aas
and
int3
hlt
mov
xchg
jecxz
xor
mov
mov
fwait
mov
xor
or
rorb
and
loope
cmc
in
popf
lods
jg
push
cs
sub
mov
pop
mov
sub
in
mov
testl
inc
arpl
mov
sarl
jno
push
pop
inc
cwtl
and
or
inc
in
out
test
sbb
ss
das
fisttpll
daa
fwait
jp
add
cmp
sub
push
jg
and
xchg
shrb
cmpsb
jns
adc
inc
mov
mov
xchg
xchg
dec
pusha
add
push
or
sbb
pop
popa
jp
test
in
dec
push
test
ret
mov
pminsw
mov
mov
cwtl
fmull
xchg
push
ds
in
pmuludq
orb
xchg
pop
mov
aas
jae
outsb
loope
fisttpl
pop
cmpsb
pop
fisttpll
xchg
push
and
add
sarb
jmp
ret
inc
flds
das
xor
mov
idivb
push
imul
add
dec
mov
int
inc
add
inc
leave
repnz
jge
and
pop
pop
mov
xchg
test
addl
jmp
adcb
mov
mov
mov
pop
or
shrl
dec
lret
cmp
push
push
push
nop
pop
divl
lcall
mov
adc
adc
add
loop
sub
mov
mov
rep
adc
dec
lret
push
inc
inc
xor
fwait
add
add
cmp
jecxz
push
ja
mov
div
movsb
int
jb
arpl
pop
jmp
mov
mov
and
ds
push
jg
dec
outsl
lret
dec
and
mov
sub
jns
add
xor
std
xor
push
xchg
aaa
test
cli
xchg
jg
or
leave
inc
out
xlat
test
jo
dec
push
pop
dec
lods
lock
sbb
pop
push
pop
enter
cmp
cmpsl
xchg
sub
lea
ror
fidivl
fistl
jnp
xor
add
and
sarl
int
mov
mov
cmp
push
push
fcomi
xchg
jecxz
dec
pop
jecxz
cmpsb
cld
inc
jmp
push
jae
and
mov
shl
ret
les
jo
mov
mov
outsl
mov
in
xchg
out
iret
addr16
sti
add
mov
cmp
push
jae
test
pop
xchg
sub
inc
jge
mov
test
mov
daa
inc
sbb
add
into
adc
jbe
loop
cmpsb
mov
enter
shrb
jns
jno
nop
mov
xorl
pushf
dec
mov
cmp
mov
pop
lahf
ror
cmp
pop
cmc
push
ds
pop
or
sub
arpl
sbb
lea
sub
sahf
fimuls
ljmp
sbb
dec
jmp
lds
cltd
mov
jecxz
sub
leave
call
fists
clc
dec
mov
rorb
cmp
ss
or
stc
aad
lret
mov
xor
idivb
mov
mov
jg
and
add
adc
pop
dec
pop
xorl
movsl
addr16
test
out
or
movsb
cmp
pop
cli
lahf
iret
int3
fimull
push
inc
fdivrl
lods
mov
pop
jmp
mov
enter
push
cmp
das
mov
sub
mov
repz
lock
jmp
jnp
loopne
out
sti
lods
bound
loope
xlat
out
addr16
aaa
dec
mov
xor
xchg
mov
es
fstpl
adc
cmp
pop
out
lret
inc
fs
mov
fiaddl
push
sbb
add
fimuls
cmpsl
cmp
setbe
dec
jo
jae
push
jno
jge
and
test
and
cmc
icebp
mov
sarb
and
imul
pusha
out
js
mov
sahf
and
jp
jb
sahf
or
jecxz
jl
lcall
insl
lea
loopne
loop
mov
push
fsubrp
enter
dec
popf
jmp
fildll
leave
jnp
adc
ret
fists
xchg
int
loop
out
add
xchg
mov
push
divb
xchg
and
icebp
xchg
pushf
fidivrl
nop
sbb
jnp
push
divl
pop
cli
fsubrl
cmp
mov
out
pushf
int
cmp
add
idivl
pop
or
pushf
jae
movsl
pop
sub
shrl
or
jg
ljmp
xor
scas
push
stos
into
test
mov
pop
cs
pop
push
leave
std
ljmp
sbb
cltd
imul
sub
leave
cmpsb
push
sub
sarl
pop
cmp
dec
aaa
pop
push
movsl
mov
mov
cmpb
insb
dec
inc
fidivs
xchg
dec
push
orb
aam
push
inc
add
es
out
jns
or
mov
mov
sub
stos
ja
dec
or
scas
clc
sti
in
ds
enter
sub
add
stos
scas
push
xor
jecxz
insl
aaa
add
mov
sbb
or
sub
in
jl
loopne
xchg
mov
in
adc
aad
fsubl
xchg
ret
adc
inc
push
jb
cmp
push
std
push
adc
out
cmc
sbb
addr16
xchg
and
mov
and
adc
xor
shrl
jb
lods
clc
push
ds
cs
xchg
cmp
xor
loopew
adc
out
mov
xor
mov
out
inc
mov
sbb
dec
arpl
xchg
cmp
and
push
cli
xchg
jae
sbb
inc
stc
daa
movsl
pop
cmp
lcall
cltd
mov
mov
dec
pop
add
pop
push
cmc
mov
gs
daa
imul
nop
push
fistpl
add
fisubl
in
lret
out
pop
fstp
cmp
inc
test
andb
or
test
mov
mov
cltd
aad
out
push
ss
mov
inc
sar
cwtl
mov
dec
mov
pop
cld
pop
jbe
flds
mov
lds
cmpsl
ds
loopne
mov
and
push
rcrb
jns
mov
push
cmp
inc
inc
nop
mov
pop
loopne
inc
and
inc
mov
daa
cli
mov
dec
je
jp
jae
mov
push
xchg
ja
fwait
iret
xrelease
cmc
mov
test
adc
push
in
sub
and
adc
mov
imul
sbb
mov
rorb
test
fwait
adc
mov
push
push
test
enter
test
cmc
shll
in
lret
lock
sahf
in
aaa
loopne
xor
sahf
push
dec
lock
mov
mov
rcrb
sarb
in
orl
push
jecxz
das
in
lods
add
dec
jae
or
xor
stos
inc
jge
lcall
push
cmp
cmp
ja
scas
push
jg
sti
or
jp
push
sub
rcll
addr16
faddl
test
fwait
loop
int
shrb
les
pushf
out
ficomps
pop
mov
push
bound
push
jnp
mov
mov
mov
or
cli
mov
cmp
adc
std
jge
arpl
pop
push
pop
out
sbb
cmp
call
sub
mov
shrl
adc
push
sti
xchg
fcompl
cmp
cs
rcr
dec
mov
dec
adc
fadds
aam
addr16
popa
sbb
mov
enter
pop
ret
movsb
mov
push
sti
xchg
cmp
mov
int
aam
in
aam
or
cmp
movsl
push
je
sbbl
jb
int3
jns
fnstcw
js
ret
add
inc
cmp
fwait
ss
sti
aad
mov
dec
pop
push
int3
cmpsl
push
movsb
je
in
cltd
pop
cmpsl
sti
xchg
pop
dec
or
fists
xrelease
das
inc
jg
orl
cwtl
jno
aam
jmp
fisttpl
adc
jge
mov
popa
push
push
fisttps
mov
mov
lods
pushf
cmpsb
ficoml
jae
cli
stc
fcomip
sub
aas
inc
fdivs
cwtl
inc
out
scas
xlat
dec
pop
imul
loopne
adc
mov
aam
mov
fcmovnu
sarl
jl
shlb
test
lea
loopne
cmp
stos
xor
cmpsb
ja
mov
mov
sbbl
nop
aam
pop
in
es
xor
fdivl
js
jg
pop
dec
cli
jne
decl
scas
pushf
cmpsb
adc
sbb
hlt
imul
cmp
cmpsb
in
outsb
cmpsl
in
call
pop
cmp
popf
xor
leave
lahf
or
out
ret
filds
xchg
jns
xor
mov
sahf
pop
aad
jnp
cmp
lret
fisubs
inc
lods
pop
xor
bound
and
lahf
mov
lahf
dec
jecxz
inc
imul
out
sbb
out
in
test
les
jbe
xchg
frstor
in
lea
cltd
inc
xchg
sahf
shlb
rcrl
add
in
lret
fdivrl
xchg
outsb
mov
scas
jo
aas
into
mov
sbb
push
and
fdiv
or
dec
mov
and
stos
sbb
mov
jno
popf
lods
xchg
sbb
shll
inc
and
jno
clc
push
dec
lfs
inc
lcall
imul
xchg
std
test
mov
std
out
lds
pop
or
loopne
dec
lea
xchg
mull
outsb
jl
aaa
mov
cmpsb
test
fs
ret
cmp
inc
or
clc
insb
insb
outsb
es
notl
xor
movsl
cmc
adc
push
cmpsb
cmp
insl
cwtl
xor
pop
mov
in
shl
jl
add
test
shrb
inc
lods
call
cmp
stos
rcr
popf
push
mov
test
inc
aam
and
sub
test
mull
mov
cmpsl
popf
cwtl
dec
jle
loop
cld
mov
repnz
cli
push
popf
stos
and
fisttpl
and
icebp
mov
sub
lret
test
jno
mov
mov
jbe
outsl
ljmp
lahf
rol
out
jae
push
das
push
out
sub
xor
mov
or
lret
xchg
nop
mov
aam
lea
cwtl
addr16
inc
aam
and
std
pushf
lret
hlt
mov
ljmp
push
dec
xchg
call
lahf
adc
xchg
mov
mov
pop
cmp
fcmovnbe
les
and
shl
inc
pop
and
jb
jb
jns
mov
scas
inc
and
out
mov
mov
imull
dec
xchg
loopne
jbe
jo
push
enter
jnp
ss
jns
enter
cmc
add
xor
ss
outsb
jge
dec
fcompl
pop
enter
jge
stos
les
les
jp
sub
mov
fucomi
ret
pushf
pop
stos
push
hlt
into
out
fldcw
mov
pop
inc
mov
movsb
and
and
sbb
movsb
sbb
lods
mov
shll
lods
add
inc
rclb
roll
xchg
push
or
pop
insl
icebp
lcall
sbb
inc
dec
push
aam
xor
mov
or
loope
mov
out
dec
pop
or
mov
xor
test
inc
pop
fs
jg
loope
flds
cmpsb
in
mov
in
push
rorl
incl
xchg
pushf
pop
mov
sbb
sub
lret
sbb
cmp
add
add
sbb
mov
daa
pop
mov
adc
in
ret
mov
lock
push
insb
pop
aam
xchg
mov
test
xchg
mov
out
jg
inc
xlat
rol
movsb
mov
dec
jb
jecxz
or
cmpl
sbb
adc
xchg
inc
mov
sbb
jg
lahf
gs
fisttps
mov
adc
or
aam
jbe
sbb
out
and
mov
sbb
lea
jae
repnz
push
sub
xchg
mov
push
inc
iret
repnz
jne
lsl
mov
scas
aad
and
popf
push
jne
sbbl
and
mov
or
push
popf
lods
inc
jle
cli
mov
lahf
ljmp
int
lods
sub
pushf
int
loopw
fwait
xchg
cmp
sbb
mov
inc
jno
add
cmp
movsb
loope
dec
mov
clc
orb
pop
dec
xchg
stos
push
gs
push
cmc
pop
das
mov
mov
xchg
mov
fdivs
and
pop
js
jmp
push
arpl
loop
mov
sarl
cmp
inc
xor
pop
in
imul
mov
pop
sub
jecxz
lahf
mov
jmp
int
pushf
cmp
repnz
iret
mov
xchg
or
sti
stos
movsl
add
cld
or
or
hlt
leave
sub
xchg
add
mov
mov
loopne
out
mov
rcll
das
adc
mov
mov
dec
inc
dec
lock
sbb
or
cwtl
outsl
inc
mov
and
nop
inc
pop
jmp
jmp
xchg
data16
scas
mov
clc
pop
xor
popa
pop
push
sub
nop
pop
cmp
adc
dec
rorb
push
cmpsb
frstor
xor
add
pop
mov
popa
adc
or
adc
cld
and
xor
jns
sub
dec
cwtl
sbb
dec
dec
jnp
cmp
fwait
dec
jnp
dec
pop
ja
mov
mov
adc
adc
jb
fnstcw
pop
mov
mov
push
fst
nop
pusha
jno
xor
add
shr
push
mov
movsl
xlat
xor
imul
call
cmp
aad
jne
jmp
stos
nop
lods
shrl
jne
rcrb
jmp
and
mov
cmpsb
dec
rolb
jecxz
xchg
and
enter
notl
aas
or
les
pop
clc
mov
ja
dec
mov
dec
mov
sub
jp
or
pop
mov
push
jne
xchg
dec
lods
jnp
inc
popa
test
mov
push
dec
mov
outsb
insl
std
movsb
cli
and
jle
inc
pop
jmp
adc
jbe
xchg
cld
bound
lret
int3
movsl
adc
inc
mov
js
cmp
int
dec
xchg
push
sub
mov
test
call
psrad
xor
adc
add
test
pop
in
into
nop
jno
es
enter
sbbl
dec
jae
inc
das
lahf
dec
loop
ss
aas
adc
sub
jmp
jl
arpl
call
decb
in
pop
jo
pop
push
test
jle
xorb
xchg
add
ja
iret
sbb
test
mov
lods
sbb
sbbl
xchg
shll
ss
sbb
mov
ffreep
lcall
jl
lcall
test
dec
popf
and
xchg
xchg
inc
jle
mov
inc
sbb
idiv
inc
cmp
jns
adc
daa
jge
push
cwtl
or
fdivrl
mov
fsts
out
pop
nop
daa
int3
xor
dec
inc
das
mov
lods
repz
je
sub
or
mov
mov
not
insl
and
xchg
cmp
out
jge
movsb
repz
pop
clc
push
mov
mov
lret
lock
aas
leave
xchg
sarl
lea
cmp
push
out
ret
push
dec
jns
add
stos
pusha
shrl
in
js
adc
arpl
hlt
mov
dec
sub
push
push
imul
jl
mov
inc
js
cmp
lret
imul
scas
popa
sbb
push
cli
push
out
jns
sub
pop
lock
push
repz
les
push
jnp
ret
out
and
lock
mov
shrl
or
movsl
jbe
pop
jae
pop
add
cmc
push
mov
mov
adc
ret
scas
and
inc
mov
ret
xor
dec
jg
jecxz
adcl
icebp
ss
add
in
ds
sbb
xor
cld
adc
mov
xchg
and
clc
imul
adc
mov
popf
loop
push
sub
pop
js
xlat
add
dec
loope
jge
mov
pop
nop
and
or
adc
cli
sbb
sub
rclb
data16
push
psadbw
mov
lret
or
mov
icebp
js
icebp
leave
xor
mov
sbb
push
dec
jae
push
test
iret
mov
in
sbb
mov
call
stc
mov
das
pushf
es
mov
jne
inc
imul
push
xchg
mov
sub
inc
stc
dec
sbb
ja
sti
fisubl
push
dec
lock
push
dec
cs
jbe
loopne
ret
sti
imul
and
mov
ljmp
mov
jmp
jne
je
mov
xor
xor
xor
enter
popa
iret
repz
lods
bound
sub
int3
inc
ret
popf
jns
pushf
adc
ret
lods
in
fwait
xchg
push
mov
mov
cmp
lret
adc
cmpb
or
sub
iret
nop
cmp
dec
mov
mov
sbb
xor
iret
cmp
movsb
xchg
popf
icebp
xchg
leave
xchg
mov
lods
ds
dec
gs
mov
mov
lcall
jge
xor
mov
mov
in
cmc
mov
sahf
mov
xchg
pop
cmp
pusha
or
stos
sub
imul
xchg
lcall
sub
adc
out
inc
stos
cmpsb
sbb
mov
mov
xor
push
loopne
mov
sub
scas
stos
lock
fadds
dec
sub
movsb
sub
decb
scas
sbb
cmp
dec
sbb
mov
inc
inc
mov
inc
sub
sub
xchg
sbb
dec
or
lret
aam
pop
mov
aaa
popfw
outsl
push
jge
popf
mov
into
in
aam
iret
test
inc
jns
inc
aad
lds
push
clc
scas
pop
and
push
int
lret
add
dec
jg
jns
pop
fs
mov
xlat
dec
sar
pop
push
jb,pt
and
and
out
lahf
adc
sub
lcall
in
out
test
shl
lret
and
sarb
ret
pop
into
mov
cmc
adc
stos
mov
sub
ret
adc
push
mov
cmp
mov
pop
lahf
or
std
pop
lahf
clc
jmp
fdivp
xchg
dec
xor
xchg
push
sub
scas
fstps
cwtl
arpl
inc
adc
inc
jg
jg
xchg
mov
inc
push
push
or
push
mov
jge
mov
inc
cmpb
divb
mov
or
cmp
inc
bound
mov
dec
mov
divl
xchg
inc
gs
stos
lret
repnz
sbb
clc
stos
dec
in
popa
mov
xchg
mov
mov
pop
ss
imul
cmc
push
insl
faddl
fxch
jl
mov
das
xchg
or
out
fstpt
add
ljmp
pop
pop
sbb
dec
push
pop
mov
add
or
inc
fldl
cmp
scas
loope
subl
push
mov
mov
xchg
adc
hlt
push
push
jo
loopne
dec
dec
push
mov
xor
or
icebp
xchg
push
enter
mov
inc
sbb
xor
in
divl
add
popa
lds
xchg
push
fistl
sub
fisubs
iret
sbb
icebp
or
or
pop
cli
dec
fs
xchg
pop
mov
and
jp
inc
ds
mov
aam
rcll
jae
adc
lock
in
mov
or
and
fmul
xor
test
loop
insl
popf
mov
popf
pop
lahf
ss
out
mov
push
sahf
lods
dec
mov
iret
adc
lods
push
mov
mov
fidivrl
lea
push
dec
xor
jo
push
test
stc
lret
jp
shl
sub
cwtl
xchg
outsb
jbe
push
mov
pop
sbb
lods
inc
nop
xor
enter
aaa
repz
imul
ret
pop
pop
push
xchg
mov
sarl
call
cwtl
lret
mov
lcall
and
sbb
jns
cmp
cmp
idiv
add
lods
sarl
push
add
add
ret
mov
das
adc
pop
es
inc
popa
cmpsb
loope
push
inc
test
mov
pop
sbb
lahf
into
xor
insl
mov
sub
push
popf
pop
push
xchg
mov
dec
mov
or
lods
pop
fistpl
add
sub
in
and
pop
dec
pop
sti
test
or
adc
dec
jmp
sarl
fstps
popa
inc
rcr
dec
sarb
xor
out
gs
ss
lret
xorl
mov
outsb
addr16
notl
or
je
mov
jns
movlps
repz
or
mov
call
pop
inc
fiaddl
call
cmc
xor
rcrb
fdivrl
aad
stc
mov
push
push
jns
out
cmp
into
shrl
jle
cmpb
out
fwait
and
imul
gs
inc
mov
xchg
inc
sbb
sbb
aaa
xor
push
jge
ja
into
push
shl
cli
repz
push
xchg
rcl
push
lcall
call
cltd
fs
mov
lods
dec
sar
pop
adc
jnp
pushf
and
adc
mov
ds
dec
or
fwait
sarb
sub
jmp
jb
jns
test
push
aas
push
rcrb
ret
mov
pop
aas
repz
jnp
jne
adc
clc
jecxz
repz
mov
lods
lcall
ret
inc
mov
cmp
aas
in
jo
or
push
stos
movsb
out
jp
lahf
repnz
enter
pop
mov
or
scas
add
or
pop
inc
jecxz
xchg
fld
in
ds
imul
lahf
fstsw
xchg
ret
lret
aas
xor
mov
cmp
jno
push
leave
dec
inc
push
inc
xchg
add
dec
fildl
xchg
cmpl
ror
repz
movsb
add
sbb
and
fmuls
add
adc
cmp
xchg
xor
jbe
pop
mov
inc
dec
mov
cmp
xchg
test
lock
push
mov
inc
gs
xor
push
cmp
mov
inc
mov
push
inc
in
iret
mov
bound
test
sub
fisubrl
and
and
jae
daa
adc
iret
addb
xchg
ret
lahf
lcall
sti
nop
xchg
sub
mov
fwait
cld
mov
ret
sbb
adc
outsb
movsb
sbb
test
lods
cmp
cltd
xor
xorl
fdivrl
js
add
pop
fbstp
popa
cs
sbb
jb
jmp
sahf
or
mov
sbb
lods
or
aad
fidivrl
aas
imulb
mov
repnz
in
inc
loop
mov
cmp
mov
sahf
sub
dec
sarb
popa
dec
push
pop
lret
jne
sbb
xchg
xor
pop
ret
xchg
add
popf
pop
popf
cmp
in
outsl
and
push
das
and
sub
imul
push
cwtl
adc
aad
and
test
inc
les
or
mov
test
mov
sbb
sbb
imul
pop
shl
add
adc
lret
xlat
or
sahf
iret
mov
loopne
push
mov
mov
scas
mov
mov
and
or
scas
fs
stc
arpl
sbbl
jbe
testb
ret
mov
lock
lret
daa
in
mov
and
dec
sub
out
xchg
push
adc
dec
inc
movsb
inc
mov
mov
xor
push
jns
cmp
jmp
sbb
jbe
jbe
lret
imul
push
inc
xchg
int3
shl
dec
outsl
data16
mov
cmp
inc
out
mov
cmc
cmp
fucomip
adc
cmpsl
cmp
scas
jnp
pop
jle
data16
into
mov
cmp
jne,pn
shl
xchg
lods
lcall
xchg
jg
xor
leave
leave
mov
icebp
xor
inc
subb
mov
ss
mov
dec
push
hlt
sbb
cmp
iret
xor
fwait
gs
push
push
jbe
sub
jecxz
stos
mov
sarb
out
enter
inc
xchg
push
jmp
xchg
pop
hlt
add
mov
aas
pop
mov
mov
test
xchg
xchg
adc
pushf
pop
stc
mov
pop
insb
cmp
scas
fdiv
sbb
lods
mov
fisubl
mov
cmp
outsb
inc
sbb
enter
adc
sub
push
decb
dec
lret
cmp
sahf
push
dec
popf
mov
imul
icebp
sub
fwait
subl
hlt
sbb
ja
or
xchg
cld
imul
mull
xchg
lock
inc
push
divb
pop
insl
pop
gs
and
stos
test
mov
sbbw
movups
shll
adc
gs
enter
outsb
fcompl
arpl
sbb
insb
jns
aaa
xchg
cld
mov
inc
mov
or
jg
das
dec
adcl
inc
ljmp
cmpsl
and
push
pusha
clc
adcl
add
fnstcw
std
jns
xor
arpl
daa
dec
neg
ljmp
mov
xlat
mov
cmpsl
xor
lret
cs
mov
in
add
push
out
pusha
add
mov
xor
cmp
mov
xchg
adc
icebp
je
pop
cs
mov
xchg
or
push
sub
mov
lock
leave
or
stos
and
popa
fincstp
aam
xchg
pop
pop
sub
clc
sub
adc
enter
aas
sbb
xchg
out
mov
sar
inc
sbb
mov
jge
addl
in
rorb
or
lret
mov
cmp
push
roll
xor
lret
clc
jecxz
sarl
cmpsl
sbb
adc
mov
lcall
ret
dec
sti
sub
movsb
add
repnz
or
shrl
dec
cmp
or
rorb
es
les
xorl
jne
out
adc
xchg
mov
incl
scas
push
mov
test
ljmp
repz
out
cltd
shlb
nop
add
call
xchg
jns
sti
hlt
mov
mov
xchg
dec
push
imull
out
repnz
data16
mov
cltd
mov
add
mov
push
jp
inc
jg
sub
adc
jge
loope
cmp
jns
imul
dec
ret
jle
fidivrs
cmp
mov
subb
xchg
push
icebp
xor
outsl
adc
sub
pop
pop
int
jecxz
arpl
jne
stos
fistps
sub
push
pushf
sahf
incl
mov
test
fistpll
dec
xor
push
mov
ja
mov
xchg
adc
mov
adc
mov
adc
lock
lods
ret
popf
into
mov
or
cmp
jmp
repz
stos
or
test
xchg
jne
inc
jmp
mov
sbb
adc
adc
jne
push
dec
jne
mov
stos
jmp
insb
mov
jno
xchg
inc
cmpsl
loope
pusha
pop
mov
push
lea
inc
lods
data16
xchg
cwtl
inc
jl
movsb
mov
lcall
fstpl
jl
loopne
jne
shrl
repz
jl
fisubrl
add
fisubl
and
enter
cwtl
cmp
frstor
add
lahf
mov
xchg
shrb
cltd
out
jae
mov
ljmp
xor
xchg
mov
pushf
in
fnstenv
movsl
int
sub
xor
call
dec
test
jg
sbb
xchg
int
fsubl
pop
cltd
xchg
cwtl
add
xchg
std
test
aam
repnz
out
push
stos
incl
sub
pop
add
pop
ror
inc
test
push
fs
add
imul
das
or
lock
mov
inc
adc
sub
mov
scas
mov
add
lret
lret
gs
sub
test
or
add
mov
ficomps
lods
push
cmp
mov
cli
jle
shrb
jp
mov
shr
pop
cmp
xchg
push
es
jo
mov
das
popf
xor
sub
and
je
idivl
sti
orb
inc
cmp
inc
popa
mov
cmp
add
mov
psllq
mov
ret
test
or
fnstsw
imul
cld
push
cwtl
out
sahf
mov
cs
push
outsl
inc
and
clc
fdivs
xor
xor
fcoms
pop
sbb
mov
subl
add
push
sbb
loop
pop
xchg
inc
movsb
jmp
sub
in
or
pop
pmaxsw
mov
fucomi
adc
fstp
pop
pop
cmp
in
and
cltd
cmpl
imul
test
cmp
lock
add
daa
lret
adc
mov
inc
test
cmp
sub
js,pn
ja
xor
sub
xchg
arpl
hlt
push
xor
mov
clc
pushf
scas
dec
leave
loopne
and
jmp
test
xchg
xor
xchg
pop
inc
int
adc
jae
mov
xchg
pop
dec
add
jl
cmp
mov
rcrb
test
and
fimuls
rolb
mull
jb
dec
mov
es
xchg
push
lahf
faddl
pop
mov
or
jnp
movsb
xor
or
pop
cmp
dec
or
jmp
jbe
add
sub
test
inc
sbb
scas
stos
out
cmp
rorl
push
rcr
mov
aam
outsl
mov
mov
data16
adc
movsb
inc
or
or
pop
pop
sub
ffreep
imul
stc
pop
inc
in
inc
test
inc
clc
mov
aas
jno
jle
push
add
mov
mov
subl
cmovno
hlt
sti
int3
pop
cmpsb
cwtl
loope
add
xchg
ds
xchg
mov
jnp
int
dec
fldlg2
daa
push
mov
test
aaa
lcall
divb
sub
push
lods
push
lock
int
mov
mov
jo
sbb
add
or
sbb
int
imul
stos
call
out
incb
aas
ds
bound
jbe
push
iret
mov
mov
xchg
pop
fisubrl
jno
cmp
test
or
push
lea
xchg
dec
iret
dec
xchg
add
sub
push
mov
fistpll
sub
orb
popf
dec
push
divl
aad
ret
in
jnp
add
add
das
lea
inc
imul
andb
fstpl
movsl
fs
jg
pop
movsl
std
mov
shrb
bound
pushf
push
das
shl
pop
push
repnz
out
xchg
mov
out
inc
sbb
ret
das
mov
adcb
aam
xchg
push
sbb
inc
jns
lret
fadds
call
push
enter
arpl
sbb
outsl
cmc
jno
jns
adc
sub
push
cli
dec
fstl
xchg
into
in
test
mov
and
fwait
adc
nop
enter
fs
xor
cmpsl
xchg
notb
jns
daa
sahf
sbb
jecxz
or
enter
test
loop
cs
dec
or
adc
inc
das
push
xchg
repz
stos
insb
pop
inc
pop
push
cmp
imul
cmp
jle
jl
ret
add
pop
push
pop
jmp
pop
js
adc
loop
inc
aam
ret
mov
cmp
jg
cltd
inc
xchg
inc
pop
xchg
movsl
dec
cmpsb
cmp
mov
stos
lods
dec
add
and
es
int
into
dec
cli
jbe
adc
xchg
test
pop
adc
and
ja
and
jp
sub
jmp
jecxz
mov
push
xor
inc
icebp
aaa
cmp
sbb
and
std
iret
fs
sbb
fwait
xor
jnp
sub
or
inc
xchg
adc
push
and
or
adc
rclb
and
push
std
adc
js
add
cmp
hlt
lock
adc
fnstsw
aad
mov
jae
xor
rcrb
les
jle
mov
rol
sbb
xchg
rol
cli
cmp
out
mov
or
movsl
pusha
aam
cmp
pop
add
pop
cld
pop
outsl
ss
inc
sub
scas
scas
jne
xor
inc
dec
xlat
aam
jg
jle
sbb
loope
adcl
xchg
push
push
inc
sbb
decb
mov
lcall
mov
testl
ret
mov
out
sub
inc
scas
jp
jl
insb
dec
lcall
cwtl
out
into
roll
cmpsl
mov
sub
or
add
jmp
jge
std
adc
sub
mov
in
lahf
xchg
pop
xchg
sbb
and
cwtl
xchg
insl
shl
xor
push
fsubl
push
sbb
pop
push
loope
in
sarb
in
test
mov
je
pop
mov
mov
call
insb
jecxz
data16
jle
fiaddl
xor
xchg
out
inc
mov
push
inc
pop
dec
add
pop
jge
add
xor
cli
js
rolb
mov
insb
addr16
sbb
test
es
inc
addr16
push
jne
in
out
pop
lret
movsb
mov
jns
outsb
dec
cmpsl
adc
clc
add
cld
mov
daa
notl
jb
fldt
jae
mov
inc
push
xor
add
sub
and
or
push
leave
jno
ret
mov
popf
leave
push
jbe
adc
jecxz
mov
xor
pop
dec
js
les
cmp
sti
push
mov
mov
mov
loope
jmp
dec
push
add
cmp
lea
ffreep
pop
das
sub
loopne
jae
lods
cld
pop
mov
mov
and
jo
cld
mov
sub
popf
mov
xchg
or
mull
and
incb
mov
xchg
das
lock
data16
stc
xchg
sbb
mov
xlat
push
sbb
adc
push
ret
jno
test
push
mull
bswap
loopne
rcrl
pop
cmp
shlb
xor
push
xchg
add
push
push
xchg
cmpsb
ja
insl
testl
cli
notb
out
mov
testb
mov
mov
int3
cmpsb
xchg
ljmp
fwait
shlb
adc
imul
fwait
push
ret
jno
or
jae
inc
cmpsl
pop
rolb
pushf
pop
clc
sbb
pusha
sti
adc
and
jge
das
xchg
cmp
std
mov
movsb
jae
push
mov
decb
mov
mov
mov
scas
int
and
shlb
outsb
repz
bound
dec
or
adc
test
xor
mov
xchg
add
add
lods
xchg
pop
mov
das
push
mov
sbb
push
popf
push
xchg
dec
pop
jb
stc
or
xchg
in
mov
push
jns
xchg
push
inc
add
jno
icebp
inc
outsl
mov
outsl
ror
out
and
pop
xor
fs
inc
jae
lret
idivb
hlt
xchg
sub
ljmp
mov
push
loop
inc
icebp
enter
sarb
das
adc
shll
push
mov
cmp
daa
dec
imul
lods
popa
cltd
jmp
xor
movsb
mov
mov
cmp
lods
gs
notb
mov
es
adc
loope
xlat
test
in
and
jge
je
and
rcl
dec
xor
insb
shl
mov
jnp
or
pop
sub
lcall
sub
and
dec
cmp
xor
or
sub
mov
pop
pop
pop
cmp
lds
inc
enter
ja
adc
cld
addl
stc
jne
dec
xor
sub
push
mov
jmp
enter
adc
mov
dec
jno
xchg
test
loop
in
sbb
insb
cmp
rorb
cld
and
push
push
iret
xchg
push
in
dec
dec
into
or
cmpsb
clc
movsl
repnz
arpl
and
adc
lock
jne
mov
hlt
dec
loop
pop
cmpsb
push
add
jo
mov
pop
stos
fcmove
add
fmul
sahf
das
aam
adc
pop
cld
mov
imul
and
cmp
sarl
je
cmpsb
js
mov
jp
xor
ror
jo
jge
pop
mov
in
lock
xorl
in
pop
push
stos
jo
xchg
fsubl
and
or
pop
icebp
mov
testb
jl
mov
or
mov
lea
sbbb
push
mov
mov
js
lods
fsubl
xor
adc
inc
mov
rcrl
jmp
xchg
dec
jo
loop
cmp
pop
xchg
mov
sbb
xor
fsubrs
fs
xchg
in
mul
dec
cmp
and
and
subl
or
pop
xor
pusha
out
mov
lods
xor
fistps
aas
add
fstp
leave
test
jl
outsb
push
pop
outsl
xor
daa
icebp
and
xor
shlb
and
pop
sub
dec
adc
push
xor
cmp
mov
stos
pop
cld
in
xchg
ret
or
ret
or
fidivrl
pop
pop
stc
cmpsb
mov
dec
outsl
jb
mov
mov
fimuls
cmp
jmp
push
ret
sbb
push
and
je
adc
adc
loop
add
mov
xchg
je
xor
movsb
cmp
pop
call
int
pop
in
arpl
mov
cld
pusha
lods
mov
and
mov
test
mov
mov
mov
cmpb
mov
ss
mov
jno
mov
scas
dec
mov
push
inc
dec
les
or
imul
xor
sub
movsbl
mov
push
or
mov
call
stos
dec
sub
cmpsb
leave
pop
data16
in
mov
add
fadds
inc
sbb
pop
rcr
fcoml
mov
nop
jge
lcall
add
insl
jb
pop
mov
loope
adc
leave
fwait
popa
enter
popf
rcll
sub
dec
ds
leave
and
dec
mov
push
subl
std
sbbb
mov
push
test
mov
repz
sub
ss
push
sbb
sbb
and
xor
mov
movsl
sub
sbb
ficoms
int3
sti
pop
inc
dec
and
add
div
jb
sbb
mov
lea
xor
fs
jmp
aaa
push
aas
fs
js
repz
aaa
and
sub
cmc
inc
scas
jae
push
pop
xchg
hlt
dec
sbb
cli
int
lahf
in
jb
subl
jmp
xchg
in
lahf
push
fadd
icebp
stc
mov
push
fsubrl
pusha
push
jo
and
dec
pop
stos
mov
cmp
mov
mov
movsb
test
ss
mov
jle
popa
push
les
push
push
and
inc
lods
and
mov
out
xor
dec
out
jbe
and
push
inc
jp
rsqrtps
sub
sub
mov
xchg
add
dec
bound
test
ss
pop
xchg
jne
jl
inc
movsl
shlb
sbb
jge
inc
inc
rcl
mov
mov
xor
aas
sub
pop
aaa
outsl
popf
sub
sub
mov
mov
and
cs
leave
cmp
sbb
jmp
fwait
outsl
pop
mov
outsb
mov
xlat
and
jge
push
sub
fwait
cmpsl
inc
stos
js
stos
mov
test
push
jo
scas
xchg
xor
mov
inc
ret
cwtl
pusha
negb
jecxz
adc
xchg
testl
mov
xor
cld
add
fsts
fnstenv
test
cmp
adc
pop
mov
pusha
add
jmp
repnz
jno
mov
push
dec
mov
je
mov
pop
popf
shl
jecxz
and
add
jmp
fnstcw
adc
shl
bound
and
pop
xchg
mov
iret
movsb
push
lods
jb
or
das
scas
aad
xchg
push
push
mov
sbb
icebp
or
or
loope
arpl
lcall
sbb
mov
inc
loope
xor
arpl
mov
loope
aad
test
leave
loopnew
jne
jae
sub
insb
sub
xor
aaa
decl
sbb
or
mov
inc
xor
mov
add
scas
dec
jl
or
push
fnsave
mov
fistl
sub
lahf
out
push
xchg
mov
push
push
lea
jmp
inc
mov
pop
fcoml
sahf
add
mov
jno
stos
hlt
js
lock
in
imul
mov
xor
fistl
mov
aas
dec
or
mov
fs
dec
mov
add
and
mov
movsl
or
fucomp
jb
in
call
insl
mov
sub
xchg
lods
fs
mov
dec
in
fs
mov
mov
stos
jae
mov
sbb
jnp
scas
mov
cmp
push
inc
pop
mov
mov
pop
push
imul
add
dec
mov
mov
pop
bound
cld
adc
cmp
mov
nop
jmp
mov
lret
mov
not
jns,pn
add
repz
sbb
dec
push
out
mov
jo
aad
es
xchg
pop
or
dec
xor
gs
cltd
bound
pop
xlat
xchg
cmp
loopne
adc
pusha
lods
das
insl
jns
lea
push
into
fmul
enter
pusha
or
hlt
pusha
loope
inc
pop
dec
iret
add
jnp
hlt
lock
inc
fs
dec
test
dec
ss
add
jge
gs
ds
lock
lahf
jp
leave
andl
rorb
je
fsubrs
mov
or
das
xor
das
mov
out
fdivrs
sahf
insb
mov
inc
push
add
push
add
jbe
jl
loop
pop
xchg
xchg
cmc
pusha
dec
test
and
xor
mov
movsb
add
movsl
mov
jo
int
stos
sub
add
lret
jg
repnz
pop
mov
hlt
xchg
or
pop
sbb
push
mov
jnp
mov
pusha
lahf
ret
shlb
pop
or
sbbl
call
add
push
fistps
mov
scas
xor
adc
das
pop
cmp
out
notl
jnp
add
jne
mov
and
add
adc
add
loope
popf
xor
sub
out
jae
shl
xor
mov
in
ficomps
xorb
jmp
gs
mov
adc
int3
add
jns
daa
mov
push
jne
and
orb
inc
fcomps
xchg
test
sbb
push
sub
addb
cmp
push
xchg
imul
and
inc
int
lret
push
sarl
pop
scas
dec
cmp
adc
mov
cld
sbb
mov
mov
xchg
lods
pop
rolb
jb
add
stos
cmpsb
or
movsb
jg
sub
jne
call
scas
shr
faddl
pop
lods
lods
dec
out
lret
xchg
cmpsb
cmp
sub
pop
insb
or
pusha
bnd
push
jp
lahf
xchg
jmp
out
aas
xchg
bound
xor
jae
fmul
mov
mov
add
dec
jnp
mov
and
cmpsb
xchg
mov
and
pop
pop
cmp
std
fldt
roll
lcall
aas
shl
ss
in
mov
iret
das
xor
mov
adc
cmp
inc
scas
iret
ret
je
mov
xor
mov
lock
testb
adc
mov
and
fucomip
into
arpl
fisubrl
push
adc
ss
aam
in
lods
push
cmp
inc
lock
or
sbb
push
mov
out
xor
cmc
mov
leave
pop
inc
jecxz
insb
mov
xor
pop
xchg
fwait
push
sahf
mov
mov
sbb
mov
outsl
adc
push
mov
fdivrs
stos
test
and
lret
incl
jp
dec
push
cld
push
jl
int3
lock
or
jae
sub
aad
fidivl
dec
insb
pop
int3
adc
cmp
xor
xor
dec
xchg
lret
repnz
push
inc
dec
sub
mov
sbb
repz
pop
dec
clc
sub
fcompl
xchg
into
fs
sti
xor
icebp
ficompl
add
dec
dec
cld
pop
test
cmpsl
xchg
rcl
addps
ret
in
pop
xor
xchg
bound
dec
test
jns
mov
fwait
cmpsl
mov
mov
fiadds
push
sbb
or
scas
cli
cmc
and
arpl
lds
rcr
fisubl
cld
enter
or
push
mov
lcall
ret
mov
dec
jns
mov
stos
nop
fiadds
pop
call
inc
loopne
movsl
mov
inc
aaa
aaa
cs
in
push
xor
mov
out
fadd
hlt
jle
mov
out
inc
and
cmp
inc
clc
sbb
adc
cli
cltd
inc
sub
sahf
test
dec
xchg
inc
dec
out
dec
mov
shl
scas
ss
jne
push
dec
aaa
xorb
inc
out
pop
xchg
int
dec
lods
out
add
or
shrl
ds
stos
ret
imul
mov
cs
lahf
mov
daa
dec
test
aam
inc
cmovns
dec
outsb
arpl
sbb
sbb
push
mov
mov
and
mov
fsubrs
jge
mov
xchg
push
fwait
test
jmp
xchg
clc
hlt
xchg
mov
mov
add
aam
ja
xchg
jle,pt
pop
mov
les
stos
cmp
in
fistpl
push
test
lods
leave
mov
test
arpl
xchg
imul
std
mov
add
idivb
inc
jno
fwait
cmp
add
aas
les
xchg
pop
int3
nop
jmp
push
daa
test
fists
dec
rclb
fimuls
or
sbb
sbbb
idiv
lahf
mov
stc
dec
mov
mov
xor
lahf
and
loop
inc
insl
lcall
mov
sahf
sub
pop
add
in
test
test
pushf
pop
adcb
fisubl
out
loop
pop
testl
sub
hlt
cmp
loopne
jns
dec
mov
test
adc
adc
cmpsb
aam
std
dec
scas
cli
test
mov
sbb
push
add
xor
stc
pop
push
movb
mov
pushf
sbb
sub
or
xor
adc
xchg
xchg
cmp
add
shlb
test
les
sahf
add
nop
stc
lea
into
cmpsb
sbb
rcr
adc
jae
push
daa
clc
and
jl
pop
lods
mov
xor
cmp
push
adc
sub
arpl
orl
xor
xchg
xchg
movsb
add
hlt
int
and
inc
sbb
mov
dec
arpl
mov
dec
lea
push
mov
popl
cwtl
add
cmp
in
or
pop
inc
ja
daa
hlt
xor
test
cmc
inc
aaa
pusha
mov
xor
js
jb
js
out
insl
stc
lcall
in
inc
lahf
pop
mov
push
mov
jmp
insl
sbb
mov
loope
out
aad
dec
dec
fdivs
mov
push
push
inc
addr16
lahf
mov
addr16
push
xchg
outsl
jecxz
sbb
cltd
adc
lret
into
xchg
lock
test
ljmp
in
orb
mov
cltd
dec
popa
dec
shll
inc
fsub
lcall
add
xchg
sti
ljmp
dec
pop
add
xchg
xchg
jmp
lds
ficoml
mov
jmp
xchg
int3
sub
int3
je
mov
sbbl
push
dec
incl
ljmp
in
clc
push
mov
clc
jg
jbe
dec
fdiv
test
cmc
outsb
pop
clc
push
negb
mov
call
icebp
cmc
out
add
add
dec
adc
sahf
inc
aad
sarl
and
stos
in
stos
fdivrl
and
js
test
lret
and
insl
out
int3
xchg
inc
jbe
xor
xchg
ss
xor
js
or
insl
mov
cmp
jno
clc
pop
sub
mov
xor
nop
pop
sub
rorb
nop
repz
cmp
sbb
data16
push
cmp
clc
loop
and
pushaw
mov
jns
pop
out
in
enter
mov
shrl
test
es
mov
inc
jge
les
or
rcll
pop
sbb
lcall
xchg
insl
inc
call
jmp
hlt
push
std
jns
stos
inc
mov
pop
outsl
clc
addr16
pushf
aaa
xor
jae
add
jmp
mov
sub
dec
pop
push
jmp
jmp
lahf
pop
jb
shrb
sub
dec
sahf
aas
scas
sahf
es
lock
jne
jmp
mov
or
std
ja
lea
andl
xchg
inc
push
andb
or
sub
fiadds
mov
and
xchg
scas
and
aam
insb
lahf
and
adc
xrelease
adc
jp
jmp
xchg
xlat
mov
pop
jo
xor
cmpsl
lods
pushf
adc
sbbb
lcall
scas
lret
mov
adc
mov
ficompl
xchg
inc
dec
mov
jnp
repnz
les
add
and
pusha
push
sahf
fnstcw
inc
pop
lock
adc
repz
mov
sub
xchg
push
add
daa
outsb
sub
jne
jp
loop
pop
dec
mov
push
dec
mov
mov
sahf
in
in
or
jp
xor
leave
push
sbb
scas
sbb
clc
jle
lods
pop
bound
adc
cmp
dec
add
js
push
jbe
and
mov
ret
popf
push
mov
arpl
mov
xor
ja
scas
cmp
push
pop
pop
stos
jmp
cli
lcall
mov
xchg
sub
mov
add
cltd
out
push
inc
lea
sub
dec
dec
pop
jle
ds
cld
mov
repnz
add
ret
pop
dec
stos
leave
sahf
xor
pop
mov
push
mov
lods
jb
clc
test
mov
mov
mov
shrl
mov
dec
push
mov
pushf
mov
das
mov
push
adc
sbb
mov
fwait
adc
inc
or
pop
mov
sbb
pusha
in
sbb
xor
mov
mov
imul
and
fs
idivl
mov
add
mov
fildl
sti
add
test
jmp
xor
iret
push
stos
int3
jle
cltd
add
loope
inc
fildl
mov
dec
test
jae
gs
incl
stos
test
mull
sbb
inc
push
int3
mov
arpl
sahf
lahf
cmc
pop
sub
sbb
sub
push
add
scas
or
sub
in
pop
xchg
fidivrs
adc
notb
les
sub
sub
rcrl
adcl
push
fdivr
lea
jo
mov
cmp
stc
movsb
pop
std
push
sub
cli
pop
call
into
xor
dec
fldt
lcall
pop
mov
arpl
dec
mov
in
sbb
dec
xchg
add
or
push
jnp
sbb
stos
popf
inc
mov
jb
pop
fisttpll
outsl
lret
les
mov
mov
adc
mov
dec
pop
lods
xchg
loope
loope
movsl
sub
clc
test
mov
mov
das
lea
cltd
test
lea
sbb
jl
loop
subl
inc
les
lcall
pop
shr
ja
or
add
mov
mov
enter
out
inc
test
dec
jge
scas
pop
mov
adc
dec
xchg
out
push
sub
lds
outsl
aaa
scas
pop
ja
dec
movsb
push
pusha
and
sub
lahf
clc
jl
sbb
ljmp
mov
sub
rol
cmpsl
sbb
movsb
adc
and
push
adc
divb
sub
jo
mov
mov
adc
aam
or
fidivrs
arpl
ss
jno
fdivrl
in
mov
cli
clc
lods
and
shl
notb
aad
je
and
jmp
sub
add
js
mov
adc
add
mov
pop
aad
call
dec
xchg
fs
mov
scas
or
arpl
rorl
arpl
push
jle
loopne
cmc
dec
mov
or
push
mov
cmp
or
jns
mov
test
test
mov
dec
mov
mov
add
bnd
xchg
push
mov
jecxz
dec
aas
mov
or
mov
cmpsl
aas
sar
cmp
test
stos
lods
dec
xchg
sub
xor
mov
and
sbb
test
in
icebp
inc
cmp
in
cli
daa
xchg
xor
push
mov
mov
lock
sahf
adc
repz
cmp
in
sarb
add
xor
popf
add
out
sbb
jae
pop
dec
add
jno
push
out
pop
mov
aad
ret
into
or
ret
mov
lahf
xor
push
insb
imul
out
inc
movsl
jge
cmpsl
sbb
je
out
clc
loop
xor
adc
inc
sub
xor
dec
adc
popa
out
pop
pusha
lcall
outsb
sbb
mov
xabort
mov
stc
sti
add
jno
std
pop
dec
ss
inc
xchg
xor
pop
cwtl
and
and
cltd
sub
out
dec
xchg
rcrl
jge
xor
ds
call
and
ret
cmp
ss
loop
test
sbb
jo
rcr
xchg
pusha
shll
and
fsubrs
jb
fcompl
lods
out
or
push
xchg
ss
lods
or
jb
lods
adcl
stos
mov
mov
push
mov
repz
or
mov
mov
int3
ret
add
frstor
aam
sahf
mov
test
icebp
movsl
or
jmp
fstp
sti
sahf
sbb
jg
mov
cmc
lods
out
mov
clc
pop
int
fldcw
push
enter
repnz
or
xlat
pop
aas
cmp
and
push
out
jg
xor
popa
add
push
in
lret
mov
mov
mov
or
adc
and
movsb
xor
shl
jmp
arpl
lahf
jle
jle
out
nop
fcmovnb
adc
jbe
aaa
int3
or
mov
add
dec
push
test
mov
xor
xor
xlat
out
xchg
mov
popf
mov
jne
out
and
jg
xor
repnz
pop
outsb
lahf
or
popf
adc
mov
jmp
adc
mov
pop
gs
pop
xor
pop
sbb
pop
js
mov
int
xchg
stos
rcr
dec
jnp
or
mov
mov
pop
sub
cmc
mov
stos
mov
ds
std
out
pusha
jmp
push
mov
or
cmpsb
scas
aam
ret
or
outsl
add
push
outsb
xor
imul
call
jae
sbb
imul
pop
hlt
outsb
popf
push
scas
das
xchg
ret
movsb
outsl
jne
adcb
adc
cmp
add
fs
adc
jmp
sbb
mov
pop
clc
or
mov
inc
addl
repnz
adc
es
ja
push
inc
shlb
mov
and
mov
imul
dec
xor
xor
mov
icebp
fists
sub
pusha
inc
fnclex
cwtl
mov
and
out
test
xor
mov
mov
je
mov
test
loope
push
mov
xlat
inc
xchg
addr16
inc
mov
leave
dec
jnp
sti
mov
xor
lods
ds
mov
mov
cmp
inc
shlb
jg
mov
sub
push
insl
mov
xor
fsubrs
out
iret
pop
sub
mov
cmp
mov
and
add
push
jb
mov
jge
adc
movl
or
and
clc
es
jno
cmp
sub
jl
cltd
mov
dec
addl
cmpsl
push
xchg
ljmp
push
mov
cmp
repz
jle
lret
mov
mov
or
pusha
divl
pop
mov
pop
ds
jle
jecxz
ljmp
loop
lods
xlat
adc
cmp
and
push
xchg
les
cmp
stc
cltd
cli
inc
pop
inc
daa
xor
dec
jp
xor
pushf
ljmp
push
xchg
mov
aam
shl
xlat
jbe
daa
push
pushf
cmp
pop
lods
out
inc
cmp
out
insb
das
push
int3
icebp
adc
inc
data16
jae
nop
mov
out
inc
cmp
adc
mov
sbb
sarb
xor
popa
xlat
pop
jnp
xchg
int3
sub
mov
mov
fs
mov
sbbb
stc
daa
or
pusha
mov
add
xor
xor
xchg
jbe
in
xchg
xor
sbb
or
mov
jp
mov
cmp
cmp
cwtl
and
pop
pop
int3
jns
test
shll
inc
les
sbb
mov
fs
outsl
out
pop
nop
call
das
mov
lds
stos
into
ficoms
cltd
xor
sub
es
int
cmp
sub
push
dec
jg
test
xor
shlb
pop
movsb
or
roll
fwait
xor
lcall
mov
call
loope
jns
inc
int3
and
jmp
jp
rcrl
mov
aad
mov
pop
fdivr
das
mov
scas
cmpsb
ret
adc
jno
push
int3
ss
into
insl
sarb
out
push
test
cltd
push
mov
daa
rol
mov
dec
out
loopne
add
push
stc
pop
inc
dec
pop
test
jmp
idivb
cltd
repnz
dec
jns
jecxz
sarl
xorl
mov
imulb
clc
int3
faddl
mov
xlat
bound
mov
add
or
mov
jl
sub
push
sti
aas
loop
outsb
repnz
cld
xchg
sbbb
sarb
dec
sub
ja
aad
cmpl
jne
jg
add
mov
adc
jbe
push
das
ljmp
hlt
ds
sub
jl
inc
pop
incl
mov
addl
jp
xor
movl
dec
pop
int
sahf
in
mov
clc
cmp
push
jp
pop
mov
shlb
jae
mov
xchg
jno
push
or
xchg
sub
push
xor
and
and
inc
in
incl
sarb
pop
aaa
and
jp
fwait
dec
pop
imul
ds
rcr
test
cmpsl
sbbb
mov
pop
out
int3
loope
push
jg
sbb
loope
xchg
std
sub
sbb
es
jnp
pop
adc
fidivs
push
sub
adc
sub
and
cmp
add
es
mov
int3
cmpsl
sub
pop
sub
arpl
ret
fsubrs
fs
roll
or
sbb
or
imul
std
pop
bound
xlat
cmpsb
inc
test
rcr
cmp
popf
ss
stos
cmc
lret
mov
mov
xchg
adc
mov
xchg
mov
adc
push
pop
mov
adc
movsb
test
stc
mov
and
in
dec
aaa
sbb
inc
pop
pop
sti
sub
mov
sbb
filds
jb
cmp
jb
ja
pushf
or
sarb
xchg
les
adc
push
add
in
iret
pushf
int3
test
jg
dec
test
xor
push
pushf
mov
sbb
in
mov
mov
insb
sbb
pusha
adc
adc
mov
adc
push
leave
sbbb
imul
aaa
clc
jle
aad
sub
mov
xorb
add
mov
xchg
and
jo
je
inc
and
stos
das
xor
loope
or
ficoml
pushf
push
pop
out
pushf
loop
leave
add
fsubrs
mov
aas
jae
negl
mov
xchg
sbb
pop
loop
movsb
pop
dec
imulb
rcrb
add
iret
or
xor
xchg
mov
andb
sbbb
das
and
lcall
gs
inc
adc
jae
or
xchg
xor
add
or
xor
lret
aas
mov
in
std
movsl
jl
ret
and
in
pop
iret
rclb
popf
pop
stos
jo
daa
bswap
and
add
icebp
and
ss
ljmp
fnstcw
pop
enter
add
sarb
icebp
addr16
push
mov
sub
mov
cs
adc
mov
sbb
adc
aas
cltd
jge
add
pop
in
lahf
clc
andb
push
inc
adc
sbb
adcb
data16
ficoms
cs
pop
pop
addr16
dec
mov
leave
mov
or
lods
cwtl
jb
and
add
cld
mov
adc
dec
iret
out
test
sub
cltd
mov
push
jle
dec
das
push
add
inc
std
push
xor
fldl
sbb
lret
sub
repz
add
lahf
jae
xchg
popa
fstps
out
mov
loop
test
xlat
push
int
enter
in
sub
dec
and
icebp
mov
stos
ret
or
je
call
mov
mov
shlb
aaa
cltd
inc
mov
lret
pop
ss
pusha
ss
xor
mov
popl
int
jne
xor
push
sub
or
jecxz
cs
rcrl
addr16
inc
notl
std
loope
out
test
inc
mov
pop
inc
daa
pop
adc
mov
outsb
mov
push
ret
daa
xor
adcb
mov
jl
outsl
push
mov
arpl
xor
jb
push
cmp
jno
dec
iret
ds
rorb
mov
cmp
ret
imul
mov
test
cmp
ficomps
pushf
cltd
mov
xchg
push
cmp
into
into
sub
outsb
lock
push
inc
jp
sub
cmp
lcall
fidivrs
mov
mov
adc
jl
sbb
clc
adc
iret
andl
cmpsl
lock
jmp
sbb
test
cmp
divl
ss
lcall
je
jecxz
mov
aaa
ljmp
xchg
lea
test
out
xor
jns
sub
sub
dec
fs
mov
ficompl
ss
lcall
xadd
int
push
sahf
cwtl
inc
iret
rcrl
out
call
xor
cltd
ret
pop
pusha
out
shrl
in
insb
adc
jae
jg
xorb
cmp
out
addl
das
or
xchg
and
sub
xor
mov
mov
push
addr16
push
bound
xchg
imul
xchg
je
dec
hlt
dec
jns
sub
mov
adc
mov
adc
mov
dec
ljmp
xor
xchg
sarl
in
out
pop
pop
mov
shrl
jne
and
xchg
sub
cli
ja
idivb
push
add
ficompl
mov
cmpsl
inc
enter
jl
or
lret
lret
jo
movsb
orb
mov
hlt
jae
mov
and
and
cmp
adc
or
push
in
scas
cmp
loop
out
roll
jge
mov
inc
sub
jg
or
sub
mov
cld
cli
mov
jno
popf
jmp
mov
lock
or
mov
sub
xchg
add
loop
cmpsb
lcall
cld
mov
aam
leave
push
sub
mov
add
pop
xor
sbb
inc
sbb
jge
iret
das
rcrb
andb
jle
idivb
movsl
mov
sbb
cmp
mov
into
clc
ret
push
imul
js
scas
adc
inc
nop
scas
mov
out
in
test
mov
mov
mov
or
loop
xchg
push
loope
hlt
mov
call
dec
cmp
fmuls
cmp
lock
add
dec
int3
pusha
dec
or
pop
or
cmp
shll
outsl
lret
xorb
loop
shr
inc
in
and
or
stos
icebp
cli
lea
push
loop
stc
xchg
pusha
das
jae
mov
sahf
lret
push
cmp
nop
xchg
enter
cli
out
or
incl
dec
loope
mov
push
sub
adc
jp
icebp
lods
lea
add
addr16
ljmp
aad
mov
lock
add
cli
and
mov
fs
fmull
dec
xlat
jmp
in
cwtl
mov
fcoms
sub
add
add
xor
xor
stos
lea
insl
out
fcomps
in
inc
iret
adcl
lods
pop
or
repz
cmc
nop
mov
outsb
inc
test
scas
xchg
lret
cmp
push
dec
add
dec
lret
pop
dec
call
xor
aad
negl
mov
xlat
cmc
lret
out
int
xor
push
push
in
movsb
sub
sbbl
movsl
add
cmpsl
test
repnz
push
xor
shl
shl
inc
aam
mov
jbe
inc
dec
nop
roll
pop
mov
fnstenv
out
xchg
jb
daa
push
ret
cmp
fsubs
xor
sub
aas
lcall
ss
mov
xchg
add
push
fisubrl
aam
pop
das
adc
and
sbb
cmp
mov
adc
and
jno
lret
push
mov
jno
and
dec
mov
outsb
mov
push
frstor
mov
aad
inc
mov
imul
jmp
ficoml
daa
insl
mov
and
mov
aam
jae
jg
or
mov
outsl
sbb
cmp
xor
pushf
leave
mov
sbb
pop
jge
imul
arpl
sub
lock
push
mov
mov
inc
xchg
inc
clc
mov
pop
mov
out
test
cld
dec
lods
sub
lcall
loopne
cmpsl
test
pop
dec
cmp
inc
add
sub
or
mov
jae
shlb
push
dec
scas
inc
inc
ficompl
adc
pop
jl
outsb
push
jbe
xchg
inc
push
xchg
inc
sbb
insl
test
stos
and
sbbb
lcall
xor
dec
ss
leave
fsubrl
faddl
push
fisubs
neg
lock
repz
popf
xchg
lea
out
sub
je
jno
int3
cmpsl
pop
pop
cs
clc
cmc
mov
sar
inc
lea
pusha
shll
hlt
cli
xchg
mov
movsl
addl
xchg
mov
out
or
test
movsb
jo
jg
cmp
cmp
rcll
outsb
stos
fdivrl
leave
test
sub
mov
icebp
xorb
cmp
xlat
dec
xlat
jg
adcb
pop
xchg
repnz
jnp
repnz
mov
sbb
out
je
mov
inc
sbb
fcom
fsubp
mov
cmp
cmp
mov
in
ret
push
scas
test
lret
lret
lds
out
out
enter
pop
jbe
outsb
in
je
inc
xchg
ss
mov
mov
pusha
sbb
nop
mov
lret
xchg
nop
ficoml
or
stc
adc
adc
mov
outsl
mov
mov
ljmp
sbb
jl
add
push
adcb
out
sbb
adc
inc
scas
in
test
push
sbb
xor
mov
cmpsl
stos
and
and
fwait
lea
pop
pop
dec
push
push
bound
cmp
lahf
scas
imul
push
ja
stos
pop
adc
xchg
negb
mov
ja
mov
lcall
jp
sbb
shl
push
cli
incl
bsf
sub
out
adc
sbb
sbb
xchg
or
inc
movsb
jecxz
jg
push
outsl
pusha
xchg
sub
sub
sub
adc
js
fwait
lods
out
aad
outsl
jb
mov
adc
inc
or
popa
dec
jge
push
movsb
or
in
adc
aad
arpl
call
jb
sbb
xor
into
add
pop
btr
xchg
pop
mov
push
xlat
inc
cmp
xor
jge
lock
sbb
dec
dec
test
aaa
and
xchg
cmpsl
xchg
addr16
add
ret
inc
fidivs
dec
adc
nop
cmpsb
insl
and
push
repz
sbb
push
rclb
inc
mov
mov
out
mov
inc
push
mov
cwtl
imul
pop
test
rcr
inc
sahf
lahf
pop
inc
push
mov
popa
add
es
jae
mov
lods
pop
mov
push
cmc
push
je
fldl
pop
mov
cmp
addr16
mov
mov
jecxz
jmp
xchg
cli
out
mov
sbb
in
out
out
mov
add
dec
xchg
jne
cld
adc
movsl
test
je
loope
mov
mov
in
mov
pop
jge
mov
adc
jns
sbb
mov
flds
icebp
orl
sbb
sbb
add
out
les
lock
xchg
pop
pop
jne
lret
movsb
mov
pop
mov
sbb
inc
addr16
fwait
push
cmpsl
jmp
sub
jmp
gs
mov
sbb
mov
subb
fdivr
mov
nop
fxtract
mov
in
jge
mov
cmp
mov
push
cmp
dec
mov
or
mov
mov
inc
stos
jl
cmc
dec
adc
inc
dec
cwtl
mov
push
outsb
movsl
imull
xchg
sti
mov
icebp
dec
pop
bound
cld
xchg
lds
inc
movsb
ljmp
aad
and
adc
pop
and
mov
mov
aam
push
xchg
faddl
mov
adc
pop
cmp
fwait
sbb
rclb
popf
push
sbb
xor
leave
repnz
mov
adc
std
jne
mov
es
dec
lea
icebp
jae
lret
stc
mov
inc
adc
xchg
xchg
pop
movsl
insb
leave
cmpsb
pusha
sub
lcall
cwtl
test
lcall
out
jo
mov
xchg
movsb
frstor
pop
bound
push
mov
dec
xchg
subb
ljmp
enter
jmp
and
fadd
in
addr16
lea
daa
jge
pusha
jne
mov
arpl
mov
mov
and
hlt
int3
shl
jmp
xor
mov
sub
push
pop
cmpb
fadd
xor
fmul
push
push
push
mov
mov
xlat
mov
aas
mov
dec
idivl
adc
sub
rcl
jb
mov
inc
inc
add
out
jg
orl
pop
mov
mov
mov
js
jno
into
sti
out
jl
mov
enter
pop
inc
jecxz
jg
jmp
movsb
iret
shl
adcb
pushf
xchg
push
inc
jns
movsl
jecxz
fcomp
out
ret
pusha
inc
xor
add
mov
mov
arpl
xchg
sbb
lds
xor
nop
mov
push
pop
xchg
adc
repz
rolb
nop
and
sbb
pop
jl
rcll
xchg
repnz
lods
cltd
out
sbb
jmp
mov
inc
cmp
aad
or
mov
in
add
call
cs
add
loopne
movl
enter
push
in
jge
bound
bound
add
sahf
into
dec
mov
lcall
iret
outsl
pop
sub
aad
sqrtps
mov
fidivrl
mov
mov
fdiv
push
iret
sbb
call
insb
int3
xor
je
mov
mov
popa
stos
rcl
loop
mov
xor
mov
or
cmpb
mov
mov
clc
nop
in
into
sub
mov
and
pop
mov
cmovnp
jecxz
push
shl
cltd
sub
rcrl
sub
and
add
push
fbld
xchg
sub
mov
xchg
push
cld
cmp
adc
cmp
negb
cmpsb
popa
inc
ret
push
jl
lock
pop
lret
movsb
push
xlat
dec
in
mov
cli
fsubrl
scas
cmp
mov
mov
cmp
sbb
sbb
and
rcll
sub
je
xchg
arpl
adc
rcr
scas
out
test
rol
std
mov
mov
loope
mov
add
adc
mov
add
mov
mov
imul
sbb
jle
push
mov
cmp
add
mov
iret
icebp
push
insl
mov
mov
sti
mov
cmc
and
add
push
test
cmp
out
ss
lock
stos
ret
stos
adc
sub
pusha
push
mov
es
mov
mov
xchg
mov
daa
lea
add
and
in
aam
pusha
sub
mov
xchg
jae
scas
repz
dec
dec
mov
popf
lods
xor
push
mov
scas
leave
aas
gs
push
ret
and
adc
dec
pop
mov
add
or
xchg
sub
fwait
insl
jge
or
int
test
jg
fdiv
jecxz
ljmp
loopne
je
push
sbb
adcb
notb
inc
xchg
fdivrl
dec
cwtl
stos
xlat
pop
dec
inc
and
aas
xchg
insl
dec
das
inc
aas
pop
xor
ljmp
mov
pop
ja
mov
int
mov
sub
pop
and
add
pop
jl
xchg
xchg
ficoml
iret
push
mov
out
mov
daa
mov
int3
shl
shl
mov
lods
pop
mov
mov
fsubrs
jecxz
cmp
loopne
mov
jle
loopne
jb
int3
mov
iret
ret
jecxz
inc
xchg
push
shll
jle
rep
jl
push
into
sahf
jmp
xchg
scas
lahf
mov
xchg
xchg
pop
pop
cld
or
sbb
ja
cwtl
jle
xchg
mov
decl
mov
inc
mov
cmc
xchg
xor
mov
lret
jg
fsubrl
adc
pop
mov
push
gs
lea
mov
pop
and
mul
das
or
test
jecxz
mov
and
ljmp
cwtl
cltd
aam
mov
daa
rorb
inc
mov
aam
das
push
in
add
or
roll
mov
xchg
gs
adc
fisubrs
cmp
pushf
into
cld
daa
addr16
leave
sub
iret
cmp
xor
xchg
pop
test
inc
in
or
decb
mov
int
enter
push
cmpsl
iret
out
add
int3
mov
dec
push
test
inc
xchg
push
mov
adc
inc
sbb
push
int
lahf
mov
cmp
movsl
jg
enter
scas
cltd
hlt
mov
in
xchg
inc
sub
cmp
fs
aam
mov
imul
xor
mov
mov
mov
stos
rclb
pop
sbb
inc
pop
stos
test
fstps
push
dec
icebp
xchg
loope
arpl
mov
aam
popa
das
cmp
sbb
mov
pop
lret
push
or
outsl
xor
lret
xchg
ja
cmp
rcrl
add
cld
scas
fldcw
sahf
ret
pop
jmp
dec
inc
jae
popa
shll
rcll
xchg
rclb
jnp
faddl
adc
outsb
cmp
jmp
std
imul
out
xor
jns
arpl
pop
lds
add
push
cli
sti
std
dec
aaa
rolb
stc
aam
jge
xor
iret
jp
sbb
mov
xchg
pop
gs
sub
jle
int
cmp
add
push
pop
push
dec
stc
es
mov
out
dec
insl
out
and
pop
repz
cld
movsb
or
dec
xchg
dec
pop
jl
sbb
out
dec
inc
sbb
pop
cs
sbb
xchg
es
adc
lahf
inc
and
jnp
push
dec
data16
js
fisubl
mov
xchg
mov
les
add
cmp
jae
jl
outsb
hlt
mov
jl
sub
mov
rcr
dec
pop
in
pop
add
decl
aam
push
push
mov
pop
fisttpll
jle
loopne
mov
fnstcw
inc
idivb
push
std
cs
mov
add
adc
enter
or
lret
imul
sub
dec
into
add
fdivs
mov
popf
pop
push
popa
popa
inc
jge
adc
jbe
push
cmp
xor
xor
pop
call
iret
ror
js
sub
push
push
out
add
in
add
movsb
negl
mov
inc
ret
shll
insl
jecxz
add
and
cmpb
imul
fstpl
jne
mov
cmp
add
test
mov
and
push
and
pop
pop
fldenv
rorl
scas
dec
nop
enter
scas
adc
sbb
mov
scas
cmc
dec
cmpsb
enter
int3
mov
rolb
lods
and
inc
push
loopne
fcompl
or
mov
mov
sbb
mov
push
xchg
add
ret
outsb
fsubp
cmc
push
enter
fildl
jg
cmp
adc
cmp
out
inc
loop
sbb
mov
pop
jg
mov
pop
test
xor
jnp
push
sarb
mov
ss
outsb
mov
or
popl
jne
push
pop
aad
movsb
and
or
or
cmp
das
jmp
jecxz
xor
jo
decl
adc
ror
imulb
fidivrl
xchg
clc
jg
mov
push
xor
xchg
pop
dec
pusha
or
push
sub
aas
xchg
mov
and
outsb
xor
jo
shrb
xchg
dec
cmp
add
int3
jle
sahf
insl
cmp
mov
pushf
data16
lret
dec
mov
dec
sub
sub
adc
xor
lods
mov
sub
and
add
mov
jmp
ss
ret
mov
cld
xor
sbb
lret
in
mov
jge
cmp
nop
loope
push
cmp
fdivs
insl
add
in
jns
push
js
add
jnp
push
jge
push
jne
inc
cli
out
or
std
addb
roll
mov
hlt
aaa
pop
out
xchg
pushf
jne
sbb
mov
cmpsl
dec
fcmovbe
cmp
popf
sub
lods
adc
sbb
aaa
cltd
push
adc
je
jp
arpl
in
adc
sub
movsl
jne
inc
add
fwait
mov
mov
out
dec
pop
sbb
andl
jae
lock
mov
dec
push
stc
cmp
inc
call
hlt
sub
subb
add
lea
aaa
mov
sub
loopne
imul
lret
sub
push
pop
mov
add
scas
cld
pop
mov
fisubrl
int3
les
mov
ret
dec
xor
cmp
xor
lahf
adc
pushf
ret
sub
cmp
dec
aad
lds
mov
int3
cmp
movl
adc
push
pop
xchg
scas
mov
scas
and
arpl
jmp
ljmp
mov
aad
gs
xchg
or
or
and
cli
xchg
push
dec
daa
add
pop
pop
leave
out
ficoms
dec
lods
lret
loopne
dec
add
add
imul
popf
jnp
mov
pop
stos
pop
push
pop
les
push
ljmp
mov
cli
in
pop
arpl
jne
divb
mov
ss
add
insb
data16
push
cmp
mov
test
cmpsb
dec
cmpsb
xor
push
pop
fmull
mov
jno
sub
push
jae
lcall
adc
lret
xor
mov
shl
lods
sahf
movsb
and
pop
hlt
mov
test
lods
and
mov
dec
push
xor
test
lods
and
adc
dec
jo
rorb
mov
push
dec
pop
jmp
dec
jmp
sbb
lcall
push
loopne
outsl
int3
data16
movsl
in
ljmp
xchg
sbb
cmp
adc
inc
push
imul
pop
mov
cmp
testb
outsb
fimuls
adc
sub
cltd
loop
xchg
addr16
xchg
arpl
aaa
or
push
shr
push
fs
fstpl
ficoms
scas
loopne
stc
fwait
arpl
pop
xchg
mov
inc
loopne
les
loop
push
cmc
mov
sub
or
addr16
sub
rorl
jg
add
push
bound
mov
xor
mov
sub
cmp
or
insb
dec
out
stos
lahf
cmc
dec
lcall
int3
xchg
sub
mov
pop
jne
aaa
rcr
xor
loop
mov
mov
or
add
xchg
imul
aam
clc
mov
sbb
popf
pop
sti
or
jge
out
push
xchg
xor
into
jae
xor
lahf
inc
mov
or
in
and
xchg
jmp
inc
loope
mov
cmpsb
loop
push
int
fisttpll
pop
shll
and
pop
mov
dec
aam
outsl
jbe
pop
popa
test
mov
pop
popa
push
mov
lcall
and
dec
adc
mov
data16
add
movsb
cmp
mov
pop
dec
jle
fbstp
mov
mov
add
inc
dec
fld
test
add
insl
pop
sub
sub
xchg
jle
dec
cmpsl
jl
pop
dec
sub
shll
arpl
xor
outsl
fistpl
int
xor
dec
adc
jecxz
pop
arpl
jecxz
movsb
xchg
push
cltd
mov
xor
mul
leave
mov
iret
icebp
iret
inc
rorb
xchg
sbb
mov
fwait
dec
jnp
lret
fwait
add
mov
shl
std
filds
mov
stos
xchg
add
and
aaa
push
mov
cmp
xchg
sub
shlb
pusha
mov
dec
jbe
int3
test
mov
sti
pop
fwait
cmc
cmp
test
pop
mov
dec
adc
cmpsb
icebp
sbb
xor
push
push
sbbl
xor
rcrl
and
adc
mov
ds
pop
roll
xor
mov
pop
test
in
out
push
mov
cmp
push
fdivl
mov
mov
rcll
cmp
es
insb
popf
bound
adc
lods
cmp
ficomps
sub
test
testb
fdivrl
aam
mov
dec
adc
stos
mov
pusha
sub
push
jecxz
jp
dec
or
sub
adcb
lods
repz
lcall
cmp
jns
inc
popa
inc
cmp
test
sarl
stc
lretw
rclb
pop
and
pop
mov
xor
scas
pop
push
aam
jecxz
push
cmpsl
fs
sub
sbb
ljmp
lock
rolb
push
lret
push
dec
xor
dec
add
mov
dec
push
cmp
and
out
push
sbb
leave
enter
test
xchg
cli
jnp
aam
mov
xor
xor
sbb
rcrl
pusha
inc
sbb
mov
ss
pop
mov
jge
fimull
out
push
push
and
outsb
bound
loopne
xor
pushf
test
stc
es
fwait
push
push
adcl
in
sahf
into
in
adc
scas
das
mov
cmc
cmp
pop
add
xchg
jle
mov
cmp
dec
dec
xchg
adc
cld
dec
fcmovbe
sti
cmp
inc
mov
shrb
int3
loope
add
xchg
mov
add
pop
sbb
jp
aaa
mov
ror
ret
mov
cmc
lods
out
push
cmp
inc
dec
loopne
or
in
jmp
adc
and
sbb
faddp
pusha
dec
and
adc
or
push
or
xchg
xchg
ds
pop
or
xor
lcall
dec
test
sub
xchg
pop
add
or
or
xchg
sahf
jno
cmp
mov
mov
sub
shll
sub
sbb
hlt
mov
insb
cmp
cs
push
shll
adc
sub
adc
ds
or
push
mov
ja
and
pop
daa
jns
push
mov
in
dec
repnz
push
pop
fisubrs
sub
or
cmp
or
dec
imul
lret
pop
mov
sti
std
mov
add
fcmovnb
sbbb
add
and
mov
movsl
pop
cmpsb
enter
pop
xor
mov
pop
sbb
les
in
pop
push
add
xchg
loop
sarl
dec
adc
icebp
in
cmpsl
clc
in
fsubrl
andl
pop
roll
insl
imul
std
insl
xor
xchg
int3
push
xchg
xor
xchg
leave
xchg
mov
andl
les
jno
rolb
ret
es
mov
leave
or
dec
out
xchg
cmp
mov
adc
movsb
insl
insl
or
test
enter
cmp
add
std
out
mov
mov
cmp
jmp
pop
pusha
sub
or
popf
sub
das
imul
xchg
sahf
int
mov
daa
cmp
out
mov
push
push
add
rorb
mov
enter
cmp
ret
adc
jo
stos
stos
push
fsubl
sub
repnz
jl
sub
adc
push
push
push
aas
lahf
icebp
std
jge
in
into
leave
cld
inc
ljmp
sbb
gs
testb
push
pop
rorb
push
shl
scas
shlb
pop
xchg
addr16
mov
fs
ret
ret
jmp
pop
lcall
test
pop
repz
mov
enter
dec
sub
sbb
push
es
clc
out
lcall
add
cmpb
mov
or
imul
nop
or
jle
dec
add
fidivrs
xor
repnz
mov
decl
out
jns
in
dec
insb
pop
and
sub
pop
cmp
lahf
mov
xor
xchg
push
adcl
dec
popf
stos
movsl
cmpsb
add
and
pop
push
or
cmc
out
pop
repnz
shrl
lret
push
mov
push
jnp
dec
mov
in
call
stc
and
insl
mov
fwait
sub
xchg
cmpsb
mov
push
aas
roll
push
pop
out
dec
repnz
pop
adc
inc
jecxz
mov
xor
es
arpl
jb
mov
xchg
xchg
xchg
roll
cmp
jp
popa
daa
and
push
or
add
outsb
xchg
lret
stc
shll
jae
add
jl
fisubrs
mov
xchg
mov
add
loop
push
sub
inc
frstor
mov
push
ret
jg
pop
shrl
adc
xchg
or
lcall
mov
es
test
mov
hlt
addl
lock
bound
test
ret
test
mov
dec
mov
inc
paddsb
push
or
adc
addr16
pop
push
andl
fidivl
push
fsubrl
roll
sti
mov
addr16
sub
pop
adc
adc
call
aam
cmp
jmp
rolb
jmp
hlt
add
xchg
adc
mov
stos
je
leave
iret
mov
in
test
cltd
and
in
mov
pop
jle
rorb
enter
jmp
sbb
outsb
mov
rorl
sub
sub
xchg
in
xchg
add
popa
gs
out
xchg
jns
fisubrs
dec
das
xchg
xor
repz
jae
pop
xchg
xchg
xchg
xchg
ss
inc
pushf
sub
mov
cmp
lods
call
insb
push
push
sbb
jnp
or
adc
jae
or
jecxz
inc
lret
lea
mov
sbb
fldl
add
push
sbb
jno
bound
ljmp
inc
ds
cmpsl
fmuls
cli
data16
imul
adc
fstps
push
cmp
in
and
ja
or
movsl
or
popa
das
mov
jecxz
fadds
mov
push
add
mov
push
or
fistps
jns
jmp
insb
lds
xor
push
jno
xchg
lret
idiv
add
push
mov
jle
lret
mov
or
jp
icebp
mov
dec
repnz
lret
insl
and
mov
movsl
je
dec
pop
scas
loope
lcall
cmp
insl
shrb
lods
jge
sbbb
cmp
sbb
shlb
jo
repnz
fidivrs
test
mov
dec
fldenv
push
push
ds
enter
sbb
and
in
out
sub
insl
add
enter
pusha
push
xor
stc
mov
adc
jmp
inc
aam
roll
xchg
push
rol
mov
aad
shll
cmp
mov
ljmp
and
cld
xor
pop
or
xchg
hlt
sbb
add
mov
xor
loope
and
adc
mov
sub
mov
adc
jp
inc
loop
dec
xchg
dec
dec
adc
or
aaa
fsubrp
sahf
imul
stc
pop
dec
popf
lahf
jle
mov
sarl
xor
cwtl
and
adc
in
fildl
jo
xchg
out
rcrb
es
or
push
sub
shl
ret
pop
mov
adc
jae
jno
pop
cs
jmp
out
jg
ja
sbb
es
lcall
outsb
or
mov
add
loope
rcrl
jecxz
mov
or
movsl
jae
sbb
inc
shll
mov
inc
push
or
jle
cmp
jle
fs
hlt
mov
movb
dec
arpl
imul
add
xor
adcb
and
faddl
je
push
fstl
mov
sbbl
int3
xchg
and
std
and
xorb
ja
pusha
ret
addb
cmp
addr16
rol
popa
sbbl
mov
ljmp
sbb
fwait
xor
shrl
pop
sahf
adc
sbb
push
jl
mov
xor
inc
ss
mov
lahf
inc
lret
mov
sbb
ljmp
cmp
cli
or
test
push
xor
lret
lret
add
movsb
pop
push
sbb
xlat
bound
mov
test
imul
mov
pop
repz
mov
jbe
je
pop
xor
and
add
or
push
mov
clc
push
pop
enter
mov
sub
xchg
sbb
mov
inc
fucom
jmp
dec
pop
pushf
jns
add
fisttps
inc
mov
icebp
cmp
xor
add
mov
sbb
pop
test
jno
push
mov
mov
cli
mov
jo
stc
mov
ss
and
lods
arpl
lods
lea
ja
js
dec
clc
and
cmpsl
mov
inc
test
pmaddwd
pop
jmp
mov
pop
out
pop
lea
enter
loopne
insl
xchg
addr16
xchg
add
push
push
sbb
dec
cmc
shrl
test
mov
addb
xchg
pop
outsb
pop
pop
push
push
add
and
sbbl
push
jo
xchg
cmp
rorl
xchg
fs
movsl
adc
xor
ret
fists
sub
jae
popa
dec
xchg
fmulp
push
cmp
jnp
pop
push
insb
nop
mov
and
xor
add
dec
scas
dec
ret
and
nop
dec
pusha
mov
inc
fwait
aaa
cmc
xchg
jge
lods
mov
adc
xor
imul
out
cmp
jmp
dec
in
sbb
and
and
push
popa
sbb
cld
addr16
cmp
in
sbb
sti
sbb
sti
test
stos
add
fcmovnb
ret
add
repz
pop
pop
push
icebp
hlt
outsl
mov
js
mov
mov
push
nop
les
mov
jne
iret
pop
pushf
pop
push
js
mov
xor
dec
idivb
daa
push
in
pop
popa
ja
dec
je
jns
inc
stos
sub
inc
daa
sbb
aad
xor
xor
inc
fs
push
dec
dec
lea
in
sub
cmpsl
add
icebp
scas
or
aaa
jg
pop
sub
pushf
lret
out
cli
sbb
clc
push
enter
mov
jae
cmp
add
sti
data16
out
mov
push
in
adc
mov
jmp
out
xor
lock
hlt
jl
in
mov
add
ja
jmp
cmc
and
cmp
loop
inc
imul
add
or
stos
xor
add
mov
push
lea
sbb
cmp
xor
xchg
xchg
xor
flds
in
fbld
or
test
cmp
cmp
pop
rcl
popf
jecxz
ret
xchg
xchg
xor
mov
push
fiaddl
push
loope
outsb
inc
push
sbb
adc
fisttps
cmc
jmp
dec
and
js
xchg
subb
xchg
daa
repnz
shlb
mov
jne
out
inc
imul
insb
lds
sbb
fsubrs
shrl
jge
out
mov
push
pop
mov
dec
mov
test
pop
gs
je
dec
cltd
cltd
push
jnp
ret
test
test
stos
mov
adc
popf
cmp
cs
ret
sub
adc
ja
dec
xor
sbb
in
ja
loopne
push
inc
xorb
cmp
xchg
leave
scas
or
xor
mov
sub
pushf
stos
leave
clc
bound
xchg
add
xchg
sbbb
xor
cmp
xor
js
push
adc
fisubrs
inc
clc
sub
xor
cmpb
inc
jb
jecxz
sub
adc
stc
pop
lods
outsb
cmp
cmp
sbb
inc
add
outsl
mov
out
adc
sub
in
push
pop
out
int3
jmp
mov
pushf
push
mov
mov
movsb
cmp
pop
fs
das
jl
les
inc
unpcklps
fistpl
inc
dec
mov
cmp
ljmp
push
cmpsb
aad
lret
rcll
outsl
pop
orb
enter
addl
jno
bound
add
mov
int3
out
dec
jle
dec
inc
mov
pop
cwtl
pop
divl
movq
es
push
and
mov
cmpsl
jbe
xlat
mov
lret
in
dec
mov
lock
pop
shrb
inc
insb
pop
iret
mov
adc
inc
dec
push
cltd
pop
pusha
enter
movsl
lods
adc
mov
xchg
mov
cs
mov
jae
mov
sub
test
dec
inc
inc
mov
dec
mov
or
mov
cmp
mov
and
das
mov
cmp
lds
inc
aaa
scas
fdivr
mov
dec
inc
sar
jbe
popf
jo
fisubrl
sbb
cwtl
in
mov
loopne
adc
xchg
adc
cmp
sbb
out
mov
push
std
outsb
lods
arpl
dec
enter
push
rorl
xchg
lods
popf
adc
call
ret
xchg
and
cli
cli
sbb
push
pop
add
std
nop
mov
das
sahf
cld
cmpsb
push
sbb
imul
add
fldt
imul
mov
dec
dec
scas
nop
in
sub
or
aad
or
addr16
scas
dec
mov
cmp
out
pushf
gs
mov
and
mov
adc
daa
push
imul
fwait
imul
pop
scas
xchg
repnz
imul
or
jmp
pop
mov
dec
inc
fldenv
in
cli
scas
mov
or
mov
loope
lods
dec
ds
dec
dec
test
fwait
and
dec
mov
cs
jge
pop
dec
es
cmp
clc
cmp
mov
mov
out
ret
mov
xor
mov
mov
imul
aaa
call
sbb
mov
xchg
aas
mov
jbe
inc
and
jnp
ljmp
cmpsb
aam
inc
jne
xchg
mov
xor
clc
pushf
add
out
rcr
dec
scas
push
mov
xor
in
pushf
ds
lods
lods
and
cld
int3
shlw
pop
cld
lret
in
or
jns
mov
xor
inc
or
outsl
add
add
aaa
gs
or
mov
sbb
ret
orl
push
pop
adc
or
xchg
js
fiaddl
mov
leave
imul
out
add
cmp
add
fisttps
mov
imull
aam
pop
dec
out
mov
mov
outsl
or
mov
or
in
and
lcall
cmp
sub
inc
mov
mov
adc
mov
rcrb
shl
popa
lahf
cmpsl
aas
iret
add
ret
adc
sub
xchg
decb
lret
cwtl
test
inc
adc
add
je
mov
mov
int
jno
sti
aam
cmp
xlat
pushf
daa
daa
and
jno
lret
mov
add
adcb
add
imul
adc
and
dec
pop
insl
jo
mov
add
cmpsl
push
add
and
andb
sub
repz
pop
pushf
or
pop
les
cwtl
sbb
jp
test
pop
sahf
cmp
int3
pop
idiv
stos
sub
mov
cltd
push
rcl
jo
add
jae
hlt
loopne
mov
shrl
add
es
sbb
mov
aas
add
mov
xor
xchg
add
cmp
call
push
pushl
loope
push
push
add
mov
test
ret
popa
dec
and
pop
pushf
add
mov
pop
jecxz
adc
adc
dec
fldcw
xchg
addl
and
push
daa
enter
lods
mov
mov
lods
das
fstpt
jp
or
pop
add
shlb
push
inc
sbb
rorb
sbb
mov
mov
add
je
inc
and
and
loope
dec
aaa
lock
push
cmp
pop
push
gs
dec
pop
xchg
mov
add
repz
xchg
inc
movl
inc
pop
mov
pop
mov
push
inc
dec
jo
mov
xor
fidivs
bound
clc
sbb
hlt
popa
xchg
repnz
cmp
les
loope
mov
aas
inc
jp
sarb
sti
arpl
dec
add
mov
enter
jns
jp
repz
movsl
insb
sbbb
testb
pop
mull
xor
roll
adc
dec
jae
ficompl
cmp
xchg
repz
aam
xor
cli
mul
loop
xor
out
inc
lret
std
sbb
dec
jns
icebp
cmpsl
and
out
mov
add
fmulp
jle
dec
dec
nop
adc
add
mov
xor
sub
or
sarb
pop
push
cmpsb
mov
in
fs
dec
jne
pusha
inc
push
sub
mov
lret
les
into
and
outsb
add
movsl
aas
nop
fsubrp
mov
inc
inc
xor
jae
pop
jo
jmp
mov
push
in
fwait
pop
cmp
mov
enter
je
sub
fnsave
pop
mov
jle
inc
mov
mov
and
mov
mov
out
xchg
push
adc
andb
or
mov
adc
sbb
jecxz
xchg
and
sub
in
dec
jb
cltd
out
dec
inc
add
jmp
pop
sbb
mov
mov
stos
sub
test
cmp
or
xchg
outsl
or
cltd
insb
stos
ss
inc
aam
std
ret
in
int
pop
pop
cmp
push
mov
adc
das
cs
push
pushf
insl
or
loopne
mov
insl
sbb
adc
lds
imul
add
outsb
mov
xor
fs
add
add
loopne
ja
aad
inc
insl
dec
pop
and
outsb
ja
add
cmpsb
cmpsb
int3
mov
loope
or
xor
mov
push
cmp
xchg
clc
jg
ss
push
orl
or
imul
and
dec
outsl
dec
lock
pop
dec
xor
sbb
ds
enter
cmp
lea
int
fstl
xchg
cmp
push
popa
jmp
jae
es
xchg
fdivrl
ffree
xor
push
jmp
popa
int
or
or
ret
rclb
int3
mov
cwtl
mov
sti
push
lods
sbb
push
pop
addr16
mov
xchg
jbe
or
pop
push
mov
jo
adc
repnz
ret
mov
cmp
jne
push
cld
dec
fidivrl
add
pop
and
mov
jbe
xchg
fsubrl
sbb
and
add
push
pop
adcb
and
daa
stc
cmpsl
test
xchg
fildll
xor
push
pop
push
xor
nop
dec
jmp
push
fisubl
xlat
testl
gs
pop
aas
xchg
arpl
push
and
and
jl
jns
jno
xor
loope
sarl
je
lret
dec
cwtl
mov
jno
and
mov
ja
lods
stos
sbb
push
fs
xchg
movsb
rorb
iret
add
addr16
xchg
sub
inc
int3
mov
mov
cmpsl
dec
and
scas
pusha
out
jbe
xlat
aas
xor
pop
sub
sub
jg
xor
xchg
enter
xchg
fidivl
mov
or
mov
adc
xlat
sbb
mov
fldl
aam
scas
jbe
cmpsb
arpl
les
int3
fcomps
inc
pop
aaa
dec
iret
push
ja
sub
jnp
jp
and
in
jecxz
lcall
scas
sbb
mov
cs
bound
stos
cmp
xor
adc
jle
mov
lret
pop
movb
pop
and
and
sbb
jne
sub
aas
loope
iret
iret
pop
pop
and
push
imul
test
in
and
rolb
int3
mov
jmp
push
pop
or
insl
jnp
xchg
or
scas
push
cwtl
cmp
lods
stos
adc
dec
pop
inc
lahf
push
inc
mov
rol
cmp
or
int
cld
out
dec
enter
push
mov
mov
push
fcoml
push
xlat
cltd
cmp
mov
incl
add
pop
cmpsb
mov
and
test
dec
loop
fnstcw
or
sub
push
dec
push
or
outsl
push
add
jmp
adc
popa
sbb
test
push
mov
jmp
aaa
push
cmpb
inc
cld
repz
pop
sub
out
icebp
lods
or
fmul
pushf
push
lock
inc
adc
jbe
jo
and
jae
jmp
das
lds
ja
imul
dec
adcl
add
cmp
sbb
in
movsl
dec
subl
xchg
mov
mov
hlt
cltd
sub
sub
and
and
fists
mov
lret
mov
sbb
fmul
cwtl
dec
add
cmpsb
std
ret
je
inc
mov
frstor
je
jle
add
cmp
inc
ja
sbb
add
repz
lret
xor
push
dec
iret
iret
fwait
cmp
out
ret
push
mov
or
js
stos
jnp
add
mull
xor
iret
loope
imul
loop
fucomp
ljmp
fmuls
mov
sbb
cmp
es
cmp
fidivl
outsl
ficomps
mov
out
add
test
insb
xor
xor
ret
aaa
mov
or
sarl
jecxz
xor
sahf
scas
jg
adc
out
ret
pop
xor
repnz
lret
call
dec
push
iret
and
or
inc
pop
out
cmpsl
scas
cmpsl
fucomp
inc
in
sahf
jns
adc
sbb
ja
cmpsl
xor
push
push
dec
mov
lds
mov
pop
cmp
mov
push
pop
lret
das
les
fwait
addr16
pop
sub
imul
inc
jmp
ficompl
mov
mov
sbb
scas
leave
popa
and
lods
dec
push
imull
jbe
push
mov
out
or
popf
pop
loop
push
loope
xchg
mov
dec
sbb
into
lods
lahf
and
jno
cmc
addr16
mov
out
sub
ret
xorl
push
ficoml
dec
dec
mov
addr16
xor
pushf
cmp
repz
popf
shrb
aas
inc
rorb
dec
jecxz
dec
ss
ss
xchg
lods
cmp
out
pop
mov
js
xchg
ss
lret
fstps
rcll
pop
dec
cld
loope
stc
lret
in
xchg
dec
push
adc
test
pop
in
in
mov
dec
push
fs
jecxz
jns
inc
and
push
out
clc
dec
sahf
and
rclb
repnz
cmp
in
jle
out
xor
inc
mov
ret
cld
push
jnp
xchg
fldl
frstor
mov
xor
scas
movsb
rcrb
in
sub
inc
mov
sub
jmp
push
popf
aas
add
push
pop
lods
xchg
daa
dec
and
xchg
pop
cmp
shrb
cmp
mov
stc
add
add
loop
cmpsl
jp
inc
jmp
mov
pop
int3
sbb
mov
sbb
pop
daa
pop
jnp
add
xor
popa
push
clc
push
mov
dec
scas
dec
xor
dec
clc
out
jl
sub
fdivl
icebp
lea
cli
push
mov
cmp
inc
push
call
mov
sub
mov
mov
add
rolb
popa
xor
push
scas
inc
je
mov
nop
out
jo
shl
mov
lahf
lret
das
and
lahf
iret
sbb
js
mov
ffree
movsb
cmp
xor
jecxz
pop
pop
jecxz
sti
out
sub
and
fistps
xchg
sbb
mov
mov
mov
sbb
shll
xor
mov
inc
out
push
ds
jbe
and
mov
push
inc
dec
repnz
pop
lret
inc
fdivrl
xor
cld
cmpsb
push
test
popf
sub
push
lcall
testb
cmp
testb
jo
jecxz
adc
mov
aad
xor
jl
add
daa
pop
pop
fisubs
or
fstps
sar
xchg
je
ja
adc
stos
out
sbb
mov
or
or
push
mov
mov
mov
xchg
ret
jae
pop
gs
lds
dec
popf
adc
dec
insb
popf
aas
je
lock
aas
dec
arpl
pushf
loopne
xor
cwtl
in
jb
sbb
das
mov
mov
mov
dec
push
xchg
mov
cwtl
mov
mov
lods
daa
jne
or
and
shr
lahf
push
arpl
sahf
push
aaa
jg
scas
setp
sbb
cmp
push
or
mov
mov
mov
stc
jb
pushl
jb
cs
add
js
fdivrl
gs
add
pop
mov
sub
push
fsubrs
or
jb
mov
dec
ficomps
dec
lods
rcrl
inc
cmp
xorl
pop
or
fstpt
roll
mov
push
popa
mov
and
sub
add
in
shll
or
sub
lds
ss
sub
outsb
fwait
sub
sahf
push
sub
imul
movsb
dec
mov
sti
ds
mov
mov
inc
aaa
mov
stos
dec
ret
mov
push
sub
xor
sbb
in
add
pop
aaa
adc
mov
inc
jo
icebp
stc
pop
cmp
enter
mov
rcll
filds
xchg
mov
dec
hlt
cmpsb
cmp
fcomps
cmpl
imul
stos
jnp
sbb
int
das
out
inc
jo
pop
xlat
adc
xchg
xchg
push
scas
mov
mov
mov
nop
jns
push
stos
xor
and
lock
iret
rolb
mov
adc
cmp
in
int
cmc
ljmp
jae
sbb
popa
iret
aas
jmp
and
dec
push
pop
ds
mov
fsubl
sbb
enter
data16
sub
inc
cmpb
jae
jmp
sbbb
imul
mov
popaw
pop
xchg
aad
outsl
mov
push
add
out
outsb
loop
mov
and
das
icebp
and
inc
or
pop
inc
adc
cld
jae
imul
and
add
fs
sub
adc
fwait
add
clc
call
inc
ja
dec
arpl
pop
arpl
inc
xor
test
xchg
sbb
inc
fcmovnb
cmp
dec
sub
cs
repnz
cltd
add
jno
pop
pop
mov
ror
adcl
dec
jbe
movb
mov
repz
push
lahf
je
iret
popf
inc
adc
push
divb
or
inc
lds
dec
cmp
xlat
in
mov
outsb
jl
in
out
xor
dec
aaa
dec
lods
mov
mov
mov
lods
sbb
pop
cs
mov
lock
fwait
es
fisttpl
jl
test
sub
jmp
lea
adcl
repnz
dec
pop
mov
stos
pop
cmpsb
stos
xchg
mov
and
jno
mov
into
test
dec
and
push
cmp
mov
mov
xchg
pop
push
jnp
sbb
push
or
rcrb
xchg
and
dec
rorl
shll
jnp
lcall
mov
adc
xor
push
arpl
jl
aad
iret
xor
and
aas
inc
mov
movsl
jae
imul
pop
push
in
inc
imul
stos
repnz
and
push
nop
outsb
or
int
adc
dec
pop
jge
xchg
or
test
lret
pop
add
fwait
ror
push
int
test
pop
aad
push
sbb
popf
cmc
adc
scas
insl
loopne
cltd
mov
cmpb
outsb
sub
sbb
inc
movsb
gs
dec
bound
add
mov
sub
std
ret
fsubl
or
inc
xchg
imul
mov
or
dec
pop
add
push
cmp
test
adc
cld
sbbb
mov
pop
into
cmpsb
les
pop
lret
in
mov
shlb
inc
fstpt
cwtl
in
call
mov
shl
add
nop
mov
test
mov
xor
bound
dec
inc
jbe
rolb
and
xchg
cs
shlb
in
lahf
arpl
mov
push
aas
sub
loop
loop
jecxz
iret
push
adc
notb
std
pop
mov
loopne
aam
mov
rclb
xorb
cltd
sbbb
add
je
sti
hlt
fimull
inc
xchg
cmpl
pop
stos
sub
scas
pop
dec
adc
push
cltd
sbb
gs
pop
adc
test
mov
push
pop
sbb
xchg
mov
cmpsb
xor
adc
push
mov
pop
pop
mov
add
addr16
lds
sub
test
adc
mov
jmp
or
int
pop
fcomip
jae
outsl
cmp
or
sbb
sahf
mov
rolb
xor
jecxz
xorl
js
test
repnz
xchg
dec
jge
add
pusha
scas
push
dec
mov
in
cmpl
xor
push
in
maxps
ficoms
adc
adc
pop
pop
lea
push
imul
inc
mov
lahf
xor
les
inc
dec
jmp
inc
xor
add
adc
sti
cmp
cwtl
and
pop
jl
dec
adc
and
inc
test
xor
jno
pop
cmpsl
jge
test
data16
test
xchg
mov
cmp
hlt
in
sbb
add
adc
loopne
sub
test
ja
push
cmp
negb
std
outsb
xor
imul
push
mov
mov
or
test
sub
cmpsl
test
xchg
sub
jl
call
pop
cli
lods
js
int3
jg
xchg
bound
cwtl
imulb
in
jae
push
movsl
xor
jbe
mov
mov
lret
mul
int3
cmp
jmp
mov
popaw
imull
and
addr16
inc
sbb
es
xchg
mov
fwait
mov
add
pusha
push
pop
jp
and
out
out
push
test
shrl
mov
adc
jo
pop
and
pop
or
xchg
xor
pushf
inc
mov
loope
inc
stos
sbb
loopne
cmc
aas
jl
repz
insb
xchg
pop
sbb
cld
mov
xor
repz
add
inc
or
cmpsb
sahf
jbe
xor
ss
ret
mov
cmp
mov
push
es
aas
xor
cmpsb
fst
sbbl
setge
lcall
add
cmp
mov
xor
int3
jbe
sbb
or
cli
push
xlat
lret
and
addl
jecxz
call
cmpsb
fmull
enter
mov
nop
adc
loope
push
lods
das
call
dec
shrb
dec
add
mov
jnp
dec
shl
stc
addb
mov
imul
and
stc
in
pop
xlat
push
mov
mov
stos
inc
jmp
xchg
bnd
or
jecxz
mov
mov
jle
mov
aas
push
aad
cvtdq2ps
jae
aam
jg
mov
out
sti
test
mov
add
dec
pop
ljmp
xor
ds
mov
pop
mov
add
dec
cmpsl
inc
inc
lcall
sub
cwtl
push
out
mov
out
mov
adc
add
adc
test
lods
out
inc
ficomps
test
fldenv
stc
fstp
dec
jmp
outsb
jnp
in
ja
jecxz
in
jle
adc
dec
cmc
repz
pop
pop
fsubs
repz
fadd
stos
out
aad
lcall
idiv
inc
js
and
cltd
sbb
push
push
xlat
mov
push
out
aas
out
push
push
subb
idivb
add
sub
pop
pop
push
lods
sub
and
leave
ret
or
adcl
ss
inc
jbe
push
or
stc
sbb
xlat
jp
sub
sarl
shlb
out
movsb
cmc
or
int3
rorb
js
fsubs
mov
test
sbb
inc
ficompl
cli
push
mov
xchg
rolb
mov
nop
cli
jbe
cmp
psubsw
das
movsb
xor
data16
fsubl
pop
or
dec
or
dec
dec
add
lret
inc
mov
ja
dec
je
mov
aam
cmp
dec
mov
nop
jecxz
cmp
mov
sub
push
pusha
xchg
cmpsb
aas
fwait
arpl
fldl
jle
test
jl
push
cmp
mov
fmull
stc
mov
insl
xchg
test
jns
push
sarl
call
loopne
add
or
imul
mov
mov
push
mov
push
xchg
jp
loopne
rorl
ds
cmp
imul
pop
out
movsl
jo
std
adc
pop
insl
cli
lret
and
mov
adc
mov
dec
pop
push
daa
mov
lock
dec
testl
dec
test
das
fcmove
or
stos
fldcw
adcl
movsl
mov
popa
arpl
xchg
dec
in
fnsave
add
xor
inc
in
push
dec
outsb
fmul
adc
faddp
stos
push
sahf
pop
adc
jg
cmp
push
cmp
pop
push
mov
sub
inc
sbb
outsl
sbb
mov
leave
xchg
adc
jb
mov
mov
sub
pop
push
aam
push
xor
sbb
mov
arpl
and
cwtl
ds
pop
daa
mov
push
adc
and
or
push
das
inc
mov
pop
inc
xor
sub
loopne
mov
testb
sub
pop
jne
incl
xor
dec
cmpsl
xor
sub
cmpsl
shrb
push
ret
inc
shlb
adc
xchg
dec
enter
add
sbb
pop
movsl
or
inc
mov
stos
mov
mov
stos
hlt
pop
rcr
or
sbb
test
aas
jne
or
and
insb
xchg
inc
xor
sub
or
ljmp
cmpsl
testb
mov
fisubs
movb
xor
and
repz
ss
pop
sbb
hlt
mov
sub
inc
mov
sub
xchg
xchg
lcall
lds
pop
aad
jno
sarl
jl
jb
mov
lcall
ja
dec
xlat
jecxz
mov
pushf
and
in
mov
cmp
pop
dec
add
scas
out
in
dec
jne
popf
mov
adc
ret
ss
adc
xor
lods
sbb
cmp
scas
fbld
pushf
in
ss
gs
jae
xchg
je
adc
adc
dec
rol
push
into
ucomiss
ds
cltd
xchg
ja
adc
inc
push
xchg
scas
and
jecxz
sbb
fsubr
pop
sub
sbb
iret
mov
or
ljmp
mov
lods
or
mov
test
xchg
hlt
bound
int3
test
lock
push
out
and
adc
dec
out
popa
cmpsl
aad
sub
xchg
jge
xor
iret
mov
push
std
mov
push
sbb
and
dec
repnz
add
aas
out
or
sub
mov
and
mov
push
adc
xchg
push
push
mov
push
or
xchg
jmp
and
fnsave
fadd
test
push
xorl
addl
adc
inc
and
push
clc
mov
into
gs
adc
sbb
sbb
push
xor
cmovl
mov
scas
fistpll
cmpsl
call
fmuls
mov
shl
fiaddl
loop
inc
movsb
sbb
push
inc
push
dec
or
andb
aas
outsl
push
mov
adc
pop
jge
pop
iret
incl
cmp
idiv
repz
sub
or
or
pop
out
dec
clc
stc
jno
mov
hlt
lods
ljmp
add
jo
jbe
fwait
ss
insb
push
sbb
stos
enter
in
call
jmp
stc
fsubs
repz
ret
fs
sbb
int
fisttps
fwait
data16
or
pop
fdivl
mov
inc
dec
inc
cmp
iret
jg
pop
movsb
je
fcoml
jl
and
cli
mov
mov
cli
adc
jb
adc
fcmovnbe
jbe
jbe
mov
outsb
mov
pop
shl
add
or
or
divl
daa
stos
cmp
lods
dec
outsb
enter
xor
xor
add
addb
mov
imul
popa
mov
inc
mov
iret
mov
add
mov
and
mov
mov
mov
pop
and
mov
cmp
aam
addr16
adc
mov
jne
out
shlb
xchg
xor
dec
sub
sbb
rcrl
in
jo
jb
jb
cmc
ret
dec
mov
inc
mov
lret
push
mov
dec
pop
sahf
mov
mov
pop
adc
je
push
mov
push
out
mov
push
pop
flds
inc
inc
sub
shll
mov
jl
ftst
cltd
sbb
cwtl
mov
cld
fiadds
imulb
cld
xor
shll
push
mov
pop
les
mov
inc
out
mov
das
fwait
popf
pop
popa
ljmp
dec
mov
int
push
ljmp
and
xchg
fmull
rol
jne
test
xchg
xchg
fldt
aaa
mov
call
int
xchg
mov
cld
pop
and
movsb
test
mov
and
pushf
cmp
js
test
test
sarb
jno
imulb
or
decb
adc
lcall
and
test
dec
es
movsb
cmpsb
mov
lret
inc
loop
jge
mov
cltd
movaps
mov
cmp
ljmp
pop
xor
nop
mov
jmp
testl
daa
rcll
xchg
and
adc
mov
adc
test
ljmp
imul
push
nopl
and
dec
xor
xchg
les
add
int
je
int
push
fcoms
xor
ja
adc
ljmp
add
xchg
add
sbb
jge
jb
push
cmc
mov
push
push
dec
lods
movsb
and
mov
sbb
imulb
push
pop
or
lcall
xchg
daa
sbb
test
and
loope
lret
inc
inc
mov
pop
xor
push
in
sarl
in
mov
xor
sbb
in
sub
mov
hlt
mov
sub
push
mov
out
lcall
adc
outsb
popa
push
xor
cmp
lea
daa
mov
xor
idivb
mov
add
popf
aaa
xchg
mov
sahf
push
mov
out
push
stc
sub
leave
mov
leave
push
icebp
add
sbb
sub
out
xchg
data16
jp
jnp
xchg
dec
mov
or
inc
test
adc
test
fs
pusha
ljmp
clc
daa
or
dec
cmp
push
pop
jle
andl
inc
lret
imul
add
icebp
mov
fimull
adc
push
lahf
jp
jb
push
mov
dec
adc
js
push
hlt
shlb
lret
imul
xchg
jbe
sbb
xor
js
pop
mov
aas
mov
lods
xchg
aas
scas
add
nop
aaa
dec
ds
push
add
aam
aas
outsb
ficompl
lds
and
cmpl
push
int
xchg
idivl
sub
leave
repz
mov
rcr
addr16
rcrb
scas
out
into
mov
ficoml
test
pop
mov
push
dec
or
ja
scas
xchg
fs
in
leave
mov
cmc
iret
xor
iret
test
insb
mov
frstor
xchg
pusha
arpl
push
rcll
ss
fidivl
pop
popl
shlb
pop
cmpsb
mov
inc
dec
lcall
pop
xchg
inc
xchg
scas
ficoml
or
and
dec
cs
inc
lahf
mov
pop
pop
sahf
rolb
mov
add
cmp
jne
xlat
xor
sbb
pop
cmp
insb
je
and
mov
aam
in
movsb
mov
int3
mov
insb
in
lds
or
xorb
jns
ret
lea
notl
ret
xor
fstpt
xor
adc
mov
mov
stos
int3
add
push
pop
lea
sti
fstl
or
mov
loope
iret
sub
jmp
pushf
mov
loope
test
lret
inc
inc
push
mulb
push
cmp
sub
in
arpl
enter
mov
outsl
sbb
pop
xchg
push
mov
xchg
sub
jbe
mov
pop
mov
outsl
repz
fisubrs
mov
repnz
inc
data16
push
adc
cli
jnp
imul
dec
dec
inc
sub
cmp
in
sbb
fwait
dec
popf
dec
mov
mov
dec
jbe
push
jl
push
mov
rcl
repnz
aad
and
dec
mov
xlat
iret
mov
xor
std
shrb
mov
aam
decb
jmp
shrb
xchg
ds
cmpsb
xchg
lahf
mov
adc
pop
xchg
push
add
sbb
enter
inc
xlat
jle
test
dec
lcall
mov
xchg
push
sub
mov
add
pop
mov
sbb
int3
punpckhwd
dec
enter
add
test
pop
es
testl
xchg
lret
rcrl
out
int3
sahf
cmp
cmp
das
mov
sub
push
lahf
loope
es
icebp
aaa
jg
jnp
mov
insl
push
lods
mov
pop
sbbb
mov
jbe
std
dec
push
sub
scas
mov
fwait
lcall
sbb
adc
mov
sub
xchg
and
add
sahf
lds
loop
pop
pushf
xchg
cmp
dec
call
cmp
add
sti
sbb
mov
mov
jg
fs
in
jge
push
in
jb
into
test
fdivl
scas
mov
jb
das
fwait
mov
add
inc
jge
cli
dec
cmpsl
dec
iret
cltd
outsb
stos
test
fstpl
sbbb
jae
sahf
sbb
testb
arpl
dec
and
mov
jb
movsl
mov
sbb
mov
addr16
std
mov
pop
out
mov
testl
cmp
dec
inc
xor
and
mov
sub
sub
sarb
adc
cmp
add
or
stos
repnz
in
dec
addb
iret
adc
fiadds
pushl
rcl
jnp
lods
cmc
push
sub
dec
stos
xor
imul
test
test
push
pop
dec
push
pushw
les
enter
mov
das
cmpl
ret
inc
hlt
fisttpl
call
int3
ds
cmp
inc
int
hlt
in
jg
and
dec
ja
ror
stc
xor
cmp
aaa
addr16
insl
je
jg
and
mov
jmp
loope
inc
pushf
sub
dec
ljmp
dec
mov
aaa
in
mov
lcall
pop
mov
pop
mov
push
shll
dec
insl
cwtl
aas
cs
mov
leave
leave
call
mov
mov
cmc
and
rclb
mov
jmp
mov
add
xchg
lods
adc
fdiv
roll
xor
xchg
push
mov
pop
add
xor
shll
mov
les
push
fimuls
fmull
mov
cmp
scas
fwait
xchg
dec
out
scas
lcall
and
outsb
xorl
int
pop
repz
adc
or
fisubrl
rorl
mov
ficoms
adc
jo
jle
cmpsl
sub
std
out
rcl
or
neg
mov
sbb
cmp
push
lret
lods
cmp
lds
mov
scas
xchg
divl
mov
xor
aam
mov
je
imul
mov
pop
xchg
xor
mov
es
xor
enter
xor
cmp
and
arpl
or
or
fistpl
mov
adc
scas
jmp
cwtl
xchg
or
fistpll
jnp
imul
inc
inc
ficompl
and
and
or
sub
insl
mov
add
sub
rorb
xchg
jmp
push
xchg
cmpsb
or
mov
int
pop
cmp
pop
rorb
adc
lock
add
bound
rclb
cmp
and
ds
xchg
maxps
stc
mov
push
or
ds
jmp
jne
roll
jnp
lods
sbb
lods
xchg
push
inc
pop
xor
adc
mov
add
sub
xchg
in
ja
jp
das
scas
inc
movsb
sbb
xchg
add
jge
inc
ret
xor
jle
lret
xchg
clts
mov
lods
or
pusha
imul
ret
hlt
inc
mov
push
xor
sub
out
in
push
mov
or
sub
inc
int
ret
fistps
call
std
add
insb
xor
cs
inc
push
adc
add
xlat
xor
adc
pop
aaa
push
mov
push
nop
jle
sbb
ja
or
xchg
jnp
push
sub
pop
test
push
or
imul
push
jns
cmpsl
popa
pop
mov
mov
pusha
jae
pop
inc
sub
imul
xchg
bound
mov
and
int
sbb
fidivs
and
xchg
mov
lret
insl
aaa
mov
push
sbb
cwtl
pusha
into
add
js,pt
lods
add
inc
daa
and
mov
pop
xor
adc
xchg
testl
fcmovbe
xchg
test
cltd
pop
dec
jns
and
pop
xor
dec
lds
outsl
stc
xchg
fsubr
dec
test
add
inc
inc
or
xchg
aad
mov
fidivrl
or
mov
dec
aam
imul
push
lea
mov
rolb
pop
enter
je
lea
shll
add
or
and
mov
je
in
mov
mov
add
fs
loope
adc
fwait
clc
mov
pop
jle
sub
pop
inc
sbb
xchg
out
adc
inc
dec
mov
mov
add
adc
leave
arpl
jae
mov
scas
cmp
sbb
jns
repnz
mov
xor
add
movsb
sub
scas
mov
cmpsl
sub
add
mov
addr16
inc
int
out
dec
adc
xcrypt-ecb
cmpsl
or
sub
test
cmpsl
push
mov
fs
adc
sub
push
mov
mov
insl
mull
cmpsl
add
loopne
data16
dec
and
sub
mov
jp
dec
adc
ret
push
nop
mov
xor
pop
sub
jbe
iret
lds
mov
mov
add
adc
or
out
enter
filds
dec
mov
push
sub
add
ss
out
pusha
jp
mov
mov
lea
into
scas
pop
pop
sahf
dec
xor
shl
ljmp
aad
or
test
loopne
out
or
and
sub
xlat
pop
mov
or
iret
std
inc
and
test
jno
into
or
cmp
push
out
movl
adc
jle
mov
xchg
adc
pop
mov
xor
cmp
andl
jle
sub
and
mov
xchg
inc
dec
dec
movsl
push
mov
jecxz
xorb
loope
sbbb
jns
clc
xor
mov
nop
ret
shrl
jecxz
jno
dec
push
cmp
negl
in
push
pop
scas
loop
inc
adc
jl
ds
icebp
ljmp
ss
sub
cmp
sti
mov
sub
std
and
and
jns
insl
and
out
jbe
mov
sub
movsl
adc
int3
xor
cmpsb
mov
jl
inc
je
in
and
xchg
lahf
inc
cli
xor
mov
hlt
push
ss
add
mov
lret
push
pop
enter
sbb
push
outsb
loop
mov
in
pop
fwait
jl
insb
out
leave
adc
aas
test
and
stos
dec
fildl
dec
adc
mov
mov
jo
xlat
jecxz
mov
jno
cmp
and
outsb
mov
inc
movsl
push
mov
push
pop
aam
inc
sbb
shrl
ja
jmp
rcll
mov
inc
dec
fists
or
xor
gs
pusha
cli
ficoms
and
dec
ficoms
adc
movsb
test
ret
cmc
pop
pop
lds
cmp
sub
ss
mov
leave
movsl
fisttpll
lods
cli
out
insb
xor
out
dec
js
lret
loope
xchg
jbe
and
int
lret
add
xchg
out
cmp
xor
xchg
cmp
aad
movsl
cmp
cmp
mul
call
in
jnp
fcmovnb
or
stc
mov
cli
cmp
icebp
sub
inc
movsl
sub
pop
imul
aad
push
cmp
push
and
imul
pop
imul
and
adc
add
fldl
push
jns
loop
nop
test
orl
fimuls
and
in
pop
mov
clc
mov
cmp
cmp
std
stc
jmp
sbb
sub
dec
dec
pop
dec
outsb
add
sub
call
test
outsb
adc
cmc
insl
cltd
jae
mov
jp
xor
in
push
popf
xor
jne
in
enter
outsl
push
pop
adc
jo
and
push
into
test
and
paddb
mov
pop
fs
out
pop
jecxz
dec
sub
popl
in
shlb
sbb
jle
jge
data16
lods
cmpsb
xor
mov
xor
orb
and
lahf
pushf
xchg
sub
int
icebp
xchg
mov
ret
push
dec
pop
lret
les
ja
mov
rcll
movsb
cmp
sti
js
rcrl
mov
push
mov
inc
fwait
inc
leave
pop
inc
or
or
subb
mov
xor
std
mov
add
mov
xor
jg
cmc
xchg
jno
cmp
addr16
xorb
pop
idivb
xlat
sarl
adc
sti
pushf
pop
xchg
sub
xorl
jge
sub
cli
inc
inc
aad
mov
aas
out
xlat
popf
cmp
pop
stos
cltd
add
mov
into
and
add
stc
faddl
mov
lea
mov
sbb
mov
mov
ja
or
adc
sub
jno
test
movsl
mov
mov
jnp
subb
xchg
xlat
mov
pushf
cwtl
and
adc
fstp
xor
or
lret
test
cmp
fwait
jp
xorb
call
sbb
sbb
movsl
push
cld
sub
jns
jb
xchg
push
insb
jge
in
dec
stos
cmpsl
arpl
ficoms
gs
lahf
ret
pop
divb
das
or
push
test
sbbl
bound
cld
push
movsl
cli
les
fmull
bndldx
pop
jo
mov
outsb
cmpsl
xchg
sub
xchg
test
fld
sbb
add
das
xor
jecxz
mov
cmpsb
dec
stos
adc
inc
stc
dec
dec
aaa
lock
sbb
popf
mov
dec
or
xlat
repnz
pop
mov
mov
das
xor
mov
pop
mov
cmp
sbb
int
stc
aam
cmp
mov
cld
adc
or
pop
and
push
lcall
addb
popf
lret
inc
popa
std
outsl
in
xchg
add
rolb
cli
andb
jne
sub
out
jmp
xor
inc
push
cltd
adcb
aas
addr16
xor
pop
mov
fildll
cmp
jnp
xchg
adc
jp
mov
loopne
fidivrl
arpl
jnp
sbb
push
lahf
pop
lods
xor
fbstp
je
call
lcall
shll
fcmovnbe
cld
fiaddl
repz
fcoml
xchg
pop
test
leave
sub
inc
pusha
aad
dec
xchg
cwtl
cmp
ja
add
testl
shrb
mov
or
xchg
jae
pusha
out
xchg
cmp
stos
loop
mov
outsl
pop
jne
sbb
sub
cmp
jb
sahf
push
loop
mov
sbb
and
in
ss
movsb
test
loope
lock
jl
add
and
jg
shll
xchg
jno
icebp
inc
push
icebp
dec
mov
lods
mov
bound
lret
fisubrl
or
sub
and
cmp
ret
test
pop
sbb
insb
imul
dec
fstpt
mov
mov
xchg
sub
push
in
sbb
sbb
ficoms
inc
loop
stos
push
int
outsb
bt
or
sarl
enter
dec
add
mov
xchg
xchg
sub
xchg
sub
data16
xor
jnp
push
test
sbb
shll
psrlw
cmp
into
les
mov
dec
adc
or
sub
mov
nop
repz
iret
adc
and
sbb
cwtl
or
out
arpl
dec
xchg
and
jmp
daa
sbb
dec
aaa
negb
data16
test
mov
mov
pop
lea
repnz
xor
ljmp
aas
lea
leave
imulb
jl
mov
rol
stos
aas
cmpl
mov
mov
call
adc
gs
jae
cmp
mov
movsl
or
lahf
xchg
jle
sbb
and
and
xchg
test
mov
mov
xchg
push
insb
cmp
push
sarb
pop
in
push
icebp
inc
fucomip
negl
mov
xchg
popa
cmp
cmp
mov
pop
lahf
push
mov
sub
divb
jbe
call
dec
mov
jns
lsl
outsb
mov
leave
iret
cmp
pop
push
call
data16
dec
xchg
daa
orb
aad
popa
push
lock
cmpsb
testl
add
mov
jnp
outsl
movsb
mov
ja
add
and
xchg
xchg
sbb
into
sub
aam
rorb
dec
test
shrl
cmpsl
ffree
sub
inc
inc
add
sub
aad
mov
rcll
xor
dec
jecxz
enter
jo
sub
and
inc
loop
ja
lret
test
popf
adc
int3
pusha
inc
cmp
cmc
sbb
cld
popf
fwait
adc
dec
push
xor
xchg
scas
mov
xchg
jmp
push
je
lret
mov
clc
mov
dec
push
add
add
add
dec
inc
lret
adc
gs
out
hlt
push
xchg
dec
cld
loope
imul
enter
mov
pusha
jle
stc
dec
in
lods
enter
push
int
cmp
ss
sub
stc
push
cmp
inc
in
enter
add
test
and
cmp
dec
clc
adc
sub
dec
rorb
into
sub
nop
pusha
jmp
lods
and
jo
lea
cmp
je
fs
jmp
or
jg
jl
mov
xchg
mov
add
and
sub
sti
in
lret
data16
call
ror
inc
mov
lcall
adc
icebp
pop
jl
cwtl
int
inc
cmp
cmp
aaa
mov
insb
imul
cwtl
mov
pusha
sub
mov
cmp
xor
leave
jmp
xchg
popa
jg
fistps
adc
test
sahf
mov
jmp
sub
jns
aad
imul
jnp
outsl
add
dec
push
divb
pop
or
pop
inc
and
rorb
enter
adc
mov
test
and
cmp
neg
add
push
xor
or
in
ret
popa
mov
inc
cmc
jmp
pushf
mov
sbb
jbe
xor
in
fbstp
repz
lea
cmpsl
fcomip
adc
mov
mov
test
addr16
mov
sub
push
inc
fwait
add
shll
push
xorb
jae
std
mov
lahf
xor
push
jne
inc
out
jbe
sub
mov
repz
cmpsb
or
cmpsl
cmp
mov
clc
and
xchg
inc
push
cmp
stos
xchg
jmp
cld
mov
push
daa
mov
dec
xchg
and
and
pop
jns
xchg
mov
cwtl
mov
xor
inc
rep
lret
inc
lret
je
lahf
nop
push
das
and
cld
int
push
and
xchg
and
jl
fiadds
adc
daa
push
loope
cmpsb
inc
mov
push
aaa
aaa
xlat
inc
pop
sub
addr16
into
and
or
push
cwtl
mov
xor
loop
adc
pop
adc
jns
add
and
stc
notb
ret
ja
out
xchg
ret
inc
jb
inc
call
dec
mov
mov
jmp
inc
aaa
mov
movl
lret
fstps
leave
add
mov
add
pushf
jmp
movsl
pop
movl
jbe
sbb
xchg
test
inc
enter
pop
mov
ret
adc
cs
adc
iret
sbb
pop
mov
sub
imul
roll
movsl
fldl
and
jle
cmp
mov
cmp
push
mov
movsb
add
fnstcw
fsubrl
mov
mov
pop
mov
push
into
loope
cmc
or
das
stos
loop
scas
int
xchg
icebp
lret
xor
add
xlat
jnp
cld
cmp
arpl
push
push
sti
cmpsb
mov
adc
fmuls
add
stos
arpl
add
enter
pop
push
lret
inc
pop
inc
push
jo
movsb
ret
cs
xchg
std
mov
es
sbb
lret
lds
add
pop
lods
sbb
insl
sub
lcall
xor
cmpsb
fisubrs
leave
leave
popf
addr16
xchg
les
cmpsb
xchg
jo
push
jge
orl
fdivl
xchg
cltd
push
js
scas
dec
loope
mov
xchg
mov
arpl
mov
in
jge
call
pop
ljmp
or
sub
mov
leave
cmp
inc
dec
fldl
xor
in
add
notl
shrb
movsb
int3
xchg
shlb
pop
and
jl
push
jg
test
imul
cwtl
dec
xchg
jne
jnp
pushf
mov
jge
jnp
repnz
xchg
insb
cmp
fldz
leave
movsb
daa
lcall
add
push
sbb
mov
test
scas
pop
outsb
testb
sub
daa
push
rolb
leave
sub
ret
out
xor
adc
pop
adc
lods
fisubs
add
mov
lahf
add
sahf
popf
mov
ret
aaa
movsl
mov
imul
or
and
xchg
mov
fnsave
dec
mov
mov
sbb
sar
push
sbb
imul
cmp
into
fsubr
test
mov
hlt
std
mov
js
mulb
dec
mov
bound
xlat
and
das
mov
sbb
and
add
mov
imul
inc
push
ds
push
into
pushf
loope
out
push
mov
icebp
xchg
dec
scas
loopne
push
xchg
out
jns
cmp
sub
jne
icebp
mov
jl
es
sbb
shll
jne
popa
cwtl
inc
icebp
je
out
xchg
lret
xchg
f2xm1
test
push
ret
push
jmp
xor
out
pop
mov
ss
repz
cmp
dec
mov
or
outsl
cli
add
xchg
xor
incb
lods
xor
imul
jo
inc
jne
mov
mov
sub
xorb
push
hlt
gs
or
dec
jbe
popf
outsl
mov
xorl
sub
in
loope
stos
iret
and
movsl
jbe
xchg
mov
dec
push
dec
push
pop
xchg
test
js
push
add
mov
add
mov
fldenv
fstps
cltd
sbb
popa
xchg
out
cwtl
rclb
jo
sti
and
out
jle
test
stos
cmp
jmp
lahf
mov
repz
mov
xor
popl
out
movsb
mov
lods
adc
cld
hlt
push
push
fildll
inc
jl
or
and
mov
nop
mov
testb
popf
jae
pop
sti
adc
mov
cmp
xor
or
loopne
mov
outsl
jbe
shrl
fs
jb
and
pop
mov
dec
sub
pop
add
bound
ss
enter
xor
mov
call
inc
cs
aam
dec
jbe
adc
addr16
push
nop
inc
shrl
cltd
pop
sub
adc
mov
fstl
es
fdivrl
cmpsb
and
xor
xchg
mov
or
clc
cwtl
push
lahf
lock
xchg
xor
pop
sub
sub
fldt
jmp
pop
sbb
pop
xchg
mov
pop
in
cmpsl
jnp
push
and
and
rcll
xor
mov
ficomps
sub
loop
dec
arpl
fistps
sub
or
incl
xchg
adc
stos
repnz
add
shrl
inc
gs
loope
pop
pop
stos
les
call
pop
and
lea
jg
loop
lret
push
fs
int3
dec
in
outsb
lret
sarb
cli
pop
sbb
jge
xchg
cmpl
push
fsub
add
jae
add
lret
popf
fisubrl
pop
or
jno
xor
pop
xchg
sub
mov
cmpl
lahf
das
sbb
ljmp
icebp
fisttpl
ret
jle
loope
jmp
pop
leave
insb
and
xchg
xor
add
call
mov
out
iret
jne
pop
iret
xchg
or
mov
inc
jno
cmp
out
shl
sbb
jno
into
pop
call
in
xchg
aam
stos
lock
cld
mul
mov
bound
adc
andl
lret
xor
xor
push
cmp
sbb
shlb
imul
xor
mov
pop
add
xchg
push
xchg
test
jmp
test
mov
testl
and
xor
push
outsb
push
push
cli
inc
jge
jmp
adc
mov
dec
aaa
loopne
and
popa
lahf
loope
aad
pop
popa
les
push
repz
fstl
mov
data16
dec
jp
dec
sub
enter
or
dec
rep
jno
add
sbb
sti
sbb
xor
pop
out
jae
xchg
pop
add
sub
std
push
call
cmpsb
sarb
push
pop
pop
loope
mov
sbb
loop
int
aas
iret
push
adc
fidivrs
mov
inc
jnp
nop
shlb
addb
mov
and
mov
in
ds
and
xlat
push
leave
inc
adc
in
inc
inc
mov
es
mov
cli
jno
addr16
insl
pop
sub
ljmp
mov
pop
scas
sbb
bound
inc
xor
jbe
jae
pop
push
es
inc
xchg
and
sbb
loope
mov
lahf
lea
mov
test
aam
mov
mov
popa
xlat
pop
and
jo
and
sbb
pop
adc
loope
sub
test
aas
mov
clc
gs
fstpl
push
test
sub
mov
aaa
rorb
or
test
test
jnp
jb
out
mov
test
xor
pop
xchg
sbb
faddl
or
ror
into
xlat
je
out
mov
jb
sbb
mov
stos
cmpsb
aas
fildll
ret
inc
lds
outsl
and
jp
fsubr
mov
repz
aas
adcb
push
jmp
test
or
mov
mov
xchg
xchg
enter
dec
lods
xchg
mov
mov
popa
sbb
push
stc
repz
push
inc
push
jo
stc
dec
inc
mov
and
jae
fidivl
add
in
es
hlt
jg
adc
outsb
pushf
shrb
lahf
addr16
popl
and
lcall
jno
icebp
fwait
xor
movsb
arpl
std
movsb
add
push
test
mov
mov
cwtl
sub
inc
xor
mov
add
jecxz
xor
xor
adc
jns
rcll
popf
xchg
adc
arpl
mov
outsb
cwtl
push
arpl
outsl
jns
push
int3
pop
push
add
sti
dec
fs
mov
mov
inc
lret
and
mov
add
mov
add
mov
push
lods
mov
dec
adc
xor
mov
cmp
cwtl
cmc
stos
jmp
popa
int3
data16
dec
xchg
sbb
xor
dec
jg
dec
sbb
shrl
cmp
push
ss
fdiv
cli
pop
pop
add
loopne
insl
mov
xchg
push
push
cmp
sbb
mov
add
sub
mov
xor
cwtl
lods
pop
loop
push
and
leave
push
pop
add
aad
clc
xchg
subb
fsubrs
inc
cmp
aas
pop
loopne
mov
cmpb
inc
dec
movsb
or
lret
mov
mov
aaa
inc
adc
movsb
mov
or
sbb
and
jge
jl
je
mov
cmp
mov
adc
iret
inc
mov
dec
inc
jb
sbbb
xchg
sbb
arpl
jae
adc
and
push
inc
push
stc
mov
int
cmp
or
jae
mov
lahf
test
mov
repnz
xor
mov
dec
add
negb
push
mov
mov
lcall
je
fidivs
sbb
mov
push
or
cld
inc
mov
jge
int3
mov
stos
or
js
movsb
xor
push
adc
ret
mov
pop
push
data16
jmp
mov
fldcw
stos
int
pop
or
jno
adc
pop
sub
psraw
push
inc
jb
push
or
adc
mov
sbb
int3
xchg
cmp
nop
sbb
repz
mov
aam
mov
mov
mov
repz
xlat
xor
stos
data16
sub
add
fwait
mov
inc
push
aad
mov
sahf
cmpl
jl
or
pop
and
into
jno
xor
fdivl
xchg
ss
dec
xor
pop
loope
and
rolb
cmovg
hlt
jmp
movsb
daa
or
and
sub
addr16
fidivrl
arpl
mulb
pop
pop
movsb
bound
push
and
cli
mov
adc
sbb
mov
rcrb
aas
push
pop
add
test
enter
repz
adc
jp
shlb
loopne
or
repnz
aam
dec
icebp
aam
xor
jb
loope
loop
dec
xor
fdivrs
mov
imul
fs
fnstenv
fisttpll
addl
mov
ja
hlt
cmp
flds
sbb
push
jno
jmp
jp
filds
movsb
orl
ja
pop
sub
or
add
mov
bound
cmp
dec
fstl
cli
sti
ficoms
mov
icebp
addr16
jecxz
add
js
sahf
pop
or
fs
lret
es
or
sbb
test
arpl
lods
cmp
pop
mov
adc
mov
xor
hlt
clc
aam
jmp
in
in
xchg
add
add
xchg
fst
leave
dec
push
and
push
cmp
mov
and
imul
jne
cld
sub
xorl
mov
icebp
mov
mov
jl
enter
icebp
sub
shrb
mov
pop
lret
out
jl
das
mov
test
arpl
pop
jo
mov
lea
arpl
imul
or
or
aas
negb
inc
dec
sbb
fsubrs
pop
enter
ret
lea
ss
jl
mov
lcall
fsub
pop
inc
fs
jmp
mov
sbb
call
cltd
jl
lods
sub
sbb
outsb
inc
and
iret
aas
lods
sbb
xchg
mov
out
out
sub
push
ljmp
xorl
rorl
push
pushf
nop
fs
sbb
dec
push
xor
push
in
push
negb
xchg
jge
push
inc
and
pushf
mov
cmp
jmp
xchg
pushf
mov
out
insl
test
sahf
cmpsb
sbb
xor
xchg
rcll
icebp
inc
push
mulb
jl
sbb
jns
xchg
loope
xchg
arpl
mov
jl
mov
mov
stos
dec
das
cs
cmpsb
bound
jo
rcrl
mov
leave
into
pusha
xchg
out
dec
std
rolb
pop
pop
negl
sbb
scas
jb
xor
jnp
dec
negl
mov
mov
test
sub
repnz
dec
push
xchg
test
or
lods
clc
pop
shlb
push
jb
dec
loop
add
jecxz
mov
lods
inc
aad
iret
jg
dec
daa
lea
cmp
js
fiaddl
jmp
push
fwait
jb
mov
push
pop
and
andb
fsubp
cld
and
cmp
add
cltd
sbbb
iret
mov
adc
mov
cltd
call
add
mov
and
mov
nop
in
in
lock
cld
out
subb
jl
xchg
ret
cli
movsb
jmp
xchg
fadds
cmp
loop
dec
nop
fstps
sub
not
insb
fsubs
dec
dec
adc
adc
jo
push
xchg
aas
inc
sub
cmp
inc
pop
sahf
lcall
mov
aas
adc
hlt
fsubr
mov
lcall
xchg
jno
adc
stc
xor
jl
jne
pop
cmp
mov
scas
lcall
clc
push
add
rcll
mov
faddl
or
xchg
in
outsb
mov
dec
jge
insl
in
subl
scas
pop
cld
fidivs
aaa
mov
pop
pop
test
jns
das
sub
mov
cmpsl
daa
xor
test
dec
mov
sahf
jmp
int
mov
loop
lods
xchg
subb
mov
jecxz
in
lods
cs
fs
rolb
inc
mov
pushf
jno
mov
cmp
cmp
dec
sahf
mov
xor
jno
add
ret
xor
mov
add
cmpsl
mov
into
out
jl
ja
movsb
rcr
pushf
ljmp
adc
in
pop
test
jecxz
aaa
mov
add
sarl
mov
jl
test
clc
jnp
mov
addb
mov
frstor
lds
or
pop
lock
cli
or
or
xor
jmp
xor
je
mov
ret
and
sub
pop
inc
mov
mov
fwait
xchg
cs
inc
inc
mov
lods
cmpb
sub
mov
add
mov
sub
dec
popf
cmp
repnz
lahf
fisubrs
inc
out
icebp
push
outsb
test
push
divl
sub
pop
in
cli
xchg
and
into
roll
cli
lods
mov
or
jnp
movb
movntq
cmp
xchg
xchg
or
xchg
test
cs
inc
mov
rorl
adc
jns
inc
cmp
mov
int
mov
fucomi
push
pop
or
out
das
fdivrl
scas
in
nop
sbb
and
sub
ds
test
incl
mov
lcall
add
push
sti
add
jge
jmp
gs
loopne
jl
jo
clc
xchg
rorl
cmp
jp
pop
jg
mov
mov
cld
sbb
mov
xchg
ret
inc
pop
add
xchg
pop
daa
adc
push
loope
clc
mov
xor
xchg
sbb
xchg
iret
mov
enter
rorb
and
movsl
lcall
test
insb
nop
imul
push
pop
sub
std
xchg
ljmp
cmc
push
mov
xchg
aam
or
inc
cmc
idivl
xchg
enter
idivl
xor
sub
mov
ds
les
push
cmp
subl
lods
pop
xchg
cmp
cmpsl
mov
sarb
mov
cltd
call
inc
stos
pushf
inc
push
dec
inc
cs
clc
leave
jl
cmp
subl
sahf
cmp
pushf
xchg
mov
out
push
out
aam
cmp
mov
xor
shlb
xchg
jp
neg
jae
mov
cmc
stc
mov
add
jecxz
push
mov
mov
mov
and
xlat
cmp
lret
leave
jno
inc
cmpsb
dec
fsubr
clc
in
pusha
ds
outsb
loop
jb
dec
adcl
lret
xlat
fs
mov
lahf
add
in
frstor
inc
xor
pop
xchg
scas
enter
mov
and
mov
iret
dec
add
shlb
mov
xchg
mov
in
mov
mov
jo
xor
adc
repnz
inc
and
imul
hlt
shrb
lds
mov
sub
add
xchg
jne
ja
subb
xchg
adc
push
xor
lods
inc
sub
ja
add
out
cld
int3
cmp
sbb
pop
push
push
ret
mov
fiadds
inc
sbb
mov
and
adc
mov
nop
or
pop
fstps
sbb
cmc
mov
pusha
insl
mov
mov
sti
sub
lret
shlb
ja
rcrl
sbb
sub
ja
fwait
xor
loope
add
es
xchg
push
es
inc
jp
aaa
xlat
dec
push
mov
push
mulb
test
sub
cmp
mov
cld
adc
xchg
inc
call
not
and
es
cs
jecxz
sub
nop
pusha
outsb
call
je
sar
pop
fucom
xchg
not
je
loope
add
and
xchg
stos
jg
jmp
add
cmp
call
fs
pop
or
test
pop
test
ja
add
sub
lods
jbe
stos
inc
and
sub
xor
lods
jo
daa
imul
fisttpl
push
ljmp
cwtl
dec
rorb
outsl
stos
fstpl
ret
mov
mov
ja
test
inc
icebp
fcmovnb
rol
outsb
leave
inc
jecxz
jnp
ja
addr16
inc
js
dec
dec
dec
cmp
fsubp
cmp
ljmp
inc
lret
leave
xor
pop
out
scas
mov
add
cmp
mov
fdivrp
mov
aas
xchg
clc
clc
loopne
nop
aam
mov
loopne
bnd
sbb
and
xchg
sbb
dec
mov
cmovg
dec
or
fstpl
ftst
subb
xchg
add
cs
orl
les
sub
cmpsl
aaa
dec
sbb
adc
imul
fwait
out
jnp
fimuls
ljmp
xor
fwait
leave
sbb
pushl
push
jmp
mov
or
scas
adc
pop
cmp
xchg
aam
test
add
sub
aaa
mov
gs
gs
dec
les
cmpsb
fbstp
rcll
int
inc
test
popl
and
insl
repnz
es
popf
adc
mov
cmpsl
mov
and
jmp
mov
jg
stos
lahf
stos
insb
add
xor
mov
fs
push
dec
ljmp
fs
sub
fiaddl
lcall
subb
xchg
jae
add
cwtl
lock
sbb
mov
jl
mov
enter
push
and
jp
jns
xchg
fdivrs
nop
iret
push
dec
mov
xlat
jns
pop
inc
dec
in
stc
fcompl
scas
sbb
arpl
or
scas
mov
push
sbbl
repnz
call
movsl
pop
jecxz
xchg
pop
imul
in
sbbl
pop
dec
and
mov
mov
and
mov
dec
inc
psrld
popf
jmp
mov
insb
pop
pop
cmpb
or
or
dec
test
mov
clc
cmp
dec
test
out
jns
xor
inc
orb
sub
mov
rorb
or
int
adc
push
loopne
out
loope
sarl
jle
mov
icebp
or
in
xchg
add
mov
sbb
ja
adc
sbb
ret
sbb
add
cli
stos
in
sti
adc
iret
stos
jns
mov
xchg
clc
mov
call
cmp
or
js
pop
js
in
shll
call
inc
out
jge
outsb
inc
in
and
xchg
les
sti
push
clc
dec
adc
sub
movsl
push
cltd
sahf
push
lods
outsl
int
aaa
int3
or
or
mov
pop
add
pop
push
or
jnp
pop
enter
pop
sahf
pop
cwtl
aad
sahf
lea
fisubrl
jmp
inc
or
out
in
fs
loop
mov
push
aaa
sbb
push
icebp
cmc
mov
enter
lret
daa
xchg
mov
xchg
add
pop
adc
das
je
jp
pop
dec
cwtl
subb
xor
add
xchg
or
sbb
cmp
or
or
and
xlat
or
mov
jne
add
mov
ficoml
add
or
sahf
xor
repnz
ficompl
xchg
jns
ds
lret
or
rol
sub
xchg
add
push
xchg
aas
orb
sarb
mov
or
subb
and
pop
cmpsl
call
cmpsl
xor
into
mov
call
cs
das
xchg
sbb
adc
loop
mov
inc
imul
dec
xor
or
xor
dec
sub
sbb
or
shll
xchg
rcll
cld
cltd
mov
mov
and
clc
push
scas
jo
in
in
es
mov
push
roll
add
outsb
sub
fldt
push
insb
adc
clc
cmp
push
arpl
mov
int
jno
or
loopne
mov
hlt
push
movsb
les
inc
pop
scas
out
lds
movsl
jge
call
ds
jmp
movsl
xchg
popf
insb
push
aas
bound
push
loopne
repnz
fisubs
cmpl
pusha
pop
mov
imul
out
mov
nop
cmpsb
cltd
lcall
jg
je
dec
inc
dec
pop
outsl
cs
aam
mov
aaa
xchg
push
cmc
and
inc
cmp
enter
mov
inc
lea
sbb
addr16
in
sbb
adc
xchg
lcall
ret
xchg
push
loopne
pop
pop
mov
pushf
adc
jb
lcall
jle
std
pop
sti
ret
pop
xchg
lret
xor
cmpsb
jb
int
and
push
xchg
mov
dec
pop
push
pop
inc
stc
fisttps
outsl
lea
cmp
mov
and
pop
sub
imul
lock
pop
repz
mov
add
movsl
push
push
fists
arpl
dec
es
idivb
fdivrs
lcall
das
inc
fs
adc
nop
mov
icebp
popl
pop
pop
int3
xchg
and
scas
dec
lds
push
mov
scas
mov
mov
add
lcall
imul
aam
lea
in
daa
shr
add
lods
dec
bound
push
rolb
lods
xor
sbb
cltd
jmp
sub
mov
loop
dec
dec
dec
inc
pop
adc
cmpsb
jp
repz
leave
cmpsb
jb
in
mov
inc
bound
adc
sub
xchg
sar
scas
cmp
and
add
jg
lock
mov
fdiv
test
test
rcll
mov
lock
xchg
in
loopne
add
sub
out
lds
mov
ds
xor
push
cmp
lret
pop
push
mov
add
ja
push
xor
or
jmp
cmc
mov
adc
mov
sub
push
mov
cmc
loope
fisubrl
xchg
test
pop
mov
push
clc
jecxz
aad
ret
rclb
mov
fsubs
push
shll
dec
add
pusha
inc
adc
add
cmp
jle
int
sub
push
inc
jl
mov
shlb
inc
jge
hlt
adc
dec
pusha
cmpsb
sub
jnp
or
mov
hlt
push
adc
lret
cmp
xchg
repz
lahf
mov
and
xchg
cmp
cs
in
add
mov
sbb
adc
jge
sub
fnstenv
ret
jmp
mov
or
inc
mov
mov
test
mov
jge
popa
loopne
dec
enter
mov
or
rorl
loopne
jecxz
pop
xchg
outsb
mov
addl
and
test
fwait
test
sbb
fsubrs
sub
adc
int3
and
mov
or
push
fwait
push
mov
mov
mov
idivl
and
cmc
pop
push
pop
aam
mov
sti
ljmp
xchg
sahf
arpl
and
sar
scas
les
push
dec
xchg
or
fs
or
into
std
jno
mov
scas
das
dec
call
mov
push
or
enter
cmpsl
iret
xchg
inc
adc
in
adc
sahf
cltd
sub
jg
inc
mov
mov
cli
adc
and
xchg
jle
popf
xchg
sub
enter
pminub
subb
out
cmp
sub
popf
push
lods
rorb
dec
mov
clc
and
mov
mov
in
ds
cltd
sbb
imul
xchg
fsubl
aaa
dec
and
xchg
dec
push
scas
inc
fidivl
jge
les
or
xor
mov
pop
lahf
ljmp
add
addr16
jae
lret
and
push
ss
std
dec
nop
cmp
mov
cwtl
fldl2e
xchg
std
stos
jns
add
mov
dec
and
xchg
add
leave
pushf
sub
jne
jbe
adc
dec
push
pop
push
push
daa
xor
popa
outsb
pop
pop
mov
add
push
fisttpll
cs
xchg
lock
jg
mov
fbstp
mov
sub
mov
ficomps
ja
int
or
filds
push
sub
flds
popf
pop
in
push
lcall
push
cmpsb
fidivs
shlb
das
sbb
xor
mov
aam
mov
in
stc
ss
or
and
or
popl
add
loopne
jno
jg
or
loopne
or
cs
sub
mov
rol
popa
cwtl
mov
aam
and
or
sub
adcb
sub
lock
add
xor
pop
and
push
lock
adc
jg
in
and
push
lret
inc
push
fwait
daa
call
shll
cltd
push
add
ret
inc
sub
pop
fisubl
jb
xor
incb
jp
mov
mov
adc
sub
inc
fstps
fs
shl
andl
pop
ja
dec
dec
jns
adc
test
dec
xchg
data16
lahf
push
sbb
pop
lods
rolb
jecxz
popa
into
adc
lods
orb
xchg
insb
sub
jp
nop
xchg
mov
fwait
sub
popl
sub
xor
jl
adc
add
xlat
popa
mov
inc
fwait
out
dec
cmpb
ss
pop
pop
jnp
stos
aam
xchg
out
fistpll
jge
jno
fs
repnz
rorb
les
enter
mov
add
cmp
iret
das
or
out
sub
push
decl
cmp
icebp
xor
mov
jecxz
push
test
incb
cs
clc
rcll
in
inc
mov
sbb
lea
sbb
add
lds
call
add
push
mov
lods
pop
movsb
insl
mov
std
xor
jge
movsl
jmp
lods
ss
into
lcall
gs
or
jo
dec
insl
xchg
xchg
in
pop
data16
jns
or
and
cmp
es
scas
aas
pop
xchg
rorl
popf
xchg
sub
pop
and
insb
push
and
out
adc
and
and
lahf
xlat
mov
cs
cmpsb
in
and
adc
lretw
sub
ss
jecxz
sahf
iret
dec
push
repz
and
lret
rorb
xor
fisubrl
and
push
xlat
dec
xor
adc
int
mov
lret
arpl
xchg
aaa
ss
idiv
push
imul
and
dec
aaa
lret
sarb
pusha
xor
dec
insl
adc
xor
repz
adcb
cmp
out
fcoml
mov
xor
iret
mov
mov
add
mov
or
test
insl
push
gs
int3
data16
cmpsl
dec
sub
jle
add
cltd
jge
outsl
push
mov
dec
movsb
imul
fmull
push
jp
jle
lahf
nop
mov
mov
shr
insb
shlb
popa
int
jp
mov
cmp
xchg
mov
inc
sbb
daa
jne
ja
lock
clc
mov
mov
pop
pop
out
push
jbe
add
inc
mov
pusha
cmp
mov
test
push
adc
xor
push
pop
cmp
xchg
push
pop
jge
sbb
popa
xchg
xchg
push
je
and
mov
cmp
add
loop
mov
mov
mov
ret
lahf
subl
adc
adc
movsb
and
pop
cmp
dec
xor
mov
mov
mov
movsl
addr16
mov
jg
jae
outsb
lods
adc
ss
push
pop
sbb
cmpsl
sahf
xor
xor
in
push
push
int
push
dec
cmc
loope
out
shl
call
rcrb
mov
in
and
loope
sub
pop
mov
imul
mov
xacquire
lock
flds
mov
out
shll
jecxz
andb
mov
hlt
ds
in
inc
lahf
xor
jbe
push
fdivl
stc
cs
adc
je
add
mov
lea
stos
dec
sub
mov
mov
lock
dec
fisubrl
insb
je
adc
or
adc
xor
in
pop
or
adc
and
xor
push
incl
mov
sbb
lods
pop
push
ficoms
cmp
mov
mov
fstl
loop
out
out
sbb
lcall
pusha
fcompl
daa
rcr
mov
ss
lret
mov
mov
arpl
test
mov
dec
or
sbb
push
cld
outsl
jmp
push
lea
sbb
movsl
in
pop
add
sbb
in
push
ss
push
test
pop
mov
sub
jbe
cltd
mov
and
cs
push
iret
push
std
gs
das
mov
addl
xchg
iret
fidivl
dec
jge
xor
mov
lea
lcall
add
mov
aam
or
xchg
jge
push
cmc
jg
outsb
xor
mov
repnz
shlb
fisubl
mov
out
lret
or
negl
push
pop
scas
or
lahf
lcall
mov
push
xor
movsl
mov
inc
dec
pop
aad
pop
cmp
push
loop
pop
mov
in
enter
jae
in
ficomps
add
in
arpl
mov
cmpsb
imul
push
fcmovu
mov
stos
mov
jns
add
pushf
add
and
test
movsl
push
push
xchg
insb
inc
adc
inc
in
fsubl
sbb
out
adcb
out
jl
pop
pop
pop
jae
daa
xor
aas
jno
cmp
stos
or
xchg
mov
repz
sahf
lcall
sti
sti
xchg
out
push
ret
dec
push
jae
xor
cmp
sbb
xor
add
mov
adc
xor
mov
sbb
sbbb
push
int
cmpsl
push
test
lock
xchg
scas
dec
pop
stc
ljmp
and
stc
mov
aaa
and
mov
cmp
iret
add
or
nop
hlt
icebp
or
mov
or
lcall
or
inc
lahf
xchg
rcrl
mov
and
and
std
les
push
gs
mov
pop
sub
aaa
stc
jnp
je
aam
or
or
movsb
push
inc
adc
movb
pop
lods
iret
orb
lret
mov
pusha
shlb
push
xchg
fmull
add
pop
out
lret
pop
test
ss
test
push
jo
loopne
jmp
sbb
scas
mov
pop
add
add
stos
pop
mov
cmpsb
inc
push
lretw
push
roll
mov
pop
stos
adc
push
pop
les
shr
mov
popa
int3
xor
lret
call
xchg
add
sti
jae
sbb
insl
popf
fldl
mov
mov
and
dec
pop
out
or
cwtl
test
fistps
jo
pop
dec
stos
and
add
and
cld
test
nop
lret
scas
popa
or
push
nop
xor
lods
das
jno
fs
aad
insl
and
bound
push
jle
popa
xchg
test
and
aad
loope
inc
mov
xor
fnstcw
fwait
sub
cwtl
js
pop
mov
test
cmc
sbb
je
ret
sbb
mov
ja
outsl
das
insl
mov
into
into
jg
dec
cmp
enter
sub
or
sbb
cmpsb
mov
repnz
add
jge
xor
xchg
mov
aad
or
shlb
xor
dec
push
call
leave
out
pop
inc
xchg
adc
push
xchg
cmp
push
in
in
data16
or
mov
xchg
dec
cld
ss
les
bswap
std
sarl
inc
jns
inc
sbb
mov
outsb
xor
mov
lcall
test
je
xchg
jnp
sub
int3
nop
pop
rclb
fistps
fsubr
jbe
fistpll
aad
xchg
gs
je
aam
repz
adc
xchg
lahf
and
fsubrl
outsb
and
test
out
cmp
es
jmp
xor
xchg
jge
stos
fstpl
out
lock
dec
bound
iret
and
inc
aad
testb
ret
mov
lods
ds
movsb
enter
mov
pop
xor
dec
stc
push
cmp
popa
mov
dec
aad
shlb
inc
xchg
or
xchg
push
sbb
sub
cmp
cmpsl
mov
scas
adc
inc
movsb
loopne
sbb
mov
xchg
push
jmp
jg
adc
ljmp
dec
lea
lcall
or
aaa
sub
out
enter
imul
popf
xchg
add
sub
sti
xchg
leave
inc
ja
jnp
addl
cmpsb
or
rcll
push
pop
imul
push
adc
and
mov
xor
sbb
and
dec
mov
mov
mov
popa
inc
mov
orb
xor
lcall
xlat
jne
xor
sub
repz
or
lock
stos
pop
jo
aas
icebp
and
push
movsl
movsl
sahf
dec
sbb
vmovupd
in
cltd
sub
nop
push
jns
and
inc
scas
aam
dec
repz
adc
sbb
xor
add
ja
pop
push
jle
arpl
cmp
push
sub
dec
in
pop
mov
ret
mov
sub
cmp
and
sub
out
js
loopne
movsl
xor
push
sub
pop
and
mov
imul
scas
mov
jmp
shl
in
clc
push
mov
push
mov
shll
out
and
jge
cmp
or
push
dec
dec
rclb
pop
test
fwait
cmp
into
movsl
jg
pop
xor
jno
popl
add
int3
xchg
dec
jl
das
inc
sub
mov
pushf
sub
lret
cmp
and
mov
jp
xchg
cmp
xor
xor
xchg
adc
push
aam
jo
xchg
xor
fcmovnbe
xchg
insb
addr16
in
xlat
lcall
ret
xchg
mov
shrb
adc
sti
clc
cmp
pop
int
arpl
addl
jl
sub
rolb
idivl
insb
outsl
in
pusha
cmp
hlt
dec
bound
sbb
bound
xor
jne
mov
ror
add
bound
adc
mov
bnd
sti
or
insb
xchg
dec
int3
dec
mov
mov
sbb
push
into
inc
repz
push
in
pop
adcb
pushf
jle
hlt
mov
hlt
lahf
push
mov
inc
imul
xor
je
mov
in
stc
test
popf
push
stos
adc
lea
loopne
push
add
insl
popa
subb
sbb
cmc
xchg
int3
sbb
faddl
push
jmp
sti
adc
lds
jmp
movsb
sti
sbb
dec
push
fistps
in
jbe
test
repz
inc
or
lds
in
push
xor
push
stos
cmc
aas
pop
scas
dec
xchg
movsl
pop
cld
shrl
pop
movsb
sbb
push
lds
cmc
adc
adc
jnp
andb
push
nop
xchg
mov
jbe
sub
dec
lds
sti
and
sub
pop
aam
xchg
xchg
mov
push
xchg
dec
clc
inc
lods
stos
pop
sub
xchg
ret
ljmp
push
popf
imul
ret
jnp
lcall
jle
xlat
mov
cmp
mov
mov
emms
test
inc
mov
cs
movsb
inc
es
ja
xor
push
js
addb
icebp
jb
xchg
xor
enter
repnz
arpl
test
mov
pop
mov
adc
inc
inc
cmp
add
jnp
stos
fwait
lods
and
testl
mov
fcoms
jp
mov
fwait
dec
dec
mov
rcl
cmp
outsl
lcall
mov
pop
out
sbb
push
push
jl
push
mov
cwtl
popa
ret
in
xchg
repz
je
add
je
pop
pop
mov
out
dec
sub
push
pcmpgtd
and
test
dec
or
inc
orb
repnz
mov
sbb
cltd
in
xor
incl
or
xchg
cs
into
push
fldcw
or
jno
jp
mov
cmpsl
dec
push
ss
arpl
fwait
outsl
mov
pop
inc
add
jo
cmp
jb
comiss
pop
pop
stc
fidivs
insl
add
aam
sysret
clc
pushf
pop
je
outsb
inc
xchg
outsl
sbb
test
mov
cmp
jo
push
andb
outsb
push
xchg
sub
popaw
in
cmp
arpl
pop
mov
mov
fadds
mov
nop
pop
ljmp
lea
js
aad
mov
std
in
ja
sbb
mov
jmp
xor
cmp
mov
les
cmpsl
aas
jnp
pusha
add
push
popf
outsl
pop
outsl
je
roll
cmp
cltd
mov
idivb
push
xchg
mov
cld
je
xchg
cmp
fisubrl
cmpsl
sarb
daa
add
cmp
xchg
dec
mov
xchg
push
inc
mov
clc
xor
cmp
int3
jne
hlt
cmpsb
push
fsubrs
pop
js
aad
xchg
cld
jmp
popf
sbbl
sbb
push
rcl
sub
mov
sarb
gs
cmp
js
outsb
mov
loopne
xor
rcrl
enter
das
sub
stos
lcall
inc
pusha
add
movsl
push
inc
sbb
sbb
rolb
ret
ja
mov
mov
dec
jg
xchg
push
mov
enter
add
sahf
cmp
sbb
sub
push
inc
stos
sbb
push
loopne
icebp
les
and
pop
movsl
scas
rorb
addr16
popa
iret
cmp
sbbb
dec
jnp
and
lds
repnz
test
sbb
cmp
pop
jne
mov
jo
into
mov
jl
call
ss
hlt
inc
call
fdivrs
cmc
dec
and
push
xor
adc
subb
or
mov
dec
xor
fstpl
inc
das
cmp
adc
ljmp
cli
testl
add
mov
fwait
sbb
xchg
hlt
pop
xchg
push
imul
loope
sub
jbe
pop
adc
or
movsl
dec
cmp
inc
out
cmp
and
dec
iret
test
rclb
push
movsl
and
adcl
ljmp
in
xor
fucomp
stc
daa
jecxz
push
ficompl
cmp
mov
xor
jo
ss
xor
dec
adc
push
mov
sub
and
xor
ljmp
dec
into
push
xchg
jle
int3
or
ljmp
cld
testl
sub
add
mov
cltd
imul
push
sbb
sub
pop
out
je
imull
push
pop
adc
and
out
loope
cltd
cmpsb
mov
sub
push
imul
mov
movhps
mov
cs
out
jecxz
push
test
cli
pop
test
inc
xchg
sub
push
or
jae
repnz
std
pop
out
mov
into
pop
call
jmp
das
test
orl
xchg
mov
push
movsb
push
lods
sbb
dec
ficompl
into
out
add
mov
jmp
xor
shr
or
inc
adc
sbb
shll
adc
sti
inc
and
sub
and
inc
or
pop
sub
add
lcall
add
pusha
scas
inc
mov
aas
xor
jns
inc
adc
lret
lcall
aaa
sbb
push
mov
icebp
or
cmpsb
hlt
aas
jecxz
je
ds
pop
lcall
xor
mov
in
addl
fistpl
inc
add
popf
xor
mov
test
nop
add
sqrtps
in
mov
ljmp
xor
arpl
rorl
cli
or
add
add
sbb
jle
sbb
jmp
outsl
add
push
add
jp
and
movsb
inc
rol
jno
inc
movsb
jge
inc
xchg
lods
fisttpl
rclb
enterw
cmpsb
pop
sbb
jns
jae
leave
imul
xchg
mov
mov
ss
cmp
popa
pop
dec
mov
push
mov
cmpsl
jnp
daa
in
jns
jmp
sbb
repz
movsl
outsl
aaa
or
test
mov
inc
gs
in
out
mov
jae
ret
pusha
sbb
jl
subl
insb
or
dec
add
scas
cmpsb
call
cwtl
mov
mov
dec
mov
xor
mov
aam
adc
ljmp
cmpsb
jbe
xchg
mov
push
cld
push
pop
in
sti
out
ljmp
out
popa
sbb
enter
push
int
mov
xlat
aad
adc
xlat
dec
mov
outsb
and
fistpl
das
xor
addr16
sub
jle
outsb
aam
mov
mov
adc
cmp
outsl
pop
repnz
jmp
sub
popl
adc
cmc
ror
mov
lock
cmp
xchg
fs
inc
and
cmc
xadd
ret
nop
pop
fcomi
arpl
out
adc
sub
andl
in
fnstsw
scas
adc
int
fisubl
jl
mov
jmp
or
or
add
movsl
cmp
mov
sbb
aas
lret
mov
add
sub
nop
fwait
cmpsl
call
mov
fstpt
dec
daa
mov
xchg
out
enter
inc
inc
sbb
int3
icebp
pusha
mov
ret
adc
call
mov
xchg
mov
cmpsb
mov
jecxz
or
pop
sbb
sub
movsl
pop
mov
xor
xchg
cmpsb
dec
fistl
jl
fcoms
cmp
pusha
xchg
stos
cmpsb
icebp
mov
cld
jo
shrl
scas
mov
jecxz
xor
and
scas
add
or
into
mov
mov
lahf
in
xor
test
cmp
xor
test
push
sub
hlt
jb
daa
pop
dec
adc
inc
cmp
push
sbb
or
push
outsl
sbb
inc
inc
xor
xor
std
fsub
in
stos
lods
scas
pop
or
mov
and
mov
inc
arpl
mov
mov
mov
inc
and
push
or
mov
lea
adc
sub
jp
inc
lcall
jmp
out
xchg
pop
mov
mov
and
insb
fcomi
clc
enter
or
jno
daa
adc
out
stc
lahf
fisttpl
int
cmp
dec
test
jl
fstl
arpl
inc
adc
mov
pop
cmpsb
leave
pop
pminsw
outsb
out
cld
cltd
mov
push
mov
or
fsubl
push
jle
xchg
push
cs
dec
jecxz
movsl
gs
rcl
jbe
and
and
js
jno
dec
in
add
sahf
ret
mov
mov
adc
adc
jno
cmp
shlb
inc
lcall
dec
push
mov
cmp
ljmp
pop
pop
loope
rol
test
sub
ja
out
xor
orb
out
jp
and
mov
out
mov
sub
adc
jg
ljmp
xchg
insl
xor
sbb
dec
ljmp
outsl
js
add
add
int
shlb
fldt
or
movsb
jae
jg
push
add
sub
insb
test
adc
and
and
frstor
jns
mov
jo
movsb
and
xor
push
xlat
cmp
xlat
xor
lods
inc
xchg
addr16
sub
jmp
neg
out
mov
inc
jecxz
movsl
add
leave
popa
jecxz
fstps
sahf
in
mov
cltd
jp
mov
mov
out
mov
pop
imul
pushf
popa
data16
testb
fsub
add
call
add
cmp
icebp
mov
mov
mov
and
mov
orb
mov
shll
js,pt
mov
mov
loop
repnz
ljmp
dec
xor
in
sub
jne
movsb
ja
addr16
arpl
mov
push
and
aas
mov
jg
loop
pop
not
sbb
jo
lret
xor
mov
mov
je
hlt
lahf
clc
jb
notb
outsl
rep
ss
ficoml
ret
or
push
jle
ret
sub
pop
sbb
xchg
aaa
cmp
mov
or
sub
aas
fldt
repnz
dec
rcll
lahf
and
add
jno
lret
pop
lret
mov
fsubl
inc
and
xor
notb
ljmp
fs
hlt
jecxz
push
add
mov
dec
popf
lods
mov
xlat
mov
lods
dec
jg
rorl
es
mov
inc
out
gs
xchg
push
sbb
xor
mov
mov
or
jecxz
or
out
adc
and
adc
out
mov
stos
sbb
xor
loop
ljmp
cwtl
iret
aad
lret
iret
mov
adc
mov
and
test
adc
xlat
lds
nop
mov
mov
xchg
and
push
scas
dec
sub
lcall
repnz
ljmp
mov
jb
imul
xchg
inc
mov
add
xor
lea
mov
pop
iret
sub
nop
fs
jno
sub
sub
es
mov
inc
imul
mov
loop
sub
enter
in
jle
sbb
test
pop
push
es
inc
push
jae
ficompl
pop
adc
sahf
sub
push
jp
pop
mov
pop
xlat
outsl
xor
scas
sbb
xor
lret
js
sbb
movsb
daa
mov
push
repnz
into
out
int3
pop
bound
stos
arpl
push
mov
mov
xor
push
adc
mov
add
ds
fldt
sahf
and
pop
and
daa
mov
add
xor
cli
add
lods
hlt
sbb
cmp
or
or
iret
mov
pop
test
and
aam
mov
xchg
lret
adc
leave
test
xor
pop
xchg
inc
push
mov
inc
arpl
mov
cltd
inc
fwait
ds
lock
inc
clc
inc
add
push
cmp
sbb
xchg
dec
insb
scas
das
fisubrl
xorb
pop
and
inc
pop
leave
js
lret
aas
jno
ds
push
aam
push
sbb
pushf
jp
pop
cltd
pop
adc
fsubrs
fstpt
dec
in
movsb
lret
mov
xlat
pop
xor
inc
sbb
gs
xchg
inc
out
or
cmpsl
cs
push
testl
lock
sub
inc
mov
sub
xor
je
mov
adc
sbb
pop
daa
xchg
leave
andb
lods
cmpsl
push
cmc
mov
xchg
sbb
lock
out
jno
jbe
cmp
icebp
or
cmp
adcl
add
std
incb
mov
call
inc
or
push
jl
and
add
inc
lds
sub
ljmp
mov
rclb
and
in
jle
jns
in
faddp
xchg
cltd
nop
stos
push
loop
xor
call
or
jbe
inc
pop
gs
jae
mov
ret
sub
mov
dec
outsb
mov
push
jne
and
mov
add
push
push
inc
sarl
nop
jno
cmp
xlat
mov
js
xlat
loope
mov
lds
cs
pop
test
or
test
cs
mov
jae
jecxz
int
movsb
stos
xor
jae
mov
inc
sbb
lahf
pop
lods
xchg
notl
jl
shll
daa
push
and
push
xchg
mov
push
test
mov
aaa
sbb
pop
sti
push
mov
adc
and
mov
sahf
mov
leave
mov
es
sub
ret
test
loope
add
stos
jle
cli
add
outsb
add
pop
push
clc
out
mov
out
cmp
popa
jge
mov
lods
aad
dec
xchg
scas
dec
dec
mov
dec
xor
lea
or
push
cmpsl
add
gs
jl
repz
xchg
inc
add
pop
aam
cmp
mov
lods
fs
cs
call
sbb
rorl
sub
dec
jbe
cmp
fistl
pusha
cmp
sub
nop
fwait
pop
mov
cmp
dec
icebp
and
faddp
cmp
pop
enter
sub
outsb
test
xchg
outsl
sarb
test
aad
adc
push
pop
imul
pop
push
mov
clc
leave
pop
xchg
mul
stos
ss
fcmovb
test
or
shll
xchg
aad
arpl
ljmp
xchg
mov
mov
aad
orb
pop
dec
jbe
aaa
xlat
addr16
mov
and
cmc
cmpsb
pop
divb
stos
xchg
shlb
sbb
push
sub
clc
into
shlb
seto
dec
fcoml
aam
fs
xchg
scas
lods
into
mov
jbe
add
add
pop
pop
scas
loop
pop
jne
jo
popf
in
dec
mov
nop
mov
xchg
jmp
push
pop
jge
pushl
cwtl
mov
cwtl
push
test
fdivs
lock
loope
pop
push
lcall
rcll
dec
lock
or
mov
jl
out
add
pop
aaa
fs
mov
xor
ret
stos
roll
loope
rcr
mov
lock
inc
mov
out
jns
inc
dec
arpl
ret
mov
xchg
inc
lahf
aas
fs
jmp
mov
pop
les
loope
mov
xchg
roll
push
orb
mov
insb
bound
jo
les
push
jle
mov
mov
push
push
add
xor
xchg
fiaddl
cmp
pop
stos
and
ljmp
and
fisttpl
xchg
push
dec
adc
mov
test
cmp
les
xor
jno
inc
scas
cltd
jno
jmp
scas
mov
imul
or
mov
and
rorb
adc
mov
jns
mov
push
dec
cltd
xchg
xchg
mov
ja
rcll
adc
add
outsl
movsb
xor
fimull
adc
clc
sbb
mov
icebp
sub
push
dec
inc
stc
and
fisttpl
addr16
incb
inc
or
movsb
call
lret
adc
pop
jo
insb
lock
in
call
xor
aad
sub
insl
pop
push
mov
xor
jge
pop
mov
adc
mov
aam
data16
fwait
or
adc
adc
rol
bound
aaa
cmp
jne
stos
cmp
scas
mov
mov
pop
pop
jge
jge
daa
push
mov
in
and
aam
sahf
cmpsl
es
and
mov
outsl
cs
push
cmpsl
fadds
lret
push
lods
lret
inc
fsts
shrl
addr16
test
cmp
jle
pop
lea
fwait
mov
mov
gs
pop
test
int
enter
loop
xor
lret
mov
cmpsl
jb
jno
in
int3
mov
in
lret
mov
xchg
aas
push
jne
mov
inc
enter
into
icebp
jle
sub
xor
dec
pop
mov
in
inc
or
sub
fwait
jnp
jae
xchg
cmp
or
addl
fcmovbe
aaa
jl
sbb
adc
fwait
xchg
push
add
jno
test
cmp
sti
in
in
dec
aas
sbb
xchg
sub
add
call
cmc
push
jl
xor
dec
insb
nop
lcall
and
dec
pop
pop
sub
adc
mov
pop
shll
xor
adc
ja
xor
arpl
push
jg
lahf
lret
inc
loope
fwait
ficompl
movsl
push
jg
xor
xchg
cmc
mov
sahf
add
pop
gs
sub
repz
lds
aas
loopne
adc
cmpsb
jo
pop
cwtl
jecxz
loopne
loope
imul
jb
bound
sub
jge
shrl
sbb
mov
push
cmp
sbb
xchg
sub
rol
cmpsl
push
pop
iret
aad
fistl
pop
repnz
jmp
subl
popa
mov
cli
mov
faddl
icebp
pop
loop
add
mov
xor
scas
inc
sub
add
daa
mov
xchg
idivb
jnp
rorb
push
jg
ja
push
mov
mov
push
outsb
mull
mov
test
mov
push
cltd
sbb
jg
mov
adc
add
mov
mov
push
push
adc
mov
adc
sub
mov
mov
jae
and
inc
int3
inc
aad
cmc
test
mov
out
clc
push
or
xchg
out
fbld
add
inc
loope
push
in
adc
fs
rcrl
out
fwait
jnp
ret
pop
xchg
fadds
sbb
dec
shll
lcall
add
mov
inc
aaa
jb
and
lods
orl
cmp
mov
and
xchg
mov
lahf
aaa
mov
int3
xchg
sbb
clc
fwait
push
or
test
flds
ret
pusha
ja
jae
test
adc
mov
adc
dec
mov
lock
addr16
cmc
shlb
mov
xchg
lret
aas
sbb
sub
jo
push
ds
sbb
sub
fwait
out
jle
insb
sbb
mov
jle
mov
std
add
jbe
add
pop
xor
cmp
lahf
push
mov
mov
data16
sbb
jmp
popf
in
pop
ss
cltd
shlb
mov
shl
sbb
inc
push
stos
mov
add
shrw
mov
dec
outsb
ror
cs
dec
mov
xor
mov
out
subb
mov
xor
test
cwtl
pop
push
inc
into
mov
mov
gs
aad
push
adc
out
jbe
mov
sbb
mov
iret
insb
cmc
dec
mov
scas
xchg
lahf
and
stos
fmull
mov
shlb
cmp
or
nop
mov
loope
in
push
mov
test
push
sahf
sbb
imul
or
sahf
push
lret
pop
leave
pop
divb
sti
mov
adc
jp
out
std
mov
ss
mov
in
jge
rclb
mov
add
mov
mov
outsl
into
addr16
mov
dec
sub
inc
sbb
push
dec
xlat
sub
sub
pushf
xor
or
test
insl
sar
jg
call
sarb
mov
sti
xchg
jle
push
xlat
adc
test
adc
in
sti
add
xor
pop
xchg
addr16
scas
mov
pop
lods
int3
cmp
int3
sub
loopne
cmp
fnop
inc
add
cmc
xchg
lcall
bound
cmpsl
negb
push
pop
clc
push
mov
loop
or
mov
aas
lods
addl
cmovno
mov
push
inc
mov
fists
hlt
cmp
push
shlb
add
notl
dec
dec
sbb
outsb
mov
mov
repz
jnp
dec
sbb
push
push
jmp
cwtl
mov
ds
mov
jecxz
sti
mov
jmp
ss
outsl
mov
test
out
ja
sub
sar
add
imul
in
fcompl
addr16
mov
push
jg
lock
out
dec
pop
push
mov
inc
fsts
imul
fs
xor
or
insl
dec
mov
lahf
test
mov
insb
out
andb
call
sub
movsb
adc
or
ljmp
icebp
push
add
cmc
in
or
xor
jg
iret
push
cmp
mov
mov
sbb
movl
dec
imul
jb
dec
push
inc
popa
add
cmpsb
cmc
dec
mov
push
es
repnz
pop
xchg
xor
mov
fucomip
sbb
cs
aam
arpl
adc
imul
sar
fs
sub
adc
arpl
fwait
mov
fisttpl
xchg
fsts
popa
xor
mul
mov
imul
scas
int
aaa
shr
mov
test
andl
xchg
mov
adc
ret
std
xchg
dec
aam
lcall
mov
fwait
sub
push
nop
sub
movl
repnz
aam
aam
dec
sub
sysenter
movsl
xor
scas
outsb
add
xchg
jecxz
pop
test
lock
or
mov
rcrb
pop
mov
mov
pop
aas
mov
aam
iret
sbb
iret
mov
in
mov
cmp
pop
xchg
lret
aam
xchg
mov
pop
outsl
ljmp
incl
je
lea
adc
xlat
daa
imul
mov
mov
ficoml
and
xorb
imul
loope
xor
dec
mov
sti
mov
sets
or
inc
jb
jae
addl
lahf
adc
and
mov
rorb
jo
push
xchg
movsb
xor
add
add
insb
and
inc
out
or
push
xor
pusha
hlt
jne
popf
xor
loopne
repnz
je
adc
out
push
sbb
jge
imul
xor
jge
mov
xlat
push
and
fnstcw
mov
cltd
inc
bound
cmpsl
push
repz
jo
jae
insb
push
jno
jmp
inc
mov
nop
inc
sbb
pop
test
sub
js
fildl
std
gs
dec
out
insl
mov
mov
mov
xchg
push
or
mov
dec
xchg
das
enter
adc
icebp
xchg
lds
add
inc
sub
inc
push
loope
cli
mov
scas
lret
pop
and
ss
jns
dec
rorl
push
cld
inc
mov
daa
gs
test
jns
push
stc
je
mov
daa
sbb
outsl
dec
jo
icebp
lret
inc
movsb
test
and
repz
pop
sahf
mov
test
shrl
push
pop
daa
test
call
and
aaa
and
or
add
aad
loope
jae
dec
ret
or
cmp
push
mov
cmovno
int
sahf
aaa
sbb
cwtl
inc
jmp
movsl
test
aas
icebp
adc
xor
movsb
ret
cmp
gs
js
add
mov
pop
ja
insb
and
call
sub
out
push
rolb
and
insb
movsl
add
xlat
push
subl
aad
test
outsb
xor
sub
jb
js
sub
stos
push
jmp
insl
into
ror
imul
test
push
pop
adc
or
sahf
or
ret
clc
stc
cmp
xchg
arpl
popa
mov
jne
mov
cmp
jae
decb
scas
pop
popf
push
ja
adc
jno
jg
jb
mov
pop
mov
adc
xor
lods
adcb
test
incl
test
dec
aas
jle
jae
jle
orl
xchg
jle
rcrl
fcoml
cmc
cmc
addb
pop
push
mov
aad
push
xchg
fisubl
mov
mov
and
stc
inc
push
mov
dec
mov
sub
into
and
nop
sub
insl
lcall
nop
and
ds
out
dec
push
mov
data16
sbb
arpl
mov
add
ret
dec
add
ja
fnstsw
mov
jno
clc
cmp
pop
xchg
pop
out
in
dec
xchg
cmpsb
dec
fs
cld
push
pop
mov
pop
inc
fwait
bound
mov
int
imul
mov
cld
mov
repnz
sbb
xor
jmp
xchg
ljmp
cltd
std
cmc
stc
jnp
jle
or
ja
dec
xor
mov
pop
mov
loop
mov
add
pop
dec
pop
int3
cmc
hlt
jmp
xchg
and
shlb
xor
push
and
fs
or
mov
adc
hlt
rcrb
test
std
or
jno
mov
aam
aas
and
xchg
or
in
mov
dec
jne
pushf
cmp
mov
add
out
int
inc
pop
sub
or
jmp
xorl
and
shlb
pop
xchg
inc
shll
cmc
mov
mov
aam
mov
pop
data16
loope
mov
xchg
or
and
fldl
pop
jns
shrl
and
push
fsubrs
jne
push
and
andl
xchg
add
imul
pusha
aaa
xor
je
dec
pushf
xor
repz
subb
push
adcb
adc
push
and
rcrb
cld
jle
pop
mov
aas
add
mov
cmp
ds
sbb
pop
sbb
aaa
cwtl
jecxz
test
aaa
fisttps
or
adc
rolb
popf
outsl
sbb
fdivl
sarb
xchg
mov
push
lcall
fs
pushf
jbe
fnstenv
pop
outsl
add
add
loope
lods
mov
shrb
push
lds
lods
cmp
xor
ja
push
je
push
or
mov
cmp
cs
decl
xchg
or
lret
in
ret
pop
and
test
das
out
or
jno
cli
mov
mov
movsl
and
pop
jmp
cld
aaa
lds
mov
test
lahf
fstpt
fucom
add
mov
dec
shl
jbe
test
rcll
pop
jmp
loopne
and
imul
ret
mov
cmp
in
push
dec
dec
lock
add
pop
sahf
call
test
inc
in
lods
push
mov
lea
es
sahf
aad
sbb
mov
mov
shl
shll
dec
inc
stos
add
jmp
cmp
movsb
ret
adc
dec
test
in
mov
lods
lcall
inc
icebp
std
mov
xchg
xchg
cld
aam
sbb
ds
xchg
and
pop
mov
pop
mov
cs
sub
movsb
sub
jnp
pop
jo
mov
in
and
or
hlt
pusha
lahf
jp
xchg
inc
adc
leave
fwait
mov
sahf
testl
stc
movsb
jmp
repz
iret
mov
adc
xor
jne
and
dec
fidivrl
jb
add
mov
sbb
adc
cwtl
pop
or
mov
xor
sub
fs
xchg
jae
cmp
sbb
lock
bound
pop
call
stc
jl
mov
add
cmpsb
out
loopne
clc
sub
sarl
sub
out
leave
dec
jne
jmp
xchg
shr
lock
mov
lcall
hlt
pop
pop
xlat
inc
inc
add
xor
orb
add
dec
sub
adc
xchg
add
insl
sub
arpl
jns
xor
fld
xchg
dec
pop
fs
cmp
js
pop
pop
in
jbe
movb
pop
negb
and
outsb
push
xchg
mov
in
mov
loop
push
xchg
push
leave
mov
xchg
inc
cmpsb
ror
stos
adc
push
pop
out
jle
mov
inc
fisubrl
dec
cmp
mov
jbe
cli
lret
xchg
and
jmp
clc
pop
outsb
xchg
fmull
dec
mov
jp
mov
int3
jne
enter
cmp
add
push
test
dec
lret
jge
cmp
ss
add
loop
vmwrite
push
das
pop
ljmp
jp
cs
jg
and
int3
iret
jnp
inc
mov
jo
shll
sub
jp
inc
mov
aas
cmp
add
mov
into
std
std
push
jnp
jnp
ds
xchg
pop
fwait
stc
mov
loope
mov
mov
lret
lds
mov
outsb
fisttpll
pop
push
js
sbbl
lcall
xchg
out
cmp
fists
std
add
mov
movsb
stos
xor
aas
out
push
cmpsb
aad
aaa
icebp
and
dec
adc
out
sbb
xchg
xchg
sub
or
xchg
rol
movsl
sub
add
inc
out
and
aam
jmp
pop
inc
cmp
or
mov
mov
outsl
ja
clc
mov
add
mov
add
mov
push
inc
in
and
cmp
adc
sub
inc
ja
leave
fs
lea
ja
insl
nop
iret
jns
and
lret
or
sbb
add
or
lret
sub
pop
cs
je
dec
in
inc
adc
popa
sub
dec
aam
fcmovbe
mov
test
in
pop
jae
mov
pop
mov
cltd
icebp
ss
dec
lods
pop
clc
lcall
mov
test
insl
jp
dec
and
or
nop
arpl
push
or
sub
add
push
lock
cmp
cs
aas
iret
jecxz
pusha
sbb
jle
mov
mov
clc
sbb
mov
push
xor
test
mov
shlb
in
hlt
add
xchg
xor
aam
movl
stos
iret
sbbb
and
mov
xchg
inc
pop
mov
cli
inc
push
sbb
sbb
or
mov
fsts
dec
pop
std
jne
leave
dec
loopne
lds
inc
outsl
pop
cwtl
xor
jo
sub
mov
jecxz
repz
sub
xor
pop
in
xchg
loopne
lods
lahf
test
sbb
cmp
xor
in
mov
fstl
and
add
rclb
pop
mov
jns
pushf
xchg
mov
mov
sub
nop
insl
in
dec
divl
sbb
inc
jle
daa
imul
inc
cmp
mov
leave
lahf
jno
inc
out
loope
int3
adc
movsb
adc
andl
and
push
rol
sti
dec
das
je
aas
mov
in
enter
pushf
arpl
aaa
out
dec
stos
fdivr
pop
cmp
pop
cli
hlt
out
pusha
lret
cltd
icebp
rorl
insb
cltd
je
test
pop
lret
lods
lods
roll
adc
les
fs
fsubrs
mov
mov
outsl
addr16
jecxz
add
popl
sbb
xor
movb
dec
jnp
sbb
xchg
clc
insb
mov
inc
inc
and
mov
inc
adc
inc
fisubs
jl
adc
mov
std
dec
aas
test
notb
and
adc
adc
rolb
or
cwtl
sub
lcall
lock
cltd
sub
imul
inc
mov
aas
outsl
mov
xor
inc
add
outsl
pop
and
stos
aas
jo
cmp
je
or
jb
xchg
lret
jns
jae
add
mov
and
cli
inc
lds
test
lahf
mov
ja
adc
add
dec
or
xlat
test
outsb
mov
pop
shlb
adc
scas
push
or
cmp
lods
add
pusha
aad
or
inc
repz
push
dec
je
add
repz
dec
mov
dec
jmp
push
fimuls
push
xchg
xor
enter
ret
icebp
cltd
pop
mov
icebp
fs
outsb
lods
es
jne
in
shr
sub
call
mov
cmp
ss
cs
out
cmp
pop
rcrl
add
lock
sub
mov
sahf
push
inc
sbb
dec
lret
ljmp
gs
cmp
scas
scas
hlt
stos
cmpsb
jg
fnstsw
jns
pop
test
adc
jle
fmull
inc
mov
bound
cmp
cmpsl
les
div
pop
divl
push
inc
inc
xor
dec
mov
iret
or
xor
xlat
dec
das
jmp
xchg
add
mov
mov
jo
lret
jle
sbb
lods
je
idiv
iret
es
movb
cmp
int
mov
or
sbb
icebp
push
rol
test
int3
pop
ret
pop
push
stc
movsl
addr16
repnz
or
in
fwait
inc
das
jle
rolb
out
jmp
dec
cmp
andb
fdivr
adc
orb
add
fldcw
mov
pop
adc
add
inc
gs
int
ljmp
test
jnp
mov
outsl
inc
pop
fildll
fldl
icebp
jno
sbb
aam
arpl
addr16
mov
mov
xchg
cmp
add
repz
in
fdivrs
lods
ljmp
mov
pop
push
dec
push
dec
test
lret
inc
adc
push
dec
das
push
cmp
xchg
movsl
sub
hlt
je
int
mov
push
je
cmc
add
ret
pop
jge
lea
push
and
sub
jne
std
sahf
cmp
insb
insb
ja
add
dec
cli
jne
sti
mov
out
or
jns
cs
lods
mov
push
cmpsl
push
loope
insl
test
repz
shll
inc
sbb
test
cwtl
scas
jo
inc
fsubs
and
test
jecxz
into
or
test
pusha
sbb
add
sbb
pop
loope
pop
in
sub
push
addb
jmp
jb
dec
dec
xor
dec
enter
cltd
push
cli
inc
movsb
rorb
movsb
pop
ror
mov
push
enter
or
fsubrl
cld
jb
rorb
aam
pop
adc
imul
shll
jle
mov
lret
and
call
jb
imul
enter
test
mov
dec
sbb
fmull
aad
sbb
shrb
std
lods
pop
jne,pt
fnsave
jae
into
pop
and
lcall
pop
cmp
imul
inc
or
xchg
rclb
jne
mov
mov
lret
pop
outsb
inc
lds
pop
fidivrs
jmp
xor
inc
jp
outsl
lea
je
xchg
or
add
xchg
jp
jne
ret
cld
push
dec
cmp
mov
fisubs
jno
es
mov
sti
xlat
or
pop
sbb
lock
inc
jmp
mov
ja
mov
fwait
jne
aas
outsb
sub
loope
call
or
mov
jl
jns
repz
frstor
and
setno
pop
daa
push
mov
and
cltd
dec
lahf
add
sti
ret
mov
sahf
addr16
pop
cmpsl
aaa
movsl
mov
leave
inc
or
insb
jno
dec
dec
fadd
frstor
jp
mov
cmp
repnz
movsl
clc
ja
popf
iret
mov
leave
cmp
push
hlt
inc
testb
jno
outsl
add
dec
lea
xchg
rorl
fistpll
jl
stos
cmp
adc
pop
in
enter
shr
ret
in
jo
adc
push
mov
inc
jnp
push
mov
dec
push
outsl
cli
xchg
jg
push
and
rsqrtps
xchg
test
scas
add
orl
and
cmpsl
xor
cli
and
pop
setnp
add
pusha
ss
mov
cmp
and
dec
mov
sub
xor
mov
xor
sub
lock
pop
pop
inc
outsb
sbb
ss
pop
arpl
fdivrs
jge
mov
in
ljmp
pop
mov
call
test
jge
add
push
out
imul
mov
dec
outsl
dec
xchg
data16
add
cmp
mov
ret
repz
sbb
rorb
bound
sub
sbb
sbb
xchg
bnd
fcoms
lods
aaa
ja
shll
ljmp
fildl
cld
push
xlat
mov
es
xor
enter
and
sub
in
jle
mov
pop
hlt
mov
aam
push
push
cs
add
in
push
arpl
dec
shrb
lds
in
data16
add
add
shrb
insl
lock
into
mov
mov
lods
insl
push
loope
mov
push
mov
call
xchg
jo
loopne
setne
inc
jg
adc
outsl
decl
mov
sbb
pop
mov
movsl
push
insl
aad
inc
ss
xchg
pop
mov
mov
outsb
dec
mov
push
je
cmpsl
rcrb
xchg
jnp
out
mov
daa
and
push
mov
and
mov
test
fs
push
je
cmc
mov
and
shll
ds
pop
ficomps
mov
adc
xchg
mov
sbb
push
in
leave
inc
sub
inc
leave
cmp
pop
adcb
push
sahf
movd
in
and
lods
cmpsb
add
inc
mov
ret
mov
lock
adc
inc
jnp
in
inc
add
ja
loop
dec
lcall
xchg
lcall
div
push
repnz
sub
sti
int3
pop
gs
mov
pushf
mov
ss
push
push
xchg
adc
pop
mov
cmpsl
mov
shl
push
fmuls
icebp
dec
movb
mov
jecxz
mov
adc
jp
test
insb
cmp
shrl
xchg
push
push
es
les
sarl
pop
push
lock
subl
pushf
dec
xor
push
rorl
cwtl
jae
mov
xor
rcrb
iret
or
lods
int
push
dec
inc
xchg
push
add
repz
insb
sub
sub
fsubr
incb
push
xor
iret
adc
fnstsw
fiadds
mov
xchg
inc
aam
mov
gs
outsb
cld
iret
mov
lock
addr16
int3
into
mov
pop
xchg
cwtl
push
mov
cmp
dec
pop
pop
in
dec
push
out
jge
adc
mov
and
inc
and
stc
mov
in
rcll
nop
dec
cmp
ljmp
pop
or
sub
das
lahf
cli
sti
inc
jae
rcl
push
loopne
and
js
xchg
push
je
stos
cmp
lods
mov
inc
pop
leave
flds
inc
stc
into
xlat
inc
sbb
into
out
mov
push
and
pop
and
or
jne
aas
adc
mov
outsl
push
mov
push
add
mov
dec
pop
push
pop
fadd
in
cwtl
in
push
cmc
ss
mov
mov
lcall
shll
xlat
lahf
adc
sarb
xor
and
mov
cmp
sub
dec
pop
pop
jnp
sub
cltd
push
out
lds
je
sahf
sbb
shrl
mov
mov
jmp
pop
rcll
sbb
int3
mov
jno
jne
lds
jl
stos
jnp
in
dec
adc
or
adc
mov
lds
fstl
das
popf
mov
scas
psrlw
push
movsl
pusha
pop
jl
cltd
jge
cli
ret
stos
jl
cli
cmp
clc
mov
mov
mov
ss
enter
dec
push
in
jne
jns
cwtl
cs
mov
mov
pushf
scas
sarb
jns
dec
mov
cmp
xor
ss
push
cltd
mov
les
lds
insl
xor
popf
mov
sub
in
dec
cmpsb
jge
mov
dec
adc
push
mov
mov
mov
test
push
mov
adc
faddl
sbb
pop
pop
inc
and
or
es
decl
xchg
sbb
adc
pop
or
mov
jge
fldenv
pop
xor
clc
mov
xor
popl
leave
mov
pop
push
cmp
jbe
imul
in
nop
repz
dec
xor
jne
or
imul
outsl
mov
data16
dec
lahf
outsl
xor
popf
cmpsl
ljmp
lea
test
sbb
movsb
in
add
cmp
leave
jns
cmp
add
js
fwait
and
xorl
cmpsl
sar
pop
pop
shlb
ficoms
xchg
clc
inc
inc
cmp
sahf
mov
push
into
push
les
fiaddl
and
ds
pop
jl
xchg
and
cwtl
adc
es
fimull
in
nop
test
adc
inc
pop
test
in
fcomip
sbb
jb
call
or
jg
gs
lret
pop
sub
je
cmpb
push
mov
cmp
into
ljmp
pop
shr
pushl
lods
iret
rcrb
pushf
insl
fstl
fildl
sub
and
rorb
jmp
mov
mov
pop
jns
sarl
inc
or
bound
jle
jae
popa
mov
mov
ja
int3
cmp
or
aaa
push
ficoml
aaa
cmpsl
test
and
mov
xlat
inc
jo
aas
fwait
pop
sub
add
pusha
add
jle
loope
lret
std
insl
loop
fidivrs
inc
and
pop
dec
addr16
xor
gs
cmpsl
sahf
cmc
dec
jnp
mov
pop
inc
fcmove
je
in
sub
and
inc
add
mov
bound
jge
ja
lea
pop
test
xchg
nop
movsl
jg
dec
fbld
push
and
imul
movsb
sbb
add
dec
in
push
pusha
or
add
or
add
mov
ret
mov
and
lret
out
adc
lods
daa
sti
shlb
fwait
push
xchg
stos
mov
pop
fcmovu
mov
add
std
insb
insb
add
data16
mov
xchg
orb
sbb
arpl
imul
cmp
lods
cmpsb
cwtl
pop
fildll
shll
daa
add
adc
push
test
ret
jae
popa
xchg
xorb
dec
dec
xor
xor
pop
rorb
ja
xchg
notl
loopne
insl
or
popf
in
mov
inc
mov
xor
cltd
jnp
sbb
int
mov
dec
lahf
sub
mov
addr16
xchg
insl
cmp
insw
jno
inc
ficomps
push
mov
mov
inc
fidivrs
mov
lret
xor
jb
adc
shr
stc
dec
add
in
into
xchg
and
mov
sub
cmpsb
sar
fcmovu
mov
inc
jne
xchg
cmp
jmp
daa
push
and
fld
je
and
add
push
adc
jle
jecxz
cwtl
cmpsb
arpl
mov
add
mov
outsl
stos
aas
jno
dec
data16
dec
in
xor
sahf
stos
xor
mov
mov
stc
xor
cmp
push
nop
iret
aad
mov
sub
fisttpl
mov
loop
outsl
lea
lods
daa
lods
xlat
push
hlt
lods
xchg
in
call
lock
inc
ljmp
std
ljmp
loope
xor
xchg
in
pop
cmpsb
std
add
cli
aam
pop
pop
cli
xchg
lret
lea
pop
push
xor
xor
adc
cmpsl
xchg
cld
nop
dec
xor
testl
dec
xchg
xlat
add
fcmovbe
push
jno
iret
xor
inc
xor
ror
xor
jg
mov
jl
jg
sbb
imul
mov
fisttps
xchg
outsb
mov
xor
add
cmp
push
sti
jmp
and
cmp
loopne
xorl
xchg
js
int3
mov
mov
cmpsb
dec
ret
addr16
xlat
imul
sbb
jns
and
add
sbb
mov
add
mov
mov
popf
sbb
xchg
cmpsb
int
out
dec
push
push
imul
enter
adc
lret
aad
cmp
lea
fs
mov
shll
clc
push
out
inc
loop
xchg
or
xchg
pop
sbb
or
xor
xor
sbb
ds
fsts
cmpsb
xchg
jg
cmpsb
dec
nop
cmp
jae
mov
xchg
push
or
ret
jl
aam
push
mov
xchg
inc
or
lret
arpl
jno
mov
dec
rclb
jmp
loopne
ljmp
cmp
xor
cmpsb
pop
mov
sbb
jae
arpl
sbb
jno
lods
pop
and
test
push
push
mov
mov
lret
lock
flds
lods
cmc
roll
js
pop
mov
inc
xchg
rcrb
lods
push
pop
es
sub
shrb
hlt
mov
cmp
jp
fsubp
std
or
in
and
shlb
fcoms
in
out
icebp
les
add
pop
push
ljmp
jp
aas
mov
and
inc
fisubrl
mov
imul
aaa
adc
sub
mov
pushl
sbb
or
int3
sub
into
mov
mov
scas
stc
dec
clc
ss
jl
dec
mov
incb
mov
lret
ja
mov
sub
negb
pop
imul
or
ror
adc
xchg
in
push
dec
imul
cmp
xor
mov
xchg
xor
into
sbb
loope
xchg
push
xchg
push
sbb
push
testb
add
mov
and
xchg
outsb
pusha
mov
jbe
push
fcomi
xchg
lcall
add
jmp
pop
mov
or
lret
shl
ss
leave
dec
int
mov
subb
lret
jmp
in
jnp
xchg
lods
clc
inc
add
push
in
or
jnp
xor
cli
jo
lret
xor
inc
or
stos
je
sahf
mov
cmc
pop
cld
popf
movd
push
mov
cmp
scas
gs
fs
pusha
addr16
inc
cmp
inc
hlt
push
mov
and
int
lcall
mov
cmp
jl
fidivl
mov
add
aaa
push
aad
sti
and
or
or
push
fnstenv
jnp
cmp
ss
leave
int
and
repz
aam
pop
mov
jno
jp
mov
out
xchg
das
xchg
xchg
movsb
lcall
xlat
fmul
outsl
imul
push
push
mov
pop
and
xchg
rcrl
or
sbbl
cmp
jae
lea
rolb
dec
mov
pop
filds
stc
mov
fdivrs
imul
mov
sbb
mov
dec
in
mov
lahf
enter
sub
pop
nop
jbe
xor
inc
arpl
test
fmul
xor
mov
cmp
mov
fs
pop
je
mov
push
pushf
add
rcll
out
mov
adc
push
fisubrl
xchg
xor
xchg
mov
out
dec
cmp
fs
lcall
jle
cmpsb
into
dec
mov
or
fidivrl
icebp
sbb
std
pop
mov
add
les
adc
dec
mov
mov
pop
sub
jmp
lcall
or
xchg
xchg
jle
mov
jg
fistpl
cwtl
pop
inc
sbb
mov
stc
xchg
mov
xchg
pop
mov
adc
pop
lcall
jb
fldcw
push
push
cmp
sbb
fld
aas
inc
mov
fsubr
inc
push
cmp
sbb
fildll
in
and
pop
roll
hlt
nop
add
push
lret
movsl
ret
ljmp
popa
rol
xchg
in
jecxz
mov
arpl
sbb
lahf
aad
pop
mov
in
mov
popl
pop
inc
int
ja
lods
mov
mov
cmp
mov
mov
outsb
mov
inc
cli
hlt
lods
inc
dec
sub
sub
dec
cmp
mov
push
mov
out
mov
fs
mov
mov
jle
xor
out
inc
ljmp
xor
mov
jle
mov
movsl
push
and
insb
fwait
push
inc
test
fiaddl
fldcw
jg
arpl
jmp
jmp
xchg
sub
push
jmp
leave
xchg
sbb
fnstsw
mov
xor
xchg
dec
push
cli
cld
mov
pop
mov
fs
jge
sub
adc
mov
movsl
daa
lahf
jp
jno
push
mov
jb
gs
test
je
pushf
sub
imul
sti
es
lods
mov
scas
dec
xor
pop
in
daa
cmp
jle
andb
dec
pop
shl
jno
push
jmp
xchg
aaa
and
xor
sbb
pop
lock
mov
add
dec
es
dec
fdivrl
or
fwait
inc
push
ret
flds
xchg
in
mov
push
rcl
in
shrl
add
sahf
xchg
dec
jns
pushf
cwtl
inc
xorb
jbe
nop
cmp
scas
fcmove
in
xor
or
mov
in
fidivs
dec
jmp
xchg
push
xor
js
mov
sub
out
cmp
in
xchg
push
nop
scas
or
ja
jne
fstpl
push
cld
ja
enter
sbb
scas
cmp
fwait
cmpsb
mov
sbb
leave
jle
rcrb
test
sub
mov
clc
fiadds
xchg
jl
int3
jl
inc
lret
add
ljmp
jno
dec
mov
fisttpl
loope
ret
xor
inc
adc
aaa
pop
int3
adc
js
xor
sub
fs
addl
dec
push
push
add
sub
inc
xchg
push
sub
or
lods
es
xlat
sbb
and
movsl
repz
out
sbb
push
xor
adc
scas
push
adc
and
and
jo
insl
rorl
xchg
sbb
xor
call
mov
add
pusha
sahf
stos
sbb
push
mov
pop
jp
add
gs
mov
fmulp
mov
push
or
sub
rcrb
mov
roll
dec
jae
cmp
xchg
jmp
and
mov
flds
dec
das
push
repz
push
pop
ljmp
out
lret
and
cltd
jnp
sbb
cmp
pop
mov
test
pop
test
xchg
cmp
or
ja
push
adc
jo
mov
aad
js
cs
dec
lods
mov
aam
scas
push
lock
pushf
push
xor
daa
cli
fisubrs
mov
fcomp
ret
fs
lahf
icebp
dec
scas
pop
push
xor
inc
mov
fmul
cmpsl
mov
add
stos
pop
fimull
mov
test
pusha
movsb
aad
lcall
nop
jne
scas
add
clc
sbb
aad
push
and
jne
ret
and
inc
mov
xchg
pop
mov
mov
lea
imul
cmp
or
xchg
sub
adc
out
frstor
fnstsw
jo
xchg
test
add
fstpl
mov
sbb
lret
call
push
xchg
xchg
mov
and
sbb
insb
pop
dec
daa
pusha
jbe
push
rorb
mov
test
cmp
mov
dec
push
arpl
push
jb
push
adc
pop
cmpsb
mov
rorl
adc
xor
push
and
sbbb
dec
dec
inc
lahf
push
jno
fldt
cmp
xor
lds
imul
pop
mov
sbb
fs
jge
rcrb
mov
out
sub
and
or
mov
add
dec
repnz
scas
mov
in
cld
sbb
or
xor
cwtl
arpl
add
out
ds
lcall
and
xchg
xchg
dec
mov
in
sti
mov
add
xchg
jmp
mov
aas
add
in
les
imul
and
push
rcrb
inc
lret
and
jno
sub
inc
sbb
inc
outsl
mov
push
imul
mov
and
push
push
xor
popa
fcmovnu
mov
lret
pop
fmulp
imul
mov
cmpsl
or
mov
mov
pop
mov
jo
jecxz
xlat
addb
pushl
ret
fdivs
fmuls
and
loopne
push
jmp
jo
or
dec
popf
out
adc
inc
mov
add
sub
sbb
xchg
aas
inc
xor
mov
dec
xchg
int
pop
repz
xchg
sbb
mov
lcall
mov
mov
push
push
enter
sub
lret
cmp
lods
pop
or
ljmp
loopne
test
pop
cs
ret
stos
push
int
leave
divb
test
arpl
pop
sub
jb
cmpb
test
cwtl
or
mov
fs
xchg
or
or
daa
xchg
lds
pushf
je
inc
mov
xor
lods
or
jmp
and
ret
sbb
mov
cli
xchg
xlat
and
pop
repz
scas
outsb
push
cld
and
pop
cmpsl
shll
cmp
je
mov
push
insl
xorl
jbe
sbb
jg
mov
dec
xchg
aam
dec
or
into
lahf
inc
icebp
add
shll
push
sub
pusha
or
mov
mov
das
rclb
lcall
pop
dec
repz
bound
pop
pusha
mul
sub
pop
popa
jg
movsb
cmc
jecxz
pop
cmp
cltd
shll
scas
mov
jg
sbb
push
jb
imul
pop
adc
or
cmp
push
ds
jmp
dec
cmpsl
jmp
in
push
cmpsl
xchg
sbb
lock
inc
rol
inc
sub
stc
mov
ss
mov
jmp
lods
or
mov
hlt
ja
pop
xorl
lock
into
and
out
mov
sbb
mov
inc
js
add
push
cmpsl
jno
leave
adc
xor
mov
or
jmp
xchg
test
mov
fstl
sbb
icebp
out
adc
sub
push
cltd
push
sahf
push
outsb
pop
int3
or
dec
mov
and
jl
sub
add
xchg
push
sub
jne
add
cltd
inc
fwait
mov
addr16
pop
call
or
xchg
sbb
ja
cmp
sbb
pop
push
leave
fsubr
push
inc
out
scas
jne
lret
js
cmp
and
test
loope
mov
dec
lock
inc
mov
jnp
or
lods
mov
rcr
testl
sub
and
dec
test
adc
fwait
mov
lock
outsl
mov
xor
mov
or
outsb
fpatan
xchg
fucomip
ret
and
leave
push
xchg
push
cmp
leave
add
push
mov
lea
mov
cmp
mov
push
bound
orb
loope
xor
xchg
xchg
adc
outsb
in
push
push
xor
hlt
xlat
mov
lock
xchg
cmp
lahf
test
int
loope
divl
dec
js
aas
sbb
jl
aam
filds
js
and
jmp
faddl
bound
jmp
and
xchg
dec
lahf
mov
inc
adc
mov
add
mov
sub
jne
adc
fxch
pop
dec
sbb
and
push
loopne
inc
adc
add
jne
push
ror
sub
sub
xor
bnd
adc
lds
mov
inc
jp
insl
push
in
dec
popf
push
stos
shrb
clc
loop
cli
bound
cmp
and
dec
jle
gs
mov
popa
push
lret
lahf
scas
inc
xchg
sbb
mov
outsl
jbe
mov
inc
flds
add
roll
je
sub
push
scas
cmp
ljmp
fidivrl
cli
push
lea
js
adc
sbb
push
mov
in
or
mov
dec
and
push
mov
cmc
push
ret
mov
test
fwait
test
clc
cli
add
aaa
enter
dec
pop
pop
fsubrp
mov
mov
push
vzeroupper
add
adc
mov
mov
inc
mov
sbb
cmp
clc
jecxz
andl
call
clc
jne
push
dec
cltd
jg
xor
lods
pop
mov
idiv
ret
outsl
dec
lds
ja
in
cld
inc
jne
enter
push
cmp
sbb
test
lcall
or
test
cmp
sub
rcr
clc
ljmp
sub
mov
sub
test
adc
nop
pop
add
xchg
shll
pop
cwtl
js
lahf
and
inc
or
cli
daa
bound
out
test
lods
xchg
xchg
je
in
ds
scas
cmpsb
inc
xor
scas
push
int
xor
mov
outsl
jl
ss
out
jne
pusha
adc
jbe
mov
stos
mov
xchg
lret
ret
mov
ja
jmp
cmp
fdivs
or
lret
xchg
in
sbb
xchg
jno
push
or
testl
in
lcall
mov
gs
push
jne
pop
icebp
sub
das
test
int3
mov
out
ss
push
adc
loope
pop
add
sbb
push
cmp
pop
arpl
push
cmp
outsl
mov
arpl
sarl
sub
mov
pop
jmp
sbb
in
or
cwtl
fiaddl
pop
iret
mov
pop
push
push
pop
cli
xchg
into
cmp
adc
aad
aad
jecxz
fidivrs
mov
loope
jbe,pn
lds
inc
jae
sarb
out
adc
jecxz
pop
int
xchg
push
lcall
xlat
or
jbe
cmpl
mov
aas
cs
push
pop
pushf
mov
addl
xchg
jl
inc
cmpsl
gs
add
xchg
rol
push
inc
and
mov
xor
xchg
pop
sti
sbb
daa
xor
or
sub
cmpl
stc
imul
sub
sbb
lahf
mov
fstl
stos
pop
ss
adc
dec
cld
sbb
or
push
sarl
push
jb
jno
inc
inc
popa
mov
ret
mov
lods
add
jnp
xor
andl
out
mov
mov
and
or
lret
cld
jns
mov
fildl
es
dec
es
lock
lods
inc
dec
cli
adc
mov
sub
neg
mov
fistl
jmp
out
mov
add
mov
popa
gs
aam
cld
pop
mov
or
lock
cmp
push
into
inc
push
mov
push
roll
pop
mov
push
out
addr16
jo
adc
inc
aam
cmp
subl
xchg
xchg
arpl
adc
mov
iret
bound
adc
mov
xchg
pop
mov
cmp
adc
dec
insl
jnp
ljmp
push
iret
insb
xor
test
sbb
sbb
test
and
xor
ficoms
es
pushf
cmp
pop
loopne
popf
js
mov
call
sbbl
inc
adc
addl
mov
jp
in
jbe
scas
inc
pusha
add
std
or
in
dec
fdivrs
or
pop
cmp
pop
in
and
sbb
pop
ja
out
sbb
popa
mov
cmp
cmc
movb
imul
jo
decb
lcall
push
add
push
insb
cld
pop
movsl
into
pop
call
xchg
mov
popf
push
add
cmpsb
adc
scas
xor
dec
popa
mov
jno
pop
jnp
adc
movsb
jno
cmp
arpl
dec
xchg
roll
push
push
inc
testl
sti
popa
fucomp
nop
loop
ljmp
rcrb
add
push
push
les
push
rol
or
not
cmpsl
xor
xor
xchg
dec
mov
sub
xchg
bts
push
mov
rorb
push
mov
fdivrl
test
imul
dec
lock
mov
out
sbb
xor
ds
mov
push
adc
sub
loope
or
out
mov
pop
sti
mov
adc
in
or
mov
and
addr16
les
call
pop
shll
mov
out
push
aaa
pop
mov
xchg
stos
sub
aad
push
jns
sub
icebp
cmp
push
mov
loop,pn
mov
shlb
aaa
nop
or
or
ret
sbbl
mov
in
push
xchg
arpl
rcr
leave
shrb
scas
sahf
in
jo
xor
or
movsb
adc
ds
pop
mov
mov
into
adc
push
psubsw
lea
das
aaa
repnz
cmp
sbb
add
mov
push
in
mulb
stos
sbb
fwait
sbb
pushf
lcall
js
daa
push
or
mov
inc
pop
jae
add
mov
in
dec
or
nop
fstpt
push
inc
cmpsb
fldcw
cmc
dec
xor
out
pusha
mov
sbb
pop
js
mov
mov
clc
push
mov
jg
mov
sub
sbb
test
lods
add
dec
ret
push
or
ficoml
rol
mov
mov
cmp
bound
mov
enter
nop
xor
cmp
pop
fcmovu
dec
jge
mov
scas
imull
mov
adc
sub
xchg
pop
mov
out
jnp
ss
mov
push
test
arpl
push
xchg
pop
jbe
and
sub
mov
jmp
test
sbb
push
sub
rclb
shl
call
jmp
lds
ret
mov
and
mov
dec
fidivrl
aas
mov
pushf
cld
cld
sbb
push
imulb
testb
jnp
lods
add
cmpb
addb
pop
dec
adc
mov
cmpsb
mov
xchg
in
inc
sub
jmp
call
movsl
pop
sub
sub
cmpsl
and
scas
mov
pop
pop
stos
adc
jp
mov
fs
lods
mov
mov
inc
add
xchg
jmp
sahf
dec
cmp
out
shll
xchg
icebp
push
add
cmpsb
and
testl
test
cmp
fsubrl
push
pop
adc
adc
loopne
repz
clc
or
clc
xor
add
xchg
mov
aad
xor
jo
inc
stc
add
out
shrl
mov
xchg
or
sarb
push
fldenv
stos
xchg
mov
into
gs
inc
cmp
lret
daa
shll
int
sbb
or
adc
cli
mov
jmp
leave
sub
dec
xorl
ret
loope
leavew
add
add
pop
xchg
add
push
push
xchg
dec
xchg
lods
mov
es
rcrb
cwtl
jge
cmp
in
mov
cld
repz
mov
rcrl
mov
arpl
mov
adc
lea
lods
fistps
arpl
mov
imul
mov
mov
jbe
daa
stos
loopne
mov
fisubrl
incl
xor
fldl
dec
cmp
adc
iret
cli
add
inc
xlat
call
xchg
imul
mov
rolb
xor
aas
jno
sahf
out
mov
cmp
in
aaa
sbb
pop
outsb
pop
in
scas
orb
in
mov
icebp
sbb
pop
jp
js
jb
inc
fildl
pop
jnp
movsw
mov
and
test
in
jb
xor
fiadds
pop
in
outsl
push
decb
out
lret
mov
addb
in
dec
and
sub
sbb
lret
insl
fnstsw
mov
movsb
cwtl
rorl
xor
xor
mov
sbb
mov
adc
pop
mov
imulb
sbb
bound
stos
sbb
inc
fld
mov
loopne
adc
mov
inc
and
pop
pushl
jp
xchg
jb
aam
inc
lret
sahf
mov
ss
inc
mov
pop
inc
mov
hlt
jl
std
dec
hlt
inc
in
into
ljmp
add
sbb
fwait
mov
stos
in
jg
and
cltd
jecxz
hlt
loopne
sbbl
test
daa
sub
je
mov
sub
popa
loopne
fistps
leave
pop
mov
loop
jno
push
mov
sbb
imul
sub
sahf
nop
push
stos
call
cmp
push
cmp
aaa
and
aam
and
imul
insb
mov
xchg
rcrb
push
pop
mul
je
out
and
addr16
gs
into
cmc
rclb
cmc
insl
mov
mov
test
lcall
lds
shl
loopne
addr16
push
aad
sbb
popf
scas
mov
in
pushf
mov
xchg
mov
add
xchg
jmp
lret
xlat
sbb
cmp
jp
stos
int
or
mov
mov
dec
pop
inc
inc
adc
add
xchg
mov
test
pop
xor
xor
xor
insb
test
flds
out
jns
or
popa
sbb
mov
inc
sbb
clc
jo
pusha
in
outsl
xchg
sahf
cmc
xchg
sbb
lret
pushf
in
dec
pushf
sub
dec
xchg
sti
inc
jg
les
dec
repnz
cld
mov
movl
pop
test
cmp
lds
inc
ds
inc
jp
aas
mov
adc
mov
sub
cmp
mov
cmc
fs
inc
xchg
popf
int3
pop
xchg
bound
test
mov
push
fwait
push
push
push
mov
mov
mov
sub
pxor
fsubrl
cmp
mov
cmp
dec
dec
jo
pop
adc
lods
fisubl
pop
sahf
sbb
jecxz
lods
ds
aaa
popa
cmc
mov
inc
xor
or
mov
cmp
pop
sub
jg
ret
rol
out
popf
lret
push
pop
pop
dec
dec
push
test
push
inc
and
test
or
pushl
xchg
out
sub
xchg
jmp
ficoms
inc
xor
clc
adc
pop
jle
cmc
push
test
fs
fstl
jb
popa
pop
notl
cltd
icebp
mov
sti
ficompl
push
cmp
movsl
lds
push
or
push
shll
test
int
ds
ficoml
ja
cmpsb
daa
ret
adc
mov
push
repnz
outsl
loope
xchg
inc
ljmp
sahf
ljmp
popa
test
sahf
mov
hlt
add
cmp
ret
lods
add
shl
lret
ds
or
cmpb
lods
out
sub
scas
push
xor
pop
lods
lcall
push
daa
pop
add
mov
pop
xor
leave
movsb
fiadds
xchg
lods
jp
imul
pop
int3
insb
rolb
inc
in
mov
pop
inc
mov
rcll
jle
sbb
idivb
decb
jp
shlb
es
add
cmp
pop
insb
pop
jo
push
dec
push
cmp
pop
das
mov
cmpsl
leave
pop
xor
scas
lahf
mov
mov
out
call
ja
test
test
stos
shrb
sbb
push
ljmp
test
fistl
cmc
and
fwait
pop
jnp
push
mov
pop
loopne
std
dec
pop
xchg
push
dec
aas
gs
loope
hlt
in
popa
cmp
addb
mov
mov
data16
dec
call
test
test
pusha
fcompl
push
enter
and
clc
std
push
mov
dec
aas
sbb
xor
dec
cwtl
imul
adc
sub
mov
adc
and
jmp
lcall
mov
rolb
pop
and
arpl
test
jmp
add
xchg
out
sbb
clc
sub
mov
cmp
sbb
xchg
pop
push
mov
adc
outsb
jnp
in
mov
sub
rorb
jecxz
shl
arpl
or
and
pop
sub
push
add
iret
movsb
mov
outsl
mov
lret
call
mov
iret
push
sahf
adc
push
lods
cmp
aad
lods
adc
sub
mov
inc
dec
in
or
ds
adc
sbb
fimull
js
test
cmp
in
mov
inc
and
and
hlt
xchg
in
add
lods
rorl
subb
mov
mov
jb
fildl
mov
dec
xor
cmp
int3
adcb
lods
pushf
or
ja
cmc
push
insl
pop
clc
fsubs
push
jno
dec
imul
xor
sub
xchg
sub
pop
adc
push
or
fs
fmull
and
ret
repz
mov
jle
gs
sbb
dec
frstor
es
out
xchg
je
mov
stos
or
jg
xchg
or
std
push
adc
mov
pop
dec
add
add
aam
push
cwtl
add
pop
push
movsb
fdivrl
jg
xchg
ljmp
out
cmp
mov
push
mov
adc
test
jecxz
pusha
xlat
iret
push
push
push
push
aam
shll
out
push
fidivl
jne
cld
ret
sbb
popa
add
faddp
pushf
outsl
ficomps
test
or
fwait
cmp
scas
sti
fstps
daa
call
add
int
dec
fstps
xchg
pop
movsl
test
or
mov
jne
and
je
leave
arpl
sbb
xor
pop
mov
mov
ljmp
popf
fistpll
imul
jg
push
cmp
pop
cs
stos
outsl
pop
mov
shl
jb
loop
movsb
sbb
xchg
pop
sbb
push
mov
pop
pop
and
fwait
lods
leave
sbb
push
mov
into
inc
pop
cmpsl
or
cmc
adcb
movsl
xorl
sbb
fimull
inc
in
fisubl
enter
ror
push
shrb
aaa
lods
jns
xchg
in
pusha
jg
stos
stos
pop
adc
push
mov
xchg
fs
mov
xor
mov
cmp
outsb
sbb
sbb
xor
cmc
mov
xchg
test
cmp
cmpsb
inc
cmpsl
mov
fcmovb
roll
fs
ja
fldcw
or
leave
movsb
jmp
insb
add
inc
stos
sbb
pop
sti
mov
dec
mov
xchg
insl
js
int3
iret
leave
push
aad
test
mov
and
test
inc
xchg
mov
std
loope
icebp
inc
int
sbb
outsl
fsubs
push
cmp
xchg
loopne
push
daa
scas
mov
ret
rcrb
inc
xchg
mov
mov
pusha
subb
outsb
enter
mov
pop
jmp
mov
mov
js
xchg
adc
pop
jp
cwtl
loop
push
adc
sbb
dec
test
into
lods
xor
jge
mov
inc
pop
or
sub
enter
gs
vmovhps
sarl
scas
jnp
jbe
pop
outsl
jbe
xlat
je
xchg
xor
push
nop
jne
aas
or
fisttpl
mov
jle
in
mov
repnz
mov
jae
in
ja
ds
lea
fisubrl
std
xor
ficoms
xchg
xchg
or
test
or
mov
aas
in
mov
lods
mov
mov
push
dec
add
outsb
mov
repnz
mov
jle
adcl
daa
jno
dec
je
std
les
int
push
inc
popa
xchg
sarb
push
lcall
cli
mov
dec
shrb
jmp
dec
cmp
adc
mov
add
out
inc
cwtl
insb
and
dec
shl
xchg
icebp
xchg
add
sbb
jb
imul
mov
jge
aaa
test
es
mov
lcall
jl
aam
add
add
idivl
test
push
in
das
adc
out
dec
adc
dec
sete
dec
subb
jecxz
xchg
js
rorb
out
fstp
inc
ds
aad
add
dec
and
mov
popa
or
jnp
loopne
mov
shll
lods
mov
arpl
fs
push
es
mov
test
sbb
test
cmc
inc
xor
cmp
int
jp
movsl
add
mov
or
lods
movb
pop
std
mov
push
pop
nop
subb
xchg
and
fwait
into
dec
scas
nop
jb
out
mov
mov
cmp
adc
xor
dec
pop
fcoms
movsl
xor
pop
addr16
movsb
sahf
jle
push
clc
test
mov
stc
mov
addr16
cmp
pop
jo
xlat
cmp
sbb
add
mov
and
xchg
cltd
dec
xor
adc
xor
out
pop
rcrb
cmp
not
or
ret
outsl
or
xor
cmp
xlat
mov
popf
sub
fsubl
fsubrs
mov
add
add
push
cmp
adc
jb
addr16
inc
jmp
insb
lock
sbb
cmpl
inc
hlt
sub
cwtl
xor
cmp
push
sbbb
dec
jl
sbb
test
adc
daa
sbb
adc
and
inc
dec
aad
cmpsb
jl
add
stos
lea
addl
xchg
inc
jl
cwtl
mov
sub
mov
xor
push
and
jg
cs
pop
fadds
pop
movsb
sbb
jne
std
xchg
daa
loopne
xchg
popa
mov
push
xchg
dec
scas
inc
iret
bnd
sbb
sbb
lock
mov
xor
adcl
xchg
and
and
dec
int3
aam
sub
push
sbb
insb
jbe
repz
js
adc
shrb
mov
pushf
inc
jnp
sbb
sbbb
nop
push
cli
pushf
push
mov
add
ja
xor
jmp
cmp
dec
sbb
aad
xchg
lods
add
lret
leave
sbb
cmp
xchg
fldl
jnp
out
jb
xchg
inc
mov
sbb
mov
ds
out
repz
dec
jns
std
lret
aas
or
fstpt
ss
jmp
sbb
inc
lret
pop
mov
sbb
cmp
out
repz
adc
mov
imul
mov
icebp
adc
shlb
addr16
or
jge
adc
ss
fcmovnbe
in
push
xchg
pop
dec
dec
movsl
stos
xorb
dec
push
arpl
inc
in
dec
dec
adc
lret
stos
cmp
aas
push
stc
vphaddubq
inc
popf
subl
and
lret
stos
pushf
repnz
dec
out
mov
lcall
and
push
repz
cmp
cmpsb
sub
int3
pop
inc
inc
add
popa
fldenv
cmp
jnp
add
and
sbb
xchg
xchg
add
inc
gs
pop
out
and
dec
ja
xchg
cmp
sbb
mov
mov
outsl
shll
sbb
pop
and
sub
xorl
adcb
ds
inc
dec
ljmp
out
pop
out
cmpsl
fld1
dec
addr16
push
adc
adc
je
xor
mov
clc
cwtl
gs
jae
cs
lcall
xor
jge
inc
rcrb
xchg
shll
popa
jo
mov
xchg
mov
mov
and
jno
lock
sub
lds
loop
insb
and
cmp
popf
int
mov
cmp
das
or
add
fnstsw
add
mov
pop
xchg
mov
jl
ret
xchg
mov
fcom
push
sub
clc
arpl
jge
mov
mov
ret
dec
cmpsb
lds
sbb
dec
mov
sbb
frstor
xchg
sub
cmp
in
repz
push
call
cltd
mov
or
fdivr
imull
repnz
movsl
add
and
add
adc
and
in
les
sbb
jbe
lret
xchg
mov
xchg
stos
xor
lcall
cwtl
loop
mov
leave
and
mov
dec
cmpsb
es
mov
lds
or
ljmp
movsb
mov
cmpsb
sub
xchg
cmp
test
lods
movsl
pop
pop
mov
data16
xchg
and
adc
cld
gs
stc
mov
push
adcl
psubb
outsb
sbb
aas
push
insl
leave
aaa
addb
sub
cmp
adc
lea
pop
rolb
das
or
jae
cmp
stos
clc
xchg
adc
or
mov
data16
pushf
xchg
cld
subb
nop
xor
push
and
and
popf
dec
mov
fsubl
sbbb
push
cmpsb
add
add
cmpsb
or
jge
sub
leave
push
xchg
lcall
fcomps
xchg
fisubrl
lock
lods
lret
frstor
iret
jl
lods
js
repz
fisttpll
xor
and
pop
jns
jmp
sahf
imul
add
daa
in
aas
insb
aam
jae
dec
icebp
push
stos
jbe
xor
jb
iret
jmp
je
ficoml
add
repnz
push
jnp
jl
repz
adc
xor
cmp
movsb
push
xlat
inc
jp
imul
scas
pushf
pop
nop
test
rcrb
fs
cltd
lret
and
xor
adc
cmp
clc
inc
repz
push
mov
dec
mov
xor
and
lcall
mov
jno
mov
sub
lcall
pop
jae
rorb
pop
dec
jbe
lods
cmc
pop
inc
insl
stos
mov
lret
add
mov
cmp
cmp
xchg
jae
stc
mov
add
or
jle
xchg
mov
cmp
xchg
or
lods
mov
mov
and
iret
lea
add
aaa
lock
lock
test
out
fdiv
xchg
dec
orl
inc
jnp
je
rcrb
movsl
les
push
xor
roll
mov
ficoml
pop
jecxz
mov
in
inc
cmp
xor
or
ljmp
in
sbbl
jge
aad
repz
aaa
gs
pop
mov
bound
dec
jnp
cmpsl
cmpsl
rolb
inc
test
nop
mov
ljmp
jo
fwait
imul
xchg
fucom
rorb
je
cmpsl
xor
jno
rol
testl
out
out
movsb
insl
mov
dec
movsb
pop
adc
or
dec
sbb
out
mov
pop
ret
inc
jne
push
sbb
cmp
enter
cwtl
ds
scas
jno
push
dec
pushf
loopne
out
rorl
cmp
push
test
pop
pushf
or
mov
xor
fcomi
jno
mov
inc
cli
mov
mov
aad
mov
insl
adc
cmp
dec
mov
inc
fwait
out
dec
lock
dec
testb
mov
fst
in
adc
cli
adc
cmp
push
add
pop
mov
cld
sub
insl
insb
popa
adc
push
push
or
je
scas
pushf
mov
sub
xchg
out
mov
xchg
idiv
xchg
inc
lret
mov
mov
mov
sub
mov
rcrb
mov
hlt
movsl
and
data16
mov
sbb
sbb
adc
out
adc
adc
push
in
dec
fnop
in
decl
mov
pop
jb
inc
insb
push
push
xor
test
ret
stos
push
pop
enter
out
cmpsb
fidivrl
cltd
push
movsb
mov
out
xchg
orb
jne
sbb
adc
in
sub
inc
sub
fnstenv
pop
add
lcall
or
into
adc
jae
mov
outsb
cmp
pop
or
mov
jg
int
popf
decb
fstpt
and
inc
faddl
clc
sbb
mov
imul
jbe
jle
sbb
mov
das
nop
ja
pop
inc
jns
mov
imull
push
test
and
adc
lret
cmpsl
ss
mov
xor
int3
or
arpl
mov
pop
adc
aaa
sti
daa
or
daa
or
xchg
sbb
in
sti
add
mov
test
std
rol
repz
call
outsb
jl
sbb
xchg
filds
push
push
pop
add
nop
and
aaa
enter
cli
mov
ljmp
enter
pop
cli
xor
inc
leave
push
push
cs
aaa
cmp
pop
mov
fnsave
push
fwait
insb
stos
xchg
fistpll
mov
mov
sub
adc
jg
xlat
inc
add
stos
test
mov
dec
xchg
xchg
push
movsl
pop
xlat
push
mov
cmp
andl
pop
push
clc
adc
mov
xor
cmp
push
jae
loop
sub
cmp
lret
loopne
mov
lret
inc
xchg
out
xchg
sbb
ds
inc
js
push
fucomip
cmp
aad
jne
imul
aas
in
popa
shlb
outsl
dec
es
inc
sarl
out
clc
out
jge
loop,pt
or
adc
in
aas
push
and
mov
pop
mov
pop
push
sub
filds
adc
inc
sbb
pop
shlb
in
push
inc
int3
sbbl
data16
int
imull
popa
jge
fbld
sbb
loopne
cmp
dec
adc
push
scas
add
push
addb
and
mov
cltd
push
movl
test
leave
or
mov
fwait
jg
push
imul
test
ret
sbb
jnp
hlt
adc
rclb
faddl
int3
cli
sbb
inc
not
pop
sub
pop
push
repnz
jbe
das
loope
negl
imul
sbb
scas
jl
or
aas
and
inc
out
addb
jge
jb
fildl
push
iret
xor
incl
ds
lcall
mov
mov
xlat
fstps
fisttps
inc
sbb
iret
and
sub
insb
ret
fisttpll
aaa
jp
dec
jb
pop
fwait
xchg
jmp
push
inc
and
mov
bound
jmp
daa
sbb
adc
popa
stos
stos
and
repz
jns
inc
movsb
ss
in
cld
int
das
push
addr16
loop
jp
add
fs
fdivrs
mov
fwait
sub
js
int
mov
das
push
ljmp
imul
pop
ss
nop
pop
and
lcall
lcall
imul
mov
inc
lods
mov
mov
jne
test
mov
mov
adc
add
jmp
pmaxub
sbb
mov
mov
pop
push
sub
pop
pop
pop
mov
rcr
sbb
sbb
inc
addb
sub
pop
mov
sbb
fstpl
push
cld
or
gs
push
rol
mov
sub
xlat
cltd
sub
xor
push
stos
inc
std
or
adc
comisd
pop
out
cmc
bound
into
add
ljmp
ss
jo
ret
stos
sub
das
pop
pop
sbb
cmpsl
clc
je
ret
test
outsb
sbb
pop
movsb
iret
gs
jae
pusha
pusha
pop
fmuls
rcrb
jbe
push
adc
movsb
lea
enter
sbb
and
or
pop
adc
and
dec
lods
pop
mov
ljmp
sub
sub
sbb
dec
adc
inc
test
pop
loopne
pop
jg
cmc
adc
xchg
bound
popa
push
divl
fnstcw
inc
pop
mov
push
mov
inc
mov
xchg
out
loope
jmp
jo
je
push
cmpsl
js
pop
pop
arpl
xor
pop
repz
pop
and
mov
stos
outsl
cmp
shll
jle
nopl
cmp
movsl
je
cmp
insb
and
jle
pop
sub
jmp
arpl
jle,pn
sbb
jne
lret
inc
andb
or
add
mov
lods
or
flds
push
push
jge
inc
cltd
into
push
in
add
add
jns
daa
pop
out
and
xchg
test
cmp
rolb
and
jo
iret
xchg
add
insb
sub
adc
sub
shl
popf
mov
inc
mov
lock
mov
out
adc
sbb
imul
gs
pop
stos
push
mov
lods
mov
cld
pop
fistpll
or
mov
mov
cmp
sbb
jns
mov
push
scas
loope
lock
dec
mov
mov
leave
dec
into
in
scas
xchg
ja
xrelease
das
aas
inc
or
negb
mov
mov
lret
insl
lock
jmp
sub
ss
xchg
shll
ds
in
sbb
les
lds
imul
fstpt
mov
cmp
pop
cwtl
jns
loop
ss
jne
mov
imul
cmc
imul
popa
dec
add
pop
jb
adc
cmpsl
cmp
mov
sub
daa
dec
mov
fisubrl
push
jo
push
inc
fsub
out
enter
icebp
jg
jae
je
test
jl
adc
xchg
out
cmp
adc
xchg
xor
les
imul
loopne
ficoml
shll
adc
js
movsb
cmp
fimull
add
sbb
pop
dec
aad
inc
mov
jo
out
insb
scas
cmp
mov
lods
push
sub
mov
ja
add
mov
pop
lods
mov
les
xor
incb
pop
mov
and
mov
adc
es
xor
out
decl
sbb
cs
out
push
pop
pop
mov
cli
into
lods
imul
movsb
push
mov
and
jge
cmp
or
ja
or
ficoms
icebp
push
jmp
ss
sbb
add
insb
jne
jbe
cltd
adc
loopne
mov
jl
cltd
das
cmpsb
xor
gs
inc
cmp
andl
adc
jne
inc
fnsave
mov
add
ss
mov
dec
inc
std
adc
sub
cmp
mov
sbb
repnz
cltd
dec
hlt
insl
jecxz
jecxz
or
dec
adc
clc
shll
ljmp
xor
push
add
fwait
adcb
out
pop
lods
inc
jno
cmp
in
movsb
xor
jno
daa
dec
test
ja
pop
cmpsb
add
dec
inc
gs
imul
jns
sbb
lcall
outsl
cwtl
daa
push
push
out
push
cmpsl
and
jnp
mov
pop
xchg
ljmp
les
or
lds
xchg
pushf
js
nop
arpl
xor
mov
xchg
sbb
lret
and
pop
adc
inc
aam
sbb
mov
dec
imulb
pop
mov
xchg
push
out
hlt
sbb
out
insl
cld
mov
hlt
mov
test
push
rcrb
and
mov
out
sub
sub
jl
test
test
test
jecxz
jge
adc
add
and
aam
ss
shlb
and
inc
pop
mov
fxam
pop
dec
mov
cmpsl
jne
call
jecxz
pop
sub
jnp
in
je
mov
push
movsl
xor
pop
aaa
sub
sub
fidivs
aad
adc
bound
in
sahf
dec
enter
push
push
fimuls
jmp
xor
cmp
inc
jne
test
mov
mov
lret
dec
fisubrs
xlat
xchg
fbstp
aaa
xchg
lahf
jbe
or
dec
mov
push
lcall
jmp
test
add
jecxz
and
ds
mov
addb
adc
gs
xor
int
sti
adc
cmc
push
scas
lds
addr16
mov
fnstsw
sub
ret
xchg
stos
inc
pop
ret
jle
stos
rcrb
or
push
fisubrs
cmp
jne
movsl
mov
lahf
mov
mov
notl
cmp
cs
inc
dec
aaa
adc
shr
mov
sub
mov
xlat
and
int
pushf
pop
lods
fucomi
and
gs
stos
inc
push
pop
cmp
lret
hlt
fmulp
xchg
shlb
mov
popa
in
and
mov
xor
cmpsb
xchg
mov
pusha
pop
js
jbe
mov
mov
insb
and
sub
sbb
pop
xchg
fidivl
shll
push
or
sub
jle
js
adc
std
push
push
xor
dec
lock
mov
shl
shll
rorl
imul
mov
push
cmp
dec
das
stos
jnp
loope
lds
xchg
adc
inc
test
push
push
dec
lods
push
roll
inc
repnz
loop
cmpsb
inc
xor
mov
imull
add
fcoms
sbb
hlt
das
push
mov
insb
mov
addb
add
adc
data16
xchg
sahf
lods
push
fwait
adc
cmp
hlt
pop
mov
int
jp
push
mov
cmc
xor
cmpsl
push
ret
pop
pop
push
jp
insb
push
inc
sub
cltd
fbstp
dec
lret
mov
cmpsb
inc
mov
insb
repz
mov
iret
sbb
mov
push
in
enter
out
add
jg
push
pushf
jne
movsb
cmp
out
cli
adc
fwait
iret
popf
int3
push
jnp
cmp
jnp
daa
aam
nop
ds
and
inc
lcall
leave
clc
aad
in
cmp
aas
dec
push
in
xor
call
sti
mov
xorl
mov
cli
test
and
mov
mov
fwait
cmc
mov
je
mov
mov
add
cwtl
jmp
push
xchg
andnps
inc
dec
aaa
cmp
cltd
jno
cwtl
ljmp
push
lahf
jl
push
adc
popf
adc
xchg
and
xchg
jg
je
ss
fwait
out
leave
enter
mov
cmp
pop
pop
call
jp
sbb
xchg
nop
add
push
jg
scas
jg
dec
jecxz
leave
int
mov
pop
sub
push
lahf
xchg
cmpsl
lret
cwtl
sub
xor
and
je
fwait
dec
mov
add
sub
lods
lahf
sahf
sub
mov
pushf
mov
mov
push
fbstp
sbb
jbe
pop
jb
loopne
xlat
pop
xor
popa
push
or
inc
popf
les
icebp
sti
xor
and
mov
and
mov
inc
je
pop
push
test
lcall
jge
cmp
mov
out
lret
stos
push
mov
and
mov
or
lret
not
insb
or
push
les
or
setp
pop
sub
sbb
test
stos
add
dec
das
and
movsb
dec
sbb
inc
fimull
js
mov
test
imull
aam
pushf
pusha
jo
inc
mov
mov
mul
insb
js
sub
mov
orl
mov
sub
xchg
lock
outsl
shl
jl
js
hlt
inc
mov
test
test
cmp
sub
mov
mov
pop
lahf
sub
or
add
add
pop
testb
mov
adc
fmul
and
fldcw
das
decb
or
add
leave
iret
inc
jnp
and
cmp
cmpsl
mov
adc
in
aaa
out
add
mov
lahf
repnz
das
push
cmp
test
mov
ss
sti
xor
out
movsl
lret
pop
xor
loop
xor
aas
in
xor
dec
cmpsl
ljmp
sub
ret
imul
adc
js
push
out
jbe
enter
mov
mov
fcmovnbe
jb
sub
pop
pop
jns
arpl
mov
cmp
add
imul
push
mov
xor
lahf
sub
data16
fwait
out
add
mov
inc
xor
lret
pop
ljmp
movsl
add
sti
in
mov
stos
mov
adc
dec
stos
and
xchg
lods
mov
fcomps
or
cwtl
les
daa
jmp
lcall
and
mov
stc
dec
and
mov
sub
cwtl
or
inc
dec
mov
mov
jo
sub
lret
sbb
fldl
add
sub
pop
in
test
jne
adc
xor
mov
jecxz
es
add
jle
xor
push
sbb
mov
xchg
es
inc
jnp
mov
xchg
xchg
mov
insl
sub
push
sbb
or
adc
pop
in
mov
xchg
cmp
sbb
popl
mov
insl
pop
shrl
lahf
cmp
lds
mov
scas
jno
push
loop
fistl
ret
adc
rcl
pop
inc
and
push
lea
jne
add
or
adcl
scas
push
jo
pop
stc
mov
cmpsb
mov
and
add
fistl
jmp
push
flds
out
push
cmp
sub
stc
je
mov
cmpsb
lret
jecxz
and
xlat
pop
test
adc
lods
mov
lret
andb
inc
jae
mov
cs
addr16
test
sti
xor
push
shrb
xorb
ds
dec
pop
aas
xor
fcom
loop
sbb
pop
inc
xor
xchg
shr
pop
notb
lret
fistl
and
inc
rclb
sarb
sbb
je
mov
add
mov
inc
insl
sub
pop
lock
or
mov
and
repnz
jmp
or
test
mov
xor
push
cld
hlt
adc
lock
pop
sbb
mov
or
in
xchg
inc
icebp
or
das
cmp
mov
in
mov
out
xor
out
mulb
fldl
dec
pusha
xlat
insb
xor
mov
xorb
mov
enter
loope
shll
jmp
enter
xchg
imul
fwait
adc
insl
pop
jbe
add
lock
add
push
cmpsl
dec
and
repz
mov
ret
or
jecxz
cmp
adc
or
bnd
jns
push
loope
stc
mov
pop
call
mov
lods
push
clc
and
lahf
scas
pop
shl
xor
jbe
loope
dec
inc
mov
aad
xchg
popf
push
dec
insb
push
pop
or
jbe
pop
inc
popa
mov
into
push
imul
enter
dec
add
imulb
xor
sbb
insb
xchg
or
cld
xchg
push
stos
insl
loop
cmpl
ds
in
out
pop
jg
sbb
cmp
hlt
insl
pop
lret
mov
pop
rol
push
out
mov
rorl
roll
mov
mov
push
sbb
mov
mov
inc
ret
jmp
lea
mov
adc
data16
out
mov
test
fwait
cmpsb
loope
xchg
mov
je
adc
arpl
repz
subl
insb
pop
lods
test
repz
cltd
bound
mov
mov
adc
or
and
pop
lret
outsl
ficomps
sbb
cwtl
stos
mov
cs
cmp
imul
cltd
and
mov
cmp
mov
sbb
out
adc
scas
call
rcll
add
ret
out
mov
addr16
frstor
nop
sub
inc
mov
std
pop
scas
jb
mov
in
arpl
cmpsb
or
mov
add
fs
lds
jo
inc
xchg
push
push
inc
bound
xor
xchg
les
movsb
loopne
push
mov
sub
lods
lcall
fcomp
mov
cmp
mov
subb
mov
inc
push
xchg
inc
mov
mov
mov
imul
dec
mov
in
movsl
pmulhw
aas
leave
fbstp
repz
je
mov
lret
fisubs
aas
or
xchg
mov
test
sub
test
in
xor
cltd
ficoml
andb
mov
push
lret
fxrstor
dec
fwait
pop
and
inc
pusha
and
pop
dec
push
loope
or
cmp
sbb
jecxz
jbe
inc
jbe
adc
das
mov
adc
adc
stos
mov
shll
rcrb
sbb
lret
pop
xchg
sub
push
insb
mov
pop
int3
sbb
jbe
mov
mov
test
loop
mov
rcrl
sbbb
push
jno
inc
loopne
aaa
dec
mov
pop
stos
rclb
inc
cmpsl
adc
inc
sahf
mov
mov
mov
push
pop
xchg
dec
roll
lret
mov
loop
jecxz
ret
int3
xor
pushf
jnp
in
fs
aas
mov
and
xchg
inc
xchg
mov
xor
pop
mov
aad
movsb
push
mov
xchg
mov
popf
cmpsb
xlat
bound
adc
lods
scas
fnsave
mov
cmp
cmc
cmpsb
aad
jne
mov
mov
jnp
sbb
cmpsl
gs
sbb
daa
lcall
mov
dec
mov
bnd
lds
jo
add
outsb
jg
jmp
mov
imul
test
add
mov
jp
lahf
mov
rclb
push
loopne
in
test
jnp
pop
mov
into
cmpsb
add
and
daa
or
pushf
pusha
mov
sahf
stc
and
sbb
push
mov
xor
pop
fbstp
popa
jno
mov
pop
fstps
dec
fcompl
movsb
mov
ss
lock
sahf
pop
ljmp
inc
fmuls
aas
ret
mov
jl
xchg
dec
iret
pop
xchg
add
sbb
data16
arpl
fsub
fsub
sbb
xchg
push
loop
pushl
fldt
mov
xor
lret
in
push
addb
leave
fs
test
loopne
add
cmovs
aad
jb
dec
fisttpl
mov
push
ja
inc
pusha
pop
jge
dec
pop
pop
ja
out
dec
sbb
sahf
js
mov
cmp
inc
cltd
adc
loopne
insl
pop
jge
mov
ja
pop
cmp
or
xor
outsl
outsl
int
mov
add
xor
jge
arpl
push
xchg
xor
es
hlt
dec
xor
mov
pusha
scas
inc
shr
xchg
xor
dec
lret
cli
ret
mov
es
xchg
daa
jnp
int
or
leave
in
cmpsb
in
sarb
jle
jp
pop
jmp
mov
test
xor
fildl
fimuls
sub
jecxz
xchg
pop
rolb
add
or
push
push
iret
mov
lahf
push
iret
adc
dec
or
lea
mov
xchg
and
pop
cmc
out
in
cltd
inc
mov
and
stos
push
push
addb
pop
pushf
push
lods
jge
pop
jne
inc
inc
test
pusha
or
dec
cmp
loope
aas
addr16
cmp
add
and
andb
dec
stos
sub
adc
sub
lock
pushf
fwait
lods
dec
idivl
fstpl
push
sbb
jp
mov
ds
ja
sub
jg
cmp
ds
rorl
push
lret
mov
pusha
mov
xchg
adc
or
cmpsl
pop
mov
jo
jmp
fs
dec
jl
add
mov
sti
xchg
mov
or
iret
fcoms
out
push
sub
push
dec
and
push
sub
xor
xchg
inc
imul
out
xchg
lret
mov
mov
jbe
adcl
outsl
ret
mov
sub
icebp
sbb
and
ret
div
sub
das
enter
xchg
sub
mov
xorl
jno
jg
and
xchg
hlt
out
xlat
jne
ja
cli
mov
mov
jmp
xor
jmp
xor
push
ret
mov
repnz
imul
sti
movsl
dec
adc
out
or
inc
adc
outsb
in
adc
daa
fs
dec
leave
mov
mov
xchg
pop
outsl
scas
punpcklwd
ljmp
aas
les
in
sbb
adc
leave
xorl
mov
and
mull
cmp
js
push
and
outsl
movsl
mov
pop
xor
mov
mov
out
mov
std
lods
xchg
test
mov
inc
jo
or
sarl
and
nop
into
add
orb
adc
repnz
mov
sti
push
in
loopne
pop
mov
push
push
lds
lret
pop
inc
mov
mov
pop
scas
xchg
dec
stos
enter
sbb
xchg
rorb
inc
mov
ja
and
dec
lret
cmp
mov
ds
mul
fcoms
jnp
or
lods
inc
insl
pop
lds
in
stc
push
stos
adc
push
sbb
push
xchg
outsl
call
iret
pop
adc
ficoms
xor
ret
ss
mov
add
fstpt
insl
jne
mov
lret
lods
test
sub
mov
add
xchg
sbb
filds
into
xchg
imul
mov
mov
les
les
jne
shll
pop
imul
mov
jl
xchg
mov
stos
mov
dec
pushf
fdivr
mov
pushl
lds
ss
out
inc
lahf
mov
and
sub
sub
fidivl
dec
add
pushf
xor
scas
add
push
push
adc
cmc
outsl
sti
scas
sub
and
jo
ror
push
push
xchg
push
and
xchg
out
sar
sub
imul
push
into
dec
fiaddl
dec
fidivs
pop
mov
jmp
pushf
or
ss
push
sbbb
pop
sbb
cmp
repnz
dec
jg
cmp
mov
lret
pusha
sub
cs
add
call
fistpll
dec
cmp
adc
imul
pusha
or
mov
adc
xor
push
fs
stc
addr16
pop
cmpsb
sahf
js
xchg
pop
scas
xor
addb
ret
mov
push
lock
outsb
mov
push
push
fiadds
xor
inc
cmp
push
loop
mov
enter
mov
and
and
mov
mov
xor
jle
cmpb
push
fwait
dec
icebp
pop
int3
jns
adc
int
insl
dec
inc
addr16
push
nop
sub
scas
les
sub
rorl
adc
push
clc
out
ja
jo
and
fdivrs
mov
inc
mov
jg
push
aam
mov
mov
fisubrs
lods
sub
mov
iret
fidivrs
lret
das
imul
sub
jno
push
push
sti
lods
xchg
cmp
or
and
or
call
fnstcw
js
leave
out
insl
sbb
cmc
or
jne
cmp
jo
jl
fidivrs
in
pushl
movsl
inc
ret
add
sub
mov
pop
or
jle
push
xchg
dec
sub
std
in
jo
test
sbb
sub
test
fstps
sbb
test
xchg
sub
xchg
mov
or
mov
addb
mov
lock
rcrl
xchg
insb
adc
xchg
adc
js
cmp
mov
aaa
jmp
sub
mov
mov
mov
repnz
xor
fwait
sub
aaa
in
jo
adc
push
xchg
pop
push
pushf
mov
mov
mov
pop
lods
cmp
fwait
sahf
or
push
inc
jl
ficomps
test
mul
daa
outsl
mov
lock
mov
ljmp
shll
and
add
jns
mov
xor
xor
push
cltd
mov
push
es
repz
fisubl
pop
es
fnstcw
jge
sub
mov
mov
lods
mov
scas
adc
sbb
sub
ss
enter
pop
cwtl
pushf
jp
daa
pop
sub
inc
xchg
push
inc
mov
test
add
xor
ret
pop
pop
fcmovnu
jo
inc
adc
jno
pop
pop
mov
outsl
cli
stos
mov
xor
mov
inc
lock
xchg
ds
lods
sbb
xor
cmp
sarb
das
into
aaa
jg
xchg
loope
mov
or
mov
mov
or
xchg
adc
out
outsl
fsubr
iret
movsl
repnz
aaa
adc
add
mov
pop
loopne
pushf
adc
add
int3
mov
cmp
add
movsl
dec
arpl
sub
push
xchg
popf
pop
lea
pop
clc
fnsave
aas
inc
stos
jbe
inc
push
jno
pop
stos
sti
or
and
xor
lcall
mov
fsub
shl
shll
adc
push
sub
imul
xor
push
jnp
into
jae
popa
popa
mov
in
fsub
inc
lret
jo
test
bound
mov
imul
xchg
outsl
mov
fcomi
popf
test
inc
out
cwtl
inc
dec
pop
adc
push
test
pusha
data16
fisubrs
int
pop
subb
add
xchg
cmp
stc
mov
push
outsb
out
push
xchg
insb
jnp
adc
dec
mov
pop
mov
sti
sbb
cmp
or
or
fwait
pop
jnp
add
xor
stos
jge
cmpl
dec
and
int3
pop
repz
in
and
int
xor
xchg
xchg
call
inc
gs
popa
fildll
adc
fcoml
mov
and
sub
mov
sub
cli
pop
out
leave
push
sub
pushf
dec
cli
inc
jl
add
insb
mov
out
ss
mov
xchg
xlat
mov
lcall
fistpl
adc
jns
mov
popf
mov
sbb
mov
aaa
xor
std
mov
xor
cmp
scas
dec
enter
mov
dec
dec
scas
mov
mov
js
sub
cmp
jmp
push
lret
inc
outsl
int
dec
fs
xor
adc
rorl
aaa
aas
mov
scas
xchg
inc
mov
in
push
ja
fdivs
inc
enter
leave
rol
or
sub
mov
sub
lea
xchg
into
sbb
push
lock
mov
sub
sbb
add
inc
or
adc
cmpl
out
popa
andb
jmp
mov
pop
jne
mov
push
inc
or
adc
std
cmpsb
js
pop
subb
ds
rorb
push
and
cmpsl
adc
ljmp
adc
repnz
push
movsb
mov
mov
add
iret
mov
push
pop
outsl
or
ret
aad
ja
pop
fsubr
xchg
popf
mov
push
enter
jno
xchg
push
leave
fstpt
test
and
mov
lods
jle
or
push
jl
dec
mov
push
rcr
mov
pop
scas
es
das
scas
push
test
dec
or
adc
je
in
mov
das
lahf
int3
or
cltd
fadd
fistl
mov
add
add
in
dec
cmpsl
xor
xchg
fnstcw
lcall
test
fldl
iret
shll
icebp
fwait
cmp
pop
mov
add
cmp
ss
mov
jg
mov
dec
pop
js
jo
add
in
mov
stos
aad
xlat
xchg
mov
push
mov
ret
jae
testb
lods
inc
lock
pop
adc
cmp
jnp
or
mov
mov
jge
xchg
mov
or
data16
adc
mov
aam
pop
int
mov
nop
pop
and
xor
mov
cmpsl
fwait
mov
adc
jnp
mov
rcrb
push
es
push
dec
sbb
or
xchg
push
xor
jo
in
jb
sub
jno
sub
xchg
push
xchg
sbbl
xor
enter
sti
pop
mov
int3
loopne
or
scas
in
sub
aad
push
pusha
test
stos
icebp
lods
jne
sub
sti
daa
gs
dec
xchg
movsb
insb
mov
sbb
pop
sub
cmp
jmp
inc
std
data16
sub
cmp
xor
mov
bound
mov
and
cli
sarb
xchg
ficoms
xor
sti
adc
out
hlt
pop
inc
lods
leave
es
test
sbb
or
fcomp
push
leave
add
imul
adc
dec
inc
cmp
jg
jecxz
ret
xor
and
cmp
jb
inc
cmp
push
mov
pop
inc
pop
xchg
sbb
push
jmp
sbb
out
cwtl
cmpsl
lret
sub
out
xchg
cld
or
jg
imul
jae
sub
jns
xchg
mov
outsl
mov
out
pop
mov
jae
aad
sub
dec
inc
adcl
mov
jae
jp
cmp
jg
inc
std
stc
lds
mov
xchg
mov
lea
sbb
mov
jbe
mov
mov
out
and
jb
sbb
mov
ss
jp
mov
jecxz
xchg
aam
out
sbb
xor
mov
and
insb
inc
sbb
lods
sahf
fsts
mov
adc
loopne
dec
pop
mov
js
adc
push
repz
shl
data16
push
xchg
push
xor
scas
dec
cli
ret
int3
cmp
into
enter
push
fisubs
std
sub
scas
ljmp
sub
push
push
xchg
xchg
mov
in
inc
add
mov
shlb
sub
test
decb
add
push
cs
xchg
sub
cmp
pop
cld
leave
sbb
pop
pop
or
jmp
sti
push
pushf
lahf
dec
push
shll
aad
lret
loopne
mov
mov
push
mov
fimuls
ljmp
lods
popa
push
sub
xchg
cli
movsb
sub
loopne
push
ljmp
mov
ret
in
popa
mov
sbb
dec
pop
divb
hlt
push
cmp
fsubl
push
negl
or
out
jle
jo
sbb
cmp
push
jle
adc
fdivrs
je
ljmp
push
push
add
cs
in
xchg
enter
cli
aam
mov
sub
xor
daa
lods
pop
and
inc
clc
push
bound
ja
xchg
jb
je
jbe
inc
sub
enter
rcrb
fmull
dec
xchg
add
cmp
and
mov
push
rcrb
pop
push
add
cmp
out
mov
std
shlb
mov
and
jecxz
enter
xchg
push
cs
fisubrs
inc
enter
int3
pop
pop
add
maskmovq
idivl
inc
fistps
insl
cltd
out
mov
push
insl
sbb
icebp
or
test
xlat
mov
xchg
pop
clc
fs
gs
or
add
jge
insb
test
sbb
ds
pushfw
xor
fcmovbe
data16
xlat
icebp
cwtl
dec
lret
mov
jbe
dec
and
fnstcw
popf
sub
cmpsl
lcall
add
int3
movsb
mov
cmp
shrl
mov
xlat
popa
lds
cltd
jb
sbb
and
push
inc
enter
push
es
sbb
inc
loopne
subb
xor
and
push
outsl
adc
inc
jae
or
pop
mov
push
cld
lret
dec
cmc
outsl
add
push
xor
add
pop
into
mov
jne
xchg
pop
sub
and
sti
and
push
fsts
add
push
out
cmp
scas
sbbl
stos
push
adc
hlt
rol
rcrb
inc
sub
aam
and
cmp
add
mov
scas
clc
xchg
in
and
rolb
cli
xchg
xor
and
push
aad
pop
add
rorl
lret
cmc
rcr
sub
mov
xchg
jb
imul
sub
pushf
mov
mov
fdivrs
lods
sub
sbb
idivb
inc
out
cli
pop
sar
movsl
lahf
je
push
push
sbb
outsb
mov
xor
aam
hlt
mulb
push
imul
dec
cs
add
mov
pusha
cmc
sub
mov
jns
cltd
cmp
jb
outsl
outsl
sub
dec
xchg
pusha
adc
mov
sahf
cmp
mov
or
inc
xorb
xchg
lret
mov
iret
xchg
pop
xchg
pop
adc
pop
and
mov
mov
pop
bound
fwait
push
or
lds
dec
sahf
sbbl
mov
and
jne
jae
sub
loope
and
lahf
sbb
andl
lock
sub
mov
dec
scas
xchg
dec
in
push
sti
stc
in
add
gs
sbb
or
and
mov
cmpsb
in
pop
sub
ret
adc
mov
jmp
mov
jle
enter
shll
pop
sub
xchg
insl
jns
adc
or
or
sarb
push
inc
lock
mov
sub
scas
sub
js
sub
fldenv
pop
ret
pop
sarb
mov
mov
xor
sub
add
insl
out
jmp
mov
enter
add
insl
pop
xor
jg
pop
les
flds
nop
and
lods
loope
dec
test
aaa
aam
lahf
cltd
in
and
xor
cmpsb
popf
sbb
lcall
arpl
movsb
in
cmp
dec
mov
dec
cmp
insb
inc
cltd
lock
pop
xchg
aam
mov
outsl
fstpt
mov
mov
call
xlat
mov
in
sbb
mov
in
mov
imul
test
test
andb
aam
imul
cli
stc
dec
xlat
adc
jbe
mov
xor
sub
xchg
adcl
es
dec
repnz
enter
or
inc
pusha
mov
sti
xchg
arpl
or
cmpsb
mov
imul
push
add
inc
cmpsb
roll
scas
popf
stos
push
in
cmc
cmp
out
jmp
mov
pop
lcall
popf
mov
xchg
mov
shrl
or
sbb
cltd
das
maxps
loope
call
int3
mov
or
in
lock
or
movsl
dec
jge
pop
cltd
pop
and
inc
fiadds
dec
jg
xor
stos
pop
sti
lea
push
cltd
mulb
lret
stc
dec
adc
aas
cmp
jmp
xor
test
xchg
cmp
mov
or
fidivl
inc
mov
xor
jp
push
call
shlb
mull
xchg
push
movsb
mov
xor
cltd
je
push
push
jae
std
stos
aaa
imul
stc
sbb
sub
inc
xchg
movsb
inc
shl
push
dec
ds
pop
push
xchg
aas
mov
insl
fadds
inc
dec
hlt
sub
lcall
rolb
jmp
push
or
mov
popf
js
mov
adc
push
sub
mov
scas
inc
or
sbb
mov
fsubrs
mov
jge
in
mov
int
mov
call
xchg
les
cld
push
aaa
pop
cmc
mov
int3
loope
shlb
add
mov
mov
xchg
jle
push
sbbb
stos
in
aam
pop
xor
xchg
add
dec
pop
ffree
repnz
notb
pop
inc
and
loopne
arpl
adc
cltd
mov
outsb
adc
mov
fnstsw
in
dec
clc
fcomps
sbb
push
test
dec
movsl
adc
pop
pop
fsubs
jns
push
cmc
or
fiadds
xor
or
inc
int3
jg
scas
insb
divl
xchg
xor
inc
jl
icebp
shrb
push
jp
xchg
sub
inc
push
cmp
jae
cmp
loop
outsb
jbe
and
js
push
arpl
inc
stos
jbe
sub
mov
addr16
mov
xchg
sbb
call
ret
pop
aas
aam
push
lods
cli
cs
outsl
xchg
in
or
popa
shll
pop
xor
pop
xchg
fs
dec
aaa
stos
ret
ja
pop
aas
jl
sub
movsb
leave
jmp
pop
shlb
sub
ljmp
lcall
push
jns
lret
cld
cltd
arpl
rcll
mov
add
adc
mov
sahf
mov
sub
adc
pop
cmpsl
cld
cwtl
jne
pop
adc
rcll
dec
or
cmc
les
test
rclb
push
push
fildl
imul
dec
adc
jnp
inc
das
jle
ja
insw
insb
jge
fwait
ja
pop
repz
push
xchg
repnz
ret
fiadds
xor
jns
dec
sub
add
lret
popa
jecxz
mov
fsubp
xchg
sbb
movsb
popa
lret
push
sbb
xchg
icebp
dec
push
xlat
mov
lahf
pop
pop
stc
leave
push
xor
mov
sbb
mov
xor
jmp
sbb
daa
dec
jge
pop
inc
loop
jne
data16
repnz
push
in
pop
push
cmpsb
test
lret
and
add
mov
jnp
inc
cmp
jmp
shlb
fisubrl
cmp
fcoml
lret
ja
imul
push
sar
xchg
mull
pop
in
subb
out
and
xchg
pop
js
and
xchg
cld
pop
mov
jecxz
xchg
shll
pusha
outsb
cli
lock
and
rcr
iret
fcompl
test
jg
repz
mov
mov
insl
inc
out
mov
mov
ret
inc
inc
mov
lret
insl
lret
jle
cmpsl
sti
icebp
cs
adc
inc
lahf
stos
dec
in
ljmp
jge
push
xchg
add
push
inc
jns
xor
mov
in
test
mov
add
mov
pop
inc
mov
arpl
dec
jb
outsl
ficomps
cltd
inc
jecxz
movsl
xor
mov
xchg
es
pop
or
inc
mov
dec
mov
push
and
lds
out
sbb
std
mov
daa
sbb
out
arpl
mov
ljmp
cli
lock
sub
add
jb
sub
dec
inc
mov
mov
or
mov
push
mov
push
mov
mov
jp
test
or
mov
mov
mov
mov
inc
stc
in
fstpt
jne
jp
lock
lods
add
dec
inc
mov
bound
xlat
sti
push
xchg
inc
xchg
adc
adc
in
mov
mov
jno
lahf
xor
int
fsubl
outsl
dec
cwtl
iret
fmuls
cmpb
ss
pushf
cmp
js
stc
rorb
xchg
pop
out
jne
adc
xchg
ljmp
pop
xchg
shr
daa
outsb
pop
mov
xor
adc
mov
or
into
lea
adc
fsubs
je
les
jae
ret
jno
inc
test
ja
mov
test
cmp
cmpsb
push
pop
pop
stos
mov
mov
lea
xchg
mov
inc
sub
jecxz
fdivs
cmp
sub
jmp
nop
jp
add
jmp
fcomps
data16
push
xor
adc
enter
imul
xchg
aas
inc
adc
mov
imul
test
mov
mov
mov
pop
mov
adc
jge
outsl
or
push
aam
pop
sbb
push
loopne
js
stos
je
sarb
sbb
es
arpl
jae
ret
repz
inc
mov
aaa
lret
pop
mov
push
push
cmp
jp
sbb
jb
mov
int3
push
pop
out
lods
fstpt
xchg
inc
leave
push
fwait
stos
fists
subl
jecxz
repnz
pop
fsubrs
loope
repz
mov
sbb
fimuls
mov
pop
fwait
sarl
xchg
push
mov
jecxz
loopne
int
jae
xorl
test
popa
adcl
cmp
sub
inc
push
cmp
xchg
mov
cmpsl
xchg
xchg
mov
mov
push
in
mov
xchg
pop
in
and
and
xchg
into
mov
addl
repz
pusha
mov
or
test
inc
imul
dec
sbb
in
or
push
addl
push
fisttps
mov
cli
gs
sbb
mov
scas
sub
imulb
das
stos
dec
pop
dec
push
dec
push
movb
in
adc
cmp
dec
outsl
ss
fcmovbe
mov
mov
push
leave
xchg
leave
push
int
ljmp
mov
out
and
adc
and
pop
or
ss
pop
push
dec
dec
push
je
mov
out
inc
std
adc
xor
int
jmp
dec
cmp
sub
dec
dec
rep
jb
pushf
sbb
sarb
xchg
mov
pop
jl
xorl
pop
iret
lret
xchg
add
lea
jae
cli
cld
out
mov
nop
sub
xor
rcrb
mov
lret
and
jne
scas
jmp
lea
pop
xor
in
dec
xchg
or
in
daa
scas
and
mov
insb
inc
cwtl
fcomip
mov
pop
jns
sub
les
or
outsl
pop
mov
int
sub
cwtl
fsubr
sub
daa
cmp
add
aas
push
out
jmp
mov
mov
faddl
sbb
jno
adc
push
mov
inc
xchg
movsl
add
cmp
out
jo
push
ds
lahf
imul
repnz
mov
test
sbb
cli
jo
xchg
mov
pushf
mov
cmp
lret
pop
rcrl
outsl
mov
enter
pop
mov
scas
and
imul
mov
out
mov
js
or
push
adc
dec
lcall
mov
jbe
fdivl
or
jns
sarb
jb
add
pop
sbb
aaa
cmp
jae
int
fimull
fldcw
or
in
or
inc
mov
mov
jg
dec
push
pop
sti
std
aaa
mov
outsl
pop
mov
inc
adc
mov
sbb
rdtsc
sbb
and
pop
nop
lret
stc
jno
bound
adc
sbb
mov
shl
aam
out
mov
mov
int3
push
xchg
sbb
enter
xor
aaa
ret
mov
int
in
mov
fdivl
jecxz
shrl
mov
fucomi
adc
out
std
mov
adc
or
aaa
add
data16
xor
mov
or
hlt
adc
in
xchg
mov
cmp
sbb
xchg
es
sarl
pop
addl
sbb
int3
dec
ret
das
fnstcw
pop
scas
shr
or
sbb
mov
inc
inc
scas
xchg
pop
orl
and
daa
mov
jne
or
sub
ret
hlt
inc
xlat
jb
and
or
arpl
aad
jae
scas
mov
inc
xor
xor
inc
mov
add
or
adcb
xorb
push
mov
or
je
or
test
add
cld
repz
outsl
sbb
je
mov
mov
out
pop
xor
sub
outsb
and
shl
push
jnp
rclb
mov
push
sub
and
shll
push
mov
cltd
sub
sub
sub
and
cs
inc
mov
movsb
push
dec
lock
lret
sub
xchg
inc
or
add
cmc
adc
imul
jle
mov
mov
dec
and
cmc
or
sbb
add
push
in
dec
enter
xor
push
jle
jg
cld
insb
lret
push
and
loop
shlb
test
mov
test
push
dec
add
push
lret
ret
jp
iret
stos
xchg
mov
and
clc
movsb
int3
das
daa
rcrb
outsb
pop
out
sub
pop
sbb
repnz
sbb
arpl
xchg
push
push
xchg
xor
push
or
outsb
out
mov
mov
inc
add
enter
clc
test
xor
xchg
xchg
into
orb
mov
xchg
jnp
es
inc
mov
insb
iret
mov
adc
sbb
mov
jecxz
aad
popa
in
dec
sub
fiadds
dec
leave
je,pt
std
jae
in
jo
jl
mov
push
notl
sub
ss
xchg
or
dec
nop
pop
scas
mov
jg
dec
jmp
mov
sti
lods
xchg
add
mov
jne
cmpsb
mov
lds
push
mov
mov
or
xchg
out
rclb
ss
mov
cltd
or
mov
pop
add
xorl
fwait
sbb
pop
xchg
sbb
mov
mov
fwait
in
hlt
sbb
or
push
js
test
test
sahf
cwtl
add
pop
in
ss
in
das
popf
test
jno
adc
xor
mov
mov
mov
outsl
into
aam
xor
xchg
sub
fidivrl
add
lock
push
movl
inc
or
xchg
out
pop
movsb
mov
lock
xchg
dec
mov
mov
subl
lock
test
inc
inc
mov
jb
pop
jne
dec
ljmp
sbb
in
pusha
pushf
jne
cld
cli
in
test
sub
xlat
or
jb
lds
je
pop
xorb
sbb
ljmp
loopne
int
cmp
imul
cmpsl
xorl
inc
dec
sbb
mov
pop
addb
inc
push
pop
dec
mov
rcr
fisttpll
sub
pop
or
jbe
leave
imul
test
add
imul
xchg
mov
or
movsb
dec
jmp
sub
bswap
inc
es
mov
pop
mov
cmp
into
push
popa
cmp
and
cmpl
out
push
sbb
mov
dec
leave
mov
or
rcrb
sar
add
rcl
enter
pop
inc
cs
adc
push
aaa
mov
push
in
js
mov
ss
push
xchg
popa
scas
pop
inc
or
lret
jg
les
sub
jge
pop
cwtl
stos
pop
pop
fwait
push
or
jb
mov
out
sub
cmp
jl
jae
jns
pop
test
out
les
mov
sbb
es
loope
inc
stos
insl
inc
enter
jecxz
sbb
or
pop
and
push
mov
test
ret
lea
or
stc
jle
pop
fcoms
bound
mov
push
sbb
xchg
data16
mov
xchg
sbb
mov
push
jg
stos
cld
adcl
xor
or
imul
in
push
test
jne
sti
dec
and
fcompl
sub
stos
leave
scas
mov
pop
nop
mov
cmp
enter
inc
outsb
pop
xchg
adc
add
and
cld
xchg
adc
paddusb
mov
mov
jge
add
sub
cmp
push
dec
jbe,pt
inc
xchg
push
push
notb
add
lea
mov
js
inc
pushf
sub
mov
inc
cmp
pop
push
sbb
cmpsb
aaa
add
lret
cmp
roll
shlb
cwtl
addl
mov
negb
push
mov
ja
mov
push
mov
dec
add
outsb
xor
or
lock
push
rclb
dec
xchg
mov
dec
jge
or
out
jecxz
dec
push
pop
ret
scas
loope
push
sbb
adc
lret
dec
cwtl
add
pop
clc
test
icebp
loop
das
adc
push
in
xchg
mov
std
and
mov
mov
sub
xor
or
icebp
pop
int3
fcmovu
testl
jns
mov
push
xor
fwait
out
jae
repz
mov
add
or
xlat
ret
or
cmc
cmc
and
xor
lret
mov
fs
jb
inc
xlat
imul
test
jge
pop
mov
add
mov
shr
mov
js
stc
outsb
add
int
mov
lret
cs
sahf
jmp
xchg
mov
mov
dec
push
mov
rol
cmp
dec
bound
mov
sti
cmpsb
mov
or
jp
jle
push
aas
fists
jo
in
or
sub
inc
adc
add
add
mov
shl
test
rclb
aas
jne
shlb
add
lds
rolb
clc
daa
cwtl
push
fsubl
mov
adc
sti
push
ds
int
lret
push
mov
andb
mull
push
fdivrs
or
xlat
aas
sbb
sub
movsb
jns
loopne
inc
rclb
lock
stos
fs
ret
rorl
jae
add
pop
hlt
jnp,pt
sar
mov
mov
mov
cwtl
pop
les
xchg
pop
sbb
jmp
stc
les
jbe
jl
xor
xor
sbb
lcall
outsb
add
xchg
gs
push
mov
add
movsb
dec
mov
imul
and
adc
cmp
call
pop
les
scas
push
pop
xchg
xchg
xchg
xor
fmull
cmp
cmp
movsb
pop
or
dec
stos
cmpsb
je
adc
insl
pop
in
mov
ja
sub
rcrb
mov
cmp
xchg
xor
dec
dec
jmp
call
ljmp
mov
insb
push
xor
mov
test
add
or
mov
dec
hlt
movsl
daa
mov
fidivs
cmp
movl
sti
and
xchg
sti
push
in
ret
jg
jne
and
and
mov
xchg
add
pop
mov
shl
mov
fisttps
or
push
fs
inc
call
fisttpl
shll
xor
jge
cmp
shlb
push
xor
mov
sub
pop
push
test
les
push
outsl
dec
fnstsw
out
clc
push
xlat
sarb
dec
lods
mov
mov
rep
shlb
push
lock
jmp
push
cmp
in
inc
add
popa
outsb
mov
fdivs
mov
pop
and
addr16
dec
aaa
imul
and
in
out
xchg
dec
out
xor
push
xlat
cmp
sub
pop
fdivr
pop
fmul
dec
xor
add
outsl
popa
sbb
add
imul
inc
add
roll
and
repz
xchg
xor
mov
mov
sub
pop
xor
dec
dec
test
mov
adc
pop
and
je
test
inc
and
loopne
bound
jecxz
mov
loop
dec
flds
das
sub
mov
retw
pop
pop
ret
jecxz
cmovb
popa
sub
mov
add
xchg
testb
loop
sti
sub
aam
cmp
stos
in
daa
jle
pop
repz
sub
cmp
add
lock
mov
fcomi
and
dec
and
aam
inc
push
dec
xor
in
aam
repz
les
adc
faddl
jecxz
xor
mov
sub
movsl
leave
jp
faddl
pusha
cmp
loope
daa
nop
lods
testb
outsl
push
mov
sbb
outsb
outsl
mov
mov
aas
push
xlat
scas
negl
sbb
pop
xor
xor
dec
dec
gs
rcr
out
cmpsb
ja
hlt
aam
fmuls
jl
pop
and
xchg
gs
int
inc
xchg
push
dec
aad
ret
shll
fists
push
stc
sub
cmp
addr16
xchg
adc
jae
rcll
ret
decl
xchg
test
pop
popf
fucom
xor
ja
jb
push
mov
pop
int
push
das
addb
sbb
andb
pop
mov
xlat
rorl
pushf
jecxz
lret
mov
push
data16
stos
xchg
push
mov
dec
pop
ret
cld
and
xchg
sbb
movsb
or
ds
out
inc
clc
stc
inc
clc
es
sbbb
pop
std
mov
out
imull
outsb
inc
out
es
mov
sbb
and
lret
aas
lds
push
inc
jmp
jmp
push
shll
inc
mov
jge
clc
ja
adc
scas
testb
adc
imul
aad
repnz
jge
popf
xlat
movsl
push
popa
adc
xchg
or
jns
xor
or
cwtl
nop
test
outsl
inc
fwait
mov
mov
jl
xor
popa
pop
lock
sbb
out
cmpsb
pop
addl
movsb
jge
subl
push
in
xor
sbb
scas
pop
ret
test
dec
cli
sti
inc
movups
roll
xorl
call
int
lret
add
test
sub
cmp
or
std
pusha
sbb
outsb
adc
mov
out
imul
and
mov
ja
fisttps
push
icebp
out
loope
popf
dec
sub
cmp
enter
stos
in
and
in
adc
sti
scas
icebp
mov
jns
lret
shrl
lcall
jb
jl
dec
inc
addr16
test
ss
lea
sub
nop
inc
in
push
dec
push
cs
test
shrl
dec
notl
cmp
cli
push
pop
or
cmp
cmp
loop
adc
adc
test
jne
repz
fimuls
scas
mov
stc
mulb
loop
sbb
cmp
std
jne
stc
imul
and
sub
and
xor
fadds
fmul
cmpsl
mov
aaa
xchg
in
data16
loope
or
jne
mov
out
js
hlt
fisubl
imul
orb
es
leave
and
iret
pop
mov
mov
xchg
dec
inc
mov
ljmpw
mov
jle
ljmp
lds
xor
test
sub
push
int
loope
ss
push
mov
test
jle
push
out
arpl
cltd
test
mov
jb
stos
insb
popf
sar
std
push
ds
cmp
aaa
fildll
jns,pn
push
fisubl
inc
pinsrw
dec
shl
sbb
pop
outsl
stos
xchg
sub
cmp
push
fisubrs
in
daa
fmull
loopne
dec
addl
call
jecxz
push
mov
mov
scas
lret
push
or
pop
inc
insb
lret
mov
rcrl
mov
cld
cmp
subl
mov
inc
es
jbe
pop
pop
cmp
sub
sti
clc
ror
mov
or
mov
out
sahf
int3
test
bnd
mov
xor
add
and
fs
push
xorb
cld
inc
mov
push
pop
inc
push
inc
xor
sbb
lcall
test
imul
rclb
ret
out
pop
mov
rcrb
xchg
ds
pop
cmp
test
test
mov
in
dec
push
sbb
aam
ffreep
push
sub
sub
sbb
rcrb
dec
cmp
push
sub
sub
orb
jno
or
inc
mov
mov
jnp
sbb
fmull
subl
pop
inc
adcl
aas
dec
repz
out
outsl
aas
mov
push
inc
pop
out
loope
cmp
enter
jp
add
mov
gs
lods
cltd
adcb
add
fisubrs
jmp
sbb
add
mov
pop
adc
js
jl
ds
cs
mov
add
or
repnz
ret
xchg
push
mov
jecxz
and
mov
mov
xchg
or
pusha
push
or
fwait
dec
xor
sub
sbb
test
sti
dec
and
out
mov
popa
add
or
mov
scas
inc
movsl
dec
xchg
setne
call
xchg
pop
jne
cmp
push
xor
insb
leave
sub
inc
add
mov
cmp
int
gs
loopne
pop
lds
jne
jl
push
xor
pusha
cmpsb
movsb
outsb
push
xchg
sbb
sbb
inc
jge
mov
pushf
pushf
mov
loope
xor
push
xor
cwtl
pusha
imul
dec
cwtl
jne
shrl
mov
cmpsl
mov
aad
shl
push
add
jecxz
adc
xchg
inc
mov
dec
loop
lahf
jl
xchg
ret
cmp
jae
roll
jmp
sbb
cmpsb
aad
add
pushl
es
fisttpl
in
lds
lods
mov
aad
rclb
inc
add
xchg
aad
out
sbb
xchg
push
cmpsl
fwait
mov
push
inc
cmp
adc
mov
xor
xchg
ds
xchg
jo
adc
xchg
ss
cmp
and
mov
jmp
xchg
mov
xor
orb
enter
jo
dec
jmp
outsb
imull
and
pop
cltd
jecxz
push
mov
mov
lret
test
sbb
cwtl
pusha
jge
xor
xchg
jg
inc
push
add
jae
ds
pop
mov
pop
push
cwtl
xchg
xor
repnz
add
xchg
mov
push
dec
xorb
adcb
add
inc
je
push
pop
cs
out
aaa
inc
xlat
pop
mov
add
inc
out
jmp
sahf
cld
cli
and
lret
mov
push
lcall
or
icebp
movsl
test
enter
or
repz
inc
add
lock
in
fstp
sub
push
mov
repz
push
jmp
movsb
xchg
or
and
sbb
xorb
xor
loop
xchg
scas
pop
sti
lods
jmp
movsl
jbe
cli
lock
or
rorl
cld
in
cmpsl
stos
push
jae
sbb
insb
jne
lret
aad
jne
sub
sub
sbb
shr
sub
repnz
mov
xchg
pop
int3
mov
sub
pop
addl
int
call
cmp
sbb
cltd
inc
xchg
js
fwait
dec
ror
cmpsl
pop
and
mov
vphaddudq
mov
in
xchg
loop
loope
int
ds
and
cmp
int3
lahf
sbb
mov
xchg
js
or
adc
lock
sub
mov
dec
repnz
push
mov
jae
jle
push
call
andb
pop
scas
call
mov
xchg
jae
jp
test
ljmp
sub
cli
xor
cmpsb
mov
data16
mov
sbb
imul
popl
push
aaa
sbb
jp
sbb
mov
pop
jno
pushf
sub
or
cmp
dec
fisubrl
xor
neg
in
and
pop
mov
inc
xor
jle
ret
cmp
jge
out
sub
fdivrp
xchg
jl
ficompl
sbb
and
mov
je
inc
mov
mov
mov
xchg
int
ret
lds
mov
ret
lahf
lea
dec
or
inc
add
inc
outsl
in
scas
out
dec
aaa
out
xor
xor
xchg
sbb
roll
jne
test
cmpsl
shrl
jnp
lret
ficoml
test
dec
mov
daa
add
cld
outsb
push
jg
movb
jns
movsl
cmpsb
aas
rorl
mov
cmp
insb
jl
or
pop
ljmp
lds
mov
test
sbb
out
sbb
pop
test
iret
or
and
xchg
mov
loopne
mov
xlat
insl
outsb
aaa
adc
dec
lods
jg
hlt
sbb
in
xchg
sbb
sbb
lret
cmp
les
inc
inc
loope
sbb
or
ficoms
sbb
es
scas
pop
push
mov
sbb
jbe
stos
jo
mov
mull
aam
fwait
adc
loopne
lret
pushf
mov
clc
bound
lds
xchg
pop
push
xor
ret
gs
xchg
mov
arpl
adc
adc
mov
stos
dec
push
push
outsb
jno
inc
push
stos
rcll
sub
std
iret
mov
or
loop
cli
cmc
fisttps
imul
mov
dec
sti
and
scas
iret
movups
out
xchg
fistl
popa
repz
ja
adc
mov
lds
stos
cmp
push
subl
mov
jg
xchg
xlat
add
test
test
inc
adc
mov
add
jmp
inc
div
xorl
pop
fmull
push
movsb
shlb
out
and
push
mov
lret
adc
pcmpgtw
mov
add
shl
push
pop
lret
jnp
push
mov
repnz
leave
add
sub
jno
lret
adc
xor
dec
mov
mov
into
adc
fldt
mov
bswap
das
js
nop
push
inc
rol
faddp
xchg
xchg
mov
sbb
jle
mov
add
mov
bound
roll
xchg
les
fdivr
sbb
jo
jns
mov
arpl
rorb
aad
inc
and
sub
adcl
mov
xchg
mov
and
shrb
push
sub
shrb
add
pop
jne
and
rcl
iret
xor
mov
stos
aam
or
daa
jp
mov
pop
adcb
inc
mov
lods
lret
pop
adc
rclb
xchg
or
out
push
out
mov
mov
cs
stos
xor
psraw
insl
outsl
push
and
mov
gs
andb
data16
shll
loop
je
data16
add
sub
mov
push
pop
jbe
xor
in
add
ret
popf
cmp
das
mov
sbbl
mov
inc
cltd
pop
pop
je
cmp
push
stos
test
insl
mov
vpermw
cltd
dec
dec
or
out
jnp
movsl
ds
inc
addl
sub
mov
dec
push
cmc
insl
into
je,pn
cmpl
mov
cmpsl
aaa
sahf
pop
and
push
xor
enter
repnz
rol
cmpsl
test
inc
jbe
pop
bound
ret
add
lret
pop
test
sub
ret
cmp
orb
sbb
outsb
scas
pop
mov
les
cltd
cmpsb
adc
jle
lahf
push
mov
repnz
push
mov
fstpt
jg
cmp
xchg
pop
insb
pop
adc
test
mov
lock
test
shrb
mov
mov
addr16
dec
addl
in
lcall
sub
and
xor
pop
lcall
dec
xor
fiadds
pushf
outsl
out
sbb
ja
enter
out
decl
testb
jne
push
ret
mov
inc
xchg
mov
das
fmull
cmp
sub
stos
mov
or
popa
iret
xlat
imul
repz
inc
jmp
xor
xchg
sbb
and
fstps
daa
mov
test
fdivrs
jns
mov
fcomip
xchg
cmc
stc
inc
outsb
pop
idivl
sub
add
adc
fnstsw
addr16
push
ds
mov
nop
mov
mov
jle
mov
dec
sahf
shl
push
ljmp
pop
adc
push
addl
fiaddl
dec
lret
pop
mov
sub
dec
data16
jle
cmp
inc
xlat
push
mov
dec
popa
in
jnp
jne
fcoml
lds
outsb
adc
dec
xor
jle
and
or
sarb
adc
fnstcw
scas
jle
lods
jnp
adc
dec
std
xor
stos
jl
mov
mov
add
push
lods
mov
lock
jno
mov
push
push
inc
xchg
pop
jne
pop
jo
jecxz
hlt
mov
sbb
sbb
repz
push
repnz
sbb
inc
clc
push
adcl
into
arpl
jb
cmp
mov
add
push
ret
mov
push
or
es
sarl
andl
dec
icebp
mov
scas
imull
add
imul
call
add
icebp
enter
jl
out
jbe
dec
adc
xlat
fcomps
lods
pop
sti
in
and
pop
imul
fcomp
push
inc
popf
sbb
inc
push
iret
inc
inc
xchg
add
xor
jmp
cmpsb
sub
in
je
mov
jecxz
rolb
fs
or
dec
lahf
sbb
enter
pushf
mov
cltd
notl
xor
xorl
loope
mov
jnp
xlat
cmpsl
test
in
inc
xchg
and
cmp
xchg
ds
pop
lahf
in
adc
sub
xor
neg
adc
rorb
jne
cli
jle
int3
push
test
jl,pn
push
adc
lret
lea
push
aas
inc
xchg
cmp
or
mov
lods
jae
fcmovnu
push
mov
adc
movsl
in
enter
add
ret
mov
mov
lea
hlt
xchg
fimull
xor
xor
clc
gs
jo
or
xchg
mov
ret
add
pop
xchg
je
mov
aas
jmp
shlb
adc
scas
pop
dec
push
adc
cmp
ja
shl
shll
les
pop
pop
cmp
pop
divps
pop
rclb
push
mov
mov
shrb
and
lods
cmp
stos
sbb
mov
fstpl
push
and
hlt
shl
inc
inc
jno
mov
sbb
mov
or
adc
add
mov
inc
sahf
push
jecxz
push
ret
js
loopne
cmp
loop
nop
stos
mov
out
lret
int
aaa
stc
mov
shr
jl
addr16
mov
js
dec
push
leave
loopne
jmp
pop
sbb
dec
lret
pusha
ret
mov
pop
jl
outsl
adc
lea
test
lcall
loop
mov
cwtl
ljmp
cmp
iret
add
clc
or
stc
xchg
and
mov
mov
pop
in
sbb
adc
cmc
mov
out
push
les
sahf
aad
xchg
mov
jmp
push
xchg
mov
lret
adc
gs
xchg
lahf
or
sub
mov
jp
sub
lahf
xor
test
cmp
inc
sbb
aad
cmc
mov
aaa
mov
jmp
cmp
inc
and
in
hlt
xor
rcrl
mov
mov
sbb
outsb
jp
push
in
add
mov
scas
add
add
addr16
mov
add
mov
ret
adc
push
shll
inc
aaa
inc
bound
xchg
jae
lds
mov
scas
fxam
push
xchg
and
sbbb
inc
mov
or
jne
lds
les
sub
aaa
xor
out
add
adc
shl
loope
imul
adc
pop
mov
mov
jecxz
aas
out
cli
mov
jbe
adc
push
push
sub
cmpl
mov
scas
sbb
js,pt
dec
lret
xor
ror
xchg
int3
inc
and
loope
jmp
mov
inc
sub
push
cmp
jge
mov
loope
cld
push
mov
jne
mov
adc
stos
xchg
pop
inc
aad
mov
or
inc
movsl
sbb
test
xchg
clc
push
cmp
mov
sar
add
pop
popf
ljmp
popa
ds
scas
inc
mov
jge
mov
xchg
js
pop
or
cmpsl
mov
int3
sets
rclb
outsb
insb
xchg
jno
lcall
jmp
xchg
jmp
add
iret
les
fsubrl
sahf
cli
bound
int
xchg
cmp
popa
mov
fnstcw
inc
decb
jae,pt
push
cwtl
pop
xchg
je
fisubl
and
xor
mov
mov
hlt
mov
pop
mov
add
pop
lret
pop
inc
cmpsb
add
bnd
mov
addr16
popf
push
cmp
jmp
imul
cmp
out
leave
fwait
adc
ss
ret
repz
leave
or
pop
mov
outsl
mov
dec
push
adc
cmp
insb
push
cmp
inc
and
mov
mov
cmp
fwait
imul
jmp
cli
or
loopne
lock
push
mov
mov
mov
inc
dec
incl
sbb
lock
xchg
testb
push
bound
les
in
loope
adc
cli
or
inc
add
std
rcrb
repz
cmp
adc
cmpsl
cmp
push
popa
pop
lock
movsb
add
mov
stos
sub
cmp
push
ficompl
pop
pop
push
mov
mov
lds
leave
inc
gs
aas
adc
adc
hlt
aas
push
or
mov
push
mov
mov
adc
xlat
or
fildl
movsl
pop
jl
pushf
add
inc
pop
jl
test
call
sub
push
pop
mov
sub
jo
rcll
push
fimuls
ds
stos
mov
xor
je
lahf
cs
jo
dec
fmull
shll
add
mov
inc
imul
aaa
xor
lods
jb
lret
lret
push
dec
add
dec
and
mov
sti
cmp
dec
addr16
insb
repz
std
jb
xor
jg
ljmp
out
jbe
bound
jle
cld
or
mov
hlt
inc
push
arpl
in
repnz
pop
push
mov
xchg
imul
hlt
das
icebp
arpl
int3
stc
dec
stos
fnstsw
inc
jge
xchg
fidivrl
or
push
xor
cmp
ds
cltd
jbe
push
and
stc
repz
inc
add
jp
dec
pop
xor
adc
addb
lods
adc
ret
lods
xchg
popa
imul
cmp
orb
in
jns
adc
outsb
pusha
pop
outsb
lock
fidivrl
push
stos
in
lret
test
push
cmp
cmpl
cmpsb
lods
xchg
xchg
cmp
scas
mov
cmc
gs
add
lret
paddw
inc
mov
cmp
jnp
mov
mov
inc
sbb
sti
gs
pushf
push
lahf
xchg
imul
dec
test
mov
xchg
jne
and
cld
xchg
ss
clc
pop
sub
xor
dec
push
div
out
stos
add
dec
popf
and
xor
movb
jmp
cmc
enter
push
push
jnp
dec
pop
cmp
lcall
sbb
rcl
sahf
aas
sti
mov
xor
cs
mulb
add
add
jns
jbe
sub
lods
jnp
mov
pop
mov
add
adc
and
cmpsb
add
lfs
pop
bound
mov
lods
je
push
fimuls
fs
inc
jae
leave
and
and
shl
mov
enter
jl
add
loop
pop
hlt
sbb
int3
imul
cltd
arpl
pushf
shll
out
mov
jp
ds
je
adc
test
aam
push
inc
cwtl
popa
xor
and
dec
jp
mov
add
scas
mov
inc
jg
nop
xor
mov
jl
push
roll
mov
lock
fistpl
push
inc
sbb
adc
mov
xchg
xor
push
in
outsl
out
add
xchg
xchg
scas
mov
xchg
sub
cmp
mov
cmpsl
std
sbb
jo
mov
push
movsb
aad
in
nop
pop
xchg
jnp
xor
cmpsl
cmp
fsubp
aaa
stos
in
mov
push
inc
mov
pop
sti
repnz
imul
leave
mov
inc
xchg
mov
push
pop
ss
lock
push
jns
loop
mov
repz
fcompl
js
fimull
in
je
xchg
xor
xor
lods
or
and
stc
sbb
sub
fwait
enter
pop
mov
adc
repz
add
push
mov
xchg
sbb
dec
jle
call
pop
lcall
rol
loop
rorl
shl
cwtl
dec
aad
divb
sub
pop
sub
imul
flds
movsl
pop
cmc
mov
xor
addr16
jo
xor
jmp
push
cmp
adc
icebp
jbe
pop
test
sbb
sbb
iret
arpl
insb
push
bound
shll
outsl
mov
shl
mov
dec
cmp
and
nop
push
xchg
cmp
leave
and
add
hlt
repz
cwtl
fdivl
dec
test
ret
repz
rcrb
rcrb
shrl
cmc
rorl
mov
test
lds
cltd
mov
test
dec
xchg
sub
push
xor
mov
add
cltd
mov
add
sbb
push
jbe
mov
mov
adc
mov
jle
outsl
xchg
inc
and
arpl
pushl
or
inc
and
lahf
ds
loope
xchg
mov
sub
pop
insl
shll
cld
inc
mov
inc
pop
dec
popf
repnz
xchg
xor
in
iret
xchg
lret
lret
test
push
ds
icebp
jnp
xor
scas
js
push
mov
dec
jbe
mov
inc
dec
sbb
pop
cmpsl
dec
adcb
ret
xor
aaa
addl
cmp
lcall
movsb
xor
pusha
jne
mov
pop
add
xor
aaa
out
cmpl
test
addr16
pop
push
add
jbe
pushf
imul
or
add
jae
mov
out
jns
inc
pop
pop
inc
fcompl
cmp
out
or
data16
adc
xor
pop
lods
mov
cmc
dec
sbb
xchg
cmp
cmp
nop
xor
sbb
call
adc
cmpsb
sahf
add
fs
mov
aad
add
xor
mov
and
sahf
lahf
das
mov
daa
lret
js
push
lds
push
lds
scas
outsl
adc
pop
jl
nop
pop
mov
and
push
push
scas
xchg
inc
in
jl
dec
pop
outsb
sub
jae
clc
mov
insb
fsubrs
adc
ja
fidivl
aaa
ret
inc
xchg
sub
mov
stos
adc
xchg
in
mov
pushf
cwtl
daa
enter
mov
pusha
cmp
outsb
std
and
add
cmp
sahf
jmp
mov
je
push
mov
insl
clc
int3
cmpsl
xor
lods
or
addr16
push
xchg
mov
push
fs
jnp
loope
xchg
pop
mov
push
or
pop
sub
jmp
divb
mov
out
repnz
push
dec
cs
out
shrb
fistl
cmp
test
test
or
pop
jnp
cmp
lock
adc
lds
test
pop
sahf
jl
out
mov
fsubrl
cmp
outsb
out
jmp
loop
inc
pop
push
fisttpll
pop
sub
sti
sahf
add
mov
aam
mov
add
scas
ss
pop
xchg
pop
pop
ss
adc
jp
das
data16
xor
hlt
mov
nop
inc
adc
aas
outsl
stc
rorl
clc
jle
ret
cs
jbe
jmp
xchg
mov
cvttps2pi
add
fadds
outsb
rcll
js
imul
jle
inc
push
imul
mov
repnz
popa
lret
inc
mov
and
or
test
sub
and
ret
call
scas
fsubl
les
mov
jl
div
sbb
xchg
out
cmp
push
cwtl
pop
and
push
lock
lcall
and
pop
rcrl
inc
repnz
mov
inc
cmp
or
rorb
notb
fsubs
push
test
mov
mov
xor
cmpl
pop
loope
jmp
inc
xchg
dec
mov
adc
mov
cmpsl
clc
iret
out
jns
loop
into
pop
arpl
mov
mov
outsb
or
std
lods
outsl
enter
jg
mov
repz
pop
push
sub
jne
fisubl
sub
pop
cmp
out
mov
stos
xlat
lret
or
xlat
addr16
push
inc
mov
fsubp
pop
xor
jae
pop
stos
sbb
push
outsl
add
pop
jmp
xor
inc
push
xor
or
unpckhps
test
jle
out
and
ja
shlb
inc
pushf
call
mov
and
addb
adc
icebp
mov
insb
gs
out
mov
inc
bound
cmpsl
add
mov
lea
cmc
fisubrs
add
jnp
mov
xorl
gs
mov
mov
or
push
push
flds
sub
ret
and
popf
xchg
xor
xchg
dec
adc
js
mov
push
inc
jecxz
mov
cli
cltd
fwait
pop
imulb
pop
push
ljmp
mov
jns
out
rcll
lcall
cmp
xlat
daa
out
or
sbb
jo
cmp
call
xchg
adc
sub
scas
and
inc
lcall
lcall
xor
test
arpl
mov
sub
pop
inc
dec
jge
fistl
dec
fsubs
add
pushf
mov
fwait
cmp
into
hlt
popf
cmp
test
or
ds
dec
pop
lock
mov
cmp
push
mov
fadds
aas
xor
sbb
pop
in
sub
arpl
cmp
mov
or
rcl
mov
jmp
xor
cs
popa
mov
push
mov
mov
mov
xor
sub
push
mov
cli
shlb
mov
stc
dec
out
xchg
push
jns
xchg
call
negb
cmp
sub
scas
adc
xor
lock
js
push
cmp
lock
hlt
mov
add
pop
xchg
pop
aam
das
adc
lret
mov
lods
push
or
dec
sub
dec
push
push
es
fistl
adc
out
or
mov
mov
imul
pop
aas
mov
sbb
lods
inc
lret
sbb
cmpsl
in
loopne
sahf
popa
les
outsl
mov
add
out
lret
jo
aaa
repz
mov
jl
cmp
xor
cmp
sub
adc
aad
push
iret
call
mov
js
sbb
cmp
add
sub
push
call
lahf
aaa
pop
inc
mov
bound
jnp
push
dec
mov
clc
stos
in
add
orl
es
ret
clc
add
cmp
aad
out
xor
dec
mov
push
sbb
dec
ja
das
or
jl
loope
sti
cltd
dec
adc
xchg
push
xor
scas
and
shr
mov
add
ret
xor
mov
fwait
or
pop
dec
imul
cmp
mov
aam
xchg
xchg
sub
xor
lods
outsb
and
sub
icebp
xchg
mov
enter
lds
inc
mov
es
imul
cltd
syscall
mov
inc
adc
dec
push
cltd
xchg
mov
out
pop
dec
jge
xor
sarb
sbb
into
xchg
and
addr16
fldl
call
psubd
into
lods
and
js
cltd
setb
je
hlt
dec
gs
cmp
jne
sbb
mov
sbb
mov
pop
sbb
xchg
xchg
es
call
sti
add
loope
mov
push
aad
jne
and
sbb
std
scas
lret
xchg
mov
cmp
adc
jns
sbb
mov
mov
sar
mov
inc
sub
icebp
mov
lahf
push
cmp
xor
xchg
pop
stos
or
jns
cli
mov
mov
xchg
inc
jae
fcoms
sub
leave
dec
mov
into
fwait
sub
xchg
sbb
int
lret
out
and
mov
or
lret
aas
adc
loop
inc
or
or
cltd
cli
jp
mov
dec
inc
or
loop
jo
pop
pushf
adc
lds
je
outsl
mov
jbe
jle
daa
mov
fwait
scas
lods
movsl
cmpsb
mov
aas
dec
insb
cli
fistpll
jne
fcmovne
imul
test
mov
andl
adc
dec
or
lret
or
xor
inc
adc
add
inc
xchg
dec
scas
arpl
clc
in
test
dec
xchg
scas
dec
push
shrl
pop
inc
out
addr16
push
xor
enter
jle
ds
outsl
mov
sub
mov
inc
and
lret
dec
jns
sar
push
mov
lds
repnz
jl
scas
push
cmp
in
test
jge
sti
push
cld
stos
addb
enter
cld
subb
mov
sbb
fsubrs
dec
fnsave
push
mov
sahf
repnz
data16
and
test
pushf
fcoms
jle
clc
sbb
jns
pop
lods
jl
cmc
shll
push
mov
addb
lds
daa
ds
push
mov
scas
adc
dec
fisubs
push
lahf
in
setns
lock
pop
pushf
push
mov
sub
mov
in
mov
mov
movsb
fldt
inc
jb
push
adc
aad
cmpsb
mov
push
pop
cmp
pop
pop
add
pusha
jmp
add
mov
movsb
std
cmp
pop
adc
repnz
movsb
incb
jns
xchg
adc
inc
lds
cli
sbb
or
call
dec
cmp
nop
dec
aas
aas
mov
mov
mov
and
jb
aam
cmp
add
add
cmc
lock
jns
and
xchg
xchg
inc
cmp
dec
add
call
and
fistpll
adc
out
mov
movsl
aaa
mov
push
jg
ljmp
inc
cmpsb
mov
mov
jmp
adc
cmp
and
mov
xor
jns
les
cli
xchg
mov
and
sub
sti
xchg
push
push
push
xorb
jnp
out
xor
cmp
xchg
push
aaa
adc
mov
pop
dec
mov
and
inc
punpckhwd
or
insb
ss
inc
imul
add
cmp
fstpt
jb
stos
push
jg
das
push
mov
inc
pop
mov
pop
xor
std
pop
int
js
inc
int
push
imul
or
push
jg
mov
shlb
mov
je
mov
aaa
jge
mov
xor
clc
gs
rcr
std
and
xchg
xchg
popa
push
aaa
jns
repnz
and
clc
and
jno
roll
lods
shl
and
xor
lret
xchg
cmp
push
sub
push
dec
mov
loope
jo
jb
imul
or
lods
adc
and
mov
add
mov
sub
mov
adcl
jg
push
inc
pop
mov
mov
jmp
inc
sbb
pop
jne
pop
add
pop
cpuid
cmpb
mov
add
enter
popf
add
data16
imul
shr
mov
jl
xlat
nop
das
outsl
rcl
push
and
jp
ss
cs
rcrb
fwait
into
dec
lret
or
dec
es
repnz
push
pop
mov
pushf
lahf
into
sub
cs
bound
push
push
mov
dec
xchg
leave
sti
mov
sub
jg
pop
inc
jge
jge
pop
dec
ljmp
jle
xchg
dec
pop
and
ja
addr16
stc
mov
pushf
arpl
xchg
adc
pushf
push
jb
xchg
and
mov
jo
call
iret
and
push
push
add
aas
xchg
adc
add
dec
sarl
xchg
fcmovne
ret
xchg
xchg
adc
xchg
sbb
xorb
out
les
mov
pop
scas
mov
or
pop
incl
sbb
xchg
scas
and
cli
mov
or
dec
xchg
cmp
xor
xor
lds
dec
sbb
call
pusha
fcomi
jecxz
inc
aad
add
jg
pop
pop
in
add
fs
in
sbbb
mov
sub
outsb
sub
cmpsb
in
add
cmc
sub
mov
sbb
push
pop
and
cwtl
xchg
mov
xchg
sub
and
xchg
sar
dec
mov
into
fisubrl
es
push
cld
adc
test
je
aam
das
mov
jge
or
aaa
enter
push
arpl
cmp
pop
sbb
and
inc
rclb
addl
pop
rolb
jmp
and
gs
mov
hlt
and
xor
jnp
in
xchg
ret
aas
pushf
pop
and
push
pushf
iret
movsl
push
pusha
dec
ret
pop
push
in
loope
inc
adc
sub
lds
and
dec
jo
lds
out
insb
add
jmp
xor
xor
or
pop
jno
push
mov
fmull
jae
jne
push
pop
sbb
cmp
mov
stos
fsts
xor
jge
mov
cli
sbb
inc
pop
sbb
rcrl
add
roll
popf
mov
pop
shl
das
xchg
mov
push
push
fcmovne
in
cmpsb
lcall
out
mov
inc
cmc
bound
jae
lods
and
and
imul
jne
push
dec
add
or
ffreep
cltd
and
cltd
push
shrl
mov
lds
or
jmp
ret
sbbb
lahf
cld
out
sti
and
cmpsl
mov
mov
pop
ret
dec
cmp
mov
mov
xor
test
mov
push
addr16
jb
in
xchg
in
and
and
iret
xor
add
dec
fistpl
movsl
pop
jo
frstor
xchg
sub
imul
test
int
push
and
fs
inc
das
in
lcall
xchg
shlb
pusha
test
or
sbb
xor
adc
mov
dec
popa
lods
pop
addl
sarb
xor
pop
and
inc
stos
inc
mov
lods
mov
mulb
or
mov
jmp
xor
add
fst
fdivrl
scas
mov
sbb
in
lahf
ret
in
outsb
pop
sub
daa
das
or
jns
daa
cmp
imul
lret
inc
adc
loopne
addl
pushf
pop
aam
std
add
push
mov
xchg
push
sti
xlat
in
inc
mov
push
movsl
mov
and
pop
xchg
sbb
jns
sub
iret
or
cwtl
jns
ss
mov
mov
sbb
mov
mov
xor
inc
shrl
pop
add
in
lahf
rcrb
fwait
ja
fdivrp
arpl
divb
movsb
pusha
scas
push
jne
inc
push
adc
mov
jp
out
mov
push
and
divb
pop
pop
ljmp
rolb
push
xchg
xchg
or
inc
xor
loopne
movsb
or
test
mov
ret
testl
pop
ret
into
and
sbb
lods
mov
fidivs
fsts
addr16
add
mov
xor
mov
ret
in
sbb
mov
push
mov
dec
rcll
sarb
sub
sbb
sbb
mov
repz
xor
cmp
mov
outsl
jae
in
icebp
pop
fcos
lret
mov
inc
fwait
cmpsb
jb
lcall
xor
mov
sbb
xlat
or
test
or
cltd
push
mov
inc
les
outsl
scas
push
mov
add
xchg
jl
mov
mov
dec
imul
xchg
in
in
cmpsb
or
mov
js
mov
shl
xor
mov
lcall
adc
xor
sbb
push
repz
out
lret
mov
sub
cmpsl
clc
xchg
scas
lcall
jb
mov
aas
ljmp
stos
popa
push
inc
jns
psrlw
shr
inc
mov
das
cmp
pusha
xchg
jno
pusha
insl
aam
jle
movsl
shrl
loop
arpl
outsb
dec
jg
sahf
push
mov
into
mov
cwtl
mov
lods
call
sub
outsb
add
cmpb
sub
cs
fsubl
jmp
shr
xchg
xchg
daa
arpl
fidivl
cmpl
jbe
inc
cld
into
pop
adc
enter
sub
rorl
aad
mov
or
jnp
test
pop
jne
iret
push
or
add
adc
add
mov
or
iret
shlb
pop
add
pop
ljmp
inc
outsb
push
lods
inc
ja
push
test
jp
cmpb
ret
out
cs
fildll
lret
mov
adc
lret
int
jle
mov
sbb
mov
adc
aas
aas
xor
stc
and
ds
ss
push
dec
mov
sub
hlt
or
adc
in
outsl
pop
test
push
xchg
nop
ss
jge
sub
incl
das
lahf
daa
jae
pop
jecxz
cmp
push
adc
popf
cmpsl
dec
pop
or
sbb
aam
js
dec
mov
loope
jge
sub
loopne
jmp
test
shrl
sbb
push
mov
xor
cmp
das
imulb
aas
mov
dec
gs
mov
outsb
xor
leave
insl
mov
lea
dec
lods
dec
inc
mov
sti
andb
ret
paddsb
mov
cli
sub
mov
and
xchg
xor
mov
mov
push
cmp
cmpsl
rcrb
mov
add
push
cmp
mov
dec
sub
adc
cmpb
jge
mov
rcrb
je
cmp
sbb
sbb
pop
push
xchg
xchg
rol
cmp
nop
push
pop
push
mov
stos
aad
sahf
add
popa
aas
int3
loop
dec
insb
lahf
push
sbb
int
fwait
and
mov
dec
loop
adc
lret
and
repz
bound
mov
inc
inc
mov
jbe
sti
and
dec
leave
sbb
dec
test
int
sub
dec
bound
jge
jnp
stc
mov
mov
xor
and
bound
pop
into
int3
cmpsb
packsswb
and
push
outsb
push
test
lea
add
add
jp
or
xorb
jmp
out
jl
mov
mov
cmc
hlt
dec
fnstenv
push
xchg
cmp
jge
adc
mov
sahf
and
push
sbb
jbe
mov
dec
add
cs
mov
or
xor
cmpsb
cld
int
push
out
mov
out
rcll
fldl
xchg
je
cmp
negl
mov
subl
dec
jo
pop
jecxz
mov
adc
iret
push
sbb
and
mov
add
cli
sbb
mov
sub
dec
xchg
jb
push
xchg
sbb
xchg
jnp
incl
sub
push
adc
ret
jb
xor
ret
mov
ficomps
mov
push
inc
in
sbb
cmp
call
cltd
add
loopne
cmp
pop
push
aad
mov
popa
inc
jno
add
cmp
sbb
jg
enter
lods
and
data16
or
sbb
cli
ss
sbb
add
cmp
leave
dec
jae
adc
leave
add
outsl
mov
cmpsl
lahf
dec
loop
leave
add
add
mov
out
mov
push
mov
jns
orl
pop
push
push
mov
fiadds
push
fimull
cmp
mov
mov
sub
test
iret
lods
lock
imul
movsb
clc
dec
fsubrs
movsl
inc
push
sar
sbb
sarl
jl
inc
mov
mov
mov
push
je
push
sar
dec
xor
jo
ljmp
decb
pusha
xlat
pop
xchg
and
hlt
out
enter
bound
iret
jge
fsubl
sub
jge
cmp
out
outsl
adc
push
sub
cmp
sbb
mov
xchg
sbb
stos
addr16
inc
adc
pop
inc
cmp
xor
xlat
sahf
dec
xchg
push
jne
mov
xchg
fnstsw
sarb
ret
mov
inc
cli
ds
pop
shlb
mov
mov
pop
aas
fwait
loope
mov
sbb
sub
ret
lock
insb
test
add
sahf
test
popa
imul
sub
and
in
xor
sub
jle
pop
test
and
inc
clc
mov
mov
sub
xchg
push
jbe
mov
call
adc
loope
push
iret
movsb
jl
addl
or
push
and
daa
add
dec
mov
cmp
or
and
leave
std
lret
sbb
cmpsl
fstps
inc
dec
cmp
adc
cmp
imul
sbb
xor
or
inc
stos
pop
sub
pop
fidivs
mov
mov
or
or
lock
add
cli
cmpsb
mov
dec
dec
aaa
hlt
lods
cmp
rcrb
lods
fwait
je
dec
dec
mul
ret
imul
pusha
push
cmc
dec
or
jmp
pushf
xchg
jmp
or
icebp
push
sbb
xchg
stos
stc
and
inc
xchg
addr16
jmp
or
in
mov
out
scas
aas
fstl
or
aad
dec
inc
push
lea
cwtl
hlt
adc
rorb
or
xchg
ret
daa
xlat
icebp
pop
movsl
pop
pop
lret
out
push
add
or
xchg
lods
sbb
fstl
jnp
insl
xor
jnp
push
cmpsb
movsl
mov
cs
and
sbbb
mov
les
ss
dec
nop
int3
jbe
jno
dec
jo
jg
lea
jle
lods
mov
dec
mov
jle
jl
push
and
sub
add
pusha
pusha
xchg
jno
loop
aad
cmp
xchg
xchg
loopne
fisubl
in
pop
sub
push
inc
lret
ret
js
jo
mov
jo
loope
xchg
xor
mov
pushf
pusha
js
daa
gs
or
sbb
and
adc
iret
pop
fisttpll
dec
mov
lock
xchg
or
or
repnz
jle
xor
or
lcall
inc
mov
pop
shlb
hlt
repz
out
inc
test
je
mov
push
jmp
iret
mov
scas
ret
sahf
lahf
lock
dec
pop
ds
loop
inc
adc
outsb
leave
push
icebp
hlt
adc
inc
cmp
out
int3
mov
and
lock
mov
mov
das
negl
fwait
adc
test
mov
into
bound
xchg
adcb
or
ret
mov
sbb
int
sbbl
cmpsl
dec
jnp
outsb
sub
mov
adc
pop
and
imulb
addl
in
cmp
data16
addr16
xchg
hlt
push
and
insb
rcr
mov
imulb
sbb
xchg
jecxz
and
xor
dec
cmp
pop
test
xchg
imul
cs
std
mov
dec
imul
jp
mov
push
inc
inc
aaa
daa
scas
mov
adc
outsb
cmp
ds
lock
and
jno
dec
icebp
int
lods
cmp
or
out
mov
sbb
add
test
jnp
mov
and
jmp
and
cmpsb
sti
dec
test
rorb
pushf
rcll
xor
test
lret
lret
call
push
cmp
gs
jecxz
pop
aas
fs
adc
jmp
mov
jecxz
stc
fcomip
and
in
jb
add
imul
jns
test
loopne
scas
scas
adc
pop
enter
jbe
pop
bound
popf
in
in
jbe
jns
add
stc
arpl
inc
aaa
inc
arpl
hlt
and
cmovl
imul
xchg
mov
inc
stc
cmp
pop
push
dec
scas
fsts
int
or
movsl
pop
pop
rorl
push
xchg
scas
adc
std
mov
and
add
sahf
push
or
pushf
sub
xchg
cmp
xchg
imul
loop
sarl
push
repz
aad
pop
dec
loop
mov
int3
mov
adc
sti
je
in
push
mov
mov
clc
inc
es
mov
loop
pusha
out
data16
dec
ljmp
out
add
lret
lock
repnz
push
xchg
xchg
jnp
mov
push
jl
inc
lds
rol
js
ret
cltd
sub
lods
imul
hlt
dec
sub
stc
pushf
das
fiadds
jge
or
popf
sub
dec
pusha
jg
stos
orl
lret
shlb
push
into
scas
and
cmp
ret
in
sbb
or
out
jmp
imul
pop
addr16
pop
jns
dec
sarb
icebp
xor
test
push
or
xchg
or
push
std
inc
mov
loop
sub
fists
clc
cmp
push
imul
or
ret
hlt
std
mull
lahf
call
inc
je
cmp
cli
push
cld
dec
cmp
jl
mov
out
in
mov
test
pusha
rorl
cs
add
mov
push
ficoml
push
shr
push
mov
adc
or
out
inc
js
add
fildll
jecxz
mov
xchg
dec
int3
out
mov
int
adc
mov
xchg
bswap
int
out
sbb
stc
pop
xor
push
shrb
loopne
push
push
popl
ret
insb
lret
inc
in
or
sahf
addr16
lcall
sbb
dec
and
jmp
movsb
cmc
es
enter
and
jbe
and
pop
push
jle
repz
mov
xor
cwtl
xor
inc
sbb
mov
or
mov
mov
jp
cvttps2pi
push
sub
xor
inc
in
loope
inc
ret
jecxz
xchg
rorb
sub
cmpsb
adc
ja
mov
xchg
jg
aas
addr16
xchg
shrb
lret
mov
pop
dec
and
rorl
xchg
push
enter
jns
int
jge
pop
imul
sbb
jne
push
dec
fs
repz
or
adc
cmp
push
pushf
or
adc
cs
mov
or
daa
lds
add
mov
repnz
sbb
mov
xlat
or
xchg
cwtl
sti
sarb
jg
cwtl
rcrb
xchg
mov
fucomip
sbb
jne
lods
dec
fwait
lret
cmp
loope
lods
xchg
sub
push
adc
insl
push
xchg
enter
pop
push
out
and
fdivs
test
pop
dec
jae
daa
shrb
call
mov
psubw
push
push
mov
test
outsl
pop
imul
jae
adc
std
dec
or
call
pop
jl
emms
sti
xchg
sti
cwtl
leave
adc
xchg
pop
andb
js
push
cmpsb
ljmp
loopne
add
test
int3
lret
pop
icebp
jmp
dec
cmp
push
sbb
icebp
pop
xchg
fisubrs
sub
adc
sub
or
stc
xor
jae
cmp
loop
dec
out
leave
idivb
popf
jnp
lea
fwait
sahf
xlat
js
int
mov
das
jmp
or
dec
adc
pop
push
push
mov
aam
dec
fs
mov
mov
out
push
loopne
adc
pop
fadds
ret
mov
dec
xor
adc
lds
add
xchg
pop
push
vphadduwq
adc
hlt
sahf
sub
js
mov
or
mov
lock
cmp
ds
cmp
mov
fcoms
test
cld
bndstx
sbb
ljmp
lods
mov
in
cli
and
cmp
xor
lock
cli
shlb
adc
cs
lret
pop
rclb
jg
jbe
cmp
sahf
inc
or
or
mov
mov
into
test
or
mov
push
add
push
lret
and
fsubl
stos
sub
dec
xor
mov
pop
cmp
loope
or
dec
ljmp
lcall
cli
icebp
or
scas
insl
ljmp
in
rorl
jmp
jmp
push
mov
and
js
hlt
cltd
adc
cmpsb
mov
add
rorb
test
mov
sar
repnz
jo
push
push
rorl
outsb
mov
loope
ret
aad
push
inc
stos
in
xor
and
and
dec
cmp
cmc
jae
ret
lret
mov
sub
sub
mov
out
push
fisttpl
insb
or
stos
pop
mov
out
outsb
loopne
mov
das
dec
cltd
fimull
imul
lret
xchg
sahf
dec
cmp
mov
shll
nop
out
pop
xchg
pop
lea
xor
pop
mov
pop
scas
in
in
pop
dec
add
shlb
sub
and
testl
inc
xchg
mov
lea
push
xchg
push
mov
clc
in
xor
adc
sti
adc
add
add
inc
inc
pushf
cs
mov
fcmovnbe
bound
aas
xor
and
pop
mov
xchg
and
mov
push
push
pusha
ljmp
xchg
testb
cmc
push
je,pt
aas
cmp
adc
fstpt
lahf
mov
leave
pop
push
fcompl
mov
adc
sbb
loop
int3
repz
jb
sbb
inc
outsb
je
lods
rcr
into
xor
mov
sarb
scas
pop
in
cmp
sbb
pop
imul
inc
cltd
hlt
xor
ja
lds
shlb
mov
out
inc
xor
dec
mov
cmp
jnp
mov
stos
push
jg
std
adc
out
std
dec
call
mov
jne
sbbb
negl
gs
cmp
inc
dec
cmp
cmp
pop
call
jmp
sti
and
sbb
push
xchg
add
fcomp
scas
cmp
in
jge
pop
out
inc
mov
add
scas
sub
cmpl
int3
int
aas
pop
push
jne
mov
adc
nop
mov
mov
lahf
mov
inc
pop
mov
rcl
out
mov
jne
xor
or
lcall
or
pop
jbe
cmp
movsl
xor
ret
cmc
lea
dec
fcomps
xchg
scas
jnp
test
add
in
mov
shrl
inc
xor
pop
or
pop
sbb
push
inc
daa
add
or
sub
jno
push
dec
jge
into
fwait
push
aaa
push
fwait
movsb
inc
ss
adc
add
xchg
cmp
jge
aaa
cmp
sub
jae
lret
jmp
outsl
addr16
xchg
jno
push
into
imul
lock
jo
mov
or
cmp
pop
cmp
aad
mov
cmp
call
push
aad
jp
pop
xorl
rcrl
jb
cmp
push
cmp
push
mov
jge
jbe
jmp
lods
mov
fs
xor
inc
mov
sbb
loopne
popf
cs
fidivs
pop
lds
arpl
aas
mov
stos
ret
gs
mov
sarb
rorb
cmp
xchg
gs
in
add
push
mov
test
cmovae
clc
sbb
jo
sub
cmp
lea
jb
or
jecxz
xchg
stos
sub
mov
ds
mov
mov
mov
pushf
loopne
aaa
xor
jb
pushf
jl
rorb
pop
loope
repnz
inc
aas
push
sub
pusha
rsm
ljmp
fwait
loop
pop
std
sub
xchg
add
xchg
fmuls
cmp
xchg
cmpsl
lcall
dec
fcomps
inc
popa
push
daa
dec
repz
out
stos
adc
dec
fldenv
fbstp
dec
xor
fsts
inc
lock
movsl
daa
in
pushf
sub
dec
outsl
pusha
add
stos
xchg
clc
fwait
in
push
enter
int3
jns
jno
repz
push
cli
and
xchg
sahf
mov
pop
decb
add
out
or
adc
sbb
and
xor
lret
sub
or
cmp
negl
cmp
test
popa
ror
xchg
mov
int3
add
xlat
dec
insl
or
fcmovnbe
loope
sti
mov
aad
popa
movsb
pushf
clc
add
repz
adc
push
shll
gs
int
xchg
in
push
push
push
and
add
lret
outsb
icebp
dec
pop
lds
cmp
imulb
cmp
cmpsb
mov
in
pop
movsb
cmp
dec
adc
fidivrs
arpl
mov
bound
pop
xlat
jecxz
lods
sub
sub
pop
cmp
fimull
jge
push
jle
jmp
xchg
adc
mov
add
push
mov
mov
test
adc
lds
fistpll
das
mov
rolb
cltd
push
test
and
scas
xor
arpl
in
les
mov
out
xchg
cmp
pop
test
dec
sbb
cmp
cmp
jne
mov
cmpsb
push
outsb
pop
jmp
loope
dec
mov
inc
movsl
js
fmuls
rcrb
inc
adc
les
sub
and
xor
dec
push
repnz
ljmp
cmp
push
daa
mov
cmp
mov
test
cmp
mov
jg
xchg
in
dec
mov
push
adcb
mov
xchg
cli
mov
fdivr
mov
shll
xchg
test
and
jle
popf
jbe
sti
jns,pt
xchg
inc
sbb
dec
sbb
int
push
es
cltd
jp
nop
and
mov
cmp
push
jnp
loopne
ss
ss
mov
jnp
cmc
cmpsl
push
inc
repnz
in
add
outsb
hlt
lahf
mov
in
mov
sub
push
sub
xchg
stos
pop
enter
outsb
mov
inc
std
jno
and
inc
xchg
jge
mov
and
ret
and
xor
sub
insb
test
cld
aaa
add
lods
orl
jl
dec
ja
je
sub
dec
inc
pop
inc
push
jge
jle
leave
dec
out
in
or
inc
lret
std
push
js
jmp
stos
dec
gs
push
cmp
call
rorb
dec
lods
fnstsw
gs
or
jbe
push
push
add
inc
push
in
adc
add
xchg
out
addb
aad
inc
add
or
cmp
pop
push
or
hlt
pop
pop
rorl
xchg
cltd
lret
test
mov
or
or
ljmp
push
test
outsb
std
or
lcall
loopne
stc
pushf
add
adc
push
inc
pushf
dec
notb
imul
xchg
add
fwait
enter
sbb
stos
mov
and
push
fs
pop
ret
push
paddusb
sbb
pop
sub
xchg
sbb
es
repnz
dec
pop
hlt
add
icebp
pop
cmp
xor
inc
lea
sbb
xor
cmp
test
adc
xor
lods
sbb
outsb
sbb
mov
xchg
xchg
decl
jno
lods
lea
cmp
ja
aas
push
pop
imul
xor
enter
test
mov
arpl
stos
and
loop
pop
cwtl
mov
lods
popf
xor
push
inc
jp
dec
cltd
pop
add
insb
bound
jno
mov
movb
insl
out
gs
jns
sahf
pusha
popf
cs
jno
add
cltd
inc
dec
mov
sbb
sub
stc
std
jg
clc
pop
in
mov
cld
shlb
icebp
into
fnstcw
add
ja
pop
pop
inc
pop
enter
in
dec
lock
fs
jnp
lods
or
or
mov
mov
aaa
cmp
addl
cli
je
in
mov
cmp
xor
sbb
mov
test
cmpsl
addr16
test
jo
push
cmp
enter
daa
sub
roll
adc
sarb
add
jb
cmp
mov
add
sbb
lods
cmp
mov
push
loopne
jne
sbb
cmp
cmpb
iret
adc
or
out
pop
ret
iret
add
xor
mov
call
insl
xchg
and
or
nop
cmp
repnz
in
pop
arpl
add
insl
and
lock
add
mov
js
push
jne
push
push
data16
xor
lea
stc
cmp
leave
xor
adc
cmp
and
aam
in
sbb
xor
adc
xor
mov
cmpb
dec
cli
adcl
andl
xchg
scas
mov
and
imul
cltd
loope
add
popa
stc
shlb
out
mov
and
stc
adc
mov
iret
push
cmp
dec
mov
shlb
jnp
repnz
add
ret
jmp
jge
dec
xchg
popf
dec
push
mov
or
cmp
or
faddl
xor
iret
stc
les
subb
rcll
hlt
mov
popf
xchg
out
xchg
imul
pop
push
stc
insb
int3
stos
subl
aaa
mov
cmpsb
into
inc
mov
ja
aas
stos
int3
push
mov
stos
cli
test
stos
fs
mov
dec
mov
mov
lret
les
jmp
cmp
mov
push
aas
movsb
push
out
sahf
cmp
stos
mov
lods
movsl
xchg
xchg
insl
pusha
outsb
dec
push
lods
lds
in
and
mov
pop
push
lahf
inc
xchg
adc
pop
lods
sbb
lods
mov
cmp
sub
adcb
and
ret
mov
cs
cli
dec
sub
jae
mov
pop
cmp
and
outsl
mov
fidivl
pop
insb
rcrb
and
cmp
and
aas
daa
inc
lret
mov
and
dec
test
sbb
fwait
jmp
fisttps
push
test
jge
in
std
mov
repz
xor
and
mov
ds
rcl
add
add
sbb
and
sti
xchg
and
cltd
arpl
mov
cmc
scas
pop
add
xlat
out
jne
lret
stos
iret
rorb
jbe
nop
bound
dec
popa
insl
mov
aas
mov
into
stc
out
xchg
insl
add
inc
dec
icebp
loopne
pop
cwtl
ret
lret
pop
jnp
push
sbb
cmpl
push
aas
loopne
in
out
fmuls
mov
les
outsb
xor
sub
mov
cmp
jecxz
cltd
test
push
mov
aaa
rclb
xchg
and
pop
loopne
je
leave
sbb
aaa
in
push
pop
shl
jns
andl
sbb
adc
cmp
push
push
or
xor
pop
cwtl
scas
sbb
hlt
arpl
push
push
cmp
xchg
in
out
jae
imul
jp
cwtl
jl
adc
add
pop
popf
pop
push
push
pop
pusha
cld
jns
rclb
ss
push
sub
int
sti
in
jb
pop
jle
in
rclb
repz
insb
push
lods
cmovns
lds
inc
pushf
and
adc
enter
jle
mov
jge
loope
mov
loop
mov
mov
pop
scas
mov
les
sub
cltd
leave
sahf
aas
iret
adc
pop
jp
in
jne
or
push
lds
mov
bound
pop
jo
inc
inc
cli
fisubl
test
and
movsb
cmpsl
mov
ja
aam
es
addr16
enter
or
movsb
mov
jg
pop
int
jl
out
push
mov
cmp
cmp
gs
push
mov
mov
in
decl
jae
mov
mov
or
nop
xchg
xchg
mov
addr16
dec
lcall
pop
pusha
sbb
xor
xor
aaa
js
push
mov
insb
mov
mov
test
cmc
imul
stc
xchg
std
out
fwait
mov
jae
addr16
add
bound
adc
sahf
cmp
pop
cmpsl
inc
push
jecxz
pushl
cmpsb
enter
leave
insl
sub
mov
add
and
dec
and
mov
mov
mov
inc
sti
insb
add
lock
fcoml
out
je
inc
or
inc
xor
call
ja
inc
js
push
stc
mov
pop
daa
mov
jne
cmp
pop
popa
mov
movsl
jecxz
dec
xchg
icebp
mov
xorl
xor
loop
pop
xchg
rep
sbb
andl
lds
and
fdiv
enter
push
sbb
fld
adc
adc
adc
cmpsl
sub
fbld
leave
sarl
fs
call
push
inc
fisubl
outsb
out
outsb
cmp
push
aam
sub
cmp
fcmove
jbe
out
and
push
push
pop
pop
sbb
add
aaa
mov
cld
js
xor
jo
sub
lret
int3
pop
rcl
push
add
and
sbb
ficomps
loop
push
or
iret
mov
or
push
xchg
test
mov
decb
push
mov
pop
mov
jmp
xchg
loop
bsf
outsl
mov
lret
cli
pop
lock
dec
fcmovu
xchg
dec
mov
sahf
fldt
pop
std
jae
clc
mov
mov
aad
loopne
repz
pop
push
lcall
push
sub
js
leavew
arpl
xchg
insl
cmpsl
sahf
mov
rcr
movsl
int
push
jae
add
lock
cmp
xlat
cltd
in
jg
cmpsb
and
add
ds
adc
mov
in
xchg
xor
sbb
imulb
icebp
insb
jo
test
scas
stc
cmp
push
aam
sahf
cwtl
lock
leave
dec
cmp
call
push
cwtl
in
rcll
sbb
fnsave
fsubl
jmp
hlt
inc
jge
cwtl
lret
mov
adc
stos
inc
fwait
push
outsl
cltd
xchg
cmp
ret
and
adc
addb
pop
insl
jecxz
ds
in
sbb
or
jnp
dec
push
movsb
stc
popf
inc
loopne
jl
cwtl
fldenv
movsb
sbb
icebp
sbb
adc
sub
je
in
pop
and
xchg
pop
sbb
mov
data16
pop
jne
sub
cmp
and
aaa
mov
pop
or
add
mov
lret
das
dec
mov
and
mov
dec
fidivs
jnp
cltd
ja
push
cmp
in
xor
lahf
push
sar
cmc
js
push
aam
test
aam
push
mov
fisubs
cmp
in
jae
jge
xor
mov
lret
cmp
mov
imul
pop
or
ret
jno
into
dec
mov
pushf
test
pop
aas
cmpsb
or
ret
dec
jg
jp
xchg
cs
or
mov
shll
and
xor
mov
ret
xchg
rcrl
adc
xchg
xchg
sahf
int3
fstpl
je
rep
addr16
js
jge
or
inc
mov
and
in
div
stos
lock
jle
bound
xor
xchg
aam
push
mov
cmp
pop
adc
das
je,pn
ja
mov
shl
mov
sbb
pop
loopne
inc
cmpsl
xor
xor
or
sbb
popa
mov
ja
adc
ret
cmpsb
xor
fists
mov
loop
inc
or
sbb
jnp
test
push
repz
leave
loope
inc
and
push
cmpsl
loop
cmp
icebp
mov
data16
pushf
xlat
push
pop
decl
cwtl
aas
repz
xchg
insb
lods
pop
push
or
cs
pop
jge
cmovl
repz
xchg
popf
popa
enter
and
or
push
and
scas
push
push
inc
ret
jg
push
in
dec
call
push
cmp
insb
inc
es
adc
je
cltd
add
xchg
sub
lea
scas
sub
stos
lcall
orb
out
dec
js
jb
xchg
lret
xor
test
jecxz
dec
cmp
add
cmp
add
andb
mov
adc
rcrb
adc
mov
shrl
push
pop
or
push
cmp
dec
cmp
mov
inc
in
shrl
mov
hlt
enter
pop
pop
jle
out
pop
xchg
cmpsb
pop
xchg
fsubp
rorb
mov
or
mov
into
sti
enter
gs
mov
fistpl
sub
leave
lcall
add
dec
xor
test
mov
in
fiaddl
pop
mov
push
mov
cmp
sbb
inc
mov
aaa
and
mov
das
inc
cmc
jno
cmc
ljmp
mov
addr16
jge
leave
sbb
add
or
lock
into
or
or
or
pop
push
jo
lods
jno,pn
jle
aad
lret
jae
push
arpl
xchg
jae
f2xm1
pushf
cmpsl
inc
sahf
outsb
jge
and
icebp
lcall
adc
jne
imul
sub
scas
shl
gs
jl
loope
in
push
mov
aaa
aad
in
movsb
and
sub
xor
fsub
fcomip
lods
pusha
xchg
int
aad
out
jecxz
mov
lret
mov
dec
dec
ljmp
out
loope
in
push
sbb
js
stos
xlat
ret
cmpsb
pop
stos
test
call
testb
cmpsl
fucom
movsb
push
sbb
je,pt
cs
outsl
inc
mov
push
sub
pop
xchg
adc
sbb
mov
icebp
mov
jmp
adc
hlt
push
pop
lret
xor
cmp
xchg
sarb
jl
cltd
xor
pop
sti
loop
mov
fsubr
fcoms
into
popa
adc
mov
sub
daa
jnp
adc
dec
es
imul
scas
lahf
mov
inc
sbb
mov
in
jle
lcall
adc
lea
inc
xor
jmp
push
sahf
or
mov
test
in
jecxz
adc
mov
popa
test
push
pop
decb
xor
out
ret
rcrb
pushl
into
stc
lods
or
aad
pop
xchg
push
add
lea
xchg
fcoml
sahf
test
imul
ljmp
and
adc
inc
shl
data16
xchg
into
push
pop
es
aam
pop
leave
lock
sbb
cwtl
cltd
and
dec
push
cmpsb
adc
sbbb
jecxz
pop
fcoml
xchg
aad
dec
pop
fs
jmp
in
fbstp
ja
lods
pop
shl
jg
in
int
xchg
jo
nop
in
or
jmp
ret
jg
hlt
clc
adc
or
sub
push
lret
sbb
adc
inc
stos
movsl
mov
inc
shl
pusha
mov
jne
adc
lcall
andb
ret
aad
lds
lret
sahf
xor
and
in
mov
xchg
es
shrl
mov
fdivrs
int3
test
sbb
lcall
cmp
fistpl
lea
jne
adc
pop
inc
xor
add
movsl
pop
pop
mov
pop
push
out
mov
jmp
adc
shrl
cli
push
movsl
adcl
lret
sub
mov
jle
inc
mov
and
jg
aas
jno
jbe
stc
std
push
in
or
repnz
xlat
jns
pop
cmp
ljmp
mov
and
jg
or
mov
jae
imull
subl
xchg
sahf
jp
jp
cmp
cli
and
lret
pop
shll
push
ds
test
lds
jno
rcl
pop
inc
mov
cwtl
inc
mov
xor
sti
pop
jae
pop
rcll
data16
in
mov
pop
ja
mov
dec
jecxz
jne
jnp
jae
clc
jmp
and
sbb
hlt
out
fcom
sub
jne
ds
mov
lods
adc
dec
cli
fsubl
scas
pop
cmpsb
stos
jecxz
shr
inc
adc
xor
sbb
in
fbstp
repnz
in
mov
or
jo
stos
xchg
aas
in
xchg
mov
or
mov
jb
repnz
add
es
hlt
adc
sub
daa
inc
jne
inc
mov
push
repz
and
popf
lods
out
or
es
xchg
fiaddl
mov
lock
stos
xlat
cmp
sarb
cmpsl
pop
adc
sub
or
cmp
jbe
xlat
sbb
fsubl
xor
xor
orb
mov
or
inc
dec
aad
iret
repz
mov
ret
test
call
jg
stos
clc
add
movsb
push
push
cmp
xchg
aaa
sbb
xchg
out
push
test
jbe
imul
jmp
xchg
sbb
loop
shlb
sbbb
fnstsw
js
xchg
xchg
jb
or
mov
movl
dec
daa
jecxz
data16
mov
xlat
add
call
or
mov
sbb
inc
xchg
adc
or
inc
rcrb
repz
mov
sub
int3
push
pop
cltd
xlat
mov
int
or
mov
cmc
push
cmp
aaa
dec
jbe
xor
and
stos
mov
push
sbb
mov
push
nopl
mov
jmp
out
xchg
push
leave
out
dec
jo
mov
daa
filds
and
dec
push
in
ret
sbb
movb
pushf
popa
mov
js
stos
sub
push
aad
adc
mov
cmpsl
xor
call
lret
xchg
xor
imul
xor
jno
jle
loope
pop
sub
jecxz
mov
and
mov
mov
in
dec
pop
xchg
movsb
xchg
mov
out
fxch
and
paddw
cmc
push
mov
call
fwait
jb
mov
roll
popf
fwait
aam
pop
sbb
ret
in
xor
push
sub
aaa
mov
sub
mov
out
arpl
repz
shlb
mov
jle
scas
pop
fisttpll
or
adc
xor
cmp
sbb
lret
movsl
dec
imul
loope
shll
jg
sub
push
call
jne
push
push
icebp
loopne
pop
xlat
mov
imul
ret
je
and
mov
clc
shlb
push
lock
adc
mov
sub
out
call
mov
lret
les
sbb
imul
add
xchg
or
push
pushf
fs
ffree
xchg
stos
push
into
in
rolb
pop
mov
loop
jle
mov
dec
in
adc
lahf
notl
xorb
inc
shll
inc
dec
inc
loope
dec
cwtl
and
adc
cmp
and
jecxz
iret
inc
scas
pop
movsl
xor
xchg
sbb
call
cs
sbb
xchg
xchg
mov
mov
iret
mov
lcall
fwait
push
xchg
cmp
xor
repnz
push
mov
int
cli
cmp
jb
out
fwait
setnp
scas
popa
inc
xchg
test
sub
leave
fidivrl
int
pop
dec
push
inc
cmp
es
out
inc
add
dec
aas
fcompl
arpl
inc
xor
push
out
ds
sbb
js
push
and
sub
lret
pop
pop
mov
cmp
adc
loop
fmuls
and
scas
push
lods
fs
iret
adc
cld
push
dec
mov
call
jne
jae
or
call
ret
mov
jbe
push
out
push
clc
outsl
test
dec
push
pop
pop
cmp
and
mov
cmp
sbb
cmp
jmp
lret
pusha
xchg
jl
inc
mov
jb
xor
or
xlat
ret
pop
sub
pop
insl
xchg
pusha
sbb
pushf
aam
leave
sbb
je
and
loopne
adc
inc
push
sbb
je
jg
cmp
add
sbb
ljmp
add
or
pusha
aas
jp
pop
jo
sbb
roll
into
xorb
or
fcomip
sbb
push
push
mov
testb
pop
sbb
lds
cld
andb
xor
sbb
insb
mov
mov
or
xor
imul
adc
and
mov
fcompl
sbb
fwait
imul
pop
and
and
xchg
pop
ret
push
jp
in
sub
dec
insb
mov
push
add
js
aad
cmp
lock
mov
push
cmp
cmpsb
out
cmp
sub
jmp
jge
mov
leave
cmp
outsl
sbb
cltd
mov
rcr
mov
stos
dec
cmp
mov
sub
sbb
jecxz
loopne
jno
inc
pop
push
popf
orb
mov
loopne
scas
das
push
jecxz
inc
rol
repz
cmp
rolb
enter
arpl
pop
out
aam
shll
call
jle
sbb
out
fcompl
dec
mov
pusha
sub
or
gs
xor
pop
icebp
sub
dec
dec
fistpll
mov
pop
nop
fwait
pop
or
pop
fmul
sub
inc
test
pop
sub
js
call
testl
fldl
dec
pop
or
sahf
push
xchg
cli
test
sbb
fdivs
xor
jp
rorl
fists
frstor
adc
lods
fwait
push
jns
mov
pop
xchg
add
mov
sub
jmp
mov
ret
inc
leave
jecxz
adc
lock
ljmp
adc
push
or
jno
pop
inc
in
jae
adc
loop
pop
mov
mov
pop
pop
inc
push
fisubs
rcr
xchg
lods
scas
adcb
int3
adc
repz
jns
xor
sub
mov
pop
jge
jmp
xor
insb
js
or
in
sub
inc
or
cmc
aad
ss
clc
push
xchg
cmp
lock
xor
adc
ret
sub
push
xor
sub
push
xor
push
mov
inc
adc
dec
pushf
add
mov
test
inc
sub
fadds
shrl
sub
xchg
cwtl
jnp
push
test
pop
cmc
pop
xchg
xchg
cltd
jno
leave
dec
sub
pop
stos
xor
int3
inc
cmp
add
std
int
gs
inc
push
iret
enter
pop
or
test
sahf
mov
and
and
inc
aaa
and
dec
cmp
mov
popf
and
in
cmp
inc
push
imul
in
inc
sub
pop
cli
dec
and
pop
mov
sub
cmp
cmp
sub
add
pop
pop
inc
push
pusha
out
insb
outsl
xchg
mov
stos
fisttpl
push
pop
iret
push
jo
pusha
mov
push
std
mov
insl
in
scas
and
xchg
inc
fistpll
push
pop
jo
ja
mov
lods
clc
sub
adc
inc
aaa
lock
mov
lods
lea
pop
xchg
mov
xchg
rcrl
bound
and
push
or
cmp
pop
mov
jnp
pop
add
mov
pop
imul
shll
ret
push
mov
cmp
add
in
loopne
lods
cmp
lods
xor
insb
mov
loope
sub
add
push
outsb
pusha
adc
sbb
rcrl
movsb
mov
and
mov
in
xor
cmp
movsb
adc
cmp
and
xor
rorl
jl
imul
jne
xchg
mov
mov
xchg
pop
aam
es
fs
outsb
aad
scas
testb
push
xor
testb
stc
adc
adc
fld
dec
xchg
int3
cwtl
mov
loop
and
and
inc
sbbb
arpl
xchg
sbb
mov
xchg
dec
adc
mov
push
in
in
addr16
movsb
add
jmp
mov
ret
sti
cmp
mov
enter
je
push
push
andb
lret
inc
jnp
push
mov
lds
dec
andb
jecxz
bound
and
fdivp
sti
pop
adc
ljmp
inc
mov
inc
outsl
add
fprem1
jp
mull
and
lcall
xor
daa
xchg
inc
add
mov
mov
movsb
xchg
jnp
sub
pop
inc
sub
mov
sbb
cmc
push
mov
sub
mov
inc
mov
repz
repz
sti
cld
out
fisubrl
or
cmpsl
sub
xor
lea
mov
inc
fimuls
fs
insl
in
cmp
ret
xor
clc
cmp
push
movsb
xchg
mov
and
or
and
add
jb
pop
push
add
sahf
cltd
pop
icebp
sbb
cmpb
loopne
cmp
pop
sub
orl
adc
xor
test
repz
jno
xor
test
in
or
jne
loop
mov
cs
jmp
mov
lret
xor
lods
loope
xor
sahf
dec
icebp
jno
in
lds
push
add
fistps
stos
inc
adc
inc
push
les
adc
xchg
std
mov
cmp
inc
fsubs
adc
push
stos
decl
sbb
rcll
sub
mov
inc
xchg
scas
out
and
shrl
and
mul
xchg
push
mov
sar
in
jle
gs
mov
jns
adc
loop
or
test
inc
mov
and
mov
push
aam
ret
fdivrs
pop
jno
pop
in
mov
dec
push
dec
or
and
push
addl
sbb
sbb
pop
mov
add
insb
std
pop
in
pop
pop
jbe
notb
in
jecxz
inc
in
fisttpl
jg
add
out
mov
pushl
mov
imul
divl
fldt
mov
mov
dec
iret
cltd
push
xor
sbb
repnz
iret
dec
jno
inc
mov
lret
xlat
and
jne
negl
mov
out
sub
pop
inc
adc
jmp
arpl
and
lds
sub
or
or
pop
jo
sub
mov
mov
xor
add
leave
shlb
scas
es
or
and
and
pop
loope
and
pop
inc
cmp
sbb
lods
mov
bound
push
or
cmp
push
call
gs
mov
inc
mov
aad
jae
fisubs
jl
mov
andl
mov
fidivl
pop
fucom
lret
sahf
gs
sub
mov
popa
aas
xchg
pop
test
push
xchg
jecxz
mov
add
xchg
sbb
xchg
sbb
xor
xlat
or
mov
enter
pop
inc
rcr
in
push
sub
outsb
adc
lcall
mov
xchg
mov
scas
push
push
jle
sub
inc
cwtl
mov
or
sub
jb
push
movsb
push
sub
or
mov
inc
push
lret
in
jnp
lret
fwait
out
push
or
scas
jp
adc
mov
into
outsl
les
fimull
std
cmp
shll
mov
or
sbb
imul
xor
cmp
cli
aaa
dec
xchg
sbb
push
push
test
pop
insb
fcoml
cmp
add
xor
dec
xchg
push
jecxz
dec
pop
add
iret
mov
xchg
pop
fsts
xchg
repnz
cmp
out
icebp
mov
cmp
xor
jecxz
pop
xor
cltd
stos
add
inc
push
loope
fbstp
loopne
dec
sbb
cld
sar
jp
popf
or
lcall
pop
xchg
pop
mov
jns
adcl
mov
lds
dec
cmpsl
push
push
sbb
andl
std
pushf
push
adcb
jmp
sbb
xchg
bound
sub
pop
daa
dec
push
cmp
pop
xor
rcrb
shlb
lea
lahf
or
outsl
xor
imul
insb
push
movsb
test
repz
jmp
std
rcl
cmp
push
pop
jns
sub
xor
and
sbb
into
ret
imul
pop
shll
repz
int3
outsl
jbe
dec
stc
inc
fidivs
pusha
mov
int
fmuls
int3
inc
dec
lcall
cmpsl
or
pop
ljmp
and
ds
ss
inc
scas
adc
cmp
mov
jbe
jecxz
add
lods
adc
mov
mov
call
jnp
push
test
mov
mov
test
aaa
fcmovne
xchg
sbb
mov
sbb
in
inc
lock
iret
test
mov
into
jmp
and
mov
mov
xor
clc
xchg
fisttpll
pop
cltd
call
negb
aas
popf
pop
jb
xchg
hlt
es
or
pop
jno
mov
in
stos
sbb
inc
nop
aas
fcmovne
mov
fcoms
or
cwtl
push
pop
mov
and
pop
push
test
xor
xor
das
xor
adc
call
test
mov
adcl
imul
sbb
mov
adc
cmp
adc
pusha
fiaddl
pop
mov
out
std
mov
into
cmp
shufps
xchg
in
mov
inc
push
popf
das
cmp
ss
pop
push
sahf
repnz
xchg
addr16
push
push
ret
outsl
or
mov
dec
mov
xchg
test
xor
iret
pop
inc
movsl
xchg
fwait
arpl
add
adc
ficomps
mov
cld
or
adc
mov
stc
and
ret
cmpsb
scas
pop
adc
push
daa
cmp
movsl
adc
shlb
icebp
movsl
repnz
sbb
int
ds
inc
xor
cmc
sarl
or
ja
push
or
push
mov
ret
jp
gs
sub
jbe
mov
fsubl
ficompl
ljmp
mov
and
loope
dec
jns
pop
clc
pushf
test
jmp
popf
lock
aaa
cmp
in
add
insl
dec
jge
inc
fcoml
mov
imull
stc
xchg
sahf
adc
lcall
add
jo
call
pop
mov
push
out
dec
sub
jbe
jo
dec
cmp
aaa
sub
cmp
jno
mov
rorl
pop
add
fnstcw
lds
gs
xchg
xor
testl
sub
clc
jne
add
xchg
dec
aaa
jo
xchg
cli
xor
mov
mov
mov
repnz
mov
repnz
adcl
mov
xchg
pop
cmp
shlb
inc
fwait
and
repz
out
jnp
lods
inc
add
or
int
test
imul
dec
xchg
or
cld
decb
pop
sub
popa
cmp
sbb
lahf
shll
int
cmp
and
jnp
fimull
shl
icebp
stos
repnz
dec
sbb
inc
cmp
outsl
push
pop
push
sbb
mov
scas
dec
or
test
outsb
sbb
mov
add
cmpsb
mov
std
sub
or
jo
dec
adc
jl
cmp
jne
and
and
and
movsb
leave
dec
stc
outsb
mov
push
mov
outsb
fwait
pop
lahf
cmp
lcall
push
push
dec
enter
adc
or
pop
xchg
lret
add
cmp
mov
cmpsb
bound
popf
cs
pop
mov
outsb
mov
insl
jne
push
std
test
aad
mov
mov
and
js
lds
pushf
lcall
mov
cld
in
mov
rclb
jno
cs
gs
loopne
data16
sahf
cmpsb
xor
icebp
cmpsl
jb
adc
js
insl
pop
sti
sbb
mov
xorl
insl
mov
std
push
data16
lea
in
int
mov
add
psrld
push
push
repnz
jmp
adc
or
sbb
jno
inc
sbb
lds
sbb
shrl
outsb
shl
inc
dec
jo
push
push
xchg
and
ja
loop
xchg
sti
add
or
jnp
ficoml
xchg
addr16
inc
sbb
cmp
lods
add
clc
or
gs
stc
in
pop
leave
daa
cmp
outsb
and
mov
sti
jecxz
scas
jge
xchg
aaa
xchg
stos
or
sbb
sub
xchg
inc
push
jae
loop
rclb
pop
ss
push
fcomps
ljmp
cmpsb
adc
stos
and
enter
ljmp
and
xchg
adcl
mov
sub
pop
fs
pop
es
mov
cli
sbb
fsubrl
add
sub
cld
push
cltd
and
sub
or
add
dec
jne
test
mov
sti
cmpsb
aam
fcmove
shll
jle
cmp
fs
ljmp
mov
pop
stc
push
mov
and
pop
pop
nop
int
loop
lods
mov
out
pop
inc
stc
ljmp
insl
xor
push
jmp
sahf
adc
stos
insl
sbb
dec
int
popa
pushf
aas
repz
imul
mov
xchg
fs
sarb
and
inc
outsl
scas
jno
shrb
pusha
fildl
idivb
or
inc
xchg
jg
mov
xchg
dec
jno
jne
push
stos
clc
aas
arpl
cmpsl
je
mov
adc
xlat
jmp
scas
xor
sub
test
jb
dec
xchg
inc
sub
aam
add
mov
ret
pop
jge
or
jg
fistpl
insl
or
mov
pop
test
mov
add
outsl
sbb
ja
or
imul
mov
movl
ficoms
mov
dec
adc
dec
call
mov
mov
lock
lret
arpl
inc
sarl
outsl
push
push
in
and
fmull
loope
push
adc
jb
dec
cmp
mov
cld
xchg
subl
add
cs
testl
and
cltd
mov
cmp
mov
in
inc
sti
jp
and
cwtl
jecxz
loop
scas
jg
lods
push
adc
jg
jnp
inc
repnz
cmp
sub
jg
scas
outsb
outsb
xor
outsb
xchg
insb
movsl
or
pop
lret
ljmp
outsl
out
lods
mov
popf
inc
cwtl
adc
dec
and
xchg
or
iret
and
xchg
xchg
dec
inc
cmp
out
jo
sub
sbb
mov
cmp
inc
add
xor
cs
mov
mov
dec
insl
pop
outsb
sub
enter
repnz
rcll
stos
or
jecxz
dec
ja
scas
push
and
dec
cmpsb
sahf
and
sub
jmp
cli
jl
scas
xchg
or
jmp
icebp
mov
cmpsl
aaa
mov
pop
jns
push
aaa
cld
call
dec
push
adc
sti
call
adc
pop
mov
aaa
push
sub
mov
insb
imull
ret
and
addr16
add
mov
sahf
adc
or
nop
sbb
jle
mov
in
jecxz
inc
jb
lock
mov
xor
arpl
test
gs
in
insb
push
in
add
mov
test
icebp
sti
ret
dec
pop
movsl
xchg
xchg
mov
or
jge
or
pop
push
push
les
inc
mov
in
fs
or
sub
and
cmpsb
push
xor
xchg
out
dec
mov
dec
jb
inc
mov
dec
lock
gs
inc
xchg
cltd
sarb
rcrb
xor
jle
add
add
fstl
insl
roll
pop
jle
pop
or
clc
jmp
mov
loopne
addr16
pushf
pop
and
jnp
nop
sub
addr16
mov
fwait
xor
mov
mov
xchg
scas
xlat
in
xor
sti
inc
pop
test
stos
ret
pop
fldcw
std
pop
icebp
pop
lahf
or
pop
xlat
push
pop
adc
pop
lods
ret
out
pushf
stos
call
test
sarl
sti
jne
fwait
jle
push
cmp
cmpsl
cltd
jns
outsb
sahf
jb
mov
push
or
imul
add
push
add
mov
ds
xchg
inc
dec
int
mov
mov
sbb
out
pop
push
add
mov
pop
cmpl
testb
push
popa
scas
jg
loop
fsubs
mov
push
inc
rorl
loopne
nop
xchg
sub
mov
outsl
cltd
rcr
xor
out
mov
xor
pushf
mov
vshufps
ja
mov
push
aad
pop
icebp
sbb
mov
sbb
add
lcall
inc
xchg
cmpsb
push
jno
lds
test
jecxz
or
shlb
int3
int3
mov
fistpl
das
jns
aas
test
xchg
popa
enter
adc
jno
mov
or
jecxz
dec
mov
cmp
gs
cmp
sub
adc
push
inc
cs
inc
xchg
repnz
sub
lret
add
add
insb
fisttpll
xor
movsl
and
out
cs
daa
xlat
push
in
repz
daa
cmpsb
cmpb
inc
sub
pushf
inc
inc
and
lods
outsw
outsb
mov
inc
jmp
pop
js
push
dec
adc
rorb
sbb
out
mov
into
and
andl
fsubl
aam
mov
outsl
cmpsb
cmp
dec
and
test
cmp
movsb
insb
lock
and
and
mov
mov
pop
fisttpl
sub
and
sti
adc
xchg
add
jb
dec
cmp
dec
nop
lods
sub
lods
xchg
popf
xlat
test
mov
repnz
loopne
mov
dec
repz
clc
jbe
push
cwtl
fstps
xchg
daa
sub
js
push
jecxz
xchg
fsubrp
leave
mov
cmp
pop
mov
pop
cmp
insb
rol
xor
xchg
xchg
nop
and
repz
dec
fadd
adc
jo
push
adc
arpl
test
push
push
cmp
add
hlt
leave
neg
cmp
mov
fisttpll
ja
in
imul
sti
sub
push
lods
nop
fsubl
and
sti
jecxz
sahf
cld
mov
cmp
data16
nop
fwait
inc
icebp
mov
sbb
dec
xchg
mov
idivl
pop
xchg
mov
jle
cmc
jge
mov
insl
jno
mov
sbb
or
shlb
and
xchg
rcrl
mov
sbb
pop
hlt
aam
sub
xor
loopne
adc
gs
scas
std
xor
push
inc
adc
xchg
stos
cmp
xchg
inc
lods
xchg
add
lods
addr16
testb
and
cmpsb
sbb
jp
dec
inc
pop
mov
shll
leave
xor
cmc
inc
stos
addr16
and
gs
fwait
les
and
add
and
jge
scas
add
rolb
das
aam
out
push
addr16
inc
dec
jb
mov
iret
inc
addl
pop
dec
leave
add
pop
or
daa
std
jecxz
sub
xchg
adc
icebp
je
fiaddl
inc
mov
jo
add
into
aas
clc
xchg
xchg
cmp
stos
pop
xlat
mov
push
xchg
pop
inc
add
lahf
mov
push
push
test
mov
jns
mov
push
orl
das
adc
mov
cltd
and
test
dec
leavew
sbb
scas
mov
std
loop
mov
addr16
xchg
push
cmp
les
lahf
rclb
and
lods
inc
dec
les
bnd
hlt
dec
xor
popa
xor
jb
jno
icebp
mov
jbe
jno
popf
adc
xchg
jle
in
jb
ja
mov
push
add
mov
addr16
mov
mov
loope
dec
xor
pusha
jmp
sbb
jle
push
dec
ljmp
xchg
push
add
ret
lds
stos
cmp
adc
aad
adc
xchg
bound
adc
jns
adc
in
testb
jne
ds
stos
fstl
mov
add
enter
jno
adc
int
or
cmp
pusha
outsb
push
inc
adc
pop
cmp
sbb
sub
push
jne
lods
rcrb
adc
and
mov
sti
and
cmpsb
mov
adc
fmull
into
jne
aas
mov
jmp
cmp
xchg
inc
xchg
jae
lahf
xor
and
push
decb
push
lahf
stos
xor
stos
cli
out
sbb
pop
fdivrl
inc
add
xchg
rorb
jno
in
mov
mov
gs
push
mov
das
pusha
sbb
push
js
lahf
ret
mov
fwait
push
call
sub
repnz
hlt
cmp
push
rclb
popf
xor
adc
stos
mov
push
mov
loop
xor
aam
mov
mov
cmp
enter
repnz
xor
out
or
inc
or
call
jle
mov
in
and
inc
mov
stos
push
mov
adc
or
inc
test
lcall
sub
cwtl
mov
sbb
fmuls
popf
xlat
pop
cs
in
repnz
loopne
pushf
in
or
in
imul
xchg
or
push
leave
jno
mov
mov
lea
push
addb
cli
push
sub
orl
stc
adc
mov
mov
pop
adc
int
roll
in
push
xchg
jne
or
sub
mov
push
mov
lret
test
pop
js
jnp
dec
imul
pusha
ss
ja
xchg
or
mulb
cld
cltd
ret
fidivrl
mov
fisttps
iret
pop
stos
int3
pop
push
js
hlt
add
lret
in
lods
and
ds
jne
cmpsl
mov
mov
fdivrs
add
int3
js
add
mov
pop
in
inc
inc
pop
xorb
jno
adc
jl
outsl
faddl
inc
xor
push
in
mov
or
pop
pop
and
and
and
dec
sbb
in
mov
sub
push
in
sub
in
shl
xchg
stos
push
scas
fdivl
adc
jg
shlb
movb
push
dec
mov
fwait
shlb
add
adc
sub
cld
ljmp
insb
xchg
jns
out
in
das
xchg
dec
movsl
sarb
aaa
pop
mov
fstpl
cmp
push
repz
imul
aam
or
repz
xchg
add
jno
sbb
fwait
enter
out
rclb
sbb
ja
jnp
adc
pushf
mov
jge
in
lea
mov
sbbb
xor
pushf
lahf
ret
mov
cmp
pushf
xchg
enter
cmpsb
and
sti
pop
mov
and
pushf
das
nop
test
add
sub
mov
aas
movsb
xchg
jno
jg
loop
dec
outsl
mov
inc
mov
mov
mov
dec
pop
add
ja
or
decl
dec
push
xchg
add
sahf
xor
add
jg
mov
inc
cs
test
adc
fisubs
push
pop
mov
mov
cld
jbe
lock
hlt
inc
cs
out
roll
cli
std
out
addb
addr16
jl
cmp
and
adc
test
jmp
jle
and
mov
pop
jmp
test
out
addr16
and
lea
add
insb
pop
fdivs
pop
repnz
aam
in
push
sbb
outsl
ss
loop
sbb
insb
add
repnz
xchg
add
lock
cmp
outsb
sbb
ljmp
nop
jge
jmp
pop
push
inc
xchg
pop
jb
cmpsb
idivb
movsl
movsb
push
sbbb
jl
cmp
in
outsl
data16
or
dec
fmull
jmp
sub
stos
int
adc
push
rcl
mov
fs
shlb
xchg
dec
enter
es
je
fiaddl
lahf
inc
aaa
mov
cmp
cwtl
cli
jecxz
push
pop
jg
ja
adc
call
dec
add
inc
cmp
sbb
gs
mov
out
or
inc
shlb
test
cmp
imul
shrl
sbb
xchg
push
lock
call
jecxz
mov
daa
push
inc
mov
sub
je
hlt
in
and
dec
movsl
leave
and
or
movsl
cli
ret
sub
jge
cld
jp
fcom
aam
mov
push
daa
adc
mov
push
shlb
fiadds
movsb
aam
testl
inc
jecxz
mov
xchg
jne
movsl
cmpsb
mov
std
cwtl
aad
pop
push
dec
cli
pop
clc
lahf
push
inc
test
arpl
mov
aaa
inc
mov
add
jl
pushf
push
mov
rorl
outsl
insb
lds
dec
neg
movsl
hlt
scas
xor
es
mov
int3
stos
les
repnz
test
out
filds
xchg
aas
cmpsb
lock
cmp
arpl
sti
jmp
shrb
jno
aaa
mov
movsb
inc
fistpll
movsb
cli
fmuls
popf
mov
ja
adc
ficoms
aam
and
mov
sbb
inc
sahf
aaa
leave
add
inc
into
repnz
sti
xchg
stc
popf
cmp
cltd
ss
push
mov
adc
add
mov
push
add
and
sub
repnz
lahf
mov
sahf
xchg
andb
mov
xor
lret
or
cmpb
xchg
loopne
dec
ss
add
insl
sub
ljmp
mov
out
xor
testb
jl
outsl
pop
icebp
jo
scas
cmc
data16
push
and
ret
or
push
push
or
fisubs
lock
bound
fdivr
iret
or
add
dec
sbb
add
ljmp
ds
scas
arpl
movsb
test
imul
push
jle
call
adc
adc
pop
cmpsb
aam
mov
pop
mov
jne
xor
add
aaa
pop
mov
pusha
sub
mov
lds
les
jae
mov
jns
push
xchg
dec
xor
sub
adc
dec
mov
or
sub
int3
minps
aad
scas
xlat
cmp
subl
add
fldl
mov
push
int
cmp
data16
mov
cmp
mov
push
movsb
xor
mov
mov
xchg
movsb
cld
call
repnz
jp
insl
mov
mov
jno
cmp
sub
mov
push
mov
repnz
loopne
add
xor
test
loope
js
sbb
out
fmul
sbb
jge,pn
jge
jmp
cmc
inc
mov
jne
pop
dec
call
dec
jle
rclb
mov
test
outsb
fcompl
pop
sbb
sbb
lock
fldenv
xchg
xchg
mov
cmp
mov
push
mov
inc
inc
gs
popf
mov
test
inc
daa
sub
mov
lahf
fcmovnbe
push
out
lock
aam
outsb
cwtl
cmpb
fmuls
out
mov
orl
xorl
xor
daa
jne
xchg
xor
mov
cmpsb
mov
out
lahf
jp
push
roll
fdivl
fcomps
mov
int3
or
outsb
addr16
mov
imul
data16
cmpsl
xchg
jg
cmpl
adcb
cmp
adc
jae
push
mov
sbb
jmp
pop
insl
jb
xchg
jge
popf
fldl
pop
sub
div
arpl
jae
insb
cmp
ret
sub
rolb
cmpl
or
test
sbb
cltd
shlb
sahf
lock
mov
mov
push
dec
cmpl
xlat
sbb
xor
mov
dec
fisubrl
mov
mov
lahf
sbb
push
xchg
and
xor
out
subl
inc
xchg
stos
test
jno
andb
scas
addl
aam
into
rcrb
imul
mov
fistps
add
int3
pop
push
mov
loopne
lods
cmp
testb
jne
or
or
insb
cmp
adc
pushw
lea
cmp
mov
mov
ret
ret
xchg
shlb
lret
sbb
pop
cltd
inc
dec
mov
movsl
into
cmp
dec
out
xchg
add
push
sarb
gs
js
and
adc
dec
adc
xchg
movsl
hlt
push
stos
mov
mov
and
cmp
inc
out
fwait
push
pusha
push
hlt
xchg
lods
test
and
rolb
push
test
jo
cmp
dec
xlat
in
xchg
dec
les
sbb
or
add
sarl
loope
lcall
subl
mov
xor
mov
mov
ja
lock
jno
js
cmp
pop
ja
adc
jl
out
pop
add
clc
jle
ret
aad
or
cmc
and
or
add
mov
setno
stos
lock
sbb
sbb
mov
fmulp
gs
pop
inc
xchg
cmp
ljmp
adc
inc
fs
jl
out
lock
pop
dec
or
out
mov
jp
jp
outsb
and
xchg
lea
pop
push
or
pop
lret
int
xlat
pop
fbld
push
pop
pop
fldl2e
push
mov
jmp
enter
xchg
bound
cmc
shrl
add
imul
test
inc
mov
mov
pop
mov
jne
rclb
xor
adc
xchg
gs
mov
lret
push
pushw
add
pusha
stos
outsb
mov
out
or
jns
add
loope
sbb
mov
add
ret
dec
xchg
lock
xor
mov
cmpsl
mov
vmread
in
sub
dec
adc
lea
sub
lock
das
addr16
pop
push
lea
mov
mov
pop
sub
inc
jne
aam
pop
inc
lock
jg
inc
mov
stos
mov
scas
push
incl
add
push
push
push
or
jl
push
add
insl
in
fnstsw
jo
mov
out
or
out
inc
cwtl
sti
std
stos
mov
rcr
in
add
adc
ret
das
testl
je
mov
mov
dec
cmpsb
fisubs
mov
lret
loope
jno
icebp
movsb
lret
adc
in
or
cld
add
divb
loopne
scas
dec
int
add
xchg
outsl
pop
add
loop
das
cmp
fucomi
sahf
ss
ljmp
int
outsl
andl
pop
push
cwtl
test
movsl
dec
jmp
xor
cmovno
aam
or
pop
push
lret
xchg
js
call
out
add
and
mov
or
std
xlat
xchg
inc
dec
cltd
cmpsb
aas
loopne
and
xchg
idiv
sub
rorl
shlb
mov
sub
add
push
mov
xchg
or
xlat
xor
daa
stos
dec
fs
imul
stc
stos
ktestw
inc
adc
xchg
cld
lods
xchg
lcall
es
lahf
into
shrb
mov
push
js
into
pop
dec
xchg
fcomi
das
mov
cmpsl
sub
and
testl
mov
mov
ss
and
and
movsb
and
xchg
sbb
testb
xchg
push
nop
adc
pushf
stos
loop
dec
push
push
jle
jmp
inc
jl
scas
xor
loopne
and
in
pop
loop
sti
je
cltd
stos
or
or
dec
dec
movb
inc
rcrl
or
mov
jb
jne
jnp
sub
or
xchg
movsb
sbb
in
add
pop
xchg
fcoms
mov
ja
sbbl
xchg
imul
mov
xorl
pop
adcb
nop
add
ret
inc
pop
mov
stos
sub
sub
out
jno
inc
popf
jle
fiadds
xchg
outsb
push
scas
xchg
sbb
arpl
das
test
pop
daa
push
cli
mov
imul
fcompl
cmp
fdivl
dec
out
push
mov
dec
pop
push
ds
cld
imul
adc
mov
icebp
pop
mov
loopne
cmp
adc
sbb
ss
bound
sub
pop
mov
frndint
aad
dec
push
pop
adc
push
stc
add
fiaddl
sbb
test
or
jae
pop
into
addb
push
push
dec
loope
sub
mov
scas
and
xchg
pop
icebp
mov
lds
mov
loopne
cltd
mov
fists
dec
lcall
cltd
adc
sbb
pop
add
insl
stos
in
pushf
or
mov
cmpsl
ret
not
sbb
rcll
ds
ret
notl
mov
pop
pop
mov
add
jno
mov
out
shrb
rorb
cmpsl
das
pop
fs
lods
push
sub
stos
insb
add
push
cmpsb
mov
call
sahf
add
lea
sar
test
sub
or
cs
jmp
lahf
sub
int3
lods
mov
addr16
pushf
shlb
aas
pop
shr
scas
rclb
es
dec
in
push
lea
ret
int
ja
inc
add
push
fsubr
daa
add
rcll
js
movsl
shrb
in
cltd
movsl
mov
pop
add
mov
sti
lahf
mov
cmpsl
cltd
cli
jge
in
lret
sahf
jge
rcpps
bound
rorb
testl
in
and
mov
adcb
out
call
ret
push
mov
imul
mov
push
inc
sub
lcall
out
scas
lahf
fmuls
lods
jb
orb
imul
dec
shlb
gs
ljmp
push
movsl
push
inc
xor
mov
push
pop
push
pushf
out
cs
xchg
jne
xchg
sub
push
insb
pop
aad
bound
pushf
call
mov
push
cwtl
int
push
inc
lds
add
fmull
rcrb
push
ret
shll
mov
jns
test
je
js
jmp
adc
fcmovne
aam
push
call
push
adc
pop
xlat
cmp
pop
int3
xchg
imul
roll
outsl
pushf
cmp
lret
stc
xor
repnz
lock
xchg
xorl
xchg
push
loopne
or
cld
and
ss
mov
pop
jne
sub
fists
incb
adc
inc
push
inc
and
cmpsb
sbb
jae
pop
ljmp
sub
fistpl
and
add
pop
xchg
mov
sbb
push
loopne
xchg
xchg
movsb
movsl
adc
enter
xchg
xchg
cmp
bound
and
pop
fiadds
xchg
ud0
jl
or
or
push
xor
pop
int
jne
es
ds
inc
test
ret
or
sarl
jns
inc
push
leave
push
and
mov
clc
leave
mov
push
dec
pop
int
sbb
lcall
xchg
dec
dec
and
scas
jae
jnp
and
stos
les
push
roll
outsl
push
xor
ljmp
jmp
mov
orl
adcb
test
stos
negl
jg
xchg
push
inc
pop
sbb
out
push
popf
es
ret
les
push
pop
push
mov
loopne
pop
mov
in
sbb
add
jbe
out
stos
push
roll
out
mov
lret
stc
push
mov
jae
adc
mov
and
fbld
mov
push
inc
out
xor
repnz
xor
sub
int
xchg
push
push
fmul
mov
add
ret
sbbl
jb
add
icebp
jb
in
cli
cmp
xchg
mov
add
adc
int
scas
sbb
mov
pop
fisttpll
dec
lret
sbb
pop
cmp
push
and
in
pop
jmp
or
dec
push
ja
add
lods
inc
iret
mov
gs
in
or
imul
pop
adc
mov
pop
cld
in
xor
jae
mov
movsb
jmp
xor
out
sbb
ret
cli
outsb
add
pop
jp
leave
in
outsl
mov
pop
adc
push
lret
fiadds
ret
arpl
fbstp
repnz
cmp
ljmp
lret
push
in
shlb
imul
sbbl
xchg
pop
int3
pop
jg
xchg
jbe
jecxz
add
add
xchg
adc
fidivl
cld
or
add
cli
into
push
dec
std
test
decl
add
xchg
scas
aam
dec
jmp
inc
adc
push
mov
lret
push
addb
outsb
int
notb
popa
int3
dec
sarl
pushf
not
add
call
call
adc
aas
inc
stc
cmp
jp
sbb
sahf
mov
pop
mov
imul
lods
dec
out
ret
movsl
out
xchg
fbld
jmp
xchg
adcb
ds
add
inc
push
loopne
pop
stos
ret
repz
push
adc
inc
int3
xchg
arpl
xchg
add
push
lock
mov
and
out
cmp
int3
pop
fildl
xchg
je
shrl
and
adc
out
nop
push
and
sbb
mov
jecxz
imull
ficompl
add
ja
xchg
inc
add
xchg
fisttpl
add
cmp
in
ucomiss
ret
shll
clc
out
aaa
loop
jl
add
pushf
dec
mov
insl
imulb
adc
xchg
hlt
iret
bound
push
mov
lock
mov
popf
sarb
movsl
add
mov
test
jbe
add
out
dec
call
addr16
ret
mov
fmuls
lcall
mov
cli
pop
cmp
push
cmp
inc
push
and
mov
aaa
iret
pop
mov
sub
pop
xor
cwtl
lcall
push
aad
mov
les
mov
sbb
pop
cmp
test
xchg
cld
mov
popf
adc
adc
xlat
mov
sub
xor
adc
jae
mov
jns
push
mov
jg
add
mov
pop
aaa
cmp
stos
imul
mov
or
movsl
fwait
andb
arpl
in
mov
sbb
lea
mov
and
leave
rorl
repnz
pop
push
and
push
mov
scas
sbb
test
out
decl
lret
or
movsl
mov
pop
shl
xchg
add
jae
push
nop
adc
movsl
xor
inc
push
inc
jno
lods
sub
addr16
mov
cmp
testl
loopne
cltd
lea
es
inc
add
fmulp
cld
insl
dec
mov
jge
pop
rorl
test
aaa
lods
movsb
shrb
push
or
mov
mov
jmp
jl
push
jle
repnz
mov
pushf
sti
xchg
mov
push
fdivp
jp
popf
dec
push
push
lock
dec
stos
stos
cld
xchg
in
std
inc
adc
mov
mov
jle
or
pusha
repz
jnp
mov
xor
cld
or
push
or
aam
adc
inc
xchg
insl
xchg
xor
lds
xor
sbb
ret
lea
adc
cmpl
jne
lret
sub
outsl
repnz
lret
xchg
repnz
fwait
sub
subl
cs
stos
dec
pusha
xor
or
fs
pop
xor
sub
xchg
ret
and
stc
dec
iret
fcoml
and
lock
insl
jne
es
pop
jbe
outsl
pop
inc
decl
jnp
adc
movsb
test
xor
push
daa
fsts
sub
sub
out
lods
imul
out
in
or
inc
dec
jae
cmp
or
mov
xchg
rcl
je
js
sbb
cmc
out
shll
fcmovnbe
pcmpgtd
sar
repnz
adc
inc
jp
xchg
jno
mov
jl
xor
sbb
xchg
stc
or
pop
popa
mov
cmc
and
cld
loope
stos
inc
sub
inc
jmp
imul
cmp
inc
cmpsl
mov
in
pop
je
rcr
xor
lock
or
mov
pushf
mov
popa
ret
adcb
ret
adc
rolb
jne
push
lods
test
fidivs
test
jl
or
jbe
call
xor
lahf
and
jl
sbb
mov
hlt
aad
push
pop
ret
setbe
es
push
cmpsl
ret
fsts
cmp
jg
test
add
xor
movsb
scas
sbb
outsb
stc
movsb
fcoml
aas
mov
ffree
repz
fcomi
repz
dec
adc
shll
cmp
call
sub
xchg
xchg
std
pushf
lods
inc
out
dec
insl
jns
lods
lock
mov
inc
in
divl
fldenv
push
bound
aad
jne
subl
aam
rorl
imull
sub
pop
cmp
test
mov
pop
cli
mov
push
pop
pusha
mov
movsb
orb
in
ret
mov
cli
push
dec
stos
and
pop
mov
repz
and
cmc
rcrl
into
stc
cmpsb
cmpl
fneni(8087
mov
fimull
inc
xor
mov
loop
or
sbb
cmpsl
inc
aam
jle
sbb
mov
scas
adc
inc
enter
repz
lret
add
in
pop
cmp
fs
mov
les
push
in
and
xchg
rol
ret
clc
dec
in
xchg
sbb
shl
dec
loop
xchg
lock
pop
push
lret
lods
pop
push
mov
lds
popf
cltd
push
imul
test
mov
pushf
mov
add
pop
rcrl
insb
lock
rcll
mov
jae
pop
lea
mov
adc
jl
negl
out
mov
clc
sbb
pushf
xchg
push
loop
push
aas
je
add
lret
fcomps
sub
xor
gs
scas
mov
dec
dec
add
sub
int
pusha
xchg
lret
add
sbb
loope
dec
sahf
or
aaa
mov
imul
inc
inc
sti
aas
jb
nop
sbb
stos
lea
add
cmp
sbb
aas
push
and
add
mov
push
xchg
gs
xor
enter
nop
cmp
xor
sub
or
xor
sarb
push
push
or
adc
imul
cmc
or
clc
outsb
lret
shll
cmp
xchg
int
mov
xor
scas
inc
movsl
cmp
mov
push
xchg
inc
jo
insl
dec
cmc
bound
movsl
and
sarb
jg
adc
sub
aas
xchg
jmp
xchg
sbb
rorl
mov
xchg
out
fisttps
icebp
mov
lods
and
or
jg
out
xchg
test
mov
add
pop
fisubl
adc
test
nop
fisubl
mov
cmpsb
lret
mov
jbe
iret
push
add
subl
out
in
mov
push
and
fdivl
leave
or
and
test
iret
ss
les
cmpb
ss
mov
xchg
push
xor
sarl
mov
mov
test
pop
or
mov
outsl
xor
ja
out
add
xchg
aas
enter
push
je
fbstp
sbb
mov
fsts
scas
sbb
xchg
mov
mov
and
cmpb
popa
add
shll
push
push
sub
es
stos
sbb
sbb
mov
inc
je
mov
xor
cmpsl
sahf
sub
scas
fs
fists
test
inc
push
fld
ss
fsubp
arpl
push
or
std
mov
aad
dec
movsb
dec
mov
clc
test
mov
loope
scas
inc
jns
outsb
mov
fmuls
xor
ja
inc
push
cmpsb
add
aad
xchg
jmp
pop
and
pop
lcall
lret
mov
or
xchg
jle
ljmp
xor
inc
fsts
subb
fldt
subl
push
mov
int
pusha
mov
lea
push
mov
pop
jge
icebp
sti
adc
testl
movlps
or
in
inc
xor
in
pop
push
sbbl
repz
in
push
push
sbb
push
xlat
mov
aad
inc
cmpsb
and
xchg
andb
sub
imul
dec
cmp
xchg
add
cmp
adc
loopne
jns
sub
movsb
jae
les
pop
je
imul
push
or
test
int
jo
jp
nop
xchg
or
outsl
push
test
inc
into
cltd
cld
mov
push
mov
or
xchg
mov
mov
jmp
dec
lods
lea
mov
cmc
sub
and
aaa
cmp
cmp
cmp
jno
xor
leave
mov
hlt
push
out
and
pop
mov
cs
in
std
lcall
xchg
hlt
loopne
jle
jmp
dec
sub
sarl
xchg
mov
ljmp
mov
shlb
and
adc
or
mov
mov
insl
inc
fstl
scas
jle
jp
cwtl
loopne
cltd
js
push
addr16
addr16
mov
lret
gs
das
xor
fildll
ljmp
push
insl
out
rcrb
jg
aad
movl
stc
inc
inc
sbb
jns
and
nop
cwtl
pop
mov
and
js
movsb
push
loope
push
aas
fsubl
xchg
cmp
xchg
mov
push
mull
xor
out
arpl
push
fimuls
dec
push
mov
push
cmp
push
imul
fcmovnbe
xchg
arpl
cwtl
stos
ret
adc
pop
jmp
inc
mov
repz
leave
pop
popa
mov
fcompl
xchg
loopne
pop
cmp
dec
sub
enter
mov
out
dec
movswl
push
mov
push
dec
scas
jmp
mov
leave
sahf
dec
pop
out
in
fwait
daa
pop
or
leave
iret
pop
pop
cmp
mov
clc
lahf
pushf
stos
mov
push
xor
mov
test
lret
std
xor
ds
xchg
shlb
mov
ja
fimull
mov
xchg
inc
lcall
sbb
or
push
add
dec
loopne
mov
push
xor
inc
pop
dec
inc
fisubl
cltd
scas
roll
mov
sub
push
sarb
call
sub
or
pop
mov
mov
je
add
xor
dec
cmp
je,pt
shlb
cs
xor
fs
lahf
push
dec
icebp
push
and
dec
shl
push
and
nop
stos
das
test
movsb
pop
clc
fmul
jp
or
or
pusha
xor
daa
sbb
call
fstp
inc
sub
inc
xchg
fs
cmp
mov
pop
ss
push
pop
add
mov
cwtl
push
xor
cmp
push
nop
inc
add
pop
mov
xor
cld
push
les
xchg
imul
inc
jno
push
add
arpl
xchg
lds
jp
push
xchg
mov
sahf
jg
pop
jmp
rol
fiadds
push
sbb
fiadds
loopne
jbe
ficoml
push
fsubs
out
sahf
ss
xor
sti
push
cmp
outsb
adc
hlt
push
sub
cmp
testl
pop
jnp
sub
inc
icebp
pop
mov
ret
add
fwait
adc
pop
sub
xchg
or
lret
cmpsb
mov
add
mov
sbb
ds
mov
sub
shr
inc
lods
sti
ss
out
cpuid
js
mov
adc
pop
sbb
inc
dec
mov
jb
addr16
cmc
outsb
jb
repz
push
pop
jnp
jns
loop
pusha
jae
inc
lods
out
outsb
jno
test
jl
ret
aaa
flds
or
cld
mov
jb
sub
das
mov
ds
mov
cmp
pop
xor
xor
cltd
cmp
mov
cwtl
push
insb
cs
daa
cmp
pop
push
iret
jns
mov
stos
pop
stos
leave
jns
cmpsl
mov
scas
and
gs
mov
hlt
inc
xor
sub
sub
mov
pop
cmp
popa
in
dec
nop
sbb
push
ret
gs
cmp
mov
push
mov
mov
dec
fnstenv
cmpsl
stos
repz
call
jns
lret
push
cmp
pop
scas
add
cwtl
add
jmp
lods
bound
lret
mov
insl
pusha
aas
mov
jne
xchg
sarb
dec
mov
aaa
xor
mov
or
add
loope
testb
ret
mov
scas
jl
lods
inc
sub
inc
xchg
or
ljmp
push
jns
mov
rolb
push
insl
imul
popa
mov
jb
inc
jno
cmp
fsubrs
xor
out
cmp
pop
or
mov
add
pushf
in
xor
xchg
jnp
fcom
movsl
push
xor
and
cs
sub
lds
lret
pop
in
sahf
cmpsl
fs
jnp
cmp
int
js
xchg
or
cmpsb
fildll
jle
and
lods
out
std
inc
xor
gs
jmp
add
out
dec
ljmp
orb
fwait
outsb
mov
jo
nop
adc
mov
jl
jne
mull
in
into
sub
pop
repz
sbbl
xchg
jno
dec
inc
sbb
pop
mov
jp
rep
aam
and
xchg
and
push
mov
mov
outsb
push
cmc
sti
push
dec
out
mov
enter
inc
and
rcrb
fwait
sbb
fwait
sarl
xchg
push
mov
lods
cwtl
js
adc
add
xor
or
lahf
lea
push
mov
out
jns
jmp
stc
lret
mov
mov
push
mov
addl
ret
push
bound
in
imul
cli
popa
jae
sub
dec
aam
sti
mov
inc
pop
and
mov
pop
mov
add
cmpl
add
pop
popa
aaa
sbb
ja
xchg
shl
jle
fcmovnb
scas
jb
scas
fisubl
and
aaa
out
adc
push
ljmp
ficoml
fiaddl
mov
ja
and
loop
mov
mov
lahf
mov
fadd
inc
push
xor
push
ds
mov
pop
and
jbe
cmc
out
push
mov
scas
mov
and
bound
popa
sbb
outsb
push
jmp
cwtl
mov
xor
inc
ret
dec
cmp
sbb
and
mov
daa
push
in
call
or
in
sub
mov
loop
mov
insb
pushf
xchg
mov
add
sub
jp
mov
inc
xchg
rorb
push
testl
ficoml
mov
int3
adc
add
movsl
bound
and
jle
mov
pushw
jge
sub
ss
dec
jae
mov
mov
xchg
lret
mov
daa
sub
jecxz
lock
mov
jne
xchg
lcall
imul
rolb
mov
pop
inc
jge
fisttpl
mov
or
je
jmp
aam
push
inc
mov
jmp
scas
movsb
or
mov
inc
aam
fistpl
mov
call
sbb
jnp
shlb
cmpsb
xor
sti
aad
xor
in
clc
mov
loope
scas
mov
insb
andb
xchg
test
mov
loopne
rcrb
movsb
cmpb
mov
jo
movsb
lcall
mov
jo
sub
adc
cs
jb
arpl
fwait
dec
xchg
dec
cltd
add
out
sub
ja
fsin
push
jmp
sub
mov
stos
mov
imul
mov
cltd
mov
aad
xchg
lock
mov
cltd
sub
xchg
push
mov
inc
sarb
lahf
mov
cli
out
and
push
xor
add
pop
int3
dec
movl
sub
mov
dec
mov
arpl
xchg
mov
data16
fisttpll
and
imul
cltd
shlb
hlt
jae
fnstsw
xor
cltd
sub
subl
cmp
jp
mov
out
cmc
into
or
sub
xchg
je
fidivrs
scas
add
ja
push
test
pop
mov
pop
lea
aad
test
jbe
adc
imul
sarl
push
es
cs
dec
outsl
hlt
mov
cli
add
push
lds
sti
cmp
mov
jno
push
ljmp
push
mov
pop
test
in
add
ja
pop
dec
subl
xlat
push
cmp
or
add
xchg
sbb
xchg
add
mov
loopne
imul
sub
dec
aas
sbb
inc
ret
sbb
js
fsubrl
shl
jmp
adc
and
insl
divl
mov
jecxz
jno
and
int
ret
xor
fbld
insb
fldl2e
push
pop
xchg
cwtl
es
push
adc
pushf
lea
arpl
stos
stos
fwait
outsl
int3
pop
lcall
leave
mov
fwait
dec
add
and
xchg
adc
pop
fisubl
scas
incl
pop
xor
push
shrb
adc
rorb
fcmovnu
mov
add
xlat
xchg
cmp
pop
dec
mov
mov
mov
repz
xor
les
addb
push
movl
arpl
into
and
pop
loope
subb
xchg
pop
pop
outsl
setge
xchg
fisttpll
stos
mov
inc
ret
push
xor
in
lds
mov
mov
jne
rol
rcrb
dec
movsl
shl
aam
mov
cmp
inc
push
cwtl
inc
or
mov
or
dec
mov
or
mov
xchg
mov
inc
mov
jmp
mov
sbb
les
mov
mov
jno
dec
and
mov
leave
lods
iret
sarl
and
cmc
adc
add
add
mov
test
push
repz
or
jo
jbe
out
jae
push
cmp
loop
and
dec
and
dec
in
add
scas
add
pop
push
sbb
dec
repnz
sbb
add
jbe
xor
fcmovnu
jnp
arpl
jle
stos
nop
mov
bound
inc
popa
imul
cmp
mov
scas
jl
inc
inc
ja
ds
imul
and
jne
mov
lods
mov
popa
inc
mov
out
push
xchg
jnp
fs
xchg
jp
cmp
dec
out
imul
divb
out
mov
shll
pushf
in
mov
in
lock
icebp
mov
dec
ret
dec
dec
or
fstl
sbb
add
and
out
mov
push
xor
lods
pop
lcall
lods
cwtl
lcall
call
add
ret
xor
into
iret
cmp
cld
push
popa
dec
adc
popa
sbb
xchg
or
cmp
pop
testb
inc
es
cmp
push
and
pop
popf
add
push
lock
ret
sub
jae
leave
aam
mov
gs
xor
out
ret
sbb
adc
jno
mov
mov
jle
je
int3
jae
sbb
add
clc
popf
mov
mov
jae
arpl
cwtl
repz
sbb
cmc
ja
aaa
popa
int
mov
cld
data16
sbbb
fwait
pushf
push
pop
jl
arpl
in
loope
outsb
cli
fsubrl
dec
arpl
icebp
mov
mov
xor
ds
and
lahf
pusha
mov
fidivs
mov
es
cmpsl
lretw
mov
and
add
pop
push
push
dec
imul
lds
in
adc
dec
adc
dec
rcl
cmp
sti
stc
lea
pop
in
jg
ret
adc
test
out
divl
jmp
jae
or
xchg
push
lock
or
lea
stc
faddl
push
sarl
outsl
dec
lods
add
push
cld
bound
jae
push
lcall
mov
push
push
xor
jecxz
sbb
sbb
addr16
push
pop
jne
loop
dec
push
popf
xchg
push
stos
mov
arpl
push
mov
scas
lret
loopne
test
adc
push
jns
add
inc
stc
dec
dec
and
mov
mov
mov
outsb
fdivr
xor
sub
dec
pop
cmpsb
aam
add
and
call
in
shlb
loop
jbe
xchg
roll
in
mov
or
insb
test
mov
jo
fcoms
in
fisubrs
sbbb
orb
loopne
xor
add
mov
std
mov
add
sarl
mov
or
testl
pop
xor
jb
clc
test
push
sub
rolb
popa
mov
mov
sub
das
pop
js
cmp
xor
pop
mov
push
stos
insl
aaa
addb
xchg
or
or
outsb
xchg
mov
and
insb
inc
sbb
and
jns
outsl
pop
adc
ljmp
mov
pop
lds
ds
popa
and
jbe
cmpsb
in
jp
in
test
leave
ds
mov
test
jo
mov
push
iret
inc
sbb
mov
mov
mov
sbb
cld
push
jle
pop
ds
aad
clc
cld
leave
mov
sub
sbb
xor
jb
jge
adc
sbb
mov
loopne
scas
shll
cmpl
cmpb
cmp
or
adc
mov
cli
jmp
cltd
mov
mov
outsl
xlat
movsl
fwait
aad
out
push
pop
sub
dec
pop
enter
xor
and
jae
jp
adc
ja
jb
sahf
mov
xor
cmpsl
lahf
sub
inc
popa
std
fs
cmovl
xor
call
push
rorl
ljmp
xchg
in
inc
inc
ds
insl
movsb
sub
cmc
sbb
dec
fnstsw
das
add
mov
jle
push
xlat
lea
mov
inc
dec
popa
cld
push
movsl
lods
stos
mov
sar
test
in
jge
into
and
sub
mov
mov
push
xor
xchg
loop
push
sahf
sub
cmp
scas
cmp
xchg
add
sahf
shlb
ja
icebp
push
repz
test
push
dec
jp
movsl
popa
dec
jbe
popf
and
hlt
fcoml
lea
dec
lods
dec
xchg
nop
aas
jp
pop
adc
scas
pusha
inc
inc
jge
mov
sbbb
int3
pop
push
dec
mov
push
fldcw
mov
mov
push
pop
sub
std
lahf
inc
es
xchg
xchg
sbb
repz
test
mov
jo
mov
cmc
aaa
xchg
sti
daa
in
aaa
xchg
pop
sbb
daa
pop
push
mov
leave
sub
or
loop
and
incl
aam
ss
imul
popa
xchg
gs
push
cmc
pop
push
int
add
mov
cmp
jbe
repnz
adc
daa
mov
pop
push
mov
aaa
popf
popa
cld
arpl
mov
fldcw
mov
nop
pushf
incb
jne
push
jns
lcall
xor
mov
out
mov
enter
mov
out
and
stc
ds
lahf
dec
sahf
xchg
fs
fstpt
insl
xor
mov
mov
pop
js
mov
inc
outsb
fwait
inc
loopne
mov
xchg
sbb
je
out
sub
jge
fsubrl
sbb
test
test
out
dec
lods
lcall
add
loopne
pop
aam
and
jno
or
popf
mov
sbb
xor
jle
inc
outsl
in
pop
dec
xchg
mov
les
xchg
divl
adc
jp
daa
lock
sub
dec
push
out
pop
dec
ss
nop
into
out
or
imul
stc
test
mov
hlt
movsl
icebp
push
and
test
fnsave
adc
mov
push
xchg
lock
push
fnstcw
shlb
push
dec
push
push
jne
dec
cmpsl
mov
dec
mov
add
sbb
js
fistpl
mov
xor
aaa
cmp
inc
arpl
rorl
xlat
mov
or
pop
test
pop
rorb
xor
imul
int
rcll
mov
jp
mov
popf
xlat
xchg
in
mov
test
inc
dec
into
mov
fimull
sub
js
stc
dec
rorl
hlt
inc
add
arpl
js
out
aam
jae
testl
ret
mov
xchg
fildll
test
incl
insb
aas
ds
sub
clc
adc
pusha
std
or
rcrb
fs
setne
shrb
mov
ss
jo
add
cmp
out
repz
repnz
cld
out
mov
pop
push
lods
movsb
jl
cmp
popa
lds
adc
jmp
or
sbb
sar
add
mov
xor
jp
and
lcall
or
add
orl
jno
jl
or
or
jg
mov
mov
add
push
pop
push
movsl
sub
aas
cmp
and
test
js
fistpl
mov
js
out
ret
xchg
inc
jns
sub
push
inc
aad
pop
pop
shrl
aam
cmp
sti
loope
push
push
jle
cs
nop
repz
aam
cmp
push
out
outsb
jne
mov
inc
ficoms
arpl
mov
sub
mov
popf
pop
shl
and
fwait
loopne
cli
divb
pop
sahf
mov
or
add
push
jmp
pop
push
add
scas
and
xor
js
in
cli
xor
jo
mov
inc
ret
push
inc
xor
pop
arpl
inc
xchg
xor
ljmp
mov
add
mov
inc
jae
loope
sbb
sbb
pop
dec
cmpsl
pushf
dec
inc
movsb
scas
out
and
dec
loop
mov
adc
fistps
ja
sti
xchg
arpl
and
loop
lea
cmpsb
lods
repz
pop
shrb
cmpsb
scas
imul
add
mov
cwtl
adc
outsl
adc
push
push
mov
pusha
cmpsb
shlb
mov
mov
adc
xchg
inc
out
movsb
mov
andl
data16
xchg
and
stos
xchg
std
push
test
ss
insl
jmp
stos
out
mov
xor
xchg
fwait
inc
ja
adc
fisubrl
sarl
cs
xor
imul
or
aad
adc
dec
push
and
ficoml
adc
iret
dec
sbb
scas
out
mov
mov
ds
fisubl
fnstenv
pusha
mov
clc
sbbb
inc
rcr
imul
sahf
test
sub
repnz
jmp
mov
dec
inc
dec
xor
movsl
mov
nop
fbld
lret
fdivrs
pop
mul
push
mov
cmp
dec
dec
dec
stc
mov
mov
out
jmp
pusha
jle
dec
fcmovne
jno
lret
dec
mov
adc
stc
mov
mov
mov
cltd
scas
out
scas
fwait
aam
scas
inc
sar
push
in
lcall
inc
xor
pop
cmp
fmuls
mov
jbe
icebp
jae
roll
xchg
cmpl
dec
js
mov
lahf
cmc
pop
je
stos
adc
adc
movsb
xor
jnp
pop
push
nop
xchg
xchg
xlat
and
bound
insl
lock
sarl
push
stos
jle
loop
dec
jecxz
nop
mov
or
mov
cmp
mov
jne
std
add
cmp
mov
inc
and
pop
mov
xchg
dec
scas
jg
scas
adc
in
add
jns
ss
mov
testl
jne
pusha
ja
jae
popf
outsl
enter
pushf
jl
pop
jno
mov
and
ret
mov
test
stc
or
add
or
jge
jecxz
push
lea
lcall
mov
jmp
stc
cs
adc
fsubrs
pop
enter
xchg
pusha
dec
add
scas
mov
pusha
dec
mov
sub
test
shrl
and
mov
jp
mov
push
and
shld
mov
fisubrs
lcall
pop
dec
pop
pop
lock
sbb
xchg
mov
xchg
jno
outsl
ret
ss
pushf
sti
inc
jb
pop
mov
sbb
fs
adc
push
or
imul
pop
jnp
testl
std
jne
xchg
pop
imul
pop
gs
cmpsb
sahf
in
insl
icebp
pop
icebp
repz
lds
add
sub
loope
lds
xor
lret
inc
jns
mov
sbb
popa
fistps
rcrb
xor
lret
fstl
mov
adc
test
fwait
jns
mov
jle
xchg
cmp
adc
gs
movsb
xor
xor
pop
mov
xor
movsb
fimull
mov
xchg
or
out
add
cmp
js
fs
xchg
or
lods
cmp
lods
cs
ja
dec
lds
or
xchg
imul
pop
ret
fsubl
mov
ffreep
adc
adc
push
ret
lahf
clc
test
add
mov
xor
inc
lock
fidivrs
dec
add
fidivrl
loopne
loopne
fnstcw
dec
ds
dec
mov
inc
fimuls
xor
cltd
dec
movsb
pusha
int3
cmpsb
dec
pop
mov
xchg
jbe
mov
inc
jle
push
sbb
and
lret
in
imul
jl
and
sub
xchg
stos
jmp
enter
imul
mov
push
dec
adc
outsl
xchg
mov
inc
sbb
inc
push
or
xor
mov
pusha
insl
mov
test
pop
sbb
jb
xchg
ret
add
sbb
insl
testb
jno
jle
sahf
dec
lret
cmpsb
sub
in
aad
push
cmpsb
adc
mov
lahf
rorl
addr16
mov
lds
mov
lea
cld
lahf
or
xor
add
cmp
test
aas
push
inc
mov
int
push
or
rclb
mov
and
or
clc
hlt
pop
mov
mov
and
xorl
insb
mov
xchg
and
push
clc
addl
aaa
ja
add
adc
shll
dec
pop
daa
in
cli
or
into
add
adc
jo
lret
mov
fwait
stos
mov
mov
hlt
jns
cmpb
sub
xor
xchg
cmp
xchg
pop
icebp
in
popf
ds
adc
lcall
and
fimuls
popf
repnz
inc
inc
xchg
and
jne
or
out
and
mov
das
repz
jne
stos
lea
into
jne
adc
stos
cmp
popa
xor
stos
test
and
ja
jmp
subl
in
lds
lods
xchg
inc
sahf
mov
sarb
in
ja
loop
fmull
jno
and
cwtl
cmp
scas
pop
add
fbstp
push
cmpsb
outsb
sub
fst
into
mov
fisubrl
mov
jb
push
mov
fsubrl
int
pushf
stos
xor
out
mov
sbb
mov
dec
mov
movsb
fistpl
inc
loop
lods
scas
into
sub
adc
rcll
lds
pop
ja
and
push
adc
sti
insl
or
leave
cli
adc
addb
mov
imul
fwait
and
fisttpll
ret
push
mov
or
sbb
xchg
pop
mov
pop
mov
imul
into
ficoms
das
xchg
das
fdivr
or
adc
cmp
cwtl
jg
cmp
push
idiv
in
rorl
mov
pop
test
xchg
shrl
pusha
mov
cmp
repz
and
xchg
out
test
jecxz
adc
jg
scas
addl
mov
and
pushf
dec
fcmovnbe
jmp
jmp
inc
popa
xor
xchg
outsb
dec
and
xchg
mov
mov
arpl
cmp
lea
sub
and
dec
cmp
ds
loope
pop
dec
mov
xor
adc
mov
jmp
xor
mov
dec
hlt
xor
jmp
ds
and
jmp
push
sbb
sbb
inc
adc
push
mov
push
xchg
ljmp
adc
aad
push
fs
xchg
inc
ret
fsubp
sub
fldl
pop
stc
insb
inc
add
cld
fdivs
xchg
ljmp
mov
mov
fcomps
imul
adc
cmpsl
fidivrs
or
fstp
dec
js
push
lods
adc
sarl
sbb
mov
mov
push
sbb
xor
int3
gs
scas
and
jb
xchg
lret
shl
loopne
outsl
inc
xor
lret
ret
test
stos
sub
mov
je
xor
roll
arpl
add
lds
xor
loop
or
and
in
subb
push
mov
xlat
cmpsb
adc
imul
sbb
inc
scas
pop
stos
mov
loop
sbb
ret
push
mov
ds
insb
cmp
push
out
pushf
addb
jg
aas
in
and
jg
js
aad
pop
roll
sub
rcrl
gs
pusha
and
adc
mov
cmp
in
jbe
sbb
adc
pop
in
pop
sbb
fsubs
pop
repz
arpl
les
mov
add
and
cmp
cwtl
or
add
rorl
stos
add
ja
in
test
jge
hlt
imul
xor
out
inc
je,pt
out
cmp
pop
js
cmp
push
push
subb
sti
lret
or
mov
mov
inc
xor
or
int3
and
pop
sub
lods
xlat
cs
outsb
xchg
fcoms
rorl
dec
or
mov
or
xorb
lret
lret
and
insl
dec
mov
sub
add
rcl
lods
lcall
dec
dec
stos
pop
xor
push
cld
sub
stos
lahf
push
out
adc
lds
cli
or
add
sbb
fdivp
jno
xor
lret
dec
iret
add
aas
in
xchg
in
mov
mov
xchg
lret
xor
fdivl
scas
mov
std
mov
pop
out
adc
leave
out
jmp
test
pop
xorb
inc
fcmovnb
ret
data16
mov
xchg
xchg
mov
movsb
dec
dec
xchg
mov
sahf
int
lock
lret
addl
mov
push
ja
xchg
push
je
test
sbb
outsl
movsb
inc
fcomp
scas
in
js
rorb
adc
test
cs
xchg
scas
sub
jbe
inc
mov
pop
and
inc
and
movsb
movsl
xor
jne
mov
lds
ds
add
pop
iret
testl
sub
lret
lcall
mov
or
out
xor
mov
mov
in
push
shl
repnz
scas
leave
sar
subl
pushf
and
mov
jb
xchg
xorb
in
dec
out
inc
insb
test
scas
cmp
icebp
inc
add
int3
cltd
jns
add
test
xor
pop
int
lods
or
sbb
notl
sub
inc
adc
out
imul
sbb
push
fisubs
xchg
and
dec
idivl
push
in
mov
xchg
cmp
dec
sub
xchg
or
out
movsb
push
loop
sbb
dec
pop
mov
es
xchg
pop
out
mulb
es
xlat
and
or
dec
in
int
je
pop
pop
lea
gs
xor
outsb
mov
or
mov
pop
jl
jmp
cltd
mov
icebp
xchg
jecxz
shlb
lahf
mov
mov
jne
sbb
or
out
sub
sub
lcall
nop
xlat
xchg
cmc
mov
data16
xchg
add
loop
bound
mov
mov
sar
aad
in
xor
pop
xchg
cld
dec
addr16
pop
fs
inc
and
stos
fs
adc
adc
ja
testl
divb
subb
inc
mull
jmp
int
lea
into
nop
cwtl
dec
arpl
add
xchg
dec
sub
dec
pop
cmp
jnp
repnz
popa
inc
and
fs
shrb
cmpsb
cltd
ljmp
adc
mov
js
push
xchg
aaa
jnp
mov
loopne
testl
mov
add
lret
outsl
sub
outsb
cmp
in
sub
mov
aad
movb
scas
mov
mov
inc
push
push
jge
mov
cmp
aas
fisubrs
test
mov
xor
pop
mov
push
stos
xchg
cmp
jecxz
in
inc
imul
ja
jo
add
sub
in
xchg
loope
loope
push
aas
outsl
mov
rorl
fidivrl
mov
mov
fcmovnb
aaa
mov
ljmp
nop
pop
out
js
bound
scas
int3
xorl
lcall
loop
repnz
inc
sub
mov
lahf
in
mov
imul
lret
cmpsl
xchg
mov
sbb
addl
lret
xor
add
mov
fldt
mov
out
lea
add
fisubl
cmp
lret
add
sbb
dec
mov
jecxz
jne
lahf
cmp
mov
enter
and
test
or
pop
sbb
fists
stos
lea
dec
jl
imul
inc
pmullw
scas
or
ja
inc
mov
lret
inc
cmp
in
dec
jne
pop
decb
push
mov
mov
sub
sub
pop
imul
xor
and
or
inc
loop
or
mov
loopne
mov
xchg
mov
jno
adc
int
xchg
push
mov
stos
dec
lahf
out
sbb
push
cmp
mov
adc
hlt
xor
cmp
shlb
gs
js
mov
dec
mov
sti
iret
inc
insb
or
xor
out
aas
fwait
mov
ret
mov
ljmp
ret
inc
inc
pusha
lcall
lea
into
inc
adc
dec
or
sbb
movsb
sub
ss
mov
je
xorb
mov
push
iret
sub
inc
sbb
inc
and
sbb
mulb
mov
pusha
insl
test
int
push
add
mov
in
arpl
sbb
and
ljmp
fdivrl
xor
sbb
mov
mov
mov
jl
insb
testb
jnp
jmp
pop
mov
fld
inc
inc
fildl
mov
and
movsb
jno
das
outsb
xchg
add
jmp
xchg
and
outsb
push
add
fistps
push
in
int3
sub
adc
dec
hlt
fnstsw
mov
cld
outsl
push
dec
and
or
dec
outsb
lahf
test
dec
sbb
xor
rcr
imul
mov
mov
fildll
ja
xor
or
push
adc
push
lret
push
pop
inc
mov
add
push
fs
fwait
mov
xchg
add
daa
inc
xchg
sbb
sarl
into
fcompl
mov
inc
enter
pop
jns
scas
icebp
andl
fisubrs
fcoms
ljmp
pop
mov
fs
and
adc
mov
or
jnp
sahf
jae
or
inc
push
jbe
cmpb
mov
pushf
pop
cmp
inc
out
out
pop
xchg
mov
mov
nop
push
xor
cwtl
fsubl
hlt
test
fstps
sarb
jge
or
push
in
icebp
dec
cmp
cltd
in
and
movsb
xchg
pop
les
adc
fimull
cmc
lcall
nop
jbe
push
mov
inc
lret
and
pop
lock
mov
sbb
lcall
mov
adc
fidivs
pop
sub
loopne
inc
push
fildl
jl
fwait
jmp
push
inc
inc
stc
jg
sub
loopne
dec
push
push
mov
add
es
js
cld
push
lcall
hlt
cli
xor
push
xchg
popa
aam
xchg
movsb
lods
xchg
in
sti
mov
jmp
test
adc
repz
adc
xchg
jg
and
mov
mov
adc
fcom
xchg
scas
cs
data16
jne
jae
xchg
pop
jg
out
icebp
inc
pop
jmp
dec
pusha
icebp
jnp
rol
and
hlt
xchg
test
mov
repnz
popa
and
push
sahf
lock
sbb
xor
dec
pusha
icebp
aas
bound
mov
cltd
imul
orb
jne
sub
and
movl
call
or
mov
cld
jnp
in
mov
xorl
mov
sub
xchg
inc
in
out
mov
iret
xor
mov
andb
in
fisubrs
lea
pop
imul
mov
adc
mov
hlt
push
and
repz
rorl
int3
test
push
and
fucomip
push
adcb
xchg
dec
mov
xchg
push
inc
push
repz
repz
xchg
mov
jecxz
mov
addr16
jb
sbb
fwait
cltd
cmp
lret
pop
shlb
inc
stc
lods
pop
dec
push
jg
push
dec
leave
sub
and
cmp
daa
jae
add
mov
test
movswl
cmpsl
mov
call
inc
cmpsb
inc
outsl
push
out
js
mov
mov
ds
and
dec
shll
imul
inc
mov
mov
out
lods
mov
out
enter
mov
and
lcall
cwtl
ds
xchg
out
cmp
outsl
jae
arpl
pmulhw
adc
sbb
je
psubusw
fstl
xlat
dec
pop
xor
subb
jo
lods
rcll
ss
in
cmpsb
fisttpll
inc
outsl
cmp
jl
adc
test
lds
lock
mov
push
adc
push
mov
in
lock
popf
int3
loope
pop
fwait
push
clc
xor
stos
adc
inc
or
jbe
sar
mov
adc
out
mov
jae
jns
jmp
xchg
cmc
add
push
jae
and
xchg
jmp
jb
sbb
mov
out
jns
cmp
adc
mov
jne
push
jo
loopne
stos
cmpsb
fwait
xchg
shlb
push
or
insb
or
mov
ljmp
jg
and
dec
dec
aam
or
pop
jne
push
test
mov
push
mov
sbb
adc
push
or
popa
aas
push
mov
mov
push
cmpsl
mov
cmp
xchg
sbb
std
dec
lret
in
rclb
shl
jbe
xor
popf
mov
pop
aaa
out
pop
aaa
mov
mov
push
lahf
pop
adcl
mov
or
xchg
jne
repz
adc
lret
lds
rorb
jb
cltd
stc
cmp
and
leave
cmp
xor
das
aas
ret
call
scas
loop
mov
mov
dec
andl
fists
jb
mov
cmpsb
xchg
sahf
pop
cmp
xor
pop
aas
loope
xor
push
popa
inc
dec
mov
dec
pushf
out
mov
hlt
shll
aam
arpl
test
sbb
cwtl
mov
mov
in
inc
cltd
mov
loopne
scas
push
cmp
subl
out
inc
dec
cwtl
insb
dec
mov
push
rorl
pop
add
test
cmp
loop
cmp
sbb
in
inc
into
adc
fucomip
dec
int
or
cs
outsl
addb
sbb
dec
jg
les
mov
and
fisubs
jae
add
mov
filds
cs
pushf
mov
xor
popa
out
mov
ljmp
js
push
popa
xor
adc
mov
cmpsb
or
jb
inc
cmp
je
mov
pop
fs
pusha
mov
xchg
mov
stos
je
inc
pop
cmp
jo
lods
xor
pop
mov
roll
loop
setne
or
push
mov
and
aas
in
ret
xchg
idivb
or
pop
call
test
cmp
push
mov
stos
stos
loop
mov
loope
cmpsl
push
ret
idivl
sub
mov
daa
or
seto
add
ss
jae
mov
adc
dec
aas
adc
fs
ss
jbe
dec
pop
sbb
pop
xor
inc
popf
xchg
jnp
repz
mov
mov
sbb
xorb
inc
and
ret
negb
aam
lret
mov
inc
decb
sub
jge
rclb
add
sahf
cwtl
pop
mov
mov
rcl
or
cltd
dec
pusha
cltd
ret
aas
sub
dec
add
inc
pop
mov
rcrb
repz
push
add
xchg
sub
aaa
clc
aaa
fildll
hlt
jle
and
mov
in
or
mov
fsts
jo
mov
inc
cwtl
ds
push
in
mov
xchg
sbb
lahf
outsb
cmp
std
mov
mov
sbb
lds
sub
loopne
jae
sub
xchg
faddl
jo
aam
movsb
ud0
lret
xor
dec
sbb
test
test
notl
cwtl
xchg
mov
and
dec
cld
dec
sbb
out
and
outsb
pop
out
popf
test
xorb
mov
jno
and
sub
push
inc
aaa
mov
cmpsb
fildl
mov
sbbl
pop
mov
xor
xor
xor
pusha
jp
ss
adc
push
cltd
inc
inc
cltd
xchg
mov
push
sub
xor
push
mov
sbb
std
fiaddl
xchg
mov
push
add
stos
out
clc
mov
cmp
fadd
lods
outsl
fistps
cmp
mov
sar
mov
lods
and
notb
add
mov
sub
xor
adc
sbb
fidivrs
xchg
add
subl
mov
jb
inc
xor
sbb
mov
cmc
mov
mov
push
pop
outsb
lcall
ret
fcoms
sub
je
scas
push
pop
xor
mov
insl
mov
mov
or
dec
gs
lods
xor
jne
sti
cmp
es
data16
mov
pop
cmpsl
mov
inc
mov
mov
dec
pusha
mov
pop
pop
mov
mov
cmp
in
xchg
lods
mov
lds
pop
push
inc
ficomps
cmpsl
lret
adc
xchg
clc
jmp
xor
lahf
sbb
dec
and
push
scas
and
imull
sub
pop
outsl
sub
mov
stos
faddl
mov
mov
in
fdivrl
fucom
or
cmp
mov
push
out
add
loopne
xchg
jmp
out
loopne
popa
pop
sbb
inc
imul
iret
cmp
xchg
inc
pop
fists
in
or
mov
mov
inc
cwtl
mov
scas
fbld
push
xchg
jb
shl
and
push
fsub
jnp
inc
cmpsl
ficoms
lods
sbb
insb
nop
ds
mov
fcmovnbe
popa
fimull
push
jp
bswap
fdivp
pop
lcall
mov
sbb
mov
and
test
aas
add
imul
je
in
mov
mov
lcall
jp
pop
dec
dec
or
xor
mov
or
and
aad
or
mov
adc
and
js
test
les
jne
movb
adc
popf
cld
rolb
js
fidivs
icebp
jg
cwtl
mov
and
jnp
mov
pop
es
mov
pop
inc
cmpsb
mov
sub
out
lahf
cmp
inc
push
add
jb
cwtl
shll
dec
pop
sti
ret
mov
xor
cli
pop
sbb
pop
jnp
mov
jo
ror
imul
xor
test
add
xchg
out
arpl
adcb
xchg
aam
xchg
sbb
mov
out
rcll
fnstcw
hlt
inc
dec
xchg
mov
imull
orl
xchg
sub
andb
lea
ss
outsb
into
fisubrl
cmp
sbb
jno
jb
outsl
mov
addr16
gs
hlt
in
cli
adc
push
and
out
mov
scas
notb
xchg
sti
mov
rcrl
dec
insl
and
movsl
push
insb
fbstp
sahf
adc
fldl
mov
xor
sarb
xlat
mov
in
sbb
cmc
cltd
popa
xor
adc
imul
test
add
pop
mov
jle
xor
lock
test
lods
adcb
dec
aaa
lcall
test
int
subl
out
notl
pop
shll
xchg
fdivp
fcmovbe
and
scas
sbb
sub
fisubs
or
add
inc
jecxz
std
scas
sbb
sarb
dec
dec
sbb
mov
orb
cltd
lcall
in
and
push
push
sbb
xchg
sbb
mov
ret
fwait
push
dec
fstpt
inc
in
mov
out
pushf
mov
in
jle
jecxz
loope
push
push
xchg
jg
pop
pop
inc
decl
cld
test
das
xchg
loopne
jnp
mov
jae
es
push
xchg
ja
and
jle
push
sbb
lcall
fistps
psubq
pop
sar
add
pusha
faddl
loopne
js
cmp
movsl
dec
mov
sbb
arpl
xor
xor
stos
jecxz
mov
cmp
int
pop
mov
rclb
xchg
cmp
dec
cwtl
int
test
faddl
daa
jo
jb
dec
cmp
sbb
adc
jb
xchg
mov
pop
inc
mov
pop
add
push
push
in
xchg
test
mov
insl
pop
mov
jo
jl
xor
lods
ret
inc
or
cmp
or
jg
pop
push
cmpsl
shlb
repnz
sti
xor
sahf
lds
mov
in
into
xor
pop
and
loope
ja
jne
and
mov
push
leave
and
sbb
mov
mov
repnz
sbb
rorl
std
scas
pusha
lahf
addr16
rclb
std
push
cmp
cmpsb
shll
mov
and
int3
gs
shrb
mov
dec
daa
sub
push
jle
and
push
mov
shll
push
fcompl
pop
shl
lret
and
aam
or
add
mov
test
and
jecxz
cltd
jmp
adc
stc
fcompl
jge
dec
sbb
jecxz,pt
mov
insb
rcrb
push
stos
jmp
scas
xchg
sbb
mov
jmp
imul
imul
aas
inc
cmp
inc
sbb
push
cmp
popf
loopew
popa
pop
repnz
mov
and
cmp
xchg
out
test
cs
add
mov
popa
daa
xchg
fbstp
mov
sbb
fs
mov
sub
scas
insb
pop
rol
mov
rcrl
shl
stos
outsl
and
sbb
std
mov
mov
fld
mov
flds
lock
lret
rol
add
sbb
sahf
mov
add
dec
jg
imull
out
lock
push
lock
les
mov
cmp
insl
icebp
inc
xchg
enter
dec
test
push
enter
mov
xor
icebp
bound
jl
adc
in
sbb
and
not
adc
cmovnp
popa
dec
int
xor
cld
decb
mov
add
inc
mov
inc
aaa
stos
cmpsl
loopne
loope
imul
sti
andl
data16
pop
add
out
mov
pop
popf
iret
imul
inc
push
push
inc
jmp
mov
popa
xchg
leave
pop
stos
jno
xchg
pop
xchg
add
outsb
or
dec
mov
scas
dec
cmp
rcll
mov
out
out
sti
cmpsl
lahf
jp
imul
dec
pop
add
fcomps
leave
in
insb
cmp
mov
push
xchg
mov
and
js
push
ljmp
and
jg
push
fwait
shll
shlb
xchg
sbb
lods
jnp
stos
and
and
xlat
clc
or
jg
mov
sbb
pop
mov
fimull
roll
jne
adc
mov
or
lahf
sbb
test
movsl
xor
ds
sub
xchg
test
mov
mov
addr16
fisttpl
lock
mov
std
xchg
sbb
aad
xor
out
adc
xor
mov
es
ficomps
leave
lcall
dec
subb
lds
fwait
xchg
mov
mov
into
sbb
fidivl
ret
ljmp
gs
push
data16
lcall
jae
lea
les
adc
cs
pop
inc
gs
out
fdivs
aas
push
mov
aam
shll
adc
add
js
push
cmp
push
adc
popa
mov
sbb
xchg
jp
shlb
lods
mov
mov
xchg
lret
call
pushf
cli
mov
shl
inc
mov
stc
push
adc
lods
scas
dec
xchg
ljmp
fcmovu
mov
mov
lods
add
inc
cmpsb
into
push
push
jae
inc
lret
sbbb
mov
or
adc
in
das
aaa
mov
jno
sbb
adc
out
pop
pop
dec
or
pop
flds
addr16
jp
cli
mov
test
mov
popa
stos
lock
negb
xor
pop
stos
inc
stos
ret
mov
rorl
push
pop
cmp
scas
push
pop
sub
cmp
pop
or
lret
aaa
mov
sti
mov
jl
in
cmpsb
xor
repnz
pusha
jbe
aad
push
loop
jo
inc
scas
test
push
xchg
xor
fstps
jno
fwait
in
cmp
or
xchg
xor
orb
imul
and
add
mov
ret
arpl
and
imul
rep
aad
lret
sub
fisubl
stos
fnstsw
leave
lret
out
test
push
inc
pop
push
outsl
push
es
push
sbb
dec
imul
ror
loopne
movsb
cmpsb
xchg
jnp
push
cmp
adc
mov
lret
sahf
ja
mov
pop
in
sub
add
mov
dec
scas
cwtl
out
insl
stc
rcr
add
sub
and
enter
jo
pop
dec
dec
sub
inc
loopne
test
push
push
mov
ja
mov
pop
cmp
jle
jne
mov
mov
push
fwait
clc
cltd
mov
pop
jge
mov
xchg
test
mov
adc
add
and
loop
xchg
mov
insb
test
jmp
in
nop
popf
lds
jb
rcll
js
xchg
dec
dec
clc
xchg
mov
outsl
sbb
push
dec
mov
std
push
enter
push
je
or
adc
loop
outsb
sbbb
add
jo
fsubr
mov
js
testl
popf
sbb
movsb
mull
adc
inc
sahf
mov
pop
jno
xchg
add
sbb
sahf
rorl
lods
bound
outsb
mov
orb
int
xchg
mov
or
mov
sbb
jbe
rclb
push
adc
ret
or
adc
dec
pop
jmp
push
aam
iret
sub
loopne
subl
mov
outsl
xchg
mov
cmc
dec
popf
aam
pop
jne
lds
data16
xor
loope
cwtl
out
fisttps
imul
out
or
pop
cmp
sub
adc
sub
jle
movsl
inc
push
or
sbb
adc
ret
cmpsb
insb
and
mov
decb
lods
lcall
in
inc
sub
sub
cmpsl
out
mov
push
dec
push
jb
mov
pushf
mov
cmp
xor
and
dec
into
or
in
sahf
mov
sub
inc
cwtl
pop
in
mov
pushf
cmp
push
daa
fists
mov
in
mov
mov
adc
lea
ror
int
adc
out
sub
pushaw
mov
jg
or
and
mov
mov
push
pop
into
ret
jo
int
repz
lret
ret
pop
xlat
test
xchg
xchg
call
gs
sbb
inc
add
pushf
mov
cmp
loope
adc
push
pop
xchg
cs
mov
push
mov
xchg
xchg
out
add
push
adc
dec
pop
inc
push
scas
jne
mov
stos
push
das
mov
mov
cmp
inc
ds
mov
stc
insl
repz
inc
dec
jb
pusha
inc
fcomps
test
jb
or
xchg
call
pop
mov
or
push
test
xor
adc
and
xlat
cmp
xchg
push
rcrl
pop
mov
lahf
fucomip
inc
xchg
or
lret
push
nop
sub
mov
push
lret
lret
fdivs
dec
cmpsb
push
and
mov
mov
iret
lahf
insb
push
and
cmp
jne
ja
mov
outsl
stos
mov
leave
add
inc
movsb
mov
mov
cmp
jbe
loope
subl
or
mov
pop
insl
mov
mov
test
and
outsb
es
mov
dec
movsb
xor
mov
or
add
int
test
sbb
sahf
dec
cmp
pop
jae
lret
xchg
test
in
cmp
in
mov
sbb
mov
add
mov
cltd
nop
mov
mov
dec
inc
fsubr
adc
fsubrs
shlb
mov
jnp
xchg
pop
pushf
stc
loop
mov
inc
cmc
pop
out
jne
lahf
movsb
mov
sar
xchg
mov
inc
ss
and
int
call
addr16
testl
test
sbb
test
pop
outsb
add
sbb
pop
add
leave
mov
stos
imul
pop
clc
ret
xorb
mov
sti
sub
push
sbb
out
push
adc
pushf
pushf
xor
cmp
mov
or
les
fucomp
out
jl
mov
cmp
aad
lahf
data16
dec
cli
mov
repnz
adc
lods
test
pusha
fdivl
mov
sbb
es
in
jne
clc
jp
imulb
clc
arpl
cmp
jbe
aam
mov
in
daa
inc
inc
inc
fucomip
pop
cmp
and
push
pusha
mov
mov
out
or
insl
subl
push
mov
sbb
leave
mov
jne
sbb
in
and
dec
clc
mov
lret
pop
xchg
pop
aam
lods
push
loopne
and
bound
cmpsb
push
mov
pusha
or
pop
push
int
rorb
stos
cmpsb
push
and
add
int3
addr16
sub
call
add
lahf
cld
in
inc
aad
lods
cltd
in
pop
mov
lock
cmp
stos
inc
pusha
jo
sti
shlb
sbb
shlb
test
fnstenv
jl
sti
push
mov
int3
xorb
test
mov
in
mov
cmpsl
cmp
addr16
inc
push
movsb
lret
std
or
mov
mov
and
sbb
jb
or
xchg
mov
cmpsl
cwtl
inc
and
add
cmpsl
jmp
clc
push
cld
test
jg
adc
aas
jecxz
cmp
xor
scas
push
and
inc
sub
loope
cmc
sbb
outsl
and
or
mull
fwait
mov
out
lock
and
nop
push
xchg
cli
subb
pop
fdivrl
or
daa
pop
out
xchg
sarb
xchg
fwait
sub
pushf
jne
orl
cmp
loop
push
rorb
enter
sti
je
or
fs
cmp
gs
xchg
adc
in
shlb
fs
sbb
idivl
inc
adc
or
cltd
in
sub
loope
int3
xchg
dec
or
push
stos
sti
push
sbb
ljmp
ret
jbe
std
lods
or
test
xor
ja
pop
or
jne
adc
lods
adc
rorb
movsb
ss
loope
xchg
and
mov
sub
push
jmp
lahf
rol
lods
or
xchg
pusha
lahf
adc
push
sti
xor
int3
cwtl
popa
or
add
jg
fcmove
icebp
cmp
sahf
jp
adc
sbb
aas
movsl
mov
jp
negl
xor
sub
cmp
dec
sti
pop
pusha
xchg
pusha
jge
insb
sti
xchg
cmp
mov
arpl
sbb
or
mov
stos
push
xor
pusha
sub
dec
xor
insb
xor
outsl
call
jae
ljmp
jl
inc
cmp
inc
push
out
sbb
xor
jbe
inc
cld
jmp
popa
in
sub
test
adc
popa
hlt
mov
push
imul
adc
lock
fwait
mov
xor
mov
sbb
mov
scas
xorb
mov
cwtl
inc
test
test
xchg
dec
test
cwtl
cltd
movsb
ret
push
pop
repz
into
jge
mov
xchg
fidivrl
loopne
and
out
mov
jg
pop
mov
cmp
and
or
jbe
mov
cmpb
addr16
jg
aaa
subb
xor
jno
xor
and
mov
mov
stos
xor
jl
fstpl
mov
rorb
repz
push
sti
or
ljmp
mov
scas
jnp
daa
xacquire
js
inc
sbb
jne
lock
or
cmp
insl
addb
enter
fsubrs
push
cld
sbb
int
in
shl
mov
ret
xor
addr16
daa
push
cmpsb
jns
cmp
mov
pop
adc
or
adc
add
cmp
ss
hlt
movb
adc
sahf
dec
and
mov
and
jo
shr
pop
gs
sub
xor
pop
cwtl
fldenv
xor
and
xchg
and
divb
xchg
push
outsl
mov
les
cmp
or
into
mov
push
inc
lahf
loope
sub
dec
push
lcall
add
mov
scas
adc
out
subl
xchg
popa
int3
cmp
mov
pop
adc
sub
jb
imul
xor
add
xor
inc
mov
jne
outsl
jge
push
adc
outsl
loope
and
sbb
sbb
imul
and
inc
mov
xchg
fdivr
pop
mov
lret
pop
outsl
arpl
mov
xchg
xchg
lea
jae
ret
push
or
dec
inc
das
jb
addb
nop
dec
pusha
push
sub
imul
lret
movsb
rorb
mov
insl
rolb
addl
nop
cmp
fbstp
stc
cmc
les
mov
inc
orb
xlat
arpl
jb
das
and
dec
dec
aad
mov
xlat
loop
dec
cmp
mov
in
xchg
arpl
stos
sub
mov
jmp
ss
test
mov
in
push
bound
xchg
mov
or
mov
lret
shlb
mov
cwtl
xchg
jbe
enter
push
stc
adc
push
xchg
add
or
out
lcall
icebp
insb
cmp
jecxz
pusha
and
icebp
aad
sbb
add
inc
mov
fwait
adc
dec
cmp
cmc
fists
add
inc
adcl
dec
mov
adc
mov
xchg
ja,pn
lret
sahf
fisubl
sbb
jp
add
fsubl
lods
lea
mov
hlt
inc
out
clc
in
sti
fwait
xor
imul
iret
rorl
fidivs
push
add
shlb
out
aad
push
enter
imul
inc
sub
jns
or
push
jecxz
mov
scas
ja
or
adc
pop
lahf
xchg
add
xor
sbb
add
push
add
jbe
out
shl
xchg
adc
add
hlt
imul
jbe
xchg
jle
sti
dec
loop
std
mov
loope
pop
in
subb
mov
sahf
jg
inc
cltd
push
dec
jmp
xlat
fiaddl
jb
ret
push
xchg
push
aas
xchg
xchg
rcrl
lea
imul
mov
sbb
cmp
call
mov
inc
mov
sbb
loop
iret
sub
dec
xchg
clc
mov
cmp
cmp
jo
inc
push
and
jg
stos
adc
adc
and
push
stc
mov
out
out
popa
dec
scas
pusha
add
jnp
cld
cmpl
xlat
xchg
add
adc
test
lock
rcll
mov
xor
test
dec
enter
inc
push
sti
xchg
add
scas
mov
mov
test
xor
mov
jge
ret
mov
dec
mov
hlt
test
cmp
pmuludq
add
xor
enter
pop
popf
xor
jmp
xor
test
pop
mov
jb
or
jp
lahf
out
cmp
nop
or
add
mov
mov
mov
mov
les
std
inc
xchg
mov
cmp
inc
rcll
cmpsb
call
cmpsl
repnz
test
pushf
test
jle
mov
mov
push
mov
inc
mov
pop
jo
sti
cmp
adc
fimull
inc
and
mov
aad
pop
add
adc
loopne
inc
into
test
pop
aas
imul
adc
in
jge
mov
and
jl
test
mov
mov
mov
es
lcall
xlat
adc
ds
mov
dec
inc
or
jl
fsubrl
jae
xorb
add
pop
bnd
sbb
jb
popa
popa
lods
cmp
out
insl
add
mov
mov
and
outsl
les
jns
pop
sahf
sub
and
jns
repnz
push
pop
add
dec
mov
in
mov
sub
fists
ret
insl
rorb
inc
scas
push
dec
or
dec
out
cmpsb
pop
push
jnp
push
jmp
scas
sub
aaa
repz
jns
add
popa
fs
sbbl
mov
into
or
pop
jle
dec
jnp
or
dec
adc
into
sbb
mov
out
lods
jnp
dec
mov
addr16
xlat
push
sub
or
hlt
lret
xchg
adc
xchg
mov
dec
jnp
xchg
mov
ficoml
insl
add
repnz
mov
add
and
dec
jmp
jl
nop
sub
test
pop
fimull
adc
xor
dec
or
jnp
arpl
or
cmp
imul
test
out
cmp
ret
and
jnp
mov
sbb
ja
inc
imul
fisttpl
push
pop
hlt
cmpsl
sub
inc
and
cmp
int3
push
dec
out
xorb
fnsave
add
sbb
lock
out
in
lret
lahf
add
or
shl
xchg
xchg
mov
sahf
or
and
pop
orb
xor
aaa
mov
pop
mov
pop
aam
addr16
jo
test
enter
lods
jl
out
sbb
cli
push
add
fbstp
mov
jb
ljmpw
dec
rcrb
and
outsl
sbb
fsubr
pushf
lods
sbb
sub
mov
mov
sbb
std
test
int
mov
dec
enter
test
seta
add
nop
aam
cmp
nop
and
push
in
test
jae
dec
das
add
pop
mov
sbb
iret
fnsave
in
jo
lds
adcb
out
ljmp
aaa
cld
stc
mov
pop
mov
jno
push
ret
mov
movsb
xor
dec
push
adc
sbb
pop
lds
sbb
out
aas
jmp
push
adc
dec
inc
pop
enter
daa
dec
push
ret
add
ret
or
pop
loope
aad
fucomi
adc
push
sbb
ljmp
sar
sarl
addr16
aam
into
fs
aad
pop
mov
jecxz
jge
repnz
lcall
mov
mov
xchg
xchg
mov
push
arpl
loope
sbb
lock
push
sbb
xchg
mov
lods
ret
inc
imul
je
push
movsb
test
push
jl
nop
cmp
pop
jo
pop
testl
out
dec
xchg
push
or
gs
outsb
call
cwtl
mov
ds
mov
xor
or
in
adc
mull
cs
frstor
jnp,pt
test
dec
test
and
and
dec
dec
repnz
data16
mov
lods
cwtl
lods
xor
sti
inc
dec
les
xchg
test
pusha
pusha
addr16
add
jb
out
xor
pop
imul
jp
and
pusha
jnp
in
sub
cmpsl
or
push
sbb
mov
fisubrs
outsb
sub
int
adc
add
ds
mov
and
or
into
xlat
cwtl
xchg
roll
mov
out
fnstcw
nop
stos
enter
cs
mov
add
or
jge
movsb
add
mov
movsb
fldcw
sarl
imul
fldl
cmp
mov
fdivrl
pop
insl
cmp
cwtl
mov
mov
pop
push
rolb
clc
xchg
xor
bound
mov
stos
cltd
repz
sbbb
in
pop
pop
ljmp
imul
xchg
dec
decb
mov
cmc
xchg
mov
mov
mov
jg
int3
sti
das
xchg
lea
xchg
sub
push
mov
repz
movsl
mov
mov
cmp
movb
and
in
fucom
in
cwtl
adc
cwtl
popf
xchg
stos
pop
pop
pop
lods
mov
js
idivl
mov
fsubr
cwtl
js
add
sbb
cmpsb
sub
lds
aam
add
shlb
loopne
cli
adc
cmp
and
sahf
sbb
xorl
add
in
std
in
adc
out
push
test
icebp
imul
std
lock
xor
lods
xor
jmp
xchg
js
lods
jmp
cwtl
lret
lods
xor
daa
rcl
rcrl
dec
in
push
mov
movsb
or
jp
jl
pop
dec
adc
test
jecxz
jp
fisttpl
daa
mov
jmp
femms
adc
movsb
repnz
add
or
lret
xchg
adc
jl
mov
sbb
in
xor
adc
ja
ret
scas
and
iret
fucomp
push
aas
sbb
xchg
fnop
push
hlt
ljmp
fwait
sbb
or
jp
dec
cmc
pusha
adc
test
pop
sub
pop
dec
sub
icebp
pushl
push
xor
adc
pop
pop
sbb
sbb
dec
ret
sub
test
rol
adc
lret
mov
or
fstpt
cmc
ds
pop
sbb
fs
mov
adc
scas
imul
and
enter
mov
ficompl
outsb
jl
mov
in
jo
push
sub
sti
inc
pop
out
popf
mov
rcr
popl
ja
and
xchg
add
sbb
inc
inc
mov
adc
pop
idiv
jae
fldenv
push
pop
adc
bound
push
mov
inc
adc
sti
cltd
shrb
mov
cmc
xlat
lret
xor
cmpb
mov
jbe
popa
les
sbb
mov
aaa
sets
xchg
cmpsb
test
pop
test
xchg
pusha
dec
mov
mov
lahf
call
push
addr16
sbb
mov
pop
popa
dec
sti
push
pop
shl
cmp
dec
inc
test
je
cmp
out
out
into
pop
jge
sbb
push
add
cmp
nop
in
cwtl
cmp
sub
pop
repnz
sub
insb
add
dec
adc
jle
mov
imull
and
or
mov
pop
in
repz
stos
mov
xchg
jae
enter
nop
add
shl
sti
dec
inc
out
and
int
jae
inc
mov
cs
jmp
sub
cltd
cs
push
xchg
lea
jmp
mov
out
notl
cmovg
ret
or
in
test
jp
sarl
roll
xchg
test
lock
cmp
add
jae
sahf
pop
inc
and
and
shll
lahf
ljmp
inc
int
pop
pusha
push
insl
sub
mov
mov
roll
pop
fisttpll
repz
ret
addb
or
inc
push
lods
xor
mov
sti
xor
inc
push
adc
cld
push
mov
sub
and
add
cmovp
out
mov
or
xchg
xor
cmc
sbb
je
stos
push
push
mov
mov
xchg
mov
sbb
adc
lock
test
cwtl
sti
out
lock
rorb
xchg
cmp
inc
add
jnp
xor
arpl
fdivrl
imul
inc
push
cmp
fcoml
mov
andb
adc
mov
hlt
in
sti
mov
stos
imul
cli
xor
jge
or
loopne
sbb
sbb
cmp
xchg
jae
mov
outsl
int3
adcl
jne
push
jp
loopne
jge
fiadds
push
xchg
mov
test
add
push
jp
pop
or
inc
pop
lea
cmp
cmp
sbb
cmpsb
loope
rcl
fmul
jecxz
jge
mov
mov
cld
imul
inc
or
xchg
lock
lods
mov
stos
jg
out
sbb
repz
sub
repnz
int
push
cmpsl
and
mov
add
cltd
jmp
sbb
mov
jmp
xchg
mov
pop
sub
in
out
mov
pop
adc
mov
frstor
pop
std
lret
mov
in
ljmp
leave
xchg
and
stc
push
sbb
xchg
and
fsubs
and
test
sub
mov
mov
jno
push
mov
xor
add
clc
cmp
sbb
outsl
cmpsl
cmpsb
test
pop
lret
sub
or
sbbl
xor
xchg
push
addb
cmp
or
repz
cld
ror
cmp
outsl
mov
pop
js
stos
outsb
scas
sub
shlb
jp
and
pop
mov
add
mov
test
aas
push
push
stc
stos
xor
add
add
jl
jae
jno
fidivrl
or
push
mov
sti
pop
orl
pop
out
fnstenv
test
sub
jae
add
es
sahf
jno
xor
outsl
dec
xor
cmp
jle
pop
pop
aad
subb
and
fimuls
ret
xchg
push
insb
mull
les
xor
xor
pop
xchg
leave
dec
fisttpll
sti
xor
xchg
lcall
jecxz
xlat
dec
outsl
jle
stc
ret
fidivs
dec
xor
into
push
mov
leave
add
call
add
inc
mov
stos
dec
jne
outsl
dec
and
pushf
sbb
pop
lea
pop
mov
xor
add
sub
pop
mov
add
push
clc
adc
inc
jbe
orb
mov
dec
cltd
sub
int
mov
mov
insl
pop
cmp
fsub
push
fbstp
imul
jnp
fwait
mov
hlt
adc
mov
out
jmp
arpl
adc
bt
mov
cmp
pusha
loope
add
in
popf
push
mov
jae
fcoml
imul
add
sbb
hlt
ss
dec
scas
cld
jns
cltd
xor
jl
bound
adc
mov
sub
scas
cltd
jns
mov
hlt
and
push
gs
mov
mov
sub
add
imul
mov
mov
cli
push
ja
loop
leave
xchg
mov
mov
add
popa
test
xchg
iret
mov
filds
repz
xchg
imul
lret
sbb
xor
shrl
xor
mov
cmp
arpl
test
xchg
pop
and
xchg
adc
sbb
jnp
negl
xchg
dec
vpminsw
adc
sbb
cmp
decl
dec
mov
mov
lods
loope
mov
fcmovbe
in
cwtl
pushf
jb
in
pushl
fdiv
and
loop
pop
cwtl
ret
mov
call
inc
enter
sti
fwait
scas
movsl
jmp
shlb
sbb
ret
outsl
sysenter
cmp
pop
push
add
add
loope
cmc
xor
pushf
push
movsb
mov
inc
dec
insl
adc
jg
jno
aad
adc
dec
data16
xor
jecxz
sub
push
scas
xor
rclb
ret
mov
sti
and
mov
daa
xor
sub
pop
jmp
aad
mov
in
mov
sub
lds
lods
push
mov
test
cmpsl
mov
pop
cmp
loope
mov
fisttps
addr16
jbe
jge
jecxz
imul
mov
hlt
adc
push
nop
push
inc
ljmp
ffree
cmp
pop
insb
es
outsl
sub
lret
cs
and
shl
inc
mov
mov
bound
add
inc
cwtl
mov
dec
cmpsl
je
test
sub
inc
mov
aaa
xchg
mov
pop
push
rcl
out
bound
cmp
fidivrl
sbb
push
repz
sbb
xor
and
sub
mov
and
nop
adc
mov
out
dec
cltd
enter
in
push
jns
out
insl
jmp
ds
aas
adc
shrl
or
xchg
sub
js
sub
insb
add
jns
pop
pop
mov
jne
sub
in
xchg
mov
pushf
cmp
arpl
pop
jl
mov
mov
push
sahf
mov
sbb
push
ljmp
add
adc
dec
jmp
mov
jo
or
in
sub
movsb
push
dec
cmp
pop
inc
jge
ret
movsb
xor
jmp
xor
dec
push
out
inc
cmpsb
dec
or
ret
enter
xor
stos
cmp
out
mov
push
sarb
mov
dec
jnp
adcl
pop
mov
in
clc
lcall
jnp
lcall
adc
mov
outsb
jo
fsts
mov
pop
aam
lds
fcoms
push
adc
in
in
adc
fs
pop
pop
push
scas
fildll
sbb
push
popf
insb
mov
iret
scas
aam
dec
sbb
insb
out
mov
cmc
imul
dec
mov
lea
loope
push
enter
pushf
aas
add
xor
popf
mov
pushl
mov
mov
test
cmp
sarb
daa
jmp
cmp
push
ljmp
insb
les
roll
cmp
mov
inc
adc
jns
insb
cli
jae
repz
mov
cmp
lods
rclb
pop
mov
mov
rcrb
inc
rcrb
add
xor
mov
andl
in
lret
xor
mov
add
push
call
dec
and
cmp
leave
das
jmp
jo
xor
into
int3
pop
jg
mov
stos
or
cmp
and
pushf
iret
pop
sbb
add
inc
push
mov
jbe
imul
fld
inc
jg
add
mov
xor
pushf
rep
cmpsb
imul
push
or
xchg
cwtl
push
sbbb
adc
loopne
adc
and
push
inc
pop
divl
mov
pushf
adc
xchg
xchg
or
mov
inc
clc
pop
aaa
lret
and
sub
ss
fisttps
out
out
sbb
push
lret
jmp
outsl
data16
and
or
jecxz
adc
pop
dec
out
or
push
test
outsb
aam
scas
cmp
xor
dec
xor
inc
in
push
sbb
mov
outsl
fdecstp
pop
xchg
and
and
hlt
lock
imul
sub
in
pop
xchg
push
dec
fstl
xor
dec
add
sbb
jno
js
mov
add
sub
mov
sahf
jae
sub
cs
push
xchg
call
or
mov
adc
xchg
push
pop
mov
roll
in
loope
xor
pusha
xchg
sbb
xor
inc
lds
call
cs
adc
lock
loopne
out
push
pop
std
or
mov
test
inc
rcrb
mov
mov
sub
ja
pop
mov
fstps
jo
jnp
sbb
pop
lahf
or
mov
jp
sub
dec
sbb
bnd
adc
add
test
inc
cwtl
in
mov
fwait
mov
sti
scas
cmpsl
neg
or
gs
jns
mov
je
inc
sub
ret
ds
stos
imul
cs
lret
ljmp
xchg
imul
push
jl
pop
sbb
push
ds
leave
pop
int
fistpl
outsb
ret
or
and
roll
jg
js
inc
repnz
mov
in
call
jno
andb
mov
gs
pop
lods
aas
lret
cltd
jmp
mov
test
cmp
dec
xchg
lcall
pop
sub
lods
pop
outsb
sub
es
jne
shlb
mov
out
insb
popf
iret
and
cmp
cmp
aas
inc
stos
pop
fdivrs
inc
shrb
bound
xchg
xor
mov
jb
xor
outsb
cld
push
inc
rcr
mov
xchg
jmp
pop
sti
outsb
int3
leave
jp
mov
mov
mov
mov
pop
fdivs
leave
mov
sbb
repnz
mov
js
push
sub
sti
jb
or
xchg
hlt
jo
dec
pop
clc
sub
insb
add
mov
xor
dec
xor
sbb
cmp
cmc
xchg
push
scas
pop
addr16
sahf
ljmp
xchg
lahf
incb
push
or
cmpsb
push
outsl
push
and
dec
dec
lret
repnz
inc
adc
cltd
mov
push
mov
xor
pushf
mov
jmp
pop
rcll
outsb
jne
mov
mov
dec
mov
fmull
and
jecxz
mov
pop
dec
out
inc
xchg
pushf
pop
cmc
add
int3
mov
stos
pavgw
adc
mov
cs
cmpl
lahf
mov
pop
fsubrl
ffreep
in
sbb
push
das
lcall
and
bound
leave
jne
lret
jo
mov
or
xchg
in
push
ja
mov
sarl
aam
xor
inc
mov
jns
mov
imul
scas
xlat
sub
in
sub
mov
outsl
adc
ljmp
fs
inc
jp
fldl
push
mov
je
fldcw
inc
popf
xlat
sti
inc
push
insl
test
jo
popa
jno
pop
lcall
cmp
rorb
inc
clc
and
mov
je
adc
addr16
mov
mov
mov
fistpl
push
fwait
arpl
out
pop
shlb
adc
stos
test
fidivrs
int3
cld
pop
lods
lea
test
icebp
negl
int
mov
mov
out
aaa
cmp
push
lea
movsb
leave
stos
sti
dec
dec
scas
insl
xchg
popa
test
push
mov
xchg
ja
pop
pushf
stos
lock
testl
inc
xchg
adc
xchg
adc
sbb
mov
mov
inc
push
or
sub
jmp
jl
icebp
xor
push
stos
jbe
les
inc
loop
pop
test
imul
bound
sbb
dec
repz
dec
mov
outsl
dec
jnp
outsl
mov
pop
cmp
xor
das
or
scas
jecxz
movsb
ss
cmp
lcall
push
in
pusha
cwtl
inc
test
movsb
fyl2x
pop
neg
out
jmp
jl
mov
and
xchg
push
bound
nop
push
dec
push
cwtl
icebp
clc
adcl
xor
gs
lea
inc
in
lods
outsb
and
jge
int3
inc
pop
push
pop
lahf
pop
xchg
cmp
mov
sbb
push
bound
xor
cmp
gs
in
ret
insl
dec
popa
cmp
in
xchg
add
pop
fnstcw
xchg
xlat
pop
sbbl
xchg
cmp
mov
fidivs
sbb
leave
pop
cwtl
and
cld
test
pop
es
jnp
shll
rorl
out
mov
jb
mov
inc
dec
mov
das
xlat
and
cmpsl
mov
repz
xchg
adc
mov
hlt
mov
or
and
and
mov
fisttpll
es
dec
sbb
test
sbb
rol
ret
mov
jno
add
sahf
das
mov
inc
cmp
and
mov
outsb
inc
pusha
aas
adc
and
sti
rorl
mov
sub
imull
cmp
inc
xlat
cmpsl
or
bound
sub
pop
insb
xor
mov
pop
and
and
dec
sbb
or
push
cltd
cmpsl
scas
mov
sbb
pushf
std
jge
mov
and
mov
cmp
loopne
les
popa
add
push
add
add
in
dec
xorb
xor
jbe
lea
mov
mov
dec
jmp
mov
jle
rcrl
xchg
insl
pop
mov
lret
outsl
out
ljmp
xchg
lock
jne
outsb
arpl
sar
pop
or
ljmp
inc
cld
movsl
pop
adc
es
pop
movsl
cs
aad
sub
mov
gs
cmp
stos
lea
mov
mov
in
jae
sbbl
mov
sub
push
add
hlt
test
arpl
cs
sub
dec
out
mov
cmp
mov
sub
loopne
movsl
jbe
sbb
pop
imul
push
int3
in
hlt
rclb
mov
aad
push
mov
lds
aaa
xor
adc
pop
push
adc
pop
pop
pop
fnsave
push
fisubl
pop
push
ljmp
popf
mov
repz
lock
test
stos
scas
push
or
scas
xchg
or
jo
mov
mov
dec
jecxz
add
movsb
dec
add
pop
pop
jne
mov
popf
push
ss
idivl
stos
mov
ds
ss
repnz
outsl
xor
add
cmp
icebp
std
pop
jno
or
and
repnz
and
dec
cltd
rorb
imul
outsb
mov
cmp
xor
xchg
loopne
lock
cmc
sbbl
imul
imul
add
cmp
dec
xchg
enter
outsb
mov
cmp
aam
sub
mov
push
cwtl
adc
imul
mov
or
aas
inc
add
mov
rcrl
pop
inc
mov
pop
loopne,pt
add
xor
add
jb
add
cmp
sbbl
pop
addr16
mov
imul
xor
push
cli
cmpsl
xchg
or
jle
pop
addr16
jmp
cmp
cmpsl
mov
mov
and
frstor
fwait
or
bound
add
int
or
and
aam
loope
sahf
add
out
xorb
inc
setl
jno
push
ljmp
mov
cli
imul
fwait
cmpsl
or
xchg
push
jnp
insl
xor
std
xor
xchg
dec
pop
into
push
push
dec
ss
pavgb
or
sahf
lret
test
mov
orl
out
xor
gs
fisttpl
into
test
dec
pop
gs
and
cmc
dec
test
test
jl
adc
imul
dec
je
mov
btrl
mov
push
sub
fistl
dec
mov
jbe
imul
fs
mov
add
mov
mov
das
pop
icebp
push
xchg
xchg
or
xlat
ds
add
mov
xchg
add
push
call
push
jno
rorl
mov
add
je
ja
std
clc
and
outsl
sub
xor
sub
loope
ret
xor
jo
mov
jo
mov
popa
popa
xor
lds
mov
mov
mov
cmpsl
and
insb
cmp
inc
out
or
and
in
or
scas
push
dec
adc
pop
scas
incb
dec
mov
roll
imul
mov
inc
imul
popf
or
in
fisubl
stos
mov
jbe
lock
es
or
cmp
jle
push
mov
lods
inc
and
or
mov
fidivrs
push
int3
fdivl
sub
sbb
repz
lret
pop
mov
cmpsb
xchg
xlat
xor
xorl
divb
sub
xchg
jmp
mov
mov
clc
jmp
inc
or
xchg
mov
repnz
fwait
or
fmull
popf
sub
adc
jl
xor
mov
fcoms
fdivl
dec
sub
inc
cs
in
jmp
xorb
xlat
and
mov
add
mov
ds
and
cmpsl
stos
push
push
mov
sub
aaa
call
clc
aas
push
test
mov
xlat
insb
sbb
in
mov
jbe
jecxz
sub
insl
mov
mov
inc
fsubrp
pop
adcl
mov
add
mov
bound
loopne
testl
faddl
push
mov
mov
repnz
test
jecxz
push
in
and
push
cmp
mov
hlt
dec
aam
push
push
adc
std
lcall
pop
enter
cmp
cmc
mov
cmpsb
jl
mov
sbb
lock
movsb
cltd
pop
jae
repz
pusha
insl
sbbb
mov
in
ret
test
inc
data16
and
aam
aas
mov
shll
dec
mov
push
adc
mov
scas
push
mov
inc
push
bnd
push
test
jmp
rclb
add
in
mov
ret
iret
clc
inc
mov
js
adc
jo
repz
fwait
sbb
stos
jnp
sarl
sbb
pop
xlat
or
lcall
adc
jp
test
push
cwtl
sbb
sub
mov
lret
and
pusha
outsl
mov
mov
push
or
cli
and
mov
inc
lods
pop
popa
jecxz
pop
pop
gs
dec
or
and
and
xchg
das
pop
das
out
pop
outsb
mov
aaa
sub
dec
jb
icebp
call
lock
iret
add
in
adc
jge
mov
dec
mov
ficoml
mov
rorb
cmpsl
out
adc
bound
dec
dec
push
je
and
ss
ljmp
insl
popa
dec
or
dec
test
sub
add
pop
or
dec
sub
sub
iret
lock
fsubrs
imul
lret
nop
sub
in
xchg
sbb
insb
jb
jecxz
or
in
adc
xchg
sub
fdivrs
out
aam
jb
call
dec
lods
addl
dec
fdivl
cmp
mov
clc
pop
cmp
stos
aad
xlat
cmc
loop
fwait
jo
push
push
imul
mov
in
pushf
mov
inc
hlt
mov
xchg
cmpl
and
jo
jo
pop
insb
stc
call
sub
adc
clc
ret
mov
fsub
adc
push
and
dec
bound
xchg
cmc
pop
or
add
mov
xchg
adc
xchg
iret
stos
lds
add
cmp
mov
add
jg
subl
mov
or
andb
loope
jbe
je
addb
mov
and
repnz
push
icebp
xchg
push
scas
mov
mov
jns
negl
lret
jo
mov
js
push
sbb
test
sbb
stc
pushf
adc
out
jmp
xchg
and
idivl
out
inc
mov
pop
xor
int
shlb
dec
in
shll
pop
je
inc
inc
rorb
pop
pop
adc
mov
adc
cld
xchg
sub
push
rolb
fstps
or
or
out
pop
sbb
push
push
sarb
mov
stos
add
mov
mov
jmp
cmp
repnz
inc
cld
cmpsl
inc
fists
adcl
add
loope
lea
push
pop
daa
aas
sub
xor
inc
iret
aas
mov
outsb
jae
aaa
lea
stc
fcoms
xor
dec
xchg
rolb
xchg
rcrb
jne
xor
adc
mov
adc
jp
mov
pop
sarl
iret
in
test
sub
or
push
mov
jnp
lcall
mov
and
sub
sub
js
fsubrs
lcall
mov
or
pushf
fldenv
pop
jp
mov
cmc
out
jns
or
jg
cmpsb
loop
mov
xorl
xor
cs
cmp
xchg
add
std
ja
mov
and
lods
or
add
xor
repnz
loope
and
pop
xor
xlat
jle
add
and
imulb
sbb
sub
cmp
dec
xor
fstpt
push
cmp
mov
scas
xor
jns
lcall
or
push
lret
stos
test
fidivl
cld
out
test
or
call
mov
mov
mov
and
movb
cli
in
mov
mov
out
fsubs
leave
jp
shrb
mov
cld
xor
sbb
xchg
sub
cmp
repz
daa
outsb
inc
sbb
incl
mov
sub
sbb
sbb
cmp
mov
add
daa
push
imul
lods
dec
ss
sbb
in
mov
adc
fwait
icebp
jl
mov
xor
frstor
stos
cmp
loop
int3
dec
fbld
sti
jg
xchg
dec
rol
xchg
out
andb
sub
leave
js
out
add
les
insl
ret
cmp
pop
jae
inc
cmpsl
fldl
daa
xor
inc
sub
loope
pop
ret
push
es
pop
xchg
or
ljmpw
push
out
sti
imul
inc
or
adc
push
fbstp
cli
jbe
pop
or
push
loop
mov
movsl
imul
repz
sbb
sub
mov
mov
jge
sbb
and
les
ror
cmp
rolb
mov
je
dec
xchg
pop
sarb
cld
rcr
mov
push
adc
lock
test
inc
dec
xlat
sub
xchg
or
out
and
sbb
repnz
pop
mov
adc
or
cmp
pop
sub
mov
js
stc
sahf
and
aad
fadds
xchg
adc
cmpsl
loop
and
jmp
pop
pop
adc
insl
lahf
addl
adc
xchg
jb
filds
push
scas
fwait
push
pop
jno
into
xchg
js
insb
pop
sub
into
dec
xchg
cmp
xchg
sub
inc
dec
inc
sbb
or
mov
mov
in
add
sarl
les
xor
das
sbb
inc
in
dec
popf
daa
dec
mov
mov
mov
or
out
xchg
fwait
inc
mov
and
ret
jbe
lahf
fs
and
mov
lock
mov
int3
mov
pop
shll
pop
xchg
mov
jae
cmpsb
jns
jbe
imul
out
adc
mov
mov
cmc
rcrl
call
fwait
sti
sarl
neg
stos
insb
or
pop
sub
mov
push
push
out
adc
iret
jmp
mov
cs
add
fbld
mov
andb
sti
lret
cwtl
aaa
jl
xchg
test
scas
adc
stos
mov
push
sarb
mov
add
out
adc
fildl
rcrl
repnz
pop
cmpb
ja
xchg
nop
xchg
dec
stc
lea
pusha
dec
lock
pop
lahf
mov
and
outsl
or
sti
jmp
inc
lret
dec
fidivl
dec
lret
xor
loope
nop
dec
xchg
cmp
notl
mov
jbe
cli
and
adcl
inc
jge
rorl
jmp
jge
jge
inc
in
subb
push
test
dec
jecxz
stc
add
and
jns
push
fwait
xchg
dec
xchg
fbstp
mov
fs
ljmp
ja
popf
jle
pop
cmp
call
insb
push
mov
pop
or
out
sub
repz
loop
push
sub
in
lret
loop
gs
pop
hlt
ret
es
xchg
dec
add
call
stos
scas
push
push
fsubrl
inc
sbb
mov
arpl
jl
xchg
daa
popf
pop
sub
ljmp
jno
inc
xchg
pop
xor
popl
aaa
out
push
xor
addr16
jp
xor
and
or
xchg
aas
sub
fidivl
mulb
sahf
push
dec
dec
xchg
jle
cmpsb
punpcklbw
inc
outsb
stos
cmpsb
addr16
or
das
ret
cmp
mov
push
fwait
pusha
pusha
scas
pushf
arpl
insb
push
roll
ret
gs
xchg
lcall
xor
xchg
imul
dec
mov
in
mov
fistpl
cs
dec
lea
add
sub
imul
cmp
jno
pop
cli
adc
ret
into
jo
in
andl
and
ficoms
xchg
incl
push
int
loop
or
jne
fcmovnbe
pop
lods
rclb
jl
lcall
data16
mov
shlb
test
shll
movsb
imul
outsb
pushf
out
cmc
test
push
and
and
mov
and
cmpsl
loope
aaa
pop
sbb
xchg
pushf
fwait
lahf
pop
sbb
test
shl
fistpll
iret
mov
mov
mov
pop
mov
sahf
in
fnsave
jmp
in
inc
cmp
mov
xchg
xchg
jmp
mov
add
clc
or
bound
cli
adc
mov
aam
and
mov
vpcmpuw
data16
xchg
in
or
mov
aam
stc
aam
xchg
imul
pop
mov
dec
jne
sahf
cmp
lock
sub
add
push
and
dec
rcrb
stc
sahf
mov
lods
je
cmovbe
nop
ljmp
add
xchg
lock
mov
dec
rcr
sub
xor
mov
jecxz
ret
fnstsw
lds
stos
mov
in
xchg
add
mov
arpl
loope
aaa
stos
sbb
adc
js
clc
cmp
add
ja
aaa
add
in
aaa
scas
xchg
sahf
hlt
add
jp
scas
fdivrs
add
pop
int3
lods
outsl
shrl
sbb
mov
pop
lods
repz
outsb
popa
xor
jbe
ds
lds
les
lods
test
push
call
xlat
inc
mov
mov
and
cmp
sti
add
and
jno
outsl
jge
aaa
insb
xor
push
ja
or
jl
out
or
in
adc
mov
inc
sub
mov
cmpb
fs
adc
fsub
sub
shlb
mov
rolb
mov
pusha
aas
out
lahf
mov
pop
or
mov
movsl
lock
lea
test
mov
outsb
lcall
xchg
stos
inc
mov
das
inc
addr16
inc
insl
cmp
push
push
mov
inc
pop
sub
pop
test
rolb
scas
mov
pop
stos
jge
xchg
div
dec
cwtl
std
jnp
adc
es
ljmp
pop
sbb
pop
fidivl
adc
xor
jbe
and
xor
dec
test
xchg
push
mov
xor
gs
or
imul
sti
je
mov
outsl
jecxz
loop
daa
jo
sub
dec
add
and
cwtl
and
pop
test
xchg
push
push
lret
jns
movsb
add
xor
push
fwait
cmp
pop
sbb
or
pop
imul
stc
das
mov
sbb
repnz
mov
cwtl
shlb
shll
mov
mov
cmp
push
xor
aas
jbe
mov
push
dec
rcrb
or
lds
aaa
popf
in
in
push
loope
dec
outsl
mov
jns
insb
fwait
jae
leave
jg
aas
imulb
fimuls
push
sub
mov
and
sbb
gs
ret
cmc
jl
orl
and
ljmp
and
stos
aad
aad
loop
divb
into
jne
push
mov
outsl
movsl
jno
fstl
cld
lods
sbb
mov
mov
movsl
jecxz
popfw
test
cmpsb
adc
repnz
inc
mov
jge
in
jecxz
push
push
mov
push
daa
int
loope
fwait
inc
mov
push
or
out
pop
fmul
mov
cmp
fdivl
push
jg
xchg
mov
insb
pushf
adc
lea
dec
cs
jo
xchg
out
negl
sbb
cmp
or
push
jns
push
lret
aaa
loopne
add
jge
fimuls
dec
stos
cs
shrl
popa
cmp
imul
and
call
add
std
jle
mov
out
pop
mov
hlt
inc
inc
cwtl
aam
nop
xor
ficoml
or
mov
mov
iret
insb
enter
add
and
ret
mov
jp
pop
mov
add
out
or
or
push
je
pop
cmp
das
shr
filds
lcall
adc
cmpsl
lea
int3
testb
lahf
subb
mov
cmpsl
adc
sub
xor
pusha
ss
mov
fsubs
pop
mov
popf
mov
iret
lds
push
push
ljmp
push
mov
pop
lea
jbe
or
xchg
lret
cmp
jmp
adc
leave
cs
scas
stc
lcall
out
push
out
hlt
cmp
in
dec
pop
jp
xchg
inc
loope
mov
sbb
dec
cmp
stos
push
repnz
pop
mov
mov
push
jg
sub
test
mov
sub
lret
testl
add
jmp
ljmp
repz
cmovns
cmc
mov
sti
shlb
std
scas
sub
test
arpl
pushf
subb
xor
pop
dec
or
push
xchg
mov
xor
mov
rcll
rcll
mov
cmpl
ds
in
jno
mov
sbb
mov
into
aam
dec
stos
jp
dec
ficomps
jne
or
pop
dec
cltd
popf
test
add
xor
xchg
push
push
pop
xor
outsl
jb
cmpsb
inc
je
jno
add
mov
pop
ficoms
jp
incl
sbb
scas
rorb
ss
adc
clc
pusha
in
push
jmp
leave
imul
dec
jmp
push
iret
in
push
pop
lock
sti
jbe
dec
imul
sub
in
add
scas
cmp
jmp
mov
xchg
test
mov
bound
push
and
js
sti
aad
leave
xor
addr16
mov
mov
mov
jo
mov
cmp
sar
jno
lahf
scas
addb
testb
sbb
aaa
mov
movsl
sub
jmp
cmp
cmpsb
bound
movsl
mov
lock
fisubrl
push
and
in
mov
aas
lods
xchg
andl
mov
inc
or
xor
adc
dec
mov
loopne
add
dec
add
sub
rcrb
shlb
lods
clc
call
xor
mov
cli
pushf
int
jecxz
pop
sbb
pop
jno
push
pop
inc
lds
xchg
pop
xor
push
jno
cltd
orb
adc
das
cwtl
inc
lock
sarb
inc
sti
cmpsb
sbb
dec
add
fisubs
pusha
add
lret
xchg
flds
and
insb
call
xchg
or
fisubs
dec
sub
sbb
jg
out
sbb
cmc
jbe
addb
pop
cli
or
sarb
cmp
shrb
jae
and
js
cs
push
and
mov
ds
xor
hlt
orl
int3
jl,pt
orb
addr16
test
inc
jge
jne
and
addr16
test
stc
roll
imul
dec
mov
jbe
jge
sub
push
mov
cwtl
mov
int3
dec
mov
xor
mov
mov
xor
adc
inc
hlt
add
test
test
cli
arpl
into
in
inc
dec
add
ds
jae
sbb
lock
jecxz
aaa
fidivrl
dec
fs
mov
in
out
enter
jns
or
fadds
adc
ret
add
mov
xchg
add
push
idivl
lahf
inc
mov
mov
xchg
or
jne
divl
pop
ljmp
lret
pushf
xchg
cmp
xor
dec
insb
mov
xchg
cmp
xor
xchg
sbb
or
stos
mov
in
inc
jb
and
imul
xor
push
mov
add
dec
pop
inc
cmp
arpl
adc
notb
jge
loop
mov
xchg
mov
xchg
fadds
mov
mov
xor
or
or
lcall
jns
sahf
jbe
and
inc
xor
dec
push
pop
inc
mov
push
loope
scas
icebp
popf
pushf
cmc
shlb
lret
popa
mov
sub
das
push
jg
call
in
int3
cmp
scas
xor
mov
pop
mov
dec
stos
adc
push
adc
mov
pop
sar
ss
sub
jne
loopne
push
sbb
das
les
cli
jno
scas
stos
icebp
sub
mov
stc
aas
movsl
scas
sub
push
sbb
jb
sub
popa
push
test
and
cmpsb
add
push
cmp
in
mov
paddb
aam
mov
xor
cmp
aam
dec
xorl
mov
aaa
call
mov
inc
push
aaa
sbb
cmc
push
adcb
adc
cltd
imull
push
push
clc
stos
sub
and
pop
int
push
and
stos
xor
push
fistl
insl
icebp
dec
and
cmp
loop
mov
imul
cmp
cmp
sub
or
into
iret
ret
adc
cmpl
mov
push
sub
add
add
cmp
sub
pusha
pop
dec
out
xchg
sti
pop
mov
add
movl
xchg
pop
sti
pop
inc
daa
cmp
mov
test
loope
movsb
jmp
negb
fcomi
pop
jae
cmp
cmp
and
push
push
xchg
cmp
hlt
sub
ss
call
das
rcrl
mov
movsb
mov
daa
lods
cmpb
fwait
cli
int3
repnz
leave
fistps
adc
aad
lods
xchg
loopne
cmp
xor
rorb
mov
mov
cmp
sbbb
test
scas
cmpsb
mov
cmp
lods
out
fisubl
adc
mov
icebp
mov
add
repnz
and
pop
test
cs
cmp
pop
pop
fcomip
mov
inc
dec
adc
push
pop
sbb
dec
cli
mov
cli
and
inc
mov
aam
int
and
fs
jmp
shll
xchg
lret
shll
jb
comiss
dec
mov
imulb
mov
mov
or
jns,pt
jmp
add
mov
sbb
jmp
jne
mov
test
jno
inc
loop
mov
or
xchg
adc
jmp
cld
xor
dec
arpl
roll
cmp
mov
inc
lcall
ficoms
or
sub
lods
int
sar
loopne
sbb
pop
and
lds
and
cmovnp
jae
xchg
int
adc
jbe
dec
lods
mov
inc
lahf
lret
xor
jecxz
shlb
cmp
test
cmp
pop
sub
adc
ljmp
out
inc
xchg
test
xchg
xorl
jbe
in
shll
or
push
jne
adc
insb
cld
into
jle
repnz
push
pop
xchg
rolb
mov
mov
or
mov
test
lock
push
cmpsb
adc
or
and
inc
cs
cwtl
into
repz
pop
dec
add
dec
bound
xchg
gs
inc
jae
fnstcw
out
xlat
iret
jmp
in
xchg
jg
adc
sub
inc
xor
inc
push
inc
pop
sub
jle
jp
pop
cmpsb
enter
stos
pop
sbb
mov
gs
outsl
out
add
pop
and
es
lret
pusha
pop
jge
mov
cmc
jl
cwtl
sub
dec
sbb
shll
push
cmp
adc
out
adc
addl
or
or
jmp
mov
cs
sub
out
cli
adcb
dec
scas
movlps
adc
push
mov
jecxz
mov
mov
hlt
xor
cmp
lcall
push
mov
out
in
outsl
pop
das
adc
negl
mov
mov
push
push
inc
jge
push
fwait
xchg
sub
dec
shlb
sub
ljmp
dec
sar
loopne
mov
push
jmp
xchg
fiadds
and
sub
dec
lock
fs
xchg
jb
popa
xor
add
push
shr
dec
aaa
push
ret
in
cmpsb
js
jb
sbb
and
mov
pop
add
call
cmc
pop
push
xchg
je
xchg
push
xchg
fadds
test
xchg
adc
xchg
into
data16
fldt
mov
data16
push
sub
stos
push
add
aas
in
loopne
jecxz
adc
sbb
inc
outsl
fs
xor
sub
ret
adc
cmc
adc
testl
call
dec
cmp
pop
push
repnz
mov
pop
sub
jbe
ret
xchg
sub
out
in
dec
lahf
xchg
fldenv
je
orb
pop
jns
mov
xchg
movsl
into
sbbb
sub
mov
cli
or
mov
cmp
hlt
mov
outsb
mov
je
mov
push
cmp
pop
outsb
mov
rorl
cmp
sub
js
mov
cmp
imul
dec
shll
mov
mov
call
enter
dec
cmp
rorb
sub
out
push
inc
lods
les
stos
pop
das
movsbl
out
negb
sbb
das
dec
and
add
xchg
jne
push
xchg
rcrl
push
fwait
or
sub
lret
mov
ss
pop
adc
sbbl
inc
test
dec
add
mov
xor
mov
fnsave
cld
jae
rorl
jns
dec
out
mov
filds
test
jbe
test
or
insb
js
lret
dec
xchg
jg
imul
mov
ljmp
mov
jecxz
or
jne
inc
lods
jle
stc
mov
lcall
push
add
insl
sub
fcmovnu
ret
dec
sbb
or
repnz
adc
push
push
call
mov
mov
sub
divl
out
add
sbb
xchg
fsubrs
xor
pop
outsl
rcrl
clc
push
add
adcb
xchg
lret
push
mov
shl
xchg
jne
mov
std
ja
div
mov
pushf
inc
xor
inc
and
pop
sbb
xchg
pushf
aam
enter
mov
dec
jmp
xor
dec
hlt
clc
cmp
mov
cmp
mov
push
test
bound
xchg
mov
addr16
popa
inc
arpl
push
mov
addr16
aad
mov
mov
mov
push
ror
jmp
sub
push
fucom
sbb
pop
rolb
dec
jnp
fsubl
arpl
jnp
dec
push
pusha
in
adc
sarl
add
mov
ret
inc
add
jl
fildll
mov
adc
cmpsl
pop
cld
rorb
jecxz
inc
mov
pop
mov
xchg
and
in
testb
int
add
and
and
test
cmpb
sti
mov
sbb
in
add
std
jle
xchg
loopne
xchg
xchg
add
into
cmp
shrb
inc
adcb
or
cmpb
adc
aas
stos
out
je
jecxz
jb
push
call
insl
and
dec
mul
xchg
jmp
shlb
inc
pop
pop
mov
or
iret
lret
push
jae
shll
icebp
push
idiv
mov
adc
mov
scas
xchg
movsb
adcl
aam
lahf
lods
test
shl
dec
jmp
loop
inc
xchg
int
jg
jecxz
lods
xchg
rorl
ds
loop
out
sub
mov
cli
data16
loop
or
lret
inc
ret
aaa
push
std
popf
push
xchg
mov
popa
in
and
cltd
adc
js
out
sub
add
int
sub
flds
and
sarb
dec
out
mov
shr
das
mov
pop
bound
loope
cmp
push
test
or
aad
dec
jae
mov
js
in
inc
inc
pop
fadd
cmp
pop
or
neg
lock
js
sbb
adcb
inc
orl
cmp
push
pushf
fldt
mov
sbb
jle
jecxz
pop
xchg
cmpsl
aad
adc
jle
inc
decl
jne
add
call
xchg
div
adc
cld
jb
sub
or
mov
out
mov
lods
sub
pop
fadds
cmp
mov
xlat
push
shrl
add
push
int
add
ds
icebp
inc
fsubs
mov
xchg
mov
pop
jno
add
sub
aam
or
pushf
enter
push
cmp
xchg
add
test
push
adcb
loop
sub
pop
fs
loopne
outsl
loop
mov
inc
mov
imul
pop
push
push
cltd
nop
adc
aam
cmp
fstpl
mov
pop
push
test
mov
pop
xchg
je
jo
or
daa
mov
rcr
rcrb
call
push
jle
or
jnp
fcmovu
xlat
add
ret
imul
loopne
jge
fsts
imul
imul
sbb
xor
add
push
push
pop
scas
sbbb
out
sti
mov
out
test
add
mov
dec
daa
test
icebp
std
loopne
mov
dec
sbb
jp
mov
push
or
jo
mov
and
lods
ljmp
insb
mov
sti
fistpl
push
scas
push
fwait
out
jecxz
jg
jle
into
add
xor
dec
in
ret
clc
adc
arpl
aas
jl
das
push
xlat
jmp
fdivr
lahf
adc
imul
int
push
add
jbe
or
push
xchg
data16
repz
or
shr
decb
dec
inc
cmc
jmp
push
mov
es
into
int
cmp
adc
ud1
push
adc
aas
iret
xchg
jecxz
inc
das
stos
cwtl
je
out
mov
mov
mov
xchg
or
push
pop
pop
mov
dec
jmp
xor
add
mov
inc
pop
mov
outsl
add
dec
loop
fwait
in
lcall
fstpt
pop
mov
cs
adc
addr16
inc
or
stc
or
inc
lock
mov
jbe
test
pop
pop
xchg
pop
sub
mov
jae
jbe
jnp
add
sub
enter
into
mov
cmp
loopne
les
scas
jae
and
pop
inc
xchg
or
jo
pop
bound
push
aas
cld
mov
jns
jb
adc
loope
and
sarb
nop
dec
mov
out
cmpsb
sbb
subl
adc
xlat
fcmovne
or
push
mov
cmp
ret
decl
lods
sarb
mov
cld
lret
fstpl
push
call
in
stos
pushf
add
inc
adcl
shll
fdiv
hlt
push
sub
cmpsb
mov
mov
cld
outsl
mov
sbb
jbe
ret
mov
sub
add
mov
lds
jnp
int3
or
ret
pop
mov
sub
xchg
or
daa
test
mov
hlt
ljmp
cmp
push
fsubl
add
or
jb
mov
pushf
jb
rolb
sbb
lcall
imul
jmp
inc
stc
pop
bound
mov
sub
add
mov
pop
jg
shl
mov
add
add
daa
mov
lock
jecxz
aaa
shrb
xchg
sub
ror
cld
pop
scas
test
mov
xor
jnp
out
inc
add
sahf
mov
sbb
in
cli
rcll
and
or
pushf
mov
in
ret
les
rcrb
xchg
popf
sub
xor
mov
mov
repnz
loopne
xchg
xchg
xor
add
xchg
xlat
into
adc
int
loope
cltd
aad
scas
jo
std
das
in
xchg
fmull
xchg
jae
cmp
lret
stos
xor
aaa
test
xor
mov
rclb
mov
sar
les
aaa
sub
dec
jp
mov
add
inc
lret
xor
add
pop
into
pop
fnstcw
sub
ret
sub
aad
cmp
shrb
bound
xchg
in
iret
sbb
inc
imul
call
movsb
outsb
test
shl
addb
jno
andb
and
aad
xchg
mov
add
mov
daa
leave
insb
adcb
rcl
jecxz
pop
sbb
add
data16
rorl
cltd
loopne
lahf
test
mov
out
cmc
cmpsl
xorb
cmpsl
inc
adc
dec
dec
xchg
mov
sub
add
push
fnsave
inc
push
dec
or
mov
or
sahf
nop
push
dec
lock
add
add
mov
gs
roll
test
inc
jo
inc
les
dec
xlat
jae
popa
xor
lcall
ret
xchg
jno
push
push
adc
add
xchg
sti
fwait
push
in
andl
sbb
inc
leave
loop
jle
cltd
push
das
push
jo
cmp
call
mov
out
lahf
or
mov
out
adcb
cld
sub
push
clc
insl
push
cmpb
dec
push
xor
xchg
lds
mov
popf
jnp
jnp
inc
test
mov
and
mov
stos
sbb
addr16
stc
adcl
cmp
pop
scas
cld
call
xchg
pop
jmp
jo
cmp
pop
addr16
jno
dec
mov
and
ja
cmp
xchg
adc
cs
push
mov
aad
ja
or
mov
pop
xchg
ljmp
jno
in
inc
jnp
arpl
mov
test
cli
stos
in
push
cmpsb
mov
mov
push
pusha
xchg
bound
sbb
sarl
mov
adc
push
rol
test
leave
shrb
jnp
dec
inc
divl
lcall
dec
jge
add
pusha
addl
jg
call
xlat
inc
jl
push
mov
fldl
xor
mov
jmp
roll
jne
inc
insl
mov
fmul
andb
mov
rclb
mov
push
ljmp
in
and
lds
pop
pop
push
or
shrl
in
rclb
and
call
fs
mov
je
lods
stos
stos
mov
sti
add
and
jae
lea
xchg
sub
pop
xor
and
lret
jno
cmp
shl
pop
mov
mov
pop
cld
xor
mov
aaa
movsl
les
and
or
and
pop
add
jns
push
push
imul
lret
mov
xor
cmp
mov
sbb
add
add
fcomps
dec
jbe
pop
and
andb
stos
into
movsb
push
add
add
stc
inc
movl
stos
lret
mov
add
lcall
mov
in
mov
mov
cmpsl
aam
into
xor
sbb
sbbb
sbb
pop
mov
or
repz
dec
dec
sbb
xor
and
loop
out
addr16
sub
aam
jmp
push
fs
push
push
cmp
pushf
jns
out
int
push
cmp
stos
push
loope
arpl
jg
fldl
mov
movsl
aas
das
pop
push
cli
div
cli
dec
cmp
loope
les
dec
adc
push
in
jl
faddl
dec
outsl
fstpt
ret
mov
xchg
fs
jle
mov
cmp
sbb
aas
fstps
xor
jl
push
imul
lock
in
xchg
dec
or
cmpsl
xchg
lods
fmull
add
mov
rclb
ljmp
loope
xorb
nop
xchg
sbb
mov
jecxz
aas
mov
aas
jp
mov
stos
adc
or
sti
mov
xchg
sbb
adc
pop
xor
jmp
jecxz
rol
push
fs
out
xor
pushf
int3
cmpsb
adc
sbb
mov
pop
xlat
mov
sub
divb
xchg
stos
push
dec
dec
push
mull
stos
xchg
mov
in
std
push
repnz
inc
add
orb
sbb
test
js
sbb
pop
les
inc
mov
and
or
inc
cs
mul
push
pop
dec
mov
mov
ftst
cmp
dec
popa
testl
scas
jns
cmp
cmpsb
rcll
ljmp
jbe
call
loop
mov
adc
jbe
jle
jle
aam
ljmp
scas
and
adc
jb
mov
je
insb
hlt
je
xor
pop
ret
aaa
lods
aaa
icebp
iret
movsl
push
shll
xor
mov
cmp
mov
ljmp
scas
dec
xchg
pop
push
idiv
mov
pop
sbb
jecxz
decl
and
mov
insb
sti
cltd
pusha
or
add
loop
dec
hlt
sbb
or
aas
out
decl
jge
dec
push
fisttpl
out
adcb
push
into
in
insb
int
ret
lahf
scas
sahf
addl
dec
xchg
lcall
outsb
outsl
or
pusha
push
mov
adc
ds
notb
mov
mov
lahf
or
loopne
jns
int3
lea
jno
shl
in
mov
or
popa
jp
es
test
lcall
and
adc
mov
xor
mov
fwait
cmpsb
dec
lret
jno
mov
fisttpl
sbb
jmp
cltd
dec
shrb
xchg
stos
sub
stos
out
aam
cmpsb
mov
lret
ljmp
pop
stos
lods
mov
jg
push
aad
adc
add
clc
jmp
in
xchg
cmp
loop
xchg
mov
or
pop
mov
repnz
xchg
out
mov
fisubrs
adc
push
lock
cmp
into
stos
jl
out
ds
in
iret
iret
arpl
test
sbb
out
mov
push
mov
call
int
imul
add
sub
loop
stc
pop
outsl
jmp
aam
js
dec
mov
cltd
cmp
or
mov
andl
dec
test
push
inc
decl
jge
rorl
ljmp
bound
in
xlat
and
push
xchg
mov
jne
aad
lret
xchg
jg,pn
and
xchg
xchg
nop
cltd
int
xchg
dec
shl
add
xchg
jbe
ds
iret
cli
adc
data16
ret
mov
in
imul
pop
mov
ss
inc
pop
outsb
iret
iret
or
hlt
ss
enter
fdivrs
push
push
xor
inc
stos
push
insl
bnd
lea
enter
lock
cmp
push
outsl
push
pop
sub
out
mov
fs
xchg
mov
and
sti
inc
dec
lret
mov
popf
mov
push
mov
fisttps
les
jle
pop
pop
xchg
mov
mov
or
mov
hlt
inc
lods
out
adc
jne
mov
orb
rorb
out
push
jl
push
sbb
mov
mov
add
insb
push
dec
xor
lcall
push
mov
inc
push
mov
popa
sub
clc
aaa
inc
outsb
outsb
mov
xchg
out
mov
es
jmp
cmp
or
cltd
pop
fdivrp
dec
mov
pop
pop
push
pop
or
lock
mov
xorb
mov
test
mov
sbb
call
or
adc
cmp
pop
daa
cmp
into
scas
fs
js
das
xlat
movsb
dec
inc
in
xchg
dec
hlt
scas
xchg
add
push
xchg
int
jmp
lahf
mov
fildl
pushf
cwtl
aaa
cli
push
mov
mov
repnz
mov
jno
fsts
xchg
xchg
pop
add
xchg
mov
inc
ja
lock
sbb
cmp
jne
stc
cmp
mov
stos
and
jle
push
dec
mov
daa
and
mov
push
fwait
sbb
es
imul
imul
sbb
jae
adc
movsb
mov
jb
icebp
jo
jns
adc
mov
popa
pop
fstl
retw
push
aas
rolb
popf
mov
cmp
jbe
xlat
or
adc
rcll
push
push
fld
mov
decl
push
push
jge
bound
fs
adc
or
cmc
movsl
hlt
sub
push
out
jge
addr16
mov
je
lcall
movsl
imul
in
xor
pop
clc
ret
das
lock
jae
ret
and
mov
jmp
dec
pop
sub
sahf
mov
push
shl
mov
adc
push
mov
add
cmp
or
sbb
sub
xchg
sbb
shlb
pop
adc
or
mov
push
adc
sbb
les
lret
pop
add
sbb
mov
clc
fdivrl
jg
xchg
sbb
daa
adc
push
sub
dec
mov
and
arpl
jle
xchg
inc
int
add
cltd
jns
bnd
rolb
or
test
mov
rclb
xchg
movsl
and
in
bound
push
add
jp
pushf
loop
or
fsubrs
and
jb
inc
and
leave
sarb
dec
mov
jmp
pop
pop
leave
inc
push
lds
pop
mov
shr
js
pop
dec
mov
and
std
scas
test
loope
push
pop
cmp
adc
ret
test
push
fdivp
out
jns
xor
push
mov
repnz
pushf
adcl
add
adc
popa
ret
addr16
sar
lock
mov
xlat
mov
aas
push
popa
dec
mov
add
push
movnti
inc
dec
pop
push
inc
aam
dec
aas
mov
call
cwtl
es
cmp
lret
repz
fcoms
fildl
jbe
dec
cmc
mov
test
scas
mov
call
mov
jno
or
shl
iret
mov
mov
aaa
pushf
xorb
fidivrl
fisttps
in
test
movsl
stos
repz
rolb
stc
mov
mov
inc
stos
jno
sbb
push
mov
push
sahf
test
pop
or
push
pusha
jb
nop
jle
in
mov
and
pop
mov
jp
arpl
sub
shll
fiadds
sahf
es
push
mov
sbb
js
xor
jo
stos
cltd
cmp
adc
hlt
xor
mov
cltd
add
pop
hlt
sub
pop
or
sub
testl
cmp
sahf
push
xor
dec
shl
inc
imul
movsb
test
scas
fdivl
add
rolb
ja
loop
sbb
shlb
jg
mov
das
mov
int
sub
cld
ficomps
aam
cld
dec
cmp
and
or
pusha
pop
sub
push
mov
lret
mov
mov
jae
aam
lods
into
cs
or
push
fldl
pop
or
fmull
jmp
adcl
cmp
aad
push
inc
jno
rcll
hlt
push
cld
xchg
leave
add
or
sbb
inc
dec
insb
addr16
adc
inc
pop
movsb
or
cs
fdivrp
imul
adc
add
xchg
ds
stos
adc
or
xchg
jl
lret
hlt
pushl
int3
loope
mov
mov
lods
and
outsb
xchg
arpl
mov
mov
rol
jne
xor
mov
lret
adc
mov
gs
btc
sbb
int3
sub
cmp
inc
adc
pop
adc
cli
push
lea
mov
pop
imul
in
sub
mov
call
or
repz
inc
or
mov
in
nop
lcall
mov
sub
dec
movsl
mov
add
cltd
andl
loop
dec
sbb
subb
cld
or
inc
mov
fs
cmp
pop
xor
pushf
jecxz
push
sub
push
xchg
aas
jnp
ljmp
cmp
sbb
cmp
aad
imul
xchg
cmp
adc
bound
push
cmpsl
mov
das
mov
jmp
imull
rorb
xchg
cmp
ljmp
jne
mov
fldt
push
sbb
cmpsb
mov
jno
pop
jp
pushl
call
or
imul
xor
cmp
mov
imul
sub
mov
mov
sub
mov
cmp
xchg
jecxz
dec
pop
sbb
or
js
pop
lcall
nop
fs
hlt
out
jecxz
cmp
aad
mov
mov
dec
sub
xchg
cwtl
or
mov
and
popf
imul
xor
push
sahf
mov
push
aaa
mov
push
pop
gs
lock
pop
push
xor
mov
and
jb
into
int
test
jns
add
sbb
push
in
inc
imul
sbb
and
test
sub
dec
test
fwait
and
cmp
scas
xor
pop
jno
xor
mov
add
iret
loopne
call
stos
adc
sub
test
inc
dec
jne
insb
imul
fcomps
sub
dec
outsl
lret
gs
mov
les
fs
aas
lds
leave
mov
cs
outsb
repnz
fistl
jp
sti
push
pop
mov
dec
and
in
jmp
sbb
jne
adc
cmp
test
loop
shll
dec
in
test
aas
xchg
xor
stos
sub
add
cmpsb
dec
pop
outsb
push
out
xchg
clc
fwait
pop
xor
adc
mov
icebp
scas
cmc
rolb
outsb
add
cmc
test
sti
sbb
xchg
mov
gs
pop
dec
das
ficomps
and
popa
data16
pop
hlt
xchg
pop
mov
insb
add
pop
jge
fadds
dec
sbb
sub
push
test
sbbl
lods
idivb
or
data16
mov
pop
or
ret
pop
dec
cmp
or
dec
jbe
pop
ficoml
es
pop
sbb
lret
addr16
sahf
mov
dec
cmp
add
enter
lods
rcrl
lret
inc
lret
icebp
fcoms
lcall
cmpsl
or
mov
inc
int
lea
sub
jno
enter
pop
dec
cmp
aad
cmp
sbb
or
fistpll
and
inc
mov
mov
add
dec
add
cltd
stc
jmp
jecxz
dec
and
addr16
jb
mov
mov
dec
call
movsl
shll
inc
lods
mov
push
and
or
xor
push
addl
mov
lock
outsl
adc
sub
push
jmp
jb
call
push
outsb
rol
pop
in
cmp
leave
sbb
daa
dec
or
mov
or
add
sub
fwait
inc
cwtl
imul
orb
mov
inc
jae
mov
mov
pop
les
sub
out
loop
pop
pop
mov
add
call
aam
add
sub
pushf
mov
mov
pop
mov
movb
jbe
cmp
js
add
lods
imul
mov
add
xor
or
in
test
xchg
imul
test
bound
xchg
sbb
mov
push
push
and
aad
sbb
pop
imul
leave
sbbl
jbe
rorb
aad
aad
sarb
mov
int3
addr16
rorl
sub
gs
ror
jne
mov
lods
pop
adc
hlt
dec
xchg
jnp
fcompl
ret
cld
xchg
mov
mov
test
mov
xchg
push
pop
mov
jno
mov
mov
xchg
les
popa
pusha
popl
xchg
test
stc
aam
int
ja
addr16
xor
out
stos
xlat
adc
mov
jp
pop
aad
enter
pop
push
ss
hlt
sarb
mov
in
test
pop
jp
stos
sbb
jg
cmpb
pop
fisttps
scas
insl
aam
popf
adc
rcr
cmp
pop
mov
sarb
imul
inc
inc
in
stos
test
and
fsubrl
xchg
xchg
or
cmp
jno
mov
push
xor
addr16
cltd
dec
and
cwtl
int
jge
bnd
std
int3
inc
push
sbb
sti
cld
pop
sub
int
lods
in
sahf
xchg
data16
push
mov
jl
pusha
inc
or
mov
or
outsb
sbb
ss
pusha
adc
movsl
cmp
push
dec
inc
cmpl
pusha
fldcw
fcmovb
push
ret
push
inc
fsubs
pusha
xor
pop
movsl
mov
cmp
inc
cmpsl
enter
dec
xor
push
mov
fildll
cmc
lahf
popf
inc
xor
or
dec
je
cld
arpl
scas
mov
mov
bound
adc
inc
add
adc
push
loopne
cltd
adc
fisubrs
iret
and
sahf
inc
sahf
outsl
std
imul
call
and
xor
inc
fildl
stc
pop
mov
mov
lcall
lods
xchg
leave
ficompl
inc
jge
jmp
into
xlat
push
lea
mov
repnz
shrb
sahf
dec
mov
imul
loope
jmp
or
xchg
insl
loope
hlt
movsb
inc
pushf
pop
cmp
in
enter
incl
fmul
mov
mov
cmp
or
inc
sub
dec
or
in
sub
sbb
movsb
stos
sub
scas
jg
dec
mov
jge
sub
xchg
pop
sub
gs
mov
sti
adc
mov
ret
test
test
movsl
andb
inc
outsb
jb
cwtl
sub
cld
sub
or
dec
push
mov
adc
int3
cs
shll
test
cmp
add
stos
mov
dec
inc
pop
mov
or
jmp
jns
push
popf
hlt
sti
xor
lret
sub
add
movsl
add
mov
sbb
jge
mov
aam
mov
mov
popa
push
dec
ss
les
outsl
iret
sbb
outsl
push
mov
loopne
jmp
lret
sub
nop
ret
or
add
decb
ja
lea
and
insl
xchg
xchg
jp
fsubs
inc
add
adc
mov
roll
xor
mov
shlb
aas
sbb
inc
mov
xchg
pop
push
sub
or
jae
mov
mov
je
mov
in
add
lods
popf
jp
inc
dec
scas
fwait
pop
mov
aad
cmpsb
mov
push
loope
mov
jle
and
push
and
and
sub
cmp
pop
jns
xchg
fwait
loope
sti
add
jg
cmpsb
xchg
push
movsb
movsb
daa
fs
gs
test
int3
rclb
test
rcll
xchg
movsl
or
mov
movsl
push
fdivs
fs
ror
pop
adc
xchg
fdivs
ret
scas
es
sbb
jns
jno
sub
dec
mov
mov
stos
and
add
adc
movl
jle
push
adc
clc
xchg
mov
sahf
nop
jp
xchg
mov
adc
sub
call
push
push
ja
add
mov
push
mov
pop
fildl
lret
push
cmpb
dec
xchg
lock
test
xchg
je
in
inc
leave
add
inc
daa
aad
outsb
cmpsb
lcall
scas
rorb
cmc
cmc
fwait
jns
inc
adc
fimull
shrl
jle
rcll
pop
and
enter
jmp
cmp
jno
or
jp
leave
leave
shll
lods
mov
cmp
icebp
loope
int
mov
scas
mov
enter
les
inc
xrelease
adc
lcall
or
adc
push
and
ds
inc
repz
scas
das
jle
and
cmp
and
cmp
adc
orb
dec
icebp
lahf
dec
lret
add
aad
data16
xor
outsb
jno
sub
insb
xchg
pop
fs
push
add
jno
sub
movsb
aas
push
mov
jno
add
lock
jl
int
and
push
mov
insb
shlb
scas
and
or
lret
jo
es
ljmp
push
adc
or
mov
jmp
dec
dec
lcall
push
mov
xchg
lods
test
ror
mov
sti
data16
test
adc
negl
lret
idivb
lock
shll
aas
jmp
pushf
mov
or
lret
in
jecxz
pushf
sahf
cmpb
or
jnp
lds
aam
lock
repnz
pop
xchg
mov
loope
call
xchg
xchg
adc
sbb
rorb
sbb
xor
das
imul
scas
sub
ja
cmp
add
pop
sahf
xchg
pop
das
pop
sbb
or
xor
jle
rclb
cmp
mov
add
imul
pop
scas
in
sub
aas
arpl
inc
sbb
push
mov
icebp
xor
lahf
lock
mov
inc
sub
fwait
xchg
popa
jns
outsl
aam
mov
and
push
dec
js
jns
pop
mov
out
mov
xchg
or
add
mov
pop
sbb
callw
in
mov
stos
mov
lods
pop
in
or
push
mov
pop
rorb
adc
pushf
sbb
xchg
lahf
aas
xorb
rolb
mov
inc
sbb
inc
nopl
mov
mov
dec
addr16
cmp
lds
push
dec
add
xchg
sahf
sub
out
fs
and
pushf
rcll
jl
cltd
movlps
out
les
ret
adc
loop
or
jae
andb
data16
or
shrl
stc
push
pushf
int
mov
fnstsw
mov
fstps
cmpsb
lds
sbb
stos
sbb
xor
and
outsl
jb
push
iret
mov
ret
pop
mov
jge
popf
add
enter
sarb
lret
ja
push
clc
add
dec
int3
mov
jno
loopne
mov
jb
testl
rorb
cmp
test
dec
out
add
loopne
mov
push
push
subl
xor
mov
lds
or
push
jne
leave
lods
push
adc
sub
ljmp
or
lahf
mov
dec
or
inc
sbb
jno
out
adc
add
shll
push
sarl
mov
fistpl
pop
jnp
mov
movsl
mov
or
mov
push
inc
out
cmp
sub
fcmovnbe
fdiv
xchg
sub
pop
jb
and
js
aam
repnz
je
push
pop
iret
inc
pop
outsb
or
xchg
jl
call
sub
and
jg
stc
push
pop
mov
cmp
add
cmp
cmc
mov
jmp
mov
cmpb
xchg
xlat
fucomp
js
shr
jmp
adc
mov
sarl
into
xor
enter
aaa
cwtl
fstps
mov
ss
or
dec
adc
dec
mov
fisubl
addr16
mov
fsub
xchg
pop
dec
cmp
xchg
int3
pop
pusha
cmp
out
fs
mov
test
mov
add
xor
test
push
in
imul
xor
call
sub
add
push
jne
fwait
sub
mov
mov
jne
jno
dec
xchg
sbb
shll
cmpsb
mov
fbstp
enter
add
popf
add
cbtw
ljmp
inc
jle
es
lahf
or
and
mov
lahf
xor
pop
ja
out
add
aad
pop
jmp
jne
mov
push
int
pop
shrb
je
dec
sbb
push
mov
add
push
es
ret
and
pop
cmp
and
leave
sti
js
lods
adc
mov
mov
scas
stc
fucom
test
push
test
loop
jns
lret
and
add
roll
lahf
fcoml
int
add
jo
xor
mov
incb
movsb
enter
test
mov
popa
mov
cmp
popf
pushf
movsb
popf
mov
pop
call
loopne
pop
ret
cli
addr16
aam
xor
sub
cs
and
adc
jb
inc
push
pusha
bound
sbb
pop
cmpsb
or
sahf
daa
inc
add
into
es
leave
mov
pop
aas
dec
sbb
ret
xchg
in
lret
shlb
add
lret
ret
push
jl
stos
jns
insl
xor
pop
roll
gs
push
fwait
mov
cmp
push
lcall
sub
xchg
and
and
or
mov
popa
lock
cli
inc
mov
pusha
add
lea
pop
stos
mov
test
add
inc
mov
xor
add
or
int3
xchg
dec
dec
pop
xchg
sarb
push
jb
pop
push
rcrb
or
pop
inc
stos
pop
add
aaa
inc
invd
je
sti
lea
mov
pop
add
xchg
and
lcall
pop
and
inc
mov
repz
mov
xor
mov
xor
orl
lcall
loopne
xchg
pop
loopne
add
arpl
shrb
je
or
adc
int
jmp
add
mov
stos
inc
test
mull
mov
popf
aas
enter
mov
or
dec
lahf
lcall
subb
jg
aaa
rep
xchg
cmpsb
test
pop
div
adc
fisubs
add
push
test
bnd
jecxz
hlt
lds
cmc
push
xor
stos
sbb
push
or
mov
mov
xor
sub
orb
les
push
test
adc
push
cmp
dec
les
xchg
cmpsl
inc
jne
int
hlt
shlb
jmp
pop
jl
push
testb
rcl
call
mov
icebp
mov
fsub
ret
std
ja
pop
ret
push
jl
lods
dec
test
mov
adc
mov
and
pushf
inc
cmpsl
loope
and
ljmp
je
adc
mov
clc
mov
call
or
test
ficomps
lret
out
cmpsl
sahf
arpl
xchg
insl
inc
mov
mov
push
jecxz
inc
sbb
pusha
jmp
jnp
ret
repnz
rcrb
gs
test
dec
shll
cmp
mov
and
mov
ja
pop
dec
dec
popa
push
mov
pop
mov
jecxz
in
addr16
stos
lock
adc
adc
out
pushf
or
cltd
jno
push
sub
sub
dec
dec
aam
mov
sahf
mov
mov
hlt
cmp
mov
mov
and
pop
sahf
mov
mov
orl
push
xor
adc
cmp
es
movsb
adc
mov
pop
mov
lea
das
lods
sarb
pop
jl
mov
xor
mov
loope
mov
outsb
jmp
push
cmp
dec
sbb
cmpsl
imul
and
mov
sub
lea
stos
xchg
or
adc
xchg
pop
test
sub
push
mov
hlt
das
bound
pop
push
and
sub
sub
test
test
jp
mov
xor
pop
lock
mov
lods
sahf
mov
inc
sub
add
test
inc
cwtl
mov
movsb
and
lret
shrb
fisubs
dec
lods
add
nop
and
out
outsl
adc
mov
pop
xchg
lcall
cmpsb
data16
mov
ja
mov
lods
mov
and
or
negb
sbb
loope
bound
mov
cli
push
xor
jecxz
pushf
shlb
outsb
mov
mov
dec
cltd
cmp
sub
dec
inc
inc
lods
cld
xor
out
mov
and
cmp
addr16
cltd
push
jb
pusha
mov
or
test
jmp
lods
add
aad
stos
nop
repz
outsb
mov
cmp
stos
fsubs
jae
and
push
jne
addr16
loope
sub
push
sub
std
pop
stos
push
cmpsl
push
into
xor
mov
aas
call
jb
adc
cmp
mov
lods
mov
mov
mov
jb
sub
popf
js
cmpsb
xor
lock
dec
push
into
push
add
dec
xchg
stc
dec
adc
jmp
mov
jns
mov
aaa
fwait
sub
adcl
fbstp
rcrb
pop
insl
cmc
pop
pushf
push
inc
pop
jg
ret
jmp
push
fucomip
fcmovu
cltd
fistpl
test
lret
mov
push
scas
jle
mull
mov
or
imul
clc
fildl
or
iret
or
and
mov
mov
dec
push
bswap
dec
add
dec
popf
push
test
cmpsl
xor
mov
push
sbb
flds
inc
daa
pop
xchg
mov
or
xor
dec
dec
jle
lcall
test
xor
push
or
xchg
pop
mov
adc
fdiv
ficomps
dec
loope
mov
sub
mov
jle
xor
inc
xor
mov
ljmp
mov
pop
shrl
dec
or
cmp
pop
pop
inc
xchg
inc
repz
mov
or
ds
xchg
lahf
adc
xchg
xor
mov
and
mov
fistl
clc
scas
dec
dec
cli
test
xchg
push
adc
popf
sbb
mov
and
pusha
xchg
sbb
xchg
pop
sbb
imul
icebp
fs
inc
rolb
or
es
xor
sbb
sub
imul
pop
test
data16
xor
sub
aaa
movsb
cmpsb
ljmp
call
sub
xchg
xchg
ret
cmp
mov
les
aad
std
rorb
test
sub
mov
dec
sub
and
testb
out
daa
insb
cmp
cmc
out
and
push
sbb
loopne
gs
xchg
stc
jnp
icebp
fcmovbe
xchg
dec
mov
jbe
cld
add
outsb
mov
fimuls
dec
xlat
and
push
movsb
rcrb
rcrb
fdivl
xchg
lods
jmp
push
dec
jno
dec
sbb
inc
gs
adc
cli
add
and
inc
xchg
scas
das
dec
xchg
pop
shl
inc
jle
shll
xchg
or
push
pop
mov
pop
jp
xchg
adc
inc
insb
push
aam
xor
jecxz
test
dec
sub
pusha
jle
out
sub
pusha
daa
bound
int
in
jo
es
frndint
and
cwtl
mov
aam
inc
xor
adc
push
add
addl
mov
sub
hlt
push
adc
aad
cmp
cmpb
xchg
das
or
add
roll
cmp
add
and
das
lock
out
mov
mov
outsb
xor
mov
jnp
mov
cmp
or
push
jae
jno
jle
sub
pusha
fsts
mov
cmp
jno
sbb
mov
fcompl
cmpsl
pop
sbb
in
cmc
xor
pop
in
sbb
rcr
dec
fdivrp
pushf
dec
mov
or
xlat
xchg
jns
jno
rcl
push
js
sar
scas
pop
push
xchg
pop
sti
xchg
sbb
repz
mov
xchg
pop
in
loopne
cmc
pushf
orb
xor
ss
int3
lcall
leave
jbe
pop
in
cmp
push
dec
push
add
fcomip
add
enter
mov
inc
clc
xchg
adc
xor
dec
sbb
aam
jo
mov
cmp
icebp
add
xor
sahf
pop
mov
push
arpl
sub
mov
add
add
movsl
imul
jbe
xor
or
dec
bound
sub
lret
fistpl
vcvtsi2ssl
push
push
dec
divl
mov
and
mov
add
roll
aad
dec
xchg
das
dec
je
dec
jne
movsl
aad
movsl
ja
aam
dec
mov
call
inc
rcrb
imul
xorl
lods
inc
sub
jae
sbb
idivl
mov
mov
stc
jmp
jne
data16
pop
xchg
jnp
cmpsw
xchg
inc
sbb
sub
cmp
je
and
popf
add
adc
ja
stos
sti
adc
sub
adc
loopne
or
mov
ljmp
xor
scas
scas
mov
adc
ja
xor
xor
or
sbb
rcrb
sbbl
mov
push
scas
arpl
cmp
xchg
xor
mov
mov
iret
arpl
mov
insl
cmpsl
ffreep
dec
sub
dec
ja
lock
jae
enter
dec
jge
cwtl
mov
xor
enter
jecxz
inc
mov
arpl
mov
or
loopne
sbb
mov
fists
xchg
mulb
xor
fst
and
dec
cmp
adc
adc
sbb
push
fdivr
xor
or
sti
xchg
dec
shrb
lea
or
push
xor
push
or
test
outsb
std
sub
add
repz
cmp
mov
cmc
cli
insb
and
xchg
ja
xchg
mov
negb
xchg
cli
nop
jns
mov
jne
pop
mov
leave
sbb
inc
xchg
fidivs
push
jmp
mov
mov
or
and
mov
inc
fistpl
movsw
pop
lea
lea
imul
push
mov
add
mov
and
push
mov
sub
std
push
sub
hlt
cmc
mov
pushf
push
sub
aam
or
inc
sti
cmp
and
outsl
in
dec
nop
dec
push
jns
push
sub
inc
stos
mov
mov
rclb
aaa
aas
pop
push
cmpsl
stos
and
mov
mov
adcl
fists
cltd
mov
test
out
mov
test
xor
cmc
push
sarb
jmp
add
mov
out
or
call
dec
jbe
shlb
jge
enter
sahf
xor
jle
mov
push
rcrl
bswap
mov
shll
ljmp
sbb
xlat
ficoml
sbb
repz
mov
mov
dec
aaa
add
repz
dec
jg
inc
pop
jle
repz
notl
mov
fisttpl
std
rcrb
test
jg
ds
aaa
lea
or
push
cmc
push
mov
jle
jge
or
inc
dec
lret
xchg
lcall
in
push
movb
jg
and
adc
mov
xor
dec
orl
lcall
dec
imul
out
pop
adc
clc
je
stc
xchg
xor
insl
pop
adc
inc
xor
inc
push
cli
inc
cmp
fcmovnu
out
xchg
sub
mov
pusha
icebp
cmp
fnstcw
mov
and
inc
pop
xor
mov
add
push
repz
sar
mov
shlb
jnp
add
adc
add
push
sahf
mov
ret
inc
xchg
pop
mov
test
cltd
js
mov
scas
lods
js
andl
xlat
sub
inc
mov
fstpl
adc
fs
jmp
inc
sbb
cwtl
pop
xlat
adc
ja
or
test
jo
dec
mov
or
push
iret
insl
out
inc
pop
push
aam
adc
or
lds
repnz
mov
leave
nop
fdivl
lret
scas
push
and
gs
data16
fcomps
mov
or
out
adc
insb
jbe
or
shll
pop
add
mov
movsb
dec
xchg
neg
xchg
mov
and
mov
icebp
cmp
pushf
and
mov
test
sbbb
fstps
pusha
int
scas
aas
scas
std
add
int3
or
cmc
xchg
stos
lock
aas
out
inc
js
inc
mov
je
and
pusha
cmpsb
and
sarb
pop
xchg
into
pop
and
in
cld
into
ret
bound
cmp
or
mov
arpl
enter
out
push
clc
addl
xor
add
aad
or
scas
inc
sub
lahf
jae
add
pop
add
mov
dec
mov
xchg
push
pop
fimull
mov
add
sub
adc
pop
xlat
mov
pop
mov
mov
cmc
test
outsl
inc
jno
sahf
pop
das
subb
in
pop
sbb
jle
add
adc
test
push
sahf
sub
std
divb
cmp
dec
adc
fwait
dec
xor
dec
and
cmp
in
jecxz
dec
xor
mov
jmp
and
pusha
or
jmp
int3
int
fwait
mov
xor
call
cmp
int3
jo
fcomi
pop
push
push
xchg
xlat
xor
js
adc
jecxz
push
jae
test
mov
mov
push
clc
inc
and
test
pop
xchg
cmp
and
inc
lods
mov
fildll
cmp
pushf
cmpsl
xor
imul
mov
lret
xchg
cwtl
jns
xchg
in
fs
pop
mov
aam
imul
mov
inc
adc
nop
mov
mov
lock
cmp
test
jnp
lods
pop
cwtl
iret
test
or
movsb
adc
bound
mov
subl
hlt
push
shll
test
lahf
and
lahf
cwtl
hlt
push
mov
ja
mov
ret
js
cmpl
ja
mov
cmpsl
lds
cmpsl
outsb
rolb
cmpsb
jl
repnz
dec
iret
pop
repnz
push
insl
test
push
mov
xchg
leave
movsl
sbb
dec
push
push
pop
pop
mov
faddp
shl
jo
lret
cltd
jb
jno
fucomip
lret
fisubl
mov
jl
shrl
clc
ret
stos
emms
cmp
mov
cs
and
pop
test
adcl
std
xor
xchg
sbb
push
subb
xorb
test
mov
pushf
movsl
js
jns
xor
jne
lret
or
pop
push
into
repz
repnz
mov
jae
divl
mov
push
sbb
outsl
push
jns
gs
push
je
or
dec
and
fidivl
ds
or
jne
and
adc
lods
mov
in
mov
call
pop
shlb
pop
inc
sbb
and
int3
mov
jns
bound
int3
lret
push
jb
lds
dec
sbb
cmp
push
fstpl
cmpl
call
incb
inc
inc
out
pop
aam
xchg
xor
ret
adc
fcoml
lcall
pop
adc
cmpsl
mov
inc
outsb
popa
loop
xor
sbbb
pop
sbb
dec
and
jae
dec
jge
int3
shrb
cld
and
into
jns
xlat
jmp
or
fstpl
pop
scas
cwtl
nopl
enter
out
jl
push
cmc
inc
jmp
into
leave
iret
pop
xor
sti
xchg
mov
push
test
jmp
subb
sub
jge
int3
in
dec
cmp
add
xchg
lea
jb
outsl
push
in
adc
or
fdivs
cld
jl
aad
add
xchg
xchg
pop
mov
xchg
or
insb
fisttpll
jae
in
not
pop
das
rcrl
cmp
es
lods
pop
subl
int
out
push
scas
pop
pop
imul
je
add
fst
mov
inc
popf
dec
sub
fs
pop
xchg
adc
fxtract
mov
ss
or
roll
stc
cmp
jecxz
mov
inc
ss
das
mov
adc
pop
mov
xchg
mov
xor
jae
leave
out
cmpsb
or
pop
add
mov
repnz
int
std
push
add
movsbl
and
dec
and
push
aas
ss
mov
xor
and
bound
add
cmpsl
test
add
fwait
jae
das
push
inc
xor
push
inc
adc
jb
push
cld
mov
xchg
clc
aas
mov
jle
cmp
pusha
xor
jbe
mov
aaa
mov
lahf
arpl
cmc
out
loopne
push
movb
push
aad
outsb
xchg
cmp
push
jno
je
sbb
mov
inc
adc
sbb
xor
insb
adc
cltd
daa
push
adc
inc
insb
push
mov
sbb
icebp
je
mov
adc
in
xlat
jecxz
dec
js
or
fs
add
outsl
sti
mov
or
arpl
cmp
fldt
loope
jge
in
nop
rclb
shl
outsb
lret
dec
cmp
inc
rorb
xchg
ljmp
lea
stos
jl
and
push
xchg
fdivrl
sub
add
mov
movsl
mov
arpl
add
mov
rorl
call
sbb
pushf
rcrb
shlb
movsb
push
mov
mov
bound
test
jle
inc
iret
fsubl
add
dec
mov
sub
sub
mov
std
add
xchg
shll
ja
mov
gs
outsl
fs
xchg
xchg
pop
stos
pop
call
and
popa
stos
int3
sbb
mov
repz
push
into
imul
aad
dec
popl
in
adcb
mov
adc
sti
test
and
mov
sbb
xor
jnp
push
ror
lahf
push
sub
mov
stos
lds
nop
test
fmuls
js
mov
ja
fsubs
mov
inc
or
inc
out
mov
out
pop
inc
pop
ret
xchg
out
dec
sub
push
inc
pop
pop
push
rorl
imul
sub
sbb
adc
jp
sahf
in
fbld
test
icebp
out
int
xchg
fisubrs
test
xchg
data16
icebp
pop
in
push
or
xorb
inc
fwait
and
dec
sub
js
out
mov
jmp
movsl
daa
mov
or
dec
pusha
rcrl
inc
idiv
xor
dec
adc
in
stos
sbb
pop
mov
imul
inc
popf
xchg
add
sub
mov
js
pop
roll
pop
mov
or
jp
adc
mov
or
jle
inc
lods
and
adc
xchg
pop
cs
hlt
shll
insl
cmc
jl
test
dec
lods
xchg
call
test
loop
push
dec
inc
leave
test
fidivrl
subb
ljmp
call
rol
and
mov
sub
ret
bound
rclb
frstor
fwait
adc
sbb
cmp
and
sbb
sub
dec
pushf
rcll
sbb
leave
dec
inc
andl
jo
hlt
dec
jge
adc
add
stos
mov
mov
cli
lock
stos
xchg
imul
sahf
out
sub
push
cltd
dec
test
xchg
and
andl
cmp
inc
push
push
je
adc
clc
xchg
jl
mov
test
mov
or
adc
push
rclb
cmp
iret
or
add
in
cmp
cmp
pop
js
ljmp
mov
and
add
jmp
add
pusha
mov
jno
in
mov
push
rolb
sbb
mov
add
fimuls
and
inc
xchg
inc
je
mov
shrb
mov
sbb
adc
push
jle
into
mov
xchg
push
aaa
pop
arpl
ja
mov
push
cwtl
rcl
int
adc
dec
xlat
es
sti
cmp
pop
test
push
xchg
or
fstp
andb
sub
xor
pop
test
jbe
mov
das
cs
rclb
les
lods
xlat
jle
inc
aad
mov
jno
xor
push
and
inc
inc
jo
ljmp
out
cmp
mov
inc
fwait
popa
popa
cli
in
cmp
cmpl
call
xchg
inc
or
pop
mov
adcb
loopne
out
sbb
and
xchg
in
aad
cmp
mov
ret
arpl
push
sbb
jno
std
push
arpl
jno
push
xchg
pop
decl
xchg
lcall
test
inc
and
mov
xchg
int3
insb
push
hlt
fxch
or
inc
and
adc
mov
ss
xchg
imul
mov
cmpsl
fwait
mov
inc
arpl
or
dec
inc
jnp
lahf
fisubs
fistpll
sbb
insl
mov
mov
adc
push
pop
hlt
arpl
xor
mov
mov
std
and
jecxz
jne
sub
xor
out
movsl
leave
cmpsb
js
adc
jb
ss
shlb
test
jle
cmpsb
jbe
dec
mov
neg
mov
sub
repnz
push
and
inc
aaa
subl
inc
ja
daa
cmpsb
lret
aam
push
leave
dec
mov
hlt
or
aas
les
push
xchg
dec
bound
lret
adc
pop
sub
dec
iret
sbb
loopne
popa
data16
mov
mov
leave
pop
movsl
xorb
orl
pusha
int
mov
rcll
in
and
pop
loopne
inc
outsl
fistpl
dec
sbb
add
fisubl
and
mov
movsb
adc
add
sbb
or
xor
pop
not
and
scas
sub
or
push
mov
iret
sbb
or
pusha
fiadds
adc
jae
jns
xor
cmp
inc
scas
ss
jge
stos
sarl
test
adc
lds
aaa
or
std
mov
xor
cwtl
mov
dec
xchg
icebp
test
and
mov
out
inc
repnz
mov
outsl
dec
mov
mov
jge
popf
js
push
xlat
ss
sahf
movsl
push
in
pop
daa
in
adc
iret
xchg
rcrl
dec
mov
out
adc
out
insb
jb
mov
cmpsb
xchg
xor
mov
je
push
pop
testl
int3
int
out
adcl
sub
hlt
pop
add
sbb
cmp
shrl
xchg
rcl
imul
jmp
and
jo
inc
xchg
and
imul
or
push
inc
mov
pop
insb
push
mov
daa
pop
jecxz
jnp
and
orb
int3
push
pop
and
fisubrs
add
fistps
mov
inc
cltd
pop
jno
mov
jae
cwtl
inc
out
pop
push
pop
repnz
pop
lahf
jp
lret
cli
mov
hlt
in
and
mov
jnp
fbstp
das
and
mov
adc
pop
lcall
cmp
cmc
mov
outsl
xor
das
xchg
in
sbb
push
pop
in
inc
adc
jp
jmp
dec
cltd
lret
xor
push
mov
fidivs
mull
lret
in
push
push
xchg
nop
cmpsb
es
mov
rol
and
jo
cmp
cmp
and
push
mov
cmp
adc
push
cmp
in
loope
mov
aam
lret
push
inc
stc
ljmp
push
out
jge
mov
pop
or
call
mov
iret
pop
xor
mov
cmc
push
or
mov
mov
jno
out
jno
mov
xor
mov
sarb
push
xchg
sahf
mov
rolb
cmp
imul
scas
xlat
fldt
aam
push
sbb
cmp
lahf
inc
call
xchg
or
enter
xchg
jo
jo
or
loop
pushf
xorb
mov
sarb
push
dec
dec
das
int
test
xchg
call
and
aad
mov
pop
dec
mov
movsb
lea
mov
leave
pop
loope
or
adc
sarb
push
movsb
stc
les
mov
movsl
das
sarl
push
hlt
xor
inc
loope
mov
es
or
cmp
mov
pop
sar
mov
enter
into
lods
scas
scas
stc
jle
cmp
push
stos
cmp
xor
das
cmpsb
mov
push
das
out
xchg
or
pop
push
test
mov
xchg
rclb
adc
add
ja
push
mov
into
dec
and
or
jno
test
and
inc
test
sub
mov
and
scas
in
jo
int
xrelease
xor
adc
add
and
lcall
sbb
out
and
arpl
adc
mov
adc
xchg
nop
adc
lcall
pusha
xchg
aaa
sbb
mov
add
adc
pop
cmc
gs
movsl
push
push
cli
pop
and
gs
pop
popa
xchg
das
pushf
imul
xor
loop
or
iret
shll
outsl
sub
add
mov
es
cmpsl
push
and
es
aad
dec
adc
cli
xchg
inc
dec
test
push
fistl
cmp
add
in
icebp
into
mov
push
xor
xchg
jne
push
dec
sahf
es
push
mov
and
int
xchg
mov
movsb
pop
cmp
push
fwait
addr16
jne
jo
sbb
jae
jo
push
jb
ss
jmp
mov
pavgw
mov
inc
push
mov
and
hlt
push
jge
pop
add
add
push
in
das
loope
das
scas
gs
pop
arpl
in
pop
lahf
inc
out
lds
pop
cld
dec
sbb
stos
push
xchg
out
dec
sbb
mov
or
xchg
push
xor
mov
and
pop
jo
sti
pop
mov
loop
pop
inc
push
pop
jo
inc
xchg
daa
sti
lret
jno
jmp
sub
jne
stc
cmpsb
push
out
add
iret
mov
inc
mov
bound
or
scas
sub
mov
mov
sbb
addb
dec
es
dec
push
xorb
repz
fdiv
sahf
sbb
ret
push
push
adc
lods
leave
lods
sub
scas
adc
in
xchg
jbe
hlt
jl
test
daa
jmp
lret
mov
sub
and
sbb
pop
loop
adc
dec
jno
push
stos
sbb
jg
cmp
adc
jl
dec
call
mov
mov
repnz
or
pop
push
leave
inc
adc
jno
mov
inc
inc
fistpl
js
mov
dec
hlt
test
cmp
or
outsl
push
cld
aas
sarb
orl
jg
jmp
das
dec
pop
sub
jnp
pop
adc
test
add
test
fsts
cmpsb
mov
out
arpl
lret
xor
nop
int
fs
mov
inc
ret
push
insl
sbb
sbb
add
sarb
cmp
cmc
cwtl
idivb
add
pop
cmp
pop
push
icebp
shl
mov
and
xchg
and
adc
sub
in
mov
xchg
push
mov
mov
xor
int3
ss
cmpsb
in
stc
cmpl
aas
and
jmp
and
mov
cmp
mov
sub
in
push
fbld
imul
js
sub
sbb
jle
sbb
jge
bound
sub
insl
cmp
and
inc
jae
ret
push
mov
or
imul
sub
fldenv
mov
dec
pop
add
push
stc
imulb
inc
fimuls
gs
loope
das
out
and
fwait
into
inc
movsb
jg
aaa
or
cs
lds
xor
push
je
jns
sub
push
inc
addb
movsl
dec
rdtsc
xchg
in
mov
mov
call
inc
adcl
sub
push
pop
xor
sub
xchg
jle
and
dec
pop
lock
lds
xchg
push
popl
into
fmuls
icebp
negb
pop
mov
cmp
or
idivl
adc
pop
int
inc
imul
aaa
xchg
or
inc
daa
shll
or
sarl
xor
push
and
sub
jg
dec
movsl
in
loop
add
mov
icebp
push
push
push
jecxz
in
add
out
cmp
pop
movsb
cmpsb
fiadds
inc
movl
lahf
pushf
das
call
in
ss
mov
pop
ret
shll
ljmp
mov
imul
jge
loop
ja
loopne
mov
ret
xor
xchg
sub
mov
add
data16
dec
pop
inc
mov
push
jo
test
fidivrs
lods
sbb
and
and
lahf
fwait
jge
dec
sbb
rcrl
icebp
lahf
jae
popf
sbb
xchg
inc
inc
les
adcb
cs
sub
movsb
pushf
nop
pushf
pop
xlat
mov
adc
cmc
inc
inc
dec
inc
je
mov
pop
cmc
fisubs
push
push
add
js
imul
push
ds
sbb
xor
mov
inc
pop
sub
sbb
daa
out
or
mov
sbb
lret
or
in
sub
mov
xchg
lcall
fistpl
ja
push
aam
aam
ja
gs
push
mov
mov
push
std
loop
lock
xchg
jno
or
arpl
sbb
imul
fsub
xchg
fiaddl
outsb
adc
lock
sti
mov
pop
mov
adc
sti
xchg
jns
psubq
dec
mov
pop
roll
push
xchg
clc
add
gs
xor
pop
xor
scas
scas
sar
mov
mov
or
fiadds
adc
xor
adc
push
push
popf
push
lds
stos
inc
push
jge
cmp
repnz
sbb
cmpb
insl
jns
loope
mov
mov
push
jo
mov
push
xlat
js
mov
mov
sarb
dec
or
fs
fnsave
roll
push
repz
and
clc
xor
add
test
dec
orb
pop
pop
or
dec
mov
fistpll
in
dec
dec
mov
cs
into
mov
repz
je
cmp
xchg
jl
icebp
lret
xchg
mov
in
sarb
inc
imul
push
inc
into
cmp
dec
mov
clc
pop
and
stos
push
jo
dec
add
ljmp
popf
int3
and
clc
shll
mov
lea
push
ds
mov
jmp
cli
xchg
sbbl
sbb
and
add
test
jae
cmp
js
ljmp
inc
dec
iret
mov
cmp
call
scas
lods
push
sub
stc
shll
ja
lods
adc
sub
sub
sub
popa
or
inc
ret
jge
inc
in
pusha
repz
push
icebp
adc
push
sub
in
addr16
pop
jne
cmpsl
sbb
mov
sahf
int3
mov
shll
pusha
mov
out
in
fwait
pop
cmpsb
movsb
jl
cltd
cmpsl
mov
push
lret
imul
popa
xor
mov
push
pop
popf
jge
in
cmpsl
jb
inc
jge
jge
pop
fs
aad
lds
lods
and
clc
enter
add
pop
insl
adc
aaa
cmpsl
mov
imul
push
add
int3
mov
mov
and
pop
jge
fsubrl
add
and
outsb
lahf
mov
adc
cmp
jns
mov
push
es
aam
push
into
pop
add
sarb
or
pushf
fsub
adc
mov
ret
lds
sbb
orl
loop
or
repnz
sti
sahf
arpl
nop
dec
xchg
mov
mov
mov
pop
mov
xchg
outsb
jmp
adc
adc
mov
pop
mov
xchg
pop
test
dec
int3
push
dec
pop
insb
jns
pop
mov
cmp
stos
pop
push
xchg
in
mov
testb
test
loop
ja
adc
bswap
fdivs
mov
adc
das
pop
sub
into
cmp
cld
nop
aas
inc
pop
jnp
stos
sub
in
stc
jbe
inc
jae
faddl
pop
jl
cli
mov
sti
orb
jo
fs
mov
pop
jb
xchg
add
addr16
fs
sub
mov
in
out
mov
or
icebp
pusha
out
add
shrl
sbb
xchg
gs
xor
ss
hlt
or
add
pop
sub
sbb
test
xchg
icebp
fsts
mov
jle
dec
das
mov
in
shrl
lds
repz
xchg
push
cmpsl
and
test
or
outsl
pop
push
push
mov
je
arpl
or
sbb
lea
out
aad
insl
xor
lret
or
jnp
shll
xchg
roll
bnd
or
setb
in
nop
inc
add
incb
xlat
push
cmp
fsub
adcl
imull
xor
jnp
adc
xchg
fcoml
not
xor
pop
fldenv
outsb
dec
sub
shr
jns
scas
mov
or
adc
jmp
inc
insb
push
mov
sbbl
popf
pusha
push
jge
movsl
bound
out
and
ds
or
xchg
pusha
push
data16
add
movsb
lods
xchg
mov
pop
and
jo
lret
pop
stos
mov
dec
add
das
xor
cli
shrb
mov
inc
push
pop
xor
xor
rcr
shrb
or
cmp
pop
xchg
pop
pop
shlb
and
vpmaddwd
cmp
pop
nop
lcall
inc
push
rclb
mov
adc
ss
das
hlt
outsb
jb
xor
dec
stos
or
call
aam
mov
and
dec
xor
in
sub
stos
mov
inc
sub
adc
dec
pushf
and
jmp
jne
mov
sub
push
stos
dec
lcall
nop
lea
and
add
repz
sahf
push
inc
inc
jp
xchg
cmpsl
sbb
jb
dec
or
mov
mov
mov
adc
ss
mov
add
sbb
testb
push
add
loop
xchg
orl
xchg
mov
je
call
inc
sub
push
pop
or
xor
call
mov
fisubs
pop
inc
mov
xchg
mov
jo
sbb
imul
adc
hlt
movsl
xlat
jb
pop
cwtl
and
inc
adc
into
fisubs
dec
xchg
cmp
jns
push
sbb
pop
adc
xor
out
adc
xchg
add
mov
out
inc
push
push
adc
in
add
push
dec
xchg
lods
int
fwait
pop
mov
and
into
adcl
leave
push
mov
fiaddl
add
out
fcmovb
cld
mov
lret
fadd
mov
adc
add
mulb
gs
aas
inc
push
into
inc
push
cmp
mov
rcl
out
js
pusha
adc
lock
inc
je
mov
xor
push
imul
dec
xchg
jo
xor
test
lahf
jl
pop
push
and
xlat
sub
fsubl
mov
pop
leave
ficoml
dec
pop
pop
push
mov
daa
mov
into
add
mov
movsl
testb
enter
jge
test
inc
inc
ror
sti
xchg
sbbl
and
dec
fstl
push
iret
cltd
fwait
adc
add
cmpl
sub
mov
sub
stc
mov
lock
add
mov
rorb
dec
mov
mov
sub
int3
xor
and
or
push
mov
popa
clc
iret
je
jmp
gs
mov
adc
test
and
pmuludq
cmp
xchg
test
pxor
iret
adc
inc
sbb
and
nop
add
mov
xchg
mov
push
push
popa
or
cmpsl
outsl
push
dec
repz
inc
mov
xchg
jno
pop
jb
sub
dec
dec
movsb
rcrl
ljmp
or
add
out
scas
loopne
cli
push
repz
push
out
ja
jae
push
pop
xor
cmp
ljmp
jne
pop
and
mov
fucomp
scas
ljmp
and
and
std
pop
shll
jecxz
cmp
nop
call
mov
call
adc
xchg
mov
shll
hlt
xor
add
out
loope
js
mov
pop
cmp
lds
cs
push
pop
sub
mov
lods
enter
in
test
out
adc
jae
addr16
loopne
and
cmpsb
lods
lods
jg
and
fisttpll
ret
clc
in
sbb
mov
adc
lea
push
add
push
enter
jns
lock
mov
mov
or
inc
inc
sbb
dec
icebp
cmc
mov
cltd
mov
rcrb
jmp
aaa
test
shl
idiv
inc
in
cmpsb
cmp
icebp
sbb
popa
push
fwait
xlat
test
xchg
loop
popa
test
dec
sbb
add
cmp
mov
mov
popf
xchg
shrl
pushl
scas
jle
fscale
xchg
stc
ficoml
data16
jp
or
aaa
and
or
mov
or
xor
fstl
int
hlt
imul
ss
xchg
out
mov
repnz
xchg
loopne
scas
cmp
add
loop
cmpsb
sub
jbe
xchg
ljmp
das
mov
mov
push
cmp
out
movsl
into
into
ret
sti
scas
enter
js
xchg
pop
push
into
leave
pop
arpl
jne
rcrb
repnz
out
push
mov
stc
or
xor
mov
sahf
cltd
cmp
decl
jmp
sub
enter
pop
inc
add
test
ljmp
icebp
popa
pop
xchg
mov
sbb
dec
insb
inc
lret
cmp
mov
sbb
sbb
fsub
mov
addr16
sbb
sub
jne
cmp
mov
xchg
jne
pusha
inc
sub
sub
jb
out
popl
cmp
inc
lret
pop
fcompl
lret
inc
fucomip
push
dec
inc
ds
jns
mov
imul
movl
adc
mov
std
lret
xchg
sbb
sub
cmp
out
pop
popf
pop
jo
pop
push
cmp
and
add
fprem1
enter
fneni(8087
loope
movsl
stos
shl
sub
cmpsb
xor
mov
lret
xchg
dec
dec
popa
inc
dec
gs
sub
push
movsb
lret
xchg
mov
repz
js
mov
xchg
push
jmp
fs
push
pusha
movsl
cld
inc
jg
and
mov
shl
out
popf
pop
cmp
mov
out
jnp
into
ss
ror
stc
jge
movb
xchg
cld
and
inc
aas
aas
sbb
dec
and
push
mov
lahf
insl
imul
lds
repnz
cmp
nop
pop
insl
shll
int3
ret
movsl
lods
sti
adc
sub
aas
mov
clc
imul
cmp
push
xor
push
out
lret
mov
iret
loop
jg
jp
andl
adc
std
aas
and
std
mov
mov
jl
ja
push
xorl
scas
cmp
xchg
inc
inc
sbb
adc
andl
jl
repnz
arpl
neg
loop
sub
int3
lahf
loope
dec
hlt
cwtl
scas
popf
and
scas
jb,pn
sub
aad
mov
lods
and
adc
stos
scas
shl
in
sub
sub
stc
xor
inc
lods
pop
jns
testl
sub
sub
inc
sub
push
insl
mov
arpl
into
jle
add
dec
arpl
and
xorb
aad
testl
xor
mov
cmp
rcrl
pop
out
je
dec
cmp
psubsb
mov
dec
insl
pop
cmp
out
ret
jmp
inc
mov
pop
and
pop
mov
scas
cmp
inc
mov
mov
pushf
mov
and
xor
gs
mov
lret
movsl
mov
inc
xor
mov
add
mov
pushf
adc
enter
lods
stc
lret
cmp
inc
leave
xchg
les
dec
jp
push
or
push
jle
jb
sbb
lods
or
mov
mov
shrl
imull
xchg
cmp
dec
adc
sub
sbb
jg
test
jmp
std
mov
adc
cmp
aam
sarl
pushf
sub
push
jns
mov
jl
pop
or
cmp
sbbb
fmul
push
cmpsl
sti
sub
mov
in
push
or
int
inc
adc
jb
icebp
jo
in
ds
ret
out
aam
dec
fucomp
xchg
lea
cltd
arpl
mov
rcrb
jp
insl
mov
adc
sbb
mov
cmp
pop
divl
pop
pop
lea
add
lcall
out
call
adc
mov
sbb
xchg
in
int3
in
cmpsb
rclb
subb
ret
stos
xchg
push
out
or
aad
pop
outsb
subb
test
scas
addb
mov
jmp
pop
out
roll
rolb
push
es
jnp
lods
or
ss
mov
loop
mov
cmp
daa
subl
imul
pop
jg
sahf
mov
jle
ret
pop
jg
mov
xchg
rorl
push
mov
testl
jne
sbb
fcmovbe
scas
aas
dec
cmp
xchg
int
dec
jp
leave
sbb
sub
mov
inc
leave
jno
sub
xchg
xor
inc
add
std
ljmp
addl
in
bound
pop
push
stc
inc
pop
push
mov
mov
cld
mul
mov
testl
jb
xlat
jns
push
push
mov
clc
aad
into
jne
lods
fbld
xchg
adc
je
sub
stos
xchg
cmpl
cli
ret
sub
test
insl
or
ret
loope
scas
push
mov
push
popa
outsb
sbb
mov
cmpb
mov
dec
sub
jp
mov
out
adc
andl
xor
ds
jns
and
rorb
sbb
mov
fisubrl
incl
jecxz
out
mov
push
nop
inc
adc
js
insl
lret
aas
roll
sub
or
ret
and
and
stc
pop
jge
in
push
cmp
fisubs
cwtl
test
test
in
or
sbb
sub
stos
push
and
insb
push
lret
add
dec
dec
xorb
out
xchg
lahf
pop
int3
pop
call
into
popa
xor
enter
inc
inc
sahf
sbb
test
movsl
jp,pt
xor
scas
popf
hlt
jg
je
lcall
inc
pop
loop
mov
into
and
aam
insl
pop
and
inc
xlat
pusha
adc
sahf
movsl
add
jb
enter
add
stos
jl
adc
cmp
push
cmpsl
dec
ret
or
hlt
mov
and
push
ja
add
mov
cmp
ja
mov
sti
fisttps
cmpsl
sub
mov
les
push
jle
mov
adc
mov
scas
dec
clc
jg
sub
test
and
dec
in
sub
sti
xor
mov
push
jle
xchg
loope
sub
cmpsb
repz
iret
pop
mov
ds
cwtl
adc
adc
gs
xchg
insl
clc
cmp
xchg
xchg
frstor
sbb
cs
mov
adc
or
ficomps
mov
les
sbb
das
rcl
push
xor
imul
movb
pop
ljmp
lahf
mov
adc
into
jnp
lret
testb
jg
test
pop
into
xchg
aam
sub
ret
xchg
xor
xor
ret
int
aaa
in
shrb
push
fs
jnp
or
xchg
loope
test
push
lahf
jns
mov
lahf
sbb
lcall
xchg
mov
fsubs
push
dec
cmp
xor
lods
xchg
stos
mov
subl
dec
stc
es
sbb
xchg
out
ja
jmp
push
xor
jno
sub
in
inc
orb
jp
sub
scas
pop
or
cwtl
shll
insb
pop
bound
push
jge
jg
iret
mov
shrl
xchg
dec
push
outsb
push
dec
cmp
test
loope
mov
fwait
xchg
je
dec
aas
and
cmp
adc
shll
lods
mov
pop
cmp
push
aaa
incl
jno,pn
test
test
pop
enter
das
loopne
inc
movb
sbb
pop
fisttps
scas
js
lret
sub
inc
lea
adc
jp
out
lods
mov
mov
aas
ret
mov
fadds
repz
pop
cmp
sub
movsb
orl
adc
dec
std
ret
sbb
stos
dec
adc
out
pop
sub
and
movaps
cmp
aam
xchg
push
mov
ds
inc
xchg
sub
lcall
imul
jo,pn
pop
xchg
fst
cmpsb
mov
dec
xchg
fstl
icebp
lea
add
lret
push
pop
adc
pop
push
daa
loope
subb
aas
and
mov
movsl
cli
clc
push
push
insb
sahf
ds
aam
imul
stos
das
cld
mov
enter
pop
dec
inc
sti
icebp
je
bound
and
leave
enter
cmpsl
mov
in
fsin
xor
adc
mov
bound
orb
sbb
adc
adc
xchg
add
pop
inc
lahf
mov
dec
out
xchg
xchg
cmpl
mov
sti
aad
shll
int
inc
xchg
cmp
popf
pop
push
lds
movsl
xor
out
outsb
xor
ficomps
aaa
bound
cmp
adc
adc
and
cmpsb
cmp
rolb
dec
ds
call
pop
addl
or
pop
aas
dec
scas
pop
test
fwait
add
xor
inc
mov
mov
mov
flds
in
cwtl
adc
cli
sbbl
xchg
or
sbb
xlat
lds
adc
jmp
mov
add
or
ss
push
xchg
data16
lret
sbb
add
gs
cmp
pop
push
hlt
js
out
mov
adc
and
pushf
ja
lock
stos
mov
dec
shrb
jl
test
push
xlat
ljmp
call
add
mov
sbb
call
mov
pushf
das
jmp
mov
push
test
cwtl
rclb
mov
push
push
loope
sub
incb
sub
fstl
jp
fstpt
xor
mov
in
in
xchg
mov
popl
aaa
jne
cld
mov
lds
push
push
push
jl
jmp
add
mov
fcoms
fcomps
daa
push
pop
adc
ror
pop
pushf
cmc
xchg
jle
sahf
imul
sub
push
sahf
jb
repz
cmpsb
repz
dec
pop
push
leave
dec
mov
cmp
shrl
xchg
push
mov
and
or
cs
loopne
push
cs
imul
sbb
lcall
and
test
sub
std
aaa
popf
xchg
shll
and
es
rol
lds
idivl
pop
mov
mov
push
outsb
jmp
sub
clc
pop
fdivrp
aaa
hlt
popa
inc
sbb
clc
in
test
cld
dec
jbe
sbb
jae
xchg
xchg
shll
icebp
scas
xchg
xor
jge
hlt
push
pusha
and
adc
je
mov
push
sub
insl
cmc
cmp
mov
outsb
popa
js
lahf
ljmp
sbb
dec
shll
andb
jle
cmpsl
pop
je
outsb
cld
jnp
insb
jnp
mov
das
mov
mov
adc
and
fdivrl
call
jecxz
dec
shll
call
add
imul
or
xchg
push
xchg
fistps
or
or
out
xchg
cmpsb
mov
xchg
mov
sub
jmp
xlat
gs
push
or
inc
nop
pushf
mov
jmp
fstl
push
mov
sub
mov
and
sub
out
mov
or
cltd
or
mov
cmp
jno
inc
outsl
stc
xor
cli
adc
pushf
push
test
inc
aad
aam
popa
mov
lods
loop
mov
orb
loope
mov
xchg
lahf
xchg
repnz
out
adc
sub
mov
and
test
cmc
xor
adc
out
adc
aaa
pop
inc
pop
jecxz
add
call
pusha
push
pop
pop
jno
pop
jnp
sbb
notb
mov
enter
cmpsb
mov
cmp
xor
imul
jbe
outsb
add
ret
lods
ret
test
dec
jecxz
adc
add
lods
lea
jno
push
repz
dec
out
push
fldt
mov
out
add
xchg
xor
mov
pop
sbb
mov
lods
mov
ljmp
jbe
outsb
jbe
dec
dec
aad
mov
rclb
in
inc
je
add
pop
jbe
sub
inc
out
jnp
xchg
inc
cmp
jmp
push
mov
pop
in
leave
and
sbb
es
popa
pop
ja
out
icebp
pop
xor
mov
cmpb
push
mov
sub
imul
and
lods
cmp
shlb
rclb
dec
lret
sbb
and
dec
mov
cwtl
icebp
ret
jbe
ljmp
pop
jge,pt
sbb
cwtl
test
lret
movsb
fsubl
push
xor
cmpsl
nop
loopne
push
jns
cmc
hlt
fxch
inc
fidivs
cmpsl
enter
scas
sub
jne
xor
stos
dec
pop
lcall
adc
jbe
jns
pop
icebp
decb
add
or
iret
jns
mov
iret
mov
ror
sub
pop
stos
imul
cmp
pop
pop
mov
test
mov
sbb
scas
jo
cmp
stos
imul
icebp
lock
jbe
pop
jl
call
dec
cmp
add
lods
push
or
mov
lock
cmpb
xchg
sub
jne
mov
and
mov
out
xchg
mov
xchg
daa
cmpsl
lods
pop
lret
mov
mov
add
pop
add
dec
call
call
imul
stos
ljmp
insl
sub
xor
daa
mov
lret
outsb
repnz
sbb
push
and
pop
jg
jbe
leave
jae
push
xchg
idivl
xchg
or
sbb
aam
js
mov
cmpsb
or
std
sub
xchg
pop
mov
jns
orb
jg
push
das
sub
inc
mov
mov
rorl
sbb
cmp
xor
push
sarb
fiaddl
push
xor
dec
iret
mov
sub
iret
inc
testb
xchg
mov
out
mov
dec
ljmp
shlb
into
mov
and
lock
jbe
pop
cmp
xchg
std
out
ffree
imul
mov
iretw
cwtl
inc
scas
cwtl
inc
imul
adc
push
mov
out
scas
lea
imul
ret
scas
mov
hlt
lahf
xor
je
in
pop
adc
mov
xor
clc
xchg
sbb
adc
cmp
fidivl
mov
ds
fbld
out
imul
push
jecxz
in
cmp
enter
stos
loope
mov
mov
xchg
test
mov
mov
jno
movsb
addr16
mov
jne
ret
outsl
lcall
and
and
pop
mov
mov
adc
insb
jo
sahf
cs
jecxz
nop
scas
stc
repz
out
fildll
adc
mov
ss
mov
addr16
mov
in
popf
aam
int3
pop
mov
scas
mov
int
lock
movl
movsl
test
fwait
test
push
add
in
jg
rclb
push
inc
out
push
iret
stc
dec
fnstsw
stc
cmpsl
pop
xor
ja
popf
push
int
mov
mov
imul
dec
and
mov
cld
insb
sbb
dec
adcl
fmul
addr16
or
push
add
pop
xchg
loop
shlb
pop
push
outsl
int3
cmp
imul
mov
test
ret
add
into
sub
lds
sub
lds
mov
mov
sahf
ljmp
call
sbb
and
scas
xor
sbb
jne
mov
mov
adc
bound
mov
mov
movsb
out
mov
sbb
test
sbb
rcll
stc
push
in
mov
mov
das
inc
out
fdivr
imul
sub
sbb
push
sbbl
cwtl
fcomp
add
xor
jo
sbb
into
jge
adc
xlat
outsl
out
add
outsl
jnp
push
rclb
out
mov
mov
cmp
cmpsb
out
movb
outsl
test
les
movsb
popf
subl
aad
jns
sbb
sbb
push
pop
pop
mov
jno
test
pop
adc
mov
mov
add
test
ficoms
cmp
ficompl
mov
roll
rolb
pushf
or
mov
pop
jmp
int3
cld
std
cmc
dec
push
mov
out
bound
mov
pop
fsub
push
jo
es
add
gs
xor
fidivl
push
and
sub
pop
cmp
sbbl
sbb
fldt
mov
dec
or
shl
xchg
loopne
and
pop
mov
fdivl
xchg
imul
sarl
cs
hlt
loopne
jb
push
push
inc
or
xchg
pop
pop
les
lea
adc
push
cs
mov
fwait
cmp
out
cmpsb
popa
dec
rcrb
jl
ljmp
xchg
lock
push
mov
pushf
mov
std
pop
in
ret
out
xor
loope
mov
bound
push
push
push
sub
mov
xlat
xchg
sbb
int
inc
std
sbb
cltd
jecxz
lods
cmp
aaa
lods
push
jno
lods
in
inc
mov
je
jbe
push
cmpsl
xchg
mov
pop
loope
fisttps
int3
in
ja
pusha
aas
insb
or
or
mov
lock
lret
clc
aas
cld
loope
movsl
jle
xor
fchs
pusha
rorb
mov
out
int3
pop
xchg
jmp
xchg
stos
mov
lds
mov
xor
aad
pop
fistps
sbb
mov
mov
mov
ljmp
push
xchg
and
pop
sub
and
and
movsl
call
cmpl
mov
jle
aam
mov
sub
call
mov
fiaddl
add
ss
ret
jno
das
cmpsb
fcoms
xor
pop
xchg
mov
pop
dec
mov
scas
fnstcw
and
jg
jno
mov
push
cmp
icebp
pop
dec
in
stc
loopne
jge
outsb
vrsqrtps
and
outsb
lds
inc
cmp
pop
orb
insb
sub
mov
lea
dec
cmpsl
mov
push
mov
inc
pop
jp
push
int
fxch
popa
push
lods
movb
add
or
cli
xor
setns
or
lea
int
stc
jle
adc
jl
call
jbe
jg
mov
sbb
pcmpeqw
or
push
xor
ret
int
and
ror
push
cmp
out
dec
imul
lds
mov
pop
imull
cmp
cmp
xor
test
cmp
mov
or
and
mov
loopne
mov
xchg
jae
ds
jbe
xchg
daa
pop
dec
inc
cmc
daa
sub
or
push
daa
jo
hlt
sub
inc
ret
xchg
rcl
or
std
sub
push
xchg
jbe
cmp
cmpsb
cmpb
insl
loope
add
xchg
enter
add
xor
mov
jns
in
lds
aaa
cmp
outsl
add
scas
xchg
mov
mov
mov
leave
adc
push
fwait
pmaxsw
stos
cmp
call
cmp
xor
jle
xor
adcb
xchg
prefetcht2
pop
movsb
sub
pop
push
mov
pop
or
sahf
push
add
push
xor
xchg
push
mov
dec
jp
call
pop
push
dec
addr16
frndint
dec
cwtl
push
les
push
jo
mov
or
xcrypt-cbc
cmpsl
push
addr16
jmp
mulb
jno
jl
out
lods
sub
test
out
jns
xor
fisttpl
push
std
mov
or
push
push
fadd
adc
sarb
nop
xor
lds
lods
mov
and
sarb
in
push
fstps
xor
jge
push
cmpsb
fidivrl
shl
cmp
adc
sahf
dec
aaa
add
out
lods
aaa
aas
push
sub
and
or
push
push
movsb
shlb
jle
pop
mov
out
lock
movsb
push
loop
jb
xor
les
xchg
mov
xor
aaa
mov
pop
les
pop
pop
adcb
js
outsl
push
call
push
nop
fwait
jns
shl
or
sub
dec
pop
jmp
sub
push
sarl
pop
push
loop
test
stos
scas
dec
xchg
sub
pop
fmuls
sahf
pop
rolb
out
stc
mov
and
or
fwait
mull
aam
sbb
xchg
test
in
cmp
xchg
popf
adc
mov
mov
jb
fldt
aam
jb
pop
movsb
xchg
add
arpl
or
pop
dec
pop
adc
dec
sub
aad
dec
out
fidivrs
push
or
popf
insb
inc
ja
aaa
adc
jns
addr16
mov
sbb
fisttpll
and
nop
sub
lahf
or
jo
pusha
rclb
mov
xor
pushf
imulb
subb
out
jg
push
xchg
iret
cld
push
add
and
scas
pop
adc
push
fbld
aaa
imul
xchg
push
pop
add
rcrb
jae
mov
cld
mov
xor
or
jle
add
and
dec
inc
and
push
out
inc
inc
adc
dec
pop
pop
and
in
enter
dec
scas
and
sub
cmp
or
dec
repnz
push
pop
mov
into
gs
sub
dec
mov
imul
jae
outsb
fisubrs
xlat
and
adc
xlat
pusha
add
mov
sbb
xor
les
dec
or
jle
pop
xchg
jne
mov
daa
jge
pop
int
lcall
scas
sbb
mov
sub
sbb
addr16
xor
dec
cmpsl
jle
dec
jge
and
rol
pop
jecxz
ljmp
jnp
gs
jmp
inc
es
lahf
sbb
std
ljmp
lea
pusha
test
test
out
in
outsb
iret
xchg
xchg
roll
imul
mov
pop
add
mov
ljmp
pusha
jle
mov
adcb
mov
inc
sbbb
xchg
cwtl
adc
jae
xor
mov
jmp
mov
dec
scas
rorb
jl
addr16
icebp
cmc
loopne
dec
orb
mov
dec
or
sbb
mov
mov
adc
add
push
inc
scas
rcl
aam
fs
jne
rcr
mov
decb
xchg
cmp
xchg
pop
add
push
dec
push
mov
push
dec
popa
and
mov
int
lahf
add
sbb
fdivrl
jecxz
fistpll
dec
jbe
ljmp
push
inc
sbb
lret
sub
lock
iret
sti
pop
das
je
push
cmc
dec
sbb
add
cmpb
out
inc
jmp
test
es
xlat
dec
in
adc
sar
dec
push
mov
repnz
push
push
icebp
xchg
popf
sub
inc
ss
cmpl
push
mov
sub
xor
in
popf
hlt
mov
xor
stos
cmpsb
int
push
cmp
cmc
les
jle
aas
push
in
and
lret
add
add
jne
pop
xor
mov
pusha
adc
daa
cmpb
xchg
sbb
cli
leave
data16
lea
ss
int3
movl
pop
loope
aas
fwait
or
shrl
jle
fwait
subb
jl
jo
add
add
cmp
in
dec
push
cld
lea
fidivrl
push
add
fildl
pop
in
push
sub
test
cld
flds
cwtl
push
loop
push
pushf
inc
mov
int3
sbb
sub
dec
sub
gs
lret
out
sbbb
mov
leave
xchg
mov
roll
mov
pop
add
push
stc
xchg
add
inc
adc
mov
adc
cwtl
xchg
adc
sub
mov
pop
int3
aam
popa
clc
mov
addb
leave
in
inc
mov
testb
or
pop
dec
pop
daa
sbb
rol
adc
xchg
stos
mov
aas
mov
sub
dec
vdivss
inc
mov
jge
addr16
sub
add
push
icebp
mov
mov
cmp
call
ljmp
leave
mov
xor
int
addr16
xor
sub
out
repz
xor
pop
loope
inc
orb
jnp
pop
das
pop
es
int3
lods
test
adc
imul
ret
fsubrl
rorl
jle
fbstp
adc
pop
out
cmp
dec
jns
add
mov
in
sbb
test
loope
andl
imul
mov
or
xchg
dec
int
out
pop
inc
clc
repnz
mov
jg
sbb
nop
pop
insl
cmp
add
jmp
jno
add
nop
rcll
push
xchg
cmp
adc
movsl
push
jns
cmp
sbb
shlb
outsb
outsb
fwait
aad
push
adcb
dec
sub
insb
push
mov
call
sub
xchg
pop
inc
cmp
movsb
leave
jns
das
lock
pop
cmp
mov
sbb
jp
cmpsl
stos
sub
add
xchg
mov
xlat
inc
mov
mov
and
jmp
jno
push
outsl
mov
subl
add
pop
mov
mov
icebp
addr16
sahf
lods
fwait
xor
pop
daa
fwait
push
stc
mov
fnstsw
dec
cmp
lcall
or
dec
cmc
shrb
ret
xor
lock
cmp
and
or
repz
jno
in
aas
sbb
fimuls
movsb
adc
test
dec
sub
imul
xor
js
mov
mov
jae
fdivrs
xor
aad
jmp
std
and
mov
sbb
adc
and
int3
xor
into
rclb
scas
rol
stos
jno
mov
jno
out
sbb
imul
adc
inc
ds
xadd
in
inc
mov
scas
xchg
xchg
adc
push
pop
cmp
jo
leave
rcrl
bound
fdiv
inc
dec
les
loopne
dec
popa
sti
xor
cmpsb
mov
cmpsb
mov
mov
jl
mov
xor
push
test
out
lahf
test
cmp
lret
jae
fadds
cs
push
and
lret
adc
add
rcrl
cmpsl
incb
sub
stc
dec
jp
mov
stc
movsb
addr16
adc
push
mov
movsb
pop
mov
and
cwtl
lock
fisubrl
es
push
or
scas
push
xchg
fildll
aam
push
je
stc
cmove
incb
cmc
xchg
mov
mov
lock
sub
xor
orb
xor
or
pop
push
loop
out
sbb
rcl
mov
xor
cltd
xor
jno
mov
pop
dec
imul
dec
cmpsl
rcll
std
adc
sbb
jbe
daa
sub
fistps
fdivrp
pop
in
in
push
in
pop
sbb
xor
and
leave
jne
pop
adc
xchg
jmp
test
out
mov
mov
add
or
fwait
dec
repz
jo
pop
mov
pop
cmpl
gs
mov
loope
pop
dec
jbe
mov
pop
test
pop
fnstenv
push
add
push
out
loopne
fisubs
mov
rorl
scas
repz
or
xchg
cmp
aam
push
pop
cmp
arpl
ds
or
stos
adc
push
sarl
stc
lret
lea
add
mov
jb
mov
mov
popf
jo
daa
es
adc
mov
push
data16
imul
cmp
bswap
push
loop
and
ret
sbb
cmp
fidivrs
int
push
and
jp
cmp
idivl
push
pop
ja
mov
adc
cmp
xor
into
or
push
sbb
imul
pop
jno
push
inc
jbe
or
xchg
int
push
sub
sti
jle
in
mov
push
inc
fidivrl
mov
repnz
das
addr16
outsl
and
flds
imul
std
ret
mov
pop
fildl
test
mov
pop
ret
fidivrl
xchg
xor
xchg
mov
or
shll
jo
mov
adc
jns
loope
xor
sbb
xchg
aam
pop
jbe
dec
shr
xchg
sbb
or
and
xchg
mov
push
xchg
push
loope
pop
rorl
or
lahf
incl
aaa
mov
inc
mov
mov
jp
aaa
fs
push
stos
sbb
and
xrelease
add
fsubrp
loop
test
iret
ljmp
jns
pop
cmpsb
pop
mov
cltd
in
jo
arpl
pop
scas
xor
xor
jecxz
sub
roll
ljmp
insb
jbe
jno
push
xor
jo
push
lea
pop
sub
xchg
dec
or
aam
jle
adc
sub
cli
adcb
push
outsb
sbb
sub
jne
jecxz
cmp
gs
xor
push
push
cwtl
into
or
mov
mov
outsb
negb
mov
add
out
daa
scas
into
popf
pop
or
adc
pop
mov
mov
fsts
add
add
xchg
mov
cmpsl
fidivrs
jnp
shr
sbb
js
fidivrs
pushf
push
lea
mov
sbb
ljmp
loope
push
je
xor
mulb
negb
fidivrl
push
jb
jne
outsb
mov
repz
outsb
xlat
popa
cli
push
in
out
mov
mov
repnz
push
cmp
push
cs
jb
inc
mov
mov
mov
and
xchg
fbld
out
xor
testb
cltd
outsb
je
int
mov
cmp
rolb
add
jp
push
mov
cmpsb
dec
push
sti
les
mov
rolb
test
in
xchg
adc
pop
or
test
sar
jno
jne
stos
bound
jmp
insl
cmpsl
fstpl
jge
cmp
dec
movsb
pop
fildl
out
xchg
jmp
rcll
mov
sbb
xchg
lock
xor
je
xchg
loopne
pop
sbb
and
dec
add
jae
pop
push
imul
jle
mov
mov
enter
fcompl
xor
je
into
sub
movsl
jb
stos
sbb
xor
das
sub
xchg
add
loope
das
pop
dec
cld
mov
adc
pop
pop
cmp
mov
pop
and
and
sub
stos
sbb
mov
std
mov
mov
sbb
inc
mov
and
ljmp
repz
xchg
shrb
pop
shl
cmp
ret
dec
sbb
cwtl
add
xor
dec
add
insl
hlt
imul
push
inc
lret
ret
int
sbb
push
ja
push
mov
imul
cmpsb
push
jne
sbb
sbb
push
int3
inc
roll
out
mov
sub
sub
mov
jno
in
es
out
xor
inc
jp
das
jp
das
incb
push
xchg
fwait
daa
mov
mov
dec
rcl
arpl
fcmovnb
bound
mov
mov
daa
cmpl
pusha
sub
or
mov
or
push
loopne
outsl
and
aam
fstl
mov
aaa
enter
sub
mov
imul
aam
bound
neg
push
cld
pop
push
dec
push
insl
scas
pop
mov
xchg
mov
fcmovbe
adc
hlt
xchg
and
xor
mov
fidivrs
bound
jge
shlb
pop
cmp
sbb
mov
in
mov
data16
movsl
inc
mov
push
mov
inc
push
divps
add
push
lods
dec
sub
jecxz
and
into
mov
icebp
int
mov
mov
cmp
icebp
gs
cli
lods
cmp
outsb
push
xor
or
daa
mov
call
icebp
sbb
pusha
roll
xor
mov
cmp
xor
jge
stos
cli
in
sbb
insl
cmpsl
jbe
testl
shll
mov
and
divl
cmp
lock
or
inc
push
sarl
sub
xchg
xor
fldenv
inc
mov
repnz
dec
dec
sub
cmpsb
fiadds
aad
or
jmp
inc
jnp
fistpll
notb
test
sbb
lahf
pushf
mov
pop
fs
inc
xchg
sbb
in
push
cmc
mov
inc
stos
xor
sbb
aam
dec
movsb
in
jae
cmp
push
sbb
test
jmp
jge
jb
pop
icebp
xor
movsl
add
into
loope
or
cmpsb
push
mov
push
mov
clc
in
out
mov
jo
inc
jo
ja
inc
push
sbb
sub
xchg
push
or
sub
loopne,pn
out
scas
dec
movsb
test
push
in
jno
pusha
repnz
mov
jb
lahf
jp
aas
jae
push
cmp
ljmp
rcll
pop
pusha
ds
mov
scas
stos
imul
push
adc
xor
jmp
cmpsb
mov
xchg
lahf
or
test
or
sbb
mov
outsb
push
mov
lds
inc
mov
sbb
mov
mov
push
or
outsl
ss
enter
jbe
movsl
xchg
jne
imul
xchg
sub
mov
js
dec
loopne
jbe
pushf
loope
arpl
lcall
andb
sbb
inc
movsl
or
daa
lds
adc
call
incl
lods
in
gs
push
test
inc
popf
xchg
fstpl
out
mov
aam
std
sbb
push
cmp
test
nop
insb
mov
add
cs
idivb
jl
or
push
adc
loopne
mov
ret
mov
call
add
les
lret
sbb
mov
mov
jle
testb
xor
loop
arpl
addr16
mul
push
pop
je
in
ss
testl
cmc
inc
shlb
loopne
in
pusha
lcall
es
sub
push
in
jo
xchg
mov
les
add
imul
fisubrl
cs
addr16
mov
adc
in
inc
sahf
pop
in
or
sbb
sbb
mov
pusha
repz
loopne
inc
pop
add
mov
test
xchg
pushf
in
mov
lret
mov
cs
jns
loopne
loopne
sub
les
mov
cwtl
xchg
js
mov
leave
lods
hlt
xchg
mov
call
cmp
mov
cmpl
jg
push
dec
repnz
mov
std
sub
out
shlb
add
js
sahf
subb
je
inc
stos
xor
hlt
das
repnz
push
test
xchg
into
in
clc
mov
pop
jge
pop
mov
push
jl
mov
xlat
add
out
mov
jmp
mov
testl
mov
lret
fstpl
xchg
cmp
xchg
test
mov
negl
lods
aam
jnp
pusha
and
movsb
rorl
add
jmp
decb
es
ja
jle
cmpl
sub
mov
scas
push
loop
sbb
dec
xchg
cmp
sbb
and
pusha
sbb
rcll
jmp
add
rorb
and
js
mov
sarb
mov
pop
int
xchg
mov
cmp
sub
aaa
aas
add
mov
mov
inc
test
mov
ja
or
mov
outsl
push
mov
mov
stos
scas
repnz
cmp
lods
inc
mov
dec
xor
in
jbe
jmp
pop
jl
and
popf
cmp
rol
loope
and
mov
pop
sbb
push
sti
push
les
dec
je
les
nop
xchg
lahf
lahf
stos
fcomps
popf
popa
pop
or
fdiv
arpl
repz
sub
ljmp
sub
pop
dec
fistps
add
aas
insb
pop
negl
dec
fidivrs
jae
andb
xchg
pop
stc
sbb
in
nop
dec
inc
ret
sbb
inc
and
inc
inc
sub
or
push
pop
and
lret
pop
adc
shrb
sbb
xor
dec
scas
sbb
fidivrs
jno
pop
leave
mov
xchg
lea
insb
test
xlat
movsl
sbb
cmpsl
mov
mov
pop
pop
inc
inc
cmpl
jnp
push
roll
mov
data16
xchg
cmp
test
inc
mov
enter
cs
pop
lret
dec
test
sub
loopne
mov
push
je
cltd
sbb
lret
mov
xchg
push
pushf
sub
pop
sub
pop
rorl
fld
sub
xchg
out
mov
dec
in
push
jb
jle
inc
cmp
xor
pop
push
into
push
js
inc
lcall
lods
xchg
mov
shlb
adc
test
and
es
mov
in
inc
pop
xchg
les
ret
outsl
sbb
mov
jbe
rorb
cs
mov
jb
arpl
jae
xor
jl
xchg
pop
dec
imul
pop
lahf
cmpsl
imul
mov
pop
cmp
nop
addr16
xor
das
xchg
jmp
loop
sbb
mov
add
mov
in
add
xchg
aas
xchg
cmp
lods
xor
mov
xchg
fdivr
push
jbe
sbb
imul
call
sub
push
sbbl
sub
lods
int
andb
in
popa
pop
es
ja
aaa
cmp
mov
lock
xchg
movsb
push
scas
test
sub
decl
ss
int3
or
dec
int3
test
xor
and
xchg
inc
clc
xchg
sub
and
inc
cld
sti
inc
nop
xlat
dec
inc
hlt
xor
xchg
nop
mov
cld
push
imul
push
insb
pop
xchg
fidivrl
fdiv
dec
stc
ljmp
push
insl
dec
icebp
fimuls
mov
flds
xor
push
or
mov
pop
cmp
dec
lds
lcall
or
in
add
mov
push
repnz
sarb
add
movsb
out
adc
cmc
lods
sti
inc
not
add
iret
pop
xchg
mov
xchg
add
fcompl
pop
mov
or
pop
jmp
push
sub
dec
cmc
mov
enter
fwait
mov
sbb
nop
pusha
dec
pop
nop
push
or
test
loop
mov
xchg
in
ljmp
sti
push
popf
ret
mov
xchg
sbb
adc
push
sbb
les
sub
divl
jae
sbb
inc
cli
ret
xor
leave
aad
push
xor
jo
xchg
mov
out
xchg
xchg
dec
rclb
call
aad
xchg
nop
cwtl
mov
das
cmc
aam
or
and
jge
mov
paddq
xchg
mov
add
rclb
adc
orl
scas
lea
adc
mov
jmp
xlat
push
imull
pop
jmp
ljmp
sahf
add
outsl
xchg
fs
mov
das
lds
sub
mov
fisttpll
test
jp
fcoms
bnd
pushf
pop
fadds
adc
jge
jge
jne
inc
in
mov
aam
lcall
aaa
loop
push
sub
push
push
stos
mov
daa
mov
repnz
push
mov
jp
cmp
mov
sbb
jb
imul
push
inc
and
mov
xchg
outsl
daa
xor
dec
or
addr16
dec
sbb
ret
ljmp
pop
inc
jne
add
icebp
add
mov
ret
jmp
sbb
popf
jp
gs
mov
fildll
std
xlat
testb
mov
jne
add
sbb
ret
sub
daa
cltd
enter
jp
fs
jmp
iret
xorb
jle
pushf
movsb
sbb
inc
imul
jnp
les
push
out
jl
imul
inc
mov
rorl
push
or
push
call
std
sbb
adc
lcall
xchg
das
pop
cli
mov
and
insb
or
push
mov
in
xchg
inc
cmp
mov
stos
add
popa
cmp
sbb
data16
or
sub
loope
imul
xlat
pop
test
int3
mov
andl
jb
inc
push
or
and
movb
push
dec
jge
jo
out
enter
push
xchg
aam
jae
das
xchg
out
push
mov
cmpb
mov
and
imul
clc
pop
outsl
lcall
pop
sbb
push
dec
stc
adc
arpl
sbb
or
xchg
sub
in
pop
aam
mov
lods
xor
or
lea
pusha
push
xchg
and
loope
out
call
mov
mov
mov
aas
fs
pushf
mov
lds
jo
in
or
out
mov
outsb
sub
imul
add
add
out
pop
out
inc
dec
xchg
jmp
xchg
test
les
and
nop
orl
and
lods
sub
scas
jecxz
sbb
int
sbb
cltd
lock
icebp
mov
outsl
push
or
adc
push
ret
dec
fwait
push
out
outsl
push
inc
jo
es
negl
jecxz
loopne
add
shll
enter
xchg
stc
dec
or
ret
dec
add
bound
repnz
cmp
adc
xor
in
sub
pop
cmp
ljmp
aad
xchg
je
les
mov
pop
dec
mov
dec
xchg
iret
sub
nop
aas
xor
xchg
jmp
jne
lcall
jmp
pop
jecxz
int
mov
inc
sbb
jae
lea
mov
mov
mov
adc
int
or
lea
out
addr16
test
ret
stos
out
cmp
mov
ret
nop
and
cmp
cmpsl
arpl
nop
jnp
ret
daa
mov
ret
jns
js
adc
lods
or
test
mov
inc
pop
sub
movsl
push
xlat
inc
add
outsl
out
jle
mov
arpl
mov
jne
idivl
lret
push
push
or
push
imull
push
cmpsb
out
pop
mov
mov
pop
dec
push
pop
mov
add
shr
addr16
xor
pop
lret
inc
xlat
addr16
dec
test
adc
xchg
lea
push
jns
dec
push
xchg
mov
int3
enter
mov
dec
mov
movsl
hlt
jecxz
xor
and
scas
push
sub
inc
inc
ficomps
jmp
push
push
pop
fildll
push
mov
or
test
xchg
sahf
jge
sub
push
dec
add
xor
push
cmp
int
sbb
lcall
jp
xchg
add
push
daa
in
sub
xor
in
adc
add
movsl
bound
std
sti
in
fnstcw
push
test
out
mov
int
push
sti
sub
mov
aaa
icebp
mov
mov
cmc
mov
and
push
lods
pop
cmp
xchg
outsl
pushf
rcrb
fisubs
jo
jp
divl
enter
mov
and
pop
jno
push
xorb
pop
add
popf
test
ljmp
sub
sti
dec
lods
sub
xchg
mull
push
xchg
mov
clc
decl
outsl
push
sbb
cld
decb
xor
add
ret
lret
cs
imul
cli
dec
insb
jbe
popa
in
push
push
adc
mov
mov
adc
bound
repz
and
loopne
sub
decb
stos
movsb
dec
xchg
push
lret
push
xchg
push
ja
dec
daa
sarl
xor
push
stos
or
outsb
loope
push
negl
shlb
ja
push
in
xchg
push
mov
cltd
std
xchg
pop
daa
jl
icebp
add
mov
dec
mov
cltd
out
scas
jle
aas
cli
aam
cld
mov
push
mov
ljmp
ss
daa
into
dec
ja
insb
jge
enter
ss
or
jmp
push
xchg
or
mov
movsb
pop
daa
inc
shlb
dec
push
inc
sub
push
jle
inc
lret
push
jecxz
test
sub
sarb
push
adc
stc
lahf
sahf
pop
negl
repnz
push
inc
sbb
pop
and
cmc
cmp
pop
mov
out
aad
add
imul
rorl
mov
jb
movsl
hlt
mov
lret
loop
jne
fnstcw
je
cmp
stos
mov
call
or
aaa
enter
jno
push
enter
mull
fnstsw
stos
mov
iret
addl
push
adc
or
loop
mov
mov
int
adc
mov
sub
push
les
dec
aas
je
xchg
lret
dec
addr16
popa
ljmp
jl
sahf
pop
xchg
adc
les
call
call
aaa
out
inc
js
ret
push
mov
pop
cwtl
push
jbe
movsb
push
out
mov
mov
xor
push
pushf
push
push
sbb
test
pop
dec
stos
mov
shl
jl
movsl
push
xor
imul
out
fbstp
mov
movsl
inc
or
pop
scas
adc
pop
pop
jl
xor
daa
adcb
addr16
icebp
mov
jle
mov
addl
mov
inc
push
negb
loope
jmp
subb
mov
enter
shlb
cmp
jo
xor
cmc
adc
jno
ljmp
sbb
pop
mov
cmp
sub
xor
jne
cmp
add
push
pop
mov
jge
pop
jmp
sub
gs
sub
mov
sti
call
stos
dec
dec
mov
mov
bound
pop
and
cld
mov
mov
jnp
aaa
loope
mov
xor
xchg
es
jecxz
add
loope
enter
gs
icebp
pop
push
mov
ja
or
mov
ja
out
inc
push
xchg
pop
inc
and
mov
dec
scas
xchg
les
pop
hlt
sub
in
pop
jae
cmpsl
jecxz
cmp
pop
mov
lods
sub
xchg
test
jg
xlat
lds
or
jo
cmp
sub
mov
cwtl
sbb
xchg
lret
and
adc
scas
mov
pxor
or
jnp
push
fwait
stos
fmull
jb
insl
add
push
jp
cmpsb
es
jbe
ret
outsb
mov
cmp
movsl
xchg
cld
mov
test
mov
or
int
pop
xchg
jg
testb
sarb
cmp
ja
push
mov
pusha
mov
stos
out
and
inc
jne
test
addr16
movq
sub
push
decb
pop
mov
jge
pop
dec
popa
pop
stc
xlat
cmp
popf
nop
arpl
jbe
sar
je
fstpt
xchg
cmc
push
jge
mov
loope
mov
push
pop
and
stos
or
cmp
aas
push
sub
xchg
pop
enter
mov
sbb
inc
jle
jns
cwtl
aam
xchg
lea
jae
push
lret
jnp
and
pop
jo
insl
popf
hlt
cmpsb
sarl
arpl
gs
clc
mov
push
sbb
out
call
mov
push
in
push
xchg
ret
mov
das
jb
in
push
mov
mov
sbb
aaa
dec
and
or
mov
arpl
push
arpl
insl
mov
adc
popf
add
sub
xor
pusha
and
iret
enter
test
or
mov
mov
adc
cmp
mov
sti
or
outsb
push
dec
cmpsb
sbb
push
adc
mov
test
daa
arpl
mov
sbb
imull
inc
xchg
mov
cwtl
in
or
inc
pop
gs
es
jnp
jp
add
jmp
and
test
mov
lock
mov
xor
fwait
mov
rcr
fdivs
jp
cmp
loope
lret
rcr
adc
add
or
int
xchg
icebp
push
arpl
sub
negb
inc
push
js
lods
jno
pop
leave
cmpsl
jecxz
incl
push
shrb
aaa
insb
stos
pop
add
push
daa
pop
mov
cmp
js
xlat
arpl
jl
stc
or
jl
shlb
int
cmpsl
push
push
lods
ss
add
shlb
push
mov
jp
add
icebp
xchg
mov
aam
dec
clc
pop
sti
mov
pop
out
pop
jnp
jge
leave
xor
push
mov
fstl
aam
sbb
lahf
cmpsb
inc
lret
xchg
adc
fisttps
iret
cli
data16
cwtl
les
pop
and
es
lcall
dec
enter
je
and
aas
inc
call
mov
test
lock
dec
lds
stos
mov
pop
dec
fbstp
inc
iret
mov
repz
hlt
sbb
out
fadds
outsl
cmc
cltd
pop
jmp
mov
pusha
cmp
pop
in
fnstsw
cmp
lcall
xor
add
and
into
or
push
fsubrl
inc
div
jp
cmp
xchg
cmp
cmp
sub
frstor
nop
in
cmp
repnz
rcll
xor
mov
or
mov
test
sub
sub
jg
lret
lods
shl
sbb
cltd
lods
adcb
cmpsl
icebp
call
or
stos
lock
jnp
jmp
and
lea
out
fucomip
jmp
adc
dec
inc
test
push
adc
push
jns
fisttpl
dec
mov
mov
mov
sub
stc
adc
mov
cmp
insb
jnp
cmp
xchg
repz
call
or
and
es
add
cmp
mov
popf
xor
into
test
aad
leave
or
jg
push
arpl
dec
add
mov
jbe
lock
in
sarb
cltd
mov
cwtl
jp
xor
jo,pn
inc
aas
mov
add
or
hlt
pop
loope
add
lods
daa
mov
loop
jbe
out
nop
aad
mov
call
movsl
fsts
fstl
pop
xchg
and
push
addr16
pusha
xlat
jo
inc
jns
pop
les
sub
iret
lods
jp
push
js
mov
icebp
addr16
subl
insl
das
enter
adc
jno
mulb
shll
push
inc
mulb
loope
imul
push
ret
sub
dec
xchg
pop
jecxz
imulb
push
mov
lea
loopne
fcomip
inc
js
add
ss
pushf
addr16
enter
dec
das
xor
js
push
xor
fcompl
cli
pop
hlt
outsl
dec
arpl
cmc
lcall
inc
xchg
sbb
clc
adc
adc
sbb
fmulp
inc
xor
xlat
mov
popf
sub
dec
mull
test
inc
or
scas
push
mov
jmp
xchg
je
cmp
fwait
push
mov
xchg
in
or
andb
xor
jecxz
inc
push
jno
cmc
es
and
sbb
enter
and
mov
dec
insl
cmpsb
add
cmp
mov
loopne
xchg
or
into
repz
sbb
cld
lock
rep
jae
xor
inc
fwait
gs
push
das
cmp
and
movsb
jle
fdiv
sbb
pop
xor
aad
fdivrl
imul
push
mov
and
jg
stos
popa
lahf
std
mov
aas
xchg
push
loope
pop
fisubs
loop
adc
fisubrl
test
pop
push
xor
mov
sub
push
add
int3
insb
mov
fsubs
jg
daa
lret
ss
ja
inc
ret
cs
mov
mov
cmc
dec
jno
aaa
mov
pop
jg
sub
and
sub
adc
aas
push
dec
imul
aam
inc
arpl
gs
add
add
pop
xlat
test
data16
cmp
data16
and
in
lret
xchg
repz
scas
fmul
add
sbb
icebp
add
push
mov
testb
in
xchg
int3
jecxz
adc
pushf
fisttpl
repz
mov
xchg
xchg
mov
stos
jmp
mov
sbb
sbb
int
mov
lds
jmp
lahf
cwtl
scas
or
in
mov
sbb
sub
add
sbb
push
repz
xchg
push
or
imul
stos
xchg
scas
or
imul
add
aaa
push
mov
insb
call
ljmp
xor
add
push
xchg
dec
lcall
daa
ljmp
popa
out
xchg
cmpsl
cwtl
ljmp
inc
xor
in
ret
out
cmp
mov
sub
and
shl
push
mov
xchg
xchg
in
lods
dec
in
popf
inc
or
adc
or
adcb
adc
in
repnz
aaa
lret
negl
fsubl
popf
nop
or
es
je
fcoml
push
out
pop
fwait
mov
cmp
pop
mov
test
jp
mov
jmp
jp
dec
repnz
and
push
add
adc
pop
jmp
pop
andl
mov
insb
aam
repnz
push
inc
mov
or
lcall
dec
adc
inc
loop
or
add
xor
xchg
sbb
pop
sahf
pop
das
enter
ljmp
lea
add
or
loop
lods
pop
jno
adc
and
inc
inc
cwtl
pop
mov
jne
jnp
push
xlat
int3
pop
cmc
fwait
push
push
stc
sub
repnz
sbb
imul
jl
cmpsb
pop
outsb
insb
sub
push
and
xchg
in
jbe
push
mov
outsb
jecxz
sub
daa
lret
mov
test
mov
xchg
aad
pusha
aad
inc
jp
jp
push
mov
adc
mov
in
xor
or
sub
inc
scas
leave
gs
lds
aas
inc
adcb
dec
cs
xchg
arpl
cmc
lretw
push
test
pushf
stos
mov
bts
xchg
imul
ja
mov
cld
sarl
mov
in
cld
out
mov
xchg
or
test
sub
dec
idiv
mov
js
add
stos
lock
inc
lds
outsb
fldenv
mov
xor
sti
addr16
jns
fisttps
fsubr
push
sub
outsl
xor
mov
into
mov
leave
into
sbb
push
aad
imul
adcl
hlt
subb
jnp
fld
cmpsl
aad
int
gs
cmp
ds
and
fiadds
fsubr
lahf
dec
jle
adc
fnstcw
inc
adcb
movsl
fisttpl
out
pop
hlt
jp
sub
mov
outsb
xor
xchg
xor
xchg
fs
add
sti
ret
xor
jmp
xor
fimull
dec
mov
or
cmp
fldl
in
test
push
aaa
adc
repz
lds
popa
sbb
lcall
scas
sbbl
mov
out
inc
push
dec
cmp
dec
shrl
insb
jecxz
aaa
inc
jle
jg
xchg
xchg
or
out
or
cwtl
sarb
nop
mov
add
dec
es
mov
sbb
scas
jp
cld
sbb
pushf
mov
sub
inc
js
in
out
or
outsb
loopne
cltd
jns
pop
out
mov
lods
pop
imul
xchg
lea
loope
xchg
xorb
inc
mov
push
les
pop
test
push
cmpsl
ret
ja
shl
jp
mov
ret
jp
add
or
fldpi
ret
xchg
mov
mov
outsb
dec
sbb
lock
inc
enter
sbb
add
dec
add
jp
sbb
adc
pop
inc
aam
fidivs
xchg
pushf
push
fsubl
sub
ja
out
data16
mov
loopne
cmpsb
mov
pop
xor
cltd
nop
sub
cld
in
push
jno
js
dec
xor
and
popf
lret
mov
test
rcr
cmp
and
sahf
sub
add
pop
inc
inc
sub
xchg
jle
pop
inc
call
mov
lret
insl
data16
fistpll
mov
jmp
cli
movsl
test
sub
xlat
sub
jns
mov
roll
inc
in
adc
adc
aad
pusha
adc
fdiv
sub
mov
mov
lods
movl
pop
push
icebp
xor
incb
aad
arpl
lock
adc
pop
mov
iret
and
adc
ret
push
jns
dec
jne
pop
cmp
imul
daa
pop
sub
dec
mov
into
mov
xchg
add
stos
and
in
jmp
mov
call
and
ret
jbe
mov
add
out
ret
shrb
jl
js
inc
push
dec
lods
jle
cmpsb
call
fnstcw
rcrb
pop
dec
mov
gs
gs
mov
pushf
xchg
pop
push
add
insl
xchg
sub
in
cmp
xchg
repz
insl
scas
imul
xlat
xor
or
pop
or
addb
stos
jp
pop
cwtl
jmp
jne
cmpsb
addl
or
stc
jg
aad
rol
adc
lahf
stos
rorl
int
pop
jb
mov
aaa
test
inc
jbe
and
mov
cltd
inc
pushf
xchg
jns
lea
ror
pop
jl
pop
xchg
mov
xchg
pop
push
mov
or
in
hlt
and
out
js
jmp
sti
int3
int3
or
fs
testl
ss
mov
std
pop
push
loop
push
xor
or
or
jg
lahf
mov
jle
sbbl
in
jecxz
ss
and
cmc
pop
adc
sbbl
or
hlt
xchg
dec
fistl
jecxz
adc
gs
adc
add
insl
adc
lret
subb
mov
addr16
aas
jmp
add
addr16
pop
cltd
aaa
fsubl
jp
out
aam
scas
dec
mov
mov
lods
jmp
daa
add
aas
shll
loop
push
lock
sbb
repnz
adc
xchg
out
ss
icebp
jo
jns
pop
ss
ja
cmpsl
sahf
test
adc
pop
jne
popf
insl
insl
dec
imul
xlat
push
xchg
mov
mov
dec
es
sub
iret
mov
dec
sub
mov
jg
jle
inc
sti
push
call
dec
fwait
call
stos
aad
fsubl
cli
jg
sbb
cmp
push
push
test
push
xchg
test
arpl
push
lret
call
std
gs
jo
pop
jb
repz
imul
movsl
roll
push
add
mov
mov
fnstenv
pop
test
cmp
mov
xlat
jo
cld
adc
pop
inc
faddl
popa
push
mov
mov
mov
stos
call
jbe
lret
stos
repz
pop
decb
aaa
mov
mov
add
je
sahf
in
xchg
cmp
push
pop
push
fisubrs
xchg
test
lods
jbe
or
inc
sbb
mov
push
int3
mov
test
mov
cmc
insl
data16
cli
xchg
jmp
gs
xor
stc
icebp
xchg
or
fs
xor
push
xor
mov
lea
out
add
cmp
jmp
addps
dec
inc
hlt
mov
add
fwait
dec
lahf
dec
xchg
jo
imul
in
adc
and
in
icebp
sbb
adc
and
cmp
push
inc
pop
xor
lahf
fs
adc
test
scas
stos
cmc
aas
mov
ss
pushf
cmp
sbb
and
fnstenv
xor
push
insb
mov
filds
repz
decl
push
lea
popa
jbe
cld
in
jae
insb
in
mov
and
aad
dec
xor
lods
sarb
gs
push
stos
in
push
cmpsb
sub
sub
lods
lret
push
and
decl
push
add
lahf
mov
out
shll
cmp
and
pop
clc
iret
lods
push
lods
or
pop
pop
mov
dec
mov
cld
xor
ja
pop
pop
mov
out
shll
pmaddwd
mov
int3
push
xchg
mov
xorl
xor
aas
outsl
sub
aaa
cmp
lds
and
int
clc
notl
pop
shll
xlat
int
into
aas
ds
xchg
jo
or
js
nop
adc
clc
xor
cmpsb
xor
cmpsl
sbb
cmpsl
fdivrl
stos
pop
call
fsubs
ror
fsubl
aas
jmp
fidivrs
aas
push
adc
rcl
hlt
sti
push
aad
loope
cmp
pop
mov
aas
xchg
or
pop
jecxz
sub
cld
adc
aas
bnd
jl
test
mov
push
push
popf
aad
sub
fdiv
sbb
les
sub
push
lods
ds
fiadds
jnp
push
jne
mov
mov
xchg
jbe
xchg
xchg
sti
xchg
cmc
sbb
mov
dec
bound
aad
or
repz
jae
mov
mov
ljmp
ret
sti
loopne
inc
loopne,pn
pop
notl
mul
add
sbb
sub
scas
add
xchg
in
mov
push
cmc
xor
and
fstp
aad
pusha
mov
jns
push
sub
ss
push
push
aad
ja
sti
stc
inc
sahf
aam
leave
orl
std
nop
enter
dec
outsl
fiaddl
jl
ret
das
sbb
leave
adc
jle
jo
fs
lcall
mov
lahf
aas
je
je
jno
inc
fisubl
jmp
cltd
enter
mov
clc
jle
mov
testb
sub
popf
repnz
inc
out
cmp
mov
lea
std
jnp
rclb
hlt
cmp
out
sbb
cmp
into
scas
jbe
fstl
shrb
fmull
push
js
fists
mov
jb
std
repz
mov
mov
sahf
mov
and
xlat
stc
sub
pop
sbb
loop
ja
cmp
xchg
ret
mov
nop
xor
push
pop
xchg
cld
int
xor
ds
inc
hlt
dec
mov
loope
iret
movmskps
sub
mov
sbb
rcll
cltd
jno
out
dec
cltd
push
mov
adc
hlt
outsb
jne
inc
int
push
push
int
lods
leave
jno
mov
leave
fsubs
xchg
cmp
test
imul
cmpsb
pop
inc
xchg
inc
negl
mov
mulb
mov
test
mov
mov
push
adc
scas
xchg
push
imulb
test
and
pop
mov
leave
or
xchg
je
addr16
les
pop
jns
lods
adc
adc
mov
out
test
ja
push
xor
bound
shlb
pop
dec
ljmp
add
cmp
out
es
pushf
pushl
ja
dec
push
lods
pop
mov
stc
daa
out
push
in
mov
repz
pop
jbe
mov
fs
or
cmp
or
or
mov
aas
fidivl
ret
push
jle
jmp
jp
add
sbb
mov
dec
push
xor
xor
push
imul
mov
lahf
push
jo
mov
cmc
mov
int
inc
jmp
sbb
loopne
fmuls
arpl
stos
adcl
icebp
stc
xchg
in
push
mov
xlat
cmp
or
mov
pop
fxch
cwtl
imul
mov
jb
and
mov
les
imul
xchg
or
cmp
xchg
std
mov
push
xor
lret
out
add
mov
mov
and
jge
add
js
jno
cmp
clc
xor
hlt
xor
cmc
addr16
cmp
mov
push
ljmp
es
loope
mov
ret
bound
ret
mov
add
and
aaa
pusha
sbb
divl
orl
notl
rcr
repnz
std
jae
in
incl
lock
es
inc
loopne
loopne
jne
push
mov
jbe
pop
sar
add
push
pushf
shlb
cmp
or
and
sbb
aam
outsl
test
jl
pop
push
call
or
jecxz
sbb
jmp
sahf
and
push
push
mov
cmp
lds
jg
call
pop
jnp
ret
xchg
in
push
js
push
insl
dec
mov
pop
pusha
mov
inc
xor
call
push
or
sbb
jns
xor
mov
mov
and
sbb
repz
mov
add
mov
xchg
fnsave
pusha
arpl
add
sbb
ss
sahf
dec
rorl
jmp
push
add
inc
aad
test
and
sar
or
push
fsubr
jp
jnp
mov
cmpsl
xchg
adcb
xchg
mov
or
xrelease
ret
adc
lds
das
jo
sbb
mov
cltd
lcall
jno
and
xchg
test
or
pop
aas
arpl
xchg
jecxz
lcall
push
or
jl
add
mov
test
loopne
test
mov
xlat
roll
gs
in
or
fildl
lea
sti
inc
jo
dec
mov
or
adc
cmp
dec
loop
xlat
pop
ftst
pop
js
out
das
fsub
and
adc
or
xor
stc
adc
add
jo
mov
js
mov
scas
fsubl
sbbb
loope
out
aam
xchg
je
adc
pop
cmp
lock
in
jmp
sbb
imul
mov
add
jecxz
dec
sub
cmp
testb
pop
jae
mov
add
push
negb
jl
and
sahf
mov
ret
pop
jmp
leave
out
xchg
inc
sbb
std
pop
lret
cmp
mov
push
mov
jnp
and
ss
pop
dec
scas
jge
into
int
shl
out
loop
bound
pushf
cwtl
cli
pop
cmp
dec
fcoml
cs
push
sub
cltd
jecxz
pop
inc
scas
std
cmp
cmp
lea
in
outsb
mov
mov
mov
shll
nop
push
jb
loop
push
loope
out
out
cmc
push
mov
cmc
hlt
dec
xchg
test
dec
shl
and
in
les
cltd
das
out
mov
pop
mov
mov
subl
insl
xchg
fwait
cs
daa
popf
push
pop
adc
rorb
loopne
fidivl
lock
les
inc
inc
lea
cmpsl
mov
cmc
lahf
xchg
ret
cmpsb
insl
pop
int
sub
sub
inc
or
mov
push
fxch
ja
add
or
ret
add
leave
mov
dec
stc
xor
sub
inc
lret
mov
mov
or
push
shl
sbb
mov
outsl
xor
cmpsl
int3
sbb
repnz
shrb
test
addps
cs
sbb
jge
mov
jne
xchg
ss
mov
push
idivb
mov
lods
rolb
iret
repz
pop
jno
pop
jo
pop
scas
mov
lods
add
leave
or
test
sub
test
insb
insl
and
dec
mov
cwtl
enter
sahf
pop
mov
jmp
push
and
es
mov
idivb
jb
push
cmc
push
or
in
push
out
dec
sbb
mov
inc
sarb
loop
std
outsl
hlt
jns
dec
les
push
std
add
ret
jp
movsb
lds
inc
test
mov
movsb
mov
sub
xchg
add
mov
clc
in
or
push
mov
jne
add
rcrl
jmp
outsl
dec
and
lods
add
xor
pop
inc
push
cli
lahf
or
sub
fcompl
cwtl
mov
lods
repz
add
jge
idivl
push
mov
lods
shrd
jne
pop
hlt
adc
ja
dec
jb
adc
adc
in
sbb
inc
js
jae
outsl
sub
xor
dec
pop
pop
stc
jl
cmp
mov
adc
inc
sub
dec
or
push
inc
sbb
adcl
insl
cwtl
lahf
mov
dec
ficompl
sbb
aas
cltd
inc
add
jns
mov
mov
pcmpgtb
mov
je
pop
cmp
lcall
out
jne
in
push
ss
adc
xor
cs
sbb
or
xorl
into
sbb
out
mov
cld
jnp
jne
icebp
lods
push
pop
test
jo
popa
inc
add
push
xchg
and
in
dec
filds
xor
inc
cli
popa
int3
outsl
xor
mulb
jb
push
jbe
loopne
lock
push
lahf
mov
popf
jno
ret
sub
stos
add
iret
pop
mov
mov
addr16
fcomi
enter
push
inc
mov
mov
and
out
ficompl
aaa
pop
dec
sbb
fisubrl
push
jnp
rolb
adc
mov
jg
xchg
or
bound
mov
push
js
inc
cli
jmp
in
mov
cmpsb
jmp
mov
xchg
mov
xchg
xchg
push
clc
sbb
cmpsb
in
jecxz
xor
mov
aad
out
mov
sub
fcomip
pop
push
mov
test
push
sub
inc
out
leave
call
out
pop
mov
and
inc
mov
dec
dec
cmpsb
jnp
pushw
cmp
sub
fidivs
pop
sti
das
xorb
movsl
daa
fbstp
ljmp
cli
mov
jg
lahf
adc
mov
mov
lcall
mov
pop
and
icebp
pushf
push
fsubr
ds
mov
fldl
int3
das
mov
xor
sub
gs
push
pop
adc
mov
out
push
lret
lea
cmp
pop
in
add
lahf
shl
int
mov
and
adc
sbb
dec
pop
outsl
inc
popf
pop
mov
mov
push
or
cs
mov
or
mov
cmc
sub
repnz
cld
adc
cmp
sbb
inc
adc
cmpsl
sti
repnz
add
popa
xlat
push
pop
push
jmp
or
adc
rorb
cwtl
cmpsb
or
fwait
sub
cmc
or
inc
ror
or
xchg
sbb
lahf
jmp
repnz
fidivrl
pop
out
mov
adcb
adc
cld
sar
push
push
icebp
aas
sbbb
dec
rorb
fiaddl
xor
gs
push
xchg
or
test
clc
popf
sub
mov
shlb
push
push
movsb
mov
jl
stc
insl
cmp
ja
xchg
push
mov
int
xchg
push
or
jae
enter
mov
pop
addr16
sub
mov
jno
lret
or
mov
pop
fstps
stc
fdivs
jmp
and
and
adc
nop
xor
es
and
in
imul
jo
sbb
ret
loope
pop
jne
or
push
mov
movsb
loopne
pop
adc
xor
mov
push
pshufw
loope
sbb
jns
es
push
sti
mov
cmp
add
mov
ds
call
dec
loopne
jl
frstor
repnz
xor
nop
idivl
pop
mov
fdivrs
pop
test
arpl
sub
jle
pop
pop
loopne
or
cmp
sub
neg
dec
int3
aaa
repnz
mov
push
repz
push
call
inc
mov
add
push
and
icebp
movsl
push
out
xchg
xchg
push
insb
mov
mov
mov
mov
loopne
cmpsl
and
fsubrl
adc
xchg
jp
gs
add
lods
hlt
xchg
fdivs
add
aas
fcomi
xchg
int
cmp
xchg
pop
or
push
mov
in
scas
insl
mov
sub
push
pop
out
push
adc
icebp
sub
ljmp
xor
jmp
or
pop
jb
lret
nop
sti
fildl
lcall
sub
sbb
dec
adc
jbe
int
xor
insb
int
cli
aaa
mov
shll
add
cmp
lock
scas
hlt
sub
pop
shr
jp
sahf
pop
jb
xor
mov
inc
mov
test
xor
inc
and
lret
movsb
filds
sarl
pop
jo
int
into
push
or
mov
popf
dec
mov
jae
test
rep
mov
pop
fwait
bound
mov
inc
insl
add
add
mov
sub
add
std
mov
inc
xchg
mov
cltd
pop
sub
dec
fisttpl
push
push
mov
xchg
nop
cmpsl
fldenv
dec
loope
imul
ds
in
xchg
je
mov
ss
cli
jmp
sarl
mov
test
xchg
jbe
cmpsl
xor
pop
ljmp
jno
jb
mov
cmp
popf
lea
icebp
add
mov
adc
lret
pop
xchg
mov
out
push
xor
pop
dec
test
scas
jbe
adc
mov
loope
jns
jnp
xor
add
push
cli
mov
or
mov
mov
lahf
rcrb
rcrb
std
jg
negb
xor
xor
out
xchg
mov
and
mov
js
sub
mov
imul
jbe
xchg
bound
push
and
add
loopne
inc
movsb
dec
mov
arpl
decl
popf
daa
sub
dec
aas
movsb
mov
int
push
mov
add
rolb
inc
pop
jl
stos
push
jmp
bound
stos
sub
push
add
test
dec
mov
shrl
mov
adc
cvtpi2ps
lea
nop
jmp
sub
and
push
cltd
xor
scas
and
pop
sub
stc
imul
or
fistpl
cmpsl
clc
pusha
je
lcall
mov
cmp
outsb
dec
cli
inc
fisubrs
and
pushf
sti
nop
ficoml
mov
cld
xchg
in
fsubrl
mov
inc
xchg
or
fdivrp
fucomi
add
fbld
ret
jmp
adc
or
mov
cwtl
dec
cli
push
out
in
mov
mov
add
inc
xor
nop
test
std
adc
mov
popa
sbb
ja
jnp
xorl
rcll
decl
mov
lods
xchg
or
mov
call
mov
shrl
inc
in
xchg
das
xchg
xchg
push
hlt
mov
pop
inc
lock
fidivrl
pop
and
imul
and
cmp
ror
push
push
pusha
push
inc
clc
popf
scas
adc
or
adc
xchg
xchg
in
cmp
jle
or
xchg
ds
and
sub
pop
int
adc
mov
dec
xlat
cld
push
jp
lock
cmc
or
and
adc
jle
add
mov
jne
iret
add
test
gs
das
inc
nop
jbe
cmp
pop
repnz
cmp
dec
pop
push
sbb
out
sbb
adc
xchg
out
inc
out
sbb
dec
out
cmp
leave
scas
mov
popa
jp
lret
xchg
add
add
mov
jnp
pop
test
jbe
jge
imul
mov
adc
in
add
push
dec
or
xor
shll
loopne
xchg
mov
add
adc
jge
icebp
mov
aad
inc
mov
gs
bound
or
xor
in
sub
data16
jne
jmp
mov
sti
mov
in
jp
xor
or
fisttps
js
xchg
jp
out
sbb
sbb
or
sbb
pop
adc
xlat
xchg
xchg
push
int
aam
loopne
in
mov
mov
or
push
ds
mov
jb
in
sub
push
sbb
repz
or
sbb
aas
rclb
sub
mov
adc
lcall
xor
fsubrl
ret
mov
add
sbbl
jl
frstpm(287
inc
jmp
and
repz
iret
add
mov
pushl
stos
mov
inc
pop
pushl
not
scas
sub
push
dec
mov
push
lcall
in
mov
push
dec
xor
mov
ljmp
adc
inc
sbb
ret
into
jg
jno
aam
pop
cld
mov
aam
mov
push
mov
jns
mov
jno
shrb
data16
int3
cmp
jecxz
pop
adc
mov
inc
push
imul
lock
dec
mov
adc
adc
iret
rcrl
xchg
flds
xchg
out
shl
mov
subl
aas
loopne
out
out
adc
push
insb
pop
sub
push
outsl
fidivrs
push
inc
test
fbld
inc
jbe
inc
popa
mov
sti
dec
xor
mov
in
dec
imul
sbb
in
ficoml
ret
js
pusha
push
sbb
cmp
sub
pushf
lods
and
xor
nop
xor
jbe
dec
rcrl
and
std
mov
inc
adc
xlat
js
roll
mov
fdecstp
xchg
adc
and
mov
or
es
pop
mov
mov
fcmovnb
pop
cmp
ljmp
cmpsb
in
add
mov
or
add
sub
sub
adc
jb
lods
xor
test
adc
inc
outsb
sti
mov
pop
addr16
cmp
adc
and
inc
ficoml
sbb
aas
repnz
mov
sub
nop
xor
popa
es
orb
pushf
aas
into
inc
fldl
fsts
dec
testl
shrl
jno
push
push
add
test
xchg
adc
pop
dec
sti
out
xchg
ffree
jbe
loop
aam
lea
xchg
and
adc
xchg
hlt
leave
rcrl
scas
stos
mov
js
dec
xlat
inc
xor
shlb
pop
sti
push
dec
in
or
sub
push
pop
or
dec
sub
dec
test
mov
add
add
lock
test
daa
pop
arpl
sbb
clc
cmp
add
int
cli
cmpsl
adc
push
lds
mov
xor
push
or
inc
in
lret
or
jle
adc
mov
outsl
xorb
push
call
and
fldenv
xor
jg
and
xlat
jae
in
sbb
adc
cmc
cmp
or
call
nop
lds
fmul
add
pop
mov
sub
jg
push
mov
sub
dec
int3
cmp
cmpsb
xor
jmp
adc
lds
xchg
cwtl
or
xchg
jne
jno
imul
pusha
hlt
hlt
dec
mov
ss
es
jns
xchg
add
pop
xor
xlat
test
push
xchg
or
rorb
mov
lahf
test
sbb
pushf
cmp
ss
ficoml
lahf
sub
fldcw
mov
jbe
pop
and
xchg
push
push
add
ljmp
cmp
outsb
fcomp
inc
repz
sub
cmp
arpl
sbb
inc
mov
jp
aam
out
mov
aaa
dec
jns
push
andb
jmp
xor
xchg
push
cli
es
stos
test
add
lret
fs
push
mov
aas
ret
xorb
xlat
int3
loopne
mov
scas
data16
and
push
js
push
cli
adc
sbb
arpl
mov
mov
and
jno
dec
lret
hlt
inc
arpl
fxtract
aaa
popa
mov
pop
ds
addb
xor
mov
js
xor
pop
js
xchg
imul
xchg
sbb
lret
dec
push
inc
and
and
mov
movsl
push
insl
xchg
xlat
push
push
dec
cmpsb
insb
jle
xchg
or
mov
leave
add
sti
pop
adc
mov
mov
xor
jae
cs
mov
jno
xor
fistpl
in
pop
or
ret
rorl
in
xchg
dec
sub
xlat
adc
dec
cs
or
std
imul
icebp
jae
cmp
rolb
and
lds
xor
jnp
and
pop
dec
sbb
inc
push
loop
aad
jle
stc
in
mov
scas
pop
aad
ds
gs
mov
push
add
dec
cmp
roll
or
dec
pop
shrb
div
rcrb
xor
shrl
inc
xor
pop
outsb
push
inc
gs
call
adc
cld
ljmp
xlat
movsl
xchg
gs
sbb
push
mov
push
xchg
jle
pop
mov
mov
fstpl
xor
and
or
xchg
sbbl
test
pop
gs
out
insl
int3
xchg
out
add
xchg
cltd
ret
mov
cmp
div
xchg
xorl
imul
fwait
pop
mov
and
adc
movsl
das
cld
sbb
popf
xor
mov
add
and
rcr
inc
roll
add
mov
cmp
es
or
incl
fisubrl
lods
daa
out
sar
std
aaa
test
dec
imul
mov
scas
fdiv
fadd
xchg
and
ss
cmp
std
and
mov
push
arpl
dec
dec
xor
mov
push
add
pop
cltd
xchg
jbe
or
xor
es
sbb
push
negb
pushf
pop
xchg
stc
add
mov
mov
xor
sbb
jae
lcall
shlb
xchg
fldl
jae
fildll
fiaddl
dec
cmp
inc
mov
mov
pop
out
push
jge
stc
sub
cmpsl
jge
mov
cmp
jge
add
mov
cmc
lahf
je
xlat
int3
mov
leave
xchg
mov
dec
cs
ret
sbb
mov
and
sbb
sub
lea
add
inc
das
stc
stos
jno
outsl
jo
scas
test
int
xor
and
lahf
mov
cwtl
andb
ja
fbld
inc
dec
fiadds
psubusw
cmc
adc
jecxz
es
jns
rcll
xchg
sub
cwtl
in
inc
cmp
addr16
xor
or
imull
nop
mov
mov
jmp
out
scas
adc
lods
mov
aas
xor
jno
cltd
xchg
pop
add
outsb
ret
cld
lahf
fadds
mov
mov
std
std
mov
pop
push
sti
pop
xchg
mov
addb
test
sub
sbb
mov
pop
sub
andb
push
insb
decl
lcall
jecxz
fstpl
mov
lret
adcl
adc
inc
and
push
jge
add
inc
pslld
popa
pop
add
jp
aad
gs
jecxz
mov
cmp
ss
dec
mov
jg
pop
fs
icebp
mov
out
and
dec
sti
outsl
mov
test
cwtl
mov
cltd
mov
and
fneni(8087
in
int3
lcall
icebp
arpl
lret
rcrb
cli
inc
es
std
push
aad
mov
push
in
jecxz
sbb
stos
lret
pushl
int
push
push
mov
adc
fdivrl
and
pop
mov
pop
inc
lods
dec
mov
stc
stos
mov
push
inc
pop
imul
movsb
adc
cmp
add
pop
sti
sub
stos
sub
and
adc
aad
pushf
arpl
push
cmp
adc
sbb
adc
adc
xchg
andb
sti
loope
cs
cmp
movsb
test
rorb
loope
adc
dec
in
mov
mov
mov
cmp
addr16
inc
jle
js
int
cmpsb
dec
inc
pop
mov
mov
outsl
cmpsl
cmp
push
fadds
sahf
aam
xchg
mov
psrld
jecxz
test
pop
fst
push
push
push
scas
pop
jnp
lods
aad
pop
sub
pusha
jb
add
dec
xor
xchg
movsl
movsb
fsts
pop
int
cmp
fcomps
lret
popa
mov
sti
std
out
dec
push
jp
aam
arpl
add
sar
nop
fsubs
pushf
jns
push
xchg
insl
xlat
rol
mov
and
loopne
lret
jmp
es
jmp
rcrb
and
adc
sti
stc
push
aaa
fidivl
push
pop
sbb
inc
out
into
pop
lahf
in
mov
dec
jp
cmp
sub
int
ret
fidivl
ret
sub
cmp
into
mov
out
jmp
or
test
add
mov
mov
xchg
movsb
fld
and
xor
sbb
in
mov
or
sub
mov
stos
add
outsl
out
sub
mov
add
call
sub
dec
cli
sahf
shrb
push
inc
scas
ret
add
call
cmpsb
int
sub
test
sar
cmp
es
adc
dec
mov
loopne
mov
arpl
dec
idivl
pop
push
insl
inc
divps
js
int
sbb
sub
push
jg
adc
adc
dec
add
dec
lods
lahf
fstps
nop
adc
ficoml
jp
mov
scas
jg
fcompl
or
sbb
ja
je
mov
cld
jmp
sub
xchg
mov
sbb
xor
ret
mov
sbb
jmp
mov
push
or
int3
inc
jl
jbe
outsb
enter
popa
icebp
mov
mov
sub
nop
ret
xchg
sbb
mov
push
and
jns
in
cmc
mov
mul
loope
xlat
dec
shr
sbb
sahf
mov
push
nop
pop
rclb
sbb
out
repz
xchg
popf
push
test
mov
lea
repz
stos
ja
scas
and
xor
jge
ss
lock
mov
add
insl
mov
js
addl
aad
fidivl
and
mov
push
sub
out
push
or
lret
mov
pop
les
stos
addr16
lds
orb
popf
jno
xor
inc
add
jg
push
jg
mov
hlt
xchg
mov
movsl
inc
loop
xorps
jb
pusha
in
mov
xchg
sbb
jge
pop
mov
pop
mov
pop
mov
xor
xchg
mov
cmp
ja
dec
fs
mov
adc
lret
scas
push
cmp
cmp
xor
sbb
xlat
xchg
je
jbe
out
fsubl
or
mov
and
int
prefetchnta
dec
dec
mov
xlat
in
pop
dec
inc
jmp
daa
xor
inc
push
xchg
mov
xchg
add
sub
sbb
xlat
insl
aas
punpcklwd
aam
xchg
cmp
mov
xlat
add
out
mov
mov
loopne
stos
call
movsl
fldl
xor
cmp
lcall
sub
mov
aad
outsb
out
add
inc
pusha
rolb
cmp
dec
rcll
jae
out
jecxz
mov
push
mov
dec
addr16
aaa
addb
out
nop
adc
inc
mov
test
shrb
sub
sub
jl
sbbb
les
push
out
icebp
cmpsb
and
loope
js
pop
mov
push
jp
xor
dec
pushl
dec
insl
js
out
imul
sti
add
mulb
mov
rorb
fwait
popa
les
push
xlat
das
bound
jno
scas
in
ret
sar
aam
add
lret
adc
xchg
shrl
sahf
adc
movsb
pop
push
mov
push
xor
lea
sub
hlt
movsb
mov
jo
cmp
imul
mov
push
test
mov
pop
add
cmp
enter
mov
mov
push
cmp
mov
sahf
jnp
std
es
cmp
jo
xchg
loopne
loope
mov
loop
gs
jl
jbe
sahf
and
pop
nop
fucom
or
push
gs
rcrl
or
and
loop
das
sub
pop
mov
gs
dec
mov
je
out
add
imul
jno
movsl
xchg
daa
nop
push
pop
or
repz
push
push
ffree
pop
ds
mov
aas
cli
cmp
pop
cmpb
fcmovnbe
dec
mov
dec
push
push
pop
fnsave
cmp
cmp
inc
insl
mov
mov
lea
push
aas
dec
lea
mov
nop
sahf
dec
add
push
popf
js
inc
adc
repz
mov
in
xor
push
mov
loope
mov
jg
enter
jl
xor
out
shlb
pop
mov
adc
ss
aas
lock
ljmp
sbb
stos
loope
pop
xchg
add
aas
mov
jbe
mov
cltd
and
lahf
push
imul
jge
cmp
adc
pop
and
fimuls
jne
popf
sub
mov
rcrl
cmp
cmc
push
mulb
jge
xchg
scas
into
inc
test
mov
adc
inc
inc
inc
fstps
aas
ret
cmp
push
stos
add
jo
xchg
inc
fmuls
lds
pminsw
add
loope
xchg
popa
or
fldt
aaa
jnp
add
ds
jno
xchg
jbe
mov
jl
sarl
and
push
repnz
xor
jecxz
mov
test
mov
adcl
adc
xchg
testl
std
jae
daa
mov
push
ss
sub
outsl
mov
je,pn
les
popa
dec
pushf
aas
pop
cmp
sub
dec
sti
popa
xchg
imul
int3
cwtl
cmpsb
repnz
push
push
xchg
xchg
lods
dec
add
test
jnp
lret
fidivrl
xchg
dec
or
push
in
sub
xor
cmpsb
xchg
in
mov
sbb
les
xchg
adc
sar
jae
bound
push
and
test
jb
sub
xlat
lds
fucomp
lock
daa
aam
jbe
xchg
das
cs
jg
ret
stos
mov
cmp
mov
adc
or
fnstcw
xor
arpl
push
mov
repnz
rolb
mov
subb
mov
int3
push
ja
adc
mov
pop
or
insl
int3
sbb
aaa
loop
ret
inc
jb
int3
mov
fwait
decl
adc
dec
mov
lahf
rolb
shrl
mov
std
sub
nop
aam
rcll
test
aad
push
sbb
and
std
mov
orb
int
loopne
dec
ror
loope
imul
mov
push
pop
das
popa
cld
ljmp
add
add
gs
aad
or
mov
ret
jae
cmp
loope
pop
adc
pop
repnz
cwtl
pusha
pop
mov
cmpsl
inc
mov
hlt
repz
test
insl
dec
mov
xor
dec
lret
mov
les
add
jnp
pop
mov
lods
pop
mov
dec
mov
cmp
aas
out
cli
out
push
xchg
les
pop
js
loope
stos
dec
push
and
aas
inc
jnp
jb
mov
cmpsl
out
mov
sbb
pop
test
sub
andb
shl
outsl
sbbl
movsl
xchg
dec
push
mov
stc
sub
in
xchg
pop
xchg
and
rcrl
add
movsb
fstl
pop
mov
scas
xchg
clc
lcall
sub
pop
cli
outsb
xor
fnstsw
mov
mov
jb
in
ja
rclb
clc
repz
xor
push
pop
xorb
cwtl
mull
cmp
or
lret
iret
mov
jns
dec
cwtl
les
add
popf
push
push
pusha
mov
sbb
cmp
fwait
test
outsl
daa
out
jne
dec
sbbb
jp
mov
aas
outsb
push
mov
ja
test
jg
push
inc
push
es
jb
movsl
shlb
lods
in
jl
fadds
mov
cwtl
push
hlt
cmp
dec
xorb
sub
call
loope
cmc
jne
and
inc
mov
pop
sbb
sub
out
inc
jl
stc
mov
cmc
insl
xlat
xorl
mov
lds
dec
pop
fwait
sbb
xchg
inc
aam
test
mov
sub
ds
pop
pushf
jb
gs
pusha
loop
jg
mov
fs
inc
fildll
shlb
pop
aam
xor
xlat
mov
fwait
push
fwait
std
dec
je
in
cmp
push
into
mov
jnp
pushf
and
mov
ljmp
loope
sbb
mov
xchg
cli
fidivrs
out
sbb
push
push
test
addr16
fstpl
and
and
sarl
enter
outsl
je
mov
sbbl
fwait
xchg
or
lods
movsl
jmp
cs
mov
shlb
test
add
mov
gs
or
mov
jo
jne
push
cmp
movsb
inc
xchg
and
nop
sbb
sub
pop
sbbb
out
cmp
mov
add
mov
out
pop
push
push
xor
lods
loopne
or
repnz
inc
or
sbb
lds
les
jno
sbb
cmp
cmp
pop
lock
jo
orl
out
hlt
jle
stos
jp
repnz
adc
cmpsl
ret
sbb
jg
test
jecxz
rcll
pop
lret
hlt
mov
movsb
bound
ret
jbe
cli
dec
xor
jg
aam
xchg
push
test
xchg
push
sbb
xorl
add
repnz
pop
mov
pop
dec
and
inc
sub
mov
loope
jmp
push
cwtl
hlt
insb
pop
cmp
fs
add
mov
in
fldl
cmp
jmp
lock
inc
pop
repz
cmp
mov
mov
mov
in
test
or
enter
sub
sar
leave
dec
pop
jle
lds
test
addb
jns
mov
xchg
sbb
push
inc
mov
sub
mov
inc
leave
int
in
mov
test
dec
out
imul
mov
out
and
mov
popf
sbb
in
mov
mov
movsb
int
jl
push
inc
sbb
pop
sbb
sbb
sub
adc
sub
sbb
xchg
and
jbe
ret
out
mov
push
pop
jnp
mov
mov
test
movsb
lcall
jle
mov
das
push
mov
dec
enter
clc
add
xchg
cwtl
inc
mov
cmp
out
lods
lea
cli
xchg
fisubrs
ljmp
mov
inc
int3
cmp
sbb
shlb
push
hlt
dec
or
cs
dec
fildl
or
inc
cmpl
and
mov
ret
sbb
mov
sqrtps
fnsave
xchg
push
cmp
dec
push
cmp
jb
sub
ret
test
fiadds
push
addr16
mov
insl
aam
adc
ljmp
mov
adc
xchg
and
cmpsl
fnstenv
aas
add
int
sahf
inc
stos
test
fwait
out
dec
pop
and
lahf
nop
xor
push
popl
mov
and
enter
insb
cltd
test
xor
aam
scas
jecxz
mov
scas
ret
sbb
rclb
lods
cmp
inc
out
popf
jmp
xchg
pop
pop
pop
jbe
jnp
push
rcrl
dec
inc
fidivrs
mov
jb
and
adc
jmp
push
scas
orl
sub
in
and
sbb
add
fs
adc
add
repnz
mov
mov
and
pusha
hlt
repnz
dec
int3
sahf
jmp
and
mov
mov
fsincos
loopne,pn
cmp
add
push
cmpsb
add
je
cmpsl
sub
lds
sbb
cwtl
mov
sub
xchg
cwtl
test
movsb
xor
test
sub
pop
addr16
daa
cmpsl
testl
rclb
adc
add
fisubl
inc
pop
jle
adc
cmp
xor
scas
inc
pop
out
subl
repnz
jmp
inc
out
dec
jge
or
pop
in
ud2
stos
xor
arpl
xchg
icebp
leave
cmp
inc
push
push
jge
rcrb
lods
clc
mov
jmp
rcll
sub
loop
test
sti
pop
call
jb
sbb
fildll
mov
pop
cwtl
cmpsl
jae
adc
add
pop
ss
in
jmp
dec
loope
or
cld
fwait
mov
std
jno
xor
ret
mov
test
les
rcll
leave
ror
xor
repz
aaa
pop
cltd
in
std
xlat
mov
inc
daa
mov
les
pop
or
and
and
mov
dec
cmp
sbb
popa
int3
adc
sub
leave
imul
ficoms
jae
xor
cwtl
pushf
xchg
jl
jecxz
shlb
xor
ja
mov
jp
inc
mov
or
jg
or
cs
or
sub
mov
mov
rcrl
sysret
shlb
ss
shlb
mov
jecxz,pn
mov
iret
fstl
jo
xchg
pusha
lods
int3
xor
lods
sub
fdivp
sub
shll
pop
jle
mov
xchg
pop
sbb
sbb
jns
and
xchg
inc
xor
mov
push
add
xchg
push
adc
cltd
lds
loope
lahf
mov
adc
out
jo
fisttpll
adc
cmpsl
ficomps
mov
js
push
or
cmpsl
adc
arpl
pushf
dec
xor
mov
add
jns
movsl
idivl
lea
jo
adc
mov
mov
cmp
addr16
mov
fisubl
ja
inc
inc
stos
dec
jno
mov
mov
hlt
pop
ljmp
push
lret
js
out
xor
ret
mov
pop
dec
subl
aas
adc
add
and
mov
insb
scas
mov
leave
cmpsb
scas
mov
call
xor
enter
jo
sub
sahf
outsb
sti
movsb
mov
aas
add
push
popf
ret
cmp
ds
js
addr16
or
cmp
aaa
pop
or
pop
pop
lret
leave
test
jae
jo
jns
add
mov
jmp
jmp
popf
stos
adc
mov
fadds
pop
push
push
jge
pop
getsec
into
fisttps
jge
mov
test
or
or
sahf
adc
mov
xchg
mov
aaa
fmuls
mov
dec
je
adc
cmpsb
lea
or
mov
es
jne
jg
out
into
mov
inc
fs
lods
inc
push
mov
imul
nop
pop
stos
mov
loope
mov
pop
push
ja
jno
add
inc
xor
and
into
das
int
pop
out
xor
stos
mov
jmp
mov
je
xor
stos
mov
mov
xlat
in
inc
shl
xchg
outsb
popa
call
or
xlat
cmp
les
add
ljmp
fnstenv
inc
inc
loop
adc
add
ret
push
repnz
bnd
pushf
test
add
cld
inc
test
pop
xor
sub
fldl
jns
cmp
jmp
out
jg
sub
ja
mov
cmp
push
mov
pop
movsb
test
mov
cmp
pop
shll
cld
fs
mov
negl
jae
aad
or
sbb
pushl
stc
inc
clc
testl
enter
adc
cltd
add
jne
les
add
add
mov
filds
insl
test
loopne
push
test
fbstp
or
jne
imul
mov
call
cmp
fmuls
jmp
cmpsl
xchg
sbb
pop
cmp
mov
adc
mov
stos
rcrb
hlt
rclb
jl
cmpsb
out
xchg
sbb
dec
insl
adc
fisubs
in
sti
movsb
lahf
xchg
mov
lods
jnp
bound
mov
insl
enter
add
jns
das
cmp
jns
sbb
or
insb
adc
pusha
add
js
inc
out
jo
sbb
repz
and
pusha
push
push
sbb
imul
mov
imul
std
cs
lret
cmp
fwait
aad
xor
adc
lds
inc
aaa
loop
scas
stos
les
push
or
pop
dec
and
fidivrs
and
lret
sbbl
jge
aam
sbb
imulb
loop
repz
jl
lods
lret
mov
lock
cwtl
ret
adc
xchg
and
fildl
cmp
dec
arpl
inc
stos
int3
jno
inc
mov
mov
pop
repnz
gs
mov
inc
outsb
xor
cmp
xchg
xlat
daa
call
xchg
decl
cmp
lcall
int3
loopne
test
jb
mov
sub
lret
inc
jge
std
and
push
es
into
movsb
sbb
pop
dec
mov
ljmp
mov
outsb
push
jmp
movsl
and
mov
pop
jb
cmp
jle
adc
andl
iret
and
dec
pusha
les
adc
push
xchg
mov
in
test
adc
or
cmpsl
int3
jg
mov
push
xlat
push
lcall
sub
test
xor
cmp
mov
out
dec
xor
jns
xchg
add
arpl
cmp
pushf
xchg
test
icebp
sub
inc
xchg
add
dec
and
xchg
in
sahf
jns
cmpsl
outsl
loopne
icebp
aaa
mov
xchg
stos
mov
clc
sbb
xchg
shr
inc
in
aas
in
jle
push
mov
sbb
xor
mov
xor
dec
xchg
ljmp
mov
int3
ds
repnz
push
xchg
inc
or
adc
std
xor
imul
rcll
data16
mov
cmpl
rclb
mov
arpl
mov
mov
lret
mov
and
pop
les
pop
cmpsb
xchg
xor
das
cmp
add
lock
aas
test
in
sub
int3
sbb
insb
and
xor
dec
mov
loop
pop
ret
mov
jp,pn
add
pop
mov
sub
push
push
mov
sub
jae
push
dec
sbb
xchg
inc
xchg
jle
xlat
std
xor
dec
jns
lods
xor
or
test
fwait
loop
xor
inc
daa
push
mov
dec
fistpl
dec
mov
pop
xor
xlat
pop
inc
int
add
popa
adc
dec
in
sahf
sub
lods
dec
cmpsb
jo
xchg
fidivs
lcall
ljmp
mov
jo
push
lea
out
or
out
ja
in
subl
mov
push
push
inc
jo
dec
hlt
xlat
pop
ss
inc
add
jbe
push
or
adc
and
push
sub
and
out
and
adc
out
add
mov
bound
in
fidivl
or
dec
gs
loope
add
das
icebp
and
dec
jmp
sbb
dec
adc
rol
iret
cmp
daa
mov
add
pop
stos
arpl
cmpsb
cmp
lret
add
rorb
add
add
stos
jecxz
leave
jmp
rorb
ror
enter
inc
mov
rclb
lods
dec
add
nop
out
insb
inc
xor
cmp
stc
lcall
or
test
sub
adc
inc
pop
mov
mov
int
dec
insl
ss
lods
push
mov
icebp
jecxz
ja
cmc
jl
pop
or
mov
fs
iret
pop
enter
sbb
leave
jbe
jae
dec
pusha
cmp
fs
out
or
insl
push
gs
bound
bound
xchg
into
loopne
lahf
mov
pop
dec
fadd
loope
xor
mov
fcmove
mov
add
mov
push
aas
mov
xor
dec
mov
jnp
inc
imul
cld
mov
mov
mov
fwait
pop
mov
repz
scas
add
jg
or
sbb
sti
cmp
mov
sub
std
and
cmp
cld
mov
divl
xor
lock
push
popl
and
rorb
mov
sub
fcomps
aas
das
popf
int
into
push
iret
xlat
inc
push
subb
in
pop
or
inc
cmp
jl
pop
cmp
nop
sub
or
and
or
cmp
fnsave
popf
je
into
fldenv
mov
repz
add
push
xchg
pop
loopne
push
mov
es
ds
rol
inc
imul
mov
imul
rolb
add
sti
fiaddl
pop
xlat
in
xorl
adc
sarb
imulb
sub
mov
scas
popf
fistpl
and
stc
int
xchg
sub
in
int
std
dec
es
push
push
dec
cmc
out
add
xchg
push
sahf
push
movd
pop
dec
sub
lea
xor
and
add
shlb
dec
es
test
pshufw
daa
ja
pop
add
fsubs
lods
je
cmpl
adc
jb
js
pop
jg
jnp
xor
xchg
pop
jmp
das
mov
mov
mov
lods
adc
mov
add
jg
inc
adc
add
jne
bound
xchg
sbb
mov
fcom
ss
jb
roll
repz
cli
or
imul
pop
fs
into
sub
pop
cmp
or
inc
les
movsb
pop
mov
int3
pop
es
cmp
lods
sub
cmp
sub
jmp
inc
push
mov
xchg
loopne
inc
and
xorb
out
pop
lret
xchg
cmp
and
push
jno
jb
xchg
inc
lahf
cmp
jmp
xchg
clc
push
stc
fstl
sbb
sub
scas
cmp
sbbl
ss
out
mov
adc
or
xchg
sbb
mov
inc
sub
mov
test
popa
mov
xor
stc
inc
lret
xchg
sbb
add
pop
hlt
dec
and
jb
outsb
jo
fistpl
mov
sbb
or
jecxz
add
jmp
fsubrs
cwtl
xor
shll
sub
cmp
or
inc
pop
ror
push
fmull
nop
cmp
mov
rorb
and
push
gs
adc
fdivs
mov
mov
out
jmp
push
sahf
xchg
lock
fsubr
js
jmp
push
mov
xchg
dec
add
push
aas
mov
cmp
mov
xchg
flds
inc
inc
outsb
xchg
call
cmpsl
xchg
xor
mov
insl
orb
sub
jmp
out
mov
outsl
wbinvd
enter
test
cld
int3
out
jle
lret
test
shll
inc
sbb
xchg
sbb
dec
pop
out
mov
addr16
ror
mov
push
addr16
lea
dec
dec
fldenv
push
bound
adc
fwait
aas
loop
pop
push
fs
in
cmpsl
out
add
out
jmp
sti
icebp
loopne
xchg
cmpsl
and
mov
es
cmp
lods
popf
push
rolb
pushf
adc
dec
dec
jmp
lea
loop
mov
adc
pop
inc
xor
and
jp
inc
xor
mov
jge
push
subb
push
cmp
inc
sti
cmpsl
sahf
aas
adc
call
popa
inc
je
stos
xchg
sbb
and
imul
mov
out
lea
mov
ja
movsb
lcall
push
adc
pop
lret
push
mov
jo
sbb
pop
iret
jg
dec
add
or
pop
lret
shl
xor
cmp
push
sbb
ds
ds
pushf
ret
ret
scas
out
xor
aaa
shll
adc
faddl
push
xorl
xor
test
cmp
mov
daa
cli
stos
push
xchg
scas
in
mov
xorl
fs
into
fisttpll
jo
sbb
daa
rorl
mov
cmp
in
jmp
repnz
emms
in
sub
out
hlt
outsb
cmp
mov
int
add
stos
arpl
and
mov
xchg
mov
cmp
repz
rclb
sti
sbbb
out
lahf
or
shlb
push
sahf
push
dec
ret
ja
mov
hlt
mov
mov
sti
cmp
pop
rorl
inc
pop
movb
out
pop
push
aas
jle
fnsave
mov
test
mov
and
mov
ds
mov
cmpsb
mov
xor
push
adc
insb
push
mov
fwait
cs
bswap
mov
cs
sbb
ret
out
fsubrl
adc
pop
pop
mov
ss
dec
aas
and
repnz
dec
mov
cmp
mov
adc
jmp
adc
jne
cmp
aam
push
stos
divb
mov
lds
gs
push
mov
clc
subb
jecxz
cmp
insb
lret
mov
cli
mov
jo
int
imul
clc
aas
xor
ret
add
andb
pop
jnp
pop
das
pop
mov
gs
imul
cwtl
dec
lcall
xchg
test
dec
inc
iret
int3
ss
lods
pop
jp
xor
out
mov
fdiv
aas
dec
ljmp
lea
nop
sti
xlat
fs
icebp
lahf
aas
dec
cmp
jmp
movsb
mov
cltd
and
rclb
insb
movsb
pop
jo
push
cmpsl
subb
xchg
aam
pop
imul
push
addr16
popf
jbe
lock
cmp
push
jno
cmp
sti
ds
mov
dec
bound
mov
or
inc
or
inc
imul
test
lods
sub
jns
loop
jle
cs
pop
mov
call
push
into
fs
sub
cli
movsb
push
dec
bound
pop
das
je
arpl
cli
dec
push
dec
xchg
repnz
daa
sub
adc
add
inc
fs
out
pop
repz
jae
icebp
pushf
mov
xor
cmpsw
inc
rcrl
or
lods
xchg
stos
add
and
idiv
cmp
insl
and
mov
and
xchg
idiv
push
inc
stc
xor
pushf
pop
xchg
jns
and
cmp
cli
test
shrb
cmp
iret
cltd
shll
lods
mov
fisttpll
and
inc
inc
dec
adc
cmpl
or
imul
lea
cmp
push
mov
scas
andl
cmp
add
dec
cmp
in
out
fs
movb
aad
mov
add
jne
sub
into
jbe
incl
cmp
adc
push
push
push
dec
ret
jle
xor
and
cltd
gs
push
es
or
or
test
inc
xor
out
inc
iret
cmp
dec
test
rolb
xor
dec
push
pushf
cmp
sar
or
jmp
js
idivb
dec
scas
mov
data16
add
sub
pop
idivl
inc
add
movsl
lea
das
xchg
stos
mov
mov
repz
mov
xchg
push
ret
mov
xor
sub
lahf
es
xchg
inc
sub
add
ds
xchg
dec
loope
fs
idiv
mov
push
mov
add
sub
sbb
dec
xchg
mov
js
jp
test
mov
add
imul
test
sub
je
xchg
orb
xor
push
repz
rcl
rclb
or
es
lahf
in
add
mov
adc
cli
xor
push
data16
in
addr16
pushf
xchg
sbb
mov
hlt
pusha
pop
popa
in
js
and
xchg
xchg
jg
into
mov
xor
xchg
fs
jne
inc
and
int
fiaddl
jle
insb
lods
std
pop
push
out
mov
dec
mov
nop
aad
cmp
out
dec
push
gs
sbb
popa
sub
iret
xor
lcall
pop
mov
cmp
int3
shrb
lret
lret
sub
out
jmp
jne
sbb
out
shll
xor
xchg
int
add
pop
out
inc
div
adcl
gs
leave
es
loope
jb
imul
xchg
jns
or
inc
inc
and
mov
mov
inc
loop
jg
loope
lock
sub
outsl
xchg
dec
fistpll
into
xchg
fs
xor
addl
pop
jnp
mov
xchg
rcl
mov
jae
lea
adc
pop
mov
test
and
pusha
cmc
mov
xor
xlat
nop
imul
push
mov
in
jmp
movsl
cmp
movsb
dec
sub
lods
jmp
icebp
adc
mov
jmp
or
test
mov
lahf
inc
mov
jp
cltd
mov
stos
dec
add
xorb
jne
fiadds
pop
xorl
loope
sti
ss
xchg
xchg
mov
icebp
shll
hlt
ljmp
into
dec
fwait
in
push
dec
bound
jno
rorl
je
rorb
inc
out
imul
push
mov
out
push
cmp
pop
sti
std
mov
pop
cwtl
mov
aam
movsl
cli
adc
leave
xchg
jp
fidivl
bsr
loop
cmc
jnp
sub
xchg
cmpsb
bound
adc
inc
push
adc
lahf
inc
movsl
fwait
and
pop
aas
add
xor
pop
in
popa
mulb
push
mov
cmp
pop
or
pop
jno
cmp
jg
or
push
push
sbb
data16
js
mov
je
adc
out
adc
cmp
popa
mov
jg,pt
adcb
jmp
maskmovq
notl
mov
mov
scas
repnz
je
sub
xor
dec
fwait
jge
and
cs
aaa
jp
leave
mov
insl
jnp
cmp
mov
sahf
out
in
aaa
dec
sbb
sub
sbb
in
rolb
push
insb
pop
pop
scas
sbb
dec
pusha
repnz
ljmp
outsl
lods
loop
sahf
scas
and
movsl
sbbl
mov
negb
adc
fildl
or
jne
adc
stos
aam
pop
int3
inc
jle
inc
mov
inc
sti
pop
js
in
or
xor
fstpt
aam
add
arpl
cmp
divb
adc
cmpsb
stos
add
push
push
mov
jp
sarl
out
fnstsw
lds
add
mov
add
xchg
jmp
inc
in
adc
out
std
and
jp
nop
mov
dec
and
push
mov
int3
les
in
mov
add
lret
adc
decb
push
int
insb
nop
cmp
push
loope
cltd
gs
sbb
mov
cwtl
add
ret
adc
inc
lahf
sbb
cli
rol
mov
inc
stc
mov
mov
sbb
popf
pop
lret
mov
cmp
outsl
cmp
fiadds
xchg
cli
iret
out
movsb
jmp
or
adc
out
cmp
loop
adc
push
orb
xchg
cwtl
movsb
pop
inc
and
iret
pusha
push
repz
call
lds
inc
xor
adc
pop
or
sub
sbb
sti
negb
cmpsb
mov
inc
mov
sub
sub
jmp
lock
pop
jae
mov
into
cmp
cmp
imul
mov
into
and
ffreep
and
fcomps
xor
sub
push
pop
lret
cltd
scas
js
or
inc
inc
xchg
imul
repz
dec
and
repz
mov
sub
daa
daa
xchg
xor
test
jmp
ret
add
loope
cld
mov
ja
arpl
aas
adc
adc
xor
cli
sub
mov
sub
gs
xor
push
push
icebp
jo
sbb
lods
xchg
mov
add
sbb
xor
and
or
imul
xor
das
xchg
rcr
mov
out
sbb
push
and
int3
je
push
mov
outsl
cmp
jae
fs
inc
and
add
mov
mov
add
mov
cld
xchg
call
es
inc
jno
add
cmp
fsubrl
jmp
pushf
inc
push
mov
pop
cmp
dec
pop
add
add
sti
mov
add
rclb
lret
jge
mov
ljmp
lahf
loopne
mov
lret
shll
cmp
jl
xor
push
lret
dec
into
cmp
negl
in
sub
and
iret
dec
push
sbb
test
shlb
add
dec
mov
ss
nop
es
mov
jnp
xorl
jae
sub
in
mov
rolb
mov
icebp
adc
in
jecxz
mov
cwtl
xor
pop
scas
cmp
xchg
js
out
cmp
daa
imul
test
lret
mov
stc
rcr
mov
test
xchg
bound
sbb
andl
test
lahf
mov
fsubl
inc
adc
and
mulb
push
shl
xchg
cmp
js
sub
loopne
mov
mov
or
clc
xchg
jns
ja
aam
mov
lock
loope
mov
push
pushf
test
xlat
inc
mov
dec
adc
sub
mov
adc
pushf
xchg
pop
xchg
xor
sbb
mov
xor
clc
cmp
adc
push
ds
out
push
loopne
iret
rcrl
adc
push
push
lods
cld
arpl
push
aad
ds
xchg
rolb
pop
popf
adc
or
fsts
mov
fmull
lahf
push
xorb
push
mov
aad
push
jb
mov
sbb
pop
imul
mov
enter
js
mov
dec
lods
cmc
dec
sub
xchg
rorb
je
clc
cmp
in
pop
fcomps
int3
adc
lods
mov
pop
mov
pop
pop
imul
push
sub
mov
fs
inc
icebp
icebp
sub
imul
enter
sbb
cltd
inc
mov
inc
or
xor
jmp
bound
lods
dec
cmp
popf
sbb
cld
imul
fcompl
out
iret
in
xor
xchg
sahf
jp
sbbl
mov
shll
jnp
aaa
ds
fisubl
movsl
inc
out
add
call
jl
add
aas
sbb
push
add
icebp
ret
adc
and
mov
pushf
jb
sub
aas
aam
lret
stos
cmc
aad
out
dec
sub
testb
pop
cmpsl
sub
jle
xchg
int
jg
mov
jle
pop
inc
xor
jno
testb
mov
inc
leave
stc
cmp
jne
daa
int
add
mov
xor
inc
mov
shll
inc
push
mov
and
push
call
pop
outsl
mov
add
dec
xchg
and
dec
jno
sahf
mov
inc
adc
push
push
dec
in
fcomp
cmc
pop
xlat
mov
mov
jmp
fisubs
inc
int3
mov
lret
add
mov
es
je
push
mov
les
ljmp
out
scas
sti
mov
scas
pusha
testb
jecxz
mov
movsl
sub
jp
mov
pushf
xchg
rcll
das
and
jmp
shrb
pop
and
wrmsr
and
insl
fs
and
ret
xor
jb
sub
pop
addb
mov
sub
and
rcr
xchg
sar
out
std
mov
cmpsb
ret
xchg
repz
and
jmp
std
mov
jae
cmp
mov
sbb
or
movsl
sbb
xchg
aas
shll
mov
xor
xchg
pop
jg
adc
add
jns
adc
es
sub
inc
lea
dec
xlat
test
xchg
push
xchg
inc
je
lock
icebp
jg
aas
test
movsl
inc
daa
fiaddl
mov
sub
shr
repz
in
add
je
push
and
nop
sub
cwtl
inc
and
sub
add
xchg
jbe
ljmp
add
pop
jb
jge
push
jge
adc
lret
popa
mov
sub
aas
or
xor
add
mov
test
cs
lds
push
pop
pusha
jns
into
lock
jecxz
mov
dec
pusha
arpl
clc
inc
das
push
cmp
xchg
push
call
mov
cmp
in
pop
inc
ds
lret
cmp
adc
inc
cmp
xor
fs
sbbb
push
ss
pop
sbb
pop
leave
lahf
std
sti
jmp
jb
mov
adc
sub
mov
rorl
push
push
sbb
movsl
mov
mov
leave
test
loope
push
out
pop
dec
mov
or
jnp
mov
mov
call
xchg
daa
add
cmp
xchg
mov
rclb
mov
mov
hlt
push
push
in
iret
mov
gs
xchg
jmp
sbb
push
inc
mov
cmp
lea
fsubrs
mov
popa
add
in
bnd
or
or
gs
xchg
rclb
mov
shlb
data16
xchg
sbb
sub
std
lret
fdivrl
mov
scas
ret
sarl
mov
inc
mov
jo,pt
add
nop
lock
and
js
xchg
or
test
in
cmp
cmpsl
in
lret
insb
vmread
mov
jl
dec
jmp
push
aam
ret
je
cmpsl
and
int
ss
sbb
movsb
mov
movsl
add
dec
mov
push
test
inc
fwait
jmp
bnd
in
std
cmp
jnp
insb
mov
and
aad
fildl
jmp
mov
outsb
es
push
test
hlt
fadds
sbb
mov
stc
xorl
clc
xchg
scas
repz
cwtl
dec
xchg
in
dec
lret
dec
cmpsb
pop
sub
sub
cmovns
pop
fwait
or
xchg
jnp
pop
insb
sbb
cwtl
mulb
pop
lods
les
jmp
dec
xchg
jge
xor
dec
cmp
cli
scas
fmul
lods
faddp
jne
xchg
addr16
test
xor
jbe
adc
and
xchg
stc
outsl
and
push
aad
out
push
js
ficoml
sub
push
dec
pop
xchg
adc
out
rcrl
push
inc
ljmp
push
or
repz
push
xor
mov
movsl
add
int3
int3
push
out
mov
push
mov
cs
js
pop
movsb
test
cmp
movsb
push
or
bound
cmp
adc
sub
ljmp
scas
jp
fstl
push
rcl
sahf
jmp
popa
mov
in
mov
pusha
test
mov
scas
xor
push
aad
andb
cwtl
adc
jae
and
dec
sbb
push
lcall
outsb
shll
adc
inc
dec
testl
dec
gs
mov
dec
movsb
xor
pop
sbb
daa
sbbb
aad
adc
and
jnp
and
dec
pop
pusha
gs
mov
insl
inc
xchg
push
mov
lock
ret
ret
fildl
imul
je
cli
or
es
scas
int
lcall
sub
xor
add
push
clc
sbb
in
mov
mov
sub
sbb
cs
sbb
popf
or
push
mov
push
sti
cwtl
clc
jne
push
xchg
xchg
push
adc
push
ret
sbb
imul
shlb
cmpl
fimuls
push
push
dec
scas
stos
mov
and
repnz
dec
and
push
sbb
cmp
mov
sbb
sahf
sbb
dec
xchg
push
mov
pop
mov
and
sub
push
rcrl
mov
xor
fcoms
xchg
fadds
pop
dec
jb
mov
xchg
mov
xadd
loope
mov
jno
xchg
lds
jo
sub
dec
test
stc
cmp
add
xor
mov
into
sbb
incb
out
loope
arpl
jbe
mov
sahf
rcl
aam
sbb
inc
dec
and
mov
cmp
fisubl
mov
or
push
push
iret
cmpsl
vmread
dec
or
or
fidivs
add
subl
ret
pusha
xchg
not
in
pushf
repz
inc
xorb
inc
jnp
add
filds
lret
shrb
in
or
scas
cmc
mov
push
push
loope
ror
mov
sub
stos
cli
lea
xor
movsb
mov
push
repz
mov
ljmp
clc
mov
pop
add
sbb
mov
cmp
icebp
rcll
mov
call
jnp
and
lret
push
das
add
pop
push
lods
mov
js
xchg
lods
mov
sbb
xchg
jne
and
popf
mov
imul
push
int
cwtl
xor
push
and
xor
shll
jae
ja
inc
push
pop
shl
or
and
xor
cmpsb
repnz
cmp
filds
mov
inc
jge
jecxz
mov
pop
dec
test
movsb
movl
jbe
inc
mov
push
adcb
out
jg
push
xchg
in
cld
and
jo
sbb
lods
cmc
lret
dec
xor
push
arpl
dec
fmul
cmp
mov
mov
mov
xor
cli
or
iret
cmpsb
pop
loopne
inc
shr
push
jae
imul
stos
dec
aaa
xchg
orb
lock
mov
hlt
das
mov
mov
pusha
movsl
lret
pushw
adc
xchg
xchg
mov
push
sahf
jmp
mov
fcmovnbe
fstpt
cmpb
loop
xchg
inc
or
popf
add
sbb
mov
popf
js
movb
dec
shll
in
adc
adc
les
pop
dec
pop
push
int
adc
aas
sub
mov
add
lock
jno
jb
sub
jno
scas
xchg
mov
sbb
inc
xor
inc
dec
mov
sbb
xchg
jmp
or
sub
jo
test
loop
mov
and
push
pop
cltd
popf
ret
movsl
dec
pop
fsubr
jmp
mov
push
mov
sbb
or
push
in
sub
or
xorb
cltd
pop
sti
push
aaa
repz
or
fdivrp
or
jno
cmc
stc
push
and
adc
test
subl
loope
cmp
adc
lcall
sti
sub
cmp
sbb
and
pop
cld
pop
scas
sbb
jmp
adc
jmp
idiv
jne
adc
mov
popf
out
add
cmpsl
loopne
daa
push
push
loope
push
mov
sub
ss
rclb
xor
sbb
jp
inc
cmp
jb
inc
fld
clc
sbb
imul
push
addr16
sub
mov
jecxz
test
push
pop
xlat
sbb
dec
dec
std
xor
push
fnstsw
push
push
mov
lret
pop
rolb
pushf
fisubrs
pop
adc
mov
fldl
or
aam
mov
jecxz
pusha
stc
stos
lods
outsb
js
mov
jmp
rcll
incl
mov
or
xor
negl
push
shlb
stc
icebp
jnp
sbb
aas
in
dec
mov
jo
negb
outsb
jg
inc
sub
mov
pop
push
mov
imul
cmp
popa
mov
and
aaa
loop
int3
fwait
lahf
xor
push
outsl
in
inc
pop
outsb
xchg
mov
andb
icebp
inc
aaa
scas
adcl
adc
stc
fidivs
push
jno
push
nop
add
lcall
imulb
jmp
mov
cmp
dec
shr
daa
jne
decb
adc
das
lret
hlt
mov
jbe
cmp
ret
incb
push
arpl
fdiv
mov
nop
daa
js
in
cmp
add
insb
or
push
xchg
mov
add
bound
js
inc
in
dec
sti
int
nop
inc
je
cmp
and
push
adcl
fmull
pop
push
test
cld
pop
jl
add
xor
das
jmp
mov
dec
mov
movsl
cwtl
in
xor
xor
mov
jmp
pop
mov
insl
leave
fnstsw
push
jae
push
addr16
js
cmp
jno
cld
mov
inc
lret
mov
cmp
inc
cs
int3
dec
movsb
inc
nop
lea
pop
dec
popf
mov
sbb
enter
mov
xchg
sti
ljmp
or
push
mov
adc
xchg
arpl
mov
sbb
and
mov
pop
rolb
fldenv
aaa
xchg
mov
or
jge
mov
notb
pop
sahf
ja
js
mov
pushf
inc
pop
aam
jo
lcall
and
sbb
sub
rcrl
push
jns
shlb
sbb
insl
lods
jnp
ds
mov
push
inc
pushf
movsl
subb
sbb
sub
sbb
fmuls
int3
test
jmp
sbb
mov
call
imul
sti
pop
inc
lahf
out
ffreep
xchg
cmp
ds
loope
into
sub
nop
or
pop
pop
dec
ret
inc
jp
push
mov
xor
jbe
push
xor
outsb
cld
jne
fdivrl
adc
aas
jns
decl
lea
jnp
popa
in
push
xor
jg
jae
mov
inc
dec
pop
inc
inc
ret
loop
xchg
push
or
jb
xor
in
popf
in
cmp
mov
test
push
sub
insb
jmp
dec
mov
xchg
push
adc
andb
movsl
aad
out
aas
xor
push
sbb
xor
dec
mov
sahf
sbb
scas
in
and
sbb
xchg
mov
sbb
or
inc
sub
sub
adc
dec
js
pop
clc
mov
lea
cld
mov
xchg
imul
fnstenv
fisubs
add
cld
jmp
xchg
mov
jae
scas
pushf
loope
fistl
xchg
jb
adc
sahf
jecxz
pop
icebp
dec
xchg
popa
jge
lea
lock
mov
pop
cltd
enter
cltd
dec
jl
cmpsb
pshufw
pop
arpl
fsub
pop
mov
mov
jp
dec
in
push
push
fnstenv
cli
mul
popf
inc
xlat
movsl
scas
aad
xor
cmpl
movsb
mov
jg
mov
mov
mov
mov
jae
dec
sub
cli
cmp
ret
nop
stc
fs
daa
sbb
push
xchg
sti
bnd
ja
and
xchg
test
jno
xchg
or
cwtl
push
sarl
push
lret
scas
cli
std
jnp
ljmp
cmc
xchg
fcomps
sub
ret
addl
mov
jp
sub
fldenv
ss
inc
mov
push
mov
pusha
fcmovnbe
lahf
xor
divl
xchg
sbb
aam
lock
aaa
xchg
add
push
dec
inc
aad
push
mov
xchg
int3
ja
test
leave
sarb
movsl
int3
shll
push
int
test
sub
out
paddusb
int3
lods
jp
test
mov
aad
lcall
push
ret
adc
lahf
loopne
push
push
add
scas
fcoml
data16
mov
push
call
out
xchg
loope
sub
test
mov
aas
sti
in
push
add
test
add
in
dec
add
mov
or
clc
popl
jmp
lret
cmc
inc
aaa
cmovnp
test
fistps
mov
xor
fidivrs
mov
xchg
dec
push
popa
pop
push
push
fstpl
lods
mov
loopne
fst
cld
mov
lock
mov
jg
dec
cmpsb
fistl
cmpsl
push
cltd
stos
mov
iret
in
lods
cli
nop
sarl
fs
inc
push
out
je
int
jnp
mov
ret
mov
xchg
add
dec
xor
int3
fcompl
sub
insb
and
cmp
movsb
es
push
mov
lret
jecxz
imul
inc
xchg
addr16
shr
mov
sbb
jl
push
test
cltd
push
sbbb
rcl
or
inc
jbe
ja
push
inc
jo
add
inc
gs
jp
jo
and
mov
push
adc
lret
or
js
sbb
lret
fisttps
mov
std
jg
add
jg
shlb
out
cmp
dec
push
cmpl
out
mov
sub
sti
dec
pop
jnp
pop
clc
shrl
cmpsl
je
cmp
lods
test
pop
dec
jle
sti
xor
sahf
xchg
xchg
adc
into
mov
in
sub
sti
out
fmul
xor
xor
mov
push
xchg
mov
adc
jl
loope
sbbb
inc
shll
in
js
in
mov
je
sub
mov
inc
mov
and
in
loop
mov
sbb
pop
pop
hlt
imul
adc
cltd
cmc
push
pop
aam
fsubl
sub
loope
popf
ja
inc
test
push
or
xchg
jg
jl
idivl
xchg
pusha
push
popf
fwait
xchg
shl
jnp
mov
inc
mov
sbb
mov
xor
addl
dec
sarb
pushf
lea
and
popa
lcall
rcll
or
das
loop
mov
adcb
pusha
push
flds
cwtl
mov
into
mov
pushf
popa
cmp
inc
and
dec
rorb
fsubl
addl
xor
inc
jno
mov
xchg
xchg
je
lret
jns
ffree
test
pop
jnp
jg
xchg
bound
rorl
popl
in
cmp
xor
pop
jno
psadbw
shll
jge
aad
pushf
add
out
mov
sbb
mov
mov
adc
and
cld
loop
fisttpl
mov
bound
cmp
xchg
adc
pop
les
xchg
mov
in
xchg
xchg
mov
push
shlb
sbb
imul
jecxz
test
xchg
sub
adc
lret
mov
pop
dec
dec
stc
pop
mov
pop
inc
in
out
adc
jnp
loopw
inc
sub
mov
outsl
mov
cld
sub
movsb
mov
mov
mov
sub
hlt
sbb
push
out
push
or
push
pop
les
enter
cmpsl
mov
pusha
leave
dec
imul
mov
lods
push
push
mov
loope
stc
ret
push
and
mov
sarb
mov
cli
mov
mov
popa
jg
cmp
dec
notb
cmp
adc
add
out
pop
or
or
imull
lret
sub
jge
arpl
shll
and
dec
das
stc
jge
mov
cltd
cmp
insb
pop
sbb
pusha
mov
adc
sub
mov
xchg
cmp
test
mov
test
stos
aam
or
loopne
cmpsl
es
xchg
pop
inc
xlat
loope
gs
mov
push
dec
rcll
shll
bound
cld
xchg
sub
je
xor
mov
mov
and
jb
faddl
cs
dec
stos
xchg
nop
nop
add
inc
out
repnz
cmp
xchg
int3
jb
xlat
and
pop
xorb
mov
add
call
mov
xor
lret
std
pop
incb
pop
inc
inc
xor
sub
cmp
pop
les
aam
xor
test
adc
loope
rol
mov
lcall
loop
add
fnstcw
mov
add
xchg
dec
mov
pop
cmp
outsb
fstpt
loopne
mov
xchg
faddl
mov
sub
pusha
inc
fsubrp
cmp
jle
fwait
push
lds
xlat
jns
jae,pt
ja
or
push
dec
in
iret
push
int
add
in
jecxz
push
loope
cltd
imul
idivb
addr16
or
cmpl
cmpsl
dec
cmp
mov
push
lret
add
movsl
jns
inc
sbb
lods
sti
ljmp
inc
jne
aas
cmpsl
out
rorb
js
push
scas
stc
fistpl
mov
cmpsl
je
adc
push
hlt
mov
jge
scas
repnz
repnz
test
outsb
cmp
add
xchg
insb
or
pop
cld
xchg
xchg
stc
mov
cmp
ja
cmc
das
jb
test
mov
sbb
lcall
lret
inc
mov
rcrb
cmpsl
push
subb
mull
andl
push
adc
popa
mov
sbb
std
push
aad
inc
xchg
enter
addr16
sbb
les
cld
dec
mov
push
pop
roll
pushf
roll
jnp
bnd
and
dec
add
inc
pop
jo
data16
lcall
xchg
inc
fsubp
cmp
add
sub
dec
rorl
push
xchg
pop
jge
lret
inc
out
fistpll
scas
ljmp
fs
lret
and
stos
push
in
daa
sbb
mov
sub
push
shrb
sub
fcoms
test
inc
insl
ljmp
mov
sub
fisubs
fucomip
or
imul
faddl
mov
hlt
mov
adcb
jle,pt
bound
dec
ja
add
lds
mov
cmpsl
jle
mov
or
jmp
fsubl
stc
add
mov
or
icebp
add
adc
aam
dec
mov
ja
adc
fs
rcrl
divb
push
imul
js
cmpsl
pop
adc
enter
imul
aam
mov
cmp
cmp
sub
cld
adc
dec
push
push
jnp
add
shll
test
xor
out
shl
pop
ja
cmp
out
xchg
cltd
inc
push
pushf
lods
jno
bnd
cmp
aad
mov
push
js
std
mov
sbbl
push
loop
in
add
aam
es
vorps
shll
xchg
lea
in
push
je
insl
mov
mov
mov
mov
ja
fsubl
pop
xor
mov
loop
loop
xchg
cmpsb
adc
iret
in
mov
and
lret
sbb
js
dec
orb
iret
sub
add
test
sub
cmpsl
call
into
in
or
sbb
sbb
jle
imul
loopne
mov
jno
cltd
push
punpckhdq
and
mov
js
add
inc
jbe
popf
sbb
inc
leave
mov
hlt
ret
inc
sub
pop
leave
out
lea
mov
dec
in
xchg
pusha
dec
pop
push
pusha
and
movsl
out
fidivl
sub
lods
add
outsl
mov
mov
outsb
or
and
lret
loop
xor
test
mov
mov
pusha
jp
cmp
sub
scas
lods
loope
jb
xor
arpl
cmp
daa
in
mov
cmc
jecxz
mov
pop
mov
inc
xlat
data16
dec
cmp
stos
outsb
cmp
push
add
cld
into
fcmovnb
sub
jge
mov
dec
pop
mov
cld
pop
adc
cmp
ret
ss
pop
pop
lret
xor
xor
lock
mov
mov
ja
cmpsb
aaa
pushl
xchg
out
or
ror
mov
pop
sbb
xchg
or
cmpsb
sub
push
push
push
aam
cmp
scas
add
call
popa
dec
fstl
mov
insb
fistl
xchg
mov
mov
lock
js
pop
add
mov
aam
fistl
lods
add
popa
xchg
inc
or
cmpsb
jno
cmpsl
push
paddusw
mov
add
xor
jge
test
cmpsl
imul
xchg
mov
add
popa
jno
scas
dec
jg
movsb
dec
inc
mov
aam
mov
add
call
sbb
aam
xchg
jle
cmp
sub
fs
addl
rep
mov
inc
push
fisubrl
lea
sub
pop
or
in
ds
jle
jno
jae
mov
dec
xchg
scas
in
mov
incl
stc
repnz
scas
inc
cmp
clc
fisttpl
push
dec
sub
or
sbb
add
mov
dec
jl
pop
inc
or
fdivrs
sti
xor
roll
fnsave
push
inc
gs
or
add
je
mov
sbb
cmpsl
fwait
mov
mov
pop
int3
push
dec
adc
pop
sbb
out
mov
repz
iret
inc
in
jge
or
hlt
lods
outsb
add
jmp
lea
dec
jb
sbbb
push
jb
ret
push
sbb
aam
mov
leave
and
and
dec
rclb
mov
inc
and
sub
ret
add
aaa
mov
lock
outsl
lahf
stos
pop
pop
repnz
jnp
cmc
sub
adc
jns
cltd
inc
cmp
test
and
out
jno
and
or
cmc
outsb
call
pop
add
shll
mov
jb
cwtl
mov
outsb
mov
jmp
nop
push
imul
movsb
popf
adc
lods
sbb
aaa
ss
inc
in
int
clc
movsl
add
mov
movsb
rorl
shlb
sti
adc
enter
pmuludq
out
popa
cltd
xchg
rorb
cmp
sub
or
aam
push
add
inc
dec
inc
ficoml
sti
fidivrs
mov
xor
data16
xor
test
imul
jns
jle
mov
ret
lahf
insb
push
es
repnz
jmp
lds
fimuls
jmp
bound
dec
jns
mov
push
xchg
or
popa
cmp
adc
push
cmp
xchg
addr16
into
push
cmc
xchg
xor
add
cmp
stos
xor
pop
mov
xor
mov
mov
icebp
mov
jecxz
fsubl
paddb
jp
push
push
shll
or
fimuls
jmp
mov
ljmp
mull
and
nop
push
lods
fsubl
mov
jae
int
call
xor
mov
cmpsb
mov
xlat
gs
cltd
popf
push
aam
testl
sub
pop
popw
jne
add
mov
clc
xchg
xor
pop
enter
pusha
jbe
sbb
inc
incl
or
cli
out
and
cwtl
fnstcw
xchg
xor
xchg
mov
jns,pt
std
scas
mov
mov
addr16
xchg
sbb
xchg
mull
xor
dec
imul
loop
or
push
cmc
mov
fwait
sub
das
jbe
adc
pop
test
xlat
pop
mov
out
sub
add
inc
and
ds
loope
and
cltd
mov
stos
mov
mov
adc
xchg
push
mov
shll
and
push
xchg
inc
rorb
insl
call
dec
jecxz
push
pop
addb
loope
push
lods
adc
push
adc
mul
call
mov
push
imul
je
mov
push
mov
add
rcr
dec
popa
xor
cltd
mov
push
inc
dec
les
lret
loopne
out
or
cmpsb
dec
test
in
pop
adc
pusha
xor
int
cmp
cltd
sbb
enter
adc
xchg
push
xchg
das
loopne
mov
sbb
int3
adc
sub
std
lret
adc
cmp
test
jb
xchg
inc
adc
arpl
movsl
xor
dec
fcoms
lret
or
stos
xor
je
arpl
out
xlat
push
imul
mov
leave
jnp
aaa
mov
lahf
movsb
lcall
sbb
adc
lea
movsl
adc
lds
inc
jl
or
dec
mov
dec
aad
mov
xchg
pop
inc
mov
subl
aad
pop
or
mov
shl
or
ljmp
mov
pop
adc
cmp
xlat
pop
out
xorb
ljmp
add
add
pop
cld
fwait
in
jle
jne
stos
or
xchg
jbe
xor
out
shlb
loopne
pop
jb
fisubl
cmovl
push
push
jns
push
dec
std
int3
lea
dec
or
inc
in
mov
mov
rcrb
sahf
pop
dec
fdivl
daa
xchg
out
jae
jo
jmp
decb
mov
add
push
pop
pop
push
loopne
push
push
mov
in
push
mov
push
ror
cmpsb
mov
dec
push
sub
mov
lahf
mov
aaa
das
lcall
sbbb
add
sar
mov
or
mov
cmp
adc
jno
pushf
adc
push
mov
jns
out
push
adc
cmp
push
imul
mov
add
xchg
ret
addr16
les
push
stos
sbb
mov
outsb
cmovo
jle
cmp
inc
add
xchg
movsb
push
adc
cs
cmpsb
cmpsl
mov
in
push
cld
sbbl
sbb
cltd
pop
mov
aad
pop
jbe
fdivs
repz
addr16
in
xlat
push
push
mov
xor
mov
and
repnz
mov
stc
or
imul
sarl
cli
jge
mov
lret
mov
mov
mov
push
movq
clc
push
in
idiv
fildl
out
inc
enter
jle,pt
mov
sub
adc
mov
sub
inc
scas
sbb
aas
leave
xchg
lods
call
lret
sub
adc
mov
add
push
in
fwait
decl
xchg
fucomip
inc
mov
out
loope
data16
inc
cmp
sub
cmpsb
dec
xchg
mov
ret
inc
jl
es
push
mov
sbb
lock
loop
jecxz
or
cmpsl
outsl
scas
outsb
inc
fmuls
push
xor
push
std
jb
xor
jp
pop
pop
mov
sub
test
xor
xchg
mov
add
rorl
jnp
mov
clc
rcl
test
push
add
loop
add
cmp
test
movsl
xor
daa
mov
addr16
ret
sbb
faddl
clc
ret
mov
mov
rolb
testb
cmp
mov
push
jmp
cli
das
or
or
bound
into
subl
xor
mov
mov
ljmp
cmp
lods
inc
mov
dec
enter
mov
mov
clc
lock
mov
loop
pusha
inc
sahf
sbb
xchg
fwait
sub
sub
adc
jl
jge
pop
in
inc
jae
stos
inc
sbb
push
shl
mov
push
das
fisttps
je
push
push
mov
loop
sub
repz
jo
imul
test
sub
xlat
lcall
clc
dec
andl
outsl
cld
out
wrmsr
call
cmp
aaa
mov
mov
inc
jnp
xchg
jne
stc
ret
lock
shrl
hlt
xchg
mov
adc
loop
bound
push
push
gs
cmp
mov
push
jge
lret
es
femms
push
adc
rolb
push
lods
loope
lds
cmc
mov
pushf
insl
mov
mov
mov
fdivrs
xchg
mov
sub
xor
and
lea
sub
frstor
push
inc
and
inc
loopne
mov
jne
inc
mov
lods
mov
stc
imul
in
lahf
ret
xor
mov
jmp
shrb
pop
rorb
pop
sub
mov
mov
jmp
add
in
ficompl
outsl
insl
and
stos
ds
andb
popa
imulw
sub
rcl
fidivrs
sub
cli
dec
xor
mov
and
push
cmc
loopne
js
and
movsb
dec
xor
int3
push
fdivrs
arpl
pop
cmpb
lds
test
and
lcall
and
mov
ret
pop
push
and
sub
cmp
add
mov
mov
push
faddl
out
loope
sbb
jl
mov
lods
mov
xor
pop
fistl
out
fidivrs
sub
popf
out
push
fs
sbb
movsl
loopne
out
add
movsb
xor
into
inc
dec
icebp
lcall
jmp
test
mov
aad
mov
movsl
xor
cmp
pop
leave
push
pop
frstor
mov
lods
rorl
loop
fsts
jp
jbe
aaa
xchg
fcom
dec
mov
push
adc
jne
jp
out
lds
cmp
dec
dec
sbb
cltd
popf
adc
fstpl
jmp
test
jecxz
push
push
mov
negb
fcmovu
cmp
inc
repnz
pop
pop
sbb
dec
jb
push
adc
push
dec
mov
lea
push
cmp
andl
or
js
test
adc
rcrb
or
out
int
mov
mov
pop
and
xchg
pop
pop
inc
mov
jp
notb
lret
lods
jle
loop
ret
lret
enter
xchg
mov
enter
jge
dec
fcomps
mov
fbstp
orb
ss
push
adc
dec
hlt
jg
shl
das
cli
test
mov
lahf
out
ljmp
cmpsl
sbb
jp
mov
in
cwtl
out
jno
xlat
mov
imul
lods
lret
jmp
fidivl
insl
imul
andl
mov
sub
cmp
sbb
lock
fidivrl
mov
mov
sbb
mov
sti
and
or
mov
add
jns
leave
cmp
fwait
adc
pop
mov
cld
add
jb
mov
aam
test
lods
fisttpl
sub
add
mov
fsts
movb
dec
or
in
mov
push
inc
popa
sbb
insb
mov
wrmsr
add
mov
sbb
dec
not
jae
xchg
jo
xor
imul
outsb
pop
push
clc
jge
and
cmp
popa
outsl
mov
sub
hlt
es
in
data16
sub
int
frstor
push
pop
adc
inc
lret
cwtl
mov
repnz
movsl
jp
add
jnp
lock
xchg
fnstenv
mov
in
pusha
clc
test
or
shr
mov
pop
mov
inc
adc
std
sub
cs
or
dec
mov
pop
xchg
bound
rolb
mov
and
cmp
es
aas
push
inc
xchg
pop
jno
enter
jmp
test
mov
ss
std
nop
or
fisubs
popa
mov
mov
gs
mov
push
rcrb
xor
pop
mov
jge
int3
jg
sbb
in
out
cmp
int
int
add
mov
je
dec
in
fsin
test
clc
and
xor
inc
ret
sbb
or
sbb
mov
sahf
mov
pop
adc
jno
lea
pop
mull
aad
xchg
inc
stos
add
adc
cld
xor
test
dec
adc
jnp
jmp
nop
pop
xor
add
bts
fisubs
pop
aaa
dec
adc
pop
jecxz
pcmpeqw
jo
fisttpl
popf
mov
dec
ja
push
or
cmp
dec
or
pushf
cmp
mov
fsubs
insl
popa
repnz
insl
ja
jnp
dec
out
ds
lods
sub
aam
mov
cli
gs
lock
ljmp
out
jne
or
push
inc
mov
xor
sub
mov
cmpb
or
int3
pop
xchg
xchg
lock
xchg
mov
push
mov
lahf
insl
and
pop
cmpsl
popa
ja
or
lods
cmp
push
mov
dec
aad
shll
or
push
shlb
mov
loopne
pop
pushf
mov
outsl
mov
push
sub
clc
sbb
inc
or
add
test
jp
test
sbb
int
dec
mov
cmp
push
shrl
nop
jne
icebp
cli
inc
shll
cmp
fsubrs
pop
mov
mov
fs
xchg
outsl
movsl
push
jo
das
lods
stos
or
mov
and
mov
popf
sub
jp
xchg
inc
adc
popa
dec
sbb
adc
shll
insb
sbb
push
mov
sub
push
out
stc
jge
dec
pop
outsl
adc
fistpl
dec
inc
fimull
pop
test
fistl
ret
aad
arpl
bound
xorl
mov
les
js
imulb
inc
mov
jge
sub
jb
cld
jbe
fwait
test
mov
cmpsl
mov
push
dec
in
inc
cmpsb
in
inc
mov
fidivrl
push
addr16
lahf
sahf
out
xor
sti
push
aaa
pop
jb
aas
and
movsb
mov
lahf
test
lea
cltd
add
scas
xchg
lcall
xchg
daa
loop
or
shlb
imul
mov
in
mov
or
fisubrs
fs
fs
ret
lret
aam
in
adc
or
imul
mov
jmp
inc
push
mov
add
xchg
jae
sbb
ljmp
mov
mov
add
ret
cmp
in
push
gs
int3
je
push
jge
pop
and
add
mov
fwait
aaa
sub
add
pop
cltd
jno
dec
mov
movsb
xchg
or
pop
call
outsl
or
mov
fmull
mov
mov
dec
movsb
mov
push
addr16
call
inc
cltd
mov
or
pop
cli
adc
dec
jl
cmp
leave
mov
adc
cwtl
aas
lods
dec
xchg
insl
add
ja
movsl
cmp
pop
sbb
movsl
jmp
mov
cmp
mov
outsl
sub
es
int
xor
mov
repnz
outsl
es
orl
and
addl
sahf
int
data16
sub
mov
add
sarb
dec
inc
and
add
inc
mov
and
push
add
fimuls
daa
loop
aam
mov
xchg
cmc
stos
adc
inc
mov
push
ds
nop
or
stc
inc
jge
push
lods
movsl
mov
mov
insl
add
in
fldt
adc
lea
jmp
push
cli
jg
std
outsb
xchg
repnz
cmp
jle
xchg
into
repz
insl
js
lret
inc
sahf
int
mov
add
test
sub
xchg
enter
fwait
mov
pop
js
pop
repz
jp
push
jecxz
pop
stc
in
addr16
jp
test
push
inc
test
mov
cmp
mov
add
push
out
lret
jno
mov
mov
enter
loope
and
sub
pop
xchg
out
add
xchg
adc
mov
negl
iret
or
je
jne
fidivl
sbb
in
mov
daa
popf
mov
jle
sbb
push
out
xlat
mov
cli
mov
inc
mov
xchg
cld
mov
popa
loopne
das
cmp
sub
pushf
cmpsl
cltd
js
aas
test
push
jns
hlt
xorl
repz
pop
cmp
fidivs
sbb
add
push
push
lea
es
addr16
cmp
sub
jae
test
add
push
jbe
arpl
dec
jb
pop
cmpsb
pop
es
call
mov
cmp
cwtl
bound
push
sub
xchg
les
repz
sarb
add
addl
xor
sbbb
shlb
and
test
and
pop
mov
lahf
ret
sub
mov
mov
lods
ja
out
push
push
cmpb
ja
stos
push
repz
int3
popa
inc
divb
mov
mov
mov
dec
std
adc
dec
ljmp
dec
cmc
jb
jns
fisubl
sahf
pop
insl
outsl
pop
aad
adc
sub
add
add
sbb
xor
addl
ss
es
cli
xor
xchg
aas
push
xchg
cmc
cmp
pop
in
stos
lret
in
clc
dec
bound
ror
inc
or
jb
dec
js
leave
dec
fadds
lret
cmp
sub
leave
adc
xchg
xchg
push
out
test
jns
adc
addl
dec
dec
arpl
jp
dec
xchg
mov
test
imul
out
add
mov
aam
mov
jl
cmc
mov
jp
inc
aas
push
or
outsb
sahf
mov
pusha
sub
data16
lcall
mov
fcmove
data16
enter
stc
inc
adc
sbb
inc
cmc
out
bound
xchg
cs
add
mov
xchg
xor
dec
imul
jno
cli
mov
imul
sbb
sahf
aad
xchg
lret
test
and
lea
in
add
cwtl
sub
mov
sbb
inc
loop
in
cmp
push
lahf
repz
or
xor
lods
subl
pushf
mov
and
les
ljmp
mov
jne
xchg
cwtl
stos
cwtl
cmp
and
das
div
jp
out
addb
xchg
ffreep
pop
xor
cmp
jo
inc
xor
das
sub
mov
das
pop
stc
in
xor
scas
and
in
nop
inc
sub
ja
mov
or
cmp
cwtl
cwtl
repz
sbb
stc
mov
sbb
inc
out
jecxz
add
mov
inc
enter
mov
xchg
fbstp
mov
stos
sub
mov
daa
in
ss
outsl
fwait
sub
add
push
je
push
scas
inc
pusha
mov
shrl
scas
jle
jecxz
cmp
add
daa
iret
out
outsl
cli
jmp
nop
cmovns
or
jle
dec
nop
loope
mov
js
mov
repnz
push
inc
sbb
inc
xchg
in
lods
xchg
clc
xor
fdecstp
je
sbb
std
pop
add
dec
movsb
dec
adc
jp
xor
dec
fsubr
sub
mov
outsb
aas
rorb
das
add
mov
lret
ss
scas
xchg
les
mov
adc
jno
notl
lods
mov
std
iret
xchg
iret
or
cli
hlt
lea
dec
xchg
inc
push
xchg
xor
cmp
ficoms
andl
push
dec
enter
mov
cltd
adc
lods
add
push
xchg
idivl
jge
or
shll
pop
jae
aaa
dec
mov
adc
stos
ss
push
or
push
cmp
ljmp
sub
stc
mov
mov
ret
pusha
and
sahf
test
cmp
mov
loop
lret
lcall
adc
rcll
jmp
nop
xchg
in
lcall
xchg
dec
add
inc
add
xor
mov
test
mov
call
xchg
fmul
lcall
mov
pop
xchg
mov
jae
pushf
dec
std
pop
and
out
mov
cmc
pushf
xchg
jmp
imul
js
mov
push
mov
test
xor
testl
rcll
insb
inc
or
inc
cmpsl
sbb
mov
xor
adc
and
jnp
mov
mov
and
or
push
mov
xchg
and
add
mov
xor
lret
xor
mov
cmp
test
xchg
stos
dec
out
jb
movsl
cmpl
dec
push
imul
addr16
push
int
fcoms
cs
loop
scas
add
repnz
daa
xor
push
xor
and
stc
aad
push
mov
mov
mov
or
fwait
insl
outsb
mov
jmp
inc
rcll
movsb
add
dec
imul
ret
das
jae
push
test
roll
and
lods
push
in
pop
mov
pop
mov
adc
pop
ja
xor
enter
hlt
lods
cmp
or
clc
push
mov
pop
dec
mov
stc
dec
pop
cmp
repnz
adc
push
arpl
and
push
out
dec
orb
andl
lcall
loopne
insb
sub
pop
pop
sbb
pop
and
push
movsl
xor
std
and
jmp
flds
dec
add
mov
xor
push
stos
jbe
add
ljmp
repnz
in
inc
insl
pushf
xor
out
es
stc
dec
fcomp
or
sub
out
and
jb
inc
mov
orl
sti
mov
nop
sub
push
dec
int
stos
or
mov
push
addr16
add
mov
cmp
adc
ret
sub
rcrl
xor
jnp
lods
dec
sbb
shlb
adcl
cmp
and
js
adc
lret
into
xchg
push
or
test
xchg
adc
add
mov
xor
push
fucom
add
fnstenv
xor
test
mov
test
or
mov
loopne
add
adc
in
sbb
jo
sub
xor
shlb
in
movsl
pop
rcr
outsl
push
sub
jge
dec
in
aad
fstpt
adc
in
lret
fs
mov
fwait
jb
mov
dec
fdivrp
arpl
inc
mov
xlat
cli
xor
loope
fiadds
jecxz
popa
addr16
lahf
and
je
dec
loop
lcall
loopne
loope
xchg
lcall
outsl
testl
sub
insb
inc
lock
pop
aad
shll
push
leave
pop
mov
repnz
sub
xor
popf
push
inc
xor
test
test
scas
mov
inc
mov
sbb
imulb
nop
add
popf
xor
pop
sub
sub
dec
daa
ret
jo
cmp
fistpl
cwtl
fidivl
shll
lods
inc
mov
cmpl
fistpll
addl
lds
sbb
enter
jae
pop
sarl
xor
movsb
jecxz
addl
adc
jne
pop
dec
and
mov
and
leave
sarl
adc
inc
pop
and
xchg
jne,pn
test
shlb
popa
jl
adc
jmp
pop
ja
adc
xor
push
lods
cld
add
fsubr
or
and
gs
push
inc
jecxz
aas
mov
stos
out
daa
fs
shll
or
add
sti
push
push
icebp
cmp
leave
fdivrs
inc
das
pop
sub
pop
out
mov
lcall
pop
mov
inc
test
xchg
andl
aaa
ret
or
mov
adc
add
out
lahf
and
repz
mov
cltd
push
push
ljmp
mov
sub
pop
cld
arpl
pusha
arpl
xor
lock
or
pop
scas
aam
fcmove
arpl
xlat
jbe
es
lret
outsb
mov
aas
adc
fidivl
sbb
mov
push
pushf
clc
push
insb
repz
cmp
shld
or
stos
cmpl
cli
repz
mov
jle
xchg
mov
pop
mov
cltd
pop
mov
pop
dec
test
outsb
out
xor
or
push
inc
mov
arpl
mov
xor
adc
sbb
sar
rolb
adc
daa
es
insl
clc
pop
jo
es
pop
sub
lods
stos
arpl
mov
aas
push
notl
push
and
les
mov
nop
push
decb
fiadds
insb
sbb
scas
jmp
adc
lock
loop
or
cmpsb
mov
idiv
jno
mov
pop
pop
jbe
shll
lods
mov
push
scas
pushf
mov
pop
xchg
mov
cli
fmuls
sbb
pop
xchg
jne
outsl
rolb
mov
xchg
xchg
dec
aaa
out
push
jmp
mov
pop
ret
pushf
dec
repnz
pop
pop
cs
into
ljmp
sub
push
push
daa
cmp
roll
xchg
cltd
mov
mov
mov
pop
addl
repz
push
stos
mov
es
xor
adc
gs
cwtl
inc
out
pop
cmp
daa
or
in
insl
sbb
rcl
cli
cmp
loop
lods
mov
leave
dec
xchg
aam
dec
push
mov
cmp
scas
repz
sub
das
jns
xchg
push
sbb
sbb
leave
pop
mov
dec
pop
xor
cli
push
sbb
jbe
loop
cmpsb
mov
jnp
cmp
imul
push
mov
ja
or
imul
rcrl
cmp
jns
sbb
repnz
cmp
data16
xor
jecxz
stos
fucomp
aas
sahf
and
dec
cmp
test
fidivs
xchg
loopne
inc
pop
mov
cmpsb
decb
cmpsl
pop
rolb
das
outsb
ds
int
push
push
jno
pop
pop
mov
sbb
xor
mov
adc
je
mov
stos
adc
and
jp
pop
aad
fistps
daa
sbb
mov
loop
ljmp
int
mov
fiaddl
and
sub
jae
ljmp
ss
cmp
sub
jmp
pop
movsb
or
cs
lcall
mov
or
inc
xchg
stos
jge
add
cmp
fwait
cmp
lret
sbb
inc
sbb
push
jle
jae
in
cmpsl
xchg
data16
lcall
push
dec
lret
inc
dec
add
ret
insl
shrl
cmpsb
xchg
rorl
pop
stos
in
and
push
mov
xor
xor
mov
fadds
dec
shrl
sbb
inc
inc
xchg
xor
test
jo
sahf
sbb
aam
in
sub
cmp
pop
adc
and
adc
dec
outsb
lock
xor
mov
fxch
test
adc
repnz
pop
pusha
icebp
cmp
sub
repz
xor
clc
dec
inc
imul
dec
cmp
outsb
lcall
mov
mov
push
lods
lds
mov
stc
pop
push
shll
add
test
filds
xor
push
and
and
sub
xchg
mov
out
cli
out
das
lods
or
mov
fidivrs
outsb
rolb
jmp
sub
jg,pt
sbb
fstl
int
jge
jl
nop
xchg
inc
ds
add
inc
xor
nop
push
in
mov
cli
inc
bound
ret
fisttps
fcoms
cmc
shrl
outsb
mov
dec
sub
push
jp
sarl
sbb
sbb
add
test
inc
scas
int
fildll
add
popa
ret
hlt
xlat
jg
push
push
push
xor
aaa
add
sbb
cmp
cltd
lahf
lahf
fiadds
and
mov
and
mov
je
pop
arpl
movsb
and
pop
and
jne
pushf
out
int3
sub
jle
add
shrl
adc
stc
andb
or
xor
in
pop
cmp
xor
cltd
mov
shlb
lods
mov
xor
adc
jmp
xor
xor
inc
aam
fs
cwtl
hlt
sbb
or
mov
loop
jmp
test
lcall
test
and
das
test
and
gs
pusha
jecxz
cltd
jno
ja
pop
repz
cwtl
repz
outsl
movsl
getsec
in
sub
pop
mov
lds
mov
div
jbe
xchg
and
cltd
movsb
lds
lock
adc
in
xchg
xor
xchg
mov
sub
mov
mov
pop
mov
sbb
xor
loopne
fnstsw
and
addl
dec
insl
imul
mov
jecxz
xchg
sbb
adc
mov
in
std
jae
pop
shufps
mov
cwtl
mov
js
adc
ja
mov
in
outsl
sbb
xchg
clc
enter
and
aam
jae
test
inc
outsl
pop
push
jb
sub
xor
lods
xlat
enter
xor
mov
mov
push
loope
jns
sbb
sub
and
stos
cmp
aas
dec
cmc
xrelease
idivb
dec
push
adc
mov
adc
fidivs
push
sbb
dec
fcmove
shrl
das
push
adc
push
xchg
mov
add
std
test
lret
and
in
outsl
mov
dec
lods
sti
out
enter
xchg
stos
and
or
prefetch
push
hlt
cmp
xor
inc
or
pop
mov
and
jg
or
push
cmpsl
ljmp
aad
adc
xchg
stos
cmp
gs
mov
adc
xlat
jbe,pt
mov
adc
mov
mov
dec
stc
subl
mov
aad
push
mov
jg
or
mov
sti
mov
stc
scas
shrl
mov
add
sbb
push
xchg
inc
mov
pop
aaa
and
sbb
xor
in
mov
lds
flds
insb
pop
mov
push
in
cmp
lahf
jmp
pusha
pop
iret
and
and
jns
fldt
pop
test
cmp
xor
mov
and
pop
sub
iret
nop
adc
popf
xchg
repz
fstpl
sbb
fwait
and
in
xor
sbb
push
dec
sub
pop
xchg
adc
out
pushf
add
dec
jmp
add
data16
inc
out
lock
rcrb
subb
dec
mov
sbb
jo
negb
sub
inc
dec
mov
insb
lock
inc
mov
fldt
lock
or
inc
inc
fcomps
pop
mov
sti
outsl
loopne
mov
mov
jp
fisubl
sbb
pop
mov
or
mov
das
les
icebp
and
and
pop
lea
call
jg
call
jmp
sbb
test
push
jge
and
test
cmpsb
fistpll
or
add
sbb
mov
add
pop
ja
cld
pop
int
int
xlat
fisubs
mov
movsb
addr16
pop
repz
leave
add
pop
pop
in
sub
push
adc
sbb
test
ds
shll
inc
mov
jne
sub
mov
pop
ffree
xor
xor
mov
imul
mov
dec
cmpl
xlat
out
loopne
sahf
inc
roll
sarb
sbb
or
mov
lcall
xorb
popf
stos
lock
fstpl
mov
js
mov
cltd
inc
mov
mov
mov
mov
xchg
ss
and
sub
pop
leave
jge
and
adc
jmp
jecxz
mov
pop
aaa
cmc
lret
enter
inc
loopne
into
add
int3
je
int
xor
jbe
mov
add
mov
or
xor
in
decl
arpl
sbb
cmpsl
fists
jns
shl
std
xchg
push
movsb
fldl
add
mov
fldenv
in
inc
inc
cmc
hlt
xor
lds
dec
mov
aas
xchg
mov
es
leave
mov
xor
bound
ficompl
je
stos
sbb
cmp
fwait
fwait
ret
test
divl
push
pop
ret
push
fwait
test
ret
sub
sbb
pop
or
rorb
adc
lcall
dec
mov
inc
mov
out
inc
inc
arpl
aaa
out
and
arpl
dec
cmp
xlat
jmp
fs
cmpsb
cmp
adc
int3
adc
sub
test
hlt
flds
xchg
pusha
cmp
insl
ficompl
sbb
sub
push
mov
xor
outsl
mov
mov
pop
pop
push
inc
dec
leave
sub
out
xchg
movsb
fistps
stos
faddp
mov
cmc
test
insl
push
rcrl
lds
dec
inc
push
iret
lret
insl
add
jne
or
inc
inc
add
dec
test
stos
sahf
pop
stos
or
dec
push
loope
xor
rcrb
add
pop
push
xchg
fwait
ret
jmp
pop
loope
aaa
or
and
mov
lods
xor
mov
adc
ds
pushf
ret
mov
jno
insb
push
ds
add
scas
inc
add
mov
fisttpll
test
add
adc
lret
mov
punpcklwd
jbe
or
and
xchg
and
cs
imul
ss
or
movl
ja
data16
out
inc
inc
cld
cmp
insb
jge
cmp
cmp
xor
clc
sbb
sub
test
add
iret
popa
mov
cmp
xor
dec
fadds
stc
mov
dec
daa
fwait
push
ljmp
mov
frstor
mov
mov
jo
xchg
aad
js
jmp
test
inc
sahf
push
adc
inc
push
arpl
fwait
aas
insl
xchg
insb
aad
in
notl
test
cmp
mov
dec
dec
inc
sub
push
xchg
cmpsb
cmp
and
mov
pop
or
rcrb
pop
mov
adc
dec
les
repz
xchg
movq
xor
sub
xor
xchg
cmp
mov
mov
push
fmull
push
xchg
mov
add
sbb
insb
test
dec
cmp
lock
loopne
loopne
mov
lock
or
or
dec
jmp
sbb
cltd
cli
test
adc
sbb
dec
int3
cmp
cld
push
clc
xor
xor
jecxz
cmp
inc
fs
stos
sbb
jmp
outsb
cmc
ljmp
xor
into
sub
sbb
fcoml
dec
fmull
mov
lcall
les
mov
cwtl
push
push
ret
aaa
xchg
push
dec
imul
ss
js
jp
inc
pop
pop
fnstenv
adc
stc
lods
and
aaa
push
ds
arpl
cmp
mov
in
inc
push
jne
sbb
xchg
shll
inc
cmp
loope
mov
insl
sarl
dec
loopne
sbb
shrd
add
fsubrs
inc
data16
jmp
or
imul
std
out
pop
sbb
cmpsb
cmp
push
jnp
fidivs
into
dec
mov
xchg
scas
mov
fwait
dec
pop
movsl
scas
jne
stos
dec
hlt
add
divb
aam
cltd
mov
in
insb
sbb
sahf
add
mov
cwtl
mov
test
in
mov
rorb
sub
cmpl
jg
lods
cmp
cmp
loope
fucomp
stos
xchg
leave
aad
out
inc
jmp
lret
jb
jmp
out
test
arpl
add
aam
mulb
insb
pop
mov
hlt
lret
sbb
ficompl
in
ds
pusha
incl
xchg
add
sub
sub
imul
xchg
pop
jle
push
and
cld
lret
sbb
loope
mov
sbb
xor
in
jb
jae
ljmp
stos
andl
or
jge
jp
and
pop
sarl
xor
jbe
lea
movsl
sbb
mov
xor
js
push
js
mov
addb
inc
je
mov
mov
icebp
popa
mov
sahf
dec
mov
data16
mov
mov
loope
push
out
adc
test
movsb
push
xchg
pop
add
push
out
ds
jae
jp
or
fdivl
xor
mov
addr16
rclb
lods
in
int3
cli
sar
xor
mov
jb
mov
js
lds
add
adc
stos
and
test
and
add
cmp
push
and
lock
pop
mov
int
pop
mov
cmp
or
sbb
or
push
inc
add
and
add
shll
xchg
ja
and
int
cmove
idiv
add
xchg
out
fcoms
repz
mov
adc
and
push
cwtl
xchg
inc
jl
ret
xorb
fcmovne
dec
adc
dec
mov
mov
into
cltd
mov
dec
mov
or
push
rclb
ja
cmp
sbb
mov
or
hlt
stos
icebp
xchg
add
hlt
mov
or
mov
sub
add
cmc
jge
inc
or
loop
inc
hlt
cld
lret
adc
or
ret
in
dec
or
popf
hlt
jmp
mov
fists
or
shrl
dec
sbb
adc
cmpsb
push
outsb
in
dec
sub
push
or
leave
icebp
in
pop
imul
ja
pop
lahf
xor
cli
push
data16
call
cmpsl
cmp
xchg
pop
pop
enter
ficomps
and
nop
in
aas
inc
inc
jge
subb
bound
pop
mov
rorb
xchg
sti
in
xchg
ss
pop
pop
ss
cmp
push
jmp
adc
mov
rorb
pop
dec
push
jno
adc
lret
mulb
lods
sbb
jg
repz
push
xor
cmp
xor
sbb
xchg
xor
push
or
lods
mov
stos
sarb
outsb
fistpll
lret
sbb
cmp
mov
add
push
adc
jmp
adc
pop
lret
loop
or
fdivl
int
inc
loop
xchg
dec
cs
mov
mov
pop
mov
xor
mov
out
pop
mov
dec
dec
cmpsb
and
lret
xorl
lcall
sbb
pop
xchg
pop
aam
add
je
cmp
aaa
aaa
out
jmp
cmc
pop
and
xchg
mov
mov
loop
xchg
push
and
jl
test
repz
lock
setle
fucomip
dec
mov
add
xchg
mov
decl
fnsave
subb
adc
push
xor
rorl
rcl
mov
outsl
xchg
out
add
pusha
mov
or
or
mov
outsb
mov
cmpsb
test
fs
lret
inc
xchg
push
test
pop
mov
sbb
out
inc
mov
mov
imul
enter
xchg
adc
mov
fildll
cmp
xchg
mov
pop
int
fmuls
adc
or
sbbl
fbstp
mov
cmpsb
xchg
mov
lds
pop
cli
pop
inc
clc
dec
ret
stos
and
out
shll
inc
icebp
in
xchg
adc
push
push
lods
jnp
sub
cmp
push
mov
jl
mov
mov
pop
add
enter
jb
fsubrp
les
or
xor
mov
sbb
sbb
add
or
pop
fnstenv
mov
sbb
movsl
add
fistpl
fwait
or
and
dec
sbb
push
subb
inc
jnp
jo
xchg
aam
es
sbb
jbe
dec
and
imul
cmpl
mov
cld
les
cmpsl
leave
push
rorl
dec
ret
and
adc
sarl
loope
decl
movntps
mov
dec
mov
xchg
pop
mov
int
cmp
xchg
fsubrs
dec
in
adc
jmp
clc
scas
js
inc
addr16
pop
push
pop
inc
cs
pop
dec
lock
and
xor
pop
ja
push
test
cmp
sbb
dec
mov
ret
jbe
rcl
push
enter
inc
negb
shl
lret
pop
fldl
jp
les
mov
cmp
mov
test
push
inc
inc
mov
aas
cmpsl
das
pop
les
insl
sti
cmp
rclb
stos
dec
test
ltr
or
in
xchg
test
mov
xor
rcrl
mov
and
xor
imul
cs
cmp
sbb
ret
int3
sbb
and
fs
push
jo
ficomps
mov
lds
sarb
std
mov
push
add
outsl
in
enter
jp
movsb
roll
ret
scas
pop
jmp
ret
repz
aam
mov
int
lds
scas
add
cltd
xor
dec
je
out
test
ljmp
cmpsb
mov
mov
popf
in
fwait
and
int
mov
push
push
add
popf
mov
mov
ds
sub
jno
loop
scas
aad
fiadds
mov
jbe
mov
jmp
add
push
cmpsb
dec
popf
fnsave
sub
mov
push
mov
mov
cmpl
adc
mov
sbb
push
nop
dec
ja
sbb
int3
mov
pop
push
xor
mov
jle
mov
mov
mov
out
jnp
pop
addl
cmp
add
mov
shrl
xchg
pop
sbb
fsubs
lods
adc
push
xchg
cmc
pop
mov
es
lahf
inc
inc
sbb
adcb
sbb
rolb
jb
shrb
pop
test
sbb
shll
popa
cmpl
and
jecxz
or
sub
pop
out
je
imul
clc
or
test
sti
icebp
outsb
fwait
mov
fcomps
xor
stos
jne
out
in
in
iret
xor
push
sbb
xlat
mov
roll
test
jns
paddq
lahf
xor
push
fdivrs
xor
out
push
jp
lock
movnti
dec
call
cmp
test
push
movsb
pop
pushf
jae
inc
mov
test
lret
mul
stc
mov
pop
outsl
add
and
jecxz
int3
scas
cmp
nop
jl
rcl
lret
or
pop
mov
lahf
xchg
cmc
icebp
xchg
imul
pop
cmpsb
sbb
dec
xor
aad
inc
divl
push
push
test
nop
adc
dec
mov
push
jp
cmp
jle
adcl
xchg
sbb
mov
stc
add
adc
jp
ds
decb
subb
in
xchg
lcall
test
dec
mov
sbb
cmpl
mov
stc
jno
das
psubq
daa
dec
xor
std
ret
or
pandn
xchg
push
outsl
jl
xchg
aaa
cld
sub
sbb
xor
stc
js
imul
pushf
mov
pop
jbe
fistpll
sbb
xchg
inc
dec
xchg
outsb
fisttpl
cli
and
add
add
adc
push
fmull
cltd
test
loopne
shll
addl
pop
aaa
dec
enter
in
loopne
repz
add
mov
lock
popf
dec
mov
jnp
idivb
or
sub
daa
sbb
add
jb
fwait
cmpsl
mov
notb
and
jg
roll
lods
iret
ss
lds
dec
jno
jo
add
inc
sbb
mov
andb
cs
enter
test
mov
jns,pt
add
mov
xchg
dec
fmuls
mov
das
aas
leave
rcrb
add
dec
or
dec
shrb
jbe
mov
cmpsl
inc
inc
jns
shrl
or
fmull
and
mov
adc
push
xor
and
sub
inc
jne
fidivrl
lret
ljmp
push
add
movsl
cli
jmp
maxps
mov
mov
in
lret
or
inc
and
sbb
stos
pop
sbb
insb
rol
cltd
sbb
pushf
out
cmp
sub
sar
jmp
sub
jns
test
ss
les
imul
dec
aam
insb
adc
std
mov
push
iret
test
inc
dec
data16
or
dec
cmp
jg
outsb
sbb
push
fldt
pushf
testb
pushw
insl
jo
aas
mov
pop
aad
mov
pop
bound
insl
es
into
push
aad
imul
outsl
cmp
pop
inc
cs
sub
test
shr
jle
mov
or
pop
stos
cmovne
pop
orb
rolb
inc
out
mov
jmp
std
jmp
inc
sahf
fwait
in
in
or
pop
inc
inc
enter
js
mov
mov
js
add
cs
lcall
lret
mov
push
sbb
dec
ljmp
jo
push
or
stos
test
xchg
sub
dec
leave
sub
ret
scas
gs
lods
rep
loopne
fld
push
dec
push
ret
adc
jo
int3
mov
or
shlb
jmp
ret
add
das
das
notl
into
sbb
ret
lcall
xor
xorb
mov
cltd
out
pop
mov
cmp
loope
test
jb
xor
fldcw
mov
lcall
lock
adc
push
std
xchg
push
mov
in
ret
jo
lret
lahf
hlt
xchg
test
cmp
mov
outsl
mov
jg
and
jae
jge
popf
sbb
es
or
pop
shlb
insl
jbe
out
xor
fimull
or
pop
jge
mulb
xor
mov
jb
loopne
frstpm(287
rcrb
jnp
loope
cmp
test
xor
cs
pop
js
leave
inc
cmp
pop
outsl
jg
mov
cmpsb
test
pop
or
outsb
fmuls
adc
out
dec
push
lret
int3
jl
gs
daa
hlt
and
xchg
ss
xchg
mov
inc
pushf
cmp
sbb
gs
or
and
push
xor
inc
mov
sahf
leave
mov
sub
mov
out
adc
push
dec
and
out
outsl
stos
push
mov
lahf
ss
dec
or
jge
insb
mov
cmp
sbb
add
or
psubusw
roll
sbb
xchg
and
add
jecxz
mov
pop
fs
xchg
pop
imul
xchg
sbb
out
les
push
in
pop
loope
outsb
and
push
mov
gs
test
shlb
add
ret
cmp
inc
scas
lea
dec
jmp
and
lods
xchg
jecxz
mov
mov
push
popf
addb
inc
xor
adc
jge
jb
lds
push
xchg
xor
mov
add
out
mov
in
int
sub
gs
xchg
jecxz
repnz
adc
push
or
aaa
mov
insl
push
dec
mov
stos
es
xchg
orl
cli
lods
pop
das
adc
mov
clc
das
cli
xor
jmp
into
rcrb
jecxz
cli
int
pop
lods
xchg
inc
gs
jecxz
jge
addl
or
push
fistpll
pop
popf
mov
jp
push
out
sbb
hlt
pop
addr16
mov
sub
sbb
mov
sbb
je
mov
dec
xor
mov
jge
push
js
jo
je
sti
xchg
sub
icebp
scas
sbb
and
cmpb
jle
adc
shll
aas
addr16
pop
fwait
push
push
dec
inc
mov
lahf
or
inc
or
leave
ds
push
shrb
cmp
inc
cli
pusha
pop
shlb
mov
adc
fnstsw
arpl
jo
cmp
adc
add
xlat
stos
ss
xor
mov
inc
inc
pop
icebp
fstpt
and
popa
scas
jne
loopew
test
enter
call
aaa
test
and
cld
adc
mov
or
fwait
sub
xorl
inc
test
ja
push
aas
xor
cmpsb
sbb
repnz
pusha
jo
adc
imul
dec
xor
cld
xor
aaa
sbb
mov
add
xchg
sub
cltd
add
adc
cmpl
aam
fs
aam
xor
cltd
inc
push
cmp
aam
cld
and
xchg
mov
popa
lds
das
out
add
test
cmp
cwtl
stos
fsubl
mov
fdivp
fldl
adc
inc
pushf
fcomp
cld
and
pushl
insb
and
push
mov
xchg
fstps
lock
icebp
xor
mov
push
dec
push
outsl
inc
fildll
push
xchg
cs
cmp
dec
mulb
or
pop
xchg
push
in
inc
jp
ror
loope
outsb
jmp
xchg
mov
fldenv
clc
movsb
xchg
in
pushf
iret
xor
adc
push
inc
xor
iret
mov
sub
xchg
cli
sub
addr16
push
cmp
loop
mov
mov
lcall
rol
and
push
into
inc
pop
enter
lea
adcl
fsubrp
xchg
sti
stos
push
test
outsb
add
ljmp
jp
stc
and
sub
xlat
and
loope
enter
negl
dec
add
push
test
test
push
call
jne
xchg
xor
aad
pop
dec
gs
div
scas
inc
loopne
test
sub
bound
sbbl
jmp
xor
jne
repz
cltd
ja
stos
je
imul
mov
mov
lahf
dec
adc
xor
or
pop
xchg
rcrb
cld
out
xchg
ja
mov
pop
mov
and
xor
dec
out
stos
push
mov
xchg
aam
adc
inc
xchg
call
ja
pop
pop
inc
mov
loope
sbbb
or
or
lea
pop
cltd
and
jg
or
in
sub
mov
push
sbbl
sbb
or
ficomps
mov
push
stos
xlat
mov
dec
mov
xor
pop
xor
movb
outsl
mov
dec
inc
dec
in
in
cmpsb
sub
sarb
jp
fcompl
shl
imul
mov
and
push
js
xor
cmpl
aad
lock
sbb
nop
mov
das
les
jmp
pushf
cmc
add
gs
popa
inc
add
mov
into
push
mov
push
clc
int
fisubs
inc
enter
inc
out
lret
rclb
inc
pop
enter
pop
pop
sti
neg
lds
add
dec
into
sub
mov
ja
loopne
nop
mov
cltd
in
mov
aad
cmpsl
cmpsb
loop
or
pop
sbb
adc
hlt
mov
mov
ds
mov
inc
test
xchg
ljmpw
jns
test
lret
and
push
xchg
in
addl
cli
or
cwtl
lahf
push
push
push
je
mov
mov
xchg
std
lods
sub
inc
cmp
in
xor
leave
dec
cld
adc
enter
mov
repz
sarl
pop
and
pop
sahf
pop
xchg
push
add
lock
pop
fmuls
andb
sbb
popf
lock
out
adc
xchg
pop
xor
addl
mov
xchg
jmp
mov
mov
pop
ljmp
mov
in
or
jne
imul
call
inc
outsl
fstpl
inc
iret
call
pop
pop
jge
jl
mov
jno
fdivl
outsl
outsb
sbb
mov
and
add
push
in
icebp
movsl
es
out
mov
nop
adc
mov
inc
lods
adc
stos
outsl
shrl
xor
cmp
gs
fidivrs
pop
sub
jb
cmp
inc
repnz
or
pop
fnstenv
ficompl
repnz
mov
jecxz
mov
and
adc
inc
rcrl
sarl
cmp
cmp
mov
scas
cwtl
sbb
mov
jnp
push
sub
or
inc
aad
pop
scas
aaa
and
mov
inc
mov
call
sti
inc
addr16
jl
inc
pop
imul
mov
in
call
orl
repnz
mov
repnz
xor
mov
push
shrl
add
lods
scas
mov
jnp
jae
push
test
inc
adc
mov
jb
cld
aaa
scas
jmp
sarb
inc
call
dec
pop
sbb
or
push
xor
lahf
cmpsb
fdivrs
loope
loopne
int3
lret
push
dec
test
scas
int3
movsb
dec
adc
pop
stc
in
loopne
in
add
flds
jns
insl
ljmp
jo
in
test
pushf
data16
adc
push
mov
dec
push
leave
mov
enter
or
or
push
jnp
or
push
mov
flds
ja
and
lcall
xchg
popa
inc
dec
jno
sbb
inc
decb
dec
lds
mov
or
les
push
sub
lret
sub
and
push
iret
and
sbb
shrl
adc
jecxz
sahf
xor
pop
dec
sub
sarb
les
fs
xchg
je
push
add
inc
add
ret
adcl
xor
or
mov
add
jecxz
jbe
sub
mov
jl
sahf
add
xchg
xor
fisubrs
mov
or
lods
pop
xchg
mov
stc
mov
push
inc
imul
popa
mov
mov
mov
cltd
fisubl
mov
mov
push
js
xchg
jbe
adc
mov
dec
jmp
ficoms
movsb
call
xchg
and
push
andl
aas
dec
outsb
jl
fcomp
mov
cli
ljmp
ja
xchg
ss
cmc
inc
sbb
inc
insb
push
mov
push
scas
lret
sti
push
scas
rcrb
sbb
popf
and
adc
mov
mov
mov
aam
mov
fisubrs
add
test
sub
add
sub
mov
cmp
sub
loopne
jmp
jo
incb
loope
decb
out
movsb
push
jno
fimuls
imul
and
mov
fisttpl
bound
pop
cs
mov
pop
and
sbb
aaa
xchg
push
push
sbb
push
fxch
fs
inc
std
dec
push
xlat
mov
xchg
sbb
repz
mov
repnz
mov
push
in
lea
sbb
lahf
mov
pop
lock
ficomps
cli
and
mov
fadd
roll
inc
daa
ret
mov
push
loopne
mull
js
pop
mov
int
and
mov
test
js
xor
and
rcll
jmp
xchg
sbb
push
add
adc
icebp
in
pop
enter
stos
nop
add
aas
scas
add
mov
insl
xchg
xor
xor
xlat
in
lret
xchg
dec
cmp
popa
hlt
add
push
adc
adc
dec
test
and
cmp
lret
imul
or
xlat
cli
pusha
mov
dec
rorl
sub
pop
fistpll
jae
addl
out
pop
mov
lret
cs
dec
mov
or
xor
add
mov
stos
out
popa
cmc
cwtl
sbb
xchg
in
ljmp
jl
cltd
cmp
fisubs
xchg
rolb
mov
xchg
jg
sub
mov
cwtl
push
dec
jns
mov
add
push
arpl
jle
add
jno
movsb
mov
out
xchg
xchg
sti
cmp
repnz
testb
aas
imul
fistps
push
imul
push
out
dec
pop
mov
sbb
pop
loope
mov
imul
lds
xor
and
insb
mov
out
or
out
xor
mov
and
jnp
push
testl
sub
sbb
daa
movsl
pop
sbb
push
cmp
lods
inc
sub
nop
push
mov
shrl
loop
shrl
xchg
pop
rcll
adc
movsb
xchg
sub
mov
add
notl
icebp
fbstp
push
scas
hlt
in
imul
movsl
push
es
dec
xchg
xchg
mull
mov
lock
sbb
cwtl
fstpt
jl
movsl
pop
popf
leave
andb
loopne
push
xor
pop
imul
and
mov
in
or
iret
push
push
cli
cmp
fadd
mov
pop
push
outsl
pusha
mov
fcomps
mov
mov
adc
outsl
pop
popf
cmp
fmull
out
jp
mov
and
mov
out
mov
into
mov
cmp
popf
cld
out
add
lea
pop
jg
xorb
lock
cmp
in
rol
sub
bound
mov
mov
inc
cmp
fistpll
cmp
or
sbb
je
push
mov
and
rolb
aaa
and
iret
lds
and
enter
cmovl
loopne
pop
test
jp
addb
bound
adc
pop
push
into
push
xor
inc
push
jecxz
stc
gs
cmp
mov
or
stos
sub
fdivrs
pop
hlt
testl
jmp
sbb
or
ja
xchg
inc
outsb
xchg
lcall
enter
adc
outsb
loope
inc
jbe
rclb
popf
cmc
call
fs
adcb
dec
fdivs
fiadds
pop
mov
inc
fwait
add
and
xor
jno
or
xchg
lock
mov
gs
scas
filds
push
jg
jb
xor
mov
sub
xor
testb
cmpsl
inc
mov
imul
aaa
mov
or
mov
inc
fisttpl
pop
int3
fdivl
vphsubbw
cld
loope
test
jp
pushf
xor
int
jae
cmpsb
mov
fldenv
sbb
mov
xor
xchg
dec
pop
hlt
jb
cmp
cli
enter
mov
mull
pop
and
aaa
sbb
dec
mov
dec
fwait
loope
xchg
jle
inc
mov
ja
mov
jmp
dec
movsb
js
mov
mov
lds
fs
imul
pop
notb
mov
mov
imul
leave
xchg
cli
aaa
jg
inc
mov
in
push
fsubrl
fsub
shlb
data16
cwtl
add
cmpsb
inc
pop
enter
scas
bound
sub
gs
pop
mov
dec
mov
lret
shlb
mov
push
aaa
das
shrl
mov
aam
in
sbb
shll
jno
mov
jle
outsb
pop
push
inc
stc
push
nop
xchg
and
imul
or
lahf
mov
psubusb
push
fisubrl
mov
cmp
add
mov
imul
leave
movsb
sub
xlat
xchg
nop
adcl
push
adc
push
jns
std
dec
jecxz
test
xor
stos
pop
mov
add
xor
aad
leave
scas
push
aas
mov
fisubs
ja
rcrl
fistpll
lret
mov
adc
inc
mov
jb
push
aas
bound
mov
in
pusha
jbe
mov
out
aaa
adc
mov
fstpt
loopne
ret
mov
das
or
sbb
pop
mov
push
jbe
fadd
loopne
lcall
add
adc
mov
and
xchg
imul
int
pop
mov
and
jb
clc
xchg
mov
xor
mov
jne
mov
inc
adc
jno
pushf
add
or
xchg
mov
addr16
xlat
movsl
xor
mov
stos
orb
mov
cmpsl
xchg
cmpsl
xor
jne
cmc
lods
lcall
jp
jnp
adc
rcll
aam
add
cld
aas
dec
fbld
mov
xchg
push
push
out
xor
pop
into
mov
imul
test
cltd
lcall
repnz
movsb
add
test
xor
jmp
outsl
in
dec
sbb
add
arpl
call
jne
dec
pop
xor
addl
dec
pop
testb
push
push
outsl
mov
stos
mov
loopne
out
pushw
into
idivb
fmull
insl
pop
pop
push
dec
aas
jbe,pn
push
and
insb
movsl
gs
pop
daa
pop
mov
insl
adc
scas
add
or
jno
push
rolb
adc
xchg
jl
jg
les
push
scas
push
xor
paddb
cmc
adc
gs
rcrb
mov
sbb
inc
mov
adc
push
adc
in
daa
jno
les
mov
pop
loop
xchg
arpl
fidivrl
jno
mov
inc
popa
lret
nop
jns
dec
pop
or
pop
ss
cmp
xchg
call
sub
sti
or
inc
ss
cld
stc
mov
addr16
lahf
jns
xchg
cmpl
cmp
pop
jae
in
jle
test
int
sub
pop
mov
cmpsb
jbe
push
fcomip
mov
inc
fists
mov
ficomps
jl
pushf
sbb
adc
mov
or
xlat
jbe
aad
mov
loop
push
enter
pushf
into
sbb
in
or
cmp
fabs
scas
sub
mov
push
in
inc
pushf
mov
adc
and
ds
push
dec
out
aas
mov
mov
jbe
or
pushf
inc
xchg
ds
dec
mov
mov
pop
push
cld
inc
mov
mov
and
mov
push
shl
xchg
sub
fcoms
mov
mov
sbb
pop
adc
inc
sbb
mov
sbb
sbb
outsb
test
leave
jg
outsl
pusha
mov
add
out
jb
sub
sbb
dec
andl
xor
mov
adc
add
mov
ds
xor
and
sub
js
xadd
mov
xor
or
jns
std
mov
into
and
je
movsl
jb
mov
push
push
mov
push
inc
aaa
mov
jecxz
inc
sub
pop
sub
into
or
add
repz
xchg
lods
subb
mov
cmp
add
or
scas
dec
jecxz
dec
neg
jns
movsb
push
jp
lea
sar
addb
movsb
sbb
cwtl
lock
pop
daa
outsb
gs
cmp
and
popf
lea
or
push
and
sub
jnp
add
in
xchg
inc
cmp
sbb
cmpsl
es
cmp
ret
dec
inc
push
aas
xchg
sub
mov
push
mov
adc
ja
in
scas
cmpsl
mov
sbbb
ret
mov
xchg
mov
jno
gs
jns
push
mov
outsb
push
and
idivl
aad
cmpl
js
xchg
mov
iret
popa
xchg
mov
out
mov
pop
xlat
fistpll
fcomps
adc
fistl
add
ficoml
cld
pop
cmp
dec
mov
movsl
lods
out
fsubrs
pop
gs
jp
dec
push
mov
ficoml
add
hlt
mov
lret
lea
lahf
sbb
dec
jno
test
mov
xchg
enter
das
pop
and
pop
ret
cmp
dec
hlt
add
push
lods
add
rep
imul
lea
mov
pop
lods
out
push
xchg
int
loop
cwtl
dec
aas
pop
mov
repz
xor
fdivr
or
aam
or
or
add
xchg
and
andb
xchg
out
pop
loope
les
cli
lret
push
and
negl
popf
insl
pop
mov
pop
push
stc
hlt
mov
adc
mov
mov
int3
adc
cmp
xchg
insb
pop
int3
cli
and
std
mov
test
mov
adcl
push
in
mov
xchg
mov
cwtl
ret
int
inc
fsubrl
mov
mov
rcrl
pop
pop
dec
in
inc
rcl
scas
std
inc
jp
hlt
call
xchg
push
adc
inc
out
xor
cmc
cmp
sbb
xor
out
mov
add
aas
pushf
icebp
cmp
inc
hlt
aam
sub
sti
daa
dec
out
in
cs
and
sahf
sub
cli
sub
and
insb
xchg
sbb
xchg
or
mov
cmpsb
std
jge
flds
lds
pop
in
jl
lods
int3
mov
xorb
xor
notl
jmp
cmc
data16
int3
mov
lds
mov
insb
lea
aaa
testb
sbb
in
mov
cmp
cmc
sarb
add
rep
ss
mov
test
inc
dec
cmp
mov
aas
sub
stc
mov
lahf
and
push
dec
cmp
mov
mov
adc
stos
in
scas
jno
imul
sub
pop
pop
xlat
sub
das
fwait
sbb
push
fcmovnbe
mov
adc
jle
inc
adc
inc
fsubl
add
fists
stc
inc
fstpl
neg
cwtl
cmp
sbb
aad
call
lods
lock
add
int
push
fcompl
call
mov
jo
inc
lods
sbb
xor
jp
popa
inc
rclb
inc
inc
gs
or
pop
sub
in
sbb
ret
xor
mov
addb
leave
daa
out
insb
xchg
popaw
enter
pusha
outsb
sub
aas
sbb
adc
enter
movsl
lock
cmp
pop
out
sar
xor
xchg
dec
movsl
cld
sub
dec
leave
fdivrp
pop
shlb
adc
das
jns
test
cmp
or
jg
hlt
fadds
pop
lret
imul
arpl
lods
jg
stos
insb
mov
mov
xchg
push
cmp
wrmsr
call
push
lahf
jecxz
int3
arpl
mov
push
cmpsl
xor
sbb
push
insb
jmp
push
sbb
popa
or
lock
lods
mov
repnz
mov
int3
jle
push
mov
dec
ljmp
push
xchg
adc
lret
fldenv
cmp
add
push
mov
or
jmp
das
xchg
and
inc
mov
sub
int
mov
andb
inc
lcall
sub
jo
jne
stc
dec
gs
xchg
inc
fstpt
sbb
or
adc
pop
repnz
stc
mov
xlat
js
cli
roll
inc
dec
adc
imul
lahf
mov
mov
dec
cwtl
lcall
rol
fucomip
das
cwtl
arpl
gs
cmc
aam
iret
jns
out
fs
pop
test
das
cmp
sub
jp
cmp
shll
jg
jbe
adc
rol
movsb
sbb
mov
shlb
dec
jecxz
mov
gs
int3
movsb
lea
inc
sbb
mov
out
pop
fnstcw
xchg
jl
lahf
outsl
test
or
pop
xchg
mov
loop
ds
inc
and
les
and
mov
in
push
xchg
mov
mov
outsl
xor
pop
mov
push
or
rorb
cmp
out
xor
pop
or
dec
mov
push
mov
enter
shl
dec
inc
outsb
jnp
xor
mov
inc
xchg
jno
into
push
sub
loop
sub
les
sub
insb
rcll
fsubp
and
std
or
xchg
mov
inc
sbb
pushf
xchg
addr16
aaa
lock
iret
sti
adc
popa
cmp
sahf
movsb
mov
decb
clc
xorl
shl
repnz
stos
adcl
adc
push
xchg
xchg
pop
ret
int
scas
nop
push
and
addl
rorb
cltd
add
test
testl
push
sahf
mov
subl
out
lods
cmp
pop
cmp
dec
sbb
push
add
jp
movsl
data16
dec
add
xchg
xchg
sbb
hlt
add
xchg
sub
pop
sbb
pop
xchg
outsl
xor
adc
push
gs
gs
lahf
out
pop
jns
and
and
pop
or
dec
sbb
jp
push
and
jno
cmp
and
jmp
ficoms
fiaddl
scas
sbb
test
leave
adc
sub
movsb
sub
sub
test
cmp
gs
aad
stc
ljmp
mov
or
in
mov
xchg
jg
nop
xorb
cmpl
adc
scas
and
stc
ret
jle
inc
ljmpw
pusha
xor
xchg
pusha
sbb
clc
dec
or
add
cld
arpl
mov
sub
jae
hlt
pushf
js
mov
mov
lds
pop
xor
lods
xor
cmpsb
das
push
jmp
push
jns
sti
scas
push
pop
push
inc
pop
pop
pslld
pop
leave
add
arpl
inc
addb
shlb
pop
rcrb
outsl
adc
shlb
ja
cmpsb
out
stc
out
push
lea
mov
mov
mov
ficomps
mov
std
xchg
lret
inc
jl
pop
movsl
inc
fnstsw
mov
sar
dec
popa
pop
stos
xchg
ja
push
cmp
imul
or
js,pt
inc
aas
mov
daa
push
pop
daa
cmp
and
add
dec
or
inc
je
test
jecxz
and
lods
jae
mov
shll
dec
stos
mov
jno
inc
int
in
fmul
int3
repnz
incl
int
push
jle
es
dec
inc
shlb
pushf
iret
inc
xor
add
cmpsl
push
insb
scas
cld
pop
outsl
lods
push
jge
test
jne
imul
xchg
jmp
mov
imul
pushf
nop
inc
loope
testb
fisttps
mov
push
cmp
mov
sbb
sub
adc
mov
push
out
xor
mov
lahf
inc
mov
and
jo
jecxz
and
inc
cwtl
bound
pop
mov
or
in
arpl
dec
outsb
jp
lahf
or
clc
cmpsl
jmp
shlb
stos
lods
rcrb
pop
lahf
add
mov
arpl
dec
sbb
add
divl
scas
lods
shll
inc
pushf
les
pop
mov
mov
push
test
inc
lods
inc
outsb
xchg
sub
sbb
dec
scas
insb
jo
out
xor
addb
pop
into
fidivrs
pop
or
mov
jne
repnz
add
lret
cmp
cltd
mov
push
stc
jne
mov
adc
aad
push
jbe
imul
fisubrs
push
rolb
pop
add
in
stc
iret
adc
xchg
mov
lcall
movb
cmp
aas
sti
icebp
add
aad
iret
in
inc
lcall
lods
mov
mov
xlat
jae
ret
mov
sbb
inc
mov
cmp
and
fdivrs
or
inc
pop
inc
mov
dec
mov
ret
mov
hlt
mov
out
pop
in
sbb
out
jmp
clc
imul
add
in
add
sub
inc
ljmp
inc
cmp
sub
dec
insb
fcmovnbe
xor
dec
test
cs
out
pop
cmp
mov
ds
repz
mov
pop
mov
cmpsb
inc
xchg
xor
shlb
test
dec
sub
mov
sti
test
jle
mov
adc
xor
cmpsl
daa
dec
imul
xor
loope
or
and
mov
pop
repz
out
sbb
fsub
jle
sub
movsl
push
into
xorb
mov
insb
enter
into
mov
push
mov
xchg
lret
mov
popa
adc
mov
aaa
jmp
iret
icebp
bound
jb
loope
fucomip
iret
cltd
ret
push
iret
xchg
in
in
cmp
icebp
adc
sti
push
pop
mov
cld
hlt
daa
inc
lock
pop
add
inc
jmp
insl
mov
add
sub
daa
fstl
insl
mov
mov
inc
ljmp
imul
addr16
aam
push
dec
or
pushf
fnstcw
pop
jmp
jae
inc
cmpsb
or
fmuls
or
jmp
imul
and
daa
ret
dec
pop
adcb
or
sbb
cli
pop
imull
push
std
insb
and
scas
xor
mov
or
or
out
sub
and
push
cltd
ret
mov
into
or
test
push
test
jp
popf
cmp
push
mov
cmp
adc
adc
lods
pop
add
out
in
pop
pop
sarb
popa
and
dec
xchg
arpl
and
push
int3
dec
sbb
lfs
repnz
mov
mov
es
jle
or
adc
or
divb
mov
mov
dec
stc
cmpsb
lcall
or
xor
dec
mov
pop
cwtl
shlb
lods
mov
push
jg
cmpb
jg
or
loopne
ret
xchg
dec
xchg
or
popf
jl
insb
dec
pop
dec
jns
fcmove
adc
lds
inc
ret
cmp
mov
ljmp
faddp
pop
icebp
ficoml
ljmp
pop
fcmovbe
cmpsb
add
jmp
mov
in
push
mov
outsb
adc
mov
cmp
push
lahf
jmp
dec
pop
push
jmp
mov
lcall
mov
jge
out
mov
ja
addb
andl
imul
clc
inc
cmpsb
push
mov
ds
add
sahf
pop
jns
pop
ret
pushl
frstor
loop
mov
sbbl
fwait
hlt
leave
push
xor
insl
mov
in
loopne
pop
inc
inc
js
shlb
insl
pop
jg
scas
push
mov
lods
push
dec
inc
adc
or
stc
mov
xor
icebp
lods
movsb
les
xor
dec
lods
aam
repnz
xchg
mov
pop
push
mov
repz
enter
pop
ret
int
fistps
xchg
jecxz
mov
jmp
flds
lea
inc
dec
jae
sbb
jp
jno
dec
inc
imull
pop
add
jbe
leave
imul
pop
out
cli
bound
pusha
in
jg
push
enter
jo,pn
cmc
dec
faddl
mov
lods
sub
enter
inc
pop
jno
adc
add
or
ficoml
add
pop
cltd
dec
lret
lcall
push
inc
loope
fidivl
js
push
addr16
cltd
leave
in
xchg
mov
repz
shrl
xchg
test
outsb
mov
push
fadds
pop
and
test
xchg
out
mov
in
adc
add
push
jmp
push
and
push
aas
pop
ds
sbb
pop
movsl
addl
cwtl
jecxz
ret
mov
mov
negb
sub
aam
test
sub
xchg
cmp
test
fdivrp
mov
imul
js
imul
pop
inc
int
dec
mov
iret
jns
xchg
int3
xor
int
movsl
jne
cmp
add
cmp
clc
cmpsb
test
push
xchg
rcr
lds
pop
sub
repnz
rcll
cmp
sbb
scas
mov
dec
stos
pop
cltd
cmpsb
scas
sar
dec
push
ja
mov
data16
xor
push
ret
mov
cmp
imul
mov
cld
xchg
packuswb
add
jecxz
mov
jle
push
and
adc
mov
out
adc
psrad
ljmp
in
in
in
je
mov
sub
in
lods
sub
pop
mov
ret
push
les
in
push
lods
push
int
jno
push
pushl
sub
fwait
xor
sahf
push
in
bound
int3
f2xm1
scas
jb
sbb
cmpsl
in
sahf
or
or
mov
xchg
xchg
ljmp
loope
cmp
xchg
neg
pop
push
popf
cmp
mov
outsl
and
ffreep
pop
sahf
mov
jo
inc
out
mov
xchg
cmc
pop
and
into
sbb
or
add
stc
pop
insb
push
cld
inc
jg
jnp
jp
out
or
adc
ss
aad
add
add
loope
in
es
mov
mov
cmc
loop
sub
fs
scas
and
test
xorl
testl
popf
aad
leave
out
psubq
pop
xchg
arpl
cmpsl
dec
ror
fdivl
sub
ds
inc
xchg
gs
mov
inc
inc
dec
adc
add
push
rorb
push
inc
fimuls
adc
adc
xchg
sbb
incl
imul
inc
lret
push
push
aam
xlat
das
out
addr16
xlat
lcall
stc
aad
or
inc
das
add
jmp
ds
and
push
int
cwtl
inc
test
dec
aas
test
push
test
cs
sub
lahf
jl
ja
cli
inc
lahf
testb
push
mov
sub
jmp
or
mov
or
adc
jle
arpl
in
mov
in
or
in
popl
ret
ja
jno
jne
sub
fdivrl
pop
stos
push
xchg
ret
rcll
in
inc
pop
xchg
fidivrs
fmull
insb
jp
nop
rcll
xchg
sub
sub
sub
mov
loop
adc
ret
dec
cmp
sub
aam
les
cltd
adc
mov
lcall
pop
sub
pop
mull
inc
call
cld
dec
in
fcompl
cwtl
add
imul
jle
je
daa
ss
dec
sarb
inc
lds
xor
test
lock
pop
jp
nop
sbb
movsb
xchg
sbb
pop
loopne
aam
jae
sbb
jge
movsb
mov
mov
pop
lock
ljmp
jo
loop
stos
or
inc
aam
adc
fldenv
rcrb
fldl
push
dec
int3
dec
fistpll
xor
cwtl
inc
jnp
js
outsb
dec
add
test
mov
and
insb
add
lret
dec
stc
add
gs
aam
inc
movb
scas
scas
mov
mov
mov
sub
xchg
pop
inc
push
ljmp
test
and
testl
scas
xor
shl
test
out
mov
xor
pop
cs
jle
fwait
jecxz
sbb
adc
add
mov
xchg
jecxz
dec
js
insl
rorl
mov
sbb
xchg
inc
lods
daa
mov
pop
pop
jno
mov
mov
mov
out
mov
pop
ror
add
mov
mov
mov
xchg
repz
fstl
ret
loop
push
dec
loope
lret
in
stc
les
sbb
or
xchg
loop
ljmp
iret
push
mov
and
cmp
cwtl
cmp
sbb
add
dec
xor
jge
popf
sarl
xlat
in
bound
and
sbb
mov
icebp
jge
cmp
insl
sub
mov
xor
push
sub
notl
insb
lea
lods
jp
mov
or
and
and
xchg
mov
sbb
fiadds
rcr
push
pop
and
xlat
mov
jle
jb
scas
fdivrl
jmp
lods
jmp
xchg
mov
sar
ss
out
sbb
push
xor
cmp
scas
in
mov
dec
pushf
dec
sarb
sbb
outsb
mov
jmp
popf
cmp
test
xchg
pop
sub
outsb
dec
decb
fwait
jae
pop
sbb
loope
cmc
pushf
insl
test
inc
sub
cmp
pop
cmpsl
dec
and
mov
pop
int
xchg
ffree
rdmsr
frstor
sbb
fistl
movsl
xchg
mov
push
dec
bound
cli
rolb
pop
addl
cs
and
mov
xchg
inc
ss
push
jns
lcall
xchg
lods
and
mov
popf
ja
jp
fldcw
cltd
add
push
js
loop
test
adc
xor
mov
mov
dec
xor
pop
push
inc
shlb
stos
xchg
pop
or
jle
repnz
loopne
mov
cli
leave
sub
cmp
mov
cmp
fcmove
jmp
dec
imul
mov
in
jbe
cwtl
movsl
xchg
inc
jmp
fdivrl
mov
loop
jp
push
in
scas
ret
iret
sub
les
jne
in
insl
push
mov
cli
mov
mov
jmp
loopne
lods
inc
inc
inc
push
cmp
sub
cwtl
jbe
outsb
cmp
test
cmpsb
sbb
jo
jge
mov
data16
js
mov
ljmp
aaa
push
into
jo
xlat
flds
enter
les
js
mov
test
bound
jae,pt
outsb
mov
mov
les
adc
fisttps
or
push
mov
mov
fisttpl
pop
jecxz
and
cmp
jns
dec
mov
out
sub
mov
mov
mov
call
jne
pop
sbb
mov
or
sbb
pop
xchg
sub
xchg
jne
jnp
or
lret
jnp
cmp
xchg
test
add
sbb
leave
jg
push
pop
mov
ljmp
push
xchg
dec
jle
jnp
adc
fwait
loope
in
test
cmp
sbb
xor
mov
cmp
imul
cmp
insl
stos
inc
xor
inc
add
adc
sub
xor
sbb
out
scas
pushf
mov
inc
lea
pop
popa
pop
adc
push
xchg
xchg
jns
cmpsl
inc
mov
enter
in
cmp
cmp
jg
xor
dec
pop
pop
mov
inc
sbb
and
std
push
je
and
push
les
pop
out
out
js
push
mov
cltd
dec
adc
sbb
ds
lret
or
cmp
cli
fisubrl
mov
push
cmc
pop
sbb
filds
cmc
jo
mov
fildl
clc
shrd
jb
adc
add
lea
mov
sbb
ret
ficomps
addr16
sbb
mov
ja
push
test
aad
mov
jbe
pop
daa
sbb
push
add
int
pop
ja
movsb
enter
mov
shlb
fsubrl
stos
cmp
subb
add
cmp
sti
or
or
or
sub
cwtl
sbb
mov
inc
imul
mov
cmp
cld
push
jge
out
xlat
out
pop
hlt
aad
addl
inc
lock
and
out
mov
and
xchg
xchg
push
mov
lods
nop
ds
sbb
and
add
aas
dec
daa
mov
sub
or
xchg
lds
inc
fidivs
cmp
mov
lock
movsl
sti
sbb
mov
repz
add
mov
add
pop
jl
or
rorb
daa
dec
cmp
push
pop
and
pop
add
sbb
dec
movsb
mov
aas
inc
rorl
outsb
int
in
dec
mov
sub
sahf
and
dec
push
ss
mov
test
cmp
lods
call
cmp
fsubl
insl
xor
pop
cld
jecxz
in
aad
inc
mov
mov
push
mov
loope
imul
and
push
sti
xlat
xchg
scas
mov
adcl
mov
outsl
sbb
cmp
loope
pop
cwtl
xorb
xchg
mov
aam
aas
outsb
add
aam
addr16
sbb
je
lea
fldt
mov
xchg
nop
ror
stc
std
icebp
hlt
add
cmp
mov
xchg
pushf
mov
repnz
call
mov
cmp
shlb
adc
out
in
shll
xlat
ss
data16
push
cmp
xor
xchg
cmpl
add
pop
push
repz
insb
add
pushf
repz
inc
cmp
add
rcl
or
aad
inc
or
sbb
mov
sbb
push
loop
jmp
frstor
lret
mov
roll
jg
dec
mov
fstpl
xorb
sarb
xchg
xor
cmpsb
inc
dec
aas
mov
xor
ljmp
ss
test
cmp
negb
insb
stos
cwtl
pop
in
dec
sub
iret
insb
or
mov
jl
and
gs
jne
decb
cmp
mov
mov
enter
mov
add
add
add
or
lret
jno
cli
loop
aad
xor
adc
mov
push
pop
and
xchg
mov
mov
cmp
push
or
sub
adc
xchg
push
lock
ja
je
mov
or
dec
cmp
xor
jnp
xchg
cmp
insb
jnp,pn
es
mov
test
repnz
subl
inc
test
insl
gs
adc
and
out
mov
pop
fistps
jmp
cmp
out
jno
dec
push
lahf
ljmp
in
hlt
and
repnz
add
xlat
arpl
test
movsl
lods
mov
inc
mov
lods
dec
call
sub
ds
clc
mov
cvtdq2ps
xchg
lds
mov
xchg
xlat
or
pop
fstpt
add
push
inc
xor
aam
addb
and
cmp
icebp
and
fwait
in
rcl
in
xchg
or
and
adc
lods
mov
bound
rcrb
sub
adc
mov
lds
push
test
xor
sub
popa
mov
xchg
insl
call
or
loope
cltd
mov
jle
mov
xchg
int
test
or
aas
jg
test
ja
xor
enter
in
mov
add
sbb
xor
es
push
in
pop
in
call
sar
pop
out
test
hlt
pop
cli
ja
push
pop
xor
roll
in
add
pusha
adc
js
stos
je
inc
mov
pop
push
jp
cld
xchg
xchg
sub
test
adc
scas
inc
push
add
add
popa
push
ljmp
cmp
cmp
scas
inc
push
inc
fldenv
mov
je
sub
mov
sub
xor
cmpsl
test
lods
push
sub
cmp
test
ret
pop
rcrl
jecxz
mov
add
into
push
jg
sbb
mov
pop
imul
mov
xchg
cmp
stos
lcall
push
fcomps
lds
mov
clc
fsubrl
sub
int
sbb
mov
sub
shrb
rclb
scas
repz
adc
mov
into
xchg
inc
adc
fldcw
out
cmp
cmp
and
idivb
lahf
js
inc
cmp
sub
xchg
lds
fnstsw
stos
das
add
lret
aas
sbb
mov
jne
test
jg
lods
inc
sub
les
cmp
aas
out
fsubl
call
adc
leave
mov
outsb
test
movsl
outsb
add
leave
xor
addl
inc
in
sahf
xor
mov
mov
dec
inc
mov
daa
cli
jge
cmp
outsl
lret
pop
jl
hlt
jo
loope
adc
fists
dec
test
sub
pop
aas
xor
mov
or
test
push
xlat
popa
inc
popl
jb
mov
dec
ret
jg
fs
dec
or
mov
push
in
cmc
out
sbb
pop
mov
mov
enter
jmp
sti
dec
lret
cltd
cmp
mov
jge
jnp
mov
imul
xchg
outsl
out
mov
pop
arpl
dec
dec
jg
jae
shrl
outsb
es
jmp
inc
sbb
push
sub
andl
add
inc
aaa
mov
mov
add
bound
jo
add
push
fdivrs
fimull
mov
das
adc
sub
pushf
mov
push
call
frstor
cmc
filds
mov
mov
fildl
inc
xor
push
in
jg
es
lock
dec
and
imul
mov
inc
je
aaa
js
insw
fidivrs
pusha
dec
push
pushf
enter
inc
xlat
xchg
enter
cmp
jg
push
loope
movsb
mov
mov
sbb
pop
stos
inc
call
xor
arpl
jmp
sbb
push
fwait
scas
pop
sti
xchg
fldt
xchg
mov
xor
and
and
jl
repz
jno
aas
dec
int3
push
jnp
rcll
scas
and
adc
adc
bound
pop
lock
int3
cmp
cmp
xor
cmp
mov
dec
mov
jp
ficompl
into
int3
out
lcall
sbb
cmp
jae
sub
push
movsb
out
sbb
call
pop
outsb
mov
vmwrite
ljmp
int3
and
push
fisttps
lods
iret
cs
les
jo
cmpl
mov
pop
lcall
cli
cmp
addr16
xor
inc
jno
push
xor
and
and
insb
test
mov
or
out
inc
mov
in
xchg
jne,pt
ret
adc
jp
fisttpll
outsb
aam
loop
lahf
fistpl
shll
gs
das
test
js
sub
mov
mov
mov
add
adc
adc
in
push
cmpsb
xchg
sub
movsb
shrl
and
ss
in
mov
insl
push
rcrb
fmuls
mov
insl
sbb
les
sti
mov
add
mov
out
xchg
or
outsl
in
mov
cmp
mov
les
jge
mov
fwait
adc
pushl
dec
xchg
cs
jne
cmpsl
aam
daa
xchg
xor
ret
pop
outsl
in
sti
ds
into
lret
sti
je
push
push
xchg
scas
scas
sbb
dec
xchg
or
mov
dec
sbb
aaa
xchg
mov
push
cld
push
mov
hlt
mov
imul
psrad
mov
ret
xchg
fsubrs
faddl
aam
mov
fdivl
test
dec
out
adc
push
pop
fsubr
divb
cli
push
push
cmp
je
in
xchg
fstps
out
jmp
dec
mov
enter
scas
lods
cwtl
cmp
pop
or
jmp
mov
lock
and
push
add
pop
mov
in
pop
or
push
test
jge
and
xchg
fisubrl
or
jge
aaa
in
cmpsl
pop
je
stos
push
imul
mov
out
rolb
sub
shl
jbe
daa
cmpsb
dec
mov
sahf
rol
out
lods
and
ds
sub
dec
movsl
icebp
sub
mov
in
xchg
mov
andb
jle
lods
mov
mov
iret
cmp
sub
push
xchg
adc
push
idivl
imul
fs
mov
jo
sub
shrb
and
std
push
add
inc
out
icebp
fwait
cltd
jg
or
mov
xchg
jns
dec
mov
adc
xchg
push
push
mov
or
das
and
jbe
rcrb
incb
fcoms
push
js
lret
mov
or
jmp
mov
pop
orb
add
or
js
cmpsb
inc
jp
not
mov
test
daa
jnp
shl
or
or
movb
xchg
push
icebp
fst
inc
mov
sub
cmp
cmpsb
movsb
out
cmpsb
pop
mov
fs
cwtl
mov
and
xchg
pop
out
repnz
dec
cmpb
rol
adc
jmp
mov
xor
sbb
push
ljmp
push
jns
or
cmp
ds
adc
mov
mov
lret
mov
lret
push
sbbb
shlb
jno
xor
jmp
adc
sub
ss
mov
jnp
xor
dec
fstpt
or
xchg
das
and
add
loope
mov
pop
stos
fsubrl
push
jl
mov
in
test
push
and
mov
outsb
xchg
xor
loopne
je
fisttpll
fisttpll
inc
ds
je
add
sub
fbstp
sbb
inc
push
dec
cmp
movsl
das
sbb
add
aaa
cmc
or
dec
cmpsb
push
pop
and
dec
adcb
adcb
dec
enter
jecxz
lret
mov
orb
mov
mov
dec
pop
fcmovbe
test
fsubl
mov
aam
std
xchg
sbb
outsb
mov
fcoml
push
test
outsb
inc
mov
jnp
aam
lods
test
xchg
pop
movsb
into
test
add
inc
xor
cli
pushf
test
test
gs
xchg
outsb
js
vcvtdq2pd
and
aam
jp
push
cmp
inc
std
add
lds
push
push
cmpsb
int3
lock
int3
xchg
and
pop
xor
sub
xor
movsb
fyl2xp1
imul
xor
imul
mov
pop
dec
inc
inc
inc
jne
xor
sbb
out
popf
dec
jo
repnz
adcb
adc
sarl
jp
inc
xlat
xor
push
call
inc
dec
add
cld
mov
int3
mov
rcrl
cmp
or
into
pusha
add
push
outsl
aam
sahf
sbb
mov
adc
jmp
fidivrs
repnz
out
clc
jne
mov
jae
sbb
push
adc
lea
or
fnsave
pop
rcrb
and
adc
cmp
sbb
lcall
pop
jmp
sub
jno
test
xchg
testb
inc
cmc
out
aad
lahf
pop
pop
add
movsb
daa
movsb
test
fbstp
fmuls
xor
xchg
adc
in
loopne
mov
xlat
adc
jbe
call
sbb
repnz
aas
popf
adc
ja
sarb
mov
pop
sbb
mov
out
jb
xchg
inc
aam
sbb
lcall
aad
mov
pop
xor
adc
inc
hlt
sbb
aad
or
jns
xor
pop
nop
je
jno
push
dec
add
scas
popa
mov
pop
repz
roll
push
pop
test
xchg
leave
jmp
lahf
adc
mov
and
jge
into
and
and
loope
or
add
sub
leave
sub
scas
aas
sbb
out
adc
das
mov
xchg
repnz
xor
sub
movsl
mov
loopne
jbe
dec
inc
jbe
stos
mov
in
flds
mov
test
push
lret
loopne
cmp
mov
cmp
dec
test
add
mov
mov
pop
subb
mov
cmp
jg
repnz
movsl
fists
popf
sahf
sub
fstps
jae
push
fdivs
cmp
add
jb
adc
jne
inc
cmc
mov
outsb
je
jne
enter
ljmp
inc
xor
leave
lahf
repz
popf
xchg
push
js
push
push
adc
pop
dec
outsb
faddl
js
data16
push
and
mov
xchg
jne
adc
in
inc
jbe
stc
insl
sub
push
imul
inc
scas
lret
gs
adc
adc
int3
or
pop
adcl
mov
adc
mov
or
mov
dec
sahf
flds
jns
hlt
sub
xor
jp
and
test
and
push
inc
pop
cmpsb
and
push
imul
mov
cs
cmc
cmp
imul
sub
xor
pushw
repnz
into
jbe
arpl
fisubrl
gs
in
notl
loop
adc
push
loop
mov
push
push
out
popa
outsb
cld
daa
inc
das
hlt
cli
cmp
rep
std
mov
xchg
dec
addb
sbb
push
ficomps
xchg
sarl
movsl
cwtl
fisttps
fcomps
outsl
mov
stos
mov
adc
sbb
outsb
lret
mov
int
jno
ljmp
adc
and
or
push
jmp
pop
popf
cwtl
mov
adc
push
cmp
or
xchg
inc
lret
cmpsb
insl
adc
pop
loope
sub
push
js
dec
jno
stc
push
lret
push
out
cwtl
jbe
inc
rcll
ds
aas
fmull
nop
nop
push
lds
mov
xlat
inc
out
and
and
xor
mov
dec
movsl
jl
lahf
lds
outsb
lock
gs
pushf
xchg
cld
mov
jge
sbb
aad
int3
sbb
scas
dec
mov
mov
mov
add
jne
cmp
add
popl
testb
cmp
mov
sub
cmp
loop
mov
cmp
cmc
aas
mov
push
mov
into
fdivr
popa
xchg
fst
pop
insb
mov
inc
cmp
cli
call
xchg
popf
push
mov
clc
out
mov
cli
sbb
test
adc
pop
scas
pop
and
lods
repnz
fsubs
mov
inc
jb
dec
push
xchg
mov
xor
push
dec
jge
shll
movsl
or
fcmovnu
fldl
movq
arpl
aam
xor
jb
mov
and
sub
cmpsl
cld
fmull
cmp
sar
stc
jg
xor
jp
decl
and
jle
lcall
sbb
addr16
loope
lock
mov
inc
or
adcb
adc
fucom
orl
push
outsb
xchg
dec
mov
mov
cmpsl
mov
loopne
jnp
mov
mov
outsb
xor
xchg
ficoms
xor
inc
pop
push
add
popa
sbb
ret
xlat
mov
push
into
sbb
in
mov
hlt
movsl
sbb
cmp
pop
loope
lahf
adc
xchg
push
xchg
xchg
sahf
dec
orl
aaa
hlt
and
add
lods
insl
pop
cli
cmp
inc
test
bound
jno
out
inc
sti
adc
fisttpl
pop
in
push
shlb
push
xor
adc
aad
sbb
leave
mov
add
jnp
add
rcrb
push
loopne
jns
movsb
pop
push
andb
inc
sbb
push
cmp
sarb
test
push
pop
xchg
movsb
adc
xor
push
enter
scas
fidivl
pop
daa
adc
mov
adc
or
add
in
test
test
aad
lods
mov
or
sub
mov
aas
icebp
xchg
mov
jbe
lods
mov
in
xchg
mov
jne
mov
pop
ljmp
add
xor
shrl
insb
cld
jns
lcall
popa
push
cmc
jns
sbb
push
push
out
sub
mov
mov
jae
cmp
sub
mov
mov
cmp
lods
sbb
int
and
and
pop
mov
hlt
jno
mov
shl
pop
or
stc
pop
and
cmp
mov
cmp
xlat
inc
jae
shl
js
lods
cwtl
movsl
out
sti
xchg
jg
int
mov
jge
iret
mov
dec
orl
shrb
mov
sub
es
icebp
arpl
jnp
and
loopne
cmp
pcmpeqb
pop
adc
fists
and
add
es
dec
xlat
push
mov
hlt
mov
fmulp
shll
outsl
ror
cld
mov
roll
pop
lcall
jle
cwtl
es
xchg
cmp
in
cmc
lret
mov
pop
xchg
stos
fiaddl
mul
sahf
dec
mov
mov
rcl
clc
jmp
fnsave
inc
inc
sti
mov
lahf
mov
inc
mov
fistpll
hlt
cli
cmpsb
fstps
fnstsw
fsubr
dec
scas
inc
mov
insb
push
mov
push
xchg
mov
inc
in
pushf
mov
fcmovu
mov
sub
mov
mov
inc
and
popa
out
addb
outsl
inc
lods
insb
sub
cld
in
iret
mov
push
add
rcr
lcall
jmp
xor
mov
fcomps
xor
inc
push
ds
jbe
mov
mov
out
sub
jnp
jne
sbb
loopne
push
repnz
imul
nop
dec
cmpsl
es
jmp
inc
xchg
xchg
pushf
loopne
sti
cmp
add
stc
pop
shrl
dec
in
ret
shrl
add
hlt
aam
add
nop
lds
mov
and
and
xchg
sbb
mov
test
or
insb
mov
jp
out
lea
and
cmp
inc
leave
xchg
jg
jmp
jo
punpckldq
add
lahf
jb
sub
and
les
cli
sbb
nop
inc
dec
jmp
cld
dec
sbb
ss
loop
fs
rolb
push
add
in
mov
mov
xor
add
sbb
cmp
xchg
mov
mov
and
ret
and
push
pusha
loopne
mov
stos
icebp
cmp
adc
hlt
stos
mov
cmp
jle
fldt
sbb
cltd
orb
cmp
push
lahf
and
in
lods
sbb
aam
push
testl
or
inc
lods
cltd
xchg
jle
gs
inc
out
enter
sbb
imulb
jge
mov
jns
pop
sbb
into
adc
sub
cmc
outsl
loop
ds
xchg
fucom
fimuls
add
inc
jp
pusha
fsubrl
mov
push
arpl
fs
push
into
mov
jecxz
enter
movsb
dec
and
daa
dec
jbe
scas
bound
lods
mov
jns
sub
jo
js
and
mov
aad
sbb
clc
xchg
adc
andl
loopne
das
test
addr16
pushf
adc
iret
aaa
push
adc
inc
adc
sbb
lahf
sbb
pop
ja
mov
jne
mov
xorb
inc
add
xchg
mov
push
daa
xlat
into
mov
cltd
adc
xor
rolb
psubb
and
hlt
push
add
inc
orb
loope
add
int
cmp
clc
lods
sub
out
inc
jbe
xor
cmpsb
js
sbb
dec
ret
push
stc
and
stc
push
sbb
int3
aaa
jb
add
mov
mov
mov
xor
loopne
mov
fmuls
and
jne
into
sarl
push
jne
xchg
xor
mov
mov
aaa
aas
xchg
cmpl
or
punpckhdq
addl
and
in
cmp
and
xchg
add
mov
test
fwait
clc
out
pushf
adc
dec
scas
pop
sbb
ss
mov
sub
into
outsb
mov
lahf
push
dec
xchg
insl
mov
fidivrl
mov
mov
adc
xor
int3
ja
test
xchg
mov
js
jecxz
pop
bound
pop
cwtl
jno
ljmp
scas
loopne
jo
jp
leave
xor
test
fst
and
dec
cld
sbb
ljmp
mov
and
xor
daa
in
movsb
les
mov
ljmp
jbe
aaa
add
mov
testb
scas
or
in
aas
push
cmpsb
lods
call
lcall
jnp
sahf
pop
hlt
add
ret
adc
fists
push
mov
repz
and
movsb
sub
test
mov
sti
je
jns
cltd
and
mov
pop
add
xor
idiv
in
inc
push
xchg
mov
daa
imul
pop
adc
dec
mov
out
sti
ja
es
test
push
xchg
cli
rcrl
or
jle
sub
jbe
jbe
inc
sbb
and
aaa
mov
jae
cltd
lcall
jae
rolb
cmpsb
cld
xlat
stos
test
cmc
std
adc
mov
xchg
jno
repnz
fstps
les
movsl
adc
lahf
inc
fcmovu
push
ljmp
mov
je
insl
jno
xchg
mov
add
stc
pop
ficoms
sbb
xlat
mov
sbb
sahf
rcll
fidivrl
xchg
addr16
sub
int
dec
or
sub
or
mov
clc
pop
repz
je
sbb
repz
or
jae
cmpsl
pop
fucomip
int3
mov
mov
dec
int3
test
sar
add
test
scas
lock
cmp
dec
pop
movb
shlb
inc
adc
jne
jnp
mov
mov
jae
pop
sub
mov
pop
mov
add
sbb
sti
mov
addr16
push
xchg
in
sbb
jmp
xchg
jns
fcom
push
lahf
data16
je
add
imul
pop
out
andb
sbb
pmaxub
lock
stos
jle
pop
xor
mov
add
and
sbb
cmp
lea
andl
dec
xor
xor
xor
je
xor
dec
fldt
cs
cmp
ret
fwait
out
enter
popa
popa
pushl
shl
testb
je
dec
inc
add
mov
jp
paddusb
lret
jle
xor
in
fwait
into
and
dec
hlt
jge
sti
aaa
jle
mov
cmp
adc
pop
sub
into
je
daa
in
push
xchg
movsb
mov
imul
in
mov
xor
mov
add
pusha
cmp
js
dec
std
ds
jo
push
lock
jne
movsl
add
call
inc
add
out
push
ret
push
sub
pop
adc
dec
jg
outsl
fidivl
aad
cmp
lahf
iret
lret
test
dec
scas
test
xchg
cmp
xorl
or
and
and
nop
xor
inc
xor
test
int3
ror
jns
int3
mov
into
sub
pusha
xchg
sbb
cli
xor
cmc
sbb
inc
movsb
sbb
aaa
xchg
dec
mov
sub
cmpsb
mov
jno
mov
scas
jg
pop
xor
mov
int3
xchg
iret
out
shll
inc
stos
scas
ficoms
lods
test
or
mov
sbb
push
push
aad
xchg
nop
lock
fnop
xchg
push
in
sub
sar
cs
xchg
pop
adc
mov
in
fcmovnbe
jno
xchg
mov
fisttpl
add
xor
mov
mov
sbb
cmp
nop
sarb
cmc
pop
jo
push
data16
fs
jge
and
adc
rclb
dec
je
sbb
jg,pt
pop
sbb
leave
mov
pop
popf
push
fimuls
and
add
fisubs
int3
push
orl
pop
push
dec
add
pop
adc
inc
fs
adc
xchg
divl
jb
mov
jge
cs
push
imul
adc
fsubr
lds
sub
fimull
dec
mov
pusha
mov
jmp
jmp
outsl
movb
lods
mov
loop
divb
pusha
xchg
adcb
sub
inc
int
xchg
xchg
pavgb
sub
xor
mov
mov
es
movsb
and
pop
sub
fmuls
dec
or
cmc
cmp
cmpl
xchg
jo
pop
faddl
xchg
push
lock
jge
lds
aad
xchg
pop
or
repnz
mov
dec
push
hlt
push
add
jmp
xchg
stos
insl
cmp
inc
cmp
jl
add
ret
ja
xchg
mov
outsl
data16
lahf
xchg
call
sbb
or
sub
inc
mov
mov
in
mov
jecxz
jmp
lock
fisubrl
inc
xchg
sti
sbb
xchg
adc
add
or
xor
add
sbb
in
frstor
test
iret
inc
mov
lods
ja
jle
aad
lcall
adc
inc
shr
adc
addr16
cmp
mov
imul
test
mov
jl
jno
adc
xor
cli
mov
shrb
test
mov
scas
in
scas
push
dec
call
jecxz
xchg
ja
shlb
push
pop
xlat
in
stc
sahf
icebp
jno
repz
xor
loope
cld
inc
and
loop
mov
xor
mov
sti
or
popf
jae
xchg
adc
xchg
lods
lock
dec
ljmp
stos
sbbb
push
xchg
outsb
lods
cld
out
gs
push
jl
push
insl
das
notb
aas
adc
dec
mov
hlt
fsubl
push
cld
push
imul
xor
cmp
ljmp
lcall
jmp
inc
xor
jle
std
push
addr16
mov
push
lods
mov
mov
movsb
push
inc
xor
in
cmp
jl,pt
mov
dec
dec
push
lods
sub
pop
arpl
data16
jp
xor
rcrl
xchg
fnstenv
mov
sti
fcoml
xchg
or
loopne
pop
pop
stos
mov
or
inc
out
lods
pop
and
or
jl
in
sub
inc
adc
push
sarl
mov
jmp
leave
adc
sub
fsubs
mov
fldenv
stc
es
xchg
pushf
mov
and
cli
out
adc
mul
mov
mov
cmp
mov
mov
cwtl
cld
sti
ljmp
cs
cmp
jne
ljmp
scas
jne
sbb
sub
jge
mov
call
flds
pop
mov
jnp
lods
add
or
icebp
ror
xchg
sbb
rorb
sub
ret
mov
in
jae
jno
fldenvs
add
jmp
mov
int3
adc
mov
jbe
mov
in
movsl
outsw
adc
js
xchg
dec
aaa
test
add
insb
sbb
add
jmp
loope
push
or
out
fcoms
push
testl
inc
stos
pushl
mov
in
lret
sub
xchg
dec
fcmovb
mov
shrl
dec
pop
dec
in
test
jns
and
leave
loopne
add
adc
test
fwait
cmp
sub
mov
divb
push
jns
push
lahf
push
or
sub
dec
mov
sub
popf
shll
cmc
nop
pop
push
jp
ljmp
mov
cmp
movsl
lock
shll
mov
shrl
aad
scas
sub
leave
int
mov
mov
xchg
dec
orl
xchg
inc
dec
sbb
jp
daa
clc
cmpsb
es
pushf
idiv
fldenv
xlat
sbb
je
cmp
inc
jbe
fcmovbe
jns
push
mov
push
xor
add
inc
inc
xchg
mov
sub
or
pop
test
mov
idivl
mov
mov
cmpb
mov
cmp
lahf
test
enter
xlat
and
sti
sbb
dec
push
add
fdivl
jmp
repnz
add
out
rcr
movsb
popa
data16
mov
push
mov
ds
ss
xchg
xor
adc
ret
dec
test
rdpmc
add
lock
scas
andb
dec
aam
aaa
sarl
aad
insl
in
add
cmp
stos
push
mov
pop
rcrl
popa
cli
mov
ud0
lret
faddl
out
gs
adc
mov
mov
push
movsl
out
dec
sbb
scas
je
clc
int3
out
cmpsb
aas
lea
out
or
pop
cmp
mov
daa
mov
inc
mov
push
cmpsb
ret
xor
add
data16
icebp
dec
mov
call
cmp
lcall
or
idiv
inc
scas
mov
and
pop
xor
cmp
outsb
arpl
stc
dec
add
daa
ret
jo
shrl
add
ds
inc
cmc
out
or
push
mov
jnp
int
fwait
outsl
or
movsb
xchg
pop
cmpb
dec
dec
mov
addr16
or
in
push
das
pop
jno
or
je
adc
cmp
sub
sbb
adc
jo
divl
dec
adc
ds
push
dec
and
stos
push
and
mov
add
xchg
stos
outsl
rcrl
add
das
mov
pop
xor
mov
jg
cwtl
shrl
pop
jns
cmp
cmp
js
inc
or
mov
cmp
mov
imul
add
fsubr
add
jg
aad
jmp
push
notb
jae
insb
xchg
xlat
cltd
pushf
lea
pop
dec
xor
shlb
fnstenv
pcmpeqb
inc
or
mov
adcl
out
mov
mov
sub
mov
adc
push
in
out
andl
pop
jbe
mov
jb
ljmp
pop
cmpl
mov
jae
xor
sbbl
and
mov
inc
xchg
les
cmp
sub
lahf
lret
stc
xor
out
cmp
xchg
in
sahf
or
ficoml
add
push
popf
aas
inc
add
or
pop
and
imul
out
dec
lahf
and
jecxz
sbb
aas
fidivl
cmp
sub
mov
cmp
outsl
xor
xchg
daa
sbb
idiv
loop
ss
push
je
xor
xchg
incl
int3
movsb
mull
sahf
in
or
xchg
bound
ds
mov
cmc
in
adc
mov
mov
das
rorb
out
xchg
int
push
mov
ja
or
mov
push
outsl
xchg
sbb
xor
sub
jl
arpl
js
jg
mov
pop
scas
ja
sub
and
push
sub
or
inc
xor
sub
inc
je
mov
xchg
lret
ret
or
xchg
pop
cmpsl
xchg
pushf
fdivrl
jbe
pop
cmp
or
shll
loop
imul
and
lret
xchg
nop
in
je
or
cmp
ljmp
push
xor
xchg
dec
pop
push
es
arpl
bound
iret
and
fidivrs
in
or
int3
test
fucomip
sahf
push
mov
mov
or
adc
mov
and
mov
or
jge
mov
or
adc
stos
add
sub
push
jge
jae
sub
int
adc
mov
mov
pop
push
and
nop
mov
fimuls
mov
add
mov
fldl
pop
sub
sbb
mov
cli
inc
sub
cmp
mov
sahf
sti
roll
outsb
mov
lcall
and
inc
cmpl
fs
ret
cmpsl
aad
push
movsl
add
jl
data16
xor
cmpsb
mov
sub
js
clc
mov
push
cmpsl
xchg
jne
sub
mov
jmp
pop
add
mov
xlat
or
int3
fisubs
in
test
cmpl
leave
ja
adcb
hlt
into
add
jge
jns
sahf
shll
mov
jnp
inc
pop
xor
jp
sbb
xchg
aad
add
jle
dec
lret
push
cwtl
pop
push
stc
jns
ds
pushf
mov
popf
out
or
adc
movsb
adc
xchg
cmp
aas
jb
pop
pusha
pop
mov
loope
inc
sbbb
test
nop
fwait
cmpsl
xor
jle
jae
lcall
push
jl
jnp
or
and
lods
test
iret
mov
cld
cmp
and
aam
std
xor
je
pop
test
mov
xchg
out
loope
leave
outsb
aas
int3
add
mov
mov
loope
lea
adc
adc
mov
cs
fucomp
push
rep
mov
sbb
mov
adc
mov
dec
arpl
aad
sarl
inc
outsl
hlt
xchg
fldcw
aaa
es
mov
mov
shll
mov
and
xor
sub
mov
inc
pop
push
adc
push
es
push
jne
mov
jns
mov
sub
test
and
es
add
mov
xchg
adc
outsl
test
push
daa
jl
mov
mov
aam
sbb
mov
fildl
dec
in
call
loope
outsl
adc
sahf
lock
lods
mov
mov
cmp
sub
xchg
daa
ja
fwait
repnz
push
andb
jb
mov
mov
push
movsl
jmp
subb
aam
dec
sti
mov
dec
or
std
dec
jp
lcall
jg
jmp
xchg
pop
add
mov
in
add
jecxz
pop
xor
into
pop
into
in
and
cmp
pushf
pop
int3
aas
dec
test
jb
mov
inc
mov
push
ss
jecxz
add
lcall
jne
pop
frstor
shll
stos
cmp
loope
pusha
cmp
or
pop
and
outsl
movsl
push
sti
sub
inc
xchg
add
adc
rolb
xchg
cmpsl
outsl
stos
adc
sbb
cmpsb
or
sub
leave
xor
mov
mov
pop
insl
adc
mov
add
pop
arpl
xor
in
rolb
mov
add
fcoms
mov
mov
add
dec
sub
mov
mov
cmp
inc
xlat
xchg
dec
ret
lods
test
xor
enter
sbb
or
imul
imul
xor
dec
adc
sbb
xlat
cmp
mov
jle
movsb
mov
sbb
insb
pop
and
sbb
mov
push
scas
push
xchg
and
mov
jb
xor
pop
sub
add
sub
das
add
dec
push
add
lret
sahf
mov
xor
dec
int3
jp
lds
lahf
sahf
aad
ljmp
out
xchg
push
push
imul
xor
test
outsb
cmp
int
js
add
xor
jmp
xor
mov
fucom
loop
sub
dec
cmp
mov
adc
ja
push
out
ret
ret
sub
cld
fists
or
pop
pop
ds
addb
inc
xchg
mov
shl
push
test
dec
aad
and
lret
das
mov
cmc
ja
inc
and
insb
inc
lahf
pop
dec
and
mov
cmp
shr
arpl
out
movsl
jns
cld
mov
mov
out
xlat
test
fwait
xor
mov
push
stos
push
addl
aas
add
repz
sub
push
cltd
test
shll
aas
loop
or
out
jge
dec
rcll
pop
add
imul
xchg
dec
repnz
stc
ja
dec
test
jo
imul
lods
xchg
cld
scas
jb
lock
into
mov
imul
jno
iret
cmp
outsl
insl
cmp
push
inc
push
or
imul
pop
sub
mov
push
stos
lods
adc
xchg
and
pushf
es
cmc
mov
push
xor
xor
mov
cli
cld
mov
and
pop
xchg
fwait
les
enter
or
cld
and
out
dec
mov
stos
lret
lret
lds
fisubrl
popf
jne
lods
addr16
or
sti
std
ss
insb
out
out
mov
pushf
jmp
div
ljmp
loopne
and
xor
mov
pop
mov
mov
adc
les
jnp
inc
dec
jmp
cmc
lods
xchg
int
imul
or
repz
cmp
ret
and
mov
or
or
jns
cmp
in
int3
cmc
repnz
hlt
sbb
pop
test
xchg
pushf
repnz
cmp
iret
cwtl
rorb
cmp
test
jl
sub
cmp
dec
repz
sbb
push
fistpl
iret
sysexit
dec
mov
adc
insb
scas
ja
enter
mov
dec
mov
xor
loop
js
lock
idivb
adc
mov
xchg
aaa
pop
shl
loop
pop
mov
fstpt
push
daa
les
nop
inc
xor
xor
push
mov
data16
out
jp
fst
pop
stos
sub
inc
mov
mov
dec
testb
or
leave
jle
insl
loope
inc
out
insb
shll
xchg
out
cmp
jbe
push
scas
cltd
xor
repnz
pop
outsl
sub
decb
push
fstpt
jns
xor
iret
insb
sbb
and
adc
repnz
or
subl
and
dec
mov
xor
icebp
js
mov
icebp
mov
outsb
push
inc
imul
js
pusha
jle
push
xlat
inc
xchg
aad
outsb
or
into
rcll
loopne
pop
push
pop
push
sti
mov
fistps
dec
lret
cmp
xchg
xor
mov
stos
jp
lea
sub
dec
aad
or
or
and
lcall
jnp
out
inc
mov
lock
sub
das
mov
mov
push
sbb
xchg
leave
pop
icebp
arpl
pushf
jnp
mov
popa
clc
out
enter
lods
dec
mov
sub
dec
cltd
into
sub
rcl
incl
ficompl
pop
pop
ret
test
pop
call
stc
sub
stc
mov
adc
jb
cs
fdivr
dec
xchg
push
jmp
lret
push
jecxz
mov
les
icebp
popa
dec
test
or
movsb
aad
jmp
nop
shrb
movb
pop
mov
xchg
dec
sbb
lcall
dec
mov
add
and
out
mov
inc
jae
and
adc
stos
adcl
dec
mov
rcrl
adc
repnz
bnd
aad
mov
pop
rolb
mov
inc
pop
xchg
mov
daa
lds
jnp
or
mov
cli
and
push
sbb
and
push
rcrb
call
mov
push
out
es
add
xor
shlb
add
push
popf
loop
fadds
and
cmpsb
lret
aad
es
add
repz
cmpsl
inc
mov
jnp
mov
mov
sbb
pop
icebp
dec
xor
lret
pusha
bound
inc
jns
and
arpl
loop
pop
add
pop
inc
clc
sbb
adc
add
xlat
fnstcw
xchg
icebp
mov
ret
jg
inc
shl
je
pop
adc
fdivrp
or
xor
sarl
sysenter
pushf
xchg
jbe
das
adc
cli
lcall
jno
pop
xchg
stc
call
loopne
lods
insb
or
ja
js
xor
push
push
xchg
test
aaa
scas
fimull
xlat
pop
or
bound
adc
add
ja
xor
mov
or
xor
movsb
loopne
roll
aam
jne,pn
xchg
mov
mov
movsb
pop
push
test
and
jl
and
jmp
adc
mov
call
addr16
pop
sub
in
jb
sti
mov
push
add
mov
in
sbb
lods
pop
arpl
data16
mov
cwtl
hlt
mov
jle
jns
imul
mov
aam
popa
push
hlt
call
push
lds
test
orb
push
repz
hlt
cmp
lahf
mov
pop
sub
addr16
jo
icebp
out
jo
popf
aas
in
mov
mov
pop
add
xchg
cmp
push
pushf
pop
lahf
xor
std
idiv
xorl
ds
mov
dec
mov
push
pop
or
in
dec
mov
stos
rorl
or
dec
mov
js
sbb
dec
and
dec
mov
addl
push
ljmp
mov
push
mov
stc
mov
mov
cmpsl
add
rcll
rcl
mov
lcall
cmp
stc
push
mov
je
push
xchg
jnp
enter
roll
dec
xchg
enter
mov
push
pop
or
fwait
push
xor
push
jp
and
in
mov
adc
xor
out
pop
or
sub
lods
fstl
dec
aas
lds
stos
or
sub
popf
loopne
mov
leave
ss
jp
xlat
xor
shrb
jns
cmp
pop
push
push
fcmovnbe
nop
popf
mov
pusha
cmp
fldt
outsb
mov
mov
pushf
xchg
push
mov
fwait
andb
jo
jmp
sub
cmp
in
pop
inc
dec
sti
outsb
int3
ret
in
and
fisttpll
xor
mov
inc
iret
out
sub
repz
int
inc
jne
inc
fwait
ljmp
or
push
fistl
and
test
mov
sbb
hlt
stos
int
fbstp
das
sbb
sbb
dec
hlt
jmp
and
lret
jecxz
xchg
xchg
stos
add
pop
xchg
add
mov
and
xchg
testb
xchg
cmp
adcl
stc
les
fldz
and
adc
ss
xor
imulb
adc
shlb
iret
rcrb
ljmp
fsubl
fidivrl
add
lret
pusha
rcrb
enter
out
data16
mov
ljmp
jno
cmc
pop
sub
mov
fmulp
cmp
adc
enter
iretw
in
aas
cmpsb
sbb
bound
dec
and
out
mov
push
adc
push
mov
xor
mov
pop
adc
stos
enter
std
xchg
rorb
xor
addr16
sub
lock
sub
sub
sub
xchg
inc
nop
ss
es
ds
jmp
inc
rolb
and
cmp
pusha
icebp
dec
sub
fucomi
or
sub
outsl
xor
xchg
add
lahf
jns
mov
rcrl
inc
mov
repz
mov
pusha
adc
dec
in
pop
and
imulb
add
jmp
jb
stos
xchg
xchg
mov
add
mov
xchg
sti
shl
lahf
inc
mov
add
enter
int
js
push
addb
sbb
fidivrs
jle
add
adc
cs
mov
nop
mov
cmpsl
fsubrs
sub
cmp
push
ja
jb
push
mov
xchg
mov
repz
and
fldenv
xchg
adc
xlat
jle
aas
dec
pop
mov
adc
daa
mov
test
mov
pop
push
stos
sbb
out
mov
loopne
out
add
pushf
or
sbb
je
shr
imulb
faddl
stc
ds
fistpll
mov
test
arpl
cmp
out
scas
jae
lods
pop
sub
jb
adc
adc
cli
icebp
mov
pop
jo
push
mov
lds
dec
inc
test
lahf
pop
fucomi
push
lahf
in
mov
stc
repz
mov
mov
sbb
cmp
leave
mov
xchg
jno
lods
xchg
sbb
loop
sar
add
lahf
sub
ret
mov
jbe
adc
ss
mov
mov
xor
mov
ror
rorb
pop
jl
push
in
add
or
int
rep
lret
flds
mov
test
mov
mull
jne
jl
sub
stc
test
sbb
add
sbb
aas
or
test
dec
repz
ljmp
ljmp
add
aam
jbe
xchg
add
mov
out
push
pop
push
mov
ds
mov
or
fwait
cwtl
popf
jp
inc
test
cmpsl
mov
and
mov
in
aas
ljmp
jmp
and
push
pop
mov
ja
shrl
aas
in
icebp
lods
es
jp
cli
inc
or
pop
movsb
cmpb
call
sbb
dec
int
sbb
mov
out
push
jmp
fwait
xchg
stc
jno
mov
lods
lods
and
push
adc
addr16
dec
pop
ja
jp
xchg
push
aas
adc
stos
adc
not
add
pop
in
pushf
out
ficoms
sti
pop
ret
mov
leave
mov
inc
dec
add
enter
fcompl
cmc
push
add
xor
mov
fsubrs
cli
aam
vcvtsi2ssl
fbld
outsl
aad
loope
jg
cli
test
adc
cmp
mov
cmp
mov
les
cmp
movsl
outsb
mov
inc
inc
cwtl
mov
cwtl
ret
mov
add
fdivr
sbb
cmp
das
sub
add
aaa
shll
push
mov
add
push
or
ds
in
pushf
lock
sub
or
call
push
push
mov
out
mov
loopne
insl
or
sub
dec
mov
sbb
or
addr16
xchg
movl
scas
pop
nop
pop
pop
inc
mov
lcall
dec
pop
mov
or
jecxz
aad
mov
xor
bound
xor
push
call
cmpsb
idivb
jmp
mov
mov
sub
pop
inc
cmp
ja
jge
xchg
and
xor
and
repnz
lock
mov
les
jne
xlat
sbb
or
jge
int3
push
mov
test
xchg
cmp
mov
cmc
test
ret
sbbl
cmpsl
xchg
add
jb
loop
jl
in
lds
xlat
jecxz
push
cwtl
adc
mov
pushf
mov
das
movsl
xlat
addl
rorb
and
leave
je
rol
fwait
cltd
scas
incl
sbb
mov
sub
cmp
mov
ret
out
mov
fwait
add
pop
inc
xor
je
add
xchg
lret
or
xchg
add
test
pushf
movsl
movsb
push
and
push
xchg
ret
int
in
lahf
out
add
pop
mov
sbb
aad
xor
jecxz
das
icebp
pop
sbb
mov
cli
dec
into
cld
xchg
cmp
mov
test
stos
es
mov
es
inc
cmp
lahf
in
dec
test
sub
mov
fisubrs
outsb
cmp
hlt
push
inc
mov
jmp
loopne
es
movb
sub
mov
aam
fdivp
outsl
sub
aaa
cmp
pusha
push
xchg
mov
inc
arpl
les
js
lahf
int
inc
es
inc
aad
int
in
mov
fisubl
scas
xlat
stos
jl
jne
daa
ss
cs
mov
jmp
pop
enter
arpl
mov
cwtl
in
addr16
sub
pushf
push
and
icebp
fldenv
in
push
jae
enter
nop
jmp
jmp
inc
mov
sbb
fs
cmp
test
mov
jnp
pop
xor
jecxz
sbb
xchg
mov
dec
mov
and
lret
cmp
lods
sbb
sub
pusha
fildl
shll
sub
roll
fiadds
nop
xor
sbb
test
idiv
mov
imul
ficompl
sar
cmp
sbb
pcmpeqd
movsb
pushf
push
lcall
pop
xchg
out
out
mov
inc
sbbb
mov
in
lea
stc
dec
adc
cmp
pop
xchg
pop
lea
mov
stc
dec
test
mov
mov
mov
outsl
and
or
pusha
add
jnp
int3
xor
add
hlt
jo
xlat
ja
cli
inc
in
cld
mov
cld
jnp
out
shlb
popa
cli
jnp
cmp
loope
repnz
es
mov
jae
pop
pop
xor
out
pop
xor
repz
cli
mov
xor
lods
xor
push
ret
dec
sbb
sub
pop
imul
ret
and
adc
into
stc
add
lret
pop
adc
pop
pop
and
int3
push
jns
out
pop
pop
pop
outsb
into
ljmp
push
negb
fimuls
adc
xchg
lret
out
rolb
xor
mov
stos
fucomi
fs
fldt
add
mov
stos
mov
sbb
mov
adc
sub
sarb
pusha
xchg
adc
sahf
dec
or
mov
adc
out
icebp
dec
pop
subb
cmpsl
jle
fidivl
mov
jge
push
cmp
jl
shrb
push
je
sbb
sbb
add
sbb
pop
sti
cmc
sub
dec
aas
jg
add
xchg
mov
fimuls
sub
es
jle
jae
and
push
pop
jmp
out
sbb
push
mov
fmull
addl
xchg
mov
and
ret
popf
lret
nop
in
xchg
call
and
fldenv
xchg
jb
mov
pop
mov
push
ficomps
cmp
lea
std
mov
xlat
rcl
aad
push
addl
and
sbbl
adc
insl
addb
jle
add
mov
lods
mov
mov
js
xchg
fs
ja
push
daa
stos
xchg
roll
lret
xchg
fists
lods
pop
fistpl
sbb
mov
mov
bnd
pop
jp
dec
and
and
sbb
ljmp
stc
mov
bound
call
sbb
adc
ds
out
test
pop
jl
jge
sub
inc
call
aas
adc
pop
cmp
mov
push
push
xchg
scas
mov
xchg
loopne
push
cmp
sarl
adc
call
movsl
inc
add
rcrl
stos
or
jns
ret
imul
and
xchg
mov
mov
sbb
push
lea
xchg
add
adcl
in
lcall
pop
push
add
stos
loopne
ss
into
nop
add
lahf
into
mov
add
xor
mov
mov
jns
scas
iret
fstl
ret
pusha
push
cmp
pop
cmpsb
sub
sbb
jge
pop
addr16
mov
idiv
mul
inc
in
jbe
in
sbb
push
aam
jbe
rcrb
lret
and
test
add
ret
clc
popf
inc
in
shll
in
jp
je
xlat
repnz
cmp
xor
push
and
xor
mov
sbb
fisubl
repnz
cwtl
inc
adc
add
enter
negb
rorl
out
roll
insl
adc
fucomip
rorl
popf
mov
xchg
xor
inc
int
mov
pop
pop
les
mov
lcall
xchg
xchg
lret
or
dec
add
aam
out
mov
imulb
ljmp
ret
outsb
cmp
lahf
loope
inc
xchg
enter
sub
sbb
adc
pop
xchg
lcall
pop
enter
fldcw
lods
movsl
adc
push
and
sub
xor
in
outsl
shlb
or
jnp
sti
xchg
xor
outsb
mov
orl
jae
bound
dec
pop
cwtl
das
mov
adc
shlb
imul
xchg
add
mov
das
stos
dec
lds
sub
pop
dec
fnstenv
mov
jecxz
pop
mov
lods
insl
add
pop
movsb
es
icebp
jne
jecxz
dec
sbb
cs
mov
out
addr16
lds
mov
sahf
pop
sbb
xchg
movsl
ret
jb
les
xchg
lds
sub
xor
sbb
push
mov
fldenv
add
mov
add
rol
mov
add
fsts
aad
fdivrs
sub
or
mov
test
adc
mov
pop
xchg
out
sarb
cmp
inc
rolb
stc
sbb
imul
mov
enter
dec
adc
pop
arpl
add
jbe
mov
mov
nop
mov
mov
pop
pop
fwait
scas
test
out
ds
std
push
mov
jmp
lock
stos
loop
test
lret
and
lea
vpshufhw
shll
pmaddwd
repz
sub
fistpll
cmp
mov
sbb
and
lcall
pop
mov
pop
aam
mov
fidivl
sub
insl
cmp
and
mov
subb
cmp
jmp
adc
inc
dec
xor
sbb
dec
jnp
sbb
in
push
mov
and
cltd
mov
sub
xlat
push
add
xorl
inc
fucom
mov
xchg
mov
mov
adc
mov
pusha
clc
mov
lcall
sbb
add
iret
repnz
mov
pushf
jae
repnz
and
inc
fistl
leave
push
arpl
addl
out
fidivs
inc
jge
cli
push
cmp
lcall
fadd
push
xor
daa
inc
xchg
mov
or
push
out
ja
xchg
loope
hlt
dec
xchg
decl
outsl
mov
inc
inc
rorb
jge
jp
mov
lcall
push
mov
hlt
or
dec
jns
pusha
pop
xlat
sub
mov
lret
cmp
lret
xchg
inc
repnz
int3
cmpsl
mov
pop
std
test
adc
imul
xor
mov
int3
call
or
xchg
adc
sarb
sti
int
inc
imul
xorb
push
pop
fbld
in
je
or
inc
movsw
es
push
pop
mov
sahf
mov
ja
sub
adc
fs
adcl
jo
or
flds
fstpl
iret
adc
sarb
je
leave
dec
xchg
inc
push
or
divb
jnp
push
mov
ljmp
fiadds
mov
sub
xor
out
sbb
push
mov
rolb
scas
nop
ja
or
dec
inc
lret
mov
dec
adc
loop
out
jne
add
add
rol
ficoms
cmp
mov
rcrl
stos
mov
pusha
int3
gs
add
mov
xchg
loope
pop
jmp
inc
sahf
xchg
mov
rcll
notl
cmp
les
adc
or
je
fsub
sub
pop
cli
mov
sbb
fadds
jp
inc
ljmp
adc
cmp
push
gs
jb
push
arpl
lret
or
loop
idivb
rcll
std
cmpsl
daa
repz
call
xchg
jge
adc
adc
fmul
insl
push
icebp
or
push
dec
xor
xor
into
lret
xchg
adc
aaa
sbb
aaa
cmp
push
shll
push
rcrl
mov
xor
orl
scas
xchg
jp
inc
stc
add
test
jns
rcll
xchg
orb
mov
pop
push
push
outsb
jl
mov
je
out
xchg
aas
sar
insb
call
jmp
adc
test
push
inc
movsl
repnz
sbb
xor
inc
and
lock
shlb
and
popf
les
loopne
inc
out
mov
addr16
sbb
mov
mov
add
pushf
test
add
addr16
fisubrl
jne
push
loope
sarb
icebp
dec
cs
mov
add
mov
addl
ja
jb
push
cmpsl
sahf
loope
and
pop
mov
push
sub
bound
lods
xlat
shll
add
cmp
and
inc
xor
ret
sub
pop
aas
cld
sub
jne
inc
inc
test
mov
mov
fsubrl
aad
out
ss
dec
ja
mov
fcmovnb
push
lcall
mov
pop
repz
iret
mov
xchg
pop
negl
pop
sbb
or
add
inc
cmp
pop
and
fnstsw
inc
sbb
cmpsl
xor
test
add
jp
pop
insb
xor
popf
mov
popf
ret
sbb
push
add
ljmp
icebp
push
xor
aad
jne
loopne
repz
loopne
and
fcoml
jecxz
cmp
or
cwtl
mov
push
or
jle
mov
pusha
cmpsl
mov
fldenv
fldl
mov
xlat
lock
in
jo
or
lret
rorl
dec
fistpl
pusha
lret
xchg
int
cltd
xchg
sub
cli
or
mov
imul
add
lret
mov
into
clc
and
dec
mov
push
int
jecxz
sbb
mov
or
xlat
jge
pop
adc
out
loope
repz
sbb
mov
rclb
sub
inc
xor
out
bnd
mov
sub
pop
add
gs
pop
adc
adc
jo
ret
iret
xchg
jbe
and
fildl
sbb
push
mov
mov
cwtl
pop
dec
lret
leave
adc
dec
push
adc
pop
xor
shrb
jo
cld
push
add
mov
or
mov
scas
cmp
pop
sbb
movsb
jmp
test
sub
inc
mov
or
jno
cmpsb
jbe
and
imul
mov
pop
cmpsl
std
add
aas
mov
xchg
push
dec
in
daa
push
lock
or
sub
push
clc
stos
push
push
mov
aas
out
xor
movsb
adc
cmp
shll
sub
bound
push
sbb
and
mov
mov
insl
inc
cli
sbb
fistl
clc
cmp
repnz
mov
mov
or
add
xchg
repnz
popa
xor
pop
mov
lods
dec
orl
enter
call
cwtl
subl
pop
add
mov
enter
dec
mov
mov
aad
addr16
or
dec
xchg
mov
data16
cmp
mov
icebp
loop
inc
sar
in
nop
popf
sbb
mov
fs
xor
sub
cmp
lahf
xchg
icebp
mov
dec
fsubr
test
sub
jnp
cmpsb
jle
xchg
xor
push
js
dec
ljmp
cwtl
popf
or
mov
test
mov
clc
loope
xlat
or
xchg
push
lock
dec
filds
int3
xchg
sbb
pop
pop
mov
rcll
out
mov
les
dec
andb
jbe
fbstp
mov
pop
push
loop
movsb
ja
mov
aaa
jmp
jae
push
mov
xchg
jne
and
movsl
test
xchg
push
rcll
popf
cmpsb
outsb
call
mov
xchg
imul
fidivl
idiv
fcoml
mov
xor
dec
and
icebp
repnz
jmp
repnz
dec
mov
and
inc
loop
into
test
mov
sbb
dec
xchg
neg
or
mov
xchg
xchg
mov
cmp
iret
pop
jg
or
jge
loop
sbb
sbb
cmpsb
les
sahf
lods
loope
mov
xchg
jge
movsl
ret
pop
sbb
mov
cmpsl
fcoms
std
push
adc
fwait
subb
out
lds
cmc
sti
dec
test
or
sub
repnz
push
add
das
scas
add
mov
sub
and
lods
lock
sbb
loope
pop
push
pushf
jae
incb
adc
divb
sub
sub
rorb
fmuls
sbb
inc
rclb
pusha
xchg
loop
js
and
xor
jp
cmp
sub
movsl
les
pusha
out
sub
sahf
sarb
cmp
cmp
sahf
adcl
and
mov
xor
outsl
movsb
fcomip
sub
inc
decb
ret
push
xchg
pop
hlt
add
addr16
and
pop
xchg
rol
das
cs
lods
mov
xchg
rcll
dec
test
repz
pop
xor
add
adc
std
xchg
lahf
and
adc
dec
ds
insb
cmp
addl
loopne
mov
mov
in
sbb
push
hlt
test
mov
push
mov
xchg
adc
jl
lods
push
icebp
in
outsl
jg
mov
insb
int
dec
xchg
mov
sbb
stos
or
push
cmp
aaa
and
repnz
fs
mov
inc
push
daa
ret
ds
pushf
jne
xchg
dec
or
stc
add
dec
xchg
aam
imull
das
imul
pop
mov
push
push
outsl
dec
or
pop
sahf
je
sbb
sub
cmpsl
mov
mov
mov
pop
imul
outsb
add
repz
jo
je
pop
sub
mov
adc
arpl
adc
jle
cmp
jb
or
mov
cmp
jp
stos
adc
popa
dec
push
inc
sbb
mov
out
fldt
push
stos
xchg
xchg
jg
mov
sbb
mov
push
mov
xchg
addr16
cmovp
outsb
add
sub
jo
push
cmp
outsb
jnp
mov
inc
dec
push
popf
bound
mov
jl
dec
sbb
jp
les
mov
pusha
mov
push
add
int3
and
aas
mov
arpl
inc
jmp
lret
inc
mov
adc
add
cli
ds
fnstcw
mov
dec
cmc
xor
dec
mov
cmp
jmp
add
jbe
ss
xor
sub
lds
stc
jle
fisubrl
fdivr
ret
and
stos
mov
stc
aam
shrb
ficoms
mov
lcall
push
pop
xchg
push
inc
adcb
stos
rol
shlb
and
in
sarl
jmp
mov
adc
insb
xchg
aas
and
mov
sti
jbe
adc
clc
or
iret
lods
cmp
xchg
in
mov
ror
or
test
outsl
fsts
lcall
aas
xchg
pop
shll
cld
push
and
dec
add
jae
lret
movsl
mov
dec
repnz
xchg
push
fildl
xchg
jg
ret
daa
jl
cmp
cmpsb
pop
adc
push
dec
pop
loopne
mov
icebp
ss
push
aad
pop
sub
adc
ficomps
push
scas
lea
outsb
jmp
out
dec
leave
int
and
js
sbb
imul
pop
xor
inc
xchg
aad
xchg
fistl
lods
add
pop
jmp
xor
fstl
add
sub
repz
mov
mov
cmp
popa
aad
push
cmc
mov
and
jo
jno
cmc
popf
sbb
clc
lret
dec
push
cmc
ss
leave
xor
aam
ss
lahf
adc
clc
xchg
mov
jns
mov
adc
pop
and
in
stc
ret
dec
lea
adc
bound
mov
pusha
pushf
jae
cwtl
test
jmp
fmuls
add
outsl
inc
push
push
mov
sbb
add
or
mov
scas
xor
cs
aas
pop
mov
sub
pop
ret
and
jp
cmpsb
out
xchg
xchg
lcall
sub
sti
jge
mov
pop
cwtl
push
sub
fs
shlb
dec
fldenv
cmpsb
and
pusha
adc
xlat
icebp
lods
xlat
jg
pop
addr16
mov
in
jecxz
stc
into
fcompl
mov
movsl
pushf
js
push
test
jecxz
xchg
std
lahf
mov
lret
push
pop
test
movsl
jo
push
mull
test
int
scas
cltd
mov
xor
out
rcll
mov
adc
lds
jmp
sub
pusha
mov
push
mov
sbb
mov
pop
stos
pop
add
gs
dec
fsubl
das
and
mov
push
cmp
and
adc
fwait
popa
imul
sub
push
pop
pop
pop
cmp
lahf
lret
jp
cltd
pop
dec
dec
test
scas
in
dec
fidivs
adc
add
dec
inc
subb
or
out
decb
loopne
jg
dec
add
push
aam
insb
into
pop
into
xlat
adc
and
sub
or
js
inc
or
sbb
pop
mov
fisttps
pop
arpl
cmp
cmc
pop
repnz
movsl
jle
outsb
adc
cld
mov
dec
sarb
movsb
push
and
jp
insl
jno
aad
push
ss
push
frstor
xchg
fmull
scas
test
andb
push
je
jmp
rol
lahf
inc
mov
ret
xchg
and
push
mov
inc
mov
in
add
pop
pop
test
push
adc
jbe
call
jno
jmp
xchg
lods
hlt
jae
push
ja
cmpsl
inc
mov
mov
out
adc
lret
mov
movsl
sub
pusha
mov
imul
mov
lret
inc
imul
ds
mov
test
ret
push
popa
mov
mov
dec
or
jae
mov
or
xchg
pushf
data16
add
aaa
ss
jmp
mov
mov
jmp
adc
aaa
push
fnstenv
loope
popa
mov
mov
ja
pop
sbb
mov
jae
aas
stos
mov
mov
dec
mov
addb
jp
daa
aas
cmp
mov
icebp
ret
dec
shrl
popf
and
pop
lock
xor
xchg
fwait
dec
push
cmpsl
or
dec
xor
mov
decb
lea
ja
in
xchg
mov
divl
cmpsb
jns,pt
enter
push
adc
rcr
into
and
add
daa
sbbb
cs
stos
and
es
fdecstp
inc
jl
dec
shrl
dec
cs
sbb
test
xchg
enter
daa
adc
and
add
sbb
add
inc
jl
enter
push
insl
xor
inc
es
bound
rcrb
imul
adc
mov
jns
loope
mov
pop
pop
dec
daa
pop
fwait
xchg
xchg
lcall
imul
testl
fs
xor
fwait
movsb
jnp
in
rcl
pop
jle
fcmove
shlb
fiadds
push
test
lret
and
cld
cmpsb
mov
xor
movsb
lock
cmp
sti
push
jns
sbb
sub
jl
jbe
cli
inc
cmc
jb
push
mov
enter
add
sub
xchg
jae
fwait
jns
rorb
lcall
call
je
popf
int3
cmp
int3
bound
out
dec
xchg
pop
popf
push
mov
cmp
adc
es
and
shl
add
lret
imul
inc
loop
sbb
ds
repnz
int3
aas
repz
pusha
pop
xchg
push
push
inc
jbe
push
rcrb
sub
and
mov
ja
aam
int
mov
or
adc
into
clc
mov
pop
cmp
sub
adc
call
cwtl
jo
mov
ss
sub
icebp
mov
fbstp
ret
push
jns
lock
sbb
popa
lret
or
ss
push
loopne
rorb
int
mov
pop
xchg
ret
xorb
xchg
or
xor
out
int
jl
add
sti
sub
sbb
mov
ljmp
inc
in
xchg
sub
pand
jbe
adc
mov
aam
les
fimuls
cwtl
data16
jmp
insl
sbbl
and
loop
dec
psrlq
jmp
inc
add
lods
cmp
xchg
loope
xor
add
es
cmpsb
inc
mov
and
ret
loopne
mov
xchg
mov
xchg
mov
pop
xchg
lods
xlat
or
adc
ret
cmp
dec
inc
sahf
aam
mov
add
fldl
push
pop
xchg
shrl
loop
push
mov
ret
repnz
aaa
mov
jb
add
jmp
and
jmp
inc
dec
push
jae
ss
mov
cmp
cwtl
outsb
and
xchg
mov
cld
pop
lahf
xchg
or
inc
insb
test
frstor
mov
ficoml
addb
inc
loop
dec
jbe
test
pushf
loop
mov
outsl
rcll
xchg
mov
int3
in
mov
in
ficoms
in
mov
mov
push
jg
pop
std
push
sbb
add
orb
hlt
dec
shll
mov
inc
sbb
push
es
push
adc
jo
jbe
mulb
das
mov
lret
or
dec
rcrl
into
ljmp
mov
xchg
add
jg
jo
into
jbe
out
xor
push
mov
jp
andb
imul
imul
dec
pop
or
xlat
push
sbb
mov
jg
sub
cmpsb
cmp
sbb
cld
testl
jg
inc
push
mov
jle
dec
add
scas
push
pop
in
dec
hlt
and
inc
sub
out
test
push
xchg
pop
sub
in
xor
enter
dec
fidivl
mov
dec
xor
stos
adc
out
cltd
push
push
jnp
mov
into
push
mov
mov
das
in
cmp
sbb
inc
push
lds
push
imul
cmp
icebp
jl
inc
push
pop
sub
dec
push
xor
jp
jne
adc
rcrb
ja
fwait
dec
mov
cmp
and
test
divl
push
or
ja
jbe
lds
jmp
iret
pop
cli
jl
in
sub
jnp
xor
lret
mov
int3
add
hlt
push
sbb
and
int3
insb
xchg
adc
int
jmp
mov
std
jp
cmp
imul
inc
sbb
out
pusha
xlat
jns
in
mov
cli
call
aaa
jno
popa
jmp
mov
jmp
clc
cld
pop
test
outsb
xorb
imul
mov
loop
pop
lahf
cltd
in
loopne
mov
dec
cmp
xchg
pop
sti
xor
fimuls
adc
imul
ficoml
and
fsubl
jno
mov
mov
sbb
pop
rcl
sub
dec
cmc
push
sbb
loop
out
add
out
aad
add
sub
jecxz
popf
push
dec
fsubrs
jns
in
pop
jecxz
mov
dec
inc
mov
xchg
loopew
jo
xchg
mov
subl
insb
mov
adc
pcmpeqw
lods
fidivs
imul
cmc
push
mov
push
jnp
nop
outsl
dec
ljmp
call
outsl
or
xlat
dec
adc
lret
aam
mov
jno
cmc
pop
fildll
sahf
add
ret
ss
sbb
mov
jecxz
popa
xchg
loope
jbe
hlt
sbb
jae
sbbb
aam
rol
add
cwtl
in
bsr
and
mov
iret
xor
iret
add
sbb
aas
pop
and
iret
not
push
push
loop
inc
and
cmp
adc
out
outsl
cmc
out
fnsave
shlb
in
and
loope
loope
lea
cmp
jg
ret
xchg
iret
xchg
sbb
mov
cwtl
inc
sub
adc
test
fsubs
mov
inc
fs
mov
adc
mov
std
sub
int
xor
popa
lcall
fs
mov
andl
je
jl
xorb
jp
and
hlt
insb
push
arpl
lret
sub
inc
sub
jne
pushf
out
and
push
sahf
push
mov
or
ret
add
or
jae
or
fsubs
scas
push
and
addb
jae
xor
jle
fcompl
loopne
ljmp
or
iret
or
imul
mov
movl
ljmp
notl
rcl
sub
jl
in
cmp
add
cs
mov
in
sbb
xor
sbb
push
pusha
jl
in
outsl
pop
testl
scas
xlat
mov
cwtl
inc
inc
shlb
inc
xchg
and
mov
popa
mov
xor
or
fcmove
lcall
cmp
idiv
or
es
cmp
sub
in
jle
lahf
cwtl
stos
adc
xor
imul
dec
push
sti
mov
cli
xchg
outsl
push
sbb
sub
and
add
xchg
xchg
lock
gs
sub
push
push
int3
fcomps
shll
cmp
imulb
push
jns
mov
lock
shr
or
mov
lahf
scas
add
test
andb
cmp
push
pop
sbb
mov
jl
dec
xor
faddl
mov
dec
mov
pop
add
lods
je
pop
testb
adc
rclb
rcl
mov
mov
leave
and
out
fwait
mov
cld
jbe
adc
fs
in
dec
pop
in
jp
adc
or
cmp
jae
jbe
inc
pushf
das
popf
xchg
dec
jno
jne
jb
mov
xor
js
dec
adc
inc
pop
das
inc
sbb
lea
xchg
xlat
sar
mov
lret
ss
test
add
rcr
fidivl
dec
iret
les
xchg
frstor
mov
xchg
testl
push
cmp
jo
popf
xor
lret
outsl
lret
mov
jns
mov
lcall
mov
popa
sub
loopne
mov
cmp
and
imul
pmulhw
mov
and
ret
sbb
movsl
cmp
out
cmp
jmp
decb
fiaddl
add
cltd
push
lods
cmp
test
mov
inc
push
cmp
enter
test
mov
sarl
idiv
jbe
outsb
arpl
xlat
mov
and
pop
outsb
pop
push
mov
or
push
pop
push
jg
sahf
mov
adc
xchg
mov
aas
sub
mov
stos
pushf
imul
xchg
adc
sbb
popa
adc
pop
cld
in
adc
sbb
sub
adc
mov
cmp
pop
lods
jmp
sahf
push
aas
inc
jmp
lods
mov
out
jnp
movsl
dec
xchg
inc
es
inc
cltd
mov
in
aaa
or
fimuls
dec
xchg
out
and
or
lcall
test
or
inc
push
movsb
dec
test
aad
popf
es
mov
aam
xchg
sbb
arpl
cltd
pop
sbbb
dec
cmc
cwtl
push
hlt
inc
lods
js
xchg
int
out
stos
xchg
xor
push
cltd
and
call
adc
stos
scas
lods
mov
or
ljmp
mov
lock
sbb
cmp
sets
adc
inc
jb
insl
push
arpl
or
mov
in
shrb
mov
sub
mov
faddp
jae
scas
dec
xchg
les
xchg
inc
fdivrs
xor
fisttps
mov
mov
stos
mov
movups
adc
nop
das
jmp
xlat
jle
dec
add
fdivrp
addr16
lods
in
push
lods
push
popf
cwtl
inc
lods
negl
lods
rorb
enter
add
xchg
mov
shll
xor
and
subl
outsl
pop
xchg
dec
mov
inc
xchg
adc
inc
dec
mov
jne
dec
enter
flds
mov
sub
loope
mov
adc
lock
pop
inc
jmp
fidivs
adcb
sub
sbb
sub
ret
push
test
hlt
xchg
out
add
jnp
fcomip
jbe
dec
jle
pop
mov
inc
dec
and
incl
dec
sbb
cmp
xchg
xor
add
aam
shlb
xchg
dec
dec
repz
pop
or
cli
inc
push
fninit
jnp
fs
iret
stos
repnz
jnp
and
jns
in
ljmp
push
push
adc
adc
mov
xchg
negb
push
jg
popa
test
jge
movsb
in
lahf
stc
mov
jmp
stos
arpl
test
test
fidivl
loopne
lods
outsb
loope
xchg
shrl
xchg
or
mov
in
test
out
in
loopne
bnd
add
rcl
ret
aas
pop
ja
jl
scas
scas
xor
mov
push
add
pop
push
mov
mov
es
dec
inc
jg
stos
xor
inc
test
mov
popa
jecxz
lcall
pop
cwtl
xor
ficompl
pop
insb
shll
ss
hlt
mov
pop
test
cli
add
stc
sub
jge
pop
xchg
mov
jp
inc
int
sbb
xchg
jecxz
in
xacquire
add
adc
fnstenv
rorb
shll
jbe
insb
xor
push
mov
lahf
call
ljmp
sub
iret
aaa
xchg
popf
arpl
out
loopne
mov
sbb
inc
jge
xchg
and
mov
dec
ja
add
cltd
stos
outsl
in
mov
testl
icebp
add
cmpsb
add
sbb
imul
test
lock
outsb
xor
into
pop
sbb
and
fidivrl
pop
insb
popf
fs
sbb
xchg
clc
call
mov
mov
mov
ss
mov
bound
xchg
sahf
mov
push
or
sahf
int
lret
shrl
repnz
mov
inc
mov
sub
mulb
js
ljmp
clc
sahf
push
mov
push
orb
cmp
jbe
add
xchg
dec
insl
cmpsl
loop
push
insb
xor
add
pop
lea
mov
dec
fldenv
enter
mov
jmp
lock
inc
mov
sub
push
push
imul
jcxz
and
iret
ret
xchg
icebp
jnp
cmp
pop
add
pop
popa
jl
loop
mov
push
push
adc
out
fistl
mov
mov
jbe
idivb
mov
rep
aas
gs
add
xor
out
popf
ret
cmpsl
aas
add
cltd
cmp
xchg
mov
mov
xor
fwait
mov
outsl
out
out
or
jle
bound
test
leave
hlt
mov
and
aas
jnp
in
pop
cmp
jo
push
lcall
inc
adc
movsl
ss
inc
ss
jecxz
outsl
ret
mov
cmpsl
test
and
aas
fnstcw
cmp
cld
mov
xor
out
pop
fwait
in
jo
adc
push
test
sub
mov
push
xchg
lds
inc
push
sub
jecxz
fildl
out
cmpsb
fistpl
js
sub
inc
sbb
aas
mov
in
add
jmp
in
inc
insb
pop
push
sarb
fdivl
shlb
jns
inc
mov
in
xchg
clc
mov
movntps
add
test
aaa
stos
sub
repz
test
adc
sbb
ja
mov
jmp
xchg
mov
mov
lret
xorb
inc
jo
movsb
incl
push
call
inc
cmp
pop
clc
mov
fsubrs
aas
nop
pop
and
or
dec
dec
out
push
loop
inc
data16
shll
jno
jne
jmp
nop
push
or
out
mov
push
add
rclb
dec
jl
push
mov
arpl
add
push
into
xchg
or
xchg
mov
insb
jl
mov
or
lods
push
cmc
jnp
xor
lds
inc
mov
sbb
scas
sub
cmpsl
mov
jns
shrl
jl
add
mov
sub
jbe
in
sbbl
pop
icebp
ljmp
je
mov
sub
std
arpl
mov
shll
add
add
dec
loope
sbb
mov
push
in
aam
rcll
xor
push
add
adc
int
xchg
data16
jmp
cld
mov
enter
test
mov
pushf
xchg
lret
pop
lret
fnstcw
sahf
shll
ds
and
push
xchg
movsb
ret
and
cmpsl
shlb
or
bnd
jb
lea
pop
insl
or
pushf
scas
lahf
std
lods
pop
decb
jge
leave
je
aam
xchg
gs
hlt
je
insb
inc
sub
xchg
shr
add
aad
adc
shll
add
aad
fsubs
cltd
sarb
or
lods
mov
mov
dec
in
repnz
push
xchg
pop
out
ljmp
and
fimull
jl
xor
add
lret
push
jecxz
push
std
cmp
xlat
xchg
gs
inc
cmp
adc
pusha
sbb
dec
mov
mov
imul
and
popa
insl
xchg
out
sub
sub
outsl
adc
rorl
das
insb
pushf
and
push
mov
mov
sar
imul
push
and
icebp
or
std
sub
adc
or
lea
inc
std
fisttpll
push
enter
mov
shlb
fistpl
ljmp
jb
mov
sbb
sbb
adc
pusha
xchg
xor
repnz
mov
cli
xchg
je
jo
and
sbb
mov
test
jns
and
push
mov
insl
leave
xchg
call
mov
push
in
pop
mov
insl
inc
call
out
test
mov
arpl
jbe
or
xor
pushf
push
mov
dec
mov
mov
and
int3
pop
sub
xlat
xchg
xchg
jle
inc
dec
pop
lds
mov
das
push
sub
out
test
mov
jo
add
idiv
cmc
push
insb
xchg
xor
sub
pop
jmp
sub
pop
andl
aaa
mov
jp
pop
mov
fs
or
or
push
icebp
xchg
and
mov
push
push
sbb
mov
xor
ret
rorl
sbb
call
je
popf
cmp
fisttps
cmp
mov
dec
adc
clc
in
fiadds
int
cmp
sub
aad
and
pop
pop
sbb
inc
out
stos
add
mov
mov
add
pushf
lods
ss
test
fsubrl
mov
in
adc
stos
fisttpl
jbe
scas
mov
ds
shrl
into
or
andl
sti
pop
adc
or
cmp
sbb
dec
cmpsb
lcall
popa
mov
mov
mov
push
in
mov
adc
rcll
push
dec
in
and
push
jl
and
test
rclb
push
xchg
pop
fistpl
cmpb
mov
mov
push
cpuid
mov
pop
cmc
mov
and
xchg
lahf
fs
add
lea
pop
cmp
adc
out
push
push
out
out
idiv
icebp
mov
filds
push
out
and
mov
jnp
jl
in
dec
or
lock
imul
stc
imul
and
inc
movsl
js
insb
cmp
inc
mov
sub
dec
outsb
sub
push
es
adc
xchg
sub
cltd
mov
dec
sbb
int3
loopne
cmp
out
enter
aaa
jle
cmp
in
inc
dec
push
lret
add
fnstenv
ss
adc
add
gs
adc
sub
aam
push
jo
sbb
jne
push
xor
loopne
movl
lock
nop
jle
lret
push
in
daa
xor
cmp
mov
mov
xchg
jmp
pop
test
mov
lds
adc
dec
pop
stos
cmp
sbb
mov
lcall
mov
jecxz
dec
aam
pop
xor
iret
aam
pop
into
mov
inc
stos
std
jnp
sbb
lcall
inc
lret
lds
xor
xchg
jbe
mov
push
inc
outsl
cld
sbb
xchg
rorl
lods
mov
jmp
addl
roll
sbb
inc
push
out
mov
testb
sar
idivl
sub
bswap
xor
cmp
jbe
inc
pop
mov
xchg
data16
inc
in
daa
leave
mov
test
push
in
clc
push
loop
leave
mov
mov
test
stos
fstl
push
push
push
adc
out
repz
loop
push
push
aam
divb
xchg
aaa
out
inc
pop
not
sub
inc
cmc
test
stc
pusha
adc
xchg
enter
dec
pop
call
xor
nop
mov
js
js
mov
outsb
ret
sbb
aam
cmp
lret
movsb
dec
lock
pop
lock
test
inc
cltd
pop
xor
mov
fimuls
lret
popf
adc
jns
pop
repz
mov
outsb
sbb
std
pop
test
cmp
scas
add
xlat
xchg
inc
out
es
mov
sbb
lret
adc
xorl
lahf
daa
add
je
lods
dec
outsl
leave
sbb
xchg
push
cmpsl
mov
sbb
in
imul
out
fisubs
jg
sub
pop
adc
adcb
leave
iret
sti
roll
or
mov
sarl
sarb
daa
aad
pop
jbe
je
testl
mov
mov
mov
sub
sti
pop
push
addr16
cmp
jb
out
mov
sbb
js
aad
fmull
mov
cmp
dec
jae
xchg
repz
mov
scas
imul
jge
adc
lahf
or
jg
mov
jnp
rclb
jl
cmp
and
xchg
pop
mov
or
lret
xorl
cld
lock
add
add
adc
loopne,pn
mov
nop
pop
stos
jnp
out
pop
imul
daa
inc
mov
mov
leave
or
shrb
cmp
clc
mov
out
xor
sti
mov
enter
rcrb
xchg
mov
lds
shlb
add
xchg
inc
fs
imul
gs
adc
add
std
fwait
scas
jge
cltd
sbb
pop
inc
stc
push
fdiv
inc
je
lods
adc
pop
imul
and
mov
lods
cmc
and
js
push
bound
or
gs
fisubrs
lret
push
add
cmp
addb
pop
dec
adc
addl
adc
cli
in
push
mov
jno
push
pusha
outsl
pop
inc
bound
adc
lods
sarb
popa
insb
shlb
je
push
mov
xchg
outsb
sbb
cmpsb
and
in
test
out
aas
push
jnp
ja
into
cwtl
shr
cmc
mov
cmpsb
add
das
das
xchg
lea
jne
in
test
pop
sbb
cmp
aam
xor
and
dec
cmp
inc
mov
xchg
cmp
es
xchg
jg
mov
inc
xabort
cmp
xchg
fisttps
pop
adc
jle
mov
ja
jo
test
rcl
jns
pop
popa
test
sti
popa
gs
cld
xlat
push
ret
mov
lds
test
orl
leave
testl
testb
push
jg
js
or
aad
pop
ja
jae
jno
dec
cmpsl
ja
outsl
pop
mov
mov
in
push
jmp
xor
sahf
fs
scas
aam
jmp
movsb
mov
dec
jecxz
and
xor
pop
and
sub
cld
push
jge
test
les
mov
fmuls
mov
fsubl
push
movsb
roll
xlat
dec
pop
andb
sbb
jle
in
call
aad
inc
jae
mov
lahf
les
aas
dec
inc
cmp
lea
in
add
out
out
jg
inc
cmp
cwtl
inc
adc
dec
add
imul
lds
outsb
jns
and
pop
pop
test
or
sti
sub
inc
test
pop
dec
mov
inc
mov
int
fistpll
adc
loop
imul
cltd
push
sbb
jge
mov
dec
sub
mov
mov
inc
mov
pop
push
sbb
or
inc
out
add
sbb
mov
repz
pusha
sbb
addr16
imul
sub
inc
push
sub
and
add
rclb
mov
ret
mov
sbb
mov
jb
push
sub
aad
das
sbb
test
aam
push
add
divb
das
imul
mov
sub
ss
popf
loopne
mov
pop
into
pushf
or
mov
fisubl
jbe
inc
push
repz
lea
pop
cmp
push
pop
sub
and
jecxz
dec
add
adc
cmpsl
stos
imul
mov
test
rcrb
adc
icebp
rorl
lahf
mov
repz
jg
ds
maxps
lds
inc
fstl
sub
cmpb
int3
ret
dec
rolb
push
push
pop
or
push
pop
mov
lock
fadds
lahf
pop
pushf
jns
sbb
lahf
mov
xor
jne
imul
sub
mov
sbbb
test
mov
cmp
xor
in
lret
loop
and
repz
mov
add
pop
cli
and
add
push
inc
pop
adc
and
lret
popf
das
and
sub
cs
fiadds
iret
popa
stc
into
shl
push
ljmp
and
je
and
leave
insl
roll
mov
dec
and
sbb
mov
ljmp
dec
call
mov
lods
or
psubusb
push
sub
push
ja
fs
int
insb
xchg
sub
loopne
subl
inc
push
push
push
fcomip
xchg
imull
jae
pushf
adc
mov
gs
repnz
leave
inc
lret
bound
shll
aaa
dec
sar
pop
mov
mov
dec
and
insb
lret
ja
fcmovu
daa
add
das
test
jecxz
ds
sub
jns
mov
jo
and
je
loopne
mov
jge
fstps
mov
lcall
sbb
adc
inc
dec
out
ret
clc
push
jmp
cmc
mov
shlb
xchg
add
inc
out
ficomps
xor
imul
push
jno
xchg
pop
mov
lods
cmp
cltd
bound
xchg
into
ret
jno
push
sub
mov
pop
push
jg
scas
mov
cmpsb
push
call
in
ffreep
sub
pusha
les
sbb
repnz
mov
movsb
test
cmp
push
xchg
jno
xchg
in
outsl
pusha
xchg
movsl
in
push
push
inc
std
fdivl
ret
fwait
outsl
mov
mov
mov
or
pop
mov
jge
rcrb
call
add
arpl
aas
cli
sbbl
das
cmpsl
mov
mov
add
dec
filds
xchg
jb
es
or
pop
shll
out
mov
sti
sub
mov
js
movsl
inc
test
loope
and
cmpl
sub
mov
sub
pop
mov
outsb
mov
or
cmp
bnd
xchg
ljmp
fstl
out
dec
mov
dec
or
cs
push
popa
faddp
mov
jl
into
test
sbb
pusha
pop
int
fwait
sub
lcall
repnz
add
add
or
ret
lcall
out
js
fnstsw
push
cmpsl
aaa
stc
pop
push
dec
jl
add
pop
in
ficompl
insb
push
fstps
out
icebp
sbb
icebp
xchg
int
out
xchg
nop
icebp
or
mov
add
pop
out
jne
imul
lds
xchg
xor
push
xor
aad
jbe
and
add
add
sbb
ljmp
in
lods
mov
je
fsubrl
pop
cmpsl
pop
add
mov
inc
jno
inc
call
and
jns
dec
sub
jp
xor
ds
sub
xchg
mov
cmp
das
js
pushf
mov
cli
into
push
mov
mov
lods
rorb
jb
push
and
stc
adc
inc
stos
cmpsl
scas
cli
pop
pop
ret
cwtl
ret
cli
inc
fidivrs
dec
push
push
sub
xchg
or
jo
daa
fldenv
in
out
inc
shlb
push
and
add
pop
sub
testl
aas
mov
jg
mov
repnz
adc
or
arpl
shll
sbb
mov
jb
jp
shrl
add
cld
pop
xor
cmp
idiv
stc
dec
jg
dec
lock
push
stc
mov
inc
xchg
jb
in
jnp
inc
pop
cmpsl
mov
push
jecxz
ja
sahf
cmpsl
inc
sbb
xchg
cmc
aad
sbb
cmp
lea
pop
ljmp
mov
leave
ljmp
xor
jmp
inc
push
or
fnstenv
or
icebp
mov
pop
mov
add
inc
fstl
mov
test
mov
roll
popf
jnp
aas
xchg
jecxz
cld
test
dec
xor
mov
in
arpl
mov
mov
inc
push
inc
ficoml
cmpb
sub
lcall
js
les
sub
jmp
sub
cmc
mov
sahf
xor
pushl
js
stos
push
push
pop
and
lock
cmp
lea
movsb
repz
push
scas
fisubrs
andb
js
jne
ret
cmp
push
sbb
mov
or
or
in
mov
mov
cwtl
jg
clc
repnz
push
fistpll
fisttpl
xchg
stc
mov
sub
and
xor
loop
fidivl
decb
aas
cs
pop
pusha
pop
cld
hlt
insb
aaa
inc
mov
mov
push
repnz
les
aaa
scas
and
dec
in
inc
sub
ficoml
dec
push
stos
mov
inc
mov
aam
hlt
pop
jb
or
loope
add
lcall
add
inc
enter
stc
xchg
or
mov
lods
test
testb
hlt
mov
inc
rclb
mov
mov
hlt
sbb
and
lods
add
or
ret
lcall
pop
push
popf
fdivr
and
lock
lss
xlat
mov
pop
ljmp
nop
lsl
imul
shlb
adc
loopne
mov
mov
xchg
leave
fmuls
fsub
lahf
dec
nop
pop
sbb
jne
push
lahf
mov
sub
data16
shl
push
or
test
adc
xlat
stos
sub
xor
xchg
jnp
jle
dec
les
jmp
test
push
mov
xchg
sbb
adc
mov
jecxz
pop
mov
hlt
hlt
mov
shr
push
outsl
add
xor
gs
scas
sbb
aas
push
shll
mov
fstps
insb
cmp
pop
push
lea
mov
push
xor
adc
mov
xorl
dec
sbb
pop
ret
xor
pop
inc
aas
push
insl
cmp
out
ds
nop
test
outsl
data16
jle
imul
cwtl
mov
pusha
arpl
mov
sti
sub
jbe
leave
icebp
cli
jl
jge
outsb
or
cmpsl
in
or
xchg
stos
popa
mov
sub
ja
xor
xchg
mov
and
mov
call
jno
or
adc
fnsave
and
cs
fwait
in
ljmp
lock
sbb
xor
push
fstpl
outsb
xchg
in
test
rcl
or
bound
rcrb
mov
les
jo
ja
push
das
ljmp
dec
scas
push
rcrl
mov
les
mov
stos
ret
push
fcoml
mov
ret
dec
jne
dec
ret
sub
fisubrl
xchg
cmpsb
push
xchg
mov
fidivs
mov
dec
pop
popf
or
rcr
lods
arpl
jmp
mov
divl
icebp
and
jg
add
cs
cmpsb
mov
das
push
dec
push
repnz
clc
mov
fs
ds
xchg
push
jnp
push
fwait
leave
insl
cmp
adc
outsl
xchg
fcompl
test
imul
jle
shrb
pop
mov
sahf
inc
lahf
lea
clc
sbb
add
mov
sub
pop
pop
imul
ret
cmp
iret
call
lret
mov
mov
xchg
jnp
mov
xchg
adc
addb
xor
inc
addl
jmp
pop
aas
into
sahf
cmpsl
sub
sub
dec
es
inc
push
jae
xchg
insl
or
mov
cmp
pop
dec
mov
out
or
cmpsb
add
inc
je
xchg
adc
add
pop
fs
cmp
mov
cwtl
and
loope
and
movsb
clc
mov
insb
clc
mov
add
sbb
fwait
scas
mov
cwtl
sti
test
es
cld
int3
mov
mov
sbbb
mov
jns
pop
sbb
xor
pop
add
jne
jp
sub
cld
in
add
insb
jg
jnp
xor
rorb
and
rcll
fwait
sbb
jge
cmpl
mov
xchg
pop
cli
add
xchg
dec
lcall
stc
push
imul
jb
dec
imul
or
jmp
add
pop
std
cltd
add
pop
fs
add
cmpsl
fs
and
nop
or
pop
jo
loop
inc
lret
jbe
aad
iret
mov
in
pop
jns
dec
outsb
scas
repz
cmp
mov
lea
pop
int3
xlat
in
xchg
or
hlt
mov
jecxz
mov
cmp
xchg
mov
mov
push
and
jnp
jecxz
mov
push
cmp
aas
mov
add
and
dec
lcall
push
xchg
aaa
jge
add
push
js
jge
pop
mov
push
jo
and
xlat
sti
push
lds
inc
in
repz
inc
into
scas
scas
xor
or
push
fldl
mov
ss
jb
or
add
scas
je
scas
and
ljmp
adc
pop
and
pop
and
and
jp
mov
jg
daa
mov
cmp
mov
jl
and
add
mov
xchg
data16
insb
pop
adcl
stos
data16
push
xchg
pop
outsl
xor
test
adc
jl
pop
dec
push
or
mov
xor
push
xor
pop
adc
push
cmp
jmp
jo
orl
jb
pop
push
test
sbb
mov
xor
or
mov
loope
add
xchg
cltd
pop
lods
call
ret
and
pop
xor
es
mov
test
into
add
mov
fbld
mov
inc
shlb
popa
hlt
pop
mov
popf
loop
mov
out
rcll
pop
outsl
push
fsubrs
adc
fisubrl
adc
sbb
add
mov
mov
je
cli
xor
shl
jno
cwtl
lahf
bound
pop
lcall
jge
les
jns
test
in
or
mov
jno
mov
scas
add
lods
cs
les
add
inc
mov
fdivl
cmp
sub
and
in
rorl
sarl
ffree
pop
push
push
aad
mov
mov
xchg
dec
rcrl
cs
cmc
inc
mov
and
sbb
mov
sbb
mov
sub
pop
mov
insb
data16
cmp
inc
je
sbb
mov
cmp
cmpsl
add
add
xchg
mov
and
mov
cvtdq2ps
sbb
mov
insb
xchg
jmp
inc
into
icebp
loopne
icebp
bound
sahf
repnz
jp
cmpsb
mull
xchg
ret
stos
fdivl
icebp
fldt
add
or
fdivrs
add
pusha
call
je
test
xor
filds
test
fwait
and
inc
mov
fbld
decl
in
sub
test
int3
jmp
sahf
sub
mov
inc
outsb
mov
mov
add
jne
enter
mov
aaa
adc
es
mov
xor
fs
dec
mov
pop
sub
push
cmpsl
jle
mov
mov
cmp
stc
mov
out
inc
push
shll
push
loopne
sbbl
push
push
scas
imul
addr16
lret
fs
push
push
sub
mov
in
jne
aad
cwtl
cmp
mov
lea
movsb
cltd
cmp
mov
sub
jns
rorb
cld
insl
jp
ret
iret
push
mov
scas
clc
pushl
out
shll
and
repnz
xchg
insl
dec
notl
add
les
and
std
es
sbb
jl
inc
inc
mov
inc
movsl
mov
aas
lds
es
and
sbb
in
jnp
arpl
xor
or
cli
push
shrb
mov
std
fcomp
ds
fs
jle
lds
dec
push
pushf
cltd
stc
inc
aad
sarb
movl
jae
aad
pop
movsb
mov
or
pop
push
mov
movsb
jns
mov
in
mov
pushf
imul
sub
and
rolb
loop
icebp
sbb
inc
fnstcw
mov
pop
xchg
jmp
dec
ja
lahf
sti
mov
jmp
dec
sbb
outsl
jg
lods
xlat
sub
sti
or
xor
xor
and
aas
aam
cltd
push
adc
push
jle
movsb
fsubl
fistl
fistps
ret
or
push
aas
jnp
aas
mov
in
aas
mov
dec
lods
sub
xchg
rol
ss
repz
inc
dec
jp
adc
add
pop
mov
mov
ds
cmp
shrb
out
dec
je
push
test
outsl
int3
sub
in
and
push
and
lods
mov
pop
xchg
lret
jo
xchg
cmp
test
cs
insl
gs
ret
out
sub
stos
hlt
popf
decl
sti
push
xor
push
mov
cwtl
inc
cli
popl
stos
mov
inc
roll
cmpsl
xchg
fisubrl
fnstsw
mov
test
cmp
idivl
out
insb
nop
jnp
or
pop
mov
cmpsl
inc
push
outsb
pop
fdiv
lret
or
push
ja
mov
out
cwtl
hlt
jae
sub
addr16
cmp
push
jns
mov
into
test
mov
repnz
imul
pop
mov
xchg
cmp
adc
aas
xor
ret
pop
repnz
sbb
pop
xchg
lds
mov
mov
mov
repnz
stos
dec
movsb
push
std
inc
inc
bound
jb
nop
orl
insb
sti
push
das
loope
rcll
jg
dec
ja
js
push
sub
jmp
jns
ds
ds
shl
sbb
lret
mov
clc
sub
shll
mov
xor
flds
mov
jno
test
fidivrl
sbb
or
jl
add
cmp
je
pop
dec
mov
ficomps
aas
bound
repz
push
repnz
adc
in
cmp
shlb
enter
cmp
pushf
fs
pop
movsl
lret
xor
mov
jb
inc
or
xchg
cmpsl
movsl
mov
push
mov
repz
js
sub
mov
inc
sub
out
mov
dec
xchg
mov
or
or
add
sub
inc
push
icebp
mov
and
addr16
jge
cmovno
jb
std
or
fdivs
pop
mov
das
jae
aad
pop
inc
or
jg
in
hlt
xchg
popf
jp
jo
inc
sahf
or
xchg
pop
jle
jnp
mov
and
mov
inc
mov
sub
cs
xor
jnp
and
push
addr16
out
pmulhuw
loop
cmc
xor
push
push
xchg
xor
mov
sub
and
inc
cld
fadd
pop
push
mov
in
adc
daa
or
cmp
test
rcrb
pop
sbb
sub
adc
dec
int
shr
ficoms
jmp
inc
rolb
ja
add
dec
es
dec
mov
mov
lods
imul
or
sub
flds
add
icebp
sub
xchg
popa
fstpl
pop
test
pusha
cmp
xor
outsl
gs
loope
ss
pmulhw
or
sbb
adc
inc
cmp
push
jno
bound
jnp
jl
sbb
outsb
aad
std
xor
sub
outsb
cltd
jge
push
pop
sti
add
adc
fiadds
xor
mov
sub
sbb
lahf
repz
loopne
ljmp
push
sahf
rcrb
adc
mov
xor
xchg
sahf
push
jo
pop
jmp
xchg
sbb
mov
fiadds
dec
pop
jl
lock
sub
mov
xor
inc
lds
aad
aaa
subb
scas
or
out
mov
dec
cmp
iret
outsb
push
pop
dec
add
aaa
or
inc
pop
lret
xchg
xor
adc
push
xchg
cld
sarl
shlb
inc
shl
popf
adc
sub
push
js
dec
fistpl
lret
imul
mov
idivl
movsl
leave
pop
push
out
xchg
dec
adc
int3
dec
cmpsb
fmull
aaa
inc
or
cmpb
adc
ror
gs
mov
jb
dec
mov
lahf
cmp
arpl
mov
sub
popa
mov
pop
jns
or
mov
jl
nop
dec
out
pop
fadds
insl
and
roll
mov
adc
cli
mov
stc
arpl
xor
xchg
jl
xor
fs
movsl
test
push
imul
fs
add
push
jb
iret
imul
mov
sub
movsl
fildll
push
or
scas
jns
pop
sbb
fldcw
popa
push
adc
inc
xchg
sbb
mov
pop
push
mov
and
in
ds
dec
push
sbb
dec
js
dec
nop
adc
mov
insb
imul
or
in
shr
aaa
or
lret
loop
jbe
loope
outsb
xchg
jg
jmp
pushf
repz
inc
dec
lods
cmp
outsl
test
mov
ja
jae
sbb
pop
mov
xchg
jp
inc
pop
inc
test
lock
lret
orl
mov
mov
pop
cltd
or
test
dec
xor
stos
adc
test
imul
mov
dec
rolb
add
or
add
clc
pusha
lahf
xor
mov
movsl
in
xchg
push
jmp
rcll
cmovp
insb
cmp
cmp
sub
mov
lds
xlat
jg
dec
and
jb
es
sub
int3
and
jbe
cmpsb
or
pop
test
out
jnp
cltd
or
inc
xor
popa
dec
das
cwtl
add
or
daa
outsl
out
paddusb
test
mov
ficoml
dec
lods
jne
daa
pop
xrelease
push
popf
fcomi
movups
stos
jle
cltd
addr16
enter
xchg
fstl
pop
mov
test
ljmp
cld
int
jge
jge
outsb
pop
popa
fucom
sub
push
call
roll
lods
out
mov
aad
dec
rorb
add
leave
aad
iret
mov
mov
push
or
add
jno
sub
push
and
lods
outsl
sbb
lea
rcr
ja
xor
lret
adc
push
mov
ds
jle
in
and
dec
mov
aad
push
inc
test
out
sub
sti
scas
lcall
rcrl
fucomi
sbbb
mov
push
testl
je
lds
sub
jl
mov
xchg
mov
popa
mov
cmc
lret
push
negb
aam
jmp
sbb
test
xchg
adc
jl
inc
nop
pop
push
cwtl
push
repnz
push
mov
sub
or
inc
cmp
mov
or
rcrl
movsb
adc
cmpsb
sub
stos
mov
cmpl
aad
test
xor
hlt
or
pop
push
cmp
sti
inc
aam
mov
inc
xchg
mov
negl
adcl
loop
loopne
clc
ret
dec
rcr
push
loop
cwtl
ja
sarl
or
ret
cmp
insl
data16
cmp
test
cmc
add
adcl
mov
jle
and
xchg
gs
lods
jecxz
lock
xchg
out
and
pusha
push
testl
push
mov
sub
std
dec
and
test
out
mov
adc
loope
arpl
data16
cltd
ret
in
iret
pop
pop
adc
and
sbb
adc
sub
out
push
adc
add
cmp
lret
dec
cwtl
pop
xchg
in
jl
inc
push
sbb
mov
jnp
push
cltd
mov
cltd
arpl
mov
push
rol
jmp
push
and
xor
int
insl
rol
out
mov
bound
and
out
pop
pop
xor
jno
bnd
lret
test
ss
push
add
pop
inc
fnstenv
lods
push
cmpsl
std
add
pusha
xor
in
pop
movsb
mov
push
imul
sbb
imul
sbb
test
into
xchg
lea
in
je
mov
jae
sti
lret
adc
pop
mov
lods
or
push
in
loopne
jnp
jmp
aaa
push
push
cwtl
cmp
clc
dec
repz
mov
cwtl
out
sub
xchg
and
jae
jbe
push
dec
jnp
daa
rcrb
std
pop
das
pushf
shll
xor
hlt
cmp
pusha
mov
pop
test
add
pop
cmp
inc
imul
insl
aas
cmp
lock
mov
imul
addr16
mov
mov
dec
sub
dec
insl
idivb
popf
xor
jge
ljmp
in
out
in
fnstenv
lcall
mov
push
and
jecxz
cmp
mov
and
lcall
inc
stos
push
scas
pop
sbb
pop
and
ret
lock
mov
cmp
shlb
pop
cmp
cli
shlb
std
sub
adc
out
psubsw
repz
push
jecxz
cwtl
fildll
sub
mov
in
sahf
push
and
shl
mov
je
mov
xchg
xchg
push
xchg
inc
or
imul
push
inc
jmp
insl
mov
test
and
push
fwait
cmp
dec
jecxz
sub
ret
test
xor
stos
mov
inc
push
clc
mov
cli
clc
lods
lcall
push
loopne
idivl
ljmp
push
int
jno
sarb
lahf
add
sbb
mov
xchg
push
call
sub
aam
aaa
cmp
push
ljmp
mov
and
xchg
aam
jle
push
imul
push
jo
ret
test
shr
lea
dec
xchg
cmp
mov
xchg
jae
xor
les
mov
mov
mov
cmp
dec
push
sub
ret
stos
mov
in
mov
xor
cmp
movsl
jecxz
mov
loope
pop
pop
aam
sbb
incb
cmpsl
pop
sbb
popa
jecxz
dec
fildl
popf
dec
xor
mov
mov
outsl
cltd
lock
or
push
pop
clc
sti
inc
cmp
xlat
inc
jecxz
test
jae
mov
inc
mov
lahf
inc
jecxz
mov
nop
inc
sub
add
mov
cmp
int
lods
mov
idiv
in
fildl
jl
pushf
aaa
daa
jo
adc
bound
mov
add
cmp
movsb
jo
out
rcll
out
out
movsb
divb
adcl
and
mov
scas
out
xor
sbb
jmp
hlt
aad
pop
push
xchg
inc
in
xor
repnz
sarb
sub
cmpsl
mov
out
inc
shrl
mov
dec
roll
push
pop
mov
les
aam
mov
mov
xchg
in
imul
inc
out
push
ljmp
pop
sub
dec
inc
pusha
bound
dec
push
sarl
jno
pop
loop
ret
sub
pop
mov
sub
sbb
add
lods
dec
cmp
pop
lds
mov
mov
pop
dec
stc
xchg
jle
movsl
in
movsl
add
push
lahf
xchg
xchg
sbb
test
int3
std
js
fistps
mov
jbe
in
out
jge
sbb
mov
pusha
in
pop
inc
jne
ret
sar
jnp
roll
and
push
repz
sub
dec
pushf
push
daa
sbb
add
addl
ja
mov
cltd
outsb
mov
cltd
xor
inc
xchg
out
jb
cmp
push
sahf
out
sub
adc
faddl
sti
fwait
stos
sti
int3
push
pop
bound
sbb
ja
mov
push
cmp
mov
cmp
xor
clc
push
push
jno
in
and
movsb
mov
and
fxtract
mov
inc
icebp
fs
leave
push
into
sub
sbb
icebp
imul
mov
faddl
dec
mov
mov
mov
inc
in
imul
loope
ja
or
test
stc
or
mov
je
xchg
lcall
aaa
imul
jne
cmp
flds
adc
inc
sub
mov
xor
pop
mov
mov
push
je
cmc
loope
fsts
jnp
outsl
sub
sub
lds
xchg
jp
jae
or
mov
pop
int3
xchg
add
mov
scas
js
test
jmp
gs
jb
and
repz
cmp
xor
movsl
push
aas
jg
out
movb
rcll
adc
sahf
out
lcall
pop
outsl
dec
and
mov
lcall
out
jns
pop
push
xor
call
xor
mov
sub
push
mov
push
pop
fisttpll
add
pop
ficompl
iret
xchg
dec
xchg
lret
ret
aas
jecxz
sub
sbb
icebp
xchg
sub
mov
loop
lcall
jge
sub
xor
dec
xchg
dec
jae
rcr
mov
xor
mov
ja
lahf
test
test
scas
cmp
pop
pop
rcrl
push
imul
lret
int
jae
repz
mov
aaa
or
das
bound
or
xchg
repz
gs
iret
addr16
mov
xor
push
sub
dec
ljmp
daa
aam
pusha
mov
adcb
inc
push
jne
xchg
xchg
push
jno
nop
mov
les
mov
sbb
cld
inc
or
imul
outsl
xchg
jne
sub
and
sub
mov
bound
sbb
xchg
test
push
insl
nop
mov
or
aam
mov
js
dec
inc
mov
je
push
mov
inc
test
or
mov
dec
inc
and
mov
push
ja
add
xor
sbb
movl
fxch
cld
outsl
mov
imul
fwait
out
loope
shll
out
ljmp
mov
mov
mov
jb
daa
pop
dec
jb
popa
arpl
imul
loope
aaa
push
test
test
sub
in
pop
out
test
sti
mov
test
ret
leave
mov
inc
lea
into
pushf
xchg
rcrl
ffree
sbb
mov
mov
jbe
lods
inc
and
pop
outsl
mov
in
add
pop
movsb
xlat
push
repz
rcrb
mov
loop
pop
mov
xor
inc
push
orb
xchg
lods
shrb
daa
aad
mov
imul
in
mov
jb
outsb
pop
push
or
pusha
pop
sub
loop
add
js
jns
add
jb
xor
add
mov
std
daa
sbb
daa
sub
cmp
sbb
out
roll
hlt
pmulhuw
sub
lahf
jge
jae
sti
add
andb
mov
leave
dec
lret
lcall
data16
push
cli
pop
in
adc
cmp
mov
insb
lret
push
lods
clc
xchg
dec
pop
mov
adcb
add
imul
mov
inc
ljmp
and
daa
and
mov
dec
xor
adc
loope
mov
sahf
jbe
mov
subl
lods
push
out
xchg
incb
sbb
addr16
cmp
push
sti
idivl
xchg
fisttpll
adc
enter
scas
outsb
add
jno
fs
lret
ja
cli
cltd
out
mov
fldl
jno
loopne
or
popa
inc
daa
xchg
add
and
int
les
push
cmp
cwtl
outsl
cmp
data16
adc
dec
inc
xor
sbb
pushf
addl
push
test
xor
push
push
add
push
dec
adc
clc
or
mov
mov
pop
sub
sbb
sub
in
icebp
lods
jl
shll
mov
fldt
mov
enter
push
scas
and
sub
lret
pop
push
cmp
fwait
cmpsb
lds
add
mov
dec
es
mov
jg
aam
scas
inc
ja
cmpsl
mov
jb
mov
pushf
arpl
nop
dec
jne
pop
jmp
add
mov
in
adc
lahf
mov
pusha
call
push
testb
std
cmp
push
ljmp
sub
push
dec
adc
fcoml
mov
or
ja
xchg
lds
and
mov
add
pop
add
js
leave
imul
mov
lcall
ror
or
xchg
insl
lret
mov
xorps
mov
out
iret
pop
mov
jmp
jmp
nop
call
adc
mov
in
sti
xchg
pop
bound
hlt
pop
divb
popa
push
sbb
loope
bound
roll
dec
bound
adc
push
sbb
mov
xchg
ds
and
sbb
mov
add
push
int3
movsl
dec
cmp
sub
dec
xchg
jle
xchg
fisubl
in
je
dec
gs
dec
and
sahf
pop
and
iret
faddl
andb
dec
iret
jnp
pusha
into
mov
jb
inc
rorl
xchg
rcr
aaa
sub
iret
gs
and
jns
aad
aaa
mov
popf
out
pop
popf
sti
xchg
push
insb
or
fs
cmp
cld
or
pop
in
sbb
fcmovu
push
in
cmpsl
js
pusha
adc
loopne
icebp
xchg
enter
jmp
ds
xor
cli
inc
jl
xchg
stos
popa
cmp
or
cmpsb
mov
mov
dec
pop
rclb
pop
mov
dec
xor
dec
pop
push
out
movsl
add
mov
xchg
daa
inc
cltd
or
aad
jg
xchg
sub
imul
call
inc
rcll
xlat
lock
mov
dec
sbb
stos
sub
gs
ljmp
in
xchg
jno
cmp
test
mov
ds
add
stc
mov
sub
lods
das
push
xor
cmp
or
jle
xor
xor
lret
das
sbb
push
and
nop
xchg
sub
xor
inc
or
pop
mov
cmpsl
sbb
jne
mov
rcr
xor
or
or
fistpl
dec
xor
jle
es
stos
pop
pop
movsl
xor
addb
xor
cli
mov
mov
add
xchg
mov
cmp
pushf
pop
ret
and
loopne
je
sub
dec
loop
loop
lds
fsubrl
dec
pop
dec
inc
pushf
icebp
mov
mov
xchg
std
sbb
mov
int3
and
xor
out
pop
mov
pop
xor
lret
leave
mov
add
scas
xchg
push
push
cmp
ds
xchg
mov
inc
aad
stc
outsb
cmpb
roll
jg
imul
js
pop
lea
adc
add
sti
aaa
lock
jp
jl
addl
and
or
sub
mov
sub
push
repnz
jg
cmpsb
inc
repnz
loope
scas
fstl
push
or
cmp
adc
mov
mov
cmpsb
push
lods
push
inc
mov
or
lret
addr16
and
pop
test
das
loopne
ss
sbb
add
mov
cmp
mov
add
xchg
jns
pop
ret
rcll
mov
sbbl
cs
test
add
jne
dec
adc
or
aaa
movsl
hlt
xor
jnp
sbb
es
aas
adc
fwait
push
filds
adc
push
aaa
mov
mov
pop
neg
cmpsl
insl
fldenv
sub
and
rcll
ja
jg
add
sbb
scas
jge
pop
push
test
mov
dec
jl
adc
or
push
dec
sbb
cmp
daa
push
pop
xlat
push
or
imulb
mov
bound
dec
imul
into
outsb
xchg
cltd
andb
addb
sbb
jecxz
fidivl
imul
or
xchg
pop
and
out
sub
outsb
cmpsb
mov
lret
adcl
mov
adc
mov
xchg
pop
fisttps
aaa
loop
inc
cmc
xor
mov
mov
add
push
xorb
es
push
rcrb
push
rcl
movsb
enter
mov
pop
movsb
xor
pop
jae
pop
enter
lea
out
fwait
imul
cmp
sbb
mov
push
pop
inc
fs
sbb
test
loopne
fs
pushl
push
lret
ljmp
pop
adc
inc
jmp
rcl
add
ss
jmp
insb
push
sar
test
out
jl
scas
aad
pop
mov
fstl
jp
push
or
in
mov
xchg
fmuls
mov
jbe
pop
sub
cwtl
rcrl
imul
mov
xchg
fstps
jae
fldenv
jp
pop
dec
aad
in
push
daa
out
mov
add
adc
mov
adc
and
push
fwait
gs
inc
cmpsb
fsubl
sub
jne
mov
push
stos
ret
fisubrs
jb
cmp
lds
mov
add
dec
mov
mov
lods
imul
je
pop
xor
je
sub
push
xchg
mov
mov
test
cmp
jnp
cmpsb
dec
pop
add
push
or
adc
ret
push
add
and
ret
clc
add
fs
xchg
mov
mov
mov
sub
jg
sub
popa
and
push
cmpsb
xchg
shl
xor
rolb
addr16
jmp
push
sub
insl
fisttpll
insl
outsb
cs
jmp
inc
outsl
xor
imul
xchg
sarl
lahf
cmp
pop
aas
mov
pop
es
pop
inc
cmpsb
fdivs
aad
lods
mov
fisttpl
stc
pop
clc
in
mov
jg
movq
gs
fucomip
inc
dec
sbb
aad
call
lods
mov
and
mov
sbbb
inc
and
loope
addb
scas
ljmp
lods
xchg
adc
orb
imul
jle
bound
imul
dec
call
cmp
arpl
cld
addr16
push
xchg
pop
data16
mov
outsb
lahf
push
rorl
push
in
cld
inc
mov
mov
pop
jne
push
bound
sbb
les
lods
cmp
scas
xlat
xor
lock
rorb
stos
add
push
and
call
push
iret
inc
and
dec
dec
pop
xor
mov
jg
into
mov
jne
into
movsl
or
add
adc
mov
bound
jge
jo
sbb
mov
mov
sbb
mov
jnp
stc
pop
testb
fs
jbe
adc
cwtl
xchg
add
test
sbb
add
fcoms
ret
adc
add
mov
and
test
popf
mov
mov
imulb
mov
and
mov
push
cmp
add
and
jg
xchg
mov
cmpsl
add
shll
add
test
mov
shlb
cwtl
jl
ja
inc
mov
loop
adc
jp
repnz
jmp
repz
or
push
push
test
pop
int3
iret
xchg
jl
cmc
sub
popa
dec
mov
fnstcw
jmp
cmp
jbe
push
shll
xor
mov
mov
ds
movsl
mov
lods
and
mov
sub
xor
fisubs
add
inc
lea
xlat
push
ds
incb
mov
jle
roll
jecxz
mov
jle
movsb
sub
negl
test
cltd
inc
in
xchg
mov
aam
sbb
andb
pushf
popf
ret
mov
jne
pop
loopne
inc
add
add
fcmovbe
pop
repnz
and
inc
lahf
mov
ljmp
sbbb
mov
pushf
pop
cwtl
test
xchg
lret
mov
add
jo
outsb
xchg
cld
sub
adc
inc
inc
push
xchg
cltd
inc
mov
mov
enter
es
shrl
mov
int
sbb
ret
pop
faddl
lea
jbe
xor
or
cwtl
pop
sbb
push
bnd
jg
add
sub
adc
ja
push
cmp
mov
sbb
dec
or
and
sub
sbb
sub
fcom
rcrb
mov
pop
les
lods
adc
int
mov
add
mov
scas
sub
dec
xor
lods
pop
arpl
cmp
mov
mov
ret
out
rorb
add
lea
loope
insb
mov
mov
out
lea
xchg
mov
sub
pavgb
mov
out
cs
jg
jmp
je
lods
rol
cmp
lea
loopne
inc
mov
popf
mov
fs
xor
push
xor
loop
xor
sar
cld
mov
stc
outsl
and
pop
and
int3
leave
pop
iret
cmc
or
xchg
adc
fcom
jbe
and
sbb
loop
lods
mov
jo
mov
cmp
aad
jb
mov
fnstsw
jmp
cmp
shlb
pusha
inc
test
ljmp
sub
bnd
cmp
arpl
push
lret
sti
adc
xor
mov
notb
adc
jb
jns
test
insl
repz
mov
aas
data16
fistps
neg
pop
push
cmp
lods
jge
or
dec
dec
push
mov
xor
pop
out
inc
mov
sbb
out
mov
mov
sub
and
mulb
loope
loopne
fiadds
or
out
and
lcall
jmp
ljmp
dec
addr16
xchg
sbb
cld
cmp
loop
pop
shll
pop
xchg
xchg
sarb
xor
sbb
iret
sub
xor
jae
test
add
in
lret
jmp
push
xor
fisttpll
dec
xor
adc
movsb
mov
insb
mov
pusha
cmp
nop
jb
jmp
hlt
mov
out
sbb
scas
push
test
mov
loopne
ds
lock
call
fldcw
test
inc
das
xor
pop
and
lcall
and
pop
arpl
jl
in
pop
add
and
ljmp
sbb
clc
xor
push
mov
xchg
mov
push
pop
repz
scas
inc
xor
inc
mov
lods
xchg
test
loop
mov
mov
and
dec
das
inc
or
sahf
pop
add
lods
xchg
rcrb
pushf
outsl
pusha
xchg
int3
rcll
mov
cmpb
aam
sbbb
pop
lock
or
adc
hlt
add
or
mov
mov
fdivs
dec
mov
fsubs
inc
adc
mov
mov
shrl
xor
sbbl
les
and
pop
in
mov
jns
xchg
adc
sub
ds
jmp
pop
pusha
xor
push
shlb
sbb
xchg
das
xchg
or
mov
testl
js
arpl
and
js
bound
lock
orb
xchg
enter
xchg
lcall
pop
push
lods
dec
inc
in
mov
sbb
hlt
inc
addr16
lret
popa
fucomp
add
loop
dec
sub
orb
ja
fs
sahf
jecxz
notb
sbb
mov
nop
or
dec
movsb
xchg
popa
and
bound
xchg
cmp
push
jmp
jnp
adc
sub
iret
cli
mov
cmp
ret
adc
push
aas
mov
repnz
lea
mov
insl
scas
lods
sub
or
xchg
cli
sub
sub
loop
nop
fwait
xor
push
dec
stos
add
call
stos
inc
cmp
pop
cmp
adc
sub
fsubs
cmp
data16
lds
dec
mov
shrl
mov
adc
arpl
popa
push
sbb
inc
sbb
mov
xchg
add
jg
ret
aas
daa
xchg
xchg
enter
xor
lods
add
jp
pop
clc
hlt
or
jmp
or
push
jbe
sbb
sbb
out
mov
sub
cmpsb
ds
cld
fsubl
dec
sahf
xchg
test
and
rcll
stc
pop
fdivrl
push
xchg
mov
outsb
lds
nop
xchg
xchg
adc
push
test
imul
mov
cmp
fucomi
inc
mov
pop
pop
and
call
xchg
mov
pop
dec
mov
rcll
adc
inc
dec
mov
dec
jle
xchg
pop
push
outsb
dec
xor
sahf
push
mov
sbb
sbb
or
ja
clc
fdivrl
loopne
sbb
cmp
les
sbb
ret
pop
pop
std
imull
inc
ret
fldcw
jae
mul
adc
arpl
adc
js
aaa
lret
out
push
cmpsb
int
fucomp
mov
push
es
scas
push
inc
mov
test
repz
inc
sti
or
and
mov
push
shl
adc
clc
mov
cmp
lret
xchg
xor
test
mov
mov
xchg
divb
sbb
dec
out
outsb
xor
pop
inc
xchg
or
push
push
fisubs
ret
add
int3
fnsave
stc
pop
aas
jle
add
imull
jg
mov
fbstp
dec
mov
es
repz
lds
sbb
adc
mov
lods
xor
repz
iret
inc
jns
pop
cmp
sbb
add
xchg
loop
orb
add
sub
dec
shr
cli
fst
sti
nop
adc
pop
call
mov
sti
lret
bound
movsl
add
mov
jle,pt
ret
lret
inc
int
lock
movsb
pusha
xchg
mov
jne
mov
pop
adc
clc
mov
pcmpgtb
pop
jmp
dec
adc
xchg
rclb
push
xor
add
rclb
mov
sub
cmp
inc
inc
add
stos
shl
mov
sbb
inc
adc
repz
push
inc
insl
jmp
add
xchg
dec
mov
popl
cmp
dec
or
mov
jb
add
xorl
jo
notb
cmp
cmp
pop
adc
dec
into
mov
ja
pop
sarl
inc
fistpll
xlat
sub
lea
dec
rsm
dec
fwait
mov
mov
into
xor
pop
cld
ja
lea
xor
xor
pop
push
jecxz
lahf
mov
mov
popa
xchg
movsl
sbb
fists
filds
lret
mov
mov
int3
out
xchg
xor
lds
shlb
mov
adc
jno
adc
mov
ds
clc
or
push
mov
push
shrl
or
mov
add
mov
push
push
mov
daa
adc
xchg
aad
fdivl
dec
leave
dec
xchg
icebp
pop
stos
ret
adc
call
out
dec
xchg
subb
dec
in
fdivs
outsl
lods
xor
mov
movl
add
jg
lret
ljmp
iret
stos
adc
mov
sub
mov
add
shll
sub
test
sub
dec
mov
rcrl
mov
mov
lods
cmp
dec
cmp
orl
mov
xlat
adc
ja
stc
jl
cmp
push
dec
dec
inc
add
adc
or
addr16
cli
mov
xchg
push
sub
jg
and
bound
or
stc
add
and
dec
fstpt
stos
inc
ljmp
mov
jns
xorl
xchg
pop
xchg
rcrl
cmp
and
fidivrl
adc
icebp
imull
fimuls
lods
imul
pusha
js
push
push
push
cmp
push
inc
outsb
lock
xchg
dec
add
popa
cmpsl
jne
xor
in
ds
insb
bound
pop
or
push
sub
xchg
cld
sbb
adc
out
push
mov
mov
leave
dec
mov
data16
add
insl
movsl
fstp
and
sbb
adc
push
aad
pop
push
cmp
mov
jmp
mov
jmp
mov
shrb
mov
mov
rclb
adc
aas
testb
stos
xchg
mov
xor
mov
inc
dec
mov
dec
jg
lret
sbb
dec
in
in
es
sti
pop
dec
push
cmp
stos
pop
dec
add
and
pop
test
popf
or
out
fisubrs
aam
loope
pop
pusha
fs
mov
push
mov
aam
mov
push
sbb
sub
cmp
lods
cs
stos
mov
pop
add
loop
mov
mov
inc
mov
in
and
jp
aad
rcrb
inc
fldt
adc
stos
and
add
mov
lock
popl
fcomp
popa
je
jne
push
test
mov
repnz
xchg
push
add
jl
pop
mov
dec
shl
aaa
xor
lock
xor
dec
mov
repz
mov
imul
mov
xor
cmp
dec
push
fdivrs
jo
test
ja
lret
incb
mov
lahf
sbb
lock
sbb
mov
push
xor
push
push
shrl
push
pop
mov
xchg
js
adc
or
xor
in
sbb
aad
or
push
jge
mov
lea
mov
aam
mov
and
bound
addr16
push
and
push
push
gs
fisubrl
sti
enter
inc
and
mov
mov
jp
rdtsc
test
xor
jae
sbb
shll
add
mov
push
repnz
cmp
xlat
sarl
inc
sti
insb
mov
mov
cmp
adc
fdivr
mov
in
xchg
je
stc
pop
pop
popa
notb
sub
rol
fstl
ljmp
pop
sahf
icebp
cmp
dec
dec
add
dec
mov
jecxz
add
js
xchg
pop
mov
sti
mov
push
fldenv
mov
add
jg
mov
rcrb
dec
in
and
imul
xchg
pop
int3
insb
movsb
aas
or
lcall
int
es
movsb
pop
in
fiadds
push
jbe
in
sbb
sub
lcall
sbb
or
mov
pop
pop
int
jl
into
fnsave
repz
fs
add
scas
dec
loopne
addr16
xchg
das
adc
inc
add
into
xor
inc
addr16
pop
or
std
fcomps
scas
js
iret
add
push
andl
outsb
jl
cli
lock
pop
jnp
cmp
mov
adcl
imul
aam
and
stos
sbb
loopne
adc
out
lds
pushf
lea
push
mov
fwait
je
lds
inc
rorl
dec
jae
fyl2xp1
push
or
inc
or
shrb
xchg
cmc
xlat
dec
aad
aad
add
mov
mov
cmp
pop
inc
stos
pop
lock
scas
fistpl
push
arpl
imul
fldt
data16
xchg
js
fsubr
cmp
xor
adc
lahf
jmp
in
int
pop
and
xchg
jmp
xor
inc
cmp
clc
cmpsl
mov
sub
mov
ss
mov
into
inc
xchg
xor
into
mov
das
push
xchg
cwtl
pop
cmc
leave
int
mov
call
scas
dec
gs
xor
pop
adc
cmpsb
repz
or
addb
sub
or
out
xchg
daa
pop
jg
hlt
sub
dec
ds
test
xor
xor
or
dec
loop
test
xor
add
fnstcw
mov
dec
test
xor
mov
cmp
popf
clc
lods
loop
push
adcb
push
cmp
adc
outsl
mov
enter
pop
push
jecxz
cvtdq2ps
and
std
mov
arpl
push
hlt
sbb
lcall
scas
enter
pushf
adc
das
daa
lahf
arpl
subl
xchg
repnz
in
add
repz
roll
add
mov
out
movsl
daa
xor
sbb
orb
jae
mov
push
scas
into
lret
inc
leave
loope
cs
jo
cmpsb
nop
test
push
mov
rorl
and
stos
popf
cmpsl
mov
insl
gs
lcall
jb
pop
rcrl
fs
pop
push
aad
mov
dec
add
ret
arpl
sarl
sbb
or
xchg
filds
pop
test
sbb
dec
enter
je
addr16
cmc
sbb
hlt
cmp
mov
mov
inc
jo
repz
cmp
fdivl
inc
lea
mov
mov
jo
xchg
push
sahf
or
mov
addr16
cmpsw
push
jb
mov
mov
add
repz
insl
push
sarl
nop
in
push
jb
sbb
jle
cmp
mov
fnstcw
stos
add
je
imul
hlt
push
in
pop
jnp
scas
jno
aas
dec
rclb
dec
popf
sbb
or
mov
xchg
sbb
hlt
stos
push
popf
testl
xor
and
xor
jne
xor
mov
pop
sub
lock
lds
fwait
aas
sub
xor
xor
sbb
outsb
sub
dec
pop
jge
mov
cs
int3
dec
jl
lds
aam
and
adc
jg
mov
into
mov
push
add
adc
push
mov
rcrb
mov
xor
je
jbe
adc
repz
sahf
inc
xchg
iret
scas
and
lret
icebp
push
sub
or
jnp
jbe
jge
into
incl
aaa
das
mov
cmp
mov
into
mov
stc
scas
cmpl
dec
mov
fdivs
sub
and
dec
jns
loop
sub
mov
icebp
mov
aam
and
scas
push
cmp
mov
pop
out
int3
sub
mov
nop
mov
icebp
add
ficoml
nop
cltd
ret
push
cmpsb
dec
lods
popf
or
mov
dec
out
sbb
in
mov
push
int
jns
fdivrp
and
xchg
pop
sbb
pop
adc
test
mov
and
xchg
dec
pop
mov
mov
hlt
inc
mov
loopne
inc
das
jne
jno
in
movsl
or
sbb
dec
xor
jnp
pop
mov
add
sub
sbb
push
lea
cmc
jno
loop
gs
ss
mov
inc
outsl
ss
jl
testb
and
je
cli
xor
insl
loope
add
lahf
cmp
mov
xchg
add
push
cmpb
pusha
insb
imulb
pop
call
or
dec
mov
addl
add
rol
pop
pop
adc
xchg
jno
call
inc
and
xlat
lret
in
fmuls
test
mov
jne
nop
icebp
push
data16
fidivrl
dec
xchg
test
pop
scas
mov
cmp
lods
test
nop
inc
dec
and
jmp
sub
jae
js
pop
stos
sbb
out
cmp
in
and
das
mov
jle
jno
cmp
mov
es
leave
sbbl
into
fdivrp
nop
inc
int
push
inc
stc
mov
test
cmpb
sti
adc
mov
xor
mov
pop
in
push
mov
pusha
les
lcall
insb
pop
iret
imul
mov
rorb
adc
mov
testb
pop
mov
and
iret
xchg
mov
insb
and
xlat
lods
iret
pop
rolb
mov
sbb
adc
jo
mov
mov
jns
stc
jno
xlat
lods
push
sub
mov
ja
push
lahf
out
in
adc
bound
addr16
adc
xchg
jb
push
mov
test
movsl
js
jo
mov
daa
movsl
jg
mov
cmp
ffreep
and
negl
add
jmp
out
dec
loopne
leave
adc
jl
addl
inc
addb
fcomps
mov
sbbl
xchg
push
pushf
xchg
dec
ljmp
int
in
and
cmp
scas
add
out
cmc
data16
cli
add
out
mul
insl
test
int
xor
mov
outsb
cli
fcmove
test
jle
inc
mov
jae
mov
leave
mov
lret
pushf
xlat
xchg
sub
pop
and
push
push
lods
sbbl
inc
int
inc
insb
push
mov
shlb
mov
pop
fldenv
mov
cmpsb
cmp
push
aas
popf
adc
mov
lds
push
push
outsb
cmp
sbb
mov
jmp
mov
push
sbb
push
imul
adc
sbb
inc
push
into
and
fs
or
pop
and
cmpsl
cmpsl
icebp
mov
mov
aam
sar
testl
cmpsb
xchg
inc
push
test
jns
mov
movsl
cmpsb
add
inc
jne
and
mov
add
pop
fwait
sbb
add
sub
fwait
mov
sbb
iret
xchg
fiadds
stos
imul
adc
rcrb
mov
adc
jno
mov
cmpsl
mov
jb
cs
cmpsb
xlat
repz
mov
out
mov
add
cmpsb
outsw
mov
jp
push
movsb
popf
out
pop
int3
in
dec
pop
cmpsl
mov
cmp
xlat
scas
cmp
jns
mov
mov
lcall
sub
fbstp
pop
jne
or
push
insl
dec
mov
mov
pop
popa
aas
and
ss
add
cmp
add
add
mov
sub
add
test
js
jg
xchg
inc
and
shr
add
scas
dec
jg
lcall
fldcw
mov
addr16
loop
pop
pusha
inc
aas
test
in
jmp
push
sbb
ret
mov
push
imul
das
sub
or
outsb
or
cmp
enter
data16
cs
bound
push
push
aas
jmp
jns
les
jge
fnstcw
push
xlat
jne
dec
pop
rcrl
sbb
fcomps
mov
fsts
gs
sbb
scas
or
or
scas
lods
jno
inc
xchg
inc
stc
stos
mov
xor
fstps
scas
jo
loop
cltd
adc
cld
lods
js
add
push
mov
aam
rorb
mov
xchg
mov
negb
cmp
sbb
jle
shl
add
jbe
mov
xor
not
xchg
jns
cwtl
inc
pop
adc
mov
push
dec
test
repnz
mov
mov
cmp
lret
idivl
jnp
mov
movsl
fsubrl
xor
scas
enter
std
shrb
xchg
and
dec
mov
arpl
inc
mov
mov
and
cmpsl
mov
mov
mov
or
adc
mov
xchg
shlb
add
push
js
test
loopne
inc
cmp
int
call
in
int3
inc
adc
jecxz
sbbb
mov
lea
aas
mov
dec
sub
fcompp
in
lret
adc
sbb
lcall
cmp
cld
mov
imul
fsub
sarl
fsubl
imul
daa
cmp
dec
dec
xchg
mov
dec
fcomps
fsts
lods
fidivrl
dec
mov
out
mov
daa
fs
adc
jns
xchg
test
dec
into
mov
sub
das
pop
test
jne
aas
jl
adc
or
call
dec
dec
movl
and
movsl
dec
push
dec
push
add
dec
xor
sub
fwait
mov
sbb
push
movsl
dec
jle
mov
test
inc
jbe
cmp
xor
in
cltd
lcall
in
ljmp
adc
push
jp
mov
aaa
mov
sti
jmp
cmp
insb
sub
mov
lret
jecxz
movsl
add
jno
lahf
mov
fstpt
aaa
repnz
lods
push
mov
and
ficompl
test
rcrb
inc
push
lahf
lods
insl
subl
hlt
dec
cltd
in
dec
jae
jae
cwtl
or
xchg
or
call
cmpsl
inc
push
adc
enter
and
mov
cmp
push
sub
jbe
add
jb
xchg
cmp
jle
pop
cmp
push
pop
test
jne
pusha
xchg
scas
pop
or
and
xor
aad
testl
adc
shll
inc
gs
xor
insb
xorb
test
pop
xor
jae
push
mov
and
aad
jae
test
xor
call
repnz
add
and
inc
jmp
cmp
or
orb
clc
iret
in
jae
aas
cmc
int
pop
mov
add
leave
cltd
negl
repnz
xor
xchg
mov
sbb
lcall
push
mov
js
dec
shll
fidivl
pushw
ss
adc
jl
fstl
hlt
and
xor
mov
or
jmp
das
xlat
mov
out
rolb
cld
shr
inc
add
divl
icebp
aam
lock
shll
movsb
aad
jbe
outsb
xchg
cmp
movsl
ljmp
adc
scas
sbbl
shrb
stos
push
sbb
lock
je
rclb
push
or
and
out
sbb
sti
and
and
push
xor
ret
hlt
jecxz
and
das
xchg
push
jecxz
mov
sub
jne
mov
inc
in
dec
dec
xchg
stc
vandpd
fldcw
cli
add
pop
or
rol
faddl
jl
mov
inc
shlb
cmc
aas
inc
setno
inc
cltd
pop
mov
mov
add
rcr
and
movsl
in
xor
push
clc
aas
cli
popf
outsl
imul
and
push
mov
ja
lret
jno
addr16
lock
add
es
int
test
push
jmp
ffree
imul
pushf
pop
inc
dec
aad
cmp
dec
insl
jns
push
int3
push
out
lods
mov
lcall
pop
fnsave
add
jae
dec
mov
jo
inc
clc
pop
enter
mov
cwtl
xor
imul
inc
in
mov
cli
pop
add
sub
leave
pushf
js
inc
adc
push
and
ljmp
sbb
dec
or
dec
insb
scas
xor
add
mov
insl
out
xor
into
or
ljmp
unpckhps
jge
repnz
mov
mov
cmc
lds
add
add
fs
popa
adc
stos
push
das
les
repnz
out
cmp
mov
and
filds
inc
cmpsl
fnstcw
xchg
xchg
xchg
fldcw
dec
lods
icebp
pop
and
and
arpl
sbb
ds
push
stos
movl
mov
mov
mov
xchg
jbe
sub
push
jmp
outsl
test
sub
push
loope
mov
cmp
fwait
bound
jle
movsb
testl
lret
imul
push
jae
addr16
into
mov
jmp
cmp
clc
cmp
adc
add
or
sbbb
mov
out
sub
push
inc
bound
mov
xorl
push
scas
jecxz
std
and
ljmp
inc
movsl
in
mov
int3
fs
ja
sub
cwtl
popf
lret
mov
mov
xor
xchg
mov
cmpsb
or
xchg
xor
mov
push
stos
cmp
or
test
and
std
xor
repz
cmpsl
lods
inc
stos
in
mov
xor
insl
jae
cmp
out
aas
jns
es
and
int3
mov
pop
and
xchg
sub
pop
aas
es
out
adc
in
sub
in
mov
mov
ret
ljmp
data16
call
fwait
int3
stos
or
aad
into
je
push
xlat
insl
pop
mov
sbb
mov
idivb
outsb
mov
mov
addr16
xor
cmp
push
out
ljmp
loopne
dec
xchg
inc
cmpl
jo
aas
pop
out
out
clc
bound
and
xor
and
add
shl
dec
cmpb
and
in
pop
jns
mov
jg
aam
call
ljmp
push
rcl
xchg
jge
call
inc
inc
jecxz
xchg
push
cli
scas
push
testl
xor
inc
sub
xchg
int3
dec
bound
jle
xchg
bound
jo
and
jge
push
mov
das
jno
loop
pusha
mov
inc
rclb
cmc
rcrl
mov
mov
loop
test
mov
aaa
iret
push
mov
xorl
mov
lock
fucomip
lret
ds
push
mov
xor
insl
cld
inc
ret
push
fldcw
jmp
lcall
in
adc
xorl
sub
cmp
test
in
outsb
repz
mov
outsl
daa
shlb
pop
addr16
xor
test
lock
lret
faddl
adc
and
mov
iret
or
add
mov
pop
flds
into
int3
cmp
fs
mov
loopne
or
lods
aam
push
bswap
sbb
imul
sahf
movsl
sbb
pushf
jb
stc
or
xor
push
inc
jae
jbe
jle
into
je
mov
pop
aaa
dec
mov
ds
in
in
loopne
sbb
ret
pushf
ret
mov
sub
push
fdiv
rolb
out
ljmp
aas
test
leave
iret
leave
clc
clc
pop
in
push
fucom
sbb
out
pop
lret
xchg
sub
sub
cld
xchg
leave
gs
cs
xchg
jmp
push
pusha
mov
movsl
sti
fsts
es
pop
xor
xchg
or
imul
mov
xchg
xchg
xchg
inc
lock
inc
add
lret
push
cld
xchg
xor
call
dec
or
jl
jne
add
out
fistl
scas
or
mov
sarb
jmp
rolb
push
add
pop
rclb
cmp
sete
cmp
push
fwait
loope
jbe
pop
mov
xchg
pop
movsl
inc
xchg
mov
in
jle
pop
push
sbb
fdiv
sub
or
les
inc
daa
fldl
sub
push
pop
xchg
out
in
pop
pop
lds
iret
fsubr
pop
mov
push
mov
gs
push
sahf
mov
and
cli
lret
pop
out
mov
dec
sbb
jmp
adcb
pushf
cmp
loope
mov
jg
adc
pop
jo
sbb
lcall
push
outsb
loope
xor
push
loop
enter
mov
jp
push
and
cmpsl
push
sbb
js
push
sbb
dec
mov
dec
mov
loop
and
cmp
ret
sbb
leave
je
test
cld
mov
sbb
mov
jl
push
sub
xor
cmp
and
cli
das
ret
dec
cmpsb
dec
sub
leave
mov
cli
aas
push
xor
pop
pop
xchg
or
and
xchg
push
fs
movsl
daa
and
loope
pusha
je
push
icebp
mov
xchg
xchg
sbb
xor
adc
movsb
mov
ja
or
insl
dec
popa
test
cmp
fildl
xor
mov
lret
shl
xor
iret
clc
inc
cwtl
and
mov
mov
and
cmc
addr16
ljmp
inc
jmp
adc
xchg
dec
loope
sbb
test
mov
add
sub
xchg
jae
ja
xor
cld
xchg
cmpl
sarl
inc
cmc
mov
lock
imul
sbb
xchg
pop
push
push
sub
or
sahf
aam
out
and
loope
fwait
push
in
mov
rolb
mov
push
cmpb
cmp
and
loop
out
loope
cli
xchg
xchg
jl
inc
fldl
xchg
outsb
aas
push
or
call
sub
sub
add
movsl
fistl
push
subw
pushf
test
out
stc
mov
push
hlt
xchg
mov
ret
mov
mov
pop
mov
cmp
mov
fwait
hlt
stc
cwtl
push
leave
sub
xchg
push
xchg
stos
cmpsb
lahf
stos
or
push
add
cmpsl
push
xchg
stos
and
mov
xor
jnp
mov
cmp
inc
test
mov
xchg
bound
adc
stos
xlat
xchg
add
inc
push
or
lds
fsts
stos
cli
je
or
mov
fildll
cmpsl
shrb
add
rcll
mov
mov
rcrb
roll
or
mov
inc
fsubrl
bnd
sbbl
mov
xchg
fstpt
mull
imul
cwtl
push
jmp
add
or
mov
inc
fsts
mov
cli
popa
int3
daa
out
cwtl
in
xchg
push
cmp
out
mov
repz
mov
push
cmp
add
nop
add
ja
mov
or
pop
rol
cmc
pusha
sbb
dec
or
repz
mov
scas
in
loopne
pop
xor
jne
and
imul
andl
std
sub
push
pop
shr
test
sub
out
push
outsb
cmpsl
scas
movsl
ud2
pop
pop
repz
cmp
iret
xchg
mov
call
imul
addr16
dec
xchg
aaa
jae
cmp
pop
clc
jg
cmp
mov
aaa
mov
adc
scas
testl
bound
pop
jp
gs
outsb
or
mov
inc
stc
fcomip
mov
jb
sbb
pop
mov
in
sti
xor
mov
idivb
les
lret
popa
pop
out
fisttpl
push
cs
in
ljmp
pop
loope
sbb
mov
mov
hlt
jle
in
call
sbb
mov
ljmp
and
mov
inc
add
sti
cmpsl
xchg
arpl
dec
nop
dec
or
cmp
fists
bound
inc
cmp
vpsubb
popa
loope
xor
pop
aaa
push
lret
fadd
push
and
rorl
out
sub
dec
mulb
xor
push
jbe
pop
sub
popl
pop
xor
icebp
pop
rclb
adc
mov
inc
lods
fwait
ret
and
repz
sbb
aas
inc
mov
xlat
test
push
pop
scas
sahf
loop
test
mov
xchg
rcl
lcall
inc
nop
fcoms
push
rcrl
ss
adc
cmp
dec
and
xchg
icebp
dec
cmp
xchg
and
js
lds
add
ja
pusha
jecxz
mov
cld
cmpsb
push
in
in
or
dec
mov
iret
lret
jne
popf
call
lods
push
gs
pop
mov
fs
mov
pop
sub
adc
xchg
fdivs
in
sahf
cwtl
lret
xchg
mov
mov
jne
inc
inc
and
mov
mov
lock
andb
pop
leave
or
add
jae
test
sub
je
adc
aas
xchg
mov
mov
add
and
shll
test
pop
pusha
mov
dec
fisubrl
push
lret
cmp
add
pop
popa
push
push
scas
sbb
dec
cmp
lods
test
cltd
adc
call
ljmp
cmp
dec
imul
imul
mov
je
add
fcmovnb
mov
mov
push
aas
inc
cmc
fldcw
adc
sbb
mov
push
inc
push
andl
loopne
xchg
push
push
mov
pushf
roll
push
xchg
and
call
subl
int
or
mov
add
fldcw
xchg
push
out
clc
lret
xchg
sub
ffree
inc
cld
push
movsb
mov
test
mov
or
mov
sbb
pop
mov
sbb
cmpsb
movsl
cmpsl
rol
push
lret
pop
aad
xor
xor
in
cmp
jae
xchg
push
lods
xor
in
aas
sub
pop
adcb
rorl
mov
inc
loope
pop
mov
shr
psllw
jg
das
xor
push
setge
dec
cmp
xor
test
in
mov
jbe
daa
pop
sbb
sub
call
jl
shlb
call
test
shlb
pop
sahf
mov
fiaddl
add
test
fsubr
ret
and
push
lcall
sbb
sbb
out
cmc
mov
outsl
clc
aaa
clc
add
xchg
add
aam
fldl
ljmp
sub
inc
std
sbb
inc
int
divb
es
add
mov
sub
inc
je
pop
loopne
ss
pop
daa
xor
dec
shl
mov
adc
xchg
dec
test
ret
iret
mov
outsl
add
jnp
jl
sbb
cmpsb
adc
ds
lahf
add
test
cltd
sbb
pop
out
mov
mov
stos
sbb
aas
mov
ds
ljmp
add
in
xchg
and
jae
shll
ror
rorl
fs
stos
lock
jne
sub
lret
jge
mov
test
test
xchg
into
test
lods
cmc
scas
adc
sbb
test
test
les
aas
add
mov
fldl
in
outsb
rcrb
loopne
push
je
outsl
iret
jbe
gs
jmp
in
cmp
out
sbb
in
lds
xchg
fsubp
and
jo
outsb
cmc
scas
pusha
cs
dec
and
mov
push
cs
aaa
pop
into
data16
in
lods
mov
ja
in
movsl
repz
fwait
std
lahf
sbb
push
xor
and
push
lcall
or
add
pusha
lock
jbe
int3
js
sbb
nop
mov
cmpsb
push
lock
push
cmp
mov
icebp
mov
sbb
fsubrs
loope
pop
xchg
mov
mov
add
xchg
cmp
mov
pop
test
push
or
add
jl
jo
push
in
mov
lods
fwait
jl
push
mov
inc
or
leave
shll
push
cld
adc
or
jecxz
sarl
bound
push
jno
and
sbb
pop
push
adc
arpl
push
dec
mov
jl
and
popf
mov
jnp
stc
pop
sub
pop
add
repz
movsl
fldenv
pop
shlb
cmp
aam
fidivrl
mov
cmc
out
mov
mov
dec
stos
imul
inc
add
repnz
xchg
xchg
insb
and
jp
js
out
mov
jns
call
arpl
inc
loopne
xorl
add
push
jl
xor
fbstp
cmp
push
mov
jno
inc
cs
insl
xchg
mov
inc
les
inc
lds
xor
sub
dec
adc
pop
mov
imul
sbb
roll
pop
aas
lret
mov
nop
mov
out
sbb
mov
adc
repnz
dec
or
inc
in
push
inc
je
pop
inc
hlt
or
fcomps
dec
push
push
sub
sub
and
aaa
add
leave
sbb
or
hlt
scas
imul
iret
or
js,pt
push
iret
movsb
cwtl
int
addps
and
loopne
jl
cs
lret
lret
cmpl
pop
sub
test
dec
dec
popa
dec
mov
jno
add
push
leave
adc
xor
inc
dec
enter
imul
sbb
mov
aas
xchg
sub
clc
mov
lahf
cmp
and
and
repz
adc
popa
stc
les
cmpsl
fucom
int3
jmp
cmpsb
sub
dec
mov
dec
inc
test
cld
xor
adc
mov
inc
pushf
sub
lds
adc
imul
popf
add
jg
sbb
dec
loop
xor
loopne
stos
jno
dec
mulb
movb
out
hlt
add
mov
mov
jae
mov
loopne
dec
ret
imul
adc
mov
xor
icebp
or
rorb
sarl
sub
mov
inc
fsincos
lret
cld
add
sbb
jg
dec
sub
lods
cmp
xor
in
inc
scas
or
inc
inc
dec
shlb
inc
pop
les
mov
cmp
adc
mov
and
fstl
pop
out
insb
lea
adc
pusha
mov
push
mov
out
add
pusha
shl
cmp
mov
inc
mov
mov
insb
test
xor
mov
nop
mov
lcall
lcall
jle
cmpsl
cmpsl
xchg
jbe
and
adc
sahf
mov
mov
jnp
sbb
mov
jno
popa
push
cmp
mov
xchg
call
std
leave
push
rclb
repz
popa
shll
mov
or
cltd
fisubrs
ret
xor
push
pop
insl
ret
cmp
cli
addr16
fists
cmp
mov
orl
and
into
outsb
adc
out
addr16
jl
mov
xor
jne
xlat
lds
lock
sbb
fldenv
aam
xchg
les
arpl
out
out
push
adc
push
ldmxcsr
add
and
lcall
mov
pop
jp
add
cwtl
insb
sub
int3
lods
cmp
sbbw
nop
inc
dec
jmp
pop
sub
jo
loop
dec
adc
in
xor
jb
sub
add
jbe
lods
jo
pop
aad
pop
notl
inc
inc
into
je
sahf
mov
lahf
pop
push
xlat
adc
mov
dec
mov
xor
mov
mov
mov
rcrl
mov
ret
cmp
notb
xor
push
push
add
xchg
inc
lret
push
popa
cmp
fs
mov
call
fs
sbb
dec
cmpsb
push
xchg
lds
dec
lods
sub
sub
inc
push
lcall
pop
mov
in
push
movsl
int
repz
xchg
insb
adc
imul
mov
daa
mov
mov
clc
inc
mov
cmp
test
jmp
or
mov
adc
jge
push
xchg
test
add
jmp
xchg
ffree
les
in
xor
nop
pop
fdivrl
cltd
xchg
pop
dec
mov
lods
xchg
imul
pop
gs
es
adc
jg
test
mov
mov
out
and
outsl
adc
xorb
out
lock
and
loopne
fldt
xchg
mov
cltd
cwtl
pop
popa
jae
das
shr
mov
add
ds
push
mov
cmc
ja
cmp
clc
lcall
ja
mov
push
hlt
xchg
cwtl
popa
cmp
movsb
cmpl
int3
mov
scas
test
push
sbb
inc
mov
outsb
dec
hlt
xchg
loope
mov
test
sbb
mov
adc
sub
outsl
jne
pop
js
mov
xchg
push
lods
mov
cmp
xchg
sbb
js
jb
cmpsl
push
insl
fdivs
adc
mov
mov
jle
iret
jmp
xor
fnstenv
test
cmp
inc
mov
mov
in
lods
cltd
cwtl
xor
pop
xchg
cmp
daa
mov
imul
gs
sbb
xchg
push
adc
pop
or
adc
ret
sbb
cmp
ret
jmp
mov
push
xchg
call
ds
and
jmp
jge
jne
cmp
loop
ret
das
jle
scas
hlt
cmpsl
sarb
test
or
adc
test
fwait
sti
lock
pop
aad
sbb
call
or
xorb
cmp
or
adc
clc
cmp
pop
mov
push
inc
mov
out
or
mov
mov
hlt
jne
mov
iret
call
test
xchg
sbb
mov
sub
inc
popa
inc
or
pop
test
dec
stos
push
mov
adc
roll
push
jge
xor
lret
pop
mov
pop
cmp
sbb
and
sbb
addb
sahf
dec
mov
mov
mov
jp
test
fimull
dec
je
or
add
leave
ss
pop
dec
int3
pop
shl
pop
sbb
push
sti
jns
imul
lds
clc
push
xor
lahf
ficoms
test
mov
sub
or
mov
push
xchg
jmp
aad
or
sub
test
xchg
adc
sub
aam
xchg
add
aaa
test
or
mov
dec
mov
fistpll
fsubs
sub
enter
stos
lea
lret
jp
add
pop
cs
pop
jge
pop
in
insb
xor
cltd
fisubl
rcr
ret
mov
daa
repz
rolb
jnp
jb
inc
fs
sarl
mov
mov
dec
sub
je
into
sbb
popf
jp
aad
mov
sbb
std
imul
dec
lods
mov
outsb
mov
stc
and
in
mov
xor
and
xchg
je
hlt
dec
ficompl
je
jle
es
clc
or
gs
inc
mov
push
lret
pop
dec
push
roll
aas
mov
cmp
movsb
mov
dec
sub
cmc
mov
loop
jp
in
pop
sub
aad
mov
lret
clc
or
mov
cli
cs
out
sbb
in
fwait
mov
cli
xchg
mov
insl
rcl
movl
int3
ret
inc
add
aam
inc
cmp
pop
mov
outsl
jbe
test
xchg
cs
inc
cli
pop
pop
sbbl
xor
nop
jl
addr16
jnp
sub
incl
inc
xchg
jno
outsb
cmp
fiadds
hlt
stos
std
jg
or
cwtl
adc
movsl
and
test
hlt
cmc
mov
or
adc
movsl
pusha
push
enter
nop
jg
mov
movsb
or
mov
fldl
lock
movsl
jl
into
push
jle
mov
stos
das
or
mov
call
clc
test
add
mov
inc
pop
iret
jbe
mov
movsb
push
adc
shll
or
jecxz
and
ret
push
cmpsb
mov
cltd
mov
sbb
clc
push
imul
out
fisttps
mov
mov
gs
and
sub
dec
popf
push
xor
repz
push
mov
arpl
outsb
sbb
sub
xor
divl
sbb
leave
lds
test
ret
fadd
test
push
in
outsl
into
cmp
movsb
cmpsb
loope
mov
mov
test
dec
mov
movsl
add
jbe
enter
sti
inc
or
cmp
adc
mov
jg
dec
ret
add
cmp
mov
dec
mov
inc
cmp
mov
test
lahf
in
xchg
mov
shrl
dec
xchg
mov
add
clc
mov
mov
mov
imulb
or
cmp
jno
xchg
movsl
xchg
ret
xorb
add
pop
lea
shl
mov
fcomi
and
adc
cwtl
xor
xchg
testl
and
or
mov
mov
imul
stos
add
pop
cmp
insl
pop
pop
cmc
ljmp
les
pop
jmp
cwtd
adc
lds
test
dec
ret
clc
imul
inc
out
and
or
mov
loop
sti
je
pusha
es
or
cs
sub
je
popa
out
popa
push
fiadds
js
stos
aad
add
fisubl
inc
sub
xchg
int
jmp
daa
and
icebp
fwait
testb
mov
js
mov
in
xor
movsb
or
lods
pop
fnsave
xchg
mov
jp
insb
pop
cwtl
sub
push
imull
adc
dec
cmp
sub
mov
lret
mov
or
fwait
dec
sub
mov
insb
in
sub
fwait
outsb
mov
in
fs
fsts
sarb
out
sub
ret
in
fs
fisubrs
jmp
and
ds
xchg
sub
pop
jle
into
push
icebp
sub
cs
mov
mov
rorb
push
jns
push
or
dec
push
mov
push
cmp
or
cwtl
pop
inc
dec
push
mov
inc
rorl
lret
fdiv
movsb
add
xchg
xor
mov
mov
repnz
mov
stos
test
stc
roll
mov
add
inc
sub
inc
jmp
and
push
cmc
je
push
test
aad
adc
lea
out
push
pop
pop
lret
adc
xor
dec
xchg
jl
add
sub
lcall
fisubrl
loop
repnz
and
or
iret
mov
mov
js
dec
cli
repz
inc
cmp
in
inc
push
jg
inc
xchg
shrl
ss
xchg
or
inc
andb
inc
mov
mov
js
xchg
mov
pop
xchg
cld
adc
sub
pop
iret
lods
dec
inc
andl
push
adc
mov
xorl
mov
jg
movsl
xchg
sarb
push
fbstp
or
shl
stos
rcrl
cmp
xchg
dec
adc
fs
das
dec
inc
pushf
sub
sahf
cli
and
jle
mov
lret
cmpsl
adc
mov
inc
sbb
shlb
push
push
js
inc
hlt
pop
scas
adc
and
mov
jg
adc
iret
push
cs
ret
xchg
lahf
in
mov
lods
popf
movsb
std
cs
cmp
mov
jno
fs
test
repz
adcl
push
xor
cld
shll
lcall
mov
jo
xlat
test
inc
sub
scas
pop
loope
dec
jne
andl
ficoms
dec
test
and
jl
stos
dec
push
es
mov
fcomi
push
jmp
xor
add
adc
loopne
pop
jbe
lods
mov
out
dec
sbb
les
xorb
mov
sub
push
outsl
lahf
lods
fidivl
xchg
add
repz
push
adc
clc
rorb
jl,pt
jp
lock
mov
mov
jae
push
dec
inc
lahf
cmp
movsl
std
inc
nop
push
xor
and
mov
push
popf
adc
sbb
aas
test
and
shlb
daa
push
xchg
stos
inc
cwtl
inc
cmp
inc
pushf
mov
jle
ret
xor
into
xor
das
jbe
int3
sbb
and
js
outsb
jnp
push
out
psrlw
nop
js
inc
test
lds
dec
inc
mov
call
mov
data16
xchg
data16
dec
mov
xlat
test
xchg
pop
inc
enter
notb
xor
pop
xchg
add
jmp
nop
jle
push
lcall
jmp
ss
cld
rclb
inc
xcrypt-cfb
cmpsl
movsl
or
hlt
repz
jecxz
push
push
hlt
cmp
lahf
jecxz
or
mov
jns
fisttpl
jb
add
mov
icebp
xor
push
mov
sub
wrmsr
add
sub
lods
xor
mov
mov
outsb
xchg
mov
adc
lods
push
jmp
imul
adc
push
dec
test
sub
add
mov
sti
sub
lret
xchg
and
add
dec
out
mov
and
into
mov
add
fwait
xlat
pusha
cltd
outsl
mov
imul
inc
pop
repnz
pop
into
rcrb
mov
jno
fnstenv
mov
mov
inc
out
cwtl
cmp
pop
mov
in
fucomp
xor
out
cmovs
mov
orl
out
or
adc
push
loope
sub
fucomi
pop
imulb
push
lds
mov
jmp
ret
xor
test
out
adc
hlt
jne
imul
push
fcmovbe
sbb
jmp
pushf
sbb
add
add
mov
je
push
inc
outsl
dec
push
xchg
xchg
mov
and
jo
pushf
shlb
inc
sbb
or
mov
sub
out
push
outsb
nop
add
aad
jp,pn
dec
es
dec
adc
mov
xor
pop
cmp
ret
ds
xor
or
inc
or
cmp
sub
out
jmp
out
mov
test
jns
pop
push
push
xchg
in
scas
cli
sub
push
js
jge
mov
and
and
adc
sti
fwait
cmp
cli
adc
cmp
cmp
popa
xor
iret
stos
loopne
push
negl
pop
jo
adc
push
lds
or
icebp
mov
and
fwait
sub
mov
and
xor
imul
mov
mov
xor
xor
jno
xchg
cmp
cmpsl
push
add
dec
lahf
fwait
dec
inc
stc
lret
jecxz
sub
std
jo
sub
mov
pop
push
cmp
inc
xor
lcall
and
sbb
int
in
add
repnz
and
mov
ja
add
mov
jno
pop
add
data16
xor
xchg
sub
les
xchg
jnp
xchg
in
or
push
inc
cmp
lcall
push
push
xchg
rcl
xchg
call
shlb
add
lret
sbb
and
rclb
xchg
jbe
aaa
adc
add
xor
clc
fcmovu
pop
loop
sub
in
imul
sub
sbb
mov
sub
fildll
stos
mov
mov
mov
stos
decl
imul
mul
scas
pop
and
push
scas
sarl
orl
xchg
shll
sbb
jae
mov
pop
call
adc
cmp
in
addr16
sbb
andb
xchg
pop
scas
test
push
mov
es
add
add
mov
mov
setp
movsb
dec
cmp
or
sbb
shrl
sarb
add
and
xchg
cs
jecxz
or
push
jl
pushf
xor
sbb
push
outsb
ljmp
push
pushf
jge
add
out
fisubs
lods
sar
lds
pop
xor
and
push
sbb
sub
cli
mov
adc
stc
dec
cmp
mov
sbb
inc
pminsw
mov
loope
sub
lea
pop
lret
enter
std
sub
adc
outsl
pusha
xchg
insb
mov
ja
or
cltd
adc
xchg
fs
push
jecxz
das
push
pop
fs
inc
cmovae
xchg
int3
jnp
ljmp
stc
and
jnp
add
shll
mov
outsl
xchg
push
out
push
mov
mov
paddusw
inc
add
std
scas
mov
mov
jg
testl
rcl
fwait
loop
ja
inc
out
sbb
pop
xor
push
sbb
mov
mov
ret
loop
sbb
test
adc
mov
mov
cltd
leave
adc
xchg
inc
loope
xlat
mov
or
adc
pop
loopne
test
shrb
push
ficoms
enter
es
add
mov
add
push
mov
dec
sbb
cltd
push
out
sarl
ljmp
clc
pop
mov
lock
dec
xor
sbb
sarl
repz
and
imul
aad
in
jl
lret
xor
leave
push
fiadds
pop
sub
les
data16
ret
movsb
xor
orl
xchg
fsubs
rcr
pop
leave
nop
or
jo
pop
out
xchg
mov
iret
jb
mov
sub
xor
adc
mov
push
fdivr
push
pop
jb
lcall
mov
inc
xorb
es
scas
jecxz
repnz
mov
mov
call
mov
outsb
ds
test
test
mov
mov
fiadds
jge
shl
mov
sahf
out
push
mov
in
and
bound
lods
cmc
jge
and
lahf
ss
lcall
mov
shll
out
jg
leave
pop
mov
mov
rorl
mov
sbb
and
mov
xchg
pushf
cmp
ja
mov
ljmp
fsubrl
cmovg
add
es
xlat
in
mov
or
dec
ljmp
jb
push
in
dec
jle
test
repnz
scas
imul
lret
stc
sbb
mov
fdivl
push
insl
ljmp
mov
cwtl
popf
lcall
push
dec
jmp
imul
pushf
adc
int
data16
ja
xor
jp
xchg
sbb
dec
shll
pop
popa
scas
cwtl
push
jo
pusha
inc
jnp
mov
pop
and
ffreep
rorb
inc
mov
mov
xor
and
jae
sub
sub
mov
mov
enter
adc
mov
popa
les
push
xchg
inc
xchg
push
icebp
stos
pop
rorb
dec
repnz
imul
mov
sub
ss
and
add
lret
ds
mov
filds
fwait
mov
clc
jbe
stos
iret
repz
ret
out
sbb
add
fistpl
clc
xor
into
sahf
mov
mov
sub
pushf
lcall
mov
xlat
inc
jns
in
dec
xchg
mov
jns
and
in
pusha
cltd
popa
dec
hlt
test
and
testb
xchg
loope
shr
aam
test
pop
clc
xor
mov
andl
je
jbe
xchg
jp
imulb
imul
pusha
fistpll
fstpt
and
aas
cltd
rol
jb
shrl
outsb
add
push
in
addl
loope
or
cmc
loope
mov
test
mov
insl
cli
scas
movl
int3
push
mov
mov
jno
fwait
repz
test
dec
or
adcl
addr16
sub
xchg
xchg
xchg
or
push
test
push
incl
enter
negl
dec
inc
test
push
or
je
push
shlb
jne
inc
push
jp
cltd
adc
xor
and
or
jbe
ret
std
popa
xor
and
in
cmp
clc
cmp
daa
rcll
cmp
jae
out
sub
lods
shrl
and
call
jns
xchg
sub
leave
inc
cmp
aaa
cmp
ljmp
cmpl
call
mov
inc
leave
iret
and
mov
cmp
mov
in
sbb
ret
jecxz
mov
cwtl
cli
xchg
fidivrl
inc
mov
mov
fxch
and
or
pop
xchg
daa
dec
pop
xor
lods
data16
int
and
pop
incl
sbb
cli
test
push
adc
jb
cmpsl
cmpsb
test
hlt
sub
inc
dec
push
jnp
loop
clc
or
jno
add
and
ja
or
mov
lock
xorl
fistl
xor
ja
ja
sbb
iret
loop
adc
arpl
fs
xor
imul
and
cwtl
ret
cmpsb
lea
mov
fcoml
es
and
push
adc
cmpb
es
xchg
push
movsl
mov
movsl
cli
xor
daa
jns
cmc
or
cbtw
cmpsb
inc
popf
cmc
push
outsb
scas
fwait
mov
adc
or
xchg
jae
xchg
cmpsb
sbbb
pop
jmp
jmp
or
push
xchg
insb
xchg
movsb
in
inc
rorb
or
inc
mov
fiadds
push
je
xchg
rorb
adc
mov
mov
push
jo
add
jg
and
arpl
add
addr16
dec
jp
enter
add
aas
dec
or
outsb
and
ret
movsl
lods
loop
daa
mov
je
ja
in
sub
inc
lods
arpl
cwtl
push
fsubs
sub
push
inc
inc
push
repnz
nop
push
cmp
in
and
xchg
and
icebp
mov
sbb
xor
adc
and
lahf
cmp
inc
pop
cli
mov
incb
xor
nop
ja
les
adc
out
fimull
loope
or
push
imul
xchg
rclb
or
aas
outsl
std
ljmp
add
jo
int
push
std
addr16
cmp
sub
cmc
js
mov
outsb
jns
push
dec
mov
cmp
push
xchg
adcb
mov
xchg
mov
fstpl
addb
pusha
fisubrl
std
sub
or
sahf
ds
int
jae
dec
pop
roll
in
mov
mov
jbe
push
popf
fisttpll
push
push
xor
jne
scas
xchg
cmp
add
scas
mov
mov
pop
test
dec
loope
out
dec
mov
dec
xor
mov
or
das
sbb
pop
pop
enter
push
lods
fs
jecxz
pop
dec
ss
sub
mov
in
cli
out
inc
xor
xchg
xchg
lods
sbbb
rcrl
cmp
dec
adc
pop
push
fstl
out
icebp
in
mov
and
divl
popf
add
clc
sbb
and
iret
xchg
sti
in
mov
subb
ss
and
mov
popfw
inc
xlat
pop
les
lods
leave
shlb
or
sbb
mov
pop
inc
dec
pop
mov
xor
adc
xlat
int3
adc
cmp
pop
fmulp
mov
daa
jnp
mov
rcl
mov
jnp
into
ja
xor
mov
bound
xchg
xchg
dec
loope
insb
ljmp
adc
xor
popf
mov
das
sub
cmp
cli
adc
imul
mov
dec
out
pop
sbb
nop
push
jno
clc
loopne
inc
or
dec
icebp
cli
push
lock
movsb
xor
in
mov
shll
bnd
lods
loopne
xor
and
daa
ljmp
mov
fistps
ret
xor
ljmp
xchg
scas
push
loopne
arpl
in
ret
fisttps
gs
sbb
rclb
leave
mov
frstor
inc
xchg
gs
xchg
or
xchg
pop
cli
daa
ret
inc
mov
sti
sub
inc
xlat
xchg
and
push
dec
insb
jecxz
ficoms
mov
fstpl
mov
mov
ret
jg
xchg
test
psubq
cmpsl
sub
cmpsb
push
jo
inc
push
dec
int
js
xor
mov
hlt
movsl
std
mov
pop
cld
push
and
inc
int3
hlt
scas
imul
test
cmp
jns
lock
mov
fcompl
or
outsb
pop
ljmp
pusha
out
xchg
jmp
add
std
mov
leave
idivb
aam
cmpsb
inc
mov
push
mov
sub
mov
adc
dec
rcl
adc
ds
fs
dec
sbb
xor
cwtl
sbb
fiaddl
sub
xorl
addr16
add
jns
xor
mov
pushf
fists
out
nop
das
ja
add
outsl
lret
push
sbb
hlt
ja
mov
sbb
data16
pop
xchg
cwtl
sar
jmp
cmpsb
outsl
mov
push
xor
out
aam
jmp
jle
add
cmp
shld
push
fisubs
mov
cmp
xchg
fistps
adc
in
inc
ljmp
cmpsl
push
out
daa
sub
imul
and
divl
insb
jecxz
push
mov
jno
les
dec
test
fnsave
jno
xchg
sub
stc
pop
jb
test
cmp
xchg
pop
add
cmp
enter
pop
in
sub
cmpsl
sub
subb
cmc
jmp
mov
lods
mov
pop
fs
lods
push
int3
pop
or
lods
xor
sub
aad
push
cld
inc
leave
adc
cld
or
cmc
mov
xchg
xor
sbb
ljmp
jg
mov
je
lds
cmp
pop
stc
aam
add
and
dec
divl
push
xor
notb
xor
and
push
xchg
ror
outsb
pop
leave
rcr
push
push
mov
mov
orb
mov
ds
sub
xor
lahf
stos
and
fs
cld
outsb
xor
jl
and
push
mov
add
ja
jns
pop
rcrl
popa
or
sti
repz
jmp
nop
call
and
xor
aad
lret
adcb
roll
lds
push
hlt
sbb
lret
popf
jmp
or
mov
sarl
iret
sub
negl
or
scas
push
pusha
xor
outsl
fstpl
lock
lahf
or
and
cmc
ja
cmp
sbb
mov
pop
pop
mov
dec
add
divb
mov
inc
jb
xor
fnstsw
and
mov
out
xor
shl
cmp
xchg
adc
insl
mov
loopne
pop
out
dec
adc
cs
mov
sbb
iret
sarl
and
test
jae
push
mov
ror
add
movsl
scas
int3
bound
dec
and
and
or
adcl
sti
dec
sub
xor
hlt
dec
test
pop
mov
sbb
mov
clc
insb
pop
or
in
xor
iret
test
aad
inc
dec
pop
in
jns
mov
jo
jno
mov
xchg
aad
jbe
test
jae
add
cmpsb
testb
loope
stos
sub
add
pushl
cltd
rcrb
add
cmp
jg
mov
cld
fs
inc
pushf
pushf
fnstcw
xor
xchg
rcl
data16
roll
lods
mov
dec
pop
jp
rolb
lods
jge
xchg
dec
sub
jmp
xchg
mov
popa
leave
dec
aam
pop
mov
jae
push
jge
cmp
stos
push
lret
lods
fs
dec
mov
adc
cmc
xchg
adc
jbe
repz
mov
xchg
addr16
xchg
ss
fs
repz
cld
xor
lods
shlb
sbb
fldcw
xchg
js
cmpl
sarb
sub
cmp
cmp
shll
sub
popa
inc
dec
fldenv
adc
iret
fildll
push
lret
mov
jge
loop
or
movsl
test
incl
repnz
jno
xchg
test
mov
ljmp
lods
sti
push
ja
add
mov
adc
and
or
sub
orb
jne
in
nop
add
mov
sarl
lret
push
pop
dec
lods
insb
neg
icebp
bound
das
hlt
sub
sbb
push
not
test
stc
repnz
mov
sbb
lahf
mov
mov
xchg
aad
xor
lods
mov
inc
xor
or
mov
popf
pop
call
pop
cmc
jge
dec
sbb
in
hlt
in
cwtl
arpl
shl
jl
pop
xchg
inc
popa
pop
push
test
dec
aas
and
push
pop
sbb
out
imull
lock
mov
fidivs
aam
mov
int3
dec
inc
fucomip
ljmp
fistps
pusha
or
mov
cmp
sbb
or
clc
insb
mov
cmp
xor
xchg
ret
fnstsw
xor
out
pop
jns
sub
cmpsb
add
dec
out
xor
push
clc
repz
les
pop
std
ds
in
and
or
adc
bound
pop
cmp
jge
loop
add
pop
aaa
dec
outsb
cmpsb
dec
sti
addr16
jecxz
or
push
inc
xchg
outsl
ss
inc
adc
dec
sbb
in
ret
xor
cmpsb
jno
or
xor
nop
enter
sbb
icebp
xor
cmc
cmp
ficomps
shl
aad
dec
pop
mov
dec
lret
jb
pop
xchg
ret
sub
out
repnz
push
jae
inc
xlat
imul
out
or
int
sbbb
pop
mov
sarb
push
in
jl
je
out
inc
out
mov
lret
dec
neg
xchg
int
mov
push
testl
xor
dec
dec
cmpsl
lds
repnz
xlat
shll
mov
sar
inc
sub
or
push
xchg
jo
cld
lods
add
fnstcw
push
pop
test
ficoml
fs
idivb
insl
movsl
js
push
or
mov
fucomp
dec
and
mov
push
jae
pop
jl
add
and
scas
shlb
sbb
mov
sti
push
bound
or
iret
mov
adc
sbb
movsl
add
mov
mov
mov
jg
loopne
out
pop
inc
cmp
jno,pt
jle
ljmp
xor
mov
sub
idivb
xor
pop
fisubrs
xchg
incl
push
out
cmp
push
out
hlt
inc
mov
push
scas
inc
pop
pop
mov
jmp
mov
and
das
arpl
int3
mov
adc
dec
into
xor
test
jno
rorb
cmp
dec
test
dec
insl
push
or
push
mov
pop
mov
cmp
cmpsb
loope
pop
xchg
push
jb
jecxz
out
je
movsl
push
cmp
dec
fidivl
sub
mov
ret
sbb
sbb
push
adcb
imul
add
mov
mov
loope
in
iret
pop
dec
popa
mov
cmp
loopne
mov
dec
pushf
push
mov
fnstcw
daa
fwait
rclb
adc
sbb
sub
xchg
ret
data16
repz
ljmp
in
das
xchg
jno
push
outsl
jae
pop
pop
dec
dec
test
rcll
inc
mov
mov
in
add
out
dec
daa
or
sub
mov
pop
add
subl
mov
sbb
and
or
xor
push
add
add
mov
sub
and
push
sahf
xor
add
jb
dec
pop
xchg
call
test
out
adc
data16
jne
push
adc
outsb
jge
push
ret
cmc
gs
pop
outsb
in
mov
pop
lods
and
ljmp
mov
gs
pop
mov
es
add
shlb
outsl
inc
stos
div
test
dec
aad
ret
rcr
mov
xchg
jmp
ljmp
push
sub
or
jle
adc
mov
push
cmp
pop
jo
lahf
lds
cmp
xchg
mov
test
jecxz
call
mov
mov
push
mov
push
or
mov
cmc
inc
jae
call
jp
xchg
dec
out
test
mov
insb
xchg
and
cmp
ret
jae
ret
xchg
jmp
or
and
add
dec
or
mov
mov
lcall
jmp
dec
jns
mov
mov
setne
inc
arpl
fsubrl
les
repnz
sub
xlat
adc
subl
jae
push
or
loop
add
ss
dec
mov
scas
mov
sahf
xor
xor
mov
cmp
xchg
hlt
js
sbb
loop
movsl
out
jae
lcall
inc
movlps
cmpsb
fidivrl
loop
mov
fs
pop
outsl
fists
jbe
sub
mov
add
int
inc
lods
lahf
imul
arpl
or
in
sbb
xchg
cmp
xchg
mov
in
mov
and
mov
or
xchg
xor
stos
dec
aam
test
movsb
cwtl
pusha
stos
lcall
push
xchg
jae
lea
xor
jle
fistpl
cmp
jae
and
out
push
jbe
out
push
btc
jnp
insb
xor
adc
std
push
scas
imull
sub
or
rolb
dec
sti
dec
cltd
insl
mov
jl
lods
in
xchg
dec
inc
pop
shlb
imul
mov
jmp
jecxz
shll
jo
push
dec
jg
cltd
inc
or
scas
hlt
mov
aad
fstps
fiadds
push
imul
stos
and
je
push
addl
cli
mov
jo
mov
rcrb
out
enter
subl
call
inc
les
add
scas
mov
mov
jle
loop
mov
add
mov
mov
add
cltd
cli
fsubp
adc
jno
jge
adc
in
sbb
insl
ss
and
adc
add
dec
mov
jno
dec
lcall
popa
dec
add
or
push
and
sub
or
xor
aam
jno
push
mov
adc
push
xchg
xchg
xchg
jge
inc
sub
cwtl
shr
xor
divl
cltd
mov
xor
jnp
pop
bound
mov
into
push
sarl
lret
into
jle
pop
mov
pop
int
adc
adc
xchg
aam
and
push
out
pop
orb
inc
adc
xor
cmpsb
test
loope
clc
add
sbb
lret
dec
and
fdivs
movsl
lret
ja
or
bound
out
or
dec
sub
jns
rcrl
mov
adc
movsl
mov
pop
fistpll
mov
fbld
jecxz
adc
sub
dec
and
inc
sub
in
shrl
shrl
pop
mov
imul
mov
cltd
cld
or
pop
lods
jns
cs
inc
jmp
jle
ds
mov
mov
xchg
and
push
mov
mov
popa
in
jecxz
dec
icebp
cmp
xchg
aaa
dec
int
push
push
dec
addr16
fadds
lock
xor
rcll
cmp
pop
sti
daa
and
aas
mov
aaa
mov
xlat
sub
loope
pop
je
mov
mov
shll
aaa
test
xchg
pop
add
sbb
mov
lcall
mov
xor
pop
push
ss
push
ljmp
inc
sub
pop
pop
addr16
and
pop
lea
icebp
push
es
push
shr
scas
shlb
jge
and
cmpsb
push
cli
inc
sbb
test
scas
and
jb
xor
ret
mov
cmp
or
test
gs
add
movsb
lcall
aaa
mov
add
mov
xor
ret
or
fadds
fsubrs
shrb
xchg
movsl
cmp
mov
fstps
inc
mov
stos
xchg
cwtl
and
ljmp
test
bound
arpl
pop
or
or
js
push
jnp
out
cs
mov
cmp
lret
jbe
sbbl
pusha
dec
and
fdivs
mov
out
sbb
jmp
pop
daa
and
inc
pop
mov
mov
loopne
ds
adc
xor
xor
mov
mov
je
insb
mov
test
push
adc
sbb
xor
mov
cmp
mov
mov
cltd
repz
loopne
fs
inc
pop
dec
aad
aas
xor
scas
xchg
rcl
jnp
lret
in
rorl
addb
repnz
mov
cmc
scas
adc
fxch
pop
popf
iret
pop
mov
ret
ds
mov
lret
insb
inc
jne
sub
mov
arpl
pop
fcmovb
das
pop
adc
imulb
outsb
stos
sbb
pushf
mov
fwait
mov
scas
inc
add
shlb
repnz
outsl
je
outsb
sbb
pop
ja
sarl
lcall
es
pop
pop
outsb
jae
inc
fldenv
out
fnstsw
mov
push
push
jae
jl
push
cmpsb
imul
fistpll
and
sbb
cmp
mov
or
dec
jg
aaa
xor
cli
mov
fldl
mov
dec
imul
scas
std
push
xchg
in
jne
imul
add
lea
pop
adc
nop
push
fidivrl
addr16
je
push
divb
cltd
adcb
push
gs
mov
push
iret
or
bound
or
addr16
mov
ret
popf
mov
inc
call
xor
cmp
cwtl
or
pop
movhps
mov
in
mov
jl
idivb
adc
add
jp
enter
cltd
jns
andl
loope
arpl
mov
in
jle
push
adc
sbb
jg
xchg
cli
xor
xor
addr16
xchg
mov
sbb
inc
ret
or
testb
cmp
or
pop
insb
mov
cmp
push
push
sbb
push
hlt
cmc
mov
bound
push
popa
adc
jg
push
pushf
sub
jbe
icebp
cmp
xlat
sub
lcall
pop
insl
or
js
jmp
fistps
lock
testb
cmpb
stos
mov
frstor
loopne
in
dec
mov
int
mov
cmp
pop
sbbl
mov
and
adc
arpl
fcomp
fsubrl
daa
out
jl
mov
adc
push
mov
and
sub
xor
xchg
inc
adc
jle
sub
pop
test
das
xchg
xor
pushf
cmpsl
inc
fwait
lods
xchg
mov
xchg
push
mov
mov
imul
xacquire
sub
jo
nop
loopne
pop
ret
movsl
dec
test
pop
in
in
push
lahf
cmp
addr16
inc
inc
sub
fsubl
dec
outsb
lods
dec
in
push
mov
inc
push
cwtl
js
sarb
sbb
mov
jo
push
data16
outsl
mov
dec
scas
aas
ret
scas
call
jae
fisttps
inc
outsb
scas
fnstsw
ret
imulb
mov
or
mov
aad
mov
sahf
aaa
xor
dec
cld
jmp
and
je
shl
ffreep
cli
mov
or
cwtl
inc
sub
mov
adc
add
xorb
cmp
lret
loopne
out
andb
mov
adc
cmp
jp
jnp
xor
in
jecxz
test
fwait
cmp
test
push
mov
push
in
mov
mov
xor
cmp
addb
or
push
pop
sbb
mov
shrb
ss
xchg
mov
ljmp
lea
ds
in
mov
ret
mov
in
sub
add
mov
sub
xor
mov
sub
push
test
std
dec
pop
inc
mov
loopne
icebp
lcall
mov
add
mov
jmp
jae
dec
pop
jnp
xchg
dec
mov
cmpsb
test
loop
adc
mov
cltd
clc
pop
xor
mov
cmp
inc
fistpl
js
fistpl
pop
xchg
sbb
data16
rcl
jbe
aas
sbb
mov
cli
or
dec
mov
adc
aas
inc
fs
xor
cmp
lret
gs
mov
pop
pop
inc
xchg
adc
stos
sahf
test
imul
roll
ret
rcl
rcr
or
imul
mov
ss
sbb
cld
sub
notb
stos
enter
aam
idivl
adc
jmp
pop
iret
adc
adc
stos
call
add
pop
jns
mov
fnstcw
mov
aam
push
in
aad
aad
jmp
inc
push
sbb
gs
lods
push
and
out
jl
mov
inc
loop
inc
add
jmp
and
fiaddl
dec
sbb
mov
jge
jle
adc
mov
cmp
push
fwait
pop
mov
in
dec
mov
fistpl
subl
loopne
jmp
lret
idivb
mov
mov
push
outsb
fbld
xlat
xor
or
jge
rol
lcall
mov
xor
fistps
test
jo
fisubl
mov
add
stos
add
xor
cwtl
lods
fidivrs
add
icebp
rcll
shll
adc
std
mov
cmp
fcmove
add
dec
js
sub
fmull
inc
stc
add
pop
bound
inc
push
out
clc
call
mov
mov
push
adc
arpl
ds
fdivs
add
or
mov
loope
insl
jle
or
nop
insl
mov
ret
out
ja
clc
mov
jle
jno
push
fldl
inc
mov
or
cs
or
lret
add
mov
mov
call
sbb
shl
jp
and
xor
cmp
insb
sbb
in
pop
imulb
xor
dec
pop
or
cmp
mov
hlt
lea
mov
sbb
mov
pop
cltd
jmp
dec
outsb
scas
stos
cmpsb
xor
mov
nop
les
loopne
insb
sbb
pop
rclb
insl
and
clc
push
mov
data16
pushf
addl
pop
fldenv
add
mov
pop
dec
dec
jae
xchg
nop
xchg
addb
mov
pop
in
sub
pop
adc
jp
jae
cmc
pop
sub
lea
arpl
xchg
jnp
xchg
rcl
aam
sbb
inc
fiaddl
sub
inc
test
loopne
xchg
jmp
dec
insl
dec
cmp
mov
clc
mov
add
out
xor
stos
out
dec
shlb
loop
movsl
xchg
stos
sub
call
lods
jge
dec
xor
adc
pop
mov
iret
fbstp
fsubl
js
icebp
cli
inc
sub
sbb
mov
stos
call
cmp
into
shl
sbb
daa
dec
dec
mov
outsb
hlt
iret
push
inc
sbbb
cmc
jmp
aaa
fcmovnb
stos
push
xorb
dec
cld
dec
in
aas
or
lods
fmuls
cmp
sti
and
jae
jnp
mov
loope
int3
loop
in
jnp
pushf
inc
leave
aaa
xor
inc
mov
repnz
in
xchg
call
fadds
sub
dec
sahf
sbb
adc
jno
xor
pushf
xchg
in
arpl
sub
repnz
push
adc
ret
dec
repz
dec
fiaddl
and
fwait
and
icebp
imul
mov
mov
hlt
sbb
push
outsl
in
fadds
imul
leave
cs
dec
add
lea
scas
lock
shrl
je
xchg
sahf
sahf
sbb
push
adc
or
ss
dec
mov
inc
cli
gs
imul
push
int3
sub
fadds
std
or
cld
int3
imul
jbe
addr16
loope
sbb
or
lahf
pop
mov
jbe
fdiv
insb
cmp
pop
rorl
cmpsl
in
dec
test
inc
fdivrl
inc
loopne
jne
lods
cld
outsl
cmp
jl
cli
dec
stos
jbe
jo
push
mov
pop
lods
sbb
lods
xchg
sbb
and
sub
cmp
je
sbb
mov
cmp
xchg
sarb
mov
xchg
in
lods
mov
cmp
cmp
cltd
xchg
shrl
and
pop
test
in
fs
pop
aas
mov
shlb
xchg
aam
push
inc
sbb
pop
leave
cmc
fsubrp
sub
mov
and
popa
add
push
xchg
pushf
xchg
test
mov
ret
sub
aad
dec
mov
or
jb
jb
in
ja
enter
push
out
int
notl
lahf
inc
shr
jnp
mov
add
inc
scas
in
lods
outsl
xchg
scas
in
mov
movsl
inc
inc
or
cmpsl
out
mov
xchg
pop
nop
mov
xchg
repz
xchg
mov
dec
int
mov
mov
cmc
fisttps
mov
mov
stos
cmpsl
mov
jbe
shll
stc
xor
dec
dec
mov
add
daa
xor
jae
cltd
dec
or
xchg
jns
adc
mov
dec
movsb
mov
pusha
push
mov
push
insl
cs
inc
clc
mov
add
notl
icebp
jg
xchg
cmp
pop
in
xlat
pop
inc
les
sbb
mov
out
mov
insl
fs
mov
adc
cmp
add
fcoms
or
mov
push
or
push
mov
or
xor
rol
xchg
sbb
pop
call
aas
in
or
aad
shl
fxam
cld
mov
cwtl
repnz
cmpsb
bound
adc
mov
sbb
or
pop
inc
push
jb
nop
lret
xchg
and
lahf
jp
aad
cli
jecxz
lret
sub
adc
enter
dec
sub
fimull
bound
push
outsl
fidivs
mov
add
jno
inc
fisttpll
jg
adc
icebp
push
mov
and
add
addr16
iret
push
fwait
test
cmpsb
aas
rolb
cmp
adc
lods
lods
and
jle
sti
nop
jle
jae
push
adc
push
shrl
in
in
lret
lods
into
add
outsb
mov
mov
ja
lods
mov
pop
pushf
inc
mov
rolb
push
in
cltd
mov
lcall
inc
clc
cwtl
add
ljmp
stos
js
in
cli
mov
push
scas
add
outsb
push
daa
dec
je
jb
les
pusha
mov
movsl
negl
push
sub
jae
arpl
push
stc
shlb
mov
pop
movsb
xchg
xor
loope
jno
out
cmpsl
or
cli
arpl
push
fstpt
ficompl
inc
cwtl
imul
push
sbb
fs
mov
popf
outsl
outsl
int3
mov
pop
lea
pop
insl
aaa
lcall
in
xor
dec
and
sbb
or
in
ret
jbe
mov
mov
add
sub
or
mov
xor
or
and
shrl
lods
sahf
call
outsl
or
xor
call
and
loop
or
les
jo
jns
xchg
sub
add
cmpsb
or
sbb
cmp
rorl
cmpsb
mov
sti
aad
mov
fidivs
stos
pusha
pop
adc
and
xchg
test
jecxz
and
rcrl
and
jg
test
rcll
test
jae
inc
imul
pop
jmp
insl
xor
in
lcall
sahf
mov
push
pop
leave
addl
adcl
adc
cmpsb
mov
in
repz
inc
fdivl
cmp
in
arpl
adc
dec
sub
gs
rolb
fs
fidivrl
mov
push
ja
test
mov
add
mov
bound
test
into
out
pop
inc
idiv
lock
popf
adc
mov
int3
and
out
mov
mov
lahf
clc
push
enter
aaa
lods
sub
mov
push
mov
fs
dec
xchg
and
lods
repnz
jae
stos
xchg
cld
loope
cmpsl
mov
inc
jecxz
cmp
mov
mov
jnp
sub
daa
mov
xchg
adc
xor
shl
adc
out
dec
loop
and
mov
pop
sub
pop
or
test
cmp
ja
xor
aam
cmpsl
cmp
sbb
cmpsl
icebp
fldenv
lods
mov
lret
sub
cmp
mov
into
sub
fisubrl
out
xor
loop
fistps
inc
scas
lea
lds
ljmp
scas
xor
push
mov
xchg
sub
mov
mov
xchg
outsb
es
sub
cmpsl
lods
jns
fldenv
cltd
fimuls
out
pop
dec
inc
push
add
leave
pop
in
adc
push
jnp
jmp
jb
cwtl
push
dec
sub
or
dec
shr
outsl
scas
scas
mov
sbb
pop
pop
mov
cmc
and
es
loope
insl
shrb
jno
push
inc
enter
ret
rcr
pop
or
aad
sub
ljmp
lods
nop
sub
xchg
xlat
dec
jl
xlat
jp
inc
ss
sub
aad
sbb
push
pop
out
fstpl
xchg
ret
or
or
aad
arpl
adc
cmp
mov
mov
insl
in
xchg
into
ret
popa
push
out
sahf
lods
xorb
lea
xorl
test
push
sbb
fcmovnu
jle
movsl
pop
mov
jne
pop
mov
lds
and
cmp
dec
jp
jns
pop
xchg
cmp
cmp
jno
imul
shl
cmpsl
and
jae
mov
mov
lret
fs
cmp
test
sub
mov
fsubl
pop
cs
jl
pop
sbb
mov
lcall
int3
xchg
out
lock
ja
or
sbb
aas
push
push
sti
cmp
xor
pop
loopne
mov
push
lds
into
xor
mov
iret
in
lahf
push
dec
cmp
enter
adc
dec
adc
xchg
mov
je
inc
out
add
shll
jno
adc
dec
ror
adc
pop
repnz
ret
iret
dec
jmp
mov
aas
addr16
testl
mov
xor
mov
jbe
xor
movsl
xor
mov
testl
lods
sbb
pop
mov
jbe
into
push
aas
mov
ret
pushf
decw
lock
fnsave
dec
call
pusha
sub
hlt
dec
test
outsl
inc
xchg
dec
lea
xchg
jp
out
adc
add
fcmovu
fstpl
ds
pushf
repnz
xchg
iret
test
inc
movsb
test
xor
mov
div
and
js
mov
adc
push
sti
std
bound
jecxz
enter
jb
imul
js
outsl
out
es
mov
or
aad
xor
or
xor
sub
mov
mov
sbb
stos
pop
out
popa
mov
mov
or
fs
mov
lds
shr
mov
lods
xchg
in
test
push
adc
dec
or
push
sbb
in
insl
jmp
insb
hlt
mov
mov
popa
fstps
imul
lahf
or
cmp
jl
lahf
dec
mov
adc
mov
mov
mov
fwait
test
leave
insb
aas
sbb
jle
or
push
jl
lahf
scas
mov
fidivrl
nop
jmp
out
ret
push
push
js
movsb
push
push
out
or
pop
insb
cmpsl
xor
arpl
bound
pop
push
rcll
inc
ficomps
dec
push
pop
dec
adc
inc
dec
push
in
dec
stos
sub
insb
dec
lods
or
push
push
cld
sahf
mov
pop
call
or
mov
adc
les
mov
jecxz
das
sti
aas
enter
in
xor
inc
cltd
int
movsl
repz
outsl
cmp
call
ja
bound
xor
mov
mov
mov
cltd
push
popf
sbb
dec
push
and
adc
lock
sbb
sbb
ljmp
ja
jge
push
fimull
rcrb
xchg
out
jge
jno
mov
add
std
mov
xor
cmp
adcl
or
mov
dec
rclb
fstpl
in
imul
mov
add
mov
add
mov
pop
pop
pop
mov
add
int
mov
movsl
inc
inc
les
in
mov
cmpsb
nop
xchg
xor
les
inc
or
icebp
cmp
adc
popf
bound
adc
jo
pusha
fdiv
jo
addl
mov
into
mov
mov
adc
jle
dec
mov
xor
sub
lods
pop
cs
push
push
lods
sbb
dec
in
fcoml
loope
out
adc
cmc
test
lock
mov
aas
mov
jmp
sti
add
repnz
jmp
cmp
out
add
pop
jl
gs
cltd
movsl
mov
aam
xchg
arpl
ds
sbb
arpl
push
les
xchg
xchg
gs
orb
adc
dec
adc
xchg
arpl
movsl
jp
scas
fs
cld
xchg
xor
inc
scas
les
fs
or
je
xor
imul
imul
cs
in
cmp
out
cmp
push
sub
or
cmp
sti
sar
ljmp
or
jnp
jo
das
pop
add
push
int3
sub
xor
inc
popa
push
or
aas
icebp
popa
push
push
fmull
mov
hlt
cmp
cmp
addb
mov
jo
jb
mov
add
mov
mov
mov
popf
mov
imul
test
ret
dec
call
stos
aas
dec
fsubrs
dec
mov
sbb
insb
mov
iret
fidivrl
lret
mov
lds
sti
mov
movsb
and
mov
add
movsl
ss
test
cwtl
leave
cmc
into
in
xchg
sub
xchg
sub
cmp
adc
dec
mov
lds
insl
xor
cmp
scas
cmpsl
sbb
sbb
sbb
js
into
push
sahf
or
incl
pop
cmpb
push
fdiv
stos
jp
mov
mov
push
and
mov
repz
out
cmp
cmpb
xchg
jle
aaa
jo
aad
and
cld
cmp
arpl
sbb
jno
jne
imul
repz
sbb
dec
lea
mov
xor
jb
sub
imul
cmp
test
loopne
inc
leave
sub
loopne
push
sub
popf
clc
mov
leave
mov
pop
inc
sub
push
out
ret
loop
bound
addb
or
out
movsb
inc
pop
sarl
outsb
movsb
or
rol
inc
mov
mov
mov
push
nop
lret
xchg
jno
dec
add
out
sbb
push
push
fscale
out
mov
mov
ds
pop
mov
fidivrl
xchg
cwtd
xchg
jmp
inc
or
clc
and
cmp
sbb
xchg
push
in
mov
shr
jg
out
inc
and
dec
js
nop
and
or
mov
cmc
or
or
push
push
inc
xchg
cmp
mov
lods
test
sub
xor
push
cmp
push
inc
scas
sub
mov
push
cmp
add
mov
outsl
hlt
fwait
lds
or
sbbl
test
lods
dec
dec
add
dec
mov
push
cmpsl
inc
outsb
hlt
cltd
les
push
cmp
jecxz
pop
flds
aaa
jae
movsl
mov
leave
push
adc
mov
mov
imul
stos
pop
imul
add
test
push
movsb
xchg
ficomps
xor
aam
insb
push
add
adc
js
ss
xchg
ja
in
sub
leave
fildll
xor
sbbl
inc
jnp
out
rorb
or
xchg
jbe
mov
pushf
das
insb
stos
pop
jecxz
inc
add
lock
mov
push
sbb
mov
lret
cmp
loop
loope
sahf
xchg
cld
mov
jnp
push
jecxz
mov
adc
mov
ljmp
enter
push
dec
lods
decl
push
idivb
mov
push
aas
loope
imul
std
cwtl
fistpl
sbb
test
call
xor
sub
or
ljmp
xorl
sbb
dec
pusha
jno
lret
cmpsl
fiadds
aad
sbb
cmc
test
fstpt
cmp
popa
mov
xchg
mov
outsl
rcl
in
xlat
adc
fisttpll
mov
daa
push
dec
inc
sub
ljmp
lcall
inc
jge
xor
inc
xchg
dec
mov
into
and
mov
daa
stos
pushf
dec
pusha
int
rcrb
cltd
inc
sub
mov
shl
dec
inc
and
popa
push
movsl
popf
sub
and
fimull
pop
push
out
insb
xchg
and
push
fstl
jmp
xchg
xor
sub
ss
push
pusha
lock
pop
xchg
mov
dec
pop
es
pop
ret
jp
and
loopne
add
jmp
lods
aaa
pop
sbbb
push
enter
push
jle
jnp
and
sti
push
rcl
mov
cmp
xchg
adc
push
call
call
pop
das
jl
xor
sub
sbb
mov
sub
jge
popf
or
loope
or
pop
sahf
xor
addr16
lods
cwtl
push
mov
dec
sbbl
add
outsb
enter
sub
das
or
mov
mov
daa
std
sub
popf
mov
pop
mul
pop
xlat
adc
es
sub
xchg
imul
std
and
outsl
stos
dec
imul
pop
outsl
scas
cmpl
cld
std
ficomps
inc
ret
add
cmpsl
mov
mov
mov
and
push
sub
mov
push
jmp
pop
clc
int
push
cltd
pop
jae
sbb
pop
cltd
adcl
cmp
jbe
xchg
mov
dec
xor
movl
ds
out
jmp
dec
adc
xchg
mov
test
icebp
jo
inc
mov
les
push
sar
lret
lea
add
push
inc
mov
jecxz
ds
mov
insb
mov
mov
push
inc
lods
cmp
stos
movsl
pusha
sub
test
notl
xor
mov
jg
repz
rcl
dec
xchg
std
nop
movb
add
push
aaa
add
push
iret
in
add
sub
out
test
mov
mov
sub
test
push
sub
inc
pop
xchg
add
orl
sbb
outsl
gs
imull
xlat
ss
in
pop
inc
out
cwtl
adc
pop
int3
add
xchg
push
lock
mov
inc
and
jge
shlb
cli
xor
loopne
push
lea
mov
imulw
push
lock
sbb
adc
and
inc
jmp
addr16
dec
cld
enter
or
dec
mov
cmp
pop
jne
popf
cli
or
xlat
addb
lcallw
frstor
sub
sbb
outsb
iret
mov
rcl
xor
sbb
shlb
mov
adcl
cmpsb
pop
pop
imul
fs
jbe
jmp
popf
inc
fldenv
cmp
cmp
push
in
stos
filds
lret
mov
jbe
jge
xchg
negb
mov
fdivs
pop
pop
fsubrp
lods
mov
loop
xor
adc
xor
cmp
imul
ja
sub
ljmp
mov
xor
addr16
rolb
int3
push
mov
scas
iret
mov
sub
repz
cltd
dec
loope
add
outsb
cmpsb
scas
icebp
push
inc
fimull
ja
pushf
shl
test
iret
dec
ja
mov
cmp
fidivl
adc
shlb
adc
nop
out
cmp
xchg
js
push
test
jge
mov
int3
lea
ficomps
fsts
xor
pop
fcompl
addr16
jp
pushf
inc
in
adc
fimuls
xor
je
les
push
lea
add
sub
jno
lcall
mov
int3
jmp
in
add
adcl
inc
movsb
adc
pop
loope
add
lret
lods
loopne
push
pop
pop
in
lret
mov
mov
insl
push
mov
mov
mov
push
mov
sbbl
std
enter
loopne
cs
rorl
adc
insb
add
pop
les
insl
mov
dec
xor
loop
push
xchg
and
mov
mov
mov
add
lret
pop
and
add
lock
scas
clc
jns
out
mov
adc
fmull
cmpb
inc
dec
pop
xor
sub
jg
jo
stc
xchg
sub
add
adc
and
pop
cwtl
fistpll
mov
hlt
adc
xchg
pop
jo
gs
adc
xchg
jns
repnz
loopne
mov
dec
or
sub
jno
out
enter
fadds
adc
insl
movsl
mov
cld
mov
insl
jo
xchg
add
jmp
in
arpl
loop
sub
adc
jbe
dec
dec
cmpb
adc
imulb
stos
mov
sbb
lods
push
lret
out
lock
lea
cwtl
ljmp
ret
cmpsb
pop
mov
xchg
mov
dec
lock
test
push
jno
sbb
shlb
sti
shr
push
loop
sahf
es
pop
jl
pop
adc
mov
in
jb
sti
pushf
outsl
insl
lock
pushf
fiadds
arpl
fcmovb
jbe
push
xchg
adc
adc
xchg
js
cltd
cmp
cltd
lret
std
in
pop
dec
in
ljmp
add
es
jle
sbb
xor
pop
push
mov
call
add
dec
xor
hlt
aaa
test
add
je
jne
jmp
pop
push
addr16
mov
incb
lret
push
ret
test
fstps
aas
cmpsl
fs
imul
push
lea
push
add
mov
imul
sub
pop
or
xchg
mov
testb
xor
inc
adc
subps
in
call
test
sub
adc
cltd
out
lods
xchg
lock
sub
dec
jge
outsl
add
jl
je
pushl
add
int3
adc
mov
xor
cmp
mov
test
stos
sub
in
loope
pop
mov
mov
xchg
adc
cmp
inc
add
ret
dec
push
jno
into
jo
out
xor
cmpsl
les
test
jne
mov
lret
and
andb
xor
push
js
and
mov
or
pop
jb
mov
into
dec
insl
ljmp
repnz
xchg
sub
rcrl
inc
sarl
test
lods
add
das
lods
adc
dec
mov
inc
repz
out
ljmp
cmp
or
orl
xchg
mov
dec
in
cmp
test
out
pop
jnp
bound
mov
mov
test
ret
and
dec
cmp
xor
push
jl
out
les
jp
jge
subl
ds
or
aad
cmp
xchg
dec
mov
xor
mov
push
test
fidivl
add
mov
test
mov
and
mov
xchg
je
loop
aaa
cmp
mov
test
fabs
push
jno
xchg
in
push
mov
test
mov
js
imul
push
add
fcompl
xor
aas
pop
inc
in
xchg
xchg
loop
lods
or
push
xchg
push
das
in
leave
inc
inc
aas
jo
mov
cmp
jb
decl
mov
sub
add
jecxz
arpl
mov
cmp
mov
data16
int3
pushf
jo
lods
inc
sub
pushf
clc
shll
mov
stos
xchg
data16
xor
mov
test
or
adc
jg
cmp
lock
mov
xor
lods
and
enter
xor
shll
jecxz
inc
test
mov
pusha
inc
movsb
jbe
fdivrs
out
and
push
sbb
gs
imull
xlat
imul
mov
cmp
outsl
ss
int3
xchg
jg
arpl
jae
add
ret
mov
pop
test
cmpsb
pop
mov
daa
gs
add
jb
jl
sbb
and
dec
lock
loope
push
push
cmpsb
sbb
and
out
fdivs
movsb
cmpsb
jns
fsts
test
pop
adc
ret
dec
lea
test
cli
adc
js
test
rclb
daa
cld
jbe
inc
call
mov
xchg
or
push
cmp
sbb
mov
dec
sbb
pop
cmpsl
push
popa
dec
pop
jae
xchg
dec
stc
fcmovb
inc
hlt
adc
sbbl
adc
repnz
test
or
loop
out
push
xchg
sub
add
test
jae
mov
stos
xor
leave
sub
fyl2xp1
pop
jl
lea
js
popf
cmp
fs
sub
outsl
push
outsl
lret
mov
sub
ret
pusha
inc
lock
inc
jg
pop
inc
fcomps
mov
sarb
or
lcall
bound
test
ss
mov
pop
xchg
dec
fadds
or
jb
jo
movsl
orl
pop
dec
xchg
je
pop
roll
insb
insl
das
in
repz
pushf
cli
pop
jnp
adc
xor
outsb
cmc
aam
mov
loopne
ds
jb
mov
pop
addl
pop
mov
scas
sbb
xchg
push
adc
add
pop
sub
rcll
xchg
add
andl
aam
mov
jae
xor
jle
movsb
pushf
pushf
ljmp
pop
push
lods
mov
or
or
sub
inc
and
pusha
xchg
adcb
sbb
cli
mov
cld
in
xchg
bound
mov
sub
mov
mov
mov
adc
sbb
inc
popf
sbbl
test
jb
xchg
mov
cmp
or
cwtl
insb
cmp
pop
in
lods
insb
mov
push
add
fstpt
fildl
arpl
xor
jno
xchg
cmp
loope
pcmpgtb
iret
sub
dec
aad
std
add
add
fsubs
mov
icebp
fwait
push
adc
and
fstl
mov
cmp
pusha
and
inc
repnz
pop
xor
fcmovb
call
jnp
inc
mov
adc
outsl
adc
push
cmp
js
aas
cmp
repnz
sarl
lret
rorl
lcall
ja
mov
and
fdivs
push
inc
push
lods
clc
cmp
idivb
jno
les
cld
pop
push
inc
sub
mov
and
xchg
cmpsb
into
push
movsb
loop
mov
pusha
ret
out
gs
push
push
cmovle
repz
push
and
enter
xor
jns
xchg
adc
repnz
and
outsb
sti
scas
adc
jb
movsb
repnz
call
push
jno
lahf
xor
jmp
div
negb
pop
sarb
aas
lret
push
sbb
call
pusha
pop
cltd
mov
jge
mov
ds
jb
sbb
xchg
dec
roll
lods
loopne
push
cmp
shr
test
add
in
jo
movsb
cs
cli
mov
mov
and
mov
je
aaa
mov
ljmp
hlt
sub
dec
xchg
mov
adc
cmp
ja
cmp
cld
fwait
or
xchg
rorl
clc
xor
enter
pushf
add
stos
fwait
inc
jno
mov
or
cmc
sub
mov
jae
inc
das
sbb
dec
xchg
jae
pop
loope
sbb
sbb
or
pop
mull
ret
daa
loope
jle
xor
aas
pop
mov
js
call
cwtl
mov
jno
out
add
mov
insl
mov
or
dec
mov
jb
push
cmpsb
lea
pushf
mov
sarb
mov
aas
mov
xlat
sub
dec
dec
in
insb
call
lret
gs
or
fs
pop
jl
in
mov
insl
js
fnstenv
pop
pop
adc
inc
insb
test
jnp
pop
sbb
pop
lret
xor
xchg
and
mov
jno
xchg
in
cmc
fnstenv
arpl
sub
inc
mov
fsubrs
roll
pusha
mov
xchg
mov
mov
cmp
xchg
cmp
pop
sbb
sub
pop
dec
pop
mov
pop
or
ds
and
outsb
orb
cmp
subb
xchg
lret
xor
sbb
jmp
sbb
add
cltd
dec
xchg
loop
fcmovbe
jnp
hlt
cli
pop
push
add
addr16
hlt
idivb
xchg
jl
scas
aad
fwait
es
pusha
loope
ds
jl
add
push
ret
push
sbb
pop
imul
arpl
cwtl
adc
movsb
cld
repnz
pop
cs
xor
inc
int3
imul
enter
jne
fidivrs
pusha
sub
push
mov
ror
fnstenv
sbb
daa
ljmp
inc
cwtl
lcall
sub
adc
out
sub
ss
outsl
add
lods
push
test
clc
pop
inc
popf
mov
cmp
jge
dec
pop
aad
jno
fs
dec
test
jae
fmul
fcomps
mov
into
pop
ja
push
mov
imul
xor
popa
les
subb
shl
sbb
mov
mov
adc
sbb
xchg
push
into
lahf
adc
aas
scas
lcall
mov
adc
adc
into
adc
sbb
sarb
or
adc
xor
daa
mov
cld
sbb
mov
adc
push
add
addr16
scas
call
mov
push
mov
inc
mov
mov
stc
mov
mov
push
jnp
fdiv
xchg
mov
inc
loop
and
pop
sub
mov
scas
add
cmpsb
js
mov
aad
fcmovb
pop
fsubr
push
dec
leave
jl
xchg
mov
icebp
pop
pinsrw
sti
repnz
mov
or
lret
ret
mov
cmp
insl
jecxz
enter
push
pop
and
in
mov
adc
inc
jns
push
pop
cmpsb
ss
dec
sub
js
rorb
fsub
sub
xor
outsb
aad
test
push
mov
sbb
test
mov
mov
mov
enter
mov
cmpsl
xchg
add
imul
fdivr
test
fldcw
push
push
call
jl
xor
sbb
fiaddl
je
or
jg
and
popf
mov
xor
ret
iret
or
xchg
arpl
jp
sub
jae
mov
mov
cmpsb
push
mov
mov
out
scas
aad
rclb
jmp
stos
aam
and
pop
mov
fistpll
dec
xor
movsb
or
jge
cmp
dec
pop
sub
sub
and
and
adc
or
pop
nop
int
mov
call
xchg
pop
xchg
lret
adc
mov
dec
lea
jbe
lret
mov
add
cltd
mov
add
jo
mov
cli
shrl
hlt
jmp
and
sbb
sbb
fiadds
out
in
add
add
xchg
inc
cli
mov
stc
outsb
push
adc
xchg
movsl
mov
jecxz
jle
sbb
jle
ss
out
pushl
pop
out
push
inc
ror
lret
jnp
xor
xchg
ret
adc
dec
iret
mov
frstor
mov
push
ljmp
mov
in
insl
adcb
data16
data16
mov
outsb
es
xchg
xlat
movsl
cmp
mov
mov
pop
add
cmc
xchg
push
je
sub
fbld
jecxz
add
pop
add
sub
dec
rcrb
push
pop
lea
mov
add
xchg
scas
pop
stc
daa
jne
je
mov
mov
mov
and
pop
out
add
fwait
or
in
aam
outsl
adc
jmp
cmpsl
sbb
fists
pop
mov
adc
fmul
out
mov
sbb
imul
sbb
adc
adc
xchg
jle
jecxz
scas
fistps
je
lcall
xchg
add
das
or
into
fwait
or
lea
cwtl
jbe
in
mov
xchg
out
jp
mov
data16
sub
mov
sbb
addl
pop
call
ss
xor
add
cmp
and
push
aas
push
fcmovb
mov
xor
sub
ds
subl
mov
divl
add
lods
mov
lea
adc
and
mov
and
repz
lcall
pushl
jo
js
outsl
mov
ljmp
cs
ss
add
adcl
in
push
push
push
xor
inc
ret
aaa
push
mov
jl
mov
aam
xor
mov
jno,pt
or
jle
fists
and
add
fmul
outsl
movl
jp
stc
ret
mov
into
pop
pusha
cmc
push
xchg
xlat
stos
decl
imul
rcrb
out
xchg
fs
cmpsb
sub
ret
leave
dec
and
leave
jne
jo
pop
add
ja
cltd
cld
inc
jae
mov
dec
aad
mov
adc
xor
scas
push
push
ljmp
ret
ds
inc
roll
add
pop
mov
mov
in
cmpsl
hlt
xor
sbb
adc
dec
cli
adc
fwait
stc
jmp
push
outsb
nop
mov
cmp
xchg
push
inc
scas
dec
xor
xor
pop
insl
sbb
pop
and
fists
sti
mov
sbb
ficompl
push
es
vmovaps
add
xchg
mov
mov
mov
sahf
enter
dec
aaa
jae
or
mov
je
jns
int3
jb
pop
scas
ds
inc
pusha
adc
xor
pop
jle
mov
jp
add
cld
adc
mov
push
daa
jb
aad
out
int
arpl
fwait
je
in
dec
adc
adc
add
jmp
mov
sbb
adc
push
addl
sub
out
cmp
std
aam
dec
faddl
stos
jb
xchg
pop
divl
dec
cmpb
mov
js
adc
push
and
sub
xor
notb
dec
jl
dec
out
insl
in
cmp
pop
pop
jb
leave
mov
add
sub
lock
inc
sahf
pop
clc
addl
mov
stos
pop
cmp
fstpl
add
jb
lea
cmp
aaa
sti
ja
and
scas
mov
cmpsl
shlb
std
and
xorb
jle
je
leave
xor
mov
pushf
cmc
and
jb
jecxz
lret
xchg
clc
lret
shll
mov
repz
mov
loopne
imul
sub
enter
cmpl
cmc
cmp
jmp
jle
rol
sub
mov
add
mov
ss
insl
test
dec
xchg
hlt
cmc
pop
adc
call
xchg
mov
jmp
mov
inc
pop
scas
jne
dec
pop
mov
mov
rclb
sbb
cmp
jb
mov
jg
lahf
adc
add
xchg
movsl
icebp
mov
enter
sub
lock
in
push
push
pushf
cmpsb
outsl
or
mov
jae
push
fs
adcb
test
xchg
inc
out
leave
rcrl
ds
jge
test
and
data16
maxps
xchg
jns
fsubs
repnz
lcall
cmp
imul
cmpsb
loope
into
mov
pop
xchg
mov
pushf
push
out
ss
ret
je
ss
inc
pop
add
xor
cmpb
sbb
ffreep
mov
xorb
pop
dec
mov
mov
cmp
dec
pop
or
mov
mov
adc
push
mov
test
push
cmp
mov
leave
sbb
adc
shrb
fdiv
pop
andb
mov
cs
sub
mov
cmp
dec
sti
in
pushf
ds
test
push
add
dec
neg
mov
inc
insl
push
sbb
shll
pop
xchg
movl
and
jle
mov
call
cmp
push
pop
mov
iret
popf
fninit
iret
sbb
or
mov
bound
xchg
stc
push
or
nop
push
sub
pop
xchg
pop
out
xor
sbb
pop
sub
lcall
xchg
push
sbb
dec
stos
sbb
and
mov
out
pop
dec
adc
sbb
aam
inc
lds
ret
rclb
lds
cmp
das
mov
nop
adc
mov
jne
fs
pushf
stc
pop
jle
mov
add
popa
aam
fsub
lret
mov
lret
insb
jge
sub
dec
lods
rorl
jo
sbb
xchg
or
and
and
lret
incl
test
ds
loope
fs
ret
xchg
int
xor
mov
jb
lret
xchg
adc
sub
sub
testb
out
pop
fbstp
mov
xchg
fcompl
pop
jns
jae
dec
rolb
adcb
scas
shrb
sub
popa
add
add
inc
mov
loopne
mov
repnz
std
push
jb
and
mov
lret
xchg
test
js
and
imul
jo
in
test
xchg
pop
test
lret
xor
loope
jbe
rcr
xchg
and
daa
movsb
inc
sub
mov
adc
inc
incl
mov
jb
mov
inc
aaa
bound
jns
xchg
xor
lock
imul
add
outsb
popa
sbb
cli
and
xor
test
sub
shrl
ret
cli
movsl
and
cwtl
or
push
sub
shll
dec
dec
ds
in
in
movsl
xor
pusha
mov
imul
jmp
pop
xor
out
and
movsb
and
mov
or
outsb
mov
push
pop
pop
sub
call
cmp
or
iret
dec
push
inc
xchg
mov
add
jmp
inc
pop
imul
in
stc
inc
jno
lds
jg
sub
cmpsl
mov
ss
jnp
xchg
dec
xchg
jno
dec
dec
imul
xchg
mov
mov
mov
ss
sar
xor
pop
js
push
movsl
cmp
xchg
lock
cmpsl
lods
jo
jbe
stos
or
jmp
cltd
cmp
xchg
push
push
adcl
out
fwait
add
fnstsw
mov
mov
dec
in
repnz
pop
pop
shll
dec
rcll
pop
pop
inc
in
in
cld
and
repnz
movsl
test
push
arpl
jmp
xor
sub
popa
and
lret
push
inc
push
or
imul
jmp
xor
loop
ja
jae
fiaddl
adc
sti
int
mov
sbb
subb
sahf
cmp
xchg
in
fcmovu
bnd
mov
sbb
lret
xchg
mov
outsb
xchg
arpl
in
jl
pop
lock
lods
sahf
pop
ret
into
insb
jle
xor
push
or
jge
in
imul
or
cwtl
daa
xor
push
out
pop
divb
mov
and
int3
cmp
test
cmp
jmp
jmp
xchg
jmp
pop
push
cmpsl
push
add
adc
lea
rcr
cmpsl
push
xor
xchg
xchg
int3
mov
or
xchg
mov
mov
mov
xchg
call
sub
faddp
jnp
inc
imul
fists
lods
push
addr16
xchg
jo
iret
test
rcrb
test
sbb
je
mov
js
fwait
arpl
hlt
xor
sub
cmc
stos
sarb
jecxz
pushf
jecxz
outsb
mov
pop
jne
cld
fxch
jnp
das
add
mov
push
or
leave
aad
insb
aam
stos
jecxz
pop
push
lcall
sarb
lahf
jo
jecxz
jecxz
js
jp
dec
dec
pop
jb
mov
ds
imul
lods
mov
xchg
sub
xchg
or
dec
or
mov
stc
xor
std
dec
push
mov
jbe
outsb
xchg
movsb
dec
dec
leave
fwait
int3
ret
rorb
rorb
adcb
push
das
mov
out
mov
dec
mov
mov
jnp
imul
shlb
adc
xor
pop
sar
jo
xor
mov
icebp
jg
sbb
or
sbb
mov
adc
mov
les
test
iret
xor
loop
pop
mov
out
aaa
stc
cltd
movsb
push
lods
cmpsl
dec
xchg
lds
pop
fistps
sub
fsubl
sub
dec
and
fstps
push
rolb
cld
adc
push
dec
sub
jo
in
dec
xor
movsb
mov
fidivrl
xchg
and
fistl
mov
or
test
pushf
mov
testl
pop
adc
cmp
jl
sbb
xchg
dec
popa
sbb
sbb
cmc
sub
pusha
adc
mov
push
gs
cmp
popl
push
xor
jge
fwait
push
enter
ret
xchg
notl
jmp
mov
orl
adc
cmp
lret
pop
and
popa
dec
or
lahf
dec
ja
lea
stos
lods
and
shlb
pop
out
xchg
aad
cmp
add
and
pop
cltd
xchg
gs
and
test
push
icebp
popa
dec
inc
mov
dec
js
addr16
movsl
int3
and
jno
fldcw
in
pop
jle
mov
add
jl
xchg
leave
sub
fstps
scas
pop
dec
mov
cmovns
das
testb
xor
or
in
mov
push
loopne
dec
add
xchg
push
loope
xchg
ss
repz
push
cmp
sbb
in
sub
cmp
in
pop
xor
es
dec
adc
shr
and
mov
adc
push
or
mov
adc
xchg
xchg
jnp
sub
mov
jmp
dec
stc
mov
jb
push
in
mov
shlb
pop
rcr
pop
dec
fnsave
jb
es
shlb
popa
std
fisttps
aas
cmpsl
xor
popf
xorb
and
jg
mov
and
mov
mov
adc
aas
mov
mov
xor
and
rorl
mov
jns
pushf
mov
addl
add
ret
ret
and
shrb
xlat
push
enter
pop
sarb
dec
push
and
mov
xlat
lret
push
pop
dec
in
ret
mov
xor
mov
pop
dec
sub
mov
mov
dec
test
xchg
negb
fcmovnb
mov
or
cmc
dec
mov
mov
push
or
aam
insb
xchg
lods
in
inc
push
fistl
scas
pushf
popf
jmp
sbb
sbb
movsb
stos
int
test
ljmp
movsl
xchg
jne
test
jno
das
ret
stos
jmp
arpl
sbbl
sar
xchg
and
mov
pop
push
inc
lock
outsl
cmp
jne
mov
jno
outsb
push
jl
nop
imulb
arpl
jge
pop
cmp
fisubl
dec
aas
pop
mov
dec
xchg
jl
pand
xor
bound
fcompl
fildl
xor
negl
imul
mov
ja
xlat
lea
sbbb
sub
sbb
xor
xchg
rcll
xchg
cld
push
add
outsl
fisttps
and
cld
mov
fcoml
mov
pop
mov
in
fisubl
or
push
fisttpl
cmpsl
mov
jl
xor
loop
dec
fs
arpl
push
mov
outsb
faddl
sbb
adc
lcall
inc
adc
into
mov
jae
out
or
jle
xor
mov
inc
int
fsubr
ljmp
loope
in
cmp
ds
ficoml
loop
or
ret
dec
mov
mov
mov
jae
add
xor
ja
pusha
sub
pop
test
add
mov
ret
in
bound
repz
out
jb
fcoms
imul
pop
nop
js
cmp
test
lret
adc
movsl
ss
and
cltd
or
lret
push
xchg
cmp
jno
sbb
iret
mov
test
lahf
push
lock
xor
add
xchg
mov
cmp
popa
inc
pop
and
push
imul
push
fidivrs
mov
fldenv
sbbl
or
inc
inc
or
rclb
cmp
pop
jnp
push
mov
mov
mov
imul
fnstenv
xor
outsl
ret
fwait
and
lds
cmp
jae
mov
push
arpl
adc
daa
ret
pop
sbb
pop
stos
mov
push
jae
pop
jne
aaa
das
into
add
pop
sar
in
nop
push
jae
insb
rclb
or
rorl
sbb
add
outsb
push
into
sarb
add
jg
dec
mov
mov
pop
xchg
xchg
das
mov
cmp
or
pop
lods
andb
xchg
mov
push
add
jmp
sub
dec
cmp
fisttps
lahf
cwtl
xor
leave
and
cltd
or
xchg
movsl
sub
pop
lret
and
shrl
les
cs
jo
push
xchg
ret
fcmovbe
insb
iret
dec
cs
lret
add
or
pop
aam
lret
and
aam
test
sbb
jmp
mov
cli
add
adc
fldenv
jae
jecxz
or
push
and
mov
cmp
mov
dec
subb
xchg
pop
lods
jbe
dec
jle
in
cmpsb
shll
out
add
mov
cmpsl
repnz
sbb
test
sbb
sub
mov
lret
xchg
jmp
adc
cmp
fcompl
sub
sbb
sub
bound
test
jg
imul
and
mov
ja
and
icebp
shlb
ficoml
mov
fs
mov
cmp
sbb
sub
inc
lock
out
adc
xchg
fs
fs
je
mov
push
dec
out
xorb
ja
movsb
loopne
sub
sbb
mov
mov
out
pop
shrb
js
imulb
sub
lret
aaa
sub
sub
mov
push
mov
jo
or
dec
in
scas
lock
call
fmull
inc
dec
add
mov
jb
or
mov
sti
rol
shr
cmp
dec
mov
dec
into
jbe
mov
adc
mov
das
mov
inc
pop
idivb
adc
js
mov
and
adc
jbe
aam
jns
and
shll
lcall
jns
inc
cltd
mov
mov
adc
cmp
xchg
or
pop
jl
adc
cwtl
inc
jle
pop
test
mov
sbb
in
aas
loop
dec
rcrl
stos
push
sbb
xor
mov
push
insb
xchg
jge
xchg
mov
push
push
pop
adc
cmp
xchg
xchg
dec
jl
test
xorb
mov
mov
outsl
or
mov
jbe
sub
in
adc
repnz
out
jbe
sbb
or
adc
dec
cltd
shll
jge
jmp
adc
subb
cltd
shlb
adc
push
into
scas
cmp
mov
shl
cmpsl
insl
pop
pushf
xchg
jmp
jmp
adc
fs
inc
rcl
push
data16
mov
popa
ja
and
fistpll
pop
jo
imul
adcl
jnp
ljmp
mov
cmc
push
dec
and
jbe
cmp
aas
cmc
nop
mov
lds
dec
negl
fbstp
mov
dec
pop
ret
stc
js
xchg
cltd
test
lcall
jns
mov
insl
subl
lahf
imul
lock
lea
push
clc
push
je
mov
sub
cmpsb
mov
xor
adc
jae
insl
xorb
dec
cmp
jmp
pop
fdivrs
leave
loope
or
mov
xor
mov
push
cmc
fistpl
dec
movsl
test
mov
das
rcrl
lret
xchg
shrl
xchg
xchg
aad
mov
iret
xlat
flds
jne
jg
jb
xchg
pop
test
pop
scas
mov
and
lahf
mov
cmpsl
pop
mov
xor
aas
enter
lods
or
and
xor
sbb
rorl
daa
push
out
push
sbb
and
test
jb
in
sub
xchg
jmp
mov
xorb
mov
sbb
sub
in
xor
jo
shrb
sub
movsb
mov
aaa
loopne
sub
clc
sbb
scas
xchg
xchg
add
adcl
pop
out
aam
ljmp
inc
cmp
cmpsl
cmp
add
or
dec
push
pop
lret
mov
imul
or
pusha
mov
jmp
mov
push
nop
jmp
rcr
into
scas
mov
pusha
ja
imulb
cmp
adc
sbb
adc
shll
stos
nop
sub
hlt
nop
xchg
dec
outsb
stos
jmp
inc
xor
test
add
leave
xchg
pop
inc
cwtl
xlat
add
fsubrp
push
add
je
clc
mov
imul
outsb
fdivrs
xor
mov
movsl
ret
es
fs
lret
cmp
cmpsl
and
sar
mov
and
scas
mov
fwait
cmp
neg
and
adc
lea
mov
pop
push
push
aas
imul
repnz
je
sbb
jne
in
fidivl
and
mov
movsl
pop
ror
sahf
sub
mov
pusha
xor
fldt
stos
xchg
ret
ss
sbb
enter
in
stos
fcmovnbe
flds
lea
call
mov
pop
ds
inc
cmp
inc
cmp
lret
movsb
in
loopne
test
cmp
subl
in
sub
sub
push
or
sbb
pushf
mov
jecxz
inc
movsl
mov
dec
inc
pop
jo
je
push
jae
movsl
and
cmp
hlt
mov
dec
andl
inc
xchg
popa
aas
sahf
adc
lahf
fistps
in
sub
shl
dec
inc
lahf
sub
sbb
fadds
cmpsl
cltd
mov
dec
sbb
jge
call
sbb
addr16
mov
lret
leave
and
mov
add
lock
in
call
lods
pop
mov
mov
push
addr16
adc
ss
push
cwtl
sub
pop
xlat
and
rolb
fiaddl
test
int
sbb
movsb
adc
movsb
add
and
repz
sbb
sbb
mov
mov
scas
fstps
iret
fs
add
pop
daa
mov
clc
xor
call
or
xor
inc
or
stos
push
xor
push
fs
add
sbb
cmp
add
push
out
popa
sbb
jecxz
adc
inc
dec
mov
movsl
sbb
sarb
loop
cld
pop
stos
cmp
mov
in
cwtl
xor
jne
lds
mov
std
adc
add
add
ficomps
aaa
clc
mov
subb
sahf
inc
mov
mov
xor
std
add
xchg
jno
add
cwtl
mov
ret
push
mov
sub
xor
cmp
xchg
push
mov
pop
sbb
mov
cmc
in
test
aas
mov
aas
cmp
mov
in
test
fwait
add
and
pop
and
xchg
sub
adc
cwtl
xchg
sbb
sub
cmp
jb
aaa
pop
test
jbe
pushf
jno
add
mov
stos
sbb
test
leave
cmpsl
mov
repz
push
fistps
mov
call
icebp
inc
sbb
fwait
push
add
sbb
mov
dec
aad
xchg
jl
fsubrp
xchg
ret
mov
dec
mov
scas
xchg
dec
popa
xor
sub
je
jle
cmpsl
dec
add
pop
std
add
cmc
xor
and
push
jl
cld
shrb
add
int3
cltd
leave
pop
mov
push
lock
lds
pop
adc
fdivrl
outsb
cmc
mov
sahf
xchg
or
xchg
nop
push
repnz
in
test
and
bound
into
in
sbb
lahf
pushf
dec
bound
lods
dec
xchg
push
push
lcall
out
inc
nop
loop
mov
movsb
stos
mov
das
andl
cmp
mov
hlt
or
idivb
shll
mov
ss
push
shl
in
pop
fucom
sbb
in
inc
and
xor
cmp
in
jno
mov
ss
and
into
jge
cmpsb
mov
fldcw
push
cmp
lcall
aas
xchg
jmp
mov
push
add
and
pop
fisttps
add
nop
sub
adc
mov
scas
add
fucomi
dec
aaa
dec
test
pop
jae
ret
add
in
fsubr
movsl
cmp
repz
jg
jg
or
cmpsb
les
bound
cmp
call
inc
aam
mov
daa
push
or
out
in
or
cmc
xor
icebp
jno
mov
cmp
ret
pop
sarl
push
sbb
jmp
lahf
push
mov
cli
ljmp
mov
push
push
rcrl
add
sbb
adc
leave
andb
test
jge
xor
gs
repnz
push
mov
addr16
dec
push
test
inc
aad
sbbb
add
fildll
insb
xchg
xor
add
fwait
mov
imul
outsb
lret
arpl
push
jle
out
ret
stos
xchg
imul
jns
je
ficompl
jne
lock
nop
jp
mov
mov
enter
leave
popf
test
testb
inc
in
pop
push
ficoms
xchg
add
clc
daa
bound
scas
adc
andb
pop
xchg
scas
pop
cmp
je
aad
and
cmp
dec
dec
cmp
mov
insb
cmc
pop
push
cmp
lods
xchg
arpl
sub
pop
out
enter
jmp
stos
push
cmpsb
daa
add
sub
int
and
mov
adc
in
aas
xchg
in
int3
jg
call
mov
dec
or
daa
outsb
fldt
and
mov
cwtl
inc
pop
in
mov
mov
ljmp
lods
lods
push
sub
pop
test
dec
popf
leave
nop
in
add
inc
lahf
pop
inc
dec
and
out
xchg
call
mov
orb
jne
std
aad
int
scas
pushl
js
mov
mov
clc
mov
mov
adc
xor
jae
pop
jg
imul
mov
cmp
inc
and
repnz
inc
push
pop
sub
mov
push
outsb
dec
push
sub
xor
pop
loop
lahf
xor
out
adc
aad
filds
mov
outsb
push
dec
psllq
mov
add
dec
dec
push
xlat
sti
aas
sbb
mov
test
arpl
inc
daa
fcomi
and
push
mov
das
cmpl
sub
decl
xchg
and
cmp
inc
aas
andl
dec
in
jecxz
sbbl
shrl
pushf
daa
repz
bound
scas
jae
add
inc
jg
pop
xor
ret
data16
mov
bound
outsl
fs
cli
test
xlat
xorl
loope
ret
add
push
cmp
pop
aas
dec
hlt
iret
out
jnp
mov
mov
and
lods
lock
cmpsb
test
stc
inc
xchg
out
pop
scas
pop
mov
inc
or
or
cmp
stos
fldcw
inc
sub
lahf
bound
addr16
movsl
jnp
imul
faddp
ftst
dec
bound
leave
dec
outsl
popa
pop
pop
iret
roll
mov
cwtl
insb
push
sti
mov
rorl
jmp
stos
ss
aad
add
xchg
xor
or
jle
dec
jle
lret
jle
aam
dec
imul
or
add
push
ficomps
in
aad
sbb
xchg
inc
call
xchg
adc
mov
mov
cmpsl
mov
cmp
or
loop
shll
or
cmpb
enter
sbb
adc
insb
pop
xor
iret
in
push
pop
sbb
mov
cmp
mov
pushf
call
jae
test
dec
mov
pop
fs
and
dec
leave
mov
lret
pusha
cmp
sbb
sub
or
adc
push
cwtl
fcmovne
add
lea
inc
insb
and
jns
sbb
cmp
and
inc
jnp
inc
mov
inc
test
mov
xchg
call
testl
andl
ljmp
mov
cwtl
lea
sub
stc
push
loop
mov
fnsave
and
fsubl
mov
dec
in
add
pop
int
jbe
or
xor
scas
jo
sbb
imul
push
mov
fimull
and
mov
adc
push
dec
dec
sbb
xor
pop
pop
or
sbb
pop
add
mov
mov
fsubrl
jne
and
jne
xchg
pushf
pop
stc
cmc
sbb
loopne
xor
push
mov
sub
stos
adc
or
sub
adc
push
addl
cmp
xchg
xchg
ficoml
mov
lcall
mov
pop
loopne
sub
mov
xchg
xchg
sarb
test
fidivl
cmp
loope
pushf
pop
fmul
or
adcb
inc
out
movsb
jle
cmc
dec
inc
jl
rclb
jge
cld
shlb
sarl
imul
dec
imul
xchg
clc
sti
out
jnp
loope
ja
sbb
imul
adc
test
inc
add
gs
sub
sbbl
xlat
cwtl
sbb
push
pop
lock
lea
sub
int
mov
or
sbbb
ljmp
push
adc
xchg
scas
aad
or
mov
dec
mov
jg
test
cld
sub
insb
push
xchg
stos
jns
jmp
cmp
shlb
mov
cltd
loopne
shll
and
cmp
push
dec
adc
jg
aad
push
xor
fistpll
std
or
lods
jo
in
icebp
outsb
or
cli
sub
hlt
dec
pop
adcl
adc
popa
aad
js
and
mov
xor
jg
sbb
mov
in
jbe
scas
aad
daa
daa
mov
fdivr
inc
xor
hlt
mov
add
stos
or
test
jle
fisubs
add
scas
pop
les
jp
in
or
scas
pop
fcoms
and
mov
xchg
daa
jnp
adc
push
adc
push
dec
jae
aam
ja
sbb
mov
outsb
cltd
shr
dec
pop
inc
dec
fcoml
push
push
add
ret
push
pusha
xchg
or
push
iret
push
out
push
int3
orl
mov
faddp
mov
jbe
fnstenv
xchg
sub
mov
adc
into
sar
xor
mov
mov
xor
pop
dec
adc
es
cmc
fldenv
push
jbe
in
shld
jge
aaa
xabort
clc
outsl
shrb
cmp
cmp
cmpb
sahf
add
add
into
dec
and
push
rorl
sub
mov
pop
xchg
and
test
dec
xor
sbb
mov
lcall
add
mov
mov
pop
lret
sbb
xor
dec
in
sub
inc
xor
add
enter
loopne
loope
push
pop
fdivp
movaps
sub
pop
ret
pop
and
mov
jl
adc
outsl
fsubs
and
sbb
ja
add
insb
sub
scas
roll
or
in
andl
or
sub
pop
push
adc
inc
fildl
outsl
and
cmp
loopne
fwait
in
ss
xchg
adc
imul
mov
test
xor
inc
addr16
fwait
xor
or
loope
fcomp
pop
xor
or
in
and
add
clc
call
jl
loop
jb
push
fs
aas
push
and
in
lret
mov
sub
jbe
mov
jb
adc
inc
mov
xchg
call
fsubl
or
outsl
aaa
addl
repz
icebp
stos
adc
and
jmp
loope
inc
orl
inc
xor
dec
in
xchg
adc
mov
icebp
inc
adc
mov
or
mov
and
inc
pop
imul
repz
xchg
lret
jmp
xor
subb
outsb
sbbb
cli
dec
push
sahf
xchg
lret
pop
xor
add
data16
cltd
jmp
and
mov
dec
or
pop
sbbb
ja
insl
jecxz
jecxz
sub
dec
xor
adc
ret
mov
jae
mov
iret
fstps
nop
push
xchg
fcmovu
fidivs
data16
add
pop
mov
addl
test
pushf
dec
sti
mov
pop
lds
xor
add
jle
and
sbb
insb
xchg
cmp
fidivrl
mov
pop
fdivrs
stc
sbbl
imul
in
ljmp
xchg
adc
push
fiaddl
mov
shlb
sub
mov
sub
dec
ffree
or
sbb
or
repz
shl
inc
fwait
cld
cwtl
adc
xchg
fcomps
push
jl
pop
xchg
lods
fsubl
int3
stc
aad
cmp
ffreep
jecxz
sbb
add
xor
mov
and
jbe
sahf
scas
push
les
mov
frstor
or
daa
jp
ds
dec
je
push
cs
movsb
loopne
rcrl
movsb
jae
inc
jle
shlb
imul
mov
xchg
adc
pop
dec
add
lods
int
add
ljmpw
jo
xchg
aas
inc
aaa
repz
call
lock
xchg
pop
stc
mov
pusha
dec
mov
sarb
mov
jns
or
stos
gs
push
inc
cmpsl
jbe
sub
mov
stos
jbe
scas
adc
add
int
lock
push
jmp
in
jmp
je
xchg
xadd
mov
mov
adc
jle
jbe
sbb
hlt
inc
es
pop
xor
nop
add
iret
jne
movsl
insb
scas
xchg
inc
adc
pop
fidivrs
xor
xlat
clc
les
movsl
and
outsl
arpl
pop
dec
sub
enter
and
or
fisttpll
xchg
jp
pushf
mov
sbb
dec
mov
ds
daa
ja
sub
inc
mov
scas
push
lods
jbe
mov
in
adc
out
jmp
and
data16
aam
scas
dec
adc
out
in
loop
and
sti
and
cmp
jmp
cmpsb
ficompl
xor
fwait
xor
rolb
cwtl
aam
dec
out
jns
pop
adc
cmp
add
sahf
lret
mov
sbb
nop
add
daa
aam
mov
das
mov
and
out
cwtl
mov
iret
dec
sub
clc
lods
dec
ficoms
mov
dec
pop
xchg
rorb
jns
sbb
cmpsb
mov
jne
xlat
cli
movsl
cli
mov
sub
cmp
int3
mov
cs
sbb
xor
jne
out
and
arpl
fdivrl
repz
loopne
inc
mov
repnz
in
rcrb
xor
pushf
movsb
adc
aad
stos
xchg
daa
popf
fcoml
cmp
stos
jl
out
pop
inc
pusha
shl
icebp
js
mov
movsb
mov
test
add
pop
pop
pusha
adcb
fistpll
cmpsl
sub
add
enter
ljmp
mov
add
push
mov
dec
inc
rcll
in
push
fisttpll
xor
ret
xor
pop
das
outsb
xchg
out
or
ret
xchg
xor
aad
pop
fimuls
jnp
mov
ja
xor
and
mov
data16
or
imul
xchg
repnz
adc
xor
ds
hlt
sbb
mov
mov
jecxz
xor
dec
push
mov
add
stos
daa
push
loopne
pop
dec
loopne
jb
jg
clc
pop
push
data16
sub
inc
dec
mov
aas
or
and
icebp
fwait
ljmp
push
dec
movsl
xchg
or
add
and
xor
add
clc
lret
inc
inc
jb
out
or
mov
lods
xchg
mov
dec
jp
shlb
test
jne
test
push
dec
xor
push
xor
pop
in
ds
cltd
scas
orl
dec
rcr
sbb
fcomps
sub
jo
iret
inc
cltd
rorb
mov
jg
popf
hlt
add
rolb
push
lahf
insb
jbe
dec
pop
push
sub
adc
popf
inc
test
dec
pop
push
daa
or
xor
les
cmp
pop
xchg
cmp
and
push
push
pop
pusha
stos
lcall
mov
inc
enter
sub
lcall
sarb
enter
xor
leave
push
fcomip
mov
cmp
out
mov
push
add
adc
add
dec
loop
mov
or
fucom
jg
stc
jmp
sbb
pop
mov
push
ret
add
gs
or
adc
and
mov
xchg
pop
sbb
mov
outsb
cltd
sbb
ja
fwait
xlat
fadd
test
iret
out
lahf
jae
or
call
fdivrs
inc
out
mov
or
ret
lret
pop
mov
addr16
out
std
ljmp
out
inc
xlat
mov
adc
movsl
mov
jmp
in
cli
add
shrb
mov
pushf
cmp
rorl
add
pop
mov
js
jecxz,pt
scas
pop
or
shll
test
mov
cmpb
jae
scas
icebp
xorb
pop
jbe
mov
mov
mov
jmp
ds
mov
popf
mov
sub
fistps
xor
push
or
cmp
lock
jne
int3
jne
or
shlb
in
push
mov
xor
xor
insb
scas
mov
inc
gs
inc
or
xchg
pushf
in
jle
inc
test
lds
insl
mov
dec
mov
push
mov
mov
insl
and
test
dec
cmp
bound
jp
mov
scas
sbb
push
cmp
rorl
aaa
mov
mov
cmp
bound
into
lea
aas
outsl
jno
mov
nop
pushf
les
cmp
out
std
mov
cmpsb
pop
push
jbe
lahf
and
jo
or
add
lcall
mov
push
shlb
and
imul
mov
sarl
xchg
ret
test
into
fcmovbe
comiss
loope
test
movsl
lods
mov
in
xchg
scas
fstpt
ror
aas
or
push
pop
pusha
mov
sahf
fisubrs
adc
shlb
xor
mov
test
cltd
or
xchg
adc
mov
pop
inc
ja
loope
faddl
jle
mov
js
cmp
stos
fstpl
sahf
negb
mov
dec
sub
and
cmp
dec
daa
fiaddl
movsl
jo
addr16
std
cmp
out
xchg
jl
addr16
pop
mov
pushf
sub
add
adc
pusha
inc
loopne
mov
fsts
mov
mov
pop
xlat
addr16
dec
mov
dec
nop
bound
lods
repz
dec
mov
mov
xor
or
nop
pushf
fbstp
cli
add
add
les
push
mov
in
xor
sub
pushf
sbbb
and
mov
inc
xor
std
adc
dec
ja
negb
mov
mov
dec
imul
outsl
xor
adc
xchg
push
jge
aas
lahf
outsb
or
ja
int3
cmpsb
add
popa
adc
pop
adcb
ficoms
and
outsl
fiaddl
push
popf
xchg
sbb
in
and
sub
insl
inc
imul
lods
mov
inc
add
jae
roll
jge
adc
scas
push
fsubs
add
lret
inc
shr
testb
inc
and
adcl
or
lock
mov
push
jecxz
incb
jmp
aas
jbe
xor
ja
popa
jle
adc
jmp
jp
andb
sti
mov
jb
inc
idivb
xchg
adc
push
fcoml
add
call
gs
mov
and
into
iret
pop
scas
mov
mov
sti
and
rclb
mov
cmp
movsl
xor
mov
mov
fwait
mov
push
inc
lods
dec
nop
das
dec
arpl
pop
aad
jg
or
dec
cmp
mov
pop
data16
jg
xor
repz
xchg
stos
in
int3
fstps
pop
dec
adc
out
pop
mov
xchg
mov
add
loope
jecxz
bound
mov
inc
jne
mov
mov
mov
fstps
jb
and
daa
push
dec
mov
jnp
dec
xchg
pinsrw
mov
pop
je
insl
inc
scas
in
test
push
fstl
dec
lds
add
lods
or
xor
cld
jge
nop
inc
fisttpl
sbb
test
push
rcrl
push
data16
imul
push
adc
lcall
std
in
sub
adc
js
push
pop
cmovle
sbbb
and
popa
ljmp
sti
test
or
xor
int
or
sub
add
adc
inc
ret
mov
mov
jo
das
push
stos
and
stos
and
dec
or
je
dec
dec
pop
sub
mov
sbb
mov
test
icebp
xor
push
arpl
xchg
sbb
fwait
push
mov
mov
add
xchg
xchg
and
cwtl
mov
mov
xor
lea
push
xchg
inc
leave
push
or
jbe
dec
mov
fldcw
mov
jge
xchg
cmp
dec
mov
inc
test
dec
movsl
push
mov
pop
adc
sbb
jecxz
leave
sub
mov
shl
sbb
or
push
or
cld
jno
push
insb
popa
lds
push
mov
cmc
push
pop
pop
std
sbb
push
ret
test
inc
lret
out
mov
xor
lods
push
push
inc
adc
in
pop
push
aas
mov
insl
out
cltd
push
and
add
jp
lods
xor
xchg
sub
xor
clc
push
je
pop
cltd
enter
bound
xlat
out
lret
mov
pop
cmp
xchg
mov
mov
xchg
add
dec
adc
rol
in
lcall
xorb
pop
xchg
and
xor
jns
mov
jp
sub
inc
scas
jae
xchg
sub
sbb
adc
lahf
add
push
cltd
sbb
xchg
rolb
aaa
sbb
mov
repz
je
in
or
cli
hlt
or
mull
pop
out
test
mov
icebp
ss
into
movsb
leave
inc
jbe
sar
rorl
sub
or
lret
rcrb
cmp
and
hlt
enter
loope
ret
add
and
insb
cmpsl
push
dec
dec
fwait
push
fldl
das
pop
pop
mov
cwtl
pop
xchg
cmp
out
mov
loop
mov
je
xchg
inc
fistpll
out
xchg
sti
mov
mov
nop
cld
cmp
mov
test
pushf
xchg
xor
cmp
fucom
pop
inc
nop
leave
add
jo
leave
daa
pop
repnz
lret
adc
xchg
dec
or
scas
lfs
xchg
sub
xchg
jno
call
enter
mov
xchg
test
mov
or
cli
mov
mov
pop
cmpb
fdiv
xchg
jp
add
dec
xor
sub
stos
das
js
int
adc
fildl
dec
lcall
sahf
jle
dec
push
subb
dec
adc
fildll
test
mov
sub
push
scas
out
loope
add
add
das
mov
xchg
rorb
mov
lret
leave
cmp
adc
sub
imulb
aad
jne
insb
or
lahf
mov
pop
fldl
shr
nop
aas
loop
jno
cmc
mov
in
cmpsl
jmp
inc
jo
rol
int
insb
sbb
jg
andb
sbb
xchg
and
je
ret
imul
push
pushl
sub
sub
in
stos
arpl
mov
stos
fsubr
xchg
dec
mov
pop
div
out
xor
cmc
push
add
pop
push
sub
mov
xor
divb
add
icebp
jae
shrb
jmp
stos
xchg
xchg
lods
bound
xchg
pop
adcl
mov
jne
loope
nop
mov
and
xchg
add
mov
cmc
sahf
lcall
fimull
cmpsb
gs
jb
inc
das
xchg
sbb
outsb
adc
shrb
popa
jge
cltd
or
jae
mov
and
mov
scas
xchg
mov
fdivrp
in
xor
xchg
lds
outsb
hlt
inc
insl
mov
in
daa
sbb
test
std
mov
test
or
inc
into
out
out
dec
test
test
xchg
mov
inc
xchg
lret
jb
data16
xor
mov
sbb
mov
int
add
xchg
aaa
and
push
add
jb
push
in
adc
jge
daa
int3
and
mov
das
or
sbb
sarb
or
cmpsb
bound
cmp
int3
lcall
push
fsubs
addr16
xor
ljmp
sbb
xor
mov
fisubl
std
xchg
sbb
add
test
rcrl
mov
lcall
mov
fisttpll
aam
lret
xchg
stos
mov
push
loopne
rcrl
aad
jne
sbb
nop
add
sar
iret
mov
push
ljmp
mov
mov
in
xor
ret
pop
mov
mov
xchg
outsb
test
sub
les
add
cmc
sti
pop
loop
jecxz
loope
pop
push
test
js
add
insb
or
fiadds
in
orl
out
inc
scas
pop
cmpsl
into
int
jnp
jbe
push
sub
dec
and
cmp
loop
push
xor
sub
add
ret
bound
push
es
dec
mov
push
insb
sbb
sbb
xor
shrl
mov
std
pusha
aad
cmc
loope
mov
lock
call
push
stc
rol
div
cmp
xor
loope
icebp
pop
pop
mov
fisubrl
xchg
stos
pop
fstps
ds
inc
inc
outsb
loopne
adc
test
fwait
jmp
add
pusha
lret
js
scas
test
jo
adc
xor
add
xchg
cltd
mov
sub
cmp
push
push
jae
clc
dec
xchg
mov
dec
cmpl
daa
leave
cwtl
push
mov
or
push
inc
das
das
sbbl
adc
pop
lahf
jg
ds
les
out
cmp
test
pushf
jnp
outsb
pusha
xorl
xor
stos
mov
mov
mov
ret
xchg
ret
sub
loopne
adc
rolb
loop
pop
push
addl
call
pop
nop
cmpsb
loope
and
jno
fstl
fwait
pop
inc
mov
cltd
mov
xchg
adc
push
insb
and
cmpsb
jp
ficompl
filds
mov
popf
ja
cmp
in
ret
arpl
xchg
jns
popf
das
loop
out
sbb
inc
aad
sbb
fdivrs
pop
idivb
pop
sub
sub
mov
negb
stos
scas
mov
hlt
xor
enter
mov
scas
push
sbb
mov
sub
mov
jg,pt
lcall
movb
push
ficomps
data16
add
dec
scas
lods
cmpsb
adc
inc
shlb
mov
insb
cmp
shl
push
inc
inc
out
out
int
mov
xor
inc
shlb
test
mov
addr16
push
push
add
icebp
fisubrl
pop
cmp
xchg
cld
arpl
cld
add
movsl
in
push
daa
ljmp
test
sbb
stos
sbb
cmp
inc
mov
repnz
lcall
jmp
js
dec
jp
pushf
jns
cltd
iret
lods
sub
cmp
cmp
cmp
adc
jp
or
call
jmp
push
dec
popl
addr16
loop
inc
das
imul
imul
cli
rorl
mov
add
lcall
add
or
sbb
sbb
into
loope
jl
jne
aas
in
adc
mov
es
lret
pop
add
lret
cwtl
shl
shlb
xor
mov
clc
out
loope
and
and
fbstp
sbb
not
sarl
mov
das
add
repnz
xor
pushf
or
inc
and
test
rcr
jl
loopne
cmc
lahf
fdivrl
push
fimuls
and
add
sbb
inc
mov
jo
popf
xor
or
jecxz
stos
add
js
sahf
push
mov
lock
popa
mov
cltd
adc
sbb
xorb
cmpsb
mov
bound
jge
prefetchw
mov
mov
les
cmp
pop
lahf
mov
push
stc
insl
ror
mov
adc
test
pop
lret
cmpsb
adc
mov
les
sti
xchg
iret
inc
cmp
mov
dec
push
shl
call
cli
loope
adc
lret
sub
or
sbb
push
or
bound
or
mov
jl
and
xchg
mov
mov
push
mov
ret
cwtl
or
jb
subb
mov
shlb
sbb
das
scas
cltd
in
xor
xlat
dec
jb
xor
or
push
rclb
pushf
lcall
add
xor
push
cmpsl
inc
or
rcrl
cmp
sub
mov
jl
pop
pop
dec
shll
in
dec
addr16
xchg
xor
jmp
push
mov
mov
jne
push
inc
lods
pop
jg
or
push
std
jp
test
inc
out
sbb
or
negb
cli
int
data16
cmp
mov
sahf
lock
lret
jbe
iret
lret
inc
jb
inc
mov
dec
sub
lods
jbe
add
nop
clc
into
push
xor
clc
out
and
add
sub
pop
sub
sub
push
jno
push
cmp
cmp
inc
mov
sbb
pop
dec
cmpsb
mov
jp
sbb
mov
lods
rolb
sub
xchg
and
out
aam
dec
jb
inc
push
xchg
arpl
xor
adc
inc
mov
cli
dec
aas
lret
jae
out
test
mov
aad
sub
loop
nop
mov
inc
testl
sbb
stc
add
pop
pop
add
push
push
dec
mov
repnz
and
cmpsl
stos
xor
icebp
sbbl
mov
pop
mov
xchg
jae
inc
mov
pop
sbb
loop
sbb
jne
out
filds
sub
repnz
jnp
jge
call
and
jmp
mov
bound
enter
ja
inc
bound
cmc
loopne
call
rcrb
jge
sub
mov
mov
rcl
mov
sub
mov
outsl
or
cmp
sub
in
cmp
addr16
iret
pusha
mov
mov
lcall
nop
xchg
lret
pop
sub
adc
mov
mov
cmpb
imul
test
adc
fsubrl
popf
ss
add
out
add
dec
and
out
in
mov
in
xchg
mov
in
fldcw
push
out
pusha
ja
ret
mov
iret
fs
add
mov
out
into
pop
or
jne
jg
push
add
call
repz
jl
je
mov
pop
filds
pop
fnstsw
stos
mov
dec
cltd
aad
jl
leave
fstps
filds
ljmp
or
xorb
insb
mov
inc
movsb
fwait
andb
dec
bound
inc
popf
cmp
lock
push
jne
cmp
adc
sbb
mov
mov
sub
xor
jl
in
xchg
pop
jns
pop
out
jmp
fimull
aaa
sti
mov
fimull
imul
ljmp
or
mov
jb
out
sti
leave
cltd
adc
lds
mov
adc
push
cmp
es
cli
ljmp
shrb
xchg
aaa
xor
sti
xor
lahf
inc
nop
sbb
imul
and
repz
cwtl
mov
or
call
mov
insb
aad
xor
mov
sub
jp
mov
or
cmp
cmc
push
jb
xchg
cmp
inc
jmp
out
xor
add
sarl
push
mov
mov
sub
cli
dec
mov
enter
inc
inc
addr16
and
cmp
push
mov
shl
push
or
or
mov
cmpl
and
jmp
sub
mov
fs
add
mov
inc
push
imul
ds
jmp
push
jbe
rcr
mov
push
mov
adc
xor
mov
ljmp
outsl
adc
cmpsb
and
xor
cld
sub
dec
test
pop
test
pop
iret
xchg
repnz
add
jmp
cmc
xlat
mov
adc
dec
pushf
repnz
add
jmp
jge
andb
push
pop
add
cmp
lea
push
sti
sub
decl
lret
xor
repz
daa
in
xor
and
stc
cmpsb
mov
test
and
pop
stos
mov
add
fxch
jnp
dec
jbe
bound
mov
inc
mov
mov
mov
inc
xor
mov
jae
int3
in
test
icebp
mov
inc
add
cmpb
mov
icebp
fbstp
push
lret
jmp
pop
shll
in
mov
sbb
push
push
sub
outsl
jbe
xchg
sub
movb
std
add
les
lods
sub
int3
sub
pushf
push
movsb
out
sbb
xor
xchg
movsl
out
loop
dec
mov
jl
pusha
pop
cmp
jge
jne
mov
and
xchg
adc
jne
sub
dec
aad
loop
orl
jle
loope
or
jo
in
push
out
mov
add
push
or
jl
adc
adcb
es
inc
rorb
dec
loope
scas
add
sbb
outsb
rcr
aas
adc
rolb
mov
and
shl
sub
ja
jl
jb
sbb
mov
sbb
adc
xlat
and
jg
add
lcall
mov
inc
dec
clc
jae
icebp
in
xor
dec
das
je
cwtl
flds
mov
scas
cld
jae
xor
jno
jns
dec
mov
xor
ret
subb
and
cs
xor
add
push
iret
sbb
enter
pushf
cli
mov
lock
sbb
adc
mov
cmp
aam
push
or
jecxz
leave
in
gs
adc
pop
stc
ret
sarb
lcall
and
cmp
mov
mov
inc
mov
daa
pusha
ja
inc
ds
lods
les
cli
or
into
stos
adc
jb
notb
adc
cmp
daa
mov
movsb
push
push
mov
pop
test
xor
adc
push
push
and
lahf
xor
sahf
fcmovnb
mov
lock
jg
mov
fdivl
adc
jmp
fsubl
out
jmp
push
add
loopne
push
std
test
nop
gs
add
dec
out
lods
loop
and
int3
adc
cmp
inc
and
popa
push
fnstsw
gs
ljmp
sub
cli
push
pop
imul
mov
pop
push
testl
push
rcl
push
mov
out
and
dec
movsb
push
dec
mov
mov
xor
movl
insb
fwait
jmp
push
add
sub
mov
jae
inc
mov
jnp
inc
jge
xchg
jns
leave
ja
add
sub
jecxz
in
add
inc
lret
outsl
push
clc
adc
sbb
and
fs
mov
insl
jle
stos
aad
stos
push
pop
adc
movb
je
xor
push
inc
and
and
push
add
cmp
rol
cmpsb
outsb
xchg
mov
fst
xchg
adc
mov
repz
sbb
push
mov
cmpsb
dec
cmc
cmc
or
push
sbb
gs
shl
sub
andb
jbe
stc
and
push
mov
pop
scas
mov
inc
inc
mov
scas
sub
call
cmc
push
xchg
lret
loope
int
or
push
das
out
je
icebp
jb
cmp
push
lahf
pop
cmp
jge
mov
outsb
jl
lds
leave
rorl
xor
dec
pop
leave
inc
idivb
leave
fst
dec
pop
test
push
lret
push
mov
clc
adc
jbe
lock
iret
sub
incb
sahf
cltd
pop
fs
std
out
imul
sbb
jmp
add
sbb
adc
iret
add
sub
or
mov
in
int3
jg
cmpsb
cmp
sub
or
and
xchg
enter
jp
popf
and
in
cs
push
loope
xchg
adc
std
mov
cli
lods
repz
inc
cld
ja
outsl
push
pop
dec
or
add
mov
or
enter
dec
fstpl
dec
clc
nop
xlat
sbb
mov
hlt
pusha
cmpsl
inc
mov
inc
aaa
dec
adc
ja
sbb
popa
in
into
arpl
hlt
idivl
pop
sub
jae
fildl
sti
pop
push
int3
push
push
jp
stos
test
fidivs
adc
dec
inc
jl
insl
and
hlt
aam
outsb
jbe
adc
pusha
sbb
pop
imulb
mov
push
lock
mov
push
push
adc
mov
sarb
loope
lcall
adc
pop
aad
movsb
pop
popa
mov
jnp
add
adc
cmp
sbb
pop
mov
xor
lea
lds
aas
aad
xchg
sbb
or
imul
sbb
or
pop
add
loope
xchg
icebp
mov
push
notl
push
test
add
scas
adc
lock
ffree
cmpsb
cmp
push
push
out
std
inc
sahf
sub
addr16
xor
push
fmuls
movsb
in
adc
jl
in
push
add
mov
fidivrl
rorb
add
push
out
jo
subb
movaps
pop
movsb
bound
fs
xor
push
daa
test
jecxz
dec
jns
dec
mov
dec
push
in
sbb
cmp
fisttpl
pusha
jae
push
aam
sbb
fldl
cld
int3
mov
lahf
sub
imul
repnz
push
sti
bound
outsl
xchg
mov
push
adc
inc
fadds
pushf
adc
scas
xchg
fisttps
mov
add
mov
inc
jle
lcall
cmp
loopne
mulb
pop
mov
insl
and
inc
repnz
incb
insl
push
dec
ljmp
ret
popa
into
stos
push
sub
or
scas
xchg
in
push
mov
cmp
sbb
jecxz
arpl
push
es
cmpsb
aam
ss
ja
sbb
and
cmp
ds
jecxz
push
adc
mov
dec
leave
jne
adc
sub
mov
xchg
xlat
push
mull
ja
pop
movsb
lods
mov
movsb
fisubrl
std
std
sbb
sti
test
lcall
filds
push
mov
sahf
add
addr16
push
mov
aam
icebp
mov
dec
fs
pop
jae
seta
ss
popa
dec
repnz
aas
mov
add
mov
inc
jo
popl
add
loopne
inc
inc
mov
or
fsubs
jbe
jecxz
xchg
push
iret
cmp
fstpl
sub
lret
sbb
jne
out
xchg
jne
addps
js
test
jmp
lret
lret
cmc
inc
js
hlt
dec
aad
mul
mov
dec
inc
cmp
xchg
xor
inc
sahf
jno
or
sbb
mov
jl
adc
jbe
jg
push
sbb
and
cmp
fdivrs
mov
aam
cli
mov
fcmovnbe
cmpsl
pop
mov
xchg
fldt
clc
jle
sub
movsb
dec
sub
ljmp
fidivs
pusha
inc
push
adc
add
icebp
inc
jns
and
jne
xor
fistps
jnp
xor
repnz
mov
insb
sbb
pop
xorl
outsl
iret
jne
jecxz
pop
mov
lods
sub
outsl
mov
cmp
push
pop
push
fs
xchg
dec
mov
push
mov
push
sub
push
ss
or
xor
push
shlb
test
xchg
jb,pn
sbb
adc
es
xorb
jge
ja
mov
inc
fldl2e
ss
rorb
push
popf
mov
nopl
adc
pop
mov
mov
mov
xor
add
out
jp
inc
ret
push
icebp
or
inc
mov
jp
test
mov
loop
xor
insb
dec
adc
mov
test
arpl
push
cwtl
sbb
ja
ror
pop
or
dec
ds
xchg
fdivl
mov
xor
inc
mov
stc
lods
in
xchg
nop
jb
inc
inc
xchg
push
add
xchg
add
and
adc
in
xchg
fadds
jle
and
or
lock
stc
adc
mov
into
cmpsb
fildl
ss
mov
mov
push
push
pop
lcall
lds
fsubs
shrl
insl
ljmp
out
and
mov
jg
jmp
mov
sbb
and
push
sarl
sahf
jge
mov
nop
mov
or
jmp
jns
faddp
popa
and
pop
pop
jl
inc
in
mov
arpl
js
and
xchg
mov
lcall
push
push
scas
push
mov
sbb
daa
out
sti
leave
pop
xchg
mov
or
or
aas
mov
push
cmp
mov
int3
mov
cs
and
cltd
sbb
cs
sub
lret
mov
jg
shr
mov
mov
mov
push
dec
adc
imul
dec
sbb
popf
repz
adc
addr16
in
push
ret
jae
cmp
loop
in
int3
lcall
js
xor
cmpsb
xchg
cmp
jge
sbb
and
mov
addb
ret
jno
pop
push
out
insl
push
and
push
sahf
sbb
repz
cmp
push
or
cmp
jns
test
ljmp
out
xor
jb
cmc
cmp
inc
fs
pop
ret
mov
adc
and
ficompl
mov
cmp
xlat
clc
fcmovnbe
jb
idiv
sub
xchg
cmp
pop
sub
pop
push
scas
xor
repnz
sub
jno
xor
push
jno
add
cltd
xchg
sbb
xor
loop
xor
xchg
mov
shlb
adc
stos
sar
sub
lods
mull
bound
clc
push
je
aas
cmpsl
loopne
xchg
push
lret
add
fwait
ljmp
sahf
xlat
pusha
fnsave
rcll
in
xchg
cmp
or
and
and
xor
fldenv
dec
fisttpll
jmp
xor
into
cmc
fcom
mov
int3
inc
push
mov
sbb
pop
pop
std
scas
test
cmp
lcall
ficomps
je
mov
mov
push
sub
push
neg
fwait
icebp
out
mov
dec
mov
pop
lahf
pop
mov
cwtl
push
pop
imull
or
and
ret
rol
mov
lods
pop
push
mov
lahf
xchg
mov
aad
cmp
pop
inc
cmp
mov
notb
cwtl
loop
das
and
mov
fcoms
insl
jg
lods
rolb
fmul
and
je
int
dec
cmpsl
pushf
ret
cli
or
sbb
mov
pop
pop
dec
pop
inc
aam
das
fcomps
fcmovb
nop
lods
cli
loop
pop
js
xchg
std
xor
or
cmp
dec
xchg
pop
adc
cmc
xor
sarb
or
insl
sbb
cltd
push
pop
scas
cld
cli
jle
repz
inc
sbb
jmp
aas
adc
dec
sub
mov
das
inc
inc
lcall
cmp
adc
cmp
rclb
xor
mov
sbb
fisubs
dec
add
lods
push
sub
xor
xchg
dec
cmpsb
xchg
xchg
insb
les
mov
mov
xchg
mov
inc
inc
push
cmp
cmp
frndint
mov
lahf
shlb
inc
stc
mov
cmp
cld
push
fimuls
add
or
mov
jg
test
mov
push
scas
push
xchg
iret
inc
jle
nop
pop
push
out
xchg
int3
and
testl
push
inc
mov
mov
daa
cld
pop
or
add
in
adc
mov
arpl
rcrl
das
mov
jno
sub
scas
repz
or
mov
mov
testl
lret
sbb
lret
imul
and
xor
mov
in
mov
push
in
clc
and
cmp
pushf
icebp
sbb
insl
mov
pop
fiaddl
arpl
inc
inc
xor
inc
push
inc
adc
cmpsb
mov
and
mov
int3
mov
js
mov
idiv
adc
cs
ss
mov
fs
and
mov
aad
bound
testl
pusha
jp
loop
push
mov
mov
fisubs
imul
addr16
adc
sub
xlat
xchg
mov
sbb
push
mov
inc
cmpb
out
test
aam
push
ss
mov
lea
fwait
sarl
jo
mov
cmp
lret
test
mov
jb
fwait
insl
test
adc
jns
dec
pop
outsb
xchg
imul
jecxz
std
shll
fsubr
jo
jno
daa
inc
ja
in
jmp
push
mov
sub
pop
divl
je
into
arpl
dec
scas
aaa
mov
xchg
or
sub
push
inc
mov
push
aam
sub
imul
mov
lcall
sub
xor
mov
movsl
sub
into
out
ja
insb
push
xchg
and
sahf
sbb
inc
mov
ss
outsb
dec
pop
or
and
push
mov
pop
mov
mov
sbb
add
mov
repnz
orb
or
fs
pusha
and
les
sbb
cmpl
sub
adc
and
lods
sbb
das
xchg
cmp
sbb
mov
jo
mov
push
add
cld
sub
arpl
inc
pop
push
push
inc
jmp
push
xor
jnp
xor
inc
lods
fsubrs
sahf
push
jns
rcl
or
maxps
in
mov
pop
insl
ss
fsubl
fcoml
outsl
pop
icebp
nop
pushf
mov
add
das
xor
or
loope
pop
loop
pop
fwait
arpl
sbb
xor
cli
xor
mov
pop
and
or
sbb
out
enter
int3
sub
movsl
xor
push
clc
int3
outsb
sub
lods
insl
or
dec
and
imul
fimuls
aaa
xor
jmp
pop
mov
mov
rcll
lds
fidivs
push
dec
pop
pop
adc
jbe
mov
jmp
adc
insl
xchg
pop
cmpsb
lods
in
push
leave
das
orb
inc
rclb
aaa
iret
and
pop
inc
in
repz
lret
pop
popf
pop
sbb
sub
adc
aam
fstl
in
and
adc
dec
or
icebp
xchg
fistps
xor
dec
imul
in
inc
rcrb
xor
ss
ds
fidivrs
mov
add
and
jae
mov
rclb
jge
fs
pop
ljmp
push
xchg
cmpsl
cwtl
lret
negl
testl
lret
push
pop
or
lcall
in
cli
push
mov
xchg
in
inc
outsl
adc
push
inc
cltd
test
aaa
repnz
insl
push
insl
push
repz
dec
and
xchg
xchg
inc
inc
xchg
cli
mov
mov
test
in
out
cld
nop
sub
ss
push
outsl
mov
loope
lcall
popf
adc
sub
dec
xor
rcrb
lea
int
lahf
or
jecxz
mov
imul
cmp
fsts
mov
sub
fildll
in
shlb
push
ds
lock
iret
aad
in
sub
test
enter
dec
xchg
pop
jno
imul
lret
or
sbb
pop
stos
orl
or
fwait
adc
addb
pop
imul
or
sbb
adc
aad
xchg
sahf
in
cmp
and
sbb
andb
inc
fbstp
pop
movsb
jmp
xchg
icebp
mov
fwait
imul
adc
xchg
push
in
repz
in
jmp
jns
mov
ss
int
dec
push
out
sbb
movsb
jno
or
mov
mov
test
jnp
loop
dec
lods
stc
std
stos
lret
or
dec
lcall
jb
aam
insb
sub
ja
mov
xchg
cwtl
and
into
xor
imul
fcomps
sub
iret
movsl
cli
clc
cmp
or
lcall
ljmp
inc
out
jmp
mov
into
cmp
push
mov
mov
ficomps
mov
daa
or
scas
int3
in
inc
push
outsb
stos
sarb
sub
mov
repnz
add
xorb
scas
or
xchg
or
in
xchg
and
mov
das
aam
jg
sub
incb
ss
sbb
subb
lea
jnp
sbb
sbb
ficomps
cmpsb
lock
out
adc
sbb
sub
jg
push
movsb
xlat
adc
jp
insl
test
cmpsb
inc
outsl
or
push
dec
outsl
sub
inc
out
xchg
fisttpll
pop
out
in
xlat
jo
xchg
mov
mov
test
xchg
in
pusha
dec
sub
sub
jge
or
aas
imul
nop
sub
lahf
pop
and
inc
push
jmp
test
jl
and
mov
pop
idivb
aad
stos
mov
ds
call
ja
sti
push
mov
fsubrs
lods
je
cli
xor
jmp
dec
lods
aam
aaa
sbb
adc
push
sbb
pop
aad
inc
pop
aam
pop
flds
into
jno
add
push
add
popf
lea
mov
xchg
adcl
cmpsl
and
pop
jmp
push
cmpsb
xor
add
jl
mov
mov
ja
mov
push
xlat
jo
mov
pop
mov
es
xor
adc
lret
dec
jmp
sbb
movsb
dec
rcr
add
mov
popa
jmp
push
pop
dec
jb
xor
ljmp
mov
repnz
adc
addr16
mov
out
call
xchg
pop
sub
lret
das
lods
sti
outsl
push
movsl
sarb
jge
test
in
stos
pop
xchg
and
xchg
fistl
mov
mov
jnp
orl
ds
cmc
lock
inc
stos
pop
call
mov
insl
bound
sub
cmp
les
stos
sbb
shr
loope
and
or
inc
jle
or
sahf
sbb
adc
add
movsl
push
fs
dec
mov
cmpsb
jle
imul
sti
sub
adc
cltd
fsts
and
pop
popa
pop
or
int3
or
fmul
xor
mov
outsl
lds
lods
push
or
pop
fldt
xchg
cld
imul
outsb
or
push
clc
push
pop
stc
js
and
dec
clc
ret
pop
lds
int
adcl
push
xor
shrb
xor
pop
loope
js
outsl
test
adcl
shll
or
mov
mov
sub
push
lods
dec
ja
sbb
sub
scas
inc
repnz
outsl
test
or
lods
mov
aaa
push
sbb
imul
or
mov
fidivs
and
fnstsw
sub
sbb
in
ds
les
cli
imul
xchg
rorb
pusha
sbb
loop
mov
ret
push
mov
sbb
aaa
es
daa
movsb
dec
shrd
adc
or
xor
aaa
or
mov
out
jecxz
push
dec
pop
data16
insb
popa
push
pop
mov
fcmove
sub
mov
fcmovne
inc
or
pop
lock
jo
cli
sub
addr16
jbe
cmp
lods
cmp
push
bound
add
jp
cmpsl
adc
stos
mov
sbb
mov
ret
cmp
sub
sbb
push
pop
mov
dec
jecxz
mov
in
divb
and
sbb
dec
mov
sbbb
dec
cmp
les
inc
cwtl
jae
xchg
in
push
mov
sub
push
push
cmp
fwait
mov
stos
push
shr
or
mov
lcall
stos
aas
jnp
cld
inc
paddusb
pop
movsb
in
fmull
lcall
lea
xor
or
jl
pinsrw
sub
pop
or
imul
jb
lahf
gs
mov
mov
ret
scas
xchg
pop
test
ss
fldlg2
and
in
nop
mov
pop
mov
dec
int3
dec
repnz
add
in
lahf
pop
inc
movsb
div
dec
xchg
int
mov
dec
dec
xchg
mov
outsl
dec
lret
push
xor
sahf
and
and
pop
xor
sub
lret
mov
js
mov
sbb
icebp
sub
xor
sbb
push
fldcw
inc
cwtl
adc
xchg
cmp
and
push
loop
sarb
subl
xchg
ret
jno
insb
nop
xchg
push
pop
call
lods
inc
js
enter
adc
stc
adc
inc
add
js
mov
mov
into
inc
sbb
loop
sarl
popa
and
daa
test
jg
leave
scas
jg
push
movsb
lods
or
out
inc
push
lods
adcb
out
fs
xchg
lret
shr
cmp
cmp
js
inc
int3
aam
push
jl
add
jnp
sbbl
add
inc
out
jne
pop
sub
pop
push
or
enter
fisubrl
jae
xchg
shr
mov
push
inc
lea
add
aad
push
pusha
push
in
sbbb
stos
fistps
pop
hlt
cli
inc
push
or
inc
ss
or
push
push
shll
and
mov
hlt
clc
xchg
pop
xor
cs
das
inc
scas
sbb
mov
add
push
push
repz
lret
mov
add
cmpsb
adc
dec
xchg
div
xorl
fnstcw
lock
jno
dec
arpl
jno
das
es
lods
out
enter
pop
mov
fisttpl
or
fsubs
in
cld
rolb
add
cs
test
xor
jae
lock
or
aaa
es
sub
xor
test
jo
sbb
fdivrl
fadd
adc
into
sbb
sahf
adc
idivb
pop
push
push
clc
scas
fdivp
aas
add
push
sub
outsl
cmp
and
pop
mov
push
push
fwait
lock
sub
mov
loope
mov
out
imul
ljmp
mov
arpl
cld
popf
pop
mov
jge
jmp
ffreep
xor
sub
dec
and
push
add
test
call
aaa
cmp
xchg
testl
arpl
in
mov
xor
sub
mov
sub
xor
repz
stos
lock
sbb
inc
inc
add
sbb
adcl
aam
loopne
cli
cld
push
or
jae
jl
in
sub
nop
push
add
sbb
cwtl
push
pop
xchg
jbe
mov
ret
mov
add
xchg
mov
ja
lret
lret
out
pushf
sbb
js
xchg
add
sbb
fdivrl
mov
out
xchg
add
adc
push
pop
in
cmpsb
fstpl
xor
pop
jb
lock
push
sub
xor
sahf
jbe
ret
or
shll
mov
pop
add
lea
or
xchg
fwait
pop
testb
jmp
ret
mov
mov
into
xchg
arpl
push
or
dec
ss
test
andb
sbb
ljmp
jecxz
loope
dec
je
cmp
pusha
into
shlb
mov
clc
inc
std
in
clc
mov
aad
out
jno
jmp
sti
insl
pop
mov
pusha
fsubrl
pop
call
in
adcl
movsl
scas
movsl
jo
push
sbb
and
push
mov
mov
inc
xor
repnz
pop
enter
and
insl
outsl
call
test
sub
aaa
popf
jg
add
fmul
xchg
xlat
popa
fdivrl
pop
lea
push
fisubrl
pop
shlb
test
idivl
insb
test
imul
pusha
mov
jae
pop
push
adcl
stc
xor
or
frstor
and
test
cmc
std
movsl
ljmp
cmp
push
xchg
pop
sbb
cmp
loopne
aaa
mov
adc
pop
pop
pop
in
out
ja
jg
stos
testl
xchg
movsb
adc
call
clc
cltd
sbbl
out
xlat
in
in
or
leave
sub
xchg
pextrw
gs
push
push
out
mov
aas
ficompl
xchg
cmc
pop
jle
cltd
and
fwait
add
rcrb
int
je
dec
lret
and
call
imul
mov
cld
pushf
jle
xchg
les
es
stos
add
scas
lea
lds
mov
imul
xchg
movsb
xchg
fs
xor
ret
dec
cwtl
pop
rcll
ds
jne
xchg
xor
outsl
in
dec
mov
push
scas
mov
ss
mov
orl
adc
jbe
loop
sti
cmp
cmp
inc
pop
pop
imul
sbb
in
fisttpll
out
in
test
dec
sbb
or
sub
pop
inc
or
mov
mov
fstl
in
outsb
mov
cmp
dec
jno
cmc
dec
mov
jle
xor
in
incb
mov
fldl
out
pop
orb
push
sub
inc
pop
jecxz
mov
add
in
xor
xchg
dec
bound
in
xchg
in
pop
fcoml
std
outsl
shlb
mov
sub
scas
cmc
outsl
ficomps
push
out
arpl
nop
cmpsb
call
pop
jp
jp
sbb
addr16
sbb
xor
insl
sub
das
pop
xchg
and
jge
jge
mov
or
pop
jae
enter
outsl
clc
pop
into
pop
xchg
lock
dec
and
sub
imul
daa
das
jmp
sbb
xchg
xchg
xchg
arpl
stos
xchg
mov
lret
call
xor
xlat
mov
cmp
repnz
cld
in
retw
dec
push
xlat
pop
js
into
push
xor
add
daa
inc
xor
dec
xchg
push
mov
adc
jecxz
mov
adc
jns
xchg
dec
into
jns
sbb
and
jb
or
add
popf
xor
pop
leave
sbb
nop
movsb
cmp
add
test
cli
nop
sub
fstl
sahf
fidivs
ret
add
test
adc
add
add
push
mov
pop
sbb
loop
mov
cmp
insl
jg
aaa
fisubrs
xchg
pop
dec
pusha
jo
stos
xchg
jecxz
xchg
ss
push
sub
push
inc
subb
inc
sahf
fmul
out
movsb
jb
push
nop
sub
loop
negl
mov
mov
or
movd
das
sub
mov
sub
sbb
push
cld
jo
aam
test
or
mov
cmovp
cltd
or
mov
shrl
adc
and
enter
inc
mov
push
mov
jne
push
into
int
cltd
sub
fstpl
das
dec
mov
jmp
and
dec
cmc
fistpl
mov
stos
stos
cld
mov
cmp
clc
aaa
ljmp
popa
mov
jnp
or
jbe
es
cmp
fadd
mov
and
push
jecxz
mov
mov
dec
push
aam
bound
leave
sbb
lahf
mov
xchg
and
mov
mov
repz
stos
sub
sbb
adc
add
not
and
mov
rcrb
sub
jo
pop
leave
adc
decl
lret
pop
fwait
push
mov
jge
into
out
inc
pop
sbb
inc
sub
inc
cs
or
fs
iret
sbb
inc
push
jge
jbe
jmp
adc
adc
cwtl
add
and
jbe
aad
imul
sbb
cwtl
inc
cmp
pusha
cld
es
cmp
cmp
adcb
scas
and
call
scas
nop
popf
mov
insl
sub
push
cwtl
inc
dec
movsb
push
jp
mov
iret
dec
das
and
ljmp
adc
call
roll
testb
pop
pop
xor
decb
repz
sahf
es
jle
inc
sub
jae
je
sub
push
add
test
stos
test
cmp
je
cmp
popa
iret
xlat
mov
push
ljmp
fldcw
inc
out
adcb
and
add
data16
mov
cli
enter
insb
sbb
adc
in
pop
jl
lock
add
call
or
mov
mov
in
push
add
xchg
and
and
jmp
test
loopne
dec
push
test
fnstenv
stc
orl
stc
and
and
loopne
and
les
push
add
out
inc
inc
stos
mov
iret
sub
out
xchg
xor
xchg
jecxz
cmpsb
int3
int
xchg
lods
inc
push
add
pop
sbb
push
pop
aaa
sti
lret
mov
ljmp
out
and
mov
jle
fs
mov
and
sbb
ret
mov
add
dec
sbb
push
add
sub
mov
pop
cmp
aad
sub
div
dec
adc
jmp
or
inc
lods
xchg
lahf
mov
xor
cmpsl
xchg
cmp
pushf
cmp
push
mov
jmp
int3
mov
repnz
repnz
aaa
ljmp
or
xchg
dec
pop
ljmp
jae
and
jb
add
mov
stc
dec
xor
mov
divb
adc
mulb
jae
sub
fcompl
repnz
adc
xchg
push
jg
and
cmp
mov
mov
mov
add
xor
sub
cwtl
stos
mov
pop
jbe
addr16
dec
pop
addr16
add
xchg
jae
js
test
fistpll
mov
jg
jg
imul
push
cmc
mov
fs
ret
inc
mov
stc
pop
push
test
daa
mov
cwtl
fldt
mov
push
cmp
sti
js
loopne
in
push
dec
mov
mov
cmpsl
push
outsl
add
lods
push
jge
fldz
inc
aad
out
add
xlat
xchg
mov
jns
in
pusha
push
and
jnp
lock
imul
push
aas
loopne
adc
xchg
add
cmp
fsubl
pop
pop
int
jg
addr16
pushf
jg
pop
sub
imul
dec
adc
or
mov
rorl
xor
xchg
shrb
sub
xor
data16
cli
test
insb
lret
int
pop
cmpl
outsl
mov
repnz
and
or
rol
sub
jmp
loop
movsl
sbb
popf
dec
rorl
xchg
call
idiv
fldcw
aaa
dec
ret
inc
in
push
insb
jl
loopne
jb
jecxz
pop
arpl
adc
hlt
outsl
daa
jmp
jnp
push
lret
ss
popf
frstor
and
mov
loope
ret
adc
cmpsl
out
lea
adc
sub
shll
ss
or
mov
mov
sbb
fcompl
mov
xchg
dec
bound
mov
loope
cmp
fstpl
mov
cmp
rorb
add
and
pop
sbb
xchg
cmp
test
pop
sbb
dec
notb
push
fdivr
and
push
rcrl
test
ret
adc
arpl
out
sti
jl,pn
data16
mov
jns
dec
and
pop
inc
and
pop
jecxz
lods
jp
jnp
stos
loop
test
rol
mov
mov
out
sbb
sbbl
test
ror
dec
inc
or
dec
insb
add
fwait
jo
flds
mov
lret
pop
add
add
pop
push
ret
fisttpl
cmp
sbb
cwtl
aas
push
xor
mov
fcoml
lahf
sub
pop
dec
fcmovbe
fsubl
sbb
mov
fisttpl
in
sar
aaa
or
test
int3
ljmp
enter
cli
sub
in
imull
imul
bnd
dec
sub
lahf
jne
or
shrb
xor
mov
popf
jmp
js
adc
sarl
pushf
sarl
jno
mov
mov
cwtl
mov
stos
xlat
sub
call
jo
ss
movsb
cmp
loop
cmc
testb
lods
jg
aas
lahf
mov
sub
vmread
push
jg
and
test
or
or
jae
outsl
push
push
dec
jmp
xchg
cmp
fists
cwtl
cs
and
scas
sbb
xchg
xchg
push
xor
xchg
mov
mov
repnz
xchg
enter
pop
int
loopne
xchg
cmp
and
idivb
mov
jmp
jg
push
and
arpl
sahf
jae
sub
rcll
sbb
jmp
sub
imul
lea
inc
gs
jmp
dec
xchg
xor
mul
or
lea
test
or
mov
pushf
xacquire
fs
daa
addr16
mov
mov
mov
flds
rorl
push
sub
loope
pop
pusha
fcoms
mov
adc
jne
arpl
jl,pn
aad
repnz
mov
inc
xor
test
outsb
lods
dec
pusha
mov
inc
sub
xor
testb
xor
rcll
repnz
pop
cmpsb
pop
decb
and
push
shr
mov
out
lds
out
or
in
sbb
mov
stos
nop
sub
je
ret
xchg
leave
out
xlat
in
xchg
dec
adc
jno
imulb
ss
hlt
insl
mov
cmp
inc
cld
mov
and
sub
stos
ja
sbb
popa
xchg
jecxz
loope
loop
dec
pop
adc
push
sub
cld
push
inc
mov
or
or
xchg
shll
inc
mov
lret
out
sbbb
jo
mul
mov
cmp
cmpsl
leave
mov
test
mov
ret
clc
hlt
in
ret
sub
pop
xor
jmp
aas
fidivl
sub
mov
cmp
xor
xchg
pop
push
insl
out
pop
cltd
dec
test
xchg
cmp
aam
or
push
in
jg
push
stos
jecxz
sahf
ds
mov
push
add
xor
dec
out
scas
add
xor
in
hlt
sub
pop
mov
cmpsb
test
dec
dec
sbb
pop
ljmp
insb
je
out
mov
insl
test
into
test
rcl
inc
shrl
shll
xorb
insb
mov
or
ret
xlat
test
int3
jl
lcall
inc
xor
add
and
gs
push
psllw
mov
fucomp
sub
dec
push
mov
push
test
inc
push
outsb
data16
or
dec
pop
sbb
fwait
push
sbb
push
push
idivb
andb
xor
jmp
dec
inc
clc
test
pop
inc
cli
push
mov
fcoms
in
sbb
jb
xchg
jmp
mov
ret
mov
mov
clc
cmp
sub
lock
out
mov
fisttps
aaa
push
inc
rclb
cmp
stc
jle
inc
lea
mov
cmp
adcl
adc
arpl
popf
pop
sahf
je
out
xchg
sbb
fcmovne
adc
push
xchg
fdivrl
push
cmp
ficompl
das
orl
push
jns
pop
cmp
adc
jmp
or
mov
adc
out
addl
ret
enter
fcomps
imul
push
lret
clc
lcall
add
roll
add
sahf
fs
sub
cmp
ja
xlat
push
iret
xor
mov
and
subl
rcll
mov
pushl
and
movsb
jo
push
movsl
vminpd
or
mov
aam
lret
pop
or
dec
jo
ljmp
mov
ret
sahf
add
xor
push
mov
or
add
push
sbb
test
push
outsb
clc
adc
add
sbb
lret
imul
ret
mov
addb
leave
stos
loopne
mov
xchg
mov
add
aaa
mov
mov
nop
and
pop
call
xchg
addl
shlb
mov
fadds
mov
adc
add
sti
mov
adcl
in
int3
scas
stos
dec
repnz
aad
xchg
push
cwtl
xlat
fistl
fcmovne
imul
fldt
cmp
jmp
andb
adc
cmc
push
jns
test
jo
add
iret
mov
xchg
hlt
dec
mov
out
arpl
cmp
into
mov
std
dec
mov
mov
in
stos
in
or
cmp
mov
or
sub
loope
shl
int3
jecxz
jo
add
in
sub
push
jge
iret
int
lds
push
out
and
out
push
cld
fstps
dec
aas
add
adc
pop
xchg
cli
fcoml
jae
and
iret
je
adc
sub
mov
add
pop
adc
add
and
or
push
xchg
bound
stos
mov
and
lods
pop
sub
pusha
jecxz
sbb
stc
clc
jmp
insl
sub
mov
mov
movsl
or
fistpl
test
dec
add
aad
push
sub
sub
mov
shrl
loope
xchg
jl
rorl
sub
mov
sub
daa
icebp
int
pop
in
push
inc
inc
loopne
incl
rolb
cmc
pop
jbe
add
add
rorl
push
stos
cmpb
cmpl
mov
pop
lret
fdivrl
pop
stos
lahf
data16
mov
mov
cmp
xchg
add
imul
cwtl
dec
daa
jp
mov
pop
dec
subb
and
mov
jge
sbb
andl
inc
int
std
pusha
lcall
pop
push
xor
adc
jne
mov
mov
sub
inc
push
js
push
ret
push
pop
push
cld
and
dec
sahf
jg
sbb
pushf
push
or
xchg
xorl
aas
out
sub
in
xor
adc
pop
in
pop
negl
mov
push
cs
jl
dec
mov
mov
or
adc
adc
mov
out
imul
arpl
and
test
insl
xchg
xor
fwait
clc
sub
int
and
pop
mov
hlt
jle
sub
sub
insb
lods
out
in
fsubrs
pop
pop
sub
ljmp
bound
jmp
in
dec
insb
fucomi
fdivrl
repz
add
jb
mov
lahf
cmp
lcall
push
nop
dec
popf
mov
mov
sub
dec
mov
jne,pt
jmp
xchg
dec
fstps
mov
les
sbb
int
scas
sbb
sub
std
shlb
pop
arpl
cmpl
ljmp
sbb
sub
jecxz
cld
mov
div
pop
loop
aad
push
sbb
sbb
daa
pop
jmp
adc
loop
push
aas
ja
jecxz
jp
adc
cmp
xor
push
rol
add
push
cmc
push
xchg
sbb
mov
push
or
mulb
xor
mov
loop
rcl
insb
cmp
push
and
jl
push
jl
pop
jo
in
insl
xorb
inc
xchg
cwtl
xorl
stc
xor
shrd
or
and
pop
cmp
jp
enter
pusha
mov
ficoml
sbb
lods
lock
sbb
movsb
cmp
mov
add
sub
mov
in
lods
out
sub
sub
popf
xorb
sbb
and
mov
sbb
cmpb
mov
pop
xor
xchg
push
iret
icebp
add
loope
aam
in
sub
jno
fisubs
repz
gs
adc
xor
inc
frstor
push
gs
jge
scas
push
unpcklps
jne
jl
dec
add
repz
xchg
push
push
add
mov
mov
dec
fnstenv
stc
jl
or
mov
push
cltd
sbb
xchg
movsbl
xorb
cmp
stc
xchg
aam
cmc
and
adc
aaa
pop
jne
loope
lds
push
jo
cmpsl
cmp
arpl
in
xor
sahf
cmp
movl
rcll
xlat
popa
test
outsb
pop
mov
lret
or
stos
push
sbb
jg
ds
jmp
dec
add
in
xchg
push
lods
bswap
mov
sub
inc
dec
nop
cmp
fnsave
sbb
sub
shrb
test
jne
mov
or
dec
push
aad
add
fsubp
inc
xchg
or
add
rorb
sub
out
imul
dec
mov
fwait
aad
imul
or
fistpl
cmp
jne
test
push
xchg
mov
dec
push
cld
and
mov
outsb
call
incl
jl
or
dec
mov
int
ds
pop
loop
cld
sub
cltd
popf
sbb
pop
sbb
in
out
pop
stc
out
pop
lcall
inc
adc
fldcw
fadds
add
or
int
out
aam
daa
fwait
rcrl
pop
pop
sub
jnp
mov
sub
lea
dec
xor
in
or
mov
xorl
xor
jo
ja
mov
inc
push
lret
fstps
mov
add
test
push
pusha
mov
lret
mov
xor
or
push
xchg
js
mov
sbb
dec
daa
sub
cmp
aam
std
insb
mov
cmp
xor
les
rolb
push
lds
sub
xchg
cli
data16
cmp
xlat
ss
or
mov
arpl
lea
das
repnz
lret
cmp
das
and
out
shrl
stc
leave
fnstcw
imul
add
push
mov
cmp
out
ss
aam
inc
jmp
pop
lret
push
add
mov
imul
pop
dec
jle
pop
bound
ret
pop
push
cmp
mov
int
pusha
setg
xchg
in
stos
dec
xlat
aad
iret
orb
call
push
mov
dec
stc
pop
jno
mov
and
cmp
mov
cs
mov
addr16
aaa
push
jp
cmp
xchg
dec
cli
in
lea
jnp
divb
mov
xchg
and
mov
inc
fs
xchg
lcall
mov
mov
adc
cmpsb
sub
shlb
cli
mov
arpl
into
cltd
test
ficomps
and
cld
fwait
ret
jle
lret
cmp
adc
vmovntps
std
jno
mov
push
and
pusha
mov
ja
dec
mov
das
les
stos
into
push
sub
mov
pushf
inc
pop
dec
mov
dec
stos
or
push
inc
jge
xchg
in
xor
pop
rorb
popa
mov
push
pop
and
add
popa
stos
js
mov
jns
adc
inc
stc
test
xchg
mov
clc
movsl
mov
xor
ja
jmp
mov
pop
xchg
test
ds
sahf
xchg
out
sub
xchg
mov
xor
mov
cs
or
imul
mov
add
or
inc
icebp
or
insl
mov
fscale
stos
push
add
jae
std
data16
loope
mov
xorl
push
pop
mov
leave
jmp
pop
inc
push
xchg
mov
sti
outsb
push
mov
outsb
popf
xchg
xchg
push
mov
push
cmp
inc
push
cmp
rorb
fildll
jle
or
xchg
iret
mov
mov
shlb
xchg
cwtl
adc
mov
cmp
pop
out
dec
iret
mov
push
cltd
cltd
ret
loop
sti
fdivrl
jno
cs
pop
xchg
hlt
pushf
mov
movsl
fwait
add
adc
push
nop
lcall
fbld
stc
imul
aaa
mov
xlat
into
adc
and
add
jle
into
into
dec
movsl
dec
std
mov
dec
xchg
inc
or
jb
dec
nop
inc
ret
ret
lock
and
das
repnz
mov
movsb
addr16
or
xor
sub
lods
scas
mov
or
sbb
xchg
cmp
in
addr16
cmc
pop
dec
arpl
pop
aad
mov
xchg
out
fnop
jge
jge,pn
aas
ficompl
jbe
xor
test
and
dec
pop
loop
cmp
mov
cmp
push
jne
and
repz
call
xor
sbb
cs
jmp
imul
xchg
dec
scas
pop
add
dec
out
ficoml
clc
std
jns
aad
sbb
xor
mov
movsl
idivb
mov
int3
out
mov
pushf
je
inc
lcall
mov
push
clc
sahf
jp
sub
lcall
xchg
aad
mov
sub
es
jns
in
jle
jno
addl
dec
add
mov
pushf
and
insl
mov
jge
dec
roll
pop
mov
outsl
jle
dec
or
dec
sti
enter
mov
out
clc
not
push
jb
sbb
cmp
int
xchg
mov
push
jne,pn
cld
xor
mov
jecxz
mov
dec
add
in
and
mov
jge
cwtl
adc
jmp
cmpsb
sub
je
sbb
pushf
mov
fisttpll
hlt
sbb
push
js
popa
fwait
xchg
jg
adc
je
jnp
mov
jecxz
and
sub
cld
fwait
andl
int3
mov
les
out
jno
sar
std
pop
mov
xor
or
ds
or
shll
adc
lret
insb
xchg
jl
insl
movsb
add
mov
inc
out
xor
arpl
lcall
into
test
fs
sub
std
cmpl
push
pop
and
cmpsl
jge
inc
add
filds
int
aas
testb
adcl
pop
xlat
cmp
aas
cld
cltd
iret
xchg
sbbb
xorb
and
nop
cmp
xchg
leave
xor
jb
mov
pop
fdivrs
loop
sarb
inc
jae
push
xorl
push
sti
cmp
mov
outsl
push
dec
add
mov
push
loop
movsl
lds
push
insb
out
sahf
out
rcll
mov
jne
jge
shl
mov
xchg
push
jl
push
mov
insl
adc
fsub
or
outsb
lods
inc
repnz
dec
xchg
or
testl
inc
imul
sub
js
out
mov
mov
stos
cmp
iret
inc
pop
aam
sbb
cmovo
xchg
pop
mov
pop
jp
rolb
cmp
mov
ds
es
mov
mov
xchg
mulb
dec
shll
addl
test
into
std
inc
push
sahf
out
adc
xchg
sbb
adcb
jne
mov
push
movsb
pop
xor
cmp
mov
cmp
xor
aaa
adc
lcall
xor
and
inc
outsb
adcb
dec
fwait
cmp
mov
je
fs
mov
addl
mov
test
and
hlt
dec
and
xorb
jb
sub
sbb
bound
test
ret
repnz
scas
les
mov
and
push
out
mov
xor
cmp
testl
mov
js
adc
mov
or
ds
loop
xchg
out
mov
das
in
movsl
xlat
lahf
std
fwait
dec
cmove
xor
subb
sbb
mov
cmp
lock
out
cli
cmp
push
inc
fstl
imul
xchg
and
cmp
loopne
sub
call
and
jl
stos
stc
mov
imul
iret
lock
std
add
cmpsl
aad
loope
sahf
pop
mov
mov
in
dec
ret
xchg
sub
fcoms
xchg
dec
movsl
movsl
sub
push
xchg
pop
pushf
cmpb
lock
or
repz
and
mov
aam
cmp
and
mov
stc
int3
test
enter
loop
dec
ss
jl
movsb
xchg
sarb
xchg
xchg
and
mulb
or
sub
add
xchg
lret
enter
sub
push
outsb
sub
xchg
out
or
xchg
sbb
jae
jb
movsl
or
xchg
popa
xor
cwtl
adc
mov
divb
or
xchg
lret
mov
mov
push
out
ds
cld
cmp
and
push
sbb
les
addb
scas
sbb
insl
cltd
and
scas
or
rclb
mov
mov
aaa
inc
add
lret
imul
ret
imul
repz
xchg
pusha
mov
mov
add
and
mov
adc
mov
imul
lods
ret
imul
cmc
inc
inc
jl
push
xchg
pushf
cmpsb
lahf
mov
imul
xchg
jmp
cmp
inc
add
pop
sbb
or
push
lahf
ss
xchg
mov
sbb
dec
mov
and
cmpsb
pop
out
ja
xor
test
pop
push
lock
repz
sbbb
test
lds
mov
popa
add
imul
sbb
xor
mov
sub
hlt
or
inc
push
jle
dec
mov
mov
and
push
mov
xor
fdiv
cmc
and
xchg
mov
inc
sbb
mov
jo
rolb
or
mov
inc
jg
lods
popa
inc
jle
loop
xor
pop
mov
mov
inc
push
out
das
xchg
cmp
rcrl
pop
js
push
pop
mov
mov
ljmp
mov
out
push
cmpsb
int
sets
loopne
cmpsl
cs
pop
sbb
and
xchg
adc
inc
mov
in
imul
rol
mov
and
sti
in
repz
jmp
xor
push
cwtl
cmp
adc
jl
sub
xor
jns
cwtl
mov
insb
out
add
sub
in
icebp
xor
mov
dec
mov
jnp
dec
lock
vxorps
fdivs
inc
add
mov
adc
push
test
xchg
out
and
gs
ds
shll
rorl
sbb
or
aam
pop
outsl
lods
push
add
adc
fsubs
addr16
adc
inc
push
les
xor
and
push
cmpb
shlb
jnp
xor
mov
out
out
and
cs
inc
aas
int3
pusha
je
adc
add
out
jo
sub
jbe
imul
iret
test
shl
adc
inc
sub
jae
pop
ds
jo
adc
je
jb
sub
sti
in
fimull
cmpsl
cmp
dec
daa
int
pop
mov
stc
push
sub
inc
orb
adc
repz
xor
sbb
cmp
incb
divb
shl
xor
mov
sbb
sub
repz
fidivrs
dec
adc
js
dec
mov
pop
mov
inc
xor
xor
xor
bnd
ret
stc
cli
scas
lds
cmpsb
fstpt
push
jmp
fiadds
xchg
and
loope
lds
popf
loop
test
cltd
fprem
out
stc
fisttpll
xor
pusha
or
sub
ret
add
sub
cmp
or
imul
rcrl
aad
sub
mov
dec
bound
das
cmp
into
or
stos
mov
pusha
mov
adc
out
addr16
nop
xchg
push
mov
ljmp
pop
ja
xchg
push
sti
add
cld
lcall
sub
out
fnsave
testl
call
ljmp
mov
mov
mov
add
ljmp
sub
imul
clc
push
or
icebp
arpl
adc
shrb
in
roll
mov
mov
insb
mov
or
push
lret
and
shll
test
cld
in
add
xchg
into
popf
outsl
negb
jne
add
dec
mov
stos
sbb
inc
test
mulb
xor
pop
pop
jg
dec
inc
inc
add
xchg
pop
cmpsb
sub
leave
push
cmc
cmp
dec
pop
mulb
imulb
push
sub
aam
inc
cli
call
sub
clc
ret
cmp
push
mov
je
and
shlb
insl
jno
add
mov
push
lret
int
pop
jbe
mov
mov
sub
bnd
aas
xor
sub
ja
mov
sbb
inc
test
mov
xor
gs
pop
jb
ja
inc
adc
push
stos
mov
sbb
xor
enter
out
push
out
test
sbb
mov
pop
bound
subl
icebp
lahf
add
xchg
fisubl
sahf
inc
test
pop
js
ror
outsl
sbb
push
mov
push
stos
iret
mov
sub
fcmovbe
hlt
xor
insl
pop
out
push
and
loope
int
aaa
gs
sub
push
or
xor
jg
popf
or
int3
outsl
ss
outsb
es
movsb
pop
sbb
scas
cmp
ret
mov
mov
adcl
and
gs
jo
jecxz
int3
and
mov
adc
bnd
clc
jl
add
xor
push
sbb
mov
ljmp
sbb
mov
mov
je
push
sbb
shl
lret
fnsave
add
bswap
icebp
ljmp
xor
cmp
sub
dec
dec
inc
xchg
push
adc
adc
stos
xadd
sub
aas
fmulp
aam
dec
popa
popa
rclb
mov
mov
inc
push
sbb
xor
mov
jge
bound
and
lret
fisubrl
stos
stc
xchg
add
sbb
sub
dec
test
xor
cmp
pusha
mov
adc
jns
adc
sbb
fsts
dec
fwait
sbb
xchg
lock
mov
xlat
or
dec
out
je
ret
sbb
sahf
xlat
lods
sub
loope
push
into
mov
loope
jecxz
ds
pop
sub
xchg
xor
adc
xor
jae
xor
sbb
jmp
pop
mov
rcrb
cld
adcb
sarb
dec
out
push
adc
dec
dec
push
ret
lret
push
sub
jp
pop
mov
sub
push
cltd
cmp
loopne
mov
popf
push
xor
cli
or
mov
aaa
pop
jmp
mov
sub
sbb
int
pop
clc
test
and
mov
jo
ja
mov
inc
lret
xor
cmp
jmp
xor
testl
pop
and
sbb
mov
pop
stc
cs
popf
jmp
repnz
dec
mov
stc
dec
lret
add
and
push
mov
mov
or
mov
aam
test
inc
or
ds
mov
stos
push
andb
jb
inc
out
inc
movb
inc
int
cmp
and
mov
and
lock
xchg
jae
add
out
ds
push
iret
or
jo
inc
sub
xchg
sahf
or
dec
fimuls
aad
imul
mov
mov
mov
cmp
pop
xchg
nop
scas
ret
push
xlat
mov
sahf
cmp
out
inc
xchg
ja
cli
imulb
xchg
fcmovu
adc
mov
mov
push
mov
pop
ja
sahf
mov
pop
mov
insb
cmpsb
mov
and
pop
das
out
and
cmpsl
mov
cmp
dec
or
lahf
movsl
mov
lret
cmp
pop
rol
jno
adc
jns
push
adc
or
sbb
test
dec
ficoms
fiadds
test
sbb
ljmp
ror
xor
xchg
stos
cmpsb
xchg
test
mov
test
pop
mov
repz
icebp
mov
sbb
sub
sbb
mov
xchg
fstl
or
sbb
mov
lcall
lret
xchg
xor
jp
push
in
movsb
iret
les
add
fmuls
sbb
inc
arpl
mov
pop
fildl
dec
test
pop
mov
cs
mov
jmp
xchg
repz
push
shrb
cli
popa
gs
pop
lods
mov
mov
jg
sub
mulb
mov
rcr
testl
in
push
repnz
insl
xchg
sbb
mov
dec
cmpl
jns,pt
fs
xchg
fdiv
pop
adc
mov
push
repz
sbb
hlt
imul
and
push
xor
or
cmc
pop
adc
cs
icebp
jle
sarb
ljmp
jbe
lea
fs
mov
stos
dec
bound
mov
ret
xchg
popf
lcall
mov
icebp
aas
in
inc
popl
dec
lahf
xor
lret
mov
jl
mov
pop
movsl
sbb
pop
pop
ret
push
lods
xchg
cltd
into
in
sub
cmp
fnstcw
pop
ds
sti
xor
cltd
call
outsl
cwtd
and
push
inc
in
cmp
fmuls
mov
jnp
xchg
sahf
lret
mov
jg
inc
cltd
test
js
test
mov
pop
xchg
push
pop
imul
jae
sub
pop
jge
arpl
mov
sub
sub
xchg
adc
cwtl
dec
lahf
leave
shl
leave
aad
xor
jg
int
xor
inc
call
or
cli
adc
incb
push
js
inc
sbb
in
cs
aas
adc
mov
fstps
cmp
pop
or
sub
mov
or
push
fidivrl
xchg
inc
cmpsb
push
sbb
dec
push
sbb
xor
testb
sub
loope
sub
fidivs
fs
sbb
inc
arpl
push
push
mov
dec
data16
adc
sbb
adc
xlat
mov
fidivrs
jbe
pop
aad
jne
cld
leave
mov
jp
fmull
out
xor
or
xlat
in
add
jecxz
std
xor
addr16
in
leave
dec
cmp
push
sub
cmp
or
cmp
or
data16
xchg
inc
lods
adc
nop
mov
jno
cmp
lcall
cmpsl
scas
pushf
cmp
outsl
jb
push
mov
das
lcall
out
jl
lock
mov
jnp
inc
mov
sahf
lods
movsb
mov
ret
loop
pmaddwd
fcomps
push
mov
xchg
xor
and
mov
dec
les
sbb
orl
jge
setbe
into
mov
push
sub
addr16
out
div
cmpsl
sbb
push
jbe
sti
iret
cmp
cmpsl
cmpl
in
ret
out
fpatan
popa
out
mov
mov
inc
fwait
sahf
jle
xchg
xorb
pop
inc
xchg
insl
xor
int3
fstps
xlat
sbb
clc
xchg
push
or
int
popa
mov
stc
mov
xor
add
dec
int
jl
jns
dec
cmp
push
out
mov
stos
je
xchg
sbb
sub
add
mov
call
inc
mov
popf
or
jns
cmc
mov
mov
jb
and
lea
mov
cmp
cltd
lret
int3
push
mov
sub
int3
aas
push
jmp
mov
cmpsb
aas
insb
fdiv
cmp
xlat
rdmsr
mov
std
jno
inc
mov
mov
pop
pushf
pop
mov
sub
xlat
mov
xchg
mov
loop
insb
xchg
rol
mov
test
fs
and
jae
and
sbb
cmc
jbe
dec
pop
mov
add
leave
inc
sub
dec
sbb
mov
out
scas
xchg
jo
fdiv
sbb
sbb
stos
pop
je
jnp
ret
cmp
loopne
jg
push
movsb
add
imul
push
movsb
loopne
sti
cmp
movsl
outsb
mov
and
cmp
sbb
or
mov
or
xlat
inc
iret
mov
xchg
movsl
push
xor
enter
pop
adcl
cltd
inc
data16
and
mov
push
add
ja
cmpsb
pop
out
test
movsb
ss
push
lods
sbb
or
popa
or
xor
repz
push
addl
mov
push
inc
outsl
pop
aas
daa
shll
test
aas
add
out
adc
cmpsb
loop
jnp
mov
fnstsw
neg
adc
adc
pop
sub
jl
sbb
adc
or
and
in
cmpsl
outsl
push
xchg
leave
push
mov
je
lret
cmp
mov
das
sbb
push
jmp
lea
pop
mov
cmpl
xchg
shll
mov
push
in
adc
inc
xchg
aam
decb
cli
xchg
push
fcmove
inc
xchg
sbb
xchg
or
add
gs
xor
aad
icebp
cli
push
cs
popf
or
push
icebp
pop
mov
std
daa
repnz
jl
jmp
mov
pop
mov
dec
jmp
push
aam
inc
and
adc
add
jge
outsl
loope
icebp
es
popa
lods
fimull
mov
jo
xorl
scas
sub
in
test
sub
test
das
aad
cli
add
pusha
roll
xchg
mov
outsl
sbb
out
mov
das
jne
jo
test
mov
pushf
inc
js
mov
aas
dec
jbe
call
stc
mov
jnp
gs
push
dec
mov
outsl
fbstp
adc
xor
jle
imul
add
cmp
outsl
mov
pop
loopne
int
js
aaa
jns
mov
int3
faddl
xor
dec
sbb
fwait
lea
push
std
test
xchg
mov
shlb
lret
jbe
insl
cmp
inc
sbb
or
das
scas
jae
pop
jne
jo
jg
cmc
fildll
subb
outsl
lahf
andl
cs
test
leave
insl
addb
push
mov
xor
test
ret
mov
add
jne
iret
add
pushl
loopne
sub
std
mov
xchg
dec
das
js
xor
fisttps
dec
ret
mov
sbb
out
arpl
rcrb
out
fildll
xor
ret
adc
into
iret
scas
add
jge
mov
ret
popf
add
fdivl
clc
xchg
or
lret
inc
out
xorl
psllw
push
test
aam
in
jns
inc
sbb
pmaxsw
jae
xchg
subl
repnz
sub
xor
mov
pop
lock
pop
cmp
cmpsb
mov
mov
sub
shlb
shlb
fwait
and
xor
push
push
aam
addr16
roll
int3
addr16
subb
imul
fstp
pop
outsb
xor
push
mov
sahf
mov
les
pop
push
mov
test
xor
fwait
mov
lahf
xor
push
add
mov
fdivrs
enter
inc
add
and
sbb
add
and
pusha
push
nop
jbe
out
sub
pop
jecxz
cmp
data16
rolb
pop
mov
test
sti
xchg
pop
mov
aam
inc
dec
push
jne
ret
xor
pop
in
cmp
and
xchg
outsb
orl
inc
add
pop
sbb
cmpl
push
push
sbb
push
inc
mov
les
mov
fwait
adc
popa
xor
xchg
in
add
and
inc
and
mov
sub
push
int
xchg
inc
jo
jbe
pusha
mov
push
test
ss
sub
xor
dec
sub
shlb
call
and
push
pop
dec
dec
imul
daa
dec
sbb
outsb
lret
stos
mul
inc
aam
cmp
push
dec
sub
push
and
jmp
mov
inc
in
neg
outsb
or
sub
jmp
rcll
fidivrl
fnstcw
lock
inc
lahf
mov
or
aam
jge
cld
jecxz
rol
mov
or
push
vprotb
pop
jae
mov
ficoms
push
inc
mov
shr
inc
addl
inc
movsl
icebp
arpl
ljmp
cmc
sbb
mov
pop
ss
mov
insb
test
add
cmp
cld
xchg
or
cli
arpl
add
pop
xor
inc
daa
lods
mov
fwait
icebp
shll
mov
test
push
clc
scas
enter
cmpsb
dec
dec
mov
inc
jb
xlat
aad
in
dec
mov
pusha
jmp
dec
inc
inc
pop
or
cltd
sbb
popa
dec
or
xchg
adc
bound
stos
nop
in
adc
jnp
inc
push
das
jnp
or
xchg
jmp
ljmp
cmc
xor
sbb
loope
mov
ret
mov
das
xchg
sub
sub
mov
jnp
ret
scas
jge
fisttps
pop
add
cltd
nop
movsl
data16
jle
mov
pushw
into
adc
jecxz
dec
fs
incb
push
call
fstps
out
pop
sbb
loope
sbb
shll
xor
rolb
mov
inc
sub
cmp
in
ljmp
add
jp
aas
push
and
jge
neg
dec
lsl
movsb
cmp
xor
dec
xor
push
rcl
lcall
leave
push
cmp
gs
dec
and
js
sub
push
jno
mov
test
mov
xchg
cwtl
lahf
push
mov
dec
outsl
fs
push
fildll
or
dec
push
ja
fcomps
or
dec
lret
outsb
cmp
xchg
loopne
inc
adc
aam
in
cwtl
push
sbb
loop
add
or
int
in
lret
inc
mov
push
cltd
es
push
adc
jnp
lahf
lcall
fs
sub
sbb
jge
jp
jnp
and
jbe
shlb
pop
clc
inc
jp
mov
sahf
push
and
pusha
mov
or
and
jae
rolb
sar
mov
fisttpll
dec
pop
test
sbbl
mov
cwtl
and
dec
bound
lds
pushf
in
pop
adc
and
aaa
lds
subl
ljmp
lock
incb
flds
lods
xchg
mov
sahf
loop
push
out
inc
hlt
sub
push
dec
xor
stos
cltd
js
outsl
push
addr16
aas
and
out
jmp
push
pop
jnp
jbe
bound
jb
xchg
test
inc
outsb
sti
cmp
add
pop
pop
movsb
add
push
lds
xchg
ljmp
and
test
mov
fcmovnb
sbb
repnz
lcall
loop
xchg
push
xor
mov
fsts
mov
ficoml
cs
in
xchg
inc
sub
pop
scas
cmp
sbbl
cmp
sub
cmp
std
push
std
out
enter
pop
fwait
loopne
dec
nop
movsl
or
jmp
cltd
cmc
add
repnz
sarb
lret
mov
ret
and
aaa
and
pop
stos
dec
in
inc
cmpsb
xchg
rol
inc
xor
cmp
mov
jae
data16
mov
push
aaa
jo
mov
outsl
xor
inc
mov
jne
das
aad
insl
xchg
sbb
test
scas
push
sti
ret
xchg
jge
pop
xor
mov
pop
je
dec
stos
ss
mov
pop
test
xchg
add
dec
fwait
test
mov
das
aad
add
xchg
jnp
mov
or
add
repnz
jecxz
cmp
pop
fldl
jg
jg
jne
pop
pop
adc
loope
sub
cmp
push
add
outsl
cmpl
rolb
stc
xor
jns
je
jo
jmp
loope
lahf
jb
mov
mov
sarl
test
addb
push
push
cmp
sub
xchg
dec
push
adc
stos
outsb
rclb
out
dec
sub
mov
scas
mov
adcb
jg
lcall
mov
rcrl
xor
fucomip
scas
fbld
or
pop
pop
divb
test
mov
mov
mov
notl
out
scas
into
cltd
aas
in
xchg
add
lret
push
daa
push
js
mov
dec
pop
dec
add
lods
xchg
push
jb
into
xor
xor
xchg
mov
cmpsb
icebp
into
cmc
mov
sbb
add
or
mov
mov
out
inc
or
fstpl
loop
xchg
lods
data16
scas
in
icebp
in
mov
jge
sbbb
daa
sub
lods
cmp
dec
jp
xor
sub
cmp
inc
mov
aad
in
sub
dec
jle
cmp
inc
out
add
mov
daa
jle
cmp
cmp
adc
adc
sbb
pop
inc
repz
out
movsb
js
test
lahf
daa
push
pop
stos
scas
mov
jb
xor
ds
testb
mov
in
fsubrl
mov
les
fwait
aas
inc
cmpsl
push
sahf
push
call
icebp
sub
pop
mov
fistl
inc
rorl
fbstp
jns
sahf
aad
or
push
xor
out
sbb
ljmp
jno
cmpb
fadd
or
daa
sbb
xlat
jb
pusha
jp
imul
and
xchg
lods
std
mov
push
pop
pushf
jmp
mov
mov
repz
out
stc
xchg
daa
aad
sbb
cmp
pop
push
lahf
mov
out
push
lahf
test
pop
aaa
inc
push
js
aaa
in
push
or
loope
push
punpckldq
fstpl
cmp
adc
insl
push
js
aam
sbb
and
jo
pop
jge
push
sbb
pop
mov
bsr
sub
lahf
sub
pop
je
divl
lahf
bound
sbb
and
imul
nop
imul
and
std
fistl
dec
sbb
dec
cmp
adc
mul
int3
lahf
inc
jecxz
hlt
test
inc
sbb
fidivrs
add
mov
and
mov
dec
call
ja
test
xorb
inc
inc
add
dec
ja
mov
or
push
push
in
inc
adc
mov
jb
or
push
cmc
aaa
push
inc
fildll
ret
cmpsl
xchg
dec
add
les
push
cmpsl
ljmp
stos
fldenv
sbb
mov
sub
sub
jge
out
and
movsl
stc
shl
in
data16
xor
mov
push
dec
jl
nop
test
sub
and
jp
pop
sub
cmpsl
rcll
fsubs
es
mov
and
sahf
lcall
mov
cs
int
cli
es
inc
out
ja
cmp
dec
inc
stos
mov
mov
push
mov
stos
xor
in
test
je
in
movsl
and
fs
test
cmp
dec
stos
push
scas
cmpsl
adc
mov
andl
loope
movsb
mov
mov
dec
outsb
ja
jmp
out
xchg
es
pop
push
aaa
cs
mov
lret
mov
das
mov
rcrl
sbb
mov
dec
sub
inc
sbb
arpl
xchg
dec
sub
ret
push
add
dec
sbb
popa
inc
aad
jne
fwait
dec
int3
les
xchg
push
js
pop
test
mov
jge
mov
pop
push
dec
pop
sub
inc
outsl
popa
mov
in
xchg
lea
jns
push
loop
or
inc
aaa
mov
sbb
repnz
je
std
fwait
jb
mov
push
notb
mov
dec
cwtl
jge
mov
xchg
iret
mov
into
push
test
pop
add
test
dec
xchg
ret
push
jg
lock
jp
mov
add
mov
add
add
jecxz
jno
xor
dec
js
jnp
test
sbb
inc
jns
add
mov
jno
push
mov
fs
sahf
or
and
repz
arpl
mov
cltd
gs
mov
fs
mov
in
mov
sub
in
popa
cmp
aaa
popf
jo
repz
pop
sbb
pushf
stc
push
scas
inc
imul
shrb
adc
addr16
daa
pop
sahf
decl
fstps
aad
mov
push
test
and
lods
or
popf
sbb
pop
jmp
fcom
sub
sbb
test
add
sbb
mov
cld
les
in
imul
xchg
sub
jns
sub
xor
pop
fldcw
out
call
popl
clc
add
adc
imul
add
or
mov
inc
push
or
ds
cwtl
ficoml
jp
ja
jl
inc
add
xchg
add
testl
push
fmul
out
jb
mov
or
add
das
push
jmp
sub
insl
or
out
enter
sbb
ret
push
mov
jno
or
xchg
add
and
cld
out
xor
bound
or
xor
sub
ret
inc
movsb
jo
fmuls
add
in
add
test
andl
cli
jb
cmpsl
mov
frstor
lret
pop
nop
ljmp
push
ljmp
push
pop
mov
pop
sub
pop
pop
mov
fistps
inc
outsb
adc
or
adc
rolb
addr16
and
jae
movsb
sbb
xlat
data16
lods
mov
inc
pop
or
cmp
jge
dec
lods
les
mov
xchg
jo
xlat
jo
in
push
stos
adc
xor
daa
ss
lret
sbb
aam
mov
sub
inc
stos
out
or
aas
jmp
pop
subl
sub
mov
mov
sub
and
inc
add
loop
sbb
push
cmp
movsb
xor
movsl
xchg
popa
je
dec
adc
data16
jge
push
jb
jg
pop
pop
mov
dec
sbb
test
lret
sti
in
outsl
arpl
push
inc
es
mov
mov
out
shrl
out
sti
pop
in
add
xor
pop
inc
jmp
sbb
outsb
das
out
cmp
mov
jo
test
les
push
xorb
aad
cld
push
sub
lods
push
sbb
mov
dec
adc
xor
dec
leave
les
xor
stos
dec
sti
sub
sub
push
or
insb
add
cld
fs
rclb
ljmp
add
mov
dec
enter
mov
dec
adc
les
add
cli
jbe
push
and
sbb
push
and
inc
gs
scas
sarb
hlt
sahf
pop
sti
bound
xor
inc
pop
fisubl
jecxz
jle
or
sti
jb
push
je
gs
mov
inc
cmc
icebp
loop
mov
rol
pop
std
loop
sbb
xchg
mov
mov
push
scas
test
adc
adc
stos
push
arpl
mov
fldl
test
cmp
imulb
mov
sbb
or
xchg
xchg
push
mov
inc
push
cld
push
ss
adc
sub
ja
shl
jge
arpl
iret
scas
daa
inc
iret
outsl
ds
ja
sbb
shll
stos
jg
sarl
adc
or
dec
dec
out
sarb
test
lods
rcll
mov
lock
mov
jmp
daa
out
imul
jmp
push
int
ret
add
bound
mov
cli
leave
pushf
and
addb
mov
cmp
testb
or
dec
scas
xchg
sub
inc
add
aaa
mov
push
xchg
out
lahf
ljmp
mov
mov
mov
pop
sub
sbb
fsubrl
lcall
cld
inc
test
push
fcmove
push
inc
lock
frstpm(287
adc
xlat
pop
jecxz
das
xor
mov
mov
incb
add
xchg
cmpl
lds
adc
and
jne
dec
cld
fucomi
fsubl
mov
lock
sbb
mov
out
in
stc
mov
mov
xor
fs
adc
test
into
adc
push
je
in
dec
xchg
push
jge
mov
imul
sub
pop
in
cmp
lock
dec
xchg
mov
mov
pop
xor
ret
test
enter
bound
pop
push
cmp
outsl
mov
cltd
movsl
xchg
jmp
aas
mov
stos
jbe
mov
sub
jno
cwtl
push
ret
call
jae
into
push
mov
fstl
test
cwtl
imul
mov
scas
out
lret
shll
inc
push
repz
mov
cld
mov
cli
adc
inc
lods
cwtl
popa
push
dec
ror
ds
pushf
sub
mov
adcl
add
test
sub
arpl
jmp
jmp
jl
jo
sbb
mov
or
mov
push
in
or
xchg
pop
dec
ja
insl
icebp
cmp
decl
mov
bound
cmp
aas
cld
test
lea
mov
incb
testl
push
mov
outsb
notl
fisubrs
xor
in
lahf
int
adc
insb
adc
scas
fidivs
jle
arpl
cmp
pop
mov
pop
mov
sbb
mov
call
pop
pop
fnsave
loope
lahf
xor
pop
loope
inc
xchg
ss
fcoml
ss
fwait
int3
neg
pop
mov
xor
mov
fidivs
push
jge
mov
cld
sbb
imull
mov
insl
pop
mov
jb
jbe
dec
mov
outsb
xor
scas
xor
test
cli
mov
neg
mov
aas
ds
je
orl
adcb
cmp
xchg
fdivrs
mov
mov
and
enter
mov
fsubrs
pusha
in
cltd
repz
jnp
dec
and
mov
daa
pop
dec
jno
xchg
and
ds
lahf
ss
jle
pop
test
aad
aas
jg
push
stc
and
fisttpl
sub
adc
pop
int
jae
dec
cmpsl
pop
cmp
cmpsl
shrl
cmp
stos
add
dec
sub
adc
xchg
cwtl
xchg
enter
add
push
mov
pusha
sub
jl
dec
mov
sub
shl
mov
sbb
mov
jae
sti
repz
stos
shrb
cmp
or
insb
fisubrl
sub
mov
and
or
jg
loopne
fisttpll
mov
loope
sbb
stos
out
insl
add
lahf
outsb
xchg
test
jge
and
lret
xor
dec
pop
mov
cmc
or
adcb
into
inc
scas
mov
filds
xor
add
and
lret
popf
push
cld
hlt
fldcw
cmp
fdivl
push
push
lret
xor
mov
jmp
xor
push
bound
pop
lds
jo
das
lret
ja
cmp
xlat
add
dec
pop
jmp
cmp
adc
loopne
and
jmp
mov
lcall
cltd
or
ss
rcl
test
shrb
rcrl
loopne
jo
mov
jmp
xor
cmp
test
scas
ret
insb
dec
inc
or
cmpsb
jge
xchg
jbe
xlat
push
cwtl
jg
out
mov
xchg
cmp
cmp
pop
out
mov
add
movlps
mov
fwait
sub
inc
inc
sbb
addr16
dec
pop
pop
and
sbb
and
or
iret
insl
cld
rorl
sbbl
adc
mov
jnp
and
fisttpl
pop
shrb
sub
xchg
fldl
cmp
sahf
adc
out
sub
xor
fs
pop
xchg
shrb
mov
cltd
int3
or
sbb
or
add
loop
lock
inc
test
jno
and
dec
sub
mov
hlt
in
pop
push
cmp
jnp
fcompl
or
mov
xchg
je
pop
hlt
jae
xor
stc
xchg
cmp
jne
mov
outsb
in
in
call
mov
jno
repnz
xor
mov
jae
mov
test
hlt
scas
mov
and
push
sbb
pop
xchg
pop
mov
gs
mov
loop
add
inc
xchg
push
mov
mov
dec
jns
ja
mov
jae
cs
push
aad
cmp
dec
mov
icebp
jge
in
mov
mov
add
xchg
mov
or
xchg
aad
dec
outsl
cmpsl
inc
push
inc
add
lock
pop
xchg
lret
xor
push
or
addr16
movsb
xor
bound
les
ja
adcb
enter
pushf
jo
sub
xor
aaa
ret
test
and
and
push
ficoms
jne
iret
or
test
outsl
cltd
rclb
out
pop
ret
sbb
jbe
cltd
in
mov
mov
pop
imul
addr16
iret
incb
out
jo
inc
add
mov
mov
cmp
cld
mov
inc
or
xchg
out
jl
fcoml
mov
repnz
bound
mov
in
lods
data16
dec
in
js
leave
add
icebp
dec
insb
mov
ret
xchg
inc
mov
xor
fists
jo
push
jp
loope
lret
mov
jmp
xor
jmp
or
add
imul
push
pop
rorl
inc
cmp
pusha
xor
es
cmp
repnz
pmulhuw
scas
scas
pushf
test
dec
lret
call
xor
popf
sub
inc
inc
xor
cmp
mov
pop
cli
add
xchg
cs
jbe
dec
xlat
cmc
sbb
dec
les
outsb
lret
sarl
cli
sbbb
cld
xor
cmp
mov
jo
lods
shlb
loope
push
or
movsl
sub
int
outsb
pop
je
jnp
add
daa
ret
les
jge
test
mov
mov
mov
shll
lahf
repz
sub
adc
enter
dec
add
cmpb
mov
xchg
pop
pushf
or
push
xor
mov
cmp
ja
int3
xor
add
daa
cltd
test
or
fdivs
xchg
insl
sahf
faddl
mov
lret
push
xchg
mov
rclb
lret
bound
push
scas
lcall
inc
push
and
xchg
inc
js
mov
test
je
aam
fisubs
cmp
mov
stos
push
dec
ss
out
pop
mov
dec
push
imul
cmpb
mov
lret
xor
push
and
mov
push
cmp
out
lock
or
roll
cmpsl
rolb
mov
add
xor
pusha
call
jb
std
xchg
cmp
and
add
ret
out
and
ficoml
arpl
jl
clc
shlb
adc
movsb
jbe
sub
cmp
or
xchg
insb
gs
jnp
ja
pop
pop
pushf
push
fstp
scas
add
out
dec
shlb
mov
xchg
dec
dec
dec
sub
jp,pt
lcall
ret
adc
daa
adc
cmp
adc
sbb
shll
cmp
cmc
push
loope
aas
leave
out
dec
mov
pop
xchg
dec
inc
bnd
jge
into
ret
fisttpll
shrb
cmp
sub
loop
rolb
test
test
and
mov
ret
jp
add
jmp
fistpll
adc
inc
dec
cltd
rorl
insb
jb
pop
mov
scas
jmp
mov
arpl
cmp
push
push
pop
es
lahf
test
pop
xor
cmp
xor
mov
mov
push
lret
fstl
mov
adc
call
jmp
js
add
orl
mov
inc
cld
mov
dec
in
dec
xor
and
icebp
jo
fcomip
add
mov
rcl
sbb
js
or
mov
jg
out
mov
movsb
ja
or
and
adc
dec
xchg
sarb
je
repz
sub
sbb
inc
cmp
aaa
xchg
adc
add
lret
popf
and
cmp
lahf
data16
push
mov
sub
or
sbb
stc
mull
addb
hlt
push
out
negl
int
negb
cltd
sbb
shr
pop
push
jl
dec
insb
adc
ds
dec
sbb
push
add
movsb
pop
arpl
out
adc
cmp
or
pop
shrb
or
and
dec
cmp
fstpl
sbb
xor
insl
aaa
sti
lea
imul
cmp
movsl
inc
pop
ret
pushf
sub
fisttpl
fisttps
and
adc
jp
mov
in
mov
xor
sub
dec
mov
push
adc
repnz
mov
out
mov
fistps
mov
jle
xchg
pushl
xchg
stc
lods
jle
stos
andb
outsb
test
lea
fmull
mov
outsl
mov
bound
xchg
push
mov
or
ljmp
cmpsl
add
movsl
sahf
cmpsl
mov
mov
idivb
push
mov
push
data16
insb
jmp
push
in
repnz
sbb
jmp
fisubrs
pushf
jl
jnp
mov
arpl
sahf
inc
xchg
dec
xlat
inc
shl
ret
mov
pop
sbb
jle
cld
test
xor
or
loop
dec
dec
fimull
nop
inc
mov
cmp
push
das
les
xor
cmp
clc
testb
push
xchg
xor
add
repnz
gs
gs
mov
sub
lods
or
scas
add
inc
test
or
sub
jno
test
insl
mov
ret
ret
jmp
jp
aaa
gs
ror
dec
cmp
push
movsb
pop
hlt
jmp
mov
idivb
ret
imul
call
pop
and
sub
pmuludq
das
mov
movsb
dec
movsb
mov
inc
sub
ljmp
mov
fs
lret
xor
jne
mov
adc
mov
push
jle
push
mov
push
repnz
ljmp
out
push
sbb
paddsw
sub
roll
xor
rcl
in
push
fdivrs
inc
shlb
mov
xchg
ds
mov
test
mov
jno
imul
rcll
ja
lret
arpl
mov
sub
inc
fiadds
inc
push
sub
jno
push
in
xor
repnz
aad
add
mov
jmp
loopne
pop
sahf
jo
xor
jl
pop
pusha
push
cwtl
jno
dec
pusha
shr
xor
inc
fwait
cmp
icebp
ds
cmp
dec
fprem1
cmp
add
popf
add
pop
push
and
jne
inc
dec
mov
sbb
mov
pop
jecxz
pop
stc
mov
mov
jo
push
add
or
xor
mov
addr16
out
cmpsb
gs
bound
pop
mov
push
or
int3
int
adc
push
sbb
jmp
imul
inc
xlat
ja
push
leave
and
add
in
jmp
inc
mov
shr
pop
in
lret
das
xor
movsb
mov
ret
sbb
sub
xchg
dec
dec
push
outsl
and
aaa
jbe
inc
dec
jo
daa
test
mov
xlat
in
and
ja
pop
call
leave
adc
adc
imul
clc
mov
xor
insl
loope
out
je
mov
jl
push
imul
sti
or
aad
movsl
pop
cmpsl
ss
add
pop
cmpb
mov
jecxz
aaa
scas
insb
xchg
cmp
add
mov
popf
scas
mov
addr16
mov
callw
mov
loop
cwtl
jo
push
inc
imul
sub
popf
push
jmp
cmp
mov
pusha
lds
icebp
shlb
jge
cld
or
test
iret
and
pop
hlt
cmp
mov
ja
xchg
scas
in
or
add
inc
pop
loopne
test
shlb
jg
out
inc
into
loopne
fcomps
imul
rol
push
pop
pusha
adc
cwtl
ret
jecxz
fisttps
pusha
xchg
mov
xchg
aas
sbb
out
lcall
and
xchg
mov
add
fs
ljmp
or
jns
sub
popf
mov
fstl
xchg
ret
lret
mov
or
or
jo
lds
in
ds
es
jmp
pop
push
push
call
fistps
dec
jnp
sbbb
cmp
scas
test
fwait
mov
sbb
dec
xor
shll
adc
pop
add
repnz
je
mov
push
and
cmp
pop
jns
xchg
xor
mov
fstps
mov
je
pop
mov
pop
mov
aad
jns
fbstp
cmp
dec
nop
lret
and
sbb
pop
stos
scas
shl
push
add
ljmp
fcompl
cmp
shl
mov
pop
jae
js
pop
xchg
adc
fdivr
sub
in
add
ds
out
pushf
inc
dec
inc
xchg
std
mov
mov
xor
jmp
sub
inc
and
in
xchg
aaa
in
fwait
and
add
fwait
cmpsl
xchg
inc
inc
jae
inc
pop
adc
mov
xchg
test
rcl
cwtl
fwait
push
in
add
xchg
ficompl
hlt
jmp
or
add
pop
gs
pop
xchg
xchg
sub
fistl
and
mov
sbb
sub
xchg
inc
xchg
repz
mov
jae
out
push
test
mov
mov
fidivl
sbbb
idivl
pop
xor
mov
dec
stos
shr
sahf
push
test
insb
ret
and
icebp
jae
stc
iret
dec
push
add
jecxz
pop
sbb
sti
mov
fwait
outsl
rcll
insl
mov
jp
scas
xchg
xchg
push
roll
in
dec
clc
imul
sete
popf
mov
mov
or
adc
dec
xchg
js
push
repnz
jl
shlb
mov
outsl
xchg
out
pop
adc
jmp
pusha
addr16
xor
mov
mov
dec
ds
fists
mov
fidivrs
movsb
faddl
lods
xor
mov
in
push
subb
sbb
lret
vmread
loop
and
stos
mov
mov
mov
cmp
pop
add
pop
mov
cld
or
inc
xor
pop
out
sbb
jp
cmp
and
xor
das
sub
mov
fwait
repnz
dec
inc
test
rclb
aas
inc
pop
mov
xlat
sahf
cmp
mov
adc
adc
arpl
dec
push
ret
rclb
out
pop
pop
jecxz
dec
push
outsb
stos
xchg
inc
jne
out
popl
pop
mull
test
cmpsb
pop
or
lock
or
dec
andb
jmp
mov
aad
ret
mov
scas
mov
loop
sbb
and
mov
cmp
lret
add
mov
addr16
fwait
rorl
jle
pop
mov
lret
lcall
arpl
ja
mov
mov
scas
dec
imul
lea
dec
cmp
jge
xorl
js
popa
dec
jae
mov
sub
or
sbb
or
mov
int
les
push
cltd
sahf
out
lret
pop
push
or
dec
decl
xlat
test
lahf
adcl
pop
stos
xchg
cmp
pop
lods
xor
sar
push
ret
mov
inc
ficomps
mov
push
pop
aaa
adc
push
test
test
and
lods
mov
mov
pop
mov
cltd
mov
ret
lret
clc
and
dec
xor
das
nop
ret
aam
xor
das
int3
jg
pop
xchg
pop
loopne
shl
cmp
inc
or
pop
cmp
cmpsb
call
cltd
inc
les
mov
fists
adcb
gs
stos
je
stos
lret
sbbl
and
sahf
pop
and
shlb
xor
pushf
setbe
sub
pusha
outsb
fs
je
mov
sbbb
hlt
fadds
int3
cmpb
lahf
jge
adc
movb
stc
and
mov
pop
add
xor
leave
outsb
aam
xchg
mov
mov
adc
ret
pop
into
lea
shlb
imul
push
jge
mov
sub
mov
jle
pop
aad
pop
int3
scas
addr16
lret
mov
sbb
push
jns
push
pop
lahf
xchg
or
push
push
out
mov
xor
cmp
outsb
mov
dec
push
cwtl
inc
les
mov
jge,pn
sub
and
mov
rcr
out
mov
dec
sub
fidivs
or
and
mov
out
add
pop
stos
fistpll
add
sti
xchg
cwtl
and
xor
clc
test
data16
arpl
mov
ret
insl
stos
lea
or
data16
sti
arpl
mov
mov
mov
push
xchg
fstpt
pop
xchg
jno
lea
aad
rorl
pop
aaa
and
pop
dec
das
dec
sub
inc
mov
mov
add
mov
rcr
cmp
leave
bnd
adc
ljmp
sbb
adc
notl
shrl
sub
scas
and
jl
test
or
adc
xor
iret
jo
pop
popf
lods
add
fstl
mov
mov
sbb
add
mov
inc
cwtl
and
repnz
aaa
or
jge
adc
fildll
je
aad
mov
push
sub
mov
ljmp
mov
lods
sub
shll
mov
cmp
xchg
and
inc
xor
lea
notl
inc
les
setl
and
pop
outsb
cli
in
jmp
mov
or
push
jl
mov
iret
pop
roll
jo
push
outsb
leave
cmp
out
rcr
ficoms
ja
in
iret
fbstp
jns
push
jbe
fwait
loop
out
sbb
test
cmpsl
mov
and
jno
xchg
xchg
dec
xor
test
dec
pop
popa
xchg
add
push
pop
mov
fidivl
xor
lahf
add
cmp
shlb
lahf
xchg
adc
cmp
cmp
cmp
push
adc
rolb
mov
and
aad
ret
add
es
add
push
push
mov
adc
stc
addr16
or
popa
data16
push
fsts
in
dec
fwait
jp
push
push
pop
lods
out
ljmp
stc
fidivrs
addr16
lret
sbb
fldl
cli
orb
aam
cmp
ret
gs
sbbb
push
or
xlat
repnz
cmpsb
adc
ltr
or
nop
shlb
enter
mov
pop
cli
xor
jne
lahf
sbb
movswl
jns
push
flds
in
sub
lea
sub
fidivrl
lret
out
sbb
jecxz
dec
jnp
shlb
movsl
add
out
jo
mov
popa
ds
adc
rcl
stos
and
pushf
dec
fisttpl
or
push
xor
aad
sarb
add
pop
push
sti
loop
cmp
jle
aaa
leave
nop
lret
cmp
in
inc
dec
jae
jnp
mov
and
into
cmp
mov
inc
dec
addr16
fidivl
dec
and
bound
aad
push
xchg
or
mulb
mov
test
adcl
jne
mov
inc
insl
shl
inc
out
pushf
hlt
cli
loopne
cmp
cmp
pop
dec
and
pushf
cld
mov
mov
pusha
jge
push
pop
shrl
cmp
in
sub
dec
xchg
dec
jne
push
into
cmp
orl
inc
push
orl
jl
sbb
test
lock
xorb
dec
lcall
repz
addr16
rcll
jbe
adc
mov
pop
mov
shll
xchg
inc
mov
insb
push
bound
cld
ficoml
stos
clc
mov
or
sbb
cmp
push
pop
cltd
and
xlat
pop
sub
sarl
rcrl
jne
xor
push
iret
sti
mov
pop
or
add
xor
test
jbe
mov
dec
int3
ret
jp
cmp
shrb
pop
add
fxtract
jo
bnd
cwtl
movsl
dec
adc
stc
aaa
dec
sbb
sub
gs
aad
push
xchg
pop
inc
iret
pop
in
inc
aas
mov
data16
inc
incl
adc
ja
inc
ljmp
int
pop
addr16
popf
hlt
shr
lea
loop
je
mov
and
inc
xchg
imul
inc
int
stos
and
xchg
dec
dec
add
les
mov
cld
sti
or
loop
xor
pushf
aas
mov
out
in
and
popa
mov
push
adc
inc
cli
icebp
cmpsl
popa
xchg
sbb
orl
or
lret
js
dec
push
push
mov
cmpsb
lret
jl
push
test
fcoml
stos
fcmovne
mov
shlb
pop
xchg
int
scas
adc
push
push
inc
rolb
xchg
int
out
fiadds
adc
or
mov
insl
inc
stos
mov
ss
add
shll
std
push
fs
test
sub
movsl
inc
adc
dec
nop
xchg
push
imul
adc
ror
add
pop
hlt
das
cli
sarb
mov
pop
movsb
in
outsb
cmp
mov
cmp
lods
inc
gs
dec
ret
mov
or
cltd
fwait
mov
lret
and
mov
lock
cmpb
pop
pop
orb
mov
mov
sub
arpl
movsb
or
sbb
lret
and
div
jp
scas
dec
jns
xchg
mov
mov
loop
mov
repnz
movsb
fcomip
ja
dec
aas
andb
pop
mull
ljmp
lret
xchg
test
push
mov
sub
shll
xchg
pop
and
aaa
rcrl
and
mov
imul
mov
or
std
sub
push
pushf
push
pop
outsl
cltd
call
xlat
cmpsl
shrl
sahf
mov
jae
mov
mov
adc
cs
xchg
jb
push
and
push
mov
mov
jp
sti
mov
xchg
and
and
int
in
sbb
ss
cs
xchg
xchg
imul
push
mov
dec
xchg
orl
pop
dec
popw
fcom
insl
mov
loopne
jl
mov
out
push
data16
dec
aam
andnps
cmp
xor
dec
imul
iret
sbb
out
scas
decb
jo
mov
add
jecxz
adc
or
xor
enter
xor
xchg
mov
mov
push
jno
test
pop
cmp
lds
sub
or
insb
enter
xchg
lock
pusha
arpl
jbe
int
and
mov
lret
jmp
xchg
jge
adc
movsb
or
cmp
inc
sub
dec
out
lock
test
in
jecxz
test
aas
sbb
xorb
mov
scas
dec
add
mov
loope
nop
nop
jbe
les
dec
imul
sahf
scas
mov
jg
mov
gs
xchg
push
mov
fmuls
cmp
inc
sub
outsl
outsl
idivb
mov
lcall
pop
lods
cmp
pushf
and
lret
gs
cmp
sub
into
fsubl
aam
mov
hlt
adc
loope
inc
jg
sub
and
daa
cmp
and
pushf
les
popf
sub
cli
push
or
stos
testl
dec
cwtl
lds
pop
inc
ljmp
shrb
and
adc
inc
loop
cmp
xlat
and
xor
xchg
sub
jae
adcb
outsb
out
jp
leave
in
xor
adc
or
call
cld
inc
loope
pop
jne
and
loop
push
call
mov
adc
sub
adc
insb
insb
dec
pop
jne
sub
mov
add
out
adc
mov
neg
scas
sbb
cld
add
popa
mov
push
scas
daa
jno
jbe
addr16
add
fisttpll
mov
mov
negl
adc
inc
subl
mov
xor
mov
repz
movsl
out
jbe
rcrl
das
pop
pop
pop
orl
inc
cmp
jb
fwait
lods
xor
and
int
xchg
data16
xchg
mov
aaa
call
std
cmpsb
out
push
jp
jmp
lret
xchg
call
gs
pushl
dec
cmpsb
and
mov
push
and
mov
arpl
sbb
hlt
push
jae
mov
data16
adc
push
das
inc
in
hlt
xor
sbb
inc
mov
enter
xchg
inc
shrl
icebp
mov
cmp
jge
insl
pop
cmp
cmc
movl
push
or
in
mov
rcr
out
insl
xchg
xchg
nop
loop
and
fldcw
and
mov
and
movsb
out
aad
ss
int
arpl
cmp
ret
decb
sub
xchg
insl
cli
lea
hlt
mov
sbb
les
outsb
in
pusha
repz
cmp
mov
and
jge
add
xor
mov
mov
call
or
loopne
cmpsl
jnp
ljmp
test
test
js
lea
incb
aaa
xchg
xchg
addr16
je
cs
pop
xchg
push
les
xchg
jl
ss
pushf
jae
je
push
pop
int3
andb
out
nop
jnp
push
int3
shrb
mov
jbe
jle
xchg
ss
push
sub
jns
fistpl
lock
mov
je
in
ljmp
fistpl
mov
adc
jb
or
rorl
mov
mov
mov
jge
xor
push
js
add
cmp
mov
fiadds
mov
inc
loopne
test
mov
orl
dec
mov
lock
pop
or
out
or
in
pop
in
cmp
xlat
das
xor
repnz
int
adc
adc
sar
pop
and
imul
mov
xchg
addr16
mov
dec
add
scas
mov
in
and
xchg
cmp
jb
add
clts
vdivss
adc
mov
or
pop
addr16
scas
cwtl
xor
lcall
movsb
cli
nop
imulb
insl
push
in
cmp
xchg
sbb
stc
sbb
cmc
mov
mov
sbbl
fmull
add
jns
in
inc
mov
sub
enter
adc
stos
dec
push
cld
dec
pop
inc
call
xchg
cmpsb
push
push
dec
leave
test
cmpl
xor
dec
push
pop
inc
or
jge
ss
cmp
jp
ljmp
push
sbb
push
fmuls
add
sbb
dec
lea
repz
ss
and
fcmovnu
xchg
push
fwait
lods
int
inc
mov
cmp
mov
jae
lret
inc
xchg
inc
imul
adc
in
push
orb
pop
inc
call
lods
and
lds
sarl
leave
sbb
lret
ljmp
jnp
mov
xchg
and
arpl
jmp
cmp
test
pusha
add
out
push
mov
xchg
incl
xchg
fldcw
dec
xchg
mov
pop
add
add
pop
pop
push
or
sbb
inc
adc
test
les
dec
fdivs
inc
or
aaa
orb
cmp
xchg
fimull
jbe
push
or
fdivrl
sarl
lahf
jecxz
test
dec
insb
cmovbe
inc
push
rcll
push
int
pop
sub
cmovbe
lcall
mov
dec
rcr
or
cmp
xchg
pop
mov
jge
mov
xchg
cmc
fsubl
cli
jle
mov
sbb
xchg
lock
movsb
xchg
xchg
les
jg
push
jg
cmpsb
or
xor
sahf
mov
loopne
push
add
imul
cmp
nop
jecxz
sub
cs
cmp
inc
push
mov
stos
or
cltd
lcall
rorl
imulb
sbb
xor
out
int
and
sahf
push
push
sbb
add
shrl
pushf
cwtl
mov
nop
add
cmp
ja
push
mov
dec
ss
fstp
dec
mov
jne
int3
out
sub
mov
push
inc
rolb
inc
stc
cmp
call
aad
mov
cs
pop
fs
add
sub
cmc
adc
imull
popf
icebp
mov
push
mov
mov
adc
and
enter
out
mov
mov
in
push
mov
subb
inc
arpl
lock
sbb
imul
popa
fadd
iret
sahf
pop
mov
ja
addl
in
mov
rorb
xor
mov
fs
cmp
mov
mov
mov
push
cmpsl
mov
aas
daa
dec
sbb
repnz
ja
leave
pop
std
or
adc
and
ss
cmp
dec
cwtl
mov
lret
lret
mov
sbb
dec
xchg
dec
movsl
nop
rcll
inc
inc
and
ret
jb
jecxz
idiv
daa
movsl
xor
pop
clc
idiv
fidivs
mov
ret
in
lahf
mov
stos
fmulp
ss
insb
add
pop
cld
data16
rclb
int3
fisubs
jne
push
sub
sub
into
mov
jno
jp
and
ss
insb
xchg
fcmovnu
hlt
xchg
add
push
inc
popl
in
add
jne
mov
xchg
mov
cmp
pushf
outsb
testb
jmp
std
add
aas
js
in
and
out
cmpsl
jb
or
lcall
cmp
push
cmp
test
mov
xor
jge
push
mov
popf
decb
jg
stos
cmpb
and
jne
stos
bound
pop
in
adc
arpl
pop
xlat
nop
mov
sub
out
or
leave
and
imul
xchg
sub
add
pushf
hlt
out
lahf
mov
insb
movsb
enter
or
sub
in
popl
movsl
es
std
or
repnz
out
xor
ficomps
into
sbb
inc
gs
mov
scas
rorl
sub
rorb
lea
aad
call
add
jmp
sub
dec
jns
call
stos
push
add
inc
loopne
xlat
out
push
stos
out
mov
scas
add
cld
pop
add
mov
sbb
sbb
xchg
cmpb
stos
or
mov
loopne
push
mov
add
sbb
jge
inc
inc
jp
pop
cmpsl
lret
outsl
rol
pushf
in
fwait
testb
inc
push
ja
negb
sbb
jecxz
js
xor
outsl
movsl
push
jl
mov
jle
xchg
mov
push
jmp
push
pop
dec
dec
bound
xlat
mov
repz
arpl
es
sub
imul
xlat
out
jb
adc
mov
xchg
mov
adc
jle
sbb
orb
aaa
iret
das
icebp
xorb
adc
fistps
incl
mov
cs
div
ret
cwtl
mov
xor
push
mov
xor
fs
inc
arpl
dec
sti
outsl
rorl
cli
mov
and
scas
ljmp
or
fcomi
sti
mov
dec
pop
lea
cmp
jns
cmp
add
pop
movsb
sub
dec
mov
jb
hlt
xor
call
jno
dec
cmpsb
jne
xchg
jmp
jo
pop
push
xchg
pop
out
ret
mov
in
pop
sti
jae
adc
push
mov
fsubrs
shl
sahf
fidivrl
fs
push
inc
jno
push
pop
lock
and
mov
jns
ljmp
ret
mov
dec
mov
cmp
cmp
mov
adc
ficoms
out
decb
adc
popa
pop
xchg
xor
loop
movsb
in
lea
aas
xchg
bound
xchg
addr16
call
xchg
mov
push
sbb
das
xchg
mov
popa
das
adc
and
clc
push
aam
aad
int3
in
int
shlb
mov
scas
mov
sbb
cltd
cmpsl
test
jnp
rcrb
add
add
inc
imul
sub
and
mov
push
dec
mov
jl
sahf
mov
insb
xor
movsb
push
fdiv
push
xchg
jecxz
aas
jecxz
pop
or
lods
sarl
lods
add
cmp
jns
movsl
xchg
push
mov
pop
add
mov
mov
dec
or
cmp
lods
dec
mov
test
imul
cmpsb
mov
sub
imul
int
ret
dec
xor
add
shll
gs
js
test
or
movsb
adc
or
mov
jb
pop
dec
xchg
push
pop
add
jl
sub
and
rcrl
hlt
in
mov
cmp
sbb
inc
push
pop
mov
or
mov
adc
adc
frstpm(287
pop
lods
lret
mov
adc
lds
mov
pushf
jg
imul
dec
insb
iret
lahf
push
cmpsb
nop
jns
dec
aad
rcrl
jge
insl
ss
std
mov
xor
xor
clc
adc
mov
push
xchg
dec
mov
pusha
imul
loope
pop
cmp
push
cmp
mov
mov
or
fistps
mov
mov
rclb
xchg
add
sub
jecxz
insl
cmpsb
adc
mov
mov
out
inc
push
out
insl
les
jno
shrl
insb
mov
in
sbbb
push
andb
pop
int3
clc
aaa
xor
or
pop
test
push
xorb
push
push
in
cmp
sbb
cmpsb
pop
adc
ret
out
aad
les
cmp
dec
div
mov
mov
test
loope
dec
inc
fldt
mov
loopne
pop
aaa
mov
cwtl
mov
aas
add
std
pusha
pop
lods
cwtl
jge
out
cmpb
cld
push
jno
mov
jbe
push
mov
fstps
xchg
inc
in
cmpsl
or
fidivrs
les
iret
lea
aad
sbb
cmc
jg
sti
push
sub
push
rcll
gs
fstps
fwait
or
mov
jg
push
push
xor
dec
shlb
adcl
bound
lcall
xchg
pop
push
xorl
scas
mov
inc
mov
sub
ror
aaa
inc
sbb
nop
ss
insb
data16
xchg
aaa
pop
aad
popa
repnz
sbb
or
mov
or
imul
out
or
cmpsl
cmp
sub
mov
cmp
dec
add
pop
and
test
cmp
jl
sbb
addl
push
loope
cmp
mov
out
lea
enter
pop
cmp
loopne
dec
movsl
xlat
dec
cmp
js
ss
movsb
jb
cmc
cmp
dec
push
pop
push
dec
or
les
sub
cli
xchg
jae
adc
jb
out
xchg
out
fistpl
mov
subl
xor
and
fidivs
in
xorl
jbe
sub
jl
test
xchg
adc
rcll
and
sbb
insb
dec
std
iret
pushl
mov
lret
jg
out
es
lods
aam
or
out
pop
out
sub
mov
or
outsl
adc
scas
inc
jns
sbb
lret
mov
in
xor
pop
loop
mov
dec
lret
rclb
test
sbb
test
je
imul
and
push
and
or
sub
rcrl
xor
xor
les
stos
movsl
mov
xchg
jbe
lret
je
out
daa
int3
inc
push
scas
std
popf
les
pop
out
sbb
push
xor
clc
js
and
call
fnstenv
scas
enter
adc
or
idivb
repnz
subb
imul
or
lret
sbb
push
test
out
mov
mov
cmp
jb
aas
cld
inc
movsb
adc
jns
scas
cltd
mov
fnstsw
inc
mov
repnz
add
mov
cmp
jo
pop
xor
push
jecxz
pop
jno
mov
push
mov
popf
sahf
xor
outsl
or
jl
ret
dec
push
leave
imul
jo
inc
pop
adc
stos
data16
mov
ds
test
or
mov
enter
push
sbb
xchg
push
push
xor
mov
lds
out
test
push
xchg
dec
lods
pop
std
subl
and
pop
daa
in
testl
mov
aad
push
scas
add
insl
push
notl
pop
cli
in
xchg
rcll
or
push
lds
sub
dec
jo
clc
or
and
pop
sub
out
mov
das
cwtl
enter
fs
cmpsb
jns
push
push
les
jmp
add
push
lcall
dec
mov
pop
test
adc
jne
pusha
sub
jnp
mov
sub
or
out
xchg
cli
pusha
nop
cs
and
xchg
pop
or
out
incb
jnp
jns
adc
repz
das
and
push
push
dec
aaa
insl
xchg
cmp
loop
sbb
push
sub
jle
cmpsb
notb
xchg
xchg
js
adc
shr
dec
pop
or
jbe
hlt
jo
dec
mov
mov
shlb
cli
arpl
adc
push
sub
dec
inc
pop
lds
mov
sub
pop
lods
in
nop
scas
mov
hlt
in
mov
icebp
subb
cmpsb
aad
dec
jb
xchg
loope
add
shlb
sbb
sahf
in
jmp
in
xor
dec
mov
inc
movsb
sbb
dec
jg
clc
mov
out
stc
jle
repz
mov
add
push
push
or
add
enter
adc
and
add
add
push
add
xchg
cmp
xor
or
pop
jecxz
push
push
out
or
mov
jb
mov
sbb
jo
sub
fadds
mov
dec
and
shll
imul
push
jmp
in
push
mov
call
add
leave
roll
inc
fnsave
movsl
or
push
pop
repnz
and
jbe
stc
stos
jno
sub
call
ret
xor
cmc
sub
pop
test
in
or
sub
scas
sub
lcall
inc
imul
cmpsl
scas
gs
xor
ja
rorl
and
test
cmp
insb
outsb
cmp
int3
int
jecxz
cs
xor
inc
jnp
or
out
pop
mov
sahf
loop
or
add
mov
or
lods
in
cmp
lcall
xchg
in
leave
idivl
repnz
jle
adc
and
adc
sbb
sub
jb
iret
fisubl
add
jno
ljmp
mov
mov
dec
bnd
sahf
sub
bnd
pop
push
push
push
cmc
xor
push
bndldx
add
movsl
cltd
fnstsw
lea
jle
jl
out
jbe
inc
xor
aam
out
loopne
test
arpl
ret
inc
aad
in
mov
test
jecxz
pop
insl
repz
mov
inc
jmp
lcall
push
mov
push
ss
mov
jecxz
jno
into
cmp
xor
out
loope
dec
push
lea
pushf
sahf
xchg
add
dec
fcoms
inc
fucomp
out
cmp
mov
and
clc
xor
dec
je
loop
pop
gs
push
mov
push
insb
sbb
cmc
jl
out
jns
inc
sub
scas
mov
push
out
cmc
ljmp
test
xorb
or
xor
test
sbb
add
loope
jge
cltd
sahf
ret
sbb
js
or
mov
add
mov
xor
pushf
es
mov
addr16
sub
pop
daa
jmp
aam
mov
cmp
inc
test
and
or
adc
cmc
jg
and
cli
repnz
addb
fildll
add
mov
xchg
pop
mov
cli
cmp
aam
dec
aas
je
sbb
mov
add
push
push
xchg
test
popf
jbe
inc
jnp
pushf
repnz
push
or
addb
jle
push
gs
jns
pop
mov
xchg
cli
and
sub
mov
shl
jb
push
pop
jl
mov
lods
aaa
sub
fnsave
into
enter
cs
fucomi
jecxz,pt
fisttps
mov
adc
jae
fs
insl
pop
inc
xor
and
loopne
and
and
cwtl
sahf
mov
inc
cmp
idivb
fimuls
add
or
and
push
adc
data16
add
jbe
leave
and
ja
lea
xor
sysexit
jg
mov
fs
sarb
in
repnz
mov
cld
and
cs
dec
sub
xchg
and
and
cmpsb
movsl
jg
movsl
adc
ret
leave
adc
push
sbb
xchg
add
pop
jo
jno
mov
push
inc
ret
add
mov
stos
call
or
adc
stos
aam
vcomiss
mov
inc
cmp
xchg
faddp
jbe
mov
xor
jmp
ret
daa
pop
cmp
aam
rcrb
gs
xor
test
test
inc
push
pop
adc
sbb
loope
stos
push
jno
pop
cmpb
mov
in
inc
lods
mov
in
and
and
cwtl
and
mov
jbe
mov
add
movsl
fdivr
or
fdivrs
cmp
dec
or
mov
testb
adc
pop
loop
bnd
xor
xor
cli
inc
mov
fidivrs
dec
sbb
inc
cmp
aaa
xor
fisubl
add
dec
nop
rcl
dec
jl
pop
xchg
add
pop
pop
dec
sub
ffreep
lock
and
jl
leave
mov
sub
mov
mov
inc
pop
xchg
sbb
dec
add
test
fcompl
stos
xor
rorb
add
scas
movsl
imul
xor
mov
mov
fsubl
movsl
cld
and
clc
mov
mov
push
push
mov
scas
push
pop
jge
jo
test
lea
xchg
cmpsb
pop
adc
out
insb
push
cmc
add
add
xchg
cwtl
or
dec
hlt
jbe
cmp
mov
or
cmpsb
push
or
mov
sbb
xor
inc
subl
int3
mov
push
xchg
mov
add
lods
jmp
xor
push
xor
add
cmp
pop
or
fcmovnb
sbb
cli
pop
int3
push
in
ja
repnz
in
and
or
xor
dec
negl
add
adcb
popa
and
sub
mov
shll
je
lods
std
mov
cwtl
lock
inc
les
stc
pop
stos
cmp
in
dec
frstor
lret
add
sub
popf
stos
mov
sti
imul
loope
out
outsl
icebp
test
into
mov
mov
pop
xor
popf
imul
lea
dec
mov
lds
add
int
mov
push
jl
out
rcr
mov
aad
outsl
lahf
out
push
andl
mov
pushf
js
add
int
in
repz
or
dec
in
addr16
and
cmp
movsl
xchg
sub
in
andl
jmp
xor
mov
in
adc
dec
orl
jns
mov
pop
jno
fmull
fs
cmpsb
push
ja
fcomps
test
xor
mov
jno
ficomps
inc
add
mov
packsswb
das
adc
mov
add
sbb
jno
mov
inc
in
mov
mov
fsubl
in
add
inc
lahf
andl
arpl
jnp
and
lahf
insl
jne
inc
insb
mov
cld
xchg
or
lcall
adc
sbb
testl
xchg
sbb
mov
rcr
pop
push
mov
pop
mov
lret
leave
push
add
shll
in
mov
fstps
jg
xchg
jp
scas
aaa
test
and
jge
mov
fists
jmp
insl
add
and
mov
and
loopne
sub
pop
xchg
xchg
sbb
test
xchg
mov
das
sbb
outsb
mov
lret
es
lret
push
repz
in
mov
jb
mov
pop
or
leave
iret
pop
dec
push
and
add
mov
jg
dec
or
repz
lahf
repnz
rep
push
arpl
fiaddl
or
xchg
pop
adc
orb
mov
js
xchg
cld
cmpl
add
pusha
and
and
mov
jg
mov
in
pop
lods
out
adc
mov
fs
dec
lcall
shll
cmp
pop
hlt
out
jle
ret
scas
sti
stos
test
scas
inc
jbe
mov
mov
shll
es
or
pop
push
rolb
adc
repz
push
loope
mov
mov
stos
adc
fmuls
icebp
stos
adc
fwait
loop
in
mull
xchg
out
arpl
pushf
cmp
adc
mov
mov
je
sbb
mov
insl
loopne
loope
adc
cld
shll
inc
js
mov
push
inc
cmpsl
lods
int3
cli
sub
xorl
cmpl
adc
jmp
add
adc
cmp
out
and
add
and
add
add
ljmp
xchg
out
sbb
adc
xor
xchg
sbb
in
sub
es
dec
aaa
push
xchg
stc
sarl
add
xor
jnp
mov
movsl
lcall
xor
dec
push
sbb
xchg
add
and
mov
push
push
pop
or
adc
mov
scas
push
loopne
nop
push
and
imul
out
insb
movsl
imul
roll
rcrb
or
shl
xor
addr16
push
dec
mov
push
cltd
sub
addb
out
stos
ror
xchg
les
sbb
dec
cmp
fs
ret
inc
push
call
cvtps2pi
cmp
lcall
je
pop
sbb
cmp
pop
and
fwait
add
lods
xchg
xchg
inc
daa
push
sbb
sbb
cli
adc
aad
adc
cmp
mov
cmp
jae
mov
loope
lods
xchg
cmc
scas
or
dec
or
insb
dec
mov
xchg
push
and
jmp
and
bound
push
ret
jbe
adc
sbb
xor
add
daa
cmp
popf
jae
sub
mov
jge
sti
notl
mov
cs
outsl
stos
sbb
mov
mov
cwtl
leave
mov
add
out
xor
sbb
stc
xchg
inc
sub
jecxz
pop
cmp
sahf
testl
sub
fwait
and
push
push
push
push
sbb
mov
js
jecxz
jecxz
xchg
inc
stos
pop
xor
push
add
xor
cld
scas
and
ljmp
lcall
xchg
xchg
mov
out
xor
fstps
in
leave
mov
mov
add
sbb
sub
pop
lret
sbb
adc
xlat
sub
and
pop
cltd
leave
mov
adc
sbb
sbb
nop
sbb
shl
pop
jb
dec
fsts
mov
aaa
iret
test
sub
popa
outsl
push
mov
jns
xor
scas
dec
push
negb
add
push
cmc
add
mov
jg
outsb
cmp
cmp
add
push
insb
loop
jecxz
cmp
data16
dec
or
jmp
icebp
mov
mov
cmpsb
fwait
jmp
pop
mov
dec
fwait
and
pop
xchg
stos
jne
inc
or
and
pop
add
lret
test
sub
lret
popa
test
mov
leave
aam
clc
xchg
adc
pop
or
inc
xor
adc
dec
pop
or
popa
shr
les
shl
jge
bound
fs
out
or
dec
ret
shl
in
jnp
xchg
lcall
sbb
arpl
sub
sahf
inc
daa
insl
jo
or
jmp
insb
mov
mov
stc
scas
jmp
das
addb
or
inc
out
push
xor
iret
jp
jecxz
sahf
and
iret
pop
nop
paddd
cmpsb
dec
stos
rcrl
cmp
pop
cld
or
push
mov
mov
aas
gs
dec
into
cmp
mov
xchg
cmpsb
mov
mov
mov
mov
push
shlb
inc
mov
mov
and
mov
add
jecxz
pop
push
push
or
popf
call
pop
scas
dec
mov
rol
adc
js
xchg
xlat
push
jne
mov
add
inc
into
cli
lods
dec
jl
aas
imul
push
test
cmp
daa
cmp
push
inc
or
xor
test
inc
jns
and
stos
ret
notl
lret
inc
lods
gs
fcmovne
adc
dec
pusha
mov
mov
dec
jns
adc
in
pop
das
and
jecxz
sbbb
leave
orl
ljmp
dec
fisubl
scas
cmp
mov
mov
dec
test
dec
mov
mov
jl
dec
mov
mov
mulb
cmp
shrb
les
imul
jbe
inc
andb
cmp
stos
nop
fwait
repnz
jecxz
sbb
jg
xor
addr16
or
inc
outsl
push
and
cld
lcall
ja
lods
js
dec
mov
inc
mov
les
jl
mov
sub
ljmp
push
sar
pop
shll
out
mov
mov
jg
lret
adc
shll
ret
repz
fnstsw
je
xchg
hlt
mov
add
add
jecxz
rol
into
push
ljmp
jnp
test
add
lahf
sbb
mov
xor
adc
in
xchg
loop
cmp
mov
es
pop
and
sahf
and
jle
push
pop
xor
cmp
pusha
add
xor
inc
lock
rcll
inc
xor
shlb
hlt
fcomip
mov
lret
lret
testb
ljmp
dec
pop
pop
fnstenv
lcall
cmp
pop
aad
jmp
jmp
gs
jns
arpl
mov
aaa
mulb
out
les
cmpsl
push
insb
rorl
mov
fdivr
dec
pop
clc
jecxz
mov
inc
add
test
adc
fcomip
in
in
popf
push
sub
lret
imul
or
inc
jo
jecxz
movsl
or
jne
adc
movb
jns
lods
dec
out
clc
cli
sub
dec
mov
es
sub
lret
cmpsl
adc
test
ds
lods
out
cltd
lods
lret
outsl
divl
mov
pop
mov
popf
mov
outsl
dec
push
and
adc
arpl
push
adc
ror
mov
icebp
adc
push
push
sti
add
sahf
inc
ds
ret
ljmp
adc
push
aaa
repnz
clc
pop
xchg
add
subb
fcomi
notl
fstpl
pop
mov
mov
cs
stc
sarb
inc
xor
pop
jge
jmp
mov
outsl
or
adc
jbe
fs
sub
cmc
lock
or
cld
imul
mov
dec
loopne
fcompp
sbb
sbb
test
shlb
or
arpl
lret
cmp
pop
into
insl
mov
cltd
dec
scas
push
lea
or
xchg
outsb
arpl
or
jge
sarl
cmp
cmc
push
and
jbe
movsb
sbb
push
mov
imul
pop
xorb
outsb
cs
jle
add
movsb
jg
or
aad
and
js
pop
mov
scas
fwait
mov
push
iret
rcrl
mov
lret
repz
gs
cmpsb
popa
adc
and
xor
jecxz
cwtl
idivl
adc
mov
filds
pop
sbb
lods
gs
and
xchg
bound
fisttps
cmp
sbb
cmp
jp
out
pop
fsubl
mov
push
mov
data16
jbe
jg
lods
adc
push
fdivs
loope
fnstenv
push
mov
jle,pn
inc
lcall
aam
in
inc
out
je
test
idiv
out
inc
dec
push
test
push
lods
imul
dec
scas
ds
repz
push
imul
imul
jb
movsb
lahf
adc
adc
dec
push
push
inc
enter
cmp
lret
fs
pusha
test
fs
sbb
jmp
repz
and
enter
mov
data16
pop
lods
iret
aam
aam
jmp
push
jne
pop
pop
mov
cs
lahf
je
adc
cld
mov
jnp
push
mov
xchg
sbb
nop
xor
cmp
das
inc
pop
addr16
mov
sub
stc
sub
stos
cmp
outsb
xlat
push
dec
pop
repnz
mov
mov
mov
addr16
pop
pop
and
sti
lea
mov
popf
sub
sarb
enter
push
movsb
jmp
xchg
sub
in
add
mov
or
jmp
cltd
sbb
lock
mov
popa
jp
mov
data16
pop
mov
push
loop
js
pop
lods
stc
push
xor
adc
mov
jge
and
sbb
jns
adc
fmuls
inc
dec
inc
nop
iret
fnclex
rcrb
jg
loopne
lcall
and
out
imul
fbstp
arpl
stos
je
mov
jg
int
jns
pop
inc
sub
int3
jge
mov
arpl
push
push
xor
jmp
cmpsb
pop
out
cltd
in
jno
inc
push
imul
lahf
into
inc
insb
jne
cli
fwait
adcl
or
mov
scas
cwtl
dec
shr
movsl
cmp
inc
mov
bound
xorb
mov
es
mov
push
sbb
arpl
in
push
adc
inc
ss
or
xchg
cli
push
out
ss
stos
jne
mov
or
mov
inc
and
loop
in
add
jle
out
sub
sub
push
jmp
pop
xchg
push
addr16
mov
adc
ficompl
test
inc
imul
pop
inc
incb
push
cmp
xor
or
dec
test
dec
inc
cmp
leave
sbb
adc
fisttpll
mov
in
push
or
mov
ss
clc
mov
scas
aaa
jo
test
loop
je
jnp
pop
xor
divb
push
adc
mov
iret
push
mov
cli
jl
dec
mov
or
sbb
outsl
mov
fwait
jg
sub
mov
cmp
lds
out
sbb
in
xchg
cmpl
aam
scas
or
push
imul
sbb
sub
sub
dec
cmc
xchg
add
and
add
das
jb
and
cwtl
adc
stos
sahf
dec
mov
js
fldcw
enter
push
cmp
nop
es
mov
fmuls
jb
cmp
mov
xor
cmp
outsb
adc
push
repz
notb
es
vminps
mov
xor
pusha
mov
push
imul
cld
imul
sbb
cmp
and
push
sahf
daa
andl
das
scas
or
mov
mov
and
test
imul
sub
adc
das
outsl
cwtl
push
pop
pop
and
cmp
rcrl
add
xor
jbe
adc
pop
adc
cli
xchg
loop
jl
adc
int3
fdivrs
mov
mov
bound
or
test
and
shl
adc
retw
dec
xor
add
push
sub
mov
push
dec
nop
rcrl
mov
mov
mov
inc
cmpsl
addb
cltd
add
mov
sub
ret
jmp
xchg
push
icebp
mov
outsb
ljmp
inc
or
test
inc
jno
dec
sub
movsw
cmp
push
sub
pushf
pop
fcoms
dec
nop
mov
sbb
jb
jbe
pop
inc
inc
dec
ljmp
add
sbb
movsl
scas
loop
aad
xchg
shll
sbb
bound
push
pop
adc
je
push
pop
ret
xchg
lods
or
cli
movsl
pop
push
test
adc
or
lret
mov
jb
lods
add
stc
or
mov
and
out
mov
in
inc
and
jae
xlat
adc
xchg
sbb
dec
adc
add
imul
arpl
test
lcall
sub
lret
dec
arpl
mov
mov
push
push
mov
in
push
loop
js
and
fsts
xor
dec
mov
pop
mov
scas
mov
nop
dec
push
sbb
jl
js
mov
jecxz
inc
jnp
xchg
mov
xor
lret
and
xchg
add
add
sub
stos
push
xchg
imul
test
ljmp
xchg
pop
imul
daa
jl
iret
xor
es
and
xor
jmp
bound
mull
cmc
dec
mov
lods
ja
bound
sahf
adc
dec
cmp
out
incb
ja
je
push
fnsave
in
ja
jnp
cmp
imul
mov
bsr
fimuls
fmul
xchg
jecxz
jp
lock
and
ss
jl
sbb
push
out
out
mov
insb
in
cmp
popf
or
mov
mov
mov
scas
jmp
pop
in
rcrl
inc
out
cmpsl
fimuls
dec
add
ret
jmp
and
imul
bound
ficoml
mov
xor
jne
fimull
cmp
sbb
jns
ljmp
cmp
repz
xchg
sbb
mov
adc
mov
shl
cld
or
test
gs
ret
shrl
xor
adcb
jbe
call
inc
in
push
sti
leave
cmp
mov
addr16
in
ljmp
or
sbb
fbstp
mov
pop
mov
mov
jmp
in
filds
cmpsl
add
push
mov
adc
loope
test
andb
pop
cmpsl
lcall
aas
cmpsb
jp
mov
jno
test
scas
aad
add
jno
popf
ret
imul
mov
out
pop
xchg
and
sub
sbb
gs
or
fsincos
or
loopne
andl
popf
faddl
orb
xchg
and
paddb
addl
adc
popf
mov
mov
mov
ja
stos
out
pop
aas
test
inc
push
imul
dec
mov
adc
push
push
jle
orb
cmp
cmp
cmpsl
fiaddl
pusha
cs
mov
and
push
inc
repnz
addr16
xor
pop
stos
mov
call
and
lods
testl
push
data16
xchg
jge
leave
into
fldt
popa
stos
mov
dec
adc
dec
mov
fwait
subb
test
fs
or
iret
or
cmpb
fisttpl
orl
cwtl
add
ds
mov
out
sbb
jecxz
mov
sbb
or
and
repnz
pop
mov
loop
ja
aad
jmp
dec
std
repz
iret
jge
sbb
push
xchg
dec
fstl
xchg
cli
pop
push
add
in
shl
adcb
sub
rcrb
or
inc
fcoml
mov
pop
xchg
ss
mov
pop
dec
push
shr
js
aas
mov
jne
je
loope
iret
cmpsl
sub
fnstenv
jl
clc
mov
dec
sbb
test
lahf
nop
ret
add
sub
or
pop
rclb
stos
fsubr
pop
cs
jl
lcall
dec
sbb
cld
push
mov
fdiv
data16
sbb
lods
fwait
ss
out
cld
mov
popf
xchg
or
into
or
xor
add
into
clc
xor
rol
mov
shl
cmp
sbb
sbb
mov
xchg
fcomps
arpl
icebp
sbb
test
lret
ret
pop
pop
sub
out
mov
pop
fdivs
jne
adc
push
mov
pop
aad
rcll
sub
sbb
and
ret
pop
sbb
into
mov
out
insl
outsb
jecxz
in
push
mov
imul
mov
pop
sub
fbld
mov
mov
mov
inc
mov
loop
mov
jmp
arpl
adc
rcl
std
fiaddl
sbb
cmc
pusha
xor
iret
mov
mov
ret
imul
sub
jge
sbb
int3
fst
pop
addl
add
jle
out
repz
xor
hlt
aaa
fidivrl
mov
subb
fs
or
xor
cmp
movl
jb
adcl
out
ds
mov
ljmp
push
imul
xchg
lret
scas
mov
in
jp
inc
sbb
cmp
rcll
mov
jle
push
movsb
xor
xchg
mov
cmp
dec
or
adc
sub
in
fdivs
push
stos
sub
dec
hlt
icebp
jne
sbbl
nop
loopne
clc
xchg
je
xchg
enter
inc
mov
enter
pop
fwait
aas
cmp
and
adc
push
mov
xchg
icebp
lods
xor
adc
es
call
lcall
ljmp
dec
dec
dec
call
mov
shll
into
dec
adcl
jbe
and
push
daa
arpl
hlt
int
shrb
add
les
adc
sahf
sub
cmpsl
sub
pop
mov
test
test
mov
sub
cmc
dec
jns
push
jp
cmp
push
xor
mov
push
fimuls
outsb
aas
popa
inc
dec
ja
dec
aam
loopne
add
dec
dec
xchg
or
subb
pop
les
mov
sub
inc
nop
and
pop
pop
jbe
ds
dec
sarl
fsts
faddl
pop
int
push
jnp
pop
xor
adcb
xor
adc
push
jge
lods
sub
push
cmp
jle
das
xor
and
dec
mov
hlt
sbb
cs
insl
test
xor
lahf
test
mov
lret
adc
int
mov
in
xchg
jo
jge
dec
scas
dec
fnstsw
sbbl
pushf
repnz
mov
outsl
jbe
lds
sbb
push
mov
mov
ret
or
jne
scas
xchg
ja
sbb
lea
mov
lret
int
leave
or
cmc
xor
add
xchg
mov
jnp
je
cld
arpl
sub
xchg
jl
rol
test
jp
aaa
mov
sahf
and
testl
into
repnz
call
sbb
nop
cmp
inc
pop
xchg
fnstenv
sub
adc
leave
xchg
pop
push
aaa
mov
mov
lods
mov
xchg
dec
inc
lods
js
xchg
pop
outsb
pop
das
xchg
lcall
fiaddl
imul
adc
and
insb
and
mov
push
test
cmp
fists
imul
stos
lret
mov
mov
add
fs
jae
xchg
adc
pop
sarl
icebp
pop
add
cmp
pop
testb
js
dec
fs
push
stc
lahf
int3
inc
lds
mov
popf
pop
movsb
in
test
mov
cmpl
jb
sar
push
add
xchg
int
jl
sub
mov
xchg
jl
mov
push
jle
imul
lea
js
cs
js
sahf
push
pop
mov
xchg
cs
dec
rcll
imul
outsb
call
les
adc
xor
mov
leave
shlb
sahf
inc
inc
inc
xchg
in
imul
cs
mov
mov
in
out
rclb
cld
xlat
push
aaa
je
adc
or
or
aas
pusha
pop
ja
int3
pop
push
push
xchg
outsl
jecxz
add
push
cmp
fldl
nop
mov
shrb
xor
hlt
shlb
fnstsw
jno
adc
or
push
jg
popa
push
lods
cs
mov
push
and
in
jl
add
fwait
sahf
aam
cwtl
pop
int3
sub
ret
cltd
cmpsl
js
pusha
imul
outsl
push
push
adc
test
cmp
scas
mov
ds
cmc
daa
das
mov
pop
sbb
ds
cmp
imul
fs
sub
inc
jle
mov
sbb
lods
add
dec
jp
and
cli
xor
mov
mov
ret
xchg
mov
mov
adc
movsl
fnstsw
push
cmpsb
xchg
addl
xor
xor
or
or
testb
fs
pop
sub
mov
cmp
mov
adc
test
lds
pop
dec
cmp
fcoml
aas
loope
std
push
not
loope
pop
es
push
out
popf
adc
stos
mov
jge
mov
add
aaa
in
stos
arpl
add
xchg
push
fsubrs
stos
add
cmp
rorl
xchg
idivl
jb
repnz
rorb
inc
pop
dec
dec
push
mov
repz
jo
or
stos
cmp
sub
sbb
pop
imul
jnp
push
mov
imul
jae
or
inc
fldenv
jno
pushf
sarl
sub
fidivrl
arpl
sbb
xor
rcrl
push
stos
pusha
repz
pop
adc
int3
mov
mov
es
mov
xor
addr16
stc
aas
sbb
cwtl
icebp
clc
mov
stos
cmc
mov
jnp
or
sbb
cmpb
or
push
xor
add
daa
add
mov
jbe
je
pop
mov
aad
xor
sub
mov
rcll
adc
jae
add
sbb
int3
lahf
mull
mov
cli
mov
bound
sbb
gs
inc
mov
xor
aaa
addr16
sbb
sbb
mov
xchg
cmpb
xchg
add
inc
xlat
pop
shll
mov
mov
jmp
in
inc
mov
jge
cwtl
loopne
mov
nop
lock
rcrb
jns
das
fs
push
push
arpl
add
push
sahf
nop
mov
push
popf
sti
enter
adc
sbb
test
xor
mov
pop
movsb
popa
mov
cmp
mov
sub
pusha
mov
push
aad
cmpsb
xchg
and
or
pop
xchg
dec
and
pop
fisttps
lods
je
test
mov
cli
mov
addb
push
out
xor
cld
pop
and
jb
pop
sub
add
fistpll
in
cmp
mov
fbstp
icebp
enter
popa
xchg
mov
insl
in
adc
imul
cmp
cmp
nop
insl
int
int3
inc
inc
add
test
insl
sbb
cmc
mov
lea
mov
push
out
jb
push
jecxz
or
fldt
push
pop
xor
xchg
mov
xor
mov
js
test
mov
test
cmpsb
pop
xchg
shlb
jecxz
loope
dec
xor
ja
loopne
xor
stos
push
mull
and
cmp
sub
rcl
les
je
jle
pushf
pushf
pop
cld
push
push
xorb
cmp
xor
mov
aas
jb
inc
mov
mov
sub
mov
mov
mov
stos
pop
add
adcb
cmp
add
sbb
pop
mov
or
sbb
inc
cmp
jbe
inc
rorb
pop
in
in
ret
hlt
bound
lock
mov
repz
outsb
cmp
ficoms
dec
out
sub
sub
sub
popf
insb
out
dec
and
cmpsl
mov
and
dec
cltd
push
add
or
adc
bound
fnstsw
jecxz
adc
aaa
adc
cmp
test
dec
or
cli
dec
mov
sbb
add
lods
outsl
jb
scas
adc
xorl
lcall
mov
add
fidivl
nop
xor
pop
push
ret
je
push
pushf
and
pop
pop
dec
or
and
decb
call
cmpsb
sub
jne
push
mov
lcall
repnz
adc
scas
cld
cmp
and
repz
les
loope
jno
cmp
cmp
fdiv
sbb
xchg
add
jge
das
dec
sahf
add
das
hlt
mov
cmc
loope
and
stos
inc
sbb
sti
repnz
pop
add
rol
mov
rcll
jno
push
mov
or
cs
in
xchg
ss
nop
sub
push
xchg
mov
inc
sub
imul
iret
push
stos
mov
ja
rcrb
add
pop
es
push
fs
cld
inc
or
test
idivl
adc
orl
push
mov
in
nop
inc
cltd
lcall
cmp
xchg
mov
pop
in
mov
std
xchg
stos
push
xor
push
stc
fsubs
and
nop
inc
dec
loopne
mov
add
dec
rol
cmpsl
jno
xchg
inc
repz
mov
in
les
lcall
mov
sub
rclb
popa
mov
push
mov
sarl
cltd
cmp
inc
fnsave
into
loope
inc
hlt
ret
and
popf
ror
or
cmp
push
inc
mov
sub
sbb
call
fwait
pop
add
inc
add
mov
pop
pop
jge
test
xor
data16
mov
mov
jns
pop
int
inc
sti
jnp
je
xor
push
lret
lea
mov
push
xchg
aad
pop
enter
mov
maxps
sub
mov
mov
pop
xrstor
mov
mov
sbb
xchg
gs
sub
or
mov
mov
sti
test
xchg
ficompl
dec
les
fwait
and
or
pop
push
dec
arpl
test
cmc
imulb
into
jnp
mov
mov
in
xlat
leave
insl
insb
xchg
xchg
mov
int3
clc
xor
push
adc
lock
push
lret
pop
outsb
out
mov
add
xchg
movsb
imul
lret
mov
lds
imul
leave
push
xorl
cmpsl
bound
sub
pusha
and
sarb
and
add
and
iret
mov
jecxz
cmp
cmp
add
dec
pop
lea
pop
in
push
mov
test
mov
lea
cmp
leave
inc
xchg
ja
lret
mov
enter
xlat
sub
cwtl
imul
push
filds
jns
in
push
pushf
and
cmc
fidivl
cltd
xor
push
shl
shrl
xor
iret
fmul
mov
sbb
pushf
mov
cmp
push
arpl
and
gs
inc
adc
xchg
lds
popl
adc
and
dec
gs
cmp
xor
fisttpl
aam
mov
es
fs
xor
push
inc
push
movsl
inc
mov
test
and
xchg
movsl
in
mov
test
cwtl
loop
test
fincstp
addr16
mov
and
push
jl
iret
test
xor
movsl
popf
pop
ss
lret
es
iret
cmp
jbe
push
imul
mov
push
mov
push
or
mov
loope
mov
lods
popf
pop
and
inc
ret
test
mov
lods
jne
mov
aad
and
in
out
mov
arpl
jns,pt
mov
sbb
sar
popf
lock
shrl
sub
loope
mov
add
cltd
aam
das
ja
sub
xchg
stc
jae
dec
add
fstps
mov
jge
mov
ret
mov
shrl
jp
cmp
cmp
adc
sti
ljmp
jg
clc
lret
jle
xor
jo
icebp
and
int
jp
clc
out
add
mov
inc
dec
pop
scas
or
jbe
mov
mov
pop
lahf
mov
int
dec
lret
xlat
fmulp
fs
bound
mov
jbe
negl
xchg
push
pop
mov
jle
popa
dec
movsl
fldenv
pop
mov
rclb
sub
lods
rorb
daa
cs
sbb
es
mov
pop
icebp
push
xor
or
andl
pop
jne
mov
js
xchg
lret
movsb
jmp
clc
lock
jmp
pop
fiadds
mov
ja
xchg
add
mov
clc
pop
dec
cmc
add
sbb
xor
enter
js
xchg
lahf
sub
orb
loopne
mov
aam
mov
push
sub
into
cmp
into
enter
or
pop
inc
jp
sbb
mov
ss
cmp
add
les
shr
outsb
jg
sbb
imul
add
mov
push
jmp
lods
scas
mov
test
cs
loop
sub
lds
mov
push
and
xchg
add
mov
cmpsl
icebp
sti
mov
push
adc
orb
rcll
fistps
es
cmp
int3
push
rorb
xchg
sub
push
sub
sbb
sub
stos
fldcw
mov
lret
popa
aaa
sarl
mov
xor
cli
xchg
sbb
xlat
mov
adcl
test
xchg
iret
jle
andb
xor
adc
shl
xchg
jge
ret
mov
addb
pushf
fisttpll
test
push
adcl
lcall
jnp
into
test
sub
cwtl
idivb
int3
dec
xchg
push
sub
cwtl
jbe
leave
inc
data16
jbe
push
jge
jecxz
dec
enter
xchg
or
or
cmp
arpl
cmpl
push
jle
sbb
iret
and
sub
adc
or
xchg
inc
and
dec
inc
outsl
ljmp
call
movsl
cmpsb
pop
outsb
jg
bnd
sti
leave
or
cmp
jecxz
shrb
notl
ljmp
push
rcrl
js
int
lahf
cmp
clc
xor
out
cmp
pop
jmp
inc
cwtl
cmp
mov
out
or
inc
cmp
popf
arpl
sub
addb
testb
hlt
sarl
jp
ljmp
mov
out
das
xor
push
insl
int
pop
sti
xor
mov
mov
xlat
dec
mov
sub
cmpl
inc
rcl
jb
dec
add
adc
sub
aam
jg
dec
out
dec
imulb
push
fdivl
iret
pop
or
lret
jg
fwait
mov
inc
sbb
mov
mov
outsl
mov
and
rorl
test
jno
sarb
pop
inc
cmp
add
es
pop
inc
nop
clc
push
outsb
or
daa
negb
insl
in
jno
sahf
dec
cs
mov
xchg
test
mov
or
into
sub
lcall
cwtl
aaa
jns
fadd
test
aas
dec
sub
dec
imul
sarb
push
adc
adc
sti
lret
mov
and
rol
sub
xlat
cs
test
pop
in
add
fwait
xchg
dec
sti
adc
rolw
xor
jns
cmpsb
and
daa
popf
mov
pop
push
outsb
pop
scas
sahf
dec
sysexit
push
sub
addb
clc
dec
jl
sub
adc
mov
add
or
inc
sub
xchg
sti
or
cmp
jnp
lret
fstps
and
dec
fs
out
xchg
xlat
cmp
decb
or
sbb
push
je
sbb
sub
and
scas
mov
movl
sarl
and
cltd
cmp
pop
mov
mov
push
xchg
xchg
sub
push
inc
inc
imul
dec
in
sbb
inc
jo
push
mov
jl
ret
mov
cmp
cmpsb
test
aad
jle
ljmp
pop
lds
pop
push
mov
jo
dec
lock
pop
and
mov
in
or
mov
loop
jno
fdiv
push
jge
scas
adc
in
arpl
xchg
jnp
in
push
into
mov
in
call
mov
add
and
push
mov
in
inc
sbb
jg
and
dec
cmpsl
jb
dec
add
popf
dec
push
sub
stos
mov
mov
cmpsb
xchg
into
sub
out
cmp
push
decb
ja
mov
cwtl
test
sti
cmp
imul
mov
fidivs
in
pop
popa
test
cmp
xchg
adc
adc
sub
cli
adc
div
lret
cld
leave
mov
loop
int
lret
pop
insl
pop
into
adc
pop
fidivrs
cld
mov
sub
sub
inc
jne
xchg
scas
movsb
mov
scas
mov
subb
dec
enter
xchg
and
inc
fdiv
dec
mov
mov
xor
push
ljmp
subb
and
popf
lock
fldcw
les
xchg
in
sbb
mov
fldcw
repnz
jge
xor
push
or
pop
push
jb
test
jmp
lods
addr16
adc
mov
leave
into
push
or
mov
adc
insl
sub
cmc
pop
ret
data16
xchg
mov
jecxz
pop
jl
mulb
or
inc
cmc
sbb
popf
pop
push
xor
xlat
inc
sbb
add
nop
test
mov
scas
push
mov
push
test
int3
sub
jb
ret
adc
movsb
mov
hlt
cmp
jae
dec
mov
inc
fwait
ja
adc
loope
aaa
jle
sahf
in
push
cli
imul
int
jno
aas
mov
pusha
aas
pusha
adc
push
inc
call
pop
mov
adc
out
cmp
jge
adc
mov
scas
in
adc
mov
js
jb
mov
aas
push
das
cmp
aad
push
das
shlb
and
xchg
addr16
mov
dec
mov
es
aam
push
pop
sahf
or
xlat
lret
repnz
or
xor
xlat
stc
mov
loop
or
jns
lea
mov
lock
pop
push
insl
clc
jp
cmpsb
mov
outsb
movsb
mov
dec
xlat
cltd
lods
je
pushl
pop
shlb
mov
test
cmp
jg
mov
frstor
repz
or
outsb
fimull
jno
aaa
sub
fnstsw
add
fdivrl
or
aad
push
add
pop
sub
mov
lods
mov
pop
cmp
roll
bound
inc
adc
xor
call
and
pop
lret
xchg
in
push
fs
sti
inc
jmp
adc
push
mov
stos
cli
fildll
mov
repz
cmpsb
loop
fs
mov
aad
out
movb
repnz
mov
dec
adc
sub
je
sub
adc
jg
xchg
sub
mov
mov
xchg
in
jno
ds
adc
or
inc
push
dec
or
mov
pop
daa
sbb
mov
pop
and
lods
mov
icebp
push
dec
xlat
fwait
inc
xchg
jnp
addr16
mov
and
pop
mov
mov
pop
aaa
mul
cltd
andb
rcll
push
or
mov
iret
push
in
pop
inc
jg
jae
stos
sub
shrb
movsb
enter
add
ss
icebp
jecxz
cmp
push
inc
outsb
dec
xor
cmp
adc
rcrl
mov
cmpsl
jbe
inc
push
push
ficoms
push
enter
mov
imul
in
add
out
push
es
repz
mov
ljmp
pop
arpl
inc
lods
adc
dec
negb
sub
mov
sbb
mov
dec
push
aaa
and
xchg
cmp
inc
jnp
pop
pop
orl
jp
inc
inc
adc
stos
jecxz
out
inc
or
sti
notl
xchg
mov
or
cmp
push
add
das
inc
ret
fsubp
and
aas
outsb
insb
push
dec
sbb
jl
or
inc
mov
sbb
loope
jmp
add
pop
dec
xor
push
pop
nop
js
mov
mov
leave
and
jbe
test
pop
jp
in
cmp
js
or
mov
inc
or
insb
cltd
mul
cmp
ret
jle
sub
ret
inc
pop
xchg
les
and
mov
or
int
jmp
fimull
mov
inc
jns
data16
jbe
aaa
or
addr16
test
mov
lret
xchg
jnp
out
ret
push
scas
push
test
out
enter
in
cltd
lds
sbb
adc
fidivs
push
popa
sub
hlt
out
jp
add
out
pop
pop
cmp
repz
jg
sub
xchg
dec
lcall
push
pushl
out
mov
insl
add
clc
jne
mov
cmpsb
sub
popf
daa
xor
cvttps2pi
xor
add
fstpl
xor
or
setle
mov
jp
rorl
pop
mov
jnp
je
out
movsl
jae
mov
adc
xor
xchg
adc
or
scas
mov
cmp
sbb
icebp
push
fildl
fisttpll
mulb
outsl
push
mov
dec
or
loopne
pop
push
xlat
std
pop
or
push
enterw
jns
aam
hlt
dec
ljmp
in
scas
xor
mov
aaa
xchg
cmp
add
int
inc
cmp
sbb
adc
jecxz
xchg
add
jo
imul
jle
dec
ja
iret
out
cmp
push
sbb
inc
mov
xor
mull
push
fpatan
dec
rorb
aam
andb
sub
int3
mov
aam
cmp
ljmp
inc
sub
jl
imul
xor
push
cs
cmp
xchg
shlb
jae
lds
sub
pop
cmp
jae
push
enter
xchg
or
movsl
ss
push
ret
or
push
sbb
shlb
xor
aam
popa
les
pop
push
inc
add
push
cwtl
mov
cmp
leave
push
push
pushf
push
scas
push
dec
outsb
pop
test
and
aaa
imul
xor
xchg
adc
mull
mov
mov
ds
arpl
jg
movsb
repnz
popf
or
fildl
int3
mov
std
inc
cmp
pop
fdivrl
dec
mov
pop
andb
push
dec
rcrl
lret
in
pop
mov
jp
nop
xlat
mov
pop
xchg
fmuls
and
ja
fdivs
rolb
arpl
ljmp
int3
daa
hlt
jne
xchg
cmp
std
dec
xchg
and
cmp
out
jno
das
pop
repz
shl
mov
hlt
xchg
icebp
into
inc
imul
mov
mov
and
jne
arpl
mov
js
fistps
pop
mov
repnz
aas
mov
xchg
lea
push
shrb
jne
lock
shl
xlat
or
pop
fsubrs
jle
bound
xor
mov
insb
rcrl
and
shll
lret
daa
and
inc
fs
xor
pop
jp
rorl
or
test
cmp
jp
dec
movsl
sub
inc
mov
sarb
fisttpll
jecxz
push
dec
imul
sub
or
mov
and
mov
xor
lahf
mov
adc
mov
mov
sub
pop
xchg
sub
pop
test
mov
push
xor
fldl
xchg
or
mov
sbb
mov
cmp
pop
popf
insb
mov
testb
jmp
dec
cltd
aaa
ret
adc
sbb
xlat
loopne
mulb
imul
mov
in
andb
fnstenv
rorb
dec
xchg
lods
ret
popa
or
pop
push
cmc
sahf
jae
jge
in
leave
pop
xchg
loope
jp
jecxz
insl
hlt
insb
pop
fs
fidivl
cmp
or
hlt
jbe
dec
and
repnz
jle
cmp
jge
or
idivl
sbb
cmp
push
or
sbb
mov
sbb
nop
and
mov
frstor
mov
and
pushl
sbbl
mov
mov
cs
std
xchg
xor
leave
adc
fs
xor
mov
mov
mov
out
out
scas
jno
mov
in
mov
roll
into
ss
sbb
fstpl
mov
lcall
lds
subb
inc
lret
push
jg
jecxz
in
xchg
shr
shlb
out
push
lret
loopne
shl
sahf
inc
jecxz
jmp
bound
insb
cmp
xchg
mov
int
nop
xchg
mov
jp
clc
pop
or
lret
mov
mov
sub
pop
loopne
sub
jge,pn
jns
mov
out
out
in
movsl
dec
pop
adc
or
sbb
mov
cltd
pop
or
and
mov
dec
cmp
lods
les
loopne
sub
cli
fnstcw
movsl
jle
pop
arpl
or
shlb
jmp
and
and
xchg
lds
fcmovu
lcall
pop
sbb
push
pop
rorb
pop
mov
mov
pop
pop
lds
inc
out
push
outsl
ret
es
xchg
xchg
and
push
pop
or
movsl
dec
push
add
adc
mov
out
rclb
insb
mov
scas
ja
sbb
int3
outsb
xchg
loop
lret
cmp
xchg
mov
mov
sbb
dec
repz
push
lods
imul
pmuludq
add
cmpb
adc
sub
cmc
insb
xlat
into
and
adc
mov
adc
pop
push
jmp
scas
lds
xchg
repz
mov
outsb
mov
js
pop
mov
pop
subb
out
mov
stos
aaa
cmp
or
mov
cs
dec
lea
ret
test
or
ret
call
sbb
or
mov
pop
addl
mov
fxch
mov
cmp
mov
pop
xchg
test
add
or
arpl
les
lret
jl
dec
call
test
sub
insb
xchg
mov
jbe
cmc
xor
pop
addl
jne
sub
jb
test
jmp
aam
loopne
enter
sbbl
mov
mov
dec
nop
cmp
inc
loopne
in
xor
and
fldcw
jmp
stc
xor
lods
fnstcw
in
mov
inc
add
mov
mov
movsl
lret
lea
jbe
loopne
hlt
nop
insl
roll
jle
insl
push
in
sub
pushf
aad
push
adc
xor
jle
mov
mov
cmpsb
push
das
pop
add
and
das
pop
jg
int3
arpl
inc
or
sbb
pmaxsw
dec
repnz
lret
scas
lret
es
cmp
outsb
add
out
mov
clc
aam
je
in
jne
jbe
mov
aas
add
fcompl
add
push
pop
test
xchg
inc
cmpsb
jb
inc
inc
xchg
cli
sarb
test
div
sub
cmp
sahf
add
cmp
push
fistpl
push
pop
rcll
mov
cmc
pop
mov
mov
mov
push
or
and
cli
roll
mov
mov
lds
sbb
sub
rclb
inc
out
inc
dec
enter
mov
mul
mov
mov
inc
add
add
add
cmpb
std
mov
mov
cmpsb
push
mov
mov
rorb
mov
pop
cmp
mov
gs
inc
sarl
rorb
repnz
xor
call
add
xor
lret
push
push
jae
pop
inc
ret
mov
fcmovbe
in
fs
mov
adc
sbb
dec
xchg
scas
bound
pop
inc
lret
aad
push
mov
leave
jecxz
lret
xchg
aaa
and
mov
cli
push
pop
loop
outsl
into
xor
and
int3
loope
push
add
cmpsl
fiadds
inc
dec
mov
pop
aad
fdivrs
insl
push
or
inc
dec
mov
jle
add
movsb
jmp
sub
sti
and
divl
mov
xor
jmp
test
and
fstps
lock
push
test
mov
stos
jmp
adc
icebp
xor
add
add
outsb
clc
sub
xchg
arpl
jns
add
sub
mov
inc
xor
rorb
mov
xchg
mov
shlb
fmull
in
xor
jl
mov
dec
mov
cmp
cmp
mov
xorl
xor
inc
fwait
rclb
lods
pcmpeqw
adc
push
cltd
outsl
mov
mov
jo
cmp
mov
inc
sbb
jbe
dec
or
and
outsl
lret
and
mov
pop
push
cs
add
mov
mov
enter
mov
popa
fstps
pop
loop
mov
mov
sbb
cmp
mov
add
mov
sbb
pop
pop
nop
jmp
xchg
lret
jg
jo
cmp
outsl
push
mov
xchg
xchg
in
pop
cmc
sbb
daa
loopne
push
pop
adc
xchg
imul
rcl
jns
inc
daa
xor
adcb
push
mov
sbb
xchg
adc
sub
and
pop
mov
pop
pop
enter
fists
sbb
xchg
fucom
push
xchg
and
outsb
testb
std
mov
jns
mov
xchg
ret
mov
xchg
push
lods
add
inc
jno
jl
lcall
pop
add
test
mov
enter
add
pop
sub
rolb
fisubrl
adc
fsubrl
xor
out
aaa
dec
push
imulb
addr16
outsb
fsubrp
cmp
pop
imul
mov
out
xchg
int3
stc
pop
jl
adc
mov
aam
cltd
aad
out
sub
jge
ret
imul
scas
jge
jbe
and
add
mov
mov
jmp
stos
fnstsw
test
lods
sahf
xor
push
insl
hlt
fldl
ds
cmpsl
push
repnz
push
mov
jo
loop
dec
lret
xorb
cmp
dec
push
inc
fsubp
popa
es
jbe
push
xor
push
or
fsubrs
icebp
sbb
sbbb
cmp
test
fcompl
and
cmc
cmp
push
ljmp
adc
incb
add
in
mov
push
jg
nop
cltd
fnstenv
dec
and
outsb
insb
orl
xchg
jg
repnz
inc
imul
loop
jmp
movsl
out
xchg
or
or
cli
test
and
rol
mov
ficomps
popa
xchg
aam
or
pop
sbb
call
jmp
shlb
test
add
push
mov
xor
xchg
xchg
mov
xor
stc
fmul
dec
sub
sub
or
sub
mov
and
fistpll
push
jmp
shl
jbe
in
testl
inc
jp
mov
fildll
mov
loope
add
shrb
outsl
sbb
sub
add
and
mov
lahf
mov
clc
and
aas
add
icebp
jb
test
inc
js
push
xor
pop
loope
sbb
test
test
cmp
bound
or
mov
ror
dec
pop
aad
inc
mov
inc
das
fimull
jge
and
frstor
mov
ret
out
pop
inc
das
lcall
int3
mov
ret
jne
or
popf
loopne
cli
out
repz
scas
and
or
cmp
fcoms
fcomip
and
and
roll
jb
into
sub
mov
rorl
xchg
inc
xchg
sbb
cmp
lcall
lds
in
imul
lock
mov
jo
or
xor
nop
add
adc
mov
inc
xchg
fcoms
popa
imul
pop
pushw
adc
mov
sbb
pop
inc
lods
or
mov
push
xor
cmp
aaa
cltd
fidivrs
mov
jmp
pop
lret
dec
xor
pop
imull
fwait
dec
sub
inc
mov
inc
lock
fstl
pop
nop
fbld
test
xchg
pop
xchg
jge
xlat
inc
push
mov
cmp
shrl
leave
jno
roll
loopne
inc
pop
bound
push
stos
leave
cwtl
push
leave
adc
call
add
push
sub
adc
call
xor
cmp
movl
fcoms
cmp
and
sub
or
aas
mov
ret
xchg
xchg
loop
mov
push
add
inc
fucomi
mov
sbbb
test
mov
aad
mov
ds
fcomps
fsts
stc
mov
imul
push
mov
pop
and
inc
cltd
mov
out
bound
out
dec
pop
xchg
imul
add
push
testl
mov
sbb
mov
or
and
mov
dec
lods
int3
fs
shll
nop
mov
ljmp
bound
repnz
stos
push
movsb
int
pop
outsb
inc
cmp
xchg
or
or
repnz
out
iret
mov
dec
mov
mov
adc
ja
imul
mov
ss
inc
outsl
sahf
in
mov
adc
push
mov
and
lods
add
jnp
lret
xchg
sub
movsb
mov
add
pop
xchg
xor
arpl
adcl
aas
and
push
pop
adc
and
dec
add
pop
and
bound
pop
jae
jg
sar
jnp
mov
adc
cmp
xor
sbb
jg
pop
fwait
cld
shlb
mov
mov
xchg
adc
ss
outsl
in
lock
mov
mov
shll
mov
mov
cmp
cmp
pop
leave
in
or
sub
mov
orb
stc
jae
setge
test
push
insb
aas
jne
sbb
sub
loope
mov
movsl
push
mov
inc
clc
mov
push
imul
mov
dec
insl
sub
mov
lods
fmull
test
push
jl
mov
les
jns
push
mov
pop
xchg
dec
push
in
push
fsubrl
subl
stc
lcall
out
jnp
pop
test
data16
add
fmull
pushf
fistl
jp
inc
xchg
dec
test
sub
in
lahf
sbb
mov
rcrl
out
sub
outsl
outsb
push
leave
cmp
imul
pop
insb
lcall
xchg
mov
pop
pop
fucom
xchg
inc
ljmp
sbb
test
cmp
fildll
mov
ja
les
sub
xchg
lds
addr16
mov
sbb
test
dec
mov
ret
mov
es
lahf
into
mov
cmpsb
mov
pop
xchg
test
shlb
inc
ds
js
stos
scas
mov
adc
ret
xchg
stos
pusha
xor
int
div
inc
sub
push
lret
jp
push
aam
aam
inc
gs
in
popf
mov
sahf
pop
jp
ret
pusha
xchg
push
pop
sub
mov
daa
sub
test
xchg
xchg
jno
inc
inc
notl
adc
fldt
test
add
scas
add
xchg
push
pop
or
inc
imul
mov
xchg
js
test
cli
xor
cmc
inc
insl
jmp
lds
inc
or
movsl
int3
inc
and
das
dec
sahf
mov
out
jp
mov
repnz
mov
shll
jno
sub
mov
movsl
leave
out
xchg
ds
in
xchg
scas
outsb
gs
cmp
xor
mov
js
call
enter
rcl
dec
add
xor
pop
jne
or
clc
push
xchg
add
push
iret
push
out
cmpsl
dec
mov
cmp
int3
or
lods
xchg
not
and
fdivrl
push
lcall
pop
xchg
mov
popa
xchg
fwait
imulb
int3
mov
call
dec
out
or
adc
add
pop
add
cli
out
mov
xlat
vpsubq
test
jg
mov
xchg
shll
stos
cmp
nop
pop
pop
les
or
scas
mov
lods
enter
and
dec
ficoms
mov
fisubl
jae
ret
jno
ficoms
icebp
movsb
adc
rep
inc
xchg
hlt
sub
cmpsl
sti
inc
pop
pop
dec
mov
arpl
mov
lahf
aam
and
jge
push
sbb
loopne
sbb
sub
loop
xor
pop
repnz
jne
ret
cmpsb
inc
mov
arpl
cmpsl
and
bound
into
data16
add
xchg
fcoml
mov
aam
fildl
lods
mov
ss
cmp
icebp
push
and
call
idivb
icebp
or
rolb
out
iret
aas
dec
subl
xchg
or
inc
jg
in
in
cli
jecxz
test
lock
leave
sbb
mov
mov
mov
das
fs
dec
daa
test
int
inc
cmp
push
sarb
in
add
cmpsl
les
cmp
and
or
adc
testl
cmp
orb
sarb
mov
or
pop
jb
mov
js
int3
push
dec
jbe
inc
xor
mov
cwtl
add
cs
and
or
push
inc
push
mov
jmp
std
and
scas
cmp
adc
add
inc
jle
xor
rclb
cwtl
or
mov
lea
pop
out
adc
dec
sbb
sbb
jg
jle
in
adc
push
cmp
aad
cltd
in
and
cs
scas
addr16
add
fiaddl
in
jb
popa
push
push
xlat
xorb
dec
pop
xor
in
add
push
test
or
pop
call
ret
mov
lcall
repnz
je
je
inc
enter
fnsave
and
mov
sbb
test
mov
sbb
lds
mov
jp
inc
xor
mov
push
addr16
xor
nop
lds
cwtl
lds
cmp
lcall
test
mov
lret
out
sbb
mov
mov
sbb
push
jo
dec
in
cmpsl
decl
cmc
mov
es
decb
cmc
inc
cld
pop
clc
jo
clc
sub
add
push
pop
inc
sub
xlat
cld
into
push
incl
ja
xchg
mov
lret
adcb
jp
inc
test
or
repz
xor
xchg
jl
cli
lret
fwait
dec
adc
jecxz
lret
jp
jae
in
sub
ret
fimuls
fidivrs
jp
mov
adc
mov
cs
cmp
movsb
xchg
sbb
jle
lcall
jo
inc
lods
test
test
loop
pop
test
fnsave
sbb
mov
xor
imul
ficompl
sub
xchg
pop
xchg
or
movsl
and
testb
mov
sub
inc
stc
mov
sbb
fcomi
rol
nop
cmc
cs
clc
mov
insl
dec
or
push
lock
cmp
and
out
mov
and
out
fsubrs
dec
test
and
and
clc
cld
dec
mov
jns
cmp
mov
xor
outsl
or
mov
jp
dec
mov
nop
cvtdq2ps
pop
pop
cmpsb
mov
inc
repnz
imul
or
push
lret
test
pop
sub
push
movsl
ds
mov
shlb
outsl
push
push
subl
push
fimuls
sbb
push
jmp
jne
nop
or
std
add
mov
imulb
je
mov
cli
outsl
les
aam
int
sti
nop
outsb
jne
mov
pop
push
test
mov
and
jb
popa
cli
mov
inc
cmp
mov
stos
or
jg
mov
mov
add
ss
adc
rcl
xchg
adcl
sahf
xchg
in
xor
or
aaa
dec
test
inc
fldenv
inc
jnp
inc
repnz
pop
add
push
ret
gs
lcall
xorb
pop
sbb
or
sbb
aam
xor
jns
adc
cmpsb
test
inc
test
out
xchg
sbb
aam
push
jle
clc
rorl
and
jge
mov
add
dec
add
mov
pop
add
ss
xor
loopne
popa
int3
inc
xor
adc
sti
pop
mov
push
and
loope
addl
scas
or
adc
dec
stos
push
mov
lret
push
fcoml
add
inc
movsl
jmp
fstps
fdivl
dec
ficomps
adc
jp
add
jne
lods
sti
gs
dec
dec
adc
insl
daa
mov
bound
insl
lds
iret
push
inc
movsl
adc
jge
xchg
test
sub
push
lret
das
iret
and
aas
and
inc
mov
sbb
jp
idivl
shlb
daa
je
or
mov
or
iret
xchg
fistpll
sub
cld
jl
sub
ret
or
add
xor
mov
clc
roll
push
imul
lcall
insb
sbb
mov
add
push
in
in
sbbb
sarb
in
scas
xchg
push
mov
adc
rclb
cmpsb
cmp
insl
xchg
dec
or
lret
xor
sbb
push
mov
and
out
sub
and
push
movsl
movsl
cmpsl
data16
pop
pop
add
mov
faddl
in
imul
sti
jb
test
mov
out
inc
sub
mov
add
add
cmc
aad
fs
push
xor
loop
cmp
js
mov
in
xor
sub
xorps
fstps
cli
sub
push
rcrb
std
xchg
and
jb
out
push
out
xor
pop
loope
dec
lcall
sbbb
mov
ljmp
mov
cmp
lods
push
mov
std
sub
ss
iret
xchg
xorl
push
sub
stos
push
dec
cld
jne
xor
int
dec
mov
add
fs
das
out
add
pop
sti
or
mov
xor
hlt
dec
cltd
xlat
ret
or
xor
mov
mov
rol
scas
fs
inc
jb
popf
loopne
inc
bound
push
or
inc
mov
imul
fdivl
push
adc
mov
das
insl
jbe
ja
out
aas
addr16
mov
data16
cs
mov
imul
and
cltd
sbb
jbe
aam
mov
cmpb
ljmp
out
push
xchg
fdivr
pushf
push
rcrb
mov
push
and
mov
in
inc
loopne,pn
and
xor
loop
ja
in
loope
das
test
push
stos
bound
addr16
lret
lods
hlt
cmp
insb
adc
sub
mov
ljmp
imul
sub
pushf
daa
dec
hlt
or
loopne
xchg
hlt
sbb
psubb
mov
out
pop
ljmp
loopne
cld
jmp
aad
cmp
adc
or
push
lret
std
sbb
xor
mov
leave
and
lret
xor
mov
inc
movsl
jge
add
jne
and
scas
lret
clc
psubusb
es
and
add
cmp
sub
adc
hlt
lea
popa
or
mov
insb
stos
pop
fs
or
pop
mov
loop
shll
xchg
adc
xchg
clc
gs
subb
mov
push
sbb
jl
sti
pop
pop
hlt
add
xchg
pop
mov
jbe
or
lock
xchg
frstor
test
and
add
jmp
adc
sub
into
jp
add
mov
loopne
xor
loope
push
cmp
add
pop
mov
push
jle
lahf
push
movsb
lea
test
push
inc
jmp
pop
push
or
jb
mov
push
lock
mov
ss
into
and
or
cli
xchg
in
jo
cmpsl
mov
scas
adc
or
or
fcmove
adc
add
jecxz
mov
and
cmp
sti
mov
dec
inc
push
jg
dec
add
out
push
imul
mov
lods
nop
lods
or
in
inc
imulb
stos
arpl
pop
xchg
popf
out
xchg
and
sub
js
sbb
sbb
mov
mov
das
dec
repz
test
out
inc
sbb
cli
insb
fcmovb
in
sbb
add
lods
das
push
mov
in
dec
int
lea
xchg
nop
lret
roll
outsl
cmp
and
adc
jb
enter
aam
push
or
test
in
imul
xchg
scas
fdivrs
cld
std
pop
pop
popf
pop
cld
jl
movsl
mov
imul
out
pop
fistpll
daa
daa
jae
notb
stos
add
ljmp
cmp
popa
mov
cmpl
sbbl
insb
sub
mov
jmp
mov
push
mov
rcr
insb
mov
xor
shll
pusha
xorl
gs
neg
cmc
xchg
sbb
inc
add
mov
stos
scas
ljmp
lret
xorl
in
out
push
xlat
add
daa
xchg
arpl
cltd
pop
adc
pop
or
test
mov
lods
lcall
js
movsl
fidivrl
insl
jns
sbb
adc
inc
mov
and
insb
and
mov
clc
xor
mov
xchg
frstor
test
xorb
aam
mov
jge
imul
leave
dec
cmp
cmp
stos
js
ljmp
dec
ss
ret
inc
sub
or
fld
xor
sbb
fnstcw
push
push
cld
add
xor
pop
nop
mov
add
sub
mov
jle
dec
cwtl
lock
fcom
mov
jno
sub
call
lock
pop
push
xor
jnp
and
sbb
or
mov
and
icebp
mov
inc
dec
inc
imul
inc
jb
icebp
mov
push
fmulp
sub
sbb
adc
aad
push
aad
lret
jae
cmpsl
or
mov
jge
push
cli
test
adc
int
into
mov
pop
push
jg
fildl
mov
pop
mov
sbb
and
or
inc
inc
test
daa
cmp
sub
pusha
lcall
xor
mov
mov
pop
xchg
popf
lret
jle
mull
out
mov
stc
xchg
outsl
cli
clc
sbb
pop
sub
iret
mov
lea
push
mov
inc
mov
insb
mov
lret
dec
mov
out
or
xlat
push
loope
pop
je
mov
xor
xchg
pop
iret
sbb
xchg
push
xchg
and
pop
xor
test
cld
add
cld
mov
pop
inc
xor
pop
inc
add
push
popf
movsb
add
enter
mov
test
out
adc
mov
mov
push
fists
jnp
sbb
cld
aad
test
or
mov
mov
fildl
nop
push
lods
out
pop
ja
lret
ljmp
xor
pop
jae
jmp
add
adc
push
out
mov
popa
sbb
cs
jne
adc
push
pop
fildll
mov
repz
imul
cmp
sub
bound
xchg
add
xchg
pusha
xchg
add
imul
hlt
or
push
out
jp
sbb
push
mov
sbb
push
cmp
or
xor
inc
sbb
add
adc
outsb
ja
mov
cmp
mov
push
cmpsl
into
sbb
sar
jecxz
xchg
inc
or
mov
mov
inc
xchg
jbe
notb
xor
sti
out
jae
in
dec
lods
sub
cmp
sub
jb
push
out
jge
sbb
mov
fmul
inc
lea
sub
ss
pushf
add
xor
mov
jmp
mov
xchg
test
int
bound
rolb
mov
pusha
pop
xchg
gs
mov
gs
mov
push
cwtl
lret
pop
pop
push
out
sub
sbb
or
sub
fs
adc
pop
out
xchg
cmp
cmp
dec
jns
imul
addb
mov
out
or
pusha
das
sub
jbe,pt
cmp
test
loop
insb
xor
jns
enter
and
pop
or
out
jo
ds
scas
outsb
cltd
test
and
mov
pop
xchg
mov
movl
fdivrs
cmp
cwtl
mov
pushf
jno
pop
jle
bound
xlat
andl
xorl
arpl
mov
ja
pusha
insb
test
mov
xor
popa
jmp
xor
jnp
adc
js
scas
add
ret
int
or
test
dec
adc
fcomp
jle
stos
sti
add
je
test
mov
jle
scas
and
adc
mov
add
outsl
dec
adc
ret
aad
daa
push
imul
cld
sbb
jge
in
repz
rol
movsb
pop
popa
mov
in
push
or
lods
faddl
pop
sbb
hlt
test
cmc
sub
outsb
cld
arpl
jmp
cld
mov
test
mov
sub
jl
xchg
mov
cmpsl
jle
pop
aaa
pop
call
imul
mov
fcom
sbb
popf
fsubs
in
enter
test
icebp
sub
dec
es
outsl
call
daa
mov
add
mov
mov
int
lock
pop
out
mov
leave
out
push
jbe
arpl
outsb
mov
mov
mov
mov
mov
aas
add
test
lret
and
sahf
lret
dec
leave
jmp
cmp
dec
jbe
js
das
jae
js
fs
ss
xchg
cs
arpl
mov
imul
sbb
inc
mov
xchg
mov
jnp
mov
mov
imul
dec
test
mov
data16
lcall
loope
jg
sub
fnstcw
pop
lahf
sti
cwtl
push
or
loop
pop
cltd
divl
sti
xor
mov
cld
mull
in
sbbb
adc
sbb
cpuid
adc
push
in
pop
dec
xor
mov
cmc
and
je
mov
adc
adc
xor
out
mov
inc
and
push
fldl
jl
sub
add
xor
lock
cmp
mov
call
rclb
dec
sahf
xchg
sbb
je
push
sbb
hlt
data16
stos
rcr
pop
dec
cmp
jle
fnstsw
mov
into
mov
mov
lock
jecxz
jae
mov
pop
jnp
out
xchg
js
filds
lock
xor
and
ljmp
sbb
ret
mov
roll
adc
pusha
mov
pop
ss
leave
xchg
jo
enter
adc
push
xchg
rcr
sbbl
ror
cmp
or
ret
insl
sbb
dec
lahf
jo
clc
sarb
aas
mov
iret
adc
push
aas
mov
jb
adc
inc
cli
frstor
daa
xchg
dec
mov
mov
xor
sbb
fdivrl
fisttps
out
inc
mov
dec
fimuls
test
psrad
sbb
mov
in
and
int
mov
cmp
add
int3
jmp
pop
inc
stos
jmp
negb
xchg
outsl
mov
inc
addr16
xor
jae
iret
in
sub
aad
bound
push
mov
loop
sub
int3
enter
mov
mov
movsb
sbb
movsb
sarl
pusha
and
aad
lods
adc
stos
cwtl
and
mov
adc
out
dec
jl
adc
stos
mov
vpand
aad
bound
jle
shl
adc
inc
push
mov
xchg
dec
outsl
mov
cli
cmpsl
repnz
pop
mov
mov
jne
lods
adc
mov
mov
add
sub
loopne
mov
sahf
jl
test
jno
adc
unpckhps
arpl
fst
cld
jmp
adc
xor
sbb
push
lea
pop
xchg
xchg
out
adc
sub
lea
fistl
add
pusha
aam
and
adc
es
sub
or
ds
test
jge
test
js
aas
in
repnz
mov
scas
mov
push
inc
lcall
mov
add
imul
sub
adc
imul
out
fsubl
xor
add
or
add
sub
fildl
jnp
lret
imul
lods
lret
push
test
mov
icebp
sti
push
jg
inc
jo
cmpsl
xchg
sti
icebp
fwait
inc
ja
and
xchg
loope
pop
jns
fs
mov
mov
jne
out
xlat
ret
add
jbe
enter
xor
cs
or
aam
or
inc
adc
push
imul
adc
dec
ljmp
in
rclb
mov
dec
lahf
pop
mov
pextrw
dec
inc
xlat
xor
adc
fstp
repz
dec
imul
xchg
and
pushl
dec
and
test
add
scas
push
and
ds
outsb
out
iret
sahf
lret
cld
dec
pop
insb
pop
add
fcmovnbe
dec
fdivl
fsub
aad
aad
aad
cmpsb
sahf
cs
xchg
lods
clc
fnstenv
inc
addr16
enter
jbe
mov
jno
aam
cmp
mov
xlat
call
push
pop
int3
xchg
mov
or
xor
enter
outsl
jge
add
fsub
push
push
cltd
mov
icebp
or
sbb
movsb
xchg
adc
enter
mov
pop
add
pop
pop
lods
adc
scas
mov
xor
lahf
adc
out
arpl
or
adc
fs
cmp
js
mov
xor
pop
add
stc
sti
adc
mov
cmc
and
sub
outsl
dec
loop
sub
int
mov
mov
sbb
mov
loope
in
ret
pop
loopne
push
jae
pop
test
mov
jb
lret
or
pop
mov
in
sbbb
jb
xlat
lds
dec
cmp
push
ja
push
add
stos
sbb
inc
int
jg
cld
ss
popf
jae
ret
adc
add
and
inc
mov
repnz
test
fsub
in
adcb
movsl
insl
in
adc
lret
inc
daa
xchg
mov
push
cmp
or
stc
dec
sub
xor
mov
pop
outsl
imul
out
ja
mov
sbb
mov
in
inc
jae
ds
ret
popf
lods
lea
test
jnp
nop
and
icebp
dec
sub
test
sbb
divb
je
ljmp
jecxz
add
adc
mov
sahf
mov
push
dec
mov
jl
sub
and
push
inc
std
adc
xor
jl
cmp
add
loope
add
pop
test
xor
arpl
int3
jle
and
cld
and
rcll
cmpsl
adc
xor
in
add
cli
ret
dec
aaa
push
push
cmp
imul
add
cmp
fsubl
popa
pop
mov
int
mov
xchg
and
xor
shlb
adc
xcrypt-ecb
cmpsl
int3
aaa
adc
aaa
dec
cmp
mov
addr16
fimull
push
out
add
inc
inc
les
scas
repz
or
test
nop
repnz
aad
popf
mov
lea
lret
fstl
outsl
test
add
jno
in
ss
flds
xchg
xor
lret
dec
jae
sbb
ja
push
enter
pop
xchg
test
rol
adc
fnstenv
push
and
mov
xchg
movsb
adc
cmpsl
ss
aad
push
adc
insb
push
xchg
into
fisubs
testl
inc
loopne
mov
push
lods
dec
data16
test
mov
popa
scas
and
jp
inc
mov
and
xchg
push
in
sub
frstor
les
mov
xchg
jmp
xchg
scas
or
mov
int
mov
xchg
and
addb
data16
cmpsl
fs
mull
repnz
out
mov
mov
jg
xchg
jnp
cli
cmp
popf
push
sub
jmp
call
pop
daa
or
mov
inc
repnz
cmpsb
mov
or
dec
icebp
imul
into
pop
inc
jbe
mov
jmp
jmp
inc
adc
cwtl
div
pop
leave
in
scas
bound
xor
push
and
sbb
ret
scas
sbb
lods
sbb
lds
insl
popf
push
lea
sar
mov
and
int3
jmp
outsl
mov
jp
aad
xchg
add
dec
insb
pop
push
pop
add
adc
je
mov
mov
mov
push
shr
lock
iret
mov
add
pushf
add
lret
test
xchg
pop
add
mov
pushf
cmp
shlb
push
or
int
adc
or
cmp
repz
ficoml
test
roll
adcb
imul
bound
xor
outsb
adc
sbb
push
dec
pop
jno
ds
xor
sub
adc
inc
jb
das
dec
mov
sub
int3
lcall
push
jle
mov
out
insl
xchg
cli
pop
loopne
push
or
sti
mov
js
pop
mov
jg
xor
sti
and
scas
xchg
mov
pop
add
adc
mov
sti
mov
xchg
jbe
call
lcall
mov
pushf
cmp
dec
jae
es
sbb
cmp
fdivs
sbb
lcall
push
cmp
je
scas
pop
repnz
sbb
xor
test
movsl
sub
loop
inc
push
add
lcall
inc
xchg
push
cld
mov
test
pop
addb
enter
mov
fwait
in
jo
inc
jecxz
xchg
jg
or
pop
outsl
pop
sub
out
or
cwtl
addb
jne
pop
in
pop
push
push
scas
and
jp
xchg
inc
cmp
imul
loopne
arpl
mov
rcl
addr16
mov
daa
jne
cmp
mov
push
int3
mov
add
or
enter
and
movl
cmp
imul
in
cmp
add
inc
xchg
pop
xor
stos
add
dec
cmpl
and
in
scas
push
leave
xchg
hlt
mov
sahf
and
sbb
add
aas
in
push
add
xchg
jb
xchg
sub
jmp
add
push
jo
push
lock
pop
mov
jb
in
add
inc
popa
adc
pop
xor
or
imul
fisttpll
aaa
inc
jb
or
rol
xchg
je
dec
or
fists
cmp
xor
jns
pop
enter
sti
shlb
add
mov
imul
jle
xor
js
gs
xchg
repnz
es
arpl
clc
jecxz
xor
dec
cmc
aad
and
scas
test
pusha
repnz
cli
aad
mov
mov
jnp
jb
out
mov
int
pusha
outsb
jp
dec
clc
std
xchg
jns
das
enter
int3
sbb
jne
pop
xor
hlt
fidivrl
aad
gs
or
mov
push
jbe
fiadds
jb
out
loopne
add
ss
pop
jp
dec
jmp
fdivl
cwtl
out
jmp
fadds
mov
add
popf
outsb
cmp
jo
mov
mov
loope
outsb
dec
sti
xor
adc
rcrl
and
add
dec
and
mov
fstpt
jno
ljmp
jge
dec
mov
in
add
insl
movsb
push
mov
push
stos
loopne
and
loop
dec
jbe
je
pop
jg
pop
rcl
jl
negb
cld
push
ficoms
lfs
adc
mov
icebp
adc
ficoms
cmp
mov
fidivl
fldenv
dec
xor
mov
mov
dec
sub
sub
add
push
out
mov
lods
mov
or
nop
jle
in
fsubrl
enter
jb
sbb
adc
rcr
cmp
mov
popf
iret
lds
out
aaa
adc
lret
xchg
mov
stos
dec
inc
jmp
data16
sbbb
and
lcall
mov
pop
test
call
shl
or
and
imul
shr
jnp
lret
push
push
xchg
mov
repz
push
lock
clc
xchg
nop
popa
xchg
fcmovu
mov
xor
mov
adcl
jne
bound
mov
sbb
push
pop
sbb
outsb
inc
mov
add
mov
xor
loopne
fldenv
test
mov
in
jge
loope
cmp
sub
test
jge
dec
popf
mov
jo
inc
add
add
xlat
lret
movl
pop
push
pushf
pop
sbb
in
jp
mov
sub
cmp
or
or
jp
shlb
jns
fsubrs
shlb
fisubs
inc
sbb
shlb
or
test
jo
adc
xor
int3
add
fnstcw
mov
lods
out
and
pop
cmpsb
push
loope
mov
cmp
lods
pop
or
adc
mov
scas
mov
inc
pop
inc
ds
das
sti
std
jge
mov
jns,pn
fstpl
mov
or
push
repz
inc
and
sub
cmp
xchg
fst
ds
mov
mov
adc
lea
int
in
xchg
ds
repz
ja
push
or
push
fnstenv
or
mov
out
sbb
nop
jle
sub
mov
xchg
cltd
orl
movsl
fcmovu
or
cmp
ljmp
xchg
sub
nop
mov
push
push
mov
stos
xchg
je
mov
sbb
mov
sub
or
cmp
dec
pop
push
mov
push
jge
shl
xchg
testl
xor
into
mov
ds
pop
add
fmuls
popf
shl
jle
aaa
inc
cmp
imul
enter
sub
xchg
out
das
cmp
lcall
insb
jno
cmp
mov
add
xor
mov
push
pop
jns
cmp
mov
pop
sti
insb
test
sbb
ds
cmp
rorb
stos
aam
adc
rcrb
icebp
push
and
mov
dec
mov
jl
sar
sar
mov
icebp
cltd
sbb
rorl
xchg
aad
clc
xchg
xlat
cmp
add
mov
lods
xorl
aas
aaa
jb
mov
lret
mov
pop
lock
outsb
cmp
imul
nop
add
jae
aaa
mov
jae
rolb
xor
popf
mov
mov
cs
loope
dec
frstor
test
adc
xchg
arpl
nop
mov
imul
sbb
or
cmpsl
xchg
stc
xchg
mov
push
in
push
sub
popa
pxor
cmp
add
adc
dec
outsb
sub
test
adc
testl
dec
xor
jmp
xchg
add
cmc
xchg
addr16
mov
cmp
mov
jle
cmc
les
cli
jo
out
insl
mov
insb
pop
sti
test
in
mov
xchg
sub
jno
inc
xchg
xor
and
shrl
and
js
or
ret
jmp
cmpsb
push
or
xchg
or
mov
dec
and
mov
rcrl
scas
mov
fs
sub
roll
add
jnp
sbb
test
jg
js
jmp
jle
ljmp
or
imul
cli
sbb
fistl
mov
lret
gs
fistpl
cwtl
add
or
nop
rclb
arpl
cmp
pop
sub
inc
stc
mov
fildll
xchg
sub
cwtl
es
jle
or
les
loop
enter
cmpsl
sbb
into
in
push
add
cmp
stos
ret
xor
loop
mov
mov
or
jecxz
jg
jno
or
cmc
arpl
ret
and
jg
in
jne
outsl
test
setp
pop
cmc
inc
loope
das
aaa
pop
push
punpckhwd
aas
call
outsl
shl
mov
lcall
xchg
sahf
xchg
push
and
jg
adc
ss
js
roll
mov
fs
sbb
jno
imul
add
mov
mov
pop
cmp
add
data16
shlb
cmp
mov
add
sub
mov
movb
and
mov
ret
imul
pop
int
and
adc
out
push
lret
add
sub
nop
bnd
xor
cmp
jl
adc
or
fistpl
add
lods
movsb
and
mov
dec
sbb
jo
mov
xchg
push
pop
add
dec
sbb
cmp
sbb
mov
fimull
cmp
popl
mov
rcl
jle
test
or
mov
pusha
in
mul
xlat
push
leave
xor
xor
and
push
mov
int3
xchg
mov
or
xchg
push
nop
xor
add
lock
jnp
xchg
xchg
outsb
fwait
push
fcomps
mov
mov
inc
add
add
cli
pop
in
push
ljmp
jl
add
cmpsb
scas
xchg
cmp
stc
pop
mov
shlb
hlt
test
inc
in
jecxz
mov
dec
clc
adc
xchg
aaa
in
adc
call
mov
mov
pop
fsave
aas
dec
mov
clc
sub
mov
in
enter
stos
xor
mov
add
outsl
shll
cmc
aad
push
movsb
mov
nop
pop
shl
int3
xchg
cmpsl
jle
and
in
mov
mov
mov
xchg
nop
sub
stos
pop
lods
fidivl
inc
push
cmpsb
inc
adc
leave
pop
scas
and
adc
sbb
pop
dec
jl
jno
pop
sahf
mov
and
lret
dec
xchg
les
pop
ja
mov
ret
xorl
lock
inc
jae
mov
stos
jne
dec
mov
push
jp
jle
jnp
outsb
push
jmp
mov
inc
lahf
fnsave
add
popf
add
shrl
out
loope
lahf
xchg
sahf
push
mov
pop
test
popa
call
call
add
cmc
add
sbb
jb
inc
xchg
scas
scas
mov
scas
xor
jb
in
ret
insb
js
jns
arpl
xor
lods
lret
sub
cmpsb
and
fucomi
or
cli
xor
cmp
mov
into
shl
stc
inc
jmp
ret
lods
repnz
inc
or
es
jmp
mov
cmp
xchg
jmp
sub
push
xchg
xorw
jle
or
jge
pushf
in
push
shll
cld
dec
xor
loope
cmp
pusha
jmp
fadd
sub
pusha
inc
sub
aas
pop
in
inc
sbb
push
xchg
in
xor
pop
das
js
sahf
inc
inc
adc
jnp
cmpsb
mov
popf
nop
cwtl
and
cli
into
aam
es
arpl
mov
in
jb
adc
shrl
mov
xchg
or
inc
push
xchg
xor
in
mov
mov
aas
fsubr
in
mov
jno
and
pop
lods
cmp
mov
jo
jg
mov
pop
inc
mov
cmc
ljmp
and
imul
jb
fstps
testl
push
fbstp
int
or
sub
lea
add
mov
xor
test
jbe
adc
mov
test
js
lods
in
dec
xor
pushf
aam
das
jmp
fisubs
mov
es
movsl
adc
lods
xchg
xchg
mov
ret
push
fldenv
popf
push
mov
int3
sti
sub
mov
cmp
xor
add
xchg
jg
add
loopne
outsl
mov
push
xchg
and
imul
mov
fwait
jle
mov
push
pop
mov
sarb
iret
clc
mov
pop
xchg
pusha
sub
cmp
loopne
in
pop
insb
jne
idivb
stos
mov
aad
je
push
push
adc
out
rcll
sar
cld
sub
loope
jae
push
frstor
cmpsb
jl
xchg
test
add
adc
bnd
xchg
mov
in
ja
orps
inc
pushl
pop
mov
arpl
out
ret
nop
les
mov
jns
movsl
scas
mov
outsl
mov
inc
in
cwtl
xchg
jo
cmp
or
xor
fsub
into
sub
jnp
jae
enter
adcl
and
fisubrl
testb
sti
xchg
mov
xor
leave
bnd
lret
or
or
lcall
xchg
dec
or
in
cld
repnz
cmp
inc
xchg
dec
inc
ljmp
stos
in
sbb
lret
mov
enter
cmp
je
in
cmp
add
jns
mov
lret
clc
ljmp
std
imul
push
mov
cltd
js
lret
add
mov
aam
sbb
popa
outsb
sarb
dec
mov
int3
lds
mov
out
xchg
inc
sub
or
ljmp
divb
ret
in
adc
mov
mov
fsubrl
in
shl
add
inc
clc
add
and
push
pop
push
mov
and
movsl
enter
ss
std
push
out
stc
sbb
and
insb
dec
inc
xchg
iret
push
adc
mov
xchg
aad
adc
dec
xor
loope
aas
push
pop
pop
sbb
out
inc
ret
cld
pop
fdivrs
pop
push
push
aam
ret
inc
xchg
lcall
je
adc
xorl
inc
adc
pusha
ficoml
cmpl
mov
cmp
sub
push
xor
pop
aaa
hlt
fiadds
loope
or
adc
sub
pop
push
pushf
and
mov
stos
int
rcr
or
dec
add
push
add
daa
mov
cmc
push
xor
and
add
mov
adcl
jle
sub
jp
pop
clc
inc
test
or
fistpl
push
pusha
jmp
fisubs
sarb
popf
cli
test
shll
mov
movsl
sub
pop
adc
test
inc
les
jo
xchg
jb
pushf
mov
aas
add
adc
out
gs
cmpsl
insl
and
inc
int
and
data16
and
lcall
xchg
enter
notb
sbb
sub
mov
pop
cs
incb
sub
mov
aas
orl
call
mov
pop
xchg
xlat
cmpsl
cmp
in
mov
mov
sub
add
mov
cmp
out
mov
xchg
xor
ror
push
lock
sbb
pop
mov
cmp
jle
enter
and
xlat
movsb
dec
adc
push
ret
mov
nop
test
scas
notb
sub
xchg
adc
or
mov
out
arpl
mov
push
outsb
add
xor
xor
jb
pop
sbb
in
fsubrl
mov
add
shl
sahf
inc
sub
mov
dec
pop
add
mov
or
push
xchg
or
sbb
inc
imul
xchg
repz
fidivrl
pop
mull
pop
insb
nop
inc
pop
mov
clc
jmp
pop
jecxz
inc
call
cmp
fsubs
and
cwtl
xlat
fmul
adc
rolb
adc
mov
mov
sub
movl
sub
js
add
cli
fs
mov
jb
call
xchg
mov
or
faddp
ficomps
sbb
adc
push
push
ss
outsl
in
mov
hlt
xor
sub
cmp
xchg
pusha
mov
sahf
sbb
mov
shl
imul
jno
and
add
add
pop
mov
dec
repz
and
test
cld
fidivrl
rsqrtps
ret
shr
leave
xor
sub
int3
push
imul
fs
loop
dec
inc
in
adc
test
movsl
repz
scas
int
outsl
imul
bound
jle
es
push
cmpsb
dec
cwtl
imul
loopne
stc
xor
mov
jo
aas
shll
iret
sbb
shrb
adc
int
stos
add
fs
out
lock
daa
mov
sbb
cwtl
dec
fwait
or
adc
inc
rorb
hlt
xchg
lcall
xor
movsb
cmp
int
xchg
lea
add
mov
xor
pop
fs
sbb
out
and
das
mov
out
pop
sbb
test
das
dec
lcall
nop
or
push
jns
imul
std
mov
add
dec
adc
scas
jl
aas
icebp
aas
xchg
adc
out
inc
int3
and
add
bound
sub
pop
arpl
jnp
sub
jnp
xchg
xor
je
mov
adc
stc
inc
in
js
in
sbb
dec
dec
xor
xor
cmp
insl
or
out
dec
pop
sbbl
and
sbb
pusha
cs
push
jne
fistps
pushf
int3
arpl
scas
in
push
jecxz
add
frstor
inc
sub
jno
movsb
push
scas
mov
xor
sub
scas
pop
push
fnstenv
shll
bound
mov
and
outsl
adc
out
dec
sbb
push
pop
enter
in
mov
sub
inc
add
jno
mov
push
lahf
jl
sub
bndstx
fisubrl
or
jl
mov
popa
movsb
mov
roll
pop
imul
in
rcll
ja
xlat
push
call
outsl
insb
lods
xor
cmp
fwait
loope
adc
out
pop
adcl
nop
incb
xlat
mov
cli
jno
lcall
xor
add
sbb
push
fwait
sbb
xor
fisttps
and
push
xor
data16
dec
xlat
mov
push
cmpsl
sbb
jle
xchg
jmp
movsb
dec
pop
mov
add
test
fisubl
mov
fucomip
dec
sahf
icebp
gs
xlat
jne
bound
jg
mov
out
movsb
xor
xchg
sbb
sbb
and
addl
push
pop
cld
mov
pop
mov
pop
pusha
sub
imul
xorl
mov
insb
popf
xor
mov
mov
sbb
dec
adc
iret
mov
mov
push
push
aaa
mov
xor
adc
test
cmc
sub
enter
or
iret
and
out
dec
jge
jmp
mov
mov
pop
repz
xor
lods
add
jo
pop
imul
mov
xor
xor
xchg
aaa
in
push
push
cmp
mov
dec
xor
lods
lahf
push
jnp
lret
xchg
mov
xchg
xchg
mov
sbb
jecxz
movsb
call
sbb
mov
popf
pusha
pusha
addr16
sub
cmp
and
inc
mov
pop
jle
adc
add
push
adc
mov
or
jbe
and
add
and
mov
dec
or
pop
cmp
push
adc
mov
push
pop
lea
sub
inc
mov
gs
and
push
notl
icebp
mov
mov
movl
mov
sti
dec
push
cmpsb
adcl
rclb
lret
add
aas
dec
or
fwait
xor
imul
mov
ljmp
dec
xor
xchg
add
ret
push
loop
ljmp
popa
add
out
sarb
jno
xor
mov
lock
stc
or
ljmp
mov
mov
inc
dec
xchg
fwait
push
pop
xchg
mov
inc
rcrl
call
sub
add
xchg
scas
subl
xlat
lcall
aam
loop
js
js
cmc
pop
in
arpl
mov
jl
addr16
int3
or
cltd
cld
test
aad
cmp
test
int
pop
stc
push
imul
inc
dec
fptan
inc
stos
imul
in
push
mov
popa
jae
sub
push
add
imul
mov
fsubl
xor
push
and
jmp
or
mov
inc
js
filds
mov
roll
int3
or
fnstsw
mov
cmp
xchg
jb
aaa
or
imul
movl
xor
and
mov
push
mov
aaa
leave
or
cmp
cld
lods
push
int
nopl
lock
out
xor
sarl
lret
jl
xchg
sbb
jns
lret
popf
sbb
mov
dec
push
add
lea
scas
loop
testl
sub
jle
into
jb
nop
jnp
incb
aas
mov
shrl
test
or
jl
sub
lea
sub
mov
lahf
rcrl
cmp
mov
cmp
shrl
and
sbb
es
cmp
or
and
dec
imul
or
in
ljmp
gs
mov
adc
rolb
inc
lcall
pop
repnz
leave
pop
push
cwtl
mov
cmp
ja
mov
and
push
pop
fdivrl
fs
in
gs
pop
pop
es
push
pop
leave
nop
inc
insl
pop
xchg
or
stos
loope
frstor
adc
cld
fisttpll
pop
fwait
and
jnp
fdivrs
sub
push
mov
fldenv
shrl
sar
ljmp
sub
lds
call
in
cmp
rclb
loop
dec
xchg
and
add
or
cmpsl
jns
push
fbld
je
ss
jmp
loope
push
lods
popa
imul
add
flds
stos
sahf
or
adc
imul
lods
ret
push
cmpsb
add
mov
adc
inc
clc
aas
add
loop
pop
push
insl
dec
outsb
jbe
inc
add
hlt
or
aam
pop
mov
jmp
js
movsb
sub
xor
scas
sbb
ljmp
push
inc
clc
sbb
dec
and
sti
inc
fldt
lcall
popa
jle
push
pusha
sub
jmp
inc
int3
mov
add
ret
jmp
pop
daa
sub
iret
icebp
bswap
fcmovnbe
cmpsb
xchg
repnz
inc
add
sub
mov
add
jg
imul
xchg
in
sti
cmp
subl
jg
stos
pushf
pop
mov
clc
jo
or
mov
push
push
xchg
in
daa
pop
daa
scas
jg
fisttpll
repz
jge
mov
das
mov
sub
iret
or
gs
mov
jo
sbb
xchg
adc
inc
or
xor
jle
sbb
push
and
dec
and
xor
sbb
jp
inc
xor
jg
adc
fldpi
pmulhw
hlt
xchg
push
inc
jbe
jbe
mov
loopne
xchg
adc
xchg
fdivs
bound
adc
es
sahf
call
rcr
pop
adc
push
bound
ds
lods
call
mov
xchg
daa
adc
adcb
jmp
mov
movsb
ljmp
xchg
adc
jle
sarb
adc
and
jge
fldcw
mov
jecxz
sarb
mov
mov
mov
lock
push
ficompl
mov
cwtl
lods
ficoms
mov
aam
xchg
cmp
and
jge
repnz
xchg
fsubr
mov
cmp
sahf
mov
aad
adc
mov
das
cld
push
les
or
mov
mov
fs
dec
shrb
rorb
outsb
mov
into
hlt
call
push
fs
test
jecxz
mov
pop
inc
push
lods
repz
jb
pushf
sahf
iret
mov
jno
jne
mov
push
mov
mov
adc
int3
mov
add
jge
in
jns
insl
add
adc
ret
pop
rcl
stc
mov
lret
loopne
shlb
add
fists
sahf
int3
push
or
push
add
jmp
fsubrl
and
nop
insl
shll
mov
clc
sti
add
int
cmp
push
in
cmp
or
pop
nop
out
jle
ret
and
push
cltd
ret
cmpb
xor
leave
loopne
cld
test
repz
add
icebp
imul
pop
int
adc
sub
xchg
cs
ss
loop
scas
add
xchg
inc
and
outsb
jnp
arpl
fsubp
repz
sub
mov
add
sbb
nop
testb
xor
cltd
movsl
sub
or
cmpb
sub
lea
in
add
out
arpl
inc
int
push
push
jbe
dec
mov
mov
fcompl
imul
sti
fprem
and
repnz
jo
out
inc
jecxz
flds
mov
nop
cmp
andl
adc
outsb
pusha
int3
pop
aam
outsl
or
xor
out
loopne
lret
testl
dec
fiaddl
ljmp
fs
ja
ficoml
scas
xor
dec
sub
add
das
xor
fmuls
inc
jae
rorl
dec
sub
and
enter
or
push
sub
pop
ud0
daa
in
out
push
mov
mov
xchg
shr
cmc
addr16
pop
rcrl
mov
test
nop
dec
inc
sbb
cmp
sbb
xlat
xorl
sbb
adc
les
out
jne
outsb
dec
mov
push
adc
mov
push
pop
in
daa
lock
out
loope
outsl
sbb
hlt
mov
fcoms
ficompl
push
cmc
arpl
ljmp
mov
cmp
lret
lds
xor
lods
add
roll
jmp
pop
cmc
mov
pop
pmulhw
xor
rcl
jmp
fwait
nop
pop
xor
mov
xchg
mov
mov
jp
xor
pushf
icebp
sbb
shll
push
and
xchg
mov
add
jb
mov
cmpsb
and
shlb
jp
les
or
loopne
or
arpl
fildl
mov
cmp
pop
mov
mov
mov
mov
cmpsb
xchg
adc
cmpsl
dec
or
or
lcall
push
insb
in
data16
fdivrl
fistl
lret
mov
bound
insb
jnp
or
outsl
sarl
mov
out
lock
lcall
dec
stos
fadd
push
leave
push
jecxz
mov
jns
mov
or
pop
jge
mov
mov
push
ss
jno
xchg
shlb
inc
adc
ret
jle
ud0
xchg
dec
cltd
shl
sti
push
and
adc
xlat
je
sub
aad
cmpl
xchg
xor
fiadds
dec
sbb
dec
in
cmp
sbbl
xor
mov
cmpl
jle
je
xchg
or
push
xchg
mov
dec
adc
incl
jns
cld
lret
xchg
adc
inc
mov
or
and
jb
jnp
loopne
in
cmpsb
pushf
orl
leave
jg
xor
nop
out
mov
stos
loopne
xlat
mov
sub
lret
std
movsb
push
sbb
pop
inc
lret
jge
loope
lcall
add
rorb
in
cmp
push
adc
mov
inc
test
cmpsl
stc
mov
mov
mov
popw
in
push
fsts
jbe
or
jae
outsb
jae,pn
adc
fmull
mov
repnz
or
dec
jnp
inc
adc
ret
push
bound
aaa
xchg
sbb
insb
std
outsl
push
mov
lcall
push
rolb
dec
jge
mov
inc
push
cwtl
arpl
and
inc
jno
adc
xchg
ss
xlat
psraw
ljmp
mov
fiaddl
test
push
xchg
cmp
call
pop
add
stos
je
pop
out
hlt
cmp
daa
mov
pop
and
sahf
scas
jl
lcall
inc
cmc
ja
add
cli
sub
cmp
pop
pop
out
push
imull
out
add
jge
arpl
in
and
mov
mov
call
add
ret
out
repz
fs
pop
cmovb
dec
dec
adc
fistpll
pop
pop
insb
inc
mov
push
data16
dec
add
imulb
addr16
aam
add
xor
and
pop
xor
adc
dec
sub
jmp
push
push
mov
xchg
je
in
shr
outsl
je
loopne
pop
mov
sbb
fisubl
xlat
xor
or
jno
cmp
add
sbb
and
lcall
xor
pop
mov
dec
in
cmp
stc
sub
xchg
pop
jecxz
mov
in
mov
jecxz
roll
mov
in
loopne
push
adc
cli
jo
push
iret
jl
es
sahf
enter
pop
popa
test
sub
stc
pushf
xchg
enter
clc
lahf
fisttpl
jno
inc
or
in
xchg
push
ret
jmp
call
sbb
cld
lret
shlb
cmc
bound
xchg
add
iret
or
shll
push
sbb
ret
mov
pop
dec
ljmp
sbb
int
adc
popa
jnp
stos
shl
mov
fisubl
insl
push
mov
push
dec
ret
or
in
cmp
stc
bound
cmp
inc
sti
js
xchg
jbe
hlt
rcrb
fmull
adc
popa
mov
push
inc
sbb
test
sub
ficoms
pop
inc
into
push
sbbb
aas
xor
add
fidivl
enter
xor
aaa
push
or
int3
pop
or
stos
or
in
dec
dec
sub
cmc
inc
inc
dec
out
repz
nop
jo
mov
mov
ljmp
lods
inc
out
out
mov
cwtl
push
dec
inc
daa
mov
pop
mov
fmulp
pop
imul
movsl
loopne
inc
mov
dec
loop
lock
aaa
sbb
ljmp
push
jb
mov
sbb
dec
xchg
mov
lods
pop
xchg
mov
sbb
loopne
mov
push
pop
adc
xor
inc
repnz
loop
dec
outsb
jne
and
sbb
cmp
jo
sub
push
roll
mov
out
pushf
in
push
je
int
xor
pop
mov
imul
mov
scas
dec
jns
pop
arpl
xchg
pop
fildll
repnz
mov
jg
and
ja
push
jo
xor
xchg
out
sbb
dec
add
adc
int3
adc
cmc
in
mov
adc
lods
call
dec
jmp
imul
adc
pop
lea
xor
xor
cmp
lock
or
push
and
jns
mov
in
aam
xor
dec
int
insl
push
lret
or
mov
fimuls
in
mov
sahf
mov
rorl
sub
cmp
shr
xor
push
push
clc
sbb
sub
mov
mov
mov
out
or
ds
fmul
je
xchg
sarb
or
jg
sub
xchg
in
cmp
outsb
into
mov
push
xchg
push
push
fstpt
fsubr
cmp
mov
imul
xor
dec
int3
arpl
jp
push
push
inc
mov
pop
repnz
push
adc
js
mov
dec
movsb
jmp
push
jno
outsl
jae
jecxz
subl
cmpsb
out
add
sub
stc
add
mov
adc
sub
xlat
out
scas
xorl
mov
fimuls
fdivrl
aas
sbb
sub
addl
hlt
dec
push
jecxz
ror
xor
aam
in
jecxz
pop
ret
in
rcrb
xchg
or
imul
lret
sbb
repz
push
int3
pushf
cltd
and
xlat
pushf
xchg
out
sahf
mov
jns
inc
in
subb
nop
shlb
mov
inc
mov
bound
outsb
pop
cmpsl
adc
ret
sub
mov
jne
stc
and
dec
les
mov
or
pop
insl
in
subb
orl
pop
lods
sbb
pop
mov
xchg
inc
inc
inc
fistpl
push
fsub
jge
inc
sbb
mov
and
fwait
dec
and
push
push
push
arpl
mov
enter
leave
sbb
push
pop
dec
stc
push
js
or
popf
mov
push
or
out
imul
adc
adc
lods
bound
loop
cltd
les
aad
mov
sbb
pop
imull
fsubs
pop
xchg
inc
cmpb
mov
je
xor
jno
ret
xchg
pop
adc
mov
popf
mov
push
aad
sub
sbb
aas
inc
pusha
sbb
or
sub
ss
dec
inc
pop
push
mov
xor
push
das
jb
loope
and
orb
lret
xlat
push
xchg
sub
pop
rol
daa
push
ss
iret
mov
scas
xor
and
inc
inc
fadds
dec
lcall
cli
pop
les
daa
push
and
mov
push
lret
loopne
jecxz
inc
dec
cmp
dec
lahf
insb
adc
push
xor
jb
inc
mov
lods
dec
xor
mov
int3
pop
test
aas
in
lret
xor
sub
daa
mov
data16
sahf
push
fstps
inc
fists
imul
adc
clc
mov
xchg
repz
lods
ror
push
lods
adcl
cmp
adc
lahf
push
repnz
rclb
shlb
outsb
adc
aaa
push
pop
jb
mov
inc
push
pop
sbb
push
fsubrl
sahf
insb
add
cmpsl
dec
test
xchg
xchg
sub
jmp
enter
inc
or
fs
scas
mov
or
push
and
jbe
inc
ffree
imul
sub
stc
cmpsl
sub
push
push
shll
shl
cmp
push
mov
mov
repnz
in
push
mov
mov
bound
cmpsb
pop
std
iret
fidivrl
icebp
xor
inc
out
and
dec
jecxz
pop
sub
add
push
push
pop
aas
mov
adc
in
adc
cmpsb
inc
dec
nop
loope
ret
fdivr
add
loope
fstpt
mov
mov
adc
mov
fwait
inc
ret
out
iret
bound
mov
jecxz
push
add
je
aad
dec
ror
sahf
std
or
dec
xchg
xchg
mov
pop
rcrl
xchg
jnp
adc
fsubr
ficoml
leave
and
fadd
push
mov
push
add
test
inc
and
jbe
xor
sbb
or
mov
subl
add
mov
xlat
xchg
shr
or
ja
adc
mov
cmp
mov
in
loope
sbb
cmp
loope
pop
insb
popf
push
sub
imul
das
mov
xchg
jne
xor
mov
xlat
leave
nop
cmp
dec
outsb
mov
dec
push
push
aam
sbb
fdivrp
sub
lock
cmp
jns
sarl
ret
fnstenv
inc
out
pop
subl
jp
pop
inc
xchg
mov
add
mov
mov
mov
imul
mov
xor
inc
xchg
or
shrb
pop
adc
outsl
stc
lret
mov
lea
mov
mov
cmp
adcb
fcoml
xchg
jns
pop
xchg
adc
jecxz
xchg
das
ljmp
testl
mov
sub
lahf
push
iret
jg
push
enter
lods
mov
push
lcall
adc
mov
into
mov
jno
sub
mov
xchg
mov
mov
mov
add
xchg
xchg
mov
fistps
sbb
xchg
lods
push
lock
inc
inc
xlat
sub
dec
jp
andl
sbb
ljmp
loop
mov
mov
jne
lcall
data16
and
cmp
mov
fstp
inc
cmc
mov
ret
mov
sbbb
out
ret
or
and
adc
or
cmpl
sarl
and
mov
push
jnp
pop
and
mov
imul
push
in
push
fmull
xchg
stos
daa
jns
int3
push
pop
or
ljmp
push
bound
mov
iret
push
fdivs
push
int3
sbb
cmp
or
and
call
imul
xchg
mov
nop
sub
jae
jecxz
lods
dec
sbb
sahf
xor
sahf
cmpsl
push
and
jne
add
push
loopne
mov
mov
arpl
and
push
cmp
cmp
bound
or
repnz
mov
jbe
mov
jns
or
dec
sbb
xchg
fsts
mov
out
add
and
mov
shrl
jle
ja
imull
sub
inc
cwtl
or
fisubl
cmp
test
inc
add
pusha
daa
mov
sti
hlt
xchg
xor
sti
jl
mov
push
or
popa
enter
mov
leave
jmp
pop
out
jno
cmp
adc
and
popf
call
pop
mov
or
cld
inc
fdivl
xchg
mov
out
mov
mov
lcall
cltd
icebp
cltd
in
jp
pop
mov
imul
add
pop
jg
xchg
pop
xor
add
shll
dec
movsl
or
xor
movb
imul
faddl
mov
xor
loop
push
aam
or
add
out
outsl
xchg
inc
jns
push
in
jle
inc
test
push
sbb
sbb
cld
add
jno
and
inc
addr16
jle
mov
xor
or
jmp
cmc
jae
mov
mov
out
call
push
popf
shrb
cli
lahf
lahf
and
xor
mov
aad
or
stos
or
fstp
inc
xchg
insb
mov
mov
or
lods
push
divl
inc
ret
pop
enter
popf
jnp
mov
lock
loop
je
xchg
out
jnp
fdivp
push
jns
inc
adc
dec
adc
mov
push
fsubr
and
xchg
cli
cmp
mov
mov
repnz
arpl
rolb
sub
inc
inc
repnz
cli
jp
mov
or
cmpsb
sbb
cmp
push
xlat
push
xorb
cmc
aad
or
aas
or
adc
xchg
stc
jae
mov
mov
hlt
inc
fsubrl
imul
inc
enter
mov
jbe
in
test
jae
lods
subb
xchg
jle
or
sub
int3
inc
es
push
xor
stos
jb
push
jge
xchg
xor
int
cmpsl
cwtl
xor
mov
lods
jmp
cmpsl
test
pop
fmuls
mov
dec
je
mov
xor
and
jge
xchg
adc
pop
cmc
pop
mov
std
in
arpl
jecxz
push
push
xchg
push
divb
sbb
call
and
test
mov
jne
call
ret
jg
shlb
les
cmp
cs
arpl
sub
sbb
test
mov
incb
mov
ds
out
push
fnstenv
jg
lock
or
addb
pop
pop
addb
cmp
daa
movsb
in
adc
repz
or
mov
adc
push
sub
cmp
mov
cld
cmp
aad
test
xlat
mov
loop
clc
paddusb
xchg
mov
push
mov
movsl
popa
pop
dec
imul
stos
fldcw
cmp
popf
and
pushf
inc
adc
je
movsb
jg
mov
push
mov
loop
test
inc
outsl
es
aaa
jl
mov
push
pop
cmp
js
jae
jecxz
iret
cli
sbb
mov
add
mov
mov
cmpsl
jns
mov
push
pusha
popf
test
out
push
dec
aad
jae
lcall
cmpsl
out
inc
cmp
test
or
inc
push
jp
sbb
pop
sbb
sub
je
lret
jmp
sbb
call
sbb
ss
dec
int
pop
data16
jge
cwtl
xlat
mov
mov
xchg
stc
fwait
nop
jmp
or
mov
rclb
dec
jecxz
and
imul
push
movsb
push
cmpsl
fistl
incb
aaa
push
cmp
mov
cmpsl
cmp
lea
out
push
push
loop
push
adc
push
pop
push
lahf
std
insl
xchg
mov
out
mov
sete
add
mov
paddsb
test
mov
push
mov
pop
repz
test
add
pop
mov
jnp
iret
mov
cld
cwtl
or
push
insl
add
sub
sbb
push
pop
fsubrl
lahf
sbb
in
sbb
xchg
sahf
or
or
test
outsl
xor
xchg
lret
cmc
inc
nop
arpl
push
push
and
es
mov
leave
sbb
les
mov
loop
jle
xchg
cwtl
cld
rcr
xor
ret
jg
pusha
mov
mov
mov
adc
mov
icebp
sub
inc
xchg
push
int3
push
out
dec
fstl
sub
sbb
pop
popa
cmp
decl
rol
out
cmc
add
pop
push
loope
sarl
add
push
outsb
loope
inc
dec
sbb
mov
add
fsubs
pop
push
dec
bound
mov
jmp
cmp
sub
scas
mov
sbb
sbb
mov
mov
adc
push
mov
rolb
fcoms
adc
fdivrp
lahf
ljmp
ret
adc
and
das
xchg
int3
cltd
stos
dec
inc
xchg
repnz
push
test
cmc
ljmp
dec
icebp
xor
and
dec
test
das
int3
test
test
dec
pop
adc
fs
jp
dec
or
stos
pushf
out
push
cmc
cmc
push
or
mov
clc
stc
mov
les
fildl
jo
push
xchg
repnz
push
mov
ret
mov
fsubs
femms
jle
test
ja
xchg
imul
add
adc
inc
adc
dec
xchg
push
add
sbb
xchg
inc
mov
fmul
inc
in
or
xor
ret
push
mov
stos
test
jb
mov
mov
cmc
jle
pop
data16
mov
mov
das
sub
sbb
pop
xchg
lret
sbb
les
cmp
in
sub
jnp
test
loop
add
inc
jl
retw
xor
stc
xchg
test
cmpsb
lods
mov
shll
push
sahf
repz
movsb
cmp
add
jmp
fistpll
movsb
cmpb
test
mov
xchg
cmpsl
inc
pop
sub
in
test
and
pop
cmpsl
push
push
mov
stos
in
fadds
sub
addb
sbb
push
iret
dec
xchg
repnz
xchg
fstl
pop
mov
rorl
mov
ret
xor
leave
inc
xchg
imul
push
jne
push
cmp
jge
mov
jmp
fwait
in
jae
insb
pop
decl
lret
inc
fisttps
xlat
outsl
outsb
pop
mov
pop
cwtl
mov
rol
inc
jb
stc
ss
sbb
and
insb
sahf
inc
cwtl
lea
mov
or
shrl
jge
pop
pop
sahf
das
xor
or
ljmp
push
loope
ds
imul
mov
dec
adc
frstor
cs
arpl
pop
loop
inc
pop
in
lret
in
out
ret
mov
mov
sbb
jae
mov
addl
sti
lods
or
lcall
inc
stos
adc
sbb
xor
xchg
hlt
lods
ret
popf
pusha
mov
sbb
cmp
icebp
push
sbbb
jb
or
pusha
ret
iret
mov
dec
aas
mov
dec
xor
jno
inc
xor
jne
xchg
stos
mov
outsl
xchg
dec
jle
repnz
aam
dec
jno
jb
adcl
cmpsl
rol
js
lds
lahf
in
repz
pusha
xor
imul
pop
xchg
mov
es
outsl
cmpsl
pop
sub
pop
jmp
cs
insb
dec
js
cmp
nop
xor
fs
stos
xor
ljmp
clc
cmp
xor
roll
pop
sahf
loop
adc
sub
sub
repnz
shll
sbb
pop
mov
lret
adc
xchg
mov
xchg
pop
pop
orl
idivb
lds
icebp
movsb
iret
push
and
xchg
inc
mov
push
scas
xchg
mov
rcrb
lods
fdivl
mov
mov
les
xlat
mov
rcrb
jae
shlb
fdivp
bound
test
adc
xor
fnsave
cmp
push
repz
jle
shlb
mov
jno
fsts
mov
dec
inc
loope
test
icebp
ja
xor
push
xchg
js
shll
add
or
jno
imul
cmp
and
mov
stos
xchg
inc
xchg
adc
fldcw
mov
push
xchg
les
scas
pushf
mov
test
int3
mov
push
lcall
jecxz
inc
xchg
loop
les
pop
out
mov
pop
mov
cmpsl
add
jnp
jecxz
adc
popl
loope
inc
jmp
lock
add
jl
adc
test
push
pop
in
icebp
push
stos
fwait
mov
adc
int
mov
jae
aam
test
mov
leave
ret
ss
inc
xchg
cmp
cld
lcall
pop
or
les
js
aas
and
jecxz
inc
popf
adc
dec
insl
adc
push
dec
shrl
pop
mov
sahf
sub
and
adc
push
out
loope
popf
jg
sub
imul
popa
sub
add
cmpb
add
je
in
and
aam
mov
push
sbb
jmp
mov
dec
arpl
ficoms
shl
clc
jbe
ja
xchg
inc
mov
mov
popa
sti
or
aad
bnd
flds
mov
in
call
stc
inc
jmp
mov
es
fidivs
in
rclb
loopne
imul
test
pop
bound
push
mov
negl
add
adc
iret
push
cmp
lret
negl
xchg
jecxz
fcomi
fucom
adc
inc
pop
dec
in
movsl
pextrw
dec
or
inc
xor
in
icebp
leave
mov
push
xchg
and
ret
sub
sti
mov
cli
sub
ret
stc
sbb
mull
sbb
fwait
mov
sarl
lds
std
scas
and
out
orb
ds
push
test
xchg
hlt
movsb
cmpsb
xor
inc
dec
pop
into
add
into
mov
xchg
adc
test
cmp
xchg
loop
lahf
or
dec
int
mov
add
mov
sbb
les
clc
ljmp
push
pop
imul
and
movsb
outsb
shlb
ljmp
inc
jle
pop
in
js
mov
add
adc
mov
out
pop
xchg
lcall
addl
pop
imul
xor
pusha
adc
scas
pop
sbb
repz
add
rolb
and
dec
or
jae
mov
xchg
enter
jge
push
sarl
push
movb
push
in
gs
sub
jae
lahf
popl
popf
and
mov
aam
push
js
rolb
dec
outsl
fiaddl
test
out
aam
arpl
std
xor
out
stos
movsl
jge
dec
std
dec
adc
inc
pop
adc
in
shl
test
icebp
repz
enter
add
test
fcmovnb
dec
add
jno
add
mov
pop
dec
pop
ljmp
or
or
aad
mov
pop
cmp
js
mov
std
lahf
adc
out
inc
fcoml
cmp
test
nop
push
inc
mov
fidivrs
mov
ljmp
mov
imul
fnstcw
or
or
cltd
stc
bound
jae
std
push
pop
xchg
popf
mov
inc
aaa
xchg
stc
ljmp
not
sub
and
mov
inc
std
mov
fadds
push
push
frstor
out
xchg
mov
push
or
lahf
push
test
sarl
movsl
call
mov
mov
pop
in
leave
dec
outsb
cli
mov
out
test
mov
loop
cmp
xor
cmc
int
iret
inc
aas
adc
adc
sbb
aas
xor
sub
pop
arpl
xchg
push
int3
push
pop
in
popf
mov
and
xchg
repnz
or
aam
clc
arpl
test
loopne
mov
jns
sub
sbb
jmp
sbb
lea
adc
in
lea
arpl
add
dec
out
xchg
pop
cmpl
add
iret
outsl
mov
mov
shlb
xor
std
fmuls
enter
sub
dec
ss
lret
insl
sub
std
je
push
and
dec
outsb
mov
jmp
sub
cmpsb
cmp
pop
push
test
scas
mov
inc
and
push
mov
xor
mov
aaa
shrb
popa
mov
cmp
scas
repnz
stos
jmp
mov
inc
mov
icebp
xchg
iret
js
xchg
mov
xchg
jge
lahf
jg
or
or
mov
adc
mov
stos
push
lea
xorl
ja
xor
loopne
aam
lods
push
fmulp
in
outsb
xor
outsl
pop
sbb
sub
repnz
xor
cs
stos
jb
enter
lahf
test
lock
fadds
pusha
adc
jle
movsl
dec
fisubl
and
xchg
sub
aam
pushf
push
pop
add
inc
xchg
sub
xchg
adc
mov
xchg
cmp
cmpsl
popa
inc
dec
add
outsb
mov
cmp
push
stc
add
cmpsb
xor
ret
lcall
inc
jno
add
stos
fldcw
int3
shlb
orb
pop
scas
loopne
jno
loop
xchg
mov
cmpsl
jecxz
loope
fisubs
mov
mov
out
push
cmpsb
out
movsb
jge
jmp
dec
out
test
add
aam
filds
cmp
frstor
or
mov
mull
lahf
clc
and
mov
rclb
fcmovbe
xchg
inc
inc
mov
inc
imul
je
fadds
cmp
je
cs
leave
rcr
fsubl
insl
inc
mov
jb
ffree
mov
popa
pop
in
xorb
sbb
test
mov
jo
std
adc
xchg
push
jmp
stos
cli
jge
mov
lahf
mov
mov
adc
jle
shr
sub
or
pop
mov
mov
add
stos
fldl
flds
and
leave
adc
jns
inc
push
xchg
adc
jp
dec
mov
add
push
fdivrl
mov
inc
cld
push
add
fcoms
nop
sahf
dec
or
and
add
fiadds
jle
imul
cmp
int3
scas
imul
jecxz
inc
inc
adc
fmull
iret
je
push
pop
lahf
push
rcl
mov
addr16
mov
movsl
cmc
clc
outsb
in
pop
and
sbb
pop
hlt
jo
sti
cli
cmp
loop
xchg
fwait
and
cltd
rolb
pushf
cmp
das
aas
outsb
pop
dec
popl
insl
jecxz
mov
jle
repz
int
jbe
inc
add
mov
mov
push
je
adc
cltd
rolb
push
mov
jb
inc
rol
pop
inc
push
insl
xchg
and
mov
ss
jg
movsb
es
dec
xor
stc
lcall
dec
or
xorb
cmpsb
xor
mov
dec
dec
adc
test
jno
leave
loopne
dec
js
cli
inc
lcall
mov
es
jge
pop
inc
pop
loopne
subb
mov
cwtl
sbb
and
mov
mov
cmp
or
sti
and
inc
or
loop
push
xchg
pushf
shlb
nop
lahf
push
fistps
scas
sub
sti
scas
lahf
icebp
enter
mov
xchg
xchg
icebp
out
add
jl
ret
xor
dec
js
fcomp
and
rcrl
xor
out
mov
sub
lods
pusha
inc
push
push
inc
sub
mov
mov
aaa
sbb
jno
sbb
test
and
imul
push
js
inc
cmpsb
call
push
dec
gs
rorl
push
lret
adc
pop
hlt
aam
mov
add
lea
mov
xchg
jb
cmp
xchg
inc
cwtl
cwtl
rcrb
pop
push
pop
rcrb
nop
xlat
inc
sub
lods
loope
xchg
add
cmp
and
les
inc
dec
mov
adc
dec
or
fldcw
out
xchg
inc
test
xchg
adc
imul
xchg
ret
sbb
mov
mov
fstps
xchg
inc
pop
lret
pop
and
pop
xchg
cmp
or
fst
out
and
pop
add
mov
orps
cmp
add
sbb
mov
iret
pop
loope
repnz
rcll
xchg
push
or
scas
mov
idivl
xor
lahf
orl
sub
push
cs
pop
popf
cld
into
inc
cmpb
hlt
mov
sbb
inc
inc
jns
or
and
jl
sbb
mov
mov
push
lds
push
mov
nop
add
xor
lahf
loopne
repnz
xor
movsl
xchg
fnstsw
sbb
orb
lea
mov
sub
xchg
in
shll
fwait
pop
sub
decl
stc
xchg
pop
enter
or
mov
imul
in
je
add
sub
inc
fmulp
outsl
fcomp
lods
cmpl
add
adc
jg
in
mov
imul
push
dec
jecxz
pop
or
dec
mov
xchg
mov
pop
jnp
or
in
dec
in
xlat
enter
enter
sub
ficomps
jne
imul
test
xor
jmp
cltd
push
push
jle
adc
pushl
jbe
or
jo
popf
inc
cmc
test
and
add
popf
mov
fisttpll
ljmp
inc
insl
out
sub
mov
lcall
pop
xlat
or
fists
jl
pop
mov
pop
ss
sbb
movsb
adc
jns
and
inc
cmpsl
cmp
and
scas
lret
jecxz
dec
daa
movsl
lcall
mov
clc
xor
and
mov
jae
ret
mov
xchg
js
mov
jge
adc
mov
test
mov
je
dec
insl
or
mov
sbb
int3
ret
sub
movsb
cwtl
xor
jns
repz
jl
shll
js
mov
mov
dec
int
cmp
dec
and
dec
or
lock
jl
stos
int3
sub
std
insl
mov
enter
pop
mov
cmp
mov
adc
push
icebp
pushf
dec
or
leave
out
sub
mov
pop
imul
aas
addr16
fsubr
je
dec
pop
mov
push
int
imul
xchg
add
dec
xorl
scas
call
adc
sub
pop
dec
aas
pop
adc
stos
ret
in
xchg
mov
out
unpcklps
dec
ss
stc
insl
fistl
cmpsb
fdivr
xor
fmuls
ja
pop
mov
mov
mov
jp
jne
mov
addr16
adc
and
insl
xor
lahf
fld
lds
cld
adc
xlat
mov
ret
adc
xor
cmpsl
and
sbb
adc
in
in
mov
mov
imul
inc
daa
sti
shrl
adc
jne
jp
mov
and
popa
xor
xor
int
or
push
dec
lcall
jno
faddl
inc
and
loopne
aam
or
sti
stos
sub
xor
mov
sbb
icebp
or
loope
or
sbb
lahf
hlt
shrl
jno
and
out
loop
push
movsb
mov
mov
andb
mov
je
movsb
add
fucomip
adcl
dec
pop
inc
movsl
sub
rdmsr
mov
adc
divl
mov
push
fs
lret
mov
cmp
xor
dec
xchg
in
push
xchg
rcll
fwait
rclb
pushf
cli
shll
in
cmp
xor
xorl
xchg
add
pop
xchg
int
mov
pop
push
mov
xlat
cltd
cld
scas
xor
push
jp
xor
xchg
adc
lret
cmp
jmp
add
pop
and
lret
andl
jecxz
call
mov
pop
cmpsb
sbb
out
out
push
cmp
data16
cmp
jb
jecxz
shrl
xlat
inc
repnz
cmpsl
loopne
jp
or
dec
sub
dec
pop
loop
movq
hlt
testl
mov
loopne
nop
adcb
push
push
mov
sbb
pop
jg
jne
inc
leave
mov
mov
or
lods
cmp
mov
mov
stos
daa
mov
cmp
cmpsb
xor
cmp
addb
pop
xlat
rolb
test
inc
nop
adc
push
sar
mov
popf
arpl
mov
rcll
xchg
mov
into
jp
xor
loopne
push
sub
movsb
loope
fdivs
dec
pop
jns
pop
jo
sbb
fwait
mov
ret
add
dec
inc
fiaddl
mov
stos
pop
cmp
add
or
outsb
and
pop
jb
jno
pop
lahf
dec
jnp
mov
mov
cmpl
cmp
rclb
adc
outsl
inc
add
pop
mov
inc
jmp
sbb
cmp
enter
stc
xchg
cmp
mov
out
pop
mul
push
mov
jnp
or
das
hlt
insb
cld
fwait
scas
mov
loope
jmp
and
push
out
cmp
dec
mov
rcr
inc
or
sub
and
xchg
inc
insl
bound
push
insb
popa
into
out
sbb
pushf
in
stos
mov
push
push
bound
mov
pop
jp
inc
std
xor
fistpll
jecxz
sbb
push
xchg
outsb
test
lds
pop
leave
jo
adc
add
stc
sbb
cs
setbe
mov
pushf
mov
repz
jl
xor
aam
or
pushf
loope
rolb
sbb
les
dec
jmp
adc
jb
scas
mov
sub
jb
adc
fisttpl
out
scas
sbb
movsl
mov
xlat
fwait
test
dec
pop
pushf
cmpsb
and
lret
and
mov
int
adc
dec
push
sbb
pop
and
sbb
fdiv
dec
cmp
or
fdivrl
je
add
add
push
xchg
addr16
push
rorb
jmp
mov
xchg
iret
mov
stos
sbb
dec
inc
ds
fldcw
mov
lret
jb
das
repnz
dec
add
inc
pop
cmp
iret
lods
mov
lock
arpl
sub
xchg
jo
sub
loope
in
ja
scas
pop
daa
xchg
and
adc
ljmp
fwait
push
inc
push
aaa
jnp
mov
cmp
adc
push
das
scas
xchg
cmp
inc
ljmp
inc
je
orl
in
inc
add
shll
pop
and
lahf
mov
xlat
dec
mov
shl
enter
jge
cmp
adc
test
push
mov
or
pop
test
ror
jb
adc
pop
jb
fbstp
jne
or
xchg
movsb
mov
outsl
xor
mov
insb
ja
mov
sub
xlat
adc
or
loopne
sarl
lea
hlt
repz
cmp
and
sarl
add
and
ds
fwait
iret
jle
jno
outsb
push
cmp
das
push
add
push
cmpsb
fistpl
scas
xchg
les
sti
sub
xchg
and
mov
xor
pop
and
mov
fcoms
push
sbbl
popf
out
out
ljmp
cli
or
cli
lret
mov
andb
xchg
les
out
pushf
das
adc
push
jmp
fisttpll
push
mov
mov
dec
lcall
push
or
and
addr16
jecxz
pop
push
jmp
adc
jge
adc
jae
bound
cmc
roll
pop
cld
adc
clc
add
push
roll
or
cmp
lahf
ja
lret
push
mov
cs
sub
out
iret
aad
fnsave
jbe
scas
xor
daa
pop
rorb
cwtl
dec
push
dec
fadd
mov
dec
jo
negl
je
loopne
mov
jge
nop
sbb
xor
mov
into
loope
inc
lods
add
subb
outsb
fcoms
out
xchg
mov
test
adc
sub
shll
cmp
adc
mov
jmp
and
xchg
aaa
insb
mov
out
fmull
test
jmp
mov
push
sbb
into
test
lds
sub
jle
fbstp
jne
xor
in
sahf
mov
repz
and
popf
icebp
and
adc
jne
and
mov
outsl
sbb
lods
ljmp
ret
sahf
push
xor
stc
sbb
mov
arpl
xlat
push
push
lods
in
add
cmpsl
jmp
xchg
sbb
nop
xor
and
shlb
inc
outsb
cmp
add
push
pop
jle
or
test
push
ficoml
jp
push
pop
les
or
and
add
dec
sbb
mov
mov
es
xchg
xchg
xchg
cs
dec
jbe
push
jge
int
fidivs
gs
sub
and
lds
cwtl
js
movsb
mov
insb
inc
add
sub
fs
daa
ds
std
outsl
loope
add
ja
adc
gs
xchg
inc
xor
jb
rcll
xchg
jl
enter
pop
adc
ret
jbe
scas
mov
mov
leave
mull
mov
rorl
xchg
cli
dec
pop
pop
in
add
jp
int3
xchg
mov
mov
es
cltd
int3
cmp
add
insb
movsl
ss
xlat
movsl
mov
es
xchg
in
fwait
and
test
clc
sti
xchg
fcoml
inc
mov
pop
outsl
clc
ret
or
in
mov
mov
mov
mov
mov
ror
inc
in
jo
mov
push
jno
pop
mov
fwait
inc
mov
out
xchg
mov
jo
pop
addr16
or
mov
and
xchg
pop
xchg
out
rcrl
aad
les
cld
fldcw
dec
xorb
cmp
shrl
cwtl
data16
push
cmp
jae
outsb
pop
roll
xchg
xchg
fcomi
mov
push
ss
jbe
xor
pop
sub
loop
ret
lret
aad
call
dec
pop
leave
inc
xor
sbb
rorb
rcr
stc
repz
adc
pop
fsubrl
test
adc
pop
pushf
inc
jb
into
movl
dec
push
sbb
push
loopne
inc
sbb
mov
mov
inc
and
inc
mov
sahf
cli
mov
movsl
popa
fsincos
adc
adc
shr
pop
fsts
das
cmp
in
add
insl
imul
sbb
pop
aaa
ret
xor
out
pop
pop
mov
pop
stos
mov
inc
jno
int
xlat
loop
insl
cld
and
pop
fcmovu
or
dec
xchg
stos
fadds
pop
sahf
int
mov
cmovbe
cmpsb
out
cmpsl
stos
outsb
inc
aam
sti
mov
dec
pop
jae
mov
push
out
jne
pop
and
cmp
jmp
fcomps
add
push
jae
push
mov
aad
mov
fwait
cmp
fstl
push
mov
lds
cmp
cmp
call
lea
mov
sub
sbb
xchg
cmp
mov
xor
jns
popa
sub
test
push
pop
push
xchg
sub
ret
jnp
push
or
movsb
jmp
adcl
repnz
cmp
xchg
xchg
dec
loope
cmc
sbb
mov
aad
adc
ret
gs
mov
xchg
mov
jo
stos
pop
fucom
jecxz
pop
lea
or
mov
xor
rcrb
cwtl
js
add
sbb
add
and
dec
mov
adc
in
cmp
mov
sbb
lret
inc
lock
repz
mov
dec
sarl
and
mov
js
adc
das
insl
jecxz
fadds
adc
iret
cmc
ljmp
and
sub
mov
sbb
cmpsl
jp
inc
cli
and
mov
push
add
or
inc
mov
cmc
xlat
dec
jecxz
xor
inc
sti
jae
nop
shll
aas
jecxz
mov
or
leave
pop
add
outsl
hlt
loopne
inc
mov
or
pop
push
xor
sub
and
dec
ja
fbstp
out
mov
lahf
mov
pop
popa
pop
push
aad
insl
cmp
xchg
lds
push
lahf
xor
xor
xchg
mov
xchg
inc
aam
push
dec
aas
sbb
jmp
mov
ret
cld
cmp
cmpsl
int
iret
sbb
lret
test
cmp
sbb
data16
inc
mov
sbb
xlat
mov
clc
xchg
mov
jns
je
push
rorl
jne
add
insl
cmp
or
insl
adc
push
add
mov
xchg
xor
jbe
adc
inc
xlat
test
adc
cwtl
sbb
inc
and
lahf
imul
cld
jp
jne
push
imulb
jecxz
add
out
pop
ja
jno
xchg
or
inc
dec
out
mov
mov
ds
push
fs
sub
inc
int
push
jns
idivl
popa
or
add
in
ljmp
mov
or
inc
ret
into
sub
inc
into
mov
pop
dec
scas
sbb
xor
xor
sub
push
pop
je
in
inc
fs
lret
insb
or
mov
lods
pop
sbb
imul
nop
sub
cmc
test
gs
sbb
mov
pusha
dec
push
mov
pop
mov
cmp
test
cwtl
pop
jmp
mov
testb
mov
pop
jl
add
stos
xchg
mov
adc
scas
and
xlat
iret
xor
push
jo
mov
push
dec
lea
cmp
stc
enter
mov
cwtl
mov
pushl
and
sub
mov
add
dec
push
cli
in
subl
sahf
inc
pop
pusha
lods
push
lret
fstpl
and
fisttpll
cmp
xor
aaa
lcall
out
cmp
popa
cwtl
fcmovbe
mov
push
mov
fildl
scas
inc
fstl
pop
sub
and
xor
ss
xchg
mov
sbb
sub
hlt
insb
outsb
cmp
dec
mov
cmp
frstor
clc
insl
scas
stos
jno
fimuls
jno
pop
inc
lods
pop
sar
rorl
test
loope
sub
mov
mov
mov
xchg
call
xchg
ja
in
mov
push
dec
fs
sub
pop
xchg
xor
inc
and
jo
ja
inc
add
and
test
cmp
and
fsubrl
push
jb
mov
jp
popf
popa
push
test
data16
adc
cmp
mov
and
inc
insb
jmp
xor
sbb
stos
dec
add
pop
mov
push
stos
cmp
es
push
outsb
and
or
add
in
push
jnp
out
cmp
les
push
pop
aad
stos
fistps
or
push
jne
push
das
cmp
push
lahf
movsl
add
mov
dec
sbb
sbb
xchg
adc
push
dec
aas
rol
inc
fisttpll
dec
arpl
fiadds
add
xorl
lahf
xchg
push
push
add
sbbl
fisubl
jmp
mov
ret
enter
push
jno
ljmp
or
pop
mov
imul
shlb
loopne
pop
xchg
popf
push
inc
push
xchg
inc
sbb
add
or
cmp
cmp
ret
cmc
adc
dec
repnz
jns
in
mov
xchg
cmp
push
gs
sbbb
fsubrl
add
mov
pop
or
add
sahf
xchg
es
xchg
loop
sahf
adc
dec
into
popa
int
adc
ja
stos
aad
sbb
hlt
push
icebp
mov
shrl
push
jne
inc
adc
mov
dec
aaa
insb
cmp
fnstcw
push
push
and
cwtl
sub
mov
es
mov
notl
lods
adc
inc
aam
pop
dec
mov
xchg
push
dec
insl
jl
insl
add
xchg
ss
push
cmp
les
ret
pop
test
ds
out
push
in
sbb
stc
stc
dec
cmc
loope
lods
test
pop
jge
fcoml
icebp
mov
test
jbe
repnz
jno
and
flds
lods
xchg
adc
push
sbb
sbb
cwtl
arpl
pop
push
das
call
xor
call
mov
adc
cmp
or
jae
pusha
jecxz
repnz
stos
mov
pop
sbb
je
adc
rclb
cmp
sbb
sub
sbb
sarl
push
imul
xor
jmp
int3
insl
pop
dec
add
mov
stc
lret
and
jecxz
sbb
pop
push
mov
mov
xorl
sbb
mov
cltd
das
out
xor
fldenv
jmp
lret
fdivrs
or
and
fldt
fwait
sbb
xchg
les
sbb
movl
fstpt
push
arpl
shll
jnp
divl
nop
jmp
aad
hlt
add
xor
sbb
fmull
rorb
lcall
decl
dec
xchg
test
andl
ret
sbb
les
dec
xchg
push
pop
popa
sbb
lret
rcrl
popa
adc
out
es
xchg
arpl
fcmovnu
mov
repz
push
out
sar
mov
xor
sub
test
mov
dec
and
sub
jecxz
test
shr
inc
adc
lea
cmp
dec
mov
mov
mov
mov
and
aad
sub
outsb
mov
mov
arpl
or
inc
xchg
out
dec
cs
or
shlb
scas
loope
cmp
shll
mov
xchg
cs
js
insl
mov
cs
lret
iret
into
xchg
les
loop
pop
jmp
popa
aas
mov
push
divl
mov
fbld
adc
ret
stos
mov
xchg
cwtl
or
xor
setne
int3
mov
add
or
sub
int
sub
or
mov
pop
movsb
es
jae
adc
or
hlt
jp
dec
xchg
pop
lret
inc
fisttpll
push
add
sbb
daa
aam
cwtl
push
mov
sbb
push
cmp
pop
xor
push
add
rclb
icebp
ds
xchg
mov
test
jge
gs
shl
outsb
or
popa
dec
bound
mov
cltd
insl
les
sbb
xchg
fbstp
xchg
lods
lcall
lock
in
mov
popf
out
int
cld
gs
addr16
ss
pop
std
xchg
test
mov
popf
cmp
push
ljmp
in
cmp
or
and
lods
adc
leave
int3
or
jp
mov
cld
inc
imul
arpl
decb
lds
push
push
dec
push
mov
jl
sub
jo
xor
or
imul
fsubrs
sub
enter
push
xchg
pop
bound
sbb
xchg
test
cli
lds
inc
cltd
call
xchg
in
scas
inc
inc
stc
repz
push
int3
xchg
rol
adc
out
and
dec
rclb
pop
sub
push
pop
jmp
adc
and
test
cmp
cmp
xchg
or
mov
rclb
fstpt
int
sbb
shll
cmpl
xchg
mov
es
dec
shll
dec
js
mov
testl
xchg
in
mov
cmp
pop
jmp
or
mov
mov
mov
pop
mov
aas
mov
fisubl
mov
and
add
sbb
clc
cmp
and
mov
repnz
add
sub
jno
cmp
mov
ret
mov
push
icebp
jo
cmp
push
jl
pop
lcall
leave
test
scas
mov
mov
enter
repnz
cmp
jb
add
and
mov
sbb
inc
inc
pop
sub
mov
push
jno
cs
lea
movsb
push
out
popw
mov
adcl
dec
fbstp
ret
gs
adc
mov
fwait
push
shll
pushf
push
xor
jae
mov
inc
vmread
jle
mov
push
jmp
and
pop
inc
movsb
out
sbb
repz
lret
add
insl
pop
out
scas
insb
xor
cmp
pop
lret
jo
mov
pop
and
mov
cmpsb
pop
sti
or
jbe
cld
sarb
cmp
push
fs
lahf
inc
arpl
pop
push
mov
jl
imul
aad
adc
xchg
mov
cmp
mov
fwait
mov
icebp
fcomps
loope
leave
scas
push
or
and
push
pushaw
and
jnp
mov
mov
push
adc
imul
ror
inc
stos
push
jb
ss
xor
adc
sub
repnz
adc
inc
pop
inc
scas
jg
sub
andps
orl
lds
pop
fldl
cmp
adc
adc
xorl
shll
xor
iret
movsb
add
test
push
mul
dec
scas
test
xor
fstps
or
pop
push
pop
dec
sbb
daa
xchg
adc
pop
mov
fwait
inc
jb
sbb
cmp
testb
push
dec
fwait
push
aaa
sub
inc
xchg
jl
out
sub
nop
push
push
cld
movl
jbe
je
pusha
and
hlt
add
mov
sbb
cmp
fstl
inc
setle
xor
sub
mov
test
mov
fptan
movl
ja
add
clc
es
popa
jmp
jne
mov
mov
rcll
xor
iret
sub
inc
cltd
mov
sbbb
pop
rcll
add
lods
lock
ljmp
mov
pushf
mov
mov
dec
scas
int
inc
jae
jecxz
fnstsw
xorl
push
shl
insb
jge
sub
mov
xor
sbbl
push
mov
mov
mov
cmc
addl
das
loope
mov
subl
shl
pop
shrb
outsb
stos
push
or
test
jg
fcomps
aas
mov
cmp
add
popa
mov
testl
lds
lods
pop
sarb
lds
push
push
mov
fisubs
movsb
inc
enter
stc
imul
mov
and
jmp
idivb
adc
mov
inc
mov
dec
push
sub
push
inc
xor
pop
mov
fsubrl
cmc
jmp
mov
in
jge
jo
outsb
mov
es
sub
int
jae
cmpsb
testl
imul
and
push
cmpsl
jnp
add
sti
push
cmp
int
and
fsubl
incl
push
imulb
scas
jo
and
sarb
ljmp
cld
ficomps
fiaddl
add
push
cmc
lcall
mov
pop
cmp
es
data16
xchg
aam
orl
loopne
mov
adc
in
and
fmull
sub
adc
mov
mov
xchg
loope
inc
aaa
movsb
jge
jg
push
aas
sub
xor
push
enter
aaa
sub
incb
fcompl
outsl
outsb
outsb
cmpsb
daa
pop
push
popa
pmaxub
mov
add
testb
jle
leave
enter
iret
roll
scas
mov
sbb
sub
call
push
sbbb
and
mov
jp
test
xor
mov
pop
and
adc
fists
les
sbb
loopne
mov
ja
push
add
scas
fcomi
stos
popa
cmpsb
sbb
xchg
addb
les
out
push
out
imul
mov
repz
adc
call
jg
gs
repz
stc
subl
out
gs
nop
mov
mov
insl
xlat
stos
fbld
cmp
mov
in
cmc
mov
xchg
jle
mov
lahf
xchg
dec
jne
clc
push
arpl
dec
jno
and
jmp
jae
fimuls
push
xor
jmp
lds
jmp
push
mov
imul
fcompl
lcall
jg
xor
adc
into
in
pop
dec
xor
mov
repz
clc
scas
icebp
lods
test
ret
inc
and
and
jg
and
mov
push
cmp
mov
jg
cs
cld
sti
xadd
sbb
rorl
pop
mov
xor
into
xor
loopne
out
int3
mov
sbb
xchg
pop
pusha
mov
shld
enter
testl
pop
xor
cwtl
mov
and
fdivr
addr16
out
inc
inc
ret
jb
sub
ficoml
shll
cmp
add
pushf
jne
out
xor
fildll
xorl
out
xor
lea
and
or
loop
inc
out
dec
dec
push
lock
adc
sub
xchg
sub
lahf
pop
fisubrs
daa
add
aad
push
jne
dec
adc
add
add
jge
lret
mov
or
shll
push
xor
cmp
out
imul
mov
push
sub
sarb
mov
mov
popa
fs
mov
out
addb
cmc
mov
mov
outsb
test
and
std
add
rclb
int3
mov
push
filds
shlb
xchg
iret
add
movsl
cs
add
push
mov
pop
je
popa
inc
cld
iret
orl
lret
movsl
push
and
fwait
test
sub
mov
pop
xchg
xor
ss
cmp
xchg
push
xor
inc
adc
mov
xchg
jge
arpl
popa
test
adc
sbb
or
pop
lock
push
inc
xlat
ja
lret
mov
aad
repnz
xchg
lock
stos
jmp
popf
adc
and
xor
dec
push
mov
xor
mov
sub
mov
stc
jno
pop
adc
sarl
cmpsb
shrb
jmp
je
data16
jns
or
xor
mov
xor
pop
jecxz
pushf
push
data16
mov
xchg
adc
mov
movntq
cmp
xlat
movsl
inc
lods
fwait
pop
xchg
call
jb
cli
or
and
pop
push
ret
enter
sub
test
push
and
add
idivl
adc
pop
sarb
dec
mov
xor
lcall
inc
pop
mov
push
mov
movsb
lret
adcb
push
enter
jmp
inc
cmp
test
rcll
repz
sub
or
add
dec
int3
mov
repz
push
das
push
test
shrl
es
mov
or
mov
push
jle
call
sti
mov
addr16
outsb
pop
xchg
fistpl
nop
call
sbb
icebp
inc
lds
sbb
imull
out
ret
dec
test
ds
push
mov
and
push
in
lods
cwtl
jae
bound
mov
cmp
cmpsb
xchg
and
mov
in
inc
mov
fsubrs
dec
pop
pop
arpl
mov
dec
in
cwtl
ljmp
dec
sub
cmp
xchg
pop
fildll
sahf
fildl
in
mov
imul
lea
scas
add
sub
fstps
lahf
pop
lret
dec
inc
xchg
inc
fldcw
inc
add
xchg
xchg
or
inc
loop
mov
lods
adc
sbb
lcall
or
int
call
sub
mov
jg
test
and
xchg
popw
out
push
pop
int
cmpsl
imul
push
pop
loopne
pop
lock
pusha
pop
outsb
popa
iret
sbb
push
xchg
xor
inc
inc
inc
mov
sbb
insl
fstpl
inc
cltd
dec
call
in
inc
test
test
das
push
insb
mov
push
lods
ljmp
ret
popf
or
or
inc
icebp
imul
movsb
mov
sbb
test
test
lcall
or
ret
add
mov
cmpsb
xchg
je
dec
test
ljmp
xor
iret
dec
pop
inc
mov
mov
sub
stc
jno
and
fdivs
lea
mov
or
sbb
adc
dec
faddp
lods
ss
lea
ss
popl
jg
aam
lods
jmp
fwait
adc
and
inc
shlb
push
lret
jmp
cwtl
dec
pop
sahf
mov
mov
and
sub
pop
cli
cld
into
jo
aam
cli
dec
jo
scas
add
outsb
loopne
inc
sbb
test
aaa
pop
jae
iret
ret
cwtl
loopne
cmpb
cmpsl
fsubr
aam
rolb
dec
or
inc
aas
leave
pusha
push
bound
push
arpl
arpl
inc
xor
xor
scas
mov
add
mov
mov
cltd
testb
test
mov
hlt
add
xchg
sarl
iret
pusha
out
mov
ficoms
sbb
push
adc
xor
adc
fistps
sbb
and
mov
call
xchg
inc
fnstsw
or
std
xor
gs
xchg
dec
outsb
cmpsb
jecxz
sbb
or
push
gs
mov
add
cmp
xchg
movsb
test
mov
ret
stos
sbb
sbb
inc
ss
mov
orb
not
inc
ljmp
cmpsl
cmpsl
jp
stos
hlt
pushf
subl
insl
or
adcl
scas
and
xor
insl
inc
xorb
cld
mov
add
out
out
dec
mov
xor
dec
shl
fmuls
jecxz
rolb
clc
in
ds
xchg
dec
sahf
mov
fstp
jb
in
pushf
push
add
repz
sbb
xor
or
xor
dec
lods
int
test
outsl
mov
sbb
inc
movsb
mov
int
mov
add
jns
test
and
cli
and
out
pusha
aad
movsb
mov
sbb
stos
hlt
xchg
pop
out
dec
rcpps
shll
mov
ljmp
sbb
cmp
cld
dec
mov
daa
and
in
or
insb
xor
mov
movsl
mov
fldl
sarb
je
inc
scas
push
dec
hlt
cli
or
pop
xchg
adc
and
mov
xchg
fwait
sub
jb
push
test
lods
shll
subb
xchg
jne
sub
or
test
push
jne
jbe
mov
xchg
sub
mov
cmp
add
add
aas
mov
leave
repz
mov
sub
push
lahf
mov
call
jmp
rclb
aad
pushw
dec
cmp
adc
dec
loop
jnp
insb
mov
clc
cltd
mov
test
loop
sahf
shrl
push
mov
mov
cmp
fcmovb
push
rcl
std
imul
sub
jg
jno
sti
out
cwtl
mov
adc
fmull
sbb
add
or
cld
lods
mov
lods
sahf
pop
fistpl
scas
cld
adc
addl
cmpsb
sub
into
xchg
mov
xor
rclb
shlb
cltd
divb
lahf
inc
pushw
clc
add
xor
bound
test
dec
xchg
shl
outsl
idiv
push
lods
sahf
testb
jbe
xchg
mov
jge
add
jnp
mov
push
inc
fisubs
cmp
jmp
push
sub
iret
sub
push
push
jnp
push
xchg
and
clc
lret
mov
std
jo
std
fabs
jle
xor
fstps
xchg
add
lds
pop
clc
mov
sarb
and
lahf
or
push
lock
sbb
mov
loop
je
jbe
add
jmp
aaa
cmp
sub
loopne
inc
test
inc
sbb
mov
aaa
mov
ja
mov
pusha
mov
lahf
mov
sub
cmp
xorl
dec
mov
pop
sbb
popa
xlat
mov
pop
adc
es
push
std
incb
stos
xchg
xorb
loope
in
out
mov
fnsetpm(287
sbb
je
cld
sahf
mov
popa
dec
and
xor
or
mov
stos
sub
inc
popa
adc
and
lock
and
pop
jb
shlb
or
inc
shr
mov
xchg
test
mov
xor
inc
lea
sub
sub
pop
out
into
je
or
add
daa
sbb
aaa
push
lret
in
xor
stos
int
xchg
jns
xchg
mov
and
push
adc
cmp
add
shll
sbb
push
test
lods
stos
push
add
cmp
repnz
xchg
pop
xchg
sbb
jmp
loopne
cmc
sahf
scas
loop
sub
cmpsb
xchg
movsb
pop
pusha
push
lock
sbb
mov
push
stos
xlat
inc
push
loopne
or
sbbb
popf
pop
ljmp
or
fs
ret
dec
imul
mov
bswap
mov
fwait
int
ret
cwtl
stos
mov
or
mov
ja
push
sub
jle
cmc
faddl
outsb
adc
lahf
mov
xchg
inc
aaa
call
test
jmp
int
in
mov
xchg
mov
xchg
fidivs
sbb
xlat
jmp
movsb
xchg
push
int
stos
sahf
aas
mov
pushf
mov
or
xor
adc
add
in
ds
jg
xor
jl
in
bound
jnp
dec
in
cmc
in
pop
jle
pop
cmp
mov
jg
jmp
jne
xor
mov
and
imul
dec
insl
mov
sti
mov
jns
jnp
xchg
imul
mov
cmp
sub
pop
jmp
cmp
xchg
mov
xchg
and
repz
inc
or
rolb
mov
mov
pusha
mov
ja
pop
add
stos
push
aas
pusha
gs
sbb
sub
sub
in
and
out
xlat
xor
popa
or
in
push
push
movsb
add
xlat
and
sub
in
mov
dec
lds
and
aam
movsl
push
xchg
dec
push
add
rol
inc
cli
lods
mov
out
jmp
jne
xchg
movd
outsl
es
imul
dec
adcb
pop
inc
outsl
aas
imul
xor
add
lcall
push
sub
inc
leave
arpl
mov
rcr
pop
jl
push
push
xor
add
add
stos
jle
aas
lods
mov
xchg
jne
xchg
xchg
mov
es
lcall
adc
xchg
popa
sbb
sub
fs
mov
sahf
das
aaa
lret
xchg
or
jno
cltd
outsb
mov
clc
mov
cmp
jns
pop
mov
out
mov
scas
cmpb
mov
aad
xchg
mov
ret
xchg
jecxz
jb
mov
or
daa
dec
mov
movsl
lret
jns
xchg
int
mov
shrb
lods
inc
adc
incb
je,pt
mov
fstl
cmp
fsts
mov
mov
cmp
xor
pop
push
mov
sar
ja
orl
lds
aas
adc
push
ljmp
jg
xor
mov
iret
inc
add
lcall
out
ret
add
dec
inc
sbb
out
ja
test
in
cmp
inc
and
push
pop
mov
add
loope
push
sbb
inc
ficompl
push
or
das
cli
vmovaps
nop
pop
adc
mov
in
push
fstps
push
addr16
dec
pop
mov
int
add
dec
ds
dec
jbe
out
push
dec
cmpsb
inc
ret
icebp
in
test
xorb
fnstcw
dec
xchg
ficompl
sbb
push
sbb
mov
mov
add
mov
adc
jl
lock
xlat
jo
adc
jne
pop
dec
loopne
pop
mov
jbe
stc
stos
adc
adc
arpl
call
mov
das
mov
cwtl
sbbl
mov
sub
jb
in
outsl
cltd
mov
push
inc
stc
dec
pop
js
cmp
nop
xchg
adc
xchg
push
loop
inc
gs
jge
test
add
sbb
popf
cld
into
jle
js
lods
arpl
vmread
lods
mov
mov
stc
or
sbb
cwtl
dec
orl
cltd
xor
test
out
xchg
mov
add
in
mov
mov
popa
shlb
out
fs
jno
dec
inc
aad
sbb
jnp
inc
loop
jbe
cmp
push
bound
dec
addr16
mov
or
ss
int3
pop
cmpsl
test
sub
aas
pop
in
call
leavew
cmp
addr16
jge
loopne
out
dec
jb
sub
outsb
jmp
mov
in
icebp
xlat
xor
pop
jns
xor
mov
or
inc
insl
aad
sarl
js
test
fstpt
sub
lea
lods
rolb
mov
mov
pop
lds
mov
into
push
decl
leave
mov
int
xchg
sbb
add
xchg
leave
xchg
pop
inc
jb
xor
orl
jl
xor
pop
ffreep
das
fwait
mov
ss
imul
or
loop
into
mov
pusha
dec
inc
push
mov
lcall
add
add
nop
inc
xor
cmp
jmp
mov
sbb
mov
xchg
out
cwtl
lret
loope
nop
pop
std
test
stos
outsb
ja,pt
mov
xchg
fistpl
cmp
out
add
pop
jne
in
shlb
cmpsl
xlat
xor
pop
xor
decl
stc
mov
cli
xchg
dec
push
outsl
lock
jbe
push
sti
fwait
cmpsb
mov
xlat
mov
hlt
stos
dec
lods
dec
notl
mov
xor
aaa
mov
cld
cmc
jge
pushf
xchg
xchg
adc
fnstenv
or
push
mov
pop
pop
insl
inc
pusha
add
or
dec
dec
mov
shll
mov
pushf
mov
cmp
test
sbb
mov
inc
fbld
test
jns
stos
mov
jo
dec
or
add
push
inc
push
fcom
xchg
pop
cmp
aam
and
xorl
or
push
mov
out
sti
loop
add
testb
xchg
rcrl
sub
jnp
inc
xor
adc
movsb
sbb
in
mov
cmp
dec
xor
pop
test
lret
lods
jge
push
mov
cmp
sub
sbb
inc
mov
sbb
dec
xchg
pop
mov
xchg
subb
push
js
repz
or
mov
sti
iret
and
jl
push
mov
in
movsl
jb
repz
xchg
daa
test
repz
mov
mov
outsb
nop
xchg
rorb
xchg
pop
dec
mov
pop
cmp
aas
popa
jmp
push
and
and
cmp
rclb
jne
mov
push
ret
cwtl
xchg
mov
add
cmc
paddq
dec
lret
cmpsb
pop
jecxz
cmp
push
push
loopw,pn
cmc
mov
addr16
xor
xchg
imul
jmp
xor
mov
outsl
and
stos
adc
pop
mov
push
mov
in
inc
bound
inc
mov
outsl
mov
xor
mov
sub
add
add
hlt
repnz
sub
jg
jne
imul
and
hlt
xor
je
pop
pop
negl
test
and
push
xor
pop
push
insl
push
add
dec
repz
fadds
jecxz
mov
test
daa
je
ret
repnz
dec
or
cli
clc
in
sub
adc
das
leave
adc
push
int
push
sahf
ja
jnp
and
ret
mov
shrl
xor
and
add
loopne
sub
movsl
loopne
jg,pt
push
orb
mov
adc
dec
sub
xchg
fst
xchg
mov
pusha
inc
mov
leave
lahf
out
ljmpw
imull
sbb
int3
call
scas
iret
xor
mov
lret
adc
iret
add
sti
pop
xchg
cmpsl
xchg
dec
fcomip
sbb
out
fidivrl
es
in
gs
btc
mov
std
aaa
hlt
cwtl
or
inc
inc
jle
sar
sub
xchg
or
rcrb
es
dec
sub
std
jp
mov
stos
out
pop
test
into
pushf
xor
dec
aaa
mov
sbb
inc
mov
imul
sbb
cmpl
mov
out
aaa
push
inc
sbb
mov
inc
jne
scas
add
je
push
inc
adc
jne
jne
dec
dec
pop
xor
sub
flds
sbb
std
enter
icebp
jne
addr16
jb
jo
mov
outsl
int3
pop
aam
fldl
jns
xchg
std
scas
jb
inc
rolb
mov
iret
push
push
loop
pop
das
outsl
pushf
lahf
mov
in
cmpsl
test
xchg
call
add
fwait
pop
in
ret
lods
into
inc
cmp
inc
mov
in
xor
xlat
pop
push
adc
mov
in
sub
xchg
jmp
pop
or
lea
cmc
shrb
out
and
or
scas
mov
movb
inc
mov
dec
daa
push
push
sbb
xor
push
lahf
or
insb
adc
les
lea
xor
mov
xchg
sbb
sbb
jle
jno
jmp
and
std
jbe
lahf
xchg
mov
mov
cli
lea
adc
xlat
pop
add
mov
insb
fs
mov
orb
inc
mov
shlb
jns
push
pop
xchg
adc
out
stos
fisttpll
aaa
hlt
inc
jbe
inc
adc
sub
jecxz
outsb
add
idiv
jle
fs
dec
or
dec
jno
sbb
stos
adc
push
adc
adc
loopne
icebp
aas
icebp
lahf
sbb
inc
and
dec
aad
sbb
rcll
mov
push
inc
lret
push
mov
push
jg
in
mov
add
ret
mov
sahf
outsl
pop
fistps
mov
cs
pop
notb
cmp
mov
xchg
add
jb
test
cld
push
cmp
ljmp
push
ret
in
xor
sub
mov
cmp
xor
adc
inc
xor
mov
movsl
adc
outsl
les
xchg
and
movsl
movsl
mov
loop
enter
and
fisttps
mov
mov
add
fs
sbb
je
sub
add
sbb
pusha
mov
inc
xchg
out
dec
push
xor
or
arpl
in
mov
test
insl
ret
mul
cmpsb
lahf
mov
push
or
add
inc
mov
push
mov
mov
jg
add
add
mov
incl
jg
xor
fadds
dec
dec
or
lret
test
sub
xor
out
jg
jnp
enter
or
push
push
fidivrl
mov
jae
jo
add
enter
xchg
ds
stos
roll
add
int
push
push
jae
mov
mov
test
or
ljmp
cmp
lahf
les
pop
adc
push
fcomps
popa
cmp
leave
aaa
lcall
mov
cmp
adc
ss
mov
xor
int3
repz
hlt
lods
mov
mov
mov
dec
into
pop
sub
cli
hlt
in
ss
jle
xor
cmp
adc
push
aam
ret
pushf
xchg
sub
push
jl
fistl
out
iret
pop
in
adc
je
mov
hlt
nop
pop
jb
mov
pop
in
push
sbb
lds
xchg
data16
jg
cmpsl
aaa
js
xor
xchg
fisubrs
call
xchg
and
lds
mov
mov
push
mov
adc
into
fcmovb
pushf
pop
xor
mov
push
pusha
imul
mov
push
cmp
ja
cmpsb
adc
cltd
stos
xor
out
loopne
popa
pusha
mov
loopne
insb
and
jecxz
mov
imul
fldenv
pop
clc
leave
test
xor
stos
adc
sbb
lock
xor
jp
mov
ja
pusha
and
jp
lret
jb
shll
cmpsl
movsb
add
dec
push
fsubl
mov
fadds
mov
imul
cmp
mov
xor
mov
push
aad
test
insl
pop
add
pop
into
mov
jg
mov
push
or
std
sahf
bnd
in
xor
mov
pop
repnz
out
in
mov
mov
icebp
pop
xchg
jo
loop
sbb
xor
push
mov
xchg
mov
mov
das
xchg
or
xchg
dec
mov
pop
xor
adc
rcrb
ret
nop
or
add
or
adc
adc
or
cmc
ja
jp
push
mov
pop
out
pop
push
pop
adc
lds
pop
add
push
int3
insb
add
mov
cmp
ret
test
into
addr16
xchg
gs
lahf
mov
in
push
outsb
dec
fs
insl
sahf
sbb
mov
mov
inc
jo
shll
imul
loopne
mov
or
dec
xorl
cs
mov
push
fiadds
and
test
push
bound
into
jp
xchg
push
and
inc
lods
sub
pop
mov
cmp
inc
adc
test
adc
lret
jb
pushl
push
insb
lcall
inc
jno
pop
mov
adc
jb
rclb
sub
and
lock
fnstcw
and
mov
lahf
fsubrl
mov
fisttpll
adc
fs
cmpsb
sbb
mov
mov
dec
inc
push
rcll
push
aam
in
lcall
xor
mov
mov
push
imul
dec
push
pop
sub
lret
cmp
sbb
mov
xor
mov
jae
std
xor
rcll
fistpl
pop
jns
into
adc
push
cmp
sub
cmpsb
xor
push
dec
mov
leave
push
js
xor
test
jb
sub
orb
xor
jecxz
aas
loopne
push
scas
ja
mov
pop
xchg
imul
push
or
sub
test
xchg
inc
insb
jnp
leave
sub
movsl
push
xorps
aam
lcall
pushf
in
cmp
fiaddl
fucomip
out
cmpsl
cmp
and
dec
pop
mov
sbb
test
or
xchg
mov
mov
leave
or
aas
rcr
outsl
les
fidivrs
cmp
insl
arpl
sub
fldt
dec
insl
and
and
dec
rcrb
andb
xchg
js
or
mov
dec
add
pop
cmp
ret
xlat
jmp
enter
cli
adc
cwtl
daa
sbb
add
addr16
in
mov
adc
jle
fldl
push
les
mov
mov
adc
das
scas
cmp
fsubrl
js
fnstenv
dec
inc
sbb
cwtl
addl
enter
mov
test
loopne
push
movsb
cmp
fs
or
xor
enter
idivl
enterw
negb
jg
repz
mov
je
mov
adc
aas
movsl
jb
ss
out
mov
fisttpl
cs
adc
sti
in
adc
in
icebp
pop
jb
dec
mov
out
fidivrl
push
es
or
mov
mov
ret
jle
mov
add
icebp
cli
inc
repz
ljmp
mov
cmpsb
pop
xchg
dec
inc
lods
or
stos
sahf
out
sub
mov
push
lret
outsb
push
lods
rclb
mov
and
sbb
in
cmp
stos
out
lcall
out
rep
cmc
xchg
sahf
sub
test
sbb
popf
and
ret
cmpsb
xchg
sub
xchg
add
xchg
in
dec
loopne
pop
xchg
int
cmp
addr16
xchg
test
addr16
loop
enter
es
jb
negl
and
shl
or
cmp
xchg
dec
loop
fisttpll
adc
sub
out
push
cmp
jne
and
jge
xchg
or
sti
adc
jnp
sbb
addr16
xor
rcrl
fwait
cmpsl
xchg
sahf
sbbl
fdiv
mov
repnz
pop
add
sub
clc
cmpsl
xor
jge
xor
test
std
mov
xlat
ficomps
sbb
int
repnz
aam
dec
pusha
jae
fidivrl
punpckldq
jnp
xchg
dec
test
int
push
push
or
push
adc
sub
mov
cmpsl
cs
std
ss
nop
cmp
cli
xchg
mov
addr16
std
addl
daa
add
inc
pop
xor
loop
cmp
fs
push
aaa
std
test
je
pushf
fiaddl
scas
cmc
sbb
shll
mov
jg
cwtl
fwait
gs
jp
lret
sbb
xor
int
shll
jnp
xchg
push
popl
dec
or
xchg
mov
mov
mov
das
mov
ret
add
inc
or
icebp
cmp
insl
push
popa
imul
xchg
mov
dec
sub
jno
adc
pop
and
push
sahf
pop
cs
movsb
sub
hlt
pop
adc
mov
mov
subb
int
mov
mov
dec
push
pop
push
orl
aaa
xor
cmpsb
lret
mov
mov
loop
adc
xchg
and
adc
cmp
ret
loop
ret
dec
loopne
add
jp
pop
sbb
insl
fwait
shll
jle
cli
stos
or
movsl
xor
and
pusha
icebp
xchg
sub
dec
jl
sahf
les
jnp
dec
test
xor
ret
jl
stos
insl
pop
jne
adc
int
scas
ss
cmp
adc
ljmp
cwtl
dec
into
xchg
mov
scas
sahf
push
cmp
imul
in
sub
test
dec
mov
imul
inc
syscall
or
mulb
cmp
lret
lcall
aas
lret
iret
jge
mov
popa
in
xchg
mov
negl
jmp
shrl
mov
xlat
xor
lock
das
int
data16
push
xchg
es
mov
sbb
mov
add
sbb
jg
pop
adc
or
sub
scas
flds
mov
ljmp
xor
mov
mov
fs
repz
adc
push
and
push
loope
fstpt
into
and
lds
cltd
jns
es
pusha
dec
in
loopne
test
shll
and
mov
pop
pop
xchg
inc
outsl
xchg
jb
sbb
pop
mov
mov
or
lcall
mov
bound
pop
sti
pop
fs
and
pushf
sbbl
fadd
outsb
cs
frstpm(287
fldl
imul
scas
popf
xchg
cmp
jo
adc
sti
ljmp
cli
and
cmp
mov
mov
loopne
mov
add
lds
xlat
push
out
or
jnp
mov
lea
jbe
lcall
xchg
scas
roll
pop
daa
jae
rorl
popl
into
jge
push
add
pop
fdivs
inc
push
sbb
enter
dec
jmp
scas
mov
jge
jb
movsl
xor
pop
mov
in
sbb
mov
mov
pop
aad
lock
push
dec
rcrl
pusha
xchg
mov
cmp
add
cld
sbb
or
shll
push
lahf
insb
or
cmp
imul
sbbb
mov
addl
gs
add
std
xchg
inc
push
mov
je
out
cli
loopne
mov
movsb
aas
imul
in
xchg
arpl
add
adc
push
mov
xchg
addr16
push
movsl
push
leave
stos
and
pop
or
jno
xchg
in
loope
xor
loope
dec
aam
outsb
dec
lds
jp
add
dec
fistps
bound
subb
inc
jno
push
out
outsb
sub
in
in
das
fwait
dec
add
cltd
mov
xor
xor
movsb
gs
mov
gs
mov
test
movsb
pop
cmp
dec
negb
jp
scas
insb
addb
jge
pop
push
sub
loop
cld
lcall
pop
jnp
mov
cmp
ss
aam
add
testl
hlt
xchg
in
dec
jb
mov
xchg
pop
pop
sarb
push
mov
loop
fsubp
sbb
sub
xchg
adc
lahf
rolb
mov
and
sbb
add
xor
xchg
out
xlat
stos
mov
popa
std
cli
mulb
push
das
pop
xor
and
cmpsl
ret
sbbl
das
loope
js
sub
xor
jge
loopne
mov
jns
test
ficoml
test
ljmp
mov
push
pop
pusha
mov
cs
stc
and
insb
pushf
mov
jp
or
jne
inc
outsb
add
cmpsb
pop
xchg
loope
mov
mov
xchg
sarl
ja
iret
mov
cmp
xchg
lods
mov
dec
fs
and
sub
sub
jnp
mov
test
orb
mov
call
push
jp
ds
dec
ljmp
pop
rclb
sub
jge
inc
loope
aad
decb
or
js
jo
pop
inc
in
ss
sbb
cltd
rorb
gs
call
jecxz
cli
outsb
push
loope
dec
aad
mov
inc
hlt
inc
popf
call
mov
mov
jecxz
xlat
sub
add
pop
push
lret
jns
mov
mov
jmp
clc
movsb
fidivrs
cmp
xlat
sbb
nop
icebp
clc
push
sub
pop
add
je
jg
sbb
adc
and
xlat
js
and
add
and
adc
rcrl
mov
popa
jp
bound
rcrb
pop
or
pop
lahf
lds
pusha
int
mov
fstpl
test
and
cltd
dec
adc
in
test
jno
cmp
cmpl
pop
or
mov
push
cmc
jg
mov
out
add
mov
lret
adc
mov
arpl
xchg
mov
cld
jle
int3
mov
insl
push
xchg
xchg
xor
test
lret
in
cs
mov
enter
aad
pushf
repz
push
repnz
and
add
loop
in
adc
add
jge
pop
sub
mov
cmp
inc
js
insb
in
scas
loope
mov
clc
test
mov
iret
and
sub
sbb
orl
scas
fsub
movsl
lcall
dec
mov
insl
stos
rcrl
dec
add
js
leave
daa
sahf
test
data16
mov
fisttpl
jg
iret
dec
jecxz
push
jp
scas
in
mov
fwait
hlt
xor
cmp
pop
lea
outsl
lock
daa
adc
jnp
jle
inc
popa
adc
adc
push
inc
out
test
test
in
pop
push
outsl
jg
pop
xchg
pop
cli
pop
fcomps
push
shlb
jmp
aaa
adcb
aaa
je
popf
inc
xchg
adc
shrl
insb
mov
xor
or
pop
sub
mov
mov
lock
xchg
movsb
sub
mov
pushf
mov
cmp
cmp
lods
mov
sbb
fdivp
cwtl
add
pop
mov
cmp
mov
fcmove
lfs
popf
aad
sbb
aad
sub
ret
push
icebp
and
lods
sub
adc
insl
imul
and
test
inc
ror
push
pop
xchg
cltd
adc
lret
mov
push
and
sbb
cmp
pop
mov
lcall
adc
inc
and
dec
jns
jae
mov
mov
js
mov
ret
leave
ljmp
sub
adc
imul
pop
pop
enter
pop
sahf
xchg
push
fldcw
xchg
mov
cmp
lock
movsl
lret
mov
sub
lods
mov
imul
pop
call
lahf
popf
pop
lods
int
xchg
jecxz
jo
push
movsb
scas
xchg
jb
lret
pop
pusha
mov
int
and
mov
add
jge
jns
inc
out
push
sahf
or
jbe
jecxz
push
jno
jp
cli
bextr
jae
pop
ljmp
pop
inc
sub
push
sbb
or
fs
mov
or
xlat
jp
cld
in
sbb
inc
dec
add
stc
and
fucom
jnp
add
shll
push
cld
aad
daa
cmp
adc
ljmp
adc
fwait
add
jns
cmp
mov
push
sbb
movb
ret
into
xchg
rorb
in
cmp
leave
mov
adc
sbb
sahf
adc
add
leave
sbb
xchg
mov
mov
addr16
dec
movsl
push
jns
sbb
das
ror
add
nop
scas
xchg
popa
mull
notl
jge
pop
pop
pop
lock
mov
jns
or
loope
xor
adc
cmp
sbb
mov
or
repnz
pop
inc
outsl
arpl
hlt
fwait
daa
daa
push
in
inc
test
fadd
outsb
aas
xor
push
push
xor
rcrb
pop
lret
enter
in
jecxz
jno
jo
mov
in
dec
pop
dec
pop
std
cmpsl
mov
test
loop
shlb
ffree
jno
lds
mov
jmp
xchg
push
pushf
popa
xor
jbe
sbb
loope
les
sbb
pop
je
lahf
das
inc
fistps
push
fistpll
pop
push
mov
xchg
and
push
pop
ret
jb
inc
xor
cmp
pop
mov
mov
scas
andl
nop
cmp
mov
data16
in
leave
inc
add
sbb
int
pop
or
pop
lcall
mov
aam
ja
lods
loope
add
dec
in
shlb
aam
or
cld
cli
ret
fcomps
dec
jns
sbbl
pop
cmpsb
ja
out
lahf
add
and
lahf
push
mov
mov
mov
inc
pop
or
jge
insb
fst
hlt
fisubl
fs
xlat
jae
inc
ja
push
cmp
mov
sbb
mov
inc
idiv
pop
cmp
mov
pop
sti
outsb
cmc
or
add
out
mov
outsb
test
outsl
xchg
fnsave
xchg
out
jmp
add
je
dec
adc
inc
call
and
out
mov
rolb
sbb
jecxz
and
fs
fcompl
or
jle
stos
loop
imul
je
data16
mov
mov
adc
pop
out
addl
xor
mov
pop
jb
cltd
pop
push
sbb
js
sbb
cmc
push
add
cmpsl
add
mov
aaa
sbb
xor
push
pop
cmp
mov
popa
sub
mov
je
adc
sub
push
xchg
jns
mov
outsl
xor
mov
inc
loopne
fimull
push
dec
mov
clc
adc
push
fiadds
mov
outsb
jl
arpl
mov
ret
pop
inc
outsb
mov
rorb
fidivrl
xchg
lret
mov
in
lret
testb
dec
dec
push
andb
in
xor
addr16
cmp
adc
addl
lret
adc
adc
out
movsb
mov
dec
lds
mov
ret
hlt
push
push
cld
adc
push
imul
add
cmc
dec
mov
aad
pop
pop
sub
insb
jmp
rcll
jo
stc
clc
and
xor
xchg
loope
test
dec
sbb
jmp
ret
icebp
out
mov
inc
pop
push
sbb
push
adc
loope
dec
test
ljmp
aaa
xchg
push
sbb
clc
mov
cmpsb
push
sahf
fsts
loope
sub
xlat
inc
sbb
adc
add
adc
cli
push
inc
push
inc
fsubrl
movsl
mov
push
mov
dec
clc
lods
lcall
js
mov
xorl
inc
pop
repnz
cmp
scas
mov
les
pop
and
sar
into
mov
push
and
jl
lret
mov
cmpsl
inc
iret
mov
cmp
jmp
shlb
fmul
and
test
inc
les
shlb
insl
addr16
outsb
jmp
fidivrl
fisubs
stc
mov
lods
arpl
cmp
sub
push
test
mov
movl
xor
insl
pop
pop
dec
pusha
mov
adc
adc
cmp
lods
lcall
mov
stc
jecxz
xor
outsl
leave
xchg
notl
aas
movsl
add
je
and
std
xchg
jne
das
inc
test
add
inc
stos
clc
sbb
test
test
std
xchg
xor
dec
andb
int
adc
mov
or
lcall
xchg
dec
out
mov
cmpb
jb
insb
mov
dec
xchg
push
inc
sbb
mov
cld
add
jb
mov
dec
cmpsl
notb
dec
outsl
lock
inc
mov
add
adc
inc
xchg
mov
sub
sti
adc
aaa
fwait
imul
lock
push
cmp
push
sub
xchg
test
lea
sub
sbb
xchg
out
rcl
es
jmp
push
bound
jnp
xlat
mov
dec
clc
sahf
jne
adc
data16
pop
in
stos
aad
cltd
in
fbstp
xchg
jecxz
mov
imul
scas
gs
inc
insb
loope
mov
jb
cmp
xor
pusha
in
out
dec
popa
push
jmp
shll
icebp
test
bound
pop
call
inc
sahf
out
jne
mov
xlat
rclb
mov
push
jg
fs
push
lds
cmp
clc
rclb
cld
ja
xchg
and
push
data16
std
mov
ja
add
popf
loope
and
std
test
pop
hlt
in
std
mov
jnp
aam
in
std
imul
push
xchg
pop
adc
in
jnp
out
outsl
jl
mov
push
or
cwtl
fildl
xlat
fistpll
cmp
or
add
cmpsl
push
cmp
bound
sbb
xchg
movsb
pop
js
mov
push
push
mov
or
inc
pop
push
insl
les
fiadds
adc
lcall
pusha
aas
and
mov
idivl
out
push
mov
shll
scas
or
lds
jne
aad
adc
test
in
mov
fcoml
adc
pop
dec
dec
push
mov
jae
imul
hlt
dec
mov
sbb
pop
jnp
xor
hlt
loope
mov
test
push
or
insl
jl
loop
std
dec
leave
push
std
fcoml
dec
sub
mov
aam
push
outsb
or
or
outsb
cli
out
jmp
pusha
testb
pop
and
mov
cmove
push
cld
ss
addl
addr16
cli
fcmovu
add
pop
sbb
sarl
sarb
xor
push
ficomps
bound
sbbl
addr16
add
lods
shrl
push
aas
inc
xor
icebp
fcomps
call
insb
mov
stos
dec
push
jl
insb
mov
jnp
dec
aad
jne
mov
sub
push
repz
dec
stos
es
xor
arpl
mov
jbe
in
fdivr
dec
ret
xchg
ss
shlb
repz
xchg
fsubl
shlb
jg
in
js
out
jle
push
stos
xchg
out
jl
sarb
daa
dec
xchg
loop
popf
movsl
and
testb
gs
bound
ljmp
mov
movsb
shll
jb
or
sahf
insb
cmpb
cmpsb
mov
icebp
and
push
out
sbb
add
jae
adc
rcrl
push
add
std
dec
jb
or
xor
mov
cmp
rclb
test
pushf
push
clc
scas
sub
dec
add
ljmp
xor
or
lcall
add
roll
sub
mov
jne
push
lds
pop
int3
push
pop
lea
out
and
pop
push
leave
ss
sub
mov
int
and
pop
mov
lret
loop
ds
pop
add
loopne
xchg
leave
rorb
cmc
mov
push
ja
cli
sbb
adc
push
sbb
jle
xor
subl
mov
sbb
push
test
call
inc
into
call
imul
les
jnp
pop
sbb
lret
imul
xchg
cmp
pop
fistpl
shl
rcrl
mov
cltd
sahf
fdivr
xchg
mov
sbb
aam
test
gs
cmp
inc
jbe
push
hlt
cmp
int3
and
ret
jp
cmpsl
adc
ja
pop
jae
arpl
xchg
sbbb
mov
aas
fcoms
mov
loopne
push
adc
mov
or
das
add
js
dec
xchg
imul
mov
hlt
stc
pushf
xchg
sti
rcrl
push
test
test
aas
add
out
add
mov
and
sub
mov
mov
jecxz
imul
mov
mov
push
dec
stos
cld
mov
pusha
mov
fdivrl
jp
gs
jl
icebp
adc
out
cwtl
mov
idivl
icebp
mov
aas
inc
mov
movsl
push
adc
sbb
or
scas
lea
pop
lret
andl
xchg
and
sbb
popf
mov
lret
scas
xchg
repnz
jnp
cwtl
fst
push
movsl
sbb
pop
or
mull
jb
shrb
lahf
repnz
add
pop
ret
and
das
mov
sub
jb
outsb
jle
jnp
cmp
add
jmp
rcrl
sbb
cmpsb
arpl
cmpsl
ret
sbb
ret
pop
mov
loope
or
stc
iret
scas
mov
sub
jb
sub
inc
push
xchg
jb
mov
lcall
mov
fisttpll
mov
fildll
and
push
shrl
shl
dec
or
in
jo
cwtl
jo
pop
mov
mov
loopne
add
inc
mov
mov
xor
addr16
sahf
call
jmp
cmc
sub
cmc
jp
out
xchg
cltd
push
mov
sbbl
mov
jle
adc
dec
ljmp
test
sbb
sbb
mov
xor
sbb
lcall
add
push
dec
xor
sbb
cmc
cmp
push
mov
loope
mov
pusha
out
xchg
leave
inc
test
aam
fistl
repnz
stc
in
xor
out
ror
inc
mov
test
xchg
aam
dec
les
scas
test
test
cmp
roll
xchg
cmpsb
aaa
test
mov
fld
outsb
cld
sub
push
adc
jmp
push
push
lock
xchg
inc
gs
and
pushf
dec
aam
shlb
xchg
sub
movsl
les
int
dec
cmp
jge
addr16
test
adc
iret
lahf
mov
mov
fldln2
sahf
aam
xchg
mov
divb
call
out
movsl
rcl
les
clc
push
mov
je
insl
fistps
mov
loopne
test
ja
imul
cmp
mov
rcrl
test
dec
fwait
cmp
push
ret
cmp
sarb
xor
inc
push
mov
inc
xor
ljmp
sub
mov
jg
icebp
addr16
cmp
lret
sub
xor
jbe
repnz
dec
jl
insl
ret
inc
loop
and
or
xor
imul
xorl
lods
mov
jmp
cmp
mov
add
test
cmp
sbb
fdivrl
push
dec
or
xchg
adc
inc
xchg
call
fmull
inc
push
adc
push
mov
jns
ret
pop
cld
mov
test
insl
jge
push
fiadds
int3
daa
cwtl
loope
sti
mov
jnp
cli
cmp
mov
jo
in
push
xor
xor
pop
push
subb
gs
lock
xchg
xchg
fst
pop
pop
fstl
in
pop
xor
insl
std
into
inc
cmp
jmp
and
and
add
jle
mov
jnp
jno
pop
outsl
xchg
push
ss
ds
out
mov
aad
pop
lret
jnp
mov
pop
in
xchg
jno
xor
push
xchg
shrb
pop
sbb
rorb
cmp
jbe
fs
mov
push
shlb
stc
push
adc
andl
dec
inc
mov
cwtl
ffreep
push
sub
mov
rorl
jg
push
stos
or
ja
mov
sar
clc
jae
neg
lea
leave
stos
inc
cmp
mov
test
jmp
push
ja
shlb
test
sbb
popa
enter
mov
sub
mov
std
lahf
sub
jne
mov
jle
orl
orb
mov
dec
pop
dec
mov
fnstcw
cmp
hlt
jno
inc
fnstcw
je
sbb
jg
mov
cld
sub
or
ss
or
ja
pushf
inc
fwait
cmpl
jmp
mov
sub
ja
stc
in
rcrl
mov
mov
jns
js
fwait
push
rcll
pop
sbbb
loope
jae
jle
mov
jl
fwait
xor
mov
mov
inc
add
int3
mov
mov
adc
pop
push
stc
adc
ds
lock
mov
ret
jne
add
adc
push
test
rcr
int3
sbbl
add
mov
adc
repnz
xor
shl
scas
in
sahf
mov
push
cld
daa
rclb
jg
jne
daa
push
out
or
pop
dec
inc
js
daa
push
mov
into
dec
arpl
cmp
in
sti
out
inc
fiadds
cmp
xchg
daa
jle
scas
ror
test
lods
cmp
mov
clc
adc
xchg
mov
push
ficoml
mov
lock
lea
dec
adc
inc
pop
mov
mov
in
or
mov
je
ss
add
aaa
scas
mov
test
addr16
sub
ds
and
or
fcompl
cmpsb
xchg
cmp
repnz
xor
push
adc
hlt
xor
adc
popf
mov
pop
add
pushf
adc
or
dec
in
xchg
cmpsl
imul
shll
mov
push
adc
imul
jae
jmp
icebp
pop
sarl
add
test
cwtl
je
fisubl
mov
int
push
or
insb
mov
jmp
jl
repz
notl
nop
cmp
and
scas
dec
and
adc
jg
or
mov
mov
sub
push
dec
iret
xor
sbb
mov
and
push
mov
ret
jo
dec
or
push
orb
femms
and
inc
js
aad
mov
cwtl
movsl
dec
pop
lret
cmp
mov
xor
fidivl
mov
push
popf
out
jg
loop
dec
into
addl
bound
or
adc
mov
or
adc
add
dec
dec
inc
and
imul
push
rorb
cli
pop
or
in
movb
and
stos
push
inc
pusha
inc
add
mov
mov
adc
jge
sbb
jns
aas
sub
inc
xchg
jbe
int3
ror
sahf
mov
mov
insb
leave
and
dec
int
nop
mov
les
xchg
out
pop
fcomip
xchg
fsubl
cmpsl
fistps
adc
xlat
pop
inc
lds
into
shrb
jno
xchg
sarb
fdivrl
es
cs
lods
jecxz
rcr
icebp
les
inc
out
cli
adc
add
cmp
ret
stos
lret
call
push
sub
mov
out
call
add
mov
ret
mov
sbb
scas
rcrl
push
fs
inc
sub
sub
fimuls
mov
mov
ret
pop
fstpl
imul
out
gs
sbb
jmp
sbb
imul
lret
xchg
movsl
fsts
inc
adc
xchg
cli
ficomps
mov
sub
sub
push
dec
mov
shll
loope
jnp
dec
and
xor
xor
scas
hlt
lret
out
sbb
fisubrl
jb
enter
iret
test
push
test
ja
clc
lret
daa
mov
push
popa
or
sub
cmp
call
sbb
in
cmp
fdivrs
pushf
xor
lods
adc
fcoms
sub
sbb
pop
and
xor
dec
push
jle
pop
cmpl
imulb
fbld
pop
popf
jbe
in
dec
push
flds
hlt
and
pop
cmp
shll
mov
sti
or
xor
inc
xchg
pop
arpl
fcmovbe
es
in
jg
sbb
or
pop
call
aaa
ds
sub
mov
pop
lcall
cmp
cmpsl
fcoml
into
sbb
push
mov
jmp
and
out
movsb
push
test
jle
loop
cmc
mov
push
xor
mov
adc
imul
and
add
xor
or
inc
xchg
imul
mov
movsl
ss
int3
push
sti
jge
mov
stos
mov
mov
mov
xor
cmpsb
fimuls
mov
adc
lahf
loopne
push
in
mov
cmc
outsl
sbb
js
pushf
inc
sub
imul
sub
aam
inc
jle
imul
call
incb
sbb
push
ds
in
stc
loop
adc
pop
stos
pop
jns
popa
fs
and
jb
ljmp
ud2
and
pushf
ret
hlt
lahf
and
mov
or
pop
xor
sbb
dec
in
pushf
xor
mov
nop
outsl
imul
pushf
jl
or
mov
test
mov
nop
sahf
inc
xchg
ss
cmp
call
or
sub
and
mov
popa
lock
test
inc
jmp
repnz
lret
test
pop
push
dec
gs
adc
pop
fadds
loope
dec
mov
cli
loope
sarb
dec
wbinvd
daa
push
and
clc
mov
outsb
fsubrs
ss
adc
mov
sbb
cmc
cmp
cmc
pushf
push
repnz
and
dec
xchg
sub
jbe
fimull
fsts
jg
decl
data16
pop
dec
or
add
nop
fidivs
dec
js
cltd
ljmp
cmp
popf
fucompp
jbe
and
and
movsb
lods
call
pop
scas
sbb
addl
push
lcall
push
movsl
and
imul
out
test
xor
mov
fnstenv
jo
push
adc
in
dec
push
out
std
jge
or
inc
jmp
movsb
sbb
sbb
gs
in
lcall
subl
cmp
pop
xchg
sub
mov
aas
dec
cmp
pxor
insb
fbstp
dec
sahf
outsb
sub
das
rcrb
lcall
or
dec
outsb
jns
pop
jbe
lahf
pop
popf
push
enter
sbb
lock
xchg
dec
lock
sbb
mov
fildl
xchg
jmp
shl
cmpsl
jecxz
fs
push
inc
aad
scas
aad
push
decb
lret
cmp
mov
mov
pop
sbb
push
xchg
xchg
push
xchg
pop
mov
xchg
adc
xor
cmp
cwtl
inc
dec
outsl
jne
ss
push
cmp
mov
pop
lahf
sbb
mov
inc
xchg
inc
sbb
jecxz
inc
cmpsb
xorb
sbbb
int3
inc
shll
xor
mov
push
sub
loop
pop
cli
xlat
mov
sbb
je
mov
inc
loop
pop
add
xor
dec
filds
shlb
cmp
addb
popl
cmp
adc
lcall
into
xchg
and
jecxz
mov
xlat
out
adc
inc
leave
dec
push
lods
test
xor
xchg
test
sti
adc
inc
and
pop
out
cmp
ret
cmp
dec
fcmovnb
sub
sbb
or
jl
and
mov
pmullw
call
lret
movsl
insb
dec
les
aaa
data16
orl
jg
jp
sub
test
int
mov
sbb
clc
pusha
lods
mov
lcall
mov
rcll
loop
pop
and
add
lods
pushf
xchg
in
negl
push
push
daa
movsl
mov
cld
jne
inc
loopne
into
orb
aad
in
divb
cwtl
iret
repz
clc
daa
js
mov
cli
ret
je
or
enter
xchg
jns
pop
inc
pop
in
leave
int3
fidivl
fsubl
pusha
inc
loopne
push
add
jno
sub
dec
shll
aam
cmp
mov
push
stc
loopne
es
jmp
sbb
out
repnz
mov
movsl
scas
mov
shrb
imul
sbbb
sbb
xchg
movsb
sahf
sbbb
into
aaa
int
jbe
mov
cs
ja
ds
sbb
jno
mov
into
sahf
push
adc
push
adc
jle
nop
shll
mov
mov
cmp
xchg
popf
mov
imul
jge
clc
mov
pop
dec
jno
xor
mov
adcl
adc
adc
rcl
dec
jns
inc
loope
pushf
aas
mov
pop
fsubl
cmp
pop
mov
jb
mov
repz
mov
jmp
or
xor
shlb
dec
jl
daa
xorb
movsb
mov
loopne
xchg
dec
cwtl
ret
int3
or
mov
fists
js
sti
in
stos
bnd
mov
cwtl
and
and
in
jnp
mov
repz
into
push
ret
shrb
adc
inc
xlat
dec
xchg
hlt
xchg
lods
clc
mov
lret
push
fidivs
addl
pop
push
fs
push
outsl
gs
mov
jg
and
aas
inc
sub
push
push
loope
lea
push
mov
jmp
mov
pusha
pushf
and
out
xor
dec
shrb
add
xor
cwtl
repz
xchg
jbe
out
add
cld
adc
imul
xchg
pop
mov
sub
pop
mov
cld
fyl2xp1
pop
dec
mov
lcall
jge
scas
or
cltd
fdivp
shrl
inc
movsl
mov
lret
fistpll
pushf
into
push
rorl
cmp
xchg
push
fistpl
pop
sahf
movl
pusha
mov
cmpsl
adc
daa
sbb
dec
mov
push
adc
fnstenv
pop
mov
dec
and
mov
and
push
add
imul
push
mov
sbb
ret
or
cmp
xchg
pop
mov
addr16
pop
mov
xor
pop
insl
or
pop
sub
adc
and
rorb
push
push
and
loop
daa
test
or
inc
ja
sub
jns
jb
cmp
test
dec
cmp
and
adc
sbb
sbb
jecxz
adc
xor
add
lcall
out
push
xor
dec
cmp
movb
test
inc
ficompl
aas
inc
cmp
and
xchg
xchg
addr16
mov
call
add
fstpl
in
and
int
or
add
mov
mov
daa
sbbb
or
shrb
xchg
push
pushf
js
inc
cmp
xor
adc
mov
cmp
mov
aaa
enter
push
push
mov
push
xchg
inc
sub
xorb
sbb
fstpt
daa
and
or
jnp
scas
fldt
add
add
push
sbb
mov
aad
push
sbb
fidivrs
shl
inc
or
lret
insl
out
and
add
cmp
push
in
out
cmp
rorl
jg,pt
cwtl
fmul
jno
decl
imul
inc
push
aas
sarl
jb
xor
shl
arpl
mov
jne
inc
fmulp
cmp
ja
insb
loopne
and
sbb
sbb
push
or
inc
push
loope
push
add
imul
jle
faddl
pop
data16
int3
mov
cmc
inc
jno
or
ljmp
mov
loopne
or
shll
out
inc
mov
adc
mov
push
jns
push
sbb
lret
push
in
xor
pop
nop
pop
dec
lahf
bound
in
pop
cmp
or
cltd
imulb
cmpsb
ja
jb
and
sbb
mov
mov
inc
mov
out
add
sbb
jae
mov
or
ljmp
adc
jb
pop
mov
xchg
movsl
loop
ds
lret
jbe
jo
cmp
imul
sub
test
and
pop
imul
loop
dec
and
cmpsl
in
popf
xor
add
int
ja
mov
lock
sbb
xchg
jg
inc
pop
into
add
daa
sti
xchg
cltd
adc
dec
mov
fsubrs
cmpsl
xchg
lahf
test
cmc
sbbb
add
or
jb
push
mov
int3
stc
stc
jle
xchg
insl
and
out
xor
jp
xchg
push
mov
mulb
hlt
xchg
lret
jp
mov
test
pop
scas
pop
mov
xor
cmpsl
into
pop
sbb
mov
sub
push
es
sbb
mov
int
and
leave
adc
fidivl
arpl
xor
cwtl
outsb
adc
jbe
push
test
inc
sahf
pop
mov
xchg
sub
cmc
test
out
and
leave
and
call
into
cmp
xchg
xchg
mov
out
dec
lahf
add
jl
movsl
mov
stc
stos
mov
push
test
jae
sbb
leave
pop
add
out
int
clc
movsb
fs
push
inc
xchg
push
aaa
sub
cs
das
mov
pop
mov
outsl
xchg
outsb
out
lret
fisttps
inc
loope
imul
xchg
sbb
xor
lds
dec
mov
pop
imul
cmp
dec
icebp
decb
push
jb
jl
xchg
jne
mov
lret
movsb
movsb
ficoml
repz
cli
sbb
mov
mov
in
insb
leave
jg
out
mov
repnz
icebp
push
pop
mov
movb
repz
push
mov
push
lea
repnz
adc
repz
loope
sbb
or
fwait
sti
scas
sub
xor
xor
push
popa
mov
cltd
adc
pop
sbbb
ljmp
daa
out
aas
rcrb
push
cmovle
or
loopne
xorl
mov
sbb
xchg
xor
ljmp
sub
add
mov
enter
push
dec
std
popa
pop
push
ret
push
xor
out
dec
gs
pop
mov
cmp
test
sub
jle
mov
push
xlat
lods
sbb
aad
clc
daa
sbb
ds
clc
jg
int3
add
movsb
dec
ds
add
in
xchg
add
enter
ds
sbb
xor
mov
add
sub
std
pop
addr16
ret
loop
int3
repnz
mov
in
mov
mov
imul
gs
daa
loope
xor
xchg
adc
pop
mov
push
insb
pop
and
sbb
rcl
cli
xchg
lds
xor
inc
mov
mov
repz
std
movsb
out
sub
int
js
xchg
xchg
cmpsl
aas
xchg
pop
and
clc
or
and
enter
outsl
aas
mov
into
mov
dec
fnsave
cwtl
xchg
loop
cmp
push
pop
lcall
or
addl
dec
cltd
jae
pop
sub
cmp
cmp
pop
mov
jnp
mov
not
aas
int
std
mov
test
xchg
pusha
inc
and
push
lret
and
xchg
rcrl
mov
xchg
fstl
xlat
mov
add
and
pop
mov
mov
lea
mov
je
mov
pop
and
push
add
or
adc
cwtl
lahf
cmp
ds
mov
pop
loop
jno
dec
cmpb
cmp
out
sbb
jl
and
out
cmp
into
popa
scas
pop
test
xor
cli
scas
mov
and
push
inc
or
and
imul
mov
xchg
add
pop
add
in
in
fmul
int
mov
pushf
gs
cs
hlt
or
mov
fldl2e
ljmp
sarb
adc
xchg
sbb
pop
jge
test
ror
mov
mov
lret
es
adc
mov
add
je
jecxz
mov
imul
or
popa
in
sbb
mov
xchg
xor
adc
and
test
jg
pushf
mov
stos
fs
mov
bound
scas
sbb
pop
mov
lcall
xor
adc
dec
xor
aad
mov
add
imul
push
out
jge
or
jge
mov
mov
aas
dec
cltd
lret
inc
xor
mov
cmpsb
rcll
loopne
mull
push
pop
or
sub
push
xor
sar
jp
add
add
mov
jg
cmc
push
cmp
inc
pushf
scas
aaa
xor
mov
mov
sub
icebp
mov
mov
and
js
jecxz
in
popf
iret
add
jo
out
cmovp
mov
ficomps
inc
mov
add
xor
std
cld
jnp
sub
stos
mov
jecxz
mov
and
inc
cmp
mov
inc
imul
cwtl
std
shrl
fwait
adc
push
cmp
jmp
cwtl
or
adc
stc
jmp
loop
xchg
loope
inc
inc
xchg
inc
jo
dec
fsubl
out
inc
mov
sub
inc
pusha
daa
sbb
nop
xchg
dec
mov
cltd
xchg
jge
cmp
fmuls
pop
in
inc
sub
jp
sti
scas
fidivl
adc
fbld
mov
adc
in
outsb
cld
popf
inc
inc
push
mov
es
lea
and
inc
repz
rcll
cmc
lock
jle
mov
jmp
nop
sub
xorl
ja
mov
adc
jns
cli
dec
mov
sub
sahf
movsl
andl
dec
shlb
adc
pop
popf
enter
stc
sarb
sbb
hlt
js
outsb
add
leave
xlat
and
push
js
mov
popf
call
add
mov
movl
and
gs
push
jl
fptan
mov
popa
in
lcall
leave
mov
fxam
mov
add
sbb
xchg
jae
pop
mov
xchg
rcr
aam
out
int
shr
jb
cld
sbb
fisttpll
inc
movsl
dec
mov
push
sbb
xlat
add
xchg
clc
loop
inc
push
cs
enter
fisttpl
mov
out
insl
ds
outsl
addb
negl
push
std
es
push
lock
and
jb
mov
push
sub
mov
lret
fs
jns
jne
fcmovnb
sub
push
sbb
push
sub
loop
mov
gs
sub
add
cmc
fldl
loopne
adc
inc
xchg
mov
fcompl
mov
xor
and
lret
sub
orb
clc
push
out
gs
ja
and
fidivrl
sti
and
dec
mov
mov
rclb
in
mov
lea
adc
jle
xchg
nop
jb
roll
or
das
adc
lods
xchg
icebp
in
push
cmpsl
xchg
xchg
cmpsb
jns
aam
cmc
jbe
ret
aam
dec
xor
movsl
loope
loop
sar
sub
cwtl
pop
fbld
int
push
test
cwtl
mov
dec
mov
cmp
cmp
inc
shl
andb
xchg
test
sub
push
pop
pushf
popf
or
stc
clc
sti
sub
mov
rorb
cmp
out
sbb
add
mov
popa
mov
mov
std
repnz
aam
repz
push
and
mov
jns
js
jne
pop
xor
mov
loope
aas
ret
mov
cmp
sub
dec
xlat
cmp
jb
cmp
push
mov
mov
pop
ljmp
dec
dec
int3
lret
pop
push
cmpsl
dec
mov
mov
rcll
fnstcw
sbb
push
leave
stos
cli
nop
push
dec
dec
mov
mov
xchg
or
sbbl
enter
sbb
scas
xchg
sarl
mov
sbb
popa
mov
jae
add
in
das
cltd
popf
push
stos
jl
sub
pop
xchg
lret
nop
outsb
das
rolb
dec
mov
pop
je
fnstcw
test
imul
adc
xlat
aam
xor
mov
scas
add
mov
fstl
sbb
jb
lock
adc
fisttpll
xchg
push
add
lcall
jo
cltd
dec
cld
xchg
ljmp
js
and
outsb
fcom
movsl
xor
xchg
loop
xchg
outsl
stos
std
xchg
es
repz
in
sub
inc
xor
sbb
adc
pop
or
push
mov
add
dec
loope
xchg
dec
pusha
flds
push
outsb
fwait
inc
or
movsb
fisubrl
repnz
sbb
and
icebp
movsl
stos
outsl
pop
sub
rorl
push
mov
xchg
add
mov
fcomip
roll
icebp
add
dec
mov
add
xchg
mov
nopl
adc
mov
divb
sbb
addb
xor
xchg
mov
arpl
sbb
push
in
mov
sub
out
and
add
xor
adc
subl
mov
adc
add
bound
push
xchg
xor
mov
das
pop
and
mov
and
xlat
int
dec
jmp
push
mov
rorb
mov
jno
cmp
or
pop
sub
fnstenv
lret
mov
je
dec
inc
out
xchg
cmp
pop
mov
ljmp
xor
mov
jne
xchg
pushf
std
inc
popa
aam
pop
jb
cmp
enter
lock
movsb
dec
repnz
pop
mov
push
xchg
test
and
cmp
and
or
cld
dec
movsl
leave
push
shl
ret
jns
imul
mov
in
fbld
std
add
push
cli
bound
or
in
sti
jle
dec
cmp
pushf
jnp,pt
leave
dec
lods
loope
or
lcall
enter
aad
mov
sbb
out
push
int3
add
shrb
out
lret
add
pop
dec
das
outsb
jne
in
pop
add
and
pop
loopne
icebp
movsl
int
xchg
mov
add
js
pop
adc
lret
ret
and
idivl
lods
loopne
xchg
jl
sti
scas
dec
addr16
aas
gs
mov
roll
mov
add
push
mov
sahf
jno
cwtl
pop
push
mov
sub
cmp
and
mov
sbb
xor
xchg
lcall
adc
xchg
mov
ss
push
insl
sub
inc
aam
pop
mov
ror
cmp
inc
adc
out
sbb
xlat
jl
inc
sub
jmp
lcall
push
adc
aam
mov
aad
fstpt
pop
pop
inc
push
ret
push
xor
pop
add
dec
and
pop
jmp
xrelease
jbe
mov
push
add
cli
insl
cmp
adc
fiadds
xchg
or
mov
gs
adc
jno
add
arpl
pop
or
sub
xor
mov
sub
outsl
pusha
jae
pop
add
loop
add
xchg
mov
or
les
les
add
fcmovb
lock
jmp
test
sbb
pop
icebp
call
test
nopl
pop
jg
dec
xor
or
mov
nop
or
lahf
xor
pusha
pop
xor
mov
xchg
jg
push
inc
cmp
sbb
fstp
sub
lret
daa
mov
sub
ss
addr16
mov
sbb
fadds
inc
mov
insb
jb
xchg
xchg
in
and
pop
sub
xor
mov
adc
xor
xor
xor
push
push
sahf
dec
in
dec
jne
mov
sub
lret
test
adc
or
mov
push
int
stos
add
xchg
scas
in
adc
mov
push
push
hlt
test
push
or
xchg
inc
inc
or
bound
stos
ljmp
testb
jno
or
push
pop
mov
imul
push
jp
lods
insl
loope
push
mov
popa
mov
ss
repz
mov
loop
nop
sub
fisubs
cmpsb
idiv
popf
call
jns
hlt
fcoml
cmpsl
adc
push
jge
push
popl
push
xorl
add
mov
jns
jl
add
out
leave
pop
inc
in
jge
shll
dec
or
sbb
cmp
ss
nop
jno
sbb
mov
and
test
mov
jno
mov
fs
and
mov
enter
imul
fs
dec
testb
xchg
fldl
into
inc
decl
out
aaa
dec
cltd
fstpl
sbb
mov
imul
cmp
mov
xchg
mov
jl
pop
adc
daa
or
mov
pop
pop
jmp
outsl
into
outsl
mov
insl
pop
push
outsb
aas
clc
or
cmpsb
dec
stos
out
in
pop
mov
push
fcmovne
mov
icebp
cltd
std
add
jbe
pop
push
jge
jg
push
cmp
aad
inc
mov
lock
repz
cwtl
sbb
mov
mov
jns
xor
jge
cmp
sbbl
and
xor
mov
sbb
dec
cld
movsb
inc
test
xlat
je
outsb
cmp
or
xchg
frstor
cltd
in
inc
out
inc
test
xorb
add
or
xlat
nop
shr
add
fs
cmpsl
jns
lea
int
jle
or
mov
mov
stos
add
or
loope
sarl
inc
dec
cwtl
int
mov
sub
and
sbb
push
jmp
mov
or
mov
push
in
dec
aad
cmpsb
pop
movsl
cld
ss
add
test
aaa
cmp
pop
jp
mov
xor
insb
nop
xor
repz
xchg
sub
pop
jp
movsl
cmp
xor
test
bound
sbb
adc
sbbb
mov
pop
dec
pop
out
insb
aad
dec
cs
pop
sub
aam
mov
xchg
in
int
test
xorl
insb
fmull
sub
int3
gs
leave
push
es
sbb
mov
add
js
push
aam
add
mov
mov
scas
mov
pop
outsb
mov
push
cmc
xchg
jl
xchg
addb
ret
rcl
sub
pop
jp
daa
pop
aam
test
cs
pop
aaa
insb
lock
mov
mov
stc
stos
mov
dec
jle
inc
push
mov
dec
mov
jbe
jp
push
out
cmp
scas
adc
jmp
add
cmp
sarb
inc
or
dec
sub
jge
pop
fnstenv
fstps
push
or
jp
arpl
cli
add
sarb
dec
sub
mov
fcoml
jns
test
pop
xor
mov
cltd
jo
shll
fwait
sbb
lcall
or
mov
inc
and
pop
and
divb
pushf
js
sub
out
and
mov
push
scas
jae
mov
aas
dec
mov
fcomp
lock
xchg
addr16
loopne
aaa
cmpl
stos
orl
mov
out
mov
push
dec
dec
imul
cmp
paddusb
xor
insb
and
pop
decb
jecxz
jbe
je
cmpb
es
addb
pop
push
xchg
imul
imul
push
adc
sarb
xchg
cmpsb
cmp
push
sbb
loopne
push
mov
cmpsl
popf
lock
dec
push
and
js
outsb
dec
clc
cld
and
xor
dec
aaa
xchg
inc
add
pop
cmc
xchg
mov
pop
call
test
mov
mov
mov
or
mov
sbb
andl
push
inc
cmp
fldcw
outsl
outsb
and
jmp
js
outsb
push
xchg
or
bound
dec
stos
xor
lret
repz
out
xchg
pop
xor
cmp
cwtl
cmpsl
lods
cltd
jae
pop
inc
ss
add
inc
fistpll
add
cmp
xchg
push
mov
movb
in
mov
fldt
sbb
adc
jmp
jmp
jno
pop
mov
inc
jp
push
pusha
push
cmc
insl
mov
imul
add
js
ret
pop
sub
jb
daa
add
je
fbld
psubsw
and
out
out
rcrb
inc
int3
dec
cmp
jg
scas
sbb
jo
sub
mov
hlt
inc
jp
pop
add
imul
push
enter
sti
lods
adc
mov
int3
or
lods
in
loopne
loope
push
sub
shll
dec
ds
bound
jecxz
out
mov
mov
adc
mov
insb
popa
mov
jg
mov
jmp
jecxz
ss
outsl
adc
cltd
sbb
int3
mov
shrl
stc
mov
mov
pop
pop
pop
xchg
jb
mov
add
enter
loopne
mov
jb
ljmp
sbb
xchg
sti
sub
mov
in
out
nop
fmuls
mov
mov
inc
jno
dec
adc
out
and
aaa
std
cmc
fldcw
cli
std
xor
inc
cs
inc
cltd
inc
loopne
mov
mov
cld
sub
scas
pop
cmpsl
les
or
pop
repnz
mov
repz
lcall
and
adc
add
jmp
xchg
cli
cmpsl
cmp
hlt
insl
xor
in
clc
jns
into
mov
xor
int
lea
jecxz
cli
mov
mov
mov
cld
imul
mov
cwtl
dec
fisubs
push
mov
and
pop
jb
jmp
fsubrs
scas
out
cs
pop
and
int3
and
call
lods
sti
pop
sbb
icebp
mov
data16
scas
sub
add
sub
imull
lods
ds
add
jg
std
pop
dec
idivb
pop
push
push
sub
icebp
add
sub
inc
jo
sbb
push
add
ficoml
sub
mov
xchg
dec
xchg
jne
xchg
inc
xor
dec
adc
sbb
negl
fildll
sub
lret
dec
test
cmpsl
and
cwtl
adc
sub
out
mov
mov
in
inc
xchg
imul
test
insl
pushf
faddp
ret
sbb
add
repnz
pushf
cmpsb
es
mov
sub
enter
sub
pop
xor
lret
jno
sub
in
jne
xlat
lcall
scas
movsb
fmul
data16
xor
dec
ja
lret
xchg
mov
and
xor
push
mov
insl
adc
mov
jg
mov
repnz
mov
fwait
aad
jo
repz
sahf
inc
push
and
xor
cli
sub
xor
adc
jae
int3
rep
push
in
lret
adcl
test
sub
int
aad
adc
or
xchg
inc
jmp
sbb
and
enter
cmpsb
aad
les
jns
fdivl
push
rorb
loop
dec
insb
add
jecxz
and
shrb
loope
mov
xor
cli
mov
ret
jbe
mov
cmp
xchg
inc
sbbl
mov
mov
pcmpgtw
ret
daa
leave
rcll
shlb
orb
loop
mov
mov
fcoml
inc
loopne
push
rcll
jae
icebp
scas
mov
lds
int
sbb
shrb
jp
call
fwait
pop
mov
ja
addr16
dec
scas
add
es
sbb
mov
dec
out
push
mov
je
scas
lds
mov
xor
sub
out
fwait
cmp
jmp
jmp
in
or
out
ds
or
jbe,pn
inc
lret
lret
mov
or
test
test
inc
subl
lahf
inc
and
cmp
roll
imul
cmpsl
sbb
es
lea
int
out
pop
pop
mov
mov
sbb
lcall
clc
or
inc
bound
mov
stos
sbb
popf
out
repnz
mov
pop
or
aaa
das
loope
jnp
or
pop
fucomip
imul
push
sub
imul
popa
insb
sub
adc
cmpsb
xchg
jmp
ss
mov
pop
mov
aaa
lds
add
cmp
cltd
jns
rcrl
xchg
cmp
mov
inc
xor
mov
mull
sub
rclb
fmul
mov
int
je
cmpsb
xchg
es
in
rclb
push
cmc
xor
sub
rep
negl
imul
in
or
pop
movsl
jae
sbb
or
and
mov
mov
ds
call
ficompl
xor
or
dec
imulb
push
dec
test
lret
mov
mov
out
lods
enter
lock
or
mov
enter
adc
pop
andl
loopne
ret
fldl
add
addr16
and
and
jb
adc
ljmp
out
fimuls
shlb
sub
shll
pop
sbb
xchg
fldt
mov
ja
inc
pushf
sti
cmp
in
mov
loope
jae
and
sbb
pop
sub
xor
lods
xchg
mov
adc
and
xchg
adc
fcmovu
cmp
pushf
fists
mov
jnp
inc
dec
sar
scas
pop
mov
jp
fists
idivl
enter
fildl
dec
xor
imulb
mov
push
sub
mov
mov
dec
out
jb
adc
leave
shlb
add
imul
iret
cmp
inc
xchg
sti
orb
stc
js
xchg
pop
jle
jae
lock
out
mov
fistpll
push
fsubrs
inc
inc
data16
roll
fisubrl
xchg
xchg
sbb
xchg
xchg
sbb
dec
jne
push
pop
scas
cmp
mov
add
and
hlt
jl
mov
inc
dec
push
inc
lea
pop
inc
jmp
in
dec
daa
pushf
enter
cli
jl
fsubl
imulb
lahf
adc
pushf
pop
pushf
lods
lret
imul
or
out
stc
into
outsb
and
les
mov
xchg
or
in
lret
push
inc
clts
add
ret
in
push
and
js
ja
xor
ffree
out
rclb
mov
imul
int
out
mov
or
add
lahf
fsubrl
dec
bound
negb
repnz
ljmp
adcb
sub
inc
scas
cmp
ss
mov
ja
push
data16
xchg
push
mov
ret
cmp
inc
mov
aas
std
sub
movsl
ljmp
lcallw
sub
adcl
mov
iret
sahf
push
or
jo
cmp
or
negl
fs
in
inc
out
sub
pushf
pop
adc
imul
in
sub
iret
mov
fstps
push
mov
or
int3
mov
sbb
lahf
repz
push
add
ret
mov
pop
adcb
mov
in
mov
sub
dec
daa
push
adcl
daa
push
cmpsb
or
xor
cs
xor
in
push
scas
pop
xor
sub
roll
push
repz
lcall
mov
shll
sbb
rol
sub
xor
scas
fs
sub
pop
push
out
pop
out
and
cmp
data16
data16
sbb
inc
imul
imul
dec
pop
nop
dec
or
mov
adc
rorb
jg
das
pop
iret
in
pop
ret
gs
movsb
rcr
inc
pop
in
and
outsl
in
fildl
push
mov
dec
mov
mov
ja
lods
dec
mov
pop
add
mov
jmp
cmp
jns
push
test
es
xlat
daa
repz
ja
jecxz
iret
divl
jecxz
and
push
mov
xor
jo
insl
inc
sub
clc
ljmp
mov
idivb
dec
ljmp
adc
fsubrs
daa
cli
enter
in
test
and
cmpsl
call
jae
cmpsb
insl
daa
nop
xchg
shrb
inc
xlat
sbb
sub
add
fs
jmp
adc
les
pushf
stos
mov
ljmp
dec
xchg
xchg
popa
cmp
jae
test
fcomp
push
push
scas
dec
movsb
inc
shlb
jae
cmpsb
iret
shlb
stos
xchg
xchg
fsubp
jmp
jg
in
or
insl
jp
scas
add
stos
outsl
hlt
mov
jb
outsb
xchg
cld
dec
aaa
and
insl
cmovle
pop
lods
jb
jae
insl
or
in
cltd
pop
imul
imul
mov
aaa
les
or
add
or
shrl
cld
movsl
or
jmp
or
lcall
iret
mov
fimull
cltd
enter
pop
push
lret
in
test
xchg
sub
jp
sub
loop
les
paddd
xchg
in
jo
in
adc
test
cmc
int
inc
mov
jecxz
int
xchg
mov
push
iret
rcrl
sti
push
clc
icebp
pusha
pop
ret
les
sbb
cmpsb
ret
insl
clc
mov
scas
fcoml
pop
or
dec
jmp
pushl
mov
mov
dec
pop
push
int
scas
fnsave
ret
jle
cld
pop
daa
lcall
fnsave
fildll
aaa
adc
loope
repnz
loopne
hlt
shrl
movsb
cli
inc
aad
xlat
aam
aad
subb
cld
test
divl
xorl
add
sbb
loopne
jns
xlat
ja
pop
mov
mov
lahf
dec
pop
mov
mov
icebp
add
loope
inc
nop
inc
sub
data16
cmp
js
mov
out
pop
sub
dec
bound
ret
xor
xor
testb
enter
cmp
out
add
lea
leave
adc
test
mov
or
push
loope
sub
call
insl
dec
cmp
sbb
mov
filds
loopne
xchg
aaa
or
pop
jl
das
clc
add
push
push
loope
cltd
mov
jb
pop
cmc
popa
fsubp
push
bound
adc
xor
sarl
jmp
out
jo
adc
stos
mov
fmull
test
outsl
jmp
or
jnp
outsl
xchg
dec
push
push
xchg
adc
lods
push
adc
ficomps
das
aam
jp
mov
add
xor
les
test
sbb
loopne
pop
test
cmpsl
xor
mov
addb
dec
xchg
xchg
dec
lock
shl
dec
je
mov
jno
in
pushf
mov
add
inc
out
mov
push
sub
jbe
jns
in
dec
sub
sub
lret
bound
in
lock
xchg
sbb
out
mov
mov
cs
lds
push
shrl
pop
in
hlt
adc
fiaddl
mov
inc
mov
or
cld
sub
scas
lret
push
jnp
ja
xchg
loopne
and
into
cwtl
fldcw
xchg
jl
dec
inc
in
lret
add
jmp
or
jo
dec
sbb
dec
xor
cmp
and
xchg
or
dec
dec
sub
mov
or
mov
cmpsb
cmp
sbb
bound
mov
pop
push
pop
adc
xor
pop
adc
adc
mov
mov
mov
add
pop
or
jno
das
pushf
xchg
mov
test
stos
xchg
push
push
out
inc
lahf
mov
iret
test
orl
jl
push
and
mov
imul
out
das
mov
cltd
mov
sbbb
pusha
push
pushf
push
push
push
fnstsw
cli
pop
mov
mov
pusha
sbb
or
xlat
lret
and
addr16
xchg
mov
jns
inc
sub
or
adc
dec
ficomps
add
lcall
mov
shlb
xchg
xchg
or
dec
lods
aas
or
out
xor
dec
cmp
negl
lret
push
mov
aad
push
jno
mov
mov
xchg
push
xchg
add
in
adc
adc
pop
scas
cwtl
in
jle
sbb
dec
idivb
mov
inc
in
jns
in
mov
iret
shll
lock
add
push
lods
scas
sbb
mov
jae
sbb
loopne
pop
js
int
cmp
andb
mov
inc
mov
push
or
sahf
mov
mov
and
test
sbb
pop
mov
int
imul
mov
mov
fcmovne
popf
stc
fcmovne
sti
inc
shlb
cs
in
pop
int
mov
leave
jb
sub
push
fs
jle
push
rcrb
mov
fcompl
push
xor
sub
dec
push
push
jl
dec
fcoml
sub
lret
dec
jae
cwtl
movsl
mov
es
icebp
inc
les
or
loope
sbb
pop
cmp
xchg
mov
stos
rclb
push
or
xor
sbb
sbb
mov
adc
mov
sub
das
stc
push
es
push
inc
enter
adc
scas
mov
mov
pop
dec
mov
sbb
push
jnp
push
repz
mov
idivb
aad
loopne
out
enter
add
mov
pop
inc
mov
jns
in
push
cmpsl
notb
or
xchg
jl
sub
sub
or
cmpsb
or
xor
mov
sub
das
mov
sbb
fisubrs
loop
xchg
ficoms
dec
in
push
negb
add
outsb
dec
and
mov
les
sbb
xchg
ljmp
inc
cmc
rclb
dec
enter
or
lcall
rclb
inc
or
aam
add
bound
cs
push
fmull
xorb
add
xchg
incl
push
jmp
dec
xor
xor
loopne
mov
sahf
lcall
xlat
cmp
adc
push
cmp
or
push
cli
ljmp
fists
es
pop
fistpl
sub
imul
je
negb
add
inc
ret
mov
mov
xchg
xchg
mov
inc
orb
add
add
insb
outsl
movsb
jae
ret
xchg
cld
test
push
pop
mov
outsb
in
pop
cmp
jle
mov
xor
and
nop
gs
push
mov
xor
push
cmp
jne
add
cmp
hlt
fyl2xp1
ss
stos
push
dec
repnz
push
ss
or
pop
add
jle
or
pop
inc
and
or
daa
imul
xor
mov
repnz
add
pop
sbb
add
cmp
out
mov
stos
fistpll
adc
jne
cmpsl
cmp
sub
xchg
jo
sbb
mov
cli
or
and
jns
mov
stos
sub
mov
movsl
jp
lea
repnz
sub
adc
outsb
sahf
push
aad
add
repnz
inc
aaa
or
dec
dec
out
aaa
lea
stos
push
fisttpl
outsl
adc
and
out
cwtl
clc
pop
mov
inc
jmp
xchg
mov
cmp
in
mov
and
mov
xor
xchg
mov
lods
arpl
insl
sub
sbb
dec
adc
pop
lods
or
and
test
popa
and
lcall
mov
inc
cld
mov
pop
xor
lods
shrl
push
sahf
xor
push
xchg
jne
ja
add
pop
out
test
xor
mov
in
subl
dec
data16
mov
push
in
jb
stos
cmp
into
xchg
outsb
mov
and
push
dec
mov
lea
out
push
sbb
test
dec
sbb
out
std
stos
sbb
aas
popf
out
ljmp
mov
jo
js
std
fwait
popf
xor
sarb
xchg
jb
iret
dec
push
adc
movsb
pop
pop
sarb
dec
ja
push
or
in
push
mov
call
out
push
cmpsl
push
cltd
sub
shll
in
jno
xchg
and
into
loop
lods
push
dec
ret
cmp
inc
lea
xchg
adc
mov
sbb
stos
pop
jge
int
out
jle
loopne
popf
cmp
sbb
aaa
inc
rcll
cmp
stc
pop
or
inc
inc
mov
in
lods
stc
lret
mov
mov
daa
enter
add
add
xchg
mov
and
inc
jle
pop
lock
cmpsl
test
and
daa
cltd
ljmp
sbb
shl
in
mov
movsl
mov
outsl
sbb
or
push
mov
mov
sbb
xchg
jnp
aam
lods
inc
xor
cmc
roll
out
cld
mov
fiadds
inc
out
shll
jp
or
xchg
dec
into
adc
out
and
into
test
inc
cmp
or
rclb
push
subb
icebp
adc
jno
pop
mov
mov
movsb
xor
inc
cwtl
mov
sbb
jb
stos
mov
test
enter
fistl
subl
pop
xor
adc
adc
repz
inc
inc
sti
push
out
scas
cbtw
add
dec
push
aad
lods
mov
movsl
lods
push
pusha
rorb
mov
fmuls
adc
ljmp
addr16
mov
or
sbb
mov
jno
lret
scas
clc
ss
xchg
adc
sahf
mov
adc
cmp
mov
sbb
jge
inc
pop
inc
sub
and
cmp
and
push
jae
inc
mov
cmp
movsb
and
cmp
lds
xor
aaa
push
push
sub
fs
addr16
std
dec
xchg
js
repz
rcrl
ja
cmc
and
inc
inc
pop
call
jmp
lahf
test
sbb
test
mov
sub
shl
loop
or
xor
scas
cmpsl
pop
dec
or
fwait
inc
daa
rolb
push
mov
dec
sub
pop
sbb
or
popa
push
xor
pop
es
cwtl
out
cli
lcall
jmp
outsl
sbb
leave
iret
add
push
in
pop
mov
pmulhuw
ret
add
adc
and
inc
or
adc
outsl
in
into
mov
add
xor
into
icebp
xor
cli
cmpsl
pusha
cmp
fimull
repz
xchg
jge
stos
cmc
adc
push
mov
mov
testl
daa
push
js
lret
movsb
xchg
push
sub
stos
push
pop
loopne
inc
imull
and
push
sbb
xchg
cmp
fstps
push
jae
pushf
jb
xchg
ret
into
roll
movsb
cs
xchg
pop
cmp
insb
fdivr
out
cmp
dec
add
in
daa
cmc
loopne
jecxz
mov
inc
imul
fcomps
loopne
fimuls
insl
leave
nop
sub
aas
dec
aas
sub
adc
xchg
popa
stos
cltd
ret
pop
arpl
mov
push
aas
add
push
insb
dec
cmpsl
mov
fwait
push
cmp
hlt
stos
xor
or
fwait
push
fs
and
cld
inc
jb
push
subb
fisubrs
and
push
mov
pop
dec
push
pop
aaa
incl
pop
pusha
andb
jmp
or
or
cmpsl
inc
jle
sbb
mov
sahf
sbb
out
jecxz
add
sbb
push
inc
mov
inc
in
negl
pusha
shrb
scas
nop
xchg
mov
sti
mov
rclb
adc
fildl
cmp
iret
mov
inc
lock
inc
jns
cmpsl
or
xlat
in
cmp
shr
mov
mov
jl
imull
mov
xchg
mov
jnp
out
mov
fwait
mov
xor
jecxz
aas
push
fs
icebp
add
and
pop
dec
add
jo
xchg
pop
cmc
cs
and
push
pop
add
mov
pop
cmpl
push
incb
jmp
sub
jns
pusha
sbb
inc
mov
lock
jne
sub
stc
inc
mov
fisubl
xlat
out
and
ret
out
popa
mov
fnstcw
stos
inc
lods
nop
cmp
std
repnz
or
xchg
movsl
into
imul
cs
xor
out
sub
xor
xor
dec
mov
lret
pusha
cmpsb
push
sahf
pop
sub
push
push
out
pop
dec
movq
dec
jmp
aaa
sub
push
mov
xor
push
sbb
mov
ljmp
dec
mov
dec
dec
pop
mov
and
inc
adc
inc
cmp
cld
mov
add
repz
pusha
mov
test
hlt
outsb
fildll
stos
sti
or
and
les
orb
sub
jne
in
mov
out
mov
xor
push
xor
ja
mov
inc
int3
pop
gs
jne
mov
pusha
jp
lret
push
dec
push
pop
fsubrs
arpl
addr16
cs
sub
movb
divb
nop
mov
cltd
xor
add
stos
inc
mov
cmp
adc
mov
int
push
dec
leave
out
dec
jecxz
mov
cmpsb
sub
pop
pop
and
sahf
mov
daa
aam
mov
pop
xlat
in
xchg
xchg
outsb
jno
test
adc
dec
and
movsb
and
in
jl
call
and
cmpb
lods
or
ja
shlb
add
push
push
xchg
lahf
and
fs
xchg
testl
jns
mov
lock
mov
test
cli
mov
and
push
ja
inc
daa
lods
test
mov
pop
lds
roll
push
xchg
out
aad
dec
in
mov
insb
jg
push
sbb
and
data16
lret
jmp
sti
sbb
push
pop
sti
cltd
jno
mov
leave
adc
jp
iret
dec
test
in
xlat
mov
sub
mov
inc
inc
test
ljmp
xor
mov
popf
js
adc
aaa
fistpll
rorl
cmp
mov
adc
cld
ja
push
xorl
and
adc
iret
mov
outsl
or
stc
out
insb
hlt
dec
add
sbb
imul
push
dec
xchg
out
push
xor
cmpb
or
sub
cmp
addr16
and
sbb
cmp
cmp
mov
arpl
cmpsl
ja
jae
push
lds
push
enter
inc
ret
fists
test
addr16
inc
dec
jle
sbb
dec
pop
push
push
sub
mov
aaa
cmc
ret
xchg
xor
rcl
test
push
lods
cmp
loopne
pusha
jecxz
cpuid
mov
and
mov
push
xor
sbb
popf
std
dec
popa
fidivrl
das
nop
adcl
mov
and
adc
lcall
adc
or
fsubl
pop
mov
xor
push
iret
in
xor
sbb
test
sub
xor
adcb
sbb
sbb
arpl
dec
add
loope
sahf
mov
aaa
cmp
pop
cli
xor
push
jns
sbb
sahf
lea
push
jno
lret
in
ja
stos
xchg
pop
push
inc
imul
dec
jmp
iret
mul
sbb
loopne
icebp
lds
ss
lock
imull
fldenv
nop
shlb
int3
xchg
push
cwtl
mov
lods
lods
and
lea
lock
cmc
aam
pop
xchg
adc
jbe
iret
xchg
outsb
xor
cs
pshufb
out
addr16
idivw
rorb
mov
mov
call
xor
test
loopne
mov
stos
sub
push
cmp
dec
cmp
inc
pop
add
mov
lret
mov
jmp
sbb
mov
stos
lahf
jnp
jg
xor
dec
out
ud2
push
leave
sahf
lds
xchg
or
add
cmp
push
lock
inc
push
sbb
gs
xchg
jmp
rcrb
mov
xor
dec
out
mov
pop
or
push
incb
mov
add
push
pop
andb
sbb
jle
enter
cmp
xlat
call
mov
lea
jnp
loop
sbb
int
inc
in
inc
test
push
adc
mov
fistl
mov
add
jnp
popa
xchg
dec
push
aas
or
fsubr
xchg
out
jo
sub
pop
push
movsl
jae
cmp
and
fwait
test
rorb
adc
pop
jo
int3
repnz
push
das
test
outsb
sub
insl
xor
mov
test
lea
cmpl
mov
xchg
outsl
movsl
dec
std
shrl
jmp
push
jle
inc
push
pop
aaa
push
gs
push
js
and
dec
adc
stc
scas
jb
scas
pop
pop
jmp
pop
add
mov
xor
pop
dec
cmp
mov
fcoms
jge
push
mov
cmc
testb
data16
jns
nop
dec
aas
jle
push
push
inc
pop
jecxz
jnp
sub
shl
in
in
or
mov
and
sbb
imul
jg
sub
clc
pop
or
divl
shrd
rcrb
jge
fisubl
fdivrs
js
scas
mov
pop
rclb
addl
jno
adc
mov
adc
imul
out
daa
ljmp
or
call
test
lea
mov
outsl
cmc
xchg
sahf
addl
adc
ja
jle
inc
push
sbb
push
movsb
fldpi
push
or
shl
cmp
daa
mov
daa
sub
je
aaa
jl
insl
mov
cmp
in
leave
mov
lock
cwtl
and
xchg
inc
enter
adc
test
cmp
icebp
or
pusha
cmp
in
dec
jne
call
movsl
addr16
je
mov
test
mov
pop
xor
push
pushf
out
lret
add
cmp
adc
int3
adcb
cmp
pop
mov
inc
or
dec
inc
mov
push
out
ret
inc
sbb
push
mov
fisubrl
gs
into
in
mov
cmp
inc
mov
mov
jmp
test
cli
mov
adc
rol
dec
pusha
mov
int3
and
mov
aam
lcall
xchg
and
jns
jb
dec
fisubl
pop
adc
add
into
inc
stos
jne
leave
jbe
sub
jecxz
add
cltd
shrb
xchg
lahf
xor
repnz
dec
pop
mov
mov
xor
outsb
les
jg
adc
xchg
cmp
xchg
push
hlt
stos
fwait
rcrb
inc
add
jle
inc
aad
insb
add
pusha
adc
mov
rcr
cs
xchg
aad
mov
sbb
cmp
jno
inc
jae
push
push
cmp
iret
add
rolb
xchg
xor
rorb
inc
jnp
sarl
aas
iret
add
sub
imul
fs
sbb
fcoms
xchg
add
jb
pop
xor
adc
mov
mov
inc
rcl
inc
and
pop
int
add
sbb
les
pop
inc
jl
inc
movl
xor
cmpsb
inc
jecxz
add
test
into
ss
orl
sbb
jno
aam
jg
stc
test
test
imul
cmp
push
xor
ljmp
xchg
mov
cs
int
shll
mov
sbb
cmp
sbb
jae
and
fnstsw
es
xor
int
push
xor
mov
in
and
cmp
pop
sub
in
inc
sbb
sbb
fmull
mov
mov
popf
loope
jmp
mov
mov
aas
mov
sbb
inc
outsl
repz
pop
mov
sub
jge
clc
jle
jg
into
xor
rolb
cs
push
cmp
add
and
adc
movl
cmp
sbb
sub
lret
fcoms
xor
out
push
inc
ja
pop
xor
sub
stos
jecxz
loop
dec
dec
fldl
cmpsl
fistpl
outsl
ret
push
mov
cli
push
or
mov
clc
push
cmp
mov
jb
adc
pop
es
mov
dec
jo
xchg
ds
ja
xchg
jmp
rcl
or
gs
jle
fldl
pop
mov
shrb
mov
shll
cld
push
sbb
mov
inc
dec
test
inc
and
mov
outsb
or
lahf
out
mov
mov
in
cs
call
outsl
aam
xchg
jno
jmp
add
cwtl
stc
decb
jmp
jo
adc
cmp
out
aam
scas
addr16
repz
cmpsb
mov
add
je
sub
ret
and
mov
fwait
xor
lock
sub
pop
mov
sbb
in
mov
adc
xchg
xchg
into
ss
mov
int3
test
inc
int3
sbb
test
adc
cld
or
sub
cmp
xor
lods
mov
dec
inc
fisubrl
xor
jle
in
mov
mov
test
fidivrs
mov
push
push
xchg
insb
pop
cmp
sarb
bound
ret
movsb
or
push
push
aam
addl
fadds
ss
cmp
cmp
lahf
push
jo
out
cmp
push
jne
lret
sbb
adc
rolb
rolb
arpl
mov
lcall
or
aaa
lock
inc
pop
ret
imul
lret
loope
lcall
mov
pop
dec
cmp
out
sbb
jnp
jo
stos
or
mov
sub
or
add
in
mov
test
and
ja
inc
jge
in
and
inc
mov
sti
and
movsl
mov
xchg
fistl
lahf
xchg
sbb
push
lret
push
mov
push
xor
adc
pop
insl
aaa
or
in
pop
sub
jo
xor
push
jnp
and
sarl
mov
push
inc
imul
jbe
mov
mov
jecxz
fs
pop
inc
adc
outsb
xor
aad
ljmp
jb
add
sahf
sahf
push
and
mov
push
repnz
add
sahf
inc
add
shl
pusha
mov
xorb
dec
fistpll
add
mov
into
cli
mov
clc
and
jecxz
js
daa
or
push
cbtw
js
and
xchg
imul
xorb
push
cmp
dec
inc
sub
mov
push
push
sbb
aad
jbe
mov
mov
pop
push
imul
or
xchg
xorb
movsb
jmp
pop
lods
mov
pop
and
jmp
pop
mov
fcomi
add
movsl
pop
sub
lret
stos
jle
lcall
out
inc
stos
xor
int
fcoml
imul
xchg
mov
scas
inc
pushf
or
call
adc
xchg
add
stos
sub
sti
mov
outsl
adc
mov
das
mov
jns
cmpsl
xlat
sbb
push
add
jecxz
test
mov
sbb
test
dec
psrlq
popa
call
mov
pop
jnp
or
push
add
xchg
mov
fsubp
xor
pop
add
pop
dec
pop
je
and
loopne
into
inc
lcall
call
add
int3
je
inc
fiadds
xor
cmpsl
fldcw
mov
jbe
and
and
mov
add
jne
js
cli
bound
popf
xlat
pop
bound
xchg
div
push
mov
or
out
enter
cmc
pop
or
xor
xor
test
xchg
inc
push
into
ss
jb
push
in
mov
sbb
xor
push
dec
sbb
dec
aad
aam
out
pop
and
call
cmpsb
pushf
add
imul
pop
jbe
mov
lcall
adc
jg
decb
sbb
jl
push
pop
mov
xchg
adc
push
fs
and
cmpsw
sub
popa
xchg
xchg
sarl
fcompl
out
pop
imul
movsl
or
push
xchg
add
insb
out
xchg
es
adc
shlb
pop
ds
cmp
pop
cmp
sar
jne
outsb
fildll
push
ret
sbb
lret
push
push
pop
sbb
sbb
mov
mov
daa
loopne
dec
xchg
cltd
jne
mov
push
fiadds
pop
iret
push
mov
jns
and
addr16
adc
mov
and
xchg
sbb
fistl
cmp
mov
pusha
js
xor
jns
scas
and
cltd
sarb
adc
sub
dec
pop
push
adc
repz
stos
and
push
jle
testl
lret
push
mov
js
test
out
test
in
andl
leave
sbb
mov
rorb
mov
and
popa
or
lods
repz
mov
and
cmpsb
aad
dec
push
outsl
icebp
pop
shrb
leave
jno
adc
mov
add
jp
mulb
add
cmp
cld
in
dec
push
jl
leave
aas
mov
push
mov
cs
and
lret
and
push
xchg
jp
insl
cltd
dec
cmp
add
ss
out
fsubp
xor
pop
mov
cmpsl
shll
lea
addl
ss
push
out
sbb
lahf
or
gs
xchg
std
inc
imul
fwait
cmp
xor
sub
nop
and
mov
mov
inc
inc
sbb
xor
daa
cmp
adc
pop
or
ja
mov
lahf
or
push
jb
add
dec
xchg
pop
mov
sahf
pop
mov
mov
imul
cmp
rcrl
xor
rcrl
xor
cmp
andb
stos
xor
jp
dec
ret
loope
mov
cli
jmp
int3
add
adc
xor
xchg
lahf
xchg
adc
lods
arpl
jecxz
jge
dec
stos
arpl
scas
pusha
pop
push
sbb
clc
and
ds
xor
aam
sub
jge
fucomip
pop
ret
jg
rorl
xor
leave
loopne
cmp
lea
loopne
les
xchg
sub
push
dec
loop
aas
push
adc
push
lds
nop
jne
xor
outsb
dec
dec
stos
jmp
dec
iret
data16
dec
mov
ja
lock
mov
fcomps
shrl
mov
mov
test
loop
popa
js
pop
mov
ja
stc
dec
jp
das
fbld
mov
dec
andl
iret
adc
aas
mov
jg
push
cmp
pop
xor
aad
adc
icebp
aam
mov
cmc
dec
aas
sub
imul
out
mov
xor
dec
mov
popa
cmp
dec
loopne
pop
or
leave
xchg
jnp
rcl
mov
dec
negb
fiaddl
inc
push
in
jle
repz
inc
repnz
mov
mov
rcrl
sub
out
sbb
jno
mov
jge
inc
in
aad
add
jbe
sahf
and
andl
adcb
insb
cmp
in
mov
repz
out
jmp
xor
jl
stos
inc
jle
mov
fcomps
sahf
mov
pushf
sbb
aad
idivl
dec
xchg
pop
fisttpl
shlb
cltd
ljmp
aad
inc
in
mov
add
cmp
sarl
adc
inc
xchg
frstor
sbb
stos
imul
out
clc
mov
jmp
loope
fwait
aaa
sbb
ljmp
mov
int3
and
sub
jg
sahf
mov
pop
jl
shlb
pusha
pop
sbb
test
sub
and
and
cmp
sub
lret
fnstcw
pop
mov
cltd
mov
push
clc
mov
vpcmpgtd
sbb
dec
inc
or
dec
ss
pop
jecxz
cmp
inc
std
in
sti
jnp
inc
data16
fdivrl
pusha
sahf
rorb
mov
pop
jl
rcl
dec
xchg
jg
fcom
xchg
in
xor
and
daa
and
add
shrb
or
push
jmp
mov
cmp
inc
popa
sub
push
or
sbb
push
cmp
int
ret
stos
push
loop
arpl
lock
sbb
xlat
xlat
adc
xchg
jle
push
jp
xchg
jmp
rcr
mov
adc
cmpb
jne
dec
popa
pop
call
test
mov
adc
sahf
nop
xor
mov
ror
and
aaa
and
inc
aaa
fldcw
push
or
ja,pn
stos
clc
jne
cmpsl
sarb
cltd
cmp
mov
fmuls
popf
mov
xorl
rolb
inc
fnsave
cli
xor
pop
test
fsubs
filds
in
add
imul
fldcw
mov
fmull
sbb
les
out
rorl
mov
xchg
add
pop
xchg
xchg
test
test
mov
repz
dec
les
and
test
cwtl
es
jp
inc
add
jbe
mov
adc
cmp
mov
stos
fstpt
jmp
xor
adcl
sub
ljmp
dec
lods
in
inc
lret
popa
in
js
inc
idiv
insb
push
mov
jne
push
xchg
add
scas
ljmp
mov
mov
scas
fisubrl
push
rcll
adc
jl
sbb
out
popa
xchg
adc
xchg
jnp
push
and
and
cltd
mov
push
mull
jg
mov
pusha
or
mov
lcall
vaddss
ljmp
mov
ret
pop
sarb
mov
pop
jnp
in
out
xor
shrb
imul
imul
push
imul
adc
clc
cmp
test
push
inc
call
mov
mov
jl
imul
rcrb
scas
addr16
loope
xlat
or
imul
mov
or
sahf
or
cli
push
push
dec
and
push
push
pop
jle
mov
out
loopne
in
jg
or
stos
and
push
pop
mov
adc
xchg
loop
fwait
jl
cltd
xchg
fsub
imul
pop
scas
sbb
hlt
shlb
nop
dec
dec
movsl
mov
mov
pop
lea
int
sub
scas
mov
add
mov
cld
sbb
push
jb
ss
sahf
subb
and
push
call
lea
dec
pop
add
movsb
or
cwtl
push
cltd
ret
scas
das
mov
pop
movsl
pushf
add
sub
cmp
sub
out
loop
bound
inc
xchg
or
push
aad
and
xchg
mov
jns
sbb
push
or
jmp
bound
adc
cmp
repz
mov
cmp
ret
or
imul
push
daa
cmp
fsubrp
xchg
int
ret
fsubrs
dec
push
add
mov
fstpt
leave
je
sbb
or
push
sub
movsb
in
mov
xchg
outsb
inc
xor
pop
ja
jno
adc
cmpsb
iret
cmp
xor
push
call
insl
ret
pop
inc
repnz
mov
pop
add
aam
shlb
icebp
mov
push
mov
cltd
cli
sbb
mov
dec
pop
cmc
shll
push
mov
int
bound
in
test
inc
push
fs
cmpsb
push
and
or
mov
mov
mov
sbb
popa
sbb
adc
sub
outsl
mov
inc
cmp
js
sti
mov
dec
sbb
fldcw
fidivrl
inc
sbb
leave
mov
cmp
fdivr
sbb
jp
mov
xor
fcoml
movsb
mov
rcrl
adc
mov
mov
push
fimull
iret
mov
lret
pop
call
dec
mov
aas
pop
xor
push
mov
mov
sub
lds
movsb
imull
pushf
sub
adc
xchg
or
int3
mov
aad
arpl
loop
inc
add
inc
sub
je
popf
ds
enter
mov
and
push
dec
leave
cwtl
mov
sub
gs
mov
popf
sub
xlat
imul
das
mov
ret
inc
inc
pusha
ret
std
sbb
sub
add
addr16
add
pushf
push
mov
and
xor
xor
mov
shrb
pop
and
daa
fidivl
inc
testb
mov
leave
pop
lea
ds
jne
and
ja
sbb
jae
dec
push
and
lods
addr16
mov
nop
aam
sbb
add
out
or
jle
mov
mov
test
jg
cmpsl
adc
lcall
mov
in
or
aad
or
lret
or
sub
push
pop
bnd
cmp
arpl
add
xchg
xchg
ss
aaa
adc
adc
mov
add
mov
mov
arpl
icebp
mov
or
sti
lods
sub
xor
iret
inc
jg
insl
outsl
pushf
in
xlat
in
cmpl
aad
push
std
sub
dec
and
adcl
inc
sbb
cmc
mov
data16
jo
ret
add
loopne
dec
cmpb
iret
movsb
jb
push
and
mov
in
fmull
pop
clc
mov
xor
stc
fs
es
popf
xor
dec
icebp
lock
fprem1
sbb
in
loop,pn
sub
in
repz
pop
nop
sti
movsl
lea
dec
ret
and
out
xchg
sub
insb
mov
movsl
out
outsb
lret
mov
into
lret
xor
add
adc
adc
incb
xor
jbe
sub
cmc
inc
lods
out
cmp
mov
ficoml
repz
ja
popf
sbbl
mov
test
nop
les
enter
push
je
bound
xchg
mov
pop
xchg
rcrb
or
adc
mov
jmp
adc
lret
push
and
inc
daa
pop
mul
cld
inc
sub
jmp
into
mov
cmp
cmp
or
add
stos
aas
push
cmpsl
sbb
lea
pop
cli
sub
fstpl
pop
lret
shrb
mov
mov
pop
mov
ret
sbb
arpl
fiadds
lea
adc
cmpsb
mov
jae
test
mov
loope
xor
pop
inc
xor
shll
inc
push
push
pop
nop
push
xor
mov
mov
push
test
push
lods
pop
into
leave
dec
into
mov
push
ss
xor
call
cli
sub
cmpsl
pop
test
xchg
sbb
cld
sbb
aad
bound
fsubrs
aaa
fimull
mov
inc
mov
cwtl
and
add
lret
cmc
aam
lods
test
je
inc
push
or
push
push
rcrb
gs
test
xor
inc
test
dec
jns
das
in
or
mov
scas
jnp
pop
es
lods
repz
or
xchg
cwtl
lret
xchg
inc
sbb
jno
test
or
popa
mov
cmpl
xor
xchg
pop
movsb
dec
les
movsl
aas
cmp
xchg
fiadds
andb
mov
xchg
or
aas
lret
sti
mov
jae
pop
ljmp
lods
push
mov
xor
xlat
popf
pop
cmp
repz
jmp
je
cmp
scas
and
dec
ret
or
testb
mov
stc
jno
mov
inc
orb
outsl
xchg
cld
outsl
jg
push
add
rcrb
in
or
mov
push
test
mov
mov
test
das
lods
xor
cld
push
sub
notl
and
nop
inc
jp
mov
shlb
pop
sub
fldt
xchg
jnp
pop
mov
pop
add
loopne
pop
xor
scas
and
js
jo
or
mov
inc
xchg
enter
mov
mov
imulb
cmp
xchg
xor
mov
mov
loopne
push
cmp
lods
adcl
dec
lcall
cmc
sub
adc
fidivrl
cli
ds
call
fsts
mov
jmp
jb
pop
ds
push
add
pop
mov
mov
rcl
cmp
add
mov
jge
jmp
outsl
das
pop
push
cld
mov
jo
jb
fs
fiadds
jge
mov
and
xor
xchg
js
outsl
xor
jecxz
out
cmp
jno
and
add
inc
sub
ret
xor
sub
js
popf
mov
jl
mov
fwait
mov
sbb
js
incb
or
and
push
mov
lock
out
outsl
sbb
popf
push
fwait
stos
mov
popf
fisubrs
adc
lods
and
mul
push
je
ds
add
inc
jno
or
test
fnstcw
ret
fstpl
inc
movb
addb
insb
cs
gs
jge
push
xor
and
xchg
dec
cmpsl
movsl
adc
pop
mov
or
stos
lods
std
push
inc
cli
mov
jbe
jo
mov
jae
imul
pop
pushf
test
push
mov
push
out
std
aam
cmp
push
out
mov
xor
adc
sbb
pop
shll
lods
push
out
jle
enter
sbb
int3
mov
js
jg
insl
adc
xor
das
add
testl
pop
enter
leave
cmc
nop
shlb
loope
cwtl
pop
cmpsb
sub
pop
shrl
add
push
inc
inc
ljmp
and
in
je
xor
roll
mov
fsubr
dec
sub
add
pop
xlat
std
jns
mov
sarb
mov
push
out
movsl
jo
pop
outsl
mov
dec
push
sbb
out
leave
inc
fs
jns
notb
and
mov
mov
out
insl
lahf
testl
pop
xchg
jnp
in
mov
aas
cwtl
mov
scas
cld
into
fisttpl
cmpsl
cwtl
add
jle
bound
jl
in
and
cmp
mov
adc
xor
add
std
sub
in
test
pop
cmp
cmpsb
dec
mov
mov
jg
loopne
test
mov
and
lret
inc
popf
data16
xchg
in
xchg
xor
adc
jmp
lods
lds
inc
jno
jno
cmc
sti
sbb
mov
aad
pop
repz
dec
mov
ss
xchg
jae
jo
jle
inc
push
xchg
dec
shlb
mov
or
pop
and
loopne
in
js
mov
jle
jg
sub
clc
loopne
cmp
and
cld
aaa
xlat
ss
sbb
mov
fwait
mov
popf
sbb
andl
push
push
icebp
push
call
push
rcll
mov
mov
in
mov
add
sahf
push
cld
mov
push
push
out
aad
mov
into
xor
mov
sub
popl
mov
adc
clc
iret
inc
mov
push
push
cmc
adc
ret
mov
cmp
jge
call
jle
ret
addr16
pop
sbb
setl
jo
jnp
nop
or
shl
les
push
mov
xchg
inc
dec
rcll
movsb
push
pop
xor
cli
in
test
imul
js
sbb
dec
test
inc
mov
add
repnz
lret
mov
push
mov
cli
pusha
movsb
pop
xor
sub
cmp
mov
scas
sarb
movsb
call
stos
mov
pusha
out
pop
pop
enter
pop
bound
aad
or
stos
adc
pop
mov
mov
movsl
fistl
jne
jno
fs
cmp
lret
mov
inc
pusha
add
push
fcoml
fmul
or
in
xor
ja
xchg
and
mov
hlt
fmul
and
xchg
adcb
cli
dec
or
inc
cmpsl
pop
pusha
sbb
mov
nop
int
adc
hlt
xchg
or
adc
jo
int
dec
jge
jne
pop
inc
mov
pop
es
mov
jle
xchg
cmpsl
sub
and
cli
xorl
out
pushw
loope
aam
add
lods
pop
iret
test
lahf
or
sbbb
popa
cli
imulb
fs
insl
mov
scas
jl
and
adc
call
sbb
fildll
rorb
mov
inc
cmp
in
jg
loope
lret
sub
adc
jb
mov
cmpsl
pop
outsl
inc
out
add
fistpl
outsl
data16
ja
pop
outsl
in
data16
imul
lcall
mov
xor
dec
movl
pop
adc
aas
push
test
mov
cld
test
dec
mov
and
pop
sbb
out
add
cwtl
push
outsl
xchg
das
in
movsb
adc
je
cmpsl
shrb
pop
push
out
push
pop
test
idivl
xor
call
cmpsl
mov
loope
lea
pop
lods
andl
arpl
push
hlt
es
stc
scas
pop
test
pop
insb
pop
jo
or
pop
loope
cmp
xchg
scas
dec
dec
ss
jmp
pop
cmpsb
xchg
lret
push
pop
push
add
push
std
mov
leave
mov
or
fistpll
movsb
sub
cmp
push
sbb
dec
fsts
ror
lea
jo
std
pop
mov
scas
and
fimull
pusha
fldenv
test
jmp
ror
jb
movsb
push
mov
cmpsb
sbb
pop
out
jae
adc
jb
test
adc
jns
cmp
ficomps
jb
aas
mov
mov
add
add
jmp
bound
cmpsl
sub
fistpl
pop
add
cmpsl
imul
aaa
aam
or
sub
decl
or
push
into
push
xchg
cld
mov
mov
sbb
and
je
jl
mov
les
ljmp
stc
xchg
mov
xlat
lahf
jle
shll
dec
movsl
mov
inc
add
vandnps
add
lret
outsb
cwtl
jge
adc
lret
ja
sbb
pushf
in
sub
pop
mov
lea
or
jbe
xchg
mov
push
addb
outsb
lods
add
dec
pop
mov
test
xchg
dec
xchg
ror
or
push
xlat
pop
fisubrl
jmp
mov
push
clc
xor
sarb
push
xor
out
out
cltd
ret
pushf
or
leave
or
pop
xor
sub
or
jnp
idivb
pop
jno
shlb
xchg
inc
push
jne
sub
cld
loope
out
cmpsl
cli
pop
test
xchg
cli
insl
ss
jge
sbb
or
inc
dec
cmpsb
xchg
cmc
adc
jns
popa
dec
cltd
and
or
xchg
pop
cli
lret
xor
pop
pop
add
mov
push
hlt
push
and
xchg
fbstp
outsl
enter
mov
adc
mov
aas
jge
int
movsl
add
xchg
pusha
jmp
les
add
or
add
push
jmp
mov
sub
or
popf
push
pop
sti
inc
loop
scas
dec
dec
hlt
loop
adc
jmp
js
lods
ljmp
sub
add
xchg
pop
and
sub
insl
mov
mov
mov
jbe
gs
add
les
pop
fwait
lods
sbb
jp
stc
hlt
repnz
dec
and
in
orl
sub
pop
lahf
push
ss
cmc
mov
mov
cmp
and
mov
test
cmpsl
inc
sahf
fidivl
repnz
mov
fldcw
sbb
cld
dec
adc
testb
es
cmp
enter
movsb
pop
fnsave
xor
sub
movsb
add
into
pop
mov
mov
stc
cmp
xorb
mov
inc
pushf
int
and
xor
mov
test
divl
cmp
jp
lock
cmpl
pushf
xchg
push
xchg
dec
mov
fs
push
movb
jno
sbb
test
insb
js
mov
mov
ret
or
jmp
dec
xlat
mov
ret
jmp
sbb
aam
or
pop
push
push
aad
dec
pop
push
dec
outsb
xchg
sarb
bound
pop
pop
dec
inc
sahf
sahf
daa
stos
add
mov
dec
sbb
lea
fdivrp
jmp
out
bnd
jmp
cmp
popa
subb
mov
cmp
cs
sahf
or
cmp
xor
jmp
and
test
mov
xlat
pop
push
mov
jno
jmp
lods
mov
test
jmp
je
and
xor
ror
mov
test
cmpsb
push
xor
rcll
loop
adc
loop
inc
std
xchg
mov
jnp
aam
ret
xchg
ja
in
push
xor
xor
push
outsb
inc
mov
rorb
pop
mov
adc
out
sbb
jecxz
out
aaa
pusha
pop
int
gs
jmp
pop
mov
push
sbb
mov
push
hlt
subb
mov
add
mov
inc
and
repz
movsl
rcrb
fmuls
imul
shrl
add
adc
inc
fistpll
loope
stos
imul
popf
pop
mov
mov
pop
jns
addr16
jne
mov
cmp
ret
jo
cmp
mov
xor
xchg
lock
out
ret
sbb
pop
add
dec
popf
hlt
in
pop
out
repnz
ret
mov
in
dec
test
sub
popf
pop
repnz
or
mov
add
loop
divb
sbb
push
push
mov
lods
fnsave
sbb
stos
jo
cltd
ret
dec
add
addb
mov
inc
push
bound
cmp
stos
js
xorl
adc
stos
insb
loope
minps
outsb
xchg
sub
and
sahf
adc
fsubrp
ja
vmwrite
mov
push
stc
mov
pop
cmpb
stos
mov
int3
mov
xlat
xchg
jbe
lret
cmc
dec
int
jns
mov
and
push
or
sbb
leave
mov
xchg
jae
mov
scas
loopne
inc
jle
and
sub
mov
jmp
dec
mov
imull
xor
adc
mov
sub
call
mov
adc
dec
push
into
cmp
sub
dec
mov
frstor
filds
add
sbb
js
jle
mov
jo
rorl
out
jle
test
fdivrl
cwtl
mov
inc
vcvtdq2pd
jle
sub
sbb
xchg
cld
or
in
mov
daa
mov
fcompl
inc
xchg
jle
adc
js
adc
sbb
jb
inc
add
jae
test
ljmp
gs
cmp
fs
xor
cmpsl
xchg
shrl
xor
push
popf
dec
xchg
cmp
iret
out
mov
cli
xchg
mov
in
mov
mov
test
add
and
sub
imul
scas
test
xor
lods
pop
frstor
aas
xor
inc
push
rolb
pop
inc
popa
push
imul
adc
mov
addr16
push
push
es
dec
faddl
xchg
movsb
xor
mov
adc
sub
cli
or
xor
clc
das
push
jp
inc
jmp
and
mov
int3
mov
mov
jb
mov
xor
hlt
xchg
test
imul
add
mov
or
sub
adc
dec
dec
push
ss
cmc
pop
sbb
in
in
pop
mulb
lock
stos
mov
or
dec
loopne
ret
popf
jg
les
pop
sub
add
insb
dec
inc
ljmp
in
or
sbb
mov
and
jmp
xor
cmp
daa
pop
scas
pop
pop
cmpsb
test
push
push
xchg
adc
shrl
inc
add
or
outsb
xchg
mov
or
pop
jno
shrl
dec
jge
orb
xchg
sub
xor
mov
sub
stos
stos
pop
sub
clc
pop
xlat
inc
mov
xchg
fistpll
pop
cmp
pop
add
stos
andl
ret
or
in
cwtl
or
inc
les
xchg
xchg
sbb
lea
js
and
stos
xor
pop
int
stc
cs
loopne
arpl
cmp
and
lea
cs
sub
fisubrs
movsb
std
das
shrl
hlt
cmp
sub
pop
jnp
and
out
aam
or
pusha
sti
dec
andb
push
xor
xchg
xor
push
aas
adc
loopne
and
mov
sti
lock
sarl
shll
loope
cmp
or
inc
stc
xchg
jg
mov
mov
xchg
sbb
loope
cmp
dec
fwait
aad
imul
pop
push
in
xchg
out
xlat
addr16
int3
mov
mov
lahf
dec
xchg
bound
fildl
int3
cwtl
je
loop
xor
mov
mov
mov
sub
mov
test
inc
jge
ret
cltd
arpl
dec
ficompl
cmp
push
js
push
movsb
and
dec
cmp
or
inc
xchg
jae
or
scas
adc
lea
xor
sbb
loop
outsb
cmpb
mov
pop
pushf
jp
dec
mov
ret
and
pop
aas
dec
mov
das
adc
bound
mov
xor
mov
push
fbld
push
dec
das
dec
cwtl
shr
pop
out
ficoms
push
xor
xor
mov
fcomp
repnz
loope
rcll
incl
jbe
bound
imul
pop
arpl
or
inc
js
lret
xor
push
cmpsl
dec
mov
cmp
adc
cmp
stos
into
sub
or
inc
ret
jmp
jmp
imul
dec
sbb
les
push
adc
cmc
test
jle
push
bound
popf
pop
fistpl
iret
out
into
enter
inc
add
xchg
jecxz
sbb
out
cmp
inc
dec
lret
mov
out
push
cs
std
cmp
mov
push
jecxz
dec
adc
xchg
out
mov
inc
loop
mov
xchg
cmpsb
fadds
cmp
inc
push
mov
lcall
and
lcall
or
testl
cltd
and
and
mov
addr16
es
repz
fs
mov
gs
mov
pop
add
aam
dec
test
int
cmp
push
jmp
pop
xchg
insl
and
aad
cltd
sub
and
lret
fdivrl
ds
pop
fadds
and
xor
fstpl
pop
mov
je
sub
mov
les
xchg
mov
and
dec
mov
sbb
idivb
insl
addr16
inc
imul
mov
xor
movsl
pop
xchg
cmp
icebp
icebp
icebp
leave
gs
cmpsl
push
mov
stc
repnz
mov
push
cwtl
lahf
pop
fcmove
popa
xchg
gs
call
push
jae,pt
aaa
mov
xchg
repz
repz
aad
mov
adc
cmp
lret
lret
xchg
sbb
cmp
ficoms
lock
sbb
std
push
mov
pop
clc
lds
lods
push
notb
pusha
jno
ja
scas
or
aad
js
mov
mov
icebp
shrl
test
fwait
test
scas
arpl
loop
aam
lret
scas
test
out
iret
sbb
push
jbe
hlt
test
jle
popa
sahf
in
sahf
stos
cmpsb
inc
push
addr16
fxch
xchg
nop
cmpsl
loop
dec
pop
pop
cmp
cmpsb
jns
popf
push
mov
test
dec
imul
adc
jp
lea
jnp
sar
pop
fmul
add
xlat
ret
js
add
mov
adc
push
xor
pop
pop
arpl
cmc
popa
pop
out
rorl
call
or
leave
cmp
dec
adc
outsl
bound
sub
in
mov
push
and
mov
pop
inc
outsb
or
std
imul
es
cld
outsb
and
jae
mov
dec
mov
leave
jl
dec
dec
dec
sbbl
ficoml
call
iret
cmp
test
stc
in
pushf
add
lret
pop
lods
push
sbb
mov
jo
cmp
cmp
inc
pop
out
mov
add
dec
mov
sub
fmul
mov
negl
mov
das
and
inc
adc
lods
sub
push
mov
cltd
push
mov
cmpsl
jp
std
bound
fs
out
in
xor
idivb
sub
sub
fbstp
xchg
and
orb
cmp
mov
fidivl
jl
jnp
inc
cmpsl
or
test
push
push
cmp
faddl
or
pushf
inc
adc
jmp
aam
je
sub
mov
mov
jae
pushf
cld
iret
jecxz
pop
imul
xchg
fcmovnb
inc
stc
add
shrl
fistl
inc
jne
lock
mov
jmp
adc
test
cltd
clc
xor
push
push
add
xor
cld
dec
cmp
cmp
cld
insb
fs
xor
mov
popa
out
add
lock
push
jg
xchg
imul
loop
lcall
sub
iret
loopne
jno
xchg
inc
add
fcmovnbe
lea
fistpl
mov
ja
mov
mov
shll
dec
cmc
fisubl
mov
lahf
add
xor
lahf
sahf
arpl
sub
fidivl
lret
mov
shlb
hlt
pop
pusha
rcrl
fs
mov
aad
or
subb
dec
mov
xor
shll
push
push
fdivp
fdivrs
movsb
push
je
repnz
mov
lods
jns
hlt
add
fistpl
sub
movsl
out
cmp
adc
sub
dec
xchg
xchg
cwtl
pop
mov
mov
push
movsb
sarl
sarl
dec
mov
dec
xchg
mov
sub
insb
stos
jge
sbb
mov
xchg
pusha
pop
inc
loope
test
cmp
imulb
shll
mov
jle
sbb
ljmp
pusha
js
cmp
mov
inc
gs
dec
in
out
je
push
stc
test
inc
fisubl
mov
push
mov
sbb
js
sub
out
icebp
cmp
push
loopne
mov
or
cld
push
xchg
jl
cmc
pop
arpl
push
addr16
pop
mov
add
insb
sub
push
sahf
xchg
cmp
cmp
xor
cltd
jge
add
xchg
xlat
insb
repz
fldl
xchg
adc
mov
movsl
fimull
push
xchg
mov
movsl
out
aas
adc
aad
pop
ds
gs
scas
dec
das
popa
data16
fildll
mov
xchg
sbb
or
inc
adc
dec
aas
aas
dec
mov
or
pop
mov
iret
pop
lret
xor
jns
xchg
mov
pop
dec
negb
sub
mov
or
mov
shrl
lock
lods
adcl
adc
jno
cld
inc
and
mov
jg
shl
mov
imul
addl
push
push
fwait
push
mov
mov
adc
push
adc
bound
in
jae
add
insl
xchg
dec
pusha
aam
mov
xchg
pop
push
mov
lcall
sbb
lahf
popf
add
bound
dec
mov
add
mov
and
dec
rcll
nop
les
mov
adc
out
pop
xlat
js
popf
insb
icebp
sbb
and
rcll
push
and
sbb
cli
fnclex
mov
or
xchg
push
jno
and
js
cmc
jle
jno
xor
sarl
cmc
lods
mov
aam
xchg
xchg
mov
push
cmp
movb
inc
into
dec
or
stos
sbb
gs
mov
xorl
js
dec
pop
repz
mov
pop
push
xorl
adc
xchg
push
pop
cltd
orb
sub
sub
repnz
loop
negb
adc
stc
repz
lcall
out
lcall
adc
or
xchg
jno
hlt
sbb
arpl
sbb
mov
sbb
or
movsl
add
adc
push
adc
test
jae
or
push
lds
std
mov
add
or
pop
popf
insl
sarw
popa
fs
sub
fisubl
sub
in
jp
sub
pop
subb
or
mov
push
mov
jle
pushl
mov
loope
fwait
push
out
inc
jge
hlt
add
aam
imul
lock
pop
jnp
pop
hlt
xchg
cld
mov
mov
or
jb
mov
pop
cmp
movsb
inc
push
icebp
inc
insl
jecxz
std
pop
stc
mov
shrl
adc
or
and
fdivrs
neg
vmulps
cmpsb
pop
aaa
mov
mov
testb
lods
cmp
test
rcl
mov
out
inc
cmp
fwait
adc
shrb
arpl
or
mov
jle
aas
out
xchg
imul
push
pop
push
clc
adc
fldl
in
cmp
mov
shll
push
imul
sbb
or
inc
adcl
adc
pop
sub
xchg
and
das
je
mov
lods
rolb
call
hlt
gs
ds
mov
add
test
sbb
sbb
mov
mov
mov
and
sti
adc
aas
aam
clc
repz
test
inc
data16
jg
or
ss
pop
ss
dec
pop
jae
mov
cmp
mov
dec
mov
or
jno
sbbl
mov
inc
sub
inc
aas
out
test
inc
cld
cmp
mov
es
jnp
lahf
test
icebp
xlat
fisttps
lret
mov
daa
jmp
and
sbb
xchg
pop
hlt
outsl
movsb
test
push
rclb
push
cmp
sub
iret
popa
add
cmp
pop
cmc
pop
mov
fnsave
sahf
out
icebp
add
push
sti
rorb
stos
mov
cwtl
imul
dec
je
inc
cltd
adc
test
popa
gs
jp
sub
hlt
dec
xor
fimuls
das
xchg
mov
sbb
cmpsb
pop
sbb
mov
xor
mov
movsl
inc
add
jb
lret
fisubl
push
out
mov
leave
fninit
cwtl
and
ret
jmp
inc
jmp
xlat
xchg
cmp
and
jmp
mov
lahf
shll
scas
add
mov
xchg
in
jle
je
out
test
sub
rcll
ret
icebp
lea
or
popa
hlt
int3
popa
test
test
scas
push
ljmp
cmpsl
pop
sbbl
stc
jmp
jle
stos
push
stos
cmc
int3
jecxz
jl
adc
leave
xchg
mov
jge
or
lods
push
jp
divb
sahf
add
call
xchg
lea
stos
mov
cmp
mov
mov
lods
push
jne
sub
sub
fs
in
or
insb
rorl
mov
sbb
js
mov
cmpsl
push
push
add
mov
mov
loop
or
scas
or
sbb
xor
xchg
icebp
cmp
data16
out
push
jg
adc
fwait
out
push
pop
pushf
pop
add
or
mov
aam
std
and
arpl
in
mov
imul
jecxz
imul
loop
jmp
lret
pop
in
mov
out
ret
push
addr16
mov
addr16
or
dec
rorl
fisttpl
jmp
adcb
not
lret
mov
or
sub
pop
sbb
pop
int3
call
into
xchg
mov
lret
jle
mov
add
mov
cmp
loope
insl
and
aaa
mov
add
or
int3
adc
push
aaa
push
sahf
gs
xor
cs
test
int3
and
mov
leave
add
sub
xchg
cmpsb
mov
mov
loop
punpckldq
xchg
inc
mov
popa
xchg
push
iret
enter
inc
xchg
xchg
outsl
and
mov
into
sbbb
ds
jae
out
pop
aas
fnstcw
popa
aaa
cmpsl
out
cmp
jge
sarl
outsb
push
ja
xchg
adc
mov
ja
das
stos
insl
ja
es
fcmovne
pushl
mov
addl
dec
pop
arpl
rep
mov
mov
ljmp
stos
mov
nop
mov
mov
dec
lea
mov
sub
data16
fildll
sbb
jp
rcr
mov
xlat
inc
outsl
jns
andb
lods
mov
xchg
je
push
inc
mov
fimuls
jnp
xchg
mov
test
leave
fidivrl
sub
adcb
stos
scas
shll
sub
pop
push
nop
pop
les
jnp
xchg
and
add
jle
pop
xor
cmp
jnp
or
or
sub
jmp
push
mov
scas
flds
cwtl
adc
or
imul
adc
push
push
enter
push
or
cld
xor
cmp
in
cli
push
pop
stos
xor
mov
call
xor
inc
xlat
call
cmp
cmp
and
lea
cwtl
insl
mov
decl
or
xchg
fadds
fptan
or
das
cwtl
inc
jge
stc
sbb
lea
or
xchg
ljmp
jb
or
mov
cmp
lods
mov
clc
stos
data16
xor
out
out
cli
and
jg
sbb
and
out
insl
jno
nop
mov
dec
scas
adc
loopne
icebp
pushf
shll
lock
jns
into
ud1
aaa
ds
sbb
outsl
fsubl
sbb
cmp
test
pop
xor
dec
xor
gs
scas
cmp
hlt
mov
icebp
loop
icebp
mov
jl
int
insl
icebp
pushf
add
jno
jns
es
push
xchg
inc
daa
out
out
ret
test
and
jmp
add
adc
in
mov
pop
pop
xor
je
jmp
mov
gs
inc
and
mov
jmp
mov
dec
mov
mov
and
xorb
sahf
mov
cmpsl
or
xor
add
shll
xchg
inc
or
aas
push
repz
sub
push
dec
push
sub
cmove
dec
jo
movsb
outsb
sub
test
shrl
bound
into
imul
je
es
fadds
mov
std
aaa
cmp
sub
mov
ljmp
call
shrb
aam
sti
rcrl
loopne
mov
or
dec
adc
cmp
mov
xchg
push
icebp
dec
pop
phaddsw
movsl
fidivrs
jge
inc
sbb
sbb
mov
or
daa
test
pusha
incl
loop
cmpsl
mov
push
jb
popf
roll
int3
mov
icebp
cltd
lock
scas
lahf
prefetcht2
jns
loope
mov
mov
cltd
call
add
nop
loope
shll
jle
dec
lea
xchg
sub
ljmp
iret
push
mov
xchg
push
push
jno
jno
inc
insl
std
mov
mov
sub
pop
cmp
into
dec
jbe
xlat
cmp
scas
outsl
jb
xchg
and
data16
aas
ret
dec
in
outsb
push
out
leave
cmp
or
hlt
xchg
push
inc
add
cwtl
pop
jg
jbe
fisubrs
jle
loope
dec
test
sbb
aam
data16
lods
mov
xchg
jae
xor
stc
xchg
fldl2e
inc
pop
repnz
jae
jae
xor
in
xor
stos
mov
or
xor
jb
pop
out
xchg
es
gs
jnp
xor
mov
idivl
mov
pop
scas
dec
stos
ds
ss
push
or
pop
jb
stos
lods
dec
insb
daa
mov
xchg
mov
pop
hlt
data16
pop
cmpsl
outsb
outsb
ss
add
loop
aam
iret
ret
or
cmp
add
aad
cmc
imull
xchg
addr16
int3
mov
mov
dec
add
mov
in
or
enter
xchg
or
outsl
dec
popa
pushf
lret
popf
imul
mov
xor
sbb
shlb
inc
jae
xchg
add
sbbl
sbb
mov
shrb
shlb
stos
ret
cmpsl
xor
adc
xchg
sub
jmp
nop
sub
mov
call
leave
out
cmc
adc
and
test
js
pop
jne
pushl
movsl
hlt
push
stc
inc
test
loope
aas
or
push
rorl
cmp
push
lods
lcall
add
mov
xchg
rcrb
mov
jecxz
cmpsb
je
movsl
push
mov
hlt
cmpsb
repz
push
xchg
rcll
popa
cli
pop
rcl
add
push
shrl
cs
leave
mov
pushl
sti
addr16
lock
pop
pop
xchg
push
mov
or
pop
fnstenv
pop
outsl
enter
loope
lods
cmp
and
jmp
add
dec
mov
inc
movsb
xchg
and
sub
lock
out
sbb
sbb
push
fsubs
pop
stos
add
movsb
dec
or
enter
jle
and
mov
pop
dec
lret
nop
clc
dec
xor
in
xor
jmp
pop
push
ja
sbb
adc
adc
push
sbb
cwtl
lods
sbb
adc
sbb
mov
ljmp
shrl
mov
in
jp
adcb
cmp
mov
push
pop
cmpsl
das
mov
mov
jg
adc
dec
ret
loope
ficoml
nop
jae
cmpb
add
jae
add
and
adc
loop
jmp
roll
inc
sub
sti
flds
or
cmp
aad
icebp
adc
inc
ja
xchg
xlat
inc
pop
pop
and
mov
dec
cld
push
test
insb
iret
stos
pop
bound
sbb
jb
ret
mov
loopne
cmp
mov
jecxz
inc
iret
test
daa
das
in
ljmp
sub
xor
test
mov
inc
mov
push
inc
mov
mov
mov
cmp
ja
adc
cmc
ficompl
jg
aas
outsl
sbb
js
xchg
jne
pop
cmc
mov
xchg
xor
mov
jne
lods
out
popa
ljmp
lahf
out
fs
shr
mov
out
jns
xchg
add
cmp
rcrb
inc
movsl
clc
mov
mov
sbb
pcmpgtw
adc
lahf
xchg
push
inc
add
out
jg
inc
inc
mov
inc
test
stc
popf
mov
hlt
inc
shrb
mov
pop
and
push
scas
and
outsl
mov
pop
push
and
push
fists
dec
xchg
enter
xchg
cmpsl
sub
cli
iret
call
stos
or
xchg
int
xor
push
popa
cmp
push
lcall
cmp
jp
sub
jb
dec
stos
int3
je
ret
mov
push
and
into
leave
cld
adc
cmp
nop
fidivs
adc
sarb
sahf
fwait
addr16
xor
fsts
mov
test
std
lods
push
jl
push
cwtl
and
adc
jle
out
xchg
shld
push
jecxz
in
fnstenv
hlt
ljmp
xor
jns
sbb
push
iret
in
cltd
je
xchg
stos
out
aad
mov
into
test
iret
xchg
cmpsl
inc
repz
sub
loopne
dec
mov
es
lea
add
push
aam
not
mov
xchg
cmp
call
push
test
out
lock
inc
arpl
jl
mov
mov
or
pop
mov
jb
test
ss
mov
pop
sbb
or
flds
loop
movsl
orb
es
stos
mov
rorl
pop
mov
and
pop
test
pop
dec
movsb
fimull
mov
in
aam
test
cmpsl
jl
cmp
or
or
insb
outsb
ret
insl
or
or
push
aam
loope
jmp
or
dec
fildl
cmpsb
pop
push
pushf
ja
popf
repz
add
int3
pop
xchg
test
mov
cmp
popa
or
and
sbb
out
ret
inc
mov
cltd
or
stos
movsl
xor
gs
or
imul
out
ret
jl
mov
lahf
adc
cmc
shrb
call
xor
into
or
clc
js
dec
popl
fcomp
mov
sub
jecxz
mov
cmpsb
mov
mov
xchg
ds
mov
adc
cmp
cmpsb
mov
mov
imul
or
and
test
sti
sbb
cmp
outsb
mov
xchg
mov
int3
xor
jp
adcl
lea
push
adc
pop
aaa
sub
loopne
lret
adc
mov
dec
int
dec
or
or
aas
pop
lret
push
mov
rol
imul
mov
jp
movsb
out
out
js
add
cltd
rcll
sub
sub
shll
mov
loope
sbb
add
mov
or
sub
fdivrl
cmp
xor
jbe
es
ja
inc
jmp
add
and
les
popf
adc
ja
ss
and
in
outsb
or
jo
jl
into
stc
mov
je
fdivp
ss
faddl
jo
cltd
mov
pop
inc
mov
sbb
lods
adc
pop
inc
into
jp
and
sub
sti
mov
mov
dec
int3
adc
lods
xor
push
cld
mov
aam
mov
xchg
aaa
adc
lds
cld
mov
std
mov
fsts
mov
loope
aam
addl
cmpsb
nop
test
adc
mov
lret
sbb
pushl
push
aam
repz
fimuls
cltd
mov
outsb
aad
adcl
jecxz
inc
fmuls
lret
aad
pop
outsb
lahf
or
cmp
mov
imul
add
jnp
inc
jb
adc
xadd
loop
mov
dec
rcrb
xchg
or
lds
test
add
and
fiadds
dec
pop
or
mov
clc
stc
mov
mov
and
push
negb
movsb
mov
and
negl
rcrb
adc
add
enter
mov
xchg
dec
xchg
add
push
ret
add
stos
fisubs
fcom
sbb
jmp
push
roll
out
jecxz
lds
js
jnp
pop
rcll
mov
inc
inc
pop
shll
sub
adc
push
adc
mov
cmp
pop
mov
pop
orl
gs
sbb
ret
in
xchg
cld
xor
mov
mov
adc
inc
lods
imulb
sbb
dec
sub
imul
mov
ja
push
repnz
clc
movhlps
pop
dec
xor
inc
or
lods
lods
jcxz
cmp
lret
pop
lret
mov
scas
adc
shll
je
scas
inc
cmp
lods
lea
mov
out
cwtl
inc
mov
mov
insl
aaa
inc
or
push
jle
pop
mov
jnp
cmp
dec
arpl
icebp
xor
ljmp
cmc
repz
cmp
sub
cmp
dec
shll
xchg
into
sub
out
xchg
jecxz
in
pusha
lods
jnp
repnz
adc
or
mov
jle
pushf
gs
xchg
jecxz
outsl
out
xor
hlt
ja
sub
cmc
mov
cmp
lock
scas
cmpsl
test
sahf
jne
inc
jg
enter
cmp
je
add
inc
xor
inc
inc
mov
add
pop
add
stos
jl
cmp
pop
lret
mov
sub
xlat
xchg
aas
into
inc
mov
insl
or
cwtl
sarl
pop
pop
pop
sti
sbb
mov
aad
sbb
or
outsl
bound
imul
div
cmp
int
mov
mov
sub
ret
xchg
mov
mov
stos
out
mov
lret
fiaddl
stc
lea
popa
dec
push
pusha
cmp
repnz
pop
iret
rorb
or
sbb
insb
fwait
cmp
add
mov
gs
mov
add
lret
in
jmp
mov
mov
pop
sarb
outsl
in
mov
and
cs
aam
mov
lret
dec
xor
mov
fldz
xorl
push
lcall
lahf
ds
insb
xor
roll
or
mov
daa
imul
pop
adc
mov
adc
outsb
rclb
inc
adc
pop
sti
cmpb
lret
inc
repz
lods
ja
mov
jne
dec
std
xchg
fidivs
jb,pt
outsb
aaa
ljmp
mov
xchg
jbe
fisttps
stos
pop
in
js
push
pop
int
loope
ret
add
adc
ss
addr16
and
push
out
pop
daa
push
mov
iret
ss
outsl
aaa
cmp
push
push
inc
test
sbb
stos
cmpsl
push
adc
jp
pop
rorl
jle
bound
hlt
stos
or
push
ss
cwtl
stos
mov
inc
and
repnz
cmp
xor
je
lods
mov
add
push
hlt
andb
aam
xchg
popa
mov
jmp
dec
aaa
pop
and
dec
fcomps
es
jecxz
xor
inc
xor
mov
sbb
inc
adc
pusha
js
inc
sub
adc
je
xchg
movsl
clc
mov
add
sub
lret
test
les
xor
ss
fistl
in
test
cmp
dec
cs
les
gs
dec
sub
sub
shll
add
scas
adc
inc
mov
sbb
fs
and
gs
pop
ds
inc
push
jo
sti
movsw
fwait
push
mov
adcb
inc
xchg
xorb
movsl
fs
add
jl
test
xchg
aam
mov
in
adc
packssdw
stc
mov
xchg
push
push
dec
or
and
xor
cld
les
sbb
daa
sub
xor
aam
pop
fldl
dec
add
jmp
les
lahf
mov
js
sub
scas
mov
mov
adc
mov
leave
pushf
inc
loop
addl
pushf
push
dec
data16
std
scas
sbb
int
int
inc
enter
aaa
mov
sbb
pop
and
mov
outsl
rcr
faddl
jl
rclb
icebp
adc
lret
shll
pop
imul
sbb
pop
dec
subl
loope
inc
loop
scas
jl
nop
js
inc
mov
out
or
stos
add
andb
push
in
mov
cmp
icebp
outsl
rcl
inc
call
xlat
xor
test
mov
cmpsl
cmpsb
test
cli
pop
mov
dec
and
loope
jo
sbb
mov
into
adc
mov
mov
push
pushf
cli
std
in
lea
cmp
inc
push
add
dec
testl
inc
int3
test
insb
xchg
mov
pop
subb
cli
push
outsb
mov
dec
xchg
sbb
rolb
stc
in
lock
sahf
int3
pushf
mov
dec
sub
push
lds
stc
cmc
pusha
mov
rolb
fbld
xchg
es
dec
cmovno
insb
or
fsubp
bnd
inc
stos
insb
das
fwait
adc
pop
jne
mov
xchg
dec
sbb
mov
cmp
push
jae
xchg
or
cmpsl
out
cltd
js
jb
or
sbb
pop
daa
sub
and
or
test
in
cmp
sub
mov
dec
out
je
mov
sbb
dec
and
jle
adc
lock
push
jg
xor
and
shll
mov
xchg
out
jnp
sub
sbb
xlat
sahf
fs
xorl
movsl
mov
mov
sbb
ja
lds
jle
pop
mov
enter
cmp
out
scas
cmc
lods
push
jle
call
loopne
rclb
lods
nop
adc
adc
dec
dec
mov
pop
into
and
add
mov
addr16
adc
scas
test
mov
shlb
repz
lcall
xchg
imul
fiadds
aas
test
ret
sub
pop
fidivs
cmpsl
cld
cmp
sub
add
jg
ds
push
lods
hlt
push
das
pusha
lea
xchg
and
loop
xchg
fwait
cmp
and
loop
shll
stos
jae
arpl
sub
loope
add
aaa
cld
push
mov
cmp
pop
push
jecxz
jge
sub
cli
lcall
push
fs
dec
aad
push
std
stos
into
shl
dec
jns
aas
push
les
int3
sub
cld
and
pushf
mov
data16
lds
sbb
gs
dec
xchg
ja
enter
push
mov
js
fsts
pop
jle
cmp
ja
fnstcw
loope
ja,pt
mov
inc
jno
aam
push
xchg
fwait
jg
fyl2xp1
arpl
or
leave
repnz
pop
clc
and
and
jae
cld
mov
lods
mov
cmpsb
mov
dec
ficompl
xchg
hlt
jnp
addb
outsb
bound
mov
repz
data16
fsubr
jnp
xor
cmp
fwait
mov
ficoml
aaa
push
mov
std
sbb
pop
addr16
sarb
xchg
mov
mov
and
bound
out
mov
mov
push
stos
out
popl
mov
fmuls
in
xor
aam
int3
das
inc
fstpt
loopne
pop
fiadds
jge
jecxz
movsb
loope
cmpb
dec
je
mov
cld
sub
insb
int3
mov
outsb
leave
xchg
mov
into
pop
sub
jecxz
lahf
push
xchg
out
dec
loope
pop
loopne
mov
jno
in
push
xor
add
mov
mov
movsb
push
into
push
mov
out
push
pop
push
jbe
sub
jg
add
push
out
inc
call
icebp
push
xor
lods
int
shll
mov
loopne
mov
cmp
cld
jae
pop
daa
jl
sbb
xlat
es
test
popf
hlt
mov
xorl
mov
fisubrs
pushw
lahf
and
mov
add
mov
cli
sarb
mov
xor
mov
scas
gs
lret
mov
xchg
mov
mov
call
mov
cltd
es
cmpb
or
or
mov
xor
xor
shll
jo
adc
mov
sub
leave
add
bnd
lahf
push
or
in
rcrl
int3
mov
ret
mov
cmpsb
sbb
mov
pop
iret
aaa
dec
xorl
mov
ret
push
out
inc
outsl
out
rolb
mov
imul
add
mov
lret
pushf
mov
idivl
mov
sub
push
sbb
test
ja
movsl
hlt
mov
sub
ja
jmp
lds
mov
cmc
sbb
mov
shrl
cmc
je
dec
xchg
stc
mov
jne
adc
cmp
mov
xchg
ret
dec
loope
scas
repnz
mov
cmp
sub
dec
cmpsl
insb
adc
out
xor
inc
push
cmp
cmp
cmpsb
popa
rorl
add
outsl
stos
dec
popf
rcr
movsl
stc
hlt
and
xlat
in
mov
push
outsb
mov
shr
cmp
mov
sbb
loop
repz
add
mov
jl
dec
and
ficomps
inc
and
in
scas
push
pop
fcomps
inc
mov
sub
jecxz
mov
sarb
bswap
loopne
lret
cmp
repz
dec
mov
jo
mov
les
dec
fs
mov
add
rolb
cs
lret
das
mov
jl
int3
test
out
adc
pop
es
jae
adc
lods
orl
cmc
aad
ds
cmpsl
data16
inc
cmp
fsubrl
sahf
sub
cmp
push
mov
push
lahf
or
adc
ficompl
pop
test
lea
pop
jmp
iret
in
and
jo
sub
sub
fnsave
and
xlat
mov
sbbb
mov
rep
loope
dec
or
clc
into
rcrb
pop
dec
cmp
std
stc
jmp
cwtl
and
dec
test
orb
pop
jo
insb
popf
lds
loopne
xor
pop
hlt
and
mov
pop
jae
add
add
rcrl
testb
test
js
vpavgw
push
push
mov
xchg
fcmove
aad
stos
add
test
xchg
loopne
mov
les
and
pop
fdiv
cmp
push
jg
shl
stos
ret
insb
pop
fdivs
lahf
mov
xchg
int
inc
push
inc
add
mov
dec
add
pop
mov
inc
and
hlt
adc
ss
lds
data16
sub
xorl
jp
lods
cltd
cltd
scas
xor
gs
das
sbb
pop
pop
jnp
push
lret
xor
mov
sub
jbe
pop
mov
in
and
cmpsl
dec
js
imul
jnp
and
roll
addb
fcmovb
into
ficoml
adc
lods
int
data16
inc
sub
push
cld
push
scas
mov
sub
cltd
xchg
test
and
mov
insl
xchg
mov
pop
dec
jne
xchg
movsb
pushf
and
mov
lcall
lds
les
in
adcb
mov
add
adc
aaa
xchg
jne
jmp
jl
cltd
jbe
mov
fnstenv
aad
add
lret
adc
das
das
mov
cltd
enter
inc
aaa
inc
in
mov
insl
test
insb
xchg
in
outsb
insl
mov
mov
cli
iret
xchg
jno
lret
jnp
mov
pop
jb
xchg
ljmp
aaa
cwtl
fisubrs
int3
stc
pushf
pop
dec
bound
push
decb
cmp
shrb
aad
push
iret
mov
loope
out
ret
stc
ret
aam
sub
xor
insl
mov
or
pop
inc
mov
mov
dec
cmp
mov
sub
pop
cmp
dec
scas
imul
incl
pop
mov
jg
aad
lods
or
lret
xorl
icebp
jns
fsubrl
dec
add
cmpsl
ficoml
jnp
movsl
cld
dec
lahf
xchg
mov
popa
cmpsl
adc
jl
dec
xchg
divl
cwtl
std
sub
nop
xchg
scas
pushl
repz
jb
aaa
and
mov
xor
negl
fiaddl
adc
ror
mov
std
aad
ficompl
call
and
mov
insb
or
mov
jl
sbb
stc
sub
cmp
and
cltd
insb
or
push
jae
mov
and
and
into
xlat
sub
mov
lock
pop
sbb
sti
fldl
test
mov
movsb
mov
pop
lahf
notl
and
jp
repz
cltd
xor
push
inc
mov
lods
push
mov
call
mov
xor
aam
push
sub
sub
lret
add
jnp
sbb
add
into
and
in
loop
or
dec
cmp
arpl
imul
dec
loopne
and
cmp
insl
dec
xor
insl
push
lcall
add
js
cmp
cmp
sub
inc
xchg
aad
mov
clc
pop
push
rorb
mov
push
incb
nop
mov
push
subl
push
test
sbb
scas
xchg
stc
xlat
test
fcomp
fsubrs
call
dec
lahf
mov
lcall
leave
popf
cmp
nop
popa
xor
mov
pop
xlat
ljmp
mov
cld
jge
and
cmp
popf
scas
mov
lcall
jae
sub
jmp
int
incb
push
adc
add
arpl
imul
insl
mov
jnp
jecxz
int3
mov
aas
push
add
xor
and
shll
mov
scas
popf
test
dec
add
dec
mov
outsb
jae
movsb
aam
inc
sbb
call
jns
pop
dec
out
xchg
stos
xor
or
fnstenv
or
movsl
xor
push
adc
xchg
jne
frstor
inc
aaa
scas
je
mul
negl
mov
test
sub
push
aaa
out
or
cmp
jl
pop
sarl
and
xor
lea
dec
dec
adc
insb
nop
jecxz
cli
mov
sbb
dec
cmp
mov
cmc
rcrl
dec
insl
sub
xlat
xor
sbb
ret
insb
cmp
push
push
cmpsl
jl
scas
cmp
mov
mov
ss
push
sbb
sbb
xor
add
bound
loope
push
jno
and
sub
jbe
mov
dec
in
fstp
int3
ljmp
push
jb
xor
or
cmpsl
fdivrs
bnd
xor
mov
jmp
adc
push
and
bound
sti
iret
jnp
aad
out
call
push
idiv
cs
negl
ljmp
jnp
and
aaa
and
stc
push
in
dec
ret
mov
nop
push
push
sarb
mov
add
cmp
xor
jle
xchg
subl
cmp
xchg
into
lods
dec
imul
rorb
pop
or
test
add
mov
sbb
mov
jmp
mov
mov
and
adc
rolb
push
mov
xor
xchg
jno
push
xchg
sbb
aaa
jl
dec
and
lock
sti
movsb
xrelease
adc
and
push
insl
scas
push
sub
push
data16
test
push
repz
gs
jb
mov
adc
jno
jl
mov
inc
loope
call
scas
mov
cmp
int
jae
xchg
inc
cmpsb
leave
xchg
mov
inc
inc
cs
sub
loop
fiaddl
ret
ljmp
mov
add
mov
sub
scas
imul
lock
and
rcll
pop
addr16
and
sub
inc
cwtl
lock
jg
mov
aad
jbe
fsubrs
nop
pop
xchg
dec
adc
jg
dec
addr16
jne
movsl
fs
mov
inc
adc
push
insb
push
mov
ds
shr
test
jns
popa
jns
cmpsb
mov
mov
sub
xchg
mov
add
and
repz
push
lock
mov
pop
fmull
cmpsl
stos
movsl
add
ja
inc
testl
shll
mov
cmpsl
adc
ss
push
and
push
outsb
jp
popf
sub
out
int3
movsb
pop
je
sub
aam
popf
fsubl
and
imul
sub
mov
popf
cmp
push
cmp
cmpsl
sub
arpl
adc
push
xchg
adc
jmp
jmp
and
push
mov
add
int3
es
cmpsb
mov
inc
sub
dec
test
fwait
push
es
add
inc
or
inc
flds
imul
mov
and
scas
ja
jmp
clc
hlt
jge
loopne
aas
add
adc
xchg
iret
imul
add
loopne
imul
mov
inc
sub
mov
insb
lods
jns
pop
mov
shlb
sub
shl
mov
cmpb
imul
jne
push
out
jg
pop
adc
nop
xor
sbb
test
pop
mov
std
pop
arpl
fsubl
fldcw
leave
or
icebp
loopne
data16
aas
and
fidivs
loope
jmp
aas
sub
cltd
dec
push
pop
sbb
dec
icebp
xchg
stos
xchg
add
mov
notl
cmp
xchg
insl
dec
rolb
or
jle
inc
add
jp
mov
dec
or
shl
mov
xchg
add
mov
into
push
xchg
sbb
jl
aas
clc
or
imul
and
adc
or
arpl
push
sub
jns
into
inc
daa
adc
push
scas
inc
push
and
lds
in
arpl
add
int
sbb
cmp
ljmp
lret
gs
shr
jle
test
sbb
andl
bswap
add
mov
dec
ja
lods
test
popf
sbb
inc
scas
jle
mov
cwtl
andl
ljmp
loope
out
pusha
fwait
xor
inc
mov
std
ds
pushf
inc
adc
je
sub
out
adc
xchg
and
lods
ljmp
xor
mov
clc
sbb
lahf
sub
jmp
adc
stos
imul
pop
jo
mov
cmpsl
cmp
mov
sbb
test
or
fcomp
push
jp
loope
popa
sti
cmp
inc
cs
mov
mov
mov
fnstsw
xorb
data16
into
jmp
sub
mov
imulb
orl
cmc
scas
imul
inc
mov
mov
mov
sbb
sarb
mov
leave
push
pop
mov
popa
lret
sbb
clc
xchg
jne
jnp
nop
push
daa
out
cmc
stc
pop
inc
xchg
push
dec
cmp
in
jo
ljmp
cmc
sbb
movsl
adc
fidivl
arpl
cmpsl
ret
in
dec
push
aad
rcrb
xchg
out
xor
test
xor
sub
fwait
sbb
loop
jns
jae
sub
xchg
mov
fimull
bound
loope
mov
cs
mov
test
pushf
xchg
mov
push
mov
jmp
push
lea
pop
sub
cmc
cltd
mov
jno
xor
push
sub
push
pop
mov
push
lods
push
out
add
jne
sbb
ljmp
cmp
sbbb
lea
xchg
lds
mov
scas
aaa
mov
jp
sbb
sti
mov
test
push
adc
fwait
out
xchg
and
rorb
lea
mov
jg
imul
je
push
cli
and
jmp
in
dec
loope
and
iret
cld
imulb
or
add
int3
stos
sub
add
and
mov
mov
dec
cwtl
mov
xor
neg
jnp
pop
das
cmp
aaa
mov
lret
mov
mov
adc
cmpsl
fdecstp
inc
sbb
pusha
addl
mov
dec
mov
cmpsb
gs
inc
test
xchg
call
jle
mov
push
and
stos
xor
popf
pop
xor
jle
fiaddl
es
mov
cld
mov
jb
mov
int3
je
enter
add
xchg
in
aaa
mov
enter
sub
jno
rcrl
dec
xor
xor
mov
repnz
dec
shrb
or
inc
pop
lahf
enter
add
fldl
cmpl
inc
jle
dec
scas
mov
je
icebp
jp
mov
shr
int
and
andb
sbb
mov
lcall
jnp
pop
mov
pop
xchg
in
insb
mov
adc
inc
cmp
ds
push
push
or
shll
cmp
aam
cwtl
ss
push
or
sub
pop
mov
subb
mov
add
cwtl
mov
adc
mov
into
call
add
ds
test
addr16
cmc
enter
inc
test
rcll
loop
mov
lahf
iret
or
xchg
xlat
cli
and
shll
pop
adc
cmc
bound
pop
mov
dec
adc
imul
addr16
scas
mov
xchg
roll
sbb
mov
xor
mov
cmp
mov
insb
stc
mov
dec
data16
mov
andl
jae
add
mov
and
imul
sub
adc
xor
leave
jge
ret
loop
sub
out
mov
lret
iret
xor
mov
sub
mov
out
inc
mov
lods
imul
repz
adc
jae
popa
sar
lods
in
sbb
and
pushl
loop
aad
jge
test
leave
pop
dec
fmul
sahf
in
scas
std
jp
ds
fiaddl
bound
cmp
imul
inc
mov
mov
movsb
rcrb
add
repz
add
int3
aad
dec
add
pop
iret
cmp
ljmp
test
mov
jl
fdivrs
dec
push
sbb
lret
dec
add
cmp
pop
je
cs
imul
xchg
push
icebp
xor
ss
cmp
imul
leave
mov
sbb
lods
mov
sti
ja
sahf
jle
insb
mov
inc
shll
ficoms
cmp
fdivs
imul
jle
cmc
cmp
outsl
test
fsubr
mov
bound
test
or
test
cmp
bound
scas
pop
sbb
addl
movsb
clc
in
popf
and
mov
aam
adc
clc
aaa
mov
xchg
and
dec
pop
xchg
inc
sub
push
add
enter
adc
les
cmp
sub
inc
push
test
movsb
sub
jecxz
pop
insb
rolb
inc
jo
test
xor
inc
xor
das
pop
sbbl
movsb
in
repnz
and
roll
mov
and
sti
out
jnp
iret
pop
popw
out
jmp
aaa
mov
adc
xchg
sarl
loopne
cmp
and
ud2
fwait
jmp
std
xor
hlt
addr16
jecxz
call
adc
cmc
fstp
xor
stc
js
arpl
ss
clc
fwait
test
lods
sbb
leave
ljmp
out
push
pop
mov
mov
sub
vmread
adc
sbb
pop
mov
out
loope
pop
push
inc
in
mov
icebp
mov
pushf
mov
or
stc
adc
jp
dec
ret
enter
ds
int
movl
lcall
sbb
xor
adcl
scas
add
mov
loopne
or
push
lods
jmp
dec
imul
sub
mov
test
ret
cwtl
clc
add
push
sbb
sti
into
aad
mov
pop
and
jne
fdiv
cmp
mov
inc
out
jl
lret
xor
clc
lock
push
xchg
jg
or
mov
loopne
jnp
mov
rol
add
mov
dec
lahf
xor
dec
sbb
lea
es
and
std
ljmp
fsubs
xchg
daa
out
cs
ljmp
ds
mov
fxch
sbb
divb
push
push
dec
push
lock
pop
loopne
call
ret
push
in
jmp
inc
lret
or
mov
xchg
gs
jbe
xchg
mov
push
cmp
mov
fcoms
int3
test
pop
mov
mov
ja
in
push
lods
jg
xchg
xor
inc
sbb
mov
push
mov
mov
mov
ja
jno
dec
pop
rclb
out
test
std
es
aad
adc
sub
sahf
cmp
push
adcb
and
insl
cltd
in
dec
fistps
dec
clc
xchg
mov
clc
lcall
inc
add
setg
push
sub
mov
bound
jmp
addr16
and
or
pop
sub
fists
sub
add
mov
loopne
ret
dec
mov
sub
call
mov
and
cmp
adc
data16
and
mov
cmp
and
ljmp
xor
mov
inc
jno
inc
sub
cld
xlat
inc
dec
mov
lods
movsl
fidivl
sub
clc
loope
iret
push
push
and
ds
adc
data16
stos
add
lret
outsl
cmp
adc
outsb
pushf
not
popa
adc
rcll
mov
pop
cmpsl
test
ja
sarb
lcall
jo
or
xchg
xchg
pop
incl
sub
sbb
lods
fldt
inc
pop
and
rorl
cwtl
mov
push
add
or
iret
pop
es
int
imul
jno
iret
inc
scas
push
mov
adc
and
shlb
jne
and
xor
add
xchg
std
daa
fstpl
jl
mov
dec
pop
mov
add
enter
jo
and
sub
mov
cmp
push
aam
stos
add
push
in
fildll
sub
fwait
jbe
and
int3
add
in
in
dec
ds
in
test
or
test
push
enter
jnp
mov
sahf
repz
in
lahf
mov
jne
sub
sbb
push
jae
jo
push
fcomps
fstps
lcall
adc
fisubrl
adc
push
testl
roll
dec
sarb
nop
test
mov
adc
mov
and
pop
add
jg
pushf
repz
sbb
xchg
popf
ds
lahf
push
loopne
ja
adc
mov
mov
gs
xor
mov
mov
sbb
frstor
cli
push
leave
mov
mov
cwtl
adcl
mov
cmpsl
ja,pn
lea
cwtl
data16
xchg
jle
mov
mov
nop
shll
mov
mov
inc
xchg
dec
cmp
add
mov
adc
push
dec
cmovo
dec
mov
fdivrs
in
test
and
or
xchg
push
mov
dec
imul
or
fwait
jmp
es
sahf
xlat
mov
mov
jb
ficoms
adc
clc
push
cmp
out
arpl
sub
mul
push
jge
ret
in
movsl
mov
scas
sbb
inc
lret
mov
mov
shll
xchg
pop
xchg
jge
add
enter
adc
mov
cmc
test
repnz
stos
lds
cltd
mov
in
lds
jo
adc
loopne
test
xchg
ret
in
jecxz
mov
out
das
ja
pop
xor
or
fisttpl
jb
adc
sbb
in
loope
push
clc
sub
cmp
jb
in
stos
sarl
inc
cli
push
rcrb
shl
rolb
sub
xchg
xor
inc
or
sti
mov
cltd
lahf
lds
xchg
jnp
fisubl
sbb
data16
jb
push
loope
ret
jmp
cmp
ds
adc
inc
jp
sbb
cmpsb
cli
mov
fs
int
mov
jmp
inc
emms
iret
aam
insl
xchg
pop
adc
ret
inc
dec
adc
fs
popf
testb
in
pop
cmp
xor
int3
mov
fs
pop
mov
incb
call
aad
cli
daa
es
enter
dec
sub
jns
mov
jl
push
adc
les
or
push
cwtl
sbb
sub
mov
aam
adc
hlt
je
aad
add
adc
xchg
loope
pop
add
push
or
imull
enter
xchg
je
dec
mov
xor
add
push
jb
xchg
pop
popa
aam
pop
clc
addr16
xchg
mov
adc
in
inc
lcall
jno
stos
into
lds
lock
scas
out
test
mov
ss
mov
pop
dec
cmp
inc
outsl
push
xchg
cwtl
icebp
cmp
cmp
push
pushf
jnp
cs
jnp
mov
inc
mov
add
xchg
sbb
xor
adc
mov
or
pop
in
xor
mov
jne
into
or
es
inc
mov
es
add
jb
inc
fmuls
mov
inc
mov
cmpsw
loop
mov
inc
loopne
aad
mov
data16
daa
cmpsb
lods
dec
fsubrl
cld
scas
cmpsl
pushf
leave
mov
jle
cmc
bound
lcall
push
and
pop
xlat
testb
xor
mov
pop
xchg
push
arpl
leave
movsb
lock
adc
loope
jg
test
xchg
adc
arpl
cltd
arpl
mov
hlt
mov
push
xlat
pop
push
mov
mov
lods
ret
inc
or
in
enter
sbb
icebp
mov
pop
inc
mov
cwtl
pusha
rclb
ret
je
lods
ds
fdivs
insb
push
and
mov
add
iret
ret
std
popa
push
int
mov
in
call
adcl
sarb
adc
lahf
push
scas
mov
aaa
push
jno
inc
add
inc
pmulhw
je
jmp
mov
xchg
ret
xchg
in
sub
adc
imul
xchg
adc
repz
ret
in
call
mov
dec
movsb
mov
jmp
aam
jno
daa
enter
mov
insl
mov
out
cmp
lods
add
out
sbb
inc
fstps
xor
dec
mov
roll
into
pusha
mov
mov
mov
lret
ret
xchg
push
stos
cmp
dec
xor
lret
ret
inc
inc
add
std
push
fcom
int3
mov
pop
insl
fisubrl
dec
xor
or
dec
fsqrt
loope
cmp
imul
paddsb
xchg
push
cmp
mov
xlat
push
dec
xor
inc
das
jmp
mov
inc
ret
xor
in
sbb
or
xchg
mov
cmpsl
mov
lods
pop
xchg
insl
inc
dec
mov
addr16
test
sbb
cltd
inc
int3
pop
icebp
dec
pop
nop
cmc
add
or
adc
sub
mov
xor
int
inc
sbb
jae
dec
dec
add
repnz
pop
shll
cmp
mov
or
repz
and
in
mov
ds
outsl
js
jmp
add
dec
aas
push
repz
in
or
ljmp
adc
sbb
adc
and
sub
pop
jbe
jle
inc
adc
popw
xchg
pop
lods
dec
in
push
sub
lods
mov
mov
nop
push
sub
loop
cltd
and
lods
popa
or
or
stc
mov
or
mov
push
sub
push
adc
push
incl
jbe
lods
out
mov
mov
pop
ret
or
pop
pop
add
fimull
cwtl
rcrl
mov
xorl
pop
xchg
adc
or
fnstenv
xor
call
cmpsb
xchg
aam
mov
push
dec
les
pop
test
mov
int3
and
orps
add
daa
xchg
bound
dec
mov
mov
fmul
inc
daa
or
xchg
arpl
dec
popa
mov
inc
mov
rclb
cmp
iret
push
ja
sbb
adc
pop
or
js
repz
lcall
sub
and
in
pop
push
cmp
xor
sbb
xchg
or
xchg
ret
adc
sbb
or
jp
out
adc
inc
bnd
daa
incl
inc
out
mov
sub
out
mov
dec
jecxz
jecxz
xchg
out
mov
mov
leave
mov
call
mov
and
bound
xor
cld
pop
lret
add
mov
add
insb
repnz
rcl
cmp
jbe
xchg
sbb
add
stos
ret
rol
sbb
les
push
dec
mov
sub
inc
xor
icebp
out
mulb
imul
pop
test
jmp
pop
mov
mov
mov
cld
or
dec
xchg
scas
in
nop
in
rcrl
mov
add
stos
or
jge
sbb
divl
int3
jmp
arpl
shrl
mov
lds
lock
pop
inc
mov
pop
shll
stos
mov
jg
mov
sub
dec
lcall
clc
popa
bound
adc
mov
shll
adc
cmp
mov
in
rclb
fdivl
xchg
sub
imul
and
cmp
mov
inc
insb
rep
dec
out
imul
stos
and
mov
fmulp
adc
stos
sbb
pop
xchg
xchg
xor
stos
sub
test
mov
sbb
push
gs
or
sti
pop
popf
mov
loop
fs
mov
and
popf
cld
ret
rcrb
movsb
mov
cmp
pop
inc
mov
xlat
lahf
mov
daa
cwtl
mov
fwait
shrb
xchg
popf
test
mov
js
lahf
stos
data16
mov
sub
push
add
jne
mov
out
js
nop
mov
ret
jg
shll
imul
mov
cli
out
out
icebp
fsubl
fiaddl
js
mov
jg
negl
mov
daa
inc
add
dec
stos
insl
popf
push
push
sub
sub
push
leave
out
dec
fisubrl
mov
push
mov
cmp
out
adc
popf
and
xchg
enter
push
addr16
push
ret
in
sbb
ret
and
pushl
xor
xchg
sub
stos
mov
jne
jb
movsl
arpl
outsb
ljmp
into
lret
mov
imul
jno
pop
test
jg
cltd
jns
repz
jmp
jp
loopne
ficomps
lds
sbbl
sub
imul
fistps
push
dec
mov
loope
sub
movsl
out
lock
lret
fistps
jg
scas
fs
mov
call
xor
xor
dec
push
mov
lods
cli
mov
pop
je
jne
sub
mov
dec
fmulp
mov
mov
mov
sbb
sub
push
jno
push
repz
pop
xchg
pop
push
stc
notb
cmpsb
and
push
rcl
fadds
daa
repnz
or
rcr
pop
jo
nop
in
sar
mov
sub
sbb
into
psubb
jns
pop
mov
mov
xchg
push
mov
or
xor
xor
cmp
and
push
xor
test
sub
push
insb
push
sbb
sbb
push
lret
ret
push
dec
jo
ret
jns
in
jnp
sbb
push
adc
ds
inc
fimuls
std
cmp
dec
cld
stos
fcmovnu
aas
inc
test
jge
pop
mov
add
ror
fs
std
iret
sbb
pop
int
jmp
andl
cmp
dec
int3
nop
mov
and
add
mov
test
jns
fildll
cs
adc
jge
ret
negl
loop
cli
fadd
pop
add
dec
movsl
clc
push
mov
add
jg
jae
xor
shll
jecxz
mov
fdivrl
scas
lods
mov
daa
popf
das
pop
mov
lcall
jnp
push
mov
mov
cmc
hlt
stc
popa
std
jp
cs
ss
add
les
aas
rclb
ss
add
stos
loop
mov
aad
subb
out
and
push
in
or
loop
scas
adc
leave
add
jg
lret
fisubrs
lcall
in
test
pop
jg
and
pop
xor
stos
adc
cmp
cmpsl
fbld
or
std
pop
xor
iret
aaa
mov
cs
or
inc
pop
das
jmp
cmpsl
dec
cwtl
pushf
push
push
das
xor
lret
daa
repnz
adc
mov
scas
stc
push
pusha
adc
jl
pusha
js
push
repz
lahf
sti
jmp
sahf
and
fcomps
cmp
paddsb
mov
adc
xlat
fcmovnu
cmp
iret
push
jg
aas
scas
or
cmp
pop
fcmovnu
fistpll
mov
lods
mov
dec
sub
xor
push
and
popf
test
leave
loopne
mov
iret
ljmp
out
icebp
lock
mov
loopne
mov
inc
mov
xchg
shlb
rolb
and
loope
xor
hlt
add
leave
jne
movsl
addr16
shlb
push
and
mov
add
add
sbb
adc
xchg
lcall
push
mov
xchg
dec
test
cli
add
shlb
or
in
push
stc
and
loop
inc
gs
call
mov
push
pop
loop
mov
push
std
lds
inc
adcb
popf
add
jno
and
and
shrl
cld
mov
inc
test
jae
cmpsl
mov
loop
push
xchg
test
xchg
sub
nop
mov
mov
outsl
int3
ficoms
imul
xor
aas
pop
mov
lret
loop
mov
in
mov
and
repnz
mov
sbb
lea
and
push
dec
leave
pop
jmp
addr16
add
push
mov
sbbb
pushl
insb
mov
fsubs
sub
sub
shrb
xlat
hlt
sahf
push
or
fisttps
pop
inc
or
cwtl
jle
loop
loop
bound
push
mov
call
xchg
jb
jae
add
adcb
imul
fwait
std
icebp
push
jg
jae
adc
in
or
xchg
loope
add
sbbl
add
lret
inc
data16
xor
push
ret
push
cwtl
sbb
xchg
dec
mov
jo
fisubrs
sbb
push
xor
enter
ja
cmp
cwtl
push
jge
aad
inc
jnp
lods
or
pop
mov
shrb
sub
loope
imul
or
jno
sbb
xchg
pop
push
cmpsb
lds
iret
push
imul
pop
ljmp
imul
sarl
es
mov
and
xchg
mov
movsb
add
es
fcoms
movsb
ret
mov
jbe
addr16
mov
pop
mov
gs
sahf
and
decb
jg
and
loope
call
cmp
mov
scas
cs
int3
pop
xlat
arpl
or
arpl
mov
fiaddl
ss
pop
call
and
cmp
frstor
lcall
lahf
pop
jo
adc
pop
cmp
inc
cmc
cmpb
add
movsb
loopne
add
mov
pop
iret
push
es
pushf
stos
dec
in
mov
or
arpl
xchg
je
clc
decl
out
out
push
sbb
repz
pop
leave
sub
sub
scas
out
insl
mov
fsts
dec
xor
loopne
sbb
pop
mov
fstpt
loope
sub
pop
mov
clc
rcr
adc
test
pop
out
movsb
stos
stos
lret
xchg
scas
imul
stos
sub
jmp
jbe
test
das
insl
cld
adc
js
xchg
enter
lods
dec
push
inc
add
or
push
lock
ja
mov
dec
popf
mov
in
fidivl
xchg
pop
roll
pop
andl
xchg
out
cmp
test
shl
xchg
cmc
sub
cli
lods
mov
outsl
push
lahf
ss
fdivrs
js
imul
or
push
cmpb
xchg
sub
push
xchg
int3
jcxz
repz
pop
aaa
adc
test
xchg
inc
out
add
iret
leave
aaa
shll
cmpsl
sub
xchg
xor
adcl
adc
sub
fiadds
inc
ror
xor
dec
sub
adc
lea
icebp
scas
fsubs
cltd
aad
or
inc
shrl
sbb
fsubrl
pop
data16
push
push
jns,pt
sub
xchg
addl
iret
imul
inc
loope
adc
push
popa
cmp
inc
sbb
cli
add
insl
sbb
icebp
cli
cmc
jmp
mov
xchg
stos
cmp
scas
cmc
mov
mov
mov
scas
or
sub
push
mov
push
push
cmp
movsl
andl
rorl
pop
out
xor
mov
ja
shrl
cmpsl
nop
mov
xchg
js
push
push
xor
daa
cltd
shrb
push
out
xchg
out
cmpl
xorl
jnp
movsl
wrmsr
js
mov
xchg
in
loopne
add
push
arpl
mov
dec
jmp
mov
inc
or
clc
mov
jne
scas
ret
push
jb
jecxz
ficoml
nop
adc
arpl
pop
addr16
push
adc
xchg
data16
xor
popa
aam
push
mov
push
mov
outsl
push
xchg
sbb
ds
lcall
mov
stc
decl
rcll
pop
jbe
sub
outsl
sub
adc
pop
xlat
addr16
or
stos
or
pop
sub
imull
rorb
cld
sbb
sub
push
mov
fsubl
mov
add
jbe
or
sbb
jle
repz
mov
lret
aad
roll
cmpsb
es
cmp
pop
mov
xor
pop
cmp
push
cld
cmp
stos
or
jmp
es
jnp
loop
in
shrb
jb
push
push
and
pop
inc
sub
dec
mov
add
cli
cmp
cmp
jb
idivl
das
xchg
add
mov
add
test
inc
xor
xor
test
xor
insl
sub
or
jb
pop
mov
cltd
jl
mov
jne
cmpsl
ja
scas
into
inc
xchg
out
pop
or
mov
and
movsb
sti
mov
push
jo
lcall
fidivrl
adc
mov
pusha
popf
mov
jmp
test
aaa
dec
adc
lahf
data16
adc
imul
push
adc
inc
push
fstps
aad
xchg
sub
mov
mov
push
sbb
xchg
push
test
in
scas
mov
rcrb
xchg
inc
dec
les
push
arpl
jmp
mov
xchg
hlt
push
lods
hlt
cmp
in
loope
sbb
add
gs
jp
xor
cmpsb
cmpsb
in
jnp
pop
inc
cmpb
xor
xchg
dec
sbb
lds
in
icebp
outsl
jns
insb
fidivs
stos
dec
mov
leave
pop
mov
addr16
jp
sbb
mov
mov
sarl
lods
xchg
repz
push
pusha
pop
test
push
push
mov
pop
loope
arpl
cmp
loop
cmp
add
in
push
and
and
mov
jne
ret
mov
inc
xchg
pop
pop
adc
and
ret
jecxz
aaa
push
sahf
push
stc
fldt
xchg
inc
aas
scas
mov
scas
insl
ja
fsts
call
mov
mov
sbb
das
mov
jnp
sbb
lret
gs
mov
sbb
adc
hlt
mov
test
mov
push
push
mov
jno
and
mov
push
test
outsb
fbstp
cltd
inc
aad
aas
cmpb
lea
popf
add
adc
ljmp
ja
inc
sbb
rcl
lahf
push
push
xor
in
hlt
shlb
outsl
loop
pop
mov
mov
xor
cli
insb
cmp
aam
mov
rcrb
imul
pop
adc
mov
xor
aam
out
mov
push
mov
mov
dec
cmpsl
xor
mov
out
test
xor
loope
jmp
aaa
or
dec
inc
xchg
xor
scas
fisttpl
push
scas
sbb
cmpl
xor
cmpxchg
enter
je
sub
push
outsb
rclb
loop
fldenv
jg
test
inc
mov
movsb
cwtl
dec
adc
roll
add
adc
loopne
daa
pop
pop
xlat
inc
lret
lret
push
mov
xchg
xchg
push
inc
mov
lcall
aam
fstl
jge
or
pop
nop
fstp
imul
in
push
cmp
adc
mov
jle
loope
outsl
stos
aas
sub
add
ss
mov
seto
ret
imul
mov
xor
in
inc
enter
imul
loop
cmp
icebp
fbld
pop
das
mov
sub
dec
and
shll
mov
in
dec
sti
popf
divl
mov
xchg
push
aaa
into
xor
mov
mov
mov
push
or
or
loope
cmp
adc
outsl
sub
scas
mov
ljmp
cmp
ja,pt
test
movsb
ds
ja
imulb
jbe
and
and
inc
clc
xchg
ss
dec
js
dec
pop
pop
xor
cmc
add
fadds
dec
stc
xor
out
in
mov
arpl
stc
shl
adc
in
pop
cwtl
fists
xchg
pop
lods
xor
leave
inc
cmc
stc
scas
cs
cs
push
jp
enter
lahf
test
pop
add
xchg
add
rorl
test
stos
fisttps
andl
imul
mov
and
push
xlat
cs
je
jno
shl
in
xchg
xor
and
lret
mov
ss
rcll
insl
out
sbb
adc
mov
fs
mov
adc
pop
mov
jae
or
outsl
fwait
inc
inc
or
insl
lcall
and
pop
and
lea
jmp
jecxz
push
lcall
xchg
dec
sub
xor
shrl
push
fs
xchg
add
lret
sub
xor
imul
cmp
into
enter
adc
pop
icebp
lods
in
negb
test
fldt
mov
xor
sti
adc
mov
insb
sbb
ja
sbb
inc
daa
push
pop
sub
shrl
out
inc
arpl
cmpsl
adcb
repz
ja
outsl
sbb
inc
xlat
cli
mov
imul
add
dec
cltd
dec
cwtl
pop
out
aam
mov
cld
dec
jns
dec
nop
add
sahf
cmp
stos
sbb
push
inc
cmp
rol
sub
out
rol
insl
aad
xchg
jle
mov
sbb
mov
test
pop
unpckhps
repz
roll
clc
addr16
pop
int
sbb
mov
test
and
les
adc
addr16
negb
call
int
aam
ss
and
bound
pop
jb
leave
xor
add
pop
and
jns
pushf
jg,pn
imul
dec
sub
out
sbb
adc
mov
push
clc
imul
dec
popa
cltd
and
mov
pop
xchg
push
mov
mov
mov
adc
cld
xchg
pop
inc
sub
repz
push
sub
dec
test
mov
cmpsl
enter
shll
mov
hlt
outsl
repz
movsl
adcb
and
cld
push
ljmp
pusha
dec
lock
les
mov
leave
dec
in
test
push
and
pop
or
jbe
fisttps
cltd
popf
int
aaa
cld
out
cld
out
mov
cmp
pop
cwtl
mov
sbb
xchg
xor
jge
mov
mov
call
sub
loop
dec
sub
dec
jle
mov
dec
adc
fimuls
lock
data16
fnstenv
aam
aad
pop
outsl
mov
loop
cmp
cmp
out
xchg
bound
or
movsb
cmpsb
jne
inc
adc
dec
sbb
mov
xcrypt-ecb
cmpsl
dec
loope
inc
dec
clc
scas
mov
aas
push
sbb
insb
sbb
repz
stc
inc
xchg
es
orb
cmpb
mov
push
mov
ret
jmp
mul
shll
xor
stos
cmpsb
mov
call
movq
hlt
std
subb
xlat
xor
shll
pop
sub
mov
fdivrl
sub
int
inc
add
adc
sbb
std
sahf
or
push
test
sub
inc
lock
dec
loop
cmp
xor
xor
test
fcomps
mov
and
xchg
fdivs
or
push
or
xor
dec
mov
out
je
fldl2e
pop
xor
call
or
lahf
inc
int3
js
sbb
in
leave
jb
and
pop
call
fadds
inc
or
mov
loope
lcall
sarb
adc
cld
push
out
xchg
push
mov
lods
loopne
sbb
lahf
ss
andl
hlt
fldl
pop
and
lock
roll
or
xor
in
mov
dec
in
push
mov
nop
xchg
cmp
loopne
mov
xchg
ss
popa
and
sub
ret
mov
ljmp
inc
fcomip
lret
test
rcrl
gs
leave
sbb
clc
repnz
fidivrl
mov
push
adc
imul
dec
cwtl
sbb
test
shr
dec
jl
daa
ret
pop
push
mov
adc
shrb
iret
jb
cmc
fcomps
cmpsl
leave
ret
xorb
jo
std
fistps
pop
sbbl
fnstcw
jnp
fisubrl
inc
icebp
mov
add
in
in
xchg
call
mov
sbb
jns
sti
push
enter
negl
cld
stos
dec
jnp
out
stos
fcmovne
cwtl
outsl
das
dec
xchg
pusha
cmp
mov
xor
stos
mov
mov
addr16
xchg
mov
or
lock
jecxz
adc
xchg
call
cmp
and
lcall
push
push
outsl
adc
jmp
mov
adc
or
mov
mov
and
adc
inc
retw
test
icebp
mov
in
or
das
fcompp
jmp
gs
daa
push
mov
repz
mov
fldl
fs
xlat
push
fisubrs
cli
out
in
vandnps
adc
pushf
push
out
enter
pop
pop
jnp
jae
imul
mov
outsb
fcomi
dec
pop
cli
jne
enterw
sub
out
fcompl
test
iret
pop
jmp
std
cmp
pop
ss
test
xchg
inc
mov
or
inc
into
mov
push
pop
lret
aad
ljmp
enter
push
pushf
js
ja
sub
outsl
je
fwait
xchg
push
pop
clc
mov
add
mov
cld
cmp
xor
notl
jp
sub
in
pop
sbb
in
cmp
lahf
pop
and
dec
cwtl
aas
push
fldl
dec
sahf
in
rclb
imul
mov
mov
jle
call
int
ljmp
dec
mov
flds
sbb
testb
jb
test
lret
adc
pop
call
jb
lea
ds
psubw
mov
jmp
mov
sub
adc
test
imul
inc
nop
icebp
sarb
jl
addr16
out
xchg
xchg
xchg
inc
movsb
cmc
push
ja
rcrl
jle
push
in
cmpsl
sbb
orl
insl
xchg
sbb
or
push
push
aam
adc
mov
cld
ficomps
inc
inc
push
out
lods
mov
jne,pn
pop
rorl
jecxz
lret
pop
cmp
pop
mov
inc
cmp
arpl
in
sbbb
aad
inc
loop
mov
xor
xchg
fnsave
mov
insl
cmpsl
pop
sbb
mov
gs
loope
nop/reserved
fisttps
jae
fs
and
call
rorl
push
xor
js
fnop
sahf
je
xchg
int3
or
sti
lea
mov
test
popl
insb
test
fcoms
loope
jge
jns
jbe
xor
xor
fidivl
js
fsubrl
in
addr16
scas
adc
add
and
mov
hlt
fs
add
sbb
pop
mov
out
daa
jp
pop
test
dec
dec
sbb
pop
mov
jno
iret
xor
lahf
mov
adc
icebp
movsl
incb
mov
jecxz
mov
push
scas
fdivl
mov
mov
dec
adc
cmp
aaa
mov
popf
outsb
jb
inc
shrb
sbb
jb
ds
mov
lahf
int3
scas
xchg
xchg
sub
aad
cmp
out
inc
mov
jae
lock
scas
inc
add
cwtl
add
clc
inc
pop
push
fildl
imulb
sbb
loope
shll
mov
inc
jne
nop
xor
and
hlt
inc
push
lret
jo
aad
lea
adc
adc
inc
rcrl
pushf
les
adc
popa
mov
sbb
mov
call
notb
out
add
call
add
mov
mov
dec
push
jae
push
rcll
xchg
mov
and
inc
mov
ficomps
rcrb
ljmp
pushf
and
inc
sahf
mov
adc
orb
call
cld
shr
mov
sbb
mov
daa
notb
mov
push
ss
inc
and
jns
jns
and
loope
and
pop
aam
jo
push
pop
push
xor
jae
xchg
add
push
lahf
cltd
mov
pop
inc
sahf
xchg
mov
mov
lret
fcoml
addr16
popa
test
test
jns
add
das
mov
stc
divb
aam
nop
nop
mov
mov
jl
and
pop
mov
sbb
std
mov
and
popa
fnstcw
outsb
pop
mov
das
adc
xchg
out
fdivrl
dec
data16
mov
xchg
mov
mov
test
faddp
sbb
pop
sbbb
sbb
push
lret
cmp
aaa
lods
lret
daa
xor
cmp
scas
mov
adc
jecxz
and
push
fistps
mov
lret
push
les
call
stos
out
pop
dec
dec
and
sub
int
xchg
add
push
push
pop
jo
push
jae
and
xchg
enter
dec
aaa
cmp
popa
dec
aaa
xchg
test
repnz
push
cmp
jns
cmp
fsub
fildl
or
pop
out
ljmp
and
in
je
and
sub
lock
mov
pop
cmp
movsl
inc
test
mov
mov
mov
flds
mov
scas
pop
dec
aad
sbb
and
jecxz
cwtl
mov
mov
adc
adc
pop
cmp
inc
loopne
add
push
out
push
cmp
sub
mov
loope
stc
into
pop
sbb
ljmp
or
loop
cmpsb
hlt
pop
jecxz
xlat
and
insl
xchg
and
xchg
sbb
cmp
push
lea
add
hlt
std
fstps
shrl
mov
or
fnstenv
add
pop
stos
sub
add
loop
rcll
mov
outsb
das
pop
popa
bound
ljmp
lret
jge
mov
dec
das
or
in
jbe
test
jb
xor
in
sbb
cs
shll
cltd
lret
idivl
sbb
mov
cmp
int
andl
and
pop
fs
std
lea
mov
enter
push
jl
call
push
adc
inc
or
sbb
and
sub
jbe
fdivl
les
shlb
ds
or
movsb
pop
or
incb
push
mov
or
push
mov
stos
xchg
fs
ret
push
sub
dec
mov
xor
jns
popa
cld
hlt
or
shrb
sbb
push
sub
mov
cmp
rolb
pop
or
icebp
sub
movsb
dec
cld
roll
sti
mov
adc
add
ja,pt
and
adc
aas
test
cmp
sti
jle
mov
push
add
xchg
je
mov
dec
out
adc
ljmp
lahf
imul
mov
xor
cwtl
scas
mov
jp
push
jb
pop
mov
ljmp
cwtl
fists
jp
clc
xor
rorl
imul
imul
out
jp
cmp
xchg
push
dec
adc
push
jbe
mov
pop
add
push
out
mov
shll
jmp
xor
or
imul
push
repz
push
es
rolb
xlat
out
and
xor
add
scas
xlat
lret
dec
cli
mov
push
adc
jle
mov
sbbb
adc
sarb
mov
leave
push
in
pop
loop
cli
xchg
dec
test
push
hlt
pop
cmp
xor
jp
mov
dec
pusha
push
int3
mov
mov
or
rcll
sub
mov
push
and
jo
sub
mov
adc
jnp
jb
int
pop
adc
fstl
mov
call
pop
into
sub
mov
inc
add
imul
lahf
scas
xchg
dec
inc
call
adc
outsb
pushf
xor
mov
addr16
jno
mov
repz
jge
dec
mov
sbb
punpcklwd
cmp
aam
sbb
xchg
outsb
dec
ficompl
insb
inc
in
lret
xor
jne
mov
out
sub
sbb
mov
mov
sub
cmp
jns
aad
cmc
add
ds
push
repz
push
int
js
movsb
dec
inc
dec
es
fdivrl
adcl
leave
clc
jbe
add
inc
mov
mov
mov
arpl
aad
pushf
out
sarb
inc
incl
cmp
sbb
xor
pop
leave
and
flds
pop
cmpsl
jg
int3
mov
cmpb
pop
push
jo
into
lods
cld
add
inc
nop
jns
sti
add
pop
mov
in
cs
xchg
adc
ss
into
dec
es
lods
mov
leave
cltd
mov
pop
arpl
or
imull
mov
scas
or
push
or
adc
adc
inc
adc
sahf
fucomi
dec
push
xor
mov
stos
clc
pop
lods
out
mov
pop
or
inc
scas
jae
stc
mov
add
movsl
push
fisttpl
sbb
insb
dec
jg
jmp
pop
in
call
sbb
fwait
push
dec
or
psubsw
ss
pop
mul
popf
mov
and
lcall
inc
xchg
cmp
cmpsb
out
loopne
fucom
push
lds
push
fsubrp
sub
lea
and
cmp
mov
shlb
pop
adc
aaa
pusha
jp
and
lret
orb
aam
testb
cmpsl
mov
dec
sbb
or
ja
in
adc
lret
mov
out
sahf
call
scas
cltd
dec
adc
fstpt
popf
sahf
fistpll
sub
lcall
cmp
jp
icebp
fwait
daa
cmpsl
lods
jo
std
sahf
push
mov
or
push
inc
cmp
xlat
daa
fisubrs
push
xchg
aas
sbb
xchg
test
jns
stc
data16
iret
andl
sub
push
insb
mov
xchg
mov
test
pop
jns
lcall
jle
out
jp
in
insb
pop
movsb
inc
sbb
lret
and
ds
sub
test
out
dec
mov
fmuls
cmp
xor
mov
adcl
pushl
fdivs
lcall
sub
cli
call
out
jae
stc
sub
movsb
add
scas
and
xchg
fwait
jle
mov
and
inc
mov
cmpsb
xchg
lods
sub
jmp
repz
mov
fiaddl
test
xchg
shl
or
aas
mov
jg
lcall
xchg
lret
or
adc
adc
inc
outsl
mov
insb
popf
cs
mov
xor
jmp
sub
jecxz
push
pop
inc
inc
les
push
stc
pop
mov
add
push
adcb
shll
push
iret
mov
mov
lret
pushl
cmp
ds
jo
push
pop
xchg
test
sbb
pop
xor
push
push
movsl
xor
not
xorb
into
jmp
enterw
push
and
pusha
or
and
stc
jge
out
mov
jge
mov
addr16
pop
jns
insb
std
loop
xchg
push
adc
in
xor
adc
mov
lcall
xchg
repnz
out
ss
lock
les
outsb
lds
hlt
add
repnz
stos
mov
push
sub
test
mov
mov
lods
xor
jge
dec
inc
jne
repnz
lcall
push
dec
jne
stos
sub
jp,pt
cld
push
movb
jle
insb
xor
and
xor
xlat
dec
push
dec
aas
mov
push
aaa
adc
jmp
adc
std
dec
xor
mov
inc
pop
int
shl
movsl
lods
jl
adc
lret
mov
daa
push
mov
pop
enter
int3
mov
sub
mov
fimull
mov
pop
xchg
push
cmp
pop
mov
pop
jb
inc
sbb
mov
std
or
mov
outsl
scas
dec
daa
add
scas
lods
push
mov
out
dec
dec
clc
xor
mov
div
or
ja
pop
int
bound
mov
add
pushf
jge
icebp
xchg
mov
inc
pop
cmp
mov
pop
pop
sti
jo
out
xchg
jo
and
test
mov
or
or
cmp
mov
jo
xor
adc
outsl
inc
leave
ljmp
adc
jmp
lock
pop
cmpsb
inc
or
pop
jl
sti
bound
out
adc
jl
enter
out
lret
addr16
cld
jo
pop
and
dec
pusha
cmc
call
into
pop
or
lcall
lds
or
ret
mov
or
add
rorl
test
mov
push
dec
lret
iret
lahf
sbb
aam
fisttpll
adc
movsl
repnz
sub
xor
fimull
lret
cmpsl
bound
xor
and
push
fs
out
pop
lods
fsub
inc
daa
or
jnp
mov
dec
jmp
rolb
adcl
icebp
mov
and
cmp
rcrl
dec
test
negb
je
push
loopne
and
cwtl
mov
cli
fcmovnb
add
mov
and
cmpsl
mov
dec
repnz
imul
or
shll
mov
lock
shrl
repz
cld
pop
xor
rolb
jbe
cwtl
mov
rorb
sbb
xorl
sbbb
shl
add
cli
push
or
js
loop
cmp
cmpsb
outsb
or
subl
iret
out
movsb
std
mov
lods
out
jl
xor
lahf
adc
data16
rol
add
jne
add
fdivrs
dec
cltd
xorb
cmp
inc
push
call
mov
fs
bound
sbb
pop
insl
push
jge
cmp
popf
push
add
lock
pop
bnd
loope
jl
push
fucomi
mov
pop
movsl
mov
mov
mov
stos
mov
mov
xor
lahf
into
push
rcrl
arpl
mov
mov
mov
scas
xchg
js
push
jp
ret
xor
aad
adc
adc
idivb
dec
pop
xchg
push
ret
roll
pop
in
jle
and
dec
adc
loop
lock
out
sbbb
xlat
stos
int3
xchg
mov
cmp
fnstcw
inc
and
out
ret
inc
push
dec
and
mov
push
subb
sub
cli
add
shll
inc
and
pushf
sbb
mov
loop
shll
pop
inc
add
or
push
shlb
movsl
idivb
repnz
xor
repnz
mov
jge
mov
sti
sbb
mov
fst
cmovnp
sub
mov
addr16
xlat
sbb
lods
les
sub
sub
sub
pop
les
stos
cmp
sbb
jecxz
mov
mov
jno
test
cli
sub
and
sbb
pop
ja
js
dec
fstps
aas
and
xchg
xchg
out
cs
gs
jae
movsb
sti
xchg
jp
jmp
sbb
or
add
dec
pop
lcall
adc
and
jg
cltd
dec
stos
sbb
xchg
imul
sub
lds
std
add
adc
pop
in
ja
sbb
jmp
insb
sub
orl
loope
pop
lods
add
and
push
and
sub
cmp
add
pop
inc
lea
cvtps2pd
mov
in
or
int
dec
repz
adc
rcrb
test
jge
and
xchg
xchg
cmp
mov
testl
mov
out
and
inc
out
inc
les
mov
pop
jmp
insb
adc
jae
lods
cmovnp
scas
push
ljmp
or
adc
adc
adc
out
test
rorl
ficomps
fidivs
sarl
sahf
cs
inc
adc
xor
sbb
adc
jns
xchg
stc
jb
enter
mov
or
dec
es
inc
inc
add
pop
sub
rclb
les
sbb
loope
add
sub
pop
test
imul
rorl
clc
lcall
les
shlb
xchg
cmp
or
fwait
xor
gs
mov
or
or
aam
je
mov
je
jl
xor
sub
mov
lcall
and
or
add
mov
repnz
sbb
inc
xchg
mov
push
cli
push
mov
pusha
xor
inc
add
iret
popa
jae
inc
cmp
aaa
scas
sub
icebp
frstor
outsb
sub
je
or
jmp
out
or
jmp
xor
inc
xor
pop
push
inc
jg
adc
loope
test
adc
in
dec
leave
mov
out
pop
mov
cmp
cmp
dec
pop
popaw
xchg
sub
mov
add
popf
xchg
mul
call
adc
rorl
inc
xor
insl
pusha
sahf
cmp
loop
sbb
in
in
addr16
lock
imul
decb
mov
pop
movb
aad
jo
or
mov
sub
ret
test
cltd
cld
roll
aaa
add
mov
mov
scas
pusha
add
imul
or
inc
mov
jmp
mov
out
ficomps
arpl
popf
imul
and
cmpsl
add
cmpsw
jb
dec
add
ljmp
aam
addr16
sti
mov
sarb
push
shrb
inc
add
call
pop
sub
incb
jecxz
or
xchg
jecxz
jmp
cwtl
add
inc
ja
bound
xor
push
pop
jb
ret
jae
mov
add
rolb
daa
iret
and
mov
ja
fsubs
clc
push
ds
mov
mov
add
mov
xor
mov
inc
aaa
mov
xchg
sub
fimuls
scas
fwait
cmp
mov
mov
inc
and
dec
push
jmp
adc
into
sub
push
lret
cmpsb
pop
imul
lcall
js
jnp
mov
jne
lock
jb
or
jnp
out
push
shrl
mov
fmuls
adc
inc
je
inc
testl
mov
mov
push
push
mov
jp
xchg
xor
std
dec
inc
mull
mov
cmp
ljmp
dec
add
fsub
inc
pop
xor
test
inc
xor
iret
test
ret
jmp
fstps
pop
push
test
or
ljmp
add
loopne
pop
push
mov
fwait
cmp
or
mov
out
jnp
mov
stc
lret
mov
daa
pop
test
add
scas
stc
dec
push
inc
movsb
rcll
repnz
stos
jl
fsubs
inc
jo
pop
aam
sbb
pop
sbb
daa
add
and
or
cltd
or
mov
cmc
iret
sbb
adcl
or
and
and
pop
mov
movb
pop
mov
add
arpl
cmp
adc
movups
xor
push
scas
sahf
sbbb
sub
movsb
xor
push
shl
dec
mov
out
out
sub
repnz
jbe
adc
fwait
mov
pop
je
mov
mov
jo
adcb
dec
outsb
fmull
test
mov
push
push
movsb
mov
dec
jle
push
sar
pop
bound
xchg
push
adc
mov
dec
test
inc
je
popf
dec
shll
psraw
lret
lods
pop
ret
pushf
xlat
daa
inc
repz
stc
pop
ljmp
clc
sub
sti
xchg
out
sub
fistpl
inc
gs
push
mov
ss
out
dec
jle
pop
testl
or
outsl
mov
movsl
adc
or
ret
iret
js
dec
dec
clc
add
cwtl
inc
jno
je
sub
cltd
sti
lret
mov
sub
icebp
jns
in
jmp
dec
mov
xchg
into
or
andb
test
jae
lahf
jle
cmc
out
mov
fucomp
mov
push
pusha
es
lock
sub
mov
popf
pop
lea
mov
xor
push
mov
cmpsb
pop
in
push
shlb
fldcw
addr16
in
xchg
cmp
popf
cmpsl
sub
or
jno
push
in
pop
mov
shr
fisttpll
add
inc
mov
nop
xor
pop
jg
dec
and
push
in
int3
and
mov
fnstsw
pop
lods
into
fdivl
shll
adc
decl
jbe
jmp
out
mov
adc
insl
nop
cmp
jmp
shrb
jecxz
pop
pop
loope
scas
faddl
xchg
out
lock
mov
cltd
aaa
aas
aam
adcb
pushf
xchg
mov
push
adc
cld
lock
test
fisubrl
call
push
xchg
gs
sbb
data16
imul
sbb
or
cli
nop
int3
mov
add
fld
lcall
in
pop
ficoml
sahf
ret
mov
inc
scas
out
add
mov
lcall
das
rclb
mov
push
and
and
outsl
stos
mov
mov
jb
jo
ret
fs
aaa
inc
mov
arpl
mov
addr16
and
push
xchg
and
push
xchg
sub
xchg
pusha
push
test
jne
lods
out
rep
call
fucomp
or
lds
out
xor
mov
daa
jnp
sbb
pop
in
sub
jno
pushl
ret
inc
sbb
sbbb
xchg
xor
xchg
inc
test
ja
and
dec
stc
push
xorb
adc
test
out
repz
mov
or
in
aas
orb
add
cmpsb
jnp
rorb
imul
fnstcw
mov
mov
cwtl
scas
test
adc
sub
mov
dec
cmp
fiaddl
or
or
mov
jnp
aaa
cmpsb
int3
sbb
fcomps
sub
sbb
sub
int3
cmp
adc
xchg
cmp
vshufps
lods
pop
fistpl
sbb
xor
in
mov
inc
push
xchg
cmpsb
mov
psrad
mov
fnstcw
gs
inc
out
stos
stc
sbb
and
adc
stc
pushf
push
pop
inc
mov
jg
add
lds
lret
cli
and
mov
cmpsl
fstp
sbb
jno
mov
ss
pop
out
cmpsb
icebp
dec
mov
dec
jge
ret
scas
push
imul
pop
xor
sbb
xchg
add
jg
cmp
sbb
lock
adc
ljmp
js
and
popf
sbb
lahf
sbb
inc
jb
popf
and
data16
lods
aas
cmp
mov
mov
call
pop
and
bound
cmpsb
lods
mov
mov
xor
sti
ljmp
inc
mov
fldt
add
or
adc
push
daa
or
xchg
repz
mov
int3
mov
movsl
stc
pop
mov
add
ror
sbb
mov
mov
movsb
dec
jo
dec
push
stos
rcll
pop
movl
inc
fwait
stos
push
bound
adc
pusha
xchg
inc
xor
arpl
popf
sub
inc
sbb
sbb
sub
fnstsw
rep
mov
sub
adc
xchg
test
test
arpl
idivl
shrl
outsl
shl
and
out
adc
jbe
out
dec
pop
mov
jg
js
pop
pop
stos
or
std
pop
sub
fisttpl
aas
pop
cmp
adc
xchg
jo
dec
hlt
int3
lcall
test
addr16
and
jle
mov
ret
push
push
mov
imul
jge
mov
sub
jns
xchg
adc
lret
lock
shll
push
mov
je,pt
adc
pop
mov
pop
fcmovu
pop
mov
pop
icebp
ja
fnsave
repz
xchg
loopne
or
mov
clc
mov
pop
jp
mov
pop
jle
mov
movsl
addr16
loopne
push
push
mov
xchg
gs
mulb
lods
mov
push
xchg
dec
mov
idiv
lock
icebp
pop
das
push
test
sbb
mov
mov
or
and
pop
and
or
xor
add
or
xor
mov
pop
minps
sub
mov
les
inc
out
sbb
sbb
push
fnstenv
fists
pop
fcompl
lahf
loop
jecxz
cmp
adc
es
and
jb
jae
lods
stc
mov
loopne
das
push
sub
inc
fldcw
cmpl
scas
jno
push
push
xchg
push
xchg
test
movntps
ret
mov
das
negb
or
pop
test
fbld
insl
push
cmpsb
loopne
cmc
inc
sub
push
outsl
jb
add
lods
and
fisubrs
mov
dec
stc
inc
les
mov
mov
xor
loope
fldl
cmp
jecxz
pop
lods
jecxz
daa
push
hlt
mov
scas
pop
push
aas
xor
fs
mov
jg
jb
pop
cltd
adc
push
cvtdq2ps
fcoms
int3
dec
out
loop
ds
xchg
shrl
cmp
push
pop
cld
xchg
xor
or
xchg
adc
fsubrl
aaa
sbbb
movsl
out
incl
cmc
inc
jp
and
add
fsubs
call
icebp
mov
mov
cmp
das
int
repnz
inc
loop
and
xor
rclb
cs
andb
add
lea
jb
xchg
divl
xor
pusha
inc
in
in
pop
test
xor
in
dec
sub
mov
xchg
cmp
ret
pop
call
mov
test
push
mov
mov
aam
imull
jle
mov
out
or
outsb
ja
xchg
pop
jp
pusha
lcall
push
test
xor
int3
int3
repnz
mov
loopne
mov
push
dec
imul
loop
cltd
xchg
pushf
mov
xchg
dec
pop
mov
jae
pop
dec
pop
mov
int3
jno
iret
popf
sub
loopne
lret
xor
out
imul
stc
and
out
imul
xor
in
pop
and
pop
pusha
push
adc
cmp
ds
in
xchg
add
out
shlb
mov
out
imul
aam
pop
repnz
ss
test
or
push
and
dec
icebp
test
inc
pop
lea
sahf
mov
movsl
fsubrl
jno
dec
mov
dec
mov
jnp
push
jno
stos
xchg
dec
mov
lods
test
xchg
insb
xchg
xorb
clc
dec
jl
or
daa
rcll
jecxz
mov
and
push
inc
icebp
jecxz
imul
pop
pop
cmc
rol
adc
into
cmc
push
cmp
pop
jmp
repz
icebp
xor
cmc
inc
sub
and
sbbl
pop
insl
pop
and
add
iretw
mov
sub
jge
popa
add
pop
push
sub
pop
sub
test
mov
and
add
mov
loope
jno
dec
ja
xorb
mov
adc
cmp
jmp
enter
and
shrl
add
inc
insb
dec
enter
in
lcall
outsl
xorb
into
mov
mov
mov
ret
xchg
inc
lcall
and
out
mov
jbe
push
mov
fadd
aad
push
sbb
mov
sbb
jb
sub
cmpb
jo
stos
insb
sbb
push
push
sub
adc
out
or
pop
push
dec
or
je
call
cmp
out
insl
cld
pop
xchg
movsl
dec
sbb
sbbb
sub
ret
push
movsl
sbb
addb
fwait
xlat
cmp
dec
and
push
into
lods
push
fnstenv
push
ja
ret
fistpl
jnp
dec
cli
mov
dec
mov
repz
cmp
jmp
negb
insb
jp
fistps
xor
cli
jns
mov
aaa
add
sbb
cwtl
cmp
and
and
orl
dec
test
filds
into
mov
sub
inc
xchg
scas
pushf
fldcw
mov
pop
clc
clc
imul
fs
cmpsl
and
cld
xorl
inc
lcall
ss
sub
mov
pandn
add
imul
sub
inc
arpl
ret
cmpsl
je
or
shl
jo
setb
and
cmpl
mov
mov
push
xor
sbb
sub
mov
stos
divb
stc
repnz
pop
sub
rclb
cmpsb
lahf
sbb
push
inc
hlt
push
mov
xor
fdivrp
rorb
aaa
fistl
rcrb
repz
mov
ret
fnstenv
push
add
mov
add
shl
test
aam
paddusb
push
stos
ret
aad
dec
aad
mov
and
out
pop
in
scas
notb
add
orb
repz
mov
jmp
push
les
dec
fcomip
cli
mov
mov
out
pop
jmp
xchg
popf
inc
ja
mov
mov
test
std
inc
dec
aad
imul
mov
lcall
fbstp
jns
stc
inc
jnp
popa
rcll
loopne
add
sub
jecxz
and
sbb
in
out
in
jl
sti
mov
jp
cmp
pop
adc
push
scas
sub
mov
das
jl
cmp
mov
aaa
sahf
cmc
test
rcl
dec
das
or
enter
leave
shrb
dec
push
cmp
inc
aas
jnp
lods
push
sub
test
jge
out
pop
cmp
pop
addr16
and
push
rcrl
cltd
mov
dec
cmp
mov
push
xor
inc
mov
adc
js
or
dec
mov
cmc
daa
xorl
xchg
inc
pop
adc
mov
mov
js
in
mov
fsubrl
scas
int
imull
jecxz
out
cmp
mov
xor
xor
std
push
xchg
xor
stos
add
aad
mov
scas
inc
sbb
lret
xor
sbb
dec
adcb
lret
xchg
aam
test
pop
dec
sbb
fisubs
in
ss
adc
adc
imul
lahf
mov
mov
push
les
xchg
add
mov
xchg
xchg
cmp
shrl
xchg
inc
adc
push
out
xlat
ja,pn
jo
adc
out
sahf
or
jns
sahf
xor
pop
andl
pop
mov
pop
aas
int
sbb
sbb
push
shll
daa
cmp
inc
cmp
scas
sub
or
sub
aad
xchg
ss
jmp
out
pop
jg
and
in
sbb
pop
jbe
pop
xchg
push
jmp
out
testb
adc
iret
loope
dec
jge
pop
out
push
cmp
inc
mov
cmpsb
jge
call
fidivrl
fimuls
and
call
in
loopne
add
and
pushf
mov
les
lock
or
mov
adc
in
cmp
sub
test
popa
dec
xor
add
xor
mov
aaa
push
sub
gs
call
cmp
or
pop
push
fldcw
test
dec
div
insl
stc
mov
jbe
mov
js
cmp
cli
add
popf
or
fsubl
xchg
les
sbb
es
repz
movsb
leave
and
hlt
lret
shlb
xor
inc
mov
mov
fistps
lds
shll
or
xor
inc
clc
lods
add
cmp
mov
fcoms
add
mov
pop
jbe
xchg
addb
add
mov
sub
cmpsl
int
stc
jecxz
pop
lds
lds
add
pop
addl
pop
or
out
jg
dec
dec
dec
loope
inc
adc
inc
xor
adc
bound
mov
cmc
mov
fs
cmpl
xchg
in
sub
dec
push
sub
shrl
push
lcall
or
cmp
pop
inc
xorb
ror
sti
jmp
in
jae
add
cmp
dec
dec
lret
les
pop
jp
jl
shlb
lea
pop
mov
inc
push
pop
jae
aaa
sub
xor
xor
lods
repz
ds
leave
adcb
xor
in
pop
lds
mov
jle
loope
jae
inc
fisubl
xchg
jo
push
int
sbb
fstl
aad
jp
and
jbe
xor
xchg
hlt
xchg
sub
out
sub
pushf
push
aad
ljmp
jne
xlat
aad
jle
mov
les
fsubs
lea
add
outsl
loope
xor
mov
into
xchg
dec
add
xchg
sub
xlat
icebp
stos
movsb
jge
xor
daa
mov
add
add
aad
or
nop
mov
adc
nop
adc
hlt
lret
dec
mov
stc
idivl
xor
xor
in
add
stos
push
stc
mov
aad
ret
dec
divl
das
and
mov
and
mov
incb
fimull
int
sbb
stc
imul
and
jmp
xor
je
xchg
imul
mov
xchg
mov
push
mov
popf
ds
jge
adc
adc
lods
pop
mov
repnz
mov
faddl
add
js
aas
imul
cmpsl
ds
ss
flds
scas
or
jl
push
cmpsl
dec
dec
aad
mov
mov
enter
push
call
mov
push
sti
dec
cmpsl
in
dec
mov
into
pop
sub
sub
mov
cmp
lods
dec
bound
jg
rclb
iret
rcl
sub
sbb
das
xor
or
sbb
pusha
or
pop
sub
insl
inc
push
sbb
ss
ss
cmp
xor
lret
adc
outsb
sub
je
lcall
inc
fists
xor
movsb
and
sbb
in
scas
sti
cmp
mov
xlat
test
popf
sbb
cmp
bound
test
sub
mov
jle
cmp
jo
or
jge
out
ljmp
inc
xchg
dec
sub
add
mov
cmpsb
dec
fcompl
push
in
sub
xchg
jle
popa
xor
mov
push
fst
add
aad
int
repz
adc
icebp
or
lahf
loop
pop
jge
mov
mov
pop
cmp
stc
sub
jecxz
and
mov
sbb
les
stos
call
out
out
test
loopne
add
movb
stc
test
test
mov
iret
xchg
imul
adc
andl
int3
scas
ret
inc
or
lcall
lods
and
add
pop
jnp
fidivrs
cmp
xchg
js
dec
add
xor
pop
lcall
xor
loope
scas
lock
push
push
lahf
aam
pop
fs
sub
cmp
lret
mov
jg
xor
subb
push
sar
dec
sbb
jge
xor
leave
lret
in
pusha
cmp
pop
lcall
scas
jle
arpl
arpl
xor
out
xor
mov
mov
scas
sbb
in
pop
xor
lds
dec
icebp
push
mov
int
cmp
adcb
std
mov
add
xor
rcll
sbb
aad
and
ficomps
js
mov
stc
dec
test
mov
dec
stos
xchg
sbb
hlt
sub
rolb
mov
mov
inc
dec
das
mov
xor
dec
cltd
mov
les
insb
movsl
mov
xchg
pop
add
pushf
cltd
or
jg
loopne
mov
mov
mov
fld
pop
add
mov
dec
aam
sbb
add
dec
mov
mov
adcb
ror
sub
adc
pop
xchg
pop
cli
xchg
jnp
dec
xchg
loopne
pop
sbb
vpunpckldq
rorb
stos
les
or
frstor
les
ss
out
sbb
xlat
xor
rcr
xchg
mov
nop
cmp
jecxz
add
jne
inc
cmp
push
push
push
add
mov
sahf
repnz
leave
daa
ja
je
add
adc
and
rorb
push
dec
and
cmpsl
cmp
cli
jne
mov
xchg
adc
inc
int3
jo
push
in
mov
xchg
mov
imul
in
or
out
xchg
xchg
out
push
xor
test
sub
fdivrs
push
sub
je
pop
imulb
add
fsts
push
lods
mov
dec
add
je
inc
cmp
push
mov
mov
ljmp
loope
xor
lret
out
ret
or
fs
and
addr16
mov
fidivs
pcmpgtd
cs
jae
aaa
jp
jge
notb
test
lods
mov
stc
push
and
inc
or
psllq
int3
add
push
sbb
mov
outsb
lods
push
ss
add
cs
icebp
jg
cli
inc
jns
notb
jp
sarb
daa
jns
mov
in
adc
push
shrl
jae
es
sbb
pop
push
jae
inc
test
sub
lods
push
mov
imul
arpl
lcall
jg
leave
stos
sub
mov
jbe
mov
cld
sub
incb
loopne
xlat
inc
dec
les
push
xorb
icebp
outsb
mov
ja
and
xchg
test
adc
dec
mov
in
lods
out
fstl
inc
movsl
mov
ja
sub
aas
inc
push
outsb
or
outsb
xchg
xor
outsl
sub
cltd
pop
cmpsl
sti
js
call
loope
jb
test
ret
pop
push
movsb
jbe
arpl
inc
lds
pusha
rorb
sti
in
and
nop
or
push
aas
xlat
rclb
movsl
jle
mulb
cmp
push
adc
stos
adc
lret
into
cmc
and
lret
dec
test
add
fisttps
jno
add
mov
push
test
lock
and
pushf
mov
sub
mov
inc
out
call
sub
sbb
add
aam
mov
bound
insb
ret
xchg
mov
xchg
push
xchg
push
in
add
jmp
and
nop
and
scas
sub
pop
test
mov
jbe
ss
mov
in
std
int3
jmp
dec
mulb
cld
movsl
pop
loop
ja
mov
sub
addr16
adc
xor
popa
cmp
pop
xor
sarb
and
insl
and
pop
ja
push
push
pop
dec
mov
nop
mov
js
lret
cs
jge
stos
sub
mov
mov
cmp
fidivrl
lret
adc
jnp
pop
ret
jl
bound
mov
pushf
adc
mov
push
andb
jmp
pop
ja
cmp
pop
add
ja
xor
mov
rol
out
dec
imul
jno
inc
orb
pop
add
jno
mov
pop
xchg
mov
test
js
cltd
ret
xchg
repnz
sbb
adc
imul
lock
mov
sub
pusha
push
scas
sbb
jecxz
mov
out
jle
int3
mov
jae
addr16
scas
adc
lret
push
dec
and
neg
jg
pop
loopne
dec
fnstenv
push
inc
inc
xor
mov
inc
pop
xchg
ljmp
andb
int3
stos
adc
pop
pop
int3
in
je
push
mov
movsb
xor
scas
push
xchg
addb
adc
sub
je
mov
add
xchg
popa
mov
addr16
rcl
and
dec
push
ds
jmp
ret
pop
rorb
movsb
je
mov
loop
ljmp
lock
in
in
jge,pt
stc
lods
lods
rcll
pop
pop
sub
mov
xor
lret
stos
js
test
push
xchg
add
and
xchg
and
pop
das
loope
jecxz
xchg
rorl
xchg
xchg
pop
jecxz
test
add
lds
rorb
enter
dec
sub
stc
out
inc
imul
mov
rolb
mov
movsl
rcrl
lret
pop
iret
jmp
fnstenv
push
pop
jmp
iret
scas
push
add
mov
cltd
int
outsl
mov
je
xchg
movsb
add
jns
lea
sub
mov
mov
mov
mov
mov
iret
inc
xchg
xchg
scas
jns
mov
mov
popa
add
in
mov
xchg
das
repnz
nop
test
aam
lret
test
sar
xor
jb
popf
sbb
lds
and
insb
loop
mov
dec
pop
inc
and
inc
push
rolb
jl
fmulp
mov
clc
jge
sahf
sbb
orl
dec
mov
inc
mov
repz
push
insb
and
das
loop
xchg
or
ficomps
loope
cmp
lahf
outsl
fisubrs
fbstp
adc
fsubs
pushf
xchg
push
mov
lods
and
div
adc
push
es
rcl
scas
pop
pop
stc
stc
sub
lods
ret
ret
clc
sub
loopne
movsb
jp
jnp
pop
lods
mov
xchg
loop
sbb
mov
shrb
add
dec
mov
push
ljmp
pop
les
int
hlt
sbb
insb
lret
lcall
test
pop
decl
ss
adcb
add
sbb
popf
clc
inc
cld
push
push
inc
mov
cltd
cld
sbb
adc
jo
mov
cmp
ljmp
std
push
daa
dec
in
cmp
or
inc
sub
icebp
jge
sbb
sub
jne
pop
push
fldl
bound
add
jge
ret
xchg
addb
rep
dec
or
cmpsb
cmpl
fstpl
aad
fs
cmp
les
mov
es
ja
push
cmpsb
shlb
in
movsb
mov
fdivrs
sub
cld
jg
pop
ja
jle
pop
add
mov
cmpsb
out
jl
enter
mov
fldl
xchg
jg
add
notb
or
lods
mov
icebp
icebp
cmp
pop
inc
repz
sbb
out
popf
pop
loopne
push
fcomp
xorl
daa
mov
cmp
fmull
add
and
pusha
sbb
insb
add
mov
sahf
repnz
sbb
gs
add
mov
lret
std
test
cmpsb
xlat
push
rorb
or
mov
pop
dec
js
and
daa
inc
jecxz
cmp
inc
xchg
repz
loope
dec
cmpsb
stos
das
negl
adc
sub
popa
mov
and
movsb
inc
fs
mov
mov
in
out
mov
inc
xor
push
adc
lods
mulb
pop
and
rclb
sbb
fldl
pop
adc
fstpl
test
mov
push
pop
dec
add
testb
imul
jae
mov
cs
sbb
roll
jmp
pop
sbb
and
insl
out
push
mov
xchg
aad
loop
jno
decb
jecxz
cmpsb
or
cltd
pop
jns
int
pop
mov
xor
xor
fstpt
mov
fimull
stc
inc
lea
xor
push
cmpsl
arpl
sub
fildl
into
mov
jbe
mov
fst
add
shl
das
hlt
mov
jl
push
je
pop
out
xchg
add
insl
in
aad
sbb
iret
and
mov
lods
lods
sbb
push
icebp
inc
lea
pusha
lsl
inc
les
out
xlat
rcrl
iret
xchg
popf
sahf
inc
inc
outsb
addr16
sub
mov
sub
push
xchg
jae
or
push
lea
ljmp
add
cwtl
and
orb
lahf
sub
sub
inc
fbstp
jnp
aad
jno
fistps
fmulp
push
out
push
fnstenv
scas
pushf
pop
mov
call
bound
inc
pushf
push
adc
push
mov
mov
push
jmp
les
out
call
add
gs
jns
jp
test
out
sub
stc
xchg
std
push
mov
pop
pusha
add
jns,pt
aad
mov
mov
and
and
imul
jmp
add
daa
cmp
pusha
lock
dec
cs
and
pop
lds
orb
push
aam
out
sub
pop
xchg
lret
loope
inc
inc
dec
xor
jnp
inc
scas
pop
xor
sti
sub
dec
lahf
adc
rorb
pop
cmp
stos
iret
roll
pop
pusha
hlt
cltd
aaa
and
inc
movsb
add
sbb
aaa
jg
adc
cli
adc
cld
cmp
lods
int3
leave
pop
push
xchg
je
fdivl
mov
push
movsl
and
cmpsl
aam
data16
push
xchg
aam
daa
lds
and
cmpsl
sbb
cmpsb
rol
scas
test
jge
mov
fists
data16
ss
push
sbb
int
push
inc
xchg
jbe
add
stc
xchg
hlt
jno
sbb
inc
pop
inc
pop
xor
xor
pusha
lret
mov
xchg
test
pusha
push
inc
dec
shrb
lods
cltd
sbbb
mov
scas
clc
cmp
push
dec
fidivrl
dec
lods
push
fwait
pop
out
dec
adc
jge
insb
outsl
fidivrs
pop
push
dec
mov
pop
push
dec
imul
mov
xchg
mov
mov
popf
add
fisubs
dec
jno
sbb
rclb
movsl
loop
leave
jno
fisttpl
pop
aad
dec
lods
xchg
push
xchg
push
xor
cmp
inc
call
andnps
pop
std
push
sub
out
adc
imul
xchg
outsl
sbb
fwait
add
lds
push
in
dec
cltd
pop
fsubrs
jb
inc
cmp
xor
pop
into
add
sbb
sub
add
lods
idivb
sub
jg
andl
add
addr16
ret
mov
mov
xor
mov
push
add
push
cmpsb
imull
sti
jb
jae
stos
mov
push
popa
add
rcll
ja
mov
pop
inc
into
adc
jmp
dec
std
frstor
dec
jmp
aad
mov
fcom
pop
das
pop
shlb
out
cmp
sarl
inc
inc
dec
or
mov
mov
sub
flds
push
push
sbb
lea
inc
adc
clc
es
dec
mov
push
sbb
movsb
cmp
das
jge
mov
or
inc
jns
mov
xchg
loopne
cltd
fnstcw
dec
adc
daa
mov
xor
int3
lcall
mov
mov
mov
sbb
pop
jmp
pop
dec
mov
sub
imul
test
punpckldq
xor
rclb
adc
ss
or
dec
sub
mov
int3
dec
shll
out
xchg
add
cmp
bound
xor
loop
out
arpl
sub
adc
sub
ret
inc
xlat
ja
mov
mov
inc
js
fistl
push
jno
pushf
xadd
sbb
add
mov
int3
or
cmc
adc
into
jnp
pushf
std
test
lods
roll
mov
cmc
mov
nop
addr16
cmp
dec
dec
sbb
mov
and
push
test
cmp
call
adc
ficomps
and
xor
sub
jmp
pop
push
loopne
loop
xor
pushf
pop
jmp
addr16
std
jno
outsb
or
xchg
add
femms
pop
ss
xor
fidivrl
and
call
mov
ret
pop
nop
mov
mov
sbb
inc
jle
out
ss
mov
jmp
push
mov
je
insl
sub
call
lds
lcall
pushf
data16
into
push
adc
arpl
cwtl
out
sbb
lea
sti
fmull
lret
cli
hlt
pop
mov
idiv
cmp
inc
movsl
xchg
push
sub
sbb
push
mov
add
movsb
out
jne
dec
outsl
es
lret
push
cmpsb
mov
xchg
pop
lahf
out
fnstenv
sub
xorb
loop
mov
nop
aas
lret
iret
daa
negl
in
test
add
mov
jge
es
mov
cmp
shll
lods
adc
mov
out
ljmp
dec
mov
pop
or
jg
jo
sub
add
add
stos
mov
pop
mov
scas
add
shrw
out
andb
je
leave
repz
test
rolb
cmp
sbb
aad
stc
fimuls
test
ficompl
push
divl
and
jl
lds
ss
into
repz
xor
test
push
mov
lahf
sbbl
xchg
aad
subl
test
add
clc
add
popf
sbb
loopne
in
fs
enter
ja
sbb
add
sbb
and
xchg
lahf
jbe
aaa
int
mov
or
fistl
push
in
pop
push
arpl
repz
jecxz
jno
pop
lret
stc
pushf
fildl
ret
adc
aam
aad
sbb
repz
out
dec
sbb
xor
mov
imul
mov
movsl
lahf
xchg
xchg
popf
push
int
xchg
push
scas
add
push
adcl
je
enter
jp
hlt
xchg
or
aad
scas
into
mov
in
call
imul
in
out
int
rcr
sbb
mov
mov
push
cmp
cli
push
pop
dec
aas
fistpl
adc
mov
aam
or
sub
mov
xchg
lret
pushf
jae
ja
cmp
stos
push
pushf
test
cltd
push
rcl
sub
xchg
test
mov
imul
fimuls
push
inc
dec
jp
and
or
cmp
shl
aad
stos
inc
test
mov
shlb
or
sbb
scas
pop
fisttpll
les
and
movsl
lock
imul
jecxz
pop
jmp
fmul
scas
call
xchg
push
mov
or
in
fwait
icebp
test
add
icebp
mov
insl
cs
mov
sub
loopne
xchg
iret
ja
dec
xchg
test
repz
es
shl
lea
insb
js
out
xor
aaa
adc
and
bound
xor
lcall
out
scas
je
daa
mov
cmp
xchg
shlb
mov
pop
sahf
mov
test
scas
cmc
adc
inc
push
mov
lods
test
xor
enter
xlat
repnz
aaa
sub
loope
add
lret
or
jns
sub
push
mov
add
into
jl
or
scas
pusha
sarl
or
add
clc
orl
mov
xchg
or
ljmp
mov
ret
mov
iret
sbb
fwait
sti
adc
stos
jnp
xchg
pop
mov
movsb
jmp
xchg
push
xchg
xchg
leave
pop
ret
jp
iret
mov
push
out
test
test
shll
stos
lods
lcall
arpl
jb
cmpsl
dec
xor
popf
aaa
or
cld
scas
xchg
xor
pop
sub
push
cltd
fdivrs
mov
dec
subb
icebp
xchg
es
outsb
mov
aaa
jno
xor
dec
out
jle
dec
lds
jl
push
add
cli
rcrl
inc
scas
xchg
imul
loope
gs
lcall
jno
mov
and
sub
lcall
inc
push
adc
hlt
pop
pusha
mov
push
imul
ss
adc
mov
movsb
pop
inc
ds
mov
cmpsb
jl
clc
das
xchg
cmp
gs
into
dec
push
mov
movb
cmp
xor
mov
mov
das
jb
lds
loopne
neg
cmp
pop
xchg
or
jnp
lcall
xchg
dec
es
pop
sbb
push
sbb
daa
pop
mov
imul
loop
hlt
inc
mov
in
mov
mov
xchg
xor
data16
dec
sbb
out
scas
mov
test
clc
mov
icebp
repnz
xchg
in
mov
xor
gs
xor
loopne
xchg
mov
in
sub
or
hlt
rcrb
push
mov
xor
shlb
push
dec
int
popa
mov
jb
subb
add
xchg
push
pop
cmp
cmp
lock
shlb
push
or
adc
int
push
outsl
jb
sahf
pop
sub
pop
sti
pop
fs
inc
adc
popf
addr16
jno
dec
addb
mov
push
insl
bound
lea
cmc
pusha
jp
inc
xchg
je
fists
pop
push
out
shll
mov
in
adcl
sbb
xchg
cmp
sbb
inc
leave
pop
scas
ret
sbb
inc
push
inc
mov
sahf
insl
mov
and
aaa
adc
repz
lcall
mov
ss
loopne
or
test
jne
aam
or
and
mov
aad
adc
xchg
pop
mov
mov
adc
out
add
dec
sub
cmpsl
roll
add
jbe
inc
cmp
pop
sbb
inc
cmp
mov
outsl
filds
dec
and
dec
mov
popw
fsubs
jl
and
jecxz
xor
cmp
enter
lahf
push
insb
inc
fcomps
xor
popa
cwtl
jmp
pop
push
cwtl
or
mov
adc
and
ds
and
test
or
movsb
sub
subl
adcb
dec
pop
mulb
rol
cmpsl
dec
popf
mov
fcmovbe
or
and
arpl
fiadds
pop
sub
adc
je
je
je
outsb
mov
and
ret
out
and
push
outsb
push
and
lahf
jnp
jmp
cmp
xchg
cmp
cs
jns
and
xchg
jge
jae
push
push
mov
hlt
notb
or
xor
iret
adc
sub
dec
or
or
sub
scas
rolb
lods
mov
adc
sub
sbb
arpl
aas
xchg
bound
stos
sub
jge
xor
sbb
aas
shrl
mov
add
or
pop
addl
xlat
and
lret
pop
sub
push
mov
xchg
stos
mov
and
mov
hlt
xchg
sbb
push
into
xchg
enter
pushf
arpl
and
jmp
xor
pop
je
mov
test
inc
int3
orl
mov
inc
inc
inc
push
out
shrl
cmp
in
iret
mov
xchg
lea
mov
xchg
ficompl
mov
or
cmp
lcall
cmp
lea
ds
sbb
inc
push
insb
mov
enter
out
dec
test
adc
test
leave
testb
fcmovnbe
cld
inc
sub
cmp
pushf
repnz
cmc
and
mov
movsb
pop
popa
decl
add
mov
lock
aas
dec
mov
int
enter
mov
and
and
mov
popf
inc
clc
loope
pop
cmp
mov
xor
leave
dec
popa
push
imul
sub
sbb
jo
and
shll
pusha
andl
aaa
cmp
add
and
inc
jp
sbb
scas
sub
mov
pop
xlat
in
repnz
popf
lret
insl
sbb
imul
jmp
adc
clc
add
cwtl
stos
mov
jbe
jp
mov
xor
push
iret
popa
fcmove
dec
jecxz
or
ret
sbb
lcall
addb
mov
mov
pop
js
push
sbb
rorl
push
push
daa
dec
repz
dec
les
enter
stos
adc
or
jns
pop
adc
push
xor
ret
mov
push
pusha
out
loopne
sub
sub
scas
xorps
das
jb
xlat
fcmovu
cmp
xchg
adc
bound
iret
push
les
notb
leave
popa
sbb
rclb
aam
inc
lods
aad
loop
sbbb
pop
add
cmpsl
mov
stc
mov
jbe
gs
daa
pop
pop
adc
dec
push
or
inc
jne
inc
jl
xchg
cmp
in
call
mov
and
mov
lock
inc
sbb
test
and
pushf
lock
sbb
cwtl
or
sahf
test
mov
int
lret
rol
mov
sarl
out
dec
xchg
iret
ljmp
cmp
dec
jo,pn
or
cmpsb
dec
xor
out
dec
fstpl
inc
and
in
insb
aas
add
sbb
mov
push
xchg
flds
les
jge
adc
push
rcll
cmpsb
xor
or
sub
je
div
aam
jns
pop
jne
mov
sub
jge
mov
add
push
fbld
dec
test
loopne
cmp
in
lret
and
dec
dec
ud1
clc
mul
ret
cli
jle
push
aad
aas
sub
mov
js
rolb
cmp
mov
fcmovnbe
ds
push
je
cvtpi2ps
inc
ret
in
pop
cmp
mov
in
jmp
test
iret
lock
test
lahf
adc
lods
sbb
cmc
loopne
jmp
addb
mov
lods
sbb
push
ret
lcall
dec
fstpt
mov
dec
or
push
mov
in
cmpsl
sbb
adc
sbb
jge
rcrb
fisttpll
inc
test
rclb
jecxz
push
add
cmpsb
xorb
stos
pop
dec
out
mov
cli
fsubr
jle
cmp
dec
or
jns
aaa
dec
lods
fcmovu
sbb
lea
test
addl
jmp
imul
daa
mov
es
popa
mov
pop
outsb
sub
pop
pop
mov
mov
imul
push
sahf
add
cmp
adc
mov
shl
xchg
add
std
inc
jl
lret
push
sahf
push
addb
push
leave
sub
xor
xor
bound
pop
ficoms
cltd
mov
or
aaa
jp
xchg
pop
loop
xchg
cli
in
rcr
arpl
xchg
hlt
ret
mov
lcall
popa
pop
stc
cmpsb
jnp
addb
das
cmp
cltd
mov
out
lcall
push
sub
jg
jp
xchg
cmpsb
jecxz
cmp
xchg
mov
mov
and
push
int
pushf
inc
or
xchg
adc
xchg
jne
shrl
add
aad
outsl
or
sbb
add
sarl
sbb
xchg
xchg
xor
lds
jmp
hlt
mov
lods
cmp
push
xchg
mov
mov
sbb
lock
fisubrl
popf
sub
xchg
cwtl
lret
aas
jge
clc
cmp
jecxz
adc
mov
mov
dec
jmp
aaa
jg
pop
dec
loopne
xchg
lds
lea
and
lcall
test
sbb
clc
loope
xchg
int
lods
es
dec
hlt
add
cmp
imulb
push
rcl
fisubl
cmp
int
aam
incl
mov
mov
xchg
lahf
jnp
push
cmp
mov
sbb
xor
std
jle
int3
jns
lcall
outsb
lds
mov
mov
xchg
mov
mov
push
sbb
mov
mov
cmc
repz
jg
sbb
ljmp
nopl
add
adc
push
xor
mov
roll
das
test
hlt
loop
push
and
int
ror
aam
mov
popf
add
ljmp
xchg
xor
xor
adc
rcrb
inc
mov
mov
mov
addr16
cmpb
xchg
jmp
fildll
imul
lods
pop
xchg
cmpsl
sti
sbb
mov
inc
dec
into
jo
test
and
nop
lods
rcrb
mov
aad
add
and
mov
or
sbb
outsb
lret
sbb
shll
shll
and
out
jp
jmp
test
jle
fisttps
or
ret
mov
and
jmp
insb
add
in
out
es
sub
and
push
add
sbb
addl
es
add
sbb
jno
mov
xchg
push
test
cmp
cmpsb
bnd
mov
fs
sub
inc
aam
cmpsl
xor
ret
outsb
imul
dec
cmp
cmp
cmp
jp
pop
pop
and
push
movsl
or
xchg
mov
pop
sbb
mov
insl
mov
icebp
jg
mov
jmp
adc
mov
hlt
fnsave
jno
cmc
jmp
jbe
nop
xor
js
mov
sbb
add
out
popa
les
add
inc
insb
cld
cmp
xor
mov
in
jbe
cwtl
push
jecxz
pushf
jae
push
pusha
sbb
dec
inc
pop
inc
lret
movsb
xchg
sbb
or
loope
xchg
jae
and
and
enter
and
pop
or
sbb
ds
iret
push
pop
test
sub
rclb
ja
dec
pushf
pop
stc
sub
sahf
ja
sbb
ss
push
dec
mov
aaa
mov
out
cmp
and
pusha
adc
lock
push
adc
shr
xor
xor
xchg
jno
daa
mov
out
ljmp
mov
outsb
pop
mov
pop
adc
xlat
jmp
idivl
stc
fisttpl
pop
cwtl
cmp
sbb
add
push
test
mov
inc
aad
sti
rclb
fst
test
cwtl
pushl
jmp
mov
aam
int3
adc
mov
mov
inc
fdivs
movsb
leave
and
cmp
pop
pop
mov
cmovge
and
dec
stos
lds
pushf
jl
clc
xchg
loopne
into
addb
int3
shrb
or
int3
adc
push
sbb
sub
inc
shrl
mov
mov
mov
fsubs
pop
cs
notl
cmp
and
mov
loope
jae
push
and
data16
test
imul
mov
cmc
dec
mov
mov
jg
movb
dec
data16
mov
ljmp
mov
push
pusha
repz
cltd
int3
popa
aam
add
push
sub
daa
cmp
pop
and
sti
imul
pavgw
rcll
push
dec
int
call
push
in
test
shrb
loopne
mov
scas
addl
ja
les
jnp
xchg
jo
adc
mov
mov
mov
rorb
je
push
add
and
cmc
dec
aaa
xchg
mov
dec
xor
insl
into
cmp
imul
into
mov
scas
cwtl
fldt
dec
sub
fistpl
cmp
negl
gs
cmpb
inc
inc
jp
fs
mov
lret
cmpb
dec
mov
scas
push
adc
mov
stc
testl
bound
int
dec
js
jne
lock
sti
and
ljmp
mov
lods
mov
pop
mov
addr16
popa
dec
ds
imul
loope
int
rcr
inc
clc
mov
add
sbb
push
iret
pop
addl
in
cmp
test
das
jp
mov
jmp
out
pop
ja
mov
sub
jp
repz
mov
mov
es
mov
ds
daa
imul
jl
mov
ja
dec
sub
shrl
inc
jmp
add
xchg
sti
shrb
shrb
cwtl
jae
and
and
test
and
push
outsb
shrl
sbb
dec
ss
rcll
sub
movsb
sub
mov
push
cmp
and
movsb
adc
mov
fcoml
jo
jmp
pop
lcall
sub
xchg
add
xor
inc
push
mov
mov
rcll
mov
test
xlat
add
sar
addb
mov
cltd
inc
stos
sub
or
or
mov
in
mov
imul
mov
and
xlat
and
mov
icebp
mov
dec
movsl
js
or
in
cltd
cmp
bndstx
sbb
xor
shll
inc
pop
xchg
mov
pusha
jmp
adc
xchg
and
pop
push
xchg
mov
cmp
mov
fistpll
jb,pt
push
jns
pop
jno
es
gs
ds
mov
fs
pushf
fisttps
jns
imul
lret
sbb
popf
push
cli
imul
rep
xor
sub
inc
cmp
mov
jge
jle
jne
test
testl
sbb
or
int3
mov
add
lret
inc
pop
das
fnstenv
hlt
jl
jb
shrl
inc
sub
aam
sub
mov
xor
sbb
aam
or
pop
pop
mov
fcoms
sbb
lock
sub
imul
aam
xchg
or
lret
rdpmc
out
mov
test
push
sub
jo
lock
or
clc
mov
sub
stos
ficompl
outsl
mov
push
hlt
inc
fldt
jnp
movsb
xor
jge
push
sbb
imul
sbb
xchg
cmpb
and
pop
mov
xlat
fcmovnbe
jge
insl
movsl
ja
sub
scas
pop
lahf
push
xor
push
xchg
add
mov
int3
xchg
add
mov
add
inc
cmpsb
cmp
and
add
shll
sbb
int3
hlt
push
int
imul
or
jg
xchg
pop
xor
insb
das
push
stos
incl
mov
dec
divps
mov
pop
sbb
enter
dec
pop
jmp
rcr
push
or
xchg
add
fmull
insb
jae
mov
fildl
cmp
popa
not
dec
mov
es
loop
fs
xchg
cmp
xor
mov
jg
je
stc
test
or
dec
inc
and
dec
cmpsb
test
dec
je
pop
xchg
imul
fucom
inc
pop
insb
pop
or
cmp
rcrl
xor
mov
jl
lds
repz
std
sbb
push
inc
add
clc
fldenv
daa
add
sti
jbe
gs
mov
adc
push
daa
pop
sti
repnz
cmp
xchg
stos
stos
push
out
and
xchg
shrl
in
stos
xor
add
pop
and
and
fisubrl
fdivp
rclb
fcom
leave
xor
outsb
fisubrs
push
or
popf
cmpsl
lcall
cmp
cmpsb
aas
push
jno
mov
aad
lret
mov
or
jb
mov
mov
jg
and
ljmp
xor
push
bound
mov
jnp
cmp
cmp
fidivrl
mov
pop
lods
fwait
push
mov
fiaddl
mov
xchg
sar
test
cmpb
jne
mov
roll
aas
pop
stc
out
mov
jno
sub
scas
pop
mov
mov
out
sub
aaa
nop
int3
sub
sub
les
jo
test
inc
push
loop
inc
push
pushl
sub
scas
movsl
mov
mov
lods
js
xor
or
sub
int
inc
push
adcb
lea
outsb
loop
sahf
movsb
iret
imul
sbb
fadd
rorl
subb
sbb
rorb
cwtl
rol
dec
xor
pop
leave
or
mov
sar
mov
or
adc
lret
pop
pop
cs
jno
mov
sbb
and
xor
xor
push
lds
cld
cltd
ljmp
pusha
lret
loope
fwait
pusha
inc
out
std
push
pop
inc
lds
popf
push
rcr
test
test
sub
addr16
inc
cmp
mov
pop
sub
mov
xor
inc
fnstcw
cmp
pop
adc
xlat
pcmpgtb
test
fs
add
jb
cwtl
xlat
mov
cmp
sahf
mov
add
lock
out
popf
fisubrl
push
xor
push
sub
je
frstor
adc
loopne,pt
sbb
mov
loope
mov
mov
cs
daa
adc
push
xor
xchg
into
pop
lcall
xchg
or
pop
lds
loop
and
add
pop
adc
push
or
xchg
lahf
pop
repnz
sbb
dec
xchg
in
cmp
jae
inc
lret
cltd
imul
add
icebp
gs
imul
jl
ljmp
jle
imul
cmp
add
add
leave
lods
ror
or
je
cmp
jge
push
test
push
leave
inc
js
out
mov
mov
lock
pop
xchg
pop
call
stos
jmp
cmp
rcr
shlb
mov
psadbw
ja,pn
xor
cmp
xchg
insb
popf
push
xor
mov
jo
in
into
mov
or
js
sub
lahf
jge
pop
fimull
mov
ss
shrl
cmpsb
adc
gs
mov
push
icebp
stos
push
mov
xchg
jmp
lods
fldl
mov
xor
out
and
jne
mov
movl
xchg
sti
out
pop
cltd
sub
mov
js
addr16
in
dec
loop
bound
movsb
xchg
jno
sbb
sti
or
imul
fs
scas
lods
mov
loope
inc
push
imul
sarb
pop
pop
stos
imul
sahf
dec
int3
stos
pop
cs
inc
lds
in
cltd
loopne
ret
idiv
sbb
in
and
mov
movb
cmc
scas
xchg
lret
or
dec
add
inc
and
pop
add
jg
adc
and
mov
imul
or
insb
lret
inc
insl
in
movsl
or
roll
je
cs
aaa
fwait
inc
push
add
decl
xlat
repz
pop
cltd
mull
ret
cwtl
dec
pop
adc
inc
xchg
shlb
add
test
aad
shrl
cmp
pop
sbb
fnstsw
lds
sarl
sub
aam
sub
dec
mov
loop
add
push
arpl
shlb
pusha
sbb
rcrl
inc
xchg
pop
or
pop
push
xchg
movsb
rcrb
mov
and
sahf
cmp
cs
lcall
pop
arpl
std
clc
mov
decl
sub
arpl
rcr
and
cmp
cmpsb
jo
pop
xchg
pop
dec
das
fcomip
rorl
icebp
pop
ljmp
xor
mov
inc
sbb
add
inc
insb
jo
and
pop
or
mov
push
pop
scas
push
inc
add
push
mov
test
cmpsb
dec
negb
cmp
jns
mov
xor
cmp
fcomip
or
lahf
rclb
lret
add
int
inc
pop
or
mov
inc
daa
cmpb
inc
popl
mov
mov
or
mov
outsl
mov
cmp
cli
pop
inc
das
mov
xchg
outsl
push
aam
xchg
sub
leave
or
adc
xchg
jo
ds
loop
pop
inc
subb
jne
add
sbb
lods
fcomip
pop
orl
addr16
test
add
jae
mov
std
shlb
test
fisubl
and
cmpsb
mov
push
push
jne
movsl
inc
cmp
fnstenv
outsb
loopne
and
dec
pop
or
add
aad
jg
push
ret
fcmovnb
mov
push
mov
int
pop
jo
cmp
cmpsb
push
leave
or
scas
sar
add
xchg
mov
dec
pop
push
dec
xchg
xorl
jp
sar
sub
mov
dec
add
fsts
mov
imul
loope
subl
mov
dec
fcmovbe
js
inc
and
pop
push
sarl
jo
fldenv
push
jbe
hlt
mov
fisttpl
in
mov
rcrb
mov
int3
sub
and
push
mov
enter
mov
mov
in
mov
in
xor
sbb
xchg
pop
lret
inc
jg
mov
push
repz
adc
pop
inc
dec
dec
clc
je
dec
push
mov
pop
je
testl
inc
add
mov
jbe
push
lods
sub
cmp
jp
rolb
push
dec
dec
insl
xchg
or
mov
stos
or
sbb
cmpsb
hlt
shrb
fistl
fistpll
jbe
sahf
inc
mov
mov
cmp
test
fnstenv
sbb
leave
stos
or
sbbl
dec
mov
imulb
lods
int
movsl
or
jecxz
icebp
xadd
cmp
or
xchg
test
mov
add
je
stos
jecxz
stos
daa
enter
xor
inc
rcrb
push
xlat
icebp
rcr
ret
sub
popa
stos
push
icebp
cmpsl
jo
dec
push
cmc
and
fstp
enter
adc
addr16
push
pop
call
push
enter
mov
jle
dec
xor
push
out
ljmp
icebp
add
outsb
sarl
loope
ret
lods
ret
rcll
xor
hlt
sbbl
mov
inc
cmpsb
roll
int3
xchg
lds
rolb
cmc
movb
fnstcw
rorl
mov
push
sub
in
fucom
mov
test
push
inc
xchg
or
adc
adc
inc
mov
out
decb
push
sarl
mov
or
pusha
add
pop
adc
or
mov
cmp
jne
aaa
pop
setnp
xor
jcxz
es
mov
cmc
push
pop
cld
sar
cwtl
loopne
out
or
cmc
lods
jp
pop
dec
inc
xchg
inc
imul
leave
sbb
xor
sahf
shll
push
rolb
inc
mov
lds
fsubrl
mov
pop
push
mov
ss
add
pop
stc
daa
xor
xchg
lret
and
ret
and
add
push
push
dec
incb
sbb
cmp
sub
mov
pop
pop
inc
ror
aad
cs
sub
cmp
xchg
xchg
ret
lods
cwtl
xor
pop
dec
mov
xor
enter
int
push
jge
outsl
data16
cmp
rorl
push
sbbb
lods
xor
pop
mov
push
xchg
scas
mov
cwtl
icebp
add
xchg
mov
cmp
jo
sti
jecxz
cmp
pushf
push
sbb
inc
test
dec
jbe
sub
mulb
push
out
dec
mov
jp
jl
dec
xor
sub
jl
mov
jno
cmp
mov
loope
xchg
sub
sarb
xchg
aad
cmp
add
cmpsl
adc
cmpsb
jge
lahf
mov
outsb
shr
repnz
jg
ds
rolb
insl
je
es
mov
add
frstor
out
sub
into
cmpl
mov
mov
push
test
popf
cmp
sub
or
pushf
pop
loop
cwtl
cltd
fldenv
jmp
add
adc
cmpsb
daa
jo
xor
cmp
push
pop
dec
leave
shrl
iret
lock
flds
xchg
sub
add
call
sarb
call
test
call
bound
inc
inc
jne
test
mov
adc
mov
rcrb
jg
mov
push
lock
add
push
push
jns
nop
icebp
in
pushf
xchg
sbb
aam
fisttpll
xchg
xcrypt-ofb
cmpsl
sub
ljmp
imul
jl
dec
scas
mov
rcrb
inc
add
push
cld
push
repnz
dec
adc
lret
add
mov
testl
and
mov
popf
in
rolb
fdivl
test
outsb
out
cmp
fcoms
sahf
adc
or
xchg
dec
jge
cmp
or
pop
jmp
and
icebp
adc
and
arpl
inc
data16
xchg
lock
lods
or
fs
imul
adc
mov
repz
loope
inc
fsubs
aaa
jbe
lret
add
jnp
call
aas
mov
push
jmp
mov
rorl
mov
or
popf
inc
insl
sbb
inc
cwtl
jnp
ljmp
sahf
test
fldl
call
xchg
mov
adc
pop
inc
xchg
out
xchg
loope
arpl
ret
pcmpgtb
or
test
jo
lcall
adc
pop
xchg
mov
es
movsl
pop
ljmp
xchg
int3
call
xchg
push
xchg
dec
sub
fadds
sbb
add
inc
fisubrs
loopne
or
leave
mov
in
jmp
jo
and
hlt
test
imul
addr16
aaa
jmp
inc
cmp
push
ficompl
jbe
divl
dec
xchg
xchg
mov
sbb
shrb
loopne
dec
aam
or
mov
in
jl
or
daa
and
and
cmpl
pusha
inc
adc
jecxz
mov
sbb
inc
sub
xchg
lock
pop
dec
mov
in
inc
loop
push
int
js
xchg
inc
dec
push
cwtl
negl
js
iret
mov
sbb
push
cmp
imul
xlat
add
or
push
mov
es
lock
cmpsl
outsb
les
test
cmpl
sbbb
das
sbb
push
shll
xor
aam
imul
mov
loopne
mov
inc
popa
rclb
adc
pusha
mov
fdivl
call
mov
data16
adc
enter
roll
in
hlt
mov
fcoms
xchg
inc
loopne
icebp
dec
sbb
mov
ja
jmp
mov
test
jne
outsb
adc
je
pop
imul
jno
xor
dec
sbb
cmc
lret
ljmp
les
adc
cmp
sub
sbb
and
jbe
mov
inc
push
call
je
sbb
hlt
out
push
sarl
fimuls
cmp
pop
in
jge
mov
lds
sti
int3
cli
rcrb
jge
incl
cmp
xor
std
inc
aaa
out
in
or
dec
mov
js
pop
mov
cmp
sti
data16
shll
fimuls
mov
scas
and
xor
test
or
sub
jp
xor
test
loope
pop
push
inc
movsb
pop
or
cwtl
mov
mov
jo
xor
push
ljmp
jg
mov
cmp
xchg
fidivrl
mov
es
sub
xchg
push
xchg
jge
ret
mov
sub
ss
cmp
std
inc
mov
fstl
outsl
push
xchg
fisttpll
xor
xchg
push
fmull
enter
cmp
pusha
hlt
mov
mov
fstpt
mov
ds
add
icebp
xchg
push
fsub
pop
mov
inc
scas
roll
sbbl
push
cs
pop
icebp
dec
enter
ss
push
lea
dec
mov
repz
pop
in
or
xchg
scas
adc
cmp
movsb
fcom
xor
lock
fidivrs
pop
scas
test
dec
jnp
mov
aad
fstl
loopne
fstpt
call
mov
jb
xchg
mov
cld
mov
add
add
ret
xlat
mov
in
sahf
ljmp
xchg
int3
xchg
mov
dec
pop
scas
gs
test
xchg
mov
aaa
ljmp
cmp
aaa
sbb
and
mov
pop
daa
repz
mov
cli
pop
aaa
fcompl
push
push
push
xlat
add
cli
aaa
stos
dec
fnsave
mov
out
cmp
jns
push
add
sub
popl
popa
cwtl
mov
sub
repnz
call
ret
pop
jo
jns
jne,pn
ret
les
and
les
cmpsl
mov
imul
xor
sbb
sbb
and
mov
dec
push
sub
xor
rcrl
adc
ret
cmp
test
cmc
cmpsl
jg
in
inc
sbb
or
sbb
dec
enter
or
pop
add
mov
enter
icebp
inc
jp
aad
stc
add
cmp
cmp
addr16
push
dec
xor
pop
cmpsb
xchg
sar
and
mov
sbbb
rclb
sub
sbb
loopne
test
movsl
xorl
cmp
adc
fidivs
adc
clc
sarb
jl
pop
dec
clc
int3
mov
dec
xchg
aam
push
int
repnz
push
mov
mov
hlt
arpl
jmp
out
dec
push
cmp
fldl
into
ret
ds
and
xchg
add
add
out
mov
lods
mov
lcall
cli
mov
aad
or
xlat
imul
dec
and
push
jae
in
sbb
jle
in
add
mov
js
lods
test
in
xor
add
sub
mov
mov
dec
rorb
outsb
addr16
sub
cmp
lea
jmp
jmp
negb
lock
fcomi
andl
sbb
add
icebp
inc
test
mov
clc
jle
push
push
stos
lahf
xchg
and
xor
mov
pop
jns
shlb
inc
cltd
push
imul
rorl
mov
in
mov
inc
sbb
ret
and
js
push
adc
cmpsl
lods
xchg
xor
in
jg
call
adc
jle
push
loopne
or
rcl
imul
into
add
imull
jnp
pop
push
pop
mov
insb
test
inc
mov
push
js
and
xchg
push
cmp
jbe
pushf
adc
jg
dec
rclb
mov
icebp
xlat
out
popf
inc
push
lds
xor
push
cld
lods
xchg
popf
loope
inc
cmpb
push
mov
xchg
hlt
jle
ds
ret
or
cmpsl
or
insb
sub
jmp
ja
adc
call
adc
idivb
test
adc
pusha
inc
int
inc
lahf
test
fwait
ljmp
dec
and
es
sbb
add
push
jmp
cli
push
and
push
out
les
imul
xchg
in
mov
loopne
cli
gs
mov
mov
push
loop
iret
jbe
scas
shll
mov
sti
int3
mov
mov
jnp
sub
movsl
jmp
or
cmpl
stos
das
sbb
std
or
push
pop
inc
rorb
mov
pop
mov
fadd
ja
cltd
pop
scas
addr16
jle
leave
add
inc
mov
pop
xor
dec
scas
cltd
repz
add
inc
inc
arpl
and
stos
subb
in
gs
lret
xlat
cmp
jl
xor
sbb
iret
push
or
sarl
mov
cmp
js
xor
xchg
xor
adc
es
outsb
hlt
pop
loop
pop
add
stos
mov
sbb
insl
or
pop
push
ss
cmp
mov
imul
sbb
dec
cli
cs
mov
inc
loop
and
sbb
dec
das
sbb
xchg
out
add
fildl
cmpsl
cmc
fninit
stos
orl
mov
pop
cwtl
and
cmp
sub
sbb
mov
lock
sbb
inc
fwait
movsl
das
in
and
movsb
push
lock
cmp
mov
add
cmp
mov
shlb
inc
adc
cwtl
push
xchg
mov
das
subl
xchg
adc
popf
xchg
rcrl
imul
pop
jo
inc
cmpsb
out
dec
outsb
ja
loop
das
scas
add
cmpsl
or
inc
shrb
or
lods
aam
lock
xlat
dec
jl
lods
insl
jns
fstl
out
rol
sub
pushf
or
pop
jne
sbb
outsl
xchg
mov
imul
fs
mov
jbe
pushf
icebp
ficoml
int3
xor
pop
pop
jecxz
xor
add
add
shl
sbbb
out
nop
mov
mov
movsb
int
sbb
test
or
mov
mov
fisttpll
mov
push
mov
or
mov
aam
outsl
push
test
dec
sub
sbb
aad
mov
lret
or
movsb
sbb
out
negl
arpl
jge
fxch
nop
mov
cltd
daa
pop
sti
adc
ljmp
js
mov
sahf
push
xchg
xchg
addr16
sub
adcb
inc
loop
aas
dec
testb
ds
or
daa
fistpll
sahf
pushf
ss
std
dec
and
xchg
add
ja
shll
add
aad
pop
xlat
imul
inc
in
fwait
dec
push
in
es
dec
scas
xchg
pop
nop
sbb
adc
arpl
sbb
push
fildll
cmp
sbb
push
mov
pop
inc
push
mov
ret
leave
mov
leave
in
sbb
cmp
pop
jmp
sub
test
mov
sub
out
int
and
fmul
lahf
test
pop
vcvtps2pd
fidivs
mov
add
adc
mov
in
in
push
mov
decb
cmp
das
cmpsl
stos
inc
pushf
test
stos
or
xlat
cltd
shr
fwait
pushf
lock
sub
int
mov
mov
movsl
or
push
xor
inc
push
shll
xor
cld
fdiv
push
fstpt
xchg
ficoml
lock
out
movsb
dec
je
mov
pop
push
loop
cmpb
test
scas
cmp
mov
imulb
loop
mov
pop
xchg
jle
cltd
adc
data16
cmpsl
cwtl
test
ficompl
push
es
mov
hlt
call
out
mov
lds
cld
inc
mov
cmc
pop
aad
dec
inc
xlat
xchg
ret
adcl
ja
pop
mov
loope
or
mov
mov
sub
add
rorb
lods
pushf
sub
rorb
in
mov
or
pop
mov
fists
ja
pushf
ljmp
sti
mov
dec
adc
or
xchg
daa
inc
into
pop
add
inc
out
and
shlb
fisttpll
xchg
fucomi
jbe
or
test
cltd
sub
imul
popf
jg
out
bsf
jnp
addl
aaa
hlt
mov
test
and
pop
xchg
mov
daa
sub
push
ret
pop
mov
mov
and
ss
or
ds
loopne
jnp
addr16
mov
inc
adc
pop
js
lahf
out
iret
pop
dec
fimuls
jo
adc
xchg
inc
add
jmp
lcall
cmp
mov
add
testb
movswl
push
mulb
pushf
add
jmp
out
push
or
es
loope
out
pop
xchg
dec
inc
push
test
mulb
jb
pop
xor
dec
inc
add
movsl
stos
pop
push
mov
mov
dec
sbb
pop
sub
fs
lods
pop
rol
pushf
cmpsb
shl
sbb
mov
jo
mov
inc
cmpsl
lock
mull
inc
sub
test
cmpsb
xor
inc
in
lret
ror
dec
divb
mov
pop
mov
lret
jae
mov
iret
jmp
cmp
sub
es
leave
fcoms
lds
loop
sub
fidivrs
clc
sahf
add
lods
mov
dec
xor
sbb
add
sub
shlb
mov
inc
arpl
movsb
aam
or
xlat
dec
push
dec
ja
aas
scas
xchg
push
and
mov
lret
push
sbb
mov
mov
mov
js
or
js
leave
cli
jbe
jmp
xchg
xchg
aad
roll
loope
pop
fs
and
xchg
push
jae
loope
pop
imul
imul
stos
push
enter
jge
sub
stos
cmpsl
add
fisttpll
and
xor
dec
scas
out
push
sub
mov
and
les
loop
sbb
inc
pop
and
xchg
rol
xchg
stc
mov
sbb
insb
mov
jns
enter
and
mov
mov
and
jae
sbb
movsb
rorb
add
pushf
pop
std
pop
sub
push
in
out
test
mov
into
mov
outsb
sbb
xchg
out
test
cmp
pop
sarl
mov
fnsaves
push
or
and
cld
lcall
mov
aad
sub
sub
xchg
or
push
xor
dec
mov
jl
adc
dec
and
insl
xchg
cmpsb
add
mov
fistpl
jae
push
std
popa
and
jns
iret
dec
cmc
cmp
lret
or
cli
mov
xor
outsb
addr16
pop
shrw
dec
mulb
das
inc
push
outsl
push
jecxz
mov
push
xchg
mov
inc
mov
adc
mov
cmp
cwtl
pmaddwd
fcomps
lcall
out
cmp
sub
outsl
cld
pop
fistpll
pop
xor
add
cltd
xchg
out
inc
pop
and
out
mov
sub
je
testl
pop
jnp
cmp
popa
arpl
and
jns
loopne
dec
into
mov
adc
je
mov
sub
cld
push
xor
out
call
out
cmp
and
jmp
add
inc
mov
popf
bound
pop
xchg
sub
adc
mov
inc
in
loope
dec
fdiv
les
mov
mov
das
mov
inc
aam
js
and
add
mov
dec
mov
mov
mov
cltd
jle,pt
mov
mov
pop
mov
clc
sti
adc
dec
jne
sbb
push
dec
mov
inc
leave
or
adc
mov
push
push
mov
sbb
int3
std
out
mov
pop
rcrl
push
notl
test
xlat
xchg
clc
cmp
jmp
test
or
dec
sarb
cmp
xor
push
in
mov
mov
inc
sub
out
cwtl
shrb
dec
js
mov
test
xchg
pop
dec
lret
mov
into
subb
fbstp
cmp
mov
lea
sbb
hlt
loope
out
adc
bound
mov
push
inc
adc
movsb
xchg
movsl
jp
sahf
adc
dec
jo
jmp
sub
aad
mov
sbbl
push
pop
sub
add
adc
iret
stos
sbb
sbb
push
cltd
jmp
loop
dec
push
push
push
test
lock
addl
mov
mov
lcall
enter
movsb
sbb
pop
xchg
fwait
je
mov
jo
mov
jno
adc
arpl
add
es
mov
push
cwtl
cli
popl
sub
pop
outsl
xchg
mov
adc
sbb
xchg
inc
push
loopne
xchg
pop
dec
jle
pop
pop
int
lret
cltd
jno
and
inc
gs
add
pop
inc
shr
jo
daa
cmc
xor
mov
in
jnp
or
cmpsb
push
clc
jecxz
mov
rolb
in
dec
fsubrs
mov
addr16
sbb
adc
jp
sti
cld
jae
adc
enter
ret
or
push
mov
dec
inc
lock
cmp
addr16
or
gs
cli
inc
inc
add
sub
xor
inc
popa
sbb
mov
mov
and
pop
loope
pop
pusha
cld
add
pusha
xor
or
jo
mov
sti
pusha
addr16
ffree
das
mov
jge
insb
aaa
mov
jne
push
invd
fistl
jl
into
add
xor
repz
xchg
scas
sbb
out
or
mov
insb
pusha
pop
or
mov
xchg
sub
jecxz
adc
test
pusha
stc
das
insb
repnz
sbb
inc
jnp
out
dec
jmp
mov
xor
in
inc
push
jo
cld
xchg
sub
idivl
les
fwait
mov
add
inc
inc
notb
sub
ret
mov
cmp
and
sbb
jp
inc
rcrb
stos
pop
xchg
xchg
jno
add
xor
push
add
or
dec
xor
dec
out
add
cli
xchg
mov
fs
insb
adc
push
mov
popf
fucom
cmc
dec
cli
pop
mov
adc
and
and
xchg
pop
push
jg
push
rorl
outsl
sti
popa
mov
push
push
xchg
jnp
loop
aas
mul
mov
dec
cmpsb
xor
test
mov
rcrl
dec
xchg
sti
mov
jmp
jbe
enter
mov
or
rorb
leave
popl
mov
test
push
pop
dec
popa
jo
and
mov
adc
fsubr
jo
test
ret
inc
fmull
adc
les
pop
xchg
cmpsb
cmc
outsb
xor
push
fwait
jle
lods
add
mov
imul
mov
inc
jne
pop
and
rorl
daa
popf
lret
xchg
adc
jbe
push
js
mov
dec
iret
xor
cmp
push
pop
adc
pop
fdivrs
lahf
or
push
inc
cltd
ljmp
xchg
adc
lret
arpl
filds
jg
gs
jno
adc
xor
jae
aas
outsl
push
lods
mov
pop
or
sbb
sar
xlat
and
push
mov
mov
fnstcw
pop
inc
inc
and
pop
mov
shrl
dec
sub
sub
push
orb
outsb
jbe
lea
leave
xchg
adc
test
jp
test
outsl
dec
jbe
cli
inc
xlat
push
cmpb
mov
adc
jg
inc
dec
pop
pushf
push
xor
daa
loopne
mov
xchg
mov
mov
and
fsub
pushf
fildl
dec
ret
xchg
dec
inc
push
push
dec
adc
inc
mov
neg
sub
fsubl
add
pop
ljmp
mov
rcl
jb
in
and
loop
inc
inc
outsl
fs
negl
add
push
adc
cmc
mov
inc
dec
pop
cmp
or
outsl
in
or
mov
xchg
jno
in
repz
push
add
test
xor
inc
inc
arpl
cmp
imul
lds
mov
insb
faddl
jbe
lahf
jge
mov
jge
jne
xor
cld
shrl
shl
mov
aas
jns
push
bnd
mov
jb
xor
xchg
rorb
xchg
out
dec
jno
mov
bound
sti
test
or
mov
and
sahf
ret
sbb
scas
jg
lret
xlat
sub
inc
addr16
imul
repz
lcall
mov
decb
push
pop
push
cmpsb
xor
stos
sbb
mov
sbbl
inc
jmp
sbb
cmp
and
adcb
or
jno
div
ficomps
cwtl
jbe
cmp
movsl
mov
repz
fsubrl
stc
push
scas
mov
sub
push
lods
push
orb
push
js
or
push
js
add
jo
jl
xchg
into
add
lret
dec
stos
add
mov
sbb
xchg
pop
stc
xor
int3
popf
sbb
lea
loop
or
shr
pop
xchg
pusha
insl
xor
outsl
mov
mov
mov
push
and
ficoms
into
add
aas
repz
jg
xor
mov
call
cltd
outsb
push
cltd
push
mov
jg
clc
shrb
or
add
sbb
cmpsl
push
scas
loope
mov
pusha
mov
mov
fcom
pop
add
pushl
jge
or
das
lock
je
mov
gs
scas
adc
fs
push
and
dec
sub
repz
or
test
or
jnp
testl
es
adc
fdivl
inc
xchg
adc
inc
add
in
lea
push
or
popa
shrl
sbb
push
pop
push
stos
test
repnz
adc
or
push
jno
xorb
je
xchg
xrelease
mov
xchg
pop
dec
push
das
insb
in
lahf
testl
sub
insb
mov
sbb
sub
imull
pop
mul
push
inc
divl
divl
pop
xchg
mov
imul
mov
mov
leave
lahf
scas
jecxz
or
inc
dec
xorb
shlb
xor
inc
mov
fcoms
outsb
cmp
mov
pushf
test
lods
mov
add
jae
addb
mov
cmpb
shlb
push
mov
adc
pop
lds
mov
scas
stos
xor
imul
inc
sbb
sub
push
jae
mov
mov
outsl
adc
lods
lods
aad
imul
and
xor
ret
lods
add
xchg
das
jae
fisttpll
pop
push
stc
mov
pop
jns
aad
xchg
shr
pushf
out
ss
insl
mov
cmp
jp
outsl
or
jle
xchg
mov
xchg
push
add
lods
push
push
fldenv
sbb
ret
decb
or
adc
popl
out
adc
xor
leave
in
scas
clc
dec
mov
ret
lock
inc
fdivrl
pop
outsb
push
sahf
jae
ds
in
cmp
mov
fadd
pop
rol
decb
out
sti
mov
push
and
dec
pop
aaa
outsl
gs
subl
pop
and
and
clc
shl
in
lea
jmp
dec
xor
decb
add
popf
mov
push
cmpb
pusha
cld
sbb
stos
movsb
jo
roll
inc
loopne
sbb
lret
xchg
sub
std
dec
loopne
fsubrl
out
xor
adc
loope
mov
adc
pop
loopne
mov
aaa
adc
inc
stos
mov
jmp
mov
mov
sbb
lea
adc
into
ret
jae
xchg
adc
push
and
incl
cmp
add
data16
lret
mov
in
sbb
sahf
aas
xlat
jno
adc
and
jne
xchg
decl
jb
iret
inc
les
push
out
movsb
mov
xor
clc
xor
in
inc
inc
xor
lods
pop
dec
aaa
xchg
mov
and
dec
shl
cmpsl
shll
push
gs
jbe
js
sbb
insl
push
mov
pop
and
sbb
imul
push
push
pop
push
xchg
or
or
into
out
sahf
sub
dec
and
repz
and
enter
mov
popa
jge
movsb
sbb
push
mov
and
pusha
aam
mov
cld
ret
cld
adc
mov
data16
cltd
cmpsl
dec
into
mov
mov
popf
or
into
lock
stc
call
pop
ret
ja
sub
leave
cwtl
mov
out
pop
jae
fidivrl
dec
xchg
inc
popa
cmp
loop
adc
jle
hlt
sahf
ljmp
add
xor
sbbb
pop
inc
aad
mov
test
jne
js
scas
push
enter
push
inc
inc
es
jo
push
ret
ret
movsb
or
adc
enter
dec
faddl
inc
addr16
das
push
orb
mov
je
pop
sub
cmp
mov
in
xor
and
fisttps
pop
outsb
loope
pusha
mov
xor
or
xor
fscale
xor
inc
das
ja
xchg
repz
add
cs
and
xchg
sub
mov
push
fnstsw
sahf
fisubrl
lcall
std
lods
pushf
cwtl
xchg
push
ret
inc
lcall
dec
inc
cmpsb
add
notb
pop
xchg
mov
inc
das
or
push
rcl
fists
loope
subl
ret
sbb
jae
jae
lds
xorl
push
adcl
mov
jge
mov
push
gs
insl
mov
repz
aad
cld
cmp
outsl
jmp
jge
bound
out
je
mov
lock
rorl
dec
jo
cmp
pop
out
push
fistl
cmpb
cmpsb
inc
addr16
sar
mov
and
push
popf
push
pop
sbb
pop
inc
dec
stos
fcompl
nop
xchg
cmpsb
rclb
jne
scas
push
add
adc
shlb
fs
icebp
movsl
imul
leave
inc
shrl
sub
mov
out
add
push
lods
jnp
repz
je
inc
pop
or
adc
repz
dec
fdivl
stos
repz
clc
aas
leave
lcall
and
dec
ror
mov
leave
jg
insl
test
jae
test
mov
pop
push
cs
pop
stc
mov
mov
insb
stos
or
push
or
cmp
pop
pop
insb
or
stos
out
sbb
test
popa
test
outsl
inc
test
inc
mov
inc
rorb
stos
movsb
pop
sbb
cmp
rcrb
addr16
and
pop
or
mov
dec
in
rclb
aad
jp
int3
testl
xchg
jp
scas
es
pop
fcomp
adc
cmp
adc
rorl
fld
push
pop
pop
sbb
mov
mov
neg
stos
aaa
or
cwtl
push
push
sahf
cmp
out
ret
sub
mov
das
dec
jge
push
sbb
cmp
pushf
xor
jo
int
pop
mov
loop
adc
out
and
out
and
dec
fs
sub
pop
into
ret
mov
fidivrs
sarb
subl
mov
xor
sub
xor
loopne
pop
adc
jns
cmp
add
mov
mov
xchg
mov
mov
sti
negl
rorl
dec
jno
push
rorb
xor
jne
adc
lods
add
xchg
stos
and
inc
negl
sbb
into
sub
scas
mov
pop
push
ret
dec
roll
sub
cmp
rclb
mov
les
sbb
shlb
ret
popa
inc
cs
adc
cmpsb
das
jno
mov
push
xchg
outsl
fdivrs
mov
fidivrl
push
into
xchg
aad
jae
into
loopne
inc
dec
and
xchg
and
push
int3
pop
rorl
nop
das
shlb
dec
pusha
inc
push
mov
add
aad
mov
sbb
jge
das
repz
mov
ficoml
xor
xchg
mov
inc
mov
xchg
lahf
lret
and
pushl
inc
mov
sbbb
ret
fildl
fildl
add
iret
les
xchg
inc
xchg
lret
sahf
pop
adc
mov
mov
xchg
bound
mov
scas
mov
mov
js
stos
jno
xlat
jo
pop
xor
in
mov
jmp
loope
lret
stos
mov
inc
lret
xchg
cmpsb
lcall
add
movsl
je
push
dec
out
mov
stos
xor
dec
call
and
sub
jmp
inc
inc
mov
dec
sub
dec
cmp
imul
dec
sub
xchg
repz
adc
xchg
movb
adc
pop
jmp
adc
jno
imulb
lcall
sub
sbb
mov
mov
pop
pop
iret
jmp
cmpsb
sub
lret
fcoms
lea
sahf
and
mov
push
iret
pusha
mov
push
dec
mov
scas
adc
mov
das
push
je
or
sub
cmp
mov
shlb
push
mov
pop
bound
adc
pop
stos
push
or
inc
fstpt
and
fs
push
movsb
mov
sbb
jle
je
dec
cmpl
xchg
mov
mov
subb
pop
pop
mov
bound
add
fadds
pusha
stos
insb
sti
rcl
xlat
push
or
push
mov
pusha
mov
jl
jnp
and
icebp
sahf
push
leave
mov
and
int
xchg
add
repz
add
pop
push
sti
or
xor
loop
scas
jb
mov
mov
test
sub
push
adc
out
out
in
leave
xchg
repnz
fistps
cmp
pop
sub
lret
loop
dec
jno
sub
cs
pop
pop
das
out
leave
outsl
in
in
sub
icebp
shll
and
subl
in
sarb
mov
inc
push
xchg
insl
ret
inc
dec
shrl
jecxz
cli
xchg
hlt
mov
dec
test
mov
and
fmuls
fisttpl
pop
sarb
xor
mov
add
pop
sub
or
or
inc
iret
push
int
cmc
icebp
dec
jae
addr16
and
add
neg
mov
sbb
add
pusha
popa
mov
loopne
pop
pop
sahf
pop
mov
repnz
leave
mov
mov
jp
in
jb
pop
add
sarb
and
or
add
dec
inc
mov
mov
mov
aam
pop
in
mov
jge
movaps
int3
pop
cmc
jae
sbb
arpl
call
xchg
inc
es
jle
out
push
sarb
push
dec
lds
jge
jg
mov
xor
popf
std
cmpsb
test
aam
inc
lods
and
sub
aad
push
cmpsb
push
pushf
jns
push
lods
xchg
jo
sub
and
lret
jo
and
cld
sarb
push
popl
cmp
test
psrld
and
test
je
pop
test
jecxz
pop
cmpb
inc
imulb
imul
aad
loope
in
sahf
out
cmp
ret
iret
jmp
jl
lods
test
pushf
lahf
imul
jb
pop
loop
mov
aam
and
insb
stos
inc
popf
mov
dec
test
mov
and
mov
or
mov
js
dec
and
jne
xchg
ljmp
notl
and
mov
jmp
cwtl
lock
repnz
xor
lock
bound
or
xor
xor
add
push
cmp
jmp
rcl
test
mov
mov
xor
xor
cmp
jle
nop
and
ret
inc
mov
popa
ficompl
sbb
pop
xor
push
lea
pop
mov
outsb
stos
shlb
scas
sbb
pop
gs
cmp
out
and
fiadds
sahf
push
adc
lea
iret
arpl
adc
xchg
outsb
sbb
xchg
push
mov
mov
cmp
fdiv
push
popa
or
rorb
imul
sub
shld
adc
sub
sub
xchg
xor
push
mov
orb
shl
jecxz
mov
add
mov
in
shl
xor
cmc
enter
sub
loop
cmpsb
xor
mov
pop
xlat
mov
xchg
pop
mulb
mov
ret
sbb
cmpsl
fdivp
jmp
lret
fmulp
xchg
in
outsl
sub
ja
mov
mov
lahf
inc
test
divl
test
lahf
pop
xchg
cmp
sarl
xor
jo
movsb
std
addl
sbb
in
adc
push
in
nop
rclb
xchg
xor
push
call
ffreep
cmp
xchg
mov
mov
dec
sbb
sti
mov
bound
in
rolb
mov
pushf
out
sti
mov
lea
movsb
dec
mov
mov
sti
fwait
int3
jne
out
dec
push
outsb
inc
subps
jl
fisttpll
adc
out
outsl
mov
cltd
stc
rorb
incl
addr16
leave
xor
ja
mov
jp
cmp
dec
lock
in
and
jecxz
into
push
orl
mov
aaa
mov
sahf
add
inc
cmp
mov
pop
adc
repnz
push
sbb
inc
pop
sub
mov
xchg
inc
test
sbb
push
cmpl
clc
xchg
jecxz
sbb
jns
dec
push
fdivl
dec
scas
dec
inc
ljmp
shlb
mull
pusha
pop
mov
mulb
out
mov
adc
mov
ret
mov
out
imul
rcr
sub
sbb
xor
push
push
lret
jno
sbbl
imul
sbb
ljmp
les
js
int
pusha
lock
clc
add
pop
popf
pop
pop
popf
mov
or
outsl
jle
and
shll
int3
jp
push
ss
sti
mov
pop
outsl
ret
pop
cmp
je
pop
mov
adc
mov
mov
insl
push
lods
fmuls
add
dec
stos
test
dec
int3
in
inc
sub
adc
mov
inc
xchg
hlt
mov
je
inc
pop
int
loop
jae
rcll
mov
sbb
push
push
adc
add
mov
push
mov
adc
jb
and
in
xor
ret
add
addr16
pop
iret
dec
imulb
arpl
and
mov
mov
dec
push
sti
daa
mov
fs
sub
jae
mov
add
xor
ret
cltd
pop
adc
mov
add
cmp
lcall
add
or
sbb
test
mov
pop
cld
adc
jo
pop
stos
adc
and
jmp
sbb
sbb
cmp
cmp
sbbl
add
inc
repnz
add
cmp
mov
cs
aaa
adc
pop
ss
jns
sbb
pop
sbb
sub
pushf
push
icebp
mov
aad
and
pop
cld
or
push
cwtl
js
andb
mov
pop
or
out
xchg
ret
insb
fisttps
ss
jnp
sahf
in
pop
sbb
adc
out
mov
pusha
add
cld
hlt
push
inc
fdivp
push
push
xchg
inc
cltd
pop
sub
cmpb
mov
insl
or
aas
sbb
lret
mov
jl
call
xchg
mov
push
adc
pop
test
lret
inc
insl
sub
add
sbb
and
pop
aam
cmc
jb
fs
jg
leave
mov
xor
or
hlt
cld
mov
stc
xchg
inc
rclb
adc
aas
push
xorl
pusha
add
mov
jle
adc
outsb
push
popa
xlat
add
add
push
lahf
dec
inc
pop
mov
jb
cs
aaa
jae
jmp
xor
sahf
cs
fisubs
loopne
inc
mov
or
push
pushf
aam
jp
dec
cwtl
lods
iret
cmp
cli
mov
jmp
pop
inc
clc
sahf
arpl
mov
xchg
add
jl
xchg
lret
or
and
pop
add
inc
jnp
loope
pushf
dec
std
rolb
adc
orb
inc
sub
out
pop
and
flds
inc
jge
fidivrl
out
jl
arpl
dec
mov
cld
adc
cli
push
cli
lods
push
sarl
fs
sbb
shll
jle
mov
je
and
cmpsl
mov
xorb
aas
cli
mov
sub
aas
sbb
in
jno
or
push
or
pop
addr16
mov
in
mov
mov
inc
ljmp
mov
push
add
push
mov
add
mov
movsl
jp
lods
cmp
jno
cltd
xlat
cmp
pop
push
push
iret
int3
add
es
push
jbe
dec
fistpll
or
clc
push
sub
ret
popf
push
rolb
ds
mov
jl
push
je
jg
cltd
fdivl
push
add
push
xchg
popa
mov
in
cmp
xor
scas
xor
mov
adc
hlt
addr16
jle
mov
xlat
mov
sti
das
ret
js
imul
icebp
mov
jp
mov
cmc
sarl
pop
add
add
and
das
or
loop
cmp
movsb
imul
mov
jp
lods
cmp
aas
sbb
mov
add
pop
sbb
icebp
jbe
test
jne
xchg
xor
and
push
rcll
jnp
xchg
rcrb
ret
dec
leave
and
sbb
xor
cmp
dec
xchg
inc
insb
push
xor
or
xor
mov
shrl
add
push
arpl
std
icebp
mov
cmc
aas
imul
stos
push
mov
cwtl
jmp
mov
mov
fldenv
scas
stos
dec
arpl
jnp
jns
mov
leave
push
inc
ja
fldl
xchg
push
inc
loopne
jno
test
push
je
insb
or
pop
mov
dec
xchg
push
aaa
mov
cmpsb
add
push
inc
xlat
inc
iret
xor
adc
or
lods
inc
push
jo
cmp
pop
lds
push
lds
jle
xor
or
fsubrs
insl
mov
jl
push
push
xchg
push
lea
cmp
jl
mov
add
dec
leave
outsb
mov
xor
sbb
add
and
add
repnz
push
movb
push
in
push
ljmp
adc
jo
mov
jg
push
mov
and
insl
mov
int
mov
mov
mov
icebp
jo
or
ja
outsl
fnstcw
xchg
push
icebp
ja
insl
std
fistpl
mov
mov
jbe
push
lds
in
or
cld
imul
je
push
and
cmp
add
ja
push
je
push
loopne
mov
outsb
xchg
adc
sub
call
lock
dec
icebp
ja
or
outsl
das
scas
xchg
mov
pushf
push
mov
leave
push
cs
sbb
push
xor
imul
daa
inc
pop
lock
pop
or
rolb
inc
test
push
ljmp
sbb
and
imul
add
jg
adc
stos
fwait
mov
dec
mov
insb
pop
lcall
shl
icebp
fs
adc
sbb
stc
jmp
loope
jle
int
adc
mov
insb
jmp
push
cmp
xchg
lods
and
xchg
push
loopne
mov
das
push
rcll
rcrl
je
mov
adc
xchg
mov
adcb
sbb
repz
arpl
outsb
ss
jmp
or
push
in
fdivs
leave
fwait
jge
outsl
pusha
pop
xchg
mov
nop
aaa
inc
imul
lahf
cltd
je
mov
jl
xor
rolb
ret
push
dec
mov
pusha
imul
cmp
rcrl
cmpsl
adc
dec
je
fwait
popa
je
imulb
sub
cmpsl
mov
cmp
mov
jnp
xor
data16
add
leave
lcall
shll
aaa
aad
mov
cmp
vandpd
shll
addr16
imul
data16
sbb
out
jecxz
mov
into
sub
and
inc
pop
aas
data16
xlat
or
in
cmpsb
mov
in
js
inc
or
xor
jns
mov
movsl
xchg
xchg
pushf
dec
popf
aas
dec
fwait
sbb
loope
cltd
ficomps
sub
out
mov
nop
xor
daa
in
call
ss
jbe
inc
ss
add
stos
xorb
insl
aam
sub
mov
aaa
sbb
inc
or
jno
pop
jo
orb
stos
outsb
or
mov
lahf
adc
jmp
cltd
mov
mov
call
daa
jmp
push
lods
dec
stc
mov
push
movsb
sbb
aaa
adc
shll
inc
imul
xor
dec
ret
cld
cmp
mov
lret
ret
cs
mov
insl
inc
add
or
fucom
xor
movb
xchg
pop
mov
shlb
decb
pop
add
adcl
sbb
add
cmp
lahf
addr16
int3
call
stc
mov
and
loop
lods
fs
mov
mov
jne
cmp
stos
and
sar
mov
ret
mov
pop
gs
sbb
sbb
fwait
cs
cmp
and
addr16
jp
sub
ja
lods
lea
cmp
mov
test
sub
dec
sub
mov
cmp
inc
xorb
lds
adc
and
jecxz
pop
fmul
in
adc
inc
repnz
jnp
pop
aaa
mov
fcomi
cmp
pop
adc
notb
nop
popa
repz
lods
orb
mov
mov
pop
xor
jge
scas
push
in
sbb
and
in
and
push
addr16
jg
imul
sub
pop
inc
mov
ror
push
inc
jo
lcall
pop
mov
nop
sub
stos
cmc
sti
dec
es
imul
cmp
jbe
stos
sti
mov
mov
in
cmp
sub
cltd
push
cmpsb
addr16
lea
mov
stos
hlt
sub
hlt
cmp
lds
pushf
xchg
mov
and
sbb
jno
test
jb
loop
push
jns
pushf
ljmp
mov
lods
imul
jns
outsl
mov
rcl
out
cltd
adc
fs
sti
cli
jmp
mulb
sbb
add
ljmp
dec
and
push
leave
popa
std
fsub
pop
sub
and
xchg
sbb
into
mov
movsb
and
aam
shl
gs
add
outsb
loope
mov
lcall
pop
jne
jbe
inc
jle
lcall
fidivl
xchg
stos
cmp
mov
or
and
les
xchg
xrelease
lods
cmp
cmp
jge
das
mov
pop
lahf
mov
inc
xchg
push
imulb
adcb
push
pop
push
insb
jns
addr16
cli
xchg
imul
inc
adcl
xchg
or
push
sti
fnsave
jl
cmpl
xor
rcr
cmc
std
or
xchg
inc
das
daa
sbb
stc
sbb
cmpsb
pop
roll
mov
jb
mov
jo
jns
inc
sti
xlat
dec
cmc
dec
add
push
cld
cld
cmp
sbb
rcrb
mov
iret
mov
sbb
bound
inc
daa
orb
icebp
bound
js
add
sbb
sub
mov
xchg
shrl
sahf
int3
sbb
mov
and
lret
jne
adc
add
sub
sahf
das
movsb
inc
push
mov
mov
mov
push
cmp
out
push
adc
es
std
and
push
lcall
jb
and
into
or
pop
xchg
mov
cmc
lahf
pop
outsb
shrb
loop
into
pop
cwtl
inc
xor
loope
movsb
cmc
mov
decb
cmpsl
mov
inc
fstpl
stos
cmp
dec
jnp
fimuls
fwait
gs
mov
jg
mov
sbb
cmp
fsubrs
add
add
mov
enter
cld
add
iret
int
mov
push
adc
push
mov
jnp
repnz
repz
inc
xchg
pshufw
ljmp
sti
and
in
int3
hlt
cli
inc
or
daa
movsl
adc
or
lret
sub
ds
mov
pop
iret
es
xchg
mov
in
inc
sar
sbb
mov
and
rolb
rcrb
loopne
push
test
mov
push
inc
cmp
daa
mov
movsl
jns
or
loop
sub
inc
fs
mov
dec
aaa
test
cmp
icebp
incb
out
ret
mov
sub
mov
push
fsubrl
sub
bound
in
faddl
ret
aad
or
xor
dec
xabort
cmpsb
cld
cmc
lods
in
ficoms
push
orb
mov
and
dec
testl
push
lds
pop
imulb
inc
and
jge
mov
add
sub
cli
sbb
std
fnstsw
push
jb
pop
cmp
into
mov
jp
dec
jmp
pop
das
lea
sbbb
out
or
jle
jmp
mov
jnp
sti
dec
test
sbb
push
mov
arpl
push
lods
xor
in
cltd
std
sarl
add
dec
lret
hlt
dec
add
bound
orb
ljmp
sub
sbb
repnz
xchg
loope
lock
loopne
repz
popa
or
sahf
xlat
out
and
cmpb
mov
inc
dec
dec
in
mov
mov
cmp
or
leave
cmp
or
fisttps
js
sarl
push
fstpl
xchg
aad
fmul
and
jge
adc
dec
popa
in
add
or
adc
dec
fists
shll
pop
movsl
movsb
adc
mov
repz
scas
cli
in
inc
sbb
gs
ret
sbb
lods
hlt
pusha
jecxz
cld
mov
jecxz
push
imul
push
andl
sub
pop
mov
mov
lods
jp
insl
jns
lods
xor
add
adc
clc
rcr
lea
lds
data16
lods
in
shll
dec
pop
test
mov
dec
addr16
inc
xor
incl
mov
xchg
jl
sahf
stos
adc
inc
scas
push
lods
xchg
cs
lea
call
jno
add
cld
pop
in
mov
xor
iret
int3
pop
cltd
adc
inc
sub
mov
adc
mov
lock
or
dec
stos
popf
sbb
ss
pop
test
mov
mov
arpl
and
cs
arpl
pusha
pop
das
fisubrs
cmp
and
xchg
mov
insl
pop
adc
xor
or
fistpll
stos
mov
push
clc
sub
adc
inc
insb
fstps
sub
shrb
cli
add
clc
shll
je
rcrl
jg
xor
adc
mov
ljmp
repz
cmpsb
clc
jmp
add
inc
repz
pushf
out
or
adc
leave
add
inc
adc
mov
mov
pop
test
lea
dec
into
scas
imul
test
fucom
call
xchg
adcl
int
inc
cmp
xlat
pop
inc
cmpsb
mov
cmp
sbb
rorl
pusha
xchg
shlb
or
scas
enter
mov
fwait
cs
lcall
out
sti
jo
movsb
sbb
push
mov
cmp
icebp
repnz
dec
xchg
inc
dec
mov
mov
std
dec
inc
lret
dec
mov
aam
pop
mov
xchg
mov
mov
xchg
ds
mov
int3
loope
pop
inc
add
popf
pop
ret
out
lea
xchg
outsl
push
scas
imul
pop
fsub
sbb
and
push
les
mov
in
loop
test
mov
lret
or
xchg
mov
lds
scas
jecxz
cmpb
daa
fdiv
arpl
or
out
mov
sbb
arpl
push
ret
je
popf
xor
mov
std
rorb
push
xor
cmp
cs
xor
mov
sub
add
sub
and
stc
push
add
mov
scas
add
push
leave
pop
jp
or
lret
jnp
repnz
xor
popf
xor
pop
test
in
loope
mov
addr16
test
dec
push
inc
rolb
ljmp
shlb
std
in
xchg
std
sti
stos
fdivs
mov
rcrb
decb
es
inc
scas
xor
imul
mov
adc
test
repnz
push
add
aaa
or
adc
dec
or
lds
fisubrl
xchg
add
fnstsw
iret
adc
pushf
jp
loop
sahf
in
jl
jge
outsb
mov
xchg
lock
nop
and
or
pop
cli
mov
cmp
and
jl
pusha
xchg
or
loope
mov
repnz
imul
inc
jmp
insl
push
and
leave
push
dec
jle
jl
stc
jne
dec
sbb
lret
mov
es
xor
aam
pushf
push
cmp
insl
out
cmp
xor
dec
cli
xchg
xor
adc
scas
add
orl
mov
jl
push
lret
push
pop
cmp
add
add
cmp
xorb
fildl
dec
pop
or
fmull
adc
test
pop
jle
and
cmc
aas
cltd
call
roll
xchg
dec
jne
and
adc
sbb
addr16
aam
lret
mov
mov
mov
push
fsubrl
jno
mov
dec
and
sub
cmc
ret
sbb
dec
mov
push
bnd
call
dec
mov
push
xor
push
movsb
insb
mov
lcall
ror
xchg
dec
xlat
das
aad
pop
cmc
add
test
xchg
sub
ss
inc
ljmp
cltd
dec
scas
je
inc
xchg
loopne
mov
dec
ficoms
ret
add
xor
ja
outsl
pop
mov
inc
in
insb
aad
push
shl
lret
xchg
mov
ret
movsb
mov
push
fimull
push
or
push
arpl
mov
xchg
int
pushf
into
daa
test
lahf
sub
repnz
call
aam
cmp
jmp
add
repz
push
into
fmull
imul
inc
ds
inc
and
leave
out
xor
xchg
and
cmpsb
cmp
insl
mov
push
or
xchg
into
xchg
fstl
mov
xchg
pop
sbb
push
enter
jns
ficompl
cmpsl
xchg
div
insb
ror
cmc
dec
loop
sbb
les
sbb
je
aas
iret
pop
mov
repz
xchg
and
pusha
jp
aad
jp
repz
push
jp,pn
mov
adc
jae
adc
fdivr
mov
adc
jo
insl
push
addl
aam
sbb
cli
xchg
and
hlt
dec
into
int3
push
cmp
inc
add
inc
loop
lcall
mov
int3
jl
push
adc
hlt
in
in
loopne
int3
sub
inc
in
cmp
mov
dec
cmpsl
je
stc
push
rep
sub
xlat
jbe
inc
push
add
movsl
hlt
enter
dec
xor
push
xor
aas
xchg
and
out
lock
lods
adc
dec
pusha
mov
xchg
shrb
fcoml
loopne
pop
dec
repnz
ljmp
or
repnz
sbb
sahf
lcall
dec
sub
jnp
dec
xlat
add
imul
sti
jo
idivl
nop
add
aam
pop
or
fldt
fistpl
ss
mov
or
pop
xchg
sahf
sbb
cmp
fcom
cld
addb
mov
pop
ds
xor
pop
push
sub
add
mov
test
mov
std
call
gs
int3
mov
xchg
push
fs
push
mov
xor
dec
aas
inc
imul
dec
jmp
cmp
push
sbb
add
lahf
ss
ss
sbb
shrl
push
pushf
sbb
sahf
les
dec
inc
mov
jg
out
in
ljmp
mov
repz
mov
jge
xchg
aam
or
and
mov
cli
sbb
jle
fstpl
xor
inc
xor
shr
lret
push
mov
xchg
inc
dec
adc
cmp
mov
jg
adc
mov
mov
sahf
outsl
jns
int3
es
cmp
xor
mov
sub
jno
fstl
or
test
stos
push
mov
push
stos
into
xor
adc
lock
loop
push
and
and
in
mov
loope
inc
aad
aam
mov
rcrl
scas
cmp
lcall
in
xchg
bound
mov
jle
pusha
xchg
test
cmp
jns
push
xor
jne
pop
adc
in
mov
jmp
sbb
add
mov
sarb
dec
js
cmpsl
cltd
dec
inc
and
sbb
mov
adc
push
cmpsb
lods
std
jg
mov
adc
adc
ds
gs
xor
roll
stos
and
dec
and
shl
mov
repz
lahf
fdivl
out
rorb
add
sti
inc
ret
into
inc
test
imul
pop
js
shrb
pushf
outsb
out
jns
xchg
in
stc
push
add
cmpsl
jmp
mov
mov
inc
or
mov
popf
std
sub
sarl
fldl
mov
inc
shll
mov
repz
xor
push
sbb
xchg
in
lods
dec
xor
roll
lret
fcomi
xchg
outsl
in
test
adc
dec
das
in
mov
xchg
push
jecxz
gs
cwtl
sbb
mov
xchg
jne
cwtl
sarl
or
mov
mov
movsb
inc
into
in
roll
mov
and
adc
cmp
mov
or
das
jne
sahf
daa
icebp
mov
loope
cli
xchg
push
test
add
roll
xchg
jecxz
out
imul
dec
icebp
stc
mov
hlt
sbb
jo
mov
shld
bound
fs
cmp
pushf
into
dec
mov
rcr
dec
sbb
lea
mov
sub
into
mov
les
sbb
leave
out
adc
in
rcll
xor
fdivrs
push
sarl
shrl
lahf
es
xor
sbb
out
fxch
dec
lret
sub
dec
mov
in
mov
jae
inc
ret
xor
ljmp
mov
sbb
mov
inc
icebp
aam
mov
and
dec
jae
mov
call
inc
adc
push
lods
mov
movsb
jge
sub
jns
push
ljmp
dec
xchg
cwtl
ret
inc
sub
or
outsl
mov
sub
inc
loope
jle
outsl
movb
orb
dec
xchg
out
mov
fsts
mov
push
es
xchg
push
jnp
or
dec
outsb
or
lods
lods
inc
enter
loopne
adc
xor
out
add
jg
hlt
xchg
lahf
or
jle
sub
push
inc
imul
in
sbb
dec
inc
push
push
add
jg
shll
jo
out
push
dec
idivl
and
lds
sahf
add
inc
pop
push
jp
imul
jcxz
cld
xchg
adc
fsubs
xlat
lock
iret
es
adcl
push
cli
nop
pop
adc
int3
xor
js
addl
enter
adc
jb
idivl
pop
dec
ret
daa
mov
lahf
arpl
mov
adc
dec
ds
jmp
daa
xchg
stos
leave
repz
repnz
js
cmp
ljmp
mov
mov
sbb
ljmp
cli
mov
mov
cmp
and
lret
ljmp
xor
cmp
dec
sbb
dec
sarb
out
test
xlat
sbbb
bound
sbb
frstor
in
popa
cmp
repz
fstpl
and
inc
test
lret
dec
mov
js
ret
out
push
mov
leave
xchg
push
das
jle
mov
adc
rcll
add
fst
mov
mov
arpl
imul
adc
pusha
mov
popa
cmpsl
lcall
ds
mov
and
xchg
push
mov
fldenv
cmp
push
mov
push
leave
xchg
outsb
xchg
pop
cwtl
and
jmp
ljmp
xchg
add
in
icebp
fbstp
sbb
es
dec
mov
push
mov
clc
outsb
loop
sbb
dec
jge
into
mov
jmp
inc
pushf
inc
cmp
loopne
add
cmp
push
dec
and
add
les
mov
sbb
sub
sahf
repnz
scas
jno
subl
stos
cmpsb
sbb
cmp
pop
fmuls
xor
pop
adc
insb
push
or
or
out
ret
jle
leave
push
lock
jl
lret
mov
xchg
mov
pop
jae
mov
xor
iret
mov
cmpsl
pop
in
int3
icebp
clc
orl
int3
aam
xchg
mov
jne
or
and
imul
xor
fmull
inc
or
dec
lods
adc
jge
inc
icebp
js
insb
mov
fwait
sub
push
mov
add
push
mov
imul
das
cmpsb
lds
xor
mov
pop
jb
mov
sbb
jno
xchg
push
dec
jg
jb
pop
push
xor
mov
pusha
sub
push
sub
shl
enter
out
out
push
adc
pop
shll
lods
imul
sbb
out
pop
adc
stos
xor
xchg
cs
mov
ljmp
lock
xchg
sbb
inc
mov
adc
cmp
xor
jno
sbb
jbe
ss
push
inc
adc
xchg
into
mov
jg
push
inc
je
mov
mov
cmp
cmp
adcl
test
notl
sbb
test
sbbl
shrb
sub
mov
and
inc
mov
into
jae
xlat
test
insb
mov
or
scas
ret
push
in
xor
lcall
push
xchg
cmp
aas
data16
inc
xor
dec
pop
mov
jg
mov
mov
pop
idivb
or
xchg
rorl
imul
jb
add
mov
push
shlb
cmp
divl
or
pop
xchg
mov
and
and
sbb
lahf
out
mov
int3
xchg
sub
popa
sub
imul
iret
pop
jbe
test
inc
sub
ljmp
dec
fsubrs
pop
adc
jmp
mov
sub
add
rcrl
data16
ljmp
push
ds
lcall
pop
cmp
xor
inc
arpl
es
popf
mov
gs
popf
dec
dec
mov
in
js,pn
or
mov
mov
iret
imul
sahf
adc
mov
add
pop
mov
jecxz
jnp
pushw
cmp
int
lret
inc
and
je
adc
test
sub
lock
stc
sub
push
movsl
jge
je
cmp
out
repnz
pop
out
test
lea
pop
in
cmp
xchg
push
in
mov
jbe
adc
roll
inc
mov
andb
add
jne
mov
ljmp
ljmp
jnp
fildl
fnsave
push
cmpsl
imul
adc
pop
and
test
push
sbb
push
movsb
mov
lock
data16
jl
or
into
sbb
and
aas
inc
subb
cmp
cmp
in
xor
shrb
add
mov
movsl
mov
lret
push
lret
xchg
stos
enter
sub
lods
jle
or
std
dec
jb
std
xor
jae
inc
fucom
sbb
xor
jmp
and
pop
jne
cmp
sub
xchg
push
jmp
push
test
xor
mov
movsl
mov
mov
popa
data16
mov
sub
mov
xor
cmp
fs
pop
jb
sti
lret
xchg
pop
jne
xor
lcall
push
jno
enter
or
add
xchg
pop
imul
es
mov
sub
pop
icebp
lret
jnp
push
xchg
add
sbb
sub
sahf
or
lret
dec
cs
lcall
pushf
adc
cmpsl
int3
and
out
lea
outsb
push
push
pop
imul
dec
out
lods
pop
adc
adc
xchg
idiv
xchg
and
push
pop
popf
and
lock
xchg
das
clc
push
fistl
xor
mov
dec
push
enter
ljmp
lods
jno
ret
sub
sub
and
stos
idivb
inc
mov
repnz
rcll
test
cld
xchg
cmp
pop
mov
pusha
in
mov
jg
stos
daa
std
das
movsb
pop
repnz
movsb
dec
in
fwait
aas
pusha
sub
ss
test
lahf
mov
repz
or
pop
insl
sbb
and
leave
mov
mov
adc
add
lock
dec
dec
or
pop
sti
js
int3
mov
ds
leave
push
push
adc
push
jne
jmp
subl
fnstsw
or
and
mov
int
in
in
cmp
rdmsr
add
clc
pop
dec
jne
scas
and
dec
js
inc
rcrl
scas
sub
test
ret
sbb
mov
sbb
xchg
mov
lock
mov
stos
adc
ds
mov
push
or
movsl
scas
sahf
push
icebp
mov
shl
mov
mov
jmp
fstpl
data16
rsm
mov
add
inc
out
ss
xor
aad
pop
loopne
aaa
clc
mov
movlps
cwtl
inc
cwtl
std
out
xor
inc
repnz
sbb
dec
mov
jno
mov
lret
fsubs
fistps
jae
inc
pop
insb
out
inc
add
sbb
mov
rolb
repz
ds
push
or
push
fpatan
ss
jae
mov
enter
icebp
jb
xchg
cmpsb
or
out
inc
dec
test
into
icebp
in
sbb
out
inc
call
enter
subb
dec
mov
adc
sub
push
stos
xchg
mov
xchg
rclb
mov
nop
jecxz
xorb
dec
pop
add
aad
sbb
sub
push
rorl
sub
pop
fiaddl
xchg
rcll
dec
mov
out
sbb
dec
mov
shrb
pop
cltd
jl
aam
scas
push
stos
mov
adc
shrl
pop
jle
rolb
xchg
cmp
pop
push
sbb
in
xor
ret
pop
xchg
imul
aam
jae
and
int3
xchg
fldcw
sbb
rorl
add
imul
adc
dec
mov
xchg
das
loop
fsubl
cltd
jp
insl
push
add
jns
and
inc
push
mov
jae
fisttpll
cmp
js
or
cmp
xchg
sub
or
iret
jo
loop
jg
mov
aaa
pop
mov
out
push
stos
test
movsl
jne
lods
push
dec
mov
dec
dec
scas
xchg
push
rcl
xchg
cwtl
dec
xchg
fldenv
adc
sub
aaa
scas
mov
mov
xchg
shll
mov
jmp
ret
dec
mov
jb
mov
testl
test
dec
or
dec
lret
lahf
ljmp
loope
insl
shlb
and
xor
cld
sub
adc
fcmovbe
repz
mov
outsl
movl
out
and
decb
call
mov
ja
inc
mov
and
fs
int3
or
mov
cmc
pop
sub
sub
stos
adc
dec
sbb
sub
xor
and
popf
into
mov
mov
jmp
cmp
or
leave
cmc
jge
xchg
test
mov
sub
or
mov
insl
ret
or
mov
xchg
adc
mov
outsl
xor
add
outsl
push
fldenv
clc
or
xor
add
push
in
rorl
push
lock
jne
adc
push
es
lcall
test
fistpl
mov
jg
cld
adc
dec
andl
add
ss
push
nop
and
aas
fisttps
imulb
pop
into
lret
nop
lcall
and
mov
sbb
pop
scas
or
mov
mov
in
je
rclb
fistpl
sub
loopne
adc
xchg
mov
mov
in
mov
push
es
je
and
imul
pop
and
or
daa
jb
loopne
stos
xchg
addl
cmp
dec
inc
mov
lea
jp
scas
ja
inc
fadds
add
divb
fst
es
cmpsl
insb
xlat
mov
repnz
adc
dec
pop
leave
scas
sub
sub
test
jne
fldenv
and
add
sbb
aaa
inc
hlt
ud1
adc
mov
lods
sub
cld
es
xchg
sbb
loopne
aas
mov
and
push
mov
out
pop
arpl
mov
cmpsb
sarl
xchg
adc
hlt
repnz
xchg
divb
push
or
outsb
sub
stos
xchg
add
daa
cmp
sbbl
or
mov
and
push
repz
gs
xchg
aam
and
setne
ljmp
mov
jg
xchg
sbb
mov
jp
rcll
cld
sbb
xor
xchg
cs
call
xchg
scas
lods
adc
dec
mov
cmp
lret
outsb
sar
pop
push
mov
mov
daa
push
jg
add
mov
dec
rcr
dec
repz
cmp
insl
stc
es
mov
and
lea
xchg
dec
lret
add
cmp
dec
xchg
lret
jmp
iret
add
and
das
cmpsl
ljmp
cli
and
into
add
jp
out
add
mov
push
cli
sub
jp
andl
daa
leave
xchg
add
pop
jp
add
scas
imul
add
fidivl
scas
jno
mov
add
mov
pop
push
mov
pop
cltd
fldl
andb
fnstenv
inc
sbb
mov
lods
push
insl
and
push
xor
adcl
leave
xchg
nop
je
jno
sub
in
and
xchg
add
mov
aam
push
mov
inc
daa
xlat
sbb
leave
cmp
sahf
dec
mov
in
dec
daa
push
data16
out
rcl
popa
bound
jb
xor
jge
cmp
push
push
pushf
jmp
sbb
pusha
mov
pusha
divb
cwtl
cwtl
mov
aas
mov
xchg
or
sub
pop
cmpsl
mov
ds
mov
sbb
je
and
push
sub
insl
scas
sub
or
xchg
mov
push
outsl
stos
dec
sbb
rclb
cmp
jae
pop
repz
inc
rclb
xchg
imul
lds
lahf
push
mov
push
and
daa
mov
hlt
and
inc
sub
inc
sbb
mov
dec
out
aaa
stos
je
ja
adc
mov
fisttpll
sti
mov
dec
loopne
lret
ja
cltd
pop
add
xor
bound
mov
pop
push
dec
fildl
fs
mov
or
pop
js
jno
pop
xchg
xor
js
pop
jnp
pop
call
xor
ret
adc
mov
les
jns
dec
pop
ja
push
and
int3
sub
xlat
out
in
and
insb
arpl
jo
inc
xchg
dec
dec
push
dec
or
push
dec
adc
jo
ds
cwtl
test
and
mov
and
mov
sbb
ss
inc
sbbb
push
in
dec
mov
leave
and
fdivrl
inc
int3
adc
xchg
mov
loopne
xchg
cmpsl
sub
aaa
sub
dec
movhlps
pop
xor
dec
std
cmc
mov
mov
dec
scas
and
enter
xchg
add
sbb
adc
pusha
int3
xchg
cmp
into
adc
mov
gs
ret
push
out
or
cmp
orb
sub
dec
addb
cwtl
push
dec
pop
lret
fildl
add
mov
mov
sbb
inc
addr16
adc
inc
aaa
lea
and
js
sub
fs
jecxz
jg
add
shlb
cltd
and
lahf
sar
pop
imul
test
jg
sub
or
cmp
mov
xor
jb
mov
dec
ja
jp
out
and
test
sbb
jl
jg
sbb
lret
jnp
test
ja
mov
mov
das
adc
push
mov
aaa
mov
out
gs
gs
inc
push
add
xor
shll
xchg
ljmp
dec
stc
push
je
and
iret
add
push
fsubrs
mov
mov
inc
bound
adc
insl
call
push
dec
lock
in
jo
and
movsl
jae
dec
into
js
cmp
xor
xor
popa
repz
inc
mov
dec
ficomps
add
mov
in
jnp
pop
rclb
push
icebp
lahf
loopne
scas
scas
add
nop
ret
sti
pop
or
scas
mov
repz
adc
dec
or
inc
xlat
fidivrs
sub
push
pop
sarb
mov
pop
cmpsb
push
and
and
xor
cli
mov
fwait
cmp
xor
fpatan
xor
mov
pusha
inc
fldl
popf
dec
dec
mov
add
inc
sub
in
xchg
lahf
mov
sub
add
push
xchg
mov
in
out
fwait
in
inc
adc
cmc
test
sbb
jns
jg
fldenv
sbb
xor
lret
mov
jns
push
mov
dec
pusha
xor
add
mov
ja
or
add
xchg
pusha
std
sbb
prefetcht2
aaa
add
addr16
in
lods
sbb
or
daa
ret
stos
into
sahf
cmc
xor
insl
pusha
ror
inc
dec
mov
sti
sti
int3
mov
dec
cli
mov
js
js
int3
xchg
dec
sub
cmp
pop
ror
iret
dec
cmp
daa
jnp
add
add
inc
shrl
out
or
addr16
lcall
adc
cmp
xor
aas
outsb
mov
push
mov
and
test
or
out
stos
test
jmp
test
cmp
jno
dec
sub
mov
and
jne
adc
inc
dec
mov
push
and
repz
js
fbstp
or
hlt
jge
inc
and
inc
xchg
add
adc
xchg
inc
jmp
mov
xchg
sbb
mov
xchg
sub
lcall
add
lcall
jno
pop
iret
andl
orb
imul
dec
jo
jnp
insl
cld
sub
mov
rcrl
dec
jecxz
aad
add
pop
loope
jo
shll
std
in
pop
hlt
test
repz
cmp
pop
rorb
jg
decl
pop
into
ret
jns
cli
adc
pop
jmp
mov
mov
jle
push
xor
add
in
clc
or
insl
push
fisubs
push
pop
outsb
cwtl
arpl
ret
lds
push
subl
rorl
add
cld
mov
adc
repz
jno
pop
into
jp
js
xchg
fistpll
adc
jnp
jns
xorl
int3
mov
pusha
mov
mov
sub
xchg
adc
mov
das
cld
mov
mov
push
loope
rcrb
rolb
cmp
fwait
mov
rcrl
xchg
mov
push
stos
movsb
aaa
rcr
jmp
jo
shll
movsl
fbld
add
mov
lcall
xchg
mov
and
mov
imul
mov
icebp
sub
ss
add
bound
or
into
inc
mov
lcall
pop
or
test
xchg
rol
jmp
and
push
mov
push
call
loopne
sbb
ret
xlat
in
mov
jae
das
pop
lds
ds
or
pop
pop
sub
xchg
pop
std
jne
sbb
push
ja
divl
lods
xchg
mov
mov
test
mov
xor
or
mov
mov
jnp
adc
mov
inc
sub
mov
aad
stos
jb
xor
inc
testl
cs
or
out
sub
lods
push
cli
ljmp
out
stos
sub
pusha
sub
aam
inc
mov
pop
push
mov
shlb
out
sbb
pop
push
sbb
sub
pop
xchg
jmp
mov
out
cli
inc
pusha
inc
int
aaa
mov
mov
cld
pushl
loopne
iret
cs
insl
icebp
jae
call
and
jo
div
inc
repz
or
mov
iret
jge
sub
or
adc
out
sub
not
and
sti
pusha
enter
pop
gs
dec
sub
xchg
stos
hlt
xchg
dec
jl
push
mov
scas
mov
sub
jg
add
lock
push
or
push
push
leave
lahf
fs
imul
xor
push
cmp
sahf
ljmp
addr16
jno
in
jbe
and
insl
into
faddl
mov
cmc
imul
xchg
mov
outsb
int3
icebp
movb
insb
push
push
mov
push
jbe
add
popf
clc
xor
fimull
mov
shll
jg
stos
adc
mov
imul
and
sbb
jmp
lret
rorb
and
insb
push
addr16
jmp
int3
int3
sbb
pop
pop
leave
std
enter
gs
inc
and
jmp
sub
mov
inc
mov
cmp
mov
lods
bound
repnz
mov
inc
or
sbb
movsl
outsb
sub
outsb
jns
push
cs
aam
pusha
cmp
dec
lcall
testl
xor
pop
xchg
mov
mov
dec
outsb
arpl
inc
outsl
jl
stc
push
push
std
insb
test
stc
xor
cmp
call
js
mov
or
mov
lock
fwait
scas
dec
stc
push
int3
mov
stos
cmp
jle
mov
cmp
js
push
mov
cmpsb
jp
movsl
rol
add
lret
js
rolb
push
xchg
jo
std
add
pop
mov
xorl
scas
popf
test
mov
repnz
loopne
fwait
or
call
pop
or
js
jne
lock
adc
adc
into
pop
pop
int3
cli
cmp
push
jb
and
addl
daa
js
pop
sbb
push
adcb
bound
stc
scas
outsb
xchg
inc
popf
lret
ljmp
les
mov
cmp
call
inc
pop
in
in
fwait
jb
or
jp
add
mov
or
nop
sub
inc
scas
outsl
adc
test
lods
mov
xchg
enter
jmp
fisubrs
jnp
xorl
jp
icebp
into
lock
insb
dec
or
das
mov
pop
je
dec
and
mov
movd
add
sahf
cmp
jne
inc
inc
push
push
test
or
jecxz
mov
mov
testl
mov
adc
inc
stc
fwait
and
cmp
cmp
rorb
stc
jbe
sbb
cld
scas
jge
inc
push
clc
xlat
mov
adc
repnz
cmpsb
scas
add
je
sahf
add
test
push
orb
mov
sti
jp
lahf
mov
cmp
fnstcw
sub
fwait
xchg
add
repnz
pcmpgtw
incl
scas
mov
arpl
movsb
nop
mov
insl
or
scas
decb
les
outsb
adc
sahf
mov
push
out
and
aaa
pop
jp
fistps
imul
repz
pop
cmp
jp
stos
mov
test
fbld
dec
mov
and
xchg
mov
xchg
orb
dec
pop
push
jp
or
or
jle
mov
pop
je
jecxz
fs
mov
int3
je
stc
add
aaa
sub
jg
xchg
sbb
pop
scas
mov
mov
dec
sub
cmp
nop
fldt
fidivl
fwait
push
or
cli
pop
das
or
or
mov
mov
jnp
jns
loope
jge
mov
dec
jo
fidivrs
inc
lahf
mov
rorb
xor
clc
mov
or
pop
jo
jmp
in
popa
jbe
insb
inc
push
and
fs
insl
adc
outsl
iret
sub
dec
stos
sti
sbb
jp
dec
sub
dec
js
aas
scas
and
and
ds
test
inc
addr16
xchg
aaa
add
into
push
inc
dec
xor
mov
fdivrl
ljmp
push
sti
inc
cwtl
jns
fldt
mov
adc
mov
xchg
adc
js
mov
flds
fdivp
loop
stos
mov
negb
jne
jl
fwait
cmpsl
out
sub
jle
pop
jecxz
pop
sub
adc
mov
inc
nop
sbb
jne
imul
outsl
dec
adc
int3
pop
mov
pop
clc
fmuls
cmp
sbb
push
push
into
push
or
stos
push
adc
adc
outsb
lds
movsl
test
xor
cmp
hlt
mov
fwait
sbb
xchg
je
xchg
dec
jge
xor
mov
jge
aad
mov
sti
pop
jo
popa
lods
push
fildl
arpl
adc
stos
xor
mov
test
mov
mov
mov
pop
ds
test
inc
mov
jge
cmp
xor
jno
xchg
dec
adc
jecxz
cmpsb
dec
inc
cld
mov
mov
test
push
jno
mov
mov
rolb
and
icebp
cmp
pop
scas
ret
sti
clc
cmp
lcall
jp
add
mov
cli
mov
lret
and
cmpsl
lahf
cmc
movsl
adc
sbb
aas
sbb
je
mov
pcmpeqd
mov
and
test
inc
cmc
stos
ret
test
jne
fldenv
test
aad
jbe
aam
ret
mov
sub
mov
jl
pusha
mov
subb
pop
and
orl
mov
ljmp
mov
and
not
xor
popa
jb
daa
push
fldenv
in
lret
lahf
xchg
pusha
xlat
push
fwait
xchg
adc
fistpl
es
loopne
mov
bound
xor
fstpl
fcomi
cld
dec
xchg
jmp
addr16
fs
bound
add
push
test
sbb
out
repz
sbb
inc
push
push
les
or
pop
cmpsb
mov
insl
jbe
cmp
in
pop
pop
adc
les
hlt
mov
or
mov
aad
xchg
dec
push
or
add
and
sub
dec
lcall
xor
mov
add
ljmp
lds
adc
mov
movsb
arpl
in
push
xchg
mov
dec
add
and
pop
shrl
in
push
or
roll
mov
mov
mov
or
call
pop
and
mov
jno
orl
xor
lret
mov
pusha
subb
clc
jle
aam
push
sub
adc
movl
push
and
sub
mov
gs
test
arpl
lods
or
out
fimull
cmp
mov
int
vrsqrtps
mov
pop
call
iret
orl
mov
or
sbb
scas
or
xchg
sarb
pop
sti
fcompl
clc
adc
movsl
or
aas
or
sbb
xchg
movsl
mov
push
mov
fidivl
imulb
mov
int
bound
mov
aad
mov
dec
add
xor
out
js
add
xchg
mov
ljmp
or
mov
xchg
mov
sub
lods
sbbl
and
mov
mull
xchg
mov
sub
fwait
addr16
jl
xor
stc
pop
dec
lea
int3
adc
fs
cmp
pop
ljmp
xchg
outsb
push
test
stos
aam
or
in
rcr
sbb
mov
inc
dec
popa
jbe
fwait
xor
dec
xchg
inc
in
mov
xlat
stc
and
or
outsb
sbb
xchg
xor
mov
test
cltd
sar
mov
adc
cli
dec
push
ja
mov
mov
adc
jbe
frstor
sub
push
mov
mov
and
aad
mov
xor
cmp
cmc
hlt
push
push
sub
jg
mov
push
scas
hlt
lret
ret
pop
lahf
outsb
test
out
adc
and
push
and
fs
and
jp
dec
jecxz,pn
cmp
jno
outsl
in
jl
rcrl
sbb
test
insl
hlt
ljmp
xchg
sub
inc
pop
lret
lock
cs
add
xchg
stc
sub
iret
inc
lret
scas
mov
fistps
mov
shr
je
mov
inc
mov
mov
pop
xchg
dec
xchg
loopne
mov
adc
lods
xor
dec
addr16
pop
pop
lret
sbb
cltd
fnsave
ret
jbe
iret
std
adcb
js
jmp
push
dec
gs
test
repz
sub
mov
mov
and
xor
xchg
cmp
sbb
daa
aam
rclb
add
or
pop
outsl
push
test
adc
data16
lret
xor
out
leave
add
mov
gs
mov
dec
dec
aam
icebp
shlb
cli
std
xchg
loop
loope
leave
cld
loop
adc
movsb
icebp
or
sbb
loopne
pop
push
add
scas
cmp
add
add
push
fistl
stc
and
adc
xor
loopne
push
xor
popa
sbb
hlt
ret
daa
push
jg
cmp
test
mov
clc
push
shlb
data16
jo
mov
stc
add
cmp
cld
inc
adc
cld
insb
std
cmpsl
lahf
fsts
out
push
data16
imul
pop
xchg
testl
jae
cwtl
loop
add
sbbl
cmp
inc
xchg
loopne
mov
in
push
push
mov
xchg
and
divl
repnz
addr16
xchg
push
movsb
and
mov
xchg
jg
fcmovnu
jo
jns
insb
adc
push
dec
mov
es
bound
sbb
inc
cwtl
jns
sbb
jbe
pop
pop
xor
aas
push
mov
out
cmp
dec
add
loop
pusha
push
and
xchg
inc
or
rep
add
int3
jmp
imul
and
jecxz
inc
test
std
mov
pop
or
jg
sub
mov
dec
in
and
mov
in
add
or
mov
jne
xchg
stc
mov
xor
xchg
fs
ret
push
cltd
cld
or
in
and
mov
dec
les
mov
pop
andb
imul
xorl
insl
mov
or
insb
add
loop
loop
push
mov
cld
cmovp
aas
inc
imul
pop
dec
push
mov
aas
or
cmp
ficompl
sub
jb
mov
fistps
je
loope
loope
fmuls
clc
mov
inc
pop
popf
andb
insb
jb
xchg
push
insl
pop
mov
pop
or
fs
mov
mov
adcl
jae
mov
pop
mov
addb
lahf
or
add
pop
shr
xchg
std
cmpsl
mov
loopne
clc
lods
pop
nop
or
mov
nop
std
shl
mov
lock
xlat
jae
adc
int3
push
inc
or
into
outsb
sti
and
sub
std
pop
stc
xor
push
jns
gs
insb
sbb
add
adc
insl
lcall
jl
cld
aas
sbb
jbe,pt
jmp
jmp
adc
push
aad
cmpsb
ror
jl
xchg
and
dec
mov
adc
mov
or
mov
ja
insl
mov
add
adc
pop
loopne
pop
xchg
xchg
out
adc
dec
adc
in
sti
xor
outsb
popf
sbb
mov
xchg
cs
cs
mov
popa
jle
inc
test
cwtl
loopne,pn
popf
mov
test
incl
dec
test
sub
mov
cmp
xchg
add
aas
jo,pn
decl
pusha
insb
or
dec
and
test
and
pop
xchg
out
ja
imul
jmp
sub
negl
jle
inc
sbb
lcall
in
adc
push
and
xor
pop
daa
mov
mov
lcall
subb
jge
movsl
sbb
dec
cmp
fildll
jge
test
ret
out
xchg
aaa
cmc
icebp
ljmp
pop
mov
mov
enter
sbb
outsl
lahf
lcall
lahf
mov
incl
std
xchg
ficoml
xchg
ret
fldl
and
sbb
lods
sbb
xorl
insl
sub
test
das
xlat
and
sbb
mov
sbb
push
and
jno
xchg
lods
cmp
in
xchg
arpl
fadds
and
jmp
jo
sbb
pop
adc
add
cmp
sub
and
jo
arpl
pop
sbb
add
adc
roll
xchg
lock
xchg
shrl
mov
fidivl
adc
sub
sub
mov
sbb
dec
ret
jne
and
jae
push
pop
xchg
nop
adc
int
and
stc
rol
sti
iret
fidivrl
xchg
fadds
push
cmp
mov
in
dec
dec
dec
mov
dec
fadd
add
xchg
xor
add
fld
dec
dec
mov
insl
push
es
lret
inc
adc
mov
icebp
xor
mov
pop
ljmp
shrl
mov
mov
push
shlb
xor
fidivl
or
orl
xchg
in
and
dec
fiadds
mov
lods
imul
orb
scas
cmp
sbb
pop
outsb
imul
frstor
mov
xor
pop
and
js
pusha
jo
lret
xchg
and
add
inc
dec
sbb
xchg
sub
inc
sub
mov
fisubs
fistl
dec
ret
roll
push
std
movsl
add
cmpsl
stos
jg
lea
mov
clc
in
inc
dec
push
push
pusha
mov
xor
mov
bound
mov
add
xchg
gs
imul
jp
shll
cmpsl
loop
or
cwtl
adc
enter
cwtl
xorb
rolb
inc
xor
iret
leave
popf
and
add
xchg
ret
je
vfrczss
imulb
sub
out
sbb
rclb
inc
and
std
icebp
jl
jg
ret
xor
out
orl
cmc
out
mov
repz
sbb
cmp
pushf
adc
scas
clc
cmp
or
in
sarb
insb
and
sbb
adcl
push
subb
sub
push
push
sarb
xor
out
xor
insl
ret
cli
idiv
inc
cli
sbb
and
scas
mov
imul
data16
sti
dec
push
mov
adc
cmpsb
aas
in
shr
jle
jle
sub
cmp
repz
cmp
jmp
hlt
cmp
int
jge
in
leave
xchg
dec
inc
pop
sbb
cli
scas
and
dec
add
xchg
sub
lcall
fmull
in
or
fidivrs
sbb
mov
popa
mov
loopne
icebp
scas
and
or
sbb
in
call
mov
popf
jmp
cmpsb
stos
clc
icebp
push
push
enter
mov
mov
jno
sub
leave
cmpsl
jo
push
xchg
shrb
call
mov
popa
test
ficoml
out
xor
outsl
ja
arpl
jae
out
test
into
jno
and
xor
inc
std
movsl
and
lods
xchg
adc
xchg
fcomp
sub
xchg
mov
inc
aaa
xchg
daa
jg
mov
mov
add
test
ret
xchg
aam
sub
fistpl
aaa
into
sbb
stos
jl
retw
mov
fisubrl
insb
out
out
ljmp
cmpb
clc
mov
rorl
sub
movsb
pop
arpl
cmp
js
out
or
xchg
add
cwtl
push
cmp
cmp
orb
mov
xor
push
inc
xchg
test
jne
jns
or
push
lcall
subl
popf
mov
xlat
jbe
jno
cmp
shlb
aam
push
movsb
roll
gs
hlt
and
push
sbb
adc
inc
adc
in
adc
xchg
roll
mov
out
jmp
jp
pop
inc
lds
inc
int3
xor
pop
dec
stos
stc
push
push
sub
aad
enter
mov
jae
xchg
pop
mov
div
pop
andb
adc
dec
negl
hlt
pop
mov
lcall
in
mov
es
jl
out
scas
cmp
test
cmp
movsl
and
xor
jne
inc
sbb
jle
or
lea
or
cmp
xchg
add
mov
repz
in
xor
inc
enter
cmp
pop
lret
add
arpl
gs
cmpsb
idiv
mov
out
pop
fwait
jns
inc
sub
scas
stc
jp
pop
outsl
xchg
iret
push
fwait
sub
mov
push
std
pop
xchg
jb
jbe
aad
dec
imul
popa
icebp
xchg
test
inc
pop
or
mov
sbb
out
xchg
test
cld
popf
inc
lcall
cwtl
mov
ljmp
aaa
push
or
movsb
xor
mov
into
test
scas
adc
mov
jns
shr
add
arpl
mov
mov
pop
jge
addr16
into
mov
sub
cmp
fsubrl
jne
sbb
dec
fwait
addb
mov
cltd
in
xor
xchg
fs
notl
push
imul
arpl
lret
lahf
pop
jns
in
clc
pop
bnd
das
xchg
fisttps
push
push
add
and
pop
lcall
dec
mov
mov
sbb
or
mov
mov
cmp
aad
js
push
push
in
ss
xchg
inc
push
cmpl
jns
out
mov
ret
fdivs
sbb
pop
jmp
pop
cmp
je
jg
inc
idivb
sbb
xor
mov
mov
xor
mov
andb
sbb
ds
fwait
adc
stc
out
fildl
pop
inc
and
pop
jle
xorb
mov
mov
ret
sbb
xor
dec
or
imulb
stc
aas
sub
fisttpl
pop
sub
cmp
aaa
out
subb
ja
xor
dec
push
sbb
inc
mov
sub
into
jl
sbb
ret
cltd
add
sbb
mov
push
add
loopne
jo
xchg
insb
adc
cmp
aaa
pop
fstps
push
xchg
daa
lea
popa
fdivrl
and
push
jmp
rcll
mov
jg
movsl
ficoms
data16
cmp
ret
pop
das
imul
mov
push
loope
idiv
popf
cmpsl
inc
lock
sbb
xchg
sbb
xchg
sub
icebp
sub
mov
pop
jae
daa
add
xor
sbb
or
ret
jo
sbb
push
xchg
test
call
xchg
call
push
jb
lods
dec
xor
pop
jle
sahf
sarl
dec
mov
lcall
fildll
mov
fisubrs
adc
mov
push
mov
push
push
mov
cwtl
cmpsb
ja
in
cs
add
xchg
repnz
sti
dec
adcl
push
pop
mov
dec
push
xlat
ljmp
test
in
out
xorl
clc
jae
add
fwait
inc
add
mov
pop
and
call
ret
fcomps
jno
jg
mov
sub
and
gs
and
fcompl
bound
test
jecxz
imul
add
jnp
int3
cltd
repnz
andb
xchg
aas
jmp
sbb
sbb
mov
mov
mov
dec
mov
and
stc
roll
push
imul
ljmp
into
push
dec
cmp
inc
inc
mov
das
adc
les
jmp
data16
insb
xchg
fdivrl
lods
repz
subl
push
orb
test
sbb
jns
push
sub
mov
push
sub
std
xchg
mov
cmp
test
or
hlt
mov
aad
lcall
sbb
outsb
fnstcw
adc
push
pop
cli
pop
dec
lds
test
xchg
outsl
scas
inc
fdivp
inc
jb
cmp
std
imull
jp
incb
xchg
imul
and
fmuls
mov
lods
outsl
cmpsl
scas
int3
xor
jecxz
addr16
pop
rcr
dec
cmp
push
aad
pushf
pop
jecxz
cltd
mov
test
cltd
push
pop
pop
add
loope
push
dec
lock
jmp
cmpsl
mov
or
in
jl
lcall
cmpsb
mov
stos
sbb
lret
jo
daa
aaa
mov
ljmp
test
gs
xchg
std
fldcw
lods
mov
jno
into
imul
inc
imul
lahf
inc
push
iret
pop
imul
sbb
add
adc
mov
mov
sbb
out
in
add
out
jl
mov
fs
xlat
test
lret
jp
adc
lret
inc
lret
jecxz
imul
lahf
xor
and
add
in
sti
adc
and
xchg
fimull
in
pop
outsl
addr16
mov
shll
imul
ss
jmp
xchg
lods
lahf
fimull
adc
es
roll
ss
xchg
mov
sub
std
adc
pop
mov
das
pop
adc
xchg
push
xor
cmp
pop
test
stos
iret
cmpsl
sbb
leave
fstps
pop
lcall
test
mov
loopne
sub
pop
lret
fistps
sbb
mov
std
sbb
inc
loope
mov
push
or
jl
push
and
into
repz
aaa
pop
mov
mov
xorl
loope
imul
rcll
inc
add
lds
aad
dec
add
mov
cmc
filds
addr16
pop
mov
imul
sbb
stos
test
inc
inc
mov
push
dec
fcoms
sbb
scas
stos
outsl
cmc
int3
fbstp
sbb
push
rorb
xor
scas
cltd
and
inc
out
outsb
pop
sarb
std
ret
mov
inc
or
mov
das
lods
into
add
push
adc
xchg
pop
stc
lods
hlt
and
and
push
ja
push
mov
xor
mov
xor
mov
xchg
ljmp
cmpsl
rcr
repz
dec
jle
jg
inc
fcomip
or
and
repnz
pop
es
sub
in
push
push
cmc
inc
xchg
ja
mov
imul
dec
test
outsb
push
stos
cs
lcall
or
xchg
adc
and
push
mov
jno
dec
outsl
inc
inc
loopne
mov
test
lcall
inc
cmp
xorb
or
or
lock
sub
mov
fsubs
cmpsb
hlt
mov
mov
addb
cmp
out
mov
ret
mov
push
subl
cmp
jmp
mov
mov
or
test
in
mov
xchg
jle
pop
mov
lods
jge
xchg
mov
out
inc
int
pop
push
cs
flds
adc
test
sbb
fisubl
insl
ss
ret
mov
aad
je
int3
cli
inc
js
add
daa
or
jecxz
clc
push
lret
or
adc
test
add
sbb
aad
lahf
sub
fisubrs
cltd
push
mov
cmp
mov
test
mov
xchg
adc
ljmp
int3
icebp
ja
sbb
jmp
adc
repnz
les
sbb
out
cli
sahf
stc
pop
sti
or
test
daa
mov
jp
pop
mov
mov
enter
pop
repnz
lock
xor
dec
push
into
insb
inc
cld
shlb
pop
mov
sub
fidivs
testb
and
jl
test
shrb
test
cmp
or
sbb
xchg
and
push
inc
xor
fldenv
or
scas
iret
xchg
push
add
xchg
addr16
push
adc
fwait
rdtsc
popa
dec
add
dec
mov
bound
repz
mov
push
sbb
lea
mov
int
icebp
mov
xor
sub
add
hlt
jae
shll
iret
test
popa
jb
sub
jl
sbbb
outsb
pusha
push
roll
cmpsb
fstl
jnp
jp
mov
mov
popa
into
pop
jns
mov
mov
jo
jle
inc
push
inc
mov
aad
inc
pop
mov
add
stos
aas
sbb
fldt
add
sub
lods
aam
out
mov
jae
cmp
dec
lods
es
mov
mov
jle
push
inc
pop
xor
xlat
scas
or
daa
daa
xor
push
mov
mov
xchg
jns
sub
or
or
and
push
pusha
add
mov
mov
leave
mov
iret
sbb
adc
mov
and
and
push
fbstp
icebp
lahf
cli
jns
out
loope
sti
test
adc
add
xchg
test
stos
inc
jno
push
sbb
pusha
pop
mov
mov
sbb
xor
mov
idivl
mov
sbb
sbb
ret
cmp
xchg
add
mov
mov
aaa
mull
pushf
in
jne
daa
data16
mov
inc
test
inc
sub
push
xchg
mov
dec
fcomps
adc
std
clc
ficompl
mov
cld
popa
jmp
push
ja
subl
push
inc
pop
outsl
add
js
repnz
mov
lret
pop
push
mov
sub
and
sbb
pop
cmp
push
mov
cltd
push
adc
mov
mov
test
int
sub
cmp
or
or
xchg
xor
pop
inc
into
dec
xor
imul
orb
add
cmp
jle
push
pop
or
adc
enter
rcrl
mov
xchg
iret
data16
or
dec
mov
fidivrl
je
fcoms
inc
inc
push
ljmp
push
mov
jg
mov
mov
pusha
add
call
fadd
enter
ret
mov
pop
cltd
outsb
jge
push
sbb
imul
daa
ret
rcrl
sbb
or
pusha
xor
xchg
repnz
xor
clc
cmp
pop
mov
lods
lahf
push
inc
add
movsl
mov
out
rorl
rorb
xor
out
mov
cmp
xchg
cmp
in
dec
xor
mulb
or
stos
sub
int3
mov
sub
sub
nop
mov
cmp
std
ljmp
sbb
testb
clc
fs
ds
out
mov
fimull
add
out
sarl
cld
cmp
mov
push
push
xlat
mov
jg
jns
xchg
jnp
jg
sub
ds
mov
jno
cld
push
lock
rolb
sbb
arpl
jno
rorb
and
xor
ja
icebp
and
mov
jb
and
iret
inc
neg
sbbl
add
jb
loope
pop
mov
inc
cmp
mov
mov
lods
in
mov
pop
and
cmpsl
out
cmp
gs
jns
lahf
icebp
sahf
sub
xchg
aaa
jae
sub
rorl
out
lods
fsubrs
sub
aas
xor
sbb
push
fsubrp
pop
call
mov
sub
leave
fldl
ficomps
inc
fst
mov
shl
mov
inc
je
hlt
mov
inc
pop
mov
aas
in
dec
insb
aam
adc
push
stos
sub
jb
lods
push
ret
sub
cmp
cmp
jns
push
test
int
inc
pop
std
fcmovbe
mov
sbb
mov
jmp
movl
dec
out
dec
jge
add
sbb
inc
jmp
cmc
loop
test
jae
add
rorb
sahf
or
iret
mov
cltd
mov
in
cmpsl
inc
push
xlat
pusha
rcll
jl
icebp
das
popf
in
fs
sub
jecxz
into
int
jg
jl
daa
pop
xor
xor
addr16
xchg
xchg
in
cmp
fwait
enter
adc
push
mov
cmc
dec
popf
cmp
sbbl
pop
sbb
insl
mov
push
xor
pop
arpl
into
jle
inc
push
inc
fwait
mov
jp
js
lahf
data16
movb
test
icebp
js
xchg
inc
movsb
imul
inc
fcmovne
pusha
and
cltd
loope
lds
das
mov
dec
jb
inc
mov
fisubl
fs
sbb
lods
cmovae
push
dec
cmp
popf
sbb
push
out
lock
leave
add
and
aad
xor
push
in
adc
pop
sbb
leave
jne
in
sbb
sbb
cmp
xor
mov
jae
daa
sbb
xchg
xchg
push
das
lret
stos
xchg
pop
inc
icebp
and
push
popa
pop
and
xlat
data16
aam
outsb
add
xchg
sbb
rol
mov
fcom
push
inc
sub
leave
push
sbb
cmp
test
mov
and
sbb
and
push
xchg
pusha
pop
xchg
and
sarb
jae
pop
insb
jge
jecxz
sbb
cmp
jbe
or
sub
fwait
sbb
xchg
pop
stos
xchg
xor
add
testl
xchg
pop
lret
scas
mov
loope
jae
adc
push
and
push
xor
inc
and
lahf
push
loop
jecxz
lea
add
rclb
cld
jno
xor
mov
aam
cmp
imul
inc
out
push
and
loope
rclb
jmp
mov
sub
arpl
jnp
dec
out
mov
jge
mov
mov
pop
mov
shl
adc
push
adcl
into
aad
mov
sub
push
roll
fcmovbe
aam
aas
test
add
loope
js
cmp
test
dec
add
xchg
dec
fisubl
arpl
inc
shlb
push
in
test
aam
ret
xchg
cmpsb
stos
int3
mov
jmp
inc
jge
test
and
in
idivb
das
or
lds
push
arpl
jno
lock
daa
fcmovnbe
je
mov
jmp
pop
fnstcw
and
sbb
andb
mov
loopne
add
fwait
push
pop
push
push
and
gs
push
icebp
adc
scas
pop
cmovge
aaa
mov
fistl
pop
cs
mov
xchg
movsl
mov
fcomps
cmpsb
fnstenv
fcomi
sub
push
or
or
in
cmp
inc
out
xor
negl
aam
roll
sbb
or
repz
daa
push
mov
jle
addr16
cmp
mov
xchg
or
xor
faddl
cmp
xor
jecxz
inc
cmpsl
dec
test
outsl
sub
push
xchg
fimull
repnz
lock
ss
ficompl
in
fmull
cmp
repnz
repnz
dec
ret
lods
mov
adc
insl
push
dec
xchg
sbb
push
or
jae
lods
je
mov
mov
mov
fs
sub
cmp
in
pop
in
mov
aam
push
push
lcall
and
cmp
shrb
jmp
ds
dec
dec
push
sbb
mov
repz
cmc
xor
incl
outsb
arpl
insl
aad
sub
add
xlat
and
push
sbb
sbb
or
das
mov
and
cmp
aaa
mov
stos
das
ljmp
dec
adc
outsl
pop
xor
movsl
aad
rolb
push
jne
daa
insl
inc
jnp
adc
out
addb
adc
push
cwtl
mov
cmc
aas
xlat
mov
mov
mov
push
lcall
int
rorl
cmp
dec
cs
sbb
sub
xor
mov
loope
incl
repnz
jb
mov
call
pusha
addr16
leave
jnp
rcr
dec
sbb
jmp
shrb
jg
insb
rolb
ret
push
stos
mov
data16
aas
lods
jmp
xchg
push
arpl
lds
xor
push
mov
cwtl
shlb
stos
add
lods
into
repnz
bound
sbb
add
arpl
inc
in
push
dec
ja
jp
push
cmp
sarl
xchg
lods
mov
dec
jmp
clc
cmc
dec
fsubl
sbb
mov
mov
mov
mov
lahf
popa
lcall
cmpb
inc
push
mov
dec
ja
cmp
sti
icebp
mov
loopne
lcall
out
mov
jbe
mov
cmp
pop
jo
push
jns
call
arpl
in
xor
sbb
jl
lock
mov
ljmp
cmpsb
pop
mov
cmc
into
ja
dec
fsubrs
dec
pop
or
adcb
inc
inc
cs
sub
rorb
adc
lock
ret
mov
test
push
aaa
test
out
aas
hlt
xor
stos
add
mov
dec
test
lds
outsb
aaa
adc
lock
daa
jmp
dec
sti
cs
and
cmp
sbb
adc
cmp
mov
push
ret
inc
pushw
subl
mov
pop
dec
or
daa
scas
popf
rorl
jno
mov
int3
lock
enter
lea
mov
subb
js
test
jb
ficoml
ljmp
xchg
pop
push
loope
aam
fchs
xor
xchg
fldcw
dec
daa
pop
loopne
stos
inc
adc
popf
cmp
in
popa
sub
lea
and
xor
clc
stc
cltd
or
xchg
in
pop
jae
fimuls
and
rcr
mov
aas
pop
jo
lods
sub
negb
xchg
pop
into
imul
inc
or
jecxz
and
sbb
loope
mov
shlb
sub
inc
pop
xor
lea
lret
test
aad
enter
push
jno
or
rclb
in
mov
std
cmp
jp
imul
add
call
lret
or
xor
mov
aas
mov
jbe
dec
cld
dec
lock
hlt
sbb
aad
loop
icebp
cwtl
push
cmp
mov
sbb
mov
xchg
mov
mov
push
dec
cmp
enter
mov
shrb
jl
push
xchg
outsl
sbbb
stos
js
bnd
shl
fnstsw
out
cltd
movsb
sub
lods
in
std
out
mov
mov
jecxz
or
mov
adc
fistps
stc
dec
push
fwait
jbe
mov
jecxz,pn
push
stos
sbb
shlb
jmp
rorl
aas
dec
ret
sbbl
pop
lcall
nop
add
nop
and
sbb
adc
push
add
pop
test
mov
or
mov
loop
clc
push
cs
or
push
and
xchg
push
sub
sbb
adc
pop
shlb
mov
fsubrs
dec
xor
sbb
push
add
pop
out
inc
aaa
or
cmc
cmp
pop
cmp
outsb
jle
and
adc
ret
ljmp
or
inc
decb
xchg
adc
lea
push
call
xchg
aam
js
jne
pop
and
enter
icebp
cmp
and
loop
into
fs
xchg
mov
and
sub
daa
daa
and
aad
cmp
sub
dec
xchg
jbe
in
fistpll
xor
fdivr
and
roll
nop
mov
popa
cmp
dec
mov
xor
std
mov
push
jecxz
push
in
scas
cltd
jnp
and
inc
jp
je
pop
bound
fcmovnbe
int3
xchg
cltd
test
in
enter
dec
pop
cmpl
mov
push
rorb
cmpsl
pop
push
scas
push
pop
insb
xchg
shrb
es
cmp
mov
or
push
jb
xchg
push
dec
clc
cli
ljmp
cmp
and
push
mov
mov
pop
movsb
std
and
lds
aaa
sub
push
fsub
mov
adc
call
std
cmp
cmp
movsb
sbbl
leave
mov
ja
mov
repnz
cli
mov
mov
fidivl
les
xchg
lods
sahf
mov
jg
jbe
js
aad
fidivrl
and
mov
repz
shrb
pop
jae
jb
or
loop
jl
push
cmpb
data16
xchg
jae
aam
add
mov
bound
xchg
dec
adc
popf
fdivs
jo
dec
mov
sub
lret
insl
push
int3
testb
sbbl
jne
int
test
dec
idivb
nop
pushf
mov
jno
pop
ja
jnp
push
jge
sub
mov
or
imul
jae
adc
mov
mov
int
pop
hlt
ret
jl
push
das
jmp
add
pusha
out
adc
ret
or
and
jno
movsl
vpshufhw
int3
pop
mov
rol
jp
mov
xor
jle
push
pop
mov
jp
mov
aaa
sahf
xor
adc
ja
jae
xchg
lds
push
push
xchg
jp
loopne
fwait
ss
or
mov
ret
insb
enter
jecxz
lds
jo
fdivr
cmp
xchg
mov
ret
movntq
sub
nop
std
xchg
inc
mov
sarb
push
call
daa
rcrb
ss
mov
lods
daa
sahf
movsl
mov
nop
lds
scas
and
icebp
push
and
cmpsb
out
inc
pop
lock
mov
adc
push
ret
inc
fsts
jmp
in
cmpsb
xchg
icebp
sti
sub
adc
jae
loop
je
adc
imul
sub
mov
addl
insl
aam
cwtl
xor
fistpll
stos
out
xchg
mov
xchg
in
inc
faddl
mov
sarb
jns
int
mov
jmp
sub
out
outsl
arpl
mov
adc
adc
pop
pop
and
jnp
sbb
sub
xchg
or
jo
test
mov
aaa
cli
es
pop
xchg
xchg
nop
shll
adc
push
sub
or
popf
shlb
push
jp
jno
fcmovnb
into
inc
xlat
insb
bound
sbb
les
mov
xchg
ds
adc
nop
scas
push
sub
lods
dec
fmull
and
jno
inc
das
aad
xchg
push
and
pushf
loop
dec
add
bsf
int3
inc
movsl
iret
and
and
ljmp
aas
daa
jo
repz
push
gs
pop
gs
nop
das
out
pusha
stos
push
mov
dec
sub
push
stos
ret
fcoml
inc
sub
loopne
xchg
sbb
test
or
aam
dec
popf
rcll
and
ljmp
inc
or
sbb
mov
out
cmp
add
mov
fsubrl
repz
pop
imul
xchg
filds
insb
mov
sub
or
jge
or
cmp
clc
jge
mov
add
xchg
jns
push
shlb
data16
jp
cmpsl
scas
jae
mov
or
sbb
iret
mov
mov
testl
cmp
lods
in
scas
out
sub
arpl
fadds
push
xor
loope
cmpsb
mov
xor
out
mov
popf
ds
ja
int
out
xor
into
jecxz
aaa
xchg
jmp
or
je
adc
push
sti
orl
addr16
sub
pop
push
insb
adc
or
push
insb
lods
fwait
lock
ds
sbb
pop
sub
and
mov
insl
dec
nop
sub
lret
sbb
int
ret
jge
inc
mov
dec
pop
add
pop
mov
test
xchg
inc
mov
adc
popf
xchg
inc
imul
mov
push
push
cld
pop
aaa
dec
push
dec
adc
or
in
add
and
dec
lea
test
or
xorl
sahf
test
xlat
icebp
adc
aas
cmp
fs
pop
loop
pop
repz
int3
cld
aas
jnp
sub
sbb
jbe
out
mov
scas
add
inc
addr16
mov
fwait
jl
xor
je
xchg
inc
ljmp
js
fisttps
xchg
out
cmp
sub
ds
test
aas
pushf
stos
aam
jns
xchg
loopne
mov
fistps
push
jle
mov
inc
pop
out
gs
ror
mov
mov
pop
dec
in
pop
sub
xlat
pop
dec
adc
xchg
and
scas
icebp
fwait
ja
adc
fsubs
repnz
push
movsb
jmp
dec
mov
or
push
and
lods
lock
shrb
add
aad
jg
ret
pop
jp
pop
inc
je
out
add
and
inc
cmp
ljmp
cltd
mov
dec
shrl
or
dec
ret
sahf
fcmovnbe
cs
fdivs
lods
cli
mov
jl
mov
or
jb
xor
sbb
mov
leave
pop
mov
fsubs
imul
push
dec
js
psllw
mov
push
sub
icebp
fbld
jge
clc
xchg
dec
mov
add
pop
fistps
jge
stos
repz
sbb
gs
popa
dec
add
imul
test
std
rorb
test
or
sbb
adc
test
add
insl
jns
movd
jge
adcl
xor
xor
out
cmp
xchg
andl
push
insl
pop
push
xchg
insb
subb
jbe
test
push
mov
out
into
push
mov
mov
jecxz
testb
call
mov
out
pop
mov
data16
icebp
cld
push
fcompl
inc
jp
push
add
loop
inc
ficomps
jecxz
loope
adc
pop
les
push
dec
addl
add
aad
loop
xchg
xchg
cmp
in
jns
hlt
jne
lds
lcall
ja
and
xor
loopne
mov
jb
repnz
cmp
shll
mov
rcrb
xor
scas
repnz
daa
mov
std
jmp
mov
or
stos
mov
enter
insl
jb
add
cld
sahf
or
cmc
scas
sbb
ja
inc
push
and
mov
fs
dec
sub
push
pop
jp
sub
cmp
jmp
mov
jmp
insl
fs
sub
ret
pop
paddb
imul
and
push
xor
lods
ss
sub
mov
sbb
push
movsl
xchg
jg
frndint
stos
and
sbb
ficomps
dec
lcall
push
sbb
pop
adc
cmp
sub
mov
pop
and
or
mov
jge
nop
dec
mov
mov
inc
jge
sub
or
pop
movsb
sub
ja
add
sarb
fwait
in
repnz
movsl
push
and
shl
clc
sti
and
aaa
stc
addr16
rcll
das
arpl
mov
cltd
enter
pop
pop
jle
ja
ja
push
xchg
push
pusha
push
dec
pop
or
dec
xchg
pop
fbld
shlb
and
mov
ljmp
fsubrp
inc
mov
sar
push
pop
push
leave
hlt
in
inc
jle
movsb
aad
push
stos
cmp
loope
mov
or
mov
xchg
sub
pop
xchg
and
sbb
lock
sub
pusha
push
orb
mov
jl
cmpsl
mov
pop
sti
mov
loop
jp
cltd
push
rorb
push
div
shrl
popf
clc
cmc
xor
jle
sub
pushf
int
add
lret
das
in
xchg
mov
stc
ret
shrb
sbbl
daa
movsl
popf
imul
inc
push
js
jecxz
or
inc
mov
addb
add
xchg
jl
inc
setns
out
mov
je
in
pop
pop
inc
loop
dec
mov
outsb
adc
adc
jno
cmp
lock
or
mov
pop
rcl
sub
mov
mov
or
jne
and
xchg
push
aas
push
lret
dec
mov
adc
dec
xchg
fwait
ljmp
inc
sbb
mov
call
adc
popf
fs
mov
cld
lret
int
cli
int3
inc
cld
rclb
call
xchg
or
push
stc
pushf
vpackssdw
inc
dec
sbb
out
lock
xor
cmp
inc
pop
popa
jp,pn
jecxz
sbb
xor
pop
add
imulb
xlat
loopne
push
out
je
out
daa
lods
adc
data16
jecxz
scas
shll
orb
sub
pop
pop
callw
sbb
sub
int
sub
jecxz
pushf
insb
daa
sbb
lahf
fcomps
push
xor
lret
mov
mov
xchg
pop
jno
fcoml
mov
int3
xor
loop
sbb
test
into
mov
sti
push
push
push
psubusb
rolb
cmpb
cld
and
mull
xchg
fcmovnu
dec
xor
xchg
pop
xchg
xchg
stc
pop
aam
sbb
xchg
inc
arpl
sbb
mov
stc
jns
and
pop
insb
or
sub
je
push
in
cmp
sbb
adcb
jmp
mov
mov
out
movsb
sub
rcrl
mov
imul
cwtl
inc
jns
and
mov
mov
add
cmpl
mul
mov
push
sub
sub
add
mov
and
xor
roll
test
fst
mov
xchg
xor
adc
pop
push
mov
ret
stos
adc
test
cld
or
sbb
loop
jmp
adc
dec
lods
mov
mov
push
pop
cmpsl
add
mov
cltd
popa
sarb
mov
xor
sub
cmp
push
outsl
dec
push
ss
adc
push
pop
loope
mov
or
pop
loopne
arpl
cwtl
mov
pop
lds
popf
or
mov
sbb
mov
mov
repnz
repz
xor
pop
xchg
mov
push
push
sbb
out
cmp
js
sub
insb
cmp
lcall
iret
ror
sub
dec
in
sub
lock
aaa
add
in
inc
adc
in
ret
jecxz
adc
jo
aam
adc
and
in
push
into
imul
and
sbb
popa
addl
pushf
fnstsw
dec
mov
jns
mov
jmp
adcl
xor
jb
bound
fstps
mov
insb
add
xor
mov
add
cli
mov
dec
inc
pop
xor
lea
dec
jbe
jecxz
lret
pop
pushf
stos
mov
ja
dec
andb
test
hlt
call
in
in
xorb
and
and
in
pop
jne
mov
add
mov
push
jns
shlb
iret
sub
mov
sub
jmp
lods
mov
and
stos
iret
xchg
imul
call
jp
add
outsl
pop
lds
fstps
cmp
clc
xchg
xchg
mov
and
lea
jle
scas
test
cmc
sbb
jne
xor
xchg
loopne
pop
mov
or
imulb
inc
sub
repnz
in
je
mov
in
shlb
mov
pop
dec
rol
imul
sub
scas
add
ljmp
sti
daa
add
add
mov
pop
test
sbb
fidivs
mov
jb
ja
outsb
test
and
add
fsubl
mov
jg
adc
jae
inc
lods
inc
pop
pop
not
test
push
addr16
movq
push
and
incl
mov
sbb
bswap
movsb
js
repnz
sarb
shll
out
mov
or
shr
jmp
fdivl
ss
add
test
fsts
mov
cmp
daa
mov
push
lea
pusha
daa
xchg
jbe
mov
mov
cmc
ds
lcall
stos
mov
sbb
hlt
mov
lods
or
xchg
js
cld
sbb
pop
out
cwtl
cs
hlt
aad
shl
movsl
rcll
jbe
push
out
sub
xchg
aam
idivb
aaa
dec
mov
cli
push
xchg
ss
mov
fdivs
or
mov
lods
call
es
mov
js
mov
xorl
fldl
rorb
imul
pop
sub
clc
mov
xor
in
lret
stos
pop
sbb
cmp
adc
popf
mov
or
sarb
jae
sub
pop
pop
push
out
jecxz
sbb
mov
inc
adc
outsb
cmp
cs
hlt
pop
test
pop
push
jmp
inc
jne
adcb
add
ljmp
jmp
lds
into
cmp
xchg
or
push
popa
cmpsl
mov
cmp
mov
loop
out
inc
mov
out
jb
or
and
or
mov
jnp
enter
fnstsw
mov
lock
je
or
addr16
iret
add
loop
sbb
jge
out
mov
data16
mov
sub
adc
or
cmpsb
jmp
push
jo
pop
mov
rclb
aas
mov
jecxz
inc
insl
mov
stos
push
sub
add
mov
scas
mov
pop
clc
push
mov
nop
imul
push
std
adc
xchg
mov
mov
jl
mov
jge
xchg
cmp
dec
push
ss
jle
addr16
mov
jno
xchg
push
and
idivb
adc
and
in
inc
cmpsl
insb
cmp
dec
mov
je
je
aam
test
sbb
cmp
les
leave
cmp
leave
dec
shl
dec
jge
sbb
aad
insb
push
test
and
in
fnsave
loop
jmp
pop
imul
push
jmp
ja
movsl
movsl
mov
push
jmp
aaa
and
andl
ja
pop
mov
or
xchg
mov
jg
aam
stos
mov
mov
xor
cmc
pop
pop
mov
jno
cwtl
loope
sbb
inc
xchg
mov
nop
addr16
inc
aad
and
orb
jmp
cmpsb
loope
push
xchg
xchg
push
push
push
loope
adc
or
adc
mov
aaa
xchg
or
imul
adc
inc
dec
shrl
push
dec
mov
rcrl
jmp
inc
dec
xchg
mov
roll
or
xchg
sub
add
cmp
pop
adc
push
add
inc
lea
adc
mov
xchg
repnz
push
fsubs
enter
mov
xor
add
xor
mov
add
adc
call
pop
cmc
mov
inc
inc
ljmp
jmp
sahf
adc
ret
sub
and
test
cmpl
imul
shrl
out
dec
mov
add
fmuls
lods
scas
jl
fisubrl
movsb
dec
mov
jl
lods
xor
jmp
jne
dec
xchg
enter
push
in
imul
cmpsb
dec
daa
mov
and
mov
out
stos
sub
jmp
lock
adc
sbb
adc
ljmp
xchg
cmp
stos
mov
jmp
mov
cltd
xor
cmpsl
rcl
pop
push
xlat
adc
pop
aas
lret
mov
std
fbld
add
nop
and
stos
mov
mov
sarb
lds
insl
dec
repz
sbb
repz
stc
test
rol
sub
movsl
mov
push
scas
or
mov
insl
adc
lods
lahf
and
mov
or
and
or
es
sbb
jp
push
mov
call
pop
enter
neg
ret
int
in
bound
push
std
push
sbb
dec
dec
and
push
das
cmovb
lret
sub
dec
outsl
cmc
lret
ret
jg
cmp
push
jle
loopne
int
jb
mov
mov
mov
popf
call
add
test
push
cmpsl
ja,pn
shlb
in
rcr
xchg
inc
push
mov
pop
ret
popf
lahf
jp
and
sbb
and
or
mov
push
andb
inc
mov
stos
pop
pop
adc
cld
imul
pop
popa
mov
xchg
mov
mov
fwait
ret
insl
aam
js
mov
xchg
adc
in
in
push
jne
out
aaa
jmp
in
imull
push
jecxz
addr16
adc
inc
add
mov
and
xchg
popa
jp
dec
add
add
add
mov
nop
mov
or
test
fstl
fdivl
int
mov
shr
mov
clc
dec
inc
mov
subl
jae
imul
mov
dec
sti
mov
mov
mov
js
cmp
in
rcrb
lcall
push
pop
std
xchg
movl
xor
fwait
lea
aas
out
clc
inc
mov
pushf
pop
jne
test
or
punpckhdq
add
fldl
sub
nop
ja
jmp
dec
sbb
shl
lea
cs
test
mov
add
xchg
pop
jmp
sti
into
mov
xor
push
and
lret
mov
lahf
fwait
cmc
inc
clc
pop
xor
mov
and
jns
push
scas
pop
jbe
fistpl
negl
push
sbb
leave
xchg
fsubp
out
and
cmpl
xchg
xchg
add
fidivl
ljmp
lret
mov
cmpsl
sbb
pop
fisttps
xchg
call
mov
pushf
fcoml
outsb
in
test
pusha
jl
fsts
inc
and
xor
sub
dec
into
push
aam
iret
jne
and
mov
shlb
scas
cmp
mov
jb
out
mov
imul
cmp
push
ret
push
or
jnp
push
lds
add
jns
das
push
mov
jle
pop
iret
inc
dec
add
mov
jmp
outsb
mov
outsl
insb
fsts
cltd
outsb
jp
xor
das
sub
mov
leave
lds
push
mov
test
pushf
sahf
mov
dec
ja
in
loop
push
xchg
outsl
or
pop
dec
mov
adc
cmp
dec
pop
lods
inc
push
movb
mov
sub
outsl
mov
rcrl
xlat
cmpl
add
enter
insb
adc
dec
mov
insb
adc
popf
hlt
pop
dec
data16
aaa
push
mov
nop
push
dec
mov
sub
sarb
fdivs
pop
mov
sbb
in
cmpsl
orb
jo
sahf
in
popa
lret
xchg
or
int3
fildl
add
add
mov
push
jmp
mov
push
call
insb
xor
adc
iret
or
xchg
insl
and
shrl
test
fisubl
adc
loop
fcmovu
jo
or
jge
jmp
fsts
mov
cmp
loopne
int3
mov
test
test
xlat
mov
fistpl
jp
popf
adc
iret
jne
lahf
xchg
pop
out
out
lods
mov
imul
daa
mov
dec
adc
shrl
adc
out
mov
xchg
xchg
or
cmp
lgdtl
dec
test
sahf
inc
jge
jnp
mov
insb
test
sub
loop
dec
sub
aas
sbb
ss
or
push
enter
xor
in
and
sub
cmp
jns
js
xchg
inc
add
dec
bound
add
or
loopne
out
nop
or
pop
jbe
hlt
and
insl
das
mov
mov
mov
int3
dec
add
sub
add
std
leave
push
sub
inc
test
dec
loope
push
or
lods
adc
cmpsb
pop
jecxz
mov
add
xchg
xor
pop
and
sbbl
and
xlat
pusha
mov
dec
cmp
out
cmp
ljmp
lahf
pop
xor
ret
mov
sub
push
das
cmc
jbe
sti
mov
test
ss
mulb
out
movb
jb
dec
jp
add
fnstsw
push
ret
aaa
arpl
imul
lret
mov
jns
xchg
jne
loop
icebp
pop
sub
lea
add
jge
xor
outsb
xchg
cltd
cwtl
pop
fs
sub
in
sub
jl
pushf
lock
cmp
fstpl
sub
push
call
mov
sahf
push
fnstsw
add
sbb
inc
xchg
adc
mov
add
push
mov
jg
cmpsb
add
mov
outsl
out
push
decb
fisttps
imul
xor
inc
push
inc
orb
inc
sbb
lahf
and
xor
and
jmp
jnp
fbld
outsl
sbb
push
and
adc
sbb
aas
cmpl
jmp
scas
xchg
jp
inc
jle,pn
jecxz
es
pop
les
inc
cmpsb
mov
lret
mov
xor
inc
mov
push
xor
rcrl
push
idivb
cli
cli
lds
pushf
lea
add
sbb
xchg
and
sbb
mov
pop
lahf
loope
imul
out
es
dec
pusha
xchg
adc
insl
inc
cs
shr
stos
aad
and
push
sub
idivl
shlb
ljmp
in
dec
or
push
fimuls
push
out
jmp
repnz
std
cmp
mov
mov
or
xlat
cli
pusha
jbe
add
jp
sub
sbb
jle
cmpsb
clc
int
je
out
aam
xchg
mov
fnstenv
pusha
cmp
push
das
push
xor
or
pop
push
adc
stc
sub
insb
jmp
mov
data16
mov
out
daa
cltd
xor
mov
imul
pop
std
data16
mov
xchg
repz
xchg
mov
std
and
mov
sarl
mov
jp
dec
cwtl
out
sub
or
cmp
jp
cmp
jae
xor
push
rcrb
pop
pop
pop
add
cs
clc
insl
add
test
rolb
and
xor
adc
cmpsl
xor
lods
les
lcall
mov
push
jmp
lods
adc
lock
fsubrs
cmp
in
push
pop
and
mov
inc
lds
mov
or
dec
das
dec
xlat
inc
fmull
and
shl
inc
scas
pushf
pop
scas
mov
ret
mov
cs
fmulp
adc
gs
add
inc
shlb
repz
jle
or
lret
cmp
loop
mov
testb
lahf
and
outsb
push
xchg
mov
out
mov
xor
xor
leave
mov
cmp
dec
test
leave
mov
iret
orb
in
jo
cmp
jp
ljmp
cmp
sbbb
mov
dec
ret
fildl
test
dec
test
outsl
out
mov
or
cmp
cmp
ljmp
arpl
mov
das
insb
loopne
sbb
scas
add
mov
data16
inc
pop
imul
or
outsb
into
jp
cmp
aad
in
in
dec
lods
xor
fbstp
out
leave
mov
dec
arpl
and
dec
push
xor
push
jg
std
mov
jae
mov
xor
mov
pop
adc
icebp
push
mov
repnz
cmp
jmp
addb
or
pop
push
or
dec
push
dec
mov
xchg
or
pushf
pop
cmp
mov
adc
push
scas
fistpll
hlt
std
mov
xor
movsb
xor
inc
and
cmc
in
cmpsl
out
repz
bound
jo
sbb
cmp
in
and
sbb
add
je
cwtl
sub
cs
ficompl
ja
pop
cwtl
lcall
shrl
pop
mov
insl
sub
dec
dec
fwait
pop
cmp
xchg
dec
or
imul
jmp
repz
push
movsl
and
lcall
lret
stc
aas
xchg
call
sub
mov
cmp
test
dec
lcall
inc
dec
out
enter
stos
sbb
pop
int
mov
cmp
iret
int
sub
pop
or
mov
stc
and
pop
popf
add
test
jg
push
jno
pop
pushf
popa
js
adc
call
leave
dec
sub
sub
fldenv
mov
push
fcomip
mov
xor
inc
movsb
jecxz
add
mov
loopne
sar
cmpsl
outsb
int3
scas
cli
mov
xlat
adc
lods
dec
enter
push
mul
mov
in
push
jge
cmp
out
cmp
xchg
sbb
stc
cmpsb
movsl
lods
sbb
ds
and
andb
sub
pop
into
jnp
lea
in
fsubrs
imull
sub
cmp
andl
hlt
push
xchg
test
and
mov
lds
psubsb
or
in
mov
xlat
clc
or
daa
fld
push
ds
in
inc
nop
adcl
sbb
sub
push
push
jle
xor
in
iret
std
in
scas
fs
jne
mov
pushf
imul
out
lret
cld
sub
or
mov
cmp
push
push
pop
dec
sub
out
jno
iret
ss
xor
in
adcl
enter
jge
or
mov
jl
mov
inc
movsl
jmp
out
xor
lods
or
push
aaa
cmpsl
dec
dec
mov
xor
nop
addb
jle
insl
ret
leave
cmp
jl
insb
jg
insl
mov
mov
xchg
imul
mov
jle
cmc
mov
not
dec
roll
add
imul
fdivr
cwtl
cmpsl
add
shlb
push
icebp
or
sbb
mov
cmp
nop
jle
inc
and
cli
xchg
movsl
mov
xchg
lock
repz
lods
lods
cmp
dec
sub
push
addl
cmpsl
pop
adc
pop
std
test
pop
mov
subl
loopne
imul
xor
lea
pop
clc
adc
pop
andb
push
push
or
mov
ret
and
sub
ficoml
and
adc
jns
push
lock
pop
lds
xchg
inc
popa
je
adc
mov
ss
or
scas
mov
outsl
dec
ja
repz
repz
push
js
jbe
fistps
rcr
fistl
push
dec
in
xor
xor
imul
aaa
pop
mov
cmp
cmp
xchg
ret
mov
xchg
in
icebp
xchg
shll
mov
cmpsl
push
add
push
cmp
or
in
fimuls
fwait
sub
fs
xor
push
icebp
lock
xchg
xchg
cmpl
and
push
cltd
cmp
add
xchg
popa
add
rolb
stos
dec
test
xchg
pusha
jg
pop
mov
lahf
mov
out
cmp
jmp
daa
push
lret
jb
ljmp
lods
outsb
inc
fdiv
rolb
aaa
sub
push
jae
insb
cmpps
lea
push
sbb
iret
xor
sti
or
loop
adc
push
lock
push
outsb
sbb
hlt
xchg
popf
mov
movsb
ljmp
daa
out
sub
es
cs
sub
dec
lret
cld
sahf
insl
dec
add
movsl
neg
in
add
divl
mov
dec
mov
jp
int3
cmp
nop
and
outsb
mov
adc
xor
imul
or
inc
xor
lahf
sub
iret
cltd
cwtl
iret
cmp
inc
nop
mov
push
jecxz
movb
pop
ret
loop
call
es
mov
pop
int3
fldcw
sar
mov
test
jmp
test
movzwl
push
xor
inc
std
ja
inc
clc
cmp
push
mov
mov
or
repnz
adc
cmp
adc
out
jbe
orb
je
stos
mov
das
hlt
mov
xchg
shlb
dec
in
in
add
xlat
rolb
fsubrs
or
arpl
mov
add
idivb
and
movsl
jae
adc
mov
cmp
nopl
mov
icebp
cld
dec
add
cmp
gs
daa
or
xor
cmc
repz
lea
and
xchg
insl
push
icebp
xabort
xor
dec
dec
cmp
test
xchg
xchg
sti
jns
shll
clc
dec
mov
movsb
rol
test
push
je
outsb
jo
xchg
cmpsb
xor
hlt
sub
test
dec
jbe
mov
xchg
add
xchg
or
xchg
mov
outsb
aas
daa
xor
jae
leave
mov
jno
mov
aaa
inc
pop
fbstp
sbb
ja
or
dec
ret
push
mov
inc
scas
sub
iret
xor
pop
adcl
lret
es
clc
ds
add
inc
pop
or
xorb
jle
cmc
or
ror
or
fidivl
xor
addr16
sbb
cwtl
sub
inc
xchg
cmp
insb
clc
stos
popf
cmp
rcll
nop
cmp
negl
ror
mov
ret
mov
testb
mov
or
pusha
dec
ficomps
imul
cs
mov
xor
mov
fsubrs
sarl
cmp
pop
out
loop
adc
loope
mov
fmuls
or
push
pop
das
daa
cwtl
dec
ret
dec
pop
loop
sti
jne
mov
movsl
int3
es
pusha
lahf
jl
xchg
cmpsb
add
push
fsts
jne
sbb
mov
sti
subb
sti
ja
movsl
rclb
pop
shl
or
or
cmpsb
std
xchg
sbb
add
test
cltd
sub
sbb
and
sbbl
cmp
dec
mov
cmp
mov
pop
push
add
lods
push
adc
xchg
sbb
movsl
or
mov
xchg
and
lds
mov
ds
cmp
mov
xor
mul
repnz
mov
mov
mov
inc
jo
xchg
xchg
push
mov
lea
xchg
cltd
fisubs
sahf
call
ret
sbb
mov
mov
aaa
mov
and
jae
das
mov
roll
sub
test
es
test
hlt
test
pop
repnz
aas
pushl
data16
imul
ljmp
lcall
pusha
mov
dec
cmpsb
mov
xchg
rcr
xor
aad
and
test
or
fnsave
in
rcll
popa
fcoml
dec
mov
es
jmp
cmp
add
xchg
repz
push
lea
jl
movsl
inc
and
xlat
loopne
pushl
mov
cld
inc
gs
sar
mov
scas
scas
jno
lock
fisubrl
sbb
mov
sarl
push
sbb
inc
push
or
or
lods
push
xor
mov
gs
inc
dec
in
rolb
push
lds
aas
sbb
mov
add
or
jge
insb
and
rcrb
and
cmpsb
xchg
js
adc
mov
cmpsb
out
xorl
shrb
adc
jnp
pop
or
addr16
push
mov
cmc
ror
idivb
push
mov
mov
push
lcall
dec
adc
loop
add
push
stos
je
inc
scas
sbb
or
xchg
aaa
ret
jo
sub
loopne
into
mov
es
xchg
dec
cmpxchg
mov
inc
fwait
xor
dec
dec
roll
imul
push
cli
hlt
mov
cli
adc
pop
pop
cld
fcoml
fisubs
cmc
jmp
sbb
pop
mov
imul
add
lock
fildll
jle
je
imul
xchg
mov
iret
and
mov
mov
push
pop
ret
xor
xchg
xor
dec
xor
xchg
aaa
push
and
clc
ficomps
call
mov
mov
notb
lock
cli
sar
mov
clc
cltd
jecxz
outsb
lret
fidivrl
fdiv
call
outsb
adcl
pop
jno
das
mov
mov
mov
inc
and
sub
mov
dec
xor
xorl
ret
xor
arpl
mov
adc
scas
sar
cmpsb
ds
stc
push
xor
mov
sbbw
ljmp
dec
xor
cmpb
mov
ret
out
shll
fdivs
and
mov
fidivrs
mov
adc
pop
mov
cmp
std
mov
loope
aad
repnz
inc
mov
pop
push
dec
ja
and
pop
fnstenv
inc
inc
mov
js
leave
fdivp
cmp
imul
fucom
add
jg
mov
cltd
inc
test
cli
mov
insl
out
scas
and
ja
adc
popf
push
xchg
cs
scas
subl
cmp
cmp
call
scas
popf
xorb
leave
xor
dec
mov
push
rcll
xchg
out
adc
or
mov
xor
add
sub
dec
jns
sbb
xchg
mov
push
movb
and
sub
dec
sub
movsb
jb
push
jnp
add
cs
dec
ret
cltd
into
imul
scas
arpl
push
jmp
pop
testl
mov
and
cmpsl
nop
inc
js
dec
pop
jmp
dec
pusha
ret
dec
loop
iret
push
mov
aaa
cmp
cmc
ret
aam
xchg
mov
ss
jbe
sub
add
outsl
mov
imul
imul
cwtl
enter
push
adcb
fs
dec
xorl
bound
ja
adc
inc
sub
xchg
clc
pmaddwd
fmuls
insl
mov
pop
jl
stos
loopne
jl
fs
addl
rolb
outsb
out
rorb
cltd
daa
adc
jg
xchg
movsl
and
testl
stc
xchg
xchg
add
data16
je
jno
pop
adc
xchg
ret
push
icebp
jle
icebp
jno
ficomps
sti
cmpl
jae
insb
dec
push
clc
or
or
daa
pushf
loope
imul
arpl
cmpsl
jns
sub
jecxz
stos
inc
les
bnd
je
dec
push
jle
inc
pop
inc
xor
inc
adc
xor
aaa
stc
pop
mov
push
sub
push
push
sbb
inc
mov
insl
mov
and
cld
or
fdivrs
out
lret
dec
dec
inc
ja
jo
faddl
cmp
shrl
jo
sub
jb
push
popa
jne
sub
inc
push
push
xor
mov
sbb
dec
or
test
orb
fsubrl
push
push
je
fs
jle
cltd
aas
pop
jns
pop
or
mov
pop
mov
or
scas
push
repnz
sub
pop
add
adc
ds
pusha
mov
cwtl
jnp
mov
pop
aam
pop
xor
inc
insb
out
lods
cmc
cltd
jb
dec
cmpsl
pop
adc
bound
dec
push
mov
or
jp
decl
movsb
repnz
or
ret
dec
sahf
mov
xchg
sub
int3
lock
push
or
pusha
icebp
mov
sub
push
add
test
mov
out
lret
nop
xchg
int3
inc
je
js
fdivrs
xorb
movsb
or
nop
lcall
push
test
dec
xlat
cmpsb
ret
xchg
pusha
dec
movsb
adc
testb
and
pop
xor
das
pushf
fldt
test
fldcw
xor
add
int
fdivs
cmp
movsl
sub
push
push
mov
jg
jecxz
in
fld
scas
xor
sbbl
mov
pushf
mov
sbb
pusha
mov
mov
inc
shrl
xor
and
int
cltd
inc
sbbl
cld
sbb
add
stos
adc
mov
cmp
loop
push
fidivrs
dec
mov
iret
fildll
or
jl
mov
into
fs
push
aaa
push
push
mov
cmp
mov
sub
enter
stos
or
sbb
mov
jmp
rcpps
xor
jb
in
enter
rorl
mov
rcll
xchg
or
pop
rcll
dec
bound
pop
mov
jne
popf
aam
dec
ret
cmp
pushf
call
mov
jmp
je
fmul
cld
dec
pusha
jno
jnp
sar
and
or
pop
daa
dec
stos
mov
xor
xchg
loopne
xchg
scas
and
lock
mov
nop
inc
setae
push
xchg
ss
shrb
rolb
ss
jb
mov
push
test
mov
xor
js
lcall
push
xchg
or
enter
out
xorb
es
mov
stos
dec
xchg
daa
in
sti
lahf
push
les
inc
and
rol
outsl
icebp
pop
mov
loop
lods
jbe
test
lds
sub
popf
xchg
push
mov
sbb
push
cmp
inc
and
sub
ja
push
lret
mov
hlt
pop
and
sub
pop
mov
pop
sub
popa
repz
add
and
movsb
add
leave
jbe
xorb
or
adc
loope
neg
stos
int3
aad
movsb
jne
iret
adcb
pop
adc
rorl
mov
pop
mov
inc
xor
dec
and
out
in
insb
push
push
cmp
mov
add
fisttpll
es
push
sti
movsb
xchg
stos
push
xchg
pop
les
sbb
inc
push
jns
and
xchg
fsubrl
jg
push
jae
push
popa
xchg
and
addr16
stc
fwait
inc
adc
xchg
lods
repz
movsl
sti
push
add
enter
mov
pop
mov
add
mov
aas
not
push
mov
sbb
or
lea
lock
or
inc
popf
xor
sbb
push
dec
jbe
mov
arpl
rorl
lods
daa
adc
push
xchg
rolb
test
or
loop
sbb
icebp
push
in
and
je,pn
adc
pop
dec
les
sbb
push
fldt
cmpl
imul
imul
lret
pop
adc
std
fistpll
and
jns
and
cmp
in
insl
call
cld
add
mov
mov
xchg
shrl
dec
aam
and
repz
push
sub
aad
mov
dec
imul
inc
fimuls
ja
scas
jp
mov
into
jmp
sahf
std
cmc
adc
cs
pop
and
lcall
popf
cmp
aaa
gs
das
std
jmp
xchg
dec
jbe
push
hlt
repnz
jle
jne
outsb
aaa
xchg
adc
loop
stos
idivb
mov
pop
jecxz
pop
pop
mov
mov
or
xorb
js
sbb
mov
mov
inc
jl
push
sarl
sahf
push
mov
out
push
mov
jge
daa
ret
add
mov
rorb
div
xor
ror
scas
or
mov
rolb
setl
test
mov
fcmovu
mov
divb
addr16
push
pop
cmp
js
fistpl
add
mov
pop
mov
and
add
cmpsb
jo
es
pop
xor
jecxz
push
cmp
dec
xorb
daa
cwtl
hlt
movsl
xchg
jbe
in
push
sub
pop
cmp
jbe
inc
mov
xchg
incl
popf
xorb
nopl
outsl
cmpsb
arpl
inc
pop
sbb
push
pusha
fidivrl
es
xor
pop
aas
inc
scas
mov
push
clc
adc
cmpsl
pop
shll
jne
sbb
icebp
jp
cmp
inc
dec
add
jb
mov
sbb
cmp
xchg
mulb
scas
cwtl
outsl
xor
insb
in
fidivl
pop
arpl
insl
mov
stos
xor
pusha
outsl
dec
test
adc
xor
inc
push
pop
jae
sbb
pop
mov
jae
mov
mov
xchg
dec
decl
cmp
icebp
jecxz
sbb
lea
push
xor
jecxz
movsb
xchg
inc
jbe
ja
adc
insl
inc
push
lods
mov
insb
imul
jns
sahf
hlt
lods
xor
stos
das
nop
mov
stos
jmp
adc
enter
sbb
data16
dec
fdivs
inc
mov
jge
lret
mov
in
inc
mov
pop
push
sub
sbb
xchg
xor
lcall
stc
dec
jbe
or
fisubl
ds
sbb
rcrl
loope
xchg
inc
and
jbe
cmp
fnsave
mov
add
mov
cmpsl
stos
or
fs
test
pop
sub
rolb
stos
les
mov
push
test
push
mov
and
fdivl
adc
jno
fisubrl
aad
jp
xchg
into
into
push
in
mov
pop
xor
repnz
jge
and
fnstsw
dec
mov
imul
out
rolb
arpl
out
stos
mov
jnp
and
mov
leave
push
ficompl
push
or
fidivs
or
pop
outsb
sub
adc
idivl
add
jg
je
test
ljmp
add
jne
push
imul
shlb
and
imul
jbe
dec
int
adc
jg
push
arpl
pop
jo
outsl
negl
imul
and
mov
aaa
mov
aam
add
mov
test
cmp
lods
adc
push
stc
int3
sbb
xorb
inc
mov
mov
sub
and
int
mov
pop
push
jp
arpl
aas
jmp
adc
pop
popf
mov
test
push
cmp
xchg
pop
shll
xchg
subl
in
push
in
repz
jo
mov
mov
and
and
iret
xlat
dec
sbb
outsb
data16
pop
push
inc
fcompl
pusha
xchg
mov
mov
cmc
int
and
cmpsl
sub
popf
inc
push
add
dec
das
add
adc
nop
into
in
out
clc
call
aas
push
push
mov
xorb
xor
fwait
mov
test
sub
xor
mov
lock
bound
mov
pop
xchg
push
mov
loop
dec
pop
outsb
and
xor
dec
fsubrl
fisubrl
pop
seta
pop
testl
mov
xor
cmpl
movsb
fistps
out
push
cmp
xor
mov
mov
scas
ja
pop
imul
bswap
mov
imul
adc
jnp
sbb
push
leave
insb
sahf
sarl
ds
xor
bound
sarb
imul
xor
or
adc
xchg
jbe
mov
adc
inc
jg
jb
dec
idivl
test
and
aad
and
das
or
lcall
je
xchg
push
testl
push
out
mov
inc
adc
xchg
clc
into
xor
jmp
insl
mov
inc
mov
or
mov
jnp
lcall
in
pop
cmpsl
lcall
outsl
push
inc
add
sbb
or
or
ljmp
inc
mov
in
shrl
jmp
mov
sbb
test
out
out
cmpsb
adc
push
xlat
jmp
add
addl
jae
fisttpl
outsb
repnz
xor
test
push
pusha
cs
push
push
sbb
out
cmp
xchg
scas
xor
jne
mov
sbb
jg
notl
mov
and
mov
mov
neg
adc
sbb
mov
add
dec
and
les
and
cmp
cltd
adc
lea
push
jns
cmp
jnp
pop
add
repz
int3
test
sub
ret
popf
cmp
ljmp
ret
jl
cmp
bound
rcll
cmp
in
or
addb
scas
in
mov
xchg
loop
sub
sbb
in
adc
outsb
inc
xor
clc
arpl
call
sarl
scas
leave
pop
inc
push
add
xor
jns
sub
mov
push
push
fs
fstpt
or
js
lret
push
jae
out
repnz
cmp
and
xor
icebp
jo
cmp
mov
or
inc
pop
sub
inc
push
shlb
lcall
pop
je
mov
pop
int3
sub
sbb
sbb
fs
sbb
cli
lcall
stos
mov
dec
jp
dec
scas
pop
cmpsb
ror
dec
std
adc
inc
in
frstor
enter
jnp
movsl
adc
and
dec
adc
insl
out
ljmp
pop
push
out
dec
in
inc
div
shrl
popf
jno
add
sbb
jns
add
mov
inc
adc
adc
and
mov
mov
jge
hlt
fstl
insl
mov
xchg
dec
sbb
imul
out
dec
dec
lods
mov
and
pop
inc
inc
cs
and
outsb
xlat
cld
ret
sbb
aaa
mov
adc
fcompl
loop
sahf
inc
ss
shlb
outsb
fsubs
pop
cmp
and
popf
fsub
testl
out
or
inc
jae
repz
xchg
sub
divb
add
js
cmp
lock
stos
fnstcw
lods
inc
shlb
repz
lods
mov
jae
or
cmp
faddl
stos
stos
push
pop
mov
xchg
cmp
pop
jge
jp
mov
lahf
aaa
mov
in
inc
sti
faddp
mov
dec
dec
cs
outsb
sbb
push
enter
fistpll
sub
movsl
sbb
cmp
setg
jae
sub
adc
out
ficoml
cmp
arpl
out
jge
dec
out
adc
sub
arpl
pop
mov
add
push
bound
pop
fwait
mov
xchg
lds
aas
in
or
fsubrp
out
xchg
mov
mov
xchg
lahf
cmp
test
adc
cmp
sub
inc
notl
mov
jns
pop
loopne
add
xchg
lea
in
jb
fwait
popf
cwtl
into
mov
add
pop
xchg
pop
add
in
pop
xor
pop
ja,pn
mov
int3
icebp
sub
js
fldt
push
cmp
les
lods
sbb
test
inc
mov
inc
or
add
clc
js
mov
cmc
fstps
inc
jl
je
jno
jl
int
cmpsb
mov
push
mov
aam
in
testl
popa
adc
mov
and
adc
cmpsl
mov
sti
mov
in
xor
push
inc
nop
aaa
jno
inc
xchg
push
add
jns
data16
enter
jnp
daa
bound
test
icebp
pop
je
jb
push
mov
call
or
leave
sarl
mov
pop
mov
iret
daa
inc
or
out
imul
mov
ljmp
add
xchg
out
xor
ja
fs
pop
outsb
enter
out
inc
sbb
sub
add
xchg
iret
movsb
push
push
cmp
pusha
loopne
push
stos
cmp
mov
inc
xchg
inc
and
addr16
ljmp
jb
fcoms
adc
sbb
mov
stos
and
fists
jmp
cld
in
mov
popf
sub
fsubrs
pop
pop
and
dec
jo
lods
movsb
mov
orl
adc
in
movsl
popa
xchg
cmpsb
lods
loop
xchg
pop
dec
mov
dec
imul
shlb
push
rorl
and
jg
xchg
aam
cmp
lcall
inc
int3
cmc
in
jp
stos
pushf
dec
in
out
in
mov
xorl
cmp
shll
jmp
adc
stos
pop
inc
dec
and
shlb
mov
mov
xchg
sbb
cwtl
add
loop
dec
test
dec
mov
adc
andb
cmpsl
cs
mov
xorl
xor
inc
dec
adc
outsb
in
incb
sbb
mov
out
add
mov
push
imul
pop
leave
push
dec
and
sbb
lds
xchg
push
sbb
popa
jnp
mov
stos
or
imul
stos
xlat
inc
push
movsl
dec
push
mov
pushl
sbb
je
fnstsw
ja
sbb
dec
add
or
lock
mov
push
xor
fwait
popa
hlt
repz
setp
adc
das
movsl
or
das
icebp
into
out
sub
mulb
sub
scas
push
and
jp
dec
and
lret
add
scas
cld
pop
jg
dec
stc
mov
loope
imul
lods
mov
popa
and
test
or
scas
mov
cmpsl
pop
pop
fs
push
jmp
lcall
icebp
cld
xchg
in
dec
pop
and
es
push
push
mull
jmp
repnz
jns
adc
lods
in
mov
sarb
push
adcl
xchg
sahf
mov
dec
lret
pop
mov
test
pop
sub
xchg
subl
mov
xchg
inc
leave
push
hlt
cmp
mov
js
pop
sub
stos
in
jecxz
repz
cmpxchg
jne
int3
test
ret
dec
mov
stos
dec
mulb
cld
mov
add
ja
cmp
jae
aad
or
aad
stc
mov
mov
loopne
int3
sahf
cld
fisttpll
push
leave
mov
mov
mov
insb
clc
xor
mov
inc
sbb
cld
sbb
lods
and
nop
xlat
loop
out
dec
cmp
lods
push
jg
jmp
jp
adc
fadds
dec
jl
cwtl
scas
fcoml
sub
cli
loope
or
adc
shl
shrl
add
pop
or
movsb
fcoms
das
xchg
negb
push
dec
in
iret
push
outsl
imul
sbb
or
movsl
push
test
or
xchg
cld
push
jbe
sbb
and
lods
jnp
les
ljmp
and
mov
ret
push
shll
mov
xchg
mov
push
sbbb
adc
je
mov
lods
outsl
aad
lret
jne
popa
mov
lahf
mov
loope
cmp
cmp
vucomiss
dec
jns
push
nop
pop
mov
fldenv
lret
xchg
xchg
mov
and
jae
jl
fbld
idiv
add
sub
pushw
adc
mov
xchg
leave
inc
fnsave
lea
push
adc
jae
push
mov
inc
dec
imul
stos
sub
repnz
shll
outsl
push
icebp
ret
int3
jns
repnz
sub
jmp
mov
fs
inc
mov
push
out
and
xrstors
popf
lods
das
rcl
loope
lret
lret
pop
fmul
inc
ja
pop
stc
daa
jae
cmp
add
dec
addr16
popf
das
lods
pop
jne
fstpl
pop
cmpsb
push
es
stos
pop
xchg
cmp
jecxz
xchg
into
ret
xor
mov
mov
cmp
loop
in
pop
movsb
add
outsl
fistps
push
je
mov
lcall
nop
cmpsl
fidivrs
dec
in
inc
push
jmp
sti
out
in
bound
jb
int
mov
outsl
add
and
das
mov
jmp
das
idivl
dec
inc
notl
in
push
push
xlat
repnz
rcl
mov
cmpsb
fsubrs
movsl
clc
jns
gs
add
rclb
cmp
dec
sub
dec
ret
lret
inc
inc
and
or
stc
cmpsl
in
cmp
jp
shl
push
jmp
jecxz
jno
rcrl
ficompl
fucompp
adc
mov
bound
jg
inc
cltd
sahf
or
push
inc
lods
sti
nop
rorb
push
add
es
icebp
push
in
or
cmc
pop
sbb
mov
cld
xor
mov
push
and
mov
dec
gs
inc
jbe
pop
rol
mov
gs
mov
loope
into
test
add
sub
jecxz
push
scas
jns
adc
or
cmp
pop
insl
ljmp
repz
mov
insl
fwait
cmpps
subb
jle
or
xchg
cli
sub
fimuls
dec
popa
xor
popf
mov
xor
nop
stos
push
push
mov
push
jnp
jle
ret
dec
push
sbb
imul
cmp
pushf
ds
push
iret
aam
push
aas
in
dec
mov
jp
or
xchg
imul
lock
lret
xchg
xor
loop
lea
in
cmp
out
jae
pop
cwtl
mov
xchg
movsb
subl
xchg
cwtl
or
data16
adc
scas
cld
mov
adc
pop
test
stos
mov
dec
rorb
bound
pop
inc
or
std
and
inc
out
in
fmuls
and
aaa
mov
lods
insb
fisubrl
push
lret
ret
pop
test
pop
mov
push
add
fsubrl
jo
mov
adc
das
mov
pop
inc
mov
in
cld
pop
fwait
push
add
pop
iret
mov
insb
xchg
xchg
fimuls
xchg
jns
xchg
adc
jmp
scas
into
and
scas
cmp
fistpll
pushf
int3
fnsave
clc
lock
pop
arpl
pop
arpl
lret
std
out
incl
mov
inc
cs
cmp
mov
sbb
scas
add
call
inc
cmp
mov
lock
dec
idivl
xchg
and
cs
fdivl
and
or
xchg
sbb
mov
pushf
fstps
je
dec
scas
xchg
ljmpw
lret
mov
insb
add
nop
adc
pop
int3
pop
insb
mov
clc
in
xchg
sbb
outsb
mov
sub
out
das
lea
mov
pop
mov
pop
or
dec
addr16
sub
jbe
mov
cld
shr
and
inc
cmc
inc
aam
mov
cmp
out
mov
shl
stos
sarb
jp
sbb
cmpsb
xor
out
mov
das
inc
outsl
jge
roll
push
and
pop
push
repnz
shlb
outsb
push
add
xor
and
push
sub
push
std
pop
aaa
daa
dec
sbb
scas
fstpl
push
fstpt
adc
and
mov
add
rolb
cmp
jl
fdivs
pushf
jp
jo
lret
xchg
das
mov
loopne
pop
jge
mov
inc
shlb
repnz
ss
and
fidivl
fcoml
imul
loope
add
movsb
lahf
imul
stos
ds
loop
mov
pop
add
fincstp
call
pop
mov
mov
xorl
sti
out
loopne
adc
xchg
gs
cmp
test
pop
pop
fldcw
sahf
out
rorl
loop
std
pusha
dec
sbb
stc
stc
xor
stos
nop
jo
mov
in
jo
ljmp
mov
pop
jl
cmp
xor
addr16
cmp
fisubrs
fcoml
out
push
pop
sub
mov
stos
lea
adc
xchg
aam
pop
les
pop
shrb
stc
add
xor
mov
loop
cmp
ljmp
call
xor
test
or
pop
xor
shll
jge
pop
lahf
mov
inc
hlt
mov
mov
leave
cmc
mov
rolb
scas
cmp
mov
data16
add
mov
inc
mov
dec
repz
push
loopne
mov
mov
enter
add
test
cmp
mov
cmp
stc
mov
sti
inc
enter
ljmp
leave
dec
inc
addr16
xor
stos
push
cmp
pop
rcr
ret
and
pusha
sub
adc
scas
divl
cli
mov
std
iret
dec
in
or
mov
adc
and
cmp
pop
push
xor
leave
sub
cmp
repz
cmpsl
mov
jge
pop
dec
aam
xchg
decb
cmpsl
mov
je
loop
in
iret
mov
push
insb
nop
scas
adcl
push
stos
lds
jecxz
dec
fs
jb
imul
cmp
mov
stc
scas
jecxz
repz
icebp
adc
pop
sarb
sbb
loop
xor
scas
fs
loope
adc
clc
not
mov
xor
in
mov
xor
push
or
mov
inc
inc
pop
into
inc
scas
pop
mov
or
sahf
sbb
dec
in
icebp
mov
push
dec
outsl
dec
push
dec
pusha
enter
mov
push
mov
fisttpl
mov
stos
fdivrl
lret
out
cmp
xchg
mov
inc
xor
lcall
cmp
pop
bound
nop
jp
hlt
fisubl
xchg
fs
out
sub
test
jne
fwait
add
cmp
xchg
adc
ret
cld
pusha
jno
test
jl
aaa
mov
nop
mov
nop
out
sbb
mov
roll
ss
arpl
insb
mov
mov
loope
js
stc
sahf
inc
popa
jl
out
xor
out
adc
fcomi
iret
cmc
shrb
push
mov
inc
pop
jbe
sti
lea
mull
js
cs
outsl
inc
cmp
and
push
icebp
dec
divb
cmp
andl
cwtl
inc
pop
push
mov
xlat
add
sbb
or
dec
xlat
mov
call
outsl
jecxz
aas
mov
shrl
mov
jmp
add
in
shrb
cltd
inc
pusha
fdivl
aad
adc
pop
insb
scas
xlat
jge
cmp
lret
xorb
orps
add
je
cld
xor
js
xor
pop
ja
scas
rol
or
add
mov
cmp
out
pop
mov
ljmp
sbb
scas
pop
sarl
inc
shr
fwait
sbb
mov
aaa
dec
movsl
ja
cmp
push
dec
mov
push
lds
mov
pop
in
jle
roll
nop
cld
lcall
jns
mov
mov
push
sub
dec
add
and
lret
clc
test
add
mov
je
mov
dec
adc
lock
sbb
pop
push
or
cwtl
xchg
rep
and
shlb
mov
push
cmp
cltd
pop
pop
ficomps
cmp
mov
nop
or
jb
xchg
mov
insl
out
repz
mov
cli
aad
cmp
js
pop
inc
fiaddl
lods
xlat
ljmp
negb
lret
pop
push
xchg
pop
jne
es
sbb
lcall
xlat
mov
jl
cmpsl
pop
pop
shlb
mov
pop
test
rcr
push
xchg
cmp
scas
idivb
stos
cmp
mov
jge
xor
push
cmpsb
scas
jmp
sub
push
dec
inc
jg
out
sbb
push
push
cmp
cmp
and
daa
dec
jnp
gs
repz
pusha
cmpsb
inc
shl
mov
pushl
sti
ss
pushf
xor
sbb
cmp
jmp
loope
or
mov
mov
filds
insl
cmpsl
insb
enter
mov
outsl
inc
sbb
cmp
inc
add
ficoms
sbb
dec
loop
dec
ret
jle
jno
fcmove
outsb
mov
shll
push
jle
ss
repz
jmp
scas
xor
adc
mov
cmp
or
mov
mov
jge
push
xlat
jnp
jp
rcrl
mov
fisubs
dec
inc
push
sub
dec
mov
lock
arpl
lods
push
adc
pop
into
adc
incb
push
and
mov
inc
cltd
pop
jne
cmpsb
int3
add
test
repz
pushf
adc
and
mov
xor
and
ret
sti
fldcw
mov
fimull
dec
data16
sarl
outsb
stos
pusha
push
call
xchg
iret
sbb
sbb
xchg
mov
jmp
sub
xor
xchg
data16
data16
repnz
mov
sbb
jb
aad
shlb
jo
shl
xchg
push
es
in
sti
push
adc
scas
adc
lods
mov
mov
lret
rclb
push
push
imul
xchg
mov
adc
or
mov
and
pop
pop
or
push
ss
xchg
aas
add
lret
pusha
rorl
fisttpl
adc
mov
xchg
sbb
cmp
fs
mov
clc
gs
mov
xchg
xchg
xorl
jl
scas
and
neg
divl
repz
xchg
out
int
push
cmpsl
cmp
repnz
pop
imul
lds
in
in
dec
sahf
in
xlat
shll
xchg
jle
jb
mov
cltd
dec
sub
popa
shl
fnsave
mov
mov
and
dec
jbe
cmpsb
mov
push
psrlw
dec
imul
aas
das
ficompl
mov
movsl
pop
subl
dec
adc
jnp
int
cmp
testb
neg
lret
mov
push
jne,pt
les
or
pop
xchg
mov
xor
pop
mov
in
repz
inc
cltd
les
push
aaa
inc
insb
mov
enter
mov
lea
es
gs
into
xchg
or
in
xor
sub
inc
dec
out
divl
or
std
cmp
adc
or
insb
cmpsl
repz
pushf
rol
mov
lods
stos
mov
pop
scas
fnstsw
ret
mov
idiv
adc
jb
add
xchg
adc
dec
push
imul
adc
shr
testl
xor
cmp
add
outsl
or
fwait
mov
push
mov
iret
in
cs
repnz
add
mov
hlt
jmp
jp
pop
ljmp
icebp
int
pop
sti
pop
insl
cmp
std
xchg
xor
mov
in
insl
xor
pop
inc
mov
xchg
jmp
sbb
outsl
push
jns
sbb
mov
fs
test
xor
sub
xchg
sub
push
pop
inc
in
arpl
icebp
fnsave
aad
sahf
and
das
test
sub
sbb
push
lret
cmp
sub
ret
adc
mov
push
or
je
outsl
cld
jecxz
shlb
icebp
insb
imul
cmp
sub
dec
cwtl
cmp
fwait
inc
mov
adcl
shll
mov
dec
jbe
inc
aaa
push
sub
cwtl
cmp
pop
mull
sub
out
sbb
dec
cmc
je
inc
test
jl
mov
jle
enter
add
push
pushf
mov
dec
pop
cmc
jmp
movsl
outsl
rcrb
mov
aam
sbb
push
sbb
lods
dec
sti
dec
call
or
add
gs
cmp
shr
inc
in
fisubs
sbb
test
imul
push
fwait
nop
nop
test
inc
test
sub
xchg
mov
orl
pop
cwtl
enter
iret
adc
mov
pusha
fadds
push
sbb
fwait
and
sub
std
lret
dec
cmp
cs
jecxz
hlt
orl
mov
push
ljmp
int3
push
add
jb
or
rorb
mov
rcl
pop
test
add
lret
es
out
aas
push
mov
movsb
add
jle
push
fstpl
sbb
add
xor
in
fstpl
leave
sub
jecxz
xchg
lods
sub
in
mov
in
push
std
sbb
rorb
cmp
jae
add
xchg
in
xchg
jmp
and
cmp
jb
lcall
mov
jge
imul
pop
inc
cmp
int3
add
clc
shrb
xor
cld
call
pop
and
loopne
and
mov
int
loope
pop
push
mov
subl
fs
popf
test
jl
daa
jecxz
fisubl
cld
arpl
out
jge
dec
mov
dec
and
inc
xchg
xor
cltd
das
xor
cs
mov
push
dec
leave
mov
cwtl
subb
xchg
aaa
inc
and
shll
mov
lods
call
dec
leave
and
fsubrl
insl
cmp
xor
mov
push
xchg
add
and
and
lret
jge
dec
jp
mov
inc
les
or
xchg
lock
enter
inc
jne
loopne
and
jg
scas
push
mov
pop
sbb
xor
jo
lods
dec
fidivl
loop
stos
xor
cmpl
sbb
sub
push
cmc
aam
test
pop
jb
movsl
scas
aas
push
mov
scas
cli
xchg
xor
mov
pop
push
pushf
inc
adc
xchg
sahf
scas
mov
xchg
pushf
jle
ret
mov
cmp
jno
je
ljmp
jns
decl
notl
ret
mov
cmp
sbb
mov
popf
mov
jo
xchg
out
pop
jecxz
sub
icebp
sarb
in
aad
fnstsw
stos
inc
and
or
rorl
push
push
aad
mov
cltd
fwait
mov
or
xor
jae
cmpb
xlat
push
ja
push
daa
dec
outsb
lods
insl
jae
mov
orb
iret
adc
mov
push
pop
jo
enter
icebp
nop
sbb
insl
loope
in
dec
clc
add
lds
sbb
adc
jp
jo
inc
inc
add
jle
popf
jecxz
cmp
or
shr
or
cmpl
push
ja
push
mov
mov
mul
lret
mov
adc
jmp
insl
jl
xor
mov
ret
inc
or
dec
and
push
repz
out
stc
jo
insl
ret
and
push
imul
aaa
cmp
add
cmpsb
arpl
and
or
loopne
andb
lcall
xchg
pushf
dec
jmp
icebp
xchg
mov
jp
ret
pop
je
ret
in
sahf
inc
mov
xor
incl
cmpsb
loope
cmc
cs
pop
add
std
fcmovu
jae
sbbb
mov
push
lock
mov
ret
adc
cmp
fdivr
push
test
and
adc
inc
dec
hlt
movsb
sarl
push
xor
push
xor
sahf
mov
clc
pusha
jae
and
fwait
dec
ror
rcrb
stos
hlt
inc
mov
dec
mov
daa
or
mov
popa
fs
insb
das
push
push
mov
xchg
test
scas
dec
dec
or
or
push
push
sub
dec
adc
cmp
insb
dec
sub
cmp
xor
das
loopne
fisttpl
add
add
lock
adc
sub
sub
stos
hlt
mov
fldt
leave
cmp
push
mov
fisttps
hlt
insb
icebp
cmc
xchg
dec
or
xor
test
into
sub
mov
pop
jae
jge
or
mov
data16
xchg
jb
cmp
nop
dec
dec
popa
jge
push
aad
cmpl
icebp
pop
lock
mulb
cmpsb
sub
or
jp
jnp
xor
pop
xchg
lret
les
lods
cmp
test
rcll
xor
mov
iret
mov
dec
push
loop
mov
ja
arpl
fst
mov
stos
movsl
decb
pop
sub
pop
or
xchg
sub
into
sti
inc
aam
and
dec
es
lods
xchg
pop
repz
test
pop
lahf
pop
cli
cmp
lret
sti
fildll
hlt
mov
adc
fcomi
push
aas
in
dec
stc
xor
subl
sahf
shl
add
ret
or
mov
jne
fwait
lahf
push
jle
outsb
jns
out
popf
ss
mov
je
pop
sbb
pop
aas
mov
mov
xor
mov
out
jae
sub
loop
fcmovb
adc
pop
cltd
add
sarb
aaa
outsl
or
jbe
mov
dec
sbb
test
icebp
repnz
popa
mov
test
dec
enter
lret
add
pop
push
cld
out
pop
mov
cs
cmp
iret
popa
pushf
mov
push
clc
fs
in
fsubrs
loop
aas
mov
imul
sbb
push
adc
sbb
ja
pop
sti
test
pusha
dec
xor
cmpsl
jne
mov
and
pop
data16
movsl
insl
stos
int3
movb
and
mov
push
or
mov
inc
movsl
cwtl
lea
js
lods
sub
pushl
xlat
mov
adc
mov
sti
vpminub
scas
xor
mov
and
popa
sbb
out
jmp
aas
cs
in
xchg
mov
fsubl
pop
and
mov
xor
or
xor
xchg
push
cmp
aas
xchg
lahf
push
and
out
and
sub
sub
fdivrl
and
or
lods
mov
out
inc
subl
int
lcall
xchg
aaa
mov
and
lcall
cmpsb
lds
or
lret
ret
mov
lock
add
dec
cmp
and
xchg
mov
shlb
adc
pop
dec
sbb
push
in
sbb
lcall
dec
ret
pushf
push
mov
test
dec
popf
mov
sbb
push
dec
sahf
icebp
cmpb
outsb
cmp
sbb
into
idiv
and
aad
push
bnd
adc
jne
in
cmc
sub
aas
dec
and
pop
mov
adc
push
push
ret
sbb
out
jp
cmp
sub
jge
jg
xor
std
pop
push
inc
fwait
scas
movq
xchg
mov
xor
jp
into
mov
xor
ljmp
mov
mov
nop
add
aam
push
dec
dec
imul
out
inc
mov
mov
out
adc
in
jl
ja
jge
xor
call
inc
xchg
leave
int3
xor
scas
jl
sbb
sahf
shll
mov
adc
jmp
dec
add
pop
test
in
lcall
idivl
dec
lock
dec
xor
scas
and
ja
popa
aad
jmp
xor
scas
inc
and
xchg
mov
jl
xor
xorl
call
das
or
rorb
hlt
test
adc
dec
mov
adc
leave
jno
push
lods
dec
cmp
scas
mov
sarb
imul
sub
pop
add
aaa
nop
orl
jae
rcr
xlat
pop
out
aaa
cld
mov
sub
mov
or
dec
lret
cmpsb
js
add
push
je
cmp
stos
jl
dec
jb,pn
mov
mov
and
ss
mov
xchg
pusha
ret
out
add
add
repnz
xor
mov
mov
jl
xor
pop
sbb
mov
ret
mov
lret
sub
push
dec
flds
push
test
hlt
shl
lret
pusha
push
sbb
or
mov
jp
jae
sahf
jae
adc
push
jmp
in
stos
icebp
mov
push
xchg
movl
cs
xchg
hlt
dec
and
push
fisttps
sbb
cmpl
rcrl
out
fs
cwtl
imul
clc
cmpl
inc
xchg
push
andl
mov
insl
mov
xor
mov
push
and
fabs
loope
cmpsb
cmp
out
and
orl
sub
enter
enter
cld
lcall
pop
and
fnstsw
insb
mov
sbb
hlt
sub
out
cmp
cmpsl
xchg
mov
les
inc
or
jge
fs
stos
dec
incl
sarl
push
dec
jnp
dec
sbb
das
sub
cmp
idiv
xchg
les
cmpb
sub
xchg
incb
jo
mov
or
push
jmp
cmp
iret
aaa
lret
pop
xlat
xor
pushf
adc
cwtl
aad
push
js
stos
push
xchg
ret
cmc
sub
ja
sbb
jo
add
add
xchg
cmp
in
sub
insb
stos
notb
imul
idivb
push
jne
pop
xchg
sub
adc
xchg
inc
aam
add
ficoms
fistpl
mov
dec
test
xchg
rcll
dec
arpl
ret
push
call
cwtl
test
sbb
dec
in
inc
sbb
push
notl
test
sbb
adc
mov
mov
and
xchg
loope
bound
add
pop
lcall
sub
lock
bound
shr
sub
push
inc
add
mov
push
rclb
fmul
bt
add
aas
pop
lcall
or
mov
or
jp
dec
rorb
stos
cmc
dec
sbb
mov
addl
ljmp
dec
cmpsl
stc
jae
xchg
repz
and
cmp
fstpt
mov
pop
pop
mov
cmp
xchg
cmp
and
xor
aaa
add
andl
jno
pop
pushf
ljmp
dec
das
lds
jl
mov
lcall
mov
sarl
add
push
push
jbe
ss
out
pop
mov
pop
push
in
inc
fs
hlt
cvtdq2ps
jb
data16
dec
sbb
xor
loop
adc
lcall
mov
pushl
iret
adc
test
ss
push
dec
shll
daa
addl
insl
mov
test
movsb
enter
push
les
pop
mov
adc
test
dec
mov
pop
lods
xor
mov
jne
aam
xchg
cmc
lahf
loopne
cwtl
shrb
mov
xor
or
imul
jo
or
adc
mov
jns
sbb
mov
out
scas
into
xchg
xchg
std
ljmp
pop
adc
and
adc
data16
xor
popa
pusha
cmp
cmp
mov
mov
imul
sub
in
inc
bound
push
hlt
sub
cmc
or
lods
jecxz
jbe
aam
mov
popa
ret
mov
cltd
mov
jo
jb
movhps
adc
fdivr
and
stc
mov
ljmp
or
inc
mov
scas
jbe
andl
sub
inc
pop
aam
pusha
inc
not
ljmp
adc
dec
push
mov
fs
outsl
test
jb
jecxz
int3
fidivrl
dec
loope
pop
or
aas
pop
mov
add
jno
lock
roll
out
insb
sarb
call
add
jae
inc
xchg
sbb
mov
pop
jne,pn
mov
mov
dec
cltd
pop
mov
pop
dec
dec
inc
mov
mov
jnp
aas
dec
mov
sarl
arpl
arpl
out
jg
loop
fadds
ds
jge
loopne
ret
rolb
pop
pop
inc
out
dec
repnz
cli
mov
ret
mov
cmp
cltd
mov
addb
xchg
xchg
jo
xlat
ret
mov
setno
push
pusha
fistpll
leave
fs
fcompl
mov
scas
inc
loope
rorb
jle
dec
mov
xor
int3
xor
add
cmpsl
outsl
jp
cmp
xchg
test
cld
xchg
mov
test
mov
xchg
fs
jmp
pop
adc
stos
or
sub
mov
filds
sbb
enter
jmp
fnsave
fwait
inc
into
stos
push
pop
icebp
sarb
lcall
out
xchg
test
sub
xchg
hlt
inc
nop
jmp
negb
xchg
repnz
inc
push
dec
mov
and
sub
cmp
sbbb
clc
or
mov
xor
js
sub
jg
imul
push
daa
or
std
and
lea
sbb
mov
rcrl
xor
pop
leave
xor
cmp
scas
pusha
adc
cmp
mov
sbb
pop
call
in
movl
gs
bound
or
mov
push
loope
lock
and
int3
outsb
rclb
ret
adc
sti
dec
ret
sbb
mov
xchg
jecxz
or
arpl
push
cmp
mov
mov
dec
sub
out
inc
mov
rorb
add
dec
pop
inc
mov
mov
popf
xor
jmp
out
xlat
ret
sar
cmp
ret
sub
mov
add
xchg
mov
push
cmp
addr16
idiv
add
xor
aas
jae
in
push
mov
bound
outsb
popf
inc
dec
cld
xor
or
scas
movsb
dec
stos
loopne
cwtl
subb
repnz
inc
adc
pop
jbe
cmp
stos
pop
cmp
and
pop
popf
dec
shl
mov
mov
fdivl
xchg
scas
push
arpl
pop
test
pop
jb
fmulp
xor
push
fcomi
and
aad
ja
lock
jnp
and
iret
test
lret
fstps
sub
jmp
add
imul
fistpll
out
in
adc
stos
rcrl
insl
xor
outsl
test
data16
jae
rcll
sahf
xor
ja
sbb
int3
scas
mov
sbb
pop
inc
and
or
jl
push
add
fiaddl
jge
cmc
xchg
adc
rclb
shll
adc
clc
sarl
inc
cmc
inc
sub
xor
jp
pop
clc
pushf
pop
loope
adc
jb
or
ficomps
xor
test
enter
xchg
lahf
aad
mov
jne
and
mov
ffreep
jnp
cmpsl
into
jecxz
jbe
adc
shrb
pop
pop
daa
add
fs
add
les
mov
les
sbb
outsl
sub
aas
xchg
push
test
sbb
xchg
mov
call
mov
ret
icebp
mov
popa
lcall
xchg
cmp
loopne
xor
out
out
ret
in
push
int
pop
mov
inc
call
imul
lock
dec
jle
fwait
nop
jmp
push
jns
shl
popf
insl
push
inc
insl
push
jecxz
cltd
pop
dec
sbb
or
iret
test
mov
jge
and
int
jp
lahf
add
ss
ret
ret
sbb
sarb
sub
mov
add
leave
push
adcl
pop
pop
lds
jb
jno
jle
adc
adc
scas
lea
ss
push
inc
push
stc
dec
mov
ret
cmp
shr
add
sti
fucomp
add
add
sbb
dec
mov
cmp
inc
data16
pop
lock
mov
mov
stos
jns
sbb
sbbb
push
repnz
cmp
sub
je
add
push
ljmp
or
cld
test
in
push
in
dec
jne
xchg
push
shl
cld
adc
cli
sbb
out
push
movsb
or
ror
xchg
pop
ljmp
cli
sti
jae
and
insb
sub
cld
popa
inc
dec
or
cmp
jb
pop
imulb
out
cmp
sarl
mov
pop
xchg
dec
dec
mov
pop
add
jne
int3
cmpl
outsb
dec
mov
pop
scas
pop
push
sbb
jmp
or
adc
fcoml
pop
clc
in
pop
loope
ret
lret
jmp
push
mov
push
xchg
lahf
fmuls
fisttps
shl
arpl
push
into
shrl
xchg
cltd
xchg
and
je
add
mov
stos
jecxz
ja
and
cmp
pop
pop
mov
fadds
ds
pop
xchg
in
add
xor
popf
lds
and
sub
pop
mov
imul
dec
mov
iret
mov
inc
ret
push
lds
fdivrs
mov
enter
push
add
xchg
push
lahf
nop
or
cs
mov
insl
mov
out
sbb
dec
cmp
mov
ffreep
mov
fbstp
int3
shld
aas
push
jbe
fstps
les
mov
jle
or
sub
sbb
aas
stos
push
loop
in
inc
mov
mov
das
dec
xchg
xor
jb
pop
push
out
movsb
scas
mov
adc
pop
fiadds
jmp
fxch
or
popf
and
scas
sub
outsb
pop
pop
insl
rcrl
push
pop
lahf
cmpsl
popa
cmpb
fidivrl
out
push
inc
or
adc
cmp
shll
lcall
push
xor
dec
inc
lahf
jo
and
lods
xor
and
and
andl
cld
repz
mov
mov
out
cmpb
jne
push
fwait
push
sbb
cli
add
inc
lods
fsubr
jnp
lds
mov
mov
repz
js
cmc
xchg
pop
and
ret
dec
call
in
cmpsl
cmp
push
mov
jne
or
mov
xchg
or
out
xor
scas
xchg
jno
shll
je
jns
mov
fidivs
sahf
mov
int
sbb
mov
lods
sub
sub
testb
icebp
iret
repz
rorl
or
int3
dec
cmpsb
insl
mov
out
push
xchg
psubsb
movsb
out
fdivrl
pop
and
enter
push
add
cld
inc
dec
cs
ror
adcl
ss
dec
lock
shrl
mov
pusha
mov
movsb
jp
je
test
pop
bound
imul
adc
fdivrp
xor
mov
xor
xor
les
outsl
mov
addr16
into
mov
test
pop
cmpsl
mov
cmp
push
jle
push
movsl
fimuls
pusha
test
ret
shll
std
cmc
jg
ljmp
mov
test
gs
lahf
jb
scas
test
jne
das
lock
dec
lea
cmp
sub
mov
xlat
push
inc
rorb
jmp
xor
dec
das
ss
out
jno
push
mov
sub
pop
popf
mov
sub
cli
jns
dec
sbb
aaa
imul
repnz
xor
pop
xor
jns
in
iret
mov
ss
or
jmp
leave
mov
pop
enter
dec
adc
es
sbb
negb
les
add
aas
scas
lcall
push
test
cmp
cltd
push
mov
mov
cmp
popa
cmpsl
cmpsl
cmc
insb
movsb
test
decl
mulb
test
sar
mov
pop
icebp
pop
push
sub
inc
fbstp
sbb
lcall
sub
ficompl
xchg
xchg
aaa
lods
scas
jae
aad
inc
loop
unpckhps
subb
adc
addb
dec
add
adc
mov
add
ds
dec
mov
push
mov
mov
js
daa
cmp
mov
enter
shll
fs
cmp
jnp
jbe
jb
insl
repnz
xor
dec
out
pop
fnstsw
imul
mov
or
xchg
loop
ja
sub
movsl
bound
test
and
push
mov
mov
push
sbb
enter
inc
aad
and
add
and
stos
sbb
les
pop
mov
mov
dec
mov
add
xchg
lock
lcall
mov
test
adcl
mov
out
shrb
jge
push
or
stos
repnz
inc
push
faddl
pop
test
loopne
xchg
fdivrs
mov
add
xlat
cltd
sub
repz
push
fs
fsubl
out
repnz
frstor
mov
nop
daa
rorl
xchg
lods
pop
ja
sbb
adc
xchg
mov
xchg
movsb
sbb
jae
daa
push
xchg
dec
int
scas
sbb
movsb
push
fwait
arpl
xor
movsb
xchg
out
std
jae
and
mov
int3
cltd
xor
inc
pop
icebp
lods
push
shrl
notb
das
pop
outsl
sbb
push
mov
fildll
pop
in
mov
int3
jne
and
pop
inc
fsubl
int
dec
in
add
fwait
mov
imul
jb
loop
ret
lahf
and
lea
jnp
popf
sub
adc
pusha
or
jo
dec
dec
pop
repz
int
jle
inc
xchg
sete
lret
cmpsw
out
imul
add
mulb
push
lcall
mov
pop
xchg
lret
addb
negb
pop
stos
popw
test
data16
out
dec
popa
iret
pusha
imul
mov
sub
cltd
stc
mov
push
and
hlt
sub
sbb
and
adc
and
test
orl
pop
lcall
aam
inc
jns
xchg
and
inc
addb
mov
popf
mov
and
outsl
adc
mov
lock
iret
pop
scas
mov
dec
mov
loop
jae
pop
pusha
xchg
pop
adc
mov
movsl
mov
clc
and
inc
add
pop
sub
js
pop
movsl
push
addb
push
inc
cmc
fs
jg
in
rcr
adc
cmpsl
data16
and
mov
out
pushf
push
mov
inc
lret
inc
ret
adcl
or
and
insl
pop
outsl
mov
ljmp
mov
shll
lea
sarl
jno
jge
mov
cmp
sbb
les
jns
enter
or
sar
cmp
xchg
mov
cmp
cwtl
icebp
xchg
and
in
popf
fistps
int
mov
cld
lahf
clc
pop
jnp
push
mov
or
sahf
cli
shll
scas
add
imul
and
inc
xchg
loop
push
dec
mov
dec
les
sbb
stos
cwtl
ds
addr16
fnsave
shl
aad
fdivs
stos
hlt
sbb
ror
in
inc
push
insb
jnp
test
or
out
test
sbb
imul
mov
rcr
and
jmp
jo
mov
lock
add
adc
icebp
inc
jmp
inc
mov
int3
loope
cmp
push
dec
jp
or
adc
sub
cmp
push
push
pusha
dec
push
enter
sbb
inc
and
or
mov
outsb
add
pop
or
icebp
jo
out
mov
lds
enter
fwait
lret
and
mov
jmp
test
in
std
pop
sbb
mov
rcll
mov
xor
add
out
lret
in
sbb
data16
sub
orb
nop
lea
std
js
out
and
lret
dec
pop
fildll
std
fists
aam
push
ret
subb
ror
stc
icebp
es
dec
lods
sti
xchg
lods
mov
add
inc
pusha
lock
push
pop
pop
icebp
push
cltd
push
xchg
adc
mov
and
in
ja
repnz
cld
int
test
inc
cmp
mov
add
mov
xchg
dec
fdivl
fs
into
and
outsl
das
add
fists
js
mov
push
jae
dec
in
push
jne
pop
stc
clc
in
sub
mov
jl
or
mov
mov
ljmp
inc
lods
and
sbb
or
xor
adc
jb
push
mov
stos
xor
outsl
loopne
xchg
shlb
addr16
iret
pusha
hlt
xchg
xor
inc
out
or
sahf
dec
in
sbb
pop
inc
clc
pop
cmp
outsb
push
sahf
stos
lods
repz
jb
dec
push
sbb
scas
sahf
enter
mov
leave
out
cmp
or
dec
and
adc
xchg
fldcw
pop
not
inc
mov
cmp
lods
std
mov
mov
mov
jmp
lahf
outsl
ret
cmp
mov
aaa
cwtl
cmp
xadd
roll
lret
ja
popa
test
into
sbb
push
adc
xchg
ss
aam
bound
lds
dec
sahf
mov
jbe
mov
pop
call
mov
mov
icebp
xchg
sub
sub
hlt
fimuls
xor
add
test
push
sub
inc
fwait
and
div
in
mov
dec
xlat
jb
insb
and
inc
mov
fildl
mov
sarb
mov
add
nop
push
loope
out
je
out
roll
imul
jno
pop
sub
jp
mov
sbb
xchg
rorb
pop
jns
jnp
out
dec
scas
inc
inc
outsl
pop
mov
sub
movsl
movsl
or
inc
jp
ret
push
sbb
mov
icebp
adc
inc
jle
fs
js
pop
cmc
js
push
sarl
xor
add
js
stos
or
aam
popl
loop
pop
test
dec
push
push
push
jbe
or
cmp
push
inc
and
dec
dec
xchg
enter
das
xor
fildll
sbb
nop
dec
adc
adc
movsb
jae
je
mov
nop
js
inc
push
add
in
add
repz
roll
jo
das
cmp
sbb
dec
xchg
push
imul
mov
inc
xor
sbb
mov
mov
cli
int3
xlat
mov
aad
and
jl
fildll
push
aas
popf
xor
js
aam
mov
lahf
clc
lea
cmp
ret
test
out
cld
or
movb
jbe
mov
out
rcll
and
leave
lahf
lock
push
lret
jns
pop
mov
jns
dec
rolb
je
in
out
push
xlat
inc
shrl
xor
clc
jmp
stos
int
adc
popf
sub
ja
test
dec
mov
jecxz
ficoml
cs
fnstenv
mov
or
xchg
cmpb
and
and
cmpl
sbb
or
push
fsub
push
jmp
jns
ljmp
jo
xor
mov
mov
or
mov
pop
sbb
int3
jecxz
push
adc
test
inc
popf
aas
xchg
ds
insl
mov
xchg
loopne
pop
mov
jbe
sub
jae
sub
mov
adc
add
in
lahf
sbb
xchg
xchg
push
sub
adc
adc
adc
jge
sti
stos
pop
inc
mov
add
test
and
call
mov
fstpt
add
sbb
repz
cwtl
inc
inc
out
adcl
add
inc
jne
cmpb
cmpsl
pushl
lcall
test
cs
sub
xchg
mov
xor
pop
dec
pcmpgtb
lds
mov
fstpt
inc
les
jg
stc
into
mov
xor
jp
dec
loop
imul
addl
inc
cs
push
notb
and
cmpsb
add
cmp
bound
rcll
pminub
outsb
addr16
add
jmp
jl
lahf
xor
imulb
stos
das
xor
ja
push
sbb
clc
outsb
popa
fdivs
pop
fucomp
into
push
sub
fidivl
xor
push
mov
sbb
idivl
pushf
adc
or
out
ss
icebp
xor
push
ljmp
sbb
jbe
add
rcrl
loop
mov
cmpsb
rclb
fsubl
cltd
sbb
insl
mov
sbb
jnp
sub
pusha
scas
or
push
aam
lret
loop
pop
inc
test
iret
cmp
dec
jo
enter
xor
add
rcr
subb
add
or
jae
pop
dec
push
cmpsl
mov
push
pop
es
push
mov
adc
cmpsb
iret
daa
lods
pop
mov
in
adc
adc
shrb
test
sbb
jne
mov
cmpsb
jns
shll
mov
imul
out
mov
xchg
mov
lods
in
cmp
in
jno
mov
add
adcb
sbb
xchg
ret
inc
mov
scas
je
and
cli
leave
fstpl
test
pop
inc
test
dec
mov
jge
cmpsb
lods
sbb
adc
push
js
add
ss
test
push
loope
mov
lret
lds
lds
xchg
fucomi
mov
or
or
dec
push
mov
fs
add
push
push
jbe
xor
lods
mov
sub
sbb
push
call
pushf
int
aam
outsl
push
aad
cmp
hlt
orl
xor
push
ja
or
or
cltd
inc
outsb
dec
aam
pop
imul
test
dec
sub
daa
test
mov
xor
sub
js
sbb
or
repnz
and
mov
sti
sbb
lcall
aas
aaa
mov
div
arpl
and
cmp
lock
out
mov
push
cmpsl
push
sub
mov
das
std
dec
mov
aas
lock
stc
lock
aad
out
jecxz
xchg
test
xor
fwait
rcrl
sbb
push
push
inc
addl
ja
bsf
ret
mov
out
scas
or
and
pop
and
movsl
outsl
mov
shll
pop
push
divb
xchg
mov
dec
ds
push
stc
or
push
push
lret
dec
cmp
push
jecxz
add
insb
or
int
xchg
sbb
dec
int
jl
dec
outsb
pop
adc
dec
fistl
fcmovnu
fdivl
ret
jno
es
sbb
stos
cwtl
fidivrs
out
jo
ret
jmp
loope
rclb
pop
mov
fbld
out
push
jae
adc
mov
test
repz
mov
xchg
stos
and
adc
and
scas
into
stc
lret
repz
ret
sbb
push
jmp
push
insb
inc
test
mov
inc
pop
orl
test
jno
aas
mov
push
cs
pop
mov
dec
sub
test
push
jo
fildl
in
and
lds
add
repnz
pop
jle
or
jno
push
jnp
lahf
je
mov
lods
popa
test
add
lods
mov
mov
fs
loop
pop
mov
aas
and
fsubrl
cmpsb
pusha
sbb
mov
mov
sbb
cmp
mov
shlb
imul
rcrb
in
jg
inc
xlat
jmp
bound
xchg
fs
adc
call
dec
aad
add
leave
dec
clc
dec
je
and
shlb
cmp
xor
gs
out
lock
dec
push
push
das
jp
mov
out
stc
cltd
jno
push
dec
rol
dec
aad
into
dec
jl,pt
out
and
es
mov
add
mov
adc
test
or
and
mov
movl
cmc
es
jecxz
pushf
adc
dec
or
xor
lret
xchg
rclb
cmpsl
push
faddp
jb
or
movsb
mov
push
and
mov
mov
bound
push
mov
fisubrl
or
mull
int3
xchg
jle
stos
jno
cmpxchg
adc
mov
jae
cmp
or
out
insl
imul
inc
push
mov
jecxz
loop
cmpsl
je
cmc
push
or
push
in
rcrb
push
jmp
xlat
not
inc
push
mov
fldcw
adc
movsl
btr
pop
pop
sub
int3
inc
orl
out
adc
fs
call
andb
or
and
fwait
scas
pmaxub
dec
je
test
inc
lcall
xchg
lock
sti
and
jbe
dec
xchg
and
mov
ljmp
xchg
lock
xchg
mov
rcll
popl
leave
hlt
cmp
ret
mov
sbb
jo
mov
mov
adc
enter
and
roll
arpl
sub
lret
cs
imul
xchg
sbb
jne,pn
loop
ror
leave
jg
xchg
shrl
mov
gs
jno
mov
push
and
stos
xchg
bound
repnz
mov
jg
pushf
xor
and
das
push
popa
cli
sbb
dec
subl
stos
mov
lret
push
pop
xchg
insl
aam
jnp
jo
rcrl
leave
dec
dec
xlat
sbb
mov
out
test
inc
dec
jp
stos
dec
out
cli
clc
cmpsb
rclb
ret
les
icebp
call
and
jae
repnz
push
gs
mov
lcall
add
popa
jle
in
test
sbb
xchg
outsb
repz
lea
out
imul
cs
mov
adc
dec
mov
and
cmc
lcall
pop
inc
xor
pop
lea
inc
mov
lret
inc
shl
add
push
jecxz
pop
aad
adc
mov
ret
mov
xorl
in
dec
xchg
xchg
popa
add
mov
jmp
xor
les
gs
and
dec
jmpw
push
mov
mov
fsubrs
lret
test
pop
in
adc
in
xchg
xchg
jmp
sbb
cmp
icebp
or
jno
mov
cmp
daa
idivl
out
inc
xchg
sbb
adc
xchg
pop
leave
jge
jb
adc
pop
test
fs
pop
mov
inc
dec
xchg
stc
push
sbb
test
push
out
or
out
ror
sub
mov
test
pusha
mov
and
jns
mov
loopne
cmp
mov
jle
scas
push
aaa
dec
mov
test
lahf
imul
add
inc
sub
xchg
leave
xchg
dec
out
xchg
sub
test
pop
lods
push
cmp
aam
rol
bound
cmp
mov
jge
jb
push
push
inc
push
dec
dec
mov
xchg
pop
and
add
xchg
hlt
in
xchg
lret
cmp
mov
xor
or
push
push
imul
pop
sti
mov
cltd
fcomip
xor
loopne
repnz
and
mov
out
lret
sbb
outsl
ja
test
sti
mov
sti
jl
mov
adc
mov
aam
pop
mov
sbb
divb
push
cmp
stos
js
imul
mov
scas
icebp
inc
add
pushf
cmp
sbb
lock
fs
pusha
and
sub
idivb
sbb
mov
xchg
loope
sbb
lcall
xchg
fsts
mov
in
mov
jns
push
ret
jbe
js
pushf
adc
movsb
ret
nop
stos
mov
mov
sbb
push
xchg
scas
mov
insl
jo
hlt
je
inc
pop
and
xchg
push
jle
lods
sahf
frstor
inc
xchg
test
mov
push
push
shlb
xchg
jge
push
xor
cmp
fstps
adc
lret
lods
arpl
cs
adc
push
inc
push
mov
ret
dec
pushf
xchg
xor
adc
rorb
adc
dec
xchg
dec
and
inc
insl
fildll
dec
test
cmc
cwtl
sbb
insl
dec
inc
or
or
mov
sub
out
mov
pop
push
xor
push
sti
mov
out
jle
jne
jecxz
adc
pop
mov
xchg
aad
xchg
int
pusha
adc
cld
jp
test
sbb
sbb
popa
pop
jmp
cld
adc
and
fnsave
rolb
pop
bound
test
pop
mov
xor
push
add
xchg
sub
adc
sbb
jecxz
je
insb
dec
inc
sti
and
and
hlt
pop
in
lods
mov
ljmp
pop
jns
sub
daa
shlb
pop
pop
mov
imul
pop
lock
cli
lock
daa
mov
clc
mov
xchg
sbb
scas
iret
out
notb
lods
cmpsl
mov
lcall
push
mov
mov
xchg
lock
out
jecxz
cmpb
push
aam
orb
jns
rcl
xor
je
jmp
enter
sarl
imul
inc
paddusw
fdiv
clc
hlt
mov
or
movsl
into
mov
or
mov
jbe
inc
cli
pop
and
test
test
into
mov
pop
inc
add
pop
clc
popa
pop
sub
inc
mov
pop
ret
adc
ror
sti
xchg
mov
pop
test
mov
or
push
jl
insb
jb
xchg
mov
mov
or
add
push
xor
leave
cmp
shl
lret
sbb
and
test
into
or
xor
mov
add
push
xchg
gs
pop
sub
jne
fidivrs
les
cmp
xchg
xor
push
lods
cmp
stc
sub
ds
sbb
adc
cmc
pop
lods
dec
aam
xor
shrl
test
lret
fcmovb
sub
cmp
sbb
lock
mov
mov
repz
stos
int3
stos
xlat
clc
push
inc
in
out
adc
push
cmc
aad
jp
xor
fcompl
inc
cmpsl
iret
lea
pop
and
add
add
adc
xor
dec
fwait
pop
mov
and
arpl
test
cwtl
and
in
inc
cmc
popf
in
jp
xchg
adc
out
icebp
rcll
test
enter
outsb
cmp
hlt
sbb
jmp
stc
xchg
or
cmp
lods
xor
lock
and
sub
inc
jns
dec
adc
loopne
shll
js
or
in
jo
push
pop
ror
cli
jp
movsl
mov
aad
and
testl
mov
xor
outsb
jecxz
and
lods
pop
in
out
cltd
xchg
out
add
pop
cmp
cmp
mov
lods
adc
out
addr16
and
aam
outsl
iret
or
fldt
dec
add
adc
lahf
cmp
dec
out
xchg
cmpsb
jmp
xor
lret
out
enter
xlat
sub
mov
mov
inc
push
cmpsb
xchg
pop
dec
jb
repz
xlat
mov
mov
xchg
push
pushf
bound
aam
popf
mov
sub
mov
pop
jo
sub
stos
movsl
mov
in
aas
add
insb
lods
xchg
cmp
or
pop
popf
dec
in
ret
mov
clc
aaa
stc
push
cli
rorb
aas
roll
stc
imul
lret
cli
je
xchg
jne
cmpsb
push
dec
xchg
aas
push
jne
lock
cwtl
idiv
push
pop
ret
aaa
mov
bound
jns
or
mov
mull
xchg
mov
adc
or
push
push
xor
pop
hlt
cld
mov
jle
addr16
cmpsb
xchg
push
lret
cmp
mov
mov
call
push
int
dec
cltd
dec
xor
sti
mov
stc
dec
das
or
pop
jno
hlt
pop
jp
scas
jl
nop
dec
add
or
push
pop
stos
test
lock
and
out
ss
fdivrl
les
cmp
adc
fimuls
or
jo
notl
xchg
imul
mov
push
rcll
mov
rcr
sub
pop
in
mov
ja
lret
bound
jle
cs
pop
mov
sar
bound
pushf
inc
shll
jo
cmpsb
and
cmp
jns
test
fwait
sub
pop
fdivl
cs
cmpsl
pop
pusha
das
aam
decl
inc
je
sahf
out
cmc
xchg
nop
cmp
iret
ret
fwait
loope
mov
std
sub
push
je
je
hlt
repz
cmp
cmpsb
jle
insb
aaa
inc
push
xor
int3
mov
adc
mov
fbld
shrl
jno
test
lahf
push
ds
mov
cmp
in
and
push
inc
adc
xchg
popf
mov
out
movsl
inc
mov
sbb
jne
insl
mov
leave
adc
test
adc
pop
les
inc
jnp
out
push
fisttpl
jae
xor
mov
jp
add
int
xchg
xchg
dec
pop
inc
jbe
add
pop
inc
xor
or
mov
aam
cltd
stc
push
adc
or
mov
aas
int3
out
mov
push
push
pop
push
movsb
push
xchg
test
and
mov
cmp
mov
pusha
je
xor
and
cmp
outsl
data16
and
cmp
jbe
xor
ret
inc
xchg
mov
pop
negl
sti
and
adcb
fxtract
fwait
jmp
push
sbbb
and
push
jnp
lret
jae
incl
cld
sahf
jle
popl
xchg
and
sub
mov
cli
jp,pn
aas
rcr
add
cmp
scas
dec
cmc
cmpsb
ljmp
push
dec
orl
icebp
leave
lds
jns
and
adc
push
jge
adc
pop
xchg
mov
push
mov
push
inc
shufps
aas
adc
mov
push
jp
jmp
cmp
and
fsubl
popa
sbb
push
in
testb
repz
cltd
or
call
test
repz
sbb
xchg
mov
and
mov
mov
cmp
mov
xor
and
das
sbb
je
mov
or
out
inc
mov
iret
pop
push
repz
push
xchg
sbb
ss
mov
jg
push
dec
repnz
sti
iret
sti
es
shll
mov
jecxz
lcall
xor
xor
inc
xchg
jle
lret
adc
and
sub
rorb
popf
pop
or
and
mov
xor
cmp
sbb
mov
sbb
test
jb
cmp
cwtl
and
int3
dec
adc
pop
ficompl
out
jns
pop
iret
jns
es
push
sahf
int
inc
popa
arpl
sbb
xchg
add
aad
or
xchg
das
mov
out
les
mov
cmp
jge
pop
sub
fs
mov
pop
add
and
sahf
jno
int
sbb
adc
mov
jo
sarl
xor
iret
xchg
xor
pop
sub
mov
sbb
loope
ret
mov
retw
test
ljmp
loop
insb
sbb
inc
mov
daa
jge
mov
fs
sub
sbb
dec
aas
push
mov
sub
scas
dec
push
pop
fstpt
imul
cmpsb
pop
adc
orl
adc
stos
btr
adc
add
jo
ret
push
movsb
aam
xchg
dec
adc
push
in
inc
inc
add
xchg
in
dec
std
in
adc
repnz
jg
nop
push
rclb
ja
jb
mov
adc
and
mov
sub
sub
ret
jp
mov
mov
or
in
jns
sub
or
les
into
popf
bound
loopne
lea
mov
or
pop
icebp
nop
fists
rcll
loop
adc
add
jge
pushf
sub
add
pop
add
or
fistpl
out
adc
dec
dec
nop
adc
push
enter
xchg
or
stc
ds
push
arpl
jne
push
ficoml
push
xor
xchg
addb
xor
sub
test
notl
sar
arpl
sbb
movsl
rcll
loop
fs
jmp
mov
fimull
mov
xchg
into
and
mov
lahf
test
jl
jl
or
mov
mov
lea
stos
or
sub
notl
jne
push
dec
add
cltd
mov
pop
stos
jne
and
aad
in
mov
jl
dec
sbb
nop
add
push
mov
mov
mov
adc
call
dec
fnstenv
ret
inc
push
out
inc
and
hlt
movsl
insl
les
xor
rolb
in
push
cltd
jae
or
mov
push
dec
test
icebp
loope
rolb
inc
mov
arpl
lcall
les
jle
les
inc
rcll
jmp
adc
movsb
leave
dec
jecxz
scas
sub
pop
shl
fdivp
adc
iret
dec
dec
sbb
sbbl
hlt
sbb
push
pop
repnz
push
add
pop
addr16
mov
jle
cmp
pop
in
sbb
mov
iret
xchg
mov
push
leave
cld
pop
fmuls
mov
icebp
cmpl
into
mov
inc
pop
mov
and
adc
ficompl
scas
shlb
out
sub
out
jo
sub
xchg
pop
insl
pop
push
js
adc
repnz
jg
iret
out
lods
pop
lods
pop
mov
xor
sub
dec
jmp
cli
cwtl
dec
jne
push
roll
sub
dec
cmpsb
repz
pop
pop
dec
pop
daa
idivl
stos
lea
mov
leave
cmpsl
mov
inc
nop
leave
adc
xchg
dec
lahf
push
arpl
pop
lods
nop
ror
cltd
mov
adc
jnp
aad
daa
pusha
lods
xlat
and
xchg
and
jnp
pop
xchg
add
mov
and
rorb
in
xor
xlat
adc
int
inc
and
fs
mov
fs
xchg
and
pop
push
and
xchg
pop
pop
aas
mov
sub
mov
xchg
scas
mov
xchg
dec
mov
jo
dec
call
ds
jmp
in
out
cwtl
cmpsb
test
and
push
loopne
add
pop
adc
sti
ja
rol
daa
xor
icebp
lock
or
mov
adc
test
ficoml
arpl
repnz
mov
loop,pt
inc
dec
xlat
push
or
repz
sub
pop
mov
jge
inc
ja
jecxz
sub
sahf
mov
call
mov
pop
aas
mov
push
mov
cli
mov
inc
decl
cmp
push
and
jge
cmc
or
mov
push
sbb
mov
lret
test
mov
subl
pop
mov
icebp
lock
bound
lea
test
fnstenv
loopne
sbb
test
mov
xchg
push
xor
lret
int
js
and
je
add
addb
movsl
ljmp
mov
bound
jle
in
pop
stos
outsl
jmp
insl
mov
inc
repz
mov
or
fdivs
push
xchg
mov
mov
mov
pop
pushfw
out
mov
adc
mov
loope
jb
pop
enter
lods
adc
xor
inc
je
sub
ljmp
cmp
sbb
movsl
repz
lods
insl
dec
mov
movl
ficoml
lds
into
out
mov
int3
push
mov
mov
mov
sbb
pop
lcall
lods
cmc
mov
pop
mov
rol
or
inc
test
imul
xlat
faddp
out
mov
adc
sub
mov
repnz
shl
pop
inc
sahf
dec
imul
mov
pop
jg
mov
sbb
test
xor
sbb
mov
pop
mov
or
xchg
cmp
adc
adcl
pop
pop
pushf
lahf
cmp
ds
lods
mov
push
pop
and
jecxz
push
icebp
pop
xchg
fs
es
push
xchg
popf
sarb
mov
outsb
test
sub
dec
stos
aas
push
pushf
roll
xlat
mov
or
push
push
imul
enter
daa
mov
rcl
or
sbb
or
push
push
and
mov
dec
in
lods
or
nop
leave
push
es
jo
or
or
aas
mov
sbb
mov
cli
aaa
out
in
fiadds
inc
nop
dec
add
gs
jp
fcmovbe
fisttps
fwait
outsb
popf
outsl
test
daa
inc
in
sahf
cmc
jp
dec
xor
pop
sbb
cmc
dec
sub
push
adcl
jo
push
outsl
stc
xlat
cmc
loope
je
nop
mov
lods
popf
mov
nop
mov
js
out
rdmsr
push
cli
xor
pusha
mov
shr
lock
test
fisubrl
adc
rcrb
xor
push
jne
addr16
imul
pop
jo
test
mov
test
jne
cli
cmp
push
or
cmp
lcall
lock
sub
in
cmpsl
out
inc
pop
outsb
in
jp
test
mov
adc
in
sub
pop
rcll
xchg
cld
nop
jl
jl
mov
xchg
sub
stc
xor
int
test
xlat
adc
rcll
mov
pop
andb
mov
dec
imul
and
cmp
inc
aam
adc
loop
insb
gs
cmp
sub
fnsave
popa
sbb
ja
test
in
mov
dec
or
xchg
jecxz
cli
fdivrs
leave
sbb
hlt
add
int3
cwtl
nop
popf
cmp
dec
inc
mov
into
xchg
out
cmp
aas
xlat
jge
adc
les
jg
sarl
inc
cmc
cmp
lds
xchg
add
push
addr16
mov
cs
xor
pusha
pop
aaa
fnstsw
sbb
mov
aad
stos
pop
fists
sbb
js
mov
push
sub
or
popf
std
ljmp
xor
int3
jbe
sbb
int3
and
jns
movsl
imul
xor
inc
or
sbb
xchg
nop
dec
aas
es
push
sahf
sbb
enter
sbb
cmp
insl
aam
daa
cmp
push
inc
or
jl
add
in
rcr
xchg
pop
push
rorl
push
call
push
aaa
push
dec
mov
outsb
and
call
shlb
dec
mov
add
lcall
call
pushf
test
push
and
push
sbb
pop
dec
aam
lock
adc
in
sub
jnp
sub
aam
js
imul
stc
lahf
gs
and
mov
popf
mov
jno
jmp
lcall
daa
pop
idivb
fwait
xor
or
mov
out
xchg
subl
fmuls
scas
out
pop
add
jg
adc
inc
fs
cmp
insl
subl
out
loope
movsl
sbb
dec
dec
xor
cmpb
sbb
pushf
lods
test
repnz
mov
dec
inc
arpl
pop
add
jmp
fisubrl
jnp
icebp
lahf
les
out
dec
outsb
test
jns
adc
popa
lcall
mov
mov
xchg
jl
stos
lahf
mov
or
imul
jne
out
les
xor
adc
fmull
popa
les
repnz
ror
or
stos
inc
in
fistl
pop
in
stos
setae
fldenv
addr16
jg
sub
outsb
pop
insl
jnp
or
das
rcr
in
sub
inc
lret
ret
loopne
or
xlat
daa
adc
mov
or
cmc
imul
or
subl
popf
mov
lret
inc
inc
loop
jo
mov
imul
xchg
sar
imul
rolb
fstl
or
mov
lock
sbb
int3
iret
mov
cs
into
ljmp
pop
int
push
out
inc
push
jle
cmpsl
test
cli
ljmp
cmp
pop
jnp
dec
nop
xchg
ds
fildl
add
addr16
std
or
cmpsl
cmpsl
or
pop
out
inc
ja
and
mov
pavgw
pop
dec
fwait
pop
sbb
dec
mov
in
repz
mov
xor
in
mov
push
adc
pmulhuw
and
mov
xchg
gs
xor
js
lret
lock
out
cmp
cs
fisubrs
inc
sub
mov
lds
pop
sbb
dec
in
loop
pop
fldcw
xor
aad
out
jmp
fnsave
fildll
fildl
mov
mov
and
xor
xchg
stos
lods
ja
pop
inc
mov
aad
lods
add
lea
mov
bound
inc
push
sbb
dec
mov
int
push
leave
push
or
xchg
divb
movsb
jge
imul
rclb
orl
fsubl
dec
rolb
pop
mov
xchg
mov
in
dec
cwtl
inc
lcall
pushf
dec
mov
gs
bound
data16
mov
push
push
mov
into
repz
adc
pop
pop
out
jg
popa
lret
mov
jmp
sbb
inc
scas
rorb
ja
lret
inc
or
dec
xor
push
xchg
pop
test
xchg
mov
lret
xchg
and
or
jmp
test
hlt
xor
push
xchg
aam
fs
push
push
push
add
call
push
insl
arpl
ficoml
dec
push
mov
test
mov
mov
mov
cmp
push
sub
dec
movsb
sub
dec
mov
xchg
xor
jg
sub
shlb
jg
lret
pusha
or
fldl
pop
xchg
ja
pop
mov
movsl
loop
fisttpl
scas
shll
in
mull
fs
mov
mov
loop
mov
add
cmp
stc
in
repnz
fsubl
add
movsl
negl
leave
lcall
fs
decb
pushf
xor
dec
sarl
add
add
mov
adc
dec
sti
inc
in
leave
cltd
sahf
inc
push
jns
lock
jnp
out
xchg
push
clc
or
out
jmp
or
outsb
mov
lods
test
cmpsl
adc
xlat
xor
push
xlat
stc
lret
push
adc
outsb
mov
mov
pop
mov
inc
inc
and
rorb
fidivl
outsb
inc
stos
xchg
cwtl
add
cmp
jb
inc
lods
sub
js
shll
ret
fcomps
mov
lea
xchg
enter
clc
orl
push
rcll
lret
jle
and
cmc
fsub
jb
adc
fs
mov
mov
xor
out
test
mov
test
lcall
arpl
mov
xor
js
in
insl
movb
xchg
call
jecxz
mov
shll
push
dec
aaa
int3
inc
mov
aad
xor
pop
mov
jmp
dec
mov
adc
je
sbb
cmp
jmp
int
mov
dec
pusha
stos
mov
xchg
icebp
imul
or
mov
jo,pt
les
mov
shrb
rcrl
call
sbbl
push
xorb
loope
ret
hlt
sar
fnstsw
push
es
push
and
das
adc
jnp
lret
mov
jne
cmc
leave
pop
pop
test
std
mov
cmp
push
gs
cmpsl
adc
and
inc
jo
mov
pop
in
hlt
fstl
pop
movsb
xchg
bound
sbb
mov
xor
repz
mov
into
dec
and
popf
gs
mov
rolb
mov
mov
ret
jns
and
frstor
and
fdivl
aam
jg
pop
push
ds
out
repz
aas
daa
loop
mov
call
bound
pushf
cwtl
dec
xchg
and
adc
roll
pop
repnz
inc
xchg
mov
pop
loopne
cmp
jle
icebp
pop
aam
or
test
jmp
adc
leave
psrld
scas
dec
add
scas
lods
mov
xchg
clc
fnstsw
ljmp
call
mov
sti
hlt
cmp
pusha
iret
mov
add
pop
cmp
pop
lahf
popa
shll
out
inc
jne
pop
mov
xchg
dec
sti
push
movsb
or
lods
sub
or
add
dec
push
test
mov
xor
movsb
sub
jb
xchg
loop
inc
and
rol
fisubrl
mov
shlb
push
pop
dec
lahf
xchg
in
out
cltd
mov
std
mov
into
add
jecxz
and
and
mov
mov
sub
lcall
out
out
addb
clc
inc
ljmp
fisubs
jp
add
jecxz,pn
adc
push
leave
or
push
js
jbe
ret
mov
jae
mov
pop
cmpsb
gs
or
ficompl
test
mov
movsb
sbb
push
cmp
push
pop
pop
stos
orb
lahf
jecxz
sbb
pop
loop
mov
lock
xor
jge
mov
movsb
scas
sub
inc
xchg
mov
in
inc
mov
or
inc
ret
pop
xor
ja
pop
dec
adc
mov
sti
in
fimuls
popa
jmp
ds
cmc
xlat
mov
faddl
xor
pop
or
inc
ja
icebp
or
pop
daa
movsl
rcrb
imul
xor
mov
fsubs
xchg
sbb
test
cmp
mov
inc
and
pop
push
or
aam
shll
jmp
enter
cmpsb
ret
aam
sarb
jg
popa
shll
sub
mov
push
adc
sub
movsl
test
jecxz
adc
xchg
dec
push
mov
xor
je
orl
iret
jle
mov
inc
xchg
lea
jmp
test
add
push
mov
push
daa
idiv
int3
push
pop
jno
mov
push
cmp
divb
push
es
mov
lea
lcall
mov
sbb
mov
inc
sahf
push
cmp
int
pop
lods
aaa
xor
jmp
cltd
jge
or
jl
pusha
and
jp
xchg
cs
dec
jmp
dec
repnz
xchg
pop
cli
sub
sar
add
ret
mov
fstpt
mov
outsl
push
and
add
or
hlt
push
cltd
cmp
lret
sahf
xchg
ret
stos
shlb
hlt
nop
add
fistpll
pushf
xchg
mov
outsl
xor
std
aam
xchg
mov
push
out
mov
jl
rcr
scas
sbb
push
xchg
adc
dec
adc
sahf
lahf
add
decb
subl
outsb
loop
adc
inc
adc
jnp
pop
stos
test
sbb
or
lods
into
push
jg
scas
or
cmp
cltd
or
dec
call
xchg
mov
popa
sahf
fimuls
addr16
fsubl
xchg
mov
arpl
das
std
xchg
flds
aas
adc
movsb
shr
aad
adc
jg
and
cmpsb
gs
sub
mov
loope
sbb
or
and
test
mov
push
push
ja
and
adc
in
cld
lea
dec
push
data16
push
iret
jg
cmp
or
sbb
nop
hlt
sarb
mov
scas
dec
lds
vunpcklps
test
jl
ret
push
sarb
out
sub
addr16
cmp
push
pop
xor
imul
imul
mov
mov
push
sub
fdivrl
push
shlb
mov
xchg
add
mov
imul
loopne
rorl
mov
push
mov
lods
dec
push
cmp
or
mov
dec
jne
mov
mov
cltd
fmuls
inc
in
mov
std
pop
push
shrb
fwait
cwtl
mov
jmp
adc
shrl
adc
fisttpl
push
and
fdivrs
and
fs
push
dec
cmpsl
imul
mov
testb
add
cmp
dec
and
jae
mov
jne
stc
push
test
adc
rclb
mov
pop
push
push
sbb
lods
pop
jne
sti
daa
cld
or
adc
scas
ret
jo
sbb
xchg
scas
push
adc
cld
stc
int
enter
push
cmpsl
push
push
mov
iret
loopne
addr16
rorl
pop
rorl
scas
mov
cwtl
pop
outsb
mov
sub
outsl
sahf
xchg
nop
pop
dec
or
or
xchg
pop
loopne
mov
out
rcr
sarb
ds
push
jnp
jno
sbb
adc
sub
push
jae
imul
aam
fisubrs
mov
fnstenv
arpl
or
add
jno
out
repz
and
dec
jge
imul
insb
cltd
je
adc
nop
lods
mov
dec
xlat
insb
or
les
pop
add
ss
jecxz
add
cltd
leave
xchg
push
data16
in
dec
sub
int3
paddd
adc
mov
push
cmp
dec
xor
cmpsl
or
xchg
adc
loopne
popf
mov
sbb
xchg
aam
repnz
xor
test
dec
push
pusha
pop
in
ror
xchg
rcrl
stos
sbbb
repnz
xor
sub
pop
cmpsl
cwtl
xor
xchg
pop
scas
pusha
sbb
fisubrl
sub
fildll
loopne
jge
lcall
ret
sarb
inc
in
mov
ret
push
push
data16
mov
push
or
cmp
pop
cmp
movsl
jno
fisubl
inc
repnz
das
movsl
push
adc
inc
pop
cld
int
mulb
pop
shrb
sbb
jno
xchg
addr16
fdivrs
outsl
pusha
add
addr16
push
in
adc
or
inc
shl
jmp
das
mov
pop
adc
hlt
lock
shl
movsl
push
adc
mov
xor
cmp
cmp
push
or
push
loopne
adc
jge
dec
cli
fldt
les
fwait
rolb
pop
leave
xchg
add
or
mov
cmpl
jns
divl
lods
inc
dec
cmp
cmpb
inc
insl
push
adcl
jmp
lods
mov
leave
repz
sub
jp
cmp
imul
hlt
push
xchg
inc
push
pop
shll
mov
fistpll
sbb
aad
jno
jp
dec
mov
push
xchg
mov
cmp
jne
int
jbe
in
in
lods
cmp
mov
cmpl
sbb
and
mov
fisttpll
test
shr
iret
xor
je
movsl
fildl
fwait
sbb
adc
push
pop
sub
push
dec
rorb
dec
fsub
cmpsb
xchg
cli
nop
int3
aam
hlt
jae
push
sub
ljmp
jge
pushf
lods
imul
adc
movl
stos
in
ljmp
stos
push
push
cmp
cwtl
pop
data16
add
stos
shl
sub
pop
cwtl
sbb
pop
sbb
out
pop
aaa
push
aaa
imul
lahf
jo
push
loope
jbe
mov
jb
das
push
aas
dec
push
mov
adc
xor
pop
addr16
clc
adc
dec
mov
or
dec
fstps
cmp
and
pop
jns
inc
aam
adc
add
dec
add
adc
shlb
adc
xchg
sbb
xchg
aad
out
pop
bound
loop
sub
jecxz
jae
pop
aam
aad
pop
dec
jle
iret
in
bound
jae
pop
je
or
stos
aam
cmp
sbb
xor
pushf
xchg
pop
mov
cmp
cwtl
lods
stos
or
inc
aas
xor
push
fsubrl
mov
inc
lret
inc
jle
jo
jo
dec
pop
shll
xor
repz
mov
mov
sbb
out
nop
cwtl
or
cmpb
mov
push
inc
jne
jle
ss
stc
cltd
arpl
pop
inc
lock
arpl
mov
and
ret
xchg
pop
rcr
arpl
push
jmp
cmc
loopne
ja
call
pop
std
mov
lock
aad
sub
sub
jnp
xchg
jne
pop
fcompl
test
clc
xchg
fldl
sbb
mov
mov
or
adc
dec
insl
pop
insb
push
and
jl
dec
lods
dec
aam
xor
xchg
jnp
pushl
out
dec
lods
enter
gs
and
mov
push
fcomps
insl
cmp
bound
jo
mov
adc
mov
push
sub
in
in
ret
sbb
jnp
es
fwait
push
xor
ss
loope
bsr
inc
xor
fwait
popa
jo,pt
sahf
loopne
loop
cmp
mov
lods
add
rcrb
stos
roll
loop
mov
or
cmpl
pop
dec
in
les
xchg
lcall
mov
cmp
out
out
std
add
icebp
mov
das
and
pusha
aaa
test
and
add
icebp
inc
dec
loope
fildl
dec
insl
mov
daa
pop
jg
push
xchg
cmpsl
sub
mov
mov
inc
push
mov
jge
sarl
xchg
pushf
out
pop
mov
bound
xor
add
mov
pop
jl
mov
lock
adc
orb
or
push
or
test
cwtl
dec
repnz
cmpsb
stos
stc
testl
lret
orb
xchg
xor
push
mov
push
fsubr
xor
leave
mov
insb
movsb
or
mov
cltd
shll
and
dec
push
cmp
sub
mov
jb
mov
sub
out
dec
daa
cmpsl
push
xor
std
pop
rcrb
sbb
sbb
adc
test
data16
or
clc
test
scas
or
popa
stc
mov
jg
dec
sub
inc
outsl
mov
rcrl
iret
cmp
mov
enter
inc
movl
jbe
and
shrl
and
js
and
lds
jmp
out
sarl
sbb
adc
inc
mov
or
mov
aas
lods
dec
das
fldz
mov
mov
push
inc
push
arpl
aam
shll
leave
fildl
adc
xor
dec
in
adc
add
bound
aas
mov
mov
push
xchg
sub
nop
out
inc
dec
dec
ret
lock
lods
roll
stos
outsl
enter
pop
rcrl
mov
lods
loope
sub
stc
rorb
out
fnstenv
lock
mov
mov
dec
movsb
outsb
mov
cmp
dec
mov
test
mov
loop
ss
insl
inc
faddl
jp
xor
pop
dec
xchg
jge
push
mov
inc
dec
xor
mov
jmp
adc
mov
iret
ret
enter
and
jmp
iret
xchg
dec
in
test
add
je
imul
lcall
push
and
inc
mov
mov
xchg
and
in
sahf
push
shl
mov
stos
push
in
sti
add
mov
pop
icebp
scas
shl
pop
imul
push
or
sahf
in
add
movsb
pop
jns
sbb
lret
movsl
jne
call
mov
mov
lock
sti
fxch
rolb
and
out
xor
jl
stos
sahf
decb
sbb
xor
loope
out
pop
and
jmp
dec
imul
jle
aad
or
int3
push
into
lds
xchg
mov
out
push
dec
in
repnz
int
mov
push
push
pushf
lds
mov
enter
push
lods
mov
mov
in
ret
xor
xor
popf
jae
sub
xorl
sub
sub
das
pop
cmp
stos
mov
outsb
rcll
push
js
stos
aad
ds
push
ljmp
cmp
adc
daa
imul
cli
push
mov
gs
adc
test
mov
or
add
in
out
inc
sbb
arpl
popf
addb
into
and
into
in
lahf
mov
lods
fstpt
aam
mov
cli
cs
out
sbb
cltd
add
cmovge
hlt
mov
jp
inc
ror
ds
mov
mov
mov
jmp
mov
push
push
sbb
sub
jb
in
adcb
ffree
jp,pt
sbb
stos
out
pop
into
adc
push
iret
out
adc
iret
nop
push
lret
cld
push
lret
sbb
sbb
int
aas
pusha
xor
outsl
pushf
xor
stc
daa
subl
lret
popa
jle
xor
pop
in
leave
xchg
clc
or
push
into
or
in
call
dec
cltd
leave
lods
dec
push
ja
iret
hlt
std
adc
call
pushf
lea
ss
movsl
inc
ja
cwtl
xchg
xorb
dec
add
imul
cmp
xchg
jns
sbb
loopne
inc
mov
jo
lea
adc
stos
inc
cmp
insb
inc
mov
out
cmpsl
and
icebp
jno
shl
inc
dec
mov
jno
stos
outsb
mov
dec
xchg
mov
push
add
push
pop
cmpsl
std
sub
inc
sbb
js
in
add
add
inc
mov
fsubs
in
jae
or
pop
or
and
inc
loopne
jp
push
movsl
fwait
lahf
scas
xchg
fidivl
inc
xchg
sbb
inc
orl
cwtl
test
dec
ljmp
outsb
cmp
mov
in
shlb
xlat
les
mov
jg
ds
in
jmp
add
inc
addr16
int3
jbe
push
icebp
mov
cmp
mov
addb
mov
pushf
aas
sti
and
aam
or
cmpsb
and
ret
adc
add
enter
data16
test
or
sbb
es
xchg
repz
xor
fists
mov
sahf
dec
dec
sbb
inc
das
add
mov
cmp
sbb
sub
fwait
lahf
push
and
insl
mov
into
jmp
cmp
out
cs
inc
nop
aad
imulb
inc
jle
inc
mov
insl
pop
xchg
aas
inc
sub
sbb
arpl
lret
jnp
out
jp
push
adc
icebp
cmp
add
in
push
sub
pop
push
push
test
xorl
cmp
lods
mov
lds
shlb
mov
jecxz
jge
movsb
aaa
inc
mov
xchg
xchg
ret
in
cld
xchg
mov
jno
imul
ret
ret
add
sbb
test
iret
pop
jo
fsubl
mov
push
and
leave
adc
inc
or
decb
mov
sbb
imull
ja
and
mov
andl
addr16
rcr
cmpb
movsb
rclb
push
xor
jns
push
outsl
xor
mov
stos
je
out
add
loop
sarb
iret
xor
mov
dec
and
out
dec
in
movsb
push
pop
mov
js
mov
or
mov
fistps
adc
and
sbb
movsl
fcmovnb
andl
rcrl
jae
xchg
mov
fwait
in
jo
lcall
push
mov
push
and
sbb
pop
das
arpl
imul
lret
nop
fcoml
xor
aas
leave
lds
sbb
xor
enter
xor
sub
mov
pop
push
int
loop
std
stos
sub
pop
sbb
pop
lods
jne
test
ss
les
daa
mov
int
xor
mov
iret
jb
jl
push
sbb
jbe
mov
pop
outsl
or
adcb
and
stos
mov
pushf
jne
stos
jecxz
aad
jno
add
add
mov
push
fstpl
sub
pop
inc
out
mov
xor
and
push
pop
xor
scas
mov
movsl
inc
stos
std
lret
hlt
jp
mov
push
movsb
xchg
jno
and
in
lea
aam
inc
lret
je
or
inc
mov
leave
pop
std
push
dec
outsb
out
xchg
mov
mov
pop
aad
fidivl
sbb
iret
or
cmpl
das
push
inc
inc
pusha
inc
movsb
jmp
mov
in
pop
stc
inc
cmp
imul
das
lret
sub
mov
or
cmpsb
ljmp
mov
xchg
mov
push
xchg
dec
fldenv
xchg
iret
test
popa
jne
insl
ja
mov
ret
xchg
lods
mov
and
cmp
gs
mov
in
dec
mov
mov
pop
mov
lds
sub
push
in
cmc
inc
aad
outsb
in
ret
sbb
pop
cmpsb
inc
shll
jmp
inc
in
scas
cmp
pop
cmpsb
add
jp
aaa
cli
inc
xor
repnz
loope
push
cwtl
cmpsl
adc
outsb
shlb
xor
adc
inc
xlat
pop
lods
xchg
mov
xchg
repnz
je
leave
lret
ljmp
xchg
movsl
or
cmpsl
popa
push
mov
psubq
xor
call
xor
lret
mov
stos
loope
lret
in
jle
in
pop
jnp
stos
jmp
cmp
or
lcall
sti
add
leave
andl
pop
and
xorl
sub
imul
call
xchg
sbb
in
in
cmp
mov
and
xor
push
addl
mov
test
orb
add
mov
dec
mov
inc
or
rorb
cmpsl
sbb
mov
jmp
jecxz
jecxz
push
add
sub
aas
icebp
aam
test
xchg
mov
ret
mov
shrb
icebp
xorb
xlat
add
lcall
mov
mov
daa
test
lods
dec
inc
sub
xchg
and
sahf
or
sbb
int3
or
outsl
cmp
jmp
loop
pop
lods
adc
lock
inc
imul
or
sahf
inc
pop
shrb
scas
jg
mov
ss
add
adc
in
fisubrl
push
mov
fidivs
jp
push
cwtl
sub
jnp
fmuls
mull
mov
loop
in
cli
cld
jnp
push
pop
jnp
xlat
and
mov
cmp
xchg
es
or
ficomps
pusha
add
test
cmp
out
inc
pusha
mov
jmp
sbbl
and
aam
stc
adc
add
sbb
scas
insb
xchg
add
aam
aas
pop
push
sbb
out
lret
adc
aaa
pop
xchg
dec
test
call
clc
adc
jle
pop
mov
icebp
mov
mov
and
sbbb
pop
jg
inc
ljmp
aas
push
xchg
mov
and
stos
stc
stc
fwait
sbb
ds
sbb
sub
rcrb
sbb
loopne
mov
ret
sbb
dec
icebp
hlt
divb
xchg
cmpsl
pop
inc
popa
and
xor
xchg
xlat
hlt
cmp
adc
cmp
jns
outsb
lods
push
inc
into
pop
pop
and
push
movsb
mov
and
stos
cmp
or
xor
push
xchg
pop
test
loope
test
mov
flds
cmpsl
pop
ret
mov
xchg
or
mov
out
dec
pop
or
icebp
push
xchg
xchg
jp
aad
aas
xchg
pop
xchg
bnd
add
jb
and
fsubrs
jp
loop
push
fnstenv
fistps
or
jle
mov
dec
mov
ret
sbb
sub
push
xor
outsl
lcall
sub
gs
stc
fsubrs
aaa
adc
mov
push
ljmp
aad
mov
adc
and
mov
jmp
pop
jp
and
xor
sti
pop
pop
in
int3
in
inc
xor
aam
aaa
sbb
and
adc
mov
sbb
fsub
xlat
stos
pusha
mov
push
mov
cmp
fcomip
lret
fnstenv
mov
scas
cmp
fdivrp
push
xor
sti
sub
dec
xchg
mov
push
leave
mov
sbbb
popf
lods
mov
cmpsb
add
leave
sbb
stc
cld
dec
loope
loope
lret
aad
sbb
scas
xor
mov
xor
outsl
mov
push
mov
stc
xor
xchg
cmp
jmp
das
hlt
xor
leave
int
aaa
call
mov
cmpsl
test
ret
jle
mov
fidivl
xchg
leave
call
fidivl
xor
sub
mov
pop
sub
nop
xor
mov
mov
mov
xor
adc
int
mov
lds
adc
xchg
gs
mov
mov
insl
lea
adc
jnp
test
cs
loopne
cltd
sbb
add
mov
pop
mov
push
mov
jp
xchg
ret
in
js
gs
out
iret
sbb
ret
ss
cmp
xor
mov
in
inc
push
mov
shll
dec
aas
sbb
pop
insl
or
arpl
and
dec
add
imul
cmp
fs
ja
clc
xlat
sub
aas
dec
adc
push
xorb
sbb
sub
cmp
add
scas
push
mov
pop
xor
sub
cmp
inc
stc
rcrl
orb
rorb
xchg
sbb
stos
lods
in
add
add
add
jb
pop
jno
inc
sub
push
call
pop
and
mov
sarl
push
xor
adc
mov
int3
cs
inc
jo
ss
lods
sub
dec
ds
imul
scas
mov
cmpsl
xor
ljmp
mov
repnz
add
push
fldl
push
push
jg
sbb
and
dec
jg
ljmp
mov
stc
sbb
lret
and
mov
stos
mov
lea
jl
sti
outsb
lds
lds
push
cmp
shlb
pop
dec
cmpsb
and
dec
ficomps
stos
leave
mov
jmp
lcall
inc
dec
push
std
das
ljmp
mov
jg
xor
ret
sahf
mov
or
in
lods
mov
jge
call
and
xchg
dec
jecxz
fsubl
es
push
fdivrs
shrl
push
add
bound
cld
xchg
cmpsb
pop
mov
xchg
push
rcll
cmp
sub
cli
lods
xor
push
push
xlat
mov
jge
push
aam
dec
xchg
add
push
mov
or
shl
mov
xor
int3
insb
sarl
mov
adc
nop
push
inc
jecxz
das
int
ja
push
aas
jl
pop
fninit
jp
inc
jmp
cmp
adc
mov
jp
mov
mov
lods
pop
mov
mov
xchg
arpl
out
adc
insl
xor
in
xorl
pop
sbb
clc
jmp
cmc
sti
pop
xchg
outsl
cmp
inc
loope
mov
jno
rcrb
adc
pop
js
mov
test
sub
xor
pusha
mov
mov
divb
leave
imul
sti
je
int3
ret
clc
ds
jo
mov
mov
in
cmpsb
pop
xchg
mov
adc
or
inc
insl
cmp
inc
loopne
insl
lret
jbe
mov
push
lods
int3
xchg
jae
push
sub
mov
inc
push
movb
leave
repnz
aaa
adc
or
notb
sahf
push
jne
adc
push
loopne
aaa
mov
adc
fiadds
and
bnd
cmp
sbb
and
fcomps
mov
mov
mov
push
mov
in
cmpsl
inc
jbe
ds
arpl
std
dec
dec
jge
clc
enter
ret
mov
lods
jle
add
gs
xchg
test
enter
pop
pop
dec
fdivrs
xchg
pusha
lret
shlb
xchg
and
add
lret
pop
movsl
pop
je
push
hlt
adc
inc
and
and
popf
xor
or
out
inc
pop
ret
xchg
in
fwait
in
pop
js,pt
cmpb
cmp
or
fwait
add
cwtl
insl
push
mov
mov
or
cmp
scas
outsl
dec
dec
test
push
orl
add
push
cmp
jge,pt
dec
lahf
adc
shrl
cs
bound
push
dec
ucomiss
mov
sarb
enter
bound
test
inc
xor
sub
jne
ret
mov
js
pop
test
jne
repnz
xor
popl
cmp
int3
inc
jne
xchg
ret
add
fwait
loop
xchg
cmp
int3
rcrb
stc
fildll
popa
dec
push
int
add
and
or
ja
pop
mov
xor
add
pop
repz
aas
adc
fbstp
popa
pop
pop
and
xchg
or
lods
shl
push
sub
jmp
jecxz
orb
push
cmc
test
out
push
fiaddl
add
sbb
mov
sub
push
scas
add
js
pop
sti
xor
sbb
sbb
in
jecxz
push
sbb
lds
lcall
xchg
sub
aam
xor
add
push
ja
add
inc
dec
adc
je
stc
push
mov
dec
rcl
sub
jns
ds
mov
push
addb
cmp
xor
adc
pop
and
das
pop
mov
cld
mov
add
inc
jp
jb
stc
imul
rep
mov
and
sti
sub
fs
leave
xchg
stc
lods
out
mov
cmp
es
lahf
jb
sbb
fistps
les
lahf
outsl
nop
aas
sub
push
inc
mov
adc
insl
rcll
mov
pop
lea
mov
ret
subl
sub
fstpt
aad
mov
mov
insl
push
xchg
xchg
lret
cld
cmpsl
out
xchg
push
jle
mov
lahf
adc
gs
sbb
dec
aas
jge
jbe
mov
cmp
dec
xlat
jg
xchg
mov
mov
sub
ja
mov
pop
sbb
das
aaa
lret
pop
add
pop
xor
loopne
jl
in
mov
and
movsb
mov
ss
arpl
add
les
arpl
imul
insb
scas
cmpsl
clc
mov
rcrl
adc
pop
xor
cmp
dec
shll
mov
adc
push
int3
popa
hlt
outsl
pop
pop
out
test
mov
nop
nop
ss
sub
mov
ret
iret
repz
fcom
divb
pop
dec
mov
sub
pop
push
xchg
xchg
push
or
jnp
pusha
test
add
in
xchg
jnp
fimuls
jp
xchg
mov
lcall
mov
sti
push
pop
sbb
push
imul
pop
sahf
loope
add
xor
pop
push
pop
add
mov
lret
scas
push
loope
std
outsl
push
int
mov
mov
outsb
and
pop
icebp
movsl
jnp
mov
data16
stos
lret
fldt
jle
loopne
inc
jecxz
jmp
add
aas
addl
pop
cmp
mov
mov
jg
pop
stc
test
pop
test
mov
pushf
jae
and
in
aas
mov
push
add
mov
pop
je
sub
jo
dec
mov
or
xor
lahf
into
mov
pop
mov
jl
cli
das
and
out
sbb
test
sti
xor
pushf
cmp
pop
int
test
sarl
xchg
xchg
adc
incb
pop
hlt
sbb
inc
rclb
int3
movsb
mov
jge
pop
mov
pop
inc
mov
shll
divl
mov
and
cwtl
imul
xor
js
jg
mov
pop
mov
inc
andl
push
xor
sbb
out
test
inc
pop
xchg
test
mov
test
stos
pop
test
adc
fmull
sbb
mov
xor
push
loop
aaa
fcmovne
scas
push
outsl
mov
inc
jae
mov
ja
jl
adcl
pop
cmpsl
xchg
and
pushf
imul
adc
sbb
push
mov
mov
inc
sbb
ficoml
imul
sbbb
xchg
jo
mov
jg
aaa
sub
lods
lret
push
or
les
insl
dec
test
data16
aaa
and
je
add
fdiv
cli
cmpb
mov
aaa
push
xor
imul
jmp
inc
lret
subl
add
xchg
jl
sbb
xchg
hlt
insl
dec
out
pop
cmp
xor
push
fwait
mov
imul
jmp
in
std
sbb
jl
adc
mov
test
pop
fistpl
push
out
movsb
mov
push
aad
daa
dec
push
sub
inc
mov
dec
adc
dec
outsl
xchg
lahf
stos
lods
test
nop
xchg
mov
fdivrl
js
subl
inc
dec
sub
sub
sbb
push
push
scas
aad
scas
rol
dec
push
std
aaa
scas
inc
push
push
jl
xor
dec
inc
xor
mov
fdivs
add
mov
adc
cmpsl
mov
cmp
lods
or
add
rcll
addl
cmpsb
or
ja
insl
xor
adc
jne
andb
stos
jp
jns
fisubs
orb
mov
das
divl
lods
loopne
mov
mov
ljmp
adc
movsl
xchg
xchg
and
push
sbb
lock
and
jmp
jp
ss
adc
fnstsw
loopne
cmpb
sub
cli
je,pn
hlt
sub
stos
loopne
jle
adc
sbb
testb
mov
pushf
cmpsb
mov
aaa
jg
push
push
std
inc
aam
xchg
repnz
xor
mov
inc
mov
ds
pop
mov
std
loop
push
mov
gs
iret
mov
loop
xor
sub
push
mov
out
jae
xor
cmp
pop
call
lock
out
cmp
ljmp
add
in
imul
sub
jmp
sahf
data16
ljmp
xor
ds
scas
inc
mov
inc
xor
xchg
ja
mov
xor
xchg
test
cltd
and
movb
jp
mov
mov
adc
inc
mov
mov
mov
mov
pop
testl
cmp
into
sbb
push
push
cli
imulb
add
and
fcoml
cmp
test
loope
pop
fwait
loop
xchg
mov
mov
mov
xor
insb
int3
add
dec
mov
adc
sub
dec
mov
pop
jg
into
lahf
cmp
inc
mov
cmp
mov
fldl
pop
ds
int
jge
and
inc
lods
or
mov
movsb
je
in
mov
jno
mov
in
dec
shlb
push
jl
adc
ja
vpsllw
mov
mov
jnp
dec
test
int
dec
dec
sub
stos
mov
popf
bound
dec
cmpsl
jmp
adc
cs
jl
bound
popa
sarb
fsubr
jge
add
lock
fucomi
shl
cmp
push
sbb
sub
stc
popa
outsb
dec
add
jl
pop
adc
cmp
and
push
loop
fsub
push
jmp
movsl
xor
jge
push
push
dec
jno
xor
inc
nop
dec
push
mov
ss
fs
mov
sti
pop
cmpsl
adc
fs
add
and
pop
mov
test
inc
insl
dec
aad
cmp
mov
cmpxchg
daa
mov
dec
mov
shr
mov
icebp
scas
mov
les
sub
fisttpl
bound
lret
and
fidivrl
cli
xchg
ret
repnz
dec
push
shl
xchg
push
push
fcmovb
cs
dec
sbb
scas
repnz
inc
cmp
aad
adc
cltd
sbb
mov
cmp
or
sbb
cwtl
jo
out
dec
imul
jbe
scas
mov
sub
add
decb
inc
pop
sub
fldenv
cmpsb
pop
mov
scas
push
jnp
loop
imul
outsb
xchg
test
popf
inc
addr16
dec
mov
add
shl
dec
test
sti
cmp
and
lods
lock
stos
dec
out
je
sbb
mov
pop
dec
mov
dec
or
jl
jl
and
cwtl
stos
ror
push
xchg
cld
sti
outsl
outsb
push
lret
add
mov
xchg
in
es
ficomps
xor
add
dec
pop
mov
ss
scas
popa
jnp
sahf
mov
mov
jmp
movsb
rclb
test
gs
cmpsb
inc
repz
jb
and
push
repz
push
adc
dec
cmp
dec
pop
inc
and
orl
dec
iret
inc
out
jp
and
cltd
push
pop
stos
arpl
scas
mov
lahf
movsl
adc
xlat
loopne
pusha
jle
adc
shlb
pop
fldl
and
add
jg
jae
fnstenv
jo
mov
mov
ljmp
dec
and
or
add
jecxz
dec
mov
mov
mov
ds
loopne
push
sbb
dec
cmp
and
cli
roll
test
xchg
in
dec
test
pushf
push
ret
mov
mov
xchg
bound
fyl2xp1
lcall
jg
sbb
add
aas
shlb
popf
push
or
xorb
xlat
jbe
adc
sub
adc
and
pop
cmp
fbld
in
cld
jecxz
pop
xchg
push
mov
xor
mov
int
nop
xor
adc
push
or
ljmp
jg
stc
xor
dec
mov
mov
sub
fcomip
adc
mul
mov
clc
lds
pop
repz
aaa
sub
adc
xlat
fwait
cmp
jns
sub
jnp
test
repnz
dec
pop
xchg
lea
push
pop
fnsave
lods
xchg
fcoms
xchg
mov
ds
dec
lcall
jge
mov
adc
inc
stc
sbb
bound
ljmp
dec
pop
xlat
fwait
loop
jno
fmuls
mov
inc
mov
dec
repnz
push
mov
jns
sbb
mov
lcall
ja
xor
daa
rcll
outsb
gs
and
sbb
insb
mov
popa
and
cmc
mov
cmpb
xchg
cld
push
cltd
inc
maskmovq
divl
jecxz
cwtl
or
pop
out
pop
or
push
sub
das
pop
pushf
pusha
arpl
js
scas
dec
pavgw
outsb
adc
sbb
fisubs
adc
out
fidivl
pop
fmull
test
dec
add
cmc
inc
cli
sbb
dec
lcall
imul
pop
pop
sub
push
repz
sbb
jbe
and
mov
loope
jae
mov
push
inc
nop
mov
inc
loope
cli
lods
jge
add
scas
daa
shll
cltd
scas
jae
stos
enter
out
gs
stos
bound
lods
lods
adc
jge
sbb
adc
fbstp
push
aad
lcall
das
decb
adc
xchg
out
sub
push
out
aaa
inc
jp
inc
mov
out
push
in
sbb
movsl
lds
jge
mov
mov
fiadds
lods
jbe
lds
ret
mov
test
pushf
add
outsl
inc
icebp
lahf
fsubl
fstps
mov
add
fdivrl
mov
jo
mov
add
mov
andb
dec
je
inc
sub
aas
notb
dec
aam
pop
popf
mov
sbb
pop
repnz
and
dec
loop
lods
mov
and
pushf
mov
in
in
sti
push
ret
scas
sub
or
out
jmp
mov
sbb
nop
mov
rcrl
dec
jnp
movsl
and
sbb
cmp
xchg
lods
mov
daa
sti
pop
mov
ret
jecxz
lahf
or
out
xchg
or
push
adc
iret
aam
ja
mov
add
push
cmp
sbb
inc
inc
pop
jg
sti
pop
je
jbe
xor
mov
mov
iret
addr16
mov
mov
sub
push
cmc
pop
xchg
aad
or
in
ret
pop
rorl
sbb
test
sbb
int3
in
pusha
push
ffree
lahf
test
ret
mov
mov
pop
sub
add
rolb
inc
adc
rcrb
mov
dec
dec
adc
sti
xchg
cwtl
push
addr16
imul
xchg
and
rol
out
dec
inc
lock
je
xchg
out
sub
sbb
repz
test
insb
pop
popa
jb
pop
inc
lock
int3
fbld
xchg
lods
leave
dec
pop
push
cld
or
shlb
dec
test
lret
stos
mov
mov
jge
jg
mov
idivl
cmpsl
xchg
lret
pop
xor
fs
mov
imul
push
jle
popa
xchg
inc
in
sbb
xchg
xchg
xor
xchg
add
jle
inc
xor
out
inc
mov
nop
mov
pop
push
mov
dec
inc
xchg
and
mov
daa
sub
cmp
adc
push
out
jne
adc
xchg
sbb
push
rorl
mov
jp
aaa
sub
popa
hlt
cmp
pop
arpl
hlt
and
mov
ret
in
or
xorb
ja
mov
subl
ja
and
cmpsb
add
push
andl
adc
imul
xchg
adc
cmp
sbb
pop
push
pop
out
cmc
outsb
cmovb
daa
pop
jne
in
and
fcoml
sub
inc
cmp
cltd
clc
xchg
xchg
jle
mov
mov
sub
jno
add
push
xchg
xchg
pusha
sbb
cmpsl
rorl
xchg
scas
lock
bound
jge
mov
inc
mov
into
scas
cmp
repz
divl
mov
stc
pop
lahf
cmp
pop
inc
loop
ret
mov
pop
sub
sub
xchg
dec
lods
xchg
adc
or
movsb
or
mov
and
out
jb
mov
mov
mov
pop
and
cld
jmp
fcmovnu
mov
inc
and
jns
sbb
xchg
incb
sbb
push
pop
lret
int
adc
cmp
inc
imul
push
jae,pt
insl
mov
and
in
testl
ja
xchg
arpl
sbb
jmp
fstp
outsb
sub
sbb
cld
in
xchg
push
mov
push
das
sbb
lea
inc
js
popf
into
cmp
adc
jmp
or
loop
adcl
add
mov
sbbl
cmpl
aaa
add
int3
xor
mov
push
cld
jecxz
addr16
addr16
mov
add
pop
push
inc
ds
cmp
adc
xchg
ret
xor
daa
out
negl
mov
je
bound
in
es
imul
and
jae
movsb
pop
xchg
ja
in
sub
shl
cmpsl
xchg
fwait
pop
mull
and
jae
mov
adc
adc
push
sub
fidivrs
imul
in
jle
sbb
xor
rorb
insb
mov
in
lret
sbb
xor
pop
lret
or
loop
cmp
fwait
movb
lret
jnp
jns
add
pop
sarl
ret
test
xor
das
sbb
pop
sbb
push
mov
shrl
cltd
roll
fdivs
test
into
outsb
loop
lret
mov
hlt
xchg
hlt
icebp
jns
stos
js
out
jl
out
mov
loope
fstl
xor
jno
insb
xor
jecxz
cmp
testb
mov
inc
mov
cmp
lds
sbb
ja
inc
pop
sub
jge
mov
xchg
js
loop
not
jle
add
add
sub
icebp
dec
mov
iret
jge
inc
shrl
adc
icebp
xor
outsl
loop
mov
subb
stos
int
adc
lret
inc
aad
lods
add
ja
popa
jno
and
cmp
dec
xchg
xlat
push
shr
out
mov
jo
addr16
ret
xchg
mov
leave
insl
scas
mov
int
sti
cmpsb
dec
out
or
mov
push
aad
rclb
push
das
and
adc
cmp
stc
stc
mov
in
in
mov
sahf
lds
mov
add
lahf
sub
mov
addb
das
inc
push
jo
inc
sbb
xor
sub
sub
ljmp
jmp
sbb
mov
cmp
pop
push
cmp
inc
push
popf
sbb
std
sti
add
adc
mov
and
inc
mov
jo
dec
lea
or
xchg
jne
pop
xor
xchg
fstpl
scas
rcrl
ret
stc
or
jns
movsl
jl
ret
pop
push
xor
or
ret
clc
pusha
mov
in
jg
xchg
cs
imul
add
rolb
jp
mov
dec
mov
icebp
jmp
push
dec
jnp
cmp
jecxz
movsl
cmpsl
xor
add
cmp
aad
sub
je
andl
aad
pop
push
inc
repnz
xchg
cmp
inc
pop
sti
in
daa
add
push
pushf
movsb
in
enter
xor
mov
sub
dec
fmuls
rorb
dec
mov
cld
pushf
pusha
fbld
in
outsb
or
leave
ficomps
das
lret
jmp
or
mov
pop
jmp
sbb
rorl
jno
sbb
dec
aaa
fimuls
call
push
push
jo
xor
scas
loopne
inc
push
or
call
jle
mov
sbb
out
sub
dec
or
push
addr16
inc
jecxz
cmp
push
testl
mov
xor
cmpsb
pop
inc
call
frstor
mov
sub
aam
sbb
sbb
pop
adc
out
xlat
in
fs
pushf
or
push
fdivl
test
mov
lea
jge
mov
sub
pop
cltd
pop
sbb
aas
hlt
out
int
fs
pop
fidivs
fiadds
sbb
and
fwait
sub
adc
gs
add
xchg
shlb
pop
cs
push
jne
mov
mov
mov
stc
jl
fstpt
mov
inc
cmp
pushf
rolb
cmp
adc
out
pop
pop
add
pop
mov
add
jno
idivl
mov
fstpt
repnz
adc
push
pop
pop
lods
jne
gs
call
les
push
jle
inc
or
ret
adc
push
mov
xor
xor
adc
adc
cld
icebp
lret
in
mov
dec
mov
jle
sahf
movsl
inc
push
out
fstpl
ret
in
add
outsl
add
and
lock
fldl
and
xchg
mov
lret
arpl
mov
ret
js
lds
jge
mov
pop
mov
es
mov
ljmp
inc
sti
xor
daa
arpl
or
dec
xlat
jp
insl
adc
bswap
xor
enter
pop
sub
sbb
mov
out
mov
int3
ds
fisubrl
js
mov
sbb
mov
repnz
xor
dec
pop
mov
or
jecxz
mov
lea
sahf
out
sbb
cmp
testb
pushf
sbb
repnz
movsb
jge
xchg
fwait
stc
sub
fcoms
sbb
ret
push
jp
and
cmp
out
out
or
adc
dec
sbb
and
in
xlat
pop
lds
mov
jbe
dec
lea
iret
gs
fwait
test
dec
das
inc
jge
out
sub
lds
or
cmp
jae
mov
or
inc
shl
test
xchg
jmp
popf
idivl
repz
push
xchg
scas
jecxz
pop
mov
xor
sbb
xchg
aam
adc
bound
in
mov
loopne
mov
add
dec
lods
inc
cwtl
cltd
xchg
xor
in
dec
push
add
enter
and
dec
mov
data16
repz
lods
in
inc
dec
xorb
xchg
sbb
mov
fcmovbe
ss
sahf
mov
adc
lret
sbb
inc
mov
jl
xchg
sbb
cmp
in
loopne
ja
adc
enter
add
das
pop
pop
mov
jl
ds
loop
or
and
pop
jae
xchg
adc
pushl
jmp
jmp
push
das
or
lock
rclb
sub
and
repz
ja
enter
jnp
push
cwtl
xchg
xor
ret
mov
and
arpl
ja
fdivs
jecxz
sbb
sub
xor
pusha
dec
push
sub
test
pop
int3
insb
pushf
bndstx
jb
fistps
movsl
ficoml
dec
mov
cmc
push
jnp
ja
test
lret
cmpsb
fistps
lds
sbb
out
hlt
and
shll
clc
shl
cmc
and
xlat
js
sbb
cltd
mov
sub
movsb
and
mov
inc
add
xor
adc
ljmp
push
pop
movsb
add
pop
sahf
iret
pushf
add
cmpsl
or
out
movsb
adc
or
pop
lea
mov
adcb
aas
push
subl
mov
gs
and
and
ds
adc
mov
call
mov
aaa
addr16
ds
inc
add
out
push
in
lea
clc
pop
in
xchg
mov
jmp
lret
mov
and
mov
adc
and
inc
aam
jle
xor
in
stc
call
mov
jnp
js,pt
and
loope
jae
lods
shll
lret
lea
push
mov
scas
subb
fsubp
jp
rorb
cmp
outsb
call
push
adc
negl
roll
mov
out
sbb
stos
in
jl
jecxz
inc
in
lock
and
cs
das
and
push
movsl
mov
aas
sub
inc
mov
lret
mov
gs
insb
mov
cmp
cmp
dec
adc
xor
daa
inc
arpl
pop
dec
pop
lods
mov
sahf
mov
imul
mov
adc
lea
imul
imul
inc
test
ds
adc
in
jb
incl
adc
lods
aad
fldl
mov
dec
mov
iret
mov
and
jle
cmp
ds
adc
and
test
loopne
dec
adc
icebp
mov
inc
cmpsl
stos
xor
mov
les
cmp
movsl
sub
cmpl
stos
std
push
or
shll
insl
andl
insb
fbld
clc
in
adc
and
dec
sbbb
lret
pop
shll
int
push
xor
cld
sbb
mov
xchg
sbb
pop
aam
pop
mov
lds
sub
pop
sbb
jo
mulb
jno
xchg
add
scas
call
addb
fimuls
sti
js
sbb
scas
pop
lods
dec
int3
pop
jb
popf
add
xchg
cld
sahf
mov
and
int
int3
aas
ret
rcll
fs
lret
std
sbb
shl
test
mov
int
xor
adc
int3
cwtl
clc
add
shl
jns
xor
loop
push
loope
stos
movsl
mov
out
jl
arpl
orb
cld
out
addr16
fwait
stos
sbb
or
xor
push
jno
dec
shll
xorl
inc
or
jg
cmp
pop
arpl
pop
push
roll
std
push
xchg
jg
mov
cwtl
sub
sbb
rcll
callw
or
push
loopne
insl
je
test
inc
and
cltd
arpl
pop
iret
mov
add
jns
add
jge
sub
cmp
mov
lods
lock
push
popa
loop
les
or
cmp
repnz
mov
xchg
sbb
inc
daa
cmpsb
or
xchg
or
test
test
movsb
fsubp
push
xchg
loope
and
std
imul
sbb
lock
int3
xlat
cs
popa
pop
mov
lods
in
or
push
sub
push
sub
inc
ror
xor
push
inc
cmp
es
mov
popf
dec
int
ljmp
inc
add
pop
sbb
inc
inc
notb
or
mov
sub
push
leave
push
jle
orb
xchg
addps
jp
push
fwait
loope
aas
sbb
cwtl
mov
scas
push
dec
imul
test
pop
xchg
je
aas
push
jle
mov
ss
jg
push
push
loop
scas
push
mov
imul
xchg
pop
pop
cmp
in
lret
cmp
jge
mov
out
xor
stos
into
outsb
sub
jp
rcrb
cmp
movsb
icebp
repnz
xorl
in
mov
adc
es
in
out
jno
mov
cltd
rcr
repz
popa
xchg
cmp
and
ret
sub
daa
out
ja
jae
sbb
ret
aam
jns
mov
pop
mov
in
insl
push
sub
fwait
daa
mov
mov
lock
mov
aaa
jns
fwait
in
sub
out
test
popa
pinsrw
inc
jns
xor
pushf
xchg
ret
jbe
clc
cmp
inc
call
push
outsl
mov
negl
cmp
addr16
pop
daa
jne
xor
xlat
cmpsb
loope
jg
pop
imul
subl
add
ret
dec
sti
fmul
divl
hlt
pusha
ss
inc
push
mov
or
in
daa
movsb
sahf
mov
mov
fmull
dec
decl
lea
xchg
ret
push
jl
jne
mov
mov
inc
pop
jg
sbb
daa
sbb
cs
sbb
jb
ljmp
push
or
jecxz
cmp
icebp
jnp
cmpsb
insb
test
stos
cmp
inc
or
and
mov
xchg
xchg
movsl
popf
inc
fisttpl
fldenv
jo
gs
mov
out
mov
leave
cmp
clc
insb
dec
sbb
jp
xor
sti
iret
sarl
iret
sub
je
stos
push
das
sub
jge
cwtl
pusha
mov
pop
mov
mov
push
aam
icebp
mov
cmp
jnp
sbb
out
mov
pop
and
jmp
or
leave
jg
dec
mov
jmp
fisubs
adc
mov
frstor
or
jmp
out
cli
mov
or
lahf
andb
adc
mov
shrl
jo
stc
mov
sub
jg
imul
cmp
lods
mov
mov
int
push
mov
xchg
loop
adc
push
mov
out
push
jp
outsl
mov
aas
sub
fisubrs
dec
dec
pop
lcall
xchg
test
lret
bound
loopne
arpl
fnstcw
xor
xchg
sub
inc
clc
in
rcrb
aam
lahf
test
aas
mov
out
cmp
push
enter
jg
inc
adc
mov
aad
std
mov
xchg
sbb
mov
adc
in
call
mov
push
sbb
jne
shrl
pop
inc
lahf
stos
fsubrs
adc
pop
mov
or
mov
mov
push
popa
out
aas
lcall
pop
fnstsw
push
xchg
call
mov
repnz
enter
xor
sub
nop
inc
inc
jns
adcl
mov
bound
and
leave
xor
pop
push
jno
pop
xchg
aaa
lds
gs
popa
in
lret
and
dec
test
pop
rorb
push
and
sbb
sbb
pop
xor
gs
inc
mov
test
cmp
ret
insl
pop
push
dec
pop
call
cmpsl
test
int
std
ficompl
jmp
aaa
ljmp
dec
jecxz
into
pop
lds
push
xor
lcall
cmc
sub
rcll
pushf
dec
adc
shrb
mov
sub
push
and
in
add
jne
mov
loopne
test
ret
sub
push
ds
cmp
lods
pop
out
lret
sbb
xchg
mov
jp
xor
sub
rorl
xchg
xchg
mov
scas
push
aaa
jge
mov
add
mov
xor
mov
fwait
pop
leave
fwait
cmpsl
insl
pop
lahf
xorl
inc
aad
das
test
or
mov
add
push
cli
out
fildl
data16
ret
cmpsl
addr16
insb
jnp
mov
leave
xchg
cmp
inc
je
mov
xchg
shl
xchg
stos
add
xchg
repnz
in
adc
call
dec
push
pop
cs
or
cmp
sub
imul
fcompl
inc
popf
sub
ret
and
ds
or
jg
xchg
mov
adc
enter
xor
dec
pop
inc
out
in
xchg
dec
cmpsl
and
xor
fsubrs
add
scas
test
mov
lods
into
sub
loopne
mov
data16
imul
inc
and
or
and
sbb
imul
ljmp
dec
jae,pn
mov
push
lock
cli
stos
jl
aas
nop
adc
ljmp
sti
xor
mov
lock
int3
scas
pop
mov
adc
or
sarl
xor
notl
dec
rolb
jns
jae
cld
enter
dec
das
push
fs
sbb
call
jecxz
pushf
xor
xchg
push
orl
out
mov
xchg
or
arpl
push
test
adc
je
daa
dec
fstp
rcrl
and
mov
in
xor
out
je
mov
lods
xchg
out
pop
in
add
fsubrs
xorb
xor
cmp
mov
mov
push
fcomps
in
push
sbb
mov
mov
xchg
pop
mov
out
pcmpgtd
shl
stc
out
and
fs
seta
mov
adc
repz
js
jnp
lds
add
imul
out
push
imul
cwtl
ret
nop
xchg
movq
arpl
cmp
push
test
push
loopne
mov
sbb
bound
ljmp
jmp
mov
mov
or
test
jns
push
and
cmp
inc
sahf
mov
fstl
test
out
adc
and
js
jl
test
gs
jecxz
pop
sub
or
sub
cmp
cmpsb
adc
or
dec
std
sub
sarb
repz
dec
jae
out
jno
add
lea
bound
and
mov
fs
mov
push
xchg
fsubp
mov
std
dec
pop
ffree
out
loop
cmc
mov
or
mov
test
aam
call
fistpl
iret
in
jb
sbb
out
leave
adc
add
cmp
mov
mov
inc
test
aas
outsl
test
fcomi
loopne
sbb
lahf
jns
xchg
sbb
ficompl
xchg
pop
test
test
jne
jnp
sbb
mov
js
addr16
cmp
add
into
and
aam
mov
ja
lock
pop
insb
ja
ret
xchg
lods
push
fsubrs
std
mov
andb
sbb
add
inc
jbe
imul
inc
pushf
loopne
jb
and
dec
dec
dec
push
gs
add
and
push
ds
icebp
push
pop
loope
fildll
adc
lea
movsb
push
push
dec
push
sgdtl
push
push
fsts
les
sbb
xor
jmp
outsl
or
fsubr
lahf
push
push
fs
xchg
bound
mov
sbb
vpaddb
jmp
sbb
loopne
daa
mov
or
dec
add
adc
lret
xor
or
dec
aad
out
jmp
rorl
icebp
dec
push
dec
add
lret
add
jae
and
out
enter
jnp
and
jge
jmp
add
inc
nop
in
aaa
sahf
das
mov
and
or
and
jecxz
or
xchg
dec
cmc
or
call
xchg
out
stos
xor
adc
push
lret
outsl
popf
in
out
iret
jno
das
pop
jl
mov
xorb
pop
int3
mov
push
cld
adc
xchg
mov
sbb
popf
or
aad
add
push
call
mov
mov
sbb
sti
shlb
pop
jmp
sahf
dec
inc
dec
jns
add
ljmp
or
adc
sbb
out
lods
dec
or
cld
imul
adc
cmp
lahf
sub
push
sbbb
xchg
insb
sub
mov
lock
aam
popf
pusha
inc
shll
push
xchg
call
jne
xchg
sub
repz
and
pop
pop
dec
mov
jmp
dec
ds
pop
out
fmull
add
shlb
int3
dec
out
int3
js
or
adc
repz
fldenvs
cmpsb
fimull
fdiv
lock
clc
or
idivl
jbe
mov
ss
mov
lods
int
pop
sbb
xor
mull
mov
std
out
addr16
imul
sbb
sub
jbe
stos
pop
insl
xor
xchg
setae
push
stc
or
pop
stc
xchg
inc
lods
shlb
les
or
jg
push
mov
cmc
icebp
aam
imul
mov
jl
jbe
loop
pop
xlat
pop
jbe
call
sbb
ja
adc
jns
xor
mov
gs
test
inc
out
cmp
inc
loope
push
lret
stc
jb
add
out
lcall
shrb
or
sti
in
mov
push
iret
pop
mov
in
add
lret
mov
int
push
arpl
pop
cmp
and
jne
int3
push
cld
inc
push
stc
fisttpl
mov
aad
xchg
inc
jo
mov
pop
mov
shlb
jecxz
xchg
sbb
inc
mov
lret
push
aad
outsb
nop
jnp
pop
xor
cmp
push
mov
or
jns
bound
pop
add
push
int
out
sub
mov
and
lret
inc
es
repnz
scas
es
push
test
cltd
in
mov
out
out
jns
mov
sbb
out
gs
scas
dec
int
imul
push
sahf
sbb
outsb
jns
pop
scas
mov
js
fiadds
xor
xor
lret
dec
pop
mov
cmpsb
clc
cltd
add
dec
stos
imul
inc
flds
and
add
rcll
in
push
lcall
ja
jmp
int
inc
insb
fsubl
les
or
dec
push
lods
cli
es
jp
lret
adc
xlat
mov
and
fmull
fdivr
jecxz
and
rolb
lret
mov
push
ja
aad
pop
aam
and
inc
dec
sub
cmpsl
mov
imul
xor
sti
out
dec
icebp
jns
loop
rclb
and
rcrl
testb
xchg
out
xor
das
push
sub
add
xchg
pusha
subb
repnz
push
repz
daa
jns,pn
sbb
addr16
add
push
xchg
pop
rorb
or
mov
leave
sbb
mov
cmpsl
out
lods
jno
adc
jne
pop
lock
sub
icebp
cmp
inc
push
daa
and
xchg
loope
out
stos
xchg
fwait
notb
addb
jp
and
or
add
pusha
scas
addr16
or
gs
add
ficoml
pushf
daa
aaa
mov
add
leave
cltd
testb
adc
and
stc
out
or
add
sub
add
cmc
and
pop
cmpsb
daa
adc
jg
pop
clc
pop
outsb
ljmp
and
xchg
rcl
stos
jno
orl
ljmp
xor
test
insb
adc
or
inc
lock
lar
lock
scas
rorb
js
imul
dec
lods
int
inc
adc
mov
popa
imul
iret
decb
sbb
cmp
mov
xchg
ljmp
cmpsb
jl
mov
sub
fists
loopne
mov
repnz
popa
sub
dec
test
leave
shl
ret
inc
adc
dec
fnstsw
fimuls
jnp
cmp
jbe
mov
int3
outsb
gs
fcmovne
ss
adcb
or
scas
ja
lock
cmp
pop
add
repnz
pop
sub
ret
lahf
pop
add
cltd
js
sbb
mov
pusha
mov
aas
sub
pop
addl
mov
faddl
out
fisubs
push
imul
mov
jge
mov
push
out
insb
pop
pop
stc
stos
pushf
xchg
scas
push
dec
das
stos
xor
ret
sbb
stc
fwait
sbb
or
push
lods
cmpsl
loopne
cmp
inc
outsb
shlb
inc
inc
inc
inc
subl
pop
subb
adc
lock
cmp
dec
dec
mov
cld
movsb
mov
jbe
xchg
dec
push
popw
nop
in
movb
pop
pop
xor
and
xor
pop
lret
dec
nop
xchg
popf
idivl
jbe
and
pop
pop
xor
mov
push
cli
sbb
mov
movsl
iret
mov
das
fldl
push
pop
fadds
and
gs
push
mov
cmp
es
ljmp
jb
pop
pop
xchg
fs
mov
xchg
ficompl
fiadds
adc
mov
shrl
inc
jns
insb
cld
aad
push
pop
dec
jmp
mov
std
cmp
jns
mov
ss
mov
fcmovb
xchg
push
mov
pop
data16
lahf
add
fisttpl
inc
fdivs
inc
mov
push
cmp
cmc
jne
mov
mov
sub
pop
cld
jp
nop
jg
xchg
addb
and
cmp
xchg
dec
clc
daa
in
insl
inc
stc
sub
repnz
stc
gs
std
xor
out
xor
cs
cmp
std
lahf
movsb
push
mov
pop
arpl
inc
push
push
add
incl
dec
outsl
jmp
sarl
arpl
pop
cli
insb
inc
xchg
shll
mov
and
adc
or
sub
mov
aad
in
in
pop
dec
hlt
push
sub
or
mov
and
jne
push
push
aas
sahf
push
sub
xchg
and
jg
xor
or
inc
hlt
push
inc
dec
lret
dec
bound
add
mov
add
data16
pushf
fcoml
clc
mov
jae
jl
push
xor
leave
call
xchg
fst
insl
push
or
aaa
push
jl
nop
pop
test
mov
cmp
sbb
jno
or
fmull
repnz
stos
shlb
test
pop
lods
dec
mov
push
enter
push
mov
fists
xchg
xor
jge
jmp
lods
mov
cmp
lahf
gs
push
jne
mov
imul
adcl
inc
push
movsl
sbb
stc
incl
adc
lods
mov
clc
sub
pusha
popa
test
in
ljmp
dec
mov
jp
lock
loopne
pop
inc
mov
std
add
lea
std
pushl
lahf
push
and
cltd
insl
push
cmp
xlat
gs
fs
xor
mov
ljmp
clc
stos
imul
mov
daa
adc
mov
les
lods
pushf
cmp
jecxz
jl
dec
stc
enter
cmpsl
sub
jp
dec
xor
rcr
mov
in
shl
sub
outsb
and
cli
sub
fs
loope
cmpsb
mov
add
imul
dec
shrl
sarb
popa
test
push
xchg
cmp
sub
and
push
and
xchg
call
jno
mov
mov
movsb
jp
dec
lea
pop
outsl
xor
clc
sub
xchg
or
repnz
cli
shll
int
pop
decl
rcll
enter
add
inc
lds
mov
or
mov
sbb
imul
cltd
jecxz
outsl
out
pushf
nop
loopne
cmp
leave
fwait
loope
sbb
ds
adc
scas
push
fldcw
inc
push
pop
gs
dec
add
pop
mov
in
outsl
xchg
xor
push
inc
cmp
cmp
outsb
imul
lock
dec
mov
jns
adc
sbb
xchg
pop
fbld
pop
dec
jae
lods
hlt
stos
cmp
js
push
insl
shr
adc
sahf
dec
stc
or
in
pop
outsb
sub
ljmp
dec
mov
mov
inc
push
outsl
in
fstl
scas
pop
fs
in
cmpl
pop
mov
push
call
shlb
out
sbb
dec
or
add
pop
or
aad
adc
icebp
cmc
fimull
aaa
push
adc
jecxz
and
jecxz
int3
mov
mov
push
push
test
mov
adc
stc
rclb
ds
push
idivb
arpl
stc
push
mov
sub
xchg
and
add
ljmp
pop
icebp
xchg
test
daa
push
lea
xor
xor
add
in
jmp
arpl
ss
mov
push
sahf
fcmovb
movsb
jmp
xor
test
mov
jae
mov
inc
and
pop
add
sbb
mov
mov
in
hlt
loopne
out
cmpsw
frstor
jb
add
hlt
or
jns
push
andl
addl
and
lcall
xchg
cmp
push
mov
ds
jecxz
mov
dec
mov
shll
or
sub
aas
scas
fcomps
insb
pop
xchg
and
cmp
jmp
pushf
mov
das
pop
add
push
es
lods
jne
dec
mov
iret
sbb
insb
push
scas
addr16
cmp
jb
mov
imul
fdivrs
outsl
pop
out
jp
cmpsl
lret
dec
mov
lods
dec
ds
add
mov
dec
call
gs
push
jmp
xchg
pop
ret
sbbb
dec
or
fdivl
jecxz
lcall
dec
fsubrl
mov
dec
pop
push
rcrl
mov
fisttpl
sti
push
ret
jge
jmp
xchg
aam
cmp
sbb
pushf
call
lods
sbb
frstor
iret
imul
orl
cld
mov
xor
jnp
xorb
or
cmpsb
jp
push
mov
mov
dec
sub
push
lds
int
das
xor
xchg
or
jbe
jecxz
in
out
dec
call
push
fimull
or
std
into
add
add
jb
in
xor
cmp
mov
ret
movsb
out
pop
pop
push
inc
add
shl
stc
pop
decb
out
ja
stos
mov
sub
sub
inc
rcrl
frstor
icebp
jo
xor
cs
sub
mov
mov
ds
mov
imul
les
lcall
fisttpl
int
adc
loopne
pop
addl
dec
aaa
xorl
cmp
test
add
lods
bnd
mov
insl
sub
adc
into
pop
sub
cmp
jle
mull
mov
mov
fucomp
mov
mov
push
in
mov
mov
jne
and
sub
stos
adc
cmp
ds
ss
add
mov
mov
cmpsl
cld
or
inc
scas
rcrl
mov
push
fs
dec
pop
fadds
call
cs
xchg
jno
insb
iret
arpl
adc
cmp
mov
and
push
jge,pn
into
out
sbb
popf
inc
pop
cmp
mov
dec
sbb
push
pop
pop
int3
sbb
mov
mov
shl
mov
sub
sbb
aad
ds
ljmp
fs
inc
ret
test
cmp
add
sti
rcrl
fdivs
lret
test
adc
cmpsl
push
addb
jns
push
icebp
cli
pop
imul
int
das
adc
fsubs
add
test
lods
mov
fidivrs
lods
in
inc
pmovmskb
stos
pop
cmp
dec
movsb
rcrl
shll
lret
test
mov
pop
out
mov
movsb
fstl
pop
jmp
add
jge
dec
jae
hlt
lret
dec
mov
aam
mov
pop
into
imul
cwtl
or
ret
jne
insb
jbe
pop
cmp
sbb
push
clc
divb
or
push
aas
scas
out
jns
popa
pop
dec
es
push
mov
mov
loop
adc
cmp
dec
push
out
test
cmp
lret
out
enter
push
xchg
fnstsw
adc
xor
orb
xchg
cmp
xchg
outsb
cmp
add
jge
push
icebp
mov
sub
pop
xlat
mov
into
fidivrl
aad
push
lds
inc
pushw
cmp
mov
jmp
jns
cwtl
shll
loop
fists
pop
adc
icebp
pushf
mov
jb
dec
hlt
loope
test
stos
out
and
dec
mov
leave
jmp
insl
sub
incl
icebp
ret
aas
jns
fiaddl
push
scas
or
adc
inc
inc
push
fwait
insl
sbbb
es
push
jle
pusha
cmp
inc
ss
mov
mov
dec
xor
in
cmp
addl
movsb
bound
xchg
dec
daa
rorl
in
push
ss
test
stos
mov
dec
arpl
mov
nop
neg
or
data16
jg
pop
aas
mov
imul
cltd
js
pop
rcll
sbb
sarl
mov
lret
femms
jle
cli
lahf
sub
push
stos
sbb
ret
je
and
pop
push
insb
aas
mov
scas
imul
imul
arpl
sti
add
sbb
add
shll
shlb
push
sarb
inc
xor
decb
or
popa
inc
dec
out
cltd
pop
pushf
and
ficomps
insl
pop
adc
aas
push
pop
pop
sub
jb
sahf
push
sub
popf
cmp
into
cmc
jmp
adc
test
jno
pop
jecxz
out
cmp
shll
nop
jmp
int3
dec
inc
es
ds
xor
mov
nop
aas
xor
test
add
jno
inc
ds
push
inc
xchg
into
add
int
mov
mov
lahf
mov
pusha
mov
cmp
addr16
xor
mov
mov
add
cld
lahf
mov
test
test
adc
repnz
inc
jge
movnti
jmp
mov
int
jnp
mov
mov
movsl
dec
push
addr16
xchg
pop
or
adc
icebp
add
pop
pop
mov
or
insb
xchg
pop
insb
fst
sti
xor
xchg
jle
jae
pop
add
jmp
in
sbb
shll
xor
adc
adc
or
xchg
sub
iret
mov
mov
rcll
dec
pop
aad
shl
push
jl
jns
push
into
mov
inc
add
pop
jo
cmp
lods
jle
xchg
push
mov
loope
adc
scas
push
mov
add
stos
mov
xchg
jne
adc
scas
repnz
inc
test
mov
dec
jp
aaa
leave
sbb
push
mov
sahf
sbb
cli
fbld
mov
inc
aad
mov
shl
gs
int3
fs
inc
xchg
ret
xor
xchg
adc
popf
sbb
cmc
cmp
pop
sub
out
hlt
enter
std
jecxz
xor
and
add
shrb
xor
fmulp
push
mov
sub
jo
xchg
inc
push
cmpsb
pusha
push
cmp
or
repz
ds
xor
cmc
cltd
mov
test
pop
mov
mov
test
test
jp
js
loop
ret
int3
xchg
int3
stc
enter
pop
in
out
pop
int3
push
sarb
movsl
and
rdtsc
aam
fisttpl
push
inc
mov
or
jns
shll
mov
repz
cmc
pop
push
mov
scas
pop
int3
pop
sub
pop
dec
inc
sub
into
or
out
test
cli
mov
aaa
sub
daa
lret
nop
push
add
xor
imul
xor
or
es
lcall
inc
lcall
fbstp
nop
stc
ja
test
lcall
popf
or
cmpsb
add
sbb
dec
inc
repnz
pop
outsb
mov
adcb
mov
xchg
mov
shlb
xchg
call
dec
add
mov
cwtl
orb
cmp
and
out
cli
test
pop
cmp
push
out
out
inc
movsl
jae
aam
pushf
push
rcll
mov
xor
adc
adc
adc
and
daa
xchg
aas
inc
cltd
dec
pop
sub
cwtl
out
adc
pop
cmpb
aas
cmp
nop
insl
and
add
mov
xchg
lcall
xchg
dec
stc
test
pusha
fsubrs
pop
in
add
xchg
rcl
pop
mov
test
inc
dec
sbb
lea
out
inc
jle
xor
jp
cmpb
loope
inc
or
sbb
popf
fldt
cltd
xor
lock
fwait
adc
stos
sub
xchg
das
test
cmp
imul
es
aaa
aas
mov
ja
subl
imul
js
call
xchg
daa
dec
cs
xchg
add
mov
jle
add
jnp
int3
xabort
jl
cld
pop
mov
add
stc
je
lcall
rolb
jl
pusha
mov
adc
inc
mov
push
mov
add
dec
orb
jnp
repz
push
sar
ds
jecxz
jle
or
mov
iret
add
cmpsb
jo
or
insb
imul
rcll
loope
int3
push
xor
mov
loop
pop
cmp
js
neg
dec
and
pop
fs
xchg
mov
adc
test
in
les
in
movsl
push
push
adc
sarl
fidivl
mov
sub
xchg
push
into
inc
testl
lods
dec
xchg
cmc
lods
sar
jg
fstl
push
push
jb
add
int3
lret
ljmp
sti
add
xchg
out
adc
add
xor
cmp
push
sub
or
daa
mov
pop
mov
rorl
in
sbb
fstp
popa
push
pop
pop
mov
pop
repz
pop
popa
lahf
bound
movsb
and
je
mov
sbbb
loopne
mov
stc
xor
int
mov
sub
push
ja
sahf
clc
clc
fdivp
aad
xor
incb
jno
pop
mov
icebp
sub
pop
push
inc
dec
and
adc
out
inc
mov
stos
xchg
jne
ret
fs
adc
jp
pop
mov
into
inc
cmpsl
pushf
push
div
loope
xchg
inc
pop
lcall
arpl
aaa
pop
out
pop
es
sub
lret
mov
pop
mov
xor
sbb
and
rorl
int
dec
push
and
xor
cmpb
mov
dec
jg
cmc
mov
pop
push
xchg
lcall
add
cld
out
xchg
inc
cmp
dec
push
jl
std
repz
jl
inc
inc
push
sub
cmp
xor
addr16
push
adc
mov
insl
pop
push
pop
cli
imul
outsl
imulb
popf
aad
xor
imul
cmp
ret
lret
mov
vcvtdq2pd
leave
insb
inc
push
inc
xor
out
mov
inc
int3
enter
xor
add
rol
sbb
out
jg
das
dec
mov
adc
repz
testb
shl
lock
lcall
sbb
pop
or
jo
mov
sbb
lret
fnstenv
fcmovne
jecxz
mov
cmpsl
movsb
out
shlb
xchg
aam
popl
adc
mov
sti
sbb
cmp
es
aaa
pop
daa
hlt
push
cld
fisttpll
arpl
dec
loopne
mov
mov
add
cmp
lret
or
imul
xchg
repnz
jmp
jae
insb
notl
cmp
jo
xor
xchg
test
cli
iret
cs
loopne
mov
mov
mov
cmp
inc
leave
jns
pop
enter
mov
pushf
cltd
push
mov
fwait
pop
mov
loope
cwtl
sbb
pop
mov
fdivr
mov
dec
mov
xchg
stc
mov
data16
shll
dec
lods
push
in
iret
loopne
mov
mov
xchg
cmp
lgs
cmp
or
pusha
cli
rorb
xor
pop
mov
cmp
sub
test
ljmp
or
scas
pusha
or
out
xor
cli
enter
cld
mov
hlt
or
cmp
clc
decb
jp
popf
add
push
fnstcw
sbb
cmp
call
mov
dec
adc
mov
lods
xchg
mov
pop
movsl
push
sbb
hlt
lock
xor
lods
scas
xchg
inc
add
iret
and
in
or
adc
lcall
vpcmpgtb
or
pop
jp
pushf
stos
leave
push
xorl
imul
mov
push
in
pop
bound
jo
out
jns
inc
call
icebp
shrl
cli
xchg
icebp
out
pushf
sbbl
test
insl
js
mov
xchg
lock
push
jmp
dec
pop
add
aas
daa
ret
cltd
xchg
pop
mov
sbb
add
stos
in
mov
adc
lea
andl
std
push
adc
inc
out
cmc
sub
test
outsl
sbb
lods
mov
lds
pop
adc
int
pop
mov
push
jmp
in
inc
scas
out
je
test
adc
mov
ret
or
loopne,pt
cltd
and
push
mov
jbe
sub
xor
neg
sub
repz
and
fisttpl
jno
dec
lahf
ljmp
sti
mov
inc
xor
sbb
popa
inc
jno
movsl
loope
aam
or
push
or
mov
fdivl
gs
arpl
sub
jnp
mov
cltd
jl
mov
sub
out
xchg
in
ret
xor
jne
lods
add
adc
fwait
icebp
push
insb
aaa
insb
les
adc
add
pushf
dec
int
arpl
xor
repnz
pop
dec
jle
mov
call
out
sbb
xchg
xchg
jmp
arpl
push
dec
add
cmpsl
aad
enter
iret
pop
aad
adc
test
test
pop
mov
cwtl
adc
lea
mov
and
mov
mov
inc
lret
sub
push
aam
enter
in
test
out
xchg
cmp
and
pushf
or
push
pop
fld1
push
xchg
subb
xor
or
outsl
mov
mov
jb
fsubrl
movsl
inc
sti
stos
cmpsl
in
rcrl
mov
ljmp
hlt
fimull
xor
add
lock
push
jb
dec
pop
mov
jmp
pop
faddl
xchg
nop
shrb
lock
jle
movsl
aam
dec
addb
out
outsl
arpl
sti
inc
lret
rclb
iret
pop
popf
test
pop
cmp
daa
aaa
push
cld
xchg
stc
cmc
lods
mov
mov
call
sub
cs
sub
adc
inc
add
fisubl
push
popf
shlb
lods
in
es
inc
ret
fnstenv
data16
xchg
sbb
xor
cmp
pop
out
outsb
push
adcl
pop
push
or
je
sbb
lahf
pop
jae
xor
cmc
ljmp
push
data16
rcrb
std
inc
sbb
xchg
mov
std
cmpl
jge
test
mov
push
jg
dec
iret
fadd
jne
push
mov
fnstenv
push
jp
push
fistl
ret
gs
push
jbe
popf
dec
pusha
fisttpll
cld
lock
data16
loopne
sbb
fmuls
and
cmpsb
add
loopne
jmp
cmp
xchg
je
cmp
jl
add
loopne
or
repnz
es
add
outsb
or
imul
or
fbld
or
leave
inc
xchg
daa
push
les
loope
negl
inc
outsb
pop
aam
sbb
mov
das
shlb
cwtl
jae
je
add
xchg
mov
es
int3
sub
addb
leave
sbb
pop
jb
jge
pop
lods
adc
add
std
pop
mov
ja
into
sbbb
subb
sbb
cwtl
fwait
xor
push
out
mov
dec
mov
shll
lret
cwtl
mov
inc
divl
imul
jno
in
cmpsb
nop
sub
push
xor
movsl
cltd
mov
sbb
iret
dec
aad
test
xchg
xchg
dec
adc
mov
notl
outsb
pusha
sub
push
inc
cmp
sbb
xor
push
pop
aam
inc
je
mov
push
arpl
pop
mov
arpl
fwait
icebp
mov
pop
xor
nop
shl
data16
pop
mov
imul
pop
data16
add
dec
and
sub
inc
pop
push
xor
ja
icebp
movsl
insl
sub
xor
inc
dec
jne
mov
ret
data16
nop
sbb
fldenv
repz
out
mov
je
jno
mov
jle
xorb
sub
addr16
mov
sbb
pop
xor
or
popf
mov
sbb
insl
and
lcall
out
sbb
adc
or
das
jo
in
cltd
insl
cmpb
mov
ficomps
imulb
loopne
loop
adc
dec
sub
mov
jo
or
pop
jns
push
jbe
sysexit
jmp
jecxz
imul
mov
dec
fs
stc
mov
data16
scas
and
jae
mov
xchg
int
and
rcll
icebp
fisubrl
sbb
sbb
mov
outsl
mov
adc
adc
insl
sti
add
sarb
mov
lock
je
xlat
sbb
inc
test
stos
xor
mov
xor
hlt
lds
push
out
scas
cltd
out
inc
and
inc
mov
das
mov
dec
jne
aam
xchg
stc
pop
push
test
dec
hlt
push
jecxz
pop
lahf
inc
jbe
lcall
jae
jl
and
pop
cmp
mov
test
inc
push
iret
mov
pusha
push
jle
insl
fadds
mov
shl
add
leave
cmp
insl
inc
add
not
jle
xchg
idiv
xor
mov
adc
or
mov
xor
mov
imul
mov
out
jp
stos
scas
xor
pop
ss
stos
movsl
fldl
pop
add
test
inc
or
cmp
dec
scas
mov
loop
inc
cmp
inc
lahf
sbb
pop
push
mov
in
call
std
popf
xor
test
fisubrs
pop
jns
inc
and
sarb
inc
xchg
call
xchg
push
push
jns
and
adc
fistpll
sbb
addl
mov
in
lret
push
jns
push
mov
idivl
cli
shlb
dec
add
lods
cmpsb
out
aam
jne
mov
cld
or
imul
dec
lret
test
xchg
ret
test
sub
sub
lds
jl
lock
xchg
dec
test
adc
cmp
jmp
daa
sub
fnstenv
jae
push
and
push
push
adc
inc
mov
lds
push
push
jbe
fnstsw
and
into
mov
mov
or
lret
adc
adc
in
and
adc
adc
sahf
aas
ud0
addr16
adc
pop
pop
jne
mov
bound
in
stos
adc
jno
sbb
and
fsubrs
movsl
mov
xor
xor
scas
out
xchg
pop
add
jmp
dec
mov
jecxz
std
adc
adc
dec
sub
mov
inc
xchg
stc
jbe
aad
mov
add
mov
orb
and
repz
dec
cmp
lcall
and
pop
repnz
push
xchg
lret
imul
jp
push
xor
push
mov
lret
test
mov
aad
dec
in
pop
or
sub
xchg
pop
cmp
fsubrs
dec
orl
mov
cli
inc
test
pop
sub
jg
cmp
add
pusha
daa
out
sub
popa
xor
sbb
daa
lahf
mov
inc
jle
rol
cwtl
cmpsb
cmp
dec
pop
and
in
lcall
mov
cmp
test
adc
incb
aad
jbe
adc
mov
xchg
aad
movsb
fdivp
sub
gs
fisubl
jle
mull
push
mov
mov
mov
iret
sbb
xchg
fwait
adc
jnp
fisubl
xchg
movsb
mov
mov
lret
adc
or
cmpsl
jge
sub
push
in
movsl
xchg
jbe
bound
xor
jecxz
lds
pop
sbb
addl
dec
fimuls
aam
push
rcr
add
sub
call
inc
push
iret
sub
int
mov
or
imul
jle
test
test
dec
inc
inc
add
adc
and
push
addr16
mov
sbb
jns
cli
mov
mov
in
idivl
mov
cmpsl
sub
mov
inc
push
divl
mov
sbb
lret
rcr
or
jo
cld
push
push
dec
into
ds
inc
ret
jge
in
fcomps
mov
popf
push
movsb
add
fnstcw
in
int
mov
xorb
imul
mov
lret
push
stos
jle
test
add
hlt
scas
jb
sub
jae
lcall
cld
mov
add
ds
mov
cwtl
fcoml
xor
adc
mov
imul
adc
sbb
sbb
cltd
scas
insb
sub
inc
cwtl
jne
repz
shrb
pop
in
mov
sbb
pop
inc
gs
dec
ds
fnstsw
cld
inc
sahf
mov
aad
gs
xlat
insb
push
sub
lcall
out
adc
inc
xchg
loop
scas
jmp
jae
sbb
dec
xor
push
js
lods
jno
in
fldl
gs
leave
fs
push
mov
ret
sti
clc
inc
movsb
xor
sub
push
mov
adc
xor
daa
nop
insl
cwtl
mov
or
jns
pop
aad
inc
xchg
pusha
and
jmp
mov
jo
int3
push
fisubl
jbe
mov
mov
xor
sub
mov
fstps
mov
std
xchg
out
test
inc
lcall
test
and
sbb
rcll
test
inc
pushl
stos
shlb
or
sbbl
rcrl
sbb
cmp
in
xchg
in
jns
inc
out
add
enter
cmp
ljmp
stos
push
jle
sub
push
pop
decb
in
push
pop
or
lahf
in
or
sub
adc
push
dec
int
ja
movsb
lods
jle
subb
out
xchg
mov
sbb
mov
dec
clc
inc
dec
mov
jb
out
mov
jno
dec
sub
and
in
adcb
es
sub
push
rorl
sub
dec
test
fwait
movsl
cwtl
xor
mov
pop
mov
out
cli
sti
and
add
stos
movsb
adc
lahf
mov
cmp
pop
mov
dec
sub
jge
mov
outsl
inc
inc
in
iret
sub
sub
data16
bound
shlb
lea
sub
mov
cltd
stos
push
adc
pusha
jbe
movsb
cmp
loopne
les
ja
adcl
leave
shll
add
in
xor
and
sub
pop
xchg
inc
xchg
inc
push
cmp
das
sbb
xchg
and
inc
cld
or
inc
lods
xchg
or
mov
mov
cmp
aas
stos
adc
or
and
test
cwtl
adc
popa
test
test
sub
fsubrl
hlt
test
xchg
and
or
aaa
andl
mov
mov
popa
dec
jecxz
shlb
lea
aaa
xchg
jge
les
pop
cmp
movsb
inc
movntq
jle
pop
mov
test
add
cld
mov
leave
push
mov
sub
mov
xor
add
loop
sbb
hlt
jae
cmp
mov
sbb
repnz
loop
jl
push
les
pop
mov
jp
mov
ljmp
fisubrl
incl
mov
lock
inc
nop
cltd
dec
sub
mov
adc
sub
lods
mov
pushf
lret
pushf
loope
dec
xor
inc
adc
sbb
xor
hlt
lret
and
mov
inc
jno
ficompl
adc
leave
shr
jae
cmpsl
sahf
inc
mov
mov
imul
inc
lret
iret
cmp
stos
or
push
sbb
mov
or
dec
push
cmp
dec
pop
mov
mov
pop
shrl
and
dec
pop
cmpsl
mov
leave
jge
shrl
and
mov
cmp
mov
push
lret
and
dec
in
inc
jnp
lret
jg
popf
cs
movsb
and
incb
mov
popa
dec
add
or
add
bound
pop
inc
je
sub
push
xorb
cmp
jge
mov
lahf
xchg
test
xor
jbe
cmpsb
pop
scas
cld
xor
cmp
xchg
jp
nop
add
mov
push
out
jp
pop
inc
lcall
jns
sbb
fsts
imul
mov
xchg
and
lods
push
adc
dec
fiaddl
xor
js
cmp
cmp
ret
sub
pushf
sarb
adc
push
loopne
jne
lock
mov
pop
sub
and
push
rol
popa
leave
mov
jae
add
dec
push
mov
adc
aam
in
xor
mov
jbe
push
adc
inc
mov
mov
cmp
pop
fs
push
lods
cltd
mov
iret
mov
mov
push
and
imul
mov
add
cli
sbb
cmp
das
dec
fsubrp
sarl
idiv
adc
jmp
mov
aam
inc
jecxz
in
int
mov
fists
loopne
test
and
fldt
loopne
or
addr16
popf
into
outsl
mov
in
jae
mov
cmp
clc
pushf
icebp
ljmp
pop
or
sti
inc
imul
jmp
inc
rcrb
imul
push
ror
in
xor
aam
jl
sti
mov
and
sub
push
sbb
fs
xor
out
outsb
mov
add
lahf
inc
mov
jbe
sbb
jbe
or
frstor
out
cmp
inc
cmp
add
nop
pop
test
mov
jecxz
fildl
push
fs
insb
aad
add
pop
inc
mov
inc
mov
jne
dec
push
sub
or
xchg
mov
cmp
nop
enter
pop
arpl
pop
sbb
or
cmp
xlat
jle
mov
or
dec
xchg
arpl
dec
stos
sbb
push
jp
push
ffree
dec
adc
add
cmp
xchg
jl
sbbb
adc
or
pop
lock
pop
add
or
outsb
cmpsb
mov
ret
out
inc
rcrl
add
pop
mov
dec
and
push
aad
es
rorl
inc
inc
inc
jo
xor
mov
adc
or
fildll
ss
call
sbb
pop
jg
xor
fsts
pop
inc
dec
call
lcall
push
out
or
mov
mov
fnstcw
mov
adc
push
jns
loopne
push
and
xchg
sub
or
or
dec
dec
shrb
cmpsb
mov
rorb
dec
shlb
shll
lahf
cltd
int3
jmp
mov
sarb
push
push
inc
sub
inc
add
pop
pop
insb
aam
repnz
push
mov
lret
cs
call
fstp
sbb
out
and
addr16
cwtl
or
dec
mov
sbb
xchg
adc
mov
jnp
jo
sarb
and
dec
mov
fildl
out
dec
or
xlat
push
jne
je
jb
jne
jo
mov
mov
aaa
loope
fidivrl
outsl
flds
cmp
cs
lods
cmp
sbbb
rcr
clc
out
xchg
je
aam
popa
daa
mov
nop
or
sbb
xor
pusha
jg
xor
mov
xlat
mov
mov
popf
clc
cmp
mov
mov
loop
push
cltd
fcoml
cmc
ljmp
out
mov
or
ret
push
add
imul
jecxz
lcall
mov
mov
ja
lret
pushf
pop
jge
sub
sahf
mov
dec
adc
mov
test
jg
dec
aam
cmp
or
aas
inc
hlt
sub
sub
imul
ds
pop
cld
fnsave
or
sahf
arpl
sub
sub
pop
es
mov
movsl
cwtl
jle
test
xor
js
enter
xchg
lods
fmull
xor
loopne
inc
xor
mov
inc
cmp
iret
or
mov
xchg
sarl
sub
cmp
scas
cmpb
jnp
pusha
jecxz
mov
movl
subl
sbb
jnp
push
imul
jae
shrb
aas
test
dec
cmc
fidivrl
xor
dec
dec
int
testb
push
adc
pop
inc
in
xor
ret
mov
lcall
lock
fdiv
jg
mov
jne
lea
and
adc
repnz
leave
pop
mov
jno
sti
cld
xchg
dec
mov
lret
ds
add
loope
stos
adc
jnp
cmpsl
or
lea
mov
in
jo
pop
xor
mov
mov
add
mov
mov
cmp
lods
fcomps
lds
rclb
enter
mov
lock
or
xchg
lds
pop
xchg
outsl
sahf
loopne
jecxz
xchg
pop
mov
lret
pop
fisubs
fs
les
push
mov
dec
dec
fisubrs
push
in
int3
push
cmp
sti
jmp
rorl
jns
sti
rclb
and
or
push
cli
fsts
inc
clc
mov
test
dec
inc
sub
xchg
jp
loopne
cmp
mov
mov
cs
lahf
leave
mov
mov
dec
cmp
jb
mov
and
in
push
stos
cmpsl
and
or
push
xchg
ss
push
add
pop
rcr
cmp
mov
shrb
bound
xchg
mov
test
push
jecxz
mov
pop
popa
jl
pop
loop
jno
idivl
push
xchg
xchg
cmp
fimull
dec
inc
mov
ss
pop
cltd
jb
mov
xor
jne
or
in
inc
cmp
ficomps
xchg
outsb
fiadds
sbb
or
fcoml
nop
xchg
sub
movsb
pop
imul
xor
lock
sub
push
sub
fcmovne
das
mov
push
lahf
cli
inc
push
mov
mov
enter
adc
add
xchg
pop
ror
in
icebp
cmp
daa
mov
mov
clc
cmpsb
subb
data16
dec
jge
cli
adc
call
or
sbb
iret
enter
jle
pop
push
jl
leave
stos
cmp
jno
ret
or
adc
mov
jmp
fnstcw
in
jae
insl
fdivr
mov
mov
cs
decb
xor
mov
mov
xchg
mov
test
fists
fwait
dec
dec
sti
push
mov
inc
les
in
scas
add
lret
mov
out
popa
mov
orb
lds
adc
outsl
inc
mov
or
mov
mov
lahf
adc
mov
inc
sahf
fidivrl
jns
andl
cltd
loop
mov
aas
testb
outsl
xchg
xchg
sub
bound
js
test
int
aad
push
js
js
rcrb
pop
in
imul
rcr
sbb
push
pop
pop
negl
sbb
push
cmp
sbb
sti
lds
jne
ja
stos
lcall
sub
test
fisttpl
jge,pt
push
lahf
loopne
adc
mov
mov
scas
cmpsb
test
stos
lods
inc
mov
test
inc
mov
rclb
cvtps2pi
nop
sti
repz
sub
daa
jmp
lea
add
xchg
inc
iret
mov
or
test
or
push
aam
xor
popa
xor
jae
sub
dec
adc
xor
add
dec
mov
sub
daa
mov
and
aaa
mov
cmp
movsb
iret
lea
icebp
filds
icebp
mov
testb
mov
in
shl
insb
dec
mov
out
pop
cltd
inc
inc
xchg
xor
adc
cmc
push
pop
enter
cmc
lock
icebp
lcall
adc
sub
xor
ss
xchg
lds
call
imul
sub
xchg
sti
mov
jne
pop
mov
int3
mov
dec
mov
cmp
divb
inc
adc
add
out
cld
dec
or
or
cwtl
aad
sarb
cmp
shl
push
sub
lds
mov
test
and
pop
dec
jns
push
push
test
jecxz
xchg
cmp
scas
xlat
xchg
nop
sbb
mov
cwtl
lret
dec
scas
adc
dec
leave
leave
sub
inc
mulb
rorb
lods
aam
repnz
and
jg
push
neg
push
pop
jns
dec
mov
xor
mov
lret
pop
inc
cld
dec
popf
shll
mov
cltd
mov
jp
jne
add
push
inc
and
push
jmp
loope
xchg
pop
sub
add
dec
ja
stc
jecxz
lret
push
call
mov
pop
cmc
mov
and
adc
sbb
pop
add
sbb
or
shlb
xor
mov
aad
xchg
rorl
inc
mov
cmp
cmp
jnp
fcomps
test
ss
dec
inc
test
mov
xchg
or
pop
arpl
idivb
fcmovnbe
lods
test
sbb
adc
sbb
jns
add
movsb
sub
push
sbbl
and
movsb
sahf
mov
pop
and
int3
jecxz
adcb
mov
in
mov
mov
lds
sar
inc
xchg
xchg
scas
aam
mov
fistl
mov
lcall
push
jp
insl
js
incb
lock
push
lock
push
dec
mov
imul
in
insl
bound
xlat
pop
cwtl
xchg
mov
adc
mov
mov
call
jae
pop
jg
xchg
test
or
xor
jnp
inc
jp
int
mov
sub
sub
das
mov
leave
in
cwtl
jg
jl
cmpsl
push
add
movb
cmpsl
pop
adc
daa
mov
mov
sub
cmc
lds
sub
cmp
call
sbb
push
sub
ja
stos
or
ret
sahf
jle
pusha
mov
into
leave
dec
push
insl
out
jno
fs
inc
mov
clc
inc
dec
mov
subl
jno
imul
add
popa
or
dec
pop
sub
sub
imul
lea
lock
mov
bound
clc
xor
jnp
jns
mov
lea
xchg
mov
inc
pop
hlt
test
out
enter
jle
mov
add
cmp
mov
and
mov
xor
lret
add
into
push
pop
jnp
jp
mov
mov
sbb
push
dec
push
addb
jge
cmpsb
and
and
mov
or
pop
mov
cs
lcall
adc
or
sahf
push
xor
idivb
xchg
test
xchg
call
or
rcll
xchg
loop
lods
or
popf
jl
pop
lret
or
cwtl
scas
rcrl
add
mov
into
in
jne
adc
jge
ret
aas
ficoml
mov
sbb
hlt
cmp
insb
movsb
sub
out
adc
nop
pusha
mov
scas
cltd
mov
test
jge
push
in
inc
lcall
movsb
cmp
inc
sbb
pop
xchg
fsts
jl
sbb
mov
jl
sbb
pusha
fucomp
sub
jnp
jnp
mov
fsqrt
andl
mulb
xchg
sbb
daa
fidivl
sti
inc
inc
mov
lcall
sbb
les
adc
mov
dec
shrb
adc
ljmp
out
mov
cmpsb
xor
mov
icebp
scas
cmp
js
testl
shll
and
or
shrl
or
arpl
sti
push
sub
gs
mov
das
mov
ffreep
xchg
cmp
in
adc
jge
adc
sub
cmp
xchg
hlt
lahf
pusha
out
push
popa
loope
adc
rol
in
pop
sbb
cmp
pusha
hlt
mov
jo
sbb
jno
mov
jg
add
or
std
push
aas
xchg
push
imul
insb
cmpsl
xor
scas
inc
inc
and
mov
cmp
push
mov
lods
popf
xchg
pop
mov
int
movsb
cmp
lret
mov
mov
stos
ds
cmp
scas
dec
sti
xchg
lcall
out
loope
mov
xchg
nop
icebp
js
mov
push
stc
sub
das
in
lock
mov
mov
and
aad
and
sarb
sbb
pop
lea
xchg
fsincos
xchg
fnstenv
xchg
ret
incl
xor
inc
shl
mov
test
add
pop
into
ror
popf
daa
mov
repz
mov
adc
mov
outsl
sbb
or
cmp
sbb
and
fsubs
jae
push
add
xchg
mov
popf
mov
jmp
adc
out
es
inc
cmp
cmp
mov
sahf
push
inc
fldt
mov
pop
repz
les
inc
ss
fidivrl
cmp
movsl
sbb
cwtl
jo
add
xor
mov
push
insl
mov
mov
inc
pushf
nop
test
outsb
push
adc
inc
movsb
lods
inc
loope
stos
and
xor
inc
cli
aam
mov
enter
divb
add
cmp
leave
sbb
out
push
ret
pop
ret
cmp
aaa
les
imul
cmp
xor
idivb
loope
sahf
fistpll
js
jle
xor
fucompp
repz
xor
js
jne
push
stc
test
int
sub
xchg
xchg
or
pop
repz
xor
pusha
stos
or
cwtl
or
mov
sti
push
and
xchg
add
imul
cmpsb
jg
in
cli
lods
std
cmp
pusha
pop
lds
push
pop
pop
fsubrl
xchg
adc
xor
lret
cmp
lret
push
jo
out
insl
mov
std
adc
pop
or
fadd
pushf
dec
fstpl
sarb
fisubs
fdivs
mov
cltd
daa
xorl
xchg
pop
mov
push
xchg
lods
pop
inc
mov
ret
enter
arpl
test
push
xlat
dec
insb
incl
test
mov
xchg
nop
pusha
insl
cmp
push
mov
inc
imulb
movsb
or
jno
jmp
sbb
inc
and
mull
lods
cmp
cmp
dec
add
test
xor
jns
cwtl
ja
mov
adc
dec
sub
loop
jb
lahf
std
mov
or
insl
ja
dec
in
mov
repnz
xchg
mull
insl
pop
lcall
scas
xchg
cli
shll
out
xchg
loopne
mov
shrb
push
dec
push
pop
ret
jbe
mov
imul
mov
data16
dec
push
test
mov
sub
movsb
das
lds
xor
adc
mov
leave
clc
xlat
xchg
fs
roll
pop
jnp
inc
cmc
bound
push
lret
pop
add
mov
cmp
push
cld
cmp
es
clc
fcompl
outsb
int
std
jno
int3
adc
dec
push
push
aaa
pop
inc
xor
fiadds
rorl
pop
push
int
rcr
fimuls
adc
sub
stos
jb
dec
scas
pop
iret
mov
aas
dec
mov
jnp
dec
cmp
cmpsb
mov
fsubl
in
inc
or
sahf
pop
jb
stos
mov
pop
xchg
jno
mov
lret
and
shrb
hlt
push
pop
inc
mov
nop
mov
in
faddl
test
or
push
push
sub
sub
xchg
xchg
adc
pop
add
jge
mov
jb
inc
mov
mov
idivl
gs
incl
cmp
add
stc
test
or
std
push
insb
lcall
dec
aas
pop
dec
add
add
jb
outsb
sub
enter
je
aas
push
push
dec
pop
xor
mov
jle
and
cmp
test
mov
orl
sbb
aad
fstpl
adc
sbb
cmpsb
jle
ja
xlat
mov
stc
pop
loopne
adc
and
in
lock
test
hlt
mov
inc
fstpt
mulb
add
dec
loop
mov
cmp
jbe
push
negb
and
dec
inc
cmp
or
out
repz
cli
pop
ljmp
adc
cmpsb
dec
cli
inc
add
mov
rolb
data16
push
push
scas
jp
aam
test
jno
push
xor
add
mov
xchg
add
sbb
jae
sub
jge
mov
mov
stos
aam
call
inc
inc
dec
ljmp
mov
mov
mov
lret
push
test
push
rcrl
cmp
push
movsl
sbb
xor
out
lcall
sub
std
lcall
xchg
or
test
sub
push
stc
hlt
pop
cmp
xchg
hlt
sub
repnz
push
clc
scas
inc
mov
mov
sbb
repnz
es
and
sbb
dec
pop
fmull
int3
cmp
push
das
jnp
jle
cmpsl
xor
sbb
or
mov
ret
call
rolb
inc
in
dec
xchg
xchg
mov
nop
dec
rolb
mov
hlt
xchg
out
mov
sub
movsb
sbb
loop
aam
push
in
imul
dec
lret
jg
es
ss
jecxz
and
cld
adc
push
dec
mov
mov
rolb
push
or
push
aaa
lods
loopne
scas
mov
mov
nop
aad
fnstcw
jae
xor
stos
hlt
ret
rorb
push
jl,pn
mov
mov
lcall
mov
imul
push
mov
xchg
repnz
jo
mov
inc
jmp
pop
mov
sbb
sub
js
popa
inc
imul
sub
stc
fidivrs
push
adc
cld
int3
mov
into
ret
stos
xchg
pop
adc
bound
xor
push
aad
movsb
ja
icebp
xor
push
hlt
jo
repz
mov
push
call
loopne
sbb
mull
std
dec
stc
sbb
aaa
sti
dec
xor
ret
cmpsb
loope
push
mov
jne
in
jbe
jge
mov
adc
mov
xor
xlat
and
js
cmp
jecxz
ja
cmpl
xchg
jl
lret
mov
or
andb
cs
movsl
out
ja
mov
dec
mov
fs
adc
lds
inc
xor
jae
and
out
jns
sbb
enter
pop
out
xor
xchg
outsl
ljmp
lret
stos
cmp
mov
cmp
inc
pop
rolb
gs
cmp
popf
or
push
mov
stos
sbb
pop
in
arpl
sbbb
leave
inc
stos
adc
sbb
idivl
aas
or
lcall
int
xor
in
xchg
push
dec
pusha
test
lea
testl
mov
ljmp
push
adc
fistpl
fistps
mov
fldenv
inc
mov
loopne
shl
popf
push
and
mov
pusha
inc
add
add
dec
mov
test
cmpsb
dec
insb
dec
jno
movsl
mov
es
cmpsb
xchg
xor
xchg
xchg
push
stos
push
jge
xchg
xor
push
push
lods
lods
xchg
sbbl
lds
jb
out
out
imul
cmp
or
arpl
mulb
adc
lea
aam
dec
dec
roll
dec
and
mov
fwait
gs
inc
pop
negl
sbb
mov
subl
sbb
out
sub
jae
sub
stos
arpl
test
lahf
outsl
mov
mov
loopne
dec
sarb
inc
cmpsl
sbb
pop
jle
mov
fisttpll
mov
jo
adc
fnstcw
jnp
pop
dec
lock
xor
mov
cmpsb
fsubs
bswap
cli
ss
mov
inc
aam
pushf
shl
orb
aaa
xchg
jle
mov
pop
cld
jnp
jmp
mov
mov
in
or
mov
lea
test
fdivs
inc
mov
push
in
jbe
or
mov
adc
daa
test
cmpsb
jp
pusha
pop
sub
add
pushf
sbb
sysenter
stc
ret
cmpsb
xchg
dec
cmp
or
xchg
push
cmp
fidivl
jl
addl
sub
xchg
pop
dec
push
sub
out
punpckhdq
dec
rolb
mov
xchg
mov
add
sub
js
js
loope
fcmovbe
jecxz
shrb
xchg
pop
sbb
push
xchg
imul
idivl
dec
cmp
pop
fs
test
mov
adc
arpl
mov
out
fcmovbe
ljmp
and
pop
sub
xor
les
jns
push
in
cmpsl
fcmovne
push
xchg
repz
inc
adc
pop
jae
or
xlat
and
cmp
pop
jmp
or
jmp
pop
test
std
mov
call
sub
mov
push
pop
xchg
mov
lods
cli
aas
aaa
scas
nop
jo
arpl
mov
adc
adc
add
dec
mov
mov
adc
test
repnz
call
paddq
fwait
push
push
addr16
into
out
popa
jge
ret
iret
cs
data16
rep
add
ss
xor
fwait
or
mov
pop
jne
push
xor
int
jl
pop
cltd
aam
mov
mov
rorb
lock
stos
adc
out
mov
in
pop
push
xchg
inc
sub
movsb
cmpsb
mov
push
fldt
mov
xchg
pusha
in
call
insb
push
jmp
ret
mov
fnstcw
ljmp
cmpsl
aad
adc
arpl
lret
mulps
gs
add
mov
pop
push
inc
clc
add
mov
cwtl
pop
xor
test
sub
nop
stos
mov
xor
pop
test
push
cwtl
stc
test
sbb
push
les
ds
jo
cs
dec
cmp
sbb
and
aas
insl
idivb
mov
push
int
jo
ss
shr
outsl
roll
mov
out
scas
fxch
test
inc
popf
xlat
mov
xchg
lds
aas
pop
push
imul
in
and
inc
outsl
icebp
iret
lea
xor
xor
hlt
out
sub
mov
mov
sbb
add
lret
ss
push
xchg
cltd
dec
pop
inc
pushf
adc
adc
mov
or
shlb
mov
pop
mov
daa
sub
pop
push
mov
adc
js
movsb
cmp
sbb
sub
xor
aaa
test
fwait
nopl
pusha
sti
xchg
out
adc
mov
test
xor
pusha
testl
rolb
xchg
int
or
ret
out
stos
jne
mov
jbe
xchg
ret
addr16
and
jae
jle
jmp
inc
cmp
jmp
outsl
and
test
lahf
add
loopne
icebp
movsl
sub
dec
test
pusha
dec
loop
push
xor
sarl
cmp
test
add
xor
insl
dec
jno
les
scas
ss
adc
pop
add
mov
shll
push
and
insl
xchg
add
jge
insb
fmulp
pop
xchg
xor
xchg
rcrb
ret
aam
or
jp
or
adc
sbb
cs
xor
and
bound
adc
sarl
inc
jmp
testl
mov
icebp
outsl
push
or
mov
inc
addr16
inc
rol
mov
iret
sar
std
xchg
and
mov
scas
icebp
sbb
ja
aad
cwtl
imul
pop
and
leave
mov
cmpsb
jl
leavew
add
sar
repnz
outsl
sub
or
add
xor
sub
pop
es
jnp
lahf
aam
mov
sbb
mov
sub
adc
add
in
arpl
sbb
in
mov
dec
mov
cmp
cmp
rclb
popf
add
cmp
jnp
jns
jb
or
and
bound
repnz
mov
push
jmp
cmpsl
aas
and
fsub
imul
scas
sub
insl
imul
into
and
and
ret
loopne
rcrb
adc
pop
mov
into
es
xchg
repnz
sub
cmp
dec
test
cmpsl
add
rclb
lret
lods
mov
inc
subb
sub
pop
fidivl
test
insb
xor
test
in
xor
addr16
push
mov
sbb
xor
test
pop
pop
jmp
and
xchg
fnstenv
mov
adc
or
mov
push
or
and
imul
inc
jnp
ret
mov
stos
sbbb
xchg
cmpsl
pop
scas
mov
sub
in
dec
movsl
shlb
stos
lcall
lahf
push
sub
popa
mov
ffree
hlt
pop
js
fildl
mov
adc
jmp
dec
xor
outsl
sbb
nop
sbb
xchg
inc
vmwrite
sub
xchg
scas
fwait
arpl
in
stc
and
xchg
jg
mov
punpckhwd
fcomps
mov
sbb
lcall
jp
jmp
or
lods
and
push
mov
out
js
sbb
dec
mov
xchg
int
arpl
jmp
leave
inc
sar
loope
test
cld
pop
adc
mov
imul
scas
mov
clc
ret
xchg
pop
test
lret
mov
negl
fcmovnu
cld
stos
mov
mov
mov
inc
arpl
icebp
cltd
mov
mov
mov
daa
imul
lea
out
xchg
call
lock
adc
jecxz
xchg
cmpsl
xor
add
or
hlt
ds
ret
aam
inc
adc
mov
rclb
xchg
repz
mov
sbb
je
add
jge
mov
arpl
rclb
jno
testb
pop
jl
stos
lods
mov
scas
mov
gs
sub
sahf
loope
test
and
pop
xchg
imul
lahf
inc
nop
pop
and
pop
pop
insb
sub
xchg
lret
push
loopne
fimull
mov
adc
sarl
int
push
push
inc
aad
in
insl
xor
movsl
push
orl
data16
sbbb
adc
push
popa
mov
aad
shll
add
int
xchg
push
push
pop
cmp
icebp
lcall
mov
xchg
test
xchg
pop
cwtl
mov
call
mov
outsb
mov
lcall
ss
fbstp
mov
fisttpl
mov
inc
ljmp
dec
repnz
adc
js
jno
inc
xor
mov
pop
inc
jmp
pop
stos
sub
pop
pushf
dec
inc
movsb
leave
push
push
imul
aaa
mov
push
hlt
adc
or
adc
mov
jae
in
fldcw
mov
add
push
adc
sbb
cmp
mov
daa
or
push
pushf
cltd
mov
pop
in
mov
mov
pop
mov
jg
mov
sub
jmp
movsl
and
fdivrs
sub
or
adc
xor
outsl
mov
xor
movsl
cmpb
cmp
dec
lock
imul
lret
sbb
inc
xchg
in
out
xchg
add
and
bound
mov
and
mov
cs
jle
out
jg,pt
jo
popl
in
clc
insb
add
repnz
aad
fcomip
xor
add
sub
push
xchg
xchg
outsl
jle
add
push
ds
mul
jns
orb
dec
fwait
repnz
divl
xor
mov
clc
aaa
jne
mov
pop
je
adc
jae
arpl
fstl
into
cwtl
mov
lods
test
or
divb
popw
sub
bnd
out
adc
cmp
mov
jmp
mov
mov
inc
shll
xchg
adc
bound
ror
xor
in
jg
das
xchg
ja
mov
gs
into
mov
xchg
ret
push
push
scas
out
xchg
lcall
cli
rcr
cs
sub
daa
mov
push
push
call
loope
inc
repnz
jb
pop
adc
stos
arpl
push
int3
lret
jo
add
mov
cmp
test
cmpsb
outsl
in
gs
push
nop
testl
xor
movsl
in
and
shll
and
adc
add
pop
push
dec
or
adc
sub
js
cmpsl
stos
and
popa
mov
mov
jo
xor
stos
push
out
pop
or
push
sbb
bound
or
pop
je
stos
cli
aam
jle
sbb
hlt
repnz
mov
rcrl
daa
mov
lret
in
jmp
cmp
fistpl
in
cmc
jae
sub
inc
aas
lgs
xor
mov
push
aas
lahf
dec
cmp
dec
or
cli
dec
outsl
cmp
and
ds
xor
push
or
mov
lcall
daa
dec
aad
mull
xchg
les
pop
pop
rorl
repnz
cmp
mov
mov
xor
and
dec
test
rorl
popa
lret
pop
sub
sti
cmpsb
imul
fistpl
jmp
pop
cld
lds
test
jnp
scas
fdivrl
jmp
in
cmp
pop
adc
xlat
cmpb
notl
xor
icebp
mov
inc
adc
jne
pop
movsl
scas
sti
ret
mov
xor
and
or
pop
sub
xor
sub
mov
lods
add
std
icebp
sbb
mov
out
loop
nop
mov
ja
imul
mov
mov
xchg
js
daa
and
add
fs
popf
cmp
mov
push
gs
push
and
mov
jmp
mov
imul
jecxz
and
stos
add
mov
ja
js
mov
mov
mov
repz
clc
ja
je
lds
jns
stc
cmp
aad
insl
fwait
dec
repnz
pop
lret
loope
adc
in
call
jecxz
adc
add
cli
out
dec
cmp
loope
pushf
inc
jbe
rol
das
stc
jb
adc
lahf
cmp
mov
add
insl
pushf
jg
and
cmpsl
pop
pop
popa
cld
lods
mov
imulb
in
add
addr16
aas
movsl
insl
mov
add
or
cmc
rcrb
mov
loope
popf
imul
pop
test
jnp
pop
stos
out
xchg
movsb
xchg
adc
divl
dec
scas
sbbb
cmp
or
in
jb
into
jo
or
push
pop
lods
icebp
lock
aam
inc
xor
inc
stos
mov
pushf
jp
jmp
stos
pop
int
imul
pop
ret
jle
or
sbb
adcb
subl
mov
jno
and
movsl
rclb
incb
pop
ret
xor
fistpl
stc
xchg
scas
and
push
adc
sub
pusha
push
mov
cmp
jno
sub
mov
push
pop
imul
sbb
stos
cmpsb
mov
out
pusha
iret
cmpb
sub
popf
inc
mov
mov
ret
into
repz
add
pop
pop
sahf
push
cmp
nop
test
sarb
daa
sarl
dec
or
cmc
dec
adc
push
out
mov
push
pop
inc
xchg
sub
push
test
sarb
pop
mov
xor
push
fcoms
and
inc
adc
sbb
sub
sbb
jmp
clc
fistl
popa
push
mov
popf
test
lock
cmpl
loopne
push
rorb
xlat
enter
and
cld
jo
data16
nop
and
dec
sti
mov
xor
nop
ss
mov
loope
lcall
je
ja
sub
iret
lea
dec
out
lods
dec
sbb
mov
jae
and
sub
out
or
pushf
imul
in
leave
jns
out
pop
xchg
adc
xchg
test
ret
addr16
push
add
inc
cmp
mov
jb
push
and
sti
test
cmp
mov
fbstp
imul
orb
aaa
sbb
pop
inc
fwait
not
push
leave
repz
out
call
push
sbb
xchg
out
mov
jno
cmp
xchg
mov
mov
mov
mov
pop
add
lock
push
dec
movsl
repnz
cli
cld
cli
shll
int3
xor
mov
sub
and
in
sbb
xchg
fidivl
jbe
cli
jl
test
sub
push
lods
popa
mov
inc
mov
fimull
daa
stos
push
in
xlat
cmp
clc
cltd
cmp
xchg
add
push
jne
int3
pop
dec
push
sub
add
jmp
call
lcall
and
mov
inc
aam
ret
cmp
xchg
pop
mov
ss
add
xor
mull
insl
scas
aad
inc
ss
sub
dec
ss
pop
add
loope
cmp
inc
fiadds
push
jmp
iret
sbb
dec
and
and
iret
mov
insb
stos
std
pop
out
sub
cmp
push
gs
setbe
jbe
inc
cmc
dec
jno
mov
xchg
dec
sbb
lcall
adc
dec
mov
das
fstpt
insb
call
enter
inc
cmp
lea
push
outsb
or
out
test
dec
inc
mov
and
adc
xor
lcall
push
push
cmp
roll
pop
mov
enter
data16
fldenv
popa
push
mov
loope
gs
jmp
xorl
add
cld
adc
xor
xchg
lret
xchg
out
enter
insb
pop
es
fdivrl
sub
mov
jge
cmp
mov
lret
dec
sub
and
std
push
pop
inc
jmp
cs
call
bound
lea
call
push
xorb
inc
sahf
and
in
mov
leave
std
cmc
andl
inc
test
xor
xchg
std
aaa
cmpsl
add
arpl
nop
dec
xlat
cmp
outsb
outsb
jae
mov
sub
aad
popf
add
push
or
mov
or
and
add
cmp
add
sti
jg
fldl
scas
add
xchg
sbb
mov
xor
jl
test
push
push
iret
notb
outsb
stos
xchg
and
xlat
xlat
stc
repz
xchg
fcomp
call
gs
lds
outsl
lret
or
sar
push
mov
jmp
es
test
inc
rcl
jb
arpl
mov
mov
and
sub
sub
push
stc
inc
fsubrl
add
pop
icebp
sti
sbb
cs
mov
aam
cmc
data16
fwait
ss
das
test
mov
lret
adc
popf
aam
mov
and
cmp
ja
dec
testb
dec
xchg
lret
sahf
pop
push
gs
hlt
adc
sub
aaa
call
pop
xor
pushf
pusha
outsl
mov
adc
inc
aaa
push
imul
ja
cs
mov
shll
mov
iret
fucomi
push
dec
jnp
das
mov
sub
mov
xor
idiv
arpl
add
lret
pop
xchg
mov
xchg
repz
pop
mov
mov
in
jg
mov
test
aam
ljmp
xchg
xor
jmp
mov
xchg
mov
in
adc
call
iret
rcrl
sub
ja
mov
mov
mov
ret
dec
pop
iret
inc
shll
js
xor
xor
push
cmp
data16
cmp
cmpsb
dec
add
add
cmp
mov
pop
dec
repz
xchg
loope
mov
out
test
inc
test
ja
cmpsb
pop
inc
enter
cmp
sbb
cmp
movsl
fisubs
in
or
ja
lods
xchg
int
sti
xchg
insb
jg
js
dec
and
jno
insb
xor
add
outsb
out
mov
call
mov
or
pop
cli
jg
sub
clc
mov
jl
cmp
add
mov
iret
ds
nop
inc
fdivs
push
xor
test
xor
push
adc
fs
mov
xor
roll
push
xchg
int3
sbb
subl
dec
aas
sub
xchg
cmc
test
mov
in
pop
and
or
sub
push
cmp
mov
push
or
fs
mov
xor
jae
mov
xchg
add
stos
cmpsl
or
cli
scas
mov
pushf
cmp
sbb
mov
sub
add
nop
insl
daa
movl
lret
ja
mov
mov
lock
jb
mov
sub
cmp
add
jbe
out
lahf
push
ret
mov
cmp
lods
aaa
jns
ss
sub
ss
nop
inc
add
roll
sub
das
mov
adc
pop
loop
push
sub
pop
and
sub
decb
sub
rclb
mov
jp
insb
pop
jmp
sbb
dec
xchg
cmp
addr16
jns
mov
dec
lods
sub
scas
fwait
xor
gs
mov
rclb
stc
or
insb
push
push
shll
int3
jne
fstps
add
xor
dec
std
in
inc
gs
push
or
add
pushf
inc
jae
xlat
sbb
and
loop
adc
outsb
dec
iret
fldl
aad
das
adcb
sbb
shll
dec
insb
jae
call
loope
jae
pop
scas
aas
jnp
cmp
mov
jb
call
out
enter
stos
mov
shll
mov
fimuls
in
pop
inc
arpl
add
call
das
outsl
xchg
xor
loope
out
ss
insl
ret
jae
mov
mov
testb
dec
ja
fs
repz
rorb
mov
fcomp
mov
mov
into
or
and
mov
es
repnz
cld
adc
and
inc
jge
test
sbb
in
or
mov
or
ss
leave
adc
xchg
fistpl
inc
add
and
push
adc
adcl
mov
fwait
and
rcr
jae
lods
push
push
out
xchg
adc
sub
push
cmpsb
mov
push
dec
push
add
into
stos
stos
xchg
xchg
adc
mov
je
fs
adc
jmp
mov
xchg
pusha
aad
das
jecxz
into
xchg
jecxz
loopne
xchg
jle
and
mov
push
cmpsb
jge
pop
push
iret
mov
pop
mov
xchg
pop
cmp
push
xchg
lods
call
idiv
inc
push
shll
mov
and
test
imul
ss
lds
lods
ret
lods
push
cmp
or
bound
and
shll
xchg
outsb
arpl
aas
outsl
push
js
cwtl
rep
sbb
mov
lods
lock
jmp
mov
sub
test
adc
xchg
das
mov
popf
jbe
push
fsubl
adc
cmp
mov
mov
ss
inc
dec
pop
movsb
pusha
addl
mov
je
call
push
xor
jo
notl
fidivl
in
and
testl
jbe
andb
stos
imul
mov
lods
mov
mov
int
and
addl
dec
clc
xor
fists
lods
mov
dec
lds
cmp
inc
jb
ds
vmwrite
inc
mov
mov
mov
push
aam
jb
adc
les
sbb
and
push
inc
fisubl
and
push
xlat
je
adc
out
mov
nop
dec
jecxz
inc
outsl
mov
mov
jge
out
popf
dec
push
mov
mov
in
lods
sub
add
mov
xchg
sbb
mov
in
test
cmp
cmp
std
xor
comiss
mov
inc
mov
sub
cmp
repz
cmp
mov
cmp
cmpsl
mov
clc
mov
clc
jb
mov
ret
mov
cmp
push
mov
or
popa
pushf
pop
adc
adc
enter
divl
xchg
mov
fidivrs
shll
adc
movsl
add
mov
xchg
cmp
xchg
adc
cmpsb
jecxz
adc
mov
bound
or
roll
pop
insb
cmpsl
mov
pop
out
mov
inc
lcall
xchg
xchg
push
adc
add
movsl
xorl
imul
icebp
cltd
in
jnp
inc
mov
addb
ret
loopne
mov
dec
out
inc
lahf
sub
push
xor
sbb
into
jbe
adc
out
adc
pop
mov
add
mov
cmp
insb
jp
imul
add
cli
loope
icebp
scas
pop
mov
imul
cmp
or
outsl
and
pop
int
into
xchg
xchg
add
jmp
add
lods
lock
pop
mov
mov
mov
sub
js
and
addl
pusha
lret
shll
pop
adc
testl
ficomps
jbe
push
fdivrs
mov
aam
mov
jae
inc
xor
push
je
jne
test
fidivrl
adcb
ret
sbb
or
mov
ss
xor
cmpsb
mov
mulb
dec
mov
mov
insb
sahf
das
pop
push
test
and
xor
xor
sbbb
xor
push
xchg
std
mov
xor
xlat
push
xor
addr16
sti
and
jne
inc
pop
sbb
xchg
dec
jl
mov
pop
cmp
mov
out
mov
inc
lahf
jge
jmp
push
jbe
or
jo
loopne
loope
ja
jl
sub
and
mov
dec
jae
pop
xchg
jmp
jge
push
ror
jb
push
out
and
mov
sub
fs
jl
cmpsl
mov
inc
pop
aaa
push
mov
inc
pop
mov
cwtl
sarl
aas
outsl
mov
imul
lods
adc
sbb
into
xlat
orl
lcall
into
fwait
jo
adc
stos
jmp
dec
outsb
inc
nop
inc
fmulp
out
sub
mov
or
xor
fs
sbb
push
push
aas
outsl
es
lock
aad
sbb
mov
sub
add
push
adc
dec
fs
orb
fdivrl
mov
lahf
cld
add
movb
fst
ret
nop
lds
push
xchg
inc
xchg
adc
dec
jge
in
fucompp
or
shl
add
adc
fstl
and
sub
xchg
mov
mov
pop
std
cli
jmp
orps
cwtl
clc
dec
sub
or
decb
dec
inc
lahf
stc
mov
aad
mov
test
movsl
adc
cmp
or
stc
mov
out
fadds
pushf
sub
mov
gs
into
pop
ds
fcomp
and
mov
sub
and
or
inc
lret
aam
xchg
shl
adc
stc
js
ljmp
fs
jecxz
inc
roll
and
mov
xor
cmp
adc
adc
xchg
jecxz
gs
xor
sbb
and
divb
nop
mov
fiadds
xchg
pop
mov
adc
push
pusha
enter
aaa
cld
scas
sahf
xorl
addl
add
rolb
aas
fwait
push
fisubrl
fisubrs
add
mov
and
lahf
mov
test
stos
aas
stc
dec
mov
cmp
adc
jno
xchg
mov
and
mov
adc
cmp
repz
lods
cmp
ret
ja
jp
pop
aaa
xchg
pop
jl
loope
lds
nop
mov
xchg
repnz
pop
shll
ret
movsb
or
popa
dec
pop
out
push
cmp
ljmp
adc
cmpsb
ljmp
lret
rorl
mov
addb
imul
mov
divb
inc
jae
xchg
xchg
mov
lds
or
and
repz
int3
js
sbb
lock
sub
rcr
icebp
adc
outsl
adc
pushf
pushf
mov
xchg
xor
cmp
mov
cmp
xor
mov
lods
jno
add
dec
cld
jmp
jbe
push
pop
mov
xchg
insl
fildll
sbb
daa
leave
mov
lea
push
xor
pop
iret
out
cmp
pushf
xlat
mov
jp
hlt
fildll
or
fcomp
lods
in
mov
add
loopne
adcl
mov
frstor
xchg
jle
jl
add
fs
lret
sub
in
or
push
pop
lods
rorb
or
sub
mov
xlat
outsb
call
pop
jg
mov
sub
lods
shll
push
lods
gs
fisubrl
inc
mov
inc
mov
jle
enter
scas
inc
fwait
lods
test
and
aam
div
aaa
adc
outsl
lea
ss
mov
mov
int
sbb
hlt
stos
add
mov
into
mov
push
mov
pop
out
sub
push
xor
adc
shll
mov
popa
and
jg
hlt
or
mov
push
inc
fwait
xchg
orb
or
or
faddl
icebp
mov
xlat
mov
inc
cmc
jg
ret
rcrb
sub
adc
adc
mov
pop
insl
cmp
out
mov
xchg
mov
sub
xor
add
push
lahf
jp
jecxz
das
inc
jg
adc
mov
and
add
orb
stos
cs
push
in
les
adc
out
ljmp
or
mov
push
sahf
scas
inc
add
sub
mov
idiv
addr16
xlat
int
sub
pop
add
inc
sbb
inc
mov
call
and
sahf
fs
sub
push
or
icebp
pop
cmp
adc
xchg
mov
inc
jnp
xchg
pop
and
sar
jecxz
out
mov
aaa
push
jp
aad
outsl
imul
and
sub
ret
jge
cmp
and
pushf
pushl
jle
iret
in
addr16
xchg
jmp
jnp
fwait
lret
inc
xchg
mov
insb
aas
cmpsb
in
ja
mov
loop
mov
cmp
loopne
in
or
arpl
insl
push
sub
sbb
jg
test
mov
jae
add
clc
sub
ljmp
out
pushf
xor
sbb
add
fdivr
icebp
jle
rorb
sub
jg
loopne
mov
xor
aaa
fwait
xchg
inc
push
aaa
sahf
pop
aam
cmpsl
iret
negw
pushl
adc
faddl
cwtl
mov
jl
pop
add
outsl
out
xchg
repz
adc
sbb
dec
cmp
mov
mov
mov
sbb
adc
test
test
cld
fwait
iret
xchg
ss
scas
in
jp
lock
adc
adc
popl
mov
dec
pop
adc
mov
dec
add
jb
loope
mov
mov
push
addl
rcrb
mov
sub
mov
xor
les
ret
test
btc
xchg
pop
ja
mov
cmc
popf
xchg
mov
adc
push
mov
mov
push
cmp
ljmp
cli
jp
mov
dec
pop
jo
sub
cmp
rcll
xor
pop
push
pop
push
pop
adc
imul
xchg
outsl
js
bound
mov
sbb
push
jb
int
aaa
bound
dec
test
adc
aam
inc
gs
sbb
test
test
call
sbbl
sub
dec
xor
nopl
mov
or
stos
add
push
sahf
ja
stos
mov
insb
and
lea
dec
imul
in
adc
mov
jne
sbb
xchg
mov
lcall
imull
pop
in
xor
sbb
fwait
jge
shl
lret
pop
lds
jo
fwait
clc
pop
xlat
lcall
and
pop
int
cmp
mov
sbb
jl
leave
and
pop
inc
popf
and
daa
sbb
adc
xchg
inc
adc
stc
dec
xchg
roll
fisttpl
in
lret
mov
rclb
add
jmp
add
lods
jmp
sbb
xchg
mov
pop
jg
pop
sbb
sub
adc
out
adc
ret
nop
out
cmp
sub
pushf
roll
push
pop
push
mov
subb
enter
addr16
mov
pop
sbb
nop
cld
mov
cli
cltd
sub
iret
pop
or
fwait
aas
das
cmpsl
push
push
or
sbb
pushf
cld
mov
rolb
or
pop
fwait
ja
loopne
gs
jg
jecxz
or
mov
and
sub
xor
sub
or
shrl
scas
shrb
popa
jecxz
dec
call
scas
jl
add
shrl
lret
addb
xor
lret
lods
aam
and
aas
stc
divb
jmp
inc
and
dec
gs
inc
lcall
add
bound
jmp
xchg
push
ds
lcall
sub
roll
aad
and
insb
scas
push
pop
aas
mov
cmpb
aam
mov
pop
sbb
dec
pop
hlt
jg
clc
fsubrl
arpl
dec
inc
jne
cmp
inc
out
dec
inc
test
loopne
mov
andl
adc
lds
sub
mov
aad
mov
mov
inc
dec
loope
mov
pop
jns
push
rclb
and
mov
lcall
imul
std
dec
cmp
jne
push
insl
repz
shlb
pop
bound
hlt
std
gs
or
gs
outsb
hlt
or
sti
pop
jmp
push
das
repz
push
imul
jmp
xchg
rorb
int
inc
subl
add
jmp
inc
push
shrl
push
cs
and
pop
sbbb
aad
fldt
sub
aam
sub
lock
pop
ficomps
sahf
sbb
inc
mov
xor
lds
jmp
cs
fstpt
mov
fldcw
push
fnstenv
lahf
fbstp
cltd
lea
sub
cmp
in
fcomp
sbb
sbb
repz
cli
push
or
shr
lcall
test
push
mov
dec
aam
mov
cmp
sarb
push
cli
push
inc
inc
das
pop
iret
or
dec
hlt
in
scas
inc
or
inc
mov
push
scas
inc
lock
mov
mov
test
pusha
pop
xchg
mov
gs
into
push
and
inc
mov
shlb
outsl
cmp
sub
repz
jns
scas
pop
insl
pop
xlat
mov
fwait
cmpl
sub
add
push
ret
mov
xchg
inc
leave
js
pop
xor
push
cmp
mov
fucomp
mov
gs
jge
add
pop
push
sub
xor
js
pop
ret
adc
loope
jnp
cmp
fs
lods
nop
idiv
and
stos
lds
pop
movl
jbe
sbb
rcr
sub
mov
xor
sub
test
insb
rcl
fbld
add
cli
push
inc
jecxz
add
imul
cmpsb
mov
ret
add
lods
push
mov
dec
mov
addl
in
cs
loop
popf
mov
inc
and
sub
jmp
mov
and
shll
pop
leave
push
xchg
xchg
and
xchg
mov
jne
jnp
sarl
insl
xchg
into
and
inc
faddl
fmulp
pcmpeqw
mov
aas
dec
pop
in
cltd
outsb
cmp
xchg
sub
dec
mov
out
or
sbb
mov
mov
jo
fcoml
sub
cmp
push
shl
add
mov
cmp
xor
mov
or
sub
les
jp
push
jp
mov
xchg
xor
adc
adc
push
mov
into
movsl
in
int3
push
jge
fldenv
and
jl
push
cmp
adc
arpl
inc
ret
lcall
ret
mov
and
dec
hlt
xchg
pusha
dec
jle
cmp
setnp
adc
in
movsb
out
out
stos
je
add
ret
fistpll
repnz
cmp
mov
mov
xor
cld
flds
jae
jno
cmc
push
inc
daa
mov
and
add
ret
inc
mov
add
scas
shrl
mov
push
xlat
pushf
pop
mov
cld
insl
pop
xchg
cltd
pop
dec
adc
popa
pop
loop
dec
arpl
stc
push
imull
inc
mov
mov
pop
adc
movups
mov
push
adc
fbstp
iret
outsl
cltd
cmp
jge
test
cmpsl
sub
mov
fsub
push
dec
cmp
das
push
mov
lahf
and
mov
repnz
loop
mov
mov
nop
push
or
movsb
paddusw
xchg
add
sub
out
sbb
gs
pop
mov
sbb
jle
jg
mov
dec
mov
push
rdpmc
andl
xor
cltd
dec
or
addb
jnp
cmc
div
fcmovnb
in
sub
enter
es
or
jae
ss
daa
push
inc
and
stc
pop
xchg
inc
xor
xor
xchg
jg
pop
push
loop
jl
mov
fidivrs
adc
sahf
cmp
xchg
rorb
jnp
ja
hlt
nop
dec
sbb
push
test
xchg
mov
fbstp
arpl
in
add
and
and
insb
mov
jle
daa
xchg
cli
xchg
inc
insb
mov
mov
punpcklwd
pop
add
lret
sub
inc
sub
pop
and
orb
sub
ret
stc
fdivp
stos
shrb
sbb
push
jnp
es
mov
scas
jecxz
dec
jae
movsl
ja
loop
pop
add
rcll
inc
cltd
nop
pop
loop
test
pushl
gs
and
xor
jno
insl
cmp
fistps
fisubrs
movsb
getsec
mov
mov
js
push
stc
push
test
ss
push
nop
mov
sahf
test
popl
mov
mov
xchg
cwtl
push
cs
push
mov
sub
in
inc
in
add
xor
cmp
mov
mov
inc
mov
mov
or
pop
cmpsl
lods
mov
mov
or
mov
jne
out
push
push
sbb
jl
and
xor
add
cmpsb
pop
test
mov
sbb
jo
xchg
add
jae
out
push
dec
pop
out
mov
mov
enter
repz
dec
pop
into
push
xchg
push
incb
sar
cmp
in
sbb
adc
cwtl
lods
dec
jmp
mov
sub
and
mov
repnz
movsb
mov
xchg
mov
jle
sub
pop
or
std
subl
outsb
addl
popa
xor
nop
inc
ret
ja
and
sbb
das
fimuls
cmp
jl
cmp
lret
push
les
in
jmp
and
xchg
adc
jle
push
jb
add
cmp
xlat
cmp
sub
mov
and
cmpsb
mov
xchg
cltd
mov
cmp
test
jmp
add
lea
ljmp
inc
cmp
mov
mov
and
dec
ret
test
cmp
fsubr
cs
es
xchg
inc
mov
adc
dec
in
xchg
xor
mov
cmovo
xor
push
sbb
inc
stos
mov
mov
pop
jbe
sti
or
adc
mov
push
sub
and
clc
out
sub
push
adc
outsb
mov
data16
push
xor
out
mov
test
icebp
mov
mov
or
fmull
sub
lcall
loop
incl
dec
cmc
lahf
xlat
hlt
int3
lea
jb
xchg
lcall
sub
push
xchg
sbb
popl
imul
mov
and
arpl
add
addr16
jno
cmp
outsb
jl
fcmovbe
icebp
mov
fs
sbb
jmp
ret
clc
add
inc
mov
stos
jmp
sbb
pop
jo
xchg
mov
jbe
and
adc
call
xor
loope
js
test
fldl
ljmp
xor
push
mov
movsl
lcall
sbb
mov
sbb
jae
repnz
lds
enter
fldcw
sbb
add
test
jmp
out
xchg
mov
icebp
out
xchg
adc
lea
cwtl
push
mov
cmpb
push
push
jb
addl
push
sbbb
jbe
mov
or
jb
aam
push
popa
inc
gs
fcomps
icebp
lea
jo
jns
or
sub
sbb
rolb
aas
xchg
cmp
add
imul
mov
push
mov
jb
cmp
and
xchg
xchg
fistpll
lods
bound
std
cmpsl
inc
xor
pop
pop
add
sbb
push
addr16
add
and
rorl
mov
jecxz
pop
sbb
or
icebp
nop
lahf
insb
lds
mov
sar
jb
push
in
xchg
xchg
lret
jle
push
enter
pushf
sub
xchg
add
hlt
dec
cmp
imul
push
mov
je
in
xchg
jp
das
mov
imul
sbb
repz
mov
dec
xchg
int
push
jne
fsubl
test
test
pop
cmc
xchg
xor
jmp
aaa
test
jl
sti
incl
cli
and
jb
sub
das
inc
call
inc
addb
fstl
xchg
xor
adcb
mov
test
daa
clc
fwait
repnz
sarb
xlat
iret
or
mov
jmp
arpl
imulb
mov
dec
out
mov
push
mov
adc
sub
cmp
mov
or
ret
mov
mov
add
or
fisubs
call
mov
ljmp
test
cs
or
and
lret
push
and
or
jg
mov
out
adc
jmp
push
or
sub
stos
pop
pop
in
cmp
push
pusha
jp
mov
test
xchg
test
pop
std
ds
fldt
dec
pop
subb
mov
lahf
inc
xor
loop
enter
xchg
and
inc
sbb
imul
push
imul
rolb
ss
xchg
mov
ret
orb
nop
fldenv
push
stos
sbb
es
push
pop
mov
push
inc
cmp
inc
xor
jo
pop
out
cmp
data16
xor
dec
out
jb
lods
cli
cmp
outsb
dec
push
cmpb
mov
popa
in
pop
push
or
jle
sarb
mov
fucomi
sbb
sbb
dec
jne
push
andb
cltd
lea
and
lods
mov
xchg
jl
push
hlt
mov
jl
or
push
cmp
popf
lods
push
or
mov
insb
or
shlb
jo
push
aas
push
dec
loope
test
out
pop
fiadds
lret
mov
into
add
je
out
push
dec
dec
das
fucom
cmp
jo
xchg
mov
pop
inc
outsb
mov
ret
sub
push
push
ss
sbb
lods
fistps
ds
mov
sbb
movb
mov
sti
test
push
push
adc
jmp
dec
test
imul
insl
pop
in
adc
cmp
incl
jno
push
lods
arpl
into
and
test
mov
subb
jg
mov
push
insb
outsl
mov
stos
jae
push
das
sub
jne
loop
fs
dec
aaa
ss
xlat
ret
add
std
cmc
pop
ds
add
ljmp
or
jl
mov
inc
es
imulb
notl
sbb
pop
mov
fldl
stc
xchg
add
mov
into
xchg
roll
jnp
imulb
xchg
mov
pop
xlat
pop
cmp
mov
pop
and
push
in
out
cmp
test
and
and
mov
aas
movsb
adc
push
adc
jle
mov
ds
loope
data16
dec
mov
ja
sub
pusha
sar
jmp
jo
dec
int3
pusha
repz
dec
jecxz
dec
add
xor
movsl
repz
pop
push
in
aam
and
enter
mov
jl
sbb
jbe
mov
adc
pop
call
lods
push
xchg
out
inc
push
mov
dec
or
enter
movsb
js
stos
and
or
in
mov
cltd
jge
mov
mov
mov
push
ja
cmp
lock
rorl
sti
dec
lahf
fbld
mov
sti
insb
loope
test
pop
test
inc
lods
fnstcw
push
push
jbe
gs
or
push
push
inc
icebp
lods
pop
or
xchg
insb
and
inc
roll
testb
cltd
hlt
in
je
rorb
lods
roll
xchg
sti
inc
rolb
outsl
and
add
mov
andl
push
pop
xchg
cmp
in
sub
push
jns
mov
pop
jg
push
les
lea
nop
dec
fstps
inc
cwtl
sbb
stc
out
movsb
lcall
mov
fdivrp
mov
loope
inc
push
pop
scas
dec
dec
mov
pop
movsl
aad
mov
cld
mov
pop
pop
mov
imul
or
sub
jns
and
mov
mov
popa
int3
mov
xchg
sub
mov
movsb
hlt
pop
add
push
jp
idivl
loop
adc
pop
mov
popf
push
icebp
pop
jecxz
into
xlat
dec
das
mov
xchg
mov
inc
jae
insl
sbb
mov
movsl
loopne
and
lret
xor
adc
xor
out
outsl
scas
push
push
mov
sahf
cli
push
loope
scas
std
pop
adc
sbb
mov
dec
xchg
arpl
enter
into
dec
arpl
jb
mov
mov
mov
imul
sub
out
mov
cmp
mov
push
mov
orl
lods
mov
jle
inc
dec
sbb
pushf
jp
loop
fsubs
sbb
nop
add
pop
jo
fiadds
cmp
int
jno
ret
insb
insb
fstpl
in
aad
jo
jmp
sub
push
dec
les
lods
or
push
push
sub
or
jae
sbb
rorb
mov
pop
cs
jecxz
jnp
stos
or
jecxz
lea
lret
aad
mov
jae
cmpsb
jle
add
cs
jb
sahf
insl
dec
sbb
in
pop
test
adc
lcall
lahf
fmuls
outsb
sbb
fldcw
mov
scas
outsl
dec
ja
flds
in
rorl
imul
or
fwait
loopne
mov
adc
outsb
jbe
fstl
pop
dec
mov
jo
add
xchg
enter
mov
xchg
lret
sub
jecxz
arpl
xor
or
or
adc
ficomps
inc
xor
out
js
pusha
lods
pop
jns
adc
add
cli
push
sarb
stc
loopne
cmp
add
push
and
fbld
inc
xor
xchg
mov
andb
call
or
xchg
data16
push
jmp
sbb
xchg
fsts
xlat
xlat
decb
mov
sub
dec
or
xchg
stos
mov
sub
and
or
addr16
mov
in
inc
sbb
sub
aaa
movsb
dec
cwtl
add
add
lcall
adc
add
loope
shrl
stos
mov
inc
pushf
xor
in
out
pop
sub
stos
ds
jecxz
cmp
push
sbb
inc
fdivl
xor
lret
or
loope
adc
inc
loopne
ds
icebp
push
outsl
int3
cld
or
insl
es
jp
outsl
push
scas
dec
fnstsw
nop
sbb
rdtsc
push
loope
push
stc
jge
sub
loope
mov
sbb
bound
leave
mov
jp
inc
inc
inc
adc
lret
out
jl
mov
adc
out
loopne
inc
stos
in
pop
xor
jbe
inc
xchg
dec
add
sbb
in
pop
sub
mov
test
mov
ljmp
imul
add
lods
mov
push
pop
sbb
jge
xor
mov
inc
cmp
and
lea
mov
scas
push
sub
hlt
es
or
cmpsl
push
ja
pop
inc
daa
push
or
orl
movsb
mov
pop
dec
push
lock
xchg
cld
sub
sub
pop
arpl
dec
jo
std
dec
dec
fucomp
das
in
push
cli
repnz
pop
dec
jp,pt
loop
pusha
push
dec
mov
xchg
inc
sub
xchg
mov
addr16
pop
cmc
lock
notl
test
jo
les
jecxz
sbb
pop
pushf
mov
mov
and
in
and
repnz
jg
push
sub
xor
out
sbb
aad
scas
leave
fsubrp
aam
dec
incb
jmp
mov
test
scas
cmc
arpl
sbb
js
cmpsl
add
rclb
mov
jno
stos
mov
jmp
aas
pop
gs
test
jb
movsl
jg
arpl
repz
push
loop
dec
repnz
ficomps
sbb
imul
mov
inc
out
mov
add
dec
lcall
push
push
out
loopne
repz
sti
ds
and
lock
add
mov
jmp
dec
test
mov
push
cltd
jbe
mov
or
push
mov
mov
ds
jmp
dec
push
rcr
pop
adc
dec
inc
mov
pop
mov
add
cmp
stos
pop
fidivl
leave
pop
push
dec
rolb
call
push
lods
pop
mov
insl
enter
xor
mov
jae
ficompl
nop
into
fsubr
add
push
jo
pop
scas
movsl
and
scas
loop
insl
pusha
fldenv
stc
fbstp
in
and
adc
mov
and
lahf
sbb
inc
je
adcb
push
pushf
dec
sbb
jns
loop
hlt
lods
xor
je
cmp
sbb
cmp
out
jmp
testl
imul
repnz
mov
shll
sarb
and
es
xor
lret
imul
sbb
jmp
push
repnz
sbb
add
fwait
lods
adc
xchg
sahf
iret
push
cld
xchg
lock
rolb
cs
sti
cmpsb
scas
mov
pop
cwtl
dec
xlat
mov
jbe
mov
or
cs
hlt
adc
dec
mov
gs
sub
enter
shrb
mov
push
or
xor
insb
sub
fstpt
imul
adc
loope
pop
xor
sti
sbbb
int3
dec
mov
cwtl
faddl
sti
test
cltd
aad
out
sub
pop
loope
cli
adc
aas
cmp
xchg
mov
add
push
xor
xor
pop
fs
jne
and
arpl
dec
mov
jecxz
andl
loopne
inc
jae
xchg
and
enter
push
fisttpl
mov
cltd
ret
push
lea
pop
push
popf
dec
pop
je
out
fstpt
and
or
push
aas
mull
lcall
inc
in
mov
pop
data16
loopne
mov
mov
sub
in
mov
fildll
or
inc
inc
jecxz
ficomps
cmpsb
dec
jns
dec
mov
popf
xor
outsl
push
adcb
incb
jecxz
pop
arpl
mov
dec
mov
push
pop
jle
pop
or
xchg
insb
pop
mov
xlat
mov
addl
dec
mov
add
cmp
mov
dec
jbe
dec
cmp
jmp
mov
cmp
cmp
jbe
sbb
sbb
fdivrs
outsb
out
lahf
pushf
mov
lods
insb
outsb
or
ds
cwtl
jb
sti
mov
and
popf
cs
stos
mov
sarb
or
sub
and
mov
inc
jp
mov
ja
pop
inc
rcl
shl
sbb
push
mov
or
sbb
jp
ds
cmp
das
jecxz
mov
xor
lahf
fcom
sub
sub
out
pop
outsl
sbb
aad
stc
insl
inc
mov
or
lret
push
pop
mov
mov
push
icebp
movsb
and
pop
int3
push
xor
in
imul
scas
test
mov
lock
cmp
call
mov
outsl
mov
icebp
cmp
out
push
and
pop
push
mov
loope
arpl
imul
mov
mov
jmp
xor
pop
data16
dec
ret
mov
ljmp
aas
loop
add
inc
mov
mov
mov
cmp
cmp
xchg
sbb
int3
ljmp
mov
or
or
xchg
js
adc
ret
and
push
movsl
adc
inc
enter
outsl
outsb
inc
jp
cmp
jno
shrb
pop
cli
jmp
dec
pop
xor
or
in
outsl
frstor
out
sahf
add
sbb
loop
cmp
or
mov
mov
outsl
jl
sub
and
jp
dec
in
mov
push
scas
push
sbb
mov
push
dec
add
push
loopne
sub
pop
pop
dec
jno
inc
adc
jns
pop
fisubrs
dec
test
mov
pop
mov
push
cmp
fldcw
jo
fstps
or
or
push
inc
fwait
jns
pop
int3
jae
cltd
mov
test
test
fs
dec
sub
cmp
push
in
jle
ss
dec
fdivr
mov
hlt
add
cmp
ljmp
pop
xchg
ss
xchg
push
fwait
mov
movsl
aam
push
sbb
and
inc
or
repz
xchg
fsubs
in
lahf
stos
insb
inc
ljmp
cmp
xchg
sarb
push
mov
rol
outsl
jbe
cltd
rclb
daa
xor
xor
rorl
mov
sub
dec
mov
clc
xchg
pusha
mov
mov
mov
push
sub
sbb
icebp
push
imul
push
lds
int3
stos
lock
mov
sbb
cmp
pusha
and
fbstp
mov
jmp
into
sub
sbb
mov
ss
jno
imul
stos
jge
lods
pop
mov
fldenv
mov
outsb
negl
lods
std
xchg
push
cmpsb
cmp
lods
push
sub
subl
divl
rolb
mov
cmpl
xchg
mov
daa
push
stc
pop
push
arpl
lock
mov
pop
push
mov
jne
mov
push
popa
aad
inc
cld
test
sarl
mov
ret
cmp
fdiv
cwtl
mov
inc
test
sub
daa
test
xor
and
dec
xchg
lahf
decl
cmp
frstor
mov
ds
jns
sub
pusha
mov
mov
test
push
cmpl
adc
adc
mov
jno
clc
mov
mov
icebp
cltd
pop
mov
out
orb
rcrb
loop
jo
pop
arpl
cmpsl
or
leave
sbb
push
repnz
xor
push
mov
lcall
sbb
rorl
mov
cli
fwait
add
daa
cld
cmpsl
mov
mov
imul
xor
mov
movsb
sub
lock
xchg
incl
mov
jg
mull
pop
pop
push
movsb
mov
jmp
xchg
sub
sbb
lret
xchg
jmp
outsl
sbb
push
add
nop
test
mov
cmp
lret
push
or
push
cmp
enter
xchg
xor
mov
pop
sbb
sar
push
movsl
aas
cmpsb
cmp
mov
sbb
dec
in
imull
loopne
divl
outsb
mov
jo
loope
stos
lods
mov
popf
push
sti
into
adc
cli
jmp
dec
out
cli
mov
xor
ds
cs
sbb
cmpl
ret
mov
jmp
push
cmp
sbb
imul
cmp
rcl
in
popf
inc
icebp
gs
inc
insb
jle
inc
je
add
xor
inc
fildll
aaa
stos
out
mov
mov
fiaddl
adc
and
jae
ds
mov
test
inc
sbb
int3
pop
in
sub
hlt
jbe
jle
mov
ret
add
out
hlt
es
adc
in
decb
mov
aaa
shll
js
fildl
ret
mov
or
pop
les
into
gs
jl
mov
dec
add
daa
and
mov
push
sahf
fsubr
cmp
in
repz
jle
add
cwtl
push
outsl
mov
lret
stc
imul
add
dec
lret
jg
and
aas
in
enter
pop
stos
outsb
pushf
push
leave
mov
jecxz
and
xchg
xchg
push
push
daa
pop
movsl
mov
not
push
clc
cmpsb
mov
popa
cld
mov
push
hlt
inc
mov
xor
dec
xchg
jb
hlt
je
cmc
insb
and
sub
xchg
je
fisttpl
jg
mov
cmc
bound
out
shlb
cmc
not
xor
xchg
stos
lea
test
popf
cmp
cmp
jne
push
iret
ror
ret
fdivrl
dec
add
sub
cmp
sbb
sbb
int3
les
das
orb
lock
lods
xor
jno
mov
insb
mov
inc
imul
jl
sub
inc
popa
das
add
add
push
cmp
imul
adc
mov
es
mov
jmp
mov
test
cld
adc
daa
into
dec
adc
pop
pop
pop
dec
fstpl
cmpb
xchg
icebp
iret
fsts
gs
xchg
xchg
into
cmpsb
test
movsb
sbb
imul
shrl
inc
mov
push
and
jne
add
mov
xchg
xchg
xor
mov
dec
sbb
testb
xchg
cmp
sub
sbb
idivb
mov
imull
shlb
xor
inc
jmp
xor
lcall
push
and
inc
insb
push
cs
out
stos
ljmp
outsb
sbb
popa
gs
mov
inc
addr16
fsubp
xor
lahf
xchg
hlt
sbb
inc
loopne
push
aam
mov
adc
push
cmpsb
leave
inc
in
call
std
fisttpll
jae
cmp
aas
mov
addr16
fcoms
out
int3
es
lahf
idiv
icebp
sbb
stos
add
mov
jns
popf
jae
popf
sbb
addb
mov
aam
mov
pop
xchg
out
adc
orl
adc
mov
repz
das
push
jge
mov
scas
inc
hlt
into
mov
aas
xor
jmp
dec
data16
movsb
not
in
or
js
scas
imul
stc
shlb
mov
aas
shll
and
in
cltd
push
mov
mov
adc
adc
mov
lods
pushf
and
mov
ss
ds
lcall
in
clc
or
dec
push
inc
sbb
dec
xchg
mov
icebp
jp
mov
mov
mov
daa
mov
push
pop
daa
in
mov
loope
push
popf
leave
dec
scas
mov
xor
xchg
fs
call
or
add
test
xor
aas
cli
mov
xor
adc
int3
shl
std
addb
gs
jle
pop
inc
cmp
push
repnz
rol
push
or
lock
mov
into
movsl
sarb
ja
lock
dec
xchg
or
test
push
xor
push
and
jge
repz
push
pop
fucomp
rcl
je
int
pop
push
popa
mov
jae
mov
inc
pop
mov
jmp
sub
inc
ret
les
cmp
dec
push
mov
test
push
fsubrs
pop
pop
lret
fstpt
pop
xor
sbb
add
push
icebp
inc
mov
fs
lret
icebp
xor
nop
xor
adc
inc
aad
add
hlt
outsl
and
xchg
orl
inc
cmp
adc
xchg
cwtl
cmp
pop
jnp
ss
xor
ja
jg
pop
imul
sbb
lahf
inc
nop
lock
cmp
push
or
mov
loop
push
popa
das
jmp
mov
jle
pop
out
iret
popf
pop
jmp
mov
fs
and
fiaddl
mov
sbb
pushf
sub
xchg
adc
adc
iret
xchg
jb
jne
dec
outsl
mov
dec
push
incb
push
jge
fimull
mov
jmp
jmp
sbb
cmp
in
icebp
fs
jo
pop
mov
mov
push
xor
idiv
addb
bound
sti
jno
loop
mov
mov
sub
push
mov
push
out
jge
fcomp
pop
shr
sub
dec
stc
add
stos
jno
push
cwtl
pop
call
rcll
mov
nop
sub
rol
divb
ffreep
nop
data16
mov
rcll
insb
mov
lock
into
iret
add
sbb
inc
movsl
pop
scas
push
sub
movsl
dec
in
xchg
xor
dec
outsb
clzero
xchg
jno
mov
lods
sub
fs
xor
imul
mov
int
sub
or
xchg
adc
and
push
addr16
pop
pop
jg
iret
in
ret
sub
les
adc
cmp
dec
popa
or
or
cwtl
out
mov
divl
outsl
and
mov
cmp
push
mov
cmp
xchg
cmp
test
jb
lcall
mov
ret
loope
jns
jns
mov
mov
push
and
jl
mov
mov
lods
or
pop
dec
jle
cld
int3
mov
test
js
lcall
jp
mov
std
out
mov
mov
adc
fsubrs
sahf
and
shlb
xchg
cwtl
cmp
movsl
addr16
push
loope
shll
push
xchg
into
add
sbb
cmp
pushf
jl
adc
gs
and
out
push
xchg
adc
dec
pop
and
jnp
lds
cli
es
je
stos
push
sahf
imul
push
or
rorb
and
mov
cmp
scas
mov
inc
mov
push
push
imul
sbb
mov
out
sub
mov
inc
aam
scas
mov
push
jns
cmp
ljmp
lea
aad
add
test
push
mov
inc
mov
add
mov
sub
fsub
lds
iret
fs
xchg
mov
inc
loope
push
jne
clc
test
pop
mov
daa
xlat
cmpsb
or
int3
mov
mov
xor
cmp
mov
pop
insb
cmpsl
jo
mov
sahf
cmp
add
rorb
in
loop
jle
mov
fdivs
push
or
mov
cmc
xorl
push
cwtl
xor
and
mov
lds
cmpsl
xchg
xor
pusha
je
sub
jge
or
sub
mov
lcall
std
pushf
jp
repnz
adc
mov
jae
rcrl
add
aas
pop
pop
pop
xchg
dec
imulb
rolb
movsl
dec
mov
jle
mov
xchg
pusha
fsts
inc
arpl
ret
fdecstp
inc
xchg
test
add
ja
outsl
hlt
inc
mov
adc
or
lock
lock
loope
mov
test
imul
mov
movsl
icebp
rclb
cld
dec
hlt
inc
xlat
in
fdivrl
push
jne
or
sbb
fcom
xchg
in
dec
mov
mov
addr16
hlt
inc
push
pop
ficompl
pop
push
imulb
subb
scas
push
adc
cltd
pop
xor
sbb
leave
xchg
andb
push
or
sbb
aas
lods
lods
aas
int
cmp
dec
xor
popa
mov
scas
into
subl
pop
xchg
movsl
in
out
pop
xchg
push
fnstenv
mov
xor
inc
loope
or
xchg
jmp
ret
test
into
cmp
and
scas
scas
dec
scas
mov
rcl
out
add
push
inc
dec
loope
movsb
cmp
mov
insb
add
inc
and
mov
inc
mov
lea
mov
repnz
pusha
in
dec
clc
add
inc
fstl
lea
jne
and
sub
push
add
rcrb
push
cmpb
mov
repnz
cmp
icebp
add
testl
pop
ret
lret
fwait
hlt
es
dec
jecxz
data16
xchg
mov
sub
cltd
adc
out
stos
outsb
ljmp
insb
imul
sub
jns
and
test
pop
movb
lcall
mov
or
fldenv
and
std
jo
pop
je
push
push
or
sahf
loopne
arpl
addr16
add
jge
loope
add
or
in
insl
nop
insl
rclb
shlb
repz
pop
sbb
pushf
cmp
xchg
cmp
int
xor
ret
fnstenv
xor
inc
jb
inc
and
je
xorl
in
pusha
dec
test
add
ret
je
adc
push
mov
adc
mov
aam
cmp
push
pop
out
lahf
pop
pop
and
pop
push
mov
test
xchg
pop
mov
cltd
xchg
icebp
sub
out
or
cmp
sbb
xchg
vmovlpd
adc
xchg
pop
cmp
movb
fmuls
dec
insb
add
adc
test
jo
push
or
test
fwait
ret
clc
ret
jmp
dec
pushf
repz
out
push
ja
push
jno
mov
js
lods
imul
sub
sahf
cmpsl
pop
xchg
jns
and
lret
sti
shll
mov
sahf
xchg
cmc
mov
popf
loope
inc
push
cltd
lret
int
out
cmpsb
sbb
cmp
push
or
mov
xchg
xchg
filds
xchg
std
iret
pop
and
in
sahf
insl
roll
inc
dec
dec
ror
adc
movsb
xchg
inc
mov
sahf
or
in
test
xchg
jge
cmp
rorl
repz
mov
daa
xlat
addb
pop
inc
rclb
mov
je
test
test
test
loopne
xchg
addr16
data16
push
data16
mov
pop
andb
push
and
out
mov
js
fbld
rcl
outsl
mov
sub
popa
jg
push
sub
sub
adc
enter
push
dec
adc
cmpsl
movsb
mov
push
sub
out
js
aad
cmp
mov
imul
popf
lds
mov
mov
jns
sbb
lahf
das
ret
jp
test
out
aaa
or
jno
lahf
clc
into
mov
shl
subb
or
or
stos
cmc
stos
xlat
icebp
xchg
les
in
cmc
ljmp
dec
in
mov
and
sub
xchg
std
shl
pop
inc
and
cld
std
and
mov
mov
pop
mov
leave
cs
or
pop
lock
push
add
mov
push
adc
cmp
sti
sbb
icebp
addr16
xor
xor
mov
dec
dec
mov
and
clc
push
outsb
jge
mov
jge
push
fnstcw
sub
dec
cmp
call
adc
stos
inc
jp
rcll
cmpsb
mov
mov
fadd
push
outsb
add
mov
mov
mov
mov
cmp
out
jne
bound
mov
daa
mov
add
ds
xor
cmp
mov
aaa
paddb
mov
mov
loop
and
or
into
cmpsb
push
cmp
jecxz
jle
into
outsb
ds
sahf
fsubr
mull
mov
sub
sarb
push
and
fdivrl
xor
arpl
pop
add
lea
mov
mov
inc
xchg
or
je
push
lret
push
es
lods
imul
sar
popf
popf
loope
dec
sbb
shrb
aad
xor
pop
sub
xor
jns
jmp
aas
js
push
xchg
std
add
pextrw
inc
or
je
jecxz
mull
push
andl
mov
adc
pop
or
imul
cld
jb
add
sahf
or
mov
add
cld
out
sub
mov
std
push
jbe
xor
jns
iret
ficompl
dec
aas
jb
dec
jp
sub
mov
lea
pop
mov
push
ljmp
add
sbb
xchg
xor
test
sbb
cmpsb
xchg
push
gs
xchg
sub
sub
push
lea
andl
iret
daa
sbb
push
sbb
les
out
push
mov
jb
fcmovnbe
push
addr16
and
rorl
xlat
cltd
add
add
pop
cmpsb
cmp
or
xorb
popa
mov
rcrl
and
adc
jp
add
dec
xor
je
xchg
das
shlb
cmp
shrd
jle
out
cmp
mov
xor
clc
sbb
xchg
loope
xchg
dec
fisttpll
and
pusha
dec
pop
mov
push
sub
cmp
dec
push
inc
sbb
aad
lods
iret
cs
cmpsl
gs
jbe
xchg
xchg
lods
push
loop
adc
fsubrl
adcb
add
ret
mov
movsl
in
dec
mov
dec
or
pusha
pop
movsb
add
cld
inc
jg
xor
cmpsl
adc
popa
fimull
jo
cmp
cmpsl
cwtl
out
pop
fwait
push
rcrb
add
imul
adc
push
sub
jnp
es
hlt
aaa
cld
inc
je
out
repz
sub
xsavec
repnz
jb
cmp
lahf
addr16
stc
stc
mov
xchg
ret
dec
mulb
cmpsb
dec
das
cmpsb
sub
outsb
es
cmp
lods
ljmp
clc
popa
movsb
mov
push
mov
scas
in
mov
pusha
in
or
adc
call
or
adc
cmc
fisttpl
das
mov
jge
arpl
jge
insb
test
pop
mov
dec
pop
or
cmp
insl
test
fs
sub
sub
jl
clc
mov
jne
mov
inc
xor
dec
xor
pop
aad
sbb
mov
nop
lods
pop
fldl
pop
dec
inc
scas
inc
hlt
aad
je
jne
insl
push
das
loop
jg
ss
or
sahf
outsb
in
sub
mov
test
adc
xchg
lock
loope
push
clc
push
xor
mov
sub
cli
jp
popa
and
jne
cmp
popa
push
xchg
jbe
jno
pop
roll
inc
mov
add
imul
pushf
jg
lds
cs
mov
aaa
dec
sbb
mov
out
and
lock
xchg
jle
aam
jge
mov
je
cmp
int3
adc
sbb
sahf
arpl
mov
jmp
jl
in
sub
imul
scas
mov
inc
stc
adc
adc
push
pop
mov
das
pop
leave
icebp
or
test
sti
je
jg
mov
pop
adc
aas
pushl
xchg
pop
cwtl
andb
xchg
inc
sbb
sub
in
sbb
cmp
push
pushf
mov
lods
outsb
aad
and
mov
js
aam
cmpsb
stos
fmull
adc
jne
push
xchg
sbb
pop
rol
xlat
dec
add
mov
pop
cwtl
dec
or
shl
mov
or
shrb
mov
in
sbb
and
mov
or
stos
sbb
rcrb
mov
jbe
imulb
jle
and
lock
mov
push
or
or
mov
cltd
rcll
sbb
cmp
scas
je
dec
inc
dec
hlt
xchg
xlat
mov
pop
add
xchg
push
add
ss
mov
sbb
xchg
sub
xchg
lea
imul
adc
push
outsb
mov
mov
es
bound
and
and
or
xchg
cmp
cmp
aaa
scas
add
mov
clc
jmp
xchg
or
sbb
mov
push
xor
adc
mull
mov
pop
cmp
fisttpl
add
cmp
xlat
mov
add
push
aas
or
xchg
cld
pop
mov
xchg
push
cmpsl
push
pop
aas
cmpsb
mov
or
sti
daa
add
and
scas
stc
sbb
aas
xlat
mov
int3
and
and
and
imulb
arpl
in
push
pop
jae
and
xlat
adc
xor
cmc
in
sbb
std
add
icebp
popa
movsl
jo
aam
out
xchg
push
fldl
shlb
leave
jne
push
mov
loope
pop
xchg
mov
mov
pop
pop
mov
mov
das
inc
xor
push
out
loop
ds
outsb
popa
and
ds
leave
push
dec
std
mov
les
dec
push
push
popf
fiaddl
inc
mov
jg
mov
aas
in
test
popf
inc
pusha
add
and
cs
gs
push
frstor
cmp
pop
daa
mov
repnz
or
mov
sti
gs
sub
cmpsb
iret
add
pop
daa
pop
push
nop
int
jge
fdivrs
icebp
dec
adcl
inc
dec
inc
jnp
push
cmp
xor
scas
in
adc
lret
add
cld
jo
push
and
mov
pop
jmp
jo
icebp
daa
imul
or
mov
cli
lock
pop
pop
add
push
je
mov
stc
xor
xor
nop
jnp
pop
adc
popa
push
dec
ja
int3
in
and
adc
fnstsw
int3
xlat
xor
scas
imul
iret
xchg
push
call
mov
add
lcall
test
dec
fnstenv
daa
and
inc
data16
or
jmp
roll
js
fwait
rcl
out
scas
and
popa
jecxz
cmpl
or
pop
inc
and
lret
mov
sub
shlb
and
arpl
mov
shrb
sbb
push
test
pushf
daa
test
insl
int3
add
ret
mov
imul
sarl
fs
adc
mov
test
inc
push
rolb
movzbl
adc
push
cwtl
in
cmc
stos
inc
inc
cmp
xchg
out
outsb
xchg
jge
adc
sbb
int
popf
fstps
ret
fldenv
dec
aas
pop
xchg
mov
lret
xor
xchg
jb
out
fidivl
rcr
xor
mov
ds
add
rclb
ja
jp
mov
in
inc
pop
cwtl
shl
or
mov
test
lcall
xor
lds
jp
adc
ret
mov
stc
call
shrb
inc
test
xor
imul
mov
mov
push
sbb
movsb
out
scas
pop
and
mov
ja
cmp
xor
icebp
jae
pop
idiv
and
faddp
mov
xchg
mov
push
add
inc
rol
enter
clc
repz
test
cmp
xor
jecxz
in
jbe
jmp
out
scas
fisttpll
jne
jae
fstps
push
xchg
mov
lcall
das
loope
push
sub
and
inc
xor
inc
cmpsb
mov
icebp
repnz
mov
pop
adc
sub
insb
push
aam
and
test
or
dec
or
pusha
mov
push
xor
mov
dec
mov
imul
fwait
mov
sub
pop
mov
imul
sahf
cmp
mov
mov
sar
or
nop
fiaddl
scas
mov
negl
push
test
cs
cmp
pop
mov
pusha
jp
xchg
mov
into
aas
clc
test
mov
das
adc
loope
das
gs
not
stc
hlt
cmp
jmp
or
dec
pop
inc
test
mov
mov
and
nop
xchg
mov
icebp
cmpsb
sbb
fimuls
imul
mov
or
das
rcrb
iret
add
pop
xor
fwait
in
xchg
mov
imul
pop
das
lods
cmp
movsb
scas
loope
stc
mov
push
add
jmp
test
jl
into
pop
cmpb
dec
pop
int3
shll
xor
xchg
jns
popf
nop
dec
lret
jns
aad
mov
adc
pop
rcl
lret
orb
mov
cltd
sub
push
sub
mov
fcompl
push
idivl
pop
add
cs
int3
int
out
sub
rcrb
sub
arpl
jg
ss
hlt
sub
pop
mov
jge
cmp
adc
xchg
insb
push
loop
jbe
pop
insb
push
cmp
mov
jns
stos
pushf
xor
xchg
xchg
or
xchg
repnz
aaa
mov
addl
loop
xchg
sub
dec
outsb
cmp
add
mov
sub
jae
mov
outsb
aaa
neg
xor
sti
pusha
lea
inc
movb
mov
int
stos
adc
incl
lret
lret
adc
mov
stc
pop
sub
insl
pushl
mov
cmp
mov
add
add
sbb
cmpsb
shr
xchg
fnstcw
pusha
mov
dec
mov
mov
aas
push
sub
fcoms
les
mov
or
pop
jl
inc
mov
mov
imul
mov
das
outsb
jmp
and
add
pop
xor
pop
pusha
pop
jg
sbb
sbb
pop
iret
push
cmpsb
adc
fisubrl
clc
inc
loopne
mov
jne
xchg
xchg
jp
lcall
or
pop
and
push
inc
nop
mov
sub
aaa
decl
jb
pop
in
pop
sub
les
adc
mov
clc
sub
mov
sahf
xchg
xor
fldcw
xor
mov
fs
ljmp
adc
jecxz
fadd
or
sbb
iret
add
cli
pop
push
outsb
or
dec
int
pop
add
leave
or
push
jnp
aaa
inc
mov
jg
fcompl
jge
push
in
or
and
nop
adc
mov
jo
add
sub
dec
out
je
int3
push
inc
imul
cwtl
lcall
out
inc
cwtl
dec
repz
jmp
push
xor
jl
push
adc
out
movsl
jno
cmp
sub
sahf
sbb
mov
sub
mov
addr16
cmc
cmp
xchg
cltd
lds
mov
decl
and
xchg
jmp
iret
cli
xchg
lea
sahf
incl
mov
pusha
test
xlat
sti
sub
jp
pushf
leave
outsb
fistl
sbbb
arpl
add
test
jge
pushf
fidivrl
sbb
lahf
pop
cmp
insb
mov
bound
repnz
pop
out
adc
dec
mov
push
shlb
cmp
or
inc
in
fdivrs
xor
icebp
hlt
jg
into
and
outsb
cmp
add
scas
mov
mov
inc
lds
or
push
fs
out
test
push
jo
jmp
fimuls
adc
jns
out
inc
adc
enter
dec
out
fistpl
or
jl
mov
xorl
dec
mov
push
xchg
jno
mov
rol
push
sbb
loop
jle
add
mov
adc
inc
mov
aas
inc
jne
or
movsb
aad
push
sbb
xchg
mov
mov
pop
xchg
pop
bound
cs
push
pusha
nop
cmp
dec
mov
test
mov
aaa
out
dec
sub
mov
pushf
nop
shlb
add
icebp
ret
fisubrs
faddl
push
jmp
sbb
or
inc
shrb
sub
push
sub
xchg
mov
test
das
por
xor
std
push
or
insb
push
mov
sbb
jg
mov
popf
mov
mov
sarl
push
jp
stos
pop
nop
jecxz
jle
xchg
and
nop
in
inc
and
mov
test
push
lret
sbb
dec
mov
adc
mov
add
lea
or
pop
xchg
mov
xchg
movl
mov
out
jae
adc
js
or
sub
jl
push
xor
mov
mov
lods
enter
loope
insb
sti
mov
lods
add
ret
push
stc
xchg
imul
xchg
leave
mov
rol
mov
push
sti
mov
pop
and
test
mov
sbb
out
divl
int3
scas
xchg
popa
fistpll
jg
add
push
std
cmpsb
fistps
add
stos
push
test
stc
xor
movsb
aaa
ret
fbstp
mov
dec
mov
sub
jg
push
or
cmp
movsb
aas
mov
out
stos
fdivs
pop
adc
adc
dec
mov
stos
incb
in
xchg
lret
cmp
pop
sahf
xchg
xor
mov
ficoml
mov
outsb
adc
fbld
push
sub
jp
push
or
jnp
in
arpl
aaa
bnd
sbb
insl
pop
pop
adc
inc
inc
hlt
and
pop
sub
fidivrs
jb
fsts
push
mov
lock
mov
dec
or
pop
push
xor
adc
loopne
cmp
ljmp
cmc
pmaxub
lock
aam
ds
es
sbb
mov
imul
movsl
sub
sbb
popa
mov
sahf
push
ss
dec
inc
cmp
ret
imul
imul
imul
pop
sbb
jle
jp
push
rclb
pop
or
andl
or
adc
stc
push
inc
mov
pop
mov
test
dec
inc
out
lea
arpl
add
add
pop
sub
aas
loop
in
lds
fwait
push
pushf
data16
push
sti
jle
movsl
add
jmp
inc
fisttpl
jg
mov
xchg
dec
imul
jo
clc
mov
movb
sub
mov
pop
aam
addr16
int
cmp
vmread
cmpsl
xchg
out
xor
repz
out
xchg
aas
push
imul
nop
cwtl
mov
mov
jge
sub
out
cmp
adc
popa
jo
adcb
push
fdivl
call
movsb
pop
in
cmpsb
jp
scas
cmpsb
shrl
pop
mov
sub
mov
lock
lret
mov
jmp
xchg
mov
aad
mov
adc
sbbb
cmp
popa
ret
imul
xchg
xchg
xor
idivl
aas
out
rolb
or
xchg
and
loope
sbb
cmp
adc
inc
push
mov
imul
cld
andb
pusha
or
loopne
outsl
call
jae
iret
add
or
or
sbb
xor
pusha
fwait
push
push
cmpsl
mov
out
jmp
xchg
xchg
mov
and
gs
xor
lahf
das
mov
jmp
sub
test
mov
push
js
pushf
sbb
repz
ja
loope
ljmp
dec
inc
jle
or
jmp
mov
mov
imul
pushf
xor
and
sbb
and
mov
adc
or
test
insb
xchg
sbb
pop
cmp
fcomps
test
and
inc
dec
xchg
pop
and
cmp
fdivs
dec
scas
or
fistpll
mov
pop
xchg
or
xor
mov
xchg
adc
or
cli
lods
std
loope
jae
xchg
and
mov
pop
jmp
sub
addb
ret
scas
je
sub
push
aas
cmpsl
cltd
sbb
mov
lret
nop
cmc
aad
add
repnz
adcb
mov
repz
jbe
aas
xchg
dec
dec
push
popa
rolb
jb
arpl
loope
nop
push
sub
into
push
bsf
sub
xchg
jbe
dec
rcrb
pushf
fldt
push
outsl
jns
popa
pop
test
cld
xchg
push
test
mov
fmul
repz
adc
jle
mov
xchg
adc
and
inc
sbb
cmc
xor
jns
rclb
mov
xchg
adc
dec
fdivrl
int3
jecxz
xor
dec
cmpsb
mov
cmp
pop
or
jne
mov
sub
je
je
jmp
jg
mov
outsl
enter
cmp
push
cmp
dec
dec
cmp
incl
out
dec
cs
adc
or
push
xchg
cmp
lahf
fisubs
cmp
mov
popa
jns
adc
and
test
cmpsb
dec
subl
mov
sahf
lock
ss
je
jl
cli
nop
push
filds
dec
push
lea
sub
dec
cltd
and
les
test
sub
jne
add
xchg
in
and
mov
dec
or
dec
xchg
push
pop
add
scas
in
arpl
sbb
xchg
insl
mov
pop
jns
push
push
sub
push
adc
sbb
mov
outsl
ljmp
mov
rol
cmp
mov
cmp
je
pusha
je
pop
stos
rclb
sbbb
test
pop
and
push
cmp
shll
dec
movsb
daa
adc
int3
orb
and
in
stos
bound
aaa
mov
mov
or
in
xor
rcll
or
dec
sar
jp
out
jmp
test
scas
push
fidivrs
rorl
out
mov
nop
mov
inc
rol
nop
ret
inc
inc
jae
pop
call
mov
sbb
mov
cld
mov
pusha
ficompl
sahf
rcrb
xchg
adc
add
xor
cmpsb
ljmp
add
cs
ljmp
xchg
lea
push
jne
mov
push
test
cmpsb
es
mov
inc
push
xchg
pop
fisttps
das
test
dec
mov
in
and
jo
mov
cli
test
push
push
xor
inc
sbb
clc
inc
fldl
dec
add
cld
xor
cmp
push
jae
or
inc
loope
dec
xchg
xchg
scas
in
lds
push
fcompl
fmulp
jnp
cmp
mov
es
sti
loopne
sbb
pop
repnz
jnp
mov
xchg
push
imul
sbb
idivl
ffreep
cmp
inc
lret
cli
mov
sub
test
mov
ljmp
adc
mov
and
adc
jge
subl
frstor
jmp
mov
sbb
mov
cmp
lret
je
insl
daa
cmp
dec
add
mulb
pop
or
outsb
jae
adc
or
ljmp
adc
lds
pop
dec
out
jle
dec
lea
or
shl
movsb
xor
pop
inc
jns
ss
and
xchg
rcr
inc
jno
push
jo
and
inc
cmpsl
fwait
add
xor
sub
lock
aaa
mov
sub
lods
adc
lea
jle
pop
fdivrs
lods
mov
pop
pop
mov
out
adc
jecxz
jbe
jno
sbb
orl
ss
add
in
mov
mov
fbstp
dec
xchg
adc
mov
testb
dec
dec
je
pop
out
mov
jg
cli
xchg
outsb
in
ljmp
jae
orl
push
popf
pop
test
or
cmp
push
mov
call
mov
add
add
and
test
mov
aaa
movsl
aaa
sbb
sbb
lods
andb
add
pop
leave
mov
sub
xchg
shl
aas
adc
dec
sbb
add
sbb
or
out
bound
pop
ds
pop
jp
pop
pop
pop
lds
jmp
rcl
xchg
addb
popa
or
loope
movsl
jbe
pop
sbb
xor
ja
mov
jge
sub
xor
cmc
xchg
outsb
lret
push
pop
jecxz
test
pop
inc
in
inc
and
add
arpl
mov
aas
fimull
scas
cmp
cmp
mov
inc
inc
xor
add
mov
imul
inc
inc
les
imul
lds
repz
out
push
je
push
adc
add
lahf
mov
out
lods
sbb
lret
mov
adc
push
pop
add
sub
fnstenv
cwtl
mov
dec
lcall
imul
or
mov
jge
lret
push
mov
xor
jg
outsb
jno
mov
loopne
ljmp
jne
sub
hlt
jbe
imul
addr16
mov
scas
cmp
cmpsb
inc
inc
data16
dec
fimull
int
cmp
insl
ss
xchg
xor
aas
hlt
jb
xor
into
repnz
dec
xchg
aam
in
aaa
xchg
jl
in
cs
mov
mull
fsubr
ja
mov
mov
push
in
and
sbb
sbb
sbb
mov
cli
aas
jnp
call
or
fwait
std
jmp
cwtl
rolb
test
cwtl
push
sub
idivl
pop
mov
mov
mov
pop
jge
push
popf
subl
add
lret
mov
fcmovne
adc
jl
push
cwtl
test
jo
pop
outsl
mov
enter
insb
bound
jo
negb
fistl
mov
lods
push
mov
adc
inc
ret
into
lret
mov
movsb
aad
cli
das
inc
pop
call
dec
jge
mov
xor
int3
fdivl
outsl
mov
ss
push
lret
shll
lods
shll
xor
call
mov
pushf
sbb
movsb
arpl
aad
mov
sahf
fwait
cltd
pop
in
bnd
inc
jmp
stc
or
bound
mov
test
xor
jae
es
iret
cmpl
xor
or
sbbb
mov
fucomip
addl
pop
test
pop
gs
outsl
pop
movsl
out
je
cmp
lahf
add
call
jbe
jmp
lock
fcoml
repnz
sub
bound
dec
ret
aam
pop
aaa
inc
xchg
mov
sbb
sub
fcompl
fsubrs
and
pop
fsub
mov
shll
icebp
cmc
jg
sub
lock
ja
clc
orl
jmp
xchg
cmc
ret
xlat
xor
cmp
inc
rclb
lods
das
adc
mov
cwtl
stos
cmpsl
xor
pushf
lds
pop
mov
fisubs
aad
dec
jae
jp
and
pop
not
mov
imul
push
aam
sbb
int3
mov
xchg
sbb
ret
xor
dec
int
sbb
cli
shlb
out
rorb
lock
call
add
add
mov
pop
xor
sbb
push
jnp
cld
mov
jp
mov
and
mov
xchg
ret
add
gs
cmp
fldl
cmpsl
cmp
pop
fisubrl
shl
shrb
lcall
icebp
outsl
cmp
loopne
inc
es
aam
subl
in
lea
inc
lret
scas
fldt
js
test
mov
push
xlat
adc
inc
outsl
jge
sub
inc
push
mov
add
mov
popa
xor
mov
pop
in
mov
aaa
sahf
popf
scas
stos
add
mov
cltd
pushf
jne
notb
xchg
mov
fidivs
and
adc
mov
fnsave
fwait
push
sbb
outsb
xor
xchg
mov
mov
es
sub
addb
bound
mov
and
cmp
jno
cmc
adc
cmpsb
sub
ja
pop
or
rclb
rorb
sub
pop
adc
das
xchg
xor
shr
and
jo
cltd
shl
int3
jmp
sbb
mov
or
je
pushf
or
add
call
es
add
cmp
jbe
push
adc
ja
mov
jmp
xchg
pusha
movsl
lea
lret
push
adc
jns
mov
cmc
xchg
int
and
ss
pop
xchg
je
pop
mov
or
pop
xchg
adc
mov
popa
jns
xchg
stc
mov
mov
adc
cmc
cmp
test
cmp
scas
mov
sbbl
in
and
fwait
sbb
out
bound
rol
icebp
aas
or
jg
pop
das
or
int3
pop
xchg
sbb
loopne
fists
push
addr16
aas
and
rorb
lock
clc
ss
clc
ljmp
scas
xchg
xor
fs
lret
add
addr16
cmp
or
enter
pop
scas
test
sbb
int3
inc
out
aaa
mov
mov
gs
imul
sahf
push
cmp
lods
hlt
or
ja
jp
mov
fdiv
add
loop
push
dec
inc
fiadds
imul
pop
or
nop
dec
sbb
hlt
sub
in
push
jge
mov
cmp
fcomps
test
aaa
push
cld
mov
into
dec
jno
sub
fnsave
inc
fstl
push
out
test
enter
mov
fadd
sahf
xor
push
xlat
lahf
popa
push
mov
dec
xchg
ljmp
movsl
jo
jnp
cmp
inc
sub
mov
fwait
sub
popf
mov
add
lods
cltd
mov
pop
mov
jnp
mov
lock
add
pop
pop
and
ret
push
mov
rcrl
nop
lret
pushf
imul
loop
push
cmp
adc
lahf
in
cmp
insl
mov
push
dec
cwtl
inc
inc
std
mov
mov
jne
in
leave
sub
mov
inc
or
cmp
out
mov
aad
jge
xlat
mov
add
xchg
jecxz
mov
mov
out
xor
sub
xor
jmp
push
fs
mov
jp
sub
mov
xchg
or
int3
push
popf
jp
xchg
mov
sub
js
push
in
mov
in
rcr
cmp
dec
mov
ja
int
pushf
ret
dec
pop
sar
mov
in
mov
rcrl
test
mov
repz
push
push
sti
out
xchg
fisttps
les
jl
sti
dec
cmp
in
push
mov
leave
insb
lea
rolb
sbb
sti
icebp
push
mov
and
cmp
cmovp
ret
cmp
fxch
cmc
dec
push
adc
inc
jae
xchg
mov
stos
dec
call
sbb
rcr
jo
cmpsl
adc
inc
mov
test
aam
imul
cmp
or
aas
sub
cmp
lds
mov
rorb
xor
and
push
fwait
lods
xor
jle
mov
cmp
dec
test
jmp
mov
push
sub
inc
dec
mov
out
cli
aam
pop
jge
xchg
bound
inc
sti
pop
xorb
mov
sbb
sahf
je
or
outsb
adc
cmp
clc
in
lcall
cwtl
ficoml
jmp
lock
xor
sbb
dec
pop
dec
pop
fcmovbe
lcall
das
sub
or
pop
ss
jl
test
lret
rolb
adc
pop
mov
daa
out
std
dec
pushf
aaa
shr
out
dec
das
ljmp
sbbb
add
nop
xor
sahf
inc
xchg
dec
or
inc
xchg
cmp
xor
inc
sub
and
xor
dec
les
mov
sbb
jge
xor
and
push
cld
push
mov
insb
cmp
aam
into
or
dec
dec
mov
fsubr
mov
push
les
in
adc
movsl
and
mov
pop
adc
cmp
jge
add
dec
inc
mov
pop
and
jle
int3
bound
jecxz
xchg
outsl
dec
and
mov
jnp
adc
adc
outsl
js
aad
or
es
fwait
jge
sbb
or
out
leave
xchg
or
sub
add
lock
lret
pop
mov
mov
je
jle
fdivr
scas
int
test
adc
fcmovbe
inc
data16
add
fiaddl
push
js
aam
ljmp
xchg
insl
add
cmp
outsl
aaa
jbe
add
mov
pop
fisubrl
push
fst
jmp
sub
and
rcrb
rorl
addr16
jle
fsubl
inc
and
lea
add
jb
int
popf
clc
mov
pop
push
imul
xlat
pop
fisubrs
repnz
adc
ss
lods
or
xchg
fldenv
test
scas
iret
leave
in
adc
adc
sbb
idivb
pop
mov
cwtl
xchg
mov
leave
sbb
jle
cmpsl
and
mov
cmpsb
mov
push
mov
jle
sahf
jl
xchg
cwtl
nop
aad
or
and
movsb
shrl
adc
sbb
sbb
sbb
addr16
outsb
sub
aaa
movsb
lcall
out
loop
pop
dec
sbb
adc
shl
pop
movsl
fmull
int3
ss
jne
or
push
andl
xchg
jbe
push
fisubl
sub
pop
pop
sub
rcrb
adc
aam
hlt
inc
stos
aad
sbb
mov
sahf
loop
jbe
das
mov
sbb
lahf
xor
negl
lds
pop
pop
lods
daa
sbb
pusha
andl
mov
pop
inc
aas
cmc
sub
push
lods
dec
pop
scas
sbb
cmp
mov
scas
push
out
mov
inc
in
mov
sub
pop
sub
daa
pushf
xchg
shll
hlt
and
push
rorb
movl
lea
lret
sub
jbe
sbb
lret
lods
push
cmp
push
cltd
arpl
push
adc
sbb
in
pop
xchg
bound
into
cmp
jnp
test
push
add
dec
mov
inc
rclb
or
push
xchg
jg
sbb
movsl
mov
fmull
jne
cmp
cmp
lods
icebp
fucom
mov
xor
std
jo
jl
mov
sar
sbb
or
call
std
inc
add
shll
insb
jg
cmpsl
call
cmc
dec
or
push
jge
mov
mov
xor
add
rcrb
jle
fistpll
sar
sti
fldenv
adc
inc
insb
jnp
insl
scas
pop
and
jns
mov
outsb
add
hlt
in
fisttpll
insb
mov
jmp
pop
insl
pop
xor
sbb
je
xchg
pop
hlt
push
aaa
xlat
loopne
cltd
arpl
cs
std
or
mov
iret
lods
jb
push
lea
mov
pop
jge
dec
pop
lret
or
pop
gs
sbb
mov
sub
pop
movsl
sti
in
sbb
and
mov
pusha
xor
dec
lds
fnstcw
addr16
jno
sub
es
xchg
dec
arpl
push
sub
and
js
negl
adc
pusha
xor
cs
scas
fdivr
or
in
js
xchg
pop
das
in
adc
incl
push
push
mov
xor
xor
dec
idivb
sub
test
mov
push
loop
dec
add
pop
stc
lret
sti
pop
push
lea
aaa
sub
movsl
pop
dec
js
sbb
or
pop
cltd
push
mov
or
fnstenv
out
xchg
sbb
imul
pop
iret
lcall
jmp
sbb
arpl
xchg
mov
insb
fs
mov
xor
mov
lcall
shl
and
cmpsb
int3
in
aaa
xchg
xchg
test
jp
cmp
cmp
popa
xor
stc
sarb
repnz
jnp
sahf
sarl
xchg
xlat
push
lret
jb
mov
mov
sub
loopne
cmpsl
movsl
sar
xor
push
stos
fcmovbe
xchg
in
lds
out
lea
les
and
scas
xchg
stos
mov
sub
aaa
scas
mov
stc
xor
dec
sub
jecxz
inc
xor
add
loop
test
xor
je
test
outsl
lods
cmp
push
push
or
lods
test
leave
push
and
adc
jge
and
aam
fmull
pop
into
push
loopne
sbb
arpl
das
mov
cmp
or
mov
popf
pop
cmp
loop
dec
scas
outsb
xor
push
stos
in
dec
ret
outsl
dec
inc
into
cmpsb
mov
stos
aas
adc
jp
pop
sbb
jge
add
sub
repnz
arpl
sub
lahf
xor
and
icebp
sub
mov
test
xor
cmp
pop
add
add
xor
pop
adc
lahf
inc
adc
outsl
inc
adc
mov
scas
mov
int3
mov
adc
lret
xchg
mov
xchg
adc
sarb
imul
mov
cli
sbb
addr16
jl,pn
mov
nop
cld
cmc
or
adc
inc
int3
xor
rolb
insl
cmpsl
mov
cmp
pop
mov
cld
adc
push
and
push
movl
mov
mov
ja
fmull
pop
pushf
sub
sub
jbe
lcall
jge
cmp
xor
lock
dec
mov
mov
inc
xor
or
cmp
push
sub
and
xor
js
call
dec
sbb
jp
popa
jns
xor
popa
mov
cmp
imul
fnstsw
pop
cmp
jno
add
cmp
cmp
mov
jge
cmp
add
dec
pop
inc
and
cmp
push
jle
lahf
pop
dec
shll
inc
cmp
push
xor
xlat
add
and
sub
rep
leave
fisubrl
mov
jecxz
xchg
flds
mov
xchg
adc
movsl
add
dec
adc
test
adc
mov
xlat
stos
mov
lahf
sub
andb
jnp
xor
adc
outsl
jecxz
fs
sub
loopne
arpl
imul
popf
arpl
cmpsl
inc
aas
dec
mov
aas
sub
lret
xchg
cli
out
mov
pop
mov
pop
pop
fsts
in
repnz
shl
imul
cmp
dec
jns
push
repnz
push
dec
adc
push
nop
or
sbb
push
sub
adc
test
ret
repz
sbb
xor
mov
sbb
lahf
xchg
inc
pop
mov
sti
and
add
pop
or
cmp
enter
xor
aad
shll
gs
gs
dec
dec
negb
xor
mov
mov
adc
lods
pop
push
test
imul
ret
mov
push
mov
js
sub
jg
fdivr
jl
imul
or
popa
aas
mov
push
pop
movsl
push
stos
daa
xchg
pop
jnp
xchg
sub
lea
pusha
mov
rorb
xor
ficoml
mov
test
push
icebp
xchg
lret
in
es
pop
jmp
ret
jbe
pusha
or
pop
pop
jns
and
mov
cmp
and
sti
cmp
cmp
out
push
out
or
xchg
xor
add
inc
mov
mov
cmc
lea
shl
movl
push
fcmove
add
jns
ds
jns
out
xor
aam
adc
xchg
jae
xlat
or
and
fdivrs
cmp
rcll
ljmp
addr16
cwtl
push
push
xor
int3
mov
mov
jns
mov
jmp
aam
testl
imull
pop
jmp
push
popf
pop
or
call
js
stos
rcll
push
xchg
les
fistpll
mov
inc
push
cld
addr16
xor
mov
and
mov
xor
je
push
adc
pop
mov
dec
loop
push
xchg
jo
cmc
or
out
xchg
cwtl
fwait
cld
movb
xchg
xchg
fdivrl
cmp
sahf
repz
stos
and
popf
fwait
pop
add
inc
push
mov
out
lds
pushf
test
and
ret
xorb
cld
fstps
pop
movsb
test
mov
scas
or
fs
pop
inc
pop
and
and
nop
roll
pop
sbb
sub
rep
adc
sti
loop
inc
mov
rol
pop
sub
fcoms
xor
fadds
das
daa
in
xor
pop
cld
fsubrs
sub
add
sarb
and
rol
lcall
add
pop
sub
mov
adc
mov
mov
add
adc
sbb
push
push
je
jmp
inc
fsubrl
pop
jno
push
ret
gs
std
insb
xchg
leave
js
iret
lcall
push
jge
push
movsl
adc
iret
ljmp
mov
jne
stc
pushf
out
sbb
mov
cltd
cmpsl
sbb
mov
push
arpl
sub
pop
mov
dec
xchg
fstl
popf
pusha
stos
call
dec
mov
arpl
sbb
mov
sub
jo
icebp
test
pop
fbld
jns
push
cmc
xor
das
xor
repz
fistpl
add
push
cmpsl
cs
jb
mov
jne
mov
sahf
mov
dec
adc
add
bnd
mov
mov
stos
xchg
into
inc
xchg
sub
mov
jbe
dec
addr16
in
jge
aas
lods
or
clc
push
jecxz
pushf
sub
aas
ljmp
imul
jle
pop
aas
jbe
sub
sti
sub
jae
adc
stos
mov
int
cmc
pop
add
imul
dec
loop
jae
testb
xchg
pushf
cmp
dec
add
pushf
inc
and
dec
jp
sub
in
pop
mov
push
push
push
add
and
call
lret
jae
call
stos
add
cmp
andl
aas
mov
negb
int3
dec
dec
mov
in
xchg
adc
xchg
int
or
xchg
outsl
cld
inc
aam
dec
pushf
shl
dec
and
add
cmp
pop
mov
vmovshdup
pusha
sbb
xchg
fdivrs
mov
dec
adc
add
sbbb
push
push
in
xor
icebp
push
mov
icebp
sub
pop
jne
scas
push
aas
subl
ret
packuswb
mov
lods
fsubs
arpl
movsl
sbb
movsb
sbbl
inc
fdivrs
pop
lds
sbb
fbstp
fdivr
xchg
push
mov
lock
addr16
dec
push
outsl
adc
sti
popf
lods
add
sbb
fsub
scas
std
into
inc
mov
nop
arpl
push
jne
and
pop
pop
insl
movsl
cmp
dec
and
mov
adc
sub
cltd
xor
aas
sbb
pop
testb
testl
jg
push
adc
jns
lcall
mov
ret
adc
inc
dec
fisubrl
or
xlat
xor
jg
xchg
loop
scas
test
mov
pop
xchg
mov
sub
call
icebp
iret
xor
sti
daa
xor
dec
hlt
popa
mov
xchg
pop
cmc
jmp
cltd
and
sbb
mov
add
jns
fidivs
sbb
adc
dec
add
pushf
push
leave
or
jmp
xchg
nop
jle
sbb
jno
stos
les
fdivrs
mov
rcr
add
vmovapd
popf
arpl
dec
cmp
dec
insl
mov
adc
mov
push
lods
cmp
stc
dec
dec
sahf
jnp
repz
lods
mov
je
stc
mov
movsl
movsb
jo
jno
lcall
imul
dec
dec
ds
arpl
pusha
faddp
in
jl
and
loopne
pop
mov
cli
xchg
sub
mov
mov
and
xchg
inc
ret
add
mov
in
xchg
adc
and
sbb
lock
imul
icebp
jo
jmp
jb
mov
out
shll
jae
dec
loope
dec
xor
mov
imul
outsb
lret
js
shrl
lods
dec
add
cmp
add
add
pop
push
lods
sbbl
mov
mov
bound
lea
icebp
jle
pop
push
mov
cmp
push
pop
and
fscale
arpl
and
xchg
inc
inc
dec
jmp
arpl
add
movsb
add
push
int
jmp
sub
push
inc
cli
fisubl
gs
or
nop
movsl
push
jp
filds
xor
fidivrl
jbe
push
lods
aam
sub
subl
xor
sarb
into
daa
repnz
das
jo
ret
sub
jp
dec
mov
ret
mov
aad
mov
test
push
push
mov
rorb
mov
pop
xor
sub
fwait
dec
stos
or
enter
les
dec
xchg
mov
mov
ret
mov
add
add
aaa
adc
jo
testb
jo
inc
addr16
testb
xchg
je
or
popf
mov
add
gs
inc
inc
dec
jecxz
pop
lods
popa
xchg
mov
inc
pop
push
iret
push
jl
idivb
fildl
adc
lods
push
fwait
xor
adc
in
xor
lea
or
fld
je
pop
push
stos
repnz
add
cli
adc
or
shll
testb
aaa
mov
mov
ret
fdivrs
xor
rcrl
add
in
sbb
mov
in
sahf
sbb
test
xchg
mov
jp
xlat
sub
mov
sub
push
in
xchg
xchg
dec
cwtl
xlat
into
rcrl
lock
imul
or
nop
sub
and
cwtl
add
sub
xor
cmp
mov
cwtl
repnz
movsl
dec
scas
pop
lcall
inc
xchg
fiadds
push
cmp
push
out
xor
mov
andl
sbb
sbb
out
repnz
adc
cld
or
push
sarl
fs
repnz
push
cmp
add
int3
in
pusha
inc
sub
ret
aam
xlat
pushf
push
sbbl
mov
in
add
cmp
mov
pop
pop
mov
xor
add
xor
fisttps
cmp
xor
fimuls
rorl
subb
sbb
fnstsw
arpl
inc
jmp
ds
loope
clc
push
mov
aas
or
dec
rclb
sub
mulb
les
hlt
inc
in
or
mov
out
repnz
jg
adc
shlb
loopne
stos
pop
test
inc
adc
xor
adcb
cmp
pop
rolb
xchg
lret
xor
int3
dec
mov
fdivs
sahf
sub
mov
dec
out
sub
test
popl
push
or
push
inc
int
mov
xorl
jg
dec
adc
sarl
mov
inc
testb
fs
ja
imul
iret
dec
adc
pop
mov
sti
pushf
mov
pop
arpl
mov
push
add
adc
add
adc
push
pop
decl
jl
movsb
mov
and
vpaddw
xchg
rclb
lret
je
test
mov
sahf
imul
adc
int
cs
adc
addl
or
push
jnp
dec
mov
imul
cmp
adc
push
jo
inc
jbe
mov
int
cs
fadds
mov
test
add
ja
sub
ja
mov
fwait
leave
push
nop
xlat
inc
and
pop
and
ret
jns
push
or
in
jl
sbb
mov
xor
xor
or
mov
jne
in
icebp
xor
sub
xor
cmpsl
imul
mov
filds
adc
ffreep
adcl
xor
repz
lds
mov
test
and
inc
testb
stc
pop
cmp
test
test
es
fisubrl
sub
jg
fiadds
cltd
jecxz
lds
cltd
mov
push
clc
sti
dec
rcl
mov
jno
ds
mov
xor
pop
lret
jbe
bound
push
sub
popf
cmc
out
pop
sub
mov
in
fcoms
adc
out
push
cmp
inc
aad
inc
dec
subl
adcl
dec
xchg
adc
fincstp
bound
fnsave
push
pop
pushf
cltd
cmp
mov
xchg
push
jbe
xchg
imul
gs
test
pusha
push
xchg
and
jge
addb
dec
mov
dec
mov
push
cmc
or
cmp
faddl
xor
mov
mov
jns
repnz
scas
inc
jmp
inc
mov
adc
sub
inc
test
mov
sbb
pop
enter
lods
lock
or
iret
int3
cs
aaa
leave
loopnew
dec
mov
lret
rep
movsl
sahf
ret
xlat
push
inc
push
push
add
movsb
aam
pop
imul
cmp
aad
mov
inc
and
pop
fs
cmp
jb
push
adc
mov
and
xchg
xor
ret
in
ror
fs
scas
leave
add
shll
adc
mov
jge
adc
cld
xchg
sub
lret
dec
sbb
arpl
in
push
pop
dec
fwait
lods
shlb
mov
mov
les
dec
aaa
mov
lea
cli
pushf
out
jmp
push
incl
in
push
movsl
mov
and
push
mov
add
mov
mov
cmp
mov
stos
inc
pushf
pop
stos
jp
imul
mov
push
lds
shll
cmp
mov
mov
sbb
mov
pusha
dec
lock
dec
mov
fwait
sub
dec
mov
in
push
jae
ror
das
adc
mov
mov
mov
or
arpl
push
lods
adc
push
push
pusha
pop
xchg
push
sub
jo
addr16
in
jo
push
add
prefetcht1
adc
mov
mov
adc
push
iret
scas
incl
out
add
leave
pop
fwait
or
pusha
scas
cltd
push
popf
jge
mov
shlb
jne
orl
xor
jo
adc
pop
scas
pop
adc
jno
mov
add
xorl
shlb
cmp
out
outsb
dec
insl
push
ret
jle
lret
insl
dec
repz
out
mov
pop
out
scas
iret
in
jl
das
adc
jo
sbb
and
adc
adcb
push
enter
loope
jae
sbb
inc
movsl
aam
into
mov
lcall
pushf
mov
xchg
shrb
shrl
pop
mov
cmpsb
in
das
shrb
jo
cli
cmp
dec
daa
mov
dec
movsb
xor
sbb
mov
mov
adc
outsb
cltd
and
hlt
push
jg
and
clc
or
je
movsb
insl
mov
rcll
mov
loop
out
push
movsl
clc
or
adc
mov
adc
adc
sbb
in
pop
push
insb
push
jae
push
js
lahf
sbb
lods
lods
mov
push
iret
sub
jb
sqrtps
out
xchg
jb
jo
ss
and
outsl
fistps
aas
add
mov
push
and
cmp
enter
dec
inc
sysexit
jns
movsb
pop
mov
idiv
adc
xchg
ds
inc
and
mull
lods
or
mov
mov
int
movsb
aad
pusha
lea
sbb
hlt
sarb
lock
pop
and
mov
jo
and
or
call
jo
jne
daa
xchg
inc
popa
adc
mov
aad
sti
push
clc
push
dec
pop
xor
pop
lods
fwait
push
repnz
cli
rcrb
cltd
mov
loope
scas
jg
fists
sbb
jl
pop
pop
jno
and
sahf
jmp
outsl
ja
mov
stos
fisttpl
push
je
and
ret
xor
test
dec
out
mov
mov
cmpsl
xorb
aaa
mov
mov
roll
scas
clc
movl
mov
test
cmp
or
out
pop
mov
mov
pop
sbb
mov
int3
ja
xor
ja
lret
mov
fdiv
je
cltd
outsb
daa
out
mov
dec
lock
pop
push
arpl
lcall
dec
lock
ljmp
insb
fsubrl
jo
adc
inc
adc
mov
lcall
in
push
cmp
pop
mov
andl
and
jg
mov
or
jns,pn
xlat
jne
test
std
sbb
mov
push
ds
fsubrl
add
jge
sbb
sub
mov
cmp
ret
cmp
and
mov
pop
subl
outsb
cmc
mov
aam
fidivs
ljmp
fwait
cmp
pushf
imul
out
mov
fs
jb
xchg
mov
enter
sbb
sbb
mov
jns
lods
es
popf
icebp
xchg
enter
sahf
mov
and
add
mov
insb
jne
stos
lret
mov
adc
or
xchg
push
js
and
ljmp
mov
adc
cmp
sbb
mov
scas
pop
loop
xorb
jne
sub
sbb
xchg
repz
adc
mov
add
es
call
pop
pop
iret
aad
jl
mov
fdivr
test
mov
lods
int
dec
pop
repnz
inc
scas
mov
subb
adc
push
stos
and
arpl
mov
push
inc
les
fdivrs
imul
outsb
sbb
pushf
scas
cmpsb
xor
scas
and
xor
imul
stc
inc
mull
adc
push
mov
add
xchg
sahf
stos
dec
lret
push
mov
sbb
in
jg
loop
sub
mov
in
and
rorl
lods
out
mov
dec
popa
adc
or
mov
mov
mov
mov
lret
int3
xchg
call
ja
mov
sbb
iret
aas
xlat
mov
push
sbb
mov
adc
ret
sbb
xor
ljmp
push
stc
mov
aam
mov
jno
movsb
jecxz
cli
pop
jb
stos
jle
test
movsb
push
xlat
xchg
dec
push
shr
in
insl
stc
xchg
lods
call
jg
xor
lds
movsb
ret
pop
pop
int3
stc
cmp
cmp
je
dec
dec
pop
jmp
ret
and
fwait
pop
xor
cmp
in
imul
in
add
add
lods
cmp
flds
xchg
xor
ret
int3
jl
into
adc
dec
call
push
aaa
movsb
cmpsb
call
xor
push
les
scas
mov
xor
in
fsubl
pop
out
mov
mov
test
xor
ljmp
adc
fistpl
sarb
stc
cmp
aad
adc
lods
ficomps
cli
xchg
shl
in
and
inc
movsl
mov
jb
add
cmpsl
mov
dec
icebp
nop
cmp
repnz
fldl
sub
lods
mov
cld
push
mov
jmp
subl
or
dec
lret
in
mov
imul
fisubs
loopne
jo
pop
fs
sub
and
lahf
insb
loope
sbb
test
xchg
imul
stos
lea
lcall
xor
out
sub
call
dec
fadd
inc
inc
pusha
xchg
sti
out
out
or
push
add
pop
xor
popa
pop
imul
call
ret
inc
mov
test
das
adc
pop
mov
jo
in
shll
adc
lret
imul
add
jmp
add
dec
das
stos
sub
pop
fisttpl
jp
xor
inc
and
pop
or
fcmovbe
mov
cs
push
pop
mov
sbb
hlt
loope
sbb
jecxz
inc
data16
jle
je
and
mov
imul
mov
test
in
rol
and
dec
mov
insl
bswap
loopne
mov
dec
mov
push
daa
xor
rorl
push
call
sub
add
xchg
mov
fsubl
pop
and
push
cs
pop
inc
lods
fwait
push
xchg
sbb
jp
loopne
cld
sub
sub
loop
test
xchg
pop
jo
pusha
mov
mov
or
scas
xchg
sub
adc
addb
dec
inc
dec
adc
int
pop
sub
int
out
pop
repz
sbb
rcrb
xor
daa
inc
loop
loope
add
sub
cltd
inc
jbe
and
aas
rcrl
xor
idivl
in
xlat
test
mov
stos
sub
repnz
in
cmpb
mov
movq
cld
mov
or
sbb
cmp
xchg
jmp
mov
xchg
lods
jno
push
dec
sbb
in
aas
int3
inc
push
mov
inc
mov
test
xor
or
int
ja
inc
dec
fadds
out
ja
call
pop
xchg
sub
or
fsubrl
das
enter
cld
xor
addr16
cmpsb
mov
mov
outsb
mov
mov
push
sub
jne
mov
xor
das
loope
iret
rorl
stos
in
mov
aam
sbb
stc
cmp
out
dec
daa
ret
sbb
mov
cltd
mov
mov
adc
sbbb
push
xor
out
mov
stos
cmpsb
sub
in
mov
pop
icebp
adc
in
idivb
js
inc
scas
pop
mov
push
xchg
enter
fs
jmp
out
push
xlat
data16
mov
mov
xchg
jge
mov
mov
mov
fxch
sub
xchg
push
mov
add
outsl
bound
inc
imul
leave
vmwrite
pop
into
xchg
out
adc
mov
jmp
int
xor
mov
scas
xor
pop
cli
jl
xor
sbb
add
ds
lret
cld
mov
filds
sti
icebp
mov
add
or
imul
out
outsb
fsubrs
push
lahf
int
lods
add
mov
rolb
mov
or
movsl
jne
cmp
pop
aam
jg
into
call
mov
add
mov
in
inc
addr16
mov
ret
fiaddl
xchg
or
jle
mov
mov
dec
stos
cmp
ljmp
out
push
and
mov
cmp
jg
sbb
add
sbb
add
and
test
movsl
dec
pop
movsl
jl
pop
inc
movsb
sahf
cmp
cmp
iret
pop
jg
mov
inc
sbb
pandn
push
push
iret
xor
mull
xlat
xchg
xlat
sub
cmp
loop
sub
and
insb
push
add
scas
mov
pop
shll
mov
loop
cmp
in
out
adc
xchg
inc
cs
iret
ds
nop
mov
sbbw
push
subl
dec
push
mov
call
push
add
sub
inc
sub
dec
dec
xchg
pop
gs
push
mov
or
jl
fcmovnbe
in
movsl
lret
fwait
cmp
mov
pop
rclb
rcrb
pop
divb
pop
jae
push
mov
rcll
nop
xor
mov
mov
fimull
or
cmp
in
popa
jns
cmpsb
pop
std
xchg
sbb
mov
ja
mov
sub
mov
cmp
enter
insb
sbb
pushl
add
sbb
insb
clc
cmp
cli
subb
stc
jge
jecxz
or
xchg
xchg
xchg
lods
push
call
pop
mov
lods
xchg
push
push
mov
ret
ret
mov
das
xchg
hlt
sub
inc
sub
pop
aam
test
fistl
repnz
and
ret
test
pop
xchg
jecxz
adc
mov
sub
clc
jae,pt
nop
sub
out
outsb
lods
xchg
adc
dec
sub
mov
packuswb
xchg
jl
dec
bound
pop
in
cmpsl
in
stos
xchg
sahf
mov
mov
popf
jle
inc
xchg
lock
mov
data16
mov
mov
xor
jle
arpl
ds
add
lock
mov
cmc
insb
pop
xchg
cli
sbb
or
nop
test
repz
call
sbb
lock
andb
dec
add
lock
cmpsb
ret
mov
fbstp
arpl
mov
jmp
inc
shlb
test
sbb
xor
jo
mov
add
push
into
lahf
pop
jle
daa
dec
dec
xchg
iret
push
daa
pop
xor
out
add
loope
cld
jns
sahf
dec
adcb
aad
aad
ds
out
enter
shl
shlb
popa
push
inc
or
jecxz
test
ja
inc
inc
dec
nop
outsb
mov
sbb
sbb
cmpsb
xchg
ds
add
sbb
lock
cltd
dec
add
sub
adc
xor
pop
test
mov
mov
adc
mov
sbb
xchg
fs
or
inc
sbb
mov
xchg
adc
push
insb
pop
gs
hlt
xor
in
dec
int3
cli
xchg
scas
shll
pop
or
movsb
cmp
dec
cmp
xor
repz
aad
push
or
push
fmull
push
fs
sub
push
xchg
jno
jns
jb
aad
jne
xchg
insb
data16
nop
ret
cmpsl
cltd
rcrb
out
arpl
adc
dec
mov
jno
fs
mov
std
mov
and
lahf
ja
or
cmpsb
and
xchg
sub
push
lea
jecxz
inc
fs
in
xchg
mov
xchg
call
imul
jg
jg
testb
add
aad
adc
cmp
daa
dec
push
and
push
add
pop
icebp
add
jmp
xchg
inc
push
out
insl
mov
push
sub
movsb
testb
dec
int
jmp
mov
xlat
aad
js
dec
xchg
dec
popa
test
xchg
push
insb
fldl
dec
les
push
xchg
cli
add
xchg
ja
shrb
push
stc
ficomps
mov
sahf
cmp
lret
and
mov
lahf
add
xlat
or
stos
push
mov
shrb
add
adc
aam
icebp
mov
jne
popf
dec
xor
in
sub
sbb
sbbl
ret
xor
stos
cmp
mov
testb
out
dec
icebp
xchg
xor
call
clc
sub
sub
into
sbb
aad
scas
cltd
test
cli
xorl
and
push
fwait
stos
dec
inc
sbb
outsb
mov
jbe
jne
repz
stos
ss
xchg
dec
lods
shll
adcb
add
dec
jne
push
jnp
fnsave
xchg
pop
inc
inc
push
xchg
push
fwait
mov
or
pusha
jnp
inc
xchg
adc
or
sbbb
call
dec
inc
repz
push
mov
push
pushf
scas
jbe
xchg
mov
adc
das
push
jns
gs
xor
jecxz
mov
movsl
gs
push
ljmp
lcall
jbe
xor
or
aad
imul
test
cmp
ret
out
outsl
mov
inc
pop
scas
andb
test
xor
inc
sbb
out
bound
adc
sub
imul
push
mov
je
int
sti
mov
jnp
aad
jecxz
lds
lret
sbb
repz
add
int
cs
push
mov
add
jo
sub
fs
dec
shll
out
mov
stos
sub
pop
iret
xor
nopl
lcall
aas
pushf
and
scas
cltd
mov
ret
inc
cmp
add
std
mov
out
dec
add
dec
sbb
mov
ret
pushf
and
sbb
call
cmpl
cmp
data16
cwtl
sbb
dec
or
loopne
jmp
in
push
or
cmpsl
or
filds
inc
xchg
mov
rcr
sbb
or
jecxz
cmp
je
test
and
mov
ja
iret
pop
adc
daa
test
inc
lret
cmc
aas
hlt
mov
push
hlt
xchg
cmp
imul
push
xchg
orb
scas
cmp
jno
add
pop
mov
inc
ja
xor
mov
sub
cld
jmp
push
ret
cwtl
inc
pop
push
jmp
std
add
std
repz
test
sbb
insb
cwtl
jle
push
inc
dec
ja
jbe
aas
xchg
xchg
ret
loope
test
nop
adc
inc
xchg
push
inc
xchg
icebp
rol
sbb
and
icebp
lret
sub
and
in
cmpsl
scas
les
hlt
xchg
fsub
rcr
je
jge
xchg
int
int3
or
and
mulb
fldenv
in
lock
cmp
xor
mov
adc
int3
test
xor
mov
push
add
or
lahf
lcall
inc
inc
inc
or
inc
push
mov
mov
addr16
cltd
and
ss
push
cmp
aam
mov
loopne
jae
inc
ret
arpl
pop
xchg
mov
mov
sub
out
sbb
or
jmp
sub
xchg
and
stos
ror
mov
mov
push
add
mov
push
and
les
out
sub
push
sub
or
mov
fmuls
inc
shll
pop
inc
sub
das
mov
push
dec
in
sub
movsb
cli
imul
leave
pop
aas
mov
xlat
add
xchg
push
in
ret
sbb
sar
xchg
adc
out
mov
outsb
sub
inc
cwtl
call
lods
leave
inc
loope
xchg
lods
jno
push
mov
cmp
jecxz
push
lods
ret
push
mov
clc
mov
leave
js
sbb
cmpsb
sbb
mov
dec
pop
int3
stos
data16
mov
stos
add
cli
lcall
push
push
lahf
sti
fstps
jne
dec
inc
cmp
arpl
dec
mov
pop
push
sub
pop
repnz
arpl
xchg
aad
mov
mov
in
clc
sbb
push
sbb
ds
mov
in
out
les
lret
sahf
inc
fistpl
and
ret
xchg
inc
and
inc
lods
out
add
aad
scas
mov
mov
lods
xchg
add
dec
dec
roll
and
adc
fwait
shrl
subl
in
mov
lret
mov
imul
dec
scas
jae
add
lcall
xor
movsb
sbb
or
pop
test
sbb
dec
dec
out
out
shll
jmp
int3
shrb
mov
popf
push
ret
mov
lds
xor
inc
sub
sbb
or
test
sub
jmp
jmp
xor
pop
scas
dec
ljmp
and
or
mov
jo
clc
scas
addr16
cs
stos
dec
cmp
arpl
arpl
sbb
lock
cmp
adc
jae
dec
mov
xor
repnz
test
roll
shlb
je
aaa
push
add
lretw
push
dec
shll
imul
cmp
pop
outsb
adc
cmp
sbb
xchg
add
das
test
cmpl
es
lock
mov
jmp
push
sub
xchg
xor
and
mov
cltd
jg
test
sbb
jb
xchg
imul
sub
hlt
mov
outsb
cmp
dec
aas
movsb
xchg
add
rcll
push
test
outsb
mov
lds
loop
loop
sub
sbb
insl
cmp
adc
int
push
lret
scas
aaa
out
dec
leave
cld
js
mov
fidivrl
jp
add
cwtl
or
leave
mov
sub
insb
sti
push
adc
fldt
das
mov
loop
cmp
mov
pop
sub
imul
jae
ja
lods
or
xor
rcrb
movsl
loop
inc
mov
xlat
fisttps
pop
cld
jne
xchg
bnd
js
adc
inc
test
sbb
icebp
stos
addr16
or
ljmp
nop
loopne
fbld
jl
xchg
enter
fbld
or
sbb
jecxz
enter
jle
cmpsl
test
jbe
lods
test
aam
sbb
dec
ljmp
mov
imul
pop
das
or
jge
inc
add
push
test
xorl
jle
mov
add
pop
int
xchg
jmp
mov
pop
lods
arpl
test
jp
inc
loop
push
out
add
aaa
fwait
xor
clc
mov
jp
test
in
pusha
outsb
dec
mov
xchg
stos
das
or
dec
dec
mov
mov
fisttps
push
jp
add
adc
ret
xor
dec
mov
jmp
mov
push
inc
jp
scas
mov
push
inc
fldcw
xor
sbb
fstpt
imull
push
xor
mov
xchg
and
inc
fidivs
sub
push
push
mov
push
bound
in
scas
cmpsl
sbb
adc
adc
xchg
adc
and
les
add
push
xchg
jne
push
add
xchg
les
push
icebp
jmp
pop
mov
mov
mov
out
mov
mov
lock
shr
mov
mov
sbb
cmp
fwait
das
cmc
ret
pop
pop
push
or
lods
pop
mov
pop
mov
xchg
lret
aad
add
mov
fldt
imulb
test
lds
adc
cli
inc
sti
test
and
pop
fucomi
mov
push
jp
lahf
arpl
jge
mov
cmp
cs
sbb
cmp
xor
in
pop
and
xchg
in
mov
or
xchg
sti
inc
mov
jp
test
mov
dec
push
and
mov
icebp
fs
call
push
movsl
dec
add
dec
xor
xor
icebp
mov
popf
cmp
imul
push
ret
and
call
stos
xchg
ret
ljmp
push
in
mov
jns
lret
pusha
push
sub
scas
scas
imul
sbbl
out
or
mov
lret
mov
or
nopl
popa
loopne
jo
or
lret
insl
stos
jnp
cmpl
xchg
add
and
xchg
stos
inc
pop
mov
push
push
mov
ret
push
push
cmp
les
test
daa
les
inc
ds
dec
lcall
popf
lods
sub
jne
add
loopne
das
jbe
pop
xchg
insl
and
icebp
outsb
in
leave
shlb
and
jbe
aam
lret
xor
dec
aad
in
jb
or
loop
mov
movsl
push
dec
adc
cmc
fadd
mov
jb
stc
enter
and
push
fwait
popa
or
std
sbb
ret
insb
and
inc
outsl
cltd
inc
movsb
loopne
inc
cmpsl
or
sti
or
xor
mov
xchg
hlt
adc
cmc
outsl
pop
and
stos
aad
scas
stos
clc
mov
aaa
test
mov
addr16
mov
mov
inc
xor
mov
lret
push
data16
lea
pop
mov
aad
lret
stc
mov
addr16
in
jnp
push
jmp
and
lret
fistl
je
xor
xchg
mov
notb
dec
test
lret
mov
rolb
into
cs
loopne
lods
dec
or
scas
xchg
mov
push
cli
pop
add
sbb
lret
movsb
ss
in
xor
je
cmc
xor
dec
leave
inc
ds
xchg
or
jmp
arpl
push
push
orb
rcrb
cmpl
dec
sbb
mov
aam
jns
dec
fstps
cld
mov
sub
pusha
stos
mov
push
ss
out
les
cltd
fmull
repnz
jmp
ficomps
mov
jbe
stos
movsb
mov
mov
scas
xchg
gs
mov
inc
bound
out
lds
xlat
shrb
adc
sub
mov
adc
bswap
jne
lods
test
ja
popa
loopne
mov
cmpl
sbb
jno
lock
pop
inc
mov
inc
ds
loope
shufps
push
inc
fmuls
adcl
adc
into
pop
jp
fisubs
mov
nop
xor
or
jae
ret
jne
dec
out
sti
sbb
bound
aas
lods
scas
out
cld
xchg
mov
sbb
mov
movsb
aad
push
xchg
lcall
arpl
ja
add
popf
mov
ja
inc
xor
push
mov
aad
push
sbb
dec
mov
sbb
into
incl
iret
lret
sbb
cs
inc
imul
call
jmp
dec
inc
lahf
adc
ds
pop
cld
add
push
xchg
jne
imul
jbe
dec
mov
dec
mov
inc
inc
xchg
cltd
sub
sbb
out
and
mov
xor
fidivrs
xchg
push
les
inc
sub
push
sti
ds
pop
shlb
cmpsl
mov
mov
scas
pusha
fnstcw
fs
adc
mov
rcrb
sub
xchg
rorl
sbb
negb
mov
add
mov
aas
fst
cmpsl
push
sti
cmpsb
xchg
aas
add
fwait
and
mov
jo
pusha
jge
cmp
or
pop
mov
inc
iret
mov
cmp
adc
std
or
sbb
shlb
negb
dec
pushf
xchg
pushf
jl
and
fistps
or
cwtl
out
enter
pop
call
orl
inc
adc
outsl
adcb
inc
add
insb
das
negb
iret
push
les
repnz
mov
lret
insl
js
cmp
and
mov
sub
adc
dec
pause
outsb
mov
pop
dec
xchg
dec
jmp
inc
dec
cmp
inc
cmp
push
jge
fcmovu
push
fiadds
jne
insb
sub
ret
rcr
cmp
push
nop
hlt
cli
aaa
pop
pop
scas
subl
xchg
mov
pop
mov
out
adc
add
push
in
jmp
or
sub
and
int3
mov
in
test
pop
mov
inc
or
jae
or
scas
inc
mov
jmp
mov
aam
test
dec
aaa
jnp
imul
mov
jecxz
lahf
mov
mov
pop
js
push
popa
xor
fsubrl
out
sti
daa
sbb
and
test
divb
mov
xchg
mov
in
pop
hlt
jmp
jo
push
gs
cmpsb
lds
subl
ja
js
jle
pcmpeqw
js
dec
dec
mov
les
lods
fs
mov
dec
cmpsl
xor
cmp
shr
in
cmp
xor
popa
xor
add
stc
out
adc
out
cmp
popa
nop
mov
and
lds
dec
adc
add
xor
and
sbb
loopne
mov
dec
push
andl
xchg
scas
gs
and
popa
imul
clc
pusha
add
rclb
adc
mov
xchg
mov
xchg
jae
xlat
ss
or
add
xor
sahf
fwait
movsl
repz
mov
and
sub
mov
test
pop
cmc
adc
ss
outsl
lret
loope
outsl
pop
mov
jae
cltd
lret
pop
adc
push
loope
out
repz
pop
rorl
mulb
push
sub
or
xchg
pop
lods
xchg
out
and
xor
test
push
rcrl
sbb
ss
movsl
je
scas
scas
xor
out
or
outsl
popf
pop
mov
or
and
sub
bndstx
mov
mov
cmpsl
shl
or
out
sbb
cmp
pop
mov
inc
dec
xor
sub
sub
or
sub
rcrb
jno
xchg
cmc
iret
jb
leave
pmulhw
mov
xchg
or
xor
dec
cmp
jno
adc
add
mov
mov
jo
cmp
lock
call
pop
in
pop
xor
lods
push
popf
sbb
push
leave
cltd
add
push
roll
dec
xor
negl
fstps
hlt
xchg
shrb
sahf
sbb
adc
cmp
sbb
iret
loope
sub
stc
sub
stos
loope
aam
fbld
and
outsl
ret
xchg
adc
cwtl
outsl
in
icebp
xor
arpl
inc
xchg
sub
mov
clc
jns
dec
cmp
or
jo
inc
jne
jmp
adc
jge
pop
and
jmp
mov
mov
pop
mov
je
in
push
std
ret
jp
inc
lods
sub
adc
dec
mov
dec
push
int3
mov
sub
es
adc
inc
sub
dec
lds
sbb
and
sbb
clc
lds
aam
inc
inc
cmpsl
in
dec
push
cmp
movsb
pop
enter
adc
jb
addl
lss
frstor
mov
jle
fs
cmpl
xchg
and
inc
mov
stos
inc
xchg
push
sub
clc
sub
cmp
xor
pop
stc
in
sub
nop
cli
mov
xlat
cwtl
mov
push
push
sbb
scas
call
xor
xchg
lods
daa
imul
mov
iret
andl
lods
pop
lret
push
movsb
mov
loope
xor
pop
mov
xchg
xchg
ficoms
mov
sarl
stc
aad
sbb
hlt
push
xor
inc
fsubrl
pusha
popf
aaa
in
out
push
sub
jge
into
test
inc
mov
into
loope
pop
or
xchg
in
lock
push
sbb
cwtl
je
lods
inc
pop
jmp
dec
or
shl
push
shrl
pop
dec
dec
loop
testl
jns
out
pop
or
dec
andb
lcall
and
add
popa
stos
movsl
xor
cmpsb
cltd
mov
es
ret
push
pop
xor
mov
loope
pextrw
cmpsl
mov
and
call
adc
stos
mov
popl
push
int3
push
scas
jg
lock
aam
adc
in
call
sarl
or
push
dec
into
mov
sub
inc
loope
out
push
adc
xchg
test
inc
lods
out
and
mov
lea
xchg
xchg
js
daa
into
mov
shrb
iret
arpl
or
pop
cli
fstl
in
dec
mov
je
sbb
into
cmc
push
add
test
push
cmpsb
imulb
test
shl
jmp
and
and
or
mov
movsl
loop
in
cmp
push
dec
or
or
inc
add
scas
faddl
pushf
into
scas
addb
fisttpl
and
js
std
sub
lcall
dec
push
lcall
sbb
subl
pop
inc
enter
cs
jmp
insb
and
pop
clc
xlat
dec
in
in
xchg
push
neg
mov
jl
ljmp
xor
sbb
fmul
mul
mov
inc
jl
gs
dec
inc
aad
pop
loopne
shlb
shrb
adc
movsl
jl
or
sub
cmp
loopne
int
clc
xor
inc
js
or
stos
add
sub
adc
adc
arpl
pop
dec
bound
xchg
or
mov
and
cmp
pop
pop
sub
popf
mov
sti
jns
mov
add
mov
mov
jbe
out
loope
sbb
cmp
sub
iret
ret
test
sub
hlt
or
scas
fdivrl
push
movsl
mov
pop
js
mov
cmp
repnz
add
xchg
dec
mov
dec
and
adc
push
aas
xchg
imul
mov
outsl
inc
cmp
lcall
test
ret
imul
imul
dec
xchg
sbb
sti
or
dec
shll
pop
push
fucomp
mov
jne
gs
dec
mov
cmp
out
and
int
xor
rcr
scas
mov
xor
lret
mov
inc
lahf
inc
xchg
mov
push
fld
xchg
jmp
lahf
or
daa
dec
rorb
xchg
loop
fildl
jbe
stos
inc
scas
lea
arpl
popf
and
and
imul
fisubrl
pop
lea
mov
stos
adc
jae
adc
fwait
lods
out
xor
adc
int3
rclb
cmpsl
shlb
mov
mov
inc
push
pop
insl
jg
jl
push
fists
jns
lcall
inc
jge
lahf
sbb
or
add
lahf
in
int3
mov
add
mov
push
sbb
dec
push
pop
inc
cmp
negb
movsl
ljmp
dec
fucomi
pop
mov
out
push
icebp
or
cmp
sbb
pop
aam
and
cmpsb
js
inc
sub
insb
jne
iret
bound
mov
enter
mov
movsb
jnp
mov
xlat
insl
mov
dec
xor
or
pushf
clc
mov
cmp
jmp
sbb
or
cmp
outsb
jo
ret
adc
push
scas
filds
jmp
iret
add
int
sub
loop
aam
inc
or
pop
enter
push
aam
cld
leave
jno
jo
dec
inc
jb
lock
or
fcoml
adc
mov
repnz
enter
pop
ja
pop
int3
dec
push
xor
add
data16
loop
and
adc
lret
or
popf
mov
test
js
xchg
mov
into
ret
sti
push
xchg
gs
int
pop
xor
adc
jae
stc
fidivl
inc
jne
fisttpll
cmpsb
movsb
pop
mov
push
pop
inc
dec
leave
push
lds
sub
sub
mov
cmc
call
sbb
sbb
shlb
in
repnz
mov
jmp
or
and
filds
lock
mov
jae
mov
pop
mov
cmp
sbb
shrb
jns
push
mov
leave
ficomps
enter
es
fnstenv
fwait
pop
insb
movsl
fwait
cltd
ret
adc
fdivl
ljmp
or
mov
xor
lahf
mov
std
test
push
dec
aam
dec
push
pop
in
bound
and
adc
mov
mov
jl
shll
mov
dec
lret
pushf
sub
nop
pushf
jnp
mov
sbb
mov
leave
addr16
call
jnp
aad
insb
jo
insb
sbb
iret
inc
in
lret
inc
xor
adc
ljmp
iret
loope
jns
jb
and
add
xor
fwait
and
cmp
mov
loope
imul
dec
icebp
aaa
add
cwtl
adc
xchg
sti
push
movl
fsub
repz
jecxz
mov
fld
das
dec
subl
push
sbb
jle
sahf
cmp
xor
jle
add
pushf
or
dec
ret
xlat
jecxz
mov
push
sbb
jg
mov
xchg
inc
in
stos
decb
andb
or
in
and
popf
adc
xor
mov
rcrb
inc
pop
popf
icebp
out
mov
cmp
adc
xor
call
dec
bound
fs
sub
cmc
cmp
ret
pop
mov
xor
cmp
or
mov
sub
ja
fiadds
pop
sbb
sahf
mov
push
js
fs
xchg
movsb
mov
xor
sbb
or
arpl
push
and
pusha
pop
ja
and
mov
js
jmp
cld
or
or
or
lcall
dec
pop
sub
xchg
mov
in
cmc
jo
push
sub
lock
in
fisttps
cmc
fs
aas
xor
repz
jb
dec
movsl
push
test
xchg
lcall
call
xor
xchg
mov
pop
pop
jb
inc
fiadds
mov
cmp
rcl
adc
push
pop
jge
outsl
leave
inc
fcompl
inc
xchg
xchg
or
arpl
cmpb
jg
cli
pop
in
out
pushf
dec
subl
imul
icebp
xchg
add
sbb
in
pop
adc
pop
push
jl
sbb
sbbb
sbb
jnp
js
lret
fdivl
addr16
ret
jp
insb
xchg
fistps
xlat
scas
test
push
in
cs
into
mov
and
or
mov
push
mov
add
add
add
pop
cmp
or
pop
mov
cmp
inc
xlat
dec
adc
mov
addl
push
cltd
orb
push
das
sbb
push
pop
mov
jb
repnz
xchg
push
dec
fstpt
insb
stos
repnz
pop
cmp
scas
push
lds
adc
jae
jbe
xor
mov
push
adc
mov
in
mov
andb
mov
lahf
ja
lock
test
jl
in
push
jecxz
jmp
aaa
stos
pop
lahf
cmp
stos
ret
not
and
ds
notb
jnp
inc
adc
adc
lods
cmp
dec
bound
xchg
xorl
xchg
mov
sbb
cmc
sub
jge
out
jb
cmpl
mov
ss
mov
in
and
add
fidivrs
fimull
pop
gs
test
pop
pop
ret
popf
dec
push
cmpsb
ljmp
adc
lds
ret
jg,pt
test
push
pop
push
mov
mov
sbb
shlb
xor
mov
push
int3
jge
ret
test
clc
shll
fnsave
xor
fcoml
dec
and
inc
inc
subl
xchg
fwait
stos
mov
bound
loope
in
fcoml
gs
mov
enter
scas
and
sub
sahf
sarb
or
sub
dec
fstl
cwtl
mov
xchg
mov
inc
imul
scas
sbbl
ja
es
daa
dec
leave
lret
cmpb
dec
and
inc
repz
xchg
fwait
xchg
mov
rolb
pmulhuw
jge
adc
push
addr16
decb
cli
insb
or
jnp
imul
or
imul
jb
das
and
mov
push
push
ret
rclb
js
mov
das
or
or
adc
lock
dec
jnp
cmp
or
fldcw
shlb
adc
adc
imulb
leave
mov
imul
xor
mov
jb
push
rclb
xlat
roll
dec
shll
sbb
jecxz
jge
imul
or
lds
mov
pop
pop
aam
movsb
arpl
jo
and
add
loope
sbb
and
mov
ret
sub
jne
mov
pop
mov
int3
rol
push
pop
mov
cmp
fisubrl
shrl
mov
cmp
loopne
subb
call
inc
repz
add
cwtl
clc
call
mov
enter
pop
mov
cs
daa
mov
cli
in
xchg
popw
inc
xor
mov
insl
andb
cltd
push
scas
xchg
and
adc
loopne
and
movsl
jle
in
xor
pusha
fdivl
test
cmp
or
inc
add
inc
bound
dec
jl
lds
add
sub
mov
arpl
ficompl
cmpsb
ret
gs
mov
push
dec
addr16
cmp
sub
push
sahf
int3
lahf
add
jp
lahf
sub
sbb
sbb
pop
outsl
mov
inc
repnz
add
fidivl
push
data16
sarl
lock
mov
rcl
dec
jecxz
hlt
arpl
mov
xchg
jmp
subb
xor
aas
scas
mov
int3
sub
sbb
scas
imul
lds
std
mov
in
sar
or
cmp
dec
mov
add
add
mov
dec
lods
and
scas
xor
add
mov
and
lods
in
pop
mov
loope
xchg
cmp
add
dec
jae
mov
xchg
or
jo
sbb
mov
fadd
mov
pop
idivb
mov
or
or
xchg
pop
add
pop
sub
ror
jno
xor
dec
jnp
inc
push
fmull
dec
xor
push
pop
mov
mov
cmp
jnp
inc
mov
test
xchg
or
es
inc
jae,pt
push
and
je
lods
jg
sub
pop
or
add
shrb
jne
stos
stos
incl
add
insb
gs
jb
gs
out
add
aas
and
sub
shlb
mov
push
test
mov
cmp
dec
mov
js
adc
lods
fdivs
ds
cli
mov
pop
lahf
sub
divl
mov
fs
mov
loop
das
loope
and
xor
push
add
pop
dec
stc
fcomps
out
iret
jg
cwtl
test
fidivl
adc
add
pop
loopne
out
push
int3
inc
int
xchg
ret
jmp
lods
lock
or
jo
call
adc
and
cltd
pop
daa
fisubrs
les
xor
out
addl
lds
inc
lds
jbe
repz
imul
mov
aam
pop
xor
adc
mov
sbb
adc
cli
jne
pop
and
cld
cmpsl
adc
sub
mov
sub
data16
test
lcall
rolb
xor
dec
push
in
xlat
rcrb
fcomp
push
pop
out
mov
adc
mov
jmp
lea
sbb
pop
test
rcr
stos
sarl
das
jmp
cwtl
add
loop
add
lds
xor
xchg
call
push
pop
add
addr16
or
fincstp
sbb
pop
adc
repz
mov
call
cmp
gs
sub
je
mov
sbb
les
and
sarb
ss
xchg
shll
mov
out
mov
pop
pusha
xchg
popa
dec
faddl
decl
jmp
push
pop
arpl
jle
stos
out
mov
sbb
or
jmp
mov
cmc
or
icebp
fyl2x
fisubrs
scas
lahf
add
push
mov
push
adc
dec
adc
sti
mov
adc
pop
shlb
addr16
mov
inc
movsb
mov
bound
push
xchg
push
inc
mov
inc
mov
outsl
cmpsb
cld
push
pop
out
sbb
sub
xchg
xchg
xlat
mov
push
push
mov
cmpsl
stos
lods
add
mov
add
stos
adc
sbb
stos
or
pop
inc
pop
adc
xchg
bswap
xchg
testl
inc
std
ficompl
xor
xchg
loope
mov
mov
sbbl
data16
xor
popf
adc
repnz
lods
mov
outsl
lcall
test
out
js
pop
jl
cmpsl
je
aas
insl
test
cmp
and
xor
js
pop
inc
je
cmp
shrb
pop
testb
sub
sbb
jno
xchg
movsl
mov
sbb
xor
popf
add
cmp
mov
mov
in
nop
pop
jns
sub
push
ljmp
insb
fsubl
arpl
lret
aas
xlat
fmuls
rorb
xchg
dec
repz
push
fdivrl
ja
add
js
dec
pop
rcrl
jns
push
adc
ret
xchg
shl
mov
push
into
enter
cli
rcrb
rcrb
cmp
in
leave
mov
addb
dec
sub
js
xorb
cmpsl
lret
imul
pop
sbb
int
adc
faddp
test
test
std
push
sahf
ja
das
imull
fistps
setae
fisubrl
sub
jge
xchg
dec
addr16
dec
dec
incb
add
cld
xchg
std
repz
mov
call
aas
stc
or
addr16
add
aam
jo
or
sub
jno
sub
jle
sbb
fdivp
mov
mov
push
out
ret
or
sbb
xchg
imul
pop
lcall
ret
gs
sbbb
add
clc
push
fists
and
pushf
dec
inc
js
scas
dec
loop
and
aad
push
xchg
lcall
in
pop
cwtl
pop
pusha
repnz
in
popa
les
outsl
sar
jl
mov
aam
iret
pop
push
push
pop
into
lret
sub
fcomp
icebp
cmp
or
push
push
aaa
jnp
mov
lret
in
test
add
jns
int
or
daa
sar
push
mov
mov
or
mov
xchg
jns
fnsave
scas
xchg
cmp
xchg
jmp
jae
xor
sub
cli
repnz
jl
push
push
into
mov
mov
mov
bound
and
pop
repnz
scas
mov
or
popa
andb
insb
ja
pop
sahf
cltd
mov
les
scas
flds
xchg
loope
mov
dec
pop
sub
add
add
jle
push
mov
and
not
aad
xlat
lret
xchg
stos
loopne
xor
jle
sub
fs
in
ror
or
xchg
add
ss
adc
cmp
xor
mov
cmpsl
lahf
ret
fisttpll
mov
or
sbb
psllq
xchg
cmp
mov
jecxz
cmp
xchg
dec
stos
mov
push
mov
jg
cmp
xchg
mov
push
xor
sub
mov
push
fwait
push
gs
dec
sub
leave
push
cltd
push
mov
jg
mov
clc
mov
push
pushf
int
push
std
roll
push
ljmp
in
bound
and
stc
jg
mov
mov
jno
jecxz
xchg
mov
lds
lds
push
xchg
mov
dec
cmp
negb
out
and
aaa
repnz
push
pop
aas
or
jmp
fists
mov
inc
push
lods
aas
dec
mov
lods
dec
test
inc
inc
mov
js
sub
cmp
jecxz
data16
xor
sarb
pop
add
nop
hlt
fdivrl
mov
lret
adc
pop
lock
rorl
in
sub
add
push
out
rclb
mov
or
push
or
and
xor
and
data16
or
add
jbe
out
ss
push
inc
xor
sahf
mov
outsb
out
rcll
cmp
out
jns
rorb
or
loop
pop
fdivs
cltd
movb
sbb
std
test
ljmp
iret
int3
jl
and
jp
mov
adc
push
shrl
es
nop
lahf
bound
jle
jns
push
or
mov
or
jno
add
mov
and
ret
pop
loopne
loopne
shl
fcomps
je
filds
inc
in
dec
push
fwait
mov
and
mov
inc
mov
data16
outsb
xor
add
jmp
mov
fsts
out
cwtl
cmp
mov
mov
mov
mov
xor
and
movsl
rol
std
add
xchg
mov
xchg
mov
adc
loop
jle
xchg
add
push
xchg
adc
cmp
subl
push
and
jle
dec
and
pop
rcr
jbe
fisubs
nop
stc
xchg
mov
fs
pop
loopne
arpl
cmp
in
xor
clc
ss
xchg
dec
test
sub
add
push
iret
movsb
mov
cwtl
in
cltd
jae
and
int
pop
and
insb
adc
in
mov
cmp
push
and
int3
into
adc
aaa
push
or
jmp
imul
dec
inc
scas
idivb
iret
jmp
dec
add
jo
push
aad
ret
fwait
ljmp
cmc
cwtl
adc
mov
jbe
cmc
xor
sub
sbb
cmpsl
ret
xrelease
fstl
cli
pushf
sbb
jmp
and
sbb
cmp
cmc
add
cmp
dec
cs
out
pop
pushf
jmp
push
adc
cmp
test
xor
lcall
pop
faddl
mov
nop
dec
cmp
in
aas
pop
dec
inc
sahf
sub
je
notb
push
mov
cwtl
xchg
push
arpl
imul
pop
mov
xor
lods
xchg
sub
jle
or
cmpb
sbb
xor
incl
and
popa
lea
or
lea
es
add
adc
lods
dec
cmpsl
dec
jge
rcll
int3
cld
lds
mov
pop
dec
lock
push
cmp
or
jb
dec
pop
fildll
mov
pop
out
inc
add
popf
mov
pop
pop
xchg
scas
stc
jo
and
iret
gs
mov
test
test
dec
push
popa
das
aam
cwtl
jo
adc
mov
sarl
xchg
cmpsl
arpl
mov
push
cmp
jns
ret
push
inc
inc
out
repnz
jns
mov
xor
pop
mov
mov
inc
es
and
inc
xor
or
mov
jmp
push
xchg
sbb
adc
into
out
add
outsb
fdivr
sub
repz
imul
lahf
inc
inc
pop
test
xchg
sbb
jge
mov
sub
les
cli
sbb
mov
imul
stc
lret
mov
mov
mov
clc
adc
sbb
inc
xchg
mov
lahf
pop
mov
call
cltd
jp
hlt
fdivs
adc
or
xchg
loope
leave
pop
mov
lds
inc
add
orl
test
out
xchg
mov
mov
cmc
in
add
ret
lret
sahf
add
dec
imul
iret
sub
dec
jb
and
dec
gs
xor
out
or
mov
mov
mov
addl
testb
sub
scas
dec
jae
iret
notl
mov
jne
jge
loopne
inc
xchg
rcrb
lahf
dec
fcmovne
push
loope
mov
insb
in
iret
ja
frstor
cmpsb
das
pop
fistl
sub
leave
jge
mov
movsb
add
sbb
mov
fwait
jle
xlat
jge
jo
lock
or
push
repnz
cmpsb
rcrb
sbb
dec
inc
mov
push
or
cmp
push
cli
dec
jle
call
inc
imul
pushf
push
je
jp
in
inc
mov
inc
jae
add
leave
dec
xchg
data16
sar
jne
mov
and
repnz
and
mov
aad
nop
mov
adc
sbb
sahf
jp
cmpsl
mov
or
out
rcrb
out
mov
out
or
adc
sub
pop
arpl
fmull
aad
lret
stc
addl
inc
mov
into
ud0
aam
mov
and
stos
xchg
sti
jnp
cld
arpl
dec
and
shll
jb
or
rcrl
arpl
test
mov
inc
hlt
scas
cmpsl
cli
mov
ret
pop
push
cmp
lea
imul
jb
mov
dec
jl
pusha
ljmp
pop
data16
fcoms
and
shl
fsubs
popl
mov
sbb
cmp
push
sbb
cld
cmp
movsb
mov
mov
in
inc
jne
cmp
adc
lret
lds
arpl
jo
xor
leave
inc
cld
add
mov
adc
inc
or
orb
mov
fwait
jne
push
shrb
scas
rorl
loop
setl
out
scas
test
cmp
fildl
shlb
sti
fstpt
add
push
or
cmp
in
push
sub
mov
add
das
cmp
and
gs
popa
xor
inc
iret
pusha
shlb
hlt
aas
call
push
add
mov
add
mov
bts
xor
sbb
fwait
popf
and
lods
pusha
fcmove
mov
movsl
sbb
lock
push
xor
shlb
lods
xlat
enter
test
add
mov
iret
xchg
pop
lcall
nop
aaa
cmp
imul
mov
cmp
lds
sbb
adc
and
mov
sub
push
xchg
hlt
push
pop
and
orl
and
adcb
pop
movsb
cltd
stc
mov
insb
cltd
push
push
jnp
pushf
xchg
xor
outsl
xor
repnz
mov
das
into
sub
jns
shl
mov
pop
pop
out
ja
and
sbb
stos
xchg
ds
and
pusha
ficoms
mov
cltd
adc
ffree
xor
dec
test
pop
lds
fwait
xchg
or
or
add
fnstcw
add
fstpl
mov
sbb
push
lret
and
repnz
out
ret
aad
push
xor
cmc
xchg
or
xor
push
push
jbe
xchg
shll
mov
mov
into
movsl
stc
adc
pop
or
ss
xor
push
sti
xchg
fs
pusha
xor
jno
aam
sub
enter
push
loopne
fs
xchg
loop
pop
xchg
xorb
loop
xor
mov
xchg
inc
aad
sub
testl
mov
add
mov
movsb
xor
into
fsubl
dec
jmp
inc
mov
stos
sub
imul
push
sbb
sub
cmp
in
mov
lcall
xlat
pushf
inc
push
mov
push
push
cli
cwtl
mov
lret
out
rorl
mov
xor
pushf
jno
add
xchg
mov
aad
xchg
push
dec
lods
add
pop
push
xor
loopne
inc
add
imul
and
add
xchg
push
mov
mov
pusha
ret
sub
lods
pop
sub
pop
lods
clc
adcb
lea
sbb
fcomps
aas
add
fisttpl
xlat
inc
aas
pop
dec
add
xchg
mov
rorl
insb
into
sbb
in
inc
loope
adc
cld
xchg
mov
add
into
mov
mov
sahf
stos
sub
dec
std
adc
out
xor
sbb
jb
cmp
inc
scas
stos
ret
out
pusha
cmc
js
push
jne
pop
add
sbb
sub
lret
inc
sub
gs
roll
stos
insb
pop
dec
sbb
cld
stos
add
xchg
shll
lods
out
dec
mov
xorb
sbb
mov
sub
add
cmp
jo
lock
inc
mov
es
int3
in
vcvtsd2si
cmpb
push
jmp
or
xchg
lahf
lcall
or
les
insb
xchg
adc
lret
sub
sarl
pop
cs
pop
cmp
cmc
aas
int3
paddusw
xchg
iret
pushf
adc
loope
sbb
xchg
cmp
outsl
and
dec
jo
jle
sub
gs
xor
adc
mov
daa
sbb
jmp
mov
lret
sbb
inc
sub
push
add
ds
mov
jns
xchg
push
lret
rcrl
or
or
aaa
jmp
adc
ds
mov
xorb
mov
adc
mov
cmpsl
out
shlb
das
dec
addr16
sahf
sbb
out
fwait
push
ret
inc
movsb
xchg
mov
lret
xchg
dec
mov
lods
inc
adc
sahf
pop
pop
xchg
inc
repz
in
jo
ljmp
data16
out
addr16
pop
jg
imul
mov
mov
rorb
stos
mov
mov
jle
mov
shrl
mov
loope
sub
ds
out
cltd
push
lods
je
sbb
xor
inc
inc
movsl
cmp
mov
mov
push
jne
jae
inc
fsubr
outsb
add
xor
icebp
jb
mov
pushf
xchg
sbb
xlat
jl
push
push
loopne
jge
clc
mov
in
popf
aam
cmp
je
mov
mov
lods
xor
dec
push
xchg
ljmp
paddsb
repnz
js
rorb
mov
js
shl
and
sub
stos
nop
sbb
addr16
add
arpl
lret
mov
and
sarb
mov
cli
xchg
xchg
mov
addr16
into
mov
mov
outsl
sub
pop
fnstenv
mov
fwait
mov
aam
fdiv
adc
lea
lcall
inc
mov
int3
into
mov
mov
push
jns
sbb
loop
pop
repz
outsl
jge
sub
jge
push
pusha
aam
or
push
inc
cmp
xchg
lds
push
pop
mov
pop
imul
jno
imul
add
in
inc
sysexit
outsl
arpl
mov
push
enter
mov
pop
xchg
decb
outsl
push
fstps
into
jmp
dec
fimuls
push
loop
les
xchg
mov
sub
xor
mov
and
or
jl
cld
jae
add
pop
mov
loop
fnstenv
les
and
push
int
aam
sbb
adc
push
out
sbb
test
loope
int
jp
imul
mov
xor
mov
ss
sub
xlat
push
mov
sub
xchg
jae
push
test
es
stc
flds
icebp
scas
mov
add
mov
cwtl
call
mov
jno
fcoml
sub
or
fistpl
and
jl
push
sub
lods
nopl
stos
mov
push
inc
sbb
jl
out
lods
mov
mov
mov
pop
pusha
sub
mov
dec
iret
not
sub
jmp
cmc
in
add
mov
data16
push
mov
icebp
cltd
icebp
pushf
cmp
jns
fidivrs
xor
rcll
addr16
push
lahf
jb
adc
jge
hlt
add
fiadds
push
dec
addl
cwtl
popl
ljmp
fs
add
lahf
mov
dec
insl
push
xchg
sbb
mov
jl
std
es
mov
sbb
push
daa
adc
jno
scas
daa
add
ds
pop
add
xchg
notb
arpl
sbb
pop
or
xor
and
fimull
iret
xor
mov
imul
jmp
xor
jp
int3
adc
mov
sub
fstpl
add
and
adc
addl
orl
and
pop
mov
push
push
pop
mov
mov
dec
and
add
leave
mov
xchg
and
pop
push
mov
mov
push
outsl
mov
lcall
bound
mov
cmp
sub
addl
inc
xchg
xchg
mov
arpl
lock
fld
maxps
push
mov
inc
repz
adc
mov
xchg
sahf
dec
inc
push
test
inc
sub
cmp
adc
das
dec
enter
lds
test
sbb
xlat
or
dec
popa
repz
popl
add
cmpsl
and
mov
sbb
sub
test
mov
lahf
or
jbe
mov
clc
mov
and
inc
or
scas
add
mov
cli
jbe
cmp
cli
jmp
jp
fdivrp
mov
xchg
xor
movsb
cmpsl
jp
mov
ds
adc
popf
movsl
cli
int3
mov
pop
sub
clc
lahf
scas
cmpsb
inc
loope
das
rolb
mov
sub
cmp
fldt
dec
sub
mov
popf
lcall
sub
sarb
push
cmpsl
sti
lret
or
xlat
test
mov
fisttps
inc
dec
or
inc
mov
call
adc
inc
xchg
sub
mov
out
in
je
inc
shll
movsb
aad
push
loope
aad
pop
dec
jbe
xor
dec
out
in
jge
cli
fsubs
ret
aas
mov
call
out
mov
sahf
into
hlt
dec
and
cmp
adc
inc
jge
int3
jmp
stos
movsb
jns
enter
mov
pusha
add
cmpsb
shll
daa
dec
cmovnp
daa
inc
xor
jl
jl
es
aam
ds
mov
in
dec
fwait
xchg
mov
adcb
loopne
rcl
inc
jg
jbe
sbb
cmp
jnp
mov
add
dec
andb
inc
aas
adc
adc
sbb
jge
or
jns
fwait
outsb
add
pushf
dec
jp
fistpl
clc
std
mov
pop
inc
mov
nop
lret
xchg
shrl
daa
ret
clc
cmpsl
out
ljmp
mov
xchg
cs
xchg
lds
jp
hlt
jge
movsl
stos
sarb
or
cmp
adc
inc
fwait
inc
jl
or
into
adcb
sbb
loop
popa
ret
repz
add
adc
dec
fwait
call
cmp
jne
xchg
jg
jns
sahf
sbb
sub
pop
cmpb
icebp
and
movsb
add
mov
pop
out
or
xor
imul
adc
mov
out
jbe
addb
stos
jecxz
sbb
stos
sbb
pop
sbb
pop
jmp
aad
add
cltd
rol
leave
sbb
push
sbb
add
jae
lods
test
sbb
clc
in
daa
mov
xchg
jnp
xchg
dec
lahf
mov
lods
mov
inc
pop
push
hlt
mov
popa
call
js
pop
mov
sbb
fdivrl
lea
adc
into
sub
cmc
mov
inc
xchg
scas
add
clc
mov
add
shr
dec
adc
ficompl
jle
add
mov
pop
loopne
sbb
xor
xor
sahf
cmp
ljmp
ret
je
inc
icebp
jno
push
out
dec
dec
push
fildll
xchg
cmp
pop
cmp
jns
jo
scas
sbb
imulb
inc
or
adcb
xor
gs
cmc
aad
pushf
enter
rorb
outsb
and
inc
inc
pop
mov
mov
mov
ljmp
add
mov
gs
or
ret
jp
pop
jecxz
fwait
inc
and
mov
scas
or
push
mov
lods
jnp
jge
mov
and
adc
fists
lea
add
jge
mov
add
dec
push
dec
inc
loopne
mov
pop
xor
shl
and
dec
shll
add
sbb
ja
and
and
jmp
mov
and
testl
jle
pop
in
sbb
cmp
xor
mov
ret
rcrb
pop
fmuls
movsb
fistps
ja
fcomps
aam
insl
pop
push
mov
stos
xchg
sub
shll
adc
and
dec
cmp
mov
sti
cmp
rorl
lock
test
rcrl
imul
enter
mov
cmp
xorb
jg
xchg
cli
rorb
pop
sub
mov
mov
je
xor
nop
loop
popa
cld
sbb
rorl
add
fcoms
fmull
in
xchg
push
push
sbb
sbb
nop
jbe
cmp
sahf
mov
lret
repz
adc
add
lods
sub
iret
lret
int3
nop
xor
addl
scas
push
push
mov
mov
dec
cs
rclb
outsl
adc
stc
popf
pop
cld
inc
push
enter
and
adc
xchg
pop
call
and
adc
int3
xchg
xor
xor
stos
jge
pop
push
dec
movsl
add
jecxz
push
es
nop
icebp
mov
cmp
test
data16
lds
aam
mov
xchg
aas
pop
cmc
jle
fcoms
int
push
mov
aaa
lock
and
js
or
in
pop
and
insl
adc
xor
lcall
int
xor
add
and
sub
int3
mov
inc
icebp
fdivrs
repnz
mov
out
lret
xor
mov
dec
icebp
stc
not
push
mov
mov
jo
lods
mov
cmpsb
inc
add
mulb
out
adc
fiadds
int
cmp
data16
jnp
jno
mov
push
xor
iret
jmp
aas
pop
cmp
cmpsl
lds
popa
in
arpl
sub
loope
inc
push
ss
sub
add
repz
pop
nop
pop
int
mov
out
mov
mov
adc
xchg
jo
sbb
sbb
jp
dec
arpl
mov
xor
in
sahf
lcall
add
out
mov
pusha
cmp
test
leave
daa
int
idivb
mov
inc
fwait
in
into
mov
xlat
push
jecxz
fimuls
mov
in
cmc
sub
xor
push
lahf
sub
cmp
loop
stc
sub
xor
sub
nop
movsb
xlat
out
movsl
rcr
test
inc
xchg
cmp
mov
rol
loop
rol
outsb
ret
add
push
pop
repz
pop
divb
and
xor
and
aam
jns
cmp
sbb
sub
and
inc
dec
into
push
pop
xchg
orb
sbb
lods
bound
or
pop
ret
scas
mov
pop
sbb
pop
ret
dec
sbbl
cmp
sbb
aaa
lods
jnp
aaa
frstor
mov
in
or
inc
add
fstpl
mov
pop
ret
iret
test
lods
adc
movsb
cmpsb
push
je
andb
push
lock
dec
mov
pushf
rcr
lret
push
push
data16
push
xchg
repz
rcrb
imul
fadds
mov
clc
cmp
stos
mov
adc
xchg
and
scas
je
js
lcall
and
out
in
imul
js
xchg
lds
inc
ficompl
popf
cmp
aaa
and
popf
fadds
loopne
and
imul
mov
fcompl
pop
jns
lds
xchg
nop
jle
xchg
enter
xor
outsl
add
jecxz
sbb
xchg
pop
jl
cwtl
outsl
and
add
pop
vmovaps
push
cli
pop
and
int3
pop
inc
xor
sbb
popf
fsubr
or
je
jne
and
fsubr
lds
pop
add
xlat
inc
stos
mov
push
or
or
push
and
fdivl
cmp
enter
ret
xorl
xor
out
inc
cld
add
cli
mov
lock
and
jge
insl
sbb
dec
mov
test
adc
mov
push
leave
push
lea
or
cmp
mov
mov
std
jo
bound
xor
push
add
ret
aad
std
ja
lea
orb
cmp
inc
iret
xchg
jl
daa
out
sub
shl
lcall
inc
mov
loopne
inc
aaa
mov
ljmp
adc
adc
mov
adc
insb
shlb
add
call
dec
jno,pt
mov
lret
add
push
xor
cli
int3
outsl
mov
xchg
mov
fadd
mov
add
sti
popa
push
ret
dec
pop
idivl
push
adc
lret
mov
ja
std
mov
cmp
jl
stos
imul
xchg
push
rorb
mov
popf
inc
xchg
call
movsb
loope
mov
sub
xchg
xor
mov
xor
sbbl
cmp
inc
push
popf
jecxz
shl
aaa
push
outsl
xchg
dec
xor
sti
inc
or
push
cltd
mov
loopne
out
cmp
hlt
jecxz
ret
pusha
fiadds
mov
xchg
adc
stos
or
jbe
xor
ficoml
mov
sub
sub
lock
repnz
cmp
fs
sbb
xchg
inc
les
pop
xchg
jb
daa
push
mov
mov
push
lods
lock
adc
cmp
loop
stos
xor
jp
sahf
ret
inc
dec
int3
inc
pushf
in
sub
daa
inc
sbb
es
jb
test
cmp
mov
ljmp
stos
pop
movsb
push
es
scas
scas
idivl
fstps
popf
ljmp
xchg
mov
xchg
adc
lods
mov
sub
adc
inc
push
pop
sub
in
fldcw
je
xlat
xchg
or
pop
lret
jl
lods
adc
or
mov
and
mov
jmp
push
sub
outsl
loope
sbb
lcall
aad
movsl
adcl
jb
movsl
xor
push
adc
xchg
xlat
in
repnz
arpl
int3
movl
ficompl
test
mov
sub
mov
jne
test
lods
mov
popf
outsl
cmp
add
cmpsl
and
sub
mov
inc
nop
xchg
push
repz
ror
orl
xchg
and
and
xchg
and
flds
cs
push
int3
fdiv
daa
sub
orb
ret
scas
and
cli
lret
xchg
outsb
adc
xor
loope
int
add
data16
lret
push
jg
add
shrl
fcoml
and
es
lret
mov
or
shl
adc
add
push
fidivrl
stos
sub
fwait
jg
xor
ss
imulb
and
testl
addr16
je
inc
xchg
and
xchg
push
pop
and
pop
sbb
stos
mov
inc
mov
jg
pop
xchg
es
push
fld
lret
jno
push
sbb
add
xchg
inc
inc
incb
cmp
fsubrs
in
lret
push
xor
shll
pop
mov
cli
lret
or
mov
adc
in
or
cmpb
enter
dec
fwait
into
adc
jmp
imul
sub
jle
adc
leave
sbb
dec
faddp
or
bound
jb
cmp
add
adc
lods
es
xchg
mov
cwtl
cmc
mov
cs
popf
adc
jns
pop
pop
cmpsb
push
ljmp
mov
fisttps
enter
mov
in
cmp
pop
popa
jmp
sahf
dec
pop
bswap
test
inc
les
adc
dec
ret
adc
jecxz
push
xor
mov
pusha
in
mov
mov
inc
xchg
pusha
scas
fs
xchg
je
lds
jns
adc
loop
xchg
fdivr
pop
mov
or
lock
fsubr
add
in
pusha
das
jne
push
cld
rcll
dec
or
add
mov
scas
fwait
jae
adc
adc
test
and
mov
adc
cli
xor
mov
jmp
mov
jbe
sbb
pop
pop
data16
sub
out
nop
scas
insl
pop
xor
shlb
daa
mov
mov
or
addl
fsub
fdivp
int
inc
sar
in
rcrb
data16
sbb
std
fldl2e
mov
scas
incl
xchg
popf
stos
dec
jmp
es
shll
xor
xchg
cmpsb
sub
or
jbe
int
sub
dec
inc
add
and
scas
dec
daa
clc
imull
or
inc
jb
xchg
ret
pop
int
cmp
mov
rcr
jmp
outsb
fbstp
std
and
xchg
adc
in
jp
dec
dec
lret
add
std
loop
push
das
ffree
test
mov
adc
jne
pop
xchg
jp
fdivl
push
xor
sbb
and
push
xor
cld
xchg
jo
stc
repz
adc
sbb
inc
shrb
mov
imul
mov
jnp
dec
adc
ret
aas
test
roll
cmp
add
out
cmp
arpl
js
sub
sub
mov
sbbl
sub
outsl
pop
inc
insl
xor
cmpsl
loope
pop
data16
add
std
int3
les
ljmp
jmp
ljmp
mov
add
es
dec
loope
loopne
dec
mov
lock
fdivl
xor
ljmp
lods
repnz
inc
enter
sub
std
xchg
xchg
dec
push
pop
aaa
call
mov
jns
lahf
jns
fldl
inc
xor
inc
push
gs
push
mov
jae
push
mov
mov
xchg
in
sub
add
fdivrs
pop
rcrb
and
xor
sar
fbstp
mov
sbb
mov
int
jno
hlt
aam
and
bound
fadd
lcall
push
mov
sbb
pushf
adc
xorl
push
test
lahf
inc
aam
cmpsl
and
push
mov
mov
loopne
dec
ljmp
or
or
sub
mov
clc
mov
rolb
jge
dec
cwtl
loope
fistpl
cmpsb
adc
test
fidivrl
sbb
jecxz
mov
adc
sbb
cwtl
push
jno
pop
ljmp
faddp
dec
cltd
dec
dec
scas
jns
mov
and
test
loope
aas
cmp
cmp
pop
mov
in
insl
xchg
adcb
call
or
lods
xchg
sub
ffree
test
dec
out
fwait
imulb
cmp
js
out
call
outsl
cmp
orl
sbb
scas
push
sub
add
pop
popa
pop
push
xor
out
pop
loopne
rolb
rorb
sarl
iret
cmp
jne
test
je
insb
inc
pop
sbb
mov
lret
notb
loop
fistpll
test
mov
xlat
sahf
pop
mov
int
xchg
jnp
pop
xor
movsl
call
jno
shll
shrl
sub
aas
push
dec
sub
or
in
xor
dec
into
or
jb
fwait
dec
mov
stos
or
xor
sbb
pop
imul
nop
hlt
jb
mov
xchg
outsl
sbbl
pop
sbb
push
hlt
and
cmp
pop
dec
std
inc
clc
nop
mov
mov
repnz
std
jecxz
das
insl
movsl
or
insb
cmpsb
lret
jnp
out
jne
int3
xchg
xchg
xchg
mov
in
push
enter
jne
popa
add
push
lds
daa
in
daa
mov
jecxz
leave
lods
pusha
mov
mov
sbb
jmp
jp
mov
inc
movsb
mov
inc
pop
and
mov
mov
push
xor
xchg
add
push
jl
dec
movsb
add
push
ss
mov
popf
sbb
out
jne
pop
test
adc
sub
or
jmp
xlat
pop
mov
andl
je
cs
mov
shl
lock
cli
push
dec
cld
lock
or
daa
cwtl
aad
sub
and
test
movsb
adc
mov
dec
scas
lods
in
lods
rclb
cmp
or
sub
adc
sub
mov
cmpsl
clc
in
xor
mov
push
push
lahf
dec
mov
add
cmpsb
mov
jo
imul
in
loop
pop
enter
xchg
in
mov
push
pop
xchg
mov
mov
mov
repz
and
icebp
jecxz
cmpsb
jp
unpcklps
dec
in
adc
and
das
cmpsb
bound
es
ret
and
fwait
push
and
cmp
notb
stos
insb
roll
stc
sbb
dec
mov
push
repz
arpl
push
pop
into
hlt
xlat
jae
andl
jae
call
in
fcomps
mov
or
mov
rorb
mov
inc
into
or
sub
icebp
add
pushf
lret
jmp
pusha
and
mov
cmc
xchg
bound
adc
xor
shll
les
xor
scas
or
dec
int3
adc
mov
fildl
int
dec
clc
std
push
xchg
inc
stos
dec
adc
icebp
out
mov
cmp
std
lods
mov
xchg
icebp
lahf
cmp
push
push
rcrl
push
hlt
and
std
arpl
pop
jne
inc
aaa
push
adc
lret
aad
test
sahf
mov
and
push
dec
incl
push
or
push
and
xchg
adc
pop
hlt
fisubl
xlat
adc
xor
pop
xchg
push
test
fdivrs
jnp
push
subb
mov
pop
mov
ret
mov
cmp
stos
enter
xor
aad
push
push
dec
leave
ret
outsb
outsb
es
out
pop
cltd
sub
les
mov
mov
mov
mov
sbb
mov
scas
daa
es
mov
push
and
stos
leave
in
nop
or
jae
or
dec
data16
scas
dec
sbb
addr16
mov
pop
dec
stos
jg
shrl
outsl
stc
test
fcoms
fldcw
ss
xlat
lret
push
jmp
lret
push
shl
jmp
lret
lret
test
ret
xlat
popf
pusha
jo
and
add
cmp
sti
mov
jecxz
faddp
pop
cmc
sub
sub
roll
gs
jno
cld
clc
mov
cltd
mov
gs
hlt
pop
cmp
test
and
sbb
xchg
lahf
mov
pop
mov
loop
pop
stos
cs
sahf
pop
test
ja
lret
leave
mov
pop
test
push
in
push
and
jp
adc
push
js
cltd
je
inc
ja
mov
lret
out
popf
insb
sbb
cmp
add
call
sub
sub
push
push
xlat
cli
js
inc
adcl
cmpsb
xor
rol
int
pop
push
mov
cwtl
sti
push
mov
lret
fimull
pushf
aaa
ss
in
jl
mov
shll
pop
dec
dec
nop
sbb
cwtl
and
test
jle
sub
inc
test
inc
lods
xchg
mov
lcall
and
movsl
xchg
cld
jg
cmp
sti
out
mov
push
or
fiadds
mov
scas
pusha
push
aam
ror
shlb
mov
outsb
dec
mov
inc
inc
push
pop
insl
and
lcall
jo
and
push
dec
mov
mov
rcll
pop
iret
lods
outsb
push
inc
leave
xchg
jmp
jnp
dec
dec
cmp
mov
add
mov
lods
jae
fiaddl
pop
fisttpl
aaa
push
inc
lock
dec
clc
js
lret
lea
xchg
and
and
sbb
and
pop
push
inc
inc
mov
push
repnz
leave
cmp
das
ja
adc
test
xchg
ja
xchg
out
call
scas
jns
mov
jbe
xor
xchg
dec
rolb
xor
lret
ds
pop
push
jns
popa
xchg
inc
cltd
shlb
and
mov
lahf
icebp
clc
sarb
dec
stos
jl
fimull
enter
mov
or
xor
push
add
test
push
in
dec
sub
daa
push
mov
fsubl
test
sub
xchg
push
xor
pusha
xchg
shll
and
mov
sub
daa
pop
dec
mov
or
xchg
inc
movsb
fs
sub
std
pop
inc
ja
sbb
ds
into
jecxz
mov
mov
pop
mov
inc
je
inc
sub
not
mov
dec
outsb
sbb
cmc
mov
mov
fsubp
and
inc
mov
and
pop
movsb
aad
das
pop
add
les
add
xchg
js
test
xchg
sub
pop
cmp
mov
pop
pop
shlb
jbe
xchg
jbe
mov
mov
pop
subb
jae
mov
imul
sub
lds
in
or
xchg
lcall
sub
rcrl
rorl
movsb
shl
pop
jb
xor
mov
inc
adcb
push
xchg
lret
clc
adc
fs
inc
loop
jbe
insl
mov
push
or
cmp
pushf
enter
inc
pop
insl
pop
and
xchg
cmpsb
push
xorb
rcrb
xchg
into
inc
dec
jo
in
xchg
shll
add
pop
sbb
or
jp
arpl
pop
mov
push
lds
repz
mov
aam
push
add
or
add
test
outsl
xchg
imul
pushf
mov
and
divl
std
test
stos
pop
push
sub
fwait
cmp
sub
sub
cmpb
xor
add
mov
push
jmp
cmp
std
jmp
sub
imul
popf
movsl
xchg
rolb
sbb
imul
jno
shlb
cwtl
cmc
mov
fists
sbb
js
nop
decl
js
repnz
cltd
push
outsl
xchg
cmpsl
push
loope
hlt
insl
push
add
pop
sbb
jne
xchg
xor
or
das
adcl
fsubr
sti
mov
add
add
movsb
jmp
mov
scas
xor
push
ss
mov
or
push
subl
cmp
and
rcrb
mov
sub
mov
test
ljmp
sbb
shl
or
mov
sbb
cli
and
push
pop
push
subb
cmp
fsubp
dec
inc
cmp
test
mov
outsl
dec
imul
jne
adc
por
in
sbb
das
repz
enter
aas
jg
mov
or
clc
dec
sahf
add
cmc
pop
mov
inc
cmpsb
jg
fidivrs
out
jge
pop
mov
flds
mov
lcall
ss
or
ret
push
xor
xlat
les
test
scas
push
jl
lret
aas
aas
movsl
cltd
push
lea
fbstp
aam
jle
lret
insl
cli
sub
addr16
push
push
out
std
sbb
rcrl
pusha
add
xor
mov
cmp
test
xor
xchg
in
imulb
orl
or
and
imul
sbb
cmpsb
fwait
mov
jnp
aas
clc
mov
into
cwtl
inc
lea
dec
shrl
push
mov
ja
adc
mov
mov
mov
clc
pop
jno
pop
mov
mov
xor
cmc
ja
adc
or
inc
xchg
add
sahf
or
inc
pushf
mov
cmp
sbb
loopne
push
xchg
xchg
jg
arpl
les
in
dec
sbb
fdivrl
jle
cmp
nop
lret
cmc
inc
xchg
push
popf
loope
mov
pop
mov
pusha
dec
je
testb
clc
mov
mov
mov
repz
push
adc
push
mov
push
cmp
inc
inc
hlt
mov
rcll
inc
ret
dec
cli
and
icebp
mov
jbe
scas
sbb
les
enter
mov
mov
daa
jmp
cwtl
mov
pusha
mov
inc
mov
xchg
push
adc
sub
pop
popf
mov
dec
jge
in
cmpsb
push
sub
xor
jecxz
cwtl
and
pop
int3
and
insl
in
in
cmp
add
cmp
gs
loope
cmp
lcall
imul
scas
cmpsl
pop
xchg
xor
mov
leave
xor
ja
int3
insb
mov
lret
sub
loope
sub
pop
inc
mov
rcrl
push
stos
mov
or
cmp
push
jnp
jo
dec
xor
and
dec
and
add
test
scas
fists
cmpsl
sub
and
jl
lahf
push
push
jb
je
lahf
repz
mov
sbb
stos
adcl
mov
and
lock
scas
push
popf
lret
fs
and
add
outsb
adc
sbb
jp
dec
dec
mov
movsb
test
push
inc
and
ret
add
mov
js
push
xchg
pop
adc
cmp
popf
push
mov
push
ret
xor
stos
cmp
xchg
xor
mov
pop
cmp
dec
subl
cmc
push
mov
call
adc
sub
scas
icebp
sub
dec
aam
inc
pop
sub
dec
negb
aaa
incb
mov
and
cs
mov
jecxz
inc
or
adc
cmp
cmp
mov
ss
push
aam
pop
jno
cmp
push
repz
out
icebp
cmp
scas
xorl
fdivrs
mov
mov
cmp
mov
sbb
call
ficoml
cmp
ficoml
pop
sub
jo
cs
sbb
cmc
fimuls
mov
scas
mov
aam
out
fildl
push
roll
lods
mov
xchg
gs
push
push
loop
bnd
inc
es
std
int3
fdivrl
icebp
clc
subl
dec
scas
cld
mov
xor
lock
test
leave
jne
sub
lods
lock
mov
lcall
xor
shrb
xor
daa
fwait
cmpsl
ss
push
incb
mov
test
int3
inc
sahf
sub
mov
jnp
inc
pop
loope
dec
xor
sub
pop
jb
jb
mov
mov
sar
bnd
negb
pop
packuswb
cmp
pop
pop
int3
add
xor
stc
fwait
out
mov
fidivs
pop
outsb
daa
fs
in
mov
push
push
jle
iret
mov
mov
bound
sub
cmp
or
sub
xchg
shl
and
call
mul
inc
movsl
mov
jge
push
leave
jns
arpl
ror
out
rcr
xor
mov
inc
cs
add
cmp
in
cli
out
mov
jmp
dec
mov
mov
inc
sub
cmp
mov
xlat
loope
lds
cmp
push
test
push
jmp
scas
add
clc
iret
cmp
push
mov
aam
hlt
mov
sub
cmpb
xor
xchg
inc
sarb
and
push
sbb
bound
or
clc
adc
fdivr
push
in
xor
roll
push
loop
rorl
or
xchg
cmpsl
pop
fcompl
xchg
out
int3
fbld
xchg
sbb
sub
or
sbb
cmpsb
add
pop
xchg
cltd
rorl
test
bound
sub
fcmovne
cwtl
mov
and
jnp
gs
mov
push
xor
add
xchg
jge
mov
mov
and
xor
pop
xor
push
fsubr
mov
sbbl
dec
enter
fstl
mov
adc
inc
pop
cmp
jmp
or
aaa
pop
inc
xchg
into
add
test
shl
cmc
lahf
jbe
and
std
jge
rcr
cmp
mov
dec
xor
adcb
adc
stc
mov
push
push
lea
sub
jb
mov
pop
and
mov
mov
mov
imull
insl
dec
sub
adc
jge
add
nop
leave
pop
jbe
aas
pop
jb
and
and
push
dec
in
cld
sahf
pop
jg
jno
push
dec
jle
sbb
push
mov
fwait
fs
int
adc
cmp
push
jg
rcrl
in
sbb
shrl
rcr
in
sbb
dec
das
sbb
in
insb
mov
jo
dec
xor
push
push
or
mov
sbb
adc
into
dec
aam
push
insb
adc
sahf
add
pop
push
sbb
xor
mov
icebp
jecxz
les
iret
push
mov
mov
outsl
cmp
data16
inc
fsubrs
ds
adc
sti
mov
sti
sbb
les
test
dec
and
mov
mov
inc
pop
dec
mov
xor
mov
cwtl
adc
jne
out
icebp
pop
bound
push
jne
into
adc
faddp
pusha
ret
test
inc
iret
lret
or
dec
xchg
mov
jp
inc
pop
and
xor
xchg
or
pop
les
jmp
icebp
fildll
mov
push
test
aam
loope
xor
sarl
sbb
and
sub
add
sahf
sbb
loop
orl
ja
jo
xchg
dec
jge
popf
test
cmp
cltd
pushf
and
or
cltd
cltd
xor
mov
xchg
pop
mov
int3
inc
inc
fimull
push
arpl
mov
mov
mov
insl
movsl
fwait
cmp
adc
test
xchg
arpl
add
sub
push
dec
addl
push
andl
inc
mov
push
push
ja
pop
ret
jns
add
in
and
insl
or
idiv
ficoml
setp
cmp
adc
lahf
and
dec
das
hlt
sub
cld
loopne
dec
outsb
push
mov
push
or
dec
add
pop
shll
and
gs
daa
jb
pop
and
sub
inc
xorb
lret
mov
xor
ljmp
test
sbb
push
pop
nop
push
inc
sub
inc
push
sbb
and
fldpi
idivl
aad
test
xchg
mov
push
and
out
dec
cmp
pop
inc
popf
cmp
lret
sbbb
sub
cwtl
out
cmp
leave
cld
push
fimull
sbb
dec
ret
adc
inc
in
mov
rorb
xchg
sbb
imul
jbe
je
push
sti
mov
fisubl
lret
ret
add
lods
arpl
inc
into
cs
mov
add
rolb
fcoms
sbb
xor
or
adc
add
pop
xchg
enter
loop
jo
test
shll
mov
sub
out
je
bt
inc
and
pop
mov
xchg
adc
push
adc
ret
test
repz
popa
test
lret
push
sbb
mov
lret
sub
iret
sti
lret
jmp
push
ror
cli
xchg
add
imul
mov
xor
dec
mov
dec
jae
lock
int
adc
mov
in
push
cld
int
sub
mov
adc
lea
jns
mov
push
aas
mov
je
mov
push
cmpsl
sahf
fcompl
lret
jb
call
mov
nop
popf
fs
mov
xchg
push
aas
mov
rorl
out
xor
and
mov
cltd
push
scas
jl
adc
jno
jecxz
movsb
jbe
jo
std
pop
xchg
jg
push
xorl
repz
dec
xchg
dec
xor
mov
jl
xchg
cmp
xor
bound
testb
mov
jle
lock
xor
repz
popf
or
mov
lock
bswap
aaa
pusha
sub
test
dec
adc
adc
inc
out
movsb
sbb
mov
dec
cld
stos
rorb
mov
jmp
push
fsubrs
shlb
sbb
push
nop
cs
sbb
dec
stos
push
in
xor
ljmp
cmp
push
aaa
dec
pushl
inc
mov
bound
das
mov
push
xor
scas
mov
lock
loop
lahf
out
or
dec
outsl
les
mov
dec
add
mov
je
pop
ds
lds
movsb
in
addl
rorb
mov
jmp
and
and
or
out
rcl
rorl
cmpsb
stos
push
mov
aaa
je
push
icebp
or
add
cwtl
hlt
imul
sub
leave
or
in
mov
popa
cmp
mov
mov
loop
pop
push
pop
stc
mov
notb
pop
jb
cmp
out
mov
icebp
sub
leave
cmp
insb
jl
aaa
jne
cli
push
notl
enter
cld
das
or
into
xor
leave
add
mov
cmpsl
or
in
mov
outsb
enter
imul
and
jo
sub
aas
cmpsb
sub
cmp
std
aaa
dec
pop
and
loopne
lcall
lcall
fstpl
in
les
scas
adc
cmp
push
jns
aam
fildll
js
cmp
mov
stos
cli
pop
lea
insl
movsl
fistps
jo
xchg
fisubrs
and
aas
dec
inc
sbb
stos
je
add
jge
mov
addl
in
mov
pop
xor
pop
push
cmp
jne
sbb
mov
mov
mov
pop
add
movsl
sub
mov
shlb
pusha
inc
sbb
sub
dec
negb
sti
fwait
movsb
int3
inc
ret
mov
jbe
inc
sbb
fsubs
insb
mov
pop
dec
cmp
fimull
dec
in
scas
mov
out
xor
push
add
inc
inc
aad
js
push
pushf
jns
sarl
cltd
imul
or
push
sub
mov
dec
outsl
mov
rorb
sub
jns
xchg
repz
jecxz
ljmp
or
aad
out
cmp
and
cld
push
mov
inc
mov
insb
aaa
push
shrb
pop
addl
or
mov
mov
pop
cwtl
hlt
and
mov
mov
jbe
sub
lcall
sbb
sbb
mov
mov
mov
adc
clc
add
pop
cs
push
jo
out
cmp
jne
fisttpl
mov
loopne
mov
pop
repz
pusha
jg
adc
imul
mov
dec
inc
push
jns,pn
mov
cmp
pop
das
xchg
lea
cmp
adc
cmc
mov
cmpl
sbb
pop
fdivs
push
inc
out
mov
sub
sub
dec
add
pop
jmp
jle
leave
mov
repz
js
aaa
fnstenv
jle
cs
sub
repz
sub
stc
sub
loop
and
outsl
int
mov
into
repnz
push
int
pop
jl
pop
movsl
sub
inc
xor
test
je
fisubrs
out
es
shlb
je
mov
popa
xchg
cmp
mov
adc
clc
mov
dec
gs
scas
js
xlat
cmpsb
adc
pusha
outsb
mov
jge
jo
xchg
inc
adc
adc
hlt
push
std
add
xor
fcmovbe
xor
outsl
lcall
pop
pop
dec
js
xor
out
scas
adc
stc
dec
push
pop
add
pop
mov
das
addb
sbb
or
cmp
xor
mov
mov
aad
shll
adc
push
sub
xor
and
imul
gs
clc
pop
pop
lods
adc
push
sub
mov
add
adc
ret
dec
mov
test
xor
je
jmp
pusha
stc
es
and
outsl
mov
popf
cwtl
mov
mov
inc
xchg
mov
les
sub
gs
xor
pushf
jno
loop
mov
or
mov
push
lds
xchg
xchg
ds
mov
aam
fstpl
inc
mov
lock
pop
leave
lds
mov
cmp
lods
push
leave
cmpl
in
je
push
push
fs
or
sbb
or
loopne
dec
mov
mov
adc
mov
pop
shll
sti
bound
sbb
pop
pop
mov
push
in
sub
scas
dec
loopne
cmp
fistpl
popf
jne
add
lea
and
mov
or
int3
ja
test
daa
rcr
push
dec
inc
mov
jg
test
xchg
push
pop
pop
sub
adc
aam
xor
cmpsb
add
sub
add
push
shlb
hlt
xor
jae
or
and
repz
mov
fnstenv
adc
adc
inc
or
addr16
js
lcall
add
aam
aaa
mov
ljmp
outsb
or
jb
pop
cmpsb
loope
lods
fildll
add
aaa
dec
mov
jl
out
rorl
arpl
pop
in
mov
sub
int
or
push
shlb
addl
nop
inc
jge
xchg
jle
ds
xchg
xor
imul
jne
push
push
imul
fadd
mov
jne
loop
ja
add
or
lods
and
jns
out
push
in
and
adc
inc
mov
adc
fmuls
inc
xorl
cmp
inc
scas
jns
cmp
push
mov
in
cmp
mov
mov
pop
xchg
adcl
pop
into
sub
mov
xchg
cmpb
mov
adcl
jae
xor
mov
push
and
mov
cmpsb
jp
jnp
pop
out
add
inc
mov
fildll
or
jne
xchg
jo
fisttps
lret
adc
aas
mov
xchg
mov
dec
add
cltd
mov
push
ljmp
xor
xor
lcall
int3
call
xor
clc
jp
loopne
in
mul
scas
jnp
sub
pop
mov
pop
ja
fistpll
jl
ja
int
nop
mov
data16
cli
or
lahf
push
sub
cld
and
or
jg
dec
mov
orl
mov
or
lods
xchg
outsb
nop
mulb
pop
pop
js
faddl
dec
sub
stos
mov
mov
cmpsb
or
or
imul
dec
sti
mov
xchg
sub
stos
fistps
mov
pop
adc
push
mov
lods
mov
mov
divl
inc
repz
stos
mov
dec
in
and
mov
jne
lret
sub
fs
and
shl
mov
dec
lock
in
enter
addr16
xchg
or
add
xor
dec
sub
and
push
lods
push
mov
push
cmpb
push
shlb
lret
sub
out
xchg
push
jo
cmp
mov
cmp
repnz
adc
addr16
leave
stos
addb
inc
roll
push
fcoms
jmp
jmp
cmp
cmc
jl
add
inc
stos
das
dec
test
pop
sbb
mov
or
jae
int
repnz
jne
xchg
ss
mov
xchg
push
mov
cmp
fs
jb
repz
inc
pop
out
jns
sub
mov
rdpmc
sbb
mov
add
pop
add
aam
test
jns
jae
loopne
pop
les
and
sub
movsb
ljmp
pop
dec
popa
data16
add
mov
push
add
imul
testb
lret
sti
dec
or
push
sub
or
js
push
mov
push
mov
sub
sbb
mov
jle
sub
es
jbe
test
or
pushf
out
ret
and
push
xor
jo
pop
mov
add
mov
out
adc
adc
in
cltd
dec
inc
bound
repz
cld
outsl
stc
mov
into
sub
repz
dec
cmp
cwtl
inc
jge
pop
pop
fidivrs
sti
and
sub
and
pop
jmp
repz
push
push
fs
pusha
cmp
adcl
jl
cmp
sbb
and
out
or
sahf
loopne
sbb
jl
ljmp
mov
lods
xchg
popf
sbb
cwtl
into
jns
mov
push
dec
pop
enter
add
inc
push
xchg
inc
xor
and
out
mov
pop
pushf
cli
add
or
flds
enter
fcmovu
ljmp
jle
jg
and
outsl
xlat
lret
arpl
out
cmc
xchg
mov
pop
cmp
imul
dec
or
bswap
out
mov
xor
popf
cmp
movsl
ja
ljmp
fildl
pop
and
fmuls
jae
arpl
ds
lret
mov
and
jnp
jl
mov
or
xchg
flds
sbb
pushf
lret
rcll
pop
mov
fidivs
xchg
jecxz
xchg
mov
repnz
push
addr16
sub
pop
cltd
push
dec
push
push
ret
pop
jge
sbb
dec
inc
cmpsl
ret
mov
jb
loop
jne
std
xchg
aad
push
inc
cmp
out
test
sub
pop
dec
jno
shlb
push
loop
loop
es
iret
jle
fdivs
ljmp
cmpb
mov
rorl
loope,pt
fisttpll
jae
dec
ds
xor
inc
movsb
iret
stos
test
jne
rcl
icebp
lcall
call
mov
and
pop
dec
mov
sub
xchg
lods
xor
lods
inc
push
aam
sbb
cmc
fnstenv
xchg
push
dec
mov
dec
scas
addr16
iret
pop
test
ja
lea
adc
push
fdivrs
sbb
insb
pop
pop
jecxz
mov
mov
stc
mov
cmpl
xorb
lret
sbb
sbb
mov
movsb
jo
dec
bound
mov
xchg
dec
push
scas
or
pop
mov
dec
in
adc
lds
ret
xor
pop
enter
stos
repz
sbb
mov
xor
jbe
movsl
lds
mov
sbb
push
out
sub
ljmp
mov
icebp
cmpsb
push
fnstcw
cli
jno
sub
out
je
movsb
sbb
xchg
adc
push
sbb
add
and
lret
jge
scas
nop
fidivrl
pop
xor
test
mov
cwtl
fwait
inc
fstpt
push
push
push
mov
hlt
scas
jecxz
cmp
jnp
or
or
loop
jecxz
pop
je
sbb
in
cmp
jecxz
mov
pushf
pop
cmp
cmp
mov
jns
fildl
adc
les
outsl
ja
ljmp
push
dec
rolb
xlat
aas
imul
mov
andnps
outsl
test
jb
cmp
inc
js
mov
lea
lds
pop
xor
out
mov
in
out
jmp
dec
movsl
adc
sbb
lret
jns
fnstenv
cwtl
xchg
dec
nop
add
dec
rcrb
mov
adc
sar
jno
lcall
cmc
or
mov
push
mov
jle
mov
add
pop
test
popl
or
pop
pop
jns
inc
cmpsb
repz
or
cmp
sub
mov
pop
rorl
outsl
mov
fdivl
nop
xchg
push
cmp
and
leave
dec
lret
sbb
lret
xor
cli
sahf
add
push
imul
or
insl
in
sbb
sub
sbb
pop
cwtl
xor
mov
xchg
jle
rorb
jmp
sarb
push
mov
and
cwtl
mov
test
add
and
int3
cmpb
or
add
lahf
jne
mov
xchg
leave
imul
mov
mov
adc
fnsave
scas
xchg
xchg
mov
pushf
lret
jb
or
std
stos
in
loope
fldpi
rolb
hlt
cli
mov
push
ss
mov
inc
cmp
dec
mov
cmp
xchg
dec
dec
xchg
insl
pusha
clc
or
jge
add
aam
ljmp
sbb
aam
add
push
mov
les
cld
xor
jge
cmp
inc
lock
jecxz
jle
addr16
fimuls
aad
mov
cltd
xchg
fbstp
sbb
dec
xchg
ret
hlt
mov
lahf
lret
jno
mov
cmp
div
or
pop
leave
xlat
lahf
xchg
adc
pop
int
lret
leave
imul
fidivrl
idivb
inc
mov
or
dec
xorb
pushf
mov
bound
cmc
or
ret
sbb
adc
xchg
cmp
jmp
xor
sbb
adc
lret
pop
jo
pusha
fwait
push
mov
test
xor
push
or
lahf
je
mov
jne
ficompl
cmp
ret
push
mov
insb
enter
and
js
pop
push
js
adc
cmp
bound
sub
sub
jne
addb
imul
push
pushf
add
leave
mov
dec
sti
pushf
mov
jnp
testl
pop
cmp
subb
pop
cmp
imul
cs
push
insb
xlat
cmp
out
fnstenv
scas
cmp
pop
sbb
inc
popf
jo
aad
inc
sub
stos
push
push
lret
and
mov
gs
nop
into
adc
jl
test
int3
std
add
dec
sub
dec
fcomps
loope
and
cmp
xchg
fwait
stos
loopne
sbb
lock
inc
adc
in
dec
or
dec
js
and
cvtpi2ps
jmp
dec
lahf
faddp
push
jnp
mov
add
and
loopne
bnd
push
jnp
xchg
jle
xchg
andnps
cld
xor
inc
and
dec
cmp
dec
imul
stos
testb
dec
stos
push
xchg
andb
fdivrl
fistpll
jno
and
inc
xlat
xchg
aam
inc
lock
icebp
xchg
adc
xchg
jl
movsb
stc
popf
and
mov
xor
jge
push
addb
sbb
into
jge
sub
cltd
sub
popa
push
adc
mov
push
dec
push
mov
ret
cld
xlat
inc
enter
lds
lods
aad
bound
jne
rorb
cmpsl
lods
lods
push
hlt
xchg
repnz
test
int
push
notb
test
cmp
xchg
pop
adc
xchg
leave
adc
jl
pop
xchg
mov
xorb
jns
iret
cmpsl
push
jge
imul
mov
testb
fucomp
fdivs
and
cmpsb
fistpl
pop
int3
xchg
add
rolb
xchg
pop
sub
inc
out
xchg
fs
push
lods
xor
lret
push
mov
int
int
orl
jecxz
mov
cmpsb
push
adc
lcall
mov
cld
push
sbb
jne
jno
push
cltd
cltd
xchg
push
test
cmp
sbb
scas
mov
out
aad
les
cltd
inc
pop
imul
cmp
dec
jbe
xor
cmp
test
rcrl
mov
pop
push
pop
xor
mov
in
mov
cmpsb
add
int3
cltd
xlat
sub
pop
dec
out
call
sbb
sub
scas
pop
rcrb
sbb
out
test
jge
xor
pop
or
nop
aaa
outsl
rcl
lahf
push
stos
sub
adc
push
xchg
adc
int
mov
mov
out
sar
popf
icebp
scas
adc
insb
data16
fstps
inc
add
and
mov
in
jg
xchg
or
rolb
data16
adc
hlt
addl
fstps
sbb
jns
jno
cmp
hlt
pop
mov
add
loop
sbb
and
les
pusha
xor
adc
and
shrl
jg
ret
xor
ljmp
mov
hlt
lds
testl
cld
mov
addr16
xchg
jle
popa
iret
lret
mov
incb
push
inc
add
xchg
dec
sbb
push
lock
mov
inc
fisubs
sbb
movsb
scas
xchg
mov
sbb
jne
jbe
mov
add
mov
mov
pusha
stc
ds
iret
mov
inc
push
fsubrl
push
jb
xchg
popa
xchg
adc
sarl
inc
mov
add
sarl
and
xchg
movsb
push
push
push
pop
add
lret
idiv
roll
adc
addr16
ds
push
negl
out
jns
or
call
jno
jns
setb
fsts
mov
xlat
mov
dec
mov
sbb
xor
std
and
adc
inc
mov
inc
add
xchg
inc
cli
jb
sub
adc
cmc
rcrl
jb
adc
in
mov
xlat
mov
das
bound
jae
mov
mov
sbb
lea
jae,pn
add
push
popf
cmp
inc
sub
lods
mov
int
xchg
movsl
jmp
mov
test
push
lods
int3
daa
lods
push
xchg
push
sub
es
bound
fiadds
loope
mov
cmpxchg
out
xor
jo
arpl
sahf
mov
lcall
pop
and
mov
mov
dec
mov
out
lcall
xor
jecxz
out
xchg
push
incb
pop
jne
shlb
cwtl
ljmp
mov
inc
bsf
and
outsl
mov
mov
mov
cli
add
insl
aad
xchg
arpl
daa
mov
loopne
popf
mov
push
notb
cltd
push
mov
pushf
sub
int
bndstx
shl
jmp
mov
or
ret
xchg
cld
xchg
ret
sub
push
sti
xchg
ficomps
push
testb
push
mov
pop
call
cmc
into
push
aam
inc
pop
jle
push
pop
mov
arpl
pop
xlat
data16
push
pop
mov
push
jge
mov
xor
adc
sahf
sub
imul
sbb
daa
jno
bound
fnstcw
popf
xchg
popf
loope
ret
loope
int3
or
jg
movsb
cmpsb
pop
leave
movsb
sbb
orl
jl
test
gs
mov
aam
ds
lds
xchg
mov
test
mov
mov
movhps
out
xor
or
pushf
push
divb
mov
lea
dec
jbe
decl
sarb
bound
sbb
adc
shlb
push
pop
adc
mov
leave
mov
fs
push
push
out
jle
sti
xchg
sbb
cmc
jae
notb
inc
or
inc
mov
cmp
insb
in
iret
mov
push
enter
push
push
ficoms
xor
push
add
test
test
add
loop
popf
push
addr16
cwtl
sbb
lret
shll
jno
push
mov
outsb
lods
xchg
mov
add
jle
neg
shrl
or
pop
addr16
adc
xor
imul
mov
mov
outsl
jae
sub
not
out
arpl
das
sbb
and
push
stos
pop
jnp
adc
xchg
loop
cmpsb
and
lahf
jecxz
outsl
mov
xor
aam
push
mov
push
movsl
pop
mov
xor
or
les
add
sbb
hlt
sbb
lods
cs
mov
jbe
cmp
hlt
movsl
ret
hlt
outsl
jb
sahf
cmp
and
push
ret
rcll
clc
loopne
push
sahf
mov
cmp
pop
sbb
in
jb
or
adc
dec
mov
sub
inc
xchg
nop
add
xor
jg
pop
xor
push
mov
hlt
xchg
xor
divl
inc
xor
jl
dec
xchg
cmp
rcrb
sti
lods
dec
xorb
add
sbb
add
popa
out
push
sub
in
xchg
fildll
xlat
imul
or
test
test
sbb
inc
mov
mov
or
outsl
pop
sbb
add
inc
cwtl
or
add
and
lea
fwait
push
mov
iret
jne
mov
jae
jecxz
hlt
test
mov
sti
into
decb
push
call
mov
jle
cli
int
shll
scas
sbb
or
and
notb
shr
mov
daa
inc
xchg
jecxz
mov
adc
into
aaa
mov
test
xor
sar
insl
xchg
add
daa
negl
fcmovne
xor
sub
mov
inc
mov
mov
cmp
lret
aad
notb
fwait
stc
jge
push
mov
dec
pop
cmp
gs
icebp
pushl
jne
jmp
adc
add
lds
pop
inc
decb
orl
aas
xchg
mov
fstl
sahf
xor
cmp
push
pop
push
psraw
fsubr
adc
lds
xchg
add
jge
cmp
push
dec
sub
outsl
outsl
cltd
dec
add
leave
xor
outsb
add
sbb
ret
lock
jnp
fsubs
mov
lcall
push
mov
in
in
ljmp
inc
dec
in
mov
je
roll
movsl
lea
push
imul
mov
test
bound
or
imul
ficoms
dec
gs
ret
mov
adc
mov
lahf
jg
imul
xchg
add
sbb
pop
insl
push
mov
mov
jle
mov
mov
in
pop
scas
and
mov
stos
and
into
cli
in
jmp
push
repnz
cmp
cs
xor
cwtl
stos
inc
jo
scas
aam
hlt
movsl
sbb
mov
test
jmp
xor
mov
mov
mov
fs
jg
mov
outsl
adc
scas
mov
ljmp
and
pop
cmc
mov
mov
sub
sbb
ret
jp
dec
ja
inc
xchg
repz
pop
add
mov
mov
mov
fldcw
ja
outsl
mov
jge
rclb
jp
pop
xchg
dec
dec
xchg
fcompl
nop
jnp
cmp
mov
movsb
push
pop
jl
aaa
push
mov
mov
mov
mov
cmp
pop
adc
cmp
cmp
aam
iretw
adc
pop
shll
sub
flds
cmp
adc
sub
in
sbb
jmp
xchg
or
push
sbb
test
jnp
xor
gs
and
lods
or
mov
in
pop
in
fdivrs
add
jmp
movsb
jmp
loope
repz
xchg
adc
dec
add
aad
and
push
pop
in
inc
repz
push
int
daa
idivb
fmuls
icebp
fnsave
mov
idivl
sub
mov
or
lahf
negl
cmp
add
xchg
cltd
hlt
clc
cmp
and
in
outsb
xchg
lods
jp
lods
adc
outsb
and
arpl
js
sub
out
xor
je
dec
xor
dec
scas
and
mov
mov
xchg
test
and
adc
mov
or
push
jbe
push
add
xchg
es
in
mov
inc
mov
loopne
and
mov
fwait
dec
mov
stc
sarb
sub
lcall
jbe
sub
out
and
mov
aas
adc
cmp
out
in
jbe
test
sub
dec
rep
dec
jl
fs
push
dec
loopne
fsubr
test
jbe
jmp
dec
add
mov
bndldx
repz
sti
dec
jo
and
cmc
mov
lcall
shrl
or
xchg
or
mov
cmpl
scas
fdiv
xor
lcall
std
mov
push
js
xor
icebp
outsl
sbb
mov
jbe
sbb
out
inc
jge
mov
pop
push
mov
lods
jl
inc
nop
shl
xor
in
adc
sarb
xor
iret
int3
stos
pushl
and
push
cmpsb
stc
sbb
inc
test
clc
and
imul
push
lret
add
mov
push
nop
push
push
mov
aaa
and
mov
jmp
iret
nop
daa
dec
inc
mov
stos
iret
or
dec
sbb
inc
inc
pop
cmp
cli
in
xchg
es
hlt
clc
je
push
push
mov
fisubrl
jno
rorl
ja
push
jp
leave
sub
dec
push
or
cwtl
mov
jge
andb
or
xlat
das
push
jo
xchg
jb
or
jae
lea
dec
pop
test
cwtl
std
pop
daa
add
std
inc
jecxz
shrl
ljmp
rorb
xor
in
adc
nop
push
and
or
andl
mov
xlat
lcall
mov
dec
fidivl
jno
push
dec
idivl
xchg
bound
sahf
addr16
js
stos
pop
push
pushf
adc
aam
ds
inc
push
cmp
inc
lods
mov
push
ljmp
jns
sahf
hlt
lret
and
mov
cwtl
mov
popa
ret
enter
mov
mov
out
sbb
push
mov
adc
lret
lret
add
insl
mov
repz
adc
push
mov
mov
or
invd
repz
xchg
adcb
pop
in
or
mov
je
jnp
xor
loope
jp
dec
ljmp
cmp
mov
dec
jne
and
mov
mov
jle
inc
aam
or
fsubl
dec
cmp
insb
fbld
shlb
pop
daa
arpl
scas
and
pop
add
ss
or
adcb
stc
mov
jecxz
stos
repnz
inc
cmp
mov
xchg
shr
mov
push
out
arpl
les
cs
icebp
out
fisttpl
sbb
inc
mov
xchg
cld
pop
out
out
inc
scas
mov
jmp
or
jbe
dec
aad
les
enter
mov
and
rclb
pop
push
int
cwtl
and
mov
or
jg
push
int
subb
fwait
pop
lock
sbb
lret
or
and
ret
fwait
arpl
jns
imul
in
ja
xor
into
jo
xchg
xor
jp
popa
jl
add
mov
popa
aas
sbbl
fbstp
mov
outsb
cmpsl
pop
adc
push
sarl
push
push
and
rcrl
mov
pop
jmp
sbb
xchg
xor
xor
addr16
pushf
decb
inc
dec
fcoms
dec
lret
and
lds
cltd
xchg
pop
sbb
sarb
adc
lret
lea
adc
or
cmp
sbb
xchg
adc
jns
adc
icebp
xchg
xchg
jnp
jmp
jns
jmp
add
fisttps
mov
js
daa
std
shll
in
ja
ficomps
dec
jbe
aaa
mov
dec
into
mov
sbb
or
adc
xor
stc
stos
xchg
xchg
addr16
jp
add
dec
jl
arpl
out
stc
loopne
cmp
stc
push
in
mov
jge
lahf
push
stos
xor
mov
or
stos
mov
out
insl
movb
cld
ljmp
xchg
leave
mov
stos
and
cmp
and
call
popa
les
cld
cmpsb
add
iret
ds
xor
push
dec
xlat
add
ljmp
xor
jbe
sbb
adc
inc
fstl
out
pop
add
mov
int3
add
rcl
cmpsb
adc
and
dec
cmpsl
test
popa
mov
mov
loop
cmp
xor
cmp
adc
jg
xchg
mov
add
pop
xchg
jns
and
mov
cltd
insb
inc
jp
or
mov
push
mov
shrb
inc
mov
pop
stos
cs
xchg
adc
cmp
xor
mov
jno
lods
dec
xchg
js
sub
mov
add
cmp
das
insb
data16
pop
pop
rolb
fiadds
fisttpll
stos
sbb
sbb
and
loope
inc
fimull
sub
sbb
pop
xor
insl
lret
out
add
stos
sbb
loopne
mov
push
sub
adc
bound
add
outsl
cmp
add
xchg
adc
insb
sahf
out
gs
or
push
push
push
in
mov
int
data16
cmp
pop
mov
fldt
mov
push
in
out
xor
stos
push
loopne
xor
ret
and
mov
jns
mov
aas
push
lret
dec
mov
and
xchg
mov
pop
jae
fimull
testl
push
in
outsb
sub
fmul
and
mov
push
mov
loopne
push
fcoms
cld
xchg
mov
je
fsts
movsb
shrl
adc
in
loop
iret
cld
ja
cltd
mov
jbe,pn
pop
out
dec
mov
and
loopne
shrb
sbb
into
in
mov
jle
insb
pop
iret
testb
pop
idivb
and
inc
mov
dec
loop
dec
jg
cli
xor
and
jg
ljmp
popf
add
add
sub
push
dec
in
call
push
das
push
mov
data16
dec
xor
mov
out
jecxz
outsb
stos
and
mov
leave
arpl
outsb
fisubs
stos
fs
add
insl
adc
inc
lea
add
insb
es
mov
dec
mov
cld
xor
sbb
dec
inc
loop
pop
push
cwtl
jo
adc
bound
sahf
mov
stc
cmp
sahf
fbld
jae
adc
mov
stc
sbb
xor
shr
mov
pop
pop
mov
mov
in
push
cwtl
or
in
push
jecxz
cmp
mov
out
out
mov
aam
int3
jmp
fs
xor
pop
xchg
add
or
stos
pop
cmc
adc
sbb
repnz
add
xor
mov
lea
js
add
inc
gs
lods
mov
sbb
xchg
cltd
clc
adc
lcall
adc
aaa
out
inc
jbe
pop
xchg
loop
jno
popa
dec
jb
jmp
aaa
add
ret
out
divl
pop
jle
push
data16
pop
jg
test
mov
arpl
fdivp
mov
add
lahf
enter
pop
mov
or
push
test
jne
divb
ja
idivb
xchg
xchg
push
mov
cwtl
out
lods
cvtps2pd
test
xchg
lods
dec
mov
fcoms
sub
or
pop
mov
cmp
or
adc
pop
cmp
lds
stos
loopne
xchg
cmp
push
jnp
inc
pop
cmp
xor
shr
mov
xor
in
cmc
movsl
ljmp
ret
push
jbe
lret
inc
iret
pop
xchg
fcoml
das
std
testl
pushf
popa
repnz
jo
xor
xchg
mov
cs
sbb
pop
xor
jmp
pop
outsb
imul
stc
xor
xor
cmpsb
hlt
xchg
jge
adc
cmp
arpl
mov
fidivl
out
xchg
pop
call
inc
adc
in
mov
xor
xlat
and
inc
lds
cmp
das
push
and
idivb
mov
lcall
dec
in
mov
adc
dec
adc
aaa
and
jmp
mov
xchg
aas
pop
push
das
cmp
jecxz
addl
pop
or
inc
inc
lock
call
clc
cmp
mov
es
repnz
mov
inc
ljmp
sbb
insl
add
sbbl
lahf
iret
adc
lods
sbb
sbb
call
jbe
xor
pusha
pop
dec
sbb
and
jae
jl
pop
outsb
mov
pop
cmpsb
test
aam
mov
inc
shll
jb
lds
fucomip
cmc
xor
or
pop
and
mov
nop
mov
pmulhw
int
mov
sub
les
pop
sbb
sub
xchg
imull
push
fs
adc
andb
pop
xor
cwtl
data16
movsb
shld
inc
sbb
inc
xchg
cmp
ret
call
adc
jae
mov
cmp
mov
or
nop
lahf
into
lcall
add
xor
push
push
xchg
iret
add
outsl
xlat
sti
clc
push
inc
dec
cld
lcall
sub
jae
mov
cmp
lea
sbb
jge
push
or
dec
out
imul
inc
in
jo
hlt
sub
xorl
addb
push
test
xor
test
movsb
fcmove
xlat
dec
xlat
jmp
bound
add
lods
pop
loopne
xlat
add
mov
imul
std
data16
nop
arpl
sub
test
mov
test
loope
sbbb
pop
jns
add
jnp
dec
negl
push
xchg
out
jne
sbb
mov
jno
sbb
xchg
mov
in
inc
adc
add
sbb
push
mov
add
add
pop
cmp
jge
stc
rclb
adc
xor
jp
push
jmp
in
rcll
lret
cwtl
cmpl
push
push
cld
pusha
je
ds
vmovss
adc
push
insl
testl
fs
or
sbb
jae
loope
in
imulb
je
push
or
loope
mov
mov
cmp
sbb
imul
outsb
lea
cwtl
ja
loopne
jno
int3
sbb
nop
push
jle
and
out
adc
pop
cmp
nop
or
push
jmp
addr16
jnp
ja
mov
push
adc
cmpsb
cli
push
shrb
dec
inc
jb
mov
sub
pop
jmp
sbb
in
movb
xor
jbe
fwait
leave
shl
fildl
cli
jb
push
rcr
xor
in
hlt
clc
outsl
ljmp
pop
clc
orl
sbb
xor
mov
dec
movsb
in
out
cmp
daa
xor
and
mov
lahf
jne
test
test
mov
in
lds
sbb
xchg
ret
cmpsl
mov
loope
sbb
mov
dec
enter
xchg
dec
xor
adc
fwait
test
mov
testl
jecxz
jle
out
adc
jge
insl
mov
mov
into
mov
push
ret
pop
ljmp
fadd
mov
stc
or
mov
xor
inc
mov
mov
mov
mov
lahf
lds
es
ret
mov
sub
cmp
or
jmp
ret
add
outsl
int3
pusha
arpl
js
mov
out
cmp
outsb
xor
push
lahf
clc
pop
sbb
pop
adc
push
lret
scas
mov
jmp
and
cwtl
stc
test
jne
push
xor
push
loopne
push
imul
push
cmp
les
ds
jns
dec
or
mov
test
ds
iret
xor
or
jne
adc
mov
inc
push
popa
insb
dec
test
movsb
add
out
test
xor
addr16
pop
ffreep
es
mov
fbstp
clc
cltd
imul
pop
jbe
mov
rcrb
mov
jl
sbb
and
ljmp
push
and
xor
and
pusha
push
inc
pop
mov
mov
jae
xor
test
and
pop
sub
jb
ret
loope
add
clc
mov
adc
cmp
pusha
inc
sub
xor
call
push
cwtl
xlat
mov
lret
cmc
daa
iret
stc
lods
mov
cltd
pop
popf
and
and
adc
pop
jnp
xchg
bound
sub
cmp
cmp
repnz
addb
jns
mov
cli
xchg
movsl
push
push
andb
cmpsl
add
push
or
cmp
fsts
call
movsl
fdivrs
lahf
leave
addr16
mov
or
jbe
push
mov
incl
mov
lods
cmp
out
jb
sahf
xor
adc
pop
xchg
pushf
cmp
xchg
or
les
jp
xlat
aas
and
xor
push
mov
push
cwtl
shrb
std
push
cmp
lds
xor
aas
les
clc
andl
xor
fidivl
ljmp
jo
cmp
orl
or
adc
jecxz
ljmp
ss
out
or
out
aaa
pop
inc
stc
movsl
lds
add
leave
mov
pop
out
sub
adc
leave
cld
mov
lahf
or
jp
xchg
or
mov
jne
ficoml
xor
push
ljmp
xchg
test
fstpt
pop
dec
inc
int3
in
pushf
in
push
adc
push
lahf
jno
stc
sub
je
mov
inc
stc
lds
repz
sub
mov
jns
jecxz
and
loope
sbb
rorb
fstpt
js
test
xchg
fiaddl
xor
ljmp
daa
xchg
jg
or
push
shl
enter
xchg
sbb
cmp
push
mov
aad
fistps
ljmp
jecxz
mov
mov
stc
mov
cmovb
out
mov
movsl
test
call
inc
push
cmp
jbe
jmp
stos
mov
add
and
and
lea
daa
push
ret
cmc
fldcw
fcomps
lods
repz
sub
xor
imul
repz
push
movsb
mov
add
jle
in
in
in
aas
xor
push
js
push
xor
mov
xchg
ljmp
dec
ss
adc
cmp
jge
arpl
aaa
or
push
mov
test
sbb
jg
call
lret
xor
scas
test
data16
in
scas
es
push
fstpl
dec
xchg
aaa
cmpsl
bound
jl
mov
inc
dec
icebp
inc
push
mov
mov
inc
mov
inc
outsb
inc
or
sarl
xchg
test
int
cmc
std
pop
sbb
sarl
fildll
scas
imul
leave
sahf
addr16
pushf
mov
mov
or
ja
lds
mov
mov
stos
mov
imul
ljmp
mov
mov
inc
xchg
jle
aad
jno
xchg
adc
enter
imul
cmp
cmp
lock
inc
test
inc
jo
mov
std
mov
mov
sti
xchg
cld
sbb
enter
sbbb
addr16
cmpsb
test
test
adc
cltd
aad
jb
sub
push
push
push
inc
mov
dec
sbb
cmpsl
sub
xor
xor
outsl
add
push
pusha
fld
xor
scas
dec
and
movsl
movsl
dec
or
je
push
xchg
divb
jl
aam
inc
mov
mov
test
js
bound
push
iret
mov
inc
lret
insl
loop
sbb
clc
out
sub
mov
mov
cli
into
adc
cmc
shll
pop
mov
adc
test
dec
cmp
sub
movsl
mov
pop
jg
rolb
ret
xor
loopne
pop
push
in
cli
dec
push
adc
push
ss
aaa
or
xor
xor
sub
cltd
and
scas
pop
repz
fildl
incl
dec
pop
sub
inc
pop
stos
mov
inc
loope
mov
imul
pop
mov
in
addb
jp
jbe
leave
mov
fcoml
sbb
xchg
pop
dec
iret
repz
in
sub
lcall
pop
and
nop
pop
out
adc
inc
out
jg
adc
stos
pop
mov
fwait
jne
or
sbb
addr16
scas
test
xchg
fwait
mov
in
arpl
mov
xchg
fsubr
popa
or
mov
sbb
out
xchg
rolb
popa
cmp
mov
arpl
push
inc
call
pop
sbb
nop
dec
xchg
lahf
cmp
and
out
insb
cmp
incb
add
inc
cmp
pop
test
inc
leave
ja
jns
fsts
fisubrl
adc
mov
rol
pushf
movsb
sub
or
dec
into
push
out
cmp
push
cmpsb
js
jg
and
inc
into
push
enter
sbb
gs
jge
jb
pop
add
mov
outsl
test
adc
mov
jae
es
rclb
jne
call
sub
jbe
inc
loopne
mov
fbld
and
ret
lret
pusha
mov
sub
or
xchg
cmp
push
call
xor
popa
jbe
inc
in
push
test
jo
sahf
or
pop
mov
mov
xor
loope
jg
dec
xchg
jne
push
out
std
mov
mov
xchg
mov
insl
subb
push
cmpsl
cmp
mov
mov
in
test
hlt
mov
insl
mov
stos
shlb
cmpsb
stos
xchg
or
fcomi
sbb
lds
xchg
in
push
addr16
sbbl
fucomip
add
or
mov
divb
out
lock
das
loop
pop
movsb
orb
lret
jle
movsl
in
cmp
lcall
or
in
iret
into
fwait
jmp
or
das
setle
cld
mov
inc
xchg
nop
pop
xor
fldenv
outsl
bound
mull
stc
jmp
sti
aad
push
into
push
push
hlt
inc
fwait
sbb
loope
jns
inc
pop
icebp
pushf
push
sti
adc
fwait
mov
scas
sub
mov
inc
in
sbb
add
lret
or
mov
and
movsb
push
ljmp
addb
push
ja
repz
aam
mov
add
inc
mov
add
mov
xchg
mov
xchg
jl
sahf
and
and
mov
test
mov
in
aaa
movsl
lcall
mov
and
and
dec
inc
inc
xchg
push
pusha
in
push
test
sbb
sbb
sti
dec
push
lret
push
add
sbb
cs
pop
mov
jg
mov
mov
pop
aam
add
mov
ret
sub
or
xchg
mov
into
sub
push
mov
push
out
aaa
rorb
cmpsl
test
lret
cmp
jns
loopne
mov
xchg
or
fisubrl
pop
js
add
ljmp
xor
cwtl
test
xchg
ret
push
dec
insb
xor
jmpw
add
movsb
xor
ljmp
xchg
and
and
cs
cmp
add
dec
pop
inc
std
cmp
mov
xchg
jp
inc
leave
dec
gs
inc
or
cmpsl
mov
out
xor
shl
out
pop
inc
sub
js
dec
sti
and
pushf
aad
mov
pop
cmp
mov
push
loop
or
push
dec
mov
sub
pop
xchg
inc
pop
cmp
mov
sub
test
adc
arpl
imul
jmp
sub
and
push
xor
and
je
in
xchg
xchg
jle
enter
arpl
add
sbb
xchg
leave
jb
pop
mov
or
movsl
int3
cmpsl
dec
leave
sarl
bound
pop
sbb
int3
cmpsl
cltd
mov
loope
push
addb
push
pop
mov
insl
cmp
xchg
hlt
mov
movsl
mov
adc
ljmp
pop
jb
dec
mov
movb
xchg
xchg
testl
jae
int3
pop
mov
rcl
jnp
pop
mov
mov
add
rolb
je
add
or
stc
iret
shrl
in
fs
and
out
pushf
dec
sbbl
lea
push
adcb
dec
xchg
add
sub
cs
add
or
and
enter
fisttps
cmp
subl
in
loope
enter
xchg
repnz
add
pusha
push
xorb
sub
mov
testl
stos
out
fwait
mov
loop
je
jp
jle
sub
pop
sub
add
orl
jle
pop
xor
cmpsl
mov
clc
loope
movsb
sti
pusha
mov
or
or
lds
jnp
es
imul
js
imulb
push
add
fdivrs
movl
xchg
fcompl
insl
fldl2t
push
shrl
je
testb
sbb
aad
push
aas
mov
rcrb
fldcw
push
mov
test
mov
mov
mov
sub
xor
mulb
mov
jae
jae
xor
cmp
lea
rolb
mov
cmp
or
push
pop
lsl
jmp
dec
dec
cmp
rclb
sbb
xchg
push
xor
popl
out
cmp
sbb
repnz
fmuls
pop
outsl
in
inc
test
fnstenv
leave
pusha
mov
mov
push
add
inc
and
out
dec
push
pop
inc
aad
inc
test
xchg
std
pop
cmpsb
inc
or
sbb
xlat
jp
xor
mov
pop
push
repz
pop
push
jbe
sub
sub
push
cmp
mov
out
jle
dec
aam
dec
xchg
pop
dec
xchg
test
hlt
adc
mov
mov
pop
add
pop
cmp
movsb
mov
mov
out
ljmpw
xor
fildll
xor
and
cmpsl
and
cli
xchg
in
jno
add
xor
inc
outsb
jb
loopne
push
ffree
push
fisubl
xor
sub
xorb
cltd
xor
call
mov
xchg
insb
dec
inc
repnz
mov
mov
gs
mov
and
adc
scas
mov
jmp
adc
inc
mov
dec
cmp
outsb
mov
ficoml
cwtl
loopne
adc
int3
aas
mov
rorb
leave
rorl
xchg
cmp
data16
dec
xor
mov
in
add
icebp
stos
jmp
adc
or
mov
cmp
jno
push
dec
mov
push
push
and
adc
add
jne
das
hlt
cmpb
or
pop
xchg
sbb
sbb
xor
or
insb
pop
mov
mov
ror
pusha
insl
loope
das
subb
inc
cmpsl
jnp
inc
daa
inc
data16
mov
lcall
cmp
inc
cld
fwait
imul
xchg
in
pop
jecxz
inc
xchg
cmp
sbb
cmpsl
insb
push
xchg
scas
lret
lahf
pop
in
pop
sub
nop
jb
push
pop
add
add
js
dec
fnstsw
or
loopne
pop
sbb
in
roll
xchg
icebp
cmpsl
lods
jle
cmp
xchg
inc
sub
sub
jae
sahf
add
mov
subl
test
inc
iret
repz
cltd
mov
add
sbb
sti
push
idivb
rcl
dec
mov
jl
enter
pop
mov
pop
rcll
xor
testb
test
add
mov
fdivrl
pop
pop
mov
push
test
out
push
das
stos
sarb
or
mov
call
xchg
sub
sbb
pop
lods
mov
pop
adc
and
popa
dec
into
testl
ret
cmp
daa
inc
cmc
fwait
mov
in
push
shl
hlt
mov
lods
inc
imul
fstl
stos
jge
sub
xchg
dec
lods
mov
mov
imul
out
xchg
xchg
adc
das
inc
call
xchg
mov
fmuls
or
in
mov
fiadds
or
mulb
insl
dec
loope
and
subb
mov
fisttps
lcall
mov
out
stc
lods
xor
xchg
sub
inc
jmp
or
mov
pop
dec
jbe
mov
push
int3
mov
sbb
lret
jo
mov
and
leave
lods
je
mov
push
pop
lea
sarb
dec
xor
xchg
sbb
mov
mov
cmp
cmpsb
mov
flds
mov
lcall
shrb
mov
mov
mov
cmp
jmp
cmp
pop
cmp
inc
jo
mov
enter
lods
add
sub
aas
cmpsl
inc
adc
adc
mov
jmp
shrb
jg
mov
mov
in
fstpl
jmp
shrl
pop
cmp
xchg
mov
lods
outsl
pop
std
testb
add
dec
ss
jl
outsl
push
adc
ds
jno
lret
scas
cmp
adc
out
push
cmc
sahf
push
bound
repnz
inc
imul
mov
push
inc
add
lods
data16
cmp
lock
sub
jp
cmp
or
bound
pop
int3
xor
xchg
inc
push
or
rcl
push
push
incl
fnstenv
sub
cmp
gs
outsb
jnp
push
ljmp
js
or
ljmp
dec
in
mov
mov
jmp
sbb
xchg
xchg
sub
cmpsb
je
add
dec
add
iret
push
lds
push
ret
pop
hlt
mov
ljmp
xchg
mov
hlt
add
pop
xchg
popf
and
test
test
aad
mov
xchg
pushf
mov
or
shl
dec
jbe
and
sahf
push
into
iret
cwtl
push
add
mov
mov
cmp
outsl
jnp
jne
insl
lret
xor
dec
xor
jo
xlat
xchg
xorb
mov
and
mov
cwtl
jns
in
adcl
xor
xchg
div
xchg
dec
cmp
bound
sbbl
test
test
sahf
les
cmp
mov
ljmp
aaa
jmp
add
pop
mov
lock
sahf
inc
push
insb
call
pop
sub
outsl
mov
pop
pop
es
sub
arpl
stos
out
xlat
xchg
aad
movsb
pop
out
movsb
or
lods
inc
sbb
mov
lcall
lods
insb
adc
xor
mov
mov
or
sbb
sub
bound
add
es
dec
jmp
adc
jecxz
mov
stos
xchg
mov
fstpt
sbb
sbb
and
leave
fwait
jecxz
test
int
loope
jp
pop
mov
out
loopne
push
pop
loope
shlb
ss
lea
repz
adc
fimuls
inc
lret
inc
add
or
jg
in
push
lods
mov
sub
xorb
aam
ret
sti
xchg
jne
inc
repnz
adc
pop
jl
fisttpl
dec
jg
cmp
fstpl
cli
push
adc
ret
adc
mov
mov
shll
in
jnp
push
dec
js
push
xchg
xor
push
xchg
in
push
mov
sahf
mov
jae
jg
jmp
fsubr
mov
jbe
popa
cmp
push
push
out
mov
daa
test
lock
js
push
xchg
aaa
sub
add
int3
and
xlat
loopne
inc
jl
inc
lret
mov
dec
shr
pop
lods
mull
rol
push
cmpxchg
mov
pop
or
push
push
adc
jb
out
inc
js
js
out
and
negl
xor
jno
xor
jne
das
mov
mov
add
push
lar
mov
and
sti
sub
mov
inc
add
jmp
jg
ficompl
pop
call
mov
cmpsb
cmpsl
cmpb
sub
mov
xor
xor
ss
dec
jle
lock
push
std
cs
call
in
iret
aas
add
cmpsb
flds
jecxz
add
xor
jg
aaa
incl
popa
enter
and
rcl
add
mov
orb
mov
call
bound
out
sub
in
xor
mov
sub
push
lcall
pushf
dec
stos
mov
lods
jp
mov
xor
mov
ds
das
rorb
stos
loopne
aas
xor
lret
jp
inc
push
and
imul
roll
xchg
pop
jnp
xchg
inc
adcb
adc
push
test
ja
adc
inc
daa
imul
xor
push
mov
movsl
inc
jae
test
mov
pop
sbb
push
xchg
sbb
sub
mov
aaa
mov
xor
push
cmp
cs
fs
cmc
cmc
aas
xor
in
jne
aad
push
xchg
inc
movsb
sub
dec
inc
jae
aam
xor
out
add
mov
sbb
in
fwait
cmp
cltd
incl
ds
inc
es
push
pushf
and
sub
jl
fimull
and
add
sub
out
xchg
add
jae
sub
ds
sub
daa
out
mov
fidivs
sarl
sub
jnp
sub
outsb
vpmuludq
shll
push
dec
scas
enter
or
repnz
js,pt
mov
xor
dec
xchg
xchg
clc
mov
adc
jno
outsl
in
sub
fwait
ljmp
mov
pushf
jp
sub
lods
ret
js
cltd
fldl2t
push
inc
and
cmp
out
mov
inc
jb
test
jno
and
push
adc
or
mov
leave
fisttpll
mov
lds
mov
and
in
cmp
out
push
out
int
lock
pop
or
fadds
out
mov
push
cmc
lret
and
inc
xor
or
push
push
popf
xlat
and
push
fmuls
mov
int3
inc
mul
pop
cmpsl
push
scas
daa
xor
cli
push
fldl
bound
jle
outsl
or
popa
push
in
into
adc
das
xchg
das
ret
push
adc
and
ret
adcl
mov
push
stc
push
jmp
imul
mov
jle
push
pop
cmp
push
es
lret
popa
movsb
fidivrs
fldcw
fxtract
out
push
dec
pop
fstpt
andl
ret
sbb
imul
inc
sbb
hlt
xchg
pop
in
mov
imul
pop
dec
cld
leave
pop
pop
xchg
and
test
and
sbb
lret
je
mov
cli
xor
mov
bound
pop
rorb
mov
push
mov
jmp
icebp
jns
ds
push
push
push
cwtl
stc
adc
mov
mov
or
repz
add
xor
add
push
pop
lds
sub
lds
cmp
inc
test
scas
and
adc
cwtl
add
pop
movsl
push
push
or
xchg
nop
enter
je
push
lds
repz
jns
cmp
jae
imul
push
inc
daa
dec
mov
popf
cmpl
dec
leave
or
sbb
inc
dec
mov
inc
adc
jb
lods
jge
js
jg
jmp
jo
scas
mov
sti
fcoml
jo
insl
das
sub
add
cmpsb
xor
lret
mov
int3
adc
scas
push
out
xorb
nop
das
insl
jmp
es
xor
movsl
sahf
stos
adc
xchg
lcall
mov
inc
xchg
sub
gs
in
push
movb
clc
dec
mov
shrb
sbb
adc
mov
and
jnp
ja
movsl
sub
jge
add
pop
cmpl
inc
aam
push
push
adc
popf
lods
lahf
jl
push
popa
sbb
lods
insl
jbe
adc
push
xor
xchg
mov
sub
inc
incl
push
ja
mov
or
gs
sbbl
daa
inc
cmp
adc
dec
sbb
ljmp
cmp
cmp
stos
dec
pop
mov
xchg
sub
negl
imull
addr16
mov
push
cld
pusha
sub
inc
ds
dec
js
popa
cwtl
stos
mov
sarl
out
call
jmp
int3
js
lahf
pop
insl
lods
lahf
lcall
fs
test
les
push
sub
mov
inc
xchg
outsl
mov
cmp
and
or
jge
out
test
aaa
out
cwtl
xchg
sti
mov
aam
fsubrl
xor
rcll
or
dec
call
jl
ret
add
repz
loope
test
outsb
adc
or
mov
mov
lea
mov
inc
mov
inc
repz
sbb
mov
std
cmp
xor
fildll
sub
arpl
jle
inc
xchg
inc
aad
repnz
test
movsb
cmp
bound
int3
pop
lret
mov
mov
sbb
pop
je
xchg
sub
mov
jno
inc
sbb
outsl
push
pop
hlt
leave
jmp
xor
ficoml
je
push
push
xor
sbb
loope
rclb
hlt
adcl
sahf
add
negl
lods
and
inc
scas
insb
mov
repz
jecxz
sbb
out
cmp
xor
stos
gs
out
and
adc
inc
adc
or
xor
push
dec
sbb
pop
shrb
sbb
outsb
test
and
into
int
negl
jmp
dec
scas
dec
xchg
push
cmp
adc
pop
fdivrl
stc
je
or
sub
adc
jno
fisubl
movl
or
insb
mov
jmp
enter
mov
sub
mulb
dec
mov
push
mov
xor
sbb
hlt
loop
lret
insb
xchg
std
mov
jecxz
repnz
addr16
andb
inc
ss
es
xor
pop
cmp
insb
dec
jl
push
dec
mov
roll
push
add
repz
lds
xchg
jp
ljmp
mov
in
or
enter
jecxz
or
sub
ficoml
bnd
jbe
push
dec
xchg
out
xor
mov
push
out
mov
dec
xchg
sub
xchg
add
pushl
mov
sti
mov
cmpsl
gs
or
popa
mov
jnp
psadbw
lcall
fwait
out
jle
scas
cld
cmp
jl
mov
inc
mov
pop
push
xchg
mov
add
clc
scas
repnz
sarl
call
and
es
mov
sbb
fistpll
dec
sbb
sub
fs
aaa
test
sub
cld
mov
fisubrl
add
dec
cmp
aas
xchg
add
pop
mov
in
ja
data16
repz
ja
hlt
dec
sub
aad
clc
rcl
or
sbb
cmp
and
dec
stos
insl
in
movsb
cmp
outsb
pop
add
xor
in
fstp
std
es
push
pop
and
loope
or
mov
push
cli
je
cltd
jnp
add
cmp
gs
lcall
repz
xorl
pop
sbb
mov
or
cld
call
clc
stos
leave
or
std
mov
or
pop
inc
adc
std
sti
jge
sub
push
xlat
push
addb
sbb
mov
and
rcll
int
xchg
mov
fsts
rolb
jae
sub
mov
bound
sbb
pop
decl
xchg
sub
jle
add
add
jns
pushf
pop
loope
inc
adc
xor
mov
daa
stc
shl
out
int3
xchg
les
outsl
adc
pop
lods
imulb
in
adc
aam
fcomps
xchg
mov
push
arpl
pusha
ficomps
mov
pop
xor
mov
mov
movsl
imul
insl
mov
adc
mov
mov
out
and
inc
stc
lahf
fs
cwtl
jp
or
pop
btr
pop
dec
sbb
mov
aam
add
arpl
mov
push
dec
xlat
cmp
sar
iret
cmp
jecxz
sarb
push
ljmp
mov
cmpsl
cmp
fidivs
xlat
ja
leave
lea
mov
add
mov
rorl
mov
shl
or
out
adc
sbb
inc
dec
mov
test
xor
xor
rclb
insl
and
gs
add
insb
push
or
push
fstl
sub
cmp
roll
mov
jp
shlb
sbb
hlt
lea
pushf
stc
push
xor
fucomi
fsubs
mov
addl
add
mov
sbb
jns
xchg
popa
test
test
sbb
or
mov
stos
jmp
movsl
leave
outsl
dec
bound
fistl
andl
sahf
andl
into
or
ljmp
scas
data16
adc
rcll
inc
test
aaa
cmpsl
das
test
or
dec
iret
mov
jno
in
lock
mov
cltd
inc
xorl
add
sub
shll
push
sahf
std
jle
insl
jge
jns
sbb
inc
xor
and
xor
sub
push
pop
sub
push
popa
pop
addb
sub
pop
xchg
jge
into
xor
cmp
and
xchg
dec
inc
repnz
adc
pushf
test
inc
pop
stos
sub
rep
cmpsl
pusha
inc
cmp
lds
testb
lds
xor
testl
lock
add
adc
dec
sbb
arpl
inc
mulb
and
jb
cmc
push
pop
shlb
xchg
xor
int3
out
jbe
int
aas
and
and
add
rcr
xchg
jbe
movsl
push
pusha
sub
gs
jp
push
sub
scas
sub
jno
pop
xchg
dec
mov
push
int3
scas
jl
lcall
lret
push
lods
adc
add
lods
test
cmp
jge
loope
in
stos
pushf
cld
das
scas
mov
cmpsb
mov
lea
mov
inc
add
push
es
test
and
jnp
fwait
test
adc
shlb
sub
hlt
jne
add
pop
rcl
outsl
push
out
cmpsb
fsts
ds
nop
mov
and
inc
pop
adc
cmpsb
ds
inc
lock
and
mov
neg
adc
adc
jnp
jle
popf
mov
sub
jnp
movsb
lahf
mov
push
in
adcl
pushf
sahf
cwtl
loope
xchg
jp
test
addl
pushf
imul
ret
fwait
cmp
xchg
aas
push
dec
dec
and
and
scas
fs
inc
movsb
pop
ja
and
inc
shrl
aam
insb
xchg
sub
inc
push
add
sbb
cmpsb
popa
jecxz
and
xchg
jp
xchg
cmc
dec
xor
mov
call
movsb
outsl
inc
dec
aam
xor
pop
dec
pop
jl
adc
ljmp
xor
xchg
mov
push
sub
out
push
mov
fwait
andl
cmp
in
add
aas
mov
jp
push
adc
inc
and
adc
cmp
imul
sub
push
inc
test
insl
xor
movl
dec
ss
pop
jo
cmp
cmpsl
ja
lea
imul
leave
and
rorl
bound
dec
and
test
sahf
dec
out
or
and
sbb
insl
or
scas
adc
js
xor
pop
dec
adc
jbe
xor
ret
jmp
sahf
xor
adc
dec
shll
sub
jae
jns
pop
jge
and
sub
mov
lahf
mov
cmpsl
out
push
jle
or
lock
cmpsl
rcl
dec
gs
je
fistpl
fisttpl
fadds
mov
cmp
adcl
lret
daa
cmp
or
mov
adc
test
js
mov
xchg
add
fstl
jmp
enter
xchg
sub
push
mov
push
dec
or
out
fdivr
mov
mov
ret
mov
lea
jecxz
in
pop
popf
movsl
test
sarl
aam
push
mov
or
mov
inc
dec
imul
call
or
rcrb
repz
call
js
mov
fldt
pushf
lret
inc
ret
sbb
mov
es
int
popf
cmpsb
jmp
shrl
jae
notl
aam
loopne
push
mov
push
call
adc
pop
fstl
movsl
hlt
cmp
outsl
mov
inc
xorl
sub
popa
cmp
je
data16
mov
xor
fdivl
arpl
inc
inc
sub
popa
aad
sub
psubd
aas
cmpsb
jecxz
adc
data16
jnp
fdivrp
dec
jae
shll
stos
mov
push
and
fwait
scas
or
mov
decl
shrl
cmp
fimuls
add
dec
jl
xchg
mov
lea
inc
or
or
fcompl
pop
xchg
add
rclb
leave
hlt
mov
mov
sbb
or
std
addl
jns
dec
pop
mov
orl
pop
das
inc
lcall
out
fidivrs
movsl
jp
xor
or
push
test
cli
clc
pop
cmp
psubsb
iret
lret
sbb
imul
lods
cmp
mov
iret
mov
divl
mov
stos
push
loope
aaa
icebp
cltd
xchg
movsl
das
jecxz
xchg
imul
mov
and
pop
aaa
lock
sbb
addb
gs
mov
shrb
inc
mov
rcll
mov
daa
mov
xchg
inc
stos
pop
mov
outsb
fimull
cmp
push
sub
inc
pop
push
pop
jb
adc
mov
test
in
aaa
repnz
push
dec
pop
adc
lock
push
add
sbb
addb
ja
std
mov
mov
sbb
jecxz
or
popf
xor
xor
imul
js
sbb
and
bound
out
mov
popf
inc
dec
sub
sahf
mov
rcr
jl
jle
push
ss
rcpps
loope
movsl
filds
test
insb
lock
xchg
adc
test
aam
fiaddl
in
pop
lock
lret
xor
imul
mov
mov
jp
data16
sarl
orl
push
in
icebp
sub
xchg
mov
xlat
nop
cltd
xor
fcomps
jbe
out
mov
rorb
lea
orl
dec
sbb
lcall
or
push
dec
jle
xor
jae
lock
ret
sub
push
dec
int
bound
outsb
pop
repz
lea
add
mov
das
scas
pop
sub
mov
inc
rorb
aam
cld
and
mov
fnstenv
dec
out
mov
jecxz
mov
inc
mov
jbe
in
sti
and
sub
mov
lahf
es
lea
cmp
jg
dec
mov
in
pop
pop
push
outsl
std
cmp
lock
orl
clc
sbb
aaa
out
call
and
xor
cmp
dec
es
push
mov
ss
inc
test
leave
xor
rorl
xchg
cmp
clc
lret
call
add
pop
lret
mov
pusha
adc
add
imul
mov
xchg
stc
xor
jo
adc
sub
sub
js
xchg
mov
push
xor
push
sub
push
call
aam
es
xchg
in
imul
lods
cmp
adc
or
jg
mov
cmp
xchg
jp
sti
das
or
jb
jae
mov
mov
jge
movsl
dec
data16
xor
bound
dec
and
mov
xchg
jae
push
adc
jae
lcall
mov
add
xor
call
loope
out
xchg
inc
pop
xchg
dec
jg
inc
cmpl
push
jmp
mov
xchg
addl
pop
and
test
mov
inc
xor
jo,pt
fcmove
jecxz
movsl
out
fisubs
popa
mov
xor
out
popa
out
iret
inc
insl
ja
lods
fs
ss
xor
jbe
sbb
xchg
in
ljmp
call
cli
mov
push
pop
popa
out
scas
mov
jg
decb
icebp
aas
fistps
stc
out
lods
in
pop
jge
and
das
andl
mov
mov
xor
pop
xchg
inc
pop
mov
je
bnd
lret
xchg
xchg
jge
orb
dec
and
mov
cltd
sbb
adc
inc
push
das
cmp
imul
push
fdivl
and
outsl
sahf
push
mov
mov
jo
jnp
out
loope
repnz
add
cld
imul
xchg
arpl
push
cmc
pop
pop
sbb
repnz
fcmovnbe
jg
mov
in
inc
and
aam
jg
in
cmc
cld
ficompl
fwait
stos
fnsave
lret
hlt
jmp
cld
inc
clc
sub
fildl
jp
test
push
mov
pushf
and
xchg
fisubrl
cmp
mov
rcrl
std
pusha
pop
mov
cld
pop
div
shrb
js
flds
fsubrl
in
sub
rol
ljmp
repz
movsb
repz
adc
sahf
cli
loope
fdivs
test
xchg
lods
jne
push
or
cmc
lcall
mov
fdivrl
in
mov
or
adc
adc
and
ljmp
in
pop
mov
fwait
dec
clc
mov
inc
fsubr
jge
imul
mov
les
inc
sub
jo
ljmp
xchg
jbe
adc
loop
jecxz
push
insb
movsl
xor
jae
loop
xor
and
mov
mov
push
or
movsl
mov
xor
cmp
push
sub
rclb
repz
outsb
fwait
inc
sub
push
jns
jl
xchg
and
pop
jno
or
sti
push
rcll
mov
test
and
add
mov
or
pushf
push
pop
sbb
cmpb
pop
pop
nop
call
jnp
lock
cmp
mov
add
cmp
push
movsb
fucomi
sub
xchg
push
sub
dec
push
stos
push
xchg
out
lods
and
cli
mov
int3
call
movsb
les
fistps
notb
mov
xchg
sbbb
jl
cld
push
testb
push
xor
mov
push
sbb
ja
push
or
inc
stos
dec
dec
dec
jmp
lock
mov
idivb
pop
mov
rol
rorb
sub
xchg
divl
stos
out
rorl
sahf
or
mov
faddl
inc
sub
lcall
push
mov
lea
add
push
enter
mov
add
clc
bound
cmp
xlat
xor
xor
and
out
out
jmp
and
push
or
push
push
rcr
das
or
sahf
xor
sub
mov
test
and
lock
add
and
mov
clc
jnp
sbb
lret
xchg
insb
mov
jecxz
inc
jle
aam
push
negb
sbb
xchg
xor
cmc
sbb
lods
in
adc
test
mov
popa
loopne
iret
jae
daa
aam
imul
into
xor
push
and
aas
pop
fnsave
xchg
movsb
and
xchg
push
shlb
xlat
data16
inc
sub
add
mov
in
mov
lret
aam
lea
and
insl
loopne
and
sarb
lods
setbe
or
loope
aad
jl
or
fldt
ljmp
push
loope
mov
add
pusha
jmp
push
jmp
movsl
cmpsl
adc
push
add
cltd
aad
scas
xchg
jp
inc
inc
test
les
mov
fistpll
mov
xorl
or
inc
fistpll
fwait
jge
aam
aaa
sti
sbb
xchg
mov
sahf
xchg
xor
or
mov
and
cmp
or
lahf
push
mov
mov
mov
lods
fbld
int
ret
xor
jmp
test
sub
clc
cmpsb
lock
out
mov
cmp
pop
lret
scas
rcll
mov
movsl
pop
gs
jge
or
stos
icebp
fadds
jbe
popa
and
and
push
or
xor
sbb
dec
stos
out
pop
sbb
lods
jge
adc
ret
fnstsw
subb
int
xlat
aad
or
rclb
lock
mov
mov
push
add
andb
add
daa
cmp
mov
push
sbb
mov
icebp
shrl
adc
ficoms
insb
jnp
inc
dec
push
xlat
add
jge
or
outsl
jmp
imul
test
js
mov
adc
adc
sbb
jb
jns
and
pusha
test
push
clc
inc
sahf
int
les
xor
mov
popa
fdivrp
lea
add
call
sub
aam
xlat
repz
ljmp
push
int3
movsl
push
loope
lods
sahf
cmp
loop
out
loope
jo
mov
cmc
jnp
repnz
adc
out
mov
ds
sub
jle
cwtl
mov
add
sub
fsubl
mov
jno
jecxz
incl
scas
ljmp
scas
jp
daa
add
ss
scas
xchg
sub
ss
pop
xchg
push
push
imul
test
das
in
dec
jne
lock
and
cmpsb
out
xor
xchg
push
test
and
pushf
sub
lods
shr
rolb
lods
push
dec
pop
mov
push
std
and
inc
cltd
rolb
shrl
pop
inc
movb
js
fidivrs
inc
dec
cmc
test
int
add
sahf
mov
or
ljmp
add
scas
mov
shr
and
outsb
dec
aas
and
enter
ret
cmp
outsb
xchg
inc
jecxz
and
rclb
test
mov
xchg
adc
loop
add
jne
xchg
das
pusha
out
mov
loop
jge
fnstsw
mov
movsl
mov
sbb
fcoms
cmp
fdivrl
and
pop
sub
ficoms
inc
adc
arpl
adc
rolb
and
stos
sbb
loop
shll
repnz
push
repz
mov
and
mov
cwtl
mov
xor
fs
enter
xchg
aad
inc
out
fistps
sub
and
lcall
jp
notb
std
push
fldl
pop
add
les
pop
xor
mov
ret
pushf
sub
pop
xchg
mov
cmp
stos
pop
leave
dec
adc
jno
into
popf
dec
dec
enter
pop
cmp
test
cli
dec
cmpsb
mov
lea
mov
xchg
mov
mov
xchg
sbb
add
and
mov
mov
loope
dec
mov
test
aad
jns
negb
or
popa
btr
pop
dec
mov
push
test
icebp
adc
cmp
cmp
cs
push
cmp
rorb
daa
adc
pop
mov
roll
outsb
ret
inc
or
cli
aaa
push
mov
or
aas
outsl
outsl
fiadds
leave
fmul
sbb
inc
clc
test
sbb
daa
jg
adc
mov
in
cmp
push
jo
int
or
mov
or
cvtdq2ps
out
sti
negl
aad
cmpsb
dec
adc
inc
stc
add
xor
insl
or
repz
pop
push
cmp
cli
and
stc
cmpsl
sub
scas
xor
addr16
adc
mov
mov
xchg
cmp
stos
mov
cmpl
in
adc
mov
lea
sub
outsl
sub
mov
aam
cmc
sbb
out
cwtl
sub
out
xchg
push
rcll
pop
push
outsl
nop
fimuls
test
and
mov
adc
dec
or
addr16
cs
arpl
sub
clc
clc
scas
xchg
pop
sub
xlat
jbe
popa
dec
cmc
inc
mov
jae
or
pop
xchg
pop
or
adc
scas
and
push
xchg
dec
fistps
test
jae
sti
push
mov
push
shll
in
pop
js
dec
out
add
ficomps
add
lret
jmp
push
mov
shr
add
fs
jle
or
fdiv
push
jge
jle
out
test
ljmp
scas
inc
pop
loop
iret
outsl
lcall
xor
sub
ret
mov
cmp
push
jbe
xchg
imul
out
cltd
popa
into
add
stc
jo
adc
jl
pop
jg
xchg
fnstcw
adc
in
das
and
sarb
clc
pop
dec
xchg
lods
adc
mov
mov
or
xor
adc
push
popf
js
push
in
cs
dec
pop
cltd
out
movsb
push
jp
rcr
imul
xor
pop
das
mov
add
lods
call
cld
leave
sub
cmp
push
popa
xchg
subl
lcall
mov
xchg
mov
cmc
ss
add
pop
aas
gs
xlat
mov
jecxz
cmp
cmp
jmp
sbb
repz
fistpl
sbb
xchg
xor
push
or
jmp
stos
or
repz
bnd
clc
repnz
loop
dec
xchg
inc
cmp
shl
negl
dec
mov
shll
or
xchg
pop
ljmp
ss
dec
fsubr
xor
loope
dec
sti
xchg
dec
outsl
or
dec
mov
or
repz
movl
jb
adc
mov
and
sahf
call
adc
pop
xchg
loop
aas
sbb
test
int
mov
push
outsl
pop
jnp
test
sti
sbb
xor
push
push
ljmp
sub
sub
pop
mov
push
adc
daa
mov
mov
xor
pusha
lret
shl
mov
xchg
xchg
cmp
xchg
mov
aad
add
jno
adc
xor
xchg
fs
inc
xchg
cmpsl
xor
push
sti
and
sti
jge
icebp
loop
movsl
add
scas
bound
cltd
pop
outsb
mov
xor
jle
push
or
mov
loope
xchg
or
mov
nop
movsl
lcall
push
scas
divl
xchg
xchg
xchg
icebp
mov
cld
int
sbb
aam
sbb
insl
ds
aad
idivb
inc
mov
aas
adc
push
sahf
push
mov
out
push
outsb
aam
push
mov
into
mov
adc
lret
sbb
test
jg
insb
xchg
inc
sarb
mov
adc
sub
mov
adc
push
outsb
mov
adc
out
add
rcrl
cs
call
mov
jbe
mov
rol
or
mov
push
fimull
je
addr16
xorl
jno
cmp
jle
xchg
imulb
adc
or
cltd
mov
testb
inc
ljmp
repnz
dec
pop
test
rolb
orl
xchg
dec
mov
adc
push
fs
fcmove
mov
movsb
push
out
mov
push
cs
in
lods
xor
test
imul
lahf
pop
frstor
sbbl
sbb
shll
xchg
stos
sbb
mov
mov
sbb
int3
jo
and
inc
pop
push
in
ret
inc
lock
lds
cmp
inc
mov
cmpsl
ret
js
out
ficoms
pusha
das
mov
out
leave
mov
jno
cmpsb
stos
lods
in
cmp
cli
arpl
je
mov
xchg
cmp
or
and
orb
dec
xorb
inc
mov
mov
lcall
mov
into
pushf
movsl
popf
add
xchg
pop
sbbb
add
adc
or
or
push
mov
add
loope
pop
cmp
jbe
cmp
mov
es
lea
or
not
xchg
xchg
or
lret
test
out
insl
mov
pop
aas
rcrl
xchg
push
mov
rcr
push
pop
jmp
ljmp
lret
mov
push
adc
jecxz
aaa
inc
ja
daa
and
ss
idivb
aaa
mov
test
push
mov
mov
pop
xchg
insb
or
xorb
and
sarl
lods
xor
ficoms
inc
ret
pop
sub
cmp
xacquire
loope
loopne
lret
dec
jmp
outsl
sub
mov
jne
push
pop
andb
xchg
leave
std
cmpsl
xchg
in
mov
andb
pop
test
inc
cmpb
add
pop
or
dec
nop
cmc
push
repz
jnp
xchg
add
xchg
pop
push
or
push
ss
add
test
inc
and
sahf
mov
mov
mov
loop
adc
mov
push
push
call
rcl
ja
imul
lret
mov
loope
fidivrs
add
push
outsb
aas
call
jl
jo
or
inc
jae
scas
ret
add
mov
mulb
fisttps
mov
mov
and
xor
lock
add
sbb
popf
pop
aad
into
int
mov
aas
ljmp
cmpb
out
pop
cmpsb
cmp
cmpsl
xlat
roll
fsub
lods
push
jp
rorb
ja
jnp
push
int
loope
dec
pushf
test
ljmp
or
jne
push
xchg
cmp
std
fxtract
sub
in
add
mov
pop
pop
aam
sub
addl
adc
mov
mov
jecxz
xchg
pop
fdivrl
iret
negb
arpl
xchg
pushf
iret
enter
add
dec
sbb
lods
outsl
cmp
jmp
mov
sbb
mov
xchg
loop
outsl
sti
into
or
add
daa
js
aas
inc
jnp
push
shrl
icebp
cmp
add
xor
jbe
loopne
mov
push
dec
imull
pop
mov
loopne
jb
and
shll
jo
xchg
test
ss
fidivs
addr16
ret
push
cmp
aad
stc
xor
insl
scas
fnsave
dec
cmp
mov
insb
cwtl
mov
inc
lcall
xor
test
gs
test
insl
sub
test
leave
xchg
push
add
jecxz
popf
les
add
mov
jecxz
stos
imul
movsl
push
add
test
addr16
fsubrl
adc
call
xchg
imul
imul
rcl
add
push
xor
dec
xchg
test
add
movsb
clc
xchg
stos
or
sbb
imul
test
cli
xor
mov
adc
pop
and
int3
leave
mov
int
sub
stos
fsubrs
in
imul
in
pop
lret
loope
fisttps
imul
xchg
sub
ljmp
in
sahf
enter
xchg
jb
pusha
adc
js
cmc
shr
cmp
sub
cmpsb
mov
lcall
and
or
sub
pusha
xchg
ljmp
mov
or
imull
call
adc
andb
push
scas
or
adcl
movsl
bound
inc
mov
push
xchg
enter
adcl
ret
cld
xchg
xor
das
inc
cmp
sbb
mov
fcoms
xor
lcall
lea
loop
jns
or
add
neg
popf
inc
sub
mov
fucompp
add
lahf
jmp
push
aaa
jno
push
int3
aaa
das
std
test
xchg
test
shlb
pop
jns
int
inc
or
sahf
sahf
or
pop
ret
fistps
add
push
repz
mov
push
lret
mov
xchg
mov
jne
jge
out
mov
mov
pop
sbb
imul
push
sub
push
idivl
or
imul
or
or
faddl
ret
jae
inc
or
into
cli
mov
push
out
adc
jae
into
pop
int
mov
in
iret
and
mov
imul
mov
inc
inc
cli
repz
jg
xchg
jo
jne
cmp
in
sarb
push
orl
or
pop
add
cmp
rcr
add
inc
dec
pop
sub
mov
or
fisttpl
xor
jmp
jnp
fistl
aas
sub
out
add
push
je
adc
mov
ficoms
mov
test
enter
mov
test
cmc
stos
je
sbb
int
cmp
dec
pop
lds
jno
mov
cmpl
push
loop
pop
clc
ljmp
add
xchg
es
repz
push
sub
je
test
pop
or
mov
hlt
jne
jge
xchg
enter
repnz
xchg
dec
std
into
rcr
jb
push
cli
sub
mov
mov
jb
pop
add
inc
es
dec
lds
stos
adc
icebp
icebp
mov
jbe
xor
push
scas
notb
aam
mov
inc
shl
into
rcrl
pop
fidivs
call
jae
lock
jno
ret
faddl
jbe
jle
and
cmp
sti
loop
bound
cmc
dec
cmpsl
sti
repnz
dec
call
bound
das
cmpsb
pop
push
aaa
lods
lcall
ret
push
and
pop
stc
gs
adc
ss
popa
inc
sbb
mov
addr16
test
xchg
sti
push
inc
mov
or
xchg
push
movsb
jbe
jnp
mov
push
mov
xor
inc
cmp
orps
jg
idivl
and
out
cmp
add
pop
jmp
testb
das
incl
jae,pn
lahf
cmp
mov
push
sub
je
aam
loopne
dec
scas
and
or
xor
jecxz
cmp
push
outsl
pop
or
xchg
je
add
lahf
pop
or
out
xchg
les
inc
in
lock
or
pop
push
xchg
ss
leave
mov
scas
ss
fcmovnu
cltd
cld
push
xchg
loope
cld
jmp
push
fldenv
xchg
cmpsl
add
inc
jnp
sub
push
xchg
iret
or
dec
mov
or
jbe
push
inc
mov
jae
and
pop
movsl
dec
jnp
pop
ljmp
jge
jg
xchg
mov
pop
fs
adc
jg
pop
push
jp
add
repnz
or
sub
fmull
fwait
sub
mov
daa
pop
bound
sub
adc
gs
mov
mov
test
repz
lods
enter
and
mov
mov
test
mov
push
daa
dec
push
inc
cmp
cmp
es
nop
jnp
mov
xor
sbb
arpl
mov
push
xor
enter
add
cmp
fnsetpm(287
clc
iret
mov
lea
repz
es
test
insb
movsl
mov
out
cmp
adc
inc
stc
dec
jne
jmp
leave
arpl
mov
lret
pop
sub
dec
jl
xchg
or
xor
movsb
sbb
sub
push
rcl
pusha
int3
mov
and
out
xchg
xor
fldl
fwait
xchg
popa
gs
lahf
mov
fwait
xor
xchg
aaa
lea
and
stos
jmp
mov
stos
popa
and
xlat
hlt
shl
aaa
loope
dec
mov
cld
aam
popf
imul
rcr
xor
mov
jbe
sub
push
jns
mov
xor
movsl
xor
int3
push
mov
xchg
js
std
push
dec
fdivp
mov
push
hlt
aad
push
mov
out
stc
in
outsb
xchg
jmp
cld
mov
push
in
jne
cmp
adc
divl
popa
push
int3
cmpsb
inc
push
fxch
rolb
fsts
push
push
divl
in
dec
inc
jb
push
lods
loop
sarb
scas
pop
xchg
insl
hlt
in
gs
orb
sbb
fcmovnu
cli
mov
stos
dec
loope
aas
ds
daa
aad
nop
notb
ret
jl
push
adc
cmp
mov
mov
cmp
in
cli
sahf
sbb
in
xor
sbb
arpl
call
xlat
addb
inc
adc
sahf
out
aad
sbb
enter
dec
outsb
push
lea
test
inc
or
insl
cli
xchg
jne
pop
mov
add
mov
aam
xchg
sub
imul
cmpsl
adc
and
xor
loopne
pusha
sbb
clc
in
stc
jge
ljmp
incl
fdivl
mov
xchg
repnz
test
fstpt
call
loope
std
cmp
mov
sbb
cs
mov
lock
pop
in
iret
fisubs
inc
icebp
enter
cs
sbb
dec
xchg
pop
test
cmpsl
inc
push
ja
into
daa
mov
xchg
cmp
mov
push
cmp
movsb
push
js
xor
add
notl
xor
aad
pop
mov
mov
dec
lea
adc
pop
sub
xchg
cld
negb
arpl
fwait
jae
sub
pop
ret
bound
andb
in
insb
aaa
sbb
cmp
pop
enter
sbb
lea
ljmp
mov
pop
dec
pop
sub
cli
add
mov
xor
xchg
les
jecxz
cmpsl
adc
and
mov
xor
out
shl
and
loopne
inc
pop
cmp
idivl
sbb
dec
adc
xchg
dec
adc
mov
push
sbb
push
mov
sbb
gs
jecxz
or
xchg
not
jmp
addr16
out
pop
cmp
pop
dec
or
cwtl
mov
cmp
lahf
pop
sbb
shl
repz
dec
sbb
scas
lds
and
jmp
adc
mov
out
les
mov
lret
cwtl
jmp
call
mov
push
inc
cmpsl
idivl
mov
ljmp
adc
sarl
mov
lret
push
bound
mov
xchg
jecxz
fdivrs
or
push
pop
fucomip
push
stc
out
sbb
les
cltd
xchg
mov
xchg
cmp
sahf
imul
mov
and
sbb
rorl
jo
ds
cmp
pop
xchg
fstps
cmc
mov
or
int
roll
aas
sbb
xchg
xchg
or
loop
cmc
lods
fst
mov
jb
fistpl
pop
sarb
xchg
data16
add
shrb
mov
sti
fstp
or
test
sbbl
dec
mov
jmp
imul
loope
adc
dec
cmp
scas
test
aad
test
add
mov
mov
sbb
movsl
pop
add
push
orb
enter
jne
jbe
in
enter
int
inc
dec
or
xchg
pop
ret
mov
movsl
movsl
sub
incb
add
dec
xchg
popf
subl
sub
bswap
sbb
in
in
jecxz
aaa
xchg
push
push
dec
scas
lcall
mov
dec
cs
xchg
jp
shrb
pop
xchg
and
ss
push
fists
out
dec
jae
adc
pop
xchg
xor
pop
std
fisubl
and
dec
mov
mov
pusha
and
push
in
inc
test
lahf
and
xor
push
adc
push
dec
into
rcrb
pop
into
ss
outsl
push
xchg
mov
xchg
in
shlb
xchg
and
push
adc
sbb
and
les
addr16
jo
and
mov
pushf
xchg
or
js
mov
push
xor
mov
rcrl
loop
add
xchg
dec
sahf
jge
xor
pop
adc
xchg
iret
xchg
mov
stos
mov
xor
sbbl
mov
gs
sub
mov
inc
or
repz
mov
aad
and
pop
pop
sub
stc
mov
adc
in
pop
sbb
jbe
inc
jle
lock
push
and
popf
in
add
inc
mov
pop
xchg
cmp
xchg
pop
pushf
dec
or
adc
pushf
test
mov
aam
adc
cmpsb
inc
sub
add
sbb
pop
arpl
push
jbe
pop
dec
jne
nop
lock
sub
in
fadds
cltd
inc
into
jge
dec
ficomps
mov
or
sub
dec
nop
mov
and
movsl
pop
fisubrl
fstpl
les
fistpll
and
into
hlt
inc
cld
scas
mov
pusha
inc
inc
ret
scas
iret
into
mov
dec
stos
pop
int3
scas
je
std
ljmp
in
popa
pushf
push
mov
daa
cs
adc
fs
xchg
data16
mov
loope
test
divb
mov
mov
add
cmp
or
std
adcl
or
lcall
es
fdivl
xor
mov
pop
jnp
jl
cmp
dec
sbb
mov
stos
pop
dec
cmp
sub
mov
sub
dec
negl
mov
and
pop
cli
jnp
adc
lret
mov
cmc
lds
lret
dec
lcall
pushf
cmpsl
pop
jbe
or
fcomps
adc
jb
dec
clc
mov
imul
jl
icebp
lds
pop
or
daa
dec
cs
pop
adc
mov
mov
test
leave
jle
ljmp
rclb
cs
or
imul
adc
cwtl
in
mov
mov
hlt
rcl
cmp
enter
stos
sub
adc
subb
mov
cmp
adc
xchg
dec
pop
xor
inc
mov
sti
lcall
pusha
or
ljmp
je
add
stos
mov
dec
add
loopne
xchg
test
jb
iret
sbb
mov
sbb
pop
add
mov
imul
xor
adc
iret
pushf
cld
mov
dec
ss
repz
add
sbb
adc
cmc
add
xor
cmpsb
movsl
aas
aad
jmp
sarl
js
out
jne
adc
test
sbb
dec
xchg
xchg
push
mov
repnz
iret
aaa
rcl
jno
xor
or
test
es
iret
cmp
ja
ljmp
out
sarl
push
lds
out
add
jg
mov
jns
add
mov
mov
push
lcall
rcl
mov
xor
into
shrl
insl
fisttpll
lahf
push
pop
lock
xchg
inc
popl
daa
jg
xlat
pop
push
stos
leave
push
aam
mov
xor
pop
adc
adc
ljmp
ljmp
sahf
or
jo,pt
mov
cli
rclb
leave
imul
popa
mov
mov
xor
shr
xlat
aam
leave
cmp
aaa
pop
inc
mov
jno
adc
fmuls
add
pop
ljmp
xor
mov
add
lret
loop
test
int3
pop
mov
out
cwtl
imulb
test
fwait
push
cmp
mov
fldenv
and
dec
lcall
fsts
or
dec
pop
sub
or
mul
push
outsb
rcrl
jecxz
arpl
mov
cmp
scas
dec
fistpl
test
sbb
push
gs
cmpsb
push
ret
and
pushf
adc
data16
stc
dec
push
sub
xor
push
fabs
xchg
mov
add
movsb
in
sbb
test
xor
into
aad
dec
xchg
cmp
xchg
mov
orl
push
test
adc
jge
es
sub
adc
add
ja
cwtl
fcoms
mov
xchg
xchg
adc
dec
lea
enter
aas
jle
test
cmpsb
lret
cwtl
sbb
and
sbb
adc
or
js
lret
dec
fadds
push
pop
and
cli
mov
xchg
or
jns
in
test
imulb
and
pop
iret
xor
adc
add
jns
push
mov
sti
ret
roll
mov
lret
mov
imul
ret
je
arpl
push
jp
fbld
jns
cld
dec
xchg
movsl
add
mov
lock
jmp
mov
xchg
dec
outsl
mov
add
cmp
ja
call
mov
insl
aas
aad
fs
icebp
jg
lcall
loope
add
xchg
ja
lods
mov
test
movsb
loop
or
fistl
movsb
rorl
fildll
addr16
xchg
shlb
inc
pop
cmpsb
iret
xchg
shlb
rclb
dec
mov
xor
sub
ret
jmp
pop
call
mov
and
jecxz
jg
std
or
add
mov
inc
test
in
and
jmp
call
inc
pop
pop
cmp
jl
loope
inc
push
shr
push
fcmovu
and
fwait
adc
rcl
xchg
xchg
js
pop
popf
or
adc
push
pop
push
dec
js
inc
clc
ss
addr16
in
aas
ud2
push
orps
inc
lods
pushf
lods
insb
arpl
xchg
xchg
jbe
test
rorl
xor
inc
jno
lret
pop
add
cmp
fwait
test
pusha
push
mov
adc
sub
faddl
test
inc
inc
push
push
add
sbb
fs
lahf
sub
je
ret
cld
xorb
outsl
scas
ljmp
mov
inc
pusha
test
stos
push
push
adcb
cmp
mov
clc
test
jmp
cwtl
outsb
cmpsb
cmp
sbb
mov
addl
sbb
daa
push
mov
xchg
clc
sub
fwait
pushfw
fldl
or
sbbb
inc
lcall
sub
ja
clc
test
in
imul
mov
pop
test
aas
sbb
sbb
mov
xchg
xor
sbb
push
xor
inc
test
int
sub
out
add
repnz
dec
mov
cmp
dec
pop
aaa
xor
cmc
mov
mov
pop
mov
shl
addb
subb
js
pop
stc
in
sub
int
push
mov
inc
loopne
sbb
mov
add
sub
mov
jb
adc
mov
paddusb
arpl
movsl
stc
mov
cmp
lea
repnz
call
ret
int3
pop
divl
shlb
aam
mov
adc
insl
fsubr
imul
loop
or
adc
sbb
call
bound
add
or
fidivs
add
jns
mov
nop
addr16
mov
jnp
clc
xor
imul
sub
adc
jl
mov
clc
lods
ss
inc
je
popf
push
and
sub
iret
mov
xchg
in
es
sbb
push
or
and
movsl
xchg
fcomps
repnz
push
xchg
mov
mov
dec
out
jle
xor
andl
cld
insl
push
push
xchg
test
xor
loopne
xchg
inc
mov
xor
xor
xor
xor
xor
xor
xor
add
add
inc
add
decl
add
mov
add
dec
add
pop
add
nop
aam
add
scas
add
push
leave
inc
add
scas
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
