incl
ja
in
ja
pop
jmp
xchg
enter
cmp
ja
sbb
ja
inc
out
test
das
out
aad
in
pop
dec
out
aaa
add
ja
sahf
cmpb
ja
cld
in
dec
adc
cmp
scas
cmp
fdivrl
ja
mov
ja
xchg
cmp
or
cmp
jne
ja
fdivrs
ja
lret
cmp
pop
cmp
push
cmp
scas
cmp
cmp
add
add
add
add
fmuls
mov
adc
inc
dec
xor
inc
xor
inc
lea
mov
add
dec
dec
add
and
lea
mov
add
dec
jne
add
mov
inc
inc
pop
or
lea
pop
movsbl
add
pop
sub
inc
add
xor
lea
mov
sub
dec
dec
dec
add
add
ret
push
lea
mov
add
inc
dec
dec
add
lea
push
push
push
push
mov
dec
dec
push
add
dec
sub
lea
mov
inc
dec
inc
sub
mov
add
push
lea
imul
xor
inc
inc
push
dec
dec
push
xor
lea
pushl
movswl
call
inc
add
add
inc
sub
xor
lea
movzwl
inc
pop
ret
jb
mov
xor
inc
add
mov
sub
dec
mov
and
lea
inc
dec
add
inc
add
or
mov
lea
mov
cmp
jb
inc
mov
sub
inc
xor
inc
and
xor
lea
mov
pop
inc
inc
test
jbe
add
inc
xor
lea
dec
inc
sub
inc
or
lea
mov
inc
add
inc
inc
or
inc
lea
movzbl
inc
sub
add
inc
and
and
lea
mov
add
movzbl
dec
add
add
sub
xor
and
lea
mov
mov
add
dec
mov
sub
inc
mov
and
lea
mov
movsbl
dec
add
add
dec
sub
dec
jne
lea
mov
imul
add
sub
inc
sub
or
lea
imul
add
add
mov
inc
dec
or
lea
imul
dec
add
inc
mov
dec
xor
test
jbe
lea
imul
inc
inc
sub
dec
and
lea
movzwl
dec
dec
dec
inc
add
lea
inc
mov
sub
dec
add
inc
add
and
lea
mov
mov
dec
inc
movzbl
inc
add
add
sub
lea
and
mov
inc
mov
dec
dec
movzbl
dec
xor
mov
lea
mov
mov
inc
inc
movzbl
dec
dec
add
xor
lea
and
mov
jmp
dec
or
pop
ret
push
lea
mov
dec
dec
sub
inc
sub
lea
sub
mov
push
dec
inc
push
dec
dec
push
or
lea
push
mov
call
sub
inc
call
add
inc
add
lea
mov
sub
dec
dec
inc
xor
lea
mov
inc
inc
dec
dec
and
lea
mov
inc
dec
inc
inc
cmp
je
sub
iret
lea
mov
push
inc
call
dec
add
dec
pop
sub
ret
push
lea
mov
add
inc
add
inc
add
lea
mov
push
inc
inc
push
dec
push
dec
push
xor
call
lea
push
mov
sub
dec
mov
add
mov
dec
or
mov
lea
imul
test
je
inc
inc
add
sub
or
lea
mov
add
inc
mov
sub
inc
or
lea
mov
inc
add
inc
repnz
sub
xor
add
lea
jmp
jmp
mov
dec
add
inc
dec
add
lea
mov
inc
add
add
inc
pop
pop
ret
push
sub
lea
imul
dec
add
add
inc
and
lea
movzwl
sub
dec
inc
sub
sub
lea
mov
dec
inc
sub
pop
ret
sub
sub
mov
add
lea
mov
mov
sub
mov
dec
dec
mov
inc
or
xor
lea
mov
mov
inc
inc
inc
dec
inc
add
lea
movzbl
inc
cmp
jb
inc
push
sub
dec
push
or
lea
push
movswl
dec
mov
inc
dec
xor
add
or
xor
lea
mov
xor
inc
sub
push
add
dec
xor
and
lea
mov
mov
inc
mov
inc
inc
movzbl
dec
or
lea
mov
add
dec
inc
add
inc
dec
movzbl
add
lea
mov
dec
dec
inc
add
add
inc
lea
mov
mov
inc
inc
inc
inc
sub
lea
cmp
jmp
push
mov
mov
add
call
inc
sub
inc
xor
lea
mov
inc
add
inc
dec
and
lea
mov
add
add
inc
sub
or
lea
imul
inc
sub
dec
dec
add
lea
movzwl
dec
dec
dec
dec
xor
lea
movsbl
add
inc
sub
sub
xor
lea
mov
sub
call
call
call
sub
push
inc
call
dec
or
lea
mov
add
sub
dec
dec
call
sub
lea
movsbl
sub
inc
dec
inc
sub
lea
pop
movswl
add
inc
add
dec
pop
sub
sub
pop
lea
movzbl
dec
dec
pop
add
add
add
lea
imul
add
dec
dec
pop
add
or
pop
lea
mov
mov
inc
inc
call
dec
inc
and
lea
ret
mov
sub
push
add
dec
push
inc
add
push
lea
mov
push
sub
dec
push
dec
inc
mov
add
lea
push
ret
push
add
push
inc
inc
inc
and
lea
call
mov
inc
inc
sub
jmp
cmp
adc
lret
popl
shll
iret
adc
inc
jns
es
inc
mov
sub
mov
mov
out
out
push
int3
std
shll
decl
pushl
cmpsb
pushf
xchg
or
mov
mov
pop
xchg
punpckhdq
jmp
insb
fstpl
cld
js
flds
ucomiss
cli
and
int
sub
fs
add
cld
scas
in
mov
sub
cld
in
xchg
rorl
mov
movsb
frstor
int3
leave
in
or
mov
scas
ret
jecxz
in
out
lds
pop
push
sbb
inc
outsb
adcl
xchg
cmp
mov
cltd
push
daa
pop
jns
pop
add
lahf
popa
js
lds
mov
movsb
xchg
xchg
cmc
aas
loop
inc
sbb
fs
mov
or
shl
xor
mov
out
popa
jo
dec
mov
aam
cmp
add
divl
pop
pop
xor
addr16
xchg
in
dec
mov
xchg
dec
and
loop
add
iret
inc
loope
xchg
fwait
sub
jne
sbb
popa
mov
lret
cmp
stos
pop
jne
stos
clc
add
movsb
stos
mov
cmpsb
aaa
xlat
emms
inc
addb
adc
arpl
lcall
cmpsl
lahf
jno
mov
xchg
xchg
or
mov
xchg
push
daa
imul
add
test
es
push
call
aam
inc
rcrb
mov
aad
mov
aaa
dec
mov
jo,pn
mov
jb
inc
mov
cmp
scas
leave
ds
iret
push
lahf
cmp
xchg
adc
xchg
pop
dec
mov
adc
cmc
sub
pop
xor
cmp
mov
in
xchg
bound
or
cltd
test
jae
cmc
sbb
sub
xchg
movsl
jmp
std
mov
xchg
adc
fxch
sbb
cmp
cmpb
inc
cmp
or
insl
cmc
shl
cmp
addr16
scas
lret
out
inc
sbb
lods
stos
inc
jl
es
fxam
cs
inc
push
mov
imul
push
pop
ret
mov
cs
in
hlt
loope
jg
aas
dec
sub
mov
push
aas
cld
daa
sti
mov
mov
add
push
add
dec
xchg
inc
data16
mov
mov
in
inc
jno
not
insl
push
sbb
cmp
test
fiadds
lahf
mov
int
andb
shrl
pop
mov
add
xchg
cmp
das
add
mov
adc
out
adc
xchg
ffreep
jmp
adc
inc
cmp
push
xchg
nop
add
dec
pop
cs
out
sahf
test
push
xchg
pop
or
popf
and
mov
sub
inc
adc
popa
hlt
xor
add
ret
xchg
mov
adc
push
ljmp
lcall
hlt
ljmp
scas
mov
clc
cwtl
xchg
movsl
imul
ret
mov
call
fistpl
xchg
imul
push
and
mov
mov
push
cli
mov
call
mov
and
pop
nop
mov
sbb
sbb
sub
lret
movsl
pusha
xlat
aaa
addr16
xor
roll
insb
test
fisubs
aam
mov
cli
bnd
insb
int
or
and
popa
cmovb
bound
sti
fnstsw
imul
mov
mov
ss
aam
sbb
push
jle
addr16
lock
add
test
xchg
inc
and
lock
testb
or
cltd
hlt
call
fisubrl
fmul
gs
ss
imul
adc
jns
or
pop
sub
mov
pop
sub
mul
mov
repnz
aas
aam
fnstcw
mov
ss
or
loopne
dec
mov
aaa
sbb
mov
scas
push
dec
movsl
xlat
mov
pusha
mov
pop
push
pop
pop
fildll
dec
test
jae
push
push
into
xchg
icebp
jl
mov
adc
outsl
adc
jns
fdivrs
lcall
and
cmp
imul
ret
sub
mov
xlat
or
imul
mov
mov
push
and
cld
sbb
scas
in
sub
fcomi
inc
cs
mov
subl
lods
dec
jb
push
cltd
cltd
mov
sub
mov
cwtl
dec
mov
xor
cmp
scas
push
in
jb
jne
dec
inc
dec
pushf
or
mov
push
mov
movsl
xchg
inc
pop
sub
dec
sbb
sub
les
dec
xor
jb
pop
and
inc
stos
mov
cmpsl
xor
xor
cmp
sbb
nop
in
dec
cld
sahf
js
or
ljmp
lret
or
xchg
mov
or
xchg
xchg
fisubl
adc
sti
aam
cli
push
push
cmpsl
dec
and
sub
inc
adc
push
jmp
adcb
push
xor
das
inc
shlb
sahf
inc
leave
xor
clc
xchg
bnd
cli
clc
test
std
mov
test
loope
mov
push
xor
dec
xchg
mov
or
and
jno
xorl
mov
pusha
lret
adc
dec
push
mov
aas
je
sub
movl
sbb
pop
test
mov
icebp
sbb
lret
mov
or
dec
lods
mov
mov
adc
mov
in
stc
pop
cmp
js
and
pop
andb
add
ret
jbe
sbb
aad
ror
and
lahf
xchg
in
sarl
or
loope
mov
xchg
mov
xor
mov
xor
push
add
arpl
push
push
clc
dec
and
call
mov
orl
mov
dec
or
pop
push
inc
js
lahf
xchg
incb
fisttpll
jae
out
push
in
pop
dec
stos
out
pop
incb
neg
insb
push
push
cmp
adc
pop
call
push
std
push
dec
push
sub
or
jp
cmp
or
pop
xchg
mov
lret
in
rorb
nop
ljmp
cs
ror
cmp
sti
shlb
xor
in
lods
mov
js
sub
or
mov
jle
cld
dec
in
jo
add
lcall
test
inc
inc
sbb
mov
arpl
or
pushf
je
push
ret
test
repz
fldt
xchg
iret
arpl
mov
xchg
push
rol
lret
jns
fcompl
lahf
outsl
inc
sbb
test
das
or
jmp
mov
mov
data16
ret
sarb
inc
mov
mov
pusha
outsb
dec
push
sti
xchg
inc
push
sbb
inc
fldenv
loop
leave
add
xchg
sbbl
add
mov
test
lret
fsubr
adc
add
sub
les
xchg
sbb
sub
clc
xchg
mov
and
popf
cmp
das
or
pop
enter
cs
add
add
adc
cld
into
adc
jge
scas
lea
jns
add
rclb
mov
pusha
jle
cs
call
pop
aaa
in
and
mov
mov
inc
mov
add
mov
popa
nop
xor
pop
sub
iret
mov
inc
fdivrs
mov
fcmovnu
in
icebp
jle
push
add
aam
inc
add
out
inc
sub
sub
leave
xlat
neg
in
adc
int3
mov
mov
adc
xchg
ja
jne
mov
ljmp
shlb
adc
lds
in
fnstsw
xchg
cld
inc
aam
adc
mov
cmp
out
sbb
mov
dec
cmp
dec
mov
bound
ds
adcb
jmp
add
xchg
ljmp
popf
adc
ljmp
aad
inc
scas
adcb
rol
aam
inc
push
jl
xor
pusha
in
ss
testl
cmp
push
stc
mov
xlat
shr
dec
and
sub
mov
lea
dec
push
xor
cmp
push
or
dec
iret
pusha
ret
lods
xor
sti
fmul
pushf
iret
sub
ja
pop
adc
daa
sub
out
and
sub
es
jp
insb
add
ja
fadds
pop
pop
aam
lret
mov
xchg
mov
cmp
xchg
mov
stc
lret
jge
std
cmp
inc
sub
pushf
push
sbb
jg
jae
xor
or
xchg
pop
mov
inc
hlt
pop
sub
dec
scas
add
repnz
or
pop
dec
lcall
insb
cmp
xchg
out
sub
repz
jb
push
mov
movl
push
mov
cld
add
pusha
mov
stos
cmpb
or
mov
outsb
ja
or
pop
fs
insb
jbe
mov
pop
cmc
mov
clc
xor
cmp
sbb
adc
xor
mov
inc
pop
popa
js
ds
stos
dec
mov
imul
cmp
pushl
xor
popf
lret
jg
rol
ret
daa
adc
ficoms
cmp
adc
sbb
adc
jae
lods
pop
and
js
inc
daa
dec
daa
scas
in
js
insl
jbe
xchg
imul
icebp
mov
adc
mov
in
loope
xchg
cmp
and
shll
pop
jmp
cmp
imul
add
pop
out
sub
jl
mov
mov
ds
aaa
push
jno
out
adc
into
jbe
movsb
mov
repnz
jbe,pn
sbb
test
cmc
push
ret
xor
jae
stos
xchg
cs
pop
xchg
push
je
sub
mov
jle
addr16
ljmp
mov
lcall
dec
mov
mov
nop
sbbl
jmp
lea
sub
lret
sbb
dec
into
into
mov
mov
mov
aaa
mov
mov
ljmp
jg
cmp
subl
mov
loop
neg
out
inc
cmp
nop
scas
aad
mov
push
lret
shll
and
sbb
jno
lret
push
scas
and
dec
jne
jg
out
adc
in
mov
loope
into
daa
mov
sar
dec
movsl
xlat
ds
gs
jp
fdivs
and
test
rolb
lret
dec
sahf
xchg
in
cmpsb
pushf
push
call
pop
sbb
mov
arpl
cmpsl
inc
clc
stos
test
pushf
pop
pop
mov
and
cmp
fwait
sahf
push
aam
jmp
or
lods
lret
mov
jb
lods
jmp
dec
sbb
stc
push
fisubs
shll
push
stc
push
xor
jecxz
stc
pop
dec
jnp
es
popa
push
ds
sar
int
adc
hlt
sub
xor
bound
imul
jmp
add
popa
push
mov
jns
lock
jno
sti
xor
mov
adc
inc
in
xchg
dec
rolb
stc
xchg
sbb
sbb
xor
faddl
enter
pop
lods
jle
jg
xlat
adc
aad
mov
cmp
push
out
sub
push
aas
stc
lods
std
jl
mov
pop
in
pop
jno
int
out
outsb
daa
insb
fldt
mov
cld
lret
or
test
pushl
scas
test
mov
xchg
lods
testl
pop
pop
xchg
mov
or
push
mov
rcrl
ret
add
sub
ljmp
add
mov
xor
pushf
daa
sub
push
mov
roll
mov
cmp
inc
movsb
in
std
test
dec
xorl
xchg
into
shlb
sub
jns
mov
in
cmpsl
pop
sar
mov
sub
fadds
fwait
cmp
roll
mov
dec
xlat
imul
mov
or
mov
pusha
inc
outsl
or
push
lcall
xor
sub
jbe
jp
mov
dec
outsl
pop
mov
test
ret
daa
movl
loopne
int
jge
addl
es
xor
inc
punpcklwd
ss
mov
int
adc
mov
rcr
imul
inc
cli
std
inc
sbb
xchg
ret
push
mov
push
iret
xchg
lret
mov
mov
shr
jnp
xchg
andl
push
cmp
call
in
add
lock
out
loop
add
xor
sbb
ficompl
push
ret
hlt
sub
xchg
xchg
ret
fwait
enter
fwait
sbb
shrb
sarl
out
imul
dec
shl
jmp
sub
lea
mov
push
pop
fistpll
xchg
push
out
pusha
rcll
pop
jnp
xor
cld
pop
fs
sbb
shlb
ss
fildl
cmp
push
stos
je
mov
cmc
pop
imul
adc
push
movsb
mov
mov
movsb
push
xchg
push
cli
cmp
dec
ret
pop
dec
mov
lock
out
pop
lods
test
test
stc
les
jl
or
movsb
cli
pop
int3
stos
add
fadds
jae
and
inc
es
dec
add
add
outsb
je
push
pushf
push
dec
sbb
iret
out
cld
mov
lahf
das
pop
cld
cmpl
xor
and
ret
or
adc
mov
xor
mov
lock
cmpsl
xchg
xor
pop
jmp
jg
lock
ss
adc
mov
push
inc
mov
insl
push
sbb
shll
mov
ljmp
push
push
mov
push
incl
call
xor
mov
aas
inc
testb
xor
stos
dec
xor
in
call
mov
fcmovbe
fsts
shrl
or
xor
aad
or
clc
inc
lret
insb
cmp
icebp
outsl
js
add
xchg
test
shr
ret
out
mov
lea
rcrb
cmp
test
addr16
sbbl
pop
adc
repnz
inc
aaa
aam
or
repnz
jmp
stos
xchg
icebp
jl
loop
jno
xchg
mov
in
out
mov
aaa
enter
int3
je
imul
sub
lea
cmpsb
jno
fs
push
loope
xchg
cld
not
jl
mov
cmp
pop
add
adc
movsb
fnsave
ja
in
xor
scas
cli
clc
out
mov
cmpsb
insb
sbbb
daa
jmp
lds
sub
arpl
stc
mov
mov
ret
les
popf
inc
mov
cmp
leave
xchg
fcoms
jg
movups
clc
mov
sbb
sbb
cmp
mov
nop
movsb
rcrb
clc
add
and
inc
and
adc
js
icebp
push
jns
fnsave
fiadds
xor
sbb
movsl
inc
int3
daa
inc
and
sub
dec
and
pushf
callw
mov
add
push
dec
push
and
dec
fsubl
mov
mov
mov
mov
ss
mov
cs
sub
jle
ljmp
sbb
sub
dec
jmp
int
fnstcw
adc
cmp
out
mov
loop
dec
fidivl
inc
jb
xor
inc
aad
pop
push
iret
jmp
dec
jbe
adc
dec
inc
dec
popf
mov
cmp
std
rorl
test
jnp
sub
sbbb
movsl
mov
arpl
gs
add
bound
fsubl
jge
hlt
loopne
inc
sub
jmp
pop
es
js
das
xchg
mov
loopne
mov
push
out
jl
sub
dec
mov
cli
mov
xor
add
out
mov
sub
gs
jmp
in
insl
adc
push
cli
pop
mov
sub
lcall
setbe
sub
push
adc
ret
fs
repz
sbb
dec
in
rcr
push
enter
mov
mov
out
addl
dec
ds
adc
into
cli
fsubl
leave
push
xor
jle
shl
rorb
ds
or
pop
popa
cltd
jnp
and
push
ja
mov
sbb
loope
arpl
cmp
mov
lret
aas
addb
stc
fcmovb
int3
inc
and
out
jne
mov
or
shlb
jo
dec
fnstenv
cmp
icebp
cmp
rorl
mov
in
pop
dec
jmp
push
push
push
xchg
pop
mov
lods
aam
pop
test
into
sbbl
filds
cmp
push
mov
jmp
out
rol
aas
cwtl
mov
fnstenv
fsts
ret
rolb
imul
mov
fcmovb
cmpsl
xchg
xchg
lret
jbe
adcl
lds
scas
xlat
pop
xchg
jmp
addb
mov
jge
add
lret
insb
or
and
lret
aas
push
or
dec
mov
mov
in
cmp
int3
out
enter
dec
popf
pop
cmpsb
std
ds
std
mov
or
sub
popf
jl
stos
xor
push
add
out
orl
rorb
mov
xchg
sbb
jbe,pt
fdivl
push
and
stos
cmp
arpl
mov
jle
scas
fld
xlat
cmp
cwtl
mov
jo
cmpsb
inc
popf
xor
xchg
push
ret
jnp
sbb
outsb
stos
xor
rcrl
or
in
sub
icebp
nop
and
enter
xchg
call
hlt
gs
push
daa
std
lock
lods
ja
orb
lret
xchg
mov
imul
cli
bound
mov
sub
in
je
test
add
inc
es
xor
or
dec
sub
clc
mov
xchg
push
mov
mov
push
xchg
pop
test
xchg
notb
hlt
add
das
mov
add
iret
jb
xor
xchg
jp
sti
sub
lret
xchg
mov
sub
jp
bound
pusha
and
mov
mov
sbb
lret
fsubrs
int3
lods
stos
xchg
and
mov
mov
popa
aas
mov
fwait
in
sub
lods
xor
dec
lods
out
out
popa
lret
fldcw
divb
call
lock
lcall
aad
pop
data16
cli
pop
and
push
cmp
aad
outsl
add
sub
nop
inc
js
fcoml
out
pushf
es
xchg
cmpl
or
mov
hlt
lahf
jb
addr16
inc
sbbl
push
cwtl
cltd
xchg
add
out
test
mov
pushf
cmpsl
jo
call
xchg
mov
aad
ficomps
jl
lret
cmc
sub
jne
jl
dec
jmp
mov
loop
imul
fistps
dec
cld
loop
dec
push
mov
push
pop
test
inc
mov
leave
movsl
notl
lcall
out
jae
mov
push
sarb
sub
in
or
clc
xchg
sbb
mov
xlat
push
rorl
mov
jmp
sub
cld
add
pop
loope
mov
inc
adc
adc
add
mov
xlat
cwtl
sarb
add
lcall
into
in
les
mov
inc
cmp
rorl
xchg
push
mov
inc
test
test
loopne
cmpsb
xor
and
imul
rorb
out
in
cmp
sbb
dec
ficoml
das
cmpb
and
outsb
inc
mov
lret
push
lret
imul
call
cmpb
push
cmp
pop
bound
jne
lahf
paddusw
fs
jecxz
lret
std
dec
lods
or
loope
cltd
pushf
jae
mov
test
ret
jecxz
add
adc
stos
add
cmc
add
xor
lock
mov
mov
mov
popa
loop
out
add
je
mov
xor
stos
add
cld
xchg
scas
stos
cmpsl
sbb
add
xlat
scas
sbb
adcl
inc
pop
in
out
mov
test
dec
pop
adc
cmpsl
pushf
sbb
lret
jno
jle
jl
fistpll
mov
push
out
pop
insb
xor
ljmp
sbb
dec
dec
mov
or
jl
stc
mov
clc
loop
inc
xor
adc
xchg
xor
leave
mov
fs
xor
adc
jae
sbb
stos
mov
scas
daa
pop
hlt
mov
fistl
cmp
mov
pusha
adc
in
ja
loopne
fbstp
in
add
xor
pop
xor
adc
add
js
xchg
xchg
or
shll
mov
rolb
pusha
mov
xchg
ret
loope
jb
sbb
dec
stos
xchg
divl
or
xor
in
adc
loopne
dec
aaa
cs
mov
push
add
and
jne
les
push
notl
dec
fisttpll
xor
push
mov
mov
inc
test
cs
mov
push
dec
mov
imul
jp
imul
adc
and
cltd
in
aaa
dec
xchg
or
negb
or
push
xchg
xor
pop
lock
adc
xchg
test
pop
pop
js
mov
and
scas
clc
xor
jns
ja
cmc
dec
shrb
loopne
dec
push
outsl
xor
dec
sarb
sub
inc
sbb
inc
cli
sbb
mov
or
adc
xchg
adc
adc
lret
in
inc
loopne
mov
mov
out
inc
xlat
fimuls
cmp
pop
sahf
sub
popf
bound
inc
in
add
jbe
sbb
dec
pusha
shlb
jno
adc
movsl
push
dec
rolb
das
pop
cmpsl
mov
xchg
rcll
jp
lods
js
inc
and
ficompl
aas
cmp
cmp
fsub
or
aad
pop
add
cmp
dec
sarl
and
pop
ret
fcompl
add
setae
addr16
hlt
xchg
mov
inc
pop
cmp
mov
repnz
insl
mov
es
inc
lea
ds
test
inc
mov
lods
in
hlt
or
and
in
fcoms
sbb
push
jns
jnp
mov
mov
sbb
jmp
lahf
enter
decl
sub
jbe,pt
adcl
lret
stos
test
fists
or
pop
push
fcoms
cmp
mov
nop
inc
cmc
sar
xchg
jg
fimull
mov
popf
xchg
faddl
inc
push
pop
fstp
jb
fsubl
push
notl
sti
into
repz
fsubl
xor
pop
sbb
es
fwait
push
mov
int3
push
xor
lret
cld
xor
xor
movsb
or
scas
jg
dec
rclb
xorl
xor
loope
sbb
jae
adc
mov
cmp
rcl
mov
pop
enter
xlat
adc
fbld
jnp
stos
pop
pop
ss
and
or
aam
xchg
pop
jo
lds
sub
shll
mov
jnp
stc
mov
shl
adc
repz
insb
sub
popa
inc
push
lcall
or
movsb
xchg
sub
cltd
adc
xor
addr16
je
mov
push
ret
lret
ljmp
leave
data16
ds
div
es
sahf
adc
sub
mov
fcmovnbe
mov
xor
fbstp
ljmp
mov
call
scas
xor
loopne
sbb
adc
stos
adc
cmp
xor
fs
jno
nop
sub
data16
cld
bswap
out
jmp
clc
jecxz
and
dec
cmc
movsb
mov
mov
jns
shl
test
cmp
shll
out
test
addb
ss
mov
pop
xor
push
or
out
fcoms
das
jo
insl
rclb
std
leave
mov
jmp
jne
lret
mov
xchg
fistps
loopne
mov
lods
cltd
sbb
aas
les
lcall
push
imul
xchg
pop
into
mov
cmpsl
repz
inc
mov
push
mov
sbb
lcall
fwait
jp
sbb
push
fsubrp
test
push
incl
sub
in
lods
subb
or
dec
sbb
jmp
nop
cmp
int3
dec
pop
mov
push
aad
cmovg
add
xor
push
rcrl
pop
in
rcrb
mov
fwait
and
mov
xlat
mov
xor
cwtl
cwtl
dec
fisttpll
pop
xchg
fidivrs
lahf
mov
mov
repz
cmp
stc
push
pusha
enter
push
or
lods
out
push
std
pop
in
clc
push
fs
popf
sahf
sub
inc
pop
cmp
fsubrs
enter
mov
push
iret
dec
aaa
mov
lds
cmp
popf
repnz
adc
mov
adc
sub
test
fxam
popa
or
into
add
pop
movsb
xchg
mov
insl
hlt
jle
fsubrl
or
xor
xchg
ss
ljmp
mov
or
cmpsb
insb
jno
sbb
push
sub
std
pop
inc
xor
xchg
push
ret
inc
insb
and
sbb
loopne
push
js
xchg
daa
mov
sub
jmp
mov
inc
mov
cmp
bound
pop
shrl
clc
jnp
in
jl
cwtl
addr16
pop
rol
daa
daa
inc
push
hlt
jmp
pop
fcoms
fnstsw
or
loop
cltd
fnstenv
into
jnp
push
push
mov
inc
in
pop
clc
outsl
inc
dec
xor
jmp
lods
jae
int3
ficomps
enter
mov
jne
inc
je
dec
mov
jl
inc
mov
pop
cltd
and
sahf
out
xchg
jnp
cmpsl
call
aad
popa
insb
inc
sbb
dec
hlt
push
ja
jmp
aad
xor
push
inc
mov
xor
scas
adc
xchg
insl
push
adc
ss
scas
jo
and
scas
or
jns
cmp
or
adc
sub
cmc
and
adc
test
cmpsl
mov
pop
inc
mov
xchg
jo
sbb
pop
arpl
subl
out
push
inc
imul
jne
sub
cmp
and
inc
std
dec
loop
aas
fcomps
or
enter
ret
jb
setbe
enter
scas
pop
nop
inc
inc
cmp
out
test
sbb
aad
jno
aam
and
lea
pop
lret
and
xor
mov
aas
pop
xchg
divl
in
jbe
and
into
pushf
jbe
push
std
xchg
mov
mov
stos
add
sub
dec
push
test
jns
xor
daa
dec
xor
popf
enter
ja
mov
push
pop
out
js
push
lcall
outsl
insl
daa
pop
popf
popa
jne
fnstcw
adc
mov
jge
imul
mov
clc
fwait
movsb
gs
xchg
mulb
adc
outsl
inc
or
sbb
bnd
data16
add
mov
nop
lahf
or
mov
sub
push
or
mov
mov
adc
mov
lods
stc
sti
mov
xor
mov
les
and
mov
js
xchg
lods
and
xorb
lahf
sahf
outsl
mov
cs
aaa
loop
insl
push
jg
in
loopne
dec
in
jmp
cmp
out
lret
out
mov
push
gs
sti
inc
je
arpl
ror
mov
mov
repz
std
fwait
jns
xor
aam
sbb
cltd
pop
add
push
and
sbb
add
outsb
not
test
xchg
ficoms
jo
jbe
adc
out
mov
movsb
in
xchg
sbb
push
push
inc
push
pop
xchg
adcb
fdivs
cmp
leave
dec
repz
fld
addr16
loope
dec
sahf
jl
les
loope
pop
scas
dec
out
mov
mov
jp
jne
dec
xor
frstor
pushl
out
cmpsl
insl
adc
mov
nop
mov
or
pop
xchg
jge
or
outsl
jnp
outsl
dec
scas
loope
lds
lods
fisttpll
stos
daa
cmpsb
pusha
test
adc
incl
push
or
les
mov
sarl
push
adc
xchg
ds
ret
jg
and
jecxz
inc
pop
mov
cmpsb
inc
es
std
lahf
and
fcomps
and
xchg
jge
fistl
push
stos
fwait
adc
sbb
cltd
xor
shl
les
xchg
cwtl
mov
sbb
aad
inc
pop
xchg
mov
rcrb
sbb
cli
scas
inc
jns
cmpsb
repz
mov
mov
push
and
sbb
jae,pn
mov
shrb
sub
ret
aam
push
push
pop
adc
mov
adc
and
ja
jmp
cmp
scas
lret
xchg
sahf
xlat
mov
and
in
inc
push
sub
imul
or
add
repnz
cmp
data16
and
mov
loop
pop
lcall
pop
dec
cmp
or
push
cmc
mov
sub
adc
cltd
sub
push
pop
out
mov
mov
xchg
dec
mov
sarb
scas
mov
lea
pop
scas
out
and
adc
mov
cmc
outsl
out
add
xchg
xchg
add
notb
pop
pushf
pop
cmp
add
test
push
cs
mov
aaa
mov
adc
push
sti
pushf
in
scas
pop
xor
ret
mov
pop
pop
fnsave
in
push
shr
add
out
bound
push
pop
sbb
xchg
pop
andl
sub
jg
outsl
out
pop
mov
mov
pop
fadds
enter
fidivs
scas
lock
and
xlat
movl
inc
test
push
mov
jp
std
add
cmp
out
pop
mov
sarl
mov
out
pop
mov
add
sub
les
mov
enter
jl
in
in
rcrl
cmpsl
push
outsb
push
test
adc
push
sub
pop
sub
divl
aaa
icebp
add
ja
or
sbb
cld
mov
mov
push
mov
sbb
imul
call
pop
repz
mov
movsl
iret
sub
push
and
inc
push
lods
ret
imul
sbb
push
testb
lcall
loopne
xchg
mov
pop
and
push
mov
inc
pop
xchg
movsl
sub
fistpll
cmp
pop
dec
xchg
jg
mov
cmp
fsubl
fnsave
xor
lea
sub
pop
ss
or
sbb
mov
push
pop
dec
inc
repnz
adc
mov
js
fadds
add
fimuls
mov
stos
ljmp
test
dec
adc
jecxz
add
lea
aas
mov
aas
das
or
mov
incb
mov
les
push
je
mov
bnd
ret
lods
xor
fsts
lods
jns
iret
test
xchg
add
mov
inc
inc
out
mov
xor
mov
mov
dec
mov
jno
cmpb
inc
jo
in
sub
jg
inc
sbb
dec
push
sub
mov
in
out
or
push
lahf
jae
leave
sbb
int
and
dec
test
sti
ds
scas
add
xadd
jbe
sbb
push
out
pop
mov
addr16
lret
mov
mov
ror
cmp
enter
push
pushl
imul
mov
xchg
sbb
test
test
mov
xchg
shll
test
xchg
pop
xchg
push
scas
or
fs
ret
mov
and
push
mov
idiv
inc
popa
fisttpll
push
xchg
stos
lea
pushf
inc
pop
pop
cld
sti
mov
scas
or
fsubl
cmpb
xorb
int
js
xlat
jl
dec
dec
cmp
andb
outsl
jmp
test
cmpl
std
lds
adc
inc
shll
es
mov
add
adc
movsb
das
xchg
xor
mov
xchg
mov
testl
pop
mov
xor
fcoml
pusha
and
mov
out
xchg
icebp
mov
fucomp
int
jmp
repnz
mov
test
sbb
pop
xor
out
loop
pop
in
cmp
cmp
in
or
lret
push
in
adc
enter
aas
mov
jg
cmp
imul
popa
ja
push
mov
pop
outsl
push
mov
test
loope
ljmp
gs
hlt
or
or
popa
dec
push
adc
icebp
jnp
aaa
es
jnp
into
nop
pop
pop
mov
mov
or
sub
idivl
lret
mov
mov
pop
sbb
movsl
fucomp
pop
rclb
loope
mov
mov
lds
fisttps
nop
stos
arpl
inc
cmp
in
jnp
sub
mov
incl
jo
jbe
inc
sbb
mov
mov
mov
add
fcomip
and
pusha
sbb
mov
jnp
and
cmp
sub
cwtl
ds
xchg
cwtl
push
into
lahf
push
icebp
aaa
inc
nop
mov
xchg
lret
dec
cmpb
imul
mov
cmpsb
scas
push
arpl
mov
xchg
mov
nop
pushf
pop
mov
cld
stc
xchg
mov
add
fbstp
sbb
sub
les
out
rolb
inc
jno
call
push
pop
call
mov
ja
in
push
arpl
xchg
sbb
popf
jge
aam
jb
add
push
std
movsl
lcall
inc
and
je
cmc
outsl
lcall
repz
or
xor
lds
sub
mov
jno
lods
add
pop
push
jp
fsubl
xchg
test
mov
ss
or
mov
add
insb
dec
xor
loopne
push
jne
dec
push
or
push
mov
sahf
out
dec
hlt
fnsave
sbb
push
adc
pop
out
mov
mov
loope
dec
jmp
call
fwait
push
xchg
jne
mov
sub
test
push
mulb
inc
mov
ret
push
ja
or
nop
imul
xchg
cmp
enter
pop
fisubrl
mov
jne
and
mov
lds
lahf
fs
add
inc
add
xchg
or
push
cmp
inc
inc
mov
out
in
mov
fld
jle
mov
cmp
imul
mov
inc
mov
cmp
test
sbb
push
inc
sbb
aam
mov
dec
dec
dec
sbbl
mov
push
pop
inc
insl
jb
mov
clc
xor
push
adc
scas
int3
minps
stc
out
movsb
data16
imull
sarl
inc
xchg
aas
xorb
inc
imul
cmpsl
pop
xchg
inc
addb
stos
and
or
es
mov
inc
je
and
lock
xchg
test
aaa
mov
xchg
dec
mov
rcl
and
adc
jbe
repz
dec
mov
adc
movsb
mov
lahf
ljmp
aas
fldenv
nop
sub
mov
lcall
test
cmp
out
pop
mov
rcrl
ret
outsb
ss
sbb
and
pop
lods
scas
and
pop
std
je
push
cmp
adc
dec
jbe
push
fs
dec
push
sbb
sub
pop
pushf
adc
aad
fnstenv
mov
mov
adcb
into
cmp
or
mov
mov
aad
mov
inc
add
lret
add
add
push
call
out
daa
stos
mov
mov
dec
mov
and
cmpsb
out
fnstsw
pop
scas
inc
hlt
cs
notb
aad
pop
jae
out
popl
and
fwait
add
jns
imul
dec
js
lahf
xchg
stos
sub
mov
dec
outsl
cmpsl
daa
lods
xlat
jmp
push
std
mov
daa
mov
jg
std
insl
mov
ret
clc
sub
pop
xor
xchg
gs
popf
add
sbb
outsb
inc
mov
or
cli
popf
mov
pop
pop
or
out
int3
loop
clc
addl
in
mov
sarb
mov
pop
in
dec
sbb
les
das
dec
out
mov
fldl
dec
adc
js
pop
xchg
pop
fidivs
mov
jl
stc
pop
aaa
jbe
push
and
scas
push
cmp
mov
lret
mov
stc
dec
dec
fisubrs
adc
sbb
add
test
lods
insl
mov
loope
ds
ja
or
ljmp
subb
sub
hlt
int
lret
jns
mov
xchg
fcmove
dec
xchg
sub
fimuls
push
mov
jbe
inc
and
cli
loope
sbb
adc
dec
xor
ret
shlb
jp
into
ja
xchg
fstps
xlat
cmc
mov
mov
lcall
push
gs
push
push
outsb
jnp
aas
xchg
addb
mov
outsb
ss
shll
push
cltd
fwait
sbb
insb
std
out
dec
jp
sbb
out
rclb
push
rorb
jnp
fiadds
sub
xchg
scas
dec
jecxz
into
dec
xor
push
in
cmpsl
adc
mov
inc
xchg
pop
and
out
int3
sbb
cwtl
mov
or
pop
cs
dec
out
gs
loope
mov
xchg
repz
mov
and
arpl
ljmp
sbb
out
and
sahf
jb
xchg
cmp
adc
cmp
loopne
or
mov
dec
pop
pop
jge
jp
mov
inc
bsr
rolb
subb
push
jge
cld
les
std
mov
add
jo
or
mov
xor
cs
push
mov
xchg
add
pusha
in
cld
rcrb
inc
test
ljmp
hlt
lods
cmp
pmulhw
insb
sahf
adc
gs
fildl
add
cld
ljmp
mov
hlt
decl
stc
daa
js
xchg
mov
sbb
repnz
cmp
iret
aam
dec
call
dec
aad
outsb
es
lret
sub
aam
xchg
cmp
push
loopne
jg
xor
rorl
sbb
xlat
mov
in
xor
cld
sub
mov
adc
jo
sti
aaa
xchg
sub
aaa
lds
stos
mov
mov
push
adc
mov
sbb
repz
pop
out
jo
and
sbbl
stos
subb
mov
mov
and
leave
mov
xchg
enter
loop
push
mov
sahf
mov
loop
mov
adc
push
xchg
mov
scas
add
jecxz
cs
clc
mov
je
out
adc
rcrl
xor
rorl
nop
fisttpl
sarb
in
push
nop
icebp
rolb
stos
iret
insl
xor
sahf
push
mov
lea
testl
jbe
mov
mov
aam
mov
mov
jmp
imul
push
stc
lahf
mov
sub
jg
cmp
outsl
cld
mov
pop
mov
or
out
lds
sub
idiv
xchg
dec
insl
gs
jecxz
push
sbbl
stc
repnz
xor
lret
in
shll
sbb
stos
aas
ljmp
divl
xor
rolb
xor
int3
mov
jno
clc
inc
shrl
mov
mov
ret
adc
xchg
outsl
mov
pop
and
aaa
pop
lcall
and
mov
pop
jnp
shll
sbb
xchg
mov
loope
mov
loop
imul
dec
pop
xchg
xchg
shrb
pusha
lods
cmp
add
push
inc
dec
xchg
lea
mov
pop
outsl
dec
dec
add
roll
out
jmp
jns
xlat
jp
mov
aas
lds
jb
cli
xor
xchg
lods
data16
mov
jmp
int3
pushf
jge
shll
xchg
pop
shrb
mov
push
mov
in
roll
pushf
push
xchg
or
mov
xchg
sub
sarb
insb
jns
add
scas
xor
insl
inc
push
lcall
push
inc
or
add
rcl
push
inc
add
adc
icebp
cmp
insb
or
inc
lahf
cmp
test
in
outsb
jns
add
dec
and
sbb
icebp
divl
shrb
ret
lret
in
and
mov
lret
lret
mov
cmp
mov
mov
movb
inc
sub
xor
push
js
lods
pop
xlat
mov
shll
dec
loope
and
ljmp
pop
push
push
cmpsl
loop
mov
fwait
jo
movsb
pop
scas
mov
sbb
gs
into
repz
jmp
sbb
roll
mov
sbb
and
jne
cmp
or
fistpl
clc
sbb
cmpsl
repz
inc
cmp
and
or
xchg
push
outsl
int
jecxz
icebp
jnp
popa
pop
inc
pop
cwtl
add
sub
stos
jno
clc
pop
mov
dec
int
pop
add
add
in
iret
mov
cmp
icebp
int3
push
xor
dec
dec
jmp
xchg
cmp
cs
inc
popl
in
or
ljmp
cmp
and
jecxz
pop
repnz
shrl
mov
scas
lock
int
push
sbb
pusha
and
movsb
or
pushf
scas
xor
mov
lahf
pushf
dec
iret
sahf
jg
ljmp
shl
scas
popf
testb
add
mov
sub
mov
subb
jb
dec
sbb
out
out
std
aaa
fnstsw
jns
pop
cmp
mov
enter
sti
arpl
sahf
sbb
fisttps
mov
pusha
add
cmp
mov
aaa
pop
push
loopne
pop
bound
lahf
inc
ret
mov
sbbb
lahf
in
and
ret
mov
sbb
xor
test
sarb
das
lret
pop
xchg
int3
repz
and
loope
stos
imul
pushf
adc
movsb
fbld
movsl
movsb
out
jo
mov
dec
out
ret
jp
pusha
pusha
sub
dec
cld
data16
daa
xchg
push
mov
call
inc
pop
dec
les
mov
popa
sub
das
pushf
pop
cwtl
fidivrs
cmc
cmc
insb
in
dec
sbb
pop
mov
jmp
mov
xchg
js
data16
mov
and
mov
flds
xor
push
pop
into
xchg
inc
jne
rcl
leave
push
sbb
xchg
and
jmp
jg
jbe
mov
cltd
addr16
ret
jae
xchg
popf
int3
scas
jae
icebp
stc
call
xchg
xlat
fldl
out
rcrl
insb
xchg
pop
or
lock
arpl
in
fs
bound
mov
lahf
aaa
pop
daa
sti
pop
push
cmp
adc
std
sbb
mov
lds
push
test
fmul
xor
mov
pop
cmc
jmp
outsb
aam
js
jle
mov
fmul
pushl
cltd
mov
xor
sbb
and
bound
cmp
je
push
stos
adc
cmpsb
leave
pop
xlat
and
jb
icebp
test
enter
xchg
xchg
fisttps
jmp
push
lret
lock
or
es
and
pop
inc
or
xor
out
push
rorb
cltd
push
lods
xchg
inc
mov
lods
mov
mov
lahf
scas
pop
mov
push
fldl
push
int3
lock
push
les
and
cmp
shlb
push
inc
outsb
sarl
stos
int
push
pusha
icebp
imul
popa
test
aas
fwait
dec
pusha
jns
jns
mov
push
mov
xor
call
cld
sub
pop
push
jg
int3
cmp
or
aad
aam
faddl
add
faddp
fcom
enter
enter
outsb
dec
cmp
dec
inc
pop
and
sub
int
mov
loope
pop
mov
and
rolb
test
push
movsb
repnz
xchg
push
jecxz
adc
aaa
or
sub
push
std
fsts
ljmp
adc
das
movl
out
ss
jo
push
jge
or
mov
push
push
jo
push
in
xorl
ret
pop
mov
jle
push
pushf
and
pop
lret
imul
bound
je
int3
in
sbb
movsl
mov
xchg
and
sub
lahf
mov
add
ds
mov
icebp
and
push
in
pop
cld
outsl
aad
out
fcoms
sbb
or
adc
sub
sbb
mov
int3
fstpt
jle
insl
pop
cli
dec
cmp
mov
and
xchg
mov
or
icebp
add
insb
loope
inc
js
lods
xor
repnz
and
cmc
mov
aaa
aas
iret
mov
xor
notb
test
inc
lcall
ds
ljmp
cmp
lea
or
add
and
shl
pop
mov
xchg
add
rorl
shr
fwait
add
mov
movl
gs
dec
leave
orl
movhps
pop
ds
jecxz
dec
cmp
cmp
and
mov
lret
xor
add
inc
mov
out
sarl
in
cmpsl
jp
mov
push
add
dec
cmc
inc
hlt
xchg
cmc
neg
movsb
push
ret
jb
sub
aam
sub
mov
inc
inc
bound
std
sub
js
sub
jns
iret
mov
dec
fiaddl
cmp
notl
pop
jle
inc
repnz
dec
ret
int
jns
add
mov
mov
aam
lods
mov
inc
xor
add
push
push
inc
pop
add
push
xchg
adc
jno
nop
push
aam
lret
sarb
mov
outsl
push
jg
outsl
clc
andl
sbb
xchg
jb
stc
fsubs
xor
invd
cmp
arpl
mov
mov
je
or
add
into
cli
inc
push
adc
push
inc
lahf
movsb
in
hlt
je
sub
sbbl
jmp
mov
pop
or
lea
cmp
in
imul
fmul
or
sub
add
jl
in
add
pop
call
push
scas
cwtl
or
lret
mov
adc
fldenv
loopne
cmp
xlat
mov
rcll
mov
lcall
dec
out
fwait
loope,pt
addr16
xlat
jo
push
mov
mov
dec
mov
mov
in
pop
xchg
xlat
js
push
sub
xchg
int3
add
movsl
sub
jg
and
shll
arpl
jo
add
in
bound
stos
mov
jo
xchg
mov
and
jp
mov
mov
mov
mov
ss
rclb
jae
jp
push
in
stos
lahf
ret
fsts
outsb
and
sbb
mov
imul
fistl
clc
in
in
xchg
xor
mov
jmp
pop
mov
xchg
jnp
dec
loope
add
sbb
js
or
and
cmp
push
imul
mov
fs
cmp
pusha
xor
inc
movsb
insl
cld
jmp
jbe
scas
mov
fsubs
div
movsb
push
xchg
in
rorl
test
data16
dec
jae
repz
or
idivb
push
fstps
mov
cmp
and
js
add
in
repz
adc
mov
ljmp
cmpsb
pop
cld
rcll
stos
mov
in
fsub
aad
pop
push
and
aas
jge
and
sbb
mov
fidivs
clc
xchg
xor
sub
in
xor
enter
push
xchg
xor
or
imul
daa
into
jg
stos
push
incl
xor
pop
popa
inc
and
cmpl
pop
add
fimuls
daa
je
cmc
pop
cs
int
pop
outsl
adc
shlb
scas
ret
daa
daa
imul
pop
jl
daa
add
movsb
xor
mov
sub
pop
int3
in
pop
mov
cmp
fwait
divb
int3
push
scas
cmp
aam
sbb
or
testb
push
push
iret
mov
subl
test
sub
pop
arpl
nop
nop
push
fstpt
cmp
cmc
pusha
ret
xchg
xchg
fcoml
stos
scas
push
daa
push
or
jmp
out
mov
xchg
addb
push
stos
mov
xchg
adc
push
ficompl
mov
insl
cli
test
popf
mov
addr16
add
shlb
rol
lcall
lret
adc
das
sbb
jge
testl
fs
mov
movsb
test
pop
pop
fsub
loopne
sbb
pusha
mull
and
jno
push
adc
jne
mov
jo
call
cmp
ret
fs
outsl
mov
pop
aam
add
jmp
inc
or
xchg
fstps
mov
inc
les
or
mov
test
das
pop
hlt
sbb
cmpb
mov
adc
xchg
cmpsl
pusha
movb
jae
pop
sbb
test
cwtl
lret
enter
fcomi
arpl
mov
movsl
daa
xchg
outsb
shl
add
stos
push
xchg
pop
andb
jne
jb
cltd
negb
repnz
or
into
jp
mov
frstor
les
mov
scas
pop
jnp
push
negl
mov
sarl
pusha
mov
add
lcall
xchg
cmp
test
pop
fsubl
mov
sub
mov
loope
push
jns
stc
cmp
sar
dec
sbb
aad
sub
xor
out
inc
cltd
xchg
hlt
push
fstl
lea
outsb
test
sbbl
clc
jns
sub
push
popf
jle
decl
mov
add
out
and
fdivrl
mov
adc
shll
cmp
test
into
push
cmp
push
jnp
je
call
ret
push
mov
cmp
pop
push
aas
and
inc
cmpsb
arpl
mov
es
jp
lret
push
cmc
xchg
mov
mov
lock
cmp
sub
xorl
out
ljmp
mov
pop
cli
sbb
aad
movsb
mov
aad
pop
test
jne
test
pop
jae
push
inc
punpcklbw
lcall
ficomps
mov
mov
sbb
orb
push
pop
sub
sub
repz
pop
xchg
push
lret
jae
ficoms
push
sub
add
aaa
call
lods
sbb
push
shlb
adc
xchg
clc
ljmp
inc
adc
imul
jnp
pop
sbb
fisubl
dec
out
mov
mov
mov
filds
lea
test
adcb
dec
and
test
adc
lret
aas
push
lods
sbb
jecxz
js
pop
pop
rclb
fwait
in
pop
pop
push
outsl
mov
sbb
and
jae
mov
xchg
shrl
mov
loop
mov
push
mull
movd
in
inc
subb
int3
add
jge
pop
xlat
pop
icebp
lods
add
insb
std
loopne
sub
sub
movsb
lea
mov
sbb
jb
jle
mov
ret
push
pop
scas
mov
aam
movsl
fldl
in
mov
mov
and
dec
clc
xchg
lea
mov
js
jmp
cmpsl
cmp
inc
stc
inc
xor
dec
pop
xchg
xor
push
adc
outsb
jle
nop
outsl
in
jbe
int
push
xor
xor
sub
mov
or
das
jg
call
push
pop
es
div
fists
pop
jns
cmp
jecxz
xor
lock
xor
mov
mov
mov
frndint
dec
popf
pop
mov
gs
jae
jb
imul
xlat
jmp
es
mov
mov
and
stc
adc
aas
push
and
ret
jo
adc
fcomps
jg
xchg
jle
aam
test
jo
fwait
mov
pop
sbb
inc
loopne
loopne
inc
mov
lret
or
or
bound
scas
adc
clc
pop
and
popa
push
daa
mov
mull
sub
mov
arpl
cli
sahf
xchg
hlt
mov
icebp
and
and
ja
xchg
inc
sbb
sub
pusha
mov
out
add
push
rep
sub
imull
push
idiv
dec
inc
loop
push
inc
cwtl
test
jg
jns
out
dec
cmpsl
lret
push
mov
mov
dec
jg
sub
lahf
cmpsl
pop
add
lea
mov
inc
dec
and
mov
inc
scas
mov
push
in
pop
es
dec
loop
adc
andb
inc
mov
mull
lock
dec
aad
and
cmpsb
add
lret
out
outsl
ds
mov
pop
outsl
xchg
stos
xchg
in
aad
jp
and
jno
test
cmpsl
aas
sbb
and
inc
push
pop
sub
stos
in
sbb
cmp
cs
push
jle
out
cltd
sbb
inc
pop
pop
inc
pop
aam
dec
inc
out
add
pcmpgtd
out
dec
js
or
sub
movswl
jnp
or
mov
sbb
sbb
sbb
fnstcw
sbb
xor
shll
and
xchg
jge
stos
sti
in
jmp
dec
aas
icebp
cmp
daa
int
mov
jle
movsl
sbb
xchg
mov
iret
cwtl
aam
sbb
fadds
lcall
leave
adc
xor
lahf
cmp
xchg
pop
psllw
test
mov
pushf
ds
subb
fwait
clc
pop
jb
xchg
lock
loopne
popf
stos
sub
mov
adc
sub
scas
pop
cmp
jg
imul
mov
mov
insb
jmp
lods
hlt
xchg
out
and
dec
lods
pop
cmp
and
xchg
outsl
in
stos
lcall
cld
lret
stc
rorb
or
faddl
mov
int
mov
test
pop
mov
test
adc
lea
jmp
loop
adc
and
jle
xchg
add
test
pusha
test
fsts
aam
cwtl
push
pusha
sbb
sub
jg
clc
dec
add
jmp
pop
or
or
jae
adc
mov
leave
mov
loope
xlat
repnz
movsb
iret
hlt
push
lea
roll
mull
mov
les
pushf
cmc
scas
mov
call
fcmovb
xor
ljmp
jb
clc
mov
adc
gs
sahf
push
ret
lahf
mov
mov
push
xchg
loop
inc
aad
push
pop
ror
jo
les
push
ja
push
das
push
or
fs
fwait
mov
pop
lock
aaa
adc
dec
mov
test
andb
pop
pop
repz
pop
dec
add
int3
in
jno
out
pop
insb
pop
mov
jge
mov
sahf
addr16
xor
inc
out
dec
shlb
leave
add
push
shrb
xorl
or
xchg
arpl
repnz
fadds
push
insb
push
aam
dec
push
scas
rorl
jne
mov
pop
imul
shll
jmp
lret
cltd
jns
inc
leave
cmc
sbb
mov
or
push
push
ret
std
add
cmpsb
enter
xchg
sbb
jge
nop
pop
aad
out
add
pop
xor
clc
loope
cmpsb
test
movsl
cld
inc
int
mov
lahf
inc
int3
test
mov
imul
mov
jle
mov
push
push
xchg
mov
sti
dec
pop
into
sub
fwait
aas
inc
in
mov
int3
xchg
adc
push
dec
in
popf
mov
adc
push
stos
insl
cli
mov
dec
adc
sbb
adc
xchg
sub
ja
dec
add
mov
push
fiaddl
fldenv
mov
nop
outsb
mov
mov
sbb
inc
xor
mov
mov
xchg
rol
popa
and
xlat
sub
and
sahf
jnp
loope
lcall
push
xor
sbb
mov
sub
cmpl
lahf
stos
jmp
mov
push
es
insl
lods
push
into
or
inc
cmp
pop
pop
cmc
mov
mov
notb
ss
push
push
jnp
dec
cmp
xor
dec
jp
cmp
pop
enter
lock
push
lret
roll
loop
gs
inc
test
jb
jge
out
enter
and
inc
mov
clc
cmpsb
fwait
clc
enter
pusha
cmp
sbbb
xchg
sbb
xchg
daa
jae
pop
sbb
inc
movsb
xchg
je
or
mov
sub
inc
inc
hlt
push
xchg
popl
add
leave
ljmp
sbbb
insl
das
adc
mov
and
fcmovu
shrl
push
sub
call
jno
mov
pushl
lea
pop
adc
pop
jecxz
rcrl
adc
movb
xchg
xchg
jae
jg
cmp
inc
stos
cmc
jle
or
dec
nop
jp
ds
mov
push
out
into
or
stc
inc
mov
lea
inc
cmpb
daa
mov
mov
lods
inc
inc
das
shll
adc
lea
insb
inc
sar
test
sub
test
mov
xlat
pop
inc
adc
mov
mov
jl
sub
aam
cmp
push
adc
lods
push
pop
sub
jns
mov
mov
xor
pop
sub
cmc
nop
cmp
dec
popf
loopne
cmp
leave
call
or
ds
push
mov
mov
pop
pushf
mov
cmp
lods
jbe
mov
insl
push
lret
mov
sbb
mov
xor
dec
mov
int
push
mov
mov
adc
jl
pop
pop
dec
cld
fsts
sbb
arpl
xor
in
xor
sub
jae
xchg
ja
test
inc
lret
hlt
xor
adc
sub
jb
mov
mov
pop
lret
mov
cwtl
cld
adcl
jbe
jp
pop
loope
es
insb
in
jae
add
mov
jl
cmpsb
outsb
mov
mov
sbb
or
fnstenv
inc
inc
imul
negl
sbb
mov
mov
enter
adc
push
nop
sbb
and
push
and
sbb
adcb
and
push
test
mov
push
xchg
pop
cli
mov
adc
cmp
rorl
lds
leave
mov
testl
insb
jbe
test
xlat
scas
and
ss
xor
sbb
daa
mov
push
mov
rcrl
adc
ljmp
xchg
testb
inc
pop
popf
jge
jae
cmp
sar
jge
movsb
cmp
test
cld
add
jmp
int
fs
sbb
adc
lahf
xchg
sub
or
ror
add
jno
xchg
lock
add
insb
inc
jecxz
leave
mov
inc
mov
sub
ret
xchg
hlt
sbb
adc
pusha
and
adc
out
movsb
and
jae
es
rolb
in
or
outsb
nop
insl
gs
in
or
push
and
insb
pop
inc
lock
sbb
sahf
ja
jle
jno
lods
and
push
insb
xor
flds
jo,pn
and
vmovmskpd
sti
inc
imul
push
and
cmp
mov
mov
dec
sub
jge
pop
xor
out
xchg
stos
into
and
subb
lcall
or
jmp
cmp
cmc
inc
cmp
mov
mov
push
ss
filds
aas
sarl
gs
mov
fadd
or
jno
cmp
pop
mov
test
jl
jle
enter
push
jmp
pop
outsb
iret
lea
pop
lods
outsl
push
ljmp
shrb
popa
mov
int
shlb
test
addl
push
enter
push
pop
iret
or
lahf
scas
mov
or
int3
adc
js,pt
mov
leave
popf
mov
cmp
lahf
inc
mov
nop
loope
sbb
loope
das
aaa
mov
cmp
bound
aam
scas
push
sub
add
inc
fcompl
or
jp
stos
cmp
adc
push
and
push
pop
push
jmp
or
adc
bound
lods
mov
int3
clc
call
lds
ss
shl
mov
pop
add
xchg
cltd
out
lret
jle
mov
arpl
fistl
mov
sbb
stc
cmpsl
insl
fisttpl
and
lods
mov
sbb
mov
testb
out
push
jns
cld
push
sahf
loope
sahf
stc
es
inc
xor
pusha
mov
sti
das
fisubrl
xchg
std
mov
pop
push
mov
imul
inc
adc
adc
gs
mov
stos
pop
mov
cmp
jb
dec
push
xchg
test
inc
mov
xor
ss
js
test
adc
enter
jbe
or
jle
jb
pushf
cmp
cltd
mov
cmp
push
pop
sbb
inc
mov
mov
push
insb
jge
jmp
in
popa
rclb
cmp
mov
jbe
loopne
adc
dec
mov
loop
jmp
sub
pop
mov
shrl
push
pop
gs
adc
xor
sarl
pop
sub
add
jmp
dec
in
push
mov
jns
inc
in
adc
mov
js
enter
cltd
xorl
fiadds
fsubs
and
shrb
fs
xchg
ljmp
pop
daa
jo
aas
testb
xchg
ret
mov
mov
dec
cmp
test
lcall
inc
and
xor
or
lods
cmp
dec
leave
lret
lcall
pop
out
popf
jb
sarl
mov
jbe
cltd
mov
fldcw
fsts
mov
sbbl
sub
lss
cwtl
int
inc
cmp
push
and
xor
mov
lahf
sbb
jmp
sub
jl
cmp
xchg
push
push
rol
out
loopne
outsl
rcrb
sahf
or
hlt
pop
lahf
xor
pop
or
push
test
jno
lret
pop
loopne
lock
aas
xorb
cld
je
add
out
mov
xor
sbb
ret
scas
push
jo
pop
popa
das
or
aaa
mov
xor
fsts
pop
insb
adc
out
or
push
jp
cld
in
add
xor
scas
fwait
push
int3
inc
push
add
jecxz
xchg
pop
lcall
pop
push
xor
fbld
pop
sbb
mov
sub
lds
jle
clc
mov
cmp
getsec
aam
cmp
xor
fmull
push
and
mov
aas
push
add
add
jl
jne
push
data16
push
pop
cs
xor
pop
pop
icebp
jmp
sub
mov
mov
lods
fnstcw
push
xor
push
fs
test
pop
mov
push
cmp
bound
push
mov
sbb
out
cwtl
aad
aas
inc
jle
out
push
jmp
insl
pop
jg
sub
aad
dec
js
push
mov
jns
or
aad
imul
jl
popa
inc
xchg
into
push
push
dec
mov
dec
nop
xor
icebp
fisubrl
aaa
cld
bnd
fs
pop
dec
inc
cmpsl
pop
or
mov
ds
out
rcl
cmp
imul
movsb
mov
jle
fdivr
push
in
ret
shll
add
test
test
mov
xchg
mov
push
sti
and
int
push
xor
add
lods
dec
gs
outsb
cmp
dec
jne
outsb
mov
enter
rorl
sbb
cwtl
mov
sbb
popa
dec
pop
mov
dec
cs
cs
sti
int3
mov
cwtl
add
adcl
das
adc
pop
rcrl
inc
pushf
imul
mov
and
pop
loop
lret
cmp
mov
test
dec
in
mov
push
and
test
iret
out
fmull
insb
or
jle
sub
and
addr16
insb
jl
pop
dec
pop
test
popf
mov
add
pop
add
ror
inc
sbbb
mov
mov
xchg
push
sub
ret
jge
push
gs
or
lods
sub
push
addr16
insl
xchg
and
jbe
outsb
mov
imul
add
arpl
call
es
mov
in
movsb
push
or
and
sahf
fs
stos
xlat
insb
icebp
je
repnz
pop
out
add
cmpsl
mov
daa
stc
jnp
sub
cmp
mov
jnp
mov
sub
pop
lds
aad
jge
sub
mov
lcall
push
stos
adc
jnp
xor
sahf
adc
dec
test
sbb
sub
inc
mov
insl
mov
insb
leave
sar
dec
mov
test
pop
add
push
or
enter
in
or
in
push
adc
hlt
push
jecxz
inc
inc
mov
dec
mov
cmpsb
lock
int
xor
mov
adc
dec
arpl
test
mov
popa
xor
nop
sub
lods
add
adc
lock
push
and
or
into
outsl
data16
ror
mov
cmp
sbb
ljmp
scas
dec
jns
xchg
xchg
or
cld
ss
inc
sbb
enter
cmp
mov
cmp
or
insb
xchg
fistpll
mov
mov
dec
add
imul
in
ja
sub
jno
adcb
mov
stc
xchg
push
mov
pusha
lret
mov
inc
and
mov
icebp
jg
push
xlat
popf
hlt
sub
loop
cmp
mov
int
loopne
test
xchg
jg
jne
sub
outsl
sbb
cli
jo
mov
or
xor
push
popf
notb
mov
mov
ret
adc
or
ror
cmp
dec
aad
and
cmc
push
lret
adc
scas
lret
insl
in
es
jb
sti
xchg
dec
jge
mov
movsb
int3
out
pop
clc
rorb
mov
jle
pop
test
cli
cmp
sar
sbb
mov
pushf
sub
clc
cmp
xor
dec
sahf
hlt
pop
sbbl
cld
dec
and
xchg
nop
mov
das
cltd
dec
xor
loopne
call
roll
sbb
inc
adc
xchg
mov
ds
xor
fsubr
cwtl
and
jo
jo
cltd
test
push
push
jle
adc
or
leave
cli
push
xchg
mov
emms
cmp
scas
jae
and
cli
dec
pushf
enter
jp
adc
loop
outsl
int3
outsb
int3
cmp
in
xchg
inc
mov
or
mov
mov
jo
and
inc
lahf
aaa
daa
jle
inc
cmpsb
call
xlat
sbb
aam
inc
sbb
gs
data16
pusha
test
mov
xlat
leave
scas
xchg
scas
push
lods
aad
mov
cwtl
or
inc
out
cmp
sar
in
int
imul
jl
jno
pop
sbb
mov
xor
jns
mov
and
mov
cmpsl
std
push
and
cmp
jmp
and
and
adc
cmp
call
pop
adc
jne
cs
fisttpll
xchg
jns
cltd
cltd
push
and
jmp
cmpsl
stos
push
clc
push
inc
lods
sahf
adc
nop
dec
cwtl
add
jae
pop
std
stc
loope
dec
jns
inc
add
sub
loopne
sbb
loopne
mov
xchg
dec
or
stos
mov
add
lods
dec
inc
addr16
test
out
pop
sub
out
nop
popa
add
cld
and
xor
cmp
cmp
cmc
mov
jns
mov
roll
mov
in
icebp
lret
adc
pop
mov
mov
xchg
and
ss
aam
cltd
outsb
sub
rorb
mov
faddp
mov
cmp
test
jmp
jp
jno
add
xor
lret
movsl
pop
dec
mov
mov
lret
dec
add
cwtl
les
dec
sbb
je
pushf
mov
xchg
sbb
dec
repz
mov
dec
pop
mov
adc
pop
mov
daa
popf
jge
push
mov
push
std
movsb
and
dec
movd
add
aam
mov
jmp
pop
jmp
cmp
nop
out
mov
pop
cmp
or
rolb
or
xlat
pop
cmpl
cmp
test
loope
pusha
insb
sbb
cltd
inc
dec
repnz
add
ss
push
and
fs
xor
cs
sbb
inc
pushf
dec
pushf
loopne
and
xor
ret
rcll
dec
insb
mov
pop
out
shlb
add
sarl
je
xchg
jg
jb
lahf
ds
xchg
pop
adc
push
pop
sbb
jmp
sbb
and
lods
xor
dec
in
push
je
pop
pop
fldlg2
jnp
push
psadbw
imul
jno
enter
scas
or
pop
test
fs
pusha
cmp
daa
nop
push
pop
push
popa
push
fwait
pop
dec
mov
les
mov
ja
leave
add
pushf
stos
or
xchg
les
dec
icebp
cmp
push
shlb
enter
hlt
inc
sub
or
jae
dec
jnp
imul
jne
nop
call
sub
dec
or
fstenv
stc
lret
adc
addl
mov
pushf
xchg
xor
std
mulb
mov
out
imul
data16
fists
push
push
or
xor
xor
test
lods
xchg
sbb
pop
sbb
push
xor
test
pop
adc
outsb
mov
ss
adc
xchg
sti
and
inc
or
fldl
push
sub
out
stos
mov
lods
leave
mov
mov
popf
cmp
mov
fdivs
xor
movsb
int3
cmp
or
sub
cmp
mov
xchg
pushf
inc
fwait
xchg
add
pop
out
enter
pusha
dec
xor
cmpsb
frstor
repnz
and
mull
stos
ljmp
jbe
mov
enter
mov
ljmp
fdivl
outsl
inc
insl
into
jg
add
pop
pop
mov
cmpsl
or
jg
mov
xchg
add
inc
jecxz
jl
in
cmp
aad
adc
test
push
adc
ljmp
mov
shrb
mov
xchg
dec
frstpm(287
lea
fildl
cwtl
cltd
mov
pop
test
sahf
pop
inc
pop
push
sti
lock
mov
shlb
clc
push
andl
into
push
rolb
in
push
pop
sub
or
cwtl
inc
les
jecxz
inc
ret
not
in
ret
das
mov
insb
cmpl
roll
jmp
movl
insb
fdivp
xlat
mov
movsb
add
xor
daa
jmp
movsb
repz
roll
loopne
fnstenv
mov
push
xor
negb
stos
adc
movsl
ljmp
fs
jmp
push
rolb
push
jns
insl
xchg
jmp
lahf
jne
or
pop
inc
test
or
les
inc
mov
lret
ret
mov
mov
in
jno
add
add
pop
sub
xorb
rcll
and
int3
rcrl
mov
inc
push
inc
dec
data16
in
out
cmp
rol
pop
dec
xchg
or
and
xchg
mov
sub
mov
shlb
xchg
daa
lahf
push
xor
rcr
xchg
in
lcall
or
in
or
jb
stos
data16
push
ja
sbb
xor
ljmp
loopne
scas
adc
jge
push
xchg
out
pop
jge
loope
push
jns
dec
xlat
or
es
lock
pushf
popf
add
cmp
mov
xorb
or
std
mov
movsl
dec
aas
add
or
cli
xchg
ds
popa
xor
sbb
jecxz
iret
arpl
jge
movsbl
jbe
fstl
stc
enter
mov
int
add
ds
aad
pop
lds
sbb
mov
add
push
das
add
imul
pop
stc
inc
add
in
jmp
cmovne
rolb
addr16
ret
push
push
and
jecxz
fnstcw
jo
mov
push
ret
sti
lods
push
loopne
jns
xchg
imull
imul
mov
ds
inc
inc
and
adc
shr
dec
loope
fs
inc
ljmp
aam
mov
xlat
movsb
je
test
ja
mov
sub
push
dec
mov
or
pop
add
in
insl
sbb
inc
sub
dec
int3
jne
hlt
inc
je
jno
popf
test
fsts
fdiv
loop
loope
ljmp
inc
mov
jl
dec
je
js
faddl
popa
sahf
pop
jp
cwtl
push
int
lcall
cmp
push
enter
push
adc
adc
arpl
pop
fimuls
xchg
and
clc
inc
enter
adc
test
inc
pop
negl
or
outsl
cmp
xor
cmpb
scas
das
call
lret
out
sbbb
mov
enter
add
je
inc
fs
in
xor
cmp
into
aad
das
push
jno
test
lret
mov
xchg
insl
data16
or
jecxz
rcr
loope
adc
cmp
icebp
ficoml
jg
sarb
repz
xchg
or
mov
xchg
daa
dec
push
addr16
mov
lock
bound
les
inc
jb
push
mov
pop
rorb
mov
pushf
xchg
jae
pop
adc
daa
jae
xchg
sti
and
pop
jge
xchg
in
fists
xchg
add
sbbl
icebp
outsl
jbe
dec
pop
ljmp
push
gs
dec
mov
les
stc
and
or
or
jb
xor
in
lock
hlt
outsl
pop
insl
insl
faddp
sbb
pop
aaa
leave
or
push
add
cwtl
test
fsubp
lcall
insb
mov
jp
mov
mov
das
out
mov
into
xor
sbb
popf
or
std
fcomps
sbb
pop
mov
daa
fsts
mov
push
ja
ss
stos
push
inc
jg
push
mov
push
loopne
xor
cltd
loope
stos
pop
movsb
cmovnp
wrmsr
lds
mov
imul
xor
mov
clc
roll
mov
scas
pop
cli
aas
and
test
inc
ss
xor
sbb
mov
mov
mov
or
jg
jmp
jno
aas
xor
inc
xchg
push
out
in
scas
out
push
out
insl
rorl
sub
xor
mov
mov
ljmp
push
icebp
mov
mov
shlb
fbstp
sub
mov
or
movsl
mov
clc
inc
jnp
sbb
pop
mov
loop
arpl
push
neg
fldl
jae
xor
int
cmc
insb
and
jle
push
sbb
jle
and
or
inc
xor
clc
adc
aaa
mov
mov
and
gs
jnp
add
sbb
fsub
outsl
mov
ficomps
xchg
aad
sub
inc
lods
xor
or
into
int
in
stos
aad
call
fidivs
and
imul
repnz
sbb
inc
sbb
mov
lea
pop
cli
xor
pop
je
dec
sub
sti
sub
imul
dec
stos
add
adc
push
push
in
ds
out
test
or
add
fcmovu
aaa
lahf
jo
jge
jle
sbb
jle
in
mov
dec
xchg
xchg
test
std
leave
push
mov
mov
xchg
out
add
fucomp
out
adc
jbe
cltd
sarb
jg
mov
xor
or
push
outsl
lret
loopne
std
fldcw
outsb
cwtl
popf
stos
sti
push
jno
adc
xchg
ficoms
jo
mov
jne
or
xlat
push
push
fildl
xchg
jecxz
loope
jle
inc
lret
inc
div
adcb
in
dec
in
add
scas
jmp
mov
fsubrs
jno
stos
shlb
cs
push
mov
stos
or
mov
mov
testb
xchg
stos
sbb
ja
js
and
adc
lret
pop
repz
dec
fmul
mov
sbb
addr16
mov
cmc
mov
aad
aad
mov
pop
arpl
mov
inc
orl
adc
movsl
stos
adc
mov
lret
pusha
fisttpl
subl
enter
lods
leave
sub
jb
ljmp
adc
fwait
adc
mov
mov
loope
cmpsb
in
rcr
push
cmp
lahf
xor
lahf
shll
inc
out
outsb
fldenv
dec
sbb
add
jb
lods
add
loope
ret
jl
cld
add
mov
cmp
sarb
xchg
mov
jne
mov
dec
mov
cmp
xor
mov
pushf
inc
xor
sbb
out
mov
jb
jbe
idiv
and
dec
pop
lods
rcll
mov
lret
add
cmp
sbb
pop
mov
push
xor
pop
mov
sbb
imul
push
pop
inc
mulb
and
lea
enter
mov
mov
in
gs
jg
in
adc
rolb
mov
int3
push
inc
pushf
pop
push
adc
nop
dec
dec
sbb
pop
push
mov
inc
mov
rcll
stos
mov
lret
xchg
int3
mov
nop
cmp
sbb
imul
cmp
scas
arpl
and
mov
mov
inc
jg
mov
test
rorb
sti
ljmp
outsl
cld
mov
pop
idiv
inc
xor
repnz
xor
mulb
and
into
mov
xor
std
stc
pushf
sbb
inc
or
repz
shlb
int3
loopne
outsl
mov
inc
out
or
inc
dec
arpl
jae
cmp
int3
data16
dec
dec
addl
inc
shl
mov
out
aad
sti
pop
add
mov
dec
insb
add
and
adc
dec
jecxz
std
pop
sub
sub
mov
mov
stc
ret
mov
out
cmp
scas
andl
jg
jb
lcall
fsubrs
bound
mov
test
mov
sub
mov
roll
gs
adc
les
aas
jnp
push
or
std
cli
out
dec
sbb
imul
lock
sbb
addr16
mov
mov
stos
and
in
sahf
jle
addr16
aam
cli
ror
cwtl
mov
cmc
mov
scas
adc
pop
imul
test
call
addb
in
mov
mov
cmp
pop
sti
or
xchg
mov
sbb
lods
cwtl
mov
leave
sub
mov
in
inc
test
ljmp
rcrb
add
xchg
pusha
rorl
add
bound
subl
push
sti
test
push
inc
or
push
jns
mov
stc
das
andb
shrl
xor
lods
and
je
insb
or
or
ret
xchg
fs
and
push
lds
xor
repnz
push
fcmove
jns
push
out
jmp
cmpb
insb
outsl
or
and
ficoms
mov
jns
mov
mov
movsl
fldl
loopne
dec
pop
lea
sub
mov
fists
shr
outsl
mov
leave
inc
nop
aad
fwait
xor
hlt
in
je
jp
out
fdivrs
ss
lcall
sbb
adc
cmpsl
movsb
push
add
or
mov
test
push
lock
inc
pop
mov
rcl
adc
das
inc
rorb
es
sahf
xchg
or
lods
pop
outsl
out
jmp
popf
mov
mov
movsb
inc
imul
fstl
and
fwait
imul
jnp
out
xchg
jl
ror
xchg
push
inc
dec
jp
push
lods
and
push
mov
push
inc
scas
dec
mov
fimuls
insb
iret
mov
rorl
push
fcoml
xchg
andl
movsb
in
inc
cwtl
in
xchg
push
xor
out
test
pop
or
mov
mov
shl
xorl
and
repz
jne
das
sti
out
lcall
push
mov
push
and
add
jge
int
clc
in
sarl
jo
inc
xor
and
js
sub
jmp
in
in
imul
pop
scas
xor
mov
adc
sub
dec
jg
or
push
cmp
test
jae
mov
jmp
mov
inc
lock
inc
aaa
inc
pop
jg
ja
ss
int
stc
or
lret
test
pop
mov
and
xor
shll
test
popa
adc
popf
cltd
jns
and
mov
lods
xor
sub
insl
mov
mov
nop
push
inc
sbb
xchg
mov
xor
jmp
jbe
mov
mov
cmp
pop
or
inc
into
test
or
jg
ret
mov
int3
xchg
cltd
rorb
daa
jnp
xchg
lods
mov
cmp
scas
popf
or
repz
bound
add
shlb
add
or
scas
sahf
inc
mov
jmp
push
sub
outsb
clc
das
sbb
jge
mov
inc
and
pop
xchg
jge
jbe
push
mov
loop
adc
xchg
shl
testb
hlt
mov
stc
push
scas
mov
xor
mov
add
enter
add
loopne
xor
in
out
add
dec
or
push
sbb
clc
sbb
imul
mov
int
dec
xorl
add
push
jle
rcrl
lret
jle
inc
test
adc
dec
cmc
out
jmp
sarb
mov
mov
xor
jp
divl
inc
test
loopne
sahf
mov
cli
mov
stos
mov
push
loope
divb
and
inc
rorb
inc
icebp
stos
je
and
lods
cmpb
ret
and
in
sub
mov
jno
xchg
inc
pop
xchg
jae
pop
add
ja
mov
es
xchg
inc
mov
mov
push
mov
js
adc
mov
stos
iret
fcomps
addr16
sub
popf
dec
test
mov
ss
adc
in
loope
pop
xlat
pop
and
testb
push
inc
aam
outsl
pop
lock
movsl
fwait
xchg
push
xchg
dec
pushf
add
mov
dec
loopne
cs
fldl
insl
mov
adc
adc
and
inc
jno
sbb
add
mov
in
inc
xor
nop
decb
test
dec
arpl
cmp
insl
imul
ja
les
mov
fidivrs
test
daa
scas
call
mov
mov
in
xchg
pushf
not
hlt
repnz
rep
and
mov
popf
js
sahf
faddp
or
jecxz
mov
mov
js
imul
stc
mov
movsb
jmp
lds
jb
jl
in
pushf
in
insl
mov
push
lds
jg
idivb
inc
cltd
mov
dec
dec
movsl
shrl
orl
and
scas
mov
dec
cli
sarl
lds
inc
scas
test
cmpl
sub
sti
stos
pshufw
aam
add
xchg
ja
insb
jbe
in
cld
mov
bnd
out
adc
sub
jo
les
sub
fimuls
out
cmp
jle
fiadds
cmp
lods
mov
mov
inc
repz
dec
mov
and
pop
jbe
push
cltd
scas
popf
push
clc
bound
push
push
std
adc
cmp
cli
dec
xor
fdivl
inc
xchg
lods
jp
jmp
fwait
int
add
push
mov
int3
dec
mov
xor
and
loop
sarb
push
scas
loop
dec
push
es
xor
sbb
dec
push
lea
stos
loope
insl
clc
sub
xchg
stos
mov
sbb
xchg
mov
mov
aam
fidivs
imul
or
or
jbe
xchg
or
fcoms
xor
lret
mov
iret
pop
outsb
sbb
rcrl
jg
cmp
movsl
mov
add
fisttpl
inc
mov
bound
and
ror
jmp
dec
jecxz
pop
or
test
test
jecxz
jle
adc
popa
mov
adc
adc
and
mov
iret
mov
imul
cld
xchg
out
xchg
pusha
xor
push
icebp
stc
dec
cmp
shrb
xchg
add
dec
scas
iret
mov
and
dec
shl
enter
xlat
call
inc
daa
lods
cmp
dec
xor
and
cmp
test
dec
xchg
outsb
leave
adc
repz
pop
clc
rorb
int
push
sub
ret
arpl
xchg
loop
pushf
xor
outsb
adc
stos
lcall
out
mov
mov
fwait
xorl
dec
scas
lcall
push
cld
mov
cmp
xchg
daa
adc
mov
std
test
lds
outsb
add
mov
mov
iret
inc
cmp
cmp
mov
pcmpeqd
iret
mov
ljmp
add
pushf
stc
mov
cwtl
mov
or
sbb
out
adc
enter
cmp
icebp
sbb
mov
clc
inc
test
or
insb
and
dec
mov
pop
pop
lret
cmp
in
pop
cli
and
xor
jecxz
aaa
sub
fwait
out
fs
push
mov
add
bound
leave
inc
je
adc
filds
shll
xsha1
cmpsb
int
inc
stos
or
push
mov
loop
shll
add
jle
inc
lahf
aad
push
jae
cmp
add
mov
hlt
shlb
xor
xor
sbbl
movsb
jmp
fs
das
imul
popf
arpl
sahf
push
stos
incb
jae
jns
or
dec
call
aaa
mov
jg
and
int3
xor
jb
outsl
adc
jbe
sti
pop
es
out
bound
das
and
cld
pop
push
lahf
fisttpll
mov
fimull
xchg
std
and
shrb
pop
push
push
and
jmp
and
jb
push
inc
call
xchg
ret
fwait
pop
lods
sub
inc
fsubrp
xor
jne
ret
repnz
fdivp
push
cmpsl
push
jns
rcrb
fs
pop
jo
test
fisubrl
sbb
leave
rolb
push
stos
es
movl
out
pop
pop
dec
lcall
in
sti
and
add
pushf
aad
xchg
pop
cmpsl
mov
and
cmp
imulb
shlb
sub
xlat
inc
aad
push
das
mov
clc
sub
aaa
mov
mov
aad
mov
mov
push
cli
dec
and
dec
add
fstps
hlt
inc
lock
push
loopne
js
in
mov
and
push
fstpt
cmp
mov
roll
in
mov
dec
xchg
ljmp
fdivrs
sarb
clc
inc
xchg
dec
sbb
xor
adc
movsb
insl
daa
jns
sbb
fs
add
mov
das
xorb
jecxz
mov
or
jecxz
ljmp
jb
jno
jp
clc
sub
and
mov
and
pusha
mov
iret
cmp
pop
out
push
rorl
cmp
lea
fdivrl
pop
cmp
mov
mov
clc
mov
jne
jl
dec
shl
stc
pop
jge
adc
or
rcrb
adc
mov
jecxz
out
push
inc
push
and
and
imulb
dec
lock
imul
insl
in
sahf
out
sbb
sub
add
and
out
aad
ret
dec
icebp
pop
insb
shrb
int3
incl
stos
sbbl
adc
jbe
pusha
push
mov
jecxz
push
or
xor
lock
add
loop
push
adc
gs
mov
popf
lods
cmp
gs
ds
lea
shll
dec
lea
pop
mov
scas
add
push
cli
aaa
lret
pop
jge
fisttps
shr
fwait
jo
cli
icebp
lahf
out
pop
shrb
add
outsl
cltd
push
sbb
js
mov
or
ficompl
mov
fildl
cmc
xchg
lods
push
cmp
mov
mov
jo
lcall
inc
fldcw
add
faddp
cmp
rol
and
test
dec
xchg
loopne
icebp
jnp
nop
or
test
dec
dec
fcompl
jle
rcll
cmp
or
ficoml
clc
or
jp
mov
xlat
mov
mull
push
data16
stos
lock
xor
inc
inc
ljmp
clc
pop
mov
xchg
imul
push
ret
std
les
xchg
mov
mov
inc
inc
insb
cmp
movsl
ds
ret
pop
sub
in
je
jb
inc
pop
cld
and
mov
inc
icebp
inc
mov
jmp
out
loopne
push
pop
pusha
adc
outsb
repnz
stos
sub
pop
lfs
ss
jle
arpl
adc
dec
mov
je
jbe
dec
sbb
mov
lahf
pop
cs
lea
push
lcall
aaa
test
push
xor
xchg
aaa
or
in
jbe
cmp
cmpsl
clc
xor
or
or
bswap
in
mov
or
fsubp
mov
push
ljmp
mov
and
pop
fucomp
stc
xchg
xorb
fcoms
cmpsb
aam
ret
inc
or
xchg
movsb
and
out
mov
jno
xchg
sub
inc
jns
sub
rorl
push
sub
pop
dec
ret
jb
aas
outsb
pop
call
mov
or
cmp
jo
in
jns
mov
fnstenv
xchg
dec
ret
das
sarl
std
and
cs
and
gs
dec
enter
fsubrs
sbb
gs
sbb
movsb
int3
or
push
imul
sarl
jo
push
ja
jmp
add
xor
and
arpl
fnstcw
mov
xchg
into
dec
jbe
stc
popf
rorb
inc
add
ja
scas
push
push
enter
xor
addl
or
push
cld
xchg
and
cmp
xor
adc
jl
jae
repnz
loop
roll
xorb
cmpsl
cmpb
lcall
hlt
scas
jno
cwtl
xor
adc
inc
add
cmpsb
mov
mov
push
mov
decl
cmpsl
mov
or
lret
push
dec
mov
fidivrs
sbb
pop
pop
push
mov
push
adc
pop
push
clc
or
dec
ret
mov
xorb
push
lret
mov
pop
or
lock
xchg
rorb
jo
nop
add
adc
adc
ret
je
ret
cmp
dec
scas
sar
insb
inc
cmpsl
cltd
scas
pop
xor
xchg
nop
mov
or
mov
ret
xchg
adc
testb
pop
repz
sbb
cmpb
ljmp
loop
dec
cmpsl
adc
shl
xor
gs
pop
xchg
xacquire
jne
loop
ja
ret
mov
lock
sbb
sbb
lds
pushf
push
test
je
xchg
sub
cmc
jmp
mov
inc
xchg
gs
fwait
insb
popaw
jno
or
mov
push
mov
mov
aas
icebp
faddp
inc
jns
fcompl
cli
js
jae
or
xor
sbb
lea
xchg
inc
lock
mov
xor
cld
jne
test
pushf
push
pop
aam
lret
mov
pop
jl
sahf
in
mov
mov
jg
and
dec
call
jnp
or
jg
and
shrl
pop
pusha
cmp
add
xchg
cltd
sbb
pop
gs
adc
int3
in
add
mov
into
push
shrl
movsb
mov
xor
pop
jno
fld
data16
mov
cmpsl
sbb
push
out
arpl
cmpsl
add
mov
jmp
outsb
lcall
dec
push
push
xor
sub
shll
mov
adc
pop
sub
lods
movsb
mov
mov
mov
xorl
cli
adc
sbb
pop
push
sub
icebp
and
in
or
outsb
inc
call
sub
and
cmp
or
arpl
stos
mov
cmp
in
lcall
and
adc
xor
ss
sarl
sub
leave
xor
mov
xor
out
jne
addr16
xor
xor
popa
insb
push
repnz
sub
mov
pop
dec
sbbl
jmp
inc
jl
dec
sub
cwtl
insl
mov
das
push
stos
inc
ret
push
les
lock
fcmovnu
add
int
add
lret
loope
xor
fsubrp
loope
fsubrl
lds
loope
mov
pushf
subb
inc
fdivrs
cmp
push
data16
xor
lea
sbb
lahf
int3
test
pop
sbb
dec
repz
insb
stos
adc
test
inc
mov
sub
repnz
ja
mov
sar
or
scas
xlat
cmp
cli
aam
daa
push
inc
stc
jmp
roll
mov
sub
xor
fcoml
cmp
adc
mov
and
mov
outsl
mov
int
imul
daa
jb
dec
iret
push
adc
mov
pop
insl
cmpsb
or
das
dec
and
ficoml
sub
pop
je
movsl
dec
push
cmpsb
into
jbe
push
mov
movsl
int3
mov
movsl
aad
jns
inc
xchg
ja
dec
aas
push
lcall
insl
sub
clc
inc
leave
dec
cmp
out
imul
jbe
call
and
mov
xchg
stos
mov
incl
jle
push
xchg
shlb
mov
xchg
insb
add
imul
inc
pop
and
lds
mov
add
add
xchg
movsl
fiaddl
lahf
shld
addr16
addr16
test
push
push
insl
out
lea
adc
arpl
or
data16
les
adc
jl
in
jne
les
test
fidivrs
or
add
push
cltd
pop
sbb
pop
fbld
jnp
push
inc
pop
adcb
add
pop
fldt
mov
bound
add
cmpb
and
mov
call
popl
mov
inc
shl
loope
pop
mov
pop
lea
loope
aad
leave
test
add
mov
sub
inc
jbe
imul
xchg
cmp
mov
and
inc
outsl
and
cmp
imul
pop
sub
shrl
jecxz
shll
aas
nop
call
fidivrs
dec
mov
sbbb
jns
lods
pop
add
xor
push
dec
dec
js
fstl
mov
mov
aas
shl
mov
fsubs
sub
xchg
sub
aas
dec
sub
sahf
mov
adc
hlt
sti
xchg
enter
xor
test
js
sbb
lods
aam
mov
negl
pop
fcompp
out
inc
dec
cmpsb
sbb
mov
data16
add
pop
mov
jp
sbb
and
mov
ss
lcall
sahf
fsts
hlt
lods
and
sbb
and
pop
iret
out
ss
mov
out
mov
pop
mov
pop
add
ret
adc
popf
mov
insb
imul
call
fdivrs
cli
adc
pop
repnz
cmp
fwait
xor
rcrb
loope
pushf
or
fcoms
add
push
imul
popf
aas
mov
dec
jg
int3
xchg
or
jp
jnp
scas
sub
and
cmp
xchg
fisubrl
test
test
pop
jg
or
in
sub
mov
cmpsb
sarl
fbld
fdivr
std
mov
inc
mov
cmp
jmp
mov
cmp
inc
add
fldenv
sarl
js
int3
addr16
inc
negl
cmp
ljmp
pop
fmull
enter
add
repnz
fnstsw
into
bnd
gs
lods
pop
push
inc
jb
stos
gs
dec
jecxz
rolb
xor
sbb
testl
cmp
push
pop
add
stos
ja
jne
out
inc
inc
out
es
sbb
lods
jo
mov
dec
inc
jp
sbb
or
mov
mov
out
adc
push
lret
mov
imul
pop
in
enter
mov
or
adc
push
fwait
jns
xor
sahf
mov
movsl
jno
fs
cmpsl
push
stc
mov
jmp
add
cmp
pushf
frstor
out
out
adc
jb
js
dec
push
adc
jl
adc
sbb
jo
ret
push
pop
repnz
inc
xor
mov
cltd
inc
mov
push
incl
cmpsl
out
loope
pop
xchg
inc
lea
int3
adc
push
shrl
sub
and
push
clc
in
repnz
iret
daa
mov
fsubrl
xchg
sti
imul
dec
cmp
cltd
sub
jo
std
sub
out
idivb
and
cmpsl
scas
push
sbb
jns
mov
xchg
movsb
xor
aam
imul
jge
enter
bound
add
clc
in
fnsave
lds
aas
ret
std
enter
addl
and
fs
sbb
pop
fnstsw
adc
jmp
cmc
inc
sub
sidtl
mov
aaa
dec
lea
xchg
push
xchg
push
loope
mov
push
inc
dec
push
stc
push
iret
push
fstpl
fbld
pop
push
dec
lods
popw
rcll
or
and
jmp
lds
mov
push
xor
insb
mov
jbe
xchg
std
jnp
sub
lcall
add
mov
repz
xchg
std
jmp
xor
sbb
imul
out
fs
stos
scas
or
insb
loopne
push
into
repz
jmp
repz
imul
out
mov
movsl
jmp
aam
imul
adc
sub
test
shrb
sub
mov
mov
dec
icebp
stos
stos
gs
or
or
add
out
nop
cmp
push
add
push
out
or
xchg
ftst
mov
cmp
push
fstpt
push
fdivr
imul
xor
push
call
dec
mov
adc
cmp
jo
ja
es
lock
ss
cmp
inc
xorb
xchg
push
scas
loope
mov
inc
xchg
test
je
pop
pop
mov
repnz
dec
cld
cmp
mov
shrb
pop
mov
and
mov
fisubrs
cs
push
pop
aaa
dec
jmp
push
dec
sub
lods
rcrw
shrb
icebp
stos
test
and
out
xchg
in
or
push
fisttps
sahf
sbb
push
dec
push
fldt
mov
cmp
add
cmp
dec
jg
ja
das
pop
add
lea
test
sbb
adc
mov
dec
out
hlt
hlt
xor
cs
aad
mov
mov
dec
sub
mov
push
xchg
test
mov
jno
cmp
iret
sub
notl
ror
out
jb
adc
cmp
lret
and
sub
or
jno
cmp
or
lods
lds
mov
scas
test
pop
fdivrl
cmc
add
mov
test
leave
clc
les
enter
lea
addr16
popa
add
jge
push
dec
rcrl
or
negl
mov
clc
mov
jl
loopne
scas
push
adc
pop
push
stos
sahf
out
test
cs
mov
add
dec
out
mov
ret
sub
rorb
jmp
sub
xor
cmp
dec
sti
out
fcomps
imull
mov
or
mov
jns
push
jmp
xchg
cs
pop
ljmp
jle
push
cmp
out
lret
push
push
aam
rorb
mov
xor
mov
mov
cmp
nop
cmp
mov
int3
add
fists
lcall
push
outsb
jge
jg
xchg
pop
int3
jge
in
xor
xchg
insb
iret
mov
jae
mov
push
dec
sti
aam
mov
pop
loop
xchg
adc
cmc
out
in
dec
in
clc
and
cmc
scas
aas
pop
std
jmp
in
xor
mov
xor
push
loop
sti
pop
cmc
inc
das
mov
inc
sarl
rol
jg
and
testl
test
mov
mov
aaa
xchg
sbb
cmp
cmp
lret
xchg
mov
add
mov
cltd
test
and
nop
jne
call
je
add
outsl
cltd
bnd
in
mov
pop
push
sahf
fdivrl
xchg
ret
lea
incb
stos
repnz
test
movsb
lcall
jno
mov
aam
mov
mov
mov
out
mov
orb
sbb
scas
adc
adc
iret
and
add
hlt
pop
ret
and
jp
aad
jns
mov
jle
mov
roll
sbb
into
ds
xchg
ret
icebp
mov
inc
push
jl
aas
cmp
sbb
mov
ret
xchg
repnz
cmp
adc
jno
fstpt
mov
xor
xchg
pop
jns
negb
adc
leave
ret
dec
loop
aas
jl
popa
jns
sbb
cli
and
rolb
fiadds
data16
ljmp
out
das
lods
lahf
lcall
ja
jg
xchg
out
jg
or
sbbb
hlt
jnp
and
mov
in
lcall
mov
movsl
xor
inc
addl
dec
mov
ss
bound
adc
xor
sub
xor
js
addr16
inc
sub
lret
pop
push
dec
arpl
popa
test
lahf
stos
fsts
sahf
pop
popf
sahf
adcl
inc
mov
inc
mov
lret
pop
jle
mov
add
add
mov
lea
stos
in
aad
add
icebp
mov
push
or
loop
aam
and
jne
mov
xchg
test
int3
sbb
and
js
out
pop
xchg
cld
mov
mov
cmp
clc
fs
dec
loope
cmpsb
sub
icebp
add
rol
repz
das
xchg
fisttpl
fucomp
addr16
icebp
shll
daa
xchg
sbb
pop
aas
imul
stos
inc
cltd
jg
dec
xchg
cld
dec
and
lcall
lods
loope
push
xchg
dec
mov
mov
add
ror
push
or
cld
xchg
lods
test
cmp
sbb
sub
mov
aam
push
xlat
dec
mov
jne
push
out
mov
dec
imul
aaa
int3
aaa
lcall
jno
jle
fistpll
movsl
mov
mov
cmova
std
mov
dec
push
push
les
mov
and
in
enter
loope
fsubr
xchg
pop
in
sbb
xchg
xor
test
adc
ja
bound
dec
out
sarl
subb
in
pop
sbb
aam
xchg
addl
lahf
pop
orb
inc
push
adc
iret
adc
xchg
jmp
jns
loopne
dec
jecxz
fldcw
mov
lret
movsl
cmp
sbb
dec
push
sbb
scas
leave
and
orb
movsl
xchg
push
mov
mov
mov
xchg
pushf
loopne
aas
nop
and
hlt
xor
mov
cmpsb
inc
mov
mov
mov
cmp
jb
push
pusha
jle
pop
mov
enter
cmpsl
inc
cwtl
andb
pop
in
scas
jmp
fwait
xor
popf
dec
loop
iret
popf
dec
imul
mov
add
mov
out
or
mov
je
ja
out
aad
fcmovb
lahf
and
push
aaa
adc
fs
shrb
mov
dec
fists
dec
xchg
jp
stos
cli
xchg
push
adc
mov
push
mov
mov
cli
outsl
jo
sub
loop
iret
pop
stc
aaa
cs
mov
test
mov
mov
and
sbb
mov
xchg
mov
pop
pop
sub
pop
rcr
ret
inc
sub
adc
insl
push
lea
in
fdivl
pop
push
or
fistpll
fisubl
sbb
lods
popl
cmp
pop
shrb
xchg
xchg
cli
jmp
push
pop
xchg
push
fnstcw
sti
fwait
push
jl
pop
leave
jl
in
or
sbb
add
dec
cwtl
adcb
or
mov
icebp
jg
push
and
insl
inc
pop
or
jp
cld
xchg
sub
fisubrs
cmpb
notb
mov
xor
scas
and
add
xor
dec
orb
pop
test
push
dec
stos
arpl
add
add
pop
ljmp
in
sub
jb
sbb
pop
ss
push
lea
inc
daa
sahf
xchg
inc
mov
push
mov
pop
es
inc
or
lds
in
fists
cwtl
adc
int
inc
icebp
leave
stos
das
or
and
lods
out
int
adc
jle
cmpsl
or
das
mov
lods
fcoms
insb
daa
xor
fwait
sbb
arpl
sbb
iret
clc
lods
lods
dec
lock
arpl
xchg
lahf
mov
nop
arpl
mov
xlat
pushf
hlt
pushf
sahf
xchg
pop
xchg
pusha
sub
cltd
inc
ror
sbb
mov
retw
popf
xor
jmp
sbb
mov
and
mov
enter
xorl
loop
push
gs
sub
xchg
mov
mov
xchg
mov
and
mov
pop
push
xchg
xor
cmpb
jg
push
lock
int
pop
xor
cs
jbe
or
addr16
popa
xchg
sbb
or
fsubl
subb
push
or
popf
enter
xchg
mov
ret
sub
add
les
and
mov
faddl
mov
in
js
nop
xchg
lds
xchg
inc
dec
mov
cmp
push
rorl
dec
jb
mov
inc
out
push
or
in
bnd
xor
popa
outsb
jmp
or
push
es
mov
and
inc
inc
mov
adc
jmp
xor
cmpsb
cmp
sahf
dec
fwait
lret
rol
mov
pop
test
pop
clc
sub
insl
pop
push
loopne
test
iret
push
adc
repnz
sbb
xor
dec
adc
xchg
inc
loopne
movsl
xchg
lret
shll
push
insb
mov
jg
jmp
fsubrp
test
popw
out
pusha
adc
lock
sub
cmp
jb
icebp
cmp
cld
dec
inc
jge
pop
adcb
or
loope
mov
push
sbb
lahf
add
pop
push
rclb
push
pop
bound
shr
fs
cmp
pop
sti
push
cmp
cld
mov
mov
dec
or
push
lock
cmp
cmp
movsb
aam
jne
gs
mov
stc
cmpl
mov
sahf
mov
add
dec
pushl
sbb
adc
inc
lods
jae
cmp
pop
aam
jbe
push
movsb
pop
test
adc
test
push
push
popa
cmp
inc
and
pushf
mov
adc
mov
scas
leave
imul
cmp
jp
loope
fstpl
test
xchg
push
sahf
or
push
xchg
shr
fsubrs
pop
xchg
das
or
stos
pop
lds
xor
mov
int3
shll
jg
sbb
cmp
sarb
sbbl
loop
leave
fiadds
sti
fnstenv
adc
lods
imul
or
shrb
push
scas
ss
call
mov
xor
pop
add
mov
inc
jo
pop
cmpsb
cli
xor
scas
mov
cmpsl
test
cwtl
inc
xlat
mov
sbb
sarb
jg
idivl
pop
xor
inc
xchg
sbb
rorb
sbb
xchg
inc
or
gs
push
pop
stos
pop
popf
pop
dec
out
pop
pop
sti
movsl
add
cmc
jl
negl
stos
imul
push
in
inc
cltd
cmp
push
cmpsb
pusha
outsb
es
pop
sub
lds
insl
addr16
dec
jp
aad
push
sahf
push
pop
call
dec
stc
lahf
gs
inc
inc
mov
sub
mov
mov
dec
inc
jb
daa
sub
jo
ret
in
lret
les
in
sahf
shll
mov
aas
enter
or
repnz
cmp
test
out
lock
and
lods
cmp
push
pop
pushf
jge
adc
or
xchg
mov
or
pop
adc
lea
pop
loope
leave
into
stos
int3
test
pop
pop
or
in
mov
xchg
pop
cmp
lds
loopne
cs
adc
xchg
imul
or
and
les
cltd
jmp
sub
sbb
sbb
push
adc
sarl
push
push
cmp
fldl
pushf
mov
ds
add
xchg
cltd
mov
in
pop
aam
insl
sub
xchg
inc
sbb
push
fdivrp
arpl
and
sbb
xor
insb
daa
icebp
call
pop
arpl
cmpsb
pop
mov
ljmp
sbb
xchg
pop
loop
add
imul
jbe
jl
fucomip
dec
xchg
add
xchg
and
xor
push
pusha
pop
cmp
mov
pop
ja
pop
mov
xor
and
push
jo
sbb
leave
out
or
jle
fs
or
inc
pusha
sub
arpl
mov
lea
shrd
stos
out
enter
pop
xor
outsl
pop
dec
int3
daa
push
sub
mov
fsubr
xchg
scas
mov
and
lcall
pop
aaa
mov
outsb
clc
pop
movsb
aas
jb
enter
es
dec
out
sub
jb
mov
out
mov
xchg
js
add
outsb
mov
fidivrs
mov
cwtl
mov
lret
jno
ljmp
pop
jl
inc
add
sbb
sub
fdivs
fldt
mov
aas
pop
mov
testb
push
mov
fs
jmp
cmp
cmp
pop
adc
scas
arpl
jo
es
mov
xor
pusha
int
aam
popa
cmp
push
aas
data16
push
sub
add
xchg
push
arpl
jge
dec
push
adc
int
ja
int
js
int
mov
movsl
jmp
cmc
js
mov
jl
adc
stos
add
in
test
mov
sahf
jo
cmp
hlt
js
hlt
int
mov
dec
sbb
outsb
sub
js
aam
mov
mov
inc
push
push
adc
xchg
dec
nop
jns
scas
repz
mov
pop
insb
jecxz
push
inc
fsts
pop
xor
rorb
ss
fldenv
mov
fwait
out
fistps
mov
xor
jmp
jbe
scas
mov
sbbl
adc
adc
fimull
addl
movsb
push
out
xlat
pop
popa
fstpl
cmp
or
imul
fsubrl
dec
flds
aaa
lahf
inc
mov
ret
pop
cli
mov
lock
xchg
jne
pop
lcall
mulb
jp
cmc
mov
lea
mov
mov
push
movsl
daa
or
sub
push
pop
cmp
ss
jmp
fisttpll
rclb
mov
cmp
add
jmp
hlt
jnp
nop
out
iret
fneni(8087
fists
cwtl
idiv
adc
test
cmp
test
std
cmp
gs
rcrl
pop
inc
pop
pop
and
cmpsb
add
fs
fwait
and
mov
mov
cmp
xor
push
cmpsl
xchg
pop
sahf
xor
push
mov
sub
mov
sbb
das
cmp
int3
mov
adc
mov
mov
test
mov
jmp
jle
jge
mov
sbb
cmp
cmp
int
pop
cmpb
insl
lret
push
dec
hlt
push
or
enter
sbb
jno
pushf
rclb
mov
mov
in
pop
push
inc
fsubp
push
shlb
mov
pusha
mov
icebp
xchg
aaa
or
das
mov
stos
sbbb
aaa
inc
push
jo
testb
lods
das
cmp
sub
adc
xchg
cs
dec
sti
mov
push
outsb
xchg
sbb
lods
mov
in
cmp
addr16
jnp
push
mov
leave
les
loop
icebp
and
cli
sub
inc
adc
mov
dec
mov
data16
insl
pusha
mov
ja
aam
jae
mov
aad
adc
lret
jns
ret
lods
test
push
xrelease
mov
mov
out
push
and
mov
in
mov
xchg
fmuls
xchg
mov
mov
push
repnz
jp
jbe
push
mov
jge
popl
jecxz
ficoml
xchg
sub
sub
sbb
sub
push
aam
pop
shlb
frstor
mov
push
in
dec
lahf
sub
xor
dec
push
push
mov
fsts
cmp
fcmovnu
push
nop
mov
lret
push
scas
andb
dec
mov
in
xor
dec
stos
jle,pt
lods
addr16
movl
data16
lds
nop
adc
loopne
dec
xorb
vandps
sarl
imul
fs
iret
add
sarb
or
jle
and
out
push
jmp
movb
dec
adc
cmp
add
push
movsl
xchg
dec
jae
into
jecxz
inc
mov
mov
out
lock
shl
std
mov
ds
std
in
pop
int3
insl
shll
sub
mov
gs
push
mov
fildll
repnz
mov
or
sub
push
stos
and
scas
mov
jo
popa
dec
mov
fdivp
fwait
popf
test
fsubrl
mov
sub
add
mov
mov
or
jle
repz
clc
push
mov
test
xor
cmpsl
add
in
mov
xchg
lahf
in
sub
test
adc
or
pop
sub
xchg
mov
ret
insl
cmc
xor
sub
or
lds
sub
inc
inc
sub
sub
stc
xchg
ja
mov
pop
arpl
pop
lods
aam
mov
lret
mov
adc
xchg
in
cmp
jl
out
xchg
pusha
dec
and
loop
jge
push
repz
rcrb
mov
cmc
add
inc
cmp
ret
lea
mov
fldcw
xchg
outsl
aam
pop
jno
cmp
add
or
aaa
out
inc
test
jne
sbb
stos
loope
int
shrl
xchg
inc
mov
add
mov
lret
out
in
in
mov
or
test
mov
fnstcw
push
aas
in
mov
icebp
fsin
xor
pop
and
gs
mov
lret
addr16
mov
jle
adc
adc
xchg
and
leave
pop
cld
std
sub
lods
sub
sbb
sub
jmp
push
add
and
dec
cmove
in
ret
out
xchg
sti
in
pop
rcrb
cmc
inc
mov
jg
test
pop
rorb
cmp
pop
add
pop
cwtl
rorb
aas
ret
xchg
sub
cmpl
hlt
xor
mov
cmp
xlat
shr
mov
lods
fcoml
push
sbb
xor
sahf
idivb
out
push
push
sub
jge
mov
pop
add
scas
fimull
xchg
and
adc
movsl
cwtl
adc
xor
popa
ja
inc
add
xchg
pop
mov
xor
xor
mov
out
push
pop
adc
cmp
push
sub
xor
repz
dec
imul
popf
mov
pushf
push
sub
adc
ror
int
cmpsb
cld
add
test
pop
add
adc
lret
xchg
andb
jge
mov
popf
je
dec
cmp
pop
lea
jle,pt
loopne
jle
xchg
sub
mov
dec
xor
mov
jo
adc
test
pop
stc
and
pop
mov
and
inc
push
jge
mov
icebp
outsb
aad
jns
pop
xchg
int
ds
xchg
adc
fxch
jg
adc
mov
add
pop
in
fnop
mov
popf
xor
dec
jo
mov
dec
outsl
test
lods
jbe
out
leave
dec
and
daa
in
in
push
fistl
xchg
dec
push
inc
mov
mov
leave
sbb
cmc
add
cmp
mov
jns
jg
xchg
loopne
push
push
sbb
inc
testb
cmpsl
outsl
popa
iret
outsl
lds
mov
cmp
mov
push
adc
fildl
jecxz
insl
push
das
add
or
sbb
test
inc
lret
fimuls
mov
movsl
mov
jns
outsb
mov
xor
rclb
pop
jg
inc
test
xor
xor
and
iret
mov
scas
jb
jno
lods
gs
cmp
jo
jno
xchg
fnsave
pushf
imul
aas
idivb
dec
jmp
mov
mov
fisubl
push
cmp
es
dec
icebp
loopne
scas
daa
aas
xchg
jecxz
jnp
sbb
inc
dec
cmovne
out
clc
stos
xor
cmp
inc
scas
mov
sbb
dec
fwait
adc
and
cmp
rorl
int
inc
xor
mov
pop
test
mov
adc
add
adc
mov
in
cmp
data16
arpl
ret
sbb
jns
in
push
mov
pop
mov
leave
pop
mov
cld
fs
sbb
mov
mov
add
loop
push
jbe
mov
jge
push
and
lret
or
mov
sahf
fs
lock
in
shl
fs
dec
movsl
dec
call
movsl
out
dec
imul
out
mov
inc
pusha
push
and
es
popf
repnz
mov
sub
or
loop
jo
lcall
inc
pop
pusha
jns
inc
dec
pop
vphaddubq
or
cmp
in
clc
stos
inc
dec
jne
xor
mov
pop
and
adc
jne
jns
push
push
sti
ret
xor
cwtl
push
cmp
adc
push
mov
mov
shrb
xlat
add
lret
mov
sbb
add
fildll
sbb
cmp
fildll
popa
mov
push
ja
mov
xor
and
iret
jge
add
in
xchg
call
cmp
xor
cld
jbe
and
cs
es
mov
ds
pop
dec
xor
ljmp
xchg
fwait
int
out
sbb
xchg
mov
mov
and
aad
enter
out
and
jmp
rcrl
xor
and
sti
es
push
push
add
jns
call
faddl
out
pop
aaa
in
push
andl
stos
mov
shll
bound
iret
int
push
xchg
push
and
sbb
mov
or
pop
pop
lahf
or
adc
out
xchg
pop
push
and
sbb
inc
icebp
inc
add
popf
lahf
mov
mov
and
pop
push
sub
das
jns
inc
addl
into
pop
nop
fstp
popa
in
mov
lds
icebp
test
push
and
jl
adc
mov
sub
outsb
repnz
cmp
pop
bnd
cmp
xchg
sbb
inc
cld
pop
and
loope
test
sarb
cmpsl
fwait
adc
lcall
sub
inc
les
sbb
lods
arpl
daa
or
mov
mov
ror
sbb
pushf
xor
pop
sub
shl
ret
test
in
xchg
sub
imul
mov
sarb
repz
pop
pusha
xor
push
ror
repz
lea
mov
xchg
adc
xorb
pop
scas
push
dec
jbe
xchg
imul
push
je
pop
xchg
test
sahf
pop
sahf
push
adc
pshufw
lret
inc
jb
movsl
add
bound
mov
add
xor
cmp
lcall
push
das
arpl
dec
and
sbb
hlt
shll
fs
push
jecxz
aas
stos
std
lods
inc
pop
mov
lods
aas
jb
jl
repz
push
fwait
clc
popa
inc
sbb
add
or
xor
and
test
imul
xchg
ljmp
jge
les
add
movsb
stos
rcrl
xchg
sti
fstl
pusha
les
in
in
out
popa
fnstcw
inc
ss
dec
out
sbb
sub
shlb
inc
pop
cmp
lods
out
xor
aas
or
inc
int3
fwait
mov
call
mov
push
add
mov
dec
xchg
fists
mov
mov
imul
movsl
xlat
jle
aad
call
sbb
dec
shll
scas
and
fdivr
scas
mov
jbe
xor
jo
jmp
test
and
je
jmp
shlb
and
fs
jle
pushf
adc
les
sahf
xchg
xor
out
sbbl
sub
imul
add
pop
arpl
cmpl
or
jb
fs
cmp
sbb
cmpsb
or
ret
cmp
addr16
cwtl
fiaddl
mov
jns
xor
lret
and
push
adc
push
pusha
call
es
pop
push
shlb
das
add
pop
sbb
insb
ljmp
cmp
push
and
adc
mov
adc
mov
mov
add
sahf
xchg
lret
sub
xor
js,pt
mov
xchg
stos
xchg
hlt
sub
leave
lret
or
es
inc
or
add
jmp
cmpsl
mov
xor
cltd
mov
adc
adc
xor
std
mov
lret
pusha
xor
call
pop
ss
push
cmpl
pop
pop
into
xor
push
or
jae
daa
sbb
mov
andl
pushf
into
ret
lahf
lret
daa
adc
push
or
sub
mov
inc
and
cmp
jl
push
jb
cmpsl
mov
loope
mov
xchg
lds
pop
repz
and
gs
inc
pop
mov
js
mov
push
cmp
xor
daa
add
mov
push
ds
cmpl
pop
enter
aas
xchg
test
insl
aam
inc
fsubs
inc
enter
insl
mov
mov
out
or
cmp
jno
cmpsb
call
lods
cli
adc
mov
lcall
in
imulb
add
daa
repnz
pusha
movl
lods
lock
sbb
push
add
sub
push
adc
outsb
mov
int3
jae
sbb
adc
jae
fidivrl
dec
gs
outsb
push
xor
pop
pop
push
jo
in
mov
enter
push
mov
stos
lret
addb
ret
mov
sbb
mov
mov
call
into
test
mov
int3
insl
lods
xor
fistl
pop
sbb
inc
push
pop
data16
cli
fwait
cld
and
adc
adc
dec
repnz
prefetcht2
into
jecxz
popa
sub
stc
and
into
pushf
add
push
sub
sub
incb
xchg
cli
in
je
pop
icebp
stc
mov
ficoml
jmp
movsl
popf
push
insl
lds
lahf
int
orb
aas
xchg
aam
add
sub
fstpl
int3
sbb
xchg
fsub
ss
fwait
sub
pop
movsb
in
loopne
mov
jb
popl
lcall
imul
cmp
pop
idivl
test
lods
imul
add
loop
incl
cld
and
out
sbb
cmp
mov
add
mov
inc
pop
mov
pop
cli
jge
pop
push
mov
push
push
jmp
push
outsb
jge
jb
xchg
fbld
ljmp
int
sbb
repz
lds
roll
jle
sbb
mov
mov
int
adc
push
push
mov
mov
push
adc
mov
xlat
lretw
imul
aam
cmpsb
addr16
mov
push
ja
lret
aam
adc
mov
mov
xchg
sub
call
xor
or
shlb
dec
jecxz
xchg
add
or
inc
inc
js
or
xor
sbbl
cmp
xchg
fstl
orl
loope
popa
push
out
mov
adc
mov
subl
idiv
xchg
xlat
adc
fisttps
mov
loopne
add
xor
cmc
fnstenv
nop
sub
stos
push
mov
push
sbb
lods
addr16
xchg
rolb
jb
out
addr16
cmpsl
lret
jl
and
dec
mov
xor
loopne
andb
clc
jge
and
mov
outsl
jp
int3
shll
sbb
popa
mov
cmp
ret
or
inc
add
pop
inc
mov
js
xchg
pusha
ficompl
imul
test
repz
pop
outsb
adc
stc
fstps
xchg
das
andb
fld
push
add
cmpsl
push
xor
cwtl
scas
cwtl
add
in
jae
push
cli
pop
sub
xchg
dec
jo
inc
std
mov
lock
lods
mov
jle
push
stc
ficompl
in
clc
jge
xor
cmp
test
cmpsl
repz
push
push
mov
push
rcrb
outsl
outsl
inc
gs
addr16
mov
mov
dec
mov
scas
xor
std
cmp
test
cmp
and
mov
adc
or
mov
rol
add
push
shll
jo
inc
fldl
adc
into
cmp
aas
jge
popa
rorb
mov
jae
sbb
pop
out
jb
xor
outsb
stc
push
fildll
insl
push
roll
fiadds
sbb
shrl
sahf
adc
mov
cmp
mov
jmp
add
adc
cli
adc
and
lock
mov
cmp
sub
sahf
adc
sub
das
jecxz
and
cli
mov
pop
mov
inc
repz
pop
aad
in
and
cwtl
adcl
lds
js
aas
hlt
fists
push
push
fdivr
xchg
xor
insb
xor
pop
push
mov
insl
sbb
aas
add
or
jae
xchg
add
cmp
xlat
cwtl
test
push
nop
nop
loop
idivl
in
enter
push
ss
cmp
lret
out
mov
lock
push
adc
rorb
mov
sub
mov
sti
xlat
mov
test
sub
out
cmp
test
or
testb
leave
flds
sbb
popf
std
insl
ds
xchg
mov
and
inc
scas
or
push
cmp
and
into
xchg
cld
outsl
cmc
mov
sub
sub
fbld
lret
jle
and
xchg
pop
test
mov
ss
inc
flds
scas
clc
les
mov
negb
sub
xor
in
insb
call
lea
jno
movsl
xor
pop
mov
shl
mov
negl
xlat
jno
ljmp
out
movsl
jbe
pushf
mov
mov
outsb
rorb
dec
sub
addr16
pushf
and
and
dec
dec
aaa
imul
xchg
aad
pop
pop
or
sbb
pop
jle
call
sti
sbbb
push
ljmp
push
inc
outsl
pop
fisttpl
into
nop
push
lcall
ss
xchg
test
xor
mov
mov
mov
pop
mov
aad
les
dec
xor
cmpsl
cltd
sahf
lea
flds
dec
xor
ds
icebp
fwait
inc
insb
xchg
nop
push
pop
lds
sbb
in
pop
lods
push
pop
inc
enter
jno
fdivs
cmpsl
or
loopne
jnp
cs
sub
ja
in
inc
outsb
xor
jl
std
push
xor
arpl
cld
testb
or
cmp
jmp
xchg
push
hlt
stos
sbb
mov
loopne
dec
sahf
sti
or
adc
hlt
add
cmpsb
jae
leave
add
leave
jnp
mov
rep
or
mov
mov
and
xchg
and
and
jns
cltd
xchg
out
cltd
jmp
rcrl
loopne
movsb
push
enter
sub
inc
lahf
mov
xor
xor
cld
and
and
clc
hlt
rol
xor
movsb
sub
int
pop
sahf
dec
mov
sbbb
das
dec
icebp
outsb
bound
adc
lods
popf
pop
out
pop
mov
cmp
or
pop
mov
jmp
outsb
scas
xor
jno
dec
scas
mov
jl
push
fs
call
pop
xchg
mov
in
pop
mov
clc
and
mov
dec
fwait
lock
push
mov
xor
rcl
rclb
mov
sbb
mov
and
adc
lods
adc
inc
in
dec
push
adc
add
lahf
sbb
mov
sub
mov
xor
xchg
insb
jp
push
mov
into
cmp
addr16
and
repz
jbe
mov
xchg
enter
xchg
and
mov
sub
mov
in
insb
mov
in
test
fucomi
or
scas
jg
ljmp
scas
or
pop
jmp
mov
jbe
inc
movsb
lods
inc
jb
test
cmp
flds
imul
push
lea
loopne
cmp
ret
and
adc
in
ret
dec
or
xor
imul
adc
enter
out
xlat
push
and
notb
push
int
mov
dec
pop
mov
inc
ret
adcb
push
enter
fs
mov
jae
and
das
outsb
mov
repz
mov
lahf
cmp
std
js
cltd
cwtl
pop
and
lds
jo
cmp
out
adc
mov
dec
sbb
or
inc
loope
out
dec
movsl
pusha
sub
fsubrs
pop
xchg
push
or
adc
push
lods
shlb
cmpb
sub
loope
fidivl
shl
mov
xor
push
pop
adcb
push
loope
inc
sti
dec
mov
dec
pop
lds
sahf
out
jno
insb
and
mov
or
jp
into
fisubrl
or
in
aam
push
mov
cld
cmp
js
pop
pop
and
sub
xor
fnstcw
or
leave
in
mov
sub
sub
pop
adc
mov
xchg
mov
xchg
mul
sbb
xor
test
addl
scas
cmp
int3
jl
xlat
mov
xchg
or
pop
popf
popf
loope
jnp
pop
add
add
pop
push
mov
and
dec
shll
lods
adc
leave
pop
movb
xorb
xor
pop
sub
pushf
outsl
fwait
and
out
adc
mov
loope
mov
dec
test
lock
ja
cld
mov
aaa
daa
jnp
or
sahf
xor
dec
mov
fdivrl
dec
sbb
mov
shlw
dec
xor
fwait
cmp
push
mov
mov
inc
inc
mov
hlt
fcomps
negb
add
mov
ret
out
xor
pop
xor
sbb
in
cmpsb
sarl
dec
xchg
jp
inc
cmp
js
sub
or
inc
cmp
jmp
loope
xor
insb
dec
xor
push
xchg
inc
fwait
test
ja
mov
inc
aam
add
add
xlat
out
cmpsl
popf
dec
mov
clc
div
daa
icebp
pop
cmc
mov
test
xchg
pop
int3
push
jbe
sub
push
add
mov
movsb
adc
sti
sbb
mov
sbb
pop
or
jno
call
add
icebp
mov
clc
adc
sbb
add
or
stos
cmp
int
int
negb
push
int
mov
pushf
add
push
sub
mov
icebp
int3
or
sbb
cltd
pop
push
outsb
xlat
cmc
push
and
push
push
insl
out
cmpb
fstps
sbb
icebp
lea
jge
and
adc
imul
cmp
pop
xor
cmp
cmpsb
xchg
incb
inc
mov
insl
mov
cmp
iret
cld
aam
pop
hlt
or
xchg
pop
je
lods
sbb
push
adc
xor
pop
repz
jbe
mov
outsb
mov
mov
gs
push
fcmovnu
dec
add
mov
cmpsb
imul
mov
pop
jge
xchg
xchg
nop
inc
data16
pop
mov
ss
stos
cmp
fldt
movsb
loop
sub
add
fidivrs
fnstcw
xlat
xchg
fs
mov
mov
pop
xor
fwait
xchg
mov
adc
push
mov
pop
jl
mov
pushf
cli
lods
dec
mov
mov
add
clc
xchg
sub
mov
cmp
or
addr16
cmp
mov
or
pop
jmp
clc
add
in
add
js
pop
and
and
xor
sub
push
pushf
rcll
out
sub
jp
pop
cmp
lds
scas
dec
lcall
jb
push
loope
jmp
cmpsl
cwtl
mov
or
gs
mov
mov
push
cs
sbb
xchg
dec
push
inc
aad
es
push
fucomi
aad
pop
call
lahf
cmp
ret
xor
shll
gs
and
test
sarb
cmp
ror
in
push
xchg
mov
iret
inc
mov
adc
cmpsb
inc
cmp
push
jmp
dec
and
iret
sub
clc
mov
or
push
jns
xchg
jge
aas
xchg
fwait
jle
pop
xor
repz
pop
sbb
es
into
testb
jb
bound
loopne
inc
cmpsb
inc
ja
into
dec
call
inc
dec
imul
push
dec
adc
outsl
xchg
jmp
push
in
std
cld
sbb
das
loop
push
test
pop
pop
inc
repnz
imul
ljmp
xchg
movsl
ljmp
rorl
inc
pop
jmp
xchg
xor
pop
and
adc
int3
jle
adc
addb
xchg
sti
aaa
sbb
scas
push
in
xchg
xchg
shlb
pop
jo
cmp
and
sbb
add
imul
pusha
popa
adc
test
jecxz
cld
dec
addr16
loop
iret
mov
in
dec
std
xchg
loope
pusha
sbb
jle
pop
jecxz
dec
pop
mov
mov
adc
ret
add
sub
sub
roll
loopne
mov
pop
sub
stos
jle
leave
xor
pop
sbb
xchg
stc
ror
mov
out
insl
shrb
lcall
cmp
fs
or
aaa
add
cmp
xchg
sahf
lods
std
mov
adc
mov
dec
jnp
mov
mov
inc
pushf
pop
add
stc
sbb
outsl
loope
sub
push
and
push
inc
lcall
arpl
dec
push
and
repnz
sbb
cli
sbb
push
adc
test
cmp
stos
push
add
mov
pop
mov
xchg
repnz
cmp
fnstenv
fldcw
lock
cwtl
add
lds
cmpsl
sti
cld
mov
andl
and
sub
sub
sbb
popf
xor
inc
xchg
push
daa
push
mov
mov
jg
jle
roll
mov
mov
insb
outsb
mov
lock
and
fnstenv
js
cmpsl
xchg
jmp
ret
mov
jmp
lds
dec
xchg
mov
cmp
pop
movsb
push
outsb
fwait
jge
jl
xor
scas
or
mov
addr16
cmp
pop
stc
xorb
dec
xor
scas
pop
cmp
insb
insb
enter
out
xchg
cmp
sar
loop
or
jmp
dec
clc
fdivr
or
xor
mov
testl
lock
mov
jge
jbe
and
clc
jns
lods
divl
notb
add
inc
ljmp
movsb
adc
movsl
repnz
sub
ds
paddsb
nop
sub
sub
or
cltd
into
mov
and
sub
push
or
dec
mov
xor
adc
dec
cmp
pop
xchg
push
sbbl
adc
and
pop
push
push
aaa
cwtl
aam
adc
and
or
adc
sahf
enter
mov
fcmovnbe
mov
jmp
sub
mov
push
push
xor
lea
or
inc
mov
loope
xchg
mov
add
and
loop
push
pop
out
xor
inc
pop
pop
imul
or
fstps
add
push
dec
adc
out
jne
push
xlat
jp
jg
adc
pop
fwait
sbbb
jbe
adc
jbe
mov
jae
inc
insb
mov
mov
fsubrs
shll
icebp
add
scas
cmp
mov
pop
rorb
adc
scas
adc
jp
fcmovnu
pop
add
rcrb
pop
jp
jno
cmp
dec
adc
fsubs
test
and
push
cli
mov
or
mov
adc
mov
scas
ss
leave
push
idivl
les
insb
icebp
jbe
adc
sub
test
stos
adc
ds
test
sbb
jnp
sub
in
jno
dec
xor
pushf
adc
loope
pop
pop
gs
nop
or
lds
push
jo
lret
rorb
mov
shl
and
aaa
jns
adc
sub
jbe
or
mov
shlb
pop
xor
imul
out
fistps
movsb
test
cmp
adc
mov
aaa
jnp
xor
dec
test
sub
push
or
push
push
scas
sbbl
xlat
mov
lret
loopne
iret
lret
iret
push
mov
aad
dec
out
sbb
cmp
add
jp
add
pushf
dec
sub
mov
das
cmp
xor
or
cs
shrb
add
xchg
xor
xchg
and
xor
cmpsb
pop
mov
cmp
movsl
mov
push
in
ret
mov
imul
pop
mov
dec
cmp
xor
fsubrl
sti
sub
ljmp
bound
clc
xor
das
and
mov
and
fidivl
in
mov
mov
push
jecxz
jbe
dec
movsl
inc
aam
add
xchg
push
stc
test
inc
in
aad
inc
aad
jge
mov
dec
mov
ljmp
ss
pop
mov
sbb
inc
mov
das
pop
inc
rol
int3
sbb
xchg
lods
lcall
loopne,pn
rolb
addr16
jnp
add
jmp
fstl
add
mov
cmp
test
adc
notl
cmp
jbe
in
push
mov
data16
mov
mov
call
repz
cs
loop
clc
ds
add
sub
jmp
jne
dec
lods
insl
inc
dec
test
xchg
jg
dec
lock
pop
leave
adc
xchg
idiv
leave
push
cmp
pop
loopne
add
les
xor
and
adcb
loop
lods
push
pushf
test
mov
sti
pop
nop
and
add
cmp
sbb
xchg
inc
mov
outsb
pusha
inc
sub
jo
insl
jns
fwait
movsb
shl
inc
xchg
xor
out
cmpsl
mov
push
mov
cmp
aam
cmpl
ret
and
pop
mov
mov
gs
mov
mov
test
popf
arpl
stos
and
outsl
out
lods
fidivs
inc
scas
xchg
cmp
jns
lods
push
mov
and
inc
cmpsb
je
scas
pop
out
xor
mov
pop
adc
leave
fcoms
stos
mov
xchg
sub
push
jg
jge
mov
dec
pop
adc
fimuls
push
aam
imul
imul
fisubrs
and
jl
push
adc
sar
clc
stos
or
ja
imulb
cltd
in
add
imul
cli
shll
inc
inc
dec
xchg
dec
and
or
push
mov
and
cmpl
mov
add
cmpsb
mov
shlb
inc
mov
mov
in
into
lds
mov
jmp
xchg
iret
push
pop
aas
inc
cmp
subl
lea
cwtl
push
jae
pop
stos
sbb
lods
cmpsb
and
dec
mov
sub
insb
push
ja
sbbl
push
cmpsb
xorl
inc
inc
push
mov
cmp
out
movsl
xor
add
jp
mov
pop
xor
incl
mov
ja
fiadds
inc
xlat
sahf
sbbb
arpl
sub
mov
sbb
sar
jo
shrl
rcrl
pushf
dec
xor
fnstcw
xor
das
dec
adc
aaa
jecxz
add
add
stos
je
jmp
adc
out
mov
aas
jns
cmp
sub
outsb
outsb
jmp
jg
in
clc
out
aam
mov
mov
fdivrs
ret
ret
fsubl
xchg
push
pop
cmp
insb
dec
mov
cmp
sub
push
push
rclb
mov
sub
pop
test
js
fs
lret
pop
jnp
jne
inc
popf
dec
dec
cltd
dec
daa
sub
sarb
xchg
scas
jnp
xor
pop
out
pop
pop
sub
outsb
add
push
cmc
pop
mov
dec
dec
jo
outsl
cs
dec
mov
mov
je
push
mov
cltd
or
xchg
mov
lret
push
repnz
mov
inc
xchg
and
movsl
aam
lcall
fbstp
xchg
adc
xchg
xchg
je
lds
shr
fwait
add
pop
pop
sbb
jne
ret
loop
sahf
cmp
out
jg
lods
sbb
and
mov
xor
xchg
mov
push
pop
orb
imul
adc
decl
ret
jmp
mov
or
jecxz
test
dec
inc
dec
stos
aad
popa
jecxz
mov
pushf
leave
imul
lcall
inc
test
out
adc
cmp
jl
test
mov
sbbl
xlat
fldcw
or
fmuls
sub
and
jg
and
nop
ficoms
jb
xchg
insl
push
sahf
lret
test
cmp
and
test
or
fistpll
xor
addr16
adcb
mov
fs
pushf
mov
adc
jb
mov
nopl
addr16
mull
inc
cmp
jne
jno
cltd
pusha
movsl
mov
mov
lcall
and
pop
lods
sbb
mov
jo
push
pusha
into
add
xchg
mov
sbb
jb
loopne
in
cmp
ss
adc
stos
cmpsb
in
cmpsl
mov
mov
jb
xchg
jmp
pop
sub
arpl
scas
mov
pop
xchg
mov
enter
cwtl
and
sbb
inc
jmp
int
fidivl
sbb
push
adc
mov
nop
push
imul
xchg
xchg
cmp
jae
inc
int
pop
ss
pop
fs
mov
pop
daa
cmc
mul
mov
xchg
push
pushf
int
mov
push
in
adc
inc
cmovne
fistps
fcmovnb
mov
dec
inc
int3
rclb
jne
or
sahf
add
adc
pop
mov
scas
mov
pop
es
je
push
mov
scas
xchg
xchg
shl
mov
sti
dec
sub
dec
decb
addr16
xchg
pusha
dec
es
xor
mov
adc
lods
cwtl
loopne
pop
mov
mov
fnop
pop
stos
or
inc
add
jnp
scas
mov
je
xchg
leave
dec
icebp
sub
lock
mov
jl
add
cmc
xor
push
in
das
shlb
xchg
les
and
lcall
pop
lds
daa
xor
push
sub
xor
sbb
fidivrl
repnz
stc
outsb
push
push
cs
pop
icebp
fmull
mov
loopne
jae
adc
mov
sbb
or
push
mov
adc
scas
lcall
loop
cmp
imul
lret
adcl
cwtl
cmpsb
scas
cmpl
call
aaa
jb
daa
push
or
sub
mov
cmp
push
out
xchg
jb
cmp
outsb
cltd
pop
mov
lock
iret
push
dec
xor
xor
xor
clc
into
mull
shl
xor
sbb
sub
dec
dec
jmp
sub
aam
imul
jnp
jne
sub
push
mov
data16
adc
mov
adc
fdiv
dec
sub
xchg
sbb
ret
rolb
decl
lods
cli
xor
in
loopne
ja
xchg
or
sbb
sbb
push
fsubrp
push
int
sub
and
mov
jl
cmpsb
pop
in
sbb
cwtl
daa
sub
adc
xor
mov
lods
or
fisttpl
scas
into
cltd
and
add
in
mov
scas
in
test
int3
test
pop
dec
inc
repnz
call
dec
sub
insl
mov
fidivs
dec
fdivr
movsb
arpl
repz
fdivs
xchg
adc
adc
xchg
aas
shll
movsb
ss
sub
xchg
xor
push
push
inc
cmpsb
pop
mov
shlb
fisubs
and
loopne
pop
addr16
sarl
xchg
dec
test
push
mov
int3
flds
and
cmpsb
xchg
push
xor
xchg
sti
mov
xor
roll
dec
mov
and
pop
pop
sub
jge
ds
cwtl
mov
fwait
lahf
aaa
xchg
in
push
add
ficoml
int
imul
fs
inc
xchg
test
out
and
and
xchg
sbb
ljmp
repz
jns
aaa
std
mov
pop
xchg
in
push
cld
jmp
xlat
xlat
mov
and
pop
lret
sbb
and
in
sarl
or
push
je
sub
int
xlat
aas
jmp
push
sub
cltd
bsr
aaa
aas
xorl
jmp
orb
add
into
shlb
into
mov
loopne
mov
mov
sarl
sub
adc
hlt
dec
cld
mov
xlat
lds
xlat
adcl
les
sbb
dec
mov
xchg
test
arpl
popa
inc
lods
inc
pushf
mov
nop
fildll
pop
push
cli
insl
xchg
mov
xchg
mov
and
iret
or
stc
stc
negb
call
jne
inc
data16
out
pushl
cmc
mov
ljmp
notb
lea
and
xchg
mov
sbb
push
popa
pop
inc
xchg
call
inc
insb
shr
jmp
nop
popa
mov
cmp
int3
push
sbb
push
aaa
mov
or
jge
movsb
cmp
leave
mov
inc
cmp
fldenv
imul
xlat
mov
mov
into
shl
cmp
out
push
imul
pop
inc
ljmp
shrb
fwait
mov
xor
stos
outsb
les
sbb
adc
xor
les
cs
arpl
add
imul
pushf
lret
xchg
and
mov
or
dec
hlt
lods
call
mov
dec
dec
movsl
call
xlat
mov
dec
dec
stos
hlt
loop
ret
mov
orl
ljmp
leave
popa
aam
or
fisubl
or
and
into
pop
mov
pop
cltd
jb
inc
jl
call
lret
mov
or
xor
lret
mov
inc
repnz
sbb
lods
and
popa
jg
lret
sub
scas
xlat
fisubrl
scas
arpl
pop
call
mov
sub
pusha
lret
mov
in
into
fadd
iret
mov
sub
inc
test
push
divl
or
fbld
inc
cmp
xchg
data16
push
pop
insb
out
jo
ficomps
hlt
xor
sub
sub
xor
imul
mov
stos
fisttpll
cld
cmp
mov
xlat
pop
jbe
subl
push
fs
sub
sub
adc
mov
adc
xor
testb
jnp
mov
dec
or
mov
iret
dec
and
lahf
les
test
jl
repnz
mov
and
xchg
sub
pop
popf
push
push
pop
cli
jge
or
or
mov
fsubrl
pushf
sbb
popf
cld
je
ret
into
push
push
jl
cmp
dec
cmp
dec
ret
outsl
mov
lock
sub
and
jmp
pop
xor
sahf
leave
mov
pop
sti
lret
dec
in
adc
insl
popa
jg
popf
xchg
loope
mov
sti
dec
out
leave
sub
mov
push
stc
mov
js
xor
jle
sbb
jle
test
jae
nop
repz
mov
push
or
xor
cs
cmp
int3
and
lock
std
jb
mov
add
mov
push
xor
dec
shll
sub
push
das
push
loopne
cmp
inc
or
popf
mov
daa
aam
jae
cmp
push
or
sub
out
mov
gs
movsb
int3
cmpsl
mov
popa
push
xor
adc
xchg
mov
jp
or
clc
pop
out
fs
sbb
push
fcoml
mov
xchg
pop
or
jp
xchg
or
inc
adc
cmpsb
movsl
sbb
fldl
imul
xor
jbe
scas
jmp
shl
lods
xchg
hlt
jo
add
mov
pop
cmp
imull
jo
adc
adc
mov
xchg
dec
lcall
push
ret
cmove
mov
gs
mov
fwait
jo
scas
mov
inc
cmp
nop
mov
stos
aaa
jle
pusha
ja
cs
sahf
cld
lock
mov
or
roll
xchg
push
push
pop
repnz
push
jg
cmp
mov
pop
mov
fwait
std
and
push
mov
jbe
dec
or
lods
and
adc
sbb
adc
inc
add
insl
xor
mov
bound
ljmp
cli
sti
sbb
cmpsb
jmp
jae
dec
ja
mov
scas
mov
imul
dec
dec
xor
inc
aad
xchg
nop
xchg
test
das
and
mov
es
push
jo
push
imul
mov
pop
shl
stos
inc
cwtl
mov
push
popa
leave
push
repz
rcr
test
xlat
fsubs
jne
jl
cli
or
pop
pop
and
test
shrb
loop
into
push
sbb
xchg
push
cmc
jns
add
out
jbe
fisttpll
mov
push
adc
ficomps
pop
inc
cld
adc
lret
pusha
adc
faddl
mov
push
popf
and
jmp
jno
lahf
and
or
sarl
ss
cld
and
movsb
mov
into
fcomps
pop
rcrb
sbb
inc
cwtl
jb
sub
sti
stos
out
sbb
out
sub
std
inc
imul
jmp
sbb
stc
aaa
lret
pusha
mov
test
negb
dec
and
outsl
lret
and
xchg
mov
pusha
hlt
rolb
mov
adc
lds
pushf
arpl
xchg
lods
xchg
repz
movsb
and
cmp
je
mov
mov
xchg
and
pop
call
std
lcall
scas
or
sbb
jnp
lahf
stc
aas
mov
pop
xor
push
jns
loopne
push
adc
or
push
sbb
sub
pop
sbb
jmp
inc
cmp
mov
jmp
outsb
ret
xchg
lea
call
mov
int
insb
jg
cltd
lods
cltd
adcb
jge
adc
popa
push
pusha
sbb
ret
cld
js
mov
cmpsb
add
inc
addb
cmp
mov
add
jae
scas
js
sbb
sbb
mov
aaa
mov
in
movsb
imul
icebp
sub
je
jb
mov
call
stos
aad
sbb
push
cmc
mov
cld
push
or
xchg
xchg
mov
es
push
lret
test
outsl
push
ja
cmpsl
jns
fwait
mov
test
andb
add
jp
mov
mov
xchg
mov
movsl
sbb
sub
mov
adcb
jae
or
inc
ljmp
mov
aas
clc
int3
movsl
jl
jmp
mov
std
mov
dec
inc
xor
outsl
jne
sub
test
cmpsb
adc
pop
xchg
xor
repz
repnz
addr16
test
aad
sbb
outsb
jno
int3
adc
inc
cmp
mov
mov
inc
xchg
movsb
push
sbb
mov
scas
mov
xchg
scas
idivl
test
xor
cmp
xchg
dec
loop
inc
mov
push
jmp
aas
repz
pop
pop
and
add
xor
mov
inc
or
hlt
adc
jmp
mov
bound
loopne
rorl
aas
or
insb
fs
and
div
mov
in
arpl
loope
sub
movb
cmp
push
scas
sbb
cltd
andl
andl
adc
cmp
pushf
rcrb
or
adcb
lret
push
lods
aam
push
dec
xlat
vmovdqu
cmp
pop
rcll
mov
xchg
lods
fcmovnbe
inc
es
pop
int
mov
sbb
pusha
movsl
jmp
lret
adc
or
sbb
jne
add
xor
out
mov
cmp
xor
lahf
inc
xchg
ror
les
push
fists
cmp
mov
scas
add
iret
insb
mov
xchg
inc
mov
mov
ficoms
lods
cld
inc
aaa
jb
pop
xchg
adcw
mov
loop
loopne
fstl
jmp
and
xlat
push
fbld
inc
xchg
push
imul
mov
mov
jg
jae
xchg
icebp
mov
mov
pop
cs
pusha
into
mov
push
jne
pushl
and
mov
lcall
fdivr
cmp
fnstsw
jge
xchg
and
cwtl
hlt
or
out
movsb
and
cmp
repnz
ss
cmpsb
arpl
mov
mov
cmp
mov
fcompl
mov
stc
movsb
mov
mov
push
ret
mov
out
movsl
pop
bound
gs
dec
es
pop
out
and
xlat
cmp
xchg
daa
and
loopne
mov
nop
movsb
aaa
repnz
xchg
das
lods
mov
sbb
loope
fstpt
mov
movsb
and
lahf
adc
adc
daa
fstpl
xchg
adc
add
xchg
lods
lcall
stc
out
clc
sbb
dec
jbe
push
imul
or
lret
imul
sbb
stos
fwait
mov
out
push
cwtl
cmp
pop
push
or
or
in
cmp
cmp
pop
in
mov
outsb
fcoms
mov
xchg
mov
lea
js
icebp
pop
fs
cmp
mov
xor
lret
sbb
orb
mov
inc
popa
pop
jp
jmp
aaa
in
fucom
subb
lock
lock
in
daa
das
and
jns
pop
adc
cmp
loop
fs
jno
ja
pop
aaa
movsl
mov
pop
sbb
mov
push
push
mov
add
xor
push
jb
xchg
mov
and
push
popa
xlat
jg
outsl
incl
xchg
and
enter
jnp
test
shl
mov
out
sub
and
repz
and
add
mov
out
cli
xor
in
loope
xorl
sub
xchg
or
add
repnz
aaa
shl
bound
and
mov
out
and
or
out
shr
inc
adc
xor
sbb
leave
sub
cmp
int
ljmp
stos
stos
xchg
fistps
test
xor
jmp
add
mov
jbe
aaa
xchg
jmp
loopne
int
or
mov
jg
enter
daa
jge
mov
jbe
mov
bound
and
lahf
adc
xorb
sub
test
push
jmp
sbb
inc
jg
xchg
scas
xlat
and
mov
mov
pop
adc
sub
jnp
jae
sbb
hlt
movl
rcr
add
shll
shrb
jle
dec
clc
fcoms
mov
cmpsl
sub
out
mov
dec
sarl
and
dec
movsb
inc
cmp
mov
insl
inc
cld
pop
mov
dec
popf
scas
push
inc
push
pop
int3
or
adc
inc
icebp
fisubs
sub
outsb
push
mov
out
pop
fiaddl
lea
stos
or
adc
inc
cmpsl
pop
mov
xchg
rclb
pop
aas
gs
sub
sub
jbe
mov
fwait
mov
xchg
dec
orb
pop
shrl
in
inc
jge
xchg
sarb
jo
dec
out
sub
out
cmp
and
cmp
mov
cld
jns
shrb
xchg
inc
in
push
dec
sbb
movsl
bound
pop
sub
inc
adc
mov
loopne
call
test
lret
icebp
or
jl
adc
ret
push
shl
mov
mov
mov
lods
lahf
das
cld
adc
mov
mov
int3
cmpsb
jecxz
and
insb
jecxz
out
push
mov
mov
lea
mov
add
out
fstps
dec
dec
call
push
cmc
cmc
icebp
lods
jmp
mov
mov
ljmp
lea
sub
data16
xchg
shll
aam
mov
mov
clc
mov
imul
daa
lods
adc
pushf
outsb
mov
arpl
out
push
in
stos
addr16
xchg
mov
mov
jbe
xchg
or
sub
push
shll
and
lret
inc
inc
push
xchg
pushf
movsl
enter
out
jae
inc
mov
hlt
test
fs
fidivrl
and
out
mov
sub
dec
out
xor
mov
push
cmp
aam
or
mov
fdivrl
shrb
inc
xor
or
jp
sub
and
xchg
or
or
mov
mulb
xchg
lock
push
or
dec
je
mov
mov
pop
int3
add
das
push
xor
in
fs
loop
loopne
pop
jns
in
leave
fwait
pop
or
pop
cmp
out
sub
imul
stc
push
sbb
xor
jg
or
and
or
push
jmp
insl
out
sti
dec
cmpsb
pushf
mov
mov
fcmovb
scas
xchg
daa
je
push
cwtl
dec
pushf
xor
inc
jns
rol
into
pop
repnz
jb
or
and
jecxz
leave
sbb
mov
xor
mov
and
loop
push
shrb
aas
add
and
andl
or
mov
lret
enter
jecxz
mov
fwait
push
mov
cmpb
das
pop
popa
inc
mov
out
or
cld
lea
jo
sti
sbb
ss
mov
xchg
jae
sbb
jnp
in
pop
sub
idiv
push
mov
add
mov
mov
push
out
inc
add
push
arpl
std
sbbl
xchg
mov
inc
pop
movsl
adc
iret
mov
mov
popa
dec
test
cmp
test
ret
adc
push
mov
mov
inc
sbb
sbb
lea
cmpsb
xchg
adc
insb
dec
mov
notl
pop
mov
jmp
cmp
xor
mov
xchg
pop
jae
jmp
call
push
sbb
dec
fstl
ficomps
insl
loopne
jmp
pop
shll
xorb
pop
fcoml
push
xorb
inc
test
in
arpl
mov
repz
xor
or
out
scas
or
sbb
add
int3
xchg
out
dec
outsb
add
jmp
mov
sbbl
pop
lods
fs
adc
sub
repz
test
cmp
call
inc
lcall
rolb
jg
sahf
mov
xchg
pop
out
in
lret
test
jg
std
push
xor
inc
scas
dec
imul
jo
jmp
sub
lods
or
shlb
sbb
mov
out
fisttpll
sub
mov
inc
mov
fs
dec
add
push
mov
jmp
push
addr16
push
xor
sahf
jl
mov
aad
cld
and
dec
mov
xor
fwait
imul
jb
arpl
xchg
push
xor
aad
insb
adc
mov
or
aaa
jb
pop
add
cmc
fsts
loopne
push
inc
or
stc
push
js
test
sbb
rclb
shl
push
rcrb
xor
ret
int
rorl
mov
xor
jno
shlb
sub
sub
pop
imul
dec
mov
jno
test
push
inc
js
fldl
sbb
inc
fmuls
rcll
or
mov
and
mov
or
pusha
subl
test
lock
inc
sbb
xlat
fcomps
dec
hlt
xor
or
jns
or
adc
cmp
cltd
in
inc
hlt
sti
out
cpuid
add
pop
js,pt
mov
xor
add
dec
test
ficomps
jnp
sbb
fwait
in
aad
out
xor
inc
sub
lds
int
dec
ljmp
inc
repnz
rclb
push
loope
cmpsb
out
sbb
pusha
jo
push
pop
outsl
cwtl
sbb
stc
xchg
push
mov
xlat
jmp
hlt
in
cwtl
jo
sub
dec
lret
pushf
push
in
adc
mov
sbb
cmp
or
insl
sahf
jno
es
xor
sub
jae
push
iret
dec
xlat
add
inc
xchg
jbe
add
mov
pop
pop
push
pop
cmc
mov
int3
mov
add
jno
stos
xchg
clc
jbe
out
and
bound
xor
ds
pop
cmp
arpl
test
repnz
sub
rcl
push
push
inc
imul
inc
sbb
jb
sbb
aam
mov
ljmp
or
mov
lcall
pop
cmp
or
imul
cli
adc
stc
or
sahf
adc
sub
movsl
lea
pop
xchg
movsl
push
mov
inc
xlat
mov
js
adc
insb
lods
push
ja
sub
lods
stc
imul
pop
jle
clc
inc
xchg
sbb
push
mov
xorl
gs
lret
std
adc
das
cwtl
arpl
ljmp
push
inc
xchg
in
mov
push
jp
pop
gs
pop
pushf
jle
xor
xchg
lret
lods
xor
test
clc
jg
fmul
iret
pop
aam
jmp
gs
lret
subl
mov
push
es
mov
cmc
mov
in
rol
mov
jmp
and
sub
and
imul
sbb
xchg
mov
pop
and
xor
dec
les
lock
xchg
jno
sbb
cmpsb
xlat
sbb
out
scas
mov
fcoml
aam
mov
lret
add
loop
out
and
cltd
dec
sub
add
adc
push
push
std
inc
sub
pop
ds
nop
cmp
pop
mov
xlat
mov
outsl
movsb
addl
mov
xchg
ss
test
insl
lcall
popf
in
sahf
sbb
jecxz
push
dec
bound
outsb
mov
mov
pxor
cmp
jecxz
sub
mov
mov
sub
xchg
std
pushl
adc
xor
popa
and
push
bound
push
mov
movsl
sbb
push
sbbb
dec
mull
fldcw
add
xor
sbb
add
int
dec
mov
cmp
divb
lock
sub
scas
add
popa
xor
or
test
mov
das
push
xor
add
pop
in
lret
jge
push
repnz
jmp
inc
and
outsb
adc
push
add
mov
sub
mov
sub
xchg
jbe
or
xor
fsubrs
sbb
push
jg
mov
mulb
movl
add
mov
adc
bound
jl
fdivl
int3
dec
dec
jnp
add
pop
mov
into
push
out
dec
arpl
jmp
loopne
insb
inc
pop
int3
into
inc
hlt
movsl
inc
pop
fld
adc
push
aas
repnz
aam
les
sbb
addr16
pusha
pop
sbbb
sti
cmp
adc
jns
popa
cmp
scas
push
mov
dec
xchg
cmovg
push
sbb
or
push
scas
jo
xorb
pop
pop
int3
fwait
xchg
pop
cli
pop
dec
xchg
imul
and
xor
in
pop
inc
xor
inc
dec
mov
pop
push
cmp
sbb
in
add
cmpsl
imul
cmp
xchg
ja
inc
fdivs
out
xchg
adc
insb
pop
imul
lods
push
shrl
out
add
mov
lods
stos
mov
sbb
add
out
push
and
add
cmp
or
aad
loope
push
jl
mov
pop
lock
xchg
xchg
mov
dec
ficomps
push
flds
ds
dec
int
push
ss
int3
mov
pop
push
movsl
test
xchg
adc
sbb
je
ds
cmp
sbb
pop
inc
jb
and
dec
push
sbb
pop
or
stos
mov
jnp
dec
jne
lock
mov
aad
push
ficompl
test
pusha
test
pop
xor
dec
popa
add
xchg
fcompl
xor
mov
stc
xor
stos
mov
inc
mov
sub
in
sahf
outsl
cwtl
xor
sub
xor
leave
xor
jle
div
sub
iret
push
inc
dec
dec
fwait
mov
xchg
add
inc
gs
pusha
out
inc
mov
insl
jg
mov
dec
jae
push
or
pop
pop
xor
testb
cltd
aaa
mov
shll
cli
cli
mov
push
addr16
add
ss
cmpsl
cmp
stos
cmc
sub
dec
mov
lds
das
fwait
sbb
sub
loope
inc
sbb
int
int3
ret
mov
cwtl
test
sub
idiv
and
and
pusha
rcrl
aas
sbb
xchg
fs
gs
out
lahf
push
sbb
shll
lds
mov
dec
jp
jmp
sub
popa
mov
push
pop
pop
js
cmp
dec
jb
cmpsb
mov
cltd
imul
xchg
push
mov
pop
mov
and
ds
arpl
fwait
xchg
xchg
seto
ljmp
jb
stos
dec
stc
test
mov
sub
cmpsl
mov
xchg
data16
cmpl
dec
mov
jb
push
dec
pop
push
mov
jne
hlt
int
jns
mov
stos
inc
mov
inc
je
lret
dec
mov
jns
inc
fsubl
movsb
jnp
push
mov
pop
and
mov
out
or
nop
sti
popf
loopne
cmp
dec
popa
xlat
out
and
or
jno
movsb
mov
inc
popl
or
mov
pusha
jl
pop
jmp
mov
xor
or
pop
add
dec
adc
aam
add
dec
nopl
add
xchg
or
lods
and
out
js
jecxz
cmp
fnstcw
outsl
imul
lea
scas
add
jbe
or
add
sarl
add
lret
rclb
xor
inc
lret
pop
dec
jae
inc
repz
jae
cmpsb
inc
pop
jl
xchg
cmp
push
xchg
sbb
imul
repz
das
mov
inc
cld
cmpsl
loopne
pop
sub
sbb
cmpsb
jne
popa
fidivrl
sub
lcall
xchg
jae
sub
jle
xor
sar
add
sti
gs
or
and
mov
adc
jnp
fistpll
rolb
sbb
rolb
xor
sbb
push
mov
add
inc
pop
add
lods
pop
xor
test
jl
aaa
push
out
fstps
cltd
addb
cwtl
add
outsb
push
add
cmp
std
mov
pop
fcmovu
mov
loope
aad
in
adc
loop
lcall
aam
pop
push
pop
cs
aaa
lahf
mov
mov
dec
sub
test
cli
mov
gs
xchg
xor
inc
push
int3
movsl
imul
push
cmp
mov
sbb
inc
in
mov
adc
sub
mov
inc
or
out
pop
sub
ret
rorl
fsubrs
arpl
and
mov
ja
mov
js
imulb
mov
stos
pop
mov
data16
stc
test
pop
ss
test
jbe
jae
and
ss
mov
mov
xchg
xchg
ret
xlat
rcll
hlt
dec
inc
out
dec
cli
test
sub
jp
or
cmovns
out
fdivs
mov
mov
pop
sbb
xchg
add
std
bnd
push
add
and
push
mov
fisubrl
shll
xchg
cmp
stos
orb
and
mov
push
pushf
mov
bound
xchg
xor
aad
rcl
jp
stos
lods
divl
xor
dec
das
sti
pop
shrb
test
push
vmwrite
mov
lret
xchg
rorl
std
xchg
filds
sahf
dec
jmp
fadds
xchg
movsb
mov
call
mov
cmp
xor
adc
scas
sub
push
rclb
add
cwtl
fistpl
push
fbstp
loope
mov
mov
or
les
ljmp
pushf
sbb
aas
data16
xor
mov
inc
lods
sbb
mov
stos
mov
sahf
outsl
push
or
adc
push
daa
mov
out
les
ret
pusha
inc
cmpsl
loopne
dec
insb
mov
outsl
and
dec
push
sbb
int
das
fsubs
leave
inc
and
jmp
movsb
sub
and
and
push
stc
mov
jle
pop
mov
imul
sbb
push
or
call
cld
push
dec
sub
ja
cmpsb
push
adc
in
fsubrs
repnz
cmp
ds
mov
xor
xchg
xchg
add
mov
fistl
in
sub
out
cmc
sub
jnp
sbb
pop
arpl
sbb
into
push
adc
loop
pusha
pop
aam
fcomps
xchg
push
outsl
fucomi
adc
imul
xor
and
sub
mov
movsb
je
ficomps
adc
add
pop
or
iret
xor
add
add
int3
add
ja
loop
inc
imul
jmp
gs
push
int3
aaa
fimuls
push
sbb
dec
test
or
cmp
jmp
sub
je
adc
es
stc
sbb
xchg
push
orb
xor
xor
and
mov
test
pop
std
adc
popf
cmp
mov
jo
add
cmp
ficomps
repnz
sub
stos
and
fmuls
pop
imul
imul
dec
push
ja
jns
testb
pop
push
add
movsb
fadds
or
cmp
lock
lock
mov
sub
adc
push
jbe
push
loopne
ret
aas
add
aas
scas
cli
mov
xchg
lret
cmc
fdivrs
jl
add
rol
cwtl
into
std
xchg
or
cmp
and
call
scas
movsb
dec
shlb
orl
cmp
bswap
push
sbb
pop
out
mov
jp
je
or
daa
push
jo
sti
in
movsb
sub
pushf
sar
in
pop
repnz
insb
out
push
sub
mov
push
mov
daa
dec
mov
jl
xor
cs
mov
xor
fsubrs
adc
add
mov
xchg
adc
test
jae
sbb
push
int3
push
xchg
mov
out
xchg
xchg
notb
in
in
push
les
movsl
push
jae
cmp
jae
push
leave
insb
aas
sub
push
inc
mov
cs
xchg
cmpsl
mov
mov
push
adc
inc
or
pushf
cmp
jg
paddb
jp
jmp
mov
xor
mov
xchg
out
call
fwait
push
sarb
cmp
mov
sar
mov
xchg
int3
push
stos
mov
test
cltd
push
jns
jle
dec
in
mov
cmp
lock
movsb
aam
dec
or
test
testb
fisubrs
out
and
in
dec
icebp
in
or
and
inc
pop
xchg
fdivrl
stos
sub
inc
cmpsb
repz
lods
cs
xchg
fisubl
fwait
adc
shl
into
inc
mov
ljmp
stos
std
mov
sbb
push
lahf
inc
inc
out
mov
and
inc
decb
mov
cmp
cltd
pop
mov
xchg
movsl
mov
cwtl
jo
dec
fcomps
mov
out
xor
cld
pop
jecxz
dec
push
cmp
inc
mov
adc
push
sub
jnp
je
cmp
inc
push
or
xor
ret
mov
add
or
mov
mov
cmp
mov
into
icebp
gs
movsb
pop
inc
add
stc
divb
stos
mov
and
loope
jne
inc
mov
fnclex
lds
inc
push
std
push
frstor
and
cmpsl
jp
xchg
aad
arpl
xor
xlat
pop
sbb
mov
popa
je
push
enter
lods
inc
pop
movsl
sub
faddp
icebp
cli
mov
lret
shl
dec
add
imull
nop
sub
jb
mov
addr16
jle
xor
outsl
leave
test
ja
jg
mov
nop
push
test
xlat
fisttpll
enter
andb
movsb
jmp
movsb
jbe
adc
push
ja
mov
xor
add
ja
xchg
cmp
xor
or
adc
in
aad
roll
or
es
data16
xchg
cmp
jo
ret
dec
aad
test
jmp
into
mov
pop
mov
mov
rclb
mov
cmp
inc
and
pop
fldt
inc
add
call
jge
dec
outsb
cmpsb
in
ret
lea
decl
sbb
lea
xchg
stos
loope
je
mov
in
icebp
cmpsl
rcrb
pop
fcoms
loope
outsb
imul
je
mov
ss
jb
xchg
mov
xor
cmc
push
mov
sbb
mov
out
bound
push
addb
push
inc
mov
in
add
mov
and
adc
push
adc
in
sub
leave
dec
sarl
pusha
pop
movsl
shll
cmp
sbb
push
aas
xor
dec
sub
into
loopne
pop
fmulp
daa
add
aaa
cltd
sbb
pop
fsubs
or
xor
cs
ret
cmp
inc
shr
insl
jne
or
pusha
js
outsl
mov
cmc
xchg
clc
loop
inc
movsb
sub
lcall
dec
ljmp
lods
sarl
mov
je
in
sar
loope
jb
insl
test
and
add
add
mov
lret
sub
cltd
testb
push
and
imul
in
arpl
lock
xor
xchg
xchg
mov
jne
fildl
push
ds
xchg
js
shlb
dec
dec
outsb
aam
mov
cli
inc
push
leave
dec
mov
ljmp
push
pop
dec
jmp
sti
sti
mov
lcall
out
addr16
cmpsb
sub
mov
pop
pop
sahf
ficoms
inc
lahf
lret
or
sbb
fwait
cmp
js
adc
ja
xchg
sarl
mov
pop
mov
push
bound
je
rdmsr
lea
mov
push
fdivrs
mov
loope
loopne
mov
clc
mov
cwtl
push
or
addb
cmp
in
aas
in
test
cs
lods
mov
call
mov
cli
push
add
cmp
pop
stos
je
mov
push
iret
ret
lock
popf
into
pop
repz
lds
jae
or
fisttps
mov
idivb
inc
xor
stos
lret
dec
xchg
fstpl
lods
lcall
cmc
sbbl
xlat
jge
jp
pop
sar
xchg
push
jge
xor
jmp
frstor
add
xlat
pop
xchg
js
pop
cli
pop
push
add
fisubl
or
push
sti
addr16
or
lret
or
ret
lahf
dec
mov
push
mov
jnp
popa
cmp
iret
popa
dec
lret
test
ljmp
sub
mov
pop
jno
push
mov
push
mov
ret
dec
jmp
mov
mov
addr16
xchg
mov
imul
sarb
mov
std
or
cmp
bnd
std
or
pop
mov
xlat
loope
push
into
or
mov
push
rorb
xchg
sub
ja
icebp
stos
aaa
lcall
xchg
mov
loop
sub
and
or
inc
cmp
mov
ret
and
icebp
add
clc
lret
jno
add
xor
xchg
cmpl
add
adc
jns
test
adc
lcall
mov
pushf
in
add
movsl
andl
cmpsl
xor
faddl
movsb
pushf
stc
pop
out
cs
and
or
jns
sbb
add
rcl
jmp
popf
xchg
cmp
test
jb
in
fbld
cmpsl
loop
mov
inc
ss
cs
neg
and
in
loope
pushf
xchg
divl
pop
mov
or
sub
mov
adc
xor
cwtl
data16
fcmovu
test
pop
ret
cli
add
into
xlat
jle
pop
mov
dec
xchg
xchg
adcl
sbb
lds
popa
aad
rorl
mov
dec
loopne
lcall
push
and
cmp
mov
faddl
mov
mov
or
mov
repnz
repz
adc
push
imul
cltd
sarb
mov
scas
xchg
js
inc
fwait
xchg
sub
lods
fwait
cmp
xlat
push
fwait
cmp
and
fadds
add
push
xor
dec
insb
mov
xchg
test
push
mov
xor
and
int3
lret
xor
in
std
cltd
adc
adcl
cmpxchg
int3
adc
xchg
pop
xor
loope
jle
mov
xor
icebp
mov
inc
into
sarl
fs
cmp
dec
mov
test
jg
lods
js
in
jecxz
inc
repz
push
pop
pop
add
sahf
jnp
fs
cmp
sbb
cmp
mov
loope
jnp
jl
es
sbb
inc
xchg
or
cmp
jl
pop
in
sbb
shlb
inc
fistl
pusha
xor
lods
mov
or
push
dec
mov
sahf
out
adc
enter
pop
mov
fsubs
mov
cmp
cld
inc
and
loopne
cltd
mov
xlat
mov
fbld
adcb
push
fsubl
mov
push
inc
enter
inc
mov
cmpsl
insl
in
pop
movups
cwtl
mov
xchg
add
jbe
insl
sti
call
lods
sahf
push
fstps
jp
xor
inc
imul
dec
insl
lahf
shlb
xchg
cld
inc
scas
rorl
icebp
jg
pop
jecxz
jne
aam
fsubrl
ljmp
hlt
pop
popa
icebp
sarl
sub
lahf
push
mov
jne
stos
push
add
hlt
sbb
cmpsl
pop
push
negl
mov
outsb
rorl
sti
popf
arpl
out
mov
jmp
adc
xchg
xchg
insb
add
jg
mov
pop
iret
xor
cmp
ret
cwtl
int
lods
sub
inc
insb
movsb
pop
push
mov
into
sub
or
pop
pop
das
push
int
test
pop
inc
mov
dec
cwtl
sub
clc
mov
inc
or
jp
or
movsb
mov
pop
ret
movsb
pop
cltd
std
cmp
and
or
pushf
lcall
xchg
mov
mov
xor
xorb
es
inc
push
dec
lcall
mov
pop
data16
mov
cmp
mov
enter
out
ljmp
xor
mov
xchg
add
mov
cmpsb
sub
pop
pop
jg
dec
iret
and
cs
lock
and
sub
push
leave
fwait
addr16
mov
cmp
pop
aaa
outsb
mov
sub
jae
adc
dec
scas
and
push
in
adcl
jb
cmp
push
xchg
sub
mov
pushf
inc
call
fwait
aaa
ds
popa
data16
cwtl
sbb
notl
xlat
mov
push
pushf
cmp
mov
lret
mov
jecxz
rorl
std
rorl
icebp
mov
repz
push
jns
xchg
stos
push
and
mov
adc
gs
cmc
negl
adc
incl
jge
sbb
cmpsl
add
adc
inc
out
dec
mov
ret
popf
mov
repnz
xchg
aam
ret
lds
add
fildll
icebp
xlat
fbstp
loop
negb
nop
add
fwait
mov
clc
cmc
sti
jbe
push
lea
inc
inc
aam
xor
subb
dec
imul
mov
push
sbb
lods
lret
mov
fsub
push
ret
cmp
pop
imulb
ret
les
and
test
popa
movsb
jge
pop
lahf
aaa
push
sbb
imull
push
lret
pop
jno
push
cmp
bound
insb
or
lock
adc
ss
test
mov
push
jl
pop
push
xchg
cmpsl
adc
cmp
xor
nop
movsl
stc
jno
dec
outsl
addr16
pushf
repz
daa
push
pop
push
adcb
and
jne
lods
add
out
sti
lods
cmpsl
rcll
push
nop
jns
nop
cmp
push
bound
xchg
mov
in
mov
xor
adc
cmpsl
fdivrs
push
lock
sbb
es
rcrl
in
dec
jne
popf
test
cmp
mov
pop
fldl
xorl
fstpl
pop
jae
dec
test
into
or
cmp
testl
arpl
inc
adcl
inc
adc
bound
ffree
lret
ljmp
push
fldenv
out
shll
lock
mov
insb
adc
inc
sbb
pop
aam
mov
in
jg
mov
rclb
popf
negl
mov
dec
out
movsl
jecxz
popf
push
mov
stos
fldcw
jns
pop
push
cltd
dec
data16
nop
es
cmpsl
js
adc
xor
les
inc
rcrl
rcrl
sbb
popf
mov
out
and
in
push
movsb
cli
imul
fbld
popl
push
cwtl
mov
inc
xchg
popa
or
push
retw
mov
mov
jb
cld
and
dec
rcr
inc
fwait
popa
dec
sbb
daa
lds
sti
jecxz
and
xchg
or
fdivrs
adc
loop
sbb
xor
jae
pop
movsb
pop
jmp
fistps
loopne
pop
push
mov
sub
hlt
mov
xlat
insl
xchg
mov
and
pop
xor
xor
push
xchg
es
push
mov
mov
xorb
or
insl
ja
movsl
in
aas
add
ds
inc
out
pop
inc
mulb
std
stc
push
jnp
int3
fprem1
fidivrs
mov
cmp
jo
jp
xchg
ficomps
loope
push
jae
pop
mov
mov
or
push
push
pop
insb
or
es
ret
sub
jmp
xor
cmp
mov
pminub
fisubrl
pop
cmpsb
pushf
or
lret
cltd
sub
aad
stos
push
dec
mov
scas
clc
ss
mov
in
sub
push
repnz
sub
fstl
lods
inc
xchg
xor
loope
movl
or
mov
jl,pt
push
rorb
xchg
leave
xor
push
dec
std
int
cs
pop
aad
cmp
loopne
loope
mov
cmp
popa
sahf
jmp
out
clc
lcall
mov
push
lea
andl
popl
shrl
or
cmpxchg
daa
popa
lret
lock
int
sahf
lret
dec
stos
xor
cmp
pop
and
out
add
sbbl
andl
fidivs
jmp
inc
mov
mov
mov
enter
mov
inc
jg
or
add
icebp
or
jecxz
push
and
les
int
test
jg
bnd
fwait
sbb
add
push
imul
pop
fs
repnz
mov
lcall
inc
jne
add
xor
push
xchg
in
mov
dec
in
scas
out
ljmp
sub
and
inc
sub
inc
add
loope
cmpsl
sub
push
cs
xrelease
mov
fistpll
outsb
sbb
pop
adc
mov
add
xor
cmp
stos
mov
cmp
mov
mov
pop
pop
shll
lret
push
pop
outsb
mov
and
push
cli
xchg
int3
xor
cmp
jg
inc
scas
andl
xchg
insb
cli
jo
and
lcall
js
cmpsl
xchg
pop
sub
jp
dec
jecxz
add
hlt
cmp
push
es
aam
fdivl
push
lds
mov
lret
dec
imul
pushf
movb
es
aam
cmp
loopne
stos
pop
jp
inc
xor
in
add
sub
sub
cmp
leave
mov
lcall
fstpt
jno
push
stos
aam
jae
add
jbe
andb
rcll
fiadds
xor
mov
insl
test
vpunpckhdq
imul
scas
pusha
stos
pushf
je
mov
xor
push
cmp
xorb
outsl
out
pushf
jl
ret
aam
dec
push
nop
mov
lret
or
aad
sub
sarl
sahf
pop
add
jl
pop
cld
fs
inc
sub
pop
pop
ds
lea
sbb
fidivs
and
mov
jb
pop
cmp
andb
xchg
orb
insb
adc
push
push
xchg
fmull
xchg
mov
insl
sbb
pop
mov
and
cli
and
inc
clc
dec
jbe
cmpl
andb
jl
add
xor
adc
adc
xchg
sub
sbb
push
pop
out
push
mov
xchg
sub
jnp
mov
cli
popa
frstor
sti
pop
mov
sbb
push
out
aam
pop
cmp
adc
dec
aaa
enter
sbb
jmp
shrl
mov
loope
xchg
fmull
stc
xlat
add
pop
add
cmp
add
daa
dec
and
pushf
inc
addr16
jl
jb
ret
iret
dec
push
mov
jb
shlb
or
dec
out
lret
daa
push
xchg
sbb
sbb
or
xchg
pop
push
mov
iret
in
pop
stos
cmp
xchg
cwtl
lds
imul
sbb
sbb
addr16
imul
mov
push
sbbl
loope
test
imul
ds
inc
jge
fs
out
pop
in
mov
lcall
mov
cld
fmuls
and
jp
sbb
mov
push
dec
push
push
jno
mov
adc
mov
lds
cmp
repz
adc
fcom
pop
sbb
loop
movsb
xor
cmpsl
aas
fiaddl
mov
je
repz
xchg
cmp
cld
mov
imul
adc
hlt
aas
and
in
loop
jae
xor
pop
filds
jge
pushf
jl
gs
int3
lock
or
push
test
jns
pop
test
stos
sub
push
hlt
int
jg
es
int3
mov
jnp
adc
xor
and
and
sub
mov
rclb
int3
int3
sti
ja
xchg
lds
lods
ljmp
cld
aas
addr16
popa
ss
movsb
inc
cmp
cmpsl
sbb
js
in
mov
test
or
repz
jecxz
scas
jg
xor
aas
adc
pusha
cltd
xchg
pop
sub
cli
dec
lea
lret
cmp
cwtl
enter
cmp
jnp
out
inc
in
push
dec
or
inc
cmc
xlat
or
add
dec
jecxz
ds
pop
push
fisubs
cmc
test
in
insl
jg
fdivl
mov
mov
in
mov
aas
pop
jg
and
xchg
in
xor
test
add
inc
hlt
enter
in
jne
dec
mov
in
fidivs
fsubs
pushf
fucomip
dec
rcrb
push
fdivrs
shll
sub
sti
push
insb
loop
cmp
inc
call
adcl
adc
sbb
xor
mov
test
push
push
out
xchg
mov
out
cs
loope
ret
popa
out
imul
mov
mov
movsbl
xchg
jg
push
adc
sub
push
xchg
das
fcoms
in
ljmp
aam
aad
mul
jb
fldt
xchg
ret
mov
fnstcw
adc
mov
push
mov
inc
and
jo
ret
xor
or
movsb
and
push
shlb
nop
popf
push
je,pt
lods
outsl
cli
xchg
inc
xchg
outsb
cmc
sbb
frstor
scas
mov
mov
call
xor
mov
push
stc
aas
inc
pop
xchg
aam
push
cmp
dec
rcr
in
sub
addr16
aam
xlat
daa
pop
cmp
insb
add
es
mov
and
shr
mov
popa
xchg
or
cltd
sti
xchg
addr16
mov
xorb
dec
lods
add
xlat
fdivs
imul
push
imul
je
mov
add
xchg
adc
popf
pop
mov
mov
imul
rcrb
fsubrs
pop
xlat
dec
out
inc
jnp
cmpsb
es
scas
inc
xchg
aaa
push
das
adc
push
repz
mov
ss
adc
fstps
sbb
cli
xchg
adc
mov
das
int3
dec
pop
dec
xlat
insb
cmp
fwait
pushf
sub
jno
imul
scas
std
in
std
out
outsb
movsl
ljmp
or
pop
insb
jp
pop
jno
mov
test
push
jp
bound
std
loope
or
pop
push
clc
or
or
popf
push
lods
push
jle
mov
dec
in
jae
inc
xchg
lods
aam
sub
xchg
and
xor
sub
insl
pop
ficomps
shr
xchg
imul
sbb
cmc
jg
pop
mov
or
cltd
test
adc
in
and
popl
sbb
sub
sub
test
lret
movsb
shlb
sub
das
xchg
fdiv
dec
pop
test
cmc
sub
shlb
out
and
cwtl
lds
in
cmp
iret
js
push
testl
push
out
adc
push
or
xchg
in
inc
mov
clc
aaa
sub
ja
mov
mov
or
sbb
jl
mov
les
ficoms
mov
mov
jnp
push
push
inc
leave
lcall
inc
mov
pop
xchg
push
lret
loop
push
dec
xchg
repz
mov
mov
push
xor
test
fwait
js
pushf
cmp
mov
dec
subb
lret
pusha
pop
mov
push
pushf
lods
ja
dec
test
mov
cs
inc
pop
mov
pop
fsubr
adc
shrb
ss
jnp
push
out
cmp
je
or
test
cmp
mov
xchg
out
mov
xchg
dec
inc
pop
mov
lret
dec
mov
sub
lahf
inc
mov
mov
xor
outsl
enter
jp
leave
xor
sahf
sub
dec
jb
mov
xchg
sbb
adc
cli
mov
lds
adc
cmc
cwtl
lret
scas
push
mov
pop
lcall
pop
aaa
imul
jp
lods
lods
push
cld
push
lods
filds
sbb
out
mov
xor
cmp
xchg
pop
pop
movsb
push
cmpb
in
rorl
mov
fisttpl
loopne
jbe
sub
test
daa
sub
stc
pop
jo
aam
adc
add
in
xchg
or
cmp
inc
scas
mov
pop
std
aam
cmc
xchg
popa
sti
dec
sbb
or
loop
insb
mov
jmp
sbb
or
jno
and
and
adc
aad
dec
push
in
sbb
push
mov
pop
sub
mov
andb
mov
dec
lods
xchg
repz
mov
push
mov
stos
movsb
jmp
push
and
sahf
cmp
fsubs
and
iret
fisttpll
or
adc
sbb
or
cmp
inc
cli
outsb
dec
and
push
aas
push
and
ja
jnp
fisttps
dec
imul
lcall
cltd
test
push
int3
outsl
or
pop
xchg
and
loopne
dec
pop
mov
jp
jle
adc
sbb
sub
sbb
or
loope
adc
sub
mov
loope
je
xlat
mov
mov
or
jnp
lods
add
dec
repz
stos
inc
pop
sub
or
fcompl
pop
push
movsl
pop
mov
insl
rcll
ficomps
mov
fdivs
and
dec
xchg
cwtl
and
pop
pushf
out
ss
mov
xor
cld
xor
rorb
outsl
jg
add
push
sbb
and
xchg
jb
fcoml
stc
pop
mov
dec
movsb
hlt
dec
pop
movsl
andb
jae
clc
in
ds
pop
add
inc
loope
pop
jb
jae
loope
xchg
pop
sub
repz
sahf
psrld
xor
pop
jp
add
sub
popa
outsb
pop
jnp
fstpl
fwait
loope
jo
fdiv
movsb
inc
jo,pt
iret
testb
cmp
sbb
ret
dec
and
iret
pop
jnp
js
out
cltd
pop
lahf
adc
sti
es
int3
cmpsl
lahf
das
sub
fsubl
mov
sbb
add
jb
scas
fildl
xchg
inc
and
dec
scas
loop
call
pop
mov
dec
dec
inc
leave
push
sbb
lahf
sub
mov
in
pop
xor
sub
cmc
dec
fisubl
lret
sbb
enter
push
push
push
mov
stc
jno
mov
xor
aas
adc
sahf
mov
clc
js
cmpsl
xor
adc
fcomi
in
in
loope
test
stos
sbb
xchg
test
insl
data16
sbb
out
inc
rcrl
mov
stc
xchg
imul
shrl
inc
mov
fucomp
jo
adc
lock
jo
dec
cs
stos
pusha
ret
xor
addr16
sub
dec
loop
mov
lds
repnz
es
cltd
pop
bound
and
inc
outsl
lahf
xor
xor
cli
out
fs
xchg
dec
jge
pop
add
or
dec
or
out
xchg
mov
cmp
popa
div
loopne
fcomi
bound
add
es
fisttps
push
push
adc
jle
je
jbe
mov
cmpl
popa
iret
pop
mov
xchg
sub
movsb
mov
xor
mov
mov
leave
dec
mov
gs
jbe
shrl
lcall
cmpsb
ficomps
stos
push
mov
jmp
nop
and
jle
jns
lds
dec
sbb
xor
fistpll
cmp
xor
adc
jge
into
pop
adcb
sbb
add
mov
mov
out
or
les
loop
add
jle
sbb
mov
sbb
rorb
out
in
mov
inc
pop
sarl
stos
xchg
mov
stos
arpl
sub
mov
pop
int3
or
add
sti
test
xchg
add
fisubs
test
sub
adc
out
adc
jne
mov
lock
out
sub
push
mov
push
cmp
xchg
fs
imul
xchg
or
movsl
xchg
push
fisubrs
jg
mov
sbb
cli
movsl
dec
xchg
mov
mov
data16
jg
xchg
or
jecxz
jne
pop
dec
add
or
das
pop
jge
inc
lret
out
mov
sub
incb
push
scas
mov
xchg
mov
out
mov
notl
xor
bound
xchg
jae
scas
mov
mov
popf
push
dec
bound
or
addl
cs
or
call
repnz
inc
jecxz
jmp
lcall
xchg
pop
or
cld
inc
je
inc
ficoml
jl
divl
xor
xchg
and
cmp
repz
jne
fidivrs
xchg
sub
adc
jge
imul
sub
shl
shl
pusha
jecxz
jno
push
mov
xor
xchg
mov
mov
add
in
jae
dec
dec
cmp
je
lock
cmpsl
push
or
xchg
jns
push
mov
sub
lock
mov
sbb
lock
imul
mov
push
clc
inc
filds
dec
lret
jns
pop
cmp
push
mov
mov
lret
mov
dec
notl
js
cmpsb
or
pop
mov
ljmp
add
or
inc
sbb
xchg
ljmp
das
adc
xor
in
adc
nop
das
and
clc
lods
mov
fs
mov
cmpsl
and
mov
es
movsb
imul
dec
or
dec
aad
out
aam
mov
mov
test
scas
push
int3
pop
sarb
mov
outsl
repz
inc
adc
pop
pand
shll
decb
ret
cmp
jp
sysenter
xor
mov
inc
js
lds
enter
push
aaa
lock
in
sub
or
call
and
out
lock
pop
xchg
xchg
cmc
sbb
push
sbb
cwtl
push
arpl
int
lods
ret
push
jne
adc
adc
sbb
jbe
inc
xchg
aam
jbe
push
xchg
lcall
xchg
mov
ret
movsl
mov
jecxz
cmpsl
sub
mov
aaa
adc
or
addr16
mov
jne
dec
mov
fs
xor
jp
mov
pop
sub
movsl
sbbb
mov
rcl
ljmp
dec
std
call
cmp
insl
in
movsl
iret
cmp
lahf
dec
pop
pop
stc
dec
inc
sub
subb
xor
dec
cli
xchg
cmpb
cmpsl
jno
negb
mov
sarl
test
pop
dec
mov
sahf
dec
mov
inc
aam
int3
push
cmp
shl
adc
fucomp
in
in
scas
hlt
jb
ljmp
out
movsb
loop
outsb
mov
pop
add
mov
std
mov
fistpll
movsl
push
sub
or
push
dec
push
mov
mov
cmc
lahf
sub
test
loopne
xor
pushf
and
outsl
imul
jecxz
jg
in
sbb
es
jp
jge
bound
in
mov
cmp
jmp
and
sarl
xchg
icebp
inc
jmp
testl
mov
inc
add
addr16
jmp
push
xor
push
addr16
fistpl
inc
jge
adc
mov
sub
hlt
push
xorl
push
clc
jle
addb
jmp
dec
and
xchg
add
loope
mov
int
xor
imul
repz
or
adc
push
fidivrs
cmp
frstor
enter
int3
mov
add
fwait
adc
mov
test
insb
fnstcw
fs
and
cli
and
mov
int
xchg
mov
loopne
ja
test
inc
pop
dec
push
push
mov
adc
mov
and
int3
adc
inc
jae
leave
addb
mov
xchg
jbe
dec
out
loope
addl
push
mov
or
sbb
imul
pop
inc
or
sbb
dec
cmp
jne
or
mov
push
nop
mov
test
in
out
scas
mov
xor
sbb
loop
idiv
jb
push
xchg
xor
test
outsb
mov
insl
jge
mov
lret
xchg
daa
xchg
mov
xor
xchg
dec
notb
xchg
pop
and
dec
popf
mov
add
push
aaa
or
jbe
std
adc
sti
lahf
mov
inc
cli
mov
xor
xchg
pop
jno
xchg
jae
arpl
and
xchg
mov
in
popl
call
xor
push
je
dec
sbb
xchg
pop
push
push
subb
in
xchg
xchg
das
cwtl
xor
adc
repnz
mov
sub
mov
rcrb
adc
cmpsb
imul
test
test
cli
out
jmp
mov
jge
negl
insl
gs
push
pop
mov
js
imul
dec
shll
jmp
movsl
and
lods
stos
push
jo
cmp
inc
sbb
nop
jmp
cwtl
loop
icebp
inc
push
lret
push
push
pop
hlt
es
test
sub
mov
pusha
sbb
ret
sub
les
and
pop
mov
jno
push
inc
leave
dec
or
jmp
cld
mov
mov
out
inc
and
aas
dec
add
mov
stos
xor
sbb
out
pop
inc
dec
cld
jmp
lret
mov
incl
pop
adc
daa
test
push
jnp
xor
sahf
add
or
push
stos
xchg
and
stos
ljmp
jge
cmp
out
loop
imul
and
push
sahf
pop
les
aaa
inc
sarl
push
clc
dec
mov
push
call
xor
add
push
mov
pop
pushf
pop
std
mov
scas
ret
xor
cmp
ja
lret
ret
out
xchg
movsb
push
cmpsb
sub
subb
mov
push
div
jnp
pushf
push
and
test
ss
mov
pusha
pcmpgtd
sbb
es
pop
andl
loopne
mov
pop
lret
mov
jbe
pop
dec
sub
inc
xchg
sub
mov
in
in
into
mov
lahf
mov
mov
cli
inc
xchg
mov
xchg
popf
mov
rclb
sub
push
jmp
jnp
pop
add
push
sarl
lcall
xchg
adc
decl
loope
push
push
test
push
enter
lret
lret
jmp
mov
jbe
push
sahf
inc
push
sub
fwait
in
cmpsl
pop
sub
imul
jmp
xchg
in
negl
pop
jae
jp
test
stc
push
adc
ret
repnz
jno
lret
pop
lret
cwtl
adc
mov
ret
dec
sbb
leave
rcll
ljmp
rorb
jnp
sub
ja
pusha
dec
cmc
sahf
orl
movl
dec
imul
mov
pop
cli
dec
mov
test
adc
inc
and
negb
or
popf
in
jecxz
xchg
xchg
data16
ss
xor
push
and
ret
icebp
xchg
push
popf
add
fdivrs
jbe
push
mov
sbb
dec
incb
jle
mov
dec
jb
shl
lahf
arpl
push
in
les
xchg
inc
and
js
inc
adc
dec
mov
cmp
ds
mov
push
dec
adc
add
nop
popf
and
sbb
lods
inc
xchg
fstpl
add
pop
push
jg
xchg
ja
adc
inc
mov
and
dec
aas
cmp
testb
cmp
sahf
dec
xchg
in
daa
test
lods
sub
faddl
ficoms
test
stos
sub
insl
cmp
push
arpl
test
testb
push
mov
mov
cld
cmp
ds
ret
jno
inc
push
hlt
dec
mov
shufps
push
and
add
aas
mov
icebp
leave
fs
and
mov
leave
or
cwtl
testb
adc
or
iret
add
test
jo
dec
out
pop
bnd
rorl
test
xchg
aad
test
jl
hlt
stc
movsb
dec
add
or
shrl
cmc
jmp
sbb
sbb
cld
movsl
int
lret
lcall
fisttpl
into
add
dec
mov
notl
jbe
mov
push
jnp
push
shll
shll
and
icebp
mov
cmpsl
aas
pop
fisubs
decl
mov
ds
cmpl
out
sti
lds
stos
xor
pusha
mov
and
imul
mov
xchg
dec
fld
add
jae
mov
xchg
sub
xor
dec
rorl
jae
push
sbb
loop
add
mov
xor
jle
mov
adc
fidivrs
repz
clc
fistl
lahf
sbb
sbb
inc
es
push
sub
mov
lea
cmp
mov
xor
add
jae
movsl
jae
adc
bsr
mov
sbb
push
push
sbb
jp
popa
stos
cmc
dec
cli
push
mov
sub
push
xchg
jl
popf
iret
jae
jns
cwtl
mov
inc
roll
fs
xchg
shl
sbbb
cmp
xor
rdpmc
pusha
jae
add
aad
push
or
jmp
popa
xchg
push
ja
dec
clc
int3
jle
loopne
lods
test
shl
lods
mov
je
insl
mov
mov
jbe
aaa
jnp
sbbl
dec
insl
rolb
outsl
idivb
add
xchg
cmp
adc
pop
cs
mov
insl
adc
pop
jecxz
loopne
inc
fs
icebp
pop
js
mov
scas
rcrl
xchg
mov
addr16
aaa
and
jecxz
js
shrb
fwait
sub
out
dec
sbb
cmp
enter
xor
repz
inc
data16
ds
sahf
das
daa
cmovp
adc
stos
dec
push
mov
inc
pop
adc
pop
mov
fwait
jae
xor
jmp
cs
loope
dec
sti
add
xchg
and
fcmovbe
mov
test
jl
outsl
push
and
mov
out
dec
adc
mov
shlb
sbb
add
cmp
int3
sarb
xor
es
cmpsl
jl
add
dec
fsubrs
mov
pusha
fadds
in
mov
shr
pop
cmpsb
cwtl
sbb
ds
sbb
xor
imul
subl
inc
ja
dec
mov
mov
jmp
mov
jae
xor
pushf
jo
jl
inc
jecxz
out
and
cmp
push
bnd
pop
lret
mov
stos
std
cmova
xor
cwtl
mov
test
loop
stos
mov
pop
cmp
lock
cmp
adc
out
mov
lret
sbb
fstp
pop
add
bound
sub
enter
out
mov
jmp
dec
lods
lds
sub
divb
test
andb
mov
aam
xor
pop
frstor
mov
add
fcompl
mov
pop
fs
addb
shlb
out
mov
mov
lahf
shll
pop
paddd
cld
es
imul
cmp
push
out
rol
dec
imul
pop
icebp
sub
dec
cmc
mov
sbb
or
leave
loope
pushf
outsb
xchg
mov
and
mov
xchg
adc
xchg
pop
inc
out
sbb
sbb
or
push
in
loope
dec
mov
pop
hlt
jbe
mov
imul
adc
cwtl
test
push
add
pop
in
xchg
adc
inc
loope
mov
cmp
push
push
jb
push
sti
cli
mov
dec
int
sbb
setg
xor
xchg
dec
lods
or
jno
call
cmp
push
outsb
mov
mov
mov
movsb
adc
mov
mov
push
les
inc
dec
mov
and
and
cmp
pop
fisubrl
push
lds
fildll
std
in
fiaddl
stos
lcall
xchg
popf
jb
or
and
jae
mov
lret
popa
mov
jg
sbb
ljmp
sub
scas
cmp
jae
xchg
sbb
sti
xor
pop
rolb
loope
push
iret
pushf
sub
or
adc
mov
push
cmp
xchg
dec
dec
data16
add
sub
ret
cs
inc
pop
push
xor
mov
sub
jnp
jne
aam
lahf
xor
jle
fsubs
repz
bound
fstp
cmpsb
xchg
jo
into
sti
imul
mov
inc
int3
jns
repz
push
lahf
mov
xchg
ljmp
lcall
cmpsl
ret
sbb
mov
mov
not
push
loopne
or
jmp
dec
aaa
adc
sbb
pop
cld
xor
jl
push
push
neg
jns
push
xor
out
or
pop
mov
mov
clc
jmp
data16
enter
xor
js
adc
mov
mov
pop
mov
inc
and
mov
add
in
sub
stos
xchg
mov
pop
sbb
push
xor
jbe
jle
mov
mov
adc
jne
push
mov
fisubrs
mov
inc
mov
push
adc
xor
out
push
dec
adc
xchg
add
mov
sub
int3
xchg
and
out
or
and
mov
push
cmpsb
mov
or
inc
and
inc
bound
inc
inc
cwtl
jle
mov
mov
pop
fldln2
test
test
xor
das
fwait
inc
pusha
scas
mov
mov
or
jbe
pop
or
sbb
and
and
jg
mov
pop
sub
cmp
mov
or
sbb
xchg
jge
jle
js
adc
iret
mov
cltd
push
mov
dec
iret
sub
sub
pop
push
das
dec
add
in
shl
cmp
add
sbb
call
lock
pop
pusha
push
neg
cmc
mov
mov
arpl
scas
popa
mov
loop
adc
jl
ret
mov
xor
jge
pop
push
pop
lcall
mov
cwtl
cmp
movsl
jo
ficomps
cmp
mov
mov
ds
jbe
mov
mov
aaa
out
sbb
jle
outsb
mov
loopne
and
loope
jae
push
xchg
push
int
sub
stos
mov
or
and
push
and
xchg
pusha
add
outsb
and
iret
adc
adc
and
fnstsw
daa
cmp
pop
jg
xchg
xlat
and
out
dec
and
data16
cwtl
push
add
out
cltd
lds
pop
mov
inc
jmp
push
insl
push
iret
fdivrp
stos
daa
mov
popa
mov
mov
fstps
and
sub
rorb
xchg
pop
idivb
inc
pusha
jg
or
and
clc
dec
mov
push
lret
aam
insb
scas
cli
adc
or
inc
fmull
adc
cli
sar
dec
daa
out
sub
shrl
int
dec
daa
clc
sti
addr16
aas
fisubs
movsb
jmp
cs
mov
jns
sbb
aad
and
xchg
adc
jl
add
fs
fsqrt
cmp
aas
push
in
xor
daa
incb
iret
loopne
pop
xlat
testb
ja
adc
xor
inc
and
fwait
inc
test
clc
add
lret
push
pushf
int3
out
inc
mov
fs
jl
hlt
cltd
push
push
xor
wbinvd
ss
repnz
pop
mov
and
dec
sub
movsb
ds
adc
shlb
or
inc
ljmp
arpl
lcall
arpl
iret
leave
rcl
xor
sbb
popa
mov
icebp
cmp
or
dec
int
jo
add
pop
aad
scas
out
in
jg
mov
rolb
xchg
inc
lahf
cmp
mov
subb
pop
fistpl
in
inc
daa
fiaddl
cld
mov
adc
popa
or
rorb
out
fcomps
std
sbb
push
mov
pop
adc
dec
mov
and
adc
xchg
lds
out
lcall
xchg
stos
push
cli
sub
jl
dec
in
dec
sbb
mov
adc
xchg
jp
mov
lcall
or
xor
fs
push
test
es
repnz
in
fistpl
cltd
cmpsl
shlb
sbb
xor
hlt
pusha
bound
aad
xor
add
mov
scas
fs
push
jmp
lock
and
cmp
push
les
cmp
xchg
imul
push
jne
in
imul
cmp
mov
jno
mov
addb
xchg
hlt
pop
in
cmp
and
inc
mov
xorb
cmp
push
lea
js
pop
jmp
mov
ficoms
clc
adc
mov
and
mov
gs
int3
ret
mov
xlat
ficompl
js
sub
out
in
mov
fldl
stc
test
pop
xchg
repnz
push
mov
jns
xor
lea
cld
addr16
loop
loope
lret
iret
fcmovnb
xor
adc
mov
dec
out
sub
daa
adc
addb
mov
test
mov
or
dec
add
inc
push
test
pop
stos
mulb
aam
xor
mov
xchg
popf
jle
push
popa
push
inc
pop
ljmp
add
stos
data16
inc
pushf
mov
movq
sbb
out
sarb
xchg
out
mov
mov
pop
add
imul
movsb
insb
xchg
dec
mov
and
int3
inc
add
sti
jg
pop
sbb
xor
xchg
add
jb
mov
fcomps
arpl
and
pop
adc
out
mov
scas
cmpsl
inc
pop
pop
es
test
ret
mov
cmp
push
or
ljmp
imul
outsl
xchg
cmp
repz
sbb
jnp
mov
out
push
pop
cmp
fucom
adc
mov
adc
lahf
pop
aas
in
mov
ds
pop
xchg
add
cmp
xchg
add
sub
xchg
in
sbb
pop
adc
add
jp
xor
sub
es
es
dec
jne
repz
xchg
xchg
cmp
and
hlt
rorl
cld
mov
es
pop
add
add
aad
dec
daa
jle
dec
pop
or
dec
mov
mov
hlt
pop
mov
sbb
bswap
ljmp
pop
xorb
jno
inc
pop
mov
mov
add
pop
imul
mov
inc
adc
sahf
bnd
pop
inc
out
rclb
dec
add
inc
sbb
ret
mov
push
xchg
and
xchg
test
push
dec
sub
mov
mov
push
fdivs
xor
cmpsb
in
lret
fcmove
aad
pop
xchg
lahf
xorb
add
aam
ljmp
inc
mov
dec
out
jmp
mov
ja
xlat
jno
ja
push
scas
xor
sbb
rorb
cmp
out
mov
dec
enter
xor
fmuls
shlb
mov
rorl
xchg
or
cmp
not
sti
mov
imul
lods
dec
psrlw
cmpl
pop
adc
in
jle
xchg
popa
ja
gs
lret
push
ss
pop
inc
xchg
xor
repz
sar
popf
pop
dec
pop
dec
sub
pop
shll
sbb
and
push
addr16
pop
and
push
test
fs
fcom
push
pushf
jmp
pop
subl
iret
scas
sbb
out
aam
cli
sbb
adc
mov
or
inc
and
add
push
add
popa
std
sub
dec
inc
mov
sahf
lods
xchg
pop
pop
push
pop
cmp
push
repz
dec
insl
scas
jnp
mov
adcb
outsl
insb
loope
jns
sahf
leave
sub
or
pop
jns
dec
jecxz
or
ja
mov
pop
add
jbe
call
in
imul
rolb
sub
les
int
inc
pop
loopne
cltd
pop
xchg
push
push
mov
pop
mov
inc
or
repnz
or
aam
mov
cld
xchg
out
push
out
pop
aas
ror
pop
xchg
mov
loope
push
and
add
sahf
and
jne
cmp
lods
push
aas
add
or
dec
scas
pop
mov
ss
add
lock
jmp
push
test
ljmp
mulb
add
das
adc
sbb
ljmp
add
mov
inc
cmpsl
mov
fiadds
cli
ds
pop
int
repz
test
insb
daa
push
imull
jb
cmp
lea
sbb
mov
mov
stos
sub
jo
jno
jbe
dec
inc
xchg
mov
lods
or
cmpsl
xchg
or
movsb
inc
rolb
arpl
icebp
mov
leave
cmp
dec
fnstenv
loope
pop
ljmp
sbb
adc
xchg
xor
sbb
jb
xchg
xchg
jns
inc
jp
mov
mov
jle
jmp
pop
sub
add
test
outsb
popf
xlat
mov
pop
sub
leave
dec
xor
mov
xor
js
js
jle
cmpsb
aam
mov
les
jb
lods
mov
jp
sbb
ja
ljmp
push
and
lahf
out
adc
mov
ret
push
mov
jl
push
dec
into
imulb
out
cli
lds
loopne
repnz
push
mov
mov
push
inc
dec
fildl
and
dec
push
stc
dec
mov
pop
pop
mov
push
mov
rorl
add
lods
stos
lret
cmp
add
popa
das
ss
sub
mov
or
loope
inc
test
aad
pusha
adc
mov
cmp
pop
cmpb
mov
or
sbb
jle
into
mov
lea
mov
arpl
jge
pop
or
je
ja
add
mov
inc
ljmp
jbe
push
test
dec
into
int
sahf
lcall
fwait
mov
add
xlat
cmp
push
xchg
mov
mov
jmp
aad
jmp
xor
test
ss
lods
adc
or
pop
es
pop
xchg
add
sbb
pop
push
cmp
xchg
add
lret
dec
cwtl
and
loope
pop
divb
or
pop
cmp
mov
jns
int3
add
xchg
mov
push
jecxz
mov
pop
psubb
fdivr
xchg
cmc
xchg
add
xchg
cmp
push
mov
xor
in
jecxz
jb
sbb
ja
jne
mov
xchg
lahf
fwait
sbbb
dec
je
push
mov
inc
bound
xchg
adcb
fstpl
daa
mov
mov
add
cmp
push
stos
fisubrs
scas
in
mov
dec
imul
jge
out
pop
push
iret
out
outsl
push
adc
mov
nop
add
cltd
add
xchg
adc
or
ss
aas
loopne
imul
adc
mov
xor
leave
scas
push
xchg
or
in
sbb
fcoml
iret
inc
rorl
test
or
ss
lods
lds
arpl
mov
out
loope
jns
gs
imul
stos
mov
std
jge
inc
jo
in
sahf
and
and
in
cmp
aaa
fmul
xchg
or
xchg
cmpl
or
insb
mov
fwait
pop
xchg
out
dec
mov
cmp
scas
dec
int3
mov
mov
jb
loopne
push
jecxz
and
loop
mov
cs
enter
aam
stos
sti
xor
sbb
pop
sub
mov
pop
imul
outsb
pop
psubq
dec
cmp
cmp
mov
push
jmp
test
pop
std
adc
decb
incb
mov
out
jne
dec
mov
xlat
test
adc
mov
mov
das
xchg
jl
dec
mov
or
mov
les
xchg
mov
mov
mov
jb
sub
push
gs
fistpl
adc
sahf
mov
jle
sbb
bound
jmp
or
jmp
sbb
add
aas
lcall
sarb
push
cmp
dec
lret
movsb
xchg
add
fwait
stos
aaa
mov
mov
mul
jbe
or
sub
imul
push
pop
cli
jo
push
out
rorb
imul
sub
or
mov
sbb
sbb
or
out
mov
jae
mov
das
daa
ljmp
push
sbbl
cmpsb
pop
and
addr16
cld
cmpl
iret
into
adc
mov
hlt
jge
add
in
add
sti
push
jp
outsl
mov
out
cmp
mov
es
fwait
inc
out
lsl
movsb
ds
icebp
test
mov
sbb
cmp
aam
les
or
outsb
int
outsb
jno
adc
je
mov
ss
gs
jg
dec
iret
inc
out
popf
jle
mov
je
test
hlt
in
clc
sbb
ljmp
add
or
icebp
and
cmp
mov
cld
ret
sub
mov
int
imul
js
adc
movlps
sub
xchg
inc
test
stc
std
lock
jne
gs
pop
ja
lock
es
push
mov
add
popa
loopne
shlw
mov
pop
inc
xchg
mov
sbb
popa
adc
lods
mov
sub
mov
mov
in
daa
xor
sbb
fisttpll
in
jl
pop
test
mov
mov
call
or
in
ret
pushf
or
inc
push
cli
pop
pushf
adc
repnz
daa
sub
stos
pop
imul
add
mov
xorl
fsubr
dec
sbb
rol
daa
cs
aaa
ljmp
ss
jnp
lret
aaa
and
pop
pop
adc
andb
cwtl
dec
lods
cmp
stc
pushf
dec
sbb
add
popf
ljmp
hlt
adc
sub
movsb
mov
xchg
jns
lcall
aas
push
push
add
sti
lret
mov
mov
pop
pop
xchg
mov
mov
inc
ss
sub
pop
sbb
mov
into
adc
xchg
pop
es
sub
or
loop
stos
leave
aam
xor
sbb
sub
dec
inc
iret
adc
insl
lea
lahf
andb
dec
je
inc
sub
out
aaa
test
jl
std
mov
jg
rcrl
dec
fwait
mov
xlat
arpl
ds
mov
aaa
mov
shlb
jl
jp
hlt
pop
mov
cmpl
pop
add
pusha
into
and
push
or
jle
mov
push
ret
push
push
shll
xbegin
push
clc
lret
push
and
fdivrl
daa
xor
aad
cmp
or
mov
mov
imul
cld
mov
roll
dec
mov
jge
bound
pop
pop
gs
xlat
out
dec
mov
and
das
cli
mov
shlb
dec
fcmove
push
int
xchg
pop
lods
das
mov
test
or
mov
popa
lea
cmp
jle
push
int
cwtl
adc
add
icebp
vminps
mov
cmp
arpl
cmpsb
int
int
imulb
mov
mov
js
and
adc
popa
repnz
pop
inc
sub
mov
fdivrs
xor
out
test
or
or
pop
xlat
inc
cmp
imul
mov
test
inc
push
testb
bound
push
adc
jmp
inc
test
mov
lahf
push
add
jnp
scas
ret
or
outsb
imul
mov
stos
dec
pushf
sub
ffree
rcll
pop
hlt
dec
lds
leave
cmp
mov
arpl
aas
das
sub
popa
jmp
js
cwtl
dec
push
repz
arpl
or
cmp
push
test
arpl
mov
das
pop
pusha
shlb
aam
out
mov
inc
sub
adc
jb
stc
mov
mov
inc
negl
fsubrs
jp
das
lds
mov
lahf
mov
xor
jnp
aad
inc
int3
aas
xor
imul
ficompl
shlb
mov
and
jb
or
sub
and
inc
jle
xchg
test
jmp
jbe
daa
arpl
sbb
dec
pop
xchg
mov
je
mov
sub
inc
cmp
pop
loope
lods
movsl
mov
adc
sbb
arpl
mov
dec
fcompl
rcr
test
push
or
dec
jp
in
jp
mov
out
pusha
jbe
cwtl
dec
adc
push
adc
jp
aas
insl
ss
push
in
jl
cs
mov
cmp
mov
rcll
xchg
imul
add
icebp
xor
int
xor
push
and
int
cmpsb
inc
jl
sub
das
cmp
jae
mov
into
aaa
sub
push
movsl
push
call
loope
pop
push
push
out
repz
push
pop
aam
pop
ss
cwtl
mov
mov
arpl
stc
add
sbb
sub
or
popf
inc
dec
cmp
shlb
iret
adcb
fwait
idivl
dec
sbb
or
mov
push
rdtsc
mov
dec
mov
pop
sbb
adcb
movl
jb
cmp
push
fsubr
stc
push
push
jnp
xchg
movsb
in
pop
sub
mov
xchg
push
insl
inc
jmp
idiv
push
mov
cmc
adc
ret
repnz
jne
xor
in
fcoms
push
pushf
in
movsb
dec
add
bnd
movsb
lods
jns
xor
add
jl
cld
shrb
sub
jb
jle
mov
push
sub
xchg
jle
outsl
ret
mov
adc
push
cmp
cs
sbb
inc
push
dec
pop
mov
nop
pop
dec
jmp
sar
mov
push
imul
mov
leave
inc
sub
push
xchg
test
pop
sbb
pop
sbb
lret
jno
dec
or
daa
sub
mov
dec
imul
mov
add
pop
jge
sub
push
cmp
test
movsl
ljmp
int3
loopne
rclb
jns
adc
mov
pushf
repz
and
xchg
pushf
adcl
push
push
sub
jns
dec
inc
ret
pop
add
adc
nop
jle
in
ljmp
xchg
outsb
ds
pusha
jl
sub
adcl
arpl
jg
add
pop
fnstcw
dec
xor
dec
sub
push
ja
ss
xor
or
icebp
adc
add
stc
loop
pushf
lcall
jge
sahf
add
icebp
icebp
xor
cmp
mov
in
outsl
mov
pop
shrl
sub
and
or
dec
js
lods
dec
fwait
push
push
and
rcrl
das
jecxz
iret
outsb
sbb
pop
std
cli
dec
in
jb
insl
sahf
xor
xchg
and
lds
lea
lret
not
shll
arpl
nop
repnz
sub
and
inc
ret
mov
jnp
loope
lods
subb
testb
lret
and
dec
cwtl
cs
out
cwtl
xchg
in
mov
outsb
push
pop
sbb
push
cmp
sbb
in
in
into
mov
adc
sarb
icebp
inc
jg
cmp
and
pop
mov
insl
daa
inc
mov
adc
test
pop
xor
push
jl
add
jmp
dec
aad
push
or
dec
mov
push
imul
mov
inc
sub
inc
push
jl
pop
jbe
push
add
jmp
sbb
andb
add
jae
ja
shll
xlat
das
es
xchg
cmpsl
pop
call
pop
jb
aas
shr
or
stos
push
mull
and
sub
mov
mov
add
ret
xchg
mov
push
call
xchg
pop
xor
fstl
add
stc
xchg
pushf
scas
repnz
arpl
out
ljmp
decb
mov
lret
add
add
iret
xor
jge
mov
imul
ja
add
ljmp
dec
inc
test
jg
inc
dec
xchg
and
insl
std
pop
scas
or
mov
lods
mov
arpl
stc
and
sub
js
push
jle
cmc
dec
jbe
nop
mov
in
ret
lea
jnp
xchg
dec
jg
out
fwait
add
mov
push
adc
dec
imul
test
and
inc
or
xor
std
stc
daa
mov
add
sbb
mov
iret
xchg
test
sarb
pop
and
insl
or
xchg
stc
push
sub
push
je
pop
adc
les
jl
inc
into
lret
repz
mov
jns
test
ret
repnz
sub
mov
inc
mov
push
add
es
fsts
push
xchg
or
xchg
js
xchg
repz
sub
sbb
jae
fists
mov
js
fiadds
and
imul
mov
pop
xor
dec
mov
sbb
dec
sub
roll
mov
mov
dec
testl
aas
pop
push
push
loop
mov
fndisi(8087
sbb
cld
movsb
int3
lods
mov
or
dec
cltd
lds
loopne
mov
adc
cwtl
int
mov
inc
out
push
xor
jae
inc
push
mov
xorl
dec
out
js
ss
loopne
sub
cmp
mov
and
and
cmp
push
das
and
ljmp
or
mov
pusha
pop
xor
stos
xchg
push
adcb
xchg
aaa
icebp
xlat
fisttpl
jp
fnstsw
cmp
sub
and
ret
jl
dec
mov
or
xor
dec
jmp
icebp
mov
adc
adc
xchg
pop
aas
mov
mov
sarb
aad
add
ret
test
jo
mov
fimull
arpl
mov
sahf
mov
adc
insb
ret
sub
vmovddup
jno
test
jle
fwait
xor
imul
jmp
sbbb
jae
mov
leave
pop
or
es
xchg
mov
jp
int
jp
or
inc
sub
or
add
stos
outsb
int3
daa
std
jl
add
ss
cmp
loopne
lcall
out
pop
daa
aad
scas
xchg
dec
in
incb
push
add
sub
add
xor
movsb
cmp
fiaddl
xchg
push
fsubrs
into
cmpsb
push
mov
sbb
xlat
iret
cmpsb
mov
insb
dec
std
movl
ss
adc
or
and
mov
pop
enter
pop
xchg
es
outsb
xchg
pusha
int
pushf
out
stos
cmpsb
enter
mov
push
mov
push
or
jb
jecxz
add
rcrl
mov
dec
aad
push
pop
sub
in
idivb
sti
adcl
iret
fs
dec
cmp
cmp
xor
scas
stc
mov
mov
xor
inc
ja
or
adc
and
call
sarl
and
sub
xlat
es
sub
cli
lsl
xchg
xor
or
jb
jge
xchg
cmp
and
push
cli
push
fimuls
call
dec
popf
inc
push
leave
or
fstps
jns
mov
fcomps
mov
clc
xor
lds
std
mov
mov
inc
cmc
fcmovnbe
dec
pop
sbb
test
jns
mov
dec
ds
test
call
xchg
pop
stos
mov
out
cmc
and
outsl
cmpsl
data16
xlat
or
iret
test
add
aas
test
push
out
sub
pop
xorl
dec
adc
lods
cmpsb
ja
xchg
cltd
mov
inc
or
insb
mov
mov
cmp
into
scas
xor
icebp
jbe
dec
pop
mov
xchg
loop
aam
xchg
loop
mov
daa
jne
xchg
nop
sub
ja
test
lock
fists
adc
dec
and
cwtl
pop
sub
adc
jl
add
fisubl
clc
addr16
test
cltd
loope
scas
adc
inc
imul
movl
push
xchg
adc
ret
fisubrs
sbb
mov
cld
mov
shl
and
mov
fldl
insl
out
sahf
pop
insb
into
rcl
jge
cmpsl
ljmp
je
sbb
dec
imul
pushf
clc
jmp
sbb
push
mov
pop
ret
out
addr16
jae
xchg
add
xchg
inc
cld
lret
or
loop
mov
fisubrs
xlat
mov
add
pop
out
mov
add
loopne
inc
mov
mov
mov
mov
cmc
in
mov
push
lods
push
jae
dec
scas
jbe
int3
push
add
dec
jge
xorl
stos
xchg
ljmp
cli
mov
lea
mov
sub
es
pop
cmc
and
ss
sbb
push
push
mov
dec
and
gs
fidivrl
cmp
das
cltd
loop
test
xchg
call
add
addr16
jns
sub
jmp
or
xor
js
in
data16
ds
sub
lds
shl
shll
add
and
sub
add
pushf
dec
jge
fsubrs
popf
ss
nop
cltd
data16
in
popa
push
in
push
jg
jmp
flds
xchg
sub
mov
sbbl
fstpt
pop
dec
test
popf
scas
lret
cs
mov
adc
dec
or
cmp
jecxz,pn
mov
in
mov
lock
stos
pop
mov
xlat
rcrb
shl
xchg
push
jecxz
orb
hlt
fiaddl
loop
movsb
insb
pop
mov
mov
aas
cli
dec
mov
aad
stos
movsb
psllq
dec
or
into
and
mov
insl
sbb
sub
pop
mov
push
pop
test
out
rcll
icebp
xchg
stos
cs
out
in
sbb
or
mov
fisttpl
icebp
mov
add
shlb
cltd
data16
in
cmp
nop
imul
lods
clc
cs
lcall
loope
pop
add
or
inc
adc
cwtl
shlb
popf
pop
rolb
or
or
aaa
jo,pt
lcall
mov
mov
shl
cli
or
mov
ss
xor
push
mov
and
scas
loop
mov
sbb
nop
mov
mov
std
and
mov
inc
sarl
scas
dec
jle
mov
into
cmp
inc
pop
ja
push
dec
and
dec
xchg
inc
adc
mov
lock
cmpsl
out
push
sahf
push
dec
imul
shll
pop
adc
vpaddd
enter
lret
lds
sbb
test
jno
jmp
push
inc
sbb
mov
xor
inc
sub
jecxz
fwait
mov
out
adc
push
ss
call
mov
pop
jb
lods
sub
xchg
test
xchg
cmp
and
fadds
mov
add
in
iret
xor
into
fs
and
fabs
inc
cmc
mov
and
inc
clc
jb
arpl
je
inc
mov
lods
sbb
push
popa
mov
fbld
mov
xchg
dec
movsl
and
call
pop
iret
dec
mov
push
cmp
pop
dec
call
test
rol
call
add
gs
cmp
xchg
mov
fistl
mov
mov
cwtl
out
and
mov
and
jg
and
test
out
pop
mov
xchg
xor
scas
mov
jo
nop
js
loop
lret
in
fbld
jne
pop
jbe
adc
jns
jns
dec
xchg
das
fcom
mov
push
icebp
fisubs
fsin
push
dec
hlt
pushf
sahf
jp
test
jge
decb
ds
stc
pop
mov
mov
in
ret
imul
cli
sbb
mov
adc
add
andl
mov
jg
jg
add
les
into
xchg
push
loop
insl
pop
sbb
incl
mov
mov
movsb
push
push
mov
bound
in
and
xchg
dec
jl
rcrl
lea
xchg
pop
lods
push
stos
and
jmp
mov
and
push
jge
push
jmp
push
sub
mov
fcoml
dec
pushw
lahf
cmpsb
inc
out
add
into
cmp
cltd
popa
pop
mov
cmp
mov
dec
jecxz
pop
push
fwait
outsb
cmpsl
xchg
cmc
dec
in
cmp
loopne
push
mov
das
add
or
das
bound
sbb
xchg
inc
and
lcall
sub
idivb
dec
orb
sbb
or
data16
mov
mov
out
dec
add
dec
or
mov
or
outsb
scas
incb
xor
int
push
jbe
add
mov
aas
andb
test
and
mov
test
fsubl
adc
xchg
cmc
adc
add
add
mov
mov
rclb
lcall
mov
fxch
inc
cmp
mov
arpl
cmpsl
push
out
mov
mov
dec
arpl
in
into
and
repnz
dec
imul
subl
adc
xor
xor
jmp
mull
jbe
mov
std
aas
test
in
icebp
push
dec
ds
hlt
cwtl
inc
in
xchg
sbb
sti
dec
jne
fcompl
repz
sub
lcall
sbb
es
sub
icebp
or
cltd
cmp
sub
divl
lret
nop
in
xchg
adc
jmp
stos
scas
pop
mov
sub
pop
cmp
loope
out
stc
jns
jge
scas
inc
pop
sub
pop
mov
mov
adc
add
mov
sbb
dec
jbe
test
and
push
inc
push
test
pushf
aas
fstps
jle
and
mov
jae
outsb
pop
test
fidivrl
adc
sbb
mov
add
ffreep
or
sub
sbb
mov
dec
rclb
test
hlt
add
pop
adc
cmp
lock
pop
mov
loop
xchg
les
aaa
outsb
dec
in
xor
sub
or
sahf
add
sbb
cmp
std
int3
xor
pop
aas
adc
shll
inc
scas
iret
sbb
movsl
xchg
dec
and
adc
test
or
nop
or
add
jae
les
fwait
mov
xchg
loopne
fwait
pusha
movsb
push
popf
popf
insl
jbe
sbb
sub
lret
pop
js
pop
jp
push
jo
jbe
or
repnz
outsb
mov
pop
push
inc
test
jae
cmpsb
jmp
pop
push
hlt
scas
cwtl
cmp
mov
je
scas
lret
pop
or
jae
push
pop
std
push
jg
fcmovnu
dec
pop
xlat
popf
jb
es
mov
and
test
fs
shlb
and
aam
idivb
call
push
jmp
ja
push
fisttpll
cmpsb
dec
cmp
jmp
cmp
xor
ljmp
xor
mov
sbb
push
or
std
add
ja
das
adc
mov
mov
xlat
mov
es
jmp
pop
pop
push
mov
ret
push
inc
jne
mov
insb
push
push
cltd
cli
push
push
lea
push
sbb
or
sub
movsb
movq
sarl
push
or
in
test
inc
jne
pop
cmp
js
hlt
inc
fsubrl
jne
push
cmpsl
add
lret
jae
dec
call
sbb
mov
scas
cmc
cmp
jb
xorl
jecxz
mov
or
lret
add
adc
cmp
stos
sub
sbb
adc
xlat
mov
loopne
inc
xorb
js
mov
fldcw
pop
enter
rcrb
mov
dec
popf
loopne
outsb
movsb
out
je
repnz
in
xchg
add
nop
fstl
sahf
pusha
push
mov
cmpsb
faddl
sub
push
push
xchg
stc
scas
pop
fcmovnu
outsb
pushf
jg
ljmp
mov
inc
les
mov
xchg
pop
jne
and
push
mov
mov
cmp
aaa
into
xchg
and
inc
add
out
enter
mov
mov
icebp
cmp
and
insb
dec
add
fdivrl
insb
shlb
in
cs
ret
mov
push
mov
data16
es
insb
cmp
loope
dec
cltd
push
mov
pop
imul
popa
mov
adc
cld
cli
ljmp
cmp
inc
xchg
push
fisttpll
adc
outsb
jbe
cmc
cmp
sub
pop
pop
lods
fs
test
or
pop
sub
shrb
lds
sbbl
daa
sarb
adc
mov
xor
fstl
dec
adc
pop
in
and
cld
int3
aam
push
dec
push
in
cmp
fistpll
shrl
sahf
and
nop
fsubrs
movsb
jae
andl
mov
cmp
insb
loopne
xor
xor
cs
popa
frstor
out
in
out
cmpsl
push
push
push
jmp
jge
and
sub
add
flds
cmpsl
int3
clc
and
dec
add
mov
call
andb
iret
dec
test
ds
sub
adc
ret
stos
sbb
pop
jno
fdivl
xchg
imul
pop
mov
adc
lahf
pop
mov
ficomps
lcall
pop
jb
mov
and
inc
daa
call
stos
or
mov
sbb
lods
decl
mov
subl
inc
in
lret
daa
cmpb
xchg
mov
mov
hlt
out
data16
and
aas
adc
pop
fdivrs
lock
mov
lds
xor
fdivrl
xchg
mov
lods
lahf
sbb
or
in
std
das
mov
sbb
sbb
shlb
mov
push
or
popf
aas
inc
xor
pop
icebp
stos
push
sbb
pop
cmpsl
out
les
jns
sub
jbe
ja
imul
push
mov
test
daa
jp
mov
bound
cmp
ror
repnz
sbb
xor
sahf
movb
mov
jmp
jge
in
xchg
cmp
ret
ficomps
cmp
add
cmp
xchg
lcall
cmpsb
jno
mov
mov
call
xor
ljmp
push
mov
rclb
sbb
fsubr
inc
lods
cmc
mov
jae
push
and
jmp
arpl
push
mov
lcall
repz
ljmp
lods
sub
pop
ffree
xorl
push
pusha
hlt
xchg
daa
stc
movsb
sbb
inc
and
cmp
push
outsb
mov
sarb
ficompl
std
dec
pop
js
sub
fcmovu
inc
xor
add
bound
sub
pop
rclb
sub
js
jg
and
pop
in
mov
xchg
loop
jno
sarb
call
pop
xchg
adc
fucomp
sbb
lock
push
mov
pushf
mov
mov
cwtl
xor
sub
enter
fmull
sbb
mov
xor
xchg
jae
outsb
nop
shrl
cmp
test
in
mov
flds
movsl
in
add
mov
jg
ret
fwait
pop
dec
stc
leave
fcoms
rolb
stc
or
sbb
lods
les
dec
je
cltd
mov
cwtl
sti
pop
ret
fidivl
je
cmp
cmpsl
test
faddp
orl
sub
xchg
jne
or
jno
adc
jnp
push
push
sti
enter
inc
jp
pop
popa
bound
dec
out
stos
dec
pop
cli
dec
mov
imul
xchg
xchg
out
je
xchg
mov
pop
push
out
in
inc
std
jecxz
xchg
into
or
pusha
test
es
or
mov
scas
jae
jmp
pusha
cmp
pop
xchg
mov
data16
dec
fs
mov
arpl
cmc
movsl
push
repnz
lock
cmpsb
jbe
jle
inc
fimull
or
bound
int
jns
out
fnstsw
inc
or
iret
xchg
and
xor
jae
sub
inc
cmp
jecxz
lds
xor
xchg
das
jp,pt
div
mov
dec
fimuls
repnz
test
add
daa
ret
andb
push
mov
fucomp
and
int3
aad
mov
sbb
es
repnz
aas
div
cwtl
dec
jge
stos
icebp
movsb
inc
jg
sub
and
loopne
mov
icebp
js
cmp
lahf
and
insl
pop
mov
mov
and
add
aas
inc
imul
push
jmp
lods
pop
out
adc
adc
pop
or
movsb
xor
mov
inc
jb
jne
vdivps
sbb
ja
xor
push
out
xor
jp
inc
pop
daa
cmpsb
xchg
paddw
imul
inc
movb
insl
xchg
cmp
aas
pop
filds
fwait
das
mov
dec
fdivrl
sbb
ja
add
xor
cmp
ja
dec
cwtl
pop
sub
aas
inc
push
loope
in
jp
sub
dec
andb
mov
outsb
or
loopne
pop
test
jle
dec
sarb
inc
lock
ret
inc
or
mov
inc
cmp
rol
in
push
dec
dec
and
push
shrb
and
scas
dec
mov
mov
sub
jbe
and
dec
pop
xchg
mov
or
fdivs
jne
rorb
dec
or
iret
jmp
mov
into
mov
cmp
fwait
xor
repnz
imul
fwait
xor
or
inc
push
repz
and
jno
cmp
cmpb
push
jno
pusha
xchg
inc
and
adc
mov
push
ss
and
mov
adc
inc
add
lods
pop
aad
icebp
xchg
sub
add
jge
or
adc
add
cld
call
xchg
jno
push
inc
cli
fisttps
inc
cltd
mov
add
iret
fstpt
movsb
push
rcr
cmp
adc
pop
sub
addr16
ja
mov
jl
mov
shrb
push
cmc
sub
imul
bound
call
nop
data16
jecxz
mov
inc
sub
add
cwtl
daa
lds
and
fs
or
out
shrb
pusha
cmp
cmpsl
inc
ds
jmp
sub
mov
in
fdivrs
xlat
dec
pop
lret
sub
mov
cmp
pushf
mul
inc
xchg
add
sbb
xor
mov
pop
xor
xchg
mov
imul
pop
ljmp
dec
jbe
lahf
mov
mov
push
push
push
jg
add
push
hlt
fstpl
movsb
mov
stc
mov
call
lods
js
cmp
dec
jmp
inc
ficoms
push
fs
mov
cmc
add
inc
fnsave
add
cwtl
ja
fisubs
sbb
dec
hlt
adc
cmp
imul
mov
bound
add
icebp
jecxz
adc
push
fisttps
fdivs
inc
mov
add
outsl
lods
mov
xchg
aad
ljmp
xchg
and
in
mov
mov
push
adc
aam
popa
movsl
sub
lock
out
lds
cmp
jl
adc
ljmp
int
mov
sub
movsb
idivb
dec
dec
dec
mov
ljmp
sub
jbe
mov
and
sbb
cmp
or
push
or
pcmpeqw
inc
hlt
sbb
bnd
enter
jbe
push
xor
pushf
or
fstl
xor
out
cmpsb
fcmovu
inc
xchg
ficoms
test
xchg
in
xor
es
jmp
jne
cmp
sbb
pop
ss
push
push
and
imul
mov
adc
rclb
in
in
rcrl
adc
in
fmul
fidivrs
cltd
movsb
mov
lcall
fimull
xchg
sbb
fcoml
divb
pop
mov
subb
ficomps
in
sbb
in
mov
dec
jae
mov
rclb
fincstp
dec
and
jne
js
popf
inc
xchg
dec
adcb
mov
in
dec
std
in
cmp
sbb
lods
lods
repz
aam
je
lret
jl
sbb
ljmp
lret
addr16
testl
mov
jmp
nop
leave
inc
ljmp
add
mov
and
fs
sarl
xor
shlb
jae
push
roll
mov
mov
xor
dec
sub
bound
out
arpl
adc
mov
xchg
xor
xchg
mov
push
bound
inc
inc
inc
xor
fstp
std
pop
outsb
jae
sub
xor
arpl
lea
divb
stc
fcoms
jecxz
out
inc
ja
out
push
ret
push
inc
adc
lods
dec
data16
adc
push
xchg
sub
sbb
jb
or
dec
dec
iret
jne
out
repnz
adc
lea
addb
clc
cmpsb
loop
lahf
dec
and
cwtl
sbb
stc
sbb
pop
ja
jnp
jns
jmp
pushf
adc
in
xchg
in
xor
lcall
fcompl
jle
cmpsl
hlt
std
jnp
push
sarl
imul
sbb
jo
dec
xor
dec
in
push
xlat
mov
dec
dec
xor
pop
test
divl
adc
mov
sahf
jl
call
test
dec
push
mov
stc
aas
sbb
dec
clc
nop
jg
andb
cmp
pop
push
jp
outsb
mov
mov
dec
hlt
cmp
inc
in
mov
lods
test
fisubs
fadds
sub
dec
repnz
mov
push
sbb
js
push
repnz
and
dec
pop
cmp
sub
mov
push
mov
pop
sub
mov
adc
push
jge
xor
jecxz
js
pop
sub
xor
mov
xchg
mov
pop
mov
push
hlt
inc
test
xor
imul
xor
sub
xor
aad
fcoml
jecxz
xchg
data16
adc
popa
js
arpl
push
jg
adc
lock
js
push
mov
xor
js
inc
xor
jnp
pop
aad
repnz
xlat
sub
cmc
test
ds
push
xchg
fsubp
nop
inc
mov
jne
or
mov
push
fisttpl
pop
inc
or
jne
xchg
loopne
push
daa
fnstenv
stc
outsl
aaa
data16
sbb
cltd
mov
in
cmp
push
cmp
adc
xor
hlt
das
imul
inc
js
and
neg
pop
mov
pop
ljmp
jp
test
outsb
loopne
lods
xlat
jb
cld
push
xchg
outsb
cwtl
or
int
repnz
in
and
movsl
xchg
ret
popf
cwtl
push
outsl
sbbb
aas
xchg
mov
inc
pushaw
cmp
jb
jbe
xchg
popf
mov
out
dec
jae
loop
sub
hlt
adc
outsl
lock
cmpsl
jmp
mov
jnp
add
xor
push
mov
mov
xor
leave
sub
iret
dec
pop
cmp
fsubs
cltd
jmp
pop
adc
pushf
xchg
jbe
xorl
mov
das
mov
mov
jno
sti
sbb
cmc
rorb
jmp
scas
jl
movsl
push
jmp
out
sbb
repz
xchg
out
push
loope
rclb
cltd
inc
js
sbb
lahf
and
push
stc
cmp
mov
aas
add
enter
popf
ds
stos
cld
and
int3
adc
into
arpl
adc
dec
sbb
iret
frstor
insl
pop
mov
sbb
adc
sbb
fcmovu
inc
push
in
das
mov
stos
mov
inc
mov
xorb
mov
cmc
add
and
push
mov
out
je
dec
daa
aad
bound
cmpb
xchg
sub
pop
xor
mov
ljmp
arpl
sahf
movsb
clc
adc
adc
loope
mov
mov
cmp
ds
jnp
test
pop
std
lret
repz
and
in
loope
insb
test
sbb
int3
mov
cli
or
mov
js
out
stos
pop
jae,pt
add
cmp
aad
mov
inc
xchg
xchg
mov
and
lods
cld
insb
cmp
xor
add
lahf
aad
sbb
cltd
or
das
jge
add
stc
xorl
cmp
sub
jne
daa
push
or
test
pop
push
push
jp
sub
in
cmp
push
aam
add
jb
cli
adc
cmp
and
jb
neg
xchg
arpl
sub
push
shl
or
sarl
in
xchg
xchg
mov
loope
xor
js
pop
mov
push
and
into
push
js
dec
inc
cltd
orb
cmpsl
loop
js
ss
push
fdivl
xchg
adc
dec
or
sbb
bound
sarb
push
leave
dec
inc
mov
add
test
push
jnp
subb
ret
xchg
push
shlb
loop
mov
scas
sub
ja
dec
lds
mov
loope
outsb
sbb
mov
push
mov
cmpsb
dec
out
rol
fnstenv
sbb
fs
push
add
jnp
popf
mov
xlat
gs
adc
loopne
mov
cltd
aas
pushl
push
mov
sub
inc
pop
mov
pop
and
pop
xor
in
test
mov
mov
mov
lods
clc
xor
push
int
addr16
mov
movl
xlat
push
cmp
mov
xchg
jmp
insb
sti
les
cmpsb
and
cmp
mov
fldenv
add
out
add
jnp
push
add
icebp
push
dec
into
jg
pop
fwait
out
hlt
sbb
push
push
outsl
aas
outsl
inc
faddl
dec
mov
mov
insl
jb
stos
mov
stc
sub
sbb
mov
mov
jne
push
cwtl
ret
jle
das
mov
xchg
lods
stos
sbb
dec
xchg
mov
add
mov
add
sbbb
cmpb
loope
and
mov
and
and
add
jno
outsl
and
ljmp
dec
lret
js
pop
push
push
mov
repz
popa
add
pop
lods
clc
ljmp
push
int3
inc
dec
cmpsl
imul
sbb
addr16
sti
push
insb
pop
mov
xchg
jp
cmc
nop
pop
pop
fwait
inc
scas
pop
mov
sbb
fmul
mov
jae
dec
sbb
inc
es
dec
add
add
idivl
mov
lods
lcall
jno
cmp
lcall
jecxz
push
jne
mov
popa
rcrb
cmp
loope
out
adc
push
xchg
fdivrs
add
mov
jns
xchg
inc
mov
mov
lret
and
jecxz
jno
lret
add
mov
inc
xor
jbe
in
xchg
cmp
cmp
mov
mov
xor
dec
idivl
push
push
mov
dec
js
pop
ljmp
xchg
ret
xchg
andl
dec
inc
inc
adc
call
and
sbb
loop
jecxz
roll
push
adc
test
sub
dec
inc
mov
xlat
adc
insb
in
jp
ljmp
je
js
adc
imul
and
xchg
dec
popw
or
push
dec
lret
push
and
inc
mov
adc
imulb
jnp
and
bound
dec
push
push
je
sahf
add
sub
inc
es
dec
and
das
or
xchg
mov
dec
jnp
clc
lock
adc
fmuls
mov
mov
sbb
adc
call
test
stos
cmp
ljmp
mov
mov
pusha
rclb
mov
aas
dec
movsl
mov
nop
jno
push
inc
xorl
je
call
jl
jbe
mov
fs
xor
dec
das
loope
and
clc
aas
inc
in
iret
and
in
fwait
jbe
sbb
stc
aaa
xchg
or
loope
roll
xor
mov
aad
mov
jle
push
cmp
cmp
add
inc
adc
in
out
xorb
out
jo
push
and
pop
dec
sti
and
cld
or
mov
andb
test
inc
rcr
xchg
pop
out
addr16
jmp
jecxz
aad
pop
aam
add
loopne
insl
cltd
or
imul
jb
sahf
xor
idivl
fwait
or
insl
push
int3
mov
cmp
add
das
adc
andl
nop
test
sbb
dec
inc
cmpsb
into
cld
xchg
adc
test
inc
lods
pushf
cmp
mov
push
out
shlb
subb
xchg
popa
push
push
inc
fsubl
sbb
jecxz
repz
mov
retw
dec
sub
or
mov
push
inc
out
call
in
pop
lods
das
or
push
sbb
pop
rolb
or
and
dec
pop
faddl
mov
ror
popf
cmp
sbb
test
data16
pop
xchg
fisttpll
mov
cli
add
mov
rorl
rolb
testl
lods
add
xchg
sbb
stos
in
gs
ss
cmc
mov
or
stos
push
enter
bt
or
insb
and
daa
sub
or
fcmovnu
xchg
sbbb
enter
jg
mov
xor
mov
fwait
sub
xor
or
jle
mov
stc
ljmp
inc
pushf
add
shrb
sub
mov
aad
xchg
xchg
xor
xor
rclb
mov
rcrl
daa
outsb
rorb
clc
andb
mov
bnd
gs
inc
mov
call
jge
mov
shr
sub
sub
lret
enter
in
testl
adc
decl
pop
movsl
cmp
mov
sti
ds
into
jmp
loop
add
pop
cld
std
scas
imul
ljmp
dec
test
xchg
and
ds
inc
jne
int
in
sub
inc
lret
push
and
xchg
xor
push
in
sbb
mov
sbb
xchg
dec
jae
sub
test
out
xor
xchg
and
jecxz
mov
cmp
and
enter
pop
or
stos
cmpsl
ret
and
pop
push
xor
decl
sub
jmp
xchg
or
rcrl
ficoms
sbb
mov
call
lret
popa
inc
sbb
dec
xor
scas
movsb
jl
jno
in
daa
sbb
cmp
addr16
dec
stc
inc
push
mov
sbb
sbb
negl
in
and
test
fildll
andb
mov
dec
jae
ficoml
mov
nop
add
jo
xor
push
mov
xchg
push
cli
fimull
leave
rcrb
jmp
xchg
repz
adc
push
and
xchg
pand
lods
mov
xor
repz
push
sbb
daa
repz
rcrl
lcall
push
cmp
push
jns
xchg
pop
movsb
and
adc
jns
add
xchg
adc
dec
aad
js
or
cmp
les
mov
mov
bound
lds
addr16
sub
sbb
add
inc
test
cmpsb
jnp
aaa
mull
cmp
jo
mov
rorb
jmp
inc
cmpsl
sbb
mov
aaa
mov
dec
test
cltd
add
jecxz
bound
xchg
sub
adc
lcall
jp
in
mov
xor
aad
xor
mov
inc
jno
cmpsb
jle
fs
mov
nop
fwait
sahf
sbb
push
clc
mov
mov
fadds
inc
dec
test
dec
dec
test
jb
or
cli
mov
rorl
fdivrs
roll
loope
jb
xchg
xor
ljmp
test
jbe
popf
lods
xchg
pop
sti
xor
sub
sub
les
sub
test
xor
scas
imul
es
cmp
xor
ret
popl
movsb
xchg
mov
lret
ror
lods
shr
outsl
sti
lea
xchg
loope
fistl
cmp
fcompl
js
xchg
mov
mov
pushf
mov
push
pop
xor
adc
das
and
dec
popa
mov
mov
std
into
lcall
mov
ret
xchg
mov
xchg
cmp
lcall
lahf
xor
mov
mov
and
sub
lods
cs
cmp
mov
js
nop
add
lea
dec
pop
or
cmc
cltd
mov
in
xchg
jp
xchg
dec
dec
push
repnz
out
lcall
test
add
and
test
mov
pop
cmp
cmp
jns
sbb
push
mov
loope
outsl
ds
and
adc
loopne
ljmp
fistpl
mov
cmpsb
pop
or
pop
dec
das
fs
daa
xor
dec
cmp
jle
out
xchg
jae
andb
add
sub
pop
mov
jbe
movsl
jp
pop
mov
mov
dec
test
adc
push
cmp
lcall
and
subb
adc
js
add
repnz
cmpsl
dec
data16
clc
inc
push
movsl
sbb
pop
outsb
cltd
mov
and
pop
inc
mov
jge
or
mov
push
xchg
rcrb
in
xor
push
insb
inc
or
or
pop
add
lcall
xchg
pop
inc
sub
xchg
movsl
push
mov
clc
outsb
add
call
xor
insl
orb
or
les
mov
inc
xchg
sbb
add
out
test
repz
inc
js
or
xchg
filds
in
stos
popa
imul
push
mov
push
cs
daa
loope
ficomps
mov
mov
mov
add
and
out
sarl
jne
add
sub
xchg
and
scas
and
cmpsb
loop
lret
jo
mov
jbe
es
imul
addr16
and
pop
cs
dec
jecxz
lds
push
push
lods
xlat
sbb
mov
arpl
js
lcall
push
dec
mov
xchg
cmp
shl
jp
fisttpll
pop
add
les
dec
push
xchg
loop
das
mov
pop
nop
inc
nop
xchg
lock
in
mov
or
sbb
das
mov
repz
outsl
data16
mov
add
add
xchg
adc
not
pusha
pop
aas
inc
dec
fadd
push
inc
pop
das
dec
inc
jmp
in
fldenv
add
in
adc
out
or
xchg
mov
out
insl
cltd
and
cli
or
inc
and
jno
sbb
imul
inc
sub
ret
popa
xlat
imul
cmp
pop
imul
cli
in
push
sbb
ret
or
pop
out
addr16
lret
movb
xor
cwtl
dec
push
pushf
in
mov
or
fsub
sbb
cmc
or
dec
jge
sub
mov
mov
icebp
xor
jl
dec
add
loope
int
dec
stos
cmpl
insb
jae
mov
dec
imul
mov
mov
push
dec
inc
mov
or
shlb
popf
movsl
xchg
rcll
cs
mov
and
xchg
addr16
mov
into
outsl
addr16
inc
adc
rcrb
pop
cli
sub
sbbl
aam
cltd
insl
insb
mov
cmc
lret
gs
adc
push
lods
ljmp
insb
jne
add
cmp
dec
ds
cltd
incl
test
cli
xor
sub
inc
repnz
negb
cwtl
fwait
inc
cli
stos
iret
cwtl
sub
and
pop
jnp
xchg
fwait
add
pop
xor
xor
mov
add
inc
in
cld
sbb
rol
repz
sbbb
dec
push
lods
rcr
inc
inc
mov
cltd
sahf
jl
sbb
sub
cwtl
sbb
pop
shlb
dec
loope
imulb
rcrl
mov
xor
cmpsl
cmc
call
xchg
pop
push
xchg
mov
bound
push
sub
lea
xchg
test
push
adc
leave
shrb
mov
inc
movl
imul
mov
dec
leave
iret
mov
mov
and
push
imul
or
xchg
adc
ja
cs
cmpsb
pop
imulb
xor
arpl
decl
xchg
inc
sarl
pop
push
leave
mov
and
data16
mov
xor
pop
cwtl
mov
popf
jns
mov
arpl
dec
jmp
xchg
add
repz
cli
xchg
aam
mov
mov
popf
dec
int3
mov
mov
aas
push
out
mov
inc
sbb
orl
in
mov
pop
inc
pop
jnp
mov
lock
cmp
outsb
xor
mov
inc
fisttps
push
xor
dec
dec
and
jp
shrb
inc
add
outsl
ja
je
adc
dec
ss
mov
fisttpll
ret
jb
iret
imul
fdivrl
jg
fld
sub
inc
pop
push
jl
push
negl
dec
decl
sub
lock
mov
sar
scas
jbe
mov
inc
push
in
addb
bound
mov
add
lret
fcompp
xor
sarl
jg
loopne
gs
pop
aas
push
mov
adc
pop
enter
les
jb
or
out
mov
xchg
jp
int
dec
leave
sbb
push
jp
xchg
repnz
jmp
movsl
lcall
jg
out
and
inc
sti
dec
xchg
pop
push
call
movsl
fwait
fwait
add
dec
fcompl
int3
imul
sub
pop
and
fldenv
popf
popa
mov
je
sub
out
dec
sbb
add
mov
shlb
cmp
jo
icebp
test
or
rorl
mov
sub
imul
jne
mov
out
add
cltd
sbb
jnp
jl
int3
sahf
fsubrl
ret
in
icebp
push
fsubp
jle
jae
cwtl
inc
lret
test
outsl
sub
loopne
pop
xchg
mov
xchg
or
push
je
test
sbb
mov
or
cmpsb
cmp
call
nop
xor
adc
sbb
adc
mov
jle
mov
push
jge
insb
lods
dec
adc
sbb
add
jnp
pop
push
mov
out
mov
pop
sbb
test
add
inc
das
and
ret
sub
addl
popf
xor
scas
mov
lods
lret
adc
out
ljmp
dec
lcall
shll
mov
les
push
outsb
sbb
cli
std
jno
mov
xchg
cmpsl
stc
pop
lcall
bound
xchg
dec
jecxz
xor
out
mov
in
cmp
mov
push
adcl
frstor
inc
je
mov
fcoms
xchg
jecxz
or
in
cs
repz
dec
inc
dec
mov
int3
xor
mov
sub
mov
xchg
dec
ja
mov
scas
inc
or
push
pop
mov
xorb
sub
mov
xor
cmpsb
sub
ja
inc
cmp
loopne
andl
sbb
cld
daa
or
add
cli
fnsave
mov
cwtl
loopne
mov
test
inc
fldt
lret
mov
cwtl
int
adc
bound
std
or
jno
stc
arpl
pop
cmpsl
jo
push
mov
jno
jo
and
stos
fbld
pop
dec
jle
gs
push
xchg
in
sub
ja
leave
mov
inc
and
idivb
bound
jne
dec
call
std
mov
sub
scas
inc
pushl
dec
aam
aam
cmp
popf
push
out
sbb
cmp
mov
aas
inc
ror
inc
push
ss
inc
ss
stos
and
mov
mov
and
xor
inc
outsl
cli
fnstsw
xor
add
ljmp
cmp
mov
sub
fwait
enter
mov
sbb
push
adc
imul
jns
sbb
xor
xor
push
rcrb
mov
pop
sahf
lahf
or
mov
push
dec
scas
jle
jp
addl
pop
add
dec
leave
inc
jnp
rcll
lcall
pop
xchg
dec
add
stos
leave
test
stc
xor
icebp
rcrb
scas
sub
jo
jge
insl
ljmp
mov
into
ds
pop
mov
or
jecxz
pusha
and
rolb
cmp
mov
pop
mov
int
sub
mov
jns
and
xorl
xor
mov
repz
xor
and
inc
or
mov
fdivrs
fmull
sbb
in
dec
outsb
mov
cmc
dec
dec
fcmovnu
in
gs
cs
out
and
fwait
xchg
movsb
cmp
add
push
fisttpll
cwtl
xchg
outsl
push
js
or
or
mov
push
gs
pop
mov
mov
sub
and
mov
nop
adc
and
imul
adc
push
dec
daa
mov
adc
adc
sti
mov
rclb
je
test
adc
les
dec
and
dec
xor
cmp
add
jnp
andb
insb
stos
lcall
xor
pushf
xor
mov
out
scas
dec
cli
aad
adc
xor
jno
mov
cltd
lods
insb
adc
jae
jb
lods
xor
lds
insl
insb
ja
jbe
mov
testl
aad
jmp
sbb
iret
mov
pop
aad
lock
rcrl
pop
leave
icebp
sarl
push
ret
outsb
movsb
mov
icebp
icebp
iret
stos
push
das
shll
inc
pop
leave
adc
insl
or
loopne
push
xor
ss
adc
push
xchg
ret
adc
sbb
xchg
aad
adc
stos
dec
shll
cmp
sbb
loope
push
fstpt
or
xor
xchg
nop
orl
inc
cmp
jle
or
cmpsb
and
dec
sub
shrb
orl
jp
mov
jle
pop
bound
shll
ret
das
adcl
mov
pop
sub
lahf
xchg
ret
mov
dec
adcl
ljmp
jecxz
pop
dec
jne
pushf
in
cli
dec
jns
bound
push
ja
adc
inc
sbb
je
cwtl
fucomi
jno
push
outsb
jmp
bound
call
cmp
in
and
ss
adc
pop
mov
mov
pop
popa
xchg
push
adc
test
or
inc
ror
mov
jae
aad
add
xor
xchg
mov
cltd
pop
leave
sub
mov
sbb
test
push
mull
pop
into
xor
pop
outsl
inc
cmp
jae
jmp
test
dec
sub
inc
push
mov
ret
push
mov
std
lret
hlt
pop
movsl
dec
cmc
xchg
push
test
pop
xor
mov
xchg
sub
cmc
lock
mov
sub
mov
mov
add
push
push
imul
cmpsb
and
cmc
clc
jecxz
xor
mov
adc
and
mov
jmp
rcll
mov
xchg
mov
enter
cmpsl
popa
jle
push
push
or
lcall
xchg
sti
sub
roll
push
jne
lds
movsl
ret
adc
adc
cmp
sti
test
mov
inc
push
in
fsts
fwait
pop
mov
jno
push
jbe
cmp
lods
aaa
jns
cmpsb
mov
dec
push
fistps
add
mov
adc
mov
lahf
pusha
call
mov
pop
xchg
out
lahf
rorb
lcall
testb
sti
mov
in
xchg
out
fsub
sub
call
jo
sbb
out
sub
sub
push
dec
or
rorl
enter
cli
mov
lret
jae
push
jno
jbe
ja
cmp
fidivrl
out
push
xor
lock
xchg
sub
andl
lahf
sarb
addb
gs
add
cmp
sub
mov
icebp
mov
push
shll
insl
xor
pushf
sti
and
add
sub
fmuls
mov
lods
out
or
andnps
mov
cwtl
cmp
stc
leave
fs
fimull
test
mov
inc
insb
clc
push
cmp
repnz
xchg
aaa
call
jnp
pusha
and
rep
inc
mov
sub
xor
mov
dec
mov
pop
mov
inc
divb
divl
inc
jno
pop
sarl
xchg
push
stc
lret
jge
sub
test
test
jg
dec
out
pop
out
dec
lock
bound
test
data16
je
in
cli
dec
inc
cmc
and
adc
clc
bswap
inc
jge
xor
nop
adc
mov
lock
inc
sbb
es
push
cltd
xchg
xchg
lods
xor
or
in
mov
pop
push
sub
push
push
clc
lcall
push
shll
dec
jo
je
stc
mov
pop
cmp
fsubs
gs
or
icebp
les
int3
outsb
gs
cmp
in
mov
aaa
hlt
pop
push
sbb
dec
sub
sbb
or
sbb
jp
inc
imul
sub
inc
push
mov
scas
pusha
es
fldl
inc
dec
dec
in
xchg
dec
out
pop
mov
adc
ficompl
mov
adc
loope
out
hlt
pusha
inc
jns
test
ja
test
xchg
and
xor
adc
inc
jno
mov
fldl
sub
fmuls
iret
test
inc
lahf
fisubs
push
popa
adc
jbe
jg
in
clc
jp
cmp
hlt
sub
test
jne
out
cltd
arpl
mov
enter
fcoms
sbb
lods
push
fwait
insb
nop
popa
push
jbe
lret
sbb
mov
xchg
mov
pop
xor
lods
testb
jge
pusha
das
xlat
cmpl
shr
mov
mov
fiadds
ret
dec
jo
mov
int
add
dec
adcl
js
ja
fcoms
in
xchg
jge
cmp
mov
dec
inc
das
or
call
fnstsw
data16
push
jg
jnp
xor
dec
mov
icebp
fdivl
push
pop
cmpsl
test
je
and
outsl
mov
fs
cmp
mov
inc
jo
fdiv
mov
inc
add
fcmovnbe
shrb
out
repnz
rclb
aam
js
inc
and
sbb
and
mov
jnp
les
cmpsl
test
int
clc
pop
sub
stc
icebp
loopne
fisttpll
dec
dec
sbb
pushf
pushf
inc
in
pop
xchg
mov
outsb
imul
imul
out
or
cltd
push
push
jo
dec
sbbb
dec
insl
fbstp
add
inc
mov
pop
push
inc
rolb
inc
sbb
fidivs
pop
jecxz
pshufw
sub
inc
test
fmul
cld
inc
imul
or
fadd
adc
xchg
insl
pushf
stos
or
adc
aas
bound
push
or
pop
outsl
leave
ret
out
jae
push
sub
cmp
sub
jb
lea
push
shll
inc
mov
stos
jns
out
sub
sarl
mov
fwait
pop
subl
outsl
inc
lds
test
fs
imul
inc
push
ljmp
and
inc
mov
and
inc
xor
pop
movsl
fsubrl
loop
jle
popa
mov
test
adc
pop
test
popf
sbb
lods
dec
inc
jmp
into
inc
push
push
mov
and
cmc
outsb
cwtl
ret
stos
into
movsb
pop
push
lock
mov
add
fistps
rcll
dec
pop
cmpsl
out
paddusb
rclb
push
inc
fstpt
sbb
cmp
and
out
sbb
pushf
addr16
cmpsl
push
out
std
in
xor
aam
pop
fs
jl
cmp
add
or
adc
xchg
std
int3
lcall
xchg
ljmp
pop
push
scas
inc
mov
imul
dec
and
gs
daa
test
mov
pop
repnz
mov
adc
jo
and
add
jp
mov
stc
stos
add
pop
dec
aad
enter
or
shlb
cmp
add
mov
mov
in
scas
iret
mov
lock
cmp
mov
rorl
xor
and
test
bound
mov
jae
rol
pop
icebp
sub
test
aam
push
push
das
mov
mov
imul
jg
sub
movsb
aas
sbb
addr16
sub
mov
sub
sub
or
fsts
negl
pop
mov
ror
shrl
stc
mov
cmpsb
mov
dec
insb
dec
sub
push
add
insb
push
or
pop
mov
cmp
fnsave
in
mov
ret
lods
lcall
sbb
loop
pop
cmpsl
mov
mov
cmp
in
rcl
int3
outsw
inc
hlt
ss
xlat
dec
pop
mov
push
mov
les
loopne
add
into
icebp
subb
jp
div
fdivp
pop
sbb
jo
push
ss
jbe
xchg
fildll
mov
pop
add
dec
xor
mov
cmp
adcb
or
adc
jp
int
jecxz
fistps
test
and
push
fldl
mov
and
xchg
or
in
xor
inc
pop
pop
aam
add
inc
scas
xchg
mov
loop
notb
push
xchg
mov
sub
in
cmpsb
xor
mov
les
shl
or
sarb
and
inc
add
sub
clc
mov
cli
push
ja
les
cmp
jnp
jp
divl
cli
add
dec
mov
mov
mov
cmp
lds
dec
jmp
pop
out
test
sbb
adc
cmp
fbstp
hlt
sarl
loope
lods
add
pop
test
cltd
sbb
rcl
int3
lret
js
inc
fldcw
adc
jp
int3
and
int
cmp
int3
scas
inc
push
xor
aaa
jb
aad
cmp
push
repnz
xchg
imul
pusha
push
into
push
scas
ja
or
mov
mov
and
fmull
cltd
or
gs
adc
cmp
xor
in
xor
adc
popa
in
test
sahf
stos
rclb
mov
or
adc
xchg
sbb
pusha
inc
js
lods
out
fs
mov
add
mov
dec
outsb
out
add
iret
adc
or
xor
iret
loop
loope
push
inc
lahf
imul
shr
into
or
out
sbb
mov
cwtl
inc
outsl
cmpsl
imul
cmp
dec
clc
xchg
sbb
inc
pop
sbb
and
bound
lods
ljmp
mov
xchg
sbb
mov
repz
and
cmc
mov
repnz
arpl
dec
stos
push
mov
sbb
jns
lods
rclb
inc
push
dec
mov
or
dec
mov
roll
inc
stc
jmp
push
ss
icebp
fbstp
jo
mov
add
cmp
lods
jecxz
fsubp
pop
stc
aam
sbb
mov
sbb
fwait
xchg
ror
sbb
mov
rorl
sbb
sub
add
mov
ret
ljmp
mov
xchg
lcall
outsl
in
push
or
jae
mov
std
pop
sub
adc
xchg
and
jnp
mov
dec
cli
into
in
or
mov
bound
int
les
jnp
outsl
mov
fistps
inc
stos
cmpsb
popf
mov
insl
mov
imul
mov
shrl
or
jb
mov
jbe
repnz
fs
icebp
xor
scas
jae
daa
push
add
sbb
mov
pop
sub
mov
or
jge
imul
push
add
mov
mov
ds
and
jb
mov
in
pop
mov
out
sub
jg
sub
in
std
xchg
cmc
mov
pop
and
jae
jecxz
lcall
lret
sub
scas
inc
push
punpcklbw
dec
push
mov
adc
ret
lret
aas
rol
in
mov
mov
cmp
stc
daa
inc
sub
cli
xchg
in
jns
sbb
cmp
xchg
inc
mov
and
test
jns
out
sahf
mov
and
add
mov
imul
dec
bsf
mov
insl
ror
test
mov
in
mov
jo
xor
les
and
push
xchg
xchg
adc
sbb
loop
add
xor
push
add
jge
xor
sahf
orl
and
and
add
ror
rcl
pop
pop
jp
adc
mov
les
add
jnp
mov
stos
cli
repz
mov
lcall
fwait
out
or
arpl
and
cld
cmpsl
mov
pop
mov
push
hlt
fidivrs
xchg
push
mov
fistps
in
jge
mov
orl
imul
int3
in
stc
xlat
test
pop
aas
mov
popa
je
movsl
out
psubusb
je
mov
cmp
cmp
pop
out
inc
int3
sbb
adc
sbb
push
int
cmp
jo
lcall
test
cmpsb
addr16
cmpsb
mov
rcl
cli
out
xchg
mov
movsl
sbb
cmp
mov
stos
pop
cld
xchg
clc
cmp
fimuls
mov
adcb
xchg
push
xchg
pusha
stos
scas
jmp
paddusw
or
pop
pusha
mov
and
inc
mov
xchg
cwtl
ss
mov
andb
repz
in
mov
mov
xchg
push
notb
jne
out
lock
sub
xchg
sbb
movsl
or
and
dec
shlb
push
ljmp
pop
mov
or
fcomip
ja
jae
add
inc
jne
adc
ret
jnp
aaa
aam
cmp
adc
sbb
sahf
sub
sbbl
push
cmp
cmpsl
xchg
sarb
int3
outsl
into
cli
adcb
leave
out
push
mov
cmpsl
jl
arpl
in
pop
aam
jg
rclb
mov
daa
int3
in
pop
leave
push
ret
sbb
leave
bound
nop
scas
dec
popf
mov
mov
xor
gs
mov
ret
scas
xor
lds
lret
xchg
dec
adc
mov
loopne
push
psllq
popf
scas
xchg
jecxz
push
arpl
mov
ret
cmp
in
inc
unpckhps
or
fwait
xchg
lcall
xor
inc
xchg
jl
xchg
cmc
push
push
data16
cwtl
outsl
mov
xor
nop
lret
cmp
xor
addr16
out
insb
cmp
stos
fdiv
push
mov
test
lods
fmull
ffree
add
push
push
push
dec
icebp
aas
push
aad
sbb
mov
dec
mov
sbb
push
pop
adc
lock
fidivrs
or
in
mov
clc
adc
outsl
out
into
scas
or
inc
popf
loope
sbb
das
xchg
push
add
cs
xchg
pop
jb
push
stc
xchg
loope
sub
push
ljmp
push
and
cltd
push
sub
mov
dec
inc
sub
push
imul
jmp
aam
into
sbb
cmc
add
mov
push
cmp
xor
fisubs
add
lret
jp,pn
test
nop
pop
les
cltd
into
mov
popf
call
fnstsw
test
inc
lcall
jle
mov
imul
pushf
repz
incb
lods
pop
insl
or
jae
lock
jne
pop
and
mov
lret
aas
jbe
ja
or
test
mov
push
xchg
jmp
pop
cld
or
mov
bound
pop
mov
ljmp
inc
mov
adc
adc
jg
rol
xor
ret
hlt
sbb
cmp
popf
stos
adc
imul
xor
mov
mov
cld
stos
das
mov
mov
dec
xchg
stos
imul
int
add
jo
pop
push
aas
cltd
or
cwtl
pop
and
push
mull
adc
movl
inc
enter
outsl
mov
in
cmpsl
push
enter
insl
adc
mov
mov
add
mov
adc
xor
clc
fistpl
jae
pop
ljmp
mov
vpslld
sub
rcl
mov
inc
ja
dec
add
test
push
sub
cmp
fdiv
push
mov
push
push
inc
mov
and
cmc
into
dec
jecxz
fadds
js
outsb
pop
imul
or
mov
cli
xlat
lea
arpl
test
cmpsb
mov
xor
fwait
jns
idiv
aad
mov
adc
jge
xor
iret
es
jecxz
dec
and
in
sbb
cmp
in
xor
iret
cmp
sbb
ljmp
addr16
outsl
rcr
add
mov
stc
mov
daa
dec
cltd
imul
les
stc
daa
mov
push
clc
lret
inc
imul
inc
aam
repz
enter
iret
pop
sub
iret
cwtl
in
mov
cmp
fsubrp
dec
out
cmpsl
push
xor
pop
and
cmp
mov
daa
aaa
leave
and
jns
hlt
mov
sub
add
push
int
in
jae
jl
or
and
mov
fistps
fnstenv
out
popa
xchg
add
jge
xchg
rcll
mov
mov
stos
rcll
jae
xchg
jb
mov
sahf
lret
js
mov
fbld
mov
fsubrl
sarl
loop
fwait
jae
popa
or
push
jecxz
divl
fdivrs
test
cmc
jmp
stos
ds
adc
add
out
mov
lretw
dec
es
pop
mov
andl
cmpsb
leave
mov
push
mov
das
movsb
lods
adc
fs
hlt
xorb
adc
jnp
dec
pop
lcall
dec
mov
and
and
xchg
xchg
lcall
add
test
adc
das
and
jno
lods
and
or
xor
sbb
push
push
sbb
xchg
adc
in
out
out
adc
push
fstpt
push
dec
leave
cmp
loope
mov
jns
ljmp
pop
xchg
arpl
dec
push
jg,pt
outsb
adc
inc
or
inc
repz
fsubl
xchg
notb
push
mov
sub
mov
xchg
add
insb
pop
test
sbbl
mov
push
addr16
mov
mov
aam
loopne
or
cmpsb
lods
xchg
sub
sbb
dec
pop
push
sti
sahf
mov
dec
scas
mov
shrb
jnp
pop
pop
fnsave
mov
insl
pop
insl
push
inc
jmp
mov
xor
ds
cli
push
and
xor
jmp
pop
xchg
and
shrl
xchg
test
outsl
mov
or
mov
inc
dec
fsubr
mov
pop
mov
lods
lea
xchg
mov
xor
sub
mov
shrb
pusha
sub
lea
adc
data16
jo
sub
cmc
jle
cmpsl
adc
push
xchg
test
ss
mov
or
and
test
cmc
cmpsb
jae
and
inc
shll
cld
jae
sbb
leave
iret
or
xchg
out
dec
dec
push
dec
iret
sub
fistpll
int
xlat
push
lahf
inc
mov
sti
xchg
cmc
dec
in
inc
jg
outsb
inc
adc
fs
imul
cs
jmp
add
mov
sbbl
out
nop
or
push
dec
jns
or
fs
imul
es
push
clc
es
andl
jo
dec
int3
fsubs
mov
dec
xchg
out
in
sbb
mov
cmp
mov
inc
sub
mov
lcall
push
add
cwtl
adc
mov
in
pop
jb
xor
xor
adc
sub
in
inc
sbb
shl
push
xor
adc
loope
cmpsb
in
and
adc
push
xchg
cld
xchg
push
ret
push
mov
adc
in
sub
jo
dec
into
inc
clc
and
xor
mov
sub
lahf
repnz
jecxz
mov
insl
dec
repz
aam
mov
xor
ljmp
push
jno
icebp
iret
mov
pop
ficompl
mov
and
mov
ss
test
mov
sub
cmp
jg
or
notl
xchg
int
pushf
pop
enter
adc
out
adc
fs
lods
mov
jle
repnz
loop
push
push
pop
push
loop
add
loope
out
add
push
shl
xchg
jo
inc
fldpi
aas
push
call
in
cmp
into
add
add
pop
sahf
sbb
mov
cmp
rorl
nop
lea
outsb
mov
inc
lret
sub
mov
mov
mov
fists
fs
dec
bound
and
std
fldenv
loop
std
mulb
mov
ficoms
and
outsl
out
cmpsb
movsl
inc
push
adc
mov
cmp
aam
mov
data16
inc
pop
or
aaa
testl
repnz
pop
xlat
adc
and
mov
dec
out
mov
test
out
pop
cmp
smsw
fstpt
sub
leave
aad
inc
rol
fisttpll
pop
nop
jle
xor
clc
add
dec
inc
leave
cmp
pop
jb
push
stc
das
mov
ljmp
outsb
mov
sub
or
push
and
push
ret
ret
mov
insb
add
gs
and
adc
mov
bound
cmp
adc
outsl
xchg
sbb
jle
add
mov
pop
add
inc
daa
mov
cltd
out
adc
test
mov
rcll
pop
cmc
aaa
push
pop
gs
jmp
lock
lcall
arpl
mov
mov
fcoml
iret
fmul
xchg
mov
mov
pop
aas
shrb
in
pop
sub
fmul
inc
sbb
add
mov
pop
call
mov
and
cmpsb
test
push
pop
lods
fidivrl
jbe
add
xor
shlb
xor
adc
adc
and
cmpsl
shl
inc
push
je
fs
loope
inc
inc
xor
ret
test
repz
pop
xchg
lock
pusha
insb
push
jb
fwait
divb
ja
xor
test
adc
incl
orl
dec
arpl
mov
xchg
sub
mov
cmpsl
data16
xchg
cmp
cmc
xor
out
mov
sbb
xorl
int3
add
pop
pop
mov
inc
sbb
jmp
push
into
and
pop
pop
insl
sti
cmp
iret
push
xor
sub
adc
sub
insl
sub
ljmp
bound
ret
mov
sub
ja
xchg
scas
inc
outsl
inc
pop
adc
stos
xchg
sbb
sbb
rol
sbb
inc
inc
pop
sbb
or
adc
mov
arpl
sbbb
xchg
add
ret
mov
xchg
cs
out
xchg
sbb
xlat
fs
jnp
or
cmc
sub
dec
mov
adc
shrb
xor
push
movsl
adcb
sub
daa
adc
xor
data16
dec
push
mov
xor
push
mov
pop
lret
push
jle
lock
xchg
push
aaa
lea
xchg
arpl
mov
sub
jnp
popa
mov
shll
xlat
clc
pop
mov
sbb
sti
ljmp
mov
pushf
enter
stos
xchg
insl
xor
dec
mov
sbbl
cmp
sub
xchg
cs
mov
xor
popf
pop
insb
jo
movsb
jp
jp
stos
xor
sub
adc
push
lahf
mov
xchg
in
rol
dec
mov
inc
jb
sbb
sbb
mov
out
or
jnp
fcomps
adc
sub
repz
test
cmpsl
cmp
lea
pop
push
ret
xor
shlb
call
xor
mov
pop
ss
sbb
xchg
jl
in
push
inc
mov
mov
lret
mov
inc
lret
xchg
inc
imul
mov
nop
or
stc
test
sub
sub
push
push
push
cmp
mov
inc
repz
mov
or
cmp
rcrl
push
std
insl
jecxz,pt
test
mov
es
je
mov
add
inc
movsb
jb
adc
fdivrl
push
push
repz
mov
inc
popa
inc
pop
rorb
mov
ret
out
cli
sbb
pop
jmp
jno
cmp
jg
movsb
inc
in
cmp
pop
fnstsw
mov
pop
add
push
popf
mov
push
int
loope
idivb
insl
pushf
adc
xor
rcrb
or
lods
sbb
cmp
repnz
add
sbb
scas
mov
jmp
pop
push
scas
dec
scas
icebp
out
cmpsl
cmc
data16
xchg
out
xlat
into
faddl
add
mov
enter
cmp
cs
sub
out
icebp
mov
enter
cmp
jb
addr16
add
jp
fs
adc
leave
nop
pop
sbbb
xor
das
rorb
fisttpl
js
mov
jmp
imulb
loopne
mov
dec
hlt
inc
in
fs
dec
test
pop
cmpsb
xor
push
js
lret
add
stos
fs
xor
popf
rcll
lret
loopne
mov
mov
in
inc
mov
popa
lret
mov
pushf
imul
pushf
rclb
fistpll
inc
in
call
mov
pop
dec
jbe
jmp
mov
xchg
cmpsl
mov
mov
or
mov
jg
dec
aaa
shr
lock
popf
xchg
and
pushf
cwtl
xchg
add
pop
jl
mov
inc
sti
mov
enter
out
mov
cmp
stc
xor
shrb
push
ret
mov
inc
pop
into
push
arpl
dec
sbb
jns
xlat
std
ja
repnz
or
pop
xchg
mov
ds
push
clc
push
mov
nop
lret
lods
imull
adc
mov
cmp
popa
dec
dec
cmp
pop
orb
mov
mov
pop
cmp
stos
and
xchg
sbb
adcl
fdivrl
sub
xchg
shrb
pop
stc
and
addl
cld
into
sub
out
adc
dec
jnp
jp
mov
add
push
into
jge
sti
sbb
into
into
lahf
sub
stc
iret
jns
leave
xchg
mov
sbb
jae
out
icebp
cmpsb
mov
add
push
cmp
jne
cs
aad
mov
popf
jbe
orb
push
mov
aaa
test
push
pusha
pop
ror
cld
xor
cmp
leave
mov
pop
ds
add
dec
xor
cmp
loopne
jmp
mov
pop
mov
test
sub
cld
popa
add
jae
adc
push
std
into
fldl
outsl
fdiv
jecxz
push
notb
popa
stos
mov
gs
enter
lcall
xchg
ficoml
shr
inc
std
mov
arpl
mov
sti
cmovne
insl
pop
sub
sti
cmpsl
add
popf
ds
xor
add
aaa
jl
or
outsl
pop
test
sub
fmuls
lock
push
mov
or
adc
jnp
xchg
pop
xor
jo
mov
add
dec
adc
mov
sbb
cwtl
int
cmp
addr16
jecxz
je
jno
cli
cwtl
repnz
testb
test
sbb
jb
add
repnz
outsb
push
mov
sbb
fcmovne
xor
xchg
dec
outsb
fbstp
pop
push
insb
inc
inc
or
fistpl
adc
fidivrl
add
pop
aaa
pop
es
and
mov
fsubrp
ss
rcrb
push
sub
decl
adc
sti
push
mov
sbb
in
loop
or
rorb
jp
and
lahf
stos
les
popa
outsb
sarl
add
mov
in
cli
xchg
adc
mov
out
push
pop
adc
ljmp
or
shl
cmp
add
shlb
mov
jmp
sbb
sbb
xchg
pop
pop
mov
mov
out
aad
ja
testl
sbb
push
test
clc
icebp
cli
filds
mov
nop
mov
cmc
lea
lock
mov
clc
push
sub
in
lock
daa
xor
enter
xchg
testl
fnsave
mov
dec
aam
inc
pop
push
fwait
cmp
mov
lds
pop
cmp
dec
or
fidivs
add
shlb
bound
out
and
inc
out
pop
inc
rolb
sbb
jle
lret
pop
sbb
lahf
cs
push
sub
pop
sub
sub
xchg
xchg
add
mov
not
loop
pop
xlat
xchg
dec
aam
mov
out
and
mov
mov
imul
into
mov
outsb
ret
mov
out
fmull
pop
insl
mov
sub
into
pushf
fdivr
mov
xor
repz
bound
xor
jbe,pt
int
mov
xor
aam
xor
jne
punpcklwd
sub
movsl
jo
jb
das
jno,pt
cld
or
out
fadds
dec
gs
dec
adc
inc
pop
mov
or
jle
out
fs
testb
pop
mov
scas
push
ds
nop
in
lds
pop
jp
mov
push
or
mov
jne
mov
xchg
jle
cwtl
mov
ss
jne
les
mov
sub
das
jl
pusha
movsb
aaa
jg
add
dec
cs
jnp
jg
orl
std
xchg
out
sbb
ds
enter
jp
push
je
popf
pop
lea
addr16
pushl
iret
lea
sub
testl
mov
push
imul
cli
mov
push
ret
add
mov
adc
in
ret
push
pop
and
add
add
out
stos
js
insl
clc
mov
sti
push
sbb
mov
jmp
stos
mov
lret
push
bound
adc
movsb
inc
out
loopne
gs
mov
jo
push
std
jecxz
bound
fisttpll
in
push
adc
push
bsr
pusha
and
inc
pushf
rcll
xchg
jb
pushf
stos
mov
mov
pop
mov
xchg
or
stc
out
mov
rorb
icebp
je
leave
cmp
jle
mov
push
sub
repz
xchg
imul
cltd
fists
stc
add
loope
dec
andb
leave
inc
push
fcomip
xchg
filds
mov
xchg
sahf
cmp
mov
stos
in
mov
mov
mov
icebp
mov
mov
adc
or
fildll
shll
je
xchg
aam
jmp
pop
inc
out
push
mov
das
push
in
lret
xchg
mov
inc
dec
cmp
pop
in
push
add
mov
lods
clc
jns
xchg
cmpsl
sbb
fptan
pushf
addr16
bound
push
xchg
lahf
mov
pop
jl
push
inc
call
jbe
dec
fs
lds
addr16
xchg
mov
xor
pusha
rcrb
xor
mov
enter
mov
and
lret
push
ret
xor
inc
loop
leave
test
xchg
clc
lcall
or
lock
sbb
inc
je
push
stos
insl
or
insb
jge
into
xor
adc
cmp
mov
adc
mov
jnp
or
movsl
test
iret
push
cs
adc
cld
pop
imul
mov
inc
jns
ret
loope
je
out
add
jo
sub
icebp
add
pop
lea
mov
enter
je
testl
xor
xchg
pop
in
sub
int3
sbb
cmpb
lret
pop
sub
jne
fldt
pop
outsb
xchg
add
cmpsb
mov
mov
in
test
add
mov
push
loop
fiadds
xor
jae
out
jg
jnp
pop
int
loop
bound
cmp
pop
cmp
enter
mov
sbb
fcomps
fldcw
or
sub
cwtl
in
inc
popa
jmp
add
aaa
out
sbb
cmp
pusha
outsl
xlat
mov
in
cmpsl
fbstp
fs
mov
pop
or
sbb
or
inc
push
outsl
mov
jge
xlat
mov
andl
ljmp
ja
or
dec
in
int
mov
push
mov
cmp
inc
mov
and
xor
rolb
out
jmp
dec
fmulp
aas
push
mov
sub
xor
and
push
test
push
mov
lods
adc
lahf
aam
inc
andb
add
stc
dec
cmp
fisubs
stc
fs
lret
pop
popa
sub
movsl
je
and
nop
cmp
scas
push
call
xchg
cwtl
les
fwait
mov
or
jg
jg
jno
ljmp
imul
add
scas
inc
cmpsl
scas
hlt
xchg
jecxz
mov
imul
jbe
mov
sbb
je
mov
inc
lahf
loopne
sbb
dec
adc
sub
int3
loop
fs
mov
mov
mov
rcll
xchg
imul
loopne
imul
jle
loopne
mov
cmc
movsl
sbb
jns
pop
mov
mov
leave
pusha
xchg
mov
daa
test
xor
cmp
pop
adc
lcall
out
or
and
push
mov
dec
xor
iret
popf
call
jg
xor
stc
cs
push
stos
jo
push
cmp
mov
gs
sub
dec
or
mov
cs
shl
cmp
out
mov
mov
and
push
ss
mov
mov
xchg
inc
sub
out
jle
xor
adc
pop
lcall
lahf
icebp
sbb
pop
cmp
sbb
or
xchg
sub
mov
popw
sbb
mov
mov
jb
jb
cmp
inc
add
fisubrl
fsubrl
xor
push
xor
xor
sub
aas
sbb
std
pop
push
les
xchg
xor
cmc
sub
iret
js
push
push
cli
or
cmp
je
leave
mov
cmpsl
clc
push
gs
jmp
mov
pop
loop
mov
in
sbb
jns
sbb
shll
stos
fimuls
inc
inc
addr16
add
lret
xchg
xchg
stc
out
add
jnp
loop
faddl
aam
inc
xchg
dec
xchg
add
xor
repnz
stc
fs
aas
mov
fwait
lahf
lahf
xchg
xchg
xchg
sub
jno
sbb
jb
cmpsl
mov
xchg
sub
or
add
or
mov
popa
dec
dec
xor
dec
push
es
subb
xor
sbb
imul
test
xor
ficompl
jo
lods
cmc
mov
aaa
int
mov
int
lret
xchg
ret
jp
sub
addr16
lret
fisubrs
aam
cmp
mov
sahf
and
xchg
and
adc
xor
data16
dec
fs
fwait
mov
cmpsl
inc
or
gs
fcomps
xchg
sbb
add
mov
push
jae
sbb
fcmovnu
mov
movsb
inc
pop
or
sbb
imul
lods
lret
enter
fcmovnu
in
sbb
mov
inc
xchg
sbb
repz
mov
test
es
adc
outsb
imul
adc
lcall
imul
leave
jg
cmp
stos
mov
rcll
sub
xorl
hlt
xchg
insb
sbb
mov
out
xor
xchg
mov
adc
in
rcrb
mov
mov
jge
mov
or
push
inc
xor
fisubs
daa
pop
clc
psubusb
push
cmp
lret
dec
push
inc
sub
shrb
jne
pushf
dec
jno
aam
xchg
push
mov
xlat
rcrb
and
xor
fwait
push
scas
pop
xchg
fiadds
sbbb
fcomp
pop
mov
les
mov
rcll
inc
out
loop
pop
jecxz
sub
scas
jg
xor
data16
dec
add
cmp
dec
push
fimuls
lock
stc
ret
rcll
ljmp
sub
and
or
lcall
movsl
popw
out
and
ljmp
add
push
mov
sbbl
mov
sub
imul
jp
lock
cltd
xchg
into
shl
fimull
arpl
lock
jecxz
loop
push
sbb
orl
dec
jb
repnz
pop
rorl
orl
sbb
lahf
xor
pop
ja
mov
inc
std
jae
test
or
pusha
inc
fdivr
mov
xchg
and
push
mov
paddsb
sub
dec
in
scas
inc
dec
push
sbb
dec
movntq
dec
loop
ret
adcl
dec
arpl
adc
popa
testb
jmp
je
cmovo
data16
mov
jge
and
es
add
jge
repz
push
mull
mov
xchg
cltd
inc
es
les
cmc
iret
jle
push
in
mov
push
xchg
and
pop
fstpl
ret
push
sub
lret
jp
decl
ja
lods
popa
pop
sub
sbb
xchg
jge
sahf
inc
lahf
cs
pusha
bound
jl
sbb
cld
lock
dec
jbe
xchg
or
jnp
les
jno
xor
xchg
mov
addr16
cmp
push
push
out
inc
jg
lock
sub
test
aad
xor
test
and
nop
imul
mov
cwtl
cmp
add
enter
xchg
pop
sub
lea
and
data16
cmp
nop
adc
dec
dec
test
mov
insl
test
leave
xor
imul
add
sbb
push
pop
fidivs
and
shlb
and
outsl
jp
sub
sub
dec
adcb
outsl
pop
in
pop
jae
enter
cwtl
push
push
xchg
repz
jnp
jge
cmp
scas
dec
mov
push
iret
mov
repz
cmpsb
jle
int3
push
mov
mov
out
rcrb
mov
dec
sbb
xchg
cmp
or
and
adc
in
add
lcall
repz
adcl
adc
inc
mov
rorl
or
stos
mov
pop
pusha
mov
or
cmp
mov
in
pusha
mov
bound
add
stc
repz
shl
std
xchg
mov
pop
jl
nop
fsubrs
mov
stos
outsb
mov
xor
fstl
or
outsb
out
xlat
iret
push
lods
lods
pop
and
aam
mov
pop
and
std
pushf
mov
mov
jb
addr16
in
mul
decl
push
adc
cmp
dec
push
cmpsl
jo
fwait
adc
or
daa
in
mov
add
arpl
xchg
xor
mov
enter
or
jbe
fsts
xchg
test
ljmp
push
fldt
and
dec
jae
push
cmp
or
dec
cwtl
repnz
xchg
pop
jg
pop
cmp
bound
pop
movsl
rcll
and
push
push
cld
test
adcb
dec
jle
addb
mov
jns
mov
mov
xchg
fidivs
add
and
loope
cmp
das
mov
jns
push
faddl
xchg
mov
jmp
xchg
sub
jge,pn
sub
sbb
jae
xor
rcrl
inc
mov
fisubrs
mov
scas
les
arpl
and
cmpsl
xor
lods
and
xchg
adc
leave
test
pop
test
in
pop
cmpsl
lods
pop
inc
mov
xchg
movsl
adc
je
cmp
cli
int
pushf
cmpsb
inc
mov
cld
mov
dec
mov
outsl
cmp
mov
cli
in
jne
inc
push
cmc
shlb
ja
loopne
xchg
das
jne
pusha
ljmp
jg
mov
loope
test
aad
loop
test
dec
jae
scas
leave
dec
mov
jl
dec
shlb
std
jae
xlat
icebp
mov
pop
insl
aaa
push
stos
int3
cmpl
jp
push
adc
test
adc
mov
mov
xchg
mov
push
cmpsl
xor
adc
pop
mov
cmpsl
mov
push
ja
sub
in
movups
xchg
xor
leave
clc
xchg
test
aad
lret
cmp
mov
inc
js
dec
sarb
push
mov
add
pop
cmp
or
sbb
add
sub
push
push
mov
sub
add
mov
not
icebp
fs
rcll
sar
sahf
xchg
ja
adc
or
mov
into
mov
cmc
aaa
lods
mov
cld
sub
mov
sub
dec
sub
inc
sub
cld
repz
mov
insl
pop
ljmp
xchg
push
xchg
and
jno
call
gs
ret
outsl
div
jecxz,pn
in
fwait
push
xchg
andl
rcrl
int3
lock
dec
aam
insb
mov
nop
mov
or
and
cmpsb
fcmovb
xor
out
push
sub
mov
dec
stc
pop
or
sbb
jp
insb
loop
jecxz
pop
dec
int3
dec
gs
sarl
fs
xor
xor
mov
or
mov
xchg
add
cmpsb
mov
divl
cmpsb
sbb
insl
or
lcall
mov
test
test
and
mov
aad
fldl
dec
or
popa
cwtl
cs
jmp
add
lds
in
rorl
bound
aaa
xor
push
cltd
les
aaa
in
popa
fwait
repz
shl
xchg
mov
cmpsb
daa
in
push
push
pop
mov
xor
insb
into
mov
test
sub
inc
pslld
cmp
repnz
rcrl
or
sahf
in
clc
xchg
push
xchg
das
xor
inc
add
stos
mov
dec
lds
aad
ljmp
mov
push
push
stc
in
stc
push
xor
and
popa
sub
and
mov
jle
insl
add
lahf
adc
sbb
fidivl
movsl
in
rcrl
add
popa
mov
xor
and
fisubs
dec
xchg
in
arpl
and
mov
mov
or
mov
int
or
icebp
test
xchg
sbb
fstpl
ror
mov
fidivl
fisttps
das
push
rolb
enter
xchg
fmulp
test
sahf
pop
outsb
pop
or
adc
jge
popf
jo
dec
inc
int3
cmp
dec
sbb
mov
sti
inc
jmp
mov
pop
jmp
jecxz
iret
mov
in
out
sbb
xchg
sbb
jge
mov
mov
push
gs
lock
jo
mov
add
shl
stos
push
test
sub
add
fcompl
fnsave
mov
test
test
movsb
xchg
sub
inc
mov
dec
sub
cmpsb
xchg
clc
cld
push
mov
mov
jbe
dec
cli
mov
popa
insb
adc
jbe
adc
loop
dec
add
out
mov
mov
push
push
rcrl
lahf
mov
sub
push
sbb
adc
mov
daa
inc
lret
stos
xchg
mov
stos
xchg
mov
mov
cmp
jae
or
pusha
out
pop
adc
les
shlb
push
jae
and
loope
cwtl
sahf
jmp
cmpsl
sbb
mov
dec
xchg
cwtl
pop
fwait
or
ljmp
stos
in
and
xorb
and
test
or
orl
inc
mov
mov
mov
xor
sahf
mov
in
sub
dec
mov
or
cmpsl
decl
bound
cmp
outsl
fisttpl
mov
adc
xchg
mov
mov
lea
mov
imul
jno
lds
cli
stc
fstps
test
fidivs
mov
cmp
mov
or
xor
pop
fisubrl
mov
jg
in
aas
cltd
bound
enter
ss
xchg
imul
sbb
or
dec
icebp
sbb
and
imul
ljmp
and
fnstenv
xorb
fistps
popf
cld
popa
dec
stos
push
dec
popa
pop
ret
imul
imul
adc
and
pop
push
jae
mov
adc
dec
jbe
cli
mov
pop
nop
sub
es
push
jge
sbb
pop
leave
dec
xchg
jp
aas
outsb
jno
push
push
pop
pop
pop
insb
daa
fs
lods
ss
jp
jnp
mov
dec
fcmovne
pushf
or
push
subl
add
test
cs
mov
sub
fsubr
or
inc
push
ret
xor
mov
int3
bound
pop
cmp
jp
sbb
sarl
cmp
dec
adc
xchg
mov
into
mov
push
xor
push
addr16
sbb
lds
xchg
mov
rol
mov
mov
sub
fcompl
or
es
dec
gs
je
fiaddl
or
pop
rcl
add
jno
lahf
das
pushf
xor
fwait
dec
mov
ret
mov
or
faddp
dec
jle
mov
or
fnstenv
es
push
je
scas
lods
mov
add
mov
pop
push
mov
pop
cmp
mov
cmc
jp
les
push
lock
into
push
sahf
cmc
cmp
inc
bound
xchg
mov
mov
adc
ljmp
test
sub
push
push
aas
stos
ja
and
pop
jecxz
pop
mov
scas
add
movb
sti
idivb
fucomp
cmp
fimuls
jnp
add
mov
into
push
push
cmpsl
iret
xor
dec
in
bnd
dec
add
mov
addr16
mov
push
jae
sbb
cltd
stos
lock
jge
in
xchg
daa
cmp
adc
lods
sub
adc
xchg
mov
mov
xor
sbb
jno
jne
divb
and
scas
xchg
mov
test
arpl
or
movsl
out
mov
aad
cmp
xchg
mov
frstor
fsub
jge
add
or
outsb
jns
mov
fwait
mov
pop
int
mov
jnp
popa
push
cmpsb
ficomps
ja
pop
and
cwtl
mov
icebp
sub
jmp
dec
jp
push
pop
lock
sub
lret
es
call
xor
arpl
push
inc
aam
dec
insb
lcall
test
aam
xchg
xor
or
xchg
cltd
fisubl
cmp
into
je
into
cwtl
add
xlat
mov
cmp
lods
stmxcsr
pusha
mov
jecxz
mov
push
lahf
out
add
daa
es
sub
rclb
nop
aad
insl
jne
or
and
xchg
adc
jo
inc
add
push
andl
fwait
test
pop
sub
or
movsb
inc
setb
aam
stos
ljmp
push
mov
and
ljmp
ror
outsw
movsb
adc
das
lods
jo
inc
cmp
imul
inc
sarb
ficoms
mov
add
xchg
push
aaa
mov
insb
leave
inc
sub
es
sarl
pop
lods
inc
in
sbb
or
add
jmp
sti
out
jns
neg
jae
pop
rolb
pop
stc
sub
cltd
mov
mov
xor
cmp
jmp
mov
or
sbb
sbb
mov
pop
cli
xor
ffree
popa
aaa
rol
es
lcall
and
pop
mov
add
adc
pop
push
inc
addr16
or
movsl
inc
add
cli
aas
clc
jmp
into
imul
imul
shlb
xchg
arpl
mov
jmp
loope
les
nop
jg,pt
mov
in
fsub
daa
dec
adc
xchg
xchg
cmpsb
outsb
jp
push
andb
sahf
pop
movsb
pushf
mov
fiadds
daa
out
shrd
cwtl
add
inc
add
or
roll
adc
jne
cmp
enter
andl
out
dec
je
shll
hlt
out
andl
sub
dec
aas
adc
cs
test
ds
das
push
jno
int
adc
and
leave
out
xor
pushf
add
cmp
xchg
out
jae
sbb
inc
pop
test
and
stos
inc
sbb
out
or
in
jmp
aam
dec
lods
push
insb
sub
nop
mov
test
in
aas
add
gs
and
push
mov
push
sub
mov
sbb
idivb
lods
push
pop
sub
cwtl
ja
and
das
sbbb
xchg
rolb
mov
push
dec
mov
mov
popf
loopne
pop
lods
cmpb
pop
ja
pop
jo
insb
repz
outsl
xorb
movsl
jns
ljmp
repnz
enter
and
lds
mov
out
pop
outsb
loopne
dec
cmp
mov
sub
rclb
outsb
mov
xor
sbb
inc
mov
mov
ss
jmp
stc
icebp
cmpsl
xor
jno
push
movsl
cmp
cmp
mov
sti
nop
push
cmp
adc
cmp
aam
loop
mov
inc
jle
lea
dec
shlb
aam
mov
popa
adc
adc
outsb
andb
mov
iret
into
xchg
pop
mov
sub
ljmp
xor
pop
sbb
test
rcll
pop
jle
and
fmull
stos
xchg
lret
mov
es
movsb
sbb
popa
mov
jl
pop
xor
mov
xor
fdivrl
call
mov
ret
cmpl
mov
in
xchg
add
pop
sarl
int3
loope
mov
out
int3
or
and
xchg
mov
pop
sub
inc
or
inc
cmp
and
mov
into
sarb
and
dec
push
dec
xchg
jne
stos
mov
cmp
aas
mov
pop
ss
mov
mov
jns
push
lock
jge
in
insb
repnz
out
data16
stc
xor
sarb
mov
add
stos
jp
scas
cltd
sbb
dec
lcall
cld
dec
cmp
ret
lret
aad
sahf
rcl
dec
xchg
mov
mov
int
push
mov
dec
pop
xor
outsb
xchg
dec
testb
out
xor
mov
es
sub
xchg
div
sahf
add
adc
mov
lods
add
outsl
movsl
adc
mov
or
cli
orl
push
dec
jbe
ja
psubq
inc
ret
in
push
lret
aam
mov
xchg
aas
test
pop
in
or
xchg
mov
and
mov
lcall
jo
xchg
test
cltd
mov
icebp
jmp
mov
stos
inc
pop
adcl
cwtl
scas
fldl
and
shrl
cmc
cmpsl
adc
es
jae
es
jp
mov
adcb
imul
cld
ror
cmp
ja
shr
cwtl
in
cmpsb
sbb
rorl
scas
fldcw
shlb
add
in
rorb
cmp
jns
jecxz
jbe
cmc
mov
adcl
in
test
in
dec
mov
mov
pusha
lret
repnz
aas
cltd
and
cmp
adc
add
pushf
dec
test
adc
or
rorl
sarl
subb
outsb
fisttpl
jmp
icebp
adc
stc
dec
cmp
lret
aas
shrb
scas
pop
jo
int
cmp
scas
aam
lret
push
movl
xchg
pop
jne
popa
jmp
cltd
and
sbbl
xchg
push
add
cmp
icebp
cmp
xor
xchg
push
dec
mov
jne
add
fwait
adc
fcmovnbe
in
pop
pop
adc
imul
mov
and
shlb
jae
inc
into
dec
cmp
mov
cmp
mov
data16
add
or
or
clc
das
orl
pusha
iret
mov
add
and
or
popf
jge
lds
ret
dec
icebp
into
jbe
xlat
neg
push
push
out
dec
sub
hlt
mov
push
ja
or
xor
and
lds
push
adc
repz
mov
sub
xchg
cmp
jp
sarb
dec
push
push
ret
xor
push
cmp
push
out
sub
cmpsb
bound
cmp
call
addr16
pop
dec
cmp
rolb
mov
pop
and
and
sub
mov
lahf
add
repz
mov
das
enter
inc
xor
pop
lret
xchg
and
jo
ret
repnz
gs
mov
ficoml
fldt
lods
stos
call
xchg
xchg
aad
xchg
divl
setae
sub
arpl
clc
je
xchg
in
cmpsb
scas
sub
hlt
pop
in
dec
ja
out
test
jle
add
scas
cld
cmp
dec
mov
or
mov
jl
jno
orl
cmp
jne
iret
repnz
pusha
xchg
push
mov
rorl
push
dec
pusha
dec
neg
xor
je
pop
fldl
arpl
mov
adc
les
dec
aaa
adc
sub
cmp
mov
sub
cmpsl
leave
testb
fs
fisttpl
movsl
mov
push
insl
pop
and
mov
out
adc
into
and
push
mov
ss
shlb
div
out
repnz
xchg
in
decb
or
fnstsw
sbb
add
addr16
in
and
mov
jno
jmp
std
aas
andb
ret
stc
gs
push
int
movups
call
dec
push
cld
nop
push
pop
in
mov
fcmovne
cltd
mov
or
adc
call
adc
repnz
fimuls
dec
xchg
out
fiadds
jmp
dec
loope
pop
insb
mov
lods
push
dec
outsb
leave
jo
mov
push
mov
ret
sti
sub
mov
fmuls
aas
adc
mov
pop
jmp
loop
int3
cmpl
jno
cli
ja
lcall
or
in
dec
mov
jns
scas
pushf
or
ds
and
pop
inc
sub
mov
int
stos
ss
jae
jge
mov
hlt
xchg
addr16
call
cmp
ss
push
inc
mov
sahf
dec
push
enter
push
aam
dec
or
out
out
cltd
sbb
movsl
push
xor
leave
pop
hlt
pop
es
mov
popf
xchg
adc
jo
outsl
clc
insb
insb
push
or
mov
jno
int3
out
push
push
jge
mov
movsl
pushf
mov
jp
lds
push
jle
fimuls
pop
mov
xchg
mov
mov
xor
mov
push
sbb
mov
or
imul
cmc
nop
jmp
mov
test
dec
leave
and
data16
into
addr16
ret
testb
jne
dec
das
inc
cmp
cli
or
loope
add
add
inc
sbb
jb
pop
and
or
xor
mov
push
or
mov
lea
push
mov
fdivrl
xchg
insb
out
jb
mov
pop
mov
loop
inc
inc
sbb
repnz
xchg
in
add
adcb
or
sbbb
imul
call
je
cli
sti
lret
es
dec
sahf
mov
subb
orl
xchg
movsl
jge
xchg
dec
add
testb
add
jae
loope
stc
dec
jge
idiv
xchg
sub
nop
lea
adc
repnz
scas
lock
shl
orb
lahf
push
or
repnz
aas
fcomp
jne
jecxz
std
pop
xlat
pop
jno
adc
push
mov
out
push
stc
movsb
hlt
loope
push
adc
or
lods
xlat
jge
sub
pop
shrl
xor
add
mov
fisttpl
and
mov
or
sbb
call
gs
cmp
hlt
push
and
mov
and
mov
fsubrs
mov
xchg
jnp
xor
insl
into
int
imul
stc
push
in
cmp
pop
xchg
imul
adc
popa
xor
lods
cmp
push
rorb
xor
pop
fbld
ret
and
sbbb
jb
inc
mov
cld
es
pop
jg
inc
fwait
lret
das
push
pop
cli
stos
lahf
jl
ds
es
xlat
push
sbb
mov
lcall
push
sbb
xlat
xchg
repnz
cmp
jnp
imulb
addl
sub
in
imul
sahf
outsl
lods
data16
dec
dec
mov
push
addr16
xor
pop
aas
pop
popf
sub
mov
dec
xor
scas
mov
stos
xor
mov
in
push
and
sbb
outsl
dec
sarl
jns
shll
out
or
cltd
cli
and
bound
js
push
xorb
push
cmp
les
das
and
aad
and
test
inc
or
sti
clc
sahf
mulb
pop
ret
xor
mov
int
sub
lods
leave
push
jae
xchg
lahf
adc
mov
bound
push
xor
stos
or
fidivrl
push
mov
jl
and
call
hlt
cmp
dec
mov
fidivrl
jno
add
mov
inc
push
cld
into
das
jnp
or
ja
cld
ds
adc
insb
ret
or
lea
clc
jae
push
leave
inc
les
and
and
mov
sbb
xchg
jl
push
mov
dec
cli
out
test
mov
es
push
pusha
pushf
jl
cmpsl
xchg
movsl
jbe
dec
cld
xor
xchg
add
xchg
inc
andl
stc
out
fimull
in
pop
popa
push
roll
icebp
xor
cmc
inc
adc
dec
adc
cld
fistl
adc
nop
sbb
xor
mov
lods
push
cwtl
push
dec
lods
iret
repz
mov
sbb
fisubs
aam
dec
add
add
test
mov
iret
jp
minps
addr16
js
jb
notl
negb
mov
das
jl
loop
mov
inc
pop
dec
jg
clc
mov
mov
lods
and
shlb
push
js
jns
xchg
movsb
add
xchg
lcall
lahf
mov
add
and
cmp
imul
ss
in
xor
loop,pn
sbb
enter
adcb
iret
jp
pop
mov
pop
sahf
addr16
pop
and
mov
or
out
add
jo
insl
les
arpl
cs
mov
mov
sub
inc
mov
mov
inc
fs
popa
adc
mov
push
push
idivb
ljmp
mov
dec
jle
or
lock
adc
add
jnp
cmp
cmp
lock
aam
movsl
add
dec
dec
aas
daa
push
sti
stos
test
mov
sub
sahf
xor
xor
pop
out
or
mov
xchg
test
mov
sbb
test
dec
lea
scas
mov
sub
mov
sub
sub
add
nop
mov
or
sahf
cld
and
sbb
in
fwait
dec
xor
inc
pusha
inc
les
or
jnp
scas
fwait
adc
stos
inc
mov
ret
ljmp
pop
xchg
sub
out
ret
shrl
scas
jbe
jge
push
sbbl
inc
jg
pop
sub
and
dec
shll
fs
nop
adc
pop
push
pop
jnp
mov
jns
mov
push
sbb
lods
xchg
paddsb
mov
xchg
adc
dec
inc
sub
loopne
pop
movsb
inc
push
xchg
push
ljmp
jmp
les
sub
pusha
cmp
fwait
add
sub
sahf
test
dec
int
sub
out
jne
popa
adc
adc
movsb
adc
mov
out
mov
aaa
xchg
sahf
sub
loope
cmp
fistl
jmp
adc
xchg
mov
pop
mov
mov
dec
test
dec
sti
pop
sub
mov
mov
movsl
mov
pop
lcall
xchg
cmpsl
mov
inc
fwait
pop
add
sub
daa
repnz
js
fsubrs
mov
xor
mov
mov
jne
mov
popa
jle
lcall
fcmovbe
je
adc
and
pop
fistpll
out
pushf
sbb
mov
les
cmc
jge
add
mov
lret
cwtl
rclb
dec
in
std
mov
adc
add
mov
fists
lahf
dec
out
mov
aam
outsb
sahf
inc
add
cmp
in
lock
ret
cmp
cmp
push
icebp
jle
call
sub
fistps
out
jno
xchg
imul
arpl
pop
and
inc
add
dec
lret
cmp
scas
push
mov
jo
ret
xorl
and
jb
add
movsl
push
mov
pop
jecxz
add
mov
ret
jg
ljmp
inc
stos
pop
pop
or
xchg
jbe
mov
mull
rcr
jne
sbb
ss
jbe
dec
daa
js
push
pop
add
inc
in
fistl
dec
pushf
lods
pop
dec
jne
add
jno
sub
dec
xorb
inc
xchg
repz
andl
adc
or
pop
lock
add
cwtl
sub
inc
push
xbegin
in
je
xchg
fs
leave
xchg
lds
dec
sub
jne
xor
jg
xchg
inc
lods
shll
push
aam
std
call
out
xchg
mov
lds
lods
push
movsb
call
sbb
adc
adc
jns
or
push
clc
cmp
xor
sbb
sub
imul
mov
xor
gs
pop
out
pop
movsl
lea
divb
xchg
xor
xor
or
arpl
mov
cld
jmp
xchg
pop
adc
mov
call
mov
call
gs
arpl
movsb
sahf
rorb
mov
std
test
shrb
fildl
inc
mov
clc
repnz
bound
pusha
jo
data16
repz
xor
mov
sub
pop
into
mov
enter
sbb
loope
mov
pop
sub
add
loop
and
add
int
push
cmpl
mov
dec
adc
loope
xor
inc
or
fistpll
mov
idivl
jno
lret
pop
add
sbb
mov
add
movsb
mov
les
decl
jl
push
jne
cwtl
mov
movsb
push
mov
sarl
test
js
xchg
ret
mov
mov
movsb
mov
ja
jb
in
shlb
cmc
xchg
les
insl
call
sub
dec
pop
pop
rep
int
push
scas
pop
cs
aam
dec
cmpsb
lea
xchg
or
and
fistpl
xchg
shrb
sbb
pop
pop
and
incl
test
jne
pop
and
in
xor
sub
stc
decl
push
pop
popl
in
imul
in
aaa
mov
lds
pop
stos
push
sahf
fcmovnu
ret
pop
or
icebp
push
mov
movsb
push
sub
rcr
lods
jne
add
jne
mov
fistpll
cmpsl
inc
mov
push
jo
or
sti
cli
inc
pop
insb
adc
ret
pop
push
xchg
fisttps
xchg
sbb
test
xchg
mov
mov
sub
xor
mov
lock
cmpsl
fsubrs
into
pushf
pop
jg
jno
mov
xor
not
xor
or
rcrl
lods
lret
std
push
jno
lahf
dec
mov
lahf
xorb
cmp
cli
adc
mov
icebp
adc
int
mov
pop
xchg
movsl
pop
push
push
and
mov
add
jbe
cwtl
popf
fucomi
int
xor
out
push
cmp
push
jb
or
mov
ja
cmpsb
outsl
loop
cli
push
loopne
fimull
psadbw
mov
lret
sbb
jne
in
jmp
ret
mov
mov
rolb
xchg
cvtdq2ps
pop
and
add
mov
stos
adc
adc
cltd
popf
cld
fidivrs
pop
xchg
sub
addl
scas
adc
xor
or
mov
and
mov
xor
out
mov
andb
dec
mov
shr
loopne
out
shrb
enter
and
gs
mov
push
mov
mov
lcall
lahf
out
popa
adc
jg
jg
cmp
adc
ljmp
out
fisttpl
mov
dec
and
outsl
dec
xor
in
ljmp
nop
and
dec
inc
icebp
and
loopne
inc
out
lahf
mov
xchg
daa
pop
mov
jae
or
cld
das
shrl
push
jl
hlt
push
movsb
lea
movsb
pand
inc
and
push
jge
xchg
int3
adc
lods
inc
movsl
and
pusha
inc
xchg
out
inc
mov
push
lods
add
arpl
cmp
jge
fnstsw
popa
ds
in
jmp
pop
mulb
xlat
testb
mov
jae
jnp
and
fwait
dec
mov
sbb
add
mov
fistpl
pusha
sbb
popa
lahf
aad
dec
mov
mov
cmc
cmpsl
mov
cmpb
inc
cmp
lcall
loopne
mov
aam
xchg
outsl
jns
adc
into
test
or
xchg
pop
xchg
icebp
in
in
cmp
shll
pusha
sub
int3
in
push
lock
andb
jns
pop
push
adc
fldenv
jecxz
jl
pop
les
mov
inc
mov
repnz
cmp
sub
lea
nop
cwtd
adc
jnp
aaa
cmp
xor
les
push
adc
jmp
daa
xchg
gs
xchg
fimuls
and
mov
movsl
dec
les
dec
jg
pop
cltd
mov
dec
mov
cld
js
test
js
fnstcw
repz
out
jg
mov
clc
cli
outsl
dec
pop
jo
mov
testb
cmpsl
test
es
push
mov
pop
mov
sub
inc
lds
dec
fwait
aad
jb
cwtl
jb
fs
and
jb
rcr
roll
mov
push
jg
add
push
jbe
leave
mov
and
mov
adc
sbb
push
mov
negb
jg
jle
xchg
cmpsl
pop
cmp
add
inc
sub
xor
cld
arpl
out
ret
push
inc
pop
mov
jb,pt
xor
loopne
and
jg
mov
or
mov
test
scas
daa
ds
and
inc
das
sbb
rcl
outsl
inc
sub
loope
dec
pusha
xchg
and
sub
notl
ret
lock
dec
cld
cmp
and
xchg
mov
aas
jnp
iret
lea
rclb
stc
mov
jg
cmp
pop
stos
sub
cwtl
xor
movl
or
lahf
iret
mov
addr16
adc
fsubrs
jns
pop
xchg
jnp
faddl
mov
xor
into
push
imul
mov
das
xchg
dec
push
inc
jbe
push
mov
scas
push
sbb
cmp
sub
int
pop
xor
mull
fdivrs
push
mov
mov
decl
frstor
pusha
cmp
lret
orb
mov
push
sub
dec
int3
sub
mov
add
fisubs
pop
xor
cmpsl
pop
cmpsb
mov
test
inc
popf
jmp
mov
imul
jnp
mov
data16
inc
insb
scas
pop
adc
loope
fisttpl
add
frstor
sti
popa
lods
inc
lock
iret
dec
repnz
jge
push
popa
sbb
sbb
dec
mov
or
jbe
clc
pop
push
sbb
loope
out
std
and
mov
add
pop
xchg
jmp
cmp
jmp
popfw
sbb
push
sub
sub
mov
adc
imul
rorl
rorl
mov
pop
pop
daa
cmp
je
repnz
mov
call
mov
push
sbb
sub
test
jb
mov
sbb
sub
dec
xchg
loopne
xor
filds
clc
jne
adc
ds
sbb
cmpl
inc
test
mov
inc
add
adc
or
repnz
gs
leave
out
lret
push
inc
jbe
cmp
or
lahf
or
adc
jl
imul
mov
jb
push
inc
mov
push
cmp
mov
sub
mov
xchg
sub
movsb
lods
stc
dec
sbb
or
fsubr
sbb
fdivr
push
cmpl
pop
movsb
pop
jl
fiadds
pushf
dec
js
int3
gs
lret
jle
loope
test
xlat
sti
inc
push
xor
jno
into
sbb
pop
insl
jo
in
pop
push
mov
mov
outsb
xor
stc
xchg
push
fdivrp
cmp
inc
mov
push
dec
and
scas
xlat
in
mov
cmp
adc
loope
aad
in
pop
into
outsl
xchg
or
imul
fnstsw
xchg
incb
jp
dec
movsl
jle
xchg
cmp
outsb
or
cli
push
ja
insl
inc
shll
stc
adc
out
add
and
or
repnz
inc
ja
inc
pop
pop
clc
push
and
mov
loopne
fildl
sbb
adcl
cmc
and
inc
gs
subb
inc
push
sub
fbld
test
ds
push
call
gs
psllw
cmp
lds
or
mov
pop
dec
scas
add
cs
mov
cmp
inc
adc
dec
push
xor
jns
lea
scas
mov
imul
push
sbbl
sahf
cmpsl
xor
pop
xchg
ror
mov
movsb
cwtl
dec
mov
push
cld
aam
mov
or
mov
xchg
imul
jno
addb
mov
aad
mov
jp
push
dec
lods
testl
mov
nop
xorb
cld
sub
cmp
add
inc
js
pop
mov
push
or
insb
adc
push
add
pop
lcall
and
fsubp
jno
add
fcomps
data16
xchg
push
xchg
mov
mov
int
pushf
xchg
divl
jge
mov
inc
or
call
in
test
dec
mov
test
push
mov
out
dec
test
or
sbb
mov
mov
or
fildl
aaa
inc
mov
lock
scas
loop
xlat
aas
in
movsb
rep
xchg
push
inc
pop
test
in
xorl
inc
inc
jbe
sahf
sub
lds
call
je
pop
fcomps
pusha
or
push
add
inc
ret
lret
and
cmp
ja
sbb
dec
mov
xor
ljmp
sub
mov
fcoms
or
andnps
sti
push
push
movsl
fldenv
push
jg
mov
jb
mov
stos
adc
mov
hlt
mov
jbe
jg
xchg
test
jecxz
leave
jno
mov
pop
jl
popf
pop
stos
push
test
lds
in
inc
les
daa
xchg
adc
test
fnstenv
pop
cwtl
or
outsb
or
mov
dec
es
sti
nop
aaa
xchg
sbb
pop
bound
add
pop
cmp
in
outsl
xchg
cmp
pop
mov
adc
push
or
pop
jb
cmp
mov
movsb
add
mov
int3
sbb
outsb
popa
sbb
fistl
fsubrl
cmp
sub
imul
cmp
sub
jnp
xchg
sbb
adc
cmc
cmp
cmp
clc
sub
mov
pusha
mov
jecxz
int3
pop
fldt
stos
mov
or
adc
cmc
mov
jg
pop
mov
mov
aas
add
inc
cmp
jno
sub
es
mov
adc
mov
jp
push
lods
jns
push
pop
test
out
cmpb
xor
sti
fmuls
mov
outsl
imul
es
adc
insb
sbb
sbb
sbb
mov
sub
je
jecxz
sub
lret
mov
sbb
or
je
aad
xor
or
xchg
sbb
inc
scas
xor
mov
xchg
popl
insl
loope
cli
lret
sub
and
push
std
jmp
inc
fcoml
fucomip
fcomip
mov
push
mov
nop
movsl
inc
xchg
pop
mov
aas
cmp
sbb
mov
mov
xor
and
push
into
test
and
jl
cld
loop
inc
dec
push
aas
pop
fmul
dec
cmp
push
shr
mov
sub
or
gs
imul
out
push
cmp
sarb
xor
mov
push
cltd
jne
mov
cmovne
lods
shlb
stos
ret
or
cmc
loopne
and
decb
sbb
xchg
ret
call
subb
repnz
mov
jo
add
in
cmp
jmp
dec
cmp
jae
mov
add
addr16
rorb
iret
sub
dec
inc
mov
pop
xchg
jne
dec
add
sbb
imul
cmp
test
dec
gs
les
fiadds
outsb
out
or
sbb
pop
xchg
or
enter
xchg
in
push
sub
std
fsubrl
jb
cld
xor
mov
mov
scas
xchg
or
scas
les
loope
push
pop
or
inc
pop
in
iret
mov
cmp
mov
and
cltd
sub
add
loopne
aaa
jecxz
push
mov
imul
xchg
or
xor
push
fisttps
cli
mov
test
sbb
jbe
fadds
in
in
sub
les
out
and
cmc
pop
add
sub
fucomi
outsl
iret
jecxz
clc
sahf
sti
lahf
push
fnstcw
test
pusha
std
push
out
movsb
loope
xchg
xchg
inc
ljmp
dec
sub
shrb
repnz
sbb
mov
lds
stos
dec
sub
cmpsl
hlt
sub
popf
iret
sahf
icebp
ljmp
std
fisubs
lret
mov
mov
inc
sbb
in
inc
fs
repnz
ret
pusha
movsl
bnd
pop
rol
mov
movsl
xor
into
push
xor
jo
sbb
xchg
stos
inc
mov
stos
ljmp
int
xor
sbb
ret
mov
lea
shl
pop
test
subb
add
adc
add
decl
out
jmp
fisubrl
pop
cmp
jne
cmp
dec
sbb
pushf
xchg
jnp
lods
fldl
ret
jmp
cmp
sbb
rolb
mov
cmp
insl
dec
sahf
lods
outsl
pop
rcl
movsb
clc
cmc
add
jge
in
xor
out
jg
dec
jns
sbb
xchg
cs
lods
inc
out
das
adc
std
rolb
int
ljmp
cmp
es
stc
cmp
dec
adc
movsl
sub
and
hlt
insl
and
mov
lds
jmp
js
sub
cs
lea
pop
push
lds
hlt
inc
xchg
mov
fs
into
push
loope
jno
adc
mov
pusha
imul
addr16
push
cmp
pop
int3
sarb
icebp
call
lret
dec
fs
push
pusha
andb
mov
inc
sbb
lret
pop
insb
adc
sbb
inc
mov
in
stos
test
sub
mov
int3
stos
test
arpl
in
push
xchg
cmp
adc
jp
out
xchg
or
addr16
pop
pop
or
and
and
and
or
in
repnz
mov
lcall
insl
in
aam
mov
ficoml
jnp
out
jne
inc
insl
aad
pushf
inc
jl
lcall
scas
into
pop
hlt
stos
xor
in
jns
jno
popf
sub
push
mov
sbb
push
arpl
xchg
in
mov
cmp
jl
pop
out
sbb
addr16
subl
xchg
scas
jle
icebp
scas
cmpsl
dec
out
xor
xchg
jae
lcall
push
loop
stos
mov
cmp
sub
sbb
xchg
jge
pop
ljmp
inc
ret
lods
cli
arpl
cmp
les
data16
mov
mov
jno
mov
push
xor
mov
mov
or
in
push
movsl
or
inc
ss
cld
xchg
xor
call
dec
xchg
pushl
adc
fsub
jne
xor
cmp
fistl
sbb
pusha
push
push
xchg
inc
pop
adc
mov
xlat
les
clc
in
nop
jmp
mov
mov
test
leave
xor
inc
cs
add
shufps
loop
jb
and
cmp
jb
xor
test
jb
gs
sbb
roll
mov
testl
jl
and
outsb
jg
lea
frstor
cmpsl
daa
lret
jmp
rol
adc
cwtl
xchg
ljmp
mov
mov
xlat
mov
push
lret
shll
sub
es
test
lahf
pusha
fisttpl
pop
jmp
andb
loopne
mov
xchg
push
lret
shll
pusha
sbb
mov
sarl
mov
sbb
or
sbb
int
sbb
out
jo
movsl
jb
push
repnz
push
xor
push
fldl
das
or
and
gs
or
xor
bound
shlb
dec
rclb
xor
mov
inc
cld
aam
arpl
jle
sbb
imul
sti
jns
mov
std
xlat
rorb
inc
xchg
cmp
fistpll
lcall
jge
dec
pop
cmpsl
cmp
push
cli
and
cwtl
gs
pop
imul
test
loopne
xchg
mov
add
adc
xchg
cmp
mov
inc
cmp
ja
push
jle
sbb
adc
jle
sti
addb
or
std
icebp
ss
movsb
mov
push
lods
outsl
inc
xchg
int
push
push
inc
out
outsb
pop
and
imul
pop
mov
jmp
xchg
adc
lds
test
push
and
sbb
shlb
jo
inc
push
mov
cmp
mov
pop
and
mov
push
arpl
js
mov
lock
lcall
scas
mov
shl
in
adc
xorl
cmp
daa
xor
roll
dec
fcmovnb
mov
mov
popa
and
jle
dec
popf
loopne
inc
popf
or
add
mov
icebp
clc
enter
mov
stc
and
dec
cli
or
mov
mov
cs
mov
mov
cmpsb
mov
mov
out
insb
jecxz
push
idivl
subb
insb
ret
sbb
adc
es
int3
mov
mov
lcall
xor
test
xchg
or
fldt
push
call
xor
lods
adc
fadd
push
aam
out
jge
jg
jne
test
repz
aaa
mov
pop
dec
jmp
push
shrb
cld
cmp
fs
rcrb
mov
mov
fbld
adc
adc
inc
pop
cmpsb
das
lret
divb
outsl
lret
fwait
int
out
inc
sub
out
rcrb
ljmp
repz
cwtl
loopne
movsb
movsl
pop
mov
fsubrl
out
inc
repnz
mov
xchg
in
ffree
and
or
out
repnz
mov
adc
push
add
jae
sub
cmp
or
push
adc
mov
cmpl
pop
push
ss
sub
dec
jno
lret
loopne
addr16
inc
out
aas
repz
cmc
pusha
stos
push
inc
loop
inc
jl
and
jmp
sahf
fsubs
sbb
rcrb
jg
rcr
or
jae
fiaddl
int3
xlat
ds
lods
pop
or
fldt
cmp
clc
mov
mov
push
pushf
add
wrmsr
inc
xor
pop
in
add
xchg
xor
call
pop
cmc
jae
push
inc
jb
test
imul
arpl
fdivrp
out
mov
cli
scas
aad
mov
push
add
stos
mov
add
sub
jp
mov
clc
loope
notb
pop
lret
inc
arpl
lahf
js
lds
inc
das
sub
pop
xchg
hlt
xor
sbb
flds
pop
pop
scas
enter
loopne
ja
imul
adc
xchg
inc
add
pop
sub
dec
dec
std
daa
mov
cmpsb
lock
ficompl
xor
sbb
inc
rcpps
int3
shll
add
push
push
adc
popa
add
jecxz
fisttpll
push
xchg
movups
xor
rorl
out
rcll
cltd
sbb
in
jge
fadd
fisubl
mov
jo
jno
rol
adc
and
jmp
ficomps
movsb
push
xor
icebp
lcall
mov
dec
outsb
cmp
or
repz
fists
test
or
lcall
adcl
movsb
loope
and
adc
loopne
lahf
sbb
in
inc
mov
data16
add
adc
imull
enter
push
movl
in
popf
xor
push
std
std
ljmp
inc
loop
pop
stos
out
popf
enter
pop
push
inc
dec
cmp
or
daa
pop
pop
out
mov
std
movsl
ret
inc
fisubl
or
mov
push
fsub
out
test
and
adc
scas
inc
cmc
movsl
fs
loope
cld
stos
mov
js
push
out
push
test
dec
inc
or
pop
jge
mov
lret
bound
push
xlat
and
shlb
fnsave
adc
sti
bound
sub
fs
mov
inc
fsubrs
aad
jbe
cli
adc
rcl
sub
ret
fwait
mov
insb
in
push
pop
adcl
cmp
lods
mov
push
lcall
inc
outsb
push
xchg
push
imul
sbb
cmc
push
fldenv
mov
iret
into
aad
add
test
jg
jmp
out
jns
dec
adc
dec
movaps
mov
fisttpl
cwtl
insl
sbb
in
int
lods
jo
sbb
xor
xlat
push
sbb
or
xchg
lock
cmpsl
push
fsubrl
aam
mov
mov
jnp
iret
inc
mov
inc
ret
popf
lock
clc
pop
pushf
jb
scas
ret
testl
outsl
stos
stc
pop
cmpsb
dec
mov
push
int3
xor
mov
mov
push
sbbb
add
push
push
sub
xor
inc
mov
jmp
rolb
pop
mov
push
sbbl
mov
add
sbb
inc
cmp
pop
imul
shl
rolb
jno
mull
popa
mov
rcr
lret
cmpsb
shlb
mov
cwtl
add
push
pop
ret
mov
xchg
sub
mov
loopne
aam
jmp
imull
ficomps
dec
insl
mov
shlb
or
push
xorl
test
fbstp
jo
shlb
hlt
bound
out
mov
and
shl
xchg
icebp
mov
or
adc
loop
mov
jbe
fmull
mov
dec
scas
sub
or
jb
pop
or
xchg
adc
je
push
mov
pop
jb
insb
icebp
and
ljmp
sub
loopne
pop
cmpb
xor
rclb
rcll
pusha
sbb
enter
daa
stos
sub
in
xchg
out
iret
call
mov
subb
xor
loope
push
clc
cmp
xor
add
cmp
xor
adc
mov
push
and
push
repz
xchg
cmp
inc
xor
add
adc
mov
ljmp
and
mov
mov
aas
xchg
cmpsl
sbb
aaa
mov
dec
or
ret
pop
mov
xor
scas
dec
fbstp
shll
cmp
mov
jb
sarl
daa
nop
cmp
mov
mov
mov
in
sbb
and
test
adc
jge
mov
mov
pop
push
es
mov
shrl
xchg
aas
rcl
aad
nop
pop
in
sub
les
jno
int
int
popa
fsubl
arpl
xchg
cmp
gs
in
jl
jae
mov
hlt
pop
push
sub
lods
inc
and
insb
cli
inc
jb
xor
aam
es
pop
cmp
lret
or
mov
lods
and
nop
pop
push
popa
loope
sub
xor
sub
pop
das
cmp
call
test
xlat
sbb
jno
mov
popf
popa
in
and
stos
sbb
sbb
sub
xchg
out
pop
pop
push
fsubs
ljmp
inc
cmp
sub
mov
lods
and
out
pop
inc
loope
or
cld
add
frstor
sub
test
inc
jge
mov
divl
jb
adc
pop
ljmp
and
shrb
ficoml
leave
mov
mov
aas
push
stc
stos
les
test
jp,pt
fwait
jmp
sarl
scas
into
outsb
int3
shlb
push
icebp
and
sar
push
bswap
jl
push
mov
repz
mov
adc
push
xor
popa
add
mov
ds
icebp
mov
pop
dec
mov
mov
jp
jne
mov
stos
mov
mov
arpl
inc
xchg
les
cmp
fwait
add
jle
and
out
filds
testl
push
stos
cmp
dec
sub
pusha
adc
movsl
daa
jl
pop
out
pop
adc
cmp
adc
or
xchg
outsb
ret
xchg
or
or
jb
inc
push
inc
lea
xor
or
lcall
push
add
rcll
mov
pop
js
jno
xchg
daa
mov
push
aam
cltd
pop
adc
hlt
sub
add
ljmp
aas
sub
sub
push
stc
or
jbe
ret
gs
xchg
in
imul
lods
jecxz
cmp
ret
mov
xor
jecxz
cwtl
test
sbb
fwait
xor
sbb
ss
mov
je
sar
sub
sub
and
jnp
and
cmp
insl
mov
sbbb
dec
and
jns
lods
rcl
sub
lock
aad
je
sbb
fwait
xchg
dec
movl
jmp
pop
addb
aad
fdivr
push
jle
push
xor
inc
pop
push
fsub
jns
ja
pop
int
test
mov
ja
sbb
cmp
lret
jle
shll
inc
push
mov
mov
mov
mov
inc
sarl
sahf
fldt
das
sub
test
mov
or
cli
cltd
icebp
js
cmp
les
sbb
repnz
push
xchg
in
ds
lcall
cltd
cmp
test
fcompl
fs
fcomp
push
into
xor
sti
mov
movsl
js
test
push
ficompl
test
test
fstps
test
lret
xchg
push
adc
xor
mov
mov
push
mov
inc
out
test
hlt
js
daa
fwait
pop
int3
jg
mov
cmp
inc
add
xor
pop
mov
add
ja
mov
aam
test
or
and
popf
sbbl
aaa
sarb
dec
sub
inc
mov
sub
push
inc
in
push
loop
dec
sub
test
fdivrl
outsl
mov
pop
aaa
mov
xor
outsb
mov
in
cmpsb
ljmp
cld
sbb
iret
sbb
test
xchg
mov
push
popf
jecxz
inc
lds
dec
leave
or
dec
cmp
in
out
fisubrl
rorl
fidivrs
adc
inc
les
push
out
fdivrl
lret
jle
add
push
sahf
outsb
loop
sub
cld
xchg
push
ficoml
fsubrs
push
adc
ret
mov
xchg
mov
je
aad
or
cmp
ja
icebp
hlt
loope
push
fs
add
addr16
scas
in
jo
sub
mov
lcall
push
jmp
dec
xor
ss
nop
pop
cmp
leave
loope
inc
inc
xchg
pop
sahf
pop
xchg
leave
inc
sub
sbb
add
pushf
inc
xor
mov
pop
in
data16
cmc
add
xor
pushf
dec
stos
loop
jae
mov
repz
or
test
clc
adc
scas
pop
jge
test
jg
push
dec
mov
lods
aad
testb
mov
mov
or
sti
dec
or
push
stos
jp
das
sub
jge
push
outsl
pop
adc
mov
mov
xchg
iret
xor
and
add
mov
lret
mov
jp
ja
notl
aad
cmp
test
push
inc
gs
push
mov
xor
sarl
fs
sbb
mov
cld
inc
xchg
shll
adc
push
mov
popl
push
fmull
cld
add
add
lods
stos
jno
add
inc
mov
inc
in
inc
cs
outsb
jge
outsl
inc
dec
outsl
mov
jmp
push
mov
subb
xor
push
mov
mov
cld
mov
sub
in
test
sub
data16
int3
pop
dec
xchg
xchg
outsb
or
fsubl
add
mov
bound
jnp
lahf
sar
int3
ss
stos
or
dec
jno
aaa
inc
jno
sbb
dec
dec
sahf
xchg
out
inc
hlt
jae
lds
mov
dec
pop
jge
jmp
ds
mov
pusha
mov
jne
mov
mov
sub
mov
pusha
cmpsb
jns
pop
nop
fsubrs
into
push
mov
jne
or
in
sbb
mov
add
divb
fmul
popa
pushf
rcl
out
fdivrp
sbb
cmp
das
adc
sbb
into
mov
adc
int
mov
cli
jno
lds
mov
adc
push
mov
aad
cmp
pop
inc
sbb
test
daa
xor
mov
xchg
movsl
test
popf
cmp
inc
mov
fsts
push
sbb
lcall
test
mov
xchg
in
mov
pop
shl
jg
push
sub
and
push
nop
outsl
nop
call
push
enter
mov
test
sarb
mov
imul
inc
xchg
repz
scas
movsb
push
pusha
fdivl
xchg
pop
pusha
push
pop
leave
mov
ja
cwtl
lods
xchg
stos
loope
or
xchg
mov
inc
loop
lea
fistl
unpcklps
adc
movsl
sub
popf
dec
ret
in
inc
test
adc
push
fcoms
mov
clc
inc
sub
fistpl
xchg
lods
stc
lock
das
push
call
into
or
call
insb
outsl
jb
scas
rclb
mov
les
divb
xchg
shl
lods
ret
popa
aas
adcl
mov
daa
or
inc
mov
cmp
pop
xlat
out
sbb
jl
jae
inc
xor
in
jp
pop
loopne
daa
and
pop
faddl
sbb
push
loop
jne
nop
test
into
jae
int3
dec
add
clc
adc
in
mov
dec
dec
pop
repz
mov
mov
pop
fnstenv
repz
jb
dec
inc
mov
mov
sbb
push
mov
xor
inc
sbb
js
lds
cmp
popa
push
mov
jge
dec
or
inc
cmc
push
cwtl
mov
sub
loopne
out
cli
clc
and
jo
aas
subl
dec
jb
adc
sbb
shr
fisubrs
cli
out
inc
jne
jb,pt
or
and
cli
ja
cmpl
fcompl
ja
pop
gs
mov
jo
fcomi
adcl
mov
adc
jp
and
xchg
push
cli
and
add
push
pop
or
xchg
stos
outsl
and
mov
cmp
xchg
or
jbe
jae
adc
jbe
and
test
shll
mov
jnp
jnp
mov
mov
inc
icebp
cmp
xchg
pop
dec
push
inc
or
mov
aas
cmp
mov
adc
adc
mov
lods
and
push
in
movsb
fcompl
jl
mov
out
fidivrs
cmp
xchg
cli
enter
fstp
sahf
popa
dec
sahf
rolb
mov
mov
test
movups
shll
notb
mov
arpl
enter
add
xchg
sbb
jecxz
pop
loop
sbb
fiadds
hlt
sarb
push
nop
scas
cmpsl
mov
or
addb
mov
testb
lea
xchg
or
jne
fs
dec
in
ja
subb
fidivl
or
in
iret
test
mov
cmpsb
je
xorb
bnd
mov
adc
shlb
push
scas
jmp
popf
movsl
push
lods
pop
shlb
xchg
xor
stc
out
mov
ds
imul
and
out
dec
sub
mov
sub
movsb
sbb
mov
push
sub
cmc
lock
inc
xchg
push
sub
sbb
jmp
fisttps
adcl
jg
inc
clc
mov
fwait
lret
adc
push
cwtl
xor
dec
or
stos
pop
and
sbb
mov
shrl
sbb
sahf
pop
and
aaa
repz
out
pop
and
ror
popa
sarb
cmc
test
mov
out
cmp
movsl
or
push
addr16
lcall
enter
mov
or
push
jge
fdivs
pusha
daa
mov
data16
mov
push
inc
mov
scas
movsl
dec
inc
clc
or
sbb
inc
xor
fcmovne
xor
outsb
loope
inc
lds
mov
mov
inc
dec
mov
or
add
mov
out
push
popf
sbb
jl
arpl
out
dec
jl
xchg
add
sbb
lret
nop
imul
xchg
iret
in
loopne
mov
xchg
js
loopne
andb
add
push
ja
push
out
lea
dec
xchg
xchg
mov
dec
push
dec
jle
out
mov
xchg
cmp
int3
xchg
lock
inc
mov
sbb
cwtl
jg
sbb
pop
mov
lods
push
adc
mov
mov
aas
sti
lcall
aaa
call
mov
in
cs
pop
jnp
or
push
test
in
rolb
xchg
mov
adc
mov
mov
out
shll
int3
add
mov
xor
shr
adc
sarl
mov
jo
cmp
into
xor
xchg
cmp
inc
mov
mov
movsb
sub
sbb
xlat
or
leave
and
mov
adc
and
rcl
ror
mov
push
mov
and
mov
jns
xchg
cmc
jge
add
adc
mov
mov
xchg
push
test
cmp
mov
outsl
pop
add
test
out
and
add
gs
lods
repnz
xchg
jbe
into
dec
adc
jle
out
pop
xor
mov
rorb
lds
or
add
hlt
sahf
adc
aam
inc
xor
aaa
sbb
lods
outsl
shll
jnp
cli
lods
data16
mov
hlt
dec
push
enter
fstps
arpl
lret
push
les
fmull
mov
sbb
stos
jbe
xchg
cld
pop
lods
pusha
lahf
fcmove
arpl
es
ret
aas
mov
adc
adc
dec
dec
adc
inc
ficompl
push
lret
sbbb
fnstenv
lret
mov
xchg
jb
ds
push
jo
mov
fsts
cmp
mov
adc
sahf
mov
hlt
mov
shl
cmp
nop
add
push
sub
mov
addl
and
cmp
into
dec
adc
xchg
in
out
lods
fnsave
mov
jae
sub
jb
add
sub
popf
sub
add
hlt
mov
mov
nop
mov
nop
cmp
xchg
scas
sti
lods
lret
jno
lock
and
jbe
jl
push
mov
test
jb
adc
sbb
mov
xorl
cld
sub
addr16
or
hlt
push
ds
arpl
adcb
negl
mov
add
inc
test
xchg
sub
outsl
in
jno
and
jne
test
xchg
inc
sti
jo
sbb
les
sti
iret
test
and
cmpsl
enter
pop
scas
push
push
cwtl
mov
loopne
push
push
addr16
ds
imul
xchg
sub
or
sbb
adc
loope
sbb
lret
movsl
out
leave
mov
faddl
les
cltd
cs
dec
lock
mov
mov
insb
insb
push
aad
mov
aad
ud2
dec
jmp
cmpsl
mov
sahf
leave
aad
mov
mov
mov
les
xchg
das
xchg
cmp
mov
pop
xor
sub
add
push
xor
rorb
inc
mov
jmp
cmp
ret
and
add
test
cltd
cld
cmc
cmp
cmp
icebp
ret
xor
jg
xor
mov
mov
adc
lds
out
daa
cmpsb
ss
fdivl
lret
or
xor
cli
lods
data16
mov
jmp
call
in
xchg
cld
mov
iret
push
fistl
in
hlt
pop
mov
bound
lods
sub
stos
xchg
data16
mov
sbb
and
fimuls
mov
jae
scas
sbb
sbb
push
cs
aam
decb
fsub
mov
mov
mov
fs
sub
pop
jno
sbb
out
fmul
inc
jecxz
loopne
out
out
and
dec
adc
mov
test
sub
lret
imul
dec
enter
cmp
push
dec
dec
pop
xor
hlt
movsl
adc
inc
and
jg
xlat
inc
sub
inc
pop
mov
mov
or
addr16
sub
inc
daa
inc
push
arpl
mov
dec
test
mov
fstpt
sub
fisttpl
sahf
rclb
sbb
rcrl
sub
jp
adc
sbb
shlb
mov
aad
aam
jl,pt
add
fwait
add
cs
xchg
cmp
dec
mov
add
jb
adc
and
in
pop
pushf
fstpl
scas
mov
les
sbb
xchg
cltd
rcll
repnz
sbb
xor
sbb
or
sub
jno
mov
xchg
or
add
push
fdivp
fwait
push
inc
or
arpl
sub
inc
lcall
mov
and
xchg
fsubl
cmpsb
push
sub
fs
push
int
push
lods
adc
dec
jp
lods
lret
push
lods
and
stc
shlb
into
mov
xchg
and
adc
shl
aas
mov
mov
or
in
data16
repz
sbb
jo
daa
and
je
jp
mov
push
pop
sbb
mov
and
pop
ret
shll
rcrb
sbb
dec
fnstcw
roll
push
jnp
rcr
pushf
inc
mov
lret
aaa
std
jge
in
lods
sbb
lods
jne
arpl
sbb
dec
mov
js
in
xor
mov
ja
xchg
xor
stc
jne
xchg
nop
push
inc
mov
mov
jns
mov
stc
std
xchg
sbb
out
lret
mov
push
and
ret
into
test
outsb
lds
mov
imul
ret
aaa
stos
dec
clc
lods
jnp
sbb
mov
in
lret
out
hlt
pcmpeqw
push
js
ret
adc
sahf
sub
nop
and
aas
xor
cld
int
jae
xlat
or
push
inc
and
pop
je
lcall
mov
push
add
imul
testb
out
push
mov
jmp
outsl
pop
mov
nop
data16
shll
mov
ficoms
inc
sahf
pop
xchg
repz
pop
push
stc
gs
mov
out
je
jne
int3
in
push
outsl
sub
enter
in
pop
mov
lods
out
pushf
data16
hlt
pop
negb
cmpsb
movsl
enter
jnp
mov
jbe
popa
pop
test
setne
xchg
mov
test
lock
ja
lds
push
cmpsb
fldl2e
dec
scas
add
xor
jle
shll
out
ds
inc
lds
add
pop
or
push
jecxz
scas
sbb
sub
inc
xor
addr16
and
js
cmp
push
cwtl
pop
ss
mov
inc
cmp
lret
das
in
dec
push
bound
enter
int
sahf
cwtl
in
jecxz
mov
test
push
std
add
xor
push
pop
jle
loop
sar
cltd
fsubl
imul
push
push
aaa
jge
rolb
inc
push
cmp
push
mov
xor
mov
gs
sahf
adc
jmp
fdivrl
inc
inc
lea
and
enter
sti
mov
xchg
add
ja
scas
pop
stos
mov
cmpsl
int3
cwtl
stos
and
ret
dec
out
dec
add
bound
loopne
jnp
mov
sub
les
scas
cli
sbb
js
push
loopne
scas
ljmp
in
iret
push
xchg
dec
mov
lret
jle
mov
xorb
mov
push
lods
pushf
dec
dec
mov
push
push
fldenv
mov
fisttpl
xchg
xchg
adc
pop
pop
int3
sahf
mov
dec
cmpsb
jmp
clc
jo
fbld
pop
mov
add
or
aaa
jno
adcl
in
sub
aad
dec
mov
dec
mull
mov
cld
adc
leave
arpl
test
and
mov
jnp
xchg
push
or
fistpll
push
adc
jb
shl
push
inc
and
xchg
dec
sbb
mov
pop
ret
and
gs
pop
or
inc
push
pop
arpl
xor
shrb
push
aad
dec
adc
inc
popa
fwait
int
cmp
bound
jns
cmp
test
cmp
aad
fidivl
sahf
cld
out
push
icebp
xor
mov
and
mov
mov
xchg
xchg
je
xchg
push
das
cmp
dec
dec
stc
mov
push
aaa
and
in
cmp
ror
aaa
stos
scas
repnz
jnp
dec
jg
mov
pushf
js
mov
pop
lds
sub
stos
xchg
inc
xor
sbb
jae
test
test
xor
shrl
and
repnz
mov
sub
cli
dec
jno
das
mov
scas
dec
daa
push
inc
scas
lret
xchg
push
addr16
cmp
push
jbe
mov
das
popf
xor
sub
in
cmpl
inc
insb
sub
push
inc
cmpsl
lcall
cmc
add
adcb
movsb
push
jns
ja
or
in
pop
and
inc
xor
and
sub
sub
sub
mov
rcrb
mov
daa
xchg
call
xchg
mov
popa
and
mov
lcall
add
or
mov
shlb
jp
push
or
push
bnd
mov
ds
stc
mov
adc
outsb
mov
and
mul
jmp
stos
sbb
push
push
aam
cmpb
cli
jbe
imul
mov
xchg
mov
and
je
adc
js
stc
push
push
arpl
scas
dec
push
cwtl
cmp
push
les
fwait
push
sbb
rcr
in
dec
adc
push
mov
adc
xchg
adcb
add
mov
adc
dec
jne
adcb
cmpl
popf
jg
fwait
sub
hlt
mov
arpl
lods
jecxz
push
sbb
dec
test
cmp
cmp
nop
and
lods
in
mov
cmp
out
in
mov
xor
test
ja
inc
test
mov
xchg
mov
rolb
insl
out
fidivrl
out
inc
adc
add
nop
stos
ror
adc
pop
mov
sub
out
and
dec
adc
mov
adc
xchg
insl
xorl
into
subl
leave
ds
sub
cmp
jg
cmp
int
xchg
pop
xchg
mov
jbe
call
out
jbe
std
out
mov
sbb
inc
std
add
fildl
sarl
mov
cwtl
xchg
or
ljmp
adc
sub
or
or
insl
sbb
mov
fst
lds
push
add
xlat
imul
pop
sbb
jne
cmp
leave
popf
lcall
fsubl
lods
aas
mov
sbb
sub
int3
sbb
test
inc
outsl
pop
cmpsb
movsb
sub
push
cld
in
push
cmp
push
fs
or
inc
push
and
mov
out
test
jb
leave
cmpsb
lcall
xchg
ja
imul
xor
sub
mov
popf
add
scas
mov
sub
shlb
call
dec
fldl
scas
arpl
es
ljmp
lret
leave
sub
aas
push
sbb
dec
movsb
fcos
jns
sbb
jnp
xchg
dec
cmpb
arpl
dec
jno
xor
or
inc
jbe
imul
test
adc
or
scas
ret
arpl
scas
inc
mov
rorl
test
test
cmp
sbb
js
xchg
dec
mov
in
and
mov
lret
jp
jb
add
imul
iret
fiadds
pushf
mov
in
jne
jns
xchg
iret
iret
pop
jge
inc
test
dec
mov
pop
into
into
cmpsl
inc
add
xchg
or
xchg
mov
aam
insb
pop
cmp
adc
jg
push
daa
adc
jl
loop
fldl
adc
and
leave
adc
pop
dec
fs
push
fsub
xor
lret
jne
jno
jbe
arpl
inc
push
mov
mov
and
sub
lahf
sbb
cmp
fstpl
arpl
pop
sbb
cltd
int
mov
mov
and
ret
pop
aam
jge
mov
mov
leave
lock
es
fdivs
xchg
cmp
mov
dec
sub
pop
inc
pmullw
fldt
xchg
adc
inc
mov
jb
cmp
push
mov
test
or
aad
std
iret
add
mov
sbb
or
jl
cmp
cmpsb
xchg
mov
cmp
iret
popf
pop
pop
and
sahf
pop
inc
das
add
mov
bound
inc
mov
jmp
cmc
ret
xor
pop
ja
push
xchg
lahf
shll
scas
xchg
lods
dec
adc
push
xchg
stos
aas
lret
lret
sbb
push
popa
in
add
aam
ds
cmp
adcb
imul
or
lds
cmp
daa
mov
clc
xchg
pop
xchg
ja
adc
lods
push
mov
adc
cltd
sbb
xor
lods
mov
add
push
adc
push
ds
sub
ret
cld
decb
scas
cwtl
mov
aaa
and
pop
das
and
mov
imul
inc
mov
mov
fs
dec
dec
and
in
add
mov
test
ffree
xlat
or
mov
bound
push
lea
roll
ss
xchg
adc
sbb
loop
cmp
jecxz
pop
or
clc
pushf
sti
lcall
dec
out
inc
dec
mov
int
js
jae
mov
push
push
push
test
icebp
dec
xchg
push
mov
xor
sbb
gs
inc
jae
loope
into
push
add
inc
mov
lret
cmp
test
mov
sbb
andl
lds
sub
xchg
dec
ret
je
xchg
add
jmp
das
les
sbb
in
sub
adc
pop
sahf
or
inc
push
xchg
jb
inc
xchg
or
ja
enter
fnstenv
inc
mov
and
mov
loope
ror
fadd
repnz
jnp
sbb
jecxz
ret
popa
cltd
jmp
jl
dec
sub
stos
and
pushf
mov
sbb
out
ss
adc
or
inc
fidivl
jp
pusha
insb
pop
notl
dec
pop
andb
mov
jle
imul
mov
and
add
xchg
movsb
pop
cmpsb
xchg
dec
jle
push
fistpl
jbe
scas
repz
and
inc
mov
in
aad
inc
dec
jmp
decb
outsb
popa
pop
pop
repnz
shll
dec
insl
gs
or
lcall
mov
fisubs
jb
push
pop
minps
xor
pop
push
scas
aam
mov
cmp
fstp
sub
movsb
nop
mov
shll
jle
xor
sti
mov
cld
mov
xchg
dec
sbb
sbb
in
mov
shl
dec
out
dec
ret
cmc
test
xchg
xchg
xchg
fldl
out
pop
xchg
andl
lds
push
rorb
lea
adc
xchg
dec
jp
clc
mov
sbb
bnd
and
sub
dec
or
nop
or
sahf
sbbl
push
mov
mov
ret
rolb
jmp
mov
sub
push
cltd
test
in
outsl
dec
jmp
out
scas
mov
mov
jnp
cmp
and
das
sbb
std
or
gs
adc
push
mov
mov
mov
inc
cmp
popf
pop
inc
inc
sbb
fwait
add
mov
shlb
adc
and
jle
test
lret
adc
push
in
sub
inc
rorb
and
sub
outsl
lea
and
bound
cmpsl
pop
stc
sub
xor
leave
icebp
notl
mov
adc
pop
or
cmpsl
mov
mov
sbb
dec
sbb
pop
lret
dec
add
lock
scas
int
pop
sbb
inc
adc
xor
rcrb
pop
cli
dec
popf
and
add
add
lock
popf
jae
dec
push
cmp
out
mov
mov
jg
adcb
jmp
addr16
sbb
sti
and
lods
cmp
pop
sub
dec
adc
pop
stos
outsb
push
test
add
push
into
rorl
fsubr
jne
fnsave
pop
xor
gs
ljmp
push
fcmovu
inc
iret
push
fdivl
outsb
fcmovb
xor
mov
xchg
cmpsb
dec
hlt
ret
lock
push
test
sub
xchg
ret
adc
adc
fdivp
sub
and
push
aam
add
pop
stos
es
movsl
mov
or
leavew
stos
fdivl
ficompl
std
scas
daa
insb
ljmp
lock
push
push
or
daa
hlt
mov
mov
mov
adc
jae
and
mov
stos
in
out
cmp
bndstx
aas
xchg
movsb
pop
stc
jecxz
xor
mov
push
or
movsb
hlt
and
jno
fisubl
inc
push
fwait
out
xor
lds
jecxz
ficoms
jmp
popa
add
bound
or
decl
iret
add
gs
fwait
aam
out
pop
dec
sti
popf
rdpmc
jg
jae
xchg
andl
fidivrl
ret
lods
rol
sbb
push
arpl
push
popa
dec
sahf
dec
pusha
insl
and
pushf
imul
test
mov
sub
cmp
pop
inc
pop
jmp
adcb
pop
popf
pop
sbb
mov
inc
outsl
aam
xchg
jl
xchg
inc
or
sub
dec
inc
gs
cmp
lahf
insl
cltd
mov
popa
incl
sub
push
inc
sub
or
ja
icebp
shlb
cli
push
or
cwtl
jb
daa
push
iret
cmp
mov
push
mov
scas
jecxz
inc
add
jb
xchg
jbe
sbb
dec
jge
fisubrs
das
jle
inc
jb
jo
jb
sub
andb
test
jnp
mov
mov
pop
inc
sbb
dec
cmp
daa
ljmp
add
mov
add
rclb
hlt
xchg
neg
pop
in
shl
outsb
add
dec
pop
leave
cli
pop
mov
push
push
push
sub
add
shl
std
cld
rep
test
movsb
imul
movb
add
and
push
enter
mov
inc
fsubrs
adc
cmp
or
mov
jmp
ficoms
xor
cmp
sbb
cmp
sub
cwtl
clc
adc
sbb
pop
cli
mov
in
dec
add
mov
outsl
iret
mov
inc
out
movsb
test
pusha
or
push
mov
push
cmp
push
push
mov
pop
ljmp
inc
pop
adc
loop
add
pop
sahf
inc
cld
rcll
dec
cltd
pop
xchg
into
stos
push
jae
mov
fldenv
into
mov
jge
cmp
mov
pop
and
sbb
cwtl
insb
rclb
inc
mov
iret
mov
sbb
jge
pop
xchg
cmp
or
pop
xchg
xor
filds
js
xchg
or
in
and
imul
fsub
or
jnp
aam
cmpsl
add
xor
lret
dec
popa
xchg
adc
mov
es
js
repz
xchg
sbb
jg
shlb
stos
and
dec
push
das
cmp
cmpsb
mov
lahf
jl
mov
int
jbe
enter
std
sti
sub
adc
mov
nop
fwait
pop
pop
mov
or
push
dec
mov
pop
arpl
cmpsb
jl
cmp
out
jge
pop
push
call
xor
addr16
out
push
jb
cs
xchg
xchg
xchg
xor
stc
jmp
mov
bound
fnsave
cltd
adc
mov
sbb
pop
dec
pushf
push
mov
fidivrs
add
cld
bound
rcrb
inc
cltd
jne
pop
aam
cmp
sti
iret
push
mov
js
inc
jo
rorl
pop
cmp
mov
repnz
lods
jo
lahf
pop
pushf
out
outsl
sbb
and
adc
rcl
sahf
inc
xor
sbb
pop
ja
sbb
rcrl
pop
jp
jge
loop
icebp
mov
adc
mov
je
mov
aam
sbb
pop
cmp
mov
xchg
mov
mov
dec
mov
jmp
mov
int3
or
addr16
dec
bextr
mov
mov
and
insl
push
pop
mov
aad
xor
sub
push
je
mov
and
push
sbb
jno
jae
roll
xlat
xor
cmpl
push
lea
movsl
ljmp
add
inc
insl
fldcw
jbe
inc
sbb
jns
xchg
repz
xchg
jns
int
call
mov
jl
sbb
cmp
adc
ds
shl
cmp
outsl
fidivs
xchg
jne
xor
insl
test
dec
mov
lods
or
imul
cmp
jb
fildll
xor
mov
jg
push
or
fs
pop
clc
ljmp
loop
mov
xchg
rcll
push
push
lea
insb
mov
js
sti
pusha
test
push
mov
sub
unpcklps
mov
cltd
into
adc
mov
lods
or
jne
int
adc
mov
add
jecxz
pop
cmp
xchg
mov
mov
std
jge
dec
mov
bound
addl
leave
popa
lcall
dec
and
jno
add
imul
push
pop
dec
iret
lcall
xchg
pop
cmp
incl
dec
or
pop
test
ja
adc
rorb
outsl
add
nop
repz
bound
add
jl
inc
sub
stc
jnp
icebp
jg
aad
repz
sbb
jg
sub
scas
sarb
add
add
mulb
mov
je
mov
push
push
es
aad
in
mov
push
incb
ficoms
nop
stos
inc
jecxz
rclb
inc
push
movb
mov
xchg
cmp
lret
cld
pop
jecxz
pop
lds
sahf
sub
inc
push
mov
mov
fiaddl
movsl
repnz
ret
sbb
xor
push
mov
movsl
xor
out
mov
ljmp
cmc
ds
adc
daa
jb
or
xchg
mov
pop
and
adc
es
cmp
dec
xor
outsl
mov
std
gs
xor
jge,pt
adc
fidivl
jle
ja
pusha
jge
push
mov
loopne
cmpsb
leave
stos
pop
fisubl
xchg
cmp
xchg
dec
loope
inc
sub
push
sahf
stos
das
icebp
lret
xchg
cmp
stos
pop
jle
fnstsw
sbb
push
fwait
cwtl
addr16
fsub
or
pop
jmp
insl
ret
or
loopne
xchg
je
pop
jg
xchg
test
jmp
xchg
mov
pop
pop
push
inc
xchg
movl
rcrl
jbe
imul
dec
or
xchg
rcr
test
dec
dec
mov
cmp
imul
mov
rcll
outsb
push
sbb
lcall
adc
mov
cmp
lcall
pop
dec
add
pusha
scas
nop
xor
iret
lds
stos
pop
mov
push
enter
les
push
adc
adc
lods
clc
xor
fcomp
popf
icebp
push
into
divl
jle
stc
test
xor
rcrb
test
mov
jmp
xor
ja
xor
div
aad
add
sahf
imul
int
pusha
arpl
test
icebp
incb
popa
aad
les
inc
outsl
lods
arpl
ffree
sub
inc
aam
loope
shrl
or
repz
cltd
mov
pop
mov
js
nop
filds
xchg
cs
loope
push
and
fidivrs
push
xlat
cli
outsb
test
incb
push
sbb
adc
pop
lahf
nop
mov
pop
mov
dec
fcoml
pop
xlat
push
imul
push
clc
inc
sbbb
push
inc
scas
push
fcomps
fcomp
cmp
sbb
jg
jno
mov
dec
aam
xchg
in
ljmp
xlat
popa
rorl
imul
or
jbe
rolb
jp
inc
add
daa
cld
inc
loop
add
xlat
sti
inc
xor
cmp
push
test
dec
les
mov
sbb
ljmp
mov
test
mov
push
aam
movsb
clc
lcall
add
aad
push
into
xor
jl
xor
xchg
imul
es
mov
or
push
les
call
mov
sub
js
outsl
pop
je
xchg
push
in
pop
fwait
out
in
rclb
aam
pop
inc
or
inc
dec
mov
into
jb
adc
lods
jo
xchg
rcr
add
push
push
loop
mov
pop
xlat
mov
or
push
test
je
dec
sbb
stos
and
xchg
pop
push
jle
outsb
sbb
dec
mov
sarb
adc
mov
dec
pusha
or
inc
mov
mov
lods
out
sub
sub
mov
sub
and
xor
and
filds
or
mov
cmpsb
fwait
adc
mov
xchg
xchg
scas
push
and
ficoml
dec
pop
iret
and
loopne
add
inc
int3
pop
push
mov
orl
andl
dec
cmp
jle
dec
pop
push
mov
xchg
add
outsb
push
pop
dec
in
out
int3
adc
stos
mov
lret
leave
add
xor
pop
outsb
xlat
or
jbe
push
negb
mov
mov
faddl
sbb
mov
push
je
adc
rcrl
sti
fs
inc
testb
push
sbb
push
xlat
sti
sar
sub
es
mov
push
out
ja
xchg
and
sub
pushf
pop
decl
pop
push
xor
sub
cltd
dec
push
in
jp
push
mov
mov
orl
repz
pop
in
mov
cli
pusha
stos
inc
push
ss
movsl
sub
movsl
shrl
xlat
push
aas
xor
das
mov
pushf
int3
fnstcw
inc
and
iret
sbb
push
mov
pop
jmp
cltd
mov
mov
mov
and
movsb
xor
dec
ljmp
jae
sbb
xor
inc
rclb
xchg
cmp
push
incb
push
lock
push
jg
jp
rclb
cmpsb
cld
aaa
xchg
insl
inc
fcom
jge
bound
add
aaa
hlt
add
clc
pop
aas
sub
jge
push
cmpsl
popf
cli
cmp
shl
stc
lret
insl
cmpl
repz
stos
enter
imul
xor
jp
outsl
popf
arpl
je
shrl
cmpsb
jne
jmp
mov
dec
ficomps
push
les
pop
push
rcrl
push
pop
xor
lds
pop
jge
out
rcrb
push
mov
aaa
cltd
jo
int
loopne
and
or
das
rcrb
dec
xor
int3
insb
std
mov
hlt
pop
or
adc
add
jg
push
sub
xchg
imul
ljmp
std
out
rorb
mull
rolb
inc
add
sub
add
jo
xchg
xchg
adc
dec
push
and
or
push
ja
jmp
xchg
jle
pushf
xchg
imul
cmp
das
jle
push
xchg
in
xor
sub
xor
fs
sub
adc
outsl
insb
push
sbb
mov
xchg
xchg
fildl
xchg
push
cli
push
inc
push
dec
aam
xchg
cltd
mov
xorb
push
int
mov
fcmovne
adc
in
xchg
jo
leave
mov
adc
xchg
movb
xor
call
mov
xchg
sbb
dec
dec
aam
repz
pop
pushf
xchg
sarb
insl
arpl
es
icebp
mov
movsb
sarb
jge
popf
outsb
xchg
push
jbe
lcall
jmp
aas
mov
lret
sub
xor
idivl
cmp
outsl
shrb
loopne
je
in
fistps
push
repnz
sub
xlat
jnp
cmp
gs
lret
ret
popa
jb
cmp
mov
lret
dec
in
cmp
push
or
rorb
testl
pop
out
xor
ret
je
adc
ret
dec
in
dec
xor
dec
popf
loopne
icebp
push
stos
stc
mov
scas
rclb
push
add
pop
pop
mov
xor
imul
aas
repz
mov
sub
mov
testb
pop
loopne
pop
dec
cs
or
cmpsl
adc
jle
outsb
fldcw
pop
das
push
xchg
xchg
in
cmp
jns
mov
sub
fimuls
fidivl
pop
mov
xchg
loop
dec
xchg
popf
adc
outsl
mov
fnstcw
dec
pop
jecxz
sti
cmpl
popa
dec
pop
sub
lea
icebp
scas
sbb
mov
or
cmpsl
in
mov
lds
out
push
and
xor
xor
fnstsw
mov
cmc
and
fdivrs
jne
add
adc
jl
mov
insb
push
stc
push
cmpsl
jp
fwait
dec
sahf
loop
sarl
dec
push
fs
and
aas
pushl
mov
jmp
rcrl
inc
ret
sahf
cs
pop
pop
dec
addr16
push
pop
jnp
cmp
loope
mov
into
pop
and
enter
rclb
sahf
mov
lret
bound
iret
leave
jle
xorb
hlt
out
mov
int3
fcoms
push
aas
cltd
xor
cli
pop
rcl
ja
and
cmp
mov
insl
jp
pop
xchg
mov
push
sub
lods
jnp
mov
mov
or
jg
jl
in
dec
out
or
movsl
add
cmp
in
pop
mov
popf
cli
sahf
fsubs
jl
inc
inc
cmp
xchg
push
sbb
push
xchg
mov
sub
mov
aam
ret
js
jp
or
cmpsb
push
mov
leave
sbb
xor
popa
add
dec
sub
cs
rol
mov
pop
andb
aas
inc
lds
test
or
adc
push
movsl
push
pop
push
inc
pop
push
xchg
imul
push
inc
cmpsl
xor
pop
add
xor
loopne
hlt
hlt
aaa
js
mov
xlat
es
adc
pop
push
and
loope
adc
out
orb
sarb
sub
call
jle
lahf
mov
pop
test
cltd
sub
fcmovnbe
aaa
shlb
in
inc
loopne
add
lahf
push
mov
xlat
ljmp
xor
sbb
fbstp
push
xor
cltd
xchg
jo
pop
and
add
sbb
clc
sarl
out
in
jnp
dec
sub
or
insb
or
and
mov
mov
es
xor
mov
xor
ret
xchg
lods
mov
xchg
loop
test
pop
movsb
cmpl
adc
inc
sub
cmp
mov
jbe
cmpsb
daa
fnstcw
dec
fmulp
outsb
addr16
push
movsb
or
insl
aam
fmull
cmp
and
mov
mov
mov
mov
fidivrl
loopne
adc
adc
addr16
fisubrs
divl
push
mov
adc
push
sti
push
xchg
outsb
mov
je
sahf
lods
fcompp
sbb
mov
lds
lds
rcll
fsubrs
xorb
push
je
fsubrl
cmpsb
ljmp
fwait
pop
xchg
or
lds
imul
icebp
movsb
addr16
add
lock
xchg
cmp
sub
pop
cmp
loop
sub
add
rclb
mov
inc
daa
sbb
jle
idiv
sbb
xchg
inc
sub
shlb
inc
lahf
add
or
imul
in
adc
sub
out
jae
sbb
cwtl
outsl
adc
outsl
lcall
rcrl
iret
out
inc
movsl
mov
aad
dec
jno
stos
loope
push
and
into
clc
jecxz
inc
rclb
add
xchg
aad
pop
xchg
jo
mov
pop
nop
mov
jle
sbb
adc
push
lcall
push
inc
imul
aad
jne
xchg
mov
sub
loopne
jl
sti
lds
divb
mov
sub
jbe
fld
insl
dec
mov
test
popf
add
inc
out
orb
rclb
mov
aad
mov
movsl
mov
fistps
sub
sub
cmc
mov
clc
push
push
sbb
ss
mov
test
shlb
rcll
fsubrl
push
cs
stos
clc
mull
mov
push
inc
mov
int3
cmp
mov
popa
inc
inc
add
sbb
faddp
test
fnstcw
test
test
repz
hlt
jg
aaa
jnp
cmp
cmpb
ficompl
xchg
push
aas
add
or
jl
cli
sbb
cmp
or
dec
sbb
xor
mov
popf
mov
xlat
lock
xchg
cmp
rcr
sbb
xchg
lret
mov
rcrb
sahf
pop
push
insl
dec
xor
test
push
jecxz
jge
int
gs
dec
std
inc
jo
in
in
or
mov
je
fistl
xor
dec
pop
or
mov
push
lds
push
lods
aam
dec
stos
sbb
in
arpl
lret
and
or
xor
or
call
jp
fs
ja
mov
push
dec
lods
push
add
leave
inc
out
mov
fisttps
jno
pop
adc
in
mov
fiadds
sbb
daa
push
jne
jne
inc
mov
pop
pop
sub
xor
jle
xor
hlt
rcll
and
movl
mov
arpl
lret
dec
loope
mov
test
mov
in
mov
loopne
jl
sbb
xlat
int3
lods
xlat
jmp
gs
dec
cmpsb
pop
subb
or
dec
mov
inc
xchg
and
outsl
loop
in
cwtl
es
cltd
inc
outsl
mov
mov
repz
pop
push
rcrb
jp
test
int3
jle
fisubrs
test
sbb
lret
mov
xchg
in
inc
push
addl
les
imul
mov
nop
mov
mov
inc
sti
mov
or
insb
push
mov
jbe
push
insl
inc
and
das
jge
xor
sarl
sub
jo
and
push
xchg
cmc
pop
stc
je
xor
or
add
xor
in
mov
ds
mov
test
cltd
out
ljmp
add
sbb
or
in
xchg
sbb
shrb
jns
pushf
cmp
testl
dec
dec
or
and
pop
and
jbe
mov
xlat
ret
sbb
mov
pusha
pop
rorl
pop
cli
scas
rolb
ds
repz
push
push
xor
mov
sbb
add
mov
jmp
xchg
or
xor
int
pop
mov
scas
imul
dec
in
add
mov
push
fiaddl
mov
sti
add
mov
or
adc
cmp
sbb
xor
or
jmp
pop
jecxz
sub
arpl
icebp
adc
popf
sbbl
mov
xchg
mov
adc
pop
and
jnp
mov
or
add
mov
lcall
mov
lret
fmull
sub
xchg
add
xchg
and
sub
xor
lret
cmp
dec
add
daa
fsubrl
dec
sub
movsl
les
xchg
wbinvd
arpl
xchg
pop
dec
repnz
xchg
mov
xor
mov
push
push
push
mov
cmpsb
out
call
sahf
js
scas
push
xorb
cmp
mov
dec
push
push
cli
gs
lds
sbb
notl
pop
aam
je
push
mov
jae
sarb
cmp
fisttpll
addr16
add
gs
add
jecxz
sub
mov
dec
insb
fcomip
fstpl
inc
sub
outsl
scas
sbb
or
test
jg
pop
fyl2x
push
fstps
les
negb
int
aad
sbb
clc
and
aad
xchg
gs
xchg
or
pop
adc
fcmovu
jns
and
cmpsl
cmpsl
repnz
loopne
inc
gs
rcl
dec
loopne
addr16
ret
jecxz
fxch
mov
mov
ja
shll
adc
int3
aaa
out
jbe
daa
mov
sbb
jnp
or
ljmp
lock
cmp
cmp
fistpl
mov
aas
pop
jle
dec
les
mov
cs
loope
hlt
sbb
mov
adc
icebp
jne
inc
out
fisubl
push
sti
push
div
das
sahf
adc
pop
xor
int3
hlt
shrb
testl
fidivrl
je
mov
push
sbb
mov
and
ss
sti
jp
mov
mov
dec
adc
pop
ja
add
and
pusha
dec
jns
xlat
int3
jns
rcrb
fists
adc
outsb
ds
repz
jne
and
popf
mov
and
xor
cmp
inc
sub
mov
cmp
cmp
jns
enter
mov
je
adc
or
jg
jl
mov
repz
pop
mov
sbb
or
adcl
xorl
mov
jo
mov
and
jl
pop
inc
xchg
in
das
dec
enter
pop
lods
adc
adc
ret
adc
outsb
jg
adc
in
je
cmovp
adc
jne
adc
jmp
int
add
ss
adc
sub
xchg
retw
out
push
scas
daa
int3
aas
stos
adc
shrl
int
test
pop
add
ret
iret
sbb
jne
push
into
xchg
sbb
movsb
add
mov
jae
inc
stc
lds
dec
lahf
popf
jmp
fcomp
mov
pop
cmp
cmpsb
fsub
nop
jmp
aaa
and
call
lods
addr16
fldt
xor
xor
xchg
aam
fidivl
sbb
vphadduwq
out
ds
stos
adc
icebp
pop
into
mov
xor
dec
and
rorb
std
cmpsl
push
daa
lds
out
pop
ret
xchg
sub
roll
lods
pop
movsb
in
jae
rolb
cmpsb
scas
cwtl
sbb
cmpsb
or
adc
and
rcll
loop
stos
lods
adc
push
movsb
pop
nop
outsb
or
and
xor
shl
xchg
or
iret
add
int
jmp
aam
imul
mov
push
loop
int
sub
inc
call
stos
shll
and
sbb
icebp
pushf
push
test
sub
jp
cmpsb
arpl
clc
dec
sub
pop
dec
fdivrs
cmp
sub
add
jo
jmp
test
stos
xchg
and
sbb
sub
cmpsl
cli
sub
sbb
insl
mov
leave
push
xchg
lods
xor
sub
add
ret
lds
adc
xchg
outsl
mov
fbstp
iret
in
mov
and
inc
aad
mov
loop
mov
sbb
mov
sahf
rorb
push
aad
and
xlat
movsl
mov
mov
pop
push
jbe
out
jae
addr16
test
out
add
mov
inc
xchg
dec
cmp
and
or
add
mov
repz
test
or
mov
out
out
jno
jns
jmp
dec
fwait
rcrl
aam
das
nop
mov
inc
cmp
dec
xchg
lds
stos
ret
mov
xor
fbstp
js
or
adcb
lds
inc
or
lock
cmp
dec
gs
insb
mov
pop
int
and
push
mov
xchg
les
loope
mov
cmp
xor
lods
adc
negl
out
pusha
jp
push
stos
mov
iret
mov
lcall
pop
jmp
mov
insl
push
enter
das
mov
mov
loope
neg
mov
lahf
xor
in
or
movsb
into
loop
in
jnp
jns
ja
dec
cmp
shlb
jno
lock
test
or
sbb
pop
cmp
pop
ficoms
and
pop
inc
repz
pop
in
test
mov
or
mov
ss
xor
test
aaa
xchg
ljmp
mov
test
adc
js
lock
jns
sti
insb
fmull
leave
test
test
data16
pop
mov
adc
mov
push
xchg
inc
shrl
loope
sub
mov
dec
rcrl
popf
and
mov
jmp
cmp
and
daa
fucomp
or
xor
in
inc
inc
push
add
push
pop
mov
jge
cmpsb
cmp
int
ret
cmpsb
ljmp
imul
into
sbb
and
push
repnz
in
sbb
outsb
lods
lods
mov
mov
mov
jno
cwtl
loop
mov
jnp
sbb
jmp
insb
mov
push
in
cs
std
enter
std
xchg
out
xchg
push
push
cmp
jne
xchg
push
sbb
neg
mov
test
pmaxub
stos
sub
mov
mov
xor
push
cmpsb
jae
or
sbb
jg
mov
dec
and
out
mov
jo
xchg
mov
push
mov
lods
mov
xor
push
pop
or
dec
fwait
clc
dec
pop
repz
fwait
xor
ficoms
mov
mov
jns
repz
push
clc
sub
or
movsl
mov
mov
push
mov
and
fs
or
inc
dec
repz
leave
int3
fisubrl
aaa
cmp
sub
clc
fsubl
xlat
lret
adc
and
pop
push
rorl
xlat
lret
or
stc
cli
xor
and
arpl
orl
xorb
loop
icebp
popa
push
icebp
jb
sub
adc
mov
sub
add
out
std
out
test
xor
mov
cld
pusha
sarb
out
xchg
mov
je
pushf
out
in
pusha
in
mov
out
add
mov
pop
sbb
mov
push
jb
push
push
sti
cli
sub
mov
jae
add
icebp
pop
jo
ljmp
fcoms
pushf
cmc
fwait
jmp
mov
xchg
and
add
sub
or
popf
test
jne
mov
dec
inc
mov
repnz
insl
cmp
fists
push
add
divb
stc
cwtl
sti
push
sbb
aaa
mov
dec
xor
and
icebp
int3
aas
xor
jb
mov
xchg
or
sub
enter
call
or
cmpsl
testl
shll
idivl
or
cltd
movsl
sub
out
pushf
rclb
popf
int3
clc
and
xchg
push
rclb
dec
loope
pop
add
inc
rcll
mov
int3
mov
inc
inc
lea
mov
sub
leave
movsl
or
shrl
ret
and
test
rorb
inc
scas
or
mov
mov
sbb
clc
popa
test
fcoms
outsl
cmpsb
cs
adc
pushl
into
dec
xchg
shrb
inc
fnstenv
push
adc
jb
push
out
rcrl
add
add
sub
jns
jle
jmp
xchg
xchg
aam
sbb
sbb
data16
arpl
sbb
jae
mov
mov
mov
lret
idivl
jge
les
xor
aas
mov
and
ja
adc
stos
jno
pop
shlb
mov
mov
mov
mov
lods
or
lods
arpl
pop
iret
sub
and
das
jbe
fstps
sarl
pop
jno
rcll
cmc
movsb
sbb
loopne
out
arpl
mov
sub
scas
xchg
call
mov
mul
sbb
xor
pop
mov
pop
dec
call
sahf
shrl
sahf
dec
adc
insl
cltd
and
cmc
xor
cmp
lahf
shll
cmc
dec
pusha
das
notl
mov
clc
cmp
push
push
aaa
ret
enter
mov
stc
xchg
inc
adc
add
jp
cmp
push
sbb
mov
push
add
add
xor
xchg
sbb
mov
sbb
xchg
std
push
hlt
cld
pusha
lods
dec
imul
stc
add
dec
clc
inc
out
fs
jbe
cmpsb
aam
int3
in
daa
in
and
test
xor
jo
mov
xchg
jle
or
mov
das
repz
push
adc
aas
cs
push
push
loopne
pushf
in
pop
mov
xchg
aaa
pop
mov
or
rorb
mov
xor
dec
mov
dec
arpl
decb
stos
mov
cmp
push
adc
test
cld
mov
shl
lahf
and
push
into
jb
cmp
xor
stos
aaa
sbb
dec
and
loopne
les
lcall
into
mov
imul
jne
leave
ret
inc
in
movsb
dec
inc
sbb
ja
mov
mov
leave
scas
sub
lods
andl
clc
cmp
es
arpl
testb
xchg
pop
nop
lret
mov
pop
xor
out
mov
dec
cmpsb
mov
or
jae
out
loope
movsl
repz
cmp
ret
mov
popf
mov
xor
jb
roll
out
mov
arpl
in
icebp
inc
jnp,pt
xchg
out
xchg
das
and
test
sbb
cmc
call
ljmp
cmp
test
push
sub
mov
int
jmp
sbb
sar
or
into
inc
or
sbb
ss
xchg
mov
imul
je
cmp
and
mov
inc
enter
or
sub
lock
lds
jmp
int3
dec
jne
add
bound
mov
adc
pop
jns
and
inc
cltd
ja
pop
movsl
adc
gs
inc
or
shrb
subb
imul
or
mov
push
adc
mov
rol
adc
loopne
fucomip
cmp
dec
stos
cwtl
add
loope
push
int
dec
mov
out
add
loopne
cmpsl
movsb
pop
push
mov
lods
cmp
aas
fidivrl
pop
push
in
lds
pop
dec
and
push
lock
and
mov
sub
mov
pop
mov
stc
cmc
insb
rorl
shll
sahf
shll
pusha
jge
xor
ret
ret
repz
fdivrl
shrb
xor
cmp
cmp
ret
sub
rcr
mov
mov
jle
sub
pop
shlb
pop
mov
xchg
pop
test
and
ret
mov
icebp
sub
das
cmp
out
popa
stc
aam
sub
sbb
mov
or
jae
inc
data16
mov
sti
addr16
dec
sbb
es
lea
and
sbb
lahf
out
push
loope
sti
mov
mov
xor
outsl
scas
int3
loope
movsl
sbb
orb
pop
gs
loopne
inc
ja
sub
and
sbb
sbb
dec
adc
xlat
into
fwait
loop
ja
jmp
mov
inc
loope
sbb
mov
dec
mov
je
mov
cmpl
scas
mov
fs
movsb
ss
lds
or
jp
lcall
xchg
xchg
push
out
mov
push
testl
fs
es
data16
in
repz
xor
jns
cltd
mov
mov
mov
outsl
pop
aam
sbbb
or
pusha
xchg
jb
push
push
push
ror
mov
sub
or
mov
into
test
adc
cmp
mov
sbb
sbb
inc
cwtl
es
ret
lcall
arpl
inc
add
adc
lret
testl
in
cmp
insl
adcb
sbb
sub
mov
scas
mov
gs
inc
in
xchg
push
mov
jp
pusha
mov
pop
inc
mov
push
and
xor
jbe
jns
cmp
jns
jmp
or
ror
sub
sbb
or
sbb
pop
lret
mov
sub
mov
ss
or
push
cmp
xor
lcall
loopne
mov
sbb
iret
std
out
push
popf
ja
add
inc
out
mov
gs
or
jmp
dec
lods
sbb
js
lods
mov
push
lcall
xor
xor
dec
repz
test
fucomp
hlt
adc
pop
mov
movsb
es
movsl
arpl
pusha
cmp
div
movsb
ds
lret
add
mov
mov
mov
addl
inc
dec
in
sbb
sahf
dec
xchg
xor
fsubrl
lods
pusha
pop
aaa
loop
nop
jne
dec
xchg
test
dec
repz
mov
push
aaa
mov
lds
pop
xor
xchg
mov
fs
repz
push
jo
int
ss
push
mov
andb
rclb
mov
xchg
xchg
pop
mov
xchg
sbb
add
sub
cmpsl
push
outsl
and
pop
xchg
sub
pop
jno
pop
mov
inc
mov
fnstcw
sarb
insb
mov
stc
mov
xchg
sub
push
test
sahf
jo
cmp
enter
mov
insb
cwtl
stc
mov
div
pop
xchg
dec
or
ss
sub
and
leave
cmp
sub
cmpsl
pop
mov
inc
inc
ret
in
ret
mov
inc
popf
mov
pop
nop
dec
insb
jecxz
fwait
das
mov
dec
or
mov
inc
push
inc
mov
arpl
repnz
adc
adc
lcall
xchg
cwtl
and
shl
mov
mov
iret
pop
sbb
cltd
mov
xorl
clc
and
lea
sahf
xchg
mov
push
mov
jno
ss
dec
imul
inc
repnz
inc
negb
mov
es
and
pop
or
dec
scas
and
gs
lret
ret
rcr
add
cmp
inc
out
aad
hlt
sub
lret
mov
dec
pop
stc
xor
mov
dec
xor
int
je
push
imul
dec
jle
and
pop
les
stos
jmp
aas
repz
mov
mov
outsb
or
jp
add
mov
sbb
aad
pop
and
bound
jns
mov
and
bound
pop
scas
cmp
hlt
jns
cs
popa
push
inc
fldcw
outsb
dec
xchg
push
push
cltd
nop
dec
test
push
and
sti
and
jg
shrb
mov
loop
adc
xor
mov
add
adc
xlat
hlt
andps
jbe
fidivrs
cmp
cmpsb
xchg
ret
mov
loopne
out
inc
xchg
xor
push
daa
leave
fwait
push
inc
xchg
cmp
movsb
dec
fiaddl
xchg
mov
fwait
jo
jb
mov
cmpsb
sbb
fisubl
add
rcr
test
insb
test
mov
mov
sbb
movsb
add
scas
ds
out
pop
das
cmp
mov
loopne
js
imul
hlt
std
add
mov
ja
push
aas
mov
mov
mov
adc
sub
inc
push
ret
jg
adc
mov
xchg
cmp
mov
dec
mov
sub
push
mov
adc
or
fisubrs
and
pop
cmp
cmp
push
dec
rol
test
sub
push
and
stos
lret
es
adc
and
and
in
insl
xchg
cltd
js
xchg
jbe
push
andb
inc
aas
imul
enter
xor
add
inc
aad
movsb
cs
push
imul
loope
jl
or
xchg
mov
addr16
sbb
sbb
fcmovb
cmc
cmpsb
addl
pop
mov
loopne,pt
xor
aam
nop
in
insl
shrl
add
adcl
sub
data16
stc
insb
xchg
push
fmuls
mov
push
movb
int
and
movsl
sbb
inc
ret
push
std
inc
cmp
mov
stc
xor
or
int3
push
js
mov
sub
push
ljmp
pop
dec
fcompl
mov
and
pop
mov
popa
mov
pop
add
shl
loop
push
and
rcll
mov
orl
gs
fisttps
movsl
scas
add
mov
fidivl
loope
and
hlt
add
adc
ss
stos
jp
imul
add
loope
call
add
and
cmp
add
sbb
loopne
shl
cmp
test
iret
ret
shll
adc
ret
ret
orl
test
shll
and
test
pop
call
pop
add
movsb
inc
mov
dec
push
xor
mov
jmp
fwait
out
icebp
insl
dec
aam
jo
outsl
mov
adc
and
adc
inc
push
cwtl
inc
mov
lods
icebp
shll
fwait
mov
sahf
dec
fsubrs
loopne
add
inc
sahf
push
xchg
push
xlat
icebp
mov
hlt
add
repz
scas
adc
lret
repz
and
ss
dec
lcall
push
mov
push
mov
mov
adc
int
mov
xor
jmp
imul
xchg
popa
fisttpl
stc
mov
mov
sub
lret
scas
sbb
loop
pop
dec
pop
mov
xor
sub
lret
add
stos
shlb
add
mov
and
mov
hlt
lahf
sbb
gs
loope
in
dec
pushf
int3
outsl
in
xor
jne
or
in
jp
jmp
xchg
mov
cmp
icebp
shll
cli
adc
pusha
les
pusha
loope
xchg
imul
xchg
xchg
mov
push
rcrl
sub
or
js
push
push
cmp
xor
and
jbe
stos
push
lds
or
adc
negl
test
daa
leave
imul
pop
inc
shll
and
insb
aad
popf
cltd
fiaddl
cmp
pop
lods
out
mov
xor
adc
nop
adc
pop
push
pop
xor
adcl
mov
mov
pop
sbb
movsl
into
pop
fildl
xor
mov
dec
loope
insl
scas
xor
sbb
push
outsb
stc
mov
inc
mov
jns
rol
scas
stos
cmp
push
outsl
lea
push
loop
mov
inc
xchg
mov
stos
add
inc
jno
movsl
pop
pop
test
daa
or
enter
adc
test
testb
pop
push
ss
push
int3
pushf
pop
stos
sahf
rorb
cmp
mulb
mov
jle
jle
repnz
sub
pop
test
add
lock
sbbl
jle
stos
xchg
pop
je
dec
mov
cmp
pushf
cmp
sub
imul
int3
mov
dec
mov
mov
xlat
out
mov
or
ss
jle
stos
call
outsb
and
daa
xchg
pop
rorl
ret
cs
and
dec
jae
lods
or
in
movsl
cmp
lods
in
mov
push
pusha
and
push
repnz
in
pop
lret
add
fisubs
adc
into
es
jge
orl
push
inc
loope
adc
out
cmp
fisubrs
cmpl
or
outsb
xchg
and
outsb
xchg
xchg
or
jp
sti
mov
stos
addb
nop
jne
shlb
xor
xchg
pop
xor
push
sub
icebp
and
dec
out
cld
fisttpl
sbb
cli
add
push
jecxz
lds
roll
jae
push
test
pop
imul
jl
js
push
loopne
jb
js
mov
in
push
dec
andl
jecxz
shll
repnz
in
out
pop
cmp
cwtl
or
pop
cmpsb
stc
popa
xchg
adc
add
lea
divb
mov
and
bound
fistps
cltd
xor
pop
les
out
aas
imul
add
hlt
fmuls
add
mov
mov
iret
out
rolb
jns
sti
xchg
sub
sub
in
movsl
xchg
jno
sbb
dec
adc
xor
mov
jecxz
mov
es
fisubrs
xchg
hlt
aas
push
pop
add
push
mov
xchg
test
push
cmp
inc
lahf
jbe
push
adc
inc
lea
jl
nop
cmp
adc
inc
xor
int3
mov
xor
and
es
ja
push
sbb
pop
jns
mov
pop
push
xchg
mov
mov
int3
jle
leave
inc
sahf
sahf
movsl
push
inc
xchg
jecxz
inc
sub
lret
inc
sub
ljmp
add
stc
push
xchg
jge
lret
mov
pop
adc
lods
adc
out
mov
xor
insl
sti
xor
sub
das
sub
mov
lds
lods
ret
pop
mov
cltd
xor
mov
hlt
out
jle
push
cmp
fstps
mov
add
movsb
out
popa
sub
adc
ficoml
clc
aas
push
cmp
lcall
insb
mov
mov
inc
push
add
scas
pop
xor
fdivs
into
out
mov
sub
fisubrs
cltd
jp
loop
xor
dec
imul
mov
mov
cmpsb
inc
mov
mov
mov
push
shlb
lock
push
stos
xor
and
xchg
or
mov
addr16
fsubl
xchg
mov
mov
dec
jmp
gs
mov
and
dec
sahf
mov
jp
ret
repz
and
push
cmp
mov
in
outsb
call
out
fwait
push
mov
push
push
cmp
sbb
cmp
cmpsb
mov
mov
mov
pop
pop
dec
or
fdivrs
xor
push
sbb
push
hlt
ret
xchg
addb
jo
addr16
enter
xchg
sbb
gs
add
mov
cmp
push
ljmp
insl
rolb
nop
inc
lahf
or
add
das
jnp
cltd
ljmp
popa
and
xor
adc
fldenv
fisubs
mov
xor
movsb
fcoml
cltd
mov
lcall
add
mov
sbb
fdivrs
and
add
inc
jae
jb
cmp
jecxz
or
movsl
pop
lret
aaa
mov
ret
test
xchg
scas
divb
cmp
xchg
inc
mov
testb
inc
pop
imul
fldcw
or
jp
and
xchg
dec
xchg
mov
fistpll
lds
jae
outsl
sarl
ficomps
dec
mov
dec
lds
mov
fdivl
mov
xor
cs
or
dec
addb
lock
inc
lock
cmpsb
lret
aas
push
mov
xor
add
stc
sti
pushf
ret
add
enter
xor
cmp
mov
push
not
fcom
cltd
xlat
or
cmp
add
pop
pop
sbb
xchg
scas
fcomps
stc
pop
jecxz
mov
in
pop
neg
fstpt
insb
cli
jno
fwait
ds
push
out
mov
scas
and
movsb
test
push
popf
pop
inc
xchg
mov
pop
cmp
stos
fs
popf
xor
and
jae
mov
ss
pop
push
in
out
dec
dec
or
dec
push
ds
add
xor
outsb
gs
sub
data16
xchg
ficoms
pusha
stos
enter
mov
lsl
fsts
int3
icebp
or
mov
xchg
mov
cmp
popf
mov
rorb
mov
sub
mov
and
outsb
fwait
andl
cli
sbbl
js
std
xchg
les
push
cmp
lea
xor
insl
push
clc
mov
cli
stc
ljmp
imul
or
fwait
mov
dec
adc
into
cmp
dec
and
mov
or
cld
jmp
in
pop
ret
jl
mov
push
push
adc
insl
push
add
dec
aam
rcr
add
jno
sub
and
insb
idiv
ljmp
add
inc
push
add
sub
push
mov
dec
in
int3
fidivs
sbb
adc
stos
or
rcr
pop
push
adc
cmc
pop
jae
dec
fadd
cmp
popl
or
mov
push
mov
js
xor
popa
sti
adc
dec
arpl
mov
ficomps
test
pop
repz
cmpsb
or
add
outsb
push
mov
and
stc
scas
inc
mov
nopl
pushf
mov
xchg
push
add
fimull
cmp
lea
cs
daa
mov
pop
dec
bound
test
ss
and
adc
hlt
aaa
jno
mov
add
mov
and
ljmp
icebp
mov
pushf
sub
dec
fimuls
add
in
hlt
inc
scas
jp
mov
leave
push
subb
int3
call
loope
push
mov
loopne
stos
push
mov
loopne
je
int
jl
cmp
int
imul
mov
ljmp
lds
cmp
jle,pt
jp
xchg
mov
mov
dec
jmp
push
fidivrl
call
sbb
xor
arpl
insl
pop
popl
mov
mov
test
rclw
lods
out
jp
jl
jl
jnp
or
imul
icebp
sub
mov
push
lods
subl
fwait
addr16
jns
cmp
insl
sub
xor
inc
movsl
test
mov
es
xchg
lahf
leave
cmp
dec
adc
pop
add
and
push
repz
test
push
mov
dec
dec
inc
and
fwait
xor
cmc
ljmp
add
cs
mov
xor
adc
leave
mov
pop
enter
aas
push
pop
jae
shrl
js
ds
ljmp
das
inc
dec
mov
cld
jmp
and
inc
loopne
sbb
xchg
xchg
mov
inc
fistl
fstpt
or
icebp
cld
add
or
cmpsl
bound
out
adcb
jo
add
mov
subb
movsb
in
hlt
mov
dec
out
leave
out
sahf
shl
mov
bound
mov
sti
leave
loop
dec
inc
cld
push
orb
test
stos
jle
lods
mov
jg
inc
outsb
push
enter
out
and
or
mov
pop
aaa
dec
cld
jge
fsubrl
cmp
cwtl
cmc
fwait
nop
fsts
fdivrl
out
ss
test
aam
jg
adc
les
jns
xchg
subb
mov
push
jbe
daa
mov
add
stos
outsb
add
xor
mull
int
xlat
xor
mov
mov
xchg
fnsave
mov
test
adc
lret
add
pop
int
push
outsl
test
xchg
pop
jecxz
lret
cmp
rcll
ret
dec
aam
xor
imul
push
lahf
add
mov
clc
lods
cmc
push
xchg
mov
adcb
xchg
insl
cmp
ss
repnz
adc
lods
adcl
add
js
mov
and
mov
push
pushf
fxch
xorb
mov
lods
and
inc
incb
daa
jbe
adc
jae
xor
fucomip
push
out
aad
xchg
cmpsl
aad
jb
dec
in
mov
add
jnp
inc
std
fcomi
and
cmc
ret
cltd
push
stc
in
sbb
mov
inc
xlat
xchg
pop
cltd
xchg
cld
push
roll
out
sahf
mov
sub
enter
xor
lcall
leave
cld
in
sahf
pop
inc
push
dec
sub
mov
imul
cmp
fisubl
bound
incb
jmp
inc
lret
jno
cmpsb
xor
xchg
imul
and
adc
ds
or
jl
and
aaa
inc
icebp
mov
ret
clc
sbb
ja
cmpsl
mov
les
aaa
incl
pop
inc
in
int
adc
dec
push
mov
stos
fisubs
mov
mov
fsubrs
xorl
mov
inc
stc
cmp
sub
out
popf
jl
push
lret
nop
sub
pop
scas
mov
push
leave
adc
sti
push
ja
jecxz
cmp
mov
xchg
push
sub
jmp
rol
mov
jmp
cwtl
shr
rol
and
xchg
push
das
cmpsl
imul
arpl
xlat
stos
mov
inc
je
mov
js
cmp
lret
push
cmp
pop
pop
sbb
ret
mov
cmpsb
pop
addr16
dec
adc
mov
push
sbb
ljmp
imul
push
or
clc
jge
ljmp
or
jge
call
dec
test
pop
adc
bound
xchg
mov
sub
rorl
xchg
popf
sub
inc
sbb
add
mov
jb
movsl
dec
int
lcall
dec
jno
push
adc
outsl
cmp
cmp
xor
int3
orb
dec
rcrb
lcall
insl
cmp
push
mov
or
sahf
sbb
adc
push
insl
repz
mov
add
sarb
and
jb
imul
fistpl
mov
cmp
out
mov
sub
and
sub
rorb
test
dec
jle
inc
and
imul
cmpsl
cmpsb
mov
dec
imul
cmp
or
shll
pop
mov
and
xchg
jmp
inc
adc
xchg
cmp
adc
movsl
rorl
push
dec
cmp
cmp
inc
push
sbb
adc
test
push
sarb
outsl
dec
shr
mov
sbb
cmpb
push
adc
or
addl
lahf
in
and
mov
fcomps
push
rcr
scas
adc
cs
ret
into
sbb
cli
pushf
adc
xchg
mov
add
mov
or
into
mov
push
outsb
hlt
stc
popf
scas
stos
sbb
sub
cmp
cmpsl
push
pop
adcb
mov
call
dec
fsubrs
pop
mov
iret
je
sbb
and
pop
std
mov
xor
jae
movsl
pop
or
xor
jns
lds
sub
jge
daa
xor
loope
and
cwtl
cwtl
mov
adc
mov
mov
scas
scas
xor
pop
pop
push
mov
mov
push
lcall
add
mov
test
sbbl
sub
add
ljmp
lcall
aam
fcmovnb
jo
in
push
test
jmp
cmp
out
mov
clc
popa
add
cs
ret
scas
sbb
jbe
pushf
mov
mov
dec
int
cli
mov
imull
cmp
jb
mov
xchg
cli
push
and
pop
mov
out
mov
or
xchg
nop
add
mov
add
lods
test
push
leave
add
xor
inc
mov
and
cmc
into
je
in
clc
scas
mov
cwtl
sahf
mov
dec
faddl
adc
xor
dec
pop
data16
pop
or
pop
push
inc
sbb
inc
push
movl
ret
xchg
cld
add
test
rcrl
mov
jmp
les
daa
jp
enter
repz
stos
out
push
sarb
cmp
sbb
out
bound
cmc
pop
mov
xchg
or
dec
adc
cmc
mov
mov
add
test
lahf
into
dec
rcrb
out
int3
loopne
cmp
push
insb
push
iret
push
pop
dec
xor
inc
xchg
pop
loop
imul
fistl
cmp
and
sub
add
push
movsl
dec
mov
push
pmuludq
cltd
ror
dec
jmp
cltd
leave
call
fstps
test
push
adc
sbb
pop
cld
cmpl
ljmp
pop
mov
adc
lock
xor
and
insb
test
xchg
outsl
cwtl
loope
dec
movsb
enter
push
mov
loope
test
decl
cwtl
lea
cmp
add
adc
andl
cmp
mov
fidivl
int3
pusha
out
pusha
fs
rcl
mov
jl
mov
adc
inc
mov
insb
popa
std
pop
dec
andb
sti
dec
sbb
negl
mov
out
test
xchg
es
jge
cmp
push
inc
fistl
pop
stos
jecxz
test
rcll
and
pop
pushf
push
mov
and
sub
pushf
clc
cmp
repz
pop
bound
sub
mov
mov
mov
iret
dec
aam
insl
sbb
stos
aad
or
pop
cmc
xor
xchg
dec
adc
cmp
mov
out
push
cld
sub
call
scas
adc
push
jge
cli
clc
sti
xor
push
scas
xor
repz
call
fs
xchg
adcb
out
sahf
pop
stos
mov
jmp
int
pop
mov
cwtl
flds
or
jo
stos
pop
fsubl
repz
and
outsl
ja
scas
dec
test
mov
add
or
out
inc
in
sub
push
cmc
push
iret
test
out
jns
fs
aas
fldenv
dec
mov
mov
and
mov
push
pop
push
inc
in
test
jmp
add
pop
lcall
dec
or
xchg
repnz
push
pop
sbb
mov
cmc
mov
leave
inc
mov
popa
ficoms
mov
jne
js
jae
jecxz
and
push
adc
imul
xor
aas
and
push
fnstenv
in
pop
iret
dec
in
data16
jae
lcall
dec
sbb
sub
leave
or
jo
shl
sub
aad
test
xor
mov
adc
enter
daa
loope
push
ret
mov
push
sub
fsubp
dec
add
xchg
sbb
adc
jns
adc
mov
enter
fs
sahf
mov
mov
popf
imul
mov
notl
sbb
ss
mov
in
dec
pop
push
fdivl
cmp
arpl
test
filds
push
insb
add
adc
xorl
cwtl
cld
add
push
adc
mov
add
insl
xchg
adc
add
int
lods
fistpll
inc
push
cmp
js
mov
leave
test
mov
push
movsl
or
adc
jp
stos
movsl
add
and
sbb
xor
movsb
or
mov
mov
imul
inc
jecxz
inc
shl
popa
mov
cmp
pop
jnp
and
dec
mov
cmp
or
lods
mov
adc
fs
iret
sub
cwtl
sub
mov
inc
push
push
mov
jl
cli
jmp
xchg
sbb
mov
xchg
xlat
addr16
fldt
jmp
movb
mov
cmp
sbb
sub
cmp
scas
mov
xchg
addr16
sbb
cmp
aam
mov
incl
sbb
mov
enter
jecxz
xchg
cmp
test
icebp
gs
pop
sbb
jnp
pop
sub
repz
mov
clc
or
or
loop
mov
ss
adc
adc
cltd
jle
mov
inc
mov
in
jg
jnp
leave
cmpsb
dec
add
jne
pop
and
xorb
mov
les
mov
sub
test
pop
push
pop
in
pop
pop
mov
andl
ror
dec
push
inc
sbb
ret
lea
fdivrs
inc
bound
adc
jge
push
jecxz
pop
pop
les
and
mov
enter
or
cmp
pop
and
shll
addr16
mov
js
add
ds
aad
adc
sahf
movsl
rcll
mov
aam
push
dec
enter
adc
push
cmp
scas
leave
gs
add
sbb
or
iret
ret
ret
lahf
out
leave
pop
pop
fidivs
int3
or
adc
push
loope
out
in
push
lahf
mov
adc
scas
jae
push
xchg
push
out
outsb
imul
icebp
pop
hlt
adcb
add
aam
sub
int3
out
jnp
ret
inc
enter
int3
xor
cwtl
sub
ljmp
ss
pop
lods
and
repz
or
cmp
jbe
pop
loop
pushl
fsubr
lock
fists
xor
xchg
cmp
mov
gs
jae
imul
sbb
mov
test
add
adc
xchg
imul
insb
xlat
inc
stos
inc
std
dec
xor
testb
repnz
sarl
push
enter
in
lods
popf
pop
add
mov
adc
and
movsl
movsl
adc
adcb
out
loop,pt
jb
fld
and
jne
jae
and
inc
mov
pop
push
jle
sub
dec
dec
int
jb
add
loope
fiadds
mov
adc
mov
jo
cwtl
push
movsl
fs
dec
lds
push
ret
dec
imul
or
aad
ja
aas
cmp
pop
imul
shll
sub
sub
jb
mov
jge
adc
xor
popa
dec
imul
movsb
xor
addr16
stc
int
pop
jns
dec
mov
sbb
push
cmpsb
dec
sub
mov
mov
inc
hlt
movsb
jae
sbb
or
jl
and
fidivrl
fdivs
sub
inc
sbb
insl
mov
jecxz
rolb
addr16
jbe
xchg
mov
or
insl
and
subl
negb
sbb
test
stos
std
subl
pop
in
add
adc
out
sbb
sbbb
mov
nop
mov
popa
mov
xlat
cmp
cs
dec
ljmp
xor
in
mov
mov
mov
dec
jne
inc
psubusb
ret
lds
stos
pop
jb
bound
push
jb
cmp
popf
xchg
mov
lahf
daa
cmp
and
ret
fs
lea
ret
lea
lret
mov
jb
std
or
call
jle
andl
mov
insl
add
mov
cwtl
fs
cmc
les
iret
inc
jmp
pusha
mov
lret
lds
mov
ret
jo
and
fdivs
cs
mov
jb
pop
or
cmp
sti
out
inc
mov
neg
inc
mov
es
adc
pop
movsl
mov
push
mov
loop
icebp
flds
add
test
imul
cmp
jbe
rolb
mov
loope
mov
mov
cmp
enter
mov
push
mov
inc
xor
mov
pop
xor
jg
stos
outsl
dec
pop
int3
aas
or
mov
mov
faddl
and
movsl
mov
xor
daa
adcl
and
inc
cld
lret
int3
and
dec
lcall
xchg
lret
fdivs
addr16
in
cld
add
out
pusha
fiaddl
and
popf
push
pop
lcall
or
and
subl
jo
xor
push
rcll
rcll
cld
mov
cli
mov
mov
loop
mov
dec
xlat
ss
xchg
movsl
aas
fcmovnb
mov
mov
cmp
sbb
inc
xor
mov
or
andl
mov
sbb
push
je
cmp
push
or
sbb
in
inc
ret
push
sahf
call
pop
test
add
das
jmp
sbb
inc
scas
icebp
call
push
mov
sub
icebp
inc
adc
movsb
xchg
mov
jmp
outsl
shlb
shll
lret
lcall
arpl
stos
ja
pop
adc
data16
mov
mov
mov
mov
fmulp
aad
int3
pop
out
mov
jns
pop
cmp
mov
les
rcrb
cmp
cld
cltd
mov
inc
or
xchg
loope
mov
test
loop
fadds
shlb
pop
out
clc
adc
movsl
popfw
ja
out
call
push
in
aad
out
and
xchg
or
out
ljmp
outsb
mov
rorl
jg
sahf
inc
xor
ss
cmp
sbb
pop
push
outsl
shll
mov
std
imul
cmpsb
mov
cld
test
fstps
leave
aaa
test
cld
imul
sahf
cmpsl
and
dec
dec
popa
jle
hlt
adc
and
jg
adc
sub
inc
jb
mov
aad
or
test
push
addr16
outsb
pop
pusha
es
adc
lods
dec
jae
inc
ret
and
sub
jns
repz
stos
nop
lods
jle
arpl
xchg
bswap
lret
call
dec
in
outsb
filds
cmp
insl
jns
lds
jecxz
cli
jns
push
pop
lret
nop
or
jno
push
jp
shrd
subl
mov
sar
dec
je
push
push
add
push
adcl
cmpsl
dec
adc
adc
pop
je
and
mov
add
xchg
mov
test
sub
nop
fnsave
sti
cmp
rorl
rorl
jae
xchg
pusha
jge
movsl
movsl
and
pop
adc
and
mov
pop
imul
mov
push
test
adc
push
mov
push
jmp
sub
lods
leave
addr16
cmp
iret
test
scas
sbb
pop
fistl
loop
lret
sub
mov
xor
aas
fbstp
inc
pop
add
fs
mov
mov
push
xchg
inc
insl
sub
lret
mov
sbb
pop
jnp
cli
cmp
lods
popf
xchg
int3
insb
pop
dec
jns
into
fsubr
scas
sub
ja
mov
clc
es
jl
mov
adc
test
sub
jns
sub
mov
inc
je
js
test
add
xchg
push
int3
mov
fucomi
jle
scas
scas
dec
mov
ja
and
cmp
imul
sbb
cwtl
int
dec
sarl
ja
sbb
pop
mov
mov
dec
mov
cmovbe
xor
xchg
push
ret
sub
sub
sbb
push
pop
xchg
cmp
daa
sbb
lret
inc
push
jl
sub
sbb
and
cmovbe
into
jge
cmp
add
sub
adc
lret
mov
js
pop
lods
mov
sahf
inc
scas
pop
sbb
add
leave
adc
dec
scas
sbb
rclb
pop
aaa
cld
push
je
jle
sbb
pop
repz
ja
out
mov
inc
idiv
movsb
outsl
jge
mov
jno
gs
xchg
push
dec
mov
or
sahf
int
mov
jo
pop
push
inc
and
movsl
jb
leave
inc
xchg
cmp
scas
lcall
xchg
mov
sarl
sbb
push
leave
rol
out
mov
loopne
inc
sub
push
fistps
pop
jb
dec
xlat
pop
das
arpl
outsb
push
mov
mulb
insl
repz
sbb
xchg
sbb
movsl
js
sahf
stc
sbb
loop
xchg
add
lcall
popf
test
mov
cs
pop
xlat
ret
imul
cmp
punpckhwd
rorl
pusha
stos
pop
mov
test
cli
icebp
cmp
sub
divl
mov
fs
add
ret
push
and
in
hlt
icebp
mov
mov
test
pushf
inc
jns
push
and
inc
movsb
pushl
ds
add
and
aad
popf
xchg
insb
sub
jl
xlat
dec
mov
rol
int
sub
sub
dec
sahf
sub
fcmovbe
inc
cld
adc
pop
and
mov
or
xor
out
outsb
adc
push
pop
enter
xor
jnp
gs
cs
mov
imul
cmp
out
and
inc
jo
popa
gs
inc
cmpsl
in
lret
and
adc
test
jl
scas
push
in
and
mov
icebp
or
mov
mov
jae
aad
sahf
fdivp
je
jns
pusha
sar
repz
shlb
inc
rcl
mov
jnp
fildll
pushf
jl
or
jl
pop
stos
dec
xchg
hlt
imul
inc
adc
xchg
rcll
sub
xor
test
arpl
xchg
lcall
inc
sbb
mov
push
mov
add
xchg
test
sub
cmc
lahf
mov
cmpsb
mov
insl
sbb
xchg
xchg
push
or
rep
mov
jg
jmp
and
cmp
cmp
mov
or
sbb
cmpsl
xchg
cwtl
cltd
outsb
adc
jge
jne
les
mov
scas
arpl
imul
or
jecxz
repz
jbe
pop
xchg
jbe
add
cmp
xlat
xor
ret
call
push
test
out
mov
mov
push
or
and
cmp
fmulp
adc
ss
sub
mov
int3
sbb
cmp
push
orl
shll
addb
jbe
imul
out
mov
lock
pushf
and
out
sti
xor
lock
outsl
xchg
lret
cmp
push
push
ss
lret
outsb
mov
jnp
fucom
push
repz
mov
ljmp
xchg
xchg
inc
sub
add
cmp
out
sub
add
loop
idiv
mov
jge
fcoml
dec
mov
sbb
jb
push
pop
or
sub
movb
cmpsl
fidivl
jne
in
std
pushf
in
inc
fs
insl
icebp
and
inc
enter
fwait
jl
addr16
lods
cli
sbb
shrl
mov
push
aad
lea
mov
outsb
aas
jns
cmpsl
aad
fsubrs
rorl
popf
lods
cmc
xchg
pop
jecxz
dec
dec
rcll
cmpsb
inc
xchg
leave
fldt
push
aad
sbb
rorl
nop
sbb
cwtl
sub
add
sub
scas
andl
cmp
pop
cwtl
jne
and
lock
inc
push
fwait
mov
sub
mov
and
rorl
int
fadds
sub
pop
es
nop
fcmovbe
mov
pop
jnp
je
xchg
mov
and
shlb
or
fisubl
cmpsb
fcmove
sub
xchg
popf
add
enter
mov
lods
jecxz
xor
cli
cld
pop
adc
sub
adc
jle
ret
mov
ss
push
daa
mov
push
shl
xchg
jb
cmp
nop
stos
adc
lret
inc
lods
xchg
xchg
in
ja
loop
push
cltd
mov
and
idivb
icebp
faddl
or
lret
sbb
or
fwait
sub
jle
roll
fiaddl
fwait
pop
cmp
pop
hlt
insl
pop
cmp
push
js
dec
ja
push
dec
sbb
pop
push
std
hlt
test
out
sbb
mov
fldt
mov
lock
sub
inc
orl
lret
xchg
jns
push
mov
mov
mov
popf
aam
insb
pop
xchg
mov
mov
xor
aaa
pop
jle
xorl
add
jnp
stos
out
xchg
rorb
inc
inc
cli
ret
dec
and
pop
lcall
dec
mov
xchg
fildl
ds
cmp
jno
out
je
cmp
fstpl
sbb
decl
cwtl
dec
andl
and
fisttpl
mov
jns
loopne
das
incl
imul
cmp
int3
jecxz,pn
push
cltd
jno
pop
lahf
cmpb
xchg
jne
inc
push
xor
sbb
test
dec
push
bnd
xchg
ret
ret
mov
jo
hlt
aaa
adc
xchg
insb
add
push
out
addl
insl
aad
ds
mov
xchg
or
in
cli
push
cmp
and
clc
imul
rolb
mov
std
jb
sarl
jecxz
cmpsl
pop
add
xchg
cwtl
dec
inc
fucomip
dec
push
imul
popf
fbstp
popa
ret
push
inc
add
xchg
jl
out
cmpsl
mov
dec
fcomps
repz
inc
sub
jmp
daa
pushf
loope
cmp
or
jo
jmp
aad
mov
mov
sbb
pushf
shll
jbe
rorl
lret
adc
mov
cltd
mov
xlat
inc
mov
dec
cmpsl
std
mov
push
inc
popf
stc
or
xchg
imul
mov
inc
jle
or
std
fsubrs
rcrl
shrl
popf
clc
push
or
fs
sub
push
lret
ljmp
ret
outsl
scas
into
add
jnp
arpl
cmp
dec
fwait
aad
fnstcw
mov
imul
or
call
fcoml
andl
jbe
ss
xor
dec
and
adc
pushl
and
mulb
scas
xor
pop
fadd
sub
mov
rorl
adc
call
stos
mov
arpl
xor
xchg
in
daa
mov
inc
sbb
fldenv
push
ljmp
pop
jge
shll
nop
jge
rcrb
jno
fdiv
fildl
xor
dec
js
and
nop
sub
call
sub
fcmovu
adc
cmpl
lods
stos
int
fidivrl
je
faddl
lods
imul
mov
hlt
js
js
add
fsubs
cld
mov
call
scas
add
les
pop
xchg
xchg
scas
rclb
into
xchg
mov
hlt
cmp
adc
and
daa
mov
movsb
cmp
rolb
xchg
mov
xchg
push
popa
fld1
pop
jge
sub
in
ljmp
or
jge
sub
movsl
je
inc
adc
sub
ljmp
sub
imul
xor
ljmp
addb
jmp
fdiv
add
sbb
cmp
mov
lret
push
arpl
in
push
xor
in
in
repz
mov
lcall
test
fcmovnu
ja
jmp
push
dec
sbb
js
jl
mov
mov
inc
lahf
insb
sbb
inc
push
lcall
mov
inc
mov
push
jecxz
aaa
cmp
xchg
and
adc
clc
push
xor
or
jbe
lret
ss
es
sarl
or
inc
imul
xlat
mov
inc
mov
mov
jbe
xor
mov
scas
dec
pop
add
or
ret
in
push
xor
or
addr16
dec
add
mov
movsb
outsl
mov
insl
insb
sub
sbb
cs
stos
mov
sahf
jge
incb
sub
hlt
or
out
and
outsl
nop
cwtl
popf
out
mov
ljmp
pop
or
icebp
pushf
lods
pop
lods
mov
stos
es
or
push
inc
ret
sub
pop
pushf
fdivs
or
leave
mov
in
cmpsb
jno
pop
jmp
std
iret
shlb
gs
stos
cmpsb
sub
in
push
dec
inc
ss
cmp
and
jge
int3
cmp
insb
fcomi
xor
sbb
cwtl
sbb
orb
outsb
cld
xchg
sub
out
fldt
pop
mov
into
mov
stos
sub
bound
movsb
insl
insb
outsl
add
fwait
push
movsl
xor
movsl
js
xor
fwait
cs
mov
push
sbb
mov
icebp
jmp
lea
test
xor
dec
jb
outsb
jno
jns
sbb
test
ffree
movsb
mov
xchg
cs
pop
xchg
dec
push
cmc
cvttps2pi
bound
mov
or
js
cltd
push
lock
cs
pushf
add
stos
ljmp
xchg
jnp
fsubl
ja
or
lcall
lret
mov
push
push
popa
cmpb
shrl
sarb
adc
scas
outsl
or
gs
pop
pop
mov
jb
out
ret
inc
dec
pop
adc
mov
jae
subb
paddsb
aaa
fcompl
push
sbb
mov
insl
mov
mov
cmp
mov
addb
cmp
out
lea
aas
mov
inc
mov
push
cli
mov
add
pusha
lcall
mov
std
mov
int3
out
xor
inc
adc
jb
cmpsb
decb
and
outsb
leave
and
inc
mov
push
les
aam
dec
mov
daa
cmp
add
push
test
mov
lods
inc
pusha
xor
ja
push
mull
push
mov
jbe
inc
jnp
call
insb
sbb
sti
inc
sbb
lcall
push
adc
dec
insb
fs
popf
decb
cmp
popa
icebp
enter
xchg
jecxz
jmp
in
dec
addl
mov
jo
shll
push
je
mov
mov
jnp
and
mov
mov
je
lods
xor
into
iret
ret
mov
ja
pop
sub
ror
jne
adc
insl
and
pop
dec
jmp
push
fisubl
push
mov
sbb
sub
cmpsb
dec
daa
sub
sahf
sbb
test
jecxz
xor
sub
sahf
mov
add
dec
fisttpll
js
sbb
in
outsb
lret
add
pop
scas
daa
cmp
pop
iret
fidivrl
dec
and
pop
xor
pushf
loop
repnz
sub
popl
mov
xchg
jo
je
and
and
sub
fmuls
jp
outsl
sbb
ror
out
arpl
jle
clc
bound
int
jge
jp
ret
arpl
jg
and
mov
test
jecxz
mov
mov
lods
enter
xor
faddp
icebp
sbb
push
jne
pop
xorl
push
jge
test
xor
sub
push
jg
or
add
xchg
imul
aad
push
mov
push
push
cmpsb
in
dec
or
clc
arpl
or
pushf
setno
loopne
push
jae
push
std
mov
pop
stos
call
cli
es
push
or
mov
insl
lds
jl
aas
xor
sub
xchg
push
popf
mov
mov
pop
pushf
sbb
movsl
cltd
pop
dec
cli
xchg
sbb
xchg
jmp
rolb
sahf
scas
loopne
shlb
push
jmp
aas
push
mov
push
xlat
dec
jge
push
daa
push
adc
std
dec
cli
push
adc
dec
addr16
clc
out
in
dec
in
fcoms
jne
sub
push
nop
nop
inc
pop
iret
clc
data16
imul
movsl
stos
or
inc
inc
das
push
cmp
idivl
inc
data16
push
addr16
daa
add
ds
clc
jmp
adcb
lock
cmp
mov
rcll
mov
stos
loope
push
cmc
mov
rol
lods
xchg
fwait
xchg
push
mov
sub
mov
sub
mov
nop
cmp
fdivl
jmp
daa
mov
faddp
xor
jge
cltd
lods
outsl
out
adc
mov
jnp
enter
inc
jno
out
fmuls
dec
scas
adc
repnz
xor
test
call
test
test
jns
jnp
dec
lds
push
mov
mov
jmp
jecxz
and
rcrl
dec
push
mov
cmp
sahf
sub
and
mov
xor
out
dec
rcll
cmc
jle
jo
clc
testl
sbbb
mov
xchg
ljmp
bound
enter
mov
aam
call
xor
into
gs
subl
add
mov
jns
cmp
sahf
adc
out
push
movhlps
cmp
aad
xchg
bound
adc
movsb
or
imulb
push
xor
out
jnp
dec
pop
bound
in
stc
ss
mov
shrb
repnz
out
inc
dec
inc
mov
xor
pop
dec
fsubrs
int3
pushf
pop
adc
clc
pushf
dec
movsb
fisttpll
mov
and
bound
xchg
pop
loop
push
push
or
mov
test
adc
fwait
mov
sub
das
and
or
push
int
jmp
push
mov
das
push
jecxz
pop
in
cmpsb
mov
cmp
sub
inc
loop
aas
adc
adc
lods
fldpi
lock
xor
and
jno
in
rorb
mov
or
lahf
adcl
mov
and
push
ss
sub
fiadds
sub
add
in
aas
scas
scas
jo
orl
or
jg
scas
aaa
int3
xchg
dec
xchg
xlat
sub
test
leave
dec
or
add
hlt
movsb
in
and
cs
mov
add
aas
sub
mov
sbb
sbb
inc
stos
fs
sub
aam
fcomip
fcomi
into
xor
push
adc
idiv
jl
jnp
faddl
mov
mov
ret
shrl
inc
inc
out
es
imul
cmp
scas
jo
cmp
lods
shl
subb
pop
dec
js
pop
popa
flds
stc
inc
dec
pop
rcl
cwtl
mov
sbbl
pop
mov
imul
mov
adc
cmc
cmpsb
adc
neg
mov
ret
xlat
fs
stc
jbe
in
pop
inc
inc
mov
cs
or
sbb
sbbl
jno
sbb
shlb
lret
xor
enter
pop
mov
cs
repnz
out
mov
pop
dec
inc
adc
lea
test
cmp
shll
int3
rclb
xor
out
pop
pop
sbb
jne
mov
and
mov
cmp
xor
dec
inc
ja
in
xor
enter
fstpt
push
jecxz
clc
mov
rorb
jne
sbb
inc
scas
push
jne
inc
dec
xchg
stos
jg
mov
out
pop
adc
scas
cmp
cwtl
mov
rcll
fldl
sub
out
mov
sbb
loope
out
dec
pop
shll
test
orl
jbe
or
pop
add
int3
xchg
pcmpeqd
sub
lret
jbe
mov
shl
clc
arpl
jp
bound
loopne
jo
in
pop
push
pmaxsw
lret
pop
jl
ljmp
aas
jge
mov
cmc
repnz
pop
push
hlt
mov
jnp
popa
shll
aas
imul
fwait
jbe
out
xor
or
mov
inc
imul
cmc
movsl
mov
sbb
cltd
scas
imul
xchg
cmp
je
xor
mov
outsb
pop
jae
es
mov
test
mov
hlt
inc
fcoml
add
stos
add
fdivs
loopne
mov
add
shlb
pusha
std
xchg
scas
fstps
push
lds
mov
aam
mull
dec
outsl
inc
jns
add
fwait
or
pop
sbb
in
xchg
pop
push
imul
cmp
mov
pusha
lock
jb
add
mov
inc
jp
test
pop
call
dec
or
push
push
xor
adc
pop
psubb
movsl
pop
mov
in
mov
jecxz
loop
sub
or
jbe
push
sbb
or
mov
inc
xor
dec
out
mov
pop
sahf
cltd
popf
gs
ss
pop
lock
mov
push
cmpsl
aaa
xchg
mov
cwtl
arpl
nop
in
filds
push
inc
mov
sub
cli
js
movsl
and
inc
lcall
movsb
or
loope
mov
add
test
jo
fldcw
arpl
inc
push
cs
sub
dec
aam
jne
and
and
pop
cmp
xcrypt-ctr
cmpsl
cwtl
sub
fwait
ja
jmp
lock
imul
iret
sbb
arpl
push
movsb
or
dec
pop
sbbl
sbbl
in
sub
inc
and
fs
mov
add
jo
insl
loope
and
lahf
cmp
push
xchg
ret
mov
xchg
mov
mov
mov
sbb
out
pop
xchg
jne
adcb
imul
inc
lds
in
add
mov
mov
sbbb
dec
dec
or
xchg
mov
dec
sub
sahf
outsb
pop
pop
nop
rorb
lcall
imul
or
xchg
data16
xchg
insb
xor
jae
cld
sub
inc
aaa
repz
xor
cmp
js
inc
mov
aas
push
cmp
mov
fidivrl
sbbl
add
mov
sub
dec
sub
nop
pop
push
mov
lret
push
pop
insl
stos
push
fs
add
outsl
push
mov
add
push
sub
or
push
ljmp
stos
cld
adcb
mov
add
cmp
or
mov
lods
dec
push
aad
je
xchg
xchg
leave
cld
ret
add
push
pop
lods
add
pop
and
gs
jle
adc
insb
xor
jecxz
fdivrl
out
sub
inc
add
xor
sub
popl
lock
mov
repz
sub
addr16
pop
sub
mov
arpl
mov
cmp
sarb
pusha
sbb
mov
aam
ret
sbb
inc
xchg
sbb
loopne
pop
movsl
pushf
adc
mov
lret
pop
cli
test
xchg
lret
jmp
mov
xor
scas
sarb
xchg
push
pop
inc
mov
test
ss
lret
idivb
and
lahf
push
data16
pop
sahf
in
or
cmp
adc
mov
dec
mov
sub
enter
fwait
test
test
sbb
pop
test
pop
cwtl
mov
popa
js
push
push
outsl
inc
mov
scas
pop
aas
je
adc
clc
sahf
push
mov
in
ja
roll
add
popf
popa
xor
in
cltd
jmp
mov
xor
fcmovnu
sarb
push
loop
mov
aas
test
loop
mov
fwait
and
and
rcrl
inc
sub
out
xchg
mov
repz
fxch
js
xor
pusha
rclb
rorl
orl
addr16
imulb
and
into
jb
mov
inc
or
out
jo
fsubs
cmp
jecxz
mov
or
in
xchg
push
gs
scas
repz
icebp
mov
xor
ss
imul
mov
sarb
imul
push
fadd
out
fcmovnbe
mov
pop
cmpsb
inc
mov
pop
push
inc
cld
clc
or
inc
sbbb
fnstsw
push
fstpl
ret
cltd
mov
jns
sahf
add
jnp
jecxz
cwtl
mov
pop
dec
test
or
mov
xor
mull
outsl
jno
push
cmp
dec
stos
lahf
repnz
cwtl
adc
rolb
sub
enter
repz
push
int
int3
mov
lret
adc
int
add
aad
data16
imul
sub
inc
movsl
cmc
cwtl
adcl
pushl
pop
fisttps
pusha
push
sub
ss
sahf
pop
fdivrs
jnp
sub
jno
fucomip
rorb
sahf
std
xor
or
inc
mov
hlt
push
sub
mov
push
ret
push
push
cld
icebp
aam
leave
ret
and
scas
push
shll
or
mov
mov
cmc
pop
and
cli
push
mov
xchg
pop
arpl
cmp
cmp
and
inc
sub
sbb
fisubrs
adc
out
xor
call
bnd
sbb
mov
inc
fs
sub
adc
mov
push
jb
das
push
sarb
lcall
adc
ds
jmp
sbb
loopne
sti
repnz
test
int3
popf
test
adc
iret
mov
repnz
fisubrs
data16
cld
xchg
cmp
hlt
aad
push
pushf
xchg
jecxz
or
fcomps
mov
test
and
mov
mov
test
jl
cmpsb
fistpll
xor
cld
jno
push
outsb
xchg
pop
int3
cwtl
jns
or
xchg
in
mov
outsl
daa
dec
icebp
push
or
xor
insb
sbb
je
add
leave
xor
clc
jae
hlt
aad
push
sar
cs
mov
add
les
jecxz
cwtl
sbb
idivl
xchg
mov
cmpb
popf
push
rcl
push
loope
movsb
and
sub
pop
jno
iret
int
addr16
jmp
loop
test
mov
jno
stos
cwtl
add
imul
add
iret
int3
sahf
popa
sub
repz
rorl
in
or
pop
stc
adc
icebp
sub
ljmp
dec
testl
mov
fiadds
popf
cwtl
cmc
fisttps
or
cmp
push
stos
rcrl
lcall
aaa
iret
dec
sahf
dec
notl
mov
loop
sub
cmp
mov
jp
adc
je
xor
sub
nop
inc
xchg
push
sbb
jno
jmp
std
dec
dec
jmp
pop
loopne
aaa
and
xor
sar
sub
jbe
xchg
and
loop
adcl
xor
clc
cld
inc
or
out
xor
int3
adc
test
jmp
or
mov
cmp
sub
mov
sub
loopne
sbb
jae
daa
outsb
shrl
jb
sub
jl
scas
cmc
push
sub
divb
pusha
addr16
mov
out
dec
ja
inc
xchg
jb
out
adc
mov
std
enter
pop
movsl
shll
aaa
jbe
lret
mulb
lds
add
inc
mov
inc
test
cli
inc
aaa
xchg
popl
pop
sub
jbe
fs
fwait
ss
mov
jns
jecxz
xchg
das
pushf
push
jb
cmpl
sub
subb
or
aas
or
mov
clc
add
sbb
and
cmpsb
jnp
fs
les
adc
fistpll
ret
mov
or
adc
mov
stc
mov
movsb
cmp
je,pn
or
jae
jp
xchg
daa
out
popf
add
mov
pop
gs
idivl
dec
push
add
out
fisttps
inc
sub
ljmp
and
leave
or
sti
fnstsw
ret
pop
dec
mov
dec
and
jno
push
test
pop
lock
push
jmp
imul
insl
add
repz
or
mov
cld
lock
lods
cmp
and
aas
xchg
insb
test
pop
stc
test
inc
mov
xchg
imul
push
mov
jae
fcompl
cmp
fisttps
sub
movsl
push
inc
andb
rorl
pop
mov
add
cmp
jbe
or
mov
inc
imul
lahf
in
outsl
inc
cwtl
push
inc
jg
dec
cli
idivb
mov
xchg
inc
decl
jl
push
dec
jmp
fldt
or
jnp
sahf
sub
popf
jnp
add
in
loop
outsb
cmp
shlb
repz
jnp
cltd
mov
imul
and
not
xor
inc
dec
inc
iret
pop
lret
loope
mov
sub
xchg
mov
stc
or
sub
jg
jmp
addr16
push
cmp
or
int3
mov
lret
insl
lret
mov
popf
in
xchg
ja
cmp
xchg
adc
aam
or
jno
fnstcw
shll
nop
adc
cmpsl
push
push
in
mov
inc
add
sub
ret
jecxz
mov
xchg
nop
call
mov
mov
popa
or
fldl
sbb
loopne
pop
fwait
xchg
data16
xchg
sti
mov
fwait
subl
cmp
mov
fsubrs
push
mov
sub
add
ficoml
cmpsl
ja
out
cmovbe
dec
and
scas
mov
aad
arpl
xchg
fsubrp
popf
loopne
loopne
jmp
xchg
mov
std
imul
cmp
adc
jl
mov
mov
dec
xchg
xchg
jno
jns
movsl
cld
xchg
sub
shr
push
mov
into
mov
sti
cmp
lock
les
icebp
push
imul
mov
jae
popf
repz
and
leave
data16
sub
inc
into
jg
decb
dec
pop
out
out
and
aas
jle
sahf
cld
adc
testb
jbe
add
in
iret
pop
sub
inc
push
pop
mov
in
pop
add
aam
mov
lods
pop
test
pop
insb
fldcw
push
cmp
jecxz
in
sub
and
pop
in
rcr
lret
bound
or
sbb
cltd
sarl
das
cltd
jmp
xor
mov
cmp
pushf
xchg
or
mov
add
or
mov
xor
jb
repnz
push
ret
les
jno
sti
test
stc
jle
out
imul
faddp
inc
daa
sub
ds
inc
in
ljmp
push
add
popa
or
ficompl
sub
inc
cmp
push
jne
lods
lds
dec
push
scas
call
pop
scas
fsts
jp
aad
cwtl
add
lods
xlat
or
lret
inc
call
xlat
mov
sbb
out
jnp
out
test
and
adc
adc
or
jbe
enter
jno
inc
gs
and
repnz
push
sbb
push
push
dec
and
fwait
cmp
inc
in
aad
adc
es
xchg
sub
popf
inc
fmuls
and
sti
int3
add
push
aas
pop
push
and
xchg
clc
xor
ds
orb
jge
imul
movsb
xchg
xchg
addr16
cli
lods
nop
stos
dec
pop
add
mov
and
inc
push
inc
fisubl
out
pop
push
sub
push
push
sbb
or
pop
into
or
stos
repnz
xchg
and
xor
xchg
adc
mov
or
dec
mov
in
cli
lahf
loopne
aas
mov
hlt
rorl
lcall
repz
gs
or
or
mov
fmull
push
loop
repnz
push
lret
imul
testl
inc
ss
int3
ss
je
dec
or
out
jae
imul
cmpl
gs
ret
out
mov
repnz
bound
lahf
mov
jnp
cmp
and
dec
into
stc
lea
stos
ds
addr16
out
mov
xchg
or
insb
ret
xlat
mov
and
push
imul
sub
add
adc
fcoms
insb
inc
inc
xorl
ffree
sbb
mov
test
add
fsubl
sub
adc
movb
ljmp
xor
es
jge
inc
loopne
sbb
push
sbb
jmp
adc
sbb
pop
jnp
in
push
nop
jg
xor
xlat
iret
or
arpl
sbb
jo
mov
in
lods
movsl
andb
faddp
xchg
dec
aad
ja
push
out
sbb
xchg
shll
or
std
mov
ss
rcr
jle
sbb
dec
lds
mov
ja
push
lret
enter
imul
jnp
xchg
mov
push
and
icebp
and
pop
enter
inc
xor
fwait
push
push
pop
xor
and
dec
leave
out
dec
sbb
mov
pushf
xor
les
xchg
movsl
fimull
jp
xchg
pop
stc
into
ret
push
insl
movsl
clc
mov
cs
mov
push
hlt
negl
inc
jmp
cli
sbb
or
push
jmp
pop
ljmp
je
subb
sub
xor
jno
dec
gs
push
mov
scas
cli
jge
cmp
clc
add
jg
fstpt
ja
in
jmp
lea
xchg
icebp
adc
or
pop
push
in
push
scas
and
subl
adc
jae
mov
add
fildll
test
decl
fimuls
mov
cmp
and
xchg
push
mov
xor
aaa
shl
and
push
loope
add
dec
pop
dec
pop
add
ret
sub
stos
sti
mov
aam
push
lret
aam
sub
mov
pushf
fcompl
dec
dec
movsb
ss
and
fwait
outsb
daa
mov
dec
dec
or
add
mov
and
addr16
lcall
add
lret
push
pop
scas
push
andb
push
inc
or
insb
andl
mov
repnz
jp
add
push
push
push
inc
push
fldenv
subb
or
movups
loop
mov
xor
mov
sti
pop
or
pop
in
mov
dec
lret
mov
mov
or
jg
cmp
adc
push
jle
sbb
aas
mov
fisubl
xchg
xchg
mov
cmpb
ret
pushf
and
push
cltd
sub
sub
repz
movsl
sbb
adc
movsl
mov
dec
sub
out
rcr
insl
addr16
aad
imul
or
sbb
sub
shll
sub
dec
outsl
cmc
sub
scas
push
and
clc
ret
lretw
pop
loope
sub
dec
dec
stos
jo
arpl
ja
aas
mov
scas
hlt
adc
mov
mov
andl
jno
adc
mov
sub
lahf
add
mov
mov
jle
xlat
lret
adc
xor
xor
lcall
out
js
imul
scas
sub
lock
stos
mov
insb
test
cs
pop
aas
dec
mov
aam
adc
nop
out
je
je
and
lahf
test
rcrl
jo
pop
aaa
push
jbe
jnp
mov
and
or
lcall
jl
push
pop
jp
mov
mov
repnz
xor
and
mov
pop
pop
xor
mov
inc
sbb
xchg
push
dec
mov
fcompl
sub
jnp
mov
sbb
iret
pop
aas
dec
xor
mov
sbb
or
pushf
push
and
push
das
out
sub
push
test
bound
add
fcomps
xor
xchg
cwtl
xor
mov
jo
mov
sbb
cmpsl
gs
jge
shrl
mov
rclb
cmp
ret
outsb
inc
scas
dec
ljmpw
ret
dec
iret
lock
mov
inc
fimull
sub
mov
jbe
into
xchg
or
repz
push
repz
lcall
jns
jae
cmp
mov
clc
push
dec
mov
push
aam
xor
inc
cmpsb
ficompl
mov
lds
xor
lea
stos
cs
aas
jecxz
mov
lea
jb
mov
mov
and
jo
in
dec
mov
jbe
jo
push
add
ror
xchg
push
sub
mov
dec
fstl
mov
lods
cltd
push
or
stos
and
lea
imul
xchg
in
ss
repz
push
push
and
inc
jmp
ljmp
icebp
mov
imul
fs
jo
arpl
loope
cwtl
mov
iret
mov
pop
les
int
mov
xchg
fimuls
cld
push
cmpsb
jno
push
sar
lods
fs
nop
mov
lret
and
xlat
ss
pop
pop
or
add
outsb
lods
cbtw
icebp
and
out
in
cs
jnp
aam
dec
mov
loope
nop
cmp
sahf
stos
xchg
cmp
inc
and
ljmp
stos
sarb
jbe
int
and
cwtl
inc
inc
clc
or
sub
hlt
mov
sub
movsl
daa
scas
and
inc
lods
loopne
leave
mov
jo
jle
inc
lods
jae
sarb
mov
in
shl
pusha
inc
sub
xor
sub
insb
shlb
pop
dec
lds
stc
jl
mov
das
dec
or
cltd
inc
add
adc
data16
adc
mov
lock
sbb
inc
arpl
adcb
test
cmp
push
mov
dec
lea
stos
mov
mov
dec
paddq
pop
mov
das
or
mov
mov
popa
mov
out
pop
push
and
test
test
cmpsb
push
and
incl
in
fmull
xchg
push
cltd
popa
adc
js
pusha
adc
jecxz
test
mov
shrb
add
je
xchg
jo
sub
les
arpl
pop
inc
xlat
sbb
push
sbb
cmp
push
loope
in
add
push
jg
mov
dec
inc
mov
out
xorl
and
jo
rcrl
les
out
loop
and
jle
jne
das
aas
adc
jmp
xor
in
adc
push
outsb
xlat
in
call
bound
mov
sahf
mov
aad
ja
jecxz
xor
ljmp
pop
leave
fsubrp
xorb
subl
test
and
push
or
jnp
pop
add
aaa
cmp
enter
call
mov
mov
cli
stos
fsubrl
mov
dec
loope
je
mov
addr16
and
imul
mov
out
pop
push
data16
cmp
stos
arpl
xlat
repz
xor
loope
adc
adc
add
imul
xorb
sub
mov
mov
mov
mov
lahf
out
and
hlt
mov
adc
jae
sbb
xchg
mov
push
mov
stos
ljmp
dec
mov
adc
dec
xchg
xor
mov
lret
and
xor
lods
pusha
scas
loop
icebp
leave
push
add
or
pop
or
dec
adc
in
cld
xchg
adc
mov
cmp
aad
push
subl
jae
mov
jb
pushf
cmp
in
aas
iret
jl
fstpt
xorl
cmp
xor
push
hlt
rcll
add
push
dec
ficomps
test
js
push
fadd
fsubr
dec
sbb
pop
dec
loop
ja
fldt
cmpsb
int3
ds
repnz
outsb
addr16
sub
push
xchg
adc
mov
in
push
aad
jmp
cmp
mov
ret
mov
pop
test
xchg
jne
fldt
adc
ljmp
test
add
rcll
dec
test
int
xchg
adc
mov
cmpsb
fdivrs
xchg
mov
sub
pop
sbb
xchg
in
or
arpl
push
or
add
mov
or
cmpsl
enter
push
lea
jle
or
test
sti
sub
cmp
arpl
mov
insl
mov
das
mov
add
mov
cwtl
dec
ret
mov
mov
roll
mov
sub
cmp
jne
xor
add
and
push
jmp
xchg
add
jp
jmp
mov
out
and
mov
leave
pushf
pop
pop
loope
mov
pushl
data16
or
cmp
leave
mov
push
loopne
adc
daa
ja
es
fcmovu
mov
pop
lods
sahf
fcom
xor
iret
shlb
psubusw
push
shl
sub
push
adc
push
or
js
arpl
push
cmp
mov
xchg
cmp
outsl
xchg
test
std
js
xlat
insb
fcoml
mov
out
and
aad
aaa
imul
add
subl
out
adc
ljmp
icebp
mov
jmp
int3
sbb
imul
jmp
test
dec
sbb
or
jmp
mov
call
mov
sbb
sbb
add
sub
push
push
stos
icebp
femms
enter
xchg
sub
and
mov
idivl
pop
cmpsl
jg
fsubp
jmp
les
data16
mov
pushl
imul
sarb
mov
sbb
push
jle
mov
mov
mov
loop
sub
pop
mov
inc
mov
test
aam
mov
sub
xchg
mov
or
xor
jno
cmp
mov
xor
sti
faddp
pushf
mov
test
mov
outsl
inc
ret
out
aad
mov
xchg
mov
cmp
xor
call
inc
adc
fistps
xchg
les
mov
lea
jg
adc
add
roll
dec
jns
fdivrl
test
mov
push
scas
mov
loope
cmp
pop
adc
sbb
and
push
mov
jnp
or
ds
inc
adc
popa
jo
hlt
jl
dec
ds
dec
in
inc
test
arpl
jp
xor
xchg
push
add
dec
mov
cwtl
call
idivl
jns
shl
pop
pop
out
and
in
jbe
sbbb
lock
mov
lret
imul
push
mov
and
mov
mov
imul
mov
mov
cmp
in
xor
xchg
mov
outsb
dec
testb
jb
in
dec
cmp
push
mov
addr16
push
bound
popf
lcall
push
inc
jg
popf
jae
int
inc
xchg
xchg
in
mov
jg
fbld
scas
stc
add
mov
aad
lods
lahf
adc
add
mov
and
bound
dec
js
jl
subps
sub
sub
jo
cmp
push
or
negl
lea
outsb
add
sbb
dec
cmp
fincstp
or
mov
cwtl
sub
dec
mov
adc
and
out
cld
mov
mov
jl
jp
fxch
loopne
jns
dec
das
scas
je
add
cmp
cli
insb
inc
cmp
mov
fwait
std
inc
dec
cld
pop
adc
ret
push
xchg
imul
push
fs
es
inc
xchg
lea
push
shlb
loope
cmp
popa
mov
inc
cmp
push
jb
mov
xlat
and
pop
stos
rorl
lahf
popa
push
push
int3
mov
pusha
fadds
push
daa
pusha
push
pop
or
fiadds
stc
mov
pushf
fmull
push
dec
mov
adc
mov
push
mov
or
lods
xchg
inc
mov
stc
pop
out
dec
out
pop
ss
mov
mov
pushf
or
cwtl
aam
lret
arpl
sbb
cmp
and
adc
pop
hlt
push
add
cmp
pop
cs
mov
push
gs
std
sub
jb
fiaddl
into
popf
rolb
xchg
inc
pop
inc
test
inc
ret
or
sbb
faddl
pop
add
push
daa
rcrb
fcmovu
or
fucomip
fcoms
inc
shlb
fcomps
add
push
push
stos
lods
jbe
lock
xor
cmp
pop
sbb
add
outsb
ret
push
ljmp
sub
push
adc
out
and
je
and
cmpsl
or
stc
xor
mov
ret
aas
jmp
repz
out
and
and
adc
and
and
subb
ficoms
xchg
lret
nop
jne
ss
jl
inc
cmpsb
push
sbb
pop
test
decb
xchg
out
sub
shlb
in
sbb
fstpl
mov
inc
dec
jle
jle
mov
push
lds
leave
or
shll
arpl
ja
mov
fiaddl
out
fidivl
in
stos
mov
enterw
in
mov
lcall
push
sbbb
xchg
sbb
lock
dec
dec
aam
scas
out
pop
or
mov
dec
pop
movsb
sub
out
jno
lods
sub
test
fsubs
jo
adc
push
mov
cmc
inc
fldenv
inc
push
push
mov
fstpl
and
xchg
das
jnp
and
sbbb
sarb
xchg
movsl
mov
dec
pop
rcll
ret
sbb
andl
jbe
lods
jl
repnz
fs
mov
fs
push
in
inc
movsb
add
push
add
and
or
repz
stc
mov
adc
dec
jae
xchg
gs
nop
outsb
sahf
es
lcall
mov
pusha
jbe
adc
std
cmp
ss
outsl
pop
shlb
pop
ds
add
mov
decl
int3
and
adc
xor
mov
js
mov
je
cmp
cmp
in
shrb
add
sub
shll
test
jb
jmp
stos
mov
sbb
pop
xor
or
daa
sub
imul
or
repz
push
or
pop
push
mov
js
pop
outsl
jle
loop
divb
daa
mov
loop
daa
mov
inc
mov
sub
lret
cmp
sub
mov
push
pushf
pusha
cli
jl
mov
xor
iret
xchg
push
mov
mov
ds
leave
ret
aam
mov
roll
pcmpeqd
insb
test
mov
inc
out
cmpps
inc
xchg
bound
mov
mov
xor
pop
lods
fdivs
add
cltd
jne
mov
shrl
jp
fsubrl
push
fldcw
push
idivb
iret
js
fadds
sbb
mov
push
mov
jmp
sbb
lea
jmp
lods
mov
gs
push
lods
js
inc
lods
push
pop
push
leave
xor
and
sbb
cmc
mov
outsb
inc
bound
test
nop
cmpsb
or
scas
sbb
fmuls
xor
or
mov
test
out
scas
jge
mov
xor
xor
in
arpl
out
sti
xlat
pop
test
pop
daa
jbe
adc
das
cmpsl
push
mov
and
scas
dec
sub
pop
mov
sub
jae
cmp
inc
sub
push
cmp
icebp
jns
adc
jl
xor
push
scas
xor
mov
icebp
sbb
xchg
mov
or
xchg
adc
xchg
push
fstpt
mov
into
jae
in
clc
aaa
scas
sub
ljmp
sub
push
lods
xchg
ret
push
sbb
cmpsb
sbb
dec
sub
ficoml
mov
xchg
mov
mov
push
push
cwtl
lea
insl
pop
out
or
movsl
jnp
ds
push
push
pop
lcall
mov
push
loopne
call
inc
int
jle
or
aad
xor
gs
shrl
sbb
or
aaa
mov
mov
sti
xchg
das
or
out
adc
andb
mov
es
mov
loope
sbb
or
sti
test
loop
out
xchg
shlb
sbb
push
aaa
xor
gs
mov
lret
mov
add
mov
jge
bound
or
pop
js
orb
xchg
out
bound
dec
cmp
addr16
jle
sti
cmp
or
or
aas
mov
lcall
gs
mov
adc
sub
aaa
dec
arpl
daa
mov
frstor
pop
inc
lret
ds
test
int
xlat
loope
cli
xchg
shr
bound
lea
je
push
cmpsb
cltd
into
adc
fxch
jae
inc
cli
lret
mov
inc
jo
mov
or
cmp
push
push
icebp
in
aad
pop
add
in
repz
inc
ss
add
jnp
xchg
sbb
xchg
jnp
add
sbb
stc
data16
adc
jb
mov
int3
mov
mov
or
xchg
lds
push
or
mov
jns
cmp
and
fiadds
or
fstps
and
aaa
jb
sbb
xchg
push
push
lahf
int3
mov
pop
fisubs
xor
cmp
mov
aaa
inc
mov
aas
xchg
cmp
bnd
push
mov
aad
repnz
pop
popf
sbb
shlb
fwait
mov
push
je
test
testl
scas
cmc
cli
rorb
sahf
out
fwait
ret
lret
nop
imul
pusha
and
aam
std
test
xor
out
lock
shrl
addr16
push
mov
push
rcrl
fsubp
fwait
out
scas
inc
mov
lret
cli
jo
ss
xor
dec
or
in
mov
dec
lods
pop
sub
movsl
loopne
popa
cmp
sub
mov
inc
xchg
loope
push
fdiv
xchg
js
imul
xchg
data16
and
sub
inc
xor
and
stos
stos
test
xchg
das
js
bound
lea
das
shll
or
cmpsb
adc
add
sti
dec
sub
loopne
push
pop
mov
lods
sbb
leave
cmp
sbb
adc
call
inc
jo
arpl
sbb
and
mov
std
mov
xchg
mov
popf
loope
mov
clc
pop
dec
insb
pop
mov
cmc
rclb
mov
rorb
or
out
xchg
clc
xor
xor
and
or
cmpsl
push
xchg
pop
cli
mov
mov
mov
cmp
jmp
inc
xor
js
out
jmp
push
mov
loopne
mov
addr16
outsb
sub
outsb
xlat
pushf
add
or
test
inc
sbb
push
lods
lds
push
int3
mov
repz
jno
repnz
jo
in
mov
xor
cmp
pop
jp
and
inc
fdivrp
das
hlt
je
push
fwait
adc
xor
inc
dec
addr16
mov
cmp
dec
popf
sbb
notl
adc
xor
and
inc
packsswb
and
xchg
enter
lahf
sub
ss
push
lret
adc
imulb
js
jl
push
or
adc
mov
xchg
rclb
cmc
jbe
and
pop
shld
mov
and
mov
or
jbe
push
cld
mov
mov
push
xchg
ja
leave
add
cmp
jno
es
in
into
fcompl
pop
add
xchg
add
jno
inc
add
xor
shr
xchg
push
insb
leave
jecxz
call
mov
dec
test
dec
popl
loope
rorl
leave
adc
in
pop
int3
jns
ficoms
enter
or
add
add
stc
lret
push
in
test
cld
push
insb
mov
es
rol
imul
in
and
data16
xor
test
or
add
xlat
mov
push
pop
sahf
inc
lret
sub
or
rorl
xor
sub
rcrb
out
das
sub
xchg
fimull
int3
jbe
pop
ljmp
cmp
lea
sbb
pop
insb
ror
int3
dec
jae
stos
in
xchg
test
jmp
in
jae
xor
jmp
not
repz
sbbb
fildll
mov
std
adc
add
push
mov
mov
cmp
shrb
inc
or
lock
cmp
dec
lahf
pop
jno
adcb
push
jo
or
shll
adc
pusha
cs
movsb
repnz
pop
shlb
mov
repz
jae
cmpsb
fcmovbe
adc
mov
mov
aam
mov
jno
inc
imul
jmp
filds
inc
mov
aam
outsl
add
jno
sbb
jb
xchg
cmpl
mov
imul
call
rol
xchg
mov
lret
and
push
xchg
push
mov
test
inc
pop
jmp
mov
or
sub
test
sub
inc
in
mov
push
or
xor
pop
popa
jmp
mov
jno
sbb
stos
into
sub
pusha
dec
les
sahf
test
cmc
and
mov
mov
xchg
clc
sbb
das
pop
and
stos
pop
ds
mov
and
shrb
and
mov
sahf
fwait
push
and
popf
pop
fadds
push
mov
inc
cli
mov
pushf
sub
add
aad
sbb
mov
fstpl
push
push
sbb
add
ja
push
sub
add
jle
lret
or
ja
cwtl
xor
cmpsb
mov
cmp
fiadds
adc
ret
mov
loopne
sbb
fnstcw
daa
xor
fnstsw
test
imul
jnp
cltd
and
inc
shlb
call
mov
pop
xchg
cmp
sub
xor
push
and
add
jp
cmp
les
mov
adc
cli
push
sbb
inc
jg
xchg
test
push
adc
mov
cli
sbb
les
mov
mov
jg
mov
pop
nopl
and
inc
sub
inc
lock
xchg
scas
pop
ret
pop
sub
mov
scas
pop
add
jbe
pop
aam
adc
cld
push
sti
ficoml
jmp
inc
clc
les
ss
adc
jecxz
popf
jne
rol
dec
mov
and
pushf
mov
aas
push
mov
or
push
xor
movsl
mov
lds
sbb
loop
js
jmp
mov
imul
xchg
icebp
lahf
mov
mov
in
aad
xchg
gs
jecxz
es
test
mov
sbb
and
cmpsb
push
outsl
repz
cmc
and
call
cltd
lahf
cmpsb
pop
cmp
jmp
dec
dec
sub
lods
sbbb
mov
sub
fidivs
push
cmp
adc
add
out
pusha
pushf
and
daa
xor
ds
and
jp
xor
cwtl
enter
rcrb
adc
test
loop
fcmove
js
adc
cmp
imul
jno
shlb
add
cmpsl
adc
pop
dec
ret
or
lsl
add
ja
pop
mov
fstps
mov
xor
les
into
cld
push
mov
jp
fldl
jle
sbb
cmp
rolb
fcompl
cmp
mov
fsubs
sbb
pop
pushf
inc
xlat
push
lds
out
jno
in
jg
sahf
xchg
cmovbe
and
scas
cs
or
xchg
jne
sahf
into
mov
loope
sub
decb
ret
xor
lahf
sbb
xor
sahf
sub
dec
jl
cltd
mov
mov
adc
jno
add
fistps
pop
mov
push
repz
lret
xchg
jb
decb
push
push
cmp
adc
or
pop
out
mov
ljmp
cmpsl
jns
scas
sbb
outsl
mov
sub
leave
mov
inc
push
push
xchg
and
xlat
out
mov
pop
add
popf
xor
in
shrl
mov
outsl
jecxz
and
aad
jge
in
mov
lea
gs
adc
loop
dec
mov
inc
mov
cmpsb
jbe
test
rcll
cld
or
cmp
scas
lret
into
sarb
insb
add
hlt
lods
push
jns
xchg
popl
jns
jecxz
sub
xor
mov
and
es
sbb
xchg
mov
cs
cmp
jns
aam
lret
jne
adc
bound
fstpl
daa
mov
jne
sarl
mov
popf
sub
mov
and
mov
rorl
mov
or
sbb
jns
jmp
pop
xchg
jle
out
xor
imull
mov
lahf
scas
add
imul
repnz
rolb
mov
cmp
cmpsb
subl
jae
hlt
call
xchg
jg
stos
dec
sub
pop
or
scas
add
lods
adc
out
xchg
push
xlat
xchg
mov
jecxz
jno
popa
jl
cmpsb
pop
aad
into
cs
test
fstp
push
xor
outsl
push
mov
icebp
leave
push
mov
push
jns
lods
ljmp
xchg
sbb
cwtl
lahf
push
test
mov
jge
sbb
push
mov
inc
icebp
rorb
in
int3
push
pop
mov
pop
cmp
negl
mov
mov
sbb
repz
call
lret
outsb
cmpsb
dec
fsubr
ds
push
scas
adc
lods
fistl
jecxz
in
add
roll
adc
jo
cmpb
lods
popf
xor
sahf
mov
jns
orb
cmpsb
push
jne
data16
cs
push
pop
pop
loop
xchg
xchg
loopne
sub
arpl
rcrb
jb
and
jae
into
ret
cmpsl
adc
in
roll
jg
shlb
mov
mov
das
cs
lods
repnz
push
js
js
rol
cmp
jmp
dec
in
adc
cmpsb
xchg
jmp
xchg
jae
dec
lods
and
out
cmp
fidivs
imul
add
xor
xchg
jle
jp
mov
test
insl
sbb
cld
orb
or
call
jmp
jp
sub
push
andl
push
mov
in
pop
xchg
dec
movsl
mov
mov
jl
and
mov
cmpsl
mov
daa
lret
pop
rorb
je
rol
jp
pop
stc
lods
fldenv
jg
jno
or
pop
repz
stc
xchg
or
mov
je
push
idivb
sahf
iret
in
mov
xlat
sahf
mov
dec
xchg
dec
rcr
sub
push
xchg
test
test
mov
divb
cmpsb
insb
daa
nop
jb,pt
dec
jo
cld
mov
jp
pushf
insl
iret
enter
sbb
fidivl
mov
cmp
add
cmpb
lahf
cmp
add
cli
mov
subb
mov
jnp
cmp
sbb
push
stos
jmp
xchg
inc
repz
mov
jb
dec
mov
imul
repnz
into
and
cmp
jecxz
add
mov
hlt
test
aaa
xor
xor
rorl
xchg
mov
sub
fidivs
aam
sbb
add
lcall
jno
in
enter
pop
mov
ret
cmpsl
and
pushf
hlt
popf
push
stos
xorb
pop
xor
dec
bound
cwtl
rcll
stos
imul
fwait
lcall
addb
jno
lcall
push
adc
push
je
cs
push
js
push
inc
dec
stos
outsl
adc
sub
jae
divb
insb
outsb
cmp
call
rcr
add
aaa
arpl
or
sbb
stos
cmp
push
push
les
sub
outsb
aam
sub
dec
outsb
fwait
sbb
push
fwait
enter
mov
pop
sahf
mov
and
pop
not
xlat
out
jbe
cmp
cmp
or
cwtl
lahf
insl
aas
jge
adc
or
cmp
xor
and
scas
loope
adc
aaa
mov
sbb
jmp
mov
mov
ja
pop
push
lods
in
or
pop
jnp
es
push
xchg
mov
push
cmpsl
mov
cmp
add
add
loope
mov
sarb
and
xchg
daa
xor
aam
js
fnstsw
daa
xchg
adc
dec
push
fwait
leave
xchg
ljmp
ljmp
mov
dec
pop
mov
sti
fisttpll
and
dec
rclb
pop
xlat
seto
xor
xor
imul
push
inc
mov
movsb
jl
push
flds
push
stos
movsb
cmp
jae
les
cs
add
stos
aas
or
jmp
orb
pop
arpl
inc
jb
bound
add
fcmovb
push
mov
in
addr16
cwtl
inc
imul
aad
lret
jecxz
xchg
mov
dec
pop
or
jg
leave
push
ss
xchg
push
dec
call
push
mov
arpl
mov
pop
dec
test
fwait
jmp
int3
cmp
mov
leave
aad
xchg
jle
lcall
test
jno
cmpsb
mov
shlb
xchg
pop
lahf
inc
imul
push
outsl
inc
pop
pop
data16
jl
ljmp
pop
and
push
xchg
icebp
inc
or
xchg
mov
test
jmp
sub
cmp
int
rep
mov
sbb
sbb
jo
cmp
push
xor
leave
enter
mov
and
jns
aaa
gs
mov
ljmp
dec
pop
inc
xor
dec
jmp
out
dec
pop
xor
pop
inc
into
loope
dec
pusha
test
mov
mov
push
loopne
int3
fidivs
shlb
pop
inc
xor
aam
push
mov
push
test
out
mov
outsl
jnp
leave
push
pop
testl
stos
dec
cmp
xchg
in
mov
sahf
loopne
out
mov
cmp
and
repz
lods
ljmp
push
sbb
popf
and
lcall
enter
xor
sahf
cmc
mov
dec
jne
imul
lea
inc
push
repz
xlat
je
inc
dec
adc
int3
dec
cmp
inc
pop
pop
popf
fs
jnp
mov
xor
imul
or
pop
dec
push
xchg
adc
push
lods
cmp
mov
inc
fmull
dec
fisttpl
mov
mov
jle
dec
test
mov
sub
xor
orl
dec
pop
xchg
call
test
arpl
lahf
xchg
jne
or
mov
sahf
pop
arpl
rcrl
push
inc
mov
and
andl
or
or
cmp
cmp
mov
mov
mov
cmc
add
or
sbb
sahf
cltd
sbb
dec
fstpl
pushf
out
pop
out
mov
int
jno,pn
fdivr
sub
sub
mov
xlat
pop
div
in
shl
subb
pop
es
arpl
push
dec
jbe
ret
pop
in
mov
dec
fsubl
xchg
dec
fadd
xchg
jmp
int
enter
sbb
sahf
jo
test
cwtl
add
les
mov
fstl
scas
sbb
add
popf
les
imul
scas
sbb
sub
xchg
mov
jbe
int
int3
xchg
xlat
xlat
rorb
fsubl
push
fimuls
cltd
shrb
push
pop
aaa
lcall
gs
mov
mov
dec
ja
pop
cltd
cmpsb
movsb
cmpsb
xor
out
xor
rorb
push
outsl
ja
and
shll
cmp
mov
ds
mov
clc
popw
shll
sub
adc
addr16
jecxz
sub
jp
outsl
push
push
dec
push
mov
cwtl
dec
repnz
sub
pop
loopne
call
xor
mov
aad
fimull
lahf
pop
and
sbb
lea
xlat
mov
add
mov
jae
sbb
or
mov
cmp
int
out
push
pop
icebp
mov
cli
push
icebp
adc
movsb
icebp
incb
mov
imul
insb
fcmovu
pop
sub
sbb
inc
jecxz
cmp
sub
lahf
int3
pushf
fwait
fwait
mov
out
add
add
js
das
and
jne
pop
fdivrl
pop
and
lods
mov
loop
out
xchg
cmp
fisubrl
cmp
cmp
gs
pop
jnp
and
int3
lahf
sbb
xor
roll
xchg
xor
mov
lahf
mov
test
push
mov
insb
dec
ss
in
mov
add
mov
fisttpl
int3
dec
ljmp
rcrl
js
int3
xor
into
addr16
cmc
pop
push
loopne
iret
and
sti
repnz
fcmovbe
testb
cmp
adc
cvtps2pi
dec
inc
test
out
insb
sti
push
ljmp
in
push
sub
insl
loopne
in
sub
loopne
xor
daa
loope
popa
xchg
mov
repz
iret
pusha
jns
push
stc
adc
cmp
jecxz
test
jmp
aas
xor
pop
call
aam
dec
loopne
xchg
cmp
out
lahf
mov
and
or
enter
loopne
enter
xor
lret
xor
pop
dec
sbb
stos
mov
mov
sti
ljmp
je
xor
popa
sub
int
in
inc
dec
mov
inc
iret
fdivs
cltd
inc
test
test
negl
movsl
pop
and
pusha
sar
xchg
stc
cmovb
popa
pop
xchg
mov
jo
mov
dec
dec
cmp
shlb
fbstp
rcrb
xor
jge
ret
xlat
pop
push
mov
lock
aam
fsubrs
push
pop
cmp
mov
loop
sub
and
test
test
cmp
fdivrl
pop
fldenv
call
push
adc
cmp
aad
sub
xlat
xor
push
add
test
dec
pop
and
dec
mov
loopne
push
aaa
or
adc
pop
or
xlat
xchg
aad
rol
dec
ss
push
or
cmp
fwait
sahf
inc
sbb
and
mov
aam
inc
mov
shlb
loopne
add
dec
lret
std
mov
jge
fs
jno
mov
push
das
and
pop
xchg
cmpsl
int3
js
jmp
add
and
mov
cmpsl
or
cmp
lods
or
and
call
jge
lahf
jno
ljmp
lods
pusha
loope
dec
addr16
daa
popa
scas
mov
sub
das
mov
call
pop
and
mov
aaa
and
xchg
xchg
out
push
xchg
mov
ds
pop
jmp
je
xlat
mov
gs
pop
fsubrl
mov
lahf
adc
push
cmp
inc
shlb
inc
xchg
and
cmp
dec
subl
xchg
lock
int
jp
shlb
and
xchg
jns
push
vphaddudq
sbb
movsl
out
pop
call
mov
mov
and
ss
mov
xchg
mov
adc
mov
fimuls
and
in
add
pop
nop
test
scas
xchg
dec
cmp
xchg
sahf
pop
jne
pop
xorb
sarb
in
add
xchg
dec
jo
mov
int
dec
jne
jae
cmp
jle
adc
jns
insb
jo
push
bound
jns
or
push
iret
add
add
lret
shlb
jmp
push
pop
aam
jnp
inc
sub
mov
cmpsb
cmpsl
jnp
lds
pop
and
test
mov
rcll
pop
sub
roll
add
in
fistps
fs
test
sti
jno
cmc
stc
std
mov
or
cmovs
outsl
shll
repnz
xchg
mov
pushf
mov
test
push
ja
jecxz
aas
cmpsb
in
movb
fxch
jp
daa
xchg
adc
inc
lea
lcall
fsubrl
mov
xorl
cs
mov
addr16
pop
lds
jns
out
cmp
outsl
jecxz
cltd
adc
mov
xor
xor
aam
data16
xchg
cmpsb
scas
sub
ret
push
scas
mov
and
jg
lahf
cmp
pop
not
int3
jbe
cmp
ficomps
pop
mov
ficomps
std
xor
popf
xchg
stos
xor
movsl
or
adc
push
and
xchg
xchg
jno
xchg
jbe
add
push
mov
sahf
outsl
rcl
leave
ja
xlat
xchg
mov
test
mov
test
imul
add
shl
pop
xchg
movsl
add
and
jo
jno
push
fidivs
sbb
mov
leave
add
xor
mov
add
lret
push
je
jb
push
cmp
jbe
add
mov
mov
clc
inc
pop
addr16
fsubs
mov
push
xchg
sbb
inc
arpl
inc
outsb
stc
dec
lahf
daa
mov
call
mov
int3
jae
sub
adcl
lret
lods
insl
push
mulb
mov
imul
mov
or
adc
mov
add
leave
or
testl
inc
or
inc
xlat
enter
jecxz
dec
adc
add
fnstcw
lock
cmp
push
call
or
or
inc
dec
sub
out
imul
xlat
xor
push
jno
jge
imul
std
aad
test
mov
sti
int3
sti
fnsave
pushf
hlt
jmp
jmp
mov
pop
jle
jmp
mov
mov
push
dec
xchg
sbb
lods
std
mov
xchg
ss
es
shl
xor
loope
loope
sbb
pop
orb
rcll
jp
push
push
lahf
cmc
lahf
inc
rcrl
lods
lods
xchg
inc
es
inc
and
sbb
push
and
mov
cmp
in
nop
dec
or
fcoms
xlat
or
mov
adc
and
adc
jp
insl
dec
adc
add
cmp
ss
mov
movsb
fmuls
xchg
gs
aas
jle,pn
pop
adcl
je
fadd
inc
jb
imul
push
xchg
sbb
inc
dec
fs
inc
xchg
int3
sbb
in
mov
mov
mov
es
xchg
ja
stos
mov
push
and
xchg
add
mov
mov
jp
loop
add
dec
jne
or
icebp
les
insl
xor
xlat
and
jb
lret
lock
subb
dec
add
cs
popa
xor
loopne
dec
shl
push
or
loop
xchg
push
insl
pop
dec
fldt
dec
jmp
mov
sub
mov
push
mov
cli
mulb
adc
mov
jnp
cmp
mov
mov
push
ret
xchg
fdivl
and
in
push
lds
arpl
stos
jge
sub
int3
pop
push
addr16
or
and
clc
lcall
out
ret
stos
push
sbb
sub
int3
sarl
out
dec
pop
jl
cmp
mov
cmp
mov
aaa
ljmp
push
into
mov
sbb
fdivp
xor
cmp
outsl
and
in
add
idivl
in
arpl
inc
jl
pop
mov
mov
adc
jle
lahf
icebp
jge
sbb
adc
pop
cmpsl
inc
xchg
and
fldenv
pop
mov
jb
add
adc
fiadds
mov
popf
cli
jl
lret
inc
xlat
dec
dec
lock
jae
mov
push
lret
and
dec
hlt
fs
mov
dec
cmp
jge
xchg
push
mov
sbb
and
jno
mov
xchg
loopne
repnz
lret
ss
sti
sahf
pushf
push
and
imul
aam
inc
xor
push
jb
repnz
xor
inc
cmp
lahf
xchg
in
gs
inc
pushf
dec
testb
xor
sub
pop
lret
add
inc
mov
aam
incl
inc
and
in
mov
in
loopne
xchg
mov
jp
aam
jecxz
mov
lods
es
cs
jg
dec
push
imul
je
pop
or
adc
cmp
inc
pop
movsl
mov
inc
in
mov
add
hlt
sub
mov
int
cltd
xor
inc
xchg
mov
mulb
mov
add
mov
aaa
pushf
jo
pop
jno
push
clc
adc
popa
ja
mov
and
xchg
into
adc
xchg
inc
inc
pop
xorb
jne
sub
rcrb
out
sahf
inc
loopne
mulb
frstor
adc
ljmp
orl
arpl
and
mov
stos
scas
fbld
insb
xor
lret
xchg
push
dec
nop
sbb
out
popa
std
inc
mov
out
fs
push
out
inc
adc
jns
push
repnz
fs
fcomp
dec
sub
pop
loopne
cmc
into
insb
aad
pop
mov
repz
iret
out
push
outsb
cmp
xor
in
mov
pop
mov
shll
and
push
dec
aaa
aaa
pop
aas
mov
add
fistl
sub
imul
mov
xor
and
call
jmp
push
fidivrl
cmp
int3
xor
xor
in
mov
lds
inc
subl
or
pop
jl
test
adc
xchg
xor
loope
popf
in
adc
les
pop
push
mov
notl
pop
dec
mov
bound
add
iret
pop
mov
mov
push
insl
dec
add
sbb
sub
xchg
cwtl
push
pop
adcl
push
mov
inc
mov
rolb
scas
cli
jge
mov
lea
lea
add
pusha
push
data16
adc
ja,pn
ficoms
sbbl
xorl
adc
jmp
insb
stc
or
clc
addr16
repnz
xor
fidivs
add
add
inc
bound
fcomip
test
stc
incl
imul
mul
cmc
test
sub
sub
xlat
js
dec
adc
add
mov
pop
insl
inc
ret
mov
test
in
mov
jbe
test
insb
cltd
test
pop
mov
fdiv
sub
mov
inc
outsb
mov
pushf
es
in
pop
xor
fwait
rcl
xor
jb
xchg
test
inc
lods
addr16
xorl
push
ret
mov
and
mov
jb
push
sub
imul
xor
test
ret
mov
pop
scas
jecxz
mov
aad
fistpl
sbb
out
cmp
ficomps
arpl
mov
sub
pop
popa
xor
cs
loope
mov
jecxz
xchg
dec
test
or
cmp
sub
int3
aaa
lock
push
add
sbb
jecxz
push
fcmovbe
rclb
test
bnd
xchg
sub
pop
and
jae
pop
fimuls
cmp
inc
cli
inc
jns
imul
add
lcall
push
adc
mov
xchg
mov
roll
inc
andl
mov
xor
cltd
add
call
jne
or
into
cmp
out
dec
adc
sti
inc
fbstp
jb
ljmp
cli
cmp
push
mov
aaa
push
push
ljmp
nop
inc
xor
push
and
das
dec
push
sbb
lds
out
scas
add
div
xlat
testl
dec
stos
test
lret
fsubrs
xchg
dec
or
mov
addr16
and
out
mov
cmp
ret
scas
push
inc
stos
cmp
sbb
cwtl
mov
enter
push
and
jb
xlat
and
mov
imul
cmp
dec
push
or
icebp
stos
xor
pop
cmpsb
sti
push
jecxz
xchg
addb
push
aad
popf
out
lds
lret
push
xchg
inc
and
push
jnp
mov
into
data16
inc
andb
movsl
repz
ljmp
ret
pop
fldenv
sub
fistpl
lea
sarl
sub
mov
and
jmp
bound
hlt
jne
mov
out
xor
fs
xchg
jno
out
jo
lods
xorl
xlat
sub
mov
cmp
sbb
jp
data16
jno
sbb
ljmp
outsl
cmpsb
push
aas
arpl
insb
adc
xor
push
mov
pop
ds
pop
inc
aad
xlat
flds
mov
add
cwtl
xlat
cmp
scas
mov
adc
nop
loope
xor
in
outsb
inc
sbb
lds
push
cmp
das
aad
int
mov
ret
clc
pop
sbb
iret
pop
or
popa
inc
leave
insl
xchg
xor
das
sub
js
cs
xchg
dec
cmp
dec
mov
bound
mov
bnd
fidivrs
in
in
movb
mov
sarl
jo
cmc
pop
inc
mov
mov
push
dec
aad
outsb
cmpl
jne
xchg
mov
sbb
jne
inc
inc
xchg
sbb
sarl
adc
jb
xor
xchg
out
subl
daa
xchg
loop
sbb
xor
jecxz
pushf
xchg
nop
or
dec
pop
jecxz
sub
aad
ds
and
and
inc
jno
pop
pop
push
xor
daa
aad
xchg
je
lock
dec
push
test
scas
std
lahf
rorl
loop
jne
loop
inc
sbb
mov
fldl
xchg
jns
aaa
iret
lahf
insb
mov
cmp
cwtl
xchg
enter
xor
add
sub
sub
loope
bound
bound
mov
sarb
repnz
mov
fcmovnu
xor
sbb
and
rcl
inc
lret
inc
cmp
fwait
mov
sub
or
lock
push
js
xlat
pop
add
sbb
or
pop
out
dec
aam
in
popf
mov
xchg
out
xor
jo
iret
sub
ss
sti
mov
inc
icebp
mov
or
roll
add
dec
int
adc
movsb
jmp
cmp
in
imul
clc
pushw
cmc
mov
mov
jle
adc
rol
mov
jl
insb
inc
ret
mov
aas
xchg
ss
fnstsw
mov
adc
insl
pop
pop
fcompl
or
int3
mov
incb
mov
inc
mov
sub
mov
cli
mov
mov
cmp
mov
leave
pop
mov
push
sub
xchg
scas
imul
loop
rcll
pusha
xchg
es
lahf
push
aaa
ficoms
icebp
int
or
adc
and
lcall
hlt
add
adc
fstpt
andl
lret
das
rclb
jno
fmuls
test
sub
lea
dec
pop
dec
fcmovnbe
xchg
insb
mov
lea
mov
stos
std
insb
ret
mov
cli
pusha
sbb
xchg
sbb
shll
lds
dec
cmp
or
inc
bound
int3
insl
fdivl
out
cs
cltd
sbb
lret
push
cmp
into
leave
int3
sbb
sub
in
sbb
mov
dec
cmpsl
fsubl
into
push
lret
pop
cmp
subl
sti
sbb
cli
xor
icebp
lret
out
and
mov
mov
fisubrs
dec
aaa
daa
and
pop
adc
in
push
mov
hlt
repnz
mov
insl
mov
pusha
inc
outsl
pop
sbb
aad
sbb
and
dec
lcall
pop
nop
test
aad
push
cmc
jns
xlat
mov
or
cltd
mov
pop
cli
mov
cmpl
lret
cmp
fwait
xchg
adc
xchg
outsl
pop
pushf
cmp
adc
pop
enter
xchg
pop
bound
push
add
repnz
pop
out
imul
shlb
movsb
cmpsl
aam
or
aad
sbb
push
fldt
mov
movsl
mov
sub
mov
sub
jnp
sbb
push
cmp
mul
cltd
mov
enter
test
pop
jae
jo
in
ss
mov
cmp
sub
popf
mov
sbbl
mul
lahf
xchg
dec
mov
push
addr16
adc
dec
pop
mov
in
stos
movsb
jae
fwait
jl
in
dec
int
pop
jge
xchg
fistpl
loopne
pop
mov
lcall
mov
xlat
addl
mov
jmp
pop
and
push
pop
rcrl
out
sub
mov
shrb
mov
out
xor
xchg
cmp
pop
xor
idivb
imul
push
cmovg
xor
out
jbe
adc
sub
mov
cmp
cmpsl
add
adc
add
lret
jecxz
dec
ja
jae
pop
mov
xchg
mov
leave
test
out
xor
bsf
xor
jnp
cmpsb
add
movsb
pop
lret
push
jno
sbb
pop
les
and
sub
adc
fwait
in
cmp
jmp
daa
mov
mov
dec
add
dec
and
push
inc
icebp
in
inc
add
push
sub
negb
mov
out
orb
xor
fcompl
faddl
ljmp
in
mov
push
stos
andb
pop
lock
test
or
test
xchg
xchg
and
or
xorl
xchg
xor
hlt
pop
push
out
push
ja
push
es
mulb
mov
sub
out
cs
xchg
add
inc
mulb
xor
sahf
aam
pop
lret
cmp
adc
jo
push
loope
cmp
jnp
enter
test
sti
add
jo
sti
test
xchg
movsl
mov
push
testl
lds
stc
fadds
xor
loopne
scas
pop
pop
lcall
pop
std
popf
stos
addl
divb
in
lret
fcmovnu
inc
lock
mov
rolb
dec
std
fstpl
inc
push
cld
pop
cmp
scas
insb
xor
mov
jg
lods
cmp
popf
dec
jne
adc
push
inc
call
sub
push
xor
cmpl
call
cmp
imul
orb
mov
mov
inc
insb
or
stos
cwtl
testl
cltd
and
mov
call
adc
jns
mov
xor
clc
lret
pop
xor
mov
lea
pop
mov
mov
lret
mov
hlt
jne
jbe
cmp
mov
sbb
repz
pop
ret
add
xchg
sti
test
call
je
sti
inc
sti
psubd
lods
mov
gs
cmpxchg
jnp
adc
lea
and
fs
mov
lods
push
aam
rcrl
stos
idiv
insb
xchg
fstl
push
jne
jmp
bswap
xor
mov
shlb
pop
or
xor
add
mov
shlb
pusha
inc
mov
repnz
out
sub
addl
stos
sbbb
push
adc
daa
and
js
mov
pop
icebp
es
in
dec
ret
xlat
call
jbe
rcrl
xchg
adc
rcrb
ret
jle
sub
pop
in
push
insl
adc
jo
mov
push
add
xor
filds
loopne
arpl
sub
outsl
sub
adc
xorb
jno
repnz
xor
ret
and
push
jl
lahf
imul
xor
roll
mov
addr16
inc
push
sub
push
add
sbb
or
lret
jne
xor
push
dec
inc
mov
jnp
leave
outsl
idivb
jl
add
xchg
or
mov
or
xor
mov
enter
push
das
mull
fbstp
icebp
repnz
jnp
xchg
fsubl
mov
ds
std
out
daa
xchg
scas
call
jno
aad
adc
outsl
xor
pop
xor
mov
xorb
fwait
pop
jp
xor
hlt
pop
subb
jecxz
lcall
adc
popf
sub
shr
arpl
jns
mov
out
aad
pop
xor
mov
adc
dec
mull
mulb
cmpsb
pop
adcb
adc
into
xchg
sahf
and
inc
xor
mov
imull
lret
inc
jecxz
mov
xchg
jl
repnz
inc
out
subb
int3
dec
pop
sarb
adc
add
dec
mov
in
or
inc
xlat
xchg
or
lahf
mov
mov
push
nop
rcr
mov
imul
scas
jo
leave
add
insl
popa
cmp
in
inc
bound
dec
lock
mov
addb
dec
dec
push
lods
jecxz
dec
ret
in
cmp
rolb
aas
adc
insl
lahf
negb
push
xor
fmuls
add
dec
cmp
xor
xor
mov
push
push
inc
in
loope
jle
sbb
subb
and
repnz
mov
inc
mov
ja
cmpb
aad
mov
sub
xchg
xchg
sbb
mov
inc
out
mov
jbe
insb
xchg
dec
xor
inc
xchg
sbb
cmpsb
test
sbb
or
lcall
jg
sub
dec
dec
cs
mov
jmp
mov
jae
lock
xlat
xor
jae
int3
sbbb
loope
jae
mov
cli
mov
sbb
push
cs
fnstcw
test
mov
cmp
sbb
cmp
insb
adc
jl
stc
adc
pushf
mov
rcrb
fbld
mov
cwtl
or
mov
and
cmp
mov
imul
mov
push
xor
ret
xchg
mov
popa
mov
mov
inc
fcomp
repnz
inc
sahf
popf
stos
inc
xor
leave
mov
mov
imulb
shl
push
mov
pop
rcrl
fs
mov
jg
xchg
pop
push
mov
loopne
mov
cmpsb
cmp
dec
rcr
push
rcrb
enter
mov
xor
pop
jl
fisttpll
xor
push
lods
insb
mov
aas
jbe
movsl
xchg
int
jg
popl
lahf
pop
sti
xor
mov
bound
scas
mov
fisttpl
adc
lds
xchg
dec
fidivrl
enter
cmc
mov
sbb
sub
test
gs
mov
rcrb
inc
push
push
imul
add
mov
push
cmp
jno
iret
call
in
and
fistps
jg
push
stos
divb
push
mov
in
arpl
jae
jbe
aam
cmp
test
arpl
push
rorl
mov
call
leave
mov
fsubrl
lcall
mov
out
lret
shrl
jns
add
push
ss
mov
aad
mov
pop
mov
jne
andb
cmp
nop
lods
adc
mov
sbb
outsl
xchg
adc
sub
mov
into
into
lea
fdivl
mov
loopne
cmp
dec
inc
imul
xor
mov
iret
push
or
in
push
popf
fldl2e
stos
inc
ret
and
loope
xor
and
inc
inc
std
push
movsl
sub
and
mov
enter
imul
jle
add
cltd
or
sub
nop
cmp
push
push
fstl
xchg
out
jnp
add
clc
sub
test
stos
divb
pop
cmp
bound
je
and
ljmp
xor
xlat
adc
sbb
mov
xor
call
pop
lcall
std
or
bound
cltd
int3
cwtl
ds
orb
testb
repnz
sbb
push
scas
pop
mov
and
insl
repz
shlb
popf
mov
repnz
or
push
int3
inc
jo
push
mov
cltd
int
jle
push
mov
stc
loope
xchg
push
ljmp
mov
jae
fstpt
mov
aaa
movsl
jns
push
pop
testl
dec
cmp
data16
pushw
jg
test
mov
arpl
xchg
pop
hlt
adc
sub
sub
rol
jmp
cld
fs
test
push
les
loopne
xor
js
aam
xchg
xlat
dec
jns
push
lcall
sahf
test
mov
clc
mov
inc
xchg
scas
mov
nop
mov
mov
repz
pop
lret
add
jl
call
cmp
and
out
pop
xlat
cmp
mov
enter
je
xor
cmp
popa
jge
add
movsl
push
xchg
test
add
cmpsb
add
cmp
mov
shll
cmpsl
loope
outsb
inc
mov
jmp
mov
fisubl
dec
stos
cmp
cmp
dec
mov
gs
test
bound
insb
lods
mov
mov
js
pop
or
inc
aam
push
sbb
sbb
mov
jg
scas
sbb
mov
fcoms
loopne
add
mov
mov
mov
popf
and
out
rorl
xor
fldt
sub
inc
call
and
inc
or
mov
lock
js
or
push
push
push
dec
ja
sbb
xor
fs
cmpl
xor
xchg
cmp
mov
mov
sbb
les
loope
aad
popf
add
out
xlat
sub
xchg
les
fidivrl
mov
pushf
push
leave
cmpsb
outsb
ja
pop
hlt
int
pop
xor
and
mov
adc
sub
jae
arpl
cwtl
push
iret
sbb
mov
xor
repnz
lret
jae
pushf
adc
jne
imul
pop
pop
xor
gs
push
sub
and
dec
repnz
leave
xchg
xchg
pop
sti
xchg
out
and
jg
ret
jecxz
adc
dec
cmpl
loopne
cmp
mov
adc
aas
in
or
shl
fs
cmp
inc
jl
call
je
xchg
imul
pusha
jns
sbb
es
jle
mov
jbe
movb
outsb
mov
jge
adcb
inc
mov
dec
sub
loop
xchg
sahf
xchg
ja
xchg
cwtl
sbb
ljmp
out
mov
mov
lcall
loope
pop
call
rcrb
xchg
add
xchg
or
xchg
sub
adc
sub
and
loopne
jnp
jl
lret
push
int
sarb
sbb
aad
sbb
fs
xchg
add
dec
xchg
pop
fs
dec
xchg
ret
pop
arpl
icebp
pop
and
sbb
lahf
push
pop
push
fdivrl
lret
inc
mov
cltd
ss
repz
cmp
or
lret
enter
pop
out
lods
lods
adc
arpl
xchg
or
pop
adcb
xorb
cmp
mov
testl
mov
aad
add
and
xchg
adcl
shll
add
cli
inc
das
rorl
and
and
xor
ds
cs
mov
icebp
pop
xchg
out
sub
pop
add
loop
scas
popf
inc
push
bound
xchg
push
enter
xorl
out
pop
mov
push
jl
jne
fwait
fwait
xchg
push
fwait
add
pop
jmp
push
dec
loope
popf
insb
icebp
mov
pop
mov
sahf
or
decl
idivb
mov
popf
mov
enter
pop
sar
iret
jmp
loope
repz
cwtl
pop
movsb
int3
inc
lcallw
inc
outsb
out
rorb
push
inc
xchg
jns
xchg
push
push
dec
stos
in
je
mov
xchg
mov
ret
adc
cmpsb
xchg
sub
das
cli
jne
mov
imul
fstpl
movsl
add
jmp
dec
sbb
push
inc
pop
rol
sub
mov
or
lock
subl
push
in
xchg
push
add
jp
scas
cmpsl
jne
dec
pop
fstl
push
jp
outsl
rcrl
repnz
dec
lret
mov
int
or
inc
push
sub
pop
ret
test
stc
add
mov
cmp
sahf
shll
mov
stos
fwait
sahf
int3
jg
push
cmp
sbb
xchg
mov
mov
xor
fisubs
push
adc
sbb
ja
cmp
add
paddsb
inc
insb
push
push
or
aam
mov
test
and
mov
xor
cmp
ret
fdivrs
pop
xchg
lds
push
cmp
jl
fildll
sub
pop
rcrl
dec
push
das
mov
loope
sbb
test
imul
loop
inc
mov
aas
das
jae
dec
and
pcmpeqw
push
xchg
sbb
aad
adc
push
pop
test
mov
add
xor
fcoms
add
out
add
movsb
sbb
es
jle
xchg
push
pushf
clc
xchg
into
cmp
lahf
ficompl
xor
nop
push
pop
xchg
les
test
aad
popf
push
int3
cmc
addr16
xor
jns
mov
fisttpll
pusha
fcomp
xor
insl
jbe
fs
testl
outsb
scas
push
test
xchg
push
shrb
and
jp
and
inc
adc
mov
pop
adc
sub
jae
das
adc
es
inc
bound
adc
enter
push
cmpsb
ret
mov
adc
mov
and
cmp
test
pop
cmp
pop
mov
pop
repnz
fsub
movsl
mov
dec
lods
xor
adc
jne
test
xor
fs
fcoms
sub
fadds
jg
mov
xor
rcll
loop
inc
lcall
popa
in
pop
mov
aad
aam
outsl
enter
inc
inc
mov
dec
dec
imul
add
neg
mov
rcll
and
inc
mov
mov
cld
idivl
dec
cld
xlat
stc
mov
pushf
adc
sub
loope
aaa
mov
adc
aaa
mov
ja
dec
jp
clc
fadd
push
mov
adc
mov
ret
push
sub
push
mov
subb
mov
xor
jecxz
mov
lds
scas
adc
mov
sbb
push
in
fisttpl
aad
cmp
fcompl
dec
pop
dec
jl
push
outsb
sub
jmp
jno
push
add
inc
cmp
jae
or
jge
movsl
ss
pop
pop
daa
outsb
mov
inc
and
dec
loope
lret
mov
add
and
sub
mov
mov
xor
pop
mov
pop
xor
push
jb
movsb
mov
dec
scas
or
mov
xor
loopne
push
lret
adc
xchg
and
jb
adc
mov
push
pop
mov
dec
sarl
add
loope
dec
loop
xor
pcmpgtw
push
insl
dec
xchg
pushf
sub
js
dec
hlt
es
jg
hlt
mov
lahf
sbb
sub
fdiv
push
mov
adc
aas
push
out
or
lret
sarb
xchg
fadds
xchg
mov
dec
pop
fwait
pop
sub
insl
stc
jecxz
sbb
xor
dec
sbb
mov
inc
pop
sbb
jbe
dec
into
arpl
idivl
sub
cmp
pop
sub
stos
in
in
aas
inc
adcb
dec
mull
or
cmc
pop
or
dec
int
sbb
and
test
mov
mov
rorb
in
pop
data16
or
cltd
jmp
xchg
sti
dec
jnp
jnp
add
lock
scas
xchg
pop
fisttpll
sub
jmp
jns
aam
icebp
cwtl
addb
iret
cmp
mov
push
aas
lods
rcll
xchg
xor
or
sub
enter
lahf
sbb
mov
xchg
subb
and
cwtl
cmpl
xchg
push
jno
jecxz
adc
xor
pop
ds
mov
fsubr
cs
add
addr16
push
scas
icebp
jae
pop
dec
pop
jecxz
sub
push
pop
jl
xchg
push
add
mov
or
mov
and
xchg
xchg
push
mov
daa
leave
aad
mov
clc
sbb
pop
pop
psubd
movsb
lods
mov
faddl
xchg
inc
mov
mov
ffree
cmp
push
mov
mov
repnz
push
push
xchg
shlb
and
mov
jno
or
in
negl
push
mov
mov
ss
sub
mov
push
mov
ja
stc
lahf
call
jbe
xlat
leave
dec
push
outsb
movsb
int
sub
movb
es
shlb
clc
aam
in
cmc
daa
cmpsb
mov
lods
sub
daa
or
or
mov
or
push
xor
xchg
les
aaa
push
fsubrl
repz
loop
das
ljmp
inc
push
sbb
add
jae
mov
jnp
arpl
mov
and
in
mov
pop
xchg
in
cmp
lahf
xchg
xchg
xor
lret
push
mov
hlt
lcall
pushl
xchg
aad
movsl
scas
ss
test
mov
ds
dec
dec
mulb
int3
cmc
ljmp
sbbb
and
loopne
jl
cwtl
dec
sbb
lods
fidivl
in
xor
xchg
jmp
mov
into
dec
add
test
fwait
sbbl
stc
cld
loop,pt
clc
cltd
jo
into
imul
xlat
dec
sub
lds
adc
jae
dec
in
daa
test
mov
xor
popf
and
scas
int3
xchg
les
add
adc
push
cli
mov
lock
adc
das
or
adc
flds
insb
pop
loopne
loop
fs
adc
fsubl
push
jle
xorl
int3
loop
sarb
pop
mov
faddl
lds
mov
popl
int3
or
fidivl
shl
inc
outsb
daa
test
into
fstps
adc
sbb
lahf
das
xor
in
mov
sahf
adcb
test
adc
rolb
and
fsubs
xor
lds
scas
imul
outsl
lea
sub
fst
xor
movsb
aam
add
je
repnz
mov
iret
repz
jp
inc
cmp
subb
imul
aas
dec
push
or
mov
and
decb
pop
and
jmp
mov
cmpsl
pusha
push
clc
lea
aas
pop
pop
mov
pop
leave
inc
xor
dec
jne
fsubs
lods
hlt
lret
add
cmp
sub
mov
lret
cwtl
sti
mov
das
jp
leave
pop
mov
sbbb
mov
fcoml
jmp
out
push
sbb
dec
ljmp
loop
push
jmp
in
jne
mov
hlt
mov
cmp
mov
leave
sbb
sub
mov
or
push
leave
nop
pop
outsl
cmp
mov
cld
or
mov
cmc
cmp
push
in
negl
xchg
lods
andl
dec
pop
xor
addb
ret
lock
push
sarl
pusha
xor
dec
aaa
ljmp
cli
mov
cmc
sahf
leave
and
pop
or
loop
clc
and
add
leave
into
and
mov
cmp
push
icebp
test
or
scas
imul
mov
fistl
mov
dec
mov
mov
xchg
jbe
nop
fdivrs
shlb
jbe
cs
std
push
push
jecxz
orl
in
negb
imul
xchg
negl
gs
negb
dec
pop
int
cmp
into
jae
repnz
mov
ja
sub
mov
leave
add
push
mov
ficompl
jle
sub
xchg
fstpt
pop
repnz
jns
xor
clc
rolb
imul
insb
xor
xchg
repnz
sahf
int
aas
ljmp
pushf
movsb
xor
outsl
repz
inc
or
loop
jle
xor
hlt
lret
out
and
in
pop
xchg
bound
jae
cmp
jl
scas
adc
xchg
and
loop
sbb
pop
sub
xchg
addl
fwait
scas
cmovnp
add
cld
adc
bound
sub
xchg
cmc
fidivrs
lahf
mov
lods
rep
je
loop
mov
std
mov
iret
rorl
insl
stc
dec
icebp
xchg
icebp
mov
lret
sti
fs
lock
scas
sarl
test
enter
or
sub
outsl
add
es
xchg
inc
cltd
iret
je
stos
shrb
jns
push
adc
inc
mov
xchg
iret
lods
nop
jecxz
ret
mov
jmp
subl
sbb
inc
aas
scas
inc
loope
jno
pop
sbb
arpl
cwtl
daa
fisubrl
dec
nop
insb
shll
sbbb
adc
fidivrs
out
mov
aam
stos
pop
or
pusha
fdivl
xor
insl
arpl
jecxz
aas
inc
in
gs
shlb
scas
jl
inc
and
into
push
gs
popl
jnp
std
je
fwait
push
popl
pop
divl
mov
lods
cmpb
sbb
loope
adc
xchg
dec
push
popa
mov
shll
lret
imul
test
js
je
xor
adc
cs
mov
ret
in
fldt
pusha
and
push
daa
add
and
shrb
adc
sbbl
stos
mov
push
inc
aas
inc
or
inc
push
lea
jb
cwtl
or
sub
popf
les
dec
mov
pop
xor
cmc
push
in
xchg
js
pop
jae
xor
jecxz
inc
cmp
or
in
mov
clc
shrb
sbb
dec
or
jo
lret
insl
push
out
int3
arpl
mov
in
lahf
xor
cli
pop
xlat
mov
inc
ds
fs
mov
pushf
mov
dec
inc
xchg
jne
mov
stos
add
pop
or
xchg
inc
call
faddl
mov
cltd
push
fcomps
inc
js
pop
pushf
dec
mov
cmp
mov
enter
ljmp
gs
adc
enter
dec
pusha
js
addr16
mov
jle
dec
and
dec
adcb
mov
push
pop
fisttpl
mov
inc
rcl
sbb
out
cmp
xor
jo
xor
std
je
or
mov
push
lcall
in
dec
add
outsb
dec
scas
jne
xchg
xor
add
dec
sti
lret
in
mov
out
add
mov
das
out
int3
mov
fidivl
movsl
scas
mov
test
loopne
adc
pop
jns
cmc
pop
mov
js
dec
arpl
pop
inc
adc
clc
mov
cmc
lods
and
lret
shrb
jns
test
mov
movsb
pop
stos
adc
lahf
sahf
into
mov
jge
sbb
dec
jmp
rorb
inc
cmp
into
sbb
sahf
sub
fadd
xchg
adc
rol
push
dec
or
std
popa
adc
add
cmp
mov
mov
pop
mov
scas
or
divb
xchg
iret
shr
mov
add
ret
xchg
xor
cld
sub
mov
mov
xchg
push
xchg
push
mov
scas
xor
mov
enter
dec
rcrb
mov
inc
xchg
aaa
ljmp
mov
aas
xor
daa
lahf
loopne
pusha
push
sbb
scas
jmp
ljmp
dec
cs
lcall
enter
fcompl
cltd
xchg
lock
lods
cwtl
adc
in
xor
mov
ret
xor
xchg
jle
xchg
adc
mov
jae
loop
stc
out
mov
icebp
ror
jl
xchg
push
dec
sub
or
and
popa
mov
arpl
mov
nop
inc
das
stos
sub
mov
outsb
lds
xchg
imul
lods
xchg
loop
xchg
shrl
nop
insl
imulb
push
jae
push
add
pusha
mov
arpl
jo
out
cmp
dec
call
test
inc
mov
loope
sub
mov
fldl
adc
mov
pop
xor
sbb
xor
inc
stc
rcll
xchg
pop
inc
dec
jb,pt
pop
push
leave
inc
lds
out
movsl
nop
pop
adc
leave
adc
lret
adc
mov
mov
mov
adc
rorb
mov
in
fwait
xchg
mov
push
push
int3
sbb
inc
subl
jmp
lds
sub
in
jo
xor
int
push
das
in
add
iret
mov
ret
mov
cmp
inc
inc
mov
lds
call
adc
cmpxchg
fs
mov
hlt
fwait
add
push
stos
cli
hlt
lods
pop
xor
mov
fsubl
xchg
pop
sub
inc
adc
popa
add
xchg
fiadds
push
out
xchg
out
sub
jmp
cmp
xchg
xor
mov
test
cmp
sbb
mov
mov
test
mov
stc
pop
and
js
adc
lret
in
adc
div
inc
out
xchg
sub
imul
push
or
pop
cmp
lret
ljmp
cmpb
sbb
clc
fnstsw
pushf
fdivrs
cld
cmp
fs
fsubl
xor
xchg
out
les
in
repnz
pusha
xor
cmp
xchg
inc
in
xor
pop
rorb
dec
les
pop
cwtl
and
mov
sub
lahf
test
jmp
in
mov
subl
frstor
mov
test
into
cltd
push
inc
popa
sub
mov
outsl
cmc
cmp
push
imulb
pop
mov
mov
jg
rolb
lcall
idivl
jo
and
nop
xchg
dec
adc
push
out
scas
test
fldenv
add
mov
sahf
movsl
loop
sbb
add
add
inc
push
mov
adc
adc
push
imul
or
insb
pushf
xchg
cmp
loope
fildl
or
push
fmuls
mov
les
xor
iret
loopne
movsl
int
rcrl
imul
lcall
cmp
ss
fiaddl
push
sahf
in
mov
sub
fbstp
jecxz
pop
xchg
lcall
mov
stc
lcall
movsl
mov
fwait
ss
cmp
mov
mov
imul
mov
jns
scas
xchg
dec
add
in
jb
and
dec
dec
push
jb
mov
test
mov
cmp
stc
scas
pop
xor
cmpsb
int3
incl
sbb
test
push
int
dec
cs
dec
dec
push
pop
into
stos
aas
cmp
push
out
outsb
push
xor
lea
out
insl
mov
out
fsubr
or
xchg
test
jl
push
inc
out
fcomi
lock
movsl
test
or
cmp
fmulp
outsb
nop
outsl
scas
or
mov
fcmove
je
or
inc
frstor
inc
and
ret
mov
repnz
adcb
cld
cs
inc
jno
aad
mov
xchg
sbb
lcall
adc
dec
xchg
add
mov
pop
jp
imul
test
inc
sbb
popf
sti
in
or
adc
aas
xchg
lds
aaa
ja
cs
jmp
lods
cmp
into
jmp
sahf
lret
lret
sti
push
add
nop
std
mov
leave
pop
dec
pushf
dec
sub
pop
add
shll
std
pop
imul
test
cmp
jecxz
insb
pop
push
and
push
add
repnz
mov
lods
and
fcomi
fcoml
lods
rorb
cmc
test
out
adc
xor
push
ljmp
dec
mov
or
jo
push
mov
jbe
mov
mov
es
and
inc
mov
push
lret
out
scas
loope
xlat
lahf
sub
push
ret
rorb
aas
dec
jmp
loopne
dec
mov
ret
jbe
jecxz
dec
enter
std
or
sub
push
mov
les
ror
jmp
push
or
cmp
push
jp
es
scas
push
sub
ds
jb
clc
repz
cs
mov
jp
add
mov
or
shlb
mov
cmpsb
dec
adc
mov
loop
xchg
jl
jns
sbb
scas
pop
popa
push
mov
inc
jne
adc
and
pushf
xor
jnp
push
lock
and
inc
inc
xchg
out
psubusb
lahf
test
mov
mov
je
push
dec
or
xor
das
mov
pop
movsb
out
cli
lahf
cmp
sbb
xchg
jl
aaa
sub
add
mov
inc
int
dec
or
enter
out
das
adc
jge
lret
icebp
repz
adc
mov
call
adc
into
adc
in
fsubr
ljmp
mov
daa
xchg
adc
xchg
xchg
push
sub
std
movsb
std
dec
rol
sahf
mov
outsl
mov
negl
mov
cvtps2pi
bound
sub
pop
test
mov
xlat
stos
ret
pop
sti
sbb
sti
mov
sbb
mov
testb
push
jecxz
pop
push
test
cmove
ljmp
cmpl
test
add
subl
lds
fisttps
mov
sti
sub
test
and
mov
xor
loop
cmp
cmp
xchg
outsb
cmp
cmp
or
pop
out
or
test
jbe
xchg
push
rolb
xchg
jb
add
mov
fwait
jb
test
lods
nop
popl
rorb
xchg
adc
pop
fisttpl
sbb
mov
lcall
fisttps
sbb
mov
adc
inc
fildll
sub
arpl
xor
ss
xor
dec
xchg
pop
cwtl
pushf
outsl
imul
gs
arpl
je
jae
inc
mov
js
sbb
sbb
fs
xor
sbb
xor
mov
test
add
and
mov
cli
jbe
inc
xor
and
scas
mov
sub
out
test
mov
sbb
or
lea
dec
pop
mov
dec
add
sub
add
lcall
in
pop
fistl
dec
pusha
mov
inc
jp
out
sub
xchg
xchg
xlat
out
adc
cmpsl
sbb
sub
sbb
pop
insl
and
mov
mov
and
and
pop
add
dec
jge
pop
fdivrp
fneni(8087
call
pop
aam
jo
xchg
test
ret
xor
jne
pushw
inc
inc
pop
pop
fcmovu
pop
arpl
push
pop
bnd
or
mov
mov
pop
hlt
aaa
jle
jge
es
push
popf
faddl
divb
dec
leave
aaa
jbe
xor
jnp
cmp
mov
int3
incb
aas
mov
xchg
mov
test
stc
cmpsb
rcl
push
stc
sbb
adc
dec
cld
jno
loope
ja
jo
mov
jne
mov
sub
sub
pop
jbe
adc
xor
fadds
aam
xor
bswap
add
fmuls
loop
push
das
xor
stos
xor
adc
call
mov
push
data16
cmp
cs
mov
loope
inc
je
push
pop
call
int3
stos
push
push
lcall
lret
rcl
xor
jo
sbb
out
jnp
aad
mov
xor
lahf
popf
cmpb
lods
pop
or
adc
ss
xorl
cld
inc
inc
inc
bnd
xchg
and
pop
add
sub
xchg
sbb
iret
jae
xchg
imul
lcall
or
ret
pushf
push
cmc
xchg
jmp
jg
push
push
adc
fcomip
xchg
icebp
test
jl
push
adc
xchg
out
mov
fisubrs
subl
add
pop
push
arpl
inc
mov
sahf
xchg
inc
adc
or
mov
pusha
les
into
mov
and
jne
mov
movsbl
fadd
add
sbb
sti
movsl
idivb
cli
insb
xor
or
lret
fdivrp
xor
lret
ffreep
lock
daa
push
aad
and
xor
mov
dec
cli
out
mov
push
addr16
ja
and
repnz
imul
sbb
leave
filds
insl
pop
mov
mov
enter
pop
icebp
adc
mov
xchg
int
lret
roll
outsb
aam
testb
subb
fisttpl
jmp
xor
lcall
lret
mov
cmp
sbb
pop
hlt
iret
jmp
xor
shll
pop
sbb
lcall
repz
icebp
pop
imul
dec
push
jg
bound
les
xchg
push
or
ror
sbb
sbb
lods
daa
dec
outsl
enter
test
icebp
fnstsw
mov
stc
filds
adc
iret
jo
arpl
sub
das
mov
mov
cmp
arpl
cltd
push
xchg
call
and
lret
jo
and
xchg
mov
xchg
dec
and
aam
adc
adc
push
imul
int
pop
ss
push
lock
mov
xor
cmp
movsb
pop
sbb
xchg
pusha
sub
mov
dec
push
mov
data16
sub
add
enter
mov
cmpsl
cmpsb
pop
ja
nop
sub
sub
add
inc
or
jnp
xor
adc
aad
outsl
add
insb
jmp
pop
or
push
push
loop
in
notb
pushf
push
mov
pop
or
xchg
sub
lret
pop
ret
lahf
xchg
je
pop
pop
mov
pop
loop
jae
cmp
pop
cwtl
fsubrl
mov
test
cmpsl
mov
push
nop
mov
xor
repnz
push
mov
lret
xchg
ret
dec
jl
imul
mov
pusha
mov
popf
sub
out
xor
mov
scas
xlat
call
and
mov
repz
punpckhwd
ss
orl
push
sbb
push
ret
sub
pop
int3
xchg
or
lods
or
cld
into
jnp
push
cmpsl
data16
cmp
in
jbe
out
pop
push
adc
jmp
fstl
jno
fisubs
js
sub
pop
pop
and
lods
addb
add
cltd
lea
lret
loope
mov
xchg
or
pushf
test
push
shrl
jl
or
pop
int3
fisubl
cmpl
repnz
mov
adc
popf
insb
ret
pushf
int
inc
jl
mov
rorl
mov
adc
leave
fistps
loope
aaa
push
lock
movsb
test
or
popf
adc
cmpl
ss
sbb
push
jl
xorb
jg
mov
repz
and
mov
daa
or
mov
test
cmpsb
mov
stos
mov
mov
into
nopl
inc
dec
mov
cmp
xor
lock
and
push
shl
ror
fldenv
paddusb
jae
test
std
or
mov
jno
inc
jo
fnstsw
jns
xchg
testl
leave
imul
outsl
popa
fsts
sub
es
jo
lods
add
andb
mov
cltd
dec
enter
and
mov
jle
pushf
mov
sub
adc
into
push
test
and
movsl
arpl
in
rcrl
pop
and
and
out
sub
add
cmp
inc
adc
xchg
mov
push
cmp
sahf
cmp
je
movl
jbe
add
hlt
sbbb
test
push
aam
jle
lods
xor
cli
scas
cmpsb
sbbb
gs
nop
push
lods
add
repz
dec
jbe
mov
jo
sub
cltd
je
mov
jae
push
or
mov
xlat
push
push
notb
cmc
fcoml
jmp
movsl
push
or
out
inc
mov
mov
mov
andl
push
insl
cmc
aas
test
sbb
popf
fcomps
fsqrt
popf
or
dec
and
movsb
aas
inc
pop
std
jb
std
fimull
push
cmp
pop
out
in
idivl
jmp
ror
xor
cli
jae
xor
movsl
in
mov
int3
repnz
fcmovbe
outsb
mov
adc
xchg
adc
stc
inc
cs
sbb
jg
push
mov
mov
lds
pop
addr16
out
cmp
out
cli
jmp
pop
dec
xor
push
add
cmp
scas
push
popf
into
sub
outsl
mov
out
lcall
sub
xchg
cltd
lds
xor
jecxz
daa
sarl
jmp
mov
jo
call
mov
add
mov
scas
push
test
in
ret
mov
roll
mov
mov
aam
mov
imul
mov
les
in
or
test
mov
xor
sbb
xchg
dec
cmp
out
popf
in
or
stos
lock
jae
lods
mov
pop
and
and
mov
dec
int
rol
jae
fldenv
negl
xchg
sub
sub
shlb
cmp
xor
ss
mov
adc
lods
jne
or
lret
xchg
push
mov
data16
xchg
mov
inc
add
sbb
loop
imul
xchg
and
mov
sbb
inc
lret
lret
sbb
addr16
push
jne
in
mov
pushw
iret
mov
scas
xor
inc
adc
repnz
adc
test
jmp
xor
adc
lcall
cs
inc
popf
xchg
lret
jg
cmpsl
add
jge
pop
dec
add
add
les
out
js
mov
or
fcomps
outsl
popf
mov
in
adc
pop
jne
pop
dec
pop
mov
mov
mov
mov
aad
je
adc
push
sub
and
mov
imul
sub
das
push
insl
and
inc
push
aas
push
or
dec
cmovp
adcb
add
pop
stc
xchg
sub
lret
inc
inc
adc
fwait
ret
add
inc
jno
cmp
mov
fwait
adc
shll
jnp
xlat
pop
in
mov
iret
push
mov
dec
dec
cli
test
jmp
inc
cmpsl
mov
out
je
pop
loop
mov
xchg
jp
add
mov
xor
xchg
push
push
pop
mov
jno
mov
cmc
call
lock
and
out
push
out
imull
cltd
cmp
push
cmp
add
aad
divb
jnp
push
jno
or
stos
mov
lods
jnp
ljmp
cltd
arpl
les
stos
inc
xchg
cmp
and
sub
xchg
mov
pop
fisubrs
jae
out
cwtl
dec
xor
sub
enter
lret
dec
stos
std
xor
sub
fadds
das
and
cltd
mov
pop
mov
pushl
imul
add
arpl
aad
inc
mov
cld
jge
movntq
push
inc
mov
push
add
dec
fidivrs
enter
icebp
adc
ja
pop
push
cld
sbb
push
ds
jmp
or
jo
fdiv
xor
and
xchg
out
jle
bound
cmc
mov
loope
mov
inc
xor
inc
dec
in
inc
xchg
in
mov
jbe
data16
scas
test
into
or
scas
test
jmp
mov
mov
jb
jg
sbbl
enter
test
push
sbb
outsl
jne
or
sbb
jb
test
sbb
std
fimull
cmp
mov
xchg
mov
clc
cmp
js
shl
sub
mov
push
cmp
inc
mov
xor
pop
cld
int3
cld
pushf
adc
lock
test
stc
inc
mov
aaa
cmc
arpl
addr16
sbb
pop
int
mov
sub
mov
rclb
pop
or
icebp
shrl
jne
lret
daa
push
adc
stos
iret
mov
cmp
jg
daa
ljmp
mov
inc
call
mov
adc
hlt
adc
loope
leave
outsl
mulb
sbb
cli
imul
adc
cmp
lock
jge
xlat
pushf
shlb
lret
pushf
mov
daa
or
mov
loopne
scas
pushf
sbb
in
or
xlat
sbb
popa
sub
imul
data16
movsl
mov
mov
sbb
mov
clc
sbb
fld
ljmp
popa
push
jne
negl
clc
das
scas
mov
lods
cmc
fwait
jae
lods
out
and
push
fnsave
pop
mov
sub
stos
cmp
dec
jbe
negl
jecxz
add
mov
out
cmp
add
std
sub
sbb
aad
xlat
and
inc
cmp
les
cmp
inc
shrb
xchg
sbb
in
roll
pop
ljmp
xor
stos
cli
out
mov
sub
fsubrs
pop
inc
fidivrs
dec
jns
cmpsb
add
icebp
xchg
sub
sahf
add
mov
nop
in
and
scas
and
int
movsb
mov
sbb
pushf
iret
pop
sbb
add
mov
add
dec
test
nop
add
pushf
out
aaa
push
inc
movsb
in
inc
and
daa
pop
idivl
out
mov
mov
pop
fstps
and
xor
mov
sub
push
add
aaa
sbb
mov
cmc
lcall
popl
addps
mov
enter
test
mov
pop
mov
idivb
fildl
addl
jl
push
js
ret
pop
outsb
out
int3
in
pop
dec
int3
testl
cmpsl
fbld
sbbb
enter
inc
xchg
pop
mov
lds
arpl
xchg
xor
addr16
mov
jp
leave
lret
mov
sbb
pextrw
add
xor
out
enter
lods
pop
cmc
fisttps
jb
xchg
mov
and
cmp
xor
sbb
add
lea
mov
dec
inc
pop
mov
push
push
add
int
dec
sbb
dec
out
pop
jbe
out
sbbb
shll
fistpll
sbb
push
push
lea
and
aam
add
cmp
pop
fisubl
cmp
fnstcw
cmp
mov
pop
sub
mov
xchg
popf
ja
inc
pop
jae
insb
push
jl
xchg
mov
scas
jne
rclb
xchg
xchg
mov
ja
bswap
lods
pusha
inc
push
imul
ss
sub
incb
outsb
push
test
rorl
popf
int
jmp
lcall
and
enter
adc
mov
pop
jno
sahf
add
repnz
mov
jns
das
ljmp
outsb
or
leave
pop
lock
mov
mov
enter
je
xor
adc
arpl
sbb
cmp
je
shll
jle
test
sub
jmp
xchg
ficompl
loope
jnp
pop
xchg
push
mov
cli
xchg
push
mov
pop
lock
mov
inc
or
test
and
push
fisubl
xor
inc
sub
hlt
jo
mov
pop
push
or
test
push
sub
test
push
jp
cmpsl
movsl
call
xchg
outsl
or
cs
decb
jo
stc
cmp
dec
outsl
stc
lret
sahf
test
inc
ret
sub
bound
jecxz
or
cmc
call
pop
xchg
shll
adc
add
cmp
mov
das
test
out
xchg
fs
enter
sub
lret
jg,pn
push
mov
cmp
add
jnp
add
pop
push
fcomip
out
dec
jo
jne
enter
sbb
call
jbe
out
push
out
inc
test
movsb
outsb
movsl
xor
cmp
in
nop
add
xchg
lods
mov
or
or
or
movsl
adc
ss
push
ror
mov
add
scas
fisttpll
xorb
bound
mov
mov
sub
push
jbe
mov
testl
aaa
jns
cmp
icebp
pop
push
int
iret
adc
or
add
push
dec
cmp
mov
bound
shl
movsb
pop
add
rep
aas
flds
repz
mov
inc
pop
dec
add
jne
sub
xchg
push
dec
xchg
mov
aaa
cmp
mov
inc
fsubl
sbb
cmp
xor
pop
mov
insb
jns
shll
mov
xor
sub
insb
cmp
and
jae
cmp
mov
xchg
loop
ret
sub
jae
iret
mov
adc
imul
shlb
push
jne
push
fsubr
cmp
rorb
stc
bound
push
fs
inc
add
push
adc
cli
call
xchg
add
les
rcl
adc
mov
insl
mov
and
stos
jno
jb
xor
xor
imulb
faddl
xchg
xor
out
mov
xchg
pop
insb
fstp
hlt
mov
test
add
fstps
xchg
push
add
add
inc
cwtl
pushf
ss
adc
mov
adc
jmp
jmp
inc
testb
ret
je
repnz
dec
imul
pop
nop
or
ljmp
mov
lret
scas
ret
inc
cmovbe
mov
inc
xor
xchg
fwait
ret
les
lds
ss
add
repnz
inc
rcl
scas
jmp
stos
cltd
lock
sahf
fsubrl
sub
jb
pusha
lcall
imul
stc
push
sbb
je
iret
xchg
lcall
out
jo
aaa
enter
mov
fstpl
cmp
mov
add
cmpl
and
push
dec
adc
xor
pop
mov
mov
mov
xchg
pushf
movsl
loope
jno
jnp
daa
enter
loopne
jne
and
pop
mov
out
push
pop
add
call
fs
ss
into
in
jmp
outsb
js
lret
xchg
mov
mov
dec
push
xlat
call
icebp
test
mov
scas
mov
push
mov
or
xchg
stos
mov
outsb
push
loope
gs
sub
dec
cmpsb
sahf
cmp
push
mov
lock
xor
pop
fbstp
cmp
jne
cmp
dec
sbb
sub
dec
xchg
fistpl
cmpsb
fsts
out
push
jg
ficomps
loopne
sub
lods
sub
neg
xor
dec
xchg
xchg
push
lds
pop
cmpsl
push
push
imul
jo
into
jnp
xor
push
mov
aas
stos
shlb
insl
pop
test
jno
sub
mov
cmp
jle
jo
int
mov
add
jg
es
ret
pop
in
and
loopne
jl
xor
cmc
sbb
inc
cwtl
xor
mov
xor
mov
inc
sbb
pop
std
pop
mov
scas
adc
sahf
ret
sub
mov
inc
push
push
ja
repz
lcall
sub
stc
mov
rcr
in
xchg
adc
je
sbb
push
fadd
cmpsl
ret
inc
sub
adc
dec
jl
and
xchg
daa
cmpsl
cmovg
js
in
sbb
sbb
or
jmp
sahf
xchg
jnp
shlb
and
xor
pop
push
out
jo
sti
test
int3
cltd
into
ds
stos
imulb
inc
dec
or
mov
and
cmp
rorb
hlt
fdivl
movsb
sahf
shrd
cld
mov
cmc
rolb
inc
fdivrl
and
pusha
jns
int3
pop
dec
ret
cmpsb
cmp
mov
cltd
sub
push
mov
outsl
jae
cmp
nop
pop
shrb
icebp
push
int
xlat
ja
cs
call
lret
push
mov
dec
cmp
into
mov
pusha
in
jno
in
test
push
lahf
mov
and
loopne
jmp
mov
push
mov
add
and
pop
data16
lahf
or
adc
gs
imul
mov
inc
jne
cmp
addb
fdivrp
ja
insl
cmp
xchg
push
in
int3
sub
in
push
jnp
mov
cmp
imul
dec
faddl
add
jp
aam
std
mov
xor
and
test
push
in
iret
cmpsb
gs
mov
sti
lcall
jno
hlt
iret
fs
cmp
scas
imul
jp
or
jmp
lcall
insl
test
xchg
jne
push
sbb
pop
cld
call
jge
and
jno
scas
jns
outsb
mov
push
outsb
mov
xchg
mov
inc
push
add
fisubrl
cmp
fucomip
mov
and
mov
cmp
cmp
pop
push
push
test
mov
jbe
mov
cmp
mov
xor
mov
lds
int
in
or
jne
or
xor
pop
aas
push
mov
movsl
data16
out
lret
xchg
pop
lcall
mov
push
popf
push
pop
adc
cmp
mov
jmp
lods
outsb
push
ss
mov
sub
jg
lds
jbe
xchg
and
or
add
popf
cmpsb
loopne
sbb
push
sub
sub
and
xlat
sub
addl
js
movq
cmp
shlb
lock
repz
add
lds
push
popf
sahf
sub
outsl
das
inc
and
pop
ret
scas
inc
adc
test
push
push
test
stos
push
ja
out
hlt
int
xchg
mov
addr16
rcrl
aas
sbb
jne
outsl
js
sub
adc
std
inc
shll
call
jp
and
les
enter
mov
bound
sbb
fmull
cmp
push
mov
or
jmp
repnz
stos
int3
aad
test
push
xor
insl
arpl
push
lret
popf
mov
lods
push
or
push
sub
ficompl
mov
pop
dec
xchg
jge
js
adc
sbb
mov
jmp
push
adc
jo
dec
mov
push
jb
out
stos
xor
test
pop
xchg
fnstcw
outsl
cmp
dec
scas
dec
movsb
aaa
int3
xor
cmp
dec
and
mov
push
push
xchg
adc
mov
inc
mov
imul
mov
iret
mov
pop
stos
add
cmp
jmp
push
push
bound
sbb
daa
test
repnz
loopne
es
ljmp
mov
mov
push
cltd
jne
inc
je
mov
fisubl
xchg
mov
sarb
jge
and
mov
lahf
cmpsb
or
scas
test
cli
jnp
pushf
ljmp
call
movsb
mov
mov
mov
stos
test
aaa
push
clc
sbb
nop
stc
sbb
mov
cmp
ja
mov
dec
add
pusha
pop
mov
and
xor
call
out
mov
mov
inc
lods
push
jnp
ret
dec
dec
push
xchg
cwtl
js
in
lds
pop
test
jmp
das
sub
and
inc
stos
cmc
lret
mov
mov
mov
sub
stc
pop
and
add
ret
subb
inc
pop
in
movb
insb
mov
cmpsb
push
lret
jae
or
and
xor
lods
fildl
add
or
stos
xchg
xor
xlat
mov
inc
xchg
add
adc
loopne
jg
add
push
cli
fstpt
push
inc
ljmp
ja
fildl
out
push
test
dec
lods
mov
pop
jae
pop
or
mov
aad
adc
pop
clc
push
shr
cmpsb
push
mov
std
adc
es
mov
inc
xchg
outsb
lahf
imul
mov
int
xchg
ds
push
dec
sub
dec
and
aad
les
stos
dec
push
add
arpl
adc
mov
push
frstor
scas
mov
or
xlat
pop
cld
sub
fisubl
sbbl
mov
cmc
cmc
push
jmp
or
mov
cmp
lock
sti
sti
fsin
inc
adc
adc
dec
pop
loope
jl
push
xchg
xor
ret
cmpb
push
add
mov
ret
mov
out
stos
subb
fdivs
js
xchg
lds
jbe
divl
repnz
mov
jl
cs
mov
mov
and
mov
hlt
jecxz
and
add
inc
inc
mov
negb
mov
jb
fsub
sbb
push
mov
sbb
mov
cmp
pop
xchg
icebp
jb
stos
fnstcw
xor
lret
pop
jmp
lods
shl
imul
jecxz
inc
lds
fistps
add
mov
adc
xor
mov
ret
test
mov
or
dec
movsb
cmc
rcl
ja
mov
fst
mov
jmp
icebp
fdivs
fnstcw
cmp
leave
popf
push
fnstenv
imul
inc
adc
pop
xor
mov
xor
mov
enter
enter
xchg
mov
ljmp
sbb
add
xor
dec
outsl
or
movsb
repnz
sub
aas
sbb
mov
daa
lods
cmp
in
adc
clc
jb
imul
movsb
jbe
add
sub
mov
lret
sub
or
clc
mov
dec
jg
loopne
clc
sbb
jecxz
rcrb
mov
es
sets
cmp
add
fxam
repz
xor
leave
es
adcl
cmp
jecxz
mov
imul
jbe
add
push
ret
mov
mov
jb
loopw
lret
dec
dec
lds
stc
or
xchg
adc
repz
inc
jns
inc
lret
dec
scas
jmp
push
push
push
push
pop
out
pop
stos
mov
repz
mov
mov
xlat
sbb
dec
cmp
rorl
sbb
pushf
pusha
lea
ficompl
dec
jne
cmpsb
cwtl
pusha
cmp
scas
cmp
and
dec
loopne
jnp
xorb
pop
es
sbb
stos
repz
sub
iret
outsb
jle
cmp
dec
mov
push
out
iret
mov
inc
inc
cmc
jae
popa
adc
gs
xor
push
fiadds
dec
mov
adc
in
dec
sbb
sub
xchg
sub
cmpsl
mov
mov
popf
loopne
and
hlt
test
fwait
ror
dec
sahf
dec
mov
xchg
mov
scas
dec
cmpsb
das
mov
dec
dec
pusha
cmp
outsl
jne
test
icebp
jbe
rcl
cmp
push
repnz
pop
pop
lock
cmp
push
inc
imul
push
les
add
in
clc
sahf
enter
xchg
movsl
jl
and
addr16
and
push
mull
sbb
rorb
cwtl
filds
mov
inc
fists
iret
dec
or
jns,pt
daa
mov
js
mov
push
jns
clc
outsb
out
inc
push
cmp
jae
sbbl
cmp
pop
xor
addr16
jmpw
push
ffree
cltd
xor
enter
add
repnz
add
frstor
cmpsl
cmp
pop
leave
pop
mov
dec
ja
cmp
jge
iret
repnz
ja
jle
adc
loope
pop
adc
mov
test
pop
std
shrl
jle
sbb
pushf
dec
flds
sub
jne
imul
sarb
lods
mov
adc
sbb
and
inc
sub
sub
pop
xchg
jg
dec
jnp
aad
inc
fildll
push
or
outsb
or
mov
cwtl
adc
push
sub
add
faddl
or
icebp
icebp
inc
outsb
subb
sbbb
mov
in
in
in
inc
sub
lods
pop
pop
shll
loop
fdivs
lret
dec
add
clc
cmp
pop
sbb
ljmp
ret
rclb
mov
cmpsb
jmp
pop
popf
fwait
xor
or
ljmp
stc
jmp
scas
sub
jge
pop
sbb
stos
dec
mov
sbb
fidivrl
push
jnp
xor
lods
loopne
call
sub
scas
xor
rcrb
lret
xchg
imul
push
sub
iret
mov
int
pop
ret
add
das
push
loopne
add
push
xchg
jl
or
sbb
pop
xor
jl
icebp
jns
sti
out
cs
dec
inc
sbb
cli
mov
fists
adc
cmp
sbb
jno
ja
idivb
pop
mov
fcomip
cmp
mov
out
jecxz
fnsave
dec
ljmp
mov
mov
inc
sbb
int3
push
jp
lds
aaa
mov
ficoms
or
push
jns
add
cmp
lret
sub
in
fcompl
cmp
mov
icebp
icebp
in
dec
add
rcrl
sbb
and
sub
jge
pop
add
dec
test
ds
cmp
into
inc
adc
inc
dec
cwtl
scas
sbb
cmpsl
push
jbe
cmovl
je
push
jp
hlt
icebp
xorl
gs
xchg
add
mov
inc
sub
add
and
addl
pop
xor
adc
push
sbb
sbb
or
bound
push
fldl
shlb
add
adc
movsb
mov
xchg
decl
outsl
jecxz
stos
mov
mov
add
sbb
cmp
jbe
fstl
pop
adc
clc
sahf
outsl
lock
out
pop
xorl
pop
mov
jmp
inc
int
pusha
and
pop
sub
xor
sub
push
fs
ss
flds
arpl
fs
popa
rcr
push
and
or
dec
or
inc
mov
insb
dec
adc
or
pop
incl
jns
mov
fcos
ffreep
mov
popf
ja
hlt
test
out
lret
push
push
inc
or
scas
dec
or
pusha
clc
and
shrl
movsl
fdivl
out
adc
lcall
pushf
mov
shlb
sbb
xchg
sti
sbbb
js
xchg
hlt
ljmp
mov
add
inc
int
cmp
or
divl
pop
cwtl
aad
mov
adc
jge
inc
lret
cmp
cmovne
mov
cltd
sbb
jmp
lcall
stos
mov
les
sahf
xor
push
pop
mov
test
pop
xor
mov
push
push
and
insb
dec
mov
pop
fsubrp
dec
call
jne
lods
push
and
or
je
jmp
icebp
je
cs
test
repz
push
adc
push
pop
push
gs
and
das
pop
pop
scas
movsl
in
ret
or
fnstenv
rcr
test
or
aaa
mov
mov
ja
stos
pop
xchg
cmp
inc
in
dec
stos
xlat
rorb
scas
testb
mov
bound
push
dec
mov
pop
movmskps
adc
loop
push
adcb
into
lods
cmpsl
push
cs
std
xor
or
test
or
inc
cli
lods
xchg
insb
stos
mov
out
mov
xor
xor
test
int3
ss
mov
inc
xchg
dec
jg
inc
lock
loope
ret
jecxz
jmp
mov
popa
mov
addr16
push
sti
gs
fwait
roll
inc
mov
xor
cs
insl
popa
jle
pusha
cmp
test
jp
enter
stc
insb
test
or
pop
stos
mov
jnp
test
xchg
aad
gs
leave
sbb
call
loope
div
or
cmp
out
js
inc
dec
cmc
mov
xchg
test
les
mov
adc
xchg
push
cltd
add
mov
sahf
add
jge
aaa
mov
mov
rcrl
mov
sub
mov
sysret
lock
mov
pop
repnz
jnp
or
scas
into
mov
mov
jle
pop
js
mov
xchg
sti
xor
addr16
lret
mov
mov
push
test
pop
inc
xchg
in
cwtl
ret
mov
xchg
test
in
xchg
lods
cltd
clc
or
push
pop
sbb
into
test
je
add
jge
es
xor
add
mov
push
iret
cmp
and
jle
enter
fimuls
inc
stos
das
into
mov
ja
js
mov
mov
mov
aaa
mov
shlb
inc
mulb
sahf
out
cmp
outsl
outsb
out
call
test
movsl
enter
fcomps
imul
ja
pop
add
stos
imul
dec
cld
adc
mov
adc
sbb
hlt
es
aas
int
ja
std
mov
aas
fcoms
jl
shr
mov
jge
add
xchg
xor
mov
test
int3
adc
testb
xchg
flds
pop
lock
jle
test
or
push
jge
sbb
jmp
xchg
or
inc
sub
int3
aam
xor
dec
incb
clc
push
in
xor
lea
xchg
sbb
sub
cmp
mov
sub
cmp
in
xchg
arpl
shrl
fildll
jae
adc
stos
mov
fldenv
mov
sub
mov
inc
mov
mov
mov
jo
mov
xorl
add
dec
mov
cmc
setle
test
or
pop
cmp
sub
sub
or
sbb
cmp
ja
testb
push
fiadds
or
mov
inc
sub
imul
insl
aam
idivl
mov
rcrl
bound
cmp
mov
out
mov
fwait
pop
movsb
cmp
sbbb
pop
cmp
mov
cmp
cmp
sahf
jns
dec
inc
mov
dec
push
jo
sub
inc
sti
in
dec
dec
push
pop
push
and
mov
lret
addr16
je
lods
stos
xor
clc
out
mov
pushf
mov
int3
sbb
and
aam
xchg
mov
jae
cmp
cltd
stos
loop
dec
out
pusha
int
adc
push
test
cmovs
fcoml
fmull
jae
add
pop
imul
cmpsl
shll
not
pop
fwait
loop
pop
mov
or
loopne
pop
pop
pop
fidivrs
mov
fcompl
test
cmp
mov
mov
fmuls
mov
xchg
dec
ja
xor
cmpsb
popa
and
mov
pop
mov
hlt
out
lret
jmp
jle
hlt
and
popa
xchg
mov
cli
push
pop
enter
or
ss
inc
cmp
ds
nop
aam
xchg
icebp
fsts
dec
xchg
lret
cmpl
out
inc
xchg
pop
aas
pop
adc
inc
push
push
pop
push
add
jle
lcall
mov
add
add
outsb
push
setnp
lcall
mov
ljmp
sub
mov
jecxz
jno
insb
jle
shl
push
cli
gs
in
lahf
aam
lea
or
outsb
xor
orb
ljmp
and
repnz
outsb
pop
add
iret
add
daa
jle
push
aas
insl
mov
cs
mov
scas
inc
push
xor
dec
leave
jb
xchg
add
popf
repnz
rclb
lock
jmp
dec
inc
or
jge
xchg
adc
xchg
mov
pop
cltd
ficoml
fildl
inc
sarb
or
jle
out
or
into
lea
mov
fcmovne
dec
out
xchg
jns
push
or
and
sub
add
or
sub
or
test
imul
adc
cld
popa
jp
push
pop
sub
push
sub
add
or
je
xchg
mov
lret
sbb
mov
rcrl
into
repnz
push
aam
push
pop
xchg
mov
adc
sbb
push
cmpsb
ret
ja
jbe
cmp
leave
dec
repnz
sub
cmpsl
movsb
out
test
sbb
test
inc
aas
jae
les
in
mov
xchg
addr16
push
jp
jl
clc
xchg
int
ret
sbb
mov
mov
xchg
in
sub
bound
xor
mov
faddl
imul
and
rcrl
jo
pushf
addr16
mov
outsb
fnstcw
dec
xchg
lahf
div
jns
adc
jp
test
sti
std
mov
jecxz
jne
outsl
mov
mov
idivl
into
and
popf
pushf
por
jo
adc
xchg
sarl
cmp
sar
mov
add
test
pop
andl
push
js
jns
cmp
cmpsb
int
jne
jns
xor
xor
pop
add
mov
subb
aaa
sub
push
imul
mov
xlat
ret
test
cmp
mov
mul
andl
inc
popl
aas
inc
pop
mov
addl
inc
push
lods
fld
sbb
sahf
fldl2t
rol
xor
fs
mov
fstl
push
dec
mov
insb
inc
cmpsb
sub
xchg
pop
inc
cmpl
popa
inc
js
xor
mov
test
jns
push
lods
push
fwait
movsb
enter
ja
xchg
gs
aas
clc
out
es
fwait
ds
loop
pop
addr16
sbb
outsl
jo
shl
ret
jb
or
pusha
rolb
mov
notl
fwait
mov
jge
fidivl
xor
push
jge
push
sti
sub
cmpl
test
scas
adc
inc
call
sti
popf
add
fs
mov
hlt
push
or
daa
sub
test
test
test
sbbl
in
cmpsb
and
xchg
push
xor
fnstcw
inc
pop
dec
int
idiv
dec
add
adc
inc
pop
dec
cmp
jae
rcrb
inc
xor
pop
insl
bound
push
lahf
int
jo
push
lahf
aaa
adc
xor
iret
inc
int
sub
ss
hlt
inc
xor
pop
pop
xor
scas
jmp
push
divb
out
dec
inc
arpl
inc
dec
icebp
lods
int3
cmp
mov
movsb
lea
int3
test
inc
aas
jge
aas
jno
out
and
scas
push
shl
lea
das
and
dec
mov
ja
cli
add
mov
outsb
stc
sbb
sub
enter
sbb
imul
xchg
xchg
dec
mov
xlat
nop
jmp
cmpsb
dec
in
out
loopne
andb
out
mov
mov
xlat
fmull
inc
iret
jno
in
shll
inc
or
push
fbstp
test
adc
fnstcw
jmp
and
sub
movsl
loopne
mov
cs
cld
mov
mov
or
mov
scas
or
ljmp
and
call
mov
xchg
mov
cmp
int
nop
mov
cld
icebp
jo
push
jp
cmp
mov
inc
clc
or
sbb
xchg
pop
rorb
jne
rorl
inc
jmp
pop
mov
push
mov
daa
stc
adc
enter
in
xor
imul
jne
add
pusha
adc
fists
xor
std
sub
sub
leave
dec
popa
ja
jp
mov
in
dec
cmp
repnz
inc
pop
lcall
ja
divb
xchg
mov
icebp
jge
in
cmp
or
mov
arpl
jmp
push
xlat
push
shlb
subl
add
outsl
mov
mov
jmp
lret
adcl
pop
dec
xor
daa
dec
inc
addr16
cs
fwait
jns
push
mov
sbb
jmp
xor
push
scas
and
arpl
push
xor
imul
xchg
pushl
mov
cmpsb
inc
adcl
rorb
mov
push
movsb
das
sbb
cmp
mov
roll
pop
mov
sti
push
jne
push
hlt
addr16
push
inc
sub
and
xchg
stos
inc
std
jecxz
cmpsb
mov
sbb
ja
andl
in
insl
xchg
xorb
pop
mov
pop
push
pop
dec
pop
sbb
ficompl
xor
or
mov
in
mov
pop
aas
mov
add
mov
jmp
cmp
pop
xchg
mov
pop
clc
mov
lods
fbstp
push
and
or
dec
xchg
jmp
xor
or
daa
lock
mov
sbb
sub
xchg
arpl
sub
jge
jmp
shrl
lcall
xchg
xlat
stc
rcl
cmp
dec
mov
mov
fildll
out
push
add
int3
pop
dec
nop
xor
push
and
dec
push
cli
rorl
sbb
and
mov
xchg
jne
pop
ljmp
clc
jge
test
ds
cmp
sbb
mov
aas
stos
xorl
inc
inc
es
mov
popl
dec
lcall
popa
adc
ss
lds
mov
outsb
call
lock
lock
and
cli
les
push
in
test
mov
cld
test
lods
push
mov
add
and
push
pop
xchg
xchg
sbb
sub
and
mov
mov
aam
lds
mov
jno
cmp
mov
mov
test
inc
push
jp
pusha
push
arpl
mov
or
push
mov
sbb
xchg
addr16
pop
mov
push
sbb
stos
mov
pop
fdivr
cmpsl
je
adc
sahf
repz
int3
adc
jg
or
nop
mov
shlb
mov
jmp
inc
mov
xchg
fdivp
movsb
cmc
out
stos
ds
xchg
outsb
in
test
adc
push
sar
es
xchg
and
mov
push
dec
insl
out
cmp
imul
je
push
dec
inc
cmc
ret
xchg
das
mov
das
xor
sub
jnp
fcompl
sub
mov
xchg
outsl
pop
enter
jge
jmp
das
scas
pop
cmp
lcall
xchg
shlb
shlb
xchg
pusha
xlat
mov
cmp
loopne
hlt
cmp
fisubl
cmpsb
scas
sbb
sub
aam
das
loopne
jp
xorb
les
hlt
jmp
sahf
push
rcrb
mov
push
lock
dec
mov
and
popf
mov
jecxz
imul
icebp
xchg
mov
mov
dec
hlt
std
inc
ja
in
mov
int3
and
push
dec
out
test
pop
das
add
in
pusha
xor
idivl
pop
add
aam
in
sub
mov
dec
je
pop
fiaddl
mov
scas
int
add
les
out
aam
filds
xor
sahf
or
enter
jle
gs
mov
lods
in
cmp
test
notb
xlat
mov
jmp
mov
xchg
cmpsb
andl
nop
mov
jbe
xor
mov
mov
pushf
push
std
push
cmp
adc
cmp
push
xor
xchg
add
ret
push
add
and
cmpl
outsl
add
cmp
jb
in
mov
push
repz
mov
hlt
fwait
push
jle
sbb
mov
push
nop
call
lds
inc
leave
xchg
out
test
and
pushf
int
add
sbb
jecxz
popa
push
mov
add
lods
dec
cltd
adc
inc
pusha
test
and
mov
inc
repnz
inc
repnz
and
iret
ret
jb
mov
pop
sbb
add
xor
xor
arpl
mov
pusha
mov
and
loope
dec
cmpsb
lods
fidivl
pop
loopne
jbe
or
dec
sbb
ja
inc
dec
cmc
hlt
lock
pop
data16
add
xor
inc
mov
lods
push
push
adc
out
fsubrl
push
stos
ret
sti
call
or
out
xchg
ja
in
jae
fisubrl
and
inc
mov
aad
leave
into
or
pop
stos
jge
hlt
jle
xor
mov
dec
pop
sti
pop
push
mov
fildll
inc
idivb
jns
adc
or
lock
fiadds
stos
pop
popa
inc
xchg
jmp
je
dec
les
in
jmp
insl
lahf
imul
ljmp
insb
xchg
arpl
xchg
xchg
addr16
imul
mov
cmpsl
js
push
sub
cmp
cmpb
jbe
les
lds
stos
jae
into
xchg
popf
fadds
push
and
les
sub
lahf
jnp
fadds
rcrl
fwait
ret
mov
push
jno
daa
xchg
xchg
rcrl
mov
hlt
test
add
into
sbb
add
mov
fsubl
movsb
test
ljmp
sbb
rcll
fistpll
leave
xchg
ja
adc
cmp
adc
pop
sahf
sub
xor
in
repnz
or
and
mov
xchg
and
insb
push
add
mov
insl
sbb
clc
or
sub
out
cld
daa
adc
xchg
out
in
dec
pop
ret
inc
mov
cmp
scas
imul
lret
jle
fsubs
dec
fldt
cmp
dec
add
es
and
and
loope
push
insb
xchg
nop
sbb
outsl
mov
loopne
sti
pop
xlat
enter
out
mov
xor
arpl
fsubs
add
out
or
add
cmp
push
shll
jo
hlt
inc
test
sarl
das
sbb
sti
cmpsb
sbb
addr16
test
and
fwait
sbb
adc
or
cmpsb
loop
pop
les
push
sub
fadd
lock
add
mov
out
mov
push
imul
cmpsb
hlt
jge
or
lahf
inc
add
cli
and
mov
int
mov
jno
stos
adc
dec
adc
loope
push
ret
jbe
push
dec
push
push
cmp
mov
add
cmpsb
repnz
sbb
scas
cld
mov
adc
jmp
into
cmp
add
dec
cmpsl
test
pop
pop
stc
ljmp
xchg
int
cwtl
inc
xchg
dec
push
or
push
roll
dec
push
stos
or
test
inc
push
daa
ljmp
jno
mov
lea
cmp
das
lods
jle
addr16
subb
mov
sub
mov
addb
aad
cmp
fidivl
xor
shll
sub
mov
cmp
mov
rcrl
mov
leave
mov
mov
mov
popa
cmpsl
scas
or
add
lcall
xor
sti
pushf
and
push
mov
aas
in
test
pop
pop
pop
dec
shll
out
movsl
andb
sarb
adc
jp
add
cmp
xchg
pop
pop
dec
mull
std
outsl
nop
inc
pop
cmp
pop
pop
jae
xchg
sti
int
sbb
mov
dec
out
xchg
mov
cltd
jecxz
cmpsl
aam
or
in
cwtl
pop
adc
xchg
sarb
es
out
in
cmp
mov
inc
jp
ret
push
ret
xor
or
mov
mov
stos
pop
nop
xchg
std
xor
pop
sbb
sti
cmp
mov
insl
dec
xchg
js
jo
pop
pop
les
and
jle
fcoml
lea
cmp
out
jb
xor
es
ficoms
pusha
cmp
inc
aas
orl
xor
xor
loop
mov
dec
stc
xchg
pusha
cs
xchg
lock
push
mov
push
jg
jg
mov
imul
jg
orl
xchg
sarl
lea
int
adcb
push
out
jecxz
shlb
cmc
add
repz
add
lods
push
cld
ret
test
mov
xor
gs
mov
adc
xor
aaa
push
sub
cmc
nop
mov
stos
push
clc
leave
cmp
in
insl
lods
sbb
mov
ds
jnp
mov
cmp
cmp
std
cli
xchg
xchg
fs
dec
xor
not
or
push
rcll
jp
addl
pop
jae
jbe
inc
enter
xchg
xchg
in
push
dec
jno
sub
push
popl
aas
sbb
adc
les
jg
mov
sbb
xchg
jne
outsl
out
out
mov
push
xchg
call
neg
xchg
repz
sub
dec
mov
adc
loopne
aaa
and
test
cwtl
rcll
xor
push
jl
je
movsb
pusha
jae
cltd
clc
ljmp
adc
pop
mov
push
adc
xor
movl
or
cli
sti
test
xor
std
ss
sbb
gs
mov
fimull
shrl
add
sub
push
cmpsb
fiadds
dec
lret
lcall
in
sbb
xor
out
in
sahf
lahf
jge
lahf
dec
frstor
jg
and
leave
jb
addr16
adc
cmp
mov
mov
rorb
adc
fwait
mov
repnz
pop
mov
iret
push
cmp
xchg
data16
pop
cltd
cmp
mov
jbe
addr16
cmp
sbb
out
xor
push
aaa
stos
pop
and
mov
jne
clc
in
rorl
stc
push
adc
cmp
mov
push
pop
push
push
mov
hlt
pop
jb
inc
fstp
mov
dec
cltd
or
xchg
enter
shlb
andl
lahf
and
jecxz
push
mov
sub
mov
cmp
push
pop
pop
test
add
adc
cltd
mov
cmp
cld
add
fstpl
imul
data16
push
xlat
dec
xor
fmul
scas
pop
rcrl
fs
fdivs
lods
sub
icebp
push
mov
cli
fsub
push
sbb
out
push
sub
scas
cwtl
test
cmp
into
jne
hlt
pop
or
mov
into
sbb
jne
int
scas
adc
jb
xor
into
adc
call
inc
cmpsl
dec
sub
adc
dec
adc
pop
fldenv
dec
inc
out
sub
lods
shl
sbb
imul
test
xlat
push
loope
mov
mov
add
mov
or
flds
mov
xchg
adc
inc
adc
jae
add
sbb
repz
hlt
jae
cmp
pusha
testl
adc
mov
mov
push
leave
xlat
inc
lds
ja
sbb
stos
xchg
pop
push
xor
or
jp
push
jne
adc
sbb
das
mov
pop
jp
sbb
inc
push
jns
ljmp
push
push
stc
pop
out
inc
or
push
arpl
aaa
in
mov
fwait
es
repnz
add
lods
add
adc
daa
ss
aaa
in
jae
movsl
adc
mov
or
sarb
fptan
xchg
xchg
xlat
jecxz
mov
pop
es
ror
scas
inc
inc
dec
mov
pop
pop
jp
xor
leave
in
fcom
mov
jae
dec
ret
xchg
in
test
jge
lahf
inc
lock
inc
mov
arpl
jne
movsb
sub
dec
aad
std
lcall
add
push
dec
cli
fs
add
out
pop
es
push
xchg
mov
fnstcw
test
sub
push
and
jno
ficoml
xor
aad
lret
sbb
in
mov
jp
leave
mov
lahf
or
mov
clc
xlat
aaa
js
mov
pop
punpckhwd
cmp
fcomip
cmp
call
js
ret
cmp
sti
fstl
mov
lock
pop
stc
adc
jp
inc
cmpsl
lods
rorb
shll
cli
data16
int3
inc
xor
fstl
dec
xchg
jne,pt
dec
push
and
dec
jae
inc
mov
inc
cld
sub
in
cmp
and
jl
lock
lock
push
aaa
shrb
into
movsb
je
mov
orb
nop
leave
and
push
or
pop
ret
or
rclb
leave
and
fisttpl
mov
stos
add
imul
movsb
ret
int3
aad
mov
dec
in
add
pop
jle
aas
fdivs
or
not
ja
xor
cmpb
inc
dec
in
push
pop
ds
ljmp
sarl
stc
inc
lea
stc
inc
pop
int
mov
xchg
mov
jp
ret
daa
adc
pop
add
nop
movsb
add
daa
cltd
xchg
xchg
repz
ret
nop
sahf
leave
leave
hlt
test
mov
repnz
sub
pmaxub
cmp
pop
in
xchg
mov
es
or
push
mov
iret
pop
int
loopne
jo
mov
mov
and
sahf
sti
insb
dec
out
mov
lea
out
xchg
mov
sub
icebp
setnp
cmp
jp
cmp
sub
and
aaa
sbb
and
or
and
push
xor
add
subb
ss
leave
into
data16
adc
mov
mov
adc
or
xchg
adc
cmpsb
sbb
pop
shrb
fwait
bound
lret
mov
mov
lds
adc
pop
lahf
fisttps
orb
sub
or
xor
mov
dec
xchg
mov
addl
loope
add
pop
cmp
xor
out
mov
aaa
vhsubpd
jmp
add
push
inc
dec
jmp
or
movsl
mov
int3
or
popa
pop
pop
sbb
loopne
jne
pusha
or
or
arpl
bound
sbb
test
data16
imul
and
lret
sbb
shrl
lret
rclb
aad
jb
mov
xor
ret
mov
fisubl
mov
or
and
or
cmc
insl
rolb
inc
xchg
out
inc
aam
cmp
mov
pop
mov
out
mov
jg
outsb
pop
fs
mov
shll
xor
sahf
lret
out
icebp
sub
gs
into
sti
arpl
aas
lods
push
add
cmp
push
add
fsubs
cmpl
xor
xchg
cmp
cmp
int
mov
add
dec
mov
sub
adc
xor
or
mov
repz
mov
sbb
out
lods
cmpsl
push
mov
jle
stos
test
in
cmp
push
cmc
icebp
xchg
data16
push
cs
dec
push
xchg
xchg
fwait
jae
sub
jno
push
mov
sbb
sbb
ds
inc
inc
mov
sub
cld
sbb
call
add
sti
rcl
push
nop
fldenv
ja
mov
jmp
push
xchg
in
fnsaves
out
lret
mov
movsl
mov
mov
mov
jmp
lahf
rolb
stc
add
mov
xor
imul
dec
dec
aaa
sbb
cmc
xor
scas
sub
and
jl
int3
insb
push
xchg
pop
in
cld
in
and
inc
mov
nop
outsb
addr16
bound
push
mov
and
adc
rcl
lret
ret
xchg
xchg
test
in
sarb
mov
xor
mov
je
cmp
or
cmp
sbb
inc
jg
push
cmpsb
add
adc
idiv
pop
insb
add
mov
ljmp
add
mov
mov
mov
cmpl
sbb
test
imul
push
or
sbbl
ret
pop
mov
aaa
sub
in
jp
scas
pop
inc
out
pushf
xor
loope
push
pop
xor
cmp
roll
inc
jecxz
mov
inc
pusha
insb
fistl
pop
outsb
std
cmpsb
decb
fsubs
and
pushf
adc
test
mov
daa
cmpsl
outsl
outsl
push
dec
test
dec
adc
xor
push
adc
test
jp
mov
cltd
sub
fsub
mov
inc
push
jbe
mov
test
pop
movsb
pop
push
push
movsb
fiadds
jne
sbb
add
and
jmp
xchg
jmp
mov
push
scas
mov
jno
mov
lahf
jle
jbe
or
xor
out
pop
sbb
push
cmp
leave
sub
pop
xadd
in
aad
xchg
dec
iret
fucom
xchg
mov
push
xchg
jae
jo
xor
mov
dec
sbb
jae
pop
lret
adc
jmp
and
insl
fnstenv
int3
inc
daa
nopl
out
stos
or
sbb
pop
enter
mov
js
and
dec
aam
stos
shll
mov
fisttpl
bound
and
sub
sub
push
sarb
test
jae
daa
inc
inc
inc
push
jg
stos
pusha
roll
mov
fisubrl
sub
pop
iret
ret
scas
add
inc
jae
divl
pusha
add
push
ljmp
mov
lds
inc
sarb
jmp
mov
addr16
sub
inc
and
push
repnz
leave
mov
stos
dec
fists
cmp
ret
movsb
fcomi
sub
out
les
loopne
ret
daa
xor
aas
sbb
mov
add
fwait
cmpb
lock
pop
fs
add
arpl
popf
sub
lods
push
xchg
xor
xor
addl
mov
mov
pusha
call
nop
mov
inc
jmp
hlt
addr16
shll
nop
dec
push
xor
pop
push
push
cmpsl
fldcw
out
int3
clc
or
mov
je
roll
imul
or
xor
ljmp
cwtl
or
xchg
adc
mov
xor
push
repz
fisubl
jg
pop
push
xchg
aaa
sbb
dec
aaa
mov
in
bound
push
push
out
in
cmp
sbb
cmp
popf
cmp
and
cmpsl
lock
xor
mov
test
cmc
sti
adc
pop
pop
stos
adc
adc
add
fwait
outsb
test
jae
cmp
pop
mov
jne
or
mov
enter
mov
test
repnz
imul
pop
call
adc
or
mov
push
sub
cld
lahf
pusha
inc
inc
dec
sbb
std
dec
imul
mov
pop
mov
daa
arpl
jns
cwtl
dec
rcll
aaa
sbb
sub
fs
mov
mov
jnp
push
lcall
call
nop
scas
jnp
mov
clc
imul
jmp
xchg
sub
sub
add
mov
mov
xchg
cmp
rorl
cltd
cmp
jns
mov
cmp
and
rorl
imul
sub
inc
lds
xor
sub
and
scas
out
jne
adc
in
xchg
shrl
jb
inc
or
push
cmpl
sbbl
ds
mov
or
fisttps
jb
xor
loopne
mov
xchg
inc
popa
stos
mov
inc
dec
ljmp
lcall
int
mov
inc
jo
xor
mov
out
js
xor
jno
fsin
mov
sub
dec
cmp
mov
sub
push
out
cmp
pop
ja
mov
push
insb
dec
sbb
pop
jno
out
fsubrl
cmp
pop
out
jmp
jl
insl
add
rcl
test
cli
pop
aaa
jmp
outsl
lds
sub
mov
inc
or
cmpsl
test
lret
fidivl
or
pop
adc
bound
push
mov
cmpsb
bswap
aad
jmp
inc
iret
fimull
push
pop
adc
ljmp
fdiv
push
adc
ds
cmp
pop
std
mov
lahf
icebp
sub
push
push
push
cmpb
fistps
push
sub
sub
jo
xor
jle
sub
mov
cmc
jae
mov
outsl
mov
mov
repnz
and
lods
push
das
mov
lods
sbb
jl
mov
fnstcw
lea
test
addr16
push
mov
dec
fildll
xchg
mov
inc
adc
call
daa
sub
inc
cmp
dec
jle
test
dec
dec
inc
xor
out
or
add
ljmp
xchg
addr16
stos
or
inc
dec
cmpsb
dec
jae
repnz
mov
aas
out
mov
out
stos
cmp
cmc
mov
mov
cmp
ffree
nop
jbe
outsb
test
jb
imulb
or
inc
lock
lods
lcall
arpl
add
mov
adc
mov
aas
fidivrl
push
push
std
inc
jecxz
xchg
adc
lods
dec
les
fs
scas
pop
icebp
out
sbb
enter
cmp
fildl
test
add
popa
mov
pop
aad
ficoms
push
loop
ss
push
xchg
adc
and
xor
adc
sub
xlat
mov
stc
in
and
xorl
jnp
adc
jle
cmp
mov
arpl
sub
push
stos
mov
sbb
lods
ret
loop
outsb
loopne
xor
test
pop
adc
xlat
outsl
fcmovb
int3
jo
aas
push
or
cmc
lea
xchg
movntq
out
aaa
cltd
je
cmp
sbb
mov
ret
outsl
adc
xchg
adc
push
jbe
adc
inc
pop
ret
js
xchg
mov
mov
or
push
aad
xchg
out
ret
inc
mov
mov
adc
jo
xlat
lahf
cmp
xor
pop
push
pusha
lods
pop
cmpsl
fdivrl
fwait
cltd
aas
xchg
out
inc
cld
and
stc
push
mov
fsts
popf
and
add
sub
adcl
ljmp
sti
mov
stos
insl
inc
int
js
mov
lods
in
pop
addb
mov
data16
mov
mov
loopne
cmp
pop
mov
je
cwtl
test
jecxz
dec
repnz
lahf
sti
dec
sub
in
inc
mulb
adc
xchg
cs
dec
repnz
xchg
pop
add
sbb
and
pushf
xchg
dec
mov
js
pop
mov
add
pop
adc
es
pop
pushf
xchg
inc
cmp
sbb
jmp
prefetcht0
pop
push
aam
sbb
pop
imul
shlb
outsb
lret
hlt
add
or
scas
push
and
imul
add
add
enter
mov
testl
inc
inc
mov
pop
mov
xlat
adc
fdivrl
add
mov
mov
int
in
xor
dec
fmuls
scas
aas
jle
push
loop
cmp
std
xchg
jle
rol
xchg
in
aas
mov
ljmp
femms
mov
fcmovbe
cld
mov
das
outsl
jno
shll
xor
mov
out
mov
cltd
jns
mov
add
cmp
mov
rorb
mov
out
pop
mov
push
test
mov
mov
cmp
mov
movsb
ret
and
and
mov
cmpsl
test
pusha
jb
mov
ret
inc
dec
mov
jmp
ljmp
clflush
jns
pop
inc
mov
int3
pop
adc
imul
jmp
cld
mov
aaa
pop
stos
sar
add
jge
mov
add
movsb
imul
jbe
pusha
jecxz
shll
test
iret
push
push
xor
or
mov
sub
lock
mov
push
pusha
repnz
rclb
cmpl
mov
cmp
add
cmpsl
pop
dec
lock
adcl
imul
push
pop
test
ss
xchg
decl
mov
xor
sbb
jae
shr
popf
mov
sub
aas
jne
jne
movsb
out
out
jno
adc
mov
bound
mov
lret
movsb
lea
call
movsl
dec
dec
xor
in
pop
xor
stos
push
sub
rcll
xchg
dec
add
in
add
adc
loopne
mov
jecxz
add
fiadds
adc
dec
lea
ds
xor
cmovle
mov
fstpl
mov
in
addr16
iret
dec
cmp
mov
cs
pop
dec
iret
dec
jo
mov
jnp
add
test
and
and
imul
lret
test
pop
ss
dec
subb
jecxz
mov
repnz
bnd
add
lock
fstps
enter
cwtl
fs
adc
mov
mov
mov
es
push
push
mov
repnz
dec
xor
adc
mov
sbb
aam
cmc
sub
ret
jae
fistpll
in
outsb
scas
cmp
cmpsb
xor
jp
cld
inc
inc
out
dec
sbb
popf
imul
cmp
mov
ret
add
xor
popf
sbb
or
push
or
sbb
mov
sub
or
das
mov
jge
xchg
clc
enter
leave
lds
mov
loope
das
mov
pushf
xor
inc
call
add
icebp
jbe
jecxz
test
or
push
lret
cmc
pop
outsl
sub
jbe
enter
lcall
insb
int3
movsl
or
arpl
mov
mov
inc
imul
in
pop
xor
dec
mov
cld
add
shll
sub
pop
in
mov
cli
xorl
dec
movsb
dec
rorl
sub
in
jnp
mov
pop
shr
xchg
ror
loopne
lock
shll
popf
cld
imul
jmp
sti
sub
xchg
cmpsb
xchg
out
push
mov
pop
mov
push
cmp
hlt
out
aad
mov
std
mov
sarb
dec
test
ror
fimull
dec
scas
xchg
xchg
push
and
mov
push
mov
jne
jnp
popa
pop
fwait
mov
sbb
xchg
jb
into
mov
iret
sub
pop
xor
shll
sbb
inc
out
push
pop
fldt
shrb
mov
js
adc
and
mov
test
pop
push
sub
jecxz
leave
xor
std
cwtl
xchg
push
test
adc
inc
inc
inc
sub
adc
sub
add
pop
jecxz
pop
ficomps
xor
push
andl
sub
push
pop
sub
hlt
rcrl
mov
inc
cs
xor
gs
mov
push
sbb
jnp
fsubr
ficompl
shrb
addr16
shl
mov
jle
pop
push
iret
and
or
sbb
clc
add
aam
sbb
std
mov
outsl
dec
sub
pop
dec
cmp
pop
mov
lcall
lahf
sub
sbbb
lret
mov
cmp
data16
mov
movsb
rcrb
pop
jmp
adc
mov
dec
scas
stos
nop
xchg
dec
dec
bound
and
test
adcl
mov
and
out
ret
xchg
pop
ds
push
dec
lods
imul
jae
pop
dec
pop
mov
dec
adcl
sub
movsb
shlb
ret
push
jns
xchg
sbb
sub
in
adc
insl
or
add
es
sbb
push
xorb
push
cld
pop
jg
dec
mov
arpl
lret
ds
repz
fwait
mov
pop
das
inc
arpl
ja
js
jmp
xchg
arpl
mov
clc
jle
jl
fs
outsb
xchg
pop
cmpb
inc
jne
rorl
mov
adc
testb
cmp
cmpsl
lock
or
loope
adc
mov
aaa
cmc
pop
xchg
sbb
in
js
cmpsb
stos
cmc
sub
xor
sub
jns
out
insb
repz
adc
xchg
cs
lea
repnz
dec
jo
fiaddl
or
or
hlt
add
pop
pop
xor
inc
fcoml
add
imul
aas
imull
insb
call
insl
push
mov
cmp
scas
sbbb
mov
leave
xor
jns
movsl
xchg
sub
cmp
and
mov
test
outsb
mov
or
push
out
stc
out
jp
daa
add
push
xor
test
orb
jecxz
shll
push
xchg
out
xchg
push
lock
push
or
loopne
enter
jnp
das
cltd
cmc
test
lahf
aas
adc
cltd
inc
add
ds
mov
xlat
jl
push
inc
mov
fnstsw
lret
push
cmovo
adc
cmpsl
in
into
push
ret
mov
call
fcoml
xor
and
test
arpl
fimuls
xchg
fnstenv
or
jl
stos
add
mov
lods
sbb
enter
push
jmp
and
adc
outsl
repnz
push
test
push
pop
mov
xchg
pop
repz
clc
xchg
repz
mov
outsl
and
jb
das
notl
cmpsl
or
ds
sahf
inc
loop
fs
test
pop
xchg
lahf
dec
jle
pop
shl
scas
sub
shll
mov
in
jmp
or
jae
adc
aas
out
or
jne
icebp
notl
cli
sub
test
push
jae
pop
idivb
adc
in
mov
or
xlat
out
cmpsl
dec
mov
xlat
dec
daa
push
scas
jno
imul
add
inc
add
add
fimull
stos
cmpsb
je
adc
aad
cwtl
ret
negl
sarl
lea
dec
mov
sub
outsb
xor
fnstenv
das
mov
push
mov
in
sub
adc
shrl
pop
mov
mov
push
bound
mov
dec
mov
pop
dec
fucomip
hlt
cld
in
cs
pop
in
xor
into
movsb
mov
jo
cmp
fsub
rclb
ljmp
and
xchg
xchg
lods
sbb
adc
decl
adc
repz
xchg
add
mov
in
ret
insl
xor
jle
outsb
in
inc
cmp
push
lret
cmc
jo
call
mov
sub
lds
lock
repz
das
data16
push
cmc
pop
ja
adc
sti
push
mov
add
add
mov
and
out
loope
add
mov
jo
cmp
dec
mov
and
jle
shl
dec
push
or
cli
call
and
ss
push
sti
xchg
jge
push
jmp
lock
and
dec
pop
mov
and
imul
lock
rep
popf
cmp
pop
inc
jbe
xor
test
add
subps
movsl
icebp
stos
sti
xchg
test
pop
pop
or
mov
xor
sar
mov
pop
and
sbbl
inc
mov
pop
leave
jmp
hlt
imul
mov
jecxz
imul
mov
dec
add
push
shr
testl
ror
les
inc
stos
fisubrl
fisubrl
das
into
mov
xchg
mov
ds
lret
push
dec
loop
adc
xor
fnstsw
mov
jmp
jo
lea
outsl
stc
icebp
push
aam
inc
sub
inc
jmp
xor
push
mov
movups
out
or
xor
jmp
sub
push
fists
cmpsb
insl
ljmp
loop
mov
dec
lods
pop
lcall
mov
sti
pop
cmp
and
pop
jo
popf
or
push
lret
stos
adc
push
and
out
pop
pushl
xchg
cltd
lods
shl
icebp
xchg
mov
sti
cli
lahf
in
and
lock
popf
mov
jecxz
in
jno
mov
mov
ds
lret
sub
xor
adc
mov
mov
mov
jno
inc
loopne
and
sbb
push
cltd
xor
repz
pushf
stos
dec
ja
dec
sbb
push
mov
and
xor
popa
iret
inc
jns
mov
test
fistpl
movsb
hlt
sbb
inc
test
jbe
adc
xchg
loop
lret
sub
cmpsb
xchg
lahf
xor
daa
adc
cmpsl
fmull
rcr
pop
mov
or
fdiv
js
nop
sbb
mov
fnstcw
fbstp
inc
frstor
cmp
lret
cli
adc
addr16
jge
pop
je
movsl
jns
adc
jl
cmp
icebp
inc
and
mov
and
push
std
mov
inc
jnp
scas
xor
pop
and
pop
test
rorl
test
lds
pop
stos
xor
push
sbb
pop
mov
lods
arpl
pushl
xchg
ret
call
pop
and
int3
scas
jecxz
stos
sbb
imul
mov
outsb
fxch
divl
push
xchg
jg
or
clc
cmp
aam
push
bound
lahf
mov
loopne
xor
jb
iret
cmp
sub
test
inc
test
jmp
adc
call
setae
jae
pop
pop
sti
pop
out
in
jge
jo
lcall
xchg
scas
movsl
in
or
aaa
loope
int
bound
jge
iret
icebp
aam
mov
in
fsubr
ja
or
mov
loope
inc
int
pusha
divl
and
mov
xor
xchg
adc
insb
lods
xor
int3
stc
and
jae
aam
push
mov
mov
fucomip
xchg
insb
push
test
aaa
jbe
in
push
push
dec
out
fmull
bnd
ds
test
xchg
movsl
pop
dec
sbb
rcrl
mov
push
and
mov
xchg
ljmp
fsubrp
cwtl
mov
dec
sbb
lahf
fcoms
xchg
pop
mov
ja
pusha
jno
lds
in
mov
ljmp
mov
xchg
add
and
gs
ds
or
sub
push
mov
pushf
cld
mov
xchg
mov
test
loop
hlt
add
mov
movsb
scas
lock
cmc
inc
mov
jb
and
xorl
cmp
incb
imul
movsb
xchg
je
push
adc
push
inc
and
je
or
add
test
scas
inc
jae
xchg
or
mov
lods
in
or
jecxz
out
scas
dec
scas
imul
adc
cmp
bound
fs
adc
cmp
and
pop
idiv
or
or
xchg
movsl
clc
shlb
mov
addr16
xchg
pop
and
jle
sbb
cmp
lcall
out
stos
scas
mov
mov
movsl
sbb
stos
xor
add
or
testb
xchg
lds
add
out
insb
call
or
dec
stc
cmpsl
stc
mov
pop
jl
xchg
cmp
mov
cld
lods
mov
cmc
mov
mov
movsl
cmp
lock
or
sub
mov
imul
fsubs
notb
dec
out
ljmp
out
xor
and
out
jnp
loopne
inc
or
cmp
dec
loop
inc
in
mov
lea
call
adc
inc
in
lahf
or
inc
cmp
ret
xorb
lock
lds
push
into
out
jmp
adc
in
mov
inc
repnz
push
mov
add
or
test
pop
sarl
hlt
lret
inc
inc
daa
push
lret
jne
lds
mov
hlt
dec
sub
out
and
mov
push
outsl
jbe
sahf
pop
int3
mov
add
lea
frstor
icebp
jb
mov
and
sub
out
add
xchg
xchg
das
add
mov
mov
add
cmpsl
stc
sub
sahf
pop
push
call
sbb
jbe
push
out
pusha
mov
pop
std
inc
inc
push
and
xlat
and
ds
xchg
cmp
loop
mov
int
cmpsl
adc
pop
push
fdivl
push
add
lods
mov
pop
sub
sub
jge
mov
fdivrs
fwait
jle
clc
in
pop
mov
cmp
push
into
sbb
addl
adc
cmp
jge
das
dec
jne
pop
lea
fcompl
pop
inc
mov
cmp
inc
aaa
enter
adc
or
pushf
int3
test
or
sub
pop
daa
push
sub
daa
push
mov
mov
xor
scas
mov
push
out
clc
jge
popa
pop
xchg
pusha
jge
ret
jns
shrb
ret
pop
jnp
mov
adc
gs
cmp
inc
add
sbb
pop
movsl
cltd
adc
and
mov
push
adc
mov
mov
xchg
outsl
or
rorb
pop
pop
fcoms
cmp
ja
mov
loopne,pn
ret
xor
and
mov
mov
jnp
sbbl
mov
mov
pop
stos
popa
cmpsl
shlb
test
dec
inc
pop
mov
mov
xor
pushf
bound
fnstcw
cmp
je
in
scas
xorb
mov
int
cwtl
sbb
fnsave
test
data16
loope
xchg
xchg
je
cmpb
adc
push
mov
jb
add
ret
jp
fnstcw
out
jns
loopne
enter
xchg
and
mov
pop
divb
nop
cmp
lods
sub
repnz
sbb
scas
daa
loop
mov
pusha
jmp
leave
sub
fs
pop
or
add
cmp
jp
pusha
cwtl
insb
and
sbb
xlat
mov
adc
cld
mov
push
sub
sti
push
sahf
out
mov
std
cmp
ja
push
push
push
hlt
pop
imul
cmp
mov
cmc
jo
sub
filds
pop
lods
es
in
xor
inc
repnz
push
add
cmc
xchg
cmp
es
mov
stos
ja
ds
or
jp
ljmp
stos
aad
pop
add
dec
inc
gs
add
jb
mov
pop
rcll
in
inc
mov
je
jmp
sbb
ljmp
pop
mov
and
sbb
inc
inc
je,pt
dec
push
mov
outsl
enter
sub
xor
mov
adc
andl
sbb
mov
sbb
imul
insb
xorl
add
push
sbb
aam
nop
xchg
gs
sti
cmp
gs
cmp
add
xlat
mov
dec
mov
fwait
aaa
loope,pt
in
mov
jb
sub
add
mov
stos
outsb
popa
fisttps
inc
and
movsb
mov
mov
outsl
mov
push
pusha
mov
enter
int3
lods
jmp
xor
bound
lahf
mov
cmp
add
mov
fmulp
push
push
scas
mov
clc
loop
or
adc
xor
scas
mov
shrb
add
pop
xor
sbb
or
lahf
ficoml
ds
mov
xlat
cmp
cwtl
sti
jb
std
xor
and
cmp
xor
dec
lea
insl
xchg
ret
mov
jg
pop
and
int
inc
sbb
in
xchg
cmp
cli
inc
gs
int3
mov
cwtl
out
je
fstps
and
nop
xor
hlt
mov
in
jp
addr16
sbb
ja
enter
test
add
shr
jmp
sahf
cmp
jno
mov
sub
movsl
cmpsl
rclb
add
add
dec
pop
jmp
lea
outsb
pop
jg
call
ret
fwait
pop
popa
sub
insl
inc
popf
fcoms
add
cld
jmp
cmp
or
ja
loopne
sub
mov
cmp
ret
push
sarb
sub
xchg
xor
lcall
arpl
mov
inc
decl
std
scas
or
es
cmp
inc
mov
pop
clc
addr16
cmp
and
repz
sbb
orl
xchg
mov
mov
push
push
daa
cltd
stos
mov
aam
je
je
popf
pop
pop
imul
sub
xchg
add
stos
lcall
mov
std
ficoml
mov
push
aad
ljmp
out
sar
mov
dec
and
pop
test
mov
jmp
push
mov
inc
xchg
cmpsb
sub
pop
scas
mov
insb
aam
mov
jecxz
jmp
lea
cmpsl
ljmp
fwait
mov
cmp
loopne
orl
pop
call
add
mov
cmp
addr16
cmp
xchg
mov
insb
rolb
mov
push
call
mov
inc
mov
lcall
test
xor
mov
sbb
xchg
mov
adc
mov
xchg
sbb
pop
cwtl
aam
test
iret
mov
or
mov
movsl
icebp
cmp
ret
filds
in
cli
or
in
rcr
sub
stos
shlb
or
testb
shrl
xor
fwait
jno
mov
dec
mov
mov
pop
sub
or
or
cwtl
ret
pop
xor
sti
mov
sti
pop
xlat
xchg
fidivrl
movsl
addl
xor
adc
iret
or
push
int3
pop
xchg
aaa
and
out
xchg
imul
push
jle
mov
in
add
sahf
sti
lret
int
mov
in
cmp
cmp
adc
sub
inc
aad
push
push
cmp
pop
mov
add
pop
mov
xor
pop
or
int3
ja
sub
adc
sub
dec
cli
nop
jnp
arpl
xchg
fs
add
jnp
icebp
mov
mov
rclb
mov
mov
das
movzbl
jae
mov
insb
ds
test
mov
arpl
jns
push
lods
mov
inc
cmp
in
loopne
or
lahf
pop
sub
stc
test
lret
mov
pop
je
loopne
fdivrl
pushf
aaa
stc
imul
out
or
mov
popa
add
cmc
sub
mov
iret
or
push
mov
mov
cmp
mov
scas
cltd
fbstp
add
sub
or
mov
push
aad
aad
int3
cld
sub
pop
pop
cmp
cmp
aad
in
dec
xor
ret
sub
sub
arpl
icebp
push
inc
cltd
daa
dec
pop
mov
movsb
or
aam
dec
sbb
xchg
fsubrp
fsubr
hlt
cmpsl
pop
xchg
pusha
das
std
dec
mov
push
jno
mov
ss
xor
jl
xchg
bound
xor
ret
cmp
sti
popa
cmp
and
xor
xchg
aam
mov
push
sbb
push
stos
pop
popa
cmp
jmp
sub
dec
fidivrs
push
adc
push
stos
inc
lret
outsl
pop
loop
imul
jns
clc
repnz
ret
xchg
mov
stc
mov
mov
outsb
xor
aad
and
movsb
lock
es
popa
int
les
test
sub
adc
dec
aaa
push
jle
test
push
jg
jl
jno
add
lods
xchg
add
jae
arpl
je
push
sbb
mov
decl
sub
cmp
sbb
cs
cmc
mov
jmp
jb
mov
movsl
sub
aad
nop
pusha
xchg
or
cld
dec
add
orl
pushf
ret
or
aas
scas
movb
xor
je
add
sub
mov
scas
xchg
sub
ficoml
test
fisubrl
inc
and
loope
rcll
or
jp
lret
mov
and
pop
mov
jp
and
xor
inc
dec
mov
jb,pt
fisubs
ret
xorps
add
mull
push
mov
mov
mov
lret
inc
xchg
jb
fcomp
inc
xchg
and
dec
mov
int3
and
adc
aas
or
xchg
stos
ret
lret
mov
in
push
ds
aaa
std
dec
mov
xchg
ljmp
push
lcall
push
sub
and
test
mov
jae
aad
cmp
enter
xchg
push
or
xor
fcompl
daa
lods
imul
mov
in
inc
mov
aad
stos
out
sbb
mov
inc
inc
daa
inc
inc
cmpl
rcr
push
or
cmp
dec
push
insl
cmp
rolb
arpl
mov
addr16
sub
sbb
mov
sub
in
cmp
fistps
and
hlt
test
mov
add
mov
or
fidivs
dec
jl
lret
rclb
jp
push
xchg
jl
inc
xchg
les
and
aaa
call
inc
clc
and
arpl
pop
js
hlt
push
push
adc
adc
xor
add
xchg
inc
add
pop
out
ss
ja
aas
icebp
outsb
push
xlat
outsb
mov
rclb
push
ret
mov
sbb
dec
cmp
in
out
ljmp
mov
pop
push
in
jno
imul
xchg
inc
mov
push
sub
bound
sub
xlat
mov
popa
jg
push
stc
sub
fisttps
loope
arpl
loopne
xchg
or
bound
stos
push
jecxz
rcll
dec
aaa
fcmovne
std
stc
dec
inc
sub
jle
xlat
faddl
jp
xchg
flds
dec
push
add
bound
mov
pop
push
pop
mov
jns
outsl
clc
push
imul
dec
push
movsl
mov
movsl
test
int3
pop
or
das
arpl
pop
gs
scas
xor
out
pop
call
pop
jle
sahf
ja
sub
imul
push
jg
sbb
jbe
adc
icebp
add
aaa
push
outsl
jne
cmp
sub
pusha
sbb
adc
mov
dec
add
dec
insl
fsts
leave
mov
adc
scas
outsl
test
adc
and
popf
xchg
xor
jo
outsb
mov
sbb
push
and
or
dec
negl
insb
add
push
pop
inc
fucom
stc
pop
sbb
movsl
aam
lock
lcall
in
push
sbb
dec
jne
mul
inc
adc
push
imull
sbb
daa
repz
sub
sti
cmpsb
jbe
cli
int3
outsl
inc
das
push
loopne
xor
mov
subl
movsl
fnclex
pushf
adc
jmp
mov
xchg
sbb
pop
mov
das
jg
in
hlt
jmp
xor
mov
roll
jo
in
pop
mov
pop
leave
pop
shlb
fs
ret
fbstp
lock
lea
nop
jl
fwait
mov
push
mov
gs
fidivs
aas
lea
mov
ljmp
and
repnz
aaa
adcb
sub
cld
shrb
push
or
in
jle
push
inc
idivl
js
xchg
xor
imul
fdivrs
test
push
mov
mov
mov
pop
clc
lods
lret
hlt
clc
mov
clc
mov
pusha
adc
lret
sahf
call
enter
rcl
or
pop
add
or
pop
bound
mov
cmp
inc
lds
mov
adc
xor
inc
es
dec
xorl
cmc
lret
cmp
pusha
into
stc
sub
jp
xor
int
daa
scas
jb
cwtl
xchg
fadd
loope
loopne
jns
xchg
imul
fstps
es
or
cmpsl
lea
adcl
mov
in
inc
in
out
cmp
mov
push
into
pop
sub
cmc
jmp
mov
and
xchg
and
push
dec
jle
loopne
jle
push
iret
fdivs
fdivrs
mov
bound
sbb
loope
dec
push
jbe
xor
out
inc
xchg
out
test
aam
dec
not
push
repnz
sbb
push
add
dec
shr
gs
mov
out
cmp
iret
or
mov
or
push
cmpsb
jg
sbb
jle
icebp
mov
cmpsb
iret
mov
outsl
lahf
dec
test
repz
mov
bound
jl
out
pop
icebp
lret
sub
mov
jmp
rcr
push
xchg
xchg
mov
es
inc
icebp
aas
test
cltd
outsl
add
ds
push
ss
and
mov
faddl
icebp
repnz
das
test
ret
dec
lret
cli
mov
mov
mov
and
add
mov
xlat
mov
popf
in
xchg
mov
test
adc
pushf
shrb
push
mov
jl
ret
mov
mov
sbb
call
mov
movsb
or
mov
xchg
clc
loop
jo
inc
imul
dec
cmp
mov
fs
lea
mov
popf
push
stos
dec
push
test
js
and
pop
jns
adc
inc
or
mov
push
cmc
fucomi
lods
orl
loop
mov
scas
sti
mov
push
push
and
dec
xchg
aaa
push
dec
cmp
pop
inc
rcr
xor
pushf
xchg
mov
xchg
push
inc
popa
cmp
clc
rcl
and
sbb
movsl
scas
stos
ret
xchg
push
adc
xor
cmpsb
and
insb
xor
jo
out
cwtl
jae
sub
inc
cwtl
lods
pop
lcall
dec
xor
cmc
sub
das
sub
movsb
cmp
xor
pop
sub
adc
and
aad
mov
or
jnp
push
mov
nop
arpl
mov
gs
mov
ds
jb
jmp
push
jecxz
xor
mov
jnp
arpl
icebp
clc
lods
cld
push
aas
xchg
imul
idiv
dec
push
push
test
dec
idivb
std
push
inc
mov
xor
je
jae
aam
inc
push
sti
loope
sbb
fld
pusha
sub
xchg
lret
xchg
rcll
xlat
xchg
push
repnz
adc
mov
jl
mov
or
lods
xor
mov
lods
push
stos
jne
sahf
mov
sub
mov
or
das
aas
mov
jns
adc
xchg
into
test
jnp
jecxz
icebp
pop
sub
inc
mov
mov
push
xor
orb
push
adc
xorb
repnz
fistpl
aas
adc
lock
lock
and
jp
stc
roll
push
xchg
repz
fimull
or
popa
sub
js
shl
mull
add
in
push
inc
mov
mov
dec
inc
adc
aad
ficomps
push
or
or
cwtl
xor
add
or
mov
addr16
mov
test
lds
inc
jnp
enter
fwait
sub
mov
cmp
jmp
daa
or
xchg
fsincos
add
cld
mov
mov
inc
jb
scas
push
add
inc
xor
adc
loopne
imul
inc
jg
and
sub
push
push
jb
ljmp
imul
push
arpl
jmp
lcall
cli
fldenv
cmp
rcrb
incl
mov
cmpl
cltd
in
les
stc
test
int
and
repz
inc
decl
sub
out
cs
mov
add
in
js
shl
lret
outsl
iret
inc
jecxz
jno
xor
imul
sbb
out
sub
add
in
test
mov
mov
mov
sbb
cs
sub
or
jbe
leave
push
jmp
xchg
xor
pusha
cmc
lcall
divb
insb
xchg
imul
cli
mov
pop
ss
les
inc
les
enter
std
and
mov
flds
adc
fwait
cmc
test
and
aaa
cmpsl
fidivl
mov
push
jmp
add
out
outsl
clc
test
pusha
fstpl
ret
xchg
fistps
push
iret
adc
xchg
mov
ss
add
loope
push
xor
jno
mov
add
test
xchg
fs
pusha
repz
xchg
xchg
loope
cmp
mov
push
pop
push
outsl
or
stc
insl
xchg
shll
push
jl
or
lods
push
or
jp
cmpsl
and
jg
fiaddl
jnp
std
ret
add
add
inc
mov
sbb
mov
sub
xchg
adc
daa
mov
xchg
call
sub
out
stos
inc
adc
pop
jns
push
lea
pop
push
iret
xor
lcall
jno
mov
rcrb
stc
push
pop
enter
pop
insb
insl
or
jmp
dec
jb
pushf
xor
adc
loope
out
popa
mov
fcoml
movsb
sahf
cmp
sbb
or
adc
sub
dec
sbb
push
jne
cmp
popa
mov
pop
sar
daa
imul
rcrl
imul
push
mov
andl
imul
in
xchg
ffree
xor
mov
jo
out
dec
pop
in
jmp
xor
xor
addr16
push
sub
imul
xor
mov
pop
or
dec
inc
adc
ljmp
cmp
pushf
int3
jb
ret
out
pop
jnp
push
push
push
int
mov
xchg
xor
add
stos
mov
outsb
roll
push
int
jo
push
cltd
pop
js
mov
out
mov
pop
mov
fisttpll
and
fistps
jnp
dec
data16
push
xchg
cmp
int3
mov
mov
adc
ret
pop
mov
in
lcall
es
iret
add
lea
mov
dec
fs
rcrb
add
je
inc
adc
sub
in
adc
sub
or
pop
jnp
add
clc
and
insb
pop
sbb
fidivs
push
sub
adc
out
mov
mov
or
push
and
adc
insl
xor
mov
icebp
rolb
mov
rcrb
nopl
pop
cmp
lods
fwait
call
mov
inc
mov
jne
sahf
push
shlb
sbb
fdiv
lods
insl
xchg
add
cmpl
test
xchg
frstor
aas
fs
in
mov
sub
inc
and
pop
sarb
call
inc
xchg
int3
std
jg
cwtl
rolb
sub
popf
mov
es
bound
push
shrb
xor
mov
fldt
int
cmp
xor
adc
mov
jno
cmp
mov
scas
sti
mov
xor
xorl
push
xchg
cmp
jge
push
jnp
rcr
mov
icebp
movsl
adc
rolb
xor
pusha
pop
arpl
mov
arpl
cld
mov
cmp
xchg
jge
test
mov
test
js
adc
imul
fucomip
shrl
mov
mov
pop
add
xor
mov
test
mov
ja
jmp
sub
iret
add
in
xchg
push
sub
jno
iret
or
mov
arpl
sahf
mov
div
cmovb
popf
fisttpl
push
sti
gs
lock
std
xchg
in
addr16
and
mov
xchg
in
in
or
cmpsl
mov
push
lea
loope
adc
aam
jmp
fsubl
push
inc
pop
add
mov
or
jb
cmp
shlb
push
scas
fisubrs
iret
inc
xchg
addr16
mov
and
jnp
pop
pop
pop
lcall
jp
or
lret
daa
pop
test
mov
jge
jg
icebp
add
lret
in
bound
fisttpl
inc
mov
push
call
or
pop
popf
jbe
add
scas
rorl
mov
das
xchg
cmp
scas
ret
sub
out
rol
sahf
pop
in
test
das
xor
test
lcall
add
insb
ret
mov
pop
ljmp
jge
filds
ret
pusha
add
jp
xchg
nop
push
push
adc
mov
movsb
mov
sub
dec
dec
xlat
jne
lea
or
in
adc
push
mov
sbb
mov
int3
lret
push
adc
cmp
in
mov
mov
xchg
dec
mov
lret
mov
dec
lret
mov
push
adc
daa
add
jl
xchg
stc
adc
mov
insl
or
adc
xchg
and
push
push
ljmp
into
jae
cmp
out
aad
mov
inc
nop
aam
dec
aaa
adc
add
je
cmpsl
mov
das
mov
scas
sbb
popa
bound
mov
lret
popa
xchg
and
shrl
sub
mov
dec
inc
cwtl
pop
pop
nop
icebp
cwtl
ljmp
cld
dec
xchg
ret
outsb
scas
lods
jmp
outsl
push
sbb
xchg
lcall
cmc
mov
gs
inc
cmp
hlt
jno
dec
sub
movsb
mov
int3
lahf
icebp
sbb
movsl
or
testb
shlb
scas
sbbb
mov
dec
dec
cmp
lds
test
ja
out
and
or
aaa
or
pop
sbb
push
test
dec
mov
aam
ficoml
in
fimuls
cmp
outsl
pop
cwtl
add
mov
fistps
xchg
ja
or
jno
les
call
mov
or
jb
ret
and
fbstp
dec
shll
icebp
cmp
dec
xchg
in
inc
mov
mov
mov
std
mov
cld
and
cmpsb
sbb
xchg
filds
out
repz
jne
fsubrl
imul
ja
and
jnp
aam
jo
and
push
mov
loope
or
and
jl
fdivs
test
leave
ja
mov
pop
int3
inc
add
mov
scas
out
leave
cmp
rolb
fcomps
adc
or
gs
sub
sbbl
in
ds
sbb
add
add
mov
scas
xchg
pop
iret
insl
adc
cmpsb
scas
insl
push
shll
xlat
loop
cwtl
pop
and
or
push
mov
filds
pop
mov
inc
je
or
int3
cmp
sub
mov
es
shlb
je
jp
fsubrs
cmpsl
in
jge
out
pop
out
ss
lret
stc
jg
mov
cwtl
enter
cmpsb
hlt
ja
jp
cli
push
stc
std
nop
not
ret
xor
mov
repz
cmp
subb
fiadds
rcr
out
xor
adc
scas
xor
pop
mov
movsb
xlat
stos
scas
jp
pusha
or
pop
sbb
mov
je
pushw
mov
jle
mov
fs
pop
or
mov
xchg
jbe
addl
add
push
mov
out
lock
sbb
test
push
xor
or
push
fsubr
arpl
and
shlb
int
clc
push
daa
mov
pop
int
jl
adc
pop
pop
mov
or
and
inc
xor
lahf
mov
mov
push
dec
add
mov
popl
shll
outsb
mov
mov
push
fmul
dec
out
pop
lds
dec
mov
cmp
rcrb
loop
rcl
xchg
jbe
or
lods
sbb
or
jb
inc
push
jmp
bound
cmpb
or
and
mov
xor
sub
out
ret
xlat
adc
and
fidivrs
mov
mov
lock
insb
pop
jle
xchg
xchg
dec
and
dec
or
or
xchg
push
decb
cmpsb
out
or
lahf
adc
leave
sbb
repz
in
lods
sub
mov
je
cmpsb
sub
imul
daa
cmpsl
push
mov
or
add
ftst
arpl
fisubl
or
mov
mov
lahf
cmc
or
mov
xchg
mov
sbb
jp
repnz
popf
xor
mov
cmp
xchg
lret
jne
shlb
pop
adc
jnp
mov
call
jle
outsl
xchg
imul
lods
mov
out
add
pop
jns
mov
lock
mov
sub
jge
insb
neg
jp
cmp
mov
jecxz
add
lcall
xchg
shl
subb
xchg
mov
sub
inc
out
xchg
sub
dec
inc
movsb
scas
adc
xor
in
loope
scas
jmp
add
xchg
dec
push
data16
loope,pt
xorb
push
jecxz
test
mov
sahf
jle
mov
aad
mov
sub
push
mov
push
dec
push
xlat
push
fidivs
loopne
repz
adc
stc
xchg
fneni(8087
mov
fstpl
rorb
sti
repz
adc
adc
push
in
inc
or
add
cmp
rcrl
jae
pop
scas
ret
dec
adc
loopne
popa
leave
insl
jl
mov
out
mov
ljmp
mov
inc
inc
scas
jge
stc
outsl
js
or
dec
imul
xor
rcl
sarl
inc
push
jo
aaa
nop
inc
mov
add
mov
je
mov
pop
repnz
cli
cmp
jns
cld
out
mov
xor
inc
mov
push
mov
sbb
fs
in
adc
cmp
je
adc
andb
jmp
sub
sbb
sbb
sub
or
dec
ljmp
scas
in
cmp
push
xchg
sbb
xor
push
movsb
lea
pop
jmp
leave
or
es
sub
incb
mov
mov
lret
cmp
dec
adc
xchg
rol
jecxz
dec
int
fsts
ds
inc
and
outsb
cmp
sub
pop
xor
xchg
outsl
or
pop
add
or
sub
int
test
jecxz
mov
cmp
dec
int3
sbb
cmp
sti
lea
mov
and
enter
mov
ffreep
add
mov
and
fmull
lods
dec
pop
or
jbe
call
call
adc
dec
inc
and
int3
imul
and
and
in
mov
icebp
stos
and
lods
sti
out
cmp
push
out
insl
es
pop
add
jno
push
out
mov
test
loopne
bound
lods
push
mov
jmp
cmpsl
cmp
into
mov
int3
imul
jmp
inc
and
fdivs
leave
dec
add
imulb
mov
cwtl
ljmp
mov
and
mov
inc
xor
jle
push
in
arpl
cwtl
jne
in
xchg
pop
inc
inc
sub
cld
jns
imul
loopne
xor
movsl
mov
orl
jmp
and
sarl
and
ljmp
test
xor
insl
pop
sub
fstps
cli
cmp
ss
xchg
std
jg
das
pop
xor
je
ss
xor
es
lea
ret
pop
stos
and
cs
imul
fcomp
jp
push
movsb
sbb
mov
lret
fsubrs
push
rorb
sub
inc
pop
dec
add
popa
pop
xlat
mov
imul
xchg
test
scas
xor
sbb
push
xlat
xlat
adc
sbb
or
cmp
imul
les
xor
mov
call
sub
or
clc
add
clc
daa
inc
movsb
mov
cmpl
fdivrs
in
push
pop
jns
cld
jl
hlt
lods
sbb
imul
and
loope
sahf
or
dec
cmp
sub
das
add
aaa
jge
cmpsb
mov
dec
dec
push
sub
mov
clc
fcompl
std
xchg
mov
arpl
popa
je
mov
inc
sbb
inc
push
jns
add
jo
jmp
imul
dec
loop
sti
cmp
mov
pop
mov
addl
push
add
push
ficoml
lret
sarl
lods
adcl
sbbb
ret
jb
add
stc
add
insl
push
xchg
adc
mov
or
lret
sarl
leave
xchg
ret
pop
xor
pop
inc
mov
test
xor
cmp
mov
mov
and
jae
out
add
mov
and
push
xor
das
idivl
adc
cs
scas
mov
mov
mov
sub
mov
mov
out
mov
pop
pop
xchg
flds
loop
cmc
mov
mov
cs
and
loope
or
xor
inc
test
lock
push
adc
pusha
leave
dec
fwait
jae
xchg
sbb
xchg
mov
lods
cmp
push
incl
repz
out
adcb
xchg
or
cli
xlat
pop
pop
cmc
lahf
addr16
out
stc
int3
std
inc
jge
sub
pusha
sub
jecxz
test
aaa
nop
add
and
loope
mov
daa
mov
out
test
sti
sbb
sub
jmp
pop
fildll
pop
lods
xchg
je
std
add
les
dec
enter
sti
add
out
xcrypt-ecb
cmpsl
dec
movsbl
movsb
movsl
xor
xor
js
imul
fs
ret
pushf
push
rorb
xor
aam
leave
cmpsl
mov
xor
push
push
ss
out
mov
lods
stos
mov
lcall
sub
jmp
xchg
sub
mov
lahf
sbb
and
push
cmp
mov
jbe
dec
out
js
mov
xchg
aad
hlt
cmp
mov
add
jns
and
jmp
sub
cli
mov
pop
mov
push
cld
or
sub
call
and
fidivrs
insb
sub
push
ss
xchg
mov
sbb
and
addr16
sahf
ret
pop
aas
lret
es
xchg
sbb
mov
mov
adc
cmpsb
adc
jge
add
push
pushf
cmp
adc
inc
xor
or
fwait
ljmp
aaa
sbb
push
aam
mov
ss
scas
aas
je
mov
mov
and
jns
sub
push
std
clc
iret
jp
sbb
stos
jbe
add
in
inc
mov
test
cwtl
ret
std
xor
repnz
loopne
pop
scas
popa
add
sub
shll
shll
push
loope
sar
or
jp
sub
mov
jp
repz
int
adc
sahf
bnd
pop
push
out
rcll
repnz
gs
ds
push
and
mov
push
add
inc
dec
test
ret
stc
fmul
sahf
sbb
shrl
jb
in
mov
sub
cmp
call
pop
xor
mov
cmp
out
fsubl
scas
incl
adc
addb
fisubs
loop
nop
outsl
sbb
iret
xor
adc
adc
dec
sbb
std
shrb
mov
fs
int
daa
ss
xchg
jecxz
or
lods
xchg
adc
cmovge
stc
xor
iret
pop
jl
fidivs
inc
dec
fmuls
sub
push
imul
sti
rorl
notl
jb
icebp
in
xchg
out
inc
es
mov
test
push
inc
dec
xchg
adc
adc
faddl
xchg
mov
push
test
pusha
lds
ss
out
push
mov
dec
xor
popa
push
ja
out
leave
dec
mov
pop
pop
movsb
fsubl
das
je
out
adc
push
cmc
addr16
sbb
jl
std
loope
xor
outsl
adc
out
jecxz
test
jg
sub
dec
xchg
mov
inc
ja
mov
and
cmp
mov
cmpsb
test
mov
call
pop
cmpsb
ja
or
cmp
jo
and
xor
pop
mov
aam
xchg
aas
imul
aam
data16
push
sbb
lds
das
inc
push
out
or
push
clc
sbb
add
popa
mov
cltd
xchg
xchg
add
ret
push
sub
cmp
fwait
into
imul
arpl
sbb
add
push
push
ror
les
push
lock
cld
movsl
inc
mov
imul
pop
add
jne
sub
fisubl
lods
and
cli
mov
push
mov
ret
cwtl
scas
aad
nop
cmp
cs
xchg
fwait
mov
imul
jnp
push
rol
adc
push
jno
mov
mov
ret
jmp
rolb
enter
jns
cltd
shrd
mov
lahf
push
mov
shlb
lahf
add
add
xor
and
fidivl
shrl
push
movsb
mov
stos
pop
push
xchg
inc
std
pop
fdiv
in
jp
stos
push
jae
pop
hlt
mov
sbb
sub
lret
lods
push
ret
jmp
test
xor
imul
sti
stc
out
lret
inc
pop
les
arpl
jne
out
shr
sbb
and
dec
and
adc
mov
popf
repz
ret
pop
mov
shl
lret
or
movsb
push
and
test
xlat
and
pop
adc
iret
testb
hlt
cmpsb
movsb
lcall
xchg
out
or
ret
push
mov
rcrl
int
xor
cmp
adc
pop
push
shll
sub
pop
mov
mov
std
sbb
cmpsb
and
sub
xchg
mov
test
pop
icebp
inc
mov
xorb
push
pop
rolb
and
and
jnp
scas
ds
andb
aas
cmp
insb
jae
aaa
lcall
jnp
cmp
mov
jns
push
pop
push
ret
xor
dec
rorb
or
stos
js
xchg
hlt
xlat
lret
mov
cmp
rcr
stc
and
lahf
pop
leave
inc
pop
repnz
into
icebp
rclb
sbb
adc
ret
mov
xchg
jmp
call
push
filds
test
jns
outsl
es
push
ret
jo
nop
cs
mov
or
mov
jns
out
adc
call
push
inc
stc
mov
mov
fwait
out
pop
sarl
push
mov
out
cs
lock
call
mov
aas
push
sti
insl
test
ja
pop
nop
sub
dec
cmp
insb
lds
cmpsl
xchg
cmpsl
fcomps
inc
jb
xchg
jmp
out
pop
and
popa
aad
inc
addr16
xchg
push
fwait
outsl
mov
pop
shl
lret
sbb
or
shrb
xor
mov
mov
orl
pop
jo
lods
mov
adc
repz
decl
pop
xchg
loopne
bound
pusha
sbb
mov
subl
ret
fsubp
cli
mov
mov
dec
in
sbb
sbb
arpl
lcall
repnz
and
fnsave
rcr
clc
xor
lock
cmc
xchg
jmp
popfw
in
mov
mov
test
sbb
int3
aaa
pushf
loopne
xor
mov
xchg
fidivs
or
testb
lea
dec
xchg
call
movsb
lds
or
pop
jmp
mov
inc
rorb
jecxz
enter
mov
inc
lret
jl
shll
mov
pop
loop
mov
xchg
xchg
out
xor
ret
adc
cmp
mov
xchg
ljmp
cmp
movsb
mov
ljmp
mov
pop
jnp
in
aaa
into
into
inc
pop
xor
adc
pushf
mov
movsb
cld
int3
iret
xchg
or
and
mov
shl
push
xchg
int
mov
push
and
dec
aam
cltd
add
jle
lcall
xchg
mov
bnd
cmpsb
nop
push
push
dec
dec
xchg
iret
and
and
xor
sub
dec
hlt
cmpsl
test
mov
enter
outsb
arpl
xchg
mov
push
insb
sub
push
cmp
adc
mov
shr
jbe
outsb
inc
inc
fnstenv
mov
mov
push
inc
cs
insl
mov
sub
mov
cmp
dec
mov
es
negb
push
fsubr
test
sub
pop
xchg
jg
pop
jno
mov
bound
jg
push
pop
lds
or
mov
mov
mov
outsl
aaa
je
jmp
cmpsl
pop
mov
mov
lret
ret
cmc
adc
shrb
adc
xchg
lock
aas
pop
push
sbb
lret
or
popf
mov
xor
stos
stos
in
sbb
xor
loope
lods
pop
inc
insl
lret
jp
adc
adc
mov
hlt
cmp
or
es
adc
fcmovne
lock
sti
packsswb
cwtl
rcll
jnp
push
mov
jno
push
pushf
and
sub
and
lret
xchg
cmc
movsl
out
sbb
jne
lock
out
adc
scas
ret
sub
cld
or
sub
loop
cmp
in
sub
xchg
xchg
mov
and
call
iret
sahf
xchg
sbb
or
sbb
lret
hlt
test
lods
mov
call
mov
arpl
stos
mov
das
mov
or
cmp
pop
aam
in
lods
aaa
hlt
adc
dec
mov
out
mov
shrl
fldenv
insb
push
test
lods
mov
xor
pop
inc
icebp
aaa
dec
clc
aam
in
mov
fadds
test
imul
pop
in
outsb
lods
sbb
fmul
push
cmp
sbb
sbb
sbb
faddl
sti
cmp
push
in
sbb
daa
push
xor
pop
stos
jae
gs
mov
push
pop
cmp
insl
mov
sarb
sbb
int
pop
and
adc
xchg
decl
mov
test
mov
push
jns
mov
pop
ljmp
repnz
cltd
fmuls
aam
loop
fnsave
cmp
push
sbb
aam
adc
fcoml
adc
dec
cwtl
mov
mov
sub
pop
ja
sbb
in
xchg
sub
inc
xor
loop
subb
dec
out
mov
xchg
add
or
js
test
fstpl
and
repnz
scas
mov
out
cmp
addr16
sub
inc
pop
scas
das
mov
scas
mov
pop
inc
aas
jne
in
fildll
mov
jbe
loopne
fsubrl
sbb
cld
jp
sbb
push
fiadds
xor
dec
sbbb
je
iret
aad
fwait
div
or
fwait
mov
sbb
sub
mov
pop
inc
add
xchg
cs
and
subl
sarl
das
in
sub
lods
icebp
jns
daa
jnp
push
pop
dec
pop
int3
js
dec
cmp
stos
push
inc
je
xor
push
imulb
inc
inc
je
xchg
mov
jge
jp
lahf
mov
xchg
adc
cmpsl
dec
push
stc
or
popf
ljmp
pop
repnz
mov
fcomp
xor
cmpsl
test
xchg
jae
xchg
push
repz
jno
or
cli
push
push
adc
je
inc
xor
stos
pusha
loope
imul
ret
mov
bound
xor
test
or
popa
mov
dec
ret
loopne
inc
in
mov
fiadds
xlat
lods
ja
out
movsl
xlat
call
lret
xchg
adc
cli
cmp
bound
jp
jbe
in
fldt
mov
popa
popf
xchg
cmpsl
cmp
shll
push
out
scas
jmp
fsub
jle
jle
sub
xlat
aas
xchg
and
in
loopne,pn
popf
ficomps
mov
lods
jg
lock
cmp
iret
mov
ret
dec
add
mov
xchg
cmp
cmp
dec
lret
mov
and
cwtl
outsb
inc
mov
test
cs
enter
cmc
pusha
push
mov
clc
and
sbbl
sbb
fldcw
sahf
out
dec
or
les
js
mov
cmpsb
xchg
dec
incl
sbbl
adc
pop
pusha
pop
mov
jns
cmpsl
popf
sbb
sub
pop
test
mov
xchg
push
mov
es
call
fwait
pusha
cli
ficompl
adc
mov
jecxz
pushf
test
ja
test
lea
mov
sbb
xor
repz
std
repnz
xorl
inc
xchg
test
aaa
and
pop
fwait
adc
add
fwait
test
js
pop
sub
dec
lret
ss
sub
add
sbb
dec
or
popf
loopw
jge
sub
test
push
jnp
sbbl
xor
int
dec
or
mov
inc
stos
pop
xor
inc
xor
jo
or
sub
inc
fcompl
jmp
in
enter
sub
mov
mov
test
movsl
aad
jns
cli
icebp
imul
test
int3
incl
loop
cmc
cmp
add
in
add
push
add
sbbl
push
test
jp
mov
popa
int3
ja
in
cmp
or
lcall
jno
repz
mov
ret
mov
xchg
adc
push
mov
xchg
push
scas
xchg
jecxz
test
push
dec
mov
mov
out
or
jl
repz
push
and
nop
sarb
jns
sub
pop
fdivl
jl
lret
int
fwait
add
mov
mov
mov
ljmp
sub
cmp
xchg
clc
mov
push
pushf
addr16
lcall
xchg
mov
mov
dec
and
push
mov
lahf
inc
into
mov
jge
lods
xchg
jnp
mov
mov
sbb
cmp
ffreep
lahf
cmc
bound
ja
lods
push
int3
pusha
stos
mov
fdivrs
xchg
imul
movsb
mov
jbe
pop
mov
sub
mov
lret
mov
pusha
sti
mov
cld
subb
in
hlt
cmp
or
ffree
fcomp
sub
icebp
or
jcxz
fs
aad
push
dec
sahf
aam
in
dec
popa
mov
loope
push
outsb
xor
pop
and
test
mov
jmp
cltd
out
jecxz
rcr
mov
pop
into
out
or
jo
xor
es
insl
pop
fisubl
push
sbb
push
mov
imul
fstl
js
pushf
aam
sbb
sahf
xchg
add
mov
add
and
jp
adc
xor
inc
mov
cmp
xor
mov
out
fbstp
lea
fsubs
nop
repnz
pop
not
outsl
data16
push
push
ljmp
shrb
outsb
scas
nop
sbb
lret
or
add
and
movl
enter
aaa
dec
dec
mov
inc
adc
fiadds
cmpsl
mov
push
test
push
mov
xchg
or
push
pop
cmp
sub
or
fnstenv
int3
ret
add
cmp
add
push
push
pop
xor
lea
mov
shll
lcall
ja
or
push
fnstcw
inc
add
jbe
sbbb
sahf
dec
subps
out
cmp
das
insb
inc
ljmp
jmp
mov
mov
and
jns
adc
call
cmpsb
add
addl
aad
decb
mov
lret
sub
cmp
rol
pop
cwtl
dec
and
lcall
test
mov
mov
cmpsl
push
fs
xchg
add
lret
lds
int
xchg
xor
outsb
push
icebp
push
lahf
jg
xchg
lods
fwait
adc
cwtl
jne
adc
ret
push
notb
lahf
and
cltd
mov
hlt
push
leave
loopne
push
outsl
sub
andl
scas
xor
push
push
iret
in
dec
xchg
xor
and
dec
sahf
movsb
jle
pushf
push
sub
pop
sub
mov
inc
cmp
cmp
push
arpl
add
shlb
ds
lahf
push
push
sub
adc
lahf
push
lock
mov
ss
jnp
mov
adc
dec
adc
addr16
js
repz
test
inc
mov
fcmovnbe
dec
pop
enter
xchg
or
or
xor
jae
and
adc
pop
lds
pusha
xchg
mov
jbe
jb
sub
scas
xchg
pop
outsb
fidivrl
mov
or
mov
sub
add
xchg
inc
lahf
sarb
imul
mull
enter
dec
mov
into
addl
jp
cmp
mov
lea
movsb
sub
push
adc
je
jb
push
jle
fdecstp
out
stc
sarl
add
xor
addr16
stos
cmpsb
les
and
cmpsb
pop
pop
aas
and
dec
in
xchg
mov
cmpsl
mov
cmpsl
sbb
push
imul
or
in
fistpll
mov
dec
adc
xchg
xchg
ficomps
cmp
ss
cmc
sub
adc
cmp
test
daa
lahf
mov
imul
sti
mov
loop
xchg
jns
repz
sub
mov
mov
icebp
ljmp
out
jo
add
inc
lahf
push
rcrl
fwait
ret
push
bsf
gs
pop
adc
out
insb
mov
shr
test
xchg
mov
adc
lret
scas
je
mov
xlat
out
out
sub
aaa
aaa
adc
jmp
test
sar
xchg
adc
test
insb
xchg
sbb
and
lret
sarl
pop
xor
mov
sahf
mov
icebp
loope
out
jmp
xchg
fsubp
out
aam
xchg
mov
or
and
xor
shr
adc
out
lds
jne
cmp
cli
test
mov
sbb
loopne
cmp
and
ljmp
fadds
js
and
push
out
bound
push
mov
data16
fwait
mov
and
jecxz
mov
cmp
and
lret
insb
addl
lods
mov
in
mov
jae
testb
lahf
lcall
out
je
inc
mov
xchg
sbb
mov
pushf
pushf
push
lahf
bound
add
add
sub
bound
outsl
sarb
call
mov
fwait
jbe
sub
dec
mov
imul
inc
dec
dec
dec
mov
fisttps
xlat
scas
or
ffree
push
mov
popf
outsb
jno
in
int
mov
rclb
aad
addb
das
icebp
jnp
in
loop
hlt
iret
xor
push
dec
je
psraw
cli
fdivr
ret
int
mov
jae
add
jp
sbb
lret
aam
stos
insl
xchg
mov
idiv
in
xchg
or
dec
lcall
addr16
clc
rcr
sub
iret
loopne
clc
push
pop
cmpsl
addb
sbb
sha256msg2
add
push
out
and
int
pop
and
pop
push
inc
je
cmc
in
sahf
cld
scas
out
xchg
lcall
rdmsr
stos
mov
dec
jl
je
pop
dec
stos
stos
mov
add
cs
mov
call
fcmovbe
adc
inc
test
mov
xorl
shll
adc
pop
push
cld
cwtl
mov
mov
shl
popa
mov
jg
mov
pop
dec
pop
clc
add
xchg
push
sub
push
mov
paddd
mov
xchg
aad
mov
mov
mov
das
and
jnp
pop
decb
sub
adc
push
dec
and
pop
into
cwtl
rolb
sti
les
push
xchg
mov
cmovnp
xchg
ror
and
mov
xorl
insl
mov
and
lret
jp
dec
push
imul
inc
mov
mov
dec
cli
jmp
push
mov
pop
divps
adc
mov
repnz
jns
push
cmp
hlt
cmp
enter
dec
xlat
mov
mov
add
sub
jle
xor
cli
sub
pop
mov
cmp
pushw
cmpsb
jl
adc
dec
mov
jae
cwtl
fwait
mull
jg
sub
cmp
jp
arpl
mov
or
mov
insb
sbb
aaa
outsb
jo
imul
xchg
movsb
out
mov
iret
xlat
sub
or
jbe
xor
jbe
sarb
sbb
xorl
xchg
ret
insb
and
mov
cmp
cmp
add
inc
dec
pop
xchg
movsl
adc
dec
mov
pop
jp
dec
insl
mov
pop
push
insl
sub
addr16
adc
icebp
inc
mov
icebp
imull
jno
xor
out
pop
adc
fdivrs
push
aam
dec
adc
call
dec
in
inc
popa
sbbb
cwtl
paddsb
jp
lcall
or
lea
movsl
fisubl
jg
push
and
rol
pop
es
loope
jg
pop
fdivrs
or
jmp
gs
dec
or
mov
and
mov
movsb
mov
adc
pcmpeqd
arpl
xlat
jecxz
mov
cs
pop
in
fsubp
int3
xor
and
mov
enter
pop
cmpsb
das
insb
adc
orl
leave
dec
fs
xchg
cmpsl
inc
sub
jg
adc
mov
aad
outsl
shlb
sbb
xor
mov
jno
dec
mov
loopne
out
and
bound
cmp
arpl
pop
ret
mov
sub
test
test
ds
test
testb
movsl
sub
inc
mov
xchg
shll
adc
xor
xchg
arpl
cwtl
jns
or
push
dec
inc
cmp
add
sub
sub
sub
add
movsb
jecxz
and
aas
inc
xor
std
and
xor
cli
and
lods
and
cmp
sub
addl
jle
lret
xchg
imul
je
sub
shlb
xchg
xchg
aas
mov
and
stc
mov
int
mov
mov
cs
mov
mov
jnp
pusha
add
add
jle
and
push
pop
popf
xchg
push
gs
push
test
clc
sbbl
add
mov
lods
scas
sub
dec
add
pop
sub
mov
push
inc
cwtl
inc
mov
jg
addr16
test
pop
or
rcrl
lods
inc
pop
scas
call
mov
and
mov
xchg
adc
push
xorps
jl
and
xor
lods
or
in
adc
inc
into
imul
push
sub
push
mov
mov
inc
push
lods
and
clc
imul
iret
mov
and
mov
stc
rcrb
icebp
sub
inc
sbb
je
pushf
xchg
ja
xchg
xchg
mov
pop
stos
outsl
stos
sub
cmp
adc
inc
inc
scas
es
sbb
mov
ret
xor
popf
fwait
sub
and
cmp
pop
addr16
push
ret
jbe
push
stc
fists
mov
jge
xor
or
dec
mov
dec
sbb
and
imul
mov
pushf
jp
pop
int
push
jo
sbb
cli
in
hlt
outsl
mov
loope
in
fsubrl
in
aad
out
add
push
in
mov
sbb
sub
shll
cmp
cli
repnz
pop
inc
and
and
sub
xchg
test
ljmp
pop
mov
hlt
lcall
inc
mov
xchg
inc
push
mov
popf
sub
hlt
movsb
ret
dec
sbb
jecxz
in
lods
js
mov
or
sub
iret
std
pusha
or
adc
xor
and
and
pop
sarl
out
fs
cmp
je
mov
test
scas
push
outsl
xor
sub
dec
and
shll
idivb
push
lods
sub
ja
rclb
push
and
cmp
xor
int
in
cs
or
xchg
call
cmp
lods
sub
rclb
cltd
sbb
mov
lret
mov
jp
adc
jle
sub
adc
stos
loop
scas
cmp
jb
out
cmp
imul
mov
insl
push
test
inc
xchg
or
nop
add
push
scas
gs
in
or
lds
jecxz
dec
and
sbb
aad
dec
xor
fcmovnbe
fsubrl
push
pop
mov
stc
idivl
lock
push
mov
in
xor
sahf
cmc
xchg
mov
mov
mov
cmp
js
dec
inc
das
ret
xor
add
pop
mov
fistpl
inc
or
add
dec
out
cli
dec
jl
mov
inc
add
xchg
div
cs
jnp
aad
daa
in
ret
xchg
mov
mulb
in
pushf
push
subl
add
or
xor
or
stos
or
jp
daa
jns
test
push
pop
mov
aas
adc
mov
dec
out
xor
pop
mov
xor
xchg
fmull
xor
dec
daa
fnstsw
out
cmpsl
movsb
mov
pop
mov
ret
or
adc
inc
pop
psubb
outsl
dec
loope
lret
pop
mov
outsl
mov
sbb
daa
clc
test
pop
mov
outsl
mov
and
sbb
mov
pop
and
mov
outsl
or
mov
clc
repnz
loop
pop
out
cmp
inc
div
mov
pop
mov
dec
shlb
jl
int
iret
push
mov
mov
lret
adcb
push
pop
cmp
mov
fs
mov
ljmp
lret
mov
movsb
adc
inc
lret
out
mov
xchg
lock
pop
pop
jmp
jecxz
cwtl
test
dec
and
cs
test
ja
inc
xchg
pop
outsl
bound
out
jp
inc
pusha
or
mov
mov
jge
jg
aam
mov
fdivrp
fisubrs
mov
scas
daa
enter
mov
push
cmpsb
mov
paddsb
mov
ret
rcr
out
out
push
jo
mov
push
dec
jns
xlat
lahf
jp
jb
pop
out
pop
fstp
mov
dec
ficoml
fwait
xchg
jecxz
push
jnp
popa
hlt
dec
stc
bound
movsb
sti
inc
jle
ret
ds
sub
mov
lods
mov
push
mov
jl
loope
xchg
repnz
pop
xor
fisubrl
mov
xchg
clc
movsl
mov
push
xchg
mov
cmp
pusha
aaa
addb
cmpb
pop
lods
mov
add
push
cmp
add
stos
rcrl
xor
mov
and
in
pop
loopne
xchg
fcomps
dec
fmull
fildll
shlb
jp
mov
xor
lea
popl
clc
dec
push
fisubrs
pop
xor
jno
xchg
push
adc
inc
testb
sbb
dec
add
adc
mov
pop
stos
ret
xchg
mov
mov
mov
hlt
jae
orl
fidivl
sub
stos
sub
test
cmpsb
dec
sbb
movsb
or
cmc
fsubl
jne
pop
push
das
hlt
adc
jo
leave
shr
and
cmc
int
inc
mov
mov
insl
enter
insb
scas
and
sbb
jne
sbbl
dec
insl
jbe
dec
dec
mov
cmc
and
cs
cmpsl
stos
idivb
lcall
jecxz
sbb
ja
popa
in
mov
dec
loope
mov
push
cmp
test
xor
enter
and
mov
jne
sbb
mov
pop
idivb
imul
jbe
inc
pop
dec
test
pop
pop
xchg
int3
movsb
sub
dec
xchg
mov
jno
in
pop
divl
hlt
sahf
cmp
sti
test
xor
call
in
pop
push
push
or
pop
xchg
adc
sub
mov
dec
pop
insl
add
or
mov
cwtl
fcomp
fcom
dec
lods
mov
xchg
lret
cli
push
pop
les
clc
jg
mov
adc
mov
sti
call
pop
aam
bound
and
jle
xor
sahf
mov
and
das
and
iret
sbb
xchg
push
adc
jnp
and
pop
push
xchg
int
cmp
notb
hlt
or
mov
loop
scas
xchg
cmpsb
lods
mov
cmp
fisttpll
jo
cmp
xor
mov
mov
std
jmp
inc
or
mov
add
jb
popa
mov
lods
imul
adc
lods
movsb
mov
scas
out
dec
sahf
xorl
sub
jmp
dec
add
dec
pop
sub
add
loop
sbb
add
push
add
int3
repz
popf
push
pop
cs
aaa
fcomps
mov
into
dec
mov
inc
mov
cs
sahf
and
xlat
mov
jmp
rolb
repnz
mov
fstps
pop
loopne
test
push
mov
out
int3
pop
sbb
imul
pop
dec
cmp
and
sbb
or
fadds
movsb
dec
xor
add
fcoms
mov
cmpsl
mov
repz
cmp
or
jo
adc
out
cmp
pop
inc
xchg
mov
jnp
and
out
and
jbe
xorps
inc
and
dec
fimuls
in
leave
adc
popf
xor
repz
pushf
ja
add
aaa
jmp
and
inc
mov
mov
xchg
lret
scas
jge
dec
in
out
movsb
pop
in
ljmp
lcall
mov
cmp
mov
push
mov
imul
mov
add
movsl
push
and
cs
inc
sbb
sti
push
xor
mov
inc
sbb
fsts
ror
out
cmc
push
push
inc
mull
add
test
cltd
jb
cli
xchg
aas
push
rcrl
adc
pop
inc
data16
popf
js
sbb
xchg
jecxz
test
fwait
rorb
sbb
mov
aaa
inc
mov
push
gs
mov
popf
fistps
test
repz
aad
pop
js
jnp
xchg
sub
push
clc
aam
sarl
enter
lret
je
scas
xor
mov
pop
gs
bound
repz
sbb
test
fldcw
out
loop
jb
inc
jnp
jno
cmc
mov
dec
mov
cmp
adc
mov
iret
js
scas
imul
adc
int
test
test
mov
or
xor
int
enter
test
mov
imul
push
incb
scas
or
stos
dec
dec
bound
mov
mov
hlt
add
mov
dec
adc
jbe
sbb
pop
int3
out
and
lcall
sub
jmp
lods
sbb
add
dec
mov
add
sub
std
fdivr
cmc
mov
mov
nop
loop
inc
cmpsl
mov
mov
adc
xor
mov
and
loop
loopne
shrb
push
adc
or
inc
add
fwait
or
jp
aaa
inc
or
into
push
xchg
cli
jg
pop
imul
fwait
add
jne
shlb
add
dec
push
cmp
insl
rcrb
pop
lret
enter
add
inc
xor
int
mov
inc
paddusb
jmp
adc
lcall
and
push
andb
fldenv
ljmp
das
adc
xor
cmp
pop
out
mov
addb
jbe
fisubs
and
aam
mov
xor
ss
push
mov
jnp
or
movswl
imul
push
add
mov
mov
shlb
dec
mov
shrb
jo
cs
mov
fdivl
mov
sub
push
iret
cld
sbb
cwtl
push
inc
sbbl
dec
add
xchg
movsl
lahf
mov
jecxz
out
mov
inc
lret
lea
adc
scas
sahf
movsb
cld
sbb
punpckhwd
dec
das
pop
std
js
pop
mov
pushf
mov
repnz
repz
pop
mov
and
pop
outsl
mov
xor
mov
imul
xchg
movsb
sub
push
mov
jb
inc
push
pop
data16
lret
subl
pop
sub
leave
push
jge
push
and
sbb
lods
and
or
mov
sbb
into
sub
cwtl
inc
push
mov
sbb
gs
lea
add
xor
jns
jns
std
pop
shll
enter
mov
xlat
mov
and
and
ss
mov
incb
cmp
jo
dec
push
outsb
add
scas
jo
mov
mov
xor
push
sub
popf
fadd
mov
jno
xchg
adc
sub
dec
mov
mov
cmpsl
ja
paddb
pusha
xor
addr16
push
fadds
push
enter
push
mov
out
stc
test
fists
dec
loop
cmc
fcom
jle
into
stos
jmp
in
pop
cmc
loop
mov
cmp
imul
out
rorl
mov
sbb
sub
mov
mov
mov
inc
mov
dec
pop
loopne
push
repnz
push
scas
adc
or
push
bswap
clc
inc
es
iret
adc
into
xor
mov
imul
jmp
cld
imul
pop
cmp
shl
add
stos
ret
jae
lret
jo
cmp
mov
test
mov
xchg
mov
add
cmp
and
icebp
fmulp
nop
ss
ja
mov
mov
add
into
sbb
xlat
jl
xlat
lods
sbb
shlb
fnstenv
cwtl
sub
data16
sbb
and
insb
fbld
cmpsl
xchg
sbb
pop
mov
out
and
movsb
mov
or
or
mov
jle
mov
mov
adc
pop
in
inc
mov
sub
xchg
fsubl
popf
lahf
xchg
pushw
push
inc
rcll
jg
scas
add
and
js
and
loop
and
inc
push
push
dec
cmp
bound
mov
hlt
ss
xlat
dec
xor
out
clc
addl
xor
mul
scas
in
js
idiv
fidivrl
cmp
cmp
mov
imul
test
in
adc
mov
je,pn
mov
lods
shlb
mov
adc
or
addr16
and
shlb
iret
dec
mov
out
jecxz
into
fimuls
add
mov
push
xorl
jmp
ret
scas
stos
and
jne
cmp
cltd
mov
or
inc
mov
movsl
sbb
or
inc
cmpsl
xchg
stos
xchg
pop
ss
jge
imul
jbe
inc
fstl
lcall
push
lods
xchg
stc
enter
sbb
lret
rcl
int
clc
enter
subl
inc
int3
shrl
pop
ja
adcb
call
dec
cmpsl
sub
and
cmp
jmp
loopne
leave
push
int3
in
out
mov
xchg
fmul
mov
dec
and
adc
mov
stos
shl
adcl
pop
mov
out
popf
fwait
and
out
jge
in
loop
xor
movsl
or
jne
fldt
xor
adc
ss
int3
aad
pop
and
aam
cwtl
in
pop
cmpsb
add
jno
mov
jo
dec
mov
hlt
sbb
ss
cmpsb
insl
incb
pop
adc
xor
xor
loopne
test
aas
outsl
mov
in
pusha
dec
mov
mov
push
mov
jae
mov
enter
sub
test
pop
and
cmovl
loop
cmpsl
mov
xchg
imul
sbb
jge
inc
insb
fsubr
icebp
jecxz
ret
dec
mov
orl
inc
lret
in
pop
jbe
sbb
arpl
mov
sub
xchg
cwtl
mov
icebp
pop
outsl
adc
add
push
shlb
mov
and
imul
sbb
mov
std
pop
imul
push
ret
arpl
adc
xchg
xchg
insl
dec
xor
ret
cltd
sub
mov
cltd
hlt
sti
fcoml
cld
xor
sub
push
sbb
shlb
scas
orb
xchg
je
xchg
xorb
mull
int
sub
ffree
mov
xor
inc
out
sub
stos
or
xor
fld
pop
jg
fst
movl
cmp
adc
in
test
sbb
jle
loop
repz
lret
lcall
mov
movsl
adc
push
mov
sbb
cmpsb
sbb
xor
adc
ss
nop
cmp
add
aas
mov
dec
out
mov
push
out
movzwl
jnp
xchg
aaa
push
bnd
movsb
jns
leave
jno
sahf
ret
sahf
xchg
pop
test
fs
dec
lea
jns
mov
sbbl
cltd
push
xor
push
and
mov
test
faddp
sbb
push
cmp
push
jmp
mov
nop
mov
xor
mov
mov
jle
and
inc
fistps
ret
xchg
mov
lock
mov
dec
out
jno
xchg
ja
fcoml
ljmp
push
push
cmpsl
out
jnp
mov
cs
mov
mov
sbb
in
xchg
jge
or
enter
lods
xchg
sub
push
frstor
dec
xchg
inc
and
mov
dec
popl
cmp
or
or
dec
cmpsl
mov
xchg
sti
jge
js
push
mov
push
mov
push
push
push
push
sbb
inc
cmp
add
pop
cmc
pop
adc
stos
inc
push
clc
mov
cmc
mulb
das
sbb
pop
adc
jecxz
jl
mov
test
lds
add
xchg
lahf
in
scas
and
cli
jle
dec
test
push
and
stc
pop
aas
or
pop
aam
mov
cmp
and
adc
cwtl
test
adc
loope
xchg
je
push
imull
jg
inc
dec
in
mov
sbb
out
ret
je
pop
das
adc
outsb
add
or
xchg
or
lret
xorb
ficompl
add
rclb
mov
fadds
xchg
out
mov
out
and
orl
cmp
movl
push
mov
lea
jg
inc
test
mov
mov
push
cltd
jns
and
inc
and
andl
jg
mov
lahf
lock
mov
add
adc
sub
leave
out
in
sbb
hlt
lret
leave
andl
clc
cmc
xor
jne
mov
jne
lret
shrl
lods
loope
mov
jge
push
fwait
pop
loop
aam
pop
mov
push
sub
push
in
xchg
pop
jg
push
adc
shll
int3
arpl
push
popa
jo
pop
xchg
xor
xchg
mov
push
sub
icebp
jp
adc
and
orb
xor
repnz
ret
ss
adc
roll
out
dec
js
sbb
jg
or
nop
push
frstor
add
add
push
xor
sbb
rorl
cmp
jmp
inc
data16
push
jo
inc
mov
pop
inc
andl
mov
leave
push
mov
xchg
lock
ljmp
pop
sbbb
sti
fsub
loopne
lret
mov
iret
pop
jmp
int
jmpw
out
mov
sbb
push
dec
mov
adc
cmc
mov
sub
cmpsb
sub
icebp
cmp
jbe
sti
pop
push
adcl
xor
adc
rcll
cwtl
outsb
loope
lret
pop
jne
jge
sub
int3
sub
xor
or
out
ljmp
subl
sub
inc
fnstenv
dec
hlt
push
sahf
pop
sbb
xor
pusha
xchg
or
adc
xchg
fbstp
pcmpeqw
sarb
cs
rorb
mov
xor
push
cmp
mov
and
stos
movups
pop
dec
push
jp
xchg
insl
lret
loop
jmp
push
xor
out
arpl
lods
lcall
jnp
push
inc
inc
pop
jnp
pop
es
jl
xor
aaa
fnstcw
xchg
adcb
jp
test
call
push
arpl
out
sahf
mov
fdivp
and
mov
aam
arpl
xchg
arpl
sub
sub
insl
xor
pushf
push
or
out
mov
inc
nop
sbb
or
xchg
subb
cld
clc
mov
fidivrs
daa
addb
pusha
or
or
add
xor
cltd
pop
inc
mov
jns
push
addr16
sbb
andb
aad
nop
add
les
inc
test
push
jmp
mov
les
shlb
nop
aaa
push
mov
repz
xor
clc
test
out
pop
in
mov
dec
mov
into
xchg
mov
pusha
pop
add
xor
push
aad
sub
cmp
or
add
movsb
push
push
out
dec
ja
cmpl
je
inc
or
hlt
mov
mov
arpl
mov
push
mov
aas
mov
cmp
xchg
mov
pushf
mov
cli
mov
sbb
jmp
xchg
sarl
sbb
mov
pmuludq
or
std
mov
push
out
sub
das
xor
inc
arpl
or
pushf
ljmp
mov
inc
loop
enter
add
dec
mov
mov
and
out
add
mov
pusha
int3
hlt
pushf
sub
aam
mov
xchg
jne
and
or
mov
inc
push
test
mov
mov
xor
fcoml
xor
pop
outsb
push
dec
aas
sarb
mov
sahf
lock
fs
pop
enter
scas
lcall
out
lcall
xchg
dec
lock
scas
imul
loop
xchg
adc
push
pop
jnp
mov
adc
push
xorb
adc
into
ja
outsl
int
mov
out
movsl
or
outsb
lock
into
ret
ja
repnz
push
jp
sbb
dec
cmpb
push
xchg
and
shrl
dec
push
push
dec
fisttpll
test
pop
ret
js
sub
loop
in
mov
push
xchg
cmpsb
jnp
les
sbb
sbb
push
adc
adc
data16
lcall
xor
xchg
sub
pop
mov
out
idiv
lahf
dec
xchg
mulb
and
xlat
dec
cmp
data16
mov
cs
pusha
adc
jge
int3
scas
jb
cld
das
or
jne
fwait
imul
sbb
fsubp
mov
movb
push
xchg
xorb
fdivrl
mov
orb
jns
jns
outsl
jns
insb
inc
icebp
pop
int3
int
inc
ret
ficoml
das
mov
lock
adc
mov
add
out
xchg
aam
lahf
enter
push
test
test
xlat
and
cmpsb
and
cmp
push
repnz
lods
shlb
dec
mov
lahf
fs
xchg
sub
mov
rcl
sub
rorl
jne
fnstsw
rcrb
jp
sub
pop
xchg
and
pop
sbb
xor
mov
gs
sbbl
inc
sbbl
loopne
adc
roll
subb
dec
cmpsl
sub
jbe
adc
and
scas
lock
in
jnp
movsl
shlb
mov
cmp
sbb
push
repz
push
pop
and
lods
shrb
mov
sbb
or
out
push
repz
push
mov
leave
seto
mov
xchg
xchg
jo
xor
lahf
push
inc
out
lret
scas
push
int
in
data16
push
outsb
and
es
cmp
push
jnp
mov
int
push
mov
mov
xchg
mov
scas
shll
mov
aad
jl
stos
rorl
mov
lret
into
out
or
add
dec
xor
push
addr16
dec
mov
cmpsb
pushf
adc
mov
pusha
and
cmp
lcall
cmp
dec
mov
rolb
movsb
gs
inc
stos
pop
cli
jmp
mov
mov
dec
stos
aad
out
mov
xor
ret
pusha
push
pop
xor
call
pop
xchg
inc
push
je
movsl
lahf
lods
mov
cltd
jl
mov
test
inc
dec
xor
fistl
jl
mov
sahf
pop
mov
sbb
mov
scas
or
rorl
jmp
pop
ljmp
pusha
imul
xor
mov
xchg
aaa
pop
stc
xchg
pusha
cmp
add
mov
jmp
jno
out
fsubl
mov
cld
shlb
mov
shl
mov
stos
and
sub
leave
sbb
mov
sub
hlt
mov
sbb
sub
sbb
in
imul
adc
in
add
add
out
pop
sub
push
jle
sbb
sbb
adc
stos
ret
movsl
out
cmp
xchg
loopne
add
inc
or
mov
test
flds
jmp
cwtl
das
movsl
mov
data16
dec
xor
shrb
sarl
jnp
jge
push
push
rcrb
dec
notl
push
fidivs
lea
out
lods
jno
in
cli
sub
jmp
push
or
decl
sub
push
or
xchg
andl
add
jmp
addr16
xchg
push
sub
pop
mov
in
stc
lret
cwtl
addr16
test
xchg
cltd
stc
mov
push
pop
popf
stc
push
sbb
ret
pop
std
dec
mov
fidivs
push
roll
mov
inc
or
loop
je
stos
or
testb
popf
cmp
mov
sbb
add
pusha
stc
sbb
cli
mov
out
cmp
cltd
dec
lret
lahf
sbbl
mov
push
testl
movsb
push
adc
cmp
and
outsl
xchg
jle
in
aas
adc
scas
mov
mov
add
mov
xchg
sbb
pop
pusha
sub
js
hlt
push
dec
cs
mov
add
lock
sbb
add
fcoms
cmpsl
loopne
mov
mov
jl
mov
sbbl
icebp
pop
clc
mov
push
cmp
adc
iret
sub
int3
xchg
mov
pop
push
test
loope
or
gs
cmp
insl
mov
ficompl
dec
aam
ds
lret
imul
adc
push
and
clc
dec
out
adc
popf
push
insl
fsubl
push
jo
xor
or
jnp
in
imul
ret
and
add
mov
test
leave
sub
pop
xchg
movsb
test
sbb
pop
pop
mov
push
shll
fcmovbe
cld
xchg
gs
imul
in
leave
mov
sub
push
or
and
jl
mov
test
xor
in
xchg
mov
test
repz
pop
jle
sti
popf
jno
sub
dec
mov
xor
jns
lret
subl
mov
inc
nop
pushf
test
mov
clc
add
pop
cmp
insl
sbb
inc
push
pop
jb,pn
nop
cmp
in
stos
mov
pop
sub
pop
cwtl
test
push
sub
pop
das
negb
dec
cwtl
stos
daa
pop
add
cmp
dec
clc
jo
stos
repz
leave
fbstp
aas
pop
stos
ljmp
sti
rcll
andb
outsb
daa
sbb
in
push
dec
xchg
mov
jge
hlt
sbb
loopne
ret
clc
rorb
shll
or
lock
ljmp
in
adc
mov
inc
inc
jp
mov
scas
jae
subb
push
inc
aas
out
clc
je
jl
dec
flds
pop
cmpsl
jmp
stos
scas
push
or
fisttpl
scas
lds
jle
notb
out
and
jecxz
xchg
movsb
cmc
pushf
in
sbb
hlt
xchg
add
fdiv
insl
or
adc
sub
mov
inc
pop
addr16
and
or
jns
data16
mov
int3
pop
and
mov
addr16
mov
adc
cld
sub
pusha
aaa
pushf
dec
mov
out
mov
mulps
cld
pop
mov
adcb
inc
in
cwtl
ja
xor
push
mov
ja
insl
fcomps
mulb
push
mov
ret
out
lds
leave
fld
cs
pop
dec
fistpll
xor
pop
add
repnz
jp
dec
enter
pop
fxtract
bound
or
mov
mov
in
out
rol
fsubr
cmpsl
hlt
shrl
jbe
les
lock
aaa
jp
sahf
jle
push
mov
rep
mov
mov
jl
xchg
aad
add
fstpl
mov
pushf
inc
and
sbb
sbb
test
ficompl
xor
insb
pop
adcl
leave
cwtl
cmpsl
lds
sbb
sbb
dec
lret
les
xchg
cmp
cmpsb
dec
fisubrl
divb
in
pop
stos
sub
push
jb
inc
out
xor
and
xlat
pop
test
les
inc
imul
mov
sub
cmc
int
out
aad
icebp
xchg
ficompl
cmpsb
pop
jl
push
dec
pusha
jg
cld
inc
shlb
aaa
jne
rcll
xchg
xchg
out
hlt
mov
cltd
pusha
out
cmc
cmp
mov
fwait
mov
adc
imul
stos
dec
and
icebp
repnz
cli
shll
cmpsl
xchg
add
fst
fbstp
repz
iret
hlt
daa
mov
ds
and
mov
jne
addb
fwait
inc
xchg
sub
fs
pop
lods
in
xor
inc
dec
push
sub
or
or
stos
dec
mov
push
xchg
sbb
popf
int
pop
xor
push
push
lock
mov
lret
stos
or
lret
cmp
scas
jae
in
mov
add
add
cwtl
mov
adcl
dec
data16
movsl
hlt
ret
popf
les
lahf
mov
jl
xor
sbb
xor
insl
cmc
xor
dec
sahf
and
mov
dec
sbb
je
movsl
sti
xchg
inc
sub
xchg
jg
pop
push
bound
dec
loope
adc
adc
lods
push
pushf
push
inc
arpl
jb
jno
and
adc
jge
push
xchg
mov
fwait
and
push
lock
adc
adc
rcl
pop
data16
popf
jp
inc
jnp
fidivl
out
xor
jg
push
push
jle
test
xor
sarb
xor
and
cmpsb
or
or
dec
mov
mov
jecxz
jbe
cmpb
xor
test
aaa
popa
sarl
xor
enter
pushf
icebp
push
mov
cmp
pop
clc
adc
movsl
push
call
sbb
mov
fdivrl
mov
mov
fsubrp
mov
movsb
ret
dec
cmp
sbb
mov
push
imul
test
mov
xchg
subb
std
xchg
or
jmp
jae
mov
xchg
lock
and
push
sbb
xor
mov
mov
int3
sbb
test
cmc
mov
mov
int3
enter
outsb
pop
xlat
int3
pop
aad
in
xcrypt-ctr
cmpsl
filds
test
pop
int
push
jmp
mov
jmp
xchg
mov
push
fwait
cltd
or
adc
cmp
pop
cmp
xor
sbb
scas
inc
sti
xor
push
cltd
fdivl
faddl
lret
loopne
xchg
dec
jp
into
dec
icebp
and
call
mov
and
in
mov
xor
enter
mov
ja
mov
mov
xlat
jmp
dec
sub
sub
ja
pop
sbb
and
jnp
ret
or
rorl
cmpsb
repz
out
loop
cltd
push
das
cmp
dec
cmpsl
insb
adc
jae
cmovno
or
or
jmp
lret
bound
pop
push
mov
in
iret
cli
imul
adc
xlat
cmp
push
inc
sbb
xor
clc
movsb
rcr
in
repz
ret
sbb
mov
inc
or
test
mov
cmp
mov
cld
mov
push
jno
xchg
cs
jmp
inc
sbb
push
mov
mov
enter
test
nop
ret
lods
mov
daa
push
xor
and
cltd
inc
pop
xor
xlat
hlt
into
add
cwtl
pop
push
test
pop
jno
adc
pop
lock
jbe
xor
addr16
fistpl
das
fdivp
out
cmpsl
push
loopne
fistl
in
xchg
outsl
sub
pop
jno
adc
lret
das
clc
cmp
in
mov
mov
and
sub
xchg
out
test
gs
repz
mov
xchg
lock
js
pop
adcb
xor
insb
les
mov
ja
jge
lahf
mov
and
sub
loop
data16
pop
sub
mov
fsubs
scas
test
lock
mov
addb
cmp
xor
mov
in
popf
push
jg
push
lods
mov
aad
aaa
lahf
lret
pop
aaa
pop
lds
xor
pusha
sub
stc
pause
push
jmp
fnstsw
in
fidivs
inc
or
repnz
outsl
inc
out
mov
inc
das
ljmp
and
int
cmp
sub
testl
xchg
incl
dec
jmp
shll
fdivs
mov
mov
pop
and
push
mov
add
pop
cmpsl
sbb
inc
stos
sbb
pop
jns
xlat
daa
push
daa
mov
jno
orl
nop
outsb
js
sub
inc
test
std
add
mov
in
jne
adc
out
mov
push
cmp
xlat
into
vpaddw
pop
jge
test
scas
mov
cmpsl
pop
sub
xchg
hlt
shr
adc
push
pop
outsl
cmp
mov
sbb
sub
mov
mov
or
and
movsl
call
decb
cli
nop
ds
jo
add
mov
cmp
in
xor
xchg
adc
jae
cli
jo
mov
mov
popa
inc
push
les
xor
jmp
cmp
xchg
cmp
bound
or
inc
mov
mov
aam
notl
jbe
sbb
mov
sub
nop
insl
icebp
cmp
fisubs
fists
int
inc
js
bound
mov
stc
mov
sbb
sti
inc
int3
xor
scas
cmpl
arpl
ret
das
outsl
fwait
xchg
arpl
xchg
push
leave
clc
push
enter
fidivrl
jo
mov
movsb
in
mov
xchg
fcoms
jp
repz
xchg
mov
and
pop
jmp
test
and
sbb
dec
aad
xchg
pop
pmaxub
xchg
sub
aam
and
sub
sub
xchg
mov
lcall
mov
xchg
pop
adc
mov
es
dec
mov
and
dec
mov
stos
push
sub
ja
jnp
xchg
push
sub
push
sbb
jge
in
sub
lahf
pop
cs
sbb
out
into
jb
xor
mov
scas
push
test
adc
in
cmpsb
jle
push
mov
cltd
call
pop
nop
and
push
push
dec
lret
lret
jb
pop
mov
test
movsb
inc
lret
mov
dec
shll
mov
push
iret
addr16
and
fistpl
inc
mov
mov
dec
jl
sahf
add
loopne
push
and
add
leave
mov
adcl
pop
fwait
ljmp
lahf
xor
jne
aaa
pop
adc
scas
rclb
lret
add
xchg
push
je
in
push
xor
outsl
and
dec
pushf
and
mov
xlat
je
adc
or
or
lcall
xor
xchg
adc
sub
cmp
mov
xchg
add
adc
push
adc
int3
ljmp
test
mov
pop
xchg
cmp
push
mov
push
shrb
and
adc
xor
mov
push
and
dec
and
cmpsb
mov
cmp
mov
sbb
je
or
loopne
and
into
sub
and
jp
mov
scas
rcrl
in
xchg
cld
jge
mov
pandn
mov
shlb
adc
icebp
push
sbb
fucomp
mov
sahf
add
dec
mov
pop
dec
lods
inc
mov
aad
fbld
cltd
mov
sti
cmc
loopne
xlat
mov
sarb
push
test
jns
scas
in
jnp
shrl
cmpsb
pushl
and
imul
scas
test
xor
ds
and
mov
xchg
inc
inc
jae
or
nop
mov
hlt
sub
mov
add
jb
stos
lock
inc
aam
ja
test
outsl
inc
int
push
int
pop
daa
int3
enter
inc
or
scas
imul
mov
les
push
fmull
cmpsb
decb
ds
dec
test
aaa
dec
cmpsb
repnz
sub
push
aaa
mov
in
sbb
ljmp
cwtl
sub
jg
fucomip
jnp
xchg
outsw
lods
push
pop
add
das
rcrb
je
mov
cmpsb
repnz
push
xchg
jo
jne
in
mov
add
xor
sbb
xlat
stos
and
and
dec
xor
xor
push
cmp
push
mov
dec
sbb
ss
test
mov
mov
inc
add
sbb
pop
mov
sub
push
xchg
gs
dec
push
push
lods
cmpsl
movsl
pop
and
sub
lock
cwtl
push
xchg
add
das
push
push
xchg
or
jl
pop
push
inc
cmp
lds
push
sbb
pushw
xchg
mov
pushf
cwtl
outsl
ret
cmc
jle
mov
jns
cwtl
jecxz
stos
ds
dec
cs
mov
xchg
add
lcall
out
inc
inc
arpl
fs
fscale
mov
lcall
test
cmp
xchg
cmp
pop
imul
and
test
repnz
stos
inc
pop
mov
popa
dec
ret
aas
cmp
xchg
sub
sub
cld
in
xchg
dec
leave
dec
mov
rclb
imul
lods
xorl
mov
bound
xchg
out
xchg
xchg
in
das
clc
jo
inc
lds
pop
int
xchg
cli
mov
ficomps
mov
sar
inc
and
ja
insb
jmp
sbb
sbb
push
stos
push
inc
incl
test
fdivrl
push
movsb
and
call
aas
jle
or
xlat
pop
push
adc
adc
sbb
sbb
stc
or
es
rol
add
fsubr
adc
movsl
mov
mov
sbb
jl
bound
push
fistpl
je
pop
mov
fmul
mov
adc
filds
mov
xchg
jle
or
sbb
out
push
jmp
sub
dec
and
xchg
sub
jl
aam
pushf
push
jb
mov
and
sbb
divl
sti
xor
mov
pushf
clc
push
aaa
cwtl
hlt
aad
pusha
cmp
icebp
pusha
sub
mov
push
aaa
fsubrs
lret
sub
sbb
push
push
ret
aam
ror
loope
mov
mov
or
lods
xchg
stc
push
cltd
inc
or
nop
es
jno
pushf
fisubrs
in
test
lods
mov
mov
sub
jo
mov
shrb
mov
jns
test
push
jg
or
and
push
int
outsl
cwtl
xchg
push
xor
les
insb
and
imul
iret
sub
ds
jg
inc
bound
js
ss
bound
rcrb
in
push
adc
jecxz
in
push
mov
mov
loope
loopne
aad
sbb
sbb
in
popa
pushf
jo
pushf
mov
inc
movsl
lret
les
mov
mov
and
out
pop
xchg
lret
iret
pop
inc
arpl
add
test
jns
jno
loope
data16
jmp
iret
daa
ds
repz
xchg
jae
je
pop
into
xchg
sbb
push
xchg
lds
ss
push
adc
out
mov
jecxz
and
jge
icebp
and
and
shlb
mov
int
test
xchg
ds
mov
mov
hlt
arpl
add
pop
fistps
add
sub
push
xchg
push
inc
aaa
and
mov
flds
lock
int3
sbb
pop
mov
fsubs
adc
das
dec
es
outsb
mov
dec
int
call
aam
dec
sbb
cmp
push
add
push
or
leave
pop
mov
jb
arpl
je
or
and
repnz
pop
sub
dec
push
or
jae
and
dec
hlt
orl
dec
mov
and
jp
rclb
and
mov
mov
lcall
cwtl
and
sti
add
jmp
mov
or
add
push
push
sub
pop
sub
out
push
lea
push
jno
sahf
xor
pop
bound
and
push
cmpsb
mov
push
xor
ds
loope
or
adc
cmp
cmp
xchg
push
mov
das
sbb
jnp
lea
lds
sub
fiadds
lds
cmp
out
pushf
mov
push
pop
mov
repnz
outsb
and
ss
jp
insb
sub
fldl
lea
cld
leave
sbb
and
insl
ret
fiadds
fs
in
mov
jle
idiv
loope
icebp
mov
push
inc
sarl
in
and
std
push
dec
jge
movsb
mov
push
sub
sbb
xor
sub
adc
imul
pop
mov
in
sbbl
jnp
in
scas
imul
cmpl
mov
xchg
jge,pn
xor
push
aaa
inc
sbb
lahf
lea
in
leave
out
fsub
rep
dec
imul
xchg
mov
xchg
inc
out
pop
loope
xchg
xchg
push
push
sbb
call
xor
push
jl
push
pushf
mov
loopne
int3
loope
scas
repnz
es
sti
cmc
inc
insl
in
das
pop
mov
jns
add
icebp
jb
lods
and
dec
jo
xor
das
jo
ljmp
nop
ret
mov
les
inc
mov
cmp
pop
jg
push
lds
and
adc
fs
imul
pop
stos
repnz
aaa
adc
cmp
sub
mov
mov
inc
cmpsl
mov
sub
test
pop
pop
jo
cmp
fistl
insl
inc
ljmp
imul
and
pop
cmp
xchg
xchg
pop
pushf
and
icebp
dec
imul
cwtl
fisubl
add
daa
rol
out
jb
push
stos
andl
adc
sbb
testb
mov
xchg
outsl
pop
and
ss
mov
dec
pop
je
jno
cwtl
hlt
mov
leave
mov
xchg
cltd
mov
fs
shlb
insl
sbb
jae
sbb
add
mov
fcomp
mov
jg
js
mov
mov
xchg
loopne
sarl
and
push
mov
and
test
stos
rcrl
test
adc
pop
xchg
jg
lret
inc
out
sti
mov
hlt
stos
iret
hlt
lcall
jmp
push
jmp
inc
cmpsl
xchg
pop
xchg
xchg
in
js
xchg
and
lret
rcl
shrl
pop
xchg
fimuls
and
outsl
sbb
sbb
and
out
fsts
and
cmp
test
jle
mov
mov
add
xchg
push
push
mov
jne
dec
lcall
test
jl
xchg
mov
and
pop
popa
adc
movsb
and
mov
jnp
and
lods
or
mov
add
jl
jp
call
mov
xchg
dec
mov
mov
mov
push
inc
sbb
mov
mov
pop
mov
mov
jbe
sbb
dec
xor
xorl
loopne
jle
mov
adc
stc
push
enter
xchg
pop
add
xchg
ss
push
jbe
jecxz
scas
sbb
decb
daa
out
jbe
repz
aam
xor
cmp
pop
mov
add
je
das
fs
dec
inc
and
adc
jl
gs
int
adc
mov
xchg
fsts
aam
sub
add
nop
pop
sub
gs
dec
mov
adc
pop
xchg
mov
imul
push
adc
xchg
cmp
xchg
inc
jge
dec
pop
es
aam
xchg
cli
mov
jecxz
lock
aaa
sar
add
add
dec
out
and
rcl
lahf
shrl
out
into
and
cmp
sahf
scas
mov
adc
ficoml
int
cmc
cmp
add
mov
fs
inc
insb
arpl
lahf
or
adc
sub
mov
icebp
or
movsl
mov
mov
leave
jle
rcrb
fs
xor
dec
or
ficoms
adc
lds
test
pop
mov
xchg
ds
pop
loope
mov
popf
call
or
push
push
jmp
fwait
mov
mov
cmp
arpl
xchg
cs
mov
pop
rcrb
mov
xor
in
jae
push
pop
mov
mov
xchg
test
outsb
adc
fistpll
mov
divl
mov
cmp
jbe
out
mov
lcall
jnp
insl
cmp
loope
movsl
aas
stc
mov
pushl
pop
movsl
mov
roll
xchg
pop
insb
mov
pop
and
imul
ljmp
addr16
xor
addr16
and
cmp
inc
mov
xor
scas
in
ds
jmp
ret
push
sahf
sar
adc
ret
push
cmp
dec
inc
mov
cmp
aas
inc
arpl
rorl
jns
in
ja
gs
pop
mov
lret
aas
icebp
je
cmc
dec
and
or
std
mov
mov
mov
lahf
cmpsl
jnp
jmp
nop
dec
scas
aaa
mov
jg
cmp
pop
ss
mov
inc
imul
sbb
adc
pop
insl
notb
pop
xor
pop
push
cmc
sarb
cltd
jnp
push
clc
mov
stc
in
stc
int3
or
out
out
fisubrs
add
popa
cmp
fs
xchg
jno
add
and
jb
push
mov
mov
ret
adc
jno
cs
xor
or
dec
ss
and
rorl
rcl
dec
mov
xchg
xor
popa
dec
sub
stos
pop
xchg
push
dec
shr
inc
xchg
add
sub
jbe
popf
xlat
mov
mov
aad
sahf
or
xor
add
movsl
lods
adc
test
xor
xor
fsts
mulb
add
cltd
ss
mov
push
data16
iret
mov
imul
icebp
sbb
dec
lret
les
in
add
mov
push
mov
jp
mov
jp
mov
repnz
push
sahf
cltd
mov
repnz
adc
dec
mov
out
jnp
mov
mov
aad
out
std
aas
jge
pop
or
mov
pop
cmp
aaa
xor
sahf
mov
mov
sarb
cmp
mull
test
jl
mov
mov
mov
push
out
icebp
ret
test
inc
dec
cltd
mov
xor
cmp
jle
sbbb
movb
pop
imul
sbb
les
sbb
jecxz
adc
dec
lods
dec
inc
ret
adc
in
mov
dec
jmp
iret
loopne
lcall
xchg
sbb
mov
scas
or
mov
lcall
repz
mov
mov
loope
adcb
pop
shrl
popa
lret
adc
fisttpl
mov
cmp
leave
and
stos
adc
mov
mov
dec
shlb
rolb
adc
insl
lcall
je
sbb
addb
sarl
ds
push
idiv
loope
add
scas
lds
jl
nop
leave
jmp
sub
mov
idivl
mull
mov
insl
fisubrl
jle
rcrl
lock
pop
scas
add
ret
and
dec
mov
pop
lahf
cmp
in
and
test
shlb
mov
leave
xor
and
add
clc
lret
test
mov
mov
pop
add
xlat
cmp
jg
mov
mov
notl
mov
inc
jecxz
scas
hlt
add
jle
xchg
sub
or
xor
xchg
cmp
aad
pop
pop
jae
push
xor
or
popf
in
clc
and
sbb
addr16
ret
jmp
pop
cmp
loop
sub
fimull
adc
xchg
out
xor
add
popa
out
and
push
fstl
out
mov
nop
jecxz
xor
pushf
fwait
add
repz
xchg
popf
push
adc
mov
add
xor
pop
aad
cmp
xor
inc
pop
repz
imull
jge
out
jmp
fistl
xchg
xor
or
jg
out
adc
add
xor
pop
call
dec
or
add
ss
cmpl
pop
cmp
mov
pop
pop
jno
adc
inc
pop
or
hlt
paddsw
std
add
xor
cmpsb
je
pop
mov
in
shlb
movsl
cmpsb
inc
loopne
xor
push
sub
adc
pop
pop
repnz
ljmp
fsubs
shlb
jl
jae
insl
shr
jae
mov
out
jo
cmpsl
orb
pop
lock
ja
adc
mov
lcall
jecxz
xor
sub
lds
insb
sarb
jbe
je
mov
push
shrb
dec
gs
lds
adc
mov
push
add
js
mov
xor
or
imul
and
mov
imul
pop
push
push
mov
gs
fdivs
and
inc
pop
mov
sbb
aaa
pop
popf
sub
out
outsb
mov
in
rcrb
adc
shl
mov
movsb
out
sub
mov
adc
mov
scas
jg
adc
xchg
gs
lods
xchg
int
mov
pop
mov
cld
or
pop
push
jne
sub
cltd
leave
ss
jecxz
repz
mov
cwtl
mov
test
imul
ret
xor
pushf
jno
repnz
loopne
mov
mov
or
out
xor
lret
callw
jbe
inc
jl
mov
pusha
mov
add
icebp
xor
xor
mov
xchg
push
into
dec
dec
fdivl
insl
outsl
lods
push
ret
js
lea
mov
out
mov
cmp
cld
scas
mov
dec
mov
jno
push
jnp
sub
or
loope
push
loope
fiaddl
movb
stos
xchg
lea
add
pop
outsl
jo
negb
in
stc
jg
pop
jecxz
loopne
jbe
sbb
test
inc
dec
mov
sbb
or
lahf
jle
push
or
mov
mov
in
test
out
sti
xchg
sub
mov
loopne
sub
bswap
xor
mov
add
jg
pop
outsl
stos
orb
sbb
xchg
das
adc
push
orb
lret
pop
sub
aas
xchg
mov
sub
scas
cli
insb
js
sbb
push
loopne
add
push
add
stos
mov
fwait
sbb
stos
xchg
imull
movsb
fwait
mov
xchg
lds
repz
jae
dec
popf
or
jae
adc
sbb
pop
cmp
xchg
push
adc
js
pop
sbb
dec
mov
ficompl
cmp
or
stos
jne
daa
xchg
fs
scas
or
je
cmp
jg
inc
popf
hlt
inc
sahf
loope
repz
or
xchg
popf
stc
mov
mov
pop
and
mov
out
pop
pop
push
sub
movsl
inc
in
mov
lods
sbb
mov
in
adc
push
out
sbb
daa
mov
lea
xchg
jle
enter
or
fisttps
ficompl
add
lcall
lock
adc
insb
sub
popa
les
lods
imul
iret
mov
out
push
pop
repz
mov
lock
xor
add
or
sub
push
mov
mov
test
mov
xchg
movsb
xor
psllq
add
xor
bound
pop
les
pop
movsl
ret
cmc
icebp
adcb
jle
mov
cmp
sbb
sub
loop
jns,pt
sub
lret
mov
and
or
jo
mov
and
sbb
inc
dec
and
das
cmpsb
jo
test
popf
mov
loop
loopne
cmpsl
sbb
xor
inc
outsl
inc
adc
movsl
cmpsb
xor
rorb
je
xor
inc
xchg
mov
lock
pop
call
push
pop
sbb
enter
idivl
lock
inc
or
scas
inc
out
xchg
icebp
xlat
mov
or
sti
leave
leave
dec
in
xchg
push
adc
or
dec
dec
xchg
mov
stos
cmp
mov
xor
xor
push
dec
and
shrb
pop
test
mov
xor
xor
popf
icebp
nop
adc
hlt
scas
test
mov
bound
mov
mov
bound
mov
add
js
movl
lret
push
xor
pushf
aam
cmpsb
cmp
fisttps
and
aad
stc
jmp
pop
test
add
add
xchg
das
fcmovnu
mov
jmp
mov
and
addr16
movsb
pop
pop
mov
sub
fisubs
or
fstpt
scas
mov
and
push
or
add
sub
jne
aam
sti
in
pop
and
or
or
lcall
int
inc
jns
mov
out
xchg
js
loope
adcb
aaa
and
test
pushf
dec
mov
mov
dec
out
ret
test
imul
fidivl
inc
sti
das
imul
jle
and
test
clc
lret
je
scas
icebp
arpl
fsub
push
add
test
and
loope
add
or
stos
cltd
add
orl
stos
pushf
pop
jmp
lahf
cmc
or
jns
ljmp
push
cmp
hlt
pop
in
xchg
inc
dec
dec
sar
jg
out
jmp
out
out
ret
stos
push
arpl
lea
int3
out
jns
lret
daa
push
sbb
adc
aaa
jmp
xor
cmp
test
mov
out
outsb
adc
clc
dec
adc
xchg
mov
inc
adcb
lock
fisubrs
cltd
xchg
fsubr
push
mov
adc
push
mov
push
or
pop
xchg
and
imul
lcall
or
and
pop
insl
and
lahf
mov
fidivs
hlt
nop
mov
xchg
sbb
popl
sub
inc
mov
pop
or
out
rcl
push
ja
inc
jmp
stos
clc
ljmp
cmc
inc
mov
adc
stos
loopne
lahf
test
dec
xchg
jne
ret
adc
mov
cmp
lds
add
aam
iret
xchg
bound
inc
and
stos
aad
jno
cld
add
mov
mov
outsb
and
movl
out
add
popa
or
lret
add
mov
mov
sbb
scas
into
aaa
hlt
sbb
pop
pusha
inc
cmp
loopne
push
stos
mov
in
ds
and
out
popf
ja
pop
jns
xchg
test
stc
popf
mov
mov
call
imul
lahf
sub
movsl
rcrl
out
loope
sbb
outsb
mov
dec
sbb
xchg
in
inc
sbb
cmovbe
and
pop
jl
pop
insl
notl
sahf
js
data16
or
mov
js
or
mov
add
push
cmp
ljmp
xchg
and
xor
sub
out
cmp
xor
xor
and
and
and
xchg
stos
sti
les
add
mov
out
and
mov
repnz
cmp
loop
jecxz
int3
mov
push
hlt
ret
jbe
jecxz
jo
inc
cmp
inc
jbe
jp
fsubrs
imul
jbe
lods
and
scas
gs
rolb
cmp
dec
js
xlat
sarb
xchg
std
and
outsl
ret
and
outsl
jle
or
fwait
sub
inc
inc
jne
enter
frstor
sub
subb
mov
ds
pushf
js
call
stc
mov
dec
test
test
lahf
dec
out
out
fsubrs
imul
jnp
icebp
xchg
pop
mov
sti
xchg
adc
and
adc
adc
sbb
in
jle
scas
scas
xor
and
cwtl
adc
pop
mov
sub
jnp
into
jnp
and
inc
sbb
add
into
adc
mov
xchg
movsl
or
bound
test
xchg
daa
jno
pop
rorb
test
dec
clc
mov
lock
push
xor
xor
sub
ja
cmpsl
adc
cmp
or
roll
inc
push
sub
adc
inc
mov
inc
lock
dec
clc
inc
mov
lahf
mov
sti
sti
mov
and
mov
lods
adc
imul
leave
sub
push
mov
and
movsb
stc
adc
lcall
pushf
push
cmp
js
stos
dec
aam
xor
and
mov
sub
jne
mov
std
out
dec
adc
mov
stc
sar
mov
jge
movsl
mov
mov
jecxz
mov
sti
adc
rcrb
add
popf
mov
mov
repnz
push
bnd
xor
lahf
xor
sbb
rcl
adcb
push
pushf
dec
xor
push
jno
lock
add
aas
cmp
mov
inc
les
out
mov
lahf
stos
push
pop
mov
mov
scas
std
xchg
xchg
xchg
pop
cs
iret
shlb
lds
xor
mov
movsl
jge
arpl
pop
inc
add
cltd
adc
movsb
fcompl
arpl
les
pop
rcrb
mull
pop
xor
jns
add
sub
div
aam
or
ficoms
sti
cmp
pop
insb
outsl
sub
daa
imul
cli
out
aaa
scas
pop
hlt
int3
outsb
xchg
xor
or
das
cmp
xor
jg
cmp
das
pop
dec
and
xchg
lahf
lods
loope
dec
fs
and
mov
xlat
mov
imul
out
mov
ss
push
adc
or
or
in
mov
dec
jnp
js
mull
jbe
leave
ficomps
mov
mov
outsb
mov
inc
dec
jg
and
data16
sub
roll
outsl
insl
bnd
push
pusha
outsb
cmp
andb
xchg
in
and
sub
cmpsb
xchg
and
decl
dec
movsl
aas
sbb
pop
push
xchg
xor
xchg
add
gs
imul
shl
cmp
fistl
xchg
cmp
movsl
dec
daa
dec
dec
inc
mov
lock
enter
dec
cld
roll
inc
cmp
add
xor
push
pop
fsubrp
xchg
mov
jg
xchg
jecxz
in
and
mov
sahf
pop
and
aad
adc
inc
push
into
xor
out
xor
pusha
cmp
cmp
bound
mov
loope
mov
xchg
add
sub
jg
aas
inc
xchg
mov
add
sbb
sub
dec
dec
dec
push
xor
lods
scas
jae
clc
testl
std
fsubrs
push
cli
jecxz
mov
mov
cld
cmpsl
mov
xchg
in
imul
xor
cs
add
lea
or
lahf
sub
sub
inc
or
adc
fildl
iret
inc
mov
push
push
xor
mov
insl
jge
ds
mov
xchg
jmp
mov
mov
movsl
icebp
movl
xor
ret
les
xorb
pop
stos
fcoml
std
ja
subb
and
les
repnz
jb
mov
mov
fiadds
stos
inc
mov
xor
sub
cli
pop
jo
push
add
cmp
adc
inc
fiaddl
pushf
hlt
mov
jb
popa
and
xor
xchg
aam
outsl
repnz
das
aam
daa
lcall
sbbl
mov
sti
jb
call
xor
ss
and
fs
dec
mov
test
insl
pop
pop
adc
push
ljmp
xchg
cmp
mov
sbb
das
inc
push
mov
shlb
and
dec
lcall
xchg
sahf
adc
in
add
adc
mov
add
fsubl
sbb
jl
push
out
popa
popf
adc
xchg
push
jbe
lds
or
dec
add
xchg
lret
jns
push
dec
imul
fwait
aaa
addr16
out
jle
out
test
int3
inc
popa
jg
dec
jl
ljmp
pop
push
jp
jbe
pop
test
orl
mov
mov
sbbb
pushf
add
and
xchg
repz
add
inc
adc
int
jno
out
lret
scas
gs
or
addr16
std
mov
sbb
in
push
aam
lods
mov
jne
push
sbb
pop
jecxz
jns
mov
or
shlb
push
fdiv
rclb
je
push
jg
inc
out
outsl
add
ret
insl
clc
rorb
mov
mov
mov
fistps
repnz
in
icebp
or
jbe
les
push
scas
fnsave
lea
dec
in
ja
test
mov
xorl
xchg
aas
sub
mov
scas
or
and
push
adc
mov
add
pop
es
aaa
xchg
sbb
cmp
fld
cwtl
test
push
in
pop
and
notb
add
adc
jae
sbb
outsl
pop
mov
into
push
mov
inc
mov
or
mov
dec
stos
pop
imul
lcall
cmp
divb
sahf
punpckhwd
leave
and
jp
into
or
in
lcall
cmpsb
enter
ljmp
pop
test
pop
iret
ja
aaa
push
add
or
sti
inc
xlat
lret
sahf
aas
push
out
add
sbb
or
push
stos
popf
adcb
inc
insl
mov
sarl
adc
imull
push
outsb
sbb
cmp
loopne
pusha
xlat
fnsave
stos
mov
mov
cltd
pop
mov
push
dec
repnz
int3
push
pop
jle
faddl
sub
mov
lcall
stc
mov
lahf
mov
dec
xor
pop
mov
sbb
jge
push
pop
lock
int
mov
sahf
std
sbb
or
repnz
push
stos
lods
pop
int3
lods
jl
jno
mov
sbb
adc
mull
je
push
lahf
movsb
mov
push
push
add
jbe
cld
dec
push
ss
and
ss
mov
pop
pop
lcall
mov
inc
and
popf
dec
sub
mov
mov
add
adc
mov
push
hlt
insb
xchg
call
lret
adc
es
pop
mov
cmp
dec
in
stc
inc
adc
cmp
lods
push
sub
into
jmp
mov
aam
fsubs
loopne
mov
push
push
outsb
adc
or
push
inc
dec
jmp
and
fimuls
insb
add
or
fnstenv
les
cltd
jl
in
xor
stos
daa
xchg
add
push
xchg
daa
dec
cltd
xor
jmp
cwtl
push
ss
adc
sbb
push
movsb
or
movsl
jo
insl
lods
mov
lods
cmp
cmp
inc
sbb
nop
pop
int
ret
lods
mov
push
inc
hlt
adcb
stos
stos
push
push
addr16
xchg
icebp
ret
mov
sbb
ret
call
and
fnstcw
fstpl
mov
or
and
cmp
add
enter
jne
mov
xchg
xchg
iret
aaa
ret
sub
arpl
in
jmp
lahf
push
mov
pushf
loop
adc
inc
es
sbb
or
pop
push
fs
dec
dec
les
cmp
mov
xchg
and
call
xchg
fs
sub
cmp
rclb
sub
je
int
ds
movsb
inc
rcrb
neg
and
add
es
xor
sbb
bound
add
lods
mov
cmp
repnz
cltd
cmp
pusha
cmp
pop
rcrl
jbe
xchg
rclb
call
cmpsl
jmp
dec
mov
push
in
inc
mov
cmp
cmpsb
adc
jno
cli
outsb
les
push
sbb
jb
fdivl
fdivrp
pop
dec
lock
loop
mov
and
lret
into
xor
sbb
outsb
repnz
sarl
push
fstpt
jae
shll
xor
or
cmp
mov
xor
fcmovnu
fnstcw
adc
pop
and
adc
icebp
ja
and
or
imul
jecxz
mov
mov
movlps
jbe
jmp
cmp
movsb
mov
test
push
mov
lods
mov
mov
iret
mov
sbb
and
stc
adc
xchg
sahf
dec
scas
shlb
mov
iret
rcl
movsl
fs
pushf
fsubrl
xchg
leave
sub
inc
and
inc
adc
push
mov
cmp
adc
out
inc
mov
mov
aam
popl
mov
repz
cmpsl
mov
xchg
adc
idivl
adcb
cmpsb
xor
mov
sub
push
cmpsb
nop
arpl
test
push
mov
nop
sbb
stos
aas
mov
dec
push
filds
and
rolb
lock
add
push
out
jb
pop
adc
mov
subb
cmpsb
xchg
or
cltd
stc
in
fidivrs
int3
push
fnstsw
popa
dec
sub
xlat
es
test
dec
xchg
xor
xlat
jnp
std
in
push
ds
and
mov
cmc
test
stos
push
inc
cmp
jg,pt
mov
sahf
adc
push
shll
adc
aaa
adc
adc
lcall
push
or
ljmp
push
adc
fwait
sbb
popf
mov
xlat
add
call
and
fs
cli
lods
jo
loopne
mov
in
jecxz
xchg
xor
insl
mov
push
xor
xor
add
sub
adc
cmpsb
sub
pushf
xor
je
add
xor
ds
push
or
loop
jbe
ss
lock
std
mov
out
outsl
mov
bnd
jno
jae
sbb
push
imul
data16
mov
mov
mov
sub
sub
push
mov
push
inc
dec
mov
in
call
push
inc
sbb
pop
jne
icebp
repz
sub
mov
mov
shrb
or
cmc
mov
mov
leave
negb
add
and
sbb
mov
jge
mov
cmp
aad
leave
mov
roll
sub
sub
shll
or
addr16
add
mov
adc
adc
rolb
jbe
sub
jno
cmc
in
lahf
xchg
imul
hlt
jnp
sbb
dec
addb
xchg
stos
mov
jns
lock
movsb
push
sbb
mov
lea
out
cmc
add
dec
mov
push
pop
add
mov
adc
scas
add
jae
lods
movswl
mov
or
dec
or
fwait
imul
sti
lods
je
pushf
dec
jo
lea
sbb
inc
add
ja
mov
int3
adc
subl
push
or
push
jno
mov
sbb
sahf
imul
sub
dec
popf
cwtl
test
insl
mov
movl
dec
enter
inc
lret
xchg
enter
imul
mov
mov
pop
in
into
xchg
aad
dec
jb
or
and
sbb
pop
push
mov
adc
xlat
in
iret
xlat
aas
movsb
and
insb
mov
dec
jo
mov
add
data16
cmp
jno
adc
loop
cmp
imulb
pop
xor
dec
push
gs
xor
int
push
xor
in
or
loopne
cmp
push
or
filds
jecxz
dec
adc
ss
out
jbe
rorb
gs
mov
sbb
lret
lcall
aad
pusha
movq
and
push
shrl
and
sbbl
dec
ljmp
js
sub
fcoms
mov
mov
sbb
push
cmp
adc
scas
movsb
sbb
into
dec
lahf
movsl
idivl
loope
cmp
mov
in
inc
fwait
jl
sbb
js
pop
mov
or
jno
push
leave
je
cmc
iret
loop
outsl
or
adc
and
add
jnp
bound
lods
out
add
pop
cmp
loopne
or
push
mov
aam
xchg
ss
push
adc
pop
andl
jg
adc
sub
cmpsb
jne
mov
pop
xchg
push
out
mov
movsl
xor
icebp
sub
mov
mov
add
dec
lock
cmpsb
test
jbe
sbb
gs
lret
sub
push
dec
jnp
xor
repz
lret
sbb
mov
cld
div
pushf
cvtdq2ps
inc
xchg
scas
sub
sbb
jns
imul
mov
xor
fsts
stc
jp
or
dec
mov
sub
jge
repnz
cld
mov
stc
shl
xor
mov
xor
sar
pop
jmp
cltd
xchg
aaa
imul
add
jne
loop
mov
cld
scas
out
outsl
ds
shrl
jae
fildl
arpl
fwait
xchg
pop
mov
das
mulb
fdivrs
fs
into
lock
xor
mov
cmpsl
jae
leave
add
xor
pop
cs
insb
je
ret
ret
inc
arpl
mov
int3
sub
lcall
mov
jnp
push
jl
add
jno
cmpsb
mov
cmpsl
leave
mov
jp
adc
out
pop
pop
nop
out
sub
sbb
mov
mov
stc
ret
and
loope
cli
or
test
xchg
sub
inc
lret
into
adc
xor
pop
sar
mov
negb
cmp
lds
xchg
pop
ljmp
pop
sub
cli
cmpsb
cmp
jb
lret
cltd
xchg
cmp
or
and
mov
cwtl
and
cmp
cmpb
push
out
dec
pop
pusha
movl
mov
xor
jecxz
testb
enter
fs
dec
aam
call
insb
fwait
pop
dec
dec
cmp
push
out
or
inc
cmpl
ds
cli
xor
mov
cmp
jecxz
push
test
mov
jns
jbe
and
jbe
movsl
dec
ljmp
push
insl
sbb
aad
add
lret
fistl
stos
inc
mov
in
push
int3
dec
mul
int3
sahf
pop
mulb
cmpsl
pop
into
mov
inc
dec
mov
push
mov
adc
push
inc
rolb
test
int
fs
push
dec
mov
mov
lret
add
mov
mov
inc
addb
jmp
lcall
lcall
cs
lods
add
pusha
shll
dec
or
mov
out
orl
mov
fstpl
dec
jno
les
pop
jl
in
js
daa
fildll
ror
pushf
jb
pop
enter
jo
dec
inc
adc
sub
and
idivb
in
orb
clc
dec
movsb
and
inc
pop
xor
mov
mov
mov
mov
cmp
cltd
push
test
xchg
cltd
insl
jbe
fnstenvs
ror
enter
push
xor
stos
add
das
mov
mov
movsb
push
dec
or
out
adc
xchg
mov
rcrb
je
xor
mov
scas
in
sbb
roll
and
or
xchg
ds
or
jp
aam
mov
adc
or
xchg
push
lret
fcoml
movsb
stos
push
or
pushf
cltd
test
pop
loope
insl
mov
and
push
jns
sbb
and
lods
mov
rolb
dec
addr16
sti
sbb
and
dec
mov
nop
sbb
leave
popf
pop
cmp
imul
out
sub
cld
sarb
mov
sub
out
sahf
jle
adc
sub
sub
lods
popa
mov
and
mov
push
inc
cmpl
sub
pushf
popa
int
clts
aad
cmc
insb
pop
rolb
ret
mov
bound
cmp
js
nop
popa
adc
sti
popa
jecxz
callw
mov
aas
inc
ds
shll
sub
popf
es
xor
lret
jle
ret
rclb
insb
outsl
lahf
sarb
mov
cmp
mov
adc
push
mov
add
imul
jno
push
ljmp
jno
adc
jae
lret
and
repnz
aad
mov
adc
mov
inc
cmp
scas
sbb
or
insl
insb
inc
mov
jmp
mov
lcall
nop
or
fcoms
insb
add
push
dec
sbb
pusha
or
lret
aam
add
lods
dec
lods
lods
jecxz
jl
or
dec
aad
and
sbb
shll
jl
enter
data16
pop
cmp
mov
sub
cmp
and
bound
aam
cmp
fimuls
cmp
popf
mov
fldt
imul
mov
xlat
int3
cmp
pop
scas
iret
xlat
mov
fidivl
inc
dec
xor
and
ljmp
lods
movsl
in
arpl
addr16
dec
lahf
loope
cli
out
cli
dec
cltd
or
xchg
popf
adcb
cli
int
xlat
inc
mov
subb
roll
xchg
inc
cwtl
sub
fs
cltd
xor
lods
cwtl
jno
mov
aad
sahf
push
fnstenv
ja
jno
pop
cli
cmp
data16
outsb
xchg
adc
mov
cltd
xor
ja
adc
cwtl
or
pop
sbb
or
int
jg
inc
xchg
sahf
xor
xchg
jle
inc
and
int3
and
movsl
lods
jo
add
cs
stos
es
aaa
into
mov
xchg
or
subb
push
jo
mov
mov
movsb
dec
mov
mov
out
ret
push
pop
loopne
mov
cltd
pop
test
hlt
mov
hlt
or
mov
jp
enter
icebp
sub
inc
inc
shll
stos
pop
xchg
inc
dec
mov
sub
pop
push
out
mov
test
les
xchg
jno
pop
mov
jge
adc
dec
shll
fsub
pop
add
sub
cmp
mov
out
imul
popf
cmp
jle
xchg
xchg
fidivs
inc
aam
bound
aad
rol
inc
xlat
mov
lods
pop
sub
jecxz
pop
fsubrl
adc
jnp
enter
enter
or
xchg
loope
mov
iret
lods
ret
sub
or
cli
out
sti
jno
and
sub
mov
add
std
sub
jl
stos
out
mov
cmp
inc
pop
scas
and
cmp
jno
jne
lea
ret
lret
push
out
xchg
lods
xchg
xlat
sbb
lcall
out
inc
mov
int
mov
jbe
mov
addr16
push
insl
fisttpll
stc
in
imul
jle
int3
mov
pop
add
daa
add
cmc
xlat
cmp
mov
jecxz
adc
push
fsubrl
mov
test
xor
mov
imull
mov
and
push
iret
or
ret
cmpl
or
cld
xchg
xchg
addr16
pop
mov
and
sarb
mov
push
hlt
gs
sahf
pop
or
adc
insl
adc
adc
push
test
inc
mov
or
lea
sbb
and
subb
xor
call
mov
stc
or
push
leave
mov
mov
mov
stos
addr16
sub
stos
sti
xor
leave
fwait
add
and
xor
push
xor
imul
stos
ljmp
push
adc
push
hlt
pushf
cmpsl
pop
pop
mov
adc
push
jae
or
pushf
or
jae
repz
insb
mov
xchg
xchg
fistpll
das
and
and
xchg
push
dec
sbb
mov
cli
mov
dec
mov
aad
mov
jmp
out
daa
push
dec
xchg
pop
pop
hlt
lret
pop
pop
imul
push
mov
cmp
or
cmp
data16
dec
push
mov
and
and
xchg
inc
aam
push
daa
daa
les
mov
pop
fistps
xchg
xchg
and
sbb
xchg
mov
pop
scas
fiadds
dec
jg
imul
mov
ss
les
add
push
icebp
jp
cli
push
push
add
punpckldq
ret
aas
jg
mov
and
cmpsb
xor
subl
loopne
inc
das
mov
pop
xchg
sbb
notl
xor
xor
add
mov
stc
mov
hlt
pop
loop
pop
dec
pop
push
cmp
cmp
mov
xor
pop
jnp
addr16
popa
lea
pop
test
ja
adc
movsl
inc
inc
icebp
int
shrb
test
xlat
inc
push
fisttps
pushl
fistps
testl
nop
stc
cmpsl
add
pop
mov
mov
adc
sub
fisubl
pop
fistpl
enter
stos
jns
mov
out
and
jne
inc
popf
jp
lds
rol
jg
mov
popf
push
jne
inc
dec
xchg
insl
mov
aaa
sbb
xor
addr16
sub
data16
dec
out
lahf
fwait
push
mov
lds
mov
mov
push
sbb
and
subl
iret
xchg
movsl
add
xlat
dec
loop
inc
popl
ds
mov
xor
repnz
dec
adc
jecxz
jge
pop
or
fcoms
std
or
mov
push
xor
push
clc
stos
fists
push
lock
mov
filds
sub
imul
fcoml
adc
in
popa
les
ss
cmp
les
sti
outsl
mov
loopne
rcrb
xor
lcall
gs
add
pop
jo
mov
cmpsb
push
sub
out
nop
sbb
sub
push
int
test
inc
push
arpl
clc
sub
push
int
outsb
lea
sbb
loop
fsubr
bound
test
inc
sub
icebp
out
sahf
push
rcl
fs
add
jl
inc
dec
push
inc
imul
fidivs
add
iret
mov
cmp
pop
or
dec
mov
leave
cld
insl
jmp
cmp
xchg
cwtl
mov
cmp
pop
xchg
negl
mov
shl
cmp
movsl
sub
in
fs
imull
mov
sbb
or
push
inc
rorb
xchg
xchg
dec
add
insb
jle
inc
fidivrl
mov
stos
mov
stos
loop
mov
popf
test
test
lea
lods
mov
out
call
xchg
repz
or
js
xlat
jne
cs
xchg
mov
loope
nop
rcrb
push
test
test
js
ret
rolb
inc
pushf
cmp
pop
cmp
sub
mov
fdivr
fs
pop
fisubs
xor
in
inc
mov
xor
test
jecxz
test
cmpsl
mov
lcall
stc
fildll
mov
push
jnp
sbb
jg
addr16
sti
loope
push
and
lcallw
mov
fisttpl
and
imul
sbb
add
sbb
js
arpl
jge
sbb
jmp
add
sbb
adc
in
int3
adc
add
sub
sub
leave
dec
imul
lret
sub
push
and
sub
in
mov
sbbl
popf
dec
insb
shlb
sub
mov
mov
enter
test
out
out
add
and
hlt
test
mov
mov
stc
mov
sti
imul
getsec
jo
sbb
call
pop
lret
nop
js
xchg
dec
sub
shrb
mov
xlat
jno
mov
push
push
lock
gs
jns
cs
cmp
mov
add
sub
push
jp
mov
lea
mov
daa
je
push
mov
add
xor
mov
mov
adc
dec
dec
les
xchg
fwait
repz
in
xor
sub
adc
sahf
jns
push
cmp
or
cmp
mov
mov
push
ret
xchg
push
loope
pop
mov
pop
sub
dec
sub
stos
jg
xor
mov
sub
jns
add
in
dec
xchg
shlb
aam
in
mov
cmp
lcall
adc
mov
jb
sti
stos
inc
sbb
adc
mov
aaa
fldenv
mov
push
mov
mov
cli
sub
jnp
or
rcrb
mov
jb
aas
das
inc
cmp
and
mov
ss
inc
jp
dec
insb
add
mov
fstpl
aas
imul
dec
lods
or
cmpsl
test
fists
gs
mov
scas
push
xor
imul
lds
out
adcb
call
dec
imul
in
fs
xor
or
clc
lahf
push
dec
jbe
incl
scas
fists
mov
mov
jns
adc
xor
out
mov
or
notl
xor
repnz
ss
jg
aad
xor
sbb
mov
pop
cmp
jmp
adc
es
imul
loope
push
add
cwtl
sbb
fldenv
fsubl
pop
xchg
ds
add
arpl
and
stos
psubd
or
xchg
scas
test
cmc
pop
aam
and
add
sub
mov
hlt
jnp
mov
or
jle
mov
cmpsl
dec
mov
jmp
xchg
lock
negl
jno
ret
cmc
mov
lret
or
pop
add
bound
mov
push
ja
jle
sub
or
push
push
lods
lods
cmc
pusha
jg
cmp
sub
push
loop
loopne
jmp
mov
xlat
and
ret
inc
mov
xor
cmp
pop
sahf
sarb
icebp
addr16
jp
lret
lcall
fstpt
bound
jge,pt
adc
notb
dec
dec
mov
iret
pop
es
loop
lods
test
insb
outsb
xor
out
push
xor
pop
xchg
push
sbb
ret
aas
mov
pop
xchg
iret
add
aas
andb
pop
bound
pop
lret
out
cwtl
cmp
outsb
cmp
fwait
mov
fldenv
stc
dec
lret
sbb
and
lret
sub
xchg
jnp
movsl
add
pop
insb
xchg
adc
in
arpl
outsb
xor
mov
lea
movsl
sub
mov
ss
push
sub
leave
in
fstps
scas
inc
cmp
jl
mov
out
popa
mov
testl
ja
jns
movsl
cs
shlb
xchg
pop
sbb
mov
mov
inc
and
sbb
lret
pop
test
call
sbb
loop
into
pop
sti
add
sub
test
stc
dec
loop
pop
xor
mov
add
bound
lcall
or
pop
xchg
mov
fisubrl
or
dec
mov
aas
mov
pushf
aad
dec
popa
sbbl
leave
shrb
or
decb
stos
add
test
popa
mov
push
jg
sub
cli
test
fwait
pop
push
loope
fsts
cmpsb
imul
xor
or
sarl
mov
roll
ljmp
push
pop
xchg
fnstsw
insb
mov
xor
or
add
xor
lock
add
xchg
jo
insb
cmp
and
imul
jb
test
fs
jge
mov
outsb
jo
fstpl
jle
sbbl
decl
clc
loopne
enter
rolb
es
rorb
xor
jae
outsb
insb
test
sub
mov
sub
int
shr
loopne
inc
pusha
inc
mov
test
mov
pop
dec
push
jns
mov
pop
jp
mov
or
pushf
lret
das
mov
sub
bound
sbbb
jae
and
pop
dec
push
rclb
pusha
movsl
in
in
push
sti
movsl
mov
icebp
lods
in
fdivl
or
call
cmp
dec
and
enter
clc
out
fidivs
iret
addr16
and
cmp
out
in
xchg
sub
shlb
lahf
cmp
dec
in
int
fs
aaa
xchg
xchg
lock
int3
aaa
decb
in
test
ss
scas
lret
mov
or
pop
cmpsl
cmp
lods
iret
fnsave
mov
mov
dec
jmp
mov
add
ss
mov
mov
roll
cmp
movl
xor
or
pop
adc
jg
cmp
xchg
and
push
jle
cmp
imul
rorb
mov
fmuls
lahf
pop
cmp
mov
jmp
cmp
jbe
das
sbb
cmpsl
call
adc
pop
sub
sbb
inc
or
sub
inc
push
daa
pop
ja
aas
jne
shlb
jmp
pop
mov
push
outsl
mov
adc
jbe
push
push
int3
add
dec
outsl
xchg
add
dec
sub
mov
sub
sbb
lds
adc
mov
icebp
das
lods
mov
push
cmp
je
dec
lods
pop
mov
adc
shll
mov
in
aam
aas
cmpsb
sbb
push
pusha
lods
inc
push
sahf
mov
sub
test
dec
retw
jle
pop
arpl
cmpsb
add
imul
pop
add
pop
out
xor
nop
mov
xor
lods
xchg
or
stc
inc
in
pop
jge
or
and
aaa
cmpsb
sub
and
and
ret
mov
out
loopne
addr16
icebp
mov
pop
xlat
jno
sbb
mov
mov
cmp
xor
pop
lock
xlat
push
jb
xchg
call
pushf
insb
lcall
std
adc
cs
push
mov
add
jmp
aaa
jbe
push
jg
add
cmc
mov
stc
mov
dec
mov
je
pushf
xchg
mov
test
jne
out
jecxz
test
std
jl
add
out
push
call
data16
mov
add
shl
mov
das
or
pop
push
xor
pushf
out
jp
dec
out
aam
or
xor
mulb
inc
and
xchg
enter
sti
les
push
fprem
fwait
xchg
xor
push
repz
icebp
mov
lret
mov
mov
xchg
ja
call
xchg
filds
in
aas
sti
lds
shr
fimull
adc
js
add
mov
pusha
xlat
xor
je
bound
fildll
dec
lods
cmp
push
jmp
dec
mov
inc
imulb
fistpl
lds
mov
les
je
adc
xchg
les
mov
pop
xchg
in
aad
loope
pushf
ds
mov
aam
inc
xchg
push
arpl
add
xor
in
fidivrs
andl
inc
pusha
rcrb
mov
sbb
and
subb
jo
xchg
outsb
push
aas
cwtl
leave
cmp
push
cli
test
push
inc
orl
ret
inc
dec
in
fbstp
push
cmp
ret
cs
dec
loop
cmpsb
iret
jp
jno
les
clc
test
subl
jno
addr16
or
dec
stc
outsl
push
cmpsb
ja
sbb
push
adc
test
pop
mov
pop
mov
pop
mov
loope
xchg
lods
mov
sbb
test
fwait
dec
push
outsl
int3
fdivl
out
pop
adc
pop
leave
xor
das
fdivrp
in
test
andb
cmp
xchg
and
call
mov
rorl
lret
shl
jno
dec
push
test
loope
mulb
cmpsl
adc
push
mulb
out
inc
ja
stc
rolb
test
ficompl
mov
pop
cli
test
mov
xor
iret
cmp
pop
mov
sahf
push
ljmp
lea
fs
lcall
xor
dec
xlat
lds
dec
and
dec
gs
movsl
sub
sti
inc
mov
rcrb
lds
sub
loope
sbb
mov
xor
mov
add
decl
fnstenv
test
sub
inc
call
mov
in
mov
sbb
add
shlb
mov
sub
sar
jbe
movsl
mov
inc
cmc
cmp
or
jnp
ja
inc
int3
mov
movsb
popl
add
jbe
push
and
lds
insl
jae
outsl
sbb
shrl
dec
je
mov
lret
cmp
testb
aas
test
imulb
das
pop
fldcw
push
test
sub
cld
push
fiadds
jbe
ds
das
or
into
loope
xchg
push
scas
imul
hlt
or
cmpsl
cmp
imul
jne
stos
adc
mov
sbb
jmp
out
jo
test
popf
jge
mov
push
mov
mov
mov
fdiv
imul
jo
push
push
std
jp
push
and
repz
adc
jo
dec
out
xchg
mov
test
cmpsl
push
movsl
lods
ljmp
jmp
dec
out
mov
fcmovnu
jmp
sbb
fsin
testb
movsl
cs
loopne
adc
div
es
repz
and
mov
insb
cmp
int
aam
shr
test
pop
sbb
loope
flds
xchg
test
mov
jmp
ficomps
lret
sti
pop
fimull
je
sbb
ds
sti
add
leave
pop
dec
add
frstor
cwtl
pop
pusha
outsl
sbb
mov
pop
mov
push
mov
and
clc
and
js
push
mov
lcall
gs
cld
call
pop
nop
pushf
dec
mov
insb
das
sbb
cmp
xchg
div
jo
push
lret
and
jnp
jo
scas
fadds
ret
iret
xor
lds
ds
aaa
mov
scas
xlat
pop
mov
xchg
cs
jge
push
clc
jle
inc
daa
cs
and
paddq
shll
in
aas
pop
test
loop
mov
mov
jge
dec
mov
pop
addr16
push
mov
add
xor
mov
mov
cmc
sbb
in
inc
outsl
out
in
mov
inc
loop
not
jmp
mov
and
es
pop
stos
repz
xchg
in
lcall
jne
add
jno
and
adcl
xlat
movsb
inc
jmp
push
add
shll
ficompl
lret
shll
mov
loope
xchg
push
mov
xchg
pop
sub
adc
cmp
sbb
mov
shrb
pushf
shll
xchg
jmp
cmp
pop
xor
cmpsl
mov
ret
ljmp
push
mov
fwait
mov
jl
pushf
mov
je
xorb
mov
sub
xor
sub
dec
mov
xchg
cwtl
push
imul
scas
inc
pop
push
jae
push
mov
es
adc
std
fsts
dec
push
pop
rcrb
js
bound
fwait
loop
testl
xchg
das
mov
gs
testb
jo
sub
lds
mov
cltd
leave
test
mov
jo
ljmp
xchg
cmp
lret
aad
adc
jne
lcall
fildl
dec
push
ficoms
mov
jecxz
popa
fisubrl
mov
xchg
and
fstpl
xlat
sub
divb
arpl
pop
cmp
negb
in
inc
push
cltd
ficoml
sbb
mov
aam
xchg
imul
mov
xor
scas
jp
dec
pop
imulb
scas
call
je
dec
addb
and
sub
stos
add
pusha
mov
data16
movzbl
pushf
std
mov
sbb
outsb
jmp
movsl
push
lds
mov
daa
dec
out
pop
cld
scas
dec
xchg
pop
cltd
addr16
ret
ret
push
cs
ja
and
add
imul
repz
jno
sbb
mov
mov
cmc
repnz
sub
loope
or
insl
ss
imul
decl
outsl
sti
sti
dec
lds
stc
fisttps
push
add
adc
outsb
mov
adc
mov
pusha
call
enter
out
sahf
jecxz
dec
mov
add
sbb
mov
sbb
mov
fildll
dec
clc
inc
adc
roll
sbb
loop
cwtl
xor
call
stos
fs
stos
adc
jbe
add
pop
mov
lds
jecxz
and
cs
pop
dec
jbe
and
pop
lods
sbb
mov
push
les
adc
lcall
stos
inc
popa
cs
in
mov
adc
mov
or
jmp
rcr
sub
adc
enter
sbb
jp
lcall
aaa
popf
rep
das
jb
rcr
lock
push
andl
jmp
sahf
pop
shlb
std
ljmp
mov
xor
mov
scas
pop
roll
push
mov
rcrb
add
push
lods
jno
push
cmpsl
push
xlat
xchg
mov
arpl
into
stos
js
push
cmp
inc
jbe
push
cltd
cwtl
xlat
mov
dec
add
in
fildll
mov
and
xor
inc
mov
xchg
jne
stos
inc
sbb
mov
pop
pop
lret
or
movsl
cmp
outsl
jg
inc
data16
and
push
out
jl
pop
leave
repnz
lcall
xchg
stc
add
xorl
xor
mov
jb
jbe
cmp
imul
jmp
lcall
aad
cmp
rcrl
imul
in
jno
xchg
inc
pop
sbb
rep
in
repnz
mov
dec
sub
sub
dec
inc
mov
jne
inc
or
arpl
jb
dec
out
mov
inc
push
or
fcmovu
cmpsb
scas
sbb
scas
xchg
mov
xchg
imul
les
cs
clc
mov
ret
pop
les
cs
mov
dec
test
xchg
push
notl
sub
xchg
fstl
mov
mov
dec
popa
xor
or
je
icebp
pslld
ffree
xor
sbb
dec
mov
mov
aad
int
imul
sbb
cmp
aam
xchg
and
xor
dec
add
pop
sti
push
rep
lahf
das
sub
jns
or
ret
xchg
jae
sub
hlt
and
and
push
push
cltd
pop
pop
mov
jg
testb
lds
cmp
sub
lds
rclb
push
imul
pop
stc
cmp
jecxz
insl
pop
cmp
out
mov
inc
andb
cld
repnz
mov
mov
push
mov
cli
enter
popa
hlt
mov
or
out
addb
fadds
ja
pop
jns
imul
aad
or
push
mov
int
xor
scas
les
xchg
pusha
mov
lahf
movsb
cld
stos
xor
test
mov
cli
pop
lock
cld
test
mov
test
add
push
cmp
dec
fadds
addr16
rolb
jo
fidivrs
xchg
xchg
out
out
jo
fimuls
jmp
out
aam
dec
std
movsl
fdivr
mov
dec
outsb
js
dec
jl
mov
aaa
lret
test
daa
ret
test
cmp
xorl
fdiv
or
aad
jmp
push
xchg
jl
ss
fidivs
out
fwait
dec
loop,pn
cli
sbb
xchg
jge
movsl
sti
mov
inc
flds
dec
add
stos
test
and
in
sbb
and
lock
aad
pop
inc
inc
imul
vpsignd
fisubrl
or
shrl
fucom
addr16
add
or
cmp
or
jne
xor
jne
repz
test
cmp
jno
xor
sub
mov
and
mov
mov
or
cwtl
into
cmc
faddl
mov
int
rorl
sub
test
sahf
cmp
insb
mov
dec
js
call
ja
jle
xlat
pop
ljmp
dec
xor
mull
jbe
dec
jl
dec
rclb
push
push
jbe
pop
mov
sub
cmp
inc
dec
mov
push
pop
jne
xchg
mov
stos
push
push
lret
or
push
sarl
xchg
xchg
sbb
mov
inc
lret
pop
mov
aam
cs
sub
popa
test
stos
sarb
stos
fsub
jmp
push
xor
fnstsw
adc
pop
xor
sbb
mov
lock
or
daa
jb
cmp
mov
mov
sbb
xchg
sub
add
jmp
popf
xchg
stos
in
xor
push
add
jbe
inc
loop
jno
or
cwtl
inc
ss
mov
mov
mov
push
or
addr16
adc
cld
cmc
sub
dec
popf
es
das
mov
fcompl
jo
jb
xor
xor
imul
scas
sub
test
clc
pop
or
hlt
pop
call
inc
cs
xchg
adc
xchg
push
or
push
mov
sarl
adc
aam
int
jle
out
xchg
cmp
out
mov
adc
ljmp
pop
pop
mov
mov
pop
sub
xchg
adc
cmp
incb
fistps
push
cmp
jns
mov
dec
jmp
out
or
sbb
cmp
ljmp
mov
pusha
xor
fcoms
mov
cmp
or
sbb
leave
mov
loopne
adc
dec
mov
pop
test
xor
xor
xchg
divb
jno
ror
call
mov
scas
je
mov
jnp
outsl
inc
xor
mov
aam
addr16
add
push
fldl
in
fidivl
xchg
xchg
nop
jns
dec
xor
cmpsl
jle
fmull
sbb
mov
sbb
mov
nop
in
add
xor
pop
or
pop
mov
push
xchg
ficomps
test
mov
dec
inc
ja
ds
xchg
and
mov
hlt
xlat
int3
xor
in
int3
mov
imul
dec
and
jge
lret
stc
pushf
inc
jp
inc
sub
mov
push
cmp
fstl
insb
sub
mov
xchg
inc
nop
fcmovbe
cmp
mov
lea
ret
test
mov
or
cld
and
shlb
mov
hlt
setbe
xchg
aad
ret
stc
in
xlat
add
dec
and
mov
hlt
jb
orl
sub
les
sbb
loop
arpl
mov
sbb
loop
out
nop
dec
repz
jnp
cmpsb
xor
andb
add
jo
das
xchg
dec
gs
or
cmp
jp
test
mov
lret
add
push
lret
repz
sbb
ss
pop
pushf
imul
push
dec
fisubl
daa
pop
pop
test
je
addr16
push
rorb
xor
insl
mov
loop
add
icebp
in
arpl
sbb
and
cltd
pop
hlt
adc
fwait
pop
inc
jne
push
les
push
or
jg
scas
pop
ljmp
nop
sbb
gs
loop
shll
vmovsd
rcrl
pop
je
inc
es
sub
repnz
and
call
dec
mov
dec
xor
adcb
movsl
push
sub
pop
pop
or
shr
dec
or
dec
iret
sub
test
or
rclb
pop
repz
pop
arpl
lock
ljmp
inc
and
jnp
mov
lea
add
or
out
dec
ss
out
nop
mov
test
adc
aad
pcmpgtd
mov
bound
ljmp
imul
jge
adcl
jb
out
fsubp
pop
aaa
fdivs
arpl
and
dec
std
cmpsb
jb
sub
out
rclb
imulb
iret
enter
loopne
pusha
loopne
movsl
out
mov
sahf
addl
sbb
rcrl
setbe
out
mov
lret
leave
push
shll
sub
les
dec
mov
add
mov
lret
jle
sahf
insl
call
push
stos
gs
add
arpl
mov
sahf
inc
icebp
ffreep
repz
and
jbe
es
leave
shrb
dec
mov
mov
sbb
pop
imul
outsl
aaa
test
lea
imul
je
add
test
out
test
pop
jno
jo
xor
adc
cmc
jge
cmp
fisttps
addb
xor
pop
sub
sbb
clc
test
cwtl
fwait
les
or
cmp
mov
popa
pop
dec
xchg
push
add
gs
mov
outsb
fs
scas
push
pusha
mov
rcrb
sbb
pop
imul
hlt
lcall
sbb
or
or
dec
xor
mov
hlt
bound
mov
enter
cwtl
cltd
inc
cmpsb
mov
les
loop
into
out
insb
pusha
imul
mov
lahf
lcall
jno
js
jmp
lea
mov
je
inc
divb
push
popa
cmp
lock
mov
data16
cmpsb
cmp
sahf
rcrl
push
pcmpeqb
jmp
jae
js
je
pusha
ficomps
mov
push
daa
sub
movsl
stos
jno
fstl
ljmp
sti
jo
mov
push
pop
ret
pop
fwait
xor
lcall
out
mov
lock
lcall
xchg
aaa
fnsetpm(287
test
dec
popf
sub
inc
xchg
adcl
andl
fldl
scas
inc
test
jl
stos
adc
dec
insb
push
mov
call
and
jo
pop
pop
push
stos
aam
xor
in
and
cmpsb
mov
outsb
cmp
push
cld
loope
test
mov
cs
lea
sub
shl
push
add
leave
inc
cmp
push
mov
mov
orb
xor
into
sti
iret
xor
xchg
pop
inc
add
jbe
sub
and
pop
xchg
aas
push
testb
jns
aam
adcb
int3
into
inc
jbe
sarb
adc
jmp
fimuls
xor
dec
cmpsb
jecxz
in
adc
sub
and
outsl
lods
dec
add
mov
add
or
sbb
mov
int
das
dec
out
mov
je
movsb
mov
icebp
mov
daa
rol
mov
sbb
adc
daa
and
lahf
sub
jg
repz
and
pop
push
push
push
outsl
ret
push
mov
sub
roll
outsl
add
xchg
mov
leave
out
mov
jbe
mov
out
adc
clc
xchg
sar
xchg
pop
stos
sti
mov
outsb
push
mov
scas
jmp
xchg
aaa
xor
inc
or
rolb
pop
fnstsw
mov
stos
mov
mov
push
addr16
movsl
in
lock
cs
fistl
sti
int3
roll
sti
pop
cmpsl
sbbl
leave
push
mov
lock
add
int
nop
push
push
sbb
pop
sub
iret
pop
movsl
je
ret
pop
inc
cld
cmp
insl
mov
stc
dec
cmp
das
bound
aaa
pop
insb
push
sarb
jecxz
mov
lods
call
lcall
lret
dec
mov
aam
cmpsb
nop
fstpl
cmp
not
rolb
sub
loope
lret
stc
subl
test
test
cmp
call
loope
push
cltd
sbb
pop
xor
add
cltd
mov
cmp
cmp
fcoml
frstor
aam
cmpsl
shrl
pop
xchg
xor
les
lds
mov
sub
ss
fisttps
icebp
scas
cmpsb
xor
pop
fldcw
sub
jecxz
mov
cmp
add
lods
sub
adc
ror
decl
push
push
xor
dec
push
jae
scas
pop
sub
inc
adc
aas
aad
notb
push
cmp
jo
scas
bound
jmp
pop
mov
adc
lcall
sub
into
sbb
sbbl
sahf
pop
lret
dec
push
add
scas
mov
mov
adc
mov
js
push
hlt
jg
fs
inc
test
test
out
lods
push
mov
fistl
call
gs
sub
add
bound
pop
test
pop
lods
cmp
outsb
inc
push
clc
adc
jo
sub
xchg
and
aas
xor
adcl
xchg
ja
dec
xor
inc
shlb
mov
in
addr16
push
je
mov
and
outsl
dec
jnp
out
sbb
andb
ss
cltd
shl
lret
subl
inc
mov
xor
es
pop
cltd
in
lods
mov
fstl
or
jo
popa
pop
movsb
jb
add
shlb
and
sub
nop
xchg
lods
adc
divb
cmp
lcall
jo
js
add
adc
adc
aam
jl
sahf
jle
or
andl
ret
xorb
mov
addr16
pop
and
loopne
sbb
cltd
push
jp
cmpsb
inc
fmulp
add
lret
xlat
cmp
push
hlt
aam
shll
and
mov
inc
pop
inc
inc
jnp
xchg
or
pop
sub
mov
incl
or
pop
loope
dec
int
mov
sbb
and
pop
inc
rolb
jmp
adc
sub
jmp
add
mov
in
push
shr
daa
outsl
lods
mov
stc
cmpsb
mov
out
aam
mov
pop
or
mov
fildl
cmpsb
loop
out
les
dec
jns
bound
out
pop
fstp
jbe
lea
out
lea
jecxz
xchg
or
sbb
pushf
mov
scas
stos
leave
inc
inc
out
mov
les
add
pop
ss
sub
xchg
js
push
adc
add
jno
lret
sarb
ret
rcrl
clc
adc
insl
loope
femms
fldt
cld
dec
rclb
jge
pop
add
cmpsb
hlt
int
outsl
dec
mov
das
out
adc
or
sub
adc
lock
in
popa
je
mov
imul
and
shrl
sub
inc
inc
sub
mov
test
out
xor
cwtl
sti
les
fiadds
mov
mov
mov
inc
int3
movsl
mov
or
shrb
push
aad
push
lds
fisubs
test
sub
insb
shlb
add
add
jmp
cmp
jno
rorb
sub
adc
adc
pop
mov
xor
xchg
mov
icebp
cli
in
dec
rcrl
les
mov
inc
ret
shrb
xchg
sbbb
cmp
sarb
jg
mov
addr16
push
sub
inc
rclb
sbb
aas
push
xchg
aam
call
jecxz
idivl
lret
add
add
sbb
or
aas
jle
jns
addr16
int
test
rcrb
mov
cli
cmc
cmpsb
insl
push
sub
enter
push
les
jmp
mov
sbb
dec
or
fstl
addb
ja
adc
daa
xchg
fidivs
pop
add
sar
or
fwait
imul
xchg
dec
lcall
lods
out
xchg
push
ja
mov
sub
pop
push
jmp
loope
stos
popa
jmp
call
ret
cmc
scas
jge
mov
jp
mov
outsl
sub
stc
add
or
lods
inc
test
jmp
nop
inc
popf
cltd
hlt
pop
jp
ss
dec
ljmp
cmpsb
jge
clc
adc
inc
jg
pop
sub
je
mov
cld
es
jae
jo
jne
jp
jg
fisttpll
das
push
mov
xor
inc
xchg
fcomps
mov
je
sub
cmp
fs
popa
and
into
push
adc
xor
mov
mov
pop
mov
fdivrs
outsb
inc
mov
pop
fs
xchg
inc
repz
aas
xchg
popa
jnp
add
add
dec
jb
fdivrs
cmp
push
push
sub
sub
xchg
jge
push
and
push
or
cwtl
sub
adcb
call
pop
jg
pushf
mov
xchg
nop
sahf
push
subl
arpl
jge
fucom
cmp
subb
cmp
outsl
mov
repz
adc
and
xlat
add
mov
push
or
push
mov
pusha
cmp
rclb
std
and
jbe
cmp
enter
jle
and
lcall
push
cmpsl
adc
loop
dec
adc
adc
push
mov
sub
xchg
dec
movsl
test
push
fcmovb
out
sub
in
adc
arpl
xchg
ds
sbb
inc
pop
and
mov
mov
mov
jnp
dec
push
mov
sub
mov
jmp
lret
or
mov
mov
jae
iret
pushf
outsb
cmp
jecxz
mov
mov
outsb
lods
sub
loope
or
jl
cmpsl
mov
mov
call
adc
in
dec
xchg
ss
gs
in
add
pop
outsl
mov
jno
dec
ret
dec
scas
jnp
pop
jg
push
sub
sub
mov
cli
mov
jb
loope
mov
cltd
aaa
or
out
aas
cmp
rcll
lock
xorb
mov
sub
shr
test
pop
xchg
jg
sub
inc
pop
adc
hlt
xorb
sub
add
cmpsb
adc
sub
mov
lret
fnsave
into
mul
pop
xor
push
push
cmp
sub
adc
add
xlat
jns
xchg
mov
lcall
pop
cltd
mov
xor
cmc
push
shl
adc
jns
ret
jbe
fwait
loopne
sub
es
cli
push
rcll
mov
loope
mov
xchg
mov
dec
roll
push
shlb
inc
int
push
adc
lock
add
mov
pop
aas
mov
push
sub
push
test
ja
mov
cmp
out
sbb
inc
mov
adc
scas
int
jns
and
push
adc
jne
or
or
pop
push
pop
xchg
les
repz
cwtl
sbb
in
push
movsb
push
jle
in
scas
fistps
pop
dec
lret
mov
add
cmp
or
inc
inc
in
mov
aam
out
loop
dec
or
sar
pop
add
xor
push
mov
arpl
xchg
cli
push
push
pushf
mov
mov
xchg
ret
sahf
adc
scas
cmpsb
sub
cld
sub
call
sbbl
hlt
inc
or
std
push
fdiv
xor
jno
sbb
cmpsl
scas
jno
dec
int3
xor
push
jae
push
fabs
std
inc
lds
and
mov
pop
cmp
mov
xorb
out
xor
int3
dec
pop
in
push
mov
xlat
cwtl
stc
enter
push
dec
xlat
jo
cmp
add
sarl
popf
adc
push
push
rcll
in
sbb
push
and
out
pop
loopne
inc
xlat
jb
imul
mov
mov
cmp
es
inc
jge
cs
and
popa
inc
jnp
jle
call
dec
push
aaa
inc
mov
xchg
inc
sub
scas
sti
std
xchg
aaa
mov
pop
aas
jbe
mov
fcomps
add
pop
cvtdq2ps
jne
lods
ret
push
dec
mov
pop
clc
xlat
enter
inc
sbb
fildl
sub
cmpsb
xchg
jbe
movsb
loope
inc
dec
pop
adc
sbb
fwait
dec
subl
xor
lret
rorb
cmp
nop
aam
dec
lock
xchg
adc
loop
sub
push
pop
cltd
push
daa
outsb
fldl
mulb
sub
jb
cmpsb
sarb
mov
jns
fst
aad
mov
and
inc
fsubl
pop
mov
mov
imul
cltd
push
cmp
into
call
lods
mov
loopne
add
shl
mov
add
xchg
js
dec
subl
dec
dec
imul
in
or
ss
jmp
add
sub
jmp
mov
fstps
stc
cld
jp
int3
pop
enter
cmp
icebp
sti
xchg
aaa
call
sbbb
adc
out
lea
aam
js
out
test
mov
out
jno
rolb
cmpsb
xchg
jbe
sub
scas
pop
add
lret
push
mov
inc
adc
movswl
adc
or
and
mov
pop
fs
adc
dec
shrl
mov
xchg
loop
push
or
mov
sbb
or
sub
nop
xchg
jmp
out
jle,pn
mov
xchg
orl
sbb
mov
push
mov
jne
pop
aaa
in
jl
daa
push
stos
sahf
adc
ljmp
push
mov
pop
push
insb
xor
cmp
pop
jp
add
outsb
and
sub
sbb
jecxz
mov
frstor
adc
aam
jae
nop
loopne
jle
in
mov
addr16
leave
cmp
test
mov
sbb
testb
push
mov
jne
cmp
inc
ret
jp
sbb
cmpsb
dec
in
test
adc
mov
add
jb
sbb
push
mov
lahf
aaa
ljmp
xchg
or
jg
cmp
or
sarl
mov
or
dec
das
imul
jns
sub
mov
dec
cmp
adc
jg
ja
jp
xor
lods
xor
repz
mov
and
jle
add
cs
leave
int
xchg
inc
xchg
popa
mov
pop
cld
sub
push
push
scas
gs
dec
xor
les
mov
xchg
xor
push
mov
mov
pop
xor
cmpsb
adc
dec
je
push
in
cwtl
push
xchg
and
test
push
dec
cmc
ja
dec
bound
in
push
mov
push
lret
mov
add
int3
xchg
or
lcall
mov
cmp
jg
dec
xchg
in
jb
lret
pushf
xchg
out
cmpsb
frstor
arpl
les
pop
mov
enter
mov
cmp
test
int
shr
push
cmp
inc
push
cmpsb
or
sub
mov
ret
adc
cmp
in
test
imul
pusha
jmp
es
xor
and
das
sub
sbb
sub
mov
pop
xchg
push
mov
push
leave
pushf
cmp
fs
add
addr16
and
mov
in
xchg
pop
fildll
sub
xchg
notl
fcomi
orb
or
outsl
icebp
add
orl
mov
fldenv
loopne
add
orl
jecxz
jb
testl
cmp
pop
shlb
push
xchg
enter
aas
jns
inc
sub
cmpsb
into
sub
cltd
or
xor
jnp
sub
gs
ret
add
xlat
ds
pop
fists
ja
cli
push
xchg
js
sbbl
cmpl
jp
pop
xchg
mov
movsb
sbb
repnz
add
push
xchg
sbb
dec
inc
mov
add
and
xchg
inc
pop
sbb
fstpt
int3
les
inc
mov
shl
iret
in
mov
inc
sbb
pop
int3
cmpsl
cmp
mov
addr16
cmp
cmpsl
cmpsl
repnz
lods
jecxz
xchg
fwait
lahf
sub
jbe
out
aad
nop
movsb
lret
mov
lods
adcl
outsl
dec
ss
pushf
rcrl
inc
mov
ds
fsubl
aaa
jge
ds
testb
mov
lods
cltd
iret
icebp
pop
test
dec
pusha
mov
pop
inc
jbe
sbb
add
fcmovne
mov
dec
jns
jecxz
push
inc
mov
adc
data16
or
dec
int
lock
ficompl
push
aas
pop
scas
lea
sub
fnsave
pop
mov
mov
imul
jbe
cmp
test
dec
sub
mov
xchg
fcmovbe
imul
inc
adc
xor
cmpsb
add
pop
add
pop
fsubrs
mov
fwait
sbb
sub
lahf
stos
push
jmp
outsl
repnz
sbb
notl
inc
adc
mov
out
xchg
loopne
pop
adc
test
jns
adc
daa
or
pop
push
lahf
mov
xchg
es
xor
sbbb
cmp
mov
mov
mov
mov
addr16
mov
test
sti
pop
or
in
insl
mov
leave
jbe
inc
sub
add
pop
dec
mov
adc
pusha
dec
jmp
or
stc
aam
test
xor
out
int3
sub
adc
int3
add
stc
dec
clc
dec
pop
enter
fimull
jo
movsl
dec
jo
cmp
enter
in
stos
sti
pop
add
and
outsl
lcall
pop
fadds
cmp
jbe
jne
rcll
loop
pop
mov
cmp
sub
lock
scas
test
jle
xchg
jmp
mov
mov
jg
mov
sti
shll
or
dec
cmp
lds
mov
jecxz
jns
cmp
dec
xor
shll
mov
lock
and
shlb
push
pop
dec
push
ret
cld
xchg
push
andb
cmpsb
stos
xchg
sub
xchg
lahf
adc
or
and
xlat
aaa
dec
outsl
jnp
sahf
and
mov
imul
xchg
lahf
inc
mov
xchg
adc
sbb
or
ss
inc
aad
hlt
js
imul
dec
bound
or
inc
pop
xor
int3
fidivl
mov
incl
and
lret
sub
push
arpl
sub
int3
push
dec
cmp
lea
add
adc
inc
or
add
add
mov
xor
into
in
lods
ficomps
arpl
inc
movsb
fsubrl
jne
sti
mov
lock
sub
call
dec
cmpsb
das
inc
orl
orl
lret
push
cs
jp
push
test
dec
push
push
push
icebp
pop
mov
pop
mov
inc
xchg
into
sarb
loop
cltd
mov
cld
jmp
jmp
dec
iret
dec
jo
push
mov
sbb
pop
imul
out
and
aas
push
pop
mov
daa
and
out
pop
jne
aas
push
mov
push
arpl
xor
lahf
mov
jne
out
xchg
lds
cltd
adc
repnz
ret
xchg
lret
std
mull
add
inc
out
jmp
nopl
add
int
rolb
lock
mov
and
push
push
jl
test
add
std
push
jmp
fdivrl
adc
and
mov
mov
test
ret
daa
add
mov
or
stos
mov
hlt
and
nop
xor
jnp
lods
cltd
nop
or
ftst
jne
mov
inc
push
inc
adc
dec
cli
push
jmp
int
push
mov
in
fsubp
jp
cltd
mov
jecxz
mov
or
ds
loop
or
scas
jmp
popf
adc
mov
inc
es
ret
push
cltd
cmp
mov
cmp
cmp
jle
jge
stc
bound
cmp
jle
push
inc
cmp
out
cmpb
scas
sbbl
jg
and
out
xor
mov
mov
test
ja
and
jae
cmp
popa
popa
icebp
push
xor
rolb
jo
mov
inc
xchg
mov
xchg
mov
mov
push
sbb
testb
xlat
pop
mov
pop
fdivl
push
sub
shll
ja
jnp
add
aam
insl
ja
push
scas
add
iret
sub
repnz
roll
push
xchg
pop
dec
push
mov
pop
inc
aaa
bswap
test
xchg
rcl
push
gs
mov
cltd
test
pop
sbb
push
jnp
out
test
outsb
pop
dec
xchg
in
aaa
sub
pop
jnp
bt
sar
adcb
or
bound
xorb
insb
jno
cwtl
add
sub
pop
sahf
jp
sub
or
pop
movzbl
stos
sub
mov
add
push
mov
movsl
xor
push
mov
repz
and
sbbb
insb
push
bound
inc
cmp
movsl
cwtl
cmpsb
outsl
adc
sbb
push
dec
aas
fadds
inc
ss
xchg
roll
jecxz
push
xchg
push
mov
int
pushf
and
jmp
lods
inc
out
ret
fwait
mov
push
add
fidivrs
outsb
xor
dec
ficomps
jmp
mov
and
std
popa
test
popf
xlat
cmpsl
mov
sbb
jb
daa
mov
das
jmp
adc
push
fs
jg
and
fists
call
or
ret
push
xlat
dec
push
mov
jmp
into
hlt
mov
loope
data16
xlat
mov
push
stos
lcall
lret
mov
mov
push
jge
ljmp
movsb
roll
mov
divb
jmp
iret
sahf
aas
out
push
jo
mov
fmuls
stc
icebp
mov
arpl
push
cmp
out
je
aas
faddp
out
mov
xchg
sub
movsb
mov
pop
mov
arpl
test
ds
stc
mov
adc
aaa
adc
sarb
pop
daa
clc
or
push
and
shl
aad
pop
fsubrl
cs
call
imul
icebp
imul
popa
jae
jl
imul
filds
adc
push
daa
in
mov
mov
scas
imul
fcoms
xor
adc
inc
jns
push
rorb
xor
mov
xchg
into
dec
roll
xor
cmp
out
sub
popa
adc
pop
and
xor
push
imul
sahf
pop
pop
sbbb
jge
push
dec
sbb
sbb
fwait
out
add
cmp
xlat
in
xchg
clc
xchg
cmp
aad
xor
or
int3
jbe
xchg
xor
popa
adc
and
jmp
push
adc
fsubl
mov
xlat
aam
nop
adc
test
popl
cmpsl
and
mov
dec
lods
pop
call
call
insb
xchg
jbe
push
xchg
dec
pop
push
jns
mov
xchg
mov
push
xor
movsl
test
push
push
pusha
hlt
push
pusha
push
mov
xchg
push
sub
outsb
shlb
inc
icebp
movsl
mov
or
or
push
hlt
mov
sbb
inc
xchg
sbb
sbb
add
xor
adc
jcxz
push
cltd
inc
shrb
stc
imull
inc
pushf
pop
cmp
mov
mov
xchg
cmp
testb
sub
xlat
out
fisubs
pusha
test
cmp
popf
stc
push
in
push
sbb
mov
cmp
mov
imul
ljmp
sbb
push
or
jne
lcall
cmp
cmp
and
jge
pusha
sbb
enter
and
in
in
clc
shl
jbe
cwtl
mov
orl
push
pusha
jge
repz
pop
out
int
xor
pop
pop
push
rorb
sarl
aas
or
pop
xor
outsb
pop
push
jae
scas
clc
mov
push
mov
mov
scas
pop
mov
loop
jb
jle
ljmp
stos
ret
lret
jp
dec
push
and
leave
int3
push
push
fisubrs
imul
mov
cmp
push
pop
mov
add
clc
xor
xor
xor
shrl
fs
adc
ja
add
and
mull
enter
mov
inc
adc
pop
adc
mov
mov
pop
aas
jmp
jge
mov
ret
adc
loop
xor
pop
inc
jbe
jge
test
lcall
inc
pusha
sub
push
push
xchg
mov
jg
inc
in
fsubs
add
dec
pusha
out
push
mov
sarl
lcall
imul
loopne
leave
pusha
rorb
push
xor
ljmp
repz
scas
lret
add
push
add
inc
hlt
pop
adc
inc
add
pop
pop
test
add
mov
sbb
test
mov
std
xor
or
and
int3
adc
mull
or
lret
aaa
cmpsl
mov
pop
or
sub
aaa
sub
je
lahf
sahf
push
pop
fs
adc
and
push
adc
mov
jo
pop
pop
insb
mov
cmp
xchg
pop
or
movsl
mov
jo
jmp
es
xor
movsb
mov
fistpll
rcl
mov
pop
mov
stos
push
cmp
xchg
popf
sbbb
add
test
push
loope
outsb
test
jle
rclb
push
sbb
push
test
les
insb
clc
add
cld
lret
out
ret
or
fisubs
fwait
jb
xchg
inc
push
loopne
sub
rcrl
pushf
jae
dec
cmp
sbb
sbb
and
addb
and
add
iret
fsubs
cmc
dec
int
jge
not
faddl
push
cld
push
jo
outsb
xchg
dec
add
adc
jo
add
mov
cli
lret
test
lds
inc
hlt
cmpsb
ds
sbb
dec
or
mov
mov
out
cmp
pop
ret
outsl
mov
mov
sbb
xchg
or
enter
push
sti
repz
sub
mov
and
mov
push
mov
pushf
ja
in
and
test
sbb
outsl
push
xchg
mov
push
cwtl
addr16
or
push
sub
add
mov
stc
mov
loopne
lock
fidivrl
call
push
sahf
xor
pop
adc
xor
and
sahf
std
out
sti
sub
es
cmc
outsb
shl
leave
pop
dec
loope
or
fnop
jecxz
xor
stos
cmp
adc
jg
push
or
iret
lahf
in
outsl
shrl
or
sbb
dec
mov
aas
fiadds
test
ljmp
mov
fwait
icebp
test
or
insb
inc
loop
cmp
add
xor
lock
fcoms
inc
sub
aam
filds
jb
movsb
and
hlt
jne
ficompl
adc
arpl
jge
pusha
and
ret
dec
pop
rorl
add
gs
cltd
js
push
daa
push
dec
aad
jno
lods
cmc
loope
mov
hlt
jmp
ss
mov
mov
xchg
andl
aas
or
adc
mov
sbb
arpl
mov
lock
test
mov
push
in
in
int
xchg
test
fwait
stos
lahf
cmp
out
lock
sub
pop
mov
sarb
gs
in
xor
or
arpl
sub
fsts
push
icebp
mov
lahf
sub
lods
push
test
xchg
fs
mov
aaa
jg
popf
sbb
inc
fildl
xor
and
test
shll
pop
xchg
fcomps
iret
mov
in
push
add
outsl
mov
pop
cli
loopne
movsb
jp
fldenv
mov
adc
loop
mov
xchg
lcall
sub
ljmp
fs
test
push
jb
div
adc
push
repnz
jp
addr16
ds
inc
xor
and
mov
fs
inc
in
xchg
add
in
pop
imul
sbb
fs
push
fcoms
adc
pop
dec
in
fildl
pop
jge
xlat
pop
lret
mov
sbbb
dec
outsb
push
sub
or
les
lcall
sbb
shlb
jle
cmp
arpl
enter
aas
pop
push
inc
test
push
icebp
ret
xor
and
shlb
outsb
repnz
cmpsb
xchg
mov
rclb
pop
sub
rcrl
sub
fs
cli
jne
out
xchg
xchg
pushw
inc
pop
cmc
lret
ds
cltd
ljmp
inc
jmp
mov
dec
add
and
sbb
push
xor
push
lods
adc
cld
add
mov
push
push
mov
fsubp
sub
lods
and
jo
fldenv
js
push
roll
js
mov
lahf
and
and
out
xchg
add
jle
fucomip
jecxz
mov
add
into
pop
ficomps
sti
rcrb
adc
mov
mov
sub
add
pop
test
dec
push
ret
stc
not
test
xchg
dec
lahf
divl
pop
jae
scas
pop
inc
add
add
push
cmp
jmp
mov
clc
xchg
scas
rcl
pop
add
xchg
pop
sbb
xchg
and
test
sbb
pop
jle
movsl
gs
cmp
lods
inc
in
mov
and
push
dec
aas
in
aas
cmp
insb
push
jge
jae
ret
sbb
aas
cmp
cmp
in
xor
cwtl
adc
jno
and
push
loopne
mov
xchg
push
sub
cmpsb
push
jmp
xchg
test
mov
xchg
sub
fsin
jge
arpl
mov
lret
sahf
out
aad
xlat
in
rcl
pop
ds
loope
test
jbe
lret
std
ljmp
pushf
inc
fnsave
shrb
lea
cs
xor
jl
inc
jl
pop
cmp
mov
lahf
add
jmp
mov
jecxz
movsl
xchg
jle
jp
lea
push
pop
jecxz
add
jnp
test
fbstp
ja
daa
lea
gs
jle
dec
adc
leave
dec
in
xchg
repnz
mov
xor
sbb
negb
mov
in
mov
adc
pop
sub
fdivrp
fucomip
fdivrl
push
mov
inc
je
add
inc
inc
sbb
enter
inc
sub
in
ret
in
aam
xchg
cmp
xor
jl
mov
out
jecxz
out
jns
push
sbb
sbb
mov
stc
sub
and
cli
cmc
add
lret
fsts
mov
ret
sahf
stc
fcoml
sub
or
jne
std
xchg
dec
aas
add
scas
xor
adc
ja
clc
mov
fstpt
pusha
jb
add
adc
outsb
lods
and
das
xchg
push
cs
add
lret
xor
dec
sbb
test
popl
ret
inc
sbb
pop
das
xlat
in
clc
mov
scas
scas
adc
pop
cli
mov
aam
jb
mov
xor
adc
or
testl
mov
fdivrl
xor
cwtl
movsl
dec
pop
pop
jecxz
cwtl
imul
mov
lock
testl
or
imul
inc
insb
aad
bound
filds
das
push
ret
or
sarl
mov
mov
sbb
insl
cmpsb
jae
cmp
pop
cli
loopne
adc
pop
jmp
mov
outsb
adc
dec
dec
dec
adc
pusha
enter
int
out
xor
cli
dec
movsb
push
adcl
inc
mov
sbb
push
jmp
enter
lods
lcall
test
lahf
jb
pop
stc
jl
and
mov
movsb
cli
mov
repnz
cmpsl
lods
push
pop
add
push
mov
jl
ficoml
insb
inc
fisubl
sbb
push
sbb
push
sbb
insl
lea
pop
adc
sub
ss
sub
das
push
jl
data16
fs
lea
rcrb
push
out
insl
pusha
loopne
inc
push
movsb
sub
push
mov
loop
sbb
mov
jg,pt
ljmp
mov
ret
ja
stc
sahf
hlt
cmp
sti
inc
mov
test
add
ds
mov
enter
inc
cli
std
loopne
stos
mov
loopne
inc
mov
pop
mov
fmull
lods
mov
dec
in
fiadds
mov
push
jp
shrb
dec
pop
rorl
jno
stc
jg
clc
dec
sub
mov
dec
inc
sbb
in
mov
jb
add
adcl
xor
add
push
sbb
dec
mov
jg
js
aad
scas
or
popf
cmp
aaa
iretw
les
aas
fs
jae
ret
push
mov
xchg
bound
mov
or
dec
inc
xchg
pop
xchg
pushf
shlb
lret
inc
push
jbe
andl
xchg
popa
testb
js
dec
clc
lret
dec
push
jns
xchg
dec
loopne
cs
filds
xchg
jnp
stos
inc
outsl
lock
imull
mov
stc
out
mov
int3
bound
sbb
pop
dec
mov
xchg
mov
das
ficoml
clc
std
sub
adc
lea
pop
idivb
cli
movsb
cmp
xchg
ljmp
hlt
dec
mov
xchg
xor
pop
and
pop
push
cli
sbb
adc
leave
dec
jb
adc
cmpsl
in
pusha
cltd
movsl
xchg
jp
jbe
popa
iret
and
ljmp
mov
iret
jns
cmp
sti
ss
sub
sub
movsl
and
in
mov
cmp
je
and
movsl
xor
adc
inc
scas
fst
bound
ljmp
hlt
out
xchg
cmp
aaa
test
mov
fsubs
pop
mov
jecxz
lods
pop
ret
mov
cld
add
push
loope
add
test
aaa
dec
add
call
push
mov
mov
pop
popf
fidivrl
out
push
sbb
or
pop
gs
jo
add
and
jo,pt
mov
pshufb
loopne
push
popa
xor
test
adc
call
stos
dec
push
add
std
jne
adc
ja
jecxz
adc
mov
and
leave
test
jns
test
pop
cli
sub
cltd
inc
je
out
icebp
xchg
xor
push
add
test
jmp
dec
fwait
pop
jl
inc
jno
fldcw
add
inc
daa
aaa
xlat
mov
aas
jns
stc
or
pushf
test
push
pop
nop
pusha
pop
mov
jne
daa
push
setle
popa
cmp
subb
jns
insb
mov
cmovnp
ret
cwtl
sbb
push
mov
push
pop
inc
ljmp
incl
bound
sbb
pusha
jb
fcmovnb
jae
inc
sbb
or
ret
popa
push
xor
mov
mov
cs
add
dec
sub
push
inc
adc
dec
repnz
je
nop
cli
sub
pop
leave
xor
xchg
inc
lahf
mov
ficoms
fistps
fadds
cld
jb
rol
fnstcw
loope
cs
sbb
imul
mov
loopne
adc
cmp
rcrb
adc
cmc
in
pushf
test
inc
shlb
movsb
inc
pop
cmp
mov
push
repz
scas
popf
mov
and
cmpsb
popf
or
call
jge
data16
sub
mov
jp
scas
hlt
mov
sub
add
imul
jle
and
cli
scas
mov
xchg
and
mov
jp
int
shll
sbb
loop
stc
jae
sahf
fdivs
pop
in
lret
push
xchg
in
push
inc
popf
push
fwait
in
lret
jg
in
inc
lahf
push
cs
call
test
lds
add
scas
jo
pop
pop
xor
cmp
mov
fisttpll
pop
ljmp
dec
inc
and
add
lret
lahf
xchg
aas
inc
mov
into
xchg
add
mov
xchg
dec
or
popf
in
and
fcmovne
push
mov
and
or
outsb
lcall
cmp
xchg
lds
stos
add
push
mov
sbb
in
stc
mov
arpl
sarl
out
add
cmc
pop
in
pop
imulb
fnstcw
push
push
push
stos
stos
incb
leave
not
sub
test
movsl
stos
stos
mov
pushf
jbe
push
lret
fildll
add
lds
ljmp
stos
xchg
shll
lret
add
les
pop
call
orl
sub
ret
outsl
mov
stc
scas
inc
inc
cmpb
mov
mov
enter
jb
cmpsl
mov
mov
sub
inc
inc
xor
imul
or
push
bound
rorl
sub
out
scas
cmpb
rcll
add
test
outsb
xor
out
sub
jnp
pop
cltd
push
dec
cs
sbb
stos
arpl
call
or
dec
push
ror
bound
push
adc
lcall
test
aas
or
mov
adc
and
cli
jecxz
pop
xlat
mov
sarl
js
sbb
push
adc
mov
stos
jle
mov
dec
lret
ja
fcompl
ret
sbb
sar
sbb
outsl
ficompl
mov
ljmp
movl
lret
push
ss
adc
lret
adc
xchg
mov
dec
jns
into
movsl
add
jae
pop
mov
push
jge
stos
frstors
mov
jns
les
mov
sub
mov
popf
scas
mov
jp
rcrl
repz
jo
gs
cmp
lret
mov
or
and
xchg
lods
es
in
jae
sbb
sub
jl
jmp
and
scas
jecxz
xchg
sub
jbe
mov
movl
les
adc
out
data16
lret
adc
push
and
lea
push
scas
mov
adc
dec
addr16
test
inc
and
fucomp
xor
stos
sar
xlat
test
fsubrp
stc
mov
lods
inc
popf
push
mov
adc
fstl
adcb
mov
mov
clc
sbb
jl
add
adc
loopne
sbb
adc
push
out
dec
call
insb
inc
mov
fbstp
pop
adc
jp
xchg
shll
push
pop
cmpsb
push
jp
fwait
xchg
lcall
mov
sub
sub
test
je
sbb
sarb
or
mov
pop
jbe
dec
jl
fs
sub
ss
test
mov
je
and
xor
ficoml
inc
ret
or
mov
xor
push
cwtl
mov
ljmp
ret
das
inc
mov
nop
and
dec
iret
sbbl
inc
dec
sbb
mov
aam
lock
pushf
xor
add
call
pop
push
mov
adc
in
mov
pop
outsl
insl
daa
clc
push
xor
sub
dec
xchg
popf
or
xchg
pop
and
lret
fs
pop
jae
push
sarl
xor
pop
mov
loop
insb
loopne
popa
sub
xchg
test
addb
insl
fs
pusha
in
iret
mov
stc
lods
dec
mov
xor
cmp
and
pop
scas
inc
test
in
test
imul
shlb
or
scas
pop
rcrl
daa
test
daa
ds
cmc
mov
loop
xchg
iret
mov
or
jb
mov
movsb
xor
mov
mov
mov
les
push
fimuls
int
aam
sub
sahf
cmp
push
mov
or
outsb
inc
fstl
xor
pop
jmp
sub
mov
test
add
xchg
add
adc
popa
cwtl
add
int3
dec
pushf
xor
or
xor
lcall
out
arpl
inc
out
loop
cwtl
and
ljmp
ljmp
ss
mov
add
xchg
lods
pushf
mov
lods
pushf
dec
out
clc
adc
xchg
push
into
cmp
push
or
mov
ret
stos
fidivl
lods
add
sarl
outsl
pusha
fimuls
imul
add
add
cmp
xchg
adc
test
mov
lds
cli
sbb
pop
dec
mov
sub
mov
jns
jbe
outsb
push
mov
outsl
test
cmpsb
out
and
cld
cmp
push
lods
data16
clc
test
xadd
mov
dec
dec
cmovns
lahf
and
push
in
sbb
cli
sti
push
ret
pop
lods
ds
mov
mov
add
xchg
dec
out
xchg
push
adc
loopne
mov
sub
sub
mov
push
loop
roll
outsl
js
mov
sbb
aas
cmpsb
fdecstp
sbb
bound
mov
fbstp
call
xchg
xor
gs
mov
test
push
mulb
xchg
dec
pop
inc
xchg
out
in
scas
imul
in
cltd
loopne
in
add
mov
mov
dec
cmp
sub
fisubs
push
loope
pop
cmp
out
xchg
pop
xor
inc
fwait
in
push
jecxz
nop
jp
and
mov
jnp
imul
int
in
jge
sbbb
dec
popf
push
jb
inc
in
cmpl
jne
imul
loopne
sub
aas
mov
push
clc
in
call
out
push
ret
and
pop
fidivs
dec
inc
push
jae
or
dec
test
or
mov
rorl
mov
inc
mov
hlt
dec
inc
or
stc
xor
push
mov
cmp
shl
ss
daa
fildl
adc
pushf
repz
push
fbstp
sbb
pop
xchg
lods
jmp
lock
push
xor
mov
cli
in
lods
popf
xlat
and
inc
mov
xor
clc
movsl
jmp
mov
xchg
inc
adc
iret
fnstcw
call
cmp
pop
jl
dec
bnd
sbb
push
insl
lock
mov
pop
aas
push
aas
cmpsb
mov
out
cmp
rolb
sbb
lcall
sarl
inc
push
fwait
jae
cmp
call
jmp
ret
pushf
inc
dec
ljmp
xchg
cmp
filds
ljmp
bswap
jl
nop
sbb
je
xor
add
mov
cmp
inc
or
inc
xor
leave
push
subl
jae
xchg
push
add
sahf
cmpsl
mov
push
adc
mov
mov
cmpsb
in
xchg
imul
push
xor
pop
insb
jmp
inc
adc
nop
sahf
inc
mov
fists
sub
jle
int
pop
mov
push
cwtl
add
lret
xor
lock
cmc
lods
inc
jp
add
jl
mov
test
adc
xor
push
mov
cld
shlb
mov
mov
xor
or
scas
mov
lret
and
xor
inc
sub
sub
inc
add
js
mov
mov
in
aas
fwait
rclb
std
xchg
test
push
cmp
adc
insb
mov
nopl
stos
and
ljmp
insb
mov
sahf
sbb
lock
test
sahf
add
cmp
sti
sub
xchg
dec
mov
loopne
adc
jle
inc
sub
push
xor
aas
cmc
xchg
inc
or
adc
mov
jge
push
cmc
push
cmc
daa
das
add
ljmp
mov
ljmp
mov
movsb
sub
jmp
pop
inc
ficoml
inc
lahf
xchg
push
jo
add
cmpsb
pushf
cmc
mov
call
pusha
ret
dec
sahf
inc
sub
mov
test
int3
xchg
dec
jno
dec
mov
push
push
inc
mov
test
std
or
add
frstor
push
stos
je
lods
out
jge,pn
bound
testb
push
mov
addb
subl
or
mov
subl
repnz
in
push
mov
fwait
test
xchg
not
mov
xchg
adc
out
clc
jae
fimuls
mov
push
pop
adc
les
lods
mov
mov
cmp
sbb
push
or
dec
nop
xor
add
cwtl
das
inc
cmp
push
xchg
xor
mov
jg
out
mov
mov
into
leave
xor
sarl
cmpsb
je
and
adc
mov
push
mov
cltd
out
daa
pop
loopne
fs
mov
push
lret
int3
add
push
jae
clc
ss
shlb
xor
xor
inc
pop
add
mov
pusha
imul
loope
loope
pand
loop
or
mov
xchg
cmp
pop
mov
andl
int
cmp
adcb
mov
push
icebp
pop
lods
push
or
pop
sub
stos
in
inc
mov
cmpsb
dec
imul
push
fistpl
movsl
mov
lock
adc
dec
sub
add
mov
adc
clc
sbb
jo
dec
std
sahf
adc
in
out
pop
fiaddl
inc
push
fsubl
cld
enter
mov
inc
inc
pop
jp
in
mov
inc
in
call
mov
jmp
mov
loop
dec
sbb
jns
fnstcw
pusha
leave
imul
xor
inc
std
inc
add
sub
into
sahf
fsubrl
jb
mov
jbe
pop
sbb
nop
out
adc
adc
int3
jle
fcmovnbe
icebp
jmp
dec
or
insl
mov
sub
repz
lock
mov
and
cmc
pop
rcrl
sbb
ss
inc
aaa
loop
sub
cmp
mov
les
cmpsl
or
or
test
ds
stc
icebp
mov
fbld
lds
push
aas
stc
pop
es
adc
sbb
pop
jmp
cmpsl
mov
int
mov
pop
pop
pop
fsub
in
sbb
flds
icebp
test
pop
xchg
leave
out
mov
fcoms
cltd
mov
or
or
stos
cmpb
aad
mov
movsb
test
jbe
xor
shll
les
icebp
pop
std
loop
mov
ja
imul
scas
add
or
aad
sbb
mov
push
out
add
xchg
jp
sbb
inc
repnz
es
jns
mov
lahf
push
popf
icebp
ljmp
cmp
pop
incl
dec
rcrb
xchg
sbb
insl
jge
sti
out
fistps
subb
andb
mov
push
mov
flds
mov
mov
cld
pop
push
adc
sub
cmp
iret
lret
int3
sbb
orb
adc
jle
jnp
cmp
adc
sbb
inc
cmpsb
dec
clc
mov
jg
repnz
rol
xor
and
dec
loope
loopne
aad
and
lret
ja
xor
fsubrs
mov
mov
adc
lock
pop
out
stos
lods
sahf
inc
lcall
rcll
fcomps
mov
sbb
loop
lock
sbb
push
dec
cmc
cmc
dec
ret
mov
icebp
jae
jne,pn
or
aam
leave
subl
dec
xchg
xchg
fidivs
cmp
mov
lods
stos
xor
nop
lret
or
or
pop
jns
inc
ljmp
xor
rclb
mov
push
test
jl
lea
inc
test
nop
cmp
inc
mov
hlt
and
call
int3
movsb
xchg
inc
push
inc
int
in
mov
inc
lods
mov
das
dec
cmpsl
std
lock
aam
push
ret
test
jmp
addr16
adc
clc
insb
cmp
iret
loope
mov
cmpsl
scas
mov
jg
push
insb
add
movsl
loope
mov
jp
adc
mov
cmp
ret
inc
aad
mov
push
aam
or
movsb
mov
in
ss
stos
add
call
repz
mov
xchg
fcomps
into
push
adc
fwait
call
dec
aas
xchg
push
lods
out
out
pop
pop
pop
sub
lcall
jno
scas
sahf
mov
or
inc
jp
mov
xchg
add
adc
dec
dec
sub
xchg
aad
mov
fwait
pop
push
mov
and
pop
aad
xor
imull
out
mov
xor
aas
enter
dec
jg
xchg
mov
jns
sub
mov
dec
mov
jle
ljmp
cmc
rorb
pusha
popf
sub
push
add
cmp
fisubrl
lahf
insb
mov
cmp
push
jmp
jle
repnz
loop
lcall
mov
dec
repnz
add
ja
popf
es
mov
lock
movsl
or
nop
mov
push
decb
push
mov
mov
jne
daa
pop
add
sub
push
mov
mov
mov
or
addr16
mov
test
dec
movsl
mov
mov
dec
dec
mov
push
pop
jecxz
cmp
sub
lahf
and
loop
push
xor
sub
jbe
mov
mov
dec
sbb
clc
imul
xor
loopne
mov
xchg
jnp
xchg
xchg
xchg
mov
cmp
lds
add
ljmp
scas
je
xor
ljmp
dec
add
pop
mov
popa
ds
fmulp
push
repz
cli
cltd
sahf
aad
push
sbb
dec
lret
mov
push
or
ljmp
sti
pop
mov
repz
jo
cli
adc
cmp
repz
test
mov
xor
lret
lods
dec
cwtl
je
repz
ja
test
mov
xor
leave
mov
jo
int3
sahf
adc
das
in
rcl
pusha
jecxz
mov
adc
cmpb
fsubrs
cltd
dec
fwait
mov
pop
mov
xor
mov
jne
je
cmp
push
xchg
inc
and
or
orl
cmp
enter
xchg
mov
pop
and
mov
or
mov
mov
jne
cmpsl
pop
push
inc
jp
movl
pop
push
mov
imul
xlat
cmp
xchg
jge
inc
in
mov
or
test
into
repnz
in
xchg
mov
and
imul
lds
dec
sub
sub
idiv
ljmp
outsb
outsb
cmp
jge
xchg
es
push
cmp
notl
ficomps
cmpsl
pop
dec
frstor
sbb
jns
or
sub
push
dec
shrl
xor
push
lcall
lcall
hlt
ror
std
pop
adc
loop
jp
je
or
loopne
dec
or
jle
mov
xor
xchg
jns
les
and
es
and
push
andb
cmp
nop
enter
and
movsb
aas
fidivs
jno
jno
xor
scas
mov
push
scas
xor
lret
imul
out
sub
add
and
insb
nop
mov
dec
mov
pushf
test
lret
stc
js
pop
loop
rclb
push
loope
jg
jle
push
repz
mov
lahf
aad
shrb
push
scas
cli
jb
adc
ret
aaa
fistpll
push
lock
add
add
sub
sub
pop
out
sub
mov
mov
jne
pop
mov
dec
mov
pushf
das
fidivs
push
addr16
push
xchg
rol
in
sbb
inc
sbb
fcmovnu
inc
or
mov
aaa
dec
mov
cmp
insb
hlt
mov
ficoms
outsb
inc
inc
shlb
pusha
shl
testl
sub
mov
pusha
sub
xchg
adc
mov
xor
sbb
in
rorb
stos
pop
jae
jnp
dec
xor
iret
fmulp
xchg
mov
push
and
mov
cs
popa
daa
or
test
dec
mov
movl
fsubrs
and
sbb
movsb
mov
add
jecxz
shll
xchg
cmpsl
data16
xlat
sbb
xchg
or
int
addl
xchg
iret
sbb
lods
lcall
aam
mov
cmpsl
mov
loop
in
popf
sahf
shlb
fs
inc
mov
or
pop
jae
sub
mov
in
add
or
lds
cs
nop
popa
push
pushf
mov
add
mov
cmp
outsl
iret
insb
sbb
cli
push
lahf
out
cmp
mov
ret
out
sbb
mov
push
inc
repz
ss
inc
or
stc
iret
pop
addl
scas
cmp
lds
loop
mov
mov
rclb
inc
mov
gs
sbb
iret
sub
mov
fcoms
sub
out
xchg
or
inc
lret
mov
jecxz
lds
movd
xlat
outsl
subb
xchg
das
xor
xchg
and
enter
or
int
mov
mov
mov
lahf
insb
mov
push
jl
popa
test
xchg
mov
mov
xor
sub
pop
fmul
insl
and
sbb
jb
cmp
jne
call
xlat
mov
pop
in
cs
inc
mov
test
pop
roll
sbb
out
mov
xor
or
mov
mov
out
dec
push
enter
cmpsb
sbb
xor
xor
pop
mov
mov
jl
nop
movsb
sbb
jl
frstor
lcall
xchg
mov
sbb
ds
sbb
mov
mov
mov
pop
xor
xchg
rolb
inc
ds
jno
inc
das
bound
xchg
mov
stos
pop
mov
orb
sub
xchg
mov
shrl
cmpsl
fcoms
jno
out
aaa
xchg
xlat
mov
cltd
xorb
mov
adc
push
imul
popa
incl
pop
mov
xchg
ljmp
shll
fdivrs
sub
nop
inc
loop
into
dec
ret
dec
std
aam
jnp
xor
dec
cmp
pop
or
mov
pop
mov
lahf
mov
xor
fists
jne
adc
or
movsl
mov
pop
pusha
lods
sbb
or
inc
jo
inc
cwtl
cmp
stos
push
xor
xchg
add
imul
test
mov
xchg
sub
lret
shll
cmp
cmpsl
jmp
jo
test
and
ficoml
lret
fucompp
stos
imul
testl
inc
mov
or
sahf
xchg
xchg
mov
das
and
add
aam
out
outsb
mov
repnz
movsl
jne
add
lret
div
js
insb
aaa
jge
inc
rorl
cmc
inc
mov
jbe
adc
testl
js
sub
sub
pop
push
xorb
je
jo
lahf
insb
xor
mov
mov
cs
push
jo
pop
adc
mov
pop
push
leave
push
mov
inc
mov
int3
and
ret
adc
mov
jno
dec
imul
mov
shlb
cmc
nop
sahf
daa
call
inc
outsl
or
insl
pop
xchg
fld
cs
jnp
imul
pop
imul
push
xor
adc
xor
pop
shlb
or
jne
adc
sub
in
lret
mov
movsb
mov
les
jmp
add
fdivl
das
jle
xchg
test
pop
hlt
lcall
and
mov
mov
cmp
aaa
daa
repz
and
and
xchg
lds
sbb
pop
inc
pop
jg
adc
xor
leave
aaa
xorl
lahf
sub
xchg
inc
fdivrl
mov
jnp
outsb
in
push
movsl
mov
shr
xor
js
add
imul
cmp
xchg
mov
add
or
cmp
or
aas
test
pop
jmp
roll
test
xor
sbb
nop
lock
popaw
pop
pusha
sub
nop
pop
popf
cmpsb
mov
mov
out
enter
mov
je
jle
inc
insb
cmpsb
xorl
inc
jae
lock
rolb
lcall
lds
add
xchg
cmp
dec
xor
loop
push
insl
lods
inc
mov
js
jo
insl
cmp
addr16
addr16
jae
gs
push
in
int3
and
mov
lret
out
push
jo
mov
xchg
jbe
repz
icebp
mov
les
test
insl
push
push
js
pop
or
das
popf
sbb
aas
in
adc
push
shrb
jae
jns
cld
cmpsb
add
lcall
sbb
in
and
sbb
arpl
mov
inc
xchg
sbb
fdivrs
test
pop
outsb
jmp
cmp
out
xchg
pop
scas
adc
xor
in
push
xor
dec
seta
mov
test
sub
ds
dec
sub
cli
push
push
movsl
inc
pop
sub
imul
mov
repz
jo
loope
adc
loope
lds
ja
or
xchg
and
out
dec
push
xor
stc
jl
xchg
xlat
push
jecxz
mov
inc
ucomiss
adc
aam
cmp
test
call
es
xor
pop
cs
add
sbb
stc
out
lahf
add
fstpt
stos
and
adc
inc
pop
pxor
dec
fcomps
std
enter
pop
push
jp
inc
sbb
push
mov
loope
add
ret
fisttpl
lock
push
hlt
or
ret
sub
inc
shlb
push
outsb
mov
add
mov
and
add
and
jae
faddl
movsb
pop
pop
cmp
sbb
clc
jnp
jnp
cmpl
in
mov
push
pop
inc
mov
clc
mov
push
dec
cs
adc
inc
sbb
es
lret
push
sub
mov
lret
mov
sub
fsubr
cli
push
imul
ret
stos
shlb
sahf
jns
add
outsl
loopne
mov
fadds
leave
stos
jns
inc
lea
jne
pop
cmpsl
inc
push
adc
xlat
xchg
sbb
loope
dec
sub
lock
les
inc
dec
lods
push
adc
dec
fisubl
jge
push
jecxz
adc
mov
fcomip
out
fwait
rcll
orb
lock
es
in
xchg
mov
scas
add
push
aad
fcoml
js
mov
aad
movsl
into
sub
xor
sbb
cltd
repnz
cmp
test
adcb
out
das
sahf
push
or
jae
mov
mov
mov
clc
push
or
shrl
ret
push
cmp
jle
sbb
imul
test
fwait
mov
aad
cli
push
notb
mov
sub
push
inc
fwait
inc
add
xchg
and
movsl
imul
adc
inc
icebp
outsb
subl
sbb
rorl
jne
inc
ds
xchg
arpl
vpsrlw
inc
std
mov
stos
mov
mov
mov
mov
mov
lds
mov
cld
pop
in
mov
jnp
mov
nop
pop
mov
adc
mov
dec
lods
cmpsb
cmpsl
lret
mov
js
cwtl
xor
aaa
mov
mov
mov
pop
push
xor
add
pop
mov
push
scas
or
out
cmp
mov
xchg
cmc
push
dec
xor
push
inc
jl
loop
imul
inc
xchg
cmp
rcll
jns
jl
xor
mov
mov
inc
sti
leave
pop
or
orl
dec
or
je
cwtl
sti
aaa
ret
sti
mov
or
clc
push
mov
scas
adc
popa
push
int3
sbb
jecxz
fnstcw
cmc
aas
add
cmpsl
cwtl
sahf
fstpt
and
mov
jnp
pusha
gs
stc
fnstenv
mov
repnz
data16
ror
lahf
out
in
shrl
push
aad
fsub
and
push
lods
mov
dec
cmpsb
jecxz
jns
xor
jae
and
fwait
mov
jg
mov
and
dec
jae
cmpsl
fdivl
inc
xchg
outsl
xor
cmp
push
stos
pusha
cmp
pop
out
mov
movsl
and
dec
shll
add
jns
out
or
xchg
and
in
call
aas
xchg
cli
test
testb
and
daa
sar
je
and
test
loope
mov
cmpsl
add
arpl
daa
out
jbe
faddl
lret
pop
cmpsl
jns
mov
cmpsb
shld
xchg
mov
notl
rcll
add
push
adc
and
lcall
rcl
push
rcrb
stc
cli
jg
cmp
fs
pop
xchg
jbe
ret
jae
test
in
outsl
jmp
push
dec
or
hlt
mov
mov
lock
pop
inc
push
adc
std
and
jns
lock
pop
add
repnz
cwtl
cvttps2pi
jns
fiaddl
inc
data16
fstpt
shll
adc
push
outsl
insb
mov
or
repz
es
dec
popf
in
cmc
sbb
dec
xlat
cmp
dec
imul
cmp
das
subb
inc
sbb
adcb
xor
or
and
sbb
xchg
adc
insb
inc
dec
push
inc
aas
test
leave
mov
mov
pop
or
fs
sbb
sbb
call
mov
and
pop
testb
jmp
ror
in
daa
pop
nop
sbb
imul
cli
dec
test
sub
jge
jns
jne
enter
sti
push
jo
test
lods
push
jae
mov
movsb
roll
mov
int
cmpsl
inc
cmpsl
push
arpl
lock
aam
ficoms
sbb
mov
mov
movsb
in
jo
js
cmp
repnz
enter
jae
out
vmovaps
clc
xchg
outsb
insb
cmc
dec
jbe
in
dec
inc
aaa
rol
pop
out
insb
jecxz
mov
push
insl
push
hlt
mov
rcl
push
stos
and
orl
or
inc
int
mov
ret
es
aaa
scas
repz
or
and
insb
test
inc
arpl
pop
roll
roll
mov
fsubrs
add
lret
mull
paddsw
mov
sub
out
xor
sub
aad
aad
movsl
adc
and
into
add
add
stos
cmp
jb
xchg
outsb
xchg
xchg
loop
sti
mov
mov
push
loope
jbe
sub
xchg
adc
xchg
lods
sti
lock
dec
pop
adc
dec
daa
and
call
push
mov
outsb
cpuid
negl
mov
ret
and
cmpl
dec
mov
xchg
insl
cmpsl
add
sbb
iret
test
jne
mov
inc
dec
mov
cs
jmp
sahf
sbb
mov
or
push
iret
stos
sahf
push
leave
movups
mov
rcrl
sbb
mov
lock
xor
or
hlt
sbb
cld
mov
lds
pop
aam
cltd
inc
mov
pop
cmp
pop
push
jge
pop
jno
adc
add
xor
cmp
cmp
and
sub
sbb
mull
xor
mov
pop
cmc
sub
mul
jns
xor
cmp
push
mov
mov
xor
or
and
jbe
xchg
addr16
test
std
pop
adc
push
and
insb
cli
jo
stos
jbe
push
loopne
inc
orb
inc
popl
mov
fcomps
jg
stos
push
test
cli
scas
sub
daa
decl
jnp
fmull
nop
jnp
std
add
sbb
daa
mov
xchg
lds
adc
dec
inc
mov
inc
or
sbb
sbb
dec
dec
dec
in
dec
mov
sub
fsubs
daa
lds
out
mov
scas
mov
scas
mov
arpl
popa
push
lods
push
ja
shll
dec
mov
jnp
data16
pop
cmpsb
jmp
mov
xchg
in
pop
mov
cmp
out
arpl
in
aas
xor
pop
pop
mov
sub
mov
or
inc
loopne
into
inc
mov
sub
inc
push
popf
jb
sti
sub
mov
and
out
lret
in
push
xor
lret
jbe
sahf
enter
dec
cmpsb
out
imul
mov
loope
and
enter
sbb
dec
sub
daa
or
inc
mov
mov
or
out
pop
test
cltd
add
or
add
mov
cmpsl
xlat
add
xchg
cs
out
cmpsb
js
push
push
popf
dec
jne
andl
ss
cmp
lods
out
push
jbe
aam
pop
and
movsb
mov
pusha
or
mov
dec
jae
jmp
fcomps
jmp
adc
ficomps
jp
push
subl
mov
pop
xlat
adc
jmp
mov
out
cs
push
test
add
adc
xchg
loopne
add
mov
int
decb
movsb
iret
and
enter
mov
fucom
mov
sbb
fldt
push
cmpsl
gs
into
inc
mov
aam
sbbb
divl
pop
mov
mov
loop
push
pusha
mov
xchg
xchg
jp
fdivl
and
fisubrs
mov
dec
mov
fwait
pushf
clc
cmp
xchg
jns
xchg
out
sub
out
jbe
fcomps
mov
or
in
in
and
xor
imul
movsl
mov
cmp
cmp
repz
jp
pop
sub
fs
jne
in
jg
push
sbb
pop
lret
cld
push
jnp
cmpsb
push
imul
push
nop
push
mov
inc
movsb
push
shll
incl
pusha
fidivrs
insl
pop
or
and
add
andb
cmp
jne
rcll
loop
dec
lods
movsbl
add
sbb
bound
imull
pop
or
xor
mov
rcrb
mov
je
sub
mov
or
popl
or
push
cmc
pop
ss
scas
pop
jecxz
jb
imul
jae
mov
cltd
pop
mov
les
mov
push
int3
iret
sbb
inc
add
shlb
xchg
and
inc
mov
in
repz
nop
lcall
sti
push
ret
jne
inc
stos
insl
jl
mov
xchg
jno
and
sbb
add
dec
cmp
push
dec
or
ja
xor
dec
jecxz
jl
ja
xchg
jmp
loopne
jb
add
shrl
loop
fdivl
xor
cmp
xchg
stos
mov
xchg
mov
adc
xlat
add
jae
xchg
movl
pop
loop
jmp
scas
hlt
inc
cmc
out
mov
mov
mov
bound
sub
dec
outsb
xor
rolb
lods
lods
das
scas
int3
data16
mov
aam
or
out
test
pusha
dec
lds
push
nop
roll
outsb
xor
cmp
iret
aas
push
push
repz
sbb
fcoms
xlat
inc
add
jl
ljmp
add
nop
push
scas
xor
jo
sub
pusha
xchg
sub
mov
pop
insb
pop
imul
cs
adc
scas
lret
xor
push
fnsave
ret
in
out
jbe
cmp
lea
dec
mov
xchg
mov
repnz
mov
leave
movsb
xchg
movsl
xchg
cmpb
jnp
sbb
sub
popf
mov
mov
sbb
mov
mov
mov
fwait
pop
mov
ja
shl
cmp
lret
inc
mov
sahf
xchg
stc
arpl
mov
ret
adc
lock
xchg
repnz
andb
xlat
mov
cltd
shrb
pop
adc
add
clc
cld
cmpsl
subl
scas
loop
or
dec
or
mov
cmpsb
sub
sbb
mov
jle
out
sbb
pop
mov
xchg
dec
arpl
dec
lcall
adc
mov
lods
cmpsb
cmp
addr16
mov
je
or
lcall
stos
icebp
push
negl
cwtl
add
xlat
popf
dec
outsl
mov
pop
pop
jl
xor
sbb
cld
mov
loope
divb
data16
cmp
cli
in
xlat
inc
mov
jecxz
xchg
hlt
rolb
movsb
cmp
loope
movsl
aam
ss
mov
sbb
lcall
xchg
cmp
xchg
xlat
shl
sahf
js
inc
cli
movsl
push
aad
lea
lea
inc
or
test
or
fstpl
or
mov
jns
popf
pushf
jns
push
mov
lcall
adc
and
sub
sbb
bound
or
fidivl
jge
repnz
jle
pusha
imul
shlb
fsubrl
cmc
lcall
dec
fcomps
daa
or
into
mov
movsb
cmc
out
rorb
pop
adc
pop
insb
and
pop
or
sbb
jo
leave
ret
cmpl
inc
bound
push
xlat
dec
adc
data16
mov
add
pop
dec
inc
fwait
adc
sub
xchg
pusha
adc
out
sbb
ljmp
push
fsubrs
cli
jecxz
push
test
cs
xchg
outsb
mov
mov
push
in
dec
les
lods
cmc
and
or
sub
lods
mov
repnz
lods
dec
mov
sub
add
cmpsb
cli
pop
test
imull
jg
and
adc
jp
lahf
push
ret
adc
push
pop
adc
push
jae
mov
lea
rolb
stos
stc
or
push
cmp
xlat
adcl
sub
jmp
sbb
push
stos
int
aad
ljmp
outsl
xchg
sub
incl
dec
add
hlt
sub
out
mov
cmp
push
inc
movl
ds
jmp
outsl
lahf
xchg
sarb
fcomp
inc
adc
inc
push
stc
mov
popa
jno
xchg
cmp
pop
mov
pop
out
mov
mov
mov
inc
es
jo
popa
notb
dec
mov
pop
xchg
test
mov
and
dec
in
add
movsb
lcall
aad
mov
push
outsl
call
mov
push
xchg
sbb
lock
popl
test
inc
cs
cmp
ljmp
push
leave
insb
aad
fldl
in
jbe
and
push
and
jle
outsl
mov
sti
incb
frstor
out
imul
mov
inc
push
xchg
in
hlt
push
test
shl
and
push
aas
repz
les
add
repnz
scas
cmp
test
ret
add
push
ss
pushw
push
and
jnp
dec
repnz
cmpsb
bound
loop
sub
push
mov
test
fcmovu
or
push
push
add
inc
addr16
ja
jbe
xor
adc
fcoms
and
or
movsb
mov
lods
in
movsb
inc
push
aam
bound
add
push
out
mov
jp
push
push
mov
cmp
aas
ret
cld
inc
push
js,pt
and
mov
mov
dec
jno
cmp
lret
mov
sarb
cmc
dec
dec
add
pop
clc
jnp
sbb
add
sub
std
aaa
es
lods
lods
ja
lret
jge
fnstenv
out
call
in
lcall
mov
mov
cmc
push
cmpsb
sbb
mov
in
les
adc
lds
or
pop
aaa
jmp
dec
std
hlt
inc
dec
push
ficomps
sarl
or
mov
int
test
push
mov
daa
movsl
jmp
rclb
lods
addr16
aad
dec
aaa
push
pop
outsl
scas
ja
pop
psrlq
push
imul
mov
xchg
cmovl
leave
scas
test
test
adc
mov
loopne
inc
movsl
loopne
test
call
mov
jecxz
push
push
fimull
push
aas
faddp
sbb
fimull
icebp
in
mov
stos
cwtl
mov
jb
xchg
orb
sti
inc
mov
pop
mov
aas
cmp
fsubrl
fs
insb
jae
lahf
inc
lret
mov
in
mov
jae
int
enter
stc
scas
mov
rclb
aad
test
cmp
inc
rcll
inc
mov
xchg
mov
lcall
stos
outsb
add
xor
fistpll
jg
popa
push
xor
data16
push
and
jno
cmp
ffreep
pop
jno
mov
sbb
inc
mov
fidivrs
pop
pop
push
nop
dec
ficompl
adc
mov
loope
dec
dec
add
insl
lods
or
fcompl
push
jecxz
shlb
push
pop
fsubrs
cltd
insb
fwait
in
int3
stc
mov
jecxz
loope
ss
pop
clc
xchg
aad
arpl
pop
fildll
push
jb
cmp
sbb
leave
andl
pop
subl
mov
sti
fcmovnu
fidivs
inc
adc
fimuls
fdivl
mov
negl
arpl
test
test
repz
jg
cmp
push
add
inc
inc
addr16
push
adc
dec
popf
sub
es
inc
arpl
repz
push
mov
adc
push
popa
repnz
inc
in
jns
data16
repnz
mov
popf
mov
mov
clc
pop
imul
jl
xchg
movsl
pop
push
imul
xchg
inc
cmp
das
ljmp
mov
xchg
cmpsb
pop
jno
mov
inc
jp
dec
adc
cli
push
inc
xor
call
mov
test
jl
adcb
scas
stos
push
loope
ljmp
jle
lock
mov
inc
orl
es
push
add
insb
add
xlat
mov
xchg
fisubrl
ja
pop
cmpsl
call
mov
andnps
push
das
subl
nop
dec
xor
je
push
testl
add
fsubrl
mov
push
xor
in
cmc
lock
rcl
jle
jo
stos
adc
cmpsb
push
mov
loop
pop
data16
sbb
and
cmc
adc
fadds
dec
insl
idiv
mov
fidivs
aad
jb
sub
push
mov
fdivrp
fcompl
adc
loopne
mov
jmp
iret
pop
jge
jge
scas
xor
jb
cmp
xchg
pop
sbb
sahf
shrb
test
jno
jl
jae
jo
push
fs
sahf
rcrb
lret
xorb
shlb
imul
fucom
dec
in
inc
ds
xchg
xchg
scas
push
pop
or
mov
mov
cli
mov
outsl
mov
xlat
push
pop
pop
push
std
dec
xorb
jge
pop
push
jns
test
cmp
cmp
xchg
movsl
adc
int
and
pusha
inc
and
xor
push
cmp
adc
fwait
push
cmpsl
sbb
adc
pop
pxor
xor
pushl
pop
add
out
xchg
sbb
movsb
pop
and
adcb
pop
imul
outsb
fwait
xor
inc
adc
in
xchg
pop
rolb
sbb
clc
jl
sbb
pop
popa
rcrb
lahf
cmp
push
stos
in
add
movl
cmp
xor
test
ficoms
repnz
mov
mov
outsl
mov
add
mov
dec
roll
dec
cmp
data16
addr16
aam
sub
shll
xchg
fisubs
inc
enter
pusha
sub
cmp
das
jmp
dec
dec
cmp
add
repz
adc
fmul
sahf
or
add
and
sbb
xor
add
inc
jne
rcrl
loopne
shrl
jmp
lock
push
push
inc
jecxz
vstmxcsr
mov
adc
jge
add
pop
adc
jno
aam
or
xchg
sbb
push
scas
adc
xchg
sbb
in
adc
jne
jp
pop
mov
inc
xchg
jl
mov
xchg
jo
cmp
xchg
in
dec
jmp
or
mov
int3
xor
loop
out
pop
bound
daa
or
sti
pop
push
mov
cmp
jo
hlt
dec
fstl
dec
imul
and
add
and
sbb
inc
fistpl
jbe
xchg
inc
sub
sbb
or
aas
dec
cld
into
das
sbb
mov
repz
je
and
imul
xor
in
cmp
xchg
test
push
fidivrl
shl
stos
lock
inc
sti
jbe
ds
icebp
xchg
sub
pop
jno
mov
inc
mov
outsl
push
dec
add
outsl
push
aad
mov
jge
pop
xchg
hlt
mov
pop
scas
mov
jns
jecxz
dec
jp
push
or
aad
xlat
outsl
inc
aam
push
push
inc
mov
ret
das
inc
lods
xorl
cmp
mov
jmp
adc
sbb
int
dec
xchg
sahf
test
sub
insb
or
mov
and
loop
add
mov
cli
out
sbb
mov
cs
and
and
mov
sub
mov
xchg
fisttpl
jmp
jecxz
add
mov
cld
outsl
test
pop
mov
lods
jg
cmp
jmp
int
decl
pop
jg
xor
cmp
push
jmp
outsl
dec
xchg
loopne
add
aas
fidivs
fisttpll
dec
movsb
rorl
mov
ljmp
addr16
out
daa
add
inc
loop
les
or
imul
cmp
add
hlt
icebp
into
inc
lret
test
aam
mov
fisubrs
mov
lea
out
push
mov
sub
cmpsb
repz
mov
in
das
clc
enter
dec
or
dec
adc
insb
mov
or
shll
add
idivb
mov
inc
dec
imul
pop
sbb
pop
ret
mov
add
lock
jle
mov
pop
into
push
roll
sahf
adc
lret
or
in
sub
push
xlat
adc
enter
or
sbb
inc
inc
daa
push
push
sbb
scas
loope
or
in
mov
mov
sub
cltd
mov
push
dec
jmp
in
cmp
test
jle
and
stos
push
or
pop
shr
out
sahf
xchg
hlt
add
xlat
shr
imul
xchg
aaa
lock
push
ljmp
insl
add
inc
mov
fdivr
pop
push
and
test
lods
adc
sbb
pop
or
jae
stos
rcl
idiv
test
xchg
inc
das
out
aam
mov
testb
inc
xor
inc
push
lret
dec
cmp
cld
rclb
sbb
pop
rolb
mov
push
inc
call
pushf
push
adc
fldenv
mov
loopne
pop
xchg
ds
push
pop
push
pop
mov
push
arpl
shr
outsl
rolb
xlat
dec
lahf
mov
mov
push
jg
outsb
lcall
inc
cmp
mov
xor
mov
push
jmp
xor
or
into
insb
cmp
rclb
jbe
xor
jle
xor
mov
fdivrs
sub
sti
lock
addl
mov
out
add
pop
mov
test
mov
xor
cmp
sub
divb
inc
cmp
pop
bound
fcomi
and
popf
sbb
cmp
shl
shlb
sub
add
fistps
das
adc
inc
sti
adc
inc
or
lcall
jno
mov
shrl
js
pop
lea
iret
les
dec
inc
loop
jle
les
pop
xor
fwait
xor
in
out
lods
push
sub
clc
stc
orb
int
enter
push
jge
sarb
inc
std
mov
mov
scas
xchg
push
mov
leave
mov
inc
cmc
movsb
jl
das
sub
loope
mov
jnp
test
fisttpll
cmp
and
xor
jg
xchg
lods
pop
stos
mov
and
lds
push
into
pop
mov
loopne
fiaddl
lahf
xchg
outsl
outsl
fwait
add
inc
mov
int
clc
das
sub
subl
lahf
fdiv
jg
pusha
push
sub
mov
adc
mov
nop
pop
cmp
adc
or
push
adc
mov
sub
les
cmp
pop
aas
mov
sub
or
cmp
cmpsl
outsl
mov
push
xor
test
jbe
lea
test
mov
inc
test
ret
and
xchg
and
mov
xor
xor
inc
inc
hlt
sub
sub
mov
xor
mov
test
pop
pop
mov
push
sarb
pop
inc
jnp
mov
adc
xlat
push
xchg
cmp
fs
scas
add
xor
pop
aam
cmpsl
and
and
aam
adc
push
sub
xchg
and
shlb
xor
es
sbb
cwtl
imul
adc
mov
jp
and
push
pop
add
outsl
push
je
test
aam
stos
movsl
inc
lock
hlt
out
loopne
mov
or
inc
jmp
xchg
out
mov
xchg
mov
leave
fisubl
repnz
pop
dec
imul
fwait
xor
popa
jno
aam
mov
fwait
pop
dec
mov
rcrl
mov
jb
lea
or
dec
popl
mov
adc
xchg
movsb
iret
out
push
mov
inc
and
mov
sub
cmpsb
rcrl
xorb
divl
ret
fwait
inc
es
and
push
and
int3
xor
out
test
xchg
cmpsb
add
dec
in
mov
nop
push
es
dec
rcll
lret
cmc
aas
scas
outsl
lods
mov
sti
or
sbb
out
mov
out
mov
push
mov
aam
xor
daa
int3
mov
sbb
dec
adcb
xor
pop
fs
adc
push
pop
outsb
push
imul
ja
test
ret
loop
scas
lret
data16
pop
scas
or
loopne
pushf
or
xor
test
test
cmp
mov
pop
jns
mov
int
xchg
lock
push
and
in
mov
add
sbb
arpl
and
or
jbe
push
jle
call
outsb
add
out
mov
pop
les
js
pop
pop
jge
mov
inc
or
mov
add
pop
subl
jle
mov
xchg
sub
imul
es
lods
cmpsl
mov
out
scas
popf
test
add
sub
pop
inc
mov
and
pop
sarb
imul
add
push
push
test
cmp
inc
push
pop
adc
imul
out
sub
mov
mov
dec
adc
or
jbe
jo
and
repz
adc
dec
sub
sahf
divb
mov
lods
ljmp
push
sbb
jl
dec
mov
jle
int3
popf
mov
shrl
mov
sub
icebp
mov
pop
cltd
mov
adc
cmc
fwait
arpl
and
outsl
daa
jnp
adc
out
jecxz
std
and
popa
mov
jo
add
test
or
xor
int
xor
cld
fists
arpl
push
jmp
pop
cmpsb
push
and
sub
cmp
push
js
xor
cmp
jp
outsl
ret
jecxz
jno
dec
cmp
adc
xchg
sub
push
mov
push
cmpsb
mov
adc
push
cmp
popf
into
dec
jne
lods
inc
enter
xchg
cltd
pop
inc
mov
les
or
les
xchg
jl
mov
or
shll
fld
mov
stos
mov
sbbb
dec
pop
ljmp
loop
add
xor
movsl
fcomp
xor
imul
aad
test
rorb
or
mov
dec
and
inc
pushaw
and
mov
mov
adc
pop
lret
iret
mov
pusha
inc
mov
outsb
cmpsb
lods
push
lahf
and
les
pop
insl
or
xor
mov
dec
ret
mov
fadds
push
sub
cmp
mov
loope
hlt
mov
push
inc
sub
cli
jg
xor
lret
imul
xor
jns
sub
cmp
shl
jbe
stc
or
sub
sub
rolb
sbb
sub
fucomi
loop
cmp
add
into
stos
ficoml
dec
mov
sti
mov
xchg
je
sbb
ret
add
inc
add
imul
add
rcrl
pop
and
add
cli
fstl
jmp
leave
cmc
mov
dec
push
insb
mov
aas
test
lods
xor
dec
idivl
cld
shlb
sbb
push
xchg
outsl
or
pop
cmp
xor
cmp
xchg
inc
dec
add
jge
jecxz
pop
arpl
daa
jae
aad
pushf
xchg
mov
popa
in
out
mov
ljmp
repnz
jge
dec
clc
xchg
pop
dec
ror
fwait
rorb
out
shrl
mov
int3
jecxz
lods
inc
sub
and
add
jecxz
in
xor
stc
sub
xor
rcl
in
mov
add
inc
sub
cmp
outsl
stos
push
pop
test
pop
inc
xchg
cwtl
cltd
sub
imul
shl
inc
xor
ja
leave
cmpsl
push
js
mov
inc
in
in
es
fwait
inc
and
cmp
imul
and
addr16
push
or
and
test
xchg
cmp
mov
pop
pop
repz
inc
sar
mov
sbb
aad
jbe
and
addr16
enter
dec
es
jge
cmpb
add
cld
sub
aaa
aad
pop
mov
test
push
cmp
ficomps
movsb
sub
out
cwtl
lea
mov
mov
mov
ja
mov
pop
inc
push
mov
push
cmp
add
sbb
xor
stos
repz
jno
push
push
out
pusha
xlat
fdivrp
test
xor
repnz
repz
enter
out
jge
mov
add
test
xchg
xchg
dec
mov
adc
push
push
sbb
test
push
ljmp
lahf
cmp
loop
ljmp
hlt
mov
xchg
mov
sbb
jecxz
inc
pop
dec
scas
or
addr16
cmp
inc
out
jo
clc
add
movsb
rep
lea
movb
int
cmpb
in
nop
inc
popa
dec
stc
lock
adc
inc
mov
imul
loop
dec
xchg
xor
cmp
mov
out
push
fnsave
xor
les
test
add
cli
pop
cmpsb
cmpsb
dec
iret
mov
cmp
ret
mov
aas
scas
out
icebp
mull
lcall
stos
lret
iret
or
jmp
test
sbb
call
cwtl
xchg
pop
pop
lods
roll
lahf
mov
inc
cmpl
adc
adc
lea
add
push
jmp
xor
es
push
push
mov
dec
and
xor
jnp
inc
movsl
and
and
or
aas
mov
jb
into
mov
mov
inc
lcall
sub
xacquire
hlt
pusha
push
add
test
sub
in
in
mov
popf
xchg
mov
arpl
inc
mov
add
shrl
jp
pop
cltd
fidivl
xchg
jb
cltd
pop
icebp
lea
testb
scas
lcall
lods
xor
sti
addr16
mov
xchg
aas
stc
ret
js
outsb
mov
inc
dec
sbb
into
pop
arpl
subl
mov
inc
xchg
rorb
insb
jnp
xchg
popf
sbb
adc
ffreep
xor
xchg
es
out
adc
cmp
mov
mov
add
mov
dec
mov
sbb
enter
push
xchg
dec
sub
les
jns
sti
jmp
push
subl
or
and
cwtl
xchg
pop
xchg
adc
loope
lock
dec
push
incl
aad
cmp
dec
cmp
out
imul
lcall
push
mov
aas
or
and
jno
cmp
cmp
lods
pop
in
mov
repz
mov
push
std
inc
xchg
rep
cwtl
hlt
xchg
clc
loope
add
add
cmp
in
or
rorl
ja
mov
and
out
push
cmp
mov
movups
jg
push
repnz
das
cwtl
add
fistl
lds
cmc
ret
mov
rolb
push
mov
adc
xchg
out
clc
mov
daa
es
sub
mov
inc
sbb
xchg
mov
jbe
out
push
xor
lahf
fwait
test
pop
in
leave
insb
ljmp
lea
fists
bound
xor
stos
push
cmp
ret
mov
cmp
inc
das
lret
xchg
faddl
stos
sbb
push
push
popa
xchg
in
imulb
cmp
cmpb
mov
adc
ss
aas
push
mov
xor
mov
dec
jnp
dec
mov
mov
mov
mov
andb
xchg
imul
sti
in
or
leave
inc
pop
inc
xlat
mov
push
pop
loop
push
sbb
or
adc
push
mov
xlat
pop
inc
ret
push
pop
xchg
loop
mov
ret
pusha
ret
add
cmpsl
je
inc
iret
jg
dec
inc
out
data16
mov
outsb
push
ret
mull
jne
inc
mov
inc
lret
imul
add
push
or
jl
inc
icebp
jo
xchg
xor
or
pop
ret
sub
jle
cmp
imul
jp
mov
inc
call
pop
movsb
mov
mov
cmp
stc
jp
jns
sahf
jne
into
and
push
jecxz
xor
imul
mov
decl
pop
xchg
imul
sti
cmpsl
sub
sbb
cmp
sbb
cltd
jnp
in
jae
or
inc
cmpsl
mov
xor
fiadds
aas
jp
cmp
jmp
es
mov
hlt
insl
arpl
mov
ret
movsb
test
lret
xchg
jmp
dec
mov
or
ja
inc
and
in
mov
or
xlat
jno
cmc
enter
jl
clc
xor
popf
mov
xchg
cwtl
fisubrs
adcb
cmc
popf
insb
roll
jecxz
je
mov
lea
mov
mov
mov
mov
push
xor
fisubrl
mov
cli
daa
sub
hlt
lcall
jecxz
mov
pop
sbb
sbb
roll
dec
adc
dec
repnz
scas
daa
cmc
mov
xlat
pop
and
jns
sub
inc
test
stos
mov
mov
add
xchg
jb
pop
jle
scas
gs
mov
repnz
sub
out
and
inc
push
add
leave
dec
jbe
sbbl
jae
bound
imul
adc
sub
mov
dec
int3
sbb
inc
jp
xchg
je
cmp
xchg
jl
repz
rcrl
fsubp
cmp
repnz
arpl
pop
psadbw
test
test
jmp
xlat
adc
xor
mov
or
rcll
mov
rcrb
iret
leave
push
mov
jp
mov
mov
mov
pop
inc
xor
push
and
pop
mov
mov
xchg
sub
idivl
addr16
dec
jo
bound
pop
sub
ja
gs
cwtl
mov
fxch
push
cld
dec
lea
mov
sub
lea
std
mov
and
pop
adc
ret
push
pushf
push
fwait
sbb
xchg
adc
fyl2xp1
loopne
ror
and
std
sbb
ret
ja
jp
xchg
sahf
xor
or
xor
lods
adc
stc
repz
lahf
adc
jecxz
xor
adc
popa
xorb
addr16
daa
xchg
pop
inc
js
mov
cli
mov
jmp
shrl
sub
in
fimuls
push
mov
xchg
jmp
cmp
in
jb
pusha
pop
fisubrl
add
dec
sub
push
je
gs
popa
cs
or
sbb
mov
sbb
lcall
add
cmp
fildl
loope
or
jo,pt
cmp
jnp
sahf
leave
mov
lret
or
sbb
add
inc
sbb
mov
cmpsb
jmp
cmp
sbb
movsb
push
scas
xchg
cmpb
scas
insb
and
pop
sbb
loop
mov
pusha
test
dec
and
push
movsl
mov
insl
out
fadds
std
daa
shll
inc
pop
cmp
loop
imul
inc
and
or
divl
into
divl
mov
sbb
jnp
std
mov
iret
jns
insb
stc
int
push
xor
insb
adc
out
adc
lea
in
out
push
mov
cli
pop
test
lret
sub
jl
xchg
test
jns
push
mov
dec
int
mov
int
enter
sub
or
jp
dec
jp
enter
add
imul
shrl
clc
pop
and
jmp
scas
lret
aas
inc
lcall
and
in
shll
or
arpl
or
xor
iret
dec
mov
push
out
stos
cmp
jo
adc
cmpsb
jl
pusha
push
or
aad
je
outsl
or
int
cmp
xor
ret
cmp
pop
fisubs
add
mov
jbe
push
dec
xchg
clc
adc
imul
loopne
fwait
pop
loopne
adc
mov
cmp
lods
mov
in
push
push
shll
mov
out
outsb
cwtl
enter
cmp
fdivl
in
stos
sbb
pop
ljmp
jo
xchg
sub
mov
gs
in
sbb
enter
xor
repnz
cmp
jnp
fnstcw
xlat
jmp
addr16
test
inc
cmp
cwtl
stc
and
aam
cltd
cld
xchg
or
jno
mov
fsub
jae
add
sbb
lea
rol
outsl
pop
inc
push
sub
xor
jge
mov
mov
push
ss
mov
jae
insb
lahf
sub
out
movsl
ja
rol
insb
lods
je
jg
outsl
mov
scas
push
jo
lahf
ja
mov
add
sub
test
xor
mov
cmp
pop
cltd
pop
mov
es
ja
mov
in
xchg
call
pop
sub
jns
lfs
jmp
popf
add
aas
sbb
imul
std
test
fsubrl
sub
lret
dec
out
mov
aas
mov
jmp
mov
adc
xchg
out
cltd
cmp
dec
ret
arpl
dec
ja
in
xchg
frstor
mov
jnp
cmpsb
cmp
scas
add
je
jecxz
mov
out
pop
mov
fstpt
shrl
adc
out
dec
imul
adcl
mov
jmp
outsb
pop
out
mov
mov
js
aam
lcall
clc
xor
mov
sbb
cmp
stc
pop
mov
cmp
or
xor
fcomip
aas
and
and
rolb
mov
mov
push
adcb
fdivrl
xor
push
dec
das
insl
dec
push
or
sbbb
sbbb
out
jnp
div
stos
es
xchg
ljmp
xchg
imul
sbb
iret
jb
push
add
setno
dec
push
pop
cmp
pop
or
sub
sarb
mov
aaa
mov
test
sbb
fcmove
ljmp
cli
add
pusha
idiv
mov
imul
jne
mov
or
push
sub
jnp
xchg
shr
dec
jmp
sub
cmp
in
sbb
mov
push
mov
cli
inc
xor
ret
mov
cmp
and
push
inc
mov
jns
fsts
addr16
jecxz
xchg
cltd
lret
out
lret
outsl
insl
lcall
mov
sub
or
push
notl
dec
pusha
cwtl
dec
les
mov
mov
push
lcall
repz
test
xchg
mov
or
and
xor
xchg
sub
and
in
push
jecxz
jnp
push
es
out
inc
and
lahf
cld
jns
das
sbbb
pop
dec
xlat
pop
xchg
sub
inc
jb
mov
dec
out
and
and
sub
lret
sbb
sbb
cmp
add
lods
ss
pop
scas
ret
inc
sbb
pop
push
fistps
jmp
hlt
xor
ret
adc
mov
hlt
fwait
inc
push
push
xchg
mov
stos
mov
mov
addr16
sbbb
clc
push
cmc
or
fmul
js
pop
fstpl
xchg
inc
lds
nop
cmp
pop
dec
das
out
xchg
lcall
lret
xlat
mov
jo
pop
ss
cs
inc
inc
loope
mov
push
out
icebp
adc
lods
push
in
dec
sbb
sbb
mov
and
adc
push
fmuls
adc
xchg
mov
stos
dec
mov
cmp
and
sbbl
cmp
or
addr16
jne
and
repnz
ljmp
cmp
iret
or
stos
inc
out
sub
adc
mov
xchg
or
fs
sahf
jnp
dec
add
and
push
lret
cmc
xor
push
or
shl
sub
mov
popf
in
ljmp
int
test
fwait
or
repz
aad
lods
in
fidivl
fwait
es
dec
cs
ror
loopne
cmp
push
mov
lret
add
test
icebp
insb
mov
adc
fdivs
bound
fdivrs
shrb
lret
mov
pusha
xchg
icebp
stc
test
ds
jg
push
test
int3
or
sub
jge
push
xchg
jl
hlt
mov
clc
nop
pusha
dec
adc
and
mov
adc
or
cwtl
dec
pushf
jl
mov
test
mov
lods
std
aaa
jbe
outsl
insb
je
cmpb
lahf
jge
mov
loop
jae
mov
insb
add
lret
pop
sub
and
lcall
xor
mov
adc
sub
loope
subl
mov
fwait
push
pop
xchg
adc
xor
sbb
pushf
push
popa
stos
adc
sbb
cmp
mov
sbb
xor
dec
insl
loop
add
jle
andl
div
sub
shlb
push
out
addr16
jns
pop
aam
cmc
sub
mov
nop
js
mov
mov
mov
cmp
into
jns
pop
addr16
jecxz
inc
cmc
sarl
addr16
xor
aas
xchg
or
gs
inc
sbb
outsl
rclb
test
fs
fsubr
popa
adcl
jmp
cmp
loope
insl
cs
cmpsb
pushf
pushf
pop
sub
lcall
adc
imul
cmpsl
xor
into
mov
movsl
in
popf
data16
dec
mov
cli
aam
rcr
mov
lcall
bound
mov
and
cmp
mov
mov
rcl
in
mov
sahf
adc
xchg
sbb
or
or
in
in
lock
inc
xor
adc
adc
adc
mov
push
jl
lock
xor
mov
rolb
xor
jno
outsl
jne
mov
and
scas
cmp
dec
arpl
dec
testl
ljmp
jge
push
hlt
mov
mov
addr16
lcall
repnz
adc
cmp
jns
cmpsl
imul
outsb
loopne
daa
sarl
xor
aam
push
pop
test
cs
mov
les
pop
mov
mov
pop
mov
test
aad
xchg
xchg
fdivrp
adc
jne
lahf
xchg
vrcpss
dec
insb
xrelease
rclb
mov
add
fcoms
sbb
cmp
jmp
pop
mov
mov
push
pusha
push
pop
jmp
icebp
xchg
dec
fstpl
stos
and
or
pop
cmp
push
push
pop
fisubrs
sub
adc
push
lea
push
lea
loopne
das
pop
adc
js
jl
sbb
xor
cld
lods
xchg
pop
inc
out
pop
inc
push
stos
xor
and
cmc
enter
lock
or
lret
movsb
mov
popf
pop
inc
ficoml
roll
or
pop
das
pushf
scas
jecxz
lock
sub
test
into
fcmovb
push
nop
testl
inc
aad
