push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
mov
or
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
xor
push
pop
div
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
mov
mov
xor
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
call
pop
pop
leave
ret
fmull
int3
int3
int3
int3
int3
mov
adc
xchg
fs
arpl
cmp
lea
or
xchg
out
div
fdiv
inc
sbb
fsubrl
cmpsl
xchg
adc
daa
repnz
push
gs
push
jle
pop
mov
lds
dec
hlt
or
fdivs
bound
movsb
push
das
fimull
das
cmp
and
sub
push
aaa
test
xor
pusha
pop
es
mov
pop
lock
fisubs
mov
shll
sub
fwait
xchg
imul
mov
mov
mov
fsts
and
mov
arpl
jmp
out
sbb
mov
sub
pop
mov
inc
out
cmp
mov
fdivrs
loopne
push
pop
movsb
push
out
arpl
dec
rolb
shrb
clc
sbb
lock
ror
adc
pop
fdivp
shl
pop
inc
xchg
stos
fcomps
cmp
fsubs
dec
icebp
pop
push
sub
pop
dec
negl
xor
push
cmp
arpl
out
pushf
aad
or
arpl
mov
fnstenv
add
test
xorl
fadds
mov
outsb
shrb
lret
into
ret
xchg
hlt
jae
nop
rcrl
fs
test
push
and
idivb
pop
and
and
popa
enter
loope,pt
push
push
int
test
mov
push
scas
out
loop
and
add
fnsave
dec
repnz
cmp
mov
test
add
nop
stos
add
add
pushf
imul
lds
inc
dec
je
xchg
out
gs
aaa
push
cmpl
outsb
inc
mov
roll
pop
and
rcl
mov
jle
xchg
inc
test
cmp
imul
add
iret
cltd
cmp
out
push
mov
cli
jns
push
int
mov
push
and
or
adc
cwtl
jg
lcall
and
pop
add
cmp
xlat
push
push
mov
movsb
push
sbb
cmp
mov
xchg
scas
jns
sbb
sub
mov
and
add
sub
cmp
pop
and
jle
cmp
xchg
leave
jns
sbb
out
loope
sub
or
imul
mov
jecxz
pop
inc
xor
loope
sbb
aaa
adc
and
jae
imul
cmp
dec
repnz
jecxz
stos
mov
xchg
add
fildl
dec
jae
js
pop
in
das
jnp
push
addr16
inc
psubw
sub
es
rcll
add
and
mov
jo
rcrl
push
mov
int
loopne
xchg
jecxz
pushf
mov
out
fmuls
mov
lret
call
lret
push
loope
out
mov
inc
mov
lcall
xchg
xor
and
jle
int
scas
ret
dec
cmpl
daa
sbb
cs
mov
fimuls
and
xchg
cmp
setg
dec
clc
cmp
test
ljmp
pop
pop
dec
mov
lret
rcr
mov
cmpl
xchg
sbb
gs
scas
add
and
xchg
scas
popf
sub
ljmp
xchg
sti
nop
mov
fwait
arpl
stos
sbb
aaa
lahf
movsl
cld
imul
fnstsw
das
push
inc
fidivs
xchg
xchg
leave
sub
and
inc
stc
nop
mov
mov
mov
test
rorb
add
xor
lret
xchg
outsl
adc
popa
xchg
mov
clc
push
xchg
adc
in
imul
dec
sub
js
inc
jne
inc
jae
imul
dec
cmpsb
loopne
push
sahf
cli
jg
rorl
iret
cltd
sub
pop
icebp
adc
std
cmpsb
pop
dec
sbb
and
jp
and
sub
mov
mov
bound
bound
push
test
mov
aaa
xor
jmp
cltd
hlt
cs
std
stos
push
pop
push
jne
xchg
cmp
cmp
dec
and
loop
loope
addl
jo
testb
dec
mov
movsl
mov
sbb
cmc
cld
add
pop
lods
sbb
add
add
xchg
adc
cmpsl
jb
int
adc
sbb
adc
push
fwait
aas
test
xor
ja
bound
sti
or
xor
adc
xchg
sti
mov
stos
jge
lds
shr
push
xlat
push
faddl
aas
cmpsb
in
imul
mov
push
mov
mov
std
adc
lods
sti
fxch
sbb
loop
rcll
xorb
orl
test
cmp
ljmp
fadds
push
das
dec
push
arpl
bound
or
fnstcw
aam
inc
mov
lods
lea
movsb
push
jecxz
outsl
and
dec
lcall
sbb
mov
sar
popf
imulb
xchg
cmp
out
jo
jge
mov
sbb
jg
sub
sub
push
or
jne
mov
push
mov
mov
jecxz
mov
fbstp
data16
pop
sahf
lret
mov
inc
dec
je
pop
lods
pop
mov
pop
roll
icebp
mov
pop
rcll
shl
adc
or
std
lock
scas
pop
aad
and
fstpt
sub
pushf
xchg
push
push
jg
dec
xchg
sbb
popa
sub
les
push
jbe
dec
cltd
xchg
xor
xlat
inc
mov
xor
pop
push
jecxz
inc
push
mov
es
ret
pop
lahf
or
add
aad
scas
bnd
jae
mov
cs
jecxz
cld
and
cmpsb
pop
in
adc
pop
cmpsl
js
roll
pusha
cmp
xor
jge
rcrl
fldenv
pop
sub
pop
repnz
pop
das
cmpsb
rcrl
nop
orl
xor
add
mov
popa
cmpsl
pusha
shll
cmp
dec
std
mov
jae
ficompl
fisttpl
xor
lock
dec
mov
add
inc
mov
aam
int
data16
mov
push
shlb
push
dec
leave
enter
cmp
push
test
in
mov
mov
test
loopne
iret
jmp
int3
add
sub
ja
mov
test
add
sub
std
lret
mov
dec
and
mov
shrb
sbb
cmp
xor
and
ljmp
inc
add
lock
dec
les
stos
ja
pushw
adcl
jmp
adc
mov
sub
cmp
xchg
mov
sub
mov
xchg
mov
inc
lds
sbb
pop
mov
cwtl
data16
mov
jnp
pop
cmc
xor
xchg
mov
pop
in
sub
and
push
sahf
outsb
pop
fnsave
xchg
add
and
popa
cmp
sub
out
mov
push
pop
mov
scas
dec
jbe
inc
adc
ret
lods
dec
mov
aaa
xor
add
xor
mov
inc
mov
inc
insl
sbb
and
xor
andb
shl
adc
repnz
nop
popa
pusha
and
adc
cltd
mov
or
ja
lret
fsts
ret
fmull
mov
jle
sti
faddp
jno
add
aas
cmpl
lods
mov
xor
jno
dec
cmp
cmc
mov
shl
sub
dec
std
sahf
and
push
xchg
arpl
or
pop
ret
sub
sti
in
leave
in
mov
push
gs
aam
jns
stc
cli
fldcw
ret
adc
sbbl
dec
js
cs
aaa
mov
insl
jo
sub
sub
int3
adc
jae
pusha
int3
fists
icebp
and
jge
pop
jl
pop
mov
cld
jecxz
std
ss
sub
rcll
cmp
das
fiaddl
mov
lods
pop
push
lahf
mov
insl
mov
inc
sub
stc
xor
add
cmp
sbb
mov
sub
andb
test
push
adc
in
adc
xor
addr16
lds
cmpl
push
dec
popf
call
jno
daa
mov
push
adcl
xor
nop
dec
ds
ror
push
int
jae
leave
les
movsb
push
por
push
xor
std
add
cli
aas
jp
fadds
mov
int
mov
cmc
add
int3
mov
mov
fistl
jmp
test
je
push
ficoml
add
hlt
or
cwtl
popf
push
cmp
sub
leave
jecxz
hlt
and
mov
xchg
mov
mov
lods
pop
aad
pop
or
jno
sub
mov
addb
xor
sbb
pop
test
add
pop
add
ret
or
sbb
out
pop
or
push
fpatan
jno
push
inc
inc
fxch
rcrl
in
push
ja
jnp
dec
xor
fsubrs
decl
test
jne
jbe
mov
and
cmp
add
and
cmc
lock
add
dec
aaa
sbb
add
insl
xor
jne
setbe
gs
addl
cmp
je
push
adc
mov
ret
idivl
out
mov
push
dec
sbb
or
ret
cmp
adc
rcll
dec
mov
icebp
lret
jae
dec
mov
add
int
xor
mov
insb
insb
stc
out
js
inc
mov
pop
in
jae
fimuls
aad
inc
mov
and
fisttpll
xchg
fistl
addl
aam
addr16
xchg
in
jbe
les
es
xchg
ret
out
out
mov
xorb
push
push
inc
xchg
push
pop
xor
stc
cmp
es
fwait
push
lcall
fcmovb
scas
loop
popa
dec
push
push
adc
push
mov
xlat
add
jns
push
adc
inc
push
mov
js
roll
fstl
dec
lcall
movsl
leave
xor
xchg
idivl
push
loop
aaa
mov
push
stos
aas
and
lock
sub
cmpsb
pushf
cltd
and
dec
ss
sbb
sbbl
repnz
jecxz
and
adc
cld
inc
and
jecxz
inc
popa
sub
iret
shlb
jns
hlt
push
sbb
scas
lcall
ret
mov
int3
inc
push
call
cmpsl
jmp
mov
dec
je
sbb
xor
ret
ljmp
xchg
xchg
bound
mov
push
inc
aas
mov
test
sub
cmpsl
adc
add
pushw
imul
xchg
mov
mov
pop
rorb
lods
jae
hlt
push
and
cmp
or
mov
adc
ret
aam
das
addr16
sub
daa
fwait
ss
sub
pop
xlat
mov
push
sbbb
lods
pushf
popa
cmpsb
cmp
mov
rcll
cltd
xchg
and
adc
lock
ljmp
add
sub
pop
jns
add
rclb
lods
js
adc
mov
dec
mov
or
dec
sub
sub
scas
pop
cmc
lea
jne
bound
ret
popf
sarl
sbb
or
es
fidivrl
jno
test
pusha
jle
lret
out
sbb
fdivr
xchg
lods
adc
out
dec
adc
xchg
data16
negl
fwait
mov
push
push
popa
dec
mov
mov
ficoml
jns
cmp
movsl
js
push
sbb
nop
popf
adc
mov
sub
sbb
mov
adc
movsb
xor
sub
push
sub
sbb
out
lcall
mov
sub
adc
stos
in
lods
out
jl
scas
jge
dec
ret
add
add
jecxz
arpl
push
pop
in
jbe
scas
add
jb
mov
vrsqrtss
repz
cs
inc
daa
pop
xlat
adc
out
mov
jb
inc
lea
daa
and
cli
add
sbb
insb
xchg
ss
scas
pushl
mov
xchg
out
sarb
fadds
cltd
jle
aas
test
lret
jg
push
jo
icebp
push
stos
push
mov
add
fdivrl
test
push
in
jbe
outsl
cmovno
push
mov
dec
inc
addl
pop
mov
fcmovne
cmp
cmp
adc
movsb
sbbl
xor
ja
adc
pop
addr16
mov
repz
dec
aaa
xchg
repnz
test
jmp
out
ja
fldt
lahf
in
inc
add
icebp
adc
bound
push
mov
mov
adc
in
pop
xor
inc
or
mov
dec
sbb
sub
test
mov
aad
push
xor
addr16
call
fstl
or
mov
cli
xchg
into
stos
aaa
and
fsubrs
addr16
loope
inc
mov
pushl
ficompl
adc
je
or
shl
lahf
lods
mov
pop
inc
xor
daa
pop
lcall
aas
cmp
arpl
and
or
mulb
xchg
cmc
dec
cmc
pusha
inc
movsl
pop
sbb
dec
lcall
cld
xchg
imull
jp
pop
dec
push
out
adc
scas
mov
sbb
dec
sub
sub
into
mov
cmp
call
aas
nop
dec
jb
lret
iret
or
stos
cs
push
inc
mov
repnz
add
push
in
jne
xchg
pushf
out
ss
aam
lock
push
sahf
ret
push
out
push
and
sub
dec
in
sbb
mov
cltd
pop
loop
mov
mov
movsl
mov
cmp
adc
pushf
mov
xchg
pusha
sub
sbb
dec
lret
jno
xchg
nop
inc
into
stc
mov
jnp
mov
pop
test
popf
mov
imul
mov
rcll
mov
in
add
pushf
sub
js
pushf
in
sbb
dec
add
xor
mov
adcb
mov
inc
fs
std
roll
jp
pop
test
mov
jmp
xor
push
pushf
fs
adc
cmpl
xchg
cmp
test
jl
mov
sarb
push
mov
push
adc
std
inc
loop
pushf
lock
cmc
jl
sbb
lahf
jno
addl
icebp
ljmp
bound
cmp
mov
push
push
inc
xchg
mov
jg
pop
daa
bound
push
lcall
xorl
mov
imul
sbb
push
sub
pusha
call
inc
sbb
sub
push
pop
fstpt
pop
push
jo
xlat
fucomip
daa
or
sbbb
xor
mov
lods
or
pop
int3
pop
fisttps
mov
std
adc
sub
add
test
fcomps
lahf
das
dec
xchg
imul
dec
cmp
push
cld
mov
xchg
ret
pop
loopne
jmp
mov
ljmp
lcall
add
sbb
enter
movsl
or
jl
xor
lcall
dec
das
and
inc
dec
and
jnp
clc
lcall
xchg
push
pop
div
fsubl
lds
pop
add
dec
push
pop
lea
xchg
dec
pusha
mov
sbb
adc
or
cmc
mov
dec
fidivrl
lock
scas
cli
outsl
push
mov
mov
xor
sbb
mov
sahf
icebp
outsb
imulb
scas
out
hlt
pop
inc
insb
jbe
xchg
sub
dec
dec
push
jg
repz
ljmp
in
loopne
adc
xor
aad
sub
pop
jnp
xchg
mov
pushl
adc
dec
fldenv
push
jl
cmpl
stc
adc
fisubrs
enter
push
dec
inc
cld
mov
mov
mov
aaa
in
dec
jb
popa
sbb
inc
fwait
das
push
loope
lods
xor
cmp
cmp
stc
push
dec
xchg
adc
jecxz
std
loop
sbb
popf
xor
lock
test
sub
push
push
out
shlb
shl
add
and
or
lret
fdiv
je
cwtl
mov
jb
pop
sub
popa
mov
sbb
inc
insb
adc
pushf
sbb
xchg
lods
fimuls
sarb
xor
dec
jg
and
push
int
adc
pop
and
mov
adc
cld
je
gs
pop
xchg
stc
adc
int3
add
or
loope
add
push
cmp
notl
xchg
dec
pop
testl
add
out
pop
cmp
not
insb
jns
adc
or
scas
jbe
inc
movsl
dec
push
in
cs
jnp
andb
fwait
dec
mov
faddp
or
inc
icebp
testl
fdivrl
insb
cli
fwait
aad
push
mov
mov
inc
push
push
lcall
lea
inc
in
jo
add
lods
xchg
mov
fmuls
sub
int3
cmc
fstl
sahf
in
fildl
mov
in
mov
cmc
aad
jb
xlat
xor
aam
stos
daa
idivl
inc
addr16
push
das
dec
pop
ret
jae
xchg
popf
push
out
scas
loopne
inc
outsb
outsl
jno
cmc
pop
xchg
into
or
push
movd
mov
das
je
push
shlb
jbe
adc
dec
pop
dec
jbe
addr16
je
dec
bound
or
push
fwait
lds
inc
push
icebp
movsb
fbld
and
addl
inc
arpl
push
repnz
mov
rorl
mov
pop
jg
sbb
sub
shr
movsl
mov
test
sub
pop
orb
fdivrs
jg
jmp
movsb
mov
insb
test
mov
mov
sbb
ret
fwait
cmp
jmp
stos
stos
aas
sbb
loop
mov
aam
in
inc
negl
fdivl
sbb
mov
hlt
inc
adc
adc
xorb
sbbb
sub
clc
push
fwait
mov
out
lret
xchg
ss
xchg
mov
je
mov
repnz
mov
xchg
jae
jne
dec
adc
push
ss
jo
and
xor
test
sbb
sbb
fsubrp
fsts
ret
divl
je
ljmp
aas
daa
enter
adc
xchg
xlat
js
add
xchg
sub
xchg
lret
sbb
mov
pop
cwtl
aad
push
fs
test
jp
inc
mov
pop
and
and
in
jmp
inc
aas
sbb
into
xchg
fisttpl
xor
aad
iret
out
sbb
jb
dec
ss
mov
inc
test
pusha
dec
jecxz
inc
jge
jge
jge
or
mov
fwait
xorb
sub
add
imul
insl
pop
inc
das
mov
cwtl
lods
sub
push
push
imul
mov
mov
pop
lcall
cmp
mov
cmp
push
mov
pop
or
lret
and
mov
es
mov
fbstp
movsb
js
sbb
xchg
loopne
std
popf
inc
adc
sar
adc
dec
mov
add
push
xor
mov
push
lsl
xchg
int
shl
xor
add
orl
cmc
mov
pop
jne
mov
cmpsl
push
mov
repnz
push
cmp
xor
test
and
lock
add
pop
lret
pop
sbb
lea
repnz
dec
jl
xchg
gs
inc
enter
or
repnz
pop
dec
sbbl
add
leave
cltd
fbld
call
in
mov
bound
roll
test
or
xchg
enter
mov
fwait
inc
or
jecxz
jl
ficoms
sub
gs
enter
orb
jae,pn
mov
lcall
rcl
inc
sub
sti
dec
out
jae
iret
cmp
scas
sbb
mov
in
pop
xor
mov
sub
inc
mov
loopne
jne
pop
inc
fimuls
lods
mov
mov
mov
xor
dec
ja
sub
stos
mov
mov
jge
ret
jecxz
ret
pop
jg
push
hlt
lods
pop
imul
xor
mov
push
pop
aad
sbb
bound
mov
mov
push
bound
in
les
dec
cmc
mov
xor
addb
cmp
push
mov
ljmp
js
jns
jmp
rcl
outsb
and
scas
ja
and
push
xchg
mov
jp
cmp
iret
cmc
adc
mov
mov
cwtl
mov
mov
fsts
ss
lods
cs
mov
outsb
dec
call
adc
ret
jbe
lods
adc
lret
inc
lahf
test
dec
push
add
fsubrs
daa
jb
subb
in
xor
or
mov
adc
dec
jnp
in
insb
pop
je
push
adc
ret
push
mov
sarl
les
out
add
roll
ret
sbb
out
scas
test
and
out
mov
xor
lret
out
test
mov
sarl
dec
and
out
insl
insb
adc
in
ficomps
int
into
cs
les
imul
pop
adc
je
scas
inc
xor
sbb
aam
push
mov
and
stos
dec
sub
aas
jecxz
pop
push
hlt
mov
push
or
xchg
sbb
jae
mov
scas
movsl
hlt
mov
in
loopne
dec
sub
icebp
jmp
push
jae
xchg
movl
repz
fdivrl
jne
mov
sti
arpl
pop
orl
test
cli
sbb
xchg
fldcw
scas
cmp
pop
jae
out
gs
xor
mov
aam
fadd
outsb
cli
mov
movsb
pop
in
mov
popa
out
add
or
pusha
ret
inc
inc
sub
rorl
inc
jo
adc
pop
push
and
pop
cmp
cmp
cs
sub
iret
sbb
outsb
lock
mov
inc
loopne
in
mov
sbb
stc
lods
test
shll
test
lcall
inc
push
jl
out
nop
cltd
jg
div
je
cli
xchg
jo
xchg
fstl
push
push
faddl
and
movsb
mov
call
jmp
pop
pop
or
sbb
stos
mov
adc
inc
in
andb
sub
xchg
cmpb
les
jae
sbb
std
addl
jnp
xchg
iret
or
es
mov
pop
jmp
cmp
cmp
xchg
xchg
jae
iret
sub
enter
lret
pop
fsubrl
rolb
cwtl
dec
mov
push
mov
and
and
sub
jmp
nop
gs
pushf
jne
icebp
lret
js
mov
or
filds
pop
pop
mov
lcall
js
xchg
inc
inc
push
and
xor
cwtl
mov
jp
or
mov
sub
lret
push
es
sbb
mov
adc
shr
mov
dec
stos
ret
dec
xor
pusha
decb
popf
cmp
je
pop
ret
into
jb
xchg
pop
imul
jb
jbe
loope
lahf
aad
xchg
xor
or
mov
inc
rorb
pusha
mov
and
call
in
jecxz
dec
xchg
mov
mov
add
insb
imul
jecxz
stc
add
rcr
out
adc
fistl
jmp
push
adc
or
fisubrs
add
mov
xchg
addl
mov
adc
pop
test
jnp
xrelease
loopne
dec
xor
pop
mov
sub
lahf
xchg
insl
push
inc
adc
mov
or
adc
ret
xor
mov
push
jbe
dec
pop
add
adc
jnp
sub
cmp
lds
scas
jmp
aad
add
xchg
or
push
mov
insb
push
dec
in
inc
mul
in
push
push
lcall
push
add
jae
inc
sbb
into
aaa
mov
mov
insl
and
scas
dec
or
es
mov
iret
testb
fsts
aam
push
mov
xor
sbb
push
pushf
loope
pop
inc
pushf
push
cmp
jbe
jl
add
sbb
add
ja
into
out
xor
jns
adc
add
bound
leave
and
push
adc
add
fndisi(8087
ljmp
jnp
fnstcw
push
icebp
jae
outsb
fs
dec
out
add
scas
sub
scas
fwait
test
lds
push
pop
jo
roll
repz
in
jnp
cmp
in
inc
and
pop
dec
movsb
aas
movsl
mov
sub
stos
mov
aad
scas
jae
test
fdivrl
adc
xchg
xchg
xchg
mov
pop
xchg
xor
lods
int
jns
gs
les
xchg
push
mov
cmp
test
and
add
div
ljmp
and
sbb
stos
mov
aad
xadd
mov
es
mov
js
fdiv
les
mov
xchg
test
pop
mov
je
out
repz
mov
ds
fistpll
sub
cmc
add
cmpsb
jae
pop
ljmp
and
jne
dec
mov
sub
out
mov
arpl
cmpsb
push
adc
dec
test
int
clc
ja
lret
movsl
daa
mov
in
jmp
sub
and
mov
push
data16
or
scas
dec
mov
in
and
or
add
pop
ja
leave
inc
add
fcomps
xchg
push
mov
pop
out
push
pusha
xchg
pop
movsl
pusha
cmp
or
cld
insl
loop
cltd
push
lret
pop
jmp
dec
pop
xchg
push
int
aam
xchg
rcl
stos
hlt
adc
fstps
jmp
add
sub
pop
sub
fs
mov
xlat
lret
pushf
insl
insb
mov
clc
xor
addps
test
add
jnp
int3
in
fsts
into
jns
xor
addr16
in
mov
jbe
popf
sbb
and
jg
inc
inc
xor
in
cmp
insb
mov
pop
loope
stos
push
jns
pop
add
movsb
push
or
in
sub
leave
mov
pop
ljmp
mov
stos
popa
pop
mov
addr16
pop
mov
loope
and
add
inc
hlt
mov
sbb
lock
xchg
pop
imul
lds
outsl
jp
movsb
clc
pop
adc
mov
adc
sub
jecxz
xchg
bound
pop
jae
stos
xor
sub
xor
mov
inc
arpl
stos
sbb
scas
inc
ljmp
jo
xchg
not
or
push
cmc
push
fwait
negl
out
out
mov
jp
and
mov
sub
push
adc
mov
xlat
mov
lret
mov
ds
pop
bound
inc
mov
cmp
mov
fs
xchg
hlt
sbbb
mov
adc
stc
in
push
ss
xchg
outsb
mov
add
push
dec
cs
push
jnp
cmp
adc
lods
xlat
std
enter
inc
push
insl
adc
jb
int3
sub
aaa
push
leave
gs
pop
mov
inc
xchg
scas
cld
icebp
xor
ficompl
or
test
or
aad
movsb
pop
cmpb
aaa
cltd
jl
pop
mov
mov
push
insl
dec
pop
push
insb
notb
xchg
imul
mov
repnz
ficompl
or
aaa
push
xchg
sub
jbe
add
insb
repnz
or
inc
xchg
or
xor
mov
out
push
lea
bnd
scas
ds
xchg
add
rcr
push
sti
sub
mov
xor
ret
stos
mov
ret
mov
ret
iret
ljmp
xchg
cld
mov
test
push
pop
inc
push
xchg
xchg
imul
mov
sahf
es
jp
cld
mov
out
xchg
les
xchg
js
arpl
inc
push
icebp
xchg
xchg
out
sahf
cmp
nop
not
or
test
iret
adc
int3
je
sbb
cmovne
rolb
inc
sub
shrb
call
adc
jne
fcomps
jl
dec
repz
ret
fwait
push
test
push
lret
and
ret
aam
loope
push
das
cmpsb
adc
daa
xchg
test
add
mov
jo
int
and
xor
stos
mov
cmpsl
mov
jo
push
sbb
cs
xchg
adc
jns
insl
repnz
cmp
mov
dec
mov
fs
pop
loop
in
loopne
in
loop
push
fisubl
daa
insb
cmpsl
dec
lret
mov
fs
out
push
jge
and
inc
push
ret
int3
cs
jmp
or
out
data16
fstl
push
and
adc
fstl
adc
imul
mov
out
nop
adc
insl
mul
push
dec
icebp
adc
or
push
pop
scas
jne
cmc
push
inc
xchg
mov
repnz
pop
shr
and
jle
mov
cmp
xchg
push
in
aaa
into
xor
push
sbb
push
stos
dec
lods
xchg
mov
cwtl
sar
sub
dec
mov
mov
cmp
xor
nop
pop
and
addr16
cwtl
popa
jmp
add
mov
jmp
dec
mov
mov
adc
stos
inc
mov
lods
cs
sahf
fdivl
or
out
adc
pop
mov
cltd
lods
int
ret
out
enter
scas
cmpsb
or
ds
roll
add
pop
and
sub
pop
shrb
icebp
or
bound
mov
lcallw
dec
push
xor
in
dec
sbb
mov
das
dec
lcall
pop
ds
outsl
jnp
lods
cmp
push
dec
mov
test
test
repz
movsb
lock
jecxz
arpl
xchg
xchg
rorl
push
sbb
aaa
fadds
cmpsb
das
insb
mov
jmp
sub
cwtl
dec
daa
mov
and
inc
lcall
pop
pop
fldl
xlat
inc
sub
pushl
push
jo
negb
sub
sub
cs
jl
jns
sub
ds
cmpsb
arpl
sub
test
adc
add
test
movsl
sbb
mov
add
xor
dec
mov
aas
cmp
ja
addr16
js
js
addr16
push
inc
clc
mov
cmc
mov
loop
fsubs
lods
and
xchg
inc
dec
push
hlt
cmp
pop
insl
test
or
ret
pop
push
mov
fmul
ds
inc
and
sbb
sub
test
add
sub
ss
dec
mov
mov
mov
stc
lret
sub
testl
int3
jge
jg
jne
cmp
mov
push
dec
xor
sub
ret
and
cmpsb
mov
popa
or
insb
arpl
pop
mov
mov
lret
jmp
mov
popa
mov
lcall
loop
idivl
je
jns
andb
xor
in
adc
adcl
es
decl
mov
push
mov
jne
fldt
mov
rorl
mov
rclb
dec
out
mov
xor
sub
std
dec
or
xor
std
sbb
out
sbb
outsl
hlt
nop
mov
fst
mov
push
lahf
cmp
mov
nop
hlt
xchg
push
sub
aas
test
jmp
sbb
dec
pop
rcrb
ljmp
inc
out
or
and
out
dec
or
fists
cwtl
pushf
stos
cltd
rorb
arpl
lock
in
test
lret
into
imul
pop
fisttpl
lahf
int
out
setns
jmp
sub
or
mov
pop
cmp
loopne
loop
xchg
sbb
or
dec
hlt
in
push
mov
dec
rorb
mov
insl
sarb
data16
lea
mov
fwait
cltd
lods
lret
mov
push
adc
fwait
addr16
dec
out
out
and
scas
or
jge
insb
out
andl
in
jmp
mov
xor
push
outsb
shrl
in
fldcw
adc
pop
and
test
dec
shrb
or
divb
ss
or
cmpsb
jnp
or
shll
je
push
mov
or
xchg
ret
mov
arpl
icebp
sbb
icebp
les
daa
add
repz
xor
daa
in
and
repnz
stos
jle
dec
cld
pusha
addr16
cmp
dec
rcll
outsb
xor
jbe
sar
ret
insl
and
dec
pop
in
loope
inc
movsl
insb
pop
into
das
or
sub
out
xor
fs
testl
inc
fwait
iret
xchg
lods
fs
xchg
adc
int3
pop
add
int3
dec
dec
inc
mov
pop
outsb
sbb
icebp
mov
add
daa
std
test
lret
jmp
xchg
arpl
dec
sbb
jge
cli
mov
cmp
stc
fimull
lahf
mov
jmp
icebp
pop
cmp
mov
inc
mov
in
sarl
pop
dec
ss
cs
jns
adc
popa
cmp
bound
cld
xor
xchg
ror
cwtl
push
push
and
cwtl
ficoms
xor
subl
add
jne
inc
add
and
shr
xchg
aam
sub
andl
mov
in
and
and
cmp
push
or
pop
cmp
mov
lcall
push
add
sbb
inc
imul
pusha
mov
jle
jle
xor
fldl
ss
fwait
pop
repnz
cld
cmp
mov
xor
mov
sahf
mov
xlat
imul
mov
or
sbb
fwait
pusha
xor
cmpsb
ficoms
add
mov
cmp
mov
mov
jnp
mov
dec
pop
adc
push
sbb
inc
push
xor
out
cmpsb
hlt
mov
dec
mov
xchg
add
aaa
xchg
ret
inc
pushf
add
out
dec
les
test
out
pop
pop
inc
pop
pop
fwait
adc
or
ret
lahf
push
or
bound
pop
roll
and
ljmp
xchg
mov
xchg
lock
pop
imulb
imul
pop
aam
es
out
lret
cs
push
mov
jno
xchg
lret
or
int3
mov
test
add
scas
jo
decl
jae
mov
incl
ja
lods
shll
rcl
xlat
jge
inc
and
dec
mov
inc
mov
loop
mov
xor
dec
jge
loop
mov
inc
mov
bound
xor
lock
test
push
jae
stos
mov
sub
call
jge,pn
ja
andl
pop
pop
push
lea
push
cmp
les
fstpl
add
loop
into
xor
ds
imul
lods
xchg
mov
xor
jle
xor
add
cs
das
cli
stos
push
das
dec
hlt
das
and
aaa
push
sub
js
fildll
fwait
and
xlat
push
mov
daa
cmc
inc
mov
xlat
sbb
inc
mov
ja
pop
adc
ds
movsb
jb
mov
add
js
repnz
or
test
loopne
dec
cmp
rorb
inc
cmp
mov
outsl
sbb
mov
jecxz
clc
jae
push
in
push
shrl
inc
mov
mov
xor
push
jl
fiaddl
jge
pop
adc
mov
mov
and
sahf
dec
dec
push
pop
out
std
cmp
ljmp
add
push
mov
pusha
ret
adc
push
js
int
movsl
das
stos
sub
xchg
push
push
inc
lcall
sbb
sarl
andb
xor
out
push
xchg
test
int3
lcall
hlt
xchg
aaa
dec
stos
mov
pop
loope
arpl
lahf
test
sbb
testb
xchg
pop
mulb
cmp
stos
mov
add
or
jmp
sub
in
dec
fimuls
xor
js
outsb
int3
dec
cmpsl
scas
fmulp
add
fcmovnb
lcall
sub
xchg
rcl
lods
pop
inc
xor
jl
ret
xor
cs
jge
pop
shll
je
pop
test
adc
scas
lcall
pusha
cmpsl
and
and
imul
inc
mov
inc
mov
pop
add
les
dec
cmp
shrb
cld
inc
in
cmp
lea
mov
xor
test
jg
mov
data16
push
jo
mov
stos
test
pop
lock
sub
gs
cmpb
push
xchg
stos
cmpsb
add
and
sarb
xor
pop
outsl
mov
jmp
scas
jns
adc
aad
cmpsb
push
mov
in
ljmp
push
dec
fistpll
cmp
fmulp
lea
cmp
mov
in
insl
int
cmp
insb
xchg
fsubrp
push
cld
or
in
iret
mov
sbb
and
stos
out
jns
jp
add
or
les
std
push
xor
add
fisttpl
inc
dec
dec
push
adc
pop
test
out
jo
imul
dec
insl
push
or
cmpsb
push
mov
add
fiaddl
add
xchg
cmc
cmpsb
push
fsubs
push
push
andl
or
jmp
hlt
stos
jg
stos
pop
adc
andl
or
add
sarl
nop
mov
adc
stc
imul
cmp
jge
popf
pop
xchg
fdivrl
lock
popf
jno
dec
popa
dec
and
add
mov
ljmp
out
push
inc
xor
xchg
and
fldl
pop
mov
jl
out
and
ljmp
sbb
ret
adc
mov
stc
fxch
fldt
shrl
scas
push
xchg
shll
mov
pop
aad
sbb
mov
ret
rolb
sbb
cmp
jne
add
mov
fcoml
test
push
cwtl
adc
jae
bound
or
sub
ret
adcb
mov
ret
xor
cltd
shll
dec
fldt
mov
fwait
cmp
popa
divb
xlat
insl
popa
pop
mov
mov
sbb
popa
xchg
std
cli
or
leave
sub
repnz
call
mov
jnp
jbe
jmp
test
loope
push
cmp
data16
aad
dec
mov
icebp
adc
inc
add
jnp
stc
lods
xor
dec
pop
arpl
pusha
scas
pushf
mov
lret
mov
das
mov
mov
add
je
mov
lock
inc
test
gs
bound
mov
js
pushf
mov
cmc
call
add
sub
xor
push
bound
gs
sub
cld
push
cltd
inc
xor
aaa
jge
push
add
dec
pop
clc
pop
mov
das
dec
or
or
cmc
adc
push
push
mov
fidivs
sbb
test
popf
push
push
outsb
jno
cli
adc
les
dec
cmpsl
push
mov
stos
cmp
sub
loop
fwait
jle
repnz
icebp
cmp
test
decb
adc
bound
pop
push
pop
sbb
icebp
lea
cmp
cwtl
repnz
push
sbb
shlb
cmpsl
cltd
movsl
out
and
inc
inc
push
pop
sbb
enter
inc
xor
call
xor
mov
pop
mov
mov
sbb
fwait
arpl
mov
inc
les
pop
adc
adc
ds
jle
jnp
dec
add
cmp
dec
lret
hlt
test
cmc
adc
mov
add
push
frstor
jg
mov
adc
inc
push
dec
leave
or
cmc
sbb
jecxz
ret
mov
push
andl
inc
push
pop
shlb
repz
and
hlt
push
and
pop
enter
jp
xchg
fisubl
cmp
push
sarl
mov
mov
mov
mov
push
lret
sub
xchg
movsl
icebp
icebp
xchg
scas
cmp
jno
insb
and
adc
inc
sbb
push
xchg
pop
dec
mov
outsb
dec
sub
jne
insb
popl
cli
sub
jne
in
in
sbb
in
add
insb
rcll
frstor
adc
cmpsl
js
xor
cmpsb
add
imul
shlb
jl
rorb
ljmp
inc
rcrb
movsb
mov
pop
addr16
mov
insb
xlat
ud0
push
cs
push
ss
dec
dec
jmp
xor
imul
add
stos
mov
or
mov
popf
adc
aam
adc
pusha
pop
jp
mov
roll
repnz
pop
add
fs
dec
pop
adc
data16
jne
fistpll
pop
adc
mov
cltd
xchg
mov
cmp
pop
xchg
insb
push
lahf
out
inc
test
xlat
add
cmp
bswap
jb
mov
and
jae
or
ss
movsb
adc
test
fimuls
insb
out
mov
sbb
and
xchg
xchg
push
fstpl
jne
pop
bound
pop
and
repnz
xchg
mov
push
jl
cltd
sbb
enter
imul
je
fyl2x
scas
ret
mov
call
push
lds
int3
addl
sbb
add
nop
insb
out
push
pop
cmp
ds
test
out
jge
ret
push
shrb
pop
std
aam
push
bound
icebp
test
idivb
dec
mov
adc
jg
ljmp
xlat
or
mov
divb
clc
leave
and
andb
sahf
xor
jge
aam
stos
loopne
mov
mov
sub
xor
dec
subl
cli
jne
es
xchg
push
xor
mov
push
push
in
jp
hlt
mov
sbb
xchg
into
rcl
addr16
leave
sub
ret
scas
cmp
bswap
stc
pop
cmp
ficoms
cli
arpl
fistpll
pop
xchg
push
mov
stos
sbb
mov
js
mov
dec
push
out
pop
and
les
int3
mov
fcmovb
pop
mov
xchg
dec
idivl
cmp
mov
push
rcll
loope
lods
repnz
xchg
dec
push
sahf
and
fistl
xor
inc
and
mull
lods
push
inc
sbb
stos
fdiv
ret
xor
pop
sar
loopne
lret
sbb
cmp
dec
push
testb
sti
jnp
ja
test
fidivs
pop
out
arpl
cmp
sbb
xchg
adc
xorb
out
mov
or
shll
sub
mov
jo
fnstenv
and
sti
ja
in
xchg
lds
mov
sbb
divb
sahf
pop
dec
cli
mov
into
push
jnp
addr16
sub
xchg
add
sub
pusha
xchg
or
int3
sbb
adc
decl
paddusb
les
adc
fcompl
mov
scas
sub
mov
mov
arpl
pop
lds
sub
sub
sub
push
gs
fisttpl
repz
mov
js
bound
xchg
mov
push
and
lahf
out
pop
xlat
push
pop
pop
call
lcall
adc
cmp
or
fidivl
pop
lods
pop
adc
cli
pop
inc
push
inc
out
inc
into
mov
test
pop
dec
fdivl
lret
aam
jno
rorl
mov
push
xor
jge
inc
aaa
sub
mov
mov
out
adc
pop
push
xor
mov
addr16
test
mov
pop
hlt
xchg
xchg
je
call
mov
cmp
jge
or
mov
xor
pop
jecxz
out
mov
mov
test
dec
xor
nop
pop
cli
test
and
pop
inc
rol
mov
imul
sbb
and
data16
cmp
jp
jb
je
lods
out
jne
sub
out
cli
or
sar
ds
sti
pop
andb
cmp
cmp
inc
push
cld
mov
cmp
icebp
addr16
lret
add
or
push
inc
lcall
mov
popf
fisubrl
or
in
push
outsl
inc
push
arpl
lahf
movsb
ror
loop
push
lods
xor
xor
in
dec
mov
jns
stos
data16
pop
cli
lock
cmp
lahf
and
std
rclb
subb
cli
sub
ret
and
add
adc
ficompl
lcall
inc
adc
rcl
push
movsl
outsl
lods
in
orb
mov
bound
cmp
push
iret
mov
jg
inc
fdivrs
xchg
xor
das
aas
adc
inc
or
dec
out
mov
popf
stc
cwtl
sbbl
mov
xchg
push
jecxz
cs
js
and
stos
inc
sub
imul
test
cmpsl
inc
sub
repnz
popf
sarb
fimuls
das
lret
insb
mov
ror
cmp
sarb
rol
pop
int3
or
test
sub
lock
icebp
cmp
mov
xor
icebp
sub
pop
mov
outsl
or
push
dec
fs
add
xor
xor
sbb
cld
clc
cmp
jbe
push
jo
clc
cmp
ror
mov
or
int
xchg
minps
cvtps2pd
mov
mov
xor
cmp
dec
mov
sbb
jae
arpl
xchg
ljmp
les
lds
sub
add
sub
ret
fwait
pop
inc
imulb
and
bound
push
push
add
dec
test
icebp
ljmp
and
adc
and
inc
and
mov
stos
add
negb
cs
lret
lock
hlt
rorb
mov
bound
push
scas
inc
ja
mov
loop
es
dec
cmc
adc
into
or
lahf
scas
dec
popf
stos
jl
xchg
fwait
iret
mov
subl
dec
cmp
add
shlb
pop
or
jno
cltd
xchg
push
dec
add
negb
push
add
ret
jle,pn
xor
mov
sub
test
insb
or
push
aas
xor
lock
loopew
clc
insl
cmpsb
fsubs
xchg
pop
inc
and
movsb
ds
adc
shll
pop
jecxz
push
rorl
out
adc
adc
and
sti
aad
and
jb
outsl
mov
ds
sbb
mov
push
subl
sbb
sarl
mov
or
xor
mov
sbb
cmpsl
arpl
mulb
lock
mov
loop
ret
adc
add
cli
push
pop
jmp
ret
jbe
stos
push
cmp
xchg
cwtl
mov
aad
shlb
shll
popf
sub
in
dec
xchg
cmp
jns
pusha
sub
lcall
mov
out
and
dec
xchg
lahf
or
push
xchg
scas
jg
jns
ja
and
mov
pushf
mov
mov
add
out
jp
sbb
addr16
and
dec
iret
ret
insb
adc
jno
push
pop
pusha
mov
inc
insl
sbb
test
popa
sub
adc
jnp
or
divl
clc
movsl
enter
mov
pop
aaa
lcall
push
add
jecxz
and
jb
sbb
aas
xlat
jle
arpl
aaa
enter
mov
incb
imul
popf
ret
fldt
mov
push
mov
xchg
xor
xlat
sub
in
xor
and
rcll
ja
add
sbb
je
nop
dec
pusha
mov
inc
xchg
rcl
inc
sti
mov
test
add
add
ljmp
and
ret
dec
mov
jle
pop
sarl
out
out
out
mov
gs
push
fdivrp
or
dec
in
pop
ljmp
cli
ljmp
xchg
xor
mov
bound
jb
add
xor
lds
or
jbe
xchg
jo
mov
push
push
iret
xlat
pop
lcall
sub
pop
addl
jp
sysexit
sub
xor
cld
adc
push
lcall
mov
cmp
jo
push
int
mov
sub
lahf
rolb
mov
fmull
movlps
add
mov
adc
sub
test
sbb
dec
icebp
psllq
and
inc
mov
cltd
push
push
mov
and
add
sub
stos
sub
nop
mov
subb
xchg
imull
ljmp
incl
sub
test
outsb
adc
addr16
cmp
cmp
sub
jl
xlat
stos
xchg
fnclex
in
mov
jmp
jle
jg
out
dec
push
or
rcrb
cltd
inc
cmp
mov
andl
mov
ret
popa
mov
mov
jp
mov
loope
lcall
shll
andl
iret
jp
out
stos
mov
dec
push
adc
jns
pusha
fs
push
pop
mov
mov
inc
push
bound
sahf
and
sahf
mov
movsb
xor
test
jmp
out
gs
sub
cmp
xchg
test
pop
jge
xchg
shrl
cmpsb
lret
sub
push
sub
mov
jne
shlb
sarb
inc
sub
imul
and
imul
dec
xchg
cmpsl
les
adc
pushw
jecxz
out
inc
mov
adc
outsl
leave
and
adc
pusha
or
mov
jle
jnp
inc
mov
lds
sbb
sub
xlat
inc
pop
jne
pop
mov
mov
mov
in
pusha
mov
sbb
nop
shlb
jmp
mov
lods
mov
divl
push
mov
cmp
stc
shll
cmp
pop
je
aaa
pop
push
rclb
cmp
xchg
inc
mov
outsl
push
adc
shrb
gs
cmp
les
jge
iret
daa
lea
lret
xchg
lea
rclb
or
shrb
aas
jo
push
subl
imul
or
jo
mov
fistpl
xchg
ret
shll
out
fistl
sbb
xchg
pop
jge
shlb
fdiv
or
popa
je
aam
test
cmp
xchg
xor
mov
out
xchg
inc
lock
faddl
out
xlat
popa
dec
ss
adc
add
sbb
call
js
xor
and
test
aas
sub
ljmp
jmp
scas
mov
inc
pop
imul
ss
movsb
sbb
lret
lcall
jns
data16
adc
and
fdivs
in
xchg
dec
pop
mov
pushf
mov
adc
icebp
imul
scas
adc
adc
and
jnp
roll
xchg
add
aas
xor
push
daa
pop
pop
push
dec
sbb
clc
dec
mov
adc
insb
lahf
in
nop/reserved
adc
clc
and
fsubrl
pushl
rorl
cmp
data16
jp
subb
adc
in
push
outsb
imull
mov
adc
mov
adc
test
loope
or
xor
push
xchg
xor
int3
nop
fs
sub
mov
pop
mov
shll
ret
icebp
mov
hlt
rorl
jle
dec
ret
pop
jno
in
xor
pop
mov
je
mov
and
insb
push
and
sbb
jecxz
xchg
inc
jge
ret
jb,pn
mov
int
xchg
or
xlat
out
es
lock
dec
fidivs
mov
cmp
push
sub
mov
mov
cltd
xor
inc
insb
dec
std
test
icebp
mov
or
fisubs
mov
lret
mov
sti
aad
int3
rcll
dec
xchg
les
dec
mov
scas
jbe
and
add
mov
jne
push
mov
ljmp
test
out
add
pusha
jmp
jae
mov
and
mov
int3
enter
lds
test
out
jle
call
ret
std
imul
mov
inc
dec
inc
add
cmpsl
sbb
or
shrl
les
decl
adc
add
mov
cli
dec
mov
mov
cs
inc
xchg
scas
sbb
or
scas
xor
popl
fildl
push
ds
sbb
pop
xchg
rcll
aas
push
jne
sub
sbb
in
je
mov
mov
sub
mov
sub
mov
mov
loop
mov
mov
push
jmp
add
ret
imul
push
jg
es
enter
push
repnz
pop
aam
mov
das
xchg
add
adc
jmp
pusha
cmc
test
imul
mov
pop
hlt
xchg
mulb
mov
and
pop
mov
insl
mov
loope
jno
xor
mov
dec
mov
jnp
xchg
es
int3
addr16
outsl
out
fimuls
rclb
mov
mov
ret
add
xor
mov
mov
or
daa
pusha
fdivrp
jae
mov
mov
aas
sbb
or
xor
test
mov
dec
mov
scas
mov
aaa
pop
push
ss
xchg
sbb
jns
insb
dec
call
stos
mov
cmp
lock
gs
in
fwait
and
mov
les
adc
idivb
dec
sub
cltd
mov
in
insl
mov
xorb
imulb
mov
movhps
mov
pop
addl
pop
test
mul
mov
loop
pop
push
jo
enter
stos
push
cmp
mov
sti
dec
mov
xor
bound
decl
mov
in
andl
xor
in
divb
lcall
sub
xchg
in
lea
popf
out
mov
pop
inc
cmp
add
xchg
not
cltd
movsb
into
inc
insb
mov
adc
gs
mov
es
push
adc
mov
sub
sub
pop
jmp
jno
out
pop
je
sarl
insb
add
cwtl
pop
add
sbb
mov
imul
inc
or
mov
lock
or
adc
or
lret
lods
mov
rorl
repz
mov
out
push
cmp
in
push
mov
test
repnz
xor
lods
call
mov
adc
jecxz
add
repz
xor
adc
push
cmc
jp
fwait
jecxz
dec
stos
sbb
adc
roll
sub
test
das
inc
adc
and
je
mov
push
or
xchg
loopne
xor
push
add
into
mov
fbld
rcll
inc
sub
bound
fisttpll
cmp
add
std
jnp
xchg
push
lea
std
xor
jge
push
stos
jle
mov
pop
and
cli
in
xchg
push
les
cmp
xor
data16
stc
xchg
in
pop
adc
lahf
mov
dec
xlat
xor
cmp
jmp
fwait
cwtl
adc
jmp
fcmovbe
push
sub
dec
jb
xchg
xchg
mov
dec
in
sub
nop
and
stos
add
dec
lea
sbb
pop
push
aaa
fisubrl
dec
repnz
sub
mov
lret
cmp
push
jle
dec
push
pushf
insl
shrb
push
xor
clc
test
push
cmc
arpl
push
adc
jmp
push
sub
push
sahf
mov
fdivs
cmp
sbb
pop
mov
jne
insl
dec
in
jno
sbb
cmp
lahf
daa
aam
sub
xchg
ds
and
sub
fs
out
pop
inc
movsb
int
mov
xchg
pop
flds
insl
imul
ret
lret
fwait
ljmp
cs
cmc
sarl
cs
push
mov
add
dec
pop
xchg
ja
fadds
pop
daa
sbb
mov
jmp
mov
es
sahf
mov
cmp
dec
int
test
sti
adc
fisubs
cmp
stos
inc
and
jge
mov
in
fcmovne
and
add
hlt
insl
jb
dec
imul
and
sub
insb
jle
sbb
out
xlat
call
xchg
mov
mov
js
mov
cmpsb
aad
loopne
xor
dec
lock
sub
stos
push
inc
fldcw
dec
shlb
add
leave
cltd
ds
push
in
mov
iret
mov
clc
inc
inc
adc
ljmp
pop
inc
or
in
inc
xlat
aad
jl
popf
push
out
mov
in
das
test
out
lock
rorb
in
imul
push
out
sbb
lods
ds
and
mov
mov
push
cmp
and
xchg
cmp
mov
popf
sub
or
adc
or
and
sub
idivb
cmpsb
inc
enter
imul
or
add
call
dec
inc
and
xchg
clc
lret
dec
xor
cmc
mov
clc
push
lcall
ret
pop
add
hlt
jge
xchg
and
lea
sbb
fwait
or
mov
sbb
jg
or
popf
sbb
movsl
or
push
xchg
xor
jns
sbbl
mov
jns
xchg
jne
mov
ficoms
setbe
cmp
mov
jno
lea
dec
pushf
adc
mov
xor
je
and
daa
inc
push
sahf
mov
sub
call
pop
xchg
fcoms
sub
in
and
mov
jecxz
push
push
fstps
in
out
or
mulb
xchg
push
sti
out
sub
and
mov
filds
fcomip
test
mov
test
jecxz
sarl
je
mov
xchg
mul
rdpmc
fisttpl
testb
lret
gs
insl
xor
mov
aad
in
mov
sub
dec
jno
test
adc
test
ljmp
outsb
inc
lea
dec
rorb
por
dec
inc
pop
inc
mov
and
pop
mov
xor
fwait
rorl
pop
gs
hlt
insl
push
mov
jne
or
popa
icebp
cmp
aaa
cmpb
add
jo
fiaddl
movsl
popa
xor
add
enter
mov
rcrb
mov
call
lea
mov
aaa
bound
in
and
push
leave
out
xor
cmp
lret
mov
lret
imulb
out
arpl
cld
aas
pop
je
into
leave
xchg
dec
and
dec
xchg
dec
in
outsl
jmp
and
repnz
inc
xlat
nop
mov
pop
xchg
ljmp
in
adc
jne
sub
and
cli
push
adc
sbb
and
sub
cmp
push
sar
mov
lods
jo
popf
lret
fdivr
es
pop
arpl
jno
dec
shl
fsubl
push
movsb
xlat
sahf
pop
clc
cmp
pop
cmp
or
andl
addb
mov
sub
jg
sbb
lds
fnstsw
cmp
dec
fisubrl
bound
mov
scas
dec
frstor
cmp
popa
sub
push
cwtl
add
cmp
fsubs
outsb
add
xor
aam
dec
sbb
inc
int3
mov
sub
xchg
fstpl
mov
pop
ds
out
mov
clc
scas
mov
ret
dec
inc
sbb
out
jmp
lock
into
xor
xor
shlb
sub
pop
cmpsb
mov
pop
jne
stos
aam
shlb
add
xor
xchg
sbb
rorl
out
test
sbb
cwtl
arpl
mov
xchg
xor
cmc
push
fnstsw
pop
jecxz
cmpsb
fistpll
add
cltd
or
mov
dec
mov
insb
cmp
pop
cs
xchg
cmp
loope
ljmp
or
lods
test
mov
ss
sbb
xor
loope
in
cmp
lods
or
push
dec
inc
jo
mov
inc
xor
jl
jno
leave
inc
loopne
xor
f2xm1
xchg
fs
xchg
and
hlt
pop
data16
lds
ds
and
xor
outsb
scas
lret
rcl
test
leave
mov
out
mov
addr16
repnz
stos
xchg
ja
and
lods
xor
imul
and
pop
clc
mov
dec
nop
add
or
xorb
iret
xor
jb
cmpsl
jbe
mov
outsl
out
push
or
add
test
les
cltd
out
jnp
sub
push
mov
lds
mov
stc
xchg
subl
jbe
fwait
sahf
mov
lret
push
push
lods
pop
lods
xor
xchg
adc
pop
and
cli
mov
dec
icebp
sbb
inc
cwtl
sbb
cmpsl
jl
cmp
sbb
jb,pn
dec
jnp
inc
pop
imul
inc
sbb
push
adc
inc
out
xlat
cmpsb
and
inc
adc
xchg
and
jns
es
mov
pop
stos
dec
fwait
movsb
idivl
cmp
cmp
cwtl
enter
xor
popa
mov
in
out
and
dec
pusha
xlat
in
mov
mov
jbe
pusha
dec
enter
push
shlb
lea
pop
test
sarl
into
pop
or
jae
push
inc
pop
ret
movl
jo
fistpl
mov
push
lods
sbbb
mov
xor
int3
xchg
in
lret
cs
dec
cld
ljmp
add
mov
mov
pop
sub
jl
sbb
dec
push
ja
adc
sbb
jb
push
jp
mov
mov
hlt
dec
jns
add
push
mov
mov
jecxz
rclb
lods
fidivrl
mov
imul
icebp
out
ficomps
and
ret
ds
cmpsb
popa
js
pop
jnp
out
pusha
std
push
or
adc
in
aad
lea
jno
sti
pop
pop
pop
adc
repz
mov
pop
leave
mov
push
mov
mov
sahf
aas
jo
lea
fldl
xchg
dec
cmpsb
or
sub
mov
cli
sbb
lret
mov
rclb
fisubl
test
push
push
fs
sub
jmp
loope
das
push
pusha
add
ret
jno
or
mov
shlb
fwait
or
mov
push
and
sahf
add
fsubl
fidivrs
fnstsw
lahf
icebp
jno
ss
stc
xchg
add
shl
pop
insb
lret
sbb
bnd
gs
and
clc
fidivrl
rolb
shll
or
popa
pushf
xor
call
xor
inc
mov
outsl
mov
add
or
fldl
mov
push
cli
cli
mov
cmpsl
inc
inc
int3
fldcw
sbb
daa
shlb
sarb
dec
inc
inc
call
sub
icebp
jmp
mov
clc
into
scas
roll
cmp
cmp
sub
add
pop
test
xor
rol
cmp
cmovae
mov
pop
int3
repnz
mov
or
int3
add
xor
sti
out
mov
lcall
int3
iret
out
xchg
insb
mov
mov
fsubrl
push
or
lret
int
or
out
ja
ret
iret
pop
clc
mov
adc
or
addr16
dec
xchg
leave
cmpl
jmp
ljmp
in
addl
lds
cmpb
mov
jp
mov
xchg
lods
cmp
dec
push
push
pop
stos
cwtl
outsb
subb
in
notl
popf
push
adc
int
lea
xor
mov
mov
sbb
jle
pop
mov
sub
inc
les
sbb
xor
sbb
lcall
cmpsb
or
or
lods
jo
mov
sbb
lds
mov
lods
mov
jecxz
test
out
or
fsubrs
dec
fildll
mov
enter
sbb
mov
psraw
fisubs
pop
cmpsb
stos
repnz
dec
inc
dec
adc
dec
sbb
aad
push
adc
sarl
in
fs
dec
xor
xor
mov
pop
js
inc
int
and
insb
or
notl
sbb
mov
enter
mov
sti
addr16
sub
into
push
outsb
insb
bound
repnz
call
in
push
or
xor
cmp
mov
repz
es
push
ss
std
into
cli
test
dec
jnp
scas
ret
xchg
or
cmpsl
fnstenv
mov
adc
call
into
inc
inc
dec
lock
push
jae
adc
test
mov
jmp
rorl
loop
addr16
fwait
test
dec
mov
outsl
std
lret
int
aaa
xor
popf
lock
xchg
pop
jns
dec
pop
inc
mov
jle
mov
popa
sub
mov
add
adc
fdivp
rclb
cmp
inc
push
das
std
add
sub
push
repz
js
outsb
or
dec
jp
clc
pop
jbe
adc
loopne
call
out
push
mov
fsts
xchg
push
jg
xchg
xor
dec
popa
sti
xchg
xchg
popf
cld
in
daa
xchg
lods
lds
les
ds
pusha
inc
iret
hlt
cmp
hlt
jmp
icebp
ret
sbb
mov
ss
xor
jmp
add
mov
add
xor
pop
loop
ret
jno
and
inc
lods
ds
lea
pop
sub
scas
cmp
xchg
out
ret
jo
loop
in
mov
xchg
xor
cmp
lock
dec
lods
pop
out
sbbb
scas
test
bnd
add
add
pop
mov
rcll
jp
int3
mov
inc
outsb
jg
cmpsb
es
bound
gs
outsb
arpl
mov
cwtl
add
je
mov
xchg
push
outsb
and
shl
add
sub
fsubrl
adc
into
cli
cwtl
sub
ss
inc
lret
or
cmp
pop
push
rorl
dec
dec
sub
and
fcmovnb
add
stos
inc
lcall
iret
mov
mov
adc
into
pop
mov
lea
jmp
jmp
pop
stos
aad
cmpsb
cmp
fistpll
and
inc
mov
and
mov
dec
sub
int
mov
cld
sbb
insb
mov
xor
xor
addr16
push
pop
and
daa
out
xchg
xor
rorl
sbb
add
sub
seto
loopne
sbb
adc
inc
mov
lcall
mov
sub
in
test
mov
cltd
vfmsubsd
or
inc
fstl
jl
outsb
mov
inc
ret
sub
sub
inc
daa
jne
add
cs
mov
js
movsb
sbb
push
hlt
cmp
cmp
clc
fstpl
jnp
arpl
xlat
jmp
insl
xor
mov
sbbl
icebp
and
leave
mov
mov
cmpsl
lahf
lret
out
das
jl
test
sub
mov
subl
insb
xchg
ds
adc
xor
xchg
aam
dec
gs
stos
pop
add
add
pop
into
and
cltd
or
jno
push
call
cwtl
inc
sbb
lods
enter
inc
imul
clc
xchg
jb
sbb
cmp
push
lret
inc
loope
mov
add
test
push
xchg
lea
sub
inc
add
incl
cli
and
mov
ja
cmovo
pusha
fcompl
in
jl
xchg
dec
in
add
sub
xchg
pop
mov
cmp
and
es
jns
jae
or
sarb
loope
cs
scas
cltd
int
mov
stos
movsl
lahf
ret
adc
sti
push
call
ss
negb
aam
push
cli
lea
clc
pop
jp
lods
jmp
push
sub
push
push
pop
mov
add
cmp
jnp
inc
dec
xlat
or
outsl
ret
addr16
cmpsl
sub
or
mov
dec
or
and
sub
addb
inc
and
scas
adc
lock
mov
repz
scas
mov
add
pop
xchg
addr16
adc
push
push
push
loopne
sti
stos
pushf
inc
fistpl
sub
aaa
or
and
xlat
add
cwtl
and
lock
or
in
add
cmpl
jne
mov
ds
and
xor
out
cmp
outsl
ret
add
das
fistpll
rorl
inc
cmp
and
test
mov
sub
xor
lcall
in
sarb
xchg
addb
insl
ljmp
lea
rcrb
cmp
xchg
inc
xchg
jl
mov
and
fildll
jns
popa
mov
pop
inc
pop
xchg
adc
addr16
sub
push
sub
and
mov
mov
cmp
aad
out
jb
jo
cld
pushf
lods
ljmp
xsha1
cmpsb
mov
fidivs
icebp
pop
mov
xchg
jecxz
lcall
fisttps
jecxz
dec
sbb
imul
dec
sub
cli
dec
dec
xlat
ds
addr16
fwait
iret
leave
inc
jbe
lods
nop
push
or
dec
mov
pop
add
mov
aaa
xor
rcr
imul
cmp
jmp
arpl
test
or
xor
xchg
lds
popf
jle
daa
mov
mov
ss
outsl
loopne
adc
mov
or
inc
popa
iret
fldl
jecxz
jg
adc
cwtl
sbb
add
sar
stos
mov
inc
push
lods
rcrl
jl
out
sbb
push
rolb
cmpsl
test
sub
add
and
jns
jae
aam
pop
loope
je
or
and
lcall
sbb
adc
lods
int
stos
xchg
lock
fs
xor
test
cmp
mov
xchg
adc
add
adc
push
add
out
lret
inc
push
je
testl
dec
push
shll
imul
pop
xchg
cli
mov
inc
and
loopne
iret
inc
nop
shll
xor
std
add
cmp
pop
jno
pop
push
jbe
shl
dec
mov
mov
push
fst
data16
subb
xchg
mov
jo
lods
in
fnsave
inc
push
es
xor
into
test
iret
mov
mov
pop
push
test
mov
lods
movsl
jl
pcmpgtb
outsb
or
cmp
and
inc
lock
scas
insb
inc
pop
dec
and
and
add
scas
ret
dec
adc
mov
sbb
pop
repnz
adc
and
dec
fistl
jp
and
outsl
stos
stc
jg
xor
in
jmp
pop
xor
pop
pop
out
sub
inc
pop
mov
dec
pop
inc
mov
dec
pop
lods
add
mov
mov
pop
shl
fidivs
push
mov
or
out
sub
jb
adc
pop
pop
sbb
cmp
hlt
fsts
jae
pop
push
movsl
push
xchg
jle
mov
pop
xchg
sub
insb
xchg
stos
and
jecxz
ret
cwtl
mov
arpl
fsubrs
ljmp
mov
and
push
aad
push
out
dec
andl
push
repnz
fcmovu
popf
push
push
loop
mov
xor
fs
sti
sbb
idivl
xchg
js
add
pop
dec
cmpsl
push
ficompl
les
push
test
hlt
mov
shr
push
mov
fdivrs
in
pop
clc
mov
stos
movsl
outsb
xor
out
je
lcall
enter
fidivrl
enter
push
add
subb
cmc
push
or
cs
lret
xor
sbb
ror
push
adc
dec
iret
and
scas
xor
pop
or
xchg
enter
insb
mov
or
outsb
loop
sub
sbb
mov
pushl
push
stc
cli
mov
jecxz
imul
mov
fbld
repz
mov
lods
pop
sub
dec
insl
mov
das
test
mov
dec
push
cltd
xor
int3
sub
add
insb
push
dec
push
lahf
lahf
sahf
loope
shlb
int
outsb
sbb
push
sub
movsl
pop
and
and
sub
push
pminub
or
push
das
cmp
cmp
das
mov
stos
sub
stos
sub
pop
mull
xchg
nop
sbb
cwtl
data16
mov
fsubrs
mov
pop
and
inc
popa
sub
jecxz
jbe
push
shll
dec
in
or
imull
jns
mov
bound
out
cmp
dec
or
into
add
and
lods
adc
fs
pop
push
arpl
cmpsl
xchg
xor
xchg
repz
xor
fmuls
xchg
cmc
ds
cmpsl
add
fiaddl
and
adc
mov
sbb
adc
subb
out
cwtl
test
imul
and
aad
pop
push
insb
sbb
inc
dec
inc
and
scas
cmp
push
pop
out
sub
cltd
scas
imul
ret
pop
jo
sbb
xchg
outsl
ret
je
dec
xchg
mov
in
cmp
jecxz
push
fst
outsb
arpl
add
iret
push
jecxz
jl
dec
mov
mov
cs
enter
call
jmp
xchg
out
rcrl
pop
jae
and
sub
test
dec
popf
jmp
push
repz
push
ss
das
out
les
inc
scas
jnp
jne
lds
mov
lcall
cmpl
stc
test
popa
pop
mov
rol
mov
shr
sub
or
aam
inc
mov
lret
xor
insl
loope
sbb
jp
aad
icebp
jno
push
cmpsl
out
push
or
stos
out
mov
cmp
mov
adc
push
gs
xor
sbbl
adc
cli
aad
adc
and
andl
cmp
sub
neg
xchg
icebp
cld
sub
inc
dec
mov
insb
icebp
fucom
and
dec
daa
or
in
mov
or
push
icebp
loopne
sti
and
xor
addb
or
push
push
test
sbb
cmp
addl
enter
cmp
mov
ficoml
jle
std
or
push
cmp
rcl
fldenv
fistps
ficompl
add
jle
cmpsl
cmp
gs
mov
jbe
inc
jl
ljmp
testb
dec
push
cs
dec
repz
rclb
ss
xchg
loopne
pusha
mov
scas
notb
xor
int
inc
mov
and
gs
xchg
pusha
mov
sbb
sub
test
daa
lods
mov
dec
notl
mov
push
loope
mov
or
pusha
call
sbb
push
int
dec
cmpsl
shll
mov
xchg
gs
and
aad
jo
ret
pop
xchg
and
dec
lcall
jno
into
cmp
hlt
ret
push
fildll
and
mov
test
mov
lcall
xor
xor
or
push
pushf
stos
sbb
or
mov
pushl
stc
cs
cltd
cld
sbbb
stc
fnsave
ljmp
cmp
dec
jo
inc
jecxz
sbb
sub
lock
xlat
bound
mov
rolb
sbb
fiaddl
cwtl
fdivl
mov
aad
add
rcll
mov
fstpl
or
inc
ret
fwait
cmc
cmc
add
dec
cs
test
bound
imul
leave
jl
sub
mov
addr16
into
push
cltd
shll
push
gs
add
pop
stos
adc
mov
or
into
popa
int3
inc
push
cmp
jg
pop
mov
sar
push
push
and
push
jl
or
xlat
subl
ret
fldenv
pusha
jnp
fstpt
leave
sbb
jae
sbb
or
mov
fbld
movsl
xor
push
pop
dec
insb
mov
les
add
js
xchg
stos
adc
dec
jl
lcall
pop
sahf
and
jg
fsubrl
imul
fimuls
adc
je
test
pop
fldl
or
xchg
scas
outsl
shll
bound
mov
gs
in
cs
popf
mov
sbb
xchg
enter
sbb
test
in
jnp
push
and
xchg
iret
xchg
xorl
hlt
xchg
sbb
stos
and
dec
inc
bound
mov
nop
ret
dec
pop
lds
push
ja
add
in
push
adc
loope
sbb
pop
fs
push
xor
movsb
movsl
jmp
ret
pop
xor
and
and
stc
popf
stc
inc
mov
push
cltd
rorl
xchg
mov
in
clc
and
cs
fdivr
push
inc
jecxz
and
or
scas
sub
ret
pop
test
lea
pop
jns
aam
lods
or
pop
push
xlat
test
add
jo
loope
and
jbe
cmp
sub
xor
sub
fisttpll
sub
ss
push
sbb
cmpsb
or
stos
xchg
insl
or
stos
cmp
jnp
jno
rep
mov
cwtl
dec
pop
lods
cmovl
add
adcl
jbe
mov
xchg
push
ds
repz
inc
ret
push
movsl
and
cltd
lahf
or
inc
cmp
dec
or
in
sub
mov
loopne
aas
aaa
dec
stos
loope
sbb
dec
push
test
or
or
idivb
sahf
mov
frstor
add
add
sbb
mov
mov
pop
lahf
adc
mov
les
push
xchg
cmp
adc
push
lcall
push
lock
jmp
mov
and
pop
loop
sbb
xor
pop
loop
in
aaa
cmc
push
mov
push
sti
cmp
in
bound
ficoml
lahf
insl
xchg
into
aad
inc
sbb
cwtl
cmp
enter
cwtl
std
fcmovnu
lods
inc
cmp
cmp
add
adc
pop
scas
outsb
cltd
popa
pop
arpl
sbb
jnp
in
xor
je
inc
inc
stos
pushf
or
int
gs
stos
inc
jno
pushf
call
mov
leave
jp
loope
lret
adc
push
or
mov
xor
push
sub
scas
into
adc
add
adc
and
push
cmp
sub
jbe
ret
loopne
mov
xchg
jae
mov
jmp
sbb
pusha
leave
inc
xchg
push
sahf
adc
sbb
loopne
iret
int3
cmp
repz
aad
insl
mov
into
mov
aam
cmc
dec
outsl
stos
out
mov
fnstenv
cmp
or
add
mov
dec
aad
les
add
inc
mov
and
pop
jecxz
sbb
xor
jae
cltd
mov
nop
jp
push
ret
cmp
pop
push
outsl
xlat
cltd
sti
mov
pop
sub
mov
xlat
subl
movsl
push
sub
jmp
out
mov
in
or
adc
push
shll
fbld
test
xor
xchg
mov
and
sub
pop
aas
lret
imul
push
mov
xlat
add
push
cwtl
adc
pop
xor
jmp
xchg
inc
lcall
pop
sbb
mov
pop
dec
js
mov
fldl
inc
mov
or
aam
push
rolb
mov
outsb
ja
jecxz
dec
mov
fcomps
sbb
xchg
lret
jbe
lock
stos
sbb
jmp
xor
add
cwtl
call
lahf
addl
addr16
popf
cmp
xchg
rorb
div
adc
rcrb
inc
dec
xor
test
mov
or
jg
icebp
lock
cld
popa
jmp
mov
xlat
fs
push
push
ret
fistps
mov
or
cmp
xor
loop
daa
push
mov
mov
cs
divb
iret
pop
arpl
test
ret
cmpsl
cmpsl
aad
ret
fcompl
divb
mov
loopne
ret
daa
cmp
test
and
jns
adc
xor
xchg
sbb
out
lock
jl
je
in
jb
imul
ss
jae
test
sub
testl
movsb
mov
mov
les
das
push
push
std
mov
mov
repnz
add
insb
sub
stos
sub
ljmp
push
aad
aaa
mov
xor
mov
popa
leave
mov
pop
pop
xor
push
inc
xchg
in
lret
mov
mov
mov
pop
bound
repz
lret
aad
sbb
psrad
or
xor
icebp
int3
xor
inc
scas
fidivl
xchg
adc
cmp
and
xchg
jns
testb
aad
jbe
aam
sub
xor
mov
jno
pop
in
sbb
add
dec
inc
pusha
xchg
mov
gs
or
pop
mov
mov
pushf
subl
push
mov
fstl
icebp
adc
loop
push
add
push
cs
mov
mov
sub
in
sub
cli
imul
adc
bound
sub
outsl
xor
sbb
bound
fsubrs
or
adc
mov
incb
jg
inc
mov
sbb
xchg
in
sub
arpl
pusha
inc
jp
lods
lds
rcl
jecxz
sahf
pushl
into
jle
scas
call
add
push
mov
enter
lret
mov
adc
and
jge
cmpsl
mov
mov
mov
mov
mov
popa
sub
jg
scas
sti
pop
add
cmp
mov
pusha
pop
sbb
cmpsl
push
sahf
out
jl
scas
repz
inc
or
push
cmp
dec
sub
mov
popf
inc
push
add
add
stc
or
push
push
ret
add
insl
dec
cmp
push
inc
or
dec
test
cmc
xor
js
stos
iret
or
fisubs
xchg
rorl
scas
cld
or
clc
jnp
fsubrs
nop
mov
das
stc
cmp
test
sbb
jbe
xchg
int3
cwtl
cmp
out
jae
outsb
fistps
aaa
sbb
dec
push
ds
repnz
mov
addr16
jbe
clc
xchg
inc
or
cli
cltd
xor
data16
outsl
scas
push
pop
mov
push
xlat
outsl
xchg
push
insl
and
bound
pop
leave
cltd
xchg
test
inc
imull
xchg
in
jnp
fstps
jmp
push
mov
outsb
xchg
ja
dec
cmpsl
arpl
leave
jbe
xor
mov
leave
lods
sub
in
sub
nop
enter
push
shlb
inc
mov
arpl
lcall
xchg
stc
out
mov
fstpt
cmp
adc
mov
leave
xchg
lcall
jns
dec
fsubrl
fs
insb
lods
push
sbb
lods
push
xor
sub
popf
ds
fst
jns
dec
cmp
nop
pop
lods
mov
stos
test
rcll
fadds
inc
pop
push
add
add
dec
jae
lret
movsl
xchg
push
test
shrb
push
scas
iret
sbbb
sbb
ror
lods
cmpsl
das
bound
jo
lds
cwtl
or
mov
sub
insb
push
fidivrl
xchg
pop
daa
cld
jnp
imul
inc
pop
aad
lahf
adc
sub
cmp
outsb
mov
push
jg
xchg
popf
jle
cwtl
fmuls
fcmove
cmp
jmp
nop
jg
mov
jp
xchg
pop
test
mov
mov
bound
pusha
push
cltd
cs
xchg
ret
std
rcr
inc
jno
icebp
cld
adc
push
push
dec
jae
and
sbb
sbb
js
rcl
xor
sub
push
in
push
pop
ljmp
addr16
mov
xlat
out
divb
imul
adc
and
dec
fcmovnbe
jns
insl
jbe
cmp
iret
push
dec
mov
scas
ja
mov
push
jb
outsb
or
push
and
and
push
jne
sbb
xor
test
pop
mov
mov
pop
xor
insl
mov
mov
mov
filds
leave
cld
cwtl
pop
addr16
hlt
movsl
add
mov
fstl
and
adc
and
push
jmp
pop
and
inc
lahf
stc
jecxz
xchg
xchg
in
scas
add
inc
pshufw
jbe
mov
roll
repnz
xor
mov
sbb
push
shlb
addr16
fdivr
xlat
sub
int3
pop
xchg
mov
xchg
mov
mov
in
insb
push
pop
push
incb
scas
outsb
bound
push
cmp
mov
xor
lret
scas
cwtl
inc
mov
mov
cmp
test
mov
fistps
addr16
loope
and
enter
add
push
dec
xor
sbb
jb
xor
lret
xlat
push
mov
xchg
mov
lahf
xchg
mov
aaa
lcall
imul
mov
outsb
jne
or
inc
fdivrl
ret
mov
sbb
ftst
jns
jns
mov
mov
lret
ljmp
std
inc
xchg
sbb
jmp
orb
imul
push
test
aad
out
icebp
addb
jg
fdivrp
jb
mov
es
les
adc
adc
in
sbb
hlt
ficoml
fildl
mov
sub
mov
insb
inc
data16
cld
scas
dec
mov
add
sbb
rcrl
dec
push
pop
jp
test
adc
cmp
fs
jo
xchg
sti
cmp
sti
fdivrl
adc
inc
je
call
push
addr16
popa
hlt
adc
mov
jb
mov
and
sbb
clc
pop
bound
nop
add
repz
xor
pop
push
test
fists
and
jmp
adcl
aas
rorb
push
mov
inc
jno
cmp
push
cmp
dec
add
jmp
push
sbb
sub
sbb
sti
loop
dec
and
leave
inc
fnstenv
jmp
hlt
cmpsl
dec
pushf
bound
insb
sti
insb
xor
sub
xchg
adc
in
out
out
shrb
sub
insl
fimuls
jecxz
add
or
jns
jge
pusha
pushf
imul
and
sbb
cltd
int
vmwrite
inc
outsb
and
cli
adc
pop
pop
repz
or
fwait
imul
fldcw
inc
sub
inc
sbb
or
roll
add
out
ljmp
arpl
lret
sub
mov
pop
idivb
lgs
jbe
mov
test
mov
add
and
jle
lret
icebp
in
jge
or
fldl
hlt
lea
jle
and
add
or
iret
sbb
sub
int
pop
mov
push
ds
arpl
in
sub
sbb
arpl
divl
mov
jbe
xchg
cmp
lods
or
sbb
rcrb
outsb
leave
popa
sbb
into
sub
mov
in
aam
je
nop
pop
lahf
adc
push
hlt
push
popa
rorb
push
sti
pop
test
sub
sbb
fwait
pop
jno
aam
cmp
jo
pop
push
pop
negl
pop
jp
in
cmpsb
and
incl
mov
xor
push
lret
int3
or
into
addr16
mov
xor
jp
push
dec
test
inc
pop
and
jb
push
sub
out
ja
aaa
push
stc
aam
testl
popa
dec
sub
pcmpgtw
push
adc
aad
xor
cmp
dec
sbbl
rorb
jno
push
in
xchg
jg
jl
imul
add
jp
xor
and
loope
jp
sbb
jne
xchg
stos
jb
xchg
lock
sbb
pop
jmp
jg
jmp
movsl
test
xchg
or
mov
add
or
jae
dec
push
or
and
shrl
jo
xor
jae
and
fidivl
lods
and
sub
clc
test
jge
mov
sbb
fmulp
std
or
mov
test
pop
cli
andl
dec
out
pop
push
and
sbb
mov
cmpsb
test
lds
cmp
fildll
sub
call
ljmp
dec
sbb
mov
xor
arpl
adc
je
mov
std
sbb
call
roll
or
subb
push
cld
daa
stos
sbb
pop
pop
cmp
lock
jmp
inc
inc
mov
js
jp
xor
mov
push
ret
dec
loop
fldl
idiv
inc
xorl
dec
adc
call
cs
aaa
sbb
mov
sbb
das
daa
xchg
es
roll
mov
mov
mov
cltd
std
out
add
jae
sbb
jns
and
push
out
repnz
mov
in
adc
lods
adc
jmp
stos
cmp
sbb
lahf
sti
clc
imul
bound
loopne
sbb
ljmp
inc
sbb
pusha
ficomps
outsl
mov
fistps
in
dec
or
jne
sub
lods
or
pop
xchg
xor
stc
aad
in
xlat
inc
inc
xor
pusha
mov
and
shl
cmpb
or
xchg
fldt
pop
push
push
leave
sub
test
push
es
or
jl
cld
insb
sbbb
movsl
jnp
mov
inc
dec
mov
fisttpl
sub
jmp
jp
jge
in
adc
sbb
out
dec
imul
mov
aaa
nop
push
mov
cmp
je
jmp
jne
out
xchg
scas
call
xchg
out
inc
jecxz
aaa
lods
cmp
lret
int3
out
push
sbb
xchg
mov
lea
sub
mov
popa
mov
push
ja
int3
adc
mov
bound
sbb
nop
xor
jle
adc
lcall
fsts
mov
addl
std
jo
int3
ss
pushf
outsl
add
push
movsl
enter
mov
pop
loopne
imul
push
sarb
in
stc
loopne
jg
mov
push
dec
aam
jo
push
outsl
xchg
stos
leave
cli
inc
cmpsl
inc
mov
jae
test
decb
lock
or
push
insl
jb
adc
nop
adc
cmp
push
nop
shll
bound
xchg
mov
inc
xor
and
mov
inc
push
bswap
sarl
sbb
hlt
aam
sbb
push
push
mov
sub
inc
movsb
jbe
lahf
mov
sub
xor
cmp
xor
cs
test
sub
push
shr
imul
and
push
repnz
iret
shlb
dec
mov
xchg
lods
js
mov
push
decb
add
dec
mov
sub
push
ss
jp
fidivl
push
mov
das
call
lods
xchg
add
loopne
int
inc
leave
cmp
sbb
mov
sub
bound
dec
sahf
call
loope
or
icebp
mov
or
jnp
mov
cmpb
out
call
inc
mov
int3
pop
mov
test
insb
je
pushf
xchg
loope
rcll
pop
test
xor
adc
dec
out
in
stc
aad
adc
sbb
push
xor
aad
js
lods
jl
push
and
jp
dec
push
or
inc
pop
cmp
add
jmp
xor
push
dec
stc
jnp
push
movsb
adc
mov
aaa
add
add
jl
fsubrs
movsb
fsubrs
dec
lcall
mov
mov
ja
lret
and
or
insb
subl
fiadds
repnz
dec
pop
iret
xchg
in
mov
jbe
fidivrl
sub
sub
clc
xchg
into
xchg
cs
pslld
lcall
jb
push
or
jmp
in
lahf
lahf
ret
divl
or
push
push
stos
add
jo
pop
push
call
clc
int3
pusha
rclb
ret
outsl
jnp
jbe
scas
bound
xchg
outsl
sub
push
sar
xor
lahf
xchg
pushl
add
out
mov
push
jo
push
or
xor
int
movsl
push
enter
or
stc
push
cmp
mov
insl
shl
mov
push
push
mov
in
rorl
jae
add
hlt
lock
hlt
sar
pop
mov
push
mov
add
int
mov
jbe
mov
ljmp
cltd
sub
pop
fchs
cmp
dec
push
les
iret
jp
inc
out
fwait
sub
dec
push
fisttpl
les
cmpsb
jecxz
pop
cs
pop
les
cmp
aaa
inc
fadds
int3
inc
push
push
cmp
xchg
inc
stos
fistpll
xchg
popa
mov
sbb
jmp
test
mov
fwait
pop
xchg
adc
cmp
iret
jae
testb
aam
mov
add
fidivrs
fadd
sbb
jno
fistps
hlt
push
arpl
fldl
lock
mov
insb
jbe
inc
js
xor
xchg
xchg
dec
push
dec
mov
mov
clc
or
aad
add
fimuls
xor
mov
sub
cmp
sub
sahf
jg
sbbb
mov
inc
daa
pushf
jbe
aas
stos
add
popf
mov
addb
jmp
xor
int3
inc
popa
dec
adc
int3
jmp
lcall
jno
cmp
les
jle
pop
mov
mov
add
movsb
pop
flds
out
sbb
aas
sub
inc
int3
push
pop
dec
testb
outsb
cwtl
cld
push
nop
and
and
cmp
lods
lahf
xlat
test
add
je
and
das
jecxz
scas
pusha
pop
outsl
ds
loopne
adc
fbld
mov
cli
iret
xor
mov
cld
xchg
pop
jecxz
mov
jns
fdivrs
sub
icebp
jle
icebp
xchg
test
rcr
ret
cmpsl
add
shrb
pop
mov
add
push
mov
add
push
mov
adc
lret
sub
gs
bound
testb
sbb
outsb
repnz
idivl
ss
mov
xor
and
sbb
add
call
jns
loope
adc
aam
into
pushf
xchg
pop
stos
or
adc
int
jne
pushf
lcall
ljmp
repnz
jns
out
sub
out
dec
push
jp
xchg
xlat
rcl
xor
mov
sub
ljmp
filds
sub
ret
ret
mov
das
xlat
push
hlt
xlat
pop
aaa
push
nop
lahf
add
je
in
cmp
fwait
and
lret
adc
push
lret
js
sbb
iret
in
dec
xor
cld
pop
je
cld
cmp
mov
pop
mov
push
adc
push
xor
aas
popa
cld
ljmp
xor
adc
shlb
cmpsl
pmaddwd
cmp
jnp
sbb
cmc
mov
pop
les
sbb
cld
mov
hlt
or
mov
cmp
xor
aam
inc
xor
cmp
jo
aaa
xchg
mov
test
fstl
inc
insb
fwait
push
scas
sbb
pop
mov
pop
int3
adc
or
ljmp
or
mov
sbb
in
rol
scas
jecxz
sub
add
xchg
mov
sti
lahf
shll
rcr
push
sarl
adc
dec
jg
mov
inc
mov
rolb
ror
ds
hlt
push
jg
dec
dec
cmp
into
xor
fcomps
cmp
pop
ds
pop
adc
push
fistl
add
mov
pop
pusha
mov
inc
xor
lret
dec
bound
inc
xor
or
aam
out
dec
cwtl
ja
movsb
les
outsl
sub
negl
xor
xor
add
mov
data16
xor
mov
jg
mov
loope
push
push
mov
adc
mov
jge
xor
cmovns
int3
or
xchg
pop
fsubl
das
pop
je
iret
jmp
das
add
iret
inc
repnz
push
pop
mov
lcall
jmp
cmp
jo
add
mov
shrb
sbb
ja
cmp
mov
fidivrs
cld
push
mov
mov
imul
dec
pop
out
popf
scas
mov
rclb
xor
mov
aaa
dec
out
outsb
push
pusha
and
cwtl
xchg
fadds
rcr
inc
xchg
out
mov
subb
call
or
push
in
jno
in
icebp
adc
adc
add
mov
or
mov
inc
cli
pop
sub
in
out
jns
push
fldt
add
movsb
test
fcmovne
xchg
out
fwait
lods
sahf
into
or
js
cltd
mov
xchg
or
adcl
sahf
push
negb
ss
or
les
std
ss
mov
in
cmp
lret
test
inc
ss
sub
xorb
cwtl
or
leave
jns
adc
sub
mov
lcall
imul
int
pop
mov
pop
xor
adc
out
sub
and
pusha
mov
sbb
inc
adc
movsl
adc
sub
jb
bnd
and
jns
pop
or
dec
jno
xchg
ret
xchg
int
ficoml
test
push
je
xorb
clc
mov
test
fnsave
xchg
es
repnz
stos
bound
mov
test
data16
lahf
mov
fwait
divb
or
xchg
clc
jl
xor
adc
sub
add
shll
pop
xchg
ret
inc
in
push
mov
push
lret
mov
add
in
cmpsb
cmp
in
jne
jge
pop
mov
adc
or
mov
sbb
mov
mov
outsb
je
hlt
jmp
xor
ret
xor
outsb
and
repz
mov
mov
dec
int3
sbb
imul
push
popa
pop
cmp
pushf
lcall
jb
inc
imul
cwtl
inc
sub
mov
xchg
jbe
sub
or
je
dec
pusha
test
jmp
or
cmpsl
out
xchg
push
iret
push
pop
mov
xor
pop
xchg
icebp
mov
mov
pop
mov
testl
cmp
cmp
push
push
imul
sti
cwtl
xlat
xorb
hlt
push
es
lcall
lds
mov
cmp
popa
fmuls
sahf
in
mov
jecxz
push
pop
xor
cwtl
fwait
and
jge
fwait
rolb
jo
adc
into
mov
lds
sub
xchg
and
mov
adc
push
xor
cmpsb
cwtl
mov
mov
lods
xor
stos
pop
testl
jmp
xchg
cmc
mov
push
movsl
mov
jb
or
js
enter
fdivrs
xchg
sahf
pop
scas
sahf
aam
adc
call
test
andl
lock
sarb
mov
cld
or
dec
add
xchg
sub
sub
mov
sub
faddl
sbb
les
imul
loopne
fidivs
xchg
adc
push
fisubl
push
hlt
cld
fcomp
push
sub
xor
in
pop
aam
mov
add
movsl
push
push
cltd
fwait
cwtl
jmp
jne
sbb
stc
shll
into
aad
sub
daa
mov
inc
mov
lods
adc
dec
fwait
push
clc
test
xor
mov
lcall
jl
mov
repnz
inc
psubb
sub
push
dec
stos
fadds
ljmp
pop
movsb
lds
jmp
es
add
negl
ret
xchg
cmpsb
dec
loop
sub
int
cmp
sub
leave
cmc
cmp
ss
aad
xchg
or
sbb
push
sub
mov
jle
mov
je
fbld
xchg
xor
mov
pop
lds
repnz
mov
iret
sbb
int3
test
add
inc
je
and
les
arpl
mov
fmul
inc
adc
incl
mov
pop
andb
rcrl
push
sub
mov
push
jmp
pop
inc
add
ficomps
mov
mov
and
and
out
xor
mov
icebp
in
pandn
push
je
js
sbb
mov
pop
xchg
add
out
push
push
sub
sti
bound
repnz
cwtl
inc
xchg
je
jbe
mov
xlat
jo
loope
mov
jae
xchg
dec
sub
sub
fcoml
dec
outsb
adc
sub
xchg
or
fucom
jo
push
sbb
pop
popf
sbbb
es
jle
sbb
push
push
cmp
jle
adc
fldcw
mov
add
jno
mov
js
mov
jp
xor
lcall
jle
clc
fwait
out
pop
cld
push
mov
jmp
repz
and
dec
mov
push
xchg
cmc
xor
je
pop
add
in
and
mov
sub
adc
test
int
call
shr
je
cmp
push
sbb
lahf
push
adc
cmc
bnd
or
enter
cld
adcb
clc
adc
or
hlt
jne
cld
test
fisubs
xchg
ret
out
scas
pop
lahf
mov
mov
mov
and
shl
in
out
push
push
ljmp
cld
sbb
pop
dec
sub
lods
daa
xor
jno
shrb
push
aaa
sub
lcall
aaa
out
cmp
mov
movsl
mov
and
push
orb
sahf
xor
insl
fdivrs
mov
fists
mov
pop
ss
mov
xchg
stc
scas
mov
and
sbb
out
imul
mov
addr16
sbb
fidivl
inc
out
js
cltd
in
inc
push
shll
and
lcall
mov
hlt
mov
stos
popf
jp
insb
mov
gs
cmc
sub
adc
fwait
les
sahf
cmc
sahf
iret
aam
pop
push
test
jae
mov
insl
jb
push
xor
mov
mov
loopne
outsb
xchg
enter
insl
loopne
insb
imul
loope
xor
cmp
shr
in
lahf
push
outsl
mov
sbb
sub
lret
and
mov
or
lcall
out
je
std
repnz
lret
lcall
add
lea
mov
push
or
and
add
mov
mov
or
stos
mov
je
push
cmp
adc
cli
add
xor
adc
dec
decl
or
add
jae
xchg
pop
clc
sahf
xor
movsl
mov
fidivl
sub
mov
cmpsb
incl
fiadds
sahf
and
mov
sub
pop
pop
xchg
mov
enter
nop
stos
pushf
filds
test
pop
cmp
jg
dec
int
insb
loope
mov
out
call
mov
sbb
xor
imul
cmp
ret
xadd
int3
add
jbe,pt
icebp
out
icebp
dec
xor
mov
cmp
repnz
imul
sti
popf
pop
sub
sbb
mov
adc
aaa
pop
stos
xchg
jge
cmp
xchg
xchg
xchg
sub
inc
mov
int3
aad
cmp
inc
sbb
cmpsb
mov
xchg
imul
xor
jb
fidivrs
cmp
dec
push
mov
sbb
loope
out
or
outsl
popa
cmc
add
jo
daa
cmpsl
pop
adc
and
imul
mov
or
dec
andb
fists
cmp
stos
icebp
push
addr16
flds
xor
lea
adc
scas
mov
cmp
dec
rorl
xor
jb
inc
add
aas
imulb
pop
add
mov
mov
sti
lods
sbb
mov
les
mov
and
pop
addb
adc
mov
cli
pop
leave
fbstp
das
pop
cltd
or
iret
push
sbb
cmc
add
jb
adc
fistpl
mov
adc
fldt
lret
jmp
push
daa
inc
clc
jle
and
sbb
jmp
jo
mov
sarl
cmp
imulb
pop
xlat
cmpsb
daa
xor
insb
sti
das
pop
leave
pop
add
mov
jbe
sub
rolb
packssdw
gs
je
aam
scas
std
push
in
sbb
lea
jo
sti
call
push
mov
cmp
repz
lea
pop
cltd
aad
roll
jg
mov
andb
pop
enter
insb
xor
sti
cld
dec
stos
in
shrl
sub
enter
mov
push
ss
fsts
xor
sbb
xchg
int
push
jge
sbb
iret
out
int
mov
mov
es
in
and
leave
mov
stc
stos
cs
insl
pop
pushf
cld
sbb
data16
jae
inc
imul
pop
push
and
pop
insl
pop
hlt
mov
xcrypt-ecb
cmpsl
mov
cmp
out
bound
outsl
push
cmc
das
movsb
fstpl
insl
jp
add
test
inc
cmpl
in
adc
adc
pop
mov
faddp
shll
adc
test
jno
fidivs
mov
gs
jnp
sub
in
push
add
or
loopne
push
insl
xor
mov
mov
test
fwait
rorb
das
or
mov
or
shll
movsb
fxch
aas
nop
sbb
into
sub
xchg
out
outsl
daa
mov
xor
shll
xchg
cmp
sti
aam
inc
push
adc
or
das
lods
aam
cmc
pop
js
sub
cmp
jecxz
pop
sbb
cld
and
pop
and
adc
lds
xor
inc
inc
pop
loope
mov
pusha
imul
cmpsb
mov
ror
add
inc
lds
jb
loope
xchg
lods
hlt
sub
dec
xchg
iret
je
dec
loop
inc
pop
push
inc
loopne
loopne
and
subb
add
mov
mov
pop
pop
outsb
popf
popf
mov
cmc
notl
movsl
insb
lods
mov
inc
push
pop
lcall
add
add
cmp
je
fistl
mov
xchg
scas
pop
mov
jg
pop
pop
xchg
or
mov
push
test
scas
add
mov
movsb
fidivl
mov
ss
xor
inc
inc
cwtl
fwait
sbb
mov
cmpsl
lret
xlat
push
iret
movsb
ss
jmp
cmp
mov
mov
jno
insl
push
ret
fcompl
xchg
iret
fidivs
shrb
mov
jge
enter
mov
inc
mov
fs
subb
adc
cld
data16
flds
xor
aam
sub
lds
mov
pop
push
inc
test
inc
pop
in
and
aaa
cltd
fistpll
xor
pushf
andl
out
mov
addl
out
dec
jno
inc
ret
ucomiss
xchg
test
cmpsb
mov
push
add
fcompl
add
scas
cld
sub
ret
cwtl
xor
gs
flds
stos
dec
and
and
pop
ss
add
adc
push
rcrl
mov
cmp
out
pop
jle
inc
mov
push
sub
sub
dec
push
inc
mov
and
inc
ret
and
cmp
and
push
mov
mov
pop
jo
jmp
inc
sbb
cli
stos
push
aaa
mov
xchg
fdivrs
add
pop
mov
and
lea
fistpl
sub
mov
or
mov
sbb
xlat
sti
add
mov
adc
sub
sbb
lret
push
in
outsl
std
or
push
fstl
cmp
lret
adc
pushf
jne
int3
push
push
adcl
sarl
ret
mov
push
popa
and
push
out
and
lea
jnp
repz
imul
jae
pushf
and
out
and
sti
out
gs
movsl
xor
mov
test
jl
out
xor
mov
push
cwtl
pop
pop
inc
fsubrs
ljmp
jns
imul
jno
jns
jp
in
mov
cmp
adc
mov
loop
and
imul
sbb
dec
dec
mov
in
sub
shl
cmpsb
icebp
mov
jl
repz
push
pop
jl
bound
mov
inc
pop
or
mov
in
mov
push
in
out
sahf
inc
cmc
xlat
add
jne
lea
sub
loopne
gs
stos
pop
pop
add
and
or
lcall
jle
jg
imul
pshufw
lret
repz
shr
aam
in
imul
mov
xlat
jmp
sub
adc
sahf
mov
sub
inc
xor
outsb
in
jle
mov
inc
cmp
inc
cmp
inc
jl
mov
scas
lods
jecxz
mov
cmp
push
mov
fwait
push
ret
shr
stc
adc
jle
push
jno
jb
inc
clc
aam
push
rcrl
jne
cmc
pushf
ret
push
inc
mov
jnp
sti
push
sbb
or
repz
movsl
jge
cmp
orl
mov
mov
sbb
adc
adc
add
xchg
xchg
wbinvd
lds
add
outsb
push
lret
or
clc
adc
bound
loop
xchg
loopne
xchg
mov
mov
cld
sub
les
es
ss
adc
jp
pop
repnz
or
push
sub
mov
push
and
fdivs
aad
in
push
aad
xor
imul
mov
movsb
xor
je
sbb
sbb
call
andl
aad
sbb
dec
sbb
fdivp
mov
and
add
fs
lea
fistps
xchg
adcb
lahf
imul
sbb
or
jg
hlt
jecxz
adc
jecxz
ljmp
ds
sub
fdivrl
jecxz
xor
lea
sbb
push
pusha
lds
clc
and
mov
enter
iret
daa
neg
push
push
and
xor
xor
dec
les
mov
dec
dec
popa
xchg
movsb
add
mov
jae
mov
pop
xor
push
jecxz
frndint
popa
loop
sbb
movsb
add
jecxz
add
fildl
in
outsl
xor
sbb
or
scas
in
arpl
sbbl
mov
lock
and
fdivr
push
sub
xor
sbb
lea
clc
mov
iret
inc
std
push
xor
bound
in
mov
shrl
les
nop
cmp
test
pop
jle
loop
les
cmp
jnp
mov
xor
sbb
mov
popf
mov
out
dec
into
mov
fisubs
adc
in
pop
lods
into
xlat
xchg
int
sbb
push
adc
pop
std
hlt
mov
orb
jecxz
fwait
xlat
aaa
mov
xor
or
xchg
pop
fs
jb
or
fcmovb
mov
jp
jge
hlt
sub
ret
push
lahf
inc
gs
mov
or
adc
call
mov
mov
mov
mov
lea
mov
lcall
push
xchg
rorl
in
sub
outsb
add
movsb
scas
dec
lods
mov
jg
dec
repnz
cmp
xor
call
cli
mov
bound
ss
xchg
popa
cmp
gs
push
mov
movsb
ror
cld
push
imul
push
xor
pusha
jg
inc
dec
add
add
mov
pop
daa
push
in
xchg
enter
sbb
xor
xchg
xor
rorb
adc
lahf
jmp
mov
test
xchg
insb
xchg
jb
add
rclb
pop
add
iret
hlt
inc
push
mov
adc
divb
push
jo
mov
aad
jge
pop
and
stos
mov
aad
inc
inc
in
movb
or
mov
sub
inc
inc
sbb
loopne
mov
mov
push
push
mov
inc
or
dec
push
outsb
xchg
call
test
adc
cmp
stos
stos
pop
pop
lock
lret
decb
aaa
xlat
nop
and
stos
and
scas
push
pop
pop
aad
js
push
testl
xchg
pop
ja
xchg
gs
leave
cmp
add
popa
jbe
rcrb
sbb
rcrl
pop
xlat
leave
repnz
adc
inc
push
xor
push
jl
sub
add
mov
sub
and
jnp
mov
stos
orb
fidivrl
aam
test
jnp
pop
pop
dec
and
jle
notl
in
pop
in
and
cmp
adc
jb
push
and
push
xchg
jbe
test
lods
sbb
pop
test
loope
sbb
push
ret
fdivrl
push
dec
cmp
inc
adc
aas
inc
jns
sub
cmp
stos
ret
ret
cmp
lods
mov
cmp
cltd
das
inc
adc
icebp
cmp
aas
stos
mov
or
cmp
add
pop
pop
jmp
add
pop
dec
aaa
iret
out
lret
movsl
xor
insl
ffreep
push
xor
js
int
mov
cmp
push
stos
inc
cmp
sti
lret
test
cmc
sub
push
dec
jp
mov
mov
push
mov
xchg
cs
inc
leavew
xor
inc
int
dec
mov
out
cmp
loopne,pn
sbb
les
int
jl
push
or
jnp
pop
jnp
jns
bound
test
mov
xor
cmpsb
adc
mov
or
dec
ret
cs
push
cmp
test
mov
xchg
cli
pushf
aas
imul
aas
xor
out
xchg
repnz
cmp
sub
or
add
shlb
push
cmpsb
adc
inc
add
inc
lods
cmp
fsubl
movl
push
jge
clc
das
or
imul
or
sahf
adc
int3
xchg
ja
adc
mov
add
and
lods
mov
mov
cmc
inc
sub
mov
xlat
push
push
push
and
pop
or
dec
bound
jbe
scas
mov
mov
test
ljmp
imul
push
push
jae
mov
push
mov
pop
pop
or
xor
xor
mov
mov
pusha
in
mov
imul
pop
pop
xchg
cmpl
xchg
adc
sub
pop
mov
bound
repz
mov
xor
mov
leave
arpl
inc
ss
test
add
pop
out
cs
push
and
repz
xchg
std
or
arpl
push
push
sbb
cmp
dec
push
inc
dec
and
jl
sbb
rcll
cmovge
jb
popf
sub
push
out
and
xor
imulb
test
fildl
push
into
fs
sti
dec
std
leave
push
sub
or
sbb
bound
jp
and
aad
imul
pushf
dec
test
fwait
mov
popf
cmp
gs
sti
cmpb
add
mov
sub
orl
jae
cmp
mov
mov
aaa
arpl
in
or
inc
insl
in
push
pop
fildl
stos
rcll
out
cmpsl
xchg
addr16
jns
inc
aam
mov
mov
push
ljmp
popf
jmp
cmp
xchg
push
fwait
cli
fistps
lret
lahf
sbb
and
jne
or
adc
xor
movsb
das
pop
xchg
cmp
xchg
stc
jmp
add
loop
cmp
pop
adcl
dec
das
mov
outsb
mov
loopne
push
dec
out
popa
and
jo
aad
mov
lahf
mov
mov
cmp
ret
push
jmp
or
adc
cmpsb
fadd
push
lret
inc
daa
jno
mov
mov
sahf
imul
scas
lods
xchg
insl
xchg
clc
dec
pop
or
cmp
pop
hlt
mov
sbb
xor
push
dec
push
xor
mov
pop
mov
mov
adc
dec
xchg
test
mov
inc
jo
cwtl
repz
xchg
daa
jge
mull
xor
jns
mov
mov
shr
into
push
xor
xchg
jl
mov
ret
iret
pop
sbb
incl
push
stos
outsb
jno
sbb
les
inc
adc
mov
inc
jp
or
push
mov
paddd
dec
mov
jmp
cmpsb
mov
add
ret
testb
add
fdiv
test
xor
js
push
loop
jo
fsubs
mov
jb,pt
mov
xor
jns
mov
jb
or
loope
iret
inc
dec
xchg
stos
dec
popa
mov
fs
mov
sbbb
sbb
out
jo
inc
dec
dec
rcrl
ret
daa
and
fs
outsb
add
shlb
push
mov
movsl
push
test
mov
xchg
pop
or
nop
xor
leave
outsl
mov
aaa
or
ljmp
xor
mov
in
rcll
data16
push
add
std
adc
sbb
lock
daa
jmp
push
cmp
mov
stc
outsl
shll
adc
sti
or
dec
lods
inc
shlb
and
cltd
addr16
mov
insb
mov
add
leave
cltd
es
mov
inc
mov
cmc
call
testb
ret
imul
ror
push
pushf
int3
mov
or
les
call
mov
sbb
pop
and
rorb
rsm
cmp
lahf
popf
in
sbb
sub
dec
inc
daa
sub
loopne
or
push
push
xor
repz
divl
movsb
pop
lds
out
cmpsb
jo
ret
xor
test
dec
popa
cmp
cmc
jmp
out
jo
mov
xor
add
and
mov
jne
cs
je
lods
cmp
dec
mov
in
imul
pop
lret
repz
sub
mov
test
movl
lods
mov
jg
cld
mov
clc
xor
andl
xor
pop
jns
or
pop
insb
fcoml
cmpsb
adc
sub
loope
add
add
stos
rorb
shr
test
into
out
rclb
shrl
daa
iret
mov
mov
and
add
dec
push
cmp
xor
out
out
or
sbb
je
imul
pop
mov
idiv
aad
mov
add
xchg
or
cmpsl
add
mov
xchg
xor
mov
xchg
xchg
jl
sub
inc
mov
aam
pop
frstor
dec
fdivrs
in
dec
negb
pop
add
call
cmp
cmp
scas
xchg
sbb
lods
call
pushf
cmpb
call
sahf
fiaddl
mov
push
mov
ret
movsl
xchg
pop
rep
lods
sub
inc
mov
and
call
pop
cmc
bound
test
adc
fisttpl
push
xchg
es
outsl
cltd
jg
cwtl
mov
jecxz
push
mov
dec
loopne
popa
leave
or
rclb
addr16
call
sbb
inc
jnp
cli
mov
mov
aam
cld
jge
out
dec
mov
outsb
adc
jg
stos
and
out
pop
js
insb
jnp
push
mov
cmp
stc
mov
out
stos
xchg
sti
scas
push
das
sub
pop
fstps
pop
cmp
lods
dec
mov
call
popf
fldcw
xchg
add
push
rorl
sub
and
sub
and
cmc
cmc
out
ja
lea
jae
je
inc
adc
cmp
jp
fsubs
push
mov
lcall
mov
mov
or
into
lea
pmullw
xchg
add
or
ja
sub
mov
lods
add
lret
inc
or
shll
mov
inc
test
add
xchg
rcr
mov
sbb
jae
sbb
cmp
add
and
cmp
ds
je
sub
dec
insl
cmp
mov
push
pop
push
or
in
xchg
hlt
lds
aad
dec
inc
sbb
movsb
das
outsb
pop
lret
cmp
mov
jecxz
daa
mov
pop
in
icebp
mov
add
jae
and
or
xchg
mov
xor
jmp
jno
test
ret
mov
jle
and
xor
add
stc
pop
ss
push
aas
adc
dec
fwait
aam
sbb
push
mov
xchg
stos
inc
jmp
adc
pcmpgtw
jecxz
scas
gs
int
rol
sub
addb
ja
xor
and
push
inc
sahf
dec
popa
jbe
daa
pusha
or
lahf
mov
test
push
lcall
jo
out
xchg
testl
subl
or
add
push
icebp
push
pusha
out
xchg
shlb
push
xor
lret
fdivl
repz
jge
cvttps2pi
jle
loop
cmp
test
mov
gs
lahf
sbb
stos
or
push
sub
in
ss
iret
loop
stos
icebp
push
call
arpl
mov
sbb
mov
in
int3
mov
into
fwait
lcall
pushf
outsb
add
ljmp
lds
leave
pop
push
stos
pop
cmp
loope
das
ror
pushl
and
mov
mov
cmp
xchg
sub
xchg
fisubs
dec
aam
jae
jge
ljmp
sbb
hlt
pop
mov
push
cmp
sub
in
test
pusha
xchg
aad
cmpsl
pusha
sbb
sbb
pop
jp,pn
loop
xor
sub
rcll
sti
and
mov
repz
mov
xlat
pushf
adc
mov
cli
int
add
push
mov
jg
mov
mov
jl
fisubl
loop
enter
addr16
inc
jae
mov
xor
pop
jle
aad
dec
loope
inc
fstpl
mov
jle
xchg
loope
jp
sub
into
fsubl
mov
xchg
ljmp
pop
fldt
sub
jmp
mov
xchg
hlt
aad
push
sarl
scas
rclb
dec
jo
cmp
movsl
outsb
shll
inc
add
inc
ss
mov
insb
jecxz
je
sahf
fdivrl
push
cwtl
jge
jge
or
jne
ja
inc
out
pop
lock
test
push
dec
es
movsl
sub
cmc
fs
scas
incb
fsubrs
mov
loop
sbb
fsts
pushf
push
dec
lret
cwtl
dec
mov
push
push
jnp
add
imul
and
or
rcr
push
xor
fnstenv
leave
dec
ret
aad
adc
inc
xchg
adc
adc
mov
addb
xor
or
and
mov
stc
mov
lods
cs
orb
and
or
push
andb
cmc
sbb
sub
push
mov
fisubl
gs
dec
or
mov
imul
xor
or
inc
cld
and
js
test
inc
push
jmp
add
lret
int3
add
pop
int3
sahf
test
mov
fs
add
mov
push
mov
rep
iret
test
inc
insb
hlt
int
lcall
sub
out
inc
pop
lods
stc
sub
mov
push
cmp
les
js
hlt
test
ds
dec
cmpsb
cltd
adc
dec
sub
cmp
jbe
mov
mov
sub
cld
mov
sbb
fistl
loope
pop
movsb
shrl
shlb
cmpsb
loope
mov
ret
pushl
mov
ss
mov
ja
mov
sbbb
xchg
push
sub
xor
leave
pop
push
aaa
adc
dec
xor
inc
arpl
ret
add
push
add
nop
push
jecxz
xchg
mov
or
sub
clc
mov
xchg
mov
xor
addl
sbb
mov
orb
std
adc
aas
add
mov
cld
cmpsl
lret
sahf
and
push
or
xor
aas
sub
or
cmp
jnp
sbb
add
adc
inc
into
and
imul
sbb
jae
lds
sbb
push
sbb
rorb
dec
add
lea
ja
sbb
and
ja
cmp
es
fcoml
int3
mov
rcrl
xchg
daa
or
iret
aam
fsubl
cmpsl
mov
push
fstpt
stos
mov
mov
or
loop
adc
lock
aam
iret
jae
mov
add
pop
push
insb
mov
icebp
aas
test
push
xchg
sub
xchg
push
or
pushf
or
add
out
lret
xchg
add
cld
mov
xchg
cld
enter
icebp
jns
cmp
cmp
js
xor
js
imul
mov
cmovbe
pop
xchg
lds
outsb
scas
adc
xchg
data16
fildll
add
popf
dec
adc
test
fs
push
adc
addl
mov
cltd
pop
inc
lahf
test
cmp
popf
out
cs
mov
mov
push
loopne
daa
pop
ret
pusha
mov
inc
push
out
xor
in
cmpb
aam
insl
inc
dec
push
mov
mov
adc
call
mov
sub
and
add
test
mov
aaa
into
arpl
and
insb
mov
mov
ja
fs
repnz
cmp
xchg
sub
inc
loopne,pn
xorb
push
out
or
out
es
push
dec
lret
cmp
push
xchg
test
inc
icebp
arpl
sbb
adc
loope
xchg
fdivrs
inc
mov
js
and
fisubrs
cmp
fmuls
cmp
clc
outsb
xor
imull
les
sarb
cmp
push
std
mov
dec
cld
inc
mov
sbb
xlat
aam
jecxz
mov
cld
jne
fisttpl
sbb
jb
imul
test
imul
das
or
or
out
and
popa
xchg
movsb
stc
pop
cli
push
loopne
pop
fimuls
cmp
testb
mov
sub
push
imul
ljmp
lret
std
adc
jmp
pop
xchg
idiv
add
dec
iret
mov
xchg
aaa
repnz
bound
jle
cmp
test
outsb
in
or
add
adc
iret
sbb
dec
sub
xchg
lock
dec
mov
lock
out
fstps
fdivrl
out
mov
inc
push
dec
call
lcall
and
inc
xchg
sbb
mov
adc
pop
and
mov
jb
sbb
test
loopne
or
test
push
or
iret
inc
adc
movsb
popa
xor
clc
pop
ja
jns
call
or
popf
sbb
or
mov
inc
cmpsb
or
mov
jg
sbb
or
pop
icebp
mov
sar
inc
notb
cmpsl
jge
pop
rorb
cmp
sbb
stc
repnz
inc
jle
lahf
sarl
cwtl
sbb
inc
xor
addr16
inc
ret
mov
or
or
out
mov
cmpsl
mov
pop
ds
fnstcw
lret
pop
movsl
mov
insl
sub
jno
push
mov
mov
cs
aad
fs
scas
mov
repnz
push
nop
sarl
dec
pop
jns
clc
mov
pop
fdivs
push
div
sub
push
xchg
pop
sub
jae
jae
lret
jnp
cmpsb
mov
lods
das
shll
xor
add
jne
push
pusha
and
dec
push
adc
cwtl
shlb
cmpsl
ret
dec
popa
xchg
je
cmc
and
add
pop
test
sub
lahf
lds
mov
adc
imul
or
dec
jne
or
int3
push
ja
xchg
sbb
lods
rol
push
iret
push
jns
ss
out
in
out
mov
lock
lods
enter
add
fcmovnu
test
pop
or
nop
dec
dec
jle
lea
aas
mov
loop
adc
mov
rolb
nop
fsubrp
out
enter
adc
out
outsl
adc
mov
mov
cmpl
inc
mov
add
inc
cmp
dec
lds
les
stos
clc
adc
imul
int3
sbb
clc
jne
and
dec
inc
es
rclb
jecxz
cmp
out
xor
or
xorb
adc
arpl
pushf
stos
hlt
xchg
push
xchg
arpl
lahf
push
mov
pop
dec
mov
jb
sbb
xchg
lret
mov
xchg
adc
adc
fsubrl
sbb
add
dec
inc
rcll
inc
cmp
pop
jb
scas
in
scas
mov
popf
sub
mov
pop
lret
mov
pop
rorl
xor
out
jmp
xchg
xor
scas
xor
sbb
dec
pop
xor
hlt
xchg
stos
sbb
lock
leave
dec
test
mov
shlb
test
negb
test
testb
sub
inc
inc
psubd
fs
mov
adc
jae
xor
xor
cmp
mov
mov
in
push
inc
mov
inc
cmp
stc
cld
std
sarl
sbb
bound
mov
loop
pop
adc
inc
and
fxch
or
aaa
and
dec
jo
es
push
dec
icebp
cltd
enter
int
xchg
cld
adc
out
ret
mov
inc
xor
repnz
and
cmp
in
outsl
hlt
es
enter
lods
jae
out
push
adc
addr16
dec
xchg
adcb
addr16
xlat
mov
scas
pop
jecxz
jns
sarl
cmp
inc
fadds
or
dec
jle
iret
das
bound
rcrl
jecxz
push
dec
inc
inc
push
lcall
pop
rolb
mov
mov
mov
add
mov
or
mov
xor
and
inc
outsl
stos
xchg
mov
xchg
cmp
leave
xchg
pusha
push
ret
test
xor
mov
nop
xor
mov
pop
fwait
enter
in
xorb
dec
popa
test
dec
movsb
fbld
std
xchg
int
cld
lea
mov
add
adc
pop
add
out
xor
cmpsl
pop
push
inc
fisubrl
adc
data16
cmp
sbb
mov
jo
xchg
mov
in
daa
cmpsl
outsb
fimuls
mov
call
pop
pop
dec
push
ret
lret
xor
lcall
jb
cmp
or
inc
dec
pushf
shll
and
sub
mov
shlb
pop
mov
bound
mov
cli
insl
mov
mov
sub
js
or
mov
jge
out
pop
out
icebp
jp
jp
les
daa
jmp
cmpsb
mov
aam
andl
jns
outsl
pop
and
add
cmp
dec
cwtl
out
nop
outsl
or
mov
adc
inc
cmp
sbb
jg
sar
push
aaa
bound
stos
add
fldcw
gs
lret
pusha
mov
xchg
dec
repz
loope
call
ret
push
or
mov
gs
das
lea
mov
out
add
lahf
mov
data16
and
pop
neg
push
add
sahf
fwait
jp
add
in
fwait
mov
lret
xchg
aad
aad
fisubs
lcall
mov
and
add
arpl
xchg
scas
add
xor
xor
adc
inc
pop
push
cmpsl
xlat
xchg
sbb
pop
sub
mov
fimuls
lret
mov
daa
xor
hlt
dec
lret
or
gs
insb
push
cmp
push
clc
popa
lret
xchg
insl
mov
es
fbld
ds
ja
adc
fldl
cmpsl
dec
jnp
leave
fstps
out
add
jo
in
xchg
int3
mov
les
push
fsubl
jle
cmp
adc
int3
and
iret
mov
sbb
pop
in
cmp
xchg
clc
dec
out
nop
xchg
mov
dec
jbe
scas
cwtl
scas
adcb
sbb
jle
xchg
sbb
lcall
mov
mov
imulb
mov
jmp
je
sub
mov
adc
clc
faddl
sarl
lahf
push
out
ret
rcrb
aad
insl
add
rcll
nop
and
or
xacquire
outsl
inc
or
pop
clc
xchg
xchg
lret
inc
cltd
mov
sbb
sarb
mov
sub
lods
xor
loope
jb
incl
ja
lcall
dec
dec
xchg
das
mov
inc
adc
sub
xchg
or
push
jno
lods
dec
and
scas
and
out
sub
push
xchg
bound
iret
mov
pop
imul
pop
notb
pop
mov
jb
push
xchg
dec
jle
push
and
add
sub
push
xchg
stos
pop
pop
into
push
jmp
into
fwait
inc
inc
fnstcw
add
popa
add
jp
dec
cwtl
es
insb
aas
out
or
je
sarl
arpl
push
mov
loopne
stc
mov
cwtl
popa
push
jne
sbb
stos
push
xchg
mov
sub
add
inc
and
inc
enter
cli
cmpl
inc
test
xor
mov
stc
sub
pop
sbbb
cli
xor
sub
fucomp
push
js
sti
dec
fwait
cwtl
addr16
jnp
imul
sub
cmp
xchg
mov
addb
push
inc
add
jnp
xchg
lret
jns
jb
cwtl
arpl
inc
call
inc
sub
frstor
pop
mov
cld
insl
inc
cmpsl
idiv
shlb
data16
cwtl
addr16
stos
ds
movsl
scas
xor
sahf
push
call
cmc
lods
push
lods
dec
je
jb
test
lret
daa
insl
mov
popa
test
push
xor
fwait
push
fmuls
cmp
add
fs
inc
hlt
insb
clc
add
push
sbb
lock
mov
adc
ja
aad
mov
notl
pushl
popa
leave
adc
xor
jo
mov
lret
dec
xor
pop
or
dec
jecxz
cmp
aad
and
sbb
and
jmp
xor
inc
mull
jle
jno
in
mov
lret
fidivl
mov
push
lock
les
mov
xchg
enter
inc
pop
push
sbb
fwait
add
popf
inc
sar
mov
push
cmp
ret
lock
and
add
popa
dec
sbb
push
cmp
cmp
xor
add
ja
in
lods
mov
test
jbe
cmpsb
movsl
pushl
rolb
jb
daa
jnp
mov
mov
inc
test
mov
jg
jge
adc
mov
gs
js
popa
cld
clc
adc
jge
inc
inc
movb
adcl
xchg
jl
fcmovne
loop
ret
sbb
das
testl
pop
fsubs
mov
sub
ret
lahf
sub
clc
inc
adc
repz
sbb
stos
xchg
pop
int3
inc
fwait
pop
adc
push
popf
push
lret
jae
shrl
ret
mov
and
jb
cmp
fisubrl
repz
mov
mov
dec
aam
into
sub
les
xchg
mov
xor
dec
and
push
ljmp
cmpb
clc
add
jbe
inc
pop
pop
scas
pushl
pop
clc
push
clc
sbb
xchg
popa
push
inc
movsb
sbb
fstpl
inc
push
je
jnp
mov
mov
fst
mov
lret
stos
fisttpll
mov
test
xlat
sbb
test
sbb
popf
cli
rol
decl
call
dec
mov
lcall
xchg
push
mov
xchg
dec
or
sti
xchg
fmul
push
imul
scas
inc
cmc
ret
std
adc
xor
ljmp
scas
pop
sub
push
sbb
fadd
push
fwait
out
fnstenv
pop
pop
xchg
add
inc
cmp
or
dec
subb
xor
ss
adc
inc
cld
jo
sbb
shrb
dec
stos
pop
jnp
sbb
mov
arpl
mov
lea
mov
out
inc
stc
jp
nop
pop
ja
sarb
and
jmp
fisubrl
cli
and
ja
mov
cltd
mov
adc
add
arpl
data16
jmp
frstor
xchg
fldenv
lret
inc
and
fldcw
push
xor
dec
mov
loope
adc
bound
mov
loop
rcrl
cwtl
cmp
inc
gs
mov
or
lcall
insl
fidivs
scas
xor
popf
jmp
gs
pushf
aaa
imul
cmp
cmp
sar
jo
xlat
pop
mov
jecxz
xor
dec
sbb
mov
and
lock
jmp
testl
xor
mov
jo
movsb
or
push
stos
mov
jmp
and
test
dec
dec
adc
dec
rorb
adc
mov
ret
stos
ds
lods
aaa
and
scas
cmp
clc
test
test
insl
sub
mov
push
in
adc
leave
lods
sbb
add
and
adc
aaa
jo
cmp
pop
dec
adc
xchg
fimuls
pop
mov
dec
pop
cld
adc
movb
pop
and
mov
push
je
mov
push
xchg
ret
pushl
ljmp
lret
inc
rol
out
fstpt
xorl
add
notl
outsl
pop
and
pop
insl
mov
testl
int
xchg
subl
push
pop
jmp
inc
aas
mov
dec
les
xor
add
mov
cld
jmp
sub
ret
push
pusha
int3
cmp
frstor
cld
and
lret
shlb
jo
ret
scas
andl
mov
data16
sub
inc
repnz
inc
cmp
xchg
jnp
mov
xor
inc
xchg
fstl
arpl
jle
cmp
jb
pushf
into
cmpl
pop
add
cld
lahf
jg
je
repnz
pshufw
add
aad
leave
mov
mov
push
and
pop
daa
push
lcall
sub
movsl
inc
mov
jne
aam
stc
lea
imulb
aaa
add
and
mov
mov
into
imul
mov
cmp
xor
jecxz
stos
and
jl
les
add
xor
cmc
out
lahf
mov
jbe
mov
push
clc
call
dec
orl
std
fwait
daa
xor
jecxz
jno
repz
mov
ja
sbb
push
adc
jae
push
mov
outsl
cli
jl
out
icebp
add
cwtl
loopne
lcall
or
jb
mov
or
or
jae
push
fisttps
movsl
cltd
push
addr16
das
dec
test
sbb
pop
imul
or
test
jbe
imul
jecxz
and
cltd
flds
dec
and
lahf
push
cld
adc
pop
xlat
mov
or
mov
in
xor
sbb
pusha
movsb
into
mov
addr16
jl
rorl
add
push
sbb
stos
jbe
fsubl
xchg
xor
outsb
fsubl
push
imul
lds
bound
and
push
xchg
rcrb
iret
loope
cmpsl
or
add
cmp
sub
pop
add
lea
push
arpl
data16
pop
mov
lahf
lods
stos
aaa
sbb
mov
mov
test
add
sbb
dec
insl
mov
rclb
mov
pop
xor
push
jle
mov
rorl
sub
jb
jb
repz
or
jmp
mov
out
mov
jp
out
psubusb
divl
adc
js
jmp
jmp
dec
and
pop
and
jns
inc
leave
fistpll
lret
jmp
cmc
xchg
inc
sub
daa
mov
repnz
and
call
fidivrl
mov
add
bound
lcall
es
repz
mov
dec
addr16
out
or
sbb
mov
sub
mov
dec
lock
push
mov
jnp
hlt
insb
sbb
mov
mov
sarb
xchg
inc
stc
test
sbb
mov
out
xchg
xchg
mov
setge
fdivl
sub
or
mov
cmp
fwait
pop
add
movsb
lods
ret
jb
dec
fcmove
cmpb
test
inc
leave
dec
fcomps
inc
mov
jmp
sub
lcall
iret
lahf
lods
push
sar
mov
cli
cmpsl
std
add
std
mov
aam
mov
lods
jo
pop
test
mov
mov
mov
jb
in
in
aas
jae
push
xor
add
lahf
xor
push
jmp
test
cmp
jae
std
add
data16
ds
push
movsl
xchg
mov
fnstcw
push
lds
lods
sub
xchg
pusha
in
sub
mov
push
xchg
jle
jge
lock
or
mov
cmp
les
dec
xchg
dec
notl
jmp
rolb
sub
xchg
push
jecxz
pushl
leave
dec
push
and
in
dec
pusha
lods
jo
mov
xlat
fmuls
mov
leave
sbb
inc
stos
sbbl
into
push
adc
ret
mov
mov
loope
mov
cmpl
mov
adc
sarl
dec
or
xchg
outsl
push
and
test
pop
xor
into
cs
mov
ljmp
insl
repz
loop
sub
sub
jmp
mov
lea
nop
cmp
mov
sbb
push
dec
andl
mov
push
and
das
enter
andl
push
es
andl
inc
js
pop
pop
rolb
test
clc
xor
data16
pusha
sarl
jbe
jno
adc
repz
jmp
das
psllw
mov
mov
sbb
lods
inc
jle
out
insl
jge
cmp
sub
pushf
jmp
mov
cmp
push
adc
adc
add
sub
xlat
pop
mov
mov
dec
icebp
arpl
mov
aaa
in
lret
orl
push
js
push
mov
das
movsb
cmpsb
mov
dec
push
push
jae
in
adc
bound
pop
or
shll
sub
push
xor
mov
adc
in
mov
xor
jmp
rcrl
add
mov
out
clc
decl
or
mov
insl
dec
inc
pop
les
xor
push
dec
cs
fidivrl
out
insl
jmp
sarb
cmp
sar
addb
sub
insl
outsl
and
orb
stos
into
call
mov
pusha
lcall
jmp
aas
jmp
test
mov
mov
ds
je
outsb
push
mov
mov
mov
movsb
out
xor
movsb
shrb
out
or
xchg
mov
insb
ret
test
push
cmp
pop
xor
add
out
inc
push
jmp
inc
pop
fldt
fwait
pop
push
inc
sbb
enter
sbb
hlt
test
fists
inc
xchg
ds
loopne
nop
mov
xchg
call
sub
xchg
sub
or
jge
fwait
popl
pop
pop
cmpsb
data16
mov
loopne
clc
xchg
mov
dec
mov
pop
inc
aas
ljmp
lahf
lahf
jmp
pop
sti
adc
mov
sbb
add
sub
sbb
cmp
jae
mov
push
inc
xor
repz
bound
sbb
or
aad
and
ja
iret
lock
test
sbb
push
inc
mov
clc
imul
jmp
adcl
add
jbe
push
pusha
pop
pop
mull
push
inc
jmp
daa
mov
dec
fmulp
inc
mov
inc
stc
pop
bound
inc
stos
inc
cmp
pop
mov
lods
add
fs
mov
test
inc
cmovns
sub
mov
fbstp
jo
mov
cwtl
jne
sbb
icebp
fstpl
pop
shlb
dec
lret
mov
pusha
fstpt
jp
dec
fwait
push
mov
arpl
fisttpll
mov
cs
test
aaa
stos
arpl
pop
in
test
sbb
and
loopne
roll
sar
jp
lods
movq
in
stc
sub
imul
icebp
mov
xor
dec
and
xchg
adc
and
incl
test
adc
cwtl
mov
or
add
lock
sub
loop
sub
dec
out
test
inc
popf
movsl
mov
adc
or
push
test
cmp
popf
negb
dec
out
and
stc
cltd
icebp
or
pop
stos
dec
mov
push
pushf
cmp
sub
out
movsb
test
add
adc
arpl
sub
ficoms
insb
cmc
mov
xor
dec
vxorpd
dec
lods
push
fildl
imul
fcomps
cmp
rolb
sbb
xchg
xor
push
adc
mov
sbb
insb
mov
iret
pop
sub
in
jo
idivb
xor
add
sub
adc
cmp
sti
inc
jp
pop
pop
testl
in
cld
jge
and
mov
xchg
sub
ljmp
push
jge
mov
cs
jns
shll
xchg
dec
fcoms
les
sub
rclb
sarl
adc
and
mov
mov
pop
fidivl
lea
xor
rclb
js
or
push
push
pop
ljmp
jno
outsl
add
outsb
push
cmpsb
mov
scas
imul
stc
jnp
idivb
xchg
or
loope
push
fists
shlb
ds
inc
xchg
rcrb
ljmp
call
jno
add
aam
mov
xorl
out
sar
ljmp
insb
dec
test
mov
rep
or
repz
push
pop
jae
sti
adc
in
inc
lret
cs
lods
push
jae
mov
xchg
push
icebp
gs
jns
cwtl
jg
cmp
add
mov
lret
movsl
in
inc
in
and
jo
push
sar
cmc
mov
cld
adc
cmpsb
lret
mov
sub
inc
or
inc
or
loop
mov
jmp
cmp
int
jle
or
out
push
fsts
xorl
out
inc
je
out
mov
sbb
stos
jle
lds
mov
in
mov
enter
cmp
fs
or
jb
push
repz
leave
cmpsb
aad
int
jge
xor
inc
mov
push
pop
add
sbb
xor
stos
adc
xchg
push
pop
cmpb
cwtl
mov
adc
jno
pop
out
sbb
dec
int3
out
pop
adc
fwait
imul
pop
mov
cwtl
jge
test
addr16
and
sbb
in
lods
int3
cli
test
sub
jnp
adc
push
dec
fsub
dec
sbb
cmc
movsl
push
pop
mov
movsb
outsl
sbb
and
add
mov
pop
aad
ret
add
popa
inc
mov
xlat
in
xor
pop
jb
cmp
fs
sbb
stos
mov
xor
stos
lret
sarb
xchg
fiaddl
mov
negb
or
rol
push
push
sub
hlt
movq
dec
add
jo
cmp
fisttps
andl
in
jle
xor
outsb
add
pop
stos
pop
mov
or
dec
xorl
dec
sbb
cmp
inc
inc
ljmp
and
loopne
scas
xchg
adcl
fwait
lods
and
sub
push
loopne
call
roll
or
adc
cmpsl
je
pop
mov
pop
clc
std
cmp
mov
shl
or
fisttps
pop
popf
mov
xor
xor
pop
adc
cmp
sbb
xor
xor
xchg
or
mov
sub
sub
push
adc
aad
mov
loop
xlat
in
adc
xchg
jbe
out
sbbb
add
in
and
xchg
xchg
pop
jae
sbb
sarb
sbb
or
or
das
pop
lret
int
xchg
lret
adc
sbbl
orb
sbb
leave
adc
sahf
xchg
and
adc
jo
push
xchg
or
dec
shlb
mov
mov
jnp
pop
lds
push
xorb
cmpsb
pop
push
popf
pop
jb
mov
jns
mov
aad
insl
popa
jae
and
ret
xchg
push
xor
mov
xlat
fstpl
xchg
das
cmpsb
mov
or
lods
jge
popa
jmp
jg
lret
inc
ja
pop
ret
add
dec
test
bnd
add
xorb
sbb
jg
cmp
iret
add
imul
insl
dec
pushl
or
imul
imul
push
sub
nop
test
adc
sub
xchg
mov
push
loopne
mov
in
das
imul
cli
dec
mov
push
rcll
cltd
cmp
and
test
cld
mov
mov
jbe
hlt
adc
jae
stos
clc
mov
lock
xchg
clc
and
hlt
sub
in
mull
push
jb
push
jns
mov
cltd
cwtl
test
das
sbbl
es
stc
mov
or
cmc
jb
sarl
stc
outsb
dec
cmp
bound
loope
in
enter
movsl
inc
insl
and
fisttpll
inc
les
sbb
dec
loope
xchg
or
dec
and
shll
sahf
bsf
subb
test
mov
mov
pop
cs
les
jmp
gs
test
push
fildl
mov
dec
jns
add
sub
popf
add
xor
test
repnz
mov
pushf
push
xor
push
clc
pop
push
stos
pop
mov
ret
xchg
mov
sti
push
clc
scas
adc
xor
sahf
lea
scas
add
stos
pop
out
ljmp
adc
mov
mov
jae
pop
loope
and
xchg
xor
js
cmpsl
mov
addb
add
ljmp
aaa
xor
daa
jmp
mov
ret
xor
inc
or
jae
xchg
and
fsubrs
or
or
cmpsl
cmp
sub
iret
arpl
mov
imul
fidivrs
cld
inc
mov
and
fs
add
ljmp
mov
jmp
jle
scas
ja
fsubrs
sub
push
ret
lret
movsb
push
in
daa
push
add
and
icebp
push
xchg
xchg
in
mov
mov
mov
daa
in
xchg
jl
sub
push
ret
or
jge
cmpsb
or
stos
mov
loop
pop
addr16
jns
dec
push
cmp
inc
mov
imul
lods
and
repz
and
outsb
cmp
lods
pop
lret
sbb
popl
or
jg
inc
das
xor
aaa
test
sub
ss
rcrl
pop
aam
mov
sbb
lods
loop
inc
ftst
inc
mov
or
addl
pushf
jp
push
lcall
sub
into
ja
mov
xlat
lahf
leave
push
bnd
loop
xor
ret
les
jge
bound
fisubs
cmc
adc
dec
or
xor
fcoms
inc
popf
xchg
add
add
shrb
mov
xchg
push
scas
scas
xor
out
in
add
xchg
out
adc
sahf
fdivrs
call
mov
xorb
negb
xchg
mov
sub
sarl
mov
dec
or
dec
fsub
stos
push
pop
mov
jge
xchg
sub
negl
pop
mov
xchg
loope
mov
mov
mov
mov
mov
aaa
lea
or
sbb
push
popa
cmp
mov
and
jg
adc
dec
popaw
popl
pop
sub
jae
pop
hlt
gs
jg
data16
lods
and
jns
mov
adc
cwtl
or
jg
mov
sahf
pop
push
inc
sbb
fstpl
repnz
push
ret
or
pop
push
add
jb
or
iret
rclb
jmp
shll
shlb
jg
push
les
ret
and
daa
inc
adc
lock
sbb
leave
push
stos
adc
cmp
rolb
es
aam
jo
ret
mov
test
mov
iret
rcrl
mov
insl
int
loopne
jne
xchg
arpl
mov
mov
inc
xor
jmp
or
movq
lock
xchg
stc
mov
mov
test
lods
or
aas
aam
cmp
outsl
xchg
in
mov
xchg
cmpsb
cltd
cmp
hlt
push
or
aam
test
sbb
addr16
or
cld
aam
into
out
rorb
or
add
dec
loope
jne
dec
lea
je
lods
add
pusha
adc
or
fxch
rol
pop
dec
sbb
inc
cmp
xor
je
and
lock
movsl
and
in
aam
push
push
and
bound
icebp
test
cmc
push
pop
xlat
jge
jmp
rorl
fmuls
jo
mov
adc
or
daa
loope
fildl
clc
fnstenv
lret
or
xchg
push
pop
fwait
jns
je
jmp
inc
add
test
dec
mov
xlat
add
or
sarl
push
cs
add
inc
and
shrl
xor
movsb
movaps
and
pop
lret
std
fsubl
out
rcrb
lds
mov
mov
clc
arpl
stc
arpl
sbb
jge
xor
das
into
jbe
dec
pop
fnstenv
inc
iret
cmpsb
or
andl
subl
mov
pop
xor
in
sbb
inc
jecxz
and
inc
mov
iret
xor
out
cmc
test
push
adc
xlat
dec
test
in
dec
shl
adc
jns
rcl
cwtl
fists
mov
mov
and
movsb
push
mov
repnz
hlt
popa
pop
movsl
lds
popf
call
int3
fisttpll
sub
xor
mov
bound
cwtl
clc
add
in
mov
imulb
sahf
sub
stos
fisubrs
push
xchg
pop
mov
push
cmp
jle
ljmp
cmp
mov
bound
sti
notb
aas
mov
adc
xor
cmp
cs
push
jmp
or
jbe
xor
push
fistpl
clc
sub
pop
lock
cmpb
arpl
movsb
push
fsubrs
lods
inc
xchg
mov
dec
das
and
pop
pop
mov
out
mov
push
lret
sbb
pusha
xlat
iret
les
xchg
push
sbb
adc
hlt
bound
xor
sub
out
fs
inc
rcll
jb
incl
addr16
out
sub
xchg
mov
movsl
dec
cld
push
daa
xchg
mov
lahf
int3
testl
aas
dec
sbb
in
xchg
push
sub
pop
mov
loopne
mov
jb
mov
mov
jb
jle
bnd
push
aas
xor
gs
rorb
xchg
js
pusha
jge
mov
lock
test
mov
orl
inc
popf
and
hlt
push
sbb
mov
mov
push
in
pop
jnp
rcll
push
out
aaa
mov
nopl
mov
rorl
dec
add
pusha
call
jl
push
xor
mov
ds
cli
cmp
data16
scas
fildll
push
push
fcompp
dec
dec
sub
sub
sub
xchg
scas
or
std
push
jmp
popf
out
cmpsl
xchg
shlb
fiadds
mov
loopne
mov
dec
mov
test
cmp
stc
xor
addr16
inc
mov
jb
mov
repz
inc
xor
rol
dec
add
mov
rcll
push
std
test
xchg
sub
lock
fldl
iret
inc
jle
cld
add
jge
sbb
xchg
rclb
mov
sahf
not
aas
and
or
cwtl
aad
and
mov
xchg
pusha
sti
xchg
adc
lea
dec
scas
adc
fistl
pop
popf
mov
add
and
dec
iret
push
cmp
aaa
pop
mov
hlt
xor
sub
jb
jno
mov
int3
mov
xchg
lret
xor
mov
adc
push
dec
push
shll
mov
mov
fidivl
cmp
jl
dec
pop
or
stc
pop
ficomps
sub
iret
nop
adc
out
lods
inc
mov
inc
inc
push
pop
and
out
cmpsb
loop
lds
add
nop
jle
shrl
loope
jnp,pn
gs
fistpll
sbb
mov
jmp
sbb
sub
fnstsw
xor
or
mov
sti
call
out
xchg
aam
sti
inc
lret
test
dec
push
aaa
mov
shl
negb
test
jmp
stos
in
xor
jmp
addl
xor
add
mov
pop
imul
in
xchg
rol
add
clc
call
lret
testl
movsl
jecxz
cmp
sbb
or
mov
mov
jl
fwait
add
andb
dec
mov
mov
int
cmp
cmp
aas
mov
sbbb
cld
arpl
and
insl
xlat
cmpsl
js
add
xchg
xor
fcoml
psrad
ljmp
lret
mov
sub
jbe
mov
lods
add
dec
cmp
arpl
cmpsl
aad
sahf
and
jle
rcr
pop
mov
push
mov
das
out
std
mov
in
jns
pop
rorb
mov
adc
mov
lcall
cmp
xchg
push
sbb
ret
ljmp
aaa
fs
push
stos
in
ja
add
mov
out
fwait
push
in
cs
data16
xlat
xchg
rorb
icebp
xor
or
sbb
aas
jge
mov
jmp
add
sbb
dec
add
shrl
adc
add
mov
and
ret
bound
movsl
add
loop
into
sub
fnstsw
loop
pop
xchg
jecxz
add
pop
push
adc
imul
push
inc
xor
inc
bound
inc
fucomp
js,pn
push
mov
outsb
pop
adc
hlt
xor
jecxz
je
test
cwtl
jmp
aaa
xor
or
es
mov
inc
ja
std
xor
cmp
xchg
gs
cmpl
sub
mov
sub
inc
movsl
rcrb
repz
pop
mov
lahf
in
dec
pop
add
mov
ss
addr16
mov
add
xchg
and
outsl
xor
cwtl
iret
inc
iret
xlat
js
mov
addb
fisubs
and
aaa
dec
jle
fsubr
enter
xchg
mov
testb
jnp
cli
mov
stos
fisttpl
sbb
push
lret
xchg
xor
lret
mov
inc
in
fildl
push
cmc
scas
in
dec
xor
mov
mov
bnd
dec
loopne
push
dec
mov
lds
stc
add
cmpsl
out
sti
sub
loopne
jns
int
rolb
sti
fwait
pop
ficompl
sti
loop
pop
lods
je
je
ret
lcall
stos
inc
push
cs
mov
lahf
push
je
xchg
test
add
dec
dec
fdivs
dec
and
shrl
pushf
add
adc
arpl
popl
sub
arpl
mov
adc
push
bound
int3
lcall
lock
daa
orb
and
int
or
dec
loope
into
dec
fisubl
leave
sbb
add
pop
dec
push
fisttps
out
dec
push
adc
out
aam
mov
pop
call
fistl
mov
pop
fwait
movsl
shrb
adc
pop
dec
lret
push
adc
leave
cs
outsb
lahf
in
and
pop
hlt
adc
aaa
inc
sahf
clc
filds
cld
insb
cmp
push
ss
cli
push
jb
stc
sahf
stos
add
mov
sbb
sub
stos
push
loope
aaa
popa
cmpsb
and
imul
adc
out
lods
mov
push
data16
int
adcl
mov
daa
pop
sbb
inc
mov
mov
adc
dec
mov
mov
mov
clc
pop
cmp
fs
jecxz
das
loope
cwtl
stos
ja
in
rorl
lret
mov
cmp
lret
mov
pop
xchg
xor
out
sbb
gs
gs
loop
mov
add
aaa
hlt
outsl
addr16
add
xor
popa
mov
add
lcall
movsb
adc
sbb
jmp
movsb
pop
mov
push
and
adc
jge
fidivs
add
and
aam
data16
cltd
lcall
pop
dec
add
push
pop
cld
xchg
loope
adc
jmp
lcall
jnp
ss
cmp
jle
push
lret
inc
fistpll
jle
xchg
inc
and
sbb
dec
xchg
push
scas
push
fcomps
test
jo
pop
mov
jne
push
inc
pop
lret
and
adc
dec
out
lahf
and
add
aas
jge
pop
hlt
mov
imul
movsb
xchg
and
mov
sbb
mov
or
loopne
incl
mov
arpl
adc
mov
xor
inc
jle
cmp
cmpsb
outsl
push
ss
in
enter
cmpsb
cltd
rcr
clc
inc
test
inc
dec
ficompl
das
gs
hlt
xor
and
and
mov
sub
cmc
int3
icebp
dec
stos
sub
test
jmp
out
popf
or
aam
or
sub
imul
nop
pushf
clc
pop
insl
hlt
pop
jno
sahf
pop
popa
or
mov
imul
mov
xchg
or
fisubs
adc
cmp
into
sbb
cltd
mov
shl
cli
cmp
push
test
push
icebp
mov
and
cmp
add
outsl
out
cmp
notl
movsl
aas
xor
push
mov
int3
inc
aad
adc
test
xor
sbb
jmp
mov
shl
test
xchg
sbb
ljmp
jo
mov
pop
sbb
sbb
pop
fidivrs
sbb
jp
jns
mov
or
fldl
cmpsb
aas
int3
push
xchg
and
mov
mov
xchg
fs
mov
sbb
repnz
mov
jns
and
pop
outsb
sbb
jl
jne
or
lcall
imul
inc
dec
dec
xchg
repnz
adc
xor
jge
iret
stos
sar
test
shrb
test
clc
or
xchg
mov
cmp
inc
xorb
add
dec
test
sub
sbb
cli
dec
stos
mov
mov
and
sti
xchg
addr16
scas
iret
dec
out
popf
cmpsb
jbe
add
or
daa
sub
mov
adc
loope
cmp
mov
lock
jae
divl
loopne
mov
inc
inc
mov
mov
add
mov
shl
fs
sbb
lcall
mov
aas
leave
dec
out
ds
mov
push
outsl
fisttps
vhsubps
mov
jecxz
xlat
dec
push
dec
test
sub
add
fldcw
pop
add
int3
push
fs
mov
and
mov
dec
shll
cwtl
sub
sti
jb
adc
int3
fistps
jl
mov
addr16
cltd
and
mov
in
les
sbb
add
adc
pop
mov
lcall
pushf
xchg
sti
leave
in
sbb
negb
gs
ret
outsl
inc
hlt
and
mov
mov
test
and
iret
push
adc
ja
cmp
in
mov
mov
mov
daa
fnstsw
call
pop
push
sub
and
rolb
adc
push
dec
stos
jecxz
call
lret
xchg
out
mov
xchg
or
inc
add
jg
jle
nop
xchg
pusha
int3
les
push
repnz
xor
xor
fildll
aad
or
mov
lods
out
add
mov
pop
das
sbb
test
push
xchg
add
std
mov
aaa
lock
jp
repz
mov
mov
cmp
pop
fwait
movsb
lahf
clc
jo
mov
call
jp
outsb
in
mov
push
rorb
es
sub
sti
cmp
mov
std
push
mov
jg
xchg
mov
pop
sub
icebp
lds
push
cmp
shrl
into
sbb
mov
int
testb
cmpb
cmp
fsts
popf
push
dec
cli
sub
or
jl
pop
lods
push
and
mov
pop
xchg
mov
fcmovbe
xor
arpl
leave
jmp
enter
add
loopne
out
fsubl
lea
daa
add
xor
mov
subl
aad
ficompl
arpl
push
fiadds
mov
loopne
adc
fldt
xchg
or
jle
inc
loope
xchg
cmp
jae
sbb
mov
iret
xchg
mov
cmc
gs
push
pop
sub
insb
mov
dec
push
push
and
push
mov
test
aad
in
mov
popa
inc
test
popa
mov
scas
jbe
outsb
mov
jne
sbb
test
in
jle
jecxz
pushf
lcall
fsubr
sub
ss
cmp
lock
imul
in
in
rcll
test
jmp
push
add
daa
mov
test
push
mov
inc
mov
pop
add
sar
mov
std
mov
dec
jmp
dec
jmp
pop
int3
and
sub
mov
cwtl
dec
fs
add
and
dec
aam
jl
mov
mov
pop
cmpsl
or
and
mov
arpl
mov
inc
fistps
pop
fucom
cmpsb
push
xchg
cmp
push
pop
enter
movsl
cmp
lods
or
jne
xor
inc
inc
jb
cmpsb
xor
sub
aaa
fwait
xchg
outsl
movsl
xlat
adc
xor
out
cmp
inc
arpl
call
push
loopne
enter
add
jle
in
mov
pop
and
test
fst
iret
out
sbb
pop
mov
repnz
sub
inc
ss
xor
aad
fidivrl
add
mov
jg
scas
pusha
xor
lock
add
in
pop
mov
add
daa
shll
xor
aam
or
insb
stos
xor
repz
jp
fnstcw
or
xor
push
or
shr
test
movsb
fwait
dec
test
adc
or
cmpl
xchg
inc
repnz
xor
sahf
aad
inc
movsb
lods
test
pop
push
dec
scas
xchg
int3
cmp
jnp
adc
or
test
mov
mov
nop
mov
xchg
fadds
and
add
shrb
xchg
adc
stos
push
push
jp
out
dec
dec
stos
stos
jae
repz
jl
adc
iret
in
cld
scas
aam
jecxz
outsl
mov
and
jne
ficomps
pop
lods
es
dec
repz
cmpsb
sbb
rolb
pop
sub
jmp
stos
jecxz
aaa
add
sub
xor
lahf
add
jg
jnp
or
movsb
pop
cmp
fnstsw
pop
fbstp
dec
cld
repz
xlat
das
jne
push
or
shll
test
in
shl
add
jno
fwait
adc
fwait
and
sub
add
jge
rorb
pop
jo
xor
jno
inc
filds
or
jle
and
shll
jge
inc
sahf
das
insl
inc
adc
xor
nop
push
sub
daa
std
int3
jg
dec
hlt
jle
cmp
cmp
sub
xchg
mov
push
push
xor
sub
mov
aas
inc
push
xor
mov
insl
add
icebp
imul
imul
ret
cwtl
lret
cmpsl
mov
popf
int3
aad
pop
cmp
into
js
xlat
push
dec
add
into
pop
pop
mov
in
fwait
sub
loop
cmp
clc
rcl
add
add
pop
inc
push
sbb
out
add
fistl
sahf
dec
adc
cmp
lods
leave
test
enter
loopne
jg
pop
pushl
lcall
loopne
aam
sub
xor
mov
je
pop
inc
fisttps
repnz
xor
mov
and
mov
pop
clc
outsb
ret
out
sbb
add
std
xchg
cmp
in
and
bound
hlt
xchg
xchg
inc
xor
pop
mov
in
fldenv
popf
bound
int3
pop
icebp
jecxz
xchg
push
clc
or
xchg
inc
ds
pop
cmp
scas
aas
xrstors
xchg
in
pop
sub
test
adc
in
cs
sahf
push
popf
sarl
or
loop
fs
imul
or
sbb
imul
std
mov
add
insb
outsl
xchg
mov
das
and
hlt
imul
mov
mov
pop
dec
inc
jnp
push
aam
idiv
mov
ret
xchg
icebp
pushf
stc
or
data16
pop
cmc
or
and
cli
pop
jae
xor
adc
jns
cmc
cmpsl
es
pushf
pusha
aas
test
push
mov
int
mov
jle
sub
dec
aam
and
xor
fwait
mov
jbe
data16
ret
loopne
je
xor
sbb
dec
add
inc
or
adc
cmpsb
faddl
stc
push
cwtl
mov
scas
xor
sbb
jmp
xchg
adc
pop
mov
clc
mov
aad
imul
sti
mov
inc
xchg
sarb
loope
or
lret
lret
mov
mov
jl
and
fildl
lea
imul
divl
imul
mov
movb
jbe
cmp
pushf
mov
push
stos
scas
ds
cmp
call
mov
mov
icebp
lods
je
sbb
out
cmp
rolb
push
adc
sbb
sbb
or
mov
jge
fistpll
iret
lahf
mov
cmc
aad
xor
out
adc
adc
call
fwait
adc
pushl
xor
mov
adc
pop
mov
inc
inc
mov
test
xchg
lcall
and
pop
mov
mov
pop
fldl
fadds
aam
add
out
cli
jmp
es
cli
shll
xchg
mov
je
outsl
cmp
ret
sub
adc
mov
mov
aaa
lods
rorl
xchg
mov
mov
in
pop
dec
xor
xor
jbe
movsb
aam
das
jbe
sbb
adc
xchg
xchg
sub
push
push
mov
pushf
jmp
aas
mov
add
aam
insl
out
cmp
sub
cwtl
mov
cmp
inc
mov
stos
dec
cmp
test
fisubl
ja
insl
cmc
xchg
inc
repnz
pop
add
fdivs
add
in
or
cs
add
pop
popf
xchg
shl
jns
insl
mov
aam
push
jne
aaa
mov
inc
and
mov
xor
mov
add
jns
xor
xor
or
add
push
sub
lret
mov
rcll
mov
cmp
sub
xor
add
cmp
adc
testb
divb
test
std
cmp
mov
jge
add
adc
fcmove
pop
sti
enter
push
in
icebp
xchg
cwtl
fisubl
pop
push
ja
mov
pusha
fsubs
push
xor
jns
nop
jne
addr16
enter
rorb
or
mov
out
clc
or
clc
adc
dec
andb
cmp
das
out
ds
in
sub
adc
pushf
mov
outsl
imul
inc
jb
push
push
scas
dec
sahf
cmpl
or
jae
cld
cmp
test
enter
sbb
and
movb
mov
pop
mov
inc
in
sub
cmp
sbb
bound
sbb
pop
cmp
push
addr16
ret
sbb
andb
repz
pop
je
subb
mov
jb
je
push
loop
sub
aaa
test
pop
imul
aaa
mov
push
xchg
sbb
inc
pushf
and
cmpl
adc
jo
mov
push
sbb
pop
add
push
push
lret
aas
es
mov
inc
mov
push
and
jbe
popa
xor
jecxz
fimuls
stc
and
jge
pop
mov
and
shll
hlt
cli
int3
cld
js
mov
cmp
push
fcmovu
mov
pushf
sbbb
loope
adc
inc
aaa
test
popl
sub
xchg
jl
pop
push
mov
lahf
adc
inc
in
mov
ret
push
mov
in
fldt
insl
and
xlat
cmp
mov
fs
cmp
pop
sbb
sbb
mov
lret
inc
sbb
or
xlat
rcl
and
movsl
outsl
mov
aam
xchg
xor
ds
cmp
cli
les
test
gs
mov
cli
mov
mov
xchg
or
in
or
push
xor
cmp
shl
movsl
in
xchg
mov
dec
cmp
es
test
imul
jl
xor
push
push
adc
sub
mov
jmp
adc
rep
dec
insl
mov
jle
mov
xor
mov
fs
mov
mov
and
bound
stos
jg
dec
mov
shll
jle
mov
in
xchg
popf
inc
test
pop
movhlps
decb
add
test
jno
fstps
inc
xchg
xor
mov
cmp
ror
fadds
mov
mov
daa
or
inc
jmp
roll
add
mov
inc
inc
icebp
in
test
adc
cmp
cmp
cmp
jne
or
in
mov
cmp
xchg
jg
cmp
mov
or
push
sbb
and
sub
sub
ficompl
push
subb
mov
dec
mov
rclb
sbb
testl
in
sub
daa
cmp
mov
sub
and
pop
sbb
outsl
pushf
pop
add
mov
stc
sub
imul
shrb
dec
jmp
or
flds
add
iret
add
mov
pop
and
xlat
dec
xchg
adc
cmp
gs
rorl
xor
mov
jecxz
dec
xchg
ret
push
and
test
cmp
imul
dec
jo
lahf
lds
ret
dec
add
mov
stos
mov
xchg
in
iret
xchg
popf
sbb
data16
jo
rorl
into
push
arpl
gs
lret
iret
cmp
nop
out
push
mov
jne
or
and
cmc
sub
sub
insl
aas
aad
inc
je
bound
mov
addr16
push
lods
mov
repnz
dec
lret
cmpsl
inc
push
aaa
cli
jno,pt
cmp
insl
xchg
addr16
in
enterw
loop
jbe
stc
repnz
jns
lods
test
jno
rclb
jno
adc
push
jo
dec
xchg
roll
push
out
lret
inc
cmc
adc
mov
pop
aam
popa
hlt
pushf
sub
inc
and
cmc
cmpsl
adcl
lret
add
out
xor
mov
cld
cmp
xor
das
sbb
jmp
jno
adcb
xchg
in
and
mov
lds
xchg
and
and
xchg
leave
mov
popa
cli
orl
jb
xchg
repnz
xlat
pop
mov
push
sbbb
aam
jp
inc
aad
cwtl
add
in
fcom
ret
mov
xchg
arpl
ds
negb
sbb
mov
or
jno
jb
rolb
divb
rcr
pushf
loopne
in
inc
stc
and
pop
cmc
or
pop
hlt
cli
fsts
inc
dec
popf
test
mov
aas
adc
sub
mov
arpl
xor
push
mov
mov
lahf
xchg
ror
mov
push
add
inc
aas
inc
sub
nop
add
add
xor
jge
mov
mov
bound
pop
aaa
gs
jle
into
and
andb
pop
out
or
mov
pusha
jp
push
xchg
cmp
pop
ja
in
mov
fstpt
push
and
mov
xchg
das
cwtl
fcmove
mov
ss
or
imul
adc
scas
mov
stos
sbb
xchg
imul
sbb
lret
xchg
add
cwtl
hlt
xlat
xlat
push
pop
sub
stos
jl
dec
push
cli
or
sbb
push
shl
xchg
mov
mov
sahf
js
mov
xchg
inc
mov
nop
mov
movsl
test
ret
leave
fstpl
shll
jecxz
andb
inc
lahf
jns
movsl
inc
sbb
add
mov
xor
gs
add
sub
sbb
aam
push
jmp
ljmp
std
adc
out
bndstx
jbe
and
popl
jne
jmp
xor
shrl
push
ret
stc
xchg
leave
dec
leave
in
xor
out
out
into
out
and
mov
movsb
cld
mov
sub
jmp
add
push
pop
ds
dec
in
stos
pop
jns
aaa
testl
sar
mov
stc
fcompl
pop
lods
xchg
jp
cs
xchg
fsubs
jecxz
loope
sub
test
sub
scas
out
xchg
adc
and
sub
push
imul
pushf
arpl
test
sbb
and
shrb
mov
cmpsl
test
push
mov
faddl
cmp
jmp
add
lahf
xor
lcall
jb
fistpl
aad
jle
cmp
pdep
movsb
or
adc
mov
or
jo
out
pop
sbb
push
faddl
mov
sahf
mov
idivb
dec
test
fmuls
aaa
add
and
cmp
mov
andl
pop
push
hlt
mov
cmpl
mov
lock
mov
sbb
fptan
or
imul
mov
cld
cmpsl
popf
ss
or
jae
push
cmpsl
cwtl
hlt
jmp
inc
lret
imul
push
negl
fisttpll
pop
daa
push
mov
xor
dec
insb
popf
insb
dec
xor
sbb
cmp
es
cmp
cmpsl
arpl
xor
fcomip
mov
lea
and
sbb
xlat
push
xor
add
fcomps
movb
mov
out
cltd
stos
fidivs
push
push
pop
aam
dec
imul
pop
push
call
decl
sbb
loopne
add
ficoms
movsb
add
inc
inc
std
push
out
pop
jg
push
mov
loope
sbb
pop
cmp
insl
jp
dec
pop
sbb
mov
inc
cmpl
movsb
dec
cwtl
pop
push
int3
stos
lock
sub
aas
and
mov
xlat
dec
loope
out
lock
mov
rcr
roll
inc
adc
shr
aas
subb
mov
mov
popa
call
and
push
lds
or
sub
mov
pop
outsl
sub
mov
lcall
add
addb
das
in
jns
cmp
or
xor
and
dec
dec
push
mov
rcrb
test
pop
mov
test
sar
lea
loop
in
mov
push
push
mov
mov
stos
sbb
popf
adc
jae
lds
sbb
outsl
sbb
mov
push
outsb
adc
adc
adc
push
cmp
lods
jae
jb
mov
cmp
sbb
outsl
loope
dec
cmpsb
dec
mov
sub
scas
jge
nop
scas
mov
into
mov
adc
mov
pop
ror
xor
aaa
out
repnz
lods
and
add
sbb
pop
jo
xor
out
xchg
lock
inc
iret
jle
mov
cld
push
cwtl
les
mov
mov
repnz
sbb
test
jae
js
inc
inc
icebp
push
pop
ret
mov
or
div
nop
xor
jp
inc
cs
filds
dec
xchg
xchg
cmp
mov
insl
sti
sub
jno
shlb
sti
and
lds
sbb
mov
aam
adc
mov
jmp
sub
mov
inc
xchg
gs
inc
outsb
xchg
int3
mov
mov
xchg
adcb
push
inc
in
std
fisubs
add
insb
cmpl
ds
incl
out
xor
clc
jle
cmc
xchg
push
inc
sub
ja
shll
jg
xchg
hlt
dec
add
cltd
fisttpll
push
adc
adc
popf
adc
es
inc
outsl
ds
flds
call
gs
scas
adc
add
xlat
fidivl
mov
ror
jg
mov
aaa
fbld
or
lock
lahf
cwtl
jecxz
fisubrl
mov
sahf
and
xor
xor
lcall
ja
inc
cmp
dec
das
leave
in
lds
fwait
shrb
pop
filds
push
sbb
dec
mov
pop
fidivs
in
sbb
jb
inc
lea
jb
pop
sub
imul
adc
adc
push
out
dec
sbb
adc
push
js
daa
jp
ja
jp
aas
jge
aaa
lahf
mov
inc
jp
cmc
or
adc
arpl
or
adc
cld
arpl
ret
adc
sub
and
add
loopne
jns
pop
inc
cmpsl
add
push
push
mov
jg
jecxz
sbb
into
ret
call
je
jmp
pop
inc
aam
dec
arpl
jmp
and
lahf
hlt
mov
cmp
les
pop
and
into
pop
xor
cmp
shrl
add
push
mov
lret
inc
lahf
push
loopne
ror
insb
ret
es
mov
les
or
or
dec
dec
cmpsb
and
xor
dec
mov
into
mov
cmp
je
sbb
and
mov
adc
out
sub
lcall
scas
rolb
pusha
mov
mov
pop
push
jmp
push
test
data16
mov
sbb
jb
inc
scas
sarb
cmp
clc
scas
cvtpd2ps
inc
jl,pt
push
inc
jge
dec
jge
fiadds
in
push
sbb
inc
lret
out
aaa
fiadds
into
addr16
ja
inc
sub
dec
xchg
rcl
setae
aam
mov
movsl
pop
dec
xor
inc
mov
xchg
cmp
mov
test
movsb
lcall
loopne
dec
mov
push
and
into
inc
or
xchg
push
sti
lret
loop
jae
pusha
pop
aas
cltd
jp
dec
inc
pop
fldl
xchg
rclb
pop
xchg
loop
xchg
movsb
mov
in
xlat
push
addl
adc
clc
xor
sub
enter
into
push
arpl
cmp
in
pushf
inc
mov
adc
arpl
cs
push
ja
push
xor
cmp
mov
xchg
lahf
in
cmpsl
orb
loopne
ret
incl
or
xorb
jp
dec
push
xchg
shrl
data16
pop
int
dec
adc
sbb
xchg
jns
arpl
ret
mov
and
inc
aam
sub
xchg
nop
into
cmp
cltd
icebp
jns
sub
ss
sub
pop
into
in
dec
call
mov
loop
daa
mov
mov
or
mov
push
xlat
loop
adc
out
popa
add
in
sbb
mov
ljmp
jb
leave
mov
hlt
aam
incl
sub
es
cmp
aad
ficomps
xor
rcll
movsb
stc
xchg
pop
fucomip
dec
lret
shl
cmpsb
aad
push
popf
cltd
mov
mov
xlat
andl
push
data16
daa
lock
pop
popa
add
jp
and
sub
push
pop
mov
sub
and
test
mov
or
popa
imul
call
mov
inc
push
jne
mov
rorl
mov
call
test
sub
outsb
fdivs
sbb
or
scas
jge
inc
iret
mov
jg
push
cmc
jae
sbb
mov
mov
out
fistpll
loop
inc
jno
adc
in
fstps
dec
adc
clc
or
mov
sub
pusha
aad
adc
call
fdivrl
xor
das
cwtl
int
mov
and
dec
fnsave
sbb
xlat
movsb
pop
push
push
int
loop
stos
out
mov
inc
in
cwtl
fildll
lock
in
pushf
fiaddl
add
call
fldl
mov
push
push
cwtl
and
dec
rolb
sti
cli
xor
fwait
xor
ds
jge
adc
das
xchg
push
mov
loope
pusha
cld
xlat
push
rorl
lock
sub
in
enter
jmp
xlat
jb
jb
lock
add
inc
sub
sub
cmp
stc
fisubrs
mov
pusha
add
fdivs
shlb
push
sub
leave
icebp
idiv
rorb
sbb
pop
push
loopne
mov
mov
les
mov
cmpsl
xchg
or
jp
mov
adc
cwtl
adc
rolb
mov
jns
push
lods
movsb
stos
jmp
push
ljmp
add
or
fmulp
and
xchg
mov
xchg
or
loope
inc
push
cwtl
lods
jb
pop
rcll
sub
add
mull
int3
inc
scas
sarl
rorl
mov
in
nop
jno
inc
scas
fldt
xchg
bound
test
mov
roll
jb
sub
aaa
cld
rcll
push
test
ss
fidivl
ss
push
outsl
out
decl
lods
clc
negl
and
push
add
movsl
or
ds
jns
test
or
or
sarl
adc
jecxz
push
movsb
scas
sub
pop
sub
mov
inc
pop
or
stc
repnz
ffree
movsl
lcall
out
cmp
test
or
daa
das
hlt
or
jae
push
repz
jno
cmp
arpl
mov
or
bound
xor
daa
sub
lret
pop
dec
pushf
mov
pop
xchg
movsl
leave
push
insb
lock
ja
pop
sub
sub
ret
push
inc
jne
std
int
int3
xor
push
pop
xchg
das
jmp
sbb
push
mov
mov
inc
push
js
sub
jb
nop
in
popa
jnp
inc
pmovmskb
loope
and
call
loopne
sub
xchg
ret
cwtl
cmpl
dec
push
std
out
jecxz
shrl
test
cmp
stos
popa
sub
mov
or
push
lods
loope
push
cmpsb
jns
mov
movl
sub
hlt
stc
fucomip
push
lahf
inc
xchg
add
popf
adc
mov
aaa
xor
pop
cld
push
stos
cmc
xchg
scas
lds
aad
mov
cmp
xchg
ror
jl
pop
or
out
pop
mov
jne
pop
add
insl
jno
adc
jnp
pop
add
push
testl
pop
cmp
cmp
or
psllw
call
or
ds
xchg
cwtl
rorb
iret
cwtl
jo
push
and
push
mov
je
pop
pop
pop
icebp
js
jg
mov
pop
popf
mov
lods
scas
pusha
mov
mov
inc
rolb
gs
nop
cwtl
sbb
mov
clc
mov
xor
inc
add
jecxz
leave
notb
push
ss
add
inc
pop
sub
test
adc
cmc
and
ficoms
fildl
cmp
sbb
gs
outsb
push
mov
xor
inc
sahf
mov
orb
adc
out
push
sub
icebp
ds
leave
gs
push
outsb
lret
xchg
mov
sub
or
pop
testb
ret
cli
mov
inc
xchg
cli
shll
fists
daa
icebp
pop
stc
es
lcall
xchg
mov
jle
out
addr16
push
int3
cld
mov
xor
mov
pop
xchg
movsl
jmp
xchg
adc
in
shlb
pop
xchg
push
test
shll
into
pop
lcall
sbb
nop
push
in
push
arpl
mov
mov
inc
jns
add
std
jo
ljmp
mov
mov
jbe
movhps
push
sub
push
and
mov
fsts
insl
or
and
lret
sbb
jge
or
push
push
or
ljmp
outsl
xchg
fninit
jp
in
xlat
loope
popf
cmp
adc
sbb
add
jb
addb
outsb
fnstsw
push
fistps
inc
fldl
insb
out
es
mov
push
das
insb
sbb
shlb
add
xor
mov
push
pop
sarb
cs
push
inc
mov
out
pop
mov
pusha
les
fucomp
mov
push
pop
add
push
adc
loopew
in
jmp
fiadds
leave
cmp
mov
xor
mov
lret
iret
stc
mov
addr16
pop
adc
fsubs
pop
popf
leave
xor
lods
xchg
lods
cmp
dec
ja
push
sub
pop
push
or
out
loopne
out
xchg
jo
rorb
aaa
cwtl
ja
dec
es
test
cmp
dec
mov
cmp
repz
push
nop
push
ret
ljmp
inc
incb
stos
push
fiadds
jns
dec
scas
push
push
add
cmpb
in
ds
pop
inc
clc
mov
aas
dec
pop
add
cmc
out
adc
js
fisubrl
mov
fwait
push
push
fisubs
ret
lods
push
and
and
andb
pop
jmp
inc
lods
mov
and
or
adc
rep
outsb
flds
jne
and
rorb
movsb
dec
and
mull
stc
out
ror
mov
inc
jne
shlb
mov
pop
nop
inc
and
or
or
repz
sbb
mov
lcall
cmp
sbb
inc
bound
fwait
mov
sbb
inc
mov
fcmovnbe
sbb
mov
push
add
dec
mov
lds
and
sbb
mov
decb
xchg
clc
sub
xchg
hlt
inc
jno
sbb
push
inc
mov
xchg
cmovne
sahf
lods
aas
cld
repz
sbb
repnz
fildl
push
cmp
andb
push
mov
add
mov
jo
xchg
mov
jo
fs
cmp
and
and
or
es
and
xchg
inc
test
jno
sub
and
addr16
in
test
sti
icebp
das
idiv
std
lret
sahf
mov
in
loopne
leave
and
daa
pop
inc
mov
stos
lret
inc
pop
xor
xchg
imul
mov
pusha
int3
cltd
test
sub
mul
out
dec
pop
fwait
mov
imul
adc
aas
data16
std
sub
out
mov
inc
js
test
xchg
das
add
mov
fcom
dec
push
pop
cld
test
adc
es
lcall
leave
xor
sarl
out
roll
sbb
pop
mov
sub
insb
andl
dec
xor
mov
fadds
popf
roll
and
in
cld
adc
lcall
leave
jge
into
test
repnz
fcomip
popa
pushf
enter
cltd
out
mov
xor
xrelease
mov
cmp
push
jmp
and
xor
push
ret
outsb
in
jp
push
mov
lret
call
xchg
pop
pop
shl
data16
jmp
mov
pop
add
cmpsb
push
jns
ljmp
dec
or
jne
icebp
movb
xor
add
xchg
inc
xchg
inc
imul
sbb
pop
into
jecxz
pushf
xchg
cmp
mov
push
daa
sub
pop
rcll
and
push
jp
ret
mov
dec
lahf
xor
addl
mov
ret
int
inc
dec
xchg
push
mov
shlb
or
mov
add
sub
insb
pop
mov
cmp
fidivs
pushf
std
jmp
fdiv
xor
lret
dec
sub
frstor
pop
mov
inc
sbb
stos
sbb
pop
shr
rcl
mov
icebp
push
pop
add
pop
sbb
cmovs
movsb
adc
imul
pop
or
sbb
jno
fisttps
mov
xchg
push
bound
fsub
pop
lret
add
divl
je
repz
jb
bound
lods
out
pop
cmc
and
std
push
pusha
jno
xchg
aas
add
sahf
push
dec
jne
xchg
adc
push
push
and
adc
xor
fwait
mov
inc
sub
arpl
aaa
add
ds
dec
outsb
pop
mov
lcall
lahf
mov
mov
xor
mov
call
push
push
pop
dec
push
out
mov
push
cmpsb
xchg
ljmp
rcll
push
lcall
sbb
jp
mov
std
add
inc
xchg
inc
add
jb
mov
imul
imul
sbb
ds
and
xor
add
mov
push
pop
cltd
das
mov
fs
aam
dec
lods
comiss
icebp
addr16
mov
add
xchg
mov
or
cmp
stos
jl
hlt
push
xchg
jle
or
outsl
adc
clc
dec
loop
mov
push
inc
push
scas
pop
aam
mov
push
ja
mov
popa
andl
add
and
jp
jge
jmp
jp
jg
xor
cmp
insb
push
push
gs
sbb
mov
xor
shlb
pop
dec
sbb
mov
sti
adc
push
dec
and
sub
rcl
add
aaa
cmp
mov
lods
dec
iret
cmpsb
xchg
sbb
cmp
popa
push
cmp
mov
icebp
push
lcall
cmpsb
scas
lds
and
cli
imul
dec
mov
add
leave
jle
push
movsl
stos
or
xor
cmpb
pop
jge
sub
add
sub
cmp
pop
iret
jae
jmp
icebp
add
fisubrl
jl
adc
or
sub
xor
test
adc
out
jecxz
sbb
jnp
enter
sti
pushf
rorb
popf
enter
fwait
xchg
mov
lods
lea
dec
inc
jno
fistps
movsl
inc
rorb
loope
int
and
testl
test
sbb
adc
cmpsb
in
sbb
mov
and
mov
scas
pushf
out
cmpsl
mov
aas
ficoml
sti
dec
out
stos
mov
psadbw
call
sahf
subl
xchg
mov
ficoms
lock
insb
ds
xchg
mov
stos
stos
aad
daa
insb
aas
fcomps
dec
push
ljmp
sbb
inc
adc
dec
xchg
test
jne
mov
mov
enter
mov
loope
movsb
imul
xchg
push
and
push
out
mov
add
cmp
mov
lret
inc
push
dec
cwtl
imul
lahf
pop
or
movsb
dec
test
cmpb
pop
pushl
adc
push
mov
xor
int3
pop
mov
push
cmp
pusha
sub
gs
loopne
test
mov
sub
dec
sbb
add
mov
scas
push
push
sbbb
xor
test
jg
daa
cwtl
mov
push
inc
add
push
push
mov
mov
pop
mov
xor
xor
and
push
push
shll
or
loopne
mov
movsl
sbb
or
ret
xchg
or
mov
inc
mov
jmp
shll
outsb
lret
sub
push
pop
mov
ljmp
insl
pop
push
inc
mov
dec
in
aas
jne
test
adc
mov
mov
imul
dec
add
pop
out
sbb
sub
loope
cltd
or
sbb
pop
addr16
mov
outsl
add
insl
push
sti
adc
loopne
addr16
inc
inc
lahf
dec
or
or
aam
mov
lock
dec
pop
fs
pop
cli
jmp
push
cmpsb
cmp
mov
fnsave
adc
mov
stc
jecxz
in
daa
push
mov
fistpl
add
mov
imul
inc
mov
js
fsub
lods
or
sub
loopne
jp
ds
mov
int
push
ds
cmpsb
sbb
inc
xchg
pop
mov
xor
add
sbb
adc
mov
jle
inc
mov
popa
cmpsl
movsb
jne
dec
mov
jge
or
cmp
repnz
ret
lds
pop
ret
jp
shl
insl
jmp
pop
scas
sub
ret
ss
das
dec
mov
in
je
mov
outsb
and
ss
inc
mov
and
mov
leave
xor
loopne
fs
cli
adc
sti
push
xor
mov
xor
lds
mov
mov
xchg
pushf
iret
xchg
dec
add
sbb
subb
aas
mov
inc
paddb
or
pop
adc
repnz
inc
mov
je
fnsave
jg
mov
mov
fimull
xchg
cwtl
sub
lea
add
mov
in
jp
shll
xchg
sbb
push
jb
sbb
sbb
lcall
js
cmp
jge
int
stc
aas
mov
push
daa
data16
ljmp
pop
outsl
cli
sbb
adc
data16
popf
inc
mov
out
cwtl
mov
icebp
lock
ficompl
cmp
push
pop
jp
lcall
inc
and
or
data16
dec
xlat
clc
xchg
push
jns
sti
lock
pusha
jecxz
add
adc
test
adc
call
movsl
mov
jne
pusha
clc
sbb
mov
imul
stos
leave
and
or
imul
mov
or
pop
vmptrld
insl
mov
and
and
dec
mov
or
xchg
lods
fcom
rcrl
push
fcoml
mov
push
mov
pop
outsl
adc
pop
push
xchg
popa
jb
aam
mov
dec
lods
mov
pop
sbb
mov
sbb
insb
or
mov
popa
xchg
scas
jecxz
mov
movsb
fisttpll
movl
fwait
mov
repnz
test
sbb
faddp
jl
ret
xchg
sub
adc
or
add
mov
lock
scas
inc
add
test
fsubrp
mov
mov
cmc
lds
push
cmp
jge
xchg
pop
popa
fbstp
mov
mov
inc
aam
lods
in
xchg
shlb
xor
cmp
fsubp
adcl
jo
dec
dec
shlb
mov
xchg
push
mov
xor
jmp
test
pushf
adc
cmpsl
loop
pushf
cmp
mov
pushf
dec
pop
mov
inc
sub
lock
lret
or
mov
adc
add
mov
mov
bound
insl
cmp
rsqrtps
mov
xchg
sbbl
push
mov
sub
std
mov
mov
sbb
cmp
out
mov
leave
subb
ret
aad
arpl
mov
adc
or
movsl
aas
add
mov
sub
clc
lret
stc
pop
std
scas
mov
aam
sbb
iret
xor
pushf
dec
inc
sub
js
sbb
cmpsl
int
fcomps
shrl
sbb
pop
mov
cmpsb
mov
cmp
js
fstpl
test
sbb
mov
adc
mov
lods
sub
inc
xchg
imul
add
xor
imul
add
ds
jge
roll
movb
mov
push
lods
les
das
push
enter
mov
mov
incl
or
xor
adc
inc
test
pushf
shll
movsb
xchg
test
xor
jge
leave
imul
ds
jae
rorl
pop
add
clc
pop
dec
stc
mov
bound
cmpsl
mov
push
mov
xchg
inc
inc
inc
jae
ds
popa
mov
lret
cmp
arpl
or
mov
pop
jbe
clc
fcomps
std
jne
inc
lock
in
mov
pop
mov
mov
cmp
adc
fxam
int
jg
loope
and
push
mov
mov
ror
inc
jo
mov
cmc
jmp
cmp
call
je
cmp
mov
loope
xor
cld
sbb
dec
xlat
lods
test
mov
loop
arpl
xor
into
jnp
sahf
movsl
aad
jne
push
test
inc
jnp
mov
ljmp
xlat
int
fwait
xor
pop
mov
xchg
add
shll
pop
stc
xchg
xchg
mov
addr16
pop
jl
mov
lds
mov
je
sbb
add
xor
inc
xchg
inc
mov
jl
xchg
fisttpll
adc
xchg
push
imul
stos
or
xchg
push
pushf
hlt
or
inc
fptan
stc
push
push
pop
push
cmp
push
aas
les
or
into
out
push
nop
mov
hlt
mov
not
imul
movsb
mov
cmc
pop
xor
jo
call
mov
pop
lcall
push
mov
js
imul
adc
pop
iret
aad
lcall
inc
inc
in
push
sbbb
clc
jne
sub
cmp
mov
xchg
pop
push
out
jge
mov
mov
inc
push
aaa
fnsave
cmpsl
les
sub
mov
adc
addl
daa
mov
push
in
mov
add
push
jno
jae
out
scas
lret
pop
sub
lret
dec
les
dec
pop
jl
xchg
adc
xor
hlt
xor
int
fs
and
sub
push
push
retw
xchg
maskmovq
hlt
cmp
mov
add
sbbb
lea
imul
inc
jge
dec
inc
mov
sub
shll
sbb
ret
sahf
iret
es
aas
lret
xor
mov
xor
sbbl
sbb
mov
sub
xor
inc
jmp
inc
jo
xor
and
fldenv
mov
scas
scas
jb
icebp
xor
movsb
push
dec
jge
jp
jno
cmp
jmp
jb
add
stc
les
fwait
push
js
out
ret
xchg
cmp
rolb
inc
aaa
cmpsl
int3
pop
xlat
jl
lock
inc
xchg
ret
xchg
add
xor
insl
repz
mov
jae
dec
iret
cmc
ret
roll
mov
inc
add
lret
or
hlt
mov
mov
adc
push
test
jno
mov
pop
sahf
cmp
outsl
cmp
add
mov
movsb
stc
add
or
lret
xor
imul
pop
pusha
test
cmpb
int
mov
jp
mov
sub
jmp
cmpsb
sbb
stc
adc
sub
pop
rorl
or
daa
sbb
sbb
fincstp
inc
scas
jo
int
dec
pop
sbb
dec
xchg
andl
testb
adc
or
inc
lret
sbb
icebp
jbe
mov
data16
enter
add
xchg
sub
adc
dec
shll
fldl
lods
mov
mov
adc
inc
xchg
out
gs
movsl
sub
imulb
mov
cwtl
das
aad
push
into
add
das
sub
lcall
mov
das
jnp
repz
mov
dec
rcrl
fidivrs
xor
xchg
sbb
flds
cmpsl
loop
out
lcall
icebp
lret
jecxz
mov
es
mov
cwtl
test
adc
add
call
loop
mov
cmp
sub
push
or
sar
pushf
cmpps
filds
pop
pop
and
leave
cmp
aaa
push
xor
insl
aas
aas
ror
popa
xchg
fcmovnu
push
pop
es
bound
jbe
mov
xchg
test
mov
repz
ljmp
xor
out
add
je
enter
mov
add
ja
inc
decb
nop
iret
aad
pop
xor
push
test
add
popf
sub
cltd
pop
fsubl
push
pop
dec
into
xchg
ret
pop
jbe
push
sub
loopne
insl
test
jg
cmc
cmp
or
inc
add
out
in
decl
imull
int
dec
mov
sbb
aas
enter
xchg
into
dec
and
jnp
bound
sub
sub
or
dec
subl
xchg
fadds
insb
cmp
mov
xchg
jp
sbb
mov
push
sti
mov
mov
in
lods
mov
xchg
xchg
hlt
sbb
cltd
popf
fsubl
xor
sub
inc
mov
add
cwtl
fldl
jnp
pop
cmp
push
sbb
xchg
mov
cmp
lahf
sti
fnstenv
test
push
dec
adc
ds
push
dec
aaa
mov
cs
xor
lret
test
data16
jns
and
xchg
add
xor
sbb
addr16
lret
fistpll
inc
int3
xor
fmuls
popa
fdivs
mov
repz
inc
sahf
daa
mov
push
js
inc
xchg
add
xchg
adc
gs
push
pusha
jp
jp
int
test
adc
jmp
ljmp
mov
jne
shll
sub
lods
popa
aas
dec
cltd
fs
into
lock
mov
jge
xchg
mov
es
test
lds
repz
push
push
cmp
mov
enter
mov
jne
jbe
lods
repnz
mov
cmp
adc
dec
cmpsb
pop
adc
inc
jg
jo
cmpsl
mov
insb
mov
jl
or
fsubs
sub
adc
or
sub
mov
sub
icebp
shr
inc
lods
xlat
jns
jmp
addr16
fldt
add
ds
sbb
inc
dec
repz
push
and
fwait
push
or
sbb
push
cs
rorl
arpl
sbb
repnz
mov
jmp
or
sarl
pop
add
loope
push
mov
call
push
add
dec
xchg
std
cli
int
and
pop
test
ljmp
cld
adc
mov
sbb
jmp
stos
adcb
dec
insb
pop
fs
jnp
inc
popf
dec
dec
aad
test
xchg
push
mov
jge
popa
jne
inc
or
and
jp
sti
sbb
ficoms
scas
push
and
es
add
ds
aaa
mov
mov
outsb
sbb
mov
in
out
adc
insl
or
push
out
add
sahf
sbb
bound
pop
insb
adc
sub
dec
sbb
push
fbld
xchg
outsl
incl
dec
jnp
sbb
daa
out
in
inc
xor
sti
mov
mov
dec
iret
cmp
mov
fimull
rcl
xchg
mov
xor
add
mov
mov
sub
push
lcall
cwtl
loopne
xchg
add
shlb
std
lcall
lcall
outsb
sbb
outsb
lea
pop
loope
stc
sub
mov
sbb
mov
inc
xor
push
mov
mov
xchg
cmp
mov
or
cmp
fwait
sbb
call
mov
and
jno
ret
insl
add
stos
bound
pop
pop
push
mov
push
bound
mov
and
popl
jle
testl
icebp
lds
sbb
mov
paddq
adc
sub
das
fwait
scas
popa
scas
mov
jb
jne
shrl
add
fdivl
ss
dec
mov
dec
hlt
dec
sbb
pop
ficompl
jl
lret
mov
lods
and
mov
pop
inc
rcrl
mov
xor
insb
xchg
inc
hlt
sbbl
mov
cmp
or
cmp
ljmp
push
dec
arpl
jo
mov
lods
jecxz
sbbl
pop
mov
in
fincstp
aam
push
jmp
lret
cld
out
ret
or
test
cmpsb
inc
int3
xor
add
out
xor
daa
int
inc
hlt
push
cmc
shlb
daa
fnsave
scas
push
int
idivb
cli
inc
shlb
mov
test
xlat
mov
xchg
adc
mov
cmpsl
jmp
mov
push
mov
mov
push
cltd
add
jae
cmp
add
clc
push
and
out
dec
test
jno
mov
shr
pusha
scas
xor
mov
pop
dec
hlt
mov
std
adc
cmp
adc
or
sbb
dec
scas
mov
cmp
testl
or
pop
ror
fidivl
in
idivl
mov
jle
mov
out
mov
cs
push
mulb
pop
js
sbb
mov
mov
add
sub
adc
push
sbb
sbb
pop
call
std
movsl
imul
and
cmpl
mov
and
pop
sub
fcomps
sub
or
cmpsb
enter
lahf
imul
in
in
jge
mov
inc
popf
gs
xor
jae
inc
push
hlt
lret
pop
loopne
or
sub
mov
or
leave
cmp
add
mov
cltd
mov
cwtl
adc
mov
add
or
or
repnz
pop
icebp
sbb
and
iret
mov
shlb
enter
dec
das
fldt
mov
rcr
out
cmp
push
test
mov
mov
aas
inc
mov
pop
movsb
adc
addb
fwait
cmpsb
dec
inc
mov
lea
out
adc
xchg
insb
aas
cmpsb
adc
scas
sbb
mov
pushf
jecxz
cs
insl
jo
dec
clc
in
out
leave
xchg
xchg
jecxz
sbb
mov
add
clc
xchg
xchg
push
std
jb
mov
xorb
std
add
xor
pop
adc
inc
xchg
out
loopne
or
jle
fstps
nop
mov
inc
and
pushf
fbstp
sbb
pop
mov
mov
in
ss
xchg
jne
pop
insb
xchg
pop
movsl
lea
out
pop
mov
pop
addr16
pop
arpl
mov
fldenv
xor
mov
lods
mov
lea
js
or
dec
sub
imul
push
and
cmp
testl
ret
cmp
cmp
lret
shll
xchg
xchg
cmpl
xchg
adc
jge
sub
lods
add
lock
xchg
jbe
inc
sbb
or
sbb
pop
aam
pop
pop
inc
add
pop
xor
mov
pop
inc
xor
mov
cmc
inc
leave
jae
push
ret
mov
movsb
xchg
imul
fcmove
or
cmp
mov
sbb
and
cmp
mov
cltd
popf
and
and
mov
ljmp
xor
test
stos
in
mov
jmp
rcll
cmpsl
pop
or
jmp
fnsave
loop
adc
dec
fnstenv
outsb
sub
jno
mov
stos
adc
add
sub
adc
out
test
fwait
sub
test
stos
xchg
rcrl
jno
xlat
sbbb
out
or
cmp
push
jb
jl
movsl
int3
int
mov
add
mov
sub
outsb
hlt
movsb
dec
lods
into
cmp
pop
push
decl
into
push
push
fsubl
pop
dec
jmp
fsubs
adc
fidivrs
and
mov
lock
jle
xlat
add
xor
popa
lret
lods
scas
adc
sbb
jp
mov
mov
inc
xchg
sahf
inc
adc
xlat
push
cmpsb
cmpl
mov
shl
inc
xchg
es
loop
add
push
push
dec
inc
inc
sbb
xor
dec
xor
pop
lcall
cli
repnz
sbb
xchg
stos
test
cmp
sub
dec
adc
pop
mov
orb
rolb
or
xchg
sbb
idivb
nop
xchg
push
stos
xlat
mov
fwait
sub
cmp
pop
sti
xchg
push
mov
xor
push
notrack
xchg
clc
fnsave
pop
xchg
pop
stos
sbb
pop
cmp
jne
push
sub
and
into
es
jmp
push
movsb
in
je
in
loop
lret
cli
divb
shll
and
jge
cmc
adc
scas
frstor
test
ds
movsl
enter
push
aas
add
mov
push
mov
and
scas
call
inc
sbb
nop
lods
jne
and
push
push
dec
daa
sub
shl
leave
inc
test
inc
mov
sti
aas
dec
cwtl
cmp
cli
mov
xchg
mov
pop
inc
cmpsb
xor
in
pop
xor
add
inc
jp
shrb
jns
xor
push
cmp
sub
sbb
add
les
out
sti
es
push
sub
pop
call
frstor
fbld
call
stos
int3
out
xor
cmpsb
pop
mov
lahf
loope
xor
fdivrl
ret
or
adc
mov
loope
cmp
jmp
adc
lds
lret
dec
sbb
notl
icebp
out
rcrb
icebp
sub
mov
sub
leave
jmp
mov
pop
jnp
inc
in
lret
inc
jb
cmp
sbb
scas
sbb
in
mov
notb
mov
sarl
lods
call
jge
pop
add
dec
sbb
mov
enter
loope
jbe
in
cltd
lods
xchg
mov
jnp
lret
clc
sbb
fildll
dec
fs
mov
dec
fwait
not
mov
mov
jne
jmp
icebp
dec
lcall
data16
cmp
mul
push
mov
cmc
cmc
loope
lods
or
sahf
popa
pop
and
cmp
fidivl
push
push
pop
lret
outsb
pop
push
fs
aas
sbb
or
adcb
and
jns
int
pop
xchg
fwait
adc
pop
mov
add
push
enter
and
outsb
test
hlt
push
cmp
mov
cmpsb
cmp
and
aad
enter
pop
rorb
mov
adc
pop
js
xor
imul
shll
call
loope
repz
pop
outsl
sti
cld
adcb
popf
sub
iret
mov
lock
add
push
pusha
lret
mov
ja
popa
sbb
mov
xchg
loope
dec
add
fidivs
sahf
loopne
loope
mov
int
xchg
and
arpl
shrb
sbb
pop
mov
or
int3
jbe
out
insl
fwait
pop
jnp
sub
jge
jnp
jge
jge
scas
sbb
jbe
xchg
dec
inc
fisttpll
scas
add
sbbl
pop
lock
in
jne
into
cmpsb
inc
pop
std
in
xchg
xor
adc
sub
fstpl
pop
pop
jae
rcr
xor
xor
stos
add
ret
inc
add
rclb
or
pushf
iret
ja
int3
pop
mov
lahf
data16
jmp
rclb
mov
dec
lods
out
cli
and
fiaddl
mov
push
call
maxps
hlt
loopne
popf
sbb
dec
jge
jns
aaa
ret
bound
jne
jle
jo
lea
stos
push
adc
push
jl
js
vpsadbw
ljmp
mov
xor
mov
ds
lret
lods
pop
or
cwtl
imul
clc
mov
and
shr
js
loopne
cmp
push
hlt
push
dec
inc
sub
cmpsb
outsl
mov
pop
dec
jge
out
xchg
nop
jg
mov
int
test
cs
xlat
jp
jo
inc
push
xor
insb
bound
outsb
inc
dec
iret
test
fisubs
loopne
mov
ss
js
jae
pop
in
cmp
xor
mov
loop
inc
stos
insl
leave
lcall
lods
scas
mov
call
xchg
dec
aas
ror
gs
adc
inc
or
sub
mov
push
adc
xchg
inc
jecxz
mov
dec
icebp
add
lret
test
xlat
mov
push
sbb
data16
movsb
inc
mov
mulb
xchg
mov
or
es
mov
xor
aaa
addb
pop
cli
mov
cs
add
and
add
mov
imull
movsb
and
or
mov
push
int
cmp
insb
cltd
or
es
sub
mov
mov
int
xchg
mov
mov
loope
xor
xchg
or
xorl
aas
mov
jge
or
dec
cmpsb
inc
hlt
scas
je
outsl
or
xor
mov
jmp
adc
or
mov
lret
adc
add
addr16
mov
mov
jbe
imul
mov
test
sub
sbb
inc
jg
fsubrl
or
sbb
cs
and
sbb
fiadds
int3
xchg
lods
xor
lds
pushf
lods
lds
push
jbe
cmpsl
insl
ret
imul
jo
lods
pop
aad
frstor
aas
popa
or
xorl
or
ror
pop
pop
test
cmpsl
test
jb
jge
iret
xor
mov
movsb
push
dec
jb
and
xor
mov
or
pop
cmp
popa
fbld
pop
inc
fmulp
dec
mov
xor
and
mov
mov
dec
out
loop
adc
push
adcb
push
xor
push
jg
test
lcall
repz
cmp
daa
xor
imul
inc
popf
lcall
and
jo
enter
fldenv
sub
fldl2t
pop
lods
mov
jmp
push
hlt
jl
add
outsb
or
lods
es
add
inc
mov
lret
pushf
cmp
frstor
sbb
xchg
dec
arpl
mov
repz
ss
sbb
outsb
or
outsb
jg
xchg
out
popf
int
orb
sub
adc
enter
add
hlt
mov
xlat
pop
mov
pandn
cmp
sahf
repnz
add
rclb
call
dec
pop
clc
mov
dec
cmp
push
frstor
xchg
es
jnp
jno
test
fiaddl
cmp
mov
cwtl
cmc
shlb
ljmp
mov
mov
lret
dec
es
fbld
cs
ds
or
push
cmpsl
add
filds
adc
add
loopne
dec
jae
or
pop
add
scas
idivb
inc
psraw
stos
hlt
lcall
push
shl
pop
and
mov
inc
cmp
lea
sub
or
xchg
out
rcll
mov
test
sbb
pop
inc
subl
je
add
repnz
xor
adc
xlat
out
sti
push
jge
insl
pushf
jne
pop
jns
in
int
push
in
sub
in
jmp
mov
and
xor
xchg
sbb
or
ret
push
adc
stos
lcall
je
push
and
dec
int3
stos
cmpsl
mov
bound
sbb
and
or
jmp
dec
cmpsl
leave
and
loop
hlt
adc
or
pop
or
cmpsl
dec
pop
cmp
fcmovb
shl
jp
sub
xchg
call
pop
cmp
mov
jp
or
adc
xor
adc
test
cmpsl
jp
cmp
in
inc
push
das
gs
cmc
add
add
das
call
mov
enter
cli
stos
stc
mov
inc
fmul
jmp
dec
and
xchg
cmc
push
hlt
sbb
push
and
repz
sub
and
pop
lcall
add
enter
sbb
dec
xchg
mov
sbbb
imul
dec
xor
jecxz
inc
test
mov
movsl
loop
leave
insb
mov
lods
pop
sar
inc
dec
add
mov
rcrl
dec
movsb
aam
push
adc
jbe
stos
into
loop
pusha
pop
add
std
pop
sbbl
popa
out
data16
adc
xchg
and
adcl
or
mov
jo
movb
xchg
test
mov
mov
xchg
pop
xor
outsb
into
daa
popa
nop
movsl
lahf
jge
shl
enter
mov
test
lods
out
dec
adc
and
test
lds
lret
leave
and
es
and
cmp
ret
add
dec
xor
pushf
cs
mov
jle
pop
cmpsl
xor
arpl
lods
in
push
pop
dec
shrl
ret
movsb
repz
sub
mov
adc
xor
fisubl
mov
pop
and
mov
test
jb
push
inc
outsl
pop
movsl
inc
cmp
pop
mov
fisubs
pop
push
mov
pop
ss
ss
loope
mov
lahf
mov
bound
int3
adc
aas
and
jecxz
imul
das
jg
or
jb
xchg
and
sbb
dec
dec
mov
ret
sbb
push
sub
arpl
stc
pushl
cmpsb
mov
int3
jne
cmpsl
jl
mov
addr16
sti
and
add
and
and
xor
xor
cmc
xor
mov
outsl
inc
pop
mov
cwtl
lods
cmc
xor
mov
dec
popa
jae
cmp
sbb
hlt
or
lea
adcl
add
stos
and
sub
pop
out
adc
jecxz
clc
push
inc
and
jp
or
mov
sbb
shrb
jle
mov
lret
lcall
lea
dec
pop
lahf
sub
decb
inc
call
cmp
lods
xchg
mov
add
sbb
mov
test
xchg
xchg
xor
aad
scas
add
fdivl
filds
aad
cmp
inc
mov
popa
outsl
fs
and
cltd
cld
mov
lods
sbb
stos
dec
in
sbb
lock
call
push
and
int3
or
xor
push
lahf
adc
gs
jg
pop
push
sbb
push
pusha
popa
dec
pushf
cwtl
dec
mov
adc
dec
cmpsb
cld
dec
sub
hlt
in
int3
in
push
popa
fnsave
scas
mov
es
les
rclb
shl
mov
repnz
cmp
scas
adc
aas
push
outsb
loope
fwait
xchg
sbb
nop/reserved
out
orb
xchg
pop
hlt
jge
add
add
pop
mov
in
rolb
dec
insl
jae
adc
addr16
sub
fcomps
dec
pop
ss
cwtl
sbb
or
mov
adc
cmpsl
nop
xchg
mov
pop
cmp
repnz
dec
or
push
fidivl
imul
xor
sub
xlat
ficomps
pusha
outsl
stos
popf
lret
push
push
dec
sbb
xor
dec
add
xor
cmp
cmp
imul
popa
mov
rorl
xlat
mov
enter
dec
call
sti
loop
dec
mov
jne
sub
cmp
adc
daa
popa
xchg
pop
dec
jl
add
popf
xchg
mov
rcr
stc
sbb
jmp
xor
mov
jle
xlat
sbb
bound
jns
adc
out
cmp
sbb
add
aad
lods
push
sub
sub
andl
jno
mov
cli
das
pop
add
cld
insl
mov
inc
or
xchg
sub
lcall
cli
mov
cmp
cld
stc
xor
icebp
add
xchg
test
push
jmp
sbb
xchg
pop
out
dec
adc
sbb
push
imul
cmp
push
inc
addr16
addl
repz
xor
out
in
mov
test
adc
pop
and
add
jbe
stos
cmp
ret
ds
cmpsb
xchg
fwait
push
pop
inc
add
add
test
xchg
mov
xor
pop
inc
xchg
jnp
adc
dec
loope
pop
dec
jle
and
popl
fwait
add
inc
lret
add
dec
or
leave
push
addr16
cmp
inc
add
bnd
xchg
cltd
mov
inc
mov
mov
sbb
scas
add
inc
and
movsb
scas
pushf
jge
dec
out
sub
sbb
jns
loopne
or
outsl
xchg
popa
pop
mov
in
ja
movsl
and
inc
mov
bound
mov
and
add
jbe
push
push
iret
mov
pop
xchg
pop
sub
stos
pop
std
mov
sbb
add
int
pop
pop
in
xchg
xlat
dec
ret
mov
lock
xor
rorl
cmp
out
push
cltd
dec
add
ds
bound
sub
cmp
xchg
int
dec
js
movntps
mov
and
xor
mov
mov
out
int3
xchg
mov
call
sbb
pop
ret
mov
adc
mov
in
mov
cli
xchg
fidivrl
cli
pop
std
push
or
pushl
mov
push
adc
mov
mov
add
jo
es
mov
cwtl
test
pop
repnz
movsb
sub
dec
cmp
mov
cmp
sbb
insb
push
cmp
lods
stos
push
jb
xchg
adc
fnsave
jmp
mov
add
je
jae
cmpl
shll
mov
lret
xchg
mov
xor
adc
xlat
sub
movzbl
sbbb
xchg
rcl
jg
inc
insl
jne
and
iret
fwait
pop
and
cmp
sbb
sahf
lock
xor
inc
add
rolb
mov
and
mov
es
enter
sbb
mov
cmp
es
loopne
sub
cmp
mov
dec
inc
pop
and
std
sti
mov
clc
fidivl
shr
cmp
adc
pop
jmp
bound
aad
daa
mov
mov
xchg
push
fistps
xor
push
inc
xor
fdivrs
sub
outsb
or
pop
imul
fnstenv
push
in
sbb
lret
outsb
sti
sub
push
lods
ret
fidivs
in
test
xchg
cmp
mov
xchg
sbb
int3
adc
cmpsb
stos
fcmovbe
push
inc
mov
pop
sub
and
rcrb
xchg
rolb
ljmp
adc
push
iret
in
lods
loope
add
test
mov
mov
in
dec
and
push
jl
nop
sbb
testl
mov
add
xlat
hlt
aas
pop
mov
sbb
push
bound
in
cmp
imul
or
leave
rolb
cmp
jne
cmp
adc
lret
or
ret
jnp
and
int3
imul
pop
mov
jne
jp
das
xchg
jae
xchg
fdivl
sbb
add
mov
mov
popa
jne
xchg
pop
mov
inc
jg
xor
fwait
push
pop
add
push
hlt
mov
pop
pop
out
test
stc
rorl
jge
mov
push
push
and
test
adc
pop
out
mov
mov
jmp
add
out
xchg
fisttpl
loopne
xchg
daa
ljmp
cmpl
cwtl
push
movsl
add
int3
lahf
ret
xor
dec
mov
inc
shlb
cmp
cli
shll
sbb
push
cmpsb
repnz
cli
cmp
push
add
pop
mov
int
add
xor
cli
xorl
sbb
mov
cmp
shl
cmp
loop
iret
fstps
arpl
add
mov
xlat
lds
fisubrl
adcl
dec
push
xor
mov
mov
dec
xchg
arpl
sbb
mov
adc
repz
sub
hlt
pushf
stc
mov
mov
fsts
pop
inc
ljmp
jle
xor
xchg
arpl
jnp
fisubs
std
rorl
add
iret
aad
out
cmpsb
orl
ljmp
aas
mov
push
test
pop
in
xchg
mov
jl
rorl
mov
push
aad
decl
and
imul
mov
in
jmp
test
push
pop
sub
hlt
push
cmpsb
stc
fadds
inc
push
dec
aam
sub
or
xchg
adc
mov
lods
jae
inc
rcll
std
jb
mov
and
cmpsl
mov
add
xor
cs
adc
test
add
push
pop
add
mov
cwtl
push
cmp
sbb
adc
pushf
xor
leave
scas
fstl
and
dec
repnz
cmp
cmp
mull
js
xchg
mov
lcall
loope
push
imul
leave
sub
push
outsb
mov
and
add
inc
aaa
stc
cmpsl
cli
sub
iret
jbe
cmpsb
insb
mov
dec
stos
sub
inc
cmp
push
mov
push
mul
or
subb
mov
add
ficoms
add
mul
lock
loop
mov
push
pop
cld
idivb
xor
cs
sbb
pop
push
aad
adcl
xchg
popa
pop
stos
enter
xchg
enter
jb
mov
jns
adc
je
xor
sub
leave
pop
arpl
jns
xchg
outsb
jge
jg
xchg
cltd
pop
sbbb
in
cmp
out
inc
pop
jl
adc
inc
cli
imul
mov
or
fucomip
mov
push
jns
and
inc
lret
mov
sbbb
add
pop
sub
sub
pop
mov
into
sub
outsb
pop
adc
popf
adc
inc
daa
xchg
int3
fidivs
or
or
mov
imul
outsb
mov
push
icebp
aas
imull
pop
jae
mov
lret
pop
inc
pop
into
scas
mov
int3
inc
outsl
loop
cmp
dec
push
adc
pop
push
or
sahf
dec
cmp
mov
xchg
adc
pop
push
outsl
ja
or
cltd
scas
into
add
xchg
in
cmp
sbb
outsl
popf
or
in
imul
lock
dec
outsb
ja
jns
ret
call
fimuls
pop
data16
cli
insb
dec
inc
in
xchg
stos
fcmovbe
lret
mov
jg
and
jecxz
cmp
mov
mov
aaa
imul
lods
sarb
add
xchg
mov
add
rorb
mov
in
add
adc
pop
outsb
nop
scas
popf
mov
cmp
dec
fdivr
imul
or
or
pop
ret
mov
je
dec
mov
dec
shlb
sarl
mov
mov
dec
adc
scas
scas
into
cltd
cs
bound
icebp
sub
pop
rcll
dec
dec
push
jb
mov
into
xor
push
mov
out
cmp
imul
mov
xchg
push
jg
fcoml
hlt
sub
xchg
pop
jno
sbb
push
lcall
mov
in
into
sbb
mov
fidivl
mov
cmp
push
loope
add
xchg
vpsubw
lock
xor
mov
fwait
jecxz
into
faddl
inc
std
adc
add
xor
xchg
ss
and
cmpl
ret
adc
push
sti
call
mov
sahf
jnp
mov
pop
or
ret
jbe
roll
nop
dec
daa
mov
mov
cs
adc
fimuls
dec
hlt
mov
add
loopne
arpl
add
push
add
cmp
lahf
jmp
and
mov
xor
fstpl
outsl
sti
add
test
pusha
cs
pop
mov
imul
mov
jge
adc
add
dec
filds
cs
in
inc
add
fiaddl
lea
stc
ret
jno
mov
mov
and
fmuls
pop
les
pop
sub
add
jno
arpl
cmp
cmpl
scas
aas
and
xor
aas
mov
bound
mov
ds
xor
sbb
stc
je
cs
rorl
test
out
mov
sbb
mov
aad
jge
mov
push
dec
mov
arpl
lods
ss
push
mov
sbb
dec
out
cmp
cld
or
incl
cltd
sbb
enter
imul
mov
cmc
push
sub
psllw
imul
mov
dec
rorb
data16
gs
dec
cmp
movsb
push
add
jbe
xchg
push
mov
jbe
test
mov
imul
sbb
mov
dec
and
test
xor
mov
icebp
movsb
adc
mov
push
pop
int
mov
cmp
pop
movb
imul
inc
rcrb
and
push
pop
pop
gs
lods
cmpsb
outsl
xchg
and
loope
int3
pushf
cmc
and
lds
cs
pop
mov
cmp
sub
and
xchg
jg
mov
into
les
repz
je
mov
and
and
icebp
shll
cmp
sub
sbb
int
jne
jne
out
add
jno
and
push
addr16
and
sahf
sub
das
mov
aaa
je
xchg
sar
in
inc
adc
addr16
movsb
and
das
cld
cs
sub
adc
imul
cli
mov
push
mov
int3
data16
mov
jae
lcall
mov
sbb
adc
in
push
popf
ret
lods
lret
jp
jp
lahf
pop
cmp
cmp
loopne
loopne
mov
sub
jo
stc
outsl
aas
dec
std
xor
jecxz
xchg
or
pop
push
cmc
add
push
in
fidivrl
repz
lods
cltd
int
sahf
fildl
xchg
jns
ljmp
xchg
jo
xchg
dec
mov
jno
repnz
xlat
mov
dec
mov
int3
push
cld
sbb
imul
aas
xchg
add
addl
scas
mov
imul
aad
cmc
jne
xchg
jae
in
push
inc
js
pop
xor
dec
aas
xor
scas
pop
int3
pop
jmp
mov
and
pusha
lahf
iret
pop
inc
scas
jge
ret
sbb
test
jo
test
cltd
mov
shrb
sbb
imul
insl
rorb
sub
and
xor
fdiv
mov
pop
fildll
pop
aaa
cmc
icebp
inc
push
mov
inc
int3
xor
pusha
loopne
and
in
ret
sbb
xor
pop
jp
loop
pushf
sbb
fnstsw
sub
js
push
or
cmp
or
cmp
cmp
sub
ret
jbe
sti
sbb
insb
pushf
mov
call
mov
mov
xchg
and
inc
out
std
addl
sbb
sbb
pop
mov
subl
imul
xor
xchg
jmp
mov
and
loop
cmpsl
fwait
dec
sub
xchg
mov
push
sub
mov
cmpsl
xchg
sub
enter
cli
adc
jmp
out
inc
jmp
push
jb
loopne
mov
mov
xchg
lds
xor
push
ficompl
fldcw
mov
movsb
repz
xchg
incb
jb
lock
dec
cmp
lret
push
sub
test
shl
cmp
leave
mov
in
push
jg
or
jno
xor
lahf
dec
pop
mov
into
push
jl
push
mov
mov
xor
pop
dec
sub
or
cmp
aas
pop
xchg
mov
push
xchg
or
arpl
mov
sub
das
leave
jl
and
es
in
push
mov
sbb
add
pushf
dec
inc
cmp
nop
in
sahf
inc
cmc
xor
test
jns
aad
jae
push
xlat
xor
and
cld
mov
push
mov
mov
imul
pop
mov
jb
int3
fildll
imul
dec
push
jle
inc
dec
sti
cmp
iret
aam
subl
xchg
test
sti
push
in
or
loop
pop
inc
shl
movl
xor
push
sti
xchg
lret
or
clc
andb
pop
out
and
adc
jl
mov
mov
arpl
fldlg2
loope
dec
pop
cwtl
and
pop
scas
scas
jle
adc
push
fs
xor
into
in
popa
add
test
repz
cmp
out
loopne
push
mov
testb
lcall
mov
dec
je
sbb
cmpsb
mov
jle
pop
pop
xchg
sti
adc
fistpl
int
pop
sbb
cli
fsub
divl
dec
je
outsb
pop
jbe
shl
jmp
out
xchg
ja
or
or
pusha
push
popa
push
pop
test
mov
sbb
jl
pop
cwtl
aas
mov
cltd
mov
push
cltd
int
fcmove
negb
jnp
stos
pushf
mov
filds
push
dec
add
ret
sti
mov
icebp
ds
loopne
and
or
and
ret
cmp
insl
pop
xor
insb
mov
mov
int
in
cmpsb
mov
mov
sti
popf
ss
jne
dec
sbb
dec
std
aam
sub
shll
imul
call
mov
in
inc
std
sub
jno
movsl
clc
jae
add
or
sub
test
jmp
or
arpl
cmp
pop
loopne
xchg
repnz
and
sub
test
mov
xchg
xor
mov
outsb
in
stos
mov
iret
sub
mov
aad
xor
dec
add
mov
cmp
xchg
sub
test
jo
pop
aam
xbegin
adc
in
ss
or
and
xor
lds
pop
cli
std
addl
mov
push
cmp
and
mov
movsl
sahf
inc
std
inc
je
movsb
adc
movsl
ror
dec
pop
jg
mov
mov
sub
lods
out
hlt
push
xchg
push
out
jbe
movsl
test
cmp
hlt
ss
out
imul
mov
pusha
add
cltd
inc
decl
xchg
cmp
inc
es
jg
jg
shl
lods
dec
mov
xchg
mov
shlb
sub
mov
lea
sbb
dec
movsl
stos
cmc
add
fdivl
jmp
jl
fisubl
je
adc
sub
in
sbb
push
into
sti
push
add
and
sub
sub
dec
push
ror
out
cmp
fnsave
ja
mov
inc
lods
pop
rclb
inc
add
rolb
sub
mov
arpl
btsl
add
out
scas
lret
mov
jg
insl
xlat
push
fwait
jae
lar
notl
outsb
int3
inc
shll
imul
cmp
enter
sarl
add
jmp
vpsubusb
adc
movsb
sub
or
pop
ror
adc
ja
outsb
push
xchg
push
push
das
clc
lcall
mov
or
inc
dec
jo
stos
std
sti
jp
mov
jb
mov
lahf
xchg
adc
push
es
ljmp
repz
adc
jle
scas
inc
sbb
aam
dec
xor
clc
and
popf
lret
mov
sub
sub
mov
in
leave
jge
adc
mov
hlt
hlt
mov
sbb
pop
dec
inc
ds
xor
mov
cltd
ficompl
mov
test
insb
and
or
sbb
je
movsl
mov
add
or
sub
movsb
into
je
lret
add
pop
outsl
pop
icebp
adc
rorb
imul
and
fucomip
out
enter
mov
stc
iret
sbb
lcall
inc
pop
fisubs
cmp
adc
test
outsl
mov
mov
mov
mov
push
cmp
mov
jp
adc
push
int3
push
int
jmp
ds
negl
outsb
jecxz
sub
jg
cmpsb
and
cmpsl
adc
inc
xor
cmp
out
pop
lret
jp
sub
or
mov
xchg
gs
xor
push
push
sbb
jp
lret
sarl
es
kmovw
xchg
dec
lds
xchg
adc
cmc
outsb
mov
not
xchg
dec
or
jne
loope
loopne
jns
int3
sub
adc
mov
push
add
lret
push
es
lret
mov
xchg
push
or
lods
add
movsb
add
cmp
xor
mov
cmp
inc
iret
cmp
mov
mov
mov
scas
jne
sub
xor
enter
cli
jg
dec
pushf
in
cmovg
popf
inc
cmpb
ss
mov
negb
jns
mov
arpl
jbe
add
or
les
lds
mov
es
lea
int3
adc
push
movsl
hlt
add
mov
hlt
enter
mov
push
fiaddl
dec
push
push
mov
xor
cwtl
test
bound
mov
outsl
and
stos
fldt
xor
mov
arpl
popa
and
jmp
rclb
inc
repz
push
insl
mov
ljmp
call
push
jo
pop
outsl
xor
pop
xchg
sub
repz
add
imul
scas
mov
data16
sahf
dec
ds
inc
rcll
add
out
iret
lods
adc
imul
mov
add
add
inc
mov
add
test
out
lea
faddl
lods
pop
in
xchg
popf
xchg
xor
addb
divl
js
add
push
inc
icebp
aas
cmp
jbe
jmp
lret
cmpsb
mov
sbb
lds
fidivl
xlat
jo
dec
sub
pop
fwait
xor
jns
ret
addb
sub
or
xchg
es
es
mov
into
pop
stos
and
fs
mov
jge
adc
xor
and
sbb
popa
xor
pop
daa
call
push
fmul
call
push
or
pop
dec
cmp
adc
xchg
aas
xchg
stc
sbb
pusha
loopne
fsubrs
sbb
mov
sahf
mov
dec
add
or
adc
lds
into
pop
pushf
test
xor
pop
xor
dec
xchg
mov
movsb
js
insl
test
ret
mov
aas
sar
pop
ret
insl
sub
jecxz
inc
inc
push
mov
cmp
scas
xchg
cmp
je
xchg
iret
call
pop
jg
rorb
cmp
cmpl
loopne
mov
mov
sub
aam
ss
movsl
stc
xchg
cli
jno
cmc
mov
mov
je
push
and
jmp
in
adc
or
lahf
cmpsl
add
pop
js
stc
pop
or
out
les
dec
test
or
int3
ret
mov
push
out
inc
mov
aaa
mov
dec
jne
dec
outsl
imul
cli
push
fwait
icebp
outsb
mov
stc
test
flds
cmp
in
pop
lea
mov
lods
pop
outsb
mov
xchg
push
sar
imul
mov
mov
mov
xor
cmp
adc
aam
scas
mov
mov
or
les
outsl
push
pop
mov
shlb
dec
cmpsl
fstpl
out
sahf
or
fisttps
or
imul
inc
dec
and
mov
bound
loope
rcr
cmpsb
das
mov
js
mov
mov
nop
rol
push
sbb
daa
sbb
in
cmp
mov
cld
test
push
jns
mov
mov
js
mov
push
in
call
mov
lret
in
pandn
daa
add
test
and
sbb
test
sbb
lret
mov
xor
pushf
sbb
dec
sarb
add
cmpsb
sub
xchg
icebp
dec
push
call
pop
dec
add
xor
nop
add
mov
xchg
sbb
push
xchg
mov
xor
xchg
cwtl
int
sti
xor
mov
mov
inc
fistpll
sub
xchg
jne
sbb
jmp
sub
test
pop
daa
jb
push
and
mov
ss
sub
aam
or
das
repz
ja
dec
rclb
rorl
mov
fs
mov
outsb
xor
jnp
std
jb
mov
bound
cmc
idivb
mov
cmp
cwtl
sbb
fisubrl
cwtl
addr16
xor
cmp
pop
aaa
jl
repz
mov
aas
fucompp
mov
lret
int
mov
int
jg
add
js
cmp
ret
fcompl
lea
leave
push
inc
jp
xchg
test
mov
addr16
xor
es
jp
inc
mov
loop
mov
fsubr
aad
rclb
inc
push
xchg
test
notl
lcall
sbb
inc
sub
and
adc
sahf
pop
mov
pop
icebp
jno
cld
ds
add
push
xorb
mov
push
nop
xchg
test
push
cmp
or
mov
or
out
xchg
test
mov
sbb
aaa
fadd
add
xchg
mov
and
xchg
fbld
dec
fdivr
xor
mov
fstpl
test
cmpsb
dec
shrb
pop
adc
pop
mov
in
sbb
mov
adc
shlb
das
sarl
dec
neg
jge
shrb
dec
push
add
mov
insl
and
inc
in
inc
je
arpl
jne
adc
mov
mov
mov
jp
in
je
mov
xor
xchg
repnz
movb
inc
jmp
xor
or
mov
fsubl
jae
jle
stos
into
mov
imulb
rclb
daa
inc
mov
outsl
shr
rcrl
xor
push
jge
xchg
jbe
dec
jnp
sub
popa
xchg
dec
xor
addl
dec
mov
jmp
adc
jo
push
popa
push
mov
sbb
arpl
ljmp
filds
clc
cmp
incl
lods
das
cmp
aam
pusha
popa
scas
shl
adc
push
shr
test
or
xchg
pop
pop
scas
in
jnp
xor
bound
cs
pusha
pop
movlps
out
orb
xchg
divl
jmp
js
push
inc
pop
adcb
mov
mov
mov
in
add
sti
or
pop
es
in
inc
mov
lock
daa
cmpl
add
sbb
aad
fistpll
daa
je
cltd
in
cmc
push
cmp
test
and
arpl
add
inc
sbb
fnstenv
out
cli
and
jae
jo
jnp
out
xor
sahf
push
push
lret
rol
aas
xchg
mov
clc
nop
dec
cmp
test
jns
je
or
ss
jno
inc
and
pushf
and
clc
out
cmp
in
divb
sbb
and
cwtl
mov
rcll
in
sub
fwait
imul
aaa
fs
out
loopne
pop
jb
jmp
xchg
push
xchg
ret
stos
xchg
dec
push
movsb
push
clc
daa
or
negl
mov
fildl
into
push
sbb
icebp
inc
insb
dec
cmp
and
jmp
dec
loop
and
mov
daa
inc
xor
mov
out
nop
stc
push
in
xchg
adc
in
pusha
sub
fisttpll
movsl
gs
sti
push
lret
mov
sub
push
or
fcmovnbe
mov
pop
negb
mov
scas
and
xchg
inc
and
ljmp
xchg
xor
inc
push
std
mov
push
jns
cmc
push
adc
pop
jle
push
sub
push
jmp
mov
hlt
pop
fdivrs
push
outsb
inc
in
imul
and
sub
push
and
data16
idivb
dec
jbe
pop
call
into
jno
aas
mov
pop
int
aam
mov
roll
xor
dec
lock
jecxz
vmovntdq
outsl
sbb
mov
mov
in
cmp
int
jl
cmpb
sub
mov
lock
sahf
push
jae
clc
lahf
popa
aam
push
jae
dec
imul
cmp
std
pop
mov
cmp
dec
xlat
jmp
jmp
push
lcall
and
jl
out
repz
orb
xchg
arpl
hlt
rcr
stc
mov
push
stos
data16
jp
ja
movsl
pusha
stc
mov
jae
xchg
jg
xchg
lods
int
aas
xor
cltd
ret
sbb
xor
sub
popa
or
mov
pop
dec
push
pop
mov
clc
lret
add
hlt
jmp
pop
dec
mov
cltd
ror
das
addb
aaa
loope
vmptrst
cmp
sbb
dec
xchg
mov
int3
add
mov
sub
or
adc
lods
sbb
or
hlt
or
push
inc
adc
jmp
outsb
push
mov
repnz
xchg
xchg
dec
dec
rdtsc
and
pop
add
and
or
mov
or
mov
cmp
pop
dec
mov
jle
xchg
xlat
aas
ret
ljmp
mov
adc
fistps
pop
inc
dec
adc
pop
mov
cvtps2pi
add
fwait
das
adc
add
pop
sub
add
xchg
fs
add
push
fwait
pop
adc
aas
dec
cmp
add
sub
pop
or
stos
push
sub
mov
and
lock
iret
and
mov
sub
xchg
adc
fdivs
test
pop
addr16
push
push
inc
xor
pop
sbb
jne
fcomps
push
cmp
mov
call
cwtl
sub
dec
add
mov
and
mov
arpl
nop
adc
sbb
stc
dec
pop
mov
int
scas
rolb
xor
iret
sarl
mov
cltd
jl
inc
and
cmc
lock
incb
pushf
jbe
stc
cmp
inc
jne
lds
sub
clc
push
js
fadds
movsb
and
leave
xor
mov
jbe
and
or
loop
ds
sub
dec
leave
pop
dec
inc
and
xchg
dec
adc
bound
addb
pop
fs
inc
and
push
pop
jne
adc
inc
std
mov
test
lret
or
cwtl
enter
dec
or
shrb
pushf
push
pop
or
xor
mov
icebp
sbbl
incl
cli
int3
test
fidivrl
nop
mov
pushf
rcrb
movsl
add
xor
pop
jae
cmc
fiadds
andl
dec
inc
jg
xor
leave
sbb
sbb
out
repz
pop
lods
leave
outsl
setle
xor
gs
dec
cmp
pop
or
lahf
push
je
push
xchg
ljmp
mov
lret
out
fcompl
lods
rolb
inc
lock
xchg
dec
mov
mov
jb
pushf
pop
sbb
jae
jl
out
push
aaa
cmp
push
cli
outsb
popf
shl
xchg
movsb
fnstsw
jbe
push
pushf
lcall
push
lea
shl
fstpl
xor
xchg
jae
cmpsb
shl
mov
fs
lods
dec
leave
sub
cwtl
push
cwtl
pop
inc
test
fcompl
nop
test
stos
mov
ret
add
inc
add
lea
adc
mov
call
clc
pop
dec
enter
fwait
xlat
xchg
fisubs
cmp
sub
iret
adc
movsl
mov
pop
adc
lds
outsl
out
stc
mov
and
xor
mov
arpl
jmp
and
xchg
mov
adc
hlt
xorb
daa
add
leave
and
mov
pop
inc
mov
adc
sub
or
pop
add
xor
fstps
sbb
dec
inc
sbb
mov
push
xchg
sub
bound
adc
fwait
imul
lea
lods
xchg
test
outsl
je
cmp
jno
arpl
sbb
pop
add
and
jne
push
sub
stos
js
cmp
or
orl
add
pop
fiaddl
or
notb
adc
mov
arpl
jns
sub
out
mov
pop
pop
inc
mov
sti
jge
mov
push
outsb
adc
gs
stos
out
pusha
mov
in
xchg
xor
dec
fsts
subb
cmp
cmc
jecxz
push
push
push
mov
sahf
dec
or
or
and
nop
or
movsl
insl
cltd
iret
cs
xorl
vsqrtps
mov
xor
and
dec
fsubrl
mov
ja
sbb
xor
or
shlb
push
inc
dec
in
xchg
movsb
imull
mov
pusha
push
repz
loop
pop
sub
mov
fidivs
add
jbe
jmp
mov
lea
test
and
rclb
xor
pop
jge
jno
xor
sbb
mov
jno
popf
lahf
cmpsl
add
add
push
stos
ret
ss
in
cmp
sbb
or
ret
xor
push
push
jmp
fcoms
mov
iret
cmpsb
sub
lods
scas
inc
popf
jno
loope
cmc
and
inc
cld
add
dec
or
push
sub
add
push
test
pop
pop
outsl
mov
shrb
scas
jg
xchg
clc
mov
push
xchg
mov
sbb
out
cmpsb
xor
addr16
lea
leave
add
das
push
and
mov
std
inc
inc
mov
jae
imul
lahf
jmp
dec
testl
shrb
ljmp
loope
iret
or
repnz
push
imul
int
jle
in
mov
cmp
push
xor
cmp
push
mov
fs
imul
adc
sub
lcall
lret
icebp
in
xchg
sbb
add
mov
adc
outsb
shrl
movsb
int3
jle
je
xor
andl
mov
out
cmp
sub
mov
fwait
mov
shlb
dec
or
std
test
fnstenv
inc
mov
xlat
and
pop
cmc
cmp
jne
xor
mov
sti
sbb
sbb
mov
js
daa
mov
xchg
repz
push
and
nop
adc
loopne
js
shrb
sub
nop
cli
add
sbb
dec
movsb
adc
xchg
out
xchg
call
cli
or
gs
inc
les
test
call
push
inc
push
inc
dec
stc
fmuls
push
dec
add
sbb
and
pop
das
sub
dec
stos
cmp
jle
call
out
adc
dec
out
lods
jae
lock
sub
mov
sub
mov
dec
mov
and
fisttps
pop
jb
mov
pushf
arpl
out
jg
mov
push
inc
ss
dec
add
shrb
aaa
cs
scas
push
or
data16
inc
mov
mov
pop
inc
fsubs
sbb
pop
lret
into
cmp
cmp
and
scas
mov
int3
xor
stc
or
pop
dec
xchg
jp
adc
jo
jne
push
subb
mov
ret
shlb
lea
sbb
pop
sub
fimull
push
xchg
js
and
jae
std
mov
sub
pop
and
mov
mov
es
shl
push
mov
int
cmp
gs
cli
adcb
lds
sub
mov
inc
sbb
push
adc
hlt
mov
mov
sahf
sbb
mov
push
jae
lret
repnz
bound
sti
pop
rcr
jae
std
mov
mov
hlt
loopne
adc
fidivs
repz
xchg
js
xrelease
push
test
add
mov
repnz
loope
jb
call
mov
and
cmp
pop
cmp
mov
movhpd
sbb
fs
insl
push
push
xlat
jo
insl
gs
add
in
imul
es
sahf
dec
adc
inc
enter
sbb
and
add
sbb
test
rcrb
mov
add
and
pushf
xor
jae
adc
jp
adc
mov
shl
gs
mov
incl
lahf
xchg
imul
addb
mov
rolb
pop
pushl
mov
lods
sbb
imulb
imul
sub
aam
loopne
jo
dec
or
and
sub
sbb
adc
or
or
dec
inc
jno
je
call
mov
incb
fdivl
dec
and
push
daa
xchg
mov
cmp
cmpsb
hlt
or
xchg
dec
lret
mov
mov
jmp
inc
mov
push
cmp
push
mov
xor
lret
test
je
or
sti
pushf
leave
inc
mov
dec
sub
or
add
or
mov
cmp
dec
add
testb
aas
daa
xchg
hlt
xchg
lods
filds
adc
insl
enter
sahf
jle
outsb
xor
loop
repz
data16
icebp
xchg
push
js
movsb
imul
in
incb
jo
sahf
loope
mov
inc
inc
sub
fs
push
cmpsb
bound
jecxz
dec
jge
and
inc
popf
lcall
jno
idivb
xchg
insl
dec
bound
or
sbb
aas
mov
mov
and
mov
add
mov
push
mov
push
mov
sub
mov
sbbb
push
xlat
push
add
fidivrs
sbb
lcall
mov
in
in
lret
and
dec
hlt
fnclex
cmpsl
orb
adc
testl
adc
mov
sub
mov
sub
cs
js
in
and
jmp
add
popf
or
xchg
sub
xorb
inc
dec
test
daa
mov
hlt
cmpsl
or
pushaw
xchg
push
pop
enter
int
sbb
andb
add
pop
cmpb
cmc
rcrl
xchg
loope
imul
xor
pop
mov
cmp
movsb
in
push
add
and
pop
test
fsubrl
movb
lcall
dec
xor
jb
and
lea
sub
popa
repnz
xchg
js
or
push
mov
cmp
xor
stos
jl
lea
xor
cmp
insl
pop
inc
mov
add
and
mov
cmpsl
clc
repz
mov
int3
xchg
inc
xchg
leave
rol
xor
int
inc
mov
push
sub
adc
cltd
mov
push
push
in
adc
jge
cmp
cmp
int3
cld
mov
xlat
sub
lret
add
daa
push
rorb
leave
xor
je
sub
sbbl
cli
cvttps2pi
push
fnstsw
pusha
fsubrs
push
dec
dec
in
lods
sub
cmpsb
xchg
ja
sub
out
add
mov
pop
jmp
cli
ror
shrb
xchg
mov
sbb
orb
mov
mov
mov
dec
cmp
popa
popf
adc
bound
fadds
adc
mov
iret
outsb
jae
dec
dec
push
add
inc
dec
loope
jge
daa
mov
lcall
adcl
shrl
fwait
push
mov
stc
xor
xchg
mov
mov
test
inc
push
push
inc
pop
out
fwait
mov
leave
push
sbb
cmp
and
cmp
bound
nop
aam
dec
and
das
ljmp
jge
cmp
xchg
pusha
mov
jg
shrb
decl
loopne
test
cs
jno
icebp
pushf
iret
jo
cmc
xor
fsubrl
push
cltd
mov
mov
or
int
push
mov
cmp
xchg
mov
stos
js
xor
cwtl
call
dec
cmp
fcmovnu
inc
xor
pop
fidivl
hlt
sub
pop
int3
pop
xchg
movhps
testl
cld
repnz
mov
fisubrs
cld
lret
lock
jmp
xchg
call
leave
arpl
cmpsl
pusha
call
daa
jo
xchg
jle
mov
sub
cmpl
sarl
fcmovnu
mov
add
popf
mov
fnstsw
repz
mov
pop
lock
adcb
clc
hlt
cltd
cltd
lods
or
sbbl
lds
xchg
gs
sub
fistps
ss
divl
pop
jbe
repz
imul
cmpsb
fbstp
mov
xchg
rolb
iret
fstpl
inc
lea
push
sarb
push
cmp
shrb
lods
push
xor
jecxz
cmc
aas
mov
cmpsb
popf
jbe
jno
rcl
bound
jns
frstor
cmc
jmp
sti
push
iret
xchg
scas
jg
pop
popa
push
into
addr16
pusha
dec
jl
xor
jae
jne
std
push
push
pop
jge
dec
and
repz
mov
shrl
push
adc
pop
mov
into
shrb
push
decb
or
rol
test
xchg
fcmovnu
das
inc
mov
push
and
insb
in
pop
push
jae
pop
jae
cmp
xor
ds
aad
xor
popf
gs
in
cmc
repnz
hlt
out
jne
outsl
cld
test
sub
cwtl
out
inc
adc
cmpl
add
xchg
push
mov
mov
xchg
test
pushf
cltd
decl
mov
hlt
inc
dec
mov
or
aas
mov
es
repz
dec
insb
or
add
sti
setne
clc
int3
pushf
bound
cs
add
or
jge
aad
stc
scas
out
or
mov
int
movsb
es
dec
mov
xchg
cltd
or
pop
in
and
xchg
xor
cmpb
movsb
cli
push
xor
adc
sbb
xchg
movb
loopne
jmp
jnp
hlt
pop
add
mov
xor
bound
push
fisttpll
add
lods
lret
inc
xchg
fidivl
mov
daa
rol
sbb
dec
xchg
xor
iret
mov
ret
and
sbb
icebp
pop
pop
jno
sbb
cmovne
sbb
push
dec
mov
jae
sub
adc
or
xor
xchg
add
xor
adc
aas
ljmp
scas
xchg
pop
xor
pop
rorb
scas
ja
mov
jmp
cmp
stc
and
mov
nop
add
std
les
lds
push
iret
popa
push
repz
or
int3
cld
cmp
notb
lods
loop
mov
xor
dec
loope
ret
dec
sbb
push
scas
arpl
xchg
add
jmp
mov
in
sbb
fwait
cmp
dec
mov
push
sub
and
push
cmp
mov
xor
clc
mov
mov
or
fiadds
jle
pop
mov
push
push
xor
jmp
or
lods
in
or
inc
xor
jl
push
pop
push
test
pop
addr16
jl
rclb
dec
push
fadd
inc
pop
insb
hlt
in
fistps
hlt
fldcw
out
or
fwait
mov
addr16
sbb
popf
stc
sarl
into
rolb
jbe
daa
inc
jmp
push
dec
pop
icebp
xchg
mov
inc
or
fldt
call
mov
scas
add
jae
adc
dec
ljmp
jnp
pop
loope
inc
std
cmp
push
pop
xchg
popf
adc
mov
or
dec
add
mov
mov
ja
fwait
dec
xor
xorl
fbld
fsubr
fmull
jne
or
inc
rcrb
dec
inc
pushf
popa
inc
lahf
push
sbb
je
push
inc
fdivl
pop
fchs
mov
repnz
mov
nop
lea
add
and
sbb
sbb
xchg
mov
sarl
inc
xchg
daa
sub
mov
mov
jb
jp
xor
jg
data16
int3
jno
lea
jbe
sahf
push
dec
popf
negb
inc
nop
pop
xchg
sbb
dec
mov
add
adc
jl
xor
popl
lds
xchg
cwtl
aad
xlat
call
and
lock
dec
push
jge
ja
cmpsl
loope
cmp
fsub
xchg
cmpsl
mov
daa
ss
cmp
roll
arpl
fmul
pop
pop
adc
or
mov
cmp
add
inc
ss
test
mov
sbb
fldt
faddl
sti
jl
adc
cmc
xchg
dec
nop
inc
gs
add
jne
push
fxch
dec
fsubrs
push
cld
or
and
mov
xchg
dec
fmull
xchg
aas
shlb
xchg
add
sbb
sub
mov
adc
push
jbe
repnz
inc
out
jg
stc
mov
pop
fmull
xchg
jno
mov
push
insl
shrl
ss
or
into
push
repnz
sbbb
pop
gs
dec
and
add
pop
pop
mov
sbb
jae
lock
out
lods
int3
xor
test
fsts
inc
xor
test
dec
or
xchg
or
stos
fs
sub
ss
cmpsb
out
push
push
jg
mov
pop
xchg
imul
cmp
cmp
ret
mov
packssdw
jns
mov
inc
addr16
pop
push
push
add
pop
pop
cwtl
sbb
bound
cmpsl
sti
cmp
icebp
cmpsb
or
jae
jmp
ret
mov
jns
pop
repz
xchg
cwtl
pop
xchg
and
mov
pop
popa
test
xchg
push
stos
jle
jbe
clc
sahf
lret
adc
xor
stc
icebp
out
adc
sub
in
imul
and
or
xchg
lods
repz
pop
std
fmull
in
sbb
jle
popa
dec
movsl
je
push
nop
mov
jns
lea
lcall
arpl
pop
out
test
mov
mov
outsb
enter
aam
push
dec
xor
adc
mov
sub
mov
mov
ja
bound
sbb
xor
push
push
inc
into
pop
cltd
push
adc
lret
cltd
in
adc
mov
ret
xchg
ret
enter
btr
cmp
add
adc
mov
hlt
jns
fs
lds
pusha
test
add
divb
jns
cmc
hlt
or
fwait
sti
aam
fwait
xchg
pusha
adc
mov
loopne
lret
lcall
push
adc
orl
push
xor
ret
mov
push
lock
mov
test
out
gs
dec
lcall
fcom
mov
add
sbb
lcall
movsl
add
repnz
aam
sahf
insb
inc
scas
rolb
lret
xor
jmp
mov
mov
imul
in
cmp
sar
or
sbb
cld
mov
xor
jle
mov
in
call
es
ja
dec
cltd
test
jge
pusha
xchg
mov
sub
pop
adc
movsl
testl
add
xor
xor
and
stos
jge
inc
push
scas
or
or
pop
popf
jo
push
jo
xor
adc
add
sbb
insl
test
lock
pop
pushf
add
inc
int
roll
stc
outsl
jl
lods
das
push
pop
outsl
lods
aam
mov
loopne
mov
es
sub
movsb
scas
jo
pop
push
fsubrl
in
sahf
orb
sbb
movsb
adc
out
aas
stos
jge
push
icebp
call
lcall
fwait
cld
push
cvttps2pi
xchg
push
add
dec
pushf
adc
into
test
aas
jg
push
adc
sbbb
dec
mov
pop
mov
push
loope
xor
insb
sub
or
in
gs
push
ffreep
scas
das
outsl
push
pop
push
imul
orb
outsb
jb
imul
sub
shlb
movsl
mov
sbb
leave
loope
or
jmp
lcall
xor
fsubrs
cs
insb
and
push
rclb
hlt
inc
insl
jl
jb
adc
fcmovu
xchg
inc
rclb
add
sbb
xchg
lods
xchg
add
and
pop
in
mov
daa
daa
sbb
and
nop
popf
dec
addr16
push
scas
mov
adc
insl
xor
and
iret
inc
sarl
adc
push
in
fwait
adc
pop
xchg
jmp
mov
inc
scas
shl
sub
mov
add
fwait
iret
dec
repnz
xchg
daa
sbb
sbb
cmp
and
daa
sub
scas
imul
call
int3
outsl
or
mov
stos
test
push
and
jae
add
fistps
pop
and
jl
divb
cmp
cmp
dec
push
xchg
xor
push
pop
fisttpl
jp
cmp
push
add
gs
out
push
lods
aas
ljmp
and
inc
lods
inc
xor
mov
ja
jp
daa
jg
test
ret
jmp
sbb
lods
in
outsl
pop
mov
pop
int3
sub
imul
cltd
cmp
cmp
insl
add
ret
mov
test
jmp
xor
xchg
xchg
push
decb
adc
das
cmpb
mov
jb
xchg
hlt
push
inc
sbbl
sub
sbb
dec
lock
push
frstor
mov
pop
dec
and
aad
mov
jae
sahf
mov
sbb
mov
inc
push
ja
pop
and
jp
mov
out
push
cmp
xchg
mov
pop
std
xlat
push
les
das
inc
les
mov
mov
pushf
call
adc
sub
ret
cmpsb
mov
out
sbb
leave
mov
shlb
inc
jb
cmp
cmp
negb
mov
cmc
mov
addl
shll
ret
pushf
cwtl
or
inc
addr16
add
add
inc
dec
ss
xchg
push
jb
aam
lock
dec
stos
fimull
lods
ret
into
push
mov
xchg
in
jmp
popa
dec
aam
jg
jbe
frstor
mov
in
fstps
adc
je
or
subb
inc
roll
lea
lea
adc
jecxz
imul
pop
movsl
cmc
aaa
insl
mov
add
cmp
jae
adc
lock
cli
xor
cmp
iret
fdivrl
lock
pop
push
out
add
scas
xlat
insl
daa
push
dec
sub
arpl
lds
dec
sti
xchg
cmpsb
mov
push
in
std
push
xorb
cmp
dec
xchg
ja
lock
es
arpl
adc
push
pop
outsb
pop
out
je
scas
mov
mull
pop
mov
push
mov
in
inc
push
sub
in
jbe
lret
add
pop
adc
outsl
push
lahf
int3
mov
xchg
adc
aam
mov
cs
out
mov
and
out
xchg
aas
push
xchg
dec
cmp
aas
dec
adc
imul
fstpl
inc
sub
adc
sub
dec
ret
int
or
int
divb
adc
lea
lea
mov
inc
shlb
out
inc
in
out
or
dec
sahf
mov
ss
sub
dec
mov
ds
or
pusha
xor
dec
pop
xor
push
lahf
jns
inc
adc
cmp
cmpsl
js
lcall
loopne
js
sub
push
imul
xchg
xchg
mov
add
out
xchg
sbb
cmp
setnp
sub
mov
push
repnz
mov
popa
aam
fsubs
std
scas
ja
aam
pushf
icebp
pop
mov
mov
sub
mov
stc
xchg
hlt
inc
fstp
lods
or
pusha
adc
icebp
add
sub
push
aaa
aam
jl
popf
clc
aam
shlb
cmp
xchg
aam
jnp
dec
mov
lods
shlb
loope
sahf
rcrl
stos
inc
sahf
mov
cmp
xor
mov
in
pop
pop
insb
rcrl
shrb
test
xchg
cli
xchg
mov
adc
out
int
jecxz
adc
movl
mov
repnz
fildl
xchg
or
movsb
in
dec
enter
push
enter
jae,pt
add
movl
lahf
incl
mov
or
inc
push
imul
inc
mov
mov
mov
and
rcll
cmpsb
mov
and
pop
leave
test
fldt
ficomps
sbb
jmp
push
adc
push
xchg
sub
sbb
mov
lret
inc
sub
fstps
mov
das
stos
jg
mov
mov
push
lret
dec
aas
call
aaa
fsubrl
lahf
mov
jp
push
push
pop
push
aam
nop
arpl
scas
adc
sahf
stc
or
push
or
mov
cmp
mov
in
lahf
push
lods
jge
faddl
cmp
ret
or
in
inc
aaa
insb
adc
fxch
movsb
push
test
mov
es
xchg
jnp
push
ja,pn
jl
sub
out
push
add
loopne
stos
arpl
sub
xor
adc
aam
repz
inc
inc
bound
into
or
push
push
scas
add
je
aad
xchg
repnz
xchg
insl
repnz
jb
dec
daa
outsb
xor
mov
push
pop
adc
sbb
mov
movsb
dec
jmp
test
lahf
adc
or
mov
mov
sti
jecxz
fcoml
and
and
xor
inc
ficoms
mov
aam
mov
mov
pop
loopne
cmp
xor
icebp
aam
push
aad
add
mov
addr16
adc
inc
rclb
add
adc
add
ljmp
jecxz
mov
mov
xchg
jl
aad
inc
add
stos
inc
inc
pop
dec
jo
dec
sbb
inc
es
xlat
add
sbb
clc
xor
jo
jno
popa
adc
aas
adc
mov
mov
mov
jle
dec
cmp
pop
ss
lret
mov
sbb
sahf
mov
mov
data16
jle
movsl
sbb
repz
into
mov
ja
aad
stos
jo
cmpsl
fldl
hlt
push
loope
pop
or
add
mov
out
or
shrb
mov
dec
insl
mov
xor
test
mov
sbbl
mov
cmpb
jno
shrl
out
shrb
cmp
mov
movsl
push
ss
add
hlt
jne
add
lcall
mov
inc
fwait
pop
leave
cld
sbb
push
cld
movsl
ljmp
sub
mov
sbb
pusha
mov
lahf
jp
add
imul
pop
iret
repz
mov
or
inc
data16
mov
out
sti
mov
mov
testl
jo
sbb
fisubl
punpckhdq
or
xchg
out
jnp
cmc
xor
iret
stos
mov
insl
aam
mov
aad
inc
subb
stc
testl
aaa
add
adc
jbe
ljmp
outsl
add
inc
dec
int3
lret
pop
xchg
jae
xor
xor
stos
push
push
or
loop
push
xchg
popf
shr
loopne
pop
call
test
mov
roll
cli
jecxz
sbb
pop
or
adc
cwtl
or
xchg
ljmp
and
int3
xor
call
sub
cmpb
loope
es
pop
mov
mov
cmpsb
inc
cld
or
out
pop
enter
push
cmpsb
push
dec
or
hlt
ja
lds
inc
stos
adc
pop
adc
cwtl
mov
dec
and
push
pushf
int3
lcall
in
add
test
dec
cltd
mov
cltd
xor
jp
sub
scas
and
sbb
into
sub
mov
xor
rol
xor
pop
pop
pop
cmp
dec
cmp
icebp
sbb
popa
out
cmp
dec
mov
movups
cli
and
lds
xor
inc
nop
cmp
lahf
outsl
xor
rol
or
sti
jmp
jns
push
ss
fadds
in
sub
adc
outsb
xchg
mov
movsb
pushf
adc
lahf
pop
test
out
lds
sub
dec
add
jne
aam
mov
add
inc
jge
jle
cmp
push
pop
mov
in
imul
divb
repnz
bound
icebp
es
push
or
dec
shll
movsb
sbb
or
cmp
scas
push
xlat
or
neg
popa
push
flds
sbb
fwait
mov
test
xchg
pop
mov
cmp
je
stos
inc
shlb
dec
icebp
push
movsl
fldl
or
sti
mov
jo
cmp
or
sub
and
jg
mov
nop
iret
dec
and
inc
adc
or
mov
add
dec
filds
mov
mov
sbb
lret
mov
repz
cltd
push
movsb
lret
mov
dec
push
mov
in
loope
mov
mov
jnp
cmp
adc
mov
jbe
or
pop
pop
imul
call
lcall
sbb
pop
and
negb
lods
mov
xor
ret
xchg
jno
jnp
lods
dec
sbb
mov
mov
dec
cmp
outsl
add
fnstenv
push
addr16
imul
lds
in
push
mov
and
nop
sub
xor
mov
jge
xchg
mov
out
cmp
cltd
mov
orl
lret
jge
inc
lcall
scas
xor
xchg
mov
out
rcrb
test
push
xor
scas
push
lcall
and
in
pusha
fbstp
jge
lock
sub
les
mull
sub
popa
jmp
mov
xor
jecxz
mov
push
jnp
add
push
out
je
jno
hlt
xor
notb
add
fwait
or
dec
lret
clc
push
hlt
xchg
mov
aas
mov
jg
out
sub
xor
repnz
mov
mov
or
lret
ljmp
xor
and
or
ds
in
pop
jmp
mov
sbb
mov
fstpt
in
adcl
leave
adc
out
jge
cmp
add
fbld
sub
mov
insb
and
adc
xor
cmpsb
fwait
dec
fwait
je
cltd
clc
xchg
push
loop
fiaddl
xlat
cmp
push
jbe
inc
lcall
mov
lahf
add
divb
or
pusha
orl
mov
cmp
jo
pop
add
pushf
aaa
roll
cs
inc
adc
inc
addb
push
lahf
and
aas
pop
add
sarb
or
cli
mov
or
mov
aaa
push
lods
adc
stos
and
jmp
xor
mov
testb
xchg
std
lret
orl
dec
fldenv
das
insb
sub
f2xm1
xchg
les
lret
mov
cmpsb
mov
jne
stos
mov
xchg
adc
scas
push
negl
mov
popa
and
in
js
xor
pop
popa
lahf
push
lock
cvtps2pd
stos
pop
and
imul
aam
cmp
rcr
xorb
jl
cmpsl
cmp
lea
ss
push
ds
dec
cltd
mov
roll
fidivs
fistl
mov
lods
es
push
xchg
das
fimuls
test
in
pop
jg
fcmovb
mov
mov
sub
sbb
aam
adc
pop
jmp
les
sub
push
dec
cmp
and
mov
sub
imul
mov
inc
push
ljmp
push
sti
inc
leave
ds
cmpsb
pop
xor
xor
cltd
mov
stos
or
push
negl
mov
aam
test
cmp
cmp
push
xchg
stos
test
push
into
loopne
insl
outsl
mov
out
aad
adc
fmull
pop
les
rcrb
sub
xor
popf
inc
movsl
push
clc
mov
add
call
pop
fisttpl
outsb
cmp
lret
mov
cmp
push
push
out
and
add
sbbl
push
mov
nop
mov
sbbb
out
arpl
orb
mov
and
lret
mov
int
lahf
pop
xor
outsb
jae
cmp
or
movsb
lcall
mov
lods
dec
sahf
addr16
and
add
xchg
hlt
loop
aad
push
jg
inc
in
testl
call
jbe
cmc
pop
mov
enter
sbb
pop
movsl
aad
ret
lcall
inc
sub
xchg
push
jne
pop
adc
cli
cmp
popa
jb
icebp
or
push
pop
xchg
sub
imul
push
ss
lods
adc
mov
repnz
sub
jo
jns
mov
pop
cwtl
hlt
and
xor
and
jg
or
mov
aam
sti
sub
inc
mov
sbb
js
push
popf
data16
shr
jge
sub
add
sbb
mov
add
push
sub
jnp
in
int3
stos
or
sbb
out
das
aas
push
and
or
hlt
and
push
push
push
mov
jle
sbb
into
lret
test
gs
push
unpcklps
pusha
out
xor
test
into
loopne
ja
mulb
xor
adc
adc
lret
loop
push
xchg
aaa
pop
and
psubw
xor
addb
sub
cmp
adc
outsl
inc
cmc
mov
arpl
or
adc
shrb
adc
dec
mov
inc
pushf
loopne
into
mov
shlb
add
in
cmp
aas
sub
fmul
out
jp
call
jb
push
fdivl
loope
xor
ret
lods
lcall
enter
sbb
insl
mov
loop
jne
sahf
sub
or
jp
inc
jecxz
in
push
hlt
mov
shrl
outsl
pusha
dec
int3
cltd
in
popf
mov
outsl
adc
sbb
inc
cmp
xchg
stc
push
mov
sub
dec
inc
dec
sti
adc
or
shll
loop
sub
dec
in
bound
testb
sahf
mov
aaa
lods
pop
pop
lret
insl
and
scas
cmp
stos
imul
cs
lret
test
mov
shll
sbb
loopne,pn
outsl
out
pushf
sahf
jp
cmpsl
xchg
inc
es
xor
mov
rol
and
inc
andl
push
iret
jg
call
sub
lahf
rcl
repz
shr
movsb
xchg
aaa
push
jno
and
mov
call
shrl
stc
je
enter
fldt
dec
aad
in
shl
popa
xchg
push
scas
pop
inc
scas
stos
in
std
rolb
mov
ds
test
jb
mov
inc
daa
sub
loope
add
int3
es
mov
jae
jnp
push
sub
out
sbb
cmp
inc
or
hlt
cmp
mov
fxam
jo
int3
add
xchg
jge
leave
lock
push
mov
mov
in
add
inc
add
movsb
adc
cmp
jmp
in
xchg
test
out
loop
adc
leave
pop
in
int
scas
or
dec
push
push
lret
jmp
xchg
inc
gs
or
icebp
out
addb
stc
fstl
jp
lret
dec
cmpxchg
fsubrs
push
iret
pusha
push
pop
cmp
loop
inc
in
shrl
xchg
push
lock
sbb
adc
jle
add
lret
inc
push
mov
or
xchg
sar
sub
insb
push
pop
or
add
adc
mov
sub
cmc
jns
stc
sbb
aas
in
jge
or
adcl
cmp
leave
cmp
jmp
frstor
and
push
out
lret
rclb
call
lret
mov
xor
add
sti
aad
jo
dec
xchg
mov
jecxz
in
cmp
bound
hlt
je
sub
sub
adc
sahf
cmp
xor
jbe
lds
jl
test
xchg
out
int3
pop
cs
std
bnd
xchg
fwait
cwtl
loopne
adc
push
incl
jns
adc
pop
pop
add
mov
shrb
ror
repnz
xorl
cli
iret
cli
jge
icebp
inc
mov
dec
lahf
shrl
jmp
push
aad
xchg
add
mov
inc
push
cltd
pop
je
adc
daa
xchg
add
jg
outsb
lea
xchg
pop
sti
les
push
dec
jne
cmc
std
xchg
js
test
mov
mov
pop
push
cmpl
lea
pushf
xor
test
repnz
outsb
sahf
stos
aas
inc
cli
push
std
jecxz
call
lods
mov
push
jle
insb
mov
lret
sub
mov
loop
dec
sub
cld
lret
test
addr16
mov
adc
cli
neg
cmc
dec
mov
xlat
push
pop
pop
inc
test
in
cli
adc
fwait
mov
jmp
sbb
loope
movsb
aam
mov
arpl
mov
add
push
into
ret
cld
stos
and
out
xchg
fadd
es
sbb
mov
int
arpl
xor
lds
mov
je
lds
call
int3
jle
push
out
in
dec
xchg
xor
ret
dec
adc
lods
xor
int3
ja
enter
cmc
out
je
xor
imulb
std
xchg
stos
out
add
inc
jge
sbb
call
push
sbb
dec
out
in
adc
pusha
data16
shlb
mov
push
aad
test
test
loope
sbb
cli
jb
or
rol
dec
pop
sub
mov
mov
incb
fwait
out
aaa
and
xor
call
shll
shl
out
xor
add
cmp
or
or
and
sbb
cmp
cmp
psubsb
push
lcall
mov
ficoms
jl
jp
push
jbe
or
mov
popa
push
popf
imul
mov
mov
call
jle
rorl
and
adc
hlt
imul
xchg
dec
movsb
ret
adc
jbe
cmp
outsl
jns
loopne
sub
pushf
fsubs
add
cmp
je
negb
sbb
cltd
aaa
int
es
add
xchg
inc
and
add
bnd
cmpl
sub
mov
jbe
xor
push
mov
lcall
fistps
icebp
test
subb
shl
xorl
inc
mov
sbb
or
dec
shlb
sbb
and
lcall
mov
scas
push
mov
mov
cmp
cmp
xchg
mov
fwait
pusha
mov
inc
mov
mov
sahf
push
inc
fs
popf
inc
cli
lock
push
fwait
mov
out
orb
adc
sub
jg
stos
cmp
ja
leave
dec
scas
adc
imul
fnstsw
int
adc
dec
cmpsl
xchg
test
out
call
jp
mov
jns
sbb
sti
inc
mov
cltd
ret
jge
sbb
add
jmp
in
cs
js
fsubs
sbb
jo
ficoml
shrb
imul
push
repz
mov
scas
add
loopne
fisttpl
push
dec
sti
lahf
xchg
jle
faddp
out
popf
sub
pop
jp
mov
push
cmpsb
sbb
and
sbb
or
cmpsb
xor
shll
mov
mov
add
mov
sti
or
jo
test
faddl
mov
test
subb
lods
xchg
adc
fimuls
loope
push
mov
cmp
ss
int
pop
push
aam
out
adc
scas
pop
call
pop
popa
pop
daa
dec
sub
mov
std
xchg
add
out
fcompl
cs
aad
fsubrs
add
sbb
cmp
jl
and
push
push
push
sub
dec
mulb
mov
xor
shrb
mov
xchg
add
mov
test
cmc
cmp
into
mov
mov
cmp
cmp
rorl
arpl
imul
mov
loopne
push
cmc
rcr
stos
xchg
dec
fidivrl
js
xor
mov
xchg
adc
sub
ds
aad
mov
negb
dec
out
in
jecxz
fcompl
enter
adc
or
mov
je
sub
fmul
sbb
mov
lods
inc
ds
xor
movsl
cmpl
mov
pop
popf
mov
lds
or
lcall
dec
xchg
jno
fs
shl
inc
lds
push
insb
inc
pop
inc
add
jo
or
movsl
and
outsb
xor
or
xchg
xlat
push
fmul
gs
pop
repnz
pushf
pop
daa
mov
nop
and
or
call
icebp
sbb
loopne
push
shl
pushf
aas
pushf
pushf
sbb
sahf
aas
loope
in
dec
orb
pop
sbb
xchg
adc
into
adc
xchg
xor
pop
mov
inc
dec
xor
clc
pop
xchg
shlb
xor
adc
or
popf
cmp
jge
mov
xchg
xor
mov
aas
pusha
jb
std
add
mov
push
scas
rcrb
movsb
ficoml
imulb
call
stos
dec
xchg
imul
adc
adc
inc
add
rorb
test
scas
in
dec
fldz
jp
xchg
aam
lahf
mov
lock
xchg
dec
xchg
mov
xchg
sub
mov
out
fstpt
dec
push
mov
icebp
jnp
adc
jmp
jg
sub
dec
mov
scas
js
daa
and
mov
mov
test
ror
mov
adc
stc
push
jno
insb
movsb
addl
mov
jl
xorb
dec
sbb
and
mov
decb
cmpl
aad
lret
mov
in
add
imul
pop
test
lock
lods
xor
cmp
lds
jge
jno
sar
sbb
jge
mov
not
pop
ja
loope
xchg
aaa
rolb
lock
mov
les
cmp
ret
jo
adc
dec
xchg
orb
lahf
incb
jo,pt
mov
jae
xchg
pop
inc
nop
adc
lods
add
push
gs
lcall
fnsave
aam
cli
mov
das
mov
imul
adc
push
jo
cmc
xchg
dec
lods
aaa
dec
push
mov
dec
sbb
fnstcw
fldenv
cmp
and
push
dec
mov
stos
out
int
jge
int
aas
movsb
icebp
iret
xor
addr16
mov
pop
incl
mov
lock
stos
gs
mov
cld
inc
push
jg
ret
data16
adc
jg
out
int3
mov
out
jle
insl
mov
sub
inc
pop
sbb
xchg
and
xor
mov
or
test
pushf
mov
orb
xchg
or
mov
test
or
pop
stc
int
fcos
jp
in
pop
lahf
dec
mov
cmp
push
adc
subb
dec
xor
sbb
pop
cmpsl
add
shl
xchg
cltd
jl
mov
into
ret
cs
fwait
xchg
or
fcmovnb
adc
add
sub
sub
xor
rorl
shll
fsubr
stos
pop
sbb
rorb
cld
lock
fxch
pop
pop
cmp
mov
cli
insb
or
xchg
push
mov
sub
sub
and
jne
cli
mov
in
push
inc
sti
mov
les
mov
or
rolb
fdivs
jmp
push
push
mov
lcall
insl
mov
cmp
mov
mov
ret
fidivl
jecxz
xor
emms
movsl
push
cmpsl
xchg
pop
mov
jle
mov
adc
stc
cmp
xchg
mov
dec
stos
jle
daa
in
jle
out
push
and
jge
mov
fiaddl
xor
lods
sti
push
pop
mov
sbb
cmp
jge
outsl
mov
jge
imul
inc
cs
fwait
jmp
enter
enter
stos
lds
sbb
mov
jle
mov
xor
cmp
jno
shl
cmpsb
lock
sbb
cltd
xchg
xor
jp
dec
test
push
mov
or
push
scas
ds
rorb
cmp
js
bound
mov
imul
jmp
testb
repz
sahf
xchg
movsb
lea
imul
pushf
or
js
cmp
dec
or
jecxz
sub
xchg
mov
stos
popa
or
sub
adc
lods
decb
test
fisubrl
inc
rcll
repnz
loope
pushf
clc
iret
pop
lcall
add
sahf
and
mov
int
inc
arpl
test
loope
sub
jg
pusha
repz
out
or
pop
je
call
in
outsb
ds
fisubl
fistl
pop
nop
mov
in
out
jnp
jb
adc
push
bound
mov
mov
adc
jbe
inc
jg
jns
div
jl
flds
lock
inc
repnz
push
ret
scas
lcall
fmul
mov
in
test
sbb
ljmp
fdivrl
mov
pop
pop
iret
cmpsl
sbb
add
pop
xchg
outsb
push
fidivrs
fmull
lret
outsb
sbb
popf
ret
aam
pop
cwtl
popa
mov
data16
mov
out
push
mov
notl
js
sub
cmp
push
movsb
dec
js
push
xor
mov
jb
xor
mov
insl
or
mov
mov
loopne
sbb
sbb
inc
out
std
mov
sbbl
mov
xlat
movsl
mov
push
nop
scas
loopne
cmp
leave
movsb
and
and
pop
cltd
mov
cmp
jg
and
and
mov
mov
dec
test
jle
or
xlat
xor
pop
cmovae
in
sub
add
push
push
mov
aam
cmp
adc
jbe
cmp
lea
mov
xchg
and
pop
and
dec
cwtl
notl
inc
mov
inc
arpl
insl
jge
pushf
jne
add
and
mov
rorb
jno
adc
pop
and
mov
scas
add
loope
lock
sahf
sbb
icebp
insl
adc
jge
out
in
test
xor
das
jbe
sbb
ss
icebp
push
or
pop
jp
push
cltd
xchg
movsb
push
pop
ret
mov
std
mov
out
adc
imul
test
sbb
mov
fiaddl
mov
jmp
shll
mov
xchg
and
sub
imul
out
iret
and
scas
and
cmpsl
dec
jg
xchg
xbegin
cmp
adc
xor
cmp
mov
sahf
es
xchg
iret
or
les
push
add
inc
pushf
decl
in
xchg
stc
sub
cmp
ja
rorb
insl
cmpsb
sbb
aam
pop
popa
adc
inc
mov
stc
orps
scas
fisubrl
sbb
add
sbb
pop
mov
jle
add
mov
clc
in
dec
mov
fistl
cli
fcomp
mov
scas
pop
scas
xchg
cmp
mov
fldl
psubsw
cmpsb
jns
jmp
sahf
insl
mov
inc
aas
jae
mov
push
lahf
mov
mov
inc
and
mov
lock
and
pop
add
outsb
bound
loope
test
movsb
sti
lea
push
daa
and
call
dec
insb
pop
add
mov
push
xchg
cmp
inc
mov
sub
adc
nop
punpckhwd
push
push
mov
test
or
mov
sub
push
pop
sub
outsb
or
ja
xor
jl
stc
sti
push
lahf
mull
xor
movsb
or
xor
cltd
test
incb
mov
push
in
cmpsl
mov
int
icebp
push
sbb
stos
je
inc
dec
imul
dec
mov
addr16
test
cmpb
fsubp
push
stos
mov
and
adc
mov
nop
mov
es
adc
and
out
decl
aad
lds
orl
sub
mov
outsl
push
imul
xor
mov
jg
fiadds
data16
and
test
mov
imul
add
adc
in
sbb
mov
lcall
jb
pcmpeqb
andb
pop
xor
cmp
cld
jecxz
dec
jmp
mov
or
dec
dec
xchg
movl
adc
arpl
lret
push
or
addr16
dec
push
les
test
xchg
sbb
push
cmpb
scas
out
xlat
fimull
jecxz
repnz
push
jmp
fwait
ret
and
stos
xor
lock
nop
sub
mov
dec
add
dec
and
jge
or
cld
xchg
aaa
adc
int3
div
cmp
xor
sbb
loop
neg
pop
sub
sbb
stos
mov
sarb
ljmp
jp
stc
orb
notl
out
or
pop
sbb
fiadds
dec
jno
pop
lahf
lods
aas
pushw
jp
push
je
fidivs
or
cmp
sub
jnp
or
pop
out
movsb
outsl
shrl
cmp
sbb
mov
cmpsl
movsl
sbb
arpl
sub
pop
add
jno
mulb
das
pushf
xchg
stos
cmp
cli
ljmp
mov
les
mov
std
jge
cmc
mov
aad
mov
fs
adc
pop
inc
aad
stos
xchg
dec
icebp
jg
bswap
sub
insl
and
popf
and
rcrb
sub
sbb
bound
adc
xor
fists
jb
jne
or
in
enter
les
pushf
lahf
dec
test
in
xor
clc
sbb
sub
inc
xor
aas
in
mulb
fisubrs
jb
push
popa
and
leave
je
push
imul
push
das
mov
test
pop
inc
std
lods
xchg
mov
sub
movsb
call
in
out
je
dec
dec
shlb
das
hlt
jns
adc
mov
jne
loope
and
mov
ret
or
add
rorl
bound
or
loopne
push
sbb
jae
or
sub
lret
xorb
jno
inc
xchg
sub
adc
adc
arpl
xchg
or
dec
adc
outsl
insb
int3
push
js
mov
fdivp
inc
in
xchg
lahf
pop
pop
pop
popl
test
scas
cmpb
popf
push
aaa
int3
cld
test
insl
mov
dec
dec
imul
inc
inc
sub
mov
cmp
inc
mov
gs
jno
sahf
orl
ljmp
sbbl
orl
pop
pop
xchg
cmp
leave
aam
in
shll
lea
aaa
popa
sbb
push
push
adc
mov
pop
or
push
inc
dec
pop
inc
xacquire
nop
mov
mov
pop
mov
xchg
subl
mov
inc
inc
pop
mov
call
inc
adc
xor
icebp
cmp
leave
push
lods
dec
loop
incl
call
xchg
mov
sbb
movsl
bound
push
ret
lret
iret
cmp
movsl
adc
lods
clc
push
mov
flds
pop
sbb
dec
push
fildll
imul
arpl
sahf
out
fildll
je
lcall
inc
dec
loope
xor
cld
insl
dec
jecxz
mov
cltd
leave
mov
lods
add
add
lret
jle
dec
ja
push
mov
out
jb
faddp
outsb
add
or
test
push
add
fadds
clc
sbb
mov
xlat
jno
in
cmp
inc
add
loop
aam
out
pmullw
jne
and
pop
bnd
and
jbe
ret
sbb
insl
mov
or
cld
bound
cmp
sub
imul
push
push
cmp
or
jno
mov
inc
fisubl
orb
out
dec
aad
inc
push
sub
pop
inc
dec
sub
lods
or
loop
inc
or
push
inc
push
sarb
push
dec
jg
cmp
nop
rcr
mov
cmp
pop
in
pop
addl
in
mov
dec
nop
xor
add
loopne
insb
jmp
lods
mov
xchg
test
fsubs
add
xchg
xchg
fwait
imul
test
and
dec
mov
dec
mov
adc
jmp
dec
sub
daa
adcb
mov
pop
loopne
js
mov
das
add
push
mov
adc
cmpsb
add
aam
pop
mov
add
std
mov
jg
xor
sub
dec
pop
in
jb
xchg
xor
xchg
loopne
cmp
int
or
push
stos
fidivrs
mov
push
add
inc
xor
jbe
in
push
push
pop
push
in
adc
sub
cmp
adc
notl
jnp
pop
in
pop
mov
sub
add
leave
lahf
out
add
push
int
adc
jge,pn
bound
iret
daa
push
filds
sub
pop
in
adc
cmp
inc
mov
xor
sub
fwait
iret
pop
or
jnp
mov
mov
out
lods
rcrl
int
dec
sub
pop
stc
repz
test
movsb
mov
inc
inc
and
ja
push
test
cltd
mov
jne
mov
fildl
out
or
nop
nop
inc
popf
in
rorl
pop
jb
fadds
scas
sbb
cwtl
jno
pop
cmc
adc
out
popf
mov
push
pusha
les
ja
lea
lea
in
cmp
pop
in
insl
cli
gs
add
ja
out
sub
add
jp
push
insb
scas
adc
les
add
and
pop
popf
jb
daa
push
add
sbb
mov
rorb
xor
shlb
mov
pop
das
out
rorb
aad
sbb
adc
rcl
outsb
mov
xchg
stos
jl
mov
outsl
dec
and
inc
int3
and
sbb
sub
mov
fwait
jnp
add
cmp
jle
cmp
adc
push
fldt
stos
sbb
cwtl
ret
or
jno
ret
inc
mull
imulb
fisubrs
hlt
mov
mov
inc
cs
adc
xor
lods
test
jle
xor
imul
cmc
or
adc
imul
fnstcw
jmp
add
lfs
add
or
pop
dec
rorl
ret
lock
lea
adc
outsb
outsb
xchg
inc
cmp
fdivrl
mov
sub
call
mov
mov
lcall
aad
xor
pop
cmp
loopne
mov
movsl
sub
mov
jp
and
pop
aad
into
cmp
in
sub
notb
orb
ret
cmp
jbe
stc
cli
aas
leave
or
in
xchg
or
jp
lcall
and
repnz
sbb
push
adc
jg
sar
xor
decl
sub
in
loopne
ljmp
adc
mov
xlat
inc
sbb
mov
stos
sub
xchg
lods
scas
gs
stos
fs
scas
mov
sarb
inc
inc
loopne
popf
shlb
lods
push
jle
xor
insl
outsb
movq
mov
notl
jmp
pop
jge
cld
adc
jp
aaa
add
lock
mov
jbe
pop
hlt
sub
jmp
out
dec
sub
mov
inc
gs
dec
inc
aam
cwtl
cmpsl
xor
sub
mov
arpl
out
mov
out
in
decb
test
push
mov
arpl
in
cmp
or
in
ficoml
lsl
push
add
ja
in
rolb
add
cli
scas
popa
jg
test
pushf
pop
jno
adc
ds
sti
jge
cmp
in
scas
jae
gs
and
les
not
test
adc
cmc
fcmovne
fs
mov
int3
sbb
xchg
and
mov
sub
mov
xor
test
cltd
lret
mov
scas
sbb
fmuls
add
mov
or
mov
pusha
mov
inc
arpl
push
and
mov
notb
scas
adc
xchg
add
rolb
inc
sub
leave
cmpsl
inc
adc
or
pop
in
push
sbb
mov
cmp
loop
lahf
popl
es
mov
stc
jecxz
dec
gs
aad
fisttpl
ss
push
pop
into
dec
sub
stos
or
adc
movsl
fcmovu
sub
and
dec
nop
ss
jp
push
rcll
push
cmp
sbb
rcll
mov
sbbb
lahf
mov
cwtl
test
dec
adc
mov
add
cmpsb
add
mov
cld
inc
mov
mov
fcmovnu
in
fldenv
jge
lret
ror
jp
dec
int
xchg
les
xor
inc
popa
and
je
insl
shll
insl
frstor
stos
in
xchg
xor
fistpll
stc
xchg
cmc
imul
int
cmp
cld
adc
jbe
inc
pop
inc
cs
mov
mov
lock
sti
test
cmpsl
adc
dec
cmpsb
mov
jle
xchg
cmp
loopne
pop
xchg
xchg
mov
je
push
xlat
cmp
mov
les
inc
fldenv
les
cmpsb
outsl
add
call
mov
ret
xor
and
adc
jg
popf
fs
xchg
or
fwait
stc
out
outsb
bound
outsl
iret
push
in
cmc
or
test
cwtl
popf
nop
js
popf
or
cmp
shrl
fwait
mov
sub
pusha
imul
jmp
xchg
in
lret
rclb
cmp
xchg
loopne
mov
pop
inc
adc
cmpsb
fst
push
fidivrs
test
lods
movsl
sbb
xor
cmp
int3
fst
sub
data16
out
fcmovnb
xchg
or
and
pop
jne
adc
cmp
or
ret
aad
sub
xor
nop
lret
lds
not
loop
jmp
icebp
daa
push
pushf
iret
lods
in
jmp
push
int
mov
pushf
push
push
int
xchg
push
movsb
ret
repz
incb
aas
shr
pop
repz
add
ret
pop
aam
fstl
shrb
and
push
lcall
mov
lret
mov
sbb
mov
or
sbb
pop
push
imull
mov
loop
in
sbb
jp
adc
mov
pop
jge
lret
adc
int3
ljmp
jo
addr16
push
jp
mov
ret
sub
popf
jmp
aas
or
imul
pop
pop
jbe
pop
lcall
decb
add
ds
xor
dec
mov
js
inc
mov
add
sbb
cmp
push
mov
xchg
daa
fidivrs
sbbl
jp
cmpl
xor
jno
out
xadd
aad
sub
mov
hlt
insl
jge
pop
push
inc
add
push
fldt
sti
add
pop
jno
add
mov
test
push
dec
or
sbb
cmp
inc
pushf
xchg
aad
call
inc
mov
pop
enter
xor
mov
mov
add
leave
orb
shlb
je
jnp
pop
int
clc
adcl
add
mov
aam
push
pop
mov
jmp
xlat
out
movsb
add
mov
movsl
fisubrl
xlat
sbb
sahf
jne
int
cs
mov
out
loopne
pop
and
insb
ffreep
data16
nop
mov
mov
daa
jb
fcompl
xor
xor
shlb
mov
mov
bound
mov
push
in
enter
inc
lret
xchg
loope
movsb
jmp
add
xor
inc
xor
xchg
sub
jne
lret
adc
adc
or
pop
scas
stos
andb
cld
mov
hlt
xchg
cltd
and
xlat
fistl
movsb
loopne
jae
fisubl
shrl
sbb
repnz
sbb
aas
mov
in
stos
fwait
rcrb
shlb
insb
mov
jae
out
movsb
js
cmp
xchg
lret
iret
jno
push
ljmp
jle
lds
lea
popf
aaa
out
lds
xchg
loop
ret
add
push
in
push
outsb
pop
movsl
push
data16
add
stc
cli
fucom
mov
sbb
push
lods
or
mov
xchg
ja
daa
jle
mov
or
push
sbb
out
cmp
dec
lahf
push
lea
aam
push
mov
mov
ss
in
xchg
mov
mov
lcall
push
loopne
stc
dec
stos
pop
push
pop
inc
jmp
arpl
iret
aad
stc
mov
xor
fistpll
rol
mov
sbb
sbb
cmpsb
jns
imul
add
arpl
ret
out
mov
enter
adc
nop
cmpsl
cmc
idivb
movsl
and
cs
pop
and
push
outsl
add
jns
mov
inc
aaa
inc
mov
imul
add
lahf
aas
jbe
inc
push
aas
clc
inc
repz
lcall
loop
test
pcmpeqd
out
xor
mulb
ljmp
jp,pn
insb
insb
movsb
aam
jb
iret
in
and
or
insl
repz
cs
dec
pop
push
notb
das
pop
addr16
cwtl
ret
jns
mov
sub
loop
push
jno
xchg
push
xlat
add
insl
mov
push
int3
pop
adc
iret
das
jbe
popf
or
mov
jl
sti
repz
push
dec
mov
sbb
cmpsb
fiadds
test
mov
shll
sub
popa
ja
xor
in
sbb
xchg
into
pushf
mov
or
or
popa
in
xrelease
lods
in
sub
pop
in
or
xor
mov
and
pop
pop
pop
mov
nop
adc
mov
mov
movsb
fldenv
setno
cmp
icebp
cmp
scas
pop
inc
inc
into
or
jp
aam
xchg
mov
rcrl
cltd
push
cmp
adc
push
xchg
and
xor
mov
push
enter
lret
adc
push
test
mov
xorb
out
ret
into
aad
inc
inc
cwtl
ret
jo
roll
mov
sbbl
je
pop
lcall
mov
data16
ret
inc
push
aaa
xchg
fisubl
cwtl
test
icebp
cmp
push
push
sub
outsl
aad
xchg
or
inc
in
test
ret
jmp
das
std
es
jge
vcvtss2si
xor
inc
dec
adc
jb
pop
jns
rcrl
call
popa
cmp
dec
das
in
adc
sbb
inc
inc
mov
jecxz
mov
ds
cwtl
addr16
int
lock
push
xchg
mov
pop
pop
dec
push
sub
cmc
mov
enter
add
addl
cmp
clc
sub
adc
or
xchg
sub
mov
and
call
fistl
idivl
mov
xlat
jne
adc
cmp
or
push
ljmp
out
icebp
or
repz
xchg
insl
adc
idiv
add
decl
pop
or
sahf
add
or
cmp
sub
stos
cmpsl
push
das
cmp
sub
out
pop
pop
call
setle
fstl
mov
xchg
mov
jp
xchg
fimuls
call
push
mov
jo
sub
push
dec
sahf
mov
xchg
mov
js
rolb
fsts
dec
int
dec
xor
stos
fwait
mov
dec
test
or
dec
sbb
mov
lcall
ja
jne
adc
jno
rclb
or
mov
inc
movsb
mov
mov
rorb
fmull
stos
addb
add
fmuls
cmpl
subl
inc
sbb
mov
and
aas
daa
add
cld
sub
mov
inc
faddp
or
push
into
mov
mov
dec
sub
sub
aaa
out
mov
aad
roll
or
out
ljmp
push
dec
negl
test
mov
loope
inc
sub
xchg
cmpb
jl
mov
repnz
loopne
hlt
ret
popf
jbe
das
adc
xor
and
add
ret
sub
fs
ljmp
sahf
pop
ljmp
loope
or
push
imul
orb
cli
fcomps
test
stc
shrl
pop
arpl
lea
cmp
in
pushf
daa
popf
loope
mov
adc
lcall
xchg
sar
dec
fcomp
popa
shlb
clc
jle
mov
cmp
fcmove
xor
add
sub
testl
cs
mov
push
adc
std
lcall
mov
adc
in
stos
sbb
js
pop
gs
loopne
jbe
adc
add
push
add
sub
sbb
lods
out
rorl
stc
inc
imul
sbb
jno
xor
sbb
xor
das
inc
mov
add
cmp
cltd
fsubl
rorb
dec
xchg
and
mov
push
mov
mov
and
jg
pushf
inc
repnz
add
mov
or
adc
adc
jp
inc
aaa
push
adc
adc
pushf
jl
ss
push
mov
out
push
add
push
sub
outsb
lods
or
push
lahf
cmc
xchg
jecxz
pop
jne
rolb
aam
int
xchg
lock
push
cwtl
mov
cmp
std
fucomip
jl
mov
or
cmp
ss
jns
xchg
inc
les
jns
pushf
cs
mov
popf
ss
push
popa
mov
ret
add
mov
fiadds
sub
mov
int
lock
shlb
cmp
mov
cmp
jecxz
xchg
pop
cmp
mov
and
scas
and
mov
sub
lret
insb
jp
sbb
aam
dec
xor
mov
dec
arpl
inc
imul
adc
scas
jae
inc
dec
outsl
data16
into
out
adc
repnz
push
or
fsubl
sub
lret
arpl
inc
in
out
popf
xchg
insl
add
in
shrb
jo
out
in
push
or
and
inc
sbb
and
adc
dec
in
ss
sub
pop
pop
mov
or
test
and
pop
xchg
mov
lds
jbe
jno
sahf
stos
in
lret
xchg
push
xchg
outsl
filds
test
ja
loopne
fdivs
jb
in
adcl
jmp
out
call
adc
mov
xchg
or
out
ljmp
out
fs
les
lds
lahf
lahf
insb
xlat
std
inc
repnz
int
push
xor
or
or
mov
dec
fnstsw
out
dec
dec
lcall
mov
inc
pop
mov
daa
mov
ds
cs
insb
xchg
sbb
inc
adc
mov
negb
xor
inc
lret
test
xchg
or
fcoms
scas
cmpsl
aas
cmp
stc
xchg
cmc
loop
insl
sbb
ljmp
sbb
adc
popf
push
insb
push
mov
pushf
outsb
inc
inc
rcrb
out
loop
outsl
push
popa
rcrl
add
lods
fidivrl
xchg
dec
aaa
insl
or
mov
or
adc
iret
aam
and
push
dec
loopne
out
sub
push
rorl
inc
push
push
adc
loope
cmp
cmp
jle
mov
out
les
mov
mov
sbb
xchg
and
jge
les
jns
mov
cmp
inc
mov
adc
mov
imul
hlt
fstps
int
dec
js
cmpb
mov
movsl
xor
fists
mov
mov
icebp
call
jecxz
arpl
pop
fldenv
gs
sbb
enter
add
pusha
xor
xor
lock
mov
roll
daa
cmp
inc
hlt
in
in
pusha
scas
jb
mov
inc
xchg
nop
ret
push
add
cmp
mov
subl
js
xor
adc
jb
sbb
mov
mov
daa
sub
sbb
bound
jo
or
in
mov
push
enter
pop
orb
aam
xchg
scas
ss
popf
add
add
dec
pop
lahf
xlat
invd
sti
cmp
dec
sub
mov
nop
dec
mov
sahf
insl
rolb
sub
ds
sub
sti
loope
nop
xchg
xchg
dec
or
pusha
lea
inc
es
les
movl
shlb
pop
sub
pop
mov
adc
cmp
pusha
push
fadd
cmc
xor
cmp
and
dec
out
pop
xor
pop
and
cmp
sub
arpl
fdivrl
inc
data16
push
push
ficoms
pop
into
and
jne
xor
mov
fdivrl
adc
shll
mov
rcll
fnstsw
xchg
int
cmp
or
mov
xor
jmp
lock
fsubs
xor
and
xchg
adc
pop
sbb
iret
jge
mov
xchg
cmp
jge
lods
xor
mov
xor
push
daa
in
mov
mov
cld
xor
adc
push
pop
aam
mov
adcb
int
cmpsb
into
stos
dec
rcrb
xchg
inc
jmp
xor
lea
imul
cltd
adc
cmpsl
fstl
ja
mov
jecxz
shll
mov
push
insb
adc
xchg
jl
jle
outsl
andb
pop
cmp
mov
mov
sahf
lods
inc
clc
sub
or
mov
cmp
lret
idivl
xor
dec
outsb
int
push
adc
sub
cmp
stos
push
add
add
mov
push
jecxz
imul
popa
dec
pop
stos
shrl
in
lret
in
clc
cmp
dec
pop
inc
scas
mov
pushf
add
test
je
or
ret
xor
push
push
inc
inc
movntps
rolb
cmp
jbe
dec
mov
mov
aas
push
js
xchg
into
jae
lahf
loope
adc
mov
jnp
pop
cld
pop
dec
cmpsl
xor
xchg
stos
movsl
dec
rorb
push
sub
ja
fwait
xor
sbb
enter
xor
imul
nop
and
gs
push
adcb
in
push
in
inc
xlat
xor
test
aas
fs
bound
imul
or
jg
mov
inc
addr16
dec
add
and
std
xchg
enter
shrb
adcl
adc
xchg
jb
jno
pop
push
push
scas
pop
rcrb
out
outsl
inc
scas
ud2
dec
popa
sbb
data16
aad
add
push
fnstenv
push
cli
sub
sahf
sarl
ja
fbld
movsb
fistl
insl
xchg
outsb
pop
movsl
sbb
xlat
mov
xchg
mov
sbb
pop
stos
push
iret
pop
sub
int
jns
subl
movsl
fsubl
adc
or
xchg
mov
andb
jbe
pop
pusha
ficomps
adc
xor
dec
add
pop
push
or
xchg
popf
leave
dec
xor
cmpsb
setne
cmp
cmpb
add
pop
xchg
mov
mov
inc
pop
iret
jmp
xchg
mov
leave
xchg
mov
xchg
xor
lods
and
in
js
enter
inc
jle
ret
insl
mov
xchg
das
xchg
cmp
testl
addb
adc
lock
out
mov
data16
aas
add
popa
mov
imul
nop
dec
in
sbb
jl
mov
xor
add
test
mov
adc
data16
cwtl
sub
xchg
cmpsb
add
and
xor
sub
lea
mov
mov
mov
test
pop
cmp
push
xor
pusha
test
rcll
or
and
int3
cmp
int
xchg
ret
push
push
lock
cli
fnsave
lock
lock
xor
and
and
inc
ret
rorl
mov
xchg
add
xchg
xor
testb
arpl
inc
mov
xor
mov
mov
divb
xlat
repz
in
push
test
notl
add
icebp
incl
scas
sahf
inc
and
stc
addr16
in
mov
lret
pop
fcoml
in
jl
fsincos
add
popf
cmp
out
lret
pop
sub
out
sahf
jl
in
and
add
sti
aam
imul
sub
jge
in
stc
cmp
pop
scas
cmp
add
push
push
pop
jle
and
jbe
sti
scas
popf
ja
jp
dec
cmp
lcall
sub
push
sub
call
hlt
xchg
mov
push
sarw
movsb
lret
mov
lret
outsl
mov
js
fldl
xchg
daa
mov
in
daa
sub
mov
frstor
out
fs
xor
cmp
push
out
mul
aaa
mov
loope
ljmp
jb
les
in
js
push
lock
sarl
mov
or
push
cmp
or
insb
mov
pop
or
js
mov
push
sub
sar
push
hlt
ljmp
inc
ss
add
clc
ret
ljmp
jo
addl
aam
divb
in
fldpi
mov
cwtl
aaa
push
fmull
mov
jns
fdivs
jae
lods
push
arpl
xor
scas
mov
lret
popf
imull
lret
adc
dec
xchg
inc
loope
sahf
sbb
arpl
rorb
insb
hlt
call
in
cmp
rcrl
add
in
xor
xor
lock
sbb
subl
cmp
pop
iret
sbb
push
mov
push
add
dec
cmpsb
stos
in
icebp
shll
gs
sahf
sub
scas
xlat
outsb
xchg
fwait
movsl
leave
push
push
ljmp
stc
jmp
adc
add
or
outsl
push
dec
outsb
ja
adc
push
std
leave
jecxz
inc
insl
lret
and
sub
inc
decb
ds
notb
lds
jl
frstor
cld
sbbl
jb
add
pushf
scas
xchg
sub
mov
push
sbbl
leave
outsl
push
sub
sub
mov
fldt
add
pop
xchg
in
dec
mov
mov
inc
push
sub
inc
lds
lock
lods
add
fcmove
std
jno
mov
stos
scas
jne
in
xchg
add
cmc
or
pop
pop
cmpsl
cmpsl
js
cs
adc
dec
aam
sub
mov
lds
push
add
mov
xchg
cs
and
test
int
inc
cmp
in
sub
mov
pop
les
xchg
cmp
insl
and
jmp
jae
jnp
insl
stc
rorb
js
xor
and
push
lods
jne
mov
dec
or
jp
or
int
ds
xor
inc
jmp
int
pop
sub
shll
daa
adc
shlb
jbe
rorb
iret
imul
fcompl
inc
push
inc
notb
inc
cli
jge
pop
mov
test
pop
jo
sub
mov
outsb
inc
and
nop
popf
and
sub
inc
adc
or
mov
push
push
adc
sub
mov
testb
dec
loopne
ret
mov
fisubrs
fwait
das
pop
mov
sub
insb
pop
cmp
in
adc
js
push
dec
gs
roll
xchg
inc
xchg
and
in
aaa
mov
or
shl
rcll
dec
ja
adc
jg
sbb
push
pop
jle
std
rorl
pop
pop
daa
sar
aam
or
icebp
sbbl
negb
cld
mov
sbb
into
lods
popa
add
jle
lret
xlat
das
enter
lcall
sti
adcl
shlb
xchg
sbb
pop
xor
pop
call
cmp
cmp
push
gs
push
test
sub
or
pop
call
lds
xlat
repnz
jecxz
push
addb
adc
pop
lret
jl
nop
cmc
call
out
jmp
or
hlt
lcall
mov
rolb
inc
jecxz
lods
fidivrs
sub
cmp
daa
fmuls
sti
push
movsl
scas
sub
jbe
xchg
out
xor
or
insl
adc
ss
adc
push
or
dec
out
xchg
inc
mov
lea
out
sub
mov
lods
in
and
adc
stos
cld
or
int
xchg
fs
data16
push
inc
cmp
xchg
jmp
xchg
sub
push
sbb
fisttpl
das
pop
cs
mov
enter
cmp
sar
pop
push
sub
lahf
mov
es
inc
inc
popf
sbb
pop
lahf
and
or
and
fisubl
mov
lahf
popa
jbe
fiaddl
lret
mov
outsb
pushf
xor
push
cli
and
lret
dec
mov
xor
push
out
push
push
pop
or
movsl
out
dec
mov
pop
popa
sbb
test
in
sbb
mov
sub
lods
int3
push
xchg
hlt
mov
inc
div
xchg
cmp
loope
stos
out
or
sbb
xchg
sbb
ds
jge
sub
push
push
mov
inc
adc
mov
push
mov
movsb
dec
mov
bound
push
mov
lcall
out
mov
ret
lret
cmp
rol
mov
sahf
out
mov
fmull
insl
repnz
mov
iret
loop
stos
out
and
scas
push
hlt
out
std
xchg
add
outsb
cmp
loope
mov
daa
test
dec
pop
daa
sahf
hlt
or
cmpsb
imulb
je
cmp
mov
xor
and
cwtl
out
inc
xchg
je
adc
add
imul
mov
lcall
notb
sbb
mov
ret
scas
out
push
xchg
bound
test
loope
pop
mov
aas
add
bound
sbb
push
add
xchg
ss
and
xlat
test
out
inc
addr16
int3
stos
pop
jp
je
mov
test
cmp
fmull
xchg
fisttps
cmp
mov
inc
movsb
ja
ret
test
jmp
ret
pop
inc
sbb
cmp
loopne
cmp
mov
mov
fdivs
inc
adc
fxch
cmpb
pop
or
iret
mov
pop
mov
fnsave
adc
mov
imul
loope
fildll
test
enter
mov
cmp
jg
or
xor
xchg
inc
push
sahf
loope
adc
shlb
or
push
fstpt
push
sbb
cltd
mov
enter
mov
in
push
lods
lds
mov
mov
movsl
jl
repz
or
lds
push
mov
fidivrl
mov
push
adc
ret
pop
pushf
push
aas
sub
int3
mov
dec
shr
xchg
cwtl
dec
negl
mov
or
sub
inc
lcall
or
inc
mov
icebp
push
fldt
loop
and
xor
fwait
mov
cmp
repnz
jmp
cmc
cmpsb
out
out
mov
std
js
lods
mov
xor
jne
cmp
lfs
int
out
mov
or
xlat
cmpsl
ds
les
push
inc
inc
je
mov
mov
sub
bound
mov
scas
stc
dec
leave
imul
test
jne
mov
adc
js
mov
clc
mov
jl
xlat
push
push
repz
lahf
sbb
mov
cltd
lahf
sub
cwtl
mov
mov
xchg
test
insb
std
mov
inc
and
es
jae
repz
add
cld
aam
sub
jo
into
jecxz
loopne
stc
xor
jne
or
inc
mov
rorl
push
jns
adc
dec
jl
movsl
cmpsb
and
sti
cmp
mov
aam
popa
in
xor
jnp
xor
sahf
xor
xor
lret
fs
sub
dec
sub
out
or
inc
add
outsb
aad
push
ret
aas
jg
fistl
and
nop
pop
imul
mov
pop
insl
in
subl
pop
adc
dec
lret
or
push
std
stc
xlat
jb
inc
insl
imul
fs
out
in
int3
in
mov
movsb
and
mov
or
outsl
mov
fidivrs
and
jg
pushf
dec
fs
pop
sahf
gs
jo
push
mov
lret
xor
pmaxub
cmp
push
nop
adc
cltd
push
jle
das
mov
es
pushf
mov
add
xchg
sub
ss
mov
xchg
cltd
jbe
pop
imul
inc
adc
es
dec
push
aad
mov
daa
and
xor
jle
repz
pop
cmp
xchg
xor
cmp
fucompp
insl
hlt
leave
sub
mov
push
sub
sub
fldt
add
dec
rcll
mov
lret
stc
mov
and
fistl
add
fisttpll
add
push
mov
dec
ret
xor
jecxz
inc
or
clc
cmp
sbbl
clc
movsl
pop
mov
cmp
in
insl
push
sbb
mov
sub
out
testl
mov
adc
gs
int
jo
or
loop
inc
mov
xchg
fcoml
cmp
or
cmp
fmul
insb
or
loopne
dec
in
rorb
pop
nop
test
outsb
movsl
mov
fdivr
inc
xchg
cwtl
mov
pop
stos
xchg
mov
inc
test
pop
outsl
push
or
fsubr
mov
mov
jnp
mov
cmp
rcll
xchg
mov
mov
movsb
fcmovnb
sbb
mov
jae
pusha
lds
ds
xor
jp
lods
mov
xchg
es
js
add
gs
push
dec
push
push
and
lock
mov
lcall
pop
test
push
pop
sbb
aas
out
xchg
mov
push
in
xlat
or
push
out
xlat
dec
mov
int
and
into
add
jne
das
pop
sub
jp
mov
cmp
dec
pop
jae
mov
xchg
sub
or
aam
push
stos
sbb
movsl
ljmp
loopne
cmp
sbb
mov
lcall
call
jecxz
mov
jbe
insl
pop
sub
pop
inc
add
fxch
iret
or
lds
add
nop
inc
sub
mov
jno
adc
icebp
mov
push
js
dec
mov
pop
xlat
or
test
dec
faddp
sbb
and
repnz
adc
int
xor
aas
idivl
ljmp
cli
adc
jb
lock
je
ret
pop
fwait
mov
dec
xchg
xchg
lahf
sti
mov
lods
in
rcrb
dec
inc
sub
pop
in
cltd
push
loopne
call
and
xchg
add
lahf
ror
cmp
pop
dec
and
mov
add
xchg
clc
imul
sub
xor
lret
xchg
xor
cmp
jl
lcall
jbe
js
cmp
call
dec
xchg
loopne
nop
pop
dec
jl
xchg
sub
in
mov
cmp
pop
lods
mov
andl
jae
dec
jg
add
xchg
loopne
mov
das
into
in
insb
stos
mov
cmp
xchg
movl
mov
inc
gs
inc
cmpsb
mov
add
outsb
dec
inc
push
xor
push
mov
test
data16
pop
or
pop
xchg
ret
lds
iret
fs
and
lea
and
or
jle
out
les
sub
cld
jo
mov
pop
mov
add
sub
cltd
scas
dec
add
jg
mov
lcall
cmp
sti
push
out
mulb
and
loope
pop
lea
mov
dec
push
dec
add
ret
imul
test
cld
jp
jecxz
xor
icebp
aas
fldenv
cmp
int3
jo
push
pop
test
aas
and
mov
pop
je
mov
jae
hlt
pop
dec
adc
iret
out
jno
adc
mov
insl
mov
das
inc
sub
jl
pop
and
loopne
fcmovnbe
xor
cld
mov
popf
push
sub
lock
movsl
sbb
stos
add
aas
pop
daa
aaa
mov
dec
xchg
mov
cmp
push
or
cmp
xchg
sbb
dec
cmp
dec
mov
cld
jne
sbbl
jecxz
inc
nop
fisubl
add
jns
xchg
pop
mov
jmp
stos
shll
iret
dec
jge
frstor
sub
mov
jl
leave
mov
push
push
divl
arpl
sarl
push
jecxz
das
bound
or
int3
sub
outsl
sbb
int
and
and
mov
nop
dec
and
sbb
sbb
push
in
lea
jne
dec
sub
sbb
js
mov
mov
cmp
mov
int3
sub
bound
ja
adc
dec
mov
xchg
jp
mov
popa
dec
push
sub
in
push
jb
pop
mov
and
xchg
stc
aas
mov
fildll
push
mov
pop
or
hlt
aaa
sub
sub
lret
and
or
push
push
fs
out
sbb
and
mov
popa
mov
stc
arpl
xchg
mov
test
or
sbb
notb
lret
xchg
cmp
loop
add
js
jg
cmpb
rorb
ud0
seto
pop
ret
lahf
lcall
xchg
push
lret
add
inc
inc
cmp
xchg
adc
xchg
add
ds
rolb
sbb
inc
mov
jb
out
pop
or
call
jb
mov
add
cltd
adc
es
xor
pop
add
les
loopne
mov
sti
ljmp
rcll
sub
sbb
lcall
pusha
push
repnz
dec
dec
and
mov
inc
shll
mov
sub
mov
and
mov
dec
mov
jge
enter
loope
pop
mov
sub
inc
push
in
mov
loope
in
dec
mov
cli
clc
sti
push
pop
add
fwait
pusha
int
mov
enter
sub
jns
rcll
inc
dec
xor
xor
jg
pop
cmpl
pusha
sub
lret
xchg
or
push
mov
std
mov
test
repnz
cmp
rorl
or
fistps
rorb
dec
in
add
and
nop
mov
outsl
sarl
test
cs
sbb
push
adc
std
inc
jge
out
fisubrs
dec
divb
ds
cmc
mul
pusha
js
jne
mov
dec
pop
mov
mov
push
imul
jbe
jo
je
adc
dec
call
xchg
popa
insb
insb
lods
repz
jns
mov
sbb
lcall
and
sub
orps
mov
or
mov
imul
scas
jl
sub
fisttps
enter
pop
cwtl
push
inc
repnz
outsb
mov
fldenv
lahf
lods
mov
fnstcw
mov
pop
clc
out
sbb
xchg
mov
cwtl
push
pushf
loope
out
inc
sbb
imul
sub
push
rclb
push
lock
mov
movsl
popf
jecxz
xchg
imul
xlat
adc
fsin
sub
jbe
adc
js
or
imul
cmpsl
push
add
cmp
inc
movntq
out
inc
in
adc
roll
sbb
rolb
mov
lds
pop
popa
jle
add
adc
pusha
shll
rolb
cli
adc
popf
int
outsl
rol
popa
je
movsb
dec
imul
mov
push
adc
xchg
es
xchg
sbb
imul
mov
nop
sub
inc
mov
aas
pushw
sbb
ljmp
js
inc
mov
bound
xchg
and
fimuls
roll
out
sub
in
or
and
mov
add
adc
pop
je
sbb
inc
add
jbe
out
or
in
leave
das
adc
mov
clc
mov
mov
inc
or
mov
push
adc
js
jp
mov
xor
add
int3
lods
push
inc
pop
cmpl
cli
and
jecxz
lcall
cld
jge
jns
pop
xchg
cltd
ljmp
dec
mov
call
gs
stos
std
xchg
sti
popf
cmp
sub
sub
sar
testb
xlat
in
fildl
loopne
movsl
xor
stos
push
sahf
stc
and
lcall
mov
mov
add
xor
pusha
bound
pop
dec
insb
add
stos
pop
ss
mov
and
sbb
jl
cmp
or
sub
sub
mov
mov
dec
cwtl
adc
xchg
loopne
xchg
mov
imul
in
push
add
mov
daa
mov
flds
mov
mov
dec
push
ss
and
pop
jle
in
maxps
adc
call
pop
shrl
jae
sbb
test
subb
stos
cwtl
xlat
mov
scas
lea
adc
mov
dec
xchg
scas
or
jge
xchg
push
mov
sahf
push
popl
mov
mov
rcll
jmp
dec
dec
inc
test
push
mov
sti
prefetch
mov
sbb
mov
xlat
mov
jae
rcrl
cli
addr16
xchg
jbe
in
push
jmp
xchg
arpl
xchg
aad
push
xchg
fidivl
lcall
jle
cmp
mov
mov
jg
xor
adc
mov
jl
rcll
in
decl
push
outsl
push
xor
push
mov
pop
mov
push
or
xor
lock
out
imul
fwait
into
mov
xchg
sub
pop
pop
xchg
test
push
aam
loope
xchg
xchg
cltd
sub
sub
push
fsubl
adc
xchg
ljmp
lock
pop
pop
dec
adc
fbstp
sub
fbld
cs
inc
inc
shlb
jl
mov
je
jns
add
je
faddp
ret
inc
lahf
sub
mov
int
xchg
sub
lahf
xchg
clc
imull
dec
mov
mov
rclb
movsb
cmc
sbb
xor
dec
ficomps
std
push
das
or
jmp
xor
mov
pusha
jge
push
push
inc
popf
in
add
dec
pushl
mov
les
push
outsl
xchg
jbe
mov
lods
inc
mov
xor
mov
xchg
cmpsl
or
pop
add
fisttpll
scas
jbe
mov
push
ret
add
test
push
dec
inc
or
adc
mov
mov
xchg
shr
adc
pop
mov
call
xchg
mov
pop
popf
ss
cltd
or
mov
call
pop
lock
add
faddl
ret
sbb
inc
cmp
lock
dec
xor
push
test
sub
fisubs
xchg
fadd
dec
xor
cmpb
dec
into
jp
pop
dec
push
ret
out
pop
cltd
testl
stos
lret
pop
xor
dec
outsb
icebp
push
xlat
pop
xchg
cltd
insl
push
xchg
mov
andb
repnz
sub
flds
jbe
xchg
mov
dec
lret
dec
push
mov
movsb
or
movsb
je
inc
enter
lods
hlt
cmp
fnstcw
daa
adcb
movsl
push
test
fadd
fwait
sbb
js
pop
insl
push
dec
mov
push
and
or
jo
fildll
jno
mov
xchg
or
dec
out
ss
jae
repz
std
push
xchg
xchg
lcall
jbe
xor
sti
ds
orl
push
adcl
xchg
adc
jne
cmp
movsl
inc
ss
ljmp
loope
in
sub
outsl
in
mov
mov
add
xor
inc
into
or
add
jge
push
aam
or
arpl
fwait
roll
movl
pop
fwait
jne
pop
dec
pop
stos
iret
das
into
dec
lock
push
pop
ss
mov
sarb
sbb
sbb
xor
cwtl
out
fmuls
sahf
or
in
mov
xor
cwtl
cmp
sub
inc
mov
lcall
das
cmpsb
pusha
cs
cmpsb
popf
cs
add
push
ss
clc
test
push
jle
xchg
sbb
xchg
and
dec
xor
adc
imul
or
rol
add
out
and
pop
cmovo
loopne
fistps
jo
pop
xor
out
lret
mov
adc
mov
lods
fstps
and
xchg
loop
pop
sub
push
push
or
fwait
out
mov
xorl
daa
fldcw
xchg
sub
sbb
fcmovnb
pushf
rcrb
xchg
fxch
jecxz
lret
jnp
outsb
add
enter
xor
sahf
pop
adc
or
loop
lret
int3
test
cmp
lret
loop
fists
mov
outsl
inc
imul
inc
js
daa
imul
jo
lea
jl
cmp
push
add
aam
lret
adc
adc
mov
leave
push
icebp
mov
sbb
cmpsl
pop
inc
gs
das
repz
jno
mov
cmp
add
iret
mov
sti
push
fwait
orl
leave
adc
lahf
jle
adc
or
sub
aas
mov
test
cmp
mov
pop
mov
cmp
movsb
dec
in
sbb
or
notl
pop
adc
sbbb
cmp
pop
lock
sbb
imul
sahf
jg
std
sbb
push
push
fidivs
cmp
icebp
insl
push
push
scas
add
sbb
ja
cmpsb
sub
push
sub
xchg
push
cmp
ljmp
movsb
add
sbb
mov
dec
fnsave
lret
in
mov
daa
sbb
aad
fwait
xor
add
nop
mov
or
arpl
inc
dec
cmp
inc
or
test
mov
dec
loop
and
mov
scas
mov
lods
les
or
inc
mov
mov
push
push
mov
je
lahf
popf
fiaddl
push
jae
bound
sarb
out
pop
jae
shrl
es
mov
outsl
xchg
or
sub
pop
adc
js
mov
shrl
mov
movsb
ret
push
mov
push
arpl
xchg
and
les
out
jb
push
sub
repnz
outsl
and
inc
hlt
inc
icebp
cmpsb
mov
jg
cmpsb
int
call
jo
add
les
fdivrl
xor
stc
mov
dec
mov
lcall
ds
push
cmp
stos
pop
mov
sub
lret
push
push
pop
das
out
mov
and
stc
and
out
inc
in
xchg
lcall
dec
iret
pop
add
push
lea
loop
enter
pop
test
push
xchg
mov
xchg
mov
test
ds
mov
fwait
xor
sbb
dec
sbb
les
pop
cmp
hlt
loopne
adc
mov
add
xchg
sub
xor
out
inc
cs
jecxz
test
mov
push
mov
mov
dec
aad
xchg
or
sbb
xor
lds
sbb
ret
imul
leave
jg
push
je
fwait
jbe
pop
cmp
xchg
jp
mov
push
xor
enter
xchg
test
mov
inc
icebp
pop
adc
repz
add
or
push
clc
xor
fcmovne
enter
inc
das
push
and
adc
ljmp
and
in
inc
xchg
lock
mov
mov
jecxz
shlb
push
push
repz
push
icebp
adc
sbb
pop
push
testb
dec
mov
xor
ret
mov
lcall
aad
add
lods
sbb
icebp
addb
out
jmp
push
and
mov
push
sub
scas
fisttpll
inc
sbb
xchg
adcl
outsb
mov
cmp
mov
add
jb
push
mov
mov
out
xchg
call
dec
lods
mov
adc
sbbb
gs
jp
mov
ret
jle
pop
push
inc
lret
dec
dec
fistps
mov
cmp
out
adc
jne
cmc
ror
sub
lds
mov
mov
lret
clc
ljmp
mov
push
lock
addl
in
jne
dec
mov
gs
pusha
mov
cmp
aam
lods
mov
or
cmp
or
inc
aaa
push
std
daa
sbb
fsubs
into
mov
sub
push
js
insl
fnstsw
or
adc
addr16
jmp
shlb
inc
adc
scas
sarb
push
jle
fcoml
lds
push
outsb
fiaddl
inc
insl
push
pop
sub
sahf
scas
je
sub
fwait
push
aaa
hlt
fiaddl
jne
cmp
cs
repz
cmc
fwait
push
mov
mov
add
mov
sub
sbb
int
loop
mov
in
mov
xchg
inc
lds
add
fs
test
test
mov
inc
stc
xorb
ds
ljmp
push
push
loopne
mov
mov
ds
ret
lds
decl
dec
adc
push
test
into
int
dec
add
and
mov
inc
adc
and
mov
cmp
test
pop
push
jge
pushw
mov
cli
lcall
jns
push
movsb
or
pop
cmp
idivb
insb
xchg
cld
fidivl
sbb
test
aas
std
aam
dec
add
test
stc
mov
jns
data16
inc
mov
mov
test
inc
mov
and
imul
cmc
add
inc
outsl
push
mov
jmp
xchg
xchg
and
pop
pop
ret
lods
mov
popf
test
mov
jmp
jmp
stos
dec
rorl
or
pop
jmp
insl
ja
mov
test
mov
lods
loopne
mov
mov
lods
pop
std
mov
and
jg
test
repz
sbb
cld
je
in
arpl
jo
xchg
xchg
ret
sbb
cmp
cmp
add
sub
dec
mov
jle
int
cmp
jmp
jle
addl
lock
rcll
add
in
aaa
or
insl
ljmp
idivl
mov
icebp
xchg
nop
insb
xor
mov
dec
jg
inc
sbb
cwtd
imul
dec
xor
leave
ret
cmp
fnstenv
andb
push
jle
push
jno
cmpl
jl
pop
aad
imul
jle
xchg
pop
push
or
in
or
rorb
dec
cmp
ss
push
loop
lret
in
out
sub
sahf
inc
and
pusha
xchg
sarl
dec
inc
mov
jp
mov
cwtl
insl
mov
iret
fistpll
gs
add
ret
dec
nop
lock
xchg
dec
sub
rolb
hlt
or
fldcw
popa
gs
out
stos
lahf
xchg
negb
add
cmp
out
cmp
addr16
xchg
or
daa
pop
mov
mov
cld
je
push
in
inc
ds
aad
inc
into
xor
mov
fnstenv
push
mov
push
loopne
out
mov
repz
mov
sub
sub
fistpll
cmc
add
cltd
lcall
mov
fnsave
je
jne
mov
fsubl
stos
jl
lds
mov
adc
sbb
adc
and
test
int
dec
movsb
movsl
and
mov
mov
imul
fimull
push
jae
or
and
adc
mov
mov
popf
sahf
add
mov
out
sahf
lods
sbb
insl
mov
test
dec
lods
cmp
mov
cmpsl
add
add
imul
adc
fldl
cmpsb
sbb
aad
cld
popf
xchg
and
ss
add
mov
dec
dec
shrl
out
pop
out
mov
insl
arpl
xor
lock
loope
addr16
jg
dec
mov
sysret
push
push
pop
xor
xchg
call
jmp
xor
mov
lods
es
xchg
test
into
fbstp
fs
cmp
ret
idivb
loopne
or
adc
push
xchg
mov
sbb
cwtl
test
rep
or
loop
push
lfs
dec
fcmovnbe
add
rorl
jle
sub
int3
pop
cmpsl
pusha
add
xchg
lods
xor
lea
xchg
xchg
xchg
add
push
xchg
jnp
fsubl
das
dec
sti
aad
mov
dec
das
aaa
fists
out
jne
enter
pop
std
stos
in
sti
cs
test
cmc
pop
dec
mov
push
dec
std
dec
mov
jne
jnp
sti
fwait
je
add
xchg
xchg
cmpsl
sahf
fdivrs
std
sub
fldenv
pop
or
fistl
call
lret
into
xor
test
jnp
or
inc
jle
aaa
cld
sbb
cwtl
push
adc
jo
fistl
and
pop
std
dec
fwait
inc
shrb
pop
mov
jecxz
cmp
mov
xchg
pop
push
push
jb
push
and
inc
insb
sub
test
dec
pop
sahf
sbbb
lods
test
aas
loop
scas
jnp
xchg
jae
mov
pop
dec
add
leave
shll
push
test
adc
rcrl
insl
test
test
ret
adc
test
jns
pop
lret
loope
stc
cs
fs
sub
xchg
add
ss
push
out
imul
mov
xlat
dec
shll
pop
out
inc
testl
xchg
jo
dec
mov
xor
out
xor
adc
jp
mov
mov
cmp
cmp
lcall
ja
push
jo
insb
bound
cs
push
sbb
pop
mov
out
mov
and
sahf
inc
cmp
push
sbb
or
fmuls
dec
jle
inc
mov
dec
les
ds
jno,pn
or
adcb
gs
aaa
movsb
or
adc
or
sar
push
cmp
arpl
adc
sbb
inc
xor
out
nop
or
push
push
cmp
call
into
add
cwtl
outsb
mov
cmp
xor
clc
std
pushf
mov
xor
jp
iret
jle
add
sbb
cmp
xor
push
cmp
mov
loope
mov
mov
dec
mov
outsb
sbb
lods
and
pop
call
ret
sub
jno
mov
pop
add
mov
jp
dec
call
fldt
mov
shl
fiaddl
add
call
and
hlt
dec
outsb
in
in
jl
int3
lret
int
das
xchg
mulb
outsl
add
inc
jmp
dec
mov
dec
inc
pop
mov
jb
sub
icebp
outsl
mov
sub
xchg
in
popf
std
ljmp
jmp
das
insl
arpl
outsl
aad
movl
scas
inc
xchg
outsl
xchg
mov
mov
lret
mov
xchg
add
cwtl
pop
sbbb
xchg
lahf
cltd
push
or
cmp
add
lahf
cmpl
pop
mov
test
lods
dec
mov
pop
add
test
push
cmp
in
xor
or
loopne
ds
ss
and
lret
lahf
inc
cwtl
lods
stos
call
pop
subb
sbb
pop
xor
outsb
push
inc
fsubrs
out
or
in
push
lods
adc
std
icebp
and
sahf
mov
scas
ss
and
cs
fcmovbe
enter
jns
lods
hlt
add
rclb
scas
fistps
xchg
sbbb
int
mov
or
nop
out
mov
cmp
cld
push
pop
xor
std
inc
cmc
pop
lds
addl
xor
int
movsl
push
out
cmpsl
shll
cmpsb
insb
popf
pop
inc
mov
xchg
dec
cmp
or
xchg
andb
scas
repnz
insl
xor
mov
push
mov
xchg
xlat
vmread
in
dec
js
mov
out
lahf
sbb
fwait
xor
mov
stc
imul
cs
add
jle
test
cltd
in
outsb
mov
add
xchg
xchg
popa
jmp
mov
ror
cmpl
aas
lods
shlb
push
add
shll
fwait
mov
lock
or
pop
call
pop
jp
iret
mov
jmp
inc
das
jne
lods
mov
fimull
push
movsb
lods
pop
mov
jns
sti
push
cmp
mull
xor
inc
sbb
cltd
pop
and
into
cltd
or
xor
pop
fwait
lock
dec
inc
push
sub
push
test
sahf
mov
clc
adc
push
clc
jae
xchg
push
jge
push
fwait
push
add
mov
cmpsb
add
sub
pop
int
xchg
dec
es
sbb
ret
xchg
mov
add
shrb
testl
or
mov
call
mov
xchg
daa
mov
dec
mov
in
into
cmpsb
ret
les
inc
cli
lcall
or
out
cmp
outsb
imul
push
imul
jae
mov
xchg
xorb
addl
mov
push
mov
aad
sbb
jb
loope
mov
xchg
addr16
pop
pop
shl
jmp
inc
int
rolb
push
xchg
enter
inc
and
and
inc
stos
jl
aas
mov
mov
call
xlat
shrb
mov
rolb
sti
sbb
mov
xor
pop
iret
inc
cmp
jbe
cs
or
fucom
in
or
add
dec
out
in
test
jle
push
fidivrl
jns
shrb
nop
cmc
mov
cli
jnp
cwtl
cld
add
adc
lahf
jns
inc
sbb
push
aaa
loope
rolb
ds
pop
cmp
xor
loope
jae
jp
fisubs
push
sub
xchg
xchg
repz
adc
inc
and
pop
into
inc
shlb
imul
popf
xchg
xchg
hlt
xchg
cli
mov
xchg
pop
nop
fs
out
mov
loopne
or
or
sbb
lret
dec
jge
test
loope
adc
inc
in
mov
dec
sarl
inc
scas
ret
lods
mov
xchg
mov
jns
scas
loopne
mov
fsubrs
icebp
pop
data16
jnp
rcrl
jl
push
cmp
xchg
inc
xchg
jmp
icebp
daa
bound
jl
rolb
cmpb
inc
daa
mov
adc
push
mov
dec
jae
aaa
leave
sbb
cwtl
sti
mov
sahf
aad
das
xchg
xchg
inc
outsb
add
adc
ss
repz
loopne
jb
rolb
cmp
movsl
inc
xor
in
scas
fwait
mov
cmp
mov
mov
xor
push
push
outsb
enter
out
mov
cmpsl
pop
jbe
or
pop
lods
mov
test
sbb
aam
jp
sbb
loope
sbb
or
ret
lahf
out
scas
mov
les
xchg
push
movsl
xor
mov
addr16
sub
aam
push
cmp
push
mov
fbstp
sbb
dec
ds
push
nop
jmp
mov
addl
das
lock
test
movsl
mov
and
or
cmp
inc
sbb
inc
ret
pop
imul
insb
mov
or
push
or
loope
arpl
jp
fwait
mov
mov
push
add
lahf
movsb
bound
and
and
fsubrs
push
fdivrl
in
addr16
or
mov
xchg
inc
mov
hlt
fwait
sti
xchg
insb
or
add
mov
dec
dec
cmp
pop
sbb
adc
insl
scas
xchg
push
call
jmp
adc
leave
inc
jmp
outsl
stc
repz
mov
inc
pop
iret
shll
jo
jo
push
mov
mov
loopne
push
pop
das
gs
xor
into
or
pop
divb
sbb
cmp
loop
dec
bound
aad
cmp
jecxz
outsb
sub
mov
lds
jne
sub
mov
cld
int3
ret
ret
rclb
inc
das
mov
xchg
push
xor
mov
add
fidivl
call
mov
repz
enter
mov
mov
pop
jecxz
ja
cld
jp
and
in
addr16
movsb
push
cltd
sbb
packuswb
and
repz
push
dec
scas
fsubrl
aas
sub
cs
jae
scas
icebp
js
sub
insl
jno
push
dec
mov
daa
pop
loop
in
rol
and
or
imul
xchg
sbb
stc
inc
add
inc
setnp
xchg
or
andl
das
push
or
icebp
xchg
sub
aas
loop
fsubrl
rcr
dec
jns
jns
loopne
hlt
push
cmp
fiaddl
aaa
rcrb
mov
push
mov
fmuls
mov
out
cmpsb
adc
inc
movsb
mov
popf
ljmp
cmpsl
jno
mov
test
shrl
sbb
mov
pop
leave
mov
push
fsubrl
das
push
dec
rol
clc
adcl
xor
inc
lods
adc
mov
sub
inc
cmp
pop
xchg
dec
sub
pop
divl
fldenv
cltd
xchg
xchg
push
repnz
aam
loopne
inc
xchg
push
cmpsb
loopne
icebp
clc
sub
into
loopne,pn
inc
cmp
ja
out
mov
rolb
arpl
pop
or
push
sbb
mov
ja
rcr
push
or
hlt
xlat
mov
mov
mulb
mov
pushf
jns
dec
lcall
mov
test
push
cmp
cmpb
xor
push
xchg
pop
scas
fnstenv
mov
cmp
or
lcall
mov
in
adcb
jo
jns
cmp
rcll
mov
jg
pusha
xchg
cld
push
lods
adc
aam
adc
je
popa
push
sbb
add
test
pop
jnp
rorb
xor
push
in
xor
cltd
cld
mov
fcmovu
lret
xchg
mov
popf
push
xor
nop
add
fnstsw
stc
and
cmpsl
inc
movsl
adc
in
dec
sbb
push
sets
imul
fwait
add
xor
stc
sbb
popf
and
push
pop
rcll
mov
push
inc
add
sahf
std
ffreep
mov
push
add
sub
mov
push
sti
mov
jge
subb
sub
stc
xchg
jle
add
adc
mov
insl
adc
mov
jno
fnstsw
hlt
pop
mov
and
lcall
inc
insl
pusha
jl
mov
les
add
jo
movsl
pop
pop
sub
pop
mov
fldcw
int3
add
inc
cmp
xchg
xchg
movsb
out
das
pop
add
mov
push
xchg
sbb
pop
push
nop
punpckhdq
icebp
repz
dec
imul
dec
cmpl
out
addb
aaa
push
mov
js
aad
push
pop
ds
cld
sub
sahf
push
push
jo
xchg
in
sahf
loopne
sbb
lock
lods
leave
mov
jns
cmp
stos
imul
mov
xorl
mov
ljmp
adc
cld
sbb
sbb
loope
pop
test
ds
sub
mov
stos
cmpsl
aam
js
shl
fistpl
out
adc
loope
push
sub
cld
lret
lds
dec
cmpsb
mov
daa
pushf
movsl
cmp
add
cmp
jne
mov
jl
mov
mov
sub
mov
xchg
xchg
or
loop
insb
xor
imul
cs
cmp
mov
stos
test
stc
lods
add
add
add
dec
cmova
lds
into
or
bswap
pusha
xor
xchg
push
rorl
cwtl
divl
mov
push
dec
xlat
scas
cmp
lea
mov
jno
shrl
xchg
mov
sbbb
int
out
and
dec
sub
sahf
mov
rcrl
add
movsb
rorl
push
jnp
outsl
xchg
push
push
push
in
stc
cltd
mov
lds
lret
push
mov
out
dec
mov
gs
lock
mov
daa
dec
cmp
es
test
inc
sti
in
lahf
loope
jge
jge
jecxz
pop
lods
jo
icebp
aad
pmovmskb
pop
xchg
jp
pop
pop
nop
rcr
lahf
xlat
add
in
in
dec
fcoml
sub
mov
lcall
cmp
data16
add
push
cld
adc
lret
outsl
adc
mov
lods
xchg
sub
pop
cmp
xor
pop
in
cmpl
inc
and
and
out
lcall
or
xchg
adc
adc
push
add
into
mov
cli
dec
lret
inc
repnz
ret
stc
sub
or
push
pushf
jge
addr16
testb
fcomps
push
push
sub
aaa
xchg
and
pop
jb
scas
aam
mov
mov
dec
or
inc
dec
aam
fldenv
push
outsl
dec
and
dec
mov
mov
out
aam
incb
push
jae
dec
xchg
mov
xchg
leave
iret
out
inc
xlat
movsl
or
cmp
mov
repz
mov
sub
or
int
sbb
das
jnp
mov
pop
xor
xchg
jmp
sub
mov
mov
mov
sub
ja
sub
repz
rorl
adc
or
mov
adc
jmp
and
add
dec
jmp
xchg
xlat
imul
iret
out
mov
sarl
pop
xor
push
dec
xor
stos
push
test
in
cmp
jp
pop
jle
cwtl
loop
rcr
sbb
push
mov
and
mov
test
xlat
adc
mov
les
inc
jno
dec
jno
inc
jns
ds
dec
add
lahf
sub
or
in
rcl
inc
roll
lods
push
dec
xchg
adc
or
aad
jle
ljmp
inc
inc
roll
fstl
aaa
insb
add
lahf
ret
je
xchg
out
inc
test
jb
push
lds
call
cmp
ljmp
rolb
mov
cmp
jae
in
add
cmp
add
cli
les
hlt
adc
jnp
in
push
push
insb
inc
push
jmp
sbb
xchg
sarb
negb
adc
pop
les
sub
mov
lret
divl
sub
inc
jge
dec
dec
popa
or
sbb
into
cmpb
test
cmpsl
ljmp
test
sahf
int
xor
and
dec
popa
and
adc
mov
sbb
pop
dec
fwait
pop
pop
fucomip
xchg
fdiv
xchg
push
push
insb
pop
les
in
xlat
ljmp
mov
mov
mov
xchg
adc
pop
nop
pop
xor
pop
sahf
mov
mov
mov
lret
sbb
mov
inc
jmp
in
leave
test
xor
push
outsl
xlat
imul
cs
cld
test
dec
sub
mov
pusha
nop
dec
or
repnz
gs
sub
xor
dec
call
int
fwait
lods
adc
cmpl
cmp
add
or
pop
outsb
rcl
dec
call
iret
inc
dec
xchg
push
sub
in
sbb
or
push
pop
mov
xchg
inc
gs
fisubs
lcall
bound
stc
hlt
lock
adcb
push
mov
xor
or
sub
fstpl
xor
or
cmp
loope
arpl
mov
lods
mov
push
inc
dec
push
aas
aad
cmc
ds
add
jp
sar
ja
loope
pop
repz
cmp
mov
cmpsb
in
mov
fadds
insl
jg
shlb
mov
inc
fmull
mov
and
xor
jnp
xchg
imul
jmp
inc
inc
repnz
or
lea
lcall
sub
dec
xchg
push
popf
test
stos
cmp
mov
pop
push
xchg
out
cmp
xchg
adc
push
jle
aam
out
fwait
out
or
sub
shlb
sbb
test
dec
dec
xor
push
arpl
popf
daa
cmp
mov
stc
or
mov
mov
outsl
dec
outsb
xchg
int
in
lret
imul
sbb
push
scas
out
and
cmp
cli
stos
ror
fldt
jp
push
adc
fstl
pop
sub
mov
xor
in
ret
scas
aam
leave
jp
or
call
pushf
bound
xor
adc
push
dec
into
cmpsl
push
in
fstpt
dec
ret
xchg
ljmp
scas
stos
shrb
in
jo
or
jb
xchg
shr
jg
out
lcall
push
lods
test
pop
stc
jle
out
xchg
mov
mov
xchg
jo
enter
test
cld
or
inc
and
sti
sub
int
sahf
mov
sbb
shr
sbb
das
add
scas
inc
jbe
cmp
movb
iret
cmp
xor
xchg
push
mov
sub
xor
pop
xchg
adc
testb
jbe
in
adc
movsl
or
enter
and
adc
loop
loopne
sub
in
cmpsb
mov
insl
xor
sti
cmp
rcrb
test
insl
mov
in
cwtl
xor
ljmp
hlt
das
inc
add
xor
into
push
push
add
int
xor
pop
mov
pop
jmp
pop
pushf
xor
sbb
xor
pop
push
inc
and
aad
lahf
pop
shl
jne
test
sahf
in
mov
add
cmp
mov
test
jns
cmp
jno
mov
lds
dec
pop
pop
cmp
outsl
inc
sbb
or
and
ret
das
loope
mov
mov
xor
and
mov
jo
inc
xchg
mov
mov
hlt
bound
push
in
sarl
scas
mov
sub
popa
std
cmp
sbb
das
lret
repnz
sbb
out
push
pushf
je
into
or
aaa
pop
in
add
pop
test
inc
sti
aam
gs
cmp
lcall
lea
or
fwait
xor
mov
or
popa
cmp
sarl
push
and
pop
lds
or
push
imul
fsubl
outsl
xor
pop
push
sbb
jno
xchg
jp
pop
mov
dec
push
sbb
bound
dec
pop
rcll
mov
mov
sbb
out
jns
rorl
or
inc
sbb
scas
sbb
push
imull
cmc
mov
cmp
xchg
lret
das
nop
lret
pusha
or
in
jl
imul
fcomp
push
xchg
mov
cmpsb
cwtl
inc
push
pusha
add
xchg
mov
cld
cld
cmp
dec
inc
out
add
daa
xchg
sub
cmp
xor
loope
loopne
insl
jnp
sbb
fs
outsb
icebp
xor
ja
test
jg
sbb
filds
jne
insb
mov
push
mov
lea
test
and
dec
fidivs
mov
mov
cs
push
mov
out
cld
aad
cmpsb
jo
into
aas
jns
andb
gs
dec
cli
mov
sbb
push
pop
mov
or
sarb
je
pop
lock
jge
les
orb
cmc
mov
xor
int3
xor
push
push
cmpl
dec
and
dec
fidivrs
sub
inc
xchg
push
imul
add
sti
sbb
arpl
cmc
xchg
imul
push
cmp
test
jbe
mov
or
mov
jbe
shl
or
mov
mov
lds
jb
idivl
pop
loope
es
xlat
imul
sub
or
and
out
loope
imul
add
test
and
out
cmp
inc
jne
or
cld
pop
mov
add
xor
icebp
rol
mov
out
lock
inc
mov
fldl
ja
and
mov
dec
loope
cmp
or
xchg
mov
push
cmp
ret
push
inc
xchg
leave
sti
je
push
aad
addr16
pop
ljmp
xchg
dec
dec
lret
pushf
aam
push
movsl
dec
push
and
xchg
in
mov
fldt
jge
movb
fwait
jmp
lods
addr16
pop
xchg
bound
adc
add
or
ds
loop
orb
sbb
lahf
dec
sarb
imul
shlb
xor
shll
mov
stc
test
mov
push
hlt
in
aam
insb
stos
dec
push
push
dec
shlb
popa
mov
xor
int3
dec
bound
aad
jbe
mov
jns
push
repz
cltd
push
nop
into
push
mov
push
lret
xchg
push
pop
lahf
ds
js
cmp
stos
jle
into
dec
jns
fnstenv
xchg
test
shll
mov
insl
or
movsb
dec
pop
ret
sbb
push
cmp
mov
cmp
inc
jecxz
call
loopne
sub
loopne
add
mov
lds
lret
es
xor
inc
xlat
mov
add
sbb
mov
lock
and
shll
add
xchg
ret
pop
shlb
and
imul
sub
call
mov
in
push
mov
call
movsb
jle
xor
mov
jg
insb
mov
inc
or
ljmp
fwait
or
push
dec
xchg
in
cmp
das
rorl
movsb
outsb
mov
cmp
fwait
aas
pop
mov
adc
test
ja
or
shr
ficoml
ffree
aad
into
push
hlt
es
mov
gs
int3
fidivrl
dec
data16
cmpsl
in
dec
stos
scas
cmpsb
mov
sbb
js
das
xchg
shr
enter
cwtl
cmp
lret
and
out
test
push
roll
cwtl
sbb
pop
lcall
mov
cmp
mov
jno
out
inc
push
cmp
movsb
rorl
mov
pop
cmpsl
ljmp
mov
mov
pop
dec
int
repz
push
inc
sbb
push
xchg
cmpsb
add
cwtl
xor
push
xchg
lret
push
ror
cmp
add
sbbl
or
jecxz
xchg
iret
pusha
mov
xchg
mov
js
out
add
push
stos
insl
rol
fisubs
inc
push
in
mov
mov
test
xchg
rcll
cmc
shr
inc
rclb
test
int
sub
jns
mov
iret
icebp
pop
push
addl
in
mov
or
into
xor
out
jb
push
ret
lea
or
std
sbb
xchg
jecxz
cmpsl
je
je
test
adc
sub
push
cmc
push
cmp
cmp
inc
jns
int
mov
in
inc
cmp
ret
and
jp
insb
ja
mov
repz
imul
mov
popa
mov
dec
add
mull
jo
mov
dec
ret
xor
mov
outsb
loopne
scas
int
lahf
fcoms
call
cmp
jne
imul
in
sub
add
jmp
mov
repz
fisubs
scas
in
ret
ja
nop
test
dec
xchg
stos
fstp
insb
fldl
daa
mov
fsubr
daa
xor
pop
stos
sbb
jecxz
xor
hlt
jmp
pop
outsl
xor
roll
add
int3
cmp
jne
mov
pusha
popa
push
sub
lcall
inc
lret
fst
cmpsb
adc
pavgb
add
jg
cmp
cli
repnz
mov
sub
push
pop
adc
jp
imul
lcall
test
jl
ss
hlt
mov
sahf
jmp
imul
add
lods
fildll
scas
xor
ds
mov
test
rcr
and
push
mov
pushf
sub
cmp
dec
xor
push
sarb
push
jnp
push
dec
pop
push
js
jmp
outsl
fucom
inc
fisubrl
and
jmp
outsl
push
clc
popa
cmp
jge
lods
mov
sub
push
push
ret
adc
mov
nop
fucomip
out
sbb
mov
repz
adc
xchg
xchg
push
jne
imul
rorb
cmp
sub
lahf
enter
lret
outsl
cmp
mov
pop
adc
inc
push
xorb
xor
repz
decb
adc
mov
sbb
inc
push
xchg
mov
push
sub
mov
or
fsts
add
test
or
cwtl
cld
fwait
imul
out
lcall
pop
add
mov
je
add
enter
ljmp
xchg
xchg
sbb
test
cmp
mov
xchg
clc
mov
inc
fdivr
dec
jnp
push
pop
xchg
push
mov
and
ja
int
cs
jge
sbb
enter
ret
das
cwtl
cmpsb
add
mov
sbb
push
scas
pop
push
jno
mov
mov
jp
push
push
cmpsb
inc
push
add
loope
push
jl
jnp
sub
sahf
cmp
inc
mov
jp
push
pop
mov
xor
stc
and
xor
jns
loop
and
loopne
movsl
mov
and
mov
cwtl
mov
daa
repz
out
inc
mov
mov
or
sarl
push
mov
icebp
xchg
inc
or
mov
inc
insl
cmp
and
push
add
addr16
pop
xorl
clc
rolb
mov
lds
mov
xchg
popf
repz
dec
mov
adc
sbb
push
bswap
inc
jmp
mov
adcb
sbb
adc
clc
out
in
inc
movsl
fcmovu
mov
je
mov
ja
xchg
xorb
and
loop
adc
mov
push
inc
ja
jnp
rorl
outsl
mov
sub
sbb
adc
loopne
and
inc
dec
and
lret
das
mov
adc
or
xorb
rcll
sbb
push
push
sub
push
int3
sub
sub
push
push
pop
loopne
fstl
lods
jl
cmp
mov
pop
inc
pop
popa
jmp
pop
imul
inc
mov
lods
out
test
fistps
aam
pop
xchg
pop
push
mov
xchg
xor
test
into
sbb
xchg
fdivp
inc
popl
stc
xchg
nop
insl
xchg
insb
insb
outsb
test
mov
mov
sbb
movsl
js
pop
lret
lahf
popa
mov
push
ss
daa
fs
push
xor
stos
jb
push
sub
out
in
adc
push
ja
mov
dec
movsb
int3
or
jmp
jge
insb
pop
sub
mov
aaa
shll
in
nop
pop
xor
hlt
loop
cmc
mov
insl
dec
xor
and
gs
aad
out
ret
adc
enter
add
mov
inc
push
xchg
pop
cld
xchg
push
mov
mov
divl
dec
xor
jmp
int3
ljmp
addr16
cmp
jae
iret
add
dec
gs
xchg
inc
nop
and
les
mov
push
sbb
in
ds
cmp
sbb
or
lret
shlb
insl
push
pop
push
add
adcl
pop
daa
out
mov
dec
pop
mov
outsl
aaa
push
lods
cmp
push
in
mov
fstpl
sub
xor
dec
add
pop
jge
xor
push
scas
aaa
dec
test
sbb
js
fistl
jle
out
hlt
stos
mov
outsb
fsubrp
movb
cmp
pop
sub
push
mov
sbb
cmp
lcall
insb
cwtl
sbb
pusha
push
sbbb
mov
rolb
enter
aaa
xor
add
jb
mov
or
fistps
or
cs
xor
in
sbb
repnz
mov
sub
rcr
pop
pop
or
add
or
inc
add
mov
xor
arpl
movsb
xor
adc
or
push
jns
loopne
and
loopne
sahf
cmpb
sub
inc
and
push
mov
push
stos
cmc
push
in
stc
adcl
imul
test
xchg
mov
mov
jle
mov
hlt
testb
dec
xchg
inc
or
add
and
add
xchg
push
mov
imul
cmp
ficoml
and
push
or
hlt
mov
insl
xchg
rolb
negb
or
sbb
daa
push
dec
lret
fcomps
in
and
int
mov
add
es
inc
pop
fcoml
call
push
add
and
jle
push
cld
xchg
cmp
jmp
cmp
sbb
pop
incl
iret
cmp
mov
cltd
add
cmp
sbb
sbb
sbb
outsl
in
mov
xchg
test
movsb
imul
movsb
movsb
pop
pop
neg
jl
jl
das
cmp
ljmp
jno
jb
dec
gs
subl
scas
pop
shl
xor
inc
into
mov
or
into
gs
sahf
add
in
pop
insl
dec
or
loope
sbb
lea
int
xor
xchg
sbb
shll
sbb
or
add
jmp
jp
adcl
aad
cltd
arpl
imul
sub
add
jecxz
fisttps
fnstsw
imul
pushf
aaa
jmp
add
fwait
xor
and
imul
ljmp
cmp
rolb
movsb
outsl
or
cltd
mov
cmp
and
push
addr16
daa
sub
xchg
pop
dec
insl
pusha
lret
pusha
mov
mov
push
xor
std
mov
pop
dec
add
jle,pn
aas
mov
sub
push
ret
bnd
and
pop
mov
cmp
stc
stc
insb
xor
pop
arpl
push
cmpl
ret
movsl
inc
xchg
insl
stc
xor
notb
push
in
mov
mov
push
movq
or
mov
imul
jmp
pop
add
movsl
in
data16
orb
xchg
scas
and
mov
pop
dec
mov
adc
pop
sub
mov
mov
out
mov
test
ljmp
cmp
mov
stos
lea
cmp
std
lret
fsts
push
add
aam
mov
xchg
add
shl
push
or
add
jmp
jmp
int
out
inc
ljmp
xorl
inc
nop
lds
jb
push
aam
cld
gs
ret
lret
push
inc
dec
add
rcll
js
sub
std
cmp
adc
or
std
pop
ret
in
jnp
fbstp
gs
icebp
sub
dec
je
in
push
mov
rcll
inc
mov
jbe
aad
out
jecxz
push
xchg
mov
push
adc
xchg
subb
xor
int3
pop
lods
ret
sbb
idivb
adc
push
imul
xchg
mov
loop
dec
xchg
push
stos
out
dec
mov
clc
sub
mov
cmpsb
jg
or
int3
sub
inc
popf
mov
xchg
jle
xchg
cltd
lret
popw
jg
cmp
jo
adcl
and
orl
bound
aaa
aad
std
xchg
sbb
stc
or
adc
dec
arpl
push
sub
sub
mov
outsl
pop
add
sbbb
jb
clc
ljmp
sti
shll
xchg
dec
fsubl
cmp
cmc
push
clc
sahf
inc
mov
sahf
adc
fimuls
push
sbb
inc
pop
aaa
add
es
push
fnsave
and
rorl
cmp
rorl
mov
push
cmp
jne
sub
push
and
cmp
and
sarb
loopne
add
sub
test
cmp
lret
sbb
dec
jne
mov
fisubl
iret
inc
pop
ja
movsb
fnstcw
and
enter
popfw
fdivrl
jmp
incb
dec
lahf
and
cmp
jo
into
jmp
repnz
xchg
jecxz
xchg
cmp
adc
in
pop
cmp
fs
rcrb
in
xchg
dec
mov
jp
push
fs
dec
dec
out
sub
shrb
ljmp
and
push
iret
and
mov
fstl
add
int3
inc
gs
leave
xlat
push
cli
dec
push
jno
cltd
pop
pop
cmp
loope
sbb
cmc
inc
into
hlt
testb
xor
sub
xor
imul
inc
movl
repz
xchg
shlb
in
push
ss
rclb
loope
into
outsl
xor
cmpsl
outsb
sbb
pop
in
mov
pop
orl
rcr
fmuls
and
mov
popf
and
in
sbb
pop
decl
add
pop
ljmp
add
call
in
dec
dec
in
int
aaa
ficomps
mov
jmp
xchg
bnd
and
nop
daa
test
aad
sub
dec
fsubr
aam
xchg
inc
cmovo
test
cmpsl
je
cwtl
jae
fstpt
add
lret
cmp
add
xchg
lret
xchg
insl
lock
xchg
cltd
jae
or
lods
add
inc
adc
jno
iret
push
cmc
adc
push
loop
adc
daa
repz
push
cwtl
inc
bound
leave
shl
and
xchg
lahf
hlt
or
inc
xor
enter
cmpl
daa
jne
adcb
mov
fists
and
mov
xor
ss
jp
fnstsw
pop
arpl
add
test
sbb
pop
fwait
mov
pop
jb
je
sub
pop
mov
mov
dec
xchg
xlat
push
nop
or
inc
jp
scas
fwait
dec
dec
adc
ret
fistps
jns
pusha
mov
dec
movl
sub
divb
leave
push
cmp
mov
cmp
std
mov
inc
push
cwtl
fcmove
push
push
dec
jns
dec
lea
add
rcrl
bound
adc
dec
test
call
push
sub
in
pop
cmp
xchg
shll
fisubrs
xchg
fistl
ss
test
mov
scas
fcomps
fisttpl
xchg
scas
add
test
fdiv
arpl
test
out
sub
mov
jo
cmc
cwtl
push
add
stos
cli
xor
int3
or
iret
push
cmp
repz
cmpl
sub
mov
sbb
push
aam
lahf
outsl
sbbl
inc
push
loop
push
push
jl
dec
pop
mov
loopne
inc
pusha
push
dec
xlat
sbbb
cwtl
pop
xchg
loope
loopne
jmp
bound
or
mov
out
push
les
mov
scas
sbb
pop
aaa
lcall
das
add
xchg
ret
adc
or
ds
dec
mul
mov
jmp
push
pusha
mov
xor
mov
xlat
cmpsb
push
lds
xchg
rcrb
popw
pop
or
ljmp
or
cld
xor
test
or
sub
or
negl
add
xor
cld
scas
push
popa
mov
test
data16
popf
mov
jge
imul
out
cli
in
xor
xor
out
xor
dec
ss
push
dec
fsub
orl
in
xchg
testb
ret
ja
xchg
movsb
mov
dec
and
xorb
jbe
sbb
push
cmp
pop
mov
shr
sbb
insl
nop
mov
dec
fbld
mov
dec
adc
rclb
popa
lahf
std
fcompl
xor
ret
shr
pop
mov
sbb
les
outsb
nop
lahf
mov
sbb
subl
inc
stos
mov
dec
icebp
pop
adc
pop
push
das
negl
cmpsb
pop
sbb
cli
enter
sbb
das
adc
loopne
inc
adc
sarb
push
jne
cld
push
daa
jp
or
scas
dec
inc
ficoml
dec
cltd
addl
sbb
movsb
nop
mov
ljmp
int3
roll
into
mov
ret
push
das
inc
sbb
and
les
cmp
add
lret
cmp
fs
cli
xor
jle
mov
xchg
js
lahf
dec
lahf
pop
add
repz
jp
sbb
mov
inc
cli
pop
mov
jge
mov
je
lock
jle
shlb
fmuls
dec
mov
nop
lds
jo
std
andb
fwait
inc
lcall
popa
pop
es
cmp
sbb
scas
iret
mov
orb
pop
dec
imul
ficomps
adc
rclb
movsb
insl
adc
or
mov
adc
and
ret
or
sti
dec
in
xchg
scas
aad
jo
roll
pop
cmc
hlt
inc
sbb
xchg
jle
je
xchg
leave
ret
cmp
enter
roll
imul
stos
aad
pop
insb
out
add
adc
push
mov
push
sbb
sbb
sbb
test
enter
rcr
mov
dec
mov
jl
pop
xlat
lods
pusha
jno
adc
cs
xor
push
sbb
pop
xor
into
rclb
dec
loopnew
adcl
add
cld
push
jl
popa
pop
fadd
mov
add
stos
mov
xor
lock
fdivrs
dec
pop
ss
outsb
sar
pushl
and
pop
inc
pop
sti
fimuls
pop
incb
mov
popf
jecxz
aam
mov
jo
add
dec
test
push
push
sarl
sub
adcb
popf
popa
adc
mov
js
rcr
out
adc
rdtsc
xchg
fcomip
and
stos
outsb
call
add
inc
in
lea
dec
inc
iret
hlt
or
mov
mov
addl
test
inc
mov
bound
stos
add
pop
lret
dec
jle
imul
adc
xchg
fwait
mov
cmc
pop
loopne
cmc
sub
lcall
mov
clc
stc
xchg
stos
lock
shrl
rcl
call
ja
jge
icebp
dec
or
cmp
jecxz
fldcw
mov
pop
pop
notb
shll
sub
mov
int
les
xor
ds
pop
les
sub
pop
mov
imul
or
mov
sub
pop
nop
dec
fsts
gs
je
mov
jmp
rol
adc
adc
adc
lods
and
popf
sti
fldcw
jp
jne
rcr
push
insb
loope
cmp
dec
add
rclb
and
xor
push
jmp
dec
xchg
enter
or
cmp
lods
shrl
mov
or
std
in
mov
add
dec
pop
or
mov
jb
enter
pop
add
pushl
leave
lds
rorl
jo
fwait
xchg
mov
inc
stc
sti
mov
xor
jecxz
xor
xchg
ss
mov
fisttpl
test
filds
jle
sub
popf
sub
mov
outsb
dec
fmull
add
and
cmp
sub
addr16
xchg
fistps
mov
imul
jo
xor
int3
inc
push
cld
ljmp
mov
xor
mov
sub
and
stos
std
xorb
jns
pop
mov
push
cmp
add
imul
mov
gs
in
das
pop
cmp
mov
imul
in
jns
aaa
stos
mov
add
xchg
push
or
mov
mov
subb
lds
or
sbb
mov
inc
mov
push
or
movsl
jno
fs
stos
adc
or
push
dec
leave
ja
pop
sbb
jns
adc
and
mov
xchg
push
xor
fldl
add
arpl
aaa
sub
adcb
jl
les
lds
sbb
and
xchg
dec
cmc
movsl
push
push
std
insb
sbb
adc
push
aas
add
push
push
sahf
sbb
lret
shrb
aam
jl
arpl
pop
shll
mov
bound
mov
lcall
cwtl
adc
subl
cmpsb
loop
or
fwait
leave
sub
mov
push
xchg
std
push
scas
out
xchg
jecxz
xchg
icebp
mov
decl
enter
mov
jnp
dec
adc
stos
jge
add
mov
cmpsb
cmp
mov
arpl
or
imul
int3
testb
stos
push
bound
mov
xlat
and
je
orps
int3
scas
jb
sbb
mov
addl
push
cmpsb
jns
loopne
inc
loope
push
lcall
je
ret
iret
sahf
sbb
xchg
insl
leave
push
nop
mov
xchg
dec
cli
arpl
mov
push
mov
loope
das
and
jg
pop
addr16
addb
dec
leave
push
push
jg
dec
mov
imul
fisubs
xchg
outsb
xor
repnz
mov
jle
mov
fistpll
test
leave
daa
out
fimull
sbb
je
push
nop
fmuls
loop
das
adc
lods
add
out
adc
push
iret
iret
ss
out
call
mov
aam
add
into
add
xor
out
inc
out
pmaxub
dec
shll
popf
das
dec
ret
sub
test
insl
shrb
inc
jge
push
lds
pop
fdivs
aad
jle
jne
jcxz
fistl
adc
xor
xor
pop
adc
lcall
jns
cmpsl
xchg
aad
pop
push
cmc
bound
add
orl
subb
mov
sbb
cmp
xor
subl
fiaddl
je
test
mov
xlat
mov
jae
dec
jnp
aaa
fs
push
orl
xor
repz
lahf
test
lret
add
mov
mov
and
inc
cmp
inc
and
cmpl
test
out
mov
insb
and
std
pop
xchg
in
out
stc
xor
jecxz
bound
lahf
xchg
out
dec
fcmovnbe
orl
test
jb
jae
pop
pop
sub
rcl
cmpsl
mov
cwtl
pop
mov
scas
add
in
sub
in
xchg
mov
pop
icebp
pop
pop
fdivl
movsb
or
ret
out
mov
xor
popa
dec
push
xchg
mov
mov
pop
cmpsl
mov
push
jbe
fwait
xor
inc
adc
repz
pop
mov
mov
fwait
inc
xor
lret
xor
xorl
mov
inc
mov
aam
jl
dec
inc
sub
jnp
int
xchg
jecxz
aaa
jp
decl
aas
cltd
inc
out
addb
fs
push
stos
fcomp
lcall
cmp
cld
mov
aam
push
xor
sti
sbb
fistl
icebp
adc
insl
movsl
mov
popl
cmp
jle
push
inc
xchg
mov
shl
icebp
adc
cs
sub
fwait
clc
inc
fisubrs
pop
jo
ljmp
pop
sbb
aaa
inc
and
inc
cmp
dec
or
push
stos
cs
arpl
hlt
adc
add
mov
mov
xor
test
mov
out
or
aam
xchg
push
inc
fs
cltd
fidivs
xchg
cmp
jmp
mov
in
cmp
ljmp
pop
test
or
pushf
mov
xchg
push
mov
leave
ljmp
jno
adc
push
mov
fisubrl
or
inc
lahf
jbe
jne
push
daa
sub
xor
xor
adc
mov
out
fwait
aas
shlb
scas
and
add
lcall
lock
xchg
mov
mov
inc
xchg
fldenv
fwait
cwtl
push
pextrw
js
xchg
ret
add
push
dec
stos
push
cltd
sbbl
sbb
mov
in
int
adc
pop
icebp
arpl
pop
and
and
out
adc
cmp
fdivrp
jp
cmp
dec
dec
mov
ret
cld
divb
es
mov
test
cwtl
movsl
movsl
xchg
add
imul
notb
ret
lock
mov
or
mov
pusha
call
adc
jne
sbb
shlb
xchg
pop
inc
fisubrs
add
adc
or
adc
out
rolb
dec
ja
push
cmp
push
lcall
and
in
sub
adc
clc
dec
mov
inc
cld
jb
xchg
outsl
das
inc
inc
sbb
loop
mov
ljmp
mov
aaa
movsb
ror
filds
test
pop
sbb
pop
sbb
cmp
int
jge
sbbl
push
xchg
ret
mov
or
flds
add
inc
mov
xchg
pushf
lahf
or
std
outsl
fcom
out
adc
push
movsb
decl
std
inc
cwtl
fldt
insb
jb
xchg
lret
in
xor
cmp
stc
ret
ror
imul
xchg
fcomi
pop
pushf
dec
das
inc
mov
jbe
bound
mov
and
fcmovb
sub
or
or
xrelease
test
cmpsl
jp
sub
cmpsb
mov
lds
clc
dec
popa
and
pop
pop
testl
xchg
movsb
int3
add
loope
mov
shlb
mov
lret
fisubrs
movd
gs
fimuls
scas
ja
icebp
or
xor
aam
adc
outsl
xor
xor
mov
mov
sub
mov
aad
dec
out
notb
popf
xchg
leave
xor
lds
std
dec
cli
mov
jle
scas
jnp
mov
xchg
pop
ss
dec
or
aas
push
push
pop
lahf
es
mov
add
xchg
inc
mov
fsubrl
ja
loopne
repnz
mov
lds
or
xor
lret
inc
aad
pop
pop
mov
mov
inc
jmp
loop
mov
mov
fsubrp
dec
jge
es
insb
mov
in
or
jno
or
pop
push
divb
fistpl
mov
loop
cmp
icebp
push
xchg
push
daa
xchg
cmp
lods
xchg
es
pop
dec
mov
movsl
leave
sub
mov
cmp
sbb
cmp
sbb
dec
test
add
pop
jne
push
fstpl
lcall
xchg
jo
jg
outsl
inc
enter
mov
iret
add
bound
hlt
pop
popf
movsb
popf
adc
lcall
test
mov
iret
and
scas
mov
inc
scas
pop
and
cmpsb
aad
mov
push
lods
pop
sbb
in
xor
push
jne
mov
fs
fstp
rcl
jge
mov
adc
fadds
inc
add
pop
inc
add
outsl
push
clc
xchg
fmuls
addr16
mov
mov
fdivr
mov
fucomip
bound
lret
rolb
stos
loope
call
stc
or
add
shl
in
dec
xchg
push
or
xchg
mov
push
popa
fwait
and
xor
js
repnz
xchg
je
inc
repz
notb
jp
mov
sbb
outsl
push
sub
push
dec
mov
mov
cld
arpl
pop
mov
and
or
add
jnp
sbbl
pop
dec
mov
mov
fdiv
jnp
xchg
bound
sub
lds
call
sahf
mov
jne
shll
sbb
lea
movsb
push
mov
test
scas
sahf
scas
mov
in
or
lret
push
sbb
mov
sub
jge
loop
aam
imul
and
sti
repnz
mov
in
push
jle
sub
cmpb
cmpsl
movsl
push
lcall
andl
ret
out
sarl
int3
not
push
pop
in
shrl
mov
mov
fadd
add
push
arpl
pop
push
sub
pop
popl
push
mov
sbb
flds
loope
push
push
and
xchg
mov
xor
add
pop
jae
ljmp
sbb
pop
lcall
jae
mov
xor
jmp
les
test
cli
push
arpl
mov
mov
fiaddl
mov
ljmp
je
push
xor
mov
pop
mov
out
mulb
inc
jp
pop
inc
stos
repz
and
jno
inc
xchg
mov
fwait
pop
not
jg
sbb
ret
jg
mov
mov
ret
into
lock
pusha
pop
shll
clc
lods
jmp
dec
push
xor
sbb
or
pop
xor
push
call
xor
lret
fs
adc
mov
jns
mov
xor
push
jecxz
and
xor
sub
out
mov
add
add
push
mov
pop
inc
mov
sub
and
js
or
xchg
cmpsb
mov
rolb
scas
mov
adc
iret
pop
pavgb
fsub
mov
into
std
push
sbb
add
je
fnstcw
lahf
cmp
pushf
xchg
xchg
orl
sub
pop
mul
shrl
adc
cmc
gs
inc
sbbl
into
xlat
out
sahf
push
out
imul
int3
and
data16
cmp
clc
daa
fstpt
es
lods
shll
xchg
mov
fs
mov
mov
adc
outsb
fwait
pop
cltd
mov
or
sahf
les
pop
test
mov
mov
pop
mov
mov
loop
decb
aas
clc
jbe
ret
dec
sbb
dec
decb
mov
xchg
ss
popa
sub
lea
xor
mov
fimull
imulb
dec
sub
and
mov
dec
mov
jo
mov
je
rcll
sysenter
add
loope
jne
movsb
jno
push
fstps
mov
mov
push
xor
pop
lods
cs
pop
mov
pop
cmp
outsb
mov
dec
mov
mov
scas
cmc
cmp
jp
or
and
scas
xchg
mov
pusha
adc
cmp
xchg
das
lret
fs
leave
leave
aaa
aad
test
scas
xchg
mov
mov
in
push
or
inc
movsl
jmp
adc
mov
jl
xchg
fcmovu
scas
add
lds
push
xchg
jnp
lret
inc
daa
arpl
mov
fistps
ret
movsb
lock
sbb
out
out
dec
rcrb
pop
push
aad
inc
cs
xchg
dec
sbb
movsl
xor
push
pop
aam
inc
lock
rclb
pop
faddl
or
sahf
dec
push
push
ret
inc
push
xor
dec
aaa
cld
or
pop
xlat
xchg
outsb
pop
sub
pop
mov
imul
or
xchg
pmulhuw
rorl
push
mov
scas
inc
out
insl
aad
ljmp
or
data16
pop
movsb
pop
xchg
mov
ds
out
hlt
stc
out
mov
inc
cltd
addr16
pusha
fstpl
dec
pop
rcll
dec
and
pusha
xchg
pusha
ror
cs
push
or
js
ss
mov
or
push
out
push
addb
xlat
mov
ret
jo
enter
out
dec
mov
jg
sti
outsb
popa
cmp
imul
cld
inc
repnz
or
pop
cmpsb
test
mov
test
dec
pop
jge
jge
xor
out
fidivs
mov
ljmp
scas
jno
fcoml
into
xchg
mov
jo
sub
add
adc
push
negl
cmp
push
dec
sti
jnp
sahf
push
cmp
test
mov
mov
leave
xchg
aad
add
lcall
xchg
jne
jb
mov
repnz
xchg
mov
ret
jnp
dec
mov
out
add
lods
dec
leave
and
jl
sub
sub
mov
lcall
shlb
pusha
sbb
aaa
stc
imul
add
jno
xchg
or
cmpsb
stos
mov
add
std
jo
fcoml
adc
pop
jns
imul
in
imul
mov
dec
cli
int3
aam
xor
pop
push
sbb
loope
xor
mov
mov
rcr
push
in
lods
mov
loope
int
cmp
es
xchg
nop
fsubrl
cmc
jae
lea
mov
mov
jae
mov
xchg
dec
cmpsl
in
outsb
out
pcmpgtd
lea
fistpll
add
mov
fisttpl
pop
or
negl
adc
lret
mov
repnz
sub
ss
cmp
pop
xchg
sbb
stos
out
hlt
popf
add
jnp
icebp
scas
or
xorb
mov
std
mov
pop
ljmp
mov
add
cmpsl
cmpsl
fwait
notb
and
mov
inc
cmp
test
gs
mov
js
daa
movsb
sbb
and
sahf
enter
cmp
sti
dec
sbb
sub
jno
and
push
mov
jae
xchg
roll
xchg
stc
push
js
push
add
or
loop,pn
dec
push
lret
xor
aad
sub
call
aaa
arpl
cmp
inc
mov
inc
and
ljmp
pushf
pop
xor
cs
fwait
arpl
push
and
in
pop
and
push
cmp
insl
insb
stc
pop
imul
popf
mov
call
or
roll
pop
xchg
cmp
ss
loopne
jnp
aas
jecxz
in
cli
add
into
sub
leave
cmc
mov
jnp
lcall
fnstsw
pop
popa
mov
sbb
call
pop
scas
movsl
mov
and
lahf
and
push
shll
pop
and
pop
pop
dec
in
movsl
inc
mov
rorl
push
xchg
jns
mov
cmpsb
mov
cmp
cmp
inc
cmp
and
mov
loop
mov
sub
mov
fisubrs
hlt
pop
shll
das
pop
fnstsw
sahf
xor
cmpsl
stos
jo
loopne
and
sarl
adc
or
mov
iret
mov
popa
xchg
xor
push
clc
pop
adc
jl
push
inc
scas
inc
iret
arpl
jle
jle
int3
mov
cmovns
pop
xor
cmc
ja
adc
out
lahf
cwtl
cmp
and
push
mov
xor
mov
xor
mov
ljmp
loop
or
add
cmpsb
adc
test
cmp
sbb
mov
push
or
pop
in
aaa
xchg
lea
not
cmp
lds
movsl
and
dec
lods
scas
cmp
adc
dec
fstps
pusha
insl
dec
gs
inc
jmp
shll
xor
sbb
movsl
ljmp
push
xchg
movsl
aad
lds
add
aad
xlat
mov
mov
rcrb
bound
inc
jle
call
push
js
mov
mov
xchg
pop
jae
faddl
mov
cmovo
jg
rolb
lea
cmp
jae
jge
sbb
pop
jae
imul
lret
aam
jno
pop
outsl
pushf
xor
xor
cmp
xchg
add
mov
vmovntps
mov
lcall
loopne
ret
fisttpll
outsl
or
mov
enter
sti
cs
xor
js
sahf
aas
frstor
fmuls
pop
sti
lcall
or
pushf
jg
pop
inc
sbb
aam
cmp
cmp
mov
xor
jp
adc
cmc
mov
mov
pusha
mov
fs
push
mov
enter
inc
fsubrl
lock
ja
cld
rorb
pop
lret
jmp
int3
push
mov
imul
push
inc
pop
outsl
pop
cmp
icebp
inc
cs
fmull
jle
mov
cmp
xor
arpl
jmp
adc
enter
adc
dec
pop
mov
fwait
gs
pop
xorl
lods
ret
mov
cmp
stos
lea
lods
mov
xchg
jo
iret
clc
aas
stos
add
mov
mov
mov
pop
out
jl
inc
fisubrl
push
fsubrs
popf
sahf
xchg
loope
xchg
shl
scas
filds
stos
aas
movsb
sbb
push
or
scas
sub
mov
mov
adc
adcl
cmp
adc
mov
pushf
rorb
cli
mov
cld
add
in
dec
andl
andb
pop
ja
aas
int
arpl
and
and
iret
out
xor
jg
inc
aaa
in
in
jg
lods
testb
mov
aam
repnz
dec
in
repnz
out
mov
xchg
scas
cs
dec
mov
cld
push
mov
mov
lods
push
fisubs
pop
mov
into
dec
lahf
pusha
dec
test
add
je
sbb
and
aad
insl
out
xchg
fstpl
mov
cmpsl
jns
xor
aaa
insl
or
sahf
xchg
jb,pn
lods
lret
fidivl
testl
stos
cli
sub
and
xchg
mov
adcb
pop
fisubrl
fistps
mov
mov
xlat
out
scas
xchg
mov
pushf
sub
lahf
jge
push
das
and
das
sti
xchg
scas
loopne
test
mov
in
pop
sahf
addl
stc
xor
or
xchg
xchg
cltd
cmp
mov
pusha
adc
jmp
xchg
jbe
jae
dec
fs
xchg
outsl
adc
adc
sub
mov
push
mov
jbe
vdivpd
addb
xor
add
cmp
aad
clc
mov
fdivl
repnz
imul
sub
sub
adc
add
int
jno
mov
push
push
out
mov
and
ficoms
int3
int3
test
loop
shrb
lods
pop
sbb
jp
popf
into
sbb
fists
push
push
jle
mov
pop
cmp
ret
out
sbb
xchg
or
notb
sarl
xchg
in
mov
cmc
pop
arpl
and
dec
mov
add
sub
imul
cmp
jno
mov
mov
xchg
pop
and
push
sarl
mov
lds
shrb
lret
enter
jne
or
lcall
mov
cmpsb
push
add
aaa
inc
fnsave
movsl
mov
add
out
mov
fcmovnb
out
push
inc
imul
mov
and
rol
pushf
mov
push
pop
sbb
and
jae
or
push
push
mov
insl
lcall
shlb
dec
outsb
ret
je
movsl
xor
jns
jecxz
push
xor
ss
pop
addr16
lock
mov
insb
imul
rorl
pop
jecxz
ja
ljmp
ss
adc
andl
fwait
insb
xchg
sub
negb
push
adc
or
xchg
rolb
mov
cmp
in
movsb
outsb
pop
xchg
mov
in
movsb
loopne
insl
xchg
or
pushf
ret
subb
subb
add
mov
psrlq
adc
push
loopne
mov
scas
test
lds
int3
mov
sbb
frstor
adc
lods
insb
xchg
lahf
lds
lcall
jmp
mov
test
mov
adc
shl
leave
sub
push
adc
js
inc
test
and
xorl
ror
push
out
mov
cmp
pushl
cmp
movl
jo
fmul
addb
test
lret
popa
ljmp
lods
mov
loopne
nop
sub
and
jbe
gs
imul
pop
sti
aad
adc
adc
fwait
push
sbb
xchg
fistl
mov
pop
and
jecxz
adc
push
icebp
dec
or
xchg
xchg
jnp
and
gs
mov
out
sbb
movsb
jae
mov
aas
rclb
adc
das
mov
insb
jae
rcrl
cmc
mov
stos
push
adc
jle
lods
int3
pusha
or
nop
sub
xchg
scas
mov
ret
push
ds
bound
sbb
or
insl
femms
adc
lar
sub
inc
add
dec
es
mov
mov
pop
xor
dec
and
orb
ds
xor
push
in
pop
xchg
mov
push
adc
mov
jmp
mov
fimull
cli
xchg
outsl
addr16
push
cs
jmp
jg
jne
mov
inc
xchg
sbbb
mov
pop
aad
jbe
stc
xor
fsubrp
mov
std
mov
pop
or
data16
sbb
mov
ret
mov
push
jecxz
adcl
ret
xchg
add
ds
pop
popa
mov
cmp
sbb
daa
loop
push
stos
inc
sbb
lret
mov
dec
dec
xchg
lods
das
sub
mov
clc
jno
xor
push
test
lock
jecxz
sarl
pop
mov
aaa
push
xor
aas
into
iret
mov
inc
push
mov
out
test
pop
seta
hlt
test
xchg
mov
jecxz
fnstsw
mov
mov
inc
lea
xor
call
push
adc
setae
mov
filds
or
stos
aas
loop
std
cli
in
push
faddp
mov
out
lea
sbb
push
insb
pushf
cmc
mov
pop
fsubrs
mulb
add
lock
ljmp
add
leave
ds
in
dec
adc
scas
stos
mov
pushf
aaa
lcall
out
pop
movsl
dec
cmp
jb
jp
lahf
int3
mov
mov
jb
or
lods
and
mov
in
insl
decb
popf
clc
mov
daa
mov
ljmp
xchg
rorb
push
jnp
aaa
and
ja
xchg
sbb
sub
xchg
push
xor
les
cmc
inc
fwait
jno
mov
jecxz
mov
out
mov
mov
mov
test
xchg
int3
mov
out
icebp
test
inc
mov
sub
pop
ss
test
jecxz
pusha
lret
fnstcw
jg
out
or
rclb
pop
aas
fstps
push
xor
jae
fstpl
xchg
fsubrs
inc
inc
mov
add
mov
icebp
shl
xchg
inc
daa
adc
mov
mov
andl
and
xor
dec
cmp
popf
lock
nop
add
pop
inc
cmpsb
std
or
push
mov
mov
xchg
and
daa
pop
mov
mov
rorb
push
pop
dec
mov
pop
insl
scas
cmp
mov
shrb
sti
call
dec
mov
ret
add
sahf
fistpl
mov
add
cwtl
jp
bound
or
scas
lods
popa
jecxz
cmp
jno
stc
xchg
loopne
or
aas
jecxz
daa
fldl
js
dec
scas
das
and
mov
xor
cltd
mov
and
insl
outsl
nop
popa
dec
pop
repz
mov
inc
push
mov
jno
mov
push
add
scas
jp
cli
cmp
ljmp
inc
mov
mov
fwait
add
pushf
pmuludq
faddl
aas
movsb
sub
xchg
adc
and
in
sbb
xor
popa
or
sbb
jo
imull
ja
movsl
sahf
aam
outsl
xchg
jno
andl
push
xor
incl
jecxz
in
xchg
repnz
inc
adc
je
jbe
mov
insl
ljmp
add
adc
subl
mov
inc
jmp
mov
push
jnp
cltd
insl
cmc
xchg
das
jb
add
jecxz
popa
js
add
mov
jbe
mov
mov
xor
inc
mov
jle
inc
insl
rcrl
jne
cmp
push
leave
cmp
pop
mov
cmpb
push
sub
add
mov
nop
fists
dec
dec
inc
jecxz
pop
cli
mov
outsl
roll
pop
xchg
stos
inc
hlt
add
sbb
cmp
mov
clc
imul
and
bound
leave
inc
cmpsb
lahf
lea
mov
lds
mov
inc
popa
xchg
aam
pop
popf
out
loopne
mov
cmpsl
xchg
xchg
sti
push
clc
add
jb
or
enter
cmpsl
imul
mov
inc
enter
xor
lcall
mov
sub
movsb
jae
cltd
addr16
pushf
das
xor
and
or
ja
rolb
das
inc
fisttpl
testl
push
into
mov
mov
xor
fstpt
and
xor
xchg
mov
push
cmpb
mov
movzwl
dec
cmovge
or
pop
aaa
pop
or
test
cmc
sub
lock
cs
push
add
icebp
jg
cmpb
or
sbb
xchg
mul
pop
vpclmulqdq
dec
jne
fnstenv
mov
mov
or
xchg
dec
mov
jns
xlat
sbb
sub
xor
into
pop
cmp
xor
jb
mov
sahf
sarl
jle
in
fcmovnu
test
push
push
shll
mov
push
adc
add
mov
fcmovne
arpl
xor
cs
pusha
mov
sub
inc
test
pop
and
insb
lods
cmp
ret
jno
pop
pop
aaa
fstpl
cmc
push
div
int3
dec
jl
or
jne
mov
pop
cmp
inc
clc
lahf
or
push
les
and
sbb
sub
lret
rclb
push
mov
xchg
add
jo
mov
adc
es
addb
sbb
aad
mov
xor
sti
loopne
in
andb
push
test
mov
sarl
mov
jge
mov
addl
enter
ljmp
stos
sub
outsl
inc
jno
pop
pop
pop
pop
stos
mov
loop
out
lea
lahf
cmp
dec
ljmp
cmp
cli
push
xchg
xchg
cwtl
movsl
adc
movsl
fstps
pushf
ss
push
daa
mov
mov
xchg
inc
or
out
jmp
add
or
lods
int3
ss
push
fidivrl
leave
dec
add
aaa
fucomip
std
mov
pop
and
ret
pop
jecxz
jbe
or
or
ss
mov
push
fs
jb
add
cwtl
shll
cli
and
icebp
pmaxub
push
aas
das
lret
loope
jle
pusha
lcall
and
push
xchg
pop
repz
stos
ret
repz
scas
nopl
add
dec
cmp
sti
sbb
ja
insl
sub
cmp
enter
dec
sub
cmp
push
dec
fwait
jecxz
dec
xor
mov
cmp
add
aam
fwait
push
ret
mov
aad
ret
mov
mov
push
cmp
push
loope
pop
mov
jae
das
pusha
push
push
addr16
dec
stos
lcall
pop
fldl
fistl
push
into
mov
aam
inc
push
xchg
sar
call
fsts
pop
jle
data16
scas
leave
subl
xlat
pop
fiaddl
jecxz
bound
insb
and
mov
lock
adc
addl
or
sarb
insl
adc
inc
push
pop
jg
xchg
cmp
out
fldcw
mov
jae
lret
aas
lods
lods
cli
xorl
dec
or
adc
pop
fbld
sbb
sbbl
xor
sub
push
mov
mov
and
mov
shrb
jle
dec
inc
or
pxor
pushf
mov
loop
mov
mov
lret
and
lret
jp
cmp
sarl
ljmp
enter
jp,pt
sub
sbbb
push
loope
cmp
xor
jmp
mov
pop
mov
rcll
cwtl
movsl
push
call
aaa
aas
cmp
cmp
sub
pop
pop
inc
rorb
das
std
mov
jmp
cmp
aad
push
out
outsl
jnp
sub
int
cmp
stc
pop
and
shll
dec
mov
jne
loopne
pushf
notl
dec
push
add
adc
in
jb
int3
hlt
ret
push
jno
cmp
ss
out
rorb
xlat
jle
push
xchg
dec
dec
cwtl
insl
cmp
and
adc
push
test
xor
pop
mov
mov
or
or
add
pushf
dec
hlt
fbstp
stos
or
mov
and
jns
movsb
push
mov
leave
or
arpl
fstpt
mov
adc
lret
mov
aas
fcompl
jge
je
jns
sub
je
js
add
xorb
loopne
dec
mov
les
fs
testb
mov
test
adc
mov
jns
xor
or
sub
inc
xchg
js
jb
andb
cmp
or
pop
sub
jmp
jb
jmp
xlat
sub
inc
pop
sti
fistps
scas
clc
push
inc
and
jle
jecxz
or
add
addl
push
cltd
or
stos
fs
scas
or
mov
pop
add
pop
fwait
sub
sub
enter
icebp
or
mov
popa
sbb
es
cmp
daa
adc
dec
scas
mov
fdivrl
popf
cmpsb
mov
xchg
cmp
cmpsb
lock
lock
or
stos
rcll
rcl
sub
in
js
dec
jnp
push
sub
clc
rclb
jae
scas
push
mov
lcall
daa
jne
xor
fimull
dec
loopne
mov
xorl
lahf
inc
jo
pop
and
mov
pop
movsl
xchg
and
popl
call
cmp
das
movsb
imul
clc
aas
movsl
sbb
mov
leave
push
mov
iret
jge
lock
adc
std
mov
adcl
mov
push
jnp
xchg
in
fistpl
xor
lahf
mov
mov
pop
xor
xchg
aas
js,pt
dec
pop
pop
dec
sub
loop
add
jge
cmpl
xor
test
mov
inc
push
sbb
xchg
or
int3
in
xchg
fmull
rorb
mov
dec
xchg
movsb
leave
xchg
adc
cmp
int
and
aaa
sbb
stos
adc
cli
movsl
ficoms
rcrb
adc
fcmovnu
xchg
cld
cld
dec
dec
stc
cmp
adc
popa
cld
dec
in
shll
xor
cmp
imul
cs
cmpsl
lea
and
lds
push
cmpsb
xchg
test
add
jne
mov
aas
mull
xchg
push
cmpb
cs
push
mov
lods
jl
dec
cmpsb
in
sahf
mov
push
add
sub
mov
add
ret
jmp
movb
test
ret
sub
push
mov
adc
xor
ja
or
sub
icebp
fbstp
call
xchg
jnp
imull
sbb
aaa
inc
test
out
scas
outsl
imul
insb
sub
dec
push
pop
les
mov
leave
pop
into
and
mov
data16
gs
psadbw
sub
or
and
xor
inc
inc
xor
pop
push
sbb
outsl
call
inc
xchg
lahf
outsl
repnz
pop
mov
jae
mov
call
jmp
push
divb
addr16
mov
sahf
sbb
push
inc
xor
mov
push
das
add
sti
jmp
dec
pusha
xchg
adc
in
mov
and
and
cli
jle
pop
cmp
add
out
xchg
popf
fisubrs
cmp
and
test
xchg
aaa
mov
mov
int
scas
in
xor
in
xchg
ficomps
cmpsl
inc
mov
into
aas
or
sub
fdivl
repnz
dec
insb
addb
cmp
fists
bound
imul
jo
scas
or
xchg
pop
imul
push
jl
test
pop
xchg
xor
lds
aad
lods
test
fisubrl
shll
lahf
inc
sti
ljmp
lea
sub
xchg
outsl
lds
jns
insl
push
les
lcall
xchg
int
inc
shlb
mov
leave
fcomip
enter
jae
mov
roll
ficoml
adc
or
movb
fnstcw
stos
push
lcall
cltd
in
fwait
ss
fwait
pop
lcall
jnp
mov
fsubrs
lret
popf
push
xchg
stos
cmp
pop
fmul
jg
ret
loopne
daa
sub
xchg
ret
mov
stc
hlt
lock
enter
xchg
dec
lods
orl
sti
out
mov
scas
add
data16
dec
loopne
mov
iret
imul
aaa
mov
and
cmp
push
push
push
notb
sub
mov
dec
imul
cmpsl
inc
and
mov
fmuls
dec
add
repz
daa
imulb
mov
repnz
xchg
mov
movsl
ja
cmpsb
out
gs
shl
pop
jle
and
jne
addb
or
or
sti
cmpsb
push
and
fisttps
shlb
ljmp
sub
lock
add
shl
std
stos
inc
add
stos
nop
sbb
inc
inc
out
push
in
daa
add
out
mov
mov
outsb
push
and
jp
ret
push
or
rolb
stc
divl
pop
aaa
lret
mov
fsts
dec
push
aad
dec
pop
adc
jno
decb
hlt
push
mov
lds
sub
jae
dec
adc
jmp
fwait
ret
fwait
cmp
out
pop
jmp
cmpsb
inc
cld
mov
push
rolb
mov
sub
popf
lds
je
ljmp
mov
ja
repz
mov
cmp
and
dec
adc
movsb
jae
cltd
jne
scas
mov
add
popa
in
pop
pop
mov
stc
loope
lret
dec
mov
rol
ret
push
mov
cmp
adc
xchg
std
loope
sar
insb
aad
or
mov
iret
jne
sbb
pop
repz
lods
test
fdiv
leave
jnp
pop
dec
out
fisttpl
sub
pop
adc
cmc
cmpsl
sbb
sub
inc
push
ds
dec
jo
fs
int
cmpl
xchg
std
mov
push
mov
in
or
pop
adc
ret
repz
stc
adcb
or
js
outsb
sbb
fwait
inc
rcrl
or
rcr
cmp
test
adc
adc
mov
inc
mov
jbe
pop
push
adc
sarl
xchg
mov
imul
mov
mov
jge
inc
xchg
push
jae
rolb
inc
in
sar
push
ret
and
push
lahf
fadds
pop
int3
lock
xor
jle
hlt
test
push
bound
in
jns
fldenv
imul
cmp
fildl
mov
loope
je
pop
xor
cmp
sbb
das
mov
aad
loope
test
aad
mov
aad
cmovge
xor
and
pop
jns
jo
bound
push
sub
adc
leave
push
jb
and
dec
mov
mov
dec
shrb
lret
inc
repz
sub
xor
lret
jo
icebp
push
movsb
enter
push
cltd
sbb
subb
mov
idivb
dec
mov
loop
push
test
enter
clc
jae
mov
adc
pushf
inc
and
dec
inc
fwait
push
test
repnz
and
inc
sub
sub
push
outsb
scas
mov
and
sbbb
push
or
daa
enter
leave
dec
sbb
dec
add
fs
sarl
xchg
mov
ja
cmp
out
dec
push
xchg
in
jp
mov
fcmovne
insb
add
aas
jb
mov
xchg
inc
push
xchg
int3
push
mov
sbb
add
xchg
enter
ss
mov
mov
pop
subb
or
or
je
push
repz
mov
iret
sbb
xchg
push
mov
mov
ljmp
inc
sahf
or
sub
mov
cli
stc
inc
or
add
and
lods
xchg
fdivr
mov
dec
sbb
jo
xor
xorl
dec
mov
fnstenv
jecxz
sbb
inc
mov
jb
aaa
adc
mov
xchg
fistpl
movsb
mov
fmul
cmpsl
add
inc
in
push
icebp
jbe
call
cmp
mov
ret
scas
dec
notl
push
mov
mov
outsl
xchg
jae
outsb
xchg
xchg
xor
pop
mov
inc
pop
or
mov
lods
ds
adc
ficoms
stos
xor
mov
pop
test
outsb
ja
cmp
outsl
inc
scas
shl
and
aas
xor
xor
lret
mov
fisubl
add
jp
mov
pop
std
stc
mov
std
hlt
sbb
rol
add
xor
popf
jbe
cmpsl
xchg
dec
aad
dec
sbb
repnz
mov
mov
push
adc
out
mov
repz
call
cltd
cmp
adc
stos
imul
daa
push
add
push
ficomps
mov
adc
jae
aaa
sbb
push
insl
int
mov
pop
jge
add
jmp
cwtl
out
cmp
stos
lret
push
lret
rcll
adc
out
fwait
xor
ret
js
ret
cld
cmp
sti
mov
mov
pushf
jb
mov
mov
icebp
stos
push
jmp
xchg
data16
jne
faddl
jg
mov
stos
je
mov
add
mov
lods
mov
mov
xchg
xchg
lahf
xchg
dec
pop
aas
cmpsb
lret
dec
out
xchg
rorl
repnz
add
mov
enter
pop
push
xchg
rol
lods
cltd
repnz
sbb
ss
clc
int3
sbb
push
xchg
mov
and
cmpsl
mov
adc
in
pop
mov
fistps
xchg
xchg
sbb
movl
adc
mov
lcall
and
mov
ficoms
dec
pop
xchg
iret
xchg
negl
aaa
rcll
xchg
pushf
jbe
cmp
in
dec
arpl
stc
mov
cli
cltd
jmp
daa
ret
and
divb
out
fs
xchg
testl
jne
jne
xchg
mov
push
into
sub
mov
out
hlt
dec
pop
lock
cmp
or
sbb
add
adc
dec
sbb
xchg
cmpsl
mov
xchg
int3
push
imul
je
xor
mov
cltd
imul
stos
lea
in
shrl
mov
and
mov
in
sbb
int
mov
push
push
movsl
mov
aam
or
or
out
mov
cmpsb
cmp
movsb
add
xchg
add
pop
add
mov
ficomps
mov
lahf
fistl
dec
shlb
imulb
xchg
dec
fimull
stos
aas
mul
sub
mov
imul
test
inc
push
scas
pushf
push
in
leave
out
inc
and
jnp
daa
ss
fisubl
xchg
xorl
pop
aas
loopne
sub
imul
out
adc
mov
pop
dec
and
ret
or
repnz
jnp
xchg
adc
fcoml
repnz
xor
inc
stos
inc
jae
ret
andb
push
fisubrs
in
sub
inc
ret
mov
sbb
sub
sbb
sub
add
xor
pop
test
mov
dec
lock
lea
aaa
xor
jne
leave
jecxz
jns
clc
test
aam
xchg
and
mov
mov
gs
int3
sub
loop
push
sti
sbb
xchg
movsb
aas
adc
mov
pop
in
sub
add
aad
setae
inc
mov
shll
xchg
movsb
scas
add
clc
out
aam
pop
adc
mov
notl
xchg
lahf
dec
cmc
xor
add
inc
pop
push
jns
fstl
pop
push
cmp
mov
add
outsl
mov
shl
dec
or
xor
push
mov
mov
push
fadd
mov
push
cmp
callw
lods
call
sub
and
scas
int3
loopne
xchg
mov
or
insb
repnz
aas
movsl
jp
xchg
push
ret
dec
cld
shr
mov
xor
push
push
aas
frstor
sub
jge
cld
sub
mov
sahf
repz
add
popf
or
inc
sarb
mulb
add
cmp
nop
or
lods
imul
add
sbb
dec
cld
jne
add
popa
xchg
shrl
popa
in
mov
inc
sti
or
inc
mov
je
xor
int
mov
loopne
sub
orl
hlt
stos
ret
push
out
insb
insb
mov
mov
js
push
flds
cmp
fstps
add
fldcw
cwtl
hlt
sbb
fnsave
loop
test
notl
mov
sbb
mov
adc
xchg
pop
lcall
enter
out
nop
jl
pop
cmc
and
rol
imul
cmp
jno
mov
cmp
jno
add
mov
cmpsl
pop
jle
xchg
and
mov
and
dec
loop
add
jmp
or
lods
mov
fdivrl
cmp
aad
mov
lcall
subb
cli
and
adc
push
pop
sti
ret
es
data16
sahf
and
cld
mov
out
jb
leave
inc
popa
ds
jbe
xchg
idivb
js
mov
mov
cli
sbb
scas
pop
pop
sti
jne
pushf
das
insl
pop
add
ret
add
ret
pushf
mov
pop
push
lret
clc
sub
push
std
mov
jle
sub
xor
popa
push
pusha
ret
in
jle
lret
ja
pusha
imul
pushf
pop
mov
jmp
in
sbb
xor
aam
sbb
xor
into
mov
xor
ja
call
test
into
pop
int3
fwait
pop
ds
sbb
sub
inc
decb
jecxz
lret
out
mov
orb
outsb
sbb
loope
sub
popf
mov
cmp
cmpsb
cmp
xchg
mov
jecxz
in
or
stos
rolb
jge
cmp
add
fs
xor
jg
adc
push
push
fdivp
les
cmp
mov
repz
ficomps
cs
push
lret
sub
mov
shrl
leave
aas
cltd
sbb
stos
and
hlt
pop
insb
nop
nop
imul
adc
and
shr
loope
dec
hlt
fnstcw
push
stc
mov
insb
shll
ret
mov
repnz
cltd
insb
sarl
bound
repnz
add
cld
xchg
in
mov
add
and
rorl
cmc
loop
repnz
lea
movsb
repnz
test
jmp
mov
mov
loopne
mov
dec
jns
pop
jp,pt
in
jno
out
add
pusha
inc
xchg
pop
jo
mov
es
xor
xor
imul
xchg
outsl
xor
mov
sub
lods
shrl
in
adc
inc
mov
andl
andb
popl
imul
xchg
xchg
in
mov
out
movsb
xchg
sbb
aam
fisttpl
cmp
push
aaa
mov
xchg
lods
fadd
xchg
cmp
cltd
cli
sbb
or
dec
outsb
pop
or
scas
push
push
mov
mov
sbbb
push
xchg
dec
pop
ret
rorl
cmp
idivl
add
mov
dec
dec
cwtl
dec
jle
cli
sub
repz
xchg
aam
stos
movsb
mov
movsb
sub
lods
in
int3
xchg
int3
ja
fwait
cmp
mov
xchg
pop
in
out
test
mov
jo
mov
arpl
test
dec
mov
jne
xchg
lret
popa
adc
or
fbld
jmp
adc
xor
or
test
or
jp
jmp
pop
std
pop
push
mov
inc
outsl
or
xor
dec
mov
cmp
popa
xchg
cmpsl
add
icebp
mov
cmp
data16
xlat
in
jl
dec
and
xchg
fcmovnb
ret
push
pop
stc
aad
xchg
mov
xor
shlb
sbb
cli
jl
fbstp
neg
popl
inc
mov
cmpb
scas
mov
adc
adc
xchg
cmp
sbb
out
jnp
cmp
movsl
lea
xor
or
int3
lret
pop
outsl
mov
sbb
aad
dec
pusha
push
lret
movl
add
and
push
aaa
adc
xchg
push
or
out
sub
fldcw
and
xchg
sub
mov
outsl
cmpsl
push
leave
dec
movsb
test
add
out
sbb
pushf
or
lods
imull
add
mov
in
outsb
mov
xor
outsb
cmp
in
xchg
add
inc
mov
cmp
mov
pop
pusha
test
or
add
mov
push
mov
lock
cld
outsb
fstpt
mov
push
scas
test
xchg
popa
stc
dec
cmpsb
fucomp
mov
stos
add
push
pop
cmp
jbe
mov
hlt
jno
pop
cmovnp
add
clc
shl
pop
xlat
nop
mov
jns
xchg
xchg
daa
push
lods
aaa
and
push
mov
pop
aam
test
cmp
sub
imul
nop
out
mov
fsts
out
push
sub
in
or
cmp
mov
mov
rcrb
aaa
pop
mov
fucomip
mov
les
push
jmp
dec
leave
stc
daa
pop
push
out
js
pop
push
shr
incl
popf
stos
leave
loop
cmpsl
shll
lahf
pop
jp
jecxz
ja
test
cmp
pop
adc
addr16
cmp
and
jno
push
add
pop
outsb
fimull
mov
cwtl
loop
cld
mov
scas
cmp
arpl
lea
scas
push
xor
cmc
ret
inc
dec
es
fnstenv
cmp
in
pop
pop
cmp
hlt
cli
rorl
push
cmp
shrb
xorl
or
mov
xchg
jle
or
jp
jo
test
shl
fxch
adc
shlb
mov
test
stos
sub
cmp
or
pop
test
leave
push
push
js
iret
loopne
push
add
addr16
aaa
jno
lcall
xchg
mov
into
pop
dec
out
mov
dec
je
dec
ja
add
cmp
shlb
ror
sbb
adc
jle
lods
inc
add
or
xchg
push
jmp
stc
mov
fistps
mov
pop
mov
push
xchg
iret
les
xlat
xchg
push
out
adc
jmp
sbb
dec
sahf
loope
inc
xchg
sbbl
xor
into
daa
sar
pop
pop
sarl
loop
or
iret
out
xlat
pop
fldt
mov
insl
cmp
mov
cmp
mov
push
jo
les
cmp
sub
jg
in
ret
adc
adc
shrl
fs
sub
sbb
fs
test
nop
les
pop
pop
aas
je
aas
xchg
out
int3
and
pop
std
and
mov
mov
cltd
pop
ret
shll
jge
insb
mov
or
pop
rcr
mov
lock
aam
push
jecxz
sub
cmp
daa
mov
xor
jecxz
mov
jno
ljmp
lahf
mulb
enter
mov
sbb
sbb
push
adc
mov
cmp
fdivrs
jmp
dec
xchg
call
ss
pop
in
adc
imul
inc
clc
xchg
mov
cmp
cmc
cmp
or
test
and
mov
pushf
mov
cli
lret
mov
shlb
jle
jns
aas
mov
jnp
adc
in
frstor
stos
push
jg
push
xor
dec
lret
xchg
lret
lock
in
sub
pop
rcl
cltd
mov
addr16
stos
jge
xor
mov
cmp
mov
xchg
cmp
push
adc
shrb
mov
bswap
scas
repz
xor
lods
ret
cmc
ret
mov
repz
roll
in
stos
cli
and
shlb
jge
jmp
loope
test
lods
jns
fdivp
pop
ja
inc
mov
hlt
les
dec
sbb
mov
and
push
test
jp
jns
shll
adc
std
xlat
pop
imul
adcb
jle
sbb
mov
xor
push
sbb
std
lods
jge
clc
mov
or
adc
sbbb
sti
lock
ret
push
test
je
lahf
les
mov
ret
push
pop
push
mov
xchg
incl
cmp
pop
outsl
xchg
stos
das
scas
dec
pop
mov
mov
stc
jo
ljmp
inc
xchg
or
xlat
shll
out
xchg
ljmp
mov
jmp
or
mov
jnp
stos
shrb
stos
jg
shll
pushf
fisubl
adc
push
pusha
fstps
fs
cmp
call
mov
lods
test
jge
sbb
cli
jecxz
ss
mov
imul
shrb
lods
sbb
and
and
pop
outsb
adc
or
jns
shl
loop
sbb
mov
test
cmp
mov
addr16
push
mov
xchg
popa
jg
movsb
loopne
mov
loope
lahf
cmpl
and
enter
das
in
mov
xchg
ficoml
mov
fwait
push
mov
mov
jbe
inc
push
inc
add
jns
push
popa
ret
pop
sarb
bnd
mov
push
mov
and
fstl
xlat
cs
sub
sti
adc
imul
xchg
lret
mov
ja
xlat
stos
or
jnp
repnz
xor
xchg
scas
rorl
cmp
in
mov
sarl
jle
adc
test
inc
sarl
mov
mov
xchg
jae
cltd
cmp
inc
mulb
xchg
int3
fsubl
ja
ss
movsl
add
stos
dec
sub
adc
fbld
movsb
hlt
mov
jl
fistps
sbb
xlat
pop
sbb
rolb
mov
je
pop
inc
adc
mov
push
loope
push
pop
push
xor
or
decb
push
mov
cli
cmc
and
add
pop
or
cli
and
mov
jg
dec
iret
inc
cmpsb
jo
mov
insb
movsb
rolb
inc
testl
adc
pop
mov
insl
outsb
rcrl
or
pop
adc
lock
jge
fiadds
sbb
cwtl
inc
pop
in
addr16
inc
cmp
push
or
cld
or
rcrl
aaa
stos
mov
mov
stos
xchg
xchg
repz
push
sub
aam
mov
cmp
lcall
fldl
stos
into
fnstsw
adc
fdivs
or
dec
lret
in
mov
add
mov
xor
or
lds
and
or
cmp
setne
out
xorl
jmp
mov
mov
add
mov
movsl
cmp
shlb
sub
ret
subl
movsb
adc
inc
cmpsb
out
lods
hlt
lgs
jnp
lds
pop
ret
xor
lret
out
mov
inc
outsb
fwait
repnz
outsl
nop
sbb
or
imul
fcmovu
sbb
add
loope
mov
or
mov
test
int
mov
imul
sub
jns
pop
pop
loope
mov
outsb
ret
stc
repnz
mov
push
pop
pop
scas
inc
shl
cmc
push
mov
mov
dec
les
adc
fadd
jmp
sarb
imul
add
pop
jl
in
scas
lahf
xchg
fistl
sub
pop
mov
mov
dec
jecxz
sub
or
stos
xchg
call
rorb
push
pop
jl
pop
in
push
imul
dec
xor
jo
push
lahf
jae
imulb
adc
dec
mov
imul
dec
aas
sbb
or
adc
xor
jge
push
enter
push
jno
cmp
sbb
or
mov
pop
fsubrs
pop
loopne
jo
mov
jns
bound
xor
int
addb
adc
int
inc
mov
push
jmp
aaa
ljmp
into
cmc
lahf
clc
movsl
enter
and
into
and
and
shrl
jecxz
xchg
sti
scas
in
add
imulb
fistps
and
mov
ljmp
dec
stos
fcmove
das
mov
sub
ds
out
rclb
jle
jo
xor
jae
cmp
popa
dec
fnsave
je
pop
mov
or
les
std
sbb
in
push
leave
mov
push
push
push
inc
pand
adc
add
stos
and
repz
xor
hlt
loopne
inc
fidivrl
cltd
push
or
push
test
dec
xchg
daa
mov
xchg
mov
sbb
push
inc
pop
mov
jl
pop
mov
jb
cmp
sbb
call
mov
cwtl
sub
mov
orb
mov
cs
orl
xchg
les
negb
cmpsl
pushl
mov
push
push
push
aad
pop
jne
lahf
and
pop
mov
rcrb
xchg
jno
rcll
aad
sbb
fs
push
dec
outsl
lret
dec
push
fimuls
in
rclb
xchg
xor
cmp
push
imul
into
mov
fidivrs
cmp
out
jnp
push
arpl
mov
repnz
clc
rolb
shr
lret
cld
ss
aam
addl
adc
and
fadd
std
les
sub
in
jle
loopne
mov
data16
leave
into
lea
and
push
cltd
cmp
enter
aam
clc
sub
mov
cmp
add
inc
imul
lods
jg
ljmp
insl
jne
push
in
xor
sub
lock
dec
adc
adc
loop
sbb
test
adc
xor
dec
pushf
enter
ljmp
mov
mov
ds
aam
mov
xchg
rcrb
outsl
pushf
test
daa
iret
jae
outsb
xor
and
lcall
or
scas
sub
cld
repz
rolb
pop
inc
cmp
divl
jns
pop
mov
xor
jno
insb
jne
dec
cmpl
push
ljmp
jl
loop
test
popl
inc
leave
add
sahf
es
rorl
enter
mov
adc
xor
mov
aaa
push
int3
jecxz
fwait
movsb
or
dec
out
or
popf
hlt
mov
push
xchg
or
and
jb
xchg
int
push
hlt
or
mov
push
ficoms
push
push
out
ljmp
xchg
mov
fadd
pop
lahf
js
into
pop
mov
aaa
daa
cld
or
stos
pop
mov
divb
je
jg
or
or
pop
outsb
fdivp
dec
fmull
dec
jp
loope
data16
cmp
xor
scas
xchg
loopne
mov
sti
sahf
xor
fadd
mov
sbb
daa
jp
xchg
loop
adc
cmp
sub
mov
push
pop
lcall
xlat
mov
inc
add
xor
popa
movq
sub
stc
lds
les
bound
je
mov
push
lods
pop
mov
adc
mov
pop
mov
adc
fstp
repnz
test
mov
and
adcl
inc
aad
sub
ret
pop
scas
mov
mov
idivl
adc
mov
sbb
sti
push
xor
pop
push
mov
loopne
leave
jae
inc
push
sub
shll
push
sub
movsb
sbb
pop
push
and
pusha
mov
fs
out
iret
mov
repz
cmovs
out
add
in
jp
je
lret
xchg
out
pop
inc
mov
fdivl
js
xor
mov
mov
lret
mov
and
mov
dec
dec
adc
ja
pop
sub
and
push
pusha
pop
fadds
repz
rorl
js
fdivs
and
ljmp
pop
repnz
shlb
cmc
xor
or
and
faddl
sahf
cs
lcall
cmp
push
jb
sbb
loopne
jmp
inc
inc
ret
insb
or
addl
shl
cli
sub
dec
mov
notw
lahf
jp
stos
test
mov
jbe
inc
push
insb
jo
xchg
lret
insb
int
data16
cwtl
adc
cmp
testl
sbb
lock
inc
mov
daa
fcompl
loope
orb
test
lret
sti
imul
jno
dec
insl
jmp
xor
push
rolb
xchg
xchg
pushf
push
leave
scas
stos
call
adc
adc
inc
xchg
outsb
sub
jb
and
fs
pushf
adc
incl
xor
inc
cs
push
sub
stos
push
bound
adc
add
ret
xchg
pop
lds
ja
sbb
inc
mov
cmp
sti
dec
frstor
xchg
lahf
sub
and
jne
xchg
mov
mov
inc
out
adc
cltd
push
xchg
mov
pushw
jae
loopne
jl
fistps
test
sbb
test
inc
adc
pop
sub
aas
repnz
loopne
rclb
testb
or
jns
jne
inc
dec
lahf
mov
dec
jp
jecxz
sub
mov
movsb
push
jns
loopne
dec
mov
add
or
stc
or
insb
xlat
mov
shlb
lods
stc
mov
xor
movsb
roll
cwtl
dec
fildll
sub
bound
ljmp
outsl
fdiv
outsl
xlat
test
fwait
into
xchg
rorb
xchg
and
loope
andb
outsl
sbb
adc
loop
mov
pop
stos
lret
lret
xor
inc
jne
ds
cmp
push
pushf
mov
inc
insl
cmp
aas
adc
and
mov
cmp
pop
xor
mov
xchg
cmp
xor
sub
loopne
fdiv
fyl2xp1
pop
call
adc
or
test
int3
mov
pusha
jns
popa
dec
dec
sbb
in
adc
inc
mov
aaa
je
les
add
test
jmp
clc
in
loop
inc
mov
push
jg
add
mov
mov
pop
int3
mov
jecxz
pop
pop
mov
mov
int
aam
or
jge
mov
scas
xchg
inc
int3
cmp
and
out
and
add
movsb
std
xchg
push
xlat
mov
lret
sub
push
jno
cmpsl
inc
sub
mov
mov
or
xchg
lahf
call
or
dec
mull
and
rcll
sub
mov
ljmp
outsb
sub
icebp
andb
test
scas
icebp
daa
fistpll
leave
mov
pop
mov
addr16
out
sub
hlt
lock
icebp
outsb
popf
push
pop
rolb
push
stc
xor
aaa
pop
mov
sub
add
and
pop
and
cmp
daa
adc
arpl
jp
ja
xchg
cld
aad
insb
jnp
lock
sbb
divb
sbb
ret
int3
cmp
lods
or
loope
inc
add
adc
cwtl
cwtl
pop
cwtl
sahf
stos
arpl
cmp
sub
out
paddsw
cwtl
jecxz
pusha
pop
xchg
lds
cmp
sti
leave
mov
sbb
clc
test
es
ds
mov
nop
or
fdivp
cmp
or
inc
xchg
or
and
pusha
pop
inc
mov
lahf
push
lea
or
pushf
pop
pop
testl
int
lret
sarl
add
mov
sbb
push
movsb
adc
ret
mov
enter
sti
repnz
xor
popf
and
jne
aaa
mov
aaa
pop
cli
sbb
out
mov
rcll
add
addr16
hlt
adc
mov
sbb
filds
jo
das
daa
jmp
dec
mov
in
test
icebp
mov
mov
push
xchg
in
or
sahf
xor
jecxz
pop
xlat
push
repz
push
mov
sub
hlt
push
stos
jp
lds
les
loope
or
sbb
aaa
sub
mov
xchg
cs
imul
sbb
dec
idivl
adc
int3
inc
ljmp
mov
mov
sarb
mov
bound
hlt
pop
jnp
gs
jge
push
add
jo
sub
and
jno
mov
fnstsw
mov
cmp
ror
insl
rorb
mov
inc
daa
jno
je
lods
xlat
adc
mov
dec
sub
push
fisubl
sbb
sbb
mov
loop
xor
mov
lods
or
lahf
xchg
pop
inc
icebp
lods
dec
add
andl
in
jmp
and
arpl
roll
add
xchg
sub
aam
add
out
mov
in
adc
xorl
add
test
fisubl
std
mov
cmpsl
xor
xchg
sub
rcll
int3
shrb
in
pop
hlt
mov
dec
xor
lods
pop
or
pop
xchg
pop
mov
xor
ret
scas
aas
int
add
aad
jb
outsl
push
mov
movsb
in
and
std
jmp
dec
jbe
lods
mov
sbb
cltd
data16
dec
test
aad
nop
pop
icebp
cmp
cmpsb
jmp
sbb
jmp
pop
fwait
aad
aas
insb
ret
repz
pop
ret
pop
jmp
adc
cmp
sahf
loop
xchg
js
pop
push
cmpsb
pop
xchg
jecxz
repz
lea
sarl
mov
push
dec
push
push
jo
xor
incl
dec
sbb
scas
mov
stos
arpl
pop
orps
mov
jns
fcomip
imul
sti
xchg
lds
push
xchg
loope
fists
push
inc
leave
sub
dec
sarb
pop
jge
jb
imull
mov
xor
jae
mov
popf
notl
cmp
leave
dec
add
test
rol
push
test
dec
xchg
jnp
pop
push
pop
or
mov
addr16
leave
xchg
mov
push
jb
mov
pop
push
repz
data16
xchg
and
js
push
sbb
outsl
sahf
es
xor
imul
cmp
aad
cmc
pushl
sub
xchg
jo
leave
in
or
and
rclb
jae
adc
or
cmp
rclb
push
add
sub
or
sub
add
pop
pop
mov
adc
test
cs
or
loop
fs
iret
xor
pop
dec
insl
adc
js
sbb
xorl
mov
imul
pop
fmuls
lret
jl
lods
aam
bound
push
ret
rorb
out
mov
imul
push
xchg
or
add
jno
mov
xor
shrl
add
adc
sbb
enter
pushl
popa
stos
es
int3
mov
or
notl
shlb
jge
mov
loop
and
dec
xchg
mov
mov
push
sub
mov
testb
cmpsl
pop
test
mov
xor
sub
jmp
mov
imul
clc
ret
mov
pop
stos
or
mov
mov
hlt
std
xchg
xchg
jmp
iret
jno
mov
test
xor
pop
movsl
dec
adc
add
in
sbb
test
sbb
cmp
add
out
mov
push
jge
lret
daa
or
or
sbb
mov
and
add
rorb
nop
loopne
arpl
mov
aam
sti
pop
cltd
out
xchg
orb
arpl
inc
loope
stc
xchg
mov
call
iret
in
sahf
inc
ret
frstor
daa
dec
lcall
call
mov
dec
sbb
movsb
pop
xchg
sbb
cmp
mov
stos
fldcw
je
bound
mov
push
movsl
aad
mov
je
lock
ss
pop
xor
repnz
and
fists
mov
inc
gs
cltd
jmp
sbb
mov
imul
stc
add
inc
outsb
push
aaa
std
pusha
pop
push
push
sbb
cld
xchg
mov
add
mov
dec
idivb
fildl
cmpsl
jnp
hlt
pop
lret
xor
sbb
jle
sub
mov
pop
cwtl
mov
xchg
jns
jg
mov
and
mov
stc
inc
and
mov
call
or
loope
push
and
push
test
jnp
add
das
add
mov
or
dec
mov
push
sub
scas
inc
mov
sti
in
fcomip
js
aas
add
sub
mov
push
ja
ja
cwtl
sub
dec
stos
dec
jecxz
cltd
mov
mov
dec
mov
cld
in
sub
pop
movsb
ljmp
test
xchg
fisttpl
cli
leave
mov
xchg
sub
test
hlt
movsb
jae
mov
and
or
fucompp
adc
add
outsl
jp
aad
push
xchg
cmp
ds
pop
sahf
fimull
or
ret
pop
aaa
xor
jne
ret
mov
sbb
sub
dec
sarb
sbb
jge
loopne
arpl
leave
xchg
pop
sahf
movsb
push
sbb
test
xchg
and
mov
jb
shrb
nop
xchg
sbb
sub
jl
push
dec
pop
mov
dec
test
sbb
dec
insl
jmp
rcll
pushf
mov
cmpsl
sub
fimull
pop
jmp
cmp
sbb
fisttps
pop
sbb
mov
xchg
ja
inc
mov
push
jecxz
inc
insl
lahf
mov
push
push
jmp
sub
in
pop
pop
insl
adc
jle
out
cli
cmp
push
xor
out
inc
push
push
ds
jnp
mov
fists
xlat
int
mov
pop
test
cmpl
jg
clc
xchg
mov
xchg
dec
into
stc
aad
adc
rcrl
inc
pop
scas
pop
test
xor
mov
add
das
fucomi
mov
js
jle
aam
or
cs
sub
out
into
std
cs
mov
jns
xlat
daa
mov
fldt
pop
pop
fbld
lahf
adc
daa
in
movsl
and
xchg
pop
adc
inc
jno
lcall
cwtl
and
out
push
jns
je
ds
push
xor
mov
jnp
inc
lds
arpl
sbb
sub
sahf
push
xorb
insb
push
sbbb
ss
adc
cmc
adc
stos
push
xor
add
push
pusha
push
cmpsb
lock
adc
xor
jge
gs
jo
push
leave
inc
mov
sar
les
adc
adc
out
mov
mov
pop
in
dec
insl
aad
push
testl
cmp
fmuls
push
ss
or
push
mov
add
or
sbb
fdivrs
shl
fbstp
push
daa
jg
dec
adc
jae
loope
fldenv
sahf
sahf
push
xchg
fnstsw
loope
dec
mov
adc
in
sahf
mov
jmp
jecxz
fcomps
repz
adc
addr16
movsl
leave
in
push
in
add
daa
stc
pop
ret
scas
jecxz
rorb
inc
inc
jp
and
push
add
inc
mov
lahf
add
sahf
dec
xchg
hlt
lods
cwtl
xchg
in
dec
inc
hlt
sub
and
sti
lock
push
mov
cmp
xchg
xor
mov
jne
and
mov
arpl
sbb
in
loop
xor
test
inc
pop
imul
movsl
pushf
add
mov
cmpsl
int
rcrl
fdivrs
sbb
es
push
pusha
insb
and
out
out
cmp
rcrl
iret
dec
ret
xorl
ljmp
and
pushf
mov
sub
sub
and
enter
mov
push
or
lret
xlat
jp
dec
mov
sbb
and
xchg
fmul
push
repnz
test
and
scas
lahf
jle
sbb
das
shl
sahf
jle
aam
xchg
xchg
dec
popa
in
mov
push
mov
into
dec
dec
inc
push
mov
mov
clc
pop
jmp
pusha
lea
out
ficoms
mov
scas
adc
in
lret
adc
cld
scas
xchg
adcl
gs
psrlq
rorb
cwtl
inc
int3
add
mov
repz
enter
in
pusha
mov
mov
dec
mov
add
adcl
ss
dec
pop
rcll
and
fildl
adc
adc
fnstenv
ret
gs
mov
xchg
cmp
sahf
xor
outsl
pop
test
or
shlb
test
shl
sub
jmp
lods
sub
or
mov
push
adc
cmpl
xor
and
or
repz
pop
sub
push
sti
jae
test
xchg
fcmovb
jl
cmp
cmp
or
out
mov
in
test
dec
iret
insb
jno
inc
push
sbbl
out
jmp
frstor
out
inc
and
scas
sbb
cmpsb
popf
sub
mov
sub
pop
jecxz,pt
adc
stc
jne
mov
test
aas
or
pop
add
jns
push
push
dec
or
pop
xor
jge
lret
mov
and
daa
mov
inc
pop
mov
mov
push
loopne
and
ror
pusha
aad
daa
aas
mov
mov
cmp
fs
sub
dec
adc
cmc
lret
fcoms
jb,pn
sti
ficomps
inc
fsubrs
test
loop
sub
mov
scas
add
imul
mov
lret
fnstcw
mov
cmpsb
sub
outsl
es
adc
dec
js
mov
cmp
rcr
sahf
test
shlw
imul
mov
adc
test
es
nop
xor
mov
orl
pop
add
in
imul
loop
jecxz
dec
xor
pop
ficomps
fwait
insb
or
xor
call
push
sub
call
jbe
sbb
in
je
in
inc
jmp
aaa
pop
negb
notl
jnp
inc
sarb
push
in
sbbb
aam
cld
sub
clc
popa
clc
cmp
pop
int3
inc
int
ja
loope
ret
mov
fsubl
inc
shlb
lret
fisubs
je
sbb
xchg
jbe
xchg
jbe
rolb
mov
test
arpl
int3
shr
add
int
setg
movsb
stc
sarl
cltd
shrl
jecxz
push
aas
ljmp
hlt
cmp
pop
dec
fs
xor
dec
dec
pop
out
mov
stos
and
test
fsubrs
and
fwait
lret
fildll
scas
fisubs
and
imul
mov
xchg
pop
in
and
testl
rclb
pusha
enter
mov
pusha
xchg
push
pop
std
mov
test
imul
xchg
imul
iret
ljmp
dec
inc
fistps
inc
insb
sarl
push
faddl
out
call
cmp
or
aas
push
sub
sub
ss
lret
and
jge
push
lods
or
sbb
push
sbb
jne
loope
ds
pop
mov
je
cmp
inc
jmp
std
aas
dec
cld
adc
int3
cs
sub
and
or
fbstp
dec
cwtl
pusha
push
jl
jecxz
mul
or
testl
mov
das
jmp
push
adc
mov
fcmovb
popa
xor
jge
xor
lea
fsubr
int
mov
std
mov
mov
rcrl
rorl
imul
add
inc
inc
inc
sub
into
int
xlat
and
rorb
negb
fcom
icebp
jb
ret
test
jl
lcall
int3
out
out
cmp
insb
cmp
aas
lods
das
popa
ss
pop
daa
ljmp
mov
dec
f2xm1
orw
clc
cmpsl
popf
js
sub
mov
and
loop
stos
in
push
movb
lock
lods
or
and
adc
pop
add
into
adc
pop
mov
mov
inc
jae
hlt
xchg
xor
cltd
in
std
pop
out
and
mov
ds
bound
lods
fsub
in
sbb
cmp
cltd
xchg
aas
gs
dec
ljmp
mov
pushfw
sbb
rclb
sbb
or
mov
je
adc
xchg
jecxz
fs
jle
out
adc
scas
or
mov
je
sbb
ror
sbb
jmp
je
add
adc
xchg
lcall
stc
inc
cmp
cli
add
mov
xchg
sub
arpl
mov
push
adc
jmp
push
nop
outsb
lock
mov
or
rcrl
push
sti
insb
sub
mov
jno
dec
in
pop
arpl
dec
test
jmp
aam
jle
push
xlat
add
add
inc
or
inc
decb
cmp
xlat
pop
sbb
loop
int
fdivrl
ja
push
mov
sti
insb
jg
call
lret
mov
jns
sahf
lods
imul
lret
push
xchg
mov
sbb
fidivrl
mov
rolb
xor
xchg
push
xchg
lsl
pop
mov
cli
xlat
test
faddl
ss
mov
mov
xlat
mov
mov
cs
push
gs
mov
jnp
mov
loop
mov
rcr
mov
loope,pt
movsb
cmc
jno
or
insb
repz
das
adc
cmp
inc
adcb
jle
das
aad
cmp
in
frstor
loop
mov
inc
sbbb
push
ja
stos
loop
dec
push
mov
pop
out
aaa
cltd
xor
gs
shl
dec
orl
test
dec
jmp
xchg
enter
add
fiaddl
gs
stc
xor
fcomi
add
xchg
jecxz
ret
es
and
jmp
rcrb
fadds
popf
fcomp
or
lret
inc
aad
cmp
mov
sbb
div
sbb
xor
test
mov
lods
cmc
xchg
pop
mov
fcomps
pop
dec
pop
pusha
or
fstp
inc
cld
jge
iret
jnp
shrb
lds
or
mov
fwait
iret
iret
or
in
rclb
xor
sahf
fstl
lods
xchg
sbb
mov
sub
cmpsl
insl
addr16
mulb
pop
dec
ja
dec
js
xchg
pop
les
xlat
or
out
cmp
and
sbb
add
divb
loopne
cmpl
popf
out
es
inc
and
mov
xchg
lret
mov
das
stos
fs
lcall
ljmp
push
rolb
std
lock
rcrl
daa
mov
mov
pop
shlb
push
mov
mov
outsb
int3
popf
inc
cmpsl
ss
fimuls
daa
scas
mov
inc
mov
pop
loopne
in
cmpsl
mov
lods
sahf
insl
dec
orl
negl
adc
cmpsw
cwtl
lret
shll
jae
jecxz
fisubrl
mov
and
pop
xor
scas
pushl
cmp
jno
mov
inc
mov
aad
sbb
mov
cmp
mov
jp
out
je
dec
mov
add
stos
push
cmp
or
jno
mov
add
jg
jb
pop
pop
or
add
loope
pushf
add
sub
imul
pusha
lods
push
mov
or
adc
dec
add
sbb
add
sbb
jbe
xchg
loop
push
addl
sub
lods
pop
sub
xor
sub
repnz
out
iret
mov
roll
imul
orb
push
arpl
jo
inc
inc
xor
sub
push
ret
jo
movaps
sti
or
push
cmpsl
dec
test
mov
arpl
cmp
xor
lret
mov
xchg
mov
add
push
fstpt
popf
add
mov
fcomp
repnz
add
inc
xchg
imul
clc
adc
dec
or
jne
pushf
mov
js
pop
xchg
mov
and
orl
aas
jae
mov
pusha
sub
insb
fnstenv
push
mov
push
lods
scas
pop
mov
rorb
or
subl
cmp
lods
cwtl
fstl
sar
sub
mov
pop
ja
adc
test
dec
pushl
lock
mov
jl
iret
push
cld
mov
pop
outsl
arpl
xchg
push
jle
adc
fistpl
fdivl
fstpl
sbb
test
je
push
pop
ss
mov
fistps
cmpsl
xchg
fwait
sbb
dec
push
dec
lods
inc
xchg
adc
out
out
fldenv
insl
into
adc
inc
add
push
lods
cmp
leave
pop
scas
imul
jecxz
sub
ror
jb
xchg
mov
inc
aaa
ret
fs
xchg
and
push
in
stos
addr16
or
jo
dec
and
sbb
push
fwait
jae
lahf
imul
and
sub
icebp
add
ljmp
sahf
dec
bound
dec
jmp
loope
inc
push
cld
dec
sub
mov
and
dec
test
jecxz
mov
pushf
push
adc
jb
push
shlb
push
jbe
pop
mov
or
stos
out
call
push
add
dec
adc
mov
inc
xchg
dec
mov
sbb
mov
and
scas
imul
push
xor
sub
add
test
scas
shrl
fldt
adc
jns
or
or
pop
push
fiadds
mov
in
and
jl
sub
jne
jmp
mov
and
popa
div
add
inc
lahf
in
jns
in
push
mov
xchg
addl
fmull
mov
push
mov
fwait
mov
rcrb
fidivl
jmp
test
push
pop
int3
clc
push
push
out
rcll
cli
xor
cmpsl
in
outsl
xchg
sti
mov
shr
enter
sbb
lea
inc
inc
pop
rcl
mov
scas
jle
xor
lret
out
dec
xor
and
push
lds
dec
lret
loop
outsb
mov
icebp
jnp
push
ret
dec
cld
movsb
jle
pavgw
xor
xor
ljmp
addb
mov
add
xor
add
cmp
lcall
out
mov
cmp
ss
aam
mov
outsb
fimull
mov
and
push
mov
in
adc
xlat
dec
jno
in
jo
lahf
test
fsubr
gs
cmp
aad
add
or
xor
repnz
adc
data16
xchg
ja
loop
xor
mov
inc
ss
dec
ficompl
adc
andb
jecxz
ret
scas
xor
sbb
mov
inc
or
inc
sbb
inc
mov
loop
mov
cmp
int
xchg
mov
jecxz
mov
add
sarb
jae
int3
cmpsl
jecxz
xchg
cmpsl
sbbl
pop
pop
pop
mov
mov
call
cli
data16
cmc
pop
push
movsl
push
sahf
scas
mov
add
dec
fs
clc
lock
adc
jno
rcrl
shl
sub
gs
imul
xlat
push
imul
cmp
test
jae
cmp
aaa
lahf
test
cmp
bswap
jle
xchg
sbb
fs
cmp
lods
subb
sahf
stc
pop
loop
cmp
jnp
in
sbb
loopne
out
pushf
out
jmp
daa
dec
sbb
add
test
arpl
mov
xor
mov
xchg
dec
mov
adc
mov
or
movsb
add
xor
xor
or
int3
mov
shll
sub
jns
bnd
mov
pop
out
loope
mov
cmp
mov
sbb
push
pop
sub
push
ds
stc
ljmpw
add
pop
movsb
xchg
mov
pop
and
shlb
inc
mov
mov
sti
lods
scas
loopne
shll
sbb
and
add
mov
inc
push
mov
push
push
movsl
ret
ja
cmp
repz
mov
mov
test
cltd
fdivrs
fsts
or
mov
mov
xchg
jo
inc
mov
xchg
and
mov
cmpsl
jmp
jge
mov
adc
inc
dec
xchg
jae
into
idivb
sbb
std
repz
xlat
sbb
mov
fbld
pop
fwait
inc
popa
cmp
stc
rol
push
xchg
loope
jo
jne
mov
xor
sub
imul
inc
push
jp
dec
inc
pop
sbb
call
mov
push
and
stc
or
jo
mov
mov
adc
shlb
jbe
outsb
jo
sub
sbb
lock
sub
sub
xchg
std
push
dec
mov
pop
div
pop
mov
out
jl
add
adc
lahf
lret
out
pop
mov
ret
bound
mov
fistl
sub
in
add
adc
je
insb
jge
out
scas
xchg
les
pusha
test
scas
push
testb
push
pop
xchg
or
inc
leave
mov
ss
xchg
cmp
cmp
sti
dec
mov
xchg
scas
xchg
in
xor
sbb
mov
add
mov
pushf
das
add
adc
into
stos
nop
inc
hlt
ficoml
pop
scas
pop
push
jae
repz
mov
movb
sub
inc
movl
js
or
xor
xchg
inc
mov
mov
cmp
jae
inc
inc
xchg
sub
mov
jmp
cld
sbb
push
cmc
shll
mov
aaa
adc
mov
out
les
xor
or
cmp
mov
dec
jl
addr16
dec
cmp
clc
lods
movsl
inc
sub
sub
push
xor
and
push
lahf
cmp
jns
in
ljmp
jle
js
add
popf
stos
ficoml
jl
pusha
insl
add
repz
pop
andl
xchg
mov
jmp
xchg
mov
fcomp
fsubrs
fnstenv
jae
lea
mov
lcall
jmp
cli
jmp
dec
rclb
iret
popa
inc
jmp
sub
scas
mov
insl
push
jb
mov
xor
test
push
mov
inc
fisubrl
jb
pop
int3
pop
in
out
insb
or
int
shr
hlt
mov
and
sub
mov
or
xor
add
xchg
ror
insb
add
in
adc
sti
lret
and
in
push
adc
movsl
enter
mov
xchg
sub
lds
jg
lds
xchg
sub
mov
push
mov
inc
adc
pushf
fidivrl
sub
push
pop
call
out
cwtl
mov
iret
or
jns
push
xor
stc
fwait
es
and
inc
dec
loop
jmp
pushf
mov
je
ja
jbe
call
mov
in
mov
test
dec
dec
jnp
cli
xchg
push
pushf
adc
and
dec
shrb
cmc
jne
imul
cmp
repz
cmc
xor
outsb
push
stc
lcall
fwait
enter
xor
push
add
inc
das
data16
cmp
pop
cs
fistpl
pop
in
incl
inc
add
push
mov
and
mov
mov
sbbb
stc
shll
jns
shl
push
or
and
push
aam
ljmp
push
mov
cmp
aaa
into
cmp
dec
xchg
sub
and
inc
lods
mov
imul
and
push
cmc
imul
cltd
pop
jae
pop
xchg
push
lods
adc
ret
xchg
aam
xchg
mov
lret
push
pop
or
mov
xchg
addr16
xor
inc
cmp
mov
icebp
je
jbe
fwait
xchg
hlt
ret
lods
pop
mov
scas
sub
jge
std
jns
jne
sub
loop
lock
stos
call
lret
or
and
push
dec
jns
rorl
rol
outsl
cmp
or
xor
sub
test
test
jae
fmuls
movsl
fstl
cmp
mov
jmp
test
insb
mov
adc
fsubr
lods
or
or
imul
faddl
xchg
jg,pt
adc
sub
imul
pop
mov
call
or
mov
out
int
ror
popf
sti
sub
and
stos
inc
sarb
xchg
dec
push
popf
cmpsb
fbld
das
jo
in
mov
ss
out
mov
cld
fucomip
jmp
adc
mov
and
bound
fcomps
cmp
jge
xchg
cmp
cmp
insl
popa
dec
sahf
sti
mov
push
fnsave
orl
mov
push
xchg
xchg
das
ss
xor
ja
ja
and
sbb
add
mov
pushf
fstp
lods
dec
or
ret
arpl
das
mov
imul
mov
dec
rclb
and
out
jecxz
movsb
ljmp
push
mov
daa
rolb
add
sbb
in
inc
js
xor
data16
clc
and
push
jb
das
in
scas
push
sub
leave
pop
sbb
add
icebp
inc
sbb
pop
lods
nop
cltd
dec
ret
adc
lods
loop
inc
out
jns
pop
dec
inc
mov
mov
addr16
sti
cmp
in
repz
pop
insl
sahf
inc
xchg
pop
pop
xchg
imul
movsl
sub
xor
xlat
rclb
push
aaa
pop
int
mov
xor
popf
fsubs
inc
aaa
outsl
movsb
cmpsb
je
pop
cs
fiadds
sub
sbb
lods
jmp
mov
pop
pop
negb
or
mov
fildll
fwait
jb
push
jp
mov
xor
pop
xor
loop
outsb
jo
test
cli
mov
iret
push
rclb
jne
imul
aad
in
scas
fs
add
in
fimull
loop
mov
call
shlb
mov
shll
or
pusha
adc
lahf
fdivl
cld
xchg
mov
cmpsb
lods
pop
pusha
popa
pop
pop
adc
in
jbe
aam
rcrl
aaa
and
lds
and
fildll
cmpl
std
gs
push
xor
sub
cmp
push
push
lgs
mov
iret
lret
scas
es
lods
inc
fsub
addr16
cltd
arpl
ds
es
push
mov
test
push
or
inc
out
xchg
mov
add
jne
hlt
lar
pop
ljmp
sbb
or
mov
lds
push
cwtl
fdivrp
mov
outsb
in
pop
les
add
aas
testb
mov
sub
cmp
sbb
jl
popa
pop
orl
fsub
xchg
cmp
std
sahf
mov
sbb
fbstp
fisttpl
out
or
inc
test
jge
or
adc
jmp
mov
mov
dec
dec
dec
outsl
push
or
movsb
xor
insl
fucom
mov
loopne
xor
xchg
cmpb
xchg
jae
pop
notl
cmpl
imul
mov
sti
bound
add
sub
fsubs
push
inc
push
aas
stos
mov
xchg
adc
imul
and
in
int
jmp
shrl
testl
loop
call
xchg
dec
out
add
adc
subl
shll
cmp
pop
dec
inc
push
xor
loope
sbb
ljmp
ss
clc
mov
dec
sar
xchg
insb
je
mov
jb
ffreep
jge
mov
pop
or
ret
xlat
ss
xchg
out
fisubrs
fs
ret
xchg
sub
imul
sbb
or
dec
or
push
or
faddp
cs
fnstenv
icebp
jmp
es
and
je
imul
nop
lahf
dec
sbb
push
dec
jp
aad
mov
mov
mov
fdivrs
call
lock
shl
mov
adc
inc
or
jp
ss
push
std
jmp
dec
pop
arpl
cmp
scas
cmp
xchg
rcl
mov
xor
js
push
shll
and
mov
subl
mov
jno
mov
aaa
pop
mov
cmp
addr16
mov
xorl
mov
pop
dec
out
inc
aam
cmc
or
in
and
pusha
lods
add
cmp
add
lret
dec
ds
xchg
push
arpl
orb
add
push
in
dec
mov
out
scas
cmp
adc
fnstsw
mov
adc
and
sti
jecxz
sbbb
out
xchg
and
xchg
and
sbb
leave
es
sub
pusha
psubq
inc
rcr
aam
popf
les
test
add
xchg
pop
push
mov
enter
jae
pop
nop
sub
std
mov
dec
pop
push
fwait
inc
ja,pn
dec
and
push
lahf
pop
cld
mov
jnp
xchg
sbb
nop
and
push
hlt
lock
lret
mov
xchg
xor
pop
jbe
jp
mov
nop
cmc
push
fcmove
call
push
pop
ret
movsb
test
add
push
add
ret
sub
dec
jne
out
in
xchg
cmpsl
mov
mov
stos
enter
scas
adc
cmp
sub
popf
sti
xchg
mov
shll
ret
dec
jbe
fildll
push
and
test
aam
shl
es
neg
insb
clc
ret
fsin
repnz
jle
ret
jb
and
sub
lcall
gs
mov
mov
pop
cmp
xchg
pop
subl
jnp
mov
imul
icebp
xchg
rol
or
insb
pop
pop
movsl
outsl
xchg
nop
xorl
add
call
push
sbb
inc
or
mov
aad
ret
mov
mov
jbe
dec
push
loope
incb
pop
mull
unpckhps
pushf
stc
es
loope
add
pop
pop
jg
mov
icebp
mov
pop
clc
xor
jge
pop
push
out
lods
jo
xchg
mov
js
push
xor
mov
adc
sub
push
mov
xchg
inc
popf
shll
inc
mov
inc
ljmp
out
test
stos
test
push
mov
shll
xchg
test
mov
sub
sub
xchg
sub
rol
lcall
fimull
lret
jns
pop
nop
mov
mov
scas
push
scas
mov
cli
and
mov
clc
mov
mov
stos
aad
adc
adc
in
inc
push
sub
pmulhw
jp
xchg
sbb
mov
sbb
in
push
xor
sub
lcall
ja
mov
mov
movsb
test
mul
push
inc
push
sbbb
add
pusha
stc
jg
fimull
sarb
xor
out
fwait
add
pop
push
xor
and
popa
stos
lret
and
in
cmc
daa
ljmp
arpl
jne
mov
mov
es
xchg
cli
stos
dec
imul
lds
adc
adc
adc
dec
push
cmp
imul
cli
in
movsb
pop
ja
outsl
dec
stos
pusha
testl
sub
mov
jbe
xchg
ficompl
repz
cld
push
add
arpl
xor
mov
jecxz
loop
push
dec
adc
cwtl
mov
iret
mov
and
divl
cwtl
call
or
outsb
jge
pushf
jbe
pop
jnp
mov
sub
jae
push
je
fbld
scas
mov
stos
dec
pop
dec
adc
mov
and
lahf
xchg
jae
out
jb
xchg
lds
adc
lret
and
push
dec
fisubrl
xorl
jg
lahf
cltd
jecxz
xchg
jle
pop
xchg
pop
mov
push
push
or
jmp
mov
lea
adc
scas
dec
sub
call
inc
dec
and
test
aam
aad
jo
pop
fdivrs
mov
and
cmpsb
push
imul
cmp
inc
mov
dec
es
std
jae
roll
push
pop
fsubrp
movsl
daa
add
mov
ret
jg
mov
cwtl
leave
inc
jae
subl
rcl
sub
and
add
mov
imul
add
dec
cmpsl
jl
adc
lea
bound
add
jb
mov
adc
mov
call
leave
or
inc
scas
call
push
mov
jmp
adc
jno
fcmove
adc
mov
movsb
xchg
jl
fiaddl
mov
ja
mov
sbb
jmp
lods
ja
push
xlat
mov
push
push
inc
lcall
xor
ret
ss
subb
mov
push
test
xor
jl
push
arpl
popa
pop
out
mov
pop
flds
lret
pop
dec
jl
sub
or
push
loopne
jmp
and
testb
mov
mov
mov
jns
mov
sub
stos
mov
outsl
aaa
inc
jae
les
iret
movsb
int3
daa
sbb
mov
jns
xchg
or
lods
lcall
mov
xchg
inc
movsb
mov
inc
stos
sahf
roll
push
mov
adc
mov
cli
mov
xchg
mov
lea
mov
insb
or
push
adc
inc
and
push
xlat
sub
xchg
leave
adc
cmp
inc
cmp
dec
sub
dec
inc
jo,pt
lret
test
or
enter
mov
xor
addr16
repz
fadds
fstl
jb
push
lds
sahf
xor
mov
add
lret
lea
push
cmpl
fwait
ret
ret
aad
xchg
push
jb
lock
xlat
dec
push
mov
jp,pt
arpl
xchg
lea
cmp
mov
pop
arpl
repnz
dec
mov
incl
jge
or
pop
aam
jo
add
iret
int
aas
aad
push
movsl
popf
icebp
xor
push
mov
jae
xchg
lds
cltd
loop
and
fmull
insl
adc
cmp
addb
pop
loop
cmpsl
lcall
cli
jg
push
add
sti
aaa
jne
andl
fdiv
push
shrl
daa
insb
lahf
xlat
ss
pop
insl
pusha
adc
in
xlat
icebp
insl
xor
xchg
xor
mov
mov
pop
loopne
adc
xor
je
aas
or
fsubs
jp
cltd
and
add
inc
and
and
cmpb
pop
out
ljmp
pop
pop
sbb
fldl
dec
mov
leave
movsl
pushf
fwait
push
add
mov
push
adc
inc
aad
cmp
push
dec
fs
mov
std
popf
jo
dec
out
das
aaa
xchg
sbb
cmp
lret
outsl
int
and
dec
mov
cmpsb
mov
rcll
jns
dec
insl
pushf
pop
xor
rcll
test
jb
pushf
sbb
push
sub
in
sbb
sar
mov
jle
mov
mov
in
xor
add
imul
push
push
out
and
pop
outsl
in
push
je
test
sub
push
sbb
jne
mov
fsubrs
pop
pop
jnp
ja
jae
out
xchg
int
or
lret
xchg
mov
mov
faddp
rclb
xlat
das
incb
lds
addr16
dec
cltd
jno
xchg
inc
mov
daa
std
push
aam
xor
sbb
jmp
rolb
sub
jmp
dec
mov
sbb
mov
ljmp
cmp
sbb
mov
enter
popf
pop
jbe
les
mov
pop
or
dec
lahf
mov
and
mov
lods
xchg
scas
inc
and
jge
lock
mov
mov
or
insl
shl
adc
push
leave
add
pushf
adc
mov
test
or
dec
cmpsb
popf
cmp
sbb
imul
push
jb
pop
mov
adc
cmp
mov
xlat
mov
mov
mov
aad
add
or
inc
ret
add
dec
dec
sahf
push
bound
rorl
dec
push
mov
popa
scas
and
lahf
in
jno
push
andb
lods
stos
xor
jae
inc
pop
repz
dec
test
pushf
test
lcall
dec
xchg
je
mov
xchg
push
data16
mov
in
rcl
popf
xchg
push
xchg
pop
or
sti
xor
idivb
pop
hlt
pop
xchg
mov
add
lahf
xchg
mov
inc
aas
inc
imul
mov
mov
mov
pop
mov
outsl
push
fsts
in
dec
mov
clc
inc
xchg
mov
shlb
xchg
pop
and
loop
adc
sub
rcr
loop
into
xacquire
in
cld
mov
and
in
arpl
in
pusha
jp
adc
jl
mov
fsts
movsl
xchg
push
daa
mov
lods
xchg
mov
push
repnz
push
cmpsl
call
es
xor
xor
jecxz
lods
out
movl
rorb
iret
lds
out
ss
sub
inc
test
inc
or
lcall
push
fstp
inc
sub
jge
cmpsl
mov
fnstsw
cld
mov
lret
stc
ds
mov
pushf
mov
mov
mov
inc
push
sbb
pop
jecxz
push
enter
jmp
dec
imul
loop
inc
lods
popa
in
cmp
testb
pop
loope
xlat
das
loop
adc
pop
dec
inc
fistl
mov
add
mov
jmp
enter
addb
lahf
dec
aad
movsb
ja
xor
sbb
out
mov
sub
addr16
fldt
mov
dec
js
shll
fwait
leave
repz
inc
stos
stos
jnp
sbb
call
dec
mov
cmp
dec
push
xor
bound
cwtl
xlat
call
mov
sbb
fs
mov
ret
pop
inc
movsb
xchg
sbb
mov
cmp
cwtl
sub
pusha
push
cld
out
pop
mov
mov
xchg
mov
outsl
jb
bnd
scas
movsb
rcll
xchg
fidivl
loopne
add
fildll
enter
lea
lcall
das
int3
or
insb
inc
xchg
pushw
call
xor
sar
fisubl
jne
inc
xor
repnz
pushf
test
inc
xchg
cwtl
daa
mov
shl
arpl
leave
sub
jmp
das
push
dec
aaa
cmp
add
jbe
jno
jmp
inc
mov
sbbb
out
sub
fimuls
adc
add
adc
cmc
xchg
mov
iret
or
shrb
shll
xor
popa
mov
sbbl
andl
in
push
inc
jae
leave
dec
push
pop
int3
or
ljmp
ret
dec
xor
and
mov
xor
sub
pop
stc
pop
jbe
bound
cmc
sti
sub
iret
pop
fiaddl
pop
xor
dec
sbb
push
cmpl
push
movsl
dec
test
mov
jecxz
and
mov
mov
mov
ss
in
add
andl
shll
and
pushf
or
dec
mov
xor
sbb
xor
lods
or
xchg
in
stc
leave
mov
xor
cmp
pop
lcall
mov
inc
cli
xchg
mov
insl
out
jmp
mov
ret
dec
inc
gs
daa
xchg
ret
and
adc
inc
ret
inc
leave
inc
or
pop
sahf
jns
pop
sbb
daa
iret
js
pop
sbb
inc
imul
fdivp
cmpsb
or
push
ret
mov
pop
std
daa
shll
sub
inc
xchg
adc
add
sbb
xor
hlt
fs
mov
inc
pop
int
and
out
popa
fprem1
push
xchg
cmc
add
shll
int
lret
xchg
cmc
aas
xchg
pusha
fwait
cmp
dec
xor
test
add
cld
and
mov
and
imul
pop
inc
dec
dec
insl
into
cmp
in
pop
mov
sbb
dec
cmp
sbb
sub
mov
add
ja
jno
and
fdiv
xchg
xchg
pop
xlat
sahf
sub
inc
outsb
lret
iret
and
aam
pusha
dec
add
xchg
inc
xchg
movsl
mov
mov
idivl
inc
adcb
loop
mov
loopne
rolb
mov
pop
js
roll
pop
repnz
test
xor
into
out
jno
xchg
sub
ss
aad
enter
enter
ret
sbb
inc
add
test
in
push
out
and
and
xlat
hlt
mov
push
mov
xchg
xor
xchg
loope
shrb
jo
xlat
fidivl
dec
test
pusha
decb
push
mov
push
nop
jnp
cmp
mov
std
mov
sub
sbb
jle
jnp
and
xor
xchg
cmp
lcall
push
stos
xchg
mov
pusha
cmpl
movsl
or
adc
and
sahf
pop
cmp
mov
xchg
sub
jp
cmp
mov
and
lods
lods
imul
fmull
icebp
push
pop
add
rorl
inc
imul
leave
jmp
pop
add
dec
fidivrl
fs
adc
pop
and
cmp
repz
stos
mov
dec
cs
mov
enter
mov
in
push
push
and
sub
incb
add
and
enter
and
or
call
sub
cmp
mov
pop
fsubrl
cltd
add
cltd
addb
push
jle
inc
jo
aam
sbb
push
xor
push
adc
mov
dec
push
popa
pop
push
xor
xchg
test
faddl
xchg
stos
mov
std
dec
mov
rcll
cmpb
mov
inc
add
dec
ret
sub
in
dec
adc
dec
add
andl
xchg
or
cmp
inc
adc
push
and
clc
mov
sub
loopne
push
cmp
bound
mov
and
push
mov
push
dec
xor
pop
fbld
mov
and
and
jb
jb
fs
nop
sahf
jno
add
leave
or
xchg
xchg
fcmove
mov
mov
int3
jmp
sar
loope
das
jb
sbb
out
sbb
lcall
les
push
cwtl
lock
lock
adcb
pusha
mov
std
dec
jmp
inc
mov
inc
pop
cwtl
xor
or
insl
cli
pop
mov
icebp
and
iret
sub
call
insl
notl
adc
mov
sub
sub
cmp
addr16
in
les
fadds
je
or
mov
add
sub
iret
imul
das
stos
mov
push
sbb
fists
mov
pop
ljmp
sbb
movsb
push
ret
push
pop
xchg
shlb
or
push
ret
pop
mov
lods
dec
inc
or
iret
nop
fst
or
insl
outsb
xor
add
pop
outsl
cmp
add
leave
pop
jbe
xlat
mov
push
nop
cmp
add
pusha
sub
mov
les
sbb
jo
adc
fisubl
xor
push
adc
in
dec
in
cld
jg
movsb
adc
mov
cmpsl
stc
push
cwtl
pop
jecxz
in
lahf
out
dec
cmpsb
pop
rep
dec
xlat
add
xlat
sub
xor
sub
dec
xchg
call
xchg
sub
add
and
cmp
adc
sbb
inc
test
push
clc
mov
outsl
lock
adcl
mov
insl
or
sahf
ret
sbb
mov
xor
fnstcw
push
push
adc
adc
push
mov
sahf
cmpsl
push
fildl
test
shlb
lret
out
shrl
rcll
mov
add
std
fdivs
pop
dec
mov
jo
lock
fnstenv
jb
lret
test
dec
test
into
push
enter
cld
cwtl
jmp
push
xchg
xchg
and
jne
stc
push
mov
clc
and
ds
push
push
push
lods
test
rorb
mov
sbb
adc
dec
mov
das
inc
in
inc
loopne
adc
call
sbb
mov
push
xor
xchg
sbb
and
jmp
inc
rolb
hlt
pop
sbb
lods
cld
test
xchg
mov
out
test
push
bound
call
sbb
popf
add
cmpsl
lahf
mov
mov
cmp
insl
sbb
xchg
repz
lahf
mov
int3
arpl
xor
mov
inc
outsl
push
sbb
pop
movsb
mov
sbb
adc
inc
xor
fildl
stos
out
add
imul
loope
push
xchg
xchg
popa
cmp
xchg
cmp
mov
xchg
bound
jecxz
mov
add
add
xchg
inc
push
xchg
mov
cmp
setb
add
adc
cmpsl
test
push
movsl
and
into
lahf
in
mul
sti
pop
mov
pop
pop
add
sub
xchg
loop
outsl
xchg
jae
adc
xor
jbe
mov
inc
mov
ljmp
fcompp
je
sub
mov
fdiv
sbb
mov
adc
sub
rcrb
mov
test
sub
mov
jmp
cmp
std
push
jb
hlt
std
movntq
mov
lahf
rcrb
sbb
cmp
cmp
js,pt
test
lods
inc
jecxz
sbb
pause
insl
subl
mov
dec
push
and
lahf
fldenv
cmp
xor
sub
and
add
cmp
mov
jge
sub
cltd
in
xor
aas
adc
cmp
outsl
arpl
xor
cmpl
divl
mov
fsubrl
std
into
mov
xchg
jp
pop
decl
pop
jno
out
shlb
sub
dec
inc
adc
sbb
cmp
cmpsb
xchg
jmp
add
mov
inc
push
xchg
cmpsb
sub
inc
lahf
xchg
xchg
push
in
cvtps2pi
fwait
mov
mov
push
out
xor
movsl
push
shll
jae
test
testb
pop
fmuls
sbb
js
jo
pop
xchg
sahf
fbstp
xor
loop
and
add
outsl
jg
jns
jp
or
in
mov
sbb
dec
jne
adc
movsb
or
imul
cli
pop
sbb
sbb
cmp
adc
movsl
outsl
adc
xchg
sub
xchg
lds
pop
push
push
push
in
lea
jb
popa
test
les
jo
insl
popf
cmp
loop
or
xchg
out
xchg
pop
mov
cs
lds
lret
cs
push
into
mov
or
xchg
push
iret
ja
shrb
jle
and
mov
jmp
add
adc
rolb
push
cmp
jge
fisubrl
mov
adcl
add
and
jmp
jecxz
sbb
sub
lret
sbb
sti
icebp
push
imul
and
xchg
fdivp
scas
push
cmc
mov
mov
fmuls
test
sbb
jg
xchg
xchg
mov
push
fildl
lahf
jle
cmpsb
dec
andl
cmp
mov
xor
shlb
mov
push
pusha
outsl
test
sub
in
pop
fs
shlb
cmp
std
fisubl
xchg
fwait
jb
ret
mov
movsl
sbb
test
sbb
es
cmp
jp
addr16
sub
pop
movsl
jae
enter
jl
push
stos
xchg
js
je
int3
outsl
aam
sub
lahf
inc
std
sbb
push
and
dec
f2xm1
js
and
outsl
mov
hlt
rcl
data16
lret
sub
mov
push
adc
jae
cmpsl
movsb
lods
les
ficoms
pop
and
jne
stc
sahf
sbbl
xchg
sbb
call
cmp
inc
das
arpl
jo
hlt
or
push
and
icebp
lods
std
imul
sbb
jae
mov
mov
xor
pusha
add
xor
push
xor
lds
call
mov
movsb
imul
and
add
call
scas
jle
mov
dec
or
inc
sbb
popa
in
addl
xor
fs
cli
repz
and
adc
and
call
or
pushf
jge
or
js
int
sbb
popf
cmpsb
mov
dec
sbb
hlt
imul
mov
stos
fcom
xchg
imulb
mov
lock
rcll
rorb
clc
outsb
add
cmp
xchg
popf
add
shrl
lds
or
cmpsl
addr16
jo
leave
fisttpl
jl
int3
mov
inc
push
xchg
mov
push
sbb
jl
mov
mov
dec
scas
out
sub
sbb
adc
test
cmp
scas
jo
cltd
cmpsb
xchg
scas
imul
loopne
cmp
mov
xchg
mov
lea
adc
xlat
std
xlat
cltd
jle
xor
aaa
ficoml
jo
mov
pop
dec
bound
mov
dec
mov
cwtl
jnp
dec
pop
adc
inc
scas
pop
add
or
fs
jg
xor
jb
cmp
jg
push
xor
ret
pop
push
add
push
or
jecxz
jae
fwait
in
dec
adc
jg
aam
dec
jb
cltd
aad
fstpt
push
inc
pop
test
das
test
shlb
in
mov
bound
out
lock
xchg
push
dec
adcb
popa
push
out
imul
jns
jns
mov
sub
mov
jns
mov
in
adc
shlb
repz
add
xchg
adc
popf
fdivl
cmp
aaa
add
mov
push
push
adc
and
jns
jg
ljmp
sar
mov
fs
call
inc
mov
out
dec
pop
lahf
scas
sub
fnstsw
cmp
dec
mov
inc
jo
push
jo
mov
fiaddl
and
sbb
lahf
fildl
fcoms
ss
mov
fstpl
xorl
xchg
imull
icebp
shlb
insl
push
adc
mov
sbb
data16
popf
ss
or
sbb
dec
imul
xchg
lcall
mov
popf
pop
pop
orb
hlt
xor
mov
scas
and
das
jge
fmulp
adc
insl
test
leave
mov
into
sbb
sub
popa
push
push
jmp
and
shl
pop
fisubl
lods
xchg
jmp
mov
jbe
add
or
int
fadd
inc
mov
dec
pop
ret
pop
test
int
mov
fadds
jns
jnp
in
test
mov
movsb
mov
cs
inc
cs
mov
jle
cmpsb
adc
jb
mov
shll
sbb
pop
and
push
cmp
nop
push
fs
das
adcb
and
lods
mov
or
xchg
shll
xlat
or
dec
add
incl
scas
pop
loop
mov
std
les
movsl
or
lods
ds
xor
lea
mov
push
jne
mov
inc
cmp
push
xchg
test
xlat
pop
push
lods
jp
mov
insb
adc
ret
or
pusha
sahf
jecxz
mov
scas
outsl
adc
or
and
xchg
and
mov
jecxz
add
sbb
inc
leave
ds
cmp
xor
popa
pop
pop
ss
pop
lods
imul
movsb
jl
adc
jge
pop
nop
loopne
and
push
inc
adc
loopne
and
stc
popa
dec
jnp
mov
push
jno
stc
push
mov
loopne
add
ret
aad
lock
in
xchg
rcl
rcll
mov
sti
les
push
imul
jb
out
sub
lret
loopne
mov
cmp
or
std
adc
js
mov
xchg
mov
jbe
cmp
lret
fadds
jb
mov
mov
imul
sbb
mov
jl
inc
cmc
into
scas
ljmp
jae
push
inc
cmpsb
cmp
imul
jae
push
in
shlb
pop
or
stos
aad
pop
ret
ss
out
adc
inc
leave
push
hlt
aad
mov
push
pop
push
bound
sub
or
push
jle
add
popf
mov
mov
dec
mull
xchg
js
sbb
mov
loopne
adc
stc
add
mov
pop
xchg
mov
dec
sbbl
fcompl
stos
cmpsb
scas
aad
mov
fstl
roll
and
xor
lods
aaa
adc
mov
ret
addr16
jno
sahf
adc
sub
inc
lods
push
or
dec
dec
mov
xchg
ljmp
xor
insl
cli
inc
sub
jge
cmpsl
ljmp
je
cld
cli
dec
ret
cmp
ljmp
add
mov
xchg
fwait
inc
sahf
sub
dec
and
lds
movsb
call
movsl
pop
arpl
and
lea
push
cwtl
mov
cli
sub
or
sbb
fistps
xchg
lahf
pop
jbe
jl
xor
jecxz
jno
sub
pop
int
xchg
push
cltd
and
into
or
jbe
xchg
push
out
pop
and
lret
sbb
int
out
into
dec
lock
dec
mov
mov
push
sub
add
outsl
jge
xor
xor
cmpl
out
fisttpl
rcl
ss
lahf
mov
popa
pop
inc
gs
and
mov
sahf
push
jmp
std
int
pop
insl
xor
push
mov
jp
addb
dec
mov
or
movsb
sbb
loopne
fsubr
mov
incb
not
xor
scas
xor
xchg
cmp
out
inc
pop
add
repz
sub
lds
and
arpl
push
or
hlt
sbb
mov
mov
loop
lret
in
jecxz
bound
dec
into
into
mov
faddl
mov
mov
jmp
sub
int
adc
push
jmp
outsl
dec
add
adc
push
mov
daa
mov
lods
xor
inc
add
xor
mov
test
es
jnp
xchg
lea
xor
hlt
and
dec
or
int3
call
lret
add
adc
xor
scas
adcl
sbb
push
adc
adc
add
dec
cli
aaa
mov
pop
mov
div
subl
nop
sub
jno
fimull
aaa
dec
fmull
sti
jb
xlat
in
jbe
pop
mov
adcl
and
or
push
xchg
cmp
ds
sub
jae
lods
mov
add
add
fnstsw
shl
sub
arpl
mov
cld
adc
push
andl
mov
lcall
js
aaa
dec
call
mov
xchg
jge
jle
add
rcr
mov
test
dec
push
dec
xchg
ret
or
push
shrl
cmp
mov
iret
lahf
pop
aas
jne
stc
sub
sbb
jno
imulb
dec
mov
and
add
pcmpgtw
cs
fadd
fisubrs
addr16
arpl
cmp
mov
push
aaa
xchg
dec
inc
imul
iret
push
test
mov
mov
dec
hlt
cmp
ret
rclb
mov
mov
arpl
inc
in
or
or
and
shlb
pop
jne
cmpsb
xor
dec
stos
or
in
xchg
dec
sub
jge
pop
pushf
mov
insb
xchg
push
or
out
fcmove
sub
in
aas
mov
into
sub
aaa
cltd
cmp
aas
mov
mov
lea
cmp
jne
push
rorl
pop
sbb
ja
jo
and
stos
adc
mov
inc
outsb
adc
add
sbb
mov
cmpsb
add
sub
cwtl
imul
nop
je
int3
pop
mov
data16
sbb
xchg
aas
cmp
add
mov
xchg
enter
add
mov
add
dec
cltd
push
fdivs
xlat
adc
pop
or
xchg
shlb
push
pop
jo
fnstsw
cmpsb
mov
push
mov
out
adc
pop
push
and
push
mov
ljmp
adcl
or
in
loop
jp
pop
enter
popa
leave
pop
ja
mov
fwait
add
lea
push
fisubrs
mov
add
push
and
inc
pushf
push
mov
jmp
and
jo
int3
pop
pop
shll
ret
xor
ret
jo
dec
and
mov
mov
xchg
test
sub
xchg
xchg
push
cmpsb
testl
stos
cmpsb
xchg
mov
jns
aaa
ret
push
jne
mov
icebp
pop
adc
shll
add
xor
mul
xor
push
add
imul
inc
subl
mov
mov
jbe
test
loop
add
sub
inc
lock
push
jbe
xchg
std
scas
mov
testb
popf
fcompl
cltd
mov
ret
adc
mov
aam
xor
loope
imul
mov
jae
mov
sub
out
dec
pusha
ret
mov
popf
add
scas
xlat
aas
sbb
pop
dec
idiv
mov
movsb
ja
subl
jg
icebp
push
mov
mov
mov
jle
addr16
lock
lcall
pop
inc
leave
jmp
xorl
pop
mov
xor
jnp
test
jg
pop
popa
pop
push
mov
ja
gs
cltd
mov
pusha
sbb
and
repnz
inc
inc
out
fbld
sbb
stos
mov
jns
mov
push
lds
out
mov
rorb
or
mov
mov
dec
dec
xor
mov
mov
pop
fildl
mov
mov
push
cld
mov
cmp
add
sbb
daa
inc
mov
lods
sbb
add
addr16
loopnew
cmp
mov
movsb
mov
ror
mov
xchg
clc
cmp
test
add
outsb
xchg
cmp
cld
push
xchg
popf
test
cmpsl
push
scas
and
test
std
mov
xchg
insl
jnp
imul
mov
dec
inc
rorl
mov
lcall
insl
lea
jp
xor
insb
mov
push
lea
jne
mov
mov
insb
hlt
pop
fdivrs
jle
std
out
dec
addl
sbb
aas
imul
data16
xchg
sub
sub
mov
lods
mov
jne
ljmp
nop
or
scas
sbb
jg
repnz
xchg
aad
add
insb
out
out
mov
mov
adc
scas
call
xorl
ret
mov
dec
inc
fidivs
sub
pop
dec
push
loope
mov
inc
int3
mov
mov
adc
pop
push
jb
jp
stc
aaa
fwait
xchg
mov
stc
jp
loope
pop
jae
or
xchg
out
mov
addr16
rolb
mov
insb
pop
cmp
dec
orb
lea
lds
pop
iret
imul
xchg
imul
test
jno
dec
and
imull
and
loope
dec
mov
pushf
or
cmp
in
lahf
repnz
push
mov
inc
or
rclb
dec
cmc
push
push
cmpsl
mov
adc
repz
adc
xor
inc
xor
push
je
push
stc
into
push
mov
xchg
gs
popa
cmpsl
insl
pop
jle
lcall
arpl
dec
into
or
les
jle
push
cli
push
lea
inc
jo
rolb
loope
cltd
mov
inc
std
mov
test
add
sar
jo
and
add
ss
stc
mov
inc
adc
rorl
out
sbb
cmpsl
inc
mov
xor
jg
adc
subl
xchg
adc
outsl
fldenv
cli
shll
lret
add
add
cmp
adcb
test
leave
xor
sbbb
movsl
adc
xor
mov
dec
arpl
stos
in
cltd
imul
push
xchg
out
pop
testl
mov
fcmovnb
add
imul
mov
add
data16
or
xchg
sahf
das
aam
mov
lods
daa
xor
lods
sarb
lret
pusha
adc
xor
and
mov
dec
imull
xor
fidivs
lds
scas
sahf
repnz
sbb
nop
scas
push
aas
sbbb
and
jns
out
outsb
pop
sub
mov
stc
cmp
xchg
ret
fistps
in
addr16
ss
lock
icebp
fwait
lret
fldcw
movsb
cmpsb
test
cmp
push
jmp
aaa
dec
sbb
jmp
je
or
aam
shrl
into
imul
push
inc
cmp
fucom
push
adc
and
jecxz
sbb
sub
sbb
arpl
push
mov
enter
pusha
cmpsb
ljmp
pop
test
loope
push
ljmp
sar
mov
fmull
push
inc
add
push
aas
cmp
cmp
mov
enter
jno
roll
ds
jmp
movsl
and
sbb
mov
cmp
rclb
fdivl
pop
and
inc
out
nop
gs
dec
mov
xchg
jmp
ror
ds
cli
movsb
and
sub
mov
stos
push
xor
cltd
fstpt
pushf
insb
xchg
xlat
inc
test
fstps
shrb
lock
push
xchg
lods
cmp
pop
xor
popa
adc
dec
pop
shl
or
jbe
inc
lahf
adc
mov
repnz
push
mov
mull
fsub
std
loop
mov
repnz
fisubs
mov
mov
nop
dec
inc
cmc
in
sarb
push
inc
out
xchg
or
clc
hlt
ret
mov
and
out
addb
adc
out
pop
mov
fucompp
jae
push
mov
aas
cld
adc
lock
loop
xchg
xlat
movsl
sbb
mov
mov
out
cmpsl
mov
movsl
mov
dec
push
movb
push
cmc
cmp
xchg
dec
ljmp
push
cmpsl
fstpl
rcll
jmp
push
mov
aas
xchg
add
je
mov
pop
subps
or
shrl
inc
aad
jl
fidivrs
sbb
xor
mov
outsb
fsubrl
iret
aad
fdivl
popa
add
xchg
mov
nop
ljmp
or
inc
mull
dec
lock
movsb
movsb
nop
cmp
or
add
or
xchg
movb
add
or
inc
jbe
enter
inc
xor
adc
jge
mov
ljmp
negb
mov
iret
cmpsb
sbb
insl
nop
xor
dec
or
adc
stc
pop
dec
cmp
push
mov
xchg
fbld
jbe
loop
decb
aam
out
xlat
ret
loop
call
pop
and
bound
fwait
test
add
xchg
test
rorb
xchg
test
repnz
dec
push
cmp
lahf
pop
lcall
jo
pop
adc
stos
mov
out
or
inc
sbb
ror
xchg
mov
push
dec
daa
out
jmp
push
pop
enter
out
lea
adc
sti
mov
ljmp
sahf
add
inc
push
jmp
loopne
test
ficoml
push
pop
jecxz
sahf
mov
mov
jp
test
jl
sbb
push
icebp
insl
int
xor
push
ja
lret
xchg
jb
mov
jg
fimull
outsb
scas
testb
shl
dec
mov
push
int
pmaxub
cmp
sub
or
xchg
enter
dec
xor
xor
fadd
or
dec
dec
add
jge
adc
or
aam
mov
mov
shr
enter
xchg
jecxz
fcoml
ja
repnz
jg
adc
movsl
mov
xchg
cmp
mov
jg
and
push
dec
subl
xorl
cltd
je
mov
cmp
jne
cmp
jb
fdivl
dec
mov
sbb
sbb
mov
push
dec
mov
or
mov
inc
push
addr16
leave
jg
mov
jo
call
subl
mov
cltd
aad
jl
negl
adc
fsubrs
mov
ficompl
fs
enter
cmp
ds
jp
stos
stos
add
call
fcomip
loopne
ja
adc
out
jl
add
mov
xchg
leave
dec
data16
rol
mov
and
insb
push
mov
outsb
dec
imul
ss
mov
adc
sbb
fistl
mov
add
or
inc
outsl
add
clc
push
lahf
sub
xchg
fsubrs
inc
jno
cmp
in
push
in
pop
fistl
xor
mov
test
ds
mov
push
popf
imul
iret
mov
adc
mov
stos
shll
ret
fldenv
stos
add
xlat
mov
sub
xor
sbb
adc
dec
cmp
ljmp
inc
cs
int
iret
sbb
mov
adc
lret
jnp
push
mov
mov
push
sub
jns
push
cmp
pusha
in
xchg
and
jo
int
ss
fisubrs
lret
dec
jmp
ss
push
pop
push
fstps
lret
and
fs
cmp
push
fdivrl
inc
clc
sti
lods
sbb
loopne
sub
add
add
insb
mov
push
jb
int
incb
xlat
sub
cmpsl
push
xor
arpl
push
dec
cmp
pop
adc
and
lea
inc
cli
arpl
daa
push
sbb
es
pop
adc
and
cltd
cld
call
push
loopne
fwait
push
jb
xchg
cmc
pop
sbb
xchg
fsubrp
pushl
jae
insb
out
enter
loop
sub
cmpsl
dec
jg
lods
cld
or
add
dec
fwait
into
dec
dec
mov
sbb
icebp
adc
sbb
mov
sbb
mov
les
aad
aad
xchg
sub
inc
dec
ficompl
cmp
test
cmp
imul
icebp
lret
lock
in
adc
aaa
xchg
jge
xchg
fisttpll
mov
xor
int3
push
out
scas
incl
inc
fcmovnbe
cmp
inc
mov
sub
and
adc
lock
inc
nop
rcll
jne
add
ja
pop
mov
jbe
xlat
xchg
mov
mov
fidivl
dec
xchg
cmp
mov
popa
popa
dec
out
sub
jecxz
mov
cwtl
out
mov
sbb
pop
add
inc
dec
ficoms
mov
popa
cwtl
mov
das
cmpsl
testl
pop
sti
xchg
cs
out
insl
add
dec
imul
rclb
in
adc
jae
fcomi
inc
filds
add
pop
fwait
stc
pop
xor
xchg
mov
ja
push
nop
and
test
cmp
push
sbb
cmp
add
add
daa
fidivrs
ret
loop
lcall
shr
cltd
enter
mov
push
scas
repz
pushl
jnp
mov
imul
fists
test
nop
lods
sarl
inc
dec
addr16
insl
fcoms
sbb
movsb
dec
lods
shl
cli
arpl
jmp
push
add
push
aam
movl
cmp
jmp
out
jge
bound
dec
mov
mov
stos
push
adc
loop
lea
ja
aas
or
sub
out
mov
clc
jle
or
sub
xchg
mov
sbb
lock
test
hlt
or
dec
jns
insl
xchg
loop
cmp
scas
loop
inc
lret
lea
or
or
std
movsb
je
idivl
call
add
inc
je
mov
pop
outsb
mov
test
push
sti
rcr
or
in
dec
mov
insb
jno
icebp
adc
jmp
mov
mov
push
push
xor
test
lcall
in
enterw
iret
add
shlb
xchg
mov
mov
aad
sub
out
mov
test
pop
in
sbb
cmp
mov
mov
bound
daa
push
mov
fcmovb
jp
dec
adc
add
shlb
into
and
les
xor
xchg
leave
ret
test
push
xor
sahf
and
stos
or
loope
fbstp
mov
out
pop
int
out
cwtl
lea
sub
or
inc
sub
push
push
fadds
push
pop
fistl
popf
or
movsb
sub
sub
push
movsl
and
add
rolb
cld
iretw
push
adc
imul
inc
popl
xor
xor
xor
lret
mov
fiaddl
int
shll
clc
ds
inc
ss
jns
cmpsb
loopne
inc
inc
cmp
loop
fstps
js
lahf
xchg
repnz
and
dec
cltd
sub
lret
inc
xchg
ret
xor
adc
push
in
movsb
inc
mov
dec
push
shrl
ret
pop
cmp
fcmovu
outsb
ljmp
es
lahf
or
addr16
das
xchg
std
push
push
mov
sti
push
int
xor
or
jmp
fisubs
insl
loopne
inc
lahf
jb
add
or
mull
mov
repnz
je
mov
movsb
adc
stos
add
jecxz
ret
arpl
fs
movsb
adc
add
xor
jle
aaa
stos
lret
push
inc
mov
jp
add
pushf
rcl
mov
test
ja
push
aaa
and
jns
cmp
mov
es
sahf
add
out
mov
push
sbb
call
or
cmp
inc
mov
cltd
stos
xor
mov
sbb
jne
dec
ds
adc
int
mov
sti
xor
fsubrs
test
arpl
sub
cmp
push
arpl
fimuls
push
xor
jo
push
pop
xor
out
cwtl
mov
jb
xor
pop
dec
fistps
xchg
orb
jb
sbb
inc
and
or
inc
or
ljmp
push
xor
mov
add
sub
arpl
mov
rolb
cwtl
loopne
dec
ljmp
cld
outsb
dec
icebp
outsb
inc
scas
stos
and
scas
std
mov
stos
add
mov
sub
and
add
rclb
push
nopl
arpl
dec
rcl
push
or
iret
sub
cmp
jbe
jb
lea
std
mov
jno
dec
into
jle
mov
inc
add
shlb
add
jmp
imul
js
add
stos
push
jbe
xchg
fucomp
sbb
adc
pop
in
mov
add
add
ror
shrl
add
insl
dec
addr16
ret
jb
xchg
xchg
pop
pop
xchg
ret
or
sbb
in
lods
js
or
outsl
xor
pop
mov
jmp
addr16
push
lods
push
ret
mov
ret
sbb
outsl
mov
pop
mov
int
arpl
push
sbb
stc
mov
cmpsl
cltd
mov
jno
fadds
and
jb
lret
ja
out
mov
test
pop
cmp
or
movsb
mov
mov
pop
push
cmpb
push
adc
sti
and
js
dec
xor
mov
mov
mov
add
lret
jge
add
push
add
cmp
cmpsb
es
incl
scas
dec
data16
dec
test
cmpsl
lods
mov
cmp
daa
mov
cmp
mov
dec
dec
sub
std
test
inc
jl
cltd
xor
stos
arpl
lahf
in
scas
scas
push
xorb
push
lcall
push
jmp
xor
call
aas
out
aaa
cmp
dec
shlb
loope
aad
sbb
loope
fstl
push
jge
sbb
sbb
and
into
jae
dec
mov
mov
scas
jne
sbb
jno
dec
or
dec
scas
shrb
imul
vcvttps2qq
pop
adc
sbb
jae
repz
push
lock
jle
fdiv
mov
bound
mov
dec
test
adc
cmp
jge
shll
nop
inc
repnz
ja
scas
repz
clc
lods
adc
pop
mov
stos
push
add
push
rcll
inc
test
fldt
pop
mov
jne
cmpsb
arpl
in
push
outsb
inc
popf
mov
mov
shl
test
dec
fs
or
add
imul
inc
shlb
call
cmp
add
pop
add
push
sbb
sbb
lea
in
aaa
int3
aaa
outsl
mov
pop
mov
sbb
out
cwtl
mov
into
push
les
stos
out
push
inc
push
repz
movsl
xchg
inc
adc
popa
push
jecxz
jmp
inc
insb
cltd
pusha
mov
aas
xchg
stos
fs
inc
add
test
xchg
cmp
rcll
jp
jg
jl
push
cmpb
out
sbb
test
sbbl
fwait
cwtl
add
fistpll
test
and
xor
pop
inc
push
cmc
mov
imul
jno
xor
fildll
pop
dec
push
imul
jle
lea
popa
stos
inc
sbb
cld
out
dec
jns
sbb
fnstenv
inc
sub
push
jno
ds
icebp
sbb
fs
sub
stos
adc
sub
or
xor
sub
jl
aas
or
xchg
or
xlat
call
or
or
sbbb
dec
adc
mov
inc
adc
push
mov
cld
dec
xor
lcall
sub
ret
jle
or
sbb
cwtl
movsl
pop
or
popf
hlt
push
imul
add
inc
dec
loopne
mov
sbb
mov
mov
fidivrs
jmp
stos
outsl
in
mov
and
shl
lahf
sub
loope
inc
mov
inc
repnz
in
mov
movsl
mov
adc
mov
cmpsl
fldcw
adc
out
fldenv
add
mov
mov
xchg
inc
loop
mov
inc
aad
cmpsl
xchg
hlt
shrb
add
popa
lret
xchg
mov
sub
pop
insl
and
xchg
inc
std
roll
scas
hlt
aam
mov
jp
lock
popa
stos
sbbl
or
arpl
sahf
loop
mov
sbb
paddsw
lea
jns
mov
or
sub
cmp
push
outsb
sub
stos
rclb
lahf
shl
iret
repnz
lret
cld
fimuls
cmp
mov
out
add
insl
loop
xor
rcrb
pusha
mov
insb
push
call
add
test
lret
jo
adc
push
fisttpl
out
adc
jnp
ds
adcb
xchg
dec
das
inc
js
xor
notb
mov
mov
sub
incl
push
push
cmp
sbb
popa
inc
adc
lret
adc
mov
das
add
dec
adc
sarl
xchg
jae
mov
aaa
and
jle
jnp
dec
mov
mov
lcall
pop
jg
sti
outsb
fcoms
fnstcw
inc
mov
inc
inc
enter
repz
push
adc
outsl
andl
jbe
test
mov
adc
mov
xchg
aad
dec
or
mov
icebp
mov
push
push
cmpps
ror
pop
pusha
incl
add
inc
cmc
cmp
xlat
fsubs
cmp
push
ficoml
sub
jmp
in
insl
pop
sarl
xor
shlb
frstor
jg
loope
push
lcall
add
adc
mov
push
clc
hlt
call
mov
shrb
cmp
add
loopne
pop
lea
icebp
add
jnp
fisubl
gs
or
adc
sub
in
ja
scas
cmp
jg
movsb
mov
push
jnp
inc
push
movsl
loope
fbstp
test
popa
imulb
leave
sbb
mov
lds
and
inc
js
push
cmc
cmpsb
push
js
jne
lods
sbb
sub
mov
test
ss
jno
jae
add
aas
xchg
mov
add
xor
add
mov
add
mov
pop
adc
lcall
cld
jae
inc
cmp
push
and
dec
je
pop
dec
dec
lahf
jne
leave
cmp
out
jnp
roll
fsub
stos
push
mov
lds
mov
inc
out
jo
cli
stc
dec
mov
cmp
call
stc
iret
or
movsb
iret
filds
mov
sub
or
pusha
cwtl
mov
pop
mov
clc
mov
setno
pop
inc
mov
sub
mov
xchg
in
jne
sbb
mov
out
ret
mov
in
shrl
lods
fwait
cmp
adc
movsl
das
cmp
mov
dec
xchg
repnz
stc
movsl
in
add
adc
mov
and
rcrl
cmp
repz
jp
push
mov
jo
lcall
dec
mov
pop
mov
push
sub
fcoms
mov
push
jae
pushf
inc
cmpsb
js
push
adc
pop
in
push
xchg
ficomps
push
dec
add
fldenv
aam
pop
orb
lret
imul
jne
add
mov
cmp
jge
bound
mov
cmpb
jbe
dec
gs
cmp
lcall
nop
cmp
mov
sbb
pushl
cs
daa
cmp
push
jne
lods
pop
stos
jp
sbb
xor
push
or
stos
inc
jno
popw
or
dec
movsb
scas
mov
jne
inc
jp
shll
push
lea
mov
sub
adc
jp
mov
sti
pop
jge
in
pop
cmp
jne
add
test
js
insb
mov
inc
jnp
in
or
mov
push
loopne
cmp
pop
jp
or
cmpsb
cmp
vpunpckldq
or
test
xlat
cmp
dec
and
cmp
xor
mov
adc
adc
dec
arpl
push
movsb
mov
stc
push
mov
scas
mov
and
and
mov
add
push
mov
rclb
rorb
ret
mov
scas
cmc
mov
jge
or
pop
fildll
mov
and
aaa
add
das
cmp
pop
fdiv
addr16
sub
aaa
aam
jnp
movsl
pop
mov
inc
or
outsl
adc
mov
movsb
cli
add
icebp
fadd
loopne
insl
xor
xchg
mov
fdivrs
pop
or
mov
cmp
dec
mov
xchg
movsb
popl
fistps
sub
push
imul
adc
dec
push
adc
adc
mov
or
imul
sub
mov
push
push
arpl
mov
push
test
pop
add
test
push
addb
addr16
xchg
push
ret
add
nop
or
in
pop
dec
push
xchg
inc
lret
outsb
pushf
call
mov
je
sub
mov
sarb
in
fwait
int
sarb
push
pushf
pop
cmpsb
decl
jg
imul
or
and
mulb
out
pushf
int3
inc
inc
outsb
adc
call
dec
cs
push
call
add
push
inc
stos
inc
in
sbb
jle
mov
cmpsl
and
mov
pop
sub
mov
nop
mov
shll
mov
and
pop
xchg
xlat
lret
insb
ja
daa
dec
ds
sbb
and
lahf
add
enter
data16
bound
daa
fwait
jb
dec
ret
out
xchg
hlt
sub
pushf
jge
push
add
push
cmp
in
stc
in
idivl
cmp
cmpsb
pop
sbb
mov
cmp
stc
popw
testb
fs
mov
jno
daa
mov
sub
je
popf
insb
adc
jl
lcall
shll
shlb
xor
jns
cld
cwtl
dec
add
mov
rcl
mov
jp
andb
inc
mov
cmc
push
push
scas
jp
mov
xchg
pop
into
xor
mov
movsbl
dec
es
ja
subps
push
pushf
outsb
cmp
add
jp
dec
mov
cltd
push
mov
push
movsl
mov
lret
ret
dec
jo
push
clc
inc
ss
and
mov
and
xor
out
into
fldl
sbb
xor
insl
test
mull
int
je
aas
std
and
inc
scas
dec
ss
add
ret
pop
xor
cli
stos
push
pop
adc
mov
aas
mov
cmp
xchg
ficompl
sti
popa
mov
lds
movsl
push
jns
into
push
imul
fwait
push
dec
jg
pop
add
mov
lea
push
and
cmc
cmp
aad
mov
rorb
jbe
xchg
adc
dec
int3
mov
bnd
fistl
add
mov
and
addr16
adc
lods
dec
push
lods
rorl
out
imul
loope
movsl
sbb
lds
int
sbb
jo
cs
push
scas
and
popa
mov
clc
mov
xchg
lods
and
inc
fndisi(8087
sub
sub
cmc
in
pop
shll
push
inc
jb
dec
in
add
sti
and
dec
inc
jbe
dec
adc
in
and
push
pop
mov
xorb
xchg
sub
dec
imul
sub
cmp
out
jecxz
push
pop
cmp
and
imul
je
ffree
sbb
pusha
xor
rcr
mov
fisubs
rorl
test
sub
in
xor
xchg
int3
push
aas
rep
xchg
or
add
pop
add
mov
xchg
jg
ret
leave
shll
cmc
adc
imul
xor
mov
push
rclb
insl
mov
repnz
inc
add
adc
pusha
sbb
frstor
stos
scas
imul
cmpsl
lds
aas
test
add
imul
mov
sub
les
sar
fstpl
stc
sbb
lods
daa
add
cmp
or
je
pop
clc
pop
sub
pop
dec
pop
shr
lcall
mov
lods
test
inc
das
and
pop
xchg
stc
mov
mov
pop
js
jno
in
add
fisttpll
loope
mov
int3
mov
iret
stc
mov
pop
cmp
and
es
gs
adc
lods
push
and
fimuls
sub
inc
push
or
lahf
sahf
pushf
jns
inc
mov
mov
pop
bound
and
cmp
jnp
inc
shrb
add
xlat
js
nop
pusha
rolb
sbb
shl
cwtl
push
inc
jp
mov
mov
fnstcw
mov
scas
cltd
sub
sbb
aas
out
xor
dec
bswap
cltd
aad
ja
mov
sub
in
aam
cmp
jns
call
sbb
xchg
push
loope
xchg
mov
ret
ret
inc
cmc
fninit
or
push
sbb
aas
mov
rolb
cmpsb
add
fnsave
pop
popa
imul
pop
mov
ret
mov
inc
rorl
dec
add
inc
popa
dec
sub
insl
push
lods
lea
ljmp
lds
aas
mov
cli
ja
jno
int
adcl
push
loopne
push
pop
fldenv
xor
clc
pop
jl
mov
mov
lahf
lret
arpl
arpl
jo
dec
mov
bound
jmp
clc
fs
inc
or
dec
ss
push
dec
das
xchg
sub
sbb
jbe
sbb
cmc
je
in
push
jae
arpl
out
jno
stos
imul
inc
lds
sbbl
pop
mov
xchg
mov
aad
pop
jecxz
popf
or
fistl
dec
pop
xor
movsb
inc
inc
scas
add
add
insl
mov
fildl
xchg
pusha
rorb
push
mov
mov
andl
mov
sbb
mov
imul
or
neg
inc
or
das
in
adc
leave
fstpt
scas
iret
lds
pusha
lds
sti
bound
push
lret
into
xchg
das
in
ja
ljmp
imul
repnz
in
pop
lcall
sub
mov
rorb
sbb
aaa
data16
daa
lret
sbb
sbbb
xor
and
inc
in
repnz
pop
jbe
in
cmp
movsl
mov
add
cltd
mov
adc
xchg
stos
push
enter
mov
adc
dec
outsb
pop
movsl
lds
lret
faddl
lock
add
mov
or
ret
sub
push
stos
aad
sub
insb
push
push
clc
pop
push
push
arpl
xor
jno
cmp
pop
inc
mov
mov
cmp
mov
fs
mov
and
fcomps
fildl
pop
or
cmp
cmp
push
lock
gs
ds
xor
cmp
sbb
sub
sbb
sub
stc
pop
pop
divl
cmc
xor
movsb
mov
mov
outsb
ljmp
mov
and
mov
fisttpll
stc
popf
add
dec
addr16
loopne
clc
lds
inc
insl
adc
pop
ret
call
xchg
jae
adc
clc
pusha
add
push
dec
pop
aas
push
movl
push
repnz
lcall
and
adc
popf
bound
scas
insl
mov
fcomps
lahf
mov
popf
pop
dec
cwtl
inc
jg
xchg
or
jecxz
out
lret
inc
cmp
arpl
stos
adc
xchg
push
flds
add
movsb
push
jnp
pop
sbb
xchg
jg
rcrl
inc
mov
xchg
les
lods
loop
and
repz
xchg
test
repz
xor
mov
sbb
sbb
add
dec
mov
or
loop
neg
pop
pop
mov
add
jo
pushf
add
out
pop
push
sbb
jg
fs
mov
roll
ja
into
jl
add
insl
cmpsl
add
insb
jnp
xchg
daa
inc
mov
add
dec
outsb
fwait
es
jg
loop
xchg
push
decl
repz
repz
jl
adc
add
xchg
jl
lock
xor
push
bound
fs
jecxz
stc
aam
out
sbb
arpl
andl
int3
in
mov
pusha
iret
mov
xor
mov
shrl
fbstp
inc
enter
loop
ds
sarb
subb
or
leave
mov
adc
add
bound
push
xchg
fnstcw
out
pop
cmp
dec
cmp
jb
mov
push
movsl
adcl
mov
xchg
and
add
mov
dec
sbb
aam
add
mov
dec
sub
cli
sub
loop
inc
mov
and
cmpsl
sub
into
ret
in
orb
insb
adc
mov
mov
mov
push
js
add
ror
mov
imul
fisttpll
and
xlat
xor
adc
sub
mov
sub
pop
jmp
aas
cmp
jecxz
std
jmp
icebp
movsb
pop
lds
sahf
scas
adc
fidivs
das
push
sub
jle
add
lret
pop
dec
xchg
add
clc
pop
fcmove
packsswb
push
xchg
push
das
and
mov
cwtl
fildll
cmpsb
lea
dec
dec
push
mov
fdivrs
xor
das
js
lods
sub
mov
rorb
xchg
int3
shl
cmp
hlt
push
cs
scas
push
lock
test
int3
adc
mov
dec
adc
sbb
pop
dec
or
les
add
ljmp
sub
ret
jne
xchg
pcmpeqb
dec
cmpsb
xor
pop
fiadds
enter
adc
pop
scas
hlt
add
fcmovnbe
xor
sub
pushaw
lods
lea
stos
xor
adc
sbbl
mov
insb
lcall
jge
and
xorb
lds
insb
xor
inc
dec
jp
and
dec
jb
jb
jnp
mov
dec
jl
inc
lahf
and
insl
mov
sbb
push
int
inc
dec
shrl
andl
cli
xor
mov
hlt
aaa
std
adc
je
daa
clc
mov
jge
adc
sub
arpl
sti
sbb
adc
rcr
lcall
or
fildl
dec
adcb
xor
add
jb
ss
dec
pslld
dec
push
lahf
stos
decl
sti
cmp
push
pop
pop
add
int
and
lea
scas
xchg
pop
stos
hlt
mov
xchg
andb
pop
pop
lcall
shll
jmp
dec
hlt
enter
lsl
mov
dec
dec
aaa
adcb
pop
mov
xchg
out
xchg
mov
jne
mov
faddl
inc
pop
jmp
sbb
mov
roll
into
ljmp
sub
lahf
outsb
fmuls
jp
aam
or
jl
xor
sub
push
jecxz
inc
test
pop
pop
test
loop
lretw
xor
hlt
es
scas
push
and
sti
loopne
inc
or
cmc
cmp
gs
xor
mov
pop
push
cwtl
ja
cmp
imul
pusha
xchg
or
andl
xor
xchg
add
lods
cmp
push
jo
repz
fsubr
jge
adc
sbb
xor
not
fsts
fsubrl
subb
and
push
popa
xor
loopne
rorb
cmp
push
mov
rolb
bound
mov
sub
data16
bound
pop
pushf
in
jle
outsb
pop
repnz
je
clc
mov
mov
cmp
ds
mov
iret
lea
hlt
push
loope
pop
add
fsub
add
dec
add
aaa
jae
leave
sub
lea
cmpsl
mov
imul
jp
mov
dec
push
inc
das
leave
ret
and
insb
aas
pop
fcomps
testb
scas
or
dec
xchg
sub
mov
mov
sub
sbb
in
pop
ret
xchg
or
mov
mov
ljmp
mov
xor
insb
clc
push
sbb
je
jo
xchg
stos
jecxz
gs
pop
mov
inc
mov
in
add
and
stc
cwtl
scas
mov
fistpl
sub
xor
sbbb
xchg
in
in
out
dec
les
insb
call
cmpsl
shlb
lret
fwait
mov
fnstenv
sbb
and
push
stc
lock
jmp
scas
arpl
mov
pop
fmuls
adc
xor
push
gs
inc
pop
xor
and
add
in
dec
pop
pop
in
int3
out
mov
sub
add
int3
and
jno
xlat
sbb
cmpsb
imul
fstpt
inc
add
cmp
xchg
fdivrl
mov
bound
lods
jnp
in
jo
pop
pop
addb
xchg
sub
sbb
mov
push
packssdw
jno
lret
mov
movsl
fisttpl
testl
jl
leave
daa
js
add
int
push
mov
out
sbb
adc
inc
jne
cmp
cmp
add
inc
cmp
sub
out
add
andb
adc
hlt
lret
mov
mov
mov
test
mov
sahf
mov
or
popf
xchg
and
ds
jae
dec
xor
stc
inc
dec
addr16
es
cmpsl
mov
jne
push
adc
or
test
mov
mov
ljmp
add
shl
push
and
repnz
dec
xor
loop
sub
cmc
data16
and
aad
rcl
mov
push
movsl
lods
sahf
or
fldcw
xchg
xchg
mov
sbb
gs
inc
mov
mov
in
xor
and
mov
push
push
cltd
rcr
push
pop
add
cmc
jg
inc
dec
add
clc
imul
xchg
bound
push
and
aad
not
ret
testb
mov
leave
xchg
mov
dec
inc
and
aam
jnp
cmpsb
cld
leave
xor
inc
cmc
sub
andl
insl
loope
jnp
std
push
ds
es
mov
dec
out
lret
mov
or
mov
push
cmp
sub
pop
in
pop
push
mov
fidivl
pop
lods
add
fisubs
cvttps2pi
push
lcall
aaa
scas
aaa
test
outsb
mov
stos
mov
sti
push
popa
mov
sbb
mov
inc
sbb
xor
pop
flds
bound
shrb
mov
jge
negl
sbb
pop
mov
mov
icebp
cmp
and
cmp
movsl
ret
xchg
in
rcl
mov
add
arpl
cli
add
in
ss
aad
push
inc
adcb
mov
mov
inc
fdiv
in
add
ja
out
sbb
jmp
sbb
or
pop
scas
repnz
iret
aad
scas
mov
push
inc
pop
enter
notl
mov
add
push
add
xor
or
jo
xlat
xchg
mov
das
fiadds
int
rcll
sbb
push
int3
xor
add
and
jbe
mov
fs
push
test
lock
mov
sub
push
lret
rolb
fbstp
sub
jo
jae
sub
stos
dec
sub
sub
mov
in
inc
dec
hlt
inc
jle
xor
sub
es
fildll
pop
movsl
add
or
mov
inc
pop
mov
in
sub
xor
movsl
lods
jg
inc
cmpsl
push
fistps
add
and
inc
sub
lock
test
outsb
mov
pop
push
loope
mov
loop
jge
jne
and
scas
pop
push
xchg
ret
or
inc
and
scas
mov
xor
xchg
add
xchg
jg
cli
push
xor
in
push
or
jne
int3
mov
xlat
popf
insb
inc
std
cmp
mov
jno
shlb
es
mov
iret
jb
loopne
addl
aas
test
cli
xor
inc
and
out
in
lods
or
scas
cmpsb
shrl
cmp
lret
xor
popl
cmp
je
shrl
push
and
xor
addr16
jecxz
dec
and
das
incl
inc
pop
xlat
jae
dec
mov
cmp
in
lret
les
push
jne
aad
call
or
lds
ret
das
pop
xchg
nop
push
cmp
jl
pop
cmpsl
aaa
mov
sahf
cmp
xchg
xchg
jp
inc
dec
push
stos
jge
mov
adc
cmp
or
lahf
movsl
enter
pop
adc
inc
inc
lods
or
xchg
pushf
and
filds
loopne
call
or
pop
add
push
movsl
cwtl
mov
cmpsb
leave
dec
cmp
iret
mov
lods
xor
insb
xchg
scas
cmpb
insl
out
add
std
clc
adc
xor
orb
lea
lret
rolb
incb
nop
loopne
dec
mov
out
push
push
xor
sahf
out
mov
aad
popa
xchg
jl
cwtl
dec
cltd
mov
jg
add
xchg
xchg
es
jo
rcr
int
and
mov
mov
dec
add
mov
lret
js
pop
cmp
push
adc
cmpsl
and
fistps
cmp
movsb
push
fistps
rol
out
jmp
mov
mov
sbb
xchg
mov
adc
or
lret
fnstenv
push
sub
ds
mov
mov
adc
loop
cli
in
jecxz
push
pop
out
xchg
and
add
cmpsl
js
or
nop
mov
sub
in
test
bound
mov
dec
aas
and
jle
or
dec
test
scas
test
xor
mov
xor
xor
cwtl
xchg
dec
cld
and
popa
aaa
out
out
hlt
paddsw
jg
cld
fisttps
pop
aaa
mov
add
mov
fcoml
and
idivl
pop
pop
jbe
data16
jno
dec
xchg
enter
xchg
and
push
inc
or
push
inc
jp
inc
or
in
jecxz
add
repz
movsb
push
lret
rorb
mov
fcomp
shr
sahf
in
xchg
mov
das
fidivrl
adc
int3
xor
mov
push
fmull
incb
loop
lcall
sub
mov
add
cltd
ret
js
push
mov
and
mov
jo
lahf
mov
jle
cmp
dec
call
mov
cwtl
pushf
add
imul
sahf
and
pop
mov
dec
mov
mov
xor
cmpsb
ds
fwait
movsb
sahf
pop
push
loopne
sbbl
movsl
das
and
dec
push
shll
aad
popa
xchg
into
sahf
cmpsl
imul
push
jnp
xchg
shll
mov
mov
xchg
sbb
jne
repz
jns
push
push
jge
sarl
xchg
sbb
shr
mov
sub
mov
add
cmp
popf
dec
in
push
jno
inc
xor
add
fs
jbe
jge
jle
xchg
lock
add
xchg
dec
es
mov
xor
mov
adc
iret
inc
sub
and
push
test
cmp
ds
jo
imulb
cs
movsl
or
ret
fdivs
cmp
ja
jb
fwait
or
and
adc
fwait
icebp
orb
ret
adc
fcoml
test
mov
test
mov
int
call
jmp
or
test
push
ds
xor
stos
mov
loope
sbb
xor
push
aad
cmp
filds
jbe
popl
or
xor
enter
aam
cmpsb
in
dec
add
jl
mov
cmp
mov
add
mov
js
dec
and
mov
enter
pop
or
in
and
inc
into
enter
test
mov
mov
add
int3
jmp
shr
test
stc
or
call
adc
cwtl
pop
jle
mov
add
cmp
lcall
jg
sbb
pop
shlb
mov
xchg
data16
pop
out
push
xor
dec
enter
shrb
sbb
imul
out
repz
sti
outsb
inc
rorb
xchg
push
sbb
outsl
mov
loopne
ret
aad
mov
inc
mov
xor
pop
jo
push
adc
cmpsl
popa
adc
sub
or
stos
mov
xchg
pop
fnstenv
subl
enter
jmp
add
pop
mov
or
aad
push
pop
mov
cmp
shlb
add
fistpl
arpl
add
xor
in
lds
rclb
scas
lods
pop
push
mov
or
jbe
pop
icebp
ficomps
notb
and
fs
jno
mov
dec
mov
xor
mov
push
fbstp
fbstp
or
mov
sbb
adc
arpl
pop
dec
xchg
xor
add
cmp
iret
or
cmp
pop
and
iret
inc
dec
mov
sub
dec
mov
scas
or
push
inc
data16
push
shll
sub
popf
mov
dec
xchg
fdivs
popa
inc
test
xchg
mov
fidivs
push
mov
xlat
std
mov
add
aas
lcall
add
adc
jg
jnp
je
or
push
inc
lcall
stos
adc
imul
out
addr16
lret
inc
shll
add
push
sub
rcl
fs
pop
repz
jle
and
iret
lahf
xchg
sbb
leave
pop
fwait
sbb
xchg
rcrl
cmp
mov
xor
add
nop
push
cmp
dec
in
test
out
dec
xchg
dec
and
insl
lds
xchg
inc
cmp
shrb
fwait
adc
pop
or
mov
sahf
imul
or
mov
rclb
orb
enter
int3
test
cwtl
sbb
push
xor
push
mov
enter
mov
sub
int
jmp
sub
jge
fdivrp
sbb
and
mov
pop
xchg
xchg
push
add
movsb
adc
push
adc
jmp
fwait
xor
lcall
sbb
je
or
movsl
cli
mov
aam
jecxz
jns
lahf
std
lds
mov
dec
shl
orl
fiaddl
jle
inc
push
push
scas
pop
movsl
fildl
mov
jnp
xchg
sbb
aad
sbb
jp
xor
lods
dec
cltd
add
cld
pusha
push
adc
adc
mov
adc
or
scas
xchg
dec
jmp
push
jmp
rcrl
mov
or
push
or
out
mov
or
lret
inc
cmpsl
call
mov
add
push
mov
sbb
xor
fs
js
dec
lret
out
xchg
loope
sbbb
xchg
pusha
jne
and
dec
std
fisttpl
cmp
enter
sbb
push
mov
mov
inc
dec
ss
cmpsb
icebp
fstps
outsl
mov
andl
mov
mov
mov
sbb
pop
jg
push
stos
inc
fldl2t
cmpl
pop
mov
push
cmpsb
pop
xchg
cmp
fninit
xor
mov
shrb
add
cmp
sub
movsb
mov
push
cli
and
jle
shl
mov
cli
jb
cmc
adc
jmp
hlt
stc
add
inc
xchg
daa
sti
cli
outsl
imul
pop
jbe
mov
and
jmp
in
mov
mov
dec
sub
pop
mov
xchg
fidivl
fists
stos
clc
jno
add
out
stc
jne
mov
inc
push
push
mov
jnp
arpl
out
popf
nop
pop
fadds
mov
jge
popf
je
and
test
and
shrl
xchg
loop
push
fcompl
xchg
int3
xor
mov
les
and
test
fisttps
mov
pop
out
jg
int
push
iret
popf
fwait
stc
pop
ljmp
pop
mov
into
cmp
ja
out
xor
sbb
xorb
add
les
scas
cltd
xor
jne
data16
lods
cld
dec
adc
and
mov
sahf
push
cmpsl
int3
pop
xchg
push
andb
ret
push
loopne
repz
cmp
clc
xchg
dec
test
adc
fdivrl
inc
xlat
inc
xor
lret
push
fisttpl
fcmovu
pop
lcall
inc
pop
xchg
clc
jle
rolb
addb
jge
mov
inc
pop
xor
xor
out
cs
cmp
push
nop
jl
lcall
addr16
xchg
enter
jnp
cmp
mov
mov
cmp
std
jnp
mov
loop
cmpl
sub
popf
inc
cmp
mov
mov
adc
pop
push
sub
mov
jle
aad
fdivrs
and
mov
mov
mov
add
sbb
cmp
fbstp
xchg
sbbb
sbb
xchg
or
cltd
pop
lret
cmp
fsubrl
push
arpl
jnp
or
pop
js
insl
insl
xchg
test
mov
dec
fbstp
stc
xor
subl
nop
xlat
cmp
adc
xchg
movsl
andb
lods
xor
and
outsl
and
dec
mov
out
mov
mov
std
iret
test
ss
dec
cli
pop
push
ljmp
pushf
push
or
inc
imul
add
jp
mov
outsl
js
cmpsb
iret
dec
jno
outsl
out
pop
stc
cmp
push
enter
jb
xchg
test
or
scas
lcall
jecxz
xorl
pop
adc
or
loope
fistpll
shll
nop
cmovge
fsts
inc
aam
sub
dec
dec
shll
test
daa
jae
mov
mov
sub
sti
xchg
out
lcall
lcall
enter
jle
mov
int
rorb
mov
in
mov
xor
popf
lea
push
mov
push
jecxz
dec
push
loop
insl
push
leave
pop
mov
das
in
sub
mov
addl
movsl
pusha
test
ja
lds
push
stc
pop
xchg
adc
stc
add
movsb
int3
xchg
fs
and
mov
and
imul
pop
jo
mov
sbb
dec
scas
hlt
mov
mov
push
and
jae
aam
ljmp
int
divl
dec
xorl
mov
cmp
adc
addr16
in
cmp
xchg
xchg
ja
movsb
pop
dec
inc
mov
pusha
in
cmp
icebp
std
loope
jmp
mov
in
push
paddsb
mov
inc
add
aad
loope
mul
in
xor
push
sbb
popa
std
pusha
ret
cmp
mov
enter
loope
in
and
and
vprotd
mov
and
std
addr16
mov
sbb
mov
pop
xor
hlt
cmp
insl
adc
dec
std
rcl
dec
jp
or
je
in
push
pop
mov
pop
movsb
xor
mov
lds
dec
sti
or
enter
cmp
inc
mov
mov
pop
xlat
mulb
add
or
sbb
adc
in
bound
add
fiaddl
or
add
add
or
ja
sarb
ds
xor
lds
sbb
ljmp
stc
popf
insl
xchg
lods
cmc
mov
pop
es
adc
lret
mov
movl
movsb
and
sub
or
lds
jmp
jmp
callw
add
mov
mov
shlb
negl
mov
push
sbb
push
gs
pop
and
movsb
orl
inc
inc
add
or
in
sub
inc
shrb
pop
pop
out
push
stc
xor
add
cli
scas
or
jg
inc
add
sti
aaa
xchg
test
es
shl
scas
enter
in
inc
into
push
sbb
enter
cmp
pusha
test
mov
push
push
sahf
je
push
arpl
jo
xor
jno
or
test
int3
fstl
icebp
sti
add
fnstsw
sub
dec
xor
ffree
dec
shlb
xorb
xchg
jp
stos
xchg
call
cmp
sub
sbb
aas
loop
push
lret
aad
mov
xchg
aas
cmp
or
ret
pop
addl
aas
add
loopne
cmpl
mov
les
add
int3
test
mov
sbb
and
in
jl
ljmp
lret
insl
mov
push
push
jecxz
je
mov
stc
ret
pop
imul
sub
mov
daa
jae
dec
add
cwtl
push
hlt
ret
adc
test
sti
jnp
mov
xchg
test
ret
and
mov
add
sti
push
xor
div
mov
jo
mov
rorl
pop
sub
xor
mov
xchg
ud1
jg
pusha
jmp
das
mov
adc
loope
mov
xchg
iret
ljmp
mov
jbe
dec
cmp
jae
cs
out
test
mov
jp
dec
sbb
xor
fstl
inc
adc
push
in
jae
daa
test
arpl
mov
dec
imul
xchg
in
cmp
fs
movsb
jl
mov
clc
fcoml
jmp
cmp
or
mov
xchg
dec
int3
sbb
insl
cli
sbb
imul
xchg
popf
push
sub
inc
stos
imul
loope
gs
subl
fs
dec
mov
repnz
bound
or
test
inc
push
dec
sub
adc
and
inc
cmp
sub
push
push
mov
mov
enter
mov
inc
add
imul
mov
mov
inc
leave
das
mov
pop
inc
in
nop
dec
pushf
stos
xor
cmpsl
das
pop
int3
popf
or
cmpsl
insb
mov
cld
into
xor
pop
cmp
mov
push
shrb
lret
and
mov
cmp
jle
xor
xor
mov
dec
in
je
sarl
push
shll
into
lcall
mov
cs
mov
ret
inc
jne
pusha
mov
sbb
dec
imul
and
movsl
push
movsl
xchg
xor
es
sub
lods
ret
cmp
js
sub
or
jno
xor
jb
mov
push
divb
sahf
push
xchg
sub
scas
or
psubusb
loope
mov
nop
inc
lods
xchg
push
dec
xor
gs
in
insb
ret
mov
out
imul
xorb
adc
cltd
cmp
bound
cld
faddl
stc
popf
jne
push
addr16
es
sbb
jp
xchg
add
mov
pop
repnz
je
xor
mov
pop
scas
fs
scas
pop
lret
test
pop
roll
out
loope
mov
push
cmpsb
cwtl
cli
clc
jne
jg
mov
sub
int
es
xchg
fwait
xor
mov
scas
je
in
cmpl
push
sarb
or
xchg
adc
cmp
cli
hlt
push
adc
jae
inc
xor
dec
stc
push
test
jns
or
fldl
jae
std
push
into
fistl
mov
movsb
mov
add
mov
lret
pop
out
pop
daa
inc
hlt
call
mov
sahf
outsl
fiaddl
mov
repnz
cmp
movsb
movsl
adc
xchg
je
mov
fsubrp
mov
pop
mov
imul
or
outsb
xchg
mov
or
shrb
js
lods
sbb
imul
mov
gs
xchg
sbb
pop
bnd
call
frstor
jmp
loop
cmp
pop
cmp
das
sarl
pushf
frstor
loopne
daa
push
loope
into
outsb
mov
xchg
dec
lods
je
push
push
lret
jl
inc
xchg
mov
hlt
addr16
sahf
fcompl
cs
pop
sbb
or
sub
push
inc
pushf
shll
lret
xchg
cmp
dec
or
mov
mov
or
test
dec
mov
iret
dec
jmp
scas
jmp
aas
movsl
clc
push
mov
jp
dec
jmp
insb
test
in
test
in
pop
lcall
nop
int3
push
mov
mov
cltd
stos
or
add
in
jmp
int
jbe
pusha
outsb
stc
inc
push
inc
adc
xlat
sub
je
mov
jno
mov
rorb
divb
pop
xchg
out
push
jno
and
and
fistpl
cld
push
hlt
sub
dec
mov
mov
mov
pusha
ret
push
mov
fists
pop
orl
sub
vrcpss
xorb
push
push
pop
fdivs
and
insb
dec
cltd
roll
cmp
pop
fldt
jns
in
testb
and
push
ja
or
add
xchg
jl
imul
cmp
adc
test
js
call
lods
sbb
dec
inc
push
aaa
sbbb
adc
in
mov
dec
popf
sbb
mov
push
ja
clc
cmp
into
js
fstps
ss
push
fsubrp
adc
aad
pop
or
fs
add
imul
enter
insb
pop
mov
add
adc
les
jno
decl
pop
mov
aam
jo
xor
push
ret
pop
sub
outsl
insl
fwait
and
xor
leave
hlt
xor
popf
adc
and
mov
fisubrs
mov
mov
and
push
mov
pop
mov
lods
sub
nop
popa
push
data16
dec
fcomip
add
stos
sbb
insl
inc
fdivrl
push
mov
dec
fdivr
cmpsl
mov
mov
push
outsb
jecxz
and
cmp
pop
xor
daa
jp
sbb
jge
fcmovnu
cmp
aad
cld
mov
push
sbb
ret
daa
xor
test
and
mov
adc
loop
inc
cmc
or
decb
pop
sti
cmp
adc
xor
pushf
mov
sub
cmc
popf
inc
arpl
jle
out
rolb
pusha
or
jns
adc
aas
lret
xchg
add
daa
cmp
adc
mov
pop
arpl
mov
mov
jp
int
stos
sub
fisubrl
pop
jno
ss
fs
or
rol
out
sbb
push
adc
cmpsl
xchg
inc
jmp
dec
cmpsl
mov
out
arpl
mov
pop
jne
sub
inc
lret
adc
mov
outsl
jbe
outsb
mov
jo
and
jbe
daa
push
stos
or
sahf
inc
xchg
shrl
js
inc
shl
sbb
and
in
sbb
loope
jecxz
mov
je
mov
dec
sbb
push
jne
mov
xchg
aaa
dec
mov
push
and
mov
out
iret
ret
pop
lods
mov
aam
jl
mov
fidivs
imul
int
mov
dec
enter
imul
fxch
sub
xor
push
sbb
adc
push
mov
cli
adc
dec
mov
or
fwait
mov
stc
aam
adc
outsb
enter
mov
pop
push
mov
xor
je
or
sub
or
add
lret
mov
pop
pop
outsl
cmpsl
mov
fcmovnu
notb
inc
test
pop
fwait
sbb
lret
jae
sbb
scas
pop
pop
lods
dec
lods
cmpsl
xchg
dec
idiv
inc
mov
pushf
and
mov
mov
cld
insl
jnp
xor
imul
popf
cmp
jns
mov
pop
or
les
mov
xlat
int
enter
or
pusha
jnp
pop
lahf
lahf
call
xlat
xor
cltd
dec
jp
sbb
inc
jno
rcl
pushf
adc
cmp
sbb
adcb
xchg
fildll
pop
lods
adc
insb
jbe
js
aam
dec
fimull
addr16
insl
in
shr
xchg
jae
mov
add
jecxz
xor
pop
out
add
test
xor
lcall
or
std
and
mov
stos
cmpsl
dec
insl
sbb
mov
inc
lods
fimuls
jge
mov
mov
cmp
xor
js
xor
cmp
test
cli
ret
add
shlb
cs
jns
mov
out
movsl
mov
sbb
xor
mov
es
dec
pop
jne
xchg
dec
out
sub
es
push
dec
sbb
and
add
add
orl
test
push
rcrl
lahf
clc
cli
call
call
sbb
stc
roll
adc
mov
mov
xchg
lret
daa
incb
xor
add
xor
cli
push
inc
sub
dec
xchg
ss
out
sbbb
std
push
sub
data16
mov
mov
sub
fildll
dec
jns
out
push
cmpsb
sahf
pop
dec
mov
push
lahf
pop
sub
mov
add
cmpsl
popf
hlt
push
in
ja
and
cmp
test
mov
sbb
xchg
stos
and
xchg
stos
sub
push
push
inc
stos
inc
mov
xchg
push
mov
movsl
push
subl
stos
push
jmp
das
mov
jge
pop
sbb
mov
movsl
jl
adc
jnp
mov
push
outsb
inc
decl
test
mov
mov
aaa
dec
lcall
pop
push
dec
mov
jno
push
xchg
call
pop
outsb
test
fdivrl
imul
sub
xor
mov
outsl
cmp
loope
cmpsb
mov
leave
add
imul
add
movsl
mov
pop
inc
mov
or
jecxz
and
rorb
test
adc
lea
fimull
add
xchg
add
scas
shl
pop
jne
hlt
repz
pop
outsl
and
xchg
fildll
cmpsl
push
mov
hlt
mov
sarb
cmp
jmp
pushw
arpl
sub
push
adc
and
inc
push
cmp
popf
sbb
cld
outsb
mov
loop,pt
sub
jne
vorps
in
sub
mov
jecxz
movsb
test
push
xor
or
fsubl
push
iret
enter
sbb
out
fwait
pop
inc
or
mov
into
pop
les
inc
in
ret
arpl
and
mov
mov
inc
push
ljmp
in
jns
aad
jb
sbbb
ficoml
cli
sbb
or
insl
inc
add
add
pop
jns
inc
xchg
in
sub
pusha
pop
jp
pusha
in
add
cmp
sbb
sub
test
out
jp
cmc
jns
jnp
adc
push
aaa
pusha
or
mov
ret
inc
lret
neg
push
add
mov
dec
xchg
pop
xchg
pop
inc
fwait
lods
pop
push
push
in
out
or
in
sbb
cltd
cmc
or
inc
call
lahf
xchg
fsubrs
pushl
mov
lods
pusha
outsl
add
int3
mov
fcmovnu
jnp
incl
or
jns
inc
inc
data16
push
decb
inc
lahf
mov
add
sbb
or
out
inc
adc
adc
iret
cmpsl
jl
or
aaa
fisubs
pop
pop
out
xor
pop
add
repnz
add
cmpb
test
cmp
and
adcb
or
mov
les
mov
in
mov
mov
push
out
push
nop
cmc
add
jmp
aad
xlat
ljmp
cltd
mov
icebp
cmc
sub
xor
stos
or
cld
dec
out
xchg
cs
test
lret
fistps
push
je
xor
add
sub
subb
adcb
loop
cmp
jge
sbb
adc
sub
and
stc
cli
inc
sub
mov
cmpsb
ret
ss
jmp
adc
lock
les
pop
mov
popf
jb
add
sbb
sub
pop
loope
mov
mov
xor
xor
push
in
int
call
test
je
add
mov
out
xlat
dec
cli
and
inc
outsb
lds
jnp
mov
popa
or
push
xchg
pop
inc
adc
pop
adc
jo
into
lock
je
std
mov
es
lcall
cltd
inc
push
scas
ret
mov
add
jg
repnz
shlb
roll
ds
xor
incl
push
rcll
popf
adc
filds
xor
push
and
mov
sub
js
fsubr
push
jmp
mov
pop
dec
test
or
adc
ret
jb
add
cmpsb
sarb
mov
mov
push
stc
mov
or
inc
lods
lea
loopne
push
and
mov
rclb
jle
stos
fsubr
or
ret
out
or
xor
push
pusha
shrb
pop
xchg
outsb
inc
jns
and
jbe
jmp
in
mov
jno
adc
stos
xchg
adc
pop
pop
jno
cmp
jecxz
sbb
test
dec
push
xchg
lret
push
gs
sub
xor
pop
fsubrp
daa
fs
sbb
pusha
cmp
cmp
jne
jb
fs
mov
inc
sbb
and
adc
cld
lahf
cli
sub
out
dec
push
arpl
cmpb
dec
adc
dec
inc
sub
sbb
xchg
fstp
daa
mov
pop
popa
ficompl
add
adc
in
lock
mov
testl
iret
mov
mov
xor
mov
outsl
test
inc
cli
jge
lea
int
and
pop
lcall
cmpsb
sbb
bound
cmc
and
test
loope
ljmp
sbb
jno
inc
jmp
push
fs
xor
mov
mov
cli
jmp
adc
repnz
xor
inc
js
pop
fucomip
stc
ja
or
into
cmp
or
ljmp
pop
test
dec
leave
out
xor
inc
mov
pop
repz
pop
std
or
push
xorl
pop
or
xorl
dec
inc
jb
in
push
fs
push
jno
lret
inc
mov
loop
iret
mov
arpl
movsb
mov
sub
xchg
jecxz
sbbb
imul
inc
mov
out
jbe
pop
cmp
mov
scas
jge
lods
outsb
enter
mov
pop
sbb
dec
out
jns
add
and
lret
ja
bound
ret
jno
repnz
sbb
repz
mov
int
leave
sbb
cmc
jmp
lds
fnstcw
mov
rcll
mov
das
xchg
lahf
daa
iret
push
fwait
push
gs
in
js
or
push
mov
in
rolb
adc
fadd
cmp
cli
lret
stos
std
push
push
mov
adc
ret
loop,pt
inc
push
lods
jns
movb
fcom
fwait
clc
int
ja
enter
mov
test
pmaddwd
or
cwtl
insl
cltd
lds
movsl
in
movb
add
push
movsl
and
in
mov
xchg
inc
iret
cli
shlb
mov
xchg
int3
xor
lock
or
out
sub
push
ss
test
jecxz
dec
enter
jo
push
sbb
cltd
cmc
jmp
mov
and
xor
mov
popa
inc
mov
scas
inc
adc
and
or
cld
cmpsb
fidivrl
mov
and
add
add
sub
hlt
sub
ss
jb
push
fnstsw
push
stos
sbb
push
loope
sti
rorl
push
xor
fstps
jnp
sbb
out
in
push
ds
push
enter
pop
sub
xchg
insl
out
daa
cli
loope
mov
shrb
ficompl
and
pop
scas
sbb
fsubs
lea
sbb
sub
ss
xor
sub
or
repnz
mov
pop
xlat
movsb
xor
jne
or
data16
pop
sub
test
sahf
sub
mov
sbb
out
mov
sub
add
insl
xchg
dec
jecxz
int3
cld
pop
cmc
inc
cmpl
cld
pop
inc
adc
test
xlat
xchg
add
movsb
pop
and
push
xchg
inc
or
nop
xor
cmpb
jnp
adc
jle
pop
cmp
sbb
stos
bound
sbb
add
insl
sarl
aam
imul
sbb
repnz
mov
mov
cmp
push
xor
cmp
into
xor
xchg
mov
daa
and
mov
mov
adcl
mov
out
gs
cmp
jo
rorb
jl
out
hlt
repnz
push
push
cmp
add
stos
cli
jno
in
hlt
stos
int3
js
jo
xlat
jecxz
int3
mov
mov
fidivs
stc
dec
aas
cld
test
test
pop
repnz
andb
push
std
mov
daa
out
adc
in
cmp
pop
jl
aad
ret
aaa
ficoml
xor
mov
or
jmp
add
faddp
add
outsl
es
jge
fwait
jae
cmc
cld
pop
mov
lock
movsb
setp
xchg
xor
inc
lds
jmp
push
add
pop
dec
push
sti
inc
out
sbb
pop
and
lods
mov
jecxz
fbld
cmpsl
pop
aaa
dec
ds
push
mov
mulb
xor
ljmp
sbb
or
jmp
adc
aad
jno
push
sbb
daa
dec
loopne
cmc
loope
mov
sbb
js
fcmovnbe
ss
sbb
jne
psllw
jo
adc
xor
cmp
repnz
jmp
das
xor
dec
loop
or
arpl
sub
repz
mov
loop
sub
sbb
push
lret
push
movsl
sub
xor
sub
sub
rolb
or
inc
mov
pushf
mov
inc
sub
pusha
push
addr16
add
aaa
pop
xchg
outsb
fmuls
xor
outsb
loop
xor
fstpt
mov
data16
jmp
mov
movsl
mov
adc
xchg
add
cltd
scas
jmp
fs
lcall
sti
lock
mov
cld
sbb
jo
arpl
popf
fcos
int
xlat
pop
xchg
cmpsb
jmp
mov
mov
ret
sbb
pop
js
pusha
movb
pop
sbbl
sub
imul
ss
mov
ss
xchg
add
jnp
push
sub
mov
loope
dec
xchg
es
mov
sti
dec
dec
mov
pop
sbb
inc
add
mov
and
or
jb
dec
movsl
out
push
mov
add
sbb
aaa
sbb
bound
dec
mov
xchg
dec
stos
leave
cvtps2pi
adc
test
dec
in
call
lahf
inc
push
in
je
inc
cs
or
fldl
inc
fwait
mov
mov
xchg
test
xchg
push
adc
dec
outsb
and
cmp
outsl
leave
xor
sbb
loope
pop
testl
adcb
cmp
outsb
push
pop
aaa
adc
push
sbb
int3
fadds
jb
addb
mov
push
mov
sub
lea
bound
adc
clc
inc
sahf
in
fstl
arpl
cmc
cmpsl
bound
fbstp
daa
cmp
push
lods
adc
push
adc
xchg
pop
decl
into
fldcw
mov
cmpsb
dec
or
adc
aas
lahf
dec
shrb
xor
test
or
push
inc
pop
insl
push
fildl
push
cmp
pushf
lahf
rep
bound
pop
leave
add
lock
cs
pop
sti
or
jbe
jmp
lahf
aaa
jle
cmp
adc
xor
inc
int3
lds
inc
add
inc
pusha
or
mov
sub
cmp
imul
adc
sarl
mov
aas
sbb
pushf
mov
out
push
movsl
sti
pop
mov
aas
jo
inc
add
sub
push
xchg
fdivr
int
sub
lock
mov
dec
aad
and
rorl
mov
cwtl
adc
mov
inc
mov
repnz
mov
lret
lods
iret
or
add
ja
daa
xchg
int
xchg
mov
cmp
movsl
imul
aad
ficoml
popf
scas
stos
inc
xchg
enter
push
mov
xor
cwtl
cmp
pop
push
outsl
call
pusha
sub
push
jno
cmpsl
mov
lock
cwtl
mov
int
frstor
or
mov
int
sub
leave
mov
sub
and
mov
icebp
cltd
movsl
fstl
loope
fcomps
cmp
adc
inc
and
lods
cltd
jl
sbb
xor
push
push
xchg
rorb
int
shlb
xorl
mov
lret
sbb
icebp
repnz
adc
lds
add
lret
cli
mov
rorl
push
out
push
jnp
add
shl
ret
arpl
test
pop
scas
mov
out
xchg
dec
jge
test
mov
adc
sub
arpl
sbb
lock
mov
mov
subb
mov
out
adc
repz
dec
aam
add
arpl
fisttpl
push
in
push
test
imul
xchg
add
adc
stos
xchg
enter
inc
mov
or
push
scas
roll
or
cmp
aad
mov
lret
and
adc
and
out
xchg
or
mov
shrb
scas
fldenv
sar
movsb
popf
or
lea
std
cmp
ljmp
xchg
movb
shlb
lea
movsl
xlat
dec
sti
aaa
mov
mov
sub
sahf
add
addl
bound
sahf
out
jl
out
test
cmp
xchg
inc
outsb
pop
loop
andl
fwait
andl
jne
sub
and
cs
xchg
pushw
negb
pop
push
test
psubw
insl
and
pop
scas
sbb
lods
push
ja
xchg
aad
or
sbbl
add
icebp
pop
jg
inc
pusha
lret
sub
and
jbe
adcb
xchg
jae
out
imull
jne
sub
lds
js
inc
lods
fmull
sbb
mov
fiadds
imul
fbstp
xchg
xchg
pop
mov
mov
inc
cmp
cwtl
mov
leave
cmpsl
xchg
sbb
scas
dec
mov
dec
mov
outsb
push
xchg
enter
and
addr16
jecxz
mov
mov
inc
data16
jno
cld
mov
sub
into
push
push
int
add
add
sbbl
lea
icebp
xchg
mov
dec
sti
cmp
jmp
mov
shlb
das
push
and
sti
push
xorb
add
xor
jl
je
arpl
fbld
sbb
mov
jge
sub
push
dec
js
add
dec
xor
pusha
adc
in
jb
fwait
cld
hlt
out
fimuls
in
inc
sub
imul
popa
out
insl
cmp
mov
negl
xchg
cmpsb
loopne
adc
mov
adc
xor
xchg
push
ret
in
cld
fisubs
aas
rorl
subl
stos
cmp
mov
inc
mov
jmp
add
mov
cmp
popf
mov
cmpsb
mov
mov
js
sti
psrld
cmpsl
push
icebp
pop
mov
jecxz
xchg
push
dec
sub
sbb
mov
call
popf
hlt
pusha
inc
mov
lret
push
mov
xor
in
rorl
sub
inc
mov
ret
stos
lahf
popa
mov
add
test
pop
sbb
pop
aaa
scas
cmp
jecxz
cmp
cmp
ljmp
data16
dec
movsl
scas
addr16
mov
mov
fucomip
xchg
cld
cmp
notb
mov
fcoml
not
inc
inc
insb
pop
nop
in
in
fistpll
xor
cmc
xchg
add
fwait
xor
mov
rorl
cmp
xor
jne
cld
cmp
pop
sti
add
mov
jg
out
mov
cmp
scas
jb
xor
fistps
push
iret
orl
pop
jecxz
loope
mov
xchg
xchg
pop
and
pusha
shll
dec
fistps
jb
stos
dec
inc
ja
push
xchg
xor
out
mov
aas
fisubl
data16
mov
xchg
nop
ja
cltd
pop
insl
daa
sub
int3
cmpsb
push
fwait
xchg
cmp
push
xchg
jnp
add
jnp
cwtl
cmp
test
mov
fsubp
mov
insb
sbb
std
shrl
shlb
jbe
loopne
mov
jle
call
pop
mov
movsb
mov
mov
popa
pop
jne
jg
xor
add
jmp
aad
jns
test
cwtl
arpl
sti
mov
and
push
mov
out
add
inc
ret
pusha
imulb
pop
lea
js
pop
jp
in
out
xor
cs
pusha
jae
adc
xchg
push
xchg
mov
iret
in
mov
and
jmp
push
adc
shlb
mov
pop
and
adc
and
jae
push
jns
fstpl
sbb
loope
jb
insb
ljmp
add
push
je
or
mov
adc
cld
cmp
dec
dec
xchg
ja
outsl
shrb
lock
test
pop
div
lahf
push
ss
outsb
adc
cwtl
int
sbb
mov
repnz
jnp
dec
sub
aad
call
or
js
push
fistpl
cld
and
mov
push
out
pop
xor
insb
roll
adc
mov
xchg
loopne
xchg
ja
idivl
rorl
and
out
lret
jns
in
dec
jo
mov
sbbl
lods
or
add
out
or
ja
mov
mov
andl
add
push
or
jecxz
mov
xlat
pop
xchg
inc
loope
xor
xchg
xor
nop
adc
cmc
arpl
cmp
xchg
mov
jb
bound
mov
inc
andb
cmp
mov
jl
mov
push
jnp
lret
xchg
sub
mov
add
or
and
mov
and
or
lea
gs
cmp
loopne
arpl
adc
lods
sub
xor
xchg
adc
push
jle
sub
repz
inc
hlt
movsb
mov
push
in
push
outsb
inc
xchg
dec
loope
pop
getsec
rcrl
jbe
je
mov
orl
popf
mov
and
dec
imull
pushf
into
inc
ljmp
fsubs
cmpb
loopne
push
or
movsb
xchg
cld
xchg
jge
insl
test
stc
loopne
push
test
jmp
das
in
cmp
jnp
aas
popf
sbb
xchg
jo
icebp
mov
iret
mov
xor
push
jns
mulb
test
mov
loope
lcall
pop
cmp
xchg
sarl
ljmp
enter
repnz
cltd
out
mov
jns
xorb
mov
adc
in
shll
rolb
xchg
in
ficompl
jp
pop
es
push
int
pop
cs
xor
mov
std
fimuls
fmull
push
push
cltd
test
and
inc
push
pop
xchg
dec
push
pop
or
lods
es
fdivs
popf
ds
fistl
cmp
mov
adc
fisttpll
mov
jb
mov
add
adc
idivl
iret
leave
adc
or
jmp
int
bound
daa
and
idiv
pop
xchg
sti
in
mov
movsb
mov
jnp
ds
sub
mov
mov
xor
stos
mov
push
sti
and
mov
push
aam
xor
cmpsl
jle
jb
sub
xchg
and
cmp
push
and
add
jge
lcall
pop
hlt
lock
iret
mov
inc
push
loope
mov
adc
rcll
add
inc
bound
sarl
addr16
inc
movsb
bound
cmp
mov
sbb
data16
repz
aas
fwait
xor
enter
cmpsb
inc
mov
pop
xchg
add
cmpsl
jp
and
cli
mov
insb
xor
int3
xor
sbb
data16
movsb
nop
jp
daa
repz
cmp
notl
daa
popf
mov
and
mov
subl
sahf
sub
scas
xchg
push
jmp
hlt
pop
das
mov
add
stos
sti
xlat
in
fnstsw
out
scas
cwtl
sbb
mov
repz
lock
sub
pop
cmc
sbbl
fildll
bound
push
movsl
pushf
mov
cmp
pushf
test
xor
test
repnz
jno
rcll
cmp
lock
es
movsl
stc
in
push
add
int3
mov
test
call
clc
stc
out
fwait
xchg
loop
mov
call
fdivs
outsb
cmpsl
jle
test
loope
jb
das
out
lea
ja
out
sti
mov
add
cmpl
add
aam
push
pop
push
xchg
out
push
lods
add
cmp
shr
inc
mov
enter
sahf
jno
xchg
cltd
jecxz
insl
lret
jae
sbb
das
in
pop
std
mov
pop
out
mov
push
sub
jge
and
jl
add
mov
dec
sbbl
rcl
dec
add
add
cltd
or
adc
pop
mov
xchg
mov
dec
xor
pushf
mov
mov
cmpl
cmp
push
stos
std
dec
ret
cmp
mov
mov
xchg
pavgb
jp
je
roll
mov
inc
or
mov
cmp
popf
outsb
orb
push
sbb
idivl
mov
and
or
ljmp
inc
sub
stos
into
pop
push
iret
jp
mov
pop
testb
outsl
imul
ds
push
xlat
icebp
mov
pop
or
push
shl
mov
jns
into
es
in
jmp
rolb
pop
lcall
stos
inc
mov
cmp
jl
shl
and
xor
lods
and
jns
sbb
jne
mov
push
push
mov
or
mov
mov
into
sbb
add
dec
push
add
push
inc
ds
out
mov
sbb
pop
push
and
mov
jae
out
jae
xchg
xor
push
jns
push
push
add
dec
lods
jae
or
and
inc
xor
aad
push
test
mov
push
mov
out
and
and
fdivrs
push
jge
mov
push
sti
popf
sbb
cmp
pop
out
iret
dec
outsl
mov
sahf
test
dec
mov
mov
cmp
cmp
out
adc
or
jb
mov
xchg
stos
aad
mov
jl
daa
bound
push
and
data16
mov
loopne
pop
stc
add
out
mov
push
sub
lock
insl
sbb
js
mov
stos
add
xor
jl
and
sub
jae
hlt
jp
fcom
pop
add
xchg
mov
xchg
sub
ret
sti
inc
dec
push
scas
add
inc
imul
xor
sbb
lods
mov
fcomps
dec
imul
outsb
fstp
cmp
ljmp
data16
std
inc
pop
stos
test
jo,pn
mov
fldenv
subl
cmp
int
loopne
jp
adcl
jo
mov
ret
shlb
movsb
push
dec
nop
popa
push
xchg
outsl
inc
fldl
or
test
jl
mov
jb
cmp
jle
inc
jmp
in
mov
fwait
movsb
fucomip
xor
mov
adc
cmp
sbb
dec
or
sahf
call
pop
cli
xchg
jo
aas
push
cmpsl
testb
cmpsb
mov
push
inc
sbb
push
sub
pop
shrb
aad
aas
pushf
popf
adc
sbb
outsb
dec
mov
or
test
sarb
adc
mov
shlb
mov
jge
mov
mov
dec
lret
cld
push
dec
test
cld
fnstcw
gs
es
mov
out
cmp
sub
jmp
out
pushl
xchg
xor
push
test
jo
adc
pop
mov
pop
daa
sbb
shl
mov
fs
jg
mov
xor
and
adc
adc
dec
dec
mov
mov
jp
xchg
dec
xor
daa
incl
iret
das
fwait
subl
add
pop
rorl
stos
push
icebp
xchg
cltd
mov
das
fsubrl
jb
jo
pop
ljmp
idiv
ret
aas
cmp
xor
add
idivl
pop
pop
adc
aad
and
jbe
cmp
pushf
jge
dec
nop
aam
mov
jb
out
adc
push
iret
repnz
sarl
lcall
mov
in
mov
sbb
movsb
idivl
hlt
scas
xchg
std
sbb
rclb
adc
out
pop
shrb
imul
cld
and
sbb
push
call
cmp
and
repz
sti
adcl
sub
in
movl
or
pop
push
inc
jle
and
dec
push
fadds
fistpl
jne,pn
das
decl
sahf
out
in
int3
roll
jmp
xchg
add
push
sub
outsb
pop
xchg
pop
pusha
jbe
and
aad
adc
dec
jmp
arpl
inc
sbb
aad
popa
lea
add
push
movsb
fisttpl
imul
pop
icebp
dec
rolb
sarb
clc
dec
insl
mov
popa
aaa
aam
adc
popa
jge
stos
xchg
xor
mov
fwait
das
icebp
mov
and
icebp
push
lods
cmp
dec
xchg
sbbb
rol
popl
out
mov
sub
cwtl
adc
mov
lret
dec
inc
xchg
lea
stc
mov
call
inc
ljmp
push
push
leave
shlb
inc
cli
xor
add
test
gs
adc
aas
mov
add
pusha
or
mov
call
xor
push
pop
lock
test
stos
push
cmpsl
adc
inc
push
mov
aam
adc
add
flds
subb
gs
add
fs
mov
rorl
ljmp
dec
pop
movsl
andb
push
add
call
insb
xchg
scas
out
inc
insl
inc
dec
cmp
cwtl
movsl
int
rorl
or
in
loopne
das
imul
sub
dec
jle
hlt
mov
fldl
ljmp
imul
popf
cmp
cmp
adc
jg
xor
insl
jmp
outsl
ljmp
and
push
mov
ss
dec
bound
out
ds
sub
jecxz
cmp
scas
outsl
inc
shrl
cmp
mov
sbb
push
add
clc
adc
cmp
cmp
cmp
xchg
sarl
loopne
sbb
adc
data16
jle
stos
xlat
sbb
in
dec
fiaddl
cmp
je
cld
loopne
call
cmc
ret
sbb
or
sbb
pop
out
psllq
xchg
mov
pop
sbb
add
mov
cmp
pop
push
mov
fs
loope,pn
lea
data16
pop
push
cltd
jp
in
mov
xor
test
je
std
rcrl
push
xor
mov
pop
stos
sub
push
ss
inc
and
jbe
imul
mov
negl
dec
ja
sub
add
or
sbb
jge
loope
adc
loope
mov
lods
cmpsl
inc
add
mov
lds
sbb
pop
mov
jbe
jmp
mov
sub
ljmp
idivl
jp
dec
fstps
or
pop
push
and
jae
lcall
xor
in
negb
xor
gs
cld
mov
jns
push
scas
gs
test
jmp
dec
jmp
mov
sub
frstor
mov
cmc
dec
adc
mov
fdivl
xchg
jle
xchg
add
minps
call
inc
adc
xchg
mov
or
setp
out
ret
or
mov
popa
jae
jecxz
lcall
adc
cs
mov
testb
insb
push
cmpb
ljmp
fcoml
stos
push
adc
mov
ret
jne
sbb
aas
pusha
data16
push
fsubrl
add
xor
test
lods
pop
xchg
mov
jae
mov
jecxz
mov
mov
mov
mov
xor
xchg
dec
cmpsb
xchg
adc
lret
and
mov
icebp
add
mov
inc
xchg
cmp
mov
or
mov
hlt
add
push
clc
int3
lods
and
pusha
into
das
jne
sbb
leave
cmp
repz
adc
lock
dec
pop
roll
mov
jne
je
cs
adc
mov
in
out
mov
inc
imul
sbb
mov
xor
shl
mov
lret
ret
pop
add
xor
or
outsb
daa
fnstcw
dec
jmp
xchg
jo
dec
das
sbb
clc
jo
lock
xor
or
adc
fcoms
jg
int3
add
add
sub
xchg
or
add
mov
add
fucomi
mov
lret
aas
and
xor
daa
pause
add
lahf
repnz
pusha
push
adc
cmp
outsb
jl
inc
jnp
and
or
cmp
cmp
or
xor
cmp
jp
add
pop
aaa
pop
dec
lods
jnp
mov
loop
sub
xor
inc
cli
add
add
test
movsl
push
pop
mov
push
mov
inc
push
and
push
test
mov
cmp
sbb
cltd
fisttps
je
dec
jo
lret
and
sub
dec
pop
orb
jns
push
or
aas
or
stos
sub
jae
lods
xor
xchg
adc
xor
popa
iret
push
rclb
xor
gs
loopne
loope
daa
shl
xchg
je
cmp
test
std
mov
icebp
xor
fidivrl
pop
mul
fidivs
test
add
cld
cmpb
dec
mov
mov
jb
cli
aaa
jo
mov
ljmp
bound
inc
repnz
jmp
mov
push
inc
mov
sbb
lcall
jp
xor
mov
stc
scas
or
enter
addr16
lock
loop
mov
pusha
jg
adc
push
lock
insb
iret
gs
icebp
mov
repz
push
push
mov
fistpl
fst
dec
mov
inc
inc
pusha
xchg
push
push
loop
mov
dec
jmp
cmp
jp
cmp
dec
outsl
dec
notl
idivl
or
filds
into
xchg
jnp
sbb
mov
addb
fs
lods
pop
push
pop
mov
and
mov
icebp
xchg
scas
or
into
adc
mov
xchg
mov
bnd
push
adc
xor
pop
inc
mov
aas
push
pop
sahf
pop
or
sub
stos
fabs
push
pop
inc
xchg
icebp
iret
leave
jns
push
fstl
jne
ja
mov
lock
mov
inc
and
xor
xor
std
imul
out
test
daa
mov
stos
loope
jo
in
and
mov
push
insl
sub
aas
sar
xchg
sub
push
lds
mov
cmpl
dec
inc
testb
incl
pop
scas
jae
icebp
xor
pop
pop
out
in
dec
dec
cmp
xor
mov
or
faddp
lea
fwait
pop
mov
movsb
cmp
data16
xchg
aam
arpl
loopne
or
js
aaa
push
mov
paddq
test
mov
lret
cmp
sahf
mov
out
aaa
dec
ret
shlb
sub
jnp
jae
fwait
push
cmpsl
ror
in
outsl
pop
mov
push
cmpl
fldl
divl
adc
dec
jbe
rorb
bound
mov
rol
mov
movsl
sub
rorl
fimull
jno
mov
movsw
lock
movl
cmp
pop
loope
nop
sub
stos
leave
clc
jmp
cli
jecxz
out
xchg
imul
lods
sub
aaa
jno
fidivs
sub
adc
add
and
ljmp
cmp
sbb
cs
add
leave
pop
sub
test
iret
cmp
inc
es
ja
les
mov
shr
add
dec
push
xchg
sub
rol
je
push
fiadds
adc
sub
cltd
loopne
out
loopne
xor
xor
stos
shl
fdivr
mov
arpl
popa
dec
sub
int3
inc
add
cmp
arpl
push
push
repz
stos
push
sahf
insl
mov
lahf
jnp
jb
jmp
mov
int3
scas
sub
loope
sbb
jecxz
jbe
popf
test
insb
adc
es
add
iret
xlat
mov
mov
cli
sub
dec
insb
push
lret
mov
out
loop
daa
pop
jno
out
inc
pop
sbb
gs
xlat
sub
popa
rclb
mov
adc
loopne
pushfw
jle
adc
mov
sbb
cs
clc
les
pop
movsl
fldln2
xchg
push
mov
pop
xchg
pop
cwtl
cmp
mov
or
cmpsb
xor
xor
imul
xchg
jg
loop
push
or
add
or
mov
sbb
jp
mull
cmc
jbe
jbe
xchg
push
or
add
mov
jge
jns
insb
inc
insb
jbe
mov
xorl
aaa
dec
cmp
dec
xchg
jmp
mov
addr16
mov
cmp
and
out
or
and
adc
setl
xchg
sbb
incb
psrld
adc
ds
dec
imul
testl
push
jecxz
push
ret
mov
or
test
leave
push
pop
mov
sub
mov
and
sub
scas
inc
js
js
sub
push
adc
jns
jbe
cmp
pop
push
jbe
rcr
inc
sub
das
aas
sbb
jg
out
mov
cld
cmp
inc
or
lcall
dec
sbb
lds
jne
mov
mov
cwtl
aam
cmp
fstl
cwtl
in
sbb
in
push
orl
int
cli
cs
lds
lds
cmp
push
mov
xor
jns
or
mov
sbb
xchg
fildll
out
test
mov
jnp
push
jnp
or
in
andb
gs
mov
or
pop
pusha
sub
ljmp
les
mov
outsl
in
sarb
inc
or
scas
ret
outsl
je
cmp
or
mov
xor
movsb
mov
sub
stos
test
insl
cmp
in
mov
jb
addl
dec
int
cmp
nop
repnz
call
lret
cmp
mov
xchg
mov
int3
push
repz
jno
sbb
aaa
pop
add
mov
inc
dec
push
xchg
ror
pop
mov
insb
fisubrs
dec
or
push
inc
jne
or
pop
mov
cmp
xor
dec
ja,pn
adc
fsubrs
pop
sete
adc
jle
or
mov
sbb
sub
add
pop
xchg
divl
push
test
fldcw
pushf
adc
cmpsl
in
insl
in
loope
adc
mov
lahf
fstl
sub
outsb
mov
mov
imul
dec
dec
in
orl
test
cmc
aaa
inc
sbb
clc
cld
cmp
xor
xor
push
mov
ficoml
ds
or
mov
das
jmp
inc
and
sbb
push
out
mov
ss
sub
jecxz
lahf
jae
lcall
xor
adc
es
push
scas
xor
repz
js
jb
mov
xor
rorl
test
jmp
adc
add
or
mov
mov
xor
jo
adc
dec
std
ss
xlat
cmc
outsl
ret
fdivr
je
sarb
mov
jecxz
xchg
rcrl
filds
jnp
clc
jns
sarl
or
add
popf
lock
insl
test
mov
xchg
cwtl
jmp
ljmp
test
jecxz
mov
adc
dec
ret
push
or
mov
add
jns
cltd
fiadds
jb
sub
sub
loopne
or
adc
adc
jle
mov
fwait
test
and
inc
iret
adc
loopne
cmp
shrl
ljmpw
xor
popf
sub
movsl
out
or
inc
test
sahf
sbb
fwait
movsl
into
xor
and
cmp
mov
mov
std
jb
xchg
jbe
jmp
data16
add
jns
xor
lret
cmpsb
xchg
insl
enter
jp
mov
and
xchg
jle
xchg
call
insb
mov
ficomps
push
sti
push
fcmovne
add
insb
popl
mov
jl
enter
inc
or
pushf
mov
pop
test
push
bound
push
xchg
inc
inc
mov
adc
out
mov
fcoms
xchg
push
mov
loope
xchg
popf
inc
xorl
shrb
mov
cmp
inc
fistpll
add
mov
loope
mov
lret
xor
aad
cmp
jmp
lret
mov
mov
out
mov
scas
push
leave
jg
data16
outsb
jae
out
repnz
repnz
fnstcw
push
sbb
gs
lret
xchg
inc
sbb
sub
cmp
cli
aad
test
adc
cmc
sbbl
mov
push
xchg
jnp
test
dec
or
and
dec
stc
lods
in
popa
repnz
fs
inc
xor
adc
data16
int
pushf
mov
mov
adc
ret
bound
std
mov
adc
fsubs
ljmp
jg
cmc
adc
mov
lds
inc
sbb
or
stc
sub
mov
cld
sbb
cmpb
fsubrl
mov
out
fs
cmp
pop
cmp
mov
shrb
push
push
adc
mov
push
adc
movsb
pop
xor
call
jp
mov
addb
hlt
sbbl
fadds
add
jge
pushf
dec
in
popf
pop
in
inc
cmp
jne
adc
and
ljmp
dec
sub
dec
mov
xor
pusha
mov
adc
and
sahf
dec
test
sbb
shrb
pop
adc
and
sbb
insl
push
xor
loope
imul
push
mov
gs
cmp
cli
aad
and
andb
sub
outsl
in
std
test
mov
push
mov
gs
repnz
sbb
xchg
orb
movsb
push
push
pusha
das
jecxz
xchg
sbb
incb
in
cwtl
mov
xchg
and
jne
outsl
push
adc
rolb
test
mov
fnstcw
sbb
push
add
mov
lds
mov
jmp
mov
xlat
cmp
cmp
enter
incl
int
cmp
jg
cwtl
adc
ss
nop
push
and
aas
jp
push
es
out
or
xchg
cli
into
lods
nop
mov
clc
fcoml
xchg
jge
fcmovbe
cld
sub
sti
mov
pop
subl
or
shll
movsb
ja
popf
out
cwtl
inc
jae
ret
jmp
and
and
dec
push
xor
pop
mov
and
mov
leave
xor
push
nop
icebp
cmp
out
insl
sub
inc
adc
or
imul
addr16
jno
and
dec
jle
mov
push
stc
das
inc
out
ljmp
add
sub
icebp
push
in
out
mov
movsb
aad
iret
cmp
das
xorb
cmc
push
ljmp
inc
das
adc
test
sbb
dec
lock
mov
jl
xchg
int
pop
popf
pushl
push
pushf
lea
call
or
das
sti
sbb
insb
cltd
lods
or
out
enter
sbb
out
xchg
xlat
mov
dec
ror
sbb
mov
mov
cld
sarl
test
imul
xor
jle
jne
pop
inc
xor
rorb
pop
xchg
shr
cltd
sub
mov
in
in
dec
cld
es
xlat
popf
lret
mov
ret
ljmp
xor
shll
dec
fwait
mov
fcmovbe
stc
ljmp
xchg
mov
sub
outsb
mov
inc
push
adc
xchg
jbe
fwait
aas
out
sbb
out
sub
loope
idivl
jb
pop
les
pop
pop
stos
das
addr16
xorb
push
jmp
sbb
aaa
addr16
loope
ss
jbe
xor
adc
dec
scas
repz
inc
adc
push
sahf
inc
ja
cmp
push
cmpl
and
scas
paddw
test
xchg
jge
daa
xchg
repz
daa
jmp
loop
push
mov
xor
imul
xchg
pop
loopne
lock
cltd
jp
push
mov
inc
lea
xchg
test
sbb
cmpsb
faddl
lret
cmc
cmp
fiaddl
dec
dec
loopne
sbb
mov
xlat
inc
pop
mov
jge
pushf
ret
jns
cmp
sti
mov
add
popa
aas
cmp
adc
aad
adc
cmp
inc
sub
sbb
cld
mov
cwtl
aas
dec
inc
rcll
xlat
int3
repnz
mov
std
cwtl
fisttpll
sub
dec
in
add
pop
push
arpl
pop
cmp
xchg
xchg
or
sbb
xor
outsl
cmpsb
movsl
pop
dec
cltd
mov
xor
mov
in
inc
adc
repz
push
inc
mov
cmp
imul
stc
test
jae
stc
shrb
aas
xchg
popa
xor
data16
mov
ljmp
mov
mov
sti
test
add
stos
inc
mov
repnz
out
cld
stos
xchg
cltd
or
or
addr16
cmc
push
imul
mov
xor
lods
sbb
push
jns
push
and
out
cmpsb
aad
jns
jae
pop
dec
mov
mov
pop
mov
aas
mov
js
lahf
mov
out
in
insl
adc
or
into
cmp
jge
push
xlat
xchg
shrl
add
mov
repnz
mov
push
negl
js
int
add
clc
stc
push
xchg
inc
adc
nop
cmpsl
je
pop
cld
add
mov
xchg
or
enter
ljmp
adc
push
inc
cld
and
mov
shl
lock
add
xchg
mov
xor
dec
push
repnz
cmpsl
cmp
add
or
mov
cli
push
jge
adc
cld
jns
sti
lods
out
xchg
cmpb
xor
aad
sahf
ret
aad
adc
adc
sbb
xchg
scas
mov
pop
cwtl
out
lods
push
add
shrl
dec
outsl
gs
sbb
xchg
push
clc
repz
inc
pop
imul
cmpsl
inc
mov
mov
pop
cmp
repnz
hlt
fimull
cmp
jmp
cmp
repnz
cwtl
cmp
sub
fadd
in
cmp
pop
hlt
and
js
int
push
inc
push
xchg
push
cmp
xchg
dec
jmp
in
mov
xor
xchg
sbb
adc
into
adc
popa
imul
and
mov
das
or
flds
leave
jno
jae
rcrb
jae
lahf
js
sub
or
mov
xorl
mov
pop
dec
adc
dec
cmpsl
ficomps
fdivr
mov
jecxz
mov
enter
movsl
lahf
xor
movsb
dec
inc
addb
imul
sbb
cmp
lea
fistpl
adc
mov
add
pop
xor
xor
dec
and
int3
xchg
add
jmp
push
inc
xorb
jge
outsb
stos
fs
xor
roll
cmp
mov
inc
test
xor
imul
xor
out
iret
pop
add
push
gs
addb
lock
fcmovnb
pop
lock
loopne
push
jge
loope
out
inc
mov
inc
or
lret
mulb
pop
loope
push
loop
fldl
pop
jge
mov
addl
push
xor
jne
cmpsl
jle
enter
cmp
jl
mov
test
shll
mov
mov
mov
push
inc
shll
sahf
mov
jmp
inc
mov
mov
mov
adc
sbb
cld
fcoml
or
or
sbb
adc
xchg
in
adc
mull
mov
and
dec
fldenv
popa
mov
pop
in
jmp
cmp
jo
stc
jnp
pop
sub
xor
gs
xchg
movsl
sbb
orb
cmc
xchg
adc
loop
push
nop
jg
xchg
inc
in
add
cmpsb
sahf
mov
shll
stos
add
stos
jb
movsb
stc
lahf
movsl
push
inc
iret
mov
dec
jno
and
inc
xchg
into
loopne
jg
outsb
faddl
or
xchg
xchg
andb
and
xor
out
sbb
cmp
fldcw
sub
xchg
gs
cmp
sbb
dec
out
pop
scas
cmp
cmp
shlb
jl
jns
push
fistpl
inc
and
pop
jle
gs
arpl
cli
pop
xor
mov
push
ds
dec
shlb
das
jb
repnz
adc
fs
pop
aad
pop
int
gs
popl
cmp
cs
jns
je
orb
mov
jmp
add
and
push
mov
repnz
andl
scas
outsl
push
push
lds
pop
call
data16
lds
out
pop
adc
mov
ljmp
mov
jg
cmp
leave
adc
xchg
test
int
push
or
fistl
adc
cld
jge
jno
dec
jl
xorb
dec
or
push
in
hlt
out
mov
ret
xor
das
adc
sub
xchg
in
adc
sbbl
mov
cld
nop
adcl
mov
test
dec
pusha
mov
mov
sub
fists
jge
adc
pop
stos
inc
hlt
push
cmp
fdivp
mov
mov
lea
and
mov
fs
lret
ds
hlt
jecxz
jns
stc
in
mov
loope
outsb
or
ja
pop
movsb
dec
repz
sbb
or
test
stos
cs
mov
fidivs
jb
cmpsb
jmp
data16
xchg
cmp
and
test
dec
push
rcrl
fwait
int
or
lds
and
shlb
xor
jne
out
into
sub
jo
or
lock
xlat
and
je
cwtl
insl
and
call
push
sub
lret
ljmp
ret
xor
sbb
ljmp
jne
jl
call
mov
subl
leave
outsl
mov
dec
push
out
mov
adc
mov
mov
and
aaa
mov
shrb
push
jne
sbb
sub
mov
pop
or
data16
int3
mov
sub
ds
jns
push
mov
jae
sarl
mov
push
rolb
adc
mov
cmp
scas
push
add
adc
or
adc
xchg
inc
lods
xor
fsubl
xor
andb
aad
shrl
es
js
sti
repz
jp
aas
push
mov
jge
add
stos
xorl
aaa
fimull
movsl
or
mov
stos
jbe
jne
pusha
jmp
pop
mov
jge
ret
popa
call
xlat
stos
fsubrs
mov
daa
test
add
sbb
pop
outsl
ficomps
xor
repnz
jo
add
out
xchg
pop
aam
pop
outsl
dec
mov
andb
mov
add
popf
nop
stos
in
aaa
mov
mov
loop
in
xor
adc
insl
inc
ret
sub
mov
loope
insb
fs
cmp
imul
adc
stos
rol
dec
sub
fwait
or
push
lea
mov
xchg
pop
xchg
out
and
mov
int3
adcl
jmp
xor
pop
cmp
inc
imul
xchg
iret
dec
inc
push
xor
cwtl
mov
mov
nop
popa
movsb
cmp
out
cmp
pop
adc
fcos
lock
repz
mov
jge
lods
stc
push
push
xor
mov
in
popf
dec
sti
dec
movb
scas
mov
cmp
sar
cld
add
inc
inc
subl
inc
sbb
fwait
and
adcb
pop
mov
mov
decb
hlt
mov
inc
or
dec
lods
or
xchg
pop
mov
scas
add
mov
or
xor
jecxz
pop
inc
mov
dec
movsl
xlat
xorb
xchg
aas
bsr
sbb
addb
imul
sbb
jne
add
insb
pop
push
cmp
mov
enter
adcl
setns
std
cmp
and
xor
cmp
xor
lea
insb
inc
lahf
add
jbe
adc
or
jecxz
jb
daa
and
enter
push
aad
sub
ffreep
cmc
dec
out
movsb
in
pop
cmp
inc
out
imul
xchg
stos
cmp
iret
aas
iret
jb
inc
dec
jecxz
dec
ljmp
icebp
inc
jnp
push
loopne
dec
xor
loopne
dec
xor
mov
cs
jp
pop
and
xchg
dec
repz
insb
xchg
outsb
xor
test
int
inc
dec
fiadds
sbbb
and
mov
lret
xor
into
or
add
aas
sub
in
mov
movsb
jb
in
fwait
ja
pusha
mov
cmpsl
push
ret
inc
out
ds
pusha
add
call
in
cmp
xchg
repnz
loope
push
mov
cli
xor
mov
fisttpl
rcrb
int
sbb
jmp
lds
out
loop
inc
popf
mov
mov
lods
jae
aaa
pop
dec
insb
mov
lret
jg
negb
or
ljmp
mov
add
or
xlat
inc
jle
push
enter
sub
add
out
pushf
mov
xlat
insb
mov
lods
pop
out
fidivrs
bound
or
loopne
out
fxch
fisttpl
sarb
loopne
aas
inc
sub
lret
or
lcall
repnz
jns
aad
inc
rol
mov
push
push
and
test
and
popf
xor
fildll
mov
cmp
pop
cld
or
or
shlb
movsb
mov
fisttpll
inc
mov
idivl
repz
imul
add
aad
mov
out
fcompl
push
arpl
push
adcb
divl
mov
lock
shll
decl
lret
ds
cmpsb
jae
ret
jo
test
les
out
pop
jg
js
sti
add
mov
pop
les
xor
out
fs
iret
and
jnp
xchg
mov
mov
push
inc
jge
rorb
in
xor
pop
ljmp
inc
inc
cmp
stos
ja
outsl
sbb
aam
mov
xlat
test
jp
jbe
out
ficomps
iret
outsb
pop
out
loopne
icebp
icebp
popa
xlat
lods
mov
mov
push
loop
mov
pop
mov
das
mov
fwait
sub
sub
mov
mov
mov
jbe
out
stos
sub
faddl
dec
lcall
mov
xchg
cmp
mov
aad
adc
in
pop
imul
or
shll
cs
cltd
lock
lea
xchg
and
mov
repz
fdivrl
movsb
sbb
out
xor
pushf
sub
pop
test
cmp
fcompl
lahf
rolb
call
inc
shll
js
in
ja
add
push
mov
cmp
adc
movsl
fcompl
insb
or
dec
pop
orb
add
fstps
inc
sbb
in
mov
pop
bound
push
les
push
aaa
std
inc
fcompl
call
pushl
pop
aam
lods
xchg
test
dec
xor
movsl
or
dec
pand
sti
jle
int3
adc
ret
out
sub
cmpsb
out
jnp
int
or
movsb
notl
xor
clc
test
or
repnz
pop
scas
movsb
into
cmp
jp
mov
bound
pop
lock
pop
mov
leave
mov
cmp
lds
pop
out
xor
pop
mov
mov
xlat
jmp
mov
aas
adc
mov
xchg
enter
inc
push
mov
mov
xor
dec
mov
adc
xor
lock
mov
pop
push
xchg
ja
clc
inc
or
pop
lock
mov
mov
lea
sub
fcmovnb
push
adc
in
rcl
jns
cmpsb
pusha
out
push
mov
sbb
outsb
ljmp
or
imul
push
sub
dec
lods
push
mov
std
lock
inc
inc
and
clc
and
stos
cmp
pop
or
nop
push
mov
aaa
sbb
idivl
mov
sub
bound
call
arpl
es
js
mov
and
shrb
mov
js
pop
mov
jbe
lock
mov
or
cmp
adc
inc
xchg
orb
sbb
fistps
mov
les
or
out
add
insl
push
pop
enter
mov
jno
leave
es
mov
aaa
push
inc
pop
sbb
repnz
movsb
in
rorb
hlt
pop
mov
fsubrs
sbb
xor
mov
lret
loop
sbb
mov
xchg
push
cld
sub
lock
es
in
and
imul
mov
and
push
sbb
inc
xchg
add
mov
scas
addb
shlb
mov
insb
addr16
fwait
push
push
dec
leave
cmc
mov
push
fldz
and
insl
mov
xchg
cli
or
pop
pop
or
mov
mov
lret
xor
sti
mov
mov
or
mov
push
sub
jge
mov
lcall
test
sub
pop
sbb
sbbb
clc
push
sbb
sbb
mov
inc
mov
mov
movsl
aaa
jae
rclb
adc
insb
cmp
and
bsf
out
mov
hlt
push
scas
push
pop
aaa
and
test
outsl
shlb
mov
divl
sub
mov
ljmp
jnp
sub
fldenv
xchg
es
adc
mov
es
sbb
or
es
bound
push
std
aas
roll
sbb
out
sbbb
lahf
inc
add
mov
mov
popf
and
push
ret
inc
mov
inc
dec
jmp
sub
fistps
shrl
lahf
mov
aad
add
outsl
mov
inc
and
inc
sub
mov
dec
rclb
push
add
mov
bound
jb
dec
in
loop
jo
adc
in
and
int
pushf
jecxz
inc
sti
pusha
lods
lods
mov
inc
jmp
sbb
xor
imul
call
bound
lods
add
and
mov
xchg
sbb
cwtl
arpl
clc
scas
cmpsb
movsb
in
in
xor
jae
and
in
es
iret
cwtl
add
mov
and
dec
movsl
rcll
shr
inc
in
roll
xchg
or
ljmp
out
pop
cmp
xlat
ss
inc
jae
dec
fwait
aaa
fimull
fwait
push
sub
inc
sub
push
mov
inc
lods
pop
and
scas
adc
cmp
cltd
enter
int
scas
mov
outsl
cmp
add
js
je
mov
and
jb
adc
out
scas
icebp
mov
into
mov
push
js
adc
ret
xchg
add
cmpl
out
iretw
repnz
sbb
dec
lods
cs
dec
mov
adc
popf
rorl
sbb
mov
cwtl
jecxz
adc
rorb
daa
idivb
movsb
xchg
stos
push
mov
inc
lods
dec
push
add
jl
sbb
int
jb
push
mov
jb
cmc
imul
fwait
add
insl
jecxz
dec
stc
inc
movsl
test
jns
sbb
outsb
cmpsl
adc
enter
cs
insb
adc
push
lods
inc
lods
shlb
loopne
jns
dec
sub
adc
jecxz
pop
pop
jge
mov
lods
out
cmp
xchg
fs
test
pop
mov
aas
lret
clc
cld
xchg
cli
sub
aad
jl
xchg
add
shlb
lcall
lods
ja
inc
inc
cmp
jns
stos
out
push
mov
inc
nop
cwtl
daa
add
push
addr16
addr16
xor
push
add
out
out
out
dec
mov
test
push
dec
fistl
lret
mov
test
mov
pop
es
jb
in
xchg
lret
and
xchg
inc
ss
mov
mov
lahf
lret
in
mov
dec
pop
jb
sbb
int
add
hlt
xchg
repz
lods
mov
add
xchg
xor
mov
pusha
push
pop
fsqrt
pop
out
scas
xor
adc
insl
shlb
xlat
inc
mov
inc
mov
xchg
sub
ss
popf
scas
sbb
andl
stos
sub
push
push
cmp
popa
std
mov
sub
sbb
fwait
mov
popa
dec
pop
push
jae
cmpsl
mov
xor
cmp
test
inc
xchg
push
xor
pop
test
cmp
xor
out
addr16
sbb
xor
sti
mov
sub
sti
fistpll
in
clc
adc
cmp
loopne
push
int
std
xchg
or
inc
cltd
lods
push
mov
inc
je
sub
js
jg
and
in
lahf
add
inc
cmpsb
xchg
push
es
test
imul
shlb
jae
scas
sbb
mov
xor
aas
xchg
cmp
ljmp
mov
std
scas
mov
nop
push
cmp
clc
push
sahf
or
xchg
push
xor
fmuls
sub
xlat
popf
xor
in
icebp
stos
push
cmc
inc
arpl
mov
pop
sub
ljmp
sahf
inc
adc
cmpsb
fsubl
jno
sbb
sub
jno
leave
dec
jp
lods
add
dec
inc
outsl
mov
xchg
rolb
in
outsb
sarl
int3
or
aad
push
sti
test
stos
xor
imul
clc
sarl
mov
negl
sbb
ss
mov
mov
and
lds
imul
jl
xlat
dec
mov
mov
mov
arpl
test
and
ljmp
test
pop
xchg
add
addr16
stos
pop
jae
outsl
aam
ja
pop
inc
icebp
cmp
push
notb
jmp
lea
mov
mov
mov
dec
mov
add
or
jno
ja
adc
sbb
pop
pop
scas
inc
ljmp
subl
mov
adc
push
adc
xor
fadds
and
ret
inc
push
sti
orl
mov
sub
xchg
adc
ja
and
lcall
pop
sti
int3
pop
jge
push
pop
dec
xor
jp
insb
mov
and
shrb
andl
imul
pop
aad
ja
lcall
icebp
popf
jns
adc
call
loope
mov
in
cwtl
jl
out
mov
cmp
push
pop
dec
cmpsb
cmpl
sub
xchg
arpl
imul
or
add
and
mov
imul
push
mov
insl
xor
dec
jle
xor
into
push
stos
orl
mov
bound
aas
fs
aaa
rorb
add
sub
xchg
hlt
mov
aad
sbbb
mov
inc
clc
add
dec
stos
mov
outsl
aas
jbe
dec
mov
leave
or
mov
jbe
out
in
inc
jmp
cmp
xchg
and
cli
pop
gs
outsb
or
or
test
inc
repz
inc
pop
pop
scas
fwait
adc
mov
fmuls
fldl
push
mov
lahf
sbb
out
rolb
cld
repz
mov
loope
xor
lock
fistpl
adc
and
xchg
add
mov
insl
pop
xor
pusha
lea
dec
in
popa
into
sti
repz
dec
jp
int
cwtl
push
lret
movsl
add
jecxz
out
shr
xchg
mov
inc
movsl
dec
mov
push
pusha
and
int
mov
adc
push
pop
push
xor
pusha
ret
test
test
mov
sbb
stc
mov
jnp
xor
daa
inc
into
int3
jg
dec
xchg
ljmp
inc
mov
popa
xorl
mov
call
cmp
stos
loope
cld
testb
push
cs
loop
xor
sbb
fbld
mov
leave
lret
xchg
jo
cmc
dec
aad
scas
pop
stos
pop
pop
in
pop
xor
das
xchg
jecxz
dec
pop
sbb
adcb
push
fidivrl
out
into
icebp
aad
shlb
add
mov
mov
or
xor
add
in
add
xor
and
and
inc
adc
cmpsb
xchg
adc
and
test
xchg
scas
aam
jp
test
dec
dec
jmp
add
adc
ja
lock
mov
aam
insb
not
sbb
mov
mov
xorb
add
lcall
push
jo
repnz
inc
inc
outsb
xor
aam
jecxz
cmpsb
push
or
jae
and
fdivrs
add
xchg
push
xchg
test
jge
or
pop
negl
out
dec
mov
ds
adc
pop
pop
push
imul
iret
mov
jecxz
das
das
mov
aad
ss
lock
cmp
outsl
mov
sbb
lcall
mov
repz
dec
cmpsl
std
pop
jp
cld
pop
pushf
mov
aas
or
xor
cld
inc
leave
call
xor
cmp
add
stos
pusha
movsb
mov
popa
jns
into
pop
pop
push
loope
mov
add
cmp
out
sahf
jns
xchg
cmp
inc
push
cmpsb
mov
out
mov
dec
loopne
mov
add
pop
mov
mov
xor
sub
mov
or
sub
jmp
sub
jae
ds
push
jmp
and
cmp
jbe
iret
rcrl
mov
movsl
adc
and
add
dec
imul
repnz
sub
fwait
cmp
jmp
xor
xor
movsb
test
push
sbb
inc
pushf
xor
movsl
jae
mov
jmp
movsl
test
push
imul
pop
inc
or
jg
jmp
ja
cmp
jnp
std
leave
cmp
xor
sbb
fcmovnu
aaa
push
xor
xchg
sbb
push
subb
cmp
mov
pop
test
mov
dec
xchg
js
fstps
xor
lret
pop
mov
clc
scas
dec
popf
addr16
in
adc
bsr
mov
rcl
movsb
fbld
cmp
xchg
ffreep
and
xor
cld
test
inc
inc
inc
daa
push
xchg
nop
addr16
xchg
rorb
stos
ds
pop
or
insb
aam
fisubl
js
mov
and
sbbb
ror
bound
push
ljmp
mov
decb
cmc
lods
sub
call
add
jns
loop
adc
outsl
mov
hlt
and
inc
insb
into
xchg
pop
mov
mov
push
push
jo
movsl
push
xchg
rclb
push
mov
xchg
fsubrp
dec
mov
sbb
or
pusha
or
ja
enter
in
pop
xchg
xchg
int3
fstpt
gs
pop
and
in
sub
data16
inc
or
outsb
arpl
daa
adc
or
inc
and
sub
ja
loope
adc
cmpsl
out
or
into
es
incb
xchg
add
dec
loope
add
repnz
cmp
in
ljmp
ds
pop
sbb
daa
lahf
imul
inc
shr
lahf
xchg
out
add
mov
out
and
jp
mov
sbb
or
xor
add
dec
mov
imul
add
and
mov
xlat
sub
dec
or
loope
out
pandn
pop
jno
mov
dec
cmpsl
lea
push
enter
lods
mov
fwait
adc
cmp
test
scas
lds
push
pop
inc
dec
js
xchg
fwait
imul
jno
push
cmp
fisubrl
fidivrl
mov
xor
mov
pop
addb
mov
inc
sbb
loopne
add
hlt
sahf
cmpsb
iret
stos
fdivrl
sbb
xor
fwait
sub
aam
adc
push
int3
dec
push
fwait
add
popa
mov
ret
sti
cmpsb
inc
push
lods
es
es
cltd
inc
fistpl
mov
pop
xlat
es
mov
xor
push
lahf
outsl
test
retw
pusha
test
add
addl
test
sub
xor
xchg
ret
jo
and
inc
les
mov
popa
jo
or
js
scas
push
push
cmp
addr16
cltd
mov
cs
js
xchg
cli
inc
push
sbbb
jge
pop
mov
add
mov
push
sub
xchg
jnp
adc
mov
xchg
es
pop
add
xor
and
xor
cltd
sbb
inc
arpl
and
mov
rclb
dec
xchg
pusha
jnp
inc
arpl
dec
shr
rolb
ds
push
gs
or
loope
loop
mov
sub
add
loopne
mov
xor
xchg
pop
insb
shlb
cmpsb
mov
call
xchg
dec
sbb
jge
mov
aam
inc
jg
das
mov
aas
fsubs
stos
stc
lcall
in
sub
rolb
mov
xor
in
addr16
jp
and
and
aaa
shl
push
std
sub
fistpl
in
pop
push
sub
pop
xchg
or
mov
xor
push
idivl
lock
push
sbb
je
not
mov
js
das
pop
push
insl
rep
jg
mov
outsl
push
and
push
hlt
clc
popf
movsl
push
je
lret
mov
scas
pop
movsb
hlt
and
sub
loop
add
mov
mov
arpl
outsl
mov
inc
cmp
movl
add
rcl
nop
mov
mov
iret
test
adc
sti
push
imul
je
xor
sub
mov
push
mov
notb
inc
aas
mov
xor
divb
inc
xchg
dec
jp
mov
ret
cmp
ret
faddl
adc
and
fcmovbe
lods
shll
pop
ljmp
lods
add
xchg
adc
mov
arpl
lods
add
jb
fsubrs
xor
call
pushf
jle
dec
push
pop
or
push
in
and
adc
add
lds
stos
cmpsb
adc
cmpl
cwtl
mov
mov
lods
sbbl
jb
adc
repnz
notb
repz
test
rdmsr
xor
pushaw
mov
mov
xchg
pop
ret
mov
lret
repz
push
xchg
adc
lcall
cmp
rcl
push
lock
popf
sti
outsl
fiaddl
ret
add
cmp
pop
push
mov
das
and
std
push
daa
push
mov
adc
movsl
and
xchg
arpl
adc
add
xchg
js
je
loopne
in
cmp
imul
arpl
xchg
enter
and
push
add
cmpsb
fistpl
xor
sarb
inc
popf
and
or
inc
mov
xor
add
dec
insl
push
xor
shll
xchg
cmp
fcmovb
popa
xlat
cmpsl
mov
mov
jae
shl
dec
addr16
jno
lods
jns
aaa
mov
mov
xor
mov
xor
scas
loop
insl
mov
dec
add
decb
test
jl
leave
cmc
call
fistps
and
test
xchg
lar
pusha
loopne
push
mov
push
daa
sbbl
fcmovbe
mov
cmp
out
sbb
mov
loop
jl
push
jbe
es
pusha
add
dec
xchg
das
jg
push
sub
aam
pusha
jmp
mov
push
push
lcall
movsb
pop
out
adcb
or
mov
test
jmp
sub
add
lds
jecxz
jnp
cmp
mov
sbb
push
mov
sub
aad
xchg
push
shlb
cmp
cmp
pusha
lea
fidivl
dec
xor
xchg
push
or
xchg
adc
in
mov
pusha
outsb
sti
add
jge
push
jmp
addr16
call
and
in
jno
sar
je
les
push
mov
mov
dec
dec
or
je
mov
jl
pop
lods
sub
je
push
adc
jbe
je
mov
aam
mov
ret
fwait
unpcklps
mov
mov
mov
lds
cltd
sbb
inc
mov
loop
mov
inc
cmc
fs
jmp
out
sub
mul
pop
mov
xor
movsb
mov
test
adc
mov
mov
adc
mov
sar
mov
mov
dec
jle
xchg
cltd
dec
mov
xor
outsl
mov
jl
cs
or
aam
jp
lret
jbe
fsubrl
inc
pop
inc
sub
pop
leave
jmp
negb
in
inc
fwait
inc
push
push
shll
lds
in
mov
icebp
out
out
xor
inc
fstpl
movl
pop
sbb
repnz
inc
movsl
push
scas
fs
pop
sub
xor
enter
or
stos
daa
xchg
dec
mov
or
addb
cmpl
or
push
lds
cmp
adc
fs
aas
mov
push
mov
pop
adc
call
scas
rclb
subl
lcall
pop
les
lret
insl
int
and
js
data16
xchg
mov
dec
das
in
mov
cmc
pop
pop
cwtl
sub
dec
jae
push
aas
ss
and
dec
xor
fwait
movsb
lahf
cwtl
clc
push
int
mov
icebp
mov
pop
adc
pop
xchg
sbb
dec
imul
or
das
push
fldl2t
jns,pt
outsb
lcall
inc
jb
jbe
test
push
cs
mov
bound
or
mov
in
or
imulb
fcmovbe
in
push
sbb
add
into
or
add
mov
aas
hlt
sub
je
mov
bound
stos
scas
jne
sub
sbb
mov
xor
xorl
or
stos
mov
mov
jg
xchg
pushf
dec
iret
push
jnp
lret
add
xchg
jmp
mov
mov
inc
mov
pop
sub
int
xlat
mov
inc
mov
lret
sub
mov
shlb
mov
xchg
push
fimull
pop
cmp
cmp
test
aam
sbb
or
pusha
mul
mov
sub
dec
add
mov
jae
pusha
outsb
jb
and
mov
xchg
mov
data16
andl
js
ret
pop
gs
rcrl
lcall
dec
out
ljmp
pop
push
pop
jge
fdivr
rcl
lcall
pop
inc
sar
push
repnz
movsl
inc
fwait
test
mov
jno
mov
movsl
add
stos
jns
sbb
loop
out
loope
push
aas
xor
jns
xchg
push
rcll
daa
loop
or
or
adc
repnz
jmp
es
jbe
xor
in
pop
jmp
roll
dec
aaa
adc
leave
or
sbb
in
add
cmp
rcll
cmp
loope
aad
call
add
rorl
and
mov
cltd
adc
arpl
sub
dec
inc
mulb
jo
mov
iret
xchg
xor
mov
pop
es
or
cmp
nop
push
xorb
scas
mov
jno
sar
je
sbb
dec
jo
add
mov
or
mov
inc
mov
mov
adcb
std
cmpb
jge
mov
mov
dec
in
lds
mov
mov
out
cmp
leave
lahf
movsb
outsl
push
cmp
push
lcall
movsl
sub
in
jle
push
pop
pop
aad
adc
sub
test
sub
stc
cmp
inc
add
cs
jae
rcrl
sub
call
ljmp
test
inc
out
fstpl
push
popa
cmpsl
stc
push
add
mov
enter
rcrb
xorl
jp
inc
inc
pop
ret
aas
dec
test
jb
sbb
psubusb
jg
jae
out
jne
adc
test
fdiv
pop
in
fwait
cltd
dec
js
inc
sahf
sub
and
mov
mov
jnp
arpl
inc
pop
outsb
jecxz
push
ficoml
jmp
xor
xchg
xchg
pop
dec
rorl
inc
cmpsb
jge
sbb
in
and
fsubr
push
add
movsl
cmp
loopne
xchg
sarl
mov
dec
add
test
scas
mov
dec
loop
pop
mov
jmp
clc
cltd
cmpsb
adc
mov
and
outsl
or
xor
in
mov
shll
call
push
push
std
test
nop
fwait
push
sahf
mov
call
shlb
cmp
adc
packssdw
and
adc
ja
and
cmp
dec
gs
jb
sbb
jle
inc
sub
mov
mov
mov
sub
ds
pop
and
cmp
mov
sub
mov
sbb
inc
fucom
adc
cmp
adc
stc
sbb
dec
or
imul
cmp
shrl
es
nop
pusha
jp
shll
sbb
je
pop
or
out
ror
sub
mov
repnz
mov
fs
dec
push
xor
sbb
out
daa
lds
cmp
mov
out
push
fbld
cmp
xchg
mov
or
dec
call
inc
aad
and
sub
lret
rcrb
stos
lea
mov
mov
pushf
das
cmpsl
add
add
inc
scas
pop
lahf
cld
push
xchg
enter
mov
mov
add
push
inc
aam
dec
jecxz
mov
pop
aad
arpl
scas
push
shrl
in
lret
cli
idivb
fstps
cs
push
clc
xchg
aas
std
hlt
sub
out
jmp
jmp
jno
ficomps
ss
push
out
sub
scas
std
and
repz
test
xor
arpl
sbb
mov
test
aad
mov
inc
pop
jge
add
jb
shll
xor
repz
and
and
lods
inc
shl
jb
movsl
jp
pushf
cmp
cs
cmp
pop
cmpsb
jge
push
xchg
jl
addl
xlat
dec
push
xlat
inc
push
sub
fisttps
lods
xor
jecxz
test
mov
pusha
xchg
jae
insl
cmpl
jecxz
test
inc
das
mov
test
sub
or
das
aad
xchg
xchg
xchg
mov
xor
push
repz
push
lret
push
mov
ficoml
inc
inc
mov
push
mov
clc
pop
xchg
and
push
sbb
inc
inc
pop
subl
and
lret
addr16
xchg
jecxz
ljmp
loope
xor
add
aas
jae
xchg
mov
hlt
and
test
fildl
iret
cmc
test
out
push
or
and
jl
or
sub
std
les
jg
mov
test
inc
push
aaa
xlat
mov
ja
sbb
lahf
pop
and
mov
mov
pushf
adcb
sbb
out
cmp
pop
lds
pop
fwait
jg
lret
fs
push
push
fs
xchg
or
or
sbb
iret
fisttpl
fildll
mov
ret
pop
xchg
mul
cmpsl
xchg
mov
push
sbb
mov
jns
loope
aam
inc
inc
into
addr16
test
xchg
pop
sub
imul
cmp
roll
daa
push
rolb
repnz
mov
shr
xchg
sub
push
push
fiadds
and
pop
cs
push
jae
xchg
pop
push
pop
inc
pop
ffreep
mov
dec
imul
fwait
int3
rorl
pop
mov
shlb
dec
imul
jmp
sub
cmp
pop
es
orl
push
adc
in
nop
inc
mov
cltd
sbb
push
inc
pop
fs
outsl
mov
xor
arpl
xor
imulb
xchg
pushf
sub
jp
sub
xchg
in
sbb
into
lret
popa
jg
adc
dec
adc
loopne
sub
int
pop
test
mov
aaa
mov
mulb
mov
ror
jmp
call
aas
ret
mov
nop
lods
jo
je
rorb
lret
xor
shl
test
xchg
jae
push
mov
arpl
mov
in
iret
scas
jnp
push
jbe
push
jnp
add
adc
pop
addr16
xchg
icebp
xchg
call
push
inc
cmpsl
push
scas
lods
lods
inc
hlt
aas
push
add
ss
pop
cmp
lret
fs
fists
push
pushf
out
insl
insl
cmp
pop
inc
mov
add
and
mov
ljmp
test
test
das
das
cs
add
and
ret
inc
mov
jp
mov
orl
stos
cmc
clc
stos
bound
or
inc
leave
lahf
in
cmpb
aaa
mov
cmp
aas
cwtl
lds
and
ljmp
stos
pop
mov
insb
mov
mov
add
mov
dec
xor
mov
pusha
in
repnz
iret
into
enter
shll
scas
ja
loope
scas
loopne
mov
ret
enter
add
mov
lea
jb
jae
fxam
mov
shrl
push
inc
jne
mov
call
pusha
in
aam
loope
xor
mov
fdivs
xchg
pop
adc
jnp
jo
adc
arpl
out
add
ljmp
jmp
ss
nop
pop
arpl
jb
or
imul
adc
sbb
stos
cmp
into
mov
imul
mul
push
and
push
pusha
xor
frstor
outsb
outsb
add
fsub
push
xchg
int
dec
jp
iret
leave
call
jecxz
mov
imul
es
stos
mov
jnp
mov
push
xor
cwtl
outsb
addr16
insl
mull
lds
pop
int3
mov
lret
pop
jb
xrelease
xchg
xor
push
push
popf
xchg
pop
and
pop
lods
ss
jmp
jge
lcall
test
cmp
pop
es
push
add
gs
mov
mov
xor
aad
mov
inc
cmc
jb
lret
add
idivb
inc
adc
mov
pop
daa
scas
and
dec
mov
dec
filds
xor
pop
movsb
mov
push
and
cmpsl
ret
mov
ret
jbe
cs
shrb
jae
in
int
or
mov
add
dec
jmp
shrl
ljmp
aaa
cmpsl
mov
stc
dec
int3
lret
and
mov
outsb
shll
mov
sub
add
ja
lret
jl
shll
aam
out
sbb
push
mov
loop
push
das
shll
movsb
and
mov
adc
clc
into
inc
callw
dec
or
addr16
sub
arpl
inc
mov
jle
sbb
loopne
es
jno
dec
lods
call
jns
adc
imul
bound
bound
dec
loopne
int3
into
push
lods
sbb
dec
js
iret
sbb
pusha
ds
pop
adc
ja
mov
leave
pop
fstl
or
jle
jmp
addr16
ret
je
in
aad
inc
ljmp
das
roll
outsl
dec
pop
push
xchg
xor
ret
shll
sbb
rclb
jne
leave
push
fstpt
push
or
lret
mov
mov
pop
dec
repnz
in
mov
pop
addr16
mov
out
push
cwtl
mov
lret
fisttpll
insl
pushf
lock
and
gs
cli
lock
or
sbb
pusha
negl
in
mov
jmp
mov
pop
into
xor
mov
cwtl
cmp
out
ds
sub
push
sbb
push
cmp
scas
push
sahf
pop
cmp
pop
adc
push
aaa
sub
jae
and
jbe
mov
sub
leave
jb
mov
std
fpatan
xlat
jg
push
xor
push
les
xor
sbb
int3
lcall
fimuls
sub
test
stc
cmp
sbb
sub
mov
inc
cmp
lret
cmp
and
stc
cmp
dec
scas
ret
push
xchg
sub
iret
enter
scas
or
cmc
xrelease
ja
sub
int
push
sbb
push
fsts
adc
jae
pop
pop
outsb
adc
cld
in
xchg
jns
cmp
xchg
push
repnz
inc
adcl
pop
dec
out
ljmp
pop
xchg
mov
xor
xor
xchg
add
inc
push
mov
sbb
or
mov
lcall
sbb
pop
mov
xchg
sub
ret
repz
sub
lock
add
flds
adc
scas
repnz
mov
movsl
cs
sbb
lret
xchg
out
push
cmp
jecxz
sbb
push
cmpsb
and
pop
sbb
mov
xchg
in
adc
jmp
out
movsb
jnp
ljmp
js
add
idiv
leave
and
xor
sub
stc
push
xlat
ds
mov
push
mov
adc
add
mov
inc
mov
lods
aad
mov
cltd
sti
inc
leave
mov
sbb
adc
push
sub
sub
push
jle
mov
pop
imul
pop
jp
stos
test
cmp
jns
imull
xor
xchg
mov
cmpsb
cmp
xor
jae
aad
lret
cmp
cltd
or
add
and
and
mov
cmp
popa
sbb
mov
pop
push
divb
pop
stc
cmp
jle
ficoms
out
jge
fwait
xchg
scas
insb
adc
mov
fsubrp
lods
xchg
or
pop
stos
out
fwait
pop
popf
clc
stos
push
mov
into
repz
lods
mov
pusha
mov
lods
xchg
fstpl
xchg
sbb
stos
pop
sbb
or
xchg
jge
aad
ficoml
dec
out
lea
ja
xor
popa
cwtl
ljmp
mov
lods
inc
insl
pushf
and
sbb
rcrb
jecxz
cmp
mov
hlt
loop
out
ds
dec
out
push
or
inc
inc
push
push
std
outsl
ja
xchg
mov
inc
fsts
loop
and
adc
cwtl
fs
int
jge
test
adc
pop
mov
clc
movsl
and
mov
and
jbe
push
dec
jne
xor
mov
scas
cmpsb
mov
adc
into
inc
lret
adc
cltd
xchg
arpl
push
adc
hlt
or
mov
xchg
sbb
test
inc
sbb
es
ret
jmp
push
dec
out
cmp
xchg
addl
test
mov
fwait
sbb
or
or
add
push
xor
jae
push
daa
xchg
movsl
ret
push
mov
push
or
cmp
fldcw
repz
shll
adc
dec
push
add
aaa
add
bound
test
push
adc
cmp
cs
push
leave
and
add
xlat
out
jmp
movsb
push
enter
adc
out
xor
lods
jl
push
jmp
xor
xor
cld
cmp
aaa
push
lret
jbe
mull
sti
sbb
addl
loopne
aad
mov
xchg
add
mov
xchg
inc
rorb
fidivs
mov
cs
xorl
cli
xchg
lahf
ss
cld
mov
addr16
cmp
mov
mov
push
mov
lods
int3
mov
das
pusha
negb
xchg
mov
inc
adc
out
aaa
jbe
push
mov
cmp
xchg
cmc
imul
add
and
jae
inc
mov
xlat
lds
mov
mov
incl
sub
add
lcall
jbe
inc
in
mov
add
dec
pop
mov
aas
cmp
or
cmp
ljmp
cmp
je
pop
decb
ljmp
lock
test
pop
scas
push
sahf
mov
les
addl
nop
pop
in
xchg
jg
add
outsl
push
int3
mov
jae
loope
in
cmp
pop
fsubs
cmp
imul
add
xchg
insb
lock
jno
and
and
dec
ficomps
lret
out
negb
das
lahf
fistps
pop
mov
scas
and
hlt
or
jne
hlt
mov
testb
dec
push
pop
push
ret
pop
fadd
and
push
mov
ljmp
fmuls
imul
xchg
jmp
lock
jb
jbe
sbb
mov
inc
fldt
sub
repz
and
idiv
sti
jp
sub
add
push
shrl
sbbb
fsubl
and
or
cli
or
mov
out
jmp
sbb
loop
xchg
dec
inc
hlt
mov
sub
xchg
cli
xor
clc
pusha
sub
cmc
popf
jg
push
adc
mov
scas
xlat
mov
aaa
sub
in
subb
xor
repnz
test
int
push
aam
mov
popa
out
ja
sti
in
xor
and
jp
cmp
or
xchg
lea
push
jp
aas
push
jbe
lods
adc
sub
inc
outsb
popf
jg
mov
inc
xchg
cmp
pop
adc
test
clc
dec
leave
sbb
scas
sub
out
call
mov
xchg
cmp
dec
lods
out
pop
or
push
pop
or
or
mov
inc
xchg
out
jge
int
xor
faddl
xchg
les
sbb
xor
scas
in
mov
add
roll
lods
lock
add
mov
aas
ljmp
lret
icebp
mov
pop
lahf
inc
divb
into
enter
push
sti
cmc
inc
nop
cmpl
cltd
les
mov
pop
sti
jo
cmp
in
inc
aam
test
xor
push
sbb
cmpsb
dec
mov
mov
jae
pop
fmull
test
fstpt
xchg
addb
cmpsb
inc
test
mov
mov
pop
xlat
in
pusha
mov
mov
add
das
sub
pop
xor
pop
in
movsb
cmp
push
jg
and
adc
and
mov
jecxz
lock
inc
imull
jbe
jg
dec
or
mov
jae
mov
or
push
push
lods
push
fiadds
or
sarl
and
mov
mov
daa
ss
and
xor
out
lahf
add
test
out
mov
inc
clc
or
push
inc
mov
leave
mov
mov
mov
jle
pushl
jmp
jno
sub
sbb
mov
rolb
cli
enter
and
repz
jecxz
nop
rclb
pop
mov
repz
inc
dec
pushf
imul
lret
jns
add
dec
xor
into
ds
es
test
fstpt
not
jl
mov
pop
xchg
insb
pop
pop
imul
popa
sbb
rcr
mov
shl
and
sbb
add
mov
xchg
repnz
xor
jmp
push
xchg
xor
fdivrs
cltd
sahf
mov
cmp
push
pop
sbb
sbb
jnp
jo
jp
push
xchg
push
scas
dec
inc
mov
add
or
pop
outsb
push
cmpsb
lods
arpl
jge
dec
in
sub
lcall
xor
push
jne
jbe
or
or
pop
repz
mov
lods
push
imul
sub
jmp
negb
push
mov
pop
cwtl
mov
inc
mov
jnp
loopne
lods
popf
pop
push
or
mov
mov
mov
inc
sbb
loop
jecxz
inc
inc
in
scas
push
mov
mov
dec
jb
push
jns
in
loopne
adc
jno
add
mov
lcall
in
jmp
fadds
out
and
cld
jle
shll
xlat
jno
cld
jae
loopne,pn
pop
das
out
jl
jns
adc
pop
mov
sbb
xchg
call
mov
fsubp
sub
mov
dec
test
fidivl
inc
pop
xor
dec
test
repnz
push
loop
fadd
cli
xchg
test
rcr
subl
mov
pop
add
dec
popf
lret
xchg
inc
das
and
jge
adc
sbbb
test
jb
fcmovnbe
dec
sub
stos
push
out
outsb
rolb
pop
mov
pop
push
clc
pushl
xor
add
fwait
push
and
icebp
pop
mov
and
xchg
sbb
adc
xorb
ja
adc
push
cltd
leave
pop
jmp
ret
add
popa
jns
cwtl
sbb
mov
fistpl
push
push
push
pop
push
les
daa
fdivrs
inc
js
test
sbb
sbb
cli
mov
out
jp
cwtl
test
lea
jbe
push
push
xchg
shrb
ds
sbb
xchg
mov
sbb
movsl
stos
test
push
adc
ficoml
xor
and
xchg
cmp
jp
retw
mov
test
lea
mov
rol
data16
jns
int3
cmp
xchg
cmp
mov
aaa
xchg
jg
filds
incl
lret
mov
in
lahf
nop
mov
mov
pop
jns
test
aas
jp
in
ret
cs
sar
jmp
cmpsb
and
push
and
adc
sub
cs
cmp
mov
jae
cmp
dec
mov
repnz
sub
fdivs
scas
and
add
loop
push
mov
testb
lods
mov
sbb
mov
jl
cmp
lret
rcrb
cmp
mov
shll
push
mov
test
clc
ret
scas
leave
mov
shll
jp
pop
test
cmpsl
aam
std
mov
in
call
lret
dec
or
xor
cmp
cmp
out
into
pop
add
addr16
pop
sub
das
sub
imul
xor
fwait
subl
adc
push
sbb
mov
xchg
mov
sub
inc
mov
rcrb
push
jmp
mov
rclb
pop
shr
pop
pop
out
pop
adc
or
int
cmpsl
fcoms
test
lret
add
sub
mov
cmpsl
movsb
aas
xchg
addl
sar
cmp
daa
xchg
dec
cs
cmpsb
aaa
insb
dec
cmc
fmuls
jo
out
cmp
outsb
popa
jl
push
ret
xor
mov
xor
push
add
or
dec
and
inc
cld
ret
push
jle
cmp
js
adc
push
mov
roll
mov
pop
cmc
xchg
mov
push
pop
lock
imul
in
mov
push
mov
lcall
cltd
out
jge
lahf
add
daa
push
out
adc
or
stos
pop
lods
pop
jge
mov
xchg
sbb
mov
aaa
shll
fistl
sub
jbe
das
pusha
sbb
es
outsl
ja
or
insb
pop
add
mov
ds
jp
or
sbb
jecxz
dec
adc
mov
mov
adc
pop
xchg
test
movsb
or
adc
out
xor
cmp
outsb
jns
jb
scas
sbb
inc
lahf
imul
sahf
mov
and
mov
dec
scas
dec
cld
sub
mov
mov
jbe
mov
hlt
pop
or
ds
arpl
scas
stc
int3
and
jne
popa
cmp
cmp
cmp
scas
stos
les
aaa
add
add
add
mov
pop
out
das
ret
cmp
sub
insb
mov
imul
xor
jp
or
dec
aam
fs
aas
in
xor
call
xor
mov
mov
or
mov
jmp
test
or
ds
cmpl
dec
mov
je
shrb
dec
adc
arpl
jle
cltd
dec
adc
rcr
sbb
mov
xchg
xor
adc
ret
popa
push
pusha
insl
test
jle
pop
pop
mov
insl
pop
mov
mov
es
in
or
frstor
lret
cmp
jmp
inc
js
inc
push
es
pop
add
mov
push
adc
testb
aas
cmp
cmp
icebp
cmp
xchg
clc
cli
ljmp
dec
jo
and
adc
cmp
rcll
icebp
push
adc
xchg
adc
bswap
sahf
and
insb
data16
push
lock
fidivrl
repnz
mov
scas
ficoms
push
les
mov
stc
jp
ret
mov
enter
cmp
int3
xchg
pop
push
push
push
je
pop
imul
bound
sahf
lcall
add
outsl
mov
out
es
xchg
sub
or
ficomps
pushf
mov
xchg
dec
and
add
add
pop
mov
adc
inc
stos
mov
enter
addr16
je
cltd
pop
mov
add
call
mov
cmpsl
mov
jbe
in
pop
popf
fstpl
mov
adc
cmp
mov
mov
int3
sub
nop
cltd
movsl
xchg
cmp
imul
jne
xchg
push
scas
and
sbb
out
daa
jne
mov
push
jge
pop
ror
pop
hlt
movsb
popa
test
in
neg
pop
inc
inc
xchg
dec
mov
jo
add
ror
es
gs
pop
push
int
int
shlb
imul
and
flds
lret
dec
stc
xor
inc
dec
jmp
movsb
aam
mov
jmp
jge
and
loop
test
mov
mov
mov
push
ss
enter
fstps
enter
inc
popw
inc
bnd
negb
cmpsb
rorb
loopne
test
jmp
push
xchg
pop
sahf
sub
in
sbb
lret
ja
xor
xchg
loopne
scas
jno
in
fldcw
sub
mov
cld
cmp
es
mov
int3
aas
test
out
das
int
mov
jmp
add
shll
leave
mov
pop
bts
loope
pop
lahf
out
shl
xor
cmc
and
jl
int3
add
insb
jge
xor
xchg
cld
lret
stos
mov
mov
mov
add
dec
jp
push
adc
cmp
shll
xor
lea
sahf
xchg
push
je
pushf
add
jbe
sub
or
lcall
outsb
or
push
insl
xor
dec
sar
mov
jg
cmp
cmpsl
mov
loop
mov
jo
insb
lcall
inc
mov
adc
outsb
lds
sub
arpl
mov
insb
in
pushf
dec
mov
xor
and
inc
push
das
mov
mov
sar
mov
and
xor
aaa
and
dec
in
xchg
pop
loopne
lods
jge
jl
fwait
and
jbe
jno
jl
cmpsb
mov
or
sahf
movb
out
cmc
aas
sbb
adc
outsb
push
stos
jne
mov
push
arpl
scas
leave
mov
sti
ret
jbe
xchg
or
jbe
xor
push
or
clc
cmpxchg
mov
mov
stos
xchg
pop
adc
and
mov
cmc
out
xchg
aas
xor
add
push
cmpsb
cltd
inc
aam
adc
cmc
rcrl
pop
ljmp
pop
and
shlb
xor
lds
aaa
jb
pusha
lea
leave
cmp
stc
into
cmp
outsl
pop
sub
jno
mov
in
pop
int
aam
mov
leave
cmp
hlt
subb
loopne
cmp
fildll
roll
pop
sub
xchg
fldt
adc
push
in
add
rclb
xchg
mov
xchg
add
xchg
popa
inc
call
pop
lods
mov
ret
icebp
mov
icebp
cmc
cmpsb
in
or
mov
sub
ja
mov
rorb
adc
cmp
jmp
push
mov
outsb
mov
lods
pop
sub
mov
jae
int3
addr16
mov
insb
lods
add
xor
dec
sub
in
xchg
and
pop
imul
add
xchg
int3
mov
xlat
add
pop
mov
insb
push
or
sub
xchg
and
pop
mov
inc
aad
pop
sahf
fists
call
mov
dec
mov
lods
mov
scas
dec
push
and
sti
sub
test
stc
dec
xchg
adc
cmpsb
test
dec
jecxz
sub
lock
xchg
in
mov
out
movups
jecxz
mov
les
call
sbb
enter
jmp
in
push
push
cmp
xchg
insb
js
push
and
adc
adc
push
inc
lods
adc
xchg
scas
adc
lret
mov
xchg
inc
aas
push
inc
add
popa
out
dec
add
imul
push
pop
mov
cmp
loop
push
pop
dec
sarb
xor
stc
in
or
push
jb
inc
shlb
rclb
ss
aaa
xor
jns
adc
clc
out
popf
pop
mov
xchg
xchg
jnp
leave
in
mov
call
jno
sub
xchg
inc
faddl
mov
sub
pushf
push
lret
pop
pushf
xchg
roll
pop
or
mov
adc
mov
mov
cli
inc
mov
ret
loop
dec
cs
pusha
les
notl
mov
shlb
jmp
out
mov
xchg
cmc
movsl
popf
test
add
jno
mov
insb
loope
push
test
lock
rcrb
sti
mov
sub
xor
mov
das
inc
std
pop
rep
sarb
mov
shrl
push
test
jl
mov
mov
mov
scas
je
lret
push
xor
adc
pop
loopne
xchg
dec
adc
rcr
cmpsb
pop
popa
pop
in
adc
dec
cmp
loopne
orl
xorps
sub
add
xchg
and
lahf
into
fnstsw
mov
into
inc
out
cmp
mov
dec
jg
lret
jne
dec
int3
mov
addr16
inc
add
mov
test
xchg
pop
mov
jl
and
cmc
jg
mov
pop
mov
rcr
pushl
fsubs
pop
mov
nop
push
dec
xchg
adc
pop
mov
dec
fwait
push
sub
bound
imul
push
pop
add
rcrl
outsl
mov
mov
stos
pop
and
xor
cwtl
adc
xchg
sub
in
and
push
mov
out
pop
rolb
mov
mov
int3
and
jmp
test
jp
into
pop
pop
and
cmp
in
cmpsb
mov
hlt
mov
std
mov
addr16
inc
outsl
loope
std
test
jecxz
xor
jle
lods
dec
and
shlb
mov
add
test
jns
sub
out
sub
dec
add
sbb
sub
adcl
and
addr16
sbb
jmp
inc
cmp
lea
sbb
dec
or
sbb
or
les
pop
cmp
addr16
lods
sahf
sub
dec
ret
fcomps
fs
inc
stc
cli
sbb
mov
cmp
pop
push
popa
fs
push
cltd
push
es
jno
pusha
cmp
fimuls
sub
jle
pop
test
sub
mov
in
mov
or
lock
inc
mov
mov
fwait
out
cmp
dec
into
xor
xchg
add
outsl
insb
addr16
xlat
mov
hlt
movsb
das
or
xor
faddl
and
xchg
cmp
mov
dec
mov
pusha
xchg
mov
data16
mov
pop
sti
xchg
lods
test
jno
int3
out
insb
pop
add
cs
rcrl
xchg
sahf
cvtps2pd
push
lret
jge
fwait
add
popa
ljmp
jnp
stos
cmp
mov
xor
mov
scas
cmp
aad
in
sar
arpl
inc
mov
mov
cmp
in
jle
ficompl
mov
ret
dec
dec
test
test
xor
das
aaa
and
dec
mov
mov
es
cmp
mov
movsl
push
jnp
push
xchg
aam
ret
pop
pop
cmp
in
cld
fdivs
jns
lea
dec
mov
mov
fstl
ljmp
rorb
xor
mov
cmp
repnz
fs
pop
and
xor
adc
outsl
cmp
cmpsb
jl
stc
mov
mov
cmp
pop
pop
mov
mov
or
les
loop
jle
pusha
shrl
stos
mov
fldcw
sub
or
aam
test
push
jb
roll
sarb
aad
mov
popf
and
and
mov
bound
cmp
and
inc
pop
add
add
cmp
push
sti
sbb
icebp
dec
push
fisubrs
mov
lock
outsb
daa
adc
mov
inc
and
fimull
es
test
jp
scas
inc
and
fwait
scas
js
outsl
cmp
dec
stos
mov
push
jne
xchg
test
pop
xchg
jo
cmp
popf
mov
mov
pop
push
adc
lock
fisttpl
lods
dec
adc
insb
fmuls
adc
out
inc
xchg
popa
pop
or
cmpl
xorb
mov
xchg
lds
cmp
sbb
add
ds
cld
push
loop
mov
add
xor
decb
lea
out
inc
push
jne
out
sub
cmp
push
dec
sub
xor
lret
roll
cmp
add
xor
adc
sub
sub
cmp
out
pop
push
rol
mov
xchg
popf
insb
xchg
ds
xor
inc
inc
push
xor
jns
add
pop
sbbl
cmp
cmpl
mov
mov
sbb
and
cmp
dec
dec
jae
adc
andb
sub
bound
je
adc
lock
cmpl
mov
fucomip
cltd
je
cltd
int
out
mov
in
lods
ss
out
jno
jo
mov
lods
and
jp
mov
jnp
hlt
adc
aaa
fiadds
inc
ret
shll
loop
int
clc
xchg
mov
inc
adc
mov
repz
pop
js
inc
mov
xor
mov
pop
roll
sbb
inc
movsl
jecxz
test
add
leave
aaa
mov
or
leave
push
adc
pushf
loope
cltd
pop
orb
insb
jle
mov
adc
mov
out
aas
out
fadd
cmp
aad
stc
xor
mov
cmp
add
in
out
add
out
sti
arpl
fwait
sbb
fs
dec
xchg
out
sarl
xor
leave
jns
push
xor
pop
jb
dec
mov
jae
mov
les
aad
pop
push
jl
jbe
mov
or
stos
mov
sub
out
xchg
sub
add
xchg
cli
jg
mov
jae
jno
inc
inc
sbb
push
scas
inc
pop
or
mov
sub
sbb
xchg
mov
adc
push
into
xor
mov
loopne
loop
popf
xchg
into
mov
and
mov
mov
xchg
ss
mov
xlat
imul
pop
mov
stos
enter
mov
add
repz
push
and
shll
rorl
shlb
sub
les
or
dec
add
sbb
mov
inc
test
or
jge
jae
out
cld
out
lods
and
add
cmp
push
int
decl
jp
fstpl
jle
dec
dec
hlt
push
adc
sbb
shr
mov
or
fwait
shrb
xor
fisttps
sbb
out
in
dec
dec
scas
je
out
mov
sub
push
movsb
xor
ljmp
mov
dec
faddp
es
sub
pop
fstpt
add
mov
movsl
pop
loope
mov
xor
in
push
add
int
aaa
fistps
hlt
rcl
and
daa
mov
pushf
or
adc
pop
ret
std
enter
jl
insb
adc
sub
lds
jo
sbb
mov
push
cmc
sbb
sub
pop
test
push
shrl
fsts
mov
stos
test
add
xor
fsubl
jno
dec
and
fcmovne
std
das
mov
adc
mov
rolb
int
xor
mov
cmp
fwait
sahf
and
fcoms
jnp
or
mov
inc
orl
mov
push
in
imul
cmp
out
outsl
out
add
push
movsb
lcall
sub
and
inc
inc
add
ret
stc
and
imulb
push
and
ja
out
bound
sub
dec
jmp
scas
daa
or
mov
ss
sub
in
sbbb
sti
cld
mov
shl
mov
adc
and
mov
int3
ljmp
sbb
push
dec
or
rcl
xor
mov
sahf
sub
scas
push
sbb
push
fldenv
stc
dec
mov
cbtw
xchg
mov
push
cmc
sbb
push
in
cltd
pop
inc
scas
loope
xor
sbb
iret
fsubs
push
movsl
ds
adcb
lock
xlat
push
dec
lcall
or
inc
xor
out
out
pop
push
test
int3
pop
cld
lds
popf
stc
movzbl
je
sub
jnp
adc
and
int
sub
or
xchg
pop
sbb
sbb
add
stos
mov
jo
xor
xchg
xorl
lods
and
cltd
mov
jnp
lret
push
xlat
stc
out
imull
jo
fs
pop
mov
mov
vpsllq
stc
es
xor
cmpsb
inc
cs
and
xchg
mov
mov
add
cld
scas
rcrb
fiadds
or
test
es
cmpsl
je
jbe
add
popa
mov
sbb
add
jmp
out
cli
or
dec
sub
pop
pop
jae
movsb
ret
pop
fsubrl
add
imul
sub
push
adc
push
jmp
call
pop
fisubrs
outsb
inc
nop
mov
push
rcll
jne
orb
mov
sub
or
add
xor
sbb
push
addb
ljmp
cwtl
fisttps
fsts
sub
pop
rcrl
outsl
mov
xchg
rcll
rcl
cmp
sahf
xchg
faddl
mov
and
inc
hlt
push
pop
jb
jns
mov
jmp
les
or
jo
sub
xchg
xor
inc
loope
outsb
or
loop
xchg
outsb
jae
pop
xchg
mov
sub
out
or
aaa
xchg
jnp
xacquire
sbb
inc
insl
in
movsb
lcall
sbb
mov
mov
enter
inc
ficoml
imul
repz
repz
dec
mov
cmp
and
xchg
pop
xchg
je
xchg
adc
push
mov
repnz
les
sub
sarl
sti
push
lods
xchg
push
jecxz
push
enter
add
push
iret
jge
or
or
push
sbb
insl
jns
arpl
sbb
cs
popf
pop
popa
shrl
adc
dec
jb
inc
mov
pop
mov
adc
scas
lock
fdivr
and
xchg
out
icebp
mov
mov
xor
pop
jle
clc
sub
mov
cmp
jns
add
adcl
fsubl
aad
dec
out
stos
jne
adc
out
lret
insb
fsts
adc
sbb
adc
mov
jge
xchg
fnstenv
mov
jle
repnz
dec
imul
outsb
fcom
in
fcoml
lret
aaa
insb
andl
sti
xchg
sub
es
pop
xchg
iret
jp
xor
fstl
movsb
popa
cltd
outsl
imul
inc
sub
fnstcw
sub
outsl
insb
mov
std
jnp
out
add
rorb
mov
lods
int3
mov
loop
lock
pop
and
xchg
ficompl
in
ss
xchg
jne
scas
mov
out
sti
icebp
mov
jne
scas
inc
inc
xchg
sahf
cmp
dec
adc
lret
stos
dec
pushf
stc
xor
xchg
mov
add
adc
jmp
dec
rcl
mull
cmpsl
xor
xlat
pop
dec
dec
sbb
jecxz
and
mov
movb
pop
mov
sbb
leave
jle
stos
or
xor
xchg
in
sub
jl
clc
mov
xchg
mov
insl
out
lahf
mull
clc
mov
iret
stc
and
int
pop
and
xor
lods
hlt
push
aaa
scas
mov
test
daa
pushf
push
out
fstps
add
push
sbbl
adc
ss
leave
imul
dec
pop
mov
lret
mov
mov
jge
mov
test
in
pusha
cmp
inc
cld
rcrl
lock
aas
jno
dec
dec
orb
mov
push
imul
sbb
fwait
xor
test
cmp
lock
sub
repnz
or
cmp
loopne
or
cmc
mov
xor
loopne
arpl
fs
scas
adc
add
sub
ljmp
mov
push
xchg
hlt
dec
cwtl
xlat
xor
aaa
hlt
push
push
xchg
pushf
xor
inc
inc
hlt
mov
rorb
inc
shll
lea
jae
jne
out
add
cmc
mov
gs
loopne
xchg
shlb
jnp
bound
dec
dec
inc
std
lds
popa
movsl
je
xchg
outsb
mov
es
out
scas
lods
loope
int3
jae
cmpsl
inc
adc
adc
inc
lods
or
lret
hlt
popf
fdiv
mov
fs
jl
jo
sbb
add
pop
cld
xchg
in
stos
dec
jne
cwtl
es
xchg
movsb
xchg
lahf
adc
mov
fimull
mov
aam
jne
push
arpl
mov
or
jbe,pt
jecxz
push
std
cmpsb
das
imul
arpl
jne
mov
push
testb
inc
nop
dec
xorb
sub
mov
jmp
xor
pop
les
imul
sarb
jo
stc
cmpsl
enter
mov
notl
insl
xchg
and
cld
out
push
inc
mov
test
call
jns
jecxz
jecxz
mov
push
test
or
ja
pop
das
cs
cs
out
sub
cmp
xor
push
add
std
adc
mov
lods
pop
ror
loopne
cmp
and
inc
push
int
xchg
scas
inc
push
pop
and
fstl
loopne
pop
or
mov
mov
clc
pop
mov
sub
sbb
mov
dec
cmp
mov
dec
mov
push
loopne
shll
inc
mov
repz
test
vpmulhuw
and
rcrl
and
pop
or
dec
out
add
fwait
lcall
sbbb
enter
mov
push
add
out
xchg
lret
mov
sahf
je
and
or
ret
in
cmp
dec
mov
push
sbb
sbb
jl
jnp
imul
push
test
xchg
jp
test
adc
imul
cmp
xchg
pop
push
mov
jnp
pop
lea
xlat
jge
adc
mov
scas
sub
ja
out
stos
pop
ljmp
lcall
pop
inc
ss
fcoml
mov
jnp
inc
loopne
les
dec
mov
les
int
mov
jg
divl
inc
cmp
or
fs
dec
cmpsl
xor
shrl
in
inc
cmp
cwtl
pop
outsb
jae
rcrl
icebp
xor
cli
xor
pop
mov
nop
dec
jl
inc
or
cmp
push
inc
sbb
push
cltd
xchg
mov
mov
int3
fdivrs
inc
ljmp
add
cmp
mov
add
int
iret
ds
sbb
pop
test
or
test
inc
jecxz
push
inc
pop
mov
fisttpl
jne
and
mov
sahf
popf
xchg
std
sti
or
sub
mov
scas
mov
inc
cmp
adc
popa
xchg
cmpsb
xor
into
mov
sub
xchg
push
jle
and
fs
pop
push
adc
insl
outsb
sub
imul
sbb
fstl
or
cltd
roll
repz
ror
sbb
cmp
push
ret
jno
inc
test
movsb
mov
loop
inc
cli
in
icebp
and
fnstenv
jae
sahf
pop
pop
out
add
pusha
xchg
popf
sub
loopne
adc
mov
sbb
gs
inc
inc
or
mov
test
push
pop
or
popa
add
mov
push
shrl
divb
xor
mov
push
loop
dec
inc
loope
add
cmp
jp
out
xchg
mov
stc
xor
xor
clc
lcall
cmp
andl
push
cmp
adc
lcall
ja
and
jns
daa
call
lds
and
ret
into
arpl
lahf
or
sub
adc
and
cld
xchg
jecxz
aad
mov
push
or
lds
jecxz
dec
ficoml
jecxz
push
or
xchg
loop
bound
add
mov
sbb
xor
inc
sub
pop
push
iret
cmc
mov
insb
mov
sti
mov
cmpsb
mov
call
xor
fs
es
pop
add
in
fcoms
pop
rorb
push
mov
cmpl
pusha
lods
vmread
mov
arpl
stos
sbb
push
inc
outsl
push
push
jo
imul
loope,pt
and
pusha
push
xchg
fwait
cmpsl
inc
or
pop
sub
pop
or
aam
sub
stos
or
cs
rolb
and
test
push
ds
xchg
sub
pop
jo
pop
divb
and
pop
popf
movsl
pop
xlat
jmp
sbb
test
mov
pop
cs
push
aad
cmp
scas
aam
ret
push
xor
sub
lods
adc
push
rcr
pop
shrl
inc
xlat
icebp
push
cmpsl
bound
and
rcr
sarl
mov
mov
jl
das
sub
xor
jmp
scas
ljmp
mov
aad
push
andl
fwait
aaa
vmwrite
jge
bound
sbb
sbb
in
and
pusha
sub
and
mov
sub
jno
mov
shrl
xchg
mov
jbe
mov
int3
sub
cmc
push
mov
arpl
mov
pusha
sbb
and
push
test
add
cltd
jle
fwait
cld
inc
jae
cmp
sub
popf
nop
pop
xor
inc
add
mov
out
dec
or
sti
into
cmp
lcall
mov
add
mov
repnz
sahf
push
lcall
imulb
int3
aam
out
pop
sarl
arpl
fistl
in
into
push
adc
repz
faddl
cmp
inc
jno
add
and
hlt
pop
dec
add
mov
out
adc
push
cmp
xchg
sti
mov
dec
fisubl
inc
adc
sti
jle
jge
sarb
and
clc
dec
incl
or
enter
in
bound
and
xchg
xchg
popa
in
lods
pop
daa
sbb
xchg
inc
xchg
js
mov
and
mov
shl
sbb
bound
loopne
in
sahf
js
cmpsb
enter
test
sbbb
pop
sub
xchg
sarl
std
adc
mov
mov
and
call
test
jge
int
je
dec
mov
xchg
xchg
cmpsl
negl
inc
gs
inc
jae
out
xchg
rolb
lods
inc
and
ficoml
fbld
enter
outsl
ljmp
mov
dec
inc
xor
mov
add
xor
mov
cltd
mov
ljmp
pop
cltd
fnstcw
xor
arpl
scas
outsl
add
les
pop
repz
lods
stc
ret
sbb
fwait
push
lret
xchg
fwait
rcr
jb
or
mov
add
add
subl
sahf
arpl
leave
and
sub
push
pop
shll
call
jle
loop
lahf
sbb
mov
sbb
loopne
sub
in
cmp
and
inc
stc
imul
inc
js
or
pop
stos
add
adc
xchg
adc
pop
lret
cs
loopne
rorb
out
dec
add
in
daa
pop
ss
popl
ret
mov
lods
repz
test
sub
pop
pop
mov
cwtl
mov
push
xchg
imul
clc
mov
push
in
repz
sahf
loope
adc
shlb
stc
add
pop
mov
scas
jl
pop
adc
sub
pusha
dec
cmpsl
adcl
in
and
push
jnp
mov
ret
ret
mov
aaa
es
inc
xchg
shl
int
mov
dec
mov
sub
ret
jne
rclb
push
fcom
xchg
inc
shlb
pusha
stos
mov
pop
lahf
mov
or
mov
sub
mov
in
ret
mov
jns
pop
cwtl
jmp
in
cld
pop
push
or
add
push
push
cmc
outsl
sbb
mov
rorb
loope
mov
inc
test
outsl
icebp
aaa
mov
jns
xchg
adc
lret
jmp
loop
ja
cmp
daa
sub
fsubs
imul
testb
cmpsl
fdivl
mov
mov
add
or
into
mov
loop
repz
bound
icebp
ret
hlt
add
lret
cmpsl
imul
mov
adc
adc
ret
add
and
divb
sarl
push
fs
mov
sbb
lods
dec
mov
lods
ljmp
xlat
mov
aad
cmp
add
mov
adc
ja
sub
jecxz
push
enter
add
outsl
cs
out
sbb
aad
les
repz
mov
aas
push
xchg
add
jo
mov
pop
inc
and
call
shll
xor
sub
mov
scas
pop
jle
fmull
gs
mov
loopne
mov
sti
inc
jecxz
xchg
fbstp
shl
leave
dec
test
cmp
mov
xor
cmp
mov
mov
xor
fimull
ja
xchg
lret
jmp
les
test
shll
push
movsb
sub
dec
xor
js
jl
inc
rorl
lods
jno
inc
dec
jae
ret
xchg
or
push
lds
hlt
test
xchg
push
notl
xor
sub
flds
adc
jl
das
nop
popa
js
scas
inc
cmp
mov
outsl
sarb
insb
inc
imul
test
xchg
xchg
setg
cmpsl
sbb
test
xor
dec
divl
in
dec
out
adc
jmp
mov
pop
and
xor
btr
leave
fdiv
xor
pop
and
adc
mov
push
ret
in
stos
xlat
dec
fidivrs
sbb
cmc
arpl
std
insl
aad
sub
jecxz
arpl
push
nop
ss
lcall
pop
loope
sbb
xchg
lods
cmp
shrb
daa
mov
lock
xchg
jne
inc
dec
adc
mov
outsb
and
je
pop
sub
insl
jg
mov
ja
imul
sub
das
ljmp
stos
sub
icebp
jns
test
data16
mov
decb
lds
roll
mov
xchg
popa
out
into
adc
dec
orl
aaa
cmpsl
sbb
xchg
pop
jbe
pop
pop
mulb
xor
std
lds
xor
iret
insl
stc
xchg
andl
cmp
fidivl
call
add
stos
pushl
pause
mov
filds
jecxz
mov
mov
mov
nop
fsts
sbb
adc
inc
cmp
xlat
ss
dec
repz
lods
pop
shrl
sets
jne
mov
out
inc
xchg
sub
dec
push
test
ret
jae
imul
test
inc
push
push
into
inc
lcall
pop
outsb
jbe
fdiv
test
xchg
jnp
cmpsl
iret
loope
rorl
imulb
cmp
inc
inc
xor
sub
sbb
mov
add
imul
jp
test
jne
jmp
inc
dec
add
stos
and
or
loop
mov
and
jl
rorb
addr16
and
push
in
sub
loop
mov
and
or
ss
xor
mov
mov
aad
and
loope
pop
cmp
js
hlt
sbb
push
bound
pop
stc
in
pusha
add
inc
mov
mov
push
lods
xorb
cmp
xchg
inc
xchg
lret
jo
imulb
pop
sti
rolb
or
pop
hlt
dec
out
cmc
test
jae
popf
mov
xchg
int
daa
xchg
pop
mov
test
inc
xor
push
in
ljmp
push
push
pop
idivb
sbb
fbstp
sub
jmp
test
jge
push
dec
push
int
in
test
negb
jne
fsubs
mov
pushw
aad
fcoms
cs
insb
pop
push
aad
xor
inc
or
repnz
dec
xchg
loop
mov
inc
ret
xchg
mov
xchg
test
imul
cltd
fisttpl
sti
test
jo
scas
mov
into
stos
pop
into
aad
into
roll
mov
add
testb
dec
enter
cmp
cld
addb
pop
gs
fiaddl
add
loop
fsubrl
jp
mov
lcall
fidivl
les
loop
in
cmp
mov
lcall
push
popf
pop
mov
loop
mov
pop
das
push
add
and
mov
or
lret
repz
out
sub
cmp
ret
and
adc
or
or
push
lods
cmp
jle
push
pop
inc
fcoml
cmp
popa
neg
adc
call
scas
xchg
pop
pop
push
xchg
gs
loopne
xchg
shll
ffreep
les
rorb
ljmp
popf
into
xor
xchg
pop
mov
mov
fisttpll
leave
insl
add
add
popf
aam
sub
jg
addr16
jnp
outsl
or
sbb
push
shrb
jmp
mov
leave
aas
jae
pop
lahf
pop
hlt
mov
js
mov
pop
xchg
mov
pop
stos
pop
adc
ja
lret
dec
pop
mov
sbb
push
mov
sub
data16
mov
test
mov
outsl
xor
xchg
pop
mov
andl
mov
and
sbb
pop
pop
lods
iret
movsb
lret
stos
mov
mov
test
pushf
jp
and
push
xchg
push
push
daa
fsubs
push
push
fs
imulb
xchg
jle
mov
iret
or
mov
and
mov
mov
sbb
sbb
mov
ds
fnstenv
aas
adc
push
xlat
test
cmp
es
cli
inc
sub
sub
mov
andb
adc
dec
xor
jg
out
mov
add
addl
pop
stc
fsubrp
mov
aam
mov
sbb
inc
and
sub
and
fs
dec
rolb
push
mov
adc
pop
mov
dec
out
pop
mov
push
sub
pop
stc
into
insb
mov
sub
pushf
idivb
xchg
adc
loope
lret
sarl
xchg
popa
dec
mov
ds
adc
daa
push
outsl
ljmp
negb
push
fistps
sub
ds
pop
negb
add
push
xor
dec
dec
fs
push
clc
pop
pop
dec
pop
scas
sbb
ffree
pop
cmp
outsl
sbbb
addr16
or
xor
loopne
push
jbe
cmp
ja
adc
xchg
xorb
jns
icebp
je
or
test
inc
call
clc
es
lahf
inc
mov
pop
movsl
repz
cmp
push
enter
adc
inc
pop
fiadds
lcall
xlat
cmp
push
jp
sub
pop
std
jmp
cld
xchg
xor
mov
push
fidivs
xchg
mov
sahf
pushf
push
mov
stos
imul
jae
add
pop
out
fidivs
negl
dec
xchg
pop
insb
pop
jne
lea
lock
movsl
loopne
syscall
out
mov
test
mov
xchg
fisubl
pop
js
push
mov
push
fwait
rcr
rol
sti
add
shll
push
and
jmp
add
add
cs
imul
dec
filds
les
sbb
popf
leave
dec
push
out
outsl
ud2
data16
dec
and
push
and
dec
add
fidivrs
clc
jg
cli
jl
insl
sub
movsl
inc
lret
outsb
aad
pop
int
push
scas
push
jp
ficoml
pop
and
es
sahf
subl
mov
sti
jp
loopne
divl
mov
adc
js
fdivrs
shl
xor
pop
push
insl
jmp
adc
iret
imul
rorb
incb
lret
pop
inc
dec
lds
rolb
popf
stos
scas
scas
ffree
sub
add
dec
inc
pop
call
test
jge
popf
in
xchg
or
stos
mov
fcompl
clc
sahf
cmp
mov
scas
jecxz
movsl
inc
ret
imul
sbb
add
rcr
mov
sbb
pop
daa
mov
pop
jo
ffreep
mov
jno
in
aas
imul
cmp
test
sbb
aas
cmc
insl
addr16
pop
ljmp
or
ss
imul
out
inc
push
mov
call
pop
mov
inc
and
outsl
and
das
add
push
mov
pop
and
lds
xor
mov
in
cwtl
mov
mov
jmp
push
mov
shll
ror
test
mov
mov
inc
cmp
shlb
inc
pop
ds
push
in
mov
push
divb
sahf
push
fistps
lcall
pop
and
push
mov
addb
cwtl
and
and
test
nop
sub
ljmp
push
xchg
adc
pop
js
push
jbe
out
mov
inc
mov
and
xchg
or
add
inc
lahf
xchg
xchg
aas
je
pop
shl
mov
loopne
les
test
mov
sbb
nop
sbb
dec
clc
cltd
in
mov
ja
add
pop
jle
dec
cs
js
rol
mov
dec
popa
jg
mov
aam
fwait
je
or
sub
push
stos
xor
inc
mov
pop
mov
jae
jns
movsb
fidivrs
pop
divl
imul
ret
inc
add
push
mov
and
out
xchg
movsl
ja
add
mov
arpl
movsb
daa
out
adc
jg
ret
idivl
sub
fidivrs
sub
fcmovbe
repz
jecxz
sub
add
xchg
jmp
in
data16
dec
jg
inc
adc
add
xchg
out
pushf
or
in
call
repz
sbbl
stos
jl
and
xchg
xor
dec
push
stc
andl
repnz
cmp
xor
or
shl
mov
ds
cmp
jl
dec
in
dec
jge
sahf
outsl
sub
mov
insl
test
push
sbb
jbe
les
pop
pop
je
aaa
sar
pop
popf
std
mov
cmpsb
add
ja
jmp
pop
adc
and
sbb
clc
mov
in
adcl
push
cld
mov
shlb
imul
xchg
jbe
pop
sub
out
scas
scas
mov
addr16
push
scas
xor
outsl
imul
lods
call
or
cmp
jl
dec
adc
dec
sti
sarb
shll
adc
mov
mov
cli
xor
pop
data16
fidivs
pop
adc
sbb
dec
test
or
and
lcall
adc
inc
mov
into
mov
push
lea
ss
cmp
lea
in
xchg
xchg
add
clc
jmp
loope
xor
mov
adc
sti
mov
enter
mov
xchg
cmp
xor
sbb
mov
jle
imulb
imul
lret
mov
jecxz
or
mov
in
imul
lcall
cwtl
mov
les
push
nop
and
cli
xor
cmp
fnstcw
iret
sbb
mov
push
add
nop
dec
test
add
xchg
aad
push
movsl
adcb
cs
jo
mov
mov
scas
movsb
mov
and
dec
jne
jns
or
or
shr
inc
stos
fnstsw
pop
inc
std
lret
xor
bound
scas
movl
jge
fs
jp
fisubl
mov
sub
jae
jbe
test
imul
loopne
dec
mov
lea
push
inc
mov
dec
lods
xor
bound
lea
imul
mov
repz
leave
add
mov
mov
jge
adcb
pop
or
adc
clc
dec
xchg
out
pop
dec
sub
ret
call
outsl
inc
leave
notl
mov
inc
sbb
jbe
mov
xchg
mov
mov
fistpll
mov
sub
add
movsb
jle
pop
xor
lret
inc
mov
push
lods
xchg
and
lahf
icebp
and
rorl
mov
ss
mov
push
je
mov
sub
mov
jbe
mov
mov
ss
andl
cmp
xor
orl
aas
add
xchg
mov
xor
leave
notb
jae
loop
sub
mov
mov
push
push
ss
mov
int3
shl
ja
push
leave
mov
dec
add
loop
rorb
mov
push
cmp
xchg
imulb
push
lret
or
mov
adc
aaa
pop
inc
mov
mov
shlb
add
mov
adc
add
jg
and
inc
xchg
hlt
push
adcl
and
int3
pop
xchg
cmp
jle
push
mov
pop
push
movsb
std
subb
xchg
or
cmc
push
lods
mov
or
pop
lods
aam
push
pop
daa
bound
lret
inc
mov
mov
xor
jp
pop
js
iret
add
lock
push
in
mov
fsubr
cmc
sub
mov
testl
cld
pop
cmp
mov
jnp
xor
inc
movsb
andl
pusha
hlt
test
mov
add
push
movsl
xorb
inc
mov
flds
rorb
jg
aaa
mov
mov
in
mov
and
cmp
sub
add
es
pop
jp
dec
sbb
cmp
aam
mov
jmp
insl
jne
les
ljmp
je
jb
pop
mov
ret
push
push
pop
mov
lret
add
sbb
xchg
mov
lea
xor
sub
jne
scas
pop
dec
pop
ficoml
inc
lcall
stc
inc
inc
inc
sub
dec
int3
jno
movsl
out
popa
add
pop
sahf
iret
cld
int
mov
icebp
jbe
and
mul
sub
fdivl
xchg
ljmp
fsubp
je
mov
mov
cs
inc
loop
jae
push
xor
xchg
pop
mov
sbb
out
aaa
mov
rcrl
in
ss
mov
sahf
jmp
or
mov
and
sbb
or
push
mov
jne
sub
xorl
movsl
push
lcall
or
add
pop
xor
stos
scas
lods
rolb
xchg
cmc
test
ss
add
mov
dec
inc
mov
mov
ret
nop
stos
lock
popf
mov
push
movsl
mov
adc
jns
mov
outsb
jno
jb
mov
outsb
xor
jb
fisubs
dec
or
bound
fiadds
pusha
inc
aam
lcall
lea
pop
idiv
je
hlt
aad
push
push
and
call
inc
xchg
or
mov
fists
inc
inc
adc
outsb
fdivs
dec
mov
aaa
outsb
mov
push
aam
xchg
rcrl
cli
lods
dec
inc
push
in
lea
xor
mul
mov
cmp
mov
addr16
inc
movsl
cmp
mov
fmull
fiadds
sbb
test
icebp
loopne
dec
test
xor
dec
mov
mov
inc
stos
daa
jno
or
push
dec
jmp
push
in
fldt
js
xchg
out
out
xor
inc
and
xor
dec
mov
sbb
sbbl
push
or
scas
arpl
cmc
ja
fidivrl
push
bound
mov
mov
sbbl
jne
fidivl
pop
fsubrs
xor
mov
push
or
sub
add
jne
int
jmp
int3
inc
fcomps
and
insb
or
sub
arpl
dec
aaa
pushf
dec
inc
fimuls
cmp
jg
xchg
dec
outsb
sub
xor
out
cmp
inc
sub
rcll
pop
out
pushf
xchg
push
mov
or
movb
mov
lock
fsts
jns
pop
xor
xchg
lds
lods
xchg
movsb
mov
pushf
sub
xor
push
out
add
adc
shll
mov
fwait
xchg
pusha
ss
xchg
int
lods
mov
jge
sub
sets
scas
cmc
rorb
pop
jne
xchg
in
and
loopne
inc
mov
xor
add
mov
dec
fildl
stc
sub
loopne
outsb
vpshufhw
dec
in
outsl
xchg
xor
call
roll
stos
xchg
dec
mov
std
add
mov
push
add
insb
add
sar
into
movsl
enter
ret
gs
in
jp
mov
sub
leave
mov
mov
jnp
xor
jne
sbb
jbe
and
je
imul
xchg
sarl
adcb
addr16
out
arpl
push
pop
fcomps
jmp
mov
mov
fs
sarb
add
mov
ficoml
imul
clc
inc
scas
pop
mov
outsl
addb
cld
lret
mov
cld
mov
mov
dec
int
xchg
stos
jns
push
xor
adc
jbe
mov
cs
add
and
pusha
cmp
lret
pop
mov
xor
movsl
gs
test
mov
sbb
gs
leave
aaa
clc
flds
mov
cld
fdiv
dec
sahf
xchg
stc
inc
mov
pop
insl
cmc
lcall
out
sbb
insl
fldl
jp
mov
clc
jecxz
adc
push
cmp
dec
jns
fistl
sbb
sbb
std
lahf
test
mov
mov
push
sarb
xor
scas
push
adc
cmp
dec
dec
push
sub
or
adc
sarl
jno
repnz
xchg
cmpsl
dec
pop
push
dec
dec
mov
dec
push
pop
lea
pop
lods
push
test
cmp
xchg
inc
loop
mov
xchg
or
sti
or
sbb
clc
pop
imul
scas
in
adc
shl
add
imull
rcrb
lock
jmp
xchg
or
shl
fmul
wrmsr
or
cld
and
adc
ds
ss
adc
fmul
xor
xchg
and
jbe
fsts
or
popa
std
dec
fwait
cmpsb
mov
pop
mov
cmc
fisttpll
or
shll
repnz
ss
xor
lcall
cmp
and
sbbl
add
rorl
xchg
sub
jl
pop
arpl
je
sub
lahf
fcom
cld
sbb
jbe
in
or
mov
loope
subb
inc
mov
pop
xchg
bound
popa
adc
inc
xor
or
iret
gs
cltd
inc
cli
insl
lods
xchg
aad
loope
adc
ljmp
inc
xchg
pop
es
and
sub
add
cmc
sbb
mov
mov
sbb
sbb
icebp
leave
and
arpl
scas
push
or
in
incb
out
in
inc
jmp
in
mov
mov
rcrb
in
mov
xor
test
xchg
or
in
aam
mov
imul
add
add
xchg
jle
vmovmskps
xor
testb
cli
jecxz
xchg
aam
dec
mov
push
cmp
imul
and
lahf
xor
fildl
push
dec
sarb
inc
loope
cmp
jmp
sub
rcl
lods
jae
add
ret
jmp
lock
jo
jecxz
dec
add
pusha
adc
rcr
push
leave
mov
jno
sub
in
xor
or
pop
fstps
in
xor
roll
sbb
or
popf
adc
movsb
jb
mov
pop
stos
js
xchg
outsl
sbb
mov
mov
push
adc
cmpsb
xor
cwtl
lret
cmp
mov
jns
dec
int
pushf
movsb
in
sbb
dec
inc
pop
xchg
repnz
nop
repnz
test
inc
jmp
iret
push
frstor
rorl
nop
cmp
jno
daa
cmp
xchg
insb
xchg
cmp
jae
loope
dec
aam
add
in
or
shrb
imulb
imul
add
pop
mov
mov
xchg
jg,pt
xchg
lock
push
sbb
fs
sub
inc
jne
mov
sub
mov
les
fs
fwait
mov
inc
scas
adc
mov
sbb
leave
in
fisubrl
cli
inc
pop
shll
cltd
clc
stc
lods
jo
test
and
mov
cwtl
popf
cmc
roll
addb
xor
inc
test
out
pop
add
ret
mov
in
nop
stos
daa
push
sbb
add
inc
lock
fcmovnbe
es
xlat
in
shll
add
movb
jmp
imulb
sub
fnsave
dec
ficompl
jle
mov
dec
repnz
dec
or
pop
jo
pushf
rclb
cmpsb
in
not
sbb
mul
jle
push
mul
or
mov
lret
lsl
mov
mov
das
ljmp
popa
and
scas
pop
sbb
dec
push
ja
mov
gs
adc
imul
pop
bound
sub
dec
int3
dec
jne
inc
inc
pop
cmc
xchg
imul
or
jns
add
mov
push
mov
mov
fidivl
mov
out
clc
repnz
and
xchg
jecxz
jmp
inc
adc
mov
push
adc
inc
pop
popa
stos
push
pop
ret
stos
lods
insb
jmp
pop
jae
xor
pushf
mov
add
insl
cs
mov
xor
push
xor
ret
mov
or
loope
into
inc
mov
xchg
inc
adc
loopne
stos
in
addr16
daa
mov
outsb
mov
mov
push
lcall
test
fwait
xchg
sub
cmp
lret
inc
out
cmp
jmp
clc
sbb
cmp
mov
add
rcrl
lock
dec
loopne
jo
insl
push
cmc
lcall
sub
lods
lret
lcall
dec
imul
lea
push
xor
cmp
insb
movsb
push
les
dec
inc
mov
jecxz
popf
mov
out
xchg
and
mov
fimuls
out
fiaddl
loop
pop
dec
mov
jecxz
push
insl
loope
out
out
out
and
fs
inc
loop
imul
sub
ret
and
daa
jae
add
xchg
incl
jb
imul
add
mov
jmp
adc
sub
mov
dec
insl
cmp
in
mov
jns
mov
sub
add
repz
fbstp
ljmp
adc
inc
mov
js
sbb
std
cltd
push
addl
and
adc
sti
xchg
sub
adc
repz
inc
mov
les
pop
dec
es
dec
aam
repz
lods
xor
inc
sub
addr16
enter
and
test
pop
add
jg
push
rcll
xor
adc
popf
cmpl
push
arpl
insl
aaa
std
aas
fistps
test
xor
adc
sbb
xchg
adc
cmpsl
lcall
jbe
and
or
test
js
outsb
repnz
es
mov
sub
imul
add
lds
adc
scas
cmp
sti
xor
sub
dec
pop
sahf
pop
lahf
adc
aad
mov
jbe
and
inc
enter
jge
incb
shlb
adc
inc
jg
stos
cmp
clc
jge
xor
ja
mov
mov
cmc
mov
inc
sti
scas
and
jnp
mov
mulb
int3
jmp
aaa
sub
mov
fcmovnbe
insl
orb
jns
aad
xchg
sub
or
in
push
mov
inc
add
dec
jnp
mov
sbb
movsl
dec
cmp
test
sub
push
mov
dec
shrl
bound
and
imul
jle
jb
mov
and
int3
addl
or
jne
scas
scas
mov
out
fnsave
aam
add
mov
cld
cs
aas
add
jecxz
popf
cs
mov
sbb
gs
loop
push
xchg
ret
cmpsb
jle
mov
sti
imul
loop
push
les
outsb
into
add
repnz
cli
jmp
aam
jo
mov
cmp
mov
mov
mov
lods
push
jo
and
xchg
cmp
data16
mov
nop
cmp
xchg
popa
daa
sbb
cmp
xchg
mov
icebp
pop
pop
cmc
sbb
popfw
aam
rcll
sbb
pop
jl
add
jle
xchg
xchg
insb
mov
push
mov
mov
fdivs
cli
inc
inc
jne
cmp
push
dec
xor
push
push
jns
cmc
inc
push
sbb
dec
xchg
sbb
hlt
inc
fwait
sub
rolb
sbb
aam
jbe
xorb
fsts
sbb
divb
loop
movsb
xchg
or
das
sbb
jge
push
mov
fstpl
fs
repz
adc
and
icebp
jl
jecxz
std
cmp
sbb
repnz
nop
testl
or
pop
inc
sub
movb
out
inc
outsb
mov
push
mov
pop
dec
lret
pop
call
insb
call
in
mov
dec
shrb
fidivrl
notb
jb
cwtl
leave
je
mov
fsubs
add
sub
mov
pop
sub
pop
int3
pop
fildl
pusha
andl
jbe
dec
jno
mov
xchg
xor
es
fsts
out
jo
addr16
movhps
in
jle
xchg
mov
nop
and
push
adc
or
cmp
sbb
clc
outsb
pop
mov
mov
and
movsl
inc
movsb
pop
shlb
subb
out
fisubs
dec
in
js
add
sub
mov
cmpsb
in
mov
sub
cmp
out
xchg
dec
cmc
pop
imul
pop
arpl
cmc
outsl
movsb
jns
mov
faddp
cmpsb
data16
aaa
mov
dec
sti
cltd
je
sbb
fwait
and
dec
lret
and
sub
dec
pop
dec
subb
enter
pop
jmp
mov
inc
or
ja
sbb
mov
movsl
mov
mov
mov
inc
sub
add
outsb
xchg
les
into
sbb
mov
jp
or
adc
mov
push
pop
adcl
les
push
sbb
cld
loope
sub
in
js
inc
mov
outsl
cld
inc
sbb
add
pop
add
push
push
sarl
test
idivb
fsts
mov
sbb
ret
out
fwait
sbb
add
mov
loope
xorb
dec
lcall
int
xchg
addr16
cmpsl
pop
cmc
mov
mov
repnz
push
ret
mov
xchg
push
push
cld
push
repz
aam
ret
stos
push
pop
sub
fiadds
dec
mov
push
inc
cld
shrl
push
js
sbb
xchg
fsubrs
repnz
dec
addr16
clc
cmp
gs
xor
pop
xchg
cmp
push
dec
stos
test
ss
sbb
mov
pop
cmp
mov
inc
jp
mov
adc
andl
in
sub
and
shll
xchg
pop
popa
pop
dec
shrl
pop
les
lcall
adc
cmp
jno
dec
or
scas
xor
repnz
adc
mulb
sub
jle
xor
loopne
adc
test
mov
sub
push
aaa
cmpb
loope
insb
outsl
pop
je
or
adc
xchg
xor
jp
dec
sub
inc
leave
imul
mov
pop
aad
xchg
out
mov
push
mov
cmpsl
test
pop
sahf
xor
push
cmp
or
scas
sbb
test
or
mov
setbe
in
jo
xchg
fcmovb
xchg
push
ljmp
sbb
xor
jge
adc
fnsave
aas
pop
xchg
add
les
adc
jle
cmpsb
lea
call
insl
loop
shlb
adc
jno
pop
es
mov
sub
sahf
xchg
je
enter
ret
pop
pop
daa
push
in
js
lahf
lds
inc
cmp
mov
mov
jno
int3
out
cmp
add
js
xchg
push
add
das
add
push
movsb
movsb
mov
xlat
or
mov
jo
push
cmpsl
and
mov
outsl
add
repz
mov
jb
xlat
sti
sub
div
or
mov
mov
pop
inc
pop
sti
sub
fstps
lret
sbb
cld
loope
fisttpl
mov
jbe
test
lcall
pop
push
andl
scas
ja
jle
insl
in
loopne
out
cmp
xchg
lock
frstor
insl
xor
ror
mov
sub
push
mov
mov
fsubrs
xor
nop
fs
pushf
push
shll
ret
lods
mov
mov
scas
test
pop
les
inc
dec
pop
mov
mov
xchg
out
outsl
dec
jmp
sbb
mov
mov
adc
or
sbb
jp
daa
insb
sbb
shl
pushf
mov
aad
inc
cmp
test
stos
fisubs
ja
outsb
out
movsl
test
aaa
pop
xor
mov
sub
in
mov
mov
dec
enter
fcompl
test
adc
jecxz
jmp
jp
jecxz
icebp
repnz
xor
adc
scas
das
xor
or
add
lahf
adc
stc
stos
loop
fwait
es
pop
mov
cmp
inc
stc
cmpb
in
daa
iret
mov
cmpsl
push
jae
or
push
or
lret
and
push
mov
pop
je
ljmp
inc
aas
negb
out
aaa
adc
clc
push
mov
ret
ja
push
test
test
lahf
add
dec
cmp
add
in
pop
pop
or
and
mov
fdivr
xchg
lahf
jae
push
add
add
cmpsb
rol
sub
clc
mov
nop
popf
jb
xchg
xor
cmp
aaa
pop
test
in
jmp
lret
fnsaves
fst
mov
dec
iret
insb
iret
mov
mov
xor
or
jo
sub
xchg
cmp
sub
in
outsb
jnp
aas
loopne
stos
mov
xor
mov
pop
outsb
rcl
subb
idivb
fdivrs
xchg
jp
scas
scas
test
popl
jecxz
pop
sbb
pop
addr16
sub
mov
inc
pop
xlat
xchg
ffree
imul
leave
leave
scas
dec
mov
repnz
cmpsl
inc
push
xchg
call
xchg
xor
xor
jno
cmc
or
cmp
nop
ret
in
adc
ret
mov
fstl
mov
or
leave
xchg
rolb
push
and
sbb
pop
cld
dec
fs
or
test
repz
jmp
in
mov
sub
jbe
loop
xor
test
xor
and
sbb
les
sbb
mov
imul
sbb
mov
jmp
and
push
jbe
ja
fcoms
aam
add
jo
cld
call
cwtl
das
push
xchg
iret
mov
fs
iret
pop
jl
xchg
sub
stos
ds
dec
mov
stos
in
cmp
adc
icebp
shrl
xlat
cli
mov
das
cwtl
je
pop
cmp
add
stos
mov
sbb
clc
jbe
fs
loope
cli
inc
cmp
mov
popa
xchg
mov
lcall
test
scas
push
mov
movsl
test
scas
jae
inc
cltd
mov
inc
pop
pusha
jbe
fwait
int3
jmp
into
and
push
call
stc
add
mov
push
ljmp
outsb
add
cmc
jle
adc
incb
es
pop
mov
xchg
pop
pop
pop
das
adc
rcr
sub
cmp
push
popl
push
sti
push
iret
fidivl
or
cltd
jo
shll
xor
fcmovnu
xchg
pusha
push
push
xor
cli
sbb
jbe
jb
add
inc
add
mov
mov
jp
adc
mov
inc
jecxz
out
hlt
sbb
rcr
push
and
dec
stos
adc
push
es
nop
aaa
sub
orb
nop
test
sbb
fimuls
in
out
movsl
fsubrl
sbb
mov
insl
mov
cs
cmp
fldcw
pop
inc
orl
nop
push
sbb
aaa
dec
stos
adc
adc
les
add
js
dec
sahf
sahf
icebp
or
or
sti
xor
adc
mov
push
adc
pop
or
pop
xor
adc
and
or
out
mov
fistpl
in
jo
lds
and
push
cli
cmpsl
and
shr
das
daa
mov
movsl
lock
pusha
pop
cmpsl
mov
movsb
sbb
ss
popa
ficompl
sbbl
adc
push
fimull
cmp
add
das
loope
repnz
or
and
sub
insl
sarb
orl
ljmp
jp
cli
movsl
iret
orb
and
ror
idivb
push
test
mov
cmc
mov
out
shl
mov
adc
cmp
push
jmp
into
lret
xor
or
cmp
inc
ja
or
mov
xchg
mov
add
sbb
pop
inc
arpl
mov
cmc
jecxz
js
dec
push
push
shrb
outsb
test
imul
test
sbb
pop
or
mov
sbb
pop
lret
dec
out
test
lds
sbb
add
mov
xchg
dec
cmpsb
jns
arpl
lock
fistps
xor
popa
out
mov
vmovaps
pop
out
out
out
sbb
mov
sbb
test
inc
andl
dec
adcl
add
fdivrp
cmc
add
or
clc
addr16
dec
sub
sub
inc
push
mov
mov
push
push
ror
fwait
test
inc
vcvttsd2si
mov
mov
jb
and
movb
jno
cmp
xor
push
les
push
test
add
push
mov
or
push
icebp
add
lcall
incl
cmp
daa
pusha
lahf
lea
and
mov
sub
mov
clc
inc
lods
sub
fisubl
int
ret
stc
xor
in
sbb
adc
dec
jbe
mov
push
in
mov
aad
adc
ds
jb
jg
lea
pop
int
pop
pop
movsl
xor
pop
imul
mov
leave
sub
das
pop
cli
enter
sbb
sub
insl
pushf
pop
inc
jmp
push
insb
push
adc
push
out
sbb
insl
imul
cmp
pop
shl
xchg
inc
cmp
mov
test
aas
and
xor
lods
sahf
inc
push
sub
push
sbb
xor
arpl
xor
push
mov
imul
fidivrs
iret
lahf
out
pusha
pop
push
sub
pop
push
push
into
mov
or
mov
icebp
add
test
ret
dec
dec
push
gs
xchg
inc
mov
int3
aaa
jno
daa
add
mov
mov
rclb
cs
or
sbb
mov
adc
mov
in
lret
or
fistpl
jp
clc
addr16
jno
into
jns
fsubrl
sahf
cli
in
arpl
dec
add
repnz
dec
add
jp
cmp
lea
orl
push
in
loopne
inc
bound
cmp
mull
and
rolb
mov
stos
sbbb
mov
adc
notl
roll
push
int
in
pushf
je
mov
es
mov
inc
test
mov
jecxz
and
or
pop
jge
ljmp
int
mov
nop
out
sti
test
xlat
lahf
scas
popf
sbb
push
mov
pusha
fwait
inc
iret
pop
inc
or
dec
dec
cmp
out
outsb
call
xchg
outsl
sub
lret
andl
cs
daa
or
mov
fs
bound
daa
imul
hlt
mov
sub
in
xlat
cmp
adc
mov
jbe
cmpxchg
imul
or
mov
pop
add
pop
mov
push
sbb
je
inc
out
idiv
aaa
decl
nop
pop
es
hlt
jp
mov
and
or
push
enter
xchg
adc
divw
sti
add
cmp
int
jg
lock
repz
or
xorl
out
call
shrb
mov
mov
movsl
repz
add
pop
jns
jl
inc
mov
imul
sub
add
cmpsl
cmpsb
mov
mov
and
sub
fcmovne
imul
mov
fucomp
gs
aam
adc
fs
push
mov
jle
jbe
jge
or
pop
xchg
popa
popf
pusha
les
mov
stos
repnz
fstps
push
mov
jno
or
mov
push
adc
mov
inc
fmull
orl
cs
stos
into
test
es
mov
je
lret
jmp
lret
fucom
xchg
mov
xor
shlb
fwait
in
rdpmc
mov
or
sbb
in
jnp
cmc
adc
jbe
das
dec
int3
hlt
jnp
jg
and
xchg
xchg
jp
inc
xchg
mov
push
and
and
call
loop
idiv
imul
mov
xchg
dec
sbbl
test
movsb
movsb
xor
jmp
mov
insl
jo
in
adc
push
xchg
mov
adc
adc
cmpl
pusha
sub
popa
mov
aad
cmp
push
fcmovne
xor
adc
faddl
loope
cltd
movq
daa
icebp
ja
add
orb
dec
imul
std
gs
push
adc
mov
push
stc
repnz
mov
and
cli
sbb
je
mov
and
lea
add
out
mov
xchg
out
or
iret
fwait
std
and
adc
hlt
test
fdivrl
imull
cmpsb
idivl
mov
and
lods
sbb
lds
xchg
sub
in
sub
or
cld
lret
loop
out
pop
cmp
sbb
jae
sub
mov
push
pop
ret
add
jo
xchg
outsl
add
jns
add
in
sbb
inc
mov
iret
rclb
add
sbb
inc
jbe
inc
outsl
cmp
enter
cmp
cli
add
rcrb
rol
sahf
pop
mov
in
sub
xor
sbb
ret
lea
push
inc
mov
outsl
jae
jecxz
push
aas
cmp
dec
aam
out
mov
pop
mov
sarl
je
call
imul
adc
dec
sbb
lea
ret
pop
fwait
cmp
cmpsl
mov
outsl
idivb
aas
fidivrl
js
push
dec
mov
mov
mov
mov
fst
lock
cmpsl
jno
mov
pop
sub
xchg
arpl
sbb
ja
ljmp
subb
add
xchg
cmp
lods
test
push
jg
pusha
inc
repnz
inc
sti
shll
sub
jg
into
bnd
jl
sub
dec
adc
lods
adc
movsb
cmpl
hlt
add
psllq
loopne
mov
ds
adc
popf
pop
cmp
push
push
rclb
and
mov
cmp
hlt
pop
scas
jge
adc
lcall
test
sub
pop
mov
cmc
jb
idivb
push
ret
daa
in
pop
mov
and
xchg
aaa
in
outsl
mov
and
fsubp
js
aaa
arpl
push
pushf
sti
add
bound
fsubrs
inc
or
cli
lcall
adc
xor
cmp
mov
xor
fs
mov
lock
lea
xchg
sub
fdivs
loop
cmp
jecxz
jecxz
addr16
jl
inc
fisttps
xlat
incl
or
ret
cmp
aaa
and
cli
mov
pushf
xor
test
pop
sbb
mov
add
push
add
jge
xchg
jne
mov
mov
push
stos
test
dec
popl
das
xchg
mov
pop
loop
xchg
fcomip
mov
rcll
pop
push
cltd
hlt
fwait
add
clc
repnz
jne
inc
loope
movsl
sub
sbb
jns
xor
jb
leave
mov
cmp
leave
jp
cmpsb
adc
xchg
xor
mov
sbb
adc
lret
mov
xchg
pop
and
adc
filds
jae
pop
mov
mov
out
jbe
push
ficompl
ljmp
fucomip
cmp
cmp
out
inc
cmp
inc
mov
and
push
bound
or
jbe
xchg
inc
inc
addr16
movnti
aam
xchg
imull
mov
ja
clc
addl
sbb
jnp
sbb
stos
xchg
push
test
or
jae
aad
ss
incb
divb
jnp
insl
lods
adc
inc
pop
pop
cmp
inc
adc
add
sbbb
lret
aas
mov
fs
xor
xor
lahf
cmp
test
insb
sbb
sub
push
mov
dec
cmpsl
rorb
test
mov
gs
inc
cmp
push
xchg
xchg
sub
or
je
fimull
xchg
ljmp
lds
push
xor
add
cmp
gs
xor
adc
adc
das
mov
jo
cmp
aas
popa
dec
cmp
imul
xor
stc
dec
ret
out
fnstcw
and
shlb
sbb
push
inc
repz
insb
lcall
popf
sahf
in
fstl
sub
jge
dec
adc
xlat
jne
mov
sbb
ss
popf
test
hlt
pop
fs
popl
cmc
push
add
arpl
mov
cmp
sti
push
jge
push
adc
push
leave
push
jge
jae
lret
iret
add
sahf
xor
int3
push
jl
inc
push
push
xor
jle
push
outsb
xchg
int3
adc
fdivrs
jo
sub
jmp
cmp
fs
rcrl
sub
cltd
push
aad
leave
subb
adc
shll
cmp
fcomi
inc
jo
out
and
cmp
sub
add
popa
hlt
xor
xchg
pop
push
and
lahf
pop
aaa
dec
popa
mov
scas
xor
push
dec
test
cmp
icebp
jnp
and
jp
adc
adc
jge
add
jno
xor
dec
mov
xor
pop
mov
dec
cs
mov
lret
xchg
sbb
cmp
pusha
arpl
roll
sbb
mov
mov
xchg
out
cmp
xor
popa
das
test
inc
call
or
in
stos
add
mov
int3
fwait
leave
idivl
in
hlt
dec
sub
pushf
or
push
ljmp
add
cli
mov
dec
subb
and
fadd
imul
std
and
jmp
or
push
test
stos
sub
clc
and
mov
aas
fsubrs
push
pop
jmp
std
lret
test
xor
push
scas
sbb
or
popl
push
xor
cmp
pushf
sbb
cmpsl
mov
and
cmc
out
scas
out
in
mov
pop
adc
jns
hlt
mov
rolb
inc
mov
aas
xor
xor
stc
inc
or
add
fwait
add
das
push
cmp
xlat
pusha
inc
out
mov
iret
leave
xor
push
divl
mov
int
dec
push
dec
jmp
fists
dec
mov
int
mov
test
andl
rcr
or
aad
mov
push
xchg
sbb
mov
lret
lret
xchg
sahf
mov
push
aas
push
inc
sbb
cmp
inc
fucomp
push
ds
shrb
mov
xchg
mov
cmpsl
mov
or
popa
or
in
pusha
sub
sbb
pusha
jg
pop
dec
xor
imul
pop
push
add
in
js
rolb
mov
mov
mov
out
sub
ljmp
mov
test
aad
cmp
mov
sub
imul
popf
jnp
lods
fsubp
outsl
mov
inc
cmpsl
dec
adc
push
loope
cmp
cmp
mov
fs
mov
cmp
cmp
pop
stc
rolb
cmp
outsb
jb
or
xor
ret
mov
xchg
push
test
inc
jno
mov
imul
ljmp
sbbl
das
in
dec
fisttpll
mov
xchg
shrb
sti
fisttps
or
gs
mov
jp
pop
lahf
mov
insb
push
xor
and
add
xchg
outsl
cmp
clc
shl
xchg
jecxz
cmp
pop
or
daa
out
ljmp
adc
shrb
jp
push
xchg
adc
jl
stos
sahf
outsl
or
leave
and
out
xchg
lret
add
xor
inc
pop
lods
sbb
int
mov
lock
adc
shlb
test
sbb
pushf
add
push
cmpsb
inc
jne
iret
push
movsb
out
popf
test
aam
xchg
stos
inc
adcb
mov
or
test
cmpsl
or
xor
mov
movsb
jle
rolb
dec
fcomp
sti
add
lods
cmp
xchg
jp
imul
stos
mov
mov
rcl
lods
or
imul
fnsave
cmpsb
mov
push
cmp
pop
sub
xchg
dec
jo
and
imul
sti
movsb
lods
iret
out
jle
rcll
sbb
jne
mov
lahf
add
jl
mov
cmpsl
and
jbe
sbb
int
jnp
clc
mov
mov
push
out
sahf
cmp
imul
lcall
icebp
xchg
fisttps
fbstp
mov
test
cmp
add
sahf
cli
lret
loope
or
lret
adc
mov
in
hlt
or
mov
into
sahf
jnp
mov
cmpsb
subb
pop
mov
arpl
pop
push
ljmp
and
lret
out
mov
cld
enter
aaa
push
cmovle
mulb
fiaddl
lret
sub
cmpsl
push
sub
mov
mov
jns
add
inc
outsl
dec
cmc
or
push
ds
or
push
cltd
fcompl
mov
xor
dec
inc
iret
lcall
mov
fcmovnu
add
movsb
vpmullw
js
or
out
out
cs
cmc
pop
dec
pop
ja
loope
or
in
cmp
leave
sbb
inc
inc
dec
loop
scas
sbb
sti
inc
push
add
sbb
fiaddl
push
cmpsl
fldcw
enter
fs
jg
add
mov
dec
enter
or
outsl
lahf
sub
iret
cmpsb
shrl
mov
push
dec
fisubrs
pushf
pop
mov
stos
mulb
push
jns
pop
dec
aam
dec
call
orl
int
mov
out
clc
jmp
les
xlat
ljmp
push
xor
dec
push
xlat
scas
ja
test
jmp
sub
adc
adcl
jae
jge
in
mov
jae
sub
mov
mov
jg
icebp
sbb
les
cmp
adc
adc
in
mov
push
mov
loop
into
mov
xor
mov
stos
cli
jnp
push
jns
push
stos
xchg
xor
nopl
push
std
das
das
jns
xchg
adc
aas
mov
jb
mov
mov
or
xor
push
cmpsl
mov
xchg
loop
test
add
jecxz
fiadds
sub
cmp
lahf
mov
and
out
mov
fldl
fs
cmp
cmp
mov
cmp
and
aad
fsubrs
lcall
mov
lods
data16
xchg
or
imul
sbb
mov
lret
push
push
mov
call
dec
lea
mov
jmp
mov
movsl
jecxz
jne
inc
ds
lcall
mov
stc
push
fstl
jecxz
pusha
pop
xor
imul
jo
mov
pop
jnp
inc
pushf
push
xchg
daa
enter
mov
lea
in
sbb
pop
pusha
iret
or
dec
das
mov
lret
loopne
or
mov
jmp
fsubrl
pop
pop
mov
icebp
adc
out
mov
movsl
or
ljmp
xor
es
mov
pop
fwait
stos
lods
mov
es
adc
mov
mov
sbb
dec
test
in
icebp
mov
stc
push
pop
xor
dec
fidivrl
dec
addb
xorb
mov
mov
aas
roll
mov
cmp
inc
popf
cwtl
xchg
sahf
jno
cmc
inc
or
dec
jge
and
xchg
rorl
in
inc
mov
pop
or
addr16
cmp
mov
pop
movsl
jb
repz
scas
fistpll
ja
out
add
and
jnp
imul
pop
loopne
xchg
jecxz
jnp
push
pop
inc
pop
sbb
shlb
sub
mov
xchg
sbb
rol
sarl
fsubl
inc
test
hlt
push
pushf
test
cmp
mov
inc
sbb
cmp
or
mov
mov
jae
and
and
jne
xchg
push
jne
push
dec
nop
sub
cmpb
sub
or
or
clc
lret
xor
xlat
cmp
mov
jp
insb
inc
adc
addr16
mov
and
push
int
or
and
mov
dec
cmpsl
cmpsb
pop
add
add
adc
fcoml
mov
out
outsl
sbb
mov
pusha
sti
fnsave
sbb
pop
stc
adc
xchg
rorl
stos
addr16
jns
stc
sahf
rolb
xor
out
sti
push
adc
mov
out
dec
mov
jb
shl
inc
std
xor
jnp
mov
mov
add
xor
inc
jmp
mov
xor
jp
pop
adc
pop
sub
sar
mov
test
adc
jl
std
pop
pop
xchg
xchg
hlt
sub
pop
cmp
sbb
loope
push
push
add
mov
in
pop
stos
xor
sahf
incb
push
mov
dec
ret
lock
pop
lds
push
dec
inc
adc
int
ret
mov
inc
ljmp
fmull
or
add
shl
sbb
pop
pusha
daa
pop
call
pop
cmp
and
mov
std
js
mov
mov
add
mov
sti
jne
jns
sub
lds
push
pop
lock
test
push
cmpb
or
or
cmp
aaa
out
lret
or
push
cmp
shrl
mov
jb
fidivrl
mov
mov
lret
inc
sub
lods
sarb
xchg
fidivrs
das
stos
jp
aas
outsl
xchg
data16
icebp
scas
xlat
adc
repz
lods
pop
call
mov
push
xor
repz
test
cmp
push
jbe
shlb
aam
mov
jns
xchg
adc
popa
lock
or
arpl
ffree
ret
test
mov
int
inc
mov
dec
insb
leave
xchg
or
int
leave
negb
es
sub
adc
into
jbe
mov
dec
sbb
ficoms
stos
shrl
js
cmp
mov
je
addr16
sbb
mov
sbb
pop
mov
xor
aas
cs
and
int
and
into
cmp
pop
or
testb
xor
iret
clc
or
je
stc
inc
jb
and
jle
mov
fsubrp
cmpsl
test
imul
daa
cwtl
hlt
jl
adc
xlat
aam
or
push
pop
test
pop
std
sbb
add
aaa
sub
hlt
fucomp
cwtl
nop
shlb
ret
jns
add
xor
sub
jno
adc
inc
mov
repnz
add
inc
mov
adcb
pop
movsl
dec
mov
add
mov
dec
mov
push
cmc
pop
aaa
ss
ljmp
jne
lret
push
outsb
ja
xor
adcb
sbb
jecxz
mov
filds
push
test
loope
xchg
in
hlt
mov
popa
xchg
ja
movsl
inc
pop
lahf
lock
and
fmulp
inc
jns
imul
inc
rcll
mov
mov
pavgw
mov
add
inc
mov
pop
push
or
jecxz
in
jge
sbb
sbb
mov
fsubrs
inc
and
push
cli
inc
aad
popa
sbb
test
pop
mov
cld
jecxz
jb
add
adc
popa
cwtl
test
mov
pop
xor
dec
add
dec
pop
lock
pushw
cmp
pop
sbb
setns
pop
cld
in
jne
outsb
inc
leave
sarl
adc
js
xor
dec
or
or
xchg
shrl
icebp
movsl
mov
xchg
cltd
lods
enter
leave
lret
popf
add
mov
dec
jp
ljmp
or
lret
aaa
mov
push
mov
sub
or
cmp
pop
clc
out
nop
out
or
xor
out
sbb
jbe
sbb
shll
mov
mov
mov
popa
les
aaa
jo
test
inc
scas
rolb
scas
inc
fistpl
pinsrw
jns
out
jo
mov
dec
loopne
scas
aas
push
mov
repnz
fwait
push
xchg
popf
imul
mov
jo
or
inc
leave
popa
call
jae
std
inc
pop
inc
push
jge
mov
jl
clc
cltd
fdivl
sbb
leave
mov
mov
iret
jle
xlat
adc
xchg
ret
dec
or
lahf
ja
insb
mov
pop
or
cmp
repz
test
push
inc
push
pop
movsl
std
div
xlat
ss
xchg
sub
in
push
xchg
jmp
cmp
push
rolb
pusha
rcrb
pop
push
bound
aas
ds
push
loopne
fcomps
pop
cmp
dec
aam
sbb
pop
es
leave
movsl
scas
ss
rcrl
bound
dec
sarb
addr16
mov
outsb
cmpsl
int3
or
das
fisttpl
dec
test
jmp
add
scas
ret
lock
stos
pop
xchg
mov
mov
and
mov
and
mov
pushf
jle
stos
fcmovnbe
pop
lret
shlb
mov
xchg
push
push
jge
and
inc
mov
xor
jle
call
cs
scas
cli
xchg
mov
xchg
or
fstl
mov
mov
call
mov
pop
pop
loope
push
add
adc
in
and
push
sbb
adc
pop
jmp
jp
adc
inc
ja
sub
or
push
scas
adc
or
mov
fsts
sbb
sub
nop
jecxz
mov
jg
mov
aas
fstl
cmp
jmp
xchg
popf
mov
aas
sti
negl
push
lds
mov
mov
jne
jno
xchg
jle
arpl
xchg
lock
addr16
lea
mov
int
lret
scas
xlat
jecxz
add
xchg
or
jo
loopew
subb
add
aas
orb
xor
jle
push
mov
xchg
test
xor
add
jb
cld
sti
push
in
pusha
cmp
lock
dec
jmp
push
xor
dec
xchg
test
loop
xor
cmpsl
cmp
xchg
iret
icebp
push
shrl
or
sbb
pop
sbb
cld
out
lret
faddl
mov
je
mov
inc
xchg
testb
mov
sbb
xor
addb
out
mov
js
lcall
mov
add
jne
gs
jl
pop
xor
dec
inc
mov
sub
out
xchg
pop
int
mov
lock
in
xchg
ret
sbb
js
mov
orl
push
iret
inc
push
jl
cmp
jge
mov
filds
test
push
or
mov
jnp
bound
add
mov
xor
movsb
and
sbb
mul
sub
mov
out
addr16
out
imul
push
pop
lds
push
out
xchg
stos
or
xor
cmp
mov
out
in
cmp
push
pop
popa
lods
mov
cld
mov
andl
mov
test
mov
cwtl
add
notl
or
int
and
movl
pop
xchg
jae
imul
out
scas
xor
sti
xchg
fistl
jbe
lahf
push
leave
add
dec
ja
outsl
imul
stc
js
pop
idivb
loopne
lcall
call
pop
int
aas
scas
adc
mov
push
push
stos
jnp
insb
hlt
cmp
mov
xchg
sbb
mov
cmp
mov
scas
mov
jne
mov
fcoms
lods
lcall
test
fimuls
popf
cmp
jmp
js
push
fisubrs
mov
add
out
inc
ret
clc
add
jp
mov
jmp
test
std
xor
dec
es
xor
jle
sbbl
std
xor
xor
out
leave
push
xor
and
cmpl
or
mov
add
fldenv
hlt
lods
stos
cmp
fists
call
js
iret
sbbb
cmpsb
dec
test
sbb
cmp
xor
shll
xor
jb
inc
dec
mov
mov
mov
sub
push
js
lcall
or
dec
xor
scas
pop
daa
int3
push
std
je
aaa
clc
call
lahf
das
outsb
and
lods
inc
push
cmp
scas
in
scas
mov
in
rcrb
outsb
arpl
outsb
mov
cmp
jp
sqrtps
xor
icebp
call
in
inc
mov
jbe
sub
cmc
mov
fistl
repz
sarb
mov
movsb
mov
jae
push
js
stc
add
dec
cmp
fnstenv
test
movl
mov
scas
add
and
xor
enter
inc
sarl
es
mov
pop
pop
push
idivb
sbb
and
adc
xorb
mov
xchg
icebp
add
sbb
xor
pop
cmpsb
cmp
das
nop
dec
jg
in
push
les
adc
rclb
jge
ljmp
xor
lock
clc
and
jecxz
pop
ss
cmp
mov
fs
insb
lahf
aad
test
aad
in
xorl
movsl
test
jmp
mov
pushf
cld
or
fildl
ret
dec
movsb
jae
lret
repz
sbb
mov
or
icebp
mov
or
enter
bound
mov
pop
mov
sbb
loopne
pop
les
jg
out
jecxz
mov
lea
mov
movsl
mov
sub
mov
repz
lahf
lret
push
and
push
push
mov
dec
push
pop
and
sbb
sub
inc
jl
aaa
xchg
mov
lds
jp
addb
nop
adc
je
jnp
test
add
jno
inc
inc
and
rcl
packuswb
and
data16
adc
or
sub
enter
ljmp
mov
xor
data16
addr16
leave
push
stos
fisubrl
pop
je
push
sbb
test
add
mov
call
ja
bound
std
xor
int3
and
add
inc
pop
shr
js
or
add
pop
and
adc
gs
cmc
jge
int3
inc
xor
and
cmpsb
nop
inc
and
mov
and
push
push
or
fwait
xlat
lods
call
clc
push
iret
push
stc
push
sbb
ss
jmp
dec
sbb
inc
sbb
lods
and
mov
and
mov
mov
mov
dec
xchg
sarb
int
inc
and
add
mov
nop
or
jp
sahf
cs
pop
lods
mov
or
or
sti
out
addl
ljmp
push
lahf
sbb
xor
ss
out
or
fists
scas
add
mov
fwait
aam
pushf
rclb
jno
cmp
pop
mov
add
leave
outsb
and
in
orb
shll
sahf
push
push
jp
dec
mov
adc
dec
loope
mov
dec
push
sbb
cmp
or
inc
push
xchg
out
jecxz
xor
sbb
lds
cmp
loopne
dec
jo
jg
lcall
push
int
out
jno
push
mov
xchg
add
das
insl
lret
outsl
lret
arpl
add
movsb
pusha
add
test
mov
adc
cld
inc
xchg
and
lds
movsb
mov
jae
shl
xor
mov
loop
lahf
jne
dec
scas
add
out
push
jl
test
xor
xor
mov
add
xchg
xchg
dec
push
pop
add
stos
arpl
push
add
jns
add
hlt
mov
xorl
mov
and
mov
and
ljmp
cmp
xor
inc
icebp
xchg
hlt
mov
icebp
mov
subb
cltd
xor
faddl
aas
mov
jmp
dec
loopne
xchg
push
dec
push
cltd
ds
notb
es
sbb
dec
push
setb
stc
push
out
out
je
pusha
mov
xor
call
mov
xchg
sub
das
sub
inc
jno
in
dec
mov
add
out
outsb
xor
frstor
pop
dec
xchg
clc
arpl
inc
in
and
sub
or
sub
insl
cld
or
cmc
pusha
push
pop
xor
mov
jl
mov
or
jns
mov
insl
push
xor
jae
mov
mov
ja
sub
xchg
jmp
out
fstl
jbe
sbb
movsl
inc
in
push
add
xchg
outsl
or
imul
pop
pop
adcl
inc
xchg
pop
inc
push
pop
mov
jl
xchg
sub
mov
push
xchg
insl
cmpsl
mov
add
fs
es
mov
repnz
and
jb
lcall
mov
cli
sub
push
and
lods
aam
push
jle
fcom
add
xchg
sub
lds
std
fstl
ret
mov
cwtl
sbb
fs
daa
std
jecxz
test
inc
rcr
bound
add
add
jle
cmp
xchg
mov
xor
sub
push
shrl
jae
xor
push
inc
insl
fwait
pop
scas
mov
sub
inc
iret
mov
sbb
outsl
push
sbb
ja
jge
xorb
mov
mov
out
push
outsl
scas
inc
in
js
add
orl
sahf
subl
xor
das
push
cmp
mov
negb
add
xchg
ja
and
loopne
xor
mov
js
inc
inc
fcomp
aam
mov
daa
dec
ja
sub
sub
cmp
mov
filds
mov
mov
imul
ret
hlt
mov
pushf
adc
addb
das
loope
xchg
jns
jbe
sub
xchg
inc
jbe
push
aad
xorl
rorl
nop
test
outsl
dec
sbb
adc
lods
sbb
or
out
mov
push
cs
or
cs
xchg
fiaddl
ljmp
jmp
imul
hlt
or
xor
adc
nop
cli
push
notb
in
out
shlb
add
ret
mov
bound
push
pop
imul
hlt
mov
aad
inc
mov
ss
imul
fildl
sub
cmp
jbe
or
jns
cli
ret
jae
addb
mov
roll
and
and
push
out
or
xor
inc
xor
rcrl
mov
push
xor
int
mov
xchg
sub
hlt
xchg
dec
pop
les
adc
push
dec
inc
out
fs
pop
sbb
enter
or
cltd
arpl
bound
into
lcall
inc
dec
lret
ret
lcall
inc
es
pop
push
mov
pop
xor
ljmp
pushf
or
js
mov
aam
xchg
cwtl
xchg
int
ret
repnz
xchg
pop
imul
inc
mov
and
shr
jns
xchg
js
mov
push
cmp
pop
aam
push
xor
fbstp
and
pop
xlat
dec
xchg
sub
bound
adc
pop
mov
cmp
nop
mov
mov
roll
mov
test
xchg
or
andb
sub
loopne
adc
xor
js
movsl
jae
inc
pop
incl
push
xchg
and
fcmovb
pop
xor
enter
xor
clc
mov
movsl
mov
cwtl
iret
inc
push
adc
enter
jge
daa
dec
stos
push
xor
jne
incb
test
pop
xlat
daa
in
inc
popa
or
sbb
mov
sub
mov
push
leave
in
js
cld
and
dec
lea
or
fcomp
add
imul
lods
adc
dec
or
inc
repnz
jae
dec
imull
ficomps
jb
mov
jecxz
rorl
fs
scas
cmpsl
cmp
xchg
pop
shrb
inc
clc
je
and
in
out
xor
mov
cwtl
dec
loope
pop
or
mov
xor
mov
clc
jo
in
ret
sub
push
lcall
fisttps
cltd
inc
lea
mov
imul
dec
adc
ds
push
pushf
hlt
and
cltd
jo
sub
mov
mov
sub
lea
mov
cltd
mov
xchg
cltd
dec
neg
sbb
fs
aad
push
and
rcll
lock
in
mov
add
out
push
dec
mov
dec
sbb
push
lods
push
adc
lcall
inc
mov
push
aas
lods
pop
mov
push
jl
pop
xor
mov
and
ret
out
mov
dec
pop
mov
jp
sti
stc
cwtl
cmp
mov
add
test
cmp
aas
in
pop
adc
dec
mov
xor
cs
mov
xor
loop
jns
sbb
fdivrs
dec
mov
cltd
out
test
dec
xor
mov
pop
dec
enter
stc
aas
sti
lods
je
inc
sbb
ljmp
sbb
push
and
orb
mov
jb
out
add
or
mov
je
add
and
adc
and
les
cmpsb
in
in
fsub
or
imul
out
rorb
stc
mov
loop
out
mov
mov
mull
scas
cld
or
dec
movsb
fmulp
xchg
mov
stc
loope
in
jp
lret
iret
push
cmpl
or
int
xor
xchg
fs
xchg
pop
cmpsb
or
aam
push
pop
mov
push
fadd
fucomi
sahf
out
in
dec
mov
lods
adc
cli
fs
stos
iret
das
fistpl
xchg
mov
popl
xchg
out
repnz
rcl
mov
je
aam
mov
adc
pushf
or
enter
xor
cmc
sub
mov
or
insl
iret
leave
add
lcall
mov
mov
int
mov
lods
or
ud2
xor
add
pop
pop
push
push
or
aaa
cmp
fstps
mov
jns
jg
or
icebp
cmp
or
sub
and
jne
lods
dec
pop
fadd
les
mov
or
and
mov
dec
fwait
mov
pop
pop
out
xchg
data16
into
je
addl
rcr
ss
ret
add
push
add
push
aam
adc
add
rclb
shrl
pop
fnstenv
ljmp
inc
mov
inc
or
mov
add
scas
data16
xor
call
cmp
mov
jmp
xchg
clc
arpl
aas
mov
mov
and
jl
mov
js
xchg
mov
loop
ret
out
mov
add
enter
fbstp
adc
jnp
fld
jle
dec
sarb
fidivrl
ljmp
sbb
scas
or
adc
inc
int3
xchg
fmulp
test
scas
pop
adcb
cmp
dec
or
outsb
mov
sub
cmpsl
popf
fwait
mov
hlt
lock
cmp
xor
xor
push
push
xor
add
js
imul
pop
sub
pop
or
sbb
sbb
inc
xchg
add
dec
push
xchg
mov
shll
fs
sub
pop
and
cmp
arpl
mov
dec
add
mov
xchg
popa
push
aaa
ficoms
lret
out
xchg
data16
out
clc
das
imul
lods
dec
sbb
lret
xchg
xor
push
sbb
addb
outsl
lcall
iret
movl
xchg
popa
idivl
push
sbb
lret
aaa
cmp
inc
fs
lds
outsb
popa
dec
loopne
xchg
in
jle
fs
dec
into
icebp
pop
ret
lock
sti
incb
mov
dec
test
sub
jl
mov
lods
jns
add
stos
jb
sbb
sub
fidivl
nop
fs
fwait
inc
add
jns
dec
and
xor
ret
push
push
insl
jae
and
push
imul
fisubrl
dec
xchg
mov
or
leave
fldl
shll
push
lret
out
lea
test
das
jmp
jge
stc
call
pop
ljmp
push
popa
ds
lds
add
cld
sahf
add
push
es
sub
shlb
cli
mov
or
push
bnd
sbbl
sbb
dec
lea
mov
lret
stos
cmpsb
mov
rcr
stc
sub
xchg
ja
mov
lds
ljmp
arpl
add
out
jb
sbb
jb
pop
sbb
call
push
dec
lods
jmp
push
adc
mull
mov
in
je
mov
add
push
ficoml
lods
popf
cmp
je
xchg
push
push
adc
sbb
jno
xchg
ljmp
out
pop
bound
aas
sub
mov
xchg
test
aas
dec
subb
aam
ror
xor
fldenv
adc
sbb
and
jl
jno
jg
jno
dec
loop
push
and
aam
xor
aam
push
xor
test
int
and
jns
mov
adc
push
aaa
repnz
rorb
xchg
subl
inc
or
and
push
popf
pop
mov
dec
jo
insl
add
into
push
push
add
mov
push
cmp
fdivs
mov
inc
mov
sti
mov
ja
mov
dec
rorl
sahf
sbb
pushf
mov
mov
arpl
sub
or
loopne
jg
clc
dec
dec
fnstcw
sub
xchg
lds
mov
sub
pop
js
or
and
xor
xor
js
cwtl
and
cmpsl
sub
xchg
nop
pop
mov
insb
mov
lods
mov
adc
std
pop
lods
sbb
test
test
mov
out
jbe
outsl
dec
mov
jne
shl
mov
or
sarl
push
lahf
lea
je
out
inc
repnz
int3
stos
xchg
in
aam
or
pop
mov
add
pop
inc
ret
lea
sbb
iret
push
xor
pop
inc
fisubs
mov
cmp
rcrb
lcall
mov
fsubrl
adc
cmpsb
sbb
mov
sub
pop
in
xchg
jb
jge
xor
mov
jp
test
clc
pop
or
xchg
sbb
ja
push
inc
or
lock
cmc
cmp
cmpb
inc
mov
dec
adc
ret
sarb
das
sarl
xchg
int3
push
in
push
lods
xor
test
ds
test
leave
or
movsb
xchg
inc
repnz
jb
inc
xchg
js
out
rorb
fsubrl
inc
adc
xchg
adc
stos
test
jbe
loopne
stos
or
call
ror
push
jnp
mov
lret
xor
inc
xor
leave
or
dec
inc
outsl
test
lock
insl
pusha
insb
jbe
inc
sar
lea
fsubl
negl
fadds
and
into
aad
pop
xor
movsl
xor
lock
pop
adcb
xchg
scas
les
push
lret
dec
inc
fmull
sbb
xor
fisubs
out
pop
xchg
ss
dec
lret
add
mov
xchg
mov
dec
daa
push
jge
pop
push
mov
call
push
mov
hlt
pusha
iret
lcall
pop
lret
dec
ss
das
xchg
negb
outsl
sbb
pop
and
fdiv
sub
dec
lock
in
add
jl
cs
loopne
ret
popaw
jb
fidivs
lods
test
xchg
inc
add
and
cmc
data16
or
fwait
mov
insb
jne
dec
add
jne
mov
js
xor
mov
sub
aaa
aam
dec
mov
push
xchg
ja
add
push
add
aas
outsl
adc
gs
dec
ss
dec
add
jae
push
rorl
adc
and
and
je
dec
arpl
push
inc
pop
mov
mov
mov
jp
sbb
mov
inc
fwait
or
fldcw
testl
mov
pop
stos
jp
add
push
and
nop
adc
lods
outsb
mov
or
sbb
push
test
mov
sub
push
cs
loopne
incb
aam
push
frstor
fs
sbb
xor
mov
bound
or
xchg
sbb
clc
gs
jno
dec
and
es
icebp
call
int3
pop
push
push
mov
sub
mov
lock
call
out
into
lret
sbb
push
or
in
and
push
rcrb
fwait
outsb
stos
mov
jl
mov
push
dec
data16
sub
and
test
sub
mov
rcr
dec
cmpsl
test
hlt
ss
imul
or
test
and
jae
lahf
or
push
push
dec
out
pop
nop
adc
jb
add
cmpsb
mov
test
jb
lods
push
xor
jae
jg
mov
fdivrs
and
ds
mov
add
adc
sarb
sub
int3
sbb
inc
sbb
add
shlb
mov
cmpl
gs
dec
inc
push
in
push
or
cli
jg
pusha
sarl
stos
lahf
insl
icebp
xor
jl
pop
xchg
mov
mov
jno
sbb
shlb
push
cmc
add
jo
xchg
mov
in
adc
iret
or
xchg
ffreep
sub
je
orl
push
das
push
mov
cmp
in
lcall
les
leave
cmp
mov
jno
jle
dec
jns
clc
cmpsl
loopne
lods
ret
jge
or
popa
push
mov
dec
mov
aam
xor
cmp
daa
push
pop
test
loopne
repz
cld
jg
mov
xor
sbb
lahf
and
mov
or
scas
pop
xor
test
flds
sub
insl
fsubrs
mov
mov
sbb
dec
adc
lret
jae
add
mov
sub
and
setb
mov
mov
and
lea
fisttpll
adc
push
imul
mov
pop
imul
je
mov
out
xor
fists
mov
inc
outsl
mov
push
fsin
sbbb
hlt
jb
mov
or
lahf
cmp
add
mov
dec
lret
inc
push
mov
xchg
jo
fstpt
pop
pop
xchg
dec
sbb
sti
out
adc
scas
mov
vandnps
enter
pop
mov
rcrb
aas
fmull
pop
mov
hlt
add
sbb
mov
outsl
lea
stos
mov
sub
outsl
inc
repnz
dec
jg
icebp
push
lcall
mov
add
mov
pop
jne
repnz
mov
mov
aaa
filds
out
negl
add
sub
cmp
jmp
pop
loope
dec
dec
outsl
popa
repz
loopne
sub
jnp
outsl
mov
fiadds
cwtl
push
das
jge
mov
test
ja
movsl
xchg
stos
icebp
mov
and
jmp
xchg
les
push
leave
stos
test
mov
mov
sub
inc
ljmp
mov
xchg
xchg
movswl
adc
fdivrs
sub
aad
lods
or
push
rolb
sub
dec
ret
inc
adc
movsb
test
testb
loop
lahf
mov
add
rcl
and
out
decl
insl
adc
out
shl
xlat
dec
pop
cmp
daa
sub
add
fwait
fs
cmp
or
cmp
ficoml
push
int3
movsb
loop
lret
in
imul
mov
pop
pop
ja
mov
mov
mov
cmp
sub
xor
in
call
notb
sbb
xchg
pop
sbb
dec
cmpsl
sub
dec
pop
in
xchg
hlt
insb
xchg
xsavec
mov
in
inc
xchg
cmpb
andb
inc
mov
sub
addb
fwait
test
pop
pop
mov
leave
icebp
cmp
fdivl
les
scas
sbb
adc
xchg
mov
sub
mov
pop
xchg
pushl
push
and
inc
push
xchg
pop
sub
je
sbb
fadd
sbb
xchg
lds
jmp
jnp
out
testb
pop
mov
rolb
ja
shll
aad
mov
imul
push
pop
in
or
movsb
cs
jne
fdivs
sbb
testl
adc
and
xchg
jae
pop
scas
push
enter
das
ja
pop
jo
je
das
adc
call
jns
or
rolb
sarb
loope
shl
push
jae
fwait
sti
nop
outsl
ss
sub
mov
pop
aaa
jmp
fiaddl
adc
popf
sub
add
push
sahf
pop
out
es
or
pop
enter
or
ljmp
ret
jle
cwtl
pop
pop
fsubrl
lods
lock
mov
add
dec
sbb
sbb
pop
mov
hlt
outsl
push
aam
clc
movsl
jecxz
mov
sub
cld
lods
in
scas
out
insl
mov
push
cld
push
fadds
add
call
xorb
pop
pop
xchg
lea
cmp
subl
mov
push
popa
out
dec
sbb
add
pop
cmp
xor
faddl
ds
cld
sahf
rolb
xlat
cmp
xor
adc
mov
sub
jne
inc
rcrb
rcrl
mov
push
xchg
dec
mov
cmp
lret
fnstsw
dec
push
pop
jmp
push
inc
das
in
lahf
lods
outsl
push
ror
push
imul
pop
cmp
cmp
mov
xor
mov
out
adc
xlat
rcr
cmp
dec
dec
lret
xchg
aaa
hlt
jo
mov
sub
pushf
repnz
les
add
xor
inc
or
dec
fwait
and
xchg
inc
out
cmp
mov
out
push
pop
ret
push
inc
lret
popa
fistpll
stc
ucomiss
int
cltd
xlat
xor
std
jae
push
mov
out
cli
xchg
jl
outsb
cmpsl
orb
mov
mov
lods
xor
inc
sahf
scas
ret
cltd
adc
lcall
aas
jg
cmp
stos
inc
xorb
sbb
out
jbe
pop
in
jb
iret
mov
dec
and
pusha
mov
rorl
pop
jmp
dec
mov
dec
or
dec
stos
stos
dec
jne
pop
mov
pop
mov
enter
and
ret
jl
mov
adc
std
in
xchg
inc
xchg
sub
jecxz
mov
sbb
add
vmread
fnstcw
inc
dec
icebp
jns
retw
pop
mov
leave
mov
jnp
and
pop
in
loopne
push
mov
fs
or
or
cmc
push
mov
shrb
sbb
fcmove
daa
rclb
lds
pop
int
and
xor
mov
pop
ret
mov
jae
mov
inc
fsubrs
xchg
xchg
sbb
shlb
in
popf
adc
jbe
push
add
notrack
ljmp
add
cmp
cltd
lret
into
leave
ds
cwtl
imul
call
xor
insl
out
xchg
call
mov
cs
xchg
ret
inc
sbb
cli
shrb
mov
adcb
fimuls
sbb
clc
out
out
enter
fidivl
cmpl
cltd
mov
test
cmpsl
jo
adc
les
jb
cmp
enter
negl
xchg
xchg
add
xor
sahf
sub
icebp
adc
xchg
pause
test
jno
xor
pusha
and
out
aam
jmp
imul
cmpsl
imul
mov
pop
mov
loope
fsubl
test
insl
sub
adc
pop
or
popf
icebp
and
pushf
inc
mov
push
out
cmp
stos
outsb
push
pop
sub
iret
mov
cmc
push
pop
add
sub
xchg
insl
pop
sbb
push
sbb
mov
xchg
or
rorl
arpl
xchg
cs
ljmp
addb
and
push
repz
add
and
cmpsl
mov
mov
mov
popf
ljmp
inc
pop
push
mov
cs
loope
xor
sbb
sbb
xchg
sub
inc
inc
fwait
mov
sarl
enter
movsl
enter
loope
xor
or
std
test
ficompl
ret
test
jge
jbe
sti
pop
and
lcall
in
lea
mov
mov
jp
mov
sbb
fs
test
clc
sbb
inc
or
sbb
fs
add
dec
cmp
mov
insb
enter
orb
push
mov
jae
xor
sbb
push
lds
fwait
xor
rclb
sub
test
push
imul
pop
xchg
movsb
xchg
imul
mov
loope
mov
mov
pop
test
data16
add
dec
jp
adc
ja
mov
pushl
shrb
out
ret
jb
jg
mov
pop
cmp
mov
aaa
ret
xor
push
pop
scas
sub
xor
test
adc
xor
mov
mov
adc
or
mov
cmpsb
mov
lods
in
mov
sub
and
aas
scas
int
jns
push
xor
add
test
shll
fsubrs
int
pop
xchg
fisubs
xor
cs
xchg
and
or
push
int3
icebp
push
dec
fiaddl
out
int3
xlat
xor
add
jns
push
cmp
cwtl
jne
push
pop
jnp
adc
and
push
mov
push
xchg
pop
mov
and
andb
jg
adc
fimull
je
push
sub
or
mov
mov
divl
jnp
jge
leave
push
in
ja
mov
mov
adc
adc
mov
movsb
inc
stos
push
push
pop
es
ljmp
cmp
arpl
jno
inc
sub
out
mov
sub
push
out
mov
xchg
mov
mov
pop
je
int
lds
loop
out
test
jmp
std
jg
sbb
jnp
push
fs
loope
mov
lret
out
xchg
fstl
clc
jb
ja
and
leave
fmull
je
or
inc
scas
lea
or
mov
int3
xchg
sarb
xor
into
sbbb
cwtl
or
lahf
int3
add
inc
das
mov
int
pslld
and
xor
adc
addl
decb
ror
or
out
divps
cmp
xor
daa
dec
lods
test
addr16
movsb
int3
sub
xor
insb
adc
xor
notl
adc
add
sti
pop
push
and
lcall
test
dec
mov
xchg
mov
inc
dec
sbb
pop
or
lret
pop
in
or
or
xor
and
int3
xchg
ja
pushf
and
popf
lahf
and
mov
dec
push
addl
mov
add
mov
into
push
lock
adcl
daa
xchg
mov
nop
push
inc
sar
adc
jecxz,pt
in
mov
or
pop
mov
iret
fldenv
je
sub
jmp
cmpsb
loopne
scas
mov
mov
movsb
scas
daa
mov
mov
movsb
xchg
cwtl
sub
movsb
jp
push
subl
pop
aad
xchg
lock
or
sti
or
into
mov
xor
or
fcmovbe
push
adc
out
adc
cmp
push
shlb
lods
lcall
cltd
or
xor
jp
pusha
sahf
pop
xorb
sbb
push
ss
jb
rol
into
aad
lret
test
xor
daa
insb
add
jle
pop
push
fsubl
rolb
pop
pop
icebp
sub
mov
adc
sub
push
sti
xchg
xchg
int3
sbb
and
cltd
insl
xlat
testl
mov
or
in
out
inc
or
icebp
cwtl
inc
aam
push
test
popf
bound
sbb
mov
jnp
leave
jo
fldl
cmp
je
pop
sub
pop
notl
sub
sub
stc
ret
cmp
dec
int
pop
xor
das
adcl
movsl
push
sarl
popa
add
test
and
shlb
icebp
fisubrs
and
stc
push
and
jge
into
push
mov
gs
mov
dec
pop
jno
push
rcrb
test
aad
rol
insl
sbb
add
js,pn
push
sub
pushf
add
xor
add
dec
jo
push
in
or
hlt
test
ds
rorl
dec
xchg
and
adc
sbb
cmpsl
sub
shlb
mov
sub
out
mov
push
xchg
outsb
add
ds
sub
mov
iret
in
lock
imul
sub
out
lret
lds
inc
out
mov
jb
sub
adc
adcl
es
push
in
addb
mov
push
or
rorl
lcall
mov
cltd
cld
mov
pop
or
mov
xchg
sahf
or
pop
sbb
mov
add
and
ljmp
add
popf
inc
dec
cmp
pop
mov
jb
mov
mov
fisttpll
mov
push
lods
mov
push
push
cmc
arpl
xchg
fidivrs
test
xchg
xor
aas
push
mov
mov
xor
sbb
add
mov
xlat
dec
xchg
cld
push
mov
jae
in
jae
stos
jecxz
push
mov
in
sbb
mov
loop
xchg
ss
test
or
mov
and
lock
test
in
ja
pop
sbb
pop
sbb
sti
inc
pop
andl
packuswb
add
adc
add
cmp
add
lret
jle
or
push
sub
cli
cmp
jge
jo
mov
hlt
add
sub
dec
inc
mov
call
repz
lea
add
push
jnp
xchg
push
sub
test
xchg
push
sbb
xchg
add
sub
pusha
dec
cmp
add
call
push
lock
stos
dec
rolb
xorb
xor
loop
repnz
or
pop
repnz
popf
aad
stos
xchg
sbb
jmp
movsl
mov
fiadds
dec
push
jmp
jnp
jmp
arpl
shlb
cmp
adc
arpl
comiss
mov
pushf
xlat
rcrl
pop
lret
in
push
sub
cmpsb
pop
xlat
out
scas
pop
sbbb
or
mov
orb
scas
sbb
jp
stc
fadds
mov
inc
rcrl
es
lods
sbb
xor
push
ja
sub
push
xchg
xor
mov
mov
jno
loopne
cmp
add
pop
mul
std
mov
cli
adc
mov
pop
mov
pop
add
or
inc
pop
pop
adc
sbb
pop
push
sbb
sbb
add
js
mov
shl
lcall
or
stos
xchg
rclb
ss
jns
mov
ja
cmp
popf
jb
pusha
xchg
pop
rorb
mov
mov
sbb
imul
fldl
push
dec
imul
dec
repz
mov
loope
mov
icebp
pop
lods
popf
xor
jge
sub
add
out
or
xlat
adc
repz
mov
out
movsl
inc
rclw
lahf
sbb
push
mov
jno
lret
dec
arpl
out
xor
jne
jmp
decb
icebp
push
dec
stos
fadds
mov
sub
or
xor
cmpsb
popf
or
dec
adc
mov
iret
sbb
int
subl
sub
neg
jl
xchg
sub
lahf
cmpsb
pop
outsb
stc
mov
push
and
rorl
sahf
leave
ljmp
lds
daa
inc
inc
jnp
out
inc
dec
movsl
bound
inc
stos
mov
fidivl
jno
sub
arpl
faddp
gs
fs
loope
mov
mov
mov
bound
shll
mov
mov
jle
icebp
dec
in
sbbb
jp
fnstenv
jno
pop
inc
out
jp
iret
mov
pop
jge
dec
dec
lock
test
ret
cli
pop
call
in
je
bswap
pop
je
clc
mov
jbe
daa
or
push
fimuls
pushf
lods
inc
sub
in
push
fs
pop
cmp
mov
pop
mov
xlat
mov
sti
adc
xchg
pop
mov
adc
arpl
xlat
aaa
in
mov
shrb
dec
jecxz
les
mov
popf
mov
push
push
mov
jnp
das
pop
sub
fsub
push
sbb
mov
adc
dec
icebp
xchg
mov
dec
fucomip
into
sub
pusha
outsb
lock
sbb
xchg
int
mov
mov
jo
pop
leave
push
add
outsb
jns
add
clc
jle
pusha
out
xchg
mov
iret
ret
xor
shrb
push
xorb
outsl
xchg
insl
xchg
js
fstps
pop
into
subb
dec
mov
pop
or
sub
xor
push
into
test
sbb
inc
out
iret
out
hlt
sbb
popa
loopne
pop
add
pop
sbb
sub
adc
addr16
rcrl
mov
jmp
and
lcall
dec
leave
push
sbb
hlt
cmovns
push
rolb
xchg
ret
push
xor
call
into
jae
sbb
negb
shrl
repz
ror
fwait
pop
out
cmp
pop
jae
adc
clc
jg
mov
gs
cmp
rcll
test
rcrl
xrelease
sbb
push
cmp
jge
lahf
enter
movsl
pop
and
or
sbb
push
mov
mov
inc
das
mov
inc
dec
xchg
xchg
mov
push
jo
repnz
lock
and
mov
and
push
xor
fwait
add
enter
xor
int3
scas
adc
out
jo
rcrl
jmp
inc
and
and
sbb
push
test
sahf
push
rcll
fs
je
and
adc
cmp
jb
push
jl
aas
jg
dec
jp
mov
rcrl
sbb
push
je
rcrb
and
pop
xor
jnp
enter
ja
or
sti
add
movsl
dec
inc
xchg
imul
cltd
fs
idivl
inc
jp
jb
sub
lret
loope
movsl
popf
dec
xchg
jno
sarb
loop
arpl
lahf
movsb
dec
out
dec
ficoml
sub
push
repnz
dec
call
aam
imul
add
xchg
test
mov
inc
push
shlb
pusha
stos
inc
cmp
test
sti
and
add
cli
insl
pop
sar
jo
xchg
jmp
inc
inc
test
lret
nop
push
jp
or
dec
loope
and
popa
jle
push
repz
fdivl
shl
inc
adc
ret
adcb
lds
mov
pop
inc
xchg
je
iret
add
scas
dec
and
pop
push
popf
js
sub
push
or
mov
insl
cltd
scas
je
aad
jns
xchg
and
clc
stos
mov
push
bound
enter
nop
xchg
aam
test
das
pop
std
imul
ja
test
sub
filds
ficoms
test
cltd
mov
loopne
dec
ljmp
push
xchg
inc
xchg
fidivs
jbe
clc
cltd
into
sbb
pop
aas
or
jp
repnz
sub
nop
imul
subb
shrl
jne
movsl
lret
push
add
sbb
in
pusha
dec
jl
leave
fdivl
sub
sti
jg
lods
jne
test
arpl
ds
sbb
ljmp
cmpsb
lcall
mov
jp
test
inc
dec
test
aam
push
cmp
xchg
xchg
out
xchg
mov
repz
cltd
rcrb
ret
jae
jb
pop
or
sbb
cmpb
pop
jge
and
sub
shr
cmp
imul
inc
pop
leave
in
scas
clc
push
xchg
insb
test
cmpxchg
aaa
cmp
push
pusha
mov
and
in
stc
outsl
cmc
add
sti
addr16
loope
lcall
lods
jecxz
aam
or
and
lcall
jno
mov
and
push
add
in
lahf
xlat
sbb
enter
bsr
add
lods
ss
ss
jge
test
push
fidivrl
pop
enter
insl
cltd
loope
and
mov
pop
jge
stc
lea
cmp
add
fisubrs
xchg
hlt
fbld
or
and
inc
inc
out
imulb
call
notb
jae
xor
mov
cmpl
mov
int3
mov
mov
dec
jns
sbb
pop
or
pop
sub
or
lods
dec
sub
xor
adc
iret
sub
jecxz
inc
mov
add
push
lods
xor
enterw
mov
ret
fnsave
push
jb
mov
add
clc
sbb
sbb
mov
add
sbb
fcmovu
iret
sub
cmp
push
pop
inc
or
sub
jmp
call
adc
sub
fisubs
daa
and
cmc
pop
inc
jmp
mov
shll
dec
ss
pop
leave
mov
jp
clc
loope
xchg
mov
test
call
cmp
insb
push
lahf
cmp
push
xor
cltd
fwait
loopne
divb
sbb
mov
push
fsin
jno
and
out
cwtl
xchg
push
xchg
add
pushf
icebp
add
aaa
or
inc
sbbb
jl
shrb
out
pop
cmp
dec
in
lret
jb
cmp
push
pop
sti
loopne
and
lea
pusha
or
mov
lcall
stc
cwtl
cli
inc
mov
sbb
adc
fdivrl
je
mov
sub
or
aas
sub
loopne
stc
mov
or
out
push
fldl
hlt
je
mov
or
xchg
outsl
and
leave
mov
aam
testb
mov
push
mov
pop
or
mov
pop
cmc
jns
and
pushf
inc
add
adc
test
sbb
jle
inc
inc
dec
addr16
fstps
adc
sub
rorl
imul
and
xor
fwait
pop
add
mov
xchg
pushf
pusha
lds
dec
inc
lds
cmp
lods
scas
sbb
xor
mov
lret
pop
cld
jne
pop
aas
mov
mov
js
fstpl
cmp
mov
push
sub
mov
outsb
popf
jecxz
jge
jb
adc
popf
xor
push
adc
cmp
fiadds
in
and
aaa
sbb
cltd
sub
push
and
into
es
aad
lcall
mov
sub
mov
and
aas
jnp
and
mov
incb
jne
or
push
push
add
test
xor
cld
lea
cmp
and
mov
sbb
dec
sarl
aas
push
inc
mov
push
mov
push
jg
mov
sbb
or
jns
push
pop
arpl
std
mov
push
push
fstpt
adc
cmc
add
rcrb
out
cltd
insl
fs
inc
pop
push
clc
xchg
xchg
xchg
test
cmp
andb
sbb
xor
push
mov
sarb
xchg
out
dec
testl
aaa
push
stos
arpl
pop
sub
fisubs
stos
imul
pop
clc
inc
and
jp
adc
jbe
cmp
lret
xor
mov
lds
push
jmp
test
adc
repz
push
mov
push
adc
sarb
insb
push
xor
iret
and
je
mov
cs
cmpsl
clc
xlat
repz
enter
pop
pop
insl
out
out
sub
xor
and
cmp
adcl
cmp
or
mov
test
lea
push
fnstcw
test
int
or
scas
xor
inc
adc
xchg
pop
scas
stc
add
mov
and
fucom
or
daa
jmp
test
out
push
loopne
or
or
cltd
lret
push
dec
ret
and
or
dec
ja
cmc
decl
cmp
push
in
fucomi
mov
or
stos
int3
out
cli
fdivrl
les
loope
loope
pop
repnz
sbb
test
sbb
and
ret
adc
fsubrs
dec
adc
nop
push
sahf
loopne
cmp
jle
bound
fiaddl
test
and
imul
jge
inc
insb
ret
jo
sub
rol
mul
pop
mov
pop
lock
push
fwait
stos
mov
add
shr
pop
outsb
in
data16
cmpsb
shll
in
xchg
inc
rcl
mov
daa
jge
adc
inc
push
jmp
add
jl
dec
pop
xor
cmp
in
addr16
jp
push
or
ficompl
aas
add
scas
mul
inc
scas
inc
fsubrl
jg
out
lcall
cmc
xchg
pop
mov
xchg
adc
xchg
maxps
jg
int
in
out
inc
cmp
xchg
in
mov
testb
mov
sub
inc
mov
imul
mov
repz
push
movsb
pop
or
mov
fildll
jle
push
dec
pop
orl
in
scas
mov
jb
loop
and
imul
adc
xor
daa
sub
ficomps
outsb
rorl
push
clc
inc
sbb
cmp
add
mov
cmpsb
sti
in
mov
add
jp
arpl
sti
cwtl
call
jns
inc
testb
adc
lcall
dec
xor
cs
push
add
out
shll
stos
push
gs
jge
andb
add
pop
xlat
jg
and
jle
pop
inc
lret
mov
and
js
loopne
xchg
stos
jne
fmuls
sahf
int3
pop
inc
cmp
inc
outsb
inc
data16
ss
mov
mov
cli
xchg
mov
test
nop
jnp
push
cs
jg
dec
and
xchg
loop
cmpsb
or
loope
negb
stc
xchg
cwtl
jp
dec
imul
add
mov
sbb
bound
lcall
jl
lcall
sbb
mov
addr16
pushf
in
sbb
test
or
out
mov
jle
jae
sub
int
sar
loop
cmp
lds
xchg
ficompl
sti
in
sbb
ret
inc
lcall
addr16
push
or
mov
leave
add
clc
stos
adc
mov
mov
loopne
loope
nop
in
popl
xchg
fistl
or
lds
add
xor
mov
in
pushf
out
mov
jmp
sub
leave
lret
sti
push
xor
sub
jo
pop
in
mov
ds
jle
or
int
out
test
leave
bound
ljmp
pop
in
gs
loopne
or
fnstsw
mov
mulb
lret
mov
mov
mov
hlt
mov
outsl
testb
pop
imul
add
cmp
imul
ljmp
negl
dec
enter
mov
push
pop
lcall
jne
movsl
and
and
cmpl
xor
fidivs
adc
jae
inc
or
pop
dec
push
out
imul
fwait
sbb
into
xchg
or
daa
ds
push
mov
and
lock
sti
data16
sub
sbb
cmpsb
cmp
adc
cmc
pop
pop
out
dec
mov
push
jg
push
mov
test
fildll
jmp
inc
cmc
sbb
push
insl
add
testl
fldcw
adc
popa
mov
adc
xor
jae
push
lods
out
jge
or
pusha
pop
lret
push
iret
jbe
mov
cmpsl
mov
mov
mov
rolb
xorl
jb
repz
adc
push
int3
imul
std
js
xor
std
inc
push
and
ret
push
cwtl
sbb
imul
push
xor
push
nop
push
jle
out
mov
dec
in
das
les
cmpsb
add
faddl
fcoms
popa
dec
sbb
divb
mov
ja
arpl
roll
lods
xor
mov
imul
mov
test
fs
cli
adc
mov
xchg
push
rcr
jb
imul
test
gs
int
mov
test
sbb
cmp
pop
inc
adc
xlat
fwait
jle
xchg
sub
sub
icebp
inc
sbb
pop
shl
mov
aas
pop
insl
pop
or
add
mov
sahf
mov
add
rep
mov
dec
inc
pop
loope
icebp
aaa
mov
in
ss
push
in
cmp
clc
inc
mov
out
cmpsb
and
mov
xchg
cmp
push
loop
xorl
xor
cmc
jb
and
xor
mov
or
loope
add
js
or
testl
xorb
je
bound
and
into
mov
test
jge
cmpsb
and
jno
stc
mov
sub
das
jno
leave
pop
jb
add
inc
inc
mov
stos
mov
inc
pop
xchg
xorb
sub
adcb
imul
xchg
mov
stc
xor
push
sub
lcall
mov
movl
mov
fsubp
mov
push
mov
fisubl
xchg
mov
cwtl
aad
hlt
popf
or
push
sub
loop
sbb
leave
push
sub
mov
or
imul
cmp
arpl
mov
push
loope
es
xor
dec
xchg
leave
jl
push
pop
sub
sti
cmpsb
xlat
shl
hlt
sbb
xchg
xlat
or
xor
jg
xchg
mov
mov
mov
cmp
popf
arpl
adc
xchg
mov
addb
adc
push
pmaddwd
outsb
pop
dec
int3
jno
and
inc
mov
mov
fwait
adc
je
jbe
jne
pop
cmp
jne
outsl
sti
les
pop
pop
dec
ret
sub
cwtl
cmp
xor
push
js
add
fsubrp
push
cmp
push
cld
jae
cmp
aaa
cmpsb
cmp
mov
jbe
into
outsb
jb
adc
out
sarl
mov
mov
ds
sub
inc
pop
pop
xor
sti
mov
aad
fadds
jmp
jbe
clc
sub
pop
scas
sbb
sbb
imul
es
fsubs
xchg
sti
std
sub
sahf
adc
popa
pop
lock
inc
jns
push
test
dec
jmp
enter
ss
mov
push
jno
in
cmp
clc
lahf
call
add
add
pop
imul
repz
daa
clc
mov
add
add
or
mov
js
test
mov
shrb
dec
aas
roll
add
or
mov
sub
push
lahf
aad
mov
popa
and
cld
dec
hlt
enter
fnstsw
std
pop
mov
cmp
inc
cmp
xchg
stos
mov
push
push
add
popa
rorb
dec
bnd
test
jo
lods
mov
mov
jns
sub
jno
std
sub
test
fprem
stos
in
mov
mov
out
adc
mov
jb
les
adc
sbb
in
xor
cld
mov
into
jne
stos
in
mov
dec
lods
movsl
mov
sbb
sar
pop
mov
ljmp
cli
addb
enter
lcall
jl
jbe
mov
sarl
jl
xor
mov
push
mov
or
add
ret
mov
insb
and
daa
mov
fisubrl
xor
xchg
dec
movsl
sahf
fmulp
mov
adc
rcrl
xor
inc
rorb
mov
jg
pop
jp
hlt
popa
sbb
pusha
push
jmp
aas
loop
xor
leave
mov
cld
mov
out
lahf
shll
loopne
mov
dec
loope
loope
lock
mov
xchg
cmpsl
pop
add
sub
or
push
shll
jg
xor
push
mov
or
push
lds
jmp
movsl
sub
pop
jno
out
js
sub
mov
test
in
xchg
in
and
lcall
insb
out
add
mov
push
mov
xchg
sub
pop
push
push
jae
lds
enter
sub
lea
popa
inc
cwtl
arpl
rcr
add
mov
dec
sub
pop
or
aam
cmpsb
movsb
inc
push
or
sbb
pop
ror
aad
jmp
shlb
mov
and
pop
addr16
cmp
inc
cld
mov
cmp
xchg
in
add
insl
ret
fadd
das
std
xor
shrl
cmpl
and
xchg
ficoml
loop
jb
clc
sub
mov
das
dec
std
or
sub
cltd
ret
push
outsb
sbb
loop
push
test
push
jge
scas
mov
ja
in
cld
mov
daa
cmp
ljmp
jp
cmp
adc
push
popf
clc
dec
test
dec
out
cmp
adc
sbb
fisubrl
scas
cmpsl
sub
int3
sbb
or
cltd
xor
cwtl
xchg
sahf
and
lea
je
insl
fimull
lods
push
push
leave
xchg
shl
pop
movsl
cmpsl
out
cmp
lea
jp
cmp
add
mov
scas
sti
cmp
popf
sub
inc
and
mov
es
inc
jb
mov
lds
jmp
add
lock
jmp
xor
push
cmpsb
bound
push
daa
ja
rcrl
mov
and
in
mov
fcoml
aaa
xchg
mov
aam
push
sbb
fwait
push
push
test
inc
xchg
xor
dec
sarl
sahf
add
sub
ret
aaa
sbb
jnp
push
loopne
add
adc
es
cld
out
ror
jnp
scas
cwtl
push
push
xchg
pop
pop
insb
gs
out
jae
or
mov
lcall
addr16
outsl
pop
xchg
add
cwtl
clc
imul
test
sub
cmp
pop
ds
pop
enter
mov
sub
es
mov
notb
dec
arpl
shrb
stc
jp
outsl
sti
pushf
pusha
outsb
sbb
std
xchg
call
negl
cwtl
es
mov
sti
movsb
andb
jge
jo
test
add
pop
add
add
pop
lcall
ret
mov
sub
cld
mov
or
dec
push
aam
fiaddl
rorl
imul
jne
mov
jne
lock
add
bound
sarb
dec
hlt
les
jp
jg
lret
test
mov
or
loopne
sbb
push
sbb
mov
out
ficomps
pop
and
mov
mov
cmp
mov
sbb
xchg
shr
aas
or
shrb
cmp
shlb
sub
inc
xor
shl
test
lds
pop
bound
jne
je
das
cmp
cmp
sub
push
aas
sub
icebp
add
cmpl
negl
mov
test
rorl
std
dec
push
xor
gs
fwait
test
sub
ds
test
dec
lret
push
push
pop
rcr
cmpsb
xchg
lods
add
mov
scas
mov
fstl
jp
lahf
mov
jge
or
lcall
push
xchg
xchg
pop
sbb
dec
pushf
or
mov
or
push
mov
and
and
sub
dec
mov
adc
inc
sub
cmp
sub
mov
lcall
mulb
out
xlat
mov
lods
sahf
jl
push
xchg
fdivrs
fwait
lock
cmp
adc
incl
jl
cltd
scas
cli
insl
sbb
test
xor
jno
jae
aas
insb
adc
add
mov
jae
mov
fsubs
fstl
sbb
adc
ret
or
stos
pop
xchg
imul
insl
data16
insb
mov
repnz
lahf
fs
dec
xor
sub
insb
xchg
cmp
dec
sub
addr16
subl
and
mov
adc
shl
inc
iret
shll
xchg
rorb
cli
ret
movsb
mov
push
jmp
mov
sbb
pop
xlat
test
pusha
pop
into
cmp
idiv
jmp
sbb
in
add
rol
mov
subl
pusha
in
mov
xchg
or
or
add
mov
imul
jge
mov
cmpsl
add
mov
pop
lods
push
lock
lahf
negl
dec
insb
pusha
sub
xchg
mov
mov
jl
cmpsl
sbb
lcallw
jae
adc
nop
dec
push
jg
cmp
mov
sbb
movsl
mov
push
inc
mov
sti
xchg
and
daa
mov
push
decl
sahf
imul
movsl
int
xchg
xor
scas
mov
lahf
stos
cmpsb
idivb
das
test
rorb
movsb
js
je
mov
movsb
jae
jns
rorb
xchg
and
out
xlat
xor
add
dec
pop
lcall
or
lock
in
xchg
push
jbe
lahf
mov
add
lea
jmp
es
cli
aaa
gs
sub
js
cmpsb
push
xchg
xchg
xor
xlat
aas
cmp
or
mov
cmc
addr16
pop
xor
fdivs
jg
jl
std
jge
in
and
adc
test
mov
cmp
cmpl
jge
out
insl
int
dec
insl
push
xlat
and
shll
cltd
pop
mov
lods
mov
cli
aam
xor
push
push
shll
pop
mov
or
or
adc
int
mov
mov
fcmovnbe
fcompl
imul
mov
add
clc
inc
inc
cmp
cmc
push
dec
or
fcomp
mov
clc
push
mov
fwait
je
bsf
xchg
xchg
push
push
xor
ss
mov
gs
testb
pop
hlt
sbb
push
pop
cs
cltd
cmc
sub
ret
cmpsl
xchg
mov
push
cmpsb
mov
sar
fwait
sub
jae
jnp
sbb
sub
insl
xlat
mov
push
and
jmp
jae
test
push
cmp
lods
or
pop
jae
scas
push
and
ficomps
lcall
lods
les
inc
sub
test
dec
or
mov
lds
dec
or
mov
and
test
and
loope
push
dec
mov
add
cmpb
lret
ss
clc
cld
mov
mov
jnp
bound
push
rorb
jmp
fdivrl
in
cs
adc
aad
icebp
sub
sarb
adc
mov
inc
ror
sub
mov
cmp
jl
sbb
pop
add
call
jg
mov
mov
pop
pop
into
cmc
mov
sbb
dec
push
inc
jecxz
cmp
mov
idivl
pop
sub
lahf
inc
jmp
hlt
jmp
push
dec
xor
fadds
or
aad
int3
jmp
push
lret
ror
pop
cmp
mov
lock
and
or
out
jmp
jle
gs
shlb
jne
call
add
out
int
pop
insl
pop
cltd
push
add
mov
iret
lods
ljmp
mov
add
cmpsl
xchg
add
fnstsw
dec
sbb
aad
lea
push
jle
jmp
mov
out
shlb
add
call
push
push
lret
iret
mov
pop
push
xchg
mov
mov
mov
push
std
test
in
lock
mov
mov
lret
lcall
dec
lea
enter
pop
iret
fistpl
stos
popf
xor
jp
adc
clc
jl
xor
fisttpl
mov
pop
dec
xor
cmpsb
leave
or
xchg
stc
js
mov
rcrl
aas
fstpt
cli
mov
mov
fdivp
adc
jo
cmp
jecxz
pop
mov
jp
pop
jcxz
imulw
arpl
fisubl
inc
mov
mov
sbb
dec
xor
mov
sbb
stos
pop
add
and
xchg
fnsave
in
negl
or
mov
popf
sub
or
adc
cmpsl
dec
mov
add
mov
lahf
xorl
cmp
in
insl
and
test
imulb
push
lock
rcrl
mov
test
dec
sar
mov
cmp
lcall
and
inc
pop
out
call
or
mov
push
outsb
and
gs
es
xchg
in
into
and
push
pop
dec
stc
push
dec
or
mov
inc
cmc
push
in
and
stos
cmp
or
cmpsl
leave
mov
adc
xchg
into
xor
or
pusha
add
aas
sbbb
jg
jp
imul
xlat
cmc
movsl
sub
leave
pushf
xchg
fisubrs
clc
jo
or
int3
jl
stc
cmc
cmpsb
imul
jge
les
pop
pop
incl
cld
sub
icebp
adc
and
cld
or
add
in
push
shll
dec
shll
and
jno
data16
mov
sbb
enter
jae
pop
cmp
add
cmc
ja
add
and
addb
mov
jle
cmp
js
repz
and
test
pop
jl
xlat
fldenv
leave
out
inc
sub
jmp
jnp
mov
movsb
icebp
pop
inc
daa
pushf
rclb
insb
push
cmpsl
dec
test
xlat
adc
fucom
gs
add
arpl
dec
or
sub
ret
push
in
rcl
mov
icebp
jp
aas
xor
sub
push
add
jge
enter
sbb
popa
imul
js
insl
scas
mov
cmp
imul
shlb
pop
insl
repz
push
out
inc
loope
inc
xor
dec
pusha
jae
je
add
stos
push
out
repz
nop
push
xor
pop
enter
das
pop
mov
lcall
dec
lds
or
jge
cld
and
outsl
std
dec
rorl
fldt
outsl
bound
push
test
lock
int3
andb
mov
repnz
sbb
cld
cmp
lcall
or
out
mov
in
jmp
lock
rcll
inc
mov
out
adc
dec
xor
or
aaa
mov
movsb
xchg
test
dec
sbb
das
js
inc
lods
shr
jno
jo
adc
ror
fsubr
mov
subl
imul
test
aas
stc
xor
fidivrs
cmp
divb
mov
cld
movsb
movsb
jl
cli
inc
fistps
pop
es
sbb
mov
cld
sar
inc
notl
int
mov
push
sar
jo
adcl
push
xchg
stc
push
sbb
mov
xlat
cmc
cmpsb
int
push
jo
push
ficomps
sbb
stos
mov
aaa
jl
test
and
push
cmp
push
pop
mov
mov
sbb
pop
dec
out
mov
pusha
stc
das
std
aas
jg
mov
shll
in
fiadds
js
lea
int3
and
inc
ss
mov
stc
pop
push
mov
push
mov
bnd
mov
ljmp
xchg
jae
cmpsb
jge
xchg
xchg
xor
std
in
or
jae
push
pusha
loop
lahf
clc
sub
push
incl
loope
cmp
or
push
inc
loopne
rorb
cmpsb
test
push
in
sti
mov
pushf
jne
mov
and
lret
mov
push
movsl
call
jo
or
call
sub
pop
out
inc
into
in
cmpsl
gs
adc
loopne
jmp
cltd
xchg
mov
test
jo
mov
add
jns
jno
loope
mov
outsl
fptan
fs
mov
aam
fcom
push
xchg
lret
pop
pop
push
and
out
xor
mov
sti
mov
hlt
popa
cltd
inc
cmpb
xor
inc
sbb
cmp
mov
daa
jae
scas
xlat
ds
sbb
ret
push
and
sub
cmp
xorl
inc
cmp
leave
lret
imul
js
popf
xchg
inc
mov
sahf
cmc
ss
sbb
repz
pop
ja
test
push
mov
cld
xchg
sbb
es
stos
inc
xchg
mov
push
push
pushf
inc
mov
sub
scas
pushf
dec
mov
addl
jmp
push
aam
mov
leave
out
push
mov
cmp
cmp
jne
in
cmpsb
mov
sbb
inc
xor
add
sub
cmp
dec
pop
nop
sbb
jno
lea
int
jecxz
stos
stc
std
sti
xchg
and
inc
mov
fcmovu
push
jnp
arpl
roll
pop
pop
add
pop
sahf
jno
mov
inc
mov
icebp
add
xor
xchg
icebp
add
insb
rol
shll
test
push
into
mov
pop
cmp
sbb
out
lcall
lea
enter
gs
je
lds
les
jo
in
push
jb
push
and
push
mov
in
push
and
jae
mov
adc
cwtl
pop
sti
jns
into
enter
imul
test
loope
jb
pop
xchg
xor
add
mov
sahf
xor
mov
xor
and
inc
cmp
cmpsl
jmp
and
bound
jo
push
mov
lods
cmp
cmpsl
hlt
repnz
cmc
xchg
jmp
cmp
stc
jp
adc
pop
pop
stos
ljmp
sbb
ret
cmp
mov
xor
subl
call
popf
or
pop
movsl
dec
dec
xchg
inc
in
or
dec
xchg
xor
scas
dec
imul
in
jl
sub
sarb
daa
cld
sub
xchg
add
push
jb
mov
ja
pop
mov
cwtl
popa
fildll
aad
push
in
sub
mov
fadd
pop
test
or
mov
mov
jo
mov
xchg
push
insl
shrl
out
rclb
in
cmp
push
adc
mov
jl
mov
sbb
std
pop
jbe
pop
pushl
xchg
inc
pop
movsb
arpl
imul
sbb
xchg
jbe
mov
fwait
xchg
popa
mov
inc
jecxz
push
pusha
jle
std
int3
cwtl
shr
mov
shlb
mov
ret
in
jmp
dec
aad
fstpl
push
xor
push
xor
push
andl
hlt
je
je
xchg
call
test
jp
adc
xchg
das
mov
and
aad
and
outsw
jge
lcall
or
xlat
mov
xchg
add
mov
jg
xchg
jnp
cmpsl
scas
xorl
mov
insb
ja
out
movsb
jnp
xchg
cmp
sub
xor
xchg
pop
lock
jp
xor
lods
sbb
mov
std
and
xorl
pop
pop
data16
jp
xchg
push
ja
imul
xlat
lock
inc
mov
pop
sub
xchg
mov
push
sbb
xchg
jmp
and
cmp
add
mov
aaa
lock
add
ret
shlb
xlat
imul
mov
sbb
and
jbe
sahf
std
in
bound
mov
mov
pop
push
movsl
sbb
stc
jle
call
aaa
and
fdiv
pop
sbb
and
mov
in
fdivs
fidivrs
gs
xor
loop
inc
popf
fsubrp
mov
adc
shr
imul
lret
jle
test
jns
in
stc
xor
jg
mov
push
and
pop
fsubr
pop
add
test
out
inc
jle
mov
pop
int3
dec
or
cli
xor
ljmp
pop
dec
cmp
loop
push
aas
shll
push
jae
das
pusha
scas
xor
xchg
mov
sub
sub
mov
inc
outsb
mov
jb
or
jp
negl
add
stc
xchg
cmp
sbb
xchg
pusha
mov
icebp
arpl
or
in
sbb
mov
pushf
out
or
jmp
shl
or
mov
sbb
fidivl
fwait
rcrl
inc
adc
jg
das
rcl
lahf
fists
insb
pop
or
js
dec
enter
adc
outsb
fiadds
fdivs
sbb
pusha
loope
aad
rclb
lret
jbe
adc
cmp
mov
dec
inc
push
orb
pusha
bound
mov
push
fnstcw
sub
add
mov
imul
in
js
push
dec
push
mov
xchg
cltd
sti
ds
mov
xor
test
or
test
stos
or
mov
xor
inc
out
xchg
xchg
mov
jb
fistl
dec
sub
push
andb
ret
jge
into
and
xchg
mov
cmp
dec
mov
addb
les
dec
stos
add
cwtl
inc
movsb
das
subb
sbb
xchg
push
or
push
mov
jmp
dec
lock
add
sbb
inc
inc
fistpll
adc
add
into
loope
xchg
xchg
or
lcall
hlt
mov
mov
and
jge
inc
jbe
shl
test
das
add
in
dec
adc
jl
lods
out
inc
xchg
rclb
mov
test
pop
jmp
inc
mov
pop
adc
out
out
jp
into
sti
add
sbbb
sbbb
mov
cmpsb
xchg
add
mov
and
mov
xchg
push
scas
jp,pn
dec
stc
push
arpl
pop
bound
ja
loope
jo
jl
push
pop
xor
out
ja
lds
mov
add
iret
add
cmp
out
lods
sbb
mov
jp
lods
push
shlb
call
cwtl
cmp
shr
sbb
mov
xlat
lods
fwait
inc
inc
sub
pushf
sbb
xorb
and
cs
inc
insb
push
pop
lcall
xlat
jae
pop
mov
mov
xchg
or
insb
lods
cmp
fisubs
es
rcr
mov
out
mov
out
lret
lret
clc
fstpt
loop
clc
xor
cmp
pop
push
dec
mov
xchg
mov
lea
xchg
cmp
lea
add
pusha
cmpsl
stos
push
popf
in
jle
xchg
std
jl
xor
and
dec
mov
dec
cmc
and
shl
btc
ret
pop
lcall
mov
or
sti
iret
add
rolb
jno
pusha
inc
push
out
lods
test
sbb
imul
xchg
push
ja
cmp
push
movb
iret
push
inc
test
mov
scas
notl
pop
sbb
mov
inc
cmp
mov
add
adc
xlat
iret
mov
call
imul
mov
ret
cli
testb
popf
xchg
aad
fldcw
push
ds
shr
jnp
xchg
xchg
roll
les
lods
ret
ret
ss
test
pop
push
sbb
pop
gs
and
jp
mov
dec
stc
push
lahf
aaa
push
cmp
push
sbb
push
xor
xor
mov
jne
je
push
xchg
daa
mov
adcl
iret
lods
sbb
into
js
in
jb
pop
rcrl
xlat
mov
push
jl
mov
sbb
iret
fimull
daa
add
jmp
pop
mov
out
mov
cmpsl
int
lahf
fstpl
movb
in
test
pop
not
movsb
lds
jmp
inc
sbb
jb
stos
or
mov
in
pop
dec
mov
shrl
and
loop
hlt
lods
and
dec
cmp
sub
iret
decl
enter
fldt
enter
outsb
inc
mov
xchg
cmp
adcl
xor
cmp
add
scas
cmp
sbb
push
push
aam
or
imul
pop
adc
mov
mov
mov
jb
das
cmp
add
filds
sub
popa
push
rorl
adc
and
xor
or
movsb
pusha
repz
andl
cmp
pop
push
mov
hlt
mov
dec
dec
add
stos
jmp
jecxz
cmp
out
loope
movl
out
fisttps
mov
and
lods
aam
mulb
nop
inc
loope
mov
pop
jge
aas
in
mov
mov
pop
andb
icebp
mov
jmp
rcrl
jge
jmp
ret
xchg
dec
inc
mov
add
jge
xchg
ja
ss
stc
mov
jne
dec
out
adc
or
push
lea
dec
xchg
mov
dec
mov
inc
cwtl
outsb
pop
je
adc
add
xchg
xor
repz
lahf
dec
adc
adc
arpl
enter
add
fld
roll
jp
inc
inc
lea
test
push
cmpb
dec
clc
in
xor
add
in
lds
xlat
dec
push
add
lock
aaa
fisttpl
mov
or
dec
pushl
or
aas
ret
cmpb
sub
scas
and
and
imul
dec
out
addr16
sub
sbb
mov
repnz
cld
aam
xchg
add
jae
mov
rcrl
inc
mov
in
pop
sbb
xlat
arpl
in
test
jns
cmp
push
and
out
lcall
inc
mov
js
out
das
mov
lret
ja
cmpb
and
std
scas
hlt
jo
bound
insb
fcomp
push
or
leave
andb
inc
add
in
jae
rcl
sbb
mov
int
cltd
pop
sub
test
lods
xchg
mov
xchg
and
or
and
mov
shrl
pop
push
sbb
adc
fs
dec
test
icebp
xchg
jl
sub
test
push
ss
jns
xchg
aas
xor
stc
and
aas
fistpll
repnz
adc
sub
sbb
pusha
aas
popl
push
xchg
out
js
mov
in
and
pop
ficoms
leave
flds
pop
ret
sub
pop
adc
test
ret
cmp
lds
push
das
daa
out
leave
jne
cmp
mov
adc
jle
pop
ret
cwtl
add
jmp
xchg
out
jae
test
mov
inc
mov
aaa
into
add
sub
cmp
movsb
and
popa
fisubs
hlt
lret
xchg
hlt
mov
dec
std
mov
int
xchg
push
xchg
push
push
iret
mov
movb
sub
xchg
daa
pushf
ljmp
sub
add
std
cmp
inc
sbb
lahf
lock
imul
es
and
xor
xor
call
push
cmc
jle
inc
out
jg
xchg
negb
jg
ret
and
gs
mov
adc
lods
push
push
rol
popa
and
aam
lock
ret
cmp
cmpsl
fistps
ds
jnp
sub
call
dec
xor
dec
nop
xchg
xchg
cld
out
cmp
adcb
stc
dec
adc
lods
adc
mov
rclb
std
push
xor
movsb
out
repnz
pop
sbb
mov
out
shll
stc
mov
lahf
rorl
in
cltd
sbb
aam
lods
enter
xchg
inc
mov
ljmp
fwait
add
inc
mov
adc
inc
out
mov
in
das
shll
mov
je
stos
mov
lods
sub
aam
dec
xchg
sub
je
lret
aad
movsl
jp
fcomps
jg
xchg
sub
cld
lods
orl
aas
mov
ret
loopne
lret
adc
cmp
sahf
rcll
push
lea
or
in
mov
test
add
pop
nop
lods
aas
subb
add
push
dec
mov
mov
push
inc
mov
push
push
arpl
test
inc
push
lcall
push
insb
cmp
test
rcll
add
mov
add
dec
pop
mov
sarb
mov
sub
fdivp
adc
sub
stc
arpl
push
sub
jo
push
xor
ret
add
dec
ljmp
xchg
push
icebp
test
movsb
lock
jl
add
pop
fstpl
std
sbb
movsb
push
sub
jmp
inc
dec
shll
rol
and
add
and
push
push
inc
mov
inc
and
loopne
dec
insb
xor
mov
inc
sub
xor
in
dec
push
test
add
pop
push
outsb
pop
jae
arpl
dec
sub
jmp
sbb
out
rcr
xchg
adc
add
lcall
arpl
or
cs
iret
or
dec
xchg
fidivrl
addr16
rcr
fwait
cmp
xchg
or
lret
test
jnp
push
sub
ljmp
test
lahf
mov
xor
rorb
inc
movsb
hlt
dec
mov
add
adc
sahf
shl
adc
js
jne
jp
inc
push
mov
nop
mov
dec
in
and
adc
aas
pop
or
jg
push
add
sub
xlat
jmp
mov
ds
pop
fs
out
mov
or
push
test
mov
jmp
cs
dec
popf
std
dec
pop
add
pop
js
insl
out
out
jmp
pop
inc
dec
mov
iret
mov
or
out
cmc
sbb
arpl
call
adcb
cmp
mov
xchg
push
jmp
loope
add
push
arpl
jl
dec
cltd
pop
in
mov
sbb
jp
push
push
cld
push
in
scas
or
ss
je
cmp
loope
leave
push
cmp
test
jle
sbb
mov
ret
addr16
mov
push
enter
stos
pop
clc
pop
rclb
cltd
mov
mov
mov
push
rcrl
aad
or
xor
aad
scas
cltd
loopne
lret
shr
xor
pmulhw
scas
push
out
add
mov
std
xchg
scas
jo
pop
pop
pop
mov
fisubrs
incb
ret
jle
cmpsb
movsl
dec
pushf
in
mov
mov
cmp
lcall
jae
clc
xchg
lahf
add
aaa
and
and
xchg
loopne
push
test
push
mov
cmp
add
leave
xchg
cli
dec
popa
inc
jecxz
rorl
sub
cmp
jge
jmp
cld
in
clc
mov
bound
xchg
mov
pop
sub
add
adc
jns
lea
push
mov
xchg
addr16
stos
add
std
adc
negb
mov
dec
push
cmc
mov
pop
decb
mov
jmp
and
dec
fsubrp
fistpl
adc
jge
xor
mov
lcall
cli
or
jo
jg
jne
rclb
cmp
aam
out
adc
cmp
push
mov
jno
or
insl
jns
pop
loop
dec
sbb
inc
mov
jne
sbb
rorl
outsb
pop
nop
xchg
pop
outsl
dec
mov
popf
nop
push
sub
push
daa
mov
sub
shlb
sbb
loopne
inc
or
mov
dec
pop
mov
dec
or
fbld
pop
mov
push
daa
ss
xor
aam
inc
mov
aad
or
push
sbb
adc
inc
and
es
cwtl
sahf
out
std
stos
mov
sub
ret
add
lahf
jp
rcl
push
inc
and
pop
int
cwtl
cmp
out
mov
lea
lcall
or
lods
add
pop
mov
fst
adc
jle
push
inc
cmp
and
inc
cmp
dec
arpl
sub
mov
icebp
test
dec
mov
mov
jecxz
xor
adc
cld
pop
mov
sbb
jae
pop
daa
inc
sbb
adc
pop
std
imull
in
mov
xlat
lahf
sbb
inc
in
mov
in
imull
test
add
mov
push
hlt
pushf
push
fwait
xchg
pushf
std
loope
jns
ds
out
and
popf
pusha
lret
pop
inc
sbb
jmp
in
stc
dec
rorl
pop
xor
sahf
dec
sbb
and
or
lret
mov
fwait
es
dec
push
xor
loopne
imul
dec
xchg
xchg
adc
xlat
mov
dec
movsl
jp
add
icebp
in
repz
pushf
jns
scas
cs
dec
fs
add
adc
lea
adc
xchg
cmp
mov
push
jae
in
gs
mov
push
out
xchg
cli
xchg
jae
in
mov
js,pn
mov
fwait
fwait
dec
add
add
insl
ret
insb
pop
lods
cmp
shrb
sbb
ret
cmp
push
lea
data16
rcrb
and
and
add
fdivrs
inc
insl
lret
stos
inc
out
pop
mov
cmc
dec
pop
sub
out
mov
leave
aas
xor
mov
jns
pop
mov
xchg
divb
xor
insl
mov
jno
repnz
xor
test
in
cmpl
pop
adc
mov
js
filds
and
loope
xor
loope
inc
test
movsb
cwtl
cmpsl
mov
xchg
xchg
jmp
cmp
repz
mov
cmp
adc
leave
rclb
xor
out
xor
xchg
sbb
les
pop
ds
push
mov
pop
jle
push
sub
fimull
dec
outsl
les
cmp
mov
clc
add
hlt
loop
sbb
or
cmpsb
xlat
and
lock
subb
mov
or
inc
mov
inc
gs
push
es
push
imul
test
aas
mov
push
arpl
fcoml
push
dec
push
in
dec
xorb
jbe
xchg
dec
inc
hlt
lahf
cmpsl
xor
sar
and
sbbb
sahf
inc
int
adc
out
and
lcall
dec
pop
pop
xor
push
inc
inc
add
mov
jl
push
jle
mov
jecxz
mov
ja
shll
lock
pop
in
mov
adc
cld
bound
out
sbb
sbb
jbe
mov
sbb
fidivs
mov
call
imul
fwait
ja
cltd
adc
outsb
ret
mov
loopne
mov
or
fbstp
daa
xchg
mov
sub
rorb
addr16
dec
gs
xchg
cmp
xchg
in
jo
neg
gs
mov
mov
add
push
loop
fs
fidivs
cmp
inc
ds
pop
in
xor
sahf
sbb
aam
or
pop
in
sub
out
gs
in
xlat
push
jl
mov
cmp
xchg
and
es
data16
leave
test
inc
dec
push
sbb
add
push
or
xchg
or
inc
or
gs
cs
inc
push
or
mov
adc
jbe
and
sub
cmc
dec
nop
jmp
aam
jnp
mov
sahf
dec
loop
iret
dec
fwait
hlt
or
jl
xor
pushf
mov
lods
push
adc
xchg
icebp
divl
mov
arpl
and
add
mov
and
push
imul
mov
sbb
mov
mov
or
out
push
out
xchg
push
inc
or
fimuls
mov
add
stos
enter
int
pop
aas
call
jge
jmp
repz
add
insb
push
mov
push
sub
jmp
scas
aas
mov
pop
subb
add
adc
adc
pop
push
out
ss
lds
lret
adc
int3
add
addr16
inc
xlat
or
xchg
pop
orb
or
dec
out
movsl
pushf
xchg
mov
xor
sub
push
sbb
cmp
dec
imul
dec
adc
icebp
repnz
and
pop
cmp
sbb
jb
push
inc
fsubrl
stos
pop
dec
pop
and
addl
jmp
mov
ret
movb
mov
repnz
push
loop
fdivrs
sbb
and
or
imul
mov
daa
pop
js
push
xor
mov
cmp
sub
add
lcall
andb
movsb
repnz
sub
rcr
das
sub
and
cltd
dec
cmc
dec
xor
push
pop
push
fcoms
mov
arpl
insl
or
pop
shrl
lret
sub
mov
mov
rcr
sbb
pushf
sub
jae
xchg
fimuls
imul
inc
or
pop
sbb
mov
and
call
jle
sti
jle
jle
jle
ds
jae
push
or
lds
push
and
jg
int3
mov
js
push
in
lcall
ljmp
aam
lret
test
rcrb
adcl
sbb
xchg
imul
sbb
aas
mov
lods
sub
ret
dec
push
xchg
mov
sbb
pusha
repnz
lret
inc
cmpsl
inc
out
add
negw
or
test
rcr
pop
mov
nop
ljmp
movups
cmp
xchg
inc
hlt
dec
mov
or
jne
adc
lock
jns
jmp
clc
cmc
jp
imul
into
or
mov
rolb
push
out
jo
add
mov
fists
sub
fs
orb
pop
add
es
dec
cld
pop
lods
jle
andb
addr16
mov
mov
sub
sbb
inc
push
clc
subb
sub
inc
gs
lahf
mov
iret
pop
cmp
add
loope
jmp
xor
popa
mov
movsb
cmc
jne
mov
push
mov
in
mov
inc
adc
jl
dec
mov
sbb
mov
mov
scas
mov
ss
cmp
mov
imul
out
pop
push
inc
add
fisttpl
push
mov
loop
test
adc
jmp
jae
cmp
pop
pop
imul
pusha
loopne
orb
pop
cwtl
outsl
xchg
loope
and
and
lea
sbb
mov
rdmsr
repnz
ja
sub
popw
test
cmp
xor
and
sahf
in
dec
cmp
rorl
mov
lcall
lds
sub
int3
mov
cli
mov
sbb
in
arpl
pop
lahf
xchg
or
push
and
add
xor
ja
pusha
rolb
addr16
add
shll
xchg
sahf
stos
aas
mov
lods
jmp
mov
shll
or
shl
push
insl
push
inc
pushf
xor
scas
pusha
push
add
mov
pop
jae
or
repnz
lahf
mov
xor
mov
add
jbe
stc
daa
push
mov
dec
call
mov
push
mov
stos
add
jnp
dec
lods
and
or
movsb
jg
rcrl
and
pop
mov
pop
fwait
push
sarl
pusha
xor
mov
jl
xor
or
add
rcr
icebp
mov
jne
mov
fldenv
lea
ret
cwtl
nop
push
xchg
cmp
lods
mov
jo
dec
mov
rcll
mov
mov
xchg
or
icebp
jmp
cmp
sbb
sbb
push
pop
cmpsb
sbb
xchg
pop
inc
out
lcall
jb
jle
movsb
pop
xrelease
jl
jns
lock
sub
cmp
jge
add
inc
or
push
loope
sub
jns
jb
cmc
idivl
cmp
outsb
cmp
jo
fdivl
push
sahf
addr16
fsubrl
orl
and
adcl
test
adc
and
ss
out
fimull
lret
sbb
dec
outsl
mov
and
stos
mov
mov
jb
addb
inc
popf
in
and
xchg
insl
scas
out
push
push
cltd
jle
inc
aaa
push
jg
scas
insl
xor
and
adc
mov
push
xor
xor
pop
jno
subb
mulb
inc
lods
cmpsl
xchg
lock
adc
xor
add
test
mov
pop
jecxz
mov
les
jnp
adc
xor
push
sub
in
das
sbb
mov
es
jg
ja
pop
push
orl
add
jg
repnz
mov
sub
in
inc
inc
pop
push
xchg
je
cmp
push
out
or
add
add
push
sbb
clc
std
xchg
jmp
adc
jl
jle
mov
push
imul
cmp
mov
xor
push
cmp
cmp
or
add
sub
arpl
inc
mov
add
pop
lcall
jge
leave
sub
jae
xchg
sbb
stc
rcrb
sti
adc
cmp
sti
sub
pusha
jge
xchg
jo
insl
cmp
or
xchg
subl
and
aaa
pusha
in
arpl
push
sahf
xchg
mov
dec
lock
imul
cmp
sub
outsb
nop
xor
ss
push
cwtl
cmp
push
adc
cmp
out
pop
mov
fstpt
adc
push
cmp
mov
imull
btc
push
dec
loope
push
fwait
jnp
sub
jecxz
fwait
das
sub
call
inc
aas
mov
aam
sub
jl
pushf
dec
jnp
sbb
mov
ss
inc
lret
sti
insl
cmpsl
pop
push
les
dec
cltd
or
push
mov
xchg
jmp
add
xchg
lods
adc
mov
dec
repnz
and
push
addl
mov
scas
xchg
pop
dec
sub
inc
out
imul
sub
jnp
or
fldl2e
xchg
fcomp
add
mov
cmp
dec
cmpl
ss
dec
je
sub
push
mov
outsl
aad
rol
pop
xchg
cmp
ja
test
dec
outsl
popf
mov
pop
xchg
fwait
add
popf
xor
sub
outsl
ret
mul
adc
dec
cmpsl
lahf
mov
inc
aaa
mov
repnz
rcrb
jne
test
andb
jge
ss
leave
cmp
test
int
daa
cmp
test
or
sahf
mov
adc
mov
or
or
fidivs
imull
das
cmp
add
add
xchg
add
jns
mov
sub
mov
fistl
movsb
sti
xor
outsl
rorb
inc
jle
push
mov
add
mov
and
sbb
push
pushl
cmp
push
xchg
mov
pop
add
inc
lea
sub
lcall
sub
mov
mov
mov
fistpl
jnp
inc
or
sbb
push
push
push
jno
mov
adc
out
xchg
or
mov
jno
cmp
out
sub
add
ss
jg
stos
inc
and
mov
inc
stc
enter
out
rcl
out
cmc
xchg
std
mov
lock
mov
in
ret
sbb
pop
push
sub
and
leave
sub
adc
lea
aaa
hlt
fwait
xchg
loopne
pop
cld
add
xchg
sub
ljmp
andb
sbb
xchg
arpl
add
lahf
sub
cmpsl
xor
mov
dec
bound
mov
cmp
adc
leave
push
adc
dec
sbb
rolb
jecxz
mov
das
pop
pusha
xor
fldl
xor
mov
clc
or
es
iret
dec
push
inc
dec
mov
pop
aam
xor
pop
mov
scas
inc
lods
imul
pop
add
mov
mov
dec
push
lcall
inc
sti
outsb
and
inc
xor
daa
cmp
sahf
mov
jnp
test
dec
mov
mov
or
in
inc
xchg
cld
dec
loop
jo
adc
xchg
xlat
mov
mov
int3
lea
out
sub
fwait
imul
loopne
ss
cli
pop
fidivrl
dec
daa
and
mov
fs
jecxz
or
inc
jo
iret
fs
sbb
rclb
cmp
xchg
mov
ja
loopne
sub
and
ret
mov
fsts
rcrl
xor
shll
dec
add
mov
xchg
aaa
pop
in
and
jbe
sahf
or
mov
hlt
lods
lds
test
pop
daa
push
cmpsb
xlat
sbb
ret
sub
hlt
mov
aaa
fs
cmpsl
daa
loope
add
sbb
mov
pop
out
mov
les
addr16
addr16
int3
je
das
sahf
loope
movsl
mov
xor
dec
push
stos
and
ss
xchg
lods
add
pop
cmpsl
add
or
addr16
push
and
aad
xor
addl
add
xchg
movsb
pushf
adc
mov
mov
xchg
addr16
jge
xchg
daa
hlt
repnz
and
or
loope
push
lds
mov
or
inc
mov
pushf
js
mov
adc
pop
fcmovbe
or
xchg
adc
xorb
popf
and
xor
xlat
jecxz
stos
and
inc
ret
dec
mov
sarl
popa
sbb
lds
popl
or
mov
sarl
outsb
cmp
push
push
lds
orb
scas
and
ret
mov
dec
fisttpl
outsb
shlb
int
adcl
xor
add
mov
das
mov
pop
pop
scas
mov
cwtl
push
js
inc
inc
push
outsb
popa
mov
and
pop
cmp
pop
push
xcrypt-ctr
cmpsl
pop
push
lods
mov
test
xor
imul
ljmp
scas
dec
or
fdivrp
or
add
push
ja
movsl
pop
inc
mov
lock
pop
push
mov
enter
aaa
sbb
loop
movsl
shrl
or
mov
and
ss
or
inc
sarb
pop
pop
test
int
add
sub
xchg
sbb
sahf
jle
leave
xor
lock
lret
and
shll
pop
or
mov
jnp
sarl
or
push
xchg
data16
stc
enter
push
enter
ficoms
and
jle
or
jns
add
inc
push
aam
loop
int
imul
insl
and
or
add
aaa
stos
xchg
test
cli
lods
shrl
xor
stos
gs
lea
dec
movsb
push
jae
cmp
cs
jmp
lret
add
mov
es
add
fs
fldenv
aad
and
cmp
or
xchg
add
push
push
or
leave
popf
cmpsb
outsl
jecxz
in
or
insb
out
xor
cmp
mov
jns
fst
cmc
sub
xor
dec
icebp
in
insb
aam
repz
scas
xchg
cltd
jnp
imul
insl
xchg
sbb
pop
popf
push
hlt
pop
jl
loop
pusha
adc
xorb
outsb
fidivl
mov
repnz
dec
clc
out
std
and
jb
push
js
sbb
mov
pop
jno
jb
push
sarb
fdivs
nop
aas
lahf
add
push
testl
sub
test
add
call
cmpsl
xchg
out
mov
das
aaa
jmp
or
test
jne
aad
lds
hlt
fs
cltd
xchg
insl
fists
xchg
ljmp
adc
xor
subl
mov
pop
ds
adc
sarl
scas
pop
shll
loope
and
ljmp
lret
mov
or
push
cmc
and
xchg
lret
mov
mov
in
dec
aam
setnp
jecxz
xor
lods
xchg
in
in
fs
cmp
or
sbb
lret
cwtl
aas
jmp
pushf
xor
jo
mov
insl
xorl
mov
aam
and
push
cmp
lret
add
mov
int
lock
mov
dec
fwait
stos
pop
test
sbb
cmpsl
sbb
push
addl
and
cltd
repz
cmc
push
pop
xorl
ljmp
push
and
loopne
out
ljmp
loope
imul
movsl
mov
jae
sub
in
mov
icebp
mov
adcl
pop
cs
insb
das
stos
mov
sbb
insb
jns
mov
fistl
mov
pop
ss
insl
cmp
xor
jle
jecxz
cwtl
jne
pop
xchg
pop
fs
pop
push
mov
mov
mov
and
or
and
push
ret
dec
sub
push
xchg
insb
inc
shll
push
clc
mov
dec
scas
and
repz
int
pop
mov
loop
or
psllw
pop
xchg
rcrl
add
stos
dec
or
bound
test
dec
add
in
daa
fwait
sbb
push
mov
lret
into
push
dec
popa
fstl
sti
jnp
ss
stos
bound
hlt
fs
xor
sub
pop
jecxz
fs
xchg
imul
mov
shlb
aam
mov
jecxz
mov
pushaw
mov
stos
nop
stos
xor
rcrl
push
es
ja
js
cld
or
cwtl
fwait
gs
and
push
xor
xlat
cmc
sbb
nop
out
adc
arpl
push
incb
xchg
outsb
xor
idivl
xlat
iret
shll
cld
dec
mov
jo
adc
stos
in
movsl
imul
fcoml
jns
push
sub
pop
das
orl
pop
das
pop
js
ss
jg
mov
xchg
fcmovne
cmpsb
mov
or
mov
inc
jnp
push
pop
mov
mov
jp
mov
dec
das
daa
lret
xor
arpl
mov
dec
bound
or
sub
push
and
aas
int
mov
negl
iret
lret
out
loope
mov
sarl
jns
cmpl
sbb
mov
test
int
or
addr16
jns
stos
and
sbb
jg
or
sub
and
xchg
arpl
jb
roll
fcomi
jae
jb
jmp
ficoms
test
push
int3
dec
dec
mov
ljmp
adc
or
ret
jp
scas
mov
pop
push
test
aad
lock
sbb
pop
scas
gs
push
lock
adcb
mov
pop
jle
mov
loop
xchg
in
test
mov
push
stos
fsubrs
add
fistps
dec
add
stos
repz
popa
cmp
pushf
push
cld
lcall
add
rol
jmp
enter
inc
ret
call
add
in
jge
in
iret
enter
mov
shl
je
mov
sub
aas
xlat
sbb
mov
and
idivl
outsl
jb
cmp
xchg
cmp
sahf
jge
int3
cmc
hlt
jb
movsl
roll
movsb
test
or
mov
and
adc
repz
pushf
inc
loope
out
int3
ja
add
adc
mov
mov
call
test
xor
or
jmp
push
test
xlat
xchg
sbb
popf
rolb
loope
xlat
jbe
pop
xor
fdivrl
sti
push
cld
filds
and
jg
add
or
cld
outsb
out
into
cmp
mov
inc
lods
and
push
xchg
rol
mov
jae
inc
dec
ret
shll
and
movsb
dec
lds
cmp
jmp
rcl
ret
pop
repz
push
ja
jmp
cmp
mov
adcb
fwait
push
out
push
sub
sbb
mov
mov
out
cs
push
inc
mov
push
cli
xor
je
roll
fnsave
popa
add
cmp
push
push
idivl
sub
sbb
insl
jns
dec
enter
add
in
xchg
scas
ret
lea
lods
pop
stc
and
mov
outsb
call
cmpsl
inc
xor
pop
xor
jo
fucomip
call
addr16
lahf
push
or
push
lahf
mov
jae
mov
adc
lret
add
stos
mov
jp
gs
aaa
cmp
cmp
cwtl
push
sub
push
popf
push
mov
inc
sti
aaa
nop
repnz
dec
or
test
adc
out
xor
lods
popf
sub
push
xchg
mov
adc
and
mov
push
xchg
mov
push
shr
add
pop
cmp
sbb
sub
cmp
cmc
dec
add
cmp
dec
sub
mov
loopne
ljmp
int3
and
test
adc
js
xchg
pop
movsl
and
cmp
out
addr16
and
call
iret
lds
repz
cmpb
push
daa
rcr
inc
icebp
fdivr
mov
out
mov
add
aaa
sub
sbb
fwait
mov
sbb
icebp
stos
xor
fwait
and
cmpsl
jle
and
push
bound
mov
imul
int3
jp
or
xchg
cmp
xchg
xchg
out
iret
inc
ficoms
cli
mov
fdivrs
sub
outsl
jo
movsb
ret
jnp
loop
mov
arpl
out
pop
jle
dec
roll
and
fcoml
sub
mov
mov
pop
xchg
pop
inc
stos
add
loope
sbbb
addb
push
roll
pop
repnz
xor
das
imul
in
push
xchg
sbb
xchg
lret
fcompl
lahf
cli
sbb
sarb
in
pop
cmp
or
sbb
fistpll
aas
les
sbb
xchg
mov
daa
push
mov
jp
sarb
fiadds
mov
xchg
cmpl
push
aas
push
or
idivb
or
call
mov
clc
inc
add
test
jb
imul
xor
and
ja
int3
push
mov
xchg
inc
or
andl
xor
lods
push
bound
outsl
mov
push
jbe
xchg
jg
cli
cmp
es
mov
test
divb
rcll
sbb
insb
sti
orb
nop
push
dec
lea
faddl
cmpsl
stos
jp
xchg
mov
add
jmp
insl
movsl
popa
subb
mov
loop
cmp
lea
push
add
insl
sbbb
in
xchg
sahf
pop
cmp
mov
test
xchg
pop
fisttps
jle
inc
outsb
adc
dec
imul
imul
pop
dec
or
lock
leave
dec
inc
mov
jg
jmp
push
adc
test
mov
push
mov
rol
sti
dec
xor
fstpl
lock
dec
dec
sub
and
inc
xchg
aad
rclb
cmp
push
mov
xchg
or
jge
xchg
push
sar
shlb
mov
jae
dec
test
mov
or
pop
lahf
dec
ljmp
mov
cld
or
and
lcall
xchg
inc
cmc
xor
and
mov
pop
ljmp
out
push
jge
ficompl
repnz
arpl
lock
stc
cmpsb
xchg
imul
mov
mov
cmp
je
inc
adc
in
xor
icebp
ljmp
xchg
aas
out
sar
in
imulb
sub
arpl
ljmp
mov
dec
test
pushf
mov
xchg
loope
mov
pop
roll
out
rep
enter
gs
aam
scas
fcomps
and
imul
or
and
call
mov
adc
and
sub
mov
stos
out
popa
nop
and
jmp
add
jb
dec
shll
lock
xchg
enter
roll
pop
enter
cmp
push
outsb
in
je
or
sbb
icebp
js
lock
push
movnti
scas
les
in
sub
jge
ret
sbbb
loopne
mov
mov
bound
and
cltd
dec
out
lret
das
mov
ror
icebp
xchg
mov
mov
add
and
cmp
sub
scas
xchg
jns
jo
addr16
cmpsb
dec
fsubrs
iret
mov
mov
ret
sbb
ficompl
fildll
test
cmpsb
mov
sbb
fcmovne
add
push
outsl
mov
add
lcall
jo
cmpsl
icebp
sbb
pushf
ss
mov
sub
aas
mov
pop
push
or
sbb
pop
lret
xchg
cmp
cmp
and
or
jg
adc
sub
or
rcll
fcompl
mov
pop
popa
cltd
sahf
es
cld
adc
roll
push
in
test
lods
sbb
push
addb
push
enter
gs
jp
in
pop
push
sbb
jge
dec
adc
cmp
xor
rol
xor
lods
or
ret
xchg
add
pop
mov
into
mov
scas
xchg
mov
mov
xchg
and
fcoms
xchg
addl
imul
push
dec
mov
frstor
frstor
cltd
sbb
push
mov
ja
hlt
mov
inc
call
jp
or
hlt
cltd
sahf
or
imul
rcrl
mov
pushf
or
jle
loop
xchg
mov
add
out
xor
nop
xchg
rcrb
aad
in
lret
mov
mulb
cmpl
fs
sbb
stc
inc
movsb
and
cmp
lcall
or
rolb
adc
lret
call
or
les
lcall
scas
enter
rorl
fadds
loop
pop
out
addr16
les
push
jae
pop
sahf
xor
mov
rorb
bound
insl
ds
lds
data16
popa
push
mov
out
inc
xchg
jb
sbb
add
and
lods
lock
daa
repz
insb
stos
insl
lea
icebp
idivb
arpl
fidivs
or
dec
mov
cltd
or
ss
mov
sub
jnp
pop
pop
outsb
movsb
mov
rol
scas
mov
ret
int
testl
ret
jns
push
fistl
push
loop
jp
int
jg
ss
jge
mov
xor
add
ficoms
adc
les
cwtl
xor
push
popa
aas
mov
or
and
adc
adc
aas
rorb
adc
jp
xchg
push
daa
jp
push
jl
lcall
pushf
push
std
cmpsl
add
out
pop
mov
pop
sub
cmp
cmpsl
add
int3
xor
xorl
repnz
dec
nop
test
inc
lcall
hlt
pop
pop
repnz
push
pop
xlat
push
repnz
insl
movsl
adcl
fs
lods
int
in
lahf
or
jae
cwtl
data16
or
jns
jmp
hlt
fildl
push
xchg
mov
dec
test
jp
pusha
adc
sub
cmp
in
ja
pop
in
and
push
aas
mov
adc
push
dec
aam
aam
push
in
arpl
fwait
and
fidivrs
das
or
mov
js
and
mov
out
mov
push
cmp
lds
jb
inc
rcrl
pop
loopne
test
push
imulb
jae,pt
push
add
adc
push
popf
push
add
push
inc
and
or
xor
in
sbb
add
push
iret
inc
insb
out
or
add
xchg
pop
xchg
ds
addr16
pop
push
add
shl
and
ficoms
iret
inc
mov
xchg
mov
xchg
daa
divl
mov
jo
in
js
mov
sbb
lea
rcrl
repnz
fidivs
lea
jne
sti
out
aaa
sub
aas
movsl
mov
inc
lea
sub
mov
sbb
xchg
inc
sub
imul
fwait
xchg
xchg
rclb
testl
bound
inc
push
jl
lret
push
test
pop
dec
mov
push
inc
cld
test
fstpt
fwait
jno
xor
xor
ljmp
iret
push
inc
notb
adc
rorl
ret
pop
fsubl
lret
lods
lret
push
dec
lods
adc
pop
es
in
jmp
outsb
sarl
dec
decl
jae
aam
dec
jecxz
shrl
push
lret
into
rol
jl
pop
mov
sub
outsl
je
mov
stos
dec
fimuls
mov
mov
insb
mov
adc
loopne
mov
mov
stc
out
jecxz
nop
push
fnstsw
out
leave
dec
lea
cltd
cmp
push
inc
mov
pop
cli
xor
ljmp
cmpl
popa
xchg
sarl
andl
jecxz
loop
xchg
inc
sub
mov
or
sub
cmp
sbb
jns
movsl
sbbb
movsl
sahf
push
jmp
jle
lods
jae
inc
xor
sub
sbb
sbb
push
push
mov
ss
in
push
pushf
cmp
outsb
sbb
out
jl
push
ljmp
mov
loope
inc
test
repnz
rcr
loopne
dec
scas
pushf
mov
mov
jecxz
pushf
cmp
or
xor
cmpsb
mov
aad
adc
mov
or
jle
std
pop
daa
scas
fimuls
imul
jg
mov
adcb
test
push
std
jg
xchg
and
dec
notrack
or
rcll
stos
xorl
or
int3
insb
xchg
sub
dec
aas
push
push
and
fisttpl
jecxz
lret
push
mov
fadd
mov
xor
pop
outsl
add
inc
loope
push
dec
popa
dec
into
jle
xor
dec
jo
mov
mov
cmp
mov
notl
popa
imul
outsl
jl
mov
lcall
xor
mov
inc
mov
fsubl
loopne
addb
xchg
sbb
pop
sub
push
bound
jl
imulb
mov
stc
cmp
jno
fldenv
pop
popl
divl
rclb
into
jg
ret
je
sarl
ret
int
add
dec
cmp
xor
mov
and
stc
mov
aad
xor
insb
xlat
jnp
bnd
and
bswap
or
ds
push
push
mov
sbbl
out
stos
mov
mov
pop
les
xor
dec
movb
lock
sbb
adc
lock
cmp
dec
sbb
dec
mov
ljmp
fcoms
xor
in
enter
mov
roll
movsl
mov
test
sbb
add
repnz
lods
dec
cmpsb
repz
cltd
rcrb
or
add
dec
xor
push
lods
jmp
or
or
sbb
xor
inc
xor
and
mov
rcrb
popf
ds
in
and
cmp
lds
fldenv
sahf
lar
mov
rclb
test
je
das
popf
insl
jne
shrl
xchg
mov
jno
fiadds
in
xchg
push
or
stc
sub
sub
in
sub
ja
icebp
xor
loopne
push
arpl
movsl
aam
or
int3
mov
sbb
adc
jne
dec
mov
mov
loop
aam
cmp
mov
jb
and
les
xchg
adc
push
mov
jo
mov
jae
fs
mov
dec
lcall
loope
or
sub
pusha
popf
push
fistps
lret
jmp
je
cmp
je
inc
xor
cmp
outsb
lret
scas
mov
out
xor
pop
inc
lcall
cmc
leave
cmpsl
test
loop
inc
scas
and
xchg
notb
fsubrs
dec
mov
and
out
testb
mov
testl
data16
xor
jle
ret
pop
lret
out
push
out
jne
mov
jnp
inc
pop
and
addr16
add
loope
xchg
lahf
jg
scas
lods
sbb
cmp
movsl
mov
lea
mov
dec
mov
inc
lds
cmp
mov
jge
lcall
add
daa
subl
mov
mov
lods
ffreep
inc
sti
xor
ljmp
movsb
popa
dec
in
mov
mov
and
xchg
pop
in
cmp
inc
add
scas
insb
jnp
or
xor
pop
xchg
js
mov
mov
jb
add
fsub
stos
add
repz
popf
push
mov
sub
cmp
cs
pop
cltd
out
or
and
iret
jmp
cwtl
das
cltd
cld
lods
aaa
jbe
sbb
js
add
in
je
leave
mov
dec
xor
jnp
xchg
push
out
or
out
call
popf
or
mov
push
in
lea
dec
rorb
add
mov
negl
in
outsl
lret
adc
jl
lods
outsl
std
scas
dec
jmp
mov
add
xor
mov
add
jl
jecxz
pop
mov
es
lods
and
inc
inc
mov
or
loopne
jns
jo
dec
mov
lret
cmp
mov
push
xor
pop
xchg
nop
mov
cmp
mov
and
bound
mov
sub
ss
andl
imul
int
outsb
fsts
xlat
test
inc
adc
push
popa
addr16
push
les
inc
rcrb
out
lahf
popa
mov
icebp
and
jbe
out
lods
or
mov
mov
mov
int3
aas
mov
adc
dec
push
jg
mov
xchg
sbb
insb
roll
aas
pop
jns
cld
add
ljmp
or
cmc
or
lret
out
push
sub
repnz
add
sbb
sbb
or
lahf
pop
gs
jecxz
lods
sti
add
jns
jae
inc
adc
lock
aas
pop
mov
xor
push
fildl
or
fdivrp
cmp
cmp
test
pusha
lret
data16
ja
pop
jae
aaa
sbb
cmc
cmp
or
sahf
pop
cmp
push
movsb
ret
jno
push
push
jp
inc
mov
pop
mov
out
orl
cs
jmp
dec
jecxz
cmp
inc
pop
fsubl
out
clc
and
hlt
mov
test
repz
lahf
dec
les
shll
ja
sti
test
add
mov
dec
lods
inc
sbb
xchg
test
scas
lods
icebp
in
and
rol
push
and
add
lock
sub
subl
mov
cmc
sahf
mov
mov
scas
xchg
cmp
icebp
in
inc
xor
cmp
pop
inc
xchg
mov
cmp
push
in
out
xorl
mov
xchg
addr16
add
sub
xor
je
cmc
loop
lahf
dec
aas
push
pop
loopne
jge
adcb
mov
mov
push
fsubl
icebp
ret
mov
xor
ljmp
cmpsl
cwtl
sbb
mov
js
mov
or
ror
fsubs
shrl
iret
lahf
sbb
mov
lret
mov
mov
ret
sbb
fcmovb
in
jo
cmpsl
mov
mov
xchg
fnstenv
and
sub
popa
lods
popa
and
enter
add
sub
repz
or
mov
adc
sub
pop
shr
xor
cwtl
sub
xorb
adc
push
and
jbe
mov
cmp
enter
scas
sbb
popf
inc
pop
fcomps
or
pop
xor
pop
mov
sar
fnstcw
adc
xor
mov
loop
jg
andl
mov
xor
add
dec
cmp
aam
or
jmp
sti
push
in
xchg
arpl
movsl
cmpsb
pop
je
add
and
scas
jp
pop
aaa
out
loopne
mov
lret
fwait
dec
cmp
xor
popa
clc
inc
push
cmpl
xor
or
jb
mov
stos
jae
lods
aam
pop
push
int
cs
fisubl
xchg
pop
outsl
sub
or
rcrl
mov
loopne
xchg
ret
imul
call
adc
xchg
rolb
xchg
icebp
add
incb
jl
test
fdivrl
or
mov
in
lods
jmp
lcall
xchg
jmp
mov
xchg
cmpsl
clc
push
jns
sahf
sub
fiaddl
xorb
cmp
call
insb
add
mov
loopne
jne
or
mov
add
das
push
or
fst
aad
addr16
outsb
inc
rclb
inc
roll
sbb
cs
in
push
xlat
shl
fisubl
pop
mov
ja
mov
pop
xchg
jae
loopne
push
lods
adc
test
xor
fisubs
mov
xchg
cmp
push
pop
pop
xor
mov
in
popf
pop
or
sbb
cli
movsl
lds
aaa
jae
lods
inc
insl
in
jp
movsb
dec
xor
sbb
cmp
dec
jne
hlt
jne
sti
add
or
arpl
mov
ljmp
jno
ret
xchg
dec
adc
adc
jmp
repnz
pop
fcmovbe
and
notb
out
into
adc
xchg
cltd
xchg
or
incl
pop
daa
inc
iret
or
add
lods
push
sbb
int3
sub
insl
push
sbb
fsubs
inc
sbb
out
cmp
jle
ds
fsubs
stos
loopne
shrl
dec
test
fisttps
cld
imull
iret
mov
or
into
mov
dec
xchg
and
gs
data16
push
mov
fwait
cltd
mov
jbe
mov
xor
push
rol
push
nop
sbb
enter
ret
icebp
std
pop
inc
ds
cltd
bound
stos
popa
pop
aaa
pop
lahf
cmp
fldenv
out
cmpb
in
jns
nop
dec
stos
cmp
leave
add
mov
adc
in
push
jp
fisttps
adc
adc
lret
jmp
xor
das
cmp
rcll
push
cmp
jae
js
testb
hlt
and
pop
xor
lods
lods
and
mov
sbb
out
xchg
lcall
pop
test
test
jne
mov
fldenv
jp
push
sbb
adc
inc
adc
and
cltd
outsb
inc
push
mov
cmpsl
lea
jb
mov
dec
jnp
es
push
loope
lea
std
es
mov
rcrl
fsub
mov
dec
ljmp
iret
add
in
sub
adc
mov
enter
cs
nop
sub
sub
dec
sahf
inc
mov
jle
aam
mov
or
adc
pop
and
push
mov
fs
cmp
cmp
fsub
mov
mov
in
ss
dec
aam
int3
pushf
push
xor
subb
inc
push
jge
push
mov
mov
pop
push
arpl
ds
cmc
in
fadds
push
xor
arpl
clc
dec
jmp
mov
jmp
mov
inc
push
fwait
push
fisttps
icebp
mov
sub
and
mov
adc
mov
int3
pop
xchg
mov
jmp
sub
mov
jg
mov
bound
jge
test
adc
pop
out
mov
mov
mov
nop
movsl
cmp
arpl
shlb
jle
cmp
out
add
xor
jb
out
add
insb
cmp
lock
push
mov
lcall
sub
mov
mov
add
imulb
jp
pop
aam
popf
out
gs
movsl
pop
xchg
pop
je
clc
lahf
test
mov
jno
dec
hlt
sub
jae
lods
pop
jecxz
lahf
xchg
mul
fldt
xchg
pop
adc
xchg
xor
and
insl
mov
fisttpl
xor
dec
fidivl
sbb
movsb
xchg
add
push
loopne
daa
rsqrtps
popa
add
xchg
les
xor
jp
add
and
ljmp
scas
lods
mov
insb
pop
addl
or
adc
adc
push
fistps
movsb
pop
faddl
ljmp
ds
dec
cli
inc
out
rcl
push
xor
add
pop
xchg
dec
ficoml
insb
arpl
ror
cmp
jnp
push
ss
nop
mov
mov
sub
xor
fsubrl
push
mov
pushf
jg
popa
adc
push
leave
xchg
ret
bound
fsubs
xchg
std
mov
hlt
insb
leave
pop
in
or
cmpsl
sub
lret
das
dec
dec
adc
add
lds
mov
jecxz
pop
int
cmpsl
arpl
adc
jns
ja
cwtl
aaa
mov
pop
sarb
or
test
push
aam
leave
stos
xchg
das
add
cwtl
xor
mov
xchg
sub
xchg
mov
inc
push
pop
insl
mov
fstpl
movsl
fbld
adc
outsb
mov
add
xchg
pop
dec
lds
out
and
fnstcw
std
add
in
stos
stos
mov
dec
jmp
imulb
pop
add
mov
je
dec
mov
or
rolb
lret
cmp
and
int3
dec
ljmp
adc
addr16
pushw
push
loopne
leave
getsec
sahf
inc
mov
pop
xchg
mov
dec
sub
inc
mov
inc
pop
add
test
mov
mov
je
sbb
fildll
sub
push
inc
lcall
lock
or
pop
pop
mov
movsl
jo
jg
jle
orb
jg
loope
xor
mov
mov
outsb
jbe
sub
and
dec
pop
mov
adc
lcall
sbb
push
imul
cmp
pop
inc
sarl
xor
mov
adc
add
std
pop
ds
jne
cmp
sub
int
jno
mov
sbb
mov
iret
mov
pop
insb
cmpsb
sub
or
aad
cwtl
decl
lcall
stc
xchg
and
cmc
dec
dec
lock
lss
xchg
sbb
imul
mov
roll
sub
jmp
add
jo
rorb
cmp
out
test
jnp
bound
out
stc
and
mov
into
pop
mov
sub
inc
cmp
cmp
xchg
cmp
stc
cs
dec
lea
sbb
sub
pop
xchg
jno,pt
ja
mov
pop
mov
mov
imul
pop
in
call
neg
out
mov
push
xchg
sbb
rorl
adc
jo
and
xchg
adc
dec
cmpsl
in
jnp
clc
aas
xor
mov
movsb
out
sub
stos
into
inc
out
xor
push
loope
es
dec
ja
cmp
xchg
repnz
nop
or
lea
aaa
inc
in
jbe
negl
dec
pop
jbe
lock
sub
or
inc
sub
mov
pusha
mov
scas
neg
jne
push
movsb
das
pusha
es
pop
retw
int3
test
ds
push
and
and
cmpsb
shrl
push
out
lods
cltd
push
push
icebp
sahf
movsl
fildl
iret
mov
push
jne
jmp
stos
push
xor
cmc
call
js
in
mov
sbb
mov
fnstsw
gs
movsl
cmpsl
xor
cmp
add
and
pop
lock
call
and
imul
mov
mul
stos
fists
in
cld
sbb
mov
ljmp
xor
ljmp
stc
dec
xchg
xor
mov
ljmp
cmp
cmpsb
ficoml
xor
arpl
and
bound
ja
jbe
jne
repz
aas
sbb
rolb
sub
xchg
mov
leave
jns
fldcw
mov
jo
jp
cmpsb
nop
mov
mov
cmc
xchg
mulb
pop
jmp
lds
lahf
out
jg
xor
in
jae
loope
inc
ja
mov
inc
fstpt
jae
mov
shll
and
xchg
sbb
out
inc
jle
subps
xchg
jne
lahf
or
loopne
cmc
xchg
imul
push
icebp
or
int
ljmp
add
xchg
and
cmp
inc
add
cld
sbb
push
mov
jns
mov
push
out
jmp
sbb
xchg
fldenv
push
in
or
sub
inc
xor
lock
insb
mov
test
sti
dec
fwait
or
xor
add
lahf
lock
or
or
push
je
arpl
jnp
mov
fidivs
mov
lock
jbe
sbb
into
ret
gs
lods
jne
inc
jmp
cmp
pop
adc
pxor
add
and
addr16
adc
mov
adc
orl
insl
ljmp
ret
aad
dec
mov
and
dec
mov
dec
jge
pop
xchg
repnz
xchg
shll
mov
and
mov
dec
popf
idiv
xor
push
push
jo
xor
mov
sub
aam
or
nop
and
rcll
pop
mov
test
lahf
out
jno
jnp
lds
xorb
and
repnz
repz
popa
add
cld
push
jno
mov
pop
ret
cmpsl
jecxz
xor
mov
sbb
pop
xorl
xchg
stc
dec
dec
in
or
insl
xchg
stos
adc
es
ljmp
mov
inc
add
hlt
fldenv
sbb
shrl
xchg
outsl
stc
xor
jl
ret
pop
cmp
xchg
mov
jns
outsb
add
lods
pop
xor
daa
cmp
xchg
inc
add
or
out
cli
dec
and
pop
push
notl
int
std
adc
jg
inc
imul
mov
fisubrs
push
xor
pop
cmpsl
int3
xlat
into
mov
loop
pop
or
nop
pop
mov
dec
push
daa
cwtl
je
hlt
fsubrs
rcrb
or
out
mov
sbb
clc
jge
mov
test
xor
jns
mov
js
mov
cli
xor
push
lock
mov
mov
insb
mov
fbld
mov
ljmp
fwait
xorl
adc
pusha
cltd
dec
imul
jmp
xchg
addr16
and
jmp
and
inc
cwtl
inc
testb
rorb
cwtl
jle
shrb
ret
push
jbe
and
lea
add
or
inc
lcall
lock
adc
push
leave
insl
jp
jb
outsl
jno
inc
jmp
inc
mov
clc
lock
cmpsl
and
mov
pop
pop
sti
cmp
add
ror
or
cmp
int
aaa
cmp
ljmp
loope
std
popf
notl
pop
cmp
arpl
cwtl
mov
or
in
test
dec
fdivr
negl
sbb
dec
sti
mov
pop
lret
rol
add
arpl
cmp
pushf
mull
frstor
lret
nop
xor
ret
xlat
repz
mov
in
icebp
push
rep
cs
out
test
sbb
add
jb
xchg
mov
mov
mov
jge
mov
pop
mov
out
mov
hlt
scas
cmp
loop
in
lahf
mov
inc
cmp
and
dec
pop
mov
mov
call
mov
outsb
int
mov
test
adc
sbb
ja
dec
xor
imul
inc
ret
add
mov
out
inc
dec
mov
loop
mov
insb
std
js
fmull
xchg
push
push
xchg
mov
mov
mov
xchg
mov
adc
jle
fstpt
clc
cltd
adc
test
jnp
or
dec
daa
test
je
nop
repz
add
adc
cmp
repnz
into
test
pop
vpaddd
inc
sarb
pusha
add
push
adcb
mov
dec
dec
xchg
inc
ret
cs
stc
jl
inc
jp
clc
outsb
jecxz
inc
adc
mov
jbe
jne
jecxz
mov
in
aad
cmp
pop
pop
aaa
rcll
rcll
jnp
jge
mov
in
xchg
mov
adc
inc
cmp
into
cltd
jnp
out
add
aam
mov
sbb
jl
and
ljmp
into
decb
pop
jg
out
cmp
pop
or
push
stos
xchg
push
andb
pop
idivl
sbb
nop
les
mov
mov
stos
xchg
jno
push
sbb
es
lds
outsb
xor
imul
cltd
cs
lods
jp
cmpb
cmp
test
mov
stc
and
stos
jg
sub
dec
mov
iret
stc
pop
daa
scas
jbe
mov
popf
in
test
addl
lock
in
mov
jnp
movsb
mov
jne
shll
pop
dec
adc
mov
loope
mov
push
mov
mov
inc
out
pop
orl
push
mov
mov
ret
mov
push
dec
push
lahf
in
jne
adc
mov
popf
xchg
xor
or
cmpsl
inc
loope
enter
fwait
jo,pt
repz
xor
xchg
lea
xlat
and
add
inc
stos
jecxz
and
mov
inc
test
jmp
mov
mov
add
dec
adcb
and
jmp
in
sbb
sar
fwait
jne
dec
fdivrs
jge
mov
lcall
mov
in
add
or
in
int
cmpsb
push
dec
push
notb
push
xchg
leave
in
int3
ss
lods
loope
or
int3
js
clc
mov
fdivl
adc
in
into
lock
and
sub
mov
jg
fs
or
lret
inc
push
xor
adc
sbb
ljmp
push
mov
push
sub
scas
push
jle
inc
lret
mov
xchg
add
cmp
ja
pop
jge
mov
mov
lods
or
xchg
sbb
das
pop
mov
mulb
inc
cmpsl
and
adc
pop
shll
std
xchg
jle
lock
lods
loopne
and
jle
push
inc
mov
jbe
dec
fcmovne
ja
aad
test
jbe
jns
ficoms
push
cmp
add
jl
push
inc
fwait
xchg
insb
or
pop
xchg
inc
mov
pop
stos
scas
bnd
mov
pop
add
mov
mov
add
in
sub
scas
xor
mov
aam
addr16
jo
xchg
adc
arpl
xor
addr16
and
cmp
jle
js
popf
cmpsl
aaa
pop
mov
dec
lods
xor
xor
sub
in
das
jl
lock
aas
faddl
stc
adc
cmp
and
fisttpl
mov
idiv
add
fnstsw
mov
cmp
mov
insl
negb
mov
pop
aad
std
insb
jmp
inc
aas
shll
jne
shlb
mov
fcoms
mov
dec
pusha
insb
jbe
xchg
xor
push
sub
test
je
xor
test
sub
mov
cmp
cs
pop
out
int
dec
xor
test
lret
dec
xor
subb
fimuls
xchg
fsub
mov
jl
stc
sub
push
cmpsl
je
ret
dec
xlat
inc
cmp
cmp
mov
adc
cld
jmp
mov
cmpsl
out
js
leave
in
fiadds
bound
inc
xorb
shr
unpcklps
add
inc
stos
in
clc
mov
pop
pop
fabs
xchg
stos
mov
popf
je
subl
stos
jns
and
fs
bound
enter
jge
pop
shl
inc
fs
sub
push
repz
adc
andb
es
cs
push
xchg
xor
lock
cmp
xor
pushf
bound
ret
les
jmp
xchg
into
imul
js
fisttps
fsubrp
and
xchg
xor
stos
sti
or
sub
inc
mov
and
add
inc
adc
aad
aam
add
les
fucomp
rclb
sub
in
sub
push
aam
add
stos
movsl
sub
mov
xchg
mov
es
push
mov
pop
and
scas
mov
sub
rep
dec
cwtl
out
push
jg
add
add
mov
jecxz
or
adc
sbb
add
push
dec
xchg
lcall
mov
fcmovnu
les
bound
push
jbe
dec
jg
loopne
adc
xchg
imul
movsb
dec
xchg
fcomps
in
jecxz
notl
mov
dec
pushf
or
enter
cld
call
std
mov
fmuls
icebp
xchg
enter
mov
mov
add
cmp
fdivl
fdivr
lret
loop
pop
push
inc
add
mov
sub
outsb
or
mov
imul
mov
push
push
sbb
add
rcr
ljmp
loopne
add
and
jne
push
insb
mov
jmp
inc
jecxz
out
loopne
mov
xchg
scas
ja
or
clc
fimuls
jmp
mov
xlat
leave
loope
adc
iret
ds
ljmp
stc
push
mov
pop
cmpsl
aad
in
loopne
xlat
sbb
ficoml
or
sbb
dec
cmpsb
fisubs
mov
insb
jmp
loope
js
cmp
dec
daa
sub
mov
mov
shl
mov
mov
or
mov
pushf
mov
and
inc
adc
mov
cltd
or
jmp
cmp
ret
or
sub
sti
lahf
jmp
neg
mov
jmp
inc
sub
in
test
pusha
in
adc
lock
add
push
adc
leave
imul
push
inc
rorb
ret
setp
mov
lret
scas
push
xorl
mov
adc
push
pop
and
in
mov
int3
adc
outsl
ja
adc
lcall
fstps
ret
cmpsl
fwait
inc
cmc
dec
xlat
mov
mov
stos
xlat
insl
sbb
mov
cmc
xchg
mov
cmp
notb
jns
xchg
movsl
mov
out
push
add
ds
cmp
sbb
cmp
shll
mov
jo
jbe
jecxz
out
scas
icebp
xchg
popf
xor
sbb
inc
pop
es
rcrb
and
add
shufps
add
xor
cmp
je
cmp
je
jnp
xchg
pop
dec
or
adc
ja
push
mulb
subl
rorl
push
cmp
xlat
addr16
pop
pop
push
adc
jmp
mov
xchg
add
shrb
or
fisubrs
bound
add
movsl
addr16
rclb
xor
into
mov
rorb
pushl
push
jo
xchg
rcll
push
pop
les
dec
mov
das
pop
push
push
subb
pusha
xlat
ljmp
sbb
mov
arpl
adc
add
ds
int3
and
jb
push
stos
sbb
cwtl
adcb
and
fsts
jp
mov
push
std
subb
xchg
mov
mov
lods
add
outsl
cmpsl
sub
icebp
pop
pop
leave
neg
ret
adc
jmp
cli
lcall
outsb
lcall
adc
mov
push
test
sub
dec
push
in
jne
xchg
insl
fisubrl
push
sub
mov
lret
addl
out
pop
repz
xchg
push
arpl
shlb
mov
movsb
mov
adc
out
jmp
xor
pop
cmpsl
popl
pop
rcr
stos
or
fnsave
mov
jns
enter
daa
mov
xchg
xor
fdivr
pop
or
sbb
jno
jp
imul
mov
aaa
mov
pop
jne
ljmp
adc
sbb
cmc
mov
ja
xchg
je
stc
lret
scas
or
ret
fisttps
mov
shll
int3
lret
mov
cmp
or
jle
mov
leave
inc
mov
testb
cmp
pop
cmp
std
sbb
inc
jbe
popf
or
push
mov
ljmp
mov
stos
mov
cltd
bound
int
jb
jno
cmp
mov
cltd
fadd
mov
popl
fdivrp
mov
adc
push
cmp
xchg
inc
inc
or
xchg
mov
push
mov
hlt
sub
cmp
jecxz
das
jo
std
ret
mov
aad
jbe
insb
pop
aad
clc
jo
mov
xchg
or
mov
dec
ja
xchg
add
inc
push
imulb
hlt
leave
adc
daa
mov
push
mov
scas
adcb
insl
push
inc
mov
or
mov
sub
ljmp
das
push
aaa
pushf
mov
dec
addl
xor
xorb
leavew
push
ret
sub
icebp
imul
xor
into
jge
cmpsb
or
sbb
sti
dec
xchg
mov
fnsetpm(287
sub
inc
sbb
xchg
sbb
sub
mov
lret
lcall
repz
push
bnd
jno
cmpsl
mov
fidivs
xchg
retw
adc
std
js
pop
rorl
dec
aam
cmp
mov
and
pop
jge
cwtl
das
push
jne
call
popf
dec
inc
inc
inc
lds
mov
les
push
xor
and
mov
aas
add
xor
fcmove
movsb
add
push
xchg
pcmpgtb
add
jl
add
push
lret
mov
popa
repnz
pop
lock
add
sub
loope
enter
sub
add
inc
jmp
dec
not
cmp
lahf
dec
cmpsb
add
mov
repz
enter
iret
adc
add
dec
jo
adc
xchg
jne
jns
mov
mov
mov
adc
popf
mov
ljmp
sahf
jmp
daa
cli
rolb
int
in
inc
jge
and
gs
mov
fistl
dec
pop
and
cld
sub
leave
loopne
pop
sbbb
jb
lret
aad
mov
movsl
jno
mov
pcmpgtb
pop
xchg
cmp
mov
or
shll
aaa
and
enter
lcall
int3
ffreep
arpl
or
xor
mov
into
jge
mov
xchg
add
mov
adc
cmpsb
sub
xor
and
pop
sub
stc
pop
mov
add
loope
push
mov
mov
mov
add
loopne
inc
mov
cld
jg
rorl
jp
or
sbb
iret
xor
mov
xchg
sub
add
cmp
mov
xor
movsb
fists
jns
addl
sbb
inc
cmp
cmp
cmp
lods
xchg
rcr
dec
adc
rcrl
cwtl
lahf
aam
jecxz
rcl
inc
pop
pushf
dec
pop
jecxz
mov
inc
movsl
dec
cltd
mov
addr16
adc
or
inc
popf
js
dec
adc
test
imul
or
inc
push
jno
les
sbb
into
dec
jae
fcmovb
jne
adc
ret
sbb
stc
or
cmp
pop
sbb
and
mov
pop
imul
je
aad
fsubl
int
popf
and
add
mov
sbb
add
and
in
repz
push
jae
popa
add
jmp
fwait
pushf
inc
mov
cmp
test
or
and
xchg
sarl
jne
ret
fadd
scas
mov
mov
inc
leave
mov
push
call
mov
push
xorl
xor
cmp
dec
adc
lock
clc
push
leave
push
in
std
lahf
insb
push
sbb
sub
les
inc
jns
fs
gs
sbb
cmp
fs
mov
add
or
popa
test
ds
fs
add
add
mov
dec
inc
bound
pop
rcr
mov
mov
cmp
inc
dec
pop
push
xchg
push
lods
mov
stc
je
js
insl
dec
jl
shlb
mov
push
sbb
xchg
in
mov
sub
push
sub
and
ss
ljmp
mov
sbb
push
ds
push
fbld
bswap
mov
cs
idivl
inc
mov
mov
adc
faddl
push
stos
pusha
mov
adc
int
insb
jl
fsubl
pop
jp
in
push
push
pop
mov
pusha
mov
or
cmpsb
decl
mov
mov
movsl
add
aaa
push
lret
shl
mov
pop
incl
xchg
leave
xchg
aas
out
sbb
popf
mov
jmp
outsb
aam
std
adc
fildll
int
shr
stc
fs
and
outsl
loope
outsb
popa
add
inc
xchg
fidivl
inc
jo
repnz
clc
pop
inc
jge
hlt
jmp
je
loope
rclb
cmp
pop
or
mov
ret
mov
cwtl
shr
jp
xchg
lods
outsb
ja
aas
clc
loope
mov
dec
sarl
fsubr
mov
jle
shlb
push
sbb
xchg
xchg
pop
push
out
icebp
pop
fsubrs
push
sahf
dec
pushf
xor
stc
lods
cld
sbbb
arpl
push
xor
test
sbb
mov
pusha
dec
and
cs
push
stos
out
repz
popf
jns
pop
sbb
jns
cmp
stos
cmp
pop
add
bound
bound
bound
imulb
mov
sbb
jl
pop
out
insb
xor
push
push
andb
push
push
leave
or
push
les
pop
ret
push
jo
inc
arpl
idivb
mov
in
sub
mov
add
fstpt
lods
pop
push
jge
adc
sub
cli
push
lock
cmp
pop
out
xor
shrl
lock
mov
xor
repnz
pushl
pop
btr
cld
mov
inc
popa
mov
int
ljmp
pop
mov
and
out
push
sbb
jl
test
scas
fcomi
shrb
ret
xchg
cwtl
es
inc
sub
fwait
enter
movsb
cltd
ret
sbb
push
jb
cmpb
xchg
push
cli
jecxz
jbe
xchg
mov
adc
jge
mov
push
popf
hlt
sbb
cmpb
or
pop
xor
sub
cmp
scas
ljmp
es
sub
aam
clc
jmp
out
inc
iret
aad
mov
loopne
or
aad
enter
mov
ss
xchg
ljmp
int
push
cmp
int
inc
xchg
ss
lea
pop
mov
cmpl
rclb
pop
imul
pop
adc
and
jae
pop
jns
mov
sub
mov
aaa
fs
cmp
cmp
adc
add
mov
fs
fisttpll
push
push
out
add
cmpsl
dec
jns
outsb
xor
xor
sub
cmpsl
cmp
dec
testb
aad
test
popf
dec
mov
pop
shrl
out
scas
aaa
in
jne
mov
in
ret
jae
mov
es
hlt
adc
adc
mov
cmpsb
xchg
clc
xchg
and
jnp
mov
int3
lock
ret
jg
sbb
sbb
imul
jnp
inc
in
fdiv
das
sub
xchg
mov
and
ljmp
sub
jb
push
pop
out
leave
xchg
adc
enter
outsb
mov
push
inc
sbb
xchg
mov
test
movsb
out
popf
out
int
add
sub
lea
ss
jg
lock
in
cli
es
cmp
lock
pop
int
push
enter
out
mov
arpl
mov
imul
stc
ficoms
xchg
aaa
dec
lds
mov
cmp
es
dec
test
cmp
pop
adc
xor
dec
adc
loope
shlb
hlt
sub
sub
lea
rclb
xor
push
jnp
dec
pop
mov
adc
jnp
xchg
xchg
xchg
sub
pusha
clc
lock
cmp
mov
lods
adc
rclb
mov
out
outsl
mov
xchg
rcrl
jns
fwait
xchg
es
icebp
mov
in
xchg
cltd
pusha
jns
or
dec
add
push
fiadds
lea
lods
out
push
pop
ss
xor
popa
mov
sub
mov
jp
sbb
jl
int3
add
add
pop
pop
cli
sbb
adc
mov
lods
je
fnstsw
lcall
daa
in
cltd
cmp
lock
mov
cld
mov
filds
sbb
bound
fnsave
and
and
cmp
or
scas
movsl
in
xchg
sahf
ss
lcall
cmp
xchg
cs
push
cmp
cmp
adc
sub
fdivs
les
or
call
loop
jl
pop
sahf
out
mov
sbb
je
faddl
mov
fwait
sub
cmpsb
lahf
gs
loop
add
test
xchg
sub
cmp
cs
repz
std
nop
out
shll
insb
mov
and
loope,pn
jmp
sbb
nop
loop
xor
add
xor
outsb
mov
cmpl
test
popa
or
cli
push
sbb
mov
inc
mov
dec
push
nop
ljmp
sbb
pop
lods
jnp
mov
sahf
push
sbb
test
jns
loope
add
mov
pop
pop
add
std
shl
jge
fisubrs
xchg
inc
lret
in
std
rcll
or
enter
fcmovu
stos
mov
adc
out
ret
fstps
xlat
out
push
jns
jo
ss
ja
loopne
jg
pop
mov
mov
add
and
mov
cmp
xchg
jne
add
dec
mov
addb
lods
mov
test
ljmp
xor
stos
hlt
push
pop
dec
pushf
pop
fdivl
mov
outsl
push
xchg
into
icebp
ucomiss
or
std
imul
ja
jmp
cltd
shrl
fstpl
push
pop
jno
lcall
into
cmpsb
mov
and
jecxz
jo
add
jecxz
mov
in
push
icebp
xchg
pop
xor
out
ds
jl
pop
fs
or
mov
mov
cmp
into
outsl
aad
cs
add
adc
add
jbe
push
dec
mov
jbe
cmpl
in
in
xchg
int3
push
repz
mov
or
out
sbb
add
loope
lods
imul
rcrl
mov
test
cmovne
cld
jge
cmp
xor
push
add
push
adc
mov
mov
loope
mov
push
sbb
cmp
test
sub
loop
sub
iret
cmp
addr16
dec
idivb
dec
mov
aas
adc
mov
lods
sbb
jns
popf
in
lods
xor
dec
mov
jl
xor
hlt
inc
mov
jbe
shr
or
add
or
xchg
mov
orl
sub
xor
lret
push
call
aam
xchg
jp
repnz
std
mov
or
popa
push
testb
in
test
mov
cmp
xchg
orb
daa
loop
mov
movsb
mov
jae
push
es
mov
data16
aam
or
lcall
add
push
scas
cmp
rep
cmovo
jbe
mov
mov
stc
fcomps
xchg
cmpb
out
add
and
sbb
jmp
jp
enter
int
mov
push
and
add
inc
cs
mov
xchg
mov
inc
xchg
cmp
xor
mov
movsl
scas
and
sarl
rclb
push
in
cmpsb
xchg
push
ficoml
shlb
and
jnp
adc
sbb
adc
test
pusha
fisubs
jp
scas
das
or
stc
into
push
hlt
mov
cmp
push
xchg
fiadds
cmp
es
fstps
push
sub
sub
mov
add
push
mov
and
xor
outsl
dec
popa
std
push
testl
xor
cmp
aam
ljmp
sti
jmp
adc
add
jne
test
mov
push
jo
pop
fisubrl
or
mov
xor
loopne
loopne
push
xchg
add
or
jge
mov
das
inc
xor
jl
int3
add
pop
inc
inc
pop
je
std
shrl
inc
into
repz
sbb
lods
adc
stos
call
mov
in
sahf
jl
push
ljmp
mov
into
cmpsb
pop
das
mov
cmp
add
push
or
push
subl
lahf
fdivl
pop
pop
and
out
adc
inc
lret
or
jo
xchg
jg
fnstenv
or
jne
xchg
cmpsl
ficoms
jbe
add
pop
add
clc
inc
fucomi
clc
push
pop
out
pop
jmp
fistl
jecxz
dec
cltd
sbb
popf
fxch
fsubrl
and
shrb
pop
pop
xor
daa
jmp
sarl
iret
leave
sub
sub
pushl
or
jle
mov
mov
rclb
dec
jle
jecxz
out
flds
jae
mov
test
push
dec
xchg
sub
in
ds
pop
pushf
mov
add
aaa
mov
xchg
out
dec
pop
sub
jmp
or
inc
insb
xor
mov
pop
adc
addb
push
pop
int3
out
fildl
popf
mov
jge
pop
mov
das
xchg
movsl
mov
mov
push
push
dec
cwtl
flds
and
cmp
hlt
lret
lods
in
loopne
add
cmp
mov
leave
push
test
jge
cmp
shl
mov
ss
pop
fistps
push
sub
mov
xchg
add
push
shrb
xchg
lcall
scas
mov
pop
mov
enter
sbb
sub
fucomi
movsl
aad
add
mov
and
mov
or
jecxz
or
pop
pop
lahf
jmp
in
and
movb
ret
int
rcll
sbb
leave
inc
inc
add
out
cmp
ss
lcall
jge
loope
or
inc
bound
xchg
jmp
inc
je
pop
mov
pop
pop
inc
aam
sub
fdivrl
xor
and
push
out
mov
mov
sbb
dec
xchg
mov
pop
fimuls
adcb
pop
dec
xchg
xor
data16
or
outsl
outsl
mov
outsb
jns
mov
push
fiaddl
sbb
cmpb
sbb
mov
shll
xchg
push
or
ffreep
das
popa
or
lods
leave
adcb
iret
jns
jae
movsb
movsb
dec
mov
leave
fcmovb
mov
bound
cmp
push
scas
push
test
mov
das
xchg
idivl
pop
bound
in
xchg
sbb
pop
jae
adc
mov
lods
in
and
xorl
insb
cmp
fldt
or
vmovntps
ds
adc
adc
dec
pop
jp
aam
in
outsb
rcl
out
ss
jmp
xchg
cmc
aaa
stc
enter
pop
jno
sti
push
add
jg
xchg
add
xor
imul
dec
inc
popa
cwtl
inc
popa
nop
lret
lahf
dec
adc
sarl
shrb
shll
dec
sub
shlb
sub
sbb
pop
pop
outsl
mov
out
jns
cmp
shlb
in
jno
loopne
in
add
fcmovnbe
cmp
call
adc
sub
jnp
jl
movsb
xlat
jo
and
loopne
jmp
cmpsl
sbb
es
adc
mov
imul
pop
xchg
or
int
xor
inc
xchg
call
inc
gs
mov
pop
aam
sub
sbb
insb
adc
add
icebp
loopne
sbb
push
adc
add
loopne
and
icebp
or
adcl
orl
in
push
inc
mov
dec
in
cmpsl
mov
cmp
pop
imul
gs
xchg
pop
xchg
inc
int
out
in
loopne
inc
sub
inc
out
xchg
sbb
mov
cmp
addr16
bound
in
mov
int3
push
out
lret
dec
mulb
xchg
xchg
out
fdivl
and
or
xchg
sbb
adc
jbe
shrb
lcall
cmpsl
cmpsb
mov
pop
mov
adc
mov
test
cld
lret
shll
outsb
sbb
loope
sbb
mov
or
push
dec
inc
jns
sbb
enter
dec
pop
dec
xor
ret
push
in
adcb
fsubrl
dec
loopne
cmc
or
add
mov
dec
movsl
aas
jae
dec
inc
je
fldt
sahf
jl
mov
push
mov
rcrb
sarl
in
sbb
mov
adc
mov
dec
lret
dec
shlb
negb
lret
test
mul
push
and
out
in
and
pop
gs
jmp
mov
cltd
push
inc
inc
or
dec
int3
lods
jnp
aaa
enter
movsl
push
xchg
mov
pop
jne
mov
add
adc
or
imul
add
scas
add
sbb
imul
mov
pusha
mov
xor
mov
dec
movsb
cmpsb
add
mov
xchg
xchg
mov
sbb
or
divb
or
fstl
jno
xor
std
rorl
out
adc
jmp
mov
add
mov
clc
jge
in
ljmp
mov
leave
pusha
pop
test
jmp
jge
jp
and
jbe
ss
push
and
jns
das
sti
pop
es
or
ss
imul
test
push
push
inc
cmp
jbe
add
ret
lret
cmpsl
sahf
jne
adc
sub
xchg
scas
pop
sbbl
pop
aad
fildl
mov
cmc
push
mov
std
cmp
aas
popf
mov
push
mov
mov
cmp
jle
jge
add
cmc
mov
push
mov
stos
xlat
add
sbb
pusha
mov
add
push
dec
cli
out
dec
dec
iret
mov
xor
adc
loope
push
punpcklwd
cs
xor
negb
jg
fs
insb
mov
and
mov
lock
pop
pop
hlt
push
mov
lods
inc
pop
sbb
xor
cs
jg
lret
ret
rorl
shlb
int3
das
pop
cmp
repnz
sahf
adc
fisubs
push
das
sahf
dec
mov
jbe
pop
xchg
aas
jl
jle
arpl
push
inc
out
add
or
fstpl
ds
push
push
adc
mov
std
inc
es
mov
mov
lret
or
jnp
jbe
leave
call
mov
popa
js
stos
mov
jg
dec
js
adc
dec
fistl
inc
shrb
xor
cli
jl
mov
push
mov
xchg
loope
jnp
or
scas
add
sub
xchg
sbb
fsub
inc
inc
addr16
fisubl
inc
popl
xchg
sbb
movsb
divl
mov
in
lock
sahf
add
push
cmp
negl
mov
outsl
aam
lret
pop
inc
jecxz
rorb
xchg
mov
mov
push
ja
mov
cwtl
rcl
jo
pusha
lret
jnp
push
lret
mov
jg
pusha
push
xchg
mov
pop
cmp
addr16
ss
add
and
cmpsl
mov
adc
pushf
movsb
or
and
js
outsl
mov
jmp
outsl
push
adc
and
xchg
xchg
xor
popa
jno
mov
lahf
mov
push
xor
pushf
adc
xor
mov
shrl
mov
mov
outsl
daa
icebp
repz
mov
inc
fwait
pop
or
dec
jecxz
test
std
mov
icebp
adc
jno
push
xchg
ds
inc
and
inc
subl
mov
mov
mov
clc
insl
jns
cs
dec
fdivs
test
push
xchg
sub
jno
dec
loope
inc
mov
in
add
xor
ucomiss
lods
pop
cmp
xchg
adc
push
sub
imul
aas
xor
pop
sarb
sahf
test
ret
mov
xor
daa
std
xchg
mov
fdivl
dec
cwtl
andl
sub
mov
pop
jg
mov
aaa
stos
bound
adc
push
xlat
sbb
arpl
call
fidivl
xchg
or
xor
push
mov
int3
pop
sub
arpl
jne
jb
pop
negb
movsl
cld
shld
scas
leave
out
mov
xor
enter
xchg
add
xchg
xchg
xchg
cmp
and
mov
jnp
sub
pop
lret
fldt
or
mov
outsb
ds
insl
xchg
stos
aad
movsl
stos
mulb
dec
dec
or
xlat
xchg
dec
sbb
add
mov
out
xchg
into
inc
mov
sub
jmp
mov
pop
sbb
call
and
shrb
clc
cli
cmp
pop
sub
cmp
fisttpll
ret
call
xchg
adc
addr16
pop
test
test
test
cmp
dec
fdivl
xchg
adc
fiaddl
and
cmp
jnp
push
jle
jmp
push
pop
and
es
xchg
xchg
mov
add
adc
add
push
test
dec
cmovp
xchg
push
ds
ja
jge
adc
and
in
cmp
pushf
mov
mov
or
adc
ljmp
sbb
or
mov
sbb
test
ja
mov
out
out
mov
jl
add
adc
icebp
fwait
cmp
push
cmp
jecxz
ficompl
ffreep
test
addr16
cmpsb
js
sub
jge
cwtl
push
sub
fstps
sbb
push
adc
outsb
mov
or
and
pop
cs
mov
add
int
pop
push
in
pop
test
mov
xor
sbb
dec
push
pop
adc
inc
or
sahf
rorl
add
aad
dec
lea
sbb
add
jl
push
dec
add
loop
gs
mov
test
mov
jo
loop
in
add
sbb
gs
push
lret
dec
in
jne
test
mov
pop
lds
mov
lods
xlat
mov
cmp
pop
mov
pop
pop
nop
mov
push
fwait
insl
loopne
ror
pop
scas
jo
push
pop
sbb
scas
xchg
xlat
add
jmp
pop
pop
aad
scas
xor
push
jmp
adc
rcr
jmp
mov
cmpsb
es
xor
mov
push
or
mov
inc
xchg
mov
sub
xchg
call
mov
pop
add
sub
pop
aas
mov
mov
sub
and
sbb
gs
sbb
imul
sbb
loop
sub
mov
loopne
cltd
adc
xchg
sbb
sbbb
push
mov
iret
push
rcrb
push
in
push
pop
xchg
and
push
xchg
xchg
cltd
inc
jo
dec
repz
filds
cmp
mov
imul
adc
seta
pop
adc
adc
out
or
and
shlb
mov
ss
mov
adc
mov
sar
jmp
jg
sub
mov
jae
adc
je
test
add
dec
mov
sbb
pusha
inc
scas
leave
mov
and
pop
mov
dec
xchg
dec
lods
sbb
in
xchg
sub
jne
pop
arpl
pop
jg
sbb
inc
or
ror
in
aam
pop
orb
pop
sub
push
scas
push
inc
pop
pop
inc
jne
adc
out
cwtl
fdivs
add
sub
mov
sub
adc
testb
sbb
ss
add
adc
add
push
rorb
gs
insb
xchg
loop
mov
cmpsb
pop
jno
dec
inc
push
push
arpl
xchg
iret
popf
fdecstp
jo
add
inc
mov
pop
sub
fcomps
fdivr
pop
out
out
xchg
stos
inc
es
xchg
jns
fs
inc
inc
inc
jge
scas
gs
cmp
xchg
cmpsb
daa
mov
mov
pop
adc
das
add
imul
mov
xor
inc
push
mov
hlt
cmp
jns
in
rorl
lahf
in
push
inc
shrb
and
daa
cltd
pop
mov
sbb
sbb
add
cld
hlt
pop
outsl
mov
call
insb
fmull
test
push
fbstp
sbb
pop
in
fsts
mov
or
push
dec
imul
ja
popa
push
cs
clc
push
lcall
add
fcompl
frstor
and
fstpt
imul
jecxz
sub
push
imul
stos
test
adc
icebp
testl
adc
adc
shrb
and
das
lods
shl
mov
inc
dec
mov
nop
mov
fs
test
xlat
imul
sub
jl
fs
xchg
stc
xchg
sub
fcompl
ret
pop
mov
pop
mov
lods
mov
sub
outsb
int3
cwtl
out
xchg
aam
mov
adc
or
push
stos
or
pop
xor
jbe
rcrb
xor
xchg
xchg
pop
mov
sbbb
sbb
mov
lock
cwtl
lcall
mov
cmc
mov
push
jae
add
pop
sub
add
repnz
xchg
fistps
fists
xchg
in
jecxz
insb
inc
mov
fdivl
push
add
lock
js
jmp
xchg
jbe
lret
pop
inc
jl
sbb
ds
insb
jae
push
aam
pop
push
int
ss
mov
push
aam
in
lods
xchg
or
adc
scas
mov
stos
xor
cmp
dec
mov
sbb
outsl
pop
sbb
mulb
dec
orl
cmc
cmpsb
sub
stc
mov
mov
push
fiadds
setb
popf
sbb
bound
popa
mov
mov
inc
popf
push
loopne
inc
jae
loop
scas
jo
sub
jb
jnp
xchg
lahf
movb
popa
imul
rclb
dec
cli
and
test
shrb
loope
sub
sub
mov
jecxz
and
adc
shrb
incb
testb
jp
mov
arpl
test
je
or
xchg
and
sbb
roll
pop
inc
jecxz
mov
add
test
loope
mov
or
fldenv
roll
cmp
int
fadd
ror
or
xor
xlat
cmp
or
mov
fdivl
jno
addr16
sub
dec
jmp
push
fdivr
fcmovne
into
sete
outsb
insl
jg
sub
mov
xchg
std
fcmovbe
insb
lods
out
mov
jle
aad
ret
aad
pop
mov
mov
xor
cmp
inc
test
fsubs
push
cs
arpl
mov
mov
jg
push
fwait
shrl
pushl
lcall
ficoml
push
xchg
jo
dec
and
icebp
mov
lahf
loop
loop
out
sub
mov
jno
xchg
arpl
adc
cmp
out
test
sti
leave
or
ficompl
fisubrl
rolb
mov
enter
test
mov
fldl
in
jle
adc
ret
repz
cltd
test
pop
lret
fistpl
ficompl
adc
in
pop
jo
hlt
fistl
pop
inc
test
psubb
add
stos
clc
sahf
sbb
lock
ret
xchg
in
ficoml
jl
push
inc
push
mov
cltd
mov
scas
fwait
mov
jge
xchg
xchg
adc
xlat
jne
popf
adc
mov
nop
mov
ss
aaa
mov
jp
push
sahf
dec
adcb
fucomi
pop
ret
xchg
nop
mov
or
into
je
and
stos
cmpsb
pop
jno
lods
inc
lcall
jle
scas
stos
jge
jmp
mov
dec
xor
mov
cltd
out
mov
pop
mov
imul
sbb
cmpl
inc
imul
leave
jns
dec
cmp
jb
add
mov
lds
adc
add
jns
scas
test
outsl
xor
push
rol
je
sbb
push
lret
aas
cmp
rcrl
outsl
stc
mov
cli
cld
jne
outsl
nop
xor
shrl
xor
lods
setnp
cmp
decl
in
sarl
ror
xchg
push
pushf
inc
stc
cltd
in
loope
inc
lods
mov
loope
les
add
add
push
test
mov
ljmp
lea
jne
add
lea
dec
inc
jl
mov
adc
mov
outsl
gs
sbb
inc
pop
push
adc
data16
push
and
das
je
ss
bnd
cmp
ja
dec
jae
ljmp
adc
cmp
sub
fdivs
es
stos
cld
jp
mov
cmp
pop
sbb
lret
fldl
add
outsb
les
pop
add
addl
mov
jmp
test
bound
and
mov
leave
xchg
push
sub
push
adc
dec
mov
scas
add
or
popf
adc
jne
adc
mov
notb
pop
xchg
subl
dec
push
aas
push
fsts
xchg
push
xchg
cli
and
push
fildll
xchg
mov
and
mov
cld
std
cmp
and
adc
push
call
cltd
cwtl
subb
in
xor
sub
pop
xorl
sbb
stos
popf
sahf
call
jmp
jle
jg
pop
lcall
push
and
sbb
sub
sub
scas
jns
aam
mov
jp
sub
inc
test
push
inc
xchg
add
fsubrl
mov
pop
pusha
cli
push
popf
call
mov
daa
sbb
out
cmp
jecxz
jmp
ljmp
add
push
mov
dec
jns
or
out
popf
sub
iret
daa
pusha
push
cmp
jae
popf
or
lea
xlat
inc
loope
add
ret
xor
mov
imul
push
mov
mov
jl
cld
loop
dec
subl
cmpsb
add
mov
push
xchg
imul
stc
push
insl
xor
aas
pop
ret
and
cmp
jg
mov
aaa
cs
stc
mov
sbb
ja
mov
addb
cmp
nop
jp
push
pop
adc
mov
jb
cmp
cmpsb
mov
ss
xchg
add
adc
xlat
xor
imul
scas
rolb
mov
rorb
push
loop
enter
push
xor
in
mov
dec
pop
lods
inc
and
or
jmp
stos
or
cmpsl
mov
inc
fxtract
fists
ret
jne
int
and
pop
jnp,pn
adc
push
dec
clc
or
mov
pop
and
cmp
cli
insb
sbb
loop
lret
mov
add
int
cmp
adc
mov
add
inc
push
flds
loopne
pop
sbb
sahf
scas
or
stos
repz
cld
rcr
mov
imul
mov
mov
clc
in
les
or
cmp
add
fdivs
and
pusha
cmp
mov
pop
gs
jo
xor
mov
sub
sub
push
iret
xor
pusha
pop
xchg
fwait
pop
les
insl
lock
pop
aas
idivl
fldl
xchg
test
dec
dec
sub
call
roll
add
mov
test
loopne
leave
fisttps
sti
add
out
mov
push
loopne
mov
mov
pushf
test
dec
pop
cs
add
loop
dec
xor
cli
outsl
xlat
in
in
ljmp
stc
fdivl
cmp
dec
mov
lds
std
sbb
fwait
mov
test
cld
xchg
and
adcb
test
xchg
or
jns
mov
shll
pop
mov
mov
mov
mov
int
and
aaa
lret
mov
ds
jnp
insl
stc
cmp
sub
or
in
pop
inc
cmp
push
add
or
inc
dec
stc
pushf
repnz
mov
pop
and
jns
out
add
mov
xchg
lcall
mov
rcrb
adc
fadds
xor
rorb
lret
jb
push
addr16
mov
jl
dec
mov
jl
bnd
fwait
mov
je
incl
fs
add
movsb
jbe
jge
test
and
shll
inc
pop
xor
ret
mull
fsts
dec
mov
jns
lods
lock
adc
jp
or
popf
jae
addr16
loop
or
jl
and
cmp
stc
loopne
inc
lret
es
sahf
out
push
jp
sub
push
sar
sub
in
xchg
sbb
mov
add
int
push
mov
xchg
rcrb
decl
popf
xchg
mov
rcll
cwtl
jns
jo
out
jg
push
and
add
adc
movsl
push
cmp
xor
xchg
addr16
imul
outsb
rorb
add
clc
adc
and
int3
mov
aam
cmpsb
mov
push
jne
cmp
mov
sbb
test
fmul
xchg
push
inc
fmuls
ja
cmpsb
fcomp
xor
pop
movsb
mov
sub
setge
sbb
fbstp
imulb
sub
xchg
movsb
jmp
pusha
jnp
cld
mov
jmp
jmp
out
cli
fs
aas
pusha
pop
pushf
or
and
int
dec
ds
mov
jge
push
ret
cli
lods
scas
stc
mov
inc
cli
imul
sahf
mov
loope
xorl
cmp
mov
pop
out
sub
ds
in
lret
enter
cmpsl
daa
jns
mov
idiv
stc
inc
jbe
pop
nop
cmpsl
in
or
mov
ss
jae
mov
and
inc
push
negb
push
ljmp
fmulp
loop
xlat
fisubl
call
inc
or
adcb
jb
les
daa
mov
adc
push
call
jle
stos
pop
das
cmp
fdivs
imul
or
mov
enter
push
jmp
call
out
pop
lock
jbe
xlat
sub
cmp
call
aaa
sbb
push
loop
sub
decl
cmpsb
lock
mov
hlt
push
mov
lock
movsb
movsl
adcb
adc
movsl
aad
add
es
xchg
andw
test
cmp
sbb
bound
sbb
popa
test
sahf
adc
or
or
in
stos
in
js
imul
cld
and
or
shll
pushf
in
jns
push
fucom
xchg
or
lret
aas
xchg
and
sbb
ret
icebp
or
xchg
mov
aad
jmp
mov
ret
push
sbb
push
sbbl
and
mov
cmp
fildl
sbb
enter
outsb
jnp
dec
mov
adc
testl
int
and
cld
adc
cmc
mov
xchg
lahf
ljmp
mov
and
pop
jp
inc
inc
inc
out
ja
xchg
push
ds
inc
leave
sub
in
adc
jno
cwtl
sub
idiv
divb
cltd
push
hlt
adc
inc
add
in
sbb
lock
sub
push
mov
adc
out
jns
inc
xchg
mov
lock
cld
pop
cmp
mov
shrb
inc
jecxz
push
pop
out
or
fldenv
push
shrl
sub
test
daa
push
sub
repz
mov
jecxz
xlat
mov
negl
mov
mov
mov
sbb
mov
mov
int
ret
inc
xor
xchg
lret
pop
jne
adc
pop
aad
aas
shlb
fwait
clc
jo
xchg
jo
push
les
mov
adc
add
lock
dec
sub
dec
add
xchg
jnp
lock
pop
xchg
xor
sbb
mov
push
pop
xchg
or
pop
adc
xchg
xchg
ja,pt
jmp
mov
push
lfs
fidivrs
lcall
jg
xchg
and
push
jmp
test
fisubl
add
icebp
mov
hlt
mov
les
outsw
xchg
je
addr16
mov
mov
fldt
aam
int
mov
int
sub
popf
loope
in
fdivrs
cmp
std
cmpsb
in
lods
jl
sub
add
mov
addr16
out
sbb
iret
inc
and
adc
xchg
and
fmuls
or
or
ljmp
lret
sbb
stc
dec
sbb
and
jecxz
inc
hlt
pop
call
inc
jbe
and
cmpsb
jno
fidivrs
mov
enter
fcoml
mov
iret
mov
es
inc
and
add
mov
imul
scas
sbb
xchg
xor
cmpsl
jns
push
ja
dec
inc
je
mov
xchg
lods
jmp
mov
insl
xor
mov
xchg
jg
jns
push
dec
mov
aas
fnstsw
cmpl
xor
rol
jg
lock
and
roll
clc
xchg
cltd
in
mov
mov
push
push
rcrl
adc
dec
adc
das
jge
leave
and
push
orb
subb
repz
nop
into
push
sbb
insl
out
fcomps
outsb
loopne
int
aam
out
jecxz
jb
adcl
push
push
cmp
or
sub
inc
sbb
mov
cmp
inc
pop
pop
sbb
push
pop
out
outsl
push
cltd
fildl
push
call
mov
mov
scas
push
sti
rol
push
das
jno
out
push
shrl
push
insb
les
xchg
mov
aad
adc
push
scas
jnp
pop
lods
dec
push
es
into
clc
mov
mov
ds
sub
mov
loop
mov
push
addl
scas
xchg
push
xchg
pushf
jp
out
ret
je
jo
mov
out
incb
aad
xchg
aam
sub
mov
mov
inc
inc
movsl
test
stos
loope
les
jnp
aam
sbb
aam
aaa
jecxz
mov
pusha
pushf
xchg
sahf
mov
mov
jg
jmp
add
inc
cmp
sub
lock
fnstenv
dec
fisubl
or
inc
insb
rcll
jbe
push
out
push
mov
pop
dec
sarb
mov
inc
ljmp
lret
xor
jns
insl
repnz
js
addr16
adcl
loopne
test
mov
cmp
xor
repnz
push
xor
movb
rcrl
mov
cltd
cmp
test
les
jae
lcall
and
mov
jno
lds
mov
arpl
pop
mov
xor
in
popa
xchg
insb
mov
aaa
in
jo
pusha
ret
mov
jb
push
aaa
push
and
int3
popa
jne
adc
int
or
pushl
sbb
fistps
push
out
mov
cmp
int3
in
cmp
daa
shrl
movsb
sbb
mov
pop
xor
mov
and
fs
xchg
dec
jo
adc
cmp
xchg
or
orl
dec
sub
fstps
push
stos
mov
pushl
stos
ds
notb
addr16
je
xorb
xchg
mov
sbb
into
cmpsb
bextr
dec
lcall
sti
push
in
lahf
mov
jno
outsl
and
popl
rolb
fldl
aam
in
clc
add
arpl
in
aas
inc
bound
enter
jecxz
mov
push
scas
inc
pop
hlt
cmpsb
mov
test
mov
ret
xchg
mov
std
or
push
in
js
test
out
movsb
fs
cltd
mov
ss
insl
lods
xor
fwait
lods
aam
stos
jp
or
sub
mov
loop
mov
arpl
ljmp
fwait
loopne
js
rcrl
mov
dec
adc
sar
push
out
outsl
pop
mov
push
mov
adc
adc
gs
bound
ljmp
es
push
aaa
sub
cmpsb
inc
xchg
and
sahf
mov
mov
gs
add
dec
add
mov
pop
fisubl
lea
jecxz
sti
dec
imul
mov
inc
es
jecxz
add
rcll
cli
sub
mov
xor
ds
mov
icebp
cmp
add
mov
sub
lods
add
sahf
add
jae
xor
xor
into
mov
loope
pop
mov
pushf
cmpb
fldl
adcl
stos
pop
insb
mov
cli
fstpl
movb
inc
mov
imul
cmp
or
lahf
dec
imul
cli
ja
xlat
rorl
loop
popl
lods
lods
push
shlb
or
out
loopne
xlat
inc
xchg
jecxz
in
insl
cli
sub
push
imul
iret
mulb
jle
adc
out
adc
sub
ss
cmc
in
pushf
fstpl
scas
inc
cmp
xchg
add
jns
and
sub
movsl
sub
dec
jecxz
mov
push
xor
sub
jp
repz
scas
loope
lds
insb
jge
les
cmp
repz
ds
pusha
imul
call
and
pop
mov
imul
sbb
scas
stos
jbe
loope
subl
xlat
lret
add
push
fildl
ret
movsl
dec
stos
enter
xchg
je
cmp
insb
dec
loope
mov
arpl
push
rcrl
lahf
sti
push
das
lcall
in
push
mov
or
or
mov
ds
loopne
xchg
mov
test
shll
rcrl
push
inc
mov
push
stc
fdivrl
hlt
addr16
dec
mov
sub
test
push
jmp
xor
pusha
mov
dec
add
out
mov
lret
inc
push
sub
pop
add
fs
mov
inc
xor
jecxz
xlat
jno
cmc
icebp
adc
test
jnp
adc
fdiv
test
jl
lret
inc
out
aad
or
mov
cmp
ret
loopne
cmp
test
mov
rcrb
outsl
test
ret
jae
roll
and
cld
add
pushf
ucomiss
jge
out
das
loope
mov
xchg
mov
jne
push
stos
dec
mov
lret
adc
mov
fsubrs
jge
fists
sub
push
imul
push
fsub
test
push
lds
clc
outsb
addb
inc
js
shrl
movsb
inc
push
call
dec
mov
dec
in
add
cmc
inc
test
iret
xor
mov
mov
xor
cli
je
lods
sub
jnp
addr16
xchg
fwait
orb
testb
push
fwait
add
mov
jne
push
loope,pt
rorl
out
inc
push
enter
lea
sbb
jmp
adc
push
or
jne
scas
nop
mull
cmp
and
scas
rcrb
pop
jae
mov
push
aas
into
aaa
jg
xchg
in
jb
cmpb
pop
mov
xchg
sub
lock
xchg
push
test
jnp
sub
push
data16
dec
ja
dec
imul
icebp
adc
sub
lods
lods
daa
call
mov
pop
ds
jl
out
or
gs
sbb
iret
iret
push
icebp
pop
in
xor
out
data16
outsb
leave
push
mov
cmp
shll
mov
xor
dec
mov
cmp
in
jmp
cli
outsl
es
mov
aam
mov
scas
pop
sub
dec
xlat
adc
mov
lods
clc
js
fnstenv
int3
ret
cmp
xchg
jle
xor
cwtl
fwait
xchg
sbb
fisttpll
loope
lret
push
sahf
add
pop
iret
insb
push
jno
in
sbb
or
push
mov
add
adc
xchg
lods
push
sti
xchg
popf
xchg
or
mov
cmpsl
push
jge
pop
xor
push
and
scas
enter
stos
cld
lods
rep
or
sub
pop
jmp
jmp
dec
xor
xor
loopne
lea
mov
push
popf
push
mov
loop
jbe
hlt
mov
mov
push
inc
xor
cli
fiaddl
fisubl
dec
ja
push
lods
push
iret
cmc
imul
inc
jmp
xlat
jns
sbb
jmp
jmp
mov
scas
stc
test
jo
xor
aaa
inc
add
inc
out
dec
adc
cmpb
divl
xchg
std
mov
jne
add
pushf
nop
scas
test
sti
or
adc
stos
lahf
inc
mov
sbb
mov
mov
not
cs
pop
xlat
lret
repnz
push
out
sbb
jp
or
cmc
push
push
int3
xchg
add
insb
jecxz
push
imul
and
mov
test
add
test
pop
inc
push
sarl
imul
aas
adc
cld
movsl
adc
inc
and
mov
and
fnsave
push
inc
js
ljmp
jnp
sbbb
pop
lret
mov
outsl
dec
jne
add
pop
mov
fwait
jmp
xorl
adc
sarl
sbb
sub
add
cmp
jp
cli
xchg
inc
mov
jle
in
loop
lock
push
mov
dec
pusha
push
inc
xchg
fildl
imul
test
call
sbb
mov
or
adc
xchg
int
inc
jne
jae
dec
or
mov
ds
mov
ret
pop
movsb
into
adc
fxam
fimull
mov
imull
stos
and
pop
dec
add
mov
dec
mov
and
jns
adc
add
mov
les
xor
jae
sub
adc
and
nop
xor
mov
test
sub
push
jo
daa
mov
lds
sti
cmpsb
xor
popf
cmpsb
fwait
add
push
inc
into
pusha
lahf
leave
fcoms
sub
pusha
inc
mov
inc
inc
outsl
js
xor
imul
hlt
xor
mov
dec
mov
jle
sbb
add
push
xor
dec
adc
jecxz
jp
pop
insl
push
jp
js
jl
or
xor
inc
std
fidivs
push
and
les
aas
xchg
jle
out
fidivl
or
ficompl
add
xchg
xchg
xchg
pop
mov
sbb
jbe
aas
dec
mov
push
into
xchg
mov
aaa
dec
mov
rcl
cmp
cmp
sbb
sbb
mov
outsb
cld
xor
out
mov
xchg
popw
mov
dec
pop
test
sub
cmp
arpl
mov
stos
adc
inc
push
sahf
xor
xchg
outsb
cmp
adcb
orb
cmp
stc
mov
sub
call
lea
scas
mov
jmp
pop
dec
cltd
mov
shrl
mov
shr
adc
in
push
dec
xor
or
stos
xchg
mov
jge
xchg
cmp
test
push
xor
mov
stc
jge
mov
pop
idivb
rolb
lahf
cmp
sbb
ja
hlt
test
sbb
xor
fcoms
fisubrl
xor
leave
clc
dec
mov
push
rolb
jl
or
adc
add
out
sbb
dec
push
movsb
xor
dec
out
sub
mov
lock
fnstcw
loopne
push
inc
shll
dec
mov
add
inc
cs
and
outsb
dec
xor
pop
sbb
or
cmpsb
das
inc
inc
jmp
add
push
loopne
pop
jmp
pop
sahf
push
dec
xor
mov
sbb
js
cmp
es
loope
or
mov
xor
pop
out
mull
lcall
push
push
jge
aas
adc
test
push
out
push
and
leave
pop
sbb
incl
mov
pop
fmul
xor
xlat
loop
pop
mov
scas
jmp
not
ret
ds
add
dec
outsb
xchg
xchg
mov
mov
mov
out
pushf
mov
es
les
pushl
jns
mov
cmpsb
mov
jno
popa
pop
outsl
add
cmpsl
xor
lds
jp
int3
adc
into
pmulhuw
int3
pop
iret
or
pop
sub
popa
adc
stc
cmp
outsl
das
sbb
mov
cmp
mov
movsl
add
loop
lock
lods
daa
mov
and
mov
cld
icebp
pop
fcmovu
jns
lods
lods
mov
test
push
lods
push
mov
loopne
cli
ljmp
mov
insl
mov
decl
lcall
jnp
inc
rcr
push
or
les
sub
insl
jno
push
aas
lods
test
fidivl
add
push
imul
loope
pop
testl
jmp
mov
lahf
ret
sbb
jbe
je
iret
aas
xchg
adc
into
mull
scas
clc
xchg
inc
stos
dec
jb
dec
movsb
aad
push
cmp
sbb
ja
lahf
ljmp
es
or
movsl
and
mov
add
xchg
adc
pop
ss
out
mov
repz
or
movsb
pop
sbb
in
and
lds
mov
stos
add
jno
stos
cli
jecxz
lods
cltd
std
fistpl
lds
inc
rcl
cmc
mov
xchg
hlt
mov
aaa
push
ljmp
and
mov
xchg
jl
mov
addl
adc
ja
mov
scas
stos
enter
xor
inc
fldt
push
lret
dec
lds
xchg
sub
loopne
loopne
icebp
mov
xchg
out
addr16
sti
mov
mov
mov
dec
loop
loopne
fadds
es
pop
aam
pop
xlat
int
test
push
xor
sub
sub
push
sbb
sbb
mov
inc
arpl
shrl
push
pop
or
cmc
mov
mov
fisubs
push
aas
cmp
fcoml
xchg
jbe
dec
xchg
mov
popa
and
lea
sbb
movl
cmp
jmp
pop
dec
iret
cmp
add
shrl
xlat
test
cmp
sbb
xchg
sub
in
mov
push
cmpsb
sbb
call
adcb
jns
and
mov
ficompl
inc
add
mov
xchg
add
jp
leave
ret
movsl
sbbb
sti
pushf
xor
pop
loop
push
vpmacsdqh
dec
lock
dec
invd
mov
das
xchg
cli
rol
ljmp
xchg
sub
cmpsl
clc
fs
and
jns
or
mov
sbb
and
mov
pop
or
iret
xor
ja
imul
xchg
lcall
jbe
repz
push
adcl
bound
sbb
sub
rclb
insb
test
addl
dec
pusha
outsl
int
or
filds
mov
cltd
cmp
lds
fs
sahf
in
cmpsl
mov
sub
cmp
fmuls
jecxz
push
shrb
jp
sbb
jo
cmpsb
xor
and
jo
fisubl
adcb
dec
fmuls
mov
mov
std
jne
and
mov
loope
adc
add
mov
mov
cltd
movsb
add
rcrl
mov
lds
and
mov
push
aaa
aas
notl
imul
mov
in
int
sub
push
adcb
push
aaa
lods
popf
ret
cmp
repnz
popa
lahf
jecxz,pn
arpl
aaa
shr
test
mov
add
jo
jmp
inc
lahf
push
or
enter
mov
je
push
mov
push
mov
scas
xor
mov
xchg
pop
add
cli
dec
mov
lods
pop
gs
inc
lock
and
je
mov
pop
cmpsl
push
stos
mov
xchg
sbb
fsubrs
fiaddl
mov
mov
adc
std
add
sub
pop
pop
adc
mov
cmp
int3
das
jge
cmp
dec
inc
pop
dec
mov
adc
hlt
andl
iret
sbb
mov
shrl
scas
popa
pop
xor
inc
pop
popa
arpl
pushf
mov
dec
ss
sub
mov
addl
loopne
dec
push
jl
dec
pop
and
dec
int
cmpsl
stos
xchg
lret
sub
xchg
pop
dec
sti
ja
test
pop
je
inc
dec
adc
sbb
sbb
cmc
mov
insb
popf
movb
stc
mov
mov
lcall
notb
lods
cmp
cmp
mov
ficompl
jg
out
and
mov
pop
mov
sbb
loope
les
xchg
je
mov
rclb
fldt
or
pushf
sbb
xchg
icebp
mov
and
andl
xor
mov
add
outsl
rclb
in
push
adc
xchg
or
testb
dec
rclw
enter
jnp
jne
dec
xor
xlat
xlat
fdivs
shrb
mov
sub
rorb
mov
jge
shrb
fstpt
push
or
and
xchg
inc
xlat
push
xchg
and
out
hlt
xor
mov
push
jne
pop
sub
push
out
in
mov
cltd
inc
xor
adc
push
adc
imul
arpl
push
mov
aas
out
add
push
and
mov
mov
push
add
pop
cmp
mov
xor
jae
shrb
mov
pushf
jge
mov
imul
xchg
leave
mov
cmpsb
jae
idiv
fistpl
add
adc
pop
ds
int3
or
in
cs
jbe
inc
fidivs
popa
inc
aaa
dec
test
and
xor
loopne
inc
loopne
xchg
rol
shrb
and
mov
ret
out
push
fistl
jb
xchg
rclb
int3
cli
xchg
and
mov
sub
paddq
xchg
out
iret
mov
imul
out
imul
stos
or
jne
xor
pop
pop
sbb
test
cwtl
repz
jmp
mov
popa
in
push
imul
out
jbe
dec
or
lods
pop
jne
xchg
movsb
pop
mov
jmp
repz
test
mov
fimull
xchg
in
in
insb
mov
fldcw
cmp
cs
add
or
pop
sbb
xor
mov
adc
xchg
jg
outsb
cmp
push
mov
xchg
insl
fldt
test
cmc
mov
mov
sbb
lds
mov
jmp
sub
mov
into
adc
in
sub
xchg
in
mov
sahf
cmp
jmp
rcrb
iret
mov
and
push
xor
sbb
push
hlt
je
pushf
mov
push
mov
dec
mov
or
into
jge
mov
dec
pop
ret
lods
sbb
outsb
sub
xor
nop
mov
lret
add
jmp
pop
sub
xchg
stos
mov
jle
inc
add
insb
pop
sub
ja
pop
push
popf
out
push
push
int
xor
imul
dec
aas
sbb
mov
or
call
sub
pop
mov
push
ss
xchg
stos
in
mov
xchg
and
hlt
rcrl
push
xchg
test
jae
mov
fisubs
test
and
outsb
adc
add
jp
inc
push
push
mov
cpuid
push
xor
rcll
andl
mov
xor
or
adcl
jb
ret
mov
mov
sub
add
jmp
rcrb
jns
jle
and
xchg
das
inc
iret
and
or
push
int
pushf
daa
mov
divb
and
ds
fwait
dec
scas
shlb
jne
mov
repnz
mov
jmpw
shll
push
stos
sub
pop
and
push
push
xor
mov
iret
jecxz
add
mov
mov
mov
inc
and
cmpb
fs
jbe
push
push
push
adc
lods
inc
adc
mov
jmp
out
je
in
mov
dec
adc
push
sbb
ficoml
push
xlat
aad
arpl
inc
mov
cmp
mov
and
mov
mov
cmp
jl
inc
mov
jo
ss
mov
lock
int
das
dec
lock
rsm
arpl
sub
push
gs
jns
dec
mov
pushf
loopne
cltd
xor
adc
and
dec
mov
cmpsl
mov
fldcw
sub
xor
ret
jo
bound
cmp
in
in
push
mov
scas
jae
mov
in
fldcw
call
pop
imul
negl
pop
outsb
pop
xchg
dec
test
shlb
adcb
popa
dec
icebp
xchg
add
icebp
and
fsts
in
aad
mov
xchg
aam
push
adc
pop
xlat
mov
es
pop
test
add
push
outsb
add
fidivrl
test
pop
movb
ja
pushf
cmp
pop
jp
inc
loopne
inc
sbb
popf
lods
inc
pop
dec
xchg
sub
dec
arpl
ficomps
outsb
sbb
sub
movsl
popa
xchg
lock
push
push
das
lea
inc
movsl
jns
xorl
pusha
inc
cmp
fsubrs
jb
out
popl
stos
pop
mov
xor
dec
sub
mov
mov
ret
inc
mov
lret
loopne
ja
lds
jnp
adc
test
mov
cld
jbe
lods
pop
stos
loopne
test
stos
add
and
negb
cltd
mov
xchg
popa
cs
xchg
xchg
rcrb
jne
arpl
xchg
sbb
leave
div
outsl
in
pop
shrl
xor
loope
stc
lahf
in
add
push
mov
mov
xor
scas
gs
stos
cmpsl
faddp
sub
out
fisubrs
movsl
dec
mov
xchg
add
sti
mov
es
mov
push
inc
push
xchg
std
sbb
sbb
negb
sub
repz
repz
lds
xorl
jmp
mov
cwtl
push
mov
inc
aam
mov
in
or
imul
mov
push
jge
push
pop
ficoml
jp
jecxz
scas
lahf
add
not
in
mov
lods
test
pop
sbb
jg
jnp
in
mov
scas
rolb
inc
cmp
mov
cmp
mov
loope
jecxz
pusha
es
pop
call
imul
int3
arpl
je
jnp
push
mov
jle
stc
fs
out
jb
mov
int3
mov
mov
lods
add
push
cli
je
xchg
hlt
test
in
test
pusha
loopne
mov
mov
push
cmpsb
and
sbb
xor
leave
cld
movsb
in
cmpb
sbb
das
push
pop
aaa
or
cld
mov
test
cmp
xchg
add
mov
addr16
std
xor
das
inc
dec
pop
jmp
jnp
cmp
frstor
dec
jle
es
xor
xchg
sbbl
jns
add
clc
in
icebp
insl
pop
add
into
jnp
lea
les
pop
les
shlb
cmp
cld
mov
add
sbb
lea
xor
cli
push
sbb
fnop
scas
out
daa
mov
ss
sub
jne
pop
and
adc
inc
inc
in
out
adc
jo
xlat
mov
lea
pop
xor
ljmp
push
and
adc
mov
mov
inc
xor
pop
pushf
in
mov
adc
stc
cmp
pusha
xchg
mov
inc
pop
psadbw
add
mov
jl
mov
xchg
pop
inc
pop
imul
cmp
inc
dec
jmp
fcompl
in
fdiv
xor
in
cmp
inc
sbbl
icebp
pop
movsb
push
sub
pop
js
mov
mov
add
sbb
add
sarl
dec
pop
rcrl
andl
pusha
mov
or
enter
lret
cs
push
and
loopne
jmp
scas
and
les
pop
pop
xchg
and
pop
idivb
and
adc
fs
and
das
inc
and
mov
or
scas
and
push
stos
xor
loop
bnd
sahf
mov
pop
movsl
aaa
gs
bound
ljmp
fs
and
xchg
dec
sti
test
dec
enter
cld
push
and
mov
mov
lret
dec
push
aam
mov
inc
jecxz
mov
and
int
mov
cld
cs
imul
mov
xchg
xchg
xor
mov
mov
or
sub
sub
nop
dec
mov
jns
xor
sbb
inc
cmp
lods
out
aam
sub
jns
ret
mov
fwait
rorl
mov
and
sarb
push
or
loope
call
jns
jae
adc
lahf
out
push
jl
mov
and
mov
jg
cmc
movsl
shrb
repz
dec
hlt
pop
xor
sbb
xlat
test
std
mov
stos
stos
xchg
outsb
lahf
imul
ljmp
add
sub
or
xchg
jl
sub
add
loopne
bound
jbe
cmp
pop
xorl
loope
hlt
ja
mov
sub
push
push
cmp
jle
loop
icebp
pop
in
cmpsl
inc
push
mov
incl
adc
dec
pop
mov
cltd
scas
js
push
push
shll
mov
ret
movzbl
icebp
adc
adc
cli
movsl
jmp
fnstsw
sub
loopne
adc
outsl
cwtl
roll
dec
popa
sbb
xor
out
test
jmp
cmp
sub
insl
jns
jecxz
cwtl
pop
lret
cwtl
cmp
mov
mov
xchg
cltd
pop
ret
test
loop
stos
rcll
cld
mov
outsl
frstor
xchg
sarb
cld
js
subl
lock
adc
cli
lea
pop
es
scas
sub
xorb
jp
rolb
inc
and
jecxz
out
ds
mov
clc
cmc
rcr
arpl
sbb
mov
mov
pop
dec
pop
lds
add
and
lret
sti
xchg
dec
or
push
movsl
js
ja
or
push
mov
sar
push
dec
cmp
int3
movsb
enter
dec
push
xor
lods
aad
mov
pop
mov
jae
cmc
mov
aas
mov
jb
add
sub
fstps
add
pop
lds
and
xchg
out
movsl
add
stos
das
inc
mov
xor
pushf
add
cli
or
push
icebp
inc
in
adc
push
sbb
jge
pop
jl
mov
outsb
movsl
mov
fcomip
cmp
xchg
outsb
and
rorb
outsl
sub
dec
bound
out
imul
cli
mov
sbb
mov
jg
rcrl
inc
outsl
rclb
mov
fbstp
mov
pop
leave
dec
xchg
push
addr16
lock
testb
lret
mov
and
sbbb
sbb
pop
add
adc
mov
adc
dec
and
pop
cmp
popf
sbb
negb
push
lods
test
jg
adc
imul
leave
and
xchg
dec
inc
sbbb
inc
lea
mov
outsb
push
out
rorl
mov
enter
jnp
insb
rcrb
inc
cld
ret
addr16
adc
mov
xor
pop
andl
mov
flds
pop
add
jecxz
mov
mov
in
add
pop
outsb
outsb
sbb
sbb
cmp
cmpsw
int
mov
aas
test
mov
cmpsl
incl
xchg
std
dec
sbb
and
cmpsb
push
push
mov
mov
mov
xchg
inc
movsl
or
jl
fst
xchg
add
test
dec
dec
mov
outsl
and
ret
ret
cwtl
xchg
push
lret
xor
mov
ds
add
inc
out
into
rorl
aam
test
adc
in
add
shlb
sar
leave
xchg
or
xchg
imul
xor
cmp
fisubrl
sti
pop
sar
lret
sbb
push
jmp
push
xchg
pop
out
call
lahf
dec
fstps
add
in
pop
adcl
sub
jl
popf
mov
dec
or
or
clc
push
xchg
incb
and
mov
cmp
negl
cmp
push
dec
mov
inc
pop
in
or
jmp
dec
ljmp
xchg
xor
dec
and
add
sarb
popf
pop
insb
clc
push
or
pop
mov
pop
cmpsb
in
imul
cmpsl
xor
movsb
xchg
inc
xor
mov
inc
add
xor
push
arpl
hlt
pop
inc
out
aad
xor
cmp
and
inc
ficompl
pop
sbb
or
pop
out
dec
and
or
stc
xchg
pop
xor
sub
fbld
xor
es
fists
fwait
inc
and
pop
mov
mov
push
out
add
loopne
lahf
int
in
xor
loop
addb
push
fldenv
dec
sub
push
jge
mov
sbb
cmpb
mov
push
xor
aam
gs
repnz
pop
sub
stos
enter
push
cmp
push
fiadds
sbb
lahf
dec
adc
mov
test
in
xor
jmp
enter
jmp
lahf
add
lret
dec
mov
adc
mov
ret
outsl
add
loope
lds
aas
out
push
loopne
xchg
mov
inc
scas
cmp
shrb
or
mov
mov
clc
out
ja
mov
push
jo
leave
out
push
push
clc
lcall
pop
out
icebp
in
test
loope
pusha
das
xchg
js
pusha
fldl
jo
int3
pop
adc
lcall
or
xorb
adcl
push
stos
fsubrl
and
pop
les
sub
inc
lods
enter
jno
mov
mov
fimull
jmp
lea
cmp
xchg
scas
xchg
dec
pop
cmp
adc
clc
in
fcoms
adc
sub
clc
inc
sub
int3
dec
mov
xor
fdivrp
out
dec
push
push
adc
popf
leave
xchg
movsl
jne
daa
sub
rcll
sbb
cmp
out
sbb
sahf
jns
shlb
call
push
pop
fldcw
enter
inc
pusha
loopne
outsl
jecxz
xchg
cmp
cmpl
mov
test
loopne
mov
cmp
xchg
adc
and
xor
mov
mov
fldt
push
lods
outsl
je
add
movsb
hlt
dec
pop
movsb
lods
xor
pop
loope
sbb
out
rep
cs
ljmp
inc
or
adc
rol
loopne
jle
mov
sbb
fldl
fimuls
pop
jle
int3
and
pop
inc
pop
scas
movsb
loopne
aad
fisttpll
dec
call
lahf
mov
mov
loope
mov
dec
movsb
xchg
mov
in
jns
sbb
jb
mov
sbb
lahf
ret
and
mov
push
xor
iret
addl
loope
pushf
aas
insl
mov
jb
out
pop
push
xchg
mov
in
push
adc
pop
movsl
sahf
addr16
inc
add
sub
cli
out
ss
rcrb
mov
fsts
inc
xchg
cmc
lahf
fstpt
ds
bound
loopne
xorb
dec
ret
test
daa
adc
mov
in
fidivs
mov
xchg
xchg
fwait
jmp
add
leave
icebp
pop
std
test
pop
fildll
xor
out
mov
insb
and
andl
arpl
out
in
fsqrt
inc
inc
movsl
aad
mov
pop
push
lds
or
cltd
xchg
mov
lret
inc
andb
sub
xchg
add
add
daa
mov
inc
in
stos
outsl
sub
lods
cmpb
mov
ljmp
cmp
and
sub
movsl
or
and
add
sbb
fildll
dec
mov
fists
mov
xchg
lods
xchg
subl
into
dec
cs
adc
mov
ja
jb
sbb
dec
mov
xor
in
ret
mov
roll
lods
xchg
data16
rep
es
dec
pop
add
orl
cmp
notl
and
add
cmp
mov
in
and
fsubs
test
js
xor
cmc
call
imul
movsb
push
cs
mov
imul
sbbb
rol
leave
mov
mov
and
mov
pop
jb
sbb
lret
fucomp
les
sub
fnsave
pop
insb
or
pop
mov
mov
pop
dec
rorb
stc
xor
or
push
mov
xchg
pop
xor
in
jecxz
scas
in
inc
es
adc
add
cmp
and
cmp
repnz
rcl
dec
mov
into
orb
dec
popa
sbb
movsl
icebp
xor
push
movsb
xchg
gs
cmp
insb
sarl
cmpsb
insl
xor
xchg
pop
dec
xchg
lcall
sub
dec
inc
stc
mov
ret
icebp
loop
sar
cs
call
jnp
mov
dec
xor
push
push
mov
or
mov
insb
dec
int3
and
mov
adc
shrb
int
clc
sbb
nop
fisubl
test
sar
and
sub
mov
mov
or
add
pop
mov
pop
fsub
jl
inc
stos
insb
hlt
repz
mov
xor
mov
insl
lahf
frstor
jp
lahf
dec
mov
in
pop
cltd
jle
into
out
mov
jae
sub
stc
jne
mov
lods
push
push
das
or
shrl
or
lcall
and
xor
mov
and
pusha
dec
jb
adc
or
shlb
aam
cwtl
xchg
and
cli
push
add
or
mov
pop
lret
imul
sbbl
jmp
adc
cmp
inc
in
sub
pop
sbb
mov
lcall
push
pop
cmp
ret
enter
sbb
iret
in
xchg
pop
push
mov
imul
push
mov
mov
pop
jne
xchg
inc
mov
xchg
fst
or
data16
fadds
dec
jb
cmpsb
mov
insb
mov
mov
jge
scas
out
subb
arpl
bound
ret
test
jg
pushf
inc
dec
fwait
mov
jp
js
leave
stc
mov
mov
mov
shrb
push
repz
xchg
or
gs
mov
jg
sub
jns
sbb
rorl
lcall
ds
mov
loope
inc
sbb
xchg
test
bound
int3
mov
arpl
gs
sub
int
cmp
mov
adc
mov
mov
push
adc
inc
push
jno
and
mov
xchg
stos
loop
dec
icebp
ja
mov
movsb
jbe
mov
or
test
int
rcrb
in
or
xchg
sti
ds
mov
and
sub
jnp
jg
shlb
jmp
stc
mov
outsb
or
add
mov
ds
shll
out
or
add
nop
xchg
mov
push
fdivl
inc
insl
and
icebp
mov
mov
dec
inc
aad
test
mov
adc
xchg
aad
stos
ds
scas
test
push
inc
std
orl
cli
pop
arpl
arpl
in
rcr
out
ljmp
int
ljmp
mov
sbbb
fcoms
dec
shl
in
sbb
lods
pop
xor
pop
rcr
sti
fistl
scas
xor
or
nop
and
sub
adc
dec
pop
mul
insl
or
leave
push
movsb
in
loopne
push
push
jmp
loop
jae
mov
shl
ljmp
and
fsub
aas
repz
fstps
inc
fwait
imul
sbb
ficoms
sbb
lods
mov
mov
xchg
lret
jnp
mov
cs
lods
pop
scas
insb
mov
sbb
push
jne
dec
cmp
lea
insb
ret
iret
mov
movsl
fcmovbe
xor
cmp
rclb
dec
int
adc
popf
jp
push
fs
test
fwait
inc
cmp
idivl
out
iret
icebp
ret
scas
rolb
loope
add
or
dec
push
xor
xchg
mov
in
shl
pop
lea
aam
fimull
or
lret
sub
mov
mov
negl
sti
mov
dec
inc
jge
ss
andb
leave
xchg
outsl
push
pop
outsl
xchg
dec
repz
jle
jge
push
sbb
mov
ret
in
pop
insb
xchg
push
mov
scas
jp
outsl
lods
mov
push
or
sbb
gs
int
stc
sub
push
shlb
mov
push
fistl
imul
in
mov
pop
mov
lock
cmp
pop
pusha
iret
orb
popa
push
icebp
push
sbb
dec
loope
inc
and
scas
mov
mov
aaa
cwtl
outsb
rcr
dec
into
mov
sti
jle
pop
push
mov
mov
jp
cmp
add
jns
sahf
fwait
pop
fisubrs
dec
insl
mov
xchg
in
or
jns
stc
mov
add
imul
repnz
sub
mov
inc
xchg
push
sub
xchg
loope
enter
ds
test
insb
jle
mov
xchg
cmp
clc
int
fimull
or
mov
lret
aad
dec
push
lahf
cmp
jno
jl
imul
nop
pop
clc
mov
pop
sarb
push
xlat
xchg
dec
xlat
cmc
sbb
xlat
mov
sbb
test
pop
pop
loop
loopne
cmp
dec
and
xor
inc
pop
loop
add
cwtl
adc
cld
or
cli
cmp
lret
mov
imul
cs
mov
jns
xchg
and
xchg
xchg
push
icebp
div
cwtl
add
dec
cmp
outsl
call
test
lods
add
in
ja
cli
das
ja
add
push
mov
mov
mov
in
xor
push
cmp
jnp
xchg
les
leave
xchg
mulb
adc
repnz
imul
cli
mov
or
sbb
arpl
repz
cmp
fsubl
div
dec
insl
xchg
mov
divb
rolb
gs
sbb
jmp
leave
mov
fsubr
mov
leave
push
in
or
mov
aas
pop
pop
xor
aaa
inc
pop
stos
aad
mov
mov
mov
fwait
adc
fnstcw
stc
xchg
outsl
mov
mov
push
sbb
lods
orl
lahf
repz
pop
cmc
testb
call
ret
call
jge
hlt
mov
sub
inc
xchg
loopne
imul
aas
or
dec
sahf
mov
scas
icebp
pop
je
rcl
and
aas
or
pop
mov
adc
sub
aas
inc
push
daa
addb
dec
pop
pop
jo
andb
imul
cmp
movl
or
arpl
es
pop
mov
jb
js
ja
mov
loopne
cltd
adc
add
ret
jge
std
clc
fldl
xor
dec
adc
pop
popa
std
inc
dec
xchg
mov
ret
icebp
mov
jge
sub
sub
mov
aas
xor
sbb
and
movsl
sbb
cmp
jg
fidivrl
adc
jb
cs
iret
out
xchg
push
and
dec
pop
subb
loope
push
into
aaa
adcb
jmp
add
repnz
mov
adc
and
out
outsb
pop
loopne
pop
mov
sbb
sbb
iret
add
pusha
cwtl
pushf
and
arpl
jo
cmpsl
js
push
inc
add
push
push
test
loopne
lea
adc
push
push
pop
dec
add
shll
xor
test
nop
xchg
repnz
jge
dec
fbld
fwait
jne
xchg
call
inc
dec
mov
xchg
or
out
cmpsb
mov
fldt
push
std
jno
xor
mov
mov
int3
repnz
jae
lods
adc
inc
mov
imul
add
pop
aam
dec
leave
jmp
stos
int
icebp
mov
inc
fdivs
sub
dec
push
test
leave
add
lods
mov
adc
sub
stos
lods
rcll
xor
test
inc
mov
outsb
mov
adc
icebp
sbbb
dec
fldenv
add
mov
lret
jge
or
mov
push
xor
inc
ret
adc
add
imul
sub
jae
fmull
xchg
data16
add
fmuls
lock
pop
sbb
jecxz
jmp
shld
sub
into
insl
cmp
xor
and
jmp
and
popa
flds
and
dec
and
push
pop
pop
jecxz
xor
pop
mov
and
in
sbb
lea
nop
push
in
sbb
popf
pop
cli
loop
and
dec
sbb
hlt
out
xchg
subl
mov
cmpsl
cs
pusha
dec
imul
aaa
xchg
aas
loop
fs
and
jmp
cmp
or
xor
sub
push
mov
stc
or
nop
fcom
mov
xchg
pop
loopne
dec
mov
pusha
mov
out
sub
adc
arpl
loopne
cmp
mov
shl
rolb
push
and
push
add
mov
lea
mov
xchg
mov
fistps
movsl
dec
shl
movsl
sub
push
je
add
and
fs
pushf
jno
sbb
mov
sahf
and
leave
or
repnz
jae
dec
push
incb
inc
out
or
stos
pop
test
rclb
pop
add
pop
pop
lcall
lods
pop
fimull
inc
std
push
out
xchg
xchg
test
cmp
adcl
dec
lods
cmpsl
add
and
sbb
inc
pop
pop
scas
sbb
outsb
popf
dec
push
stc
mov
fistps
into
insb
mov
in
mov
rcll
sbb
aas
dec
stos
mov
add
pop
clc
outsb
cld
adc
pop
or
adc
sbb
jns
lcall
in
pop
lcall
fidivl
and
das
mov
aam
dec
and
mov
and
sahf
mov
push
lock
stos
insb
iret
dec
cmp
pop
in
or
pop
call
int
rorl
lock
ret
aad
adc
xchg
or
xchg
push
addr16
fwait
sbbb
push
xchg
test
leave
and
jmp
mov
lahf
and
push
or
insb
mov
xchg
add
cmp
lret
mov
shll
in
mov
mov
pop
cltd
imul
andb
dec
jl
or
cmpsb
pop
bound
not
cmc
sbb
out
jg
cli
clc
arpl
adc
idivl
and
arpl
daa
outsb
test
mov
adc
shll
data16
xchg
sti
icebp
add
sahf
ljmp
jne
mov
adc
cltd
aas
xchg
test
fistpll
cmp
add
mov
loopw
pop
dec
ljmp
xor
sbb
sar
es
lret
xor
xchg
fucom
ljmp
rcrb
pop
loop
lret
mov
bound
in
rcr
in
jo
incb
mov
xor
addr16
ljmp
or
sbb
js
add
scas
mov
xchg
sarb
lods
icebp
lret
adc
adc
jge
push
dec
lret
clc
lahf
jecxz
mov
and
mov
popf
ljmp
roll
jne
iret
out
adc
shr
in
inc
jns
adc
es
jp
mov
sahf
jp
insl
mov
mov
in
inc
adc
inc
ja
repz
push
or
je
xchg
insl
lret
out
cmp
mov
outsl
hlt
in
mov
sbb
mov
dec
adc
test
ja
jp
test
inc
ss
fldenv
nop
sti
je
or
pmulhuw
sub
add
xor
sarb
adc
cmp
orb
es
aas
pop
in
popa
repz
pusha
xchg
jbe
test
xchg
or
add
pusha
push
jecxz
jno
dec
int
mov
shl
rcl
nop
xlat
sub
lock
mov
jl,pt
mov
lcall
or
cld
lret
movsl
in
push
xor
add
stos
add
out
fidivrl
and
aad
or
addb
xor
dec
mov
jb
lea
cmp
add
dec
pop
inc
sti
jmp
jl
jle
add
inc
rcrl
outsl
or
sub
pop
and
mov
fisttpll
or
fsubrs
and
mov
loop
rcrb
call
add
loop
stos
sub
xchg
pusha
mov
subl
and
add
push
aas
fcmovnu
gs
aas
push
or
mov
add
aas
dec
les
jl
add
jmp
insl
lds
mov
jnp
loope
and
loope
outsl
popf
cmpsb
cmpsl
mov
int
cmp
bound
xchg
jp
and
jns
into
and
rclb
mov
bnd
mov
nop
out
add
sub
in
dec
int3
mov
xchg
cmc
pop
cmp
lret
mov
jge
inc
xchg
imul
popf
fcomps
cmpsl
stc
div
sbb
call
sbb
scas
fcoms
mov
inc
sub
out
add
sbb
sub
mov
lea
cmpsb
xchg
ds
in
pop
into
xchg
jno
fwait
jo
lcall
mov
cmp
fmull
pop
jns
nop
mov
pushf
repnz
adc
lret
cmp
popa
mov
test
cmp
fs
push
or
mov
cmp
inc
scas
rcr
testb
scas
xchg
mov
add
push
inc
repz
push
sub
xor
push
enter
and
add
cltd
test
lds
mov
jmp
outsb
mov
and
imulb
push
mov
in
jne
movsl
mov
pop
xor
shlb
pushf
or
jge
sbb
popf
out
jg
mov
mov
mov
or
push
mov
fnstsw
sbb
lcall
fsubrl
mov
cs
mov
adc
nop
repnz
mov
sarb
push
outsl
jmp
repnz
cwtl
xchg
or
clc
push
inc
pop
xchg
lods
lods
mov
gs
pop
add
mov
test
mov
and
imul
add
jnp
sbb
test
sub
lock
mov
popf
mull
jle
mov
inc
js
cmpl
and
xor
jecxz
cvtps2pi
movsb
dec
rcr
loope
push
dec
pop
test
mov
movsb
mov
mov
sub
adc
add
sub
and
in
or
push
cmc
xchg
dec
pop
jnp
jmp
std
mov
pop
cmpsl
into
in
pop
repz
rcll
movsb
scas
ljmp
jns
push
add
lds
mov
repnz
or
adc
bound
mov
fiadds
cli
mov
int3
or
aas
sbb
rcll
lock
pop
pop
ret
pop
sbb
sub
aaa
in
fsincos
dec
shr
add
add
mov
adc
fs
sbb
ja
jmp
in
xor
jl
push
lock
mov
out
bound
mov
js
sub
mov
cmpsb
cmp
inc
push
fs
or
in
mov
fmull
outsb
repz
popa
xchg
jmp
je
jbe
leave
dec
cmpb
lds
inc
cld
xchg
mov
xchg
inc
hlt
pop
aaa
out
jb
frstor
jge
cmp
stc
push
sbb
jnp
push
fcoms
mov
insb
mov
cmp
xchg
bound
adc
imul
outsl
cmpsb
cs
ret
xchg
xchg
push
pop
mov
mov
xlat
inc
mov
popa
xchg
stos
xchg
push
adc
in
daa
mov
enter
rcll
jp
clc
lds
daa
jo
push
pushw
jns
enter
mov
add
ficomps
sti
push
xchg
test
add
push
mov
aaa
push
notl
inc
and
lret
sbb
in
fwait
call
sbb
pop
pop
ds
push
movsl
inc
ret
in
pusha
inc
sbb
shlb
push
test
subb
sbb
xchg
push
and
inc
rcr
jns
pop
repnz
push
popl
outsl
add
mov
icebp
xor
lret
ja
cmp
fbstp
xchg
sub
push
inc
icebp
sbb
cmp
and
and
scas
dec
repz
or
mov
pushw
mov
gs
insb
repz
xor
sbb
call
leave
jbe
lret
xchg
xor
cmpb
and
incl
mov
cmp
icebp
cmp
mov
or
data16
pop
sbb
in
jnp
cmp
fisttpl
pop
mov
iret
movsb
xor
fdivs
cmc
push
pop
repz
sbb
dec
jp
push
outsb
pop
jge
outsl
mov
cmc
xchg
movsb
adc
cmp
stos
xor
gs
fsubr
mov
xchg
test
sahf
push
xchg
imul
lea
mov
cmp
aas
and
cwtl
push
inc
mov
add
fisubl
ficomps
dec
cwtl
sub
sbb
and
dec
jmp
xor
mov
cli
jne
xchg
mov
push
add
aas
pop
add
jae
mov
mov
inc
fldl
xchg
inc
push
jnp
int
add
dec
jmp
xchg
mov
xor
scas
rcrl
mov
mov
pop
xchg
aad
lods
or
mov
fs
mov
dec
sbb
imul
add
xor
insl
cmp
std
push
bound
mov
mov
inc
xlat
dec
cmp
loop
inc
or
imull
cmp
ja
mov
iret
sbb
cmp
ja
jnp
idivb
or
sub
mov
jb
test
jl
mov
outsb
jo
les
and
hlt
jmp
jns
movsb
cmpl
call
pop
xlat
xor
xchg
aad
xchg
arpl
sti
ljmp
sbb
xchg
sbb
sub
rorl
vpmacssdql
jne
jge
xchg
jbe
sbb
push
mov
pusha
sti
mov
addb
out
xchg
sar
imul
push
xchg
jle
add
je
out
arpl
loop
stos
cld
add
push
aas
xchg
f2xm1
cltd
mov
push
mov
orb
xorl
rcrb
mov
mov
pop
insl
pop
into
insl
test
or
ss
out
pop
push
jl
in
and
leave
xor
and
jge
dec
jae
cwtl
addr16
xor
ret
cwtl
dec
insl
pop
jae
xor
insl
vpcmpeqw
push
mov
and
push
cwtl
arpl
ljmp
sub
dec
jg
int
jle
mov
jae
in
bound
xchg
fcmovnbe
fisubrl
add
ret
arpl
xchg
lret
fwait
push
into
cmc
push
jg
sub
mov
jo
jmp
adc
ljmp
sub
inc
jbe
mov
xlat
ljmp
jle
pushf
pushf
fdivs
xchg
adc
aam
push
scas
xchg
cmp
push
sarl
pop
fistpll
leave
aad
or
lahf
imul
adc
rorl
push
cmp
jl
jge
dec
push
dec
inc
mov
daa
inc
dec
mov
gs
pop
xchg
not
xor
push
push
jmp
sub
push
xor
cmp
pop
stc
sub
pusha
xor
arpl
xor
push
lods
lods
ret
addb
cmp
stc
and
std
lea
jmp
cli
push
into
adc
mov
test
push
pop
or
cs
lods
fs
in
mov
enter
xchg
pop
iret
mov
sub
out
rcr
sub
imul
mov
and
xor
loope
mov
jge
fcompl
fdiv
xor
popa
xor
dec
jecxz
cmp
jno
mov
push
add
jle
inc
xor
or
jmp
mov
arpl
mov
jnp
cmp
pop
pop
push
pop
in
fwait
int
imul
sub
lods
in
lock
popa
xorb
repnz
repz
notl
test
jmp
in
sti
inc
jg
cmp
xor
sarb
sbb
aam
mov
and
mov
int3
popf
in
sub
add
fsts
inc
aas
adc
xor
jne
aad
aam
mov
dec
jbe
push
mov
js
jbe
xchg
dec
ss
pusha
push
aaa
aad
or
sub
lcall
mov
cmp
and
mov
push
mov
lahf
cmp
pushl
adc
outsl
or
out
or
dec
mov
int3
add
movl
loop
repnz
lds
aas
and
xchg
pop
repnz
lea
outsb
adc
std
push
add
sahf
out
pop
adc
or
es
imul
xor
out
out
xchg
js
int3
cld
sub
shl
inc
loopne
test
mov
cmc
and
sub
shrb
inc
mov
mov
jecxz
insb
stos
and
add
nop
pop
cmp
fcomps
dec
int
out
cld
in
jb
sub
push
repz
cld
mov
cmp
sub
lcall
out
xchg
cltd
mov
add
xchg
mov
mov
sarb
fucom
stos
dec
loop
sub
roll
mov
inc
aad
gs
mov
sbb
push
add
movsb
test
divl
aas
out
mov
test
mov
or
imulb
jle
xchg
xor
loopne
xor
mov
pop
aam
or
int
xchg
pusha
les
xchg
fisubrl
pop
scas
shll
fadd
xchg
xlat
sub
jne
inc
mov
or
lock
xor
xchg
or
push
mov
sub
xlat
jbe
mov
lock
sarb
mov
mov
xchg
xchg
repz
cmp
and
dec
and
in
stos
mov
push
cs
ljmp
fldenv
aaa
xchg
xor
bound
pop
repnz
and
inc
bound
inc
adc
cmp
mov
mov
push
jnp
div
dec
dec
das
mov
inc
insb
mov
arpl
imul
mov
or
push
cli
stos
and
mov
xor
mov
aad
dec
push
and
jp
and
jge
mov
inc
push
cmp
mov
outsb
cmpsb
cmp
repz
mov
in
sti
adc
jae
mov
es
fst
jg
dec
xor
les
in
je
push
das
cmp
sub
mov
push
cmpsb
repz
pop
sub
inc
push
cmp
inc
cli
in
daa
push
pop
outsb
mov
mov
addb
sbb
loopne
and
enter
mov
pop
divl
or
sahf
ja
jge
inc
out
sbb
push
mov
push
sub
pop
insl
rcl
jnp
imul
popf
inc
mov
mov
dec
jno
cmp
aad
push
movsl
mov
jb
shlb
aad
in
cmc
xlat
in
divb
and
mov
rcl
aad
aaa
mov
ficomps
out
clc
fs
scas
rcll
mov
cmpsl
inc
jb
sub
aad
mul
sbbl
cmpsb
es
or
out
mov
dec
icebp
xor
xlat
xchg
xor
inc
and
ljmp
jle
mov
out
xchg
test
out
icebp
mov
mov
jge
hlt
cmp
add
cmp
push
adc
call
sub
jl
mov
jne
mull
inc
push
push
cmp
mov
and
ljmp
mov
sub
ret
mov
orb
enter
mov
pop
cmpsb
inc
sub
inc
jp
out
and
in
cld
jecxz
xor
adc
adc
mov
add
mov
int
jl
js
test
cmp
mov
or
push
ljmp
negl
in
dec
lea
rorl
adc
das
shll
ss
xchg
aam
fsubs
jp
cli
sub
xchg
mov
jl
ss
aad
sbb
test
jg
or
inc
hlt
xor
outsl
js
sbb
or
inc
push
int
leave
shll
mov
xorl
call
clc
cltd
mov
jle
movsl
pop
xchg
fwait
xchg
jge
les
jl
sub
aad
pop
shlb
stc
push
inc
inc
cmpsl
xor
sbb
add
mov
pop
mov
xor
pop
push
xor
jb
xchg
lea
adc
std
xchg
mov
movsl
mov
fisttpl
add
inc
rorb
xor
and
sbb
lret
cltd
dec
xlat
imul
cmp
jp
bound
arpl
pushf
in
std
add
les
sub
repz
iret
push
scas
jl
test
push
inc
nop
xor
cmp
jl
xlat
loope
fisttpl
movsl
xchg
mov
mov
cvtdq2ps
pop
xchg
fldl
mov
push
bound
sub
movsl
stos
test
dec
xchg
jl
popf
inc
push
cli
xchg
insb
xchg
pop
cmc
xor
cs
and
add
stos
dec
shr
loope
sti
repnz
adc
out
lds
adc
pusha
push
push
cmpb
fsubrl
test
add
adc
sbb
cmp
cmp
sbb
out
add
movb
iret
push
sbb
jno
or
jno
xlat
cwtl
jmp
jmp
lds
xchg
test
int3
mov
xchg
fwait
cli
call
fwait
in
xor
mov
push
imul
mov
pop
sub
dec
hlt
das
out
ds
xchg
adc
adc
andb
rclb
push
xchg
dec
add
xchg
lret
lods
add
sbb
insl
dec
enter
and
stos
and
dec
sub
xorb
hlt
dec
sub
mov
dec
inc
lods
adc
andl
call
pop
andb
test
mov
sbb
es
in
mov
inc
popf
xchg
into
inc
movsb
or
fsubl
push
scas
imul
dec
les
loopne
cmpsl
imul
scas
rcl
and
les
int
cmp
sbb
bnd
insb
out
mov
mov
push
adc
into
jno
ja
pop
xor
shll
or
mov
cmp
cmp
jo
cs
or
dec
push
mov
adc
sbb
adc
jb
inc
or
jbe
outsl
sub
jae
xchg
adcb
mov
insl
in
adc
jmp
add
jbe
dec
mov
idivb
jb
lock
hlt
mov
insb
jg
addr16
scas
cs
add
or
cmp
rcl
cmp
daa
sbb
cli
mov
sub
inc
add
xlat
lcall
or
jl
cmpsb
mov
test
and
mov
jg
insl
xor
leave
cmp
inc
xor
and
es
ss
add
mov
lods
popa
dec
test
testl
outsl
test
insl
mov
sbb
int3
jae
movsl
jecxz
mov
add
dec
int3
pop
inc
in
iret
mov
cmpsb
shll
mov
xchg
mov
ja
inc
pop
mov
pop
add
hlt
adc
cmp
mov
fsub
lds
and
cmp
scas
std
mov
mov
mov
pop
ja
add
or
nop
adc
sbb
popf
inc
sub
adc
add
popf
rcr
mov
cwtl
xchg
xor
movsl
push
adc
pop
call
sub
push
imul
loopne
mov
out
or
jl
lock
pop
adc
loop
orb
popa
je
test
cmpsl
sahf
adc
cwtl
out
std
mov
scas
stos
hlt
pop
in
mov
mov
mov
mov
stc
mov
xor
int
movsb
and
mov
xor
push
mov
loopne
test
mov
cs
sbb
mov
cmp
mov
adc
mov
sub
aas
jo
mov
cmpsl
shl
aas
call
mov
test
cmp
test
cmc
pop
sbb
mov
xchg
add
inc
dec
jge
jae
cmp
xchg
insl
or
jo
mov
lea
sub
outsl
mov
push
mov
xchg
xor
ror
adc
push
lret
xchg
loope
cmp
cmpsb
xchg
repz
xchg
fs
or
xlat
stos
sti
mov
ja
popa
cmpsl
pop
in
cli
js
pushf
mov
pop
iret
mov
lods
fistl
add
cmpsb
sbb
cmpsl
and
xchg
mov
dec
arpl
jg
mov
setnp
gs
cmp
dec
add
pop
mov
aas
cs
shlb
add
cwtl
add
xor
std
mov
pminsw
test
pop
ja
test
stc
mov
lcall
outsb
aam
mov
push
push
and
xchg
sub
mov
out
adc
mov
mov
pop
mov
ds
xor
push
stc
sub
jg
cld
aam
sub
adc
cmpsb
add
adc
mov
aas
out
sub
sub
jno
clc
push
push
pop
out
lock
or
ja
iret
inc
rcl
sbbb
pinsrw
inc
fdivs
mov
out
add
xlat
stos
addb
mov
cmp
or
idivl
outsb
jg
xchg
inc
jecxz
fucomip
sbb
data16
mov
es
mov
into
std
out
and
in
mov
mov
pop
mov
xor
in
jae
sbb
jl
enter
fimull
cmpsl
push
movsl
lahf
xor
xor
ljmp
outsb
xor
push
into
mov
push
fs
xor
mov
sahf
imul
inc
roll
insb
mov
xor
mov
and
mov
not
daa
or
subl
loope
andb
cmp
or
lret
and
adc
imul
and
pop
pop
dec
dec
jle
les
cwtl
or
cmc
xchg
cmc
push
mov
mov
lret
push
push
fcom
clc
push
add
sarb
lret
loopne
inc
sbb
imul
adc
test
mov
pop
pop
fwait
jbe
and
sub
mov
test
sbb
cmp
mov
lea
insb
insb
in
fistpll
push
xchg
rclb
neg
icebp
shlb
insb
out
fstpt
das
inc
les
cmpsb
lahf
movsl
popa
push
je
adc
stos
pop
inc
pop
fistl
adc
or
jle
inc
inc
dec
sbb
enter
ror
inc
dec
mov
sbb
rcll
add
cmc
icebp
jecxz
mov
imul
and
jnp
mov
pushf
lock
je
jge
xchg
pushf
jbe
stc
push
inc
lahf
mov
ret
into
mov
inc
aas
mov
shll
negb
xor
xchg
leave
adc
jno
xchg
addr16
loope
out
loope
hlt
xchg
imulb
sti
lcall
in
xchg
faddl
sub
addb
imul
test
les
gs
jmp
rcl
or
insb
add
mov
mov
into
cmpl
add
nop
pop
ja
mov
jl
in
in
cwtl
mov
adc
push
mov
stos
pushf
push
push
mov
in
inc
rclb
mov
pop
int3
or
jno
ja
mov
inc
aam
out
push
and
std
xchg
addl
repnz
je
in
cltd
inc
ja
into
push
fcom
pop
call
rorb
stos
xchg
leave
push
fistpll
aaa
jg
sub
lret
adc
sub
sbb
push
movsl
push
jo
pop
mov
loope
pop
pop
fnstcw
mov
lret
leave
jo
pop
mov
jno
xchg
xor
mov
jnp
or
add
stc
add
pop
or
push
mov
jecxz
iret
std
mov
call
mov
xchg
dec
lahf
in
xchg
dec
out
fmull
out
popa
push
fildl
sub
inc
shufps
ret
nop
inc
fisttpll
stos
je
fwait
mov
popf
cmp
test
movsb
cmpsl
mov
add
jnp
add
loopne
jl
sbb
fst
pop
xchg
scas
lcall
ret
cmpsl
mov
aam
nop
and
push
inc
mov
pop
pop
jl
mov
mov
mov
fucomp
imull
add
das
push
sbb
mov
test
fptan
rclb
ret
sub
sub
ret
shr
sbb
fstl
jb
xor
sarb
sub
ds
gs
hlt
or
cmp
mov
jbe
imul
cmpb
xchg
mov
fsubrl
and
stos
cmp
cmp
aas
push
inc
pop
jbe
adcl
stos
enter
divl
imul
fst
xor
or
data16
sub
jnp
js
jae
add
sub
mov
push
test
loopne
fdivrs
shll
inc
sub
fs
outsl
into
es
fwait
jmp
cltd
enter
sbb
jb
mov
push
push
sbb
lret
or
adc
mov
mov
mov
add
cmc
pop
or
mov
dec
xchg
dec
out
dec
mov
xchg
sbb
daa
cmp
jge
and
in
leave
leave
xchg
sub
es
cs
cmpsl
pop
in
jne
mov
xchg
sub
inc
test
sub
das
xchg
or
imul
cli
mov
inc
dec
sub
jae
std
stos
xchg
and
lret
and
sub
pop
ja
pop
xchg
xor
lcall
lret
add
mov
add
jno
or
push
pop
dec
mov
pop
call
xor
xor
pop
or
dec
xchg
xchg
in
aad
sub
mov
insl
js
call
enter
inc
push
sahf
leave
daa
into
jbe
je
popa
outsl
mov
xchg
xchg
adc
setne
pusha
nop
xchg
xor
sub
and
mov
dec
in
push
sbb
imul
inc
push
scas
sbbb
out
push
or
mov
sbb
loopne
loop
iret
icebp
je
test
adc
xchg
mov
jp
lods
mov
pop
mov
push
fdiv
push
jns
xorl
arpl
enter
mov
aad
mov
int3
add
jb
sub
bound
ret
add
pop
aaa
mov
xor
stos
cmpsl
jl
ljmp
adc
adc
cli
mov
aaa
adcb
add
ss
sbb
ret
jo
test
pop
mov
xor
fdivrl
stos
sbb
sti
xor
cmp
icebp
mov
add
out
pop
or
add
pop
mov
or
and
push
addr16
push
add
sbb
xchg
mov
mov
adc
pusha
icebp
sub
jp
ret
add
jmp
movsb
data16
aas
fcoml
and
xor
xchg
xor
pop
shrl
mov
dec
dec
jp
xor
movsb
inc
lock
imul
cmp
ljmp
or
sbb
gs
cmp
jg
sbb
cli
push
dec
add
sub
imul
and
call
testb
and
mov
jge
cltd
mov
out
data16
dec
sbb
adc
dec
test
repnz
inc
fisttps
scas
mull
adc
jge
mov
jae
push
les
cmp
pop
add
inc
sub
clc
int
fstl
xchg
or
add
jbe
es
pop
jno
xchg
jo
inc
sub
lock
inc
cmp
aaa
cwtl
pusha
icebp
je
xchg
dec
or
cmpsl
in
loop
xchg
jge
mov
leave
mov
mov
clc
dec
mov
xchg
xchg
jne
xor
in
sti
fs
daa
out
jp
gs
mov
leave
jg
daa
cmp
inc
jbe
int3
insb
lcall
add
js
mov
pop
shrb
mov
jbe
shl
adc
scas
out
and
pop
and
pop
xchg
push
fs
sub
arpl
mov
in
imul
cmp
cmp
aaa
je
nop
push
rorl
les
outsl
fisttpl
out
lds
popa
mov
pop
mov
mov
aas
das
aam
cmp
adc
aas
call
pop
loope
and
fimull
push
pop
popa
xor
pop
mov
insb
mov
enter
aaa
inc
daa
and
cmp
and
adc
inc
mov
dec
xor
sub
icebp
pop
adc
add
mov
adc
shrl
mov
mov
pop
test
sbbb
mov
ss
xor
movsl
incb
insb
mov
pop
jnp
or
xchg
jge
dec
sbb
lock
mov
xchg
mov
mov
icebp
lds
aaa
and
adc
xor
and
inc
dec
pop
and
pop
pop
pop
or
add
push
inc
lret
or
movsl
or
fs
int3
add
mov
jle
jns
imul
sub
mov
cmp
fs
push
test
xchg
or
enter
sahf
xchg
xor
inc
inc
inc
add
inc
mov
leave
lock
xor
or
inc
cmp
ret
mov
daa
mov
imul
int
loop
xchg
cmpsl
stos
cmp
ds
jno
sbb
ss
sahf
pop
cs
incl
and
xor
cld
dec
sub
push
or
lret
fdivrs
add
daa
pop
test
or
movsl
nop
mov
and
push
mov
std
cmp
lods
aaa
cli
lock
add
push
mov
jno
adc
test
jb
out
or
aam
iret
pop
loop
mov
imul
fdivrs
repz
fdivl
cmp
sbb
pop
mov
cmp
dec
sub
mov
aaa
loopne
cmp
and
mov
and
jecxz
loop
sar
aam
in
sahf
sub
fmul
repz
jle
cmp
aam
in
cmpsb
jmp
xor
push
mov
xor
int
mov
mov
movsb
sub
out
adc
cwtl
faddl
pop
xchg
push
push
sub
scas
in
cwtl
bound
pop
in
xor
cmp
mov
xor
jb
fsubs
and
fisubrs
xor
xor
ret
mov
jbe
scas
sahf
pushf
ror
push
push
pop
lret
ja
cmp
lret
sbb
enter
pop
inc
mov
dec
xchg
pop
cwtl
sbb
ljmp
dec
loopne
call
mov
jbe
mov
jmp
mov
mov
ja
pop
in
imul
mov
dec
fistpll
sub
in
nop
sub
ds
scas
lds
dec
sub
in
or
sbb
gs
pop
mulb
repnz
push
inc
cmpsl
fcomi
inc
outsb
fstp
in
push
insl
mov
test
add
lods
mov
mov
pop
test
xchg
sub
mov
inc
xchg
sbb
and
out
out
and
es
push
repnz
test
sahf
int3
mov
int3
pusha
and
leave
jmp
sbb
jno
leave
aad
fwait
mov
cmp
cmpsl
xor
ljmp
sub
std
outsl
xchg
jecxz
cmp
ja
adc
mov
popf
xchg
xor
and
scas
outsl
inc
out
pusha
sbb
mov
pop
iret
jns
outsb
mov
imul
add
mov
gs
push
inc
push
inc
mov
mov
cmp
add
pop
mov
loop
sub
sbb
arpl
pop
fmuls
add
mov
adc
inc
mov
std
fdivl
dec
cwtl
xchg
mov
jmp
lock
sbbl
sub
and
ret
popf
lahf
std
or
sarb
imul
jecxz
test
push
call
mov
mov
sub
aas
fcmovb
mov
jp
push
adc
js
fwait
lahf
add
push
test
aas
cmp
addr16
fwait
movsl
js
sbbl
sbb
loopne
mov
jp
cmpsb
movsl
rorl
sbb
rep
push
add
imul
sbb
xchg
pop
inc
imul
jno
insl
test
jnp
hlt
jmp
xor
insl
add
rorl
hlt
xchg
outsl
xor
pop
dec
ljmp
cwtl
lock
and
pushf
repz
xor
movsb
push
pop
adc
and
mov
cmp
jae
and
int3
mov
jbe
aam
lcall
imull
or
mov
shll
mov
aam
out
popa
aaa
mov
jmp
xchg
int3
or
sti
inc
mov
pop
sbb
loopne
ffreep
es
push
stos
cwtl
mov
add
cli
stc
lret
inc
xchg
in
inc
or
and
adc
xchg
fs
mov
push
mov
mov
test
push
add
jns
mov
fldcw
pop
dec
out
push
inc
add
add
or
das
in
push
pop
adc
cmpsb
jecxz
mov
gs
ljmp
cwtl
and
std
adc
push
cltd
pop
ret
jns
dec
movsb
pop
je
test
inc
add
ja
inc
jecxz
or
test
sub
jnp
enter
lcall
push
inc
mov
pop
jg
inc
xchg
jno
cmp
hlt
jnp
mov
clc
jne
sbb
push
inc
mov
pop
and
loop
adc
sbb
jle
adc
mov
stos
jb
scas
repnz
arpl
mov
pushf
or
inc
mulb
mov
test
dec
test
clc
movsb
jb
xchg
push
dec
shlb
test
lods
mov
std
pushf
jnp
mov
inc
rcrb
xchg
xor
rcll
scas
xchg
jns
cmp
into
fsubs
pop
sbb
fists
rcrb
mov
repnz
dec
pop
jo
ret
dec
sbbl
int3
insl
shrb
push
scas
add
arpl
popa
pop
pop
fisubs
movsb
fdivp
mov
mov
call
push
aam
pushf
mov
mov
inc
test
fldenv
mov
lahf
call
add
outsl
xlat
lea
jmp
mov
fdivr
iret
cmp
sti
xchg
sub
add
jno
js
movsb
es
loop
pushf
mov
flds
fcoml
jmp
sarb
mov
pop
add
sub
popf
popa
cli
lds
cs
adc
adc
jle
lcall
aam
cmp
mov
cmc
in
movsl
mov
int3
imul
outsl
outsb
sub
aad
push
enter
lods
jo
sbb
push
jno
je
mov
frstpm(287
adc
mov
out
push
cmpsl
sbb
mov
addr16
inc
mov
mov
nop
out
jns
and
xor
mov
inc
push
jle
xchg
fwait
pop
xchg
mov
ljmp
xchg
add
sbb
jnp
mov
inc
or
mov
out
out
inc
dec
sub
push
lret
les
adc
push
xchg
aam
sti
xchg
or
xchg
mov
xchg
mov
mov
pop
int
cmp
sub
decl
sub
dec
adc
ret
cmp
shlb
mov
out
scas
out
and
movsl
xchg
lea
jg
xchg
jbe
stc
imul
jbe
dec
mov
dec
mov
icebp
jnp
xor
lods
test
push
popa
data16
mov
nop
cmp
inc
push
int
and
gs
add
repz
addb
add
data16
out
and
pop
pop
mov
outsl
cld
dec
clc
pushf
inc
inc
push
jl
xchg
cmp
fwait
mov
jo
push
xor
mov
or
rorl
rcll
jae
adc
mov
jns
aaa
in
repz
ja
xchg
cmp
jg
dec
adc
pop
add
loope
xchg
jbe
nop
cmpsl
sbb
ret
sub
fs
cmp
imul
dec
mov
pop
push
out
add
sub
xor
adc
mov
sbb
notb
or
mov
nop
jne
fistpl
push
scas
adc
push
or
xor
and
mov
sub
loopne
lods
sub
cli
or
sarl
sub
mov
test
sub
das
repnz
hlt
and
and
cltd
mov
testb
xor
xor
fs
aas
sbb
add
push
or
rclb
shrl
mov
daa
fistps
mov
push
mov
js
pusha
xor
popa
out
outsb
rcll
cltd
push
orl
cmp
mov
stos
sub
loop
aaa
je
aaa
jl
jbe
fldcw
sbb
punpckldq
or
push
push
and
loop
gs
lahf
sub
jnp
out
inc
cmp
clc
xor
out
mov
cmc
roll
dec
and
fiaddl
cmc
adc
fstpt
dec
mov
mov
cmc
xor
std
in
leave
jmp
adc
pop
or
aam
xor
jns
sbb
push
pop
xchg
jnp
rorl
inc
sub
andl
jb
aad
sbb
in
in
inc
sub
test
push
not
lds
inc
cmp
std
adc
pop
ret
rorb
xchg
repnz
roll
sub
cmp
jno
push
mov
imulb
test
cwtl
cmp
pushf
and
stos
ljmp
scas
mov
ret
or
test
inc
push
adc
hlt
add
mov
out
dec
jo
fmuls
adc
dec
pop
jecxz
adc
mov
negb
rcll
lret
rcrl
repnz
sub
mov
mov
subb
insl
sub
call
xchg
and
jnp
dec
out
xor
mov
push
fsubrs
test
filds
pop
or
or
cmp
adc
cli
mov
paddusb
test
jmp
jns
dec
ljmp
push
out
aad
mov
jae
push
jae
cwtl
loopne
jno
jmp
ret
jp
pop
inc
mov
dec
xchg
jns
rclb
hlt
test
lods
insb
xchg
cmp
js
mov
pusha
sub
cli
pop
daa
inc
mov
fs
into
std
fstl
push
rcrb
xchg
sub
rorl
push
bound
jp
int3
sti
pop
or
mul
dec
lahf
cmp
test
or
mov
shl
add
loop
fistpll
ror
scas
int3
clc
lahf
sbb
bound
fcompl
push
lret
sub
mov
add
dec
mov
fs
stc
outsb
cmp
aas
push
push
iret
das
lahf
stos
cmpsl
jns
mov
push
lea
xor
bnd
pop
pop
jns
or
sbb
fistps
fstl
lock
pop
dec
leave
mov
xchg
xor
lea
sub
xlat
add
mov
lock
rcrb
lods
push
jl
mov
lcall
dec
pop
inc
hlt
inc
iret
int
sub
lahf
pop
mov
cmp
jb
lret
pop
pop
hlt
mov
dec
popa
sti
insb
in
aas
add
mov
mov
ret
loopne
add
mov
jnp
arpl
pop
sub
push
cmp
fcomi
xchg
cltd
mov
ljmp
aas
sub
dec
outsl
push
call
jl
inc
pop
pop
out
ret
ficoms
std
outsb
ret
cld
std
xor
jg
in
aam
jns
insb
cmp
inc
clc
push
movsl
jno
jbe
xchg
xchg
mov
insb
lock
ret
fdivl
push
in
fisubs
push
xchg
loopne
insb
push
inc
sub
js
xor
jne
or
das
dec
int3
bound
push
fdivrl
out
xor
imul
filds
jp
jecxz
pop
pop
cs
stc
mov
rolb
mov
cmp
fstl
in
repnz
lret
shll
push
std
lds
lret
shl
sahf
sub
mov
mov
add
pop
popf
shrb
pop
lret
loopne
jnp
mov
pop
xchg
jp
fwait
inc
mov
lret
and
cmp
fcmovnu
push
xlat
sub
call
adc
pop
xchg
fcoms
daa
push
pop
mov
int3
cs
sbb
adc
dec
subl
or
lods
add
jle
sbb
in
lcall
sbb
jo
ja
pop
aad
lahf
addl
xor
aam
dec
mov
iret
mov
sub
and
or
xchg
xchg
pusha
pop
mov
sbb
pop
sub
push
inc
lds
pop
stos
jl
data16
test
ja
add
mov
xchg
mov
inc
adc
rcll
gs
loopne
loop
rorl
jp
mov
sub
dec
pop
add
cmp
stos
sahf
xlat
outsb
sbb
cmpsb
mov
cwtl
and
jno
mov
and
test
add
sbb
fwait
or
test
arpl
push
xor
dec
jns
jo
or
shlb
daa
fidivs
xor
inc
insb
aaa
adc
lret
gs
mov
stos
sbb
inc
cmpsl
jg
push
cmp
js
pop
out
idivb
rcrl
adc
popa
fistpl
dec
jg
fnsave
dec
or
sarb
mov
jmp
cmp
fcoml
ljmp
addl
movsb
push
cmpsl
cmp
push
xchg
mov
pop
inc
jge
mov
in
dec
ja
sbb
insb
pop
and
std
pop
scas
addr16
lret
stos
js
pusha
outsb
stc
jg
mov
push
xchg
mov
sbb
rol
cmp
mov
or
xchg
into
inc
mov
mov
jae
inc
or
mov
add
arpl
clc
sbbb
pop
pusha
ds
mov
and
nop
mov
sbb
dec
push
aas
mov
push
xor
jle
clc
fs
fcmovb
daa
nop
pushl
js
inc
int3
les
push
outsb
aaa
push
adc
xor
jae
fmull
mov
pusha
add
sub
or
and
mov
insb
ffreep
mov
lea
fldt
test
rcrb
inc
dec
xchg
imul
sbb
mov
imul
jne
xor
sbb
cltd
nop
push
mov
cmp
and
mov
in
insb
in
movsl
inc
sarl
jmp
mov
in
xchg
hlt
push
xchg
xchg
sahf
outsb
xchg
and
inc
or
adc
mov
adc
enter
push
in
jmp
outsb
into
jne
icebp
sub
mov
sbb
inc
xor
out
and
dec
adc
adc
push
dec
pop
sub
jp
shr
or
mov
in
adc
dec
sub
pop
push
push
rclb
xchg
pop
das
popf
and
jae
xor
cli
jle
or
and
mov
mov
insl
mov
sub
jmp
and
xchg
dec
xchg
iret
inc
insl
movsb
lock
fcmove
xchg
xor
mov
xor
std
mov
outsb
jge
jns
es
or
cltd
mov
popf
sarb
xchg
dec
hlt
xchg
icebp
lret
repnz
cmpsb
aas
lret
push
inc
xchg
lahf
mov
ss
arpl
pop
sub
mov
push
mov
dec
adc
mov
sbb
lahf
sbb
jl
xchg
mov
ret
lock
icebp
mov
sbb
cwtl
inc
bndldx
jp
xchg
mov
mov
mov
cmc
jno
fs
push
outsb
push
ss
push
sbb
rolb
test
xchg
fisttpl
xchg
test
cmp
adc
sbb
lret
push
jnp
jecxz
in
mov
leave
lea
idivb
daa
lds
add
js
add
scas
aas
popa
adc
and
roll
rcrb
imul
js
mov
or
test
push
popf
xchg
sbbb
or
cmp
test
shl
add
pop
or
mov
jae
inc
jge
inc
jnp
stos
pop
inc
lret
jne
sub
jno
sbb
aad
ds
je
js
sbb
inc
inc
lahf
aad
insl
js
ret
scas
fldcw
negl
jg
add
jae
cmc
mov
int
jmp
inc
push
add
lahf
ficomps
lret
pop
sbb
xlat
insb
lcall
mov
jnp
std
call
nop
subl
push
and
orb
push
insb
push
dec
push
xor
jbe
xor
fwait
aam
lds
xchg
inc
dec
mov
cmp
sahf
and
inc
pop
popl
mov
adc
mov
push
les
hlt
adc
jb
lcall
aam
or
xchg
mov
xchg
cmp
addb
add
pop
adc
or
xchg
xor
out
and
es
fisubl
or
cmc
bound
inc
insb
sti
imul
sub
mov
mov
cmp
lcall
aas
aaa
addr16
cltd
fadds
xchg
aaa
movsl
cmpsl
cmp
jnp
xchg
scas
out
inc
mov
add
aaa
push
negb
pop
mov
cld
mov
aad
addl
mov
mov
cltd
inc
insl
out
add
pop
fisttpl
mov
inc
bnd
jb
xor
dec
scas
jns
fs
in
mov
pop
rclb
add
and
sahf
pop
repz
inc
inc
ja
movsb
das
cs
xchg
iret
adc
push
push
mov
adcb
stc
clc
mov
lods
clc
cmp
loope
mov
fistpll
dec
jbe
pusha
inc
hlt
dec
mov
outsb
pop
mov
fistpll
ficompl
ret
add
xchg
hlt
pop
pavgb
inc
jle
dec
sub
lods
and
push
inc
mov
cmp
cwtl
leave
outsl
in
data16
std
or
ficoms
xlat
jle
jge
jno
inc
or
mov
add
sbb
fwait
and
cmp
clc
insb
jge
inc
mov
dec
or
inc
aaa
ret
sbb
aad
xorl
push
int
lret
mov
sbb
and
sarl
cmp
scas
sub
push
testb
in
mov
push
or
or
aas
leave
pop
sub
inc
sahf
mov
xchg
mov
mov
xchg
xchg
adc
faddl
icebp
or
mov
mov
jl
jle
jo
sbb
bound
pop
int3
mov
inc
xchg
add
jge
fsubrs
icebp
aam
dec
sbb
push
inc
pop
push
jns
mov
mov
jne
adc
inc
xlat
pop
xchg
sarb
mov
mov
adc
jnp
lods
ret
add
push
int
or
fs
insl
dec
adc
in
popa
sub
xor
int
mov
mov
sub
push
cld
fdiv
add
mov
or
and
adc
dec
lahf
imulb
jnp
sub
xchg
mov
lret
dec
dec
les
insl
sub
or
addb
and
cmp
push
add
hlt
add
int
xlat
xor
ljmp
inc
lods
sbb
mov
iret
mov
test
mov
xchg
push
ret
xor
sub
mov
lret
in
jne
sbb
xchg
mov
xchg
push
test
xchg
mov
popf
mov
decb
pushf
cmp
js
mov
daa
push
push
js
and
and
mov
and
cmp
dec
cmp
into
dec
in
or
jb
pop
push
call
loope
mov
mov
dec
adcl
das
push
scas
mov
sahf
out
push
jne
fcomi
fwait
scas
xor
lds
stos
mov
and
dec
or
pop
sbb
cmc
loopne
jge
dec
ds
pop
aas
lds
out
in
fisttpl
jmp
packuswb
fdivr
cmpsl
and
mov
sub
sbb
jns
lret
and
or
push
clc
sbb
mov
stc
out
xchg
movsb
lods
cmp
test
xor
jnp
adc
xor
or
cmp
inc
sbb
xchg
mov
rcll
popf
add
jl
pop
pop
push
pop
shrb
xchg
addr16
lds
mov
je
xor
je
ret
cmp
es
lds
cmpsb
out
les
icebp
mov
sbb
call
rorb
mov
hlt
outsl
pushf
pop
pop
mov
aas
xchg
mov
xlat
jmp
gs
push
mov
sub
mov
gs
data16
ror
cs
aad
mov
cmp
loope
cmpsl
movsl
mov
arpl
sbb
and
sbbb
mov
xor
xor
adc
sub
icebp
or
je
inc
loope
stos
addr16
inc
or
cmp
sub
ljmp
mov
adc
hlt
cltd
sahf
sbb
std
lcall
push
rolb
and
in
push
adc
scas
xchg
imull
and
push
sbb
aaa
sarl
jnp
mov
es
in
andb
and
in
adc
imull
daa
adcb
push
lcall
into
add
fiadds
push
std
cltd
clc
cmpsb
sbb
test
sbb
rcll
lods
ss
cli
divl
sbb
fmuls
xor
js
xchg
enter
ret
mul
or
dec
pop
sbb
dec
or
fisttps
ret
or
mov
or
push
pop
and
popa
fsubl
push
jecxz
lods
cs
out
repz
in
dec
dec
in
mov
jg
insl
xrelease
dec
lret
sbb
gs
cli
pop
outsl
cld
inc
out
dec
pop
pop
ret
adc
sbb
popa
lods
arpl
out
loopne
cwtl
sbb
or
lods
cltd
pop
repz
and
frstor
fdivrl
sbb
adc
xor
inc
iret
xor
pop
or
lahf
mov
mov
ffree
cltd
adc
adc
jecxz
jle
fs
aas
push
jp
gs
or
push
cld
mov
cltd
cwtl
dec
push
pop
cld
and
add
push
mov
imul
loop
cmc
mov
or
movsb
mov
mov
repz
cmp
sub
adc
rolb
in
adc
push
or
inc
push
add
cmc
jecxz
gs
inc
aaa
ja
mov
lods
ret
sub
hlt
push
popa
jp
repz
js
test
jl
xor
and
sbb
inc
insb
rolb
xchg
fldt
ljmp
jnp
movsb
xchg
inc
imul
mov
mov
ja
xlat
or
scas
jb
or
imul
stc
insl
mov
in
popf
pop
cmp
in
adcl
cmp
pop
add
adc
xor
pop
data16
adc
iret
roll
pushf
inc
in
inc
mov
stos
cmp
mov
testb
stos
aad
lcall
add
cli
and
or
mov
and
in
repnz
mov
or
icebp
sbb
arpl
orb
mov
pop
sub
xchg
js
sub
push
add
jnp
popf
xor
std
sbb
fstl
push
push
loopne
mov
xchg
loope
mov
jl
push
shll
add
pushf
sahf
sub
add
cmp
arpl
out
je
xor
sub
in
loopne
movsb
pop
jnp
xor
jge
subl
sbb
add
rorl
and
fdivl
call
shrb
test
movsb
xor
in
data16
add
mov
xorl
jl
and
int
arpl
lret
popf
repnz
mov
popl
and
mov
jg
cmp
mov
aas
mov
mov
cmp
shrl
dec
bound
inc
lods
sub
sahf
pop
aas
test
aam
out
repnz
js
push
sub
push
andb
lods
mov
dec
fdivrs
mov
cld
sbb
out
add
into
rcll
cmpsb
loope
out
insl
dec
mov
push
mov
outsl
inc
bound
inc
inc
int
mov
mov
dec
scas
cs
mov
sub
adc
pop
add
jmp
cmp
push
fldl
sub
sbb
ret
dec
add
in
sbb
xor
xchg
lea
repnz
test
scas
popa
scas
add
js
gs
movsl
movsl
lahf
add
push
or
xor
pop
movsb
mov
xor
inc
mov
push
mov
cmpsl
or
sbb
mov
add
sbb
xorl
das
in
sub
mulb
jg
mov
cwtl
js
pop
dec
sbb
push
sub
sbb
push
cmpsl
paddd
cltd
xchg
addr16
and
xor
insb
xor
mov
or
imul
cmpsl
lock
cmp
push
psubd
outsb
cld
imul
in
inc
out
sub
sbb
and
enter
mov
xchg
push
xchg
mov
mov
stc
and
movsl
add
lret
out
xor
das
bnd
xchg
andl
loop
scas
jp
pop
ret
test
in
aaa
dec
std
dec
mov
fs
cmpsb
add
adc
decb
or
jno
aad
aaa
das
push
jl
repnz
addr16
fwait
xchg
sahf
inc
outsl
sub
ret
inc
daa
js
cmpsl
mov
push
jb
cmp
in
push
xchg
shlb
sub
lea
push
cmpl
shll
dec
dec
add
cmp
jl
cmpb
lock
ljmp
mov
jne
and
arpl
fimuls
add
in
js
into
xor
popf
call
addb
insl
xor
lret
leave
sbb
fnstsw
ficompl
xlat
and
lret
sub
cmpsl
repz
add
sub
xchg
stos
frstor
stc
jecxz
outsl
cmp
sbb
sub
xchg
fisubrs
push
jmp
fs
test
jp
lea
push
xchg
xchg
push
lret
xor
inc
adcb
lea
mov
xchg
fisubrl
inc
xor
iret
mov
and
cmc
mov
pusha
push
push
or
mov
sbb
loope
jb
iret
outsl
add
push
xchg
das
scas
mov
dec
push
or
pop
add
xchg
insb
push
sub
inc
sbb
cmp
adc
push
inc
jne
jmp
adc
mov
mov
mov
mov
jo
aad
push
mov
outsl
iret
sbb
push
jne
rcrb
cwtl
push
push
and
push
xchg
xchg
pop
adc
lods
xor
cmp
xchg
ja
repz
les
subl
out
mov
mov
test
rcrb
or
nop
cwtl
or
cmpsl
cmpsb
rol
jmp
sbb
ficompl
mov
inc
xchg
test
xchg
and
leave
loope
shlb
inc
xorb
add
lods
lea
push
pop
shrl
add
js
or
push
in
mov
ljmp
xchg
push
loop
mov
push
test
test
icebp
push
lds
lret
fisubrs
in
add
dec
lcall
repnz
fst
sbb
mov
add
and
and
out
xor
push
inc
dec
repz
addr16
shrb
adc
aad
or
push
icebp
xchg
xchg
dec
adc
push
js
mov
call
in
in
test
flds
or
imul
xrelease
shrb
std
imul
jno
cmp
cltd
xor
cmp
std
push
pop
jp
mov
icebp
jmp
incb
insb
sahf
dec
pop
aam
or
das
adc
and
sub
or
daa
inc
and
jl
and
mov
mov
test
mov
or
pusha
in
pushf
adc
mov
push
sub
mov
cli
sbb
addr16
xchg
addb
data16
gs
and
movl
addr16
xchg
lds
dec
xor
jb
je
jecxz
mov
mov
xchg
push
add
and
mov
leave
mov
in
andb
xor
cmp
xor
xchg
adc
and
scas
dec
mov
mov
ds
jno
xchg
jmp
inc
mov
inc
adc
cs
xchg
incl
repz
hlt
xor
dec
jmp
aad
push
xchg
mov
or
leave
iret
test
xor
cmp
into
add
cmp
leave
out
pop
ret
inc
jmp
loopne
gs
dec
rorl
push
sbb
fisubrs
and
jecxz
sbb
pop
jmp
mov
lds
push
pmaddwd
jns
out
mov
mov
dec
mov
in
xchg
mov
dec
loope
cld
adc
fwait
xor
scas
dec
mov
inc
cmp
dec
outsb
imul
inc
xlat
push
pop
push
rcrb
jnp
stc
or
mov
push
rorb
sub
xor
push
or
add
mov
outsb
pop
aam
mov
jo
pop
xchg
adc
mov
mov
lcall
fbstp
int
bound
cmp
push
mov
addr16
arpl
sub
jmp
mov
mov
sbb
les
mov
sub
cwtl
pushf
push
cmp
dec
sub
cwtl
mov
sbb
loop
cltd
mov
imul
stc
mov
test
je
dec
inc
mov
out
incl
mov
popf
pop
xchg
cmpsb
mov
sar
cld
dec
mov
xor
pop
mov
fwait
and
enter
fwait
push
dec
xor
rcll
inc
xor
shrb
pushf
xchg
mov
out
dec
mov
xchg
pop
lret
pop
inc
sti
jge
jae
push
adcb
adc
xchg
ss
cmpb
inc
mov
inc
inc
mov
xchg
test
sub
imul
call
js
mov
stos
lds
fs
mov
loop
xchg
lds
sbb
imul
inc
outsb
scas
mov
addr16
outsb
ret
sub
cmovne
pop
sbb
es
repnz
icebp
xor
and
lret
dec
rcrl
inc
dec
mov
push
lret
pop
pop
cmp
into
loopne
pop
sbb
lods
xor
dec
loopne
mov
mov
ja
mov
mov
cmp
imul
stos
std
inc
cmc
sub
cli
fwait
xchg
pop
test
jo
or
and
pop
cmovnp
sbbl
nop
out
sbb
clc
mov
jle
hlt
aad
loopne
pop
in
daa
cmpsl
adc
dec
push
mov
in
mov
push
fsubrl
mov
pop
xchg
daa
push
dec
adc
pop
js
sarl
mov
out
fstps
into
gs
cmpsl
xor
lahf
inc
enter
cltd
js
xor
sar
sub
add
lret
out
sbb
lret
daa
adc
subb
push
add
call
mov
and
mov
arpl
inc
sub
movsl
mov
pop
repnz
das
xor
sbb
inc
pusha
insl
cmpsb
jecxz
mov
pushl
lods
inc
into
dec
loop
lds
insl
out
ljmp
jns
ja
in
or
fistpl
push
lcall
and
or
rcrb
adc
jg
cmp
and
shl
insb
pminsw
outsl
scas
fidivl
ret
nop
scas
sbb
push
fstpt
clc
push
add
fidivl
test
stos
and
out
test
lret
arpl
sahf
mov
xor
inc
push
leave
enter
gs
stos
int3
lcall
and
or
xchg
outsb
push
add
dec
jge
lods
dec
jp
nop
push
cmp
lods
ljmp
loopne
in
jmp
leave
cmp
not
dec
inc
hlt
xor
push
cmp
adc
or
sarb
pop
out
mov
daa
jle
outsl
lock
adc
idiv
pop
fdivrl
cmp
adc
jnp
out
mov
les
cli
mov
push
jne
push
mov
add
adc
adc
fs
dec
gs
and
cmpsb
pop
xchg
imul
push
add
jmp
repnz
int
rcr
dec
xor
les
add
add
adc
jb
add
mov
ret
inc
or
jo
lock
mov
int
arpl
pop
cmp
imul
mov
or
pop
fisubl
pop
leave
movsb
push
lahf
mov
and
insb
push
ret
repz
fildll
repz
loop
mov
rorb
adc
sbb
dec
std
xchg
mov
test
arpl
mov
sarb
push
xlat
aad
mov
leave
push
imul
fldenv
lock
and
cmc
dec
mov
or
sbb
add
cmp
lods
xor
pop
or
xor
add
xor
or
outsl
jp
mov
sub
fstl
xchg
push
mov
push
sbb
movsl
xor
std
lds
clc
repz
scas
imul
test
xor
mov
ds
mov
xchg
add
jb
sti
testb
out
mov
mov
roll
jne
pop
mov
inc
out
pop
jnp
and
fildll
or
faddl
das
add
mov
minps
jg
mov
test
adc
xchg
cmp
std
sarb
punpckhdq
push
pop
sahf
lahf
pop
cwtl
mov
test
test
jmp
inc
inc
dec
mov
and
mov
popf
dec
pop
fwait
push
adc
mov
cwtl
mov
inc
jle
inc
xchg
in
js
jmp
jl
test
mov
jno
test
sar
out
jp
repz
xchg
inc
pop
jmp
pop
ror
dec
fdivs
repnz
ss
fstl
lret
and
pop
mov
push
push
cld
sub
ss
or
jb
xor
sar
cld
mov
lea
and
sti
das
insl
dec
fwait
cmp
pop
bnd
pop
stc
popf
ret
shlb
les
mov
test
iret
movsl
cmpl
lret
adc
sub
mov
cld
movsb
jae
sbb
sbb
xor
pop
sahf
xor
es
adc
cs
aaa
push
repnz
sbb
imul
mov
je
pop
ret
ss
dec
ja
lahf
lds
add
add
or
cmpsb
xchg
push
dec
jne
inc
xor
add
dec
movsb
mov
fs
inc
out
jb
inc
pushf
pop
mov
aad
in
xor
arpl
in
inc
fwait
orb
jbe
lods
and
mov
mov
rcrb
into
or
dec
pop
xor
sub
sub
fldt
cld
dec
dec
mov
aas
rcrl
jle
cmp
loop
aaa
fisubrs
lods
mov
add
cli
mov
enter
in
movsl
mov
das
mov
sbbl
fs
xor
in
push
loopne
sbb
outsl
sub
imul
push
lret
imul
adc
addr16
movsb
xor
insl
sub
mov
pop
xchg
ret
stc
mov
or
in
cmp
or
shlb
out
imul
sub
aas
fldcw
mov
repz
sbb
lods
and
cmp
push
std
insl
testl
sub
sti
mov
xor
xor
push
test
dec
daa
dec
ret
cmpb
xorb
daa
lcall
pop
notb
hlt
mov
movsl
ret
mov
adc
and
push
addr16
or
js
xchg
ljmp
jnp
and
mov
hlt
ds
lret
fmull
push
push
pusha
sbbl
out
addl
cmp
pusha
ret
xchg
insl
dec
js
mov
xor
mov
pop
dec
leave
xor
jno
sbb
je
icebp
cld
adc
mov
adc
adcl
or
dec
dec
ficompl
and
mov
sbb
js
loope
mov
mov
mov
inc
mov
nop
lcall
push
xor
jb
movsb
fnstcw
xchg
negl
push
movsl
sbb
jo
xor
hlt
cwtl
int
aas
jge
jno
loopne
jge
inc
mov
add
ret
in
cmp
dec
or
xor
pushf
push
push
mov
jne
out
and
js
scas
sbb
jae
rolb
test
movsl
pusha
sbb
fidivrs
jg
pop
inc
xchg
addr16
sub
pop
sbb
mov
imul
push
sbb
subl
or
push
sbbl
cmp
into
mov
fildll
add
and
cmp
insl
fnsave
dec
out
cmc
dec
pop
sub
mov
cmpl
push
inc
and
roll
leave
fdiv
out
imulb
push
sbb
daa
push
lods
mov
in
stos
push
int
sub
xorl
cmc
jno
sub
xor
scas
inc
jne,pn
pop
test
jno
jg
sub
jo
je
arpl
push
psraw
cmp
jge
icebp
add
insl
adc
sti
mov
dec
jecxz
pop
mov
push
in
leave
xchg
cmp
mov
mov
push
mov
add
jb
in
sti
leave
inc
pop
mov
ret
aam
xor
jecxz
mov
jno
add
aaa
shl
jae
inc
test
outsb
xor
xor
pop
stos
jbe
sub
int3
out
mov
icebp
xchg
stos
imul
mov
test
cltd
and
call
or
outsl
popa
fstpl
cmp
mov
cltd
push
fisubrl
mov
adc
mov
jno
mov
adc
cmp
push
hlt
or
inc
sarb
dec
add
xor
aad
pop
pop
data16
pusha
fiadds
pop
and
int
sub
inc
mov
bound
cmp
shl
adc
testb
push
sbb
inc
cmp
push
push
inc
gs
xchg
jecxz
xchg
ja
out
or
mov
arpl
or
cmpsb
out
subb
mov
int
jl
loop
or
out
scas
jb
in
push
lret
ficoms
pop
aad
jae
and
inc
sbb
je
ret
push
pop
or
out
sbb
jg
divb
sbb
sahf
xchg
adc
je
mov
add
mov
inc
dec
sbb
pop
clc
leave
jp
jnp
mov
jns
rcrl
sbb
push
mov
jge
xchg
fs
lcall
lds
pusha
fdivs
stos
int
fs
mov
test
mov
rcrl
divb
or
in
mov
sahf
imulb
sub
jnp
imul
fdivr
dec
dec
mov
scas
dec
cli
iret
into
pop
dec
lret
out
adcl
dec
imul
pushf
rorb
pop
xchg
sbb
add
push
cmc
push
cld
mov
call
jno
sub
out
sbb
inc
xchg
add
lcall
cmp
cmp
idivb
nop
xor
aas
pop
daa
popa
xchg
and
lret
pop
pop
jecxz
pop
cmc
push
mov
sbb
jno
packsswb
aas
xor
xor
push
push
mov
inc
outsb
inc
fwait
popf
xchg
cmp
daa
je
aaa
test
jge
mov
inc
insb
jecxz
cld
lods
lds
mov
mov
icebp
inc
or
xor
sbb
cmp
cli
dec
rol
fwait
dec
jecxz
sbb
mov
scas
test
mov
sbbb
xchg
jnp
in
cmp
mov
push
mov
ljmp
push
pop
mov
jne
shll
jb
lods
or
aam
out
lds
xchg
out
cs
xor
cmp
cltd
mov
in
xchg
fxch
ret
cmp
pushf
jns
cltd
dec
outsb
fstpt
unpcklps
pop
stos
jmp
imul
and
fsubrl
stos
pop
sti
jle
xchg
lret
nop
insl
add
addr16
mov
and
in
sbb
imul
mov
inc
push
xlat
jl
int
sti
dec
mov
jmp
inc
das
pop
or
jns
jb
push
sub
scas
mov
add
lock
push
or
jae
mov
mov
jnp
and
sbb
iret
ja
cli
or
int3
xchg
stos
and
imul
fdivl
js
push
in
xor
mov
stos
icebp
ljmp
and
or
dec
xor
iret
inc
lahf
hlt
dec
imul
xchg
mov
and
lret
xor
cmp
xchg
popf
ja
pushf
fists
iretw
mov
jmp
cmp
lahf
dec
mov
stos
dec
xor
aas
out
sar
call
dec
in
cmp
jmp
mov
fldt
arpl
xor
sub
js
pop
cltd
enter
insl
mov
or
adc
lods
and
out
arpl
sub
jno
stos
in
mov
mov
adcb
sub
repnz
aas
jp
adc
sbb
movsb
or
add
pop
enter
dec
fs
mov
out
es
sbb
mov
ficoml
js
cmp
jmp
push
sahf
dec
add
and
imul
ret
dec
movsb
incl
std
jbe
pushf
mov
sbb
pushf
jge
push
xlat
adc
popf
lcall
lds
add
mov
push
mov
mov
popf
cmp
add
rcl
cmp
ss
xchg
fwait
loopne
jns
int
mov
sbb
add
aad
jo
sub
add
jmp
jmp
and
pop
ja
push
rcl
jae
je
mov
add
xlat
int
movsb
or
lsl
je
jo
fsubr
in
push
stos
and
and
das
mov
dec
mov
scas
push
cmp
sar
scas
outsb
cmp
mov
sub
cmp
imul
mov
rolb
xchg
cmc
das
popf
jbe
test
cmpsb
loopne
pop
dec
das
sub
and
jb
sub
insb
pop
cli
pushf
mov
add
ficomps
jns
xor
push
js
shlb
push
mov
inc
mov
xor
mov
in
sub
and
add
jno
inc
sti
negl
xchg
xchg
inc
scas
out
rorb
sti
mov
test
sti
add
insb
data16
sbb
test
inc
lret
fistl
sti
add
add
fcoms
sub
jae
loop
sbb
mov
cmp
mov
push
shl
inc
fcoml
pusha
cmp
stos
outsb
mov
xchg
rcrb
mov
adc
int3
das
pop
push
outsl
aas
data16
nop
and
fstpl
fisttpll
sub
vsubss
lahf
push
pop
inc
inc
mov
jne
sbb
xchg
add
pop
cmp
dec
pop
sub
xchg
jo
hlt
dec
arpl
lahf
add
xchg
mov
inc
xchg
jp
cmpsl
sub
and
xor
inc
jno
cmpb
pop
push
negb
lret
int
cmpl
fadd
jg
test
inc
jnp
insb
insb
out
jo
loope
jl
in
jno
aad
jae
push
or
xchg
cltd
ds
xchg
or
pushf
addl
nop
hlt
push
int
insb
jnp
push
sbb
out
or
imul
mov
pop
mov
dec
xchg
mov
ficoml
and
lahf
clc
mov
ret
inc
testl
pop
out
jp
popa
mov
cld
ss
sub
mov
int
or
mov
jl
jae
inc
add
mov
ja
mov
jno
cmp
call
lods
jne
icebp
mov
jo
cmp
and
xor
or
sahf
aam
adc
xor
mov
mov
fisubrs
sub
jle
jg
sbb
in
pop
lret
mov
filds
mov
imul
lods
stos
test
gs
fs
sti
mov
or
ljmp
jl
cltd
mov
adc
push
call
sub
mov
cmp
cmp
cld
ss
jecxz
pop
mov
adc
fidivs
call
fdivrl
repnz
es
cmp
das
cmp
es
add
scas
test
test
dec
mov
not
daa
in
imul
mov
mov
aaa
xchg
pop
adc
movsl
int
int
push
push
adc
mov
cmp
mov
dec
nop
add
xor
pop
jmp
ds
xor
mov
jnp
dec
xchg
xor
leave
icebp
mov
xorb
xor
pop
int
rol
mov
loop
sahf
xor
adc
mov
adc
mov
sub
or
fisttpl
mov
lock
mov
pop
arpl
ficomps
scas
inc
jns
jbe
jno
mov
loope
pushf
jbe
cli
in
repz
shl
adc
or
out
pop
pop
shl
mov
insl
mov
das
sbb
ror
jl
lcall
or
mov
out
test
into
xor
mov
push
out
mov
mov
test
fwait
out
adc
lods
shl
xor
xchg
sbb
pushf
fistl
cmp
lcall
imul
mov
dec
mov
inc
data16
sbb
and
push
movb
int3
cmp
mov
jmp
scas
jnp
jge
push
popa
bound
int
nop
imul
xlat
cmp
in
mov
mov
lock
dec
popl
add
mov
mov
insb
aas
jae
sub
jnp
push
aad
inc
jg
nop
pop
inc
add
xchg
movsl
adc
jns
int3
sti
jp
mov
inc
and
jae
push
sub
in
popf
fadd
mov
shrl
jae
sub
sarl
outsl
inc
popa
xchg
adc
mov
mov
or
std
daa
hlt
insb
enter
xor
inc
scas
fisubrl
mov
pop
mov
les
cmpsl
clc
push
jmp
add
fcoms
and
xchg
lods
mov
mov
notb
pop
fdivrl
cmpsb
mov
ret
pop
addr16
aas
fs
push
add
dec
lods
subl
loop
jbe
add
fisubrl
mov
sarl
add
sub
add
sbbl
jg
xlat
fsts
inc
mov
lods
ret
sbb
les
loope
cld
xchg
hlt
loopne
push
adc
mov
mov
aam
jl
or
cmp
add
mov
out
imul
fs
inc
push
cltd
popf
mov
fdivs
lret
lret
mov
sub
es
pop
mov
cmp
adc
sub
in
daa
adc
scas
add
push
in
mov
xchg
and
enter
jg
jg
mov
ud0
jne
in
out
scas
mov
sbb
mov
sub
pusha
inc
ljmp
paddsb
push
dec
lret
cmp
pop
add
call
scas
leave
adc
std
sahf
xchg
push
xchg
stc
cmp
cltd
lock
mov
push
push
pop
incb
xchg
fabs
sub
jecxz
mov
out
mov
dec
xor
std
outsb
lahf
sbbb
popa
mov
push
xor
outsb
xor
imul
jne
cld
imul
jne
add
neg
jecxz
test
pusha
mov
lock
adc
movsl
xchg
hlt
xchg
nop
adcl
push
sbb
pop
push
in
inc
cmp
cmpsl
out
mov
inc
out
add
loopne
and
loop
push
adc
daa
ret
mov
cwtl
xor
push
inc
out
mov
add
xor
mov
adcb
lods
lods
iret
jmp
cld
andb
pop
scas
aam
shl
dec
movl
lret
insl
add
aam
je
jne
cmp
loopne
jp
dec
outsb
add
and
pop
rcl
jno
xchg
add
sub
enter
jb
lods
nop
rclb
jno
fadd
jl
mov
roll
out
add
jbe
dec
or
test
push
xlat
jnp
or
add
fldcw
xlat
xchg
jle
call
sbb
ret
js
scas
test
xchg
cmpsl
movsb
adc
inc
dec
mov
imull
movsl
pushf
lods
push
push
sub
push
mov
out
divl
xchg
adc
pusha
popf
addb
sti
or
mov
push
pushf
or
pop
ds
lret
jmp
addb
xlat
mov
sub
popa
mov
xchg
push
popa
shlb
push
pop
adc
fdiv
sub
and
js
pop
dec
push
call
leave
push
cmpl
mov
inc
sar
or
xchg
pop
in
mov
push
into
call
push
inc
out
xor
cmpsl
sahf
pop
imul
fwait
pop
shrb
rclb
or
dec
push
lock
out
push
mov
stos
dec
testl
test
call
cmc
stos
xor
bound
xchg
popa
mov
clc
lock
test
pop
or
imul
dec
clc
sub
nop
aam
jle
mov
or
adc
sahf
and
aad
cltd
stos
data16
push
mov
jo
sub
movl
add
or
mov
jmp
aas
sbb
lods
inc
cmc
loope
lahf
mov
loop
inc
in
test
mulb
xchg
xchg
lds
xchg
pop
fs
push
jb
pop
lock
adc
inc
push
fsubrl
cmp
rclb
push
idivl
not
add
adc
add
das
sub
inc
insl
loop
and
lret
cmp
and
sbb
mov
nop
daa
lret
dec
std
add
dec
push
fldcw
mov
jmp
out
int
mov
adc
int3
orl
sbb
lahf
push
sub
jo
mov
mov
jo
xchg
mov
das
push
out
inc
inc
pop
imul
cmpsb
jo
aam
lret
push
sbb
pop
push
xchg
int
in
adc
mov
adc
or
insl
dec
sti
roll
xor
lret
mov
pop
xlat
mov
fs
pop
cmp
in
xlat
xchg
mov
cmp
in
mov
out
fsubs
ja
sub
in
das
sbb
push
rcrb
sub
add
test
mov
mov
sub
sbb
cld
out
adc
xor
xchg
inc
add
mov
xchg
mov
push
daa
ljmp
pop
dec
sbb
pop
sbb
movsb
repnz
adc
addr16
or
and
into
inc
lcall
dec
insl
bnd
jnp
gs
out
mov
inc
push
addl
push
mov
out
fwait
test
fdivl
std
lea
imul
les
xchg
or
outsl
dec
fisttpll
add
jg
and
pop
jo
stc
mov
mov
jp
lret
sub
mov
and
clc
sub
insl
rcr
mov
int3
ss
loop
jp
add
nop
xor
mov
loope
adc
mov
mov
inc
shl
cmc
cmp
inc
test
mov
aad
push
mov
xor
fisubs
cwtl
aas
pop
sbb
push
clc
dec
mov
and
jmp
lahf
adc
xchg
sti
xorl
ret
pop
sbb
xchg
aaa
je
jbe
rcrl
seta
cli
or
nop
lret
and
popf
gs
mov
subl
mov
and
mov
fists
sbb
movsl
push
leave
mov
sbb
xlat
rorb
daa
pop
pop
int
pusha
jae
mov
cmp
pop
jecxz
mov
shl
test
aas
mov
pop
ret
inc
sub
jp
outsl
test
jae
repz
in
rcrb
mov
dec
sbb
adc
jg
lock
or
lcall
shl
cmp
pushf
jmp
inc
pop
mov
jnp
jmp
dec
mov
or
mov
push
das
pop
insl
xlat
shlb
mov
data16
pop
jge
in
andl
aad
mov
dec
xchg
jno
aaa
icebp
add
sbb
fcoms
adc
sbb
pop
xchg
or
hlt
mov
leave
movsb
dec
out
lds
loop
mov
adc
push
mov
dec
test
xchg
sub
sub
add
neg
adc
dec
shrb
decb
popa
lcall
mov
lods
and
sti
daa
stos
sub
mov
jecxz
inc
es
sahf
mov
adc
mov
rep
and
mov
cltd
mov
push
test
imul
jmp
arpl
int3
mul
push
pop
pop
push
adc
jns
sub
mov
cwtl
fdivr
in
loop
pop
add
mov
jae
das
mov
sbb
jo
sbb
js
repnz
xor
mov
lahf
ljmp
inc
cld
in
mov
pop
adc
push
dec
inc
sub
or
into
dec
in
push
stc
std
inc
mov
sub
push
adc
mov
mov
and
jge
shl
lds
pop
and
dec
pop
push
sub
insb
adc
push
pop
jmp
mov
gs
fisttpll
addr16
and
in
xchg
and
mov
mov
es
nop
dec
pusha
and
stc
lahf
mov
jle
cmp
push
subb
adc
fcomps
inc
out
xchg
popa
idivb
mov
ss
mov
imul
mov
cmp
ss
xor
insl
lds
xchg
lret
dec
xlat
in
dec
xor
ds
push
xchg
lods
mov
cwtl
add
outsl
in
pop
and
cmp
push
shrb
out
push
and
in
or
cli
fbstp
cmpsl
push
pop
je
sarl
mov
push
testb
dec
cmp
mov
das
popaw
jp
cmc
shrl
rcll
sub
adc
andl
and
pushf
aad
inc
dec
adcb
je
loopne
ljmp
in
mov
insl
dec
stos
push
or
mov
xor
and
test
sahf
pop
lcall
rcrb
or
xchg
cmc
ret
pop
and
mov
or
stc
and
xor
stc
scas
pop
inc
mov
aaa
lods
aaa
and
scas
inc
and
sub
es
xlat
shrl
xchg
jp
inc
adc
mov
add
xchg
sahf
xor
fsubs
test
rorl
ds
inc
pop
cmp
mov
outsl
add
aaa
adc
movsl
mov
jmp
rcrb
iret
aas
lea
sub
fcmovb
xchg
fdivl
and
adc
push
inc
in
in
mov
add
push
fs
int3
mov
sbb
xchg
pop
mov
or
stos
pop
xchg
cmpsb
jbe
inc
jae
jnp
pop
movsb
and
orl
mov
cmpsl
and
sbbb
mov
add
bound
pop
rcll
inc
lods
insb
bound
lea
push
jnp
fcoml
cmpb
movsl
inc
loop
movsl
rcrb
repz
aaa
dec
bound
xor
int3
in
push
and
push
dec
testl
pop
mov
fists
push
imulb
mov
out
cmp
ficoml
xchg
lds
lods
lret
push
push
sbb
dec
sbb
dec
push
out
outsb
imul
subl
jp
jmp
xchg
pop
mov
adc
sub
lcall
pop
lret
insl
lods
int
sub
pop
dec
sbb
inc
push
cwtl
repz
imul
push
mov
daa
xor
divb
mov
sub
fwait
lea
xlat
cmpb
push
push
fimull
mov
lods
lds
arpl
sub
ds
aad
cltd
aad
dec
mov
daa
push
adc
lea
sub
testb
inc
lods
mov
mov
pop
sarb
mov
mov
xchg
sbb
and
sub
stc
js
push
push
decl
sbb
xor
loope
mov
movsl
in
in
outsl
data16
add
inc
xchg
lods
imul
fwait
push
mov
push
ret
ljmp
imulb
enter
cmp
or
js
ss
sub
add
iret
fbld
mov
cltd
pop
mov
jnp
xchg
icebp
cli
cmp
rcrl
fimuls
jle
lcall
jb
push
ret
pop
xlat
loope
push
popa
sub
pushl
push
push
adc
sahf
loope
aaa
jmp
mov
daa
fidivrs
in
inc
rorb
mov
cmc
shrb
mov
sub
sbb
pop
shlb
roll
add
cmpl
leave
adc
decl
jb
mov
mov
fsubrs
mov
jl
lahf
aad
ret
cs
imul
or
sahf
and
shr
les
xlat
push
ss
or
orb
popa
pop
jp
pop
add
push
icebp
mov
sbb
cmpsb
subb
xchg
out
scas
sbb
repz
sbb
mov
or
stos
inc
les
icebp
test
lahf
dec
push
and
mov
jb
daa
lcall
xchg
pop
shll
out
or
xchg
mov
pushf
cmpl
push
cmc
popa
and
pop
fisubrs
mov
xchg
inc
mov
cmp
inc
jbe
mov
cmp
and
and
in
je
jo
fldcw
jle
rcr
inc
lret
mov
add
jns
faddl
or
pop
ret
lds
ds
dec
adc
movsb
cltd
pop
dec
inc
sahf
movsb
sti
xchg
data16
sub
or
imul
mov
rolb
mov
mov
dec
iret
jne,pt
jo
aam
xchg
push
jp
dec
popf
adc
prefetch
rorb
call
jge
inc
rol
add
dec
mov
inc
shr
pop
pop
mov
mov
ret
and
arpl
int
dec
test
dec
ja
sub
pop
aam
aad
mov
enter
ret
jmp
pop
and
inc
inc
jl
mov
ds
lds
sbbl
out
repnz
popf
jmp
xor
sbb
and
test
adc
addl
mov
js
or
pop
push
mov
dec
xchg
inc
in
ss
push
pcmpgtd
pop
sahf
jo
addr16
jb
lea
sbb
vpaddusw
adcl
mov
js
and
xchg
adc
mov
imul
sbb
imul
xchg
pop
pop
aam
mov
rorl
fildll
mov
mov
jb
jmp
add
lcall
insb
cmp
push
or
fldl
pop
mov
or
push
fucomp
dec
xchg
int3
fistpl
bound
bound
mov
inc
add
adc
aaa
inc
stos
fcomi
jbe
push
pop
iret
push
push
push
jne
push
les
pop
pop
sub
jg
mov
or
xchg
mov
fisttps
cmp
jb
mov
ror
jbe
imul
mov
mov
lret
mov
je
gs
xor
add
aas
inc
lds
loop
int
es
xchg
and
pop
fwait
sti
out
out
stc
jmp
outsl
lock
sub
push
aaa
gs
inc
fstl
mov
mov
andl
mov
arpl
aaa
ret
adc
jo
or
or
xor
shl
push
cmp
mov
int
jle
je
cmp
addr16
jae
lock
xor
add
mulb
test
xor
add
std
popf
xchg
ficomps
negb
push
cmpsb
sbb
add
clc
mov
repz
les
xor
fwait
movsb
add
lahf
xlat
mov
push
stos
ds
aas
add
mov
push
cmp
add
mov
xchg
inc
rclb
addr16
gs
repnz
jo
js
jp
cwtl
pop
mov
jl
pop
mov
sbb
out
icebp
pop
sahf
xor
dec
push
shlb
sti
lret
push
lods
in
push
push
xchg
add
ret
stos
lcall
pop
loopne
scas
outsb
or
jns
test
scas
cs
out
mov
or
out
dec
mov
pop
xchg
jbe
fidivl
xchg
xchg
sub
out
dec
jnp
mull
scas
outsb
cmc
ljmp
xchg
ret
or
sbb
xchg
pop
pop
add
pop
mov
insb
mov
repnz
adc
in
sub
mov
into
push
nop
cltd
and
cli
pusha
js
sahf
into
incl
mov
mov
inc
or
mov
pusha
push
push
sub
pop
aaa
pop
mov
dec
mov
int
outsb
and
mov
mov
adc
pop
push
cmp
mov
lods
out
pop
test
dec
aaa
mov
sbbb
orl
and
xchg
lea
xchg
test
clc
cs
test
pop
js
ficomps
and
int3
add
fsubl
mov
mov
push
sub
or
ja
lock
loope
popa
cwtl
adc
repz
mov
cmpsb
fisttpll
pop
icebp
jg
mov
mov
outsl
fs
shl
xchg
jae
jle
dec
out
pushf
inc
sub
icebp
sbb
mov
inc
mov
lret
fiadds
add
pusha
ljmp
jne
xor
mov
fwait
push
shll
sub
mov
imul
lret
stos
push
pusha
xchg
adc
inc
xchg
subl
cmpsl
insb
push
insl
lds
mov
std
mov
sub
fs
out
mov
sub
jl,pn
inc
cmc
sti
cltd
mov
xor
and
cwtl
fstpt
pop
mov
and
jae
push
int
mov
jns
into
aam
stc
mov
mov
cmp
ret
lock
add
pop
xor
lods
mov
shrb
rcr
inc
mov
fcoms
aad
lds
ja
xchg
cld
lods
aam
std
push
imul
pop
mov
mov
sub
cmp
xlat
sub
xor
pop
pop
dec
adc
rcrb
inc
push
inc
fiaddl
mov
jne
out
cmp
js
into
fldenv
into
push
jae
mov
cld
leave
inc
pop
aam
xchg
xor
sbb
jle
aas
or
xchg
xchg
dec
and
jno
leave
int
xor
push
lret
dec
adc
flds
adc
hlt
add
dec
jl
mov
sbb
clc
outsb
gs
fadds
cli
js
out
or
decl
mov
rorl
movl
ficoms
inc
pop
outsb
cmp
mov
jno
daa
xchg
pop
adc
pop
gs
jmp
js
and
pop
cmp
jmp
or
pop
pop
lret
lahf
mov
adc
cmp
pop
mov
in
nop
xchg
std
in
push
xchg
add
dec
xchg
mov
outsl
stc
enter
xor
mov
sbb
pop
push
sbb
cwtl
int3
adc
or
out
lret
sub
push
lcall
mov
je,pt
pop
sub
adc
cmp
pop
xchg
or
cld
add
xor
sub
adc
xchg
bound
mov
push
in
leave
call
mov
xchg
mov
jo
xchg
sbb
mov
cmp
fdivrs
mov
lea
inc
sub
cmc
fadds
cmp
fcoms
push
push
test
jnp
mov
mov
sub
dec
and
filds
mov
push
adc
push
push
rol
cmp
test
jbe
xor
adc
adc
push
sub
jb
or
iret
dec
push
arpl
push
outsb
and
xchg
insb
dec
inc
out
pop
or
mulb
mov
mov
loope
sub
adc
mov
outsl
arpl
or
or
popa
sbb
pusha
movsb
cmc
dec
ljmp
adc
push
js
and
lahf
inc
mov
mov
mov
adc
inc
inc
gs
mov
incl
enter
sub
jae
xlat
ss
hlt
rorb
cmpsl
insl
mov
icebp
xchg
pop
or
or
test
mov
adc
push
or
fsts
cmpsl
cmp
das
fwait
or
js
jae
sbb
mov
mov
adc
mov
push
cltd
or
inc
and
push
inc
fsubl
xor
add
xchg
sbb
popf
rclb
pop
pop
mov
or
shrb
and
es
cli
test
pop
jbe
mov
leave
inc
pop
sbb
in
nop
push
in
das
push
fs
fstpt
out
or
or
cmp
xchg
cmp
or
loopne
pop
into
cltd
mov
pop
push
dec
cs
iret
add
mov
lahf
pop
or
sbb
xorb
icebp
leave
fdivr
push
fnstenv
test
adc
add
inc
sahf
push
lds
lods
mov
mov
daa
cwtl
dec
inc
mulb
push
dec
sub
sbb
movb
out
adc
push
loopne
or
cmpsl
sbb
sub
ja
insl
jg
and
sub
inc
inc
imul
cwtl
lret
cmpsl
add
stos
rcll
stos
shll
cmpsl
jecxz
xchg
adc
xor
pop
push
int3
lds
inc
enter
and
push
sub
push
rol
clc
int
stc
loopne
xor
and
aaa
push
ret
push
mov
dec
ljmp
les
add
cmp
test
add
popa
cmp
dec
push
add
icebp
jl
sbb
add
add
pop
add
popa
imulb
fisttpl
cmpsb
out
adc
mov
dec
jno
mov
sub
and
or
in
mov
sub
jg
repnz
movmskps
cwtl
jg
lcall
xor
inc
lods
adcb
sub
adc
inc
mov
jb
rorl
andl
add
push
fldcw
test
stos
jb
fwait
xor
sub
inc
push
and
mov
mov
leave
cmp
leave
test
cld
push
fcomps
jno
arpl
mov
jge
jbe
pop
or
jle
iret
pushf
movsb
add
or
popf
xor
jl
movl
xchg
pop
dec
inc
fwait
aas
or
pop
inc
push
sbb
loope
pop
cs
repz
dec
push
xchg
or
add
test
inc
popf
imul
add
outsl
je
push
cmp
dec
scas
jbe
sub
loop
add
rcrb
mov
inc
and
mov
aam
outsl
or
aam
dec
or
popa
aaa
insl
cmp
pop
repnz
inc
movl
mov
lcall
mov
adc
mov
and
sbb
in
jecxz
pop
inc
sahf
push
icebp
ffree
int3
jle
subb
ret
push
pop
xlat
xor
cltd
mov
iret
rclb
or
add
push
mov
fldenv
cmp
sahf
add
lock
leave
sbb
lret
mov
divl
or
sub
les
adc
icebp
mov
sub
jp
jns
xor
lret
cmc
movsb
ds
pop
in
ffreep
leave
jb
mov
cmp
enter
stos
jle
outsb
mov
mov
ucomiss
rcll
jecxz
mov
js
mov
inc
mov
push
std
and
mov
inc
pop
pop
les
mov
inc
ret
jge
popa
ljmp
push
out
pop
lret
lds
out
and
push
ss
xchg
jmp
clc
mov
int3
aaa
pop
mov
shrb
mov
mov
dec
and
sub
xchg
arpl
push
rsqrtps
push
lock
fwait
push
mov
pusha
add
sar
dec
repz
mov
ret
out
insl
mov
lahf
cmpsb
ja
insl
fs
mov
lcall
pop
mov
mov
push
int3
popf
lea
and
xor
and
pop
inc
int
inc
push
shrl
popf
jb
lret
scas
lcall
lock
mov
cwtl
mov
testl
enter
gs
mov
inc
fistpl
jle
or
and
imul
aad
xchg
push
add
loopne
add
mov
shrl
repnz
aaa
enter
adc
lret
in
lock
andps
testl
inc
das
pop
loop
out
dec
shll
dec
cltd
lret
loopne
test
lret
dec
pop
mov
xchg
cmp
add
enter
mov
mov
mov
call
stos
pop
jmp
sbb
sub
adc
inc
imul
and
ret
out
and
hlt
xor
sbb
jbe
add
mov
push
fstps
rcrl
sbb
sub
shrb
aad
mov
mov
pop
adc
daa
pushf
xchg
loopne
push
lods
sbb
pop
pop
ret
movsb
jnp
sub
test
xchg
pop
ret
fsubrp
inc
pop
daa
sub
xchg
xor
lahf
out
xor
fmull
adc
mov
lea
sub
les
push
scas
mov
fildl
bound
xor
stos
clc
inc
xchg
sub
jle
mov
popf
xchg
cwtl
idiv
pop
cmp
nop
xor
push
add
inc
xor
mov
dec
cld
cltd
xorl
mov
stc
push
lock
aad
xor
pop
mov
mov
mov
mov
inc
outsl
mov
mov
add
push
inc
pop
mov
stos
mov
loop
sub
dec
fisttpl
shlb
mov
loopne
sysret
hlt
add
ds
clc
pop
ret
leave
bound
mov
inc
mov
ret
mov
xchg
sub
inc
mov
cmp
loope
xor
adc
aaa
sub
test
inc
or
mov
ss
push
dec
adc
call
push
mov
hlt
inc
jp
dec
out
arpl
nop
das
int3
dec
sbb
push
sbb
inc
subps
roll
clc
mov
fdiv
arpl
sub
rol
ret
cmpb
insl
dec
pop
xorb
and
cmp
lds
or
cmpsl
loop
subl
mov
mov
enter
inc
aas
es
dec
int3
mov
enter
push
xor
jns
mov
jl
sbb
rcrb
adc
cli
clc
and
jo
mov
test
cmp
mov
sti
popl
mov
mov
movsl
daa
fidivs
adc
inc
setle
lods
scas
mov
or
pop
mov
and
int3
in
mov
pop
fcompl
lods
jae
js
stos
imul
enter
inc
pop
xchg
mov
mov
or
pushf
and
and
mov
cmc
nop
movsl
sub
xchg
dec
dec
aad
sub
pop
negb
sqrtps
das
inc
mov
cli
mov
fisubs
dec
ljmp
hlt
sub
andl
push
and
cmp
inc
sub
mov
shrb
inc
xor
stc
jno
repz
mov
push
push
dec
cmpl
xchg
dec
cmp
xchg
xchg
cmp
enter
in
insl
inc
in
pop
sbb
mov
jne
scas
jns
mov
in
test
inc
and
pop
mov
cli
movsl
mov
loope
sbb
mov
cmpsb
movsl
pop
cmp
or
inc
xchg
push
xchg
jbe
fldl
sbb
sbb
fdivrs
or
in
scas
les
sbb
out
add
add
ja
cmp
jo
cwtl
lock
dec
mov
out
data16
mov
push
aam
stos
mov
sbbb
dec
push
lods
ret
push
dec
clc
js
out
enter
sbb
cwtl
xchg
mov
roll
test
je
dec
mov
int
pop
scas
jle
lahf
xchg
in
mov
cmp
and
sub
and
xor
fcoms
adc
jne
mov
mov
add
mov
lahf
out
pop
movsl
out
push
jmp
insb
stos
dec
or
add
je
inc
fisttpll
mov
imul
xchg
dec
popa
iret
rcl
in
lods
dec
insb
push
dec
jg
cmp
jmp
lods
xor
out
sub
pop
into
jg
in
xor
loope
cmpsl
cs
jmp
nop
ja
outsb
lock
ds
enter
aas
clc
jae
in
ss
mov
pop
push
xor
sub
inc
or
pop
jge
pop
shlb
push
testl
mov
jmpw
popa
adc
lds
sbbb
xchg
adc
rol
jae
inc
jmp
scas
shll
xchg
push
sahf
inc
bound
insb
xor
sbb
push
ret
sub
cmp
ficomps
loope
mov
test
adc
jns
insb
mov
jns
xchg
rorb
dec
ret
insl
push
cmp
jne
jno
and
inc
nop
sbb
lock
sub
push
sub
test
enter
sbb
and
adc
dec
add
fsubr
push
loop
add
jmp
mov
popa
sahf
push
bndldx
cmp
push
adc
sbb
test
cmp
xchg
loope
jg
push
xor
jns
pop
adc
jo
mov
jnp
xchg
les
jb
mov
mov
sub
jbe
popl
stos
mov
jne
mov
pop
dec
fcoml
inc
cmp
fisubs
push
shrb
and
inc
cmp
std
push
xchg
pop
das
pop
sub
out
sub
loopne
rolb
sbb
push
sbb
ds
lock
mov
repz
int
outsb
enter
pop
rcr
ja
enter
scas
sbb
xchg
pop
shrb
adc
in
sub
rcl
inc
aad
cmpl
int3
add
xchg
insb
mov
cli
sbb
adc
inc
jg
adc
sbb
sbb
loope
jbe
add
aas
or
push
xchg
push
cld
push
stc
inc
and
push
dec
jae
xor
repz
mov
pop
clc
dec
xchg
mov
fsubr
mov
ret
jecxz
inc
jno
jne
dec
sahf
mov
dec
test
mov
jbe
rcl
jmp
lods
pop
loope
repnz
das
mov
jmp
inc
mov
repnz
lods
popf
mov
cmp
push
jmp
cwtl
std
or
hlt
jno
dec
daa
mov
jge
aad
mov
scas
push
jno
jmp
out
xchg
xor
jmp
scas
mov
mov
mov
aam
mov
cmp
int
data16
stos
mov
in
hlt
push
ja
repnz
jmp
jge
cmc
int3
mov
scas
iret
mov
push
xor
test
test
lahf
and
sbb
ret
mov
jo
out
dec
in
arpl
cmp
incb
ds
mov
int
faddl
jmp
mov
dec
cmp
mov
bound
jo
mov
cmp
add
mov
shrl
out
and
jle
push
mov
lahf
cmpsb
mov
mov
insl
adc
aas
xchg
pop
lea
daa
bound
int3
xchg
cld
das
inc
in
cmp
sbb
loopne
cmp
test
loopne
in
xchg
mov
pop
loopne
adc
cs
or
sbb
mov
into
xor
scas
mov
and
xor
hlt
inc
jmp
int
test
pusha
or
sbb
lds
cs
xchg
mov
mov
scas
jge
sbb
stc
cmc
or
mov
insl
pop
loope
push
sbb
lock
push
dec
xchg
enter
pushf
test
nop
jne
adc
ja
mov
mov
add
dec
sarb
aad
sub
add
addr16
addr16
and
mov
leave
add
inc
mov
push
movhps
xchg
sbb
inc
outsl
or
xchg
push
fistps
fdivrs
test
cmp
mov
out
push
data16
fcoml
adc
out
call
sbb
pop
cmp
mov
test
scas
icebp
in
inc
popa
gs
repz
inc
out
insl
and
cmp
repz
mov
gs
xchg
push
push
out
mov
mov
imul
cmpsl
arpl
rorb
cmpl
int3
pop
xchg
jecxz
sahf
xor
addl
mov
jbe
jp
nopl
imul
imul
out
add
push
cmp
adc
pop
mov
xchg
loope
mov
icebp
xchg
mov
cmc
imul
jecxz
mov
fldt
mov
mov
mov
mov
loope
fsubs
cmp
ljmp
cmc
sahf
into
jmp
call
xor
push
dec
loopne
jmp
shll
gs
sub
mov
cmpsl
fiadds
dec
ret
out
cwtl
lret
and
mov
fisttps
aaa
push
mov
inc
rorl
sbbl
fsubs
enter
jp
adc
stc
addb
push
cmp
add
xchg
mov
mov
cmpsb
ja
arpl
mov
push
mov
sbb
out
xor
test
in
pop
sbb
das
pop
pop
add
pop
adc
jno
icebp
aaa
mov
push
shll
mov
dec
divb
test
imul
xchg
test
push
or
pop
out
dec
xor
bound
pop
jecxz
adc
adc
incl
xor
or
leave
add
mov
mov
mov
ret
pusha
mov
into
jecxz
fwait
pop
ret
ret
ss
push
mov
xor
inc
cmp
adc
shlb
clc
sahf
imul
add
xor
jl
ss
shll
pop
xor
jge
pop
int3
add
sbb
jbe
mov
aad
lods
mov
jae
jbe
lret
mov
loope
int
mulb
inc
push
jns
cltd
xor
mov
xor
sahf
add
mov
cmpb
ljmp
and
cwtl
push
repz
shl
xor
bound
xchg
jg
fbld
fldpi
add
add
js
adc
insb
push
xchg
mov
daa
or
fisttpl
out
shrb
ret
mov
movsb
push
sarl
and
add
push
or
mov
adc
inc
inc
aam
pop
into
xchg
mov
and
xchg
inc
push
jmp
ja
inc
shrl
scas
sbb
in
lea
mov
mov
push
and
dec
jmp
shl
dec
xor
das
xor
cli
mov
cmpsb
pop
adc
fucomi
jmp
push
fwait
push
std
shlb
adc
fists
dec
cmp
push
movsb
sub
call
cmp
insb
and
fcmovnu
or
push
mov
pop
push
fs
adc
mov
inc
inc
xchg
sbb
movsl
pop
loope
ret
rcll
popa
ljmp
push
pop
ret
inc
mov
jecxz
add
addr16
push
and
mov
hlt
mov
adc
push
dec
daa
out
stos
push
push
fidivl
adc
and
inc
sarb
mov
and
add
ret
inc
mov
xor
rolb
cmp
push
rorb
and
ret
sub
and
push
test
iret
outsl
out
mov
push
rcrl
pop
hlt
pop
pusha
adc
cmpb
mov
mov
jnp
cld
jg
mov
scas
scas
mov
dec
stc
mov
mov
add
add
sbb
jns
out
xchg
jecxz
jno
inc
mov
ret
sbb
pop
inc
xchg
gs
lret
add
sub
sub
inc
es
movsl
lahf
pop
scas
outsb
mov
mov
xchg
notb
pushf
cmp
pop
xchg
xchg
mov
lahf
mov
outsl
lret
adc
imul
jmp
pop
cmc
mov
int3
shl
movsl
jmp
mov
inc
ret
mov
or
aas
imul
jb
js
mov
in
pusha
cmpb
jb
icebp
fcoml
pop
iret
mov
mov
loope
into
push
test
push
cli
dec
push
aad
mov
xchg
cs
mov
in
les
xor
mov
dec
jl
mov
xor
scas
dec
stc
je
rcrl
inc
repnz
mov
xor
dec
ror
sarb
rolb
cmp
arpl
cwtl
and
repz
test
repnz
outsl
sub
addb
lcall
iret
cmpsl
shrb
inc
xchg
inc
roll
out
outsb
pop
push
cmp
push
mov
dec
fsubrs
hlt
imul
addr16
popa
push
mov
mov
js
daa
sub
push
xor
fsincos
loope
movl
mov
jmp
fadds
sbb
cmp
xchg
fmull
sbb
and
push
aaa
add
xchg
cmpsl
mov
iret
push
push
or
out
jbe
pop
sub
push
add
call
push
stos
sub
xor
arpl
jo
fdivrs
jnp
out
adc
xchg
pop
mov
imul
cli
add
mov
mov
xor
popf
pop
xor
fadds
rorl
or
lods
and
push
mov
test
mov
mull
xchg
jg
orb
and
inc
outsl
lcall
cltd
mov
movsl
cmp
push
dec
adc
dec
inc
or
add
dec
daa
or
fs
add
xor
aaa
mov
dec
sahf
addr16
mov
push
mov
lods
jl
lret
insl
xor
mov
and
imul
pushf
adc
pop
push
rcll
xchg
add
dec
or
cmp
pushf
pusha
mov
dec
nop
dec
test
sub
es
test
xchg
ret
add
jle
push
stos
gs
mov
or
mov
mov
fsubs
call
cmp
in
outsl
and
sub
clc
jp
aaa
movl
out
mov
inc
in
mov
xlat
pop
jae
mov
fiadds
scas
stos
repz
inc
xchg
jno
xchg
pop
addr16
ljmp
mov
enter
shlb
push
push
xchg
mov
and
cmp
xor
adc
dec
cmc
fxch
mov
xlat
fwait
cmc
dec
add
sub
loop
push
and
pop
nop
loop
aam
pusha
or
dec
sarb
mov
fwait
mov
ret
test
hlt
mov
mov
ret
cmp
aad
mov
sbb
test
or
jbe
and
imul
cltd
test
xchg
dec
jnp
xchg
cmpsb
push
or
xor
jmp
and
leave
xor
push
inc
mov
stos
mov
sbb
push
lock
mov
fwait
and
adc
or
lcall
push
in
scas
in
loop
mov
adcl
out
mov
dec
aam
std
sub
aam
repnz
aas
pop
pop
jo
jbe
adc
pusha
sbb
mov
lahf
int3
xor
adc
mov
pop
mov
aad
adc
pop
adc
lret
es
daa
fcoms
xor
and
adc
pop
nop
push
std
mov
push
das
sbb
xor
sti
out
pushf
mov
xchg
into
or
out
test
popf
add
movsb
inc
xchg
pop
jmp
in
ljmp
fldcw
enter
jmp
adc
rep
xor
shlb
mov
scas
scas
aas
xchg
sti
mov
mov
adc
add
movsl
push
sbb
scas
fwait
sahf
or
push
int
bound
mov
call
push
shll
mov
or
mov
push
popf
dec
xchg
faddl
sbb
hlt
xacquire
arpl
shlb
shrb
test
in
fwait
xor
lock
or
in
mov
shrb
mov
adc
dec
inc
push
xchg
or
cmp
test
or
inc
clc
popf
jae
gs
or
xor
jecxz
jg
jp
nop
mov
xor
xor
int
mov
or
enter
xchg
add
mov
pop
stos
jmp
lret
or
pop
jne
or
push
aaa
jae
lret
sub
cwtl
pop
nop
fstps
inc
ljmp
arpl
and
imul
mov
push
iret
xchg
lock
lods
push
xchg
inc
andb
adc
aaa
mov
shll
pushf
filds
adc
js
pop
mov
add
daa
xchg
dec
in
add
dec
outsl
fsts
mov
aam
cmc
xchg
xchg
pop
xor
push
in
mov
mov
sarb
and
rol
aad
adc
jmp
aaa
mov
pop
repnz
cmc
test
jno
mov
xor
lret
inc
add
xchg
aaa
inc
jns
push
inc
add
arpl
pop
inc
int3
out
jnp
adc
inc
pop
xor
or
xchg
aam
popa
xchg
out
lahf
xchg
sub
cmp
xchg
fdivr
inc
stos
cmpsl
mov
xchg
push
adc
ja
inc
popf
mov
push
xchg
les
inc
cmp
loop
lcall
mov
hlt
shll
std
sub
and
sti
int3
push
cmp
lods
add
push
nop
pushf
mov
adc
in
push
pop
lods
xor
mov
or
cmpsb
sbb
lock
push
hlt
pop
out
popf
mov
or
cmp
vmovmskps
sbb
adc
xchg
xchg
repnz
sub
pop
jb
out
jge
mov
add
and
mov
dec
mov
mov
xchg
icebp
mov
sbb
dec
rcll
lahf
mov
adc
sbb
adc
test
out
mov
mov
adc
xchg
sbb
cmp
mov
sub
mov
pop
repnz
ss
jl
pop
or
xchg
cmpl
in
or
pop
push
fmull
in
nop
insl
gs
in
lahf
pop
popf
mov
ds
gs
pop
ds
add
sub
mov
jle
pop
jae
cmp
fsubr
jg
imul
xor
hlt
fs
jnp
mov
mov
pop
je
push
pop
pop
mov
inc
jmp
lahf
cmp
in
int3
jle
imul
push
inc
mov
lock
rcrl
and
sbb
mov
sub
xor
dec
stc
adc
cs
hlt
mov
push
xlat
out
jno
loop
mov
je
and
adc
daa
cld
pop
push
imul
frstor
lcall
repz
cli
lret
stc
add
cli
mov
push
cltd
imul
inc
and
ljmp
push
sbb
pop
cmp
loop
sbb
push
negb
enter
scas
in
pop
aaa
lods
lret
xchg
lret
lods
cmp
xlat
unpcklps
aad
cmpsl
int3
sub
sub
in
cmp
outsl
fldcw
pop
test
push
fimuls
cmp
add
cmpsb
popf
sbb
push
fwait
adc
in
dec
int
cmp
cli
mov
addb
sub
push
in
cltd
and
call
lret
xor
or
test
int
arpl
repz
adc
and
lds
push
dec
or
inc
push
mov
xchg
cmpb
add
fstp
rol
mov
shlb
xchg
call
sub
adc
sbb
mov
out
inc
daa
or
cli
push
jae
pop
cmpsb
lahf
aad
cwtl
mov
ret
mov
lret
test
out
jmp
mov
in
and
inc
lret
dec
test
xor
fsubrl
and
xchg
rcrb
test
stos
adc
subl
inc
xchg
int3
xchg
mov
cmp
mov
pop
popf
pushf
movsb
jp
shrb
fisubrl
hlt
adcl
jmp
fcmovne
dec
and
or
pusha
mov
cmp
or
cmp
in
dec
pop
out
int3
das
or
push
mov
adc
sub
call
pop
sub
mov
mov
les
mov
inc
add
lods
and
sbb
sbb
mov
icebp
push
jmp
push
adc
sbb
inc
add
push
mov
fnstsw
insb
inc
jge
pop
cltd
mov
xor
icebp
popa
cltd
mov
mov
aad
sarb
daa
loope
xchg
arpl
dec
mov
aad
xchg
mov
loop
jno
sbb
mov
sbb
add
lret
mov
xchg
sahf
rcll
mov
sbb
adc
imul
imul
repnz
inc
arpl
xchg
loope
les
adc
mov
stc
mov
xchg
in
pop
out
enter
mov
fisubl
and
cwtl
jle
mov
stos
inc
jle
inc
aaa
js
fildl
add
jae
cwtl
aam
enter
push
sub
outsb
ret
leave
adc
xchg
lret
adc
sub
xchg
jmp
sarl
ret
or
jns
push
mov
stc
cmpb
jmp
bound
outsl
cmpsb
mov
mov
lcall
add
push
outsb
testw
jnp
addr16
and
pop
dec
push
push
das
mov
mov
and
outsl
pop
leave
xor
dec
nop
jne
pop
and
inc
fs
mov
xchg
rolb
dec
fisttpll
sbb
enter
mov
cmp
test
lret
repz
into
lock
pop
xchg
pop
das
and
push
out
mov
jns
popf
sub
push
out
ret
pushf
push
inc
notl
xorl
inc
jle
sub
mov
and
jecxz
in
cmc
fsubrp
lcall
sub
daa
xor
adc
add
in
jbe
ficompl
fidivrl
ret
dec
dec
cmc
mov
pop
lret
pop
mulps
out
dec
xchg
sar
testl
mov
sbb
sub
inc
push
adc
jno
int
test
pop
pop
fldcw
lret
stos
out
push
add
cli
push
pop
dec
outsb
adc
xchg
arpl
mov
cmp
lea
sub
push
ret
and
cmp
inc
mov
add
and
xor
mov
fmull
les
loope
sbb
jae
xchg
mov
xor
ljmp
in
sbb
mov
lret
jecxz
cs
dec
jb
or
scas
movsl
adc
into
and
fidivs
pop
lret
mov
icebp
mov
lahf
rolb
jecxz
sbb
and
aad
testb
mov
mov
inc
xchg
jl
fcomi
cli
loope
cmp
cmp
iret
fdivs
movsl
lcall
sti
push
push
es
int
mov
lods
loopne
enter
mov
mov
cs
lock
push
add
sbb
loopne
jge
fwait
mov
add
iret
inc
cmp
or
jg
cmpsl
mov
lea
fwait
sbb
daa
jo
clc
and
or
add
testl
jno
into
ret
aaa
xchg
nop
hlt
sbb
xchg
mov
scas
mov
lcall
jl
testl
push
lods
adc
dec
sub
int
adc
test
jbe
cmpsl
inc
in
mov
add
leave
add
mov
inc
int3
loopne
sahf
dec
stc
mov
icebp
test
dec
data16
mov
cld
insb
push
bound
fucomp
aas
scas
es
lds
js
jb
mov
adc
push
out
pop
pop
adc
lods
in
xchg
mov
aas
cmp
mov
hlt
push
imul
arpl
jbe
inc
dec
or
je
jno
cmp
pop
mov
xor
and
mov
punpckldq
mov
sbb
dec
sti
cmpsb
and
ja
mov
dec
fcos
mov
outsl
dec
dec
rcll
xor
and
scas
mov
cmpsb
lret
sub
adc
xor
clc
scas
test
shl
ds
pop
sub
cmc
mov
cmp
sub
stos
test
mov
fmuls
sbb
jne
dec
and
add
add
adc
loop
test
jnp
leave
movsl
js
cmp
das
loope
loopne
and
push
outsl
clc
movsl
mov
jae
out
push
and
xchg
andl
add
cmp
inc
jnp
or
subl
jl
pop
loopne
xor
pop
or
lret
sbb
pop
aas
mov
sub
push
mov
lea
in
pop
fbld
fsts
outsl
dec
int
inc
push
adc
sub
mov
sahf
test
pop
mov
ljmp
jecxz
dec
push
inc
dec
push
leave
adc
in
ds
sub
in
xor
jbe
incl
out
mov
or
das
iret
sbb
jne
inc
in
test
pushf
negb
inc
xchg
outsl
xchg
jp
xchg
push
int3
sahf
mov
inc
lock
test
dec
adc
cmpsb
dec
cltd
aad
sub
stos
xchg
mov
ljmp
loope
jns
push
into
jne
mov
outsl
sarb
and
in
mov
call
mov
jae
sti
push
adc
movsb
push
jno
cwtl
cmp
lret
and
cmpl
pushf
jne
pushf
pusha
lcall
sbb
and
inc
or
cmp
iret
hlt
fwait
pusha
xor
imull
les
lods
and
jnp
pop
test
push
test
aaa
cmp
aam
push
jp
fdivs
push
cmp
mov
add
aam
popf
lds
jmp
cmp
movsb
sbb
cmc
hlt
fdiv
sub
fdivrp
repnz
inc
rol
adc
loopne
test
cmp
sbb
in
add
stc
fimuls
jbe
mov
rcll
popf
or
xor
cmp
loopne
orb
dec
repnz
mov
lock
idiv
dec
sbb
mov
mov
ja
out
sbb
enter
call
dec
push
xor
adc
add
push
arpl
or
lock
aad
jmp
aaa
outsb
popa
push
fs
sub
lock
jo
mov
mov
ja
and
and
cmpsb
mull
out
testl
das
jmp
fdivrs
push
mov
addr16
in
sub
fwait
or
sbb
ret
andl
clc
adc
pusha
add
in
lea
lahf
fs
adc
mov
xchg
popf
pushf
ljmp
or
push
cld
aaa
mov
cwtl
mov
adc
xor
mov
xor
xchg
mov
push
iret
add
ds
mov
int
jbe
push
das
int3
icebp
push
mov
movsl
outsl
int3
adc
test
xchg
cs
sub
sti
jle
cmp
sbb
xchg
fsts
pop
test
dec
nop
push
int3
scas
push
or
xchg
push
cmp
cmp
lcall
shrl
ds
xor
mov
xorl
data16
adc
sbb
and
inc
push
mulb
sub
mov
push
jg
push
outsl
xchg
loop
std
mov
cli
adc
pop
lret
leave
mov
repz
sbb
cltd
lret
addl
frstor
lock
mov
mov
jae
ret
insl
or
cmpsb
scas
or
jnp
add
mov
data16
sti
hlt
mov
je
lret
in
inc
inc
push
fnsave
es
icebp
inc
pop
movsl
inc
xchg
and
mov
fcmovu
xchg
iret
fistpl
sbb
into
jle
xor
or
pop
stos
sub
test
jne
mov
xor
lret
push
aad
js
inc
xchg
jno
cmpsb
fidivl
daa
jb
xor
int
test
jg
das
loope
and
mov
fstpt
sbb
test
jne
xchg
stos
sbb
popa
push
push
fists
nop
ret
xor
cmpl
push
jb
ud1
push
cmpsl
and
sbb
hlt
mov
xor
jg
dec
addl
imul
sub
lret
leave
mov
std
daa
popa
testb
inc
rclb
or
popf
pop
and
jno
sarl
cltd
push
subl
lds
jp
pop
mov
sub
mov
cmp
lret
cmp
xchg
add
lahf
sbb
shrb
xchg
movsl
jg
mov
ljmp
cwtl
mov
mov
dec
fsubr
ficoms
mov
or
aad
mov
movsl
int
mov
lds
testb
jns
ja
adc
insl
loop
scas
adc
insl
pushf
daa
insb
aam
mov
xchg
jmp
fnsave
adc
or
rorb
ja
test
adc
cmp
loopne
dec
stc
aas
or
pop
lock
xor
sti
lods
adc
insl
insl
stos
pop
mov
aaa
loop
repz
stos
nop
in
cmp
cli
lods
repz
ret
and
xor
loop
add
mov
lods
xor
daa
setl
fsubl
movsl
add
dec
test
cmc
xchg
int3
sub
cld
call
lret
push
fisubl
pushf
loope
pop
ret
cmp
or
outsl
and
mov
movsl
or
lret
stos
insl
and
dec
jp
dec
xchg
repz
push
mov
lret
xorl
mov
insl
aas
mov
xor
sarb
stos
lods
xchg
cwtl
cmp
aad
stc
jo
out
imul
add
insl
add
aaa
lret
inc
aas
flds
stos
add
pop
imul
lods
enter
in
push
call
add
cmp
sahf
shll
or
scas
insl
xor
push
aaa
ljmp
cmp
xor
aaa
dec
add
sti
test
movl
xor
xchg
add
repz
mov
dec
xor
movsb
mov
mov
test
cmp
push
or
inc
pushl
mov
sbb
pop
and
int3
out
dec
popf
push
adc
js
or
mov
lar
jge
lea
sub
test
inc
xor
pushf
dec
mov
cmp
ja
cmp
dec
mov
ds
in
arpl
leave
popf
push
int3
imul
xor
cld
adc
pop
push
lds
push
xor
pop
hlt
mov
test
mov
dec
dec
xchg
fdiv
inc
push
push
mov
int
ret
adc
fcompl
repnz
scas
push
push
pop
push
mov
arpl
lods
pop
pop
lcall
cld
xchg
mull
sub
lcall
sub
hlt
adc
or
mov
xchg
ljmp
inc
sbb
xchg
ja
testb
and
test
and
lea
sbb
cmp
cld
xchg
mov
mov
js
pop
xchg
imul
repnz
aad
out
push
add
xor
cmpsl
lock
cld
inc
aas
sbb
and
fdivr
push
mov
jl
imul
xacquire
xchg
out
push
jo
sub
push
jg
jno
xor
fwait
je
jge
cltd
xor
js
push
add
aaa
lock
lahf
jo
shr
fmull
test
lods
sbb
mov
sub
inc
push
adcl
mov
ja
fadds
aaa
repz
and
mov
out
xchg
arpl
mov
scas
dec
shll
cmp
mov
stos
stc
or
inc
xor
std
in
lahf
mov
in
notl
xlat
xor
shrl
les
iret
nop
test
mov
cmp
lea
xchg
les
sbb
add
fdivl
adc
dec
loope
sbb
adc
inc
inc
push
mulb
pop
dec
popa
mov
cmpsl
ljmp
leave
mov
jp
xchg
ret
lods
push
and
fldenv
sub
jmp
rol
shl
jp
push
mov
or
das
jmp
jmp
pop
dec
out
inc
push
pop
xchg
fsubrl
jne
arpl
scas
xchg
in
mov
adc
adc
popa
in
pop
xor
mov
aas
fs
add
cmp
mov
push
xchg
pop
in
test
cld
and
imul
adc
lods
adc
sub
inc
pop
inc
xor
addr16
push
sti
xchg
add
popf
or
push
ficoml
mov
sbb
mov
icebp
std
fistpl
popa
in
push
out
sbb
rclb
jle
jmp
fwait
push
mov
lock
push
pop
push
fucom
je
inc
jne
mov
inc
sub
aad
mov
add
jo
mov
js
rcl
shl
adc
outsl
shl
fbstp
push
decl
cltd
push
xchg
pusha
cmpsb
xchg
movsl
lret
dec
and
pop
xchg
icebp
fstpl
fisubrl
adc
ret
xor
fstpl
fsubrs
scas
popa
fs
dec
out
sbb
sbb
cmpsl
cli
lods
xchg
push
addr16
push
repz
add
test
adc
in
mov
or
dec
sub
pop
xor
push
jmp
sahf
repz
adc
push
loope
es
into
xor
pop
sar
lods
mov
int3
mov
push
stc
gs
push
lcall
imul
add
pop
test
dec
pop
imull
loopne
into
lds
and
into
out
or
rcrl
sbbb
and
mov
mov
mov
out
sbb
rorl
std
movsl
bound
cld
mov
jb
jmp
shlb
jnp
aaa
inc
lods
mov
sbb
xchg
nop
mul
sbb
add
repnz
sbb
or
push
sbb
out
iret
xchg
scas
xchg
push
push
mov
addr16
jp
in
sbb
fnstenv
test
hlt
push
ljmp
or
pop
bound
cli
sub
sub
fdivrs
js
mov
xor
minps
push
int3
popa
adc
aaa
jo
pop
outsl
int3
aas
adcb
or
cmpsl
dec
gs
jmp
xorl
mov
dec
cltd
adc
sub
movsb
into
pusha
ds
adc
cmc
stos
ja
add
outsl
inc
dec
sub
xchg
cmpsl
and
pop
pusha
ds
outsb
stos
popf
push
mov
and
iret
pop
jp
xor
je
xor
jl
inc
xchg
fsubl
stc
cmp
cs
jnp
push
das
jge
pop
testl
cmc
jno
repnz
mov
daa
mov
cmp
in
cmpsl
jae
daa
cs
xchg
jle
mov
or
in
dec
pop
and
popa
rcr
test
in
add
jb
sbb
les
push
out
into
imul
loop
jp
sbb
test
inc
int3
pusha
in
pop
sbb
jbe
pop
pop
add
nop
mov
push
ficoml
jbe
lea
scas
or
push
aad
jno
in
xor
ss
jne
bnd
fdivrs
outsl
push
lods
vpaddw
adc
xchg
add
mov
sub
movsb
mov
jg
in
dec
aas
inc
sbb
and
fstps
out
out
cli
ds
pop
icebp
dec
xor
fcmovb
ljmp
fsub
leave
pop
add
lcall
nop
xlat
sub
and
ror
xchg
data16
or
and
push
or
push
adc
jle
cmpsl
repnz
and
jbe
jb
imul
jbe
aad
sbb
je
movb
inc
push
jnp
insl
jo
lret
lcall
call
ss
test
insl
cld
addl
add
pop
push
orl
pop
out
push
insb
pop
adc
jg
jb
fimull
imul
sti
sarb
mov
cmpsb
jp
imul
jno
push
sbb
inc
ja
mov
aas
mov
sbb
inc
xchg
int
je
rcrl
test
lsl
mov
mov
xchg
in
inc
lret
pushf
add
or
mov
cs
dec
stc
lcall
sbb
push
sbb
dec
adc
inc
or
js
mov
cs
cmp
add
sbb
push
mov
jg
in
sbb
dec
jl
mov
test
add
sbb
je
cmp
xor
ja
clc
and
dec
and
fsubrs
adc
test
stos
fistps
sbb
dec
out
sbb
dec
and
xor
push
cmp
lods
add
repnz
sbb
xorb
xchg
jp
push
sti
jo
inc
fs
push
cmpl
fnstcw
pop
add
insl
lsl
cld
ja
enter
aaa
mov
les
mov
mov
adc
fdivrl
cmpsl
fcomi
sbb
dec
fsubl
push
push
insb
mov
cmp
ss
dec
jne
mov
fcmovnb
xor
test
jecxz
into
jo
orb
stos
and
jp
mov
jne
mov
xor
sbb
pop
xchg
lods
daa
mov
dec
sub
inc
adc
lods
popa
loope
jg
jle
sbb
and
loop
jae
sub
push
fildl
mov
cmp
imull
std
adc
fists
stos
in
adc
inc
rorb
aas
adc
loope
arpl
mov
jmp
js
mov
push
dec
scas
push
add
or
popa
ds
loope
daa
sbb
pop
fiaddl
mov
xchg
xchg
cmp
rolb
cmp
test
inc
xchg
das
pop
push
in
sti
mov
mov
jle
movsb
rcrl
cs
adc
jae
cmp
sub
inc
into
jge
cmpsb
sub
push
mov
mov
push
das
inc
xor
or
inc
pop
insl
push
es
xchg
fisttpll
addr16
mov
pop
adc
pop
mov
popf
mov
push
or
lods
in
or
cmp
int3
inc
xchg
mov
mov
mov
dec
aam
cli
movsl
xor
lea
push
pop
out
pop
lahf
movsl
lods
mov
mov
mov
sbb
movhps
outsb
ss
sti
mov
stos
inc
pop
cltd
das
lock
mov
add
xchg
subb
sbb
add
sarb
arpl
mov
les
mov
in
loop
call
pop
repnz
lret
mov
sbb
mov
push
push
dec
scas
and
pop
fmull
js
and
mov
scas
ficompl
fldl
mov
jne
mov
mov
mov
jg
add
sbb
aad
mov
je
xchg
lret
pop
or
sub
jmp
mov
mov
pop
hlt
data16
mov
das
lahf
fstpt
mov
xchg
xchg
leave
pop
addr16
mov
and
or
xchg
sahf
push
add
jnp
cld
aaa
icebp
xchg
sub
jmp
cmpb
fs
cmp
jb
popl
xor
cwtl
xlat
lcall
xor
ret
add
pushf
inc
movsb
subb
inc
xor
aaa
fcompl
dec
inc
add
mov
mov
neg
js
ljmp
mov
mov
jnp
mov
and
dec
and
add
mov
mov
dec
cld
sub
test
adc
rorb
xchg
adc
adc
dec
mov
push
fdivrs
sbb
aas
mov
cmc
shlb
jg
lods
movsb
fsubrl
push
mov
hlt
in
push
jle
add
adc
push
popa
sub
sahf
and
pusha
add
shlb
push
pusha
scas
adc
push
roll
int
es
adc
mov
sti
inc
mov
mov
sbb
push
lcall
sub
push
fcmovnbe
lea
fs
into
and
mov
sahf
push
mov
mov
add
shl
popf
push
pop
mov
fsts
imul
lods
cmpl
xor
push
test
call
cwtl
push
xor
mov
inc
mov
add
ret
aam
out
aas
cwtl
cltd
or
movsl
lcall
xchg
cwtl
insb
cmp
inc
cmp
mov
mov
add
orb
mov
adc
xor
ss
adc
jle
leave
mov
notl
sbb
pusha
cmp
leave
nop
xor
sahf
sbb
mov
cwtl
mov
xchg
jno
sub
cmpsb
call
sub
pop
xor
jae
fidivrl
call
icebp
and
add
jg
inc
sbbb
imul
cmpsl
push
xchg
jmp
test
or
add
jne
inc
ss
mov
mov
xor
sub
push
xor
popf
gs
sbb
mov
lock
mov
shrb
xchg
and
clc
mov
adcb
aam
pop
adc
push
fwait
xor
pushf
fadd
push
push
clc
mov
ljmp
adc
aaa
inc
xor
xchg
add
cmp
cmp
mov
jge
pop
jmp
adc
xor
jmp
pop
imul
sub
mov
test
jle
jecxz
sub
lcallw
fisttpll
out
clc
cmp
xor
cmpsb
fistps
sub
out
xchg
lret
fs
orl
sub
adc
sub
ret
xor
das
aad
xlat
mov
inc
lea
mov
shll
ret
mov
mov
jne
xor
icebp
dec
rcll
rcll
test
test
lcall
inc
push
cmpsb
push
fwait
cld
adc
push
test
daa
fstpt
inc
and
hlt
adc
enter
dec
stos
jo
sbb
jle
int
jmp
rorl
dec
jecxz
roll
pop
push
in
imulb
add
cmpsb
dec
inc
mov
dec
sbb
fcomi
mov
rcrl
rolb
dec
outsl
lret
arpl
icebp
outsl
mov
and
jp
data16
daa
jae
pop
pop
dec
mov
orl
aam
jmp
jne
cmpsb
fidivs
sub
mov
sbb
gs
cltd
sbb
out
jmp
mov
movsl
push
mov
xchg
inc
cmc
jo
pusha
ds
add
pop
cmp
fcoms
mov
aam
stos
xchg
jge
repnz
jecxz
out
aad
jge
shll
adc
mov
icebp
je
cltd
ja
lock
xchg
imul
fwait
cwtl
mov
lcall
frstor
test
cmp
je
mov
dec
xor
pushl
test
sub
popf
or
int
mov
xchg
call
in
jmp
mov
aas
xor
add
lods
xor
js
int
popf
add
jnp
xchg
dec
fsubl
flds
std
insl
subl
ja
repz
leave
loop
fstpt
in
in
lods
lock
adc
adc
iret
mov
popf
sbb
ds
cmp
addr16
stos
test
xor
cmp
fs
mov
mov
sbb
mov
dec
das
lcall
inc
aas
pop
sbb
inc
outsl
bound
sahf
adc
adc
push
addr16
icebp
repnz
mov
pushf
pop
mov
mov
pop
fmull
sahf
jne
lcall
imul
jne
lock
sub
and
lea
xchg
mov
xchg
lret
push
push
pop
lock
imul
and
divb
mov
int
js
dec
loopne
mov
cmp
inc
push
hlt
mov
adc
mov
ds
stos
mov
jb
les
nop
jmp
dec
adc
mov
cltd
outsb
mov
fstpl
cltd
push
sbb
arpl
hlt
push
xor
movsl
imul
test
sarl
es
cwtl
cs
enter
add
jbe
mov
rcrb
sbb
jbe
and
xor
jp
lods
cmp
add
dec
data16
fildl
ret
sub
cmp
call
or
push
mov
xchg
push
movsb
mov
mov
aam
out
jnp
sti
add
dec
movsb
daa
xor
test
jle
pop
sub
movsb
xor
stc
mov
push
aaa
inc
je
in
stos
mov
jb
fsubs
jle
leave
insl
daa
and
xchg
ret
pop
aad
or
sub
shr
pmuludq
jbe
jp
pop
out
repnz
pop
push
loopne
int
pop
pop
xorl
pop
call
mov
xor
xor
subb
pop
aad
pushf
cmp
cmpsb
cld
mov
test
pop
popa
aam
push
adc
imull
sbb
jecxz
dec
enter
sbb
imull
mov
mov
aas
push
test
dec
inc
inc
xor
call
cmp
cmp
cltd
xchg
in
adc
dec
lods
mov
push
leave
fwait
pop
adc
pop
imul
inc
sbb
test
jp
mov
lods
push
in
sahf
xchg
jbe
mov
sti
ss
mov
push
out
jo
add
lds
dec
inc
aaa
cltd
inc
repz
call
sub
mov
add
in
lock
test
mov
mov
and
mov
xchg
stos
fcomps
fs
or
fsubl
pop
push
mov
in
sbb
pushw
mov
sub
pop
inc
xchg
xor
loopne
les
adc
jbe
and
push
es
pop
jbe
xchg
iret
cltd
inc
shl
lret
cmp
mov
mov
aam
repz
mov
xchg
sbb
sub
push
xor
sub
cmc
cmp
ds
daa
repz
push
jo
mov
cmp
sbb
or
lods
push
sarl
or
cmpsb
test
call
outsl
mov
cvttps2pi
test
add
or
out
in
fwait
mov
and
sarl
sbb
cs
fnsave
mov
dec
add
rcrl
jbe
mov
fucomp
nopl
xor
mov
cmp
add
push
jp
sub
imul
pop
repnz
jmp
pop
pop
mov
das
and
stc
shl
loope
cmpsl
push
cltd
mov
or
cwtl
ret
jle
add
mov
sub
or
loopne
mov
fwait
or
outsl
call
jo
pop
jnp
fsubrs
mov
stos
jle
pop
inc
dec
shll
fisttpll
lds
sub
lret
in
jp
and
shlb
cmp
int3
pop
sti
xchg
int
roll
jg
andl
daa
add
insl
xchg
push
mov
xchg
cld
repnz
cmp
inc
mov
sbb
insb
out
int
popa
push
dec
ljmp
xchg
sbb
pushf
mov
leave
test
inc
xchg
xchg
int
pop
into
insl
pop
icebp
push
jb
xchg
or
outsb
lock
pusha
outsb
mov
shr
inc
push
mov
adc
inc
fld
push
cmpsl
pop
push
sbb
sub
dec
das
dec
dec
or
imul
adc
lds
loop
rcl
sub
rorl
out
rorb
pop
mov
and
push
mov
cmp
pushf
mov
stc
mov
jp
xchg
por
in
out
cmpsl
lds
outsl
dec
sarb
dec
add
xorl
and
cmp
aas
idiv
add
out
mov
push
push
lcall
pop
mov
imul
lods
xchg
push
pop
pop
pop
inc
or
inc
adc
mov
test
add
push
stc
test
jl
stos
xor
dec
sub
jecxz
mov
je
dec
push
dec
addl
or
ret
insb
or
mov
movsb
push
flds
push
xor
cmp
sbb
fcoml
jb
jnp
add
sbb
cltd
jl
cmpsb
lcall
dec
jge
in
mov
lret
mov
data16
or
test
dec
push
or
fistps
jg
aam
out
pop
mov
add
xchg
jnp
jno
jle
inc
lcall
mov
sub
cmp
mov
pop
aaa
gs
imul
jne
fimuls
ljmp
cmpsl
sbb
adc
aas
sbb
mov
mov
inc
pop
addr16
xor
in
add
inc
cld
arpl
sbb
dec
hlt
cli
inc
push
stos
add
sahf
mov
sahf
les
adc
xchg
or
movsl
int
icebp
icebp
hlt
mov
int
lock
inc
stc
lret
int
sahf
test
jl
mov
stos
cmpsb
out
movsb
xor
cld
dec
or
pop
xlat
inc
fimull
aam
push
pushl
arpl
and
add
rcr
out
xchg
negb
arpl
adc
shll
loopne
and
scas
jbe
hlt
pop
fs
or
adc
int
pusha
inc
ffreep
mov
add
dec
mov
test
sbb
jne
in
sbb
push
jmp
pop
lea
push
push
into
or
inc
push
out
sbb
je
cmpsb
ja
cmpl
mov
mov
sahf
mov
sbb
dec
stos
test
clc
and
sub
bound
ret
mov
add
push
inc
aad
repnz
fistpl
js
in
gs
xor
inc
adc
dec
sbb
scas
and
sti
sbb
movsb
scas
push
es
and
cmpsb
sti
and
popa
jbe
cmpsb
or
push
dec
xchg
imul
out
xchg
mov
mov
icebp
jns
or
xchg
loopne
iret
pusha
xor
out
int3
mov
sbb
iret
jo
sbb
daa
outsb
movsl
jmp
js
movsl
in
rol
cld
xchg
cwtl
rcr
jp
inc
inc
add
test
test
cmp
add
stos
ja
out
fwait
and
fiadds
sbb
push
fwait
dec
mov
jnp
daa
mov
mov
pusha
xor
shrb
in
movl
sahf
into
adc
xchg
mov
insl
in
fidivrl
pop
mov
pmulhw
cs
shrb
movsb
int
mov
adcl
sbb
push
ffreep
dec
pop
ljmp
pop
in
jecxz
sub
cmp
sbb
add
int3
cltd
loopne
adc
mov
dec
aas
test
mov
ljmp
icebp
xor
xchg
mov
push
nop
jnp
andl
int
fldenv
fisttpll
push
int
cmp
mov
xor
pop
mov
and
negb
enter
dec
inc
mov
cmp
add
decl
add
mov
xchg
movntps
in
add
or
xor
les
js
roll
int
push
rorb
in
aas
pushf
push
dec
outsl
js
and
arpl
mov
repnz
ret
les
in
popf
xchg
nop
push
xchg
stos
and
mov
cmc
imul
das
mov
lcall
push
hlt
dec
mov
daa
cmc
std
mov
cmpsl
sbb
push
push
cmp
push
rcll
push
in
ja
movsl
inc
add
push
or
frstor
mov
pop
in
sub
stos
clc
fisubl
lods
icebp
int3
test
das
mov
scas
fistpll
mov
jmp
jmp
dec
ret
popf
mov
cmpsl
jmp
mov
sar
stos
adc
xchg
mov
ror
aam
cmpsb
jns,pn
cmc
mov
insl
fisubl
mov
imul
push
icebp
push
and
inc
add
sub
and
mov
cmp
cmp
mov
mov
ret
dec
mov
jecxz
notb
rcll
jle
push
lret
and
shlb
into
mov
cmpsl
jns
clc
lods
mov
push
mov
imul
dec
jb
xchg
ficoms
lods
arpl
mov
jmp
inc
adc
ljmp
inc
cmp
xor
int
ret
aas
es
out
enter
xchg
jge
fs
ja
rcrl
inc
pop
add
cmc
clc
cwtl
push
xor
cmpsl
fdivrs
es
add
pop
mov
xor
sets
ss
ffree
cmp
rolb
popa
push
jnp
loop
cmp
fs
xchg
and
add
push
insb
rclb
sbb
fsubrs
imul
dec
pop
adc
out
stc
adc
mov
jb
es
jp
clc
sbb
jle
cmc
xor
imull
xorb
fadd
lret
int
or
movsl
movsl
mov
aad
add
xchg
inc
out
and
sar
and
push
mov
loope
sub
in
test
and
es
imul
mov
cmp
pop
mov
aaa
popf
out
popa
mov
mov
mov
gs
arpl
out
dec
inc
xchg
pop
stos
cmp
test
sbb
xor
sub
push
ret
movsb
inc
loop
inc
mov
push
jecxz
popl
xchg
sti
stc
push
fwait
or
frstor
outsb
icebp
xor
sbb
in
sub
loope
or
pusha
mov
sbb
mov
mov
pop
and
loope
or
jmp
pop
scas
jg
test
mov
jmp
ret
fs
ret
rcl
jle
loop
add
sub
fnstcw
add
cmpsl
push
pop
or
mov
addb
int3
push
repz
dec
pop
call
lret
pop
sub
ds
dec
nopl
arpl
fcmovne
daa
dec
insl
push
cltd
cmp
sub
das
std
pusha
fs
xchg
das
mov
pop
or
sbb
repz
sti
jbe
mov
mov
mov
test
add
scas
push
out
adc
jae
mov
pop
push
bound
stos
xor
lcall
dec
je
pop
adc
adc
pop
mov
push
dec
mov
lcall
and
mov
icebp
in
lea
push
ss
pop
repnz
cmpsb
outsl
popf
ljmp
icebp
or
jno
or
mov
jb
cwtl
adc
and
jb
adc
lret
lret
xor
jo
sbb
sbb
pop
mov
inc
push
dec
cli
lret
addr16
jle
lock
add
hlt
xchg
movsb
fadd
jb
xchg
mov
kmovb
lods
mov
xchg
je
popa
xor
mov
cli
mov
aam
nop
sub
je
and
and
and
push
sbbl
test
mov
sub
inc
xorl
sbb
sbb
xor
dec
cmc
mov
sbb
push
dec
xor
frstor
in
outsl
jne
mov
icebp
lea
inc
and
adc
pop
inc
popf
das
sbb
shlb
xor
pop
or
push
in
xchg
push
push
push
or
shr
or
out
dec
fs
subb
sahf
pop
loopne
adcl
cmp
sbb
in
decl
fimuls
cmp
out
sbb
in
fistl
cmpsb
xchg
cltd
pop
cld
jo
cmc
jbe
or
jge
push
cltd
ficoml
into
rorb
push
mov
fnsave
inc
mov
leave
fisubl
and
ljmp
outsb
adc
or
push
rcll
add
or
mov
dec
pop
dec
pop
inc
fadd
dec
mov
push
jnp
les
ss
dec
cmpl
push
and
dec
ret
stos
adc
cli
mov
lock
cmp
test
mov
mov
and
jmp
arpl
shl
pop
call
loopne
sub
shlb
mov
orl
cmpb
push
adc
lock
xchg
mov
mov
cld
xchg
sbb
loop
mov
pop
jb
roll
push
aad
nop
pop
and
ret
dec
mov
arpl
loop
outsb
out
cmp
mov
push
mov
jmp
enter
bound
push
mov
fnsave
pop
cmc
fwait
cltd
sarl
lods
addr16
mov
mov
or
mov
arpl
jp
out
imull
adc
mov
clc
xor
pusha
outsl
insl
xor
mov
arpl
mov
rclb
and
jnp
stos
and
jnp
cmp
fiaddl
in
shr
mov
lds
fcomps
mov
js
out
add
aad
lods
mov
xor
jns
jg
push
cmpl
pop
and
shl
into
push
mov
test
xor
jg
outsl
lods
push
daa
inc
sub
out
aad
or
xor
inc
aad
scas
push
lock
push
inc
dec
lods
aam
pop
dec
and
jecxz
jecxz
out
and
dec
xchg
mov
lret
dec
lock
sub
add
jns
pushf
cmp
dec
mov
adc
scas
cmp
xor
and
jp
pop
std
mov
test
or
fcoml
bound
inc
dec
sbb
xchg
mov
cli
ret
add
add
inc
and
inc
add
and
dec
jmp
push
lock
pushf
rcrb
addl
and
out
adc
fldenv
pop
sbb
pop
stc
pop
or
sub
test
sub
out
mov
cwtl
aam
scas
leave
test
adc
xor
or
xchg
ret
push
out
sub
leave
popf
cmpsl
jns
enter
aam
xchg
in
or
movsl
sub
or
leave
inc
jne
push
adc
movsb
dec
jl
shl
loop
jae
mov
adc
jp,pn
xchg
out
movsl
rcl
shll
mov
jg
loop
in
movsl
mov
dec
xchg
jecxz
mov
sbb
xor
cmp
je
add
xor
jbe
and
test
sti
mov
stc
int
jp
shrb
push
lea
gs
ret
aaa
aad
pushf
sti
in
lock
iret
sti
pop
or
in
fisubs
jmp
xchg
int3
stos
sub
mov
cmp
dec
push
gs
out
push
jecxz
jle
iret
xchg
xchg
adc
and
cmp
pop
orb
jo
shr
pushf
xor
enter
imul
and
push
pop
and
dec
loope
cmc
jb
fst
scas
xchg
dec
mov
imul
jne
sub
jmp
mov
mov
scas
mov
mov
popf
popa
mov
aam
rcr
mov
adc
repz
sbb
jl
ja
or
out
jp
inc
lods
add
adc
cmp
scas
mov
sub
arpl
or
xor
adc
inc
xchg
out
jl
data16
jo
push
jg
xor
mov
adc
inc
add
cmp
scas
inc
cmpsb
mov
sbb
nop
inc
fmul
mov
xchg
pushf
repz
in
ret
lea
cmpb
fwait
sub
outsb
ret
int3
cmp
mov
mov
cwtl
jae
roll
andl
fsubrl
fldenv
jp
push
add
jnp
mov
enter
xchg
push
mov
dec
add
je
sbb
push
mov
inc
inc
jno
adc
out
loope
mov
and
fwait
lods
mov
test
and
dec
cmpsb
xchg
inc
out
aaa
inc
sub
cmp
add
adc
xchg
orb
mov
clc
cmp
cs
outsl
cvtps2pi
and
mov
push
adc
pop
push
mov
data16
out
into
mov
fsubrl
sti
adc
loope
adc
subl
adc
aam
xor
sub
inc
sbb
gs
call
lods
popa
xchg
mov
sub
scas
jno
test
lods
push
js
inc
xchg
push
mov
mov
lock
xchg
pslld
add
lods
xchg
and
xor
push
pop
push
sub
jl
dec
jae
test
bound
jbe
dec
mov
cmp
inc
inc
mov
ljmp
or
test
dec
xor
outsb
mov
add
addr16
icebp
stc
dec
xchg
insl
mov
jecxz
loope
mov
loopne
int3
fs
leave
xor
fldenv
jb
loope
mov
mov
cmp
in
mov
add
js
loop
lds
mov
push
popa
sub
and
or
xchg
sub
inc
or
jg
mov
jns
mov
jg
inc
cld
rolb
popa
mov
sbb
mov
fwait
jo
decl
cli
pop
add
mov
lret
sbb
sbb
popf
lret
sub
fbstp
repz
mov
dec
stos
shrl
mov
add
sbb
sbb
icebp
ss
adcl
lahf
mov
inc
push
jb
ja
push
aaa
outsl
mov
mov
dec
dec
bnd
inc
imul
adc
flds
ja
pop
inc
js
jne
mov
pop
inc
leave
sbb
lds
mov
mov
cmpsb
inc
fwait
cs
pop
xorb
mov
movups
arpl
stos
cmp
cmp
sub
xchg
mov
mov
cwtl
hlt
fisttpl
or
out
mov
data16
jl
roll
jne
push
fisttpll
and
xchg
dec
and
xor
int3
cmp
faddl
or
iret
loopne
sub
dec
mov
mov
mov
add
loopne
es
cmpsb
loope
jge
dec
mov
jl
ljmp
lock
mov
sub
jle
adc
sahf
movsb
cli
jp
adc
sar
push
mov
push
xchg
mov
pop
sub
fadd
adc
mov
and
xchg
mov
sarb
leave
js
xor
lret
push
mov
mov
mov
inc
lods
push
lret
mov
pop
mov
pop
repnz
sahf
fimuls
cmp
loope
adc
dec
mov
lods
aad
sti
dec
lcall
lret
mov
arpl
scas
or
xchg
nop
ror
and
pop
or
shlb
ret
int3
and
es
mov
jp
jmp
pop
push
xor
repz
dec
xchg
dec
xchg
mov
jecxz
insb
jle
and
sbbb
daa
dec
cli
and
adc
pop
or
jnp
adc
dec
pop
dec
in
fcomp
sbb
shl
jne
push
push
mov
sbb
mov
lret
xchg
cmp
loope
push
adc
mov
and
xchg
dec
pop
xor
enter
and
dec
ds
and
push
add
cmpsl
xchg
mov
mov
inc
lock
inc
fildll
pop
rcr
jecxz
jne
out
pop
lods
jg
push
adc
dec
mov
jns
out
hlt
fnstenv
in
outsl
push
lds
das
mov
mov
add
ret
cmp
popf
loope
cmp
xor
xorl
pop
fstp
or
adc
cmp
xchg
jecxz
or
jl
adc
xchg
and
cli
pop
push
inc
scas
xchg
pop
mov
xchg
repz
rcrb
repnz
popf
lret
jb
adc
sub
push
mov
cmp
les
mov
mov
out
repz
push
bound
or
cs
add
aad
jne
fstps
mov
out
mov
cmp
insl
push
sti
sbb
add
and
adc
mov
idivb
mov
in
test
xorl
or
mov
iret
outsb
hlt
aaa
arpl
and
clc
mov
inc
push
xchg
int3
ret
es
jp
movb
int3
sbb
mov
daa
mov
mov
test
or
movsl
jge
mov
xchg
repnz
rclb
shll
bound
sub
enter
pop
cmp
in
fistps
jge
fmull
and
push
test
fnstcw
xchg
out
cmpl
and
mov
in
and
setnp
xchg
rcl
pop
jo
hlt
data16
mov
sti
lock
inc
sarl
pop
ffree
lcall
enter
or
les
xor
jecxz
mov
push
mov
dec
jnp
and
test
inc
and
xor
int3
lds
and
mov
jecxz
in
add
stc
nop
lret
sti
jle
cmp
pop
inc
sbb
or
and
imul
fstl
shll
scas
cmp
mov
add
push
mov
mov
mov
sbb
add
add
scas
jnp
push
repnz
xor
scas
jmp
mov
jno
push
push
inc
fimuls
sub
hlt
scas
sti
or
aas
xchg
gs
pop
ja
xchg
jbe
divl
xchg
mov
or
int
xchg
sbb
add
dec
rcrb
or
shr
bound
and
lock
jmp
cmp
scas
pop
insb
push
xchg
mov
dec
cmp
push
lea
out
imul
sbb
test
push
loop
jmp
sub
pop
xor
ret
sub
daa
popf
cmp
fiaddl
sbb
push
and
cld
mov
xchg
aaa
lods
add
mov
cltd
out
inc
popa
in
xor
lcall
mov
insl
mov
dec
and
scas
dec
lock
mov
jns
sbb
lods
adc
mov
cmp
xor
aad
movsb
dec
mov
add
ds
jo
mov
addr16
fldcw
cmp
test
pop
jle
sub
inc
gs
roll
xrelease
outsl
ja
arpl
push
cli
cld
lea
cmpsl
adcl
dec
cmpl
adc
sbb
sbb
inc
inc
scas
jae
push
adc
cmp
ljmp
ja
stc
and
adc
cmp
add
aam
mov
cmpsl
lods
mov
jle
pushf
aaa
dec
pop
xchg
or
mov
pushf
out
cmovne
cli
mov
cli
repnz
jg
fstpt
pop
xlat
popa
lock
jno
lods
mov
inc
add
dec
lret
push
pop
jle
iret
dec
movsl
pop
call
dec
imul
fwait
lcall
lahf
loope
test
xchg
jp
cmpl
inc
cmp
xchg
inc
push
popa
or
idivl
scas
jo
fs
repnz
push
sub
daa
cmp
lret
popf
orb
jno
and
or
fstpl
js
data16
cs
mov
jmp
pop
mov
sbb
mov
movsl
xorb
xchg
or
bound
ljmp
ljmp
mov
out
push
roll
mov
cmp
inc
loopne
hlt
jae
subb
mov
leave
in
xchg
mov
xchg
add
subb
jl
mov
add
outsl
or
daa
xchg
and
sbb
mov
pop
rcrb
out
repz
push
js
mov
jns
in
mov
rcll
fildll
add
das
cmp
and
add
fs
daa
aas
xchg
mov
adc
dec
add
out
push
ljmp
popf
test
mov
bound
jle
pop
xchg
and
outsb
loopne
movsb
scas
mov
or
xchg
sbb
adc
xor
sbb
out
xchg
cs
xchg
cli
stos
mov
push
jmp
inc
imul
pop
xorl
jg
mov
lcall
xchg
xchg
andb
and
mov
add
mov
not
push
cmp
jae
pushf
xchg
or
pop
aad
inc
sarb
sub
push
jns
inc
test
mov
adc
xchg
jno
test
fs
pop
scas
sub
addr16
scas
jge
xchg
jmp
mov
jne
movsb
std
fnstsw
xchg
cmc
pop
sub
fisttpl
jmp
loopne
dec
out
inc
push
jae
arpl
clc
cmp
mov
mov
sbb
rcrl
aaa
sub
jae
add
inc
fs
lds
dec
push
icebp
and
and
adc
cmpsl
sbb
push
hlt
stos
cld
aad
jmp
out
pop
inc
or
mov
xchg
push
movsb
mov
pop
in
mov
stos
in
and
inc
rorb
pop
std
push
xchg
cs
and
push
sbb
pop
out
pop
dec
xchg
dec
mov
sarb
inc
adc
and
xlat
iret
incl
shl
lret
lods
mov
inc
hlt
push
jo
push
repz
fwait
xchg
lods
in
fs
sub
in
cli
sub
arpl
out
cmp
jmp
mov
leave
repnz
dec
jmp
iret
jnp
sahf
sbb
inc
int3
mov
mov
xchg
ret
aad
ficoms
jns
jge
mov
test
popf
or
xchg
dec
unpckhps
or
jbe
sub
rorb
addl
pop
sub
or
lret
aad
les
sahf
jle
loope
ret
adc
sub
lea
or
pop
insl
aaa
dec
cmp
mov
push
fwait
mov
cmp
sub
in
pop
add
mov
dec
pop
je
lods
push
cmp
inc
sub
or
ss
das
push
das
push
jg
sbbl
pop
negb
repz
mulb
hlt
pop
fdivl
jmp
in
das
ficomps
jl
inc
and
movsb
jne
and
outsb
fstpl
loope
add
lcall
sub
lcall
sub
and
mov
push
in
push
cmp
dec
test
inc
sbb
mov
jmp
or
js
lahf
or
push
clc
push
stc
push
ljmp
push
xor
mov
dec
addb
ret
sti
jnp
or
cmp
es
test
or
frstor
or
push
mov
add
adc
es
sbb
call
jne
in
ret
nop
call
out
imul
rorb
outsb
sbb
outsl
sub
je
xchg
mov
dec
ljmp
cli
inc
and
mov
mov
inc
mov
cmpl
dec
and
xchg
mov
xor
out
mov
arpl
lods
cs
cmp
pop
and
adc
sbb
xchg
add
fcmove
xor
cltd
mov
push
mov
push
lods
addl
inc
xchg
ror
test
ja
xor
out
cltd
in
clc
push
jle
jno
sbb
xchg
jmp
jle
das
mov
pop
lret
jp
stos
xor
sbbl
push
hlt
jecxz
mov
stos
jb
jns
and
jns
mov
aam
imul
pop
and
jl
mov
sar
ljmp
xor
adc
inc
in
in
xchg
aad
movsb
or
mov
loope
mov
hlt
and
popf
jge
and
mov
cltd
fs
fldenv
sub
mov
xor
int
pop
in
inc
xchg
lret
push
xlat
mov
aad
testl
xchg
rorl
bound
mov
inc
ja
insl
sub
push
inc
adc
fbld
stos
jmp
pop
xchg
mov
and
lds
push
cmp
cmp
iret
inc
mov
aas
les
dec
lret
arpl
mov
push
insb
push
jne
sbb
pop
adc
stos
jno
mov
mov
int
arpl
cld
ror
push
in
fdivrl
fcomps
dec
test
inc
cmp
mov
xlat
ret
sub
js
lret
sub
xchg
in
dec
test
call
inc
arpl
scas
sahf
mov
push
xchg
mov
stos
lret
cwtl
sub
xchg
cwtl
fidivs
imul
icebp
push
push
outsl
sbb
mov
or
mov
cli
xchg
imul
mov
mov
clc
dec
inc
mov
sti
sub
in
mov
mov
push
mov
les
out
xor
mov
iret
mov
jecxz
xor
in
lret
aad
fwait
stc
xchg
mov
cmpb
dec
sbb
ret
cmpsb
xchg
cmp
jnp
insl
pop
push
mov
jg
popf
lcall
cld
clc
and
fildl
add
inc
mov
xchg
scas
popf
test
mov
push
call
fsubs
outsl
popa
out
or
scas
cmp
aam
inc
cmp
xchg
outsb
jg
push
pop
stos
les
fsub
pushf
mov
stos
into
sbb
inc
add
les
roll
cmp
mov
neg
and
cmp
aas
adc
adc
mov
sarl
mov
fwait
push
push
lret
xchg
and
adc
popa
pop
cmp
cmp
loope
push
pop
jae
adc
jecxz
dec
minps
dec
mov
js
jl
fcmovnbe
adc
sub
mov
std
and
rorl
push
add
mov
addr16
shll
sbb
pusha
stos
or
mov
or
insb
std
sub
repnz
stos
pop
cld
adc
sub
mov
or
ret
mull
ss
lods
push
addb
mov
clc
movsl
movsl
into
inc
hlt
pop
test
lock
fnstsw
jle
mull
stos
cmpsl
daa
aaa
dec
cmp
jbe
pop
dec
jbe
outsb
call
icebp
push
cmp
cmp
jns
scas
adc
xlat
in
test
aam
scas
jl
addr16
jo
lock
adc
sbb
sub
xchg
negl
dec
lahf
mov
div
jae
out
data16
fstl
inc
sbb
cmc
call
mov
xlat
inc
jae
pop
add
inc
jns
lret
call
xchg
pushf
pop
push
cmp
test
jno
sbb
out
mov
gs
sub
jae
adc
mov
adc
or
sub
pop
aad
pop
push
sbb
dec
mov
sub
cmpl
pop
sub
insb
pop
xor
andb
fwait
cmp
adc
in
or
ja
adc
int
ret
dec
add
adc
push
fbstp
addb
loop
mov
mov
xor
insl
xlat
test
or
arpl
mov
arpl
or
js
inc
pop
lds
std
iret
push
fiadds
push
in
pop
lret
pop
enter
lods
les
pop
cmp
mov
lcall
cmpsl
xlat
clc
inc
jnp
inc
aad
push
fwait
mov
adc
lcall
xor
pop
mov
roll
jo
xor
mov
pop
out
rorb
or
cli
clc
mov
hlt
push
into
xor
xor
mov
inc
mov
and
movb
jne
in
aad
jmp
filds
pop
pushf
mov
push
dec
push
aam
jl
cwtl
sbb
push
in
mov
test
xchg
lods
xchg
inc
fidivrs
fsubp
mov
mov
pop
std
add
and
xchg
push
imul
mov
ret
sbb
xchg
xchg
fistpll
int3
push
pop
pop
ror
mov
mov
faddp
dec
jecxz
push
xchg
mov
sub
xlat
and
xchg
mov
pusha
fmuls
and
add
insb
adc
xorl
jge
dec
addr16
ljmp
sub
mov
cmpsb
mov
sub
aam
pop
andb
adc
push
jae
cwtl
stc
cmpsb
mov
daa
inc
stos
dec
inc
int3
jo
push
xlat
inc
and
sub
push
push
lds
in
mov
jno
pop
mov
push
sbb
jnp
sbb
xor
mov
push
adc
out
adc
subb
pushf
push
xorb
inc
scas
pop
cmc
xchg
in
sub
adc
and
adc
inc
shrl
jo
xchg
iret
jo
dec
iret
or
insb
testl
cld
cli
mov
sbb
aaa
cmp
divb
jae
add
and
jne
mov
pop
lods
jp
lret
cmp
pop
aas
outsb
cwtl
js
jmp
inc
sti
and
xchg
les
jo
mov
sti
dec
or
addr16
pop
cmp
jbe
movsb
pop
dec
ror
inc
aaa
fnstenv
cwtl
add
and
push
cmp
push
or
push
cmp
roll
fsubr
repnz
mov
aad
sar
or
popf
andb
rcrb
data16
jge
das
or
xchg
jg
cmpsl
xchg
jmp
push
out
xchg
mov
inc
add
icebp
sbb
mov
push
cmp
testb
lret
jecxz
mov
mov
out
paddw
lret
sub
dec
aam
mov
sbb
mov
xchg
and
faddp
mov
inc
test
cli
aaa
arpl
out
xchg
dec
popf
mov
add
lds
rolb
jecxz
mov
mov
jmp
mov
std
cmp
popw
int3
ret
push
or
jl
xor
jns
xchg
in
bound
jbe
sub
ret
adcl
inc
iret
cs
adc
sub
xor
dec
add
mov
push
pusha
int3
push
jnp
add
lcall
dec
jns
loop
insl
fs
fnstsw
mov
pushf
push
pop
dec
rol
sbb
xchg
stos
loopne
push
sbb
push
pop
je
mov
in
xchg
inc
and
aas
xchg
ljmp
mov
insb
leave
cmpsl
test
sti
dec
pop
pop
mov
adc
jmp
jno
mov
nop
jns
mov
jg
popf
lds
cs
sub
add
jle
les
insb
mov
mov
pop
mov
lods
cmp
push
add
cs
and
rorl
insb
jp
push
addr16
jl
aaa
inc
negl
lcall
mov
mov
add
mov
ficoms
xchg
add
adc
pop
push
popa
adc
adc
jg
jmp
mov
fstps
into
sub
mov
sub
mov
addr16
mov
ljmp
mov
sub
ret
lret
jecxz
dec
fstpl
xor
or
fsubrp
mov
rcll
mov
add
incb
clc
sbb
fcmovnb
pop
xchg
mov
mov
mov
in
jns
mov
js
inc
mov
ds
std
lds
lret
in
insb
mov
lock
jne
outsb
movsb
pop
out
cli
push
dec
mov
sbb
add
lcall
add
xorl
push
daa
pop
stc
stc
push
into
rolb
or
and
pusha
inc
inc
loope
mov
sbbl
sbb
push
lods
jne
out
cmc
jecxz
add
xchg
mov
imul
dec
sub
sbb
js
pop
xor
fistpl
push
mov
in
rol
xchg
dec
xchg
insb
sub
jo
and
cs
dec
roll
mov
notb
jae
mov
push
mov
shlb
aas
out
ror
iret
mov
rcll
leave
sub
movsb
fistl
mov
dec
inc
sti
or
arpl
rolb
pop
jl
add
cvttps2pi
ret
xchg
adc
add
dec
add
mov
fiadds
or
mov
pop
inc
mov
push
imulb
loop
pop
sbb
mov
inc
sub
inc
in
ss
pop
mov
adc
ss
pop
jp
shr
xchg
jo
hlt
jecxz
roll
sti
push
push
add
xor
mov
jnp
loop
push
or
out
mov
xlat
or
mov
xor
in
adc
mov
fstl
lds
push
andnps
jl
fnstsw
adc
adc
and
mov
mov
or
xchg
out
loope
arpl
rcl
inc
enter
xor
xchg
lods
je
scas
xchg
insb
push
outsb
stos
js
sbb
fxch
push
or
mov
xor
inc
sahf
mov
mov
push
sbb
mov
mov
xchg
mov
mov
icebp
pop
mov
shl
inc
fldcw
lahf
push
inc
sbb
fldcw
push
outsl
test
test
push
icebp
dec
pop
add
cmpsb
aaa
adc
xchg
adc
cmp
and
ret
dec
dec
xchg
cmpl
mov
mov
lods
test
fwait
mov
or
out
xor
mov
adc
icebp
pop
lret
cmpb
jle
or
mov
loopne
js
mov
inc
xor
fnsave
movsl
into
sahf
or
mov
jg
lcall
inc
adc
inc
push
lock
lahf
lret
push
rcrl
inc
in
push
loopne
lret
cmpl
int
or
lret
pop
jecxz
icebp
stos
test
jbe
out
xchg
mov
mov
push
fdivrs
pop
test
stos
divl
xor
jne
loopne
cmp
lret
jbe
adc
or
add
je
push
inc
call
shlb
xchg
das
leave
loope
stos
out
inc
loope
pop
loop
jl
out
fmul
out
mov
push
and
dec
adc
adc
repz
lcall
insl
mov
adc
push
cli
jb
je
mov
xchg
push
out
jnp
dec
mov
in
jbe
sbb
mov
pop
jbe
push
xor
mov
in
imul
mov
add
and
cld
add
mov
mov
sbb
into
scas
imul
ret
das
or
cmp
mov
sbb
imul
xchg
push
enter
lret
fnstsw
sbbl
mov
jl
into
and
dec
js
gs
in
sar
mov
xchg
mov
fistpl
cmpsb
jae
ja
pop
jl
jmp
push
mov
in
sahf
jl
mov
mov
fwait
pop
dec
mov
pop
xor
push
sub
sahf
ret
push
sbb
mov
mov
xchg
inc
lahf
je
or
aas
lea
and
mov
scas
jg
mov
or
mov
sbb
mov
jmp
dec
clc
cltd
add
inc
inc
pushf
loopne
cmp
mov
cmp
push
cmp
pop
or
aam
mov
push
jle
xor
cltd
inc
push
sbb
dec
inc
add
mov
xor
fisttpll
data16
outsl
mov
jecxz
bound
and
and
cmp
jl
and
pop
xchg
jg
call
cmpsb
pusha
xlat
out
ret
test
scas
push
insb
push
cltd
lahf
daa
fildll
sbb
sti
mul
xchg
ljmp
out
cld
stos
xchg
sbb
ljmp
push
jge
inc
or
cwtl
int
push
ficoml
inc
pop
adc
imull
lea
push
xchg
adc
sub
lock
pop
dec
iret
mov
icebp
subl
sbb
and
notb
cmp
sbb
jb
cmpsl
push
movsl
jp
stos
cltd
mov
sbb
inc
daa
subl
xchg
test
inc
jae
or
jg
jmp
test
jge
sbb
and
mov
sub
cmpsl
dec
or
imul
shl
mov
sub
stos
add
pop
sbb
hlt
leave
les
out
jb
or
or
scas
aas
paddsb
shl
ja
xchg
adc
add
je
imul
pop
imul
push
mov
iret
xchg
push
dec
hlt
pushf
sbb
iret
cmp
aas
dec
cmp
adc
sub
cld
mov
sub
mov
mov
or
xlat
pop
fcom
mov
bnd
pushf
push
push
push
int
dec
pusha
call
ljmp
dec
inc
pop
in
push
icebp
pop
test
pop
ret
jmp
xor
cld
dec
inc
stc
shll
push
mov
inc
cs
dec
insb
mov
jmp
pusha
xor
push
psllw
sbb
inc
cli
pop
push
jg
xchg
stos
in
scas
lea
fs
dec
cmp
xlat
push
sbb
mov
add
in
xchg
xchg
sub
sub
pop
add
mov
test
xchg
repnz
cmp
mov
xor
movsb
push
mov
push
or
mov
add
hlt
cmc
outsl
jne
cli
pusha
lods
adc
outsl
push
or
in
xchg
xor
loop
dec
xor
cltd
outsb
pop
sbb
inc
push
rolb
mov
aam
aam
lods
mov
xchg
push
dec
aam
cmpsb
xchg
cld
pop
xchg
or
and
rclb
and
xchg
xchg
mov
je
test
mov
mov
mov
xor
xchg
outsb
fs
push
cmp
jle
cmp
cmp
stc
rolb
mov
into
fidivrs
hlt
iret
aas
popa
mov
push
outsl
or
stos
scas
bnd
lods
sbb
and
std
cmpsb
push
sbb
outsb
sbb
shl
pop
inc
insl
mov
mov
mulb
mov
mov
pop
cmpsb
into
repz
ja
add
or
ss
add
mov
jns
mov
xchg
aam
ljmp
mov
add
mov
stos
mov
pop
shrl
in
pushf
xchg
sbb
std
mov
mov
ja
mov
clc
std
pop
cwtl
out
rclb
out
outsl
out
push
bound
cli
mov
push
mov
test
adc
mov
sahf
clc
lcall
jns
xchg
fimull
jecxz
mov
xorl
das
movsb
nop
rcrl
movsl
cmpb
mov
fistpll
push
dec
xchg
lret
add
adc
mov
cmp
add
inc
or
cmpsb
fsubrs
mov
jae
mov
je
shlb
lock
jge
int
mov
aad
jne
lret
xor
dec
out
add
orb
xor
cmp
and
pop
fcomps
adc
cmp
sbb
mov
xor
jecxz
push
addb
lahf
rcll
cmp
xchg
adc
mov
add
enter
add
inc
inc
ljmp
repnz
cmp
and
inc
pop
les
andl
out
sahf
or
pop
les
repz
ss
sti
adc
int3
mov
jecxz
fs
std
add
xchg
sub
out
xor
xor
loop
data16
and
pop
out
scas
push
xor
jg
push
add
inc
mov
out
int3
xchg
xchg
bts
pop
lea
pop
mov
cmpsl
mov
sahf
push
mov
mov
mov
xor
xchg
movsb
push
adc
test
cli
mov
cmp
out
sbb
enter
jo
loope
sub
lahf
push
and
jge
aad
subb
mov
lret
inc
xchg
mov
stos
and
in
jnp
mov
filds
mov
mov
or
stos
add
mov
jno
lret
cli
jl
aas
sub
xchg
in
ret
pop
sbb
and
and
jecxz
loop
repnz
out
lahf
sbb
je
pop
mov
lret
adc
mov
into
aam
out
repnz
mov
test
inc
mov
or
repnz
and
scas
fists
bound
out
or
cli
xor
and
jbe
cmp
rcl
flds
out
dec
mov
iret
iret
out
es
jl
mov
push
fld
add
push
test
dec
movsb
sub
sbb
adc
mov
cltd
lods
stc
mov
movl
aad
repnz
add
dec
clc
xchg
pop
pop
pop
hlt
mov
fldcw
push
sub
scas
adc
add
sub
jl
jp
out
sbb
xlat
fwait
pop
mov
mov
pop
jb
or
xlat
ficoml
pop
mul
sub
inc
xchg
dec
insb
jnp
add
dec
mov
int3
mov
das
test
js
xchg
pop
out
push
pushl
sub
and
dec
inc
jne
dec
xlat
bound
push
jmp
sbb
lds
aam
cmp
popa
mov
push
xor
int3
add
sarl
xchg
nop
add
lret
lret
mov
push
cmp
inc
xchg
popf
mov
stc
adc
jae
stos
orl
mov
xchg
out
aam
movsl
call
cmp
movsl
xchg
push
sub
repz
std
and
in
rcll
jle
xchg
add
push
or
pop
xor
fwait
pop
sub
jecxz
push
jle
pop
pop
cmpb
mov
icebp
inc
xor
inc
movsl
mov
xor
popf
mov
into
and
movsb
fcomip
sub
jnp
cli
mov
rclb
add
mov
mov
hlt
in
pusha
daa
or
or
jecxz
push
cmp
cmpsl
and
or
and
xor
pop
in
movsl
out
rol
push
cmc
push
add
inc
imul
xor
lods
mov
cs
mov
mov
lock
cmp
add
mov
pop
inc
repz
in
mov
mov
mov
hlt
testb
jmp
aas
lods
orb
cltd
add
adc
scas
and
lret
xchg
push
imul
mov
mov
dec
sbb
mov
in
insl
mov
mov
jge
icebp
fs
add
pusha
cltd
pop
jns
sub
fistpll
mov
xlat
or
test
xchg
sub
movsb
mov
aad
dec
scas
in
sbb
pop
movsb
mov
adc
sbbl
adcl
fldt
movsl
inc
aam
cltd
dec
adc
cmp
add
cmc
xchg
in
insl
mov
or
daa
sub
jp
out
cld
fbstp
cmp
jb
xor
jl
pop
lahf
stc
and
out
mov
pop
nop
mov
jp
and
jnp
fistps
outsb
inc
lods
adc
popf
test
sub
test
test
leave
mov
test
dec
aad
roll
mov
and
ret
mov
cmp
outsb
inc
pop
add
rcll
fs
cmc
jp
pop
cmp
push
xchg
lcall
ja
sbb
stc
imul
xchg
daa
imul
test
sub
or
mov
pop
jp
mov
stc
scas
sarl
mov
jmp
mov
arpl
add
mov
cmp
sbb
int3
int3
je
ret
loopne
fcmove
push
mov
xchg
mov
xchg
push
hlt
push
and
ljmp
loope
aam
loope
or
repz
outsb
mov
hlt
dec
pop
jo
jns
adcl
add
mov
enter
out
nop
sti
xchg
pushf
repz
insl
pop
aas
push
jmp
dec
ja
loop
jmp
jo
cmpps
lds
mov
and
lds
movsb
leave
cmp
ja
out
nop
jne
jns
ret
inc
xor
int
fcmovbe
dec
mov
xchg
ljmp
insl
gs
std
stos
sub
shll
lret
or
shll
scas
xchg
mov
lret
sbb
iret
pop
inc
add
int
sbb
in
movsb
add
push
std
pop
jle
mov
push
inc
xor
daa
loopne
cmpsb
sbb
push
loope
add
and
enter
xchg
lea
sbb
cmp
mov
fimull
push
and
ss
aas
into
mov
notb
insl
stc
and
cli
lods
dec
dec
pop
xchg
test
mov
addr16
xchg
sub
jns
in
inc
mov
inc
inc
inc
mov
outsl
shlb
test
shll
push
inc
inc
pop
pop
pop
mov
into
cmp
add
addr16
loopw
jle
int3
xchg
jge
jl
mov
mov
imul
test
ds
cmp
or
or
xchg
sbb
cmpsl
xchg
mov
add
pop
cmp
shr
or
jg
inc
lock
push
cmc
icebp
sbb
and
mov
push
in
jno
or
jne
push
add
icebp
xor
mov
mov
fmul
std
aam
je
sub
or
add
lret
pop
mov
xchg
and
sti
aam
pop
sub
xlat
fistpll
mov
into
fs
sub
lret
insl
fiaddl
mov
pop
frstor
dec
inc
xchg
jae
inc
fimuls
mov
out
add
cmp
insb
or
mov
sub
sub
rol
stos
mov
dec
and
rcl
xor
jle
jle
fadd
push
add
fxch
sahf
add
push
je
lods
mov
shrl
out
fwait
pushf
adc
shlb
dec
and
arpl
cmp
dec
cld
in
inc
sti
insb
shl
pop
dec
gs
jns
in
sub
dec
xchg
cmp
jnp
push
jmp
subb
sub
mov
rclb
mov
es
xor
fstpt
shlb
dec
mov
gs
shl
test
nop
mov
cmc
fldcw
outsb
inc
rcrl
ret
pop
xchg
jbe
add
add
mov
dec
pandn
jecxz
adc
inc
inc
or
dec
jae
test
mov
mov
fidivrl
xchg
test
bound
cli
les
sbb
daa
push
push
stc
add
mov
adc
fistps
insl
decb
dec
or
or
inc
sbb
jo
popa
push
out
sti
cltd
push
dec
or
inc
mov
sub
xchg
cmp
jno
add
out
push
iret
and
mov
mov
cmp
adc
xchg
rorb
mov
and
movsb
xchg
fcos
fsubl
push
cmp
mov
addb
inc
fistpl
mov
sbb
or
xor
inc
fwait
sub
in
movsl
xchg
scas
jp
jmp
lahf
cmp
mov
inc
mov
in
les
popf
movsb
fsubrs
imul
movsl
leave
jge
lds
dec
push
push
sbb
adc
mov
cmpsb
loopne
sbb
xchg
mov
into
cli
ret
sti
das
cmp
push
xor
cmp
or
xchg
ss
jns
push
jnp
lret
popa
add
adc
xchg
clc
dec
insl
cs
xor
push
stos
mov
jl
cli
push
add
nop
icebp
lcall
mov
ljmp
leave
std
xlat
fsubrp
leave
lock
mov
lods
in
inc
je
push
add
jle
jp
loop
xchg
or
adc
mov
repnz
push
pop
ja
test
xchg
mov
push
ret
inc
sar
inc
jb
icebp
xor
out
mov
xor
mov
adc
jno
xchg
mov
fisttps
mov
jge
and
jnp
xor
vxorps
xlat
jmp
push
stos
jge
fcompl
or
orl
lret
maxps
add
xor
push
xor
insb
js
pusha
cmp
ret
out
sahf
pop
fstcw
lock
dec
popf
dec
cmp
mov
lods
mov
shlb
scas
out
dec
push
jbe
out
mov
ljmp
addr16
dec
or
icebp
mov
dec
cmpsl
ficoms
push
test
in
xchg
std
aas
jge
mov
xchg
clc
fiadds
imul
pushf
push
add
dec
pop
in
jns
xor
xchg
aam
pop
mov
sbb
inc
test
adc
lock
movb
mov
inc
lret
inc
jae
xchg
insl
out
mov
mov
sub
cmp
sbb
mov
fimull
jno
gs
lea
aaa
and
aaa
imul
inc
scas
in
addb
scas
mov
or
sbb
mov
insb
int3
inc
add
shlb
in
jne
call
out
inc
push
pop
jge
je
cmp
push
mov
test
ficoml
stos
pop
scas
inc
nop
and
cmp
test
sub
call
mov
addb
mov
test
addl
adc
jne
xor
stos
pop
lods
jmp
lahf
loope
inc
loopne
popf
sbb
shl
das
popa
cli
ss
rcrl
mov
decb
mov
mov
ja
push
mov
mov
push
inc
fstpt
inc
subl
pushf
sub
lods
inc
or
loop
lods
xchg
add
jmp
fsubs
push
scas
sbb
fildl
aas
jb
mov
rol
loope
and
pop
shr
popf
in
mov
das
in
xchg
test
fnstcw
into
lret
and
orb
movsl
fdiv
jg
es
and
add
test
inc
fcmovne
out
lods
fidivrs
repz
sub
push
inc
orb
out
call
inc
outsl
and
insl
mov
lret
out
adc
mov
cmp
sbb
ret
adc
and
std
and
loopne
jmp
add
repz
sti
jecxz
sub
and
push
cmp
jnp
out
pop
sub
or
jg
pop
pop
dec
inc
imul
xlat
aas
test
mov
cmp
adc
sub
adc
lock
add
pop
xchg
cmp
sub
dec
addb
mov
aam
dec
adc
add
leave
pop
inc
aad
cltd
movsl
sub
out
inc
inc
xlat
mov
and
ja
ljmp
shl
mov
pop
inc
mov
mov
and
int3
call
push
or
jae
fdivrl
jb
std
cli
call
jmp
sub
pop
cmpsb
stos
cmp
jo
out
push
mov
or
fisubrs
cmpsl
push
jne
aaa
push
xchg
test
fstl
dec
stc
xchg
or
fdivrl
test
and
push
es
add
mov
xchg
add
mov
adc
pusha
out
iret
xchg
test
and
push
push
sub
les
mov
inc
mov
fisubrs
loope
popf
inc
jmp
sub
jg
mov
jo
inc
jecxz
or
and
cs
sub
adc
loopne
cmp
gs
test
dec
xchg
push
or
rclb
es
push
mov
pop
imul
sub
lock
push
mov
jae
dec
es
mov
fnsave
cmp
lret
scas
jmp
push
xchg
std
push
jne
fsubrl
or
jmp
fisubrs
mov
jno
jg
mov
test
roll
loope
push
jecxz
inc
les
ficoms
pop
or
out
sbb
cmc
mov
lret
mov
mov
and
lret
adc
fsub
arpl
fsubl
stos
mov
or
jecxz
hlt
adc
shrl
mov
insl
aad
and
inc
cmp
imul
pop
lds
push
and
and
daa
xchg
mov
les
xchg
in
sub
stos
imul
imul
sub
mov
mov
pop
xchg
push
lahf
adc
stos
dec
std
mov
mull
std
lock
fmul
test
andb
movsb
sbb
cli
pop
stos
fdivl
xor
cmp
aam
je
mov
jbe
ss
ss
popa
std
adcl
les
mov
mov
fs
stos
mov
mov
push
lret
int3
stos
popa
imul
lea
mov
test
das
mov
and
flds
cmpsb
or
or
push
cmp
mov
mov
mov
pop
imul
jbe
daa
es
out
lret
pop
int
push
lock
xchg
mov
loope
fwait
std
incl
scas
imul
mov
aam
mov
es
push
push
dec
push
out
faddl
sbb
bound
and
mov
test
push
push
test
fs
jmp
leave
dec
inc
push
inc
jl
mov
cmp
and
imul
jne
bound
mov
in
push
dec
pop
add
fiaddl
jae
cmp
sbb
ds
js
xor
add
jae
mov
movsl
in
sbb
imul
imul
xlat
or
scas
push
push
outsl
inc
popa
sub
hlt
movsl
ss
flds
and
gs
iret
xchg
fxch
std
rcrl
xchg
ret
insb
mov
mov
popf
cmp
pop
dec
sbb
mov
into
into
fneni(8087
mov
out
xchg
test
ja
int3
negb
mov
and
out
push
add
push
add
adc
inc
push
adc
pop
dec
bt
icebp
inc
out
xchg
push
mov
add
pop
cmpsl
fisubrs
repz
int
out
lret
cmc
outsl
notb
adc
jmp
jle
pop
lods
sub
push
lods
xchg
out
repnz
fcmovb
push
js
push
xor
jno
xlat
daa
push
add
pop
mov
add
inc
mov
pop
je
popa
insl
or
push
xlat
cmp
inc
loopne
add
mov
mov
cwtl
punpckldq
stc
stc
jno
cmc
mov
stc
sub
jp
in
jmp
les
mov
xchg
mov
fsts
test
test
xlat
rcl
mov
inc
int3
or
ret
jbe
push
fildl
ja
or
and
enter
stos
test
movsl
nop
sti
mov
add
xlat
and
mov
mov
cmpsb
mov
mov
jmp
movsl
ret
and
dec
test
jecxz
pop
arpl
cmp
ret
test
cmp
xlat
push
gs
pop
jl
sub
jg
icebp
loop
or
inc
jne
je
cmp
mov
jp
lret
inc
jno
xor
and
cld
or
jl
iretw
loop
push
lods
mov
sbb
xchg
sbb
out
mov
faddl
cmp
xchg
movsb
das
xor
mov
jp
mov
and
push
out
in
addb
xor
jp
in
push
sub
insl
cmp
addr16
push
addr16
out
push
andb
push
push
cmpsb
daa
imul
in
insb
jle
mov
mov
adc
cli
in
jb
movsb
pop
popa
cs
shlb
decb
pop
dec
jns
xchg
ret
or
stos
loop
in
repz
mov
mov
cmp
mov
adc
add
cmp
jmp
sbb
and
in
hlt
test
jl
fwait
ror
je
nop
shlb
sub
add
jns
sub
sub
je
mov
mov
movsl
mov
je
and
test
scas
inc
movl
xchg
mov
jmp
dec
leave
sbb
fimull
add
and
popf
les
and
mov
mov
adc
and
mov
fwait
jp
cmp
pop
mov
out
cltd
mov
cmpb
ljmp
sub
idivl
jae
loope
mov
xchg
mov
and
adc
push
jmp
sar
loop
je
shlb
dec
cli
inc
out
add
xchg
aam
inc
into
push
std
lsl
and
test
xor
cmpsl
je
fs
push
mov
mov
jbe
mov
push
shll
cltd
mov
mov
lcall
stc
mov
pop
dec
sub
adc
loopne
adc
jmp
inc
data16
jmp
dec
or
dec
pop
adc
leave
jp
popf
add
xchg
mov
mov
outsl
stos
or
das
lds
sub
or
cmpb
aam
mov
nop
jmp
lcall
loope
repnz
jle
push
sub
mov
pop
shll
stc
mov
pop
cltd
lret
cwtl
sub
gs
stc
movsl
out
mov
jno
shrl
call
repz
jl
pop
orl
and
cld
cmpsl
popf
mov
leave
sub
out
les
mov
push
xor
xchg
clc
dec
xchg
mov
mov
hlt
ljmp
testl
in
xchg
dec
out
mov
push
cmp
sub
es
stos
addr16
jns
orb
add
test
lret
sbb
mov
xchg
jno
lods
dec
sti
push
test
jecxz
addb
fwait
xor
pushf
add
inc
sbb
ss
jns
out
push
add
shrb
jge
enter
int3
insl
xchg
and
pop
mov
lret
ret
repnz
ds
mov
insb
adc
inc
inc
enter
mov
insb
ljmp
pop
aaa
mov
push
mov
cmc
xchg
pushf
ljmp
jmp
push
and
arpl
cmc
mov
dec
sahf
sbb
inc
lcall
mov
stos
mov
cmp
inc
xchg
or
ljmp
sub
aas
bound
es
cmpsb
push
ljmp
rcll
aas
ja
sub
pop
lret
mov
cmpsl
push
xor
mov
push
xchg
loop
scas
sub
imulb
dec
and
mov
clc
jl
lret
mov
lods
dec
jnp
fmulp
test
mov
pop
andb
dec
stos
sub
jg
movl
shrl
xchg
pusha
hlt
push
popf
test
and
cmpl
loopne
ja
das
adc
ret
and
cmpsl
push
push
mov
mov
xor
add
push
jae
add
cmp
mov
ret
cmp
xchg
or
mov
inc
xor
mov
in
mov
push
mov
pop
ljmp
call
xor
add
loop
int
mov
adc
orl
arpl
rolb
jae
push
add
jne
in
push
cmpsl
bound
mov
int3
stos
xchg
dec
xor
fildll
aaa
loope
mov
pop
shl
add
pop
out
push
test
ljmp
hlt
inc
add
jb
dec
jge
movsb
inc
imul
mov
add
ja
in
jmp
xchg
popf
xchg
and
rorl
sti
push
sti
mov
adc
or
sbb
enter
out
pushf
cmovae
popa
in
mov
pop
stos
test
leave
aam
xchg
mov
lcall
hlt
or
fcomip
loope
cmc
pop
dec
pop
sub
out
daa
cmp
cmpsl
ror
mov
stos
arpl
frstor
pop
push
out
add
fbstp
flds
das
sbb
dec
rclb
dec
push
xchg
sub
rcrl
mov
pop
add
inc
fs
push
shl
sub
push
adc
in
sahf
int
dec
pop
loop
data16
sub
out
jp
xor
loopne
cmpsb
dec
ds
add
sarb
je
loope
pop
outsl
xor
jbe
ds
inc
test
jae
or
int3
xchg
mov
loop
mov
mov
jne
mov
lds
imul
int
and
in
push
sbb
testl
aas
cld
ret
mov
pop
pop
pop
adc
push
shlb
and
pop
inc
ljmp
mov
inc
cmc
lods
add
cli
lea
ljmp
mov
push
bound
mov
push
outsb
pop
mov
aas
dec
cmp
xor
add
popf
clc
pushf
xor
dec
test
icebp
cmpsb
sub
aad
pusha
les
lock
xor
jns
or
xor
and
or
adc
pusha
and
mov
inc
int3
or
fldt
lds
incl
adc
pop
lds
push
sub
notl
js
pushf
mov
xor
movsl
daa
inc
push
mov
lahf
xchg
adcb
cld
sub
fbstp
xorl
jne
repnz
lcall
cs
jne
inc
push
add
pop
jl
mov
hlt
aaa
cmp
dec
jmp
mov
cmp
aad
lahf
sub
lods
ss
mov
in
stc
hlt
popf
jl
out
cmpsl
adc
sub
jbe
neg
sbbl
ds
push
jne
test
push
fs
cmp
mov
mov
arpl
mov
stos
aaa
cmp
push
pop
inc
bound
push
inc
popf
negl
insb
inc
inc
pushf
int
adc
ss
out
mov
mov
mov
inc
inc
ret
xchg
jo
mov
div
fs
gs
sub
lods
sti
mov
jbe
cs
push
fisubrs
andb
pop
test
jo
jecxz
push
add
dec
gs
cmp
cmpsl
movsl
in
out
into
mov
stos
pop
mov
jg
xor
stc
xor
sbb
mov
adc
dec
aad
or
xor
or
jp
aad
inc
xchg
lds
sbbl
lods
rorl
insl
pop
leave
outsb
in
in
dec
mov
mov
sub
push
gs
aaa
leave
fidivl
aas
push
outsl
out
push
in
fcomip
xchg
scas
jle
pop
dec
sarb
xchg
lahf
mov
std
jne
shll
rcll
lods
sbb
jbe
popa
or
mov
mov
dec
popf
xlat
mov
mov
addr16
test
notl
imul
pop
fisubl
push
iret
lea
arpl
cmp
cmp
arpl
nop
push
inc
les
rclb
fcomip
inc
stc
jb
jle
xor
lds
jmp
push
pop
scas
les
fs
cmpsl
dec
enter
xchg
sub
movsb
or
std
fmul
orb
ret
jno
or
inc
mov
jne
xchg
sbb
ljmp
sbb
sub
or
gs
aaa
insb
lret
movsl
dec
mov
and
in
cmp
pushf
je
push
int3
mov
xor
insb
sub
out
leave
mov
adc
push
push
xchg
or
jge
arpl
stc
out
push
sbb
dec
jo
or
dec
mov
inc
mov
repnz
popa
pop
cmpsb
mov
add
wbinvd
jecxz
and
es
pusha
or
loop
imul
or
ds
in
repz
jno
sbb
out
push
addl
in
xor
repz
icebp
pop
dec
mov
test
ja
adc
sub
ret
mov
scas
stos
lds
std
dec
and
or
int3
je
push
push
rcll
cmc
push
xor
mov
inc
jns
lahf
xchg
push
nop
xchg
add
xchg
fs
cmc
jmp
int
sbb
mov
shl
inc
fiadds
push
fs
lods
jmp
sbb
mov
xor
in
stos
insb
mov
enter
aad
adc
cmp
incb
mov
sub
enter
jbe
hlt
lahf
inc
jnp
arpl
or
jmp
stc
mov
cmpsl
xor
loop
mov
cmp
adc
shl
clc
mov
mov
mov
and
addr16
jmp
loopne
pop
lods
sbb
popf
stos
icebp
fidivrs
ss
jmp
fidivrl
stos
dec
test
pop
sub
cmp
inc
rorb
add
mov
cmp
push
stos
and
jg
and
xchg
lods
push
or
pop
jno
js
popf
sub
jbe
in
sahf
xchg
addr16
cltd
call
add
cwtl
arpl
mov
cmp
cmpb
mov
cld
inc
inc
sub
xor
pop
loopew
das
adc
adc
mov
mov
mov
xchg
jbe
cmpsb
mov
pop
daa
test
in
aam
rolb
xlat
into
cmp
inc
push
cmp
inc
mov
cmp
or
push
mov
pop
add
das
and
mov
das
testl
fistps
xchg
sub
xor
addr16
fs
add
sub
sub
inc
sbb
add
or
lods
jecxz
outsl
mov
fdiv
leave
cmpl
or
jo
fisttps
xchg
dec
sbb
divl
daa
hlt
cltd
sahf
push
insb
jne
add
mov
ret
test
jae
push
mov
shll
xorb
push
mov
movsl
int
out
leave
add
xor
mov
sub
mov
pop
loope
pushl
sbb
xor
xor
jae
outsb
mov
sbb
mov
mov
sbb
popf
rcll
call
mov
mov
push
mov
cmpsl
xchg
add
pop
ja
std
jmp
sub
inc
adc
sub
jmp
or
add
or
xchg
iret
add
pop
push
shrl
fadd
sub
cmp
dec
mov
into
cmp
bound
pop
fisubl
shrl
mov
insb
dec
adc
cmp
test
sbb
cwtl
out
mov
lds
fucomip
cmp
adc
cmc
gs
imul
add
fnstenv
jno
cltd
and
inc
outsb
mov
or
js
add
push
add
aam
jl
xchg
and
mov
add
gs
push
mov
lea
call
sub
loope
mov
into
lret
scas
mov
sbb
fiadds
imul
xchg
andl
cmc
xor
add
fsubr
sbb
outsb
sub
jle
adc
stc
push
iret
gs
popa
shll
out
fdivl
cmpsb
push
mov
push
jae
adc
sbb
and
jae
xchg
pop
fstp
lea
sub
leave
aaa
loope
xchg
mov
mov
fsin
out
pushl
xchg
push
mov
inc
add
mov
push
out
repz
add
jne
pop
or
mov
aaa
in
test
lret
insb
daa
fs
mov
push
mov
cmp
sbb
xchg
cmp
pop
cmpl
mov
scas
mov
mov
add
dec
fidivs
push
dec
aam
or
pop
cmp
mov
jmp
mov
ja
ss
lock
push
mov
add
mov
mov
stos
notl
pushw
je
loop
call
lahf
cld
lods
mov
push
sbb
fsubs
in
fwait
dec
cltd
data16
loopne
sbb
mov
mov
dec
cmp
arpl
test
icebp
adcb
xor
in
dec
dec
xchg
inc
jge
repnz
aam
jb
cmp
lods
sub
pop
lret
mov
rcr
mov
or
int3
inc
mov
push
mov
cld
enter
pusha
pop
inc
cltd
push
bound
pushl
push
addr16
adc
shlb
adc
sarb
outsb
add
add
loope
clc
call
push
inc
das
and
sub
out
stos
enter
and
xchg
fisubrl
mov
push
popf
testb
pushf
mov
aad
mov
popl
dec
popl
push
jae
cld
insl
test
push
scas
test
rorl
sub
push
mov
test
mov
out
inc
pop
leave
fwait
cli
or
xlat
mov
fs
sbb
movsb
xchg
push
push
out
mov
movsb
cld
inc
lret
cmp
pop
mov
test
push
sbb
sub
ret
xor
push
lods
jp
mov
mov
mov
std
lods
imull
mov
push
cwtl
ja
lods
sub
cmp
imul
inc
nop
loope
inc
adc
into
push
scas
inc
jg
adc
aad
mov
ljmp
scas
xor
fsubrs
mov
xchg
xor
call
fstps
cmp
lret
cmp
dec
pop
mov
sub
jle
inc
bound
outsb
push
ror
nop
outsb
push
xchg
loope
xor
mov
jmp
mov
add
or
mov
fcom
mov
push
inc
or
lods
dec
in
lret
push
xor
pop
jge
cld
call
mov
scas
add
mov
xchg
repz
loopne
mov
pop
pop
xor
mov
lret
sub
dec
pop
mov
push
jp
pop
sub
inc
lea
sarl
ja
mov
daa
hlt
popa
mov
leave
mov
lods
test
ja
and
test
and
xchg
fcoms
fwait
nop
mov
sub
call
cmp
mov
in
adc
pop
inc
jnp
sub
mov
scas
push
mov
cmp
and
mov
xchg
dec
gs
xchg
xor
cmc
jae
sti
mov
sbb
sbbl
mov
je
mov
add
gs
pop
idivl
mov
push
fs
aad
dec
cmc
push
rcll
sahf
mov
lcall
lret
outsb
testb
dec
cmp
test
sbb
mov
std
loop
push
loopne
or
fs
sbb
pop
pop
inc
fwait
jae
pop
sub
jae
push
adc
add
lcall
mov
pop
cli
lret
jo
sub
scas
arpl
rorb
jle
cmpsb
pop
mov
test
mov
insb
mov
jbe
or
das
adc
xchg
mov
psllq
jle
dec
ret
mov
jns
loope
aaa
push
lcall
jno
mov
enter
inc
ret
push
icebp
mov
or
cli
jo
or
das
jns
push
and
ret
cmp
in
mov
mull
es
jle
bound
push
mov
push
jae
setb
repnz
cmpsl
in
test
out
sbb
inc
fiadds
clc
ss
mov
add
inc
insb
dec
sbb
push
pop
push
jge
mov
rolb
sbb
pop
mov
movsb
mov
sahf
jge
ljmp
les
repz
arpl
scas
add
insl
add
cmpsl
sub
jne
or
gs
jae
sbb
xchg
gs
mov
and
push
cmp
jnp
fiaddl
cmp
lods
int
mov
stos
xchg
push
inc
cmp
push
sbb
test
shl
bound
aad
ret
imul
mov
inc
cld
cmpsb
jp
mov
and
push
rol
rol
mov
addr16
adc
addr16
xchg
inc
stos
dec
or
sbb
push
dec
sbbb
mov
dec
mov
pop
push
es
jmp
pop
je
mov
push
loope
in
inc
test
lahf
jns
adc
xor
outsl
imul
out
out
xorl
inc
push
mov
push
ficompl
loopne
sti
or
pop
les
xor
push
hlt
add
inc
aad
fwait
xchg
loop
xor
mov
repnz
jo
xchg
xchg
popa
loop
mov
test
loope
and
daa
aam
mov
mov
insl
fstpt
dec
cmpsb
lahf
lret
cmp
movsb
decb
test
xor
popf
aaa
and
repnz
and
addl
and
sub
shl
js
sbb
sub
loope
cmpsl
adc
cli
jecxz
jo
shll
repnz
mov
mov
inc
fdivl
dec
outsl
mov
inc
xor
add
hlt
adc
les
mov
les
iret
inc
xor
cli
int
out
jnp
jg
nop
or
jecxz
jbe
add
dec
pop
sub
cli
sbb
cmp
push
sub
lock
and
hlt
mov
sbb
push
pop
lahf
je
les
add
cli
pusha
scas
stos
or
mov
or
inc
pushf
sub
lret
xchg
sbb
divb
or
test
dec
mov
mov
lock
mov
in
sub
add
adc
sbb
or
loopne
or
inc
loop
sarl
dec
fnstsw
fcoml
out
inc
ss
movl
inc
xlat
addr16
dec
add
in
mov
sub
pop
fisubl
adc
mov
jmp
jg
ja
adc
fldln2
xchg
andl
push
loop
iret
xor
rolb
bound
cmpsb
jle
dec
outsb
add
xor
pop
cmp
and
in
int
xor
sbb
xchg
jge
stos
mov
out
movsl
sbb
mov
add
ret
push
jp
aam
mov
pop
mov
or
stc
popa
stos
cmp
mov
les
ss
pushf
mov
inc
stos
push
dec
mov
xchg
sbb
jns
rcrl
inc
push
cmp
cmp
loop
imul
stos
into
nop
cmp
jns
lcall
xchg
nop
lock
sti
cmp
out
into
lret
mov
fidivl
mov
xchg
mov
subl
cwtl
mov
divl
ss
test
add
jmp
pop
sub
inc
mov
xchg
popa
mov
icebp
jle
add
xor
mov
inc
in
rorl
movsl
xor
push
sbb
dec
stos
jp
push
arpl
or
inc
sbb
loopne
mov
loope
and
sub
imul
dec
sub
push
outsb
jnp
arpl
in
xchg
sbb
loop
xor
lcall
ret
iret
aam
pop
mov
stc
negl
push
jg
cmp
pushf
adc
sti
aaa
sub
hlt
jmp
leave
add
cmc
xor
das
jg
ja
dec
cmp
hlt
ficoml
stos
cmp
fnstsw
aad
cmpsl
aam
pusha
push
jo
int
mov
xor
inc
xchg
cmp
bound
pop
push
roll
out
push
push
iret
outsb
dec
push
bound
dec
pop
inc
leave
dec
scas
mov
mov
dec
aaa
int3
jbe
pushf
xchg
mov
inc
mov
out
pop
add
dec
sti
into
mov
aas
ja
ds
bndstx
pop
ss
adc
jmp
ja
push
mov
aas
xor
push
test
mov
inc
mov
pop
and
test
push
push
in
mov
testl
sbb
push
sub
inc
push
jmp
mov
xchg
pushf
scas
popf
mov
sbb
mov
ja
sbb
lods
pop
in
or
roll
stos
jnp
or
nop
movsl
xchg
lcall
ss
and
jecxz
push
pop
popa
inc
inc
jnp
add
stos
mov
jno
ret
and
jmp
mov
stos
out
mov
es
dec
jae
push
xchg
call
jnp
out
dec
hlt
xor
jge
jg
cmpb
ds
pushf
push
or
or
std
pop
add
stc
movsl
push
mov
mov
pop
sub
test
sbb
mov
loope
test
out
imul
mov
data16
movsb
sahf
xor
xchg
ds
xor
enter
loope
int3
adc
push
idivl
xchg
add
in
jo
lea
stos
push
dec
mov
out
in
inc
out
in
and
imul
mov
or
daa
enter
mov
mov
add
mov
sbb
xor
xchg
and
aaa
pop
iret
and
dec
dec
and
xchg
fisttpl
lcall
adcl
adc
in
add
loopne
out
pop
cmpsb
xlat
pop
push
pop
lods
les
ror
mov
push
fcoms
fstpt
sbb
mov
int3
faddl
push
mov
lret
push
inc
fisubs
shl
inc
ljmp
sbb
movsl
clc
sub
movsb
sbb
sbb
xchg
loopne
in
shlb
inc
aaa
add
push
xor
push
mov
js
mov
popa
ja
clc
jno
xor
fstpl
push
addr16
addr16
shl
xchg
rolb
cs
aad
cmpsb
mov
push
and
mov
outsb
xchg
outsb
outsl
int3
xchg
and
in
and
mov
add
adc
lret
orl
cmpsb
push
xor
jbe
jo
sbb
int3
push
test
call
cmp
add
std
jnp
and
nop
int3
ljmp
cltd
mov
adc
lock
pop
arpl
clc
dec
mov
xchg
test
sub
daa
push
mov
lods
pop
call
insb
or
frstor
xor
lock
mov
pop
sbb
inc
sbb
fmul
mov
pop
mov
stos
xlat
iret
les
lds
fsubr
js
or
mov
loopne
sub
or
jge
dec
and
scas
inc
dec
rorl
dec
jmp
cmpsl
sbb
adc
movsb
sub
sbb
mov
mov
push
jno
pop
pusha
fneni(8087
push
mov
mov
xor
xchg
jg
rclb
pushw
mov
mov
mov
mov
out
in
cwtl
inc
out
stc
sub
outsb
pop
sub
push
popf
mov
js
fisubs
sbbl
mov
push
jno
and
xor
jmp
cmc
xchg
dec
xor
mov
xchg
enter
dec
je
mov
test
stos
pop
addr16
xlat
mov
adc
jp
jmp
leave
mov
insb
inc
cmp
sbb
clc
ss
xor
stos
pop
push
movsb
lods
cmp
push
pop
push
and
dec
xor
imul
popa
mov
and
mov
sbb
je
jo
cmpsl
push
xor
sub
sub
lods
sbb
cmp
add
neg
inc
inc
pop
or
xchg
mov
data16
in
pushf
pop
dec
scas
mov
push
sbb
pop
xchg
cmp
call
cli
mov
aad
insl
or
sahf
je
adc
cwtl
dec
adc
cmc
or
or
fs
aad
cmp
lock
xor
pop
sub
push
xor
fidivrl
lret
adc
jno
bound
mov
mov
xor
daa
sub
daa
inc
mov
leave
mov
xor
mov
pop
xchg
pushf
rclb
mov
stos
and
inc
daa
in
jmp
dec
xchg
push
aas
jge
mov
xor
adc
idivb
call
sbb
or
cltd
mov
lds
sub
fcoml
add
inc
aam
dec
xorb
push
lcall
xchg
pop
sbb
gs
xor
pop
and
jp
or
push
in
push
nop
mov
cmp
inc
dec
inc
xor
iret
fcoms
cwtl
testb
lret
clc
insb
mov
sarb
xchg
dec
pop
mov
rcll
xor
or
mov
adc
push
and
adcb
xchg
pop
mov
test
pop
stos
popf
pop
sti
movsb
sbbl
mov
jo
popf
out
orb
bound
jb
xor
add
xchg
ret
scas
cwtl
jbe
mov
jo
sub
fnstcw
jg
or
mov
cmp
xor
inc
sbb
push
or
push
fs
movsl
shlb
rclb
adc
test
movl
sub
insb
sub
cmp
jmp
sbb
test
jbe
pusha
repz
outsl
subb
cmpsl
scas
out
notl
insb
sub
test
ja
cmp
mov
dec
clc
mov
ret
aam
push
fwait
repz
sbb
mov
jo
stc
or
pop
jmp
cli
pusha
and
stos
imul
push
xor
scas
xchg
mov
int
sub
push
pushf
dec
xchg
dec
mov
or
test
pop
fsubs
add
sub
lahf
sbb
mov
add
aas
adc
pushf
test
fsubl
fdivr
icebp
push
jbe
popf
inc
pop
xchg
or
pop
sub
xchg
flds
push
addr16
xlat
int3
pusha
cmp
pop
out
pop
push
and
aad
adc
adc
sahf
fwait
add
pop
movsb
jg
inc
inc
pushf
mov
cmp
mov
jmp
or
out
adcb
xchg
push
sbb
and
push
test
mov
mov
not
pusha
fdivr
loopne
xor
adc
arpl
mov
dec
pop
out
push
add
adc
fists
push
testl
jno
sbb
xchg
adc
mov
add
addr16
shrb
jmp
push
lea
dec
and
decb
mov
pushf
dec
xor
sarl
jecxz
dec
sar
pop
negl
ss
scas
dec
fcompl
ror
mov
addr16
cmp
pop
out
out
aaa
cmpb
stc
or
xchg
cmp
ss
test
pop
std
and
mov
fs
popa
ret
sub
les
daa
push
subl
inc
loop
cmp
mov
sbb
sub
subb
insl
test
cmp
out
pop
les
dec
sbb
inc
and
loopne
push
test
or
xchg
test
pop
cwtl
adc
or
sarb
dec
outsl
popf
loope
lea
stos
into
mov
sbbl
int
enter
mov
cmp
lahf
mov
pop
enter
in
iret
adc
pop
fwait
les
fs
ljmp
insb
jae
gs
add
scas
xor
scas
jmp
inc
jae
mov
pop
add
roll
add
push
pop
adc
sbb
jns
jge
push
pop
insl
push
pop
add
stc
push
mov
in
and
rcrb
outsl
enter
mov
xor
lock
pop
jecxz
iret
inc
xchg
dec
lds
pop
ret
dec
paddsw
in
push
xchg
push
aad
sahf
jae
stos
iret
jp
mov
lret
cli
testl
mov
pop
lods
xchg
inc
jg
add
fnstsw
jnp
clc
xchg
mov
repnz
mov
jae
int3
les
mov
scas
pop
mov
push
ret
test
cmpsl
and
sub
mov
lods
std
push
lcall
ds
loop
xlat
jb
stos
dec
sbb
rclb
and
lods
dec
test
in
xor
adc
not
xchg
pop
or
mov
insl
sub
jne
cmp
adc
xchg
mov
ljmp
stc
int
jbe
push
rcrl
js
bnd
xchg
scas
jns
inc
sub
sub
xchg
je
jmp
add
or
xor
movsb
lcall
pop
adc
mov
and
sbb
or
test
ror
jne
hlt
sti
outsb
rcll
icebp
cmp
jecxz
div
push
sbb
add
push
and
test
cli
xchg
add
mov
inc
xor
test
loop
outsb
cmp
lret
aad
adc
xlat
repz
mov
add
out
jg
add
pushf
push
mov
jmp
fwait
rcr
roll
inc
popf
ja
mov
or
ret
xchg
push
in
add
or
pop
ret
das
pop
push
das
pushf
sahf
lock
jae
push
push
pop
das
ret
and
push
jmp
insl
insb
cs
ljmp
icebp
icebp
mov
mov
or
test
loop
mov
shrl
movsl
sarl
loope
nop
inc
push
sbb
push
xchg
in
cmc
pop
dec
sub
pop
cmp
aad
mov
push
cmp
add
aas
std
mov
inc
mov
lock
mov
aad
push
lret
cli
adc
pop
pop
xchg
dec
mov
and
add
int3
sbb
into
fildl
jo
xor
daa
lcall
xor
or
pop
mov
xchg
stc
push
nop
popa
cs
mov
std
imul
outsl
ja
or
shlb
push
add
bound
movsl
das
mov
test
das
roll
fdivs
sbb
or
cmp
push
test
inc
test
int3
ret
icebp
and
les
popf
mov
sub
sub
adc
lcall
test
js
jo
xlat
fistpll
lock
fisubrl
push
mov
ds
sahf
jmpw
mov
xchg
mov
in
mov
outsb
push
repnz
adc
enter
sbbl
fcom
mov
dec
jle
lret
test
mov
mov
loopne
jge
adc
sub
jne
push
add
or
push
leave
scas
cld
or
mov
imul
cli
mov
test
pop
mov
mov
pop
mov
frstor
or
or
mov
dec
inc
loop
dec
inc
or
scas
mov
sub
mov
cmpl
icebp
scas
ss
lods
lds
dec
or
sub
inc
dec
mov
adc
lods
les
imul
pop
ss
out
dec
mov
xchg
popf
inc
push
jb
or
lea
sub
je
ljmp
sub
aam
dec
mov
dec
ret
mov
je
jo
adc
mov
outsl
jne
push
je
jmp
idiv
test
ja
xor
cli
cmp
pop
add
or
insb
js
fisttps
add
push
aam
insl
lcall
fidivrl
outsb
loop
int3
mov
ljmp
mov
jle
sbb
daa
loope
cwtl
add
sub
sbb
loop
xor
xchg
mov
dec
mov
push
jecxz
xor
sub
pushf
jecxz
and
ret
mov
inc
clc
mov
push
addr16
jns
mov
jmp
jg
das
leave
nop
andl
cli
ret
xchg
lahf
add
cmpsb
pop
dec
imull
and
mov
push
sti
jb
add
inc
subb
lcall
roll
jnp
sbb
je
or
loop
mov
popw
xor
es
adc
out
shl
aaa
fstpl
in
adc
mov
outsl
sbb
fistl
repnz
fwait
xchg
adc
mov
jne
aas
adc
push
fbstp
and
cli
sbb
incb
xor
in
push
in
mov
pop
xor
xor
mov
push
push
cli
and
jne
repnz
add
ja
push
jno
pusha
aad
gs
mov
add
lods
testb
jp
test
inc
mov
mov
fmul
roll
incl
adc
adc
fldpi
jbe
loop
push
pop
pop
loop
xor
add
jecxz
dec
in
or
bound
imul
sub
mov
lea
inc
ret
mov
enter
arpl
cli
or
inc
enter
mov
icebp
clc
cmp
subb
test
data16
out
cld
mov
inc
in
out
push
fnsave
fimull
adc
sbb
scas
aam
jecxz
nopl
and
jecxz
and
xor
jl
mov
dec
pusha
cmp
or
in
cmp
arpl
divb
lcall
or
jbe
sbb
sub
in
inc
pop
enter
out
adc
repz
xor
ja
lcall
test
jnp
gs
loope
movlps
sub
adc
outsb
in
iret
popf
push
bound
add
push
push
xchg
subl
adcl
clc
mov
repnz
xlat
sub
out
xchg
xor
mov
sbb
mov
cmp
hlt
mov
ja
pop
aad
nop
pop
adcb
int
cltd
cmp
mov
jg
ljmp
jle
xor
inc
xchg
test
and
je
sub
add
push
out
push
add
iret
dec
stc
or
xor
lret
pop
add
ret
jae
daa
mov
fisubl
sbb
aam
and
scas
lret
pop
fldenv
rcrb
sub
mov
fisubrs
jns
sbb
lods
lret
mov
adc
push
nop
hlt
add
sbb
adc
mov
xchg
and
into
jmp
fstl
cmpsl
xorl
push
push
lcall
pushf
test
jno
sbb
xchg
pop
xchg
lock
dec
int
insb
fstl
cmpsb
xchg
mov
lret
sub
loopne
pop
push
mov
outsb
inc
imul
out
cltd
xchg
mov
insl
stos
cmp
stos
xchg
mov
pushl
rcl
shll
adc
mov
arpl
xchg
push
cli
ds
das
xor
inc
sbb
mov
push
scas
cmpsb
pop
xchg
lret
push
sbb
inc
pop
imul
sub
icebp
dec
jnp
or
mov
enter
xor
and
pop
lods
jle
and
daa
inc
pop
lcall
xchg
xor
adc
daa
pop
xor
xor
test
mov
add
cld
mov
and
add
push
icebp
pusha
rclb
pushl
push
add
insb
mov
fidivrl
sbbl
sbb
jmp
push
and
cmp
nop
mov
mov
add
jecxz
push
or
bound
dec
mov
add
cwtl
lret
jo
test
jne
jg
pop
fdivrl
pop
ljmp
dec
hlt
stc
cltd
sbb
ret
popa
sub
mov
mov
mov
jge
cmp
lock
fiadds
or
decl
push
fisubrs
sahf
adc
ss
pop
ja
push
jp
mov
sti
xor
mov
jb
xor
dec
addr16
pop
sbb
out
out
or
sub
xor
loopne
push
mov
cmp
mov
sub
das
dec
test
lcall
js
xchg
mov
adc
jae
push
lret
push
jge
sub
loop
jns
mov
push
push
adc
divb
push
gs
mov
stc
into
andb
mov
js
ja
addr16
out
push
loop
push
repnz
pop
cmpb
dec
pop
pop
adc
outsb
mov
add
fwait
jne
in
cmpl
cld
mov
ds
push
pop
or
int3
or
xor
cmpsl
ja
ret
leave
dec
cmp
test
cwtl
test
inc
add
inc
addb
sbb
mov
xor
fbstp
testl
daa
mov
mov
xchg
jl
movsb
sbb
ret
xchg
in
inc
imul
rorl
add
ficoml
lods
testb
and
jp
fidivs
mov
jge
stos
xchg
sbb
rcrl
dec
xchg
fs
push
fimuls
mov
pop
addb
mov
and
cli
pushf
pop
xchg
scas
add
mov
mov
jg
add
and
jno
mov
add
add
mov
fmul
push
rclb
aaa
fsubrs
add
xor
inc
leave
movsl
in
add
inc
pop
xchg
dec
andl
pop
std
in
mov
xchg
inc
cmp
pop
push
and
stos
loopne
scas
pop
xor
cld
mov
cmpsb
dec
pop
jbe
mov
movsl
frstor
cmpsb
pop
jecxz
push
jns
xchg
jo
out
jge
ror
lock
jecxz
jge
push
lcall
mov
sahf
jle
in
in
xchg
or
mov
inc
mov
xor
inc
bound
cwtl
ds
add
cmpsb
repnz
xor
mov
fcoms
sahf
out
repnz
xchg
test
mov
sbb
push
les
ret
test
pop
add
inc
lret
shrb
aas
fstp
xchg
addr16
inc
adc
jmp
or
mov
iret
enter
lock
mov
stos
ljmp
daa
fwait
popf
cmp
outsb
xor
int
mov
sub
dec
fldl
jno
mov
sub
mov
pop
out
jno
cmpl
push
dec
pop
cmp
xchg
push
das
inc
or
xchg
ret
jle
sub
scas
orb
xlat
mov
rolb
sbb
xor
out
cwtl
neg
mov
clc
pop
dec
or
fldenv
pop
push
fwait
mov
stos
and
sub
add
jmp
xchg
pushf
nop
or
inc
hlt
sub
cmp
push
mov
aaa
jns
cltd
outsl
dec
or
jl
and
ja
stos
mov
cmpsb
in
out
int3
out
movsl
xchg
sub
mov
push
ss
adc
movb
or
pop
popa
xor
js
push
fstpt
hlt
cmpsl
ss
stos
jbe
mov
enter
xchg
dec
push
pop
or
and
pushf
mov
inc
pop
jno
sub
rcr
stos
pop
or
pop
jo
jae
push
arpl
fdivs
bound
popa
mov
pop
js
pop
mov
lods
inc
mov
push
jo
xchg
xor
dec
mov
cs
jecxz
mov
xchg
insl
inc
aad
lock
jnp
mov
pop
loop
lods
add
in
testb
dec
call
psadbw
ds
or
or
sub
int
sbb
xchg
xor
negl
fisttps
imul
clc
add
js
mov
or
cmpb
jne
push
pop
loope
out
in
mov
scas
rcr
mov
clc
aas
iret
orl
mov
jl
fs
inc
out
mov
inc
aad
push
and
sub
inc
clc
scas
lock
and
jns
or
scas
mov
insl
dec
or
sbb
sbb
call
std
pop
popa
xchg
dec
ljmp
decl
cli
lahf
cmpsb
into
dec
imul
lods
call
incb
call
in
pushf
ss
orl
mov
mov
das
pop
cltd
dec
int
xor
rol
adc
mull
jmp
push
fildl
sti
leave
inc
jle
xor
fisubl
aad
mov
aas
inc
clc
inc
paddusb
dec
in
test
int
mov
xchg
lret
mov
loop
push
shrl
fstl
push
es
scas
mov
mov
dec
xor
sbb
repz
jnp
mov
add
cli
aam
cmp
leave
out
adc
das
cli
inc
rclb
mov
mov
leave
mov
pop
or
aad
clc
pop
daa
ds
sub
cmc
rolb
movsl
pusha
cmpsl
jg
cs
lcall
inc
mov
out
test
ja
scas
sub
scas
fstl
sti
lcall
xchg
fdivrs
dec
push
mov
test
and
mov
loope
scas
cmp
xchg
jmp
xchg
mov
cwtl
or
pop
or
outsl
jns
dec
jge
clc
mov
push
inc
mov
push
xlat
dec
in
adc
push
data16
xchg
inc
pop
xorb
sbb
pushf
fisubrl
dec
push
mov
rol
pop
inc
out
mov
addr16
push
inc
dec
scas
cmpsl
lcall
negl
dec
dec
and
add
and
test
fwait
ss
lock
pop
ljmp
insl
out
outsb
and
imul
mov
mov
push
fsub
or
lds
pop
sub
out
mov
loope
mov
add
jge
adc
lcall
push
sub
jae
hlt
pop
mov
and
sub
in
sbb
adc
sarl
and
bound
pushf
sub
jnp
pop
push
stc
ss
or
fistpll
xchg
and
scas
jecxz
clc
insl
shr
cmp
out
out
out
jae
mov
or
sub
pop
insl
mov
push
pusha
movsb
clc
adc
jnp
jne
adc
mov
sub
add
xchg
and
push
dec
addr16
stos
add
push
cs
out
cld
inc
arpl
mov
jle
mov
inc
adc
adc
adc
sub
scas
out
pop
inc
pop
stos
cmp
sbb
inc
outsl
dec
popf
pop
mulb
scas
mov
gs
and
outsb
and
xchg
in
sub
outsb
xchg
test
mov
pop
jp
int3
cli
lahf
arpl
sub
inc
sti
ss
je
push
push
push
dec
test
xchg
out
lea
pop
jne
push
mov
lret
mov
out
sbb
inc
pop
movsl
xlat
xor
xor
push
xchg
testl
in
aaa
mov
movl
push
xor
sub
jge
aad
lcall
jo
repnz
xchg
aas
aaa
adc
xchg
sub
mov
aam
lret
movsl
ret
movsb
popa
mov
ret
jp
in
dec
jge
xor
add
shlb
push
js
add
mov
xchg
xchg
jg
jbe
xchg
or
in
push
ss
sbb
adcb
sub
mov
into
scas
cli
lcall
jno
sub
or
cmpsl
mov
cmp
lods
push
push
add
sub
daa
xor
das
push
sub
jne
cmp
loope
jmp
addl
lds
pusha
jp
xchg
out
xor
add
add
popf
add
xor
jae
push
xchg
scas
ja
ret
aad
sub
sbb
mov
cmp
outsb
in
jnp
and
or
push
test
mov
pop
inc
cs
rcll
mov
add
int
test
cltd
out
push
xchg
aad
inc
inc
es
mov
mov
out
jne
mov
gs
sti
jnp
inc
fcomps
pop
push
insb
scas
stos
add
jb
repz
mov
push
mov
xor
and
outsl
sub
roll
lds
mov
ds
insl
xchg
pop
jg
andl
pop
scas
popf
fistps
daa
dec
xchg
les
cmpsb
xor
jbe
movsl
sbb
cwtl
or
adc
inc
sub
adc
jae
mov
inc
scas
pop
mov
pop
lock
pop
stos
cmpl
dec
pop
enter
adc
inc
cmp
and
or
sub
leave
jmp
add
fs
sbb
pop
repz
cld
lock
adc
xchg
fstps
or
int3
bound
sub
mov
mov
mov
std
ret
mov
push
and
mov
sub
scas
sti
dec
jg
add
or
imull
xor
push
popa
pop
xchg
insl
je
mov
push
cmp
int
pusha
outsl
sub
push
pop
xchg
xlat
jl
ret
popf
cld
icebp
lret
xchg
lock
mov
sbb
mov
sahf
int3
jnp
fdivl
rcl
cltd
cld
jnp
call
push
mov
fstpl
rcr
lods
lods
mov
call
mov
out
inc
inc
int3
fcompl
xchg
cmpb
mov
cmp
pop
shll
loop
pop
inc
jo
adc
dec
cmp
mov
sti
sti
jns
mov
stos
stos
mov
ret
movsl
inc
imul
ret
call
out
xor
lds
sub
mov
and
daa
sub
imul
or
ret
xchg
mov
ret
ret
movsl
jmp
push
iret
pop
and
xchg
pushw
addr16
scas
rol
dec
cmpsl
lock
add
in
mov
mov
mov
push
daa
mov
adc
loop
in
inc
sub
xchg
pop
lods
and
push
jg
push
add
mov
mov
dec
jbe
sub
in
or
add
xchg
sarl
mov
in
mov
mov
cmp
xchg
sti
ret
stos
sub
push
fsubl
lods
test
xrelease
loope
push
and
push
sub
gs
and
sbb
out
inc
negb
inc
or
xchg
fcmovb
jmp
bnd
mov
xchg
xchg
pushf
in
inc
test
ss
bound
push
mov
add
cld
aad
out
push
in
movsb
leave
fadd
mov
push
jae
add
dec
inc
add
shrl
add
xchg
pop
mov
adc
mov
push
jbe
rolb
mov
repz
jl
scas
xlat
and
inc
scas
mov
inc
push
int
jg
mov
or
mov
inc
je
pop
jne
sarb
cmp
pushl
mov
xchg
lahf
sbb
push
lods
cld
add
xor
and
inc
and
ret
rcrl
fistpl
stos
adc
pop
fwait
mov
push
push
out
mov
xor
inc
in
pushf
fsubr
lcall
dec
adc
leave
sbb
push
xchg
cli
hlt
jno
daa
dec
jge
jb
mov
push
mov
pop
pop
push
shll
mov
ret
or
imul
adc
data16
cmp
xor
sbb
je
sub
mov
jae
shr
sub
xor
clc
or
aam
ret
sub
fsubrp
sbb
adc
push
dec
jecxz
sbb
pop
add
xor
imul
or
dec
fstps
outsb
pop
loope
stos
jnp
xor
xchg
dec
lret
jae
dec
ds
adc
hlt
test
scas
push
movsl
adc
cmpsb
inc
es
fcmovne
jp
fstpl
pop
or
rolb
or
push
fsubrs
stc
stos
push
push
aad
stos
cmp
shrl
mov
push
testl
insb
lret
adc
inc
out
push
adc
add
in
xchg
repnz
je
sub
aad
add
dec
std
mov
pop
dec
push
popf
frstor
inc
push
sahf
sti
rcrl
test
out
adc
cmp
cmp
fabs
out
outsl
sub
lock
or
mov
sub
lods
subb
cld
mov
subb
pop
adc
sbb
int
cmp
jg
js
jns
lret
popf
add
imul
push
movsl
and
xchg
dec
add
jo
jmp
push
in
rorb
in
push
in
lcall
and
pop
push
bnd
dec
in
add
dec
addr16
cltd
les
fcoms
push
aaa
scas
xor
lods
lret
ret
test
sub
in
inc
or
and
adc
test
insl
xor
enter
cmpsb
punpckhdq
subl
dec
xchg
pop
or
fcmovnu
fs
int
jmp
mov
out
mov
out
lea
lds
and
scas
rclb
xchg
jns
lock
in
and
mov
xor
jb
sarl
pop
push
dec
cmp
or
inc
and
pop
ja
jge
outsb
pop
fldl
cmc
aas
add
dec
decl
loopne
pop
lods
les
les
stos
add
pusha
mov
jbe
add
adc
inc
cmpsb
mov
rol
xor
mov
mov
fcompl
pop
je
stos
mov
jns
ljmp
sbb
int3
ret
push
sar
push
add
enter
adc
cld
fwait
xchg
and
mov
scas
or
mull
pop
and
mov
or
repnz
pop
pop
das
inc
push
repnz
ror
addr16
mov
jle
inc
push
and
adc
int
or
cwtl
add
dec
pop
fcomps
inc
cmc
stc
push
dec
xchg
adc
or
and
fnstenv
xchg
mov
jle
inc
in
xor
les
cmp
xor
pop
lahf
repnz
icebp
xchg
xor
ret
xor
xor
test
stos
push
push
push
push
mov
sub
mov
mov
adc
or
dec
fscale
mov
pushf
test
scas
jl,pn
fwait
cmp
pop
into
pop
sub
scas
xchg
push
adc
aad
loope
mov
aam
fistl
call
sub
add
loope
mov
jle
scas
dec
out
xor
popa
mov
in
getsec
pop
push
push
xchg
bound
adc
es
push
sti
push
ret
popa
add
imul
xchg
enter
jno
addr16
stc
push
cmp
rcll
add
inc
adc
add
in
inc
jno
mov
jo
xchg
daa
stc
jnp
pop
dec
lods
sti
inc
and
inc
fmuls
das
pop
add
cmpsb
insl
cmp
insb
fisubrs
ja
push
mov
mov
or
stos
dec
mov
test
jno
inc
inc
sbb
mov
xchg
xor
sbb
push
int3
inc
sub
jg
fs
xchg
inc
xchg
por
sbb
xchg
xor
pop
lods
mov
sbb
mov
inc
push
add
xchg
push
adc
mov
jo
pop
cli
and
pop
and
repz
xor
loopne
cmp
xchg
xlat
aas
int
cmc
push
inc
and
outsl
jmp
mov
fcoms
mov
repnz
and
cmpsb
pop
lods
dec
pusha
jl
js
push
ret
and
mov
cmp
popf
out
icebp
dec
es
or
cmpsl
xchg
add
mov
mov
dec
lea
fidivrs
outsl
es
pop
das
stc
movsb
jmp
xor
cs
jle
pop
xlat
imul
jbe
xchg
push
adc
sarl
cltd
or
xorb
xchg
and
jo
xlat
es
repz
or
hlt
out
sbb
repnz
inc
jle
movb
xchg
push
mov
jne
testb
jae
dec
clts
scas
or
pop
les
sbb
push
jecxz
lods
aas
sbbl
imul
adcl
mov
clc
push
cmp
push
popf
cmp
jne
push
jmp
mov
dec
ljmp
pop
adc
nop
xchg
push
or
pop
jmp
push
rorl
lods
adc
xchg
sub
jo
cmp
jp
dec
mov
and
pop
adc
bound
jmp
jno
and
inc
outsb
jmp
pop
push
ficomps
mov
pop
in
mov
imul
cmp
cmp
mov
pop
shl
into
in
pop
out
sbb
loope
into
mov
mov
mov
insb
stos
sbb
cmpsb
fisttps
bnd
push
dec
ret
cmp
test
pusha
fidivrl
bnd
movsl
cmovl
cmc
fidivl
sub
cmp
fnsave
nop
push
cmpsb
fisubl
cli
mov
fcoml
test
dec
leave
pop
and
xor
cld
iret
ret
stos
arpl
outsb
mov
fwait
inc
dec
jmp
ret
xor
xchg
push
adc
pop
cmp
jle
dec
jb
fisubrl
mov
push
je
les
lret
jb
test
mov
mov
jb
mov
mov
js
fnsave
sub
push
loop
lods
cmp
adc
shl
scas
add
pusha
sbb
movsb
std
fwait
movsb
sahf
mov
sti
adc
lcall
mov
xor
jmp
mov
insb
rclb
mov
and
fildll
push
or
scas
test
or
lret
lahf
sti
mull
add
fsubrs
inc
lea
push
xchg
pop
push
mov
inc
xchg
lds
mov
leave
shr
in
add
hlt
mov
ds
je
pop
sub
insb
mov
ret
call
popa
xlat
add
ss
add
outsb
in
pop
inc
push
mov
mov
jns
xor
push
xor
jbe
jbe
sbb
lahf
loopne
dec
loop
and
fwait
pusha
mov
push
add
lcall
add
popa
push
lock
lock
call
and
out
or
jns
cmpsl
xlat
aam
into
imul
xchg
int3
ja
push
ja
fnstenv
sub
push
xchg
rorl
sub
aas
loop
pop
cltd
push
shrl
jle
push
subl
jge
pop
sti
dec
test
jb
jecxz
mov
cs
loope
imul
clc
jo
cli
add
mov
jmp
in
inc
outsl
into
subw
ds
nop
push
inc
fs
adc
popf
lahf
pop
aas
sub
lcall
mov
pusha
cmc
scas
jnp
sbb
cli
ljmp
push
pop
xchg
cltd
aad
or
aaa
jne
test
cld
push
stos
scas
jg
xor
jge
mov
out
or
jb
stc
test
aas
mov
mov
pop
xchg
out
gs
sbbl
aad
pushf
loope
test
mov
je
out
testl
clc
jno
sub
push
sahf
out
fs
inc
dec
out
iret
jl
jne
fwait
scas
push
cltd
daa
xorb
ja,pn
jo
insb
fsubrl
cmp
call
inc
pop
and
and
mull
lea
dec
sub
loopne
outsl
xchg
mov
mov
adc
push
sbb
pop
xor
pop
xor
jne
jne
add
adc
xchg
popf
jnp
out
sahf
hlt
mov
mov
js
pop
in
ret
push
inc
xchg
das
leave
or
les
lret
outsb
dec
out
dec
lock
xchg
scas
ljmp
jno
mov
add
push
fbld
mov
and
and
ret
dec
xor
sbb
cltd
jne
movsl
jmp
int
mov
clc
repz
sbb
jl
out
ds
pop
xchg
cwtl
and
enter
xchg
mov
jae
ljmp
and
jno
add
add
cmp
jmp
push
xlat
and
cmp
cmp
mov
sbb
lret
out
sub
mov
test
xlat
cmp
push
or
or
cmp
inc
mov
aam
sub
dec
and
in
mov
ret
pop
test
and
push
popa
mov
inc
mov
js
or
inc
in
call
jl
pushf
xchg
mov
pop
adc
in
daa
dec
push
cmp
push
test
cld
idivl
pop
int
push
ret
daa
stos
inc
jno
js
pop
ret
xor
jg,pn
stos
cld
icebp
aaa
mov
xchg
int
adc
push
sti
sbb
aaa
and
xchg
adc
lds
pushf
addr16
xchg
xchg
aas
mov
inc
inc
fiaddl
in
jo
aas
fwait
dec
repnz
pop
sahf
pop
clc
dec
ja
lahf
enter
push
dec
push
lret
mov
mov
push
sar
mov
add
lea
mov
ret
in
bound
pop
shl
into
push
jb
jb
cli
jno
data16
ret
icebp
mov
xor
push
out
and
xchg
lret
lds
cmp
clc
stc
and
popl
mov
test
frstor
inc
pop
sub
jg
push
clc
test
out
xchg
xor
inc
pop
sbb
stos
popf
mov
jmp
ret
fldenv
mov
in
inc
sub
shrb
dec
test
xor
jno
loope
lcall
xor
adc
and
pop
mov
adcl
in
cmp
mov
test
cli
sub
arpl
push
mov
xor
push
mov
cmp
jl
pop
es
shrl
sbb
xor
ficompl
ljmp
mov
mov
bound
add
mov
jecxz
push
fdivl
in
pop
xor
jg
jmp
stos
lea
stc
inc
push
mov
fisubrs
stos
fldenv
sbb
xor
ret
das
das
sbb
sti
sarb
test
popa
mov
movsb
cmp
in
mov
pop
mov
shlb
xor
out
mov
sub
xchg
jecxz
out
and
jb
pop
les
in
jecxz
mov
int
loope
in
lcall
or
pop
jb
xchg
mov
pop
dec
inc
sbb
mov
mov
mov
sub
in
loop
push
inc
cmp
shll
ret
icebp
pop
add
and
das
imul
movsb
in
les
test
xlat
mov
es
xchg
in
push
sbb
push
imul
loopne
mov
mov
mov
cmp
sbb
sarb
rorb
fnstcw
push
mov
sbb
filds
movl
jle
das
xchg
in
pop
rcrl
mov
inc
pop
roll
bound
mov
jae
cmp
leave
cmp
dec
mov
xchg
sbb
pop
mov
fbld
icebp
cwtl
dec
testb
int3
xchg
xchg
jae
outsl
sbb
and
and
rolb
xchg
sbb
mov
xchg
outsl
sbb
movsl
mov
test
mov
adcl
fisubrl
mov
mov
lcall
inc
shr
test
into
iret
xchg
testl
mov
pop
shrl
lahf
mov
loopne
psubsb
push
adc
pop
lock
pushf
mov
jle
cmp
and
pop
sbb
repz
xorb
mov
mov
outsl
mov
scas
out
mov
add
mov
sbb
push
or
aad
mov
jnp
ret
out
into
jg
and
push
dec
dec
call
add
lret
cmc
and
sbb
inc
inc
add
add
fsubs
mov
mov
or
push
mov
jo
pop
sub
ja
cmp
scas
xlat
xor
test
js
push
sub
bound
push
xchg
adc
jle
add
sub
popa
int
sub
mov
out
sbb
sahf
orb
js
xchg
pushf
jns
mov
mov
xor
in
adc
cli
lret
cltd
in
lret
fiaddl
xchg
dec
mov
sub
sbb
stos
loopne
stos
outsl
mov
inc
enter
mov
sub
test
out
imul
popf
adc
test
popf
fidivl
sti
jmp
add
push
dec
sbb
add
mov
cmp
dec
sub
test
mov
jnp
cmp
mov
scas
xchg
cmc
pop
adcb
int3
pop
in
fistps
push
inc
push
mov
mov
xor
sub
jne
repz
movsl
mov
jg
xchg
dec
aaa
lret
fisubs
add
push
sbb
and
or
hlt
mov
cmp
je
call
cmp
or
jno
mov
lods
push
pop
xchg
xor
movsl
test
mov
clc
lret
clc
jo
or
sbb
cmp
icebp
and
subb
adc
pop
jmp
jns
pop
sub
cltd
dec
scas
and
xchg
outsl
aad
sarb
in
inc
jne
push
jecxz
movsb
mov
lea
jno
sahf
fnsaves
mov
std
xor
lret
sub
sub
test
movsl
adc
cmc
add
or
ds
cwtl
push
dec
mov
outsb
enter
xchg
jb
xchg
xchg
sub
adcb
xchg
iret
cmpl
mov
cli
aad
bound
pop
jno
jne
adc
sbb
sub
clc
jge
mov
in
dec
sbb
jl
jns
xchg
xlat
aad
push
addr16
cld
pop
dec
stc
inc
xlat
xchg
fistl
mov
fnstsw
into
ja
out
cltd
xchg
cmp
idivl
xor
jge
ret
rclb
loop
sub
arpl
in
mov
iret
pop
jle
cltd
and
scas
jb
dec
jl
in
xchg
cltd
push
mov
jns
lea
out
in
fcomps
or
insl
addr16
adc
pop
jo
in
sti
movsb
pop
shlb
push
dec
dec
add
and
jb
xchg
aaa
leave
call
clc
jo
scas
sub
and
dec
out
dec
add
mov
imul
push
sbb
mov
pop
insb
or
pop
in
imul
cmpsb
fwait
and
or
aas
pushf
push
jl
jbe
mov
jnp
movsl
out
cld
popf
test
mov
mov
push
cwtl
decl
inc
xchg
jb
mov
aad
mov
shr
rclb
insl
sbb
mov
loop
pop
or
push
cmp
dec
hlt
sbb
test
and
es
roll
fs
sbb
not
sbb
or
loop
cmp
inc
pop
jno
push
aad
adc
xor
mov
and
dec
sbb
cmp
fs
loope
pusha
push
inc
dec
mov
or
add
fcmovbe
pusha
cmp
imul
adc
push
es
pop
mov
imul
jg
testb
adc
je
mov
inc
cmp
das
and
rclb
cli
frstor
nop
fs
mov
call
and
mov
jmp
sbb
or
fsubl
or
jns
pop
push
xchg
fistpl
cmp
fsubrl
loopne
loope
outsb
pushf
dec
mov
xchg
ds
addr16
mov
push
fistps
in
mov
ret
stos
lods
or
push
mov
adc
mov
adc
xlat
decb
dec
mov
pop
fucomp
cmp
ljmp
xchg
js
gs
pop
leave
lea
mov
mov
fisubrl
mov
push
stos
rcrb
or
push
fsubrl
scas
xor
adc
mov
jno
adc
and
out
or
scas
lods
bound
dec
mov
aaa
pop
add
lcall
pop
dec
mov
mov
sbb
bswap
and
add
sbb
cmpsb
push
arpl
xchg
neg
ret
stc
jp
arpl
or
sbb
mov
mov
repz
ret
jmp
sbb
adc
adc
fstpt
int3
or
in
incb
sti
or
add
icebp
push
mov
ss
dec
and
rcll
jo
lea
wbinvd
jbe
testb
lock
mov
sbb
test
mov
into
push
mov
call
push
stos
fidivrl
fs
lods
cwtl
xchg
arpl
dec
mov
cmp
rclb
mov
cmpsb
outsb
insb
xchg
xchg
lods
fucomip
ljmp
push
pop
jecxz
sarb
sub
adc
and
pushf
cmpb
divl
push
iret
fdivrl
jmp
sbb
cwtl
adc
rcr
test
gs
into
sub
imul
inc
in
cwtl
mov
pop
pusha
stos
mov
fnstsw
xor
xchg
into
push
loope
cmpsb
sbb
hlt
push
imul
in
sbb
rcl
push
xor
dec
js
adc
and
xchg
add
ja
cmp
xor
shlb
es
stc
and
xchg
push
loopne
ja
out
loop
ja
mov
inc
push
pop
push
insl
xor
xchg
push
cltd
shl
pop
das
insl
mov
imul
push
pushf
inc
push
push
incb
cmc
dec
test
mov
cmp
pshufw
adcl
cmc
lea
inc
cmp
xor
lret
inc
and
jp
push
aam
lahf
xor
jb
pop
call
es
aaa
mov
lcall
stc
or
in
cmp
add
scas
lea
fcompl
mov
mov
and
int
xor
aad
jnp
lea
inc
outsl
xor
andl
outsb
cmpsl
adc
xor
test
pop
push
lret
mov
call
lea
add
icebp
jne,pt
jp
test
fadd
gs
fst
mov
xchg
ds
and
in
sbb
xchg
int3
adc
jbe
xlat
es
xchg
lock
push
imul
or
add
cmpsl
ss
adc
sub
mov
inc
rorb
nop
test
mov
add
testl
int
mov
les
mov
rorb
add
mov
mov
lcall
mov
loop
fisttpl
add
mov
repz
pop
mov
mov
inc
scas
lods
inc
shlb
cli
adc
dec
daa
sti
cmc
pop
jl
sbb
inc
adc
pop
mov
sub
shll
lret
and
lds
rolb
or
dec
xor
xchg
test
insb
jo
pop
dec
inc
and
stos
loopne
data16
iret
jmp
int
orb
jnp
mov
adc
xchg
mov
cmp
bound
or
and
outsl
jmp
adc
cmp
fnstenv
loopne
sub
fistpll
xchg
nop
icebp
test
push
repz
icebp
inc
mov
fcmovb
cmpsl
ss
sub
in
jle
xchg
in
cmp
les
mov
mov
popf
push
out
test
inc
or
cltd
aam
lret
bound
mov
push
rcl
sbb
stos
cltd
xor
jecxz
adc
mov
jbe
and
mov
cmp
aam
mov
ss
xor
jl
shlb
cwtl
lret
data16
fnsave
leave
adc
cmp
icebp
cmp
adc
lds
push
movsl
mov
sub
xchg
fcoms
pusha
push
jnp
int
push
daa
and
sbb
insb
push
int3
inc
scas
ljmp
shrb
sbb
sub
test
loop
xlat
js
rclb
adc
add
data16
push
xor
ds
fdivl
leave
int3
out
outsb
cmp
or
repnz
out
push
jb
xor
dec
popa
andb
lahf
cmp
gs
xchg
andb
sub
sbb
imul
pushf
hlt
xor
push
mov
xchg
pop
push
gs
cltd
in
scas
test
cmp
in
mov
push
or
call
sbb
idivl
stos
scas
cmc
adc
pop
loopne
cld
inc
imul
out
inc
sbb
mov
and
out
cli
jp
movsl
out
adc
pop
pusha
out
out
dec
in
icebp
enter
out
and
xchg
or
sub
xchg
fwait
dec
sbb
cltd
popa
lock
xor
xor
nop
cmp
jnp
inc
mov
cwtl
jne
out
in
fdivr
stos
sbb
leave
pop
aad
pop
pop
jae
push
stos
rorl
xchg
adc
test
jb
push
lret
adc
mov
pushf
pop
mov
in
scas
mov
xor
in
rorb
clc
int
pop
dec
inc
std
popa
shlb
xchg
decl
imulb
jbe
lea
pop
insl
add
leave
clc
jle
dec
pop
fwait
repnz
sub
test
dec
insl
and
jge
jo
cld
mov
loope
xchg
sbb
or
in
lea
in
fildl
xchg
test
stos
inc
inc
pop
jb
fistps
gs
sub
roll
add
dec
inc
rorb
pushw
add
cmc
ljmp
and
or
push
out
scas
cmp
fldl
xor
mov
add
dec
fs
rorl
push
lcall
mov
das
mov
push
mov
sub
add
data16
lods
add
and
mov
jmp
add
inc
test
jbe
mov
mov
lret
add
call
gs
add
sbb
cwtl
add
scas
imul
dec
ficomps
cli
jns
shrb
testl
cwtl
sub
insb
fistpll
pusha
adc
push
lret
rclb
cmpsl
test
in
jo
shr
cmc
mov
pop
jo
sti
scas
negb
sbb
call
lea
jecxz
fmuls
loopne
mov
sub
int
out
jns
fdivr
push
rorb
loope
jae
cmp
cltd
jne
inc
ret
mov
pop
and
lahf
dec
jge
js
cs
and
in
lods
imul
bound
adc
push
mov
or
cmp
mov
mov
xrelease
shrb
mov
notb
fldl
cwtl
sbb
jecxz
mov
xor
test
aaa
inc
dec
outsl
lods
subb
jae
and
xor
push
xor
out
testb
dec
jmp
mov
adc
inc
inc
or
rol
xchg
rcl
pop
xchg
testl
ret
cmp
and
fbld
popf
leave
popl
mov
mov
divl
mov
in
cmpsl
sub
imulb
push
mov
ror
add
inc
enter
lock
adc
mov
rorl
js
test
mov
sbb
xor
cwtl
or
cs
in
orb
sti
mov
out
add
mov
hlt
in
movsl
dec
leave
fadds
pop
cmp
mov
push
cmp
shr
dec
addr16
out
sub
sub
and
xchg
add
insl
ljmp
push
adc
pop
popa
dec
and
je
pop
ret
sbb
pop
cmpsl
repz
and
mov
mov
add
cwtl
adc
pop
jmp
xor
mov
loopne
push
sbb
outsl
xchg
xchg
loop
lds
fdivrs
add
out
daa
lock
cmp
inc
lcall
mov
cld
ss
xor
inc
repz
gs
adc
mov
adc
fs
shl
scas
enter
mov
push
push
sub
mov
push
sbb
push
cli
ud0
dec
and
sub
sbb
dec
lds
icebp
mov
mov
psubusb
or
dec
sbb
popf
mov
mov
rorl
dec
add
fcmovnbe
sub
add
sarb
mov
and
negb
popa
pop
push
adc
pop
xchg
lods
dec
inc
pusha
movsb
xchg
push
add
std
stos
mov
cmpsb
xorl
call
in
es
dec
cld
jbe
mov
pop
subb
sub
mov
mov
inc
aaa
test
dec
movsl
adc
test
vpxor
sbb
icebp
jmp
ljmp
push
jle
sub
jle
add
jnp
add
in
in
ja
insb
leave
aad
sarl
addr16
inc
repz
ret
pop
inc
ret
push
mull
outsb
daa
je
icebp
push
jp
pop
push
xchg
test
push
xor
stos
mov
call
repz
pop
jge
dec
push
fists
out
xchg
lcall
xchg
cmp
lahf
les
lods
hlt
mov
sti
sarb
mov
cmp
sbb
pop
es
mov
xor
xchg
js
push
cmp
or
pop
xor
test
cwtl
out
cmp
dec
xor
cmpb
cli
lcall
jnp
jnp
es
add
xor
xchg
mov
cmp
xchg
fstps
cltd
stos
test
jg
cwtl
adc
xchg
neg
loope
jne
icebp
out
add
mov
adc
xor
nop
add
jle
sbbl
cmp
fwait
pusha
jns
pop
fsubs
fisubrs
jo
pop
fists
xchg
and
push
int
packuswb
pcmpgtb
cmp
mov
shl
push
loop
push
inc
repz
sarl
nop
cmp
adc
add
jnp
cmp
xor
add
loope
xchg
pushl
mov
add
lock
fxch
outsl
cmc
inc
mov
dec
jmp
inc
pop
cmp
dec
popf
inc
push
pop
jnp
jns
int
dec
pop
sub
stos
mov
mov
pop
add
call
insb
nop
dec
loope
cwtl
add
shlb
mov
or
outsb
ret
arpl
add
fisubs
xor
inc
jl
jmp
stos
dec
pop
mov
mov
adc
xor
das
cli
loop
jbe
push
das
fprem1
imul
push
ds
je
xchg
xor
ds
mov
loopne
sub
es
jbe
push
mov
jo
js
cmp
jb
pop
pop
mov
daa
pop
inc
and
and
cltd
mov
and
jg
inc
sub
pop
cli
test
pop
lret
jle
addb
loopne
into
imull
xchg
pop
jle
hlt
lcall
sub
push
jno
xor
cmc
jne
jle
nopl
cmp
mov
mov
data16
outsb
mov
jae
dec
filds
or
push
inc
mov
jmp
add
add
lock
sbb
in
sbb
cmp
shll
xchg
push
mov
leave
jp
shrl
test
push
scas
aam
pop
push
cmpsl
cli
stos
xchg
push
clc
inc
xchg
pop
aas
fistpll
loopne
testl
aam
lds
test
icebp
mov
sbb
shll
into
pusha
pushf
jmp
xor
test
out
jl
js
jmp
add
or
jg
lret
xor
jmp
arpl
clc
shlb
jb
inc
xchg
mov
out
jg
mov
inc
mov
inc
mov
mov
cltd
lahf
or
popf
in
in
mov
jmp
push
fcom
push
adc
mov
out
lock
add
or
jnp
push
jb
imul
out
jo
mov
jb
xor
es
icebp
ret
xor
mov
ja
mov
lcall
and
jb
fwait
xchg
mov
jae
in
es
and
sbb
mov
add
push
mov
dec
popa
or
enter
sbb
int3
imul
mov
xchg
ret
cmp
or
xlat
cmp
sbb
cli
mov
in
enter
push
int3
andb
mov
and
pop
cld
xchg
mov
sbb
and
jns
mov
inc
sbb
xchg
loopne
jb
popa
xchg
cmpsb
les
imul
jg
lock
lcall
insl
shl
aas
lods
test
xchg
negl
mov
xor
push
popf
mov
cld
ret
jg
aam
ja
inc
cmp
cmpsb
stc
pop
ss
xor
xor
icebp
cli
xchg
jae
pop
or
je
out
jmp
sub
or
aas
add
ret
fcmovb
push
jge
dec
inc
add
cmp
ds
repz
push
idivl
aaa
xor
mov
cwtl
add
cmpsb
mov
inc
fcomps
jns
mul
sub
cmp
cmp
push
aad
lcall
mov
loop
xchg
jne
push
mov
dec
inc
jo
cmpsb
rcrl
push
mov
mov
xor
push
mov
adc
xor
cmc
xor
scas
adc
mov
ljmp
aas
and
pop
cltd
sub
in
loopne
mov
in
adc
jne
movsl
ret
sbb
imul
lea
scas
lods
into
insb
cs
call
add
cmp
int3
addr16
add
dec
les
hlt
jbe
ret
call
sbb
test
add
mov
inc
lcall
fwait
insb
sahf
les
stc
xchg
lock
jg
push
add
incb
shr
adc
inc
jmp
mov
cmp
jbe
rorl
shr
cs
inc
aad
je
test
adc
add
inc
jmp
and
lcall
outsl
nop
lock
in
loope
pop
sub
sti
mov
test
jbe
jnp
sbb
push
pop
cmpsb
and
xchg
xchg
insb
add
jle
jne
mov
lahf
adc
jns
adc
stc
pop
insb
es
dec
subl
push
or
mov
lods
sahf
ret
dec
stos
lret
out
mov
xchg
in
imul
data16
icebp
dec
fstl
fisubl
inc
in
lock
ljmp
gs
push
dec
incl
mov
cs
jecxz
fists
dec
movsb
lods
or
hlt
jnp
mov
out
pop
inc
sub
cli
repnz
or
cmp
shl
fabs
add
push
stc
adc
repz
add
sti
insb
rcr
leave
mov
test
sbb
rolb
arpl
jae
sbb
jb
daa
push
int
xlat
daa
xchg
lock
out
ret
xchg
xor
sub
mov
fcoms
xchg
sbbl
test
and
fdivs
ficomps
push
adc
cmpsl
arpl
loope
clc
imul
pop
fisttpl
data16
jle
pushf
inc
add
out
xchg
cwtl
dec
fistl
outsb
pop
lock
sbb
cli
xlat
imul
push
stos
outsl
sbb
loop
and
xchg
adc
fildl
ret
movsb
sub
test
outsb
aam
repz
nop
sbb
into
popa
or
ljmp
or
sbb
test
sbb
test
xchg
inc
mov
ljmp
jp
or
xchg
xchg
int3
out
xchg
push
add
pop
pop
fs
aas
jo
jg
mov
xchg
sbb
xor
fstps
jle
addl
pop
xchg
and
xor
mov
out
cmp
mov
xor
push
lods
jl
jae
icebp
mov
icebp
cmp
xchg
in
fwait
mov
sbb
sub
cmc
and
mov
inc
out
fs
movsb
hlt
lret
add
hlt
dec
add
sbb
xchg
pop
insb
jge
jbe
sbb
sbb
jbe
mov
sub
shrl
push
push
inc
fistl
jae
stos
jmp
push
sub
and
jns
add
jge
imulb
push
inc
jp
fistpl
add
or
cmp
test
inc
mov
ret
push
loop
xor
iret
js
lret
push
cmpsl
bound
dec
or
and
bound
popf
lods
scas
cmp
xor
mov
mov
mov
in
pop
sbb
mov
add
pop
fdiv
popa
imul
inc
imul
jge
les
outsl
imul
movsb
mov
push
xor
sti
mov
jns
sub
je
int3
xchg
dec
xchg
mov
xchg
mov
shl
adc
loope
mov
lahf
pop
push
outsl
jne
pusha
dec
inc
pop
pop
out
out
pop
in
shld
cld
arpl
fdivs
out
jno
add
dec
jmp
scas
jl,pn
ret
icebp
sbb
adc
push
dec
loopne
inc
mov
mov
inc
mov
sbb
out
mov
jne
xchg
out
cmpsl
adc
daa
mov
aas
add
fucomp
mov
mov
mov
dec
mov
pop
lcall
sti
cmp
fwait
sub
mov
or
add
mov
hlt
test
xchg
inc
mov
or
mov
mov
js
dec
inc
cwtl
fs
mov
ret
xlat
repz
fwait
and
push
or
out
and
int
sub
xchg
xor
stos
sahf
adc
cmc
fmull
mov
cmp
repnz
aaa
cmp
lods
sub
in
dec
jg
loope
sbb
ficomps
out
shll
rolb
dec
cvtps2pd
xor
das
sub
test
xor
sub
scas
adc
adc
fsubs
shll
pop
stos
subl
ds
cmpsb
xor
jge
push
imul
dec
aad
mov
dec
sub
adc
mov
test
jle
insl
lock
dec
lock
cmp
and
sbb
and
das
mov
sub
cli
xchg
dec
add
icebp
adc
ror
lcall
aad
sahf
subl
test
test
ret
cmpsl
sbb
jno
or
dec
decl
insb
enter
out
imul
imul
pop
insl
out
cmp
jg
dec
scas
mov
jle
mov
lcall
xlat
cwtl
repnz
push
sti
push
push
add
testb
lea
adc
jecxz
push
sahf
sub
bound
and
jecxz
testb
repnz
iret
lea
scas
and
adc
test
fcom
mov
cltd
cld
push
push
jo
and
iret
jmp
mov
pop
out
ss
icebp
adcl
cltd
cmp
xor
fwait
pop
lea
mov
lds
repz
in
jno
stos
jmp
jmp
cmp
sbb
xchg
mov
das
fmuls
outsl
mov
addb
and
mov
mov
add
testl
dec
inc
xchg
lods
inc
sbb
dec
inc
rcrb
push
xor
leave
jne
in
loope
mov
icebp
inc
cmp
enter
stos
pop
push
add
roll
jmp
sub
lea
repz
push
xor
cmc
leave
fabs
jne
imul
jnp
inc
sbb
or
sti
movsl
ss
sti
inc
sub
sub
jb
rorl
jnp
repnz
mov
xchg
in
lahf
rorb
or
mov
jb
push
push
pop
mov
and
mov
or
jecxz
push
das
mov
adc
daa
xorb
xchg
or
hlt
out
aad
xlat
mov
jno
js
add
ret
inc
pop
fdivr
adc
sbb
mov
scas
subl
ja,pt
xchg
adc
mov
lock
std
cmpsl
aad
cs
imul
jg
lock
lret
or
dec
mov
pop
mov
push
push
mov
ljmp
int3
ja
decl
dec
pop
pop
cmpsl
and
sub
mov
sbb
bound
mov
dec
or
xor
push
bound
or
dec
push
lds
sbb
jb
fiaddl
scas
loop
inc
xor
xchg
push
mov
xchg
shll
mov
adc
xor
xor
rol
jl
or
jae
or
hlt
int3
push
jae
push
mov
clc
shrl
in
pop
fnstcw
mov
in
sbb
mov
mov
aam
out
fsubrs
xchg
cwtl
ja
pop
mov
sbb
ds
sarb
push
xchg
xchg
mov
xlat
ret
ds
xchg
pop
xor
and
xchg
inc
imul
and
addl
adc
pushf
or
loopne
pop
or
pop
mov
sarl
sahf
inc
and
int
add
push
push
out
push
in
lea
lret
psllq
pop
push
jne
fs
sbb
ss
mov
lahf
xchg
push
jecxz
pop
popa
aad
lock
inc
mov
sbb
dec
les
loope
xchg
bnd
cmp
movsb
cli
ja,pn
or
inc
movsb
loop
mov
fdiv
and
and
dec
jns
adc
inc
xchg
jp
sub
xchg
adc
push
xor
nop
cmp
iret
in
add
lods
pop
sub
cmp
stos
andb
jnp
out
mov
jecxz
out
aam
sub
fcmovu
lcall
jno
pop
pop
movsb
xor
pop
mov
xor
aas
push
shlb
push
push
push
push
sbb
dec
dec
insl
pop
test
stos
cmp
mov
dec
lods
push
out
mov
leave
adc
aam
out
outsb
adc
movb
pusha
add
mov
inc
rcll
mov
sbb
inc
daa
mov
shll
xchg
lods
pusha
jbe
add
sub
jns
cld
mov
popl
xchg
xchg
adc
repnz
jge
mov
jb
xchg
pop
ret
xchg
ljmp
lods
stos
shlb
push
xlat
dec
cmp
sarl
and
jne
outsb
dec
jle
push
cmpsl
loopne
iret
shll
pop
or
add
outsl
out
stos
or
xor
in
xchg
mov
push
dec
push
addb
cmp
repz
arpl
and
sahf
loope
pop
mov
movsb
out
mov
dec
or
icebp
xor
push
and
adc
ret
jge
leave
int3
arpl
decb
repz
dec
ficoml
inc
imul
push
lds
arpl
subl
push
xchg
lret
ret
rolb
xchg
sahf
mov
xchg
push
ljmp
std
pop
add
ret
dec
xor
clc
sub
push
nop
movsb
push
hlt
test
aaa
and
dec
cld
icebp
or
add
rcr
inc
push
adc
rcrl
xchg
ds
cmp
inc
dec
mov
sub
ja
dec
ja
mov
xor
ret
push
push
js
movsb
testb
aam
loopne
or
insb
jl
sti
orl
inc
fisttpl
jae
pop
stc
out
xor
loop
popa
cmpsb
fcomps
nop
add
jl
push
das
adc
cmpsl
xchg
jmp
mov
xchg
aaa
xor
sahf
test
dec
xlat
adc
mov
rol
loope
movsb
enter
mov
lock
sub
into
ficoms
and
pop
adc
mov
push
mov
clc
add
push
stos
into
mov
sbb
clc
cltd
daa
mov
ds
lock
rolb
mov
push
mov
dec
cs
std
loop
jbe
scas
test
lods
sub
test
arpl
xchg
fwait
push
outsl
mov
push
mov
xchg
inc
call
or
pop
icebp
insb
and
mov
mov
inc
mov
das
inc
bound
loopne
les
jg
mov
std
rclb
cmp
lods
or
push
push
loop
cmp
lods
in
loope
xor
add
imul
lret
ja
jae
xchg
xchg
aad
push
xorb
loopne
xorl
pop
mov
pop
pushf
mov
pop
mov
shl
and
push
xor
outsl
aad
sbb
lock
icebp
xor
jae
lret
pop
movsl
fldt
sbb
dec
js
sub
and
adc
leave
add
out
ja
xor
cmc
and
cmp
mov
jl
lret
fcoml
icebp
cli
mov
lahf
aam
cmp
imul
push
ret
mov
rorl
sub
cmpsl
testb
sarl
popa
lods
xorb
xchg
cvtps2pi
bound
cmp
hlt
cmp
jno
mov
mov
les
js
push
add
sub
jle
dec
cmpsb
sbb
fcmovnbe
or
lahf
das
mov
frstor
and
jbe
jl
inc
mov
lcall
mov
out
mov
hlt
movsl
ret
push
lea
cmc
dec
punpcklbw
or
das
adc
cmp
std
sub
xchg
push
gs
scas
mov
mov
lds
mov
insb
sub
in
clc
ret
inc
push
mov
adc
enter
cld
mov
pop
int
fisttps
movsb
movsl
inc
das
push
call
add
ljmp
xchg
shr
inc
adc
pushf
ficompl
cmp
and
or
mov
outsb
je
ljmp
lret
adc
xchg
mov
out
arpl
push
sub
cld
shlb
cmp
and
add
fs
add
fstpl
mov
mov
mov
scas
pop
rcrl
push
scas
xlat
sbb
push
jae
or
fnstsw
insl
or
sbb
xchg
pushf
xchg
scas
mov
sbb
push
xor
dec
pop
gs
xchg
push
or
loopne
xchg
xor
enter
repnz
movsb
mov
shl
fcoml
hlt
mov
adc
std
push
shll
cmp
jo
lock
outsb
stc
stc
and
outsl
ss
insl
cli
cmp
icebp
mov
cmp
jo
push
int3
sbb
add
xchg
sub
rcrl
jle
pop
scas
sbb
outsl
imul
dec
lret
mov
jae
cmp
and
lea
cmpsl
add
ljmp
push
into
push
leave
xchg
ret
out
pop
lcall
jecxz
sub
leave
push
ds
sti
out
jp
rclb
imul
push
cmp
jg
lret
sbb
mov
and
ret
push
rorb
mov
adc
and
xchg
stos
xchg
bound
nop
dec
cli
fldcw
in
fists
xor
pop
enter
mov
jmp
mov
and
adc
xchg
jge
in
aas
mov
pushf
mov
jge
scas
inc
jl
adc
aas
xor
mov
mov
iret
adc
xlat
test
dec
xchg
inc
xor
fnstcw
cmp
int3
jecxz
jg
pop
dec
push
xor
dec
fildl
cmp
pop
add
inc
cmc
pop
inc
sbb
push
int
or
adc
pop
add
daa
loop
loop
mov
xchg
push
stos
inc
lcall
or
cmp
sub
call
lods
xchg
xchg
lret
movhps
mov
hlt
popf
scas
pop
enter
add
push
mov
mov
add
lcall
fistpll
je
rcll
out
popa
jl
and
push
andb
push
add
mov
aaa
push
movsb
mov
call
call
arpl
push
pop
mov
int
imul
dec
inc
ret
add
and
dec
rclb
je
or
push
lret
ret
cmp
pop
inc
jo
test
mov
push
adc
dec
push
call
xchg
or
jge
fwait
loop
dec
ds
sub
inc
mov
push
inc
fisttps
arpl
mov
test
push
data16
dec
rorl
loopne
ret
sub
adc
push
repz
shl
fwait
lods
and
cmpb
daa
pop
cmpsb
pushf
and
out
daa
mov
je
add
jb
movsl
sbb
sub
stos
sbb
xchg
pop
sbb
into
mov
cmp
bound
lock
or
loopne
movsb
rcl
sbb
pop
cmpsb
dec
jge
loop
sbb
or
jno,pn
lds
jae
les
stos
enter
xor
mov
fcoml
test
and
xchg
fisttps
jg
scas
ljmp
dec
adcl
xor
mov
lret
add
lahf
sub
idivl
jl
cmp
jmp
adc
sbb
icebp
nop
jl
cli
pop
aad
lcall
cs
daa
fst
int
push
jne
cmp
inc
mov
lods
pop
test
dec
push
inc
add
shl
scas
lret
xchg
mov
xor
faddl
cli
cmp
xchg
jge
cmp
ficomps
xor
xchg
pop
dec
dec
lret
push
fmull
add
mov
daa
mov
mov
mov
sub
pop
jae
clc
cmp
push
repnz
daa
flds
sub
into
mov
pop
scas
cmp
testb
push
push
sub
movsl
sbb
xchg
pushf
sbb
repz
sub
imulb
jg
mov
xor
or
sbb
lea
push
adcl
popf
xchg
mov
mov
fs
sbb
adc
aas
movsb
ds
shll
jle,pt
sbb
xlat
insl
add
add
shlb
jmp
cmp
jbe
aam
cwtl
dec
inc
add
dec
pop
jge
sub
and
jb
leave
mov
ss
ljmp
mov
mov
jecxz
add
or
jg
loopne
xor
sub
and
xorb
sub
cmp
cmp
add
push
push
imul
scas
rcll
repz
cltd
mov
add
mul
orl
push
ds
enter
ret
arpl
cli
cmp
add
je
test
movsb
mov
fs
adc
gs
aaa
sbb
jg
fprem
popf
pushf
jno
push
into
sub
ljmp
dec
aas
pop
test
outsb
and
fldl
push
push
int3
inc
cld
je
xchg
rclb
cmp
sti
shlb
dec
xor
inc
mov
mov
into
jmp
idiv
dec
loop
jns
fisubl
cli
push
mov
fstpl
xor
sub
add
push
fisttpl
inc
adc
scas
roll
and
insl
int3
push
dec
imul
adc
cmp
adc
cmpsl
dec
jb
fildll
jnp
int3
mov
repnz
pop
aas
add
ret
mov
out
aam
dec
ss
inc
ds
add
addr16
dec
icebp
jno
and
pop
movsl
push
xor
mov
sti
subb
cmp
in
insl
sub
push
std
xor
fildll
lcall
push
fsubl
jnp
cmp
div
push
cmp
cmp
and
int
pushf
mov
xor
movl
adc
call
dec
dec
lahf
xchg
sahf
es
mov
add
test
push
je
in
xor
pop
push
cmp
ror
mov
cmp
add
icebp
cmp
jp
out
dec
clc
dec
shrb
mov
lcall
jecxz
cmp
pusha
jno
mov
push
test
push
xor
jne
fwait
pop
aaa
scas
daa
sub
insl
lret
fwait
pushf
add
icebp
nop
pop
xchg
pop
jns,pt
and
or
inc
outsb
mov
and
out
mov
ret
pop
scas
pushf
in
sub
dec
push
int
fdivp
sub
sub
roll
jae
jno
lods
fidivrs
push
psubb
and
insb
adcb
xor
jl
nop
dec
jge
add
dec
xlat
orl
ret
or
cmp
aad
or
inc
xor
xor
adc
fdivrl
outsl
dec
lods
or
sub
pop
jbe
nop
nop
push
jge
lret
or
jp
arpl
pushf
fcmovnu
adc
adc
inc
jecxz
daa
mov
pusha
mov
loopne
aaa
cmc
push
fwait
lret
add
shlb
mov
test
cld
adc
cmp
mov
test
icebp
xchg
das
jmp
rolb
sub
cmp
sar
pop
incl
pop
aad
and
and
jl
iret
fidivl
cmpsb
mov
mull
push
jl
cmp
out
cmp
outsb
dec
scas
outsl
enter
adc
inc
jmp
pushf
xchg
rcr
or
mov
mov
pop
mov
push
not
xchg
dec
fs
lahf
cwtl
cmc
inc
fcmove
sub
int3
xchg
std
ficomps
pop
insl
sbb
popa
jno
jl
adc
jns
or
ret
xchg
jns
dec
mov
pop
mov
int
mov
ljmp
adc
xor
paddusb
pop
xchg
xchg
imul
mov
repz
scas
adc
jle
pop
shl
lods
push
into
jecxz
xchg
add
scas
sbb
pop
jmp
aad
cli
xchg
xchg
push
mov
sub
addr16
and
rorl
rclb
aaa
insl
mov
aaa
cmp
and
loop
test
fstpl
mov
test
aaa
inc
int3
and
mov
pop
fildl
add
pusha
dec
shlb
fldt
dec
adc
xor
fnsave
adc
sub
sub
fldt
push
sub
add
pop
push
shr
push
mov
es
call
dec
inc
cwtl
ret
xchg
ret
ds
std
mov
pop
inc
xchg
gs
cld
les
or
les
mov
mov
pop
adc
mov
xor
addr16
dec
cmp
imul
pop
imul
sbb
daa
cmpsb
jmp
cld
push
cmpsl
dec
jb
in
jbe
pop
fistpll
xor
int3
loop
dec
and
andb
jae
mov
out
sub
push
mov
pop
repnz
sub
into
add
pop
mov
fucomp
daa
cmp
mov
dec
clc
cltd
dec
mov
cltd
fdivs
push
daa
lock
and
stos
sahf
faddp
pop
push
sub
stos
xor
iret
addr16
cmpsl
in
out
or
cmp
adc
pop
mov
sub
sbb
jns
sub
pop
leave
push
cli
xorl
pop
push
in
cli
dec
pop
pop
fsubr
inc
insl
outsl
jne
xlat
and
mov
cwtl
cmp
add
or
push
into
push
and
xchg
stos
xchg
int
jno
cmp
daa
xor
popa
cmp
xor
adc
fistpll
xor
push
inc
out
xchg
pop
shrl
mov
icebp
dec
jle
incl
pop
outsb
gs
test
in
mov
xor
scas
mov
fadds
mov
or
sahf
out
and
cld
cltd
movsb
xchg
dec
testl
bound
test
call
jo
repz
and
add
cmp
cs
xchg
nop
testl
imul
imul
cmp
xchg
movsl
std
into
int3
dec
js
push
mov
mov
mov
mov
inc
test
add
cmpsb
outsl
jmp
push
inc
mov
xor
inc
ret
mov
nop
mov
cs
int
jb
fdivrs
sbb
bts
adc
cmpsl
dec
test
sbb
das
push
sub
xlat
negb
pop
cmp
sbb
push
cld
les
mov
lcall
subb
lods
loope
cltd
ss
xchg
popa
arpl
lahf
test
xchg
daa
cmc
dec
mov
shrl
cmc
add
mov
icebp
jns
jle
add
ja
and
sarl
stc
lret
xor
inc
imul
mov
and
test
mov
xchg
and
sahf
xor
xchg
jno
jle
pusha
xchg
sub
outsl
ret
addr16
ficoms
scas
addr16
xchg
jmp
outsb
bound
cwtl
jp
cwtl
xor
ja
scas
or
leave
push
out
sbb
xor
mov
push
test
repz
push
jo
jno
ds
or
pop
sbb
or
lds
rorl
mov
mov
ficompl
sbb
dec
nop
jbe
push
adc
sub
or
cld
stc
popa
roll
aad
fld
arpl
add
aad
out
mov
cmp
xor
push
jne
add
in
jmp
stos
pop
aad
sahf
movsl
jno
dec
insb
repz
cmp
aad
xchg
aam
add
out
xor
sub
xor
inc
mov
mov
push
cmpl
xchg
jns
add
je
jbe
pop
insb
or
cld
int
dec
mov
leave
imul
stos
cmp
ds
aad
fildll
mov
sbb
pop
imul
out
je
push
or
sti
ffree
test
pusha
adc
cltd
stos
out
fucomip
dec
dec
pop
pop
in
mov
and
jae
push
mov
push
add
into
das
xor
mov
jo
pushf
xchg
add
inc
or
into
xchg
add
sbb
push
cli
inc
in
cmpsb
int
fidivl
dec
push
inc
out
int
add
xchg
cmp
incb
cwtl
ret
sbb
pop
iret
ret
sbb
adc
fbstp
xchg
mov
rorb
mov
mov
rcrb
pop
cmp
sbb
mov
jmp
shl
or
sub
push
cmc
mov
push
jno
mov
lock
popa
or
push
jl
cs
dec
daa
mov
xchg
add
pushf
fisubrl
repnz
sub
scas
cmpsl
std
fmull
add
cmpsl
mov
inc
xchg
push
loop
jbe
ret
pop
or
cmpsb
jecxz
adc
icebp
jge
arpl
fsubrp
call
cmpsl
jmp
dec
xor
sbb
cwtl
push
dec
ljmp
nop
outsl
xor
inc
rcr
cmp
pop
sbb
cwtl
push
divb
stc
push
in
or
add
adcb
stos
lds
cwtl
cmp
push
sbb
push
pop
jg
bound
xchg
stos
jg
ljmp
push
and
adc
shrl
stc
dec
pushf
dec
std
mov
je
xor
pusha
xchg
pop
sub
daa
fwait
add
ljmp
xchg
fadds
out
lods
test
repz
cmp
fxch
call
sub
sbbl
insl
mov
cmp
cmpsl
or
out
fdivl
fnstenv
sbbb
jecxz
data16
divb
lods
pop
clc
daa
repnz
fsts
ficomps
adc
ret
outsl
xchg
cmpl
mov
je
nop
sub
psubusw
push
negb
sahf
sbb
lahf
call
int3
fdivs
cld
stos
adc
dec
gs
arpl
leave
mov
sub
adc
and
cli
mov
or
sbb
pusha
push
test
mull
lea
lahf
cmpb
adc
sub
sub
xchg
loop
lea
inc
or
shrl
in
jge
jg
into
mov
mov
dec
mov
imul
sub
int3
lods
enter
mov
xchg
sub
and
adc
into
xor
push
adc
jl
ret
pop
leave
jne
daa
cmp
cmp
push
jns
sub
or
mov
add
and
push
push
mov
add
sbb
in
cmpsl
mov
das
push
xor
dec
ret
sbb
push
aas
int
add
and
or
daa
shr
stos
ret
sahf
fmuls
sub
lea
cmp
sahf
test
imul
xchg
pop
in
fs
push
mov
add
xor
mov
adc
push
stc
and
sub
push
push
push
lcall
cwtl
gs
stos
or
mov
pop
mov
cmpb
mov
rorb
mov
push
xor
jae
andb
loope
mov
push
mov
pop
lea
faddl
rcll
test
loopne
jne
adc
pop
inc
popa
icebp
mov
and
inc
inc
stc
sbb
ret
mov
adc
xor
sub
insb
mov
into
or
mov
pop
dec
cld
std
int
sbb
or
jnp
add
and
mov
dec
cmp
pop
sub
xchg
sub
shlb
aaa
pop
je
lock
and
iret
xor
xchg
sub
inc
xorb
add
loope
lods
push
pusha
pop
mov
push
imul
or
xor
imul
sti
movsl
jp
sbb
or
aaa
ds
fldl
mov
sbb
inc
cli
stos
imul
imul
icebp
sarb
cmp
es
xor
out
int3
jmp
imul
out
pusha
ret
inc
cmpsl
loop
popa
movsb
pop
insb
cmp
repz
sbb
xchg
xchg
setns
and
inc
mov
xchg
add
loope
jnp
mov
jo
popf
xor
and
jecxz
cltd
push
js
push
out
mov
repnz
fs
jecxz
adc
sbb
icebp
mov
in
mov
sub
daa
aad
mov
jl
lahf
push
adc
jnp
jae
test
sbb
in
shlb
cmpsb
add
out
jle
mov
mov
mov
insb
bound
fisubl
adcb
push
pop
fs
call
push
dec
lret
and
push
push
jbe
xorb
ljmp
jp
out
pop
aad
movsl
cmp
fdivp
push
and
imul
sbb
aad
jne
jle
test
jmp
mov
es
xor
dec
mov
aas
cmp
adc
xchg
jmp
lret
and
fstpt
dec
insl
dec
or
adc
mov
mov
je
sbb
and
rcrb
xchg
or
pusha
dec
adc
shl
adc
insl
cmp
jae
push
in
mov
loop
push
shlb
mov
test
jns
add
out
fdivl
or
add
loopne
mov
hlt
test
cmp
jle
or
mov
movsb
imul
jno
mov
in
push
add
outsb
leave
push
sbb
dec
mov
icebp
cmp
pop
icebp
sbb
or
mov
mov
push
push
push
or
push
loopne
mov
inc
inc
push
mov
pop
in
dec
cmpb
pop
ja
mov
stc
mov
dec
outsl
dec
pop
repz
je
dec
mov
stos
mov
clc
repz
sub
jmp
add
cmp
aas
call
outsl
testl
mov
sbb
popa
imul
pop
test
enter
fcmovb
rorb
add
mov
jb
rolb
in
repz
popf
mov
mov
xchg
xchg
or
cmp
pop
adc
push
call
cli
add
cmpsb
outsl
sub
adc
subl
ret
xchg
push
add
mov
mov
mov
pop
aaa
pop
sbb
fdivs
les
bound
add
aad
ret
sub
dec
hlt
push
jns
es
test
and
dec
cmp
dec
cwtl
and
pop
jns
pop
mov
xor
mov
xlat
aas
mov
dec
pop
adc
xlat
or
movsl
into
daa
bound
je
shrb
pop
and
std
xor
mov
sbb
addr16
ret
xlat
and
dec
and
xchg
mov
insl
leave
cli
inc
fldenv
or
mov
jae
xchg
dec
xor
adc
loope
pop
inc
cmp
loopne
inc
pop
test
imull
daa
push
adc
push
mov
and
xor
rol
sub
fisttpl
xor
mov
mov
jge
push
js
mov
bswap
push
in
lock
out
stc
dec
inc
cmp
cs
jle
rorb
pop
jp
iret
xchg
fxam
or
mov
pop
test
sbb
jl
push
cwtl
push
mov
xchg
mov
and
lea
insb
jg
add
dec
cmp
lret
mov
pusha
xchg
mov
jl
out
dec
repnz
inc
fstpl
inc
fldl
xchg
xchg
push
movb
cmp
and
add
cmp
push
or
adc
cli
fs
or
das
jge
stos
stc
push
loope
jl
clc
dec
repnz
fcompl
addb
dec
or
popa
push
xlat
push
popa
into
rclb
fildl
xchg
insl
in
leave
in
dec
mov
lock
mov
movsl
mov
cltd
mov
jnp
jl
mov
mov
jle
push
insl
je
adc
cld
fsubr
mov
insl
cmpsb
sbb
mov
pushf
mov
pop
jmp
cli
mov
and
jmp
xor
mov
clc
xchg
adc
ljmp
out
mov
sbb
out
jb
test
orb
icebp
leave
add
cwtl
mov
dec
mov
in
dec
xchg
movsb
lods
int3
dec
aas
jo
js
loope
js
subb
test
mov
cmp
or
push
inc
or
and
cmp
mov
sbb
xor
pop
bsr
pop
ja
xchg
fisttpll
jg
xor
adc
inc
mov
push
xchg
xchg
scas
sbb
stos
xchg
sbb
dec
or
test
push
subb
lods
push
scas
cmp
mov
into
lret
xor
adc
adc
push
cwtl
dec
xchg
or
pop
popa
outsb
mov
mov
fnop
jns
jmp
dec
mov
clc
ret
sub
sbb
push
popa
mov
push
lret
jge
or
xchg
in
mov
mov
arpl
fsubl
sub
cmp
shlb
adc
rcll
into
out
mov
pop
ja
hlt
in
xchg
add
sbb
bound
xchg
sub
and
push
push
add
mov
sub
lahf
jp
adc
insb
jne
icebp
div
jo
push
add
ss
push
aaa
xlat
push
add
loope
cmp
rcl
imul
adc
adc
arpl
add
bound
push
inc
das
gs
sahf
lods
aas
jb
out
les
cld
fisubrs
push
cli
loopne
mov
xchg
mov
enter
xchg
inc
push
jle
mov
testb
pushf
test
lods
mov
sub
push
lods
sbb
add
test
outsb
cli
add
test
dec
in
repnz
and
mov
mov
int3
dec
jns
and
aam
sub
push
inc
inc
sub
es
lahf
dec
or
and
fsubl
test
enter
jp
std
pop
mov
sbb
and
inc
lds
andl
adc
pusha
cmp
push
pop
mov
xlat
mov
jmp
fsubs
add
push
inc
ja
fdivs
mov
lret
sub
aad
cmpsb
push
out
xlat
and
jp
incl
movsl
mov
jle
xchg
xchg
xchg
jmp
outsb
push
sbb
fcompl
test
mov
dec
lock
lcall
icebp
sub
cli
jnp
jecxz
lock
out
popf
and
push
jne
mov
jb
bound
xchg
push
ret
adc
repnz
enter
lcall
fprem1
dec
cmpsl
aaa
fidivrl
jae
lcall
jno
cmpsb
add
inc
ds
in
mov
int
fdivr
fld
icebp
orl
cmp
jbe
repnz
cmp
dec
pop
and
mov
cwtl
inc
inc
add
inc
jg
test
mov
cwtl
dec
shl
into
imul
add
loopne
lret
mov
push
jp
xor
mov
push
jbe
pop
rorl
sub
mov
mov
xor
jae
movswl
inc
inc
push
popa
and
std
mov
push
xchg
push
xchg
push
imul
loop
bound
jg
add
sarl
cmp
dec
xchg
and
out
aaa
jecxz
pop
inc
inc
sbb
xor
test
mov
out
divb
leave
out
arpl
test
stos
lock
xchg
adc
loopne
das
xchg
push
fnstsw
mov
sub
ret
xchg
out
dec
jb
mov
lods
gs
mov
test
insl
inc
popa
test
int3
cmp
lds
sarb
mov
int
cwtl
xchg
xor
das
imul
fadds
test
lock
xchg
in
sbb
out
rcrb
popa
iret
mov
fdivs
notl
adc
sbb
in
insl
sub
or
jne
test
clc
jnp
cwtl
outsl
sarb
sub
fwait
in
aam
sub
adc
fcom
ret
lock
xor
cmp
rorb
shlb
es
inc
movb
mov
pop
cli
outsb
dec
xor
lock
into
insb
add
mov
repz
sbb
xor
test
loop
daa
xchg
fidivrs
dec
ljmp
sahf
rcl
sbb
xlat
out
hlt
stos
jbe
xchg
mov
cltd
or
out
outsl
pusha
cmc
fdivrs
es
pop
add
jmp
dec
mov
les
arpl
outsl
mov
cmp
sbb
cmpsb
icebp
xchg
xchg
inc
jecxz
hlt
fsubl
lcall
insl
jae
xor
mov
lret
icebp
mov
mov
mov
sbb
ret
lcall
add
mov
add
and
mov
loopne
clc
sub
pop
cwtl
pop
scas
inc
push
out
xor
pop
ret
aam
mov
mov
or
and
sub
fisttps
inc
jl
test
lahf
sub
outsb
pushf
sbb
mov
sub
addr16
fisubs
dec
ss
and
pop
orl
sbbb
lods
cmp
addl
sub
shrb
sbb
fcmovu
aad
inc
mov
mov
or
add
shl
test
push
outsl
push
xorl
ret
into
femms
popf
arpl
mov
xor
mov
mov
fwait
dec
cltd
add
sub
sarl
fcmovnu
nop
inc
mov
jae
pop
xchg
arpl
outsl
fildl
out
out
insl
sub
sar
out
cmc
mov
and
push
xchg
and
mov
pop
mov
push
mov
inc
pop
xor
mov
aad
jno
les
xchg
push
cltd
pushf
ret
dec
std
mov
inc
cwtl
cmp
aad
adc
fwait
or
xchg
or
pop
push
mov
mov
or
cli
daa
out
lock
neg
add
dec
or
loopne
es
or
mov
mov
nop
adc
pop
mov
mov
cmp
popa
sbb
call
sbb
add
jno
stc
rorb
fnstenv
rcrl
inc
add
lret
mov
in
insb
imul
pop
cmpsl
jl
loop
xorl
loope
in
push
psrlw
xor
imul
or
cmp
xor
lcall
xlat
adc
and
mov
xchg
loopne
mov
cmp
mov
pusha
lret
pusha
jne
pop
das
and
scas
xor
stos
cmc
incb
into
and
roll
or
aad
xor
jp
sbb
lcall
hlt
cmp
xchg
push
jl
mov
sub
dec
jbe
sub
mov
cli
cmp
test
or
cs
sahf
jns
imul
fwait
dec
out
mov
jecxz
lea
and
cmp
loope
jno
sub
imul
cld
jnp
sar
inc
jae
add
sbb
add
out
jbe
iret
fstps
in
ret
and
rol
ret
iret
cmp
xor
scas
inc
mov
sbb
push
pop
sub
push
iret
ljmp
cmp
push
inc
pop
addr16
clc
mov
je
sti
mov
mov
fcoml
fs
mov
cmc
bound
popf
push
mov
jns
icebp
stc
jnp
fstp
inc
jnp
xor
add
jnp
imul
xchg
idiv
adc
movsb
or
in
pop
cld
rcrl
xchg
mov
mov
stc
stos
aad
stc
loop
mov
lret
inc
int3
inc
sarl
adc
jno
stc
adc
shrl
test
mov
xlat
fdiv
xchg
punpckldq
aas
push
push
add
insl
cmp
stos
loop
mov
notl
mov
sub
inc
rorl
out
ljmp
or
lahf
push
jno
dec
push
iret
int
add
fadds
mov
lret
adc
scas
inc
or
icebp
or
xchg
inc
or
std
mov
xlat
fdivrl
fistpl
dec
push
aad
pop
in
imul
sti
mov
mov
into
xchg
mulps
xchg
push
adc
outsl
and
pop
mov
mov
lods
jno
mov
add
imulb
add
and
adc
fwait
dec
xchg
xchg
jbe
adc
and
cmpsb
sbb
inc
fldenv
cwtl
and
mov
or
in
fistpl
cmp
add
repnz
aam
outsl
xchg
lock
cmp
stos
fsubs
arpl
xchg
xchg
mov
sub
mov
jecxz
push
movsb
int3
xchg
and
sbb
cmc
xor
or
loop
scas
fwait
xchg
mov
mov
xor
cld
mov
andl
inc
js
ljmp
sub
movsb
xchg
xchg
push
mov
cmp
aaa
cmp
insb
jne
sbb
int
cld
stos
and
cmp
jmp
xor
insl
mov
jo
ret
xchg
or
stos
lods
icebp
dec
scas
mov
mov
push
pop
sbb
ret
lcall
daa
mov
pop
mov
adc
inc
imul
jl
dec
fwait
cltd
xor
inc
mov
int
loop
sub
xor
fst
stos
push
adc
sub
lods
add
mov
add
stos
adc
movsb
roll
mov
mov
and
lahf
push
pop
ficoms
adc
mov
test
push
divb
add
out
xchg
movsl
sub
xor
pusha
fisttps
scas
ret
and
das
xchg
push
call
icebp
fs
push
xchg
repz
test
and
in
xchg
in
mov
add
dec
jns
call
aas
sbb
mov
out
pop
pop
js
mov
jne
mov
push
popa
call
cld
add
dec
mov
shr
push
es
imul
lea
das
or
insl
inc
jecxz
inc
fiadds
testb
dec
pop
or
outsl
imul
sub
adc
sbbb
mov
mov
mov
pushf
or
inc
pop
add
xchg
push
mov
mov
into
push
popf
mov
scas
rorl
repnz
icebp
inc
movsl
fisttpll
fnsave
in
pop
lahf
adc
mov
sarb
and
cmp
test
jl
fldt
mov
xchg
adc
sbb
push
dec
push
sbbl
fneni(8087
add
sbb
lret
inc
mov
jae
jbe
and
shll
rcrl
orb
mov
cltd
push
mov
jle
sub
call
fucomip
jge
loop
jg
jo
sub
mov
jnp
mov
cmp
inc
pop
or
jnp
dec
shrl
sub
in
xchg
adc
dec
dec
shr
inc
icebp
iret
jno
outsb
out
jbe
mov
or
pop
mov
test
fldt
pop
andl
dec
enter
ljmp
inc
and
add
or
sti
mov
pop
imul
sbb
dec
and
insb
ret
mov
lock
jb
cmpsl
dec
lods
scas
test
mov
cmp
push
mov
ljmp
and
nop
insw
shrb
loope
push
jp
mov
addb
cmp
cltd
lock
das
add
xchg
sub
or
push
sarb
sub
ljmp
ss
mov
fcomi
push
lods
jo
es
and
mov
shll
insb
rcr
xor
and
popf
adc
or
or
mov
mov
daa
mov
sub
stos
xor
cmp
jne
mov
cmpsb
sbb
mov
xor
pop
psllw
gs
inc
mov
aaa
xchg
jle
lret
xchg
std
and
aaa
lds
fucom
pusha
add
aas
sbb
cwtl
mov
jno
cli
jmp
and
push
sub
ds
icebp
arpl
out
dec
fisubl
push
xor
cmc
addl
jne
in
test
sub
adc
push
movsb
das
push
inc
test
jbe
mov
dec
mov
adc
adcl
dec
mov
xchg
rcll
popf
idivl
inc
repz
add
imul
std
jecxz
or
add
outsb
inc
xchg
xor
xchg
gs
sub
xor
sub
add
mov
loope
jae
cmp
es
jb
lea
jg
cld
or
inc
xchg
in
mov
mov
mov
cmp
xor
aaa
int3
pop
sub
decl
std
pop
subl
xor
mov
cmp
cmpsb
in
cwtl
or
inc
jg
jbe
xlat
data16
gs
add
scas
mov
fldt
into
mov
daa
adc
sub
push
lods
filds
add
into
clc
mov
add
cmp
fnstenv
and
add
fistps
jmp
push
mov
mov
adc
bound
es
cmp
sub
stc
fsubs
ret
pop
mov
push
std
cltd
xor
push
pop
cmpsb
push
pop
xchg
inc
cld
aas
cld
jbe
inc
loopne
lret
push
xor
push
and
mov
int3
rclb
sub
mov
mov
nop
fisubrl
inc
bound
jb
mov
cs
fmuls
leave
xor
sub
bound
sub
repz
xor
mov
push
dec
mov
adc
inc
in
dec
mov
pop
stc
add
movsb
pop
dec
mov
scas
xchg
push
sbbb
mov
and
mov
adc
adc
sbb
mov
popf
dec
jbe
jb
rorb
insl
push
jmp
lock
arpl
xor
or
add
xor
scas
fsub
mov
jno
nop
lret
pop
aam
add
ja
sbb
scas
aad
add
sbb
vpunpckhwd
outsb
movsl
inc
jle
cmp
sub
stc
stc
jo
inc
mov
jmp
idivl
sbb
add
nop
addr16
sarl
mov
jb
out
adc
jne
call
pop
fcoml
adc
es
jle
sub
sarb
lret
pop
jbe
aam
mov
aam
std
aam
jns
and
pop
frstor
imul
and
or
cmp
sub
mov
std
dec
fldenv
adc
cmp
iret
mov
push
sahf
adc
rclb
dec
rcrl
jp
mov
and
cltd
add
mov
repnz
insl
xchg
cs
add
lea
push
test
test
xlat
jae
ja
mov
shl
test
adc
push
pop
jp
add
dec
in
add
cli
add
lret
into
mov
sbb
jmp
aad
jnp
or
xor
xchg
push
fildl
nop
fdivs
cmp
insb
into
sti
pushw
push
clc
xchg
lods
ds
shll
cmp
inc
sub
xchg
push
mov
xchg
dec
xchg
sbb
jecxz
mov
and
gs
adc
mulb
aad
xor
mov
pop
push
adc
stos
and
mov
sbb
movsl
push
jecxz
aas
je
shr
in
subl
sbb
mov
pop
ficompl
repz
xor
mov
aad
out
mov
mov
test
stos
sub
mov
fsubl
mov
scas
mov
dec
or
ret
mov
scas
mov
mov
gs
adc
sub
js
lret
pop
imul
mov
scas
inc
sub
sub
movsl
inc
lock
xchg
popa
arpl
mov
pop
std
dec
xor
aas
and
jge
jo
cmc
jle
sahf
lea
sub
cmp
lret
cmp
mov
mov
es
test
lret
cmp
es
ds
pop
add
insl
adc
lahf
pop
push
xchg
das
fmuls
out
addr16
bnd
push
jmp
push
push
mov
in
fwait
mov
sbb
xor
cs
push
in
inc
jge
lahf
jns
adc
sub
in
cmpsb
out
int
add
js
adc
cltd
dec
mov
mov
ftst
lret
adc
sahf
fstps
ret
sub
xchg
mov
shrl
orb
ficoms
mov
inc
out
stc
iret
jb
add
sub
cltd
and
mov
mov
cltd
push
iret
jo
sbb
cmp
jle
popa
push
sub
insl
inc
mov
imul
jmp
cli
jmp
repz
ss
sub
pop
push
cwtl
pop
jmp
insl
lret
dec
sahf
push
or
sbb
mov
jmp
je
add
xchg
clc
ss
jae
push
out
add
loope
ret
cwtl
add
inc
cmp
es
jmp
adc
pop
nopl
fisttpll
test
iret
adc
inc
int3
lds
mov
cmp
pop
mov
jne
movsb
sub
add
imul
jae
movsl
mov
lock
pop
imul
mov
mov
lock
addr16
outsl
dec
jge
test
or
sbb
and
jle
loope
add
lods
subb
call
pop
xchg
leave
jo
popf
jle
and
rcrb
mov
xor
xchg
jg
adc
xor
mov
push
fstpt
repz
cwtl
xchg
inc
stc
lds
xchg
push
adc
stos
sub
cmpsl
imull
inc
or
shlb
mov
cli
xchg
push
lods
and
cmp
fsubl
rclb
mov
shll
mov
mov
cmp
in
das
stos
adc
pop
les
call
push
push
aad
std
sub
push
ja
cmp
cmp
jo
mov
mov
call
sti
out
jo
lahf
dec
fld
and
cmp
fucomi
add
loope
cmp
mov
inc
jo
pop
inc
dec
add
loopne
xchg
in
push
mov
in
push
std
adc
mov
cmp
addr16
popf
les
adc
aam
sti
call
cmp
sbb
sub
mov
jo
ret
add
push
inc
add
dec
lcall
and
sbb
pop
inc
pop
leave
cltd
inc
rcrl
aam
jmp
outsl
push
outsb
or
data16
rorl
push
xchg
xor
std
jg
mov
or
out
test
lds
mov
lret
or
lcall
inc
call
lcall
ljmp
loope
jo
cmp
inc
adc
in
cld
push
aaa
lret
cltd
mov
jg
push
jmp
mov
movl
aaa
popf
or
jge
imul
add
mov
shrb
loopne
push
add
jmp
cmp
push
push
arpl
test
test
mov
or
inc
insb
dec
mov
cmp
jecxz
push
insb
std
push
pop
loope
xchg
scas
fldcw
sub
icebp
mov
jp
xor
mov
ds
push
cmp
and
fcmovnu
outsl
push
movsl
inc
jno
sbb
lods
stos
add
push
dec
fsubs
repz
fwait
inc
fcmovne
mov
jmp
fldl
js
ffreep
ljmp
out
aaa
ja
pop
mov
imul
xor
pop
push
stos
stos
gs
sub
inc
cwtl
and
cltd
push
lock
inc
shlb
cmp
inc
jge
aas
shll
adc
scas
cmpsl
cld
stos
dec
cmpsl
mov
popa
add
sbb
jae
or
xor
inc
pop
and
mov
lods
pop
pusha
aam
lods
xchg
jno
pop
mov
sarb
lock
mov
inc
andb
arpl
lahf
mov
pop
dec
int3
mov
xor
fmull
push
or
out
adc
loop
ret
adc
and
scas
ds
lods
pushf
repnz
cs
shr
and
cmp
sub
push
inc
aaa
leave
and
push
aas
stc
push
popa
stc
jp
dec
jno
fadd
dec
stc
add
sbb
fbld
xchg
insb
lret
int
mov
jg
dec
aas
push
out
inc
push
scas
and
pop
enter
lcall
es
outsb
or
xadd
xor
xchg
adc
scas
fsubs
xor
cmp
test
inc
mov
pusha
in
jae
movsb
or
andb
pushf
fimuls
movsl
mov
aas
inc
and
mov
cli
lds
ret
sbb
mov
ret
or
xchg
and
inc
shrb
jmp
ficoml
movsb
push
mov
movsl
xlat
xchg
in
insb
sub
push
add
adc
fbld
je
xabort
loope
iret
lcall
fsubl
cmp
bound
sbb
mov
aas
negl
or
push
jns
mov
cli
mov
arpl
mov
cwtl
cltd
lods
inc
subb
push
push
push
iret
test
and
dec
mov
pop
jno
scas
xlat
sub
push
outsb
cmpsb
pop
sbb
mov
pop
mov
loope
addl
cli
xor
dec
out
fldt
nop
gs
mov
aad
clc
cmpb
fmulp
adc
int
push
nop
lea
add
sahf
inc
mov
out
xor
xchg
mov
jl
xor
test
inc
adc
lret
pcmpeqd
out
lahf
and
xchg
test
jns
test
xor
ficoms
repnz
push
scas
insb
inc
sbb
add
jle
dec
add
stos
sbb
int3
lret
inc
cmp
push
icebp
cmpsl
cmp
adc
jno
ret
cmpl
sbb
sub
clc
stc
adcl
and
aam
pop
test
push
lods
sub
enter
fadd
daa
cld
test
stc
jp
inc
test
xchg
inc
shll
or
xchg
shrl
pop
fdivrs
jb
push
cwtl
stos
movsb
add
pushf
mov
add
pushf
orl
pusha
dec
clc
mov
cmp
xchg
mov
aad
mov
mov
push
mov
test
pop
sbb
pop
sahf
pop
sti
xchg
ret
jbe
push
push
clc
shlb
jo
pop
push
adc
xchg
cmp
pop
mov
sub
lea
or
dec
fs
add
xchg
or
int3
mov
push
pop
add
adc
or
xchg
insl
inc
cmc
movsb
cmc
lahf
dec
pop
gs
jp
call
sti
cmp
je
jle
rcrl
shll
lret
pop
fs
dec
xor
pop
sub
enter
ret
hlt
sub
lret
mov
dec
dec
pop
idivl
mov
fisubrs
movsb
lods
repnz
cmpsb
adc
pop
cmp
and
jl
test
into
jo
pop
nop
cmpl
jge
ja
mov
out
mov
popf
mov
cmc
push
inc
push
pop
cmpsb
push
lods
clc
or
mov
fiadds
cmp
add
push
test
call
mov
jle
das
pop
adc
inc
cmp
lahf
xchg
push
sbb
xchg
push
push
xor
cmpsl
or
cs
rolb
rorl
in
sbb
dec
xchg
pusha
mov
lcall
xchg
imul
pop
add
jle
imul
fnstsw
push
sti
sub
daa
out
int
xlat
sub
icebp
shl
push
adc
inc
pushf
lahf
xlat
gs
sub
inc
insl
push
add
enter
pop
or
in
and
es
cmp
jmp
icebp
repnz
arpl
mov
movsb
push
jnp
in
ljmp
sbb
repnz
inc
xchg
out
in
sahf
adc
and
adc
stos
push
xor
test
pop
rcrb
cmp
aad
fld
cmp
out
lret
pop
inc
pop
jbe
add
xor
loopne
int3
ss
or
call
dec
popa
popa
enter
xor
ss
push
jmp
mov
pop
shl
lahf
ret
dec
bound
mov
push
sbb
lret
enter
jb
add
movsb
pusha
push
orb
into
mov
push
loopne
dec
jmp
mov
xor
push
dec
out
insl
aas
xchg
jp
push
movsl
dec
pop
push
sbbb
push
scas
lcall
les
inc
and
mov
push
dec
cmp
jnp
or
je
xor
sbb
jp
arpl
cmp
iret
data16
loope
add
insl
push
stos
mov
fsubr
sub
std
inc
bound
cli
xchg
hlt
mov
dec
pop
int
jle
xchg
aam
gs
pop
cmp
movsl
bound
cltd
jecxz
inc
rol
jl
sub
jmp
sbb
xchg
je
scas
pop
std
testl
jae
mov
lock
sbbl
xchg
dec
fidivrl
rorb
xchg
ss
insl
mov
stos
arpl
shl
pop
cli
jno
xor
sbb
add
movsl
fisttpll
rcrl
mov
scas
test
sti
loop
push
and
push
xor
sti
clc
add
repnz
arpl
jp
mov
out
xchg
jp
scas
arpl
inc
fs
js
rcrb
int3
sbb
daa
sbb
mov
loope
fcoml
lods
stos
jg
lahf
sbb
xor
call
test
out
cmp
or
repz
lods
or
and
shlb
mov
cmpsb
sbb
ret
push
aaa
mov
xchg
cmpsb
sub
mov
mov
lock
stos
js
xor
shrb
rcrb
xlat
je
mov
iret
adc
mov
mov
gs
sub
mov
xor
daa
sti
repnz
iret
push
ds
sbb
xor
cld
mov
and
add
ss
cld
jbe
aam
sub
push
aam
sub
scas
sub
dec
cmp
cmp
mov
lock
xchg
and
sub
and
movsb
sub
cmp
mov
movsb
mov
and
insb
out
jmp
adc
int
fbld
stc
mov
test
and
inc
cmp
jno
add
xchg
adc
rorb
lret
fstpt
stos
lahf
out
andl
pusha
mov
sbb
fidivrl
outsb
lock
test
sub
movsb
jnp
sbbb
fcomps
shll
jg
imul
cmp
or
pop
add
in
jge
pop
in
loop
add
sub
lods
addr16
xor
lahf
pop
jecxz
jl
cld
shll
xchg
jge
imul
movsb
pushf
sbb
out
push
push
lret
dec
nop
in
push
iret
outsl
loopne
and
vmovntps
fstl
mov
fcoml
push
cmp
sbb
xchg
inc
fwait
arpl
stos
xor
xacquire
xor
cmp
ja
dec
adc
and
cmp
sub
and
sbb
imul
jns
rcl
sarl
push
push
shl
inc
movsb
adc
test
ror
pop
sbb
rorb
mov
scas
aaa
pop
push
inc
arpl
jne
add
pop
xor
sub
jns
int3
lea
aam
sahf
xor
add
and
fbstp
fbld
ret
pop
scas
push
imul
gs
mov
mov
hlt
lret
mov
dec
xor
aaa
inc
sub
out
addl
lock
int3
mov
insb
mov
fwait
inc
sbb
xor
push
in
mov
mov
push
xlat
aas
push
pop
xlat
inc
mov
fsubs
xor
push
dec
fldenv
in
cmp
out
dec
je
or
sub
push
jp
ret
jae
or
push
cmp
inc
insl
popa
clc
and
aaa
std
xor
test
cld
hlt
mov
pop
idivl
inc
mov
cmp
popa
popf
lock
mov
mov
inc
pop
inc
and
icebp
cmpsl
push
arpl
xor
fwait
gs
fisubrl
mov
mov
bound
pop
xchg
repnz
pmullw
sbb
push
dec
inc
sub
pop
jno
xor
loope
les
outsl
xor
out
ja
xor
add
mov
pop
jae
idiv
sbb
popa
push
aas
jge
fwait
ja
in
aas
out
push
inc
pusha
and
and
push
lret
mov
sub
mov
add
loop
pop
outsl
movsb
ds
inc
pop
inc
fisttpll
outsb
in
fs
cltd
in
push
popl
push
in
add
dec
pop
xor
lds
xlat
or
and
clc
inc
fdivrl
sub
dec
je
lret
rorb
and
mov
stos
mov
leave
pop
loopne
sub
scas
xor
jecxz
xchg
pop
rep
in
mov
mov
lock
mov
arpl
inc
lcall
add
ret
shrl
cmp
pop
ret
sub
test
popa
cltd
pusha
mov
inc
mov
lcall
jl
adc
xchg
mov
outsl
or
mov
sub
xchg
loope
arpl
out
loope
mov
cmp
dec
das
lods
push
mov
in
out
jbe
inc
incl
insb
mov
mov
sub
cwtl
and
mov
insl
push
daa
and
push
shlb
sbb
addb
or
fdivrs
lret
cli
bound
sahf
imul
mov
nop
dec
int
sbb
cld
pusha
lods
stc
xor
and
add
insb
int3
lret
dec
sqrtps
insl
imul
roll
xlat
loop
cmc
adc
and
inc
lea
repnz
scas
pop
stos
dec
adc
lods
sbb
push
imul
push
int
sti
cmp
cld
mov
int
jnp
mov
mov
aas
les
sub
call
cmpsb
sbb
fnsave
fidivs
das
idivl
inc
add
mov
add
sbb
clc
mov
mov
int
daa
imul
or
js
sub
js
or
jbe
pop
lret
sbb
icebp
stos
pop
lret
add
inc
leave
xlat
xchg
in
or
xor
sbb
frstor
sub
push
jbe
lods
xchg
xor
pop
pushf
ret
out
shrb
sub
add
push
and
mov
in
push
in
adc
stos
into
fldt
cmc
nop
jecxz
test
cmp
xchg
pop
mov
sub
mov
scas
sbb
inc
movsl
test
adcb
and
sbb
add
ljmp
orb
jne
lcallw
call
lret
idiv
dec
out
lds
popa
mov
dec
cmc
fisttps
fidivs
mov
and
jno
pop
test
ljmp
cld
lahf
push
out
mov
jge
cmp
inc
xlat
es
add
cs
outsb
mov
aas
pusha
subl
inc
movsb
int3
sbb
in
cmp
add
sbb
mov
add
arpl
xchg
incl
test
or
inc
sahf
adc
mov
xor
inc
lds
je
pop
repz
iret
pop
sub
shll
push
xor
loop
or
addb
es
or
fldl
sbb
sbb
test
jns
xor
xchg
lcall
push
add
push
test
mov
jle
mov
jmp
insb
test
loopne
divb
cld
movsl
jnp
pop
fnstsw
leave
mov
add
cmpsb
push
loope
jne
lret
xchg
pop
data16
rcr
adc
jo
sub
jecxz
sub
push
jle
fwait
cwtl
add
xchg
xchg
test
and
shrl
dec
mov
je
and
icebp
and
dec
push
sbb
ja
add
jae
adc
dec
loopne
cmc
add
in
jle
into
or
or
cmp
jg
or
lcall
movsb
std
insl
add
push
imul
or
push
hlt
divb
iret
lret
mov
push
je
sbb
adc
lods
test
outsl
imul
imul
inc
and
add
mov
test
loopne
imul
adc
popa
iret
cmp
mov
dec
or
push
gs
mov
repnz
into
sub
int
inc
lea
fs
push
lods
rclb
in
jne
hlt
inc
mov
movsb
mov
fldpi
xchg
aam
andb
aaa
daa
jmp
jb
adcl
out
add
cmpsb
or
aam
dec
stc
in
hlt
fsts
inc
dec
stos
push
sarl
sahf
jecxz
lock
orb
sub
dec
fld
addb
xor
pusha
jne
loope
xchg
or
push
xlat
leave
scas
scas
leave
push
cmp
movsb
or
adc
std
and
cmpsl
dec
shr
cmp
aaa
rclb
lahf
in
push
and
pop
repnz
in
scas
rorb
ja
mov
xor
dec
mov
adc
mov
in
fwait
daa
sti
rcll
sbb
jno
cs
repz
aas
or
ficompl
in
test
push
andb
sbb
push
xor
jb
xor
push
dec
jp
push
popf
test
xchg
xor
cmp
loope
idiv
pusha
cmpsl
sub
shlb
add
mov
sub
sub
repz
das
cmp
cli
fldenv
and
pop
pop
or
and
mov
movsb
int3
lods
das
fdivs
repnz
and
jg
or
push
jge
xchg
dec
movl
es
pop
mov
dec
sbb
cld
lcall
jae
out
mov
adc
cld
into
inc
jecxz
imul
clc
fisubl
lods
es
and
sbb
cmp
movsl
dec
inc
flds
push
lret
scas
je
pop
test
shll
jo
das
sub
cwtl
repnz
and
jl
inc
push
mov
jle
ret
inc
add
mov
mov
outsl
cli
and
and
push
in
add
in
lods
cmpsl
loopne
dec
jb
les
xchg
stos
jb
aam
lret
cmp
mov
cld
sarb
mov
jns
insl
or
dec
push
imull
lret
ljmp
jl
pushf
cmp
data16
dec
je
pop
stc
push
ret
outsb
cs
jo
das
leave
stos
fwait
pop
test
add
in
push
cwtl
notb
leave
dec
loopne
stc
loop
pop
ja
mov
push
pushf
pop
add
pusha
test
cwtl
outsl
sti
in
mov
pop
dec
pusha
dec
add
repz
pusha
mov
cmp
mov
std
pop
or
ja
loopne
movups
mov
cmpb
push
mov
out
adc
out
jge
add
cmp
adc
pushf
xrelease
and
rclb
lret
stc
mov
pop
and
push
and
popa
xchg
pop
movl
scas
jne
or
lret
mov
jb
inc
adc
lds
fwait
xlat
sub
xlat
mov
cmpsl
pushf
pop
push
jle
in
and
xchg
stc
sbb
gs
out
push
or
mov
lret
cmp
adc
mov
push
out
cli
push
cs
lock
sub
jnp
gs
cmp
xchg
cmp
push
adc
add
fadds
inc
adc
adc
jmp
add
dec
cwtl
push
outsb
data16
mov
add
and
outsl
add
mov
outsb
gs
xor
decl
cmp
ja
ds
adc
aam
lds
ljmp
cmp
adc
shrl
enter
or
adc
pop
pop
stos
out
adcl
cld
in
and
xchg
sub
mov
sbb
pusha
fnstenv
pop
push
test
xchg
je
or
stc
add
aad
push
in
lret
cmc
jge
push
inc
and
jmp
xorl
xchg
sbb
cmp
jne
sub
imul
or
ds
add
lock
test
insb
dec
add
fs
cmp
pushf
xor
adc
clc
jno
sub
dec
lret
add
mov
scas
mov
or
pop
test
shr
push
imul
ret
sbb
add
sar
jns
lock
fmull
cli
popa
shrl
ret
out
pop
shll
es
pop
aaa
arpl
popf
push
cmpsl
fs
decl
ja
shrb
push
push
pop
cmp
push
or
ljmp
mov
mov
cmp
fucomp
xchg
mov
cltd
push
outsl
jnp
pop
adc
cmpsl
cltd
pop
loopne,pn
in
js
jecxz
jl
je
jge
jbe
std
mov
sbb
jo
mov
cs
cmp
push
pop
jmp
fwait
pop
sahf
add
pop
jno
pop
dec
mov
pushf
mov
sbb
stos
add
iret
sbb
push
repz
repz
andb
cld
sbb
push
jg
xchg
jle
mov
and
mov
push
and
jnp
fs
cmpsl
movsb
mov
add
jle
push
add
mov
scas
pop
popa
movsb
xchg
cmp
pop
cld
adc
cli
add
loopne
push
imull
dec
fstpt
jmp
cmp
mov
cli
aad
mov
push
ds
jbe
dec
adc
and
negl
jbe
popa
inc
adc
dec
jl
outsl
inc
pop
in
movsl
mov
jp
adc
pop
test
faddl
into
aaa
sbb
add
push
je
ret
lods
test
adcl
inc
mov
cli
lret
push
mov
push
std
mov
popw
pusha
mov
sbb
popa
out
enter
pop
hlt
icebp
mov
and
xchg
mov
in
andl
fwait
es
jnp
push
les
mov
jae
jmp
daa
mov
ret
sar
mov
dec
into
addr16
int3
dec
sahf
jae
subl
xor
in
cmpsl
testl
dec
stos
mov
and
ret
sti
repz
imul
xor
fs
test
xor
mov
adc
mov
in
mov
shr
cltd
sbb
lret
lods
xchg
int
jmp
and
xor
or
cmpsb
arpl
sub
scas
sbbb
arpl
hlt
lds
cs
sub
jmp
jae
loopne
pop
into
rcll
insl
cmpsl
cmpsb
je
das
cld
push
mov
iret
cmp
cli
lods
or
movsl
decl
push
mov
adcl
jmp
mov
in
xor
inc
cli
imul
pop
sub
das
cmp
cmp
push
jns
scas
mov
or
adc
xchg
inc
cmp
cmp
add
mov
pop
ret
push
pusha
jo
add
add
cltd
dec
mov
add
sbb
jno
xchg
icebp
into
lods
mov
xchg
aas
rcr
sub
outsl
push
shll
out
jmp
dec
jle
hlt
stc
xor
mov
inc
add
cli
jecxz
pop
jae
dec
inc
sahf
cmpsl
jo
gs
in
push
fs
daa
push
cwtl
test
js
je
sbb
fwait
sbb
popa
shll
adc
hlt
add
nop
fnstsw
lret
pusha
or
mov
clc
dec
lds
xchg
adc
or
xchg
cmpsl
scas
cmp
mov
ja
mov
addr16
sbb
outsb
mov
les
into
inc
sarb
jb
call
pusha
push
adc
nop
rcll
jmp
popa
xchg
mov
sbb
int
inc
push
stos
dec
ds
pop
or
mov
es
mov
int3
test
dec
dec
cmp
pop
scas
or
sub
outsl
pop
or
inc
adc
adc
stos
push
ss
stos
stc
jmp
out
inc
mov
sub
and
xor
mov
fisttps
mov
push
sbb
andl
sti
popf
pop
and
inc
sub
and
ret
add
int3
adc
jl
pop
inc
sub
mov
gs
sub
es
jne
push
cmp
jle
mov
cwtl
and
mov
xor
mov
outsb
sbb
sub
jbe
int
mov
popfw
cltd
xchg
inc
movsl
add
aaa
lods
fwait
and
stos
sub
cmp
bound
jg
push
sbbb
cmp
dec
cmpsb
popf
mov
xchg
sub
in
data16
xor
cmp
mov
push
dec
repnz
mov
in
outsb
push
push
ljmp
pop
push
add
mov
adc
jmp
jne
jbe
pop
jne
cmp
or
call
cmc
mov
xor
xchg
insl
int3
jne
inc
loope
js
iret
xchg
mov
jge
rcl
out
cmp
push
test
fcmovnu
or
xchg
lea
sarb
xchg
sub
aaa
icebp
adc
xchg
xor
inc
mov
jp
inc
pop
ds
clc
push
add
sub
sub
repz
mov
add
fmulp
leave
stos
pop
ret
or
dec
sbbl
pop
int3
cltd
mov
mov
icebp
jl
addr16
sub
out
dec
pop
fsub
loopne
mov
mov
jno
cmp
divl
push
dec
lahf
jno
in
aaa
out
push
in
icebp
fdiv
jmp
lahf
ljmp
lret
gs
cmp
popf
mov
stos
adc
int3
aad
mov
mov
daa
xchg
stos
mov
push
xchg
sbb
sub
js
push
mov
sub
dec
inc
sub
mov
xchg
pop
inc
inc
loopne
lret
xchg
dec
dec
cli
sbb
push
push
repnz
cmp
pop
bound
mov
adc
xchg
dec
loopne
out
pop
fcmovnb
nop
cmp
jno
test
sub
jbe
clc
sbb
jl
jge
xchg
or
mov
rolb
jb
pushf
movsl
push
pop
daa
jge
rcrb
inc
pop
loopne
dec
test
sub
mov
jle
or
ficoms
ret
cli
fstpl
pop
mov
adc
mov
xchg
cs
push
sub
imul
push
lret
lock
lock
and
out
test
inc
sub
mov
scas
andl
scas
jg
sar
ds
jbe
fldt
cmp
loopne
iret
jns
insl
iret
xchg
call
fsubrs
aad
sbb
xchg
lret
imul
push
cmp
adc
cmp
mov
addr16
or
jge
sti
add
cwtl
pop
ds
hlt
loopne
jmp
or
addr16
movsl
iret
or
into
bound
mov
xchg
cld
jnp
push
inc
jno
das
pop
add
outsl
inc
mov
mov
js
notb
dec
lret
fimuls
add
or
fsts
aaa
mov
dec
jle
dec
lret
xor
adc
mov
xor
pop
daa
rcrb
pop
mov
and
mov
cltd
xchg
rcrb
test
je
ja
xchg
rolb
inc
cld
rorl
push
loope
int3
aaa
sub
lret
push
inc
xchg
aad
xchg
mov
loop
sbb
cwtl
mov
mov
mov
add
scas
pop
mov
cmpsl
pop
or
or
movsb
mov
add
movsl
jl
sbb
pop
test
push
sbb
movsl
frstor
out
adc
push
or
cmp
cmp
mov
les
pop
and
outsb
fcoms
aaa
cmp
out
jb
pop
ds
mov
or
cld
fisttps
pop
mov
inc
fmul
xchg
or
push
sar
mov
pushl
movsb
push
xor
push
pop
adc
xchg
pop
mov
add
and
stos
repnz
mov
xor
push
dec
lcall
lods
mov
cmp
pushf
movsl
cmpb
out
loop
ret
xchg
into
jnp
repz
fs
outsb
out
hlt
movsl
adc
dec
lods
dec
mov
inc
rol
jbe
out
cmp
fiadds
aad
mov
dec
jl
inc
hlt
cs
mov
cmp
cmp
and
inc
cs
incb
jg
dec
adc
ficoml
inc
inc
cmpsl
movsb
add
out
dec
sub
aas
dec
jnp
lods
shl
mull
lds
es
push
mov
rcrl
jnp
jbe
in
pop
out
sahf
sub
mov
or
lds
repz
mov
pop
loop
inc
ljmp
pop
push
push
add
int
lret
popf
cmpsl
pop
or
mov
jle
mov
out
lods
outsb
sti
jae
mul
mov
add
in
jb
or
jge
clc
and
cmpl
mov
cmp
cltd
inc
stos
shll
or
pop
mov
pop
insb
mov
fmul
and
in
dec
cmp
mov
adc
out
ret
in
pop
pop
sbb
sbbb
mov
mov
cmpsb
popf
pop
xor
mov
shrl
xchg
or
icebp
inc
adc
push
fs
mov
dec
fdivrs
pop
push
popf
inc
mov
fimull
xchg
jge
andl
cmpsb
in
lcall
pop
fisubrs
imul
jo
movsl
xchg
in
xchg
xor
mov
xor
jb
mov
frstor
adc
add
jmp
cmp
push
and
ss
ja
xchg
add
enter
jp
sub
inc
push
jp
mov
mov
fidivs
and
add
and
nop
add
mov
cmp
jae
mov
shlb
jne
push
shll
push
fcmove
les
test
mov
fisttpll
cs
sub
mov
int3
dec
mov
aam
out
lea
and
movsb
roll
icebp
push
push
mov
and
xchg
sub
mov
data16
adc
push
shll
clc
ljmp
call
or
and
fsubrl
pusha
ret
rol
aas
hlt
adc
or
xchg
cltd
outsl
gs
cmc
xchg
pop
test
fs
hlt
scas
and
or
call
pop
push
orl
inc
dec
dec
lcall
xor
cmp
mov
xor
lret
sub
scas
or
mov
ja
mov
call
xchg
scas
and
je
and
outsb
jge
jg
jno
adc
lock
sahf
lahf
test
fdivs
adc
xchg
movsb
es
inc
les
out
xor
lahf
daa
xchg
push
out
sbb
push
and
aaa
ljmp
loope
push
orb
loope
je
pop
and
mov
sbb
mov
jl
scas
mov
adcb
and
xor
out
or
rcrb
ljmp
pop
sbb
cli
mov
xchg
push
and
out
mov
aas
ds
pop
add
and
outsl
adcb
jnp
xor
adc
jecxz
cld
fnstenv
ficompl
rcrl
movsl
gs
ss
cli
add
dec
data16
test
fidivrs
lret
repz
sub
add
into
and
ljmp
xor
sbb
xchg
pop
stos
ficoml
cmc
lret
stc
mov
sub
dec
test
inc
push
inc
cmc
mov
fcoms
or
lods
cmp
adc
rorb
xchg
dec
push
dec
shll
mov
loopne
stos
adc
or
pop
inc
sub
pushf
push
add
mov
ss
imul
mov
lcall
or
clc
sbb
sahf
add
push
sub
pop
sub
push
movsl
movsl
ja
test
pushf
jle
jb
jb
push
orb
inc
outsl
add
sub
out
addps
das
in
jae
sbb
ret
jbe
push
sbb
and
add
aad
cmp
inc
pushf
xchg
xor
adc
sbb
shrl
or
add
gs
cmpsb
or
jg
fcomp
shll
test
mov
adc
xchg
or
in
std
je
xor
aas
hlt
jno
lcall
int3
fbld
fsubrl
sbb
mov
test
ret
xchg
xchg
jg
mov
sbbb
push
push
sub
xchg
jp
imul
loop
dec
or
inc
jg
cmpsb
icebp
daa
mov
sub
add
shrl
pop
loop
in
ret
dec
or
push
ja
cltd
into
cmp
aad
ret
or
sub
fdivr
pop
or
fwait
outsb
into
jns
fcmove
pop
outsl
mov
std
cmp
lods
xchg
mov
push
xor
push
fnsave
push
mov
adcb
lret
mov
xchg
dec
mov
xlat
add
cld
movsl
movb
call
shl
mov
jns
push
lds
pop
lock
mov
out
xchg
notb
xchg
or
out
jmp
inc
sub
addr16
lds
out
and
mov
push
cli
mov
jae
daa
jne
ljmp
pop
xchg
inc
ljmp
mov
jle
je
inc
mov
cltd
push
test
xlat
xor
xchg
ret
push
orb
push
test
and
and
jb
leave
mull
aas
repz
sbb
cltd
pop
mov
xchg
pop
mov
clc
in
repz
xor
xchg
dec
lret
pushf
cmpsl
jmp
push
xchg
into
inc
jg
ja
dec
push
jnp
sbb
loopne
push
push
sub
push
sub
jmp
lods
int3
dec
les
movsl
or
js
push
jp
pand
jmp
mov
scas
xchg
or
sub
ja
xchg
sub
jp
mull
inc
mov
inc
scas
mov
and
mov
cwtl
les
dec
jmp
lea
adc
or
ljmp
loope
out
xor
xlat
push
inc
pop
adc
xor
cmc
fidivl
push
fwait
dec
pop
fadds
push
das
mov
ja
pop
in
mov
sbbl
jle
sti
inc
adc
ljmp
mov
sbb
shl
cmc
pop
mov
add
pop
aas
aam
aas
into
inc
sbb
jmp
add
test
insl
xor
sar
mov
sti
iret
cmc
test
pop
inc
fidivs
loope
mov
divb
fnstenv
lret
jbe
jns
fnclex
adc
or
push
outsl
mov
pop
xchg
lea
push
push
xchg
or
inc
mov
dec
stos
mov
mov
lahf
idivb
sub
pop
mov
negl
lret
and
xor
jmp
cmp
mov
insb
push
out
aad
cmp
dec
push
stc
add
inc
pop
bsf
cmp
mov
and
shlb
cmp
rcl
mov
push
out
sti
ss
in
jo
cmc
push
sahf
inc
sub
jmp
xor
nop
dec
ljmp
dec
lret
xchg
cmpsb
cltd
cmp
sbb
and
sub
xchg
lds
jb
clc
scas
mull
dec
add
lods
dec
sub
jl
je
gs
pop
and
ret
xchg
or
fs
sbb
and
and
xchg
rolb
stos
pushl
add
jo
add
and
cmp
pop
int3
mov
outsl
clc
int3
xchg
adc
push
add
cmp
lods
mov
pop
test
push
sahf
mov
mov
jp
sbbb
fxch
stos
lret
jge
aad
inc
jb
pop
popf
mov
cmp
fimuls
outsb
or
or
inc
jl
ret
jl
cltd
dec
and
push
mov
daa
inc
loop
dec
sub
jl
aam
cmp
daa
cmc
inc
subb
mov
sbb
jge
divl
test
mov
xor
fs
inc
fcmovbe
imul
jns
mov
loopne
jbe
roll
inc
mov
push
shlb
imul
fisubl
mov
aaa
or
dec
ret
jns
xchg
dec
mov
push
hlt
insl
xchg
test
add
insb
pop
popf
pop
dec
test
xor
fcmovu
mov
mov
les
hlt
add
je
push
ss
ss
adc
inc
push
ret
data16
xchg
fidivrl
xor
pushf
lret
push
cmpsl
fprem
xor
cmpsb
iret
xchg
add
call
push
xchg
in
jae
mov
adc
arpl
arpl
mov
cmp
jns
xchg
cmp
pop
mov
cmp
fldl
je
sub
xchg
jae
les
cmp
fstpt
xor
outsb
in
pop
aaa
push
out
mov
add
lods
int3
aas
lret
adc
in
dec
ja
sub
mov
cltd
pop
sbb
js
je
cmp
jecxz
jmp
adc
or
push
mov
lds
in
mov
mov
aaa
mov
adc
aas
xchg
out
cmp
rol
pop
push
and
dec
mov
jecxz
add
cmpl
sub
fiadds
insl
xchg
lea
adc
aad
mov
xchg
in
xor
popf
add
sbb
popf
test
les
jbe
push
adc
mov
inc
js
outsl
push
fcompl
xchg
cltd
int
push
fbld
out
or
es
push
push
push
inc
inc
mov
jge
jge
into
enter
push
incb
mov
fcmovb
outsl
out
and
lea
xchg
rcrl
or
ret
add
cltd
out
push
outsb
inc
in
fwait
cmp
mov
cmp
movsb
mov
fs
inc
js
out
jne
jb
outsb
fs
xchg
sub
shr
sbb
mov
ja
pop
push
dec
xor
ljmp
inc
call
mov
ret
stos
xor
enter
mov
pop
test
mov
adc
shl
out
and
repz
jmp
daa
ljmp
add
loopne
mov
in
mov
bound
aas
fidivl
xchg
ficomps
inc
shrb
dec
sbb
mov
inc
and
cld
sub
sbb
mov
xchg
mov
inc
divl
mov
sub
sub
lret
pop
call
push
in
and
loope
pop
movsb
inc
mov
enter
rorl
cmpsl
jg
and
xor
stc
inc
adc
test
cltd
sbbl
pop
cmpsb
or
shr
rcll
add
cmp
rcll
mov
sbb
in
lods
ds
inc
aam
add
mov
cmp
mov
cmp
ljmp
rorl
mov
xchg
push
cli
cld
sub
fldl
leave
outsb
stos
cmp
sub
out
sub
std
iret
js
jmp
and
push
lahf
xchg
imul
popf
push
test
flds
hlt
mov
push
test
pop
jp
in
cmp
rcrl
inc
fldl
mov
jle
clc
fistps
outsb
xchg
mov
iret
clc
jne
sub
movsb
or
dec
and
movl
xor
or
jno
outsl
fwait
pop
push
jae
std
sub
je
xlat
mov
popa
in
sbb
or
sbb
cmpsb
mov
push
mov
mov
xlat
out
jo
sbb
inc
cmpsl
adcb
sbb
sahf
stos
dec
pushf
fdivl
sbb
scas
or
test
push
sahf
outsb
movsl
pop
test
or
cmc
cmpsl
xor
jnp
es
cmpsl
push
jmp
jecxz
add
lahf
es
sub
cmp
add
ss
pop
adc
nop
dec
imul
cwtl
push
mov
rclb
mov
and
jge
les
push
sbb
mov
rcrb
or
pushl
popa
sti
pop
xchg
pusha
not
js
xor
xchg
std
clc
jl
xor
xchg
out
cld
insb
nop
cmp
addr16
je
or
mov
mov
push
int3
arpl
add
pop
insb
scas
call
push
and
add
push
mov
sbb
sbb
or
or
lret
pop
js
out
negb
test
sbb
rorl
es
fsubrp
sbb
sar
jne
and
xchg
lret
movsb
mov
mov
ficoms
inc
mov
adc
xorb
aad
dec
sub
jge
sbb
mov
lods
jge
push
cmp
add
addl
fildll
and
cmpsl
iret
push
pushf
jb
fimull
or
incb
sub
adc
and
faddl
cs
lock
and
enter
inc
scas
or
dec
sbb
cvtpi2ps
in
in
fildl
lea
scas
iret
int3
insb
mov
fcomps
pop
push
sub
lea
or
and
out
mov
fimull
flds
mov
mov
fmull
push
int
or
jns
jb
dec
push
adcl
stc
mov
or
ljmp
addb
pusha
mov
push
les
dec
and
xchg
or
pop
cmp
and
cltd
arpl
aad
push
in
fiadds
fnstsw
dec
dec
fbstp
push
popf
addr16
lea
aad
inc
pop
add
mov
sbb
xchg
lock
mov
dec
mov
jns
imul
idiv
les
loop
push
fmull
cmpsb
sbb
leave
iret
xchg
or
push
and
dec
mov
cmp
rclb
or
xor
push
and
mov
mov
scas
adc
addr16
das
push
daa
arpl
mov
mov
outsb
ret
or
dec
ds
rorb
cld
les
sbb
push
xchg
xchg
sub
lcall
xlat
xchg
fildl
and
cmp
inc
outsb
xchg
sub
lret
pusha
mov
adc
jo
nop
dec
jecxz
pushf
xchg
pop
stos
adc
mov
movsb
cs
cltd
and
mov
adc
adc
mov
sub
mov
xor
mov
and
outsl
push
lea
mov
out
aas
cmp
pop
push
or
lret
insl
shlb
std
filds
cmp
push
inc
jp
jge
or
aas
imul
pop
push
popf
dec
mov
std
mov
andl
jbe
push
fcmovnu
pushf
sub
test
addr16
rcrl
jae
lods
add
pop
cmp
lret
fsubp
add
sbb
adc
test
cmp
mov
add
test
jns
mov
loop
popa
lret
sub
fmuls
mov
icebp
es
bound
aad
mov
inc
adc
jle
and
dec
dec
and
xchg
out
dec
fldcw
push
sub
dec
out
sbb
mov
aas
lret
or
dec
mov
and
repnz
cld
add
dec
sbb
les
mov
popf
je
jae
mov
or
sub
fwait
out
cmp
pop
cs
pusha
ja
sub
ss
add
mov
xor
add
xchg
pop
add
xor
outsl
repz
movsl
xor
and
ljmp
cltd
push
aaa
hlt
mov
mov
or
daa
inc
out
and
scas
sbb
pop
test
push
addr16
fidivl
xor
push
loope
rcl
sub
cwtl
scas
ss
mov
in
cmp
jge
je
out
andl
and
lret
lcall
ja
add
shrb
cmp
push
jecxz
mov
test
mov
out
pop
int3
pslld
fs
dec
stc
xor
inc
fcomi
bound
add
mov
inc
pop
jns
or
mov
incb
jns
js
mov
and
mov
shlb
ss
push
fcompl
jns
call
fimull
dec
into
sub
enter
or
mov
je
rclb
mov
lret
call
jmp
out
into
imul
or
cs
insb
iret
sub
in
cmp
ss
and
lret
aas
jge
push
sbb
clc
inc
cltd
cmpsb
push
aam
mov
imul
mov
out
xchg
adcl
push
or
stos
jmp
test
outsl
xchg
add
in
push
loope
jl
and
psrld
lds
std
mov
mov
and
ret
mov
push
orb
xor
loope
outsl
fnstsw
in
pusha
daa
out
jg
aad
out
and
in
sub
inc
movsl
add
in
push
mov
pop
out
int3
les
fcompl
and
and
stos
dec
scas
shrb
xchg
out
or
dec
fmulp
aam
push
xor
inc
fwait
jmp
xor
mov
pop
mov
mov
adcb
addr16
lods
nop
imul
repz
lret
or
and
sub
fdiv
ds
test
out
sti
subl
dec
fxrstor
imul
cmc
mov
jmp
dec
mov
in
push
push
mov
add
fldcw
pusha
int
test
lods
loop
loop
out
mov
bnd
andb
or
cld
dec
sahf
sub
out
imul
sbb
and
stos
popf
sub
jns
in
adc
test
cmp
push
aad
inc
cmp
sbb
pop
notl
push
call
enter
jg
into
push
mov
mov
repz
in
mov
bound
jp
pop
sarl
mov
sub
mov
push
popl
imul
rcll
rorb
stc
inc
sub
fistpll
mov
and
fcoms
jl
xchg
orl
nop
dec
int
pop
adcl
pop
movsb
push
or
lock
loope
push
xchg
cmp
outsb
and
push
pop
stos
push
jl,pn
insb
cmp
fisttps
jmp
push
clc
shll
movsb
xchg
pop
fucomip
push
icebp
lret
push
fcmove
pop
cmp
sbb
sub
sub
inc
in
jnp
jae
adc
js
ficomps
cmp
add
and
add
shlb
sub
test
sub
stos
mov
subb
inc
nop
into
rcll
aas
mov
fs
test
enter
mov
xchg
add
ret
and
gs
jbe
scas
pop
inc
pop
inc
roll
ja
ss
dec
scas
add
movsb
je
outsl
iret
lcall
push
add
inc
movb
dec
or
xchg
mov
sub
dec
mov
cmc
ljmp
add
sbb
lahf
add
jecxz
dec
pop
sub
das
or
xor
or
pop
out
ja
and
testb
scas
popf
clc
cmp
adc
aaa
mov
mov
sahf
in
lret
pop
mov
or
jmp
roll
mull
sub
push
cmp
stos
outsb
mov
cmpsl
sub
jno
inc
icebp
pushl
or
push
mov
or
stc
imul
push
pop
scas
mov
repz
ret
lcall
push
mov
dec
mov
shlb
mov
pop
movb
inc
pop
test
inc
leave
xor
sub
popf
sbb
pop
outsb
pop
push
push
or
insb
mov
jecxz
iret
mov
imul
mov
inc
jge
jnp
add
fnstsw
inc
mul
pop
adcb
out
popa
jmp
sbb
xchg
push
into
into
imul
or
adc
dec
sarl
pop
xor
daa
pop
sub
loop
add
mov
nop
repnz
pop
int
cmc
sbb
shrl
dec
mov
mov
inc
push
jbe
dec
fidivrs
adc
lcall
aad
mov
or
jmp
into
push
outsb
std
mov
fwait
sbbl
insb
push
rcrl
hlt
in
mov
or
cmp
insl
mov
inc
lea
adc
adc
int
flds
mov
xchg
mov
mov
popa
pusha
add
mov
pop
cltd
and
jmp
push
mov
mov
push
test
and
dec
dec
das
aaa
dec
inc
mov
adc
sub
out
pop
lods
mov
aaa
push
mov
insl
mov
jmp
lea
jg
lret
sti
push
shlb
incb
xor
or
xchg
ret
jns
iret
adc
mov
mov
mov
mov
imul
aaa
sbb
push
mov
shr
xlat
add
maskmovq
idivl
inc
movsl
outsb
cmc
sahf
shlb
ficoml
cmpsl
stos
sub
mov
sub
or
push
rep
xlat
fcomps
notb
sub
mov
scas
fcomip
orl
fisubrs
pusha
mov
add
cwtl
dec
cltd
sti
bound
mov
push
stos
outsl
mov
testb
sbb
dec
std
cmpsl
ja
dec
xor
lgs
sub
push
add
pop
or
jmp
icebp
sub
addr16
cmpsb
lea
sub
dec
xchg
addr16
daa
adc
lods
mov
fisubs
ja
daa
mov
mov
xlat
xchg
mov
add
cmc
inc
clc
ss
push
push
inc
enter
sbb
mov
jae
dec
jg
cmp
mov
movsb
and
mov
and
imul
mov
adcb
push
mov
or
mov
in
xchg
mov
repnz
ret
pop
subb
ljmp
inc
inc
push
dec
iret
dec
aad
pop
daa
iret
movsb
in
mov
jp
insb
imul
adc
xchg
jle
xlat
mov
or
loope
cmpsl
fidivl
lods
dec
dec
pop
add
ds
mov
aaa
mov
repz
rorl
cltd
mov
add
mov
lret
cmc
push
sbb
mov
jb
mov
add
cltd
push
cld
pop
js
push
int
loopne
dec
cmp
out
and
mov
pusha
xchg
and
push
jno
dec
or
sahf
and
fldenv
sahf
dec
outsb
mov
xor
xor
arpl
cmc
shll
dec
nop
fadds
addb
or
push
inc
sbbl
fidivs
mov
or
mov
fnstsw
push
movd
xor
cmp
lret
mov
mov
pop
adc
and
add
jo
jo
xchg
or
addr16
repz
in
push
ret
mov
dec
es
fistps
aas
or
mov
xor
or
idivb
fnstsw
add
add
dec
lcall
in
test
sub
stos
into
mov
cwtl
sbb
dec
test
in
dec
mov
testb
xchg
dec
iret
cwtl
les
hlt
stc
js
hlt
mov
mov
mov
inc
xor
push
xchg
idiv
lock
movsl
mov
das
mov
mov
jae
loop
xor
jne
in
je
imul
sub
out
mov
push
pop
adc
or
movsb
jl
lock
xchg
inc
sbb
das
shl
lods
fsubrl
ficomps
xor
sub
fsubl
mov
push
out
xchg
sbb
imul
nop
jns
inc
lock
aas
cmp
sbb
mov
shrl
scas
fwait
sbb
adc
dec
dec
das
jmp
adc
bound
loope
push
icebp
popl
pushf
mov
add
insl
movsl
add
rorl
inc
sbb
push
bnd
fistps
pop
pop
pop
orb
add
cs
mov
hlt
xchg
int3
adc
add
or
xor
push
imul
ljmp
mov
sbbl
int
jns
add
cmpsl
ret
mov
outsl
mov
enter
in
ret
jmp
mov
mov
lret
aam
mov
scas
dec
or
push
pop
test
mov
lret
daa
fsubs
or
std
imul
mov
inc
pop
mov
mov
jno
xchg
imull
mov
mov
shlb
es
je
lahf
or
xchg
mov
ljmp
pop
xchg
scas
jcxz
jb
add
push
div
nop
cld
rorl
dec
mov
testl
xchg
xlat
cmp
mov
sbb
aam
call
jl
popa
out
push
sub
cld
lods
aam
out
insl
popl
test
movsb
repz
dec
insl
loop
pop
push
lea
mov
dec
and
pop
mov
and
shll
mov
enter
inc
adc
jg
and
sub
jmp
imul
cltd
daa
daa
out
jge
xchg
clc
sub
fildll
imul
jnp
inc
xchg
mov
fs
pop
bound
pop
mov
ret
into
into
aaa
mov
mov
movzwl
adc
hlt
out
mov
shll
jae
sub
leave
xchg
loopne
das
dec
jl
jmp
xor
imul
push
sbb
xor
loopne
sub
add
test
dec
nop
mov
add
jbe
xchg
inc
aaa
mov
ret
mov
std
in
mov
mov
xor
add
sbb
sbb
in
lds
lcall
mov
pop
test
mov
push
ret
loopne
sub
dec
mov
dec
iret
jmp
in
test
cltd
sub
mov
cmp
dec
lcall
inc
dec
loope
and
mov
xorb
fiadds
mov
pop
xor
and
and
push
into
add
lods
loope
shlb
mov
int3
rcrb
sbb
jl
sub
inc
jmp
fwait
imul
icebp
and
inc
push
jo
sub
pusha
jbe
fwait
int3
pop
fcomp
movsl
jle
mov
mov
or
dec
mov
int3
arpl
insb
movb
xchg
popa
push
rolb
sbbb
or
mov
dec
sete
lret
imul
add
or
movb
mov
mov
imul
ds
aas
pop
in
mov
inc
add
aad
lock
mov
mov
iret
push
or
iret
mov
add
sbb
jb
jb
ljmp
orl
push
lret
mov
jne
mov
mov
push
lock
mov
out
nop
jmp
dec
jecxz
bound
mov
loope
push
mul
add
sub
mov
or
test
into
or
pop
dec
out
scas
loop
and
fs
sti
xchg
xor
in
ss
sarb
and
shlb
mov
pop
adc
mov
xchg
push
mov
lods
test
cmp
insb
lock
sub
mov
pop
push
cmp
fidivrs
adc
clc
xor
push
call
outsb
mov
psubsw
lock
sbb
xor
xor
mov
pop
inc
stos
loopew
std
sbb
mov
mov
fistpll
cmc
jno
sbb
scas
out
mov
or
mov
into
xor
arpl
dec
js
hlt
push
call
dec
mov
cmpl
cli
jl
inc
xchg
fisubl
mov
sub
pand
pusha
fwait
stos
repz
fnstsw
dec
lods
jp
xor
ret
ja
icebp
ret
movsl
cmp
test
jns
scas
jle
xor
sub
add
scas
andl
cmp
inc
dec
test
ds
popf
or
mov
mov
push
inc
enter
daa
mov
in
pop
outsl
xchg
icebp
ljmp
sbb
adc
fdivrl
fldenv
outsl
dec
mov
jns
pushw
sub
leave
inc
pop
daa
in
ss
in
sti
outsb
mov
ret
iret
dec
cltd
xchg
int
add
push
pop
pop
jle
push
inc
dec
repz
or
fidivrl
mov
loope
cmp
add
mov
pop
cmpsl
out
jl
sbb
fcmovnu
mov
pop
xor
pop
cmp
lds
jne
adc
xor
es
fstps
sbb
lods
push
push
outsl
std
call
enter
lods
das
cmpsl
ret
dec
pushf
xchg
jnp
push
xor
sbb
sbbb
cmpsb
mov
or
xchg
lods
add
jnp
mov
stos
push
lock
sbb
xchg
outsl
dec
adc
xor
flds
jbe
cmp
into
sub
and
cmp
or
dec
cmp
inc
xchg
hlt
jmp
adc
cmp
addb
add
test
push
repnz
shrl
add
cmp
sbb
jge
xchg
in
flds
cli
pop
push
loope
push
out
icebp
mov
sub
out
adc
adc
and
pop
popf
cltd
shld
into
mov
clc
jnp
fmull
jp
cli
addr16
inc
dec
mov
stos
mov
ret
lret
cmp
shll
mov
jl
and
push
add
mov
or
outsl
cmpsb
movsb
flds
das
repnz
cmpsl
push
outsl
push
ss
out
sti
mov
insb
dec
pushf
cmp
cmp
mov
cmpsl
es
stos
out
in
mov
push
sbb
loopne
f2xm1
adc
add
cmp
shrl
adc
xchg
out
mov
sub
ds
add
xor
js
cmpsl
cmp
jmp
push
dec
fildl
xorl
add
movsl
xchg
mov
push
cmp
xlat
mov
add
jge
lret
lods
sub
jbe
stos
xor
sbb
into
pop
or
mov
stos
and
mov
mov
mov
mov
pop
scas
jecxz
or
mov
jb
lret
mov
cmp
cmc
jne
pop
and
ljmp
aaa
scas
outsb
sub
xchg
sub
cmp
pusha
fmull
aad
cli
stos
dec
inc
adc
int3
dec
adc
jg
cmc
shrl
lock
rcr
add
jg
pop
mov
xchg
jg
mov
je
pop
xor
mov
cmp
sbb
inc
mov
in
pusha
push
shll
xor
das
push
nop
sbb
xchg
inc
cmp
mov
ficompl
sub
jns
cmc
jmp
cld
inc
push
aaa
jle
frstor
nop
cmpsl
mov
ds
push
xor
stos
insl
ret
fs
cs
fists
xlat
in
sub
and
aas
gs
or
out
adc
xor
cld
adc
inc
cmpsl
push
das
inc
popa
cmp
adc
jmp
cmp
xchg
sbb
inc
pushf
es
sbbl
movsl
int3
out
out
xchg
cmp
mov
ds
jae
cmp
rcrl
aad
pusha
cmc
pop
popa
es
cmp
add
xor
call
dec
into
dec
insl
sbb
sbbb
scas
test
fisttpl
xor
sub
mov
cwtd
int
popf
mov
loop
shrl
mov
nop
add
push
or
sbb
movsb
jp
adc
pop
ret
loopne
pop
das
ds
int3
cmp
mov
dec
pushf
sub
or
jmp
cmpb
scas
jl
push
adc
mov
rcll
inc
jbe
sub
cmp
nop
pop
sbb
adc
xor
push
mov
hlt
loop
daa
jg
mov
jne
adc
push
jne
ja
fs
sti
test
aam
sbb
pop
mov
mov
stc
stc
mov
mov
lret
pusha
ljmp
lods
pusha
lds
hlt
fdivrs
subb
dec
lcall
sub
das
repnz
cmc
repz
aam
mov
outsb
jl
xchg
sbb
sub
jae
cltd
mov
iret
nop
inc
fidivrs
lahf
repnz
jp
scas
jbe
pop
mov
mov
mov
ret
incl
mov
cltd
mov
popf
fsub
mov
sti
js
movsb
adc
subl
push
repnz
orb
out
mov
push
xchg
sbb
fs
push
xchg
push
inc
and
stc
int3
hlt
inc
pop
jae
fistl
test
std
ss
push
push
aad
cmp
int
adc
pop
dec
mov
pop
int
daa
sbb
clc
mov
nop
fbstp
sbb
jbe
hlt
shl
xor
lods
jnp
xchg
out
mov
inc
mov
call
shr
call
add
popf
subb
add
jg
sti
dec
push
int
jg
lahf
pop
loop
cmp
aaa
sbb
fwait
add
fidivrl
lock
sub
push
aaa
in
and
aas
cmp
cwtl
aam
nop
bnd
sbb
xor
mov
test
out
mov
shlb
cwtl
pop
xchg
mov
ffreep
rcll
cmp
nopl
lods
iret
push
xchg
fiaddl
aas
mov
cmc
leave
mov
xchg
stos
out
sbb
adc
cltd
xchg
jge
sub
outsl
test
inc
out
nop
cmp
pop
and
enter
mov
mov
jp
mov
jae
mov
lock
ret
nop
mov
add
movb
insl
cmp
pop
sti
aaa
pop
call
mov
sub
adc
xchg
test
stc
jecxz
cli
ret
push
xchg
or
inc
push
lds
shlb
sub
or
jl
push
gs
lock
bound
xor
and
ficoml
jne
and
pop
lea
shll
mov
or
or
scas
pop
sub
pop
outsb
pop
aaa
cmp
pop
fldt
ret
jmp
pop
push
jo
js
aam
jns
clc
xor
add
shll
push
scas
test
jge
and
sbb
and
cwtl
add
pop
lcall
xor
inc
mov
shrb
enter
int3
adc
push
pop
cmc
sbb
sbb
es
repnz
jne
inc
int3
int
imul
aad
xor
add
pop
loop
pusha
insb
inc
in
jno
cli
or
mov
jb
mov
inc
push
loope
imul
out
mov
sbb
or
nop
mov
out
cwtl
mov
sub
mov
push
jg
rorb
inc
jecxz
mov
dec
xor
pop
aad
pop
pop
test
ja
cmp
cmc
xlat
adc
cmc
sub
mov
mov
ds
cltd
sbb
xor
iret
ret
cmpsl
in
into
mov
sbb
and
adc
rclb
inc
std
ficompl
mov
mov
pop
clc
ret
sahf
test
add
ret
and
mov
lcall
mov
ss
jmp
aam
sub
loope
stos
stos
xchg
mov
pop
fcompl
pop
inc
je
adc
mov
in
sub
xor
jno
test
inc
push
pop
push
push
pop
idivb
sahf
jno
pusha
test
cmp
sub
pop
sarl
int3
jo
mov
loop
shl
inc
mov
mov
lret
dec
mov
push
dec
aas
and
lods
xor
inc
movsb
clc
pop
int
mov
rcl
push
jl
call
jge
cmpsb
adc
and
mov
sbb
es
xor
cli
mov
add
adc
jl
int3
loope
pop
and
sbb
repz
scas
cs
or
pop
pop
loope
push
es
pop
mov
jo
xchg
push
sbb
inc
jl
ja
repnz
sub
cld
cld
jo
cwtl
add
daa
push
pavgb
pop
nop
test
push
fwait
cmp
and
add
imul
pop
js
popf
mov
lret
loop
and
in
jne
fucomp
mov
inc
mov
push
mov
push
mov
push
sti
mov
pop
adc
fisttps
add
jbe
xchg
in
fwait
pusha
outsb
push
add
push
pop
sub
fs
jbe
mov
adc
rcr
leave
lds
sbb
ja
fisubrl
inc
jns
es
sbbb
sbb
push
popa
scas
repnz
frstor
jp
inc
sbb
subb
scas
add
out
icebp
pop
cmpsb
pop
jmp
ror
inc
mov
sub
rcrl
push
inc
sub
divb
sbb
sbb
lret
fdivl
inc
mov
xor
cmp
call
mov
shr
sub
in
mov
push
rcl
aad
xchg
cmpsl
mov
in
ljmp
cwtl
jl
push
daa
mov
jmp
or
pop
push
fcoml
sub
cli
arpl
mov
in
jecxz
jno
lret
loopne
sub
out
addr16
negb
pop
sub
ja
inc
jo
addr16
and
adc
in
or
lock
xchg
mov
pop
sub
daa
mov
adc
push
and
mov
lret
imulb
push
fmuls
pusha
jo
and
out
loopne
dec
testl
sahf
adc
mov
lea
mov
xchg
pop
pop
fcoms
mov
xchg
jae
cmp
xor
dec
add
mov
jae
dec
cmp
or
push
inc
fwait
out
scas
aas
jge
lret
push
pop
inc
cmpsb
add
pop
pop
push
inc
cmpl
inc
jecxz
dec
inc
mov
sbb
fildll
jno
add
cmpsb
jb
lret
scas
cmp
scas
sti
std
aaa
mov
xchg
icebp
orl
pop
pop
xlat
or
jl
push
hlt
pop
movsb
jae
gs
xorl
cltd
outsl
xor
into
mov
mov
int
pop
push
push
jne
das
jo
lods
mov
dec
out
sbb
mov
mov
mov
mov
fdivrl
adc
dec
mov
testl
in
cmp
scas
mov
fs
mov
aas
mov
stc
nop
cmp
dec
inc
cmp
fcomps
xchg
mov
and
xor
jns
sbb
stos
lods
sbb
out
into
jmp
and
sbb
pop
leave
push
fdivrp
fs
mov
es
aas
js
pop
jne
pusha
fadds
jae
jo
popa
sub
dec
cmpsl
mov
inc
in
negl
pop
and
test
and
sub
shll
mov
adc
das
jbe
repnz
insl
mov
or
inc
pop
xchg
notb
xor
shll
mov
std
sbb
pop
in
pushf
les
sub
adc
popa
pusha
or
mov
inc
xchg
leave
aaa
fwait
aaa
aam
cmc
pop
push
adc
sbb
mov
inc
jg
push
mov
mov
outsb
sub
inc
shrl
adc
loopne
das
mov
iret
inc
xchg
or
loop
add
add
xchg
fcoms
orb
lock
sub
shll
push
addr16
int3
je
mov
outsl
cli
jg
fstpl
iret
sbb
pop
pop
arpl
fmul
add
inc
sub
ret
cwtl
and
inc
sbb
cmp
sbb
mov
lret
sbb
sub
je
mov
jg
push
mov
cmp
or
jnp
xchg
add
sbb
out
inc
xchg
out
loop
xor
ret
sbb
and
imul
popa
cmpsl
leave
movsl
cwtl
outsl
loope
loopne
mov
test
divb
dec
inc
mov
mov
cmpsl
cmp
aad
in
mov
mov
push
adcl
dec
daa
cmp
xchg
sbbl
add
scas
push
fdivl
cmp
jge
dec
cmpsb
mov
add
mov
in
mov
add
push
insb
movl
repnz
jne
popf
jne
mov
bound
das
cmc
jmp
jno
xor
add
xorb
sub
sar
and
mov
sbbl
xchg
cli
es
dec
mov
test
flds
xor
cmp
push
adcb
fwait
in
testl
mov
dec
int
mov
dec
addr16
sarl
cli
dec
into
cmp
in
xor
fwait
scas
scas
pop
in
cmpsl
xor
orl
movsl
xor
lcall
adcb
inc
xchg
dec
or
pusha
scas
adc
in
inc
pop
outsl
out
not
pop
hlt
cmp
mov
add
mov
jl
xor
idivl
aad
imul
lahf
dec
cli
adc
push
jnp
gs
inc
dec
mov
xchg
or
mov
pop
shlb
leave
xchg
lock
mov
repz
add
call
jl
cmpl
shlb
mov
enter
fmull
rcrl
or
addr16
outsb
push
cmp
push
cmp
int
out
sub
mov
jp
ds
mov
add
push
sub
imul
mov
leave
sub
das
test
sub
addb
nop
mov
inc
jns
dec
inc
mov
push
adc
in
xorl
inc
std
stos
insb
dec
cmc
sbb
in
aam
lods
fcoms
mov
lret
xchg
pop
leave
push
jae
xor
clc
nop
jne
lret
and
ret
in
inc
pop
rolb
mov
jno
in
mov
add
aad
loope
dec
movntps
xchg
shll
mov
mov
add
test
jle
jbe
or
add
lret
sub
rcl
pop
mov
lret
aam
xor
sbb
add
lods
into
aad
mov
adc
insl
movsl
mov
push
pop
cmp
jo
xlat
testb
and
jo
pop
inc
movsb
sbb
push
push
rorl
mov
jbe
or
sub
js
out
lret
ret
lret
jmp
xchg
movsb
inc
fcmovnu
loope
adc
add
cmc
and
imul
jae
jns
notb
lea
adcb
or
dec
mov
popf
mov
mov
add
inc
test
cmp
rorb
loopne
imul
dec
lock
push
pop
in
leave
add
pusha
icebp
pusha
aaa
lock
mov
jg
or
leave
repnz
stos
nop
fwait
aas
pop
mov
std
or
cmpsl
push
rclb
push
add
lods
jo
fdivr
cmpsb
inc
push
dec
mov
adc
xchg
pop
stos
jbe
movsl
hlt
and
sti
jl
imul
fs
mov
pop
scas
call
pop
dec
lcall
inc
dec
sub
push
fidivs
loopne
push
xlat
jae
jle
mov
inc
add
stos
addr16
cli
lds
jle
add
dec
jno
xlat
pusha
pop
cmp
and
repz
pop
fcomps
mov
movsl
sbb
sbb
xchg
xorb
or
daa
sahf
mov
mov
and
cli
adc
mov
add
pop
jb
int3
jg
into
mov
cmp
add
mov
ret
pusha
jp
mov
enter
ja
dec
cltd
popf
ds
jg
repnz
ret
push
lods
imul
loope
push
insb
jne
cmpb
sbb
cld
call
pop
inc
test
ret
xor
inc
cmp
sub
or
jge
in
sub
loopne
arpl
push
jae
jno
mov
gs
sub
xchg
and
in
loopne
xchg
push
dec
dec
mov
or
adc
fwait
aam
cmp
outsb
xlat
sub
cli
mov
into
in
int
inc
push
addb
add
mov
leave
aad
inc
addr16
jle
cmp
jecxz
mov
cmp
xchg
or
sbb
push
pop
out
mov
cltd
mov
xchg
jo
lods
out
push
inc
add
pop
add
push
pop
enter
jg
arpl
pushf
pop
push
incl
je
ret
sbb
in
jl
push
cmp
adc
xor
cmp
inc
xor
jmp
inc
xchg
movswl
pop
faddl
and
pusha
insl
sub
lahf
jge
loopne
pop
xchg
sub
mov
adc
and
jge
movsb
pop
fadd
vmwrite
mov
shll
loop
les
and
loop
std
sbb
pop
adc
mov
outsl
mov
mov
inc
jmp
cmp
xchg
and
pop
dec
push
testb
cmp
jmp
and
aaa
outsl
lcall
cld
mov
lods
fucomi
push
cmpsl
mov
daa
mov
sarb
outsb
or
and
cmp
fists
xor
xor
sahf
push
in
and
faddp
cmpsl
lods
fsts
adc
push
xor
jmp
insb
xchg
jnp
es
test
icebp
and
adc
out
xchg
inc
int3
sahf
fs
fs
sbbb
dec
pop
jge
je
adc
out
popf
imull
andb
xchg
popa
popf
sub
ds
add
push
sub
and
call
mov
mov
shlb
aaa
jle
xchg
mov
xchg
push
dec
sahf
sbb
daa
es
push
cmp
sbb
hlt
pusha
decb
lds
lcall
pop
rcr
ljmp
mov
loop
outsl
lahf
negb
repz
insl
ljmp
mov
in
loop
add
pop
stos
aad
jmp
dec
jle
ret
stc
inc
outsl
xor
inc
or
out
arpl
dec
imul
loopne
pop
and
aas
repnz
sbb
ljmp
jno
sti
cmp
and
mov
mov
xor
lahf
data16
pop
fdivs
adc
dec
and
dec
aas
jbe
cmp
inc
add
insl
enter
and
sbb
pop
or
sahf
jne
and
stos
pop
lock
add
xor
or
sub
ret
in
sbb
xchg
inc
xor
push
fwait
mov
arpl
xor
adc
jge
fsubrs
mov
addb
sahf
push
sbb
lret
outsl
cmovb
jae
movsb
hlt
push
push
ds
and
jg
add
in
ffree
rep
scas
adc
adc
orl
aaa
xor
ret
out
lods
fucom
inc
mov
iret
test
mov
pop
mov
and
repnz
daa
xchg
mov
push
test
repz
mov
dec
aam
push
hlt
adc
dec
sbb
out
mov
cmp
fiaddl
pushf
add
fsubl
jg
inc
inc
lock
xor
push
call
imul
pop
out
adc
shll
jmp
loope
cmpsb
outsb
mov
or
pop
mov
imul
jle
test
and
nop
in
cmp
xor
pop
call
sub
pop
sub
test
stc
cmp
cmpsl
push
ja
push
jae
push
test
lds
pop
mov
xchg
imul
cwtl
pop
add
and
jbe
pop
bound
popf
inc
iret
mov
hlt
sub
jns
cmp
xor
cmp
mov
jne
adc
loope
lahf
jns
pop
mov
ret
insl
or
mov
mov
sub
outsb
pushf
push
ja
sti
lods
scas
pop
push
fs
loope
outsl
push
jbe
cmp
and
xchg
mov
gs
cwtl
xchg
mov
sbb
cmp
imul
out
nop
mov
jns
or
xchg
ficomps
outsb
clc
shl
test
sbb
pop
or
scas
nop
cmp
xchg
scas
mov
and
sbb
lock
les
int
movsl
cmp
sbb
sbb
cmpsl
jge
mov
adc
in
nop
push
cmp
arpl
jbe
adc
pop
fldl
push
or
mov
test
int3
fistpl
test
sub
lods
repnz
bound
les
out
or
inc
imul
fcmovnbe
pop
jnp
pusha
sub
mov
pop
imul
shll
mov
add
sti
or
xor
adc
cmp
fidivs
aas
sub
punpckhdq
std
std
mov
fstl
inc
pusha
ret
sarl
pop
cs
testb
xchg
fucom
or
xor
cmpsl
fists
xchg
jbe
lea
out
popl
je
xor
jecxz
popa
push
and
pop
movsl
rcl
in
or
sbb
pop
adc
call
push
sbb
add
sbbl
push
in
cwtl
outsb
mov
jnp
dec
cmp
mov
ljmp
pop
les
sbb
js
or
insb
out
ret
dec
jbe
jnp
push
jge
dec
inc
sub
lods
xchg
push
push
jge
popf
lods
pushf
outsl
paddusw
push
shlb
pusha
add
pop
loopne
cmp
xor
xchg
fmull
scas
popf
and
repnz
cmp
pusha
jmp
pop
enter
lock
mov
xor
outsb
adc
dec
xor
into
fsubrs
inc
imul
mov
or
in
nop
lods
movsb
gs
add
sub
pop
mov
insb
out
scas
xchg
test
jb
add
arpl
movsb
or
or
dec
ja
cwtl
call
mov
xchg
xor
inc
cmp
cmp
mov
nop
mov
loop
out
mov
add
jo
lahf
xchg
mov
cmp
sbb
sahf
push
repz
add
insb
pop
repnz
movsl
popf
mov
je
inc
push
or
pop
mov
pop
out
in
and
loope
rorb
outsb
mov
jecxz
fucom
mov
stos
adc
pop
mov
fists
sub
adc
mov
mov
dec
dec
nop
xchg
pop
es
xchg
popf
push
sbb
xchg
adc
lahf
xor
xchg
cmp
cmpsl
sub
jle
insb
andl
loopne
mov
dec
mull
aaa
jmp
push
daa
ljmp
movsb
data16
adc
mov
adc
repz
in
jne
dec
jno
shll
vcvtdq2ps
lock
ja
nop
cmpsl
rcr
fisubrs
jg
dec
dec
push
inc
iret
push
xor
dec
xchg
sub
push
mov
mov
inc
mov
mov
push
test
pusha
mov
sbb
icebp
pop
inc
jmp
jmp
mov
lcall
cmp
or
push
sub
add
and
stos
sbb
sahf
call
nop
mov
es
push
mov
je
rorl
sbb
sub
imul
stc
and
hlt
loop
les
mov
stc
je
dec
jnp
arpl
xor
enter
lcall
inc
adc
das
iret
mov
call
movl
addr16
cmp
and
les
push
inc
mov
lods
fstpl
ret
outsb
push
jne
fisttpl
push
xchg
aas
pushf
int3
mov
sub
mov
lea
pop
mov
lahf
and
popa
scas
xchg
pop
inc
das
in
adc
and
subb
add
or
in
or
cmp
imul
dec
or
ljmp
test
dec
sbbl
fadds
stos
pop
mov
sbb
adc
addr16
and
mov
lock
adc
mov
idivb
adc
adc
stos
movsb
mov
inc
cld
cmpsl
or
sbb
mov
add
movsl
sbb
mov
mov
sbb
push
orb
xor
and
mov
xor
dec
pushf
repnz
inc
ljmp
mov
lret
scas
lds
lret
or
fwait
scas
dec
mov
lds
pinsrw
sub
or
jmp
inc
push
mov
es
dec
push
lea
sbb
stos
pushf
xchg
shl
add
int
mov
cwtl
fildl
or
mov
inc
or
xor
fs
pop
divl
add
sbb
dec
pop
adc
inc
into
inc
rcrl
test
xor
movsl
popa
dec
ficompl
pop
xor
inc
es
jo
xchg
mov
pushl
pusha
shll
ss
add
mov
jbe
ret
call
fistpll
sar
in
insl
xchg
mov
lea
inc
lea
je
jl
inc
dec
sub
nop
mov
inc
add
xchg
int
mov
jb
ja
xorb
mov
mov
shrb
mov
add
repnz
sbb
or
gs
adc
fwait
push
out
sbb
jp
fwait
and
lcall
mov
cmp
or
pop
mov
mov
add
sar
call
cld
arpl
cmpsb
mov
xchg
out
or
mov
add
fiaddl
inc
out
fcoms
cld
jo
bound
xlat
adc
inc
js
and
mov
sub
pop
sub
insb
mov
cmp
les
out
daa
out
mov
lock
pop
dec
dec
cmc
push
invd
ficompl
test
dec
mov
push
jecxz
or
pop
out
lret
cmc
out
xor
fsubrs
jg
and
mov
adc
xchg
sub
iret
add
rcrl
jge
orl
adc
fsts
dec
cmp
push
aam
inc
jge
scas
cmp
gs
adc
mov
push
test
andb
xchg
clc
lcall
testl
pop
cmpsb
sbb
ss
jecxz
subl
jns
cwtl
push
std
clc
dec
lret
sti
dec
das
gs
push
mov
pop
mov
flds
decb
push
sub
add
aas
inc
pop
mov
loope
add
mov
sti
mov
mov
mov
sbbb
xchg
lret
adc
pop
jne
and
fbstp
and
mov
insb
jecxz
jl
cmpsb
sti
jae
sub
lock
mov
mov
loope
or
sub
dec
cmc
test
ffree
iret
push
fwait
mov
rcrl
jns
sahf
add
cmpsb
cmp
dec
xchg
inc
rorl
mov
pop
cmc
stos
mov
xchg
rol
dec
inc
xorb
mov
pop
stos
pop
daa
mov
mov
adc
divl
sahf
negl
bound
inc
jb
inc
sbb
jae
movsl
xchg
cmpsl
mov
jnp
pop
pushf
repz
sub
repz
jp
arpl
mov
scas
call
adc
les
mov
pop
mov
out
pusha
loope
ret
mov
repnz
ljmp
iret
mov
into
push
mov
pop
std
mov
push
pusha
test
hlt
scas
repz
fadd
xchg
sbb
clc
jle
or
hlt
push
mulb
and
and
xchg
clc
fs
mov
or
aas
sbb
sub
mov
scas
sbb
sbb
and
add
push
push
data16
clc
mov
cs
and
dec
in
xor
jge
call
jg
and
inc
cwtl
sbb
out
adc
arpl
mov
inc
mov
push
sahf
push
rorb
aaa
jno
in
xlat
iret
sub
xchg
sub
sti
mov
es
fdivr
in
adc
and
int3
int
test
mov
mov
mov
fdivrs
jp
pop
push
mov
inc
popa
gs
ret
pop
mov
ret
out
adc
jg
fisubs
pop
mov
stos
adc
out
jns
mov
xchg
xchg
add
orb
icebp
cmc
sub
dec
pop
test
pop
push
sub
stos
push
add
clc
ret
repnz
iret
popa
shlb
inc
jp
sub
repnz
fsubp
das
cmp
xor
popf
mov
and
lods
sbb
aaa
xchg
dec
mov
imul
push
ljmp
shlb
ret
or
outsl
loope
pop
in
data16
push
insb
jp
mov
pop
cld
jnp
aad
cmc
fcmovne
ficompl
jmp
inc
dec
adc
insb
pop
lret
mov
inc
inc
pop
xchg
push
arpl
push
inc
mov
enter
lds
stos
mov
andb
push
cmp
aaa
stos
push
and
pop
inc
std
adc
sub
ss
int3
outsb
das
xor
push
xchg
int
pop
and
push
clc
ret
mov
iret
adc
inc
stos
daa
iret
nop
push
lods
xchg
lcall
jmp
lret
jg
adcl
rorb
xor
mov
cwtl
xor
or
adc
push
mov
push
add
imul
rorl
jl
mov
jecxz
sti
jge
aam
test
or
sbb
or
call
dec
rep
sarl
out
hlt
rolb
mov
loopne
or
adc
data16
cli
cmpsl
sti
xor
xchg
sbb
stc
arpl
push
into
add
pusha
jle
shrb
and
lahf
xchg
cmp
adcl
mov
sub
adc
pop
pop
dec
mov
xor
push
ss
imul
cmp
jae
push
sahf
pusha
addr16
bound
out
outsl
dec
je
lds
inc
jmp
insb
pop
ss
jnp
ret
lods
out
fbstp
lret
rcr
lods
loop
dec
idivb
ljmp
mov
out
adc
sti
sahf
imull
repz
iret
je
jmp
dec
pop
inc
xchg
xchg
mov
pusha
cmpxchg
out
cmpsb
mov
dec
mov
pusha
and
mov
int3
xchg
mov
inc
sub
mov
or
addr16
test
push
jge
add
movsl
jbe
or
sbb
jb
sbb
sub
das
fs
cs
int3
mov
shl
sub
or
mov
xchg
stc
in
xor
fidivrs
add
cmpsl
cli
jmp
mov
mov
sub
mov
pushf
loope
clc
loope
jp
adc
aad
mov
lea
jge
mov
and
dec
data16
and
sub
loop
or
inc
jmp
int
pop
jge
pusha
lret
inc
imul
insb
icebp
insb
outsl
cmp
in
nop
aas
jnp
cmc
inc
push
sub
sahf
or
push
in
ret
pop
fs
lock
mov
cmp
repnz
mov
add
stc
mov
mull
and
ljmp
aam
jp
popf
xor
mov
sub
dec
inc
pop
inc
mov
jle
ds
mov
lcall
push
mov
je,pn
ficoml
scas
inc
rclb
cmpsl
or
add
jbe
inc
xchg
pushf
lahf
outsb
or
pop
xchg
xchg
add
ss
repz
mov
pop
mov
add
dec
mov
je
scas
adc
nop
push
mov
sbbl
jl
sbb
mov
iret
lods
push
data16
mov
jl
inc
js
fcmovbe
into
idiv
movsb
jne
ret
sahf
ret
repnz
xchg
mov
push
mov
jnp
outsl
fwait
jo
and
lods
sub
addr16
sbb
push
inc
mov
sub
sub
scas
add
push
arpl
or
dec
dec
addr16
ficoms
jge
addl
aaa
xlat
fcomps
pop
jns
fadds
mov
dec
mov
jno
pop
xor
pusha
fcmovb
push
add
in
jmp
inc
push
lahf
and
xor
inc
inc
mov
xor
fsubrs
jno
xor
dec
rorl
inc
pop
int3
loopne
and
inc
mov
mov
gs
sbb
mov
mov
inc
nop
pop
add
test
ja
push
or
jns
outsl
push
pusha
psubusb
arpl
jae
xchg
into
mov
jno
jae
or
add
or
shrl
pop
and
jbe
int
sub
pop
shlb
cmp
pop
add
icebp
mov
in
cmovno
les
mov
fstpl
arpl
sti
lea
imul
cmp
mov
nop
scas
sbb
sbb
xor
inc
aad
sarl
test
jne
xchg
mov
insl
std
cmp
std
xchg
cmp
fmulp
dec
inc
push
adc
pop
mov
lods
cmp
mov
movsb
in
cmp
ret
pop
pop
jbe,pt
arpl
ret
xlat
mov
xchg
nop
pop
or
adc
sub
add
in
icebp
movb
jb
xchg
shl
xchg
xchg
in
sub
add
push
mov
and
pop
out
gs
dec
lret
out
sbb
das
stos
xrelease
in
imul
mov
cmpsl
faddl
das
rcl
inc
cld
inc
pop
cmp
imul
adc
lahf
dec
cwtl
ljmp
mov
xchg
mov
sbb
out
pushf
cmc
push
aad
jecxz
mull
fisubrs
sbb
ds
fsubr
jbe
test
test
ljmp
mov
sub
jo
jo
cwtl
daa
xor
add
scas
mov
jg
or
adc
lods
mov
arpl
ficoml
fnsave
mov
mov
lods
mov
push
xchg
lods
xor
pop
adc
pop
jmp
rclb
xor
outsl
test
movb
sub
test
scas
sub
xchg
popf
je
fidivs
add
add
jno
add
dec
mov
aam
mov
cmp
and
bound
cli
xlat
push
leave
int
add
test
mov
stos
xor
push
jecxz
sub
xchg
push
mov
push
sub
mov
ret
in
jbe
ds
and
dec
add
mov
cmp
mov
sub
fnstsw
lahf
dec
dec
push
mov
cmp
sbb
mov
xor
cmp
jle
dec
mulb
jmp
call
xchg
pop
sbb
jecxz
mov
dec
pop
pop
mov
lods
into
gs
pop
push
out
aad
push
loope
mov
pop
jnp
pop
adc
pop
cli
xchg
and
sbb
in
cmp
mov
fildl
push
and
cli
enter
pop
add
pop
cmpsl
pop
test
and
mov
xor
aad
enter
movsl
mov
jmp
leave
fldl
mov
mov
fwait
and
fucomi
mov
mov
mov
mov
stos
inc
pushw
sub
mov
cld
push
push
scas
or
sbb
sub
cmpsb
jbe
dec
enter
inc
sub
testl
jmp
mov
aas
adc
aad
add
cmp
lcall
test
inc
inc
sub
jmp
into
mov
stos
lahf
push
shrl
pop
pop
daa
xlat
rcll
cmp
add
out
test
inc
mov
xor
fistl
sbb
jge
pushf
xlat
or
add
push
dec
mov
out
les
or
fidivs
filds
fs
iret
clc
shrl
lret
adc
inc
insb
dec
inc
cmp
sub
jae
sub
stc
sbb
jns
jg
jp
sub
cmpb
test
lret
das
cmp
loopne
push
mov
aaa
mov
pop
test
lahf
mov
push
jno
scas
push
add
cmpsl
pop
mov
sub
mov
mov
mov
and
lcall
int
test
dec
add
scas
inc
repz
mov
lods
std
add
ds
inc
sub
xor
or
dec
fnstsw
mov
test
ja
js
aaa
lods
rcl
fistps
inc
and
inc
and
scas
sbb
dec
jecxz
mov
arpl
imul
add
lods
adc
push
movsl
cmp
orl
sti
or
in
push
pop
jae
add
xchg
dec
inc
pop
pushf
dec
pop
iret
xor
xor
ret
lcall
test
xchg
adc
xor
shl
sbb
lods
aad
scas
jmp
inc
imul
insl
push
xchg
jns
ret
jge
into
ljmp
and
mov
lds
cmc
jne
xlat
mov
pop
jecxz
or
push
movsb
push
xchg
push
sti
push
pop
mov
mov
pop
push
or
jnp
imul
leave
cltd
mov
cmpsb
fadd
cmp
dec
mov
sarb
mov
test
pusha
loop
fdivrs
mov
les
cmp
shlb
imul
xor
pop
dec
jbe
xchg
mov
lock
jecxz
jne
pusha
sahf
adc
or
adc
push
testb
sar
adc
mov
outsl
adc
sub
push
clc
test
push
aaa
jmp
mov
test
pop
loopne
jnp
jo
js
test
mov
and
push
pop
loop
mov
outsl
in
out
bound
dec
lcall
add
fcmovb
adc
shll
into
mov
jmpw
into
in
ja
xchg
mov
fcmovnu
push
sbb
pop
test
mov
dec
dec
mov
dec
int3
fs
push
mov
dec
into
popf
xlat
mov
ret
cmp
inc
imul
xlat
jno
add
mov
dec
shll
ffreep
push
inc
scas
dec
mov
test
cmpsb
cmp
xchg
jnp
in
scas
rolb
mov
bound
adc
jp
in
dec
pop
or
int3
mov
jle
lret
xchg
fldenv
dec
sbb
fdivrl
xor
and
cmpsb
test
mov
cwtl
daa
pop
jno
out
stc
enter
lcall
decl
out
dec
push
insl
loop
xor
xchg
decl
mov
in
or
dec
mov
mov
xlat
out
mov
sbb
push
push
out
cmp
ret
fisttpll
or
sub
xchg
sbbl
jmp
cmpsb
dec
mov
mov
pusha
push
jae
xor
scas
sbb
arpl
ret
sub
push
pop
test
pop
push
jns
and
ja
fucomip
cmp
movsb
in
fisttps
jb
or
inc
dec
shlb
subb
in
mov
insb
lahf
pop
movsb
jmp
inc
mov
aad
popf
loopne
testb
insl
or
mov
fidivrs
out
sahf
loopne
inc
mov
push
and
jmp
lods
sub
lods
jne
inc
insb
pop
push
popa
les
out
xchg
cmp
cli
jmp
in
dec
push
test
push
push
cs
xor
outsl
test
stc
sub
xchg
nop
adc
xlat
ret
rcrb
pop
adc
jb
into
or
push
xor
sub
adc
pop
cwtl
and
xor
adc
mov
arpl
into
push
pop
push
mov
cwtl
mov
or
jp
cmp
cmp
fbstp
aaa
insb
lahf
dec
dec
loop
jb
rol
mov
add
pushf
ja
sbb
icebp
fiaddl
mov
dec
push
cmp
dec
dec
push
sti
aas
lahf
sub
adc
cmpsb
or
mov
xchg
fistpll
dec
gs
pushf
pop
in
test
ss
cmp
adc
shll
cli
fisubs
cmovp
lahf
push
lahf
add
sub
mov
mov
inc
ja
sub
and
mov
frstor
out
ret
dec
add
or
adc
es
jl
jne
jbe
add
adc
rorb
nop/reserved
jle
aam
and
sbb
lods
roll
gs
ret
sub
pop
dec
cmp
cmp
aam
pop
dec
jns
fcoms
push
jmp
cmp
xor
push
hlt
xor
lret
les
xor
ja
add
out
js
push
jge
adc
inc
cs
pop
mov
jne
lret
adc
pop
sub
loope
xchg
das
out
lea
data16
jbe
xchg
push
inc
nop
sub
mov
cmc
xor
push
scas
call
out
cltd
add
mov
mov
adc
xchg
ficompl
je
and
pop
ret
sbb
sbb
sub
cmp
jp
stos
mov
xchg
popa
mov
xlat
pop
mov
add
repz
and
lret
sub
xor
pop
xchg
cmp
jnp
inc
div
inc
outsb
and
jg
jae
adc
into
out
xor
dec
sub
push
push
pop
jmp
mov
adc
and
dec
dec
push
lock
sub
dec
repnz
jo
lods
cmpsl
cltd
shrb
jno
push
and
scas
mov
movb
pop
aam
dec
ja
out
jno
popaw
jg
sub
push
jno
test
jle
xchg
inc
jbe
jmp
out
js
subb
out
mov
out
jne
aad
in
xchg
ljmp
in
pop
cmp
sub
fwait
rclb
movsl
xor
fbld
rcl
sbb
dec
push
add
stc
xor
std
xor
aas
cwtl
xor
psadbw
sub
popa
outsl
dec
lock
mov
das
pop
lret
jp
js
pop
insb
push
push
mov
movsl
jle
mov
push
fistpl
aas
sahf
pop
xchg
sbb
push
dec
lds
adcl
add
sbb
fnstenv
fwait
xchg
in
fwait
inc
je
push
jle
inc
sbb
cmp
frstor
lock
push
shlb
hlt
daa
lret
std
mov
lods
add
mov
mov
cmp
pop
shl
test
inc
pop
daa
and
jl
push
fdiv
ds
fmuls
push
inc
mov
scas
xchg
arpl
clc
mov
xchg
inc
frstor
loopne
pop
sbb
mov
pop
xor
or
xchg
dec
adc
sbb
or
testb
fwait
imull
sbb
divl
adc
gs
jl
out
out
and
xchg
xor
dec
cs
pop
stos
fcmovnb
or
loop
push
adc
pop
mov
push
sbb
test
mov
jecxz
adc
leave
sub
nop
addr16
inc
popa
xchg
sub
cld
xchg
xor
in
call
pop
adc
dec
lret
addr16
ja
adc
cmp
test
das
adc
mov
jecxz
das
cmp
push
test
or
jae
std
mov
jecxz
mov
inc
aad
push
sub
data16
cmpl
test
inc
jmp
ds
pop
and
push
or
add
jl
imul
push
xlat
jno
sub
lods
cmp
icebp
mov
iret
lahf
xor
and
and
and
jno
add
mov
lods
xor
and
mov
mov
mov
xor
xorb
jnp
idivl
adc
bound
xchg
jne
fsts
mov
xor
les
fistpll
sub
or
mov
jmp
call
movsb
sbb
enter
push
out
jmp
cmp
sub
inc
lods
jl
popa
nop
or
cs
mov
lock
dec
in
loop
mov
pop
mov
hlt
pop
fdivl
jbe
inc
notb
jmp
nop
cmp
out
or
cmp
cmp
pop
cmp
mov
sbb
pop
xor
jmp
pop
cmp
mov
sti
nop
pop
das
icebp
dec
push
in
shlb
inc
cmp
ds
fs
jno
lahf
or
mov
iret
fldt
jnp
dec
fsubl
mov
or
and
sub
roll
std
out
add
inc
mov
aas
test
repz
das
loopne
sbb
aad
jl
into
or
negl
lock
xchg
pop
cmp
push
cmp
adc
sarl
or
pop
rol
mov
scas
sub
mov
jnp
inc
cmp
subb
add
inc
aad
cld
and
push
pusha
movsl
jb
negl
rep
push
xchg
shr
xchg
fsubrp
pop
je
jg
dec
std
mov
or
fmuls
jns
xorl
test
ljmp
xchg
cmp
outsl
xor
mulb
icebp
cmp
call
or
icebp
sub
and
ret
call
xor
push
jl
sub
lea
pusha
sub
mov
add
sbb
jl
lahf
icebp
mov
add
add
pop
inc
mov
adc
sbb
mov
xor
outsb
pop
jns
mov
add
add
sbb
mov
cmpsl
movaps
repnz
add
pushf
inc
adc
shll
fwait
ja
mov
and
icebp
pop
jae
xlat
dec
xchg
add
inc
stos
adc
xchg
icebp
in
pop
std
pop
fwait
clc
add
pusha
pop
mov
xchg
mov
ds
jae
sub
lods
jg
ja
iret
rorl
dec
cwtl
into
mov
clc
pop
sbb
cmpsb
pop
mov
pop
add
jb
rorl
shll
dec
stos
add
add
dec
fiadds
jno
inc
test
mov
outsl
js
push
lahf
in
data16
divb
push
scas
inc
adc
adc
inc
push
mov
mov
out
ret
aas
push
xor
call
xlat
outsb
shlb
or
push
andl
sbb
bound
push
iret
clc
jle
je
loope
and
fiaddl
jbe
cmp
xor
jo
push
and
lret
jbe
rorb
stos
jmp
push
lret
hlt
fisttps
xchg
jg
out
arpl
mov
inc
jg
aad
mov
fisttpl
sbb
push
sub
and
xor
lcall
bsr
sarb
pop
out
jg
stc
jge
arpl
xchg
xchg
jbe
enter
fstps
and
sbb
inc
or
outsl
daa
div
rcll
jo
xchg
sbbb
push
nop
xchg
aas
out
lds
jge
psubb
xor
jne
mov
cmpsb
and
shll
mov
lods
pusha
mov
xor
dec
mov
pushf
xor
pushl
jbe
mov
dec
jb
xor
es
dec
cmpsl
loop
cmp
sub
add
or
push
push
jp
sbb
mov
or
out
sbb
adc
pushf
or
mov
pop
call
push
out
jnp
pop
les
mov
jnp
lea
mov
push
int3
adc
and
mov
lret
scas
js
mov
cmp
into
push
cmpsl
and
aam
mov
dec
xorl
push
jns
test
cmp
add
out
repnz
push
xchg
add
mov
fistpll
mov
in
xchg
cltd
and
dec
insb
add
mov
adc
sahf
rcrb
mov
outsb
jge
fistps
lock
mov
mov
orb
xchg
stos
and
shlb
mov
xchg
xor
dec
sub
testb
out
lea
jp
mov
and
test
xchg
cs
pop
xchg
mov
or
dec
in
mov
dec
jp
xor
jmp
int3
mov
xchg
push
mov
iret
iret
mov
nop
push
push
les
sub
inc
lcall
push
cli
je
mov
xor
leave
push
xchg
adc
pop
dec
arpl
push
aas
jno
mov
mov
fdivrs
cmp
sbb
push
push
out
jle
leave
fistpl
adc
popa
mov
cmp
imul
sub
push
stos
notb
outsb
push
push
add
jb
push
int
jg
pop
ds
xchg
scas
jns
das
pop
push
pusha
xchg
inc
popf
call
jg
cmp
insb
pushf
push
cmp
xor
pop
adc
jae
mov
cltd
and
jmp
fmull
leave
lods
popf
pushf
jmp
js
adc
dec
mov
loopne
cmp
cmp
xor
nop
dec
int3
cld
sbb
xchg
push
sub
mov
mov
inc
aaa
les
js
out
andnps
mov
imul
cmp
and
jg
roll
xor
adc
cltd
jl
pop
cmp
mov
les
dec
xor
or
enter
dec
roll
jecxz
mov
repz
cmp
mov
pop
cmc
adc
mov
xor
dec
or
or
mov
sub
and
fisttpll
sbb
adc
mov
movntps
sbb
inc
jo
dec
xor
or
mov
pop
out
dec
das
xor
addr16
ret
gs
pop
sbb
cmpsb
movsl
mov
lock
test
mov
pop
cmp
hlt
cmp
mov
push
push
push
jns
fists
pop
out
mov
pop
orl
jle
shr
clc
jle
iret
or
mov
movb
aad
js
rcrb
push
adcb
and
fistpl
divb
sbb
aad
pop
out
mov
pushf
mov
es
pusha
or
fistps
daa
mov
or
shl
cltd
pop
sbb
xchg
dec
and
and
psllq
cli
ljmp
aaa
and
mov
and
mov
out
and
add
jle
gs
in
mov
add
imul
pop
sub
pusha
mov
or
test
add
pop
pop
outsb
mull
mov
fs
shll
and
rorb
stc
daa
lods
sub
in
dec
fldl
cvtdq2ps
ret
jg
lahf
inc
pushfw
addb
push
fidivl
or
icebp
loopne,pn
jno
cmp
loope
sub
repnz
les
adc
test
sbb
fst
lea
call
sbb
mov
push
loopne
das
adc
or
cmpsb
jg
jne
sbb
orb
push
xchg
xchg
push
bound
ds
push
pop
mov
mov
jbe
js
mov
jbe
les
and
fisttpl
sub
mov
nop
cmpsb
outsl
mov
xor
loop
insl
sub
jl
jg
mov
xor
xor
xchg
adc
xacquire
test
popa
dec
addr16
adc
mov
jg
ja
call
jp
dec
mov
cltd
aaa
adc
mov
js
in
pop
push
jo
adc
mov
pop
push
sbb
in
js
in
aas
sbb
test
int
sub
test
cmp
mov
aad
subb
xor
stos
dec
das
and
push
sti
ss
in
sarl
mov
push
push
das
gs
or
mov
lret
shll
out
or
jmp
dec
push
pop
nop
mov
ss
out
dec
ljmp
adc
mov
jp
push
sbb
and
out
and
sbb
insb
js
outsl
ret
dec
es
mov
enter
jo
jmp
cmpsl
mov
int
and
pop
push
lods
in
sub
lods
and
test
lahf
pop
dec
or
inc
clc
add
push
out
mov
add
mov
ficoml
jmp
or
or
jp
mov
out
xchg
adc
dec
jmp
stos
repnz
xchg
loopne
cmp
sbb
aaa
stos
cmc
inc
mov
hlt
xchg
addr16
jbe
push
mov
or
push
xor
pop
mov
cmp
jle
bound
inc
xchg
jb
loope
and
inc
sub
jns
test
cli
fidivs
cmpb
jle
aam
mov
out
pop
cmp
xchg
dec
cmp
mov
addl
dec
mov
in
loope
insl
dec
testl
mov
cld
push
jl
and
lock
pop
ss
cmp
sub
cwtl
imul
xlat
mov
inc
aas
pop
inc
insb
pop
pop
sarl
add
mov
xor
push
lds
insb
jle
fstpl
bound
iret
add
inc
bound
mov
and
adcl
xor
lret
shrb
jp
and
fsubrl
movsl
fistpll
sbb
loopne
daa
pop
in
mov
shrb
sbb
in
push
jae
add
dec
pusha
insl
sub
mov
dec
shl
in
scas
xor
scas
jmp
insl
sub
test
push
insb
iret
jae
mov
xchg
sarb
lcall
iret
jb
negb
out
push
push
addb
jae
inc
scas
dec
xchg
cs
dec
xor
inc
xadd
fistpll
inc
int3
xor
xchg
xor
test
lret
add
adc
xor
mov
imul
aas
test
vrcpss
jmp
xor
test
mov
pop
jne
push
loope
xchg
adc
shll
int
push
xchg
add
nop
sbb
int3
aam
shr
xchg
mov
xchg
fiadds
mov
fcmovnu
movsl
das
icebp
icebp
popa
sub
add
or
test
fldcw
adc
pop
je
cmpsb
shll
or
mov
and
inc
scas
mov
call
or
jg
add
push
fldl2e
inc
rep
and
sbb
out
fldt
repz
inc
jge
pop
out
ret
in
or
sub
cwtl
push
inc
mov
mov
daa
aas
movsl
dec
ds
jecxz
inc
adc
xchg
cltd
bound
fiaddl
insb
out
push
pop
addl
insl
push
add
sbb
dec
in
mov
lods
and
jae
ljmp
rcrl
and
icebp
sbb
test
or
movsl
ljmp
cli
div
inc
sub
bnd
popa
inc
repnz
int3
adc
mov
stos
sub
xchg
int
andb
outsl
add
xchg
insl
int
insl
sub
push
js
adc
mov
shlb
in
or
sbb
cmpsl
aas
sbb
lds
addl
fs
dec
cmp
or
mov
pop
push
js
insl
pop
push
and
in
into
xchg
inc
dec
add
stos
gs
repz
aad
pop
jle
sbb
mov
movsb
xchg
jne
and
lret
push
test
sub
lea
arpl
add
sbb
pop
enter
stos
test
fwait
outsl
lahf
xchg
out
mov
mov
ss
addb
pop
lahf
inc
fwait
xchg
xor
pop
lret
or
aam
and
jb
xor
movsb
nop
cld
shlb
cmp
dec
jle
insl
fwait
pusha
lods
ss
xor
cwtl
imul
inc
pop
in
pop
out
lock
sahf
adc
xchg
mov
fs
push
jp
dec
insb
insl
jmp
idivl
gs
int3
into
mov
sub
add
sub
pop
sti
lock
rcl
daa
cmp
xchg
cs
adc
negl
imulb
cmp
cmpsl
mov
loop
lods
dec
push
aas
scas
and
push
pop
add
dec
and
pop
hlt
je
push
mov
fsubl
je
jbe
jmp
sbb
ds
ds
lret
or
jnp
aam
dec
mov
pusha
jmp
pushf
adc
add
xor
xchg
jmp
or
out
or
fsubl
shll
dec
ret
jne
out
cmc
dec
fwait
scas
mov
xchg
mov
push
lahf
imul
call
or
and
add
ss
ss
mov
fnstenv
jmp
jmp
lcall
loope
mov
in
shlb
xor
outsl
pop
lock
lds
xorl
sarl
xor
fst
out
lcall
int3
rol
cwtl
loop
les
or
xchg
cmp
insl
movsb
adc
das
mov
pop
iret
addr16
aam
and
and
mov
pop
jge
lds
mov
jmp
push
mov
jmp
xchg
sub
sahf
jge
lret
cmpsl
out
test
mov
and
mov
mov
mov
inc
fsts
out
push
sub
cld
push
cmp
inc
test
movsl
push
inc
inc
add
js
stc
sub
sbb
dec
int3
ja
pusha
jnp
pop
dec
jnp
stc
mov
mov
sub
rcr
inc
adc
test
fs
inc
int
jmp
jge
in
push
lahf
jne
aas
std
xchg
sub
les
fnsave
pop
push
add
sub
popf
je
out
push
ljmp
aad
mov
add
mov
inc
mov
push
ret
jnp
inc
pop
xchg
mov
dec
aad
das
cld
or
fisubrs
out
loopne
es
jnp
cmp
dec
jle
and
lahf
decb
cltd
add
adc
jge
sbbb
xlat
pop
jns
enter
call
rcr
iret
pop
lret
xor
or
mov
clc
lcall
adc
push
pop
jne
les
imul
sbb
inc
test
mov
ror
push
jo
push
out
lock
jmp
mov
push
fisttps
pop
adc
clc
shrb
fs
je
push
in
jnp
test
and
je
pop
mov
outsb
fs
dec
int
xor
push
pop
jmp
jecxz
push
sbb
jge
arpl
and
insl
clc
shl
push
push
popf
sarb
aas
push
pusha
int
jg
test
lahf
and
cwtl
fldt
incb
ret
adc
ja
mov
dec
push
and
cmp
test
and
ret
jo
shl
daa
test
and
xchg
mov
imul
and
mov
cmp
push
icebp
add
pushf
xchg
push
lea
push
push
bound
adc
xchg
roll
ficoms
push
dec
repnz
and
mov
loop
cwtd
xor
add
inc
in
xor
mov
shrl
jno
jmp
movl
push
mov
imull
inc
lret
jns
jno
push
popf
mov
cmpb
dec
push
mov
push
xchg
cmp
mov
mov
adc
insb
xor
pop
pushf
push
cld
mov
pop
mov
mov
call
pop
cld
lds
xchg
out
jl
fwait
mov
lahf
inc
inc
xchg
cmp
mov
inc
cmpsb
push
stc
std
push
mov
add
ret
shl
out
jmp
push
test
subb
js
cmp
inc
mov
sbb
push
decl
mov
push
sbb
sbb
cmp
inc
sbb
adc
imul
xor
ss
jg
data16
and
aam
push
cmp
pop
in
mov
push
dec
sbb
repz
push
push
sbb
jecxz
pushf
mov
fwait
sub
out
in
jmp
xchg
fadds
pop
inc
dec
cmpsb
push
inc
mov
and
inc
js
pusha
push
cmpsb
xchg
push
cltd
int3
jnp
mov
nop
cmc
pop
shlb
shll
movsl
and
mov
mov
lret
out
bnd
lcall
jno
out
cs
xor
dec
popa
lret
push
xchg
jns
lods
cmpsl
sub
sbb
lcall
push
xor
in
ret
push
addl
xor
sub
xchg
loop
cmp
mov
cmc
cltd
mov
icebp
js
pop
ds
pop
or
insb
cli
mov
int
fsubs
outsl
movsl
subl
ss
test
inc
pusha
hlt
outsl
stos
add
out
pushf
mov
xor
leave
mov
jl
stos
sbb
mov
pop
in
jnp
ret
popf
dec
pop
aaa
je
push
jmp
ss
fldenv
mov
mov
mov
and
fadd
push
cwtl
mov
stc
daa
pusha
xchg
ds
or
cmp
mov
mov
pop
mov
test
fsubrs
lret
lea
mov
sbb
push
cli
dec
xor
adc
sbb
mov
jecxz
or
rcrb
adc
cmp
fnstcw
sub
hlt
xorb
add
ss
xorb
adc
pushl
or
es
or
cmp
add
fistpll
ret
adc
repz
mov
iret
mov
outsl
push
xchg
jge
xlat
jp
sbb
xchg
out
or
mov
dec
insb
push
and
negl
xchg
add
cs
and
adc
pop
test
push
hlt
loope
mov
fcmovnbe
pop
mov
cmp
mov
fnsave
dec
addr16
nop
jno
ljmp
xchg
push
push
int
shl
dec
jmp
les
mov
lcall
hlt
mov
and
lock
popa
jmp
sbb
addr16
fadd
fs
movl
cmp
xchg
out
ljmp
jo
xorb
sbb
mov
mov
lret
sti
push
inc
mov
pop
sub
pop
out
pop
jae
inc
mov
push
xchg
ljmp
int
push
sub
ds
das
ret
add
mov
scas
data16
testl
fdivs
jl
movsl
xor
xor
jne
ret
mov
mov
cmp
or
sub
pop
rcrl
rorb
xchg
inc
sbb
dec
and
mov
mov
arpl
std
dec
lea
or
xchg
scas
out
push
pop
mov
add
dec
addl
push
int
jae
and
and
je
xor
leave
in
pop
adc
sub
outsb
bound
aam
scas
andb
out
lcall
fs
mov
mov
gs
mov
push
sahf
push
xor
imul
rcrb
fwait
xor
gs
add
ss
sbb
mov
call
mov
or
cmp
jne
push
icebp
push
enter
icebp
das
jl
xor
sub
stos
sub
lahf
cmc
into
push
xchg
cmc
or
pop
scas
push
xor
mov
jae
jg
mov
add
scas
jnp
pop
lcall
test
popl
inc
jnp
stc
mov
pop
or
inc
lea
hlt
and
jp
je
cmc
daa
loopne
add
stc
jle
shll
mov
jmp
fistpl
scas
notl
push
dec
pop
fwait
xchg
lahf
jge
test
push
add
and
and
and
lock
clc
sbb
pop
cmpsl
xor
pop
xchg
push
test
jns
dec
jg
rcrl
xchg
lret
sbb
push
shrl
cltd
fdivrs
mov
bound
dec
sub
aam
jo
xor
negb
lcall
jne
fildl
cmp
js
push
mov
jne
imull
lea
pop
mov
jnp
ja
xchg
add
aas
pop
gs
ret
dec
mov
cmp
sbb
cmp
adc
cmp
xchg
jo
enter
xchg
mov
hlt
aas
inc
and
mov
jo
pop
imulb
mov
in
test
sbb
or
lret
cli
push
mov
daa
mov
nop
mov
sbb
lret
lods
jnp
inc
xor
cmp
mov
and
push
loopne
jne
rorb
es
lods
divb
mov
icebp
cmpsl
out
mulb
cmp
xor
shrl
pop
push
scas
xchg
gs
jg
dec
mov
dec
fnsave
es
and
cmc
aam
mov
mov
mov
mov
or
mov
lret
or
push
fwait
nop
adc
dec
lea
push
out
push
xchg
inc
add
in
shll
mov
sub
pop
inc
sub
mov
pop
sub
adc
lahf
clc
ret
iret
inc
xchg
mov
lds
jge
cmpsl
add
out
mov
pushf
push
cmp
in
repnz
cli
xchg
repnz
push
jbe
mov
shl
mov
jo
pop
xchg
imul
mov
inc
daa
xchg
inc
in
fsubp
xchg
pop
rcrb
and
rcll
pop
loope
mov
add
imul
cmp
or
xor
test
and
fisubl
dec
mov
mov
repz
imul
out
sbb
test
pop
outsb
les
adc
out
int
sub
cmp
sarb
insb
test
fidivl
cmp
mov
shrb
sub
xor
lea
sti
xor
fstpl
mov
add
inc
ret
pop
ss
sub
and
add
clc
pushf
dec
and
in
xor
outsl
jge
lcall
xchg
adc
insb
stos
call
and
ret
push
xchg
xor
xor
popa
lret
sbb
stc
pushf
dec
mov
mov
jo
jmp
shll
test
push
mov
and
pop
in
ss
mov
mov
add
jp
dec
xor
dec
mov
imul
arpl
xchg
mov
nop
xor
imul
mov
pop
add
sbb
scas
xchg
repnz
sbb
cmp
mov
loope
pushl
adc
cltd
pop
ds
adc
stos
pop
and
adcb
sbb
rol
fs
xor
xchg
xchg
adc
inc
xor
out
adc
pop
lcall
out
mov
ret
push
lods
inc
test
insl
pcmpgtd
dec
test
pop
test
ja
jecxz
fiadds
sub
xchg
js
scas
cmp
test
push
in
clc
and
xchg
sub
negl
cmp
je
pop
mov
popa
jne
les
sahf
popf
xorl
dec
dec
mov
ret
dec
cwtl
push
out
jbe
dec
xor
jl
lahf
cmp
add
daa
gs
rcrl
mov
jge
mul
std
ret
push
int
sti
sub
mov
es
jno
sbb
push
cmp
inc
mov
mov
daa
dec
leave
dec
mov
inc
mov
movsb
in
adcb
jno
ret
xor
fcmovbe
in
xchg
sarl
pop
lock
lock
dec
ficoml
jg
xor
mov
mov
jns
mov
out
outsl
xchg
cmp
and
in
fdivr
add
mov
and
xchg
clc
cli
or
adc
in
es
loopne
and
inc
ja
add
mov
rcll
inc
call
outsb
out
add
push
xchg
dec
mov
pop
iret
pop
pop
insb
fdiv
xchg
out
push
mov
and
arpl
shll
sub
negb
mov
xchg
xor
cmp
xchg
into
movsb
pushf
sbb
andl
jge
pusha
mov
xor
jbe
dec
imul
and
pop
jb,pt
cmpsl
sbb
fwait
sbb
mov
sbbl
int
jle
daa
mov
mov
shrl
shrb
xchg
imul
ret
jb
ret
xchg
jle
xchg
int
aam
roll
aad
dec
xchg
fs
adc
jno
dec
sbb
test
outsb
addr16
lods
shll
into
cmp
inc
addb
stos
sub
movsl
lds
cmpsb
push
jmp
ss
std
mov
cld
cmp
inc
loopne
aad
mov
or
shrb
sbb
xor
jp
lea
jge
jl
pop
fsts
cltd
dec
imul
xor
aam
inc
inc
arpl
pop
mov
loop
adc
jmp
les
pop
push
outsb
test
aam
icebp
movsl
repz
push
push
sub
mov
jecxz
test
inc
in
scas
movsb
aaa
xchg
inc
sbb
mov
cmp
mov
daa
cld
pop
sahf
ds
sbb
xor
mov
pop
lret
aaa
mov
rorb
out
dec
mov
sub
pusha
loope
dec
add
jae
jb
loope
mov
movsl
insl
rep
nop
jo
sbb
mov
ret
shlb
mov
jg
or
pop
jae
mov
in
sahf
mov
sti
ljmp
xor
and
lea
pop
sub
pop
push
rclb
enter
add
mov
or
dec
pushw
test
orl
pushf
shr
cmp
xchg
shll
movsl
data16
sub
inc
orl
pop
pop
arpl
ret
in
scas
and
or
pop
insl
fst
cmp
arpl
dec
sbb
xchg
cmpsb
inc
outsl
pushf
add
inc
inc
ficompl
stos
inc
xchg
or
xor
sub
sbb
and
push
pop
inc
mov
cmp
cmp
cmc
cltd
mov
xlat
imul
push
aam
add
sbb
mov
fldt
lret
pop
mov
les
int3
stc
pop
cmp
popa
in
xor
pop
add
mov
icebp
mov
add
bound
or
pop
jb
or
in
xchg
push
adc
push
sahf
sub
add
add
sub
mov
popf
adc
xor
nop
sub
insl
add
mov
fdivrs
or
lds
sub
cmp
mov
lret
sbb
negb
leave
mov
sub
loope
cmp
sub
push
rcrl
ds
rcrb
or
rolb
sbb
jg
xchg
test
jb,pn
adc
out
or
clc
out
outsb
push
push
cli
cmp
push
jb
test
and
push
and
xchg
nop
rorl
movsb
lahf
int
adc
cmp
push
inc
jl
cs
lods
sti
xor
imul
dec
jbe,pn
adc
loope
add
inc
aaa
or
fisttpl
push
xor
pop
into
addr16
jno
adc
cld
call
ficoms
repnz
mov
xchg
hlt
lds
xchg
test
stc
fistpll
adc
gs
cmc
push
in
pop
xor
push
lock
shlb
popf
pop
ss
pop
cs
cld
or
push
mov
sub
aas
call
inc
popa
inc
jl
ds
rclb
and
lods
mov
mov
cltd
mov
sub
mov
sbb
sub
mov
mov
adc
fsubs
fldcw
add
push
add
cmpsl
in
popf
imul
in
sub
cwtl
js
test
and
test
mov
sahf
orb
aas
in
push
aaa
cmp
fcmovbe
pop
adc
push
icebp
jbe
xor
insl
xor
flds
cmp
or
rolb
lret
mov
ja
push
xlat
gs
lea
jl
jle
sbb
dec
cmp
mov
push
je
mov
push
jle
inc
xchg
out
std
fmull
adc
or
nop
aad
adc
es
push
outsb
cmp
adc
shlb
sub
lret
imul
mov
rcl
dec
cld
adc
test
jns
mov
shrl
loopne
xchg
mov
jo
mov
inc
bound
repz
inc
mov
pusha
mov
int3
mov
xor
mov
rol
and
in
inc
scas
loope
mov
nop
pop
dec
dec
stos
aad
jno
inc
lods
imul
xchg
into
aad
push
imulb
cmp
mov
cli
jp
sub
add
das
inc
dec
aas
jb
sahf
ss
jb
mov
in
pop
test
pop
imul
xchg
jns
out
push
xor
push
fsubl
jb
rorl
pop
and
test
inc
fdivs
out
push
or
cwtl
pushf
add
out
cmpsl
test
add
sbb
inc
aam
leave
testb
jbe
mov
mov
cmpl
femms
rcrl
out
add
stos
icebp
xchg
mov
sub
fiadds
mov
cmc
orb
cmpsb
and
mov
mov
adc
mov
int3
xlat
lahf
inc
inc
mov
mov
mov
add
dec
xchg
orb
and
or
mov
pop
jnp
in
mov
aas
mov
notl
xlat
sbb
ss
push
out
loop
mov
cmpsb
ds
pusha
adcb
andb
addl
mov
sbb
xchg
cmp
or
pop
xor
icebp
scas
call
mov
push
xor
and
fwait
sbb
xchg
xchg
std
dec
dec
add
rcll
fs
lods
stc
call
push
pop
and
lcall
popa
hlt
dec
jno
movsl
sti
mov
mov
pop
jo
fistpl
adc
xor
sbb
jbe
pop
lret
mov
jecxz
out
jns
xchg
or
repz
fdiv
loope
and
insl
xchg
jl
pop
in
mov
push
xchg
fdivr
xchg
lcall
push
mov
mov
mov
xchg
out
mov
mov
and
add
mov
loopne
icebp
out
sahf
data16
popa
xor
testb
push
test
arpl
test
icebp
je
xorb
and
sbbl
fadd
mov
stos
lock
addr16
and
daa
jo
mov
cwtl
repz
jne
sbb
mov
pop
sti
pop
jbe
fistpll
repz
mov
sub
loopne
mov
into
cmpb
call
add
in
mov
and
pop
pop
fsts
mov
ret
idiv
lods
ljmp
lds
ljmp
les
stc
mov
pop
xchg
ljmp
imul
pop
pushf
loopne
fisubl
xor
outsb
jl
daa
jecxz
push
outsb
jno
or
neg
adc
mov
cmpsb
xchg
xchg
ffree
roll
dec
mov
mov
cmp
ds
sbb
aaa
pop
addl
mov
int3
dec
imul
insb
test
or
mov
leave
or
add
in
push
shrb
push
repz
xor
nop
mov
fnstenv
xor
dec
bound
adc
fwait
jmp
xchg
dec
lea
sbb
lock
hlt
and
pop
cmpsb
pusha
bound
pop
fmuls
repz
insl
mov
mov
daa
fsubp
push
psubw
sub
imul
xchg
cmc
pop
ja
mov
cmp
push
mov
add
fisttpll
movsb
movsb
mov
nop
popf
popa
loop
jge
cli
ret
inc
fdivl
push
xorb
ret
xorl
es
sbb
push
jno
js
xchg
sub
inc
jbe
pop
sbb
push
andl
push
dec
in
xor
and
xlat
cmpsl
and
cli
push
push
mov
insb
sbb
fsubrs
out
cmpsl
pop
stos
pop
loop
mov
pop
icebp
cmp
mov
shl
push
xor
xor
xor
scas
cmpsb
cli
or
xchg
mov
add
cld
add
cmp
inc
jno
xor
inc
and
stc
movl
cmp
cmp
lods
call
pop
sbb
jo
or
xchg
jp
in
jnp
std
js
insl
xor
adc
add
jecxz
ja
cmp
xor
jno
je
pop
sbb
mov
outsl
jle
clc
push
icebp
jecxz
push
aad
inc
xor
insb
or
mov
clc
lahf
or
mov
pop
mov
js
sahf
movsb
mov
test
out
sbb
jbe
jg
jmp
ret
pop
adc
lods
mov
ret
xlat
sub
aas
arpl
mov
out
call
mov
loopne
mov
cmpsl
lds
cli
mov
adc
or
jo
mov
imul
pusha
sub
jmp
mov
dec
adcl
cmc
fstp
sub
aas
xor
pop
cmp
mov
addb
loope
rcl
pop
popa
mov
xor
push
imul
mov
pop
xor
out
ret
imul
pop
jbe
sbb
inc
repz
das
inc
std
in
pop
push
mov
in
xor
add
adc
idivl
nop
jg
and
inc
cmp
lea
loope
cmp
dec
arpl
jle
es
daa
lds
inc
fldt
jl
pop
insl
sar
add
sahf
je
ja
sub
repnz
mov
cmp
ret
inc
dec
jecxz
mov
lcall
mov
xchg
cmpsl
adcb
loopne
jle
arpl
clc
mov
xchg
xor
sbb
mov
sub
icebp
add
sub
test
add
pop
leave
lods
retw
cltd
enter
mov
push
sub
es
into
fdivrs
pop
pop
int3
inc
pusha
call
jae
pop
sbb
das
js
adc
dec
mov
sbb
cmp
fs
repnz
in
stos
lahf
cwtl
lds
das
lahf
cli
popa
push
dec
cmc
push
mov
dec
outsl
xlat
xchg
ret
out
out
in
out
adc
repnz
leave
lods
cmp
int3
shrb
pop
push
pop
incl
in
mov
sarl
into
push
mov
fldenv
stos
insl
adc
jmp
hlt
cltd
xchg
cmc
pushf
jge
mov
ss
mov
jecxz
sbb
imul
dec
inc
push
outsb
xchg
mov
cltd
lret
loop
pop
pushf
dec
or
adc
cmc
sbb
stos
ror
xchg
fdivrs
sub
add
fmuls
sub
gs
pop
in
add
rclb
in
rorl
shrb
jle
cmpsb
bnd
lahf
repz
sub
push
push
dec
xor
movsb
outsb
cmp
push
cmc
add
or
repz
cmp
test
cmp
add
jbe
and
rcr
movsb
test
in
lret
mov
lds
xchg
xchg
pop
mov
daa
xor
or
pop
sub
mov
mov
pop
stos
adc
pusha
jge
pop
frstor
rcrl
gs
stos
mov
scas
imul
outsb
repnz
mov
popa
or
icebp
pop
test
loopne
movsb
pop
add
mov
imul
test
imul
cmp
and
jmp
aaa
xor
cmc
jb
add
cmc
shlb
mov
add
js
push
xchg
jl
jg
arpl
cltd
add
stos
mov
dec
dec
fimull
aaa
pop
mov
ss
xchg
inc
movsl
shll
jae
xchg
push
das
test
inc
mov
test
leave
adc
push
pusha
je
lock
pushf
pusha
out
sub
adc
test
sub
repnz
and
rcll
bound
adcb
add
dec
push
push
mov
fucomp
fidivl
hlt
sub
dec
pop
cmp
lds
pop
andps
xor
mov
mov
jb
mov
mov
or
add
cmpsb
pop
ja
xorb
mov
jle
pushf
fadds
xor
cltd
popa
popa
lret
lcall
leave
dec
jb
and
mov
rclb
push
lret
aas
bnd
rorl
imul
lret
mov
ds
xchg
jmp
mov
sarb
jg
shll
repnz
xchg
inc
mov
outsb
repnz
nop
xchg
je
pop
cs
mov
dec
jbe
dec
aaa
sbb
push
dec
loope
inc
cs
mov
jmp
push
lret
testl
repz
aaa
imul
fstps
cmp
pop
push
xchg
popa
lret
and
outsl
imulb
mov
pop
lret
xor
mov
xor
test
xchg
mov
dec
fsubrl
dec
xor
dec
cmc
sub
cmp
and
int
push
loopne
mov
push
lock
mov
sub
lea
adc
dec
and
mov
fwait
sub
or
or
dec
dec
fmulp
jbe
in
mov
and
inc
inc
jge
sub
outsb
cmp
daa
loope
outsb
push
mov
adc
lcall
xchg
lcall
push
mov
add
repz
pop
push
in
pop
jbe
jb
icebp
cli
lea
les
outsb
cmp
loopne
add
mov
pop
pop
xorl
sbb
mov
sub
clc
mov
xorl
lods
xchg
jecxz
push
ror
cmp
ret
pop
cmp
mov
lret
push
stos
xor
jg
out
xor
stos
inc
or
in
js
jne
cmc
jns
mov
inc
fdivl
xchg
iretw
jl
mov
mov
rcl
lret
mov
push
cmpsb
cli
test
repnz
add
fistpll
xchg
vpmacsdd
inc
jg
cmp
cmp
out
shll
lods
sbb
push
sbb
add
icebp
cmp
clc
repnz
mov
cmpsb
cmpsb
or
adc
lea
mov
cli
cs
adc
pop
jge
fcoms
adc
ja
pop
fstl
and
mov
cmp
sub
mov
aam
mov
cmp
stos
push
mov
out
stos
jnp
inc
dec
and
cmp
xchg
enter
out
jne
jp
mov
mov
test
mov
push
aam
adc
xor
fcomps
rclb
mull
movl
inc
jge
add
clc
cli
mov
mov
lret
jmp
sub
call
popl
fwait
add
cwtl
mov
aam
lret
or
ljmp
push
cmpb
push
mov
xchg
xchg
out
or
mov
xchg
xchg
adc
fucomip
push
popf
jl
shlb
mov
icebp
rorl
imul
leave
dec
fisttpll
mov
fsubrl
ret
sbb
insl
adc
je
aas
or
loopne
ja
les
sub
pop
xchg
test
js
jmp
idiv
xor
adc
ljmp
or
es
in
cmp
scas
bound
add
out
dec
adc
sub
adc
or
mov
xlat
or
push
dec
mov
pusha
push
mov
pop
js
in
xor
pop
mov
pop
mov
mov
push
inc
ficoml
jmp
push
or
movsl
test
popf
lds
loope
mov
shll
pop
mov
sub
add
jmp
mov
int
or
add
insl
xchg
inc
dec
adc
or
test
xor
add
and
mov
leave
xchg
roll
dec
incb
fdivl
movsl
jle
es
or
xchg
shrb
aaa
je
xor
repnz
mov
out
jbe
mov
and
shll
push
or
inc
mov
or
jnp
xchg
stos
test
jp
xlat
add
mov
jmp
cmpsb
xchg
pop
adc
lock
imul
arpl
add
gs
adc
sti
pop
es
mov
vaddps
fisttpll
jb
dec
jb
dec
dec
fwait
cmp
imul
sbb
jnp
mov
mov
testl
andb
mov
sbb
fisubl
mov
les
mov
mov
jp
ret
stc
cltd
push
lock
mov
gs
int3
shr
pop
daa
sub
int
rorb
push
pop
mov
ljmp
test
sti
pop
jno
stos
pushf
cmp
sbb
testl
lods
jmp
pop
insb
xchg
add
pop
inc
push
xchg
sbbl
inc
push
mov
jne
sub
popf
or
pop
inc
xchg
add
xchg
ret
xchg
and
inc
ror
ret
or
xor
cmp
addr16
pusha
sahf
aad
iret
pusha
repnz
test
pop
mov
cld
popf
cltd
mov
mov
lret
aam
dec
dec
add
add
or
dec
mov
sub
push
mov
push
fsubrs
insb
mov
mov
icebp
sub
xchg
in
jp
loope
or
lahf
movsl
aaa
jae
test
mov
add
jmp
push
mov
loop
je
fwait
subl
std
loop
mov
and
mov
sbb
jns
adc
sbb
pop
jge
xchg
movsb
cmc
fcoml
out
push
inc
sub
icebp
pushf
out
dec
inc
fsubrl
jg
adc
nop
lahf
mov
loope
subb
adc
cld
mov
out
mov
mov
jle
es
call
je
das
les
inc
mov
insb
sbb
xchg
mov
mov
mov
dec
pop
test
lret
pop
sahf
xchg
lock
shrl
push
xchg
and
and
dec
leave
cmpb
movsl
sbb
inc
sub
sub
and
addr16
and
push
pop
loop
daa
mov
es
aam
xchg
dec
push
dec
sbb
ficomps
repz
loope
push
cmp
inc
xchg
xor
sub
push
pop
scas
insb
mov
inc
fcmovnu
sub
out
mov
cld
vpblendmd
cmpsl
cli
lcall
pop
add
std
mov
push
jle
fcoms
pop
and
mov
adc
repz
fldenv
or
fistl
push
std
jp
sub
ror
cli
and
ret
mov
js
or
mov
jl
stos
outsb
xor
popf
int3
stc
pop
sarb
add
rorl
data16
inc
je
sub
push
insl
jg
inc
mov
into
sbb
jecxz
or
test
js
mov
je
test
out
push
pop
push
mov
mov
and
clc
std
mov
test
jecxz
andb
xchg
daa
cmp
dec
jbe
jmp
inc
inc
dec
ljmp
adc
jns
in
or
xor
jge
sbb
jecxz
push
push
cmc
arpl
ds
and
inc
leave
movsl
lds
rorl
call
loop
jb
movb
test
lahf
popa
pop
push
lds
test
hlt
inc
jo
adc
jmp
inc
fsub
jle
aaa
test
or
shlb
mov
lods
ret
idivb
mov
mov
mov
pop
subl
sub
jl
ljmp
shrl
push
or
mov
mov
lds
jge
xchg
rorl
sbb
aas
mov
mov
mov
push
pop
fwait
mov
idivb
mov
jge
scas
lea
aad
and
jb
or
inc
sub
xor
nop
iret
lea
adc
mov
aam
out
mov
mov
push
lret
or
jg
mov
add
loope
push
test
inc
mov
lea
sbb
mov
push
aam
push
in
test
mov
mov
pop
inc
sarl
in
es
test
lcall
sub
outsl
mov
xchg
ljmp
add
gs
aaa
ret
hlt
dec
lock
stos
loope
loope
in
ret
cltd
add
lret
jae
es
push
pop
imul
push
int3
xchg
push
inc
jecxz
xchg
repz
xchg
and
fnsave
sbb
adc
inc
scas
int3
xchg
mov
push
sar
xchg
push
sbb
idivb
stos
hlt
stc
in
xor
inc
and
and
out
push
lods
daa
push
clc
scas
sbb
rcl
clc
out
movsl
lret
push
cld
add
insb
sub
out
mov
test
out
adc
xlat
fiaddl
cmpb
stc
cwtl
mov
std
or
insl
cwtl
lahf
sbbl
or
fsubs
sub
jmp
add
std
dec
in
mov
or
pop
mov
lret
push
stc
rcrb
sbb
fdivl
popa
dec
inc
push
sub
js
cld
jae
push
pusha
pop
in
lea
jnp
xlat
xlat
daa
sub
sub
lods
jg
andl
add
in
shl
rorl
xchg
sbb
push
dec
and
lcall
jmp
daa
cmp
fwait
mov
pop
cmc
bound
push
cmp
push
xchg
sub
leave
scas
lret
lret
cmpb
es
stos
xchg
sub
roll
xchg
mov
push
cli
daa
dec
mov
sub
fwait
pop
scas
or
ljmp
or
add
sbb
ds
xchg
je
out
sar
pop
insl
mov
dec
loop
imul
test
push
nop
xor
sub
shll
and
les
out
cwtl
std
cmp
xor
add
mov
ja
xor
popa
xor
pop
and
sbb
cmp
popf
dec
or
cmp
jp
dec
push
jbe
sub
cmp
adc
add
xchg
cmp
bound
ljmp
dec
mov
hlt
pop
pusha
push
pop
pop
inc
mov
adc
adc
jl
adc
mov
cwtl
push
cmp
mov
aam
cli
add
inc
out
xchg
aas
lcall
cmc
rclb
pop
jbe
sub
jle
mov
sbb
divb
orl
rorl
mov
fs
scas
sbb
sahf
adc
les
into
scas
cs
push
hlt
cwtl
out
ret
adc
in
mov
loope
and
inc
fsubp
arpl
and
mov
pusha
sub
sbb
cli
insl
iret
dec
in
repnz
push
jle
rcll
loope
xchg
fucom
sub
xchg
mov
pop
sti
jmp
icebp
push
cwtl
cmpsb
scas
inc
imul
pop
aas
rclb
inc
je
leave
lret
and
pop
dec
out
imul
dec
mov
das
ds
jl
fiadds
lahf
sub
out
out
mov
cmp
adc
hlt
cli
aas
cld
xor
xchg
aaa
in
stos
stos
mov
popf
xchg
fdivrl
lret
repnz
insl
shrl
cmp
mov
adc
aas
pop
pushf
cmc
lcall
sbb
mov
and
add
sub
ret
sahf
add
dec
mov
call
lods
jo
xor
scas
sub
stc
xor
fnstenv
cmp
daa
pusha
rcrl
cmp
push
cli
into
in
jge
adc
jns
in
push
test
loop
sbb
ja
sahf
into
cltd
jno
pushf
mov
pop
aam
int
sub
sub
loop
mov
aaa
fcomps
inc
test
dec
aaa
div
pop
insb
pop
enter
popa
lcall
adc
ret
inc
adc
jo
mov
mov
cmpsb
mov
das
pop
and
shlb
adc
jl
hlt
cmp
dec
mov
dec
into
mov
fadd
mov
inc
adc
pop
cmpsl
arpl
pop
jge,pn
sub
and
pushf
ljmp
push
popf
pusha
dec
ljmp
fs
jg
jecxz
jne
loop
fstpt
dec
xor
lock
mov
add
in
inc
or
and
je
sahf
mov
xchg
pmullw
jecxz
cmp
imul
push
add
xor
movb
or
sbb
sub
mov
mov
movsl
or
in
data16
mov
andnps
inc
in
or
inc
dec
inc
mov
outsb
das
dec
or
push
xchg
insl
sbb
mov
dec
ret
hlt
sub
inc
bound
arpl
repnz
cs
fs
in
sti
sbb
leave
xchg
fdivl
out
je
fsubrl
cmp
push
push
ljmp
nop
fsub
ds
loope
inc
lock
cs
movsb
aam
and
sbb
and
cltd
movsl
mov
daa
lret
xor
mov
out
decb
shl
xchg
xor
mov
daa
xchg
stos
add
mov
movsb
inc
cmp
arpl
popf
lahf
pop
int3
fstl
lea
xor
xor
popa
fsub
xor
pop
mov
xchg
adc
jp
inc
loop
popf
adc
push
nop
mov
movsb
pop
xchg
fs
and
sub
cld
and
push
xchg
push
arpl
mov
lret
rolb
subb
stos
clc
imul
aam
inc
ffree
or
sub
jecxz
sub
mov
inc
pop
inc
loope
shll
inc
lret
sbb
loop
jp
inc
in
cmp
and
add
dec
pop
iret
pop
sub
out
or
jecxz,pn
pop
xchg
das
popf
lds
dec
mov
std
adc
sub
arpl
jb
pop
push
pop
add
mov
jp
and
push
mov
mov
in
pop
mov
jno
sub
addr16
fs
divl
inc
ror
outsl
xchg
andnps
mov
mov
or
or
cmpsb
jb
jo
sti
addr16
mov
jns
xor
adc
in
push
xlat
pop
add
stos
outsl
fdiv
fst
add
lods
in
mov
nopl
daa
rcl
and
pop
imul
xchg
dec
aad
adcb
xchg
inc
test
out
inc
lock
cwtl
out
fwait
mov
roll
inc
incb
pop
ss
sahf
adc
scas
sbb
int3
outsl
push
dec
push
cmp
shlb
jg
cmp
fidivrs
pmovmskb
pushf
shll
mov
jne
arpl
mov
jl
push
or
pop
pop
cmpsb
push
mov
adc
cvtdq2ps
sub
mov
mov
xor
cmp
mov
xchg
stos
push
xor
jnp
into
mov
test
outsb
and
in
pop
fnstcw
ljmp
outsb
or
xchg
xchg
test
jns
outsl
adc
and
push
setle
ret
ss
pusha
lcall
lea
stos
pop
or
fnsave
xchg
cmp
cmp
xlat
xlat
fucomi
rcrb
repnz
faddl
push
adc
rcrl
es
into
cmp
repz
mov
and
dec
mov
shrl
cmp
jecxz
imul
lret
push
daa
dec
adc
mov
xor
insl
cmp
leave
add
jbe
push
fwait
data16
shrl
nop
call
lahf
sbb
lret
inc
push
xchg
push
lods
into
sbb
jecxz
xorb
call
fwait
xchg
aas
xchg
or
ficomps
adc
hlt
addb
in
lds
push
jmp
jbe
testb
call
and
cmc
inc
sbb
cmp
or
jg
push
jo
in
gs
scas
stc
adc
enter
iret
cmc
loope
jns
gs
int3
mov
popa
imul
inc
shr
dec
in
xor
js
mov
in
je
clc
xchg
int3
cltd
push
dec
adc
aad
mov
pop
imul
ficompl
stc
rorb
popf
xchg
jg
fsts
arpl
jnp
aas
mov
add
add
add
add
pushf
jo
imul
int
xor
nop
sbb
mov
loopne
imul
or
adcb
mov
cwtl
jp
pop
sub
inc
repnz
adc
out
push
or
xor
jg
xchg
cmp
jmp
scas
scas
jae
jg
cmp
cmp
or
mov
cmp
dec
push
cmc
xchg
pop
and
push
xchg
mov
test
lds
imul
das
int
ss
orb
mov
mov
vcvtps2dq
loop
stos
lret
lret
jns
divb
enter
int
test
sub
xchg
shlb
and
fildl
xor
dec
adc
pop
fmull
xor
mov
mov
movsb
lods
stos
insl
mov
cmp
add
mov
mov
out
into
xor
mov
ficompl
imul
arpl
jns
pop
dec
fsubrl
push
add
mov
or
mov
inc
mov
lret
loopne
rcr
bound
mov
test
ja
clc
xchg
mov
std
xchg
sbb
leave
xchg
lahf
or
dec
gs
gs
jmp
scas
js
hlt
xchg
mov
cmp
sbb
shll
mov
shrl
mov
lea
incb
and
sub
test
cmpsb
imul
mov
sahf
inc
mov
std
addb
and
sahf
icebp
inc
lods
lds
mov
and
das
push
inc
iret
push
or
pop
outsl
lcall
push
pop
in
or
jo
push
insl
xor
push
pop
dec
adc
in
sub
inc
dec
mulb
fstl
shrl
mov
dec
jno
jmp
inc
pop
inc
daa
sbb
and
push
add
and
xor
rcrl
inc
cmpsb
add
jecxz
in
test
or
jo
push
in
dec
nop
in
test
fwait
in
lret
or
xchg
jne
roll
mov
popf
inc
jb
loope
iret
and
inc
aam
movsb
loopne
jbe
stc
insb
sub
pop
mov
jne
xlat
lods
cmpsl
sbbb
fcmove
sub
dec
jbe
ficompl
add
jb
mov
pop
cmpsl
dec
out
arpl
push
dec
ds
hlt
into
leave
mov
stc
stos
or
imulb
stc
adc
dec
adcb
inc
shlb
daa
cltd
test
clc
jns
cmpsb
pop
xor
pop
nop
xlat
push
add
cs
add
outsb
mov
mov
xor
fs
pop
jge
imul
xor
inc
mov
hlt
clc
dec
int
clc
adc
xchg
push
ljmp
notl
adc
inc
xor
fdivr
jecxz
dec
fwait
lcall
xor
in
dec
adc
fsubp
bound
xchg
xchg
shll
lds
aam
fstpt
test
xchg
cli
sbb
popf
mov
imul
xchg
push
mov
std
rcrl
shll
leave
fistpl
popa
or
and
idivl
or
enter
mov
push
fdivrs
neg
stos
mov
dec
pop
jns
or
dec
and
and
jge
inc
push
icebp
push
lret
jmp
mov
cmp
cmp
add
pushf
lods
xchg
adc
jmp
jp
mov
into
inc
int
dec
aas
mov
or
or
inc
and
xchg
pusha
rol
movsl
cmp
js
shll
dec
in
dec
or
insb
adc
std
xor
cmp
aad
aas
jp
out
inc
popf
inc
mov
fidivrl
rcr
mov
leave
push
pop
aad
jno
stc
movsl
xor
cmc
test
arpl
dec
negb
dec
iret
pop
bound
aas
jno
cmc
ret
icebp
enter
fiaddl
gs
repz
clc
adc
pop
cmp
xchg
mov
pop
and
arpl
setb
fcomps
fs
loop
fidivrl
push
inc
hlt
loopne
dec
out
mov
mov
stos
and
jno
cltd
xchg
inc
cmp
sbb
repz
and
push
dec
xlat
scas
popa
mov
pop
mov
adc
movsb
or
arpl
jb
ficoms
sarl
cmp
sub
pop
jp
add
stc
push
cmp
sbb
inc
sbb
js
repnz
mov
paddd
add
jo
addb
insb
in
fdivl
dec
and
sbb
lret
push
ja
les
pop
imul
mov
lods
or
fwait
sub
lret
cwtl
das
mov
popf
xchg
stc
aaa
pop
push
dec
loope
xlat
into
sub
mov
and
push
repnz
fwait
sahf
dec
lret
cmc
adc
push
test
mov
cs
in
sbb
sbb
scas
call
xchg
dec
mov
int3
mov
in
icebp
jns
arpl
pop
repnz
fimull
pop
jge
xor
inc
mov
push
fdivp
xchg
fwait
scas
adc
lods
xchg
mov
and
or
jle
scas
imul
rolb
push
xor
xorl
mov
gs
mov
mov
rcl
outsb
push
fnsave
add
xchg
mov
add
inc
xlat
ja
outsl
push
push
data16
icebp
pusha
sbb
sbb
jns
mov
outsl
mov
sti
pop
mov
fcoms
or
push
and
enter
add
adc
pushf
out
dec
jle
xor
aaa
push
insb
dec
pop
aad
sub
ja
test
inc
aad
ret
int3
sbbb
dec
sarl
mov
enter
push
insb
xchg
push
ja
mov
popa
in
cmp
mov
inc
cltd
xor
xor
fs
cmpl
xchg
or
mov
add
test
fs
sub
xor
ret
lahf
mull
inc
jno
mov
mov
mov
or
int3
jle
arpl
mov
jmp
push
pop
xor
rcrl
sbb
lret
gs
dec
scas
scas
int3
jo
popf
inc
fists
jb
mov
inc
fucomp
sub
and
pop
sarb
pop
lds
jmp
cmc
and
and
pushf
dec
imul
cli
ljmp
sbb
int
das
stc
adc
sub
xchg
sbb
xor
or
adc
add
mov
mov
or
and
jb
out
repz
push
bound
sbb
lods
xlat
les
sub
and
or
add
xchg
loop
sbbl
mov
aas
or
push
pop
dec
push
aam
xlat
xchg
shrw
jle
stos
pop
fdivs
jecxz
fbstp
enter
xchg
mov
mov
inc
lds
jae
mov
push
stos
add
mov
pop
mov
push
xchg
dec
les
sahf
daa
or
shl
mov
mov
cmpsb
test
out
adc
aas
cmpsb
xchg
add
fistpl
enter
insl
jp
imul
jne
push
fmulp
out
insb
and
inc
mov
cmp
or
aad
mov
rclb
lahf
and
aas
test
aam
fisubs
pop
inc
ret
pop
and
dec
cmp
push
xlat
mov
sub
in
pop
cld
in
aaa
dec
adc
ds
dec
or
icebp
lods
andl
dec
xor
pop
xchg
fucomi
aad
xchg
fcmovnbe
adc
in
jge,pt
cmp
cmpsl
pop
dec
dec
adc
imul
nop
mov
cmp
jb
movsb
imul
jmp
dec
fsubs
push
dec
scas
fists
jg
in
add
adc
popf
rorl
icebp
xlat
mov
adc
pop
into
into
pop
ret
sbb
mov
subb
gs
mov
xchg
ja
sbb
push
sti
outsl
lea
pop
mov
push
adc
xchg
push
lret
fistpll
idivl
ret
lods
add
icebp
icebp
xchg
push
cs
push
sbb
cmp
lock
fcmovne
xor
cmc
mov
mov
ret
mov
js
xchg
and
fidivs
popf
mov
sbb
mov
sbb
nop
and
jno
xor
jle
inc
scas
popa
mov
ret
xor
adc
mov
mov
bound
cs
ja
enter
pop
xor
mov
test
loope
stos
push
in
xor
add
jmp
les
movsb
pop
xchg
xchg
aas
loopne
andl
xor
jo
cmp
mov
mov
sub
lock
leave
or
cmp
movsl
push
int
add
jne
jmp
jl
sbb
pop
pop
inc
jbe
xchg
popa
pop
sub
ljmp
dec
movsl
push
sub
inc
sbb
pusha
pop
mov
lahf
test
xchg
adc
fdivl
lret
cld
sahf
push
push
test
ja
icebp
fmul
or
sbb
inc
stc
sbb
sarb
repz
and
inc
rclb
popf
push
add
xchg
das
add
ljmp
arpl
inc
and
add
aam
push
cli
inc
lods
popf
push
inc
pop
push
lds
mov
mov
pushf
inc
sahf
arpl
mov
jns
mov
ret
cld
movsl
or
jne
jg
aaa
call
xchg
cld
and
mov
or
shrl
xchg
jge
fistpll
pop
mov
icebp
movb
dec
add
mov
inc
push
mov
or
and
rcrl
cmp
cli
sub
das
cmc
mov
scas
sbb
inc
mov
das
sbb
sub
dec
popa
xor
sbb
sub
sub
ss
push
leave
movsb
into
dec
or
inc
fstl
inc
loop
les
lds
pushf
and
pop
imulb
jp
les
lret
add
aam
dec
and
je
inc
jge
lock
test
jle
aaa
inc
clc
push
and
xchg
push
scas
or
fisubrs
add
adc
mov
shrl
adc
in
push
sub
cltd
call
jns
or
xchg
std
mov
lock
push
insb
arpl
mov
clc
ret
add
mov
shlb
sbb
pop
ljmp
movsb
jg
mov
xor
outsb
mov
pop
jo
test
pusha
mov
xor
jmp
sbb
push
mov
mov
xlat
aam
gs
cmp
dec
sub
bnd
stos
pop
mov
cmp
lods
aas
loop
sub
sub
xor
lods
mov
xor
in
push
cltd
fs
sub
cmp
xor
xor
out
pusha
mov
mov
add
pop
sbb
pop
pop
adc
jbe
mov
stc
movsb
test
fadds
lock
cwtl
dec
shlb
jo
loopne
sub
mov
fwait
idiv
mov
aaa
pusha
mov
outsb
int3
hlt
vhsubps
repnz
push
mov
sub
adc
rcll
jecxz
icebp
in
dec
push
and
or
pop
inc
nop
xlat
mov
jp
jge
xchg
mov
push
jle
mov
out
fnsave
mov
sub
jno
shlb
mov
pusha
lods
xor
xchg
sub
pop
imul
ljmp
and
sarl
cmp
es
hlt
ja
or
mov
xorl
jb
sub
lods
pusha
sbb
fadd
mov
das
or
std
fs
out
cltd
rorb
and
nop
aas
addr16
mov
popa
push
mov
push
sub
cmp
and
mov
and
shl
scas
fimull
dec
push
imul
repz
mov
out
mov
jg
dec
test
aas
cmp
push
sbb
mov
repz
xchg
jno
dec
lea
test
mov
xchg
jecxz
pusha
mov
shr
pop
push
sub
fnsave
mov
in
lahf
cs
mov
outsb
xlat
sbb
add
mov
mov
cltd
outsb
dec
push
lds
jmp
fnstcw
repz
adc
popa
cli
lahf
aas
sbb
xchg
ja
pop
pop
orb
cltd
call
cmp
jno
xor
sbb
mov
or
push
mov
dec
fs
imul
mov
xlat
fs
fldt
pop
push
pop
xchg
pop
and
push
das
out
inc
mov
iret
xor
sbb
jge
fldt
lret
jnp
outsb
test
pop
test
fs
cmpsl
nop
pop
or
pushf
popa
pop
lahf
and
jmp
mov
in
fisubs
sbb
pop
mov
lret
jl
clc
ljmp
jno
lock
push
push
test
sub
out
sub
loope
mov
rcll
subb
in
push
lcall
inc
fcoms
dec
push
xchg
add
jge
imul
mov
cmpsb
cmp
cli
add
mov
xchg
xchg
dec
div
push
pushf
das
bound
out
lret
xor
test
adc
cli
push
sub
in
cmp
xchg
popf
and
push
mov
fdivrl
or
push
movsb
out
dec
repnz
or
int
mov
push
inc
jnp
sub
insb
inc
sbb
mov
sbbb
pop
mov
xchg
pop
loop
lret
cmp
inc
fnsave
add
idivb
lea
inc
push
bound
or
out
cli
and
sub
cmp
fcomps
pop
pusha
jmp
lret
cmp
repz
fs
dec
cmpsb
fsubr
add
lea
ljmp
mov
inc
mov
ss
cli
in
or
jmp
cli
sbb
negl
sbb
jp
jno
je
adc
add
xchg
cmp
sbb
push
and
mov
mov
lret
sbb
insb
vorps
mov
jl
neg
xchg
rorb
jae
push
arpl
mov
imul
xchg
lods
loope
mov
stos
mov
and
dec
pop
arpl
cmpsl
xor
mov
xor
mov
lods
js
enter
adc
ljmp
push
call
loope
or
push
into
std
pop
push
pop
fwait
pop
les
add
or
xchg
pop
fistpl
adc
or
mov
test
mov
rcrl
push
lret
xchg
lcall
push
pushf
insl
jnp
jnp
and
adc
pusha
out
repnz
or
imul
xchg
jb
inc
xchg
or
hlt
cld
mov
pop
pushf
aas
fwait
sbb
pop
shll
lods
loope
inc
mov
push
bnd
or
sbb
popa
stos
jbe
add
xlat
or
enter
gs
lret
jne
jae
jle
sbb
push
mov
and
jno
inc
or
cmp
inc
outsl
dec
xchg
shll
in
xchg
insb
mov
and
add
mov
mov
mov
xor
sub
dec
and
movsb
fwait
rclb
int
mov
add
pop
fldt
fs
sub
ret
cs
adc
xchg
jo
out
jne
insl
and
mov
fcom
push
loop
and
mov
xor
push
cmp
sbb
pushf
xor
jb
lahf
fld
lahf
in
cmpsb
inc
repnz
xor
roll
xor
xor
sbb
clc
sbb
dec
arpl
daa
adc
cmp
fwait
ljmp
cltd
adc
test
ret
outsl
imul
mov
sbb
sbb
sub
cltd
sahf
lahf
lret
push
sub
lods
ss
adc
add
dec
pop
mov
jle
outsb
push
push
rcrb
jnp
es
xor
mov
xchg
mov
mov
adc
js
cmp
shr
mov
sbb
cmpsl
add
fmul
aaa
scas
jno
lods
pop
fldenv
mov
jle
test
addb
out
into
stos
in
jl
add
out
mov
adc
xchg
cmp
vmulsd
xor
or
fwait
aam
movsl
lds
sarl
lret
and
es
int3
sub
fwait
call
push
sub
mov
rcll
enter
repz
loope
jecxz
mov
sub
jne
push
pop
pusha
clc
push
repz
stos
rolb
xchg
sub
outsl
stos
mov
dec
fwait
sbb
stc
dec
lds
mov
adc
xchg
mov
lcall
jecxz
add
iret
jmp
or
fldl
xor
cmc
jle
popa
jl
inc
jns
cmc
xchg
lret
pop
daa
xor
and
std
out
add
shlb
jno
jmp
shlb
sub
lcall
or
jbe
dec
mov
xchg
cmp
pop
mov
mov
dec
xor
imul
loopne
jle
insb
pop
scas
cmp
cs
sti
mov
test
pop
xlat
pop
xchg
leave
mov
mov
push
mov
mov
and
xchg
aam
push
call
or
pop
or
xchg
adc
inc
sub
xor
or
add
cli
cmp
lock
inc
mov
out
inc
mov
mov
inc
and
xlat
ds
xchg
lret
fnsave
sbb
xchg
dec
in
mov
inc
jno
popa
cli
jne
dec
jg
stc
jecxz
cmc
icebp
test
mov
push
test
xor
outsb
xor
cmp
mov
add
adc
sbb
mov
loop
sbb
cmpsb
repnz
clc
enter
xchg
cli
sbb
xchg
mov
cwtl
lods
mov
cmp
imull
subb
movsb
hlt
xchg
dec
adc
xchg
lods
sub
rol
pop
into
mov
pop
scas
es
in
mov
xchg
xchg
jno
jae
inc
adc
push
imul
sbb
and
cltd
lcall
mov
and
mov
jg
jb
pop
inc
insb
or
inc
je
pop
shll
loop
sbb
xchg
add
loopne
xor
push
in
sbb
shl
push
stos
sbb
lcall
add
cmp
mov
movsl
sbb
pop
push
hlt
inc
jno
js
lahf
out
hlt
push
inc
les
pop
mov
fdivl
push
mov
adc
inc
push
setl
call
inc
fimull
imul
adc
pop
xchg
fcomp
ja
loop
popa
icebp
pop
aam
mov
out
add
mov
push
stos
imul
pop
addr16
jo
gs
ret
xchg
add
mov
mov
stos
mov
pusha
xor
dec
sahf
arpl
fwait
pushf
or
loope
mov
jb
jecxz
dec
or
sub
push
bound
cmpsl
mov
cmp
loope
mov
mov
add
and
ficomps
js,pt
sub
das
test
ffreep
lods
and
popl
aad
rclb
outsl
push
and
repz
sbb
or
leave
push
test
xor
shll
xchg
adc
mov
lds
lret
adc
xor
xchg
add
and
jno
test
mov
pop
cmp
decb
jp
roll
lds
and
adc
sti
mov
or
in
xor
scas
outsb
mov
mov
test
push
add
bound
mov
adc
pop
push
jp
in
dec
stc
jl
jg
mov
dec
jbe,pn
insb
jne
push
fadd
loop
sarl
xor
sub
xor
or
lahf
or
fxch
aaa
jns
cmp
xchg
lahf
mov
pop
jo
mov
out
jae
sub
pop
aam
mov
push
xor
jl
fcmove
out
mov
mov
lret
inc
mov
sbb
jb
psraw
rcll
pop
out
xchg
in
jl
push
pop
sbb
push
xor
sbb
xchg
movsb
into
sub
push
loop
add
in
mov
pusha
dec
sbb
sahf
add
ss
in
push
nop
mov
nop
stc
enter
test
xor
inc
loop
insb
lret
dec
mov
dec
rcll
inc
xchg
adc
pop
xacquire
movl
mov
rclb
je
leave
hlt
sbb
arpl
sbb
push
cmpsl
jae
inc
lods
pop
out
jmp
mov
ficoms
fldcw
xor
adc
inc
cmp
stos
movsb
daa
movsl
lods
inc
push
push
mov
inc
xchg
dec
adc
dec
pushf
xlat
popf
cmp
out
xchg
jno
mov
jecxz
pusha
pushf
daa
in
out
cmp
sbb
jmp
xor
jge
jns
jno
repz
jnp
sbb
sbb
movsl
jg
imul
jmp
or
repnz
into
jne
mov
fidivrl
mov
lods
lock
add
push
or
loop
mov
fisttps
xchg
pop
shrl
fdivrl
jge
cmp
call
mov
xor
notl
xchg
inc
nopl
int3
test
lret
frstor
push
sbb
mov
ljmp
add
push
or
sub
js
xor
inc
cmovb
cmp
pop
pop
pushf
enter
cmp
enter
mov
jno
imul
repnz
fs
fiaddl
clc
cmp
xchg
fldcw
ret
jge
adc
mov
imul
test
negl
lret
ljmp
or
add
push
push
pop
adc
ret
xlat
testl
adc
cmp
dec
inc
jle
idiv
push
aas
jo
outsb
adc
mov
arpl
add
daa
popf
add
pop
add
int
lods
ficompl
movsl
jo
xchg
xchg
sub
dec
xchg
lcall
mov
and
lock
shrb
js
into
pop
pop
subl
leave
push
or
rorb
mov
mov
xor
test
push
lret
xor
in
pop
jno
and
jb
je
sbb
clc
cs
js
fbld
pushf
ror
aad
xchg
sbbb
sub
adc
clc
add
add
or
mov
inc
jg
push
dec
aas
mov
rcrl
enter
sbb
fs
je
mov
lret
punpckhwd
jg
popa
in
clc
sub
daa
and
inc
cmp
dec
addb
sahf
cmpl
cld
sub
push
aas
cmp
dec
dec
in
sbb
lret
jnp
xor
or
cmc
call
aad
in
xchg
les
xlat
mov
addr16
lock
minps
repnz
mul
fdivrl
jg
push
rcll
push
xor
mov
pop
sahf
dec
movsb
add
mov
push
adc
mov
shl
jg
popa
arpl
add
pop
sbb
push
xchg
rcr
mov
into
xchg
push
push
or
cs
dec
or
push
shr
push
mov
mov
jb
cmc
sbb
data16
out
jle
dec
stos
roll
pusha
popa
mov
and
jl
and
incb
aas
inc
mov
fsubrs
sbb
movsl
push
push
loope
iret
mov
sbb
xchg
scas
lahf
pop
push
cmpsl
xchg
mov
das
adc
sarl
sbb
push
fsubrs
sbb
nop
imul
cli
jbe
aam
push
or
dec
sub
int3
mov
out
movsb
mov
gs
pusha
stos
mov
mov
testl
sub
fcmove
dec
mov
push
into
pop
jle
add
mov
out
lea
outsl
mov
xchg
pushf
bound
or
cwtl
mov
pop
rol
in
sub
fprem1
push
inc
addl
int3
addr16
dec
mov
mov
pop
mov
mov
add
mov
int3
nop
stos
cmp
xchg
mov
ds
mov
pushl
add
mov
stos
xchg
je
xchg
scas
xchg
mov
ja
int3
loopne
mov
sbb
loopne
mov
call
mov
sub
mov
sbb
popa
addr16
icebp
or
pop
outsb
mov
orb
daa
pusha
or
fmulp
andb
lcall
mov
lahf
adc
mov
fnstcw
sbb
sub
lock
jo
sahf
add
mov
xor
fimull
adc
test
mov
push
sbb
jl
mov
adc
bound
mov
pop
jnp
mov
rol
iret
cmp
jae
in
push
lods
xor
outsl
test
jmp
xor
ss
mov
mov
addr16
or
stc
stos
push
jb
push
xor
push
mov
aaa
jne
cmc
push
scas
sub
pop
or
cmp
subb
push
mov
mov
cmp
popf
cmp
fs
ret
std
aam
test
mov
xchg
pop
out
mov
jle
lcall
leave
fwait
cmpsb
test
xor
inc
outsb
mov
or
sbb
int
scas
mov
es
daa
repz
and
mov
ljmp
and
jg
push
outsl
push
lock
gs
lods
mov
and
or
mov
cwtl
pushf
rorl
push
inc
inc
mov
sub
push
cmpsl
xchg
pop
sbb
sbb
enter
adcl
pop
ss
dec
mov
adc
js
outsb
mov
inc
xchg
out
rcll
jne
mov
and
mov
ret
cmp
add
out
fidivrs
cltd
jmp
jecxz
xlat
in
cmp
cmpsb
dec
or
pop
adc
repnz
sub
inc
subb
out
data16
sub
and
xor
std
inc
bound
xchg
lea
ds
fstpl
push
subb
inc
stos
aaa
dec
insb
add
in
out
xchg
insb
fcoms
push
arpl
jbe
cmp
stos
adc
imull
stc
testb
push
mov
add
cmp
mov
cld
rcrb
stos
jle
aaa
sbb
cmp
sbb
pop
xorl
aaa
pop
test
loop
fiaddl
jo
enter
add
mov
cmp
mov
add
rcrb
or
push
mov
cltd
inc
push
fwait
shlb
pushf
call
inc
aam
ret
cld
xlat
pushf
inc
or
mov
into
inc
jnp
insb
cmp
xor
stc
test
fbld
ja
xchg
pushf
lock
push
and
testl
mov
jb
or
inc
pop
lock
and
push
mov
mov
clc
clc
scas
imul
mov
nop
cwtl
mov
mov
fcmove
cmp
in
dec
add
dec
fildll
push
icebp
xor
pop
shll
xor
es
ret
jb
xchg
das
outsl
pop
mov
cs
jnp
push
and
ds
inc
es
push
out
out
aam
sar
sub
fcompl
push
xor
es
cmp
test
inc
mov
pop
mov
mov
xchg
pop
inc
mov
ja
faddl
push
pop
xor
mov
das
add
data16
jns
add
aad
cmp
aaa
lods
scas
out
andl
fwait
push
or
cmpsl
loop
dec
xchg
aam
in
jge
sbb
fbstp
fmulp
loopne
outsl
cmpsl
adc
das
add
xchg
int3
xor
loopne
mov
aaa
push
mov
pop
test
cmpsl
add
cmpsb
sti
sbb
out
mov
xchg
add
adc
imul
adc
pushf
inc
pop
and
ficomps
mov
scas
mov
adc
pushw
stc
and
js
and
clc
xorl
push
inc
dec
and
xor
cmp
lds
popa
loopne
cmp
jmp
imul
adc
sub
pop
jno
xchg
pop
push
dec
scas
jae
jo
xchg
mov
xor
pop
mov
out
dec
jmp
in
mov
xchg
mov
jb
cltd
ret
mov
xor
popf
jae
push
pop
lock
inc
sub
sbb
add
mov
mov
ret
stos
add
sub
pop
test
sbb
sub
jbe
popf
das
push
icebp
jo
xor
fcmovu
push
out
add
lock
xor
or
sbb
pop
inc
add
lcall
jl
les
xchg
lcall
ficompl
andb
cmp
test
push
mov
sbb
popf
pop
add
pop
cmpsb
outsb
je
and
xor
fndisi(8087
mov
mov
mov
xchg
cmpsl
xor
jg
mov
icebp
and
push
inc
out
xchg
int
jge
mov
int
push
hlt
xor
push
mov
add
clc
fistps
rolb
lret
xor
je
add
mov
pop
dec
jae
adc
pop
mov
push
sbb
ds
adc
dec
or
mov
test
push
cs
inc
pop
enter
xchg
push
dec
mov
pop
out
fwait
lods
push
lahf
pop
cmp
push
or
cmp
mov
stos
stos
addr16
ret
and
mov
or
dec
cld
adc
movsl
in
pop
or
push
xchg
xor
xor
cli
jl
inc
xor
inc
xchg
mov
sbb
movsl
mov
mov
ss
inc
fbld
mov
in
xor
add
rorb
enter
sbb
mov
andb
dec
mov
adc
dec
adc
adc
dec
xchg
sub
aaa
fiaddl
out
or
pop
sub
or
sub
push
pushf
mov
push
imul
lea
fsubr
cmp
cmpsb
jle
xchg
lret
inc
aaa
add
mov
add
arpl
repz
cmp
cld
lea
movsl
push
jo
sbbl
ret
loopne
bnd
imul
xchg
ret
dec
ret
push
mov
scas
push
sub
into
pusha
je
inc
cld
dec
cmp
decl
out
dec
or
fucomip
pusha
dec
call
and
movsb
outsb
and
out
mov
sub
std
inc
mov
sti
notb
int3
mov
dec
aad
sarl
outsl
cmp
leave
fisubrl
cli
out
mov
add
ss
lea
outsl
aad
adc
pushf
or
outsl
mov
mov
out
or
xor
jo
ret
aam
lock
sbb
xlat
add
daa
out
dec
scas
outsl
mov
jb
fmuls
subb
scas
jl
mov
inc
sbb
push
mov
push
xor
sbb
sub
add
xor
aaa
mov
in
push
mov
cs
sub
out
stos
cmp
popf
das
add
xchg
popf
pop
xlat
xchg
dec
lods
stc
inc
inc
xchg
pusha
dec
frstor
cmp
mov
jo
adc
std
popf
subl
pop
ja
jle
cs
icebp
insl
inc
loope
cmpsl
dec
push
aaa
dec
shl
out
bound
es
mov
mov
mov
lock
ljmp
pop
inc
jecxz
mov
dec
xchg
pop
inc
ja
inc
shrl
out
inc
data16
xor
jle
sbb
sub
aad
data16
inc
nop
ljmp
sbb
add
imul
outsb
cmpsl
arpl
les
adc
adc
outsb
jb
das
imul
push
jbe
std
xor
fisubrs
jae
cmp
popf
test
jae
sub
xlat
je
xchg
xchg
in
clc
ja
data16
pop
shrb
out
mov
cmc
aad
dec
out
nop
lods
out
pop
add
int3
xchg
int
std
sbb
xchg
test
push
mov
lcall
mov
mov
add
sarb
mov
bound
scas
shl
adc
mov
pop
jmp
inc
hlt
and
add
add
adc
jno
stos
stos
into
push
add
cmc
inc
addl
xor
and
outsl
sub
inc
out
cltd
sahf
in
ds
loop
push
loope
in
cmpb
aam
or
dec
shl
mov
ret
adc
icebp
fs
pop
scas
sbb
mov
out
in
stc
popl
mov
stc
or
test
into
into
out
test
or
pop
sahf
jne
fcoms
add
push
mov
scas
jae
out
xchg
mov
ljmp
fcoml
cmpsb
push
mov
add
mov
aam
adc
mov
xchg
inc
jne
nop
cmp
mov
sti
xchg
cmp
push
ret
out
sahf
adc
hlt
lret
cmpsb
aaa
xchg
and
mov
or
pop
lcall
push
imul
daa
mov
scas
inc
cli
enter
fildl
aas
sbb
mov
jnp
je
fwait
jb
outsl
in
call
imul
sub
mov
out
cltd
jle
in
pop
add
icebp
shrl
sbb
pop
pushf
inc
cmpsl
adc
pop
xchg
xchg
ficomps
in
jns
sbb
pusha
sarl
lea
in
pop
inc
adc
sarb
lock
js
inc
sbb
leave
iret
mov
popa
out
mov
or
push
cmpsl
cmpb
mov
push
out
cs
cmc
cmpsb
jge
clc
jecxz
push
outsb
xor
or
shll
das
and
call
aam
pop
std
scas
int3
mov
push
mov
stos
lahf
fs
loopne
incb
jmp
xchg
mov
nop
xlat
xor
cli
std
xlat
pop
jns
and
ds
call
lret
enter
adc
xlat
fists
pop
sub
roll
and
sbb
dec
push
out
jecxz
idivb
outsl
int3
add
es
cmpsb
clc
test
into
jge
dec
mov
shll
xor
mov
xchg
in
mov
mov
adc
push
pushf
fildl
sti
mov
pop
push
movsl
cli
negl
std
fsubp
clc
mov
inc
jg
lea
push
ss
or
sbbb
mov
inc
testb
add
pop
outsl
loopne
js
sbb
push
in
push
xchg
dec
xchg
xchg
mov
xchg
cmp
pop
aas
insb
or
lret
hlt
mov
fnstenv
jno
adc
test
pop
cmp
cmp
xor
and
pusha
sbb
fsts
xchg
mov
xlat
cmp
jnp
inc
xor
jne
ret
call
jmp
ds
push
loop
lret
jle
pop
call
inc
inc
out
push
gs
fcompl
push
xor
pop
orl
ds
out
rorb
in
out
dec
lret
mov
cld
in
outsl
leave
xor
inc
lea
fwait
and
rolb
push
sarl
ret
sti
mov
gs
push
repnz
pop
pop
cmc
mov
mov
push
xchg
ret
loopne
xchg
ret
push
mul
sbb
out
faddl
jge
jns
pusha
sub
cmp
inc
add
cmp
stos
imul
popf
or
sbb
dec
fnsave
mov
insb
std
inc
psubq
call
xor
mov
fidivl
sbb
push
push
inc
arpl
mov
pushf
cmp
enter
inc
arpl
pusha
inc
inc
imul
iret
sti
xor
out
les
sub
jp
daa
cli
push
sub
inc
into
mov
lcall
push
andl
cmc
mov
in
leave
loopne
xchg
and
test
inc
xchg
das
pop
lds
xor
or
scas
xchg
cmpsl
or
lret
mov
in
jmp
pop
jge
bound
push
adc
popl
dec
jno
sub
sbb
fldcw
lret
lret
cmc
xchg
or
fcomps
je
aas
movsb
sahf
ret
adc
lds
out
lock
sub
enter
xchg
or
cli
test
xchg
push
lds
inc
imul
push
or
sub
mov
jae
fs
push
push
fadds
stos
out
out
add
jns
or
bound
icebp
ret
es
sub
or
sbb
adc
cmp
scas
sub
xor
mov
adc
mov
pusha
fists
jno
sbb
jnp
mov
inc
data16
data16
push
adc
nop
movsb
test
sbb
xchg
sti
adc
jnp
jns
dec
inc
pop
mov
jg
fdivs
inc
mov
dec
aas
hlt
mov
aaa
cli
pop
aaa
cmc
scas
in
lahf
stc
cmp
movsw
fisttpl
stos
sub
mov
add
stos
dec
add
jns
mov
xchg
mov
aam
ja
mov
sbb
aam
loop
pop
sub
pop
sbb
mov
jne
pop
push
dec
dec
lea
mov
push
outsl
inc
pop
mov
mov
dec
inc
movaps
add
mov
lahf
jg
push
je
pop
dec
fwait
cwtl
mov
stc
je
xlat
cmpsl
pop
or
xor
dec
adc
inc
addr16
adc
dec
xor
adc
rorl
mov
out
xor
add
pop
out
jg
cmp
sbb
pop
inc
call
mov
insb
mov
imul
imul
mov
push
lods
dec
arpl
adc
pop
fabs
cs
out
adc
cmp
or
ss
insl
lea
shlb
sarb
stos
lods
inc
push
icebp
mov
out
and
xchg
mov
icebp
mov
rcll
push
cmp
mov
pop
or
in
jle
push
stos
ja
push
push
or
test
jae
loop
insb
dec
addr16
jmp
lds
mov
mov
jge
cmpsl
aad
mov
pop
sub
cmp
push
adc
inc
imul
cmp
mov
fs
dec
pop
add
jmp
loop
out
cmc
insl
fists
pushf
ss
icebp
push
shl
fiaddl
lods
ljmp
mov
fdivs
enter
fwait
add
mov
cld
arpl
cmpsb
out
loope
popa
test
in
scas
xchg
inc
cmc
nop
stos
mov
cs
add
mov
int3
ror
rclb
mov
leave
in
hlt
dec
lahf
lds
xor
clc
out
rcl
pop
xor
push
mov
cmp
sbb
cld
testb
push
ret
lcall
stc
push
mov
xchg
shll
sub
insb
imul
ret
push
push
in
add
nop
pop
sbb
es
shrb
jge
pop
scas
loopne
push
sub
add
ja
pop
out
mov
mov
popf
add
rorl
imul
mov
xchg
cwtl
mov
xchg
sbb
jns
mov
call
sub
shl
and
ret
pusha
es
rcl
adc
dec
inc
int3
jg
pushf
ljmp
inc
xor
and
mov
pop
jae,pn
mov
nop
movsl
in
lret
addr16
mov
dec
mov
jl
aaa
and
ja
nop
pop
arpl
lods
cmc
inc
gs
rcr
xchg
ret
cmp
xor
cld
mov
mov
addl
mov
cmpsb
jp
xlat
mov
scas
and
add
mov
pushf
loop
mov
or
lea
mov
push
mov
popf
popa
mov
inc
xor
inc
cs
pop
pop
stc
mull
push
xor
inc
dec
mov
bound
inc
mov
mov
xor
dec
add
mov
xchg
cld
fbld
setns
mov
sbb
pop
gs
cmpl
xchg
jbe
add
lods
sti
loop
leave
xor
flds
pop
movsb
push
mov
jmp
sar
push
neg
ficoml
outsl
lret
sbb
inc
in
aad
sub
mov
lret
mov
add
cmp
ja
mov
ret
lods
or
xor
and
sbb
aad
mov
lret
inc
hlt
stos
shrl
andl
insb
enter
adc
adc
repz
pop
mov
pushf
sbb
and
or
into
xor
push
incl
mov
xor
movsl
imul
add
xor
adc
cld
sub
aaa
add
in
insl
adc
adcb
jae
push
mov
arpl
lods
push
sbb
pushl
das
mov
clc
mov
in
arpl
loope
pop
or
and
mov
pop
lcall
stos
adc
mov
mov
por
insl
fcom
into
cmp
xchg
add
leave
jns
push
scas
inc
hlt
enter
inc
sbb
fisubrl
pop
orl
mov
shlb
mov
mov
mov
mov
sub
ret
mov
and
mov
insl
test
addr16
sub
pop
inc
je
outsl
in
iret
pop
fidivl
cmpsb
mov
lret
addr16
mov
lea
pop
ljmp
xor
mov
popa
repnz
xchg
push
iret
out
ljmp
push
data16
jb
popa
imull
dec
repz
mov
mov
inc
das
repz
jo
and
mov
push
cltd
aaa
sbb
xor
ret
into
push
shll
scas
aas
out
jmp
cltd
inc
inc
sbb
push
mov
idivb
lret
cmp
bound
cmp
fldenv
fdivr
sub
push
into
cld
inc
dec
adc
sbb
inc
lock
arpl
cmpsl
das
inc
outsb
in
xchg
in
ret
sub
or
or
out
or
xor
push
xor
cmp
movsb
xor
loop
xchg
pushf
pop
push
ficomps
movsl
mov
xor
aad
inc
shll
dec
stc
xchg
jecxz
or
adc
int3
ss
test
imul
jnp
movsl
pop
js
fldenv
addr16
mov
cwtl
imul
pop
cmc
fwait
jno
pop
iret
inc
loope
pop
pushf
dec
mov
jns
push
lahf
inc
or
push
inc
jg
dec
lds
push
outsb
sahf
test
or
stos
mov
pop
mov
and
pushf
in
roll
shrb
mov
cltd
jbe
push
aam
jmp
icebp
adc
lcall
adc
or
test
fldt
cld
sbb
mov
sbbb
dec
xlat
xor
pop
or
or
mov
jmp
mov
inc
data16
jg
adcl
or
inc
sub
leave
ret
add
fisubrs
movsb
jl
adcl
addr16
mov
out
cmp
ja
test
jbe
je
jbe
jbe
pusha
jns
aad
je
jp
mov
and
iret
add
or
scas
cmp
xlat
lods
aad
jp
aam
mov
andb
out
sti
repnz
ret
fldl
cs
popa
enter
les
mov
xchg
hlt
mov
sub
push
hlt
test
sahf
or
imul
adc
ret
fstpt
enter
push
xchg
ss
in
add
daa
lahf
test
mov
test
lods
jmp
sti
jbe
pop
mov
mov
xor
nop
addr16
fsubl
mov
and
adc
xchg
jnp
popf
outsl
push
pop
inc
sub
popf
sbb
dec
pop
push
enter
shlb
mov
das
in
inc
xor
sti
hlt
mov
jnp
testl
and
fimuls
mov
push
adc
mov
fldcw
push
mov
jnp
and
fxam
pop
jns
stos
xchg
cmp
sbb
hlt
fcmove
pop
shll
xchg
pusha
repnz
xchg
negb
inc
dec
cltd
or
adc
mov
in
mov
leave
imulb
imul
pop
dec
es
mov
cli
js
movsl
jmp
cmp
add
pushf
test
xchg
stc
or
ret
cmp
hlt
cmpsl
fmul
pushl
lods
repz
rcrl
mov
or
lret
mov
lock
cld
lods
cmc
xchg
out
dec
gs
xor
xor
pop
sub
cmpsb
mov
inc
and
ret
repnz
icebp
ja
mov
ficomps
outsb
aam
and
push
aas
idivb
pop
jb
out
pusha
pop
xchg
ja
inc
fstl
mov
jecxz
and
adc
lret
clc
add
sbb
xlat
jge
adc
mov
fnstcw
iret
mov
and
cld
mov
imul
inc
testb
mov
adc
cmp
jmp
icebp
lea
sub
push
jb
pop
inc
pop
clc
jo
mov
cmp
out
lea
cs
repz
mov
ret
lods
fisttps
push
addb
sti
and
aad
inc
jno
or
or
push
dec
lret
adc
mov
mov
fsubrp
lods
sub
jbe
insb
pop
xor
scas
sbb
jno
inc
lret
push
adc
mov
mov
scas
push
push
fildll
cltd
fbld
cli
fcoml
pop
inc
subl
sahf
xchg
mov
outsb
nop
jecxz
lret
adc
mov
lods
dec
add
outsl
inc
push
push
dec
sub
cmpsb
xchg
or
inc
cltd
and
dec
movsl
stc
setne
stc
push
push
mov
leave
insb
fcomp
mov
xchg
cld
mov
int
imul
sub
shll
push
mov
cmc
icebp
popa
lods
into
test
ret
adc
mov
or
stc
and
je
je
xchg
pop
inc
stos
out
iret
outsb
ficoms
ret
faddl
xchg
inc
nop
xor
push
insl
inc
outsb
lods
push
imulb
mov
jg,pn
xor
pop
xor
fnstenv
and
dec
fcmovnbe
in
movsl
lods
mov
jns
sti
push
aad
mov
sbb
ret
in
ds
shl
sbb
xor
loopne
mov
push
fistpll
inc
test
jmp
sti
loop
jp
test
sahf
rorl
sub
repz
ret
inc
mov
scas
xor
mov
imulb
dec
popf
xchg
clc
mov
das
shr
pxor
or
mov
pop
insl
xor
imul
or
mov
mov
stc
sti
pop
jmp
punpckhbw
cmp
pop
aaa
mov
movntq
pop
xchg
mov
and
push
fcoms
rclb
sbb
add
adc
sbb
mov
or
lahf
and
in
addr16
xlat
popa
decb
mov
xchg
pop
ljmp
aaa
pop
iret
nop
pop
repz
mov
xchg
push
push
sbb
push
push
ds
xchg
cld
and
mov
sbb
pop
es
les
jg
ret
fnstsw
js
sbb
dec
mov
pop
icebp
pop
clc
pop
imul
aaa
out
repz
sub
push
sub
lods
adc
sub
int
xchg
in
rorl
push
inc
xchg
mov
clc
fadds
mov
mov
adc
or
and
fcomip
mulb
and
xor
jo
das
mov
inc
xor
jg
mov
fs
sbb
nop
hlt
inc
arpl
add
pop
pop
mov
clc
insl
sbb
adc
xor
add
popa
loopne
leave
addl
dec
fildl
push
repz
out
aas
repz
and
mov
push
std
clc
sub
fsubrl
dec
test
mov
xchg
or
mov
stos
sub
mov
fldlg2
jp
sub
jo
pop
fwait
sbb
add
mov
fs
icebp
test
pop
push
cld
cmp
mov
and
lds
insl
ljmp
push
call
dec
lahf
fldenv
xchg
adcb
hlt
icebp
sarb
popf
dec
adcb
sub
or
jns
sub
cwtl
and
pop
dec
mov
add
clc
lret
fstpt
std
nop
insb
test
sub
push
adc
loopne
inc
xchg
sbb
jle
xchg
aad
in
lock
negb
push
ret
cmp
sahf
loopne
repz
inc
mov
addr16
je
nop
dec
cmpsb
and
push
shrl
inc
sbb
push
dec
aaa
mov
dec
xchg
add
minps
insl
jo
jp
mov
xchg
inc
rcl
ret
pusha
bound
adc
mov
mov
shll
insl
or
push
fwait
lods
sbb
mov
inc
icebp
movsb
into
add
fidivrs
pop
cli
mov
xchg
pop
imul
arpl
cs
mov
lock
fsubrp
pushf
pop
xor
subl
add
cltd
mov
shr
jmp
int3
push
xor
pushf
in
insb
idiv
inc
lcall
jne
stos
into
movsl
fistl
icebp
inc
out
jo
hlt
icebp
sti
inc
aas
ljmp
add
mov
pop
scas
mov
dec
dec
test
sbb
repz
xchg
mov
mov
lods
jns
fstp
xor
dec
cs
ljmp
xor
cmp
and
mov
dec
cmp
pop
and
jbe
cmpsl
cmc
ror
stc
push
repz
ret
mov
sub
addl
mov
cmp
stos
sbb
push
mov
pop
xchg
mov
xlat
hlt
adcb
inc
sub
imul
jb
out
aaa
xor
fadds
scas
mov
sbb
repz
jl
nop
rorb
xchg
xor
addr16
adc
xor
fwait
pop
ss
dec
pop
push
js
mov
xor
repz
fidivrl
add
shlb
add
rcll
in
mov
mov
outsl
mov
xchg
rorl
stos
sub
sarb
shlb
xchg
add
pop
adc
cmpsl
mov
dec
mov
ficomps
lods
stos
xor
js
cltd
and
ljmp
add
stos
loope
and
or
push
dec
pop
cmp
xor
or
xor
dec
add
cmp
lock
imul
mov
jnp
jne
enter
in
xchg
jno
shlb
out
mov
and
into
sbb
inc
mov
js
xchg
repz
cmp
fnstenv
out
jo
mov
shll
icebp
xor
aam
sub
into
lods
sbb
mov
push
movsb
js
mov
daa
inc
imul
dec
leave
sbb
ljmp
insl
xchg
subl
mov
push
sbb
loopne
xor
sbb
ret
in
add
je
stos
mov
sub
add
jno
xor
pop
das
in
xor
scas
lahf
les
popf
jmp
adc
or
xor
test
jo
test
rolb
sub
stos
and
insb
out
sub
push
and
leave
nop
addb
sbb
add
push
jmp
mov
mov
dec
rorl
xorb
pusha
cmp
cmc
jo
xchg
mov
pcmpgtb
cmp
pop
jbe
jo
imul
js
xorb
inc
aaa
jecxz
cld
ja
dec
jnp
jmp
je
imul
int
cmc
adc
cmp
mov
push
push
cmpl
push
cmp
das
and
icebp
and
jp
dec
test
sub
loope
gs
xchg
mov
daa
addr16
jge
out
stc
fiaddl
sub
imul
xor
adc
push
jno
inc
lret
and
sub
fadd
cmpsl
pusha
loop
or
cmc
xor
push
clc
jle
fstp
mov
mov
jg
sub
repz
divl
movsl
shrb
fs
sbb
clc
add
jbe
cmc
xchg
or
insl
movsl
push
sbb
sub
stos
out
adc
xor
mov
cld
in
push
push
lahf
in
adc
cmc
ljmp
adc
dec
xlat
pop
add
das
mov
or
cmp
lahf
or
into
fucomp
fcoms
mov
cmp
push
add
dec
insl
loop
add
int3
and
loop
and
les
mov
stos
sbbl
pop
subb
jne
mov
sub
repnz
sahf
filds
in
push
and
adc
pop
leave
pop
and
push
les
cmp
add
push
ret
ficompl
pushf
xchg
int3
in
test
jle
test
loope
adc
xchg
dec
scas
mov
pop
and
sub
xor
mov
sar
mov
outsl
or
push
push
dec
lds
loope
out
scas
jb
and
or
ds
sub
cmp
fisubrs
imul
xor
jb
pushf
rcrl
daa
mov
addr16
push
mov
xor
icebp
call
dec
sbb
std
sar
mov
cmpsb
sub
adc
shll
pop
dec
lds
jmp
ja
xor
out
and
or
cmp
and
out
cmpsb
xchg
mov
dec
cmp
cmp
and
pop
jnp
inc
lds
fisubrs
sarl
or
sbb
in
fcomi
arpl
test
mov
mov
sbb
jbe
mov
insl
shlb
cltd
mov
cmpb
pop
call
inc
sub
ret
add
gs
aaa
rcll
nop
arpl
test
xchg
sbb
xchg
sbb
fidivs
cmp
dec
adc
adc
xchg
pop
sbb
fisubl
mov
aaa
add
fdivr
and
test
sbb
push
inc
sub
lock
mov
clc
loopne
adc
mov
sbb
nop
lods
xchg
pop
neg
popa
ss
cmp
sbb
add
les
popa
std
cmp
pushf
push
xor
push
ss
jno
outsb
ret
out
mov
xchg
sub
mov
mov
adc
ror
fs
popa
jnp
in
mov
push
das
scas
dec
pushw
lret
shlb
call
mov
inc
aam
cmp
incb
pushf
lcall
push
pop
mov
jmp
or
test
cmpb
sbb
sbb
stos
movzbl
shrl
fnsave
cmp
mov
mov
jl
ds
pop
dec
imul
out
fsubl
push
shlb
sbb
inc
xor
cmp
lods
icebp
xor
aaa
int3
cmpsl
push
pop
add
out
icebp
dec
inc
push
xchg
pop
rcrl
cmp
sub
dec
and
hlt
xor
sbb
sar
sub
add
in
adc
out
fwait
inc
xchg
adc
jbe
rcr
pop
add
loopne
negl
mov
cli
or
xor
xchg
inc
mov
sbb
cmc
fidivs
insb
lods
xchg
pusha
mov
enter
mov
sbb
cmp
jecxz
ret
cli
xchg
pop
xlat
pushf
mov
or
xchg
jmp
je
loopne
in
fstpl
cmp
rsm
les
push
and
fistps
pop
fists
xlat
or
xchg
xchg
divb
xchg
adc
test
xor
ret
std
bsr
aas
and
and
loop
cmp
icebp
stos
stos
add
pop
aam
and
stos
sbb
jnp
xchg
xchg
push
xchg
push
popf
mov
or
cmp
ja
rorb
out
mov
stos
pusha
pop
lret
popa
push
or
sub
mov
xchg
push
adc
push
pmullw
dec
or
pusha
push
push
or
push
or
jmp
js
nop
jmp
popf
adc
es
sti
add
in
mov
jmp
jo
mov
cld
or
adc
inc
cmp
inc
jnp
inc
mov
data16
sbb
dec
push
add
test
aam
sub
out
cmp
sub
cmpsl
sbb
lcall
push
lret
lods
sub
mov
sbb
packuswb
addr16
enter
add
mov
addr16
sub
popf
stos
insb
xor
push
stc
out
sahf
push
call
add
cltd
arpl
push
test
shll
repz
sbb
je
xor
mov
dec
xchg
cmp
adc
sti
mov
sub
shll
push
scas
imul
hlt
mov
les
or
ret
fidivs
adc
nop
loop
push
add
mov
xchg
sbb
stos
inc
cs
mov
mov
loop
pushf
aas
mov
dec
arpl
inc
pushf
ljmp
sub
fcoms
mov
dec
inc
sti
nop
add
pop
adc
test
push
cmc
inc
imul
and
test
leave
mov
jg
into
xor
icebp
aam
fdivl
div
cmpsl
adc
push
sub
sbb
push
lods
jle
dec
in
push
add
mov
mov
pop
mov
lret
insl
sbb
cmc
mov
movsl
test
mov
sub
lods
sahf
mov
movsb
xor
cs
dec
inc
fistps
xor
mov
inc
xorb
jmp
and
and
stos
mov
icebp
inc
mov
sti
mov
xlat
fcom
mov
xor
out
pop
mov
sbb
mov
cmp
not
aad
jo
mov
inc
hlt
in
jecxz
push
subl
mov
pop
jge
movsl
xchg
or
fisubl
push
lods
outsb
in
lcall
shrb
aas
mov
mov
pop
cmpsb
int3
dec
add
sbb
mov
lret
rol
pop
mov
adc
pop
mov
popf
sub
jo
cmpsl
scas
sub
mov
dec
sbb
add
outsl
bound
icebp
push
and
xor
xorb
sahf
arpl
push
int
sbb
cld
sbb
movsb
jl
repz
fldenv
loop
mov
dec
stc
test
pop
cltd
call
aam
cmp
out
test
mov
in
pop
or
push
add
adc
dec
jge
js
adc
and
leave
inc
mov
cmp
and
and
inc
imul
in
adc
scas
dec
std
xchg
mov
jle
test
mov
adc
jg
mov
jae
jmp
lock
pop
test
mov
xor
fadds
adc
prefetcht2
inc
out
fucomp
mov
inc
jno
out
fwait
mov
mov
test
cltd
clc
movsb
mov
pop
push
dec
sub
push
nop
lods
jl
jno
jmp
lea
addr16
clc
fstps
imul
sahf
pop
ret
mov
fcomi
out
imul
inc
bnd
in
or
adcl
adc
and
in
fmuls
inc
fmuls
mov
sbb
out
mov
push
cli
into
mov
scas
scas
jae
sub
adc
mov
insl
xchg
sbb
inc
jno
sbb
sub
adc
sti
dec
jle
fnstsw
and
xor
rorb
xchg
lds
dec
ret
xchg
and
or
inc
jge
xlat
push
jmp
xchg
popf
push
jp
out
int
jle
cli
popf
cmp
daa
mov
pop
rcrl
xchg
xor
loopne
pop
dec
hlt
js
ret
rdmsr
push
std
xlat
inc
pop
shrb
hlt
pusha
loope,pt
addr16
xchg
std
jmp
fwait
imul
jno
sub
inc
ret
cs
jl
inc
adc
mov
psllq
pop
mov
aaa
addr16
hlt
inc
aam
or
pop
aas
in
rorb
mov
fwait
jmp
pop
mov
dec
aam
adc
ficompl
push
or
xchg
fistl
pop
gs
xchg
test
or
or
mov
test
xor
mov
pop
cwtl
jg
test
jg
mov
daa
mov
sub
mov
or
sahf
xchg
outsb
pop
and
mov
cli
xlat
mov
js
int3
lcall
cmp
out
jo
pop
cwtl
jb
dec
cmp
ds
sbb
push
es
stos
pop
mov
mov
adc
xchg
mov
daa
sbb
in
push
jae
sbb
stc
leave
pop
jb
mov
add
cmp
scas
iret
sub
cwtl
inc
loope
outsb
faddl
outsb
stos
xlat
jne
rorb
inc
das
cmp
incb
fsubr
adc
xchg
mov
adc
or
jnp
sub
sbb
mov
lret
pop
dec
in
cs
lret
cmpsb
mov
les
ljmp
pop
outsl
cmp
into
add
cwtl
and
jne
mov
and
jb
pop
xchg
testl
ss
fmulp
mov
pop
cmp
push
and
adc
test
jnp
mov
and
mov
out
mov
push
push
push
adc
adc
sub
cli
mov
sub
add
dec
es
pop
xchg
xchg
mov
subb
sti
jb
popf
mov
inc
pop
loope
aaa
mov
mov
pop
leave
ret
cmpsb
leave
loope
cmp
xchg
mov
sub
mov
xor
arpl
ret
push
sbb
cs
push
push
and
in
sub
mov
dec
pusha
data16
out
jl
jp
lods
inc
popa
jp
enter
mov
fsubs
push
mov
dec
jbe
fldl
add
mov
outsb
xchg
lock
add
adc
leave
xor
xor
cltd
or
daa
fdivrs
sti
fwait
addl
xlat
pop
sbbb
xor
loop
cmp
std
xor
dec
call
lods
dec
sub
pop
mov
xchg
ss
push
mov
inc
pop
mov
jl
xchg
sub
xchg
out
adc
adc
ljmp
arpl
fnstenv
int
and
xchg
lock
nop
push
rcrb
stc
xlat
xchg
jecxz
mov
pop
popa
ficompl
mov
xlat
and
push
adc
gs
sub
sbbb
cmpb
sub
adc
in
mov
in
pop
xchg
jne
test
dec
into
dec
inc
mov
dec
push
lcall
and
out
pop
scas
jmp
repnz
dec
fiaddl
mov
jnp
insb
in
mov
sbbl
jo
shrl
call
scas
lret
fs
xchg
loope
sbb
lahf
test
out
jl
lock
mov
pop
sar
leave
clc
adc
and
popf
bnd
pop
loope
inc
dec
sti
sbb
out
insb
movsl
stos
or
lock
mov
inc
sbb
lret
ja
pop
pop
cli
push
or
push
adc
inc
sub
std
jnp
jp
iret
std
shl
enter
aam
lods
es
sub
ror
sahf
rorl
adc
pushf
xor
sahf
pop
xchg
js
ljmp
mov
jl
lret
imul
in
ljmp
jge
pop
ds
enter
mov
push
fcmovb
cmp
xchg
lret
je
pop
std
dec
cld
mov
inc
cmpsl
xchg
cmpsb
shrb
mov
inc
das
dec
xchg
dec
mov
es
sub
mov
popa
jae
mov
and
push
xor
jns
rorb
adc
mov
mov
inc
sbb
shlb
cmpsb
lods
add
mov
mov
xor
stc
out
sbb
cld
mov
cmp
adc
rcrb
or
ret
in
fsub
jmp
aam
mov
leave
cmp
loopne
xchg
js
mov
scas
xchg
push
and
mov
js
xor
mov
hlt
cli
pop
pop
dec
insl
fwait
jo
sahf
dec
mov
gs
sub
jb
cltd
rorb
dec
sahf
in
fsubl
data16
out
in
ds
cmpb
xlat
stc
cld
std
inc
cs
negl
std
jl
pop
sbbl
mov
imul
or
fimull
lret
fistpll
and
jb
shll
scas
sub
scas
sahf
sub
sub
ficoml
pop
mov
push
movntq
out
jg
pop
dec
pop
push
repnz
outsb
xor
jnp
cmp
in
cs
loop
jne
stos
ljmp
cld
sahf
adc
test
fwait
xor
scas
test
std
addr16
cmp
pop
stc
clc
int3
repnz
outsb
out
clc
stos
lret
mov
mov
stos
xor
repnz
gs
sub
insl
or
sub
mov
arpl
je
lret
push
push
mov
inc
test
fcoml
jnp
inc
lahf
les
int3
push
mov
dec
inc
xchg
fistpll
jae
xor
and
pusha
mov
add
pop
and
adc
fmuls
jecxz
jmp
stc
into
sbb
sub
sarb
inc
jmp
sub
push
das
xchg
add
sahf
pushf
jl
adc
adc
adc
movsb
rcll
fsubr
pusha
pop
stc
ror
pushf
pop
popa
ret
xchg
test
int
insl
push
xor
pushf
andb
je
dec
ds
es
sbb
cld
pop
sbb
call
jne
adcl
mov
pusha
mov
sahf
push
jb
xlat
call
sbbb
cmp
adc
mov
jg
push
sbb
cli
insl
addr16
das
pop
push
out
fistps
iret
mov
xchg
in
push
inc
mov
repz
adc
push
data16
inc
add
or
fld
add
subb
ret
out
push
insb
loope
sub
xchg
jbe
cmpb
outsl
jno
in
mov
dec
dec
sbb
add
jno
cld
fsubrl
sbb
xchg
jo
push
jnp
push
jnp
pop
mov
add
rcl
add
rcrl
cwtl
inc
test
or
ds
leave
das
ds
xchg
xchg
rcr
popf
push
and
in
mov
inc
scas
or
sub
into
sbb
lret
int
vmread
dec
lret
pop
jb
sub
jl
xchg
xchg
dec
mov
lahf
sbb
adc
fldcw
fs
std
arpl
rcr
test
lods
cltd
icebp
xor
hlt
xor
jg
inc
and
pop
add
test
test
jmp
or
xor
xchg
stos
dec
dec
aam
or
stos
frstor
add
popf
mov
jne
mov
cmp
clc
dec
jne
jns
scas
es
dec
cmpsb
xor
jb
in
insb
sub
in
sbb
sbb
sbb
dec
mov
push
inc
xrelease
out
mov
push
popf
pop
sbb
add
sub
aas
mov
ss
in
push
rcll
push
add
push
mov
push
into
leave
xchg
sarb
loop
ljmp
mov
mov
inc
mov
lods
loopne
ljmp
mov
xor
repnz
xlat
add
insl
pushl
fnsetpm(287
cmp
mov
in
cmp
mov
in
xchg
xor
mov
xor
loope
mov
sub
in
mov
push
ret
add
pop
jg
push
xorb
fs
repz
loope
cmpsb
mov
push
jle
iret
ds
or
scas
mov
dec
mov
faddl
fisubrl
push
leave
popf
xor
shlb
xor
outsl
mov
fldt
mov
dec
pop
adc
pop
mov
cwtl
jg
pop
push
add
sub
mov
mov
jns
sbb
outsl
lds
ret
int
and
push
lods
rcll
fisttpl
cli
repnz
cmp
mov
leave
dec
adc
loopne
mov
jns
lock
out
sbb
adc
rol
sti
dec
ficoms
inc
and
outsl
xor
sbb
rcrb
jno
popa
ss
sub
jmp
dec
jp
mov
dec
xor
cmp
shrb
jmp
cs
loop
xchg
and
mov
sbb
call
out
divl
sti
adc
and
in
in
adc
xlat
and
lods
mov
inc
cmp
sbb
data16
nop
dec
mov
dec
fnstcw
notl
sbb
mov
mov
les
out
jp
stc
inc
pop
pop
or
dec
xchg
mov
or
jge
fdivl
ret
mov
insb
jnp
test
cmp
inc
mov
fcoms
in
jb
mov
shrb
icebp
dec
stc
or
imul
cmp
mov
sub
cmpsb
pop
mov
mov
sub
aas
pop
movsb
loope
addr16
in
repnz
outsl
mov
push
cltd
mov
add
pop
in
pop
mov
movsl
mov
cmpsb
xlat
push
pop
mov
test
sbb
push
cmp
inc
inc
lcall
mov
imul
test
or
enter
add
mov
mov
movsb
mov
js
out
adc
xchg
imull
jae
js
fs
imul
popa
inc
xor
cmp
leave
lods
fnstenv
lock
fcmovu
push
pop
or
cli
int3
inc
inc
aas
loop,pt
rcl
int3
mov
lods
jg
jo
leave
inc
push
inc
fdivl
cmp
pop
out
xchg
inc
mov
filds
enter
mov
xor
adc
lock
rol
sub
bound
sti
mov
jbe
dec
cld
ja
lcall
insl
sbb
cmpsl
jmp
cltd
inc
or
mov
call
in
sbb
adcl
fistpl
inc
jbe
lahf
es
xor
fcomi
sti
fsubl
fld
cmc
repz
jg
mov
daa
popa
dec
mov
jno,pt
mov
or
in
fdiv
inc
sub
xchg
inc
js
mov
lahf
push
ret
aas
mov
lcall
dec
cmc
jns
cmp
push
mov
adc
xor
in
jl
xlat
lcall
mov
jno
ret
fucomp
mov
out
shll
fnstsw
dec
repnz
sahf
dec
imul
clc
and
xchg
or
add
mov
xchg
push
cmpsb
mov
mov
pop
inc
in
adcb
kxorw
xor
lods
cli
es
pop
fidivl
movsl
mov
dec
push
cmp
pop
jge
into
jge
push
enter
and
pop
out
imul
and
fs
lods
jmp
ret
rorb
ljmp
sbb
push
inc
sub
inc
sbb
push
or
xchg
dec
xchg
arpl
and
fisubrs
data16
xor
lret
mov
aaa
pushf
jo
lds
out
pop
cmp
mov
xchg
mov
adcb
xchg
test
mov
xchg
dec
mov
cmpsb
cmp
or
shr
mov
mov
sbbb
inc
clc
push
test
enter
mov
mov
cltd
mov
xor
add
fdivs
dec
cmp
sarl
inc
xor
sub
repz
mov
and
jmp
dec
push
sar
mov
jg
test
mov
pop
xchg
pushf
shrb
data16
sbb
insb
fwait
dec
pop
fists
jmp
fidivrs
loope
dec
cwtl
mov
jae
out
sarl
jp
adc
dec
push
out
lret
and
adc
cs
daa
jo
mov
sbb
int
fcomp
adc
and
push
xchg
ja
cld
dec
mov
push
in
cwtl
sub
push
sbb
sbb
mov
loope
pushf
lcall
push
xchg
loopne
fstpt
mul
and
mov
test
int
out
jno
rclb
cmp
pop
cwtl
fcmovnb
jecxz
lcall
in
mov
sub
mov
cmp
inc
add
add
enter
and
popf
push
mov
hlt
imul
push
sub
dec
jge
and
and
push
mov
dec
sbb
lcall
jns
and
outsb
jp
push
filds
push
lods
dec
adc
rcl
movl
and
in
cmpsb
inc
out
aam
jbe
iret
xchg
inc
cld
loope
daa
cmp
gs
adc
or
subl
or
adc
sti
call
int3
mov
mov
push
push
jge
ds
cmpsl
push
test
push
sbbb
cld
popf
movsb
dec
stc
sarl
rcll
adc
loop
pop
pop
cltd
ja
mov
nop
jl
or
mov
shll
mov
dec
cmp
ret
pop
dec
aad
push
add
enter
imul
push
mov
rorb
jne
push
in
test
sub
xor
mov
mov
repnz
popa
and
push
pop
push
dec
mov
push
adc
mov
ret
mov
mov
arpl
icebp
push
jne
inc
dec
lods
push
mov
sub
test
xchg
or
inc
minps
ss
hlt
xchg
gs
jno
jne
push
adc
int3
push
pop
inc
movq
pop
mov
push
mov
fmul
jne
rol
cli
repz
loope
in
xor
push
dec
lods
inc
jl
cmp
rorb
cs
pop
and
roll
cmp
int
in
in
jno
out
xchg
mov
hlt
cmpb
sbb
lods
scas
int3
mov
mov
pop
add
mov
adc
subl
cli
test
pop
rol
stc
sbbl
ss
push
pop
dec
dec
jl
push
cmpb
shll
fdiv
sub
or
or
sub
add
pop
into
roll
imul
push
xchg
jge
imul
cmpsb
mov
jg
mov
pop
ljmp
in
scas
cli
pop
xor
adc
out
stos
push
loope
pop
pop
pop
add
sub
dec
cs
test
je
cmpsl
cmp
push
xor
outsb
sub
adc
jmp
rcll
lock
push
testb
mov
dec
pop
jmp
ljmp
dec
adc
lret
gs
jnp
lcall
pop
add
mov
mov
add
fwait
pop
mov
sti
pop
arpl
ficomps
ljmp
in
fisubs
bound
mov
fwait
and
dec
lahf
jl
cmp
mov
js
sub
aad
add
pop
leave
repnz
sarb
dec
mov
adc
pop
lds
mov
or
or
popa
movsl
xlat
movsl
or
daa
xchg
shll
mov
mov
sbb
aas
xchg
shrb
push
loope
cmp
jae
in
cld
lahf
xchg
xchg
lcall
movsl
jnp
sti
add
sarb
ljmp
lods
stc
mov
adc
daa
lahf
push
xor
inc
or
imul
inc
or
frstor
dec
jb
outsb
lret
xor
xchg
ss
into
add
icebp
mov
rorb
aaa
sbb
movsb
pushf
sbb
push
lods
cmp
xor
fcmovnbe
dec
das
iret
outsl
scas
dec
pop
ja
scas
mov
aas
or
dec
or
push
mov
adc
pop
stos
popf
in
lret
int
lahf
lock
jnp
fbstp
enter
outsl
xchg
call
or
rclb
aas
mov
jl
sbb
clc
lods
cmp
push
add
sub
inc
leave
dec
nop
pop
roll
fsubrl
ret
push
lret
sahf
call
shrb
dec
mov
lahf
cmp
in
xchg
xchg
movsl
and
das
gs
dec
xchg
pop
data16
xor
add
push
stc
stos
jge
mov
int
pop
faddp
sbb
rol
add
out
add
sub
pop
movsl
stos
fs
cld
adc
mov
sbb
hlt
push
shl
leave
xchg
inc
les
icebp
mov
leave
push
imul
pushf
pop
push
push
inc
jne
push
sub
push
cmp
add
call
mov
lret
and
mov
dec
mov
mov
push
imul
dec
sub
push
mov
xchg
push
mov
add
xchg
pushf
dec
add
jns
mov
push
outsb
cmp
lds
mov
test
mov
dec
movsb
mov
sbb
push
clc
pop
pushf
lods
pop
lret
jnp
jnp
movsl
mov
mov
and
inc
mov
jge
je
mov
mov
pop
std
fidivrs
mov
pop
gs
lock
es
movl
pop
fdivl
lods
push
leave
in
sbb
mov
cmp
data16
mov
add
icebp
and
cmpsb
insl
or
pop
push
xchg
or
sbb
lahf
icebp
and
in
push
sub
sbb
testb
jb
mov
in
test
xor
je
ret
insl
xor
push
mov
adc
adc
call
dec
inc
mov
jp
dec
dec
idivl
insb
and
fisubrs
sub
jl
flds
mov
mov
jp
fiaddl
xchg
add
rolb
popa
add
loopne
mov
jnp
push
je
ss
mov
pop
xor
sub
jge
lcall
sbb
mov
lcall
dec
js
add
pop
adc
jmp
scas
xor
fbld
test
mov
adc
push
inc
std
and
test
data16
dec
lods
inc
cld
mov
push
icebp
rclb
ljmp
ret
xor
xchg
push
pop
mov
cmp
je
cmp
xor
iret
pop
push
push
in
ss
daa
fnstcw
icebp
push
aam
int3
mov
adc
bnd
add
cmpsl
je
xchg
and
mov
push
fistpl
in
movsl
dec
sbb
jbe
sub
adc
lock
loope
out
mov
imul
mov
leave
dec
xor
push
sub
out
or
hlt
push
and
movsb
dec
cmp
pop
repz
jl
lahf
imulb
mov
sub
pop
popa
ficomps
jne
adc
out
cli
das
xor
jecxz
adc
jb
jne
subb
push
shlb
sub
jl
xchg
xlat
dec
add
movb
adc
pop
loope
pushf
inc
and
scas
adc
mov
shrl
shll
dec
inc
xchg
fnstenv
into
movsl
xor
mov
popf
mov
add
mov
add
call
lods
xchg
and
adc
repnz
pop
or
lock
pop
add
imul
dec
daa
bound
loopne
jge
mov
fists
push
jbe
jo
mov
leave
negl
ret
arpl
jbe
inc
push
in
movl
add
xor
dec
stos
imul
xor
lock
inc
mov
pushf
enter
notl
sub
cmpsl
aaa
push
xchg
je
xchg
pop
cmpsb
sub
es
mov
cmpsb
sahf
lods
fidivs
push
sub
shlb
sahf
add
dec
shl
sub
dec
nop
fcomi
in
or
mov
arpl
dec
jb
mov
sbb
sbb
mov
fnstcw
adc
and
xchg
aas
pop
mov
dec
sbb
inc
lods
ljmp
cs
mov
stos
mov
pop
mov
pushf
rolb
das
pop
sub
outsl
dec
cmpb
sbb
fdivrs
push
add
rcrb
mov
cmp
dec
xchg
aad
mov
add
sti
push
inc
push
xchg
icebp
loopne
jns
ds
xchg
inc
dec
dec
pop
cmpsl
xlat
sub
lret
add
adcb
jge
push
sbb
lcall
sbb
xor
jne
fwait
xchg
loop
ret
pop
in
and
ficoms
push
jns
lods
out
fdivrp
jge
clc
xchg
mov
add
adc
jmpw
mov
insb
xchg
jecxz
shrb
xor
stc
mov
aaa
roll
xchg
add
scas
xor
xor
jp
sbb
movsl
or
and
adc
xor
sbb
dec
xor
movsl
sub
out
iret
cli
leave
add
xchg
dec
jl
mov
mov
or
xchg
inc
loope
push
js
push
xor
adc
pop
mov
aas
mov
cmp
jp
leave
sti
add
jl
test
dec
repz
aas
pop
ret
ss
ret
xor
mov
mov
cmp
mov
xor
mov
xchg
data16
dec
lret
xchg
pop
sub
outsb
imul
les
mov
ja
loop
pop
dec
lahf
out
adc
mov
faddl
push
pop
pop
std
repnz
std
inc
cmp
add
movsb
push
sub
call
clc
jae
cmp
or
fmull
dec
movsb
dec
adc
jmp
int3
mov
cmc
push
cwtl
sbb
movsl
out
pop
cli
loop
push
loop
dec
sarb
cmpsb
stc
jo
and
sti
dec
jge
je
adc
insb
shlb
or
mov
ficompl
in
js
outsl
or
mov
mov
data16
loop
sbb
stos
les
in
mov
xchg
sub
sbb
in
mov
mov
int3
adc
fabs
movsl
push
mov
cs
enter
or
fisttpl
in
mov
cld
xchg
jmp
sbb
cmp
or
sbb
outsl
ljmp
push
ljmp
push
add
mov
adc
ja
sub
daa
dec
imul
mov
daa
loop
inc
inc
mov
jb
dec
cmp
out
outsl
outsl
push
jl
es
stos
cli
push
aam
dec
mov
sbb
stos
out
cmp
in
mov
mov
and
jnp
test
aam
int
mov
jge
xchg
jo
aaa
outsb
sahf
stos
daa
arpl
scas
adc
bound
loop
into
push
rcll
mov
outsb
push
mov
popf
pop
xchg
scas
mov
pop
shrb
mov
add
mov
aas
insb
shr
dec
adc
mov
mov
xor
cmc
fs
loope
sahf
push
lahf
push
mov
add
cmp
push
lods
pop
nop
outsl
inc
mov
xchg
xor
jmp
jecxz
hlt
movl
cmp
cmp
cmpsl
aas
orl
int3
ljmp
dec
test
pop
ja
xor
aam
adc
push
cmp
scas
push
mov
pusha
cmp
pusha
jp
lret
mov
insl
imul
cmp
push
cmp
jmp
ficompl
inc
pop
mov
pop
cmpsb
data16
frstor
incb
jmp
or
jle
es
pop
test
addr16
and
out
aas
push
aam
negl
hlt
insl
aaa
xrelease
cmp
test
lods
pop
or
movsl
aas
pop
jb
inc
loopne
sub
in
sub
lcall
pushf
cmp
shrl
jb
sbb
arpl
call
sbb
mov
daa
sbb
xor
sbb
jbe
add
sub
insb
dec
push
mov
ret
scas
subb
nop
add
jae
les
jp
xchg
pushf
push
push
jl
hlt
jns
xchg
cs
mov
nop
mov
and
popa
pop
xchg
fistpl
cmpl
jecxz
in
lcall
jge
insb
jne
pop
jge
mov
add
xor
testb
test
pop
js
sbb
dec
jecxz
test
mov
xchg
out
mov
mov
mov
les
mov
and
jecxz
loope
mov
jmp
sbb
hlt
cmp
test
sarl
dec
jecxz
movsl
inc
jae
mov
popf
adc
ss
push
inc
fwait
push
fs
fwait
repnz
mov
dec
aad
in
lret
pause
and
pop
add
jns
es
sub
popa
sbb
or
sbb
ret
vmulss
cld
bound
fnstsw
fs
mov
loopne
push
ficoml
xor
push
and
cwtl
fmull
lock
or
aas
lahf
aam
mov
cmc
daa
cli
xchg
jecxz
lret
mov
add
inc
push
push
dec
pop
jl
push
dec
mov
bound
out
lock
adc
mov
js
ds
enter
or
addr16
inc
and
inc
out
hlt
jbe
push
fld
inc
pusha
inc
mov
sahf
and
not
xchg
dec
scas
fidivrs
mov
aaa
icebp
and
call
lods
sbbl
push
or
mov
repz
push
fldl
mov
sbb
inc
adc
xchg
dec
stc
cmp
mov
inc
xchg
cmp
movsb
addl
movmskps
mulb
pop
push
std
lods
and
cmp
dec
outsb
pop
jbe
xorb
test
xor
add
mov
sbb
insb
cmp
and
lods
jl
sbb
xchg
sub
enter
add
lods
subb
pop
int
repnz
sbb
out
clc
adc
mov
lcall
shll
jae
mov
mov
jnp
and
hlt
cmp
dec
jge
aam
push
mov
dec
pushf
leave
je
xchg
pushf
push
push
add
dec
lods
add
sub
xor
jne
faddp
ret
jle
mov
scas
in
fucomip
cmp
out
lock
stos
lock
into
xchg
movsl
ret
dec
jg
shrl
mov
daa
js
adc
sub
fwait
xchg
addr16
cmp
lret
mov
in
xchg
out
mov
xchg
popw
push
lret
mov
cmp
aas
inc
std
jne
add
xor
jg
xchg
arpl
pop
sub
jp
bound
push
push
pop
adcb
cmp
out
push
cmpsb
mov
add
pop
and
decl
sbb
imul
mov
add
ror
mov
testl
jle
test
xor
mov
aaa
mov
mov
addr16
das
pop
and
add
jo
jno
xlat
icebp
idivl
jp
mov
std
ffreep
fldl
add
pavgb
push
or
inc
shl
push
test
out
sahf
jp
or
int
or
xchg
ret
pop
lea
sbb
in
xor
xlat
mov
js
jge
adc
mov
mov
aad
in
mov
xlat
pop
or
addr16
jl
mov
lods
arpl
or
insl
ret
or
rcll
lods
int3
push
pop
lret
mov
sbb
mov
icebp
cltd
int
adc
icebp
dec
xor
test
fstpt
fmull
imul
pop
push
push
sbb
or
rcrl
rclb
aad
jg
xchg
ficoml
iret
or
inc
push
adc
idiv
pusha
out
mov
pop
push
outsl
pusha
jle
add
push
xor
nop
cwtl
push
loop
xlat
xor
pop
std
mov
movsb
into
xor
inc
pop
add
ljmp
fs
cld
fld
leave
adc
popa
xchg
dec
xchg
pop
inc
sub
dec
std
adc
jp
xorl
xchg
fmuls
pop
add
push
movsl
leave
and
imul
jnp
cmp
je
xor
nop
popl
inc
inc
je
mov
aas
cld
repz
mov
mov
rcrl
fiaddl
push
addr16
gs
int3
int
bnd
xchg
cmp
shl
dec
js
or
mov
cmp
pop
push
pop
cld
int3
mov
adc
adc
inc
bound
cmpsl
notl
fdivrl
aad
push
gs
adc
ret
pop
pop
data16
js
je
mov
stos
adcl
push
cmpsl
mov
sub
or
test
or
lds
and
add
dec
jnp
xlat
repnz
insl
sarl
xor
inc
in
inc
xor
xor
pushf
out
jecxz
cmp
aad
nop
mov
rorb
sar
or
fldt
mov
in
shlb
or
call
jmp
test
jnp
adc
adc
jge
sub
call
push
xchg
rcl
rcr
sbb
icebp
lods
shr
stc
sub
mov
or
in
addr16
gs
jb
xchg
notl
or
subb
jae
jne
jl
pop
mov
cltd
push
out
je
pop
or
nop
push
imul
xchg
mov
add
add
push
push
lcall
pop
pop
fsubrl
xchg
pop
and
or
dec
movups
xchg
fwait
cmp
add
inc
jmp
lds
dec
mov
cs
test
xchg
fists
lods
stos
pushf
shrl
sub
shll
nop
nop
int
mov
cmp
xor
inc
ss
mov
sti
cmp
cwtl
lods
sti
shlb
stos
mov
jbe
lea
lods
lret
pop
dec
int
outsl
jp
push
jp
dec
aaa
lret
and
xor
or
stc
dec
xchg
mov
cmpsl
loop
imul
cld
and
inc
add
pop
inc
xor
xor
cld
loop
push
adc
push
into
cmp
or
test
fists
pop
fiaddl
xor
outsb
popa
fmul
daa
pop
cs
ja
call
mov
lods
jmp
movsl
and
xchg
inc
jmp
jne
fstp
mov
jno
inc
adc
sbb
lret
mov
xor
mov
aam
movsl
inc
in
flds
ds
outsl
les
aad
push
sub
jp
pop
adc
adc
loopne
sub
mov
and
iret
jnp
inc
cltd
cli
lret
js
mov
mov
sbb
lcall
in
fimull
pop
sbb
out
imull
imul
loopne
stos
clc
jb
mov
push
popa
mov
push
add
cmp
adc
ficoml
stos
scas
jmp
in
pop
adc
push
test
pop
jnp
push
jecxz
adc
call
hlt
aam
add
ljmp
leave
dec
daa
sti
cmpsb
test
adc
pcmpeqb
push
test
sbb
movsb
mov
or
clc
mov
push
das
mov
cmp
test
sbbl
mov
arpl
push
and
stos
push
jmp
add
push
jno
popa
sub
mov
xlat
mov
mov
adc
jnp
fistps
arpl
out
test
and
jne
jg
adc
cmpsb
enter
mov
mov
lock
jae
jae
mov
jbe
in
inc
rolb
sahf
jl
hlt
scas
cmp
std
nop
stc
jg
sbb
mov
inc
mov
fsubrl
movsl
mov
popf
and
mov
cmp
mov
jno
jnp
jg
mov
ss
jge
loop
movsb
mov
add
inc
push
pushw
mov
ror
subb
or
int
test
in
leave
adc
or
sub
add
pushf
push
cwtl
and
mov
fxch
jmp
add
ss
mov
push
insb
xchg
mov
push
mov
mov
into
aas
js
sub
sub
stc
and
js
mov
fwait
pop
sbb
sbb
xchg
cmc
xor
movsl
and
int
popa
and
mov
or
and
push
test
int3
push
pop
loope
icebp
icebp
jb
cmp
imul
in
pop
mov
shrl
inc
loope
in
jns
inc
outsb
xchg
nop
lods
mov
fdivr
push
dec
mov
sbb
test
push
xor
insb
gs
mov
ret
stc
lods
xchg
jb
stos
mov
adc
gs
or
mov
scas
je
lcall
into
fimuls
mov
int3
inc
out
aas
inc
aas
scas
or
test
jp
repz
idivb
jp
pop
pop
inc
das
outsb
sbb
repz
jnp
jl
mov
insl
sbbl
cli
push
out
hlt
lds
jecxz
add
and
mov
mov
push
fwait
sub
mov
add
mov
inc
mov
int3
sbb
lret
lret
or
cmp
adc
test
xor
mov
mov
negl
out
xorl
icebp
out
push
bound
adc
add
push
push
arpl
pop
lcall
inc
adc
sti
fcoms
jecxz
sbb
jmp
orl
movsb
out
test
fistpl
nop
mov
inc
aam
push
add
loop
mov
loope
call
ds
outsl
mov
stos
dec
fmuls
data16
out
cmp
mov
sbbl
ljmp
jbe
add
pop
inc
rolb
pop
sub
ljmp
mov
dec
pop
and
sbb
cmp
lods
pop
push
pushf
enter
insb
push
jecxz
cmp
pop
aas
out
xor
mov
fmul
jb
and
sar
cltd
in
loop
loope
cmp
cwtl
in
rorb
lea
mov
dec
xchg
and
mov
notb
or
mov
cmpsb
popf
cmp
test
lods
mov
test
dec
ds
or
std
push
mov
xchg
je
ja
int3
or
add
jne
push
cli
int
out
rorb
fsubs
rcrl
pop
jns
adc
pushl
push
scas
shll
imul
sub
xchg
lahf
cli
int
mov
mov
xor
mov
ror
mov
ja
in
adc
inc
push
out
dec
sbb
mov
dec
mov
and
jno
inc
es
dec
pusha
dec
lahf
lcall
sbb
push
lds
test
lock
adc
enter
xorb
loopne
pusha
mov
add
add
test
mov
xchg
les
ret
jp
negb
outsl
dec
mov
pushf
in
jno
and
mov
outsb
jno
ds
outsb
ficoml
xchg
mov
jae
dec
xor
or
fdivl
pop
or
sbb
cmp
aaa
mov
iret
aas
add
push
mov
loopne
cmp
outsl
pop
sub
and
xor
movsl
sub
roll
sbb
pop
inc
push
inc
xchg
leave
in
lds
into
jae
mov
sub
push
cmpsl
push
mov
andl
and
push
pop
mov
jo
pop
mov
std
pushf
push
lret
test
pop
inc
cmp
ss
aas
fmul
mov
leave
daa
adc
outsl
mov
pop
lret
inc
add
mov
jne
mov
pop
xchg
jae
push
loop
cld
test
aad
xor
movb
out
mov
je
jle
push
mov
test
lcall
mov
inc
push
cwtl
add
mov
pusha
stc
out
inc
pushf
sub
test
add
push
lahf
add
sahf
and
or
push
or
fmulp
movsl
fdiv
stos
call
fsubrs
or
mov
mov
aaa
add
in
fistpl
lcall
test
js
adc
in
add
mov
lret
loope
jmp
inc
in
cmp
jae
mov
jp
test
ret
add
nop
outsb
and
add
outsb
jg
pop
inc
lds
push
add
push
sti
aaa
and
cmp
xor
and
scas
jns
mov
mov
inc
sub
jns
push
int3
inc
mov
adc
test
iret
mov
or
jg
xchg
je
push
aas
dec
xchg
push
scas
popf
push
xlat
xchg
jb
jp
daa
iret
shll
das
cltd
loope
out
jb
mov
adc
cmpsb
insl
popf
sub
jl
cmp
cmp
dec
cld
dec
or
ss
test
dec
imul
js
xchg
jmp
fstps
fwait
sti
and
adc
or
aaa
add
es
fdivrp
sbb
jae
push
aad
mov
jb
sbb
dec
jb
out
push
int
mov
cmp
cli
sub
test
and
or
pop
stos
lds
inc
xor
pop
or
pushf
or
jle
cmp
frstor
cs
addr16
pop
xchg
out
ljmp
push
fs
mov
xor
dec
sahf
lods
push
adc
push
sub
push
leave
insl
mov
jns
add
out
sbbb
js
mov
pop
mov
fs
and
sub
fcomps
dec
inc
loope
mov
mov
into
idivl
fs
lea
data16
xor
push
mov
add
mov
fstl
stos
daa
cmpsb
inc
pop
or
push
insl
shrb
jne
loopne
lret
inc
mov
add
fstp
movb
push
sbb
xlat
sbb
lods
push
js
sti
test
sub
mov
lahf
call
or
xor
movsl
jo
cmpsl
jae
mov
ja
aam
adc
inc
lock
jge
and
addr16
xchg
pop
lea
mov
add
lret
adc
inc
fisubs
int3
adc
add
adc
push
mov
and
mov
out
mov
es
cmp
adc
sahf
and
imul
nop
mov
xor
outsl
jb
add
add
scas
andb
mov
sti
jl
in
push
les
enter
loop
cld
mov
mov
xchg
and
nop
pop
push
popf
pop
stc
xor
sbb
in
or
cmp
pop
fcoml
ret
loopne
cwtl
flds
notl
dec
jnp
mov
int
aam
sub
in
mov
and
sbb
lea
insb
sahf
out
scas
push
lret
mov
adc
aad
fcmovnbe
fcmove
mov
repz
test
lock
xor
xchg
addl
jo
aas
push
adc
push
sbb
in
lds
bound
lret
add
or
and
adc
cmp
mov
xor
inc
clc
call
in
mov
mov
mov
roll
lock
xchg
mov
sbb
out
mov
pushf
jecxz
xor
test
cmp
jb
dec
or
mov
loope
xchg
jmp
hlt
inc
roll
jg
daa
push
adc
lea
jbe
xor
push
jmp
iret
scas
lock
lock
mov
jbe
adc
cmp
aam
xchg
push
pop
xchg
mov
repz
or
ficompl
cmp
mov
ljmp
mov
lds
test
icebp
mov
std
pop
pop
fstps
or
or
gs
mov
push
fadd
lods
xor
mov
jns
and
bound
lods
stos
jno
push
dec
insl
sbb
push
pusha
add
adcb
jns
and
test
jp
and
lock
mov
mov
push
cltd
xor
push
push
push
mov
jge
push
pop
bound
cmc
mov
ljmp
pusha
je
stc
sub
xlat
push
sub
or
inc
or
roll
sbb
mov
daa
fcoml
dec
pushf
dec
push
and
jno
cmpsl
jne
test
nop
mov
jbe
mov
cmp
scas
mov
fmuls
mov
aam
inc
jae
sbb
xchg
ja
xor
and
jo
in
jecxz
cmpsb
pushf
add
hlt
mov
jnp
inc
bnd
mov
cwtl
fstl
push
ja
mov
push
dec
sbb
sub
sti
cmp
cmp
or
jae
sbb
cwtl
stc
adc
sub
mov
lods
mov
out
jno
and
mov
adc
cmp
jb
sub
enter
push
or
sahf
std
test
xor
pop
or
jmp
fisttpl
jno
ss
adcl
sub
rcll
pop
pushw
jle
bound
aad
dec
jb
xchg
lods
or
push
hlt
xchg
enter
out
repnz
nop
jle
pushf
addr16
pop
cmp
mov
pop
push
sub
cmc
loop
inc
lock
sbb
into
xchg
add
lret
es
push
adc
setae
test
mov
mov
xchg
fnstsw
test
cmp
test
mov
jnp
sbb
pop
pop
pop
jb
aad
rcrb
movsl
sbb
inc
xlat
loop
xchg
inc
push
and
cld
xor
dec
xchg
imul
lock
scas
outsb
pop
out
ret
mov
mov
push
sub
adc
aad
rorb
push
mov
sub
xchg
xchg
out
pushw
fs
ret
mov
rcrl
cmp
int
lea
dec
test
add
stc
fucomi
mov
shrl
or
dec
vmread
enter
fsubl
cmpsb
nop
xchg
in
push
lods
xor
pop
mov
lret
inc
fucomi
arpl
in
adc
xlat
mov
jmp
and
push
in
add
inc
int
mov
divb
mov
jnp
shl
xor
imul
inc
repnz
ja
xchg
push
jbe
fdivl
repnz
mov
push
mov
hlt
rclb
xchg
sbb
pop
jle
adc
in
out
fistpll
repnz
xor
adc
xchg
pop
sti
loopne
mov
mov
mov
pop
push
xchg
jb
frndint
fcmovne
push
mov
adc
and
dec
jl
adc
sahf
jl
lcall
xchg
movsl
fsub
pop
or
xor
xor
push
xchg
mov
cli
hlt
loope
nop
enter
shlb
mov
test
cwtl
jb
lret
mov
cld
mov
xchg
fsubr
dec
aad
inc
ror
ret
cmp
mov
nop
add
mov
loopne
jns
imul
xor
icebp
mov
cmp
fisttpl
out
das
aas
adc
mov
sub
mov
push
or
xor
fnstsw
lahf
mov
mov
pop
dec
arpl
xchg
mov
in
jp
into
insb
add
xchg
andb
sub
in
fs
movsb
movsl
xor
arpl
sub
and
pop
sbb
add
lret
inc
movsb
cmp
adc
lcall
sub
fildll
cli
add
nop
mov
adc
pop
repz
pushl
cltd
mov
and
xor
in
lahf
mov
fstpl
mov
dec
bnd
stos
or
or
std
rorl
jl
and
jmp
cmp
sub
add
test
inc
xor
mov
iret
lock
repz
inc
and
leave
cwtl
rcrb
popl
lock
add
mov
enter
sbb
movsb
jmp
and
das
inc
clc
inc
jp
aam
decl
xchg
stc
aam
leave
add
repz
leave
xchg
loope
fsts
rcll
insb
pop
sbb
ret
scas
inc
sub
insl
sbb
jnp
xchg
test
mov
sub
or
pop
mov
jns
test
pop
fidivs
xor
lcall
dec
dec
lcall
jns
es
imull
in
and
cld
add
out
jae
lret
in
add
stos
xor
push
inc
ror
das
ds
std
mov
insl
jp
pushf
sbb
in
aad
leave
pushw
push
jg
cmp
sub
sub
inc
sbb
clc
inc
add
or
add
mov
sub
sbb
out
data16
popf
mov
xchg
fildll
xchg
insl
mov
aas
shr
sarl
xor
mov
into
je
out
gs
mov
lock
dec
sarb
push
pushf
xchg
pop
cmp
inc
xor
mov
or
cmpsl
clc
aaa
sti
fistl
mov
jmp
mov
xor
jp
lcall
fstl
jno
stos
lods
jecxz
lods
push
loope
dec
xor
push
fists
and
and
inc
js
lahf
jb
or
mov
push
in
xchg
scas
pop
fidivl
pop
out
mov
jne
mov
les
js
popa
inc
scas
inc
inc
fwait
cmp
das
jb
fucomip
jbe
push
fcomps
stc
xor
or
cwtl
call
in
mov
loopne
int
stc
shlb
xchg
icebp
xchg
ja
cld
and
push
in
cmpsl
dec
lock
xor
mov
testl
lahf
dec
xchg
mov
xor
jge
add
adc
fdivl
pop
scas
and
sahf
iret
cltd
pop
sbb
sti
out
fadds
inc
pop
lds
paddsb
jbe
sub
jno
cld
call
mov
pushf
fimuls
mov
mov
xor
push
cmp
iret
loop
inc
push
sbb
mov
dec
jl
mov
icebp
xchg
push
int
xchg
inc
sti
in
repz
ds
sbb
ror
pop
and
or
jbe
pop
mov
xor
cmp
stos
cs
inc
pop
lret
leave
sahf
pop
stc
jnp
cmp
inc
lods
insl
mov
adc
fstl
push
jns
fbstp
adc
cwtl
mov
xchg
in
dec
xchg
pop
addr16
mov
mov
cs
mov
push
int3
cmp
test
loop
bnd
pop
push
sbb
cmp
repnz
pop
daa
scas
cmp
or
mov
dec
mov
out
in
out
es
dec
fcoml
dec
pop
data16
scas
cmp
mov
je
dec
popf
fimull
jo
pop
jmp
push
xchg
pop
test
push
xchg
ljmp
in
repz
lea
fstl
and
xchg
sbb
test
pushf
in
xor
mov
cmp
push
lea
mov
nop
jmp
xchg
inc
outsb
shll
xchg
fiadds
sbbb
xchg
push
xor
pop
push
hlt
sub
xchg
rcrl
xchg
and
fbstp
notl
imul
add
outsl
xchg
and
lret
pop
ja
inc
xor
sti
cld
jnp
ret
sbb
xabort
add
dec
lcall
xor
xchg
jle
sub
arpl
loop
fidivs
or
call
push
xor
inc
out
mov
fwait
lods
gs
addr16
inc
add
jecxz
fcomps
daa
test
cli
outsl
iret
les
pop
jne
add
mov
add
adc
dec
fcmove
cmp
ja
dec
enter
rcrb
hlt
in
jl
dec
ficomps
mov
imul
insb
push
sub
mov
dec
lcall
mov
leave
xor
popa
pop
rcl
xchg
stc
inc
enter
pop
clc
dec
cmp
inc
ja
mov
adc
jle
lcall
stc
mov
or
stos
cmp
jecxz
push
mov
add
xor
mov
lcall
jp
mov
dec
xchg
mov
xacquire
jle
outsl
sbb
scas
mov
pushf
mov
cmpsb
dec
cld
xor
popf
push
fwait
pop
and
push
shlb
jb
sub
shrb
js
cmp
into
sbb
gs
lods
test
and
stos
mov
iret
outsl
sub
xor
fnsave
push
js
jg
inc
lods
stc
adc
cli
outsb
shl
mov
cltd
lea
mov
popf
dec
xchg
cmp
sarl
sbb
fstl
mov
cmp
mov
or
inc
lea
into
mov
das
outsb
push
movsb
pushf
inc
mov
mov
and
stos
fidivrl
fld
pop
fcompl
dec
jge
cmp
lea
cld
or
inc
rorb
insb
add
jno
mov
cltd
pop
enter
sbb
decb
shrl
cmpsb
lock
lahf
or
xor
ret
and
inc
jo
cmp
jp
outsl
xchg
adc
cld
mov
jno
mov
mov
inc
pushf
out
cs
cmc
cmp
outsb
inc
rorb
fnsave
dec
sbb
xchg
push
call
fsubrl
or
xchg
cwtl
sbb
vmwrite
clc
mov
ljmp
pop
cli
data16
push
sbb
xor
in
adc
mov
pop
push
lcall
lock
mov
mov
push
mov
jns
jecxz
test
out
ljmp
mov
sub
cmp
jns
lret
popf
xor
jle
add
fisubrs
movsb
pop
xchg
mov
cmpsl
xchg
or
push
cs
xlat
push
dec
arpl
cmpsb
sbb
pop
cmp
jo
incl
gs
idiv
cmpsb
lret
push
push
js
and
mov
mov
mov
xchg
lret
xchg
push
pop
mov
sub
xchg
push
push
fnstcw
loope
insb
fnstenv
cmp
dec
dec
ds
mov
aad
test
cwtl
adc
fsts
mov
fistl
gs
inc
push
int3
xlat
dec
pop
icebp
lcall
pop
mov
stc
mov
rorl
pop
out
xor
dec
pop
fsubrl
cli
cmp
mov
push
ja
push
shl
inc
into
xchg
add
jmp
movsl
gs
jno
mov
or
jmp
stos
push
cmp
popa
aad
mov
xchg
inc
cld
jae
mov
loope
xchg
shrd
leave
xchg
mov
xchg
fdivs
in
and
dec
loope
arpl
fcoms
xchg
mov
outsl
mov
pop
imul
in
mov
sub
mov
push
ret
mov
lret
lret
mov
cmc
test
inc
jo
popa
jmp
push
test
lret
iret
test
mov
sub
data16
pusha
lcall
imul
into
clc
sbb
orl
int
aaa
and
add
pop
cmp
sub
jae
xchg
xor
lea
sbbl
xor
push
xchg
in
sarl
cmp
ds
data16
cmp
cmp
mov
xor
xor
in
add
xorb
fucomp
mov
cs
add
inc
ret
test
scas
stc
add
popa
mul
sbb
lret
ss
aaa
xchg
lods
insl
out
das
outsb
icebp
push
sbb
adcl
cmc
inc
mov
popa
sub
push
dec
or
aaa
loopne
icebp
mov
out
out
push
loopne
adc
add
or
push
rcl
mov
filds
add
sub
popf
cmp
in
sub
adc
adc
aas
jg
jmp
idivl
mov
mov
rcl
dec
sbb
pop
or
test
push
popf
mov
cmpl
mov
jecxz
stc
outsb
in
cmpsl
add
stos
and
jecxz
in
adc
sbb
gs
sbb
out
push
mov
fists
dec
fnstcw
rcll
out
aaa
sahf
mov
adc
xor
xchg
dec
or
xchg
aam
or
loope
outsl
shlb
push
push
jle
jp
shrl
stos
inc
insl
hlt
sub
adc
inc
mov
in
out
or
je
pusha
addb
fwait
cmp
cmp
pop
aam
inc
push
cld
out
xor
scas
jle
xchg
sbb
cmc
sub
push
rclb
pop
or
pushl
fnsave
or
and
inc
outsl
daa
daa
pop
aaa
jae
ja
std
gs
jne
ss
sub
mov
pop
jbe
fstpl
pushf
rcl
out
push
divb
jb
out
xchg
push
push
jle
lods
imul
mov
mov
lods
loop
cltd
in
sbb
movsb
lds
mov
ret
dec
andb
and
mov
sbb
nop
or
sbb
adc
adc
jp
ljmp
pop
test
jb
pop
push
into
pxor
fwait
and
push
push
sahf
sahf
aas
dec
fcomip
lcall
dec
push
inc
lea
or
cli
inc
movb
test
aad
roll
push
push
sub
repz
lret
daa
fdiv
mov
fwait
enter
mov
sub
pushf
jbe
xchg
in
fimull
cmp
daa
or
addr16
sbb
jno
ja
lock
in
out
cmp
adc
ret
fiaddl
rcll
and
xchg
and
sub
fs
out
mov
push
es
fiadds
out
and
sub
daa
lcall
loop
mov
mov
adc
sub
jge
ljmp
fbstp
pop
fsubrp
inc
xchg
lcall
jle
jns
je
out
mov
gs
push
cmc
push
sti
cli
jb
stos
push
lock
jb
or
jp
repz
xchg
cmp
sbb
ljmp
mov
imul
push
scas
jg
inc
aaa
clc
aas
cmp
push
ljmp
sti
sbb
sarb
jo
adc
aam
push
mov
mov
mov
jo
loopne
jmp
mov
popa
je
movsl
jns
ds
xchg
sbb
pop
adc
xor
pop
cmp
mov
cltd
sub
jp
aam
outsb
jmp
mov
cmp
mov
ja,pt
out
imul
inc
xchg
into
pop
cmc
out
loopne
imul
enter
gs
bound
testl
ja
imul
repnz
test
cmp
in
inc
ret
xchg
dec
cs
pop
pop
std
movsl
movsb
mov
xlat
jp
mov
subb
fprem
mov
add
daa
lods
or
std
fwait
inc
mov
hlt
pop
add
cmp
push
pop
mov
sbb
mov
xlat
pop
push
inc
cwtl
inc
mov
fdiv
repz
jecxz
mulb
jne
sbb
push
sbb
es
mov
push
es
pushf
jb
lea
mov
mov
stos
ljmp
por
imul
add
jge
push
or
jecxz
or
movsb
xchg
sub
mov
sub
pop
mov
ret
cwtl
repnz
adc
outsb
push
xor
pop
js
xor
dec
shrb
bound
xor
jmp
mov
mov
xchg
add
gs
or
rcll
lcall
out
jb
mov
add
leave
xchg
xor
and
enter
xchg
movsl
into
in
ret
dec
dec
pusha
mov
pushf
jp
aad
jl
daa
lret
pop
mov
adc
dec
cli
mov
and
and
bound
popa
sbb
out
pop
cmp
add
mov
adc
and
call
push
pop
das
mov
in
mov
mov
adc
je
ds
andb
xchg
cmp
int3
mov
lret
test
mov
xchg
and
cmp
xchg
push
xchg
inc
mov
dec
shrb
fs
iret
filds
push
dec
daa
stos
stc
or
mov
mov
cmp
xchg
sbb
sbb
mov
outsb
dec
cmp
addr16
add
es
adc
push
lea
mov
adc
push
subb
rcll
jmp
je
fsubs
push
and
into
mov
das
xor
adc
data16
sbb
movsb
xor
xor
lods
cld
and
xor
dec
mov
xchg
loopne
xchg
outsl
mov
shll
insl
jae
pop
add
mov
jnp
inc
inc
or
push
leave
sbb
jo
lret
mov
sub
xchg
js
imul
imul
fldenv
or
stc
shrl
insb
repnz
mov
add
xor
sbb
sub
xchg
stc
inc
pop
rcr
and
inc
fdivrp
imul
icebp
repz
sub
add
pop
push
pusha
xchg
xchg
pop
ret
or
lea
fnstcw
push
xor
out
cmpsb
add
insb
jle
xor
push
add
push
push
pusha
in
xchg
es
cmp
aas
aas
xchg
fwait
sbb
jle
push
fisubl
jo
mov
mov
mov
les
and
stc
movsl
cwtl
int3
out
in
outsl
jne
pop
inc
pop
and
mov
xchg
jnp
pop
rcrb
push
out
push
push
mov
jb
cmp
iret
cmpsb
jl
clc
pop
xchg
movb
pop
and
push
movsl
pop
je
sbb
pop
inc
out
notb
outsb
stos
call
int
dec
xchg
cmp
xchg
shrb
and
jp
xchg
in
or
or
or
out
jno
scas
pop
into
arpl
mov
enter
push
into
shlb
jle
xor
cmp
push
add
push
cmp
sbb
inc
inc
call
mov
call
push
leave
or
cs
push
mov
sahf
jge
cwtl
add
test
add
ds
mov
sahf
pop
loop
hlt
in
rcrl
cltd
cltd
jo
orb
or
xor
stos
cmp
jmp
ret
inc
popf
repnz
and
repnz
imul
popf
mov
in
ret
add
add
aaa
dec
cmpsl
push
pop
jo
cs
add
pop
fcompl
and
pop
ja
cmp
popl
mov
or
mov
inc
iret
xlat
mov
dec
je
pop
sbb
cli
sbb
push
xchg
adc
lds
cmpsb
push
pop
cmpsl
pusha
fnstenv
rep
out
adc
sub
cli
fcom
fs
cmpsl
test
dec
mov
jnp
jne
fdivrs
inc
jns
mov
push
ret
inc
push
dec
xor
cld
daa
cmc
xor
xlat
and
fwait
sub
repnz
rolb
push
fstpl
jbe
jb
xchg
popf
adc
in
aam
movsl
in
sahf
aam
adc
dec
push
sub
bound
cltd
roll
ret
sbb
mov
push
clc
mov
addr16
fstpl
mov
lods
popf
xchg
test
loope
and
orb
mov
lahf
nop
and
roll
in
cmpsb
push
cmp
scas
add
arpl
sbb
sub
pop
lcall
jb
mov
push
mov
lea
mov
jnp
aad
push
push
roll
call
add
shl
push
xchg
mov
push
inc
std
or
dec
or
push
into
or
push
loopne
faddl
adc
xor
dec
insb
ret
add
hlt
xor
mov
xlat
mov
call
rol
movsl
adc
mov
cmp
jnp
cmp
pop
mov
cmp
cmp
and
cmp
sbb
mov
mov
scas
test
cmp
jle
dec
and
js
sub
mov
adc
inc
lahf
push
add
and
mov
cmp
pusha
sbb
add
xor
sarb
aas
jge
add
insl
dec
pop
test
enter
ds
je
mov
dec
ja
shr
je
adc
jno
adc
cmpsb
jp
inc
xchg
lcall
pop
test
lock
arpl
in
movb
dec
and
sbb
insw
shlb
ret
push
movsb
popa
xchg
xor
icebp
repnz
out
push
sti
ljmp
jne
mov
xor
adc
lods
bound
xchg
xchg
push
jecxz
hlt
iret
pop
repz
cmp
in
loope
repz
or
and
aaa
jl
dec
or
xlat
and
or
daa
call
inc
mov
jp
add
xor
mov
mov
jg
mov
mov
arpl
bound
xchg
outsb
sbb
jmp
jno
std
sbb
cmp
mov
imul
nop
xor
stc
pop
mov
sti
xor
popa
pop
lea
rorb
testb
int3
jecxz
sbb
popf
jbe
mov
push
stos
cmp
lcall
xchg
mov
mov
pop
cld
mov
jns
mov
dec
enter
ret
test
int
xor
inc
nop
jne
lds
adc
jbe
sub
fstl
ffreep
add
xchg
shrl
ja
pop
xor
mov
dec
aad
ljmp
or
sub
mov
repnz
dec
or
mov
sbb
or
adc
rorb
shlb
or
aad
add
cmpsb
jle
adc
rorb
mov
ljmp
cmc
fdivrl
test
sbb
push
icebp
fstpt
leave
mov
sbb
adc
rcl
scas
jmp
filds
arpl
add
lods
repz
mov
imul
mov
mov
cmc
add
rolb
in
stc
mov
ds
lods
int3
data16
das
mulb
xchg
lods
scas
xor
adc
and
popf
iret
into
and
ret
iret
xchg
clc
jle
aaa
pushf
leave
or
push
leave
lds
sbb
mov
addr16
mov
fs
nop
mov
or
push
dec
hlt
mov
arpl
mov
sbb
movsb
enter
lea
add
cltd
jae
jo
mov
repz
fs
out
popf
divb
cmp
ss
cs
dec
and
sub
lcall
sti
repz
sub
into
out
cmpsl
enter
out
inc
lahf
mov
test
push
mov
inc
jno
inc
jge
adc
xchg
mov
fldt
dec
xor
and
adc
and
jle
sbb
pop
js
pop
add
fstl
scas
adc
and
cmp
stc
popa
inc
arpl
or
nop
adc
xor
mov
mov
loopne
adc
sbb
cmp
ror
pop
outsl
sub
lods
sarl
sub
and
add
sbb
jne
loopne
in
inc
aad
mov
dec
sbb
mov
xorps
mov
movsl
int3
jecxz
sub
jmp
das
shr
lret
cmp
shlb
and
cwtl
cmc
lahf
sub
popa
insl
xlat
mov
dec
add
vpmacssdql
jmp
mov
sbb
sbb
jge
ss
mov
sti
fdivrl
mov
mov
mov
cmpsl
gs
add
inc
cmp
frstor
fnstsw
iret
xor
cmp
push
jns
push
mov
push
xchg
adc
mov
add
push
lods
mov
xchg
xor
std
rsqrtps
sub
cmpsb
or
dec
dec
les
sbb
mov
sbb
pop
sub
movsb
or
test
aaa
dec
mov
mov
add
js
rolb
cld
rcrl
jns
imul
xor
mov
movsb
pushf
bound
adc
mov
push
mov
push
movsl
mov
scas
in
aaa
push
je
cmp
shlb
in
pusha
mov
mov
mov
int3
sbb
add
mov
mov
subb
insb
movsb
sbb
ret
les
iret
xchg
mov
shrb
lret
subb
ds
mov
ja
mov
xor
pop
adc
jo
mov
xchg
mov
fs
adc
cltd
or
adc
jbe
jbe
add
dec
add
dec
sub
sbb
jne
clc
and
push
outsl
xor
pop
push
xor
sub
lea
aad
jg
aam
sub
lds
pop
add
or
push
inc
cld
pop
add
push
jle
and
xorl
mov
pop
xchg
aad
in
jmp
pop
lahf
or
push
mov
mov
shll
and
cmp
mov
and
adc
por
push
jp
and
inc
xchg
sub
lods
xchg
adc
ja
loopne
mov
sbb
movsb
xchg
mov
inc
fcomps
xchg
popf
mov
imul
nop
adc
subb
call
outsb
dec
hlt
xchg
shll
andb
and
xor
mov
iret
imul
inc
mov
or
pop
or
pop
push
addr16
outsb
push
pop
test
cmp
out
fcmovu
sbb
cmp
dec
pop
push
inc
inc
test
dec
mov
inc
cmpsb
cltd
mov
pusha
or
aas
mov
adcl
push
js
cmpb
fistpll
dec
push
lods
dec
fsqrt
cmp
fcmovb
out
add
sbb
fcoml
arpl
movsl
pusha
cli
inc
mov
arpl
fwait
push
push
clc
xor
lret
scas
out
mov
push
sbb
cmp
and
arpl
push
cld
mov
pusha
mov
xchg
cmp
xchg
int
fcoms
outsb
pop
shrl
mov
or
leave
test
data16
add
cs
fwait
into
imul
out
movsl
fs
lea
rcrl
jg
pop
mov
xor
aam
das
xchg
mov
out
test
dec
mov
inc
push
and
mov
lock
xchg
add
fldt
adc
ljmp
rolb
push
clc
jl
push
das
xor
cld
lahf
lock
sarl
pop
inc
jns
cmpsl
je
jecxz
jmp
int3
insl
or
cmp
mov
es
pop
ret
movsb
xchg
and
dec
in
jne
ja
push
hlt
in
cwtl
sbbl
andb
ja
mov
cmpsb
loop
daa
mov
xor
pop
pop
jno
repz
rolb
cmp
insl
lret
add
fadd
dec
push
push
xorl
fs
ficompl
or
insl
dec
popa
inc
adc
sub
pop
pop
lret
cwtl
cmp
iret
mov
and
sbb
test
mov
sub
xor
in
testl
mov
sbb
ljmp
sbb
jle
in
mov
inc
lods
pop
inc
shll
jmp
je
xor
mov
pop
sbb
add
mov
lds
push
adc
xchg
cld
pusha
jmp
movl
bound
cmp
sahf
jmp
push
xrelease
je
xchg
and
test
jg
pop
insb
out
sub
pop
mov
test
fs
mov
dec
push
clc
cmpsl
mov
xchg
mov
mov
stos
push
or
insb
addb
mov
into
xor
lock
push
lock
in
mov
sbb
jp
mov
push
xchg
cli
inc
repnz
into
dec
out
or
loop
int
xchg
daa
das
out
ja
sbb
mov
sbb
jle
fmul
aaa
imul
mov
shlb
push
pop
jmp
or
mov
shlb
nop
in
mov
lcall
cmc
loop
mulb
push
stos
cmp
sbb
pop
lea
dec
sbb
add
jno
fldl
mov
sub
xchg
adc
jle
xchg
push
lret
fs
inc
fldenv
lret
aaa
pusha
icebp
mov
push
ret
out
or
orl
pop
adc
mov
ret
mov
cltd
dec
mov
clc
cld
mov
add
pop
cmp
aas
mov
lods
test
inc
and
loop
sub
xor
in
in
mov
in
xor
jae
sti
or
aas
sbb
rcrl
loop
loope
data16
adcl
in
dec
mov
jg
lahf
in
mov
push
and
push
fwait
inc
cmc
in
adc
icebp
mov
seto
insl
mov
cmp
fmul
inc
push
xor
jle
test
mov
jne
push
sti
xorb
pop
jle
sarb
in
pushf
je
std
pop
xchg
xchg
or
cmp
push
or
test
lahf
and
xchg
fwait
rorl
pop
pop
call
sub
push
dec
nop
xor
std
outsb
mov
pop
pushf
mov
xchg
cmpsb
add
shlb
mov
scas
mov
jnp
push
mull
cmp
ja
in
jns
mov
and
sbb
out
rorb
pop
push
sahf
push
cli
sub
out
sti
jecxz
leave
or
inc
imul
mov
adc
cmp
cmp
dec
xorl
and
adc
jbe
js
addr16
and
xor
mov
icebp
aaa
int
addr16
out
gs
xchg
mov
push
mov
loop
xor
popl
rolb
icebp
adc
popl
add
mov
dec
lods
and
xchg
cmp
jbe
movsl
mov
pusha
add
xchg
push
mov
adcb
jp
mov
inc
out
push
ret
cmp
xor
push
int
mov
inc
jne,pt
cltd
in
xchg
pop
outsl
jge
imul
adc
loopne
rcrl
jp
push
daa
sbb
sub
dec
xchg
iret
jb
mov
std
rcll
and
outsl
popf
data16
fcomi
xchg
repz
sub
dec
mov
test
pop
jns
cwtl
fldenv
sbb
in
ret
cmp
sti
enter
push
cmpsl
jbe
es
mov
aaa
cmp
shl
fcomip
pop
jae
callw
nop
mov
popf
mov
pop
mov
negb
xchg
add
adc
dec
test
xchg
mov
jae
ss
adc
hlt
cmpsl
dec
push
test
test
jge
pop
adc
xor
xchg
or
aam
mov
mov
mov
jnp
call
je
mov
jne
adc
test
mov
add
mov
and
aas
sub
add
gs
sub
xor
mov
shll
xlat
mov
mov
push
bound
cmp
dec
push
leave
and
orb
cmp
ja
mov
inc
or
jno
cmp
jle
add
push
sub
cwtl
jp
jbe
dec
and
mov
push
jno
and
inc
add
cwtl
xor
cwtl
stos
shrb
pavgw
call
arpl
idivb
repz
jmp
cld
arpl
in
into
cmp
mov
jp
mov
fisttpl
ja
adc
loope
cwtl
test
daa
test
stc
mov
xchg
sbb
xlat
in
addl
adc
orb
repnz
add
add
mov
sbb
loope
jmp
add
pop
pop
inc
sahf
fs
jne
jns
pop
pop
push
inc
inc
enter
jne
dec
lds
push
and
mov
cmpsl
int
xchg
push
inc
xor
les
and
push
je
xchg
movsl
mov
push
sbb
ja
and
pop
sub
rorb
adc
jp
mov
push
mov
daa
or
jl
pop
sub
mov
mov
push
mov
inc
icebp
scas
push
sbb
mov
and
mov
cmp
jp
rorl
inc
nopl
lret
inc
hlt
mov
sti
inc
aam
pop
or
adc
sub
mov
sub
bound
cs
sub
call
mov
sub
mov
aas
in
cmp
adc
fcompl
mov
insl
in
mov
jle
pushl
xor
xchg
cmp
lods
or
pop
push
pop
scas
add
jbe
cmpl
loop
mov
fiaddl
fldcw
into
js
adc
aad
aam
loope
sbb
out
fdivl
in
decb
ja
and
mov
mov
loope
fidivs
dec
pop
cli
iret
jbe
push
lret
dec
xorb
popf
push
cmpsb
xor
mov
pop
mov
push
jne
xor
mov
sbb
std
mov
xchg
ds
lcall
ja
iret
inc
out
push
push
sti
adc
decb
xor
repnz
dec
fdivl
push
xchg
aad
jbe
mov
into
inc
outsl
push
mov
cwtl
cmc
std
ja
loope
into
or
scas
push
je,pn
inc
cmp
rcll
rol
call
inc
jmp
jge
or
das
in
mov
pop
loop
movsl
sbb
sub
jp
mull
ret
jecxz
push
inc
scas
cmp
jg
push
xchg
int3
stc
sbb
int3
sub
es
xchg
imul
test
mov
stos
lock
pop
in
mov
test
sbb
jae
iret
mov
dec
fdivr
jno
cmpsb
or
out
dec
mov
roll
jbe
mov
dec
sahf
push
xchg
imul
inc
aaa
mov
push
mov
push
xor
mov
jmp
fldcw
loop
sbb
sub
push
xchg
or
adc
push
out
aad
movsl
adc
xchg
lds
or
pop
dec
dec
addr16
and
lds
mov
pop
or
cmp
dec
movsb
sub
inc
inc
fildl
mov
fistpl
jbe
hlt
xchg
enter
xchg
inc
dec
mov
popf
sahf
imul
popf
int
mov
xor
hlt
sbb
jns
outsb
push
movsb
or
insb
xchg
filds
xor
sub
push
mov
mov
into
leave
cmp
stos
jno
icebp
push
out
in
or
jmp
loope
bound
jns
xlat
lods
cwtl
out
enter
das
lods
movsb
add
fidivs
sbb
jg
push
pop
into
or
inc
outsb
lea
push
orb
inc
fwait
cmpsl
or
jecxz
push
popf
out
ret
xchg
sbb
sarl
jo
scas
push
mov
ljmp
dec
cwtl
test
int
mov
orb
lahf
rorb
or
jg
sub
stc
arpl
mov
hlt
jnp
outsl
push
jmp
pop
ja
jle
cmp
sub
or
pop
lds
aam
mov
push
in
fisubrs
push
int3
insb
cmpsb
xor
adc
hlt
jbe
das
xchg
pop
or
and
sbb
sbb
sarb
mov
lods
mov
gs
xor
shll
jnp
mov
loope
sbb
sbb
test
sub
jmp
fstpt
pop
pop
adc
in
xchg
es
test
mov
or
lock
fidivl
sti
adc
mov
jmp
scas
sbb
in
mov
dec
cltd
push
rol
xchg
aas
push
dec
inc
loopne
pop
imul
xchg
inc
sbb
nop
dec
push
lea
sarl
pop
aaa
xchg
inc
pushf
mov
insl
mov
rorl
mov
stc
add
sbbb
jae
inc
in
cmpsb
pop
sbb
add
inc
sbb
nop
stc
lea
ss
ss
jp
or
cmpsb
push
xor
adc
lods
or
call
inc
icebp
pop
and
sti
adc
arpl
ret
fistpl
adc
and
sbb
jae
pop
test
insl
mov
aad
inc
xchg
pop
xor
cwtl
fsubrl
xlat
cmp
pop
cmp
cld
imul
inc
mov
push
movsl
into
aad
mov
cld
fdivrs
mov
mov
out
sti
xchg
clc
xchg
xor
or
test
nop
in
mov
add
mov
or
jle
mov
cmp
lret
or
xor
jo
std
cmp
cmpsl
inc
and
pop
cmpsb
mov
pop
pop
mov
movsl
jnp
sub
clc
mov
les
inc
inc
adc
sbb
lret
lea
popf
ds
scas
call
ret
and
mov
inc
mov
mov
fisubrl
out
pusha
and
dec
aas
in
jp
cmpb
inc
cmp
add
sub
mov
jp
mov
lea
dec
popa
out
adc
mov
sbb
add
xchg
ja
lock
pop
popa
push
scas
dec
notl
and
jae
je
ja
daa
shlb
or
movsb
aad
lahf
movsl
mov
fbstp
dec
and
add
and
xor
sbb
push
sub
mov
lea
loope
sub
cmp
push
inc
in
pop
cltd
sarl
pop
dec
adc
inc
or
test
push
or
mov
push
push
dec
sbb
add
insl
loopne
adc
lret
imul
mov
fidivrl
jecxz
into
pop
pop
std
jae
test
gs
hlt
pop
pop
and
pop
jmp
movsl
gs
and
dec
addr16
fwait
and
mov
ljmp
mov
call
inc
lods
test
data16
sbb
mov
lock
inc
andb
mov
outsl
add
mov
iret
mov
xchg
jnp
mov
or
mov
push
in
popf
add
mov
push
faddl
ret
jge
and
mov
test
adc
rcll
shr
inc
and
and
mov
pop
push
stos
nop
in
pop
shll
xchg
sbb
test
jns
iret
roll
jge
repnz
sub
neg
pusha
cmp
es
pop
fbld
fmull
mov
dec
jns
rcrb
and
xor
jae
testl
insb
and
mov
sub
fnstsw
pusha
adc
fs
xor
int
jmp
dec
add
add
arpl
pushf
adc
ja
test
push
mov
xchg
push
sub
push
fwait
data16
lahf
jne
aam
adc
sub
inc
jmp
adc
pop
mov
adc
add
jno
mov
out
lret
mov
loopne
cmp
test
mov
sbb
ret
push
and
out
hlt
enter
add
fwait
call
and
rep
sbb
fsubl
fstpl
cli
aaa
int3
inc
adc
aaa
bound
push
hlt
mov
pop
adc
dec
xchg
jge
popl
adc
push
or
push
pop
in
xlat
lret
push
orl
mov
fisubrl
movb
std
into
cmp
cltd
jns
fdivrs
jle
faddl
loop
loopne
xchg
sti
fmuls
icebp
addr16
xchg
div
pop
inc
loope
cs
pushf
jbe
mov
lahf
cmpsl
inc
cwtl
mov
cmpsl
outsl
cld
cmp
js
pop
mov
mov
fsubrs
out
and
inc
lds
imull
hlt
stos
jmp
push
call
or
iret
dec
fimull
cmp
aaa
and
rol
call
adc
mov
pop
dec
mov
sub
pusha
mov
dec
scas
stos
jne
rcr
bound
sbb
addr16
nop
outsb
xorl
es
or
in
pusha
pop
dec
fwait
jbe
outsb
into
sub
aaa
inc
and
pop
mov
mov
sub
dec
test
dec
add
or
rorb
inc
cmpsb
xchg
std
jns
inc
adc
mov
dec
or
pop
adc
mov
jp
xor
test
pushf
pop
movsb
push
stc
jg
xor
nop
rcrb
imul
mov
and
outsb
push
loopne
xor
mov
inc
jae
pop
lea
lods
scas
sahf
mov
mov
pop
sub
sbb
call
xchg
mov
mov
mov
fldz
dec
pushf
cld
xor
mov
jmp
mov
mov
loop
mov
pop
dec
sbb
cmp
nop
inc
jne
nop
dec
lahf
add
aam
sti
mov
or
mov
lds
into
outsl
sub
fnsave
repnz
jge
loop
pop
dec
in
and
fldt
or
adc
iret
jge
testl
xor
jle
lock
cmpsb
test
scas
adc
add
in
inc
mov
sbb
aaa
add
inc
xchg
inc
sbb
icebp
aas
jecxz
mov
outsl
adc
add
fildll
inc
adc
jl
jno
pop
mov
xor
scas
lods
test
daa
sub
add
bound
into
std
scas
sar
mov
mov
add
jecxz
test
aam
ret
lea
inc
push
cmp
adc
or
push
dec
sub
in
pop
add
cmp
mov
or
scas
cmpsl
cmp
dec
fmuls
sbb
jg
dec
insl
mov
les
mov
adc
push
leave
xor
leave
lods
xor
cmc
push
mov
mov
ja
jae
push
scas
in
std
mov
repz
jae
push
into
std
xchg
adc
mov
mov
lods
adc
xchg
jnp
cmp
adc
xchg
sbb
sub
push
jnp
stc
cmp
xor
jne
pushf
loop
dec
cld
xchg
mov
lret
mov
scas
mov
xlat
out
dec
mov
cmpsl
and
mov
in
sbb
leave
std
push
inc
adc
fucom
inc
jge
inc
pop
ret
les
add
shrb
andb
ret
mov
mov
push
xchg
lcall
js
fisubrl
out
enter
jo
add
scas
push
mov
sbbl
push
cmpl
pop
inc
or
jp
lods
pop
pop
jl
dec
ljmp
cmp
jl
mov
mov
inc
add
add
mov
pop
push
lea
gs
push
popf
das
daa
cmc
or
xchg
gs
cmpsb
test
mov
cmp
arpl
outsl
cli
jb
es
je
icebp
xchg
or
or
mov
fwait
pop
pcmpeqb
push
inc
or
pop
xorb
or
pop
mov
add
xlat
fstl
sub
popa
adc
xchg
adc
out
scas
out
out
xor
mov
sub
hlt
jle
xchg
js
push
out
in
fidivs
cmp
imul
shl
insb
pop
stos
jbe
mov
inc
pop
and
test
dec
dec
das
add
dec
icebp
loope
outsb
mov
movsb
push
cmc
add
loop
lcall
cld
push
in
xchg
jl
aam
dec
dec
fcmovnu
fcmovnu
jp
fsubrs
cmp
mov
jnp
or
mov
or
push
lods
add
xchg
iret
sbb
ljmp
call
lods
shrl
push
jecxz
in
sub
mov
in
loope
jns
mov
sub
inc
push
push
iret
xlat
push
sbb
cmp
cmp
dec
mov
fbld
jp
lea
adc
sbb
aas
aam
int3
out
test
mov
push
cmp
lahf
inc
pushf
ja
lock
scas
or
pop
xchg
sbbl
shl
pushf
in
or
fnstsw
add
push
cmpsb
push
mov
nop
cmpsb
arpl
or
aam
push
jae
icebp
or
and
adc
out
ljmp
inc
pop
xor
aam
imul
push
das
xor
loop
pop
or
cmp
pop
or
mov
pop
push
dec
cmp
lods
cmp
push
inc
lret
fstps
popa
xchg
cmp
sbbb
mov
mov
sbb
and
stc
mov
repnz
iret
out
icebp
stos
scas
cwtl
add
xchg
out
pop
xchg
fucomp
mov
add
push
dec
xor
stc
nop
dec
mov
cmp
inc
out
cmp
xor
jnp
mov
ljmp
mov
cwtl
stc
mov
push
sub
mov
fisttpl
pop
cmp
jb
xchg
xchg
popa
xor
mov
and
das
lods
call
ja
lds
stc
out
mov
movsb
fwait
in
push
mov
test
arpl
dec
mov
push
mov
sahf
cmc
loope
cli
xchg
push
fs
das
imulb
jp
ucomiss
dec
lret
xchg
andb
fdivp
cmpl
nop
pop
outsl
lret
das
arpl
jecxz
aaa
out
out
pop
mov
cmpsb
cmpsl
loopne
in
movsl
sub
mov
outsl
cmp
dec
mov
push
inc
cmp
lcall
daa
iret
fisubl
cmp
mov
aad
push
sbb
es
pop
or
fcmovnbe
movsb
mul
lret
aaa
mov
mov
jle
out
mov
inc
aas
test
push
cli
rolb
adcb
leave
push
jle
mov
mov
add
pushf
lret
aad
stc
jnp
pop
orb
adc
jl
fwait
jp
mov
add
lret
pushf
arpl
mov
iret
pop
jne
mov
cmp
or
cwtl
sbb
pop
popl
loope
cmp
pop
fstl
sub
iret
sub
jl
mov
ljmp
stc
cs
imul
pop
add
jmp
sbb
pop
xor
mov
mov
insl
pop
push
int
cs
idivl
pop
imul
mov
ret
ret
cli
pop
add
mov
ficoms
addr16
rcrl
mov
aad
cmp
adc
sbb
push
mov
jnp
mov
mov
mov
mov
scas
ret
jae
mov
hlt
lds
aam
and
icebp
jge
jo
and
sub
rcll
in
mov
sarb
imul
pop
mov
sbb
out
roll
in
fistl
sbb
cmp
mov
out
scas
xchg
jle
and
adc
test
or
jle
mov
cli
pusha
sbb
mov
addr16
movsb
out
push
xlat
leave
fidivl
test
test
sub
outsl
or
xor
repz
adc
in
pop
xchg
lods
adc
cmpsl
cltd
mov
iret
loopne
rcll
sbb
jp
jp
hlt
and
ss
and
imul
imul
out
sub
adc
ljmp
mov
dec
andb
sub
idivl
mov
in
inc
mov
aaa
lret
jns
mov
push
js
fldenv
cmp
stos
dec
push
add
push
mov
test
or
scas
lods
das
imul
bound
call
sbb
xchg
ffree
fstpl
xor
leave
in
fcoms
mov
xor
mov
sbb
fldcw
xchg
shr
inc
leave
pop
pusha
arpl
cmp
out
sub
sub
lds
jmp
cmp
add
shlb
enter
dec
sub
fdivp
test
sub
adc
sbb
cli
iret
aaa
cs
scas
jae
cmp
stc
jg
mov
pusha
cmp
mov
mov
jecxz
jne
enter
dec
dec
pushf
lret
loop
mov
jo
fmull
leave
call
daa
xchg
jo
sbb
cmp
sub
mov
and
stc
add
dec
cltd
jnp
imul
clc
push
mov
pop
dec
sub
jo
dec
incb
loopne
pop
sbb
or
dec
test
dec
xor
fldenv
push
insl
imul
pop
xchg
mov
call
xchg
pop
jo
jge
movsl
inc
frstor
mov
stos
out
sbb
stc
push
stos
add
cmpsl
lds
test
jo
mov
loopne
aam
call
std
xchg
xchg
or
dec
push
les
xchg
or
popf
test
xor
aad
or
push
jne
push
lret
fsubrl
in
loop
pop
mov
xchg
adc
cwtl
xchg
jbe
mov
ds
push
sarb
jmp
out
push
icebp
sub
mov
fwait
cmc
and
rcll
dec
repz
jmp
mov
roll
cmp
andb
jo,pn
cmpsb
cmp
inc
or
inc
cmp
cmp
test
imul
jbe
out
scas
cld
pop
lds
push
pop
xchg
lock
jge
mov
pushfw
or
loop
neg
mov
mov
jmp
arpl
sbb
add
xor
cld
movsl
test
shlb
or
push
cmpsl
ja
gs
fsubrs
push
inc
push
lds
les
lahf
jmp
sbb
pushl
mul
scas
cmc
cmp
xchg
dec
popa
or
call
pop
fsubrl
mov
movsw
jns
mov
xchg
iret
scas
pop
adc
cmp
dec
fisubrs
xlat
push
shrb
jge
mov
dec
fs
test
jb
jmp
jae
mov
xchg
and
push
jecxz
push
call
rclb
add
xchg
jle
mov
inc
dec
cli
ret
xor
mov
scas
xor
jp
cs
xchg
in
js
movsl
int
sub
jp
cmp
jae
call
pop
loopne
sub
sub
inc
pop
repz
int3
insl
test
xchg
pop
sbb
movsl
xchg
push
subl
das
icebp
xor
jno
pop
cli
in
int
imul
insl
sbb
inc
repz
pop
es
nop
add
test
sbb
jbe
stos
pushf
mov
imul
fists
fs
cmp
add
push
sub
jb
and
push
mov
inc
scas
xor
sarl
ljmp
cs
xchg
mov
test
push
std
inc
add
mov
ds
gs
aad
mov
xor
and
push
and
push
bound
and
pop
cmp
xor
fsub
es
inc
sahf
dec
mov
add
xchg
xchg
out
clc
push
adc
sahf
jae
int3
jmp
arpl
aaa
dec
xchg
and
aaa
lahf
push
movb
out
loopne
in
jecxz
test
sbb
cmp
sbb
in
cmpb
leave
xchg
stos
or
xor
mov
or
mov
ljmp
in
scas
icebp
push
rorb
dec
lret
iret
pop
rorl
arpl
lds
push
cmp
fcoms
rcll
dec
add
dec
orb
pop
pop
cltd
xchg
clc
cltd
stos
xchg
out
aaa
mov
insl
add
and
fdivrp
mov
les
int
hlt
call
jb
subb
jns
out
outsl
dec
sbb
repz
call
jecxz
cmp
cmpsb
ror
mov
in
mov
addb
icebp
push
fimull
mov
lret
dec
inc
std
ret
and
sub
or
neg
fdivs
inc
adc
test
int3
sbb
in
fistpll
push
adc
pusha
pop
cs
sti
ret
sbb
inc
icebp
add
bound
jns
stos
sub
mov
idivl
add
and
or
cmp
pop
inc
bound
inc
imul
and
daa
and
mov
cwtl
sub
data16
sbb
fwait
lods
sub
xor
pop
andl
sub
jp
cmpsb
pop
loopne
and
popa
pop
add
pop
arpl
fists
cmp
mov
fwait
mov
mov
loop
movsb
arpl
push
stc
add
adc
cmpsb
arpl
shll
stc
jo
roll
mov
dec
sbb
and
aas
mov
lahf
jl
in
call
int3
inc
xchg
jo
mov
pop
lods
jl
push
mov
fwait
add
jnp
xchg
inc
out
jae
rolb
rorl
mov
ds
mov
mov
push
popa
orb
aam
es
jmp
inc
sbb
adc
rcrl
cmp
push
push
inc
sub
popl
inc
movsb
insl
mov
or
test
lock
xchg
push
aaa
push
dec
lea
out
es
in
rcrl
loopne
cli
push
dec
rol
sub
notl
outsb
mov
movsl
ljmp
xchg
ret
dec
fcoms
xlat
daa
insl
xor
mov
xor
cmp
push
mov
mov
out
and
sub
test
inc
int
movsl
mov
fbstp
in
sbb
aaa
jmp
mov
xor
mov
add
mov
popl
pusha
call
or
nop
int3
inc
push
mov
sub
pusha
xor
and
push
or
int
and
xchg
das
xor
out
jmp
leave
dec
and
ret
rcll
push
popa
cld
outsl
fsub
xchg
add
je
shlb
xchg
adc
mov
push
sbb
jp
mov
lea
mov
das
outsb
sub
test
xor
mov
das
xchg
xchg
nop
mov
gs
cmp
inc
sub
inc
jle
popa
add
cmpsb
xchg
in
idivl
mov
stos
mov
int3
ret
push
add
outsl
sbb
or
icebp
adc
pop
mov
pushf
int3
mov
ret
out
push
cmp
mov
mov
mov
imul
loopne
sub
xor
les
push
xchg
pop
cmp
xor
cwtl
daa
lds
cmp
xor
xor
dec
pop
mov
push
xchg
mov
stos
lock
jecxz
pushf
outsl
loopne
push
push
and
rclb
or
in
cmpsl
add
inc
int
imul
cs
push
or
xchg
push
cmpsb
inc
popf
rcll
test
mov
xlat
decl
jge
aam
imull
lods
sti
cmp
or
loop
push
cli
mov
lods
or
jns
and
rcrl
loopne
sbb
scas
push
popl
call
call
adc
xchg
dec
jle
divb
and
xor
mov
pop
mov
xchg
stos
test
jmp
push
pop
fwait
shll
or
faddl
dec
repnz
lea
cmpb
aas
mov
and
hlt
xchg
mov
loopne
cmp
push
lock
fcoms
mov
sbb
push
pusha
pop
repz
mov
stos
sub
adc
bound
or
ret
mov
sub
cld
pop
mov
cmpsb
mov
mov
fldt
imul
mov
pushl
lret
std
mov
jecxz
push
inc
and
repz
jnp
cmp
cmp
pusha
inc
sub
mov
push
dec
pop
xlat
ja
mov
cmc
stc
or
jg
pop
not
push
mov
pop
xchg
jns
push
adc
shrl
movsl
xor
idiv
mov
adc
lods
dec
ret
cli
sub
xchg
call
add
xchg
push
in
daa
push
push
rclb
iret
cli
orb
adc
mov
rcrb
fistl
push
jns
pop
and
lock
xlat
or
mov
mov
cli
icebp
cmp
mov
scas
mov
mov
and
inc
pop
es
xor
jle
adc
jbe
popa
mov
les
pop
adc
add
jle
arpl
adc
or
push
xor
and
or
mov
ficoml
mov
mov
ret
leave
xor
ljmp
inc
imul
jns,pt
ja
pop
mov
xchg
xor
hlt
popa
in
dec
pop
mov
or
pop
sub
push
push
in
xor
push
mov
insb
ljmp
inc
out
and
mov
outsl
aad
or
cmpsl
std
aam
add
xchg
cmp
mov
jle
mov
lea
jle
stc
pop
in
fidivrl
insb
xor
mov
sub
ds
lret
test
mov
add
mov
mov
jmp
push
and
and
dec
mov
mov
push
inc
inc
sub
xor
aam
pusha
dec
xchg
sub
pop
fists
sub
or
cmp
in
je
mov
inc
enter
jmp
stos
scas
sbb
mov
sub
xchg
jecxz
push
pop
es
adc
add
push
lcall
icebp
jbe
fistps
sub
out
stos
rorl
jmp
ljmp
in
je
add
jae
mov
inc
jge
inc
push
sbb
faddp
das
pop
cmpb
add
inc
aam
cmp
and
lret
xchg
clc
data16
fwait
mov
jo
test
mov
cmpsl
pop
sub
cwtl
stos
int
dec
fcomi
idivb
cli
test
cwtl
mov
xor
imul
or
add
or
inc
or
mov
cmp
dec
cltd
push
movd
mov
out
nopl
and
dec
andb
push
xorb
test
stos
imul
cmpsl
mov
fs
and
cmc
xor
sarb
test
jo
fwait
add
mov
xor
dec
test
pop
jns
ret
mov
mov
outsl
or
inc
lds
mov
jg
je
mov
add
xchg
cmc
push
push
daa
jae
sarb
or
mov
addb
mov
aad
push
mov
or
and
mov
fmull
adc
add
int3
and
sbb
fidivl
cwtl
ss
sbb
inc
fincstp
and
xlat
int
hlt
sbb
mov
call
sbb
call
ror
pop
push
add
aad
leave
jno
sti
in
lret
in
and
mulb
xor
lahf
sub
lds
call
cmpsb
mov
fbstp
adc
test
dec
xchg
push
jecxz
js
cltd
outsb
ret
js
and
pop
inc
cmp
inc
bound
cmp
push
lcall
loope
int
rcrl
fs
cltd
jge
pop
shll
ret
js
inc
add
xlat
cmp
fnsave
in
sahf
mov
shll
das
sti
daa
subb
stc
imul
cmp
int3
mov
popf
or
xchg
addb
jbe
int3
stc
push
mov
inc
dec
jl
aas
add
pop
cltd
pop
jnp
sbb
dec
lods
inc
mov
hlt
pop
xor
xlat
lods
sub
aad
loop
cmp
lods
mov
hlt
inc
popa
xor
sub
insb
mov
pop
test
fwait
mov
push
ljmp
stc
or
scas
cmp
lods
inc
insb
pop
hlt
insl
xor
add
xchg
rorb
call
xchg
clc
xlat
ljmp
in
dec
inc
out
scas
pop
sub
repnz
ljmp
xor
les
hlt
stos
xor
data16
xor
jbe
push
lahf
push
jne
adc
sbb
adc
icebp
jmp
mov
jne
push
pop
pop
push
inc
cs
pushf
clc
mov
sub
push
mov
jne
cmp
jmp
inc
out
mov
insb
leave
loopne
and
fs
xchg
bound
fdivr
sti
adcb
and
or
cltd
pop
fisubrl
pop
inc
pmulhuw
aas
inc
lds
jmp
pop
data16
aam
inc
and
inc
lahf
xchg
sahf
rclb
cmpsb
fidivrs
cld
testl
cwtl
or
rcl
cmp
pop
iret
sbb
mull
add
jns
inc
cmc
cmp
dec
xchg
iret
pop
fwait
addl
pop
cmp
aad
mov
loopne
inc
xchg
or
call
lcall
dec
xchg
fcoml
sub
jp
xor
in
xor
out
inc
pop
or
push
adc
push
stos
sub
dec
lods
loopne
push
idiv
cmp
sahf
mov
push
pop
sbb
push
cld
sub
add
push
mov
std
cmpsb
jae
out
clc
mov
xchg
ja
lret
push
and
xchg
xor
xchg
adc
push
outsl
jne
aas
iret
mov
sub
sti
sub
outsb
adc
pop
imul
dec
test
push
outsb
pop
stos
ds
cmpsb
mov
leave
lods
and
jle
or
and
lret
pop
xor
sub
ds
dec
add
stos
ljmp
mov
mov
push
dec
int
inc
mov
dec
inc
jge
jle
pop
xor
push
mov
push
inc
jo
into
push
je
xchg
sub
xchg
pop
aaa
outsb
mov
popa
imull
sahf
fmuls
std
sub
inc
or
fsubs
sub
ret
lret
sub
int
xor
add
rcll
leave
mov
aad
out
sbb
push
mov
adc
mov
jmp
push
lret
mov
cmp
imull
stos
jg
nop
xchg
xchg
lods
fiaddl
lcall
inc
and
push
popf
call
sbb
sbb
jmp
fisttpl
push
cmc
xor
fnsave
jl
notb
push
mov
pop
xlat
outsl
xor
adc
mov
lods
pushf
pop
jb
inc
lea
mov
jmp
jnp
mov
mov
inc
ss
add
int3
sub
mov
into
or
add
iret
pop
sub
push
mov
sub
jg
loopne
stos
push
mov
push
aaa
xchg
push
arpl
xchg
cmp
sahf
mov
add
or
mov
xor
xor
out
icebp
push
pop
add
push
jne
push
mov
dec
repnz
sbb
sub
repz
dec
sbb
mov
out
movsl
mov
adc
mov
jg
mov
test
push
stc
pop
add
push
mov
adc
mov
das
push
mov
lea
insb
pushf
inc
ljmp
insl
adcl
fwait
mov
pushf
enter
sti
stc
test
loopne
inc
and
mov
iret
pop
mov
mov
adc
stos
adc
pushf
xchg
sbb
pusha
adc
test
mov
insb
ret
pushf
mov
mov
pop
inc
push
insb
inc
sub
lret
insl
or
inc
ret
pop
xchg
sbb
arpl
addr16
push
out
andb
push
pop
rcrb
xor
hlt
adc
andl
inc
std
xor
mov
rorb
pop
mov
dec
cmc
shl
lahf
imul
cmp
xor
and
aaa
shll
ds
dec
adc
xor
les
jo
add
leave
loop
and
inc
mov
mov
decl
dec
scas
xlat
fwait
add
pop
xor
push
imul
mov
lds
pop
js
pop
pop
mov
cmpsl
pop
das
sarl
mov
mov
ret
pop
rclb
mov
pushf
mov
lods
cwtl
jmp
jecxz
shlb
add
add
dec
repz
fwait
jno
inc
pop
cmp
pop
push
fwait
and
das
cmc
fbld
out
push
iret
mov
adc
and
fisttpl
int3
xor
je
pop
outsb
pop
fcoms
pop
cmp
ret
adc
adc
inc
fimull
icebp
repnz
roll
add
jno
add
in
sbb
inc
xchg
daa
pop
xor
shll
out
xchg
and
mov
bnd
inc
mov
mov
adc
jbe
and
and
fistps
lock
icebp
loope
cmp
pop
popf
cwtl
add
data16
pop
or
test
dec
or
cwtl
sbb
not
dec
stos
pop
jo
call
xor
outsb
jbe
mov
cmp
jle
dec
mov
mov
pop
and
hlt
enter
out
pop
mov
fldl
scas
sub
iret
je
cs
inc
or
push
js
in
xor
adc
mov
xchg
shlb
jg
pop
ret
xchg
imul
add
sarb
lret
repz
add
jle
jae
scas
lretw
push
hlt
push
xchg
push
fdivs
cmp
xor
xchg
pop
fdivl
jb
lret
imul
jmp
in
lahf
dec
mov
inc
je
mov
mov
popa
stos
dec
int3
inc
shlb
xor
outsl
icebp
lret
mov
cmpb
test
aas
cmp
cld
mov
push
sub
pop
pop
loop
jg
ret
in
add
ljmp
shlb
sub
pop
or
std
add
mov
dec
rorw
inc
add
scas
loopne
test
jno
adc
or
lret
repz
cs
sub
adc
outsb
xor
mov
ds
sub
sub
aaa
adc
testb
or
and
and
push
xchg
inc
xchg
xlat
and
aad
in
adc
outsl
das
das
mov
xor
pop
xchg
xchg
int
xchg
cwtl
fucom
call
in
adc
mov
pop
mov
leave
cmp
nop
fcoms
push
lods
mov
push
and
dec
mov
adc
cmp
inc
xchg
outsl
mov
push
notb
and
not
mov
inc
adc
ss
jae
sub
mov
test
xor
push
dec
dec
pop
cmpl
in
sti
cmp
and
adc
fistps
repz
add
lret
nop
and
aaa
cwtl
sti
sub
pop
cltd
mov
ds
pop
idivl
sbbb
mov
jbe
ret
cs
rorl
leave
dec
add
pop
push
sbb
mov
cmpsb
insl
add
pop
test
xchg
mov
rcll
or
mov
jg
push
dec
pop
mov
add
icebp
insb
js
push
test
mov
sub
imul
sbb
ret
test
sbb
mov
xchg
das
mov
push
mov
and
test
dec
push
xor
xor
mov
addb
dec
insb
aas
and
enter
gs
mov
out
adc
fstps
cli
orl
and
and
mov
add
cli
stos
mov
imull
sbb
push
jo
std
shl
pop
jmp
and
sarb
out
call
sbb
jp
out
test
jb
inc
xchg
mov
add
hlt
mov
xor
out
mov
ss
xchg
add
cmp
sbb
sbb
lahf
cltd
addr16
fcom
mov
xor
dec
lods
aam
and
out
hlt
jo
leave
push
movsb
adc
imul
or
adc
test
aaa
repnz
sbb
pop
and
sarb
dec
mov
dec
xlat
in
dec
cmp
rcrb
sub
and
push
mov
ss
mov
mov
mov
jno
cmpsl
xchg
sbb
iret
mov
jo
mov
aad
sbb
lret
pop
les
mov
push
jno
test
std
leave
ret
inc
add
je
repz
mov
cld
lods
and
inc
and
aaa
sysenter
movsb
into
xchg
dec
or
push
sub
jne
push
jnp
sub
rclb
sbb
jge
sarl
sbb
sbb
push
xor
fistpll
inc
fidivs
mov
notb
fsts
add
arpl
ja
cmp
sub
jle
sbb
push
mov
jle
aam
bound
test
xor
xchg
pop
aad
sbb
dec
mov
stos
pop
pushf
cmpsl
ret
xchg
inc
int
inc
sub
mov
shl
aas
stos
inc
cli
aam
in
mov
call
jp
stos
mov
pop
lods
add
jne
inc
add
test
call
jbe
adc
sbb
push
xchg
sbb
imul
add
jno
pop
sub
pusha
xor
jle
cmp
test
push
mov
push
add
jecxz
call
inc
out
out
out
in
not
cmp
add
movsl
sahf
jg
int
push
adc
mov
jmp
je
push
daa
jmp
jae
cmp
mov
mov
cs
push
rcl
dec
bswap
mov
test
in
xchg
lret
cmp
push
jb
mov
push
jnp
inc
js
out
dec
stc
loopne
adc
lock
je
add
push
je
or
xorb
stc
and
sti
xor
mov
xchg
mov
and
cmp
insb
mov
scas
movb
out
sar
int
add
daa
outsl
mov
xor
or
push
add
insb
push
jg
stos
jbe
push
lock
repz
icebp
xchg
inc
sbb
or
push
add
push
pop
in
fcmovnb
stos
mulb
pop
pop
push
and
xchg
or
mov
sub
mov
xor
fs
xlat
test
cmpsb
insl
loopne
js
jne
cs
push
data16
pop
in
sti
aad
push
mov
cmp
push
dec
pop
xor
push
pop
or
mov
mov
int
cwtl
jne
in
pop
lahf
xor
push
cmpsb
shl
add
fdivs
andl
lods
fdivrs
mov
jnp
push
jbe
sbb
test
xchg
mov
mov
jl
fistps
jo
dec
imul
cmp
push
call
xchg
adc
je
and
je
mov
xchg
cmc
lahf
lock
mov
pop
adc
xor
xchg
push
inc
xchg
dec
jno
insl
fs
add
out
out
mov
xchg
lahf
jnp
dec
out
mov
insb
insl
mov
daa
ja
sbb
dec
sbb
iret
into
xchg
lret
cmpsl
addr16
insb
dec
subb
jg
cmp
jb
icebp
add
ljmp
mov
lahf
dec
pop
cmp
push
sbbl
stc
out
xor
pop
dec
pop
sbb
idiv
popa
xchg
repz
or
sbb
das
cmpsb
iret
movsb
jne
dec
push
cmp
sahf
hlt
aas
pop
jecxz
ret
sbb
mov
aaa
pop
mov
adc
outsl
inc
xlat
sub
shrl
xor
addr16
jnp
sub
mov
pop
lcall
jne
jns
divl
sbb
sbb
add
data16
mov
dec
les
out
sbb
adc
mov
xor
fwait
int3
jecxz
mov
dec
repz
dec
mov
mov
jno
mulps
mov
loope
bsr
mov
ds
cmc
pop
stc
inc
scas
test
xor
sub
push
push
add
cwtl
int
cmp
xor
cli
gs
jge
add
mov
dec
jge
or
sahf
push
xchg
f2xm1
add
ficomps
push
pop
cmpsl
lods
pushf
inc
mov
xor
cmc
lods
mov
shr
fbld
fnstenv
mov
inc
leave
popa
out
es
jmp
shlb
and
xor
pop
stos
sbb
dec
mov
nop
rol
shll
and
in
mov
sarl
cmp
out
jnp
jns
jp
mov
xor
push
jae
pop
or
int3
add
push
insl
xor
cmc
daa
rclb
lret
adc
sbb
add
scas
push
mov
push
push
push
xor
aad
sbb
inc
insb
ljmp
lods
mov
push
or
jno
lahf
push
mov
pop
push
insb
push
lret
add
movsl
push
or
popa
andb
mov
call
or
mov
jp
jge
or
jnp
cli
xor
fdiv
insb
leave
pop
fsubrl
and
popa
outsb
clc
or
sub
movsb
test
outsl
push
jbe
hlt
sbb
mov
pushf
addr16
jb
pop
push
and
fadds
stc
insb
bound
outsl
jp
mov
sbb
sbb
mov
jb
or
leave
movsl
jb
xchg
ss
and
dec
je
arpl
pushf
sbb
xchg
das
xchg
mov
lret
clc
aad
sub
and
mov
xor
xor
int
leave
shl
cld
inc
in
jae
repnz
nop
and
bound
ja
cmp
int
dec
or
push
mov
or
dec
fadds
js
cld
enter
outsl
and
scas
insl
pop
pop
cmp
mov
mov
mov
pop
test
pop
cmpsb
sbb
or
cmp
pop
add
insb
sti
test
pop
inc
sub
adc
or
and
sahf
jg
int
push
mov
pop
sub
xchg
add
push
add
orb
mov
or
cmpsl
pop
xchg
leave
nop
pop
sbb
sarb
mov
sub
or
pop
ja
push
mov
adc
test
dec
push
pop
mov
pop
add
leave
sbb
push
jo
fnstcw
jae
xor
or
xchg
into
sbb
stc
mov
jb
int3
xlat
push
push
xor
movsl
mov
imul
sti
inc
inc
jge
inc
cmp
jl
int3
sahf
pop
sbb
ss
in
push
push
cs
xor
fdivs
sbb
imul
dec
lds
clc
lods
sbb
adc
movsl
jb
out
mov
cmovno
dec
sub
sbb
addl
outsl
mov
pop
movb
fnsave
xchg
pop
xor
jg
push
cmp
lahf
jne
iret
les
cld
jecxz
lret
jp
adc
add
insb
inc
and
pusha
mov
mov
dec
jae
loope
xlat
iret
jle
mov
es
pop
nop
mov
jnp
cwtl
repz
insb
sbb
dec
ss
dec
enter
loop
mov
testl
push
cli
mov
and
mov
push
imul
les
out
mov
out
into
das
mov
pop
jns
jp
add
cmp
aad
std
ljmp
and
mov
push
scas
inc
mov
mov
sub
inc
call
add
test
outsl
shrl
push
xor
mov
push
push
subl
pop
push
cmp
push
es
fcomps
dec
clc
arpl
adc
repz
lcall
xchg
sub
push
add
mov
scas
cmovl
popa
lods
in
jecxz
ss
pop
sbb
pushf
jg
cli
adc
rorl
lds
popf
sbb
out
fcmovbe
in
or
or
pop
ret
xchg
xlat
inc
push
imul
pop
jmp
mov
idiv
add
sbbb
mov
insb
xchg
inc
sbbb
and
sbb
fdivs
cmp
adc
jge
outsb
inc
xchg
fisttps
lods
jae
jo
xor
pop
andb
cmp
xchg
shll
cmp
pushf
pop
pop
push
fisubrs
in
cmp
outsl
mov
std
popa
and
push
int
or
xor
or
iret
lock
sub
cmp
aaa
fisttps
jb
xchg
cs
mov
pop
sub
jne
in
sub
inc
out
cmp
dec
fstpt
cltd
inc
movsl
and
fwait
stos
cmp
out
jbe
push
out
inc
fs
dec
mov
xor
test
mov
mov
call
ds
in
push
std
ret
fists
sub
push
mov
mov
and
cs
jno
in
sbb
pop
dec
or
adc
movsl
mov
in
aas
inc
push
sti
popf
ret
adc
or
outsl
push
lds
stos
pop
adc
dec
lret
add
mov
cld
ficomps
lcall
jecxz
es
inc
rorl
jecxz
xor
or
fsubr
jecxz
inc
pop
mov
adc
ret
pop
xor
and
pop
mov
or
dec
pop
and
arpl
in
and
outsb
aaa
and
lret
pop
jg
jge
inc
jle
ljmp
inc
mov
inc
shrl
loope
test
pop
mov
and
adc
adc
nop
mov
push
aas
negl
pop
xor
mov
leave
fwait
imul
cmpsl
insl
cmc
jge
pop
fistpl
inc
pop
or
push
lock
mov
and
xchg
lds
fmulp
mov
out
xor
out
push
adc
and
mov
and
xchg
shr
lret
mov
stc
faddl
inc
lds
jae
push
gs
hlt
lods
stc
mov
add
jl
jno
lret
clc
mov
and
add
leave
mov
xchg
inc
pushf
cmp
jns
sbb
loopne
inc
lcall
and
xor
mov
rorl
fucom
cmp
lret
pop
xchg
xor
adc
insl
inc
lcall
or
stos
fsubs
ret
jecxz
jnp
cld
je
popa
inc
int3
mov
aad
mov
test
jne
movsl
xchg
xchg
mov
adc
fstl
cmp
div
mov
push
out
inc
sub
pop
nop
mov
stmxcsr
call
sbb
sbb
test
stos
jmp
mov
das
les
std
mov
adc
popf
add
scas
mov
dec
xchg
insl
xor
out
jns
xchg
xor
jae
enter
into
hlt
pop
xor
sub
sbb
add
jb
cmp
repnz
mov
xchg
adc
add
push
movl
pusha
dec
sbb
inc
or
fdivrp
adc
sub
negl
lret
loopne
pop
and
mov
inc
xchg
jl
mov
push
std
test
push
testb
das
sbb
pop
xchg
in
jp
pop
jae
test
push
hlt
pusha
pop
adc
jle
or
sub
or
push
dec
jns
cmp
or
and
mov
add
add
xchg
stc
in
jmp
sub
pop
rcrb
sbb
dec
icebp
test
push
stos
xchg
iret
and
jmp
lcall
lock
imul
mov
mov
xchg
xchg
iret
and
out
jo
xlat
aad
ja
inc
and
pop
inc
mov
mov
adc
fs
cmpsl
mov
and
int3
neg
pop
out
fildl
incl
sub
movb
enter
int3
jge
cld
test
jae
push
stc
mov
mov
and
in
cmp
call
or
xchg
mov
mov
and
xchg
push
cmp
and
adc
and
mov
in
leave
adc
xchg
mov
push
daa
push
or
push
pop
mov
mov
push
lods
data16
shrl
jmp
xchg
pop
jp
test
dec
ficoms
mov
mov
test
cmp
out
push
popf
cltd
ret
mov
lea
push
jne
movsl
mov
fildl
sahf
aam
repz
sarl
lods
fldenv
cmc
mov
insb
rclb
loope
jne
repz
xchg
mov
and
mull
sub
mov
stc
loope
xchg
push
pushf
xchg
shrb
pop
push
add
cmpsb
insl
jns
xchg
jno
sub
andb
jbe
sbbl
sub
aam
into
adc
jo
adc
jecxz
xchg
fsubl
cmp
fldenv
inc
fwait
ljmp
das
repnz
mov
pop
outsl
mov
xchg
mov
ljmp
inc
push
mov
hlt
jge
fdivs
push
jmp
sbbb
sub
push
xchg
scas
push
movsb
pusha
mov
lahf
jae
idiv
stos
mov
and
xlat
mov
clc
insl
pop
jle
jo
icebp
pop
adcb
repz
pop
lcall
push
imul
mov
dec
sub
leave
sub
xor
addr16
inc
out
repz
sbb
data16
xchg
movsl
xchg
pusha
push
imul
sbb
pop
pop
scas
cmpb
cmpsl
in
mov
ss
lret
std
inc
cmc
sbb
and
lcall
and
sbb
fstpt
leave
mov
fwait
lds
add
repz
push
push
lcall
adc
pusha
test
lahf
pop
sahf
test
cmp
test
cmc
in
rol
lret
adc
imul
cli
push
into
push
out
or
lret
cmp
into
lret
mov
cmp
repz
stc
adc
adc
jge
fwait
in
pusha
aaa
add
stos
in
adc
inc
pop
aas
jle
jae,pt
sub
jge
in
mov
cltd
std
lods
ror
out
mov
xor
sti
in
add
aas
lret
mov
icebp
xchg
inc
jl
stos
mov
mov
mov
adc
cmp
jl
xchg
inc
mov
imulb
sub
or
pushf
push
aaa
sbb
push
ja
insl
add
rdpmc
adc
mov
std
inc
push
loope
stc
lock
xor
or
mov
pop
xor
xchg
out
xchg
or
sbb
loope
sub
das
add
jp
xcrypt-cbc
cmpsl
push
insl
fisttpll
gs
iret
hlt
push
mov
sti
stos
push
sub
ja
je
xor
mov
lods
sub
add
dec
adc
jae
cmp
xor
call
gs
mov
stos
or
movb
pop
movsl
and
ret
aam
sbb
pop
mov
stos
iret
mov
xor
fldt
daa
or
mov
inc
lret
les
int3
loop
sbb
adc
repz
movsl
sub
add
cmove
mov
cltd
or
mov
rcr
test
pop
pop
inc
cld
idiv
scas
push
xchg
cmp
push
insl
outsl
mov
sbb
iret
xchg
fwait
push
sbb
mov
and
das
into
adc
jb
iret
push
inc
adc
mov
cmc
repz
scas
push
mov
push
gs
dec
fcoms
data16
inc
fildll
pop
iret
imulb
nop
in
sbb
leave
dec
imul
leave
xor
jmp
add
int3
out
pop
cld
cmp
push
jg
mov
arpl
faddp
sub
lock
push
inc
test
push
sbb
sub
sub
loope
addl
dec
xchg
imul
ja
in
mov
push
push
popf
cmp
dec
adc
jecxz
push
mov
mov
sub
cmp
orb
push
stc
mov
nop
ds
dec
stc
lret
insb
fstpl
xor
push
xor
push
and
leave
icebp
mov
sbb
mov
mov
pop
out
scas
movsb
fmuls
jno
inc
inc
lea
stos
lds
sbb
add
push
add
loop
adc
jmp
mov
pmaddwd
mov
pop
sub
inc
stos
sbb
mov
mov
or
xchg
jp
addl
test
sbb
das
or
cmpsl
mov
xchg
jns
cli
mov
dec
test
adc
int
adcb
mov
mov
iret
lods
sbb
inc
sbb
mov
dec
andb
js
fsubrl
or
icebp
out
ret
in
and
push
cmp
in
xchg
jae,pt
jae
cmp
push
jb
xor
enter
push
popf
pop
push
or
mov
pusha
xor
test
adc
into
in
cmp
xor
shlb
push
jl
cmp
add
sbb
xchg
push
imul
loopne
sub
into
mov
jo
inc
les
enter
mov
push
mov
lret
stc
xor
pushf
leave
arpl
iret
gs
and
jmp
fs
aad
fstps
enter
cmpsl
fdivrp
dec
lock
mov
mov
xchg
add
and
sbb
and
lock
test
jp
std
mov
lea
cmp
notl
jl
fadd
arpl
mov
cmp
add
jecxz
outsl
imul
add
dec
cmp
in
stos
ret
out
mov
xchg
outsb
push
pop
das
mov
or
ss
call
outsb
push
lret
mov
mov
loopne
lods
fstpt
les
mov
in
and
or
pop
jmp
insb
fwait
fwait
sbbb
ljmp
or
jo
movsl
lods
fsubrl
xorl
push
xor
sbbl
in
into
test
je
mov
lods
mov
test
lods
imul
gs
out
fwait
and
outsb
pop
jbe
mov
cli
inc
xor
xorb
mov
repz
pop
test
jecxz
nop
jnp
xor
jo
jnp
pusha
and
into
dec
nop
lcall
and
lods
sbb
ret
pop
call
mov
pop
hlt
jecxz
cmpsl
movsb
and
movsb
xchg
mov
inc
jle
aaa
xor
leave
pop
mov
jno
movb
inc
add
adc
inc
ljmp
xor
adc
xchg
repz
xor
or
std
and
pop
scas
aaa
mov
inc
push
mov
jmp
adc
mov
cmp
jecxz
or
cmp
or
aaa
cmpsl
xor
adc
fld1
adc
xchg
mov
and
or
rcll
mov
cwtl
mov
ja
and
ret
and
lea
push
mov
sub
mov
test
dec
adc
mov
pop
adc
aam
shl
or
out
fbld
xchg
and
cmp
push
pusha
adc
cmpsl
bound
lahf
inc
jge
stos
add
popa
aam
cmp
cwtl
scas
push
xor
add
aas
cmp
filds
repnz
out
cmp
bound
sub
test
stos
jl
ss
test
addr16
or
test
sahf
shrb
mov
es
xor
pop
in
jne
shrb
pop
push
xor
ss
xor
push
sub
mov
sub
lds
pop
cmpsb
lcall
jle
addl
not
mov
jle
test
add
or
xor
push
sahf
inc
mov
fldt
cmp
repnz
inc
test
inc
add
nop
sub
mov
popf
sub
lods
inc
add
inc
pop
push
jge
push
insb
mov
test
xchg
insb
pop
xor
cmp
test
mov
pop
and
aas
or
sbb
test
cmp
aaa
daa
push
mov
sbb
mov
test
test
inc
jle
rcll
adcl
mov
fldenv
in
xor
mov
add
xor
mov
pop
sbb
rorl
and
lock
test
lcall
or
das
jo
aad
lock
sub
and
in
repz
push
xor
or
lock
outsl
mov
xlat
push
pop
xchg
dec
pop
shr
cmp
xchg
enter
lods
adcb
pop
in
mov
and
fwait
andb
stos
or
sahf
in
push
in
fcmove
lcall
std
je
cld
inc
adc
mov
jg
sub
pop
mov
mov
push
add
gs
sahf
scas
in
xchg
fdivrs
ljmp
jg
scas
sbb
dec
lahf
lahf
jbe
xor
mov
xchg
or
fsts
mov
in
cmp
xchg
je
dec
arpl
push
lods
mov
fistpl
pop
ds
mov
dec
decl
xorb
xchg
clc
cmp
rcrl
dec
xchg
xor
jne
fwait
mov
scas
xchg
and
insb
xor
xchg
dec
jecxz
les
mov
subb
dec
mov
movsl
jle
sub
xchg
inc
mov
stos
enter
push
aaa
lods
push
enter
adc
xor
adc
xchg
add
xor
and
cs
push
aad
add
mov
popa
cmp
lcall
cmp
test
mov
inc
or
xor
imul
add
les
inc
ds
add
frndint
sbb
and
imul
andb
push
cmp
es
push
out
and
mov
aam
pushf
mov
fcmove
add
jae
sub
and
flds
jno
jo
mov
jge
test
sar
bound
mov
xlat
outsl
sti
popf
in
fildl
cld
cmp
in
aam
mov
js
push
cld
and
push
into
je
out
adc
and
mov
hlt
push
test
dec
test
adc
lods
push
and
scas
cmp
mov
std
xchg
lods
xchg
inc
outsb
rcrb
mov
imul
js
xchg
std
and
xlat
xchg
scas
ficoml
popa
imul
push
mov
ffreep
xchg
lock
push
cmp
pusha
xchg
lcall
sub
push
add
lods
sti
cmpsl
add
inc
and
pop
mov
lcall
mov
push
call
ljmp
rcrl
stos
aaa
fnstcw
mov
or
scas
rolb
arpl
idiv
xchg
imul
je
xor
mov
or
add
xchg
push
repnz
mov
dec
sub
rorb
adc
mov
movsl
arpl
jbe
add
xchg
in
sub
push
rorl
clc
jmp
mov
sub
das
inc
out
inc
jne
mov
adc
call
mov
pop
out
xchg
xchg
lea
pushaw
xlat
cmpps
push
cld
clc
sbb
rol
cmp
rclb
push
in
jo
jmp
mov
stos
les
in
sub
loope
aam
cmp
add
push
jae
loope
xchg
push
fstps
lods
jl
dec
adc
aaa
hlt
mov
or
jne
mov
sbb
shrb
sbb
cmp
fdivl
fnsave
lea
cmpsl
inc
sub
cmpsl
xchg
enter
inc
call
pop
in
ret
mov
sub
addr16
sbbb
mov
and
jnp
popa
adc
rcrb
ss
je
sbb
fnstenv
subl
enter
sub
int3
jnp
inc
adc
addr16
lds
pushf
push
pop
or
or
les
dec
fnstcw
sbb
push
scas
or
cmp
aas
or
adc
mov
inc
bound
jae
ja
pop
mov
outsl
sti
xchg
sbbb
stos
mov
dec
xor
add
fidivrs
dec
xor
mov
btc
fwait
jnp
sbb
scas
lahf
and
int
mov
mov
fcomip
clc
rcr
inc
xor
inc
jmp
sbb
xor
adc
nop
or
outsl
mov
pop
jb
xor
xorb
shlb
cld
cmp
xor
leave
sti
movb
aas
lods
inc
inc
pop
mov
adc
out
js
mov
and
lods
dec
xchg
aas
sbb
cltd
mov
xchg
adc
fisttpl
movsb
int
adc
leave
xor
add
enter
sti
dec
jg
mov
pushl
inc
sarl
pop
sbb
fcom
mov
dec
fisttps
ljmp
aaa
out
pop
pop
ror
xchg
popa
push
xor
pop
test
push
inc
jne
xor
mov
mov
insl
addr16
xchg
dec
push
fnsave
xchg
call
fwait
cmp
gs
mov
jecxz
push
jbe
pop
gs
loopne
mov
cmp
test
daa
xchg
xor
cmp
inc
ljmp
sbb
repz
cmpsl
mov
jo
into
or
xor
xchg
test
dec
add
sub
cmp
sbb
pop
ds
push
pushf
add
sub
inc
stos
inc
jbe
jg
and
and
mov
inc
inc
sti
and
xor
inc
jbe
mov
dec
std
cmp
or
insl
repz
or
jp
jb
mov
cmp
push
loope
jns,pn
mov
mov
mov
push
sti
and
repnz
pushf
inc
jns
xor
xchg
cs
pop
mov
fisubrs
out
stos
es
fistpll
fnstenv
iret
pop
int3
lret
mov
inc
mov
sbb
sbb
jns
loopne
mov
push
dec
dec
mov
movsl
jl
mov
daa
dec
xor
sahf
ret
movsb
mov
shlb
push
and
clc
pop
data16
sub
xor
push
push
imul
imul
sbb
out
cmpsb
ror
sbb
sbb
and
add
setns
push
outsl
inc
in
std
divb
inc
scas
xchg
in
and
hlt
pop
push
addb
jo
bound
iret
pop
mov
mov
inc
sbb
adc
jae
fstps
mov
pop
xchg
xor
out
in
loop
in
aas
pop
pop
dec
stos
fsubrl
xchg
dec
aam
cmpsb
mov
movsl
add
dec
jecxz
inc
dec
loopne
adc
lcall
sub
int
sub
and
sbb
xlat
adc
fildl
fisubl
mov
call
or
addb
push
sub
outsb
or
hlt
cmpb
adc
mov
push
pop
and
scas
ret
fidivs
les
xchg
sti
mov
inc
js
push
pop
inc
cmp
jg
fldenv
mov
movsl
and
ljmp
bound
mov
mov
popf
xchg
or
sub
out
test
in
push
cli
pop
jno
pop
inc
mov
push
adcl
fidivrl
pop
mov
insl
adc
cmpsl
cmp
xchg
xchg
ss
inc
lahf
push
lahf
gs
push
repz
add
inc
adc
das
dec
mov
ffree
pop
lock
fldl
in
adc
pusha
insb
popa
rol
add
sub
xchg
mov
inc
les
fisubrl
hlt
jl
xor
jnp
lahf
into
or
jno
mov
jne
in
sub
pop
push
add
sub
std
out
mov
pushf
insl
fbld
or
fsubp
sub
adc
pop
adc
push
add
in
jne
loopne
mov
rcl
setns
outsl
dec
mov
jge
loopne
shll
sbb
cmp
pop
fsubs
sub
into
stos
add
notb
jnp,pt
jne
xor
in
pushf
adc
mov
scas
and
xchg
int
je
loop
mov
cmpsb
xchg
rcrl
xchg
lret
dec
mov
jns
mov
lock
jl
lret
pop
stc
stos
ret
btc
aas
repz
dec
scas
cmp
add
xor
mov
out
shlb
sub
jae
push
nop
and
jge
jg
mov
cmpsb
iret
adc
adc
add
add
ljmp
xchg
fisubrl
repnz
mov
movsb
cmpsl
push
cli
repnz
inc
mov
inc
cli
mov
mov
jl
fistpl
fwait
xlat
ret
cltd
xor
aam
mov
ret
jp
dec
lea
add
cs
jl
test
jp
inc
pusha
jae
push
sti
repnz
test
sbbb
sti
xorl
cltd
or
gs
mov
jle
enter
inc
xorl
test
out
xor
je
cmp
loope
insb
imul
lock
test
mov
insb
repz
mov
mov
std
xlat
jmp
repz
jnp
xor
aam
stc
rcrb
lret
jns
jno
orb
inc
jne
ja
jae
mov
push
push
jo
in
mov
lret
outsl
lock
repz
add
dec
icebp
push
iret
mov
bound
jno
loope
pushl
mov
cmc
popa
push
sbb
sbb
or
pop
mov
xchg
sbb
ret
jae
andb
jbe
push
cmpl
arpl
adc
jl
repnz
cmp
vmwrite
dec
aas
cmpsb
sub
add
stos
mov
xchg
push
mov
sub
scas
inc
pop
jne
add
pushf
scas
popa
loopne
aam
bound
aaa
adc
aam
push
hlt
mov
xchg
ljmp
aam
in
testl
es
lea
xor
pop
test
fdivl
jbe
mov
jecxz,pt
dec
lret
out
imul
jae
aam
movl
xchg
subl
xlat
xchg
dec
cs
pop
add
movsb
inc
xor
mov
sbbb
sarb
cmpxchg
ret
in
and
clc
mov
mov
mov
add
add
or
insl
cmp
aam
sbbb
outsl
cmp
stc
cld
xchg
adc
lock
call
cmp
ror
xchg
sbb
add
jecxz
ja
fisttpl
mov
jmp
loop
mov
or
lret
xor
jmp
push
mov
and
loope
mov
sti
sbb
ljmp
in
sti
adc
pop
test
gs
xor
insl
cmovbe
outsl
addr16
push
mov
adc
xor
popf
pop
negl
sub
out
int
mov
cmc
fidivrs
pop
ret
xchg
lahf
mov
int3
fnstcw
popa
in
adc
repnz
jnp
mov
inc
lret
add
xor
dec
inc
mov
sub
push
inc
push
jae
jnp
or
adc
push
dec
loopne
xor
movb
int3
xlat
stc
mov
or
jle
cs
jmp
scas
push
mov
movsb
mov
push
shrb
fisubrl
or
rorb
fwait
xor
push
popf
fwait
pop
mov
add
dec
test
dec
pop
stc
mov
stos
adc
dec
lods
push
inc
add
stc
push
inc
outsb
scas
add
fistpll
adc
loope
out
repz
mov
popa
mull
add
repz
scas
sti
insb
enter
or
loop
outsb
sar
push
jge
mov
out
lcall
movw
pop
rol
cmp
xchg
es
push
enter
push
jp
jo
dec
jle
out
fs
sub
mov
stos
cmp
cmp
fwait
and
inc
xchg
xchg
das
pushf
mov
les
sbb
out
lock
cmc
fwait
push
mov
jno
add
dec
adc
insb
lock
inc
imul
mov
sub
in
aam
jbe
push
jmp
and
cwtl
cs
and
cmp
ret
aam
pop
dec
movsl
pop
hlt
insl
mov
mov
gs
loop
mov
stos
inc
lods
push
add
mov
pushf
inc
cmpsl
daa
lds
mov
jp
in
and
sub
add
jno
mov
and
pop
mov
xchg
or
stos
aam
adc
data16
sbbb
movsl
outsl
hlt
sarb
pop
subb
push
cli
shr
sahf
inc
pop
mov
ret
sbb
ret
fcmovu
mov
adc
lds
cld
dec
ret
lods
xor
repz
out
push
inc
jb
fs
dec
sahf
aam
jmp
dec
cld
enter
inc
mov
pop
jp
daa
ret
pusha
icebp
in
xor
popa
mov
sarb
testb
mov
xchg
mov
hlt
aad
add
cs
ret
add
jno
lahf
push
repz
repnz
sub
jge
pop
out
cmp
clc
mov
sbbl
mov
in
test
inc
push
push
addl
idivb
pause
loop
insb
pop
push
loope
adc
lret
lahf
mov
ret
iret
out
pop
repz
call
and
cmc
xchg
mov
faddl
clc
mov
in
xor
fcoms
add
lods
rcll
rclb
pop
adc
in
mov
mov
mov
lods
out
pop
push
mov
mov
sbb
loope
adc
push
push
lock
cmp
pop
mov
sbb
or
xchg
fcompl
icebp
and
out
test
jp
xorl
shl
cmpsb
mov
push
jmp
leave
pop
loope
adc
xor
outsb
test
sbb
add
inc
ret
mov
jmp
call
sbb
sub
inc
pop
sarb
xchg
sbb
dec
adc
xchg
cmp
inc
xchg
pop
or
cwtl
pop
jno
lods
hlt
push
jp
lret
mov
xchg
or
dec
adc
pop
xlat
dec
in
xchg
cmp
mov
rcll
inc
jno
lret
ds
jp
mov
movsw
sbb
insb
test
fisubl
push
outsb
xchg
mov
daa
jne
inc
pop
mov
jmp
loope
push
pop
lret
inc
sub
into
scas
mov
gs
fsubr
jae
in
test
clc
dec
and
pop
fists
lds
int
or
push
lock
mov
prefetch
or
jbe
adc
fidivs
or
notb
mov
out
mov
clc
and
mov
test
cmpsl
scas
out
sarl
inc
mov
mov
mov
movsb
cmp
pop
stos
das
sub
xchg
xorb
jge
adc
or
jmp
aaa
bnd
jl
movsl
cmp
xor
sbb
xchg
testb
jbe
out
pop
pop
add
neg
dec
lea
test
inc
adc
pop
mov
aad
inc
mov
roll
jge
xor
mov
test
lds
fnstsw
adc
mov
push
cmp
cwtl
je
pushf
or
movsl
fidivrs
cli
xchg
push
push
cmp
adc
push
loopne
cmp
push
and
inc
scas
int
jmp
int3
std
adc
push
xor
fbstp
negl
test
add
jo
push
decb
cli
add
mov
jecxz
sbb
and
xchg
sub
shll
dec
jecxz
adc
cmp
popl
adc
movsb
lahf
lcall
shr
cmp
add
mov
jecxz
lds
mov
ds
imul
mov
scas
push
pop
jns
inc
xorl
shufps
leave
leave
xchg
pop
jle
loop
jl
enter
xor
and
and
push
les
lcall
jg
scas
xor
jnp
cs
dec
and
jecxz
inc
rcrb
adc
sahf
fs
fwait
shll
cs
in
movsb
push
or
mov
in
test
jne
data16
lock
lods
mov
pop
xor
bound
or
cmp
dec
jns
call
repz
sub
sub
out
test
mov
imul
add
adcb
xor
jns
sub
lock
bound
mov
out
fdivrp
pushf
ss
push
in
pushf
repz
push
ljmp
aad
sub
ror
mov
push
and
shl
rol
adc
pop
pop
jmp
adc
mov
test
jno
push
ss
cli
push
push
mov
out
and
lock
test
push
push
movsb
push
xor
aaa
fadds
add
inc
stc
fmuls
movsl
mov
lods
test
pop
std
cmpb
jg
ja
mov
lret
mov
cmp
in
popa
inc
push
and
xchg
es
into
pop
hlt
xlat
ret
stos
sub
sub
ljmp
cs
inc
and
enter
pop
inc
lcall
mov
xchg
mov
push
test
testb
ss
fcompl
or
stos
je
and
and
sub
lods
xchg
or
mov
sub
cld
aam
hlt
lods
xchg
jo
jmp
sub
fwait
mov
lret
dec
add
and
scas
sub
movsb
shll
cli
mov
xchg
ret
mov
leave
push
mov
xor
test
mov
cwtl
inc
into
mov
out
enter
notl
pop
fs
in
jb
mov
outsl
xor
rolb
enter
imul
and
mov
pusha
xlat
bound
inc
jnp
push
mov
pop
jb
scas
fldt
jb
mov
ss
dec
lahf
xlat
aad
xchg
lahf
mov
sahf
mov
xchg
jmp
sarl
cwtl
movsl
rorb
lds
stos
lcall
loop
sarb
cmc
gs
sbb
jg
jae
sbbl
inc
movsb
pop
outsl
sub
sub
fmull
sub
or
push
dec
test
mov
inc
sbb
out
jge
or
jecxz
xor
test
dec
push
add
aam
stc
nop
cmpsb
dec
in
sbb
loop
mov
xchg
fildl
ret
cltd
shll
adc
pop
jp
daa
les
sub
mov
pop
lcall
sbb
mov
push
or
cltd
jbe
jg
or
xor
ret
out
insb
enter
sbb
inc
xchg
adc
jo
jo
pushf
fldl
xor
lret
fisubrl
mov
out
mov
rorb
push
fsubrs
les
inc
and
jg
out
mov
jns
fstps
add
js,pt
cmp
iret
lods
repnz
mov
dec
jle
inc
push
daa
test
int3
mov
adc
jmp
aaa
movb
das
push
add
pcmpgtw
sbb
sub
daa
or
push
push
and
mov
push
test
cmp
stc
lret
or
push
sub
mov
mov
pop
test
and
in
xchg
insb
and
xchg
imul
mov
outsl
dec
dec
ds
jae
adc
ror
inc
es
lret
cli
or
out
sarl
push
xor
pop
imull
push
mov
inc
xchg
in
ljmp
dec
xchg
pause
jno
test
adc
dec
fidivl
ficomps
cltd
cld
add
out
scas
push
xchg
jbe
mov
mov
xor
cmpb
and
add
pop
cs
out
mov
aam
jne
lcall
sbb
and
and
filds
or
mov
or
adc
daa
in
push
pop
js
fwait
rolb
xchg
mov
leave
mov
shrb
inc
mov
ffreep
sub
loop
inc
push
cmp
pop
test
outsb
imul
mov
popa
cs
mov
lds
sbb
mov
iret
or
les
insl
pop
add
dec
mov
dec
mov
push
in
movsb
mov
adc
outsl
dec
pop
dec
test
loopne
mov
jle
sbb
mov
test
sbb
push
mov
cmp
fwait
movb
push
pop
sbb
mov
fwait
in
gs
pushf
adc
movsl
insl
ljmp
cmp
mov
sbb
cli
dec
fcomi
in
imul
adc
push
fcmovne
mov
jbe
xchg
movsl
repz
dec
jp
pop
outsl
ljmp
div
or
in
add
push
dec
jno
cmp
fimuls
in
cmp
sbb
popf
mov
sub
cmp
hlt
lods
fwait
xchg
scas
and
scas
xor
cltd
dec
cwtl
imul
movsb
leave
push
pop
dec
mov
xchg
jae
or
cmpsl
fnsave
mov
push
rcrb
jbe
push
xchg
ljmp
mov
inc
bnd
inc
or
fnstenv
hlt
movsl
adc
jns
ret
pop
inc
push
push
jmp
std
mov
add
daa
in
es
cmp
es
jge
cmp
mov
out
mov
sbb
insl
int3
cli
jl
mov
mov
jl
jne
shr
divb
mov
aas
or
sbb
pop
mov
imul
or
or
cmp
xor
js
inc
sbb
sbb
cwtl
outsb
lcall
dec
dec
sti
hlt
outsl
cmp
jmp
jg
stos
in
cltd
mov
loop
xchg
dec
cmp
iret
lret
dec
arpl
dec
xchg
stos
sub
xchg
sbb
push
push
pushf
mov
daa
mov
bound
mov
mov
push
mov
repnz
cmp
lea
dec
movsb
adc
sbb
xor
push
cmp
mov
xchg
fbstp
sub
ror
mov
outsl
cmc
add
xlat
cld
mov
mov
sub
cltd
sub
mov
std
divl
dec
mov
mov
mov
mulb
fisubl
add
test
inc
inc
scas
or
arpl
jecxz
aad
mov
int3
test
fsubr
fs
cld
mov
fdivl
dec
fstpt
mov
lock
jle
mov
cmpsl
fsubs
xchg
dec
int
imul
stos
jmp
cld
inc
aad
fmull
adc
dec
es
mul
xchg
cwtl
xchg
lods
jb
jo
inc
aam
mov
fdivrs
stos
push
je
stos
loop
out
inc
lcall
shlb
pop
or
mov
push
enter
call
dec
dec
sub
sbb
pop
or
mov
popf
stc
cmp
addr16
add
movsb
nop
cmpsb
fdivl
pop
outsl
sti
dec
xchg
xchg
sahf
notl
jmp
xchg
push
mov
jns
loop
add
jae
sti
mov
clc
call
call
or
aas
mov
xlat
iret
test
xchg
sbb
push
push
push
std
fldl
imul
into
enter
movsb
xor
sarl
jne
in
inc
in
enter
popa
std
enter
mov
mov
sbb
scas
pushf
xchg
scas
pop
mov
imul
mov
jns
icebp
adc
jne
push
sbb
sbb
faddl
inc
fnsave
nop
call
lcall
dec
adc
aaa
mov
es
stc
adcb
incb
cmp
adc
and
scas
dec
adc
push
pop
ss
jb
mov
mov
xor
ret
cmp
loop
scas
inc
mov
pop
mov
dec
xchg
roll
pop
add
call
jle
dec
ds
or
xor
cmp
arpl
add
jp
fiadds
xchg
xor
or
test
stc
jnp
add
leave
or
enter
push
jno
popa
sarl
jmp
data16
push
add
mov
cmc
js
stos
dec
lds
movsb
inc
repnz
jmp
mov
aas
cs
pop
push
cmpl
add
nop
mov
sub
fcomip
jb
push
mov
sbb
mov
jae
shl
mov
sub
pushf
arpl
pop
in
mov
push
aad
mov
push
sbb
mov
int3
gs
lcall
mov
sbb
shlb
cltd
cld
in
ljmp
cmpsl
jecxz
fldt
cmpsb
or
lcallw
dec
push
pop
jae
sub
push
iret
notl
fs
ds
scas
addr16
hlt
sbb
jb
cmp
push
out
jns
jne
mov
mov
shll
mov
cmp
andl
cmpsb
dec
leave
mov
loope
push
ljmp
xchg
mov
mov
mov
outsl
sbb
push
cld
in
lret
scas
clc
mov
lds
cld
in
inc
lret
imul
or
vpmacsdd
push
xor
fisttps
add
out
jne,pt
sub
xchg
lret
sbb
inc
jns
jl
movsb
xchg
rol
imul
push
test
in
iret
les
out
mov
out
jg
stos
lods
dec
lock
sub
mov
dec
out
xor
sub
cli
pop
sub
dec
cwtl
and
cmp
add
or
sub
xor
loope
sub
mov
shrl
outsb
dec
push
cmc
add
gs
subl
push
adc
shl
adc
inc
pop
scas
jnp
add
mov
and
in
cmp
adc
out
cs
cmc
pop
fmul
into
sub
push
xor
jmp
jle
jnp
stos
pop
call
sub
jge
dec
push
clc
jl
sbb
adc
shl
mov
xorb
mov
arpl
xor
pop
mov
mov
add
mov
push
sub
ljmp
pop
mov
lret
push
add
sub
imull
pushf
adc
jecxz
call
test
loopne
imul
fsts
sbb
imul
sub
nop
xor
addr16
je
inc
add
arpl
out
inc
fcmove
cmpsb
movsb
xor
mov
sbb
movsb
hlt
int
int3
xchg
inc
cli
and
cmp
lcall
ret
shll
iret
repz
fsub
stos
xchg
out
dec
movsl
sub
xchg
pushf
fdivr
xchg
sub
sub
outsb
mov
je
xchg
iret
jg
bound
int
jno
adc
xchg
pop
test
pusha
movsl
ret
sti
inc
ss
cmp
jecxz
adc
movsl
icebp
mov
push
movl
cmp
jmp
les
fisubrl
incl
adc
xchg
out
dec
pop
and
add
xchg
sub
adc
pop
repz
fsubrs
push
bound
loopne
mov
and
push
sbb
push
sub
ljmp
jmp
shll
jns
inc
sub
jnp
bound
xor
push
xchg
sub
push
add
and
lods
jp
loop
leave
xor
inc
nop
icebp
je
jge
popf
ret
mov
adc
pop
aas
arpl
js
cmp
popa
aam
rcrb
mov
inc
sbb
js
stos
popf
push
dec
push
cmp
jl
dec
push
jb
xchg
ss
xchg
loope
fisttps
mov
pusha
cmc
das
sbb
lods
push
call
dec
xor
cmp
adc
jne
pushf
mov
test
mov
jp
pop
or
mov
and
js
dec
sub
loopne
fisubs
pop
pop
xchg
movsb
loope
stos
loopne
mov
xorl
test
lock
xchg
inc
xchg
aas
mov
adc
mov
mov
int3
and
xor
jl
or
psubb
jl
andnps
push
dec
jmp
in
pusha
push
out
xor
mov
lods
pop
xor
xchg
adc
push
mov
call
mov
push
xor
jns,pn
and
lahf
pusha
int
nop
pop
xor
imul
inc
outsb
loop
out
cmpsl
popf
test
pop
push
leave
xchg
mov
sbb
out
sti
int
gs
push
and
rolb
insl
mov
xchg
adc
dec
adc
aad
cmp
cmp
popa
testb
and
push
popa
pop
ret
test
jmp
lods
mov
dec
sahf
and
push
jae
or
dec
inc
lods
repnz
out
mov
mov
sbb
out
adcb
dec
daa
and
repz
cs
cltd
jmp
add
sbb
mov
inc
out
fimull
inc
hlt
cmpsb
jle
repz
sub
popa
xor
mov
mov
fcmove
in
xchg
aam
pop
pop
mul
rcrl
test
mov
sahf
ficoms
jge
sub
xchg
pop
xchg
stos
mov
push
aaa
mov
push
adc
pushf
sti
clc
sahf
jle
dec
and
xlat
in
cmp
cmp
lock
pop
mov
adc
in
fmull
push
xor
stc
movl
lock
movsl
jmp
inc
loop
push
push
push
adc
loope
sub
lods
sbb
jmp
add
pop
imul
sbb
or
dec
inc
rorl
cmp
stos
arpl
daa
cmc
adc
pusha
add
inc
mov
and
std
mov
leave
sahf
add
pop
sbb
mov
mov
test
ljmp
and
sti
lahf
and
aaa
mov
scas
mov
xchg
cmpsb
pop
out
adc
subb
mov
xor
dec
scas
inc
movsl
push
popf
xor
iret
push
test
sbb
leave
mov
push
jp
dec
shll
inc
mov
push
jge
movsl
xchg
out
cmpsb
cmc
push
xor
call
cmp
dec
push
sahf
test
outsl
stc
aas
jl
sahf
popf
imul
sbb
add
jg
arpl
lret
mov
loope
sub
test
mov
out
add
jns
out
ja
outsl
aam
pushf
lock
pop
gs
ja
cmp
jl
push
push
lahf
aad
jle
push
sahf
xor
push
dec
add
icebp
notb
andb
xchg
adc
push
xchg
inc
std
mov
xchg
sub
adc
or
mov
mov
lahf
inc
cmp
gs
cs
cmpsb
sub
lahf
imul
leave
jle
dec
dec
outsl
mov
insb
xchg
rcrb
stos
inc
cmp
xor
in
sbb
aam
xlat
fs
les
add
and
jno
in
je
dec
add
inc
jmp
call
scas
adc
in
sar
jbe
fcmovbe
push
leave
cmp
js
inc
popa
cli
outsl
and
movsl
xlat
inc
jno
sarb
mov
daa
enter
jp
nop
xor
xor
sbb
aam
and
jl
aas
dec
xchg
sarl
fadds
lahf
fwait
pop
cmp
aaa
pop
push
rorl
aad
out
pop
dec
pop
mov
mov
rcl
aam
jecxz
testl
xchg
pop
and
mov
bound
ja
sbb
cmpsl
in
sbb
sbb
jo
xchg
shlb
push
int3
push
pop
clc
int
adc
cmp
and
adc
out
mov
bound
inc
lahf
or
pop
mov
shrb
mov
cmp
jle
jge
out
int3
xchg
pop
adc
inc
jmp
xchg
mov
push
cmp
movsb
insb
adc
add
dec
shll
mov
adc
fsubrs
dec
sub
out
inc
xor
and
lahf
js
es
pop
and
add
shlb
mov
lea
pop
jns
nop
call
mov
test
and
aad
pop
enter
andl
sbb
rolb
jne
sbb
cmp
add
cmp
mov
push
cmp
lahf
mov
and
hlt
shrl
cmp
into
std
nop
js
outsb
popf
mov
call
das
adc
pop
and
insl
into
mov
jbe
mov
sahf
popf
imul
dec
add
pop
fsubs
dec
or
cmp
setae
sub
or
jmp
mov
push
jle
sub
dec
mov
pushf
jge
and
jmp
and
jmp
adc
ss
out
movsl
mov
mov
scas
mov
pushf
lock
aas
cmc
pop
call
inc
pop
in
cmp
cmp
and
insb
ss
in
xchg
stos
and
xchg
daa
popa
loopne
fwait
mov
xor
dec
xor
pop
push
jbe
es
popf
xor
mov
rcl
cmc
mov
bnd
jb
and
scas
or
mov
adc
gs
mov
ret
dec
sub
mov
cli
jecxz
sti
stos
faddl
mov
ja
sti
mov
jne
es
jle
inc
ret
push
mov
or
arpl
cmpb
adc
aad
pop
leave
out
out
mov
sbb
sbb
fdivp
insl
loopne
sbb
or
mov
cmp
cld
adc
mov
test
lret
cmp
jbe
ss
mov
je
cmp
mov
not
ret
test
jb
mov
ret
ds
xchg
mov
lds
mov
adc
dec
pop
xchg
shlb
mov
outsl
sbb
out
sbb
jle
or
pop
cmpsl
clc
adc
mov
imul
xchg
push
mov
xchg
repnz
push
or
push
mov
es
jnp
ret
fidivrl
jle
shll
das
jle
das
cli
jbe
out
test
loop
outsb
cmpsb
fmuls
notb
les
rcl
dec
cmpsl
test
adc
subb
sub
lahf
cmp
push
fadd
rcrl
or
aad
jno
or
lret
pop
ret
leave
sbb
xchg
mov
pop
sbb
jb
sarl
jg
std
jbe
cmc
int
pushf
int
mov
xlat
aas
ljmp
int3
idiv
inc
jns
adc
jl
push
push
lret
ss
sub
mov
add
rclb
stos
cmc
cwtl
jecxz
push
jmp
leave
dec
push
xchg
inc
push
jbe
pop
inc
sahf
mov
je
ja
lret
imul
cwtl
insb
cmp
inc
not
or
or
xchg
jae
cmova
mov
cmp
xchg
arpl
mov
mov
xor
in
jbe
dec
or
dec
aam
mov
mov
dec
insb
dec
jns
bound
or
xor
rcr
fadds
cmc
and
mov
dec
or
mov
out
lcall
jbe
negl
mov
xchg
out
ds
cs
insb
mov
mov
repnz
stos
and
lods
xchg
pop
mov
mov
fcomi
xchg
lds
jbe
cmp
adc
jle
mov
inc
mov
sub
test
lcall
xchg
mov
xchg
mov
jle
stos
or
shrb
jg
dec
test
ja
frstor
popa
jno
cmpl
lock
xchg
mov
jmp
or
inc
jmp
imul
inc
aad
scas
rorl
and
dec
sub
out
pop
inc
sub
or
jns
xor
lcall
pop
les
and
mov
cmpsl
cmp
das
pushf
sbb
in
or
ljmp
call
jg
ja
idivl
add
ss
jbe
push
mov
jns
push
adc
lret
insb
adc
adcl
sub
mov
inc
subl
ret
shrl
out
pop
sub
or
xchg
dec
add
jmp
mov
or
mov
cli
pusha
shlb
ret
lret
push
mov
in
push
mov
pop
xor
shl
mov
mov
not
fcmovb
pop
lds
sub
add
loopne
dec
jnp
xorb
sahf
fisttpll
or
pushw
stos
pop
xchg
mov
adc
pusha
xor
cltd
ss
inc
adc
test
xorl
cmpsb
lret
dec
fs
inc
ret
add
lock
les
push
jae
jnp
add
push
stos
test
cmp
jno
cmp
and
adc
ficompl
out
std
insb
pop
icebp
stos
andl
jle
ds
insb
mov
inc
xor
cmc
pushf
pop
addr16
orl
mov
dec
fcmovu
lods
xor
or
mov
fidivl
jecxz
nop
pop
jae
out
cmpsl
mov
je
popa
xor
pop
cmp
fadds
sub
xchg
ds
es
and
into
hlt
mov
notl
fdivs
add
je
int3
imul
jnp
das
pop
cmp
xor
xchg
popa
ret
imul
nop
xchg
pushf
fists
sbb
out
mov
jge
sub
mov
repz
js
mov
leave
pop
shlb
cmpsb
scas
mov
lret
cltd
inc
and
mov
push
push
push
in
pop
dec
xor
ret
imul
sub
scas
push
xchg
pop
mov
or
adc
and
pop
fwait
xor
hlt
push
cli
repnz
jne
mov
jne
int
adc
js
rcll
cmpsb
adc
dec
mov
add
out
movsl
mov
icebp
stc
mov
pop
jnp
xchg
xchg
test
add
fwait
add
adc
inc
xor
lret
mov
cmp
pop
clc
bound
sti
inc
pop
cltd
mov
aaa
add
sahf
mov
xor
and
inc
mov
mov
or
lahf
movsl
xor
mov
mov
inc
popf
sarb
mov
mov
jmp
aas
jns
xchg
xlat
inc
rorb
cmpsl
adc
mov
fcomps
int3
mov
add
inc
addb
mov
add
lods
dec
in
push
xor
jg
clc
or
stos
outsb
sarl
fadds
pop
loopne
bound
mov
mov
push
test
mov
sub
sbb
out
jmp
ljmp
or
jo
push
mov
nop
add
mov
mov
aaa
mov
sub
push
icebp
and
pop
out
cmpsl
or
push
jge
cmpsb
xchg
mov
inc
or
adc
orl
push
pop
pop
inc
sbb
mov
adc
mov
mov
cmpb
loop
test
and
inc
jl
and
push
pusha
jnp
add
add
shrb
add
dec
rcll
int
test
xlat
mov
dec
test
xor
cmpsl
sub
in
je
sbb
or
xchg
or
enter
addr16
rolb
and
dec
add
loopne
dec
sbb
push
jmp
jg
fidivl
daa
aaa
idivb
fucomp
mov
and
mov
enter
jp
in
add
aas
shr
imul
add
lods
sub
add
adcl
sbb
mov
cmc
pop
lret
lahf
mulps
dec
cmpb
pop
mov
in
fistl
sahf
cmc
std
adc
cmc
sbb
dec
xchg
cmc
insl
shrl
imul
cmc
or
mov
inc
ja
ret
rorb
inc
call
jl
ja
mov
mov
lods
out
xor
bound
add
adc
pop
mov
andb
xor
and
mov
push
mov
dec
insl
pop
mov
rcrl
sbb
and
neg
cmp
test
jg
mov
and
ss
fcmovbe
arpl
mov
dec
xor
adc
iret
mov
or
das
and
cmc
addr16
stos
pop
fnsave
stos
sbb
mov
adc
in
xchg
hlt
and
or
repz
mov
mov
dec
pop
in
rolb
sti
insl
pop
pop
cwtl
in
mov
loopne
mov
scas
das
jbe
xor
jl
and
mov
mov
push
sub
and
mov
sbb
data16
js
xor
push
jmp
div
adc
push
pop
jle
jns
into
push
add
hlt
adc
call
test
stc
mov
adc
xchg
arpl
stos
xchg
jg,pn
popf
jge
add
lds
and
mov
test
sub
xchg
add
jge
mov
and
inc
add
xor
aas
cmp
mov
adc
pop
aad
jp
sub
cmpsl
lret
push
lods
mov
push
addr16
insb
mov
jne
push
mov
sub
xor
jne
mov
sub
out
pusha
lods
and
cmp
pop
sarl
pop
inc
cmp
fildll
adc
pop
pop
mov
icebp
xchg
xor
adc
sub
sub
les
mov
mov
test
je
fisubl
push
lcall
rcrb
lcall
in
xor
psraw
dec
and
lods
xor
pop
repnz
lods
xor
adc
mov
pop
pushf
sbbl
or
cmpsb
in
push
or
or
mov
mov
clc
add
inc
in
lahf
pop
adc
cmpsb
inc
push
xor
pop
out
es
add
dec
mov
jg
cmp
into
jo
ds
adc
in
loopne
out
pop
push
xlat
jne
decb
imul
inc
ss
daa
sub
int
subb
add
inc
mov
andl
push
pop
xchg
cli
mulb
or
bound
jae
jnp
pop
jp
and
arpl
popa
ficoml
outsb
pushl
out
dec
mov
push
push
xchg
lret
pop
flds
es
pop
movsb
scas
dec
mov
ds
cltd
inc
lods
fscale
or
jle
std
jmp
ret
push
imul
sbb
in
jae
fldl
test
test
bnd
xchg
mov
das
mov
sbb
xchg
or
sub
push
test
xor
cmpsl
repnz
fidivrs
dec
pop
repnz
pop
or
jb
out
or
dec
push
movsb
jns
outsb
xchg
lret
jp
lods
xchg
jbe
push
jl
jmp
std
dec
xchg
mov
mov
add
call
xchg
add
mov
add
hlt
mov
add
dec
and
adc
into
xor
xchg
inc
shl
mov
inc
inc
or
stc
std
push
dec
pop
jno
xchg
call
push
cmp
jo
or
cmp
mov
pop
xchg
lds
inc
sbb
and
aas
inc
fstpl
lods
sbbl
fwait
mov
dec
dec
adc
cmpsb
lock
mov
or
mov
cmc
outsl
xor
xchg
movsb
xchg
aam
cmpsl
ljmp
popf
lods
push
test
lea
fbstp
subb
xchg
scas
popf
cmc
push
into
push
fistl
loop
sbb
and
mov
insl
pop
shr
xchg
jge
mov
jge
adc
pushf
ret
js
mov
mov
jns
fnstcw
xchg
fwait
loop
push
push
imul
dec
call
fimuls
xchg
pop
dec
ret
fwait
lods
inc
mov
lock
xchg
shrl
jne
stos
cmpsl
push
dec
pop
mov
push
insb
orl
xor
and
sti
jmp
and
jns
outsb
sbb
mov
dec
test
test
adcb
imul
movsb
mov
pop
mov
das
dec
movsl
push
jg
inc
and
sti
into
cmpl
jne
idivb
jns
push
push
or
icebp
push
or
test
xor
cmp
lds
dec
sub
sbb
repz
rcrb
sub
or
lret
loopne
sub
ljmp
bound
scas
push
scas
push
lea
in
sbb
addr16
sbb
ss
mov
out
push
ljmp
pop
in
aad
pop
dec
adc
imul
jmp
mov
push
sbb
mov
add
in
arpl
cmp
pushf
jecxz
or
sub
xorb
jmp
push
inc
in
inc
bound
jmp
ret
loop
cmp
shlb
cld
lock
sub
shr
inc
mov
inc
lret
fimuls
fisubrs
or
or
repz
out
popf
shlb
cmp
test
sub
cmpsb
jno
cmc
je
lret
ds
xor
out
mov
fwait
cmp
ds
jnp
push
mov
dec
inc
les
xchg
xchg
inc
xor
or
inc
cmp
jge
xor
add
lcall
dec
das
ja
xchg
imul
leave
sub
jmp
sbb
ljmp
imul
cld
pop
cmpsb
or
test
dec
shlb
stc
jno
stos
pop
xor
mov
loopne
sarb
mov
cmc
and
jmp
pop
add
push
or
das
adc
pushf
pop
push
inc
cmpl
cld
outsl
mov
inc
fwait
sbb
test
push
mov
add
jo
stc
mov
ja
and
nop
fcompl
jle
jp
and
stc
xchg
cmp
outsl
adc
xchg
pop
iret
mov
or
jecxz
inc
jae
imul
push
push
outsl
lock
icebp
pop
cmp
out
lret
enter
loope
ja
rolb
shr
outsb
cmp
int3
dec
jns
inc
mov
pushf
xor
out
negl
out
inc
sbb
lahf
lcall
lret
mov
aaa
mov
stos
xchg
insb
xor
aam
pop
popa
jbe
add
dec
imul
add
ljmp
lret
mov
fwait
xor
rolb
mov
popf
sub
cltd
push
or
inc
fcmovb
orb
pushf
in
jne
test
rcrl
bound
out
lea
mov
cmpsb
mov
and
xlat
out
fadd
pushf
sub
fldt
sub
mov
mov
mov
and
stc
xchg
decb
addr16
and
sbb
fwait
lea
xor
mov
jecxz
fmulp
insb
lret
xor
pushf
outsl
lret
sahf
ficoml
mov
mov
sti
xor
scas
std
pop
or
mov
add
jns
aas
xchg
fdivr
jb
jle
mov
xchg
das
push
push
fs
dec
adc
mov
dec
cwtl
ret
dec
imul
insb
out
mov
push
loop
jg
push
icebp
scas
nop
inc
fistpll
or
jnp
inc
push
jno
lret
pop
in
inc
sub
and
push
enter
mov
xor
hlt
popa
mov
bound
fisubrl
xchg
cmp
xchg
leave
stos
fdiv
pop
shl
fcomps
fisttps
jbe
or
mov
aaa
fbstp
pop
and
adc
ljmp
cs
movsl
mov
jecxz
insb
pop
repz
js
int
pop
idiv
call
or
cmc
aad
lods
push
xor
push
idiv
xor
xor
pop
sbb
ja
pop
arpl
je
mov
mov
add
mov
adc
mov
xor
stos
mov
add
into
push
repnz
ja
jge
cmp
mov
bound
outsl
mov
xlat
mov
xchg
add
mov
cmp
mov
push
mov
and
ret
adc
mov
pop
cs
sub
inc
and
loopne
xchg
xorb
aas
sub
fxch
cli
mov
sbb
lret
invd
mov
dec
scas
adc
cmp
cmpsl
mov
xchg
mov
hlt
stos
jmp
or
adc
inc
das
mov
lods
imul
imull
mov
jb
adcb
mov
repnz
fs
popf
jecxz
insl
enter
subl
cmp
jl
mov
rolb
lods
sub
sbb
imul
push
lcall
dec
stc
lods
push
mov
call
xor
add
std
add
inc
cmc
xor
call
mov
aad
das
pop
mov
int3
cmp
pop
mov
jmp
outsb
test
push
rcl
push
cmp
xor
fimull
out
aaa
das
aam
dec
cltd
xor
xchg
test
push
popf
mov
cmp
and
xor
jb
je
in
iret
mov
and
mov
sbb
xchg
ljmp
je
or
icebp
push
cltd
out
and
push
pop
inc
sbb
sbb
test
in
mov
in
sub
push
jns
iret
sub
clc
imul
cmc
dec
dec
xor
cwtl
lea
stos
adc
push
fidivrs
sub
fcoml
mov
outsl
dec
push
cld
cmp
inc
popf
xchg
faddl
inc
js
out
lret
hlt
mov
jg
ja
cli
gs
out
xchg
push
add
lea
test
add
imul
inc
cmp
adc
shlb
sbb
pop
mov
cmp
push
stos
cmp
push
stc
adc
mov
mov
pop
popf
mov
mov
lods
xchg
pop
stos
aas
repz
lahf
scas
or
adc
divl
jb
adc
jbe
pop
sahf
jnp
cmp
je
xor
sub
xchg
xchg
push
xlat
fldenv
or
mov
fdivrs
xchg
sbb
adc
adc
xchg
xchg
xlat
sbb
sbb
xor
pop
push
mov
mov
fnstsw
sbb
fisubs
push
adc
ljmp
mov
adc
mov
cltd
jae
ss
add
pop
test
clc
mov
nop
out
push
add
mov
cli
mov
jp
out
push
movaps
dec
jae
mov
ffreep
or
cli
sub
cwtl
pop
fistpll
lret
rep
fmul
xchg
or
inc
in
mov
jmp
inc
icebp
sbb
test
call
push
addb
ret
mov
add
out
push
jge
jl
sub
stc
cwtl
fwait
dec
xchg
cmp
popf
dec
mov
mov
out
push
add
and
fwait
mov
and
xor
adc
push
mov
bound
movsl
xor
adc
push
out
movsl
add
xchg
xchg
test
loope
jecxz
icebp
cld
mov
push
jecxz
jmp
loop
ja
scas
adc
jae
outsb
lock
test
push
cli
dec
sahf
xchg
repnz
xchg
rolb
inc
fwait
outsl
stc
js
pop
addr16
jle,pn
inc
lea
rcr
daa
imul
mov
pop
stos
loopnew
adc
cmp
sbb
repnz
mov
dec
hlt
xor
xchg
adc
shr
addr16
adc
dec
dec
jl
je
in
adc
es
and
outsl
push
xor
out
ljmp
xchg
xor
mov
add
inc
lret
pop
aam
mov
shrl
add
jno
xchg
adc
mov
xchg
inc
mov
sub
add
les
cmp
adc
xor
pushf
lahf
test
mov
scas
scas
add
inc
mov
cmp
adc
int
and
xchg
arpl
add
cmp
cs
inc
dec
mov
mov
xchg
fnstsw
subb
jo
arpl
leave
sub
mov
daa
ljmp
addr16
mov
mov
sub
xor
int3
mov
popf
sbb
fiaddl
xor
iret
and
mov
ficomps
lods
or
pop
mov
xchg
sbb
adc
push
sarl
int
xchg
fcomp
mov
fiadds
stc
in
fidivrs
mov
xlat
sub
sti
int
nop
hlt
adc
jae
pop
adc
inc
and
imulb
sub
enter
popa
adc
dec
sti
enter
or
gs
add
fldt
mov
and
jp
in
ja
xchg
jle
mov
les
lods
and
call
and
inc
cmp
fmul
outsb
xor
mov
aaa
xchg
scas
cmp
test
push
jnp
push
jmp
andb
inc
test
sub
mov
cld
cltd
add
mov
cld
test
nop
arpl
js
in
sub
cmc
and
enter
xor
aad
jmp
push
jl
jo
repz
sbb
mov
arpl
je
inc
jp
jmp
hlt
flds
fsubrs
jnp
inc
push
cmp
hlt
mov
popa
adc
mov
loop
mov
aas
adcl
imul
push
sbb
jno
and
fiaddl
aas
mov
adc
adc
jmp
inc
mov
imul
in
add
dec
pop
popa
call
push
icebp
xlat
mov
aam
push
seta
add
lock
add
sahf
xor
xor
jb
push
mov
sarb
mov
repz
mov
insb
mov
aas
mov
leave
ror
dec
lea
mov
ret
in
inc
bound
and
popf
jno
je
xchg
nop
aad
jmp
jnp
orb
leave
mov
incb
jo
imulb
jle
fwait
repnz
call
mov
push
pop
sarl
shrb
iret
dec
lret
mov
mov
rorb
push
in
lea
push
xchg
aad
push
iret
add
push
mov
dec
sub
ret
pop
xchg
aad
sbb
sbb
mov
add
lahf
push
xor
cwtl
adc
jnp
pop
sbb
hlt
lea
rep
test
aaa
pushf
sahf
cmp
iret
jnp
sbb
lods
pushf
in
repnz
dec
outsb
jno
lds
movsl
jmp
imul
jns
push
aad
sbb
mov
cmp
pop
lds
in
pop
push
pop
add
int3
and
stos
ret
push
lods
pop
jmp
lock
mov
popf
insb
xlat
or
mov
jno
jne
and
sbb
pop
and
aas
jle
mov
scas
shrl
sbb
cmc
call
fistpl
lock
inc
adc
sbb
jbe
xchg
movd
xchg
sbb
mov
dec
lcall
xchg
iret
add
mov
lods
xor
stc
pop
mov
xor
pop
addb
lahf
inc
fsubrp
mov
mov
hlt
adcl
js
out
hlt
adc
enter
bound
addr16
out
sbb
mov
inc
xlat
xor
js
add
push
cmp
lret
scas
insl
xchg
mov
mov
arpl
jge
jb
lds
js
and
mov
and
jo
mov
and
sbb
mov
or
mov
cmp
cmp
rcrb
arpl
idivb
adcb
jg
xchg
mov
into
scas
bound
nop
sub
dec
jbe
mov
push
mov
mov
or
nop
ret
xchg
scas
or
fsubrp
adc
insl
jmp
sahf
xchg
lods
or
fsubs
xor
xor
scas
sbb
aaa
dec
std
mov
and
jbe
nop
inc
outsb
or
inc
sahf
fdiv
mov
dec
icebp
cmp
add
mov
out
imul
jnp
push
cmc
jns
jg
rcll
inc
ja
or
lock
add
test
in
jg
data16
into
imul
lock
aam
pop
sbb
add
add
xlat
shll
jbe
icebp
lret
movsl
push
loopne
shl
mov
jo
mov
dec
sub
or
push
jle
pop
in
mov
lahf
xchg
add
movsl
cmp
jb
scas
jg
subl
in
or
xor
and
pop
cmp
daa
test
notl
daa
mov
insb
cmpsl
push
popa
jmp
bound
ss
lret
stos
pusha
cmp
pusha
sub
sub
xor
int
add
dec
scas
or
into
jmp
sbb
sub
outsl
push
xchg
pop
fisubs
daa
leave
add
push
adc
xor
xchg
subl
clc
loopne
hlt
movsb
lds
sti
mov
jb
adcl
and
test
iret
daa
fstps
ja
insl
jns
test
in
jge
aas
sahf
insb
mov
mov
cmp
aas
aaa
sti
lret
push
mov
fidivrs
aam
outsb
aas
push
cmc
outsl
add
call
sbb
sbb
mov
daa
in
add
adc
sbb
dec
fisubl
xor
jnp
cmp
movsb
pop
cmp
inc
jg
adc
dec
add
xchg
dec
in
pusha
adc
and
inc
xor
cli
lahf
jecxz
sub
lock
pop
aaa
xor
add
sub
xchg
sbb
jmp
stos
test
pop
mov
mov
mov
mov
int
bound
mov
stc
das
cmpsb
pop
xor
xrelease
cmp
fdivl
mov
xchg
pop
xor
outsl
mov
jne
sub
lahf
lods
mov
fldenv
push
add
pop
xchg
mov
cmp
xchg
xor
cwtl
dec
xchg
int
mov
out
xor
cmp
int
sbb
dec
jle
insl
rolb
mov
mov
orl
outsb
roll
sub
cmp
xchg
ja
or
nop
movsb
sub
push
cmp
inc
fdivr
mov
mov
xchg
imul
xchg
shrb
sbb
xchg
frstor
xchg
cmp
sar
inc
xor
in
cmc
pop
out
lods
sahf
rclb
movsb
int
sahf
xchg
inc
enter
addl
movsb
xor
xlat
push
out
adc
lret
cmc
rol
scas
or
mov
sub
lret
insl
mov
add
jle
cmpsw
negb
mov
outsl
jecxz
lcall
sub
and
in
jp
outsb
sub
or
aaa
cli
xchg
es
xor
push
orb
pop
fs
pop
test
xor
jge
mov
fbstp
call
adc
enter
fnstenv
daa
push
lock
ljmp
arpl
std
pop
pop
pusha
mov
inc
stos
inc
lret
lds
out
dec
sbb
imul
jae
hlt
adc
add
mov
push
test
cli
stc
xchg
fdivp
int
aad
subb
mov
add
mov
daa
sbb
movsl
add
ret
test
dec
fdivrs
sub
inc
test
xor
jl
out
rcrb
mov
outsb
push
int3
inc
push
add
xchg
sub
sub
sahf
int
dec
shl
mov
pop
lock
lret
pop
popf
aas
ljmp
inc
lock
inc
negb
push
jae
stos
pusha
adc
mov
push
sti
test
hlt
movsl
dec
ret
inc
jg
push
lea
push
and
gs
iret
cmp
sbb
xor
cwtl
mov
pop
push
xchg
mov
jmp
je
iret
xchg
xchg
stc
sub
negl
pop
cmp
popf
dec
cmp
jp
pop
xchg
mov
test
sub
sub
xor
push
jmp
andl
xchg
iret
mov
jnp
std
sub
mov
pop
cmp
dec
xor
xor
nop
pop
pushl
add
hlt
push
sbb
cld
and
inc
lds
lods
test
sub
jb
mov
mov
cmp
or
enter
jmp
cmp
cmp
dec
bound
xchg
dec
mov
jecxz
bound
out
jae
nop
adc
and
out
popa
mov
mov
mov
rorb
inc
icebp
cmpsl
lret
pusha
and
rdtsc
xor
xchg
repnz
xor
and
mov
das
inc
push
push
addr16
xor
or
incl
movb
sti
pop
push
incw
fst
repz
and
mov
pusha
gs
xchg
ss
mov
pop
into
push
in
dec
imul
xor
mov
push
repnz
rcrb
push
mov
xchg
lds
jae
ljmp
fwait
into
leave
ja
in
mov
shlb
push
push
inc
divl
sbb
popl
xchg
ss
movsb
add
popf
pop
fstpl
lds
mov
pop
xchg
jl
mov
xor
push
mov
mov
pop
jle
jge
fldenv
xor
adc
das
repnz
dec
aas
repz
and
jle
fstpl
arpl
sub
repnz
cmc
loope
aaa
mov
fmuls
icebp
xor
jle
loope
mov
stos
cli
fldt
xchg
push
add
in
clc
nop
aam
loopne
repz
push
jae
cmp
je
rolb
stos
pushf
mov
std
inc
shlb
dec
rorl
or
pop
pop
push
insb
and
xchg
aaa
xchg
sbb
xchg
adcb
xchg
push
je
adc
outsb
mov
jae
pop
xchg
insb
mov
sarl
pop
scas
push
int
ret
push
dec
shrb
loope
sbb
lods
fldcw
jmp
jno
xchg
rcrl
insl
jge
pop
addr16
push
popf
inc
dec
stos
data16
mov
pop
in
xlat
push
popf
fdiv
aam
shlb
jp
pusha
scas
arpl
das
aam
sub
mov
outsl
inc
cmpsl
xchg
add
lret
cld
mov
xchg
pop
or
js
test
imul
inc
mov
mov
in
pusha
sbb
push
fiadds
lods
jg
adc
lret
jno
ret
add
sub
jbe
fwait
movsl
test
push
add
sbb
xor
dec
jb
jae
and
or
add
fdivr
cmp
jnp
dec
cmp
mov
pop
daa
nop
int3
out
mov
dec
push
xchg
ficoms
sub
sub
insl
mov
mov
cmp
sbb
jg
jne
push
add
enter
pushf
add
jmp
loopne
insb
push
imul
cmp
xchg
addr16
scas
add
jno
inc
adc
aad
sub
aam
ss
in
mov
sarb
icebp
jae
push
insb
mov
and
dec
outsl
pushf
pushf
fcompl
imull
xor
shlb
inc
xchg
sbb
cmp
outsl
in
xchg
out
into
ss
sub
xor
push
pop
mov
mov
mov
pop
jno
sbb
sbb
jg
jns
sbb
lret
push
movsl
js
int
aaa
or
mov
std
xchg
outsb
ret
mov
adc
inc
cmp
loope
xor
add
lds
jb
stos
xchg
push
adc
orb
sti
adc
xor
fwait
mov
mov
mov
stc
scas
lcall
popf
ss
jns
dec
mov
jbe
xchg
inc
call
arpl
mov
cld
jne
mov
cltd
and
jbe
rorb
in
outsb
cmp
dec
and
sub
and
popa
adc
xorb
xor
ret
cmpsl
xchg
xchg
push
dec
cmpsl
sub
mov
dec
fldt
sub
mov
scas
push
inc
scas
jmp
push
jmp
and
and
mov
testb
scas
outsl
idivb
pop
cmc
cmp
jg
push
ja
lea
inc
inc
mov
or
ss
call
mov
mov
ret
sbb
flds
shrl
mov
lahf
sub
out
xchg
jecxz
rorb
shll
mov
add
cld
out
mov
and
mov
mov
push
inc
push
leave
mov
add
pop
out
lds
je
ret
inc
pop
and
cwtl
sub
aas
push
jg
ret
int3
xor
cmp
sbb
pop
int
mov
sbb
xorb
dec
les
mov
jmp
rcll
das
mov
fdivs
nop
pop
pop
dec
inc
jno
or
sub
mov
cmpsl
std
jmp
subb
adc
inc
sub
fnstcw
jo
fsubs
in
scas
test
sbb
popa
es
jno
nop
inc
pop
push
popf
loop
popf
ja
xchg
add
cmp
jnp
xor
lods
lods
outsl
dec
lods
shl
aaa
int3
cmp
repnz
sub
xchg
shl
arpl
sbb
call
pop
pop
adc
shl
out
lock
mov
cmp
fimuls
push
xor
aam
sbb
pusha
mov
movsb
in
std
sbb
stc
addl
repz
xchg
mov
sub
aaa
mov
popf
mov
shrl
add
mov
stos
xor
lods
cld
jp
and
fstps
xor
idivb
jp
and
and
xor
scas
jg
jmp
pop
push
test
sbb
andl
sbb
lods
dec
ss
in
out
gs
pop
rcr
xchg
adc
pop
popf
cltd
xor
mov
inc
enter
lock
xchg
pop
push
and
in
sbb
pushf
cmp
sub
test
cltd
dec
push
xor
lds
sub
and
or
mov
mov
bsr
aad
mov
inc
xorl
hlt
xor
push
pop
aaa
lcall
es
mov
pop
push
sbb
lret
xchg
push
ja
je
dec
adc
rclb
adc
sbb
jo
dec
outsb
jg
fnstsw
fdiv
jnp
mov
out
xchg
mov
lret
lock
sub
test
sbb
add
xor
or
leave
inc
or
cmp
or
sbb
adc
ret
addr16
shrb
add
jne
jnp
jbe
xlat
inc
fiaddl
mov
jg
xchg
mov
sbb
sub
arpl
in
fisttpll
popa
push
jp
mov
sbb
or
scas
test
lahf
adc
mov
andl
js
adc
clc
push
in
call
mov
std
mulb
lahf
or
sar
subb
add
pop
loop
mov
mov
icebp
and
or
cmp
into
mov
mov
sub
mov
mov
cmp
dec
test
fstpl
fs
jge
sbb
add
push
fadd
dec
out
cmp
mov
sbb
push
cs
mov
popf
jg
gs
pop
xchg
mov
pop
aad
aam
lret
xor
and
xchg
in
idivl
ljmp
mov
inc
scas
adc
mov
jae
int
dec
sub
leave
sbb
lock
pushf
popf
stc
scas
outsl
push
imul
dec
shll
xorl
and
cmc
sbb
aad
dec
les
push
mov
push
mull
mov
sbb
inc
rcrl
inc
adc
nop
enter
xchg
std
mov
mov
cltd
test
divl
in
and
lock
xor
je
lea
inc
rol
and
in
mov
dec
mov
inc
sub
mov
shll
or
movsb
push
int
push
mov
push
divb
into
sub
pop
loope
and
pop
andb
mov
inc
push
fwait
jmp
xorb
sarl
test
les
iret
xchg
dec
dec
cmpsb
cmpsl
insb
cmpsb
sub
mov
mov
rorb
pop
testb
jg
push
imul
aaa
insb
loop
jbe
jl
out
inc
dec
xor
outsl
and
orb
sub
pop
dec
data16
negl
andb
dec
std
adc
and
ret
push
or
in
sbb
int3
js
mov
lods
xor
cmp
jb
push
aaa
outsl
jnp
mov
push
fidivl
in
xor
pop
pop
fisubl
jae
mov
mov
inc
je
movsl
int3
adc
out
or
dec
dec
pop
call
aaa
cltd
dec
test
dec
in
icebp
jb
pop
mov
movsl
xor
bound
mov
aas
mov
fstl
inc
das
cli
ret
in
xor
pop
adc
pusha
sbb
pop
insl
sbb
adc
or
adc
decb
roll
ret
adc
repz
je
hlt
dec
jnp
mov
mov
fs
insl
push
repnz
cwtl
outsb
push
add
pop
sub
fmull
push
inc
jl
outsl
daa
push
pop
lds
pop
out
and
andb
pop
adc
add
cmc
nop
xchg
jmp
mov
add
stos
scas
pop
inc
mov
dec
shlb
gs
cmp
xchg
pop
xchg
xchg
fucomi
enter
mov
jne
xor
imul
ret
aad
fists
lahf
arpl
xchg
enter
cwtl
jle
je
popw
adc
jl
xor
loopne
mov
data16
notb
pop
sub
xor
jne
adc
jge
or
outsl
push
mov
loope
dec
test
mov
or
push
jmp
inc
in
test
adc
add
add
test
out
mov
or
jno
stos
cltd
jmp
or
or
mov
lcall
jb
jge
sub
bound
add
aam
iret
adc
push
inc
loop
arpl
repnz
inc
inc
xor
add
inc
out
adc
jnp
and
mov
jmp
lret
push
xchg
or
mov
mov
push
insl
push
fwait
xchg
xor
xor
pop
int3
sbb
mov
dec
mov
push
pop
lea
push
sub
mov
dec
cli
outsb
xchg
mov
mov
lods
lock
push
inc
push
pop
leave
test
test
dec
pushf
jne
and
pop
push
jbe
call
fmuls
mov
push
mov
je
loopne
mov
inc
fs
in
loopne
or
psrld
popf
bound
lock
int3
or
rcrb
cld
test
je
movsl
add
hlt
or
adc
shl
ja
cltd
loop
sbb
fxsave
adc
popa
dec
cmp
test
mov
fs
jl
cmp
scas
lret
jmp
dec
pop
int3
inc
cmp
adc
inc
in
ret
push
xor
add
sub
insb
xor
fbld
pop
cmp
push
inc
push
mov
and
fisttpl
clc
mov
jge
push
rorl
fs
nop
sbb
leave
or
sub
mov
adc
loopne
jae
xchg
aad
cmpsl
mov
sub
rorl
mov
les
leave
mov
cmp
push
jnp
lret
movl
cwtl
pop
pop
decl
push
neg
repnz
stos
push
ret
movsl
call
out
jae
lods
cmp
sbb
sahf
add
fildll
cwtl
sbb
inc
mov
test
lahf
pop
mov
push
sbb
mov
out
subl
cmc
xor
and
clc
aas
and
ljmp
pop
pop
in
fdivl
sbb
iret
clc
rcrl
cmp
jl
jg
or
dec
sbb
inc
cmp
cmp
sti
mov
push
push
mov
hlt
les
add
inc
xchg
dec
mov
pop
cmp
dec
mov
and
and
jmp
loop
leave
loopne
xchg
mov
mov
das
call
sub
clc
sbb
lock
insl
aam
faddp
idivb
jbe
inc
ret
push
xor
cmpsb
add
or
cwtl
inc
xlat
lahf
inc
sbb
and
jne
mov
fldz
mov
fs
enter
xor
xchg
mov
jb
mov
hlt
push
adc
mov
inc
or
jbe
rcl
nop
imul
lahf
push
xchg
adc
add
mov
xor
xor
imul
xor
xlat
repnz
loopne
mov
aam
jle
cmpsl
mov
pop
int
pop
shll
shlb
inc
fs
mov
scas
test
sbb
scas
jnp
sqrtps
inc
popf
add
aaa
adc
lods
pop
push
or
loope
inc
loop
cmpsl
gs
imul
add
mov
mov
push
ss
lds
pushf
aas
mov
mov
mov
pop
fcomps
sbb
enter
and
push
aad
xor
push
int
fisubl
mov
add
test
in
scas
outsl
out
gs
subl
aad
out
cwtl
or
jno
push
aad
sarl
inc
xchg
mov
out
adc
and
ja
shrl
enter
fwait
mov
add
xor
push
xchg
add
aad
das
out
out
mov
in
add
aad
ret
decb
push
stos
out
push
or
push
sbb
cmpb
sub
mov
add
dec
push
ret
sahf
xchg
push
mov
subl
or
pop
pop
cwtl
mov
loopne
rcr
pop
add
ficoml
or
aad
sbb
mov
mov
js
ftst
aas
xor
aaa
gs
and
sti
mov
adc
fisubrs
push
push
sub
adc
or
adc
jo
aad
lea
or
mov
sahf
xchg
ret
and
mov
sbb
sahf
ret
movsb
in
and
into
adc
xchg
jecxz
cmp
push
inc
pushf
lea
and
filds
pop
aam
jl
xchg
pop
iret
push
fcoml
mov
aas
mul
mov
in
dec
push
ret
aad
ret
push
sub
aad
fmulp
insl
mov
or
jae
or
les
gs
mov
movsl
pop
shl
out
mov
mov
pushf
movsb
inc
std
mov
mov
inc
xor
loop
int
loop
jle
sub
insb
stc
mov
movsb
int3
push
mov
fistl
push
pop
jns
in
ja
or
je
cmp
adc
std
hlt
dec
fucompp
mov
std
and
insl
dec
push
es
ret
jl
sub
imul
cltd
jb
inc
enter
xchg
mov
pop
cmp
push
sarl
sub
push
pusha
mov
cmc
fstp
lret
lock
pop
in
call
add
scas
imulb
fwait
jae
dec
cmp
popa
pop
imul
negb
aas
std
sar
and
iret
movsb
adc
pop
stos
jnp
je
in
mov
shlb
sub
adc
mov
stos
lea
test
inc
jp
xchg
gs
test
outsb
dec
dec
mov
aaa
cwtl
mov
jecxz
in
imul
mov
mov
faddl
lret
xchg
lret
jge
dec
insl
jge
fdivrp
jge
aas
fwait
cwtl
in
shrl
xor
add
push
dec
xchg
sarb
push
jnp
lcall
addl
or
arpl
mov
mov
xchg
cmc
xchg
lds
inc
xor
notl
pop
fstpl
and
adc
insb
pop
hlt
ss
arpl
sub
sahf
push
pop
xchg
mov
int
jecxz
and
xor
cli
mov
stc
mov
xchg
cmpb
leave
frstor
ret
lods
or
cmp
push
cmp
sar
sbb
pop
jge
es
push
das
nop
scas
mov
mov
movsl
jno
and
loope
pop
dec
ficoml
bound
dec
push
hlt
lock
dec
jmp
dec
cmpsb
cltd
movsb
out
test
cmp
lea
mov
nop
movsl
sbb
sbb
lret
incl
clc
xchg
in
jne
sub
mov
aam
cmp
outsl
bound
sbb
jb
cmp
push
cmp
jne
pushf
inc
into
int
pusha
xchg
inc
push
add
jbe
or
test
jge
push
jnp
rcl
inc
adc
filds
xor
test
mov
jno
mov
mov
xchg
xor
fisubrs
iret
adc
shl
jl
in
faddp
int3
push
mov
cmp
or
cmp
repz
inc
aad
mov
pushf
or
or
fsubl
bound
xchg
leave
loopne
dec
xchg
mov
imul
fs
shrb
cltd
mov
pop
in
mov
xor
add
xchg
dec
dec
sti
cmp
enter
pusha
iret
roll
mov
push
lret
cmp
xchg
repz
fscale
jne
lcall
cmp
inc
pop
add
test
cmp
mov
adc
sub
in
mov
ss
test
pushf
test
pop
or
or
lret
loope
add
call
das
mov
add
xchg
outsb
ret
jbe
test
sbb
out
jmp
or
aad
mov
leave
inc
cmp
mov
cmpsl
push
outsb
push
mov
lock
or
cmp
and
in
push
cmp
inc
jae
out
divb
imul
dec
and
xor
stos
cmp
iret
jns
loop
jns
and
mov
mov
rcrb
fs
push
es
in
sarb
and
cmp
movsl
pop
popf
cwtl
aaa
xlat
rorl
inc
fsubrl
outsl
ret
daa
sahf
sbb
pop
into
in
fwait
and
xchg
negl
xchg
ljmp
movsl
mov
jae
ret
fldl
loopne
push
or
insb
pop
sbb
stc
int
faddl
insb
out
ja
jno
dec
jge
out
xor
les
pop
xchg
ret
pop
add
cs
mov
pushf
inc
test
out
insb
adc
push
xchg
call
pop
idiv
ljmp
outsl
and
arpl
dec
popf
xlat
icebp
std
push
shlb
push
mov
mov
cmp
xchg
and
mov
mov
fdivl
rcrb
int3
aaa
mov
popa
sub
add
daa
and
xchg
pop
jmp
cmpsl
add
stc
nop
or
in
push
mov
fadds
ret
clc
dec
xchg
daa
lods
jae
int3
out
cs
dec
fisubl
dec
jge
adc
pop
xchg
jl
dec
xor
pop
mov
and
sti
shll
cmp
int3
dec
mov
adc
or
mov
xchg
inc
pop
jecxz
xchg
add
mov
in
sbb
scas
inc
shll
imul
adc
mov
je
out
xor
stc
stos
and
jge
dec
sbb
mov
jo
imul
movsl
repz
push
or
push
mov
and
adc
pop
mov
push
pop
jmp
cmpsl
push
orb
dec
push
sbb
insl
sarl
clc
mov
sub
cmp
incl
pop
ds
mov
inc
dec
gs
add
arpl
ret
xor
iret
sub
pop
arpl
ret
inc
roll
mov
addr16
dec
ss
xlat
push
lds
mov
push
push
or
inc
adc
lret
sub
sti
in
sub
xor
cmp
addr16
notb
jecxz
int3
ret
xchg
in
mov
imull
frstor
mov
sub
sbb
jnp
movsb
jmp
cltd
andb
dec
fistps
mov
dec
mov
mov
in
sbb
repnz
outsl
add
call
fsubrs
inc
stos
xor
in
out
push
shll
dec
icebp
xchg
cmpsb
xchg
push
pusha
lret
ds
adc
xchg
hlt
xor
aam
and
mov
repnz
sti
cmp
xchg
fidivl
mov
andb
mov
xchg
mov
hlt
mov
or
push
mov
and
andb
jno
movsl
shlb
out
add
into
mov
mov
lea
popa
test
scas
add
js
shr
mov
xlat
jp
addl
and
mov
mov
cmp
iret
imul
xchg
push
ror
mov
push
loopne
bound
loope
cs
sbbl
outsl
mov
and
push
fwait
add
add
je
lret
pop
pop
adc
fstps
aad
movsl
mov
popf
adc
lahf
rolb
sub
repnz
test
fiaddl
adcb
pop
lock
out
hlt
xor
xchg
xchg
inc
insl
add
xor
push
stos
xchg
xlat
mov
sub
pop
lods
pop
dec
jg
inc
jb
ficoms
aad
cmpsb
jecxz
inc
adc
sbb
adc
scas
divl
fwait
stos
pushf
xchg
xor
sub
and
aad
pop
push
ds
sti
into
mov
mov
mov
xor
push
adc
xor
lret
sbb
ja
pop
sub
addr16
mov
mov
push
xor
adc
fmulp
pop
and
loopne
ljmp
cmp
pushf
mov
jns
and
push
mov
mov
add
inc
pop
jo
push
pop
test
cli
add
popf
or
inc
push
mov
mov
addl
mov
fldt
dec
je
cmp
push
or
sub
add
xor
imul
test
push
enter
inc
ds
fadds
ljmp
jmp
adc
xchg
ror
mov
flds
add
push
scas
addr16
push
cmp
jae
mov
das
xchg
mov
repnz
cmp
mov
sbb
lret
outsl
lock
jno
arpl
cltd
dec
and
aam
int
push
adc
test
or
test
sub
cmpb
mov
aas
in
mov
cmpsb
mov
repz
or
cwtl
fildll
and
js
mov
ret
movsb
sbb
and
sub
insb
sti
popa
movsl
cltd
andl
sbb
cmp
sbbb
popf
subb
cmp
mov
loopne
pop
mov
xorb
push
inc
inc
pushf
das
jg
mov
andl
fsubr
pop
int3
hlt
hlt
xchg
lods
mov
fiaddl
jmp
hlt
jp
stos
xchg
idivb
mov
ljmp
sub
addr16
fucomip
in
push
cmp
fwait
sbb
fdivrl
and
or
fsubs
cmpsl
gs
sbb
int3
or
push
sbbl
divl
jns
sub
out
push
ja
xor
push
jp
push
ret
pushf
xchg
dec
xchg
add
imul
jle
fistpll
jp
test
fildll
das
dec
adc
inc
jge
aad
xor
mov
outsl
outsb
cmp
pop
fcomps
or
cmp
test
in
xor
jbe
mov
jae
repnz
inc
jne
jbe
sbb
sbb
sub
mov
and
xchg
inc
xor
pop
xor
data16
aaa
sub
xchg
pop
sbb
sbb
xchg
xor
jmp
je
cmpsl
jmp
and
mov
xchg
xchg
sub
jg
enter
loope
lds
mov
pop
scas
shll
aad
adc
jne
jle
rcr
lds
fmull
enter
mov
sub
andl
adc
sti
jne
rcr
into
sub
jnp
and
shrl
loopne
sub
es
movsl
mov
ljmp
into
cmp
pop
loopne
decl
add
das
cmc
push
mov
or
imul
jbe
mov
jl
inc
stos
inc
loop
testl
jmp
mov
test
insl
roll
xor
out
xchg
test
mov
push
cld
xchg
mov
xor
fidivl
push
jnp
inc
ret
or
jle
movsl
stos
push
xor
xor
sbb
addr16
dec
mov
insb
addr16
sbb
cmp
inc
outsl
sub
mov
es
ljmp
sub
loope
lods
jmp
inc
mov
shll
stos
dec
mov
fcompl
ljmp
test
xchg
or
mov
xor
lods
xchg
out
cmp
jge
dec
rcr
insb
lods
sub
repz
adc
ret
mov
mov
adc
jmp
imulb
cmp
imul
pushf
and
dec
inc
aas
cmp
ficoms
ss
mov
aam
mov
and
pushf
push
add
cmpsb
cmp
and
sub
push
lret
cmpsb
imul
push
and
push
pop
pop
cmpsb
dec
sub
cmpsb
rolb
and
push
out
push
test
pop
dec
sub
js
sbb
push
xchg
and
pop
ror
mov
jne
push
add
cmp
sub
jecxz
mov
hlt
mov
shlb
mov
and
fld1
and
sub
stos
aas
dec
fst
iret
leave
mov
xchg
mov
inc
loope
xor
push
int3
or
jo
ret
das
loope
jnp
mov
inc
push
adc
negb
test
dec
stos
loop
or
sub
hlt
testb
jae
xor
add
pop
andl
jns
fistl
fs
mov
sub
xor
xchg
pusha
test
fbstp
and
popa
jmp
cs
fidivs
les
xchg
adc
les
push
mov
jle
or
add
pushf
setns
jmp
and
iret
call
xchg
sbb
popa
push
sub
outsl
push
dec
fcmovu
sub
in
aad
arpl
xchg
push
push
leave
pop
and
fdiv
sub
push
pushf
xor
rcll
jo
and
out
out
rcrl
pop
mov
xchg
in
std
cmpsl
jmp
mov
lea
call
stos
cmp
pop
xor
loop
jae
fcomp
test
xchg
jge
xchg
push
subb
cmp
sbb
mov
pop
adc
clc
aas
out
and
jge
mov
lret
shl
jg
push
adc
mov
xor
mov
cmp
sysret
stc
js
inc
fidivrl
dec
add
shl
stos
mov
fwait
out
outsl
jmp
xchg
xchg
add
xor
sub
mov
push
cmp
mov
inc
mov
cmp
imul
das
cli
xchg
repnz
cmpsl
clc
aas
mov
sub
in
push
sbb
mov
ss
inc
test
int
lea
mov
mov
movsl
test
in
jp
test
call
aas
or
stc
push
into
scas
add
and
mov
xchg
xchg
aaa
fstps
mov
gs
mov
and
inc
shll
mov
scas
aas
sub
cmp
vmptrld
pop
xchg
subb
imul
push
test
fdivrl
cltd
xchg
xor
mov
mov
into
mov
aaa
test
sub
and
xchg
pop
mov
pushf
dec
jae
adc
push
fs
and
add
jns
mov
jno
clc
out
cmpsb
mov
ficomps
xchg
fidivl
or
push
outsl
push
or
adc
cmpsl
mov
fcmovnb
pop
cmp
jl
add
mov
cs
jb
lds
or
add
inc
push
cmpsb
frstor
cmp
or
xchg
fwait
hlt
push
mov
dec
push
idivb
jmp
out
mov
lret
fs
xchg
or
mov
out
adcb
mov
test
mov
sahf
int3
add
and
stos
xchg
aaa
fildll
out
inc
mov
mov
inc
dec
and
mov
gs
xchg
test
fmuls
pop
adc
jecxz
adc
outsl
push
push
adc
sub
bound
ds
sub
scas
jle
sub
add
mov
mov
cld
adc
loope
mov
adc
sub
loop
out
hlt
and
sub
jo
jle
fidivrs
jo
cltd
int3
into
popa
adc
jae
ret
pop
mov
add
movsl
cli
in
data16
jbe
aas
xchg
insl
insb
ljmp
push
adc
lods
outsl
test
ret
jo
xchg
pusha
xchg
inc
xor
or
into
xor
mov
jo
cld
mov
movl
sub
iret
and
gs
mov
cvttps2pi
sbb
inc
dec
mov
sarl
inc
aaa
bound
fs
fxch
lock
stc
sarb
dec
xor
inc
jmp
push
add
lods
xchg
scas
push
gs
lods
lock
inc
xor
loope
out
pop
das
enter
sbb
dec
or
jbe
test
jne
jle
push
mov
bound
aam
add
or
lret
push
and
je
neg
andb
push
sar
ret
jle
push
mov
cmpsl
xchg
je
cmp
int3
sub
flds
sub
push
mov
dec
mov
jne
js
mov
cmp
xchg
lret
mov
pop
push
rolb
cmc
in
jo
imul
scas
rcr
cmp
jo
lcall
inc
sbb
xor
xchg
xchg
popf
repnz
mov
js
dec
cwtl
sub
push
loopne
dec
jmp
push
into
imul
test
jns
repz
add
rolb
insl
jns
mov
ret
push
popf
cmp
jns
pusha
mov
mov
xchg
jl
dec
jle
mov
and
add
roll
sbb
jge
sbb
loope
cmc
jne
fdiv
rorl
push
xchg
and
dec
out
mov
iret
aas
inc
sbb
cmp
mov
lods
jbe
icebp
lret
fs
int3
enter
jp
inc
mov
ja
or
iret
stos
cmp
push
and
mov
sti
idivb
mov
cltd
push
pop
je
and
shlb
add
jecxz
dec
mov
jge
mov
inc
push
loopne
pop
arpl
push
xor
cwtl
pop
sbb
mov
das
fcmovne
mov
scas
push
lods
jmp
cmc
pop
sub
and
push
add
in
add
xchg
lret
setne
add
xor
and
insl
ss
push
inc
loopne
inc
push
js
xor
rorl
nop
loope
mull
jno
je
scas
movsb
xlat
sub
out
imul
add
pop
out
aam
cmpsb
mov
or
push
mov
jecxz
ret
or
add
xchg
mov
sub
mov
gs
call
inc
adc
sbb
jnp
std
out
call
sub
stc
in
push
pop
inc
repnz
scas
add
inc
adcb
jge
daa
jl
sub
mov
jo
imul
dec
mov
sarl
popf
push
aad
mov
adc
int
mov
in
je
scas
in
imul
into
cmp
push
gs
dec
push
int
jmp
push
xor
xchg
xor
xchg
jnp
ja
pop
inc
pusha
push
daa
sti
cmp
and
call
pop
in
push
push
sbb
or
out
inc
ret
jo
int
adc
cmp
addr16
insb
and
out
cmpsb
jo
jge
leave
mov
test
mov
clc
add
dec
fxch
and
sub
adc
sub
jg
mov
jmp
popa
in
mov
pop
jbe
mov
dec
push
mov
stos
push
xor
imul
pusha
mov
imul
int3
cld
xchg
out
and
sbb
push
sbb
inc
outsb
sub
cmpsb
mov
and
pop
sub
fdivrs
mov
xchg
mov
ss
push
std
jns
rcr
fwait
scas
clc
and
cmc
inc
push
adc
insl
mov
popa
lcall
and
ss
sbb
imul
mov
jbe
sbb
xorb
jecxz
mov
jo
loope
bound
and
mov
call
inc
jno
jecxz
jg
push
test
jge
mov
jnp
addr16
jae
jbe
lods
dec
fstl
adc
mov
or
dec
in
std
sbb
dec
add
pusha
popa
outsl
cmp
mov
sbb
or
loop
daa
sbb
aad
jne
mov
pop
jmp
test
jl
in
inc
jb
add
lret
push
fisttpl
lcall
add
in
dec
ror
rcrl
sbb
and
xchg
cs
ljmp
cmp
imul
test
call
or
cmp
clc
in
adc
sub
jnp
jle
ljmp
push
testl
sub
adc
add
fistpll
shl
daa
cmpsb
ret
lock
icebp
sub
pop
jecxz
jl,pn
xchg
pop
sub
inc
rorb
cmp
push
dec
imull
adc
insl
inc
pop
add
outsl
in
xchg
loope
int
mov
rcr
sahf
dec
cmp
movl
aad
adc
mov
jb
sbb
fmuls
outsl
sbb
cmp
jecxz
fildl
and
pop
jns
rorl
push
ret
cmp
jb
loop
inc
lret
or
pop
mov
incb
clc
inc
jecxz
pop
pop
nop
subl
pop
ror
cmpsl
nop
clc
jno
fisttpll
loope
mov
add
jg
cld
loop
fs
pop
aam
into
rorl
ret
jae
cwtl
or
mov
cld
and
lds
mov
movsl
mov
inc
sbb
movsl
int3
pusha
push
fisubs
sub
mov
jle
mov
inc
dec
frstor
hlt
stc
add
cmpsb
jmp
scas
subl
pop
add
neg
jne
mov
stos
in
rep
mov
shll
je
in
xor
popf
je
pop
inc
mov
jbe
xchg
aam
push
sbb
and
nop
mov
clc
jne
scas
push
cmpsb
clc
rclb
xor
lock
xor
dec
sbb
std
mov
adc
cs
cwtl
cmc
adc
and
int3
jnp
clc
sti
mov
mov
sahf
imul
push
inc
paddsb
xchg
test
daa
mov
shll
test
xchg
push
leave
movsb
int
push
push
sar
mov
mov
mov
clc
sbb
jmp
stos
sub
pushf
lret
stos
push
sbb
sub
rcrb
iret
dec
push
test
add
cmp
add
mov
add
ljmp
jle
imul
cmp
mov
dec
in
hlt
sbbb
dec
adc
loope
std
orb
fcmovnu
pushf
xor
pushf
mov
sahf
sbb
mov
push
mov
cmp
cltd
das
jge
std
fldz
add
push
test
hlt
jge
popa
mov
movsl
or
imul
lcall
je
in
out
or
rol
mov
js
sub
andb
mov
xor
lea
stos
mov
mov
aam
fdiv
push
and
bound
in
enter
push
loop
push
stc
mov
rcll
jnp
xchg
jne
fldenv
sbb
mov
shll
adc
sti
push
or
pop
dec
insl
jl
dec
sbb
scas
sbb
mov
rcrl
push
in
jl
mov
inc
test
in
jg
mov
mov
sub
arpl
and
fnstenv
adc
fisubrl
jle
adc
dec
or
out
ljmp
and
add
inc
mov
enter
mov
cmp
cwtl
push
sbb
popa
sub
mov
ljmp
push
test
sbb
xor
cltd
iret
test
movsb
adc
repz
xor
std
int3
sahf
mov
int3
cli
or
cmp
popa
lret
mov
int
aaa
shll
in
push
ss
pop
sub
ficoml
out
aas
clc
or
insl
inc
inc
stos
sbb
mov
ret
and
xchg
jmp
ss
cmp
cli
out
xchg
jae
dec
les
cvtpi2ps
jmp
scas
sbb
push
jb
pop
arpl
cmpb
jbe
pop
sbb
adc
cli
pop
fcompl
rcll
je
add
arpl
sub
mov
out
cltd
sbb
pop
pushf
lods
stc
jp
xlat
adc
push
dec
push
mov
popf
mov
pop
dec
addb
js
add
stos
dec
pushf
in
mov
divb
nop
mov
in
mov
jbe
adc
add
mov
mov
rolb
mov
lock
adc
dec
insb
stos
or
iret
gs
lds
or
xchg
movsl
cwtl
sbb
jle
and
cmp
fs
lods
push
xchg
jl
add
xor
dec
rcll
stc
test
test
sub
push
fdivl
loope
xlat
sarl
out
push
cs
das
mov
sbb
cli
cmp
xchg
push
push
push
jae,pn
je
cmp
cmp
adc
xor
mov
mov
dec
xchg
jns
rcl
paddw
cmp
pop
push
mov
xor
jo
mov
movsl
push
test
sub
icebp
and
scas
fcmovnu
xchg
loop
inc
adc
jmp
and
pushf
dec
pop
cmpsl
movlps
push
popa
mov
out
sahf
aad
mov
imul
pop
dec
jnp
shl
adc
jbe
int
push
xchg
icebp
test
or
filds
xor
and
mov
and
push
xchg
jmp
cmpb
cmp
jg
pop
jbe
dec
imul
rcr
jge
test
lea
shlb
xchg
inc
and
jo
push
sbb
push
ljmp
xor
loop
dec
jge
cmpsb
mov
rcrb
jecxz
insl
mov
cmp
lods
cmp
leave
sti
mov
jle
stos
push
in
mov
call
int3
adc
add
aad
and
leave
adc
fcoms
in
cmc
repz
lret
sbb
mov
xchg
xchg
xchg
sbb
sub
xor
hlt
push
xor
mov
and
imul
cli
jbe
push
xor
movsl
daa
mov
ja
xor
xchg
inc
pop
out
ret
cwtl
jne
cmpsb
pop
out
jns
mov
das
pusha
pop
cs
jno
roll
sub
sbb
shlb
add
or
adc
int
insl
mov
jnp
lahf
push
rcll
cwtl
popa
mov
jge
cltd
adc
push
pop
sbb
daa
dec
xchg
dec
insl
or
push
xor
lods
add
jge
mull
mov
subb
std
aam
daa
lcall
jl
sbb
frstor
push
repz
jge
shlb
lret
inc
adc
mov
push
adc
in
aad
rcrb
lret
int3
push
daa
aas
pop
fsts
orb
jno
mov
pop
mov
add
sub
loopne
push
mov
std
fcmovnbe
mov
fsubl
and
fiaddl
aaa
subb
or
cmp
dec
xchg
sbb
loopne
jns
add
into
cli
or
jbe
in
sub
cmpxchg
sbbl
dec
add
inc
mov
les
xchg
test
fsubrl
popf
and
cmp
dec
mov
jne,pn
lock
mov
mov
xor
icebp
sbb
insb
xor
cmc
jb
pop
or
mov
pusha
fdivrs
jae
cli
in
sbb
lods
les
cli
lock
ret
enter
fs
sub
in
push
pop
rol
jbe
push
jle
inc
and
arpl
pop
stc
sub
jg
push
xor
xorl
loopne
loopne
js
jnp
pusha
jg
jae
js
xchg
lds
mov
xor
cmp
and
add
fldt
into
cmp
ja
push
repz
dec
or
subl
xchg
push
adc
insl
jl
xchg
int
gs
aam
xchg
cs
sub
ret
loop
adc
mov
push
cmp
ja
sub
sbb
iret
stos
pushf
mov
sub
addr16
in
insb
test
lahf
mov
out
jo
imul
or
out
stos
adc
call
fistpll
push
sbb
push
xor
stc
scas
mov
vmovntps
rclb
dec
inc
sub
cmp
and
mov
and
icebp
pop
dec
fbstp
out
and
ffree
movl
test
data16
lods
out
cmpsb
xchg
decl
pusha
movsb
push
push
mov
and
mov
push
xor
stos
mov
pop
xor
add
ljmp
cmc
mov
push
idiv
xor
repnz
out
aam
call
cmpsl
sbb
popa
adc
rorb
cs
add
imul
mov
mov
xchg
adc
add
xorb
mov
and
adc
div
inc
jne
and
popa
enter
pop
adc
ret
out
sti
pop
xor
sahf
adc
in
decb
jmp
push
fsts
sub
and
iret
stos
aam
sub
insl
cmp
xor
jne
xor
notl
movsl
sub
aad
push
fcom
orb
inc
or
fadd
dec
mov
add
mov
inc
pop
mov
xchg
ds
and
cltd
push
cmovno
ds
test
jo
xor
push
outsb
cmovle
rcll
sbb
push
ds
push
adc
inc
add
xchg
xchg
pop
lds
mov
fildl
sahf
loop
or
aad
mov
shlb
lods
push
repnz
adc
out
scas
loop
mov
loop
fstpt
xchg
inc
dec
push
stc
ret
insb
movsb
aaa
aas
sti
jmp
sbb
xchg
cmp
flds
cmp
test
pop
test
call
xchg
test
cs
test
and
mov
das
movsl
jge
mov
andl
shrl
sahf
mov
les
inc
add
cli
add
xchg
mov
fistps
pop
shlb
push
push
popf
test
pop
adc
aam
shl
and
cmp
sub
insb
sub
je
xchg
and
repnz
test
jns
test
pop
test
dec
jmp
out
ficomps
scas
lods
sub
aaa
adc
imulb
iret
mov
sbb
pop
out
lds
push
cmp
or
sub
inc
xor
adc
cmp
cmpsl
mov
out
mov
pop
inc
mov
jge
push
mov
jo
repnz
fwait
out
or
cmc
inc
rorl
sub
ljmp
mov
jle
sub
xchg
inc
dec
test
cmp
push
mov
xchg
and
insb
push
mov
decl
aad
mov
testl
push
push
pop
jle
lds
jns
inc
inc
sub
inc
push
jecxz
cltd
mov
jne
movsl
nop
cmp
sub
pushf
or
or
push
add
jno
aam
lea
test
pop
sbb
jecxz
xchg
jecxz
mov
loop
jp
movsb
xchg
dec
sbb
adc
push
bound
lock
jb
cmp
push
jbe
pop
out
in
hlt
not
jae
xor
xchg
sbb
sub
pop
fmull
dec
insl
call
pushf
inc
mov
inc
popa
xor
xlat
or
mov
insl
xlat
jl
test
jnp
sbbb
gs
into
push
int
add
pop
pop
push
pushf
out
push
fimull
xchg
pop
jb
dec
mov
sub
pop
je
rorb
inc
push
cltd
dec
xchg
in
push
mov
movsb
xor
xor
push
dec
flds
fistps
or
jnp
or
movsb
jnp
outsl
repnz
sbb
js
mov
cld
test
inc
xor
dec
je
fidivl
cmp
sub
sbb
rolb
scas
call
cltd
es
dec
mov
cs
shlb
or
je
es
inc
ret
call
cwtl
cmpsb
and
stc
outsb
gs
out
mov
push
insl
dec
pop
outsl
imul
shlb
inc
aad
dec
and
inc
sar
jo
inc
fldlg2
cmpsb
sbb
add
mov
pop
aam
dec
outsl
jle
push
sti
je
ucomiss
and
jle
daa
lock
mov
jne
fidivl
icebp
out
sbb
mov
push
push
popl
je
loopne
loop
rcl
cmpsl
test
mov
scas
pop
popa
xchg
cmp
inc
ret
les
movsb
js
jb
inc
out
fdivs
stos
sti
mov
icebp
jp
mov
inc
or
jl
cmp
pop
add
icebp
mov
lds
mov
std
jae
pop
push
push
pop
mov
loopne
icebp
arpl
pop
insl
out
mov
lods
add
xor
xchg
cmovo
push
enter
dec
mul
mov
jnp
jno
mov
cmp
das
hlt
outsl
aaa
icebp
push
push
enter
in
cmpsb
movsb
scas
iret
mov
adc
cmpsl
and
pop
lock
insb
mov
pop
jp
inc
add
jns
push
jo
sbb
jge
fwait
dec
insb
iret
adc
push
loop
test
cwtl
mov
push
lahf
jle
sub
shl
push
jmp
mov
inc
sbb
xchg
push
xchg
jg
jg
stos
lea
mov
jl
jecxz
dec
and
fisttpl
int
sbbl
mov
inc
jae
xor
cmp
sub
sbb
imul
mov
xchg
push
mov
hlt
imul
clc
mov
pop
inc
push
mov
xchg
xchg
aam
xor
pushf
in
sbbl
pop
push
pop
sbb
mov
mov
repnz
mov
movsl
test
sbb
push
dec
add
mov
mov
add
fs
sti
outsl
mov
sbb
fmull
push
clc
jbe
xor
fwait
xor
and
inc
dec
push
dec
mov
and
sub
or
push
shrb
je
das
cltd
mov
dec
sub
and
ss
inc
adc
lret
int3
std
xchg
add
jno
pop
jmp
jmp
daa
mov
addr16
rorl
mov
out
mov
adc
mov
bound
xchg
dec
das
jecxz
mov
popf
out
testb
mov
lret
sbb
daa
repnz
popa
add
add
mov
add
aas
push
hlt
jmp
sbb
pusha
xlat
mov
outsl
push
mov
mov
xchg
mov
xor
testb
push
push
ss
xor
jecxz
call
cmpsb
dec
lahf
lock
pop
xchg
aas
rdtsc
push
scas
pop
mov
inc
xor
adc
add
mov
adc
lock
call
push
ja
adc
cwtl
inc
stos
into
jnp
scas
fstps
xchg
cmp
push
pop
aam
xchg
lret
loopne
imul
js
sub
stos
imul
cli
je
xchg
add
imul
sub
or
push
mov
aas
xor
lods
sub
xchg
sbb
fld
loope
push
addl
in
cmpb
sub
cwtd
and
setns
rorl
push
lret
stos
adc
add
xor
ja
pop
cmp
mov
je
pusha
outsl
adc
les
movsb
stos
bound
stos
test
sub
jne
cmpsl
xor
sbb
call
cmp
xorl
adc
xchg
or
dec
dec
jnp
sbb
pop
adc
leave
pop
xchg
dec
leave
stc
xchg
inc
je
pop
fldenv
call
inc
gs
rcrb
ficoml
repnz
adc
and
add
mov
xor
fdivr
and
push
or
and
sbb
jecxz
test
xor
jne
mov
push
lahf
addr16
ja
idivl
dec
lock
fmul
fsubs
movsb
xor
mov
adc
pop
add
adc
xorb
out
adc
ja
icebp
xor
lea
mov
pushl
mov
repz
mov
hlt
pop
dec
mov
sub
or
out
push
paddb
add
push
sub
jae
xchg
fs
pusha
cmpb
mov
sbb
nop
and
ss
pop
loope
insb
jbe
test
aad
jbe
inc
cld
outsb
mov
pop
sub
add
pop
lock
aam
lcall
pop
mov
rorl
lock
ss
js
mov
addl
shll
repnz
ret
clc
mov
icebp
xor
mov
lods
fstps
out
jle
sub
fiadds
pushf
mov
sbb
push
gs
push
mov
mov
lds
clc
push
jl
pop
int
arpl
test
jbe
mov
push
int3
les
sbb
mov
add
cmp
scas
jl
jl
shll
add
shl
orb
test
icebp
lock
push
xchg
mov
or
sub
dec
rcrl
popa
roll
pop
cmp
pand
xchg
rolb
ljmp
mov
popl
cmp
mov
int3
mov
xlat
lret
inc
jmp
lret
jge
sbb
mov
fimuls
lods
mov
xchg
add
insb
jo
pop
and
jecxz
repz
inc
movsb
scas
cld
jne
fldcw
dec
adc
imul
iret
jmp
xor
xchg
or
ja
lahf
bound
mov
push
cmp
movb
or
scas
fistpll
jp
inc
cli
and
xlat
into
pop
movsb
out
sti
mov
je
int
jae
jb
ss
les
test
or
xchg
or
mov
xchg
sub
rclb
pop
jmp
add
sbb
pusha
jecxz
pop
sahf
aad
xchg
pop
push
xchg
clc
dec
lds
sahf
inc
inc
add
jge
nopl
cmp
cwtl
jg
fadds
insl
les
testb
lcall
xor
lahf
or
int3
fstpt
pop
xchg
ss
fcomi
jae
js
cmc
inc
xor
test
lods
insl
pop
lahf
mov
stc
imul
aam
dec
popa
test
outsb
stc
mov
repz
cmp
mov
scas
inc
push
mov
fwait
pop
sub
jbe
mov
les
add
sbb
fisubl
in
add
aas
loope
mov
mov
data16
mov
pop
fs
popa
stc
sbb
orl
lret
fisttps
adc
enter
mov
dec
out
jb
lods
aaa
into
jae
xchg
and
mov
mov
cs
xor
std
or
cmp
loop
int3
pop
stc
in
ds
or
daa
repz
sub
push
push
test
inc
in
js
or
cmp
sbb
xor
cmp
inc
dec
es
mov
in
daa
mov
jns
fsub
adc
add
iret
push
cmp
mov
fsubrl
xchg
mov
repnz
push
mov
outsl
mov
outsl
cltd
mov
insb
pop
out
or
xchg
mov
xchg
xchg
mov
sub
push
outsb
scas
pop
xor
xchg
jnp
lock
or
loope
lods
mov
cmp
pushf
inc
mov
bound
inc
fisttpll
jg
sarb
int
cmc
addb
test
xor
mov
stc
sbb
inc
cmp
inc
xchg
cli
jo
call
or
mov
int
scas
add
push
jne
adc
movsl
jge
in
stc
mov
mov
rcrl
push
in
mov
sahf
pop
rcrl
xchg
pop
dec
js
fucomp
pop
ret
fisubl
lds
lods
in
aas
jb
jae
fwait
xor
sbb
fsubp
dec
rorb
mov
cmp
fcoml
xor
mov
jecxz
pop
jnp
popf
inc
shl
lret
mov
test
movsb
xchg
xchg
sbb
mov
xor
add
ja
ret
das
pop
test
insl
xchg
mov
popa
pop
xchg
js
popa
sar
xor
dec
dec
and
adc
jns
testb
cwtl
setl
mov
mov
aas
dec
or
mov
push
push
lds
movsl
jae
repz
mov
and
add
or
inc
jae
xchg
into
nop
inc
jnp
les
add
and
jae
adc
and
adc
hlt
jg
cmp
outsb
iret
leave
jecxz
lret
cmpb
sbb
sbb
int
int3
mov
scas
and
jns
popa
xor
jge
lods
adc
push
les
mov
push
xor
push
call
test
mov
adc
fs
cmpsl
mov
icebp
xor
in
test
shll
sti
jmp
pop
lods
shrl
ja
pop
push
ja
push
or
or
out
cmp
xchg
cmpsb
xlat
in
call
mov
xchg
sbb
into
inc
rorb
mov
ror
mov
mov
add
add
jecxz
sti
pop
dec
sub
addr16
hlt
mov
mov
push
jge
jno
pop
inc
or
inc
std
pop
inc
ss
cwtl
mov
pop
int3
aad
int
fadds
outsb
lds
adc
shl
mov
daa
shlb
mov
pop
or
add
rcr
pop
ret
jae
dec
push
lret
loopne
mov
adcl
pop
inc
pushf
clc
hlt
add
sub
sbb
add
push
jns
xor
mov
xor
ljmp
call
aam
and
fisubl
push
lahf
rcll
arpl
shrb
mov
rolb
arpl
cmpsb
jne
sub
and
imul
mov
dec
and
aad
in
nop
es
mov
sub
sahf
pop
lahf
dec
and
fsts
adc
sbb
out
add
rclb
in
inc
or
aas
or
push
fnstcw
push
inc
nop
test
movsb
dec
in
pop
xor
shl
fbld
test
sbb
add
bound
jg
jns
push
imul
cmpsb
enter
std
sbb
ss
iret
mov
push
cli
mov
cmp
mov
mov
inc
addr16
movsl
inc
sbbb
sub
lret
mov
xchg
ret
pusha
out
testl
push
fidivl
mov
rorl
or
loopne
push
inc
hlt
subl
push
mov
daa
mov
sbb
je
mov
add
jmp
jns
lcall
xchg
cmp
ss
sub
repz
dec
jge
sti
popa
adc
inc
or
pop
das
jae
popa
and
mov
jnp
orb
or
sub
inc
enter
call
cmp
leave
inc
pop
shll
pop
std
aas
sahf
rcrl
cli
cmp
aas
sbb
test
sub
and
cs
mov
das
adc
mov
mov
mov
add
mov
pushf
or
test
mov
stos
pop
pop
fmull
push
jg
outsl
mov
pushf
movsb
std
dec
clc
bound
loopne
inc
movsl
sub
adc
rcrb
repnz
sbb
stc
adc
pop
xchg
ds
popa
adc
cmpsl
int3
fisubrs
test
adc
xor
mov
inc
push
dec
imul
and
pop
xor
sbb
gs
jg
clc
out
sub
stos
sahf
push
push
popf
cmp
fisubrs
adc
sub
out
aas
test
jae
int3
jecxz
daa
jl
mov
arpl
mov
jl
je
icebp
pop
sub
testl
pop
dec
cmp
and
dec
inc
divb
adc
xchg
or
mov
js
lret
adc
int3
or
and
jg
push
icebp
jnp
dec
fsubrp
add
xchg
cmc
lods
lds
imul
xor
pop
fildl
incb
out
dec
and
loop
inc
sarl
or
cmp
push
rolb
ror
mov
jle
push
mov
adc
pop
repz
mov
add
jo
cmp
data16
sbb
mov
test
xchg
fstpt
int3
out
cmp
or
je
xchg
jg
out
mov
mov
mov
mov
inc
jb
fxch
lods
shlb
ljmp
mov
test
push
adc
push
pop
std
mov
mov
stos
inc
inc
xor
sbb
cmpsl
jle
sub
adc
ja
xchg
sarl
xor
push
shr
insl
pop
rorl
xor
pop
into
adc
inc
mov
pop
in
mov
mov
mov
xchg
mov
fiadds
push
push
scas
rclb
popf
hlt
mov
pop
mov
cwtl
dec
cltd
sub
mov
shr
cs
mov
aaa
imul
mov
push
arpl
mov
xchg
into
dec
xor
lea
sub
popf
xchg
ja
mov
ret
rol
xchg
out
je
dec
jecxz
mov
dec
orb
mov
cmp
icebp
push
jno
imul
mov
enter
test
mov
cwtl
fwait
cmpsl
jge
or
cli
lcall
xchg
aam
xor
fdivl
fcomip
jl,pn
add
aam
push
mov
or
add
es
ja
jp
mov
rcr
add
into
sbb
fistpl
dec
mov
rolb
and
movsb
ljmp
int
nop
cmp
hlt
mov
sub
sub
or
andl
imul
mov
jle
xor
push
std
jg
sbb
adc
das
mov
cmpsb
adc
and
or
scas
adc
cli
fcomp
jle
jge
aam
arpl
shl
pop
stos
fsubl
mov
loopne
es
pop
shlb
dec
jns
xchg
test
ja
lcall
jo
lcall
jecxz
pop
in
dec
mov
and
mov
mov
and
repnz
jl
test
mov
add
cmp
jle
rorl
push
and
and
imul
fxch
push
mov
sbb
mov
stos
pop
and
outsl
stos
test
push
push
inc
adc
aam
clc
lock
repnz
add
and
mov
psubsw
or
adc
xchg
ljmp
sub
cmp
out
inc
mov
es
jg
adc
mov
adc
xchg
pushf
stos
push
cmp
pusha
jo
xchg
fbstp
cld
scas
cmc
push
aam
lods
xchg
mov
outsl
in
cli
xchg
aam
sbb
or
push
lret
pusha
fdivr
xchg
jb
inc
xchg
jp
mov
ffree
ds
je
ljmp
mov
push
adc
orb
mov
push
cwtl
lret
xchg
xchg
sub
pusha
movsb
dec
sub
pop
stos
sub
mov
loopne
push
out
ljmp
cmp
pop
cmpsb
push
addr16
bound
pop
pushf
das
xor
cwtl
and
lods
jl
ljmp
adc
dec
loope
outsb
push
xchg
push
cmp
mov
jb
and
loope
push
scas
lods
imul
pop
div
add
dec
mov
outsl
add
sub
insb
hlt
popf
and
xor
pop
es
icebp
aam
sub
shrl
jno
xchg
cs
inc
mov
fisttps
cmpsb
lcall
les
and
jb
cmp
sbb
sbb
dec
pop
sub
mov
sub
test
pop
or
outsl
cmpsb
xchg
stc
loopne
jbe
in
xchg
dec
out
xlat
shrl
jle
rcl
cmpsl
inc
scas
std
ss
xchg
ret
add
out
add
adc
mov
add
inc
and
and
andb
pop
test
enter
cmp
in
mov
xchg
pop
ret
sbb
movsl
aas
lds
inc
or
mov
mov
add
mov
ja
mov
mov
push
inc
pushf
test
int
inc
fsub
lahf
or
daa
fstl
xchg
xchg
ljmp
jnp
stos
mov
adc
mov
pop
xlat
mov
loopne
popa
mov
aaa
or
push
int3
test
add
add
scas
jnp
lods
xchg
out
loopne
mov
hlt
inc
sbb
imul
imul
pop
mov
xchg
cmpb
fldl
sbb
sub
and
loop
mov
pop
lods
mov
xchg
cmc
dec
xchg
push
ljmp
call
or
inc
call
dec
subb
cmpsb
ret
gs
dec
add
test
popf
pop
imul
pop
or
jae
shl
cmp
sbb
out
mov
jge
push
mov
lds
js
mov
es
pop
mov
icebp
push
shl
mov
adc
dec
test
or
icebp
mov
adc
pop
xchg
fdivs
lods
mov
inc
faddp
pusha
dec
push
pop
into
out
dec
ret
lret
mov
popa
cmpsl
pop
scas
inc
leave
ss
pop
add
fcmovnu
adc
iret
sbb
lods
lret
cmp
push
and
add
arpl
movsb
or
test
push
dec
mov
ljmp
or
ficoml
cmpsb
les
lahf
cld
adc
cmp
inc
jne
push
in
xor
inc
cmpsl
xor
minps
insl
jo
imul
ss
pop
ret
cmp
fidivl
mov
jg
fmull
push
jbe
shrb
scas
jno
xchg
jg
sbb
mov
pushf
add
dec
xchg
pop
icebp
xchg
xor
out
enter
mov
outsb
xor
sub
shll
inc
dec
sbb
ja
inc
cltd
cmp
mov
arpl
xchg
out
lods
xor
lods
pop
dec
push
data16
adc
mov
mov
lahf
not
jne
and
mov
flds
adc
int3
dec
mov
loop
test
dec
sub
sub
push
sti
fbstp
jae
outsb
xor
fidivrs
fbstp
adc
test
loop
mov
not
adc
xchg
test
mov
test
ret
xchg
cltd
ret
ds
xchg
mov
mov
xchg
sub
xchg
mov
in
insl
mov
hlt
xorb
adc
push
pop
xor
cwtl
aaa
adc
cvtpi2ps
div
imul
mov
test
jne
mov
stos
jae
xchg
xchg
mov
add
les
cmpsl
test
je
aad
jne
pop
nop
pop
sbb
out
mov
inc
ja
mov
popf
cmpb
mov
adc
in
in
pop
xchg
pop
mov
pop
xor
popf
outsb
xor
in
or
shrw
inc
in
mov
cmc
mov
cmp
jns
pop
mov
inc
out
stos
mov
decl
sbb
push
dec
adc
mov
imul
pop
and
sbb
pop
les
xor
and
fs
xor
inc
jecxz
ret
fs
cwtl
jne
jo
jmp
mov
jbe
sub
test
mov
movsl
test
jl
sbb
push
clc
jecxz
jg
xchg
inc
int3
and
ror
pop
inc
pop
add
lds
rolb
add
xchg
inc
jp
pop
inc
xchg
xchg
mov
int3
sbb
das
mov
jo
pop
fwait
iret
jns
pushf
int3
fiaddl
ljmp
lret
fcmovb
add
ljmp
stos
push
and
daa
rcr
test
pop
shll
pop
movl
hlt
mov
imul
jmp
fs
mov
ret
jno
sbb
dec
int
fucomp
xchg
shrb
mov
push
call
nop
cltd
xchg
and
inc
pop
mov
mov
adc
out
adc
seto
movsl
out
xor
imul
mov
bound
or
insb
pop
mov
iret
xor
imul
pop
cltd
iret
mov
in
mov
mov
inc
aad
fwait
arpl
js
adc
lret
sbb
fs
arpl
adc
xchg
push
pop
cmc
add
xor
mov
cmpsl
jecxz
dec
imul
pushf
push
cltd
lods
or
scas
mov
cltd
add
mov
sub
cltd
clc
dec
cs
loope
and
fdivs
xchg
mov
enter
xor
shrl
ja
test
lea
rcr
stc
scas
or
mov
xor
testb
cli
jmp
add
imul
add
jne
jp
call
stc
in
divb
aas
jnp
sbb
dec
pop
xor
clc
into
rcll
jbe
push
sub
shll
aaa
shrb
inc
xchg
lods
mov
stos
nop
xor
ret
mov
std
imul
fcomi
outsb
xchg
in
mov
adc
or
sub
data16
and
sub
ret
adc
or
jo
mov
add
cmp
icebp
pusha
icebp
xor
paddw
ret
pop
fimuls
jle
cmp
in
mov
push
movb
hlt
fimull
outsb
icebp
in
jl
sub
mov
lock
ljmp
bound
fstps
fcmove
ja
mov
pushf
das
cld
sub
hlt
sub
sti
in
push
mov
xor
fs
mov
sub
adc
aas
inc
cltd
cmp
nop
int
outsb
mov
mov
int3
xchg
insb
out
push
jge
shlb
add
int3
daa
xchg
cli
int
and
ret
push
fsubs
and
mov
push
lret
pop
bound
pop
xor
xchg
sub
xor
decb
sbb
or
pop
pop
adc
or
mov
ljmp
mov
aas
cmc
aam
cltd
inc
jmp
inc
sarl
and
std
dec
and
fidivrl
jg
fbld
adc
int3
sti
lret
xor
xchg
sbb
test
les
jge
and
push
loope
fisubrs
adc
push
mov
ret
mov
adc
push
mov
xchg
into
xor
popf
push
pushf
push
call
bound
pop
fs
xchg
movsb
inc
call
sbb
aam
cmp
mov
in
les
sub
imul
inc
lods
iret
outsl
lock
rclb
sub
sub
repnz
push
mov
rorl
or
vmread
add
in
mov
and
xor
sbb
dec
cmp
and
xchg
loopne
push
out
xchg
mov
decb
sub
or
sbb
mov
loop
rclb
mov
gs
cmp
cmc
out
outsl
mov
sti
popaw
cwtl
test
mov
loopne
nop
cmp
and
adc
mov
into
test
pushf
xlat
pusha
movsb
sbb
test
sub
cmp
dec
add
dec
and
loope
adc
int
leave
push
mov
mov
jno
push
xlat
repz
jne
stos
jbe
push
out
push
mov
int3
cmp
mov
inc
or
movsb
int
add
adc
into
aaa
rcll
lds
lret
sub
and
add
into
add
mov
pushf
lea
jno
lea
jmp
test
add
test
outsl
pop
or
in
loopne
fwait
and
dec
loopne
icebp
push
push
mov
stc
sahf
or
std
jp
iret
jnp
fdivl
je
negl
xchg
push
leave
pushl
inc
sub
hlt
cmpsl
fiadds
insl
dec
orb
mov
cmp
and
adcb
ja
repz
or
lds
test
or
je
push
imul
add
in
push
mov
mov
xchg
or
loopne
push
sbb
and
arpl
sbb
bound
or
std
xor
mov
xchg
mov
rolb
sbbl
cmp
or
cli
cmp
add
rcl
test
xor
and
xor
lahf
scas
fstps
shll
pop
lods
xchg
ficoml
push
mov
adc
xor
adc
mov
rcll
jmp
or
rol
mov
clc
xchg
sti
push
jp
mov
rcrl
ljmp
cmc
cmp
sahf
adc
push
mov
mov
ja
sub
jge
pop
xor
int
xchg
inc
jp
push
sub
mov
pop
add
cltd
mov
into
and
jno
mov
xor
cs
sahf
je
adc
pop
dec
sub
sbb
lods
push
mulb
xlat
std
inc
adc
adc
pop
inc
mov
xor
push
sub
loopne
dec
mov
xchg
rcr
and
int3
mov
jge
pop
push
mov
xchg
js
mov
clc
mov
lock
icebp
xor
addb
pop
test
mov
adc
sti
pop
outsl
xchg
dec
loope
fldt
jecxz
push
and
xchg
jg
icebp
loope
imul
imul
adc
psrlq
adc
inc
sub
loop
adc
scas
pusha
int
mov
dec
nop
jp
loopne
rorl
jae
push
std
loope
popf
aam
imul
gs
mov
cmpl
mov
incl
push
mov
fcmove
xchg
gs
adc
rorl
repz
in
aam
movsl
rorb
dec
push
and
popa
lahf
jl
cmp
pop
push
cwtl
xchg
bound
stos
es
leave
dec
mov
leave
fstps
popa
xor
and
pop
cmc
outsl
jbe
add
sub
xchg
mov
or
push
ss
add
aas
adc
mov
and
xchg
dec
add
in
sub
adc
test
leave
fidivl
xchg
mov
push
jmp
cltd
cltd
addr16
arpl
xor
adc
dec
add
xchg
add
mov
push
daa
xchg
out
mov
dec
shll
push
mov
or
scas
dec
jnp
gs
jbe
lods
shrl
inc
mov
imul
sbb
cmp
loop
xchg
xor
pusha
addr16
out
jle
dec
and
mov
fs
pop
or
mov
sbb
lahf
fmull
mov
loopne
sahf
dec
lock
adc
leave
xchg
pop
pop
or
das
push
mov
loop
xor
inc
js
testb
or
pop
lock
xchg
scas
sbb
lahf
or
and
imul
or
shr
into
cmpsl
cmpb
test
test
inc
icebp
mov
push
popa
push
icebp
sahf
repnz
inc
aaa
notb
inc
test
mov
rcll
xor
cld
pop
jae,pt
pop
ljmp
add
inc
fistps
cmpsb
push
inc
push
cli
or
sti
jecxz
mov
jg
and
xchg
ljmp
aad
in
lcall
cmp
cmp
stos
lret
push
insl
push
xchg
in
or
out
add
lock
je
xchg
rolb
or
add
pop
ss
filds
decb
cmc
out
ret
jp
nop
mov
outsl
gs
rorl
ja
ficomps
mov
sub
ds
das
push
mov
jle
add
sahf
mov
mov
dec
adc
lcall
dec
les
mov
aam
lahf
int3
xlat
in
or
cwtl
mov
aad
sbb
xchg
pop
lret
mov
daa
pop
icebp
push
mov
cli
lret
push
movb
xor
mov
mov
outsl
lcall
lret
jnp
jg
hlt
add
or
cmp
fwait
mov
and
push
out
call
leave
pop
jl
divl
daa
lret
dec
cmp
stc
dec
mulb
imul
and
adc
push
lods
out
addl
scas
push
jge
jp
push
pop
in
add
push
push
popa
push
test
insl
test
push
sbb
sub
mov
outsl
pop
sbb
and
insb
sbb
xchg
or
fidivrs
xor
ret
add
jno
fisttpl
cmc
sbb
repnz
pop
sub
adc
aam
outsl
add
cmp
mov
test
jmp
xor
ss
je
sub
test
xchg
sub
dec
mov
pop
push
xor
popf
in
push
int
add
mov
or
pop
aam
xchg
mov
loop
ud2
aaa
add
or
ljmp
cld
and
notb
icebp
dec
xchg
cmp
sub
dec
scas
inc
pop
stos
xor
popa
add
inc
push
sbb
lret
nop
subb
jge
sub
adc
clc
or
dec
mov
js
sub
xor
cmp
mov
add
mov
mov
add
ret
push
pop
dec
ret
shlb
jmp
xor
outsl
xchg
mov
cmpsl
cwtl
je
inc
rclb
leave
call
pop
call
test
pop
es
enter
pop
neg
and
dec
repz
repnz
ss
mov
or
xor
xor
in
ss
pop
cmp
adc
lods
sub
xor
push
cmp
jl
mov
popa
outsl
mull
add
fidivrl
into
push
lcall
lret
sbb
dec
push
dec
rcrl
xor
imul
out
xor
js
adc
xor
fincstp
lods
sahf
mov
xor
push
dec
enter
cmc
jp
outsl
push
idivl
cli
sub
shl
push
inc
arpl
inc
lahf
and
dec
inc
mov
dec
push
mov
outsl
xor
mov
repnz
sub
addr16
shll
jmp
jmp
xchg
pop
xor
mov
out
ja
loop
cmpsb
mov
in
or
insl
imul
dec
in
test
je
add
test
sub
in
ficoml
add
sub
sub
movsb
insl
or
cli
cmp
fstps
fadds
xchg
inc
jp
cmp
sbb
mov
fxch
pop
lods
hlt
add
jmp
lcall
into
loope
xor
jnp
jge
nop
sti
push
aad
movsl
xor
sar
lret
and
jae
sub
xor
daa
aad
repnz
xchg
mov
or
or
mov
mov
pop
stc
lret
movsb
repz
mov
push
lea
rcr
mov
add
cwtl
xchg
mov
aad
and
int3
add
pop
xor
and
jae
inc
ss
jp
mov
mov
je
ja
jbe
arpl
adc
ljmp
add
lret
lret
xchg
les
ret
push
jmp
hlt
lds
push
or
loopne
mov
repz
sub
push
ficomps
mov
icebp
mov
mov
xorl
enter
js
cmpsb
out
xlat
std
fcompl
scas
push
add
push
dec
inc
mov
xor
push
lahf
cltd
pop
sahf
sbb
insb
arpl
pop
and
push
mov
pushf
push
inc
inc
sub
mov
xchg
xchg
imul
and
repnz
sbb
dec
aas
fidivs
cli
mov
in
je
fildl
cmp
mov
xchg
rcrl
jle
lods
push
das
xor
cmp
adc
dec
inc
sbb
sahf
pop
enter
or
cmp
std
pop
pushf
and
inc
scas
out
out
idiv
stos
cs
aam
pop
xchg
sti
cltd
cmpsl
inc
pushf
mov
dec
scas
js
lock
scas
cmp
outsb
push
xchg
mov
mov
imul
push
arpl
mov
push
jp
jbe
idivb
xchg
xor
stos
or
cmpsl
cmpsb
dec
sub
sbb
cmpsb
sbb
push
lret
and
scas
ret
mov
sub
bound
gs
dec
xchg
stc
test
mov
js
mov
fdiv
cmpsb
data16
or
pop
fsts
or
or
mov
push
adc
cltd
rcll
mov
outsl
fdivrl
mov
pop
xchg
repz
xchg
mov
cmpl
push
sahf
insb
gs
mov
mov
sub
lods
xorl
add
push
sbb
das
sbb
sub
adc
fwait
mov
mov
xchg
and
push
sub
ret
adc
cmp
cmp
ds
into
push
lods
gs
pushw
and
push
dec
xchg
addb
xor
dec
pop
push
push
or
push
iret
jb
aam
dec
ja
loop
fcompl
add
scas
cld
addb
mov
les
and
xchg
cld
xchg
cltd
outsl
loope
xchg
mov
call
fs
mov
push
test
push
scas
rcr
lock
std
pop
adc
xchg
mov
add
add
cmp
out
or
mov
jnp
jnp
add
into
mov
sbb
and
das
out
into
cmp
mov
enter
dec
sub
lods
dec
lret
shll
or
lret
sbb
push
mov
jb
or
xchg
stos
aad
ficompl
add
scas
push
xorl
lock
push
cmp
test
rclb
adc
mov
or
and
or
xchg
add
test
lret
test
cmc
jnp
sbb
inc
dec
jge
dec
inc
or
push
nop
cltd
shll
pop
xor
and
pusha
in
sbb
jne
sub
stos
jge
and
js
push
sbb
fnsave
ljmp
jo
loopne
enter
sub
xor
mov
imul
das
push
mov
inc
cli
xchg
inc
int3
pop
es
out
jge
inc
cmpsb
repz
das
lret
push
dec
sbb
fs
inc
xchg
test
sub
stc
inc
and
adc
xor
jno
in
popf
test
popf
add
shlb
pop
mov
lret
lret
push
mov
sub
jecxz
jge
add
push
sbb
push
shlb
mov
jge
cld
lea
xor
dec
xchg
push
stos
test
pop
sub
repz
in
in
movsl
clc
cli
adcb
dec
out
js
xor
xor
test
xchg
or
imul
xchg
push
cmc
adc
dec
or
dec
icebp
pop
lahf
sub
aas
inc
xlat
or
shl
add
addb
pop
or
cwtl
xchg
jns
jecxz
xchg
dec
push
or
repnz
popl
mov
inc
mov
jbe
inc
mov
dec
mov
ljmp
stc
mov
clc
stos
lods
mov
cld
or
divl
xorl
je
add
xchg
sbb
std
sarl
popa
mov
in
jne
or
out
sbb
xlat
xor
pop
cmpsb
nop
cmp
add
jae
pop
mov
shll
jne
jge
mov
and
jae
dec
mov
ljmp
je
xorl
adc
pop
pop
sbb
test
jb
scas
jns
xchg
repz
jecxz
dec
lock
pop
addr16
push
mov
fsubs
mov
lret
mov
jne
jmp
or
or
pop
jns
mov
fsqrt
mov
cs
lock
aad
pusha
nop
add
das
cmp
fildl
pop
xchg
push
div
mov
loopne
int3
push
or
push
je
icebp
lret
lods
scas
xor
lods
xor
sbb
pop
in
pop
repnz
bswap
and
cmp
movsl
rorb
shlb
add
cmc
jmp
push
jle
clc
shrl
push
inc
pop
push
jmp
les
mov
mov
and
lock
sbb
push
lret
push
mov
fwait
sbb
enter
jle
dec
sub
add
insb
lods
fsts
pop
sahf
scas
stos
cmp
adc
aaa
add
shrb
lock
jno
test
test
mov
ss
lret
pop
icebp
xchg
cltd
ficomps
cs
mov
and
inc
cmp
pusha
in
push
and
pop
lods
popf
or
push
pop
arpl
inc
je
pop
loopne
loope
push
adc
sbb
pusha
fs
iret
cmp
idiv
daa
xor
mov
push
stos
icebp
insb
mull
jmp
idivb
cmp
std
test
xlat
into
fisubs
mov
pop
gs
ret
add
lret
iret
pushl
xchg
pop
pop
and
pop
fcoml
repz
add
insb
and
ds
testl
xchg
divb
lea
insl
add
sbb
aad
shrd
divb
sbb
or
and
pop
shl
mov
mov
scas
scas
fdivr
sub
mov
and
pop
push
fcomps
sbb
fldl
pushf
imul
xor
pushf
inc
scas
jle
fstpt
pop
sub
jmp
jl
or
mov
aaa
adc
dec
mov
add
imul
sahf
cmp
inc
cmc
xor
add
mov
dec
pop
mov
cmp
push
cmp
inc
and
dec
mov
sbbb
or
sarl
mov
loopne
pop
add
dec
and
xchg
bound
mov
or
roll
je
mov
dec
adc
loopne
cmpsl
adc
push
aad
das
push
mov
repnz
fldenv
adc
movl
cltd
sub
arpl
or
lret
inc
lods
jle
and
and
test
jl
push
loope
pop
xlat
xor
and
sbb
mov
fs
aaa
add
sbb
jg
xchg
push
incb
fcmovnb
inc
test
insb
inc
iret
mov
int3
xchg
pop
sahf
loopne
ljmp
enter
dec
push
outsl
popl
lea
mov
daa
pop
icebp
xchg
add
std
push
xlat
mov
clc
out
imul
fimull
pusha
xor
sahf
xchg
insl
lods
dec
fidivrs
jl
imul
scas
pushl
mov
jecxz,pt
mov
popa
fsubs
mov
les
popf
inc
sbbb
adc
push
push
push
dec
inc
aaa
pop
jmp
mov
aaa
mov
pop
out
loopne
das
movd
imulb
jnp
mov
xchg
and
lret
fnsave
enter
jmp
js
js
xor
mov
stos
ja
insb
shll
fcomip
xchg
test
notl
pushf
sub
aas
ret
cbtw
test
test
lcall
xlat
mov
loopne
mov
adc
cwtl
pushf
cmpsl
pop
test
xchg
fbld
sub
jg
mov
les
jno
int3
repz
roll
mov
xorl
ret
cmpsl
mov
cmpsb
loop
xchg
dec
adc
pop
pop
xor
sbb
les
lcall
cmp
mov
add
sub
je
add
mov
dec
hlt
dec
fisubl
sti
sub
cmp
loop
push
jl
xor
stos
loopne
and
aas
insl
xchg
rolb
cmp
add
adc
push
ja
aad
cmp
test
jmp
sbb
sub
push
mov
cli
into
mov
mov
fistpl
sbbb
daa
das
jno
mov
es
dec
sbb
hlt
aaa
inc
mov
push
add
test
nop
aas
fadds
jg
jmp
mov
dec
gs
mov
mov
lret
fwait
and
xchg
sbb
arpl
inc
mov
inc
mov
xchg
xor
pop
push
sbbl
testb
mov
jo
mov
mull
dec
pop
punpcklwd
xchg
lock
push
pop
int3
dec
sbb
faddl
jne
jb
das
pop
xor
addr16
out
outsl
and
arpl
jo
and
mov
test
mov
icebp
mulb
jle
out
bound
xor
cwtl
nop
cs
ljmp
inc
adc
pop
int
mov
sub
sbb
mov
test
lods
loope
subl
pop
push
xchg
fsts
jb
and
pop
and
cwtl
dec
adc
add
add
xorb
mov
sub
gs
jno
bnd
cmp
pop
int
cmc
cmp
pushf
scas
filds
ss
pop
lods
mov
sub
test
mov
imul
scas
lock
negl
mov
cmp
insb
mov
int3
setno
sbb
jle
fsubrs
adc
mull
lea
jnp
insb
data16
cmp
rorl
addr16
or
mov
pop
std
jl
lcall
fisttpll
flds
test
lcall
mull
sub
lods
jle
daa
mov
not
adc
jmp
rcrl
cmpl
dec
aad
add
rcl
dec
fsubl
repz
fs
mov
daa
insb
je
jb
cmp
lods
sbb
int
or
sti
adc
and
enter
jns
add
pop
jo
mov
stc
jbe
imul
movsl
test
js
icebp
sub
jmp
and
cld
lds
fwait
push
arpl
pop
add
jp
in
rolb
cs
fwait
xor
sbb
jecxz
inc
cmpsl
stos
or
outsb
inc
insb
int3
jge
rcr
xor
jno
out
sahf
std
jle
les
jo
cmpsb
mov
outsb
jge
imul
sub
pushf
jge
cmp
in
mov
sub
pand
out
pop
outsl
in
jg,pt
das
ljmp
std
aaa
xlat
inc
pop
cmpsl
cmp
mov
sbb
cld
adc
adc
hlt
inc
inc
cli
push
into
shrl
popf
into
cmp
lar
jnp
jecxz
repz
cwtl
sbb
jne
pop
pop
pop
arpl
inc
test
or
add
mov
cmc
mov
xchg
inc
push
xor
ss
xchg
aas
jg
dec
mov
dec
cmp
and
lods
mov
xor
and
mov
hlt
std
adc
popf
sbb
ficompl
pusha
push
or
or
dec
and
lahf
mov
test
push
xchg
ljmp
push
mov
stc
fdivp
dec
push
mov
cmp
inc
push
sbb
mov
mov
pop
ret
dec
mov
bound
out
mov
stc
loopne
inc
ljmp
cli
rorb
int
rep
adc
jmp
lea
sarb
mov
aam
cmpl
lock
cmpsl
push
fwait
xchg
shlb
rcrb
push
dec
outsb
adc
test
aam
dec
xchg
popa
repz
jp
adc
cmc
xor
lret
sarb
in
xor
pop
pop
add
xchg
call
xlat
pop
or
pop
dec
cmc
jns
inc
cmp
in
hlt
pop
jo
cmc
and
mov
jmp
shrb
sbb
jbe
popf
pop
jo
push
rcll
clc
xor
xchg
es
outsb
pop
xchg
sbb
sti
and
inc
add
fsubrs
inc
sbb
add
sbb
push
in
push
int3
fidivs
sub
in
sub
cli
cli
cmp
push
dec
cli
loope
xchg
mov
add
jmp
scas
iret
insl
movsb
inc
inc
jbe
add
jb
dec
xor
test
cmpsb
scas
mov
push
inc
std
or
mov
jmp
and
sar
push
jecxz
sbbl
xor
addl
repnz
pop
add
fdivrp
push
aaa
jp
add
mov
inc
out
xchg
cmpsb
mov
xor
clc
aas
push
mov
and
pop
inc
loop
or
mov
out
xchg
adc
cmpsb
fildll
inc
jno
rorb
mov
loopne
cmp
mov
push
push
sahf
dec
dec
pop
xor
cmp
mov
dec
push
idivl
pop
nop
xchg
cmp
pop
sbb
push
jns
lock
xchg
test
jb
push
out
out
xchg
data16
sub
mov
movsl
je
adc
pop
and
repnz
or
inc
les
repz
jmp
adc
inc
fstl
push
loopne
or
add
mov
pop
filds
push
into
dec
and
cmpsl
in
mov
rol
mov
pop
cltd
insb
mov
into
cmp
imul
mov
and
dec
fidivrl
cmpsl
pop
ret
ljmp
sub
shrb
dec
pushw
sbb
cwtl
xchg
bound
dec
push
xor
les
add
sarb
cmc
fs
icebp
or
pop
movsl
stos
jne
outsl
push
sbb
ljmp
aad
cmpsb
es
sbb
shll
lea
pushf
ljmp
inc
popa
les
stos
mov
cmp
cmp
jb
cmpsl
mov
push
add
jb
pop
test
test
lock
out
rorb
rcrl
adc
popa
aaa
jge
je
jo
adc
in
push
cmp
sarb
pop
mov
sbb
pop
mov
push
cmpsl
cmp
aad
inc
mov
cli
fwait
or
xor
mov
mov
in
jle
mov
xchg
sub
push
decb
stc
call
xchg
scas
jg
fldl
loop
add
mov
push
mov
inc
pop
test
ret
mov
into
xchg
shl
leave
ror
ret
mov
jge
mov
add
sub
insl
fstpl
add
push
je
out
ret
ss
neg
dec
mov
push
test
pop
dec
sbb
pop
dec
cld
xchg
adc
orb
sub
cmp
mov
mov
or
dec
cmpsb
jg
mov
pop
je
jecxz
cmp
dec
pop
sub
pop
roll
mov
jmp
adc
xor
push
push
aaa
repnz
push
call
test
repnz
cmp
sbb
leave
movsb
sbb
mov
pusha
mov
adc
roll
push
repz
cltd
ud1
adc
ret
call
mov
test
push
dec
das
xchg
fdivr
repnz
mov
adc
lods
cmp
add
cltd
and
add
lret
stos
mulb
imul
pop
test
sub
push
lahf
xchg
hlt
xchg
sbb
lret
xchg
js
out
pop
or
xchg
mov
jbe
lods
cs
mov
rclb
cmpsb
repnz
push
shlb
bound
lods
pop
sub
dec
lock
and
subl
stos
mov
ficoms
outsb
and
inc
dec
lcall
push
add
inc
dec
sbb
std
dec
mov
lahf
mov
scas
pop
xchg
aam
adc
test
mov
mov
jno
test
lds
pop
popf
idivl
dec
jns
mov
aaa
mov
lods
inc
mov
in
push
xlat
sub
pop
pop
xrelease
out
shlb
adc
sbb
shl
daa
aas
loope
or
dec
scas
mov
cmovs
cmp
test
jl
inc
out
fcompl
cltd
xchg
shl
icebp
imul
jne
enter
inc
jg
xchg
cmpsb
ljmp
mov
sarl
xor
adc
cs
dec
out
pop
adc
shlb
repz
outsl
sbb
cld
mov
add
push
pop
bound
inc
pop
pop
sbb
das
pop
xchg
aad
add
mov
pop
mov
mov
std
repnz
addr16
lcall
addr16
mov
fistpll
fbld
cmpsl
mov
sub
js
movsb
addr16
imul
sbb
jg
sbb
mov
xchg
mov
push
in
jb
xchg
inc
imul
xor
dec
std
jbe
fs
mov
nop
dec
loopne
bound
nop
jae
pusha
fwait
adc
pop
enter
hlt
jbe
cmp
clc
sub
inc
adc
push
inc
xchg
xor
int
pusha
rcl
cmc
xor
loopne
mov
lcall
loope
fsubl
out
lcall
daa
and
enter
or
pop
fidivl
inc
pop
add
nop
dec
lock
inc
and
cli
imul
jmp
mov
xor
jns
and
push
add
pop
fsubrs
mov
push
jno
movsb
dec
sub
call
fs
cmp
pop
sub
xchg
movsb
stc
or
cmpsl
inc
enter
inc
xchg
or
mov
lret
dec
push
ja
and
adc
sub
std
sbb
dec
and
add
xchg
clc
push
mov
les
and
mov
mov
lods
decl
pop
rolb
int
or
movsl
fimuls
pop
js
pop
jle
incl
add
int
mov
lods
and
sbb
mov
mov
push
out
popl
scas
xorb
rcll
sub
call
add
pop
les
cmp
sar
dec
push
mov
or
adc
pop
jl
iret
mov
dec
cwtl
mov
cmp
dec
and
imul
cmp
add
inc
cmpsl
sbb
stc
sahf
fcompl
test
jp
mov
cmpsb
ja
lcall
and
jne
ss
ljmp
jle
inc
add
xchg
pop
or
mov
dec
cld
rcl
insb
bound
scas
sahf
dec
and
into
in
adc
call
leave
sbb
popf
out
mov
addb
and
or
pop
lcall
outsb
ds
mov
movsl
dec
lods
rorl
xor
es
decb
nop
stos
cs
outsl
or
imul
rcrb
mov
lea
mov
lea
push
dec
icebp
incb
inc
lret
das
dec
es
mov
pop
push
adc
addr16
inc
pushf
test
sti
cli
adc
jb
into
xchg
dec
aaa
enter
leave
fs
test
in
inc
mov
pop
nop
insb
cmpsb
aam
addr16
pushf
push
add
ret
clc
mov
sarl
jmp
jns
jae
divl
ret
rclb
adc
pop
push
and
xor
in
mov
mov
xchg
pop
mov
add
mov
jnp
sti
xchg
mov
push
sbb
sbb
scas
loopne
mov
xchg
add
call
lahf
ret
imul
invd
movsl
sbb
and
repnz
lahf
sub
cmp
jp
lock
ror
test
mov
divb
fwait
push
mov
jbe
outsl
hlt
fsub
leave
xchg
std
loop
jo
loopne
das
xor
jmp
add
push
jb
jo
push
mov
mov
ret
faddp
jnp
mov
push
stc
ret
lcall
repnz
imul
jle
and
xor
shl
push
adc
scas
mov
jne
lock
data16
xor
and
vorpd
xchg
mov
xchg
cmp
outsl
xor
lock
push
ror
insl
xchg
xor
fisttps
fisubs
jnp
out
cli
int3
mov
hlt
stc
add
scas
push
pop
mov
adc
pop
fwait
cmp
xor
cmova
jns
aam
cwtl
fsubl
xchg
dec
sub
add
push
cmpsb
insb
rcll
cmp
lds
jns
mov
mov
push
pop
lahf
lea
inc
mov
jae
sar
roll
sbb
inc
testb
rcrl
test
sahf
push
movsl
ret
addr16
fldl
jl
jg
fcoms
rcrb
cmpsl
mov
add
mov
in
popa
cli
dec
jae
or
cld
sub
sbb
mov
in
sbb
je
decb
add
cltd
gs
add
ret
and
pop
and
jo
cmp
stc
add
add
mov
or
pop
pushf
ljmp
pop
xchg
ja
sbb
popf
aam
insl
notb
mov
bnd
mov
sbb
fisttps
xor
cmc
lret
xor
cmp
xchg
mov
ficomps
adc
cmp
xchg
sbb
aaa
lods
mov
xchg
xchg
movsl
push
pop
gs
pushf
jne
daa
mov
pop
push
mov
data16
in
jns
int
icebp
icebp
xor
pop
xor
jmp
pop
cmp
loope
push
fucomp
and
adc
xor
or
push
repz
fstpt
inc
inc
popf
mov
lahf
add
subl
ja
mov
dec
sbb
or
push
sub
daa
cmpsb
stc
fwait
sub
dec
pop
neg
mov
sbb
sbb
mov
jle
or
mov
insl
ss
jg
dec
add
or
adc
add
mov
lock
adc
xchg
sbb
cmp
sub
in
fsubs
push
push
insl
adc
ja
cmp
loopne
or
int
push
push
std
pushf
push
xor
mov
loopne
push
add
out
push
mov
iret
pop
aas
call
xchg
inc
inc
adc
daa
pop
and
jp
inc
push
in
dec
cltd
inc
notb
jns
adc
out
lea
andps
cmpb
mov
call
mov
pop
mov
ret
dec
add
nop
xorl
push
ja
sub
xchg
daa
adc
mov
cmp
in
ret
lret
lret
je
lds
sub
xor
pop
iret
xlat
or
dec
push
enter
sbb
xchg
lds
pop
test
cwtl
dec
push
rcll
adc
cmp
jmp
mov
lcall
js
push
out
popa
push
mov
outsb
fstl
ljmp
movsl
push
test
js
dec
std
cltd
push
aas
inc
xor
cltd
mov
popf
push
cmp
sbb
jmp
pusha
jp
mov
test
out
xchg
pop
sbb
add
fistl
jecxz
sahf
and
pop
sbb
shll
fsubrp
inc
or
clc
xor
push
cld
mov
pop
or
adc
sub
iret
movsb
inc
sub
aam
add
push
insb
push
negb
add
out
cmp
imul
out
ljmp
ret
icebp
jb
and
test
push
jnp
addl
jmp
push
sub
icebp
push
mov
inc
icebp
ret
fadds
divb
jl
outsb
lods
inc
leave
std
fs
inc
pop
mov
pop
xlat
dec
push
mov
aas
test
and
sub
add
outsb
pop
adc
out
sahf
leave
mov
pop
out
mov
icebp
push
ja
fwait
cmp
sbb
sbb
push
mov
fisttpl
mov
adc
arpl
dec
fidivs
dec
push
lcall
push
subl
xor
ljmp
mov
je
gs
fnsave
push
cmp
movsb
fildll
into
lahf
cmpsb
filds
popa
es
push
mov
push
mov
jbe
push
xchg
adc
inc
mov
or
add
mov
out
orl
push
xor
out
lods
sub
std
lds
add
repnz
push
pop
fiadds
shl
jnp
sar
xchg
jecxz
sub
cmp
push
into
inc
mov
push
cmc
nop
mov
fidivrs
add
rcrl
push
in
jle
movsl
mov
xor
cpuid
add
sub
mov
mov
pop
push
mov
shrl
pop
pop
add
jbe
inc
xor
push
dec
dec
mov
mov
jbe
sub
cli
pop
mov
mov
push
xor
xchg
mov
nop
in
shll
pop
in
pop
out
andb
mov
fcmovnbe
jne
jns
inc
jno
nop
fmull
mulb
mov
push
cwtl
jb
aad
pushf
sub
in
insl
aam
loop
jbe
add
sysret
addl
fisubl
shl
mov
subl
adc
test
jbe
jle
push
xor
add
xor
sbb
and
loop
js
gs
int3
jbe
jbe
lea
push
aaa
inc
cmp
jl
adc
xor
jae
cltd
rolb
cmpsl
dec
movsl
and
dec
inc
or
les
sbb
test
push
fisubrl
popl
pop
mov
ficoml
xor
pop
in
addr16
iret
pop
addr16
or
mov
aad
lds
dec
and
push
mov
xchg
test
mov
jns
jle
xchg
es
xchg
sbb
loope
sub
cmpsb
cmc
dec
std
loope
cltd
ss
lret
and
lods
and
cwtl
stc
and
sbb
xor
sub
lock
xlat
sbb
fsubrs
xchg
ljmp
divl
les
adc
jecxz
stc
or
add
lods
sub
mov
inc
push
lret
testl
lret
xchg
mov
push
pop
rcr
repnz
stc
stos
fsts
ss
mov
jmp
and
repnz
jge
jns
sub
loop
adc
pop
dec
test
into
push
mov
mov
repnz
in
and
xchg
xchg
stos
andl
cmc
shrl
jbe
lea
fcmove
inc
push
xchg
daa
or
cld
mov
call
lds
loopne
lret
fsubrs
mov
dec
gs
or
sub
sbb
fwait
cld
jg
add
dec
loop
jae
push
or
nop
dec
mov
orl
inc
adc
test
imul
shlb
cmp
jl
and
xor
movsb
mov
and
mul
jge
inc
pop
pop
mov
adc
inc
jne
push
leave
mov
pop
test
lods
push
dec
test
jge
inc
cmpsl
mov
mov
sbb
lahf
push
push
js
mov
cwtl
out
or
in
pop
mov
mov
inc
cmp
adc
cmp
xor
pushf
push
xor
in
clc
fmull
pop
imul
jns
js
mov
jmp
pop
pop
subl
lret
aas
lret
loope
add
mov
jmp
imul
and
sub
mov
cld
bound
add
jbe
cmp
and
int
inc
pop
movsb
div
push
and
movsb
in
push
or
add
xor
mov
push
gs
sub
jecxz
inc
jp
sbb
push
and
push
add
dec
lods
push
jns
int3
outsl
lahf
int3
out
sti
inc
push
in
mov
ljmp
pop
add
movsb
adc
ficoml
sbb
xchg
jb
pop
in
pop
ret
int
xchg
fdivr
in
mov
and
push
pusha
fwait
mov
adc
lods
dec
aaa
adc
leave
loopne
xchg
inc
xorl
test
adc
cmpsl
jmp
scas
lods
je
sub
xor
clc
push
adc
imul
xor
mov
pop
mov
mov
add
adc
pusha
out
or
stos
xchg
ja
es
jo
fstpl
test
sub
push
jo
mov
cs
movsl
mov
test
outsl
inc
jl
mov
inc
inc
hlt
cmc
adc
test
jbe
push
xor
fistl
rcrl
inc
xchg
or
bound
xchg
outsb
jle
int
or
jbe,pt
add
imul
mov
pop
push
je
sbb
push
enter
repz
insb
inc
lahf
dec
xor
push
sbb
adc
ret
sbb
pop
push
inc
xor
fistl
sub
jl
jo
shrb
scas
pop
imul
insl
pushw
push
inc
enter
or
pop
mov
mov
outsb
fsubs
loopne
ss
sub
test
sti
faddl
lock
pop
lods
lahf
mov
into
xchg
mov
add
mov
sarl
pop
insl
fldenv
shl
mov
dec
int
lods
push
rcll
or
cmpsb
cmc
sub
scas
cwtl
xchg
jmp
push
or
fsts
xorb
dec
fsubl
iret
push
movsl
and
adc
dec
sub
sahf
mov
fs
fiadds
add
push
pop
or
xor
sub
cmp
xor
out
lahf
xchg
mov
xchg
inc
fildl
fxch
sub
dec
xor
out
adc
lret
sub
es
ja
pop
xchg
pushf
pop
pop
nop
ljmp
es
fbstp
push
dec
cmpsb
fcmove
out
adc
insl
adc
insl
flds
push
add
push
add
add
negl
je
test
das
lret
popf
stos
add
sub
std
cmp
push
fdivrs
mov
mov
push
inc
push
mov
mov
fs
dec
jno
dec
cmpl
push
sar
cli
std
imul
aaa
aad
inc
add
repnz
dec
xor
fnstsw
fldenv
jnp
leave
mov
in
pusha
call
push
pop
fwait
lods
iret
jl
mov
adc
fwait
mov
add
stc
fiaddl
sbbb
and
repz
sub
sbb
add
push
cmp
inc
cmp
dec
sub
mov
adc
and
cs
fisttpll
pop
xchg
adc
div
ljmp
pop
addr16
mov
xor
jecxz
xor
int
outsl
sbb
shrl
popa
xchg
bound
mov
inc
jae
push
imul
ja
mov
dec
sub
or
jne
push
push
lcall
pusha
shlb
xchg
mov
popf
add
insl
mov
pop
sub
movsb
push
and
inc
dec
call
jnp
mov
add
lret
mov
enter
pop
mov
shlb
ds
push
pop
ds
lcall
mov
jp
adc
int3
jl
dec
loope
scas
test
jbe
pusha
es
xchg
into
leave
ficompl
add
mov
icebp
sub
pop
sub
testl
jo
xchg
add
dec
inc
inc
scas
arpl
data16
icebp
and
add
std
imul
mov
fdivs
lahf
fs
cmp
sub
into
testl
addr16
mov
or
and
xor
inc
jg
fwait
fwait
test
dec
inc
cli
push
push
in
out
clc
mov
pop
cwtl
cmp
pushf
push
mov
mov
mov
out
dec
xchg
lret
jl
movsb
in
js
jmp
icebp
out
xchg
imul
lea
jnp
xor
add
inc
mov
lods
mov
test
cmp
pushf
lret
add
outsl
sbb
mov
mov
stos
call
jno
cmp
cmc
mov
aaa
pop
mov
in
dec
imul
inc
xchg
mov
jle
andl
adc
inc
inc
pop
jecxz
xchg
repz
stos
pusha
cmp
jne
mov
inc
pusha
data16
in
rclb
aam
sbb
jmp
or
loopne
notl
dec
roll
hlt
push
mov
xchg
clc
pop
or
sti
jmp
leave
out
loope
or
push
movb
outsb
roll
dec
iret
or
mov
jne
cmp
aaa
dec
stos
cmp
inc
adc
nop
mov
pop
repnz
in
and
aaa
fnsave
test
adc
cmp
pop
fldenv
or
in
shlb
and
mov
imul
icebp
jmp
imul
sbb
enter
fcmovnb
scas
lahf
mov
mov
ja
xor
xor
or
out
adc
sarl
lret
adc
loope
stos
or
les
ret
test
cwtl
mov
cmp
inc
pop
movsb
sub
push
hlt
cmp
xor
or
sub
or
mov
out
mov
ret
cld
adc
jmp
push
aad
and
dec
loop
dec
adc
shll
outsl
movsl
aad
bound
pop
push
sbb
push
jnp
mov
cmc
test
mov
push
pop
in
pop
cs
xchg
mov
cmp
lods
mov
das
fwait
xchg
mov
or
lea
push
scas
ficompl
aad
mov
movsl
adc
mov
lods
jnp
xor
das
adc
dec
pop
lret
jl
pop
cmpl
sub
xlat
or
pop
mov
pop
roll
add
cmp
push
adc
sub
cli
jo
fucomip
loopne
mov
pop
fidivrs
and
inc
add
addr16
cmp
inc
les
mov
mov
cmp
iret
inc
add
push
mov
loope
lahf
adc
push
test
aaa
or
test
jbe
setg
insb
test
pop
sub
in
insb
add
pop
mov
shr
cmp
jmp
aam
sti
ss
mov
imul
js
fbld
xchg
inc
fwait
nop
ffree
adc
in
pop
jle
xadd
xor
lock
adc
dec
inc
loope
mov
inc
xchg
xchg
add
imul
mov
scas
aaa
dec
cld
xchg
in
ficoml
adc
or
negl
sub
add
or
insl
dec
inc
fdivp
test
sub
sub
gs
xchg
fistl
out
push
mov
xor
lret
fsubs
leave
xchg
cmc
cmp
dec
jp
ret
inc
or
pop
mov
pop
xchg
dec
mov
jge
jle
das
mov
fidivrs
push
fcompl
out
js
mov
xchg
pop
cmp
push
js
sub
xchg
push
lret
jge
shl
sti
test
leave
jnp
xchg
stc
in
add
sub
sbb
ljmp
mov
shl
test
add
fcmovne
xorb
shl
adc
mov
mov
jbe
je
mov
inc
pop
mov
sahf
not
repnz
jecxz
addr16
pop
push
mov
cmpb
lret
in
in
xchg
mov
mov
adc
gs
sbb
pop
fsubl
ja
pop
fnstsw
fmul
mov
add
cld
and
jmp
cmp
mov
rcrl
mov
stos
pop
imul
xor
fcmovb
mov
ja
sti
mov
mov
insb
out
mov
out
rol
mov
xchg
mov
sub
mov
mov
mov
push
outsl
into
data16
cltd
mov
xorb
popf
add
jmp
mov
arpl
mov
cmpsl
or
add
inc
mov
cmp
mov
cwtl
ret
enter
es
pop
lahf
jae
inc
or
aad
fisttps
adc
sub
mov
jg
es
push
mov
int3
decl
sti
mov
jmp
leave
mov
mov
in
push
adc
popf
popf
orl
jmp
xchg
push
jne
cmovno
pop
push
pop
popa
imulb
leave
test
out
cmc
and
lock
int3
insb
lret
cltd
cld
xor
xor
loopne
ror
xchg
pop
dec
add
xchg
ret
loopne
fstpl
call
pop
fimull
adc
mov
in
cmpsl
and
jae
ljmp
int3
jno
sbbl
loope
add
shr
scas
sti
insl
lods
outsl
movsb
pop
pop
and
xchg
test
sbb
nop
and
xchg
or
xchg
dec
in
movsb
imul
mov
lret
les
loop
mov
pop
xor
adc
dec
add
mov
jg
cmpl
push
mov
pop
stos
mov
dec
pushf
loopne
shlb
popf
fidivrs
frstor
cmovg
mul
sub
ja
jae
push
scas
ljmp
dec
mov
mov
aad
mov
iret
mov
or
push
sbb
fs
push
push
mov
push
stos
jmp
jae
ror
push
leave
fimuls
fwait
jbe
push
rcll
mov
loopne
jmp
jge
dec
cmpsb
push
cmp
adc
xchg
cmp
jle
fwait
cmp
aad
mov
dec
cmpsl
mov
jnp
adc
add
arpl
cmpl
mov
push
inc
xor
les
or
inc
adc
sbb
fisttpl
lea
loop
dec
jecxz
pop
adc
mov
pop
inc
mov
mov
inc
out
or
testl
cld
sbb
mov
dec
lock
sub
stc
inc
sbb
dec
orb
scas
std
xlat
xchg
into
test
orl
add
popa
stc
loop
cmp
insb
jne
jo
lcall
out
icebp
pop
in
push
cmp
fsubrs
arpl
jb
mov
xchg
adc
push
pop
pusha
add
test
mov
stos
or
jecxz
es
int3
dec
mov
insb
sbb
popf
sbb
mov
enter
xchg
push
je
mov
xchg
cld
mov
hlt
pushl
dec
cld
mov
fdivr
js
cwtl
out
repz
pop
dec
jb
rorb
out
ljmp
fdiv
sub
pop
jmp
cmp
cwtl
pop
fcompl
in
mov
aam
sub
pop
enter
aam
btl
add
mov
lret
mov
mov
and
clc
sbb
mov
jp
mull
xchg
push
es
inc
and
cmc
rclb
and
jl
fiaddl
pop
or
ret
jno
popa
cmpsl
dec
cmpsl
adc
bound
jle
ja
pop
imul
icebp
fs
test
scas
mov
popf
pop
xor
ja
and
mov
adc
dec
mov
ds
daa
rcrb
cld
fnstsw
mov
xchg
inc
out
push
orb
out
pusha
std
leave
stos
jne
aam
scas
xchg
cmpl
push
stc
das
cmp
push
and
mov
bound
adc
in
cmp
cmpsb
cmp
subl
dec
pop
rcr
js
cmp
ss
pop
div
rclb
sbb
mov
lret
ja
cmp
mov
rolb
dec
fwait
push
mov
call
fisttps
popa
jp
jne
shrb
sbb
inc
popf
fldt
cmc
lds
jnp
flds
add
push
adc
sub
lock
je
ja
test
inc
cli
icebp
nop
push
push
mov
adc
scas
sbb
aas
shlb
arpl
repnz
out
out
ja
push
push
mov
test
pusha
fwait
rorl
es
add
stos
testb
lods
inc
iret
int3
sbb
into
ss
cwtl
mov
add
mov
out
and
lods
add
or
fdivrp
aas
mov
scas
pop
mov
xor
or
jle
pop
or
or
jno
sti
fisttps
idivb
add
xchg
mov
mov
mov
andb
jnp
dec
aad
inc
lcall
ficoml
rep
cmp
and
les
rolb
ljmp
inc
dec
popf
xchg
test
mov
dec
cmp
push
pop
dec
xchg
test
mov
mov
sti
mov
xchg
insl
in
jne
and
xor
push
mov
sbb
dec
das
out
test
pop
pop
cmp
add
sbbl
aad
sbb
xor
cltd
icebp
push
ret
xor
jne
cmc
aas
mov
mov
mov
jne
pop
sbb
cmp
and
pop
lea
scas
test
loopne
dec
int
int
in
cmpsl
test
dec
xchg
cmp
scas
inc
int
inc
jo
fcmovnbe
mov
faddp
daa
cltd
fisttpl
std
notb
xchg
pusha
xchg
push
and
xchg
mov
rorb
sub
out
aad
mov
mov
sbbl
fsubs
jno
ds
pop
repz
fisttpll
das
rorb
iret
push
test
clc
ds
pop
int3
addb
fldt
leave
push
lds
loopne
jno
cld
xchg
ret
adc
cmp
test
push
js
hlt
es
stos
xchg
xchg
lret
fsubrs
pop
add
pop
mov
es
mov
push
fcmovnu
test
sub
int3
popa
leave
pop
frstor
dec
mov
es
mov
ljmp
cmp
ss
sahf
dec
jb
pop
mov
in
in
mov
movsl
js
aaa
aaa
enter
mov
add
sub
mov
orl
xor
mov
sbb
jmp
inc
jge
cmp
stos
mov
flds
arpl
int3
sub
arpl
or
push
push
add
scas
je
imul
xor
push
mov
sbb
pushf
or
or
lret
int
jns
cmp
and
push
fs
cmp
inc
push
das
in
add
push
push
bound
imul
cmp
xor
cmpsb
push
push
and
pop
scas
addr16
add
jge
sahf
xlat
jge
cmc
mov
pop
push
dec
xchg
in
sbb
mov
sti
adc
add
outsl
add
mov
pop
and
enter
lods
dec
out
leave
xor
xchg
push
pop
dec
scas
int
out
fsubl
cs
mov
rolb
pop
icebp
and
or
popa
push
repnz
js,pt
wbinvd
xor
in
out
inc
ret
mov
movntq
cmp
sbb
out
mov
cmp
pop
xchg
repz
ljmp
loop
out
mov
adc
dec
dec
inc
jb
push
sbb
aad
or
mov
push
add
mov
inc
loopne
rcll
fisubrs
sub
push
adc
add
movsl
popf
cmc
cmp
lret
sbb
mov
push
mov
sbb
dec
aad
pop
into
sbb
lock
test
and
addr16
subl
cmp
pop
pop
aad
iret
xor
adc
xor
insb
aaa
mov
jl
push
ja
js
fdivl
mov
loope
call
rorl
into
adc
arpl
jge
cmpsl
and
mov
js
sub
fadds
mov
cmp
insl
and
add
sub
add
push
fwait
rcll
cltd
cmc
mov
adc
icebp
out
xchg
jno
sbb
inc
test
aas
ss
or
enter
sub
jl
repz
jbe
inc
mov
aad
in
jns
dec
push
jecxz
dec
int
rorl
flds
mov
sub
and
shld
push
imul
dec
popf
cmp
enter
sbb
inc
sbb
scas
pop
into
into
loop
sub
rorb
int3
cltd
push
fiadds
adc
dec
test
lock
xchg
xor
mov
sbb
mov
add
popa
adc
xor
clc
loop
inc
add
cmp
in
jp
dec
std
jmp
mov
jno
jle
xchg
lcallw
xlat
inc
test
insl
lret
xorl
or
push
and
jae
push
lods
cmp
decl
repnz
xor
cmpsl
andl
jmp
out
jl
xchg
and
xchg
lea
mov
fsts
loopne
dec
sbb
js
inc
test
inc
fstpl
sti
push
sub
and
ss
popf
inc
rol
popa
in
in
daa
xlat
adc
dec
popf
sbb
or
adc
xor
cmp
scas
pop
push
push
adc
sbb
rcrb
das
fisttpl
adc
dec
adc
jmp
cs
mov
mov
jne
fildll
iret
xor
cmp
or
mov
xchg
ret
shlb
pop
and
inc
icebp
aaa
adc
stc
leave
adc
push
or
sbb
incb
test
ljmp
sub
enter
xchg
add
adc
iret
lret
adcl
imull
add
pop
nop
leave
ss
in
fwait
mov
ficomps
pop
add
mov
andb
and
dec
inc
jb
dec
mov
fidivs
pop
sub
ds
out
adc
cmp
add
adc
cmp
jmp
mov
test
imul
sbb
push
mov
sub
outsl
mov
dec
mov
or
lock
sub
es
inc
xchg
xor
mov
fistpll
cwtl
and
xchg
fwait
loop
enter
jecxz
mov
data16
pop
std
dec
xchg
fisttpl
add
xor
push
mov
cld
popa
addr16
sub
test
and
ret
pop
sti
sub
pop
dec
pop
add
movsl
adc
dec
subl
mov
jno
sub
movsl
push
push
mov
mov
imul
inc
and
in
stc
dec
push
scas
call
sbb
loop
xor
jge
cmp
mov
repnz
mov
aam
inc
pop
lods
iret
dec
punpckldq
push
movhps
or
xchg
cmp
xor
fwait
and
jle
cmp
fisubrs
loope
in
cmpsb
sub
jg
movsl
int
sahf
xor
je
movb
call
sub
imul
add
xchg
sarb
fcompl
sahf
inc
xor
push
add
int3
aad
push
push
inc
adc
add
xor
push
pushf
lret
orl
mov
mov
inc
push
repnz
add
jmp
repnz
stos
les
std
push
add
int3
inc
adc
jp
adc
mov
pop
loopne
jl
shl
das
and
mov
cmp
sarb
addr16
stos
jge
mov
test
push
dec
aas
or
or
sbb
xor
sbb
jl
hlt
ss
dec
loope
jmp
dec
dec
jb
cwtl
mov
mov
dec
inc
mov
push
test
mov
sar
popf
jbe
imul
sahf
mov
xor
bound
fs
inc
push
sahf
loopne
mov
in
inc
mov
jge
loop
in
pop
or
sub
push
mov
decl
add
imul
sub
loopne
cwtl
jle
sbb
daa
jmp
xor
pop
enter
movsb
fimuls
xchg
mov
sti
test
inc
mov
inc
test
sti
dec
lods
repz
dec
call
outsb
lret
sub
add
push
lods
and
add
cmp
outsl
mov
push
sbb
push
nop
mov
jg
cltd
add
lahf
enter
shll
pop
mov
sub
in
inc
jle
push
xchg
les
jne
loopne
daa
pop
push
dec
bound
cltd
movsl
fldcw
lahf
adc
int3
push
loope
test
adc
jg
mov
push
lds
ret
add
loopne
inc
lea
dec
loope
sub
js
mov
sub
adc
mov
mov
sub
xor
jl
icebp
ss
mov
call
leave
or
push
stos
shrb
xchg
jg
jb
xor
mov
shll
iret
mov
enter
iret
int3
mov
mov
shll
mov
cld
pushf
clc
roll
sbbb
xor
sti
xor
inc
jmp
mov
cltd
mov
mov
loop
das
gs
xor
pop
test
lock
in
enter
in
ret
jl
and
xchg
mov
stos
jne
lcall
cs
es
notb
testl
inc
pop
cmp
loop
or
or
movsb
gs
xor
xor
aad
jne
in
fnstsw
mov
cmp
daa
lock
rcll
insb
push
xchg
test
mov
sub
or
cmp
adc
lea
and
sbb
std
lods
data16
push
push
sub
adc
aad
mov
jae
mov
roll
add
pushf
aaa
or
jp
cmpl
dec
cmc
dec
pop
shll
mov
mov
fldl
arpl
and
mov
pop
lret
call
negb
popf
clc
lcall
mov
lods
clc
push
jo
repz
into
imul
inc
and
lods
add
scas
jae
mov
push
sub
iret
sub
aas
movsb
push
dec
es
pop
pop
mov
sub
jae
jo
lret
add
sbb
xchg
enter
js
dec
pusha
pop
out
jg
insl
pusha
movsl
test
dec
mov
ss
inc
pop
in
jecxz
lea
scas
icebp
pop
cltd
xchg
xor
mov
pop
push
les
enter
insb
inc
stos
sub
jmp
dec
in
stos
repz
mov
push
cmp
aam
fcomps
nop
sahf
lods
imul
sbb
add
push
adc
lods
cmpl
dec
mov
push
popf
movsl
das
add
imul
mov
js
cltd
stos
jno
shlb
xor
xchg
mov
sub
xor
daa
sbb
enter
xchg
daa
rcrl
getsec
sub
iret
pop
cld
mov
push
pop
repz
test
pop
leave
dec
fidivs
xchg
jl
frstor
fisttps
push
loope
lret
rcrb
pop
cmp
clc
inc
dec
idivl
shl
pop
mov
cwtl
jge
aas
adc
and
shll
out
inc
jo
cmp
mov
pop
ss
push
dec
mov
stc
aaa
push
hlt
mov
mov
mov
popl
out
test
rclb
imul
jmp
clc
ret
js
mov
loop
xor
mov
mov
push
pop
jb
cmp
push
lahf
loope
rolb
inc
fldcw
stc
add
movsl
lret
sub
mov
and
lea
sbb
les
dec
jbe
sub
sbb
test
sarb
xor
xor
fistpll
adc
mov
xor
or
movsl
inc
loope
int
pusha
cld
into
xchg
mov
mov
cmc
lock
sti
xchg
dec
and
push
hlt
add
xor
test
mov
xchg
out
add
adc
mov
or
mov
fidivs
mov
jb
jecxz
cmc
shlb
aas
mov
push
push
inc
lods
ficomps
push
daa
sub
mov
mov
dec
mov
add
lods
out
scas
subb
mov
fimuls
jnp
cmc
mov
jnp
adc
not
aam
or
daa
rolb
les
pop
xor
jecxz
jp
inc
js
and
movsl
xlat
cmp
sbb
mov
inc
inc
dec
test
jns
test
mov
push
cmp
sub
ds
cmp
xchg
dec
dec
jmp
push
push
mov
sarl
cmp
xchg
mov
cmp
test
lds
mov
testl
mov
arpl
mov
push
test
cli
or
or
cmp
mov
pop
pop
cmp
enter
jmp
adc
xchg
dec
pop
shrb
sub
jge
ljmp
popa
adc
clc
movsl
repnz
cs
inc
xchg
pop
cmpsl
pop
fmul
jae
push
andl
imul
jo,pn
inc
cmpl
dec
cs
popa
push
into
lods
cmpsl
mov
int3
mov
imull
bound
inc
outsl
sbb
jne
add
xchg
testb
mov
or
in
imulb
flds
sub
mov
ret
mov
notl
gs
sbb
cltd
pop
xor
push
mov
das
jmp
fsubrs
dec
adc
jg
mov
scas
mov
push
mov
aaa
xor
call
lret
cmp
flds
es
and
in
in
cli
sbb
jge
mov
push
stos
fsts
cli
cmp
jecxz
pop
mov
lea
mov
aas
lahf
pop
dec
xor
mov
movsb
mov
clc
add
sbbl
flds
push
int
sbb
int
mov
sti
pop
xchg
dec
dec
out
or
jle
hlt
jg
inc
mov
jns
sub
sub
dec
sub
test
loopne
mov
clc
dec
sub
jnp
rclb
fwait
mov
jmp
cmp
pop
lods
cmc
inc
testl
rorl
addr16
cmp
pop
fisttps
enter
xlat
imul
sub
je
scas
test
ja
mov
xor
add
pop
dec
inc
cwtl
rorl
movsl
aas
or
mov
orb
inc
lock
shrl
cmp
loope
in
imul
and
sbb
sbb
inc
pop
dec
rcll
inc
fisubrl
adc
lea
jne
pop
cltd
and
xchg
rolb
in
add
push
cmp
outsl
xchg
outsl
add
add
out
cmp
lret
in
xor
insb
arpl
mov
or
hlt
jmp
or
sahf
pop
or
insb
adc
and
push
test
out
adc
cmp
pop
loop
rcrb
jmp
out
jmp
xor
cmp
aad
mov
out
jmp
jae
and
mov
andl
mov
jmp
pop
inc
xchg
mov
sbb
add
xor
mov
mov
adc
push
sub
stos
mov
pop
sarb
sar
in
imul
push
rol
addb
fldenv
scas
cwtl
lret
aam
adc
js
icebp
adcl
lahf
or
pop
xchg
enter
or
into
pop
lods
jb
mov
insb
cltd
cli
fwait
lcall
insl
inc
mov
push
xchg
cmpsb
js
xor
js
xor
arpl
enter
sub
xor
std
repnz
rcr
xor
sbb
add
fs
dec
mov
adc
mov
sbb
adc
xchg
std
mov
ja
lahf
aas
pop
sbb
cld
add
and
xor
sub
jae
aam
inc
fnstsw
test
call
mov
jne
add
fs
dec
loope
or
imulb
inc
cmp
je
repz
aam
add
fadds
mov
arpl
push
push
shr
dec
xchg
pop
insl
pop
jb
das
cmpsl
and
fimuls
lods
mov
js
inc
fidivs
dec
jnp
mov
es
lret
lret
ret
test
out
cmc
cmpl
scas
outsl
dec
xchg
mov
pop
cmp
pusha
jl
loope
mov
test
adc
subb
adc
inc
xorl
in
out
or
mov
fbstp
adc
mov
lret
subl
push
mov
aas
push
cmp
or
ljmp
jp
xchg
xor
into
pusha
jl
jnp
mov
fwait
and
into
aad
ds
data16
xlat
mov
stos
sbb
hlt
ljmp
inc
adc
cmp
xchg
sarb
arpl
jb
loopne
mov
popf
inc
mov
popa
mov
jnp
stos
pop
incb
shlb
lods
push
roll
xchg
orl
into
pushf
ljmp
mov
push
xchg
data16
arpl
arpl
mov
bound
aaa
xchg
movsb
push
fnclex
shl
nop
stos
int
xchg
jp
adc
repnz
sub
loope
xchg
mov
in
sarb
inc
loope
out
inc
arpl
sti
push
cmpsb
xor
fldl
adc
stos
ret
pop
andl
pop
push
xor
or
push
repnz
mov
outsl
aaa
xchg
mov
movsl
popa
jle
fdivrl
aas
daa
cmp
dec
add
mov
xchg
int
push
mov
push
jl
xor
das
cmpsl
adc
xor
xor
push
push
mov
adc
imul
notrack
insb
jmp
xor
inc
pop
lret
out
add
jnp
stc
repz
sbb
lods
sub
inc
fisttpll
sub
xor
add
sub
popa
push
jmp
jmp
inc
mov
in
sub
or
ret
mov
or
jl
movsl
mov
scas
adc
inc
xor
je
inc
enter
lret
cli
jae
stos
mov
xchg
inc
decl
sbb
add
push
cmp
mov
add
xchg
push
fwait
dec
out
ret
or
sbb
sbb
jl
cmp
stos
in
ret
and
mov
repz
mov
sub
lock
out
pop
std
mov
scas
mov
sbb
push
jb
xchg
ja
mov
lods
ret
subb
jmp
repz
jge
imul
insl
cmp
adc
repnz
push
jl
cmp
in
or
cld
add
pop
in
ds
adcb
sbb
loope
sub
sar
cmp
test
pop
lock
aam
jns
pop
mov
xor
aam
mov
test
fidivl
xchg
inc
sub
lods
fists
mov
mov
inc
idiv
adc
xor
int
ds
and
adc
test
nop
adc
jae
or
mov
mov
test
mov
cs
or
movsl
sbb
fistl
mov
push
insb
and
daa
lds
mov
mov
call
cmpb
xchg
inc
jge
and
pop
mov
test
mov
jno
mov
lahf
xchg
inc
and
add
addl
sbb
out
lret
dec
iret
mov
repz
data16
push
das
mov
sbb
je
js
roll
mov
xchg
lods
test
cmpsb
rcrl
pop
push
sbb
das
sbb
or
and
push
mul
xor
xchg
xchg
lret
mov
sete
pop
jecxz
fcomps
xor
lret
push
test
es
lea
sar
xor
push
aad
ljmp
dec
push
sbb
rol
pop
es
ja
mov
test
sub
aas
push
lret
xor
out
cmp
inc
adc
movsb
fdivrl
jge
inc
mov
out
mov
or
aas
call
fwait
sbb
cs
or
cmp
dec
test
mov
add
cmp
repz
lret
lea
pop
test
inc
inc
insl
xchg
and
aam
jno
dec
int3
push
adc
lahf
inc
dec
mov
cmp
mov
pop
daa
add
dec
push
ja
out
xchg
inc
add
out
orb
pop
pop
mov
sbbl
xchg
stos
mov
pop
es
sbb
mov
arpl
xchg
cli
jecxz
mov
mov
mov
mov
leave
shrl
mov
adc
lods
enter
and
addl
pushf
or
test
sbbb
daa
repz
xor
mov
cltd
pop
xchg
or
mov
je
nop
push
cmp
xor
testl
adc
out
fldt
sti
mov
test
mov
jecxz
es
inc
xchg
jecxz
xchg
adc
enter
test
outsb
in
jmp
mov
hlt
push
or
push
test
sbb
insb
aaa
cmp
mov
jl
out
negb
xor
and
or
fdivl
bound
fwait
or
add
test
call
mov
inc
pop
dec
and
addr16
mov
push
ljmp
int
scas
push
test
push
dec
adc
mov
cltd
jne
int3
mov
lret
insl
or
mov
arpl
ret
mov
imul
int3
xchg
insl
push
jmp
pop
rcrl
ror
sub
xchg
cmpsl
pop
fdivrs
jnp
cmp
add
sbb
sbb
gs
shrb
in
jecxz
mov
cmpsb
jmp
push
adc
mov
sub
pop
shll
jl
inc
mov
adc
rorb
mov
cmp
lret
and
test
call
out
push
cld
fcomps
push
mov
cmpsb
ffreep
aam
mov
push
into
clc
jle
nop
repz
jge
test
cli
cmp
inc
mov
leave
pop
addr16
sbb
jo
sbb
cltd
jle
push
cmpsl
leave
loope
lock
cmc
jle
xchg
lret
mov
fisubrl
and
repz
std
pop
mov
repnz
mov
popa
jne
shll
stc
addr16
rorb
inc
mov
outsl
stos
in
dec
aaa
xlat
inc
idivl
outsl
je
or
dec
adc
cmpsl
pop
adc
lods
sub
mov
mov
idivb
xchg
jl
jl
and
cli
scas
cmpsb
lcall
or
mov
xlat
inc
xchg
rcll
sub
and
push
mov
movsl
negb
addb
push
cmpsb
xor
int
xchg
mov
adc
clc
mov
inc
arpl
mov
and
aam
jnp
stos
mov
inc
insb
sub
out
sbb
test
or
ret
push
add
jbe
pop
mov
jb
and
repz
sti
stc
add
cltd
fnstcw
and
lret
addr16
stc
inc
xorb
and
mov
arpl
sbb
sbb
xor
pminub
icebp
paddd
jmp
mov
fwait
mov
loopne
sarb
jnp
inc
mov
cmp
inc
xor
repnz
nop
jae
xchg
hlt
enter
aad
jmp
shrb
push
jno
es
into
das
xchg
pop
dec
dec
pop
aas
fwait
jne
lret
dec
sub
fbstp
dec
mov
shlb
test
scas
int3
dec
pushf
out
xchg
sarb
movsb
sbb
mov
pop
jne
fbstp
stos
aad
rcr
cs
fnsave
movsb
pop
mov
sub
jae
sbb
out
inc
inc
out
insb
adc
repnz
xchg
aaa
push
push
mov
push
outsl
fadds
sbb
insl
sahf
ret
or
lret
popf
jbe
in
pop
mov
jb
subl
test
or
imul
mov
test
icebp
addb
inc
add
sub
sbb
xor
xor
lods
or
repnz
mov
mov
cli
inc
mov
int3
cmp
stos
nop
xchg
dec
dec
lods
add
adc
popf
mov
lds
mov
pop
adc
shr
clc
call
and
mov
pop
nop
dec
xchg
das
or
add
cltd
test
test
mov
outsl
jl
cmpsl
in
hlt
dec
adc
fsubrl
mov
mov
mov
outsl
enter
inc
nop
adc
mov
pop
pop
add
icebp
push
push
xchg
pop
aam
enter
xor
sti
out
pop
scas
gs
hlt
cs
inc
jp
xor
dec
jg
imul
cmp
add
movsb
mov
jno
mov
push
mov
pushf
jge
push
and
adc
pusha
cli
jg
mov
push
jl
and
dec
fcompp
adc
jecxz
fildll
xchg
xchg
ret
in
xchg
ror
mov
mov
adc
push
mov
dec
cmp
jnp
fiadds
push
int
outsb
xor
aad
es
sub
mov
test
imull
imul
inc
push
jb
add
mov
cmp
xor
sbb
cmp
jne
jne
pop
or
mov
dec
and
push
les
and
mov
scas
gs
xlat
mov
add
mov
outsb
jmp
int
lea
mov
adc
inc
mov
cmp
lahf
sbb
jns
xor
push
leave
cli
in
mov
iret
cmp
pop
pushl
sub
shll
popa
addb
sub
push
jp
inc
imul
xchg
xchg
fdivrl
xor
sbb
popl
mov
test
iret
outsb
lods
pop
and
add
xchg
sbb
outsb
mul
xchg
sbb
lods
sbb
xchg
dec
outsb
add
xchg
mov
dec
fidivrs
xchg
inc
fsubrs
cli
out
shr
mov
inc
stc
fdivrl
fsubp
and
popa
mov
or
pop
mov
in
sub
sti
popa
and
lods
lea
inc
and
dec
pop
adc
test
sbb
mov
stos
fwait
dec
cmpsl
fldcw
pop
jg
sarb
pop
data16
mov
jnp
lcall
adc
je
cltd
push
xor
dec
mov
out
cs
imul
out
jnp
inc
dec
pop
adc
pop
push
adc
xchg
add
add
in
jo
cmp
adc
and
out
or
fcmovnbe
call
lea
mov
imul
add
call
jb
sub
ss
fcmovbe
add
or
jae
pop
cld
aad
popa
sti
lds
push
fcom
or
mov
sbb
pop
inc
ja
pop
sbb
mov
gs
repnz
in
clc
add
movsl
mov
test
pop
in
stc
mov
rcl
jge
xchg
aam
out
or
leave
jno
mov
rcr
jge
loopne
ret
hlt
mov
loop
aad
xchg
fimuls
mov
cmp
pusha
repz
sub
sub
dec
jle
sbbb
and
dec
and
mov
sub
lahf
or
adc
push
lcall
aas
out
mov
sbb
clc
pop
add
test
ja
movsb
pop
cmp
mov
jbe
or
jp
mov
pop
mov
adc
jge
test
insb
sub
mov
loope
roll
mov
sub
push
xor
into
repnz
cmp
and
xchg
cmpsb
movl
or
xchg
pop
push
mov
mov
jge
sti
cmp
add
sub
mov
sub
test
sub
xor
jge
stos
push
ror
into
je
jmp
or
ja
fistpl
clc
push
pop
int
mov
scas
pop
mov
and
mov
test
test
push
push
aam
cmpb
fdivl
ljmp
push
les
loope
stos
fbld
dec
sbb
xchg
push
mov
sarl
hlt
pushl
adc
dec
movl
testb
inc
stos
inc
imul
int
test
pop
push
pusha
and
push
xchg
insl
ja
loope
and
loopne
inc
push
add
sub
out
adc
push
jo
dec
movsl
cwtl
xor
pop
push
adc
and
push
mov
add
cmc
and
mov
mov
repz
lcall
pop
mov
scas
and
inc
add
and
test
out
fnstenv
xchg
scas
sti
ss
into
pop
jo
add
dec
popf
or
lcall
in
daa
push
dec
cmc
arpl
adc
testl
stos
mov
jns
mov
arpl
or
mov
clc
or
adc
mov
test
adc
aad
cli
or
scas
or
daa
out
push
jb
xchg
movb
fstp
popf
rcll
sbb
ljmp
push
jmp
jno
pop
jmp
push
add
mov
cmp
sar
push
adc
lret
insl
push
imull
lahf
dec
aaa
xchg
push
sbb
and
xor
sub
jp
sub
imul
sbb
fdivrs
test
sub
sub
mov
loopne
xchg
pop
sub
insb
mov
movsb
ficomps
mov
xchg
or
es
add
xchg
stos
push
ds
movl
jno
cmp
push
push
or
sti
xchg
pop
jle
add
out
clc
xor
popa
add
inc
fwait
and
daa
jb
aaa
aaa
into
inc
aam
mov
test
js
sub
movl
mov
idivl
jns
out
xor
rolb
inc
mov
in
add
mov
divl
mov
aas
sub
insb
sahf
lret
adc
scas
movsb
lret
ljmp
push
movsb
call
dec
xchg
in
loopne
pushf
pop
aam
adc
call
lock
xor
cmpsb
cld
loopne
cltd
sbb
sub
lods
jns
and
popa
mov
shll
movsl
icebp
mov
imul
stos
cmpsb
xchg
aaa
test
jns
mov
dec
add
arpl
mov
xor
sbb
jnp
or
xchg
cmpsl
pusha
jo
and
sub
inc
inc
mov
jnp
lods
and
mov
scas
pop
fidivrl
sub
cmp
enter
cmp
mov
aas
enter
stos
mov
test
sub
mov
sub
fidivs
mov
test
add
fdivs
aad
xchg
cs
mov
imul
sbb
je
inc
jae
out
cmc
or
scas
xor
xchg
test
mov
addr16
push
icebp
bound
fbld
adc
sbb
jp
jo
notl
xchg
adc
dec
popa
jnp
jmp
imull
mov
in
and
fwait
inc
fildll
xchg
loopne
test
repz
push
jmp
sti
mov
jp
xchg
jo
xchg
ret
and
test
negl
mov
mov
xor
out
add
adc
fwait
jbe
cmpsl
mov
dec
addr16
mov
cwtl
mov
fists
lcall
iret
push
out
mov
leave
pop
jg
bound
mov
pusha
xchg
fildl
std
push
int3
mov
test
ljmp
movsl
jl
std
outsb
and
rorb
loope
nop
and
push
aam
adc
sahf
dec
xor
cmp
lods
add
jle
fnstenv
pop
out
imul
add
cmp
xlat
xor
xchg
mov
into
sahf
mov
jnp
pop
aad
push
mov
add
lcall
loopne
clc
cmc
orl
faddp
jg
or
jecxz
dec
stos
rcrb
insl
imul
mov
out
adc
pop
bound
mov
fsubrs
mov
sub
andb
daa
push
xchg
xor
push
shr
ds
cltd
mov
adcl
add
out
jg
fistpll
cmp
dec
xor
ds
inc
dec
unpckhps
cmp
jl
push
mov
mov
cld
insl
dec
rclb
jo
test
pop
xor
sbb
cltd
sbb
pop
fstpl
inc
adc
cmp
pop
jle
mov
jo
adc
je
mov
sub
inc
sbb
push
in
pop
insb
xchg
jg
rorl
pop
push
pop
sbb
repnz
inc
xchg
sahf
shll
xchg
mov
mov
pop
ljmp
push
adc
gs
daa
dec
xlat
pop
shll
test
dec
outsl
adc
fdivr
cltd
sahf
popa
push
loope
jno
mov
loope
push
mov
pop
shl
xchg
sub
inc
andb
mull
ljmp
insl
mov
stos
sub
add
cmp
xchg
pop
push
push
xor
and
jns
push
add
lret
inc
mov
sbb
jb
imul
cmp
lahf
pop
adc
adc
xor
aad
mov
xlat
mov
loopne
or
xchg
fsubrl
mov
stos
mov
dec
lahf
adc
loop
or
outsl
jae
lock
pop
jbe
pop
lcall
sarl
mov
data16
cmc
pop
pop
push
outsb
sub
test
push
and
push
or
mov
xor
pop
jecxz
int3
mov
add
pop
mov
jl
insb
xchg
dec
hlt
insb
mov
mov
subb
xor
shlb
lea
leave
and
repnz
push
add
int3
jge,pt
dec
and
fisttps
push
ret
push
xchg
jbe
inc
clc
jb
jb
das
inc
inc
cmc
push
stc
inc
cmc
xor
dec
icebp
sbb
mov
adc
divb
cs
jmp
mov
stos
outsl
fwait
or
jnp
je
insb
lock
fwait
outsl
lock
xchg
xchg
sahf
daa
stos
jbe
fwait
and
leave
xlat
adc
pop
mov
fcoms
mov
rol
addr16
sbbl
repz
jb
push
adc
dec
shrb
inc
lods
mov
scas
sahf
in
xlat
dec
fdiv
push
push
loopne
jno
mov
dec
cs
fwait
jno
popf
lds
lret
or
pop
sub
and
xorl
mov
jbe
aad
jecxz
push
hlt
xchg
push
xchg
dec
adc
cs
iret
lcall
push
jne
aas
mov
iret
inc
xchg
sub
push
mov
jb
lcall
sbb
iret
mov
lcall
xor
ljmp
push
mov
pop
push
dec
in
lock
dec
and
mov
int3
mov
pop
inc
lahf
ss
inc
xorl
push
push
dec
arpl
and
xor
lea
sub
into
ficomps
aas
sbb
mov
xchg
cmp
stc
popa
push
dec
mov
push
xchg
addr16
roll
cmpsl
dec
pushf
sahf
sub
andl
jno
int3
inc
push
mov
stos
sarl
das
dec
repz
lds
add
xor
insl
xor
jl
flds
inc
mov
adc
mov
or
cltd
adcl
push
out
outsb
ret
movsl
inc
pushf
xor
mov
push
xchg
mov
out
imul
sub
xor
and
mov
or
pop
cmp
test
push
scas
rdmsr
neg
cmp
test
aas
popf
dec
cmp
mov
jnp
add
addr16
out
pop
inc
sarb
xchg
mov
push
push
sbb
or
or
adc
adc
pop
rcll
push
inc
popl
call
and
inc
xor
jno
dec
add
adc
test
mov
add
repz
bound
sbb
and
sub
cmp
icebp
sbb
fwait
ja
jecxz
xchg
push
loopne
jmp
fisubl
xchg
testb
test
sub
loop
jnp
mov
repz
xor
mov
ficomps
sub
daa
minps
sbb
adc
lds
push
dec
lods
movsb
rcll
dec
sbb
std
shll
adc
or
bswap
sbb
push
leave
les
test
xor
mov
pushf
enter
and
inc
mov
cmpsb
mov
test
dec
xor
in
cmp
ja
mov
xchg
cs
scas
data16
mov
test
mov
not
popf
push
xchg
lea
xor
pop
jne
fcoms
mov
cmp
sub
cmp
inc
pop
enter
bound
div
test
xor
xchg
pop
jecxz
dec
ficoms
inc
das
xor
test
mov
ss
pop
dec
adc
inc
fwait
int
push
sbb
xlat
ret
jmp
aaa
popf
mov
dec
scas
lret
icebp
sub
adc
daa
scas
add
add
imul
add
add
add
and
add
mov
dec
jle
fstpl
cmpsb
sbb
std
sbb
fnstenv
dec
ror
dec
ljmp
rolb
jns
xor
std
adc
ss
xor
cmc
inc
mov
mov
cli
and
inc
fldcw
popf
inc
inc
and
sbb
das
push
outsl
add
xor
mov
cli
aaa
push
imul
mov
repz
push
xchg
lods
mov
xor
cmpsl
ja
sub
pop
inc
repnz
cmp
mov
out
sarb
dec
hlt
nop
cwtl
or
fisubrl
jno
mov
ret
fadd
jmp
inc
push
sbb
test
mov
pop
sahf
or
push
movsb
ret
dec
and
sbb
pusha
pop
jo
movsl
rol
aas
adc
mov
or
jo
lds
fsubr
inc
mov
mov
mov
rorb
jmp
outsl
xor
out
pop
add
insl
mov
pop
push
fadds
dec
push
push
sbbl
movups
cmp
lcall
pop
fistps
pop
xchg
inc
negl
std
dec
pop
popf
xchg
ljmp
movsb
dec
cmc
pop
bound
enter
ljmp
lock
mov
xor
or
push
ficomps
clc
fs
jmp
push
sarw
sub
ret
outsl
mov
rcll
shl
enter
in
ret
call
add
in
test
jecxz
test
sbb
jmp
sbb
mov
int3
cmc
dec
imul
jo
repz
adc
shll
movsb
sti
pop
fisubs
xor
aaa
es
cmpsb
test
andl
jl
xchg
sbbb
icebp
test
adcl
inc
aad
fs
sub
idiv
hlt
iret
mov
aam
mov
xor
push
imul
adc
stos
lds
add
pop
add
nop
popf
lock
sbb
dec
mov
mov
mov
rorl
and
mov
xlat
jnp
push
imul
test
out
jp
sub
xor
jno
scas
test
inc
push
push
xchg
inc
add
test
push
ljmp
mov
pop
inc
dec
jbe
lret
negb
lcall
test
mov
out
cmp
iret
jnp
scas
jle
pop
sbb
or
ficompl
mov
pushf
or
push
stos
cmpsb
nop
movsl
popf
sub
adc
movsl
shrl
mov
or
push
xor
ret
sti
push
xchg
jp
pop
seto
xchg
inc
push
mov
andl
hlt
dec
push
sub
cmpsl
inc
push
cmp
sub
aad
out
into
push
mov
enter
and
pop
fimuls
insl
notl
and
sbb
lods
push
cmpsb
lret
sub
or
cmc
mov
test
stos
fs
sub
mov
sbb
mov
jae
sti
mov
push
push
ss
cmpsb
fstpt
and
movsb
lods
and
xor
out
sub
push
mov
imul
xchg
subl
cmpsl
mov
das
iret
jecxz
xor
sub
cld
cmpsl
lods
test
mov
inc
fcoml
xchg
scas
add
xor
mov
cltd
test
in
sbb
inc
cmpsb
cmp
xchg
mov
mov
sahf
mov
xorl
leave
or
xlat
fs
cltd
iret
lret
arpl
sub
jg
cmpsl
dec
mov
in
xor
cwtl
jbe
fadd
daa
xchg
scas
leave
je
and
sbb
repnz
jmp
in
xor
add
inc
shr
add
mov
pop
mov
scas
daa
xlat
cwtl
shrl
push
jp
orb
inc
adc
cmp
push
sti
mov
sbb
or
push
fistps
xchg
js
loop
or
mov
ds
pop
lea
test
or
int
aas
ss
test
out
out
rcrb
push
stos
sub
lock
push
xor
mov
sub
lret
mov
push
mov
or
xor
or
cmpsl
inc
and
call
push
loope
je
ret
or
aam
test
ret
out
xor
addb
push
cmpb
std
xor
jle
in
lock
cmpsl
add
add
fistl
sub
push
dec
jno
shlb
rcr
fiaddl
pusha
push
mov
sbb
or
pop
sub
sub
arpl
jle
fwait
pop
stos
lret
xchg
scas
fidivs
mov
sahf
gs
inc
cmp
ja
aam
ljmp
cli
jmp
jae
xchg
aam
jno
inc
mov
scas
mov
mov
test
or
and
cmp
lds
adc
mov
mov
xchg
out
xchg
ffree
pop
imul
pushf
out
lods
xchg
fidivs
nop
aam
mov
push
int
imul
xchg
jle
test
pop
jle
in
loop
dec
addb
scas
and
jmp
ds
jecxz
add
or
clc
fstp
adc
sub
into
shr
cmp
mov
sub
std
imul
out
cli
sub
adc
clc
inc
sbb
dec
and
dec
fstpl
xor
pop
call
sahf
push
mov
push
rcll
outsl
js
cmp
mov
xchg
inc
inc
sub
adc
sbb
or
mov
xchg
std
fsubrl
cmp
cwtl
pop
push
jo
iret
push
jle
lret
fnstcw
push
inc
and
call
ficompl
or
repnz
xor
lods
add
jmp
cwtl
add
jns
dec
pop
mov
cmp
and
insl
andl
lret
sub
rcrl
push
add
mov
daa
push
ds
aas
lret
rcrb
mov
lds
imul
call
add
mov
mov
out
testl
jmp
leave
push
pop
and
xlat
or
sub
mov
pop
adc
add
inc
sarl
outsl
jge
rcr
cli
jno
cmp
xchg
mov
ljmp
sub
lahf
imul
das
dec
dec
imul
int
push
push
jle
mov
add
nop
pop
adc
jecxz
scas
lret
lcall
dec
gs
mov
push
fnstenv
int3
fists
out
xor
fcom
xor
adc
leave
lcall
or
add
push
xor
jb
cmpb
fidivl
sub
sbb
push
pause
cmp
scas
lret
hlt
xchg
pop
fwait
daa
fimuls
mov
in
das
jl
or
fwait
and
jl
lcall
mov
ja
sub
xor
in
rorl
movsb
push
cmp
test
xor
or
mov
or
jne
mov
add
in
push
insb
adc
inc
mov
imul
loope
movsl
push
xchg
cmpsl
jae
dec
push
neg
and
xlat
pop
mov
cmp
adc
xor
jp
mov
mov
icebp
inc
mov
scas
sti
inc
pusha
mulb
ljmp
nop
sarb
lods
and
into
sti
repnz
in
xchg
divb
loope
std
cli
cmc
ret
push
and
adc
jp
testb
es
repz
pop
and
int
adcb
imul
jle
xor
aad
cmpsb
ficoms
xor
dec
cmc
fiadds
or
xlat
call
aam
push
mov
cltd
cli
pop
mov
and
sbb
es
mov
js
shll
stos
iret
mov
inc
jg
dec
lea
cld
or
in
cmpsl
ret
or
jns
mov
pop
jb
jp
push
lea
adc
jmp
in
lret
out
cld
fcomp
cmp
cmp
and
pusha
cmp
pop
mov
adc
aaa
sub
out
xchg
dec
cmp
repz
jmp
outsl
das
setle
and
insb
jae
lret
mov
inc
sarb
mov
jno
mov
hlt
mov
mov
adc
mov
cwtl
shll
sbb
cli
xchg
dec
movsl
adcb
mov
rcll
push
lds
cwtl
cmpsl
out
out
rorb
mov
popf
in
mov
pop
pop
in
mov
aas
test
cmp
call
loopne
inc
test
sub
out
in
and
imul
loopne
mov
xchg
push
jl
movsb
pop
scas
mov
test
cld
div
add
cli
sbbb
or
fwait
mov
mov
mov
sub
movl
xchg
in
rorb
jmp
dec
mov
dec
or
mov
dec
mov
push
popl
dec
iret
or
in
inc
push
aad
lahf
push
mov
mov
or
insb
push
pop
mov
dec
dec
mov
aas
or
outsl
sbb
testl
call
fs
ja
add
mov
mov
jle
xchg
into
pop
mov
test
pop
in
dec
dec
cmp
pop
js
jno
pop
mov
adc
repnz
add
adc
sahf
gs
xor
add
in
aaa
cmp
mov
mov
rorl
mov
out
xchg
inc
loope
push
mov
jae
xor
add
in
jo
lret
xor
in
xor
sub
xor
je
loope
sub
fimuls
in
aad
mov
mov
mov
add
mov
xchg
nop
xor
mov
dec
add
loope
mov
ljmp
inc
mov
loop
in
mov
or
aad
les
es
jecxz
repz
movsl
xchg
and
inc
adc
fldcw
inc
sbb
jp
rcll
inc
loop
adc
mov
aad
arpl
imul
call
or
push
sbb
push
cmp
pushf
divb
mov
les
rorb
mov
mov
insb
push
fsubs
jne
bound
fisubs
cmp
or
xor
addl
outsb
ret
movsb
mov
ss
jmp
movsb
jmp
fidivl
pop
ret
push
mov
dec
mov
inc
sbb
stos
sub
pushl
fstps
shll
jle
cmp
fwait
repnz
xor
sahf
push
lret
pop
xchg
jle
iret
mov
xor
roll
mov
das
imul
push
mov
aas
pop
rcll
pop
dec
test
imul
add
xchg
arpl
dec
pop
cmc
js
sahf
lock
js
rclb
sarb
sub
add
pop
lret
loope
jp
hlt
test
out
lret
dec
mov
mov
dec
cmp
mov
outsl
jl
pop
lret
lods
jne
xor
inc
add
jl
test
cmp
inc
loopne
xor
das
xchg
adc
inc
mulb
mov
addl
sahf
or
lcall
cwtl
test
jmp
in
cmp
popa
xchg
sub
int3
push
les
mov
inc
mov
cltd
lret
lahf
cld
pop
aam
xchg
jg
fcomps
and
cmp
pop
mov
xor
popf
jp
mov
loopne
fsubrl
aaa
mov
or
mov
in
mov
mov
mov
pop
mov
sbb
dec
sub
repz
push
mov
or
in
xlat
or
cltd
push
sub
and
iret
pushf
subb
nop
movsb
mov
push
insl
in
into
mov
daa
rorl
xchg
push
rol
filds
ljmp
inc
sbb
jno
out
cmpsb
adc
out
push
xchg
push
iret
sbb
in
ret
and
sti
mov
rolb
es
addr16
gs
and
xlat
rorl
push
outsl
idivl
pop
inc
or
pop
jle
jbe
mov
nop
fistpll
stos
lret
ljmp
xlat
movsl
loope
imul
mov
pusha
movsl
adc
scas
mov
rcrl
outsb
int3
mov
cli
pop
pop
push
out
push
xchg
scas
jmp
sbb
aaa
push
shrb
imul
ret
pop
aad
pop
shl
jmp
mov
sub
or
cltd
jb
imul
jmp
rcrb
int
push
adc
js
or
mov
hlt
dec
and
test
pop
sahf
cmp
out
sbb
ljmp
cmp
aaa
fstl
xchg
outsl
jmp
in
pushf
shrl
mov
loopne
xor
mov
les
add
inc
adc
xor
scas
add
adc
dec
and
push
cwtl
icebp
lahf
stos
test
shlb
es
and
movsb
xchg
sub
or
cmp
loopne
ss
fs
loopne
loop
adc
shrb
sub
andb
out
test
pop
jge
shrl
mov
pop
jle
test
fadds
pop
push
xchg
pop
xor
into
jbe
sbb
dec
incl
fs
inc
daa
sub
push
mov
sbb
push
fldt
xor
mov
jmp
lods
not
xchg
add
fmull
mov
pop
xchg
inc
aad
dec
push
daa
cs
jge
les
jmp
test
mov
ljmp
ss
or
pop
pop
out
mov
pop
jbe
nop
idiv
add
std
loop
push
mov
lock
adc
sbb
mov
mov
jbe
jle
pop
lret
pop
pop
imul
data16
in
stos
push
pop
pop
cmp
adc
pop
rcr
jge
push
xchg
out
add
stos
roll
repz
mov
out
jnp
xchg
rep
int3
adcl
fsubs
jp
into
add
cmpsl
mov
pusha
push
mov
insl
xor
push
pop
cld
xchg
mov
dec
je
cmc
call
cmpsb
mov
in
mov
andl
ja
and
push
call
mov
insl
neg
xchg
inc
inc
adc
test
cltd
mov
mov
ss
bound
jmp
xchg
mov
jge
std
and
enter
and
and
cmp
adc
cmp
ret
js
pop
push
lea
nop
int3
ja
fldt
stc
sbb
daa
pop
xor
mov
cmpsb
mov
daa
js
and
push
addb
jmp
enter
fiadds
push
ss
pop
movsl
inc
in
iret
js
in
std
es
sbb
popf
out
push
fs
negb
add
mov
jle
jg
adc
scas
mov
dec
cmp
jb
adc
inc
add
mov
adc
enter
iret
cmp
jnp
cmc
xchg
mov
xor
cs
add
into
and
mov
movsl
and
dec
jg
xchg
xchg
push
xchg
into
sub
push
jnp
dec
mov
sub
rcl
nopl
adc
adc
xchg
mov
push
subl
inc
jbe
xor
xor
mov
fs
xchg
mov
dec
push
cmp
mov
push
sahf
or
iret
sbb
pop
jo
fwait
pop
add
mov
add
dec
dec
cmp
sar
test
cmpsb
stos
dec
mov
int
cmp
add
clc
test
rcll
adc
dec
repnz
pop
pop
cmc
cld
pop
push
shll
push
mov
fmul
push
cmp
inc
ss
idivb
xor
jge
mov
loop
cmpsl
test
jl
inc
jmp
jo
ljmp
aas
sbb
xchg
cmp
imul
rorl
sub
jle
pop
and
sub
xchg
in
mov
xchg
aam
cwtl
xor
adc
xor
pushf
or
lret
out
sbb
in
jno
pop
aad
or
cmc
push
inc
inc
dec
divb
jnp
scas
stc
outsl
xchg
subb
inc
jmp
sarl
xchg
idivb
sar
imulb
xchg
outsl
dec
or
shl
pop
repz
mov
xchg
dec
dec
xchg
xor
ja
adc
dec
lret
xor
adc
sbb
test
bound
pop
enter
nop
fimuls
out
sarl
hlt
inc
mov
rolb
cli
xchg
je
xor
inc
cld
add
and
sub
cld
ret
scas
or
in
push
pushl
test
pusha
fstpt
cmp
jl
fucomip
and
into
add
aas
mov
add
xchg
andl
popa
inc
mov
pop
push
xchg
clc
or
and
mov
jge
fstl
push
repnz
push
mov
ret
mov
push
inc
push
js
mov
mov
inc
into
mov
imul
outsb
mov
and
mov
xor
mov
out
mov
mov
lods
mov
iret
imul
xlat
jo
jecxz
lret
dec
push
or
in
scas
cmp
and
inc
pop
inc
cmp
int3
and
int
sbb
mov
sbb
mov
add
into
movsb
outsl
insb
pop
icebp
ss
adc
fsubrs
sbb
enter
popf
sub
fwait
add
cli
gs
clc
push
or
insb
stos
cmp
push
sbb
divl
test
pop
rol
icebp
lods
mov
jmp
mov
lock
jmp
ljmp
aad
mov
fists
xor
mov
sbb
dec
cmpsb
push
loopne
xor
cmpsl
dec
sahf
sbb
and
sub
xor
push
je
mov
add
or
je
or
dec
push
ja
push
arpl
jg
and
sbb
cmpsl
popf
aam
or
push
inc
test
mov
push
add
adc
sbb
mov
sarl
mov
pop
xchg
mov
xor
lods
test
dec
mov
dec
aam
lret
push
repz
mov
pop
sbb
popa
xchg
inc
shll
jl
adc
aas
xchg
aam
push
jmp
outsb
cmpsl
mov
mov
repz
xor
lods
add
ja
call
out
push
cmovo
or
cwtl
out
push
mov
dec
das
sarb
sti
sub
rolb
sbb
and
out
mov
push
outsl
jo
movsl
movsb
aas
inc
cltd
leave
dec
movsl
jae
pop
mov
lods
pop
mov
popf
popf
lret
in
cmp
arpl
movsl
shrl
push
stc
add
mov
jns
and
es
cli
rcrb
mov
sub
xor
aaa
ret
inc
mov
fildl
push
adc
mov
mov
xor
lods
stos
push
sbb
cs
iret
or
pop
and
jp
arpl
pop
loope
inc
adc
jg
xchg
dec
loope
insb
push
loopne
aad
in
int3
mov
aad
pop
lcall
scas
lret
xchg
gs
jecxz
sub
push
sbb
sti
xlat
jbe
sti
xchg
sarl
icebp
rolb
mov
cmpsl
sbb
pop
mov
mov
and
jb
xchg
int
les
fldl
test
addr16
push
sbb
and
mov
sub
lods
xor
addr16
add
cli
inc
add
mov
add
push
or
xor
mov
mov
add
in
loope
adc
popf
lret
mov
clc
lods
testb
in
pushf
lods
scas
push
push
test
fs
ljmp
test
lods
mov
xchg
sbb
fbstp
ss
adc
pop
adc
mov
mov
jne
clc
jp
mov
or
xchg
push
cmp
fiadds
sbb
mov
xchg
pop
push
pop
loop
fistl
insl
aad
aam
leave
xor
jmp
icebp
jno
ds
adc
bound
in
add
inc
iret
xchg
inc
push
fildl
test
and
jmp
bound
hlt
push
push
sub
mov
mov
add
pop
cli
mov
xchg
inc
jbe
pop
jmp
and
or
xchg
sbbb
imul
adc
mov
lods
cs
push
cld
inc
pop
rcrb
aas
dec
or
xchg
sarl
test
movl
sbb
dec
fimuls
jg
pop
sub
add
cmpsl
sub
mov
fs
cli
fsubrs
jbe
cmp
xor
mov
fsubr
add
mov
jo
sbb
add
dec
mov
frstor
jns
lea
scas
decl
dec
jle
into
in
enter
loopne
das
inc
jl
jae
xchg
jae
push
movsb
and
mov
lret
sub
fs
cmpsl
ja
daa
js
cwtl
sbb
in
aas
push
cwtl
divb
pop
cmp
iret
push
or
in
ret
mov
out
popa
cli
pusha
loope
sarb
jg
and
or
push
push
adc
adc
pop
mov
rcrb
loope
push
inc
jae
sbb
inc
int
mov
adc
adc
xlat
fwait
data16
mov
cwtl
mov
inc
negl
fstps
inc
push
mov
pop
adc
lock
repz
adc
dec
sbb
add
dec
out
icebp
push
lret
mov
pop
dec
dec
out
ja
xchg
mov
push
cmpb
lcall
aam
xchg
divl
lea
jle
insl
roll
cmp
and
jo
sbb
movsb
iret
push
movsb
or
xor
xchg
push
and
xor
nop
lahf
faddl
arpl
inc
scas
push
std
scas
outsl
stos
add
mov
movb
add
loop
cmpsb
stos
cmp
mov
or
push
idivb
lds
out
lock
out
mov
jbe
xchg
sub
add
dec
push
scas
sahf
cmp
push
loope
shrb
mov
sbbb
cmp
xor
fsub
ret
in
pop
imul
or
in
popf
sbb
shlb
data16
fstps
jae
add
adcl
or
adc
and
cmpb
inc
xchg
inc
data16
int
ss
fstps
movb
scas
testl
mov
xor
lock
shrb
mov
loope
mov
dec
or
repz
jge
sbb
enter
cmp
je
cmp
lret
mov
hlt
dec
jp
testl
test
push
mov
pop
jmp
and
mov
mov
test
adc
xchg
pop
adc
mov
orl
jmp
dec
mov
jl
xor
pop
out
jmp
lock
pop
or
cmp
into
add
std
std
or
fbld
icebp
sub
jp
xchg
rolb
jmp
mov
sbb
mov
dec
outsl
fs
jge
inc
ljmp
or
addl
rcrb
dec
lds
call
lret
push
mov
add
movsb
je
mov
lcall
push
loop
inc
mov
int
and
jg
sbb
lods
in
pop
or
ret
idivl
pop
cmpb
add
orl
push
mov
lahf
dec
and
jnp
mov
outsb
jnp
imul
mov
pop
movsl
roll
mov
cmp
ret
inc
repnz
lds
es
mov
jnp
xor
sbb
insl
push
or
add
inc
mov
rorb
sarl
addr16
sbb
ljmp
inc
rclb
mov
pop
mov
outsb
int3
fs
mov
lds
sahf
aas
stos
jns
xchg
out
pop
lret
push
popf
out
scas
xchg
sahf
jb
and
pop
and
adc
scas
pushf
aam
mov
call
push
pop
pushf
mov
imul
fneni(8087
push
xor
repz
mov
les
mov
add
outsl
aas
mov
cmp
lods
in
sub
in
aaa
ret
pop
in
dec
aad
pop
je
mov
pop
jbe
and
addb
scas
xor
sbb
jbe
mov
fists
pop
arpl
jle
xchg
jno
lahf
adcb
pop
jb
inc
loopne
dec
and
popl
push
pushf
inc
arpl
test
jnp
or
popa
andb
daa
xor
push
imul
aam
push
mov
js
xchg
lods
pop
stc
into
das
lahf
add
or
fisttps
sub
jb
leave
adc
fwait
or
jno
cmp
sbb
aas
aaa
xchg
pop
roll
ds
push
and
inc
push
mov
jp
lods
rolb
sub
pop
lock
jge,pn
sub
xor
and
push
or
sbb
dec
popw
add
mov
inc
dec
mov
popf
icebp
sbb
mov
fbstp
pop
repz
adc
test
xchg
push
pop
mov
pusha
inc
pop
push
shlb
cmp
sbb
dec
pop
adc
push
sbb
scas
xor
std
dec
pusha
and
fisubrl
lds
out
jb
xchg
movlps
out
cmc
inc
fwait
lods
jbe
push
pop
jg
adc
push
bound
int
sarl
jae
cld
orb
mov
add
jne
cmp
cwtl
js
es
jge
shl
jge
jg
and
fnstsw
ret
mov
xchg
jno
push
aam
mov
lods
fs
xorb
xchg
scas
mov
mov
push
mov
xchg
idiv
adcb
frstor
das
xor
inc
mov
rcl
fcomi
sbb
dec
mov
mov
loopne
mov
repz
push
pop
cltd
xchg
arpl
rcrb
cwtl
frndint
inc
pop
sbb
test
pop
sbb
je
dec
out
sbb
stc
loop
test
ja
hlt
cmp
mov
push
sbb
or
frstor
pop
out
cmp
int
loope
push
jb
mov
jmp
movl
or
out
mov
xchg
jmp
out
stos
jne
mov
adc
out
mov
in
xchg
xchg
sub
shll
lods
xchg
dec
jge
clc
das
add
stos
test
and
es
mov
add
rorl
xor
inc
or
in
cli
int3
dec
adc
push
or
ja
xchg
cld
popf
test
das
dec
inc
test
popa
into
push
xchg
or
outsl
lea
jmp
fcoms
adc
mov
pushf
sub
das
daa
mov
data16
iret
lea
sbb
cmpsl
lcall
insl
fadds
lret
in
mov
xchg
xor
ljmp
int
outsl
in
mov
push
addb
mov
lods
cld
add
xchg
dec
test
stos
mov
mov
lret
pop
outsb
mov
push
dec
pop
sbb
test
xchg
adc
jle
add
pop
mov
and
cmp
push
adc
dec
mov
arpl
out
call
fs
sbbb
mov
in
sbb
or
xchg
scas
andb
in
movsl
fadds
push
stos
sbb
push
or
nop
fs
enter
loope
xlat
dec
jle
inc
inc
cmp
lret
arpl
outsl
push
xchg
lahf
in
or
sub
dec
sbb
and
ret
mov
sarl
aaa
dec
movsl
pop
xchg
hlt
call
push
pusha
mov
outsl
jl
icebp
adc
mov
and
rorl
lods
in
push
sub
pop
jns
xchg
dec
cmp
cmp
shr
xchg
nop
jmp
sahf
mov
repnz
xchg
scas
jb
add
mov
xlat
pop
dec
or
xor
loop
push
in
out
cltd
adc
sahf
les
mov
sub
inc
fldt
cmc
xchg
jne
pop
jge
dec
cld
insl
push
mov
mov
das
or
dec
cmpsl
cmp
adc
clc
mov
mov
mov
mov
adc
xor
sbb
sbb
ja
mov
push
js
out
out
scas
push
sbb
mov
jno
popa
adc
notb
fcompl
add
pusha
push
ja
and
push
xchg
arpl
jmp
int3
sbb
mov
test
in
add
xchg
aam
push
sbb
and
ret
push
mov
jbe
sbb
xor
jns
aad
jmp
mov
cltd
das
mov
jmp
neg
dec
lcall
or
into
lods
adc
movsl
adc
xor
and
jns
cmp
data16
repnz
dec
adc
fisttpll
push
mov
clc
mov
pop
mov
sbb
push
int3
ret
loop
mov
inc
inc
or
nop
test
xchg
push
clc
mov
cmpsb
pop
jp,pt
imul
pop
cs
cmp
pop
inc
outsl
test
mov
push
adc
sbb
gs
jmp
mov
out
test
stc
jl
push
jns
popa
stos
pop
mov
jbe
jb
dec
mov
mov
jo
int3
call
xor
testl
outsl
pushf
gs
jl
lahf
test
and
or
in
add
repz
rsqrtps
mov
fildll
stos
jle
mov
das
jno
jge
mov
into
adc
mov
jmp
xchg
clc
popf
iret
mov
addr16
fsubl
mov
ret
mov
pop
jecxz
jbe
pop
mov
dec
leave
stos
jecxz
dec
icebp
mov
sar
sbb
xor
sarb
adc
and
test
lahf
or
jnp
dec
adc
cmpsb
scas
xchg
mov
add
popa
push
add
cmpsl
test
push
sbb
subb
dec
xorb
subb
scas
movsb
add
push
xor
insl
jnp
and
cwtl
mov
xor
enter
push
cld
mov
xchg
punpckldq
push
jmp
aam
mov
test
sahf
sub
adc
outsl
insl
cmp
imul
scas
icebp
cmc
jmp
pop
std
lret
push
xor
pop
icebp
shrb
bound
out
stos
loopne
push
xor
daa
ss
cmp
dec
cmp
loopne
cmpsl
fcom
push
pop
mov
mov
mov
xchg
cmp
fwait
pop
shll
scas
dec
lock
add
shlb
cmp
sub
icebp
into
push
jbe
jnp
xchg
mov
pop
scas
jb
fadds
fs
rol
notl
mov
mov
xchg
sub
cmp
mov
test
bound
xchg
dec
sbbb
loope
stos
inc
pop
push
ljmp
inc
scas
icebp
push
xchg
into
cld
sbb
pop
cmp
mov
add
std
push
out
inc
xchg
adc
cmpsl
aad
push
ja
aaa
xchg
jno
mov
push
stos
inc
xor
call
push
mov
xor
push
rcrl
addr16
addr16
scas
dec
pushf
int
mov
cltd
jge
call
in
mov
pop
jg
push
out
push
imul
aam
ja
int
movsl
insb
iret
stos
imul
mov
lcall
inc
das
arpl
les
hlt
sub
cmp
cwtl
loop
xor
jl
jo
pop
in
adc
and
push
sub
stos
adc
adc
sbb
out
subl
fs
lock
adc
mov
adc
sbb
in
daa
adcb
mov
fldt
popf
pop
inc
adc
sarl
pop
push
jns
xchg
into
add
fdivrp
push
scas
js
test
jbe
shl
mov
and
mov
ljmp
daa
scas
mov
jae
sbb
sahf
test
mov
pusha
data16
repnz
xchg
xchg
or
lret
je
adc
mov
js
dec
pop
mov
lret
xchg
xchg
inc
mov
mov
into
push
and
push
add
ja
lret
inc
hlt
nop
jmp
test
aas
ret
sub
cmp
fidivrl
sarl
sub
sub
xor
pcmpeqb
mov
sub
mov
popa
mov
mov
das
cmp
inc
test
test
imul
popf
popf
jno
and
pop
loopne
and
jl
xchg
jp
addb
cmp
stos
mov
xorb
jbe
lret
sarb
push
and
mov
pop
orb
ret
bound
in
fcompl
push
leave
outsb
test
int3
sbb
sbb
pop
bound
cld
into
and
cmp
movsl
fdivl
cmc
out
ret
pop
cwtl
movsl
mov
jmp
arpl
mov
test
cli
mov
bnd
mov
clc
push
test
adc
dec
mov
popl
sub
sbbb
push
cmp
jbe
fistl
mov
xor
sub
sub
xchg
mov
sarb
mov
sbb
cmp
imul
push
loope
sub
jne
insl
outsb
jbe
push
xchg
adc
nop
xchg
daa
int
sbb
and
fiadds
fbstp
mov
iret
xchg
sub
data16
stc
lret
push
loop
fbstp
inc
insl
sub
inc
mov
cmpb
imul
cltd
popa
outsl
or
aad
ljmp
fisubrl
inc
add
es
mov
mov
mov
call
out
popa
int3
jecxz
inc
xchg
aaa
inc
dec
xor
xchg
movsl
push
shlb
xor
std
sub
sub
popa
mov
outsb
xor
out
mov
pop
addr16
mov
inc
loopne
sbb
daa
fnsave
lock
inc
mov
ficomps
mov
into
pop
movsb
test
fstpt
notl
lock
jmp
jne
xor
scas
sti
prefetcht1
shl
cmp
out
imul
test
lea
jge
les
out
mov
xor
or
push
or
clc
lds
ror
fwait
dec
fdivp
call
lret
fsubp
daa
mov
clc
stos
movsb
push
or
int
adc
dec
jmp
addr16
or
push
mov
xchg
in
nop
lds
xor
mov
sub
sti
dec
mov
cmp
pop
es
roll
lret
adc
pop
cld
mov
xchg
sub
mov
ja
jb
push
mov
nop
adc
mov
adc
cltd
aad
or
loopne
clc
jl
pop
adc
mov
movsl
push
add
sub
mov
bound
pop
dec
insl
mov
loopne
subl
sub
call
push
push
mov
mov
sub
imul
rcrl
out
cmp
into
and
add
sti
data16
or
push
or
cmp
adc
pushf
jnp
fistps
aad
fisubrs
call
sub
push
sbb
pusha
pop
sub
dec
xorb
mov
gs
cmp
add
in
sti
xor
movsl
jo
fstps
add
inc
cmp
daa
popf
jecxz
xor
rclb
cld
adc
mov
outsb
fsubrs
adc
negl
mov
cmc
mov
xchg
pop
sbb
or
data16
push
hlt
mov
int
jae
xchg
mov
outsb
cmpsb
jae
mov
adc
and
cmp
xchg
dec
int
ss
inc
pop
mov
cmp
call
push
xor
push
and
push
sbb
dec
ret
xor
dec
scas
cltd
push
and
cmc
iret
cmp
push
and
xor
mov
cmp
adc
sbb
gs
xchg
jb
jle
pop
ss
pop
or
xor
pop
leave
push
stos
jb
test
cmp
push
stos
sub
mov
pop
push
dec
jg
adc
sub
ficoml
mov
int3
fidivrs
add
jl
imul
in
in
jecxz
bound
jo
frndint
aad
mov
sbb
jmp
mov
ja
sub
pop
push
out
cmc
add
jp
cmp
mov
cltd
jecxz
shr
cmpsb
jle
mov
add
jno
out
data16
inc
mov
daa
mov
cs
iret
jg
push
xor
push
cmp
xchg
leave
xchg
test
push
fwait
mov
add
mov
mov
decl
xchg
aas
jecxz
cmpsb
mov
stos
jae
xchg
fsts
jmp
push
sahf
xchg
test
mov
push
dec
mov
adc
push
and
nop
loop
mov
mov
inc
xor
dec
bound
pop
lahf
push
xor
pop
and
jp
jb
rol
cmpsl
xor
or
add
stos
jo
mov
inc
push
and
cld
mov
xchg
sbb
jno
jmp
cmpsl
push
sarb
jb
mov
mov
jmp
push
rol
add
xorb
mov
shr
mov
imul
cmpsl
jecxz
ja
mov
xlat
inc
jae
pop
out
xchg
xchg
sub
popf
pop
ret
mov
mov
sbb
inc
pop
cltd
push
sub
dec
add
lock
jp
call
pop
jns
sub
int3
pop
mov
daa
and
pop
sub
push
mov
jns
ds
mov
xchg
dec
fdivrs
and
inc
and
test
mov
inc
jne
adc
cmp
xor
fwait
and
adc
rcrb
sub
rorb
fisubs
jae
fidivrs
insb
subb
or
xchg
js
xchg
push
adc
inc
in
cwtl
jae
shlb
lods
into
fcomps
cmp
add
adc
and
cltd
es
xchg
dec
jg
imul
mov
sub
ret
insb
insl
push
pop
inc
fs
mov
ret
add
xchg
leave
imul
mov
dec
loopne
jp
dec
mov
imul
mov
ret
adc
mov
xchg
and
xchg
jno
pushf
std
and
mov
add
jb
adc
scas
sbb
pop
lods
pusha
scas
scas
push
aad
sbb
pop
pop
xor
sub
xchg
xor
jae
and
inc
push
out
push
aas
xor
subl
popa
ljmp
lahf
call
xchg
mov
cld
inc
sbb
cltd
pusha
std
addr16
scas
in
inc
pop
cwtl
push
and
out
in
mov
leave
test
mov
cmp
inc
loope
gs
mov
fldl
mov
xlat
enter
js
push
inc
and
mov
push
mov
inc
imul
pop
ds
dec
cld
push
xchg
iret
fcomi
push
push
mov
mov
fneni(8087
xchg
out
pop
aaa
mov
pushf
dec
adc
into
stos
cs
mov
stc
or
jge
add
adc
cmp
jns
and
mov
into
sahf
insb
fisttpl
xchg
mov
push
sub
jno
sahf
in
addl
cltd
adc
push
xchg
ljmp
pop
loop
xchg
cmp
jmp
pop
test
in
out
xacquire
and
pop
sbb
jmp
lea
push
clc
adc
xchg
pop
push
add
call
xchg
lea
inc
movsl
dec
dec
out
sahf
faddl
nop
xor
arpl
test
jae
sbb
nop
xor
jno
in
movsb
stos
adc
dec
mov
movaps
cwtl
jg
sbb
xchg
inc
sub
loope
andl
push
stc
adc
jl
dec
ds
jbe
loopne
mov
dec
icebp
ja
insl
leave
push
cmpsb
dec
decl
mov
xor
pusha
sub
scas
xlat
xor
add
xchg
xor
adc
jl
sbb
iret
out
aad
mov
or
xchg
add
iret
imul
adc
xor
call
cmp
inc
pop
sbb
push
pusha
push
out
add
ljmp
subl
jecxz
int3
mov
or
and
int3
push
jp
loopne
testl
clc
addr16
sbb
dec
push
sub
cmp
push
popf
pop
loopne
ss
sbbb
imul
call
mov
fstpl
arpl
xorb
jns
imul
add
sbbb
lret
pop
std
mov
data16
inc
and
aam
adc
jo
daa
or
movsl
outsb
dec
stos
jmp
and
jne
int3
jno
push
xor
das
cmp
subl
mov
popf
mov
scas
mov
mov
mov
cld
rcr
icebp
loop
sahf
dec
jg
rep
int3
fdivr
push
xchg
lea
jecxz
inc
pop
mov
push
push
dec
pop
leave
shrl
in
cs
loopne
or
or
ret
push
jle
jp
filds
stc
sub
addb
jne
fs
inc
lds
or
das
mov
insb
addl
lea
stos
xchg
subl
mov
xchg
or
xor
adc
fcoml
add
fdivp
sarb
jns
orb
push
push
loopne
inc
mov
inc
aas
push
insl
mov
nop
cmp
dec
mov
inc
sub
outsl
pushf
daa
mov
inc
mov
jns
or
add
fsubs
mov
cltd
inc
cltd
nop
inc
lods
xchg
mov
mov
mov
shll
pusha
jno
idivl
shrb
or
and
repnz
sahf
or
pop
push
dec
push
aad
pop
lods
lea
push
mov
xor
fiadds
clc
int3
push
cmc
aad
add
jb
hlt
les
js
pop
inc
das
push
aam
xor
mov
xor
inc
inc
jne
push
insb
call
xchg
imul
adc
and
xchg
pop
test
fisubl
mov
sbb
push
jne
aad
xlat
iret
test
test
jnp
scas
inc
adc
out
pop
jl
mov
scas
cmpsl
sub
mov
sahf
popf
mov
mov
adc
in
jnp
mov
andl
rclb
jle
jne
cmp
je
jecxz
sub
mov
mov
or
movsl
or
mov
sar
faddl
mov
test
add
in
push
lock
add
rol
pop
xor
sbb
int
aam
cmp
jnp
cmp
xchg
fisubl
enter
push
out
push
jecxz
lock
je
clc
and
mov
cltd
fistl
xor
fldcw
add
ljmp
imul
rcr
les
xchg
inc
mov
repnz
sbb
repnz
in
or
cmc
lods
jae
add
fidivrl
shlb
iret
xchg
xchg
aas
adc
cmpsb
and
adc
adc
div
pop
xor
mov
dec
fxch
mov
pop
mov
xchg
nopl
push
and
or
inc
aaa
test
inc
iret
cmp
cmp
mov
shlb
xor
fwait
outsb
divb
dec
fistpl
popa
dec
mov
mov
dec
mov
lods
mov
mov
or
inc
cmpl
cmpsb
out
mov
mov
mov
pop
inc
push
push
pop
xchg
out
sbb
push
push
xchg
imul
push
push
sub
std
movsl
jge
cwtl
mov
cld
mov
std
dec
sbb
pop
and
inc
cmp
ja
jnp
jno
push
xor
enter
pushf
mov
stc
jecxz
mov
xlat
ret
lret
pushf
cmp
xor
inc
cmpsl
cmp
insl
insb
dec
lods
out
xlat
add
cmp
pop
xchg
pop
imul
cmp
in
sub
psubw
nop
push
lcall
divl
movsl
jae
pop
sbb
sub
ljmp
das
fscale
mov
and
test
xchg
mov
push
dec
stos
mov
lods
push
xchg
cmp
xorb
mov
movsl
adc
dec
mov
inc
and
jo
add
xor
bound
jmp
xchg
call
fidivrl
int
xchg
fldl
mov
lret
call
std
ss
cmp
insl
decl
stos
xchg
aad
jno
enter
xchg
js
lods
inc
xchg
divb
cs
inc
scas
xor
lea
push
adc
cmp
test
mov
inc
std
fidivs
cli
bound
push
loopne
adc
ja
in
popf
sbb
cltd
push
jge
cmp
adc
mov
push
add
push
das
mov
scas
sti
test
cmp
out
xlat
mov
inc
imul
lods
jg
stos
cld
and
pop
lods
mov
mov
sub
sub
lds
inc
pop
add
push
cld
stc
testl
and
fcompl
iret
sub
sbb
sub
xchg
cmpb
loope
cmp
ss
xchg
sbb
dec
add
jb
add
cmp
lods
and
pop
xchg
andl
adc
add
mov
dec
adc
mov
cli
jmp
fisubl
int
xor
sub
movsl
push
stos
jae
jp
adc
adc
push
loop
int
in
mov
mov
inc
ret
pop
stos
scas
mov
mov
xchg
sbb
mov
mov
repnz
xchg
stos
inc
cld
fisubl
nop
push
sarb
repz
movsl
jg
pop
in
mov
sbb
in
cmp
jecxz
adc
ffreep
jmp
and
sub
or
pushw
adc
push
dec
inc
loope
out
mov
sub
aaa
mov
mov
movsb
mov
sbb
aad
mov
incl
sbb
out
lds
cli
mov
push
hlt
pop
add
test
pushf
shlb
idivl
clc
rorl
shll
cld
jl
mov
jb
adc
sub
xchg
lcall
lea
jg
aas
cmp
jmp
je
enter
gs
das
fwait
sbb
jp
jo
jno
sbb
add
pop
jbe
ds
mov
je
pop
pop
bound
mov
xchg
pop
fwait
adc
into
cld
jbe
xor
xchg
xlat
arpl
xor
pop
adc
test
dec
cmp
sbbl
loopne
xchg
subb
jmp
jl
pop
into
enter
shrl
iret
adc
outsb
sbb
icebp
xchg
lret
push
cmp
sub
and
mov
xchg
sub
push
aad
adc
add
lret
adc
stos
sbb
fwait
gs
outsb
fs
jne
cmpl
aas
mov
fdivrl
cs
dec
inc
xor
les
push
mull
fdivrp
pop
ret
mov
xor
js
fldenv
xchg
cli
xor
push
pushf
stos
dec
imul
in
in
out
or
inc
inc
leave
pop
fsubl
fcoml
gs
jg
cmp
aas
jg
lods
mov
sahf
mov
loope
aam
aas
leave
xchg
movb
add
mov
insb
add
and
getsec
jl
sbb
loop
dec
jne
xchg
sbb
rcrl
xchg
add
push
leave
call
sbb
lea
jmp
cli
mov
fwait
mov
test
nop
pusha
out
sbb
dec
xor
cmc
dec
int
and
fstl
mov
dec
jp
and
sbb
hlt
repz
les
jecxz
dec
jmp
or
iret
outsl
dec
pop
fcmovu
pop
pop
fsubrs
xor
xchg
push
dec
stos
sub
mov
out
sub
lret
and
orl
fsts
lret
add
nop
cltd
add
iret
jnp
sub
test
mov
pushf
mov
jne
pop
jecxz
cmp
cmpsl
std
push
das
add
fs
mov
hlt
fldl2e
mov
or
push
cmc
icebp
pushf
cwtl
pop
repnz
stos
and
test
aas
in
rolb
adc
adcl
enter
int3
jmp
out
fisubrs
or
dec
ja,pt
jns
sub
sbb
ret
insb
mov
call
imul
in
out
adc
mov
xor
cmp
or
jo
jle
xchg
lds
add
lret
pop
pop
out
fadds
sbb
mov
xor
jle
insl
mov
out
dec
xor
imul
cld
pop
aaa
enter
lret
movsb
push
pusha
dec
ret
in
orl
mov
xchg
movsl
pushf
mov
out
jbe
mov
addr16
jno
mov
sbb
jge
add
insb
aam
mov
and
and
int
adc
xchg
pop
inc
adc
and
push
and
cmp
jno
or
jne
cmc
inc
and
ljmp
push
shlb
addr16
ficomps
repz
pop
mov
adc
call
cltd
or
movsb
and
inc
rep
adc
mov
jle
push
in
push
cli
movl
enter
push
xchg
andl
sti
out
mov
jle
mov
mov
insl
movb
adc
test
out
test
enter
fldt
mov
jae
jg
loopne
stos
mov
outsb
iret
xor
push
push
cmp
iret
cmpsl
subl
or
imull
pop
lret
mov
sbb
inc
test
movsb
inc
mov
push
rcrb
adc
mov
push
sbb
cmp
mov
out
pop
insb
dec
xchg
jecxz
cmp
inc
jl
test
loop
inc
iret
and
gs
arpl
sbb
mov
rorl
mov
or
lds
push
mov
ljmp
cmp
cltd
out
cmpsb
cwtl
ret
js
or
cmp
xchg
or
loop
jne
mov
jg
add
incl
push
outsb
cmpsl
jnp
or
jne
push
sub
inc
sbb
mov
pop
aas
add
fdivs
test
push
xchg
std
jecxz
jp
shl
mov
cmpsb
add
mov
jp
cmpl
rol
pop
and
scas
push
pop
push
daa
inc
imul
add
cmpsl
sti
mov
sub
jbe
xchg
push
jnp
add
mov
lods
ljmp
xor
pop
adc
cmpb
clc
push
cmp
loopne
adc
sahf
dec
sbb
mov
into
je
leave
lods
inc
adc
leave
cltd
insl
out
ret
out
cld
fmull
addr16
insb
dec
pop
push
je
in
add
ret
jne
ljmp
test
jne
rol
in
and
mov
cmp
or
add
fdivrs
adc
jb
pop
mov
pop
push
enter
mov
fwait
addl
addr16
notb
sub
mov
sub
push
outsb
mov
std
or
and
dec
lds
ljmp
pop
xor
push
test
dec
pop
fwait
jle
push
push
sbb
jns
rol
or
sbb
mov
add
xchg
and
dec
pop
pop
mov
xchg
adc
dec
lea
movsb
rolb
pop
cmpsl
movsb
jno
shll
push
xchg
cmpsl
inc
jecxz
xchg
sub
push
ficoms
pusha
outsl
mov
mov
cmpsb
clc
in
push
sub
jo
sbb
test
das
add
mov
lret
jge
cmc
xchg
xchg
dec
push
mov
xchg
lods
pusha
jmp
or
sbb
pusha
cmc
pushf
sub
xor
rcll
int3
clc
xlat
push
mov
inc
popf
popf
cmpsl
xlat
push
insb
ja
in
das
fiadds
clc
in
dec
sahf
repnz
add
sbb
mov
push
jge
cmp
adc
dec
push
nop
sbb
adc
ret
add
push
imul
gs
push
mov
xchg
repz
repnz
cld
adc
adc
ljmp
push
movsl
out
stos
mov
jnp
mov
aad
mov
sbb
int3
push
xor
cs
rorl
adc
sbb
jle
push
and
sti
mov
ds
outsb
mov
loope
mov
or
dec
jecxz
insb
lahf
lods
jmp
sbb
jno
sbb
cmpsl
stos
and
scas
sbb
or
sbb
cmpsl
shlb
jecxz
lea
js
mov
cmp
cmp
mov
in
xor
shrb
sbb
sub
cmp
add
mov
pop
ret
xor
mov
sti
mov
arpl
aam
cwtl
adc
inc
out
shll
mov
dec
test
lods
jb
les
repnz
mov
adc
lods
mov
and
mov
sbb
inc
shl
fimull
inc
xor
cmc
hlt
dec
add
das
bound
sbb
jge
xor
shl
js
imulb
jnp
dec
mov
ret
fdivrp
and
ret
stos
sub
mov
mov
ficoml
ds
lods
aam
mov
push
xchg
repnz
mov
adc
inc
dec
mov
fwait
out
adc
push
nop
sbb
outsl
and
and
cmpsl
jmp
ds
mov
dec
xchg
dec
pop
in
sbb
push
scas
movsb
pusha
aad
xchg
jne
fs
sti
adc
xchg
jno
stc
xor
jns
int
and
hlt
pop
mov
sbb
ret
lods
cmpsb
std
push
pop
cmp
mov
jnp
cld
icebp
mov
jne
xchg
or
wrmsr
dec
pop
sub
sub
out
adc
mov
repz
xor
pop
sub
or
push
dec
out
jno,pn
or
sbb
shrb
mov
xchg
sub
cmpsb
xchg
sbb
fnstsw
mov
out
out
push
and
addr16
adc
fs
or
inc
call
sbb
sub
sub
cmp
xchg
jnp
add
adc
pop
mov
jp
fwait
mov
not
push
outsb
xor
push
clc
rcll
cmpsb
outsb
call
sub
out
in
adc
xchg
push
ret
jns
cmp
jmp
shlb
nop
pop
cmp
stos
jp
scas
mov
sub
or
sub
mov
hlt
iret
jbe
rolb
nop
mov
cmpsb
rorl
hlt
jle
push
push
xchg
dec
movb
pop
lock
daa
dec
lret
and
imulb
sysenter
xchg
push
iret
incb
dec
fisttpl
scas
mov
inc
addr16
int3
lretw
cmp
enter
jbe
js
dec
aad
mov
inc
out
xchg
aad
mov
sub
or
sbb
cs
and
jl
lds
push
movsb
add
pop
cmp
push
mov
loope
call
pop
dec
in
cmpb
pop
cs
ds
mov
push
xor
or
sbb
add
popf
push
fisttps
xlat
jne
xor
cmp
cmp
pop
hlt
mov
out
jns
fistl
enter
cltd
fnstsw
mov
stos
cmp
jge
arpl
xchg
sub
fmul
cmp
xchg
movsb
das
add
jmp
push
out
cld
adc
mull
mov
inc
outsb
push
cmpl
es
mov
mov
adc
bound
stc
ss
mov
stos
inc
mov
leave
jae
sbb
cmpsl
jecxz
jbe
into
xchg
pop
sbb
in
adc
xchg
mov
or
lods
daa
sub
push
pushf
daa
cmp
adc
push
mov
push
sbb
fwait
pop
lahf
jnp
cmpsl
popa
rorl
pushf
push
xchg
xchg
lret
stos
mov
fistl
inc
lock
mov
sbb
test
loope
cwtl
jnp
jle
mov
push
mov
int
adc
fisttpll
enter
pop
imul
in
fwait
sarl
repnz
int
ret
pop
gs
jecxz
int3
out
imul
ficompl
and
les
mov
jmp
repnz
add
mov
push
out
sbb
pop
inc
xchg
outsb
in
sti
adc
add
outsl
ss
mov
out
fidivs
insl
js
jg
cmpsb
data16
or
xchg
lret
adc
push
cwtl
add
loope
fsubrs
or
cwtl
jecxz
test
mov
mov
int
lods
mov
pop
mov
movsb
ficomps
xchg
sbb
xor
and
icebp
movsb
leave
popa
xchg
testl
sarb
sbbl
std
mov
andl
or
inc
xorb
jle
jl
into
pop
test
sbb
cmpsl
inc
repz
push
sub
lods
jge
or
shll
int3
xchg
add
xor
int3
test
cmpsl
fwait
add
mov
mov
movsb
xchg
pop
mov
imul
jl
cmp
ss
scas
iret
mov
sbb
mov
mov
cld
push
mov
xchg
mov
push
fcmovne
adc
lds
xor
sbb
jp
cmc
scas
inc
sbb
test
add
xorl
call
aam
pushf
xor
lds
jge
fisttpll
cli
mov
and
dec
fldenv
jecxz
mov
cmp
dec
or
sbb
push
out
xlat
or
inc
xchg
sti
xchg
cwtl
cwtl
stos
mov
sbb
ret
lahf
cmp
pop
stos
aaa
hlt
dec
mov
sbb
sbb
jle
lods
mov
inc
jne
test
cmp
popf
daa
sbb
stc
jbe
push
cmpsb
fisubrs
cmp
jg
arpl
mov
in
lgs
iret
add
inc
repz
cmc
cli
adc
enter
jmp
push
cli
push
outsl
pop
mov
in
inc
inc
call
int3
mov
imul
rcl
push
andb
or
jecxz
pop
aas
mov
cmc
cmp
stos
jb
test
lods
outsb
in
sub
xchg
aas
shlb
ljmp
dec
loopne
jg
lods
sub
aas
jb,pn
test
sub
push
in
add
xchg
cmp
inc
mov
and
test
jle
mulb
loope
jmp
les
or
inc
cmp
shll
push
ljmp
mov
dec
xchg
jge
jmp
out
fs
cmp
icebp
mov
lods
pop
pop
loop
mov
xor
add
mov
cmp
arpl
pop
iret
add
add
and
push
push
lahf
aas
pop
pop
mov
cmp
popa
and
add
push
inc
cltd
ret
out
jg
popa
jo
dec
inc
xor
aam
jmp
sahf
push
xchg
and
mov
addr16
push
outsl
add
jns
stos
fs
int3
into
adc
sahf
sahf
ljmp
pop
add
aas
inc
add
and
sub
movsl
cmpsb
push
xchg
cmp
push
imul
cli
pushf
cs
adc
add
dec
pop
sbb
mov
in
push
push
jnp
les
cli
push
sub
xor
aam
leave
sbb
sub
xchg
dec
jbe
test
pop
jge
mov
xor
addr16
ret
outsl
cmp
jo
pop
js
repz
rclb
xchg
movsb
inc
ljmp
bnd
jmp
xchg
int
lret
sbbb
mov
in
movsb
lds
jne
adc
dec
pop
xor
std
mov
sbb
pop
pusha
mov
in
xchg
dec
cmp
stos
outsb
sbb
sub
pop
add
inc
mov
cmp
iret
jb
mov
sti
pop
shlb
jp
jae
xchg
and
cmpb
jecxz
les
jb
ja
pop
insl
dec
sub
mov
pop
cmc
pop
fnsave
or
mov
movsb
xchg
add
push
aaa
inc
gs
sbb
hlt
mov
push
pop
mov
repz
pop
enter
and
or
xor
cltd
push
bound
jb
jno
sub
sub
dec
stos
cld
sahf
push
cmpsb
dec
call
inc
sbb
pop
cmp
int
aad
and
add
pusha
lret
sbb
xchg
sbb
enter
add
scas
dec
inc
outsl
push
mov
jle
pusha
xchg
sbb
cmp
adc
mov
and
js
sti
sahf
hlt
js
or
popl
dec
das
push
push
mov
inc
xchg
bound
decb
sbb
mov
add
jecxz
jbe
sahf
jns
fidivs
gs
add
mov
shl
pop
scas
fdivrl
aas
push
cld
jns
lret
dec
or
daa
ds
jne
or
xchg
xor
loop
push
ret
imul
dec
mov
js
push
cs
xchg
jb
jne
vmptrld
jae
xor
mov
or
pop
xchg
jmp
sub
data16
sbb
xchg
imul
stos
mov
addb
lret
aam
sbb
jb
and
fcmovb
cwtl
or
push
stos
aad
inc
pop
xchg
pop
adc
jb
ret
aaa
cld
jp
ja
stos
stc
mov
rcll
jbe
in
or
and
xor
pop
lods
movsl
sub
sub
inc
shll
and
rorl
cmp
loope
rcl
xor
test
xor
aad
cld
andl
mov
out
aam
mov
ret
inc
pop
ds
mov
sub
cmp
pushf
cmc
lret
adc
pushf
icebp
addr16
or
mov
lods
pop
xchg
xchg
adc
iret
lods
fs
in
xchg
mov
ja
bound
jg
push
jmp
mov
add
js
stos
mov
fisubrl
test
out
inc
mov
mov
xor
leave
mov
mov
jecxz
int3
and
fisubrl
push
pushf
fbld
bound
hlt
into
dec
sbb
fcmovbe
aas
outsb
sbb
fisubl
cmp
mov
out
jmp
and
sub
cs
lret
mov
imul
push
lahf
in
pop
es
outsl
fbstp
jo
movsw
aaa
add
xor
xlat
cs
std
hlt
jbe
daa
test
push
rcl
mov
dec
jl
add
push
sbb
fs
or
or
notl
ret
scas
cmpsl
dec
or
arpl
sbb
push
mov
add
scas
ror
sbbl
jmp
cwtl
dec
aaa
call
xchg
mov
imul
or
cmp
dec
ret
faddl
mov
push
stc
rcrl
inc
into
lock
push
mov
push
mov
stc
xchg
cmp
in
jb
mov
jne
pop
lods
adc
cmp
sarb
jno
cmp
iret
push
xchg
sbb
movsl
lcall
pop
sub
mov
popf
div
jae
test
fwait
bound
jno
add
sbb
shlb
sbb
adc
mov
std
leave
and
cltd
fprem
das
sbb
mov
inc
mov
mov
inc
test
lods
sub
push
ja
xor
outsl
mov
test
add
push
iretw
repz
mov
imul
aam
hlt
pop
mov
imul
hlt
sbb
js
pop
xlat
cmp
lahf
movb
ficoms
movsl
cs
sub
sub
xchg
decb
fldt
ror
xchg
ret
lahf
jo
hlt
cmpsb
orb
pop
push
inc
sahf
ret
push
xchg
mov
push
sbb
stc
push
ficoms
xchg
inc
enter
shrl
out
sbb
push
push
inc
push
inc
mov
xchg
out
mov
mov
imul
dec
sti
push
mov
pop
pop
pop
inc
inc
xchg
test
cmp
sbb
mov
mov
das
mov
cwtl
out
iret
adc
mov
push
cwtl
fildl
lea
inc
lods
insl
mov
add
loop
lret
sbb
pop
push
dec
mov
in
repz
jno
imul
cltd
or
push
insb
stc
int
adc
jnp
pop
pop
negb
sub
arpl
mov
jg
sub
jl
outsb
ficoms
mov
or
sub
pop
dec
loop
xchg
insl
test
jns
in
add
lret
addr16
or
mov
or
or
adc
loopne,pt
adc
in
xchg
push
xchg
adcb
ja
xor
cld
jge
xchg
aad
int3
jmp
lret
mov
add
sub
fs
lods
push
xchg
negl
pop
shrb
cmp
int3
daa
into
in
cmp
add
icebp
jo
neg
loope
pop
cmc
call
repnz
sarb
push
mov
cmp
outsb
xchg
mov
ret
movl
add
mov
out
rorb
std
inc
out
test
out
fisubs
es
add
pop
loope
jno
sbb
pop
inc
cld
mov
pop
pop
std
add
rorl
fstpt
pop
xchg
dec
test
xchg
inc
fs
jae
sbb
pop
rcl
push
rolb
fadds
jle
fcoml
add
cmp
in
adc
adc
repnz
fidivl
cmp
popf
jl
testl
xchg
jge
shl
cmp
and
testb
xor
mov
pop
ss
test
mov
mov
push
jb
cmp
dec
cltd
in
cmpsb
mov
in
in
or
aas
mov
pop
mov
les
cmp
jge
dec
adcb
push
or
sub
mov
adc
mov
or
gs
inc
repnz
jne
loop
outsb
cmpsl
xchg
and
cs
rcll
inc
movzwl
and
jmp
or
push
bound
mov
lahf
icebp
insb
mov
jo
jne
arpl
out
test
push
or
ds
inc
and
and
push
pop
push
ja
rorb
mov
xor
rcll
jae
sub
ljmp
faddl
add
bound
imul
mov
ja
out
lret
mov
push
xor
out
ret
pop
pusha
mov
cwtl
sub
mov
cmp
cmc
push
lds
mov
js
in
mov
shrb
mov
lcall
cmpsb
dec
pop
xchg
out
stc
rsm
xor
fadds
sub
mov
int3
xor
or
stc
mov
stos
in
adc
add
bound
cmpsb
jno
mov
stos
lds
das
sbb
sub
clc
cmpb
lret
into
cmp
pop
xlat
out
sbb
fsts
cs
pop
shrl
jns
call
inc
shl
int3
roll
xchg
pusha
shll
lcall
shr
loopne
jge
out
cmp
pop
pop
pop
mov
in
push
nop
sub
add
push
addl
dec
push
ror
jge
mov
ja
jns
test
shrl
loopne
shll
jbe
aam
test
sub
push
jnp
dec
pop
pop
pop
mov
dec
shll
data16
sbbb
push
ror
mov
std
jle
xchg
mov
inc
push
lcall
faddl
aas
sbb
adc
aaa
or
pushf
divb
push
and
dec
movsb
addl
inc
jae
rcl
add
pop
loope
jl
icebp
mov
call
std
or
fiadds
subb
leave
cmpb
sub
mov
mov
lods
data16
rorb
xor
sahf
mov
inc
insl
shlb
mov
mov
jmp
jno
sub
xchg
mov
leave
cwtl
lret
int
dec
ljmp
leave
adc
ja
ss
mov
lcall
adc
sbb
mov
dec
or
pop
cmp
sbbl
jle
add
mov
mov
mov
mov
out
in
cmp
pop
pop
in
in
daa
repz
data16
xlat
in
sbb
xchg
push
adc
inc
mov
icebp
xchg
sub
inc
sub
outsl
cmp
fsts
push
mov
jbe
icebp
sub
imul
inc
outsb
sub
sahf
ljmp
out
popf
dec
pushf
leave
dec
mov
cld
or
pop
aaa
fldt
stos
adc
mov
in
out
push
pusha
sbb
dec
sbb
jns
cld
imul
hlt
jle
call
inc
mov
mov
and
aad
mov
ret
cltd
ss
pop
ja
push
mov
call
pop
mov
cmpsb
js
out
mov
popf
int
je
cltd
ret
or
cmp
lods
xchg
mov
cmc
or
mov
push
mov
mov
jmp
test
xorb
mov
jno
lcall
addl
call
mov
dec
mov
cmp
daa
mov
mov
out
sbb
jp
xchg
mov
xchg
addb
ja
pop
das
pushf
fsubp
jb
inc
int3
sbb
imul
popa
xchg
inc
mov
in
jg
sbb
fdivrs
fisttps
fiadds
out
mov
sbb
xor
call
adc
or
in
out
lret
cmp
push
cwtl
and
push
and
cli
mov
inc
rorl
shl
jge
dec
decb
les
ss
stos
push
fstpl
shrb
adc
push
pushf
mov
push
mov
dec
jl
sbb
dec
dec
jae
std
push
xor
sub
loopne
rcrb
inc
ds
fadds
negl
aam
test
pop
popf
jge
call
cmp
adc
lock
push
add
loopne
test
gs
daa
outsl
movsb
outsb
mov
mov
in
xor
jae
mov
mov
shr
mov
mov
cmp
in
push
mov
icebp
sub
push
stos
jns
xchg
das
ret
outsl
pop
add
lret
jno
mov
sarl
aad
mov
push
mov
mov
pop
xchg
cwtl
xchg
jmp
stos
push
push
fs
sbb
mov
mov
ficoms
ja
mov
mov
inc
or
imul
lods
mov
lahf
dec
int3
fstpt
sub
xor
mov
lret
cmpsb
ficompl
fwait
mov
mov
sbb
loope
pop
inc
sbb
leave
jnp
or
add
sub
cmpl
xchg
xchg
icebp
out
iret
lgs
xor
xchg
pop
mov
fwait
test
insl
fcomp
into
jp
xlat
les
sbb
lahf
cmc
lds
test
scas
and
jmp
cwtl
push
inc
mov
loopne
orl
pop
call
add
in
xchg
shrl
call
mov
mov
mov
jnp
nop
aas
mov
sub
jl
and
and
lods
mov
test
adc
mov
dec
xor
inc
popf
popf
sub
mov
sarl
std
out
sahf
mov
sub
xor
pop
sbb
pop
lock
out
sbb
lods
bound
cltd
adc
lcall
mov
and
cmpsb
push
gs
push
out
sub
sarb
jnp
jo
jl
inc
cmp
adc
outsl
repz
xor
push
add
mov
outsb
dec
and
add
popf
cmp
fimull
out
inc
ret
or
push
jne
out
dec
mov
call
dec
adc
out
push
cld
adc
imul
orl
mov
xchg
mov
fucompp
jno
out
jno
jnp
ds
pushf
out
divl
mov
ja
int
push
xchg
adc
std
mov
or
cmp
sbb
scas
cmc
sub
jne
lods
and
je
inc
cmc
rcr
dec
push
mov
ss
popa
enter
mov
inc
jmp
test
stos
bound
inc
dec
mov
lret
imul
aad
jle
popf
or
sahf
and
outsl
and
push
scas
les
outsb
frstor
cmpsl
pop
dec
xchg
inc
jmp
and
int3
enter
in
jnp
xor
scas
cmp
xchg
mov
aas
jno
sbb
inc
and
sub
popa
cld
jg
movsl
nop
lret
hlt
lods
icebp
mov
add
add
cmp
ss
inc
dec
push
test
mov
push
adc
mov
mov
cmp
mov
add
xcrypt-ofb
cmpsl
stos
insl
ret
out
xlat
xor
fdivrl
jecxz
jb
insl
and
nop
lods
idivb
and
je
mov
mov
xchg
cmpsl
enter
dec
xchg
sahf
lret
movsb
call
pop
xchg
stc
and
mov
outsl
adc
int3
dec
mov
jecxz
mov
rcl
cltd
jnp
mov
je
and
fsubs
cmp
dec
enter
in
mov
pop
pop
jecxz
subb
hlt
push
fcmovbe
gs
out
out
sti
dec
inc
and
cs
stos
hlt
xchg
push
cmp
pop
mov
andb
movsl
out
inc
push
sub
pop
std
outsb
inc
lahf
je
lcall
or
adc
jp
aad
push
test
in
stos
cmpsb
dec
aam
jbe
cli
sub
inc
fcmovne
in
ds
pop
xchg
fcompl
dec
psubb
pand
jo
dec
testl
cmp
pop
int
sti
and
lahf
dec
or
pop
sub
jge
inc
xor
mov
sbb
pop
xor
pop
sub
xor
jbe
loop
lahf
pop
popf
and
inc
mov
std
dec
jns
push
lods
gs
push
jbe
jne
popf
and
mov
pop
pop
adc
and
mov
add
mov
je
xor
leave
mov
cmp
xchg
add
or
out
fldt
aaa
int
and
test
ds
xchg
into
add
mov
cmp
mov
xchg
lods
imul
jecxz
inc
cmp
jno
and
pop
repnz
clc
add
push
repz
or
or
in
push
clc
mov
es
mov
out
sbb
jecxz
ss
add
or
arpl
mov
dec
xchg
out
adc
ds
lds
fstps
or
pop
push
shll
push
lock
cmc
les
pop
sbb
mov
or
mov
sbb
xchg
xor
sahf
jge
hlt
fnstsw
sbb
inc
xchg
pop
xchg
in
push
stos
sbb
ret
jp
icebp
inc
mov
lret
jbe
mov
sub
xor
push
xchg
sbb
stos
sti
ja
jns
or
and
cmp
cld
movb
loope
push
mov
stos
mov
test
xorb
dec
jp
mov
lcall
adc
iret
dec
xor
sahf
cltd
or
pop
js
inc
scas
xchg
in
pop
pop
in
jecxz
jl
adc
cmp
loop
lock
sub
inc
or
es
rolb
clc
pslld
insb
mov
jp
ret
pop
mov
cmp
xchg
inc
in
aad
inc
cld
out
sub
inc
movsl
aam
cld
cmp
pop
xor
jmp
add
dec
lret
nop
dec
sub
fstpt
insl
mov
aaa
inc
fs
jnp
sti
xor
sbb
fistl
sbb
mov
mov
and
aam
pop
bound
push
iret
mov
scas
lods
pop
dec
dec
push
sub
lret
mov
mov
inc
pop
adc
popa
and
push
in
push
dec
lods
pop
xchg
inc
gs
dec
or
xor
or
xor
imul
cld
xlat
enter
xor
sub
lods
fsincos
xor
push
cld
mov
cmp
hlt
lret
pop
inc
mulb
inc
sbb
lea
out
je
nop
xor
dec
pop
sbb
push
cmp
push
scas
jmp
faddl
mov
fsin
pushf
inc
inc
cmpsl
ficompl
mov
fst
mov
pop
fildl
imul
cs
xchg
pusha
pop
cmp
mov
mov
popf
repnz
add
pop
sub
xor
iret
mov
add
in
lea
or
outsl
hlt
jbe
adc
ss
mov
ja
add
adc
and
test
jmpw
and
rclb
pop
mov
out
adc
outsl
int3
jo
push
bound
jg
xorb
or
call
addr16
lods
pop
xchg
jo
rclb
inc
out
xor
mov
xor
dec
add
lret
flds
jmp
popf
scas
mov
aas
fwait
jg
loope
dec
stos
addr16
jae
sbb
lcall
pushf
fimuls
out
xchg
int
adc
or
outsl
jno
pop
shlb
divl
lcall
into
push
xor
loop
cld
mov
and
icebp
xchg
xchg
xchg
pop
movsl
xchg
pop
inc
xor
pop
push
cmp
and
scas
jmp
sbb
xchg
xchg
out
mov
lret
fimuls
sub
icebp
xchg
lahf
pop
aad
mov
mov
pushf
scas
pop
cld
ja
jl
push
mov
push
ja
ret
sbb
mov
pusha
insl
fdivs
fmull
add
inc
push
mov
mov
add
popa
mov
push
movsb
mov
or
jbe
pop
inc
fnstcw
and
aam
test
jg
jge
negb
pop
add
lret
scas
and
idivl
or
xor
dec
push
mov
pop
imul
jg
push
mov
push
cmc
lods
ffree
loope
orl
testl
mov
int3
shll
popa
cs
lods
ficomps
xlat
jl
les
adcb
int3
dec
pop
das
dec
inc
imul
stos
pusha
adc
je
sub
push
adc
lea
in
data16
arpl
out
adc
pushfw
lods
subb
mov
daa
ljmp
fildll
push
or
shrb
daa
add
sbbb
sub
addr16
jbe
or
std
insb
xchg
add
xchg
cmpsb
pop
xchg
mov
int
insl
loope
or
inc
mov
pushf
call
leave
xchg
pop
mov
test
push
mov
int3
push
lret
xchg
pop
push
sbb
fcomi
push
lds
dec
mov
cmp
scas
nop
je
insb
push
xchg
xchg
push
popa
xchg
outsb
hlt
jl
pop
into
out
int
add
out
out
xchg
push
or
and
jecxz
inc
ja
dec
lds
pusha
mov
add
sbb
lret
inc
ret
imul
packuswb
mov
jb
jo
xor
sarl
adc
iret
pushl
cmpsl
inc
inc
es
pop
xor
in
dec
jns
fwait
loope
fwait
mov
popf
push
pop
sbb
dec
out
popf
add
inc
cmpsl
pop
test
scas
jmp
pop
inc
iret
clc
xchg
mov
sbb
mov
sbb
ffree
cld
cwtl
jo
test
inc
test
jle
xorl
cld
inc
jb
fwait
push
sbb
jge
push
cwtl
xor
mov
dec
push
leave
addb
dec
cmp
xlat
outsb
clc
outsl
sub
xchg
sub
adc
adc
jnp
jmp
call
dec
mov
pop
lods
push
jle
mov
xchg
add
leave
lret
xchg
mov
push
stos
jg
scas
and
lret
out
mov
loop
cmp
push
sub
xchg
inc
or
arpl
lds
add
ja
xchg
hlt
mov
jl
jle
xchg
dec
daa
fldcw
loopne
out
aam
cmp
out
mov
pop
push
scas
push
mov
and
sub
and
cmp
imul
test
xchg
enter
imul
add
mov
int3
and
push
lea
mov
inc
xchg
sahf
stos
add
cmp
cmpsl
lods
mov
je
xor
xor
mov
outsb
pmulhuw
ret
inc
or
xchg
mov
pop
or
add
fnstenv
sub
clc
inc
std
cmp
stc
stos
or
in
scas
inc
pop
dec
xor
ds
aad
in
dec
sar
divb
lods
add
loope
sub
inc
xchg
push
mov
inc
xchg
add
push
jb
push
adc
inc
sahf
push
pop
jmp
insl
test
sahf
xor
push
je
cmpsl
les
or
mov
xchg
pop
movsb
lds
jge
inc
mov
es
xchg
and
add
mov
movsl
iret
shr
dec
mov
mov
call
or
inc
add
sub
pusha
in
or
add
shl
pop
into
cmp
inc
movlps
test
inc
xchg
inc
add
test
sub
mov
aam
movsl
lds
ret
loope
inc
daa
push
stos
and
outsl
ficomps
scas
dec
call
add
xchg
aad
ret
dec
lret
shlb
xor
sub
insb
push
cmpsl
es
adc
scas
cmpsl
jp
aam
dec
sub
outsl
inc
jno
lahf
int3
jno
or
and
hlt
xor
aaa
sub
mov
push
adc
sbb
jbe
jecxz
int
adc
sbb
push
sbb
push
cmpsl
std
mov
stos
int
fdivs
pop
inc
je
inc
ljmp
inc
jnp
mov
movsl
xchg
jmp
aaa
mov
or
ss
push
jnp
sbb
adc
mov
xchg
scas
sub
lods
lret
nop
cmp
daa
mov
dec
outsl
aas
mov
jmp
xchg
cmpsb
jg
cmpsb
ret
ret
fwait
or
pushf
push
mov
add
mov
test
int3
dec
adc
fdivl
loope
sbb
into
clc
test
andb
lods
jmp
cld
aam
lea
mov
movsb
and
xchg
mov
mov
pop
jle
and
js
xchg
jnp
stc
repz
inc
aas
insb
lret
cmpb
jno
sub
movsl
sbb
push
add
cmp
add
mov
pop
xchg
lods
leave
jbe
aaa
adc
push
popf
lock
pop
adc
sub
fyl2x
movsl
mov
imul
mov
sub
loope
sub
repnz
test
mov
cwtl
movsl
popf
mov
cltd
getsec
fildl
cmp
pop
les
add
and
sub
idiv
dec
mov
inc
cmp
add
loope
jbe
stc
lcall
adc
addr16
jnp
in
cmp
mov
imul
xor
sub
pop
sub
in
jecxz
popa
idivl
ret
xchg
adc
pop
dec
fisubl
fstpt
cmp
test
cs
sbb
jns
fdivrl
jmp
lods
inc
sbb
inc
xchg
xor
jnp
adc
sbbb
rcrb
ret
xchg
andl
ret
sbb
sub
mov
inc
out
lock
test
push
rorl
lds
sbb
aad
imul
and
pop
es
lcall
out
aad
add
or
push
dec
jmp
dec
test
pop
inc
mov
cmpl
push
pop
insl
cmp
xchg
lahf
jecxz
cld
hlt
or
loop
popf
stc
sub
mov
xor
push
loop
jb
lods
sub
mov
sbb
sahf
ret
jmp
nop
out
ret
pop
scas
loopne
jge
repz
push
mov
and
inc
les
es
dec
out
aam
movsl
pop
cmpsb
push
dec
push
cmp
mov
loope
and
jne
push
out
std
push
mov
enter
pop
hlt
fstpl
insl
mov
or
imul
mov
test
loopne
fisttps
push
xchg
mov
mov
fisubrs
mov
xchg
pop
add
mov
test
adc
rcrb
cmp
add
mov
xlat
loop
dec
dec
push
push
js
ja
andb
popf
testb
sub
aaa
sub
xor
sarl
js
lahf
std
cltd
mov
repnz
fsubrs
imulb
loopne
test
dec
int3
sbb
mov
lds
or
sub
orl
lods
add
push
shrl
div
aam
push
jg
jecxz
lahf
outsb
cmp
jno
cmp
adc
pop
xor
ss
lahf
out
mov
jp
add
pop
out
adc
inc
adc
mov
push
cltd
and
hlt
pop
cmp
push
icebp
jns
into
and
int3
lods
jbe
repnz
lcall
mov
sub
push
dec
jns
adc
jp
scas
test
push
adc
dec
outsb
pop
xchg
xor
loopne
repz
mov
cmpsl
cmp
popl
add
jp
inc
push
inc
call
sub
stos
mov
cltd
push
stos
xchg
test
jge
je
mov
scas
add
pop
lds
shlb
jl
or
in
and
gs
stos
dec
push
adc
loop
clc
lea
out
and
mov
iret
mov
sbb
inc
fs
jns
ret
iret
imul
in
nop
jmp
mov
outsb
out
std
scas
cmp
je
sbb
lret
fs
cltd
xchg
dec
in
out
enter
outsb
xor
inc
mov
mov
xlat
stos
and
mov
jg
inc
xlat
push
andb
inc
aad
pop
adc
mov
das
and
pop
fcoml
xchg
pop
cmc
push
xchg
xor
jecxz
sbb
jg
sarb
push
push
add
andb
push
jno
test
and
mov
dec
jno
imul
imul
repz
frstor
inc
or
fists
cmc
pop
mov
pop
mov
pop
popf
sti
aas
cltd
pusha
test
mov
or
sub
cmp
push
dec
push
jno
out
jae
jmp
push
les
call
inc
rolb
jp
in
pushf
dec
push
xchg
rorb
mov
out
ja
in
dec
das
scas
inc
nop
fdivl
pop
pop
ja
fmuls
sub
xor
mov
or
rcll
xor
add
sbb
xchg
xchg
call
jp
xchg
add
mov
outsb
call
mov
and
mov
fcompp
cltd
or
cs
and
fimull
out
ljmp
test
mov
pushf
jmp
sub
sub
sbb
xchg
inc
shll
cmp
in
daa
adc
aas
xor
add
cmpsl
jb
adc
pop
mov
sub
int
adc
lock
test
and
fldenv
push
mov
sbb
aam
pop
jnp
jne
test
in
inc
adc
call
dec
xor
in
push
fiaddl
cmpsb
mov
int3
jl
pop
shll
xchg
aaa
testb
mov
sub
add
pop
pop
fcom
xchg
mov
jo
inc
out
ljmp
cltd
jl
push
xchg
sbb
pop
imul
movsl
imul
mov
outsl
xor
adc
inc
mov
sub
call
gs
add
add
or
adc
mov
pop
dec
fdivs
or
or
push
ret
movsb
pushl
movsl
cmc
xchg
jo
push
fwait
mov
loope
cmc
mov
xor
xor
mov
outsl
ret
sbb
cmp
scas
inc
shll
pop
fcom
inc
aas
ss
test
push
add
in
dec
fwait
lds
dec
and
add
jp
out
repz
dec
jg
fstps
subb
fdivl
add
lock
add
mov
add
ret
pop
in
inc
xchg
sbb
xor
cmp
sub
testl
adcl
xor
and
cltd
mov
mov
rolb
cmpsb
nop
pop
stos
pop
xor
or
inc
xchg
test
call
cmp
push
sub
mov
dec
ljmp
lret
push
pop
jae
dec
das
sbb
sub
sbb
jmp
sarl
sub
ljmp
lea
cli
dec
pop
clc
add
lret
rolb
loopne
jne
sets
scas
sub
jbe
mov
add
jns
gs
sbb
lcall
adc
mov
fbstp
dec
mov
stos
xchg
repz
stos
inc
add
xchg
aam
out
jns
test
mov
ss
into
cmp
sbb
adc
add
sub
or
sbb
insb
dec
xchg
aad
arpl
hlt
push
mov
xor
sbb
sub
movsb
push
adc
incl
mov
mov
mov
or
daa
ret
inc
cwtl
pop
jp
adc
cmp
cmp
xlat
mov
gs
sub
cmp
lret
les
xchg
jne
pop
insl
add
dec
xor
mov
or
jmp
cmp
scas
outsb
or
xor
cmp
mov
mov
pop
adc
mov
pop
or
fidivs
out
sub
jp
mov
ret
mov
nop
jno
fsub
jno
lods
iret
xor
out
pusha
sub
rcrb
fmull
sbb
enter
test
hlt
mov
xorl
or
mov
xchg
fwait
dec
out
lret
adc
push
icebp
mov
dec
adc
stc
sub
in
dec
cmp
pop
cmp
lods
or
adc
aas
pop
push
sub
mov
jmp
int
gs
add
jne
and
lods
je
loop
inc
or
pop
xlat
insb
mov
dec
sti
mov
mov
inc
pop
fdivrl
cwtl
movsl
clc
and
push
and
jb
jns
test
dec
xor
adc
bound
ffree
mov
lret
adc
ljmp
mov
cmp
in
or
mov
sub
test
pop
inc
leave
adc
push
sub
cmpsb
pop
mov
dec
lret
sub
mov
mov
jb
clc
jp
in
je
lock
subl
cmp
push
push
outsb
jge
stc
mov
xchg
xor
inc
outsl
test
xor
cmp
push
mov
or
jb
ja
jp
incb
add
fwait
jge
lock
lods
pop
sbb
popa
add
sub
sahf
mov
pop
dec
arpl
sub
movaps
push
jl
add
sub
pop
imul
mov
stos
lea
fdivrs
mov
and
popf
cmp
sub
rcll
xlat
test
loopne
movsl
cmp
mov
imul
int3
shl
xor
fldt
shll
or
out
int3
notl
outsb
mov
dec
or
mov
loope
addr16
pop
xchg
mov
loopne,pn
fstps
jl
loop
xchg
push
loopne
into
cmpl
bound
gs
in
mov
xor
mov
movsl
leave
sbb
into
mov
ds
xabort
xor
xchg
mov
mov
fsubs
scas
jb
outsb
jg
jmp
insb
movsb
dec
in
mov
fwait
test
fistpl
jo
cmpsl
cmp
jae
inc
imul
cmpsb
jnp
js
mov
rorb
bound
cmp
fstpt
sub
in
popa
sub
call
sub
ljmp
in
cmpsl
mov
aam
sub
out
mov
shlb
cmc
movsl
and
cmpsb
mov
andl
cmpl
loopne
inc
jne
dec
movsl
fsubs
dec
mov
push
sbb
sbb
jp
loopne
mulb
mov
xorl
rcll
cmpsb
lods
fsub
test
sbb
mov
lret
iret
dec
dec
loopne
pop
cmpsb
sbb
shll
clc
fisttpll
xchg
mov
or
getsec
scas
xchg
ficompl
movl
mov
xor
and
setnp
jno
bound
stos
jbe
imul
jp
pop
push
ret
bound
jb
loope
xchg
add
mov
insb
dec
int
add
cs
sub
mov
push
add
mov
fisubl
mov
sub
mov
popa
xchg
or
movsb
lahf
xchg
jp
cld
loop
icebp
jb
inc
pop
les
lret
fisubrs
push
call
push
xchg
xor
jno
gs
push
push
sbb
xor
inc
adc
lods
in
dec
and
mov
ss
lods
xchg
cmp
jo
rolb
pop
and
pop
sbb
inc
mov
or
jp
xchg
cmc
adc
int3
mov
call
ljmp
lds
cld
cmp
gs
mov
in
mov
fldz
sub
movsb
es
aad
mov
cmpsl
xchg
and
sbb
lods
xchg
sub
cmp
pop
dec
xchg
cli
nop
sbb
mov
dec
mov
push
xor
inc
std
add
jle
jge
mull
into
jae
mov
push
cmp
pop
or
lahf
add
stos
inc
sub
xor
and
adc
push
or
in
stos
popf
fisttps
popa
sbb
je
mov
xor
iret
inc
jp
adc
cmpsb
or
mov
or
inc
loop
dec
nop
add
lahf
stos
loop
mov
popl
jp
adcb
test
or
sub
and
mov
cmpxchg
lret
pusha
ss
mov
mov
inc
push
add
lahf
cltd
je
fldenv
test
xor
cmp
jecxz
inc
jbe
mov
xchg
add
rorb
dec
jno
sub
jo
pop
sbb
je
scas
movsb
dec
rol
rolb
adc
out
lea
movl
orl
sub
push
and
cmc
outsb
icebp
mov
jae
inc
jnp
testw
xorl
out
fwait
adc
scas
jp
aam
mov
subl
lret
push
mov
bound
arpl
mov
lock
std
ret
mov
or
das
mov
cmp
cld
sarl
cmc
imul
add
sbb
sbb
rorl
movsb
or
jns
xor
fsubs
in
rcrl
push
sbb
pushf
adc
sub
mov
or
stos
mov
aaa
scas
jl
out
mov
stos
inc
pushf
jo
or
mov
push
nop
pop
cmp
imul
inc
lock
cmp
cmp
jnp
divb
adc
mov
insb
mov
xchg
and
inc
xchg
xchg
mov
out
pop
mov
rcl
jns
addl
js
mov
xchg
cmpsb
pop
mov
mov
daa
mov
in
add
or
adc
push
dec
pop
and
call
push
jge
mov
dec
push
mov
sub
mov
jmp
cmp
out
jmp
xchg
and
aaa
inc
add
int
sub
fs
adc
push
faddl
fstps
sub
mov
dec
mov
cmp
or
pop
add
sub
mov
adc
call
ja
dec
stos
xchg
rcll
mov
mov
es
lret
out
dec
sbb
insl
push
push
pop
mov
jl
push
test
scas
or
movsb
es
lods
cwtl
iret
xchg
sarl
cmp
xor
pop
imul
pop
xor
call
pop
jb
popa
pop
repz
xor
jl
mov
jbe
adc
in
adc
dec
mov
movd
cltd
bound
xor
xchg
adc
cmp
xchg
sub
pop
push
xchg
xchg
pop
adc
jecxz
sbb
push
pop
lcall
pop
jmp
pop
fcmove
xchg
xchg
cmp
cmc
jl
js
dec
aaa
sub
ret
xchg
adc
push
dec
xchg
lock
cmp
jge
inc
mov
ljmp
cmpsl
cld
jno
loopne
mov
pop
pop
insb
iret
mov
nop
sbb
push
lds
lcall
mov
leave
sub
mov
pop
and
xor
std
movsb
sbb
jp
mov
fiadds
gs
popa
lock
sbb
jo
jno
bound
lahf
lcall
repnz
mov
cmp
pop
jmp
jno
aas
or
xchg
xchg
cmc
dec
jle
and
mov
test
shll
shrl
push
loope
leave
call
nop
inc
int3
fdivrs
jno
shr
aas
xor
repnz
mov
insb
daa
mov
mov
movsl
subb
push
fstp
fcmove
or
inc
mov
aam
push
dec
out
xchg
shrl
fldcw
int3
dec
sub
push
or
jl
icebp
fs
or
data16
into
sbb
ss
fbld
fwait
cld
add
mov
adc
cmp
adc
les
xchg
xchg
mov
mov
data16
xor
cltd
xchg
shl
push
rclb
adc
popa
or
push
aas
shrl
popa
imul
shlb
mov
int3
jp
xchg
mov
stos
or
fidivs
push
jge
adc
adc
xor
inc
sbb
jmp
and
pop
nop
fstps
push
cmp
mov
in
pop
xchg
ret
push
or
adc
arpl
cld
into
ljmp
repz
cltd
pop
sarb
aam
sbb
stos
jne
idiv
xlat
pop
sbb
loopne
mov
jnp
or
fsts
arpl
popl
not
lock
push
mov
cs
lea
jp
xchg
mov
xchg
pop
mov
mov
icebp
or
lahf
adc
push
lea
mov
loop
or
mov
test
sbb
cld
and
inc
inc
scas
inc
mov
pop
mov
jmp
shl
pop
mov
stc
mov
aad
push
les
jnp
scas
sbb
sub
test
ret
iret
inc
imul
mov
bound
out
sarl
mov
cmp
jno
nop
push
or
xor
aad
fsubp
adc
xor
pop
dec
or
into
icebp
dec
mov
sub
push
push
adc
xor
or
lods
lret
xor
icebp
lcall
pop
xchg
pop
aaa
jns
fidivrs
sbb
sarb
push
sub
roll
mov
xlat
mov
pop
adc
jmp
fisttpll
mov
out
aas
mov
and
clc
in
jge
cwtl
mov
fneni(8087
sbbb
cmpsl
and
dec
jae
push
sub
cs
mov
inc
and
rcrl
stos
out
sbb
xchg
push
mov
cs
lds
sbb
push
js
lret
mov
mov
cmc
das
cli
xor
int
pop
test
fsubl
aas
fcoml
ror
adc
sub
out
and
fwait
jae
mov
jae
push
out
sahf
and
xor
popa
or
push
sub
xchg
movl
repz
icebp
pop
mov
push
out
fs
sub
and
ja
sub
and
or
fcoml
daa
jnp
pusha
js
clc
cmpsl
mov
stos
cmpsl
daa
imull
ret
leave
int3
jecxz
les
aas
subps
aaa
dec
mov
push
mov
cmp
sbb
mov
ss
push
lahf
inc
pop
add
lret
loopne
xor
adc
mov
add
pop
jmp
push
icebp
jle
es
and
mov
inc
push
fdivrl
shl
shlb
dec
daa
pushf
mov
add
add
je
mov
shll
shlb
adc
jecxz
loopne
pusha
pop
cmp
fisttpl
adc
jp
add
cltd
cwtl
arpl
push
push
mov
imul
cli
test
imul
mov
push
mov
cmp
lcall
sbb
hlt
sub
pop
xchg
pushf
loop
inc
sbb
inc
bound
push
aam
xor
in
stos
in
xchg
inc
cwtl
sub
xor
xor
movl
insb
test
cmp
imul
lea
cmc
xchg
je
jbe
addb
pop
mov
push
sbb
push
call
pop
xor
jnp
sbb
sbb
gs
daa
data16
push
test
dec
mov
in
xchg
dec
test
cmpsb
xchg
imulb
mov
ljmp
into
daa
leave
xorb
and
in
rcr
dec
or
inc
or
cmp
xor
jno
mov
push
push
pusha
shl
sub
mov
je
into
dec
pop
jb
cwtl
xor
pop
nop
fcomps
movb
and
shlb
in
jle
mov
sbb
or
loop
pushf
out
lods
or
push
movsb
add
maxps
sbbl
adcl
stos
push
mov
sub
fstpt
cld
outsl
xchg
adc
mov
cmpsb
and
js
cmp
push
sub
mov
es
cmpsb
add
dec
cmpsb
xor
push
add
mov
lret
pop
sbb
lahf
scas
jb
and
lea
push
pop
subl
pop
aad
push
dec
mov
cmp
out
test
or
sub
sub
cmp
call
add
mov
mov
lret
adcl
adc
js
jb
lods
iret
or
xacquire
scas
loop
or
inc
daa
sarb
xchg
cmp
mov
inc
loopne
xlat
enter
addl
lock
and
fistl
push
ljmp
pop
xchg
lret
int3
mov
mov
add
icebp
lods
fbld
ljmp
jae
imul
fistps
outsb
mov
repnz
mov
fmuls
xor
and
leave
lods
sub
jnp
lcall
popl
add
sub
es
jmp
pusha
lock
pop
xchg
cmc
jecxz
shrl
ret
or
movsl
cmpsl
stc
xchg
push
call
imul
fdivs
gs
loope
jmp
pop
pop
push
jmp
sub
in
stc
loope
sub
and
popa
push
daa
fidivl
sarl
cmp
xor
in
mov
inc
stc
sbb
and
xor
repz
dec
test
stos
lea
mov
mov
cmp
or
mov
ret
lds
insl
sbbb
aam
jnp
sub
push
jp
mov
outsb
mov
addl
fdivrl
xchg
stos
fstpt
jg
out
loopne
pop
or
mov
inc
aam
pop
sbb
inc
mov
mull
adc
mov
pop
sbb
cmp
pop
movsl
out
push
addb
sub
jge
mov
sbb
xor
pop
add
dec
in
mov
push
repz
pop
xor
sub
adc
loope
xor
adc
mov
inc
pop
dec
fwait
popa
sarb
cmpsl
push
sbb
daa
sahf
lret
pop
push
fiaddl
mov
xchg
dec
add
sub
in
or
lods
pop
fisttpl
push
push
aam
xchg
push
push
jo
imull
popf
aaa
cli
in
jle
or
inc
jo
scas
mov
fcoms
mov
loopne
subb
pop
sub
push
test
xor
pop
and
cmpsb
in
insb
cmpsb
cmp
popa
imul
xchg
jo
int3
pop
push
sahf
pop
or
aad
adc
sbb
loop
out
adc
ret
sbbl
rcl
mov
fldcw
pushf
add
lock
xchg
dec
push
fwait
in
in
push
mov
jbe
dec
test
insl
gs
dec
dec
sbb
xor
rcll
xchg
mov
mov
dec
push
xchg
movsl
stos
sub
test
or
sub
push
cs
js
fidivrl
int
fnstsw
xchg
mov
xor
add
mov
lods
xchg
mov
mov
es
fwait
fs
gs
jp
aas
icebp
insl
pop
or
xchg
xchg
push
dec
adc
jb
aad
je
inc
push
xor
rcrb
out
pop
mov
mov
rcl
pop
dec
cmc
in
inc
leave
adc
popf
mov
aam
mov
scas
add
inc
sbb
cmp
or
daa
ss
std
sbb
sbb
pop
js
jns
stos
repnz
or
int
sti
adc
cmpsl
aad
scas
jle
dec
push
aaa
jp
clc
ljmp
pop
pop
xchg
sub
inc
hlt
lea
mov
bound
xor
scas
mov
push
jne
xor
or
shll
mov
arpl
insl
and
mov
push
pop
sahf
in
gs
xor
or
xlat
jo
in
nop
scas
xor
xor
mov
xchg
fs
test
push
sbb
cltd
mov
push
sbb
push
nop
imull
jb
dec
in
lds
arpl
jbe
sub
outsb
dec
mov
test
add
out
icebp
sbb
push
popa
cmpsl
lea
addr16
dec
push
dec
and
mov
pop
call
sbb
mov
adc
hlt
cmp
adc
mov
shl
mov
sub
pop
sub
into
add
jnp
rcrl
scas
jmp
add
imul
add
cmpsl
mov
or
inc
mov
push
add
das
push
jecxz
xchg
in
cltd
cld
shll
mov
dec
adc
cmc
sbb
cmpl
xor
xor
inc
cmp
jnp
and
sbb
mov
push
inc
in
mov
add
mov
jo
repz
insl
jle
jb
mov
lods
cwtl
int
popf
add
sbb
pop
push
adcl
dec
mov
cmp
pop
adc
push
sar
ljmp
popl
addb
stos
jb
xchg
sub
jns
mov
cmp
cmpl
icebp
xchg
xor
mov
cltd
xor
adc
mov
dec
add
in
faddl
inc
push
popf
inc
xor
sbb
and
stc
aad
enter
cmpsl
mov
lea
mov
lds
shlb
inc
dec
lods
dec
sti
jecxz
pop
out
sar
mov
mov
lea
std
mov
lea
and
push
dec
shl
mov
jae
push
iret
adc
repnz
sub
sti
frstor
jae
mov
sbb
push
ljmp
mov
adc
cmp
dec
mov
or
jb
imul
pushf
pop
add
pop
or
xchg
aam
mov
add
adc
es
push
shl
xchg
ja
test
pop
cld
adc
inc
cmpsb
scas
xchg
push
fdivl
stos
add
es
jl
push
push
js
hlt
lea
aad
test
rorl
sbb
push
adc
outsl
stos
and
dec
pop
inc
xor
test
mov
mov
dec
hlt
shrb
pop
adc
xor
or
lret
stos
inc
cmp
ficomps
movsl
push
fsubl
cmp
in
test
pop
ss
mov
dec
jl
mov
fidivs
push
mov
fisubrl
jno
inc
mov
or
cmp
xchg
sti
mov
xor
push
jbe
and
jmp
mov
pop
pop
testl
out
mov
cmpsl
mov
mov
dec
push
pop
rorb
xchg
lcall
pop
ss
iret
xor
ss
loopne
outsl
loope
cmp
fiadds
pop
xor
pop
mov
mov
imul
inc
pop
add
cmp
sahf
xchg
xlat
insl
stc
pop
ds
mov
adc
stos
dec
fstpl
ret
push
in
ds
outsl
mov
outsl
mov
ljmp
test
adc
jno
xchg
xchg
jecxz
jle
cmp
lods
xor
pushf
sub
rclb
sti
dec
daa
icebp
push
inc
outsb
inc
pop
dec
sub
cmp
fs
std
andl
xor
inc
adc
inc
and
cwtl
pop
add
int
mov
movsb
cltd
loop
lods
pushf
enter
mov
or
mov
sbb
adc
fldenv
pop
push
cltd
pop
movsl
or
sbb
jp
std
dec
or
mov
insl
push
popa
ljmp
mov
mov
jp
fisttpll
mov
test
cmp
pushl
mov
xor
loope
sbb
add
jmp
fisttpl
popa
enter
outsl
mov
cwtl
test
nop
dec
cmp
xor
aam
dec
arpl
xchg
cmp
adc
std
inc
fchs
imul
out
and
stos
nop
sbb
scas
into
jmp
mov
imul
cmp
rcrb
insl
fists
jmp
fsubrl
call
pop
dec
stos
mov
sub
popa
jb
fmull
push
pop
or
add
xor
roll
and
cmp
xlat
enter
bnd
xor
jp
jo
dec
sub
sub
mov
adc
or
xor
pop
mov
xor
movsl
and
nop
mov
cmp
mov
xchg
and
fsubrs
add
and
faddp
fstps
fscale
orb
call
loopne
daa
fiadds
mov
add
sub
in
ret
mov
mov
mov
lds
cli
sub
mov
and
xchg
xchg
out
hlt
add
lods
fidivrl
scas
add
test
xor
xchg
xchg
sub
adcl
aaa
stos
push
jne
rorl
xor
sbb
notl
jno
lock
repz
popa
fucomi
aas
subb
mov
mov
and
push
stc
sbb
aaa
mov
adc
fsubs
mov
dec
mov
dec
jmp
inc
pop
mull
or
ja
lret
cmp
or
and
ds
cmpsb
lret
hlt
dec
jb
fstp
imul
aas
jae
mov
lds
scas
jae
push
insb
mov
pop
mov
imul
into
adcl
dec
ljmp
and
inc
push
jbe
cli
int
mov
mov
addb
jp
xchg
sub
mov
add
jl
jge
xlat
cmp
push
mov
mov
fcoms
mov
test
iret
mov
mov
jge
jns
movsb
fwait
sbb
sbb
incl
or
popf
push
adc
and
pop
scas
lock
xchg
add
mov
jbe
ror
push
mov
pop
and
roll
jmp
xor
dec
loop
movsl
jb
lods
cmpsl
pmulhw
push
leave
xor
pop
xchg
arpl
pop
or
std
in
mov
fdivp
aas
pop
pop
push
jnp
or
daa
mov
mov
bound
movsb
shlb
push
fistps
push
sbb
addl
sbb
inc
mov
js
cwtl
outsb
jl
daa
dec
lret
out
decl
shrb
xor
xchg
sub
xorl
fdivl
push
mov
fldt
xchg
loopne
and
inc
xchg
out
adc
js
mov
mov
fstpl
fildl
mov
xchg
and
dec
stc
push
into
jnp
cmpsb
call
pop
incb
cmpl
imul
pop
jl
xchg
inc
aam
fldcw
insb
dec
imulb
jmp
pop
sarb
xor
pop
lds
inc
xchg
jno
popa
jmp
hlt
fwait
call
add
and
sub
jae
dec
push
lock
adc
out
leave
stc
scas
push
lret
leave
bound
sbb
out
adc
out
dec
negb
xor
fdivl
and
in
insb
jo
addb
mov
lcall
rol
sbb
mov
mov
mov
dec
fadd
cld
pop
pop
jle
pusha
sub
imull
pop
push
fwait
rorb
or
sbb
ljmp
int
cmpsb
sbb
mov
clc
mov
push
cmpsb
push
xchg
jg
ljmp
sbb
xlat
mov
cmp
ja
jne
cwtl
dec
aas
insb
lret
sahf
cmpsb
mov
xchg
add
stc
lds
xchg
ja
or
call
pop
pop
stos
mov
mov
dec
pop
inc
sub
mov
push
fdivl
icebp
out
xor
dec
sti
sub
push
pop
in
xadd
adc
xor
insb
sub
jnp
lcall
xor
out
add
daa
jae
aam
in
xor
xor
fildl
pop
fstpl
mov
int
and
mov
and
lahf
icebp
push
xor
lcall
cmpsl
add
sbb
xchg
mov
and
jmp
subb
xchg
push
push
sti
dec
lahf
adc
pop
ljmp
push
push
sbbl
ds
jl
jmp
rcl
and
ljmp
cmp
es
cwtl
and
and
jp
mov
cmp
ss
out
popa
sbb
out
inc
dec
lods
pop
pop
popa
or
xor
test
push
in
adc
dec
pop
pop
ljmp
clc
mov
daa
inc
jmp
dec
pop
jl
mov
fbld
fstl
jno
pusha
mov
in
xor
and
lods
cmp
cmp
adc
jg
xor
dec
mov
xchg
cmp
or
jne
fs
popa
adc
rolb
cwtl
push
cmp
mov
xchg
icebp
and
clc
scas
pop
lods
int
push
mov
shrb
nop
pop
add
jmp
and
ret
adc
jecxz
jle
inc
pushf
mov
mov
xchg
mov
out
lods
test
enter
rolb
mov
shl
mov
dec
into
arpl
test
or
pop
stos
adc
imul
sbb
add
stos
sbb
fidivrs
lea
or
inc
push
push
vcvttss2si
enter
xor
lods
imul
loop
enter
fldcw
sub
daa
aam
pop
sub
cmpsl
js
push
or
addl
adc
xchg
push
lods
scas
dec
rcrl
movsl
js
fisttpl
inc
inc
mov
in
sar
mov
cmpsl
stos
xchg
js
nop
inc
in
push
and
out
in
sarb
sti
push
ficomps
push
cli
inc
cmpsb
pop
sub
xchg
repz
ljmp
sub
jecxz
and
lret
dec
test
lcall
ja
mov
add
add
or
add
lahf
imul
pop
dec
stos
push
addb
xor
je
cli
and
dec
or
sarl
fnstcw
aad
mov
xchg
xchg
shrl
divl
pop
mov
popf
lret
cs
xchg
nop
or
and
lea
or
cltd
fcmovnbe
push
mov
adc
mov
adc
dec
inc
push
inc
std
repz
jb
xchg
jns
insl
in
movsl
std
inc
neg
shr
jne
vfmadd132ss
into
es
out
mov
fucom
test
cltd
ret
out
aam
hlt
xchg
and
jmp
push
pop
mov
je
push
and
repnz
icebp
shll
enter
icebp
mov
mov
int3
xor
dec
mov
in
fdivl
imul
add
pop
scas
and
icebp
popa
scas
jecxz
inc
or
and
out
arpl
addr16
xor
hlt
cwtl
leave
stos
cmpsb
rorb
sti
mov
xorb
cmp
mov
inc
mov
cs
xor
and
in
mov
and
daa
mov
inc
adc
cmc
addr16
jae
nop
jne
dec
inc
and
popf
mov
jb
lock
sbb
pop
adc
inc
mov
sbb
xor
ret
cmc
inc
stos
fstp
dec
repz
das
insb
add
pop
sbb
jmp
inc
inc
lcall
or
fistpll
adc
in
rcrb
adc
gs
pop
jno
iret
jmp
push
test
xor
cmp
es
ss
push
dec
test
push
xor
cmp
int3
aam
lret
mov
mov
es
or
inc
xchg
mov
cmpsb
sbb
bound
mov
inc
add
mov
push
andb
scas
adc
aam
and
lret
sti
testl
popf
sub
lcall
ss
mov
lahf
sub
cmp
repnz
fmul
sub
popl
andb
jno
sti
in
test
mov
jo
adc
sbb
cmc
push
lret
sbb
mov
jbe
push
loope
push
xchg
or
add
add
dec
dec
push
inc
insl
es
es
mov
cmp
add
or
mov
out
inc
testl
fsts
adc
inc
adc
int3
gs
test
pop
dec
jb
data16
mov
ret
xchg
bound
add
pop
fcoml
vmread
push
mov
add
and
sub
cmp
inc
dec
es
or
idivl
pop
cld
lret
jmp
jo
or
add
je
xchg
cmp
fbstp
iret
lods
mov
hlt
mov
insl
test
lret
inc
int3
rcrb
sarl
call
out
ret
ds
and
mov
inc
mov
enter
cmc
mov
movsl
xor
dec
jne
push
push
in
scas
lahf
out
push
fs
loop
daa
adcb
rsqrtps
fsubs
sar
in
ja
jbe
pop
push
jg
rorb
les
jp
inc
push
xor
mov
stos
mov
or
pop
xor
xor
daa
jmp
xchg
and
cwtl
pop
gs
push
xor
in
lcall
dec
pop
lea
pop
cmpsb
mov
inc
push
mov
cltd
jne
and
and
ror
clc
inc
or
adc
or
into
pop
mov
push
pop
sahf
sbb
cmc
in
lret
mov
sub
add
dec
add
addr16
sub
pop
sbb
jns
jbe
insb
insl
and
loope
lret
cmpsb
into
imul
insb
aad
icebp
xor
and
call
add
loopne
dec
push
sbb
pop
jne
mov
add
mov
lahf
push
push
and
loope
inc
mov
ja
xor
insl
ret
cmp
pop
mov
imul
lds
lcall
xchg
cmp
pop
or
js
das
insb
sbb
inc
icebp
lods
repz
dec
xor
xchg
pop
rorl
xchg
mov
enter
bound
pop
loope
adc
push
ret
lahf
stos
je
nop
push
xchg
and
addr16
mov
cmp
insb
loope
imul
add
sarl
outsb
out
or
mov
rcrb
rol
jp
jo
and
aad
je
mov
adc
subb
push
pop
sarb
inc
mov
in
jno
ret
mov
loopne
cltd
lret
or
mov
dec
insb
outsb
loop
jg
pushf
out
cmp
mov
clc
pop
dec
fcmovnu
adc
jo
daa
inc
cmp
or
gs
xor
punpckhwd
insb
mov
les
push
jge
adc
ss
or
sbb
xor
cmc
inc
pushf
xor
inc
pop
mov
or
inc
fwait
xchg
pop
into
repnz
mov
xor
jp
mov
ja
hlt
and
popa
or
mov
outsb
inc
xor
movsb
mov
adc
js
xchg
lods
icebp
lea
jo
adc
mov
cmp
inc
sub
fstpl
andl
add
cmp
ds
push
adc
cmpsb
sbb
cmp
ljmp
cmpsl
jo
out
add
enter
test
test
fnstsw
mov
push
and
mov
jecxz
leave
clc
fpatan
jo
xor
push
adc
add
cmp
push
dec
and
sahf
aad
popa
outsl
lods
xchg
mov
and
lods
sbbl
mov
mov
insb
or
dec
pop
test
scas
imul
sub
jle
jb
cmpsl
xchg
pop
mov
push
and
fs
into
pop
out
div
pop
int3
clc
subb
xchg
sub
repz
cmpsb
mov
mov
mov
fcomps
sub
movsb
jge
mov
or
loopne
sub
jno
push
and
cld
inc
outsl
outsb
and
lds
in
push
es
out
lds
out
xor
pop
loopne
fxtract
lret
bound
add
popf
pusha
test
jp
btc
sub
mov
jge
pop
mov
cmpsl
or
mov
mov
push
or
pop
shll
add
dec
les
sub
pop
push
popf
js
imul
movsl
insl
imul
daa
or
fxch
mov
xor
pop
loopne
mov
loope
inc
pusha
imul
push
cld
test
adc
xor
dec
push
enter
ret
mov
mov
jo
rcrl
repz
or
inc
sbb
popf
adc
stos
inc
mov
jbe
mov
mov
sti
jns
into
repz
cmp
sub
xchg
pop
icebp
sub
shll
or
dec
push
sub
push
daa
cs
push
xchg
jae
cmp
frstor
sub
mov
rcrl
clc
dec
or
aad
addr16
imul
xor
mov
lret
sbb
cmpsb
rol
mov
ds
xor
insl
out
add
mov
and
pop
jnp
adc
out
push
and
rcrb
sarb
add
fcoml
test
or
push
inc
test
or
scas
jno
mov
mov
lock
sub
cmp
dec
or
outsl
adc
pop
add
xor
in
jecxz
mov
mov
mov
aas
aaa
inc
or
mov
mov
mov
pop
scas
fiaddl
flds
sahf
adc
inc
sub
cld
push
shll
add
mov
jne
sub
dec
and
std
inc
out
daa
in
mov
sub
dec
add
mov
inc
adc
cmp
mov
outsb
xchg
nop
addb
mov
sub
inc
sbbl
leave
faddp
mov
in
xor
mov
mov
cld
int
mov
sbb
and
out
insb
push
mov
ret
jns
mov
push
xchg
lret
cmp
mov
je
pop
mov
test
pop
cmpsb
lcall
inc
mov
mov
call
roll
mov
cs
mov
push
ja
inc
addr16
sbb
jns
jle
jne
mov
frstor
xchg
outsb
adc
popa
nop
inc
sbb
mov
mov
adcb
add
loopne
mov
pop
sbb
push
lcall
mov
mov
rclb
hlt
int3
lcall
dec
test
adc
push
test
push
mov
popa
mov
loopne
mov
ss
movsl
cmpsb
and
jl
dec
mov
mov
push
rcrl
out
sbb
divb
leave
in
jg
pop
pushf
test
insb
aaa
jns
movsb
icebp
add
push
adc
add
mov
scas
and
xor
xor
mov
sbb
sub
sbb
sub
xchg
sub
jnp
lret
enter
dec
or
int3
xor
adc
roll
ds
sub
mov
xchg
adc
pop
sbb
lret
imull
icebp
sarb
jo
mov
cmp
jle
sbb
lret
adc
outsb
xchg
mov
bound
mov
fwait
hlt
cmpsl
dec
cmp
in
mov
xchg
mov
mov
cmpsb
xlat
aaa
inc
add
lret
stos
or
test
js
repz
jg
xchg
in
adc
pop
jle
out
jns
fs
in
inc
jns
jmp
jl
inc
inc
mov
add
xchg
repnz
lods
push
and
jno
xor
xchg
xchg
lods
mov
jnp
lret
push
push
or
mov
mov
mul
adc
ds
push
js
jle
addl
nop
pop
pop
bound
pop
ja
lods
enter
enter
mov
pushf
jg
xor
std
clc
sbb
push
push
int3
jnp
shlb
test
clc
add
sub
inc
pop
ja
enter
dec
sub
or
jecxz
je
out
push
sbb
imulb
sub
push
push
pushf
and
xchg
push
ret
insl
mov
xchg
daa
adc
lea
dec
leave
jae
ret
pop
bound
decb
add
pop
pop
out
fadds
xchg
xchg
mov
adc
push
pop
movsb
dec
pop
sub
xchg
testb
adc
sbb
and
loopne
das
xor
xor
sub
lret
daa
mov
adc
add
in
mov
push
push
test
test
cmp
push
inc
insl
push
push
or
xor
mov
pop
dec
add
bound
wrmsr
jg
mov
aas
pop
inc
mov
mov
push
push
movsb
cli
test
hlt
jbe
pop
insl
adc
mov
aam
test
xor
popf
iret
rclb
xchg
cs
icebp
addr16
dec
nopl
cld
ficompl
fisttpll
pop
mov
aad
mov
lods
inc
out
negl
mov
jae
test
push
dec
jg
bound
and
lock
sbb
cmp
aad
das
mov
cmpsl
aam
ficompl
sarb
clc
es
adc
jbe
movsl
cmp
jbe
and
imul
iret
call
sbb
pop
cltd
ficomps
sahf
test
cld
lahf
out
push
cmpsl
leave
ss
std
scas
int3
push
dec
ds
jg
lahf
iret
add
out
orb
push
jmp
out
les
or
inc
fcmovu
insb
mov
dec
and
push
pop
movsl
adc
aad
xchg
xchg
mov
xlat
sbb
std
adc
ljmp
aam
daa
jp
insb
lock
sarb
dec
cmp
push
cmpsl
mov
cmc
in
mov
mov
insb
jecxz
test
pop
repnz
pushf
test
shrb
xchg
mov
add
and
mov
inc
cld
inc
push
xorl
mov
and
mov
pushf
sbbb
adc
mov
mov
xchg
jmp
mov
loop
scas
dec
hlt
mov
or
std
xor
addr16
add
xchg
into
sbb
rcrb
sbb
daa
add
int
test
rcll
mov
pop
repz
jnp
pop
insl
adc
pop
dec
fcomi
add
inc
notb
dec
imul
mov
inc
lcall
outsb
push
pop
cmc
bound
inc
mov
hlt
repz
jle
ds
dec
in
stos
mov
or
xrelease
insl
mov
jno
shl
call
add
add
lock
movsb
sub
aas
dec
sub
lds
jns
inc
dec
adc
stos
stc
leave
outsl
xchg
icebp
cmc
cwtl
sbb
ret
and
cmp
adc
and
lret
test
lcall
inc
dec
mov
push
mov
stc
fisttps
shll
insl
ret
jg
jle
lds
fsubs
js
adc
es
stos
and
jae
mov
cmpsl
add
lcall
cmpsl
inc
icebp
out
add
and
sub
jmp
sub
rcrl
cmp
push
xor
aam
dec
negl
inc
int
movsb
sahf
or
lea
aaa
jb
add
lret
movsb
dec
loopne
fbstp
push
jne
push
sub
es
stc
dec
jnp
hlt
out
mov
pop
aad
iret
xchg
mov
adc
je
sub
pop
jno
pushf
shrb
xchg
cmc
add
sbbb
sub
push
adc
jo
dec
inc
jae
lahf
mov
push
and
push
adc
daa
lds
xchg
mov
hlt
gs
insb
arpl
je
xchg
and
andb
outsb
shl
xor
aad
fidivl
sbb
and
repnz
or
mov
mov
jle
out
or
mov
je
mov
mov
push
fsubrs
jecxz
insl
js
sbb
dec
ret
imul
cs
enter
pop
xchg
test
test
xchg
push
pusha
imul
ror
inc
insl
call
push
or
sub
xor
cld
and
test
lds
push
lds
movsb
jns
aad
repnz
lds
aaa
jg
inc
sub
ja
dec
ja
lret
cld
mov
movsl
add
cmp
enter
lret
gs
mov
dec
mov
mov
outsl
jge
cltd
mov
xor
fiaddl
loopne
push
in
out
xor
add
sbb
cmpsl
in
add
push
or
jnp
sbb
insb
sti
lret
and
icebp
cmpsb
hlt
sahf
mov
sub
xor
test
lret
movsl
addl
jmp
mov
cmp
in
sub
xor
sub
or
je
mov
iret
pop
insb
mov
xchg
adc
outsb
dec
inc
in
lcall
jge
add
loop
adc
sbb
popf
inc
sub
imul
cmp
in
add
popf
push
xchg
inc
jne
out
ret
jmp
sub
add
data16
mul
icebp
sbb
pop
arpl
xchg
loope
xchg
ljmp
adc
std
and
xor
aaa
jo
adc
movsb
pop
dec
addb
add
cmpsl
mov
cmpl
popa
repz
test
cmp
jnp
mov
pop
sbb
pop
aaa
xor
jge
mov
jne
adc
mov
icebp
in
popf
imul
jns
jp
jno
addr16
cmpsl
cmp
jae
insb
in
cld
push
jge
sbb
mov
cmpsl
lret
push
icebp
jle
out
push
add
adc
cmpsb
xchg
std
push
js
jns
fnsetpm(287
jle
xor
subl
jne
push
leave
adc
dec
push
les
arpl
lret
sbb
add
fwait
push
testb
bnd
lret
or
mov
lds
xchg
andb
pop
es
jge
stos
mov
mov
xor
dec
sbb
dec
mov
shlb
cmp
sarl
push
sub
pop
pushl
ss
lret
fbld
pop
and
lock
popa
sti
nop
adc
lods
pop
aas
jb
adc
add
fdivr
arpl
sub
jo
test
arpl
mov
sub
sub
mov
push
int3
les
cmpsb
call
aaa
bound
shlb
add
or
push
jg
movsl
incl
lcall
dec
jno
adc
or
sub
mov
jp
sub
jge
ss
inc
adc
bound
cld
nop
shll
aaa
cli
arpl
fcomip
jbe
inc
aad
lahf
popa
lods
outsb
add
out
xchg
or
xchg
cs
seta
dec
sub
int
loope
and
shl
cli
stos
adc
fstpl
mov
pop
sbb
pop
pop
in
pop
arpl
add
jl
push
in
bound
invd
xor
repnz
adc
in
push
loopne
or
and
js
adc
fwait
xor
mov
mov
sbb
push
outsl
pop
sub
das
fucomp
pop
std
pop
push
mov
stos
sbb
inc
push
jle
rorl
xor
es
ficoml
adc
pushf
and
xchg
mov
loop
jns
sbb
movsl
clc
subl
sub
xchg
fwait
outsb
add
inc
adc
ret
arpl
or
xchg
shlb
push
icebp
cmc
sub
cmp
cmp
cmpsb
fxch
sub
scas
scas
out
inc
xchg
gs
punpckhdq
stc
lahf
imul
adc
or
ret
roll
dec
stos
dec
cli
inc
sub
jmp
jb
sub
inc
push
sub
icebp
popa
inc
add
das
sbb
out
aad
mov
hlt
aam
sub
lods
stos
ljmp
sub
pop
nop
and
das
dec
dec
inc
mov
test
xor
data16
push
dec
cmp
imul
scas
stos
xchg
push
cs
movsl
mov
or
aaa
sub
xor
lods
and
inc
int
jbe
or
push
sti
stos
popfw
xor
lea
add
and
lret
sub
jmp
ss
or
mov
out
cmp
push
imul
mov
jecxz
mov
cmovbe
and
jecxz
xorb
xorb
scas
cmp
sti
sbb
mov
ret
lret
dec
in
xor
incb
add
cld
mov
lds
es
cs
call
ret
test
add
sub
in
data16
in
adc
or
or
push
adcb
mov
adc
aad
and
pop
fldenv
rclb
pushf
fsubl
pusha
add
icebp
aas
inc
and
mov
loopne
insb
imul
rcl
xchg
or
sti
mov
xchg
dec
lock
jecxz
add
mov
inc
mov
xor
roll
stc
jg
outsl
push
dec
and
pop
adc
mov
mov
test
mov
clc
insb
pop
out
rclb
sbb
stc
pop
add
rcrb
lea
notl
fdivl
adc
dec
push
or
fmuls
xor
add
dec
add
popf
xchg
fwait
inc
in
cmpl
sbb
sub
xchg
or
leave
test
pop
inc
jp
pop
sub
outsb
repz
sbb
add
outsl
push
icebp
or
push
gs
adc
dec
mul
pop
add
iret
test
inc
fs
shll
das
and
and
jmp
pushw
test
add
lea
scas
out
mulb
cmp
mov
insl
repz
push
mov
or
sbb
push
out
and
mov
inc
cwtl
sub
faddl
mov
add
test
cmc
lcall
ret
adc
push
cmpb
icebp
clc
sub
sub
pop
inc
mov
cld
push
stos
jg
out
sbb
stos
mov
cmp
jmp
jl
add
outsb
push
push
gs
loop
call
push
les
fwait
adc
adc
sub
lods
jne
inc
pop
jp
push
dec
sbb
jl
ds
and
ds
pop
ljmp
sarb
icebp
sbb
cmp
shrl
mov
mov
xor
mov
lock
inc
sbb
jle
lea
pop
lahf
and
pop
fsubrl
cltd
sarb
test
xor
pmaxub
mov
sub
cs
mov
mov
mov
add
push
mov
pop
push
loop
jo
stos
cmp
push
ljmp
les
push
addl
and
andl
les
sbb
sbb
test
iret
incb
pop
mov
fimull
mov
pop
dec
sub
adc
ss
jo
imul
dec
ret
mov
pop
inc
adc
pushf
adc
mov
aaa
mov
int3
mov
pop
push
xlat
and
into
dec
cmpsl
inc
sub
lods
mov
add
std
ss
ror
stos
dec
outsl
and
shl
js
cmp
push
xchg
pop
or
pop
mov
stos
arpl
outsb
popa
mov
adc
lods
push
fldt
daa
push
lock
jle
sub
dec
aam
iret
testl
in
sbb
inc
scas
sti
pushf
adc
add
fs
and
aas
jnp
fs
jae
bound
pop
fadds
int3
fcoml
aas
cmc
xchg
xor
xchg
popf
pop
sub
mov
shlb
jo
dec
or
xchg
cmp
jbe
aas
xor
sub
mov
jnp
and
jbe
or
lods
sbb
insb
xchg
inc
and
mov
xchg
outsb
jg
int3
pop
int3
movsl
jns
dec
out
adc
arpl
daa
lods
inc
jbe
mov
and
add
incb
lcall
ds
negl
sar
aas
and
xor
in
mov
mov
xchg
fnsave
js
cltd
jb
add
fdivs
dec
inc
decb
sbb
test
push
loopne
cli
hlt
les
daa
mov
jl
sbb
dec
sbb
push
sahf
dec
push
mov
pop
lods
jns
cmp
movsl
mov
loopne
push
sbbb
gs
dec
mov
je
or
test
jb
sub
mov
pop
push
adc
pop
sub
push
mov
test
ficomps
mov
popf
push
mov
lods
sub
clc
mov
mov
cs
mov
sarb
gs
mov
cmp
cwtl
jl
mov
dec
leave
sub
pop
pop
mov
ret
or
mov
sub
int
inc
nop
jp
nop
lds
adc
mov
popf
ret
or
and
jne
pop
jmp
lcall
mov
inc
fmul
jo
clc
lret
rcll
in
mov
jle
sbb
lcall
imul
add
je
add
jb
adc
jae
adc
push
insl
adc
inc
ficomps
xor
clc
insl
enter
aaa
mov
mov
iret
scas
iret
sbb
sbb
pop
imul
or
stos
ja
pop
push
jo
jne
cs
lea
lods
pop
insl
jo
stc
or
lods
dec
in
mov
dec
xchg
mov
lock
add
sub
push
adc
adc
jne
cmovb
inc
pop
adc
lods
sub
aad
pop
aad
out
xchg
add
push
sbb
sbb
cmp
popa
adc
push
xchg
xchg
std
pushf
and
leave
cmpsb
jge
add
jge,pn
out
loope
lock
push
push
sub
cmpsl
jle
or
rcrb
rcrb
data16
ss
aad
mov
inc
adc
xchg
cmp
inc
lret
insl
mov
sbb
fstps
xchg
pop
fwait
sbb
fldt
cli
pop
push
subb
jecxz
daa
xor
jp
dec
mov
arpl
pusha
movsl
push
cltd
cmp
cli
test
imul
daa
rclb
ljmp
push
pop
xchg
jl
cwtl
inc
and
fstpt
add
daa
int
loop
inc
push
xchg
sub
leave
cmp
xchg
sub
pop
inc
adc
sbb
push
out
pop
mov
pop
xor
mov
gs
mov
jecxz
xor
inc
dec
add
cmp
xor
decb
dec
sar
iret
mov
lahf
stc
fld
outsl
leave
or
sub
mov
outsb
imul
sysexit
dec
std
cltd
sbb
and
iret
push
icebp
int
mov
test
lods
mov
jo
filds
lods
or
rorb
call
sub
scas
push
jno
scas
jb
sbb
pop
dec
loope
cmp
iret
mov
ja
sub
pop
mov
clc
xchg
jns
sahf
inc
xchg
pop
repz
push
jg
and
dec
cwtl
fstl
cmp
mov
imul
pop
mov
inc
jle
xlat
test
push
push
mov
jbe
inc
mov
or
fs
lods
adc
mov
add
shll
sbb
pop
std
scas
push
cmc
loopne
or
cmp
imul
into
adc
inc
xor
push
sub
or
sahf
loope
psubw
fs
dec
call
mov
ss
xchg
ficoms
ds
cmp
lea
sub
ja
sbb
and
iret
lods
mov
lcall
out
jge
add
mov
mov
xchg
xchg
push
and
jmp
mov
fnstsw
adc
add
test
sbb
arpl
dec
push
push
insl
scas
icebp
and
mov
imul
iret
es
pushf
jnp
shl
test
popf
and
outsl
mov
mov
hlt
xor
sbb
xor
inc
repnz
fwait
push
movsl
in
fildll
outsb
sub
dec
inc
dec
or
sub
or
sbb
stc
in
and
sub
jecxz
xchg
fdivrp
cmpb
and
jg
dec
cmp
ss
aad
or
add
ja
mov
mov
dec
inc
mov
xchg
aas
push
pushf
enter
mov
pushf
xor
adc
xor
out
pop
sub
push
jns
cmpsl
loopne
in
pop
sub
scas
jp
movsl
or
mov
pop
nop
xchg
or
jle
or
mov
mov
xor
test
jb
sub
xor
xchg
mov
xchg
xchg
pop
dec
cmc
adc
inc
test
addl
cli
pop
xchg
add
pop
bound
je
iret
out
testb
dec
cmp
xlat
into
lret
lods
jmp
sub
add
xor
stos
scas
orb
lahf
jecxz
push
imul
pop
dec
push
test
adc
xor
xor
sbb
cli
and
add
cltd
adc
sar
aad
and
mov
scas
sahf
cs
gs
test
sbb
push
jno
mov
dec
adc
in
fiadds
stos
adc
repz
or
jg
jmp
bound
aaa
filds
xor
adc
push
fsub
xor
and
push
push
scas
sub
je
xchg
in
lods
xchg
xchg
jmp
arpl
sbb
sub
lods
call
mov
pusha
rcrl
aaa
pop
sbb
sbb
or
icebp
sbb
sbb
sbb
mov
add
and
mov
dec
shlb
int
cld
push
fwait
in
push
pop
test
data16
out
bound
dec
cmp
ret
decb
int3
jle
out
in
push
cwtl
mov
cmpsl
iret
cmp
jle
in
mov
lret
xchg
sbb
cmc
scas
jle
sbb
stc
enter
pmuludq
and
mov
pop
pop
cmpsl
aaa
xor
adc
mov
cmp
adc
jo
call
jp
out
cmp
rcrb
sbb
paddsw
mov
cmpsb
lock
and
or
lahf
incl
outsb
je
dec
jo
sbb
sahf
into
sub
icebp
mov
nop
dec
and
jnp
and
pop
lcall
mov
xor
icebp
dec
and
xchg
jae
sarb
addr16
dec
mov
stos
jno
jecxz
mov
aaa
xchg
jmp
xchg
lret
or
sbb
sub
sti
orb
push
mov
sub
out
sub
insb
lret
data16
xchg
lcall
stc
scas
or
and
mov
imul
lret
popf
jo
pusha
dec
add
orl
test
ret
dec
mov
push
add
xlat
cmp
xor
mov
pop
lods
pop
push
loopne
shll
mov
fwait
sahf
lea
push
fimuls
pop
jbe
or
addr16
leave
into
or
fistpll
sar
sub
and
cmp
sub
out
and
cli
inc
imul
cmpsb
hlt
sub
xchg
int
mov
dec
dec
mov
cmc
shll
cmp
mov
shrl
mov
pop
cmp
push
inc
xchg
pop
push
movsb
sti
cmpsl
addr16
js
stos
xor
jo
ja
mov
adc
xor
lcall
adc
xor
repnz
sahf
rcll
jge
das
sub
push
adc
and
push
xchg
mov
in
jnp
xor
or
cwtl
xor
flds
jle
iret
pop
jmp
imul
pusha
idivb
pop
pushf
cmpsl
lds
mov
mov
mov
stos
insl
xchg
inc
lods
or
outsb
mov
rorb
shr
dec
dec
sub
cmp
int3
rcr
loope
cmp
cmpsb
and
or
aaa
addr16
pushf
lds
add
movsb
jbe
fldenv
orb
push
in
fnstsw
mov
leave
push
sbb
rol
xor
pop
hlt
movsl
aad
aas
pop
sbb
mov
jbe
add
jno
fsts
outsl
jbe
mov
mov
insb
xor
insb
and
fisubrl
je
xor
and
adc
stc
inc
jb
or
test
pop
adc
push
dec
ret
mov
stc
xor
in
ret
push
ja
inc
ja
aam
fwait
jns
pop
pop
jecxz
adc
mov
iret
rcrl
into
push
aas
movl
sbb
fptan
out
xor
jno
data16
xor
mov
cld
mov
sub
fwait
int
cmc
push
cmpsb
lret
xor
jmp
sub
cmpsb
xor
mov
aas
dec
fcmovbe
or
mov
loop
ds
stos
dec
insb
arpl
stc
jo
hlt
mov
push
test
push
jb
sbb
pop
ss
push
dec
mov
dec
or
aaa
fimull
add
jns
jns
clc
add
popa
arpl
jmp
mov
lods
sbb
jmp
and
xor
mov
push
leave
jbe
iret
push
cmp
lret
loope
push
sbb
add
add
pusha
lret
adc
roll
arpl
arpl
jmp
in
inc
dec
enter
out
int3
stos
cmp
sub
popa
lcall
mov
push
cmpsb
or
push
scas
out
xchg
jl
push
lret
orb
inc
and
faddl
cmp
scas
sarl
pop
dec
shlb
mov
push
mov
add
mov
mov
push
mov
cmp
stos
inc
cmpb
movsb
repz
cs
push
sub
or
lcall
out
cmp
push
mov
sub
or
xor
js
loop
push
idivb
data16
out
jg
lods
inc
out
in
dec
outsl
mov
or
fs
loopne
xor
fsubp
cli
lea
cmpsl
mov
push
icebp
out
addr16
ret
frstor
test
mov
dec
add
test
pop
daa
jecxz
pop
add
movsl
sbb
faddl
repz
and
sbb
sbb
out
outsb
lods
pop
and
sbb
mov
mov
jb
psrlw
das
sahf
insb
sbb
out
fcoms
sarl
push
fistpl
adc
lahf
and
out
xchg
mov
cs
dec
mov
jne
push
lahf
orps
jno
sub
repz
mov
ret
add
dec
out
cmp
test
xor
into
jnp
xor
testb
mov
pop
cs
xor
pop
int
push
jno
inc
push
xchg
jbe
mov
adc
jecxz
test
shl
dec
inc
sub
sub
lret
scas
sub
cmpsl
lea
dec
xchg
negb
and
mov
test
repnz
mov
add
xor
gs
lock
data16
add
dec
adc
xor
xchg
fbld
andl
ljmp
das
std
pop
sbb
push
pop
mov
call
or
inc
inc
sub
pop
into
fs
cmp
fcoml
xchg
jb
cmp
hlt
cmp
cmp
lret
ret
fsub
test
pop
inc
cli
sbb
sbb
stos
mov
std
push
cmpsb
test
cmp
nop
mov
adc
pusha
mov
dec
in
pushf
sub
add
repnz
sbb
cli
cli
jbe
inc
jg
add
es
inc
cmp
mov
mov
dec
loop
adc
movsl
das
sbb
or
add
bound
sbb
lods
xchg
and
in
inc
mov
jg
push
aaa
dec
inc
add
mov
sahf
jno
cmp
insb
xchg
sub
or
adc
add
fiaddl
cs
add
mov
push
add
xchg
cmp
fbstp
sbb
cltd
dec
sub
out
jne
in
nop
cwtl
addr16
xchg
mov
jp
sub
es
cmpsb
enter
add
movsb
sar
adc
add
sbb
insl
orl
xchg
aad
add
insb
flds
test
int
inc
xor
inc
pushf
adc
fldt
jle
mov
dec
in
aad
mov
mov
jae
test
add
in
in
add
adc
adc
call
sub
sbb
movsb
mov
les
je
lea
sbb
push
js
push
jge
pop
cmpsl
rcrl
fidivl
mov
push
mov
daa
in
aaa
cwtl
inc
rcl
fstpt
ljmp
call
loopne
jp
insl
jp
push
adc
cld
inc
divb
mov
jecxz
test
adc
pop
cmc
jge
jbe
in
ds
scas
aam
push
inc
outsb
pusha
or
sub
cmc
or
xchg
in
out
pop
mov
mov
cmpsl
cmpsb
in
leave
dec
adc
mov
mov
jge
sbb
outsl
push
test
mov
xchg
in
test
mov
mov
xor
jo
add
popf
cmp
push
push
iret
jo
mov
pop
jns
fdiv
dec
cs
jl
push
dec
insl
push
fucomi
add
dec
and
xor
inc
mov
xchg
js
mov
in
cmp
out
jecxz
mov
lock
fidivrs
jge
inc
jecxz
lcall
or
idivb
shl
jmp
jbe
mov
lahf
enter
loopne
into
addl
jo
dec
bound
cmp
jb
lret
enter
pop
mov
lret
sbb
inc
and
cmp
cmp
pop
add
in
add
test
add
addr16
fmul
push
aad
sub
ljmp
fdivrl
aas
out
xchg
mov
push
push
ja
inc
movsb
bound
mov
iret
sub
and
and
in
mov
cmp
cmpl
mov
popa
pushf
rcrl
fsts
xchg
dec
aaa
into
in
icebp
popf
mov
and
jp
ss
cs
call
dec
enter
mov
imull
mov
lahf
push
sahf
or
lock
inc
add
dec
pop
imul
adc
call
popf
mov
mov
bound
jp
jmp
push
aaa
add
xchg
push
ja
divb
push
movsw
mov
inc
xor
out
and
out
dec
mov
xchg
popf
pop
aam
dec
sbb
lahf
cmp
lds
mov
test
mov
mov
cmp
hlt
shll
js
sti
xorl
mov
test
pop
jae
pop
push
mov
adc
sbb
jo
push
fcomps
das
jnp
adc
ds
mov
repnz
jge
xchg
cmp
ja
xchg
je
mov
jae
sub
mov
push
dec
inc
mov
push
test
dec
stos
xchg
xchg
mov
xchg
repz
roll
insb
aaa
push
shl
test
adc
ret
inc
lods
aas
and
inc
fcmovu
popa
xor
clc
scas
pop
out
fs
and
mov
jecxz
adc
fdivp
es
fmul
and
xchg
push
test
and
sahf
in
sub
sub
pushf
les
dec
inc
data16
or
lods
int
sarb
mov
mov
je
loop
out
mov
jbe
xchg
sti
mov
mov
int
xchg
or
pusha
pop
push
cmpsl
cmp
fisubl
jmp
loope
push
insl
clc
mov
mov
cltd
or
je
mov
push
fisubs
mov
xchg
enter
in
es
int
call
cmpsl
jl
dec
jmp
xor
mov
jecxz
sahf
or
push
scas
xchg
or
push
adc
sub
cmp
in
lods
dec
test
jb
jae
insb
mov
in
insb
popf
lret
lods
push
jp
test
aaa
pop
adcl
pop
inc
xor
shrb
jb
jbe
ljmp
mov
xor
cmpb
or
add
xchg
push
inc
outsl
jl
ja
xchg
jno
shl
stc
cmpsl
lahf
insl
ret
in
mov
pop
mov
test
and
stc
and
jl
add
inc
push
xchg
ds
cmpsl
inc
dec
int
sub
cmp
mov
dec
jmp
lea
pop
mov
enter
into
pop
inc
sub
lds
push
inc
das
xchg
mov
popf
mov
ret
loop
inc
jne
pop
push
mov
insl
arpl
test
gs
dec
xor
ret
daa
push
loop
mov
push
xchg
cmp
pushf
or
sbb
dec
sarl
pop
out
xchg
scas
mov
and
adc
test
hlt
pop
hlt
mov
cmpl
aas
data16
mov
pushf
js
adc
fwait
es
stos
dec
data16
jl
jmp
dec
call
rcrb
ret
mov
push
jnp
pop
cmc
shll
test
push
gs
sbbl
movsl
or
iret
adc
daa
xor
clc
or
das
xchg
arpl
mov
xor
arpl
nop
out
loop
pop
adc
scas
inc
inc
sub
ret
clc
adc
sub
mov
cli
mov
shrl
mov
mov
out
xchg
mov
sub
sub
pushf
add
pop
pop
cmp
ljmp
loopne
ret
int
push
repz
loopne
sbb
xchg
sub
and
clc
ret
and
addr16
pop
adc
pop
cmp
adc
fnstsw
push
mov
dec
push
shll
and
arpl
arpl
movsb
jecxz
jle
mov
sbb
fdivrl
push
hlt
push
adcb
js
stos
loope
int
mov
movsb
in
pop
repnz
int
negl
add
and
in
pop
sbb
ficoms
fcompl
aam
push
les
sbb
mov
fwait
lret
inc
jnp
mov
cmpsb
xor
xchg
cmp
xor
cmpxchg
sbb
adc
pop
dec
mov
stos
aas
fimull
adc
mov
jo
mov
xor
xor
push
or
iret
sbb
pop
jnp
cmp
mov
pop
xor
popf
lds
xor
addb
push
xchg
and
cli
sub
in
push
movsl
imul
sbb
pop
lock
in
aaa
adc
out
mov
jne
out
test
cmpsl
xor
in
xchg
jb
hlt
pop
inc
add
pop
pop
data16
pushf
jmp
adc
fistps
test
or
sbb
push
popa
jge
lods
loopne
outsl
mov
xlat
inc
dec
loopne
add
jb
mov
xchg
mov
xor
pop
cld
inc
xor
nop
imul
lds
mov
xchg
int
cmc
loop
or
ja
push
sbb
lcall
jnp
xchg
testb
repz
or
lahf
rcrb
lods
pop
jbe
push
clc
pop
mov
popa
xchg
mov
lods
icebp
mov
add
jp
imul
test
ret
into
and
xchg
out
es
xor
cmpsl
sbb
and
jmp
mov
mov
inc
dec
inc
xchg
icebp
jp
sbb
dec
adc
jmp
mov
pop
jle
cmc
cmp
sbb
imul
cmp
fidivs
cmp
aas
jns
ljmp
mov
aam
mov
sub
jp
pusha
pop
cld
in
test
sbb
mov
xor
daa
inc
adc
jns
shr
das
and
sbb
add
stos
daa
mov
pop
aas
adc
inc
adc
nop
dec
dec
call
pop
out
add
mov
arpl
dec
push
mov
stos
mov
int3
aas
scas
add
and
insb
sti
push
icebp
xor
push
jge
cmp
cmp
jns
out
aaa
mov
jmp
cltd
cmp
shll
pop
fistpll
in
cmp
push
clc
jns
mov
adcl
mov
aam
ja
pop
adc
and
clc
jmp
mov
insb
mov
mov
movsl
sbb
cmp
ret
rcl
arpl
cmpsl
jecxz
or
out
test
cs
jae
imul
aad
xchg
fs
cmp
add
push
jmp
imul
sub
loopne
jbe,pt
lds
das
test
loope
mov
mov
insb
in
orb
push
push
sub
push
nop
pushf
cmp
and
bound
outsl
inc
inc
or
iret
xor
add
outsl
rclb
ror
mov
aad
adc
ja
enter
insl
or
ds
inc
ficomps
into
cmp
or
rorb
addr16
out
adc
fwait
push
mov
stc
in
dec
sbb
add
bound
dec
or
push
leave
faddp
mov
fisubl
dec
inc
test
outsb
in
enter
leave
loop
daa
imul
xor
dec
leave
inc
out
dec
and
pop
repnz
mov
bsr
push
call
bound
and
mov
nop
and
adc
aad
inc
sarb
scas
mov
mov
popa
rorl
cwtl
xorb
pop
fldcw
add
out
popa
repnz
xchg
daa
lds
sub
cmp
inc
sbb
push
test
shrl
pop
popf
adc
in
mov
mov
lds
in
jge
icebp
push
into
lods
push
les
stos
lret
adc
push
lret
sub
jg
dec
fsubs
stos
sbb
bound
ret
pushf
lret
lahf
inc
fs
dec
sbb
add
imul
pop
xchg
popa
mov
pop
xchg
ja
sub
mov
sahf
pop
lock
fidivs
mov
mov
rcr
mov
xlat
dec
pop
sbb
js
outsl
ss
inc
into
lods
mov
shrl
mov
mov
andb
pop
loopne
call
addb
jl
jecxz
loope
cwtd
xor
and
fidivl
dec
adc
jmp
dec
push
add
xchg
add
test
mov
lcall
dec
shrl
imul
jge
lds
imul
jp
aam
xor
cmp
arpl
mov
pop
mov
popf
mov
mov
fstps
mov
xchg
xchg
shl
push
mov
pop
mov
mov
mov
leave
xchg
test
sbb
cltd
sbb
fistpl
and
dec
mov
cmp
and
cmpsl
icebp
in
arpl
mov
sti
mul
cmp
jecxz
into
mov
lea
push
push
pop
filds
aad
aam
push
push
xor
cli
fistps
xchg
in
lahf
repz
fs
idiv
mov
ret
jnp
test
xchg
pop
popf
in
jae
das
imul
jecxz
pop
and
push
adc
arpl
pop
das
pop
in
rcrl
mov
sub
cmp
scas
add
mov
or
inc
pop
mov
lock
sub
rorl
pandn
inc
loopne
pop
jg
adcb
sub
cmp
pop
dec
xor
mov
inc
shlb
ss
je
push
mov
pop
and
fbld
addb
data16
sbbl
movsl
lea
loopne
insb
push
orb
rcl
push
add
xchg
add
stos
test
inc
rolb
shlb
rorb
xor
rclb
ds
dec
loopne
bound
xchg
fs
push
rep
mov
sarl
or
jl
inc
or
dec
jns
push
fldcw
mov
sbbl
mov
cwtl
popf
leave
rclb
roll
daa
cli
push
fstp
fsubrs
or
dec
jae
jno
jns
push
mov
fwait
jnp
in
mov
adc
sbb
lret
and
jb
cli
add
xchg
dec
loopne
pusha
test
dec
or
adc
sub
push
or
icebp
aam
mov
aam
cmp
movsl
mov
adc
stos
leave
rorb
fs
dec
xchg
js
popf
push
cmp
popf
fsts
decl
dec
jge
push
int
ret
xchg
psubq
jecxz
outsb
mov
loop
cltd
in
mov
push
sahf
push
divb
jae
popf
int
cmp
sti
rol
sub
mov
sbb
xchg
adc
or
daa
mov
mov
in
movsl
dec
popf
adc
mov
sarb
push
fdivp
out
adc
pop
call
stos
xor
outsb
andl
cmpl
xchg
inc
loop
fcomps
clc
repz
cwtl
outsl
or
sub
jb
cs
push
lods
loop
movsb
subl
repz
or
fnstenv
enter
out
and
and
jbe
call
mov
ljmp
iret
inc
jnp
pop
dec
mov
lret
xchg
mov
int3
dec
adcl
push
jns
push
mov
idiv
in
hlt
and
jb
shll
lock
mov
or
imul
push
inc
outsb
rclb
push
sub
pop
sub
stc
movsb
cmp
cmp
ja
je
sub
mov
push
mov
mov
adc
jg
out
repz
jo
aam
lahf
add
sbb
jae
cmpsl
aam
jle
inc
es
data16
push
inc
es
mov
mov
push
ja
push
cltd
pop
arpl
and
clc
xchg
push
push
push
cld
in
insb
add
lahf
nop
push
mov
imul
sub
push
sbb
leave
push
dec
arpl
das
cmp
into
mov
pand
mov
sti
movsb
dec
daa
fsubl
daa
cmc
std
dec
add
cmpsb
dec
add
adc
das
pop
scas
or
mov
sbb
mov
enter
adc
nop
xchg
cs
inc
mov
cmp
mov
lahf
fwait
and
iret
insb
sub
cmp
cmp
inc
mov
adc
pop
leavew
stc
fstpt
cmpsl
cwtl
xchg
jmp
das
insl
add
int3
scas
test
scas
sbbl
sub
sub
inc
sub
jge
add
addl
ljmp
movsb
aam
pop
inc
cli
lds
inc
xor
in
jnp
pop
xchg
out
sahf
or
cmp
cmp
sub
cmp
test
cmpsb
loope
and
sub
add
test
jg
xchg
lods
mov
xor
pop
je
lcall
pop
push
jb
xchg
push
add
fistpl
call
mov
rcrb
pop
arpl
mov
mov
push
inc
outsb
popf
das
cltd
mov
arpl
loopne
test
dec
inc
lods
dec
push
int
cmp
movsb
movsl
cli
xor
pop
fistl
cltd
push
mov
fcomp
fwait
popf
mov
cmc
cmp
xor
mov
out
mov
sbb
sbb
int3
pop
jl
lods
mov
stos
xchg
lret
movsb
push
ret
push
aas
fisubs
rol
add
cmpsb
pop
sahf
inc
add
lods
mov
pop
pop
cld
xor
insb
adc
cs
sbb
sub
int3
dec
inc
sub
add
fdivl
pop
push
ret
push
and
scas
add
test
ja
aaa
push
in
mov
pop
jae
out
xchg
push
stos
jne
or
adcb
mov
fiaddl
stos
cwtl
dec
push
mov
mov
mov
fnstcw
mov
mov
ret
add
pusha
mov
push
repz
pop
roll
sbb
lods
ljmp
out
mov
inc
mov
arpl
fdivrs
aaa
lcall
pop
imul
std
or
leave
stos
mov
stos
jbe
ljmp
lods
add
cmp
cmc
lcall
cmp
lret
fnstsw
dec
insb
xchg
pop
add
mov
mov
inc
lahf
gs
add
pop
inc
pop
sub
push
imul
aad
xor
into
pop
int3
int
xchg
mov
addr16
dec
inc
mov
jle
sub
and
mov
cld
xchg
xchg
push
jge
mov
fstl
fs
mov
xchg
test
push
stc
mov
fmuls
jp
mov
jae
or
imul
jl
sbb
mov
repnz
ljmp
mov
cli
cmp
sub
int3
jns
test
jge
inc
adc
das
fnsave
push
outsb
insb
dec
mov
xchg
es
add
insb
mov
lret
and
inc
sbb
xchg
xchg
aaa
mov
stos
ja
xchg
cmp
jge
movsb
inc
pusha
sub
scas
inc
std
mov
rcll
xchg
mov
lds
repnz
jle
add
lahf
mov
popf
mov
lds
push
cwtl
stc
rcr
sub
leave
lcall
dec
add
mov
and
pop
mov
ds
lret
mov
out
push
cltd
lock
hlt
push
cld
das
xchg
xor
fbstp
out
imul
mov
sbb
inc
push
mov
xor
dec
fs
pop
push
fwait
add
mov
xchg
or
add
addl
scas
int3
pushf
outsl
and
lahf
add
aam
dec
sahf
sahf
mov
pushf
mov
adc
out
xchg
fldenv
xor
add
xchg
or
negl
std
imul
mov
loop
dec
push
shl
daa
or
mov
xor
lahf
mov
les
inc
std
push
mov
mov
cwtl
push
mov
insb
cs
push
cld
rolb
scas
test
icebp
jno
dec
lods
mov
enter
arpl
mov
ret
aam
cmp
ss
std
jl
cs
cld
adc
popf
push
fstpt
or
daa
fstps
xor
add
and
pop
shl
fsub
dec
push
mov
xchg
push
push
mov
pusha
ret
sti
sub
jae
jl
test
jg
dec
leave
jnp
cmpb
stos
dec
mov
mov
mov
xor
test
xor
cli
mov
shrl
stos
out
add
cwtl
dec
xchg
push
imul
testl
aad
mov
sti
out
insl
repz
jns
lret
gs
fdivp
subl
or
popa
dec
xor
jo
push
sahf
inc
xchg
or
adc
xor
jb
lds
cmp
inc
pop
adc
sub
mov
push
into
mov
in
and
sahf
loope
push
aam
sbb
mov
dec
out
mov
rolb
ja
jle
and
jecxz
sub
push
xchg
mov
sub
add
imull
mov
dec
mov
add
jo
enter
inc
pop
lds
call
rorl
lea
mov
adc
into
dec
mov
sub
adc
push
lret
or
imul
or
imul
insb
dec
aad
adc
sub
aas
mov
jne
loopne
in
ds
out
repz
iret
std
mov
aam
cs
lret
jbe
into
ja,pt
cmc
lret
loopne
push
rcrl
imul
cmp
add
add
out
mov
fwait
mov
sub
cmpsl
subl
sbb
mov
dec
push
jge
inc
test
data16
lcall
fimull
pop
cmp
jecxz
xchg
xchg
push
int3
addl
cmp
in
je
mov
in
out
mov
dec
adc
call
js
xor
pop
fcomps
in
jmp
loope
xchg
out
into
jno
scas
xor
and
mov
cmp
sub
aad
int
rcrl
in
add
add
sub
inc
pushf
mov
ja
pop
loope
lahf
sbb
and
dec
lods
mov
pop
push
fbstp
mov
rcrl
jmp
aas
push
lahf
xor
jge
popf
adc
jg
or
or
hlt
das
fstpt
dec
xor
loope
fistl
xlat
push
dec
xchg
ficomps
pusha
fildl
adc
mov
fdivr
add
jbe
je
mov
mov
inc
mov
aam
pop
lea
adc
pusha
in
push
rcll
mov
sbb
mov
mov
push
pop
int3
js
mov
add
inc
mov
inc
in
out
push
call
sub
cli
cmp
inc
sub
mov
xchg
aas
push
cmp
dec
aam
cmpsb
popf
clc
push
inc
dec
repnz
js
adc
pop
lret
push
pop
in
or
popa
in
xchg
iret
xchg
fsubs
sbb
mov
pop
xchg
push
out
ret
lret
les
and
lret
add
test
popa
sbb
mov
fildl
mov
sti
or
rcrb
push
bswap
dec
jbe
pop
and
xchg
pop
jns
shr
rcrl
pop
icebp
mov
std
pop
cmpsb
sub
and
xor
dec
mov
test
push
or
sbb
mov
push
retw
jo
push
push
mov
inc
xor
jmp
cltd
dec
cmp
into
sub
cmc
push
mov
flds
cs
dec
mov
adc
arpl
loop
in
outsl
enter
popa
sbb
shrl
shrl
pop
test
push
js
sub
cs
adc
jne
insb
leave
jle
and
pop
cmp
or
jle
rcll
sahf
and
out
inc
or
mov
nop
aad
outsb
adc
or
jno
loopne
ja
dec
and
pusha
cmp
xchg
xor
inc
or
fwait
repnz
sbb
les
icebp
xchg
insb
addr16
mov
aad
leave
inc
daa
cmpsl
and
add
jb
dec
mov
cmp
jmp
out
std
sub
lcall
xor
mov
inc
int3
adc
mov
pop
les
mov
pushf
out
dec
mov
fiadds
icebp
jg
pop
cmp
jno
inc
pushf
cmpsl
sahf
xlat
rolb
xchg
call
rcr
lea
mov
jmp
mov
sbb
mov
add
sbb
pop
int3
push
add
aas
in
add
js
insl
lcall
popa
xor
cmp
mov
in
mov
push
inc
adc
jecxz
push
jnp
aam
jle
jle
fbld
fwait
mov
sub
fisubrs
mov
pop
lods
jbe
adc
out
lret
call
std
addr16
or
mov
test
cmp
mov
cltd
xor
jp
cmpsl
ljmp
jp
dec
outsb
jbe
mov
mov
push
in
inc
pop
mov
out
clc
mov
or
pop
int3
jge
adc
push
pushf
lock
pop
or
cwtl
inc
fs
cltd
and
arpl
call
into
faddl
pop
jle
outsb
sbb
stos
mov
lret
jecxz
test
add
mov
sbb
and
jno
sub
hlt
or
jbe
pop
test
repz
mov
xor
stos
les
mov
push
add
push
out
mov
pushf
mov
out
cmc
cmp
push
lods
cmp
cltd
push
ljmp
mov
xorl
cmp
lods
jno
mov
jo
into
icebp
xor
and
not
jge
ret
hlt
fstpl
sbbl
sbbl
out
cmp
fdivrl
push
xor
mov
pop
repz
and
mov
jmp
xchg
inc
cmp
jbe
or
cmp
cltd
lahf
xlat
or
rcrb
mov
iret
pusha
hlt
call
xor
lock
cmp
ret
cs
das
mov
in
bound
mov
leave
lahf
test
in
add
mov
sbb
aas
push
or
test
je
inc
lock
aaa
pop
in
push
sbb
sahf
call
fcmovu
aam
dec
and
sub
or
cmc
lea
bswap
test
data16
xchg
xchg
dec
icebp
inc
dec
jl
and
mov
cmp
cmc
loope
inc
mov
jno
mov
jmp
clc
jnp
cld
adc
inc
loope
mov
mov
ret
pop
fstl
dec
inc
xchg
subl
aas
ss
rcl
cmc
inc
add
mov
sbb
sub
pop
xlat
or
push
push
jmp
jle
fidivrl
xchg
ss
scas
pop
or
daa
sbb
mov
in
loop
mov
daa
and
xchg
push
mov
cli
adc
movsl
ds
leave
outsb
imul
je
add
out
jle
fdiv
bswap
cmp
xor
dec
icebp
and
aas
insb
pusha
dec
outsb
lret
sbb
sbb
sub
loop
mov
pop
dec
loop
add
clc
inc
subl
mov
aad
mov
xchg
push
stos
or
and
mov
sub
enter
jo
mov
mov
insl
push
pop
dec
test
je
fisttps
inc
jo
push
sbb
divb
and
dec
cmpsb
out
and
push
stc
js
xchg
xor
mov
fdiv
add
daa
insl
sub
mov
leave
outsl
arpl
adc
xor
insb
and
js
loopne
pushf
sbb
in
gs
pop
sbb
pop
mov
lcall
cltd
xor
inc
cwtl
mov
aas
fnstenv
or
ret
pop
scas
stos
mov
xor
imull
std
xor
cmc
mov
add
mov
gs
or
ret
and
jns
jp
cmpsl
imul
in
xor
pushf
sub
stc
jmp
jae
scas
jnp
pop
pop
enter
add
cmp
fwait
jno
push
test
cwtl
mov
add
push
lods
into
pop
inc
out
sbb
cmp
nop
das
add
mov
lods
cltd
xor
sbb
stos
jae
daa
movsl
lods
xchg
and
inc
decb
shl
sub
scas
xchg
add
out
cmc
mov
xchg
jp
xor
fldl
scas
add
jge
jbe
mov
ret
mov
mov
jle,pt
mov
popf
sub
inc
push
cmp
rorb
subl
xor
mov
sub
cltd
into
lods
in
ret
jne
call
ljmp
mov
lds
imul
subb
cmpsb
ss
cs
lret
shlb
push
inc
leave
scas
inc
xchg
or
sarl
pop
popa
xchg
jnp
scas
lahf
xor
cwtl
xor
rol
stc
cld
xor
in
mov
xor
lds
push
xor
mov
hlt
test
add
lds
jae
addr16
mov
lret
mov
xchg
xchg
add
mov
sbb
popf
clc
xor
sbbb
and
aad
jne
cmc
add
mov
dec
jmp
dec
xchg
in
lods
shrl
mov
test
int3
adc
dec
insb
xlat
inc
xor
arpl
leave
lods
test
mov
mov
mov
ret
repz
ret
ficomps
adc
cs
jle
lods
cmc
inc
ret
pop
mov
or
xchg
call
ret
adc
xchg
lock
les
icebp
jae
jl
push
js
dec
jnp
lea
clc
pop
ret
xchg
ds
ror
adc
std
cmp
loopne
arpl
xchg
push
inc
push
ss
fiadds
mov
testl
adc
xchg
das
lret
cmp
cmp
cmpsl
dec
jge
js
push
mov
lds
stos
stos
xor
das
test
jmp
ffreep
in
test
imul
mov
cmpsl
pop
test
and
test
dec
loope
mov
push
cli
sub
ljmp
incb
into
sahf
xor
pusha
dec
aaa
das
jb
lods
pop
push
insl
xor
fstl
addl
movsl
std
imul
out
je
mov
repz
mov
cmp
jge
jle
push
pop
pop
push
ficompl
scas
cmpsb
dec
xchg
shrb
adc
mov
push
data16
negb
divb
daa
or
sbb
push
dec
lods
in
rorl
adc
inc
mov
jg
cmovno
dec
push
std
jae
and
subb
sarl
sub
ljmp
sbb
xchg
adc
sub
mov
fidivrs
mov
dec
ds
cwtl
xor
cmp
lock
fdivrs
inc
lds
fisubrs
push
data16
pop
mov
js
xchg
lcall
push
aas
es
xchg
add
or
sbb
or
xor
pop
sbb
adc
ficomps
dec
xlat
inc
cmp
mov
xor
or
mov
das
sar
sbb
test
fdivrl
clc
push
xchg
mov
push
jo
cmp
adc
sbb
pop
es
mov
xchg
in
mov
adc
fwait
std
xor
sarb
repnz
jbe
jl
lea
in
jbe
push
inc
mov
mov
movb
jmp
je
mov
pop
sub
in
jl
mov
jl
cli
mov
jecxz
pop
inc
in
adc
cmp
int3
or
ljmp
imul
and
mov
and
int3
insl
ss
cmpsl
mov
jb
ljmp
sbb
mov
mov
dec
dec
imul
iret
xchg
jmp
lea
inc
pop
adc
iret
icebp
mov
pop
jge
push
mov
ror
xor
loope
add
add
jns
lods
js
dec
push
repnz
jno
and
sti
sub
inc
into
push
mov
push
mov
and
and
mov
push
push
pop
popf
adc
dec
adc
lcall
fidivs
test
sahf
mov
sahf
loop
loop
dec
fdivs
xchg
cmp
mov
xchg
or
jne
rcl
adc
xor
fsubrl
in
stos
mov
add
jb
test
lods
mov
push
sarl
insb
push
fs
push
imul
dec
push
mov
mov
adc
and
arpl
das
sub
inc
stos
dec
xchg
and
ljmp
ficoms
ljmp
hlt
cmp
fsubrl
push
adc
test
xchg
es
les
mov
adc
in
jno
xchg
lds
aam
std
icebp
aam
imul
daa
test
fcompl
test
jbe
xor
xor
add
pop
scas
outsb
cmp
jb
je
pushf
cmp
fnsave
jl
cmp
sub
sub
or
test
scas
add
push
rcr
outsb
sbbb
lock
push
mov
lret
or
dec
nop
mov
movsb
dec
fcomps
movsl
mov
cmp
cld
adc
xchg
out
dec
cmpsb
jmp
in
mulb
xor
hlt
popa
fs
jno
inc
aaa
cli
mov
mov
scas
sub
je
or
mov
xor
std
repnz
loopne
cmp
cmp
leave
stos
scas
mul
sahf
xchg
leave
xchg
sub
and
stc
mov
and
fisubl
push
mov
enter
addb
mov
xor
sbb
rclb
mov
cmp
xor
lret
pop
jecxz
jp
xchg
testl
test
inc
mov
cli
dec
or
sub
push
mov
cs
or
push
jno
jae
daa
jg
fmul
add
jne
scas
scas
dec
adc
ljmp
nop
xor
les
lahf
aaa
pushf
out
leave
repz
lds
push
bound
sub
testb
repnz
jno
or
pop
shll
pop
fmulp
fldt
jno
icebp
sbb
pushw
pop
lods
sahf
lods
out
push
inc
into
xchg
stos
adc
xchg
rcr
push
out
cmp
add
pushf
je
mov
and
or
rclb
idivb
and
in
push
in
cmpsb
adc
pop
inc
loope
inc
repnz
mov
jmp
jp
or
hlt
fcomps
adc
loope
test
cmp
jecxz
adc
xchg
xor
rclb
mov
push
adc
push
cmovs
sahf
push
mov
adc
addr16
mov
stos
cmpsb
fstpl
or
mov
jb
call
bound
dec
ja
jg
jo
outsb
and
mov
xchg
push
movsl
cs
or
push
mov
jne
pop
cmc
adc
adc
pop
movsl
sahf
popf
jmp
pop
jge
shrl
jle
pop
xor
jle
mov
mov
aam
push
int3
sbb
cld
and
cmpsb
mov
into
jno
mov
mov
movsb
movsb
or
xor
push
fstpt
mov
out
mov
jae
mov
aas
cmc
mov
sbb
icebp
or
add
pusha
adc
stos
shll
sbb
ljmp
jae
mov
mov
or
add
imul
fidivrs
hlt
jne
fstp
rolb
shrb
lods
pop
ja
stos
mov
test
gs
aam
mov
cmpsl
mov
insl
sbb
jnp
stc
addl
nop
icebp
test
inc
adc
and
sub
imull
push
out
mov
shll
lds
jbe
or
clc
add
and
or
jmp
repnz
mov
fs
out
movsl
dec
repnz
jmp
shll
stc
pop
lock
js
jo
mov
bound
sti
adc
lods
cmp
add
mov
mov
pusha
xchg
sub
dec
cmp
cli
or
cmpsl
xor
mov
outsl
icebp
incb
aaa
sti
ret
test
arpl
imul
add
xor
je
mov
pusha
sbb
adc
cmp
mov
push
test
xor
add
ds
mov
ret
sti
mov
ja
lret
pop
gs
sahf
out
pop
xchg
fcoml
ss
lods
ljmp
mov
lcall
test
xchg
mov
and
outsl
pop
addb
fsubrs
cmp
add
std
out
mov
repz
fmull
int3
cmc
jo
push
push
push
cmc
rcrb
sbbb
inc
sbb
orl
mov
jns
test
mov
xor
and
pop
push
xchg
call
dec
push
arpl
insl
push
scas
test
xor
idivl
adc
sub
inc
out
cltd
mov
bound
popa
or
xor
jne
mov
rclb
pop
mov
sahf
jns
stos
push
stc
inc
lret
xlat
fnstenv
sbb
mov
cmp
js
int3
adc
lods
repz
push
orb
sahf
aad
out
aad
es
jns
xor
jmp
dec
jmp
jg
cmp
leave
popf
inc
fldl
xlat
xchg
mov
jb
xchg
jne
cld
fldl
pop
or
icebp
mov
roll
adcl
daa
ds
or
shrb
sbb
imul
push
loop
push
mov
test
repz
insb
mov
out
and
cmp
out
push
or
neg
dec
cmp
out
push
jl
sbb
stos
ss
fcomp
pop
ss
xchg
push
add
xchg
cmp
xchg
imul
inc
xor
cmp
xor
xor
jb
shrl
pop
sub
ja
push
movsb
jecxz
add
pop
stc
pop
dec
sbb
jne
rcl
data16
into
jmp
pop
adc
dec
pop
subl
and
ss
mov
cmp
es
lret
fmul
out
dec
mov
jnp
aad
fdivs
mov
mov
stc
addl
sbb
lea
and
mov
adc
add
jne
movsl
inc
xchg
adc
pop
sbb
jmp
push
dec
das
adc
fsubl
aaa
cmpsl
ss
inc
clc
pop
jne
adc
xor
bound
ds
add
lahf
ja
adc
sub
inc
aas
cs
sub
adc
dec
sbb
xlat
lcall
cmp
test
jno
xchg
cmp
jbe
ss
test
stc
cwtl
dec
stos
dec
imul
push
dec
mov
ja
jl
cltd
mov
pushw
mov
mov
jo
repz
jne
lret
loopne
jns
xchg
not
jmp
movl
push
icebp
test
sbb
mov
xchg
sti
xor
lret
xchg
pop
dec
mov
subl
cwtl
push
add
mov
insb
sub
sbb
pop
iret
out
add
cmp
fldt
push
aas
mov
sti
xchg
xor
in
lds
pop
test
mov
icebp
push
jb
push
out
into
mov
push
rcl
or
push
pop
mov
cmpsb
push
and
mov
out
xlat
cmp
jns
sbb
lods
sbbl
mov
push
mov
xor
jecxz
pushf
out
xchg
rorl
insb
mov
pop
mov
push
sahf
xchg
sbb
sub
mov
aaa
sub
int
xor
jnp
mov
dec
adc
clc
jecxz
add
daa
notl
xor
clc
in
pop
daa
insb
xchg
add
pop
mov
loopne
mov
sub
pop
or
sahf
adc
in
out
lahf
faddl
and
dec
test
or
lahf
xchg
add
lea
sbb
mov
adc
and
push
ss
nop
cmp
lahf
lcall
popa
fsubrl
dec
in
je
insl
inc
cmp
jno
sub
popa
dec
ljmp
xor
and
adc
arpl
push
jnp
jne
push
stos
out
jno
mov
xor
mov
and
mov
fld
xor
ficoms
inc
cmp
test
mov
and
push
les
hlt
mov
mov
mov
xchg
je
jo
imulb
lahf
scas
mov
in
movsl
pop
jno
sub
cltd
xor
rcll
and
sbb
mov
fcomps
mov
xor
fcomi
enter
sub
inc
stos
or
pushf
xor
cmp
mov
mov
ror
sub
push
shlb
fcmovb
lret
pushf
mov
punpcklwd
hlt
mov
push
fstpl
jge
and
mov
incb
or
dec
loop
cltd
xor
xor
and
outsl
scas
mov
insl
dec
andb
test
loope
cmpb
icebp
stos
scas
inc
fdivs
ret
test
shl
xchg
sbb
inc
popf
xlat
aaa
and
out
inc
cli
dec
cmp
js
stc
enter
inc
mov
xor
xchg
push
cli
xchg
popa
jge
bound
cld
pop
lods
int3
ss
test
stos
int
dec
pop
lds
repnz
lret
push
or
jl
adc
iret
notb
inc
test
xchg
sahf
mov
cmp
insl
std
js
xor
pop
out
xor
pop
and
cltd
arpl
sbbb
or
push
sbb
mov
inc
ds
int3
in
lds
xchg
int3
ret
je
push
fildl
aam
ficoms
loope
lcall
sbb
aad
xor
push
popf
repz
testl
aam
inc
cmp
lret
fimull
loopne
int
or
mov
dec
inc
ds
fwait
dec
sub
fcmovnbe
pop
mov
cmc
xchg
and
scas
arpl
imul
sti
add
adcb
mov
push
xlat
scas
jmp
push
call
xor
mov
pop
xchg
outsl
daa
pop
xchg
pushf
inc
cmpsb
orb
jo
and
int
mov
imul
inc
int3
je
push
push
mov
mov
and
xlat
enter
push
sbb
stos
call
sbb
add
sub
pop
aad
or
sub
push
test
add
cwtl
jle
sub
out
shll
movb
adcb
or
jnp
pop
jnp
inc
xor
daa
mov
fiaddl
wbinvd
repz
adc
mov
aam
sub
movsl
adc
jge
fwait
cmp
and
or
dec
iret
test
jbe
fs
cltd
or
imull
pop
push
xchg
rcrl
push
dec
idivl
test
inc
pop
scas
addr16
dec
jg
xchg
mov
cmpsb
scas
cmpsl
and
test
push
cs
ja
jns
pop
add
je
jmp
aas
loop
push
aaa
ret
jle
popa
std
cmpsl
cmp
cmp
xor
xor
je
daa
jo
mov
adc
xor
add
cwtl
les
mov
cld
jne
je
fbld
mov
mov
push
insl
out
ror
lret
jmp
mov
add
xchg
xor
dec
push
cmpsb
popf
faddl
nop
test
cmp
xchg
js
mov
mov
cmp
pop
sub
cmp
dec
push
dec
movsl
push
push
rcrb
jns
ds
mov
sarb
xchg
fldl
mov
call
push
cltd
lret
aas
dec
dec
sti
inc
mov
jae
arpl
dec
mov
jg
lret
push
jb
ss
sbb
xchg
sub
sahf
loop
cli
imul
xchg
mov
add
jno
flds
mov
jecxz
imul
inc
bound
bound
and
jmp
mov
add
jns
in
popl
push
jnp
test
out
jl
scas
cmp
or
cmpsb
lret
or
jmp
and
adc
xor
push
les
add
nop
data16
sbb
mov
add
data16
data16
xchg
dec
ds
fmuls
cmp
xor
das
sbb
cwtl
mov
adc
iret
lahf
repz
jae
loop
push
dec
aaa
add
movsb
ljmp
pushf
popa
hlt
fwait
imul
je
addr16
sarb
ja
and
sbb
jne
fscale
lcall
adc
adc
popf
pop
or
pop
push
pushl
les
out
roll
add
dec
popa
rorl
push
gs
or
cmp
or
xchg
ret
mov
jbe
push
lods
jb
test
jg
mov
jbe
xchg
insb
mov
dec
test
in
adc
mov
and
push
fistpll
and
test
mov
pop
cmc
dec
test
rorb
dec
aam
arpl
orl
push
les
lret
inc
cmpsl
lock
sub
pushl
lret
xchg
imul
inc
test
adc
lock
sahf
jp
sbb
sub
xor
adc
push
fstl
adc
imul
std
push
cwtl
adc
loop
jmp
add
xor
scas
iret
jns
adc
flds
mov
mov
mov
int
insl
ljmp
mov
pop
cmp
aad
pop
mov
imul
add
flds
dec
gs
cmp
xchg
adc
add
loope
xor
lcall
cmpb
and
cmp
dec
je
ret
jb
stos
imul
push
fldcw
das
mov
push
ret
sbb
subl
movsl
adc
push
cwtl
ret
dec
dec
decb
test
jg
jmp
or
push
movsb
nop
xchg
mov
aas
push
jo
mov
data16
push
pop
add
mov
out
adc
int
loop
add
pop
loop
movsb
jnp
ret
movsl
xchg
dec
mov
jmp
dec
shl
mov
enter
push
mov
pop
lahf
scas
add
cmp
gs
mov
movsl
push
cmpsl
pop
add
cmpsl
mov
sub
les
dec
cwtl
icebp
mov
rorb
pop
insl
inc
push
push
lretw
fstpl
adc
popl
test
mov
push
out
inc
mov
mov
adc
es
aas
sbb
dec
dec
arpl
cli
adc
aam
xchg
add
fisubrl
push
fcmovne
ret
mov
stc
dec
mov
iret
lcall
popf
mov
mov
test
in
xchg
pusha
pop
in
shl
mov
int
das
xchg
add
mov
cwtl
rol
mov
push
inc
jno
push
or
jle
cmp
fldenv
leave
sarb
and
or
jae
xchg
sbb
and
push
out
sbb
and
and
xchg
push
sbb
mov
xchg
mov
lret
pop
add
mov
sub
pop
jmp
ljmp
or
jp
shlb
dec
dec
cmpsb
pop
inc
je
inc
into
shll
loop
mov
add
add
rorl
pop
add
cmp
push
insb
movsl
ljmp
dec
and
cmp
subl
pushf
std
mov
cmp
shll
pop
or
enter
mov
xchg
xor
shrb
pop
mov
mov
xchg
arpl
repnz
sti
or
push
leave
ljmp
ja
int
mov
rcll
test
sahf
pop
xchg
push
push
cwtl
pop
mov
jnp
push
adc
mov
jg
push
cmp
int3
mov
imul
xchg
loope
push
arpl
cmp
xlat
push
sbb
into
scas
sbb
fistpl
xchg
addl
xchg
xor
stos
mov
adcl
adc
js
inc
inc
dec
xchg
test
or
notl
test
stos
cmp
adc
inc
xor
add
xor
jmp
jb
das
and
push
push
pop
xchg
adc
xchg
xchg
sbb
push
gs
repnz
adc
mov
out
push
xchg
and
inc
cmp
jnp
add
mov
inc
aaa
mov
loopne
sbb
popa
jo
xchg
shlb
mov
xchg
loop
mov
repz
push
shl
xchg
mov
rorl
push
and
cmpsl
and
sub
inc
mov
jmp
push
mull
pop
aad
bound
and
repnz
mov
test
xor
jl
into
in
pop
xrelease
push
adcb
pop
mov
enter
das
inc
out
shlb
sahf
scas
mov
adc
mov
test
mov
aas
outsb
mov
mov
dec
dec
jae
lahf
arpl
xchg
stc
popa
sbb
test
cmp
movsl
repnz
lret
xchg
stc
popa
sarb
lods
inc
mov
movsb
in
in
push
shll
iret
xor
shl
stos
mov
aaa
mov
roll
and
or
stc
out
pop
ljmp
jbe
xor
jp
xor
xor
pop
jle
sub
and
daa
ficompl
cmpsb
fs
xor
cmp
test
int
pop
cs
das
jp
inc
scas
sbb
sbb
test
dec
jb
jbe
jge
mov
jnp
insl
pop
xchg
popf
shl
int3
pushf
adc
xchg
daa
inc
sub
or
mov
and
pop
movsb
pusha
mov
cmpsb
mov
clc
inc
inc
out
jge
jo
push
sub
jecxz
out
mov
push
mov
enter
cmp
sub
and
mov
out
lret
dec
fimull
andb
mov
popa
sbb
xchg
mov
nop
mov
rcrl
and
adcb
test
call
loopne
out
andb
cmp
or
idiv
call
dec
jle
stc
pop
xor
dec
pop
jno
jle
mov
out
dec
test
sbb
pop
cmp
mov
dec
shrb
fcos
ss
mov
mov
repnz
dec
xchg
sbb
leave
adc
mov
jle
popf
adc
les
mov
call
jge
pop
xchg
push
lds
call
jp
inc
lret
ficoms
in
lock
sub
xchg
repz
sbbb
js
sub
insb
pusha
imul
rclb
jno
mov
jnp
repz
leave
ss
andl
xor
adc
xor
jl
repz
aaa
jecxz
rclb
enter
xor
scas
pop
dec
fidivrs
bound
jns
dec
mov
push
adc
jne
fmuls
adc
sbb
pushf
rolb
add
movsb
inc
mov
insb
add
lret
sbb
lods
xchg
push
xor
mov
jl
and
cltd
rorb
outsl
add
scas
mull
or
cmp
subb
xor
sub
jns
mov
cmpsb
fiaddl
stc
stos
popf
push
dec
adcl
pop
mov
ret
mov
fs
lods
into
mov
mov
popa
add
jnp
mov
cli
mov
pop
adc
xor
lods
add
sub
insb
hlt
xchg
repz
adc
mov
into
mov
jnp
dec
cmp
push
cmp
shll
sub
mov
pop
lahf
dec
repnz
jge
aad
inc
inc
frstpm(287
test
inc
mov
pop
or
stos
add
mov
cli
pop
dec
cmpsb
adc
sub
clc
jmp
jo
push
and
lcall
adc
sub
or
push
imul
loope
or
fs
mov
mov
nop
cmp
dec
xchg
mov
push
xlat
cwtl
and
dec
lcall
in
jmp
mov
lea
add
jnp
lock
push
mov
adc
inc
dec
or
imul
ja
mov
dec
nop
jns
scas
in
lock
into
pop
pop
xchg
rol
xchg
repz
inc
jmp
ljmp
pop
repz
push
mov
sbb
clc
lret
imul
outsb
sbb
nop
mov
arpl
adc
mov
daa
loope
and
dec
mov
ljmp
sbb
dec
sub
xchg
loopne
pop
add
pop
or
test
add
sbb
subl
nop
out
lcall
pop
sub
arpl
loope
movswl
je
test
or
in
mov
mov
sti
andl
js
sub
push
adc
pop
loopne
lods
push
xor
xor
hlt
dec
sbb
lock
movsl
xor
lcall
fisubrl
in
std
movsb
cmp
xchg
sbb
sbb
mov
aad
mov
push
inc
or
test
fstpl
aaa
arpl
mov
mov
xor
mov
les
push
xor
push
test
clc
repz
ja
mov
mov
and
popa
dec
js
sub
mov
lods
movsb
js
ds
sub
adc
lods
sbb
mov
sbb
stos
xor
leave
xorps
cmpsb
add
daa
cs
xorb
out
out
lock
xchg
stos
shlb
cmp
fwait
cmp
lock
add
mov
jne
data16
insb
mov
xchg
lcall
fs
in
push
int
push
std
jo
rorl
insb
fwait
mov
xchg
mov
pop
adc
dec
cmp
dec
shl
mov
repz
popf
sbb
sub
popf
inc
and
fs
mov
enter
aaa
testb
mov
fprem1
sub
xlat
mov
popa
dec
adcb
sub
mov
xchg
inc
cmp
or
out
adc
outsb
inc
leave
sub
inc
cmp
loopne
ret
imul
loopne
sarl
push
push
ss
les
insb
mov
stc
bound
jge
orl
cltd
stos
lcall
push
cmpb
and
aam
pop
jb
sbb
add
inc
xchg
pushf
pushf
xchg
inc
mov
cld
lret
pop
clc
push
and
push
imul
in
inc
xor
mov
in
xchg
sub
jp
stc
test
cwtl
cli
dec
enter
in
pop
fistps
jg
lds
pop
lea
repz
iret
sahf
pop
push
stos
xor
rcll
dec
adc
cwtl
adc
adc
lcall
adc
fwait
mov
inc
repz
pop
add
inc
stc
sub
sar
xchg
icebp
aas
sub
stos
aam
inc
test
std
das
loopne
xchg
adc
adc
xlat
leave
aaa
pop
and
jmp
dec
sbb
aaa
jl
push
ret
jmp
out
ret
jo
leave
je
xor
in
cwtl
push
cld
mov
push
xchg
jecxz
push
push
xchg
and
lock
lret
mov
inc
mov
mov
cltd
je
idivl
cmp
call
push
or
loopne
pop
pop
arpl
aad
daa
ljmp
pop
lods
popl
and
in
xor
std
es
sbb
out
xor
jmp
nop
xlat
out
cmc
jg
pop
sub
rclb
sbb
pop
jecxz
jns
inc
cmc
rcll
or
bnd
push
lretw
jo
stos
mov
xor
outsl
jne
mov
pop
mov
cltd
xor
loop
lret
push
push
xor
add
lret
cmp
leave
shl
push
add
or
xchg
clc
lods
mov
or
dec
and
xor
pushf
iret
sub
mov
stos
loop
xchg
mov
sub
rorb
dec
inc
mov
or
stc
jb
mov
scas
aad
shl
loopne
jns
inc
es
fwait
xchg
and
fimull
mov
mov
xlat
fidivl
aaa
mov
push
test
mov
inc
ds
shll
mov
pusha
in
gs
fstp
les
mov
orb
dec
js
push
xchg
adc
pop
sbb
ja
pop
xchg
mov
or
sbb
imul
inc
xchg
and
mov
pop
inc
jno
push
sbb
adc
insb
aam
cs
xor
xchg
pop
and
jg
fs
cmp
mov
dec
xchg
push
leave
push
dec
cwtl
push
das
outsb
pusha
inc
sub
mov
push
lret
add
mov
leave
push
loope
lahf
mov
scas
sub
mov
frstor
push
mov
dec
add
or
xor
fistl
jne
pop
push
xlat
gs
iret
mov
ljmp
push
imull
inc
mov
mov
pop
xor
fldl
mov
sbb
jb
in
add
xlat
fs
testl
out
mov
mov
adc
add
jmp
loope
out
repnz
adc
scas
pop
inc
adc
fimull
mov
inc
in
jae
std
dec
cmpsl
dec
push
xchg
xor
jae
sub
sbb
mov
mov
dec
and
faddl
dec
inc
fs
std
push
rol
out
mov
push
jns
xor
cmp
adc
imul
std
icebp
sbb
inc
fisubrs
cmp
push
add
loopne
repz
mov
inc
stos
je
icebp
pop
push
in
cwtl
dec
push
inc
mov
fwait
sub
xchg
or
xchg
aam
lea
insl
dec
and
xchg
push
lcall
scas
mov
xchg
xchg
iret
xchg
pop
jl
pop
out
sbb
jo
xchg
jo
test
into
in
mov
icebp
add
fbld
mov
add
mov
cs
sub
adc
ret
clc
add
pop
clc
inc
movsb
or
dec
adcb
cmpsl
aad
mov
out
mov
cmpsb
ljmp
mov
fwait
mov
jno
push
aad
jo
fsubl
in
jnp
in
push
fidivrl
sub
pop
ret
notb
and
pop
xchg
repz
cltd
pop
sbb
sti
js
popf
insb
fimuls
outsl
cwtl
adc
cmp
mov
ss
xchg
cmc
and
nop
popf
outsl
cmpsb
mov
in
fbld
adc
pusha
inc
xchg
push
inc
push
nop
push
adc
push
pop
popa
dec
jmp
sbb
sbb
and
xchg
cli
xlat
xor
loopne
sub
ljmp
das
cmp
jae
push
and
xchg
push
je
mov
addl
scas
dec
pop
imul
int
movsb
js
mov
shlb
pop
jae
inc
xlat
push
cmpsl
mov
bound
inc
adc
data16
pop
test
mov
repnz
dec
divb
repz
fcomps
mov
mov
sarl
aaa
xor
test
cmpsl
xor
jl
loop
js
mov
push
ret
shll
pop
mov
cmc
sub
inc
je
push
mov
lcall
dec
xchg
cmp
jg
cmp
scas
dec
mov
push
inc
scas
out
scas
fmul
iret
cmp
push
xor
popa
mov
andb
sbb
out
test
sub
xor
xchg
add
sub
incb
and
xchg
pop
lods
mov
cli
jns
xchg
xor
stos
mov
mov
lods
sahf
and
cmp
mov
and
les
xor
mov
cs
fdivrs
xor
xlat
dec
mov
dec
mov
into
scas
mov
je
or
mov
sbb
xchg
pop
addr16
push
jns
pop
lods
cwtl
xchg
add
inc
ret
add
imul
iret
xchg
pop
cmpsl
int3
sbb
sub
loope
xchg
push
les
fsubl
cli
dec
ss
clc
mov
add
nop
adc
jo
mov
cltd
sub
cltd
mov
mov
daa
cmp
push
mov
push
jno
fldenv
fwait
xchg
add
fists
mov
cmp
xchg
and
rclb
mov
adcb
pop
cmp
repnz
aaa
int
pushf
mov
or
mov
jno
popa
lahf
imul
cs
ss
jg
inc
dec
leave
push
jns
xchg
push
xor
sbb
popf
pop
or
sbb
or
push
mov
imulb
push
out
push
xor
push
mov
push
andb
aas
mov
lods
push
mov
mov
dec
push
add
push
mov
ljmp
movsl
xor
sarl
test
mov
outsb
lret
test
nop
dec
subl
or
fldenv
xchg
loope
lea
insb
insb
ret
divb
data16
lods
std
mov
inc
sti
mov
mov
andb
and
push
pop
popf
xchg
xor
pop
inc
xchg
mov
xor
test
mov
iret
repz
imul
push
cmpsl
add
mul
and
mov
popf
rclb
mov
mov
sbb
movsb
push
mov
test
dec
scas
sahf
sbb
mov
loope
inc
or
or
iret
adc
and
insb
das
jne
xor
sub
jbe
cmp
push
jmp
jecxz
lods
adc
jb
and
sub
add
outsl
inc
lea
ds
adc
es
xchg
out
sbb
push
mov
cwtl
push
int3
dec
push
sti
mov
or
insl
xchg
mov
mov
outsb
enter
jbe
cmp
imull
or
xor
mov
testb
pop
dec
inc
into
dec
inc
outsb
ret
pushf
and
sbb
cli
add
push
add
mov
or
jae
rorb
incl
cmpsl
mov
aam
inc
pop
mov
and
mov
sbb
xchg
in
pop
add
inc
inc
push
xor
mov
push
mov
cmp
cld
pushf
xor
mov
push
popf
push
lcall
add
inc
repnz
lcall
xchg
inc
jae
mov
mov
adc
dec
std
sbb
jle
jp
adc
sbb
je
pop
daa
jge
push
mov
dec
sbb
repz
add
cmpsb
cs
bound
mov
jo
lret
gs
notb
pop
stos
lret
inc
ljmp
scas
add
adcb
orl
rcrl
xor
xorl
arpl
rcrb
pop
xchg
popa
dec
inc
jbe
or
addl
ret
mov
icebp
pop
mov
sub
jp
mov
pop
cs
lods
movsb
mov
adc
push
mov
and
xor
jmp
in
cltd
xor
push
cltd
fidivl
cmp
scas
jo
adc
sbb
xor
add
sti
addr16
sahf
cmc
cmp
ret
neg
in
das
mov
in
push
std
movsl
pop
ja
jle
loop
push
stos
push
xchg
jnp
lcall
pushf
rcrb
xor
and
aad
test
xchg
dec
fildl
lret
fxch
mov
movsb
cmp
fistps
adc
loop
icebp
ud2
jbe
xor
cmp
add
js
jae
mov
xchg
test
and
repnz
fnsave
mov
lcall
push
push
clc
ficoml
mov
mov
adc
fdivrs
inc
repz
out
adc
pop
aad
sarb
xchg
mov
adc
into
adc
lea
pop
or
jb
into
cmp
mov
and
aas
mov
setp
jle
mov
xchg
sub
cmp
lea
repz
xchg
lock
or
adc
lock
jg
xlat
adc
stos
inc
mov
pop
cmp
and
mov
or
inc
aaa
and
jne
jmp
dec
dec
mov
dec
add
jmp
mov
mov
xchg
popf
daa
cltd
cli
aas
scas
jae
xor
xor
sbb
push
xchg
test
stos
mov
stos
sahf
fwait
fwait
xchg
sbb
mov
xchg
stos
loope
jae
rolb
push
and
bound
mov
jne
push
outsl
add
cltd
add
imull
mov
faddl
mov
or
pop
sbb
test
jnp
xchg
xor
pop
in
stos
mov
cltd
add
pop
mov
adc
lahf
mov
inc
xor
sahf
and
inc
loope
gs
fldenv
loop
mov
inc
or
jb
sub
inc
sbbl
ss
sbb
mov
and
scas
shr
stos
mov
lret
jge
cwtl
sbb
mov
or
in
add
sbb
sub
dec
movsl
cmpsb
jb
or
cs
sub
pop
add
lret
inc
jns
mov
add
jae
gs
loope
xor
bound
mov
into
imul
jg
inc
mov
xchg
into
adcb
sub
mov
sarb
movsb
negl
inc
cmp
add
pushfw
mov
and
cltd
inc
cmp
dec
mov
xchg
sub
mov
mov
test
push
mov
fiadds
sbb
add
lock
stos
jae
mov
test
add
pop
and
pop
mov
hlt
dec
or
rorl
lcall
test
hlt
xor
mov
cmp
in
cmp
andb
mov
mov
or
les
jns
jle
pop
mov
sub
jb
shll
and
repz
mov
stc
adc
adc
dec
shrl
pop
push
mov
mov
push
mov
sub
mov
jge
lcall
xor
sub
mov
leave
lods
jb
jbe
in
mov
and
iret
clc
pusha
sbb
out
orl
int
sbb
orl
jbe
xor
ds
dec
repz
int
scas
es
push
jl
cmpsb
js
lods
push
mov
xchg
sarl
pop
mov
jmp
outsl
inc
sahf
ljmp
sub
cltd
dec
sbb
or
inc
imul
loope
or
stos
xor
cli
jp
lods
mov
sahf
ret
js
ret
fmuls
sub
cmpsl
les
fadds
sbbl
xchg
pop
jge
enter
loopne
mov
pop
leave
fstl
shrl
pop
cmc
cmp
cmpsb
insb
pop
pushf
pusha
mov
and
mov
pop
adc
mov
jae
divl
sarl
jmp
inc
in
mov
push
ret
in
xchg
pusha
mov
repnz
cmp
jbe
sarb
ljmp
insl
dec
stos
iret
xchg
sbb
lods
mov
push
insb
pop
sarl
jb
jns
sbbb
insb
jns
lea
sub
sarl
sub
dec
adc
fsubrs
mov
ret
push
pusha
lods
mov
jmp
xor
cmp
out
push
call
push
and
mov
mov
rorb
pop
mov
fmuls
pusha
orb
shrl
loop
jnp
cmp
mov
jne
xlat
rcrl
movsb
jmp
insl
jg
ds
jp
lea
sbb
inc
scas
lods
aad
cmp
mulb
cld
mov
fldcw
nop
mov
jp
fimull
sbbb
rol
rcrb
cltd
outsl
push
and
rcrb
xor
mov
loop
testb
jne
xchg
mov
test
lcall
push
mov
jmp
ds
or
ss
xchg
popf
inc
imul
iret
cmc
cmp
enter
int3
sub
jge
cmpsb
xchg
scas
xchg
int3
in
decl
xor
or
and
cmpsl
fdivrl
xchg
out
adc
rclb
pop
rcrl
mov
dec
movl
add
push
fcomp
push
stc
dec
push
icebp
cmp
scas
into
jl
cmp
shrb
cmpsl
call
and
mov
dec
push
aad
xchg
inc
push
int3
popa
and
seto
and
jle
ret
ja
sti
xchg
aad
jge
hlt
mov
mov
or
mov
addl
ficoms
inc
jg
sub
cmp
pop
and
stc
bound
lods
cmc
xchg
push
fstpl
mov
jo
movsb
movsb
sub
jg
xchg
xchg
xchg
sub
fnstenv
sarl
movl
pop
xchg
dec
mov
push
rolb
cmp
cs
push
or
fmuls
jnp
icebp
mov
cmp
call
add
mov
pop
or
xchg
cmpsb
stc
xor
repz
aad
jg
mov
loope
inc
sarl
xlat
pop
add
lret
dec
mov
sbb
jno
hlt
and
add
inc
cmp
cmc
decb
loope
fists
nop
mov
ret
sarb
mov
push
or
jecxz
repnz
fs
pop
sub
inc
push
mov
insb
xchg
xor
push
inc
rcrb
notl
lods
jnp
mov
test
inc
shlb
stos
in
sbb
mov
jecxz
mov
cmp
sbbb
rep
jecxz
popf
ljmp
xchg
movsl
or
jl
sti
jle
cli
push
inc
stos
or
push
sbb
dec
ja
je
inc
in
dec
shrb
movsl
sahf
jnp
jb
sti
sub
testb
pop
clc
push
sub
mov
and
xchg
mulb
push
shlb
mov
sub
aam
and
in
sub
scas
xchg
test
sub
rorl
movsl
outsl
in
imul
into
jae
cmp
dec
gs
dec
fwait
cs
push
jns
cld
stos
dec
dec
cmp
std
add
sbb
loop
mov
mov
pop
in
lahf
outsl
data16
arpl
push
jo
cmp
xor
cmpsb
cli
in
lods
pop
cld
mov
cwtl
das
push
sub
mov
cmpsl
roll
jle
xchg
stos
gs
jb
xorl
adc
enter
popf
xchg
dec
loope
sub
int3
pop
clc
aam
push
cmpsb
inc
out
xchg
aad
sub
xor
xchg
cmp
xchg
inc
pop
push
inc
daa
add
lock
jecxz
gs
testl
sti
jne
ret
into
addr16
jbe
mov
xor
data16
and
mov
or
movsl
sarb
fwait
jmp
inc
xchg
shlb
adc
sbb
push
enter
push
scas
add
cmp
jnp
adc
cmpsb
mov
cli
jo
test
adc
movsb
subb
pop
data16
enter
in
push
test
pop
jl
cmovo
fbld
in
cmp
insl
stc
inc
pop
or
test
dec
scas
in
xchg
push
jp
shr
outsb
sarl
addb
mov
out
lods
inc
dec
aad
jmp
outsl
js
add
fldcw
push
fsub
repnz
push
add
and
ljmp
leave
in
lahf
xchg
imul
sbb
cltd
and
push
imul
stos
dec
add
and
inc
add
sbb
shrl
les
stos
jg
out
add
lock
adc
or
sbb
into
nop
stos
fwait
addr16
and
dec
imul
push
je
pop
shrb
js
movsb
rcr
sbb
xchg
les
cmp
cwtl
pop
test
push
shrb
adc
fwait
pop
repnz
mov
je
insb
aas
inc
and
push
sbb
inc
and
xchg
dec
xlat
pop
iret
jae
push
adc
aas
jmp
movsl
outsb
jg
jl
leave
aad
adc
test
xchg
and
push
insl
shl
push
fistpll
push
mov
out
cmp
sub
fs
jge
jbe
mov
push
push
enter
jnp
jmp
ss
mov
test
push
sub
mov
sbb
loope
in
icebp
imul
out
mov
pop
mov
and
jb
lods
movsl
test
cmp
insb
jp
enter
add
mov
xor
add
push
cmpsb
jo
cmp
lds
and
sub
ja
cmc
jmp
adc
xor
test
pop
mov
mov
push
inc
cmp
xchg
sbb
jne
and
stos
clc
xor
ss
lods
xchg
sti
clc
cmp
push
jne
add
pop
xchg
fsubrl
push
cmp
out
dec
jbe
or
in
xchg
mov
adc
dec
pushf
pushf
or
cmp
mov
sbb
subb
lock
das
push
es
fadd
pand
or
mov
pushf
push
popl
js
out
rcr
movsl
xchg
cmp
out
imul
hlt
out
sbb
nop
adc
nop
adc
xchg
push
les
or
and
sahf
ds
mov
lock
xchg
mov
lock
sbb
arpl
lds
mov
lock
in
pop
sub
and
in
xor
call
subl
push
inc
idiv
pop
jle
test
fdivrs
cs
enter
mov
test
mov
sbb
xchg
out
divl
xchg
mov
sub
scas
nop
cltd
pushf
ljmp
dec
nop
sub
cmp
jp
or
int
cmp
shlb
sub
scas
jb
add
dec
sti
mov
cmp
loope
push
push
outsb
out
roll
or
adc
es
orw
js
jg
aas
pop
shrl
mov
icebp
xor
xchg
lods
push
shl
pop
add
ja
pop
pop
cmpsb
jns
add
adc
inc
fldl2t
fmull
pop
add
and
mov
add
adc
mov
lcall
pop
mov
xchg
subb
test
xchg
inc
out
xor
inc
in
out
and
cwtl
xchg
lods
jecxz
mov
cmp
xor
mov
mov
in
cltd
push
int
sbb
int
mov
les
int
data16
das
push
cmpsb
andb
enter
hlt
rcrb
adc
jmp
test
fdivrs
inc
pop
ret
leave
addr16
pop
mov
cmc
cmp
mov
jmp
insl
adc
sub
decb
test
test
int
push
je
insl
dec
mull
mov
pop
mov
pop
aam
fisubrs
outsb
out
sbb
pusha
sti
add
and
pusha
push
add
adc
xor
adc
xchg
sti
and
sub
outsb
adc
or
mov
sub
das
pop
cmp
or
adc
scas
addr16
sbbb
jns
jp
or
mov
rol
mov
pop
jnp
push
xchg
xchg
jle
adc
push
mov
int3
mov
mov
pop
inc
sahf
cli
adcb
lea
out
in
jge
lods
insb
icebp
shl
in
xor
sbb
add
js
pop
fimuls
and
std
repz
out
and
pusha
js
stc
dec
neg
cmp
fisubs
movsl
icebp
outsb
aad
movsl
xchg
insl
in
pop
mov
pop
push
popf
and
mov
cld
data16
fldl
and
stos
push
mov
lcall
jo
mov
ror
aad
mov
out
ficomps
sbb
subb
lret
push
or
popa
mov
mov
andb
movsb
pop
cmpsl
cmp
fsubr
pop
cwtl
cmpsb
cwtd
cmp
xchg
aas
push
fists
xchg
aad
adc
adc
jmp
mov
or
xchg
scas
adc
out
jle
dec
mov
aas
popa
sahf
jne
sub
xor
pop
incb
into
repz
test
xlat
push
loop
pop
sbb
sbb
fs
fbstp
js
pop
ja
mov
and
imul
insl
jp
xchg
sub
aaa
jne
and
pop
hlt
add
ret
ljmp
sarb
inc
sub
cmp
dec
sub
push
mov
popa
cld
xor
dec
data16
insl
sbb
inc
rcl
pop
loopne
scas
push
pop
mulb
inc
push
ds
insl
dec
cmpsb
xor
mov
mov
cmp
repz
pop
out
movsb
xor
xchg
gs
js
push
pushf
xchg
mov
add
aad
data16
dec
repz
sbb
mov
pop
dec
push
scas
mov
sub
bound
dec
pusha
sub
pop
add
mov
arpl
dec
aad
pop
das
add
fists
insb
lahf
or
int3
jle
int
in
scas
fsubr
out
jle
and
pushl
std
xchg
movsb
or
jmp
in
cmp
sub
fcoml
ss
push
mov
mov
mov
xor
mov
sbb
test
in
inc
imul
test
jge
mov
icebp
mov
sarl
cld
outsb
fistpll
mov
daa
std
xchg
xchg
jl
push
xor
pop
fists
sub
test
push
out
fsubs
cmpsb
pop
inc
daa
stos
pop
push
adc
or
jne
fwait
inc
and
fsubrs
loop
cwtl
sarl
repz
test
and
xor
jne,pt
ret
int
or
popa
sub
xchg
xchg
ret
sbb
mov
push
orb
xor
pop
pop
lds
sub
cs
in
stos
test
inc
jb
inc
cmp
cmpsb
scas
and
adc
cltd
xor
loopne
pop
push
cmpxchg
inc
outsb
mov
insb
adc
mov
or
daa
jbe
lcall
cmp
adc
scas
cld
and
sub
stos
cmpsb
sahf
cltd
repz
and
lret
sub
sbb
inc
repz
add
mov
lods
adcl
shll
push
or
lea
or
iret
loop
int
inc
dec
and
addr16
adc
insb
cld
ror
jbe
in
mov
out
arpl
mov
leave
xchg
lds
mov
stos
jno
push
sub
cltd
mov
dec
scas
sbb
das
and
cs
xor
mov
jg
mov
divl
dec
add
push
xor
icebp
in
inc
sahf
xchg
rclb
loope
daa
inc
xlat
push
fisttpl
mov
inc
fldcw
insl
and
clc
pop
add
mov
dec
daa
add
dec
push
push
enter
jp
popf
out
cmp
icebp
sub
pop
push
adc
ja
or
mov
dec
nop
push
push
mov
jge
ljmp
inc
add
lahf
mov
outsl
jno
cmc
aam
sub
cld
xor
loopne
sbb
lahf
mov
fadds
mov
push
shll
dec
lods
out
ds
pop
sar
cmpb
jmp
mov
jge
add
jl
cwtl
movsl
test
mov
and
jnp
mov
jo
sub
inc
sbb
mov
push
push
nop
sarb
and
lock
lods
insb
xchg
arpl
xchg
mov
mov
jecxz
cmc
out
mov
and
enter
loop
push
fsts
cli
cmp
inc
jl
push
fldt
ficoms
cwtl
inc
sbb
adc
sti
inc
lret
fstpl
jl
or
fstpl
jmp
sbb
pop
xchg
mov
test
inc
stc
movsl
or
pop
in
test
movsl
pop
fnstcw
je
daa
xor
xchg
push
repnz
dec
mov
mov
push
stos
mov
loope,pt
mov
out
or
add
fdivrs
cmp
sbb
daa
push
add
jo
sub
mov
mov
sbb
mov
sbb
sahf
adc
inc
lcall
xchg
pop
mov
ret
push
in
bnd
sub
xor
andl
jb
push
rorl
lds
popa
aad
jge
jns
arpl
shrb
fs
cli
add
mov
icebp
add
mov
pusha
push
push
cmp
in
dec
dec
push
inc
js
adc
cmp
ret
xor
xor
ficomps
xor
sbb
hlt
xor
cld
lods
or
xlat
mov
mov
sbb
fwait
loop
adc
or
notl
add
out
ret
adc
mov
sub
jl
lahf
or
test
dec
mov
clc
adc
sarl
les
push
sbb
jecxz
inc
push
inc
mov
mov
lahf
push
xor
sub
rcl
mov
and
inc
xchg
adc
ret
imul
loopne
jle
fcompl
icebp
pusha
negl
test
out
xor
mov
outsl
orl
mov
xchg
rorb
xlat
outsl
mov
cs
lds
cmp
push
cli
or
mov
xchg
fsubrl
aaa
xchg
sub
cmp
add
nop
add
js
or
jnp
in
loop
push
in
mov
push
xor
clc
test
mov
and
cmp
mov
jmp
sub
push
and
xchg
mov
mov
pop
jmp
iret
add
push
add
add
nop
mov
call
adc
xlat
das
data16
aaa
aas
test
jne
sub
inc
mov
shlb
fwait
inc
mov
lahf
mov
mul
rclb
pop
adcl
fnstsw
sbb
icebp
adc
jb
test
sbbb
cmp
adcl
fists
out
pop
push
jnp
adc
out
test
je
mov
arpl
jmp
mov
sbb
jb
movsl
dec
insb
push
sub
inc
jno
jnp
stos
dec
pusha
rcrl
and
pop
mov
lret
in
filds
lcall
jg
xor
subl
cmp
pop
jo
cmpsb
push
jae
xchg
and
shl
cli
push
ja
stos
inc
ljmp
lret
cmp
pop
out
icebp
icebp
std
push
cmpsb
push
into
push
popf
and
fidivs
xchg
inc
and
mov
shrb
jl
mov
je
jnp
hlt
scas
dec
fmul
push
sub
add
sahf
dec
sbb
push
sub
xchg
das
push
mov
sbb
jno
adcl
out
push
push
cmp
outsb
fyl2x
lea
subb
mov
jp
shlb
rcll
data16
popa
and
hlt
xchg
ficomps
cmp
cmp
sbb
push
xchg
das
mov
repz
ret
add
bnd
sti
lret
ljmp
xor
fdivp
sub
inc
mov
sbb
adc
or
test
and
sub
adc
sarl
xchg
adc
mov
mov
test
pop
cli
mov
shlb
or
and
lds
mov
mov
and
das
push
and
mov
popa
lods
les
and
add
and
or
aaa
sub
mov
ljmpw
xor
mov
cli
xchg
js
idivb
sti
add
lds
stc
push
mov
fcom
xchg
movswl
mov
inc
sbb
dec
inc
xchg
push
out
dec
sarl
mov
or
sbb
in
mov
sub
fsubl
fisttpll
dec
xor
decb
add
mov
push
add
sarl
dec
mov
dec
mov
aad
sbb
in
jmp
test
dec
inc
fidivrs
fidivl
mov
mov
out
pop
add
shlb
shrb
addr16
dec
push
scas
dec
inc
adc
mov
adc
add
out
xchg
pusha
jae
xchg
mov
ss
mov
imull
dec
sub
test
sbb
or
mov
mov
sbb
clc
aad
out
imul
and
cmc
nop
mov
outsl
xlat
outsl
xor
ret
or
fwait
lret
stos
mov
xor
pop
call
jns
data16
cmpsl
and
and
int3
jecxz
lods
dec
leave
push
inc
pop
scas
jg
xchg
mov
jecxz
fsubs
mov
ds
testl
mov
shll
mov
push
xchg
addr16
sub
test
fcmovnb
mov
push
pop
xor
pushf
popa
stos
pop
push
fsubrs
mov
sti
fnsave
xchg
outsl
and
sub
cmp
jmp
push
in
xor
sub
test
dec
push
mov
xchg
cwtl
adc
jno
adc
inc
inc
jp
push
pop
sub
ss
roll
dec
or
outsl
sbbl
pop
mov
push
inc
pop
xchg
or
and
inc
imul
pusha
mov
lret
mov
fadds
cmp
mov
or
pop
add
push
into
xchg
int
in
imul
test
and
loop
pop
adc
popf
adc
adc
arpl
pop
out
xchg
fdiv
sbb
adc
fwait
inc
mov
xchg
rorl
or
push
scas
hlt
imul
cwtl
lods
sbb
out
aas
ret
mov
mul
test
jo
outsb
inc
push
xor
pop
sbb
out
dec
enter
sbb
jl
dec
cwtl
lret
push
add
push
aad
scas
subl
jo
mov
cmp
fistl
mov
jg
mov
sbb
loope
inc
cld
mov
int3
xor
push
mov
in
or
inc
dec
dec
pop
cmp
push
sbb
jno
scas
je
imul
xor
pop
add
test
test
pop
sbb
mov
dec
fwait
jmp
pop
mov
mov
inc
lea
test
aas
iret
shlb
lret
jno
leave
loopne
or
cmp
aaa
xor
mov
push
cli
mov
rorl
mov
and
imul
sbb
and
mov
pop
sbb
pop
clc
cmp
and
xor
lret
je
add
faddl
sbb
fprem
push
xchg
inc
pop
sbb
jg
push
xchg
jnp
xchg
pop
dec
nop
in
add
popa
stos
test
xchg
das
pop
jns
test
push
faddl
dec
test
cmp
push
leave
repnz
mov
vcvtsd2si
or
aam
sub
nop
inc
mov
nop
int
jnp
shll
lods
andb
pusha
sub
subb
dec
fcompl
fistpll
mov
pusha
out
std
inc
pop
dec
ja
nop
lahf
out
shrl
ret
mov
cmpb
adc
jae
jp
lahf
aam
mov
insl
fsincos
mov
popa
push
js
inc
aaa
andl
aas
add
out
cmp
or
jle
ror
and
push
xor
inc
in
sub
out
out
xor
xor
pop
loope
into
dec
and
or
xchg
incl
mov
xchg
pop
inc
cwtl
sbb
push
insl
cmp
push
adc
in
cwtl
lcall
pop
and
mov
mov
pop
cmc
pop
cld
jo
push
or
popf
outsb
pusha
lret
mov
aaa
mov
fisubrs
mov
xchg
xchg
inc
sar
pop
xor
sub
push
inc
test
les
xor
cwtl
jle
hlt
pop
int
aad
outsb
das
lret
dec
out
std
adc
sub
dec
cwtl
cmp
data16
sbb
cmp
adc
pusha
and
mov
shlb
addr16
inc
dec
xchg
in
in
xchg
xor
imul
bt
out
dec
cmpl
pop
cmp
notl
jno
mov
mov
xor
xchg
popf
adc
add
je
out
mov
test
or
mov
sub
test
cmp
jae
pop
mov
xchg
xor
inc
movsb
inc
dec
lahf
mov
enter
addl
push
pop
cld
outsl
and
out
xchg
dec
hlt
and
sub
pop
clc
xor
sbb
sti
jmp
sub
aas
cs
mov
jl
enter
xor
mov
push
pop
inc
adc
xor
sub
std
cli
stc
mov
adc
mov
ja
adc
and
icebp
andb
jge
call
dec
icebp
idivl
ss
aas
icebp
les
call
pusha
dec
pop
stos
jl
push
push
pop
add
fs
in
lods
inc
data16
jo
lcall
out
ds
and
mov
insb
mov
test
daa
scas
cld
adc
sub
movsl
xchg
ficoms
psubsw
fwait
decb
ror
push
add
cmp
ljmp
repz
dec
mov
leave
jmp
movsl
and
sahf
mov
xchg
lahf
adc
imul
sahf
dec
psraw
fwait
ror
jl
or
test
insl
sub
iret
push
mov
dec
xchg
cmovs
out
rol
pop
bound
pop
sub
pop
mov
cmp
movsl
jae
inc
dec
fidivrl
sti
gs
ret
sub
popa
lret
mov
cmpb
rcrb
push
cmp
nop
mov
std
imul
test
idivb
out
push
push
std
cmp
lods
cld
mov
mov
cmp
xor
js
cld
cmpsb
sbb
les
insb
lods
or
inc
ret
cmp
sbb
mov
add
and
addl
inc
cltd
pop
xor
pop
jmp
cmpsl
ficoml
xor
cli
ret
lahf
pop
cmpsl
je
dec
cmp
xor
inc
pop
push
fcoml
adc
setl
sub
xchg
mov
sti
fwait
jno
test
je
inc
shr
inc
test
fs
mov
fnstcw
xor
inc
daa
adc
stos
cmpsl
or
mov
jb
lret
insb
sbb
xlat
mov
add
or
loop
xor
loope
adc
xor
cmp
sti
rclb
movsl
xchg
dec
sub
inc
sarb
rcrl
into
lret
mov
sub
dec
sbb
clc
mov
je
es
mov
loope
leave
popf
rcrb
mov
mov
mov
rcll
fsubrp
pop
inc
xchg
push
mov
sbb
push
dec
or
icebp
push
clc
enter
aas
pop
rclb
iret
xor
int3
out
shrl
test
pop
int
sbb
addb
jo
int
daa
inc
dec
inc
stos
loopne
cs
clc
cmp
outsb
push
stc
iret
and
mov
shl
jne
push
xchg
mov
push
xchg
pop
inc
sarb
ss
jle
lods
je
shl
dec
out
push
ret
inc
xor
leave
int3
mov
push
pop
js
mov
ljmp
sbb
ljmp
and
cs
jns
xchg
je
outsl
test
sarl
pop
outsl
jnp
and
testl
jno
dec
test
aas
xchg
in
dec
or
hlt
push
pop
mov
push
inc
js
push
cld
jbe
cmp
push
inc
addb
jne
lret
sub
mov
je
xor
enter
repz
adc
mov
out
sbb
sub
movl
or
sarb
or
jo
insl
add
sub
outsl
data16
je
insb
outsb
pop
xor
or
cltd
orb
jns
stos
popf
xchg
jg
mov
lods
or
jecxz
or
dec
pop
xchg
and
jl
add
repnz
pushf
test
cld
movsl
pop
add
fidivrl
mov
mov
push
dec
xor
stc
cmp
pop
js
mov
cmp
cld
mov
mov
pmaxub
push
lea
leave
pop
pop
test
jg
and
data16
nop
mov
adc
jp
dec
fcoms
mov
push
sub
ljmp
lds
lret
jp
or
mov
fidivs
mov
inc
stos
jae
in
and
dec
sbb
push
ret
sbb
mov
mov
stc
stos
icebp
int
push
and
jo
jae
fnstcw
push
mov
es
cmp
orb
mov
in
icebp
test
adc
xor
out
loop
je
sarl
enter
pop
push
sbb
jl
add
pop
icebp
or
lret
mov
jp
push
pop
sbb
outsl
pusha
jo
xorl
dec
pop
or
jecxz
loop
clc
adc
dec
add
or
jae
ja
adc
in
scas
lds
fs
mov
push
ror
mov
lods
jmp
pop
lods
dec
mov
loope
and
aaa
jecxz
in
add
jmp
in
mov
xchg
fs
fsubrs
arpl
jecxz
clc
inc
pusha
ret
nop
jl
push
insb
fstps
shll
gs
mov
xor
adc
sahf
xchg
les
int3
jbe
mov
jnp
jecxz
jnp
inc
mov
jae
sahf
jl
gs
jmp
cmpsb
repnz
notl
inc
loopne
inc
jg
xor
or
gs
leave
sar
dec
fucomi
mov
mov
push
je
mov
mov
iret
jno
jb
jp
mov
inc
ret
mov
mov
xor
cltd
test
sbb
mov
cmp
sti
xchg
cltd
push
mov
or
addr16
push
daa
hlt
sub
in
jae
pop
xchg
adc
mov
inc
xor
cltd
push
enter
push
gs
out
xchg
fdivr
out
or
dec
outsb
jmp
fdivr
rolb
mov
jl
add
js
popa
mov
cmpsb
into
fistl
aas
push
enter
or
push
stos
push
jl
adcl
xorl
or
jbe
inc
pop
xchg
fisubl
enter
daa
icebp
enter
imul
inc
in
add
add
rcll
pop
aad
or
mov
mov
cld
or
adc
dec
lea
imul
insl
in
movsb
mov
add
stos
scas
movsb
dec
dec
pop
lret
je
or
pop
mov
push
xchg
pop
and
mov
jmp
mov
out
imul
xchg
cmp
bound
and
add
imul
or
pushf
cmp
pop
pop
jle
xchg
jp
lock
xchg
pop
scas
add
ds
pop
inc
aas
fdivrp
fsubs
add
jp
inc
or
and
ljmp
push
lahf
daa
mov
shlb
rcll
xor
sub
cmp
dec
fsubl
inc
xor
flds
bound
cmpsb
icebp
adc
lea
jg
rol
xchg
sub
jns
inc
push
jae
sbb
mov
mov
mov
pop
mov
and
xchg
inc
adc
mov
push
loopne
jne
jg
adc
loope
mov
pop
loopne
inc
in
push
imull
push
insb
loopne
loop
add
sub
xchg
push
jne
or
out
inc
sbb
ja
push
mov
mov
in
sbb
cmpsl
hlt
mov
xchg
int
fcomps
adc
mov
aas
dec
xchg
mov
inc
ret
es
add
pop
nop
mov
clc
daa
jbe
mov
imul
shrb
hlt
dec
sub
xlat
mov
dec
dec
push
add
sbb
idiv
popl
test
pop
icebp
mov
outsl
lcall
ss
dec
push
mov
ds
repnz
and
push
adc
sti
push
jg
jo
in
mov
pop
inc
or
cs
push
lds
cs
xor
mov
rclb
dec
fldenv
xchg
sarb
mov
jns
ljmp
sub
enter
in
lods
push
call
cmp
scas
loopne
out
std
inc
adc
into
icebp
xchg
adc
movsl
dec
out
mov
lods
jecxz
cmp
jno
push
push
scas
fstp
dec
xchg
iret
test
imul
in
scas
inc
arpl
inc
cmp
jb
sub
or
out
dec
cltd
cmpsl
addr16
pusha
xor
xchg
jno
fs
add
pop
sbb
mov
sahf
lcall
xchg
pop
mov
ficoms
inc
mov
rcrb
out
js
test
hlt
out
and
pop
in
add
ljmp
cmp
pop
pop
ret
push
xchg
addr16
mov
call
add
pop
repz
int
test
lahf
ljmp
stos
jge
into
xor
loope
pop
sub
jge
jl
out
xor
add
cmp
shlb
fsubrl
or
test
stos
icebp
stc
out
leave
adcl
sub
shrl
fcmovbe
rcrl
nop
imul
fwait
mov
xor
in
pop
xchg
push
cmpsb
fildl
int
fstpt
pop
jmp
punpckhwd
in
imul
in
lea
mov
mov
sti
out
sub
xchg
add
jg
testl
fsubp
add
aad
add
dec
inc
xchg
cmp
mov
jle
imul
arpl
jmp
xor
and
adc
pop
andl
lds
lret
or
decl
push
int3
pop
xchg
sub
ret
es
outsl
lcall
sbb
decb
cmp
mov
and
xlat
fists
mov
push
jbe
push
add
jmp
mov
mov
int3
cs
adc
cmp
jns
aas
mov
call
out
mov
pop
shll
jmp
pop
ljmp
xchg
sub
inc
jo
lahf
repnz
push
rcrb
stos
fimull
jecxz
cmp
dec
call
mov
lcall
jo
jle
bound
outsl
or
cltd
pusha
enter
lcall
lods
cmpsl
mov
daa
push
mov
and
push
push
or
lret
bound
mov
jmp
inc
hlt
fadds
aas
cmpl
aas
js
dec
inc
inc
test
dec
orb
inc
lds
add
ds
and
adc
arpl
cmp
mov
mov
ret
in
sub
ljmp
test
adc
and
pop
cmpsb
sahf
std
les
cmp
mov
fnsave
fstpt
push
jno
push
pop
jae
xchg
jns
jmp
dec
xchg
sub
dec
int
movsb
int3
add
jae
mov
int
notb
icebp
hlt
xchg
loope
dec
aaa
cmpsl
mov
sbbl
mov
and
adc
js
shlb
adc
xchg
fxch
inc
std
scas
mov
inc
sub
inc
fistpl
je
jne
jle
dec
ds
and
je
pop
sbb
add
xchg
jmp
clc
mov
inc
lock
jnp
pop
insl
mov
xor
dec
sub
jmp
dec
imul
addr16
xchg
cmpsb
inc
mov
or
xchg
popa
into
movsb
mov
push
inc
dec
int
pop
sub
add
notb
lods
test
fcmovne
mov
lret
fnsave
aas
mov
imul
gs
fwait
stc
cld
fadds
rcl
push
out
mov
int
sbb
cmpsb
out
stc
inc
push
cmp
mov
adc
or
dec
in
scas
jae
bound
add
mov
dec
notb
push
add
dec
and
sete
iret
lcall
pop
repz
inc
testl
push
repnz
bts
inc
jmp
push
cmp
jb
sub
jle
sbb
pop
dec
inc
adc
test
divl
mov
inc
mov
or
mov
sbb
and
ss
sub
popf
cmpl
in
or
dec
xor
dec
add
imul
push
iret
sbb
sbb
arpl
cwtl
or
push
xchg
mov
mov
popf
leave
cltd
pop
xchg
xor
add
and
in
adc
repz
or
jbe
dec
or
mov
fdivl
roll
loop
xor
mov
loope
mov
mov
xchg
mov
in
push
imul
pop
push
call
enter
xchg
sbb
lret
pop
inc
bound
movsl
add
enter
adc
dec
sub
lock
dec
xor
scas
cwtl
xor
les
test
add
cmc
sahf
repnz
dec
xchg
lock
fildl
incl
adc
ret
nop
je
out
mov
cltd
jmp
cld
adc
xchg
cmp
and
lea
lods
jno
repnz
lea
daa
mov
rcll
dec
enter
js
insl
sub
pop
cmpxchg
fisttps
in
push
adc
cmc
enter
out
loop
mov
sub
lds
mov
aad
adc
jmp
xchg
lahf
negl
bound
dec
jbe
outsl
in
sbb
fnstcw
jo
movsb
icebp
aam
sbb
cmp
adc
test
or
into
add
pusha
mov
ja
push
icebp
pop
inc
insl
jl
je
jmp
lret
and
sti
lahf
adc
lret
je
das
stc
jmp
sbb
jmp
push
or
sarb
aas
mov
addr16
cmp
ret
xor
subb
mov
fsubrp
jecxz
rorb
add
mov
mov
cli
gs
mov
outsl
int3
rol
testb
xor
sub
test
mov
pusha
pop
mov
mov
pop
stos
in
stos
dec
xor
test
rcll
or
or
aaa
inc
dec
pop
cltd
xor
xchg
mov
rcl
js
mov
mov
leave
iret
push
sub
imul
jmp
stc
ret
xchg
fnstcw
mov
add
mov
mov
aam
lods
ficoms
sbb
jns
pop
mov
add
push
outsl
inc
add
fcmove
orl
in
adc
aam
jmp
icebp
mov
and
or
mov
inc
adc
sar
inc
fwait
mov
add
mov
jmp
leave
subl
push
inc
mov
shlb
jne
pop
jo
mov
repz
lahf
fstpl
call
scas
inc
inc
push
sbb
iret
out
pop
dec
lods
dec
pop
dec
ret
les
mov
shlb
mov
pop
inc
lods
add
enterw
pop
and
push
jge
leave
mov
or
repz
adcb
mov
sbb
insb
dec
add
sti
popf
loopne
std
push
pop
adc
ds
cld
les
ret
je
or
in
xor
mov
jge
lea
pop
cmp
add
mov
mov
push
jno
in
mov
fisubrl
inc
jbe
cmovo
push
outsb
loopne
gs
mov
cmp
insb
movsb
stos
xchg
inc
add
lods
cmpb
sub
pusha
shr
push
ljmp
mov
or
ss
not
push
and
and
xor
aaa
clc
pop
inc
fs
push
vpaddusb
in
fstp
cmp
int3
pop
xchg
dec
cmp
aas
xchg
jp
movsb
mov
ret
mov
jne
fs
cmp
xchg
mov
xor
fisubrs
loop,pn
inc
adc
sbb
pushl
jns
cmpsb
mov
push
adc
fiadds
fmull
ljmp
inc
jb
fmuls
mov
dec
sahf
xchg
inc
lahf
mov
cmc
mov
jbe
fdivr
dec
ror
jecxz
or
dec
movsl
add
push
bound
daa
les
js
xchg
mov
cmc
sbb
lock
xchg
adc
and
sub
cld
mov
adc
dec
push
into
fsubrs
cs
dec
push
rorb
mov
lock
cmpsl
pop
xor
cmp
sub
fnstsw
movb
cltd
jmp
test
cmp
dec
xchg
in
stos
xchg
mov
addb
push
and
lock
adc
cmc
std
push
outsl
xor
pop
stos
mov
insl
cld
aam
shlb
inc
mov
cmp
mov
xchg
jns
inc
dec
out
enter
add
repz
xlat
xlat
pop
xor
mov
push
shlb
loop
pop
sbb
lea
xor
pop
sbb
test
movsb
jg
pop
and
sub
sti
cli
pop
mov
push
jle
repz
mov
shlb
xchg
push
test
jecxz
cmp
mov
pop
mov
cli
sub
pusha
cld
js
pop
mov
test
lahf
sbb
mov
sarb
cmp
shrl
mov
iret
push
dec
je
in
subb
adc
pop
loope
in
stc
mov
sbb
scas
test
jg
sbb
or
lock
cmp
out
jne
pushf
xorl
fiaddl
xchg
repnz
jno
mov
aad
sub
mov
rorl
lahf
dec
imul
popf
xchg
adc
cld
mov
ret
aas
jbe
inc
push
or
pop
or
jno
lret
pop
int3
pop
rorb
mov
cmp
daa
jg
add
aad
roll
cmp
xor
add
cwtl
in
je
cld
loope
scas
andl
jmp
in
mov
movsb
dec
cmp
arpl
fidivs
mov
mov
push
lahf
or
adc
sahf
dec
or
int3
cmp
iret
jnp
sti
cmpsl
stos
sbb
xchg
adc
fcompl
or
xor
rcr
sbb
stos
dec
nop
cmp
cld
mov
mov
mov
sbb
add
mov
enter
add
loope
std
out
dec
pop
repnz
mov
pop
adc
pop
jo
push
push
jmp
push
in
gs
and
pop
test
xor
loop
push
and
sbb
lea
sub
or
lret
xor
mov
pop
movsl
push
xorl
lock
insl
lea
ja
ret
adc
mov
xor
lods
and
fimull
pop
xchg
xchg
jmp
int3
in
lahf
lcall
dec
dec
fdivr
mov
dec
lods
and
scas
stc
add
cmc
inc
cmp
das
in
adc
fprem1
mov
es
test
gs
ret
xchg
dec
mov
adc
mov
imul
in
push
lret
adc
int3
dec
cli
gs
fdivrs
imul
iret
mov
icebp
cmc
jge
adc
mov
jge
and
adc
pop
fldt
add
pusha
push
jbe
repz
gs
lcall
jg
inc
les
jp
pop
das
or
pop
inc
jl
xchg
push
xchg
shll
sub
addr16
std
es
in
jb
test
je
lea
mov
sbb
xorl
shll
sub
push
sbb
subl
pop
dec
repnz
add
xchg
push
rorl
jl
add
mull
sti
pop
jecxz
cli
gs
jno
sarb
adc
pop
out
cmpb
cmp
sub
shll
mov
or
mov
jb
cmpsl
inc
or
xor
enter
mov
cmp
repnz
mov
mov
xorb
add
ret
into
mov
popa
pop
cltd
push
enter
std
hlt
sbb
outsl
mov
push
mov
cmp
sbb
fsubr
pop
mov
add
xchg
adc
xchg
sbb
aaa
int3
jbe
fnstcw
jle
adc
test
jae
mov
dec
or
mov
or
jno
iret
rsm
nop
inc
sti
movsb
xchg
out
cmp
hlt
cwtl
ret
mov
jmp
aas
loop
stos
out
or
cmp
lahf
movsl
mov
xchg
xchg
inc
in
cmp
rclb
sbb
aad
dec
in
sbb
movsb
push
mov
jne
push
jb
insl
movsb
call
fs
ljmp
dec
pusha
insb
orb
outsb
mov
out
mov
pop
jno
cli
test
sub
dec
mov
add
fs
dec
jne
cld
inc
call
and
stos
lcall
int
arpl
movsl
xchg
insl
sub
push
jnp
mov
mov
xchg
fdivrs
test
clc
jmp
adc
dec
xchg
shrl
mov
cmp
out
fwait
insb
inc
icebp
out
data16
popa
addr16
in
rep
inc
imul
jae
and
jl
sub
mov
or
fadds
dec
cmp
pop
mov
jge
js
rcl
addl
xchg
sub
inc
fadd
lods
fs
xor
js
je
fstpt
cli
sti
pop
mul
ficoml
push
add
mov
or
or
es
jo
sub
jb
jmp
push
push
ljmp
scas
icebp
out
idiv
divl
and
pop
and
movsb
mov
ljmp
icebp
fadd
fnstenv
mov
xchg
jge
sub
fldenv
add
es
test
fidivrl
imul
mov
movsl
incb
mov
inc
in
add
sbb
loop
test
daa
xlat
or
mov
xchg
fildll
push
fimull
out
add
jns
cmc
add
mov
out
mov
and
inc
lods
push
cmp
or
scas
scas
cs
mov
in
jne
sub
xchg
lock
pushf
sahf
loopne
cmc
mov
outsl
sar
mov
xorl
cld
aas
lret
repz
dec
data16
mov
mov
lea
int3
rolb
shrb
or
mov
jg
pop
sub
sbb
shll
mov
xor
jle
out
ds
mov
lock
andl
xchg
sub
shl
sbb
clc
sbb
js
xchg
sub
sahf
out
fcoms
cld
jecxz
sbb
inc
cmp
pop
pushf
sbb
ret
adc
dec
or
sbbl
or
sbb
jecxz
xchg
ja
or
mov
push
movb
adc
jmp
push
add
jae
lret
xchg
cmp
xor
in
pop
in
pop
mov
daa
mov
movsb
enter
lret
and
push
pop
les
mov
inc
push
addr16
scas
imul
pop
push
jp
push
or
les
sub
mov
push
fldl
lods
push
fdivl
ret
cmp
pusha
icebp
lcall
loopne
pop
jbe
enter
add
push
out
jb
popa
into
lds
mov
jg
add
mov
mov
jge
arpl
inc
roll
fnstcw
nop
jb
out
outsb
pop
out
ljmp
add
dec
test
aaa
imul
cmp
jge
cmp
push
sbb
dec
xor
movsl
dec
repnz
push
decb
bound
aad
push
stos
or
clc
into
iret
jle
mov
loop
xchg
cmpsb
pop
mov
mov
jno
rolb
loopne
mov
aam
jl
scas
mov
mov
cs
lcall
cld
imull
cmp
xchg
jb
repz
cltd
lock
mov
ja
jmp
sbb
lret
cmp
lods
jne
mov
or
jnp
or
bound
sbb
divl
cmp
or
cli
push
xchg
pop
ret
and
daa
dec
and
ljmp
outsl
mov
lock
into
push
lock
imul
lea
repz
test
adc
out
je
inc
add
jmp
inc
pop
push
adc
fildll
mov
xor
popf
je
adc
cli
insb
cmp
mov
push
lret
arpl
sti
or
push
jne
jl
jae
rol
ret
in
jle
nop
dec
in
mov
xor
cmpb
xor
repz
and
stc
cli
sbb
add
pop
bound
mov
lock
add
adc
cmp
sti
or
ss
push
push
mov
jb
cltd
sbb
mov
add
add
cmpsl
and
sbb
into
ljmp
pusha
jae
aas
das
pop
pop
arpl
leave
fsubs
in
cli
inc
in
cmpsl
cmp
rcrl
mov
sbb
lcall
hlt
push
push
cmp
dec
mov
jae
push
or
adc
pop
aam
or
fmulp
mov
imull
fsub
leave
mov
pop
dec
data16
repz
jle
loopne
push
nop
adc
xor
fcom
dec
std
hlt
repz
jle
dec
dec
shrl
push
imul
xor
scas
lahf
into
push
ss
nop
ret
imul
or
jnp
icebp
bound
push
int
inc
std
out
addr16
cmp
xor
add
insl
es
mov
ljmp
push
popa
rcll
push
bound
push
push
xor
adc
adc
popf
stc
stos
xchg
pop
xor
sahf
nop
cmp
test
repz
add
out
mov
mov
pop
mov
add
and
cs
push
loop
cmp
dec
xchg
pop
inc
fnstenv
dec
dec
fucomi
mov
pop
scas
push
add
pusha
xor
es
pop
and
sbb
mov
push
fisttpl
cmp
nop
dec
pop
pop
mov
mov
xor
imul
xchg
insb
sahf
pusha
jmp
dec
pop
pop
ljmp
mov
pusha
mov
and
movsl
into
push
fcoml
fisubrl
imul
xor
add
inc
jne
xchg
xor
testl
out
jp
mov
pop
rcrb
fistl
mov
cmovs
aam
shlb
jae
push
fdivrs
add
cmpsl
sbb
fidivrs
shrl
pause
subb
cmpsl
js
push
testl
mov
lret
fimuls
xchg
enter
mov
xchg
repnz
sbb
in
dec
sbb
cld
add
iret
inc
jne
mov
mov
add
mov
mov
scas
push
mov
scas
gs
lods
ds
loopne
in
jns
lods
sti
stc
arpl
add
mov
mov
mov
jbe
mov
mov
or
push
cmpsb
adc
out
xor
in
pop
imul
cmc
dec
imul
xor
adc
cs
add
fcomi
mov
or
pop
xor
pop
loope
xchg
sub
lret
ds
cmpsl
jnp
jno
aam
call
sbb
jmp
and
andl
loopne
sbb
jg
add
lret
lret
rcrb
subl
and
add
fcoml
adc
inc
push
sub
bound
add
fisubl
lret
fwait
pushf
xchg
mov
lds
jg
adc
test
ljmp
pop
lods
or
inc
test
test
jge
cwtl
xchg
mov
ds
push
ja
flds
xchg
daa
pusha
xchg
andl
push
ds
sbb
mov
or
mov
mov
inc
dec
and
push
lea
mov
out
sub
in
cmpsb
faddl
adc
shll
test
sub
mov
push
xor
sub
iret
fdivs
dec
les
std
cmp
imul
out
out
js
rcll
mov
jns
xlat
mov
push
js
rolb
dec
mov
movsb
xor
jbe
mov
cs
lock
mov
loop
js
pusha
movsl
out
pop
push
mov
into
fnsave
push
xlat
or
sub
sbb
lcall
out
faddp
cmc
mov
adc
jle
leave
pop
sub
cmc
jle
dec
lcall
cwtl
sub
xor
clc
into
mov
push
or
daa
aam
push
mov
mov
hlt
xor
stos
out
lret
xor
hlt
in
int3
mov
movsb
cmp
mov
lahf
test
les
mov
sub
bound
lds
cld
jge
sbb
cmp
pop
sti
rcll
aam
popf
ret
mov
aad
jns
test
pop
dec
pop
in
iret
movsl
aad
mov
test
pop
shr
push
mov
inc
notb
or
sub
pusha
push
push
push
cmp
push
aaa
movaps
inc
adc
mov
dec
mov
or
in
dec
sar
lds
jmp
add
sbb
popa
dec
cmp
jns
dec
cmc
or
or
mov
sahf
add
clc
and
movb
xchg
sahf
lock
in
adc
inc
mov
pop
stos
xchg
dec
cmp
lods
pop
scas
gs
in
lds
ja
loop
lods
xchg
fiadds
push
adc
test
das
push
scas
pop
lock
sbb
sub
iret
pop
pop
sub
mov
cmp
mov
push
mov
rcrl
mov
aad
lret
enter
add
push
or
lahf
xchg
cmpsb
xchg
push
loopne
mov
push
and
das
je
aam
repz
ret
dec
iret
mov
xlat
into
pop
fcmovu
sti
sbb
out
jg
test
mov
inc
loope
aas
sti
mov
xor
stos
cld
jo
fdivr
je
xchg
mov
or
mov
dec
mov
jbe
ret
inc
lea
pop
shl
push
and
mov
adc
jbe
inc
ss
and
icebp
sbb
xorl
inc
lods
nop
repnz
dec
faddl
sarb
xchg
frstor
mov
or
or
call
cmp
cld
pop
pop
cmp
repz
dec
adc
popa
mov
push
dec
fdivs
imul
mov
and
inc
out
lret
popf
xor
sarl
aas
mov
ss
sub
outsl
cmp
lcall
sub
jb
sub
xchg
mov
add
cltd
push
sbb
xor
lret
pushf
aas
and
mov
xchg
or
pop
ss
sub
dec
imul
out
loop
arpl
pop
lahf
test
inc
movsl
loop
xchg
enter
jle
cmpsl
mov
shll
inc
add
xlat
call
fldcw
imul
push
out
mov
int3
js
lea
in
add
and
stc
pop
mov
ja
add
add
rclb
and
mov
push
sbb
les
and
cmp
cli
or
sub
es
insb
push
cmp
ss
outsl
into
pop
mov
rcll
je
mov
loopne
inc
mov
jae
int
pop
mov
stos
testb
ljmp
js
sub
add
sub
test
dec
jp
arpl
sub
add
lahf
movsb
hlt
in
int3
inc
push
loop
pop
out
mov
movsl
arpl
dec
adc
stc
mov
outsl
jmp
arpl
mov
cmpl
sub
pop
inc
inc
insl
add
push
sarb
lret
lods
jno
rolb
imul
loop
nop
call
mov
mov
or
dec
mov
add
mov
mov
stc
call
push
les
jmp
hlt
ret
pusha
stc
or
mov
js
pop
lea
lahf
dec
adc
xchg
cmp
cld
add
mov
add
dec
xor
pushf
rol
aad
pusha
push
rorb
repz
inc
mov
xor
subl
fs
xor
das
notl
inc
imul
fs
adcl
pop
pop
or
and
and
dec
add
mov
xchg
or
call
xor
adc
popf
scas
out
and
fs
cmp
jne
xchg
adc
adc
addr16
in
or
lock
sahf
loope
xchg
mov
fimuls
sbb
lock
push
jp
mov
mov
sbb
mov
in
sahf
pop
mov
sub
mov
inc
shr
or
jmp
add
or
test
ja
and
into
xor
arpl
push
xchg
cltd
push
pop
aaa
fisttpll
mov
sti
ds
xor
pop
xchg
push
fnstsw
adc
jmp
pop
lret
lcall
std
mov
ss
fldcw
xchg
mov
push
xor
or
hlt
inc
cwtl
fs
mov
cmp
shr
shrl
pop
push
rclb
push
mov
fsubl
ret
xchg
movsl
cld
lods
gs
jmp
dec
add
inc
mov
inc
jge
lret
fsts
test
outsb
or
jl
and
addr16
inc
loopne
mov
or
cli
mov
mov
imul
jp
xor
and
mov
stos
fsts
ss
adc
pop
sbb
scas
fisttpl
xlat
stc
push
jae
imul
pop
rolb
pop
cld
aad
stos
insb
cmp
inc
add
call
jnp
inc
xchg
pusha
in
sbb
mov
xchg
xchg
into
inc
movsl
sarb
jmp
adc
cltd
iret
xchg
mov
push
cld
inc
ljmp
pop
loop
mov
jne
mov
lahf
sub
test
or
aad
xchg
inc
jecxz
and
ljmp
test
add
movsb
or
pusha
ret
cmp
test
push
xchg
jmp
enter
in
pop
adc
jmp
xchg
add
loop
pusha
push
imul
jp
mov
adc
sbb
sbb
mov
adc
and
subl
xchg
fisubl
or
push
add
cld
mov
cld
dec
push
xor
ret
imul
xchg
jbe
lret
adc
push
jp
inc
cmp
sahf
jo
xlat
arpl
jmp
nop
xchg
scas
adcl
ret
je
in
sub
and
mov
adc
add
fidivrl
sbb
mov
sbb
clc
dec
xlat
or
movsb
pop
jg
or
pop
xchg
jge
aas
daa
rclb
jne
and
mov
insb
dec
iret
loopne
shlb
xchg
mov
xor
bound
repz
xchg
jg
in
test
int3
cmpl
pop
ja
shlb
mov
dec
push
adc
aaa
adc
push
and
dec
pushf
or
and
mov
xlat
mov
mov
fs
mov
ds
outsl
arpl
cmp
sti
popf
add
xchg
sub
push
jle
or
inc
jg
data16
sbb
xlat
fisubrs
cli
int3
push
loopne
mov
notl
das
jecxz
out
sub
std
nop
xlat
clc
ljmp
sbb
adc
jnp
push
andl
push
xchg
or
and
pop
outsb
mov
ret
ss
fildl
rcll
xchg
jecxz
loop
inc
imul
pop
pop
sbb
inc
inc
mov
rclb
sbb
sub
cld
cmp
xchg
int
mov
add
mov
leave
test
pop
jmp
sbb
jno
ret
inc
cli
jle
sbb
jmp
push
mov
pop
or
bswap
mov
add
mov
mov
in
xor
cwtl
sbb
and
sbb
sub
cs
mov
daa
cs
xor
jp
arpl
pop
and
sub
and
mov
jae
adc
outsl
test
pop
data16
cli
fcmovne
mov
rcrl
aaa
pop
jns
and
mov
adc
mov
out
add
insl
repnz
fstpt
lahf
push
lahf
inc
jno
loop
add
in
sub
out
popa
xchg
jl
aaa
in
pusha
and
xchg
cs
aad
insl
stos
les
icebp
jl
mov
cmp
push
inc
jns
push
stos
stos
mov
mov
mov
aam
leave
pop
mov
cmp
inc
push
mov
dec
in
pushf
cltd
divb
xchg
or
xlat
and
xchg
jo
arpl
fmull
test
out
mov
adc
or
adc
lea
and
testl
add
cwtl
pop
fcompl
fcom
add
lret
mov
cmp
mov
in
dec
lock
andl
push
mov
or
rorb
pop
mov
les
ret
xor
and
scas
out
cmp
mov
lcall
cld
sbb
lea
enter
in
pop
xlat
subl
hlt
xlat
dec
sub
sbb
jns
or
lret
lods
adc
mov
ficoms
jecxz
push
repnz
fistpl
dec
push
adc
adc
stos
xchg
sbb
dec
sbb
add
in
stc
pop
in
adc
xlat
xchg
pop
in
fcomi
adc
aas
push
rorb
adc
aas
pop
dec
or
fdivr
cltd
in
xchg
lock
inc
test
inc
nop
mov
sub
add
jge
repnz
lret
jo
pushf
xlat
push
sbb
fisubs
sub
cld
jg
and
sarb
mov
push
or
push
dec
mov
mov
mov
inc
mov
xchg
call
mov
xor
iret
pop
cwtl
sarl
sahf
dec
pushf
sahf
stos
or
shr
cmp
and
shl
xor
or
sub
pushf
push
lret
add
or
fstl
pop
jbe
leave
xlat
xor
or
xchg
ret
add
adc
inc
test
out
xor
jne
icebp
ja
es
daa
mov
add
or
pop
hlt
mov
leave
ljmp
and
int3
adc
xor
mov
int3
fldenv
fistl
cmp
pop
loop
mov
and
adcb
into
sub
cmpsb
pop
xor
imul
js
mov
daa
dec
call
popf
adc
mov
ret
and
pop
fcoml
sub
jbe,pn
sbb
and
add
and
mov
popf
cmp
jecxz
sbb
mov
mov
lock
lods
jp
ljmp
or
cmp
shlb
pop
cmp
mov
in
push
std
cmp
out
out
cmpl
pop
stos
cmp
jp
scas
mov
push
gs
loope
addb
xlat
aas
mov
and
movsl
inc
aam
fwait
sar
sahf
scas
add
xor
iret
mov
mov
aad
or
test
ja
lods
in
ss
call
stos
std
adc
outsb
jnp
out
xor
or
mov
pop
dec
scas
cmpsb
adcb
add
aad
pop
push
cld
stc
or
fdivl
daa
xlat
push
mov
sbb
fidivrs
sbb
or
mov
rolb
outsl
xor
push
in
push
push
imul
jmp
mov
cmp
xchg
je
out
sub
or
iret
and
cmpsb
xchg
push
std
mul
stos
lahf
cmpl
test
mov
mov
cs
sbb
dec
mov
sarl
mov
xchg
xor
outsb
push
loopne
neg
push
pop
dec
cmp
xor
mov
pop
adc
cmc
sbb
sub
rcl
pop
ds
sti
add
add
mov
mov
jns
xchg
dec
adc
div
add
insl
dec
in
stc
int
add
dec
mov
popf
mov
push
add
add
mov
xor
fidivrs
jge
hlt
xchg
adc
jae
pop
jmp
pop
mov
dec
daa
mull
stos
movsb
xchg
lds
int
lods
rorb
cld
call
cmp
adc
arpl
push
adc
jne
inc
xchg
and
fmull
xchg
clc
inc
inc
imul
andb
mov
add
mov
push
pop
ret
mov
int
sbb
mov
ljmp
shr
jl
insl
ljmp
pop
sarl
jmp
mov
xchg
fnstenv
cmpsb
xor
sub
pushf
cltd
cmp
popf
jmp
repnz
mov
rcrb
fs
inc
xor
add
das
dec
into
or
test
push
pushf
and
inc
loopne
add
xor
dec
push
adc
iret
aas
push
lods
and
stos
fs
cs
xor
dec
and
pop
sub
ficoml
lods
sbb
push
mov
fildll
shrb
in
and
sbb
negb
cmp
xchg
addl
mov
and
sbb
nop
xor
das
out
xchg
adc
pop
push
add
add
pmullw
test
xor
ret
movsl
dec
jp
js
pop
cmc
outsb
xchg
rcll
leave
mov
or
mov
dec
and
mov
in
push
insb
sub
jns
arpl
in
mov
dec
or
mov
adc
adc
xor
jmp
insb
lcall
scas
inc
sahf
in
ss
fpatan
stos
xor
out
mov
lds
call
add
push
sbb
cmp
lahf
mull
mov
add
insl
lds
repz
fadd
ds
xor
cmp
xchg
aaa
or
cmpsb
inc
lahf
dec
xor
push
jae
aad
fadds
fstps
jnp
in
sahf
pop
inc
movsb
enter
pop
out
xchg
or
pop
insb
mov
daa
push
das
cwtl
fistps
sbb
loopne
testb
test
gs
xchg
mov
stc
pop
jmp
cmp
call
je
fstpt
sbb
imul
es
and
cmp
nop
mov
cmpsl
adc
pop
push
sub
cmpb
loopne
jg
rcrb
dec
fs
hlt
scas
adc
int3
xor
and
push
icebp
sbb
int3
movsb
inc
jg
mov
push
xchg
cmp
pop
outsl
jge
loopne
sbb
mov
shll
addb
pushf
lds
jg
sub
xor
enter
lods
push
mov
xchg
cld
push
cmp
bound
adc
in
mov
cs
mov
push
les
push
mov
aad
or
enter
test
scas
and
adc
jno
cld
stos
mov
xor
enter
fisubl
and
jecxz
fcmove
push
daa
adc
cmp
push
scas
mov
mov
mov
pushf
idivl
jae
aam
sbb
fdivs
add
mov
pop
add
mov
inc
ret
lret
loopne
pop
or
dec
cmpsl
lock
xchg
insl
mov
aas
jle
adc
jmp
mov
ret
xchg
insl
push
das
cmp
cmp
popf
xchg
jnp
imul
cmpsl
xchg
mov
or
test
mov
div
nop
mov
mov
loop
enter
imul
daa
ficompl
cs
repz
lods
jl
daa
mov
cmp
je
iret
sarl
jg
dec
rclb
js
fs
mov
dec
lahf
negl
lret
add
in
leave
iret
js
mov
sbb
cmp
daa
sbb
mov
cltd
cld
insb
pop
pop
loopne
icebp
jnp
shlb
aas
ret
push
mov
and
lcall
pusha
lea
outsl
je
jbe
clc
jle
xchg
or
sbb
shr
or
popl
leave
sahf
mov
loopne
mov
in
mov
pop
pavgb
cmp
cmp
dec
xchg
mov
shll
add
add
sbb
pop
sub
fwait
loop
push
mov
xchg
push
inc
in
add
inc
enter
dec
je
and
ss
dec
jp
aad
mov
push
xchg
mov
pop
pushl
add
sbb
jo
adc
mov
idivb
gs
es
jle
fs
jg
fistpll
mov
xchg
outsb
aaa
lods
fs
sahf
outsb
cmpsb
es
jle
mov
imul
call
add
pop
cmpsb
in
jno
dec
push
sub
and
ds
xor
cli
sub
imul
stos
cmc
adcb
xchg
inc
cwtl
and
in
lcall
ss
jg
dec
repnz
lds
int
mov
addb
cltd
and
stc
sahf
add
sar
lock
imul
cmp
sbb
movsb
mov
mov
and
ljmp
or
sub
adc
daa
int
or
daa
lea
adc
add
sbb
leave
jo
es
hlt
jecxz
jmp
fisubrl
fstps
xchg
mov
jp
push
data16
test
or
rcll
sbb
mov
pushf
sarl
shl
not
imul
cmc
aaa
lret
sbb
dec
lret
cmp
je
out
sbb
push
pop
xchg
shlb
aaa
roll
pop
jmp
call
in
mov
fwait
les
test
inc
ds
das
in
inc
fistl
dec
pop
repz
add
mull
in
adc
scas
test
lea
mov
add
jmp
es
lret
push
cli
fnsave
fsts
or
sbb
test
pop
pop
repnz
inc
mov
xchg
add
cmpsb
mov
mov
push
test
sahf
pop
clc
fsub
pushf
sub
movsb
lret
push
pop
sbb
rclb
in
clc
pop
arpl
ljmp
lahf
pushf
hlt
mov
in
dec
lret
in
out
pop
xor
call
out
xchg
pop
testb
test
mov
inc
hlt
fwait
push
mov
fcmove
mov
jnp
adc
mov
sub
mov
xlat
stos
inc
or
mov
push
cli
inc
lahf
out
inc
mov
mov
in
inc
or
or
es
test
fnstsw
sbb
mov
scas
mov
imul
leave
xchg
dec
mov
xchg
inc
popa
xor
aam
jge
enter
push
mov
pop
popa
rcll
and
rolb
ss
fdivrs
mov
shl
imul
add
inc
filds
jl
or
adc
cmp
aad
cmp
lahf
pop
mov
xchg
movsl
mov
imul
xchg
ror
add
outsb
fstps
testb
in
popf
push
cli
shll
mov
lods
loop
negb
data16
add
es
fdivp
jns
lods
pop
xchg
stc
jae
jp
mov
jae
sbb
jl
jp
inc
sbb
pop
repnz
sub
shl
out
sahf
mov
dec
lahf
leave
push
std
fcoml
or
mov
cmc
insb
mov
insb
lea
mov
lods
lcall
test
cmpsl
pop
lahf
cmp
jbe
inc
in
push
jno
inc
cmc
push
push
or
hlt
inc
pop
xor
fiaddl
push
pop
sbb
or
andl
repz
enter
mov
inc
iret
mov
jp
test
stos
xchg
rcll
push
adc
cld
xorl
loop
std
mov
rcrl
out
aam
add
add
vpsubusb
add
mov
rol
aaa
loopne
arpl
xchg
xchg
xor
flds
jnp
fnsave
out
jle
fucom
push
test
sahf
mov
cld
ret
or
pop
xor
cwtl
addr16
lahf
mov
mov
cmp
and
cwtl
std
cmpsb
icebp
out
out
pop
je
mull
test
and
inc
push
inc
fnsave
sbb
out
mov
inc
pushf
dec
in
inc
mov
add
jp
mov
xor
subb
xchg
pop
xchg
pusha
addr16
mov
int
inc
add
jns
sarl
lods
xorl
aam
mov
inc
in
arpl
sub
sti
loop
rolb
icebp
xchg
in
cmp
ficomps
loopne
sub
sub
and
loope
xlat
push
sbb
jge
imul
sahf
mov
rorb
popa
push
or
ret
mov
mov
jo
loop
push
jne
sub
mov
cwtl
insl
xor
jb
sub
sub
mov
mov
addr16
movntps
xchg
add
mov
add
arpl
cltd
outsl
jne
sahf
lods
loope
adc
sub
jmp
cmp
pop
out
dec
divl
stc
jns
mov
push
mov
sarl
jmp
in
push
cs
push
rorl
sub
fistl
rcrl
jns
ja
mov
pop
inc
dec
mov
jnp
mov
rol
or
cmp
in
mov
jecxz
ljmp
jmp
sub
enter
adc
adc
push
in
mov
pop
and
mov
and
testl
orl
xchg
ret
jo
or
into
aas
jo
mov
push
dec
aas
cld
mov
xlat
jne
mov
or
mov
dec
out
popf
subl
sub
stos
fldl
jecxz
cmp
cmp
mov
imul
rorb
inc
or
xor
movsb
jg
insb
inc
cmpsl
int
ja
ds
inc
clc
je
arpl
push
sti
outsb
push
inc
mov
imul
add
enter
cmpsb
mov
loope
and
and
jl
jo
outsb
jle
into
mov
scas
inc
js
sub
jge
fisubs
call
xchg
ret
jo
lods
sub
pop
sbb
stos
and
les
nop
sbb
arpl
loop
test
mov
fistpl
nop
jne
fnstcw
cs
outsl
call
pusha
fidivrl
mov
es
cmp
and
adc
adc
push
xor
sub
inc
divb
sbb
pop
xchg
jl
push
pop
jge
mov
sbb
cmp
adc
popa
fidivrl
ds
test
scas
cmp
or
lret
dec
xchg
xchg
adc
push
sbb
in
dec
mov
stos
nopl
adc
add
add
lcall
fwait
repz
rorl
loope
fnstsw
cmpsb
mov
pop
push
lods
fs
ss
add
xchg
and
push
aaa
mov
cmp
jmp
insl
xor
lds
sub
ljmp
push
dec
xor
ljmp
xchg
and
mov
loope
shl
lahf
pusha
jo
xchg
jmp
out
cmpsl
jp
mov
lea
jge
or
js
fmul
xor
andl
idivl
mov
int
roll
les
cmpb
inc
fadds
call
lahf
subl
jne
dec
jmp
sub
fistl
xor
sbb
mov
lea
push
sbb
aas
int
test
loope
mov
test
cmp
mov
aas
loope
push
cmp
cld
sbb
subl
test
dec
mov
in
es
mov
dec
cmp
sbb
jno
test
stos
xchg
cmp
stos
and
in
mov
adc
mov
push
cmp
inc
sbb
fldl
popa
xor
lods
xchg
gs
mov
test
int
cmp
cmp
cmp
add
adc
mov
xor
notb
push
dec
addr16
jmp
out
sbb
rcrl
add
addb
inc
push
das
lds
je
cli
xadd
fiaddl
out
mov
loopne
movsl
sub
test
ret
jecxz
fildll
inc
jns
fsubrs
jle
loopne
add
adc
pop
adc
rolb
test
dec
pop
sbb
into
roll
pop
mov
mov
mov
insb
ret
add
mov
mov
mov
inc
pop
sahf
popf
test
jne
les
lret
sub
inc
leave
push
dec
or
pop
mov
out
mov
jg
cmp
out
mov
xchg
mov
addr16
adc
sbb
mov
outsl
hlt
lea
pop
aad
sbb
andb
js
loop
mov
in
or
repz
adc
outsb
lds
das
insl
sbb
sahf
shl
jle
mov
mov
add
mov
out
repnz
jle
test
fmull
or
pop
bound
dec
int3
sbb
paddb
sbbl
cmpsl
movsb
sub
add
mov
es
inc
sub
rolb
sbb
mov
frstor
into
lods
lcall
cld
jae
cmp
hlt
mov
fcomp
in
idivb
inc
push
out
inc
push
inc
test
sub
aam
push
call
enter
push
pushf
sbb
dec
mov
enter
jg
ret
outsb
and
roll
push
divl
sub
mov
js
mov
jo
cmp
cs
scas
daa
mov
lods
shlw
or
jb
lock
repnz
push
mov
dec
xchg
nop
inc
rolb
movsb
sub
jp
outsb
add
pop
fnstcw
stos
xlat
push
push
or
movsb
popf
cmp
repz
push
ljmp
popa
mov
push
mov
pop
jnp
int3
adcl
mov
mov
in
lods
xor
xchg
and
push
aam
sbb
mov
pusha
xchg
lcall
lock
or
lock
sub
shl
pop
ret
push
jge
cltd
xor
jmp
mov
loop
dec
dec
mov
mov
adc
sbb
hlt
sbb
xchg
lahf
js
rcl
mov
dec
jo
subb
mov
mov
push
lcall
pop
shlb
xor
and
push
orb
cmpsl
sub
mov
popa
test
icebp
mov
and
jns
nop
add
shrl
movsb
pop
js
xchg
rcr
nop
mov
add
pop
movsl
pop
cmc
mov
in
push
add
fadds
push
xchg
shll
sarb
imul
xlat
out
cwtl
add
push
pusha
add
add
adc
add
or
sbb
psubsw
cmp
in
push
or
sbb
mov
int
enter
or
cmc
cmpsb
leave
aad
ret
pop
push
jle
nop
cmp
and
push
xchg
lods
loope
sbb
imul
cmp
sub
dec
in
mov
sub
push
sbb
pop
pop
and
outsb
pextrw
sub
dec
vpunpckhqdq
arpl
sti
adc
mov
jo
rep
outsb
movlps
add
adc
inc
in
fldcw
add
imul
pop
jae
out
aas
mov
sahf
bound
inc
cltd
mov
inc
fcoml
pop
jno
js
mov
cli
cwtl
sbbl
in
adc
dec
jp
icebp
and
gs
idivb
cmpsl
mov
sub
cmp
loopne
pop
dec
sbb
adc
pop
ja
enter
add
push
push
pop
add
add
addr16
inc
sarb
idivl
mov
pop
jae
fucomip
add
mov
arpl
insb
jp
outsl
fsubrp
adc
addr16
jnp
mov
cltd
insb
and
ss
cmp
fwait
xchg
and
dec
aad
sub
xchg
push
xchg
lock
aaa
mov
ret
sub
ds
mov
stc
mov
cmp
dec
rcrl
das
int
hlt
fwait
mov
sbb
ds
iret
lods
jp
cmp
lcall
fdivl
xor
les
js
sbb
dec
sahf
jb
adcb
loopne
xchg
push
test
mov
push
sub
inc
imul
xchg
and
out
imul
out
data16
jne
in
cmp
jo
sbb
shrl
out
arpl
aad
pusha
out
fstpl
test
popf
or
mov
mov
insl
js
jne
repnz
adc
inc
and
sahf
dec
ret
movsl
xchg
push
mov
mov
jecxz
dec
mov
add
ljmp
aad
decb
nop
fistps
inc
push
arpl
outsb
cs
xor
push
shrb
xchg
stos
sub
inc
adc
sub
enter
pop
icebp
jns
xchg
ljmp
aad
jge
inc
outsb
icebp
add
ja
lcall
fs
test
dec
stos
push
push
or
mov
push
in
adc
movsl
inc
jbe
xor
bound
cwtl
mov
push
push
xchg
pop
mov
stos
cld
loop
mov
out
ret
mov
into
mov
test
sbb
cmp
dec
xchg
in
dec
inc
and
dec
dec
aas
mov
inc
cmp
in
jns
out
sbb
js
pop
ret
cmp
lods
mov
addr16
xor
fwait
sub
or
xor
ljmp
or
cmc
push
lret
mov
mov
imull
cld
ss
sti
inc
push
dec
bound
in
pop
lret
xor
adc
cmp
xlat
cld
pop
xchg
or
jmp
add
test
mov
lods
nop
add
daa
addr16
add
jbe,pt
mov
pop
mov
mov
and
mov
jno
add
jl
loopne
mov
adcb
inc
int3
dec
xchg
outsl
mov
stos
pop
sub
jmp
lret
xchg
mov
jae
arpl
mov
mov
inc
push
push
inc
scas
push
fwait
xor
fdivrp
xchg
xchg
mov
sbb
lcall
add
push
xor
dec
test
cmc
aas
into
cli
shlb
daa
dec
out
cwtl
arpl
lds
jmp
aas
xchg
push
inc
cwtl
pop
idivl
out
mov
jb
cli
ret
arpl
rclb
push
lcall
ss
rorb
sub
dec
cli
in
aaa
dec
leave
lret
repnz
mov
arpl
testl
ret
mov
xchg
and
int3
xor
mov
cmp
xor
xor
mov
dec
lret
fsubs
out
mov
movb
adcl
sbb
mov
insl
dec
mov
addr16
popa
push
pop
and
sahf
or
popf
incl
les
scas
test
push
push
jge
lret
push
jle
test
inc
hlt
js
pop
add
dec
sti
push
fsts
pop
pop
dec
fldcw
sub
add
rolb
movb
aam
movsl
arpl
mov
stos
mov
cmpsl
jg
mov
or
sub
fstpl
inc
daa
xchg
cmp
jle
idivl
daa
cmp
aam
inc
sub
add
or
nop
pop
cmc
imul
xor
push
and
lahf
cld
inc
jp
add
jnp
mov
pop
in
dec
inc
add
sub
jo
call
faddp
xor
sbb
scas
push
pop
stos
xchg
push
enter
push
mov
pop
aam
sbb
add
rclb
enter
into
popa
xchg
mov
xchg
jb
arpl
fidivl
pop
loope
push
es
imul
cmpsl
cmpl
inc
pop
inc
aam
testl
insl
add
add
lahf
xchg
dec
test
cmovge
xchg
decl
pop
jmp
push
sbb
or
sbb
incb
and
jg
hlt
cmp
movsl
icebp
call
loope
rol
inc
fs
ss
popf
or
in
push
push
in
jbe
pushf
push
mov
mov
faddp
mov
dec
ss
jne
jl
inc
std
and
stos
test
jno
mov
andl
fisttpl
mov
fadds
inc
int
lcall
lds
dec
sub
mov
je
lahf
cltd
adc
jo
xchg
imul
fs
hlt
sbbl
xchg
mov
inc
cs
add
rcr
les
jmp
scas
dec
into
outsb
in
arpl
movsb
adc
push
arpl
and
jl
mov
je
mov
cmp
and
sub
or
daa
in
mov
clc
loope
push
je
mov
and
jl
sbb
and
and
lock
and
xchg
shl
ret
std
in
xor
repnz
cmpsl
mov
inc
or
jmp
add
addl
lock
sbb
out
inc
dec
bound
xor
enter
jnp
pop
sbb
adc
push
sbb
adc
ja
xchg
xchg
jle
cmpxchg
or
jbe
outsl
sahf
pop
fdivl
ja
aas
xchg
cmp
out
test
call
jae
adc
into
xchg
das
jbe
xchg
inc
int3
sbb
out
push
movsb
lods
lcall
pop
mov
add
rcll
call
scas
fidivrl
dec
dec
dec
cmpsl
ds
jmp
lock
mov
xor
pop
shl
inc
test
pop
dec
or
push
aad
mov
adc
lret
icebp
mov
std
stos
mov
mov
cwtl
inc
xlat
aas
cmc
adcb
imul
in
xlat
cmp
imul
cli
stos
and
jmp
stos
add
gs
xor
cmp
dec
sub
and
sbb
push
sub
mov
push
push
movsl
iret
loop
enter
mov
inc
xlat
outsl
xor
ja
movsl
shrb
mov
xchg
mov
mov
mov
pop
les
ja
mov
jae
xorb
inc
inc
out
out
xor
inc
outsb
ljmp
add
mov
aaa
stos
mov
nop
cli
pop
test
xchg
xor
cs
xor
fwait
lret
ret
iret
scas
das
mov
scas
xchg
js
adc
lcall
stos
and
adc
sub
adc
mov
fsincos
mov
shll
notb
pusha
mov
je
xchg
ds
pop
jnp
and
jbe
lea
push
push
pop
pop
mov
push
xor
and
ljmp
insb
gs
pusha
add
fbstp
cmp
push
xchg
xor
jno
aaa
cs
xchg
xchg
xchg
push
jmp
gs
lods
push
xor
lahf
hlt
jg
lods
sti
outsl
mov
cmp
mov
call
pushf
fld
out
rorb
inc
mov
mov
push
pop
xchg
test
call
sbb
mov
jle
push
xor
aas
pop
das
sti
pushf
pop
or
jle
push
jg
mov
xchg
mov
xor
sub
mov
stos
adc
mov
xor
pop
mov
mov
xchg
xor
repz
mov
or
mov
sub
cmp
or
je
fs
mov
testb
mov
mov
cli
lock
pop
adc
outsl
pusha
ds
loop
xchg
xor
sub
push
pop
sbb
inc
sub
cli
enter
pop
faddl
popf
jl
and
mov
adc
mov
xchg
cmp
xchg
adc
fbld
ret
and
sahf
jb
mov
fs
repnz
fs
scas
out
fadds
rorl
sbbl
lods
out
xlat
or
jmp
test
jo
mov
pop
add
cld
aam
popa
arpl
hlt
add
mov
fisttpl
lcall
sahf
cld
sahf
mov
ja
adc
or
jo
adc
lahf
cs
aad
fwait
bound
or
sbb
push
pusha
lret
fsub
movsb
ljmp
stc
push
xchg
in
push
mov
aas
andb
rcr
xor
xchg
stos
ljmp
es
rol
xchg
movsb
cwtl
fiaddl
xlat
call
push
ficomps
mov
or
outsb
ljmp
repz
cmpsl
vpxor
in
xchg
adc
imul
leave
in
jg
fisubl
sbb
pushf
xchg
ljmp
test
ss
stc
cmp
xor
inc
sbb
iret
fistpll
push
mov
sub
lahf
pusha
fimull
repnz
in
lods
jno
xchg
insb
sub
push
push
pop
aas
jmp
leave
sbb
cld
or
pusha
pop
push
out
cli
addr16
mov
lds
push
and
mov
lock
les
leave
in
push
in
adc
nop
jp
in
pushf
inc
mov
lcall
cmp
sub
inc
and
pop
sbb
dec
es
sarb
pop
popf
cltd
sub
sub
cmpsl
cltd
das
jbe
mov
sbb
fldenv
jp
push
popa
dec
mov
orl
popf
adc
fisttps
sbb
loope
les
es
ret
shll
out
inc
inc
sub
or
lds
mov
das
dec
pop
xchg
and
xchg
mov
rorb
leave
mov
sub
pop
dec
addr16
iret
test
jl
xor
jb
cmp
std
mov
pop
mov
repz
out
in
push
out
mov
mov
pop
pop
sub
lds
cmp
ror
push
int
cmp
mov
repz
aas
mov
mov
mov
addr16
aam
into
shl
xchg
and
or
cmp
adc
xor
cmp
jns
pop
ds
nop
dec
sbb
out
adc
iret
inc
mov
cmp
xlat
xlat
js
mov
push
popf
pop
pushf
dec
loope
cmpsb
mov
cmp
stos
or
xchg
jae
sbb
mov
mov
iret
xchg
incl
lcall
push
add
and
push
push
sbb
std
cltd
cs
orl
xor
or
jg
inc
jnp
aaa
mov
loop
filds
jne
push
mov
fs
mov
cmpsl
cmp
shr
xor
jp
dec
add
dec
cmp
imul
sbb
sub
lods
sbb
lahf
test
aaa
xor
test
jp
cmp
inc
push
xchg
ds
je
pop
clc
and
pop
inc
mov
inc
xor
dec
inc
cld
and
cli
outsl
push
push
jmp
test
or
int
cld
xchg
inc
lods
movsl
std
pop
push
movsb
pop
test
ljmp
mov
out
stc
stos
in
into
xchg
mov
or
fadds
cs
leave
andl
cmp
push
mov
stos
ficoml
jl
jecxz
and
dec
jp
or
mov
or
mov
pop
fildl
or
fnstsw
push
mov
adc
pop
cmp
pop
pop
jge
xor
cltd
in
test
inc
outsl
orl
jne
test
into
xor
or
lcall
movsl
enter
sbb
sbbl
mov
add
cmpsb
add
les
shlb
pop
cmp
es
sahf
dec
fwait
imul
lods
jo
xchg
xchg
aaa
sbb
xchg
movl
imul
sarb
rcll
insb
cld
sub
sbb
imul
add
xchg
ret
nop
mov
icebp
gs
aaa
or
pop
xchg
out
xor
push
sbb
hlt
sbb
sarb
addb
jg
pop
dec
push
out
cmp
mov
insl
out
inc
and
cmp
or
stos
cmp
loope
pop
in
in
dec
add
lcall
jno
xlat
cmp
scas
jge
push
sahf
push
lret
roll
lock
jbe
and
lods
pop
lods
std
xchg
fiaddl
push
mov
data16
sub
cli
mov
lods
xlat
fisubrs
addr16
mov
adc
jb
lcall
out
dec
bound
int
imul
jno
fists
fcmovnbe
push
repz
daa
mov
pxor
xor
shlb
fwait
rolb
cltd
adc
gs
lds
mov
imulb
xchg
rcrl
xchg
subb
or
lret
add
addr16
movsl
push
pop
and
pop
pop
mov
hlt
cmp
pop
push
mov
outsb
cmp
les
stos
cmc
or
sbb
mul
iret
mov
clc
dec
mov
jp,pn
jl
push
call
add
fwait
xor
into
or
imul
or
jmp
into
mov
jle
and
lahf
sub
mov
sub
xor
outsb
aas
jl
adc
loope
mov
jmp
push
insb
aas
faddl
mov
inc
mov
mov
imulb
int3
cld
arpl
movsb
jmp
mov
lods
inc
and
pop
push
mov
xorb
sbb
jns
push
push
cmc
mov
ss
xor
aad
daa
pusha
je
out
fisttpl
arpl
fwait
movsl
cmp
xchg
aas
pop
stc
push
pop
mov
scas
jnp
jnp
in
xor
push
fdivrs
gs
lret
test
jg
pop
call
sbb
out
sbb
enter
sar
mov
in
cltd
pop
ds
xor
mov
cmc
icebp
dec
subl
ficomps
sbb
pushf
call
xor
cmc
pop
mov
stos
scas
out
jns
push
ss
adc
jno
jge
imulb
jne
mov
add
ljmp
jle
inc
lods
fisttpll
fdivrp
mov
fcomps
lret
shlb
pop
or
stos
movsb
push
mov
out
fisttpll
sbb
andb
mov
into
and
lahf
insl
movsl
cmp
sbb
jle
lret
xchg
std
aad
mov
aaa
rolb
cmp
ljmp
insl
xchg
mov
ret
shll
test
xchg
mov
sbb
adc
sbb
movsl
xchg
sub
pop
mov
lcall
mov
sub
jo
adcl
mov
scas
xchg
shlb
add
push
js
pop
inc
sbb
sbbb
and
orl
pop
leave
mov
xor
mov
mov
mov
xchg
mov
scas
stc
lret
mov
add
rcrl
jmp
ficoms
cmpsl
pop
fwait
pop
loopne
pushf
je
out
mov
movsb
scas
jmp
or
dec
mov
fsts
xchg
mov
movsl
cmp
jle
fdivl
mov
std
mov
fistps
sti
sbb
lret
xor
cmp
xchg
xchg
aad
rcll
in
stos
add
cmc
repnz
or
stos
fwait
stos
add
stc
fs
sbb
inc
or
pop
mov
adc
imul
mul
mov
sub
jg
pop
mov
sub
push
ucomiss
mov
outsb
shrl
mov
cmp
lods
adc
shll
pop
jno
jo
inc
push
xchg
mov
push
sarb
fiadds
push
clc
je
xchg
int
xor
fcomip
test
arpl
xchg
leave
in
xor
push
int3
and
aaa
ret
bound
fcompl
mov
cmp
jge
mov
inc
repz
mov
mov
fadds
lods
cmp
repz
pushf
or
imul
mov
mov
ss
in
xchg
fldenv
pop
shl
and
cmp
adc
fsubp
mov
scas
mov
mov
ffreep
cmpsb
push
push
xor
gs
out
ljmp
pop
fadds
lods
pop
outsl
dec
jae
and
mov
jae
pop
jmp
xor
mov
aaa
pop
and
inc
xchg
out
popf
mov
jo
jmp
sarl
adc
dec
scas
shll
jo
lcall
and
test
test
test
daa
scas
lods
addr16
mov
repnz
mov
xchg
cmp
lcall
xor
fildl
sbb
insb
mov
popf
mov
fidivl
sbb
aaa
or
jb
es
sub
lods
cmc
dec
fistpl
xchg
cmp
icebp
repnz
pop
push
xchg
add
push
inc
push
repnz
outsl
lock
pop
sub
cmc
stc
pop
mov
cwtl
leave
lds
negl
fldl2t
or
fcoms
push
hlt
add
inc
js
push
adc
fwait
out
jg
cld
push
push
add
das
xor
fwait
jecxz
dec
pop
insb
or
jns
ds
jl
jbe
inc
in
loopne
bound
aam
and
cli
iret
mov
mul
clc
sahf
mov
xchg
push
sbb
inc
scas
rcrl
rorb
lods
mov
mov
out
enter
lcall
fcmovne
orb
xchg
aam
xchg
mov
jle,pt
sarl
ficoml
adc
xchg
outsl
jo
sub
push
push
cmp
pop
add
addr16
xor
mov
ffree
scas
pop
addb
je
fldl
in
fsubrl
call
xchg
xchg
and
sub
in
sbb
xlat
imul
sbb
jno
pop
push
or
lock
aam
dec
leave
jbe
push
sbb
push
push
jnp
xchg
cltd
mov
dec
push
xor
mov
mov
dec
icebp
push
shl
sub
ret
in
subl
stos
sbb
adc
outsb
mov
mov
mov
pop
in
inc
cmp
jns
inc
loop
hlt
mov
sbb
sbb
js
jp
inc
cwtl
mov
sbb
in
dec
ret
insb
test
lock
ss
cmpb
test
inc
add
lcall
push
hlt
dec
cwtl
add
inc
addr16
jp
inc
push
sahf
imul
fmul
aad
inc
stos
pop
jmp
adc
push
mov
mov
out
out
push
sbb
mov
scas
mov
push
push
cmp
je
out
sbb
bound
std
test
aad
pop
push
cs
imul
push
inc
loop
ret
movsl
and
xchg
arpl
mov
adc
jb
jns
pop
out
mov
lods
jp
mov
adc
inc
fcomps
mov
mov
xchg
leave
jno
jp
rolb
test
sbb
sbb
cmp
test
stos
in
xchg
push
push
ss
ret
lea
jns
ds
or
fsubrp
out
pop
push
out
and
aaa
fs
pusha
test
push
jb
mov
pop
add
mov
fbld
mov
fcmovne
jo
idivl
ja
push
scas
push
xchg
mov
fdivs
test
pop
scas
xlat
add
cld
out
pop
call
sub
mov
sub
fwait
ja
mov
cmc
jecxz
mov
adc
push
adc
add
data16
push
mov
das
in
repz
jmp
imul
pop
sub
lahf
test
and
fsts
imul
testl
test
and
mov
les
stos
pushf
mov
aad
pop
addb
inc
xchg
call
fmull
stos
lcall
and
pop
in
pop
rcrl
shll
dec
mov
sahf
enter
cld
ljmp
lock
aam
jbe
sbb
shll
in
lods
clc
into
lods
leave
movsb
psubsw
jge
in
jb
mov
dec
add
pushf
jge
scas
enter
push
or
pop
in
jge
mov
dec
push
xor
jge
ret
mov
xchg
clc
mov
dec
pop
mov
cld
inc
push
jns
lock
mov
sbb
addr16
xchg
fyl2xp1
sub
inc
push
xchg
inc
lret
sahf
and
push
mov
cmp
pop
sbb
cmpsb
or
push
mov
cli
loop
jmp
mov
imul
inc
into
sub
pop
imul
pop
jmp
shll
cli
or
lret
xchg
mov
sub
ret
out
xchg
inc
xor
sub
cli
cwtl
or
test
sar
sbb
movsb
xor
or
ljmp
das
std
mov
or
insb
add
insb
ud2
fwait
mov
imul
lahf
add
dec
fs
out
imul
jne
and
and
and
rolb
or
jl
fwait
cld
dec
out
sahf
mov
sbb
and
mov
pop
lock
loope
cmp
sub
loopne
scas
mov
xchg
rclb
test
loop
negb
sub
movsl
js
pop
cmp
test
popa
idiv
or
outsl
rorl
shlb
push
mov
cmp
lea
lods
stos
pushf
mov
push
stos
in
xchg
mov
xor
pop
sub
xchg
or
inc
xor
rolb
loop
push
sbb
sbb
roll
lea
call
loopne
mov
sar
lods
cwtl
mov
jne
push
into
rcll
lret
lcall
ds
jo
inc
xlat
shl
outsb
mov
pop
sub
jb
pop
loopne
test
xor
sub
push
jbe
shlb
aad
lods
data16
inc
lea
int3
or
aaa
nop
mov
xor
popa
icebp
mov
lds
andb
cmp
sbb
mov
int3
insl
movsl
lret
int
int3
dec
sarb
scas
icebp
adc
mov
mov
mov
repnz
lahf
adc
lea
mov
dec
xchg
mov
rcrb
mov
jae
in
xchg
push
sub
push
sbb
lods
mov
fidivs
pop
es
lahf
loopne
mov
adc
xchg
ja
cltd
or
mov
add
jo
sahf
int3
test
dec
inc
xchg
sti
sub
aad
push
mov
pop
dec
lret
fnstsw
mov
cltd
xchg
hlt
stos
lock
test
aas
ret
sub
adc
fiadds
jo
das
push
out
data16
data16
and
test
loop
cwtl
lret
outsl
insl
loop
jo
daa
jg
xchg
ja
pop
or
inc
mov
pop
xchg
cmovl
stos
sahf
ret
sub
mov
mov
lahf
mov
in
ja
mov
dec
loop
outsb
ret
ja
loope
xchg
lret
push
mov
aas
call
jge
jo
cmp
mov
cmp
and
dec
mov
xchg
pop
or
and
scas
in
inc
or
fstp
pusha
push
out
pop
xor
or
sbb
out
xchg
add
and
call
cmp
push
leave
pop
sub
test
lods
push
mov
scas
push
xor
loopne
xchg
bound
inc
rcrl
adc
jne
dec
mov
loop
pop
mov
xchg
sub
jno
xchg
decb
js
test
pop
ja,pt
push
jb
imul
lret
cli
or
mov
dec
mull
sbb
push
push
mov
jle
imul
cmpb
outsb
dec
dec
les
mov
sbb
pop
mov
js
mov
outsl
lret
adc
aad
add
inc
mov
in
xlat
dec
sub
clc
loopne
mov
icebp
push
push
push
push
dec
mov
mull
dec
subb
and
xor
jne
mov
add
mov
add
add
pop
dec
inc
shlb
ret
mov
xor
dec
pop
std
and
cmp
out
inc
jl
mov
mov
pop
aam
sti
jle
mov
and
lcall
sbb
sub
iret
rcrl
inc
lods
adc
mov
push
mov
jecxz
adc
and
addr16
xchg
pop
loope
lods
cmc
adc
subb
dec
out
mov
dec
cmc
and
ret
imul
adc
and
daa
add
ret
into
xchg
icebp
xchg
out
das
mov
sti
or
mov
jge
cld
lea
test
aas
pop
sbb
cmp
test
inc
cwtl
or
xor
or
adc
or
push
push
pop
jl
push
jl
mov
pop
pop
lea
sarl
bound
je
leave
out
mov
xchg
add
xchg
jmp
dec
out
inc
xchg
lret
lret
xchg
data16
pusha
pop
js
roll
dec
sbb
mov
jae
cli
pop
invd
cmpb
in
mov
lock
pop
fdivl
cld
jl
jno
insl
orl
dec
pop
adc
rcll
cs
adc
incb
add
and
pop
push
lcall
mov
out
push
mov
rcll
mov
push
xor
xlat
in
shr
lock
add
sub
push
iret
stos
mov
mov
cmp
out
jl
js
mov
or
mov
cmp
add
mov
shr
jb
add
outsb
mov
dec
adc
sub
bound
inc
iret
jmp
lods
push
pop
jno
call
cmp
cmp
sbbl
xchg
pop
or
enter
mov
mov
jg
lods
push
dec
les
in
aaa
inc
inc
dec
cld
cs
dec
jb
mov
test
mov
jbe
mov
mov
sbb
xor
pop
dec
movsl
hlt
pop
cmpsb
pop
negl
sbb
enter
mov
fsubl
inc
jmp
in
stos
cmc
gs
cmpsl
pushf
xor
jmp
insb
pop
mov
xchg
clc
mov
ret
mov
jnp
add
pop
inc
pop
in
or
fwait
cmpsl
aad
aas
fcoms
sbb
loopne
subb
fisttpll
imul
imul
push
cmc
xlat
call
lods
ljmp
inc
loop
pop
and
iret
dec
mov
inc
mov
push
push
cs
sbb
sub
mov
mov
xor
pop
dec
sbb
repz
outsb
mov
dec
into
or
adc
lea
mov
sub
lock
call
aad
nop
cmpb
out
cld
icebp
cmpsl
mov
dec
js
xchg
lahf
nop
out
call
in
ffree
adc
mov
xchg
jecxz
jno
add
push
cmpsl
insb
jns
dec
adc
sbb
lret
cmpsb
je
lods
imul
inc
sti
xchg
test
loope
subb
cmp
cmpsb
stc
or
adc
mov
sbbb
push
sub
imul
sbb
dec
pop
fisubrl
and
jns
xchg
lret
stos
nop
ljmp
jns
outsb
call
fdivl
push
test
add
push
pop
add
xchg
mov
adc
xchg
push
jecxz
sub
xchg
popa
loop
xor
push
cmpsl
rcrb
push
mov
jmp
xchg
pop
fbld
cmp
cmp
push
pop
out
lret
cmp
sub
pop
loop
in
cmpsl
adc
aas
imul
sub
lcall
mov
mov
jmp
mov
sub
arpl
jp
push
push
ss
xchg
sbb
loopne
loopne
aas
lods
xor
aad
cmp
les
lods
test
out
ret
fcmovnb
lret
pop
fdivl
aas
pop
mov
sub
popa
and
pop
or
adc
cld
movsb
push
hlt
push
sbb
xor
in
in
fcmovu
mov
pop
mov
test
mul
pushf
pop
lahf
inc
sarb
pusha
mov
or
pop
sbb
adc
sub
aad
mov
xchg
lods
dec
cmp
je
push
dec
cmp
xor
je
push
outsl
pop
movsl
ja
sub
jmp
pop
jle
mov
push
inc
adc
int
mov
mov
xorb
movsl
jo
pop
jp
dec
popf
jge
add
mov
out
push
cmp
jecxz
dec
jl
xchg
mov
xchg
fildl
ljmp
scas
dec
sbbb
push
fwait
scas
leave
push
jl
push
into
mov
adc
pop
mov
add
outsl
jmp
and
les
fs
add
les
insl
mov
out
mov
add
lods
push
sub
sbb
jle
jae
mov
shufps
push
sbb
int
and
and
pop
dec
xlat
shl
push
stos
das
lods
mov
dec
and
jb
push
cmpb
sub
sarl
adc
mov
nop
jbe
mov
cwtl
add
jecxz
popf
lods
pop
mov
out
outsl
sti
cli
xorb
mov
cs
sbb
out
push
pusha
aad
xor
cmp
pop
adc
xchg
jb
jle
jae
inc
lret
subl
inc
mov
test
pop
test
outsb
xor
mov
cmp
dec
inc
ret
cmp
out
aaa
cmc
sbb
iret
mov
cmc
mov
adc
mov
in
dec
xchg
xor
adc
mov
insl
add
jb
or
jne
jno
sub
xchg
cmp
shl
shll
cmpsb
mov
xchg
cmp
jp
cmc
lcall
call
repnz
or
cltd
aam
repz
mov
lret
test
lahf
push
push
out
aas
pop
cmp
in
and
repnz
bound
and
add
and
mov
jp
push
loope
jae
ds
iret
xchg
repnz
insb
pop
xchg
in
push
movsb
jb
ret
mov
sbb
shrb
jae
mov
rep
mov
jmp
in
push
fsubrl
pop
mov
and
ficoml
and
loope
push
pop
outsb
fs
mov
mov
loop
xchg
xchg
dec
mov
dec
inc
dec
aaa
and
mov
mov
sbb
pop
jl
in
add
sahf
inc
dec
mov
xchg
push
stc
cmc
in
mov
xlat
xchg
sub
out
lock
ljmp
xchg
mov
shrb
fidivl
cwtl
mov
in
aaa
add
stos
push
aad
push
xchg
pop
adc
mov
xchg
mov
scas
cmp
pop
cmp
testl
cmc
lds
lock
pop
mov
sbb
pop
mov
stc
aaa
das
iret
or
push
push
jge
cmp
cmpsb
xchg
push
mov
scas
adc
and
and
es
cmp
test
inc
sbb
xchg
pop
lea
pop
pop
das
xchg
jg
test
mov
scas
fildl
inc
lods
jle
insb
xchg
jnp
push
mov
aas
lea
add
movsb
arpl
sti
lods
adc
mov
in
push
out
lods
push
icebp
and
popf
fisubrl
into
or
addb
mov
gs
outsl
stc
movsl
push
push
enter
call
sbb
mov
jmp
out
test
and
sbb
and
mov
mov
jae
push
inc
pop
push
rorl
es
iret
mov
push
in
popl
or
xchg
repnz
mull
push
rcrl
cmpl
xchg
push
xchg
aam
in
mov
clc
adc
hlt
cmc
outsl
shll
adc
imul
pop
dec
mov
loope
xchg
pop
jp
loop
adc
lret
pop
xor
and
es
mov
repnz
jecxz
stc
sti
jecxz
sbb
inc
adc
fiadds
pusha
jbe
out
das
push
mov
sbb
jle
inc
add
outsl
fst
lds
xchg
dec
loope
pusha
inc
xor
jmp
mov
jp
rcr
outsb
pop
sub
xchg
enter
fmuls
insl
out
mov
push
inc
cli
push
icebp
test
fcompl
jmp
outsl
mov
mov
bnd
sbb
add
lds
rcrl
xor
jae
mulb
dec
pop
push
repnz
push
mov
mov
xchg
stos
push
add
lds
arpl
in
adc
clc
add
or
xlat
jno
lret
sbb
out
inc
or
pop
loop
scas
lahf
cs
out
test
inc
mov
scas
test
stos
sbb
xchg
shr
addr16
mov
push
pop
loop
sub
xchg
ret
inc
shl
lods
outsb
movsl
cmp
out
push
arpl
sbb
movsb
int
aad
jecxz
rcrl
fcoms
cmp
insl
out
sbb
ss
repz
mov
pop
adc
xor
xor
or
or
inc
mov
and
pop
sub
or
adc
xor
stc
ds
or
loope
or
fs
mov
int
or
push
mov
cltd
mov
xchg
iret
adc
repnz
in
push
jg
mov
sbb
adc
push
outsb
xchg
repnz
sub
outsb
adcb
mov
mov
gs
sub
xor
cltd
sub
add
jp
pop
outsb
push
sbb
movsl
mov
mov
adc
add
sub
and
dec
xchg
sbb
add
insb
xor
mov
call
insl
in
jge
fldcw
shll
in
mov
mov
jne
mov
and
int3
pop
push
movsl
sub
jb
aad
fs
ror
loope
lods
xchg
mov
and
sub
or
sub
popa
xor
push
mov
add
mov
sti
push
insl
mov
mov
jno
in
sub
arpl
sbb
inc
lcall
imul
int3
test
outsb
jle
lds
inc
mov
xor
jp
ja
push
cli
nop
adc
pop
stc
adc
test
in
cmp
mov
ret
les
nop
pop
xchg
add
mov
nop
lret
mov
cmc
stos
adc
xor
lds
xchg
rorl
sbb
pushf
movsb
jo
imul
cmpl
mov
fistps
lret
daa
mov
mov
lret
cld
push
xchg
in
push
subb
cmpsl
fisttps
cli
sub
sbbb
in
jae
pop
or
data16
add
cmp
cs
les
testl
divl
xchg
add
sub
push
notl
dec
call
out
adc
sbb
adc
shlb
fnsave
lcall
jmp
insl
sti
cmpsl
mov
cmp
jae
add
pop
push
enter
outsl
jnp
fmuls
xchg
pop
inc
jg
xchg
adc
cmp
xchg
into
fwait
sub
test
mov
pop
push
cmpsl
xor
or
ret
or
mov
inc
pop
push
xor
xchg
lahf
add
jmp
xchg
adc
fcoms
icebp
inc
xor
xor
and
outsb
nop
insb
cwtl
dec
les
loope
mov
add
mov
std
inc
mov
xorl
aas
enterw
dec
stos
popf
or
push
lods
pop
xorb
mov
mov
sub
stc
pop
jne
pop
arpl
jg
out
out
xor
xchg
jl
imul
add
mov
testl
inc
mov
mov
inc
in
in
sbb
imul
aam
aas
popa
push
test
xchg
inc
or
or
push
lahf
lret
pop
jg
loope
push
addl
bnd
jp
and
inc
push
xlat
fcomip
ss
add
test
xor
clc
dec
mov
inc
and
insl
pusha
dec
int3
sbb
jbe
sbb
jae
push
test
mov
adc
and
popf
push
dec
sub
mov
cmp
bound
mov
sbb
ficoms
int3
xor
cmc
js
jmp
dec
leave
mov
mov
lods
inc
jb
inc
fisttpl
out
adc
mov
mov
jnp
ja
dec
jp
push
push
std
sub
cli
xor
sub
incb
fstpt
in
push
mov
daa
mov
shl
sbb
dec
jp
js
fmull
cmpsb
jb
leave
dec
push
je
cli
sbb
xor
adc
inc
mov
xchg
sub
ret
test
cmp
in
pop
inc
adc
lret
xor
clc
sti
add
fdivp
push
sbb
stos
dec
xlat
adc
stos
cs
dec
and
and
mov
and
xchg
test
shlb
jns
lcall
lods
add
mov
ljmp
out
stos
and
aaa
rorb
jmp
cmpsb
neg
divb
cli
neg
lods
and
scas
xchg
push
sti
push
pop
rcll
xchg
jle
sub
hlt
bound
jg
inc
pop
repnz
cltd
jge
adc
test
cmp
enter
mov
notb
xchg
insb
and
sub
mov
pusha
int3
pop
cli
in
movsl
and
ds
xchg
xor
mov
xchg
test
push
push
sbbl
je
or
mov
push
xor
mov
pop
mov
xlat
push
jmp
inc
jns
sbb
jle
stos
push
jecxz
push
dec
clc
scas
jmp
lds
addl
cli
xchg
ret
dec
test
imul
lret
into
mov
fdivp
out
sbb
xchg
mov
or
and
jmp
push
inc
mov
push
jae
je
jle
arpl
subl
je
lock
lret
arpl
mov
push
sti
jbe
adc
das
adc
data16
push
add
dec
daa
jo
aaa
mov
jp
imul
or
fmulp
lahf
sbb
push
lds
mov
insb
pop
fnsave
and
pop
add
or
mov
pusha
fadds
pop
or
pop
or
lcall
adc
push
in
push
mov
add
adc
dec
rcr
cmc
and
filds
adc
push
mov
into
outsl
ret
stos
iret
xchg
jp
call
popf
scas
call
rclb
cmp
imul
and
in
pop
movb
iret
hlt
pop
fcomps
cmpl
and
sub
dec
inc
mov
shll
mov
pop
mov
inc
mov
sbb
shll
inc
mov
pop
int
cmp
push
or
mov
sub
cltd
fdecstp
fisubrl
sub
inc
loopne
call
das
sub
dec
aad
stos
ret
xchg
push
sub
dec
test
pop
movl
mov
push
adc
les
gs
mov
dec
fisttps
xchg
mov
adc
orb
mov
mov
repnz
jmp
inc
and
out
lock
gs
xor
loope
hlt
xchg
leave
adc
mov
loope
or
popa
jns
lea
int
add
cmp
sbb
fstpl
add
jg
add
lods
in
daa
inc
pop
fstps
inc
push
mov
pop
or
sub
cmp
dec
jecxz
pop
int3
jno
lods
out
add
sbb
xchg
fisttpll
leave
cmp
addr16
movsl
mov
dec
xchg
jle
cwtl
pop
cld
int
jne
sbbl
mov
movsl
push
adc
xchg
ljmp
in
add
pop
scas
out
jle
cli
adc
push
pop
addr16
xor
cmp
je
mov
inc
adc
orb
gs
and
lock
cmp
call
js
adc
add
in
rcrb
dec
xchg
stos
jle
rol
inc
movsb
add
dec
fsubl
std
push
jae
repz
ljmp
sarb
dec
xchg
pop
movsl
enter
xchg
xchg
jbe
pop
sub
out
in
cmp
js
out
popf
inc
xor
push
es
sbb
fucomip
sbb
enter
cltd
mov
xlat
xor
aam
push
fstp
js
adc
popa
xor
popf
inc
aaa
loop
sub
jp
popa
mov
add
stos
lret
lret
mov
scas
dec
call
add
xchg
fs
inc
pop
out
icebp
jns
lret
lock
data16
adc
pusha
xchg
aad
push
std
loop
enter
cmp
pushf
inc
addb
cld
fcomps
mov
out
out
sub
cli
mov
test
addr16
xchg
push
inc
mov
add
call
cs
and
add
add
jl
push
push
fnstcw
repnz
mov
test
dec
ret
pop
sahf
mov
call
ljmp
outsb
pop
test
add
jae
cmp
lret
scas
xchg
sbb
sahf
inc
adc
mov
mov
scas
clc
xchg
cmp
mov
sbb
mov
mov
dec
pop
and
stos
sub
loope
outsl
scas
imul
xchg
xor
hlt
rolb
xorb
sbbb
sub
xor
jmp
prefetch
sbb
fwait
ret
jle
pop
insb
jns
xchg
pop
push
hlt
sub
testb
and
sahf
dec
aam
insl
mov
inc
mov
inc
cmp
jecxz
sbb
pop
mov
push
popf
aad
out
inc
sbb
cmp
add
add
repz
push
nop
loopne
popf
dec
rclb
fadd
or
rcr
ss
repz
pop
lock
fwait
mov
mov
sbb
mov
cs
scas
outsb
dec
pop
imul
les
mov
lea
orb
jnp
lds
fsubl
cmp
inc
in
sbb
ds
shlb
mov
call
sub
mov
mov
xor
jp
mov
jg
fdivl
inc
jecxz
pop
mov
rclb
clc
repz
inc
popa
fs
repnz
sbbl
pop
add
mov
cmp
aam
jecxz
and
les
mov
or
scas
lahf
out
cmp
inc
inc
stc
cmp
adc
mov
test
adc
and
cmp
and
lods
pop
cmc
jbe
xor
mov
stos
aam
int3
aaa
push
fcomi
push
dec
idiv
adc
fld
enter
pop
or
imul
jne
cmpsl
or
dec
or
cmp
cmpsb
cmp
pop
mov
inc
xor
icebp
jne
xor
dec
xlat
push
js
incb
jle
and
xor
roll
mov
fcmovne
ficoms
rorl
jp
sbb
cmp
test
add
adc
lea
into
ret
repz
imulb
decl
fsubl
sub
jge
data16
cmp
inc
xchg
movsl
cmp
dec
pusha
leave
dec
sbb
push
rol
fsubrl
pop
scas
clc
jae
mov
ret
shlb
adc
mov
out
push
sahf
nop
xchg
jnp
jo
xor
pop
push
sub
je
jbe
cmp
gs
jne
or
inc
jne
lock
ljmp
dec
dec
clc
test
mov
and
test
pop
push
lret
add
xor
sub
in
test
lds
loop
add
sbb
xchg
outsb
pusha
adc
jg
pop
push
dec
adc
push
or
lea
sbb
sarb
faddp
imul
call
pusha
loopne
adc
push
stos
and
push
gs
mov
movaps
fs
push
test
out
movsl
inc
pop
xchg
test
into
popf
xchg
jbe
pop
das
mov
ficoml
ret
inc
pop
add
cld
pop
andl
mov
movsl
cmpsb
sub
scas
push
inc
mov
cli
test
out
es
addr16
mov
sbb
mov
sub
jae
inc
repz
imul
lcall
push
stc
and
dec
and
int
mov
test
xchg
xchg
sbb
mov
iret
sbb
xchg
dec
imul
pop
sub
and
push
cld
mov
cmp
add
pop
out
mov
pusha
push
lock
lret
mov
in
add
mov
out
adc
hlt
fs
cmp
sub
add
dec
and
push
mov
jecxz
and
or
mull
or
jno
mov
dec
arpl
jo
adc
in
jo
push
adc
sbb
lret
aaa
lret
cmp
mov
out
cmp
cmp
aas
les
cmpsl
mov
std
dec
pop
pop
cmp
push
cmpl
push
xchg
dec
fcmovnbe
fs
leave
pusha
shll
int
mov
add
mov
add
addl
jl
mov
mov
push
pop
pop
pop
adc
fdiv
cmpsl
fldcw
sbbb
mov
imul
push
sub
or
test
call
pop
data16
pop
cli
stc
lock
xchg
stos
jecxz
aam
data16
sbb
xlat
cltd
cmpl
std
jns
out
sbb
mov
mov
std
pop
lock
adc
outsl
out
sbb
xor
fstl
popf
into
or
mov
call
xor
adc
sti
imull
mov
jge
push
xor
aaa
mov
sub
mov
or
mov
inc
jns
inc
jmp
or
pushl
mov
push
hlt
pop
hlt
test
mov
mov
adc
cmp
mov
or
cli
sti
ss
out
aad
fbld
sub
clc
dec
fnsave
sti
sub
mov
adc
js
dec
xlat
inc
fwait
mov
movsb
and
test
iret
addr16
lds
fcoml
jge
jle
ds
fcoml
decl
aaa
cs
test
jmp
add
jno
pop
push
enter
out
xchg
mov
fnstenv
sub
sbb
icebp
jge
sub
aam
add
push
fs
in
stc
push
cld
mov
jo
add
dec
outsl
ds
out
scas
int
jne
mov
fs
ja
jge
clc
jo
add
cmp
or
fidivrl
in
push
pop
fnstsw
lahf
bound
pop
jecxz
jecxz
fsubrl
rorb
dec
mov
dec
lea
inc
ja
push
aaa
pop
jecxz
insb
sub
adc
mov
lret
jno
or
xchg
repnz
cmp
notl
jp
xor
repz
pop
mov
lods
mov
push
xchg
pop
das
sub
mov
data16
shlb
std
or
add
fistpl
aam
mov
cltd
cmpsl
jmp
sbb
sbb
xchg
lock
mov
sub
inc
fwait
pusha
hlt
sbb
cs
push
movsb
jl
fadd
mov
mov
ret
movsb
mov
aas
gs
stos
test
js
inc
fmul
loope
cmp
lahf
data16
cmpsb
mov
mov
clc
jp
std
dec
jae
or
and
adc
addr16
sbb
mov
stos
push
push
inc
mov
jo
out
dec
lret
xor
mov
sbb
mov
std
pop
lcall
pop
jmp
mov
xlat
mov
jne
push
stos
xchg
adc
dec
xchg
and
pushf
mov
cmp
fcomip
fnstcw
sub
fsubrs
push
mov
fimull
xlat
out
popf
push
or
mov
mov
lock
sub
stc
or
movsb
mov
push
xchg
pop
mov
jmp
add
lock
dec
jp
xchg
pushf
mov
in
sbb
out
push
cmp
cwtl
cmp
andb
cmp
jge
dec
cmc
fnstcw
lret
dec
xor
jge
push
xor
int
or
inc
inc
mov
movl
bound
cmp
lock
shll
mov
pop
sub
pushf
dec
sarl
test
cwtl
mov
sahf
mov
out
xor
pop
lea
adc
or
mov
add
xchg
outsb
icebp
pop
dec
sub
fisubl
mov
push
push
ja
mov
and
lods
fnstsw
mov
movsb
aaa
add
sahf
add
sbb
and
loopne
int3
mov
sahf
subb
outsl
pop
add
negl
or
aas
and
stos
inc
lods
hlt
pop
loope
cltd
add
pop
or
stc
cmp
loop
add
xchg
sbb
imul
cmp
mov
out
lock
in
adc
adc
inc
mov
fcomi
jbe
shlb
xchg
push
insl
jle
sub
data16
push
sub
ficoms
mov
sbb
fmull
loope
mov
in
repnz
mov
stos
hlt
sbb
lods
roll
cmp
lods
sbb
xor
cmp
test
rorl
adc
lea
aam
jno
sbb
mov
or
leave
outsb
push
push
inc
orl
inc
pop
fcmovne
int
push
push
lahf
push
or
int
shr
lds
mov
cwtl
ja
call
insb
adc
bndldx
jae
out
mov
sub
pop
mov
pusha
lret
rorl
and
add
lods
sub
jns
leave
lahf
fdivr
and
inc
sub
adc
repnz
hlt
or
in
stc
idivb
adc
frstor
push
mov
enter
sub
jo
mov
push
rcl
inc
push
mov
lret
lods
test
stc
dec
cmpsl
arpl
popf
es
push
inc
jl
test
aas
mov
test
stos
inc
add
arpl
mov
movsl
in
fstpl
jmp
xchg
nop
pop
push
addb
insl
inc
pop
lret
stos
inc
stc
mov
cmp
jp
andl
mov
and
in
pop
insb
out
inc
aam
jle
and
adc
push
mov
imul
in
repz
mov
add
pop
into
fmul
lret
inc
lock
out
loope
mov
ja
and
leave
cmp
ljmp
push
sbb
mov
push
in
mov
xor
jl
mov
stos
sbb
or
loopne
and
cmp
bound
xor
lods
test
mov
pop
dec
push
add
mov
mov
movl
movsb
mov
and
inc
push
adc
fcompl
adc
add
shll
sahf
loopne
clc
or
add
and
mov
repnz
and
ret
jno
dec
pushf
mov
xor
pop
scas
add
xchg
cmpsb
aam
decl
aas
xor
sub
shll
je
cli
popa
xor
out
jo
dec
in
fmul
ds
decb
add
adc
pop
sbb
mov
adc
loop
lds
mov
jp
cmp
call
push
pop
or
mov
jle
mov
cmp
leave
ret
and
out
pop
sarb
jp
xchg
jl
dec
and
out
cli
lea
fsts
mov
or
test
xor
sub
pusha
std
lret
pusha
mov
mov
std
adc
jg
mov
xchg
push
push
push
add
ss
cltd
ficomps
ffreep
and
mov
popf
loope
sbb
mov
fmul
jg
out
cmpsl
jne
pop
ss
cli
xchg
push
cmp
push
mov
xor
and
je
jp
jg
pop
fnsave
and
xlat
mov
sub
add
adc
imul
pop
pop
xchg
fwait
sbb
out
cmp
rol
pop
mov
scas
es
faddl
lea
sub
stos
dec
mov
adc
dec
push
inc
sbbb
and
sbb
lcall
mov
jno
lea
dec
xchg
xchg
ljmp
insl
pop
rolb
out
pushw
push
xrstor
stos
xor
stc
inc
ret
lods
pop
xchg
lcall
xor
fwait
or
notb
add
ljmp
test
fidivs
xor
cmp
out
dec
popf
adc
lods
icebp
leave
inc
outsl
sarb
sbb
iret
gs
fldt
add
clc
lea
add
push
pop
jb
fucom
andl
dec
mov
ss
push
stos
or
sub
jg
fwait
sarb
pop
shlb
rcll
jle
jne
xor
cmp
push
and
cmp
jl
cmpsl
push
loopne
or
sub
cwtl
bound
pop
sbb
pop
int3
loope
mov
aaa
mov
inc
lret
pop
or
xor
test
mov
sbb
and
std
xchg
or
jnp
mov
in
icebp
mov
es
jp
cli
push
mov
xlat
adc
mov
jmp
sub
lret
inc
test
xor
xlat
and
cmp
lahf
fdivr
pop
in
mov
addl
es
push
sbbl
outsl
xor
rorb
adc
add
mov
iret
add
push
je
pop
jo
aas
and
sub
pusha
mov
xor
xchg
or
imul
inc
mov
imul
xorl
mov
cli
push
sarl
loopne
lea
push
shlb
adc
repnz
out
sbb
sbb
xchg
lods
xor
data16
xchg
fs
xorb
loopne
sub
add
iret
jne
mov
loope
je
stc
jecxz
test
pusha
sub
ss
fstpl
lret
or
and
lret
loop
jnp
add
popa
ret
mov
pushf
push
adc
pushf
jge
xchg
ret
add
and
mov
and
and
js
cmp
test
mov
sub
adc
mov
sbb
dec
jbe
cmp
mov
adc
inc
jbe
push
cli
pop
insb
jp
mov
sarb
loopne
aaa
dec
jl
cs
xlat
cs
rolb
jge
lock
in
push
and
pushf
shl
mov
sahf
fsubrs
arpl
jge
xorb
mov
in
sbb
arpl
out
sarb
pop
push
int3
fstps
lea
stc
and
xor
lock
subl
mov
hlt
xor
movsl
cmp
dec
push
jnp
or
sub
aaa
jl
ljmp
ss
leave
imul
mov
mov
or
leave
jns,pt
or
stos
xchg
call
out
scas
or
jge
lea
movl
pop
aas
lcall
dec
xchg
cmp
pop
and
in
pop
push
fs
es
hlt
repz
mov
test
lahf
mov
mov
xor
pop
cwtl
xchg
popf
mov
inc
bound
cmp
push
jb
sbb
movsl
ljmp
add
push
and
adc
mov
notl
test
push
push
testl
xchg
sub
add
aas
and
xchg
mov
ljmp
mov
cmp
jmp
int3
xor
mov
xor
cmpsl
push
cld
xlat
fs
stos
pop
outsl
dec
into
cmpsl
imul
xor
mov
cmpsl
cmc
cmpsb
outsb
mov
cmc
adc
sbb
ret
mov
ret
dec
or
jb
in
sarl
jb
cmpsl
inc
sbb
stos
lcall
lds
jge
or
test
subb
daa
loop
jmp
divl
icebp
inc
cmpl
fwait
out
cmp
aaa
xchg
dec
fimull
scas
cmp
out
sub
mov
arpl
hlt
mov
jns
adc
mov
cmc
fidivs
dec
cmp
es
out
fdivs
mov
push
mov
pop
xchg
cmp
ret
jmp
push
dec
lea
mov
dec
add
lret
rorb
add
or
scas
outsb
pop
cmpb
mov
push
mov
stos
sarl
pop
push
mov
xor
dec
data16
insb
add
dec
les
sub
nop
fsubrl
jmp
push
xchg
bound
cld
fwait
pusha
cmpb
push
lret
repz
in
sbb
dec
loop
mov
scas
jge
xor
xchg
cmp
in
into
dec
mov
mov
insl
rclb
test
push
mov
pop
or
fs
roll
rclb
ljmp
cmpsl
movsb
pop
xor
cmpsl
shl
cmp
std
cmpl
arpl
pop
push
je
xchg
push
adc
in
js
adc
mov
lcall
cmp
sub
cwtl
sbb
xor
mov
mov
pop
movsb
sarl
pop
adc
imul
mov
fsubrs
mov
or
cltd
jge
jns
mov
pop
cmpsb
mov
shl
adc
jns
jecxz
push
lret
adc
fldt
mov
ret
push
nop
sbbl
xor
and
sub
push
clc
adc
lcall
vunpckhps
push
push
cld
jecxz
lahf
xor
jnp
sub
and
cwtl
and
pop
mov
dec
cmp
jl
inc
add
sarl
cmp
outsl
fstpt
or
mov
xchg
jle
xchg
in
push
shrl
jp
pop
hlt
jmp
add
adc
outsb
addr16
cmc
pop
mov
xorb
cmpsb
mov
iret
nop
roll
mov
popf
pop
outsl
fcmovu
push
pushf
push
cmp
into
ljmp
imull
adc
out
mov
fs
cs
pop
xor
ss
mov
arpl
into
lods
clc
add
lret
push
fs
add
push
mov
pop
fsts
mov
jno
mov
inc
dec
mov
icebp
daa
cld
ljmp
pop
or
sbb
cs
rcll
cwtl
dec
inc
pop
mov
adc
pop
addl
ds
and
push
adc
pop
out
lds
repz
adc
jbe
xchg
cltd
rorb
xor
fbstp
pop
mov
xchg
data16
pop
les
outsl
in
rolb
dec
and
lea
je
jp
pop
push
mov
ret
popl
in
or
repnz
push
xor
mov
xor
rcll
dec
xorl
xorb
mov
dec
addr16
push
fcomi
sbb
inc
or
lret
inc
add
out
int3
cmp
adc
pop
neg
jo
xchg
sar
sbb
sub
std
sub
aaa
mov
stos
fwait
sub
lahf
jg
test
iret
xor
subb
icebp
lods
divl
cmp
mov
pushf
adc
aas
adc
cmp
mov
fisubs
mov
sub
aam
shl
cmp
adc
dec
pop
sbb
mov
mov
xchg
adc
test
jno
dec
test
cwtl
clc
mov
inc
or
xor
inc
jno
popf
cld
inc
mov
push
xchg
aaa
ds
lret
cmpsl
movb
imul
idiv
mov
sub
bound
push
das
pusha
mov
xchg
xor
sub
into
push
jbe
out
inc
pop
lea
dec
push
mov
addb
cs
adc
and
daa
sub
rol
dec
or
test
mov
imul
fiadds
popl
jp
jmp
adc
repz
mov
xchg
xor
lret
in
inc
shr
xlat
add
js
cmp
std
mov
adc
aas
js
cmp
cltd
mov
sbb
and
cmp
jnp
test
ret
push
scas
push
sub
sbb
popfw
shll
in
cmp
icebp
xlat
loope
push
ret
je
lea
aas
clc
lahf
dec
sub
into
sti
dec
ja
fwait
mov
addr16
sbb
or
aad
or
xor
pop
cmpsl
mov
jbe
mov
and
aad
cmp
shlb
add
push
in
fbld
add
xchg
xchg
dec
cmp
xor
cmp
cwtl
mov
sbb
adc
insb
cltd
loopne
lahf
jle
and
shl
fisttps
mov
sub
or
or
jnp
es
in
lock
scas
xchg
popa
and
jns
ret
sbb
aam
std
adc
push
in
inc
mov
pop
add
sbb
cmp
push
fstpt
mov
pop
jnp
mov
scas
and
pop
mov
scas
mov
popl
jge
mov
subb
add
aam
call
mov
and
cmp
ret
sahf
sbb
push
lret
in
insb
into
cmpsb
push
xchg
aaa
and
xchg
aam
push
clc
sub
stc
sarb
cmp
ret
xor
xor
in
push
iret
mov
lods
dec
cmpsl
cltd
mov
lcall
inc
frstor
add
or
xor
push
xor
imul
sub
cmp
arpl
ret
pop
subl
aam
mov
shlb
inc
nop
cmp
xor
sub
push
leave
gs
dec
and
out
fistl
clc
mov
or
dec
int3
subl
push
out
sbb
adc
and
fwait
dec
cltd
jno
mov
jb
cmp
pop
mov
add
pop
in
mov
enter
ret
mov
inc
std
mov
repnz
push
cli
mov
mov
outsb
test
test
pop
aad
add
pop
and
dec
mov
cmp
dec
jmp
mov
mov
inc
stos
push
addl
in
incl
hlt
add
push
lret
in
lcall
mov
hlt
fadds
mov
xchg
push
push
lock
xchg
push
push
sbb
cmp
and
push
lds
jno
add
mov
out
loop
js
cltd
jmp
xchg
mov
stos
jno
inc
jno
pushf
rorb
test
mov
shll
and
ljmp
loop
dec
aad
arpl
pop
xor
jo
xor
mov
xor
adc
adc
xor
add
rcrb
cltd
dec
sbbb
xor
pop
mov
outsb
jns
bound
push
call
or
and
gs
inc
repz
hlt
imul
js
mov
lcall
pop
ret
dec
mov
mov
repnz
pop
scas
xchg
mov
in
jp
mull
sub
lahf
add
push
and
in
jbe
xchg
sbb
aas
shl
mov
jno
inc
icebp
in
push
sub
stos
repz
popa
cmp
push
stos
out
in
das
ja
cmp
daa
add
and
push
pop
in
inc
lret
lret
inc
fcoml
adc
lea
and
lahf
cwtl
add
clc
cs
cmp
pop
imul
and
push
test
or
mov
push
aad
and
jle
jl
or
push
fidivrl
push
or
xchg
jae
add
lods
pop
outsl
stc
test
addr16
and
dec
mov
clc
xchg
pusha
mov
mov
sti
sub
mov
cltd
lahf
fdivrl
cmpb
inc
int3
stc
adc
sbb
xor
dec
dec
jmp
xchg
mov
dec
sbb
call
stos
lods
popf
jo
push
mov
cmp
mov
pop
rcl
fldenv
in
gs
jmp
dec
fsubrl
das
adc
add
fildl
xor
lods
dec
lret
inc
outsb
cs
lcall
push
sub
sahf
jge
testl
es
andl
imul
test
inc
push
cmp
pop
lds
icebp
push
test
push
loope
sub
out
push
cmpsl
dec
xchg
xor
test
jmp
pop
mov
xadd
mov
clc
sarl
test
jmp
mov
mov
push
sub
bound
push
test
adc
add
mov
cli
sahf
add
cmp
das
scas
fidivrs
popf
xchg
cli
cld
adc
rol
mov
js
scas
or
das
lahf
in
and
cs
mov
xchg
jg
xor
or
sbb
push
pop
mov
xor
jae
rclb
push
leave
nop
mov
push
mov
xlat
adc
lcall
push
mov
jmp
cmp
mov
ljmp
mov
lds
fcmovnb
dec
or
cmpb
fdivr
neg
int
sbb
test
cwtl
loopne
adc
or
xor
imul
repz
pop
jp
mov
mov
cmp
jb
xor
sbb
cmp
outsb
call
gs
bound
pop
dec
xchg
jnp
ss
ljmp
out
mov
mov
cmpsl
xchg
js
loop
pop
cmpsb
lods
cwtl
lret
ret
jnp
dec
or
jnp
idivl
cld
cld
js
sub
xor
pop
lea
jae
pusha
in
jp,pt
jecxz
repz
xlat
cmp
xchg
add
dec
mov
mov
outsl
sbb
sbb
push
fldcw
test
mov
insl
push
aas
test
xor
jmp
sub
mov
xchg
mov
in
test
into
jnp
outsb
outsb
xchg
js
scas
fisttpl
jno
insb
and
rcll
test
je
mov
jo
adc
loop
lea
mov
repnz
and
jg
nop
test
lock
or
or
or
pop
mov
sub
stos
fisubrs
adc
cmp
mov
nop
cltd
dec
mov
subl
pusha
xchg
jmp
in
xor
lock
pop
xor
out
cld
inc
mov
pop
push
push
enter
movsl
cmc
addr16
and
aad
push
daa
sti
int
or
iret
leave
aad
mov
cltd
jecxz
lcall
enter
mov
aas
xor
cmp
mov
cmp
cmp
jmp
gs
xchg
loope
push
mov
idivl
insl
and
ljmp
dec
push
xor
xchg
mov
aas
xchg
aad
sbb
ljmp
pop
clc
arpl
jge
xor
out
or
mov
and
push
testb
xchg
xchg
pop
push
and
rcll
ss
or
scas
adc
sbb
shr
xchg
pop
dec
inc
test
pop
ffree
daa
out
pop
repz
mov
cmp
dec
push
stos
int3
dec
jp
dec
lcall
push
xchg
sub
jg
ds
sti
or
les
push
es
jge
jo
cmp
jp
inc
shll
mov
fs
lahf
mov
popf
xadd
clc
jp
in
fsubrs
mov
sbb
sub
fwait
decl
jne
in
retw
and
sub
sub
in
movsl
mov
inc
loop
lock
xor
les
push
movsl
lcall
push
mov
cmp
xor
mov
cmp
sbb
dec
pop
xor
call
pop
mov
cmp
imul
popl
popl
lods
rclb
dec
mov
fsts
jns
cmc
adc
pusha
int
fiaddl
mov
cmp
add
sub
scas
inc
sub
sub
mov
xor
fsts
hlt
sbb
cld
fdivr
jg
mov
inc
das
push
pop
arpl
popf
pop
jmp
loope
mov
fsub
mov
aaa
sbb
arpl
repnz
clc
sahf
inc
cltd
push
cli
out
inc
mov
stc
cmpsl
push
fstpl
and
adc
jle
cli
adc
add
gs
mov
loopne
push
lds
iret
mov
std
mov
xlat
test
mov
adc
std
jl
push
ret
sub
out
fstl
jns
xor
jge
test
mov
repnz
jb
or
ljmp
xor
sub
cmpl
mov
xchg
ss
cli
lods
les
ret
lods
addl
lea
xchg
cwtl
out
sub
or
lahf
jno
test
out
cmpsb
lahf
xchg
mov
pop
lahf
mov
adc
in
enter
add
cmp
jbe
inc
loopne
mov
arpl
pop
xor
xchg
jp
inc
mov
xor
mov
jo
or
pop
xchg
push
add
fstl
push
mov
or
dec
push
sbb
jno
mov
pop
out
sbb
lahf
inc
shll
loop
push
adc
mov
cmp
mov
push
xchg
xchg
sti
outsl
mov
ret
inc
mov
adc
xchg
daa
arpl
xor
push
xor
out
ret
xchg
ret
mov
add
rol
popf
sub
lock
sbb
or
lahf
sub
ret
loop
inc
rcr
aad
lods
jo
push
in
shll
jmp
shll
cmp
mov
and
sub
mov
cmp
cmp
dec
das
cmp
in
xchg
scas
test
add
dec
pushf
lock
shrl
dec
mov
jns
xchg
inc
lods
call
sbb
add
mov
sbb
xlat
mov
dec
and
enter
ret
mov
push
les
dec
aad
sbb
lret
shll
rolb
cltd
leave
das
mov
lock
sub
lahf
xor
pop
nop
mov
xchg
mov
pop
js
sbb
mov
jns
orl
mull
jecxz
fstp
mov
fs
adc
xor
push
mov
add
cld
push
or
or
lods
cmc
shll
lds
xor
cmp
cwtl
out
repz
inc
cld
or
and
xlat
push
push
cmp
adc
dec
pop
add
xor
fistpl
mov
inc
fs
das
pop
out
jno
rorl
cs
adc
jb
loopne
xor
in
std
popa
scas
test
xor
sbb
dec
cli
shlb
dec
cmpsl
sub
pop
das
bnd
mov
sub
pop
or
push
out
negl
sbb
mov
fisubrs
push
stos
add
hlt
jmp
outsb
sub
dec
mov
mov
and
repz
stc
je
aaa
fidivrl
mov
aad
push
mov
sub
movsb
inc
dec
jnp
insb
mov
in
jb
shll
into
mov
stc
mov
js
xchg
icebp
sbb
push
pop
aad
js
jno
add
sti
sbb
and
mov
in
jle
or
prefetchnta
int
mov
sbb
mov
test
jmp
dec
nop
repnz
mov
repnz
movsb
inc
not
in
mov
ret
out
push
pushf
mov
xchg
scas
test
mov
fidivl
adc
push
cmp
mov
and
lret
cli
sbb
xor
dec
add
roll
pop
or
sbb
cld
sub
jbe
out
adc
pop
lahf
fnstsw
loop
add
leave
ret
xor
mov
jecxz
mov
rorb
test
in
jecxz
sub
pop
aas
pushf
mov
jbe
popa
adc
mov
add
into
and
insl
cmp
daa
jb
and
dec
jmp
xchg
je
push
adc
mov
mov
inc
jl
pusha
and
movsb
dec
loopne
mov
mov
and
inc
stc
mov
jge
dec
std
orb
jp
cs
xor
imul
add
add
push
pop
xorb
je
inc
lahf
rorl
mov
fdivs
push
clc
leave
inc
lock
imul
xor
pop
cmp
pop
xor
nop
xchg
mov
hlt
cmpsb
xchg
scas
jnp
gs
in
dec
lret
sub
lahf
andb
sti
jge
cli
xor
popf
loope
lods
fdivrs
out
stos
stos
fs
pusha
push
leave
fs
pop
jb
sub
dec
cmpsb
cmpsb
and
adc
stc
pop
dec
ljmp
repnz
dec
cli
add
daa
pop
stc
or
in
fsubrl
xchg
aas
addr16
sti
dec
into
jns
mov
negl
lds
add
lret
adc
pop
inc
movsl
lea
xorl
or
dec
pop
mov
xor
pop
out
pusha
xchg
imul
imul
mov
mov
sub
mov
cmp
inc
mov
sbb
pop
fldenv
add
out
aam
xchg
add
cmp
add
movsl
push
cmpsl
pop
push
dec
mov
inc
lahf
or
add
test
add
adc
cmp
jnp
sbb
ret
xchg
pop
or
mov
inc
pop
push
pop
js
xchg
dec
push
pop
pop
inc
xor
sub
or
lret
cmp
mov
addr16
inc
iret
pop
pop
add
and
inc
daa
cltd
lods
icebp
cmp
mov
ds
or
xor
pop
xor
lea
pop
mov
dec
xchg
xlat
cmp
mov
std
inc
cltd
xor
dec
and
cmpsl
lcall
aad
inc
cmp
imul
std
push
lcall
inc
sahf
jnp
mov
xchg
arpl
out
dec
test
dec
push
push
mov
push
cmp
out
mov
or
andb
add
je
mov
sahf
adc
push
scas
shll
ja
inc
push
dec
mov
dec
lock
lds
lock
repz
pmullw
xchg
cmp
sahf
adc
in
daa
in
fiadds
icebp
xchg
cmc
int
int3
jae
or
fldz
aad
test
out
push
mov
jnp
xchg
dec
ljmp
add
xchg
mov
push
xchg
pop
rol
xor
sub
or
xlat
imul
jmp
or
sub
mov
cmp
gs
xor
sti
cmp
cmc
popf
in
movsb
push
popf
cmp
aam
mov
add
push
das
loope
dec
pop
push
and
dec
and
js
in
xchg
or
aaa
mov
aas
cmp
jne
je
adc
das
out
add
xor
xchg
aad
std
mov
shl
aam
outsb
fcom
adc
out
mov
sub
and
push
into
negb
dec
dec
mov
popf
test
repz
push
mov
jmp
xchg
popf
inc
dec
inc
fwait
add
cmp
je
fnstsw
adc
push
dec
sar
icebp
sahf
mov
jmp
xsha256
cmpsb
xlat
add
and
outsb
and
add
ret
push
cs
enter
pop
stos
scas
fldcw
pushf
pop
cld
dec
or
outsb
mov
std
mov
push
pop
mov
mov
arpl
mov
jp
into
inc
jp
sti
jmp
sub
mov
xchg
jns
les
out
loopne
adc
scas
push
push
cmpsb
or
ficompl
jge
and
pop
mov
and
mul
jp
in
and
mov
inc
shrl
enter
bound
cs
pop
lcall
jp
inc
aas
subl
xchg
add
cmpsb
nopl
xchg
aam
inc
sub
pop
pop
in
jg
push
rorb
les
push
push
mov
mov
cs
add
jae
mov
sub
imul
xchg
es
dec
cmp
jnp
jns
sbb
mov
xchg
adc
fcomps
stos
inc
adc
arpl
test
ret
mov
icebp
jp
add
movw
adc
lret
cmp
mov
out
neg
mov
cli
ret
adc
inc
sbb
addr16
gs
mov
popa
cmp
cli
adc
fadd
sub
fcomps
add
dec
mov
in
subb
jo
imul
jecxz
sub
pushf
inc
rcll
inc
xchg
mov
inc
pushw
dec
mov
adc
add
pushf
clc
dec
ret
sub
mov
xchg
fwait
pop
movsb
xchg
xchg
push
mov
cmpsb
pop
rorl
mov
lods
inc
jo
in
jns
call
inc
inc
in
test
xor
outsb
lods
shr
cmp
xor
cmp
xchg
jb
imul
push
pop
ret
dec
scas
in
out
adc
adc
xchg
lret
mov
popf
jo
rcr
mov
or
nop
sub
repnz
xchg
and
adc
pop
push
xchg
fildl
std
rcrb
sbb
or
mov
popf
out
out
and
adc
sbb
stos
mov
loopne
out
or
dec
pop
mov
clc
push
push
xchg
push
pop
xor
mov
repz
popf
movsl
adc
daa
push
or
scas
popa
lret
inc
dec
test
or
movsb
xor
lcall
data16
fstl
imul
adc
js
ret
arpl
ds
dec
pop
addr16
pop
mov
pop
pop
push
les
inc
jge
jge
popa
pop
mov
movsb
mov
fcoms
mov
pusha
dec
call
xchg
mov
jns
into
mov
inc
cmpb
xchg
test
call
mov
push
inc
rcll
or
pop
jo
add
cld
insl
hlt
xor
xor
ficoms
sarl
xchg
mov
sarl
sbb
mov
je
pop
adc
dec
movsl
fsubrs
add
or
sub
and
ds
jno
add
sbb
or
inc
mov
fucomip
xchg
mov
fbstp
push
fadds
or
inc
jno
mov
jmp
dec
fistl
sub
int
xchg
gs
adc
leave
cs
ror
lock
addps
iret
mov
fxam
add
lock
ret
adc
mov
jne
or
lcall
imul
push
cmp
out
dec
push
fst
sbb
mov
fdivp
dec
push
rclb
cmpl
mov
pop
push
add
adc
and
call
sub
sub
mov
clc
loope
xlat
add
push
dec
scas
sbbl
fcoms
cli
xor
add
int
in
lods
clc
int
outsl
inc
jecxz
xchg
cmpsl
in
in
lods
pop
roll
pop
jl
cmp
jb
fwait
jl
popa
in
das
jbe
leave
lock
mov
jl
cmp
lock
les
aas
shll
pop
push
ja
ret
jb
in
movsl
cmp
into
mov
inc
jle
hlt
std
or
das
int
mov
adc
dec
or
clc
repz
cmp
out
xchg
add
add
imul
jne
and
imul
inc
out
and
jmp
int3
mov
stos
dec
lods
addr16
mov
jno
or
call
add
inc
enter
jo
scas
inc
lea
xchg
inc
xchg
jns
and
dec
jle
xchg
inc
push
sub
mov
pop
fucomp
aas
test
clc
or
adc
cmpsl
subb
rolb
dec
lea
or
add
ret
dec
or
xchg
pop
lcall
lahf
mov
sbb
dec
int3
test
adc
sbb
loopne
add
fwait
dec
ret
into
dec
pop
push
pop
ffree
faddl
lods
sub
mov
push
cld
imul
push
inc
lods
out
push
and
and
add
push
and
ret
mov
sti
add
pop
aaa
push
or
dec
int3
add
add
scas
add
cmp
jne
adc
aad
out
mov
ds
pop
fimull
push
inc
sbb
dec
push
sub
cmp
test
push
cmp
xchg
xchg
adc
sub
sub
dec
inc
mov
sarb
mov
pop
je
mov
popf
sti
ljmp
mov
mov
out
ja
inc
cmpsl
iret
sbb
mov
test
and
jle
mov
adc
sbb
mov
adc
daa
aas
mov
lds
imul
negb
sti
aas
ja
movsl
iret
testb
lea
add
jns
sbb
adc
ret
lds
pop
cmc
adc
dec
js
out
in
mov
ficoms
jge
pop
mov
sub
xchg
aas
and
xor
aam
xor
inc
int3
sbb
pop
or
mov
push
insl
in
in
iret
and
jo
cwtl
mov
addr16
xor
mov
and
icebp
cmp
jne
xor
cwtl
add
jge
insl
cmp
movsl
mov
or
jo
push
add
fldenv
xchg
lcall
push
out
movsl
leave
push
inc
cli
inc
pop
pop
pop
push
cmc
andl
xchg
pop
xor
jmp
push
xchg
xchg
sbb
int3
in
xchg
push
std
xchg
pop
xor
lcall
shl
jg
dec
jmp
push
and
push
mov
sub
outsb
jbe
xchg
inc
add
ljmp
mov
ret
pop
adc
mov
mov
out
inc
addr16
in
lds
or
ljmp
stos
mov
inc
jg
push
fists
or
and
jnp
xlat
sbb
jbe
fimull
loop
test
jno
mov
imul
test
cwtl
outsl
sbb
cmp
mov
int3
jae
jg
aaa
into
rcrl
mov
jbe
mov
mov
lret
dec
push
loope
cmp
sbb
insl
aam
ljmp
sbb
pop
inc
movsb
int3
ficompl
dec
loop
mov
jecxz
movsb
je
mov
lods
fisubrl
xchg
dec
and
jecxz
insb
lret
movsl
adc
xchg
pushf
int3
sub
cmp
jne
test
ljmp
or
daa
fstl
outsl
cltd
stos
int
lods
or
jne
lahf
mov
pop
jae
or
out
ret
mov
jl
cmpsl
xorb
bound
hlt
sbb
notl
cli
add
gs
sub
add
inc
addr16
popa
rcll
cmp
jmp
aad
lock
push
icebp
shr
out
stos
adcb
push
jo
sahf
inc
xlat
mov
sarl
stc
adc
mov
pusha
xlat
cltd
daa
inc
test
mov
cld
push
repnz
mov
repz
inc
out
sti
mov
xor
js
movsl
push
xchg
jg
jno
push
shlb
push
xchg
imul
pop
mov
repz
xor
std
cmp
pop
repnz
add
decb
pop
sbb
popf
add
inc
lea
adc
push
jle
cli
int
in
hlt
clc
sti
jae
out
int3
push
mov
sbb
aad
aaa
jecxz
loop
jae
add
mov
mov
add
leave
inc
mov
fsubr
out
bound
and
and
adcl
test
push
call
sbb
insb
out
add
jne
sahf
push
dec
mov
xchg
test
push
mov
xchg
sub
int3
lcall
scas
cmpb
rorl
popa
jb
mov
data16
push
ds
pop
in
jmp
enter
sysenter
pop
out
in
pusha
push
cwtl
or
mov
add
mov
or
popf
dec
mov
scas
push
push
xlat
push
jmp
in
adc
mov
push
sub
adc
jmp
mov
xor
cmpsb
jbe
adc
fdivrs
jno
leave
scas
push
xchg
xlat
lret
inc
mov
push
out
data16
scas
or
push
xor
idivl
sub
mov
loop
scas
dec
mov
test
add
adc
jg
jecxz
lahf
mov
cmp
cmp
fistl
stc
popf
addr16
sbb
adc
mov
xor
lods
dec
cmp
push
xor
or
inc
std
mov
push
pop
adc
scas
das
shl
dec
add
lods
mov
in
test
mov
orb
inc
add
fstpl
add
fcomps
sub
jp
mov
jb
ja
repnz
das
sti
out
aas
mov
enter
xchg
cmp
test
aas
mov
sahf
mov
and
push
into
inc
dec
xor
adc
andb
mov
dec
dec
lcall
daa
lcall
shlb
adc
das
and
push
push
push
je
jnp
test
sahf
pop
mov
daa
pop
pushf
xor
push
mov
jb
xchg
loop
cmp
addr16
in
or
and
jmp
inc
out
fists
test
or
add
add
subl
or
ja
add
bound
fsubrs
push
je
xchg
and
lock
scas
rcrl
mov
je
ds
jp
dec
imull
sbb
sbb
add
mov
shrl
pushl
adc
inc
aaa
int3
dec
sbb
push
daa
test
cmp
test
mov
cmp
add
mov
fisttps
push
inc
movsb
mov
xchg
cmp
daa
dec
fmull
jmp
cmp
sbb
xor
rcrl
xor
push
shl
xlat
inc
xchg
or
jecxz
movsb
jg
es
pop
sub
jno
pop
mov
xchg
jmp
cltd
imul
sahf
push
int
dec
out
or
dec
ds
loope
sub
mov
mov
adc
clc
inc
int
cmp
inc
fstpl
leave
or
dec
push
loope
mov
dec
hlt
cwtl
pop
das
dec
adc
aad
mov
scas
aam
xchg
mov
daa
iret
push
adc
lock
inc
push
and
imul
fwait
xchg
inc
lds
dec
movsl
les
push
xchg
or
cmpl
mov
or
mov
pushf
shlb
arpl
xor
mov
mov
in
arpl
in
adc
jne
sbb
mov
push
in
popa
ret
shlb
push
cmp
sub
mov
movsw
scas
and
mov
pop
cmp
sbb
movsb
in
fwait
adcl
movsl
pusha
mov
testl
jb
scas
lcall
int
out
dec
enter
movsb
jmp
shll
mov
into
sub
mov
fdivl
pop
ds
rcrb
std
mov
stc
cmpsb
fidivrl
ljmp
push
xchg
mov
xor
cli
fdivp
sub
sub
lahf
out
sbb
enter
stos
aam
inc
add
mov
xchg
stos
sub
pushf
sbb
sbbb
mov
int
lcall
in
addr16
cmc
pushf
mov
int3
jbe
sahf
add
cmc
cwtl
pop
lock
ret
imul
fs
popf
ret
push
xchg
mov
data16
sbb
incl
repz
lock
xchg
pop
mov
out
sti
adc
pusha
inc
inc
imul
ret
in
pop
and
xchg
loopne
mov
shll
cs
mov
mov
mov
ret
sti
andb
sbb
jae
idivl
jbe
push
add
pop
aad
add
or
dec
xchg
pop
mov
mov
adc
mov
cmp
or
nop
addr16
in
cmp
inc
push
shrb
fstps
dec
or
pop
loopne
dec
jg
mov
jns
inc
pop
push
sub
xor
jg
adc
sub
pop
fstps
jns
insl
call
jae
push
sbb
push
xor
xchg
push
cmc
mov
in
stos
push
pop
sub
ljmp
repz
subb
jb
or
jl
mov
outsl
lea
xor
les
arpl
clc
mov
imul
xor
xchg
add
adc
pusha
fwait
mov
push
pop
loopne
pop
sti
dec
test
mov
les
pop
mov
push
sbb
cmp
mov
xchg
sub
xorb
sub
xchg
mov
popa
inc
cld
mov
movsb
in
cwtl
cmpl
xchg
add
fiadds
testb
mov
xchg
jge
mulb
decl
jb
cmp
xchg
jecxz
decl
mov
ret
movsl
dec
test
jb
mov
pushf
dec
cmp
test
sbb
decb
repz
adc
es
popa
cmp
jo
xor
test
mov
push
sub
adc
clc
mov
mov
cltd
xchg
add
xchg
or
mov
push
ss
xlat
adcb
inc
into
inc
adc
cmpsb
inc
mov
imul
in
pop
jo
cs
sbb
sbb
in
aas
mov
mov
or
cwtl
bound
bnd
jns
fdivrs
jb
push
leave
xchg
ss
dec
mov
mov
push
mov
xor
xor
push
jecxz
sub
mull
shl
popf
dec
or
xchg
icebp
mov
mov
aam
or
fcomps
rcll
pop
pop
ss
xor
adc
aam
and
add
icebp
cmc
push
push
adcb
repz
shl
scas
push
into
mov
pop
movsl
pop
fs
ret
jmp
iret
add
cmpsl
mov
scas
mov
or
pop
mov
xchg
iret
cwtl
mov
adc
mov
loop
sarb
mov
adc
pop
lods
inc
pop
adc
aaa
bound
adcl
pop
lahf
inc
jo
inc
fwait
cmp
call
inc
lret
adc
add
jge
insb
mov
add
orb
xchg
push
fsin
movsl
and
sbb
lock
and
adc
mov
ljmp
mov
push
xor
mov
inc
scas
jle
pop
out
jl
out
mov
mov
inc
or
jo
test
stos
loope
cmp
mov
lds
rep
mov
jg
jge
mov
cmp
daa
push
mov
je
mov
mov
out
jno
push
push
push
enter
adc
jb
or
loopne
mov
ret
nop
mov
sub
sbb
cmpsl
add
cmp
push
out
adc
ja
aam
aad
sub
mov
add
hlt
mov
push
call
jne
push
scas
lock
cmp
lods
push
cmp
sbb
clc
in
fidivrl
sbb
ret
sub
mov
fdivs
icebp
xchg
out
popf
js
repnz
ret
fimuls
mov
jb
mov
xchg
in
pop
adc
ja
sub
aad
ret
pop
jae
mov
push
xor
sahf
pop
shrb
stos
repz
cmp
sbb
cmp
and
int3
imul
sub
dec
lahf
ficoml
movsb
xor
xchg
stos
popf
or
mov
aad
in
mov
pop
push
and
cmp
ljmp
adc
mov
into
xchg
jo
jp
mov
popf
out
dec
mov
jmp
sarb
in
mov
push
xor
sbb
adc
clc
icebp
jg
sbb
arpl
mov
jne
cli
mov
les
imul
mov
xchg
adc
pop
insl
pop
push
push
dec
sub
mov
mov
clc
int
dec
dec
jno
dec
mov
sbb
push
push
imul
sub
cli
and
push
mov
xor
jae
cmp
fcomps
add
clc
pop
mov
enter
ljmp
in
cmpb
push
int
incl
pop
enter
mov
mov
aad
jno
dec
cs
dec
or
inc
inc
add
mov
adc
dec
xor
cs
pop
lcall
cmp
das
jl
stos
ja
add
daa
xchg
rcrb
push
inc
add
dec
pop
shrb
lret
push
out
lock
lahf
jp
cmp
mov
leave
out
inc
add
mov
jo
mov
sbb
mov
pop
das
xchg
jns
lds
xchg
clc
in
cwtl
int3
imul
lds
or
je
sub
cmpsl
pop
ret
mov
inc
cmp
push
test
clc
mov
or
loop
orb
adc
aaa
pop
stos
inc
movsl
lds
ds
ds
dec
arpl
jge
cmp
dec
pop
sbb
ljmp
shll
push
out
mov
negl
jle
aas
inc
mov
push
pop
jge
xor
orb
xchg
mov
xor
sub
call
or
add
fnstsw
sbb
ja
pop
out
mov
sub
add
add
pop
ja
jbe
stos
int
aad
xchg
xor
mov
popf
sub
sbb
outsl
popf
icebp
les
imul
jns
dec
push
push
sub
jnp
dec
pop
cmpsl
inc
add
repz
mov
and
rcrl
pop
cltd
jmp
fiadds
xor
push
xchg
lods
cmp
mov
and
and
or
push
cmpsb
add
and
push
pop
leave
fists
and
mov
pop
cwtl
pop
jmp
adc
ss
sub
mov
imul
shlb
call
push
push
pop
repnz
push
std
mov
je
in
scas
cli
jmp
pushf
jp
xor
xchg
mov
adc
or
outsl
das
cltd
cmpb
pop
add
pop
mov
cmp
into
outsb
ret
or
push
mov
rclb
dec
bound
add
mov
gs
mov
std
adc
loope
push
mov
mov
imul
out
ret
lfs
push
js
inc
cwtl
jae
adc
loop
hlt
lret
cmp
push
int3
shrb
dec
and
lahf
xor
scas
mov
fstl
fwait
lock
cld
push
mov
xor
add
jge
jle
repnz
sub
pop
fxch
hlt
xchg
xchg
sub
jle
mov
shl
push
scas
fisubrs
jp
fadds
aad
sub
sti
imul
sbb
gs
xchg
insb
dec
push
and
and
sbb
jnp
or
jb
add
in
repz
pop
jp
push
idiv
mov
cli
hlt
out
mov
push
inc
mov
inc
scas
xchg
push
pop
sbb
push
dec
and
out
int3
jmp
insl
negl
pop
movsl
popf
jle
inc
stos
inc
mov
adc
pop
xchg
lods
stc
fcompl
rcll
mov
pop
call
aaa
jo
mov
and
dec
sub
data16
xchg
sti
fucom
pop
bswap
inc
xchg
jp
cmp
mov
aam
loopne
paddusw
pop
sub
int
scas
xor
out
mov
mov
arpl
adc
subb
stos
add
icebp
das
decl
mov
mov
outsb
lahf
sub
inc
pop
xor
lock
xor
imul
add
ja
enter
test
push
cwtl
scas
subl
add
sub
inc
sahf
push
xor
outsb
inc
jo
jo
int
mov
sub
xorl
dec
scas
iret
hlt
sti
movsl
inc
and
inc
cmp
popf
into
nop
pop
addr16
movsl
leave
je
dec
hlt
jo
inc
mov
xor
iret
cmp
inc
imul
adc
stos
jecxz
xor
jbe
push
mov
add
xchg
in
xor
es
mov
and
and
dec
nop
mov
mov
push
or
push
fldenv
sub
icebp
sub
mov
inc
push
inc
mov
lock
add
pop
mov
sub
xchg
dec
jae
mov
lods
mov
mov
ficompl
jge
mov
mov
jae
xchg
pusha
lock
cmp
jns
mov
test
sahf
enter
js
std
aaa
shrb
roll
popf
pusha
arpl
aas
sbb
inc
pop
int
hlt
cltd
mov
push
lock
ljmp
fs
lret
dec
test
outsl
je
or
int3
test
xchg
mov
dec
push
and
sub
sbb
push
pusha
jbe
dec
ljmp
pop
lret
and
fdiv
je
movsb
pop
cltd
jp
lret
pop
add
jb
imul
daa
insb
in
jge
mov
mov
mov
or
xchg
inc
mov
rcll
cmpsb
xchg
lcall
movsb
incl
scas
dec
int
jno
mov
fs
testb
movl
push
dec
jae
and
or
aad
in
add
mov
mov
rcrb
ljmp
inc
adc
xchg
jne
popl
fnstsw
aad
add
adcb
iret
and
adcl
xor
imul
fmull
fdivs
leave
aaa
mov
mov
or
xlat
mov
hlt
iret
rcrb
push
cmp
dec
and
mov
mov
ss
ljmp
ss
daa
cld
push
jb
ds
arpl
adc
mov
dec
fsubp
push
inc
inc
or
and
mov
mov
mov
adc
cmpsb
nop
popf
in
dec
leave
mov
cld
xor
lret
pop
sbb
call
and
into
xor
cmp
es
out
cmp
xor
mov
add
incb
cli
nop
bound
push
lock
xor
ret
cmp
xchg
ljmp
inc
movsb
lock
jnp
orb
and
push
loope
sub
inc
outsb
les
lods
daa
or
dec
lock
or
jns
push
inc
push
add
addr16
mov
mov
sub
cmpl
outsb
mov
sub
fisubrl
leave
test
push
push
xchg
or
out
rorb
mov
xor
pusha
cmp
adc
stos
cmp
or
mov
inc
in
push
jns
dec
lods
rorb
mov
push
enter
enter
pop
dec
mov
sti
loope
pop
push
inc
adcl
fwait
imul
inc
cld
ret
pop
mov
mov
daa
inc
shll
scas
stos
sbb
sub
das
mov
scas
icebp
out
adcl
add
add
xor
loopne
loop
popa
xchg
sti
mov
pop
jbe
fistpl
dec
push
jo
pop
and
scas
popf
jge
ja
xchg
or
cmp
cmp
inc
arpl
aad
fadd
cmp
call
pop
dec
lods
jno
fidivs
push
movsl
mov
inc
mov
push
pop
sub
add
pop
mov
jl
testb
mov
into
out
mov
xchg
sbb
jmp
jmp
jae
fcom
movsb
fcomps
cmp
inc
stc
lds
mov
in
push
std
cmpsb
adcl
in
cmp
cmpsb
loop
push
js
xlat
sbb
es
pop
mov
or
add
mov
mov
js
sti
insb
int
movsb
add
jbe
les
iret
dec
pusha
fucomp
cltd
sbb
movsb
adc
cmp
mov
scas
fucomi
jecxz
jle
and
mov
push
je
stos
or
cmpsl
insl
lods
shll
fcoml
cld
rolb
das
inc
jle
or
mov
adc
pop
fwait
movntq
pop
or
aaa
inc
sbbl
lods
and
mov
in
loopne
cmp
cli
mov
cld
mov
or
int
ret
popl
pushf
std
mov
xchg
lcall
push
rclb
mov
orl
xchg
test
lods
sub
xchg
push
cli
adc
mov
jb
and
pop
or
out
fdivl
mov
inc
xchg
pushf
jg
push
nop
pop
or
cmc
bound
adc
cs
push
hlt
pop
nop
dec
fs
push
jo
leave
pop
ja
mov
jns
or
push
sub
test
nop
in
ljmp
imul
adc
stos
push
jne
pop
leave
popa
aaa
sub
sub
xlat
xchg
lret
inc
add
and
mov
rcr
repz
mov
stc
mov
shrl
xchg
ds
inc
fwait
pop
or
shlb
es
inc
jbe
shrb
push
sub
enter
push
or
jo
addr16
repz
hlt
adc
xchg
push
xchg
push
lds
xchg
jbe
pop
sarb
jmp
test
ficoml
rorl
repz
fldt
inc
mov
cmp
addr16
jno
stc
lahf
push
mov
jbe
rcrl
aas
adc
lea
sbb
popa
lods
xor
jo
push
add
and
xor
xchg
ret
mov
sub
aad
test
mov
add
and
das
push
add
int3
push
notb
mov
lock
xchg
or
cwtl
dec
and
mov
and
inc
mov
add
sub
sbb
xchg
xor
mov
sbb
push
or
sbb
jno
xchg
or
loopne
popf
stos
je
lea
popf
fcoms
or
into
repz
mov
movsl
mov
subb
push
xor
ret
push
pushf
cmpsl
mov
add
in
xlat
adc
and
test
push
sub
gs
stc
push
int3
mov
cwtl
push
shlb
xor
cmpsb
mov
push
pop
sbb
jbe
pushf
insl
fs
or
mov
fcmovbe
adc
hlt
sbb
xchg
xor
lds
ss
lcall
push
lret
shll
push
and
int3
in
incb
hlt
push
divb
call
ficoms
push
cmpl
cmp
enter
aam
mov
dec
in
add
pop
or
jmp
mov
int
outsb
pop
aas
std
scas
sbb
lret
dec
or
enter
mov
mov
and
subl
inc
dec
frstor
pop
inc
jae
jo
in
cwtl
iret
lcall
fstps
cmp
lret
stc
cmpsb
mov
lock
pop
movsb
add
push
and
jl
ret
inc
xor
fs
jbe
ret
clc
jo
or
fs
fistpl
mov
mov
push
es
ds
and
cmp
scas
cmc
inc
mov
and
push
test
hlt
cmp
mov
js
mov
inc
xor
push
aas
pop
shlb
fs
cltd
and
pusha
mov
imulb
lahf
cld
mov
fucomi
or
and
add
setns
in
mov
ds
xchg
xchg
in
es
inc
xchg
inc
aas
mov
stos
jo
mov
mov
repz
adc
push
js
xchg
push
mov
cmp
mov
hlt
mov
mov
or
fsubl
int
out
andb
mov
int
out
rolb
push
sub
test
push
add
push
dec
cs
jge
arpl
ljmp
sbb
jle
sub
lds
ret
lret
hlt
adc
inc
insl
jns
push
and
test
lods
mov
jno
sub
sbb
mov
dec
jecxz
in
jmp
test
movsl
and
mov
imul
pop
add
into
push
jge
xor
aad
jbe
test
mov
xor
push
xorb
dec
mov
fadd
dec
cwtl
adc
cmp
jge
add
stos
push
in
lret
pop
sub
sti
or
lret
es
cmp
jb
xchg
test
push
xchg
insl
lock
mov
lods
rorl
xchg
inc
push
xchg
cwtl
aam
add
jnp
ja
mov
push
nop
mov
cmp
xchg
pop
mov
enter
lcall
sub
movsb
add
lret
push
inc
lahf
mov
sbb
andb
out
sahf
dec
loope
cmp
es
mov
popl
push
outsb
inc
jnp
addr16
rolb
mov
leave
cmpsb
popf
add
mov
sahf
aaa
xor
pop
mov
ret
mov
movsb
shll
loope
fisubl
push
and
cmp
mov
xchg
xchg
jp
push
pusha
cli
jnp
in
cmp
add
and
xor
pop
mov
std
clc
cmc
les
adc
pop
loop
in
ss
add
push
inc
push
mov
inc
inc
adc
in
push
jp
mov
pop
cwtl
xor
inc
in
int
adc
and
lds
lock
sub
gs
pop
aas
mov
push
mov
std
cli
xlat
cltd
lods
stos
add
dec
adc
aas
or
and
daa
mov
dec
lret
mov
adc
in
pop
bnd
push
sti
ret
mov
jmp
mov
outsb
inc
jb
pop
xchg
addr16
rcll
sub
or
cmp
testb
sahf
movsb
scas
dec
fnsave
imul
gs
test
lods
adc
scas
test
lret
jno
dec
std
cwtl
prefetchnta
xchg
xchg
enter
in
or
arpl
stos
test
stc
mov
jmp
pop
jb
repz
add
pop
movsl
jmp
push
push
cmc
sbb
leave
xor
dec
inc
test
cmc
sahf
adc
sti
nop
mov
mov
ds
and
loope
imul
sbb
sbb
mov
dec
movsb
outsb
jo
lea
shlb
loope
pushf
or
inc
xchg
test
incb
subl
popf
movsb
xchg
mov
xchg
xchg
mov
jp
add
fistpll
cmp
jnp
jae
mov
arpl
ret
mov
mov
push
popf
stos
imul
dec
test
aad
mov
dec
in
cmc
call
cltd
mov
mov
mov
lea
xchg
shr
pop
or
xchg
and
push
and
sarb
xor
and
out
iret
inc
or
cmpsb
out
xchg
xor
fs
addb
mov
fld
jg
imul
out
sbb
mov
add
popf
lea
add
bound
jnp
adc
test
or
mov
in
pop
popf
cmc
popa
mov
aas
push
fstps
call
sub
push
pusha
xor
dec
jne
rolb
loop
shl
ficompl
and
loopne
push
mov
popa
lods
cli
push
test
test
cli
fsubp
lret
lret
movsb
mov
imul
insb
and
sub
je
adc
mov
push
ljmp
ss
test
pop
fistpll
add
fisttpll
push
add
mov
mov
jg
int
mov
popa
fwait
cwtl
add
test
lcall
push
shrl
lea
mov
movl
push
and
icebp
outsl
sub
in
out
push
jle
in
lods
int3
xchg
add
adc
mov
aas
jl
aam
loope
ljmp
sbb
pop
fpatan
sarl
repz
sbb
jg
push
ljmp
ljmp
outsl
xlat
sbb
je
add
fdivs
in
les
ja
pop
arpl
push
gs
lret
andl
push
test
dec
call
inc
pusha
repz
sub
jne
mov
fsts
int
ror
adc
push
jl
adc
subl
xor
jnp
icebp
jnp
ret
dec
ljmp
arpl
adc
mov
repnz
inc
scas
pop
lret
xor
mov
gs
dec
jns
xor
or
shll
aaa
sub
jno
leave
rol
fisttpl
cltd
pushf
loopne
lock
mov
addr16
mov
sub
pushf
inc
or
push
push
sub
test
mov
dec
loopne
jnp
or
jge
sub
shlb
popa
pop
add
enter
xchg
enter
pop
subl
mov
scas
xchg
loope
sbb
push
fs
pop
ret
leave
jnp
xor
jmp
mov
push
cmp
orb
jg
mov
leave
aaa
add
dec
jae
xorl
push
mov
das
jno
test
mov
aas
and
jge
sbb
dec
lods
add
inc
xor
xchg
or
mov
dec
and
stos
test
incb
xchg
ror
xchg
fs
idivl
mov
cwtl
ss
pop
push
xchg
pop
adc
pop
push
mov
adc
pusha
outsl
adc
jge
jl
jp
inc
cmpsl
repnz
jae
or
dec
mov
push
imulb
mov
xchg
sub
sbb
xchg
sub
movsb
cmc
and
das
mov
mov
xor
scas
popf
cltd
out
loop
repnz
cld
xchg
stos
icebp
add
push
cmpsl
enter
jmp
sbb
mov
xor
out
lds
add
xchg
xchg
dec
sarl
mov
mov
mov
int3
outsl
add
ret
fisttpll
sub
push
add
movsb
sbbl
push
mov
shll
or
loopne
out
inc
mov
lds
mov
add
xor
add
xor
fstl
mov
xchg
add
in
iret
stos
push
sbb
push
or
sbb
out
and
mov
mov
ret
sub
outsl
decb
dec
fs
fisubrs
push
xor
add
fstps
mov
pop
or
adc
add
sahf
sub
ljmp
xchg
lret
or
or
pop
pop
int
dec
loop
mov
inc
arpl
lea
sbb
js
sub
je
jg
sbb
std
sbb
imul
dec
adc
jecxz
adc
rorl
repz
popa
idivl
pop
lahf
enter
ja
inc
sub
dec
lahf
ljmp
in
ljmp
adc
popf
hlt
cli
cmp
mov
ss
jo
push
jecxz
dec
sub
pop
push
sbb
pop
add
dec
jne
mov
dec
andb
inc
jmp
fmul
sub
sub
pop
decb
push
dec
adc
aaa
xchg
push
push
ja
aam
cmpsb
je
test
in
lea
insl
call
movsl
ljmp
dec
jno
mov
mov
mov
lods
fcmovne
push
jmp
sub
scas
pushf
jnp
movsl
rcrl
and
lds
shll
xor
push
mov
push
sbbl
aam
cmpsb
inc
lcall
mov
sarb
popa
jmp
jl
lcall
inc
pop
movq
in
inc
or
push
or
mov
sbb
add
jge
stos
push
sub
sbb
and
sbb
xlat
ret
aas
pop
pushf
jne
aaa
push
ret
jae
pop
int3
push
stc
jg
out
push
cwtl
sub
add
cmpsb
in
sub
in
push
rclb
ret
mov
xor
aaa
stc
jecxz
xor
js
jmp
push
dec
mov
push
nop
sbb
ljmp
adc
mov
jl
into
dec
adc
mov
int3
jle
test
lret
mov
sub
in
sbb
jae
mov
jp
insb
loopne
into
xchg
test
mov
lock
les
add
cmc
jle
aad
adc
ja
notl
or
push
add
mov
push
aad
push
aad
sti
cltd
lods
inc
mov
cmp
mov
adc
loopne
mov
cmp
mov
push
movsb
dec
rol
pop
mov
sub
sti
cs
pop
xchg
pop
minps
test
pop
subb
test
andb
dec
stos
aas
adc
loope
gs
and
out
mov
inc
out
mov
aad
imul
xor
mov
and
and
lcall
arpl
mov
mov
cmp
clc
xchg
xor
clc
pop
aam
xchg
adc
loop
loop
sub
ret
and
les
jle
jb
cwtl
cmp
mov
jmp
neg
sbb
and
push
out
mov
std
push
adc
js
and
jae
int3
sub
orb
mov
push
int
movups
jns
les
add
lcall
nop
xor
dec
jbe
mov
jg
fcmovnbe
mov
clc
stos
mov
sbb
push
mov
adc
dec
inc
xor
pusha
addr16
jnp
sub
mov
leave
icebp
mov
stos
stos
sbb
xor
inc
in
rcrb
jbe
jno
pop
mov
sbb
and
xchg
and
rorb
scas
lahf
add
mov
mov
cmp
in
pop
jbe
bound
testb
fisubrl
xor
dec
mov
pop
popa
xor
fmulp
mov
add
mov
mov
pusha
pushf
adc
jbe
pop
push
test
cs
ret
imul
dec
loopne
ljmp
flds
inc
enter
mov
jecxz
int3
cmpw
enter
jb
cmp
mov
sti
inc
imul
sub
inc
dec
into
sbb
jmp
fcom
pop
insl
repnz
cmpsl
sarb
out
pop
repz
push
sub
fldl2e
clc
sarl
push
and
xchg
pushf
iret
mov
jmp
dec
lods
push
leave
inc
in
add
outsb
fldenv
sbb
mov
adc
imul
mov
sub
and
inc
xchg
push
pusha
pop
mov
lods
jbe
xchg
adc
outsb
sub
aad
jb
or
popf
lcall
in
lahf
adc
mov
in
icebp
call
into
sub
outsl
mov
pop
and
dec
or
sub
es
jl
push
out
lds
pop
popa
inc
cli
sub
cmp
pop
aaa
jecxz
test
ss
add
inc
cmp
pop
sub
jg
mov
or
loopne
mov
out
test
pop
stos
and
shrl
sbb
pop
xlat
jnp
test
sbb
addr16
sbb
cs
arpl
pop
sbb
insb
xor
movsl
pslld
cld
je
cmp
dec
mov
push
mov
std
cmp
addr16
dec
cmp
mov
movsb
jge
cmp
add
pusha
mov
mov
pop
xchg
cmpsl
mov
ja
inc
popf
inc
enter
adc
adc
xchg
adc
add
adc
push
fidivl
mov
xor
insl
dec
pop
xchg
mov
cmp
mov
sub
cmp
jle
je
orb
loope
pusha
dec
adc
test
pop
lret
rcrb
dec
std
and
loopne
shll
cmpsl
insb
cmp
ja
loopne
fwait
lea
gs
sbb
cli
fidivrl
andb
dec
push
mov
pop
idivl
push
daa
js
pop
mov
inc
and
sub
outsl
add
adc
cs
mov
loope
sub
cli
mov
sub
cmpsl
subl
cmc
sbb
pushf
or
nop
js
pop
cmp
test
cmp
dec
sbb
pop
out
mov
scas
aas
cltd
pop
notl
mov
sub
cmpsl
inc
fistpll
lret
loop
aas
xor
adc
jp
mov
push
in
insl
lret
sbb
mov
jmp
test
lock
inc
add
xchg
imul
cltd
ljmp
and
clc
or
fimuls
lret
add
ljmp
mov
ljmp
mov
inc
mov
mov
insb
jmp
push
push
xchg
pop
jo
std
int3
test
jge
or
pop
push
ret
xchg
or
mov
sbbl
adc
xlat
mov
popa
push
adc
repz
repnz
ds
lret
outsb
mov
hlt
nop
sub
fs
pop
loope
add
incl
ret
fwait
leave
add
ret
outsl
push
add
cmp
fwait
lahf
or
push
mov
push
lcall
popa
jmp
jb
pop
aam
xor
aas
int
mov
add
inc
ret
lea
mov
push
sbb
cmp
add
frstor
icebp
aaa
insb
cmp
jne
pushf
outsl
inc
pusha
dec
pushf
jmp
mov
into
jecxz
xor
xchg
xchg
push
mov
lret
jne
push
jae
fs
popa
cli
push
xor
push
add
mov
mov
gs
outsb
dec
int
dec
sbb
gs
call
test
lcall
in
xchg
xchg
dec
mov
adc
dec
fnstsw
and
mov
sub
mov
ret
cmpsb
lods
push
mov
decb
mov
jmp
dec
insb
icebp
aad
adc
dec
xchg
iret
pop
repz
mov
jmp
nop
lea
xchg
mov
fistpll
or
cltd
add
cmpl
push
add
jbe
sahf
jmp
cmpsl
xchg
xor
xchg
fnsave
lock
jecxz
push
mov
cmp
mov
xchg
jnp
flds
xorl
add
cmp
sub
stc
into
shll
push
cmc
jno
arpl
je
xor
cli
fwait
pushl
rorl
xor
outsl
fstpl
fxam
addr16
fists
xchg
mov
add
adc
xor
xor
xchg
popf
aas
nop
repnz
mov
and
mov
mov
mov
and
and
xor
int
mov
enter
rcrl
xor
icebp
adc
dec
lcall
imul
mov
dec
loop
je
pusha
fcom
dec
in
pop
dec
lods
js
divl
and
cld
xor
push
sub
fisttpll
sub
dec
out
je
sarl
xchg
adc
out
push
lcall
adc
insl
or
mov
adc
sbb
lods
mov
and
lret
add
scas
cmpsb
jne
and
out
push
dec
push
sub
adc
push
icebp
adc
inc
inc
repz
call
je
lock
jnp
je
jl
loope
push
sub
xor
xchg
mov
out
pop
jb
and
cmp
fdivs
jl
pushf
cltd
not
pop
jno
and
mov
popf
sarb
outsb
push
xchg
call
dec
clc
in
push
jnp
add
fmull
lahf
cmp
pusha
jbe
jnp
push
add
outsl
cmp
out
int
mov
lods
mov
in
pop
fs
int
rolb
pop
inc
xor
jo
cmp
pop
push
cmp
mov
dec
inc
fidivl
adc
jmp
xchg
aas
pop
jbe
inc
int
and
gs
std
lea
cld
outsl
cmc
sub
sub
cmp
jecxz
leave
cs
xchg
pusha
pop
add
mov
and
sub
lods
jmp
mov
push
and
movsl
call
cli
mov
or
loope
mov
scas
mov
adc
int3
scas
xchg
dec
xor
aad
pop
dec
sub
jae
xchg
imul
inc
das
iret
mov
sub
mov
push
add
into
pop
mov
xchg
dec
lds
stc
pop
jne
jmp
push
in
mov
push
es
push
adc
push
xor
bound
fsubrl
xchg
sbb
jle
add
sub
push
push
sub
add
and
aas
mov
stc
xlat
cmp
mov
xorb
inc
and
pop
or
idivb
sbb
dec
and
outsb
push
mov
xchg
sbb
fisttpll
jnp
cmp
unpcklps
hlt
sbb
pop
movsb
and
fstps
jge
das
mov
lds
loop
rol
test
sub
insb
mov
ret
jb,pt
push
xchg
and
jns
fdivrs
ljmp
mov
call
rcr
jb
sub
ja
bound
xorb
sub
ljmp
pop
ja
mov
std
rolb
xor
jns
sub
ret
jle
fcompl
pop
addr16
push
and
dec
sub
in
loop
pop
push
ficoml
mov
jge
ja
sbb
xchg
psubusw
enter
fmuls
movsl
mov
mov
jo
cwtl
adcb
mov
cmc
test
adc
sub
mov
mov
subl
push
pop
cmc
cwtl
push
repz
or
nop
inc
daa
test
jmp
out
jae,pn
mov
and
es
mov
push
jnp
dec
not
push
cmp
cmp
mov
stos
push
repnz
add
dec
je
mov
jle
or
or
dec
inc
stos
push
enter
flds
jg
jmp
xor
pop
pushf
fwait
pop
fdivs
dec
xchg
insb
or
pop
add
inc
sub
xor
aas
insb
insl
ja
jb
flds
repnz
add
and
push
ffreep
jp
cmp
inc
add
fiadds
cs
cmp
jge
inc
add
inc
add
movsb
or
cld
imul
adcl
mov
cld
lahf
and
sbb
test
jo
sahf
sbb
sti
sub
in
int
add
xchg
std
fwait
aam
mov
jno
mov
mov
mov
std
or
leave
addl
jp
pop
inc
jb
pop
ss
ss
bound
pop
loopne
stc
js
cltd
shlb
and
scas
ret
ret
test
push
andl
xchg
sub
inc
dec
rcrl
inc
mov
push
fs
js
ror
std
mov
cmc
int
dec
cmp
push
push
imul
fld
lret
shll
adc
nop
js
cmp
add
add
add
sbb
push
cmpsl
cli
mov
call
aas
fsubs
pop
out
push
and
mov
jno
popa
jb
sub
test
add
insb
sub
inc
pop
xchg
test
adc
movb
js
add
adc
add
pop
xor
push
inc
das
sbb
add
or
push
movsl
cmp
and
fstpt
fistpl
dec
leave
cli
ffreep
aam
jp
mov
mov
sub
int3
xchg
popf
cwtl
std
jl
add
fdivr
fstl
stos
mov
mov
xor
scas
or
hlt
xlat
cmpsl
enter
and
inc
xchg
adc
iret
mov
and
push
pop
in
call
or
sub
xchg
pushf
data16
xor
bound
inc
sbb
mov
mov
sub
in
jecxz
and
stos
mov
stos
iret
les
jo
xor
sub
in
xchg
pop
cmp
push
sbb
addb
sbb
ficompl
inc
repz
dec
ret
jecxz
cmp
mov
xchg
sarb
addr16
out
push
leave
sbb
fldenv
jb
lea
leave
mov
inc
lcall
mov
mov
mov
jns
and
es
inc
push
pop
aaa
call
jne
mov
hlt
in
inc
dec
out
add
xor
jg
pop
mov
inc
arpl
lock
or
mov
pusha
jae
addr16
sub
jp
xchg
shrb
xchg
xchg
sbb
cltd
stc
popa
test
pushf
jo
xchg
dec
sahf
ss
iret
cmpsl
push
les
inc
mov
int3
inc
cmp
pop
pop
xchg
push
mov
xchg
out
cmp
mov
add
push
aas
mov
or
in
mov
inc
sub
shll
xchg
adc
cld
jg
sbb
loopne
popf
push
dec
stc
xchg
dec
fs
or
cmp
call
in
xor
jge
adc
repz
stos
jl
pop
dec
leave
jns
fnop
inc
loopne
std
mov
aaa
add
mov
xor
jmp
mov
xchg
fdivrl
stc
pushl
movsb
in
push
out
push
das
icebp
cmp
shll
loope
aas
xchg
bound
test
lahf
daa
and
jmp
dec
lea
leave
jmp
lea
fisttpll
cmc
xchg
in
push
lahf
xor
icebp
xchg
sti
and
push
inc
scas
out
dec
enter
mov
adcl
aam
sub
fstpt
cmp
out
pop
sbb
sbb
dec
inc
or
hlt
outsl
fidivs
dec
pop
push
ljmp
mov
fsubs
push
mov
add
lcall
dec
repnz
mov
nop
lods
and
ss
add
mov
popa
xchg
arpl
jl
cmpsl
into
call
or
inc
ljmp
xchg
mov
imul
jge
pop
jae
pushf
lret
add
fisubs
push
aas
push
sub
sbb
pop
repnz
xchg
xor
fs
or
sub
fucomi
or
mov
mov
pop
dec
cmc
pop
outsb
lcall
iret
fnstenv
xor
fiaddl
nop
lret
in
mov
loope
and
js
aaa
out
out
or
dec
aam
into
push
jbe
add
shlb
sub
mov
dec
mov
out
cld
sub
aas
pop
mov
dec
adc
dec
mov
adc
mov
pop
and
inc
movsb
pop
dec
lods
ds
stc
push
jne
mov
push
jno
xchg
in
std
lcall
sub
movsb
in
test
aas
add
inc
xchg
xchg
ljmp
icebp
fs
add
sub
jb
or
add
test
mov
xor
pop
dec
or
pop
mov
icebp
sub
ficomps
imul
sbb
inc
xchg
add
loope
mov
out
aam
add
xchg
mov
test
sti
dec
mov
cmp
loopne
mov
push
mov
out
subl
int
repz
push
cmp
int3
popa
pop
test
mov
add
psubw
int
push
pop
cmpsb
sti
jp
push
xchg
push
cmp
mul
jno
push
dec
dec
cmpsl
sub
xor
bound
pop
sbb
lea
addl
push
adc
cmp
or
and
push
call
mov
cmp
dec
loope
fmulp
xor
mov
je
sub
mov
pop
test
repz
and
pop
jl
pop
push
das
clc
mov
inc
sahf
xchg
jmp
out
inc
or
ljmp
rcl
push
pop
lret
mov
nopl
and
neg
out
fwait
mov
ljmp
jge
jge
push
or
pop
sub
into
jae
scas
ffree
jae
rorb
test
xlat
sahf
into
rep
stos
ss
les
jne
lret
mov
xor
sbb
bound
je
aad
jle
and
sub
sbb
or
repz
ret
sbb
pushf
or
jmp
test
xor
test
andl
dec
rolb
daa
out
popf
pop
mov
loop
test
cmp
mov
adc
divb
sbb
add
push
xor
mov
out
mov
dec
pop
inc
sbb
mov
cmc
aam
test
cmp
lods
pop
jl
in
cmp
jp
mov
push
scas
out
inc
divl
test
xchg
adc
cld
jmp
pop
sbb
hlt
bound
mov
nop
dec
scas
add
popl
ret
in
xchg
mov
xchg
jge
insl
xor
mov
imul
and
fildll
lret
arpl
jmp
lahf
adc
cmp
mov
es
test
cmc
jecxz
push
xchg
mov
cmp
les
repz
inc
add
mov
xchg
test
cld
loop
xor
xlat
das
jno
movsl
push
pop
out
mov
stc
or
fstps
xor
inc
or
test
cmp
adc
scas
xor
mov
test
or
jl
cmpsb
loopne
rclb
sub
push
and
xchg
mov
aaa
and
mov
into
dec
call
and
roll
addr16
stos
push
xchg
jns
xchg
xor
adc
mov
jg
bound
cs
stc
into
jae
shlb
lcall
test
call
xor
jbe
xchg
cmc
pushf
mov
int
imul
and
lcall
int
repnz
lcall
add
aam
sahf
repz
inc
ret
push
mov
push
dec
xchg
sti
push
cmp
leave
mov
mov
pop
jp
sub
mov
add
pop
nop
test
int
pop
sbb
mov
ja
and
inc
cmp
push
dec
daa
call
mov
cmc
pop
jmp
test
fimuls
out
stos
add
out
inc
insb
xchg
sbb
stos
mov
jp,pn
dec
add
lahf
push
mov
fisubl
jmp
cli
in
nop
push
outsb
fisubrl
mov
mov
jl
and
call
pop
insb
xchg
cmp
mov
sbb
lock
inc
cmp
test
ret
stos
jne
inc
mov
sub
insb
mov
jbe
sbb
btr
in
mov
lcall
push
je
dec
cmp
and
movsb
mulb
int
xchg
xor
sub
sbb
and
and
fucomi
jecxz
add
test
bound
jg
mov
or
js
not
imul
ret
fiaddl
int
repnz
arpl
fnstsw
xchg
cli
jo
sarl
test
and
out
flds
das
jge
out
addb
imul
lock
dec
jbe
or
sbb
in
mov
mov
stos
cmp
lret
mov
or
mov
sub
or
add
int
mov
scas
mov
cmc
push
jae
repnz
adc
sub
sbb
hlt
jecxz
mov
jo
ljmp
call
add
sahf
inc
and
in
or
adc
popa
push
inc
fs
lock
fcompl
and
outsb
cmpsb
imul
insl
imul
enter
mov
sbb
xor
jl,pt
cmp
add
jbe
push
jo
not
xchg
test
xchg
lret
or
bound
xor
leave
jnp
push
and
and
stos
scas
cmp
xchg
cltd
das
jmp
jp
stos
loope
mov
cmp
xchg
testb
adc
sbb
hlt
fdivrp
or
sbb
out
in
movntq
out
cwtl
cwtl
pop
push
dec
dec
clc
scas
in
orl
popf
lahf
inc
je
imul
cmpsl
mov
jp
add
out
sub
mov
mov
mov
icebp
xor
cltd
dec
xor
add
sbb
push
aas
xor
call
mov
repnz
push
movb
or
push
xchg
mov
daa
lock
popa
adc
repnz
ljmp
sub
das
shlb
mov
lods
popa
sbb
lds
scas
push
clc
add
and
mov
xchg
add
mov
xor
mov
and
loope
shlb
xchg
sub
adc
scas
in
mov
adc
ss
and
in
lret
cmp
push
test
sub
pop
in
jp
mov
cmpsb
jmp
xchg
pop
jae
jno
jmp
inc
xor
push
mov
int
add
fldl
and
mov
negl
mov
decb
out
loope
pop
aad
add
mov
cmpsl
jnp
aam
stos
in
cmp
inc
ljmp
in
push
fcmovnu
lret
dec
jns
in
inc
mov
push
and
mov
mov
ljmp
pushf
ret
ret
fmulp
fsubl
mov
lock
leave
and
cmp
adc
mov
es
aam
mov
xor
stc
mov
mov
imul
mov
sarb
jg
sub
mov
jae
scas
mov
and
dec
ffree
pop
aaa
les
sahf
mov
ljmp
sub
and
je
or
push
adc
test
jecxz
scas
jecxz
add
pusha
ret
or
adc
cld
dec
rcll
jmp
dec
pop
or
or
xchg
shrb
pop
push
jg
in
rorl
jl
inc
lret
out
adc
jmp
ljmp
ret
adc
inc
fldt
insl
sarl
pop
jmp
and
cs
sti
and
adc
iret
aaa
ds
cmp
adc
adc
dec
adc
xchg
sbb
jbe
jge
pop
clc
xor
not
imull
cwtl
rol
pop
fisubs
add
cmp
pop
adc
jmp
push
mov
and
in
or
pushf
and
adc
into
pushl
imul
movsl
nop
test
mov
push
stos
out
pop
push
fbld
pop
lock
pop
mov
xor
movsb
add
xchg
out
add
sti
or
in
xor
pop
push
data16
adc
outsb
movsb
jbe
pop
cmc
pusha
mov
aam
ja
xor
xor
insl
fxch
scas
jne
jp
lahf
insl
inc
inc
ficompl
xchg
xchg
dec
aam
push
stos
mov
mov
cmp
lds
jg
push
mov
jmp
call
inc
pop
jge
pop
dec
pop
cmp
sbb
xchg
test
aas
and
mov
ds
pop
movsb
emms
js
cmp
inc
push
fcmovnu
test
or
pop
mov
in
test
incl
addl
inc
in
in
roll
xchg
xor
pop
lcall
or
jecxz
cmpsb
add
jne
out
inc
push
xchg
cmpsl
je
cld
sub
mov
dec
cmpsl
arpl
adc
icebp
adc
mov
popf
arpl
fdivrl
call
jg
mov
and
xchg
arpl
nop
adc
adc
pop
inc
and
pop
repnz
cs
and
cltd
jge
int
jl
xorl
sbb
or
out
bound
hlt
mov
mov
push
push
cmp
inc
pushf
mov
add
outsb
and
fistl
rcll
bound
xchg
and
addr16
sub
dec
and
cmp
inc
mov
fildll
mov
arpl
pop
mov
adc
ja
and
insl
adcb
jle
aad
and
mov
mov
and
sub
incl
movsb
leave
movsl
orb
push
bound
xchg
arpl
cmp
fistps
outsb
pop
and
leave
pop
and
imul
adc
or
stos
insl
mov
int
stos
scas
mov
mov
pop
add
roll
jno
testb
dec
cmp
inc
iret
sbb
xchg
push
mov
cltd
pop
cmp
insb
mov
xor
xchg
leavew
push
frstor
loope
sbb
testl
shll
stos
call
test
out
jae
mov
lret
ret
sbb
adc
inc
dec
ret
jle
xchg
sub
das
push
imul
and
jns
inc
xchg
imul
inc
sahf
lock
xor
stc
je
xchg
notb
mov
push
les
cltd
mov
in
push
adc
ficoml
or
push
ja
mov
and
stc
scas
inc
repnz
aad
cmp
nop
mov
push
arpl
jl
xor
ret
lods
xor
and
aaa
repnz
sub
in
xor
daa
xchg
sub
test
inc
data16
dec
arpl
pusha
dec
testl
pop
sarb
je
xor
enter
xchg
out
add
data16
fwait
mov
or
rcrb
inc
mov
test
in
xor
clc
cmp
and
mov
nop
jns
aad
inc
mov
shll
aas
xor
jnp
mov
adc
addr16
mov
inc
ucomiss
adc
js
mov
fdivp
pop
sub
mov
pop
push
xchg
jnp
in
mov
inc
cli
mov
sbb
daa
sub
loop
mov
cmp
pop
mov
outsb
or
cwtl
and
mov
adc
mov
pop
jmp
inc
xchg
or
lahf
dec
cld
sti
xchg
mov
jbe
mov
ds
inc
or
cld
repz
filds
ja
loop
pop
push
out
push
orl
xlat
daa
sub
add
or
xchg
jo
cmpsl
add
and
mov
aas
clc
xor
add
cs
in
pop
enter
outsl
cmpsb
jnp
jns
ffree
mov
jle
cmp
fwait
arpl
sahf
inc
jb
xor
out
hlt
daa
mov
daa
loope
es
add
mov
pushf
fbld
push
or
cmp
fs
notl
inc
xchg
push
sub
sub
shlb
jcxz
pop
dec
arpl
lret
fnstenv
push
jne,pn
sub
sar
in
pushw
inc
sub
add
popf
cli
adc
rcrb
aaa
add
push
add
repz
pop
cmc
fimuls
aad
jp
jmp
leave
dec
stos
pop
enter
jecxz
int
int
or
movsb
inc
adc
lods
push
stos
je
pop
sbb
loopne
fistpl
push
aam
xchg
add
pop
inc
cmp
mov
movl
outsl
inc
push
test
push
push
jae
int3
inc
gs
push
sbb
xor
jmp
pop
jns
mov
fidivrs
mov
leave
sti
xor
icebp
mov
push
ja
jle
jb
out
insl
ret
fiaddl
xor
and
mov
mov
dec
sti
jae
aad
in
movsl
inc
push
notb
clc
arpl
pop
sbb
inc
adc
pop
in
sbb
push
test
xchg
insl
int3
and
hlt
test
cmp
addl
arpl
dec
or
frndint
inc
add
call
in
or
insb
pop
push
pop
inc
inc
aaa
fcomp
mov
test
sbb
mov
aad
push
fimull
mov
adc
inc
sub
ret
aad
divl
pusha
xchg
cmpsb
scas
dec
cwtl
dec
mov
loop
mov
pop
xchg
outsb
and
pop
mov
sub
xchg
dec
jnp
inc
icebp
out
popf
shlb
mov
bound
ret
dec
je
or
pop
cli
dec
sub
stos
pushf
incl
mov
dec
cwtl
jmp
sub
int
mov
icebp
imul
test
cmp
add
jne
rcll
es
ljmp
mov
test
add
shl
adc
or
sti
in
not
dec
fdivrl
or
adc
lods
stc
nop
xor
fwait
insl
sar
iret
mov
enter
add
add
xor
test
xchg
jp
lods
mov
and
and
imul
add
inc
inc
gs
adc
scas
aam
jge
xlat
add
adc
mov
jge
lcall
mov
pop
push
imul
adc
popa
fs
pop
pop
push
xchg
mov
fldcw
leave
xchg
lods
mov
iret
leave
dec
vpshaw
test
popf
aaa
jne
adc
cmp
in
ss
int3
outsl
dec
leave
sub
or
mov
or
add
jg
cli
cmc
out
jo
mov
cli
xchg
push
inc
lahf
sbb
adc
and
pop
iret
call
das
daa
xchg
and
push
jne
adc
mov
js
xlat
inc
xor
mov
clc
add
frstor
push
lahf
stos
shll
mov
push
pop
stos
ret
dec
jg
xor
int
push
adc
inc
mov
sub
xor
jg
mov
mov
and
fistps
mov
dec
pushf
pop
ror
ffree
and
mov
stc
cmp
fcoms
add
jmp
fstps
mov
and
dec
xor
lods
mov
loopne
test
dec
jecxz
push
imul
push
fldl
sbb
out
and
pushf
jbe
cmp
adc
ja
cs
adc
loopne
xor
jbe
xchg
push
push
std
inc
rcll
into
xlat
mov
fwait
imull
sbb
push
xor
pop
fimull
cltd
push
lds
and
mov
pop
int
lret
lock
cli
xchg
jge
jbe
ja
jmp
push
jg
lea
scas
imul
adcb
repz
mov
hlt
or
push
insl
lods
xorl
mov
out
xchg
add
jb
or
xor
mov
mov
or
sti
bound
and
arpl
or
xor
int3
scas
jl
push
mov
and
in
fistps
aas
rorl
lret
xor
gs
sbb
scas
cltd
test
push
call
pop
bound
fldenv
es
and
cld
inc
js
ss
lods
add
sbb
cmc
jg
lods
ds
outsb
push
or
aas
sbb
add
dec
pop
shrl
add
mov
jp
ds
loop
jmp
dec
pop
cmp
cmc
movsl
inc
and
pop
data16
out
push
and
push
and
loope
rcll
xchg
out
add
aaa
xchg
rcrl
sarl
orb
fiadds
mov
mov
imul
pop
add
pop
insl
mov
pop
cld
dec
and
push
js
xor
inc
mov
mov
mov
sar
bound
sahf
xchg
aad
nop
dec
ja
arpl
aad
inc
xor
popf
lds
jo
test
mov
xor
sub
cmpsl
rcr
mov
jp
ljmp
nop
scas
lock
push
repnz
or
dec
dec
add
and
and
inc
inc
add
push
clc
xchg
lahf
cmc
pop
sbb
pop
jmp
adc
dec
outsb
jns
stc
rcrb
push
pop
loopne
aaa
cli
fwait
xlat
fidivrl
fstpt
shl
lea
push
pop
cmp
les
std
fldt
cs
mov
jmp
es
pop
jle
mov
mov
int
sbb
mov
jl
orl
cmp
mov
mov
ret
mov
data16
scas
jnp
cs
adc
ret
int
aam
pop
jae
bnd
push
int
test
jge
xlat
ficompl
dec
inc
inc
loope
popa
popa
insb
int3
shrl
int
jg
loop
xchg
cmp
inc
in
daa
sbb
imul
sbb
push
pushf
test
mov
pusha
data16
push
inc
jp
scas
adc
push
pop
lds
xchg
sub
cmp
mov
pop
xchg
sahf
push
insl
jno
ret
and
imul
mov
scas
out
xor
jbe
add
leave
rol
aad
icebp
aaa
aaa
push
addr16
xor
mov
hlt
pusha
fs
clc
sbb
push
sbb
lret
mov
shll
ja
push
add
fs
imul
movsb
xchg
pop
lock
test
inc
shlb
jle
leave
imul
popf
data16
inc
mov
jae
sti
subb
push
lods
adc
iret
arpl
dec
sub
cltd
mov
bound
push
dec
adc
push
xor
add
test
aaa
dec
subb
inc
std
xchg
xorb
jmp
fadd
in
mov
push
imul
or
jns
xchg
pop
stos
insb
xchg
xor
cltd
aaa
outsl
insb
adc
popa
mov
enter
sub
dec
sbb
jb
lods
movsl
add
rcl
pop
call
jmp
inc
push
jb
pop
add
imul
cmp
repz
cmp
mov
test
rdpmc
mov
repz
adc
pushf
loop
mov
inc
jp
out
das
ljmp
rol
cmc
jno
ljmp
mov
in
mov
popa
push
cld
pop
pop
js
in
pop
xor
pop
mov
out
fiadds
dec
dec
push
insb
xchg
imul
sbb
fcoms
xchg
xor
filds
stos
inc
mov
pop
dec
add
cmc
mov
cli
push
fwait
pop
lods
ffreep
adc
pop
fimuls
sahf
fcomps
call
ljmp
flds
pop
cmp
call
addr16
aaa
adcl
mov
loopne
pop
mov
adc
sbb
mov
and
addb
ret
cmp
iret
es
aaa
movsb
dec
pop
cwtl
cs
cmpsb
cmpb
add
lds
xor
sar
das
pop
xchg
pop
loop
add
mov
je
xor
cld
pop
adc
sbbb
repz
or
dec
jge
lahf
lods
lret
cwtl
adc
jbe
cmp
pop
subb
lods
call
movl
popf
xchg
jecxz
pop
mov
or
out
adc
out
push
lcall
and
xchg
outsl
adc
push
movsb
stc
inc
mov
xlat
out
fcoml
xor
sub
jle
xorl
adc
jg
hlt
inc
and
shlb
push
mov
ror
mov
int3
iret
xchg
push
mov
or
fnstenv
cmpl
jmp
std
fldenv
jmp
pmuludq
xchg
add
push
pop
loope
aas
cli
fistpll
and
data16
test
repnz
jns
inc
fistl
int
shl
insl
mov
xor
add
test
lea
pop
es
or
dec
aas
and
cmc
cli
mov
or
jmp
mov
jne
inc
sbb
push
fs
fistpll
pop
out
rolb
add
mov
ja
push
aaa
adc
push
lds
mov
stc
outsl
fisubrs
bound
loope
out
jns
call
sbb
mov
loop
push
test
push
pop
pop
and
movsb
shrl
pop
test
sbb
xchg
push
dec
addl
adc
stos
dec
dec
sub
or
mov
pop
adc
sub
cmpsb
ljmp
fcmovnbe
in
or
jge
xchg
ret
insb
add
mov
inc
dec
outsb
test
adc
sub
and
pop
mov
mov
test
inc
adcb
and
mov
inc
sbb
xor
subl
popa
jo
repz
and
inc
loop
push
jge
and
sbb
popa
scas
and
fldenv
sub
dec
dec
sti
cli
dec
mov
jmp
inc
hlt
movsb
stc
add
mov
scas
xchg
popf
add
push
push
scas
lahf
jb
mov
sahf
jno
inc
or
in
cmpsb
cmpsl
adc
in
aaa
imul
cli
push
test
or
push
lods
push
sub
rcrl
mull
jg
cmp
cli
dec
fwait
test
shll
aam
dec
sbb
xor
les
les
fucomip
mov
push
xor
lcall
push
shrb
leave
pop
xchg
push
xor
jno
popf
push
scas
push
push
xchg
subl
add
loop
cmpb
dec
sub
jmp
movsl
bound
jmp
pop
or
stc
loope
push
dec
xor
add
add
stos
stc
std
or
xchg
or
pop
lret
repz
jle
rcrb
cmp
stc
pop
out
stos
add
in
xchg
adc
jno
inc
and
stos
adc
mull
xchg
movsb
pop
jge
dec
sub
jmp
mov
lret
test
mov
outsb
mov
add
or
icebp
clc
scas
jecxz
imul
mov
lods
inc
loop
ret
mov
shr
xlat
roll
imul
scas
fmull
hlt
lret
dec
call
call
jo
jbe
negb
pop
clc
test
testb
xchg
dec
scas
add
rclb
or
xchg
xorb
leave
jg
and
test
cmc
push
jne
inc
xor
mov
in
pop
and
cs
rcl
cmp
insl
mov
leave
arpl
cmp
add
iret
fimuls
sbb
jae
inc
aas
add
nop
arpl
or
daa
dec
cld
pop
inc
cmp
and
jo
hlt
imul
push
dec
or
cmp
aas
enter
shll
jne
fisubs
xor
cwtl
cmp
or
popf
cmp
inc
push
add
gs
pop
ja
inc
divb
mov
outsb
insb
mull
xchg
push
xor
test
stos
pop
andl
cli
mov
fs
nop
xor
das
fldenv
fdivs
out
jno
lcall
or
add
aam
or
sub
fisttpl
out
push
test
push
shll
into
and
xchg
call
arpl
icebp
rcll
sbb
xchg
in
stos
fnstenv
adc
cmc
xchg
push
push
jmp
xchg
pop
out
imul
and
xchg
adcl
xchg
aaa
push
sbb
pusha
data16
or
test
sbb
stos
adc
std
ret
sbb
and
mov
cmp
sub
pop
ja
mov
aam
je
mov
outsb
fs
sbbl
aad
lods
rcrl
push
mov
hlt
sbb
in
push
pusha
jg
lcall
mov
jp
push
cmpsb
incb
cmp
out
gs
jmp
repz
xchg
cmp
add
pop
js
pop
aas
mov
dec
sub
inc
daa
lret
insl
enter
xchg
push
sbb
add
lcall
out
mov
clc
jne
cltd
cmpsb
bound
mov
cmp
xchg
sbb
cmpsb
cmp
xchg
cmp
add
aam
jmp
sub
inc
outsl
cli
das
mov
imul
sahf
mov
sub
sub
out
repz
ret
ret
loopne
jae
and
je
jns
hlt
jb
lcall
mov
and
movsb
jl
cmp
fsubrl
add
or
fstpl
rclb
lock
loopne
add
sbb
xor
and
jo
test
cmpb
aam
adc
rorb
mov
adc
aaa
int3
lods
jg
pushf
dec
cmpsl
push
jge
in
rorl
mov
or
sbb
cmp
je
lds
testb
push
mov
cmp
adc
lret
add
jge
mov
jmp
sahf
xchg
loopne
rorb
shll
imul
or
idiv
mov
xchg
inc
mov
fwait
lcall
sub
fstp
push
sub
outsl
push
sbb
pop
or
sub
leave
dec
jb
test
sarb
pcmpgtd
sub
cmpsl
add
into
xchg
in
enter
sahf
inc
adcb
aas
inc
lods
pusha
test
test
pop
push
inc
insl
cmp
insl
push
and
mov
jns
int3
in
cs
call
jl
mov
je
call
stos
mov
mov
xchg
lss
fadds
test
or
dec
dec
push
popf
out
std
mov
icebp
jne
jne
sahf
pop
flds
jnp
dec
sbb
clc
loop
fld1
out
xchg
sbb
jns
add
fistps
data16
mov
clc
aad
sti
aaa
mov
push
rep
in
lods
test
jl
mov
and
push
and
add
ret
mov
xor
rorb
test
not
dec
mov
pusha
dec
testb
dec
jne
xchg
adc
dec
aas
add
push
std
add
pushf
test
jne
popa
adc
add
jp
lods
or
xchg
xchg
mov
outsl
mov
pusha
enter
push
fs
jle
in
xchg
add
ret
int
stos
cwtl
imul
es
out
add
inc
cltd
jmp
dec
pop
fnstcw
fcoms
loop
xor
push
add
and
push
cmpsl
jns
shll
out
mov
push
ret
cli
jo
pop
jge
int
ja
sbb
inc
xchg
cmc
mov
adc
xchg
and
jmp
mov
call
xor
fisubs
jne
stc
into
clc
stos
fcmovnbe
fnsave
fadds
xor
mov
test
jp
or
adc
fdivl
test
rol
and
pop
sahf
add
xor
sbb
or
jbe
pop
or
into
mov
cmp
add
push
daa
divb
cmp
jecxz
and
std
les
mov
es
sahf
xor
cmpsb
mov
fistl
lea
push
inc
dec
lds
aas
pop
loope
sbb
notb
popf
push
jns
push
lock
gs
jno
std
mov
jno
mov
mov
cmpsl
sahf
mov
sub
add
jge
nop
xlat
mov
shrl
cmp
sbb
jl
fs
pushf
cmpl
push
and
and
cmp
xchg
fwait
inc
xchg
xor
sub
insb
inc
decl
loope
mov
adc
sbb
push
jnp
jl
pop
or
lret
cs
xchg
cmp
xchg
mov
sahf
dec
mov
pushf
leave
in
mov
adcl
dec
jns
ljmp
movsl
cmp
sub
pop
mov
or
outsb
lret
adc
push
inc
je
cmpsl
shrl
sahf
push
ljmp
stos
out
ret
scas
std
jmp
inc
dec
or
and
fdivrs
sub
jno
pop
shl
cmp
jne
sbb
adcb
push
dec
idivb
call
lret
ret
mov
incl
divl
loop
or
test
xchg
pop
daa
mov
pop
xor
mov
jmp
cmpsb
rolb
and
lret
mov
xor
cmpsl
mov
sarl
pop
fs
dec
dec
cwtl
sub
push
insl
sahf
push
movsb
jl
or
add
faddl
xlat
iret
inc
and
dec
adc
inc
jmp
add
or
dec
jge
cs
lret
dec
scas
sub
mov
iret
fidivs
and
xchg
lahf
scas
jne
and
popf
stos
dec
unpcklps
mov
ret
jmp
bound
xchg
and
sbb
xor
mov
mov
fistpl
xchg
xor
push
adc
cs
js
cmpsl
fstpl
xchg
dec
rcl
iret
pop
jl
pusha
add
rolb
xchg
ljmp
loop
xor
push
popl
push
outsb
pop
dec
jecxz
in
xchg
pop
andl
xchg
push
rclb
pushf
dec
or
stc
aad
mov
push
cwtl
mov
sbb
or
xor
stos
add
ret
lds
inc
in
repz
add
push
je
mov
cmp
ja
jne
push
lock
mov
pop
jbe
nop
inc
mov
sub
movsb
pop
mov
fidivrs
xchg
push
and
jmp
jae
mov
xchg
lods
popf
xor
shll
mov
sub
inc
or
lcall
mov
or
js
shlb
fdivl
frstor
sbb
test
int3
mov
add
xchg
cli
add
stos
repnz
repnz
adc
pusha
mov
pushf
push
adc
imul
or
push
mov
aaa
or
ljmp
jnp
lds
jl
jae
push
and
dec
pushl
dec
hlt
cmp
sub
mov
jle
inc
jg
lods
push
cmpb
mov
jne
pushl
push
shl
dec
adc
pop
movsb
jb
push
test
icebp
ja
fcompl
fnstsw
add
and
push
ret
ja
pop
mov
clc
jmp
fldt
movsl
fdivl
xchg
pop
mov
sbb
sarl
adc
xchg
fmuls
ret
cs
das
cmpsb
add
stos
mov
and
push
pop
mov
mov
std
in
cmc
mov
sbbl
movsb
std
cmp
pop
jle
in
mov
mov
test
pushf
jmp
dec
fs
mov
cmp
je
stos
lret
mov
jns
xchg
adc
cmp
add
mov
fdivl
sbb
cmpsb
das
adcl
pop
in
sub
inc
push
xchg
fdivrl
fs
cmp
jecxz
push
pop
cmpsb
push
jmp
mov
push
jl
test
lea
mov
and
in
popf
dec
dec
rorb
lds
pop
js
call
outsl
adc
pop
shrb
sbb
xor
test
push
ficompl
pop
scas
xchg
cmpsl
lahf
or
clc
mov
stc
insb
std
jno
ret
xor
movsb
pop
sbb
ret
mov
xchg
pop
fs
sub
xor
adc
jmp
outsl
push
dec
dec
sub
or
lods
inc
dec
cmpsb
inc
arpl
xor
xorb
mov
out
add
lret
in
inc
xor
mov
cmpsb
mov
cltd
imul
hlt
imul
fcompp
aas
fidivrl
sub
jl,pt
push
jbe
pushf
jb
xchg
cmpsl
xchg
sarl
jmp
push
or
xchg
or
je
adc
into
lods
adc
bound
inc
jmp
rcll
add
mov
add
pop
cmc
push
dec
sbb
clc
jne
xchg
and
loop
jns
ds
filds
ret
scas
mov
imul
cmp
add
lret
add
add
out
add
mov
jns
cmc
sti
or
xchg
sbb
xor
pop
fstpl
inc
lret
inc
stos
pusha
jno
orb
adc
mov
call
lret
cwtl
and
fidivl
out
mov
daa
sahf
gs
je
nop
js
sti
and
mov
outsl
jbe
in
stos
add
adc
xor
shl
inc
adcl
lcall
mov
sub
or
sbb
cmp
jmp
pusha
mov
push
arpl
repnz
fwait
cmp
pop
xchg
mov
js
sbb
movsb
xchg
mov
xchg
outsb
push
lcall
lods
mov
out
pop
pushl
rclb
incb
cli
sahf
xor
fs
xor
mov
or
or
scas
stos
lret
shlb
push
cmp
add
decl
mov
rol
lcall
loopne
in
sub
imul
pusha
int
push
mov
xchg
bound
dec
or
mov
inc
fists
push
xor
pop
and
mov
xchg
ja
xchg
or
mov
in
insl
jo
fbld
adc
shrb
and
scas
clc
inc
add
adc
divl
insb
jb
pop
outsl
daa
pinsrw
lods
popa
and
movsl
mov
sarl
mov
cmp
jb
and
push
cmpl
repnz
repnz
sti
jbe
or
add
xlat
call
mov
mov
pop
pop
sub
or
push
aad
adc
js
jmp
scas
and
aam
jb
insl
and
frstor
jo
call
nop
dec
dec
dec
pop
loope
shrd
cmp
xchg
test
icebp
mov
mov
sub
adc
cmp
rsqrtps
jmp
mov
push
cmpsl
dec
add
and
cmp
push
xor
dec
push
mov
pop
push
adc
xchg
push
dec
push
dec
fmulp
aam
jmp
mov
cmp
inc
aam
xor
xor
mov
enter
push
insb
inc
cld
mov
dec
jecxz
lods
cli
int3
stc
ror
in
inc
into
stc
jns
push
lds
jge
dec
mov
ljmp
and
or
imul
xchg
or
pop
hlt
mov
jge
mov
mov
add
scas
sahf
stc
or
popa
mov
and
loope
jge
jmp
xor
or
sub
and
dec
jg
nop
inc
mov
pop
and
pop
push
popf
dec
push
push
jge
cmc
sub
data16
dec
adc
push
fimuls
faddp
sbb
cmp
pop
jo
push
fnstsw
mov
mov
cmp
dec
bound
mov
mov
out
sbb
pop
out
hlt
xor
aaa
cmpsb
pop
push
icebp
xchg
pop
lods
nopl
adc
sub
outsl
fwait
aaa
pop
inc
in
cmpsl
fsubrp
cmc
in
aam
jp
scas
push
sarb
andl
in
pushf
mov
jae
test
add
fisttps
pushf
lea
sti
decl
lds
jp
push
stos
push
shrl
mov
js
cmp
stc
mov
push
lret
sub
call
imul
mov
mov
lret
or
xchg
mov
stos
sub
inc
test
or
sbb
add
inc
pop
outsl
mov
push
add
ror
orb
out
test
daa
sbb
cmp
aam
roll
sub
cmpsb
mov
mov
repz
jb
lret
push
push
jp
jns
pop
lret
pop
pop
xchg
pop
lret
jb
fiadds
xor
imul
aam
repnz
orb
xchg
repz
outsl
roll
cmc
xor
subl
js
sbb
xor
mov
cmp
xor
add
xchg
mov
ljmp
or
inc
iret
inc
orb
cmp
in
add
mov
jg
std
adc
dec
jnp
lret
aam
cmpsb
xchg
jge
jne
pusha
inc
aam
jne
xchg
mov
sahf
sbb
push
add
pop
sbb
jecxz
and
pop
pop
in
dec
cmp
insl
mov
mov
xor
jl
sbb
jb
push
inc
and
push
popf
jmp
lret
cwtl
push
pop
lahf
pop
xchg
pop
fcoml
push
add
or
std
adc
xchg
lahf
dec
mov
leave
shr
pop
js
adc
push
movsl
sbb
shlb
mov
jp
jae
and
movb
push
sbb
xlat
sahf
mov
adc
push
repnz
leave
sbb
out
out
mov
stos
stos
or
je
fisttpl
mov
dec
mov
pusha
je
sarl
cmpsl
sub
daa
mov
out
xor
mov
cwtl
or
dec
cli
inc
xchg
add
push
push
sbb
mov
outsb
cmp
push
ss
jno
push
shlb
js
sub
shlb
mov
adc
inc
bound
mov
pop
lret
aad
xor
or
xlat
sbb
add
add
xlat
pop
push
xchg
into
in
fwait
popa
aas
sbb
lods
add
testl
shr
loope
and
add
mov
xchg
adc
enter
sahf
shll
jae
roll
add
pop
xor
and
dec
dec
mov
cmp
mov
inc
pop
pushf
xchg
and
imul
sub
out
popf
lea
ficoml
sub
xlat
sbb
cmp
sub
sbb
filds
loopne
pop
pop
sahf
pop
icebp
adc
das
xor
js
xor
or
xchg
push
cmp
inc
iret
das
stos
xchg
shll
stc
dec
adc
xchg
add
mov
movsb
daa
jae
stos
fst
inc
pop
xor
or
sahf
cld
aad
imul
adc
cwtl
leave
insb
and
mov
pop
scas
adc
or
dec
lret
fidivl
mov
xchg
movsb
loope
out
lds
outsb
lcall
mov
gs
popf
or
fstpt
fiaddl
test
std
inc
popf
sbb
xor
clc
popf
sti
incb
cmc
testb
imul
ds
sub
jle
and
jp
adc
cli
insb
imul
shll
jge
stos
fwait
add
push
subl
jl
outsb
out
ror
add
pop
lock
loop
add
movsl
dec
mov
mov
push
imul
mov
or
jmp
adc
bound
sarl
lock
call
in
or
sahf
out
rolb
xchg
xchg
aad
pop
jo
mov
and
dec
or
mov
repz
adcb
xchg
cltd
adcl
aaa
push
cmp
mov
sbb
or
je
stos
int
push
iret
mov
or
lods
int3
push
or
jb
add
dec
push
popf
lods
in
fcom
fld
scas
cmp
test
cmp
div
adc
mov
mov
adc
cmp
xorl
push
icebp
xchg
pop
scas
movsb
mov
lods
arpl
pop
pop
gs
in
jne
lret
push
xchg
jbe
mov
sbb
xor
lret
es
and
ljmp
cld
add
add
fistps
add
xchg
xchg
movl
mov
subl
out
xchg
test
xor
ja
sbb
xor
adc
inc
addb
out
out
push
cmc
mov
pop
add
xchg
mov
xor
mov
nop
sub
stos
jnp
adcl
aam
out
inc
mov
push
sbb
insl
test
cmp
jmp
push
push
xchg
cmp
xlat
gs
cltd
in
pop
or
jno
fisubrl
add
cmpsb
cmp
dec
cwtl
adc
sbb
loope
pop
adc
lods
out
inc
and
outsb
push
pop
test
in
push
push
adc
stc
xchg
inc
icebp
inc
dec
iret
mov
sub
lret
jmp
add
inc
mov
pmaxub
aam
out
adc
xor
jecxz
inc
aam
dec
test
int
xor
jne
arpl
test
aas
xor
mov
imul
sub
fisttps
cltd
sbb
out
fwait
pop
xor
ja
lret
mov
or
pushf
stos
adc
jns
movsb
sub
cltd
dec
leave
push
orb
cld
dec
sti
mov
and
xor
jle
sub
dec
add
xor
dec
mov
mov
mov
test
inc
aaa
cmp
mov
lret
in
jmp
jmp
popf
jnp
inc
pop
cs
sti
lods
sti
stos
mov
cli
add
mov
push
fisubl
stc
dec
addr16
fcomps
push
idivb
xchg
mov
mov
icebp
pop
inc
and
fildl
mov
ret
adc
xchg
ds
insl
mov
mov
jo
and
outsb
lods
lods
or
idiv
cwtl
sbb
and
mov
xor
add
or
mov
popl
cmp
or
mov
adc
repz
pop
mov
cmp
es
test
movsl
jne
sub
fdivs
xor
xlat
mov
mov
adcl
test
icebp
add
in
mov
aas
sub
mov
xchg
mov
inc
daa
lods
pushf
inc
sub
je
lds
xchg
test
mov
arpl
insb
sbb
gs
pop
mov
push
pop
dec
pop
aas
in
scas
cli
cmpsl
test
xor
mov
add
test
sub
lock
push
in
rcrl
jae
shrb
mov
mov
adc
xchg
or
out
push
inc
mov
into
test
or
enter
or
adc
cltd
jns
adc
imul
xchg
out
xlat
adc
imul
cmpsl
out
mov
mov
insl
fs
aam
fiaddl
lret
std
xchg
dec
jmp
lret
or
std
xchg
jmp
scas
mov
test
mov
insb
mov
dec
daa
jl
pushf
adc
sbb
std
sub
dec
sub
cmp
mov
or
push
add
mov
mov
sbb
pop
out
arpl
xchg
jo
cld
rcll
mov
mov
movsl
xchg
push
fwait
pop
adc
imul
fdivrp
scas
dec
enter
std
movsb
gs
jmp
je
push
push
repz
and
enter
jmp
lods
or
scas
adc
push
sub
adc
stc
fldenv
and
mov
mov
push
fstl
imull
sbb
or
mov
ljmp
jg
push
loope
xor
dec
cmpsl
icebp
bound
pop
popa
pop
arpl
xchg
movsl
dec
xchg
aas
ret
jp
dec
jb
sbb
add
data16
pop
repnz
jae
push
movb
cmp
jbe
test
jno
pop
jge
push
pushf
leave
cmove
ss
enter
lds
stos
notl
fadds
test
cmp
arpl
lock
fmuls
jecxz
add
fwait
jp
and
dec
fistpll
mov
out
inc
cmpsb
jo
adc
cwtl
and
and
xchg
cmp
mov
lret
pop
mov
out
adc
jmp
in
or
in
iret
and
inc
aaa
and
mov
arpl
jns
fwait
mov
push
xor
rol
shll
xor
rolb
jmp
mov
sbb
push
ror
sub
test
xchg
lock
clc
or
insb
jns
xlat
jae
scas
dec
out
mov
and
pop
pop
or
inc
jns
cmp
out
in
sub
add
fisubs
testb
mov
out
lods
inc
pop
adc
mov
sub
les
iret
aad
dec
sahf
adc
cmpsl
xchg
das
adc
int
ss
cli
mov
dec
push
xchg
adc
push
pop
ficompl
mov
imul
adcb
imul
xchg
mov
inc
or
push
idiv
insl
push
or
pop
test
xor
jnp
adc
clc
test
push
ret
dec
arpl
push
dec
sub
adc
scas
sub
push
inc
lods
in
lahf
lods
gs
insl
out
ja
pop
arpl
mov
repnz
and
xor
cmp
cmp
sbb
cmp
shr
arpl
int
mov
and
fwait
dec
cld
clc
mov
sbb
cmp
lea
lcall
xchg
xchg
cs
push
loop
xchg
test
imul
lods
mov
push
xchg
add
dec
mov
aas
push
pop
shll
in
rorl
mov
inc
mov
adc
cs
xchg
out
jge
data16
xor
pop
stc
cmp
adc
dec
jg
push
jle
pop
mov
ret
icebp
mov
sahf
pop
cmp
sbb
imul
and
jmp
jecxz
pushf
stos
mov
enter
and
movsl
mov
sub
mov
sub
xchg
sub
decl
or
pop
das
add
xchg
jns
fdivr
sub
das
sub
and
lea
aam
xor
add
shlb
inc
xchg
inc
bound
push
and
mov
pop
dec
pop
rcrb
pushf
fidivrl
xchg
adc
dec
and
inc
movsb
xor
cmp
or
cmp
jns,pt
xlat
insb
lock
push
lret
xor
pushf
int3
and
and
add
jmp
loope
ffreep
sbb
cmp
cmc
xchg
fstl
scas
setns
push
shrb
inc
cmp
enter
adcb
imul
cli
jbe
lahf
xchg
inc
xchg
lods
leave
push
and
cmpsb
insl
mov
clc
sub
shr
add
push
mov
cmp
addr16
outsl
jb
dec
mov
lock
movsb
aas
mov
push
sub
jl
jns
aaa
jmp
stos
push
xchg
stos
jb
mov
sub
adc
or
lods
call
dec
mov
pop
add
sub
push
cmp
xchg
mov
inc
out
add
lahf
pop
mov
es
test
out
pop
insl
sbb
cmp
movsb
push
insb
movsl
cltd
mov
sbb
mov
adc
xor
cmp
lods
sbb
movsb
pop
aad
jcxz
push
push
sub
push
pop
add
sub
out
ret
lahf
je
pop
out
mov
or
jg
jmp
lret
jmp
mul
mov
pop
mov
mov
sti
add
or
mov
mov
adc
push
rcrb
jp
imul
scas
sarb
stos
jae
pop
mov
out
sbb
push
pop
mov
adc
arpl
mov
dec
ss
fistpl
lock
xchg
pop
lret
cmp
ja
mov
scas
or
rcll
pushf
shlb
incl
add
push
xchg
out
sbb
mov
data16
inc
xchg
mov
lret
and
clc
dec
mov
sarl
xchg
ret
adc
mov
xchg
jnp
pop
xor
fsubrs
push
cli
jl
adc
arpl
lods
lcall
and
mov
dec
sub
div
dec
and
dec
push
les
rcl
sub
das
into
pop
mov
or
pop
cmpsb
ljmp
pushf
dec
shrl
or
pop
repz
out
cmp
dec
mov
fldt
out
iret
mov
xlat
xor
dec
inc
aaa
cmp
lret
icebp
pop
fs
push
data16
ja
add
mov
pop
add
push
sbb
mov
push
popa
nop
sbb
out
int3
push
popf
fistpl
adcl
cmp
xchg
cmpsb
test
push
sbb
dec
icebp
jmp
or
test
cld
imul
das
push
or
cmp
in
ret
sbb
cmp
imul
xchg
sub
xchg
jge
ja
dec
push
out
sub
aas
movsb
pop
rcr
int
lret
adc
xchg
repz
push
pop
and
bound
jmp
cmp
adc
aas
push
pop
jl
inc
push
fildl
or
jb
shrb
inc
lahf
testl
jbe
xor
fstpt
and
jbe
es
sbb
arpl
xchg
sub
scas
sub
mov
repnz
iret
clc
sbb
inc
ljmp
mov
adc
add
inc
hlt
xor
xlat
in
cmpsl
xchg
jmp
add
mov
xchg
push
into
mov
call
packuswb
push
add
cmp
cld
push
int3
and
loop
add
jns
ss
ficoml
sub
jl
sub
mov
push
jmp
mov
cmp
jl
sbb
sbb
iret
jno
mov
outsl
push
andl
ss
add
into
push
shl
xchg
je
mull
clc
add
xor
aam
fists
js
orb
cmp
mov
dec
sbb
mov
dec
je
shlb
enter
mov
cmpb
repnz
jle
or
add
push
std
in
push
int
sub
sbb
push
out
dec
adc
aam
lret
push
movsl
push
jae
insb
scas
push
or
test
movsl
add
movsb
sbb
insb
push
cli
jg
arpl
push
rcrl
ja
sbb
ret
iret
cmp
sahf
inc
inc
dec
sub
in
or
push
add
jo
cmc
push
xlat
scas
cmp
mov
ljmp
push
or
scas
jb
add
in
push
testb
lret
cmc
test
imul
leave
push
cmp
into
nop
sub
cs
outsb
loop
mov
sbb
mov
push
insb
in
dec
xor
cwtl
lea
or
test
fstp
mov
cmc
inc
fistl
jb
test
clc
push
clc
repnz
lock
adc
and
call
xchg
data16
cs
shll
lret
push
push
fsubl
bound
and
cwtl
imul
cmpsl
out
xchg
push
add
inc
sbb
lcall
dec
pop
daa
pop
clc
rolb
lret
xor
or
sahf
std
push
or
ret
and
push
arpl
test
sub
cmp
enter
bound
sbb
and
pop
jmp
mov
jg
sbb
popf
jns
mov
mov
xlat
xchg
or
insb
dec
sahf
leave
xor
xor
es
int3
iret
lret
pop
adc
ljmp
test
aad
xchg
jmp
lea
dec
and
divl
xchg
jmp
and
xor
add
pop
into
xor
sti
test
sub
enter
test
bound
cmpb
aaa
shrb
xchg
mov
add
ror
dec
stc
cmp
call
clc
push
inc
push
popa
lahf
xchg
jl
in
jbe
cltd
jbe
xlat
inc
adc
call
adc
dec
mov
jmp
or
xchg
dec
incb
add
and
dec
mov
out
imulb
out
repz
int
cmc
push
jae
jp
loop
dec
cwtl
adc
inc
push
xchg
inc
push
in
mov
push
sub
scas
lahf
inc
inc
add
pusha
xchg
inc
inc
adc
sub
cmpsl
or
popa
pushf
movsb
stc
pop
repz
xor
ret
jno
jl
jge
jbe
mov
jmp
push
sbbl
gs
pushf
sahf
push
les
mov
icebp
sub
movsl
mov
ret
fldcw
rcrl
and
pop
pop
xchg
xor
rclb
cwtl
mov
xchg
jb
inc
push
gs
mov
add
mov
mov
loopne
xor
lea
test
in
mov
mov
aaa
flds
repz
negl
inc
andl
mov
cmp
sti
ljmp
jg
lds
lahf
sbb
sub
jmp
mov
mov
jg
or
imul
add
pop
movb
push
mov
iret
aam
xchg
mov
mov
in
in
sbb
add
xor
push
lods
std
or
jns
gs
push
outsl
in
shr
iret
cmpsl
sub
mov
and
and
arpl
mov
ja
dec
out
ja
cmp
xchg
fldcw
bound
lcall
pop
add
lahf
icebp
push
jge
sub
sbb
jno
aas
notb
jns
sbb
scas
pop
mov
mov
lahf
add
rclb
aas
lea
xor
call
ja
movsb
sub
push
jecxz
fdiv
jo
adc
inc
pop
js
push
clc
addr16
lods
aad
stos
xchg
test
lahf
repz
dec
icebp
pushf
ja
out
jb
xor
je
les
je
jae
out
jmp
sbb
fstpl
add
arpl
jge
xor
stc
fdivrl
lret
test
jp
push
dec
out
jmp
jns
int3
enter
push
shll
cmp
mov
push
nop
scas
push
adc
movsl
jle
scas
sub
repnz
movsb
jmp
call
adc
inc
lock
xchg
sbb
mov
ret
repz
jno
adc
xchg
movsl
aaa
stc
sahf
lret
ret
push
lea
les
inc
dec
inc
jo
int
sub
mov
aaa
xchg
test
icebp
out
outsl
fiaddl
jle
lcall
pop
or
or
hlt
cmp
add
jns
es
or
iret
or
movsl
repnz
mov
and
adc
insl
sahf
push
daa
mov
push
sub
mov
push
pop
in
xor
push
and
das
cli
test
cld
pop
mov
jl
dec
jae
mov
incl
pop
mov
lret
sub
js
popf
jne
lcall
xor
in
daa
or
das
scas
sub
stc
sub
sbb
inc
add
repz
repnz
stos
push
js
dec
xor
loop
dec
cmp
imul
sarb
dec
cmp
jo
and
sub
and
lea
cmpsl
call
je
xorl
xchg
icebp
dec
add
int3
or
lds
or
fstpl
push
push
and
and
dec
xchg
popf
je
ret
and
mov
sub
xor
loop
add
ljmp
inc
loope
orb
repnz
fcomip
sbb
adc
mov
adc
jo
inc
and
fcoms
ljmp
or
sbb
mov
cmp
cld
out
push
jge
jnp
dec
jbe
lahf
push
pop
je
mov
movsl
xchg
cmp
push
lcall
mov
mov
xor
out
sub
xor
cmc
pop
popf
jae
mov
jnp
lahf
dec
push
test
cmpsl
fldenv
add
daa
pop
fistpl
or
sub
dec
sbb
adc
adc
and
fldcw
xor
add
nop
cmp
cmpsl
popf
fnstsw
or
imul
popf
and
push
mov
adc
and
mov
test
imul
mov
call
sbb
and
pop
push
mov
push
sbb
stc
push
js
xchg
fisubs
cmp
das
les
cmp
movsl
fwait
in
sub
cmp
xchg
call
cli
cwtl
pop
jb
sub
or
xor
pop
fs
xchg
pop
sub
dec
enter
push
inc
lea
mov
push
in
mov
ja
lea
aad
lea
lahf
xchg
sbb
sti
jge
or
or
aaa
adc
jmp
add
cli
dec
ds
mov
je
xchg
lock
inc
mov
jbe
push
xor
mov
add
int3
inc
test
fimull
test
sub
xlat
sbb
jmp
xchg
push
rcll
push
pop
or
jno
cmpsl
jg
lock
sbb
pop
and
mov
sub
out
mov
out
mov
or
sub
ja
xor
mov
lahf
popa
out
add
insl
insl
and
mov
inc
mov
sbb
sbb
imul
loopne
les
push
movq
sub
aaa
xchg
shl
xchg
stos
inc
out
adc
rdtsc
lahf
sub
fwait
xchg
pop
sub
adc
jmp
sahf
test
sarb
sbb
in
shrb
mov
xor
or
loope
fs
mov
in
arpl
pop
cmpsl
jge
cmpl
imul
inc
mov
pop
enter
insb
aad
sub
xchg
stos
dec
cwtl
imul
loop
rorl
cmc
fldenv
sbb
sub
data16
aam
lods
ror
push
test
push
cmpsl
dec
mov
enter
xor
push
jmp
mov
ret
and
aam
es
shl
sbb
in
jbe
mov
pop
out
mov
into
jo
lock
test
and
fwait
dec
sub
cltd
test
xchg
lods
les
cli
fs
mov
adc
in
dec
mov
push
dec
cmp
das
and
push
mov
lahf
inc
adc
sbb
iret
mov
push
dec
bound
or
push
data16
mov
inc
cmp
mov
and
mov
out
aam
into
sbb
sub
sub
lods
aad
inc
andl
push
in
push
adc
js
xchg
adc
pop
add
addb
or
clc
out
mov
and
dec
cmpl
sbb
iret
xchg
mov
popf
call
pop
cmp
in
pop
outsl
js
sbb
xchg
bnd
aam
push
xlat
popa
ljmp
and
test
call
push
out
call
jo
sahf
sub
aas
gs
xchg
imul
add
dec
dec
or
xor
jmp
dec
jbe
pop
mov
aam
add
push
repz
enter
addr16
rclb
sub
pushf
mov
fistl
and
pop
aas
cwtl
inc
xor
lcall
inc
jg
mov
jno
loope
bound
sahf
jo
rcrl
mov
inc
aad
xor
mov
incl
ret
je
cmp
pushf
jge
xor
out
and
jae
pop
pop
in
xor
jns
xchg
inc
outsl
ficomps
dec
mov
subl
lret
scas
pop
mov
lcall
call
stos
push
cmp
inc
dec
mov
pop
jne
in
xchg
iret
gs
ja
push
xchg
sbb
fsubrp
and
sbbb
add
outsb
mov
xor
pop
call
add
add
insb
xchg
pop
js
push
outsl
movsl
scas
insl
sub
jb
xor
mov
in
test
test
stos
mov
mov
jecxz
jo
jno
push
pop
lcallw
inc
orb
sbb
lret
dec
pop
sbb
xlat
nop
push
sbb
lds
rcl
shlb
sbb
mov
out
mov
inc
out
mov
ret
mov
fstl
dec
dec
mov
or
shrb
mov
lcall
sbb
mov
dec
stos
pushf
mov
jge
cs
xchg
test
jl
inc
cmp
aaa
std
and
retw
cmpsb
cmc
je
jl
leave
cmp
dec
out
cmp
lahf
sbb
addr16
addr16
mov
mov
outsb
in
mov
outsb
cmp
push
ja
mov
out
xlat
fimull
mov
dec
push
sub
add
pop
test
int3
mov
mov
fisttpl
jbe
jg
push
aam
movsl
jl
lock
add
insb
pop
ss
cmpsl
adc
sarb
add
cli
pop
add
dec
mov
loop
mov
lea
scas
mov
test
xor
dec
imul
jle
cmc
icebp
mov
jnp
adcb
rcrb
jb
push
or
fs
sbb
push
xchg
push
movsl
jne
mov
pop
out
sahf
xchg
std
inc
jge
add
pushl
push
dec
jmp
jae
outsl
inc
daa
fdivrl
dec
or
sbb
stc
pop
fs
call
pop
movzbl
imul
mov
push
fcmovne
leave
insl
roll
fwait
xchg
sub
mov
leave
cmc
add
es
add
test
std
pushf
inc
or
mov
jno
adc
adc
fadds
xchg
cmp
inc
lret
popf
xchg
adc
inc
mov
or
dec
mov
stc
and
add
int
cmp
xchg
inc
adc
push
cmpb
andl
lock
lcall
ss
push
add
xchg
ret
xchg
iret
dec
sub
scas
sub
jmp
popf
xor
push
mov
sbb
loope
mov
and
jg
mov
call
incl
enter
fdivs
rclb
sub
mov
shlb
fwait
adc
xlat
xchg
test
pop
xor
push
lcall
jbe
scas
subb
mov
mov
notb
sti
adc
loope
add
lcall
pop
dec
or
std
mov
in
xchg
push
add
icebp
aaa
fistpl
rolb
mov
xchg
push
pusha
sub
push
hlt
ret
fdivs
add
subb
mov
hlt
inc
add
rcrl
add
lret
out
out
cmp
or
cli
sub
push
js
cli
outsl
mov
stos
sub
sub
imul
ret
out
pop
adc
adc
xchg
gs
and
orl
sub
mov
push
bnd
idiv
test
aas
out
mov
repnz
lea
cmp
push
xchg
fs
mov
jns
sub
lods
mov
gs
scas
push
mov
stos
shrb
mov
into
incl
fsubr
push
das
sbb
cmp
cmp
push
xor
dec
jl
fiaddl
int3
jp
arpl
mov
pop
inc
mov
fmull
mov
pop
add
and
and
bound
xor
call
and
test
dec
xlat
bound
push
test
and
mov
stos
sbb
add
cmp
mov
xor
dec
mov
or
enter
shrl
ja
xchg
add
push
inc
loop
popa
pushl
es
ja
jo
cmp
push
xor
jbe
xchg
dec
pop
dec
sub
sbb
ret
mov
add
mov
sub
std
dec
xor
push
lret
and
and
fwait
testb
and
dec
xor
and
lds
sbb
jnp
ljmp
jle
ret
lods
pop
xor
lds
or
clc
pop
inc
sbb
out
mov
lahf
insb
aaa
xchg
lcall
aad
mov
pop
push
cmp
ljmp
mov
in
add
or
pushf
rorb
or
outsl
mov
inc
int3
fcoml
aam
ss
pop
hlt
xchg
push
xchg
pop
loop
jo
sbb
dec
hlt
sti
scas
addr16
push
pushf
and
in
xor
mov
push
in
cwtl
outsb
test
ss
cld
mov
cmp
lret
xor
cmp
sbb
in
outsl
xor
sub
and
cmp
loope
adc
xchg
jns
gs
mov
adc
jne
sahf
push
test
inc
dec
cmpsb
shll
pop
pop
dec
aas
pop
in
xchg
out
outsb
cmp
inc
inc
inc
je
push
sbb
pusha
push
push
sub
or
std
fsub
cmpsl
ja
fcmovbe
rcl
xchg
pop
cmc
sub
pop
lret
push
add
add
mov
clc
push
mov
outsl
inc
lret
sub
cmpsl
adc
push
sbb
repnz
hlt
inc
adc
sahf
testb
jnp
repnz
mov
sbb
out
cmp
xor
imul
jle
jae
rolb
fisttpl
dec
and
lcall
cmpsl
cmp
insb
dec
sub
arpl
out
cmp
jle
jl
lcall
mov
cmpb
xchg
fs
xchg
xchg
pop
dec
jo
sbb
jno
nop
ret
ds
push
push
test
divl
xlat
pop
pop
jno
inc
fidivs
or
sbb
repnz
or
gs
xor
mov
jmp
insl
nop
movsb
mov
insb
jnp
outsb
lds
push
xor
std
sub
push
mov
mov
sarb
mov
cmp
cmp
out
in
sbb
fiaddl
int
shrb
shll
pop
inc
pop
mov
adc
shl
mov
out
dec
addl
loopne
mov
xchg
pop
test
bound
mov
sub
mov
insl
pop
stos
mov
jb
adc
xchg
mov
cli
stos
out
adc
call
lods
inc
mov
xchg
lds
ror
or
mov
cmp
mov
mov
mov
adc
inc
pop
adc
test
fs
add
xchg
test
lods
push
push
mov
cmp
jl
incl
and
and
shll
dec
jne
sti
dec
and
fbld
stc
push
jno
lods
aad
add
or
and
int
loopne
push
add
cmpsb
aam
lods
jns
rcl
or
dec
pop
cmpsl
jae
rorl
or
mov
mov
mov
cwtl
stos
lahf
test
mov
sar
test
xchg
or
xor
dec
popf
cwtl
mov
add
cmp
cwtl
mov
fisubrl
xor
movsl
jmp
ret
mov
xor
add
lret
jmp
stc
test
push
add
fs
pop
sbb
or
cmp
adc
in
pop
jl
je
mov
hlt
sub
stc
jne
dec
or
jne
push
ss
xor
mul
cmc
lcall
popa
fcoml
sub
jbe
jmp
sahf
push
fwait
sbb
imul
xor
leave
push
sbb
push
jg
pop
out
or
add
inc
adcl
cli
outsb
mov
test
js
pop
imul
mov
lcall
div
jle
addb
fstpt
xchg
jge
mov
outsb
push
gs
inc
ret
or
xchg
xchg
and
cmpsb
and
mov
inc
cmpsb
icebp
mov
arpl
jl
shrb
mov
mov
cmpsl
pushf
lcall
data16
mov
push
mov
push
daa
loop
mov
push
lds
stc
lret
or
lret
insl
jge,pt
push
nop
scas
enter
fldenv
xchg
das
pop
or
inc
xchg
fadd
xchg
dec
fstpt
rcr
adc
ret
inc
or
sub
inc
push
int3
sti
xorb
hlt
repnz
dec
ret
dec
pop
jle
mov
sbbb
pop
arpl
pop
outsl
rcrb
cmp
mov
repz
loope
shll
cwtl
aam
shlb
ljmp
loop
fcomi
fstpl
je
xchg
movsb
aad
or
sub
pop
mov
lock
out
aas
loope
or
xchg
xor
inc
and
push
movsl
ss
add
adc
mov
data16
cmpsb
or
cli
inc
pop
sub
inc
push
or
and
out
popa
xchg
add
lret
cs
insb
mov
sti
mov
out
xlat
out
sti
lret
cmc
mov
mov
or
pop
mov
daa
roll
dec
xchg
jno
hlt
jbe
orl
movsb
test
in
sbb
pusha
adc
push
xchg
push
adc
adc
adc
xchg
rclb
lret
mov
add
or
cmc
xor
and
mov
ds
mov
ljmp
mov
sbb
fadd
scas
inc
testb
and
fnstsw
mov
adc
xchg
jne
or
cmp
dec
stc
jp
out
xchg
fwait
test
lcall
out
fisubs
xchg
jl
rclb
fildll
shlb
dec
mov
loopne
nop
xlat
into
ds
inc
addr16
cmpl
dec
jb
jno
adc
lret
jae
xor
aas
lea
andl
pop
xchg
sub
xchg
mov
mov
mov
aas
cld
jne
push
loopne
int3
push
xor
xor
cld
stc
mov
sub
jp
fstps
or
mov
jmp
xor
out
clc
xor
jge
pop
cld
into
jo
jle
sub
lret
dec
gs
add
push
stos
xor
mov
ljmp
neg
movaps
mov
or
aaa
fsubrs
mov
ret
push
mov
inc
pop
pushf
mov
ss
rcr
cmc
add
sub
xchg
add
xchg
sbb
mov
out
jg
sbb
jb
repz
jb
mov
xlat
out
imul
enter
loop
insl
inc
cltd
sarb
mov
sti
dec
les
bound
mov
notb
fidivrs
imul
notb
add
loop
popa
adc
mov
mov
fnstenv
sbb
cmc
mov
fiadds
pop
es
or
xchg
ds
andl
xor
ds
push
sub
or
adc
mov
loope
xchg
pop
movsb
ljmp
adc
idivl
jp
sbb
dec
add
stos
addr16
lret
sbb
stos
xchg
jmp
push
clc
inc
daa
adcl
push
adc
push
incl
sbb
addr16
push
cmp
cs
cli
pusha
popa
mov
test
jecxz
sub
outsl
mov
sti
fsubs
push
xchg
test
iret
xorb
mov
cli
int3
insb
imul
jo
popa
lea
out
in
jae
das
imul
sub
mov
cmp
or
dec
jle
mov
mov
call
inc
mov
pop
enter
test
outsl
int3
mov
loopne
push
aad
hlt
mov
fdiv
pop
mov
outsb
sbb
popf
imul
int
pop
inc
mov
or
loop
arpl
dec
xchg
or
xor
xchg
hlt
int
lock
nop
jbe
into
popa
out
adc
push
xor
andb
pop
jl
in
jmp
fnstsw
push
ljmp
jmp
std
inc
push
outsb
dec
lret
out
add
xchg
cs
es
fisttpll
add
stos
lret
jb
jge
mov
adc
mov
imul
or
arpl
data16
ror
lret
pop
dec
xchg
or
mov
push
data16
jg
cld
pusha
cmpsb
fidivrs
stos
insb
repz
sahf
cmp
mov
shlb
push
xchg
ds
mov
arpl
lock
int
mov
sbb
mov
dec
pusha
fucom
das
test
in
inc
lods
adc
jge
mov
repnz
fmull
int
adc
data16
jecxz
insl
je
scas
popa
mov
sub
dec
and
add
mov
mov
out
lahf
daa
jl
test
push
iret
mov
dec
lods
les
jp
int
mov
sbbb
mov
loopne
pop
pop
and
sbb
push
test
js
into
mov
aaa
xor
xchg
out
jp
adc
inc
mov
out
fwait
shlb
pusha
insl
dec
jnp
sti
pop
test
mov
push
popf
dec
jge
pop
outsl
negl
pop
call
hlt
push
test
stos
fidivrl
movb
mov
aam
mov
push
frstor
jp
pusha
sbb
mov
jo
lock
fbld
mov
pop
adc
and
sti
xor
add
ffreep
xchg
hlt
jmp
and
or
cmp
das
imul
call
into
add
add
fcompl
rorl
fldenv
cs
jns
pop
cmc
pop
movsl
rorl
jo
inc
shrl
jns
jb
lock
out
sub
or
jne
and
cmp
sahf
nop
fsubs
fwait
jge
clc
sub
dec
or
xchg
mov
pop
jae
popf
mov
fidivl
xchg
cwtl
lahf
pop
adc
sbb
jne
jmp
push
jb
clc
shr
inc
lock
sub
iret
xchg
lods
and
scas
mov
push
adc
divb
cmp
cmp
mov
fucomi
testb
cmpsl
cli
and
mov
adc
push
es
imul
outsl
leave
ljmp
or
loop,pt
stos
sahf
mov
sahf
repz
out
enter
mov
fcmovnbe
mov
jge
stc
pop
sbb
mov
test
fisttpll
cmp
sub
repz
mov
sub
mov
notb
mov
rol
or
adc
and
fsts
xchg
xchg
and
pusha
ret
scas
mov
fsubs
std
mov
inc
into
fstpl
or
mov
cmp
outsb
xor
pop
pop
sbb
js
sar
repz
pop
mov
cld
scas
xchg
xchg
fwait
jnp
mov
dec
aad
icebp
xchg
sub
fdivl
mov
gs
arpl
popa
fldenv
mov
mov
notb
and
and
xchg
scas
inc
loop
add
pop
test
or
mov
rol
in
cmpsl
in
mulb
cmpsb
sub
or
jb
adc
cmp
pop
jno
sub
aas
fildll
je
movaps
adc
fldcw
xor
jmp
cld
cli
int
or
sub
flds
xlat
jle
testl
jle
and
mov
mov
mov
fnstcw
mov
pop
adc
ret
sbb
or
insb
int3
cmp
daa
mov
xchg
or
mov
mov
xor
jp
jns
jecxz
notb
mov
insb
jne
stos
xor
ror
cltd
out
and
pusha
pop
test
leave
or
or
rcrl
mov
movsb
pop
xchg
gs
aad
cmpsb
sub
js
push
imul
lds
cmpsl
sbb
or
mov
push
fs
jnp
idiv
mul
and
jecxz
mov
lret
add
hlt
or
mov
mov
aam
data16
xlat
pop
mov
test
cwtl
ss
cwtl
data16
sub
cmp
xchg
lret
sub
jb
jl
add
sub
push
jbe
add
scas
and
jl
sub
leave
add
sbbl
xchg
inc
pop
inc
out
and
lret
scas
test
stos
jbe
pop
sub
in
mov
xchg
mov
test
cmpsb
jae
hlt
dec
out
stos
mov
stos
mov
rcrl
cli
cmpsb
push
mov
cmp
ja
add
and
sarl
mov
xchg
or
loopne
cmp
pusha
sub
lea
in
inc
xchg
sbb
fdivs
cs
xchg
cmp
xor
push
push
xchg
jb
mov
loopne
mov
lret
int
sbb
js
dec
add
fcmovu
lsl
and
dec
push
int3
addb
cmpsl
lret
fidivrl
or
mov
xchg
pop
repnz
pop
and
std
movsl
jae
scas
adc
push
xchg
into
das
movsb
mov
inc
mov
jp
sub
pushf
into
xor
aaa
cmp
sub
std
cmp
sar
add
adc
jnp
out
push
pusha
popf
mov
rclb
lods
jae
push
mov
pop
stc
pop
shll
mov
mov
ja
mov
in
das
hlt
push
xor
fwait
mov
ret
inc
lahf
jl
and
sti
pop
loope
or
call
rorl
cmp
scas
imul
sti
mov
add
xchg
dec
aas
ret
xchg
outsl
movsl
aas
rcr
push
add
mov
fs
inc
or
push
fdivrl
xchg
wrmsr
cmp
inc
hlt
mov
xor
into
mov
cs
push
fsts
sarl
test
cmp
sbb
scas
stc
and
pushf
xorb
push
adc
push
andb
jne
ret
fldt
insb
xor
pop
lret
xchg
fdivp
xchg
nop
mov
jmp
inc
adc
jle
mov
in
insl
cmp
shl
roll
dec
mov
rorb
jo
outsl
mov
sti
insl
shr
int3
and
out
inc
sbb
mov
lods
inc
mov
int3
xor
shll
mov
adc
mov
loopne
repz
pop
icebp
mov
mov
push
ret
test
inc
rclb
add
xor
hlt
cltd
sub
pop
mov
jmp
lahf
cmp
sbb
fisttps
mov
fsubr
repz
jmp
pop
scas
xor
cmp
sbb
sub
xchg
push
enter
jl
into
clc
add
jp
xlat
xor
ret
out
pop
inc
add
mov
mov
std
aaa
test
xor
call
mov
push
in
out
dec
sbb
leave
cmc
movsb
xchg
clc
mov
scas
stos
add
ss
jmp
js
jge
ljmp
adc
testl
xchg
test
jne
ss
xchg
int3
jns
add
sbb
sahf
icebp
inc
sbb
dec
rcrb
aas
or
shrb
fs
add
sbb
sbb
dec
add
loope
faddp
or
cmc
jae
mov
push
loop
cmpsl
sbb
push
shl
testl
scas
bswap
bts
outsb
sbb
cmp
and
pop
cmp
cli
xchg
loopne
add
repz
push
out
adc
adc
adc
mov
out
fldenv
mov
or
in
in
in
aaa
les
outsl
and
cli
in
nop
fcmovne
call
cmp
cli
inc
cs
lcall
popf
cmp
repnz
idivb
sub
push
mov
into
push
sub
pop
adc
cmp
dec
std
loop
lahf
mov
sbb
adc
das
xchg
pop
pushl
mov
mov
int
jae
rcrb
gs
fstps
mov
adc
jo
and
xor
lds
sbb
xor
lea
stos
push
les
sbb
mov
jge
mov
sti
cmp
mov
into
push
sbb
out
xchg
pop
shlb
lods
test
jne
adc
sahf
mov
push
addr16
push
xor
and
add
sbb
ret
xor
iret
mov
ret
out
dec
test
sbb
ret
icebp
push
stc
cmp
cmp
jnp
dec
inc
and
insl
pop
mov
rolb
fwait
lock
rorb
and
imul
inc
inc
into
mov
divb
xchg
ret
sbb
and
mov
ljmp
cmpsb
pop
pop
mov
xchg
es
test
xchg
jp
jno
dec
push
add
icebp
xchg
jmp
pop
lret
les
dec
out
arpl
cwtl
repz
in
push
dec
xchg
mov
data16
mov
lcall
lcall
mov
ud2
add
and
push
int
adc
test
call
dec
repz
ret
jb
sub
xchg
xchg
std
cmp
lret
stos
decb
push
mov
addl
pop
sub
pop
sahf
push
test
nop
into
mov
dec
or
pop
jp
adc
mov
jb
out
lods
hlt
test
scas
bound
cmp
mov
push
adc
fldt
call
sbbl
sub
enter
mov
sub
lcall
jno
pop
rcrb
lea
mov
mov
mov
outsl
lea
lds
cli
scas
dec
xchg
mov
xchg
gs
negb
jg
lret
mov
mov
mov
and
mov
sarb
hlt
dec
dec
int3
je
dec
jl
shll
nop
daa
scas
outsb
andl
sbb
jo
lods
and
push
jns
jno
jmp
pop
es
stos
jo
stos
imul
lret
xchg
sub
jo
test
rcr
push
inc
lret
sbb
jp
push
adc
in
jle
addb
xchg
push
and
add
mov
int3
icebp
ret
inc
lea
jbe
jbe
outsl
add
and
shrl
mov
aas
js
mov
adc
fisubrs
push
add
push
mov
fildll
cltd
sub
sarl
cmp
fwait
sub
jmp
icebp
scas
jecxz
incb
mov
sub
and
xchg
pop
fmul
aam
cmpsb
mov
jne
icebp
cmpb
adc
jg
test
outsb
xchg
fidivrs
push
shlb
in
add
std
sti
ljmp
popa
in
mov
mov
outsl
jnp
pop
push
out
push
ret
pop
mov
sub
ss
and
sub
outsb
jecxz
add
dec
in
mov
xlat
pop
test
jns
dec
aaa
fiadds
mov
enter
xor
cld
add
int3
lcall
cmp
mov
or
aad
push
push
jp
cmpsl
mov
das
wbinvd
xchg
adc
mov
sub
add
aas
popa
push
jecxz
ret
repz
fsubl
out
ret
adc
aaa
idivl
out
cmp
lock
imul
stos
push
mov
loope
add
dec
jae
cmp
loop
and
daa
fcomps
mov
lods
xor
in
fsubr
iret
addl
and
sub
frstor
jbe
dec
mov
addr16
and
add
ds
addr16
sarl
rcll
cmp
sbb
test
cmp
jecxz
inc
jne
mov
mov
pop
lret
and
inc
jb
lea
stos
scas
add
ss
sbb
push
mov
xchg
icebp
ror
xlat
push
inc
pushf
sbb
fildll
add
add
insl
xchg
push
fcoms
sti
mov
cli
test
repz
mov
fs
pop
imul
data16
add
dec
xchg
ljmp
daa
jle
je
or
lods
mov
jns
adc
mov
into
cltd
and
int
mov
and
push
ds
std
mov
scas
adc
and
adc
mov
add
lods
add
fs
pop
mov
aam
loopne
inc
jl
add
xchg
mov
orb
lret
sub
push
testl
sbb
arpl
mov
scas
mov
outsl
inc
push
in
cmpsb
arpl
mov
loope
ret
aas
and
cmp
insl
repz
mov
add
lods
vmread
inc
adc
call
int3
pop
and
aaa
dec
push
adc
xchg
jmp
sbbl
shrl
dec
cmp
push
mov
inc
or
out
and
add
push
cli
arpl
pop
pop
adc
iret
jp,pt
aas
add
repz
lods
sbb
lret
cli
dec
test
mov
aaa
enter
mov
mov
mov
or
jbe
notl
mov
xlat
mov
cmp
or
pop
dec
out
inc
jmp
aad
idivb
hlt
cmp
push
pop
jmp
stos
stc
xchg
push
outsb
sarb
mov
lahf
fnstenv
fnstsw
ss
or
loop
xchg
je
in
lahf
xor
scas
lahf
mov
xchg
mov
push
stos
xor
arpl
popf
push
shl
into
stos
arpl
inc
icebp
mov
outsl
sti
cmpsl
in
inc
push
or
cs
lret
fnstcw
adc
movsl
xchg
js
pop
mov
fwait
or
or
inc
mov
in
pop
in
jl
and
dec
mov
mov
out
int3
mov
rcrb
leave
sbb
pop
jae
mov
data16
push
mov
sub
aaa
jns
mov
mov
pop
test
adc
xchg
ret
das
xlat
aas
xchg
sbbb
aas
and
repz
xchg
mov
adc
ljmp
mov
fsubrs
xchg
lods
faddp
call
cmp
xchg
push
movsb
sub
outsb
pop
rcrb
sub
inc
adc
xchg
xor
dec
stc
icebp
out
daa
push
insb
ja
sub
and
shl
mov
xor
pop
or
mov
idivb
dec
xchg
shl
sbb
sub
push
inc
leave
icebp
aas
push
mov
bound
decb
cs
in
sbb
cmp
cmc
int
adc
fadd
nop
inc
subb
lds
cmp
mov
out
out
into
mov
inc
sbb
mov
pusha
int3
cmpl
ret
adc
or
or
testb
push
adc
leave
adc
add
fwait
in
mov
sbb
mov
mov
xor
mov
loop
cwtl
or
or
cmp
sub
xchg
mov
sti
inc
lds
out
ret
or
push
jae
sti
loop
ja
xor
mov
push
or
lods
cld
dec
push
repnz
clc
cs
aam
hlt
jae
insl
enter
test
push
pop
stc
cmp
adc
sub
in
jp
in
in
sub
orl
xlat
sbb
jp
enter
inc
sete
xchg
arpl
mov
xor
aad
enter
nop
sbb
inc
adc
cld
cld
cmp
xor
or
jne
inc
or
add
push
mov
pop
mov
arpl
js
rcr
es
sub
repnz
mov
lods
sar
adc
inc
dec
sub
outsb
dec
mov
or
lods
pop
out
xorl
hlt
mov
lret
popa
sbb
imul
enter
xlat
lods
nop
test
inc
mov
xor
xor
cmp
lcall
pusha
testl
ds
subl
xchg
push
divb
mov
rorb
jne
mov
pop
lods
cld
pop
push
das
xor
push
in
mov
lods
pop
test
adc
jnp
jno
das
cli
lock
jecxz
cmp
and
adc
stos
data16
fs
cs
mov
aas
loop
cmp
sbb
xor
push
mov
addb
cmp
jb
xchg
mov
jmp
xor
lds
arpl
out
cs
sub
in
xchg
pop
int
jg
nop
es
push
jl
inc
pop
arpl
push
and
gs
stc
sbb
adcb
hlt
lods
xchg
addr16
int3
jmp
and
pop
mov
mov
or
mov
dec
mov
call
xchg
xchg
xchg
xchg
mov
adc
adc
ljmp
and
mov
and
mov
jg
sub
cmpsl
lahf
mov
jae
jmp
addl
ja
adc
arpl
sbb
sbb
enter
call
inc
cwtl
les
dec
lcall
fdivr
mov
sbb
cs
mov
leave
and
vpsubq
sub
or
xchg
subps
pusha
insb
cmp
gs
aas
ret
push
mov
mov
mov
add
insl
cmpsl
enter
inc
out
pusha
xlat
call
stc
arpl
xlat
fidivl
jns
jl
mov
enter
mov
mov
into
cld
sub
call
jno
add
push
push
mov
xchg
nop
mov
push
aaa
es
stc
iret
cs
fmul
outsb
addb
inc
ret
xchg
loope
push
sbb
jb
jo
push
neg
xor
icebp
lods
adc
imul
int
mov
test
lea
icebp
jmp
stos
mov
push
lods
or
arpl
sub
cmp
cs
or
xor
addr16
sbb
cmp
call
sbb
pop
fs
pop
mov
imul
mov
mov
out
push
or
xor
data16
fsubrp
lcall
aas
repz
xor
cld
mov
add
lret
inc
ljmp
popa
movsl
pop
xchg
lret
inc
dec
sub
add
push
mov
orl
aaa
insl
icebp
enter
cmc
pop
inc
clc
jle
pop
sarl
xor
cmp
pop
cmp
add
insl
xor
into
fsubl
cmpsl
adc
dec
xchg
mov
sbb
orb
mov
inc
sbb
sbbb
cwtl
in
jns
sub
out
out
imul
fstpt
adc
dec
call
jno
es
fsubl
in
adc
sub
sbb
dec
mov
jecxz
outsb
pop
sub
xor
jbe
mov
in
dec
inc
push
mov
imul
and
roll
inc
fldcw
pop
mov
cli
xchg
and
xchg
xchg
std
xchg
push
sbb
xor
repnz
mov
cli
pop
pop
js
and
lock
stos
mov
popf
mov
pop
or
pop
cld
inc
lret
inc
push
rcrb
adc
xor
jo
ss
mov
inc
xchg
push
xchg
lahf
mov
xor
mov
orps
dec
insb
imul
imul
pop
mov
adc
mov
clc
leave
loope
jecxz
dec
or
pop
xor
pop
les
pop
and
subl
push
scas
sbb
jg
adc
stos
and
cltd
cmp
xchg
popf
xlat
mov
out
popa
jae
dec
sub
jns
int
rolb
adc
push
push
popf
adc
jb
add
lahf
inc
mov
cmpsl
pop
int
inc
mov
in
loop
lea
pop
out
ret
test
sti
ds
pop
mov
cmp
je
imul
inc
sbb
int
jbe
lock
repnz
popf
cmpsb
push
lcall
adc
dec
push
xchg
hlt
cmp
pop
pop
les
and
pop
jp
jle
test
into
add
sbb
adc
push
xor
cs
lods
std
dec
je
cmpsb
add
test
dec
icebp
rcr
movsl
mov
lret
mov
imul
ret
pusha
clc
mov
adc
xchg
rolb
rol
sahf
pushf
andl
xchg
movsl
inc
icebp
cmpsb
sbb
dec
cmpsl
cs
jecxz
jecxz
xchg
mov
mov
add
dec
out
arpl
shll
aas
and
or
cli
popf
push
loope
cwtl
mov
xchg
into
xchg
test
jl
push
and
out
stos
mov
frstor
jne
jg
add
or
sahf
xor
pop
arpl
clc
sub
es
add
inc
mov
cltd
mov
push
mov
adc
lock
fmull
push
outsl
and
inc
mov
push
mov
adc
jmp
push
xor
movsl
into
or
cwtl
outsl
outsl
data16
mov
sar
loop
dec
lea
push
fbld
or
inc
test
arpl
hlt
pop
fwait
pop
mov
test
clc
xor
push
enter
mov
pop
push
imul
sbb
test
push
into
fiaddl
sbb
ficoml
int3
xchg
gs
mov
mov
and
sub
mov
adc
jno
jns
or
insl
push
pop
lea
dec
xchg
loop
icebp
stos
add
xchg
cwtl
sub
pop
mov
mov
lea
jne
cld
inc
movsl
mov
orb
pop
or
sbb
jecxz
test
cmp
pop
data16
jecxz
fdivrp
dec
clc
add
idivl
test
push
sub
cltd
add
or
clc
adc
push
push
fldcw
test
xchg
sub
out
fimuls
inc
xchg
dec
mov
xor
push
push
inc
out
sbb
insb
rcr
lret
cmp
xchg
je
mov
cmp
int3
jl
jle
jecxz
dec
cwtl
outsb
out
xchg
adc
add
mov
lods
packsswb
inc
jno
lret
loop
lahf
pop
lret
jl
cli
xchg
sub
bound
lcall
jno
repz
into
imul
daa
pushf
push
std
or
jge
mov
xchg
and
xor
ret
ja
repz
movsb
or
decl
test
xor
call
mov
repnz
in
addl
push
mov
jnp
shlb
testl
add
xor
cmp
mov
cmpsl
push
iret
inc
mov
sbb
dec
sbbl
mov
ror
sti
popf
cld
in
push
lods
cmpsb
imul
fs
aaa
int
cmp
addr16
and
mov
jecxz
aad
jl
and
mov
out
cmpsl
inc
mov
adc
loope
xor
add
into
daa
mov
ds
aad
filds
out
stc
pushf
clc
gs
stos
mov
xor
sbb
js
jecxz
push
shll
stc
cltd
fs
into
jle
or
das
dec
xchg
dec
outsb
scas
jo
sub
les
mov
movsb
inc
xchg
jl
xchg
xor
lods
inc
iret
out
divl
les
es
insb
out
subps
mov
push
dec
xor
fwait
mov
mov
mov
and
jne
mov
pop
push
sahf
mov
mov
fxtract
jbe
cmpsl
xchg
push
mov
cmp
inc
mov
aam
sub
sbb
inc
ret
rcl
mov
or
xor
lods
or
or
addr16
pop
movsb
mov
mov
lret
ljmp
popl
push
icebp
xchg
cmp
cmc
ljmp
outsl
clc
mov
inc
dec
pop
dec
push
xchg
rcl
shrb
add
shrl
stos
dec
add
pop
inc
bt
je
and
mov
addl
add
dec
sbb
mov
sahf
stos
push
je
mov
cld
movsl
mov
fs
arpl
pop
shrb
mov
mov
xchg
stc
pop
mov
rcr
mov
fs
cli
ds
test
aas
aaa
aaa
xor
mov
ds
in
shr
xor
jne
js
and
sub
rcl
push
stos
shrl
movsl
adc
repz
loop
lock
repz
push
out
push
outsl
sbb
sub
xchg
mov
test
push
push
cli
jmp
lock
jp
aad
jecxz
movb
push
cli
lea
mov
xchg
bound
jbe
adc
pop
fadds
icebp
aas
pop
mov
icebp
cmc
inc
adc
xor
adc
add
call
sbb
xchg
xor
cs
fcoml
or
xor
hlt
pop
rcll
dec
imul
in
scas
mov
cli
add
jbe
in
sub
pushf
mov
push
loope
shrb
xchg
push
xor
les
bound
test
cli
push
mov
roll
xor
xor
xor
adc
fldenv
mov
jg
js
outsb
shll
loopne
xor
hlt
gs
rorb
testl
push
cmp
sub
xchg
add
cwtl
mov
mov
mov
jecxz
pushf
mov
xor
cmpsb
jg
jno
inc
in
test
and
dec
std
subb
stc
jl
ss
aas
loopne,pn
inc
cmp
sub
cmp
loop
fwait
xor
mov
jle
dec
sub
mov
rcrl
insb
into
into
stos
out
stc
xchg
push
inc
pop
pop
bound
out
pop
test
fists
daa
push
ljmp
xor
xor
pop
aas
push
cmpsl
shll
sbb
add
aas
js
xorb
aas
mov
in
xor
shrl
in
sti
push
pop
or
repz
je
xchg
mov
pop
out
arpl
sbb
mov
cmp
xchg
xor
loopne
aas
xchg
jb
test
pop
and
stc
and
mov
push
imul
cltd
pop
dec
les
push
shl
gs
xchg
rcrb
sub
push
dec
pop
cwtl
pop
decb
loopne
add
or
dec
fildll
xchg
icebp
add
jae
mov
mov
inc
lods
push
add
movsl
dec
push
rclb
sub
add
lods
test
mov
or
arpl
xor
scas
iret
and
xor
jmp
inc
mov
sub
shlb
cmpxchg8b
pop
ja
mov
jb
pusha
test
jecxz
xchg
test
pop
or
xchg
outsl
iret
mov
xchg
sbb
pop
mov
enter
and
jo
inc
cmpsb
sub
adcl
push
mov
wbinvd
fcmovnbe
mov
aam
xor
push
repnz
imul
or
cmp
addr16
inc
cmp
dec
jae
out
jg
loop
push
or
xor
cltd
inc
jge
test
or
mov
add
fnsave
jnp
lcall
add
in
mov
push
popf
xor
mov
cmp
push
lcall
pop
xchg
adc
jae
xchg
or
int3
xor
jmp
pop
mov
arpl
cwtl
in
jle
lahf
sbb
dec
fs
xcrypt-ctr
cmpsl
fstl
xor
daa
sub
or
cmp
test
mov
jae
push
outsb
addr16
sbb
lods
pop
adc
fs
scas
mov
cli
push
push
sub
pop
loop
sub
mov
pop
sub
gs
les
sbb
repnz
repz
dec
sbbb
and
fcomp
data16
jb
push
ds
outsl
bound
stos
mov
dec
and
xchg
in
and
sarl
into
xchg
sub
cli
xchg
ret
std
ficoml
cltd
sbb
push
lret
insb
jnp
mov
cltd
scas
or
fsubrp
daa
je
and
addr16
pop
cmp
movsb
push
cmc
lods
cld
mov
lahf
aam
sbb
cmp
cltd
jmp
pop
fisubl
push
popf
repz
push
and
jno
xor
inc
fsubrl
repnz
test
pop
push
dec
and
shl
repnz
jne
push
daa
xchg
add
loop
push
cltd
out
inc
lods
pusha
jle
lret
iret
into
push
inc
cmpsb
and
inc
jl
mov
pop
mov
shlb
pop
lret
fldt
lret
outsl
fs
js
xor
pusha
inc
into
mov
jae
push
mov
dec
mov
loopne
add
mov
sti
repz
adc
cli
xchg
push
cs
idivb
and
jge
push
adc
adcb
mov
loopne
mov
mov
sub
sub
fsubr
push
sub
dec
lahf
mov
jne
mov
push
jge
push
mov
add
adcb
clc
out
xlat
ds
and
pop
shl
ds
mov
sahf
pushl
fistps
arpl
rcrb
scas
pop
inc
test
ret
jmp
pop
add
xor
push
gs
lahf
lret
ljmp
push
lods
insb
add
pusha
cmp
mov
mov
mov
lock
pop
loop,pt
pushf
pop
inc
adc
adc
ds
stos
lcall
enter
lds
sbb
add
popf
sub
cli
orb
pop
and
or
sub
dec
inc
pop
iret
in
fiaddl
ljmp
aad
hlt
xorl
xchg
sti
inc
out
jge
addl
fiadds
sub
ret
jns
push
out
mov
or
and
ror
andl
dec
add
push
lcall
scas
inc
mov
pop
xor
movl
jmp
sbb
and
xchg
fxch
xor
jb
insl
pop
shl
popl
les
arpl
add
adc
or
or
inc
and
and
loop
mov
xchg
sbb
cmp
mov
iret
and
clc
mov
cmpb
lods
gs
lret
push
mov
test
jno
push
das
or
lcall
aas
test
arpl
adc
adc
xlat
push
outsb
std
mov
out
cmp
lds
scas
fcomps
shlb
stos
dec
loop
std
aad
or
fstp
into
fsubl
mov
arpl
divb
jmp
xor
aaa
xchg
loopne
push
jns
cltd
adc
fdivr
push
mov
pushf
add
ret
stos
shr
mov
push
mov
cmpsb
aad
mov
jle
mov
dec
mov
das
mov
int
rolb
sbb
out
pop
fnstenv
dec
sub
sub
push
sahf
jmp
jns
insb
mov
les
aaa
int
lcall
mov
mov
sbb
lret
adc
je
mov
fstp
in
adc
mov
out
gs
push
test
repz
fildll
jmp
popa
or
in
cmc
xchg
ljmp
jl
sub
fs
pushf
cld
push
sub
xor
jmp
iret
and
insb
xchg
sbb
clc
imul
test
mov
pop
clc
mov
pop
cmc
push
sahf
xor
loope
outsl
fisttpl
aaa
in
push
test
addb
pop
xchg
pushf
test
mov
popa
test
inc
js
cmp
shll
rolb
inc
mov
push
addr16
pop
xor
pop
dec
mov
scas
rcr
xchg
fcmovne
ljmp
inc
fidivl
sub
outsl
data16
sbb
pop
fsts
shlb
nop
jns
outsl
stos
sahf
ret
lock
push
mov
inc
jg
cld
pop
subl
sbb
inc
ljmp
or
mov
out
inc
lods
mov
jbe
jno
xorl
xchg
mov
push
cmp
fs
and
int
add
sub
shll
cmpsb
repz
pop
popf
jecxz
inc
sahf
sub
jl
jno
jge
adc
insl
dec
and
jl
xchg
mov
sub
sbb
stos
dec
arpl
cwtl
push
mov
adc
jmp
pop
sbb
sub
or
pop
aaa
pushl
aad
out
test
fistpl
les
mov
push
cs
inc
or
adc
pop
js
sbb
pop
notb
in
in
jp
add
loope
gs
ja
dec
jb
pushf
jmp
pop
mov
fisubrl
mov
les
ret
jae
mov
test
fwait
inc
es
mov
sub
and
dec
add
in
addr16
mov
xor
bound
mov
jae
lcall
pop
inc
stos
arpl
mov
jnp
pop
cld
mov
adc
add
mov
hlt
aaa
mov
mov
sar
mov
xlat
mov
test
imul
or
inc
int
cmp
jg
and
mov
shrl
xor
js
cmc
out
sbb
rolb
push
out
scas
ss
sbbl
fwait
jl
or
dec
ljmp
rep
lcall
imul
or
jne
repnz
mov
ss
ss
ds
das
pushf
fcmovnbe
pushl
cmp
push
ljmp
jl
mov
mov
xor
in
sub
jno
iret
es
rclb
pop
loopne
mov
repnz
cmc
xchg
mov
push
scas
push
or
outsb
mov
out
and
lret
outsl
test
stos
dec
clc
shll
scas
or
int
sub
adc
insl
andl
xor
xlat
pop
inc
xchg
mov
jns
or
imul
pushl
push
mov
adc
mov
and
sarl
lret
lret
xchg
mov
and
iret
add
jno
adc
sbb
outsl
inc
mov
andb
imul
hlt
rorl
add
cmp
roll
and
inc
mov
movsb
xchg
cltd
push
iret
mov
and
movsb
xor
or
jmp
adcl
cmp
cli
cmp
inc
jecxz
sbb
and
and
ret
into
inc
jge
popf
imul
loope
scas
xlat
xchg
out
outsl
pop
or
notl
or
loope
sub
and
aas
pop
jne
xchg
xchg
cwtl
jo
mov
add
push
ficoms
dec
scas
mov
mov
cmpsl
jno
adc
adc
addr16
fdivrl
sahf
sbb
out
or
hlt
enter
imul
in
hlt
shrb
fnstsw
out
xchg
xor
mov
ss
mov
idiv
add
les
jp
and
movsl
mov
xorb
adc
fidivl
or
je
movsl
or
add
sub
xor
or
movsl
adcl
jmp
jmp
movsl
mov
xor
loop
fdivl
call
es
pushl
aaa
insl
sbb
arpl
aam
pop
xchg
add
inc
js
outsl
lret
inc
xchg
pop
dec
inc
loopne
or
lea
mov
dec
xor
xlat
sbb
mov
insb
jl
sub
leave
in
test
es
aaa
jg
push
fs
jne
dec
out
ret
xor
movsb
xchg
outsb
cmp
imul
jp
repz
mov
arpl
adc
jl
lds
xchg
adc
sbb
enter
mov
push
dec
mov
fisubrs
push
jns
hlt
scas
fcompl
jne
gs
pushf
movsb
int
mov
enter
sbb
ja
andl
fdiv
popa
data16
dec
push
scas
xchg
insb
jmp
jle
dec
mov
data16
aam
cmp
ss
add
aaa
cmpsl
xchg
loope
xorb
bnd
outsb
push
push
xchg
cmp
nop
fildll
cwtl
cmpb
mov
cmpsl
aaa
add
push
pop
mov
out
cwtl
sub
inc
imul
movsl
nop
mov
pop
outsb
mov
xchg
or
fldcw
push
mov
loop
and
out
jno
xchg
popf
fcoms
es
inc
ficoms
cmpsb
in
sbb
divl
shll
testb
inc
pop
xchg
sbb
push
xchg
out
mov
fisttps
xchg
and
inc
cmp
aas
xor
cmpsl
xchg
mov
icebp
cmp
ficoms
pop
adc
nop
and
fcomps
adc
in
sbb
add
add
pop
int3
movsl
sbb
ret
out
jp
dec
outsb
xchg
out
xor
mov
mov
out
sbb
sbb
sbb
fst
jbe
pusha
sbb
xor
mov
pop
fimull
push
sub
fwait
adc
cmp
arpl
and
mov
pop
js
cmpsl
xchg
sub
sub
stc
stos
pop
sahf
add
xor
addb
dec
sbb
lods
out
mov
and
sbb
pop
adc
lret
cli
scas
shl
notl
enter
jmp
loopne
rorl
cmp
scas
cmp
inc
mov
fimuls
leave
stos
cli
iret
aam
lcall
jne
cmpb
and
popf
mov
icebp
sub
test
mov
ljmp
inc
rcrb
leave
sub
jle
cmp
adc
cltd
fdivl
pop
dec
insl
addr16
dec
je
out
pusha
inc
add
xchg
add
xchg
pop
inc
and
jp
not
push
es
mov
inc
inc
jl
rdmsr
sar
push
and
fs
adc
test
mov
std
push
imul
mov
sbb
mov
loop
clc
push
hlt
stos
mov
das
adc
scas
mov
push
imul
cmc
ja
adc
or
add
and
nop
rcrl
cmpsb
mov
fwait
xor
cmp
pop
sbb
xor
jecxz
adc
push
je
jo
pop
push
decb
sub
into
sub
sub
loop
adc
testl
xchg
xor
andl
icebp
adc
xchg
es
xorl
mov
mov
jns
push
cld
adc
sbb
test
test
or
inc
push
add
bound
rcrl
jle
repz
inc
sbbb
aas
push
stos
ret
pop
nop
inc
faddl
or
pop
subb
push
mov
scas
cmpsb
mov
push
xor
and
add
ljmp
xchg
icebp
adc
ljmp
fisubl
fcompl
sbb
sbb
pushf
iret
pusha
mov
adc
iret
daa
insb
mov
adc
outsl
leave
pusha
and
mov
and
lahf
ret
jo
into
fwait
xor
aam
dec
stc
inc
dec
negb
and
sbb
xchg
mov
mov
inc
xchg
mov
mov
leave
dec
cld
shrl
xchg
aam
mov
test
neg
jl
inc
fistpl
andb
popa
loopne
mov
lret
mov
mov
jne
rclb
jno
sub
dec
mov
call
lock
dec
mov
and
push
or
add
xlat
sahf
outsb
fs
movb
adc
inc
and
or
cmp
push
roll
inc
inc
aas
pop
pop
int3
adc
adc
cmp
and
sub
rol
int3
in
cld
repz
ja
repnz
inc
xor
daa
inc
xchg
push
dec
out
sbb
fdivrl
cld
sub
cmp
jno
lods
push
dec
lods
mov
jp
pop
sbb
adc
lds
stos
add
shlb
inc
mov
lds
andps
popf
pop
cwtl
es
mov
or
fmuls
roll
nop
stos
xchg
cmp
add
adc
jp
mov
aas
out
push
sahf
pop
mov
mov
out
pop
lock
push
fsubrl
ret
push
xchg
shrl
jmp
xor
and
mov
xor
xchg
mov
loope
inc
inc
call
jmp
rorb
int
rcll
aad
inc
xor
inc
jecxz
adc
sbb
pop
aam
rcrl
test
push
je
and
insb
push
pop
popa
ret
push
jmp
icebp
jp
and
cmp
sbb
fs
repz
pop
daa
xchg
and
sub
loope
sub
lret
adc
in
out
cwtl
loope
mov
iret
aas
jge
push
or
push
js
mov
adc
rclb
pushf
in
pop
cltd
inc
adc
push
cmpsb
arpl
into
setg
ret
and
cwtl
jns
imul
imul
nop
jmp
xchg
cwtl
lods
xor
jl
loope
push
int3
fsubr
pop
shr
ss
mov
adc
cmovge
call
out
outsl
jbe
lock
mov
xor
inc
sti
cmovnp
xchg
jb
imul
ret
xor
insb
or
roll
sub
pop
pop
push
jmp
adc
test
xchg
and
test
dec
lods
sti
xchg
inc
xchg
icebp
push
aaa
xchg
outsl
and
dec
add
inc
mov
inc
mov
mov
sub
and
jo
xor
and
pop
add
ret
pop
ljmp
cmc
cli
push
pop
push
lahf
sbb
fdivs
sahf
xchg
mov
js
lcall
sub
sub
dec
sbb
cld
outsl
cld
data16
push
out
push
lcall
cmp
mov
cltd
cmc
mov
aad
fisttps
or
xchg
pop
pop
dec
and
push
cmp
cmpxchg
add
add
scas
adc
das
add
test
data16
ret
mov
xor
mov
enter
mov
fistpll
das
or
xor
jecxz
dec
sti
daa
fadd
xor
add
jbe
jg
dec
dec
mov
xchg
pop
jecxz
adc
addb
popa
ffreep
idiv
xchg
imul
or
repz
xchg
mulb
add
xchg
jle
pop
add
test
movsl
lods
sub
jns
fsubl
push
mov
mov
push
xor
push
rcll
lea
ret
outsb
ja
divl
sbb
cmpsl
dec
fs
jmp
cmpsb
popf
imul
cmpsb
pop
sub
cmp
lret
cmp
nop
outsb
xchg
cli
addr16
aam
jne
ja
and
mov
lahf
int
out
ret
mov
fstps
and
push
inc
aas
mov
cli
mov
ficoml
mov
xchg
dec
test
adc
xchg
sbb
data16
jnp
sbb
movsl
bound
ljmp
stc
inc
pop
mov
pushf
xorb
fs
mov
test
and
inc
xor
jno
mov
test
adc
pop
inc
mov
adc
and
adc
loope
push
insb
jne
xchg
scas
push
call
xor
sbb
shlb
ss
fistpll
cmp
in
mov
test
xchg
pushf
inc
lods
mov
lret
xor
jge
clc
scas
cwtl
test
cmc
loopne
popf
mov
mov
lds
test
xor
add
xchg
lret
decl
xchg
pop
out
jl
pop
jg
pop
dec
dec
hlt
add
outsl
xchg
cmc
aam
sub
arpl
mov
sub
dec
sbb
jecxz
pop
movsb
mov
stos
int3
or
sub
sbb
inc
das
cwtl
cli
adc
ja
ret
ljmp
test
out
loop
and
fidivrs
and
add
cmpsb
ja
mov
fwait
imul
and
outsl
cld
sbb
js
cmp
ljmp
sub
fdiv
inc
jge
xchg
xor
mov
mov
nop
rolb
xor
fbstp
outsl
mov
mov
xchg
dec
sbb
fisttpl
stos
popa
pop
xlat
test
adc
hlt
test
in
cmp
inc
icebp
std
pop
inc
ret
add
add
nop
lcall
sub
pop
bswap
mov
jmp
insl
pushf
imul
push
insl
lods
push
mov
or
jp
in
jge
jno
jnp
add
sahf
movsl
xchg
or
mov
popa
jmp
mov
hlt
push
pusha
movsl
fwait
mov
pop
les
cmc
test
pop
enter
dec
inc
cli
or
xchg
orb
pushf
cmp
bound
in
jb
sti
std
insb
sub
inc
xchg
aad
and
jno
cwtl
leave
jne
add
pop
cltd
pop
mov
pop
jge
ret
sbb
pushf
int
imul
sub
test
adc
cmpsl
or
loope
jbe
sub
xchg
int3
cltd
sub
add
int
je
sbb
orl
inc
mov
jb
adc
xchg
ja
jns
enter
stos
push
addb
leave
jle
sahf
ja
int
jle
hlt
test
ss
inc
dec
push
cmp
mov
out
pop
jmp
fimuls
or
jg
popa
xchg
enter
mov
dec
push
mov
add
jle
push
loopne
fcomps
jmp
lret
xchg
jno
stos
mov
repnz
out
bound
xchg
dec
ret
sub
pop
stc
sub
xchg
mov
xchg
ror
cmp
idivl
pop
sub
mov
in
cld
hlt
mov
pop
or
mov
dec
fsubs
xor
in
sbb
jp
mov
inc
fs
scas
and
jno
jbe,pn
out
mov
stc
add
push
mov
xor
fldl
cli
std
xorl
mov
out
aaa
push
sub
testl
lods
ljmp
bound
jle
xchg
aad
xchg
sarb
xchg
dec
leave
cmpsl
repnz
xchg
outsl
mov
inc
je
mov
sub
lods
xchg
lcall
enter
cmpsb
jge
xchg
dec
push
adc
mov
jecxz
mov
push
pop
test
cmp
mov
daa
jecxz
mov
dec
addr16
movsb
pop
push
mov
sbb
mov
and
adc
movsl
pusha
mov
gs
out
shl
shlb
xchg
jae
jbe
mov
movsb
cmp
icebp
aaa
jbe
sarl
adc
aam
fimuls
xor
test
fcoms
mov
loope
push
fildl
xchg
aaa
out
fldenv
inc
popf
frstor
loop
lret
adc
popf
ja
jbe
test
push
cli
orl
mov
xor
sub
or
xor
shlb
cmpsl
pop
out
pusha
inc
imull
jmp
pop
shlb
sbb
sbb
dec
mov
xor
shlb
rolb
gs
xor
push
xor
pop
loopne
pop
jle
fxch
sti
jl
enter
mov
je
jae
cltd
lret
add
jecxz
gs
jne
inc
and
shll
mov
cltd
xor
inc
mov
push
aas
setbe
mov
mov
hlt
ss
sub
es
popa
lds
adc
mov
lret
aaa
pop
ja
imul
in
out
mov
add
jmp
out
test
aam
ja
adc
cld
xchg
ret
or
mov
repz
and
inc
xchg
xor
dec
lahf
movsb
jecxz
int3
repnz
adc
clc
int3
cs
sub
imul
inc
cld
adc
iret
lock
cmp
xor
scas
mov
test
xchg
or
in
test
mov
xchg
xchg
js
dec
xchg
push
into
inc
mov
sbb
lahf
xor
loopne
mov
dec
jae
push
dec
pop
andb
add
dec
jne
mov
loopne
dec
sbb
or
jle
scas
xchg
push
mov
cmpsl
mov
lock
inc
mov
mov
int3
xlat
push
push
xor
mov
xchg
and
cwtl
adc
push
cmp
xor
psubsw
cmpsl
testb
mov
xor
addr16
add
mov
mov
les
cmp
sub
pop
ja
insb
dec
in
and
mov
out
pop
adc
fstl
mov
pop
cmc
mov
sbb
dec
or
dec
pop
sbb
scas
cmp
test
and
sub
sub
js
in
out
pushf
ret
xor
mov
lock
int3
xchg
and
sbb
sbb
fwait
push
jbe
adc
push
pop
fisttpl
aam
out
out
cmpb
push
push
cmc
jbe
scas
dec
push
jae
jnp
or
pop
scas
pop
out
lret
xor
jno
pop
pusha
ja
imul
clc
inc
and
shlb
fwait
lret
je
jns
es
divb
repz
cmp
pop
jbe
dec
mov
int3
cmp
mov
outsl
push
push
xor
rcrb
xchg
es
in
sub
xor
fadd
stc
aaa
enter
inc
fsubr
and
push
scas
ds
jb
push
add
cltd
mov
mov
mov
out
jl
ret
roll
fcmove
cs
in
mov
cld
dec
outsl
jecxz
jb
jl
xor
test
mov
cwtl
dec
ds
clc
mov
adcb
icebp
fmuls
push
and
dec
sub
out
mov
gs
cld
outsl
lock
xor
mov
popw
or
sbb
cltd
sbbl
int
test
mov
loopne
inc
aas
push
mov
mov
jp
push
xchg
mov
mov
cmp
icebp
in
xchg
aad
push
fistl
and
mov
sahf
outsb
pushf
mov
scas
mov
ret
jnp
cld
shll
leave
jb
inc
push
stc
jl
aaa
mov
push
sahf
sbb
jae
dec
idivb
sub
mov
in
movsl
cmpsl
push
sbb
imul
data16
pop
js
xor
or
mov
inc
addr16
inc
leave
jae
jne
sbb
lock
cmp
cmc
mov
xor
jns
or
pusha
je
push
fisubl
icebp
jae
pop
jnp
jbe
frstor
dec
push
in
arpl
daa
rcrl
or
test
nop
out
pop
inc
sbbb
cmp
mov
dec
insl
add
cs
lods
jae
xor
dec
subb
xchg
adc
repnz
jle
dec
out
xor
cmc
or
aaa
xchg
dec
not
out
inc
sbb
sub
push
sub
nop
jp
out
and
add
aad
add
jb
outsl
loope
outsb
push
out
xchg
lods
mov
rorb
lret
pusha
data16
adc
cmp
mov
lods
out
cltd
stos
addl
xchg
add
jge
adc
test
push
jae
scas
mov
es
sub
es
adc
jne
xor
jl
pop
jbe
movsb
nop
dec
fnsave
lea
xchg
aaa
push
cmpps
pop
xchg
adc
xor
push
test
aas
dec
adc
aas
in
adc
daa
xchg
cmp
lods
ss
pop
outsb
lahf
jne
or
pop
sub
shlb
outsb
xchg
pop
stc
pusha
push
mov
loop
pop
sti
jecxz,pt
mov
faddp
cli
les
add
adc
int3
call
jmp
pushf
lret
sar
movsb
pusha
mov
adc
mov
mov
mov
dec
push
movsb
push
jb
mov
mov
add
je
insl
push
push
pop
dec
jle
inc
repz
jg,pn
pop
inc
xor
incl
negl
push
add
add
push
fiaddl
jmp
bound
cmpsl
inc
lds
push
lcall
and
dec
test
mov
sbb
lds
mov
jle
push
fmul
das
fistpll
add
mov
or
fidivs
cvtpi2ps
lcall
flds
jmp
sub
loopne
dec
xor
out
out
pusha
iret
in
xchg
aad
loopne
data16
lret
leave
das
and
or
mov
dec
in
fsubrs
xor
add
insb
clc
mov
arpl
push
fisubs
mov
inc
add
repnz
popf
sbb
loopne
push
adc
dec
lds
stos
adc
or
push
push
sbb
xor
xchg
mov
imul
cmpsb
inc
and
add
pop
jl
call
aam
xorl
lcall
mulb
xchg
mov
push
popf
jge
adc
xlat
pop
mov
xchg
lret
cmp
sub
push
xchg
cmp
pop
adc
test
mov
imul
adc
sub
scas
in
jg
push
or
sub
arpl
add
lcall
mov
jno
loop
cmp
jno
cli
ds
mov
push
rolb
xchg
adc
out
js
xor
pop
out
rcr
and
imul
and
insl
je
fcmovnu
mov
xor
add
lret
andb
mov
inc
fcoml
cmpsl
faddp
add
adc
jmp
sub
in
xchg
in
fmuls
cmp
add
stc
xchg
mov
xchg
aas
lods
fcomps
jae
ljmp
mov
push
push
jle
mov
popa
insb
lea
leave
pop
inc
jbe
into
mov
jo
inc
fmull
xor
ss
push
popa
mov
inc
and
and
pop
sub
out
add
jns
dec
ds
testb
mov
popf
rclb
in
ret
rcrl
lods
iret
scas
lds
jg
inc
add
xorl
mov
or
insl
movsl
dec
fst
and
xchg
jo
or
sbb
mov
dec
test
dec
test
adc
stos
xchg
pop
repnz
sub
mov
xchg
mov
int3
pop
inc
inc
sub
jecxz
lahf
daa
loopne
std
nop
pop
clc
repnz
ficoms
cmpsb
mov
dec
fcomip
pop
push
lods
pop
mov
push
dec
loop
mov
sub
mov
js
in
xchg
ja
inc
xor
sub
shlb
fxch
mov
pop
adc
adc
pop
lahf
xor
xchg
or
orb
test
mov
push
dec
mov
add
mov
int3
into
stc
repnz
or
loope
xchg
xlat
pop
sub
leave
sti
jbe
cmp
fstps
andl
loopne
or
push
pop
xchg
test
aad
pop
dec
ja
inc
sbbl
mov
add
and
xchg
xor
jae
push
andl
shlb
sub
xor
xor
lock
sbb
daa
add
sbb
cltd
push
xchg
movsl
inc
pop
icebp
push
lods
or
mov
bound
jns
fwait
mov
jae
lea
fcmovbe
imul
mov
adc
mov
push
outsl
fidivs
mov
push
push
lahf
aad
lret
ja
testl
mov
jns
inc
sahf
jnp
push
shll
movsl
push
enter
inc
aas
xchg
inc
gs
mov
mov
insb
jns
popf
ds
or
pop
mov
add
ret
mov
hlt
push
cmp
test
in
mov
xor
jge
mov
push
mov
jle
mov
pop
test
xor
in
test
fidivrs
scas
sub
lds
in
stc
decb
addps
mov
sub
mov
adc
xlat
xor
and
decb
adc
fwait
mov
daa
test
imull
xchg
inc
add
adc
in
pushf
nop
sti
out
add
or
arpl
out
aas
push
aam
jmp
xor
adc
mov
lea
xchg
rclb
mov
push
cmp
inc
int3
inc
dec
lods
in
mov
fcomps
push
test
aas
dec
jns
vpaddusb
add
mov
xor
add
sahf
sti
and
push
sbb
in
cmp
pop
int
sbb
jo
push
inc
fnstenv
jecxz
add
ljmp
fbld
fistl
mov
in
jno
mov
sub
in
cld
outsl
fisubrl
dec
cld
jno
or
ret
in
stos
loope
dec
movsb
int
sub
ljmp
cld
sbb
sbb
xchg
pop
push
loope
popa
and
inc
push
cmpsb
add
mov
mov
lock
xchg
fsub
and
mov
daa
sub
aam
xlat
loop
cmp
out
das
sub
andb
lea
das
roll
dec
or
ja
cmpsl
mov
jmp
sub
pop
popf
push
lds
mov
rcrb
sub
inc
cld
mov
in
dec
dec
clc
pop
cwtl
int
fisubrs
pop
out
mov
addr16
int3
sbb
jns
and
pusha
std
insl
in
jnp
mul
fwait
jno
sbb
dec
mov
jno
es
scas
iret
push
xchg
lahf
mov
ss
and
adc
add
dec
jnp
push
cwtl
push
mov
pop
or
pop
jb
aaa
add
pop
add
and
mov
fdivp
scas
xor
jmp
jns
std
mov
xchg
inc
je
fsts
or
outsl
icebp
arpl
lret
ret
dec
repz
pop
andb
mov
dec
rorl
popf
cmp
sub
and
xlat
rcll
rolb
stos
mov
dec
or
outsb
push
pop
lret
dec
cwtl
push
aad
mov
aad
jbe
aas
jg
or
pop
cmp
fmull
pop
das
jge
outsl
movsb
enter
adc
shll
inc
xorb
std
cmp
inc
push
pop
cmp
jle
pop
lret
push
repz
imul
push
mov
imul
push
hlt
adc
pop
sbb
imul
fnstenv
sarl
dec
mov
jo
insb
push
xor
dec
jnp
jnp
xchg
aaa
insb
subl
js
fs
push
not
xor
xchg
pop
aad
pushf
pushf
dec
adc
mov
push
in
mov
mov
xor
xorl
push
inc
test
pop
add
mov
push
shll
push
mov
sti
adc
subl
leave
cmp
jbe
xor
adc
arpl
xchg
fs
xor
mov
cld
and
jbe
popf
push
and
out
scas
push
or
xchg
inc
sbb
scas
insl
jnp
imul
mov
sub
repnz
movb
clc
xchg
mov
adcl
sub
sar
mov
xchg
sbb
aaa
xor
insb
int3
enter
mov
adc
push
mov
addr16
cmp
data16
pop
cmp
lods
jmp
movsl
clc
sub
mov
test
sarl
out
into
sbb
dec
repnz
cmpsl
push
cmp
add
push
sub
mov
mov
ss
xlat
xchg
in
pop
mov
stc
mov
mov
inc
sahf
aam
pop
pop
xchg
es
notl
fwait
cmpsl
jno
rclb
xchg
jg
hlt
sar
ret
pop
dec
mov
cmpsl
add
add
mov
mov
out
or
push
mov
clc
ss
arpl
pop
adc
push
cmc
xor
ja
xor
mov
sub
adc
data16
dec
xchg
das
fwait
cmp
fdivs
pushf
mov
test
sti
cmp
adc
fdivrs
mov
xchg
pushf
mov
xlat
dec
mov
pop
stos
fisttps
cmp
add
clc
into
fimuls
push
and
imul
sbb
negl
cmc
mov
sub
aas
cld
pop
pop
fbld
addr16
fidivs
add
imull
and
aas
stc
mov
mov
les
mov
dec
js
mov
jno
cmp
xchg
sub
int3
fwait
pop
shll
fisttps
or
mov
stos
and
or
loop
sub
push
pop
mov
mov
repz
popa
in
std
add
sti
sbb
mov
insl
and
xchg
mov
pusha
and
clc
sub
mov
mov
sbb
ss
jle
jb
sub
daa
outsl
xchg
jae
nop
push
and
push
cmc
add
sub
popf
xor
loop
ret
dec
jle
adc
movsl
movsb
push
aas
out
lcall
fisttps
lret
adcl
lea
int
xchg
aad
mov
adc
mov
into
and
push
xor
and
rcrb
sbb
and
jns
mov
and
xchg
and
movsb
stos
cmp
lahf
mov
sub
cmc
int
mov
xchg
mov
shl
pop
adc
add
sbb
cmc
push
and
leave
jl
jnp
ljmp
arpl
out
pop
jmp
imul
loop
scas
adc
xor
aaa
cmp
jg
push
mulb
aaa
or
adc
xchg
fdiv
cmp
aas
popa
xchg
push
mov
scas
pop
dec
repz
cmpsb
dec
aas
cs
shll
and
xor
aas
stc
and
adcl
daa
imul
inc
imul
fisttps
out
aad
ss
aad
das
out
stos
fwait
xor
call
cltd
addl
push
jo
sbb
inc
and
stc
insl
push
test
push
push
sub
and
lds
cmp
xor
sub
shrb
in
cmp
cld
and
aam
adc
jnp
lcall
orl
loope
cli
aaa
mov
push
xchg
clc
fldt
fdiv
mov
jmp
xor
mov
push
push
call
icebp
mov
fs
std
jmp
jg
add
xorb
imul
pop
aas
scas
movsl
or
and
or
pushf
dec
orb
xchg
in
shll
xchg
inc
mov
mov
sbb
pop
adc
mov
in
cmpsl
shll
cs
pop
lock
fwait
add
pop
or
and
sub
and
stc
into
loope
lock
xor
mov
and
hlt
add
sbb
stos
xchg
lret
jne
push
sub
jbe
xor
push
mov
pop
push
aam
test
sti
das
test
lret
add
scas
jmp
jae
movsb
hlt
stos
insb
mov
mov
or
inc
sbb
stc
dec
and
pop
mov
jne
repnz
cs
jae
lcall
adc
fwait
das
fnstenv
and
inc
or
mov
or
fwait
in
jge
mov
or
shr
daa
outsb
fnstcw
cld
sbb
jp
push
sub
pop
idivb
out
leave
push
pop
test
pop
ss
inc
adc
pop
push
popf
sbb
push
aas
vminsd
in
jnp
outsb
shll
jns
pop
fs
inc
and
dec
call
sub
les
cmp
fistl
repnz
int
sahf
mov
cli
stc
add
add
cltd
mul
sbb
lret
dec
data16
push
xchg
jae
lods
dec
int
pop
push
sub
sub
in
aaa
repz
add
add
add
jp
push
popa
jp
out
iret
insl
in
out
stc
or
pop
adc
cmp
sub
mov
xor
jl
lea
sbb
and
movsl
pop
lret
sbb
lock
pop
int3
mov
lcall
out
fisubl
inc
jns
dec
iret
mov
fs
push
leave
int3
lods
ret
stos
in
jo
outsb
pushf
sbb
mov
dec
dec
sbb
or
add
push
fdiv
inc
hlt
adcb
sub
push
fistl
pop
adc
fisubrs
ds
push
sub
inc
mov
repnz
je
sub
or
and
push
rolb
leave
jno
flds
sub
repz
addb
loopne
icebp
and
fistpl
pop
ret
mov
or
adc
mov
cli
pushf
inc
xchg
and
cmpsb
push
fistl
sub
test
xchg
shl
or
add
clc
mov
and
add
mov
ficompl
fmull
imul
ss
repz
jg
movsl
pop
add
mov
nop
push
mov
rorb
arpl
sbb
cld
jnp
insl
sbb
in
xchg
fwait
cmp
ljmp
lods
adc
pop
pushf
or
ret
sub
lret
lods
push
mov
jae
test
xchg
int3
mov
mov
int
inc
lahf
leave
cs
es
pop
jns
std
hlt
mov
je
and
fsubl
and
ret
sbb
dec
mov
js
outsl
mov
sarl
or
out
sbb
dec
cmpsl
sub
fs
adc
in
fsts
inc
and
xchg
js
mov
add
outsl
std
mov
cmpl
fcomip
pop
push
paddb
sti
dec
jo
mov
shlb
sub
sbb
int3
movsb
imul
test
into
xor
std
fwait
subb
pop
fstpt
out
pushf
insb
xlat
mov
loope
dec
pop
decl
out
pusha
loope
cltd
sahf
stos
dec
push
mov
add
lods
adc
and
add
jle
mov
out
mov
lods
repnz
iret
mov
test
imull
fs
stos
mov
dec
repz
jae
lea
test
aad
mov
and
cmc
sti
xor
ss
out
js
jb
add
ficoms
or
add
mov
push
sahf
setno
ret
imul
roll
push
test
sbb
lret
fs
cmp
sbb
repnz
lock
sub
sub
jae
int
cmp
inc
lcall
movb
stc
pop
js
repnz
mov
fwait
ss
dec
fists
mull
push
sub
xor
pop
sti
or
push
adc
push
jecxz
push
fstl
imul
stos
sti
add
xchg
sbb
push
push
daa
les
cmpsb
movsl
cmp
popa
dec
xlat
sbb
push
decl
aas
cmpsl
aaa
adc
and
cmp
popa
push
ljmp
in
jmp
fwait
loopne
rcrb
icebp
push
sub
sbb
mov
mov
xchg
xchg
adc
dec
push
push
jb
push
sbb
aas
mov
mov
dec
xchg
add
movl
mov
in
mov
fs
and
movsb
psubusb
mov
push
shl
daa
pusha
incl
and
outsl
ficompl
mov
fidivs
mov
sbb
add
mov
sub
shlb
aaa
push
adc
add
test
scas
mov
mov
fldenv
scas
jl
nop
push
es
push
xchg
icebp
xor
ja
inc
xor
cmp
cwtl
pop
fists
str
pop
cmpsl
sarl
fcos
or
pop
ja
cs
shlb
movsb
out
sbb
shl
cmc
inc
fdivrs
fcmovu
lds
jmp
xchg
sbb
lock
add
fldl
nop
aas
xchg
cltd
out
pop
adc
dec
xor
jbe
push
mov
aam
fcmovnu
jae
jg
or
sbb
pcmpeqw
mov
mov
inc
rcrl
pop
pushl
frstor
pop
add
sahf
mov
shrb
adc
negl
outsb
rorl
fs
jno
adc
incb
test
outsb
fwait
push
xchg
inc
out
push
add
pop
mov
xlat
es
lds
xlat
or
fnsave
cmp
xor
or
loopne
icebp
mov
pusha
dec
push
adc
ljmp
push
mov
repnz
pop
out
jmp
add
repz
jmp
mov
daa
fwait
mov
pop
adc
mov
stos
fildl
add
fsubrp
dec
daa
les
fdivrs
mov
mov
repz
jae
xor
in
push
push
nop
push
js
jno
inc
or
xchg
loopne
mov
push
sub
sbb
dec
insl
add
sahf
int3
lahf
out
inc
xor
mov
scas
mov
cmp
cmp
ja
faddl
cmp
pusha
mov
inc
xchg
mov
aaa
sti
arpl
aaa
bnd
fs
xor
push
lahf
mov
cmp
es
shlb
adc
dec
cwtl
cmp
in
fnstenv
lret
imul
mov
dec
insb
ljmp
ds
test
hlt
pop
call
mov
cmp
lds
mov
test
lahf
sub
jge
mov
cmp
sbb
out
mov
add
into
sti
add
mov
gs
pop
push
fmuls
int3
mov
pop
mov
xchg
fwait
cmp
and
das
fstpl
add
push
popf
xor
xor
fstpl
jle
lahf
mov
jecxz
push
sub
xchg
sub
push
pop
fwait
xlat
push
jecxz
pop
jnp
scas
adc
sarb
mov
sub
fsubrl
pop
cmp
daa
sbb
das
fdivl
xchg
pop
cmp
push
movsb
mov
out
adc
lahf
push
or
test
push
mov
xor
push
outsl
pop
shr
pushl
ret
mov
mov
push
xor
lds
lret
sti
gs
cld
mov
inc
mov
lea
pushl
pop
jbe
lret
icebp
adc
lahf
xchg
add
ds
pop
movsl
mov
cmp
mov
or
jp
adc
pushf
mov
gs
add
scas
mov
fildll
xchg
xchg
lock
cli
mov
gs
js
xchg
fsub
mov
cmpb
pop
mov
and
add
into
add
test
test
nop
mov
dec
cltd
mov
push
add
out
jnp
mov
or
clc
stc
push
test
ret
xor
adc
mov
mov
ret
fdivl
or
and
push
pop
adc
popf
mov
pop
rcrb
rcrl
arpl
add
xchg
push
pop
add
add
popf
outsl
jbe
jo
into
test
adc
arpl
dec
mov
and
repz
cld
test
imul
push
sbb
daa
xchg
push
sti
jb
loope
push
cwtl
clc
pop
pop
sbb
js
cmp
or
push
cmp
jle
imul
inc
pop
pop
ficoms
roll
mov
lea
cmp
mov
xor
push
and
or
inc
dec
xchg
push
xchg
dec
loop
sti
js
push
frstor
inc
push
push
mov
mov
jl
ja
test
pop
jb
jmp
mov
pop
sub
adc
cmpsb
inc
outsl
xchg
mov
pop
push
sub
daa
in
mov
aad
and
xchg
test
scas
sbb
mov
cmp
lret
ret
aam
add
push
adc
inc
dec
xchg
popf
xor
xchg
mov
push
in
daa
sbb
adc
out
sbb
andl
xchg
in
scas
out
fsubl
fisubl
stc
sub
mov
cltd
popa
and
jb,pt
push
cmpsl
inc
cltd
add
jmp
cs
adc
xor
lds
cmp
ljmp
ja
jno
jecxz
pop
mov
repnz
jbe
fildll
lods
pushf
sarb
movsl
fnsetpm(287
and
add
push
add
out
popf
fs
sbb
mov
lret
in
push
cltd
das
fsubrs
jnp
mov
and
pop
mov
scas
stos
outsb
dec
pop
mov
aas
cwtl
out
cmc
mov
mov
into
dec
hlt
jmp
add
add
jns
aas
loop
xor
icebp
and
pop
mov
cltd
movsb
int3
push
xor
mov
mov
mov
ss
mov
adc
test
cmp
or
sbb
ljmp
dec
push
enter
aad
cmp
sub
ret
ret
das
dec
cs
andnps
jge
pop
scas
lods
pusha
push
push
ds
push
or
out
clc
movsb
pop
std
bound
push
lods
hlt
xchg
insl
pop
lret
outsl
out
xchg
or
mov
xchg
das
int
hlt
mov
ljmp
add
fdivrl
mov
clc
enter
jmp
sahf
das
mov
lret
in
xor
sbb
or
lock
xchg
pop
fwait
pop
sub
out
cmp
jg
imul
addr16
xor
jg
push
push
and
mov
loope
pop
gs
jb
mov
arpl
call
lds
hlt
mov
cld
sbb
inc
mov
ds
or
push
incb
xor
and
int
into
popf
icebp
cmp
test
jg
lds
ljmp
xor
mov
imul
mov
sbb
xchg
popf
ljmp
sar
adc
cmpl
jp
xchg
inc
or
mov
sub
shl
mov
cmp
sbb
lds
in
aam
popa
popa
enter
or
je
adc
xor
in
cmpsb
test
sub
pop
and
cmp
jo
dec
inc
fisttps
pop
ret
dec
or
adc
jg
jne
lcall
and
shr
lret
out
pop
jae
jbe
andl
cmpl
lahf
xor
mov
push
jp
mov
pop
in
sub
jne
jns
loopne
sarl
repnz
scas
push
mov
jns
jge
xor
adcb
xchg
and
es
mov
dec
aas
cltd
cltd
icebp
xchg
sub
iret
lods
inc
lock
cwtl
cmpsl
push
imul
rcl
xchg
mov
cmpsl
or
in
push
inc
dec
das
fstpt
xchg
test
jbe
cli
mov
add
push
mov
dec
pop
adc
fstpl
xchg
push
lcall
insb
aaa
lret
aaa
or
cltd
mov
insb
lock
jl
std
add
cmp
in
sub
cmc
test
jns
dec
fldl
cmp
aad
mov
xor
shll
push
jecxz
mov
fcmovne
mov
imul
mov
leave
test
lcall
neg
pop
cmp
add
dec
repz
adc
test
clc
test
ss
popa
popa
mov
xlat
gs
jmp
cmpsl
pop
stc
xorb
insb
enter
call
jmp
retw
test
push
mov
cmp
jle
pushf
mov
shl
mov
js
mov
ret
adcl
ret
jno
stos
lea
cltd
shrb
das
pop
sbb
out
push
fidivs
xor
gs
rorl
dec
leave
cld
repnz
mov
jge
fcmovbe
jp
jb
adc
add
sbb
push
in
fs
mov
or
adc
pop
or
mov
pusha
sub
inc
test
dec
enter
shlb
fadd
iret
outsb
push
dec
test
xchg
pop
mov
mov
adc
push
movsl
inc
arpl
loop
sbb
aaa
mov
cld
jne
fwait
mov
sub
lods
scas
cs
popa
pop
or
lock
mov
cmp
ss
sub
leave
repnz
insl
pop
dec
mov
pop
and
dec
shll
test
add
cmp
out
pop
sbb
sub
or
push
test
dec
push
adcb
mov
mov
inc
stos
arpl
cmc
jl
dec
dec
cmc
or
das
pop
popf
ja
dec
in
out
lret
mov
pop
je
insl
push
cmc
dec
pop
mov
out
pop
adc
and
daa
jbe
mov
add
mov
lret
xorl
mov
sub
and
cmp
mov
xchg
into
out
lods
push
adc
pop
scas
je
mov
cmp
std
roll
arpl
test
jb
inc
popf
mov
jl
jae
movb
jp
mov
push
xor
mov
push
jae
into
or
and
fisttpll
mov
imul
xchg
gs
fxch
push
mov
cld
inc
jl
or
inc
dec
mov
ss
mov
pusha
mov
add
inc
loopne
shlb
or
cmp
dec
add
or
mov
mov
push
scas
testb
std
mov
dec
push
or
pop
xor
adc
mov
popf
mov
cmpsb
cli
inc
shrl
scas
cmpsb
fistl
enter
cwtl
cmp
pop
fwait
and
popa
xchg
pusha
mov
push
xor
xor
lods
xchg
add
xor
ret
add
imul
iret
push
movsl
fisubl
lcall
inc
mov
and
sub
loope
cmp
jge
out
cmpsb
add
dec
loop
cld
or
pop
rorl
pop
ret
pusha
shlb
bound
sbb
sbb
aad
aad
or
xadd
cmp
xchg
push
out
inc
push
jns
gs
fwait
pop
loopne
mov
test
push
ljmp
test
sahf
and
and
in
imulb
mov
sbb
cwtl
mov
jle
test
pusha
sbbl
mov
sahf
test
int3
dec
lods
data16
cmp
movsb
jle
fildll
xchg
dec
les
mov
push
mov
test
lcall
jne
mov
add
sahf
cmp
mov
jae
ror
aaa
rorl
or
popf
stc
mov
mov
and
or
mov
les
sub
ljmp
repz
out
inc
xor
lahf
lods
in
xor
adc
xchg
or
jnp
mov
stos
ja
push
stos
inc
mov
lods
jnp
and
or
clc
dec
sub
loopne
orb
repnz
das
mov
push
jo
lcall
mov
or
loope
xor
jmp
inc
push
and
popf
pop
mov
jb
push
scas
xor
dec
divl
dec
fs
and
sub
add
jo
scas
or
mov
xor
mov
lcall
jmp
mov
call
in
xor
shlb
je
mov
fcomp
or
xchg
dec
add
add
adc
mov
push
pop
imul
pusha
adc
or
loope
mov
and
ja
jmp
cli
jns
push
loop
or
ss
scas
sub
adc
xor
mov
inc
push
cmp
lods
lods
cmc
jle
shll
jns
or
push
lock
xor
jnp
clc
leave
dec
cltd
xchg
xchg
cmp
out
or
aad
sub
fwait
cwtl
out
and
lahf
jmp
xchg
js
xchg
and
fidivl
insl
daa
aas
aas
lahf
jp
outsb
and
loope
mov
sub
adc
adc
popa
adc
cmpsl
leave
data16
js
icebp
pusha
or
inc
xor
xor
orl
push
inc
xchg
xchg
sbb
lcall
mov
fcoml
push
push
int
repnz
push
adc
mov
add
das
pop
push
mov
cld
and
out
mov
dec
inc
int3
idivl
xor
add
lcall
cld
add
adc
inc
push
push
xchg
push
push
fstl
stos
idivb
push
sbb
mov
fdivr
outsl
fstpt
out
push
push
add
or
adc
mov
in
pop
push
call
jne
mov
cld
push
in
add
mov
stc
out
in
fdivp
push
movsl
scas
addr16
gs
pusha
mov
and
dec
loopne
enter
fstp
outsb
inc
cmp
jecxz
out
aam
and
les
shlb
cmp
loope
add
dec
dec
out
mov
iret
insb
imul
or
test
dec
jbe
mov
ds
push
jge
lcall
in
cmp
lahf
bound
js
jecxz
rol
stos
mov
push
lock
pop
sub
int3
xchg
movsb
sbb
imulb
stc
loope
jmp
push
rorb
mov
sahf
xor
dec
adc
jl
cmp
xchg
xchg
jae
push
inc
in
fsubrs
xor
mov
mov
push
loop
adc
cmp
shr
xor
scas
dec
movsb
loope
mov
jns
pop
sar
sarl
pop
and
dec
or
jge
jbe
cmp
cwtl
or
push
enter
xor
xchg
lcall
mov
out
nop
mov
aaa
addr16
lcall
fidivrl
adc
test
ss
and
jnp
out
mov
inc
cmp
rolb
mov
xor
pushl
out
cmpsl
inc
inc
shlb
xchg
aaa
xlat
mov
pop
adc
mov
mov
mov
pop
in
stos
mov
aad
pop
adc
jge
dec
adc
lcall
pushf
adcb
push
cs
mov
mov
scas
shr
pop
pusha
sbb
sbb
sahf
iret
xchg
inc
and
nop
fbld
out
sbb
fsub
dec
push
rclb
xchg
nop
mov
test
out
loop
mov
std
jmp
adc
dec
pop
sub
push
cmp
mov
xor
push
cmp
ljmp
std
movsl
int3
sahf
pop
xchg
rcr
das
xor
sbb
adc
xchg
lea
scas
icebp
roll
jmp
dec
lds
nopl
xchg
in
inc
fldt
das
jb
adc
loopne
adc
xor
popf
iret
popf
andl
inc
add
mov
and
jle
sub
movsb
push
inc
insb
pusha
out
xchg
into
push
dec
push
mov
xchg
das
imul
or
xchg
in
pop
mov
cmp
and
fsubs
mov
aas
pushf
mov
xchg
lcall
adc
mov
pushf
sub
push
ds
mov
es
es
mov
and
enter
mov
jne
mov
test
dec
enter
lds
xor
pop
lock
and
xchg
inc
dec
or
or
add
adc
xchg
ret
or
je
loop
push
xor
sub
iret
pusha
cltd
addr16
jmpw
packsswb
int
or
jecxz
inc
lock
hlt
cmc
push
add
push
int3
pop
popf
jg
sub
xor
push
movsl
xchg
fstps
or
fs
stos
loope
pushf
in
mov
pop
mov
icebp
cmp
push
pusha
jmp
mov
or
push
xchg
xor
xchg
mov
out
outsb
shr
or
mov
movsl
add
jne
xor
and
xchg
lds
xor
xor
lods
mov
push
in
adc
or
jmp
mov
call
lods
mov
int
xchg
or
jmp
jl
je
jno
mov
push
mov
add
or
mov
iret
cmp
test
xor
in
xchg
dec
in
cmp
dec
add
push
fsubrl
xor
pop
rol
movsl
push
andb
je
sbbb
imul
jmp
push
imul
out
mov
test
mov
insb
sbb
sub
ret
push
inc
xorl
lea
mov
push
lea
mov
inc
movsb
ret
sbb
sub
inc
fs
jno
enter
pop
stos
jecxz
sti
sbb
scas
btr
xor
sub
pop
cmp
orb
cmp
sahf
inc
push
adc
push
add
jnp
pusha
orb
push
adc
or
mov
push
mov
outsl
shlb
and
cs
xchg
lret
add
mov
scas
fnstsw
mov
mov
test
ret
mov
add
hlt
mov
xor
movsl
sub
stos
pop
cmpsl
pop
jo
shll
jo
inc
outsl
out
decl
dec
fnstcw
jecxz
stos
loop
pop
xor
rolb
movsb
iret
dec
pop
lea
and
jmp
fdivr
call
sbb
push
ja
sbb
hlt
jg
das
test
push
xchg
loope
out
lds
test
mov
pop
xchg
in
aaa
dec
inc
mov
repnz
pop
mov
shll
ja
mov
test
adc
adc
pop
push
ss
iret
cmpb
cmp
sbb
int
and
in
scas
push
push
cmp
pop
fld
xor
push
lcall
sahf
fwait
xchg
test
ret
adc
pop
mov
push
or
out
xor
pop
pop
insl
out
scas
jo
jl
mov
sbb
sbb
ror
xor
inc
call
cltd
stc
gs
cmp
cmovl
xchg
push
xor
xchg
imul
cmp
test
add
std
adc
les
into
addb
shl
cmc
test
sbb
out
or
in
ja
loop
xchg
andb
xchg
popa
add
inc
push
mov
or
cmp
cld
imul
inc
sub
mov
into
repz
and
dec
or
xlat
inc
lds
hlt
jg
icebp
push
cmpsl
or
or
mov
push
add
xchg
mov
sub
adcb
pusha
push
sti
pop
pushl
xchg
test
int3
xchg
adc
js
lock
xchg
xor
cltd
mov
out
adc
gs
fisubrl
pop
adc
imulb
leave
test
jle
insl
push
inc
pusha
shrl
aad
pop
aam
lea
inc
fiadds
cltd
or
xchg
mov
jo
add
dec
movsb
mov
sbb
and
xchg
inc
and
ljmp
jle
or
stc
mov
xchg
push
push
outsb
cmpsl
add
dec
icebp
pop
pop
icebp
or
clc
xchg
mov
dec
aad
into
or
pop
adc
mov
jno
and
movsl
add
pop
or
jbe
jb
sub
fsts
jno
jmp
cmp
cld
cld
outsb
mov
mov
adc
mov
and
push
fsubrp
aaa
push
jno
cli
sbb
xchg
mov
test
stos
mov
out
push
out
gs
jo
lea
sub
jg
mov
pop
dec
push
xchg
nop
in
std
xchg
in
repnz
inc
adc
js
test
icebp
movsb
and
pop
ljmp
out
je
add
sub
sbb
sub
in
insb
ficompl
push
sbb
fdivs
ljmp
mov
outsb
mov
je
lods
xchg
stos
ror
int
sbb
jb
pop
jo
sub
pop
adc
push
adc
sub
add
testb
sbb
mov
push
lds
pop
jp
or
popf
lcall
lods
pop
inc
stos
flds
inc
cmc
xchg
loope
icebp
xchg
xchg
inc
jbe
sub
push
mov
xor
add
shrl
lods
xor
dec
mov
outsb
cmp
loopew
cltd
mov
and
pop
cmpl
stos
insb
sbb
fnstsw
sbb
in
cld
push
cmc
cmp
push
or
inc
push
dec
insl
mov
xchg
mov
vmwrite
lret
sub
sbb
cmc
aas
aas
dec
push
cmp
xchg
and
and
push
lds
or
pop
cmp
test
jl
push
cmp
mov
loop
cli
dec
mov
out
filds
pop
pop
cmpsb
jb
loop
adc
adc
jno
ds
lea
xchg
and
cwtl
daa
xchg
pushf
stos
and
inc
mov
lds
pop
idivb
mov
stos
lahf
test
mov
dec
jns
lods
fs
pop
jecxz
dec
inc
stc
fwait
sub
mov
repnz
aas
mov
jmp
adc
adc
jmp
jmp
lods
das
sbb
sti
out
iret
ret
stos
jb
movsb
jge
out
push
add
shlb
jns
inc
arpl
fwait
mov
movsb
sub
movsl
into
pushf
sti
test
mov
jmp
int
jnp
sbb
pop
stos
mov
insl
aad
ret
fstpl
xchg
dec
sbb
inc
mov
jge
mov
scas
xchg
jo
data16
in
cmc
inc
mov
mov
inc
cmp
sub
xlat
mov
call
repnz
add
jge
inc
std
stos
and
icebp
sahf
stos
inc
push
popl
lock
add
add
in
jle
aaa
insl
or
cmp
xchg
stos
xchg
mov
pusha
test
inc
xchg
mov
mov
pop
stc
ss
subb
mov
ret
inc
pop
shrl
outsb
fs
or
cmp
ret
push
mov
cwtl
lret
sub
lahf
dec
cmpsb
test
pop
sarb
sub
addr16
mov
mov
shll
and
fldcw
cwtl
cmp
lret
jmp
test
dec
sub
lahf
push
out
jl
nop
inc
clc
jl
ret
or
cmc
enter
icebp
jbe
cmpsb
mov
inc
pop
xchg
mov
bound
sub
loop
add
rcr
pop
lods
sbb
popf
lea
sahf
mov
in
jno
rorb
dec
mull
inc
xor
insl
lcall
jecxz
xchg
dec
mov
cli
push
xchg
xchg
aam
jo
xlat
lret
std
insb
add
clc
fcoml
sarl
pop
mov
jle
movsb
pop
pop
push
jbe
inc
rcl
scas
insl
inc
jo
insl
pop
lods
insb
or
fsubs
aad
sbb
out
sbb
adc
adc
push
cmp
xor
sbb
pop
jmp
mov
pop
push
sub
adc
pop
add
adc
testl
lcall
out
in
repnz
mov
mov
mov
xchg
lods
xlat
mov
jb
xor
lock
add
jge
insb
idivl
int3
lret
mov
pop
rcrb
jecxz
ss
add
xchg
push
push
leave
shll
js
add
dec
notb
push
das
push
lods
lret
repnz
pop
inc
pop
mov
dec
shlb
mov
adc
and
push
and
and
push
mov
lods
cmp
jmp
stos
in
xor
push
cmpsl
mov
fisttpl
push
into
dec
and
or
test
push
xchg
iret
addr16
add
fnstcw
mov
cld
iret
movsl
cmp
add
mov
xchg
hlt
pop
adcl
sub
sub
inc
mov
mov
cli
test
pusha
push
push
out
inc
sbb
xchg
mov
fcomp
xor
jg
movsb
testb
mov
gs
mov
and
sbb
jae
or
movsl
fdivrp
jbe
mov
sarl
loopne
rcrb
and
or
into
arpl
lods
out
test
pop
popf
and
jns
jbe
xchg
movsl
xorl
dec
outsl
mov
and
cld
dec
clc
mov
mov
ds
movsl
mov
jg
fwait
inc
insb
ljmp
cmc
jmp
jmp
and
rcrl
pop
aaa
mov
int
add
outsb
adc
stc
inc
jp
inc
lcall
adc
ret
sti
mov
scas
loop
lahf
mov
xchg
pushf
cmp
add
cmpsb
pop
add
stos
cmc
fidivrl
jecxz
cmp
pcmpeqw
inc
add
jge
sub
in
fisubrs
ljmp
daa
out
mov
lahf
add
add
aas
mov
sbbb
lahf
dec
shlb
frstor
test
fwait
lret
and
add
mov
scas
fdivl
aam
nop
xchg
and
lahf
bound
aam
or
outsb
adc
mov
nop
scas
loop
fildl
shl
out
fildll
xchg
adc
jb
in
test
cmp
mov
cmp
mov
cld
dec
add
jge
push
rol
mov
and
shrl
sbb
pop
pop
iret
xor
xor
adc
scas
mov
inc
int
or
jae
daa
loopne
push
cmp
sbb
or
ljmp
jns
cwtl
out
sbb
sub
scas
lods
jl
shlb
xchg
inc
clc
xlat
lret
mov
mov
or
mov
cmp
add
pop
lods
inc
pop
pusha
cmp
dec
stos
pusha
lea
xchg
icebp
mov
enter
nop
xor
pop
push
ljmp
xchg
mov
jne
test
xor
jb
or
xchg
and
addb
lods
ss
sub
pop
or
rcrl
xchg
push
dec
push
insb
sti
mov
xchg
xchg
imul
fcompl
lcall
xchg
cltd
and
lret
in
popf
jae
xor
dec
cmp
xchg
js
repz
inc
cmp
outsb
enter
movsb
aas
mov
out
jmp
adc
or
jg
pop
and
xchg
mov
lock
adc
stos
cmp
cli
or
ficompl
aam
pop
lods
roll
fdivp
cltd
mov
lods
or
or
sbb
andb
pop
dec
fwait
std
inc
jae
adc
add
mov
int
jae
rcr
xor
push
pop
fs
add
adc
mov
sbb
fdivs
shlb
add
addr16
mov
sbb
cmc
cli
stos
mov
cmp
add
loope
xor
icebp
pop
jb
scas
cmpl
and
lock
pop
mov
ret
mov
cmpsb
adc
data16
imulb
sbb
sub
lret
daa
xchg
stos
jne
sbb
adc
fcoms
imull
lds
xchg
clc
jb
and
or
push
add
pop
or
clc
int3
xchg
cmp
adc
test
stos
or
adc
jns
jecxz
xor
pop
mov
in
int3
lods
lret
and
jno
pop
mov
jnp
inc
or
repnz
push
movsb
push
imul
mov
pop
gs
cld
pop
test
cmpsb
fldt
bound
dec
addr16
in
and
mov
stos
insb
or
xor
dec
and
mov
jb
xchg
dec
cld
mov
push
arpl
adc
cmpsb
and
ret
jp,pt
fsubp
nop
sub
icebp
lret
sbb
mul
and
sbb
xchg
insl
cs
or
repnz
aas
fidivrs
sub
or
dec
pop
les
pop
test
das
pop
das
pop
pushf
out
dec
jmp
ror
add
rcl
dec
addr16
in
loope
rcl
xor
rcl
jne
or
xchg
mov
adc
xchg
in
sub
sub
js
xlat
push
or
jp
add
mov
imul
out
cmp
xor
popa
fnstcw
push
out
fwait
cmp
mov
call
xorl
popa
jge
es
pop
xor
lods
push
push
popa
fs
insb
xchg
imul
int3
jmp
loop
mov
inc
fistpll
int3
mov
or
adc
jno
push
pop
sub
rorl
lea
dec
jno
imul
mov
cld
movsl
in
loopne
scas
push
dec
push
addr16
lock
cmp
jle
sub
mov
dec
push
adc
inc
mov
inc
push
cltd
sbb
push
mov
stos
push
sbb
xlat
test
sahf
ds
xchg
in
add
sbb
sub
data16
je
movsl
push
and
imul
inc
add
sub
insl
jmp
fcmovu
xchg
leave
adc
test
in
add
push
xor
in
faddp
ss
nop
fstps
shll
stc
adc
call
pop
je
inc
jno
clc
mov
xchg
popa
pusha
xor
lret
pop
xchg
mov
jo
xlat
inc
or
cmpsl
enter
mov
fisubs
xor
repnz
sbb
lcall
adc
add
icebp
dec
push
sbb
outsl
and
mov
xchg
gs
mov
popl
fs
es
mov
sbb
cli
pop
jb
loop
stc
inc
loope
mov
pop
push
mov
jecxz
fldl
lret
lret
lcall
rolb
dec
mov
or
leave
mov
cmp
mov
or
lret
enter
stos
loop
inc
fisttps
jecxz
outsl
out
and
outsb
pop
fnstcw
dec
loope
mov
or
jne
sbb
filds
insb
fcomi
lods
inc
enter
clc
lret
and
out
lock
ret
fst
shlb
and
adc
loop
or
dec
add
add
mov
xor
adc
mov
popf
pushf
sub
mov
cli
adc
js
pop
lds
cld
bound
test
cmpsb
mov
mov
mov
sub
add
adc
push
iret
ret
push
fwait
mov
pop
pusha
test
movsb
xor
loope
jp
scas
aad
scas
xchg
sub
out
cs
pop
jmp
jbe
mov
bound
arpl
and
cld
call
in
hlt
cmpsl
popf
pusha
mov
imul
jg
add
cmc
out
repnz
sbb
pop
sbb
rcl
popa
mov
fiaddl
loope
xchg
inc
pop
aad
cli
rolb
or
jecxz
fidivl
mov
adc
repz
and
repz
sbb
or
hlt
add
pop
push
dec
adc
jl
xlat
repz
add
daa
lret
inc
push
sub
movsb
adc
das
call
and
dec
push
popa
daa
push
jbe
repz
push
imul
push
popa
cmp
lret
lods
sti
xchg
jmp
lcall
ficoms
dec
mov
in
mov
mov
or
pushf
pop
fs
adc
inc
test
loopne
cmpsl
ret
push
cmp
loope
outsl
cmpsb
mov
jnp
mov
push
pop
add
pop
push
imul
lahf
inc
stos
mov
ja
push
fldl
pop
ss
insl
mov
stos
sbb
cltd
mov
adc
rorl
and
lret
xchg
pop
inc
jae
aam
lret
adc
pop
ljmp
inc
sbb
or
or
jb
orl
sub
adc
mov
lods
pusha
adc
rorb
lahf
xlat
mov
sub
mov
dec
je
sub
pop
sarl
pop
or
jns
dec
repnz
lret
ret
fdiv
sbb
aaa
aad
ja
sbb
test
roll
popa
mov
pop
out
sbb
cmpsl
jmp
sub
sbb
es
sahf
fst
adc
ja
mov
xchg
inc
je
icebp
daa
mov
shll
fwait
mov
add
pop
lods
mov
adc
outsb
mov
fidivrs
in
dec
mov
sub
das
mov
test
fucomip
or
ret
cmpb
push
adc
mov
iret
and
ret
notl
push
ror
les
mov
bound
and
daa
pushf
xchg
imul
fists
in
inc
inc
sbb
mov
mov
lea
pop
lods
mov
mov
push
and
outsl
es
test
inc
push
addb
fdivrl
ljmp
loop
add
jl
and
xor
ljmp
and
data16
es
dec
adc
pop
test
inc
inc
mov
loop
jno
jp
mov
sahf
fsts
ret
push
push
pop
or
cmp
xchg
popf
adc
mov
mov
pop
fs
mov
pop
sub
les
and
aaa
enter
jne
mov
or
ds
stc
adc
insl
aad
jo
and
lcall
jne
push
push
in
clc
pusha
and
pop
jl
mov
stos
je
outsl
ljmp
out
ret
xor
sahf
nop
push
mov
inc
je
shlb
rorb
mov
js
adc
insl
mov
sahf
ret
mov
push
dec
jo
iret
movsl
stos
and
cmp
xor
into
adc
mov
insb
js
pop
outsb
sbb
push
hlt
add
push
les
push
sbb
iret
push
push
fsubrs
ret
mov
stc
xchg
aas
loopne
in
ror
loope
xor
and
and
cld
scas
repz
lret
lods
and
decl
incl
andb
adcb
dec
adc
xlat
xchg
js
sbb
sub
jecxz
inc
aas
mov
mov
pop
out
inc
sbb
pop
ja
adc
push
dec
pop
int
lods
pop
lret
pop
or
pop
dec
dec
sub
gs
daa
xor
cs
daa
cmp
out
jle
inc
push
xor
jno
and
jbe
pop
out
pop
add
je
jl
fstpl
hlt
jg
in
cmpsl
bound
fsub
bound
dec
adc
cmp
je
add
lahf
and
loop
jp
add
test
xor
mov
pop
pop
flds
cld
hlt
sub
roll
es
mov
data16
cmc
inc
lahf
dec
ds
nop
sbb
xchg
pusha
jge
sbb
sbb
xor
in
cmp
cmc
out
movsb
ss
fldt
mov
dec
dec
ja
fdivr
jb
sbb
push
js
mov
es
cmp
inc
xor
insl
sbb
lds
pop
arpl
loopne
jl
out
cli
loop
sbb
nop
das
adc
pop
mov
ret
jno
ss
fdivrs
and
jl
xchg
mov
ja
aaa
cmp
popf
ret
cld
pop
decb
scas
pop
in
and
mov
aad
push
loope
in
jl
mov
cmp
inc
dec
push
test
push
or
dec
adc
or
and
fstl
lcall
lods
cmp
das
stos
cltd
dec
aad
sti
xor
ficompl
mov
fs
test
js
cmpsb
and
jmp
inc
cld
and
pushf
fldcw
mov
xchg
lcall
mov
movsb
test
mov
sbb
mov
jnp
lea
insb
pop
fs
loop
sti
testb
lods
lret
movsl
ret
mov
ss
push
push
ja
icebp
cmp
subl
fbld
add
es
test
pop
iret
jecxz
xchg
sbb
adc
cmp
movsb
pop
dec
ds
in
lahf
xor
jno
iret
lock
negl
and
mov
mov
jg
cltd
or
movb
cmp
fisubrl
in
fisubl
jl
fstps
jmp
sbb
sbb
ja
xorb
xchg
push
dec
repnz
pop
mov
mov
clc
mov
adc
fldt
sub
das
lahf
xchg
lret
xchg
xlat
ss
fistpll
dec
xlat
out
test
pop
inc
inc
les
xchg
mov
es
jne
push
jnp
mov
notl
sub
loop
lods
xor
pop
mov
fnstsw
xchg
sbb
scas
stos
and
je
jg
sub
mov
mov
in
fiaddl
es
jbe
out
gs
mov
ss
cmpsl
push
icebp
les
mov
add
out
add
add
stos
hlt
int
mov
test
int3
dec
mov
add
in
push
fdivs
lahf
cmp
stos
jae
fistpl
jmp
incb
mov
cmp
push
inc
inc
or
rcrb
push
stc
jle
mov
out
test
xchg
insl
adcl
cmp
sub
sub
push
jecxz
rcr
out
nop
inc
fwait
shrl
data16
std
mov
icebp
shl
popa
scas
fs
jmp
xor
push
popa
or
jnp
mov
lods
lcall
mov
add
shll
jge
inc
ss
xor
or
dec
dec
mov
sti
ljmp
fld
ret
fcompl
mov
nop
jecxz
inc
inc
dec
ret
jne
push
sahf
sahf
sbb
inc
lahf
or
mov
and
daa
cmp
out
mov
ffree
cld
mov
das
cmp
and
imul
push
add
out
loop
cld
bound
ficompl
cs
lret
xchg
rorl
incl
pop
mov
mov
xchg
sub
lret
push
inc
mov
in
out
sarl
fs
jo
jp
dec
xchg
jae
sti
es
nop
ret
ret
xchg
stos
data16
dec
dec
jo
xchg
sbb
cmp
repnz
add
cmp
cmp
ds
sbb
cmp
push
div
clc
mov
mov
in
jae
test
jo
and
inc
cmp
sti
sarl
lods
in
dec
testb
movsb
imul
cltd
jnp
xchg
xchg
icebp
fmull
into
dec
sarb
jmp
lcall
sahf
sub
push
ss
jo
sbb
push
cmpsb
pop
xchg
adc
call
int3
cmc
popf
roll
in
inc
mov
in
sub
jbe
jnp
popf
cmp
push
push
and
cmpsl
aas
push
cmp
outsl
mov
in
mov
jae
sub
pop
imul
out
mov
push
lcall
pusha
inc
imul
loop
inc
sbb
std
or
add
repnz
add
ss
push
inc
xchg
inc
adc
addr16
xchg
lea
xor
mov
roll
insl
fs
cmp
dec
push
std
insl
dec
insl
push
icebp
movsb
jnp
int
ss
gs
repnz
pop
and
jecxz
insl
enter
jae
std
int
orl
jnp
repz
pop
xlat
xor
out
in
scas
lods
stos
aas
enter
xor
and
pop
xchg
outsl
js
andl
jge
test
or
mov
test
cld
xor
cmp
pop
xor
mov
cmp
int3
or
mov
add
dec
sbb
out
add
rcrl
adc
lahf
jo
lahf
and
ds
sbb
lods
and
adc
push
cli
add
adc
data16
fstl
movsl
pop
and
pop
jle
mov
orb
sahf
xor
cmp
les
lcall
sub
ror
mov
mov
adc
and
sti
adc
pop
or
mov
fisttpl
lcall
call
repz
shl
mov
cwtl
xchg
push
or
das
enter
fcoms
pop
add
test
inc
insb
leave
add
arpl
pop
ss
lock
sar
test
mov
jge
xchg
dec
pop
fnstcw
xchg
scas
aam
xlat
cld
mov
iret
clc
xchg
sar
sub
in
jp
xlat
nop
push
inc
lahf
jp
jg
push
adc
pop
push
mov
pop
sbb
cmp
mov
int3
jns
push
dec
xchg
xchg
sub
and
dec
cs
dec
pop
orb
mov
mov
xchg
mov
aas
cmp
dec
stos
ja
pop
add
in
inc
out
inc
inc
negl
add
sbbl
fldcw
sbb
push
iret
push
ror
mov
jae
js
pop
aad
xor
inc
sbb
shrb
mov
movsl
inc
jl
jo
ret
adc
clc
or
mov
push
xor
xor
inc
lods
pop
xchg
int3
jbe
sub
pop
xchg
jns
pop
or
lock
and
jp
push
fstpl
stos
jne
in
mov
scas
push
add
pushf
adc
jl
dec
out
cwtl
les
adc
nop
rclb
lret
lahf
das
repnz
adc
or
and
enter
inc
cmp
loope
push
mov
cmp
sahf
mov
mov
insl
mov
push
sarl
outsb
out
out
clc
or
pop
cmpsb
inc
out
loop
push
pop
mov
imul
xor
cli
and
rcl
in
adc
cwtl
aaa
aam
xchg
dec
mov
fsubrl
pop
test
ja
adcb
xor
sbb
scas
popf
into
xchg
js
jo
cmc
push
sub
inc
popf
mov
mov
lea
push
xlat
adc
mov
dec
test
inc
nop
cmc
lret
lea
mov
cmpsb
es
inc
xchg
je
stos
sbb
cld
dec
stos
push
rcrl
or
xor
in
jl
lret
lahf
cli
loop
mov
loop
mov
fwait
or
pushw
jb
cs
inc
sub
int3
xor
dec
into
xchg
call
in
add
jnp
outsb
or
rcrb
mov
pushf
aad
shrl
push
pop
outsb
lcall
push
mov
jbe
inc
mov
popf
aad
inc
sub
lret
in
add
fs
cli
push
inc
dec
mov
paddusw
not
lret
fiadds
push
pop
pop
subb
push
stos
es
repz
add
mov
gs
or
mov
ret
in
and
sahf
sti
xor
mov
xor
in
out
sahf
mov
mov
idivb
mov
repz
or
mov
outsb
push
sbb
adc
jp
sti
mov
xchg
add
lock
sahf
arpl
paddb
mov
cmpsb
dec
icebp
sbb
loopne
push
and
imul
aas
dec
sub
fisttpll
repnz
rcrb
pop
sub
cmp
lods
imul
or
add
push
test
push
in
mov
data16
mov
bound
and
dec
shlb
shll
cld
in
out
or
inc
pop
adc
sbb
arpl
mov
outsb
daa
movsl
ret
loope
stos
push
mov
pusha
and
aad
scas
jle
or
sbb
sbb
push
jmp
lret
les
sub
icebp
dec
fwait
out
add
stos
push
jns
jno
mov
xor
add
mov
push
add
cmp
xlat
cltd
cltd
outsl
insb
sbb
in
add
pop
je
and
push
jle
push
xchg
cmpsl
push
xchg
or
scas
inc
jne
pop
inc
orl
push
inc
jp
daa
dec
mov
dec
in
pop
sbb
inc
inc
dec
mov
mov
ret
jne
arpl
hlt
addr16
je
cwtl
dec
popa
out
loop
in
sub
mov
add
mov
dec
mov
xchg
sahf
and
mov
pop
pusha
dec
jnp
insb
cmpsb
inc
sahf
test
lcall
sub
or
icebp
sti
fdivrp
and
xor
fadd
add
js
rcrl
insl
xor
in
pop
sub
xchg
mov
inc
cmp
and
test
enter
daa
scas
inc
adc
sub
pop
mov
jmp
je
or
call
pusha
ljmp
pop
xor
lods
jo
call
movsl
jbe
enter
push
popf
outsb
int3
mov
sub
adc
std
lcall
ffree
mov
push
cmpsl
cmp
or
or
insb
fimuls
lcall
das
jns
in
xor
mov
imulb
xlat
lcall
or
in
jge
ficomps
nop
push
jmp
sbb
lods
pop
xor
into
into
loopne
rcrl
cmp
push
mov
push
ss
imull
fcompl
mov
jge
insl
xorl
rorl
pop
jle
cmpb
inc
sub
push
and
xchg
dec
jne
jmp
push
or
or
rclb
movsl
loopne
jge
and
inc
mov
sbb
cmp
and
sub
shll
test
mov
repnz
push
and
mov
jle
outsb
ss
mov
in
into
inc
inc
and
add
out
or
add
pop
out
dec
xlat
jge
xchg
bnd
data16
shlb
push
das
adc
push
jle
dec
xchg
push
dec
gs
fs
loop
pop
fdivp
xchg
pop
cli
out
add
jmp
sbb
pop
outsb
inc
sub
mov
push
loopne
ret
cld
fs
inc
stos
inc
sahf
popf
dec
ret
insb
mov
xor
clc
mov
cmp
sub
lcall
mov
psrlq
jne
inc
inc
popa
pop
out
or
mov
lods
imul
push
jmp
sar
cmp
jp
movsl
jg
push
inc
xchg
pushf
test
testb
sub
mov
mov
inc
dec
iret
aad
mov
adc
inc
and
sub
lret
and
cmp
or
movsl
mov
xor
pop
fnstsw
xchg
aad
push
lcall
lods
iret
xor
jnp
push
jecxz
shrb
in
cwtl
xor
decb
enter
sbb
xchg
adc
arpl
xor
and
mov
mov
jl
adc
mov
dec
pop
mov
mov
popa
icebp
iret
das
mov
loope
cli
pmaxsw
fld
add
xor
pop
push
and
push
cld
jp
idivb
movsb
jmp
jg
and
jmp
jb
stos
in
inc
sbb
sti
sub
jnp
and
mov
xchg
stc
pop
fisttps
ret
mov
xchg
push
jmp
sar
mov
clc
fwait
js
cli
xchg
out
xchg
add
lahf
inc
lds
jp
fstpl
dec
test
repnz
rcl
nop
pop
fs
push
fsubl
xor
lds
adc
and
cwtl
scas
push
push
out
adc
jp
mov
test
sub
sub
lahf
roll
lds
dec
lds
dec
rcrb
pshufw
aam
popa
dec
dec
or
sub
mov
xchg
iret
testl
or
hlt
sub
out
xchg
mov
pop
lret
fcomps
push
das
cwtl
leave
lmsw
pusha
lea
mov
daa
int3
int
popf
add
and
mov
push
mov
fidivrl
mov
stos
subb
subb
push
lods
mov
nop
adc
and
mov
jno
lret
sub
sarb
les
test
dec
push
inc
xchg
pop
push
push
xchg
sbb
or
decb
std
leave
in
dec
xor
push
inc
cmp
jbe
xor
sub
jmp
pusha
into
sub
or
sub
mov
jae
mov
sub
sbb
jb
cs
cs
out
negb
test
insb
fs
sub
test
push
mov
fstl
outsl
pop
daa
sub
xor
aad
mov
inc
imul
iret
sub
jb
xchg
jbe
sbb
push
aad
mov
push
jmp
push
jle
mov
clc
pop
xor
icebp
shll
int3
mov
arpl
imul
jne
sarb
sub
and
pop
lock
xchg
push
sub
rolb
pushf
scas
push
xchg
out
out
pop
jp
mov
mov
dec
sbb
push
insb
push
pop
pop
dec
mov
dec
mov
inc
movsb
sbb
xchg
fldcw
add
mov
jmp
jae
inc
mov
fnstenv
cmpsb
fldt
fwait
pushf
jno
mov
scas
jbe
mov
xchg
mov
sbb
cld
movsl
stc
jp
sbb
push
es
mov
call
dec
sub
hlt
pop
mov
or
cmp
ja
lea
pop
ret
jo
inc
mov
rsqrtps
fnsave
std
insl
and
test
mov
out
jae
nop
jmp
mov
cmp
mov
jns
xchg
mov
in
inc
xchg
pop
xchg
and
inc
pop
shrb
inc
pop
inc
lea
test
cltd
lock
loop
gs
mov
jmp
movsb
jecxz
jg
inc
fcoms
in
mov
aad
leave
mov
repnz
dec
inc
adc
mov
pusha
jo
xor
xchg
or
jo
pop
mov
ror
test
out
dec
xchg
cmpsb
ffree
push
adc
xor
and
sub
lret
jno
pushf
jnp
clc
stos
sub
jecxz
roll
leave
xchg
push
in
rorb
xor
scas
and
cmp
dec
and
xchg
pop
cmp
ljmp
jns
mov
mov
gs
sub
xor
hlt
jno
xor
push
sub
test
sbb
xchg
adc
hlt
sahf
jg,pn
mov
push
loope
pop
push
mov
dec
add
cs
hlt
scas
mov
leave
push
xchg
enter
cld
cld
clc
inc
xchg
mov
in
pop
mov
cmp
repnz
mov
pushf
ss
dec
outsl
sub
sahf
jbe
mov
sub
cmp
movsb
push
mov
sahf
negb
sbb
mov
int3
push
add
jbe
popf
incl
xchg
sbb
mov
jne
fwait
dec
mov
ds
out
xchg
dec
cmp
pop
xor
mov
jbe
dec
push
mov
js
mov
or
aad
imulb
aas
ds
push
add
test
aaa
cmp
push
ds
inc
xor
mov
std
push
cmp
xchg
add
xor
add
adc
jle
push
inc
or
adc
scas
xor
rcrb
cmp
sbb
cli
insb
adc
fdivr
popl
aam
fcmovnb
lods
pop
add
andl
ret
sbb
in
or
inc
rcr
scas
das
in
imul
sahf
mov
daa
out
addl
xor
mov
callw
inc
inc
pop
insb
fwait
scas
test
push
lret
fldt
mov
aaa
push
mov
jl
sbb
sub
mov
movsb
popl
aam
stc
repnz
int
fisttpll
sbb
test
ficomps
xchg
lcall
pop
jbe
push
or
jo
add
and
out
jbe,pn
jge
lods
addr16
negb
int3
into
mov
into
jg
lret
movsl
pop
call
imul
iret
mov
sub
mov
jo
nop
or
xchg
jae
ret
lea
sbb
add
inc
iret
lret
pop
sub
and
adc
jo
fucomi
add
jbe
mov
sub
mov
xchg
inc
dec
mov
pop
xchg
cmp
ror
aaa
mov
fldcw
mov
add
mov
dec
xchg
push
hlt
stc
fildll
mov
lds
jno
sub
push
int
sub
inc
sub
pop
rcrl
mov
and
shll
xor
push
leave
popl
push
push
cli
xlat
pop
out
add
aam
sbb
inc
stos
lock
dec
inc
out
mov
cmp
adc
pop
jbe
mov
mov
js
scas
or
mov
aam
pop
add
pop
adc
addl
in
adcl
int3
in
push
dec
adc
add
mov
arpl
sysenter
mov
sbb
stc
pop
sbb
sti
xchg
inc
jmp
inc
inc
xchg
and
movsb
mov
xchg
pop
mov
push
adc
mov
xchg
addr16
or
aaa
sbb
sbb
pushf
adc
pop
or
icebp
in
add
sub
jge
hlt
les
xchg
or
push
lock
add
xchg
add
insl
or
xlat
mov
scas
xchg
jb
call
iret
and
sbb
out
mov
in
packssdw
jne
adc
dec
adc
pop
sub
pop
jl
inc
pop
es
xor
fwait
lds
aad
sub
jo
push
insl
movsl
mov
push
addb
les
mov
jnp
cmpsb
sbbb
mov
aaa
fdivs
push
icebp
mov
les
aad
int3
push
push
inc
pop
pushf
push
pop
int
mov
or
jno
inc
xchg
outsb
out
fldenv
mov
jno
rcll
aaa
push
daa
daa
cs
cmpsl
ret
dec
dec
lahf
loop
rcrb
dec
mov
sahf
fwait
popa
daa
sbb
iret
aas
or
clc
and
mov
in
test
xchg
dec
negb
pop
xlat
les
je
cld
popf
test
push
outsl
xchg
add
gs
mov
ljmp
and
cwtl
push
adc
mov
cmp
in
add
mov
jge
daa
mov
or
les
mov
cmp
outsl
iret
sub
aad
cwtl
fidivrs
dec
mov
pop
jmp
or
call
loope
stos
ljmp
stos
test
adc
push
popf
lods
xor
add
int3
adc
ret
xchg
je
cs
loop
aad
mov
mov
pop
mov
mov
or
in
dec
lret
pop
aas
repz
mov
push
out
and
lods
fs
sbb
fmuls
out
lods
negl
lcall
lods
test
inc
fisttps
sbb
jge
leave
mov
mov
sub
adc
enter
adc
sub
jbe
cmp
dec
push
sbb
imul
repz
fwait
ljmp
movsb
lds
inc
dec
cmpsb
das
push
imul
ret
inc
insb
cmpsl
iret
aam
mov
sub
xor
and
sub
add
pop
fcoms
mov
movsb
pop
jmp
dec
cmp
jl
xor
int3
fs
pop
xchg
fmull
jge
push
adc
mov
adc
iret
clc
mov
mov
out
adcl
mov
adc
pop
jl
pop
std
dec
mov
mov
cmp
fnstcw
mov
mov
push
pop
dec
adc
dec
cld
xchg
mov
adc
push
and
repnz
xchg
rorl
cli
or
inc
ret
insl
jmp
xor
inc
xor
sahf
jo
fnsetpm(287
loopne
bnd
mov
xchg
pop
shlb
push
lahf
pop
repz
je
loopne
xchg
pop
mulb
sbb
push
and
icebp
fwait
sbb
jnp
add
movsl
adc
in
pop
dec
nop
lcall
hlt
cld
add
das
push
xor
jecxz
ds
push
pop
push
cmp
roll
ljmp
repz
or
mov
mov
cmp
adc
xchg
or
xor
cmpsb
inc
fs
mov
leave
imul
add
clc
xchg
sti
jae
xchg
or
in
popa
shll
mov
adc
aas
and
dec
dec
push
xor
inc
icebp
sub
cmp
mov
xchg
sub
test
mov
std
test
lret
fimuls
loope
ret
daa
outsl
aas
aad
outsl
aas
shrl
adc
jl
in
mul
scas
mov
popa
dec
jae
int3
icebp
popf
mov
in
inc
and
lock
clc
mov
mov
clc
pop
jnp
dec
adc
add
pop
xchg
push
nop
jp
addr16
ljmp
popa
inc
dec
dec
faddl
movsb
mov
out
xor
mov
and
lods
cmp
jecxz
pusha
pop
in
pusha
pop
lea
pop
lret
xchg
add
in
mov
fisubl
push
fwait
jne
pop
stos
adc
xlat
cmp
jecxz
into
xchg
cmc
out
sbb
sbb
inc
add
inc
xchg
adc
cmpsl
sbb
jb
and
push
adc
cli
ret
das
ret
roll
push
imul
mov
sbb
pushf
sub
sub
cmp
pushf
testl
mov
lret
cmpb
int3
pop
test
pop
xchg
mov
xor
and
lds
lods
jp
clc
gs
outsb
ret
daa
packuswb
decl
aam
add
js
mov
aad
mov
inc
push
add
sahf
inc
pop
int
inc
jp
icebp
movl
rolb
and
push
pop
push
icebp
cwtl
add
dec
sarb
cwtl
outsl
mov
pop
mov
rorb
stos
cmp
sub
jns
out
stos
inc
leave
mov
loop
jo
cwtl
ret
cwtl
push
xchg
mov
mov
dec
imul
lcall
xor
enter
mov
in
inc
adc
cmp
cmp
in
inc
cwtl
dec
leave
fisubrs
jb
cli
adc
xchg
clc
xchg
lds
xor
iret
jge
outsl
call
or
add
push
imul
push
dec
pop
icebp
sahf
push
xchg
aad
sahf
mov
or
in
in
ja
mov
adc
cmpsl
adc
ss
test
or
push
xlat
testb
and
outsl
insl
lods
cmp
or
inc
test
and
sti
gs
lods
xor
and
into
jno
fildll
cmc
aas
or
call
add
mov
dec
push
test
adcb
movsb
ficompl
push
cltd
dec
ret
sub
jae
add
mov
adc
pop
inc
insl
xor
ds
mov
cs
pushf
insb
xchg
dec
testb
mov
add
std
les
push
inc
outsb
sbb
cmpb
cmp
sbb
out
mov
test
int
adc
dec
lcall
push
mov
add
and
inc
push
adcl
repnz
outsl
and
icebp
xor
mov
pushf
fwait
test
and
sbb
cmp
dec
push
into
add
das
mov
pusha
mov
mull
cmpl
loopne
ljmp
pop
sub
fs
lcall
jecxz
test
fistps
sub
xor
sub
stos
push
inc
jbe
shl
mov
or
mov
adc
mov
cmpsb
sbb
mov
xchg
ds
lret
ds
push
arpl
or
pushf
enter
sahf
mov
push
push
popf
in
pop
aad
mov
push
mov
lods
sub
imul
aam
lea
cmp
fst
xchg
loope
incb
add
repnz
scas
nop
ja
jge
mov
dec
call
cld
inc
fcoms
mov
xor
repnz
push
add
imull
jl
js
push
dec
imul
je
pushf
sub
cltd
push
sbb
sbb
dec
movsb
dec
and
mov
mov
cmp
hlt
add
stos
add
jmp
jns
xchg
push
jbe
add
cwtl
les
lock
rcrl
sahf
test
adc
in
add
pop
sti
je
or
push
mov
push
sbb
cli
lcall
xchg
enter
add
push
and
loop
add
sti
test
sub
enter
fcmovnbe
iret
test
dec
insb
scas
test
out
adc
mov
jge
push
ret
and
fsts
push
or
sbb
mov
add
inc
clc
sbb
aaa
fmuls
ljmp
mov
inc
mov
xchg
xlat
cltd
push
push
test
jbe
out
cmc
dec
sub
cmpsb
sahf
xchg
repnz
outsb
inc
cltd
and
mov
repz
push
mull
inc
lahf
pop
in
add
mov
inc
sub
adc
cmp
pop
shrl
lret
fs
jne
lret
aam
or
cmc
cmp
mov
mov
jns
or
add
add
cmp
pop
jnp
sbbl
inc
add
sti
sbb
inc
xor
gs
add
or
jp
pop
sbb
mov
leave
xchg
push
gs
jae
lea
dec
icebp
or
xor
jnp
add
cmp
clc
cld
aaa
gs
cmp
mov
or
dec
popf
pop
lock
add
in
cltd
scas
ficoms
fnstcw
mov
sti
aaa
push
push
jno
data16
add
rcrl
out
hlt
mov
cmp
arpl
mov
fiaddl
mov
jo
out
popa
xor
jnp
push
fdivrs
jbe
and
pop
les
cld
movl
xor
mov
add
arpl
and
int
addl
fldt
addb
pushf
mov
icebp
ljmp
and
mov
cmpsl
push
dec
mov
pushf
xchg
mov
push
pop
fbstp
jne
xor
jne
pop
mov
fcompl
push
jb
sub
jne
pop
xchg
cld
fadds
or
adc
xchg
xchg
jg
pop
addl
add
sub
lods
roll
mulb
not
fdivrl
pcmpeqd
xchg
cmpsl
mov
aas
mov
or
test
sbb
dec
clc
divl
pop
fwait
pop
std
stc
sub
xchg
fdivrl
pop
xchg
icebp
lods
xor
js
inc
loope
mov
cwtl
or
repnz
xchg
cmpl
inc
mov
ljmp
or
clc
jb
cmp
push
jns
or
js
xchg
ret
push
adcl
test
mov
loope
xchg
rcll
imul
xorl
das
mov
sbb
jo
cmp
adc
pop
xor
and
adc
andb
pop
push
lock
add
and
pop
imul
sbb
jns
dec
call
out
pop
sub
jnp
xchg
xor
add
clc
sub
xor
je
jne
mul
shrb
mov
pop
add
cmovl
mov
mov
jno
mov
add
imul
rorl
add
mov
cmc
mov
mov
sbb
cmpsb
xchg
popa
xchg
mov
repz
daa
lds
and
cld
shrb
rcrl
fisubrs
int
testb
xchg
mov
sub
outsb
testb
xor
pop
mov
adc
mov
movsb
out
xchg
sbb
push
add
fcompl
nop
add
jbe
call
std
cltd
push
pop
mov
cli
pop
adc
mov
stc
scas
aam
addr16
cli
in
pusha
push
push
mov
out
cmp
mov
int
lret
insl
xchg
test
sti
popf
or
fstpl
cmp
add
sub
sahf
shl
in
push
jmp
lcall
cmp
cmp
jecxz
cmpsl
and
scas
adc
mov
adc
jl
lea
push
into
lds
jmp
or
xchg
xchg
into
pop
push
push
repnz
lcall
cmp
push
dec
ret
inc
out
scas
jg
jno
movl
stc
lock
pop
mov
pop
cmp
lret
pop
dec
incl
data16
adc
xorb
popf
clc
lea
in
popf
cmp
dec
lds
cli
scas
pop
cmc
aad
mov
jo
pop
add
and
mov
mov
cmpsb
mov
and
xchg
lds
mov
clc
scas
repz
out
lods
cmp
lret
dec
aas
out
in
loop
adcb
fwait
add
sbb
popa
loop
dec
pushf
lods
inc
and
test
aaa
dec
sbb
aaa
lock
mov
test
daa
in
je
dec
imul
mov
out
movsb
popl
idivb
shlb
jo
movsb
bound
stos
mov
jb
or
out
sahf
jmp
out
outsl
cmpsb
mov
fdivrl
cmpsb
jecxz
cmc
sub
mov
jmp
es
sbb
mov
out
daa
shrb
int3
sbb
sbbl
jno
fldcw
add
cwtl
cmp
cli
stos
add
pop
mov
jp
xchg
sub
das
std
test
sbb
cmpsl
test
mov
dec
mov
sti
das
ret
push
mov
loop
pop
ds
fldt
shlb
xchg
mov
xchg
movsl
and
test
or
push
mov
ds
dec
out
jecxz
insl
pop
inc
fisubl
push
and
and
mov
out
sub
jge
test
sub
mov
mov
lods
rorl
dec
mov
mov
fcomi
scas
lret
or
jp
xor
or
loope
adc
adc
mov
pushw
hlt
or
pop
es
inc
and
icebp
and
xchg
stos
shl
repz
jge
sbb
pop
in
xor
sbb
inc
aam
xchg
lea
xor
cmp
push
das
or
ljmp
mov
int
and
lds
sbb
mov
push
cmc
je
pop
mov
xchg
outsl
and
les
notb
and
sbb
mov
inc
cmp
call
jbe
mov
mov
gs
call
shlb
inc
mov
imul
sub
int
nop
rcrl
subl
xor
orl
mov
out
ljmp
add
mov
mov
sub
pop
cwtl
popf
inc
cmpsb
int3
jno
int
scas
test
adc
sbb
mov
add
movsb
lods
or
or
xchg
fdivp
jg
das
inc
pop
add
pusha
repnz
push
cmpsl
and
push
or
inc
ja
sti
pop
jb
pop
das
lret
jmp
inc
mov
xor
add
vdivps
aaa
test
cld
pop
out
mov
pushw
mov
mov
add
jo
icebp
pusha
push
inc
stos
cmpsb
xchg
mov
inc
fs
add
out
daa
in
int
and
mov
dec
out
test
mov
cltd
scas
pop
jb
vpunpckhdq
sub
lods
xchg
lret
fiaddl
imull
mov
aam
mov
sub
dec
inc
mov
fwait
sub
nop
mov
push
or
jne
xchg
pop
pop
repz
je
jbe
add
jae
rcrl
ret
mov
sarb
adc
fwait
sahf
sbb
setne
das
xor
fldt
pop
and
sbb
sahf
leave
pop
data16
rcrb
popf
push
cmp
or
mov
imull
mov
int
sbb
das
out
jno
sub
mov
inc
xor
cld
test
lahf
in
xor
pop
ja
sbb
mov
jnp
cmp
mov
cld
ret
pop
test
call
dec
clc
pop
xchg
lods
mov
sbb
ficoml
das
cmc
imul
fdivs
xchg
add
jo
pop
scas
mov
cltd
stos
cltd
addr16
mov
mov
add
shl
or
xchg
or
int
inc
cmp
jo
lcall
mov
dec
jp
scas
push
fsts
jmp
shr
lock
movsb
fildll
scas
inc
call
shl
jae
sbb
out
stos
push
jae
and
in
cs
dec
mov
or
das
jmp
pop
xor
push
pop
push
pop
push
test
je
jno
or
pushf
scas
rcr
lock
das
push
jg
jle
xor
cwtl
or
jp
or
sbb
pop
imul
add
cmp
idiv
fcoml
adc
in
ret
pop
sti
or
jbe
enter
mov
cmpsb
sbb
scas
push
jmp
jecxz
jecxz
insb
adc
fadd
cltd
xor
adc
popa
test
pushf
lds
dec
xchg
popa
cmp
and
ficoms
sbb
adcl
fistps
ror
out
cmp
add
dec
popa
mov
xchg
cmpsl
lret
sbb
lods
mov
out
push
mov
and
cs
push
call
or
loop
mov
dec
dec
jne
xor
mov
je
leave
mov
stc
nop
popa
push
add
adc
dec
into
xchg
outsb
dec
sub
jae
mov
mov
jmp
mov
stos
jae
std
mov
and
xchg
xchg
nop
mov
add
xchg
mov
icebp
js
pop
into
xchg
xchg
push
jbe
pushf
cmp
aam
daa
pop
mulb
sbb
sti
jne
fimull
jle
mov
cli
cmp
cmp
xchg
cmp
ja
mov
fs
es
jbe
and
cs
imul
adc
rol
repz
ljmp
rcrl
rol
mulps
add
clc
stos
fwait
inc
dec
jns
dec
movsl
loop
xorb
cwtd
cs
shll
ficompl
lcall
insl
out
dec
adc
cmp
lock
aas
mov
pop
in
ret
clc
jge
jl
dec
cmpl
pop
lock
in
out
shll
mov
cmp
cs
pop
push
cld
and
push
and
push
clc
adc
or
rcll
push
sbb
jl
adc
stos
mov
sub
scas
std
dec
stc
fldl
xchg
js
shlb
stos
cmpsl
cmpsl
fwait
or
inc
loopne
rcll
js
xor
dec
out
pop
jbe
out
mov
xchg
xchg
cmp
popl
jmp
pop
mov
nop
stos
inc
dec
lods
hlt
ss
sub
cmp
push
mov
jno
in
outsl
jo
adc
sub
mov
sub
xor
lods
test
jg
outsb
icebp
sbb
mov
pop
jnp
fnstsw
inc
scas
push
notrack
cmp
and
pushf
lock
push
mov
inc
xchg
loope
pop
jle
xor
lcall
es
mov
push
aaa
mov
int3
xchg
pop
fs
xchg
aam
cmpsl
dec
lds
popa
xchg
jl
or
mov
cs
movsb
insl
add
ret
pop
aas
cmp
loope
out
mov
or
mov
jb
std
sub
jmp
js
scas
add
gs
cmc
lods
push
lock
repz
inc
jp
push
shrb
mov
push
imul
cld
xchg
mov
ds
fisubs
sbb
outsb
mov
pop
and
ds
mov
push
int3
add
sub
xchg
out
mov
jl
lret
mov
cwtl
cmp
sub
cmp
mov
push
dec
xorb
xor
inc
pop
xlat
lret
mov
ds
mov
leave
or
jmp
fnstcw
push
and
cmp
frstor
out
inc
push
lods
fisubs
xchg
les
inc
mov
or
data16
iret
fsts
xor
push
hlt
rcl
mov
mov
imull
push
sub
mov
int3
cmpsl
jge,pn
loopne
int3
lahf
push
adc
push
jp
lret
test
mov
sbb
loop
lock
xchg
jo
cmp
call
cmpsl
fstpl
sub
popf
cwtl
cli
mov
sub
jnp
or
aad
and
adc
out
push
sub
cwtl
mov
sub
sub
mov
xchg
push
push
push
test
mov
testb
mulb
test
ficoml
call
ficompl
subb
add
or
aam
mov
movsb
or
lds
jmp
dec
inc
test
cmp
adc
push
stos
pop
and
jecxz
mov
push
insl
pushf
fnsave
mov
and
or
dec
orl
cmp
pop
sbb
push
dec
adc
ljmp
sbb
jp
andl
dec
hlt
mov
lods
xor
jbe
jne
push
das
mov
pop
scas
pop
xchg
cmc
je
ss
xor
jmp
rcr
mov
adc
mov
sub
mov
rclb
lods
lods
les
fstpt
mov
or
xorb
ret
mov
sbb
ss
out
shrb
test
popf
and
mov
unpckhps
data16
adcb
sarl
inc
lret
nop
mov
mov
jp
adc
cld
sub
psubusb
push
and
lret
inc
mov
das
leave
mull
daa
imulb
pop
call
sbb
into
daa
notl
sbb
cltd
insb
push
loopne
clc
lcall
pop
stos
out
sbb
or
push
movsl
gs
addr16
int
jge
les
loop
lea
push
xor
push
mov
and
xor
adc
adc
test
adc
rorl
sub
pop
mov
jl
mov
jmp
or
sub
lcall
push
pop
inc
xchg
loop
or
mov
rorl
jl
imul
cs
sub
jge
repnz
dec
addb
cltd
cmp
cli
imul
xchg
lahf
shrb
xchg
fcomp
sub
xor
push
lods
lret
add
adc
lods
lcall
and
loopne
jg
mov
xchg
inc
shlb
cmpsl
cltd
jl
sbb
jg
clc
pusha
aad
hlt
dec
loope
jle
sub
pop
or
jbe
inc
mov
fdivl
mov
add
or
jmp
sbb
add
mul
mov
add
jne
loopne
pushf
mov
jge
stos
push
sub
xor
sbb
or
in
fildll
outsl
aam
inc
push
xor
cmp
gs
or
mov
xchg
or
imulb
fidivs
jle
sbb
ss
mov
cmc
cmp
cmp
aad
mov
rorl
mov
sarl
pop
addr16
jl
lods
jle
stos
sub
ds
pop
fs
insb
and
and
enter
into
pop
ds
jl
mov
icebp
push
cmp
loope
insl
add
xchg
pop
xchg
repz
fbld
mov
jp
pop
ds
push
sbb
cmp
dec
mov
incl
in
out
mov
sbb
nop
rcll
mov
xor
jnp
jle
fdivl
fcompp
test
or
dec
clc
adc
out
xchg
jecxz
ret
push
push
mov
mov
shll
mov
and
sarb
xchg
mov
cld
outsb
les
or
imul
mov
lahf
sti
pop
icebp
pop
pop
inc
and
and
mov
gs
xor
sahf
imul
inc
fstpt
daa
mov
jno
loopne
je
aas
inc
dec
mov
or
imul
cmpsb
into
aas
leave
and
mov
pop
add
js
inc
movl
xchg
pop
lods
outsl
sub
mov
stc
aad
push
mov
sub
hlt
cld
les
negl
jns
aad
sub
into
jbe
push
push
or
or
inc
popa
pop
lahf
sub
mov
les
subl
sub
pop
or
fsts
mov
xor
inc
adc
inc
and
jns
data16
ljmp
mov
xchg
test
sbb
test
clc
cmp
pop
jno
xchg
adc
or
dec
add
xchg
je
mov
test
faddl
adc
mov
loope
mov
les
push
xchg
call
push
call
cld
mov
mov
shlb
arpl
lcall
pop
mov
rcrb
pop
push
fildll
negb
fidivrs
dec
mov
loop
xor
gs
movsb
mov
push
sbb
mov
and
or
aam
lods
mov
ret
push
xchg
mov
nop
lea
push
cs
lahf
add
or
mov
cmpsl
cmp
fistps
xor
sbb
inc
ret
jb
mov
push
sub
test
lret
inc
in
popa
gs
test
out
jecxz
pop
les
mov
les
out
cwtl
cwtl
in
hlt
insb
xorps
mov
cld
shll
test
pushw
sub
ja
popf
mov
cmp
jecxz
es
push
push
in
push
out
xor
adc
ja
data16
pop
push
add
loope
cs
push
push
mov
cld
sub
pop
jg
scas
mov
jb
sbb
xchg
or
dec
pop
lds
add
inc
pop
repz
loopne
sbb
scas
xlat
daa
mov
test
addr16
pop
rorl
ja
stc
fwait
pop
es
leave
and
stc
or
cmc
cmpsl
inc
adc
xchg
or
popf
pop
scas
and
jge
fdivrp
cmc
andb
mov
cmpps
add
jb
jecxz
pop
cmp
mov
adc
add
out
xor
dec
aam
scas
call
xlat
out
xlat
cltd
ds
les
mov
fs
call
outsl
test
mov
mov
popf
mov
mov
in
std
or
xchg
cmp
mov
add
js
mov
fisubrs
cmp
add
push
or
bound
pop
stc
loop
xor
fwait
outsb
dec
rcll
pop
outsb
jmp
push
bound
jmp
lret
cmp
push
sbb
int3
cltd
cmp
push
pusha
push
idivl
aad
enter
lahf
push
sub
mov
xlat
dec
mov
out
mov
pop
loop
in
or
sub
subl
inc
clc
enter
fiaddl
sbb
cltd
outsl
sub
mov
repnz
cmp
loop
push
ja
iret
nop
jo
adcb
insb
jecxz,pt
lahf
movsb
hlt
adcb
mov
push
arpl
fsubrp
test
aaa
jg
je
cmp
or
dec
movsb
pop
out
jle
jmp
repz
subl
xor
add
dec
and
mov
into
or
inc
jbe
fmull
lcall
cld
fidivl
jo
mov
pop
es
push
out
pushf
imul
mov
out
dec
dec
add
sub
movsl
cmp
outsl
jnp
dec
cmc
pop
mov
popf
in
inc
bound
in
and
ss
jne
mov
and
jnp
cmp
sbb
data16
ljmp
and
pop
in
imul
and
adc
cld
test
mov
and
add
cwtl
stc
in
jae
jge
cmp
jle
inc
lea
int
rorl
jne
push
lret
fptan
dec
push
punpcklwd
movsb
push
bound
out
lcall
cmpsb
mov
pushf
in
decl
out
ret
notb
sahf
popa
imul
add
mov
cmp
aaa
adc
rcl
xor
push
add
cld
mov
mov
add
inc
push
cmp
xchg
sarb
fcoms
sbb
jbe
add
in
daa
xchg
xchg
dec
adc
mov
pop
es
orb
dec
cmp
inc
shl
dec
mov
cmp
mov
pop
das
push
jmp
dec
imull
repz
test
pusha
int3
pusha
lret
out
mov
inc
or
nop
mov
pop
pop
sbb
cli
or
sbb
xchg
mov
adc
insl
push
cmp
add
add
push
push
push
insb
pop
insl
cmpl
mov
cs
loope
lods
stc
ljmp
push
repz
loop
and
in
in
mov
in
xor
scas
dec
pushf
add
xchg
jnp
aad
mov
aad
out
ret
out
inc
inc
or
xchg
cltd
pop
push
push
mov
cmpsb
fwait
popa
inc
iret
push
dec
ljmp
lds
test
das
fistpll
lret
push
cld
add
call
pop
shll
jge
lret
js
cwtl
xor
daa
out
push
jg
cmp
out
mov
arpl
xlat
mov
push
and
stc
pushf
cmp
jbe
push
mov
sub
xchg
fdivrp
sub
push
pop
hlt
in
data16
sahf
cld
lods
lods
pop
popf
in
xor
dec
imul
xchg
pop
jge
jp
imul
push
and
add
lcall
jne
inc
mov
insb
push
mov
test
cs
inc
and
sbb
sarb
call
aam
adc
lods
push
data16
add
rclb
cmp
jbe
pop
mov
and
add
in
push
es
push
xor
fcoms
jl
mov
push
ss
out
int
adc
and
or
push
loopne
test
dec
jge
push
lea
xor
xor
cwtl
pusha
fdivrl
ss
inc
inc
xlat
subb
lods
mov
pop
dec
jl
or
incl
push
fmul
fstps
jnp
in
sbb
add
xchg
mov
and
xor
jnp
add
push
in
fsubrs
dec
pop
test
mov
in
cmp
jno
out
aad
pushf
das
xor
loope
test
sbb
imul
rolb
mov
es
push
in
cmp
lea
loop
lods
or
and
fsubs
pop
sub
imul
jmp
test
sub
push
pop
sbb
fistps
jge
movsb
adc
pop
and
dec
ret
add
aam
dec
test
call
push
ret
xchg
add
push
sahf
test
clc
pop
push
test
dec
lret
cmp
mov
or
pop
es
call
sub
jmp
cmpsl
jnp
or
add
jne
cmp
cli
cmc
fsubrs
into
jmp
aas
add
shlb
dec
ret
stos
sbb
in
inc
mov
xchg
xchg
dec
bound
pop
lret
lret
cmp
std
adc
add
or
cmp
std
stc
orl
pusha
xor
xchg
pop
mov
std
pusha
pusha
fdivs
push
inc
loope
push
mov
xor
loopne
jl
outsl
mov
sub
xchg
push
mov
ljmp
push
je
mov
rdpmc
push
xor
xchg
xlat
popa
ret
pusha
mov
add
adc
lret
roll
jecxz
insl
ror
push
jns
mov
pop
cmp
and
fiaddl
mov
imull
push
adc
adc
fs
mov
cmp
sti
xor
ret
lea
and
mov
mov
ficoml
adc
and
mov
dec
add
lret
fisttpl
rol
enter
push
sub
mov
pop
push
or
mov
add
cmc
fidivs
xor
out
jb
xchg
cmp
add
mov
fbstp
mov
inc
cltd
sub
jne
fstpt
jb
dec
add
cld
push
pop
mov
stos
les
test
scas
outsl
test
or
mov
cmp
mov
xor
cmp
sub
xor
lcall
frstor
lret
out
cmp
int3
cltd
mov
xchg
mov
pop
push
scas
sbb
dec
imul
xlat
inc
jns
sbb
xchg
bnd
mov
test
je
das
loopne
scas
and
sbb
jg
roll
daa
and
jecxz
cli
mov
imul
in
adc
dec
mov
xchg
loop
xor
orb
and
mov
rcl
sbbl
xor
or
adc
push
jo
mov
lcall
mov
dec
add
in
daa
mov
scas
dec
in
lfs
cmp
fnstenv
mov
aad
lods
std
icebp
js
pop
dec
add
mov
stos
or
push
inc
xor
push
orb
lret
cmp
mov
push
xchg
dec
pop
mov
cmc
aaa
daa
outsb
outsb
mov
and
inc
pop
fstpl
push
sahf
dec
adc
fstpt
into
sub
hlt
test
cmc
adc
fsubs
roll
and
pushf
cwtl
add
jg
inc
fcmovu
fmull
or
mov
and
mov
lds
mov
cwtl
adc
aaa
add
cwtl
sbb
and
lds
dec
fwait
push
ror
cmp
jnp
jae
push
add
test
inc
mov
in
jb
push
and
jne
adc
int
loope
jae
pop
xchg
mov
fwait
or
outsl
cmc
fmuls
xchg
jo
pop
daa
add
test
ds
fisttpl
js
cmpsb
loopne
scas
or
fwait
mov
inc
push
push
lock
scas
xlat
push
cmpsb
fisubrl
out
mov
xor
in
mov
ficoms
pop
push
push
xchg
xchg
xchg
sbb
cmp
int3
inc
sbb
push
pusha
push
clc
dec
dec
push
inc
fidivs
add
push
sub
inc
dec
dec
into
les
cmp
sub
out
popf
and
push
call
shl
clc
sbb
dec
push
mov
out
inc
jne
jnp
mov
xchg
sub
insl
jae
xor
push
mov
cmpsb
sbb
bound
mov
mov
add
push
xchg
call
nop
mov
scas
add
or
movsb
cld
pop
jg
lods
xchg
xchg
adc
xor
add
cmp
sub
nop
dec
cmpsl
xchg
sar
cltd
mov
add
ja
jo
jle
cli
dec
jg
jo
cli
aas
out
movsl
cli
hlt
dec
and
imul
sub
cli
lahf
fildl
in
std
add
push
ret
jmp
je
fs
dec
pusha
xchg
add
cmp
cld
mov
addb
fs
mov
mov
mov
imul
sub
jbe
das
fucom
mov
aas
and
jb
inc
push
xchg
cs
lock
mov
push
loopne
adc
cmpsl
sbb
sub
mov
mov
addr16
and
xchg
ret
and
adcl
push
xchg
mov
cmp
xchg
jmp
int3
or
popa
fisttpll
mov
push
movsl
sbb
inc
cmp
out
jge
xchg
pop
inc
sbb
jb
shll
insl
xor
stos
in
sub
cmp
loope
ret
movb
dec
das
insl
adc
inc
aaa
hlt
popa
sbb
ds
jle
xchg
mov
addb
jp
in
fcmovu
inc
push
inc
loopne
lock
pop
xchg
clc
std
jb
pop
ret
mov
lea
shr
cmovle
icebp
and
xchg
in
aad
jns
dec
popa
mov
mov
push
xchg
push
pop
in
out
gs
outsb
pop
cltd
scas
loopne
shll
scas
loop
xchg
cmpb
arpl
imul
js
pop
jg
stos
outsl
idivl
add
sbb
rorb
jg
mov
in
xchg
out
lahf
jae
mov
mov
popf
loopne
bound
jo
dec
clc
mov
fwait
mov
stc
fildll
fwait
std
rorb
xchg
sbb
clc
paddusw
fdivr
popa
xchg
sub
outsl
mov
sarb
int
icebp
sbbb
lcall
es
push
or
cmpb
xlat
enter
mov
popf
out
sbb
bound
aam
or
out
stc
mov
lods
sbb
lret
sub
dec
mov
mov
inc
popf
movsb
push
mov
pop
outsb
aaa
mov
shlb
mov
add
push
dec
enter
mov
xchg
fwait
out
mov
add
mov
lcall
inc
pop
cmp
jge
xchg
fsubrp
ret
sub
in
push
es
or
ficoms
fcom
mov
mov
out
mov
ljmp
in
and
std
scas
in
je
insl
repnz
cmp
cltd
repz
int
imul
push
scas
es
les
js,pn
mov
hlt
lret
lock
daa
rorb
mov
cld
test
test
xchg
insl
mov
jbe
mov
mov
jecxz
test
cli
adc
xor
fmuls
jnp
inc
ret
cli
adc
ficomps
loopne
mov
cld
fisubrs
pushf
aas
aam
sub
push
cmp
pop
xor
cmpsl
push
mov
adc
mov
cmp
je
dec
adc
pop
push
ds
dec
repz
push
mov
jns
adc
xchg
cmp
dec
leave
cmpsl
lret
mov
sbb
ljmp
ljmp
add
inc
mov
inc
dec
sub
dec
push
cmp
gs
dec
call
or
push
adc
pop
int3
repz
lret
sub
mov
ss
dec
test
sbb
ret
push
adc
cld
cld
flds
pop
pop
fcmovnb
mov
mov
xor
push
pop
add
mov
lock
or
cmp
repz
push
push
push
mov
outsl
or
aam
xchg
sarb
fcmovb
and
fists
arpl
mov
into
sti
sub
and
inc
xchg
push
mov
imul
add
lret
jmp
int
jbe
shlb
nop
xor
pop
insl
add
in
inc
out
cmpsb
sub
jne
xchg
sbb
leave
shll
into
icebp
and
test
sti
loope
aas
test
aam
out
sti
fcmovnu
jns
and
mov
repnz
sub
fbstp
fldenv
add
cwtl
rorb
ficoms
sub
mov
bts
jbe
es
insl
mov
or
cmc
imul
cmp
shlb
cld
and
pop
sub
push
mov
add
cltd
xor
fnstsw
sarl
jno
fstpt
imul
inc
test
jbe
sbb
or
jbe
je
pop
mull
imul
mov
in
in
movsl
xchg
lock
daa
push
popl
pause
pusha
mov
stc
in
xchg
pop
pop
test
jle
ja
jns
imul
pop
iret
pop
and
xchg
cmpsl
mov
jge
and
pop
push
lds
gs
loope
jmp
fisubrs
aam
xor
and
pop
stc
push
mov
mov
shrb
mov
and
pop
push
test
outsb
mov
sub
mov
clc
aaa
jbe
sbb
xor
dec
push
mov
jmp
mov
es
je
je
cltd
cmpsl
scas
aaa
pop
jecxz
sbb
pop
jb
sti
mov
pusha
push
pushf
sub
mov
aad
add
ss
xchg
push
rclb
pushf
scas
rorl
ret
data16
iret
je
and
jg
xchg
insb
push
sub
inc
sub
stc
dec
add
out
mov
xchg
cmp
xchg
hlt
jp
mov
xor
push
or
pop
lea
leave
push
shrb
inc
mov
cmp
cmp
subl
cmp
shrl
mov
out
push
jg
mov
jle
aam
aaa
mov
in
mov
movsl
mov
mov
add
pop
xchg
or
push
andb
gs
dec
cmpsb
adc
rcrl
inc
xlat
jne
lock
inc
roll
mov
jmp
arpl
std
stos
pop
lock
daa
cmp
dec
lret
sbb
ret
pop
add
mov
loope
jmp
or
xor
pop
inc
je
pushf
add
mov
and
leave
adcl
shrl
cltd
mov
xchg
in
push
ljmp
imul
call
jg
mov
loope
cmp
aad
pop
lea
inc
mov
xor
sbb
inc
ljmp
or
xchg
int
pop
sahf
gs
xlat
dec
fisttpl
xchg
or
inc
dec
mov
mov
in
repnz
inc
je
mov
adc
fildl
enter
mov
data16
bound
gs
js
add
mov
leave
dec
xor
test
sbb
into
and
sbb
test
jbe
pop
xlat
cmp
add
pop
aam
pop
adc
arpl
rcrl
imul
add
add
mov
addr16
adc
add
cwtl
and
add
add
pop
repnz
jnp
loope
test
testb
les
arpl
inc
repz
pushf
mov
ljmp
popa
xchg
loope
shlb
call
je
mov
gs
ss
jno
cmp
add
into
jae
inc
stos
call
ret
push
adc
lock
insl
jg
pop
insl
popa
movb
xor
sahf
jo
mov
jl
ret
pop
dec
and
mov
xchg
sub
pop
mov
mov
leave
mov
gs
es
ret
loopne
push
dec
sub
jecxz
out
sbb
dec
test
pop
dec
cmp
in
push
outsl
push
mov
add
fnstenv
dec
insb
ret
dec
stos
pop
imul
jbe
jae
dec
mov
test
jmp
ds
xor
add
negb
test
mov
pushf
outsl
adc
pop
mov
lahf
dec
adc
pop
sub
or
or
push
xchg
dec
dec
in
lcall
push
mov
loop
js
in
or
outsl
mov
mov
js,pn
add
xor
inc
sbb
xor
cmpsl
pushf
dec
push
sub
or
push
out
mov
les
mov
sbb
repnz
mov
push
jg
and
push
scas
inc
xor
dec
iret
imul
in
imul
out
dec
das
icebp
mov
mov
dec
xchg
cwtl
dec
xchg
or
jbe
pushf
mov
das
test
lock
nop
cmp
mov
xchg
enter
cmp
xor
jmp
xor
push
xorl
jp
add
mov
nop
pop
mov
mov
in
daa
inc
push
pop
les
ret
mov
dec
mov
daa
mov
outsl
mov
sbb
popl
pop
adc
dec
sub
daa
orb
jecxz
and
data16
mov
pop
faddl
sahf
movsb
ret
and
hlt
inc
pusha
adc
push
push
mov
dec
jmp
insl
rcrl
pop
fcmove
mov
outsl
xor
icebp
push
aaa
ss
cmp
dec
ret
leave
pop
dec
ljmp
in
mov
mov
inc
xchg
mov
lods
imul
fstl
adc
jmp
pushf
in
into
sub
cwtl
mov
ret
lcall
add
aas
leave
fldt
mov
or
test
sub
arpl
lods
jae
jbe
cmp
jl,pn
mov
sbb
mov
cmpsb
shrl
push
jo
sub
fdiv
sub
test
push
mov
xlat
fstl
sub
push
push
cmpsb
push
mov
loope
ret
test
cmpsl
xchg
push
jns
insb
int
into
or
cmp
jbe
xor
outsl
jge
pop
repnz
fs
rclb
and
add
mov
xlat
lret
xchg
push
in
imul
out
dec
xor
icebp
fwait
inc
and
out
imul
lahf
push
sbb
inc
jns
adcl
test
pushf
shl
sub
or
jno
loopne
in
sbb
jnp
cmpsl
jns
push
jb
in
sete
pop
into
jo
and
loopne
loope
lods
sub
and
mov
fisttps
sbb
xor
sub
sbb
cmp
or
jge
add
pushf
fidivs
shll
fcoml
test
cmp
lods
scas
mov
shl
sbb
cwtl
ret
xchg
in
ffree
das
loop
dec
sub
inc
push
lret
lods
bound
or
mov
mov
rcll
jge
or
xor
xchg
fwait
fs
aam
sti
jge
imul
dec
dec
call
ret
xchg
in
push
mov
and
rclb
repz
sbb
push
jo
pop
cmc
lcall
sbbb
addr16
mov
rolb
mov
orl
ds
mov
xchg
xchg
repnz
push
sbb
je
or
lods
dec
dec
sub
fmull
adc
mov
dec
mov
mov
fsts
xlat
je
jne
ficoml
addb
mov
das
sbb
jnp
pop
jbe
mov
jno
cmp
mov
je
mov
sbb
pop
cmpsb
add
rcrl
sbb
bound
jg
filds
out
ja
out
and
dec
hlt
shl
or
pop
ret
pop
mov
out
xor
or
filds
and
xchg
scas
or
jge
movsb
mov
clc
sbb
negl
mov
ror
or
jmp
mov
cs
ds
or
mov
outsl
xchg
fld
push
inc
mov
add
adc
or
jnp
jecxz
mov
push
xor
xchg
test
push
ficoms
lods
mov
stos
pop
dec
pop
xchg
jmp
lahf
jle
inc
sbb
mov
jge
pop
dec
negl
fidivrs
aad
cwtl
outsl
push
cwtl
add
jl
xor
fmul
ljmp
fbstp
int3
out
sbb
jg
push
adc
roll
js
cli
xor
or
into
ja
mov
mov
sbb
xlat
mov
in
pop
jae
push
and
popf
lcall
adc
and
dec
clc
jo
gs
scas
sub
fs
imul
dec
mov
lock
das
mov
fistps
push
jl
shlb
mov
pop
imul
fcom
popa
out
lods
test
cmpsl
pop
pop
mov
pop
jae
mov
sbbl
call
sti
inc
ljmp
sti
ljmp
lods
fdivl
pop
xchg
sub
jle
pop
add
or
xchg
mov
movsb
arpl
dec
or
std
imul
rcl
sbb
push
or
xchg
add
das
iret
aaa
adc
imul
jecxz
gs
jne
dec
mov
addr16
mov
stc
enterw
push
mov
pop
stos
faddl
mov
repnz
aad
xor
ljmp
cmp
sbb
and
sbbb
or
mov
stos
xor
lock
adc
xor
enter
inc
je
lret
in
sarl
fisttps
inc
ja
add
das
inc
into
xchg
daa
out
pop
test
popf
dec
mov
ss
cli
mov
adc
enter
ljmp
jge
mov
sti
push
pop
push
and
movsl
pop
ja
cld
push
or
xor
xor
addr16
enter
sti
mov
xchg
out
lret
sbb
popf
imul
test
lds
cmp
mov
jge
and
in
cmp
mov
fs
xchg
jmp
imul
add
jl
inc
push
lahf
jae,pn
cmp
dec
rorl
jns
mov
pop
cmpsl
xchg
loope
bound
les
fisubs
mov
out
outsb
jg
lock
ljmp
imulb
mov
mov
inc
das
or
push
pop
dec
cmpsl
or
pusha
adc
incb
dec
mov
aad
jo
out
lods
iret
scas
inc
aam
out
int3
xlat
xlat
cmp
lahf
pop
in
dec
es
pop
xor
mov
mov
push
sbb
jo
addr16
dec
and
xor
mov
cli
lahf
rolb
xchg
jnp
lds
repz
cli
push
aad
test
sbb
sub
or
repnz
dec
pop
add
inc
xchg
and
push
lds
adc
aad
jle
add
jo
and
lcall
mov
or
fwait
pusha
pop
outsb
add
cmpsb
lods
in
adc
fs
mov
inc
fsubp
jb
jl
leave
outsl
and
jecxz
mov
aam
add
sbb
lock
jl
push
aam
cs
scas
cmp
adc
push
inc
inc
mov
cmp
xchg
or
fucomip
outsb
mov
mov
in
add
lea
mov
sub
jo
jmp
mov
mov
mov
lds
and
pop
and
dec
sub
cmpb
xor
sub
pop
leave
in
sahf
add
sahf
and
mov
in
icebp
push
negl
daa
or
mov
lods
ss
les
sbb
lcall
inc
adc
or
pop
mov
addr16
sub
dec
outsl
jmp
adc
out
cmp
outsb
inc
imul
repnz
iret
cli
inc
ljmp
sbb
mov
sbb
sub
sbb
xor
testb
or
das
cmp
test
lret
lods
sub
clc
fadd
dec
inc
sbb
cmp
loopne
clc
les
leave
xchg
pop
dec
faddl
push
outsl
mov
add
and
loopne
mov
add
outsb
popf
std
lret
int
cmp
ret
and
pop
sbb
addr16
imul
out
and
xor
jecxz
jecxz
aam
fcmovnu
or
push
xchg
ja
inc
sbb
sbb
sbb
cs
sub
inc
jmp
mov
popa
inc
daa
mov
sub
jnp
dec
mov
xchg
fnstcw
movsb
mov
jecxz
lods
movsb
cli
or
fnsave
mov
mov
jmp
in
test
xor
sub
lods
or
jb
pop
push
insl
aaa
orps
push
loop
gs
cs
cmp
jns
sbb
pushf
sub
inc
sbb
test
and
add
mov
frstpm(287
imul
inc
fidivrs
sub
adc
push
repnz
repnz
pop
xor
xor
pop
les
push
cmp
shrl
sbb
jecxz
lcall
cmpsb
add
out
lds
cmpsb
mul
pop
dec
cmp
inc
dec
push
mov
add
add
ficoms
push
push
popa
stos
mov
jo
nop
shrb
scas
sbb
push
pop
mov
in
decb
int
and
loope
adc
fdivr
xchg
xor
lock
hlt
push
andl
xor
cmp
cmp
out
pop
aam
jg
sbb
xlat
gs
ja
out
adc
data16
jne
stc
andb
push
ret
jae
xor
int
cmpsl
add
filds
fistpll
dec
inc
push
xlat
movsl
jno
inc
je
and
pop
pop
cmpsb
mov
inc
dec
addr16
jno
mov
xchg
lods
lahf
mov
inc
popf
das
jo
into
lock
or
test
es
lcall
mov
mov
jo
xchg
or
mov
jb
imul
xchg
lret
xchg
mov
in
and
fwait
cwtl
dec
or
inc
ret
mov
xor
fldl
xor
in
loope
or
out
dec
repz
mov
mov
cmp
bound
daa
mov
divb
push
es
shr
or
gs
jno
int
cmpsl
aam
fistpll
sahf
pop
cli
cmp
xor
xlat
jno
and
cmp
jae
xchg
and
lods
mov
sbb
inc
jb
jno
push
mov
outsl
inc
aad
add
pusha
jns
cld
mov
sub
or
sub
inc
jle
scas
push
movsb
mov
lea
insl
push
rcrl
push
ja
sbb
scas
xor
scas
lret
adc
int
sub
ret
inc
dec
cld
add
bound
add
lods
sub
sbb
add
and
out
cwtl
fwait
clc
push
xor
mov
sub
push
je
mov
cltd
loop
add
pop
cwtl
xor
inc
js
jne
jp
add
push
test
mov
mov
lock
push
or
pop
std
mov
add
mov
mov
inc
gs
aas
lock
clc
cmc
sub
jecxz
lahf
and
add
pop
jge
aam
sbb
lret
push
mov
int3
push
outsb
pop
xchg
mov
cmp
inc
cmp
stc
in
push
sahf
dec
fwait
mov
dec
ja
adc
mov
add
pop
jle
dec
cmp
popf
shll
adc
ja
push
jns
xchg
out
mov
lret
mov
rol
dec
mov
push
mov
dec
fwait
bound
loope
sub
mov
pop
inc
lret
adc
jmp
jge
repz
in
mov
fistl
imul
jecxz
pusha
pushf
mov
stos
pusha
sbb
dec
movsl
das
pop
addr16
cli
ret
jecxz
adc
fucomip
repnz
mov
lock
les
push
mov
mov
push
stc
shr
xchg
mov
inc
or
pusha
jmp
push
or
sbb
or
lret
out
in
inc
lahf
push
push
std
dec
test
int3
push
mov
stos
popa
pop
adc
push
sbb
loopne
mov
push
je
jmp
mov
hlt
mov
gs
add
push
sub
loop
jmp
cmp
jg,pt
xor
jns
outsl
repnz
xchg
sahf
negl
inc
imul
xor
aas
test
fstpl
imul
pusha
cmpsl
adc
test
push
sub
pop
idivl
xor
idivl
popf
scas
pop
adc
mov
mov
out
aam
xorb
adc
dec
ficoms
sub
insl
aas
push
sbb
cmpsb
in
and
loope
push
mov
mov
xor
inc
lock
test
adc
ret
in
leave
add
dec
mov
pop
cmpsl
insb
mov
inc
lods
in
ja
mov
int3
hlt
mov
fmuls
pop
in
dec
cmp
push
ss
push
inc
or
int3
shll
imul
adc
dec
xor
sbb
cmp
dec
loope
lock
aad
mov
lcall
mov
xor
pushf
aam
pop
and
push
insb
daa
iret
repnz
movsb
and
test
push
roll
xchg
setl
gs
mov
push
lahf
movb
cmpsb
loop
insb
imul
jmp
push
inc
jp
adc
mov
popa
repz
fidivrl
and
or
stos
cli
inc
and
or
mov
or
cmp
pop
xlat
or
jp
sub
sbbl
pop
daa
shr
mov
cmpsb
out
xchg
lock
rep
nop
daa
repz
mov
cmp
daa
cmp
jns
mov
ljmp
pushf
xor
fstps
mov
lods
push
inc
pop
fistpll
pop
in
pop
xchg
mov
les
fwait
xchg
or
inc
mov
popa
xchg
add
cmp
stos
mov
in
dec
xchg
scas
in
leave
lret
lea
fdiv
daa
lcall
add
sarl
enter
mov
in
xchg
push
dec
push
sbb
imul
cli
pop
arpl
cmc
mull
sub
xor
out
push
outsb
imul
les
mov
xchg
or
dec
popa
cmp
aam
sbb
loop
inc
lret
cld
inc
sbb
inc
lods
dec
leave
outsl
je
jmp
jne
mov
jno
push
sbb
and
addl
jns
in
daa
adc
add
inc
addr16
pop
mov
fnsave
out
adc
enter
lea
cmp
push
lcall
push
in
jne
outsl
outsl
and
es
mov
pop
mov
push
shlb
jl
push
push
jge
cltd
pop
xchg
jno
sbb
imul
loop
outsl
stos
jno
cltd
scas
sub
lahf
scas
scas
fdivl
lret
cmp
pop
cmp
inc
mov
and
cltd
xor
fmuls
mov
mov
and
jnp
xlat
mov
ljmp
xor
adc
out
fisttpl
pushf
std
cmpb
sbb
sub
cltd
jo
mov
pop
add
xchg
push
mov
pop
insl
lcall
add
add
mov
fistps
lahf
jo
call
lret
addr16
add
call
mov
loope
dec
bswap
loopne
imul
adc
mov
and
or
cmp
shlb
jg
ss
cmp
pushf
icebp
fwait
cmpsl
and
mov
test
xchg
frstor
jbe
sbb
aas
mov
shlb
pop
lahf
dec
sbb
xchg
push
xor
dec
cs
sub
sbb
icebp
mov
or
xchg
xchg
xchg
stos
cltd
jecxz
mov
divl
aas
lods
mov
push
cmp
jge
les
jne
jno
int
mov
or
iret
jns
push
loop
into
mov
je
xchg
cli
jl
sbb
mov
xor
sbb
jl
insl
dec
es
cltd
mov
xchg
jbe
xchg
lods
jne
and
imul
push
in
pop
movsb
ds
cmc
push
fimuls
pushf
lret
cmp
jno
loopne
out
dec
pop
aas
es
push
stos
inc
imul
jns
lahf
sub
cmc
in
push
repz
adc
sbb
adc
addl
sub
mov
stc
mov
mov
and
adc
push
iret
mov
xlat
fimuls
es
adcl
adc
ja
pop
jae
imul
sub
lret
and
shrb
mov
mov
ss
rcll
sahf
cmp
xchg
mov
push
push
fdivrs
and
mov
imul
sarl
dec
pop
sbb
fdivrs
sbb
xchg
mov
xor
notb
inc
pop
or
mov
cmp
pop
cmpsl
lahf
mov
inc
inc
dec
cmp
fucomp
sub
adc
sahf
mov
jnp
arpl
popa
jg
jnp
cs
jmp
pop
cmpsl
dec
push
and
push
or
cmp
ret
mov
jb
and
std
push
inc
dec
sub
lods
insb
lds
cwtl
sub
pusha
pushf
xchg
not
sub
into
in
or
add
lret
sbb
push
icebp
cmpl
imull
hlt
mov
sub
sbb
or
adc
mov
xchg
jecxz
and
ret
cltd
xlat
push
sub
push
nop
in
stc
int
mov
jb
and
adc
add
xchg
push
lods
xchg
jl
pop
and
cmp
inc
mov
and
jg
jo
lods
cmpsl
imul
pop
movsl
out
pop
add
cmp
push
imul
aam
jno
int3
lods
sub
sbb
test
out
insb
dec
jle
cmpsl
test
call
das
popa
sub
jae
clc
cmp
popa
dec
adc
adc
xchg
ret
enter
adc
inc
arpl
call
nop
add
sbb
sub
fstpt
adc
pavgb
add
inc
or
sub
and
getsec
ljmp
movsb
gs
cli
pop
test
sbb
and
ret
mov
pop
iret
cmpsb
sarb
jo
adc
into
jbe
sahf
int
push
xor
iret
fnstenv
jb
and
or
dec
jae
dec
sub
inc
jmp
out
mov
clc
lret
shr
gs
mov
in
inc
add
lret
jmp
pop
push
popa
pushl
and
dec
in
cmpsl
ficompl
push
icebp
lret
js
out
and
xor
lahf
testb
add
shll
dec
and
pop
aas
or
add
hlt
add
loope
push
fnstcw
cmp
lcall
loope
mov
add
mov
pop
es
loop
inc
rcrl
pop
sub
bound
or
je
int
mov
cmp
push
imul
mov
popf
pushf
xor
mov
mov
sahf
xchg
rorb
ljmp
mov
jb
xchg
mov
clc
test
call
mov
mov
xchg
lret
push
cmp
das
aam
mov
mov
sbbb
cmp
push
gs
mov
outsl
addr16
xchg
add
push
ret
pop
shlb
mov
in
loop
aaa
incb
negb
push
or
xchg
mov
fisttps
shrl
mov
adc
test
inc
int3
addr16
cmp
jne
cltd
pop
mov
xor
inc
iret
cmp
mov
dec
add
cmp
pop
jno
add
cmp
sbb
into
xor
aas
cmp
aas
rolb
bound
cmp
mov
inc
jno
or
lds
and
fildll
push
in
inc
pusha
inc
sbb
sbb
xor
lahf
mov
out
mov
adc
adc
mov
dec
mul
fsubr
xchg
imul
rcll
or
das
dec
adc
xor
mov
or
push
sbb
pop
fwait
sub
jle
cmpsb
lds
call
add
add
loop
int
sub
mov
cmc
out
outsl
pop
mov
mul
jnp
pop
ficoms
and
mov
sbb
jge
js
repz
scas
int
repnz
mov
pop
add
mov
and
in
out
xchg
cmc
dec
bound
addr16
pop
sbb
push
jecxz
push
ret
push
jmp
mov
jo
xchg
data16
stc
or
push
dec
inc
push
add
mov
jbe
test
cmc
mov
hlt
pushf
cmp
cmp
out
pop
mov
repz
mov
mov
push
adc
sbb
ja
lea
sub
mov
call
lods
mov
push
xchg
cs
gs
adc
in
stos
cmp
jnp
xchg
aaa
push
add
popf
mov
dec
lretw
xor
sub
icebp
data16
or
push
mov
jns
push
idivl
lds
pop
xchg
test
movl
mov
data16
pusha
mov
push
test
addr16
push
incl
fcoml
pop
cs
xor
xchg
or
ds
jl
test
aam
out
mov
cli
test
cs
mov
adc
push
inc
jo
pop
shrb
loope
out
stos
cmp
and
or
and
cmp
std
sbbl
xchg
adc
jo
or
mov
adc
xchg
test
xchg
adcl
push
mov
enter
mov
sbb
test
outsl
rolb
aas
cmpb
imul
loopne
push
aad
cmc
dec
fbstp
push
int3
testl
popa
add
mov
add
in
icebp
jnp
inc
adc
cmc
adc
enter
loope
or
sub
lret
shlb
adc
push
lds
out
cwtl
jnp
std
jmp
shl
pop
sahf
cmp
divb
and
imul
mov
mov
sti
popa
mov
adc
mov
sub
fidivrl
xor
push
repnz
test
movsb
inc
cltd
pop
mov
cmpsl
mov
sarl
stos
sub
addb
mov
mov
jge
test
fdivrl
imul
outsl
sub
lar
mov
outsb
daa
pop
mov
andl
inc
and
inc
into
in
add
sbb
in
roll
inc
pop
add
xchg
andl
das
add
xor
add
push
xchg
pop
dec
int
dec
or
insb
cmp
xor
sub
dec
rolb
cmp
scas
mov
pop
jg
xlat
mov
mov
push
sub
push
add
cmp
sub
lock
mov
dec
test
push
adcl
lret
inc
fsubrs
stos
adc
or
divb
jne
scas
jecxz
add
jb
adc
fldenv
push
out
mov
xor
dec
pop
movzbl
cli
shrl
leave
sub
bound
fcmovne
mov
adc
xchg
ret
adc
fldt
sub
out
scas
movb
pop
add
sub
mov
pop
dec
or
addr16
rorl
jmp
mov
ljmp
xchg
leave
leave
out
inc
jnp,pn
pop
and
adc
outsl
push
fistpll
xchg
push
and
leave
and
cmp
adc
out
dec
fisttpl
hlt
scas
out
jmp
mov
mov
nop
loope
ljmp
cmp
clc
xchg
sbb
aam
test
mov
imul
jae
scas
leave
and
mov
daa
jle
mov
stc
in
out
out
mov
xchg
incl
cmp
adc
jecxz
jae
inc
push
rorl
and
pop
ss
pop
mov
mov
movsl
and
addr16
jne
sbb
dec
ficomps
jno
sahf
inc
adc
out
sbbb
orb
adcb
mov
mov
cs
je
sbb
sti
cmpsb
cmp
jecxz
jp
loope
mov
sbb
rolb
push
imul
ja
and
cmp
in
dec
fidivl
into
arpl
inc
dec
sbb
imul
mov
xor
or
xchg
push
imul
shr
ds
jp
adc
sbb
push
pop
pop
push
fisubl
cmp
js
push
inc
mov
push
mov
arpl
nop
mov
pop
push
sbb
cltd
mov
shrb
lods
outsl
adc
shrb
mov
adc
sti
aam
mov
push
addr16
mov
mov
xchg
pop
fwait
inc
jg
add
add
shll
pmulhw
xor
sarl
push
pop
mov
ficompl
mov
or
pmulhuw
fists
add
shlb
dec
mov
mov
mov
xchg
dec
out
stc
adc
jnp
fcoms
add
jmp
fistpl
and
aam
pop
stos
jnp
ret
cmc
loope
jge
xchg
or
xchg
mov
fwait
jae
or
xchg
jb
dec
cs
mov
call
mov
dec
dec
jmp
imul
ss
mov
addl
jg
sti
shlb
ja
xchg
outsl
lret
jecxz
pop
cbtw
and
push
dec
sbb
or
jmp
out
push
leave
insb
push
sub
aas
sarb
mov
ret
addl
or
orl
lret
and
outsb
mov
mov
in
lea
jae
xor
clc
inc
lret
jg
mov
ljmp
sub
xchg
notb
in
sahf
xchg
push
in
mov
adc
pop
pop
cmc
push
clc
and
inc
std
mov
xchg
cli
sbb
lcall
imul
sahf
pop
sti
push
sub
test
arpl
or
in
test
int3
sub
push
inc
mov
xchg
or
sub
inc
push
adc
and
andl
and
cmp
loope
pop
aad
mov
sbb
jge
and
adc
pop
int
mov
cld
inc
sbb
mov
add
in
inc
xchg
jmp
push
mov
inc
notrack
rorb
xchg
imul
mov
xchg
shr
iret
mov
pop
imul
scas
dec
mov
add
hlt
sahf
daa
push
rolb
xor
and
mov
mov
ss
cmp
test
test
xor
mov
cs
mov
dec
fmull
lds
xor
sub
ds
push
xchg
dec
leave
enter
scas
mov
and
pop
xor
or
mov
shlb
test
cmp
xchg
es
sbb
jmp
xor
dec
mov
rclb
repnz
cmc
fistpl
adc
xchg
lea
int
inc
lret
popf
adc
pop
int3
ds
adc
push
fstpt
cmp
icebp
push
jge
sub
sbb
ret
ds
inc
inc
je
push
lock
xor
cld
ds
ds
arpl
jbe
addl
jmp
xchg
pop
int
and
cli
pop
icebp
ds
jmp
push
mov
fdivs
sub
xor
setns
popf
and
push
push
cli
ror
cmc
xlat
push
and
mov
imul
jne
jge,pn
and
pop
scas
or
mov
jmp
pop
xor
mov
jge
or
mov
lock
decb
je
push
pop
pop
out
sub
out
bnd
mov
ds
jge
dec
lret
clc
call
scas
mov
sarb
dec
pop
push
int
mov
push
lret
sti
and
nop
call
jp
or
pop
mov
jae
out
adc
mov
push
cmp
test
int
sbb
sub
sub
sbb
jbe
cld
add
adc
iret
push
cmp
ficomps
fcmovb
ds
push
mov
pop
cs
pop
jg
mov
pusha
negb
push
xor
cli
inc
dec
xor
fsubrs
jne
shrb
loopne
xor
adcl
jmp
mov
xor
and
pop
mov
inc
testb
out
outsl
jecxz
jmp
sub
cmp
push
mov
add
lea
mull
gs
insb
or
mov
mov
stc
daa
jge
jo
cmpsl
sbb
cmc
lcall
mov
jle
mov
leave
mov
fdivr
into
dec
pop
sar
sbb
pop
mov
push
jg
jae
cmp
icebp
shlb
add
xchg
imull
xor
stc
pusha
pop
adc
insl
mov
roll
inc
cmp
push
xchg
dec
clc
mov
jmp
movsb
xchg
rcrb
fucomip
aaa
mov
mov
adc
ror
inc
insb
lcall
nop
or
pop
aaa
mov
mov
imul
xor
es
pop
shrl
out
sub
sti
adc
std
or
xlat
sub
enter
mov
pushf
std
test
cli
mov
adc
hlt
les
mov
sti
adc
mov
or
pop
jmp
rcr
outsb
sarl
sbb
sarl
ljmp
cltd
jbe
fidivl
pop
pop
adc
dec
mov
sbb
adc
pop
pop
mov
lea
test
rol
mov
add
imul
fnsave
ficomps
mov
fdivr
add
fdivl
enter
pushf
push
insb
loope
xor
popf
imull
in
cmc
scas
loope
hlt
fistpll
jg
mov
les
pop
xor
xor
jmp
popf
xorb
cmpsl
lods
xlat
repz
rorb
scas
xchg
cmp
insl
adc
pop
jb
movsl
and
pop
mov
pop
inc
mov
sahf
movsb
iret
sub
into
in
hlt
xlat
push
jnp
nop
lods
xchg
xor
or
jno
sti
loope
cld
mov
pop
jg
cmpsb
or
inc
outsb
mov
sbb
sahf
xor
sbb
fdivs
jg
jno
push
mov
cltd
mov
xor
popa
mov
fisttpll
jns
jmp
jg
pop
add
mov
fwait
sbb
lods
imul
add
xchg
xchg
into
add
addb
shl
sahf
push
enter
adc
lret
push
jp
addb
dec
and
nop
out
pop
sbb
cmp
pop
cmp
or
pop
pop
push
pop
mov
js
das
xor
mov
sti
repz
fldt
jo
sti
int3
add
mov
sub
addl
cmp
shlb
fldcw
stc
fnstenv
daa
lcall
sub
iret
push
mov
repz
repz
push
icebp
sti
xor
push
das
sbb
and
filds
scas
leave
push
dec
daa
dec
and
pop
mov
push
add
mov
dec
cld
sub
cmp
jnp
push
jecxz
jae
mov
add
mov
fisttps
inc
loopne
jl
jg
arpl
jns
push
leave
cmpsb
jae
jo
lods
mul
mov
jne
xor
jbe
dec
or
or
xlat
ret
sbb
jb
dec
cmp
arpl
mov
xor
adc
dec
sub
pop
cmc
repz
cmp
repnz
hlt
clc
push
ret
sti
mov
lods
or
push
nop
fs
stos
imul
xor
xor
xchg
mov
and
es
mov
jno
jo
sarb
mov
cmpsl
pop
rcrl
leave
xor
cmp
lret
rol
je
ret
push
adc
sub
leave
sbb
xor
jmp
test
sarb
inc
ja
push
js
inc
dec
pop
cs
sub
pop
aam
push
out
push
xor
in
leave
push
add
cmpsb
incl
es
xor
xchg
sub
sub
outsb
mov
or
pop
addr16
sub
dec
adc
cmp
xor
cmpsl
add
stc
add
or
or
inc
ret
aas
std
or
sbb
pop
xor
xchg
in
xchg
pusha
jnp
mov
jae
sub
sbb
paddsb
jecxz
pusha
mov
rorl
push
in
cwtl
sub
ret
push
sub
add
cmp
in
ret
rcll
add
xchg
mov
push
call
xor
je
lahf
in
loope
call
pop
dec
inc
hlt
xor
fistps
dec
adc
add
je
rolb
mov
push
jne
das
pop
mov
xor
xchg
cltd
movsl
icebp
pushf
xchg
addr16
mov
imul
ffreep
add
test
xchg
jae
ror
mov
fsts
mov
mov
cld
mov
cmp
adc
ret
imul
sbb
in
mov
fcoml
dec
mov
xor
mov
insw
cmp
imul
je
aas
sub
jmp
pop
pop
ljmp
xor
inc
iret
push
orb
xchg
xchg
dec
sub
mov
ret
xor
xchg
outsl
xor
pop
dec
adc
dec
in
scas
out
adc
mov
push
movsl
out
inc
aaa
add
push
dec
pcmpgtb
ja
sub
imul
cmpb
bound
fidivrl
adc
leave
cmpb
dec
fs
push
pop
mov
popf
adc
enter
pop
pushf
xor
push
ljmp
movsb
fstps
cwtl
fisttpl
sub
inc
pusha
fwait
cmp
jne
xchg
push
clc
shl
cmpsl
sub
mov
jo
push
cmp
hlt
hlt
clc
inc
call
mov
in
jno
lea
or
popf
xchg
insl
repnz
jg
dec
sbb
jp
popf
test
imul
in
std
scas
mov
or
push
inc
dec
sti
dec
imul
loope
jmp
xorl
clc
ja
cld
xchg
fsubs
lods
sub
xor
adc
pop
hlt
mov
push
xor
out
jle
inc
add
stos
mov
test
lock
adc
mov
repnz
lods
lods
and
in
fsubrs
xchg
ljmp
push
daa
es
cmc
dec
xchg
mov
out
fsubrs
cwtl
ja
push
enter
dec
cli
insl
push
mov
addr16
adc
fcomip
loop
mov
adc
push
inc
xchg
test
stos
dec
inc
push
pusha
pop
lret
aas
sbb
jg
pop
adc
xchg
sti
mov
cmc
les
fs
imul
fucom
inc
bound
aaa
enter
fwait
push
dec
aas
std
add
in
dec
test
add
inc
shr
sar
lahf
lahf
xchg
testl
mov
fbld
addb
xor
test
add
sbb
leave
cmp
mov
cmp
inc
cmpsb
cmpsl
test
divl
hlt
mov
jle
les
cltd
inc
ret
stc
mov
cmp
jnp
xchg
mov
xor
mov
xor
js
jb
shlb
inc
sbb
testb
enter
cmc
popf
cmpsl
and
fcoms
push
das
add
cmpsl
loope
test
mov
lahf
loope
pushf
jnp
sbb
adc
and
arpl
dec
mov
mov
in
cmp
clc
sub
inc
and
out
imul
mov
cmpsl
shlb
cwtl
cmpsl
ret
jl
addr16
movsl
aaa
outsb
std
sbb
mov
sti
fs
dec
pusha
sub
cli
nop
scas
outsl
dec
mov
sub
adcl
or
hlt
pop
add
xchg
dec
inc
xor
inc
adc
je
imul
mov
xchg
dec
push
out
pushf
mov
call
leave
push
inc
testl
stos
sub
cmpsb
jne
inc
dec
xchg
pop
mov
fcompl
out
ja
bound
std
jae
mov
pop
xchg
sbbl
sbb
aam
insl
pop
in
cmp
inc
outsb
push
lods
daa
aam
xor
lods
rcrl
pushf
xchg
jnp
pusha
mov
cwtl
btc
xchg
sub
jmp
cmpsl
jp
push
ds
adc
scas
enter
je
aas
xchg
leave
nop
and
dec
dec
dec
sub
mov
xor
pop
dec
movsl
int3
cmp
cmp
cmpsl
popf
jle
aaa
cmp
std
ret
mov
inc
pop
push
mov
xchg
push
test
adc
mov
test
mov
mov
aaa
xor
mov
andl
pop
gs
and
imul
and
out
mov
xchg
rorl
arpl
jmp
daa
sub
mov
mov
shlb
in
fsubrp
mov
outsb
xor
sbb
xchg
inc
std
sub
sbb
shr
shll
dec
pop
xchg
jmp
sbb
popa
dec
push
mov
lahf
jns
pop
pop
sbb
call
xchg
das
nop
je
xchg
or
sub
aas
cwtl
rcll
insb
sbb
add
xor
push
sti
add
cmpl
or
scas
jnp
bound
in
lahf
in
or
push
sub
jo
out
ja
adc
push
cltd
andl
adc
dec
rolb
lret
test
dec
std
dec
and
add
inc
aad
mov
in
movsb
sbbb
rolb
cmpsb
sub
push
js
and
or
sub
inc
je
gs
sbb
das
ljmp
xor
stc
cld
jb
mov
and
mov
roll
sbb
mov
cs
push
fidivrs
mov
stc
mov
hlt
insb
pop
mov
bnd
fwait
dec
xlat
rcl
test
inc
inc
pop
fcmovne
decl
inc
pop
ljmp
xor
add
pushf
test
dec
scas
or
fsts
and
lcall
dec
or
inc
in
and
pop
jecxz
cltd
aam
xchg
or
arpl
jbe
jb
clc
xchg
cmp
enter
xchg
cmp
sub
bound
stos
insb
xchg
ljmp
mov
std
mov
in
jmp
imull
popf
fimuls
popa
push
scas
jle
jo
sub
or
fisubrl
cmp
xorb
scas
jmp
and
push
popa
push
imul
jb
std
inc
je
jecxz
cmpsl
and
test
push
push
mov
pinsrw
dec
iret
fcomps
jnp
and
sub
fldcw
jbe
out
iret
or
cs
xchg
pushl
pop
sti
ret
mov
push
xchg
pop
int3
xor
xor
sub
dec
loop
inc
lret
aad
cmpsl
push
lock
dec
sbb
push
mov
xor
sub
push
mov
sub
push
pop
xlat
call
push
push
sub
repnz
nop
or
mov
sbbb
aam
ret
cmpsb
mov
xchg
push
pop
xor
push
mov
inc
inc
pop
out
and
dec
dec
outsl
xor
fmuls
sbb
push
aas
dec
iret
cld
and
pop
dec
in
sbb
push
mov
xchg
int3
or
or
subl
sarb
stos
adc
orb
rcr
arpl
pop
adc
mov
lock
lock
push
ret
mov
cmp
pop
add
test
xchg
aaa
aas
enter
xlat
ja
xchg
fcoml
mov
mov
inc
aaa
jae
mov
adc
jl
pop
mov
imulb
sub
xor
and
in
mov
sbb
call
jne
iret
cmp
sbb
sub
ret
cmp
das
cs
pop
lcall
mov
jge
out
jmp
cmp
or
xchg
test
rol
or
sahf
icebp
loopne
nop
es
pop
add
in
jae
int
sub
jne
insl
pop
pop
inc
sub
mulb
clc
loop
dec
jb
mov
sti
les
sahf
shlb
push
pop
or
lcall
mov
adc
repz
mov
es
jo
add
cmovno
push
lahf
xor
dec
call
rcll
jecxz
popf
les
shlb
mov
mov
push
sbbl
dec
push
data16
loope
dec
mov
into
and
inc
adc
js
cmp
dec
sbb
push
inc
leave
ds
xor
push
ss
add
mov
sub
pop
insb
jle
cmp
lcall
or
push
scas
mov
lret
call
jg
add
movl
dec
push
jg
mov
outsb
stos
ret
push
mov
and
cmp
sbb
xlat
imul
push
out
add
movsb
push
addr16
dec
sbb
pop
push
sbb
xchg
xor
cli
jb
out
lock
pop
add
mov
mov
les
lcall
inc
test
iret
fisubl
test
jg
xchg
daa
scas
lret
outsb
xchg
les
push
jmp
cmp
sub
add
das
out
inc
jmp
shl
mov
add
pop
stc
enter
ret
cmp
jl
std
xchg
inc
shr
fistl
mov
test
jl
fldt
int
test
and
push
inc
dec
in
cmp
insl
int3
mov
dec
test
and
orb
lcall
sub
pop
pop
out
mov
mov
imul
adc
cwtl
pop
shll
xor
je
mov
lods
dec
push
je
push
dec
inc
fcomps
xchg
mov
imul
mov
push
xlat
inc
adc
jno
add
iret
aaa
pop
int3
mov
adc
adc
out
testb
mov
cld
sub
xchg
xor
js
lock
out
inc
ret
mov
dec
jle
xor
dec
sub
pop
push
popa
cmc
push
cmp
push
fbstp
push
sbb
or
notb
vmovlps
into
mov
jae,pn
xor
xor
cmpsl
push
xchg
xchg
push
out
in
cmp
xor
mov
cmpsb
in
repz
mov
jb
and
adc
dec
in
push
jg
dec
ffreep
stos
rcrb
test
ret
sbb
sbb
pusha
ljmp
fwait
cmp
fcmove
cli
adc
jo,pn
push
pop
mov
rcrl
pushf
fstpt
mov
ret
add
mov
inc
adc
repnz
adc
pushf
mov
add
dec
pushf
loope
lock
dec
xchg
mov
adc
add
xlat
imul
int
jb
lret
mov
sbb
in
xchg
mov
and
decb
adc
adc
ljmp
mov
out
fucomp
lahf
fs
xor
shl
xor
push
jb
dec
gs
and
mov
lret
ljmp
mov
or
push
jo
dec
mov
adc
add
push
xor
pop
popa
cmp
and
mov
lahf
push
or
cmp
iret
jnp
xor
sbb
mov
bound
or
and
pop
test
pop
sbb
addr16
push
add
cmpsb
adc
add
xchg
sub
in
add
dec
hlt
inc
mov
adc
movsb
dec
mov
adc
sub
sbbb
xor
jns
push
orb
fcoms
ljmp
lcall
bound
imul
in
int3
imul
push
jo
sbb
cmp
fiadds
lcall
ljmp
xchg
in
popa
arpl
inc
pop
rcll
xchg
dec
xchg
jae
and
sbb
inc
jmp
std
inc
insb
mov
and
push
arpl
cltd
inc
cmpsb
cmp
and
inc
push
andb
adc
shlb
leave
add
imulb
sti
mov
mov
sub
jmp
or
pop
mov
les
jno
mov
sub
xlat
push
fidivs
cmp
movsb
jae
sbb
stos
sbb
push
sbb
mov
aad
xchg
inc
xchg
xchg
int
pop
mov
inc
bound
jecxz
jbe
adc
pusha
xor
lahf
add
cmp
adc
xchg
aaa
pop
mov
inc
add
jb
dec
es
aaa
cld
push
repnz
ret
insb
int3
pop
pushf
fidivrl
cmc
sub
mov
sbb
pop
mov
sarb
mov
xchg
add
movl
int
mov
shr
cli
pop
fnop
test
cmpsb
divl
popf
fisttpl
mov
xchg
mov
xor
dec
fstl
testw
jmp
in
cmpsl
movsl
cmp
add
sub
or
arpl
jmp
cmp
or
cmp
mov
je
lret
adc
and
pop
rcrb
loopne
xor
sbb
add
lahf
inc
add
mov
shlb
out
test
pop
push
mov
pop
fdivs
and
or
sub
fs
jno
data16
push
fdivrl
sbb
mov
lea
adc
mov
arpl
add
push
stos
inc
mov
sub
ja
cmp
cltd
xor
sar
or
fst
scas
push
add
jl
push
stos
xor
cmp
pmaddwd
inc
pop
mov
jmp
jo
push
leave
in
push
sbb
and
pop
out
push
and
xor
fisubs
add
mov
and
in
mov
pop
mov
das
vmread
push
stos
adc
aaa
or
push
mov
shll
in
or
stos
xorb
jmp
jae
ror
inc
dec
daa
lret
push
push
push
daa
cs
pushf
xor
pop
imul
mov
xchg
data16
xor
lret
rorl
nop
in
or
push
or
xor
ljmp
dec
sbb
test
push
outsl
jmp
push
adc
cmp
inc
icebp
sub
xchg
xor
and
xlat
pop
fimull
inc
jb
jecxz
pushf
out
test
scas
xchg
add
dec
out
popa
mov
inc
out
xchg
push
jp
notl
mov
lret
jmp
dec
mov
sub
cwtl
es
test
enter
pop
iret
mov
mov
out
push
adc
lcall
push
loope
cmc
aad
add
inc
fildll
cli
xchg
xchg
mov
sub
lods
push
cmp
popf
rcrb
inc
jecxz
mov
xchg
adc
jl
dec
push
dec
out
sbb
mov
out
push
cli
and
outsl
jecxz
inc
aaa
test
mov
out
repz
xchg
add
in
pushf
pop
into
cmp
push
jno
push
rolb
in
aas
inc
repnz
push
call
test
cld
dec
push
and
pop
dec
mov
inc
repnz
inc
inc
in
cmp
jns
shll
adc
mov
xchg
lds
xlat
fs
movsl
movl
lcall
ficomps
cmpb
adc
add
or
sbb
jns
lahf
aam
push
push
xor
dec
adc
inc
jmp
xor
mov
aam
push
push
sub
rolb
push
adcl
adc
mov
scas
xchg
popa
xor
je
pop
movsb
push
das
push
inc
add
cs
cs
cld
pushl
std
push
dec
jno
sbb
cmc
notb
icebp
stc
es
fstpl
cmc
insb
push
jp
stos
sbb
mov
inc
jp
addb
mov
xor
dec
les
jg
adc
mov
test
out
add
stos
mov
iret
jbe
cmp
lcall
jecxz
push
lret
jp
loop
cmp
cmp
dec
cmc
js
andl
push
sbb
mov
jmp
mov
jbe
das
test
rorb
dec
stos
lds
leave
fists
test
sbb
mov
mov
mov
repnz
and
sub
or
lea
popf
shll
sbb
js
insb
lods
cli
xor
imul
push
mov
sbb
and
sub
fwait
and
or
fwait
and
or
es
insl
inc
cli
sbb
out
loop
dec
push
cmp
sahf
xchg
ret
sub
mov
pop
sbb
dec
sarl
push
jno
aaa
push
or
push
push
faddl
shlb
xor
insb
mov
mov
xlat
fnsetpm(287
dec
xor
dec
xchg
sahf
cmpb
popa
jmp
xlat
rep
pusha
dec
xor
out
jge
loope
movsl
arpl
add
push
iret
cmpsb
mov
daa
push
lods
mov
sbb
adc
cli
add
dec
daa
and
sub
mov
loopne
hlt
mov
add
push
inc
out
es
sub
dec
stos
int3
icebp
test
sahf
mov
or
fimull
inc
lcall
das
xor
ror
dec
dec
ss
pop
adc
out
mov
xadd
mov
imul
pop
out
jg
adc
sub
aas
xor
xor
xchg
xor
ja
adc
shrl
dec
push
shl
rcrl
loopne
fnsave
loop
cmpsl
inc
mov
inc
outsb
jno
jno
push
push
negb
jnp
fidivs
push
enter
mov
sub
sbb
incb
mov
xchg
or
dec
sbb
xorb
mov
mov
mov
and
inc
aam
pop
pop
adc
mov
mov
mov
xchg
push
orl
notb
in
cmc
jae
add
add
fbld
jp
imul
iret
push
mov
sbb
je
mov
cli
xchg
fs
loopne
xchg
std
jno
out
mov
outsl
testb
cltd
xchg
xorl
adc
outsl
cltd
cmp
xlat
add
imul
inc
out
mov
push
mov
lea
aas
call
push
icebp
fwait
mov
jbe
mov
pusha
pop
bound
mov
jne
repnz
dec
fcmovbe
dec
pop
in
pop
fimull
pop
int3
sbb
add
add
or
loopne
stos
loopne
cmc
inc
out
pop
ss
fadds
add
jnp
dec
push
or
inc
jns
call
mov
jge
ja
mov
out
mov
or
subb
or
in
adc
sahf
and
xor
popf
cmp
lea
cmp
fildl
pop
push
popf
xchg
pop
and
inc
lret
inc
nop
add
pusha
mov
test
ficoml
sub
adc
and
cwtl
sahf
lock
outsb
es
mov
cld
xlat
fldt
inc
hlt
cs
mov
loop
mov
jl
inc
call
jnp
mov
dec
cmp
dec
jb
cmpb
fwait
outsl
or
insl
andl
rorb
roll
push
lods
jno
jo
lods
cmp
int3
aas
mov
imul
out
mov
mov
xchg
mov
mov
adc
iret
shrb
inc
jle
in
jecxz
mov
push
ljmp
dec
xlat
rcll
push
pmaxub
cli
add
and
ljmp
mov
sub
fbld
bound
push
rolb
popa
sbb
out
pop
xchg
adc
and
bound
mul
sbb
scas
mov
sbb
dec
pop
mov
andb
or
inc
scas
mov
add
daa
dec
mov
dec
or
dec
cmc
jb
ret
aam
inc
inc
iret
add
lahf
sti
addr16
push
dec
int
stos
jo
fwait
jno
ss
in
xor
cmp
jo
push
ficomps
inc
mov
js
mov
lret
sarl
mov
daa
loope
loope
push
mov
fdivrs
cmp
imul
loope
daa
loopne
adc
mov
push
stos
clc
cmp
add
sti
orb
inc
dec
xor
movsl
dec
in
arpl
fnstcw
or
in
movb
xor
cmp
out
xor
and
mov
xor
pop
xchg
shr
out
ss
out
fiaddl
mov
or
hlt
xor
dec
ficoms
out
sbb
dec
scas
insb
cmp
rclb
fistpl
xor
pop
push
xor
das
repz
das
cmp
adcb
lods
mov
jl
mov
push
out
adc
movsl
loop
scas
ljmp
je
outsl
mov
aam
imul
mov
push
lock
mov
and
hlt
mov
inc
xor
test
sub
cli
add
and
xor
movsl
popf
sub
loope
add
mov
les
int3
sub
rol
fucomi
sub
pop
daa
inc
lret
xchg
adc
push
pop
scas
sub
mov
adc
inc
popf
cld
pop
int3
inc
aam
push
aam
jge
shll
sbbl
push
xchg
mov
clc
cmp
out
jb
add
testl
int3
mov
shl
iret
add
mov
xchg
push
icebp
push
in
pushf
insb
mov
xor
inc
mov
lea
lea
cli
jl
mov
leave
mov
outsl
pushf
adc
xchg
in
fnstenv
lea
sbb
xor
mov
jmp
sub
push
ret
loopne
cld
in
imul
xorl
jb
dec
pushf
testb
fidivl
lret
inc
rclb
inc
inc
mov
dec
adc
push
js
sbb
pop
mov
imul
fstpl
inc
xchg
adc
push
mov
xlat
test
psubq
sub
inc
add
ret
fs
in
xlat
repnz
repnz
test
stos
add
pop
adc
out
fistps
and
push
lret
nop
mov
sub
push
sub
jecxz
mov
mov
pop
flds
call
adc
mov
mov
test
xchg
out
clc
shl
dec
push
inc
sub
divl
pop
aas
clc
cmp
outsl
push
sbb
push
repz
scas
stos
rolb
push
sti
enter
popf
shl
jne
out
sbb
lahf
jle
dec
mov
mov
repnz
lcall
ret
ds
adc
sarb
cmp
in
mov
push
pop
bound
inc
jp
push
lcall
movsb
mov
bnd
mov
and
cli
mov
pop
xorb
fsubs
sub
sbb
decl
and
loope
neg
cld
pusha
sub
adc
and
sub
add
cld
xor
sahf
cmpsb
test
ljmp
outsb
jb
fistpll
adc
je
xchg
pop
mov
sbb
ljmp
mov
iret
js
imul
inc
je
into
push
bound
iret
cld
or
fadd
in
es
cmpsl
fbstp
divl
cmp
iret
cmp
sbb
inc
stos
fistps
sbb
rcll
les
shr
push
std
mov
daa
ret
mov
jns
jl
roll
scas
mov
adc
adc
out
in
adc
or
or
movsl
loop
mov
mov
push
jae
insb
dec
push
xchg
push
cli
fildl
mov
addb
in
fdivrl
xor
xchg
dec
sbb
ret
xor
ret
sub
into
cmpb
cmp
cmp
mov
sub
cwtl
mov
fwait
cli
lahf
jmp
int3
xchg
xor
in
xchg
les
repnz
pop
fdivrl
push
add
mov
inc
in
xor
and
fcomp
cmp
mov
pop
mov
and
sub
loop
inc
inc
sahf
and
decb
cmpsl
in
shlb
mov
pop
pop
jne
insl
lds
cwtl
cmpsb
sbb
or
clc
xchg
dec
daa
sti
pop
mov
insl
cmpsl
xchg
mov
cmp
dec
ss
pop
clc
jo
std
inc
adc
sbb
daa
cmp
adc
inc
cmpsb
mov
lret
iret
out
or
pop
xor
jae
jne
roll
mov
push
mov
stos
sbb
dec
xlat
mov
xor
add
fdivrl
idivl
jecxz
fsubl
inc
into
cmp
mov
inc
adc
divl
mov
in
scas
jecxz
pop
push
mov
inc
jmp
mov
js
xchg
out
in
add
add
fmul
sbb
out
or
push
push
in
pop
pusha
into
out
int3
sub
jo
xor
mov
add
sbb
lods
jl
and
fiaddl
jp
fs
test
inc
jmp
sub
mov
cmp
jno
in
jmp
movsb
inc
and
push
mov
aaa
scas
pop
pop
mov
mov
popf
test
xchg
jbe
insl
out
jl
les
in
scas
scas
dec
mov
xchg
movsl
cwtl
inc
insl
push
in
push
out
adc
repz
xorb
mov
sbb
lds
mov
lods
xor
and
jl
cmp
outsl
out
int3
sub
jb
addr16
sbb
das
add
adcb
icebp
sbb
jl
repz
dec
and
or
pop
mov
aad
pop
cwtl
mov
fiadds
push
cs
adc
bound
xchg
jecxz
fsub
mov
inc
js
mov
jns
mov
popa
mov
sarb
repz
cmp
sub
and
sbb
dec
aam
jmp
fcomps
sbb
sbb
push
jno
push
jae
ret
xchg
adcb
ja
std
add
cmpsl
out
imul
jnp
je
or
xor
insb
shlb
ret
dec
mov
push
adc
cmp
inc
movaps
xchg
pop
dec
sub
shr
repz
rcrl
add
psraw
xchg
dec
ror
ret
mov
xchg
sub
or
push
outsl
and
mov
cmpsl
call
in
sti
inc
es
popf
push
outsb
fnstsw
mov
out
lea
push
dec
ret
mov
and
cmp
pop
repz
insb
push
dec
ficompl
sub
or
testl
pop
test
jae
or
out
lahf
mov
aas
sub
sbb
rcll
sub
mov
aaa
loopne
push
arpl
push
out
inc
stos
mov
and
imul
mov
add
pushf
adc
in
sbbb
pop
or
data16
mov
xchg
pop
dec
fmull
mov
movsb
mov
cwtl
mov
loopne
mov
shl
mov
data16
push
outsb
sbbb
test
mov
clc
xor
fadd
jg
mov
fsts
fdivl
sti
mov
std
repnz
push
aaa
bound
ljmp
or
adc
imul
push
stos
mov
mov
and
clc
in
aad
lock
lock
inc
scas
push
sbb
repz
fldl
mov
imul
insb
jnp
lods
les
cltd
pop
leave
sub
dec
rol
cmc
mov
lcall
mov
push
inc
insb
pmulhw
jae
jo
push
mov
xor
std
jl
scas
std
lcall
and
loopne
shlb
lea
les
cmp
loopne
dec
sub
out
clc
or
aaa
pop
imul
sbb
jge
lock
dec
sbb
inc
mov
jge
adc
inc
adc
out
push
cs
mov
push
and
adc
fisttpl
inc
lret
les
xorb
push
pusha
pop
xor
popa
cmp
lock
mov
jae
push
adc
mov
cs
pop
idivl
incl
adc
mov
xor
test
sbb
sti
sbb
cmp
dec
pop
lea
std
insb
fwait
and
mov
fcomps
sti
pop
inc
icebp
and
jecxz
and
sbb
aad
cmp
cmp
jbe
fadds
cmp
aaa
mov
aaa
inc
cmp
in
jmp
lcall
clc
xchg
inc
aas
and
cli
xor
fstpl
pop
imul
jnp
jmp
ja
lret
mov
add
push
mov
or
mov
lret
xor
movsb
xchg
push
push
out
insl
jmp
and
mov
inc
sub
xor
push
add
sub
mov
jae
xchg
mul
clc
inc
sbb
ljmp
or
cmp
ss
jb
fbstp
pop
mov
sub
jnp
mov
loopne
mov
xlat
cwtl
sub
sarb
das
push
xchg
and
stos
sub
or
inc
mov
xor
jno
nop
cmp
and
mov
and
or
aad
jae
push
mov
add
sbb
scas
or
insl
es
stos
notl
mov
and
mov
push
cmpsb
adc
sahf
in
in
inc
insl
mov
imul
cmp
cmp
test
movsb
pushf
jae
repnz
jae
or
aad
adc
cmp
push
fwait
sub
js
dec
lods
fs
mov
daa
aam
xor
das
sub
in
cli
xchg
inc
bnd
gs
jnp
mov
sahf
pushf
je
cltd
or
inc
out
addl
mov
stc
test
cmp
or
call
or
stos
push
mov
sbb
std
inc
push
sahf
mov
aad
xchg
fsubrl
push
adc
cmpsb
dec
mov
loope
dec
mov
lea
ja
jns
push
fstl
add
inc
es
lea
sbb
mov
addl
xor
insl
mov
jmp
insb
mov
js
xor
in
cmpsl
imull
and
pushf
and
push
inc
arpl
inc
inc
insb
test
jg
outsl
loop
cltd
and
add
xchg
push
add
push
clc
push
dec
push
pop
push
xor
cmp
push
fs
fisubl
xor
add
sub
adc
jo
divb
dec
loopne
scas
shlb
ror
and
stc
pop
lock
repz
xchg
xor
inc
mov
xchg
xchg
fidivl
loope
mov
xchg
scas
pop
es
mov
pop
mov
pushf
rcll
mov
lods
int3
or
add
pop
loope
cli
cmpsl
pop
add
mov
iret
mov
arpl
xchg
and
push
mov
jno
cwtl
cmpsb
mov
xchg
cmp
fidivrl
jae
xchg
cs
sub
xor
sbb
test
mov
mov
jmp
lods
loope
xor
nop
rol
sahf
cmp
or
lret
push
dec
mov
in
shll
adc
clc
call
jecxz
faddl
popa
mov
xor
dec
lods
cmpsb
mov
mull
stc
loop
inc
jno
int3
lea
nop
shrl
sbb
andl
jno
sub
js
pop
pop
and
mov
js
rcr
jbe
adc
popf
fcomip
test
pop
inc
push
or
lock
mov
jb
mov
mov
cmp
or
dec
movsb
ljmp
mov
vhsubpd
inc
dec
fimuls
out
mov
push
jge
mov
mov
imul
mov
scas
cmp
js
mov
push
push
sub
cwtl
mov
dec
insb
outsb
aam
jne
in
idiv
or
lods
mov
clc
jl
jmp
das
mov
sub
ss
bnd
lret
adc
inc
jp
ret
inc
daa
pop
lock
rcll
nop
mov
arpl
add
push
mov
test
add
mov
cltd
pop
out
int3
imul
ljmp
rol
xchg
adc
ficompl
jnp
test
and
sbb
dec
mov
sub
pop
loope
fst
das
add
test
push
loopne
sbb
mov
lret
cmpsl
xchg
xchg
push
jmp
in
xor
loopne
cmp
sbb
dec
ret
enter
adc
std
add
jmp
sub
xchg
lds
imul
rcrl
mov
mov
mov
std
adc
adc
addr16
cmpsb
mov
aas
shll
pop
or
imul
leave
mov
pop
lock
mov
xorb
adc
lret
sahf
mov
das
ret
int3
aam
pop
subl
pusha
lods
fldl
jp
jne
dec
fmull
repz
mov
hlt
bnd
ds
sbb
and
popa
xor
in
xlat
aas
das
insl
jmp
fidivrl
mov
in
sbb
testl
gs
mov
jmp
dec
jl
mov
jb
cmp
jo
jecxz
push
iret
xchg
pop
xchg
stos
mov
push
cmp
movsl
imul
jle
pop
mov
fistps
cmp
xchg
ret
das
inc
out
push
mov
push
cwtl
add
pop
add
movsb
fcompl
pop
mov
out
push
inc
mul
mov
imulb
sbb
lods
mov
lea
add
clc
xchg
das
shl
daa
ret
ljmp
mov
test
test
movsl
xchg
out
sbb
in
jecxz
sub
sub
jo
lcall
pop
dec
cmpsb
addl
enter
cltd
xchg
jbe
xlat
dec
push
mov
aaa
stc
sub
sbb
push
cmp
or
xor
jg
and
lea
sbb
pop
lods
jl
or
sub
sub
jno
sub
mov
in
das
icebp
aas
into
cmp
or
std
push
dec
jb
js
xchg
loope
cmp
arpl
jns
sub
xchg
int
sbb
rolb
adc
hlt
push
sub
aad
inc
test
push
mov
sbb
ds
lahf
inc
aaa
dec
test
xlat
jnp
enter
ret
mov
fdivrl
outsl
in
jmp
mov
dec
sub
mov
pusha
fistl
stos
icebp
inc
lcall
sti
mov
mov
ljmp
push
push
cmp
sbb
push
cmpsl
testl
sahf
outsb
stos
inc
das
adc
xor
cmp
sysenter
ljmp
dec
std
add
punpckldq
mov
add
cltd
sbb
test
insb
adc
mov
mov
loop
es
mov
mov
dec
out
cmp
icebp
cmpsl
addr16
push
int
mov
mov
add
jge
jecxz
sub
imul
jl
cmc
cwtl
push
shrl
add
pop
jns
push
push
mov
and
pop
or
ljmp
push
scas
xchg
xorl
insb
idivb
add
cld
orb
mov
aam
cs
sahf
clc
aas
mov
push
push
ret
jge
or
or
out
adcb
cmp
push
sbb
aas
in
pop
inc
fdivrl
push
pop
push
cld
push
idivb
insb
test
mov
push
mov
sbb
xlat
cmpsb
fs
imull
sub
call
flds
in
push
movsl
sub
and
lret
dec
jmp
mul
in
dec
sbb
cs
push
rcrb
mov
fsubr
xlat
dec
lea
mov
push
cld
add
push
iret
negl
jmp
out
leave
lods
shll
int
sub
pop
arpl
inc
jmp
in
sbb
icebp
cltd
cmc
push
hlt
imul
xcrypt-ctr
cmpsl
fwait
movsl
xchg
or
test
sbb
cli
cmp
cmp
call
add
in
xchg
imul
cwtl
fiaddl
test
ret
push
mov
xchg
pop
sbb
xchg
sub
das
dec
sbb
pop
ds
sbb
movsl
mov
sub
adc
sub
fs
stos
pop
xor
jne
ror
inc
int
out
movsb
cmp
pop
jl
add
in
and
mov
and
pop
jb
or
mov
mov
xor
repz
enter
int3
mov
cmp
or
mov
xorb
mov
cmp
pop
jo
push
pusha
loopne
iret
cmp
aam
adc
enter
test
repnz
dec
aaa
mov
pop
sub
pushf
adc
fsubs
push
xchg
in
fsubl
sub
and
cmpsl
fs
mov
mov
out
fsubrl
inc
mov
outsb
aaa
mov
out
mov
cmpsb
cmp
hlt
ror
mov
push
mov
xor
jle
jp
into
lods
pop
loope
mov
filds
and
insb
daa
out
cmpl
mov
pop
or
lods
rcrl
icebp
xor
adc
mov
push
xor
aas
mov
shll
and
xor
pop
cltd
outsb
cmp
adc
push
mov
push
jns
das
adc
adc
stos
outsl
xchg
mov
xchg
xchg
sbb
mov
jle
mov
push
mov
lock
mov
inc
mov
in
inc
lret
jl
cmpb
fucomip
arpl
cmpsb
in
fsubrl
jmp
mov
lret
rcrl
lds
mov
cmp
add
cmpsl
daa
enter
mov
add
lods
xchg
bnd
shl
pop
mov
das
daa
mov
mov
inc
push
clc
mov
sub
cmp
pop
and
fcom
mov
in
jno
mov
mov
sbb
xchg
movsl
test
hlt
pusha
sbb
xlat
aaa
and
lds
shlb
stos
mov
mull
and
or
and
je
cmp
adc
sbb
imul
lret
push
mov
divb
cmp
cmp
outsl
ret
and
sarb
cmp
ret
cltd
jl
sub
leave
addr16
xchg
pop
xchg
gs
jg
aaa
fs
call
cs
fsubrl
push
out
test
test
xchg
lods
jnp
mov
stos
push
xor
xor
stos
and
jae
sub
mov
mov
lods
xor
cmp
sub
sbb
cmp
dec
mov
iret
loopne
add
xchg
dec
mov
vmaxpd
push
movsl
sbb
xor
iret
pop
jns
stc
sbbb
std
into
mov
fldt
dec
or
mov
or
push
out
ret
pop
test
push
scas
mov
add
imul
icebp
mov
mov
ret
call
call
fldt
sub
cmp
adc
jle
mov
dec
mov
stos
mov
xchg
repz
leave
and
dec
scas
jmp
adc
fldl
push
mov
scas
jo
pop
cwtl
sbb
lock
mov
insl
or
daa
xlat
cwtl
rorb
xchg
and
jl
out
shr
int
in
iret
mov
adc
fdivs
and
out
xchg
mov
mov
pop
lea
lock
mov
movsb
dec
fdivrs
jmp
rcll
or
push
loope
cmp
pop
cmp
testb
frstor
std
pop
and
cld
ret
add
mov
lods
push
lds
pushf
xor
pop
sahf
inc
xor
jl
mov
xchg
push
adc
cli
or
xor
cmpb
in
ljmp
cld
xchg
push
insb
push
xchg
adc
call
fwait
popf
cltd
inc
loope
and
xchg
lds
nop
int
cmp
insb
cmp
and
lods
fistpll
pop
add
and
mov
mov
push
push
xchg
sbb
out
std
sbb
scas
jmp
mov
subl
sub
add
pop
add
and
clc
ss
fisttps
insb
xchg
cld
fcomip
or
fwait
popa
jg
mov
pop
jne
mov
loopne
loopne
xchg
ljmp
stos
inc
cltd
adc
push
mov
cmpsl
xchg
jbe
mov
jns
pop
jge
sbb
mov
push
scas
insl
divl
stos
sbb
shlb
sbb
pop
mov
imul
mov
mov
cltd
in
and
dec
movsb
cwtl
std
into
jo
ja
xchg
arpl
aad
mov
add
pop
or
pusha
cs
popa
rclb
imul
iret
icebp
add
ficompl
mov
ds
lods
cmpsb
mov
imul
jl
and
daa
ret
les
mov
icebp
cwtl
jbe
and
ss
mov
mov
lods
xchg
lods
or
mov
dec
add
add
fiaddl
xchg
sub
insb
jmp
test
xlat
mov
add
out
jp
xor
ror
fs
call
lods
imul
add
sub
jns
push
jecxz
jbe
call
push
out
add
cs
icebp
lcall
mov
les
and
push
dec
pop
and
call
push
in
cmp
ja
or
stos
xchg
movsl
mov
jmp
iret
ret
sbb
add
insb
pop
mov
insl
into
stc
in
fisttps
stc
pop
push
fimull
fsub
subl
mov
xchg
call
mov
popf
mov
add
sbb
inc
xchg
ja
in
jae
in
cmpsb
add
dec
inc
push
std
cmp
out
xchg
outsb
push
add
pop
jecxz
mov
pop
sub
mov
pop
dec
in
nop
jg
mov
bnd
int
inc
push
and
sub
lds
dec
sub
push
sub
daa
into
jl
cmp
inc
mov
ret
xor
mov
mov
cmpsl
sub
in
dec
jge
mov
sahf
shlb
mov
sbb
fdivrl
clc
pop
lds
cs
push
inc
leave
push
pop
mov
xor
outsb
jl
inc
shll
push
in
std
push
into
call
mov
push
push
sti
pop
lods
xor
out
scas
push
dec
cmp
xlat
sub
cltd
jmp
sti
or
mov
adc
adc
ja
mov
ret
xor
shrl
int3
stos
add
xor
mov
sub
mov
movsl
add
inc
insl
xchg
ljmpw
sti
insb
mov
xorl
cwtl
pop
call
sbb
outsl
pop
dec
ret
push
jp
lods
add
mov
popa
shrb
rcrl
scas
or
jb
inc
xor
std
lea
cmp
std
cmp
xor
add
jne
or
daa
jno
repnz
cmp
cmp
in
push
and
push
xorb
ljmp
sub
fs
divl
adc
jno
mov
mov
adc
call
rorl
out
pop
rolb
popf
xor
ja
mov
fstpt
lods
xchg
popw
mov
lea
cs
in
imul
mov
in
sub
jae
cld
popa
movsl
insl
jbe
mov
leave
aaa
push
add
rcrb
cli
insl
adc
into
push
imul
sbb
and
dec
aad
mov
fisttps
stos
mov
insb
in
out
push
dec
sarl
mov
cmpsl
hlt
in
cmp
push
push
sbb
adc
xor
pusha
repz
jl
mov
nopl
sbb
inc
out
lods
out
leave
icebp
cmp
xchg
add
sub
scas
jecxz
std
mov
enter
mul
mov
test
push
std
pop
mov
inc
fcoml
xor
lret
shlb
bound
cmp
sbb
les
sbbl
bound
xchg
addr16
inc
push
notb
repz
push
jp
and
adc
and
test
inc
int
iret
loope
adc
shl
dec
cltd
pop
js
mov
mov
dec
icebp
lret
mov
xor
in
xchg
outsb
ret
arpl
cmp
fwait
add
pusha
mov
aaa
ftst
inc
push
jl
shrl
daa
les
repnz
jnp
pop
push
stos
cmp
frstor
push
mov
lods
dec
xchg
lea
mul
xor
adc
sbb
push
lea
cs
sbb
xchg
shlb
std
cmpsl
mov
sahf
add
shrl
lret
jnp
mov
or
cmp
rol
gs
fisubrl
cld
fs
mov
test
xchg
add
lahf
mov
jno
sbb
cs
adc
xchg
sbb
test
sub
xor
dec
das
xor
leave
jge
or
int3
xchg
inc
roll
push
add
xor
cld
das
xchg
xchg
xor
dec
jnp
enter
add
or
push
lcall
imul
and
out
mov
in
add
call
jmp
jae
sub
je
xchg
xor
cmpsl
adc
bound
xor
imul
je
add
mov
dec
aaa
mov
fsub
adc
add
mov
aas
xchg
popa
sub
sti
mov
out
inc
int
lret
mov
and
les
and
aam
outsl
shl
mov
lods
sti
add
sbb
shlb
or
icebp
sbb
mov
jno
inc
popa
inc
xchg
pop
jnp
sbb
pop
movsb
test
jp
inc
jl
pop
cwtl
jmp
add
into
lcall
pop
idivb
lds
or
gs
aas
sub
jnp
xor
insl
lcall
test
shl
mov
and
outsb
xchg
jp
les
push
jbe
and
push
sbb
fldl
jb
outsb
lods
popa
mov
and
es
mov
lods
repnz
mov
lret
repnz
mov
or
push
cmpsl
pop
cmpsl
dec
cmp
scas
sti
in
je
jmp
movsb
xchg
js
inc
pop
add
pop
popa
stos
push
out
adc
xor
inc
imul
popa
push
cli
add
dec
dec
mov
fnsave
dec
pop
in
jge
lcall
or
push
add
test
pop
rol
inc
lds
jo
mov
cmp
mov
inc
and
inc
lcall
push
negl
adc
in
ja
inc
xchg
xchg
pop
mov
xchg
fdiv
and
in
add
scas
in
loopne
push
addr16
ljmp
dec
fidivl
xorl
push
sbb
dec
in
cmp
jge
and
idivl
jg
pop
popf
sub
sbb
dec
cwtl
adc
cmp
mov
cmp
jp
call
cli
cs
imul
out
mov
lods
aam
fs
sub
inc
push
out
xorb
cmp
nop
jp
xor
mov
nop
sub
sub
jns
movsb
scas
mov
jnp
out
or
cmp
inc
fucomp
nop
andl
aaa
je
call
add
cs
pop
dec
xor
add
inc
jg
int
popa
fnstcw
in
mov
push
clc
mov
push
inc
cld
mov
mov
dec
add
enter
pop
mov
ss
bound
pop
adc
mov
sarb
addr16
sub
rclb
lahf
ret
fldenv
movsl
jbe
sub
mov
cmp
mov
mov
jo
andb
mov
lods
test
inc
mov
mov
dec
sub
js
shlb
outsb
sub
test
lods
cltd
fnstenv
ja
mov
nop
xchg
lea
pop
cli
fimuls
sbb
sub
insb
jge
adc
das
dec
call
mov
mov
insb
into
or
cld
push
or
pop
mov
dec
lock
cmpl
in
mov
push
jge
cmpsl
loope
fldl
loop
lcall
push
pop
enter
sbb
xchg
cmp
dec
jp
imul
push
es
push
scas
popa
shlb
mov
loope
dec
iret
imull
pop
mov
pop
or
dec
xchg
cwtl
pop
jmp
or
xchg
push
sarl
dec
std
push
sub
pop
mov
into
daa
popa
cmpb
cli
dec
push
stc
cli
dec
xchg
dec
sahf
mov
jecxz
ss
push
xor
sahf
mov
sbb
mov
test
push
adc
add
sub
jle
bound
ja
xchg
ret
sbb
cli
xor
push
push
stos
int
notb
mov
push
pop
out
andl
adc
outsl
jae
cmp
in
fmuls
out
mov
add
pop
scas
insb
mov
xchg
inc
movsl
sub
push
push
mov
xor
xchg
add
pop
insb
mov
sar
test
adc
les
fcompl
jmp
mov
loopne
pusha
jp
das
pop
imul
aam
pop
xchg
xchg
test
movsb
add
sti
ja
vpsubsw
push
mov
daa
notb
imul
test
jne
loopne
stos
sub
push
mov
adc
dec
lcall
addr16
sbbb
addr16
mov
mov
in
into
fnsave
jl
call
xchg
push
fistl
push
cld
stc
jnp
cmpsl
lock
mov
jnp
mov
push
shl
mov
jge
loop
pop
jp
and
aam
mov
adc
sahf
mov
addb
dec
push
fimuls
data16
pop
lods
gs
mov
les
pop
jle
add
xchg
cmp
outsl
sbb
xchg
mov
and
mov
xchg
cmpsb
rep
ds
xor
pushl
gs
dec
and
adc
enter
movsb
fisttpll
dec
push
pop
rcrb
pop
xchg
cmp
push
xchg
aam
mov
lret
das
jecxz
xchg
xchg
xchg
sbbb
outsl
push
lea
xchg
add
jp
jb
cld
mov
je
rcl
adc
jmp
call
idivb
sbb
sti
cs
pop
mov
loopne
sysenter
mov
mov
jp
pop
add
das
scas
pop
xor
fwait
hlt
jp
mov
mov
and
stc
jne
aam
stc
dec
lret
data16
jo
out
xchg
push
and
xchg
loopne
scas
call
scas
imul
xchg
adc
jo
or
adcb
insl
mov
loopne
loope
fldcw
nop
xor
stc
and
stc
and
insb
add
add
push
lahf
mov
in
aaa
pop
pop
pop
add
add
in
insb
inc
cmpsb
mov
xor
xor
movsl
adc
push
or
add
mov
inc
mov
dec
mov
xchg
push
shl
cmp
mov
dec
and
in
mov
sti
mov
lret
loop
sbb
cli
and
xchg
je
out
inc
mov
sbb
push
or
cmp
jl
popa
cltd
ret
add
push
push
xchg
pushl
inc
inc
xor
mov
sub
mov
or
into
cli
mov
pushf
nop
pushf
xchg
sub
xchg
addr16
fbld
or
scas
subb
ret
mov
lods
icebp
insl
es
jle
push
pop
or
sub
fcoml
scas
inc
xchg
adc
aas
cmp
push
pusha
push
fcoms
sahf
hlt
mov
lret
loop
or
add
add
jge
jp
jmp
aas
out
jo
dec
mov
dec
xor
sbb
rcrl
xor
inc
mov
inc
aad
or
shl
dec
jbe
in
mov
xchg
cmp
mov
sbb
mov
and
lahf
loope
fcomp
and
inc
iret
pop
shl
pushf
inc
pop
and
sbb
dec
repz
dec
dec
jmp
ret
fnsave
pop
push
stos
lds
stos
mov
or
notb
mov
jmp
cmp
sbbl
mov
add
inc
daa
jg
mov
imul
lret
aad
scas
pop
cmp
pop
ja
mov
jbe
scas
jge
jg,pn
cmp
cltd
push
mov
xor
xorb
mov
inc
notb
mov
mov
scas
jmp
arpl
pop
xor
xor
data16
xchg
dec
outsl
cli
fimull
mov
into
xorl
addr16
mov
ret
jmp
popa
dec
fmull
push
roll
jno
jecxz
xor
in
inc
inc
sahf
pushf
pushf
in
cmp
fwait
inc
call
push
inc
inc
mov
and
xor
mov
mov
lahf
adc
cmp
ja
in
cs
jae
cli
adc
xlat
mov
mov
xchg
cmp
xchg
push
xchg
fisubs
jmp
inc
roll
push
rorl
cltd
lcall
test
sbb
adc
int3
scas
xchg
dec
sbb
lods
jne
inc
pop
xchg
nop
cld
loope
push
jo
imul
mov
adc
shlb
push
nop
adc
xchg
shr
lcall
xor
enter
daa
jae
add
xor
lret
cmpb
test
das
lods
mov
in
inc
push
cmp
sub
jnp
add
xchg
pop
mov
xor
aam
xchg
xor
pop
mov
rorl
call
mov
or
mov
xorb
xor
orl
sub
or
adc
test
or
inc
insl
mov
pop
xchg
ljmp
fidivrs
in
out
pop
xor
stos
aas
lods
cmc
imul
add
dec
adc
ds
sub
popf
mov
mov
and
loopne
pop
xor
or
and
fldenv
push
es
inc
or
xor
jle
pop
adc
xchg
sti
insl
jne
outsl
dec
cltd
cmpsl
mov
and
pop
xchg
aas
xchg
out
rorb
add
xor
xchg
mov
fstpt
pop
shll
add
ror
out
fldenv
xchg
lea
pop
mov
xchg
pushf
in
lea
mov
ds
or
sbb
in
loopne
pop
ficoml
xchg
sti
mov
test
sbbb
imul
and
ljmp
inc
addr16
xchg
pop
add
mov
xchg
push
dec
or
gs
mov
mov
add
imul
and
and
pop
pushf
mov
ss
mov
add
lahf
sbb
adc
or
popf
movsl
mov
xchg
insl
insb
loopne
inc
rcrb
dec
and
loopne
ret
ret
inc
loopne
push
movsl
popf
or
call
shlb
jle
xor
mov
sub
mov
inc
cmp
in
pop
mov
negb
cmpsl
loopne
fidivs
mov
pop
and
sub
push
pop
xchg
lods
in
pop
js
jo
pop
jmp
jg
mov
sub
adc
iret
sbb
cld
xchg
mov
cmpsl
imul
mov
adcl
outsb
cwtl
clc
insb
push
push
dec
dec
xchg
add
int
pushf
or
loopne
pop
jecxz
sbb
dec
cmp
jbe
dec
dec
jns
jns
and
sarl
mov
fwait
or
inc
pop
iret
jl
stos
mov
mov
cmp
pop
mov
ds
bnd
cld
outsl
out
dec
push
or
popf
idivb
pop
pop
add
jno
ljmp
jns
icebp
jns
xorb
mov
dec
orb
inc
sbb
rorl
pop
subl
sti
cmc
ds
xchg
or
push
mov
lret
clc
jbe
or
lods
push
or
sub
cltd
ds
mov
mov
push
bound
push
cmp
adc
bnd
popf
jo
push
nop
in
sarl
std
mov
inc
clc
mov
jne
je
movsb
shlb
movsl
loop
popf
sub
jne
aad
in
stos
inc
dec
mov
sub
xchg
xchg
ret
xchg
in
xchg
add
mov
jmp
iret
iret
ds
bound
loop
jge
aas
unpckhps
mov
in
fidivrs
iret
inc
je
mov
sub
dec
in
test
stc
ficompl
sub
imul
orl
dec
ds
pushf
das
sub
mov
xor
xor
lods
cmpsb
sti
or
ss
inc
inc
cmp
test
mov
test
sbb
jbe
push
push
jge
mov
dec
add
mov
mov
out
aam
in
test
inc
jbe
ficompl
jnp
jmp
mov
icebp
sub
hlt
sarb
cld
dec
and
jnp
faddl
outsb
ror
loope
ljmp
push
dec
jle
xchg
mov
xorb
lock
xor
jbe
push
push
sbb
add
dec
add
in
ljmp
outsb
adc
jo
lcall
js
scas
fbld
push
out
imul
and
push
jmp
mov
or
into
loopne
inc
xchg
cmc
test
sub
and
sti
push
sbb
aaa
js
insl
in
sub
xchg
dec
jmp
sbb
sbb
int3
imul
pop
js
push
adc
xchg
pop
gs
or
ljmp
lods
nop
test
cmc
fwait
push
dec
ds
lock
pop
in
pop
fbld
push
add
add
cld
jb
jae
dec
mov
fstps
sub
dec
je
jae
lds
cmp
mov
mov
dec
inc
mul
cmp
fnstsw
int3
mov
mov
clc
std
popa
push
mov
pop
inc
cmp
push
push
push
insl
fsts
inc
pop
inc
call
roll
mov
add
stos
jb
flds
mov
adc
cmpsb
pop
cmp
jp
add
jae
mov
adc
fidivrl
scas
inc
call
pop
adcb
dec
mov
jnp
push
stos
cmpsb
sti
mov
adc
cld
out
lods
leave
mov
jb
lahf
out
int
scas
pop
sbb
loope
dec
pop
jo
cld
jle
popf
jl
jbe
ja
shll
fucomi
jle
daa
and
int
sbb
in
int
cwtl
pop
in
es
cltd
sbb
jmp
inc
mov
ficomps
repz
dec
xor
jb
mov
cmp
cmp
sbb
dec
pop
dec
sub
aam
jae
jbe
sar
mov
pop
jb
jp
sbb
aaa
clts
jb
push
stos
mov
jg
insb
pop
repz
sbb
call
xchg
push
dec
adc
dec
mov
int
jp
test
inc
in
or
dec
lret
push
in
es
jns
and
sub
cmp
and
sti
pop
add
jnp
mov
mov
jnp
leave
or
cwtl
xchg
das
pop
sbb
cmp
imull
dec
push
rol
or
jbe
mov
loope
icebp
sub
xchg
jnp
xlat
out
popa
js
jo
es
xor
mov
sbb
aaa
and
test
adc
fildll
rcrb
outsb
cwtl
pusha
pop
les
test
mov
cmpsl
fistl
lahf
or
divl
mov
adc
aas
xor
jae
rorb
mov
mov
mov
inc
imul
test
fidivs
dec
xor
inc
xor
out
insb
cmc
mov
push
test
lahf
xor
add
ljmp
loope
ds
adc
arpl
aad
fmul
mov
sbb
inc
jmp
xchg
cmpb
mov
dec
iret
push
mov
sub
xor
mov
xor
or
push
inc
pop
lods
nop
push
jl
loopne
dec
inc
fisttpl
add
and
sbb
pop
xchg
sahf
inc
enter
jb
push
xorw
nop
ljmp
sahf
xchg
std
subl
push
fists
mov
movsl
mov
roll
sbb
gs
mov
stc
pop
push
stos
mov
mov
lock
aam
gs
aam
shrb
popa
xor
dec
sub
push
lret
stc
lret
or
inc
rcrl
test
or
fsubr
cmp
mov
cmc
push
popa
push
fs
je
out
jo
aad
shlb
add
xchg
jnp
in
mov
enter
cmp
xchg
ja
mov
push
loopne
mov
frstor
pop
test
add
jmp
mov
aaa
orb
cs
enter
xchg
inc
pop
daa
icebp
mov
int
sub
jg
nop
out
cmp
ret
inc
pop
rcrl
mov
jecxz
cs
mov
jmp
push
mov
ljmp
mov
mov
jns
jns
out
nop
jmp
adc
mov
dec
mov
rclb
adc
fistps
fdivs
mov
clc
dec
in
scas
pop
test
gs
pop
mov
lods
inc
into
sti
xlat
xor
out
cmc
mov
test
inc
in
js
mov
sarl
sbb
lcall
cmpl
mov
adc
pop
adc
lret
or
ret
mov
jmp
pop
xchg
pop
test
pushf
push
jmp
add
lret
cmc
pop
add
mov
jecxz
jbe
enter
hlt
jle
jns
and
js
test
in
jo
pushf
sbb
nop
inc
idivl
push
xchg
iret
dec
push
push
enter
jbe
push
test
enter
jnp
lahf
or
ret
mov
xchg
adc
xchg
into
dec
xchg
sbbb
add
push
sub
scas
dec
movsb
test
inc
dec
popa
inc
cmpl
sub
dec
mov
xchg
shlb
xor
add
popf
sbb
imul
in
movsb
insl
mov
xchg
mov
push
xor
xchg
out
inc
dec
iret
mov
xchg
and
call
mov
mov
push
jnp
sbb
mov
lock
cmc
inc
test
call
or
out
sbb
imul
pop
sub
cmpsb
je
fwait
pop
sti
scas
or
fisttpll
or
pextrw
push
pop
loopne
jns
lods
dec
test
sub
push
fsts
jg
pcmpgtb
inc
unpcklps
push
andb
mov
rolb
jecxz
jbe
je
into
shll
in
pop
fisttpl
rorl
xchg
shl
sub
sti
shl
sub
cmp
mulb
adc
mov
and
aaa
fistpl
sarl
sbb
sub
mov
lret
xor
fstl
jecxz
lock
mov
stos
sbb
test
adc
jg
punpckhbw
mov
add
ds
movsl
mov
adc
push
push
inc
xchg
mov
lods
daa
in
daa
sbb
jno
icebp
stos
push
push
jns
loop
sub
cmp
jp
movsl
push
mov
mov
jle
dec
push
jp
add
lret
cmc
mov
inc
push
scas
push
jle
iret
mov
inc
subb
aam
fimull
movsl
cmp
push
push
adc
movsl
cs
jnp
pminub
or
cmp
mov
shrb
iret
add
add
jge
dec
push
inc
sbb
in
or
dec
cmp
push
arpl
and
loop
adc
adc
fcmovu
pushl
adc
out
pop
in
push
push
fmull
out
jno
into
pop
sbb
shll
and
shl
cwtl
xchg
lcall
mov
fstp
clc
mov
lods
mov
pop
mov
or
rorb
and
push
sbb
call
mov
adc
push
stos
cli
or
adc
ficomps
xchg
pop
push
les
sbb
push
sti
std
aad
pop
enter
mov
gs
dec
mov
sbb
dec
or
mov
sub
mov
push
or
insb
mov
ss
sbb
push
fs
std
pop
loop
jmp
sbbb
sbb
jne
leave
cmp
pop
xchg
pusha
in
int
cs
cmc
leave
imul
push
push
and
inc
ja
call
dec
cmp
lods
push
movsl
outsl
shll
test
imul
fldl
jne
clc
fisttpl
outsl
mov
push
xlat
in
das
jnp
ret
out
lds
shlb
xchg
call
dec
push
mov
dec
cmp
mov
in
loop
stc
test
or
cmc
test
cwtl
inc
test
call
lcall
ds
push
jae
pop
mov
jnp
jp
pop
push
movsl
iret
scas
add
add
xchg
dec
cli
mov
inc
mov
dec
in
jo
jle
add
dec
jne
lcall
gs
outsb
lea
xor
jns
mov
xchg
cmpsb
jge
jg
cwtl
jg
push
xchg
sti
mov
mov
cmp
popa
hlt
or
push
inc
loop
aaa
loope
xor
xchg
lcall
jmp
pushl
into
mov
jb
push
sarl
subb
lret
aam
push
add
dec
mov
inc
aas
push
clc
jno
pushf
out
add
or
push
and
or
test
jnp
movsl
aam
mov
mov
je
push
in
aad
cltd
and
adc
lcall
enter
xlat
aas
fldcw
aas
daa
movsl
cmp
jecxz
inc
imul
fwait
cmp
iret
pop
xchg
mov
adc
leave
in
cmp
ret
cmp
rep
popa
pop
lret
dec
mov
jb
andl
imul
sub
enter
dec
jp
mov
jno
sahf
mov
add
or
scas
addr16
adc
mov
add
pushf
and
dec
jg
sbb
add
cmp
inc
mov
pop
pop
or
repnz
sbb
adc
lods
pusha
mov
stos
lds
lock
inc
cmp
pop
pop
xor
xchg
in
fyl2x
cmc
jno
shlb
xor
pop
subb
imul
cli
sbb
xor
cmp
cli
or
inc
and
mov
add
xchg
repnz
testl
lcall
loopne
cmc
outsl
out
enter
cld
cmp
add
and
das
or
fs
and
lock
mov
fidivrs
mov
push
cmp
cmp
mov
pop
daa
enter
test
fisttpll
scas
fistpl
test
shlb
adc
adc
sbb
cmpsl
out
push
push
add
jge
jecxz
sbb
mov
xchg
push
sub
mov
adc
cld
xchg
ds
fiaddl
xlat
int3
and
ss
pop
stc
mov
mov
pop
pop
cmpsl
std
out
xor
push
xor
inc
test
pop
push
sub
leave
mov
adcl
sbb
dec
xlat
ljmp
push
fldl
aam
scas
jae
or
cmp
or
xlat
es
inc
dec
test
dec
jg
sbbl
xchg
or
push
sub
sbb
xchg
icebp
cmpsl
fsqrt
inc
push
shl
out
loopne
and
cltd
imul
pop
out
mov
xor
insb
mov
loope
or
or
xor
mov
adc
xor
xor
add
and
out
or
ljmp
ret
xchg
cmp
movsl
jb
lahf
aad
jmp
test
inc
mull
scas
icebp
or
mov
or
sbb
xor
add
jns
mov
or
sbb
push
fadd
dec
repz
subl
mov
mov
je
sub
or
subb
dec
loop
mov
pop
mov
fnstsw
push
pop
and
fs
fadd
lahf
movsb
sbb
outsb
inc
loope
mov
cmp
and
inc
in
hlt
or
mov
mov
fsubl
lahf
cli
int
or
xchg
push
arpl
popf
dec
repnz
fisubs
bound
jo
fbstp
xchg
out
push
and
fsubr
xchg
insb
or
mov
repnz
into
ss
xchg
mov
sarl
cld
pop
sbb
lds
icebp
rcl
and
mov
icebp
inc
xor
lret
lahf
sub
or
addb
cmp
jne
xor
call
pop
popa
movb
push
mov
test
cmpsl
xlat
mov
sbb
or
aam
mov
jnp
push
xchg
mov
pop
mov
stos
sub
mov
js
pop
mov
mov
dec
insb
jecxz
bndldx
icebp
test
insb
xchg
cs
ret
into
adc
sub
xor
xor
pushf
sub
idivl
ljmp
fimuls
jecxz
adcb
xor
cmp
xchg
mov
data16
test
pusha
xor
das
pop
testl
in
or
mov
lret
mov
sub
lahf
jle
push
ficomps
ficoml
dec
mov
and
inc
cmc
cwtl
mov
push
inc
mov
int3
out
dec
scas
pop
jecxz
adc
std
fmul
xor
lcall
adc
pushf
popf
in
adc
test
ret
lods
repz
call
shrb
aam
cmpsb
lahf
lods
test
div
and
insb
adcb
or
dec
inc
iret
xor
ljmp
mov
push
add
ja
jns
and
out
mov
xchg
in
pop
enter
hlt
push
add
notl
les
lods
test
lahf
stos
cmp
pop
adc
sahf
adc
xchg
mov
or
repnz
not
pop
push
pop
test
mov
shll
test
arpl
cmp
and
hlt
cli
xor
jle
pop
in
inc
fdivs
jge
shll
sbb
sti
arpl
lret
push
out
lcall
ret
sub
and
and
mov
push
cltd
popa
loope
fs
repnz
loop
sarl
lock
shll
and
fwait
inc
lea
jl
insb
lret
xor
or
cld
jne
sahf
cmp
mov
jnp
test
es
rclb
xchg
fwait
test
lods
pop
add
clc
flds
lods
inc
test
pusha
add
pusha
jl
xchg
aad
int3
scas
mov
dec
sub
or
in
pop
pushf
inc
jg
scas
mov
or
test
jns
cmp
movlps
cmpsl
adc
xor
xchg
das
in
jle
cltd
sub
hlt
push
fidivrs
lret
sbbb
xor
in
mov
add
or
rcll
stc
inc
faddp
sbb
pop
mov
mov
movsl
dec
jge
leave
stos
lcall
inc
fistl
jecxz
clc
rolb
cwtl
mov
inc
xor
xor
dec
ljmp
add
rclb
inc
aad
push
pop
jo
cmpb
cmp
push
mov
outsl
cmp
and
ds
mov
push
das
sub
aas
pminsw
pop
stos
rorb
daa
dec
mov
adc
lcall
loopne
jnp
enter
sbb
aad
pop
cltd
lods
jno
mov
and
push
sub
fs
out
imul
loop
inc
mov
mov
pop
sti
fnstcw
pop
sub
add
test
out
stc
incl
lock
lea
inc
mov
in
nop
xor
out
or
jns
pop
dec
jl
jl
popf
jnp
jb
pop
enter
pop
lret
sbb
in
aaa
icebp
das
push
outsb
test
xor
xchg
int
jmp
lcall
cmp
push
push
cmp
mov
xchg
adc
iret
xchg
lret
add
lret
fstl
sti
movsb
add
ss
insb
xchg
pop
or
pushl
loop
adc
xor
cmp
cmc
push
jg
and
mov
push
test
test
lock
dec
mov
dec
stos
call
mov
xor
dec
push
incb
pop
in
mov
mov
lock
in
add
pop
jae
rcl
pop
pop
xchg
mov
outsl
std
xchg
leave
stos
mov
mov
dec
xchg
inc
xchg
daa
leave
aad
mov
mov
jge
or
hlt
aas
inc
sbb
push
lret
and
xchg
lock
add
cld
dec
adc
or
fs
mov
and
dec
xor
scas
jns
iret
jno
popf
pop
sub
push
sbb
test
xchg
inc
dec
in
fwait
mov
sahf
sub
iret
imul
insb
jp
sbb
repnz
arpl
add
test
sub
mov
cmp
jae
out
test
lods
push
scas
xchg
nop
aas
mov
adc
jl
push
push
shrl
movsl
jnp
xor
mov
arpl
mov
xchg
lret
pop
scas
cltd
dec
mov
rolb
push
lahf
movsb
xchg
test
push
lock
mov
insl
stos
jne
mov
jg
mov
xchg
les
xchg
lahf
dec
fcmovne
xchg
sub
and
xchg
mov
test
in
mov
andl
mov
push
xchg
add
loope
out
mov
ds
fsubs
sub
ror
sbb
mov
pop
cmp
inc
pop
adc
or
dec
mov
inc
inc
movsb
rcll
or
dec
sub
sbb
inc
dec
hlt
push
push
in
xchg
cmp
cmp
pop
mov
mov
mov
les
dec
add
and
adc
test
and
lock
jb
enter
loope
cmp
mov
lret
jge
dec
in
adc
cld
mov
inc
std
mov
shl
jmp
cmpsl
lods
sbb
aad
test
enter
ficoml
dec
mov
iret
addr16
jae
mov
into
jle
sahf
jbe
xor
xchg
cltd
jmp
lods
lret
in
movsb
data16
pop
fsubrl
push
adc
pop
dec
lds
loope
jo
cmp
pop
xor
cmpsb
je
outsl
ret
movsb
fdivl
and
pushl
adc
inc
ja
adc
loope
pop
imul
xchg
adc
stos
inc
mul
aas
cmpsb
jo
dec
cmp
xchg
mov
xchg
sub
mov
jb
shlb
dec
add
outsl
shll
dec
sbb
leave
and
dec
loopne
out
es
mov
xlat
stc
mov
jo
pop
add
pop
mov
daa
out
andb
loopne
fcomps
cs
dec
push
jns
fisubrl
push
lock
xor
push
or
out
cltd
xchg
ret
inc
inc
call
pop
test
ret
and
test
ja
push
push
repz
mov
mov
lcall
add
lcall
mov
stos
inc
jge
mov
scas
sti
sbb
lret
xlat
xor
jo
ud0
dec
sub
fstpt
data16
subl
or
xchg
dec
push
iret
pop
jg
dec
and
data16
pop
xchg
and
nopl
xlat
mov
pop
xchg
jns
out
pop
negb
sbb
into
pop
and
outsb
inc
mov
mov
outsl
xchg
cmpsb
iret
add
mov
test
call
xchg
xchg
add
push
ffreep
mov
jmp
lahf
lret
popf
psrld
mov
push
cmp
jmp
out
sbb
xchg
mov
cld
xchg
test
popa
movsb
movsb
and
lock
dec
fidivrs
ss
sbb
hlt
cmp
jo
mov
lcall
mov
push
aas
data16
fadds
or
es
and
test
shrb
icebp
lods
push
fstp
add
test
push
pop
sbb
push
and
cltd
aas
xchg
cmp
xor
pop
add
dec
mov
rorl
adc
mov
lahf
out
or
mov
leave
mov
in
addb
mov
inc
xlat
rcrb
out
pop
cmpl
xchg
lds
in
dec
lcall
in
loop
icebp
dec
fists
cld
jb
rcrb
dec
mov
jp
aas
dec
and
or
jl
jns
out
push
xor
adcb
into
in
cld
inc
lret
mov
push
aam
xor
mov
in
and
push
adc
cmpsl
add
or
movsl
or
mov
scas
add
notb
fcompl
push
out
pusha
push
pop
xor
sahf
pop
shl
pop
and
sub
stos
cmpsb
cmp
push
jmp
or
mov
pop
das
shlb
cmp
or
leave
lret
sbb
cmpsl
mov
stc
push
xor
sbb
in
int
cmp
or
ja
mov
or
or
push
les
enter
cli
pusha
mov
mov
das
xor
rcr
pop
repnz
out
ret
ret
dec
shr
add
and
or
dec
jg
mov
pushf
fdivs
mov
mov
mov
sbb
pop
pop
insl
mov
bnd
mov
sbbl
or
dec
inc
add
inc
inc
fwait
pop
aam
mov
aas
xor
cs
mov
outsl
aad
int3
jp
aas
orl
in
flds
repnz
or
inc
pop
in
xchg
outsl
lret
dec
sub
lds
mov
mov
leave
cmp
orl
outsb
les
cmpsb
daa
push
pop
mov
pop
pop
nop
jg
icebp
cmp
jae
jo
call
xorl
adc
and
add
hlt
push
cmp
xor
xor
sub
imul
lahf
dec
push
repz
jecxz
iret
dec
mov
stc
imul
xchg
mov
mov
mov
xorb
int
adc
jmp
jno
and
mov
pop
ret
clc
pushf
xor
push
scas
mov
lcall
sti
pop
imul
stos
lret
out
jmp
dec
sti
push
mov
mov
mov
dec
adc
sti
dec
push
jno
push
ds
or
push
push
subl
jb
insb
adcl
fs
pop
arpl
xchg
jle
sahf
pusha
sahf
outsl
ficoml
pusha
mov
ds
ret
inc
sub
lods
or
and
jne
dec
in
scas
jl
lcall
insb
mov
test
arpl
sub
shll
int3
loope
and
cmpsb
cltd
int3
adc
xor
insl
ret
in
mov
in
jnp
push
cmp
cs
subb
jno
outsb
pusha
movsl
xor
dec
dec
divl
stc
adc
mov
xchg
test
stos
pop
ljmp
pop
ljmp
movsb
sub
xchg
in
xor
pushf
dec
or
sub
out
inc
mov
pop
mov
xor
lods
inc
in
push
xchg
and
inc
sub
je
lock
movsb
not
fmul
jle
lcall
aad
push
or
insb
or
lock
sbb
sbb
fsubs
cmpl
int3
jns
cmp
popa
cli
ret
test
sub
mov
out
pushf
xlat
inc
or
fwait
or
mov
stos
rcll
repz
sbbl
pop
and
cmp
enter
add
sar
mov
inc
repz
sub
pop
in
mov
dec
stos
or
push
sub
jg
sbb
pop
nop
aad
int
test
imul
push
scas
push
jnp
clc
pop
adc
xchg
mov
and
add
imul
mov
inc
ret
in
pop
cmp
ret
sub
test
cltd
add
scas
pop
insb
inc
or
mov
in
lahf
into
ret
cmpsb
sbb
ljmp
imul
jno
mov
inc
lods
dec
push
sbb
popf
adc
fs
shlb
cmp
lret
movsb
cmc
xchg
stos
mov
lcall
pop
xchg
je
sbb
sub
pop
fwait
mov
call
bound
mov
pushl
mov
dec
testl
ret
xchg
or
dec
sub
inc
js
xchg
into
scas
rolb
dec
mov
in
out
popf
cs
or
sub
xor
sbb
jo
or
adc
es
mov
mov
ds
add
scas
sbb
daa
inc
jmp
xlat
adc
rcll
sti
sub
or
iret
out
lret
dec
cmp
divl
cmp
inc
pop
in
dec
pop
cmp
es
cmc
push
add
rolb
mov
in
jbe
inc
push
and
jg
std
stos
sub
mov
in
imul
xorb
cmp
mov
leave
dec
loope
fldcw
gs
mov
cmpsl
jns
pusha
adc
bound
sbb
jg
jge
stc
ret
dec
adc
and
or
mov
xchg
mov
iret
loop
mov
or
lahf
shl
imul
inc
sub
lea
ds
sarb
pop
outsb
stos
add
push
pop
out
or
sbb
xor
add
sub
cmc
xor
xchg
push
jns
ja
jg
inc
stos
or
sbb
out
cltd
icebp
and
bound
adc
xchg
dec
fwait
mov
lcall
mov
push
icebp
std
cwtl
mov
mov
out
inc
rcrb
das
outsb
je
mov
movnti
mov
xchg
jbe
cmpsb
mov
bound
sahf
popf
dec
mov
jg
push
pop
data16
in
mov
adc
add
lret
and
negl
sbb
sahf
xor
call
or
add
jmp
ds
jne
cwtl
lods
mov
loop
mov
notl
and
sbb
and
test
daa
call
clc
stc
and
nop
out
adc
mov
sub
std
xchg
lcall
dec
adc
out
cmpsl
sbb
jp
jl
inc
jne
jmp
stc
cmp
dec
sub
dec
or
enter
inc
test
dec
ror
xor
les
jmp
clc
jb
ss
insl
aas
xor
aad
jg
insl
std
imul
and
leave
and
inc
adc
arpl
lods
jae
fs
pop
aas
sbb
push
or
inc
jl
pop
sub
inc
popa
sbb
pop
sbb
sahf
and
lea
mov
sub
and
dec
pusha
xor
icebp
push
push
pop
clc
xchg
gs
xlat
mov
sub
in
jns
push
dec
adc
inc
mov
or
xchg
push
ljmp
mov
scas
daa
lds
ljmp
xchg
loope
lret
ss
add
or
sti
mov
dec
add
push
mov
cmc
leave
out
decb
fs
pop
jl
shlb
jbe
lods
push
and
movsb
stos
inc
mov
push
shl
cmpsl
pushf
loopne
leave
sub
pop
mov
enter
into
ds
and
mov
cmpsb
add
lret
ljmp
xorl
pop
in
dec
cmp
popf
sub
jmp
ss
add
call
add
repnz
cmc
sti
jg
loope
inc
adc
ret
push
inc
xchg
sub
cltd
xchg
out
jg
es
jg
sbb
les
dec
inc
xor
lea
pop
je
movsb
mov
cs
sub
add
subl
pop
popa
mov
pushf
mov
je
adc
lock
aad
or
jnp
fs
push
adc
jae
mov
push
push
testl
loope
insb
lds
cli
mov
pop
mov
shrb
loopne
dec
pop
push
mov
test
or
lods
sub
pop
add
push
xchg
enter
add
or
call
ds
ds
sub
insb
xor
lret
hlt
idivl
shl
int
dec
sub
gs
test
leave
mov
jp
inc
pop
mov
pop
or
jle
cmpsb
push
mov
outsb
xchg
arpl
push
in
dec
aaa
in
iret
inc
popa
in
pop
rcrb
roll
mull
test
sbb
mov
cmp
pop
push
test
push
push
fwait
jmp
jg
das
daa
and
add
mov
mov
or
push
push
and
cltd
in
jbe
jne
ds
out
adc
ret
out
loope
inc
fs
push
add
fcompl
nop
jae
outsb
fwait
std
movsl
fs
lret
add
dec
lahf
fidivrl
jne
out
sbb
cmpl
in
enter
push
std
push
inc
and
pop
divl
out
mov
add
negl
cld
cmp
insb
mov
jle
loop
sub
lret
sahf
sbb
inc
jmp
int3
jle
scas
xchg
mov
cs
fwait
sbb
test
jmp
jmp
sbb
cmpsl
out
jl
pop
popa
xchg
sbb
pusha
mov
sub
pop
xchg
xor
or
mov
push
mov
sbb
lret
ja
xor
test
pop
jo
orl
jle
lods
lock
pop
lcall
mov
or
cli
in
icebp
aaa
and
ljmp
mov
shrl
xor
mov
adc
aas
loope
mov
pop
movl
andl
push
fsts
inc
pop
loop
and
lret
mov
xchg
or
jae
cmp
outsl
mov
mov
and
sub
sub
mov
or
lea
dec
fst
jp
cltd
cmpsl
fisubs
sbb
push
popa
sahf
pop
and
inc
xchg
paddw
data16
jno
mov
int
xchg
xor
mov
data16
popf
push
add
cmp
out
enter
addr16
dec
xor
inc
lods
mov
pop
push
and
into
aas
and
popf
push
pop
xor
and
sbb
out
push
gs
imul
mov
mov
dec
mov
mov
call
xchg
inc
inc
push
dec
mov
std
pop
fstl
xchg
sahf
inc
aam
imul
push
or
mov
cmc
negb
xor
call
out
push
pop
orb
pop
idiv
pop
mov
fcmovnb
xchg
hlt
mov
push
fcmovbe
insb
subl
fstpl
mov
push
pop
push
popf
cmp
adc
push
aaa
shlb
mov
xor
cmp
arpl
in
add
or
and
xchg
jl
sub
xor
ljmp
repz
flds
mov
cmp
leave
sarl
xor
ficoms
push
adcl
in
fsubs
repnz
sbb
mov
test
xlat
popf
stos
xchg
or
add
xor
push
sub
sbbb
lahf
loopnew
xor
pop
outsl
pop
and
push
add
mull
push
push
insb
outsb
push
ss
and
cli
xchg
dec
jae
push
sub
xchg
mov
inc
fwait
mov
lds
insb
push
in
xlat
out
in
aam
or
and
enter
fptan
sub
lret
pop
push
cmpb
sbb
and
xor
pop
int3
bound
pusha
cmpsl
jbe
xor
mov
push
sub
inc
roll
cltd
std
bound
sub
inc
inc
jb
aad
mov
popf
and
mov
cmc
push
mov
out
or
add
cld
lods
icebp
into
xchg
stc
or
ja
imul
fsubrs
xchg
dec
ljmp
and
sbb
adcb
pop
mov
jne
lret
imul
push
mov
cld
or
adc
cmp
cmpsl
sub
push
sbb
js
cmc
mov
jge
push
xor
sub
adc
add
loopne
mov
adc
shll
mov
xchg
ljmp
xchg
js
lret
scas
xor
jns
int3
cli
movsb
std
fsub
sbb
pop
fdivl
mov
scas
lock
pop
mov
adc
out
icebp
sbb
push
popa
les
insl
push
jbe
movl
subl
dec
jae
xchg
inc
lods
push
or
dec
push
xor
fisubrs
dec
inc
data16
add
push
xchg
xchg
pop
pop
or
and
mov
outsl
fwait
sbb
mov
shrl
sbb
push
aaa
add
imul
dec
dec
pop
inc
push
cmp
dec
add
xor
mov
jg
mov
mov
push
addb
loop
enter
enter
or
mov
xchg
cmc
pushf
cmp
inc
stos
jo
and
dec
sarb
xchg
xor
lahf
rolb
mov
fistpll
mov
cmp
or
fsts
xchg
inc
fdivs
jns
or
push
mov
in
mov
sbb
or
test
addr16
cs
das
outsb
xor
ds
aas
rorb
repnz
or
popa
popl
idivl
repnz
std
sbb
inc
addl
cmc
adc
push
adc
inc
fs
into
sub
mov
in
insb
cmp
and
push
cwtl
push
sbb
sbb
out
sahf
cld
mov
push
jl
jmp
or
enter
mov
popf
ss
mov
lret
pop
xor
dec
in
in
jnp
adc
sarl
pushf
xor
scas
arpl
jne
cs
push
and
cmpsl
cmp
dec
fists
loope
pop
lcall
jmp
push
xchg
jle
les
dec
xor
pop
lret
push
insl
and
push
ds
ljmp
in
pusha
xor
int3
mov
sbb
xor
add
sahf
xor
mov
xor
lea
rcrb
rcll
jbe
fsubs
pop
fs
jne
rcrb
stos
out
push
add
enter
dec
or
lret
shrb
and
cwtl
mov
pop
xor
lds
adc
fsubrp
int3
mov
jns
data16
cwtl
push
pop
mov
mov
loopne
or
push
sti
outsb
cmp
push
sar
mov
cli
cld
xchg
dec
xchg
addr16
pop
or
loopne
lods
xchg
xchg
das
loope
pop
or
in
mov
cmp
aas
jo
in
cmp
sub
bound
sub
adc
adc
mov
test
into
mov
repz
int
sbb
addl
mov
roll
cmp
mov
aaa
orl
inc
cmpl
xchg
test
popa
aam
pushf
mov
xchg
inc
mov
mov
inc
xor
add
out
dec
inc
inc
cmp
std
hlt
jnp
push
arpl
push
pop
popa
inc
adc
adc
mov
out
jmp
push
lahf
xchg
lcall
xchg
mov
cmp
movsb
inc
in
out
xor
es
pushl
aaa
das
sub
push
dec
or
leave
out
adc
popa
cmp
nop
pop
fistl
fs
jge
mov
cmp
testb
xor
inc
addr16
fmuls
push
fisubl
inc
enter
pop
mulb
cwtl
jle
mov
lds
daa
dec
jnp
outsl
sub
pop
cli
pop
dec
dec
sub
loopne
sarb
movsl
adc
and
pop
cwtl
fucomip
jbe
sbb
test
push
cmp
mov
in
mov
or
jmp
movl
push
sbb
xchg
popf
fs
leave
mov
ret
xchg
xlat
push
mov
push
arpl
mov
jp
jecxz
pop
outsb
mov
ja
push
push
cmpsl
icebp
xchg
sub
fisttps
push
sbb
add
xchg
or
mov
adc
cmpsb
popa
and
lret
adc
mov
imul
out
sti
imull
mov
jno,pn
ss
cld
fcomps
repnz
fildl
jb
insl
and
jle
add
push
dec
in
mov
dec
sub
in
sbb
out
xchg
lea
pop
pop
fsubr
mov
dec
adc
push
lret
sbb
push
sbb
jb
in
adc
sbb
push
sub
popf
flds
and
cmp
cltd
jl
push
inc
xchg
and
popf
inc
sti
std
js
pop
jg
mov
outsb
mov
enter
test
jmp
or
mov
sbb
inc
jle
inc
popa
outsl
sbb
jle
sbb
mov
sub
mov
push
fdivrs
cmp
in
jecxz
mov
out
and
stc
outsl
adc
ljmp
cli
pop
mov
mov
movsl
jmp
add
insl
dec
xchg
stos
adc
push
cmp
pop
xor
pop
sbb
add
fcomi
repz
enter
test
sub
aad
iret
aam
iret
mov
outsb
xchg
fimuls
xchg
cmc
jecxz
repz
popf
sbb
ret
je
hlt
cmpsb
in
sub
out
loopne
es
pop
inc
outsl
cltd
cmp
sarl
adc
mov
sub
fdivrl
mov
ror
sbb
sbb
mov
xchg
pop
push
jnp
xor
loope
jbe
lods
shrl
pop
rcl
ret
cmp
into
push
outsb
pop
cmp
negl
and
out
lahf
ret
pop
push
nop
mov
fadds
inc
adc
push
inc
add
adc
ja
and
cli
xorb
and
push
xchg
jno
pop
not
pop
sub
add
mov
push
jns
jne
mov
jb
pop
scas
xlat
std
outsb
and
jecxz
jbe
cltd
and
lods
mov
pushf
test
into
mov
mov
or
pop
aad
sbb
fs
scas
sti
int3
cmp
jae
xchg
push
adc
pusha
lock
push
sbb
fcos
push
mov
notb
sbb
nop
mov
xor
lea
mov
data16
lret
push
pop
fsubr
lock
jge
stc
jbe
ljmp
mov
mov
and
adc
push
in
xlat
daa
xor
dec
leave
dec
fsubrp
lahf
jl
loop
mov
jl
mov
push
mov
or
cmc
sti
movsl
sbb
lcall
pushl
push
mov
das
stc
mov
inc
xchg
jb,pt
and
fcoml
lds
rcll
xchg
aas
stos
popa
insb
mov
sbb
fs
mov
insb
shlb
mov
cmc
test
pushf
cmp
mov
cmp
or
test
xchg
adc
mov
jb
or
xor
or
dec
shrb
out
pop
mov
and
mov
xor
mov
push
and
mov
or
pop
cltd
sub
sahf
mov
push
aaa
mov
adc
pusha
lcall
cmp
lods
mov
push
or
mov
pop
jg
enter
out
repz
aad
dec
dec
add
aas
xor
dec
mov
insl
packssdw
push
pop
jg
and
cwtl
ffreep
call
jns
mov
sahf
sbb
mov
lds
pop
leave
fstps
ret
pop
inc
dec
loope
out
sbb
adc
stos
inc
sbb
out
xor
movsb
test
sub
push
in
cmpsl
pop
mov
out
in
aam
pop
mov
imul
inc
sbb
fcoml
add
mov
lods
push
pop
sahf
sbb
out
adc
pop
xor
rol
cmp
aad
call
push
jg
out
jl
sub
add
ljmp
inc
xchg
pop
lahf
jb
hlt
sti
xchg
cmpsl
sub
add
stos
scas
push
ss
jmp
cmp
pop
daa
mov
or
std
mov
xchg
push
imull
mul
loopne
cmpsb
nop
inc
add
negl
andb
ljmp
cs
pop
push
lret
fwait
outsb
add
mov
sahf
js
sub
push
sbb
and
xor
mov
je
fsub
mov
shll
rorb
ret
mov
adc
mov
push
xchg
ret
push
adc
cmp
bound
bound
cwtl
push
cmp
mov
outsl
insl
ret
pop
js
pop
and
mov
or
out
rorb
xchg
popf
das
jnp
enter
aad
pop
rcll
gs
fidivl
call
sub
mov
and
vpsllw
xor
xor
xor
arpl
lret
das
push
xor
add
mov
fsubl
fscale
jnp
push
lock
mov
cld
repz
sbb
jmp
sarb
repnz
test
mov
push
iret
jle
add
push
insl
daa
mov
jno
aas
imul
adc
mov
push
lahf
leave
aad
test
lds
push
add
xor
inc
dec
cmp
ret
in
aam
or
jmp
sub
into
cmpsb
pop
pushf
mov
ja
pushf
jp
fs
ss
pop
sub
test
loop
xchg
jle
stos
push
jns
subb
inc
das
fldcw
mov
cmp
mov
call
cmp
jmp
repnz
adc
push
out
fidivl
mov
pop
into
xchg
mov
cmp
inc
jo
sub
adc
outsb
mov
xor
call
das
lods
nop
sti
pop
ja
shrb
in
in
sbb
jns
pushf
shll
call
push
lcall
das
mov
inc
push
jmp
sbb
xchg
sbb
push
stc
rclb
xor
addr16
and
jno
mov
xor
push
mov
or
cmpsb
and
xor
xchg
shlb
adc
cmc
xchg
add
je
pop
fst
shlb
jnp
ffree
loop
xchg
push
sbb
add
std
insb
shl
xchg
xor
sbb
sub
sub
divl
sbb
nop
or
fisubrs
adc
inc
out
mov
dec
mov
push
jle
mov
push
jbe
movsl
add
sbb
push
stos
cld
inc
nop
push
and
xchg
and
xlat
sbb
push
adc
dec
sub
aam
mov
cmc
fcomps
sbbl
sub
movsl
mov
arpl
sub
dec
xlat
stos
bound
push
cld
pop
js
and
in
mov
or
push
mov
mov
les
xchg
ret
test
jb
aaa
sub
test
ljmp
cs
das
push
sahf
mov
fmuls
jns
and
mov
push
mov
pop
sbb
jnp
jb
cmp
fidivl
mov
ja
sbb
fsubl
mov
or
lea
fcmovnb
pusha
and
push
jae
sbb
jbe
je
cmp
sbb
jo
lret
shrb
dec
cmp
cmpsl
loope
cmp
decl
inc
fcomp
inc
in
add
pop
pop
jg
out
imul
dec
dec
add
pop
xchg
pop
lock
xor
mov
fwait
outsl
or
push
aaa
xor
pop
and
pop
aaa
out
xchg
mov
jmp
inc
pop
xchg
lods
xor
mov
stos
xchg
or
dec
rclb
orl
iret
inc
cmp
or
pop
jmp
loope
xor
pop
fsubrl
or
mov
add
idiv
dec
mov
mov
or
jg
push
aas
jo
fmuls
push
std
fimuls
jns
xor
mov
psadbw
cmpsb
cld
scas
lret
pop
mov
outsb
mov
es
fmull
inc
lds
lahf
mov
ss
jecxz
add
pop
cmp
fildl
dec
mov
jmp
and
jns
xor
es
fsts
fists
add
xor
jl
lea
sub
fcmovnb
movsb
dec
dec
dec
xchg
cmp
mov
es
in
inc
into
neg
jno
pop
pop
gs
or
add
jns
cmpsb
cmpsl
jge
pop
add
mov
es
mov
xor
ja
push
cmpsl
xor
mov
dec
adc
icebp
mov
push
out
adc
pop
sbb
mov
pop
xchg
xor
mov
fcompl
std
pushf
jae
in
push
out
push
lcall
xchg
mov
mov
xlat
ds
sbb
mov
sub
add
xchg
sti
ss
inc
lock
sub
dec
int3
fbstp
andl
mov
xor
adc
xchg
sti
outsb
mov
fcomi
sub
pop
mov
dec
fdivrs
mov
sbb
dec
cmp
xchg
nop
and
add
mov
nop
loope
or
nop
inc
mov
jb
xchg
mov
in
mov
adc
adc
insb
inc
loop
dec
out
aaa
ret
or
push
adc
lcall
shrb
jmp
cmp
mov
mov
adc
aas
pusha
shrl
loopne
sbb
std
cwtl
fs
out
mov
lods
jecxz
sub
fcmovu
iret
push
addr16
daa
or
aaa
xchg
xor
jmp
pop
sub
jle
lcall
mov
fs
inc
insb
xlat
enter
aad
push
pop
cwtl
push
dec
xchg
jp
add
push
cld
mov
push
jnp
xchg
dec
mov
xor
lods
insl
mov
xor
mov
lcall
hlt
ljmp
mov
pop
pusha
fdivrp
add
movsl
sub
lcall
mov
xchg
inc
pop
rorb
sub
mov
mov
pusha
mov
mov
mov
in
xchg
pushf
rorl
ret
inc
aas
cmp
and
mov
movsl
rolb
push
pop
push
sbb
xor
out
arpl
sbb
sub
mov
inc
mov
mov
or
mov
aam
in
outsl
xchg
hlt
aaa
popa
jg
sarb
mov
xor
inc
push
nop
mov
push
pop
in
mov
mov
jae
addb
mov
jne
pusha
lcall
mov
aas
mov
imul
into
push
std
leave
test
xchg
dec
or
outsl
mov
xor
icebp
into
lret
iret
or
xchg
clc
and
sbb
in
and
or
call
xchg
pusha
aaa
add
push
add
pop
inc
add
xlat
stc
movsb
fdivl
jmp
xor
rcr
add
cmp
mov
call
mov
pushf
mov
cmp
pop
lret
push
int
cmpb
or
imul
stos
inc
lods
aas
mov
inc
inc
mov
or
mov
into
jg
mov
mov
mov
pop
jne,pt
lret
dec
leavew
repnz
lret
push
and
jp
lret
jp
add
int
les
jnp
rclb
push
mov
es
in
or
pop
push
je
mov
aas
leave
stc
push
add
and
in
adc
lahf
and
lret
cli
and
adc
cmc
jne
cmp
mov
stc
mov
mov
push
mov
dec
out
js
pop
mov
xor
or
xlat
loopne
imul
movsl
and
js
pop
sub
iret
pop
add
add
or
mov
inc
xor
daa
sti
jmp
fwait
mov
inc
fildll
pop
cwtl
xor
xchg
test
jae
push
xor
mov
hlt
lcall
stc
pushw
negl
in
mov
sub
or
stc
movsl
cmp
nop
loop
call
addb
std
mov
cmpb
fisubrl
mov
fisubl
dec
es
xchg
pop
sub
add
jae
in
jge
fwait
or
in
out
inc
gs
push
in
add
loop
mov
pop
sub
xor
dec
jecxz
das
gs
imul
cmpl
ss
mov
out
popf
push
jno
xchg
cmpb
jge
repz
cmc
fbld
sahf
mov
aaa
data16
pop
loopew
sbb
data16
fnstsw
mov
sbb
jp
push
jo
mov
call
cwtl
sub
int3
in
adcl
add
mov
rorl
clc
xor
and
and
test
cmc
pop
mov
jns
and
mov
ljmp
adc
mov
pop
daa
imul
or
daa
sub
and
fwait
mov
pusha
and
mov
xchg
flds
lds
inc
rorl
mov
call
xchg
testb
sahf
je
sub
les
or
push
std
das
movsl
loopne
dec
pmaxub
or
repnz
xchg
cs
pop
mov
shrb
mov
xchg
test
std
sbb
pop
xlat
loop
cmp
mov
gs
and
sti
mov
inc
out
lea
fwait
inc
mov
cli
adc
and
repz
jb
pop
cs
mov
xchg
add
sub
and
or
mov
nop
repnz
negb
mulb
push
aad
add
loopne
loop
pop
daa
mov
test
xor
inc
andl
mov
repnz
or
scas
cmp
jb
sub
frstor
mov
or
adc
xor
push
sahf
xchg
lret
cmp
call
inc
dec
int3
fldl
es
and
lcall
ffree
pop
sub
js
pusha
stos
fstpl
sub
dec
fsubl
push
or
fdivs
aas
mov
adc
or
inc
cwtl
cmpsl
repnz
movsb
test
lahf
add
jnp
mov
cmp
xchg
push
fcomps
mull
mov
out
jg
jge
push
repz
popf
dec
xchg
in
sub
loopne
sbb
push
inc
mov
pop
aaa
aas
mov
sti
jg
inc
lret
out
imul
xchg
mov
cmpl
cs
xchg
js
cmp
jp
gs
cmpsl
mov
lret
clc
movsl
jecxz
lods
xor
int
les
jmp
cmpsb
xchg
aas
cmp
aas
repnz
dec
mov
cli
outsl
cmp
and
les
imul
icebp
fwait
or
cmp
push
jb
xchg
test
aad
cmpb
data16
lds
scas
add
clc
and
ds
jmp
adc
sub
std
xchg
lock
cmp
fiaddl
and
mov
push
fnstcw
sbb
mov
into
inc
xchg
repz
dec
std
rcr
notb
push
inc
imul
fs
ss
dec
fabs
adc
mov
add
cmp
cmp
xor
push
test
adc
jae
mov
fadds
push
sbbb
mov
pushf
in
adc
sub
ljmp
and
mov
inc
int3
push
fistpll
aas
dec
test
movsl
adc
add
jl
sub
and
aam
ds
cmc
scas
int
into
xchg
cwtl
fdivl
movhps
lods
xchg
or
mov
ret
int3
arpl
roll
in
sbb
rcl
adc
and
cmp
xor
mov
add
in
imul
enter
and
mov
adc
cmp
push
sub
fiaddl
jmp
mov
or
mov
dec
xchg
addr16
mov
orl
inc
stos
push
add
ss
nop
fdivl
adc
lods
out
es
jg
mov
fidivrs
push
scas
aas
lds
mov
fcompl
xadd
lea
stos
iret
inc
cli
imull
andb
adc
imul
pop
jbe
pop
sub
mov
ret
add
mov
and
stos
adc
ljmp
xchg
mov
add
popf
mov
lret
sub
xor
sbb
gs
xchg
repz
inc
arpl
mov
xor
mov
lods
aas
mov
xor
mov
in
repz
out
icebp
pop
pusha
sub
push
scas
clc
mov
sub
cli
aam
fnstenv
mov
xor
mov
pop
popa
sub
and
scas
xor
in
jmp
out
ljmp
mov
dec
std
insb
fimull
bound
adc
jne
incl
adc
test
push
mov
jge
stos
arpl
mov
inc
inc
ret
popf
and
dec
in
jno
insb
inc
jg
push
xchg
fucomi
dec
je
sub
rorb
mov
jmp
fnstcw
scas
cmc
adc
xchg
loop
pushf
pop
sbb
xor
push
cmp
push
stc
cmpb
test
sbb
mov
fsubrl
movsb
cmc
mov
sub
int3
add
mov
lods
sub
push
mov
and
lods
pop
pop
imul
nop
test
adc
xor
cli
mov
xchg
dec
push
jne
cli
mov
lock
xchg
or
push
ds
xchg
adc
pop
fdivrl
sbb
jmp
dec
or
pop
push
imul
leave
xor
je
aad
xor
test
insb
jo
xlat
pop
mov
xchg
cmc
fldt
and
lods
das
cld
movd
shl
pop
inc
pop
popa
mov
adc
lods
in
mov
in
jno
adc
xorb
dec
sbb
push
data16
jne
sbb
jmp
lret
push
pop
movsb
mov
jmp
pop
mov
lahf
mov
lods
ds
adcb
pop
cmp
or
mov
xor
pop
sahf
jae
movsb
jmp
sbb
in
xchg
sub
jge
loope
stc
icebp
lret
fwait
adc
jne
add
cli
adc
xchg
and
lods
imul
das
scas
leave
ret
fs
adc
shrb
loop
mov
insb
or
loop
pop
ss
mov
mov
nop
addb
jae
push
sub
xchg
jbe
push
pushf
or
sub
mov
sbb
jl
movsl
cmp
sub
shlb
outsb
jmp
add
dec
inc
testl
insl
cmp
jmp
lret
les
sbb
shll
cmp
xor
outsl
imul
out
imul
mov
jmp
xorl
fcoms
sbb
adc
mov
loopne
push
jmp
push
xchg
mov
rcr
dec
cmp
mov
push
or
int3
xchg
push
lahf
lea
sarl
pushf
push
push
push
incb
pop
lds
and
cltd
jbe
add
les
popf
in
mov
rorl
ljmp
inc
hlt
push
shlb
loop
lock
dec
or
push
inc
sti
hlt
fisubrl
mov
push
data16
adc
sbb
cmpsl
pop
jle
adc
std
int3
dec
cmp
aas
inc
mov
aam
into
or
rol
loope
dec
add
shrb
pop
test
jo
mov
cmpsl
pop
or
ds
cmp
pushf
push
arpl
cs
mov
xchg
pusha
xchg
push
mov
add
or
cmpsb
mov
dec
ljmp
dec
xchg
jbe
out
mov
mov
sbb
jmp
sub
faddl
mov
sub
push
mov
add
mov
movsl
lds
movb
dec
mov
mov
mov
mov
orl
mov
jns
pop
test
inc
int
and
lea
pop
mov
sar
mov
fs
data16
inc
out
xlat
aam
jnp
out
stos
jle
dec
cmp
jg
xchg
loopne
in
dec
mov
inc
jbe
fstpt
fbld
js
fbld
jge
cmc
mov
jae
xor
xor
cmp
or
cwtl
arpl
insl
inc
xlat
pop
insb
dec
pop
leave
mov
das
mov
adc
or
pop
jg
fsubrl
sbb
pop
cltd
mov
cmp
dec
add
jb
divb
push
ret
sbb
lock
in
nop
fidivrl
popa
idiv
notl
or
jge
cmc
sbb
fwait
sub
dec
jbe
iret
or
out
insl
iret
xchg
sbb
stos
push
mov
mov
int
mov
adcl
or
scas
and
dec
inc
lods
fildl
ds
jg
mov
lret
lods
into
push
add
sub
test
sbb
mov
sub
jle
or
test
rcr
leave
cmpb
xchg
mov
popa
cltd
pop
adc
xchg
jne
mov
test
mov
jnp
lods
icebp
es
fbstp
xchg
sbb
loope
sub
enter
jl
pop
push
test
sbb
push
and
jno
subb
les
leave
js
mov
jb
xor
pop
inc
incb
xlat
adc
cwtl
outsb
sbb
pop
push
mov
add
out
mov
mov
xchg
imul
push
ds
inc
jp
pop
in
jg
cltd
jno
addr16
adc
div
mov
psubq
repnz
ret
xor
fmull
and
mov
push
inc
inc
out
loopne
jne
or
pop
cwtl
ss
sub
xor
jbe
fst
nop
sub
daa
sub
mov
outsb
cmp
add
and
cmpsb
or
sub
imul
js
push
cld
shrl
mov
fnstsw
and
xchg
repnz
cmp
push
je
xor
cmp
iret
insl
mov
mov
lcall
fwait
aad
or
cwtl
into
or
pop
int3
mov
popl
mov
fstpl
hlt
shl
pop
pop
mov
testl
out
divb
test
daa
pop
add
outsb
sbb
sti
mov
xor
push
js
pop
sbb
xchg
mov
xor
inc
xor
lea
adc
orl
movsl
add
out
mov
sub
sbb
adc
jmp
mov
mov
jns
mov
inc
iret
xchg
and
xchg
mov
fdivl
mov
daa
test
js
shrl
notb
mov
cmpsl
pop
xor
mov
insb
inc
mov
outsl
out
shrb
xor
adc
imul
add
jge
les
std
out
dec
mov
jecxz
push
push
insl
andnps
push
jp
sbb
ja
mov
lahf
adc
addr16
cmp
enter
fs
roll
mov
fs
push
dec
push
addr16
lcall
jnp
fcomps
adc
sbb
cli
aaa
fwait
xchg
push
mov
orb
mov
test
and
add
les
cmp
fsts
push
xchg
icebp
mov
notl
mov
mov
push
inc
jmp
repz
mov
or
adc
popa
inc
jbe
xor
dec
xor
sar
lods
cld
ret
mov
inc
jb
inc
cmp
lret
inc
gs
inc
enter
pop
sbb
lret
sbb
xchg
dec
test
jmp
scas
nop
andb
adc
sti
sahf
and
pop
ljmp
cmc
add
xchg
mov
or
hlt
dec
enter
shlb
mov
loopne
inc
cwtl
jns
orl
inc
repz
cs
fildl
mov
mov
jnp
adc
addb
scas
fdivrs
push
mov
xor
setg
filds
out
ljmp
subb
rorl
mov
imul
orl
dec
lods
inc
pop
jle
push
mov
mov
cmp
xor
xor
pusha
mull
fistpl
inc
pop
dec
jecxz
mov
clc
cmc
sub
and
mov
dec
cs
cmp
cmp
push
imul
lahf
ret
xchg
mov
out
addr16
mov
out
jg
fdivrl
dec
loopne
out
xchg
add
adc
imul
iret
push
push
xor
fwait
jae
andl
push
out
aam
and
ljmp
fiaddl
cmp
jmp
mov
bnd
in
cmp
push
in
cld
or
iret
adc
mov
es
push
es
push
xor
or
nop
mov
inc
dec
iret
ficoms
dec
pop
mov
adc
dec
pop
ljmp
jnp
stos
or
dec
push
adc
decb
xor
cmp
push
mov
inc
mov
loope
test
shl
popa
fisubs
mov
xchg
aam
repz
cmp
jle
adc
sub
dec
ja
movsl
aam
or
popf
push
adc
xlat
mov
mov
add
push
iret
sub
mov
mov
push
rclb
in
mov
rep
and
xlat
dec
leave
adc
sub
hlt
popf
in
jb
add
iret
fisttpll
das
daa
dec
inc
lret
xor
push
jbe
out
fsubr
popa
xlat
incb
mov
rorb
sarb
pop
jnp
or
ret
popf
mov
popf
mov
mov
test
insb
push
inc
and
lods
in
negb
xor
mov
cmpsb
push
mov
shr
nop
push
and
dec
mov
dec
shrl
and
scas
mov
push
mov
mov
sbbb
ss
push
push
sub
movsl
fistps
scas
xchg
adc
push
enter
jecxz,pn
sbb
jl
mov
or
add
in
ljmp
sbbb
push
ljmp
mov
shll
adc
test
jae
inc
push
xchg
je
les
es
jnp
lret
push
fmuls
cld
mov
pop
mov
lret
push
xchg
push
mov
mov
lock
lret
lods
push
push
jecxz
int3
sub
pushf
adc
arpl
mov
add
pop
mov
sub
adc
mov
xor
mov
sbb
or
insb
sarl
scas
shlb
xor
dec
leave
loope
aam
sahf
in
test
xchg
pop
pop
je
pop
aas
pop
sbb
cs
fiaddl
aam
cmp
and
push
xchg
es
xor
jbe
daa
pop
mov
cwtl
push
gs
test
mov
std
sbb
daa
sti
and
fsubs
or
stc
movl
fdivrs
in
cmpb
pop
pop
mov
or
in
ret
adc
scas
dec
add
mov
xchg
or
shrb
test
fwait
cmp
loop
xor
popa
jns
test
mov
inc
in
scas
mov
push
andb
out
inc
sbb
and
cwtl
bound
sub
cmpsl
mov
popf
ficoml
int
add
xor
sbbb
push
mov
aad
jp
add
sub
aam
push
lods
cmpsl
les
jo
fs
aas
daa
pop
mov
stc
mov
sub
iret
lods
gs
push
sbb
lea
adc
loop
pop
cmp
outsl
push
push
mov
lret
xchg
testl
cld
ja
push
sub
mov
sub
iret
mov
jae
or
or
ljmp
bound
mov
pop
mov
mov
aam
xor
xchg
push
stos
fbstp
cltd
or
pop
sbb
inc
dec
jg
xor
clc
or
inc
loope
es
jnp
xor
push
sub
testb
inc
jg
ret
pop
cmp
push
gs
out
xor
push
loopne
das
mov
dec
sbb
adc
repnz
hlt
fidivs
cmp
fld
jl
fs
pop
pop
jbe
dec
aad
xlat
push
push
dec
sub
cmp
pop
enter
add
add
push
mov
mov
push
push
jp
sarb
xchg
ud0
in
sbb
pop
mov
mov
loop
fldcw
pop
out
lahf
das
je
cmp
push
stos
rorl
sbb
dec
lret
dec
pop
push
data16
outsb
mov
dec
push
in
mov
in
dec
add
movsl
pushf
pop
jge
sar
out
fcmovnbe
testb
push
fimull
xchg
and
mov
push
arpl
outsb
mov
in
mov
pushf
dec
repz
cmp
jmp
insb
mov
shlb
jno
push
and
cmpl
mov
pop
fdivrl
jnp
mov
call
ret
sti
xor
outsb
int3
inc
push
jmp
std
push
sub
fistl
inc
xchg
lea
je
dec
mov
push
or
or
bound
movsb
nop
adc
xchg
bound
and
clc
sub
dec
ficompl
adc
roll
aas
push
and
dec
js
fldl
fwait
inc
nop
sahf
mov
push
popf
or
addr16
ret
push
mov
out
sahf
dec
das
sbb
test
jge
pop
sub
inc
push
adc
adc
dec
mov
and
test
cmp
test
dec
sahf
mov
stos
sub
aad
adc
mov
ja
and
xchg
sbb
cli
xorl
addr16
jns
mov
enter
xor
neg
fistps
xor
mov
test
ret
add
jne
clc
add
sahf
ja
or
orb
add
mov
fnstsw
or
xlat
in
fildl
inc
mov
jne
and
jl
mov
dec
cmp
pop
cmpsb
ss
add
or
add
inc
repnz
mov
mov
sub
xchg
aam
adc
lods
cwtl
cld
mov
cmp
aas
mov
and
push
leave
clc
push
cmc
sub
pop
ret
addr16
dec
cmp
out
mov
and
inc
pop
sub
xlat
arpl
add
fisttps
jecxz
mov
mov
xor
cld
mov
push
ret
lcall
inc
inc
cmp
pop
stos
std
icebp
cmp
push
js
xor
jae
and
shlb
jno
loopne
fdivl
aas
outsb
push
mov
call
repz
movsl
hlt
sahf
mov
icebp
mov
and
mov
pop
es
mov
cltd
in
jns
xor
adc
leave
gs
ret
cmpb
jns
lss
in
imul
jecxz
sub
scas
xchg
testl
and
rorl
stos
xchg
lahf
lahf
lcall
mov
jmp
lret
pushf
cld
in
pop
push
push
lahf
loopne
and
imul
sbb
lea
scas
nop
std
xchg
test
in
int3
mov
mov
xlat
and
int3
popf
mov
cs
clc
addr16
imul
lret
lea
jle
xchg
adc
inc
jle
das
jb
call
xchg
test
outsl
std
cmpsl
test
push
fdivl
push
iret
je
lods
sub
jb
test
mov
jmp
pop
icebp
or
jle
call
mov
rcll
shll
adc
jb
add
aas
xchg
ret
cmp
add
dec
lods
sbb
ljmp
or
enter
cmpb
int
push
mulb
jbe
cwtl
xor
add
dec
imul
cmp
test
xor
mov
mov
xchg
arpl
push
daa
xchg
pop
les
and
ja
push
cmc
cmc
sub
jae
jmp
stos
mov
lea
aaa
icebp
jl
inc
push
fs
mov
push
sahf
int
xlat
fwait
adc
sbb
xchg
in
addr16
mov
movsb
sub
mov
rcll
jbe
sbbb
nop
or
xor
jne
subb
decl
pop
cmp
pusha
cmp
imul
xchg
rclb
xchg
mov
add
sub
mov
dec
ss
in
mov
inc
xchg
pop
das
movlps
jo
mov
jmp
pop
lahf
cmpsb
and
lea
test
aam
jb
leave
stos
fwait
sti
cmp
jecxz
sbb
repnz
adc
cmp
pop
lods
aas
ret
cmp
loop
jbe
aad
scas
ret
xchg
inc
mov
test
xchg
jnp
cmpsb
cli
pop
std
fildl
cmpsl
gs
lock
loope
fsubrs
lea
movsb
test
xchg
clc
jo
and
jns
das
mov
flds
imul
and
test
mov
mov
mov
mov
filds
addr16
xor
xchg
call
fdivl
and
sti
das
jmp
lods
mov
and
out
xchg
cltd
repnz
outsl
add
pop
xor
or
push
repnz
lods
decb
es
sub
dec
pop
std
out
stc
mov
push
dec
js
xor
or
lods
out
xor
ret
cmp
inc
cmpl
pop
mov
push
lock
push
add
loop
xor
inc
adc
test
add
insb
rcll
dec
pop
jmp
das
gs
jecxz
aad
and
aaa
jnp
inc
fstp
adc
sbb
adc
jp
ffree
movsl
rcrl
jmp
mov
jmp
loope
js
add
xorb
or
dec
movsl
mov
cmp
push
jge
test
inc
out
push
movsb
cmp
sub
loope
mov
fbld
pop
and
push
dec
add
add
add
stc
in
adc
pusha
movhps
jmp
test
loopne
loope
hlt
xchg
xchg
cmpsl
push
adc
adc
push
jae
in
mov
cmc
aam
rcrl
ss
pop
push
push
repz
mov
stos
lcall
xchg
pusha
stos
cld
push
int3
adc
dec
orb
in
arpl
hlt
dec
inc
xorl
movsl
add
pop
repnz
shrb
jg
addr16
mov
scas
fsubrs
cmp
nop
ja
adc
push
xor
xchg
clc
popa
xchg
xchg
adc
mov
lds
enter
into
fmull
nop
in
test
mov
lret
lahf
push
sub
xor
bound
es
mov
ds
inc
dec
lret
mov
pop
lock
not
mov
cmp
cmp
sbb
add
dec
bound
jne
popf
fstl
mov
jmp
into
or
lods
repz
dec
test
fnstenv
jae
scas
dec
mov
ds
cmp
mov
or
xor
sub
andb
xor
sub
mov
mov
mov
jnp
dec
push
repz
out
mov
and
bound
jb
cmpsb
dec
jo
ret
xor
int
lods
xor
decl
cmpsl
dec
rcl
fs
xchg
movsb
das
mov
xor
mov
mov
ljmp
jb
xchg
pop
push
mov
xor
mov
in
dec
hlt
cmpsb
jle
xor
ret
pushf
mov
xchg
mov
cmc
fimuls
test
mov
scas
mov
push
ss
add
pop
std
xor
mov
cmp
insb
fldcw
fwait
ds
and
mov
jnp
sti
add
out
push
add
xor
lods
sbb
inc
fists
xchg
jns
jge
mov
mov
fwait
in
cmpsl
fs
lock
add
push
xchg
mov
popa
repz
imul
rorl
int
xchg
cmpsb
out
jg
ljmp
int3
jns
insb
xchg
sahf
xor
inc
pop
scas
adc
sub
add
fld
outsl
xlat
data16
test
dec
push
mov
or
cld
cmpsb
xor
subb
fdivs
ds
dec
divl
mov
cmpsl
xor
pop
cmpsb
or
dec
lea
adc
mov
adc
push
fwait
mov
sbb
sbb
sti
movsl
adc
push
clc
int3
inc
insb
xor
js
iret
pop
jmp
mov
stc
xchg
stos
push
lret
jecxz
mov
call
add
and
dec
sub
shll
loopne
cmp
lcall
sahf
mov
dec
dec
sub
test
inc
push
and
push
out
iret
cmc
bound
sub
jbe
fwait
lahf
aam
sbb
jle
movsl
xchg
cmpsl
adcl
arpl
cmp
xchg
std
js
mov
lret
fisubrl
lcall
mov
mov
fmuls
les
pop
push
nop
sti
loopne
je
cmp
pop
das
push
push
xchg
out
mov
leave
dec
ror
insb
call
ss
jl
add
mov
ud1
outsl
pop
jo
lea
nop
and
es
aaa
mov
push
mov
pop
imull
sub
sarl
sbb
or
and
into
lods
mov
cmpl
xor
test
cltd
aad
jne
adcb
jo
loopne
adcb
xchg
out
jnp
fistpll
dec
das
je
jne
daa
shrl
pop
and
and
ret
jmp
aas
sub
inc
pop
out
fstpl
mov
pop
add
std
jbe
daa
cmpb
clc
je
mov
aam
add
mov
cmpsl
cmpsl
dec
rolb
lret
cld
divl
dec
daa
inc
push
shll
xlat
jmp
push
fnstcw
aas
adc
sbb
mov
cmp
jmp
ds
jl
push
in
push
out
enter
outsb
out
ja
hlt
adc
shll
mov
xchg
insl
daa
pop
enter
sbb
pop
cmp
jmp
inc
movsb
push
jmp
lea
xchg
dec
outsb
sub
adc
pop
in
or
cmp
or
std
fcomps
mov
jns
sub
pop
ds
mov
jp
push
mov
in
je
cmp
jns
shll
inc
xor
sub
cmpsb
imul
or
lods
divl
ret
inc
pusha
dec
daa
sub
lret
divb
insl
mov
add
jae
cmp
fs
daa
test
and
xor
mov
hlt
xor
sub
pop
mov
xlat
loopne
hlt
scas
push
xchg
mov
outsb
mov
shl
mov
roll
in
ljmp
sbb
filds
or
sub
arpl
hlt
sbbb
or
mov
jo
cmpsl
jecxz
cli
lock
andb
ret
sub
cmc
fsubrl
inc
adc
mov
push
sub
push
pushf
subl
insl
sbb
mov
aas
pop
add
mov
ret
cmc
test
push
je
sub
mov
jmp
xchg
dec
into
mov
out
cmp
xor
out
cwtl
pop
xchg
leave
pusha
lahf
in
cmc
add
or
pop
pushf
fndisi(8087
add
xchg
bound
sbb
mov
xor
imul
aas
pop
push
adc
ja
lret
sbb
xor
pop
sti
inc
cwtl
push
mov
lcall
in
mov
sbb
bound
cmp
std
leave
xor
adc
fnsetpm(287
or
jge
and
test
jl
lret
inc
mov
loop
pop
inc
addr16
int
in
push
aaa
cld
ss
es
scas
add
push
scas
and
or
push
jb
aaa
xchg
loopne
jns
cltd
jp
xadd
dec
push
out
imul
xchg
or
insb
and
rorb
stos
dec
add
loope
bound
mov
out
mov
xchg
lcall
push
inc
jge
testb
out
fabs
xchg
cmpsb
dec
sbb
sbb
mov
das
and
repz
xor
outsb
je
aaa
hlt
sbb
gs
in
leave
rcrb
sub
mov
mov
xchg
jbe
mov
enter
mov
pop
jl
leave
leave
sahf
js
lret
test
lcall
stos
or
inc
fwait
cli
adc
in
xchg
test
cmp
and
pushf
es
ja
cs
shll
pop
stc
adc
push
lahf
xchg
inc
sar
lcall
add
xchg
cmp
out
or
sub
dec
sub
add
inc
fstp
mov
leave
xchg
js
adcb
jl
stc
jl
out
fwait
outsl
sbb
ja
repz
or
push
into
mov
mov
cmc
add
cmp
sub
cmpsb
shrb
call
fisttps
pop
xor
jp
in
hlt
pusha
push
shl
addr16
xchg
pop
sbb
inc
xchg
out
xor
je
hlt
aaa
arpl
push
outsl
dec
nop
fwait
out
in
rorb
cmp
pop
pop
and
cmpsb
adc
xchg
data16
jl
push
xor
in
mov
test
fidivrl
mov
outsl
fwait
rcrb
mov
jns
dec
call
cmpsb
sub
inc
xchg
filds
nop
cmp
fidivrs
cmp
mov
mov
xor
repz
xor
aad
stos
mov
mov
jnp
loop
push
mov
dec
push
int3
scas
inc
mov
sbb
push
mov
jbe
push
mov
js
mov
insl
lret
or
dec
jbe
dec
xchg
loop
pop
sahf
dec
loopne
andl
xor
loop
roll
inc
pop
addl
jns
cmp
stos
sub
divb
fdivrl
cmp
movsl
loop
cmp
jae
push
push
fcompl
stos
or
push
fs
orl
not
jl
notl
in
es
aas
inc
lock
out
stos
fwait
add
les
mov
movsl
or
jns
add
adc
xchg
inc
je
cltd
sub
test
fidivrl
nop
movsl
jmp
xorl
xlat
push
add
hlt
sub
addr16
dec
mov
je
mov
inc
sbb
mov
cmp
dec
mov
xor
push
mov
pop
xchg
pop
arpl
inc
movsb
jmp
sbb
push
jne
pop
xchg
jg
xor
xor
loop
dec
mov
inc
cltd
mov
mov
bound
mov
mov
out
cltd
mov
mov
adc
xchg
inc
cmp
xchg
les
dec
jbe,pn
xor
dec
mov
cwtl
mov
imul
mov
dec
sarl
jne
in
push
jge
add
aad
lcall
in
or
es
mov
inc
adc
push
cmp
stc
hlt
mov
repz
ss
jne
mov
dec
fcomps
jmp
aas
cltd
sahf
xchg
fs
jl
test
loop
and
inc
jmp
push
mov
jo
fisttpl
fdivrs
andl
add
movsl
xchg
lea
inc
push
sbb
jne
mov
test
mov
aaa
cmp
push
leave
sbb
insl
jbe
sub
fucomip
call
cs
cmp
outsl
ss
push
mov
lods
push
jne
rclb
xchg
shrb
add
xor
mov
and
jge
fidivrs
int
and
lahf
cltd
jle
mov
jmp
leave
loop
add
shrb
dec
add
cmp
popa
and
pop
mov
fs
mov
pop
or
mov
xorl
lret
out
push
cmp
pop
vandnps
rcr
inc
lcall
icebp
add
dec
and
cmp
xor
fcoms
imul
cld
fcoml
rcll
push
fsubl
popf
mov
out
into
mov
pop
dec
cmp
cmp
js
xor
pop
lahf
mov
cmc
jne
inc
push
popa
icebp
test
cs
inc
add
dec
ficompl
mov
xchg
cmp
adc
cmovg
xchg
or
inc
fldl
out
insb
dec
push
subb
adcb
jecxz
mov
mov
sbb
fisttpll
fisttpl
inc
pop
mov
adc
mov
dec
cmp
fisubrl
scas
lea
outsb
seta
mov
mov
fcmovu
push
std
mov
sbb
push
or
dec
pop
mov
push
shll
decb
lahf
aam
scas
jns
xchg
test
pop
shrb
lods
movsl
add
mov
add
stos
sbb
jbe
adc
roll
jle
pushf
lock
call
pushf
jl
clc
cmp
ljmp
out
ret
mov
sbb
faddl
sub
addr16
lea
cmp
add
adc
dec
test
dec
jne
mov
or
add
shlb
sarl
dec
loopne
out
jno
add
cmp
push
pop
jmp
out
sub
shr
xor
stos
dec
adc
add
mov
shll
jp
pop
lds
xchg
xor
mov
and
pop
ror
mov
jae
mov
stc
sub
xor
dec
lcall
rorl
das
mov
jae
add
cmpsl
jecxz
mov
mov
cmp
cmpsb
sbb
mov
mov
pushl
push
sub
mov
out
pop
sub
sub
xchg
in
dec
xor
fistpl
test
sbb
fwait
outsl
xor
pop
inc
mov
outsb
push
mov
loop
cld
push
fldl
incl
sub
call
lret
dec
mov
jl
fiaddl
pop
mov
icebp
int3
lahf
xor
test
das
pusha
xor
mov
aad
jg
sbb
ljmp
out
in
pop
inc
sbb
dec
xlat
loopne
jg
inc
mov
push
sub
mov
fildll
or
std
cmp
into
cmc
sarl
pushl
ds
adc
xor
loop
pop
out
mov
rcl
xor
push
xchg
mov
mov
xchg
shlb
pop
out
jnp
out
in
cmpsl
jecxz,pt
mov
shll
lds
mov
jb
add
mov
call
adc
xchg
mov
ret
xchg
sahf
movsl
cmp
cmp
ss
dec
fnstcw
xchg
add
xlat
or
xor
jp
bound
mov
enter
addb
cmp
ror
and
sub
imul
pop
loopne
aam
in
in
pop
jnp
and
inc
sarb
dec
dec
shlb
pop
mov
shll
repz
std
mov
and
pop
lods
mov
rorb
dec
or
popf
sti
push
aas
test
mov
mov
mov
ljmp
imul
xchg
shll
mov
aas
jnp
mov
pop
stc
ljmp
lock
jns
lret
pop
mov
dec
jmp
ljmp
ljmp
and
ja
in
pop
into
sub
outsb
sbb
orl
aam
nop
bound
lret
lret
sbb
pushf
push
pop
roll
cmp
sarl
out
mov
movsb
shlb
or
fs
pop
ret
cld
aaa
sub
jne
movsb
das
mov
sbb
scas
movb
xchg
add
xor
mov
adc
repnz
scas
negb
mov
cmpl
aas
data16
insl
mov
pop
pushfw
adc
xor
cmpsl
and
lcall
outsl
push
frstor
and
fdivr
pop
aad
outsl
rcrb
dec
stc
in
jb
pop
jle
push
je
mov
mov
cmp
and
stc
pushf
bound
data16
lret
gs
cmc
scas
cmp
sahf
xor
cmp
pop
stc
xor
insb
mov
fs
out
jge
int
xor
jns
lcall
cwtl
and
in
xor
stc
pop
sub
loop
sbb
shl
xchg
mov
adc
lods
lret
cs
cmp
xor
xchg
push
sahf
outsl
mov
inc
pop
dec
negb
mov
scas
add
lcall
jns
mov
hlt
sbb
ret
adc
cmc
sbb
aaa
cmp
mov
jle
jecxz
push
sbb
push
dec
fidivrl
cmp
jmp
movsb
fcomi
outsl
inc
cwtl
add
jb
fists
arpl
cmp
inc
ficompl
movsb
push
js
les
cwtl
or
and
daa
sbb
mov
test
in
cmp
movl
icebp
sbb
sti
or
fnsave
pop
push
adc
and
lcall
lods
call
dec
mov
lret
dec
jnp
jmp
rclb
int3
push
cmpl
mov
mov
xor
dec
lret
mov
push
imul
adc
sub
decb
sbb
inc
sub
loopne
dec
fnstenv
adc
lcall
das
mov
test
or
pop
and
mov
lcall
dec
ret
loop
push
dec
fnstsw
jae
add
push
xor
push
rcrb
cmp
pop
sub
inc
mov
mov
inc
sahf
pushf
ror
into
mov
in
imul
loope
dec
fstps
es
and
cs
icebp
imul
loopne
adc
aam
clc
cmc
add
push
imull
movsb
and
arpl
push
inc
mov
icebp
add
jne
adc
iret
xlat
mov
xchg
das
ja
inc
mov
ret
aas
leave
clc
cltd
int
imul
int3
push
xor
inc
mov
push
ret
lock
jnp
xor
dec
fwait
mov
pop
sub
fucomp
ja
fs
hlt
xchg
and
test
push
in
out
xor
push
xchg
pop
flds
dec
sub
imul
fidivl
add
cld
cmp
arpl
andb
inc
xor
aas
shlb
sub
or
test
enter
test
inc
scas
push
sbb
cmp
fcompl
push
xor
inc
popl
shrl
les
inc
push
mov
xchg
bound
insl
cmc
rcr
notb
cmp
bound
lods
mov
mov
into
mov
jo
shl
aam
stos
sub
jecxz
or
dec
mov
cmp
scas
and
and
pop
lock
mov
scas
xchg
rorl
pop
mov
push
fsincos
mov
dec
mov
add
int
xor
add
push
decl
push
add
mov
add
std
or
leave
test
xchg
ds
sti
push
xchg
js
scas
pop
fidivs
aam
test
loop
pop
fadds
fdivrs
push
test
lret
add
bound
cmp
mov
pop
popa
leave
dec
adc
dec
add
inc
mov
add
sub
xchg
add
cmp
shrb
mov
or
sub
xchg
xlat
sbb
xlat
pushf
jl
sbb
dec
jl
adc
mov
jnp
mov
sbb
cwtl
std
lds
jmp
or
fldcw
or
mov
test
inc
add
mov
ret
imul
xor
les
xlat
mov
rolb
pop
int
fwait
add
push
and
cld
mov
and
and
jl
or
jle
or
lods
add
scas
int
xlat
or
ret
out
sbb
pop
cli
testb
fwait
lahf
add
lds
pop
cmpsl
xor
imul
pop
inc
rol
test
out
add
rcl
inc
pusha
inc
mov
sbb
call
aaa
xchg
vmwrite
test
mov
push
add
aam
pcmpgtb
push
inc
std
mov
or
aad
adc
push
test
or
cmp
mov
mov
adc
mov
movsl
or
pop
faddp
inc
mov
mov
icebp
sub
sub
popa
dec
and
js
into
add
stc
clc
in
lret
outsb
popf
es
adc
in
mov
arpl
out
pop
and
repnz
lret
xchg
cmpsl
push
clc
and
iret
adc
push
mov
xlat
rol
fisttps
sbb
jae
or
sbb
add
shlb
pop
insl
shlb
xlat
lcall
hlt
sub
ret
mov
insl
iret
xchg
jmp
xor
out
stc
cmpsb
aaa
add
or
pop
scas
sbbl
jecxz
sti
insb
call
pop
cmp
mov
sbb
push
jge
insl
iret
into
adc
mov
add
fiaddl
adc
pop
hlt
std
jne
enter
cmpsl
and
pop
push
and
mov
sub
cs
inc
clc
jno
pop
mov
push
jnp
stos
decl
dec
imul
xor
loop
shll
repz
push
or
pusha
insl
cmp
data16
adc
mov
pop
ret
inc
jno
ja
lods
and
pop
bound
out
iret
lock
jle
je
adc
cmp
dec
dec
mov
fisubl
jp
test
std
mov
lcall
mov
mov
jne
or
jg
cltd
cmpsb
mov
push
mov
sub
les
aaa
stos
sub
mov
stc
dec
push
data16
and
jl
sbbl
jne
or
push
dec
fdivrl
sbb
in
outsl
mov
shll
roll
sarb
rcll
sub
and
movsl
cld
cmp
or
push
call
xchg
xchg
mov
sarb
xchg
xchg
or
adc
lcall
push
sti
xor
cmpb
lds
insb
jae
dec
dec
lcall
mov
jmp
fildl
push
ljmp
test
gs
imul
inc
frstor
in
mov
push
push
ds
push
lock
scas
inc
or
lds
or
dec
jmp
add
mov
or
adc
lds
popa
insb
xor
push
dec
inc
and
repnz
bnd
xor
je
adc
int
jns
call
insb
mov
lret
js
and
rol
decb
rcrl
pop
rcl
jecxz
jge
mov
push
or
ss
std
dec
bound
inc
lret
cmpsb
xchg
aaa
cs
aam
xchg
fwait
cli
xor
aad
mov
push
repnz
pop
mov
sahf
jno
and
repz
stc
les
ljmp
add
adc
jbe
adc
inc
fwait
xchg
testb
mov
ja
push
jne
mov
inc
lret
aaa
xchg
mov
outsl
jb
add
dec
or
and
mov
inc
sbb
mov
stos
lcall
loopne
stc
jecxz
pop
insl
outsl
je
out
sub
loop
push
in
pop
push
push
sbb
jmp
adc
call
xchg
push
js
repz
ret
scas
mov
insl
adc
std
addr16
sub
jge
and
ds
cmp
movsl
cs
das
nop
mov
pop
inc
pop
std
xor
dec
enter
mov
dec
push
or
xorl
hlt
mov
or
daa
lret
cmp
mov
imul
outsl
faddl
sub
jg
mov
nop
cmp
lcall
outsl
mov
and
icebp
or
ja
iret
push
outsl
xchg
jmp
cmpsl
loopne
data16
mov
das
sub
xor
int3
rcrl
cld
or
add
sbb
outsl
lods
out
mov
popa
sarb
mov
iret
loopne
or
push
jns
mov
cmp
xchg
jb
or
cmp
shrb
rcll
and
pushf
pop
sub
push
test
xor
loop
xor
cmp
mov
push
pop
and
mov
fcompl
adc
mov
pusha
adc
or
stos
out
cmp
mov
int3
rorb
jne
js
cmp
stos
xor
xor
add
fstl
rorl
scas
jmp
nop
fcomps
cmp
iret
std
imul
and
test
dec
push
sub
mov
fdivl
ss
sti
aad
mov
mov
call
sbb
pop
xor
sbb
pop
mov
adc
xor
aaa
pop
xor
std
jbe
out
cwtl
xchg
add
inc
in
xlat
xchg
and
pop
jge
or
sub
popf
roll
mov
adc
leave
or
mov
movsl
jno
push
lea
adc
out
lock
push
jmp
jae
pusha
sub
arpl
mov
xor
inc
mov
push
popf
mov
out
pop
push
hlt
cmpsb
push
lret
add
pusha
dec
nop
mov
jl
dec
dec
arpl
fsubr
push
mov
jns
aam
push
jmp
sbb
mov
push
push
mov
adc
fstpt
je
sar
push
xor
inc
mov
push
and
lds
rcrl
dec
movsb
mov
xchg
int3
pop
lret
or
dec
mov
pop
and
sti
fdivrs
fidivl
push
mov
xchg
xor
fnsave
inc
add
jno
or
bound
xor
mov
aam
or
rol
mov
arpl
cli
mov
mov
xor
dec
leave
sti
js
ss
out
mov
icebp
sbb
push
inc
mov
and
and
xor
sahf
mov
mov
test
pop
std
negl
mov
pop
jg
inc
fnstenv
inc
adc
fildl
shl
aad
jo
adc
inc
or
inc
xchg
outsb
and
dec
inc
lahf
or
fistpl
rcll
pop
scas
popa
out
xchg
outsl
jb
int
pop
sub
loope
add
pop
mov
pop
shrb
inc
push
pop
sarl
test
dec
adc
imul
fdivr
out
out
test
push
mov
xor
fucomi
adcb
fisttpl
adc
xor
imul
into
lret
push
stos
dec
scas
mov
push
fdivs
addr16
mov
jecxz
sbb
jecxz
int3
fld
fsubrl
or
mov
sbb
mov
mov
divl
inc
mov
push
add
pop
or
into
insb
mov
mov
sub
dec
or
add
test
or
pushf
jp
push
sub
or
scas
je
push
in
ljmp
les
mov
xchg
jp
fdivrl
dec
add
cwtl
inc
inc
inc
movsb
jb
mov
stos
loop
movsb
inc
inc
inc
jne
lahf
popf
cwtl
push
lods
clc
popf
fistpll
inc
jl
in
mov
pop
mov
inc
mov
mov
dec
stc
cli
imul
cmp
xor
sbb
shll
xchg
or
xchg
les
stos
xchg
gs
add
add
xchg
shll
cmpsb
loop
mov
xchg
loop
ljmp
out
jl
fbstp
mov
dec
xchg
insb
jnp
je
cmp
popl
or
insb
push
test
mov
mov
inc
pop
push
stos
push
cmpsl
pop
scas
jnp
fsubrl
ds
fildl
fidivrl
add
dec
lea
es
fidivs
lds
and
stos
popf
sub
test
lahf
push
jl
fwait
in
inc
outsb
xchg
mov
pop
mov
inc
data16
sbb
lahf
pop
cwtl
sbb
loope
pushf
int3
cmova
mov
dec
xlat
ljmp
das
cmp
scas
lods
daa
lods
pop
out
aad
stc
cs
daa
shlb
out
mov
std
sbb
enter
bound
pop
cld
and
fisubrs
pop
arpl
icebp
std
iret
xchg
mov
dec
popa
mov
insb
test
jecxz
loop
int
lret
fadds
mov
dec
sub
sub
in
adc
mov
scas
imul
push
add
mov
test
pop
popa
scas
inc
mov
cmp
mov
cmp
jno
lock
cs
sbb
js
lret
cwtl
and
pop
mov
bound
call
mov
mov
push
adc
rol
jb
stos
jp
inc
scas
push
pop
leave
inc
xchg
pop
adc
outsl
call
push
mov
push
in
inc
cli
mov
add
fstpt
add
xchg
push
cmpsb
je
lcall
push
dec
test
mov
int3
or
loope
sahf
test
lods
pusha
test
mov
xor
adc
cmp
mov
scas
loope
icebp
push
shrb
lods
sub
subb
pop
cmp
mov
push
push
mov
sbb
rcrb
fbld
lcall
push
repnz
mov
lret
xchg
inc
stos
push
test
sti
hlt
xor
imul
or
push
sub
cmpsb
int3
cltd
add
ljmp
add
jno
sarl
repnz
stc
xchg
or
mov
aaa
sbb
test
push
imul
push
xchg
jg
xchg
test
das
mov
mov
inc
test
sub
sbb
movl
sbb
sahf
cwtl
repnz
and
test
imul
inc
pop
jns
push
fcompp
pop
push
testb
in
mov
test
scas
push
test
jbe
cmp
jg
add
mov
jnp
lods
inc
push
arpl
pop
addr16
js
cmp
mov
mov
xor
cmp
mov
xor
pushf
sahf
fdivp
xor
aaa
fs
in
bound
dec
lods
sbb
push
or
dec
pop
in
movsl
mov
notb
cld
cmpsl
hlt
inc
adc
mov
cs
cld
jecxz
xor
ljmp
jmp
pop
test
push
sarl
pop
ret
dec
shrl
je
jbe
sub
push
push
aad
loope
push
ds
pop
add
lret
mov
cmp
stos
xor
sub
push
cmp
dec
and
jnp
popf
sbb
pushf
and
lcall
ror
enter
test
sti
mov
mov
and
test
cld
lods
les
pop
pop
cmp
jmp
arpl
addr16
imul
jecxz
add
inc
outsl
sti
and
push
cmp
cli
sub
aaa
arpl
lods
cli
cmc
mov
push
or
inc
std
push
xor
and
out
jns
inc
adc
sbb
bound
mov
loope
sub
rorl
mov
movsl
cltd
add
mov
cld
cmp
js
jnp
and
and
in
es
fsubl
sahf
dec
in
nop
add
xor
dec
jge
cmp
xchg
repz
xlat
hlt
jmp
rcr
adc
pop
data16
mov
xchg
push
dec
xor
movsl
and
add
adc
lea
mov
addr16
push
adc
fs
lahf
sarl
jl
sbb
out
inc
add
ret
scas
sub
cmpsl
iret
lods
pop
and
adc
and
mov
dec
and
push
mov
lret
cmp
aas
add
sbb
inc
arpl
or
aam
or
movl
adc
dec
ss
icebp
dec
scas
movsl
xor
loop
in
adc
cli
or
mov
push
fiadds
jno
sbb
push
pop
sub
dec
adc
xchg
cmp
jne
inc
xor
mov
adc
pop
mov
mov
enter
mov
add
xor
fildll
fadds
pop
shlb
sahf
and
mov
stos
xor
xchg
subb
scas
clc
jns
xorb
jge
es
mov
xchg
shlb
xchg
je
xor
mov
mov
lret
out
xchg
adc
pop
cld
jbe
lcall
push
xchg
sbb
dec
out
punpckhbw
and
fimull
daa
adc
shll
imul
int
ja
pop
xchg
mov
movsl
inc
std
arpl
icebp
cmpsb
test
je
fistl
aaa
push
dec
push
lods
das
sti
int3
cwtl
enter
fsubrl
flds
insb
xchg
pop
xor
bound
lea
or
arpl
mov
sbb
dec
push
dec
xor
mov
cmpsb
lock
pop
popf
dec
pop
lret
les
sbb
ja
add
mov
in
push
je
scas
imul
xchg
sub
sahf
fwait
in
mov
lods
cmp
daa
inc
adc
mov
jns
mov
xor
jno
dec
aas
sbb
dec
clc
mov
in
push
outsb
addr16
jg
dec
les
push
enter
jo
or
and
mov
push
arpl
pop
hlt
insl
xchg
xchg
lret
lret
pop
mov
addr16
cs
repz
fmull
testb
pop
xchg
stc
fbstp
push
jle
cmp
add
mov
scas
jo
jg
mov
imul
das
jo
pop
mov
dec
call
sbb
inc
xchg
and
pop
ficoml
sub
push
sbb
mov
cmp
adc
cmp
jbe
dec
loop
jge
pop
pusha
movsb
lahf
add
pushf
sub
icebp
xor
push
xor
jnp
mov
adc
icebp
fistl
inc
ss
lds
add
cmp
lods
xchg
aas
sbb
insl
or
or
ja
sbb
and
and
mov
iret
in
push
xor
sub
mov
cltd
fsubrl
dec
add
test
inc
insb
mov
and
hlt
ss
sti
jle
testb
sbb
sub
mov
imul
xchg
ret
and
and
daa
ja
mov
shll
adcl
jmp
dec
add
xlat
cs
popf
repz
nop
loopew
and
fwait
leave
sub
mov
aaa
pop
xorl
pop
clc
daa
push
jl
rorb
arpl
ja
sbb
fiadds
xorb
subl
popa
xor
or
ss
inc
fadds
cmp
push
nop
cltd
mov
scas
repnz
cwtl
icebp
insl
add
inc
push
cmp
xchg
cmp
shlb
and
inc
repz
stos
pop
cmp
adc
leave
lret
inc
jecxz
ret
pushl
mov
lods
in
jo
imul
addr16
jnp
xor
cwtl
ret
cmp
adcb
pusha
mov
mov
js
pushf
lret
aad
jne
mov
jmp
and
int3
in
mov
sbb
adc
sbb
and
stc
adc
or
shrl
insb
sub
sti
cmpsb
pop
push
das
jecxz
adc
inc
pop
push
sbb
xchg
xchg
pusha
out
ret
mov
jg,pt
in
push
stc
push
cmp
ds
pushf
scas
pop
push
mov
adc
stc
and
mov
push
ljmp
pop
addr16
in
dec
jp
pop
xchg
sbb
test
mov
and
push
lahf
cmpl
or
imul
add
aas
xchg
pop
add
add
sarb
fs
cltd
xchg
bound
push
call
loopne
mov
push
sub
fistps
inc
cli
dec
dec
push
fs
sub
mov
ud1
push
mov
stos
cld
cli
dec
mov
mov
cwtl
pop
or
pop
push
cli
adc
arpl
xchg
adc
and
loope
test
xchg
mov
xchg
sub
inc
jge
in
dec
mov
in
mov
pop
insb
loopne
ja
cltd
stos
je
adc
incb
push
cmpsl
in
cmp
out
insb
scas
adc
orb
mov
scas
jbe
out
insb
pop
adc
sbb
mov
add
inc
mov
mov
sbb
add
test
push
shrl
adc
sub
xor
in
xchg
sub
xchg
push
xor
mov
adcb
pop
lods
sarb
and
das
sub
dec
inc
sahf
sbb
lcall
lds
jecxz
mov
ret
xor
pop
push
shll
nop
pop
inc
add
pop
ret
cli
jae
xchg
loop
and
xor
adc
popa
imul
aaa
cmpsb
sbb
cmp
pop
aas
mov
sub
jno
leave
jmp
call
add
jecxz
mov
sub
scas
sbb
sbb
popf
mov
push
mov
and
sub
in
mov
pop
ret
push
outsl
xor
lea
adc
xchg
fs
incl
add
jno
and
les
out
arpl
xchg
xchg
mov
mull
cmp
scas
sti
les
aas
je
int
repnz
jl
sar
mov
jbe
jge
in
push
repnz
fistps
in
arpl
xor
mov
dec
push
sub
cmp
movsb
fs
loope
mov
cld
sub
subl
or
jo
or
sub
mov
clc
mov
test
dec
and
bound
loopne
bound
dec
cmp
jmp
das
mov
dec
push
sbb
test
jno
fdivs
loope
push
pop
cltd
ret
mov
mov
fs
xchg
mov
out
shrb
push
cmp
stos
movsb
jecxz
test
insl
repnz
das
and
xor
dec
jg
pop
sbb
mov
xchg
gs
lods
insb
ret
push
enter
sti
dec
jp
repz
fsubs
sub
mov
ja
dec
push
fcoms
fisttpll
je
in
inc
mov
cmpl
xchg
inc
nop
lods
pop
and
aad
dec
pop
push
adc
inc
mov
gs
sbb
adc
cmp
pop
stos
incb
mov
ret
mov
adc
je
in
sahf
add
mov
mov
lea
scas
repnz
jmp
fimuls
cwtl
fwait
sub
mov
cs
sbb
mov
insb
and
or
inc
push
test
dec
pop
xor
xchg
push
pop
inc
lock
fimull
adc
mov
dec
jmp
call
loope
xchg
pop
outsb
out
cwtl
arpl
sub
cltd
sbb
mov
jl
jbe
lods
jge
icebp
leave
adc
xor
add
mov
test
pop
shrl
shrl
lea
outsb
inc
cmp
xor
repz
aas
pop
fcmovnbe
dec
das
xor
lret
outsl
lods
jne
pop
stos
inc
inc
mull
test
movb
clc
push
sbb
dec
rolb
or
jae
lds
xor
fwait
cmp
mov
cmpsb
es
lcall
js
int
das
out
addr16
inc
scas
insl
or
pop
xchg
cmpsl
adc
mov
arpl
cli
xor
dec
jecxz
mov
jl
or
imul
addb
lods
push
push
cltd
xor
daa
pop
sub
imul
pop
push
inc
scas
adc
add
cmp
sbb
mov
mov
leave
ja
cmp
nop
stos
pop
ror
sti
leave
xor
cmc
mov
push
pushl
cs
pop
mov
loope
push
imul
ret
xchg
jno
ret
jmp
imul
call
repz
adc
sub
imul
xor
lods
in
gs
and
aaa
mov
mov
add
mov
clc
or
push
cmp
test
push
mov
shlb
push
dec
nop
jns
test
add
movsl
in
add
push
lods
sub
adc
sub
fidivs
pop
and
cmp
movsl
cmp
xor
sbb
dec
dec
sbb
lret
icebp
mov
in
or
aaa
lahf
xor
aad
out
leave
aad
sub
sbb
xchg
je
xchg
clc
or
cmpl
idiv
add
fldt
in
enter
mov
jp
push
icebp
adc
and
imull
add
xchg
outsl
pop
loope
fwait
xor
mov
sarl
orb
cmp
int3
dec
cmp
mov
inc
add
cmp
stos
imul
xorl
bnd
add
repz
in
mov
mov
mov
enterw
adc
push
mov
push
js,pn
jne
sbb
add
add
rclb
test
testb
dec
inc
mov
lods
nop
add
in
out
das
jg
in
outsl
int3
sbb
pusha
jne
enter
orl
insl
jae
dec
sbb
jno
cmpsl
bound
in
mov
jge
divb
add
push
loope
xchg
ss
cmpsb
dec
xchg
sub
xchg
das
es
dec
add
dec
jecxz
mov
pop
sbb
clc
cwtl
mov
orl
sub
loope
or
aas
pop
push
sbb
mov
jnp
cwtl
cmp
ss
loop
adc
push
xlat
inc
mov
out
jle
ja
and
cmc
pop
cmp
sub
mov
notb
stos
fwait
jo
pop
pop
add
addb
mov
loop
popl
or
negb
push
push
les
inc
pop
dec
or
mov
insb
out
js
dec
add
inc
imul
lret
lock
sbb
xchg
hlt
and
dec
pop
mov
xorb
inc
xchg
xlat
cmc
fwait
xor
stos
mov
sti
push
mov
outsb
jmp
and
int
dec
mov
aas
mov
jae
and
ror
push
imul
sahf
fcmove
gs
cwtl
mov
sub
fidivs
inc
outsl
sbb
or
sbb
sbb
pmaddwd
xor
icebp
roll
cmc
cmp
xchg
jbe
push
cmp
inc
aad
mov
xlat
inc
xor
inc
mov
fstl
cmc
cmp
xchg
cmp
dec
cld
jecxz
cltd
push
data16
mov
mov
jo
pop
inc
or
jecxz
sub
stos
aad
bound
bound
mov
adc
comiss
jb
dec
jae
and
sub
ret
mov
bndstx
js
cmp
jl
adc
lret
cmpsl
xor
push
or
and
dec
add
and
dec
sub
iret
push
xchg
jmp
xor
or
jl
inc
scas
jle
repnz
jno
pop
mov
sub
push
mov
add
loop
sbb
fldl
xor
cmp
xchg
cmp
inc
popf
sub
xor
push
sbb
repz
and
xor
dec
push
fcompl
inc
mov
mov
lock
lret
lods
and
lds
adc
push
mov
int3
popf
jno
aas
lcall
and
or
pop
pop
mov
jg
jns
inc
add
cltd
aas
aas
pusha
ret
pop
pop
lea
pop
sbb
cmp
sbb
xor
out
out
mov
out
repz
jns
in
stos
int
fdivrs
cmpsl
aam
push
lock
insl
jno
inc
popf
adc
stos
test
insb
jo
dec
pop
lock
add
pop
push
roll
rcl
hlt
push
push
popf
pop
jg
ds
xchg
xchg
rdpmc
jne
imul
fwait
ret
in
mov
and
mov
lock
lret
dec
in
add
mov
incl
jne
js
loop
jp
or
ss
mov
mov
push
fwait
cmp
rcll
es
cmp
xchg
jno
jmp
xchg
mov
xlat
cmp
arpl
mov
pushl
add
js
mov
sarb
pop
sahf
mov
sahf
addr16
jns
outsl
push
lret
in
xor
fbld
jae
mov
test
push
jmp
arpl
ljmp
int
adc
pop
in
add
bnd
xchg
cltd
hlt
cmp
jnp
jae
outsb
sti
jns
pop
mov
inc
sub
mov
test
push
es
jb
mov
xchg
mov
adc
adc
das
push
mov
sub
inc
mov
dec
dec
pop
jmp
rcrl
mov
fdivl
inc
movsl
rolb
jmp
mov
lret
dec
mov
fldl
out
push
jno
pop
xor
mov
inc
push
mov
adc
mov
into
fsubs
jmp
mov
test
divl
add
push
sub
mov
loope
lret
or
mov
lock
outsb
mov
jbe
clc
fdivr
mov
cmp
mov
and
cltd
or
repz
lods
sbb
fimull
loop
out
stc
test
xlat
xor
loopne
loopew
int
std
sbb
mov
cmpsb
aas
adc
mov
test
test
ljmp
pop
cmp
push
hlt
cmp
push
cmpsb
test
mov
mov
lods
aad
push
xor
or
mov
and
xchg
les
mov
cli
push
insl
sub
pop
mov
mov
sbb
daa
arpl
pop
rcll
imul
rcl
pop
or
xor
aam
fnsave
mov
imul
mov
icebp
cmpsb
repnz
jbe
ljmp
pop
mov
out
sbb
sarl
push
dec
movb
jmp
or
jno
ljmp
movsl
rolb
cmc
jmp
fisubrs
insl
cmp
pop
imul
dec
mov
push
mov
sub
push
mov
pop
jp
mov
mov
inc
or
sbb
sub
scas
lcall
and
push
bound
clc
jns
call
dec
mov
dec
gs
add
ds
adc
sbb
ret
sbb
dec
jg
pop
repnz
jb
repnz
loopne
pop
inc
cmp
sahf
rol
or
outsl
inc
das
pusha
xchg
cs
lret
jle
int
push
addr16
sbb
scas
lock
lock
push
insb
nop
dec
stos
pop
arpl
shr
pop
mov
stos
xor
adc
mov
pop
call
cs
icebp
mov
imul
inc
mov
sbb
test
enter
fsubrs
fisttps
mov
push
sub
and
lcall
fsubs
jle
call
pop
outsl
mov
fldcw
lcall
mov
mov
xchg
xchg
loopne
push
data16
dec
shrl
daa
sbb
adc
loopne
xchg
scas
xchg
jp
enter
jb
inc
popf
mov
leave
outsb
add
jecxz
add
pop
ds
enter
bound
jbe
xchg
sub
popa
lock
xchg
arpl
dec
test
push
out
insb
lods
pop
pop
pop
std
sub
or
idiv
sarl
js
stos
les
xchg
jbe
das
jp
pop
icebp
cmp
aaa
fldcw
lds
and
lods
cltd
mov
cmp
dec
inc
pop
and
test
pushl
jle
cmp
test
and
out
add
jg
pop
dec
cmp
cmpsl
adc
or
scas
pop
test
bound
enter
dec
jo
and
jg
jg
jle
push
cmovb
xchg
cmpl
pop
loopne
jmp
std
fidivrs
add
add
cwtl
mov
repnz
mov
fsubrs
xchg
stos
adc
js
inc
das
add
adc
loopne
sbbl
jle
clc
push
iret
adc
aad
sub
jg
sub
in
sub
mov
cmp
fdivrp
or
int
fdivl
jmp
mov
mov
inc
pop
push
or
stos
cmpsl
aas
jbe
pop
subb
inc
ret
mov
push
das
jl
andl
jo
into
in
and
aam
lcall
dec
and
pop
insb
add
adc
jle
fcmovne
mov
rclb
sub
cmp
or
and
icebp
cltd
and
ret
xchg
dec
popf
push
sub
jae
xchg
lods
pusha
je
fwait
adc
dec
jno
dec
ja
pop
cmpb
call
daa
jno
fidivs
push
loop
inc
sub
loop
outsl
or
adc
xor
inc
jg
lcall
lret
fists
testb
xchg
clc
cltd
jb
scas
call
sub
leave
xchg
cltd
or
jl
addr16
in
push
pushf
xor
in
mov
or
in
inc
push
mov
mov
mov
cmp
mov
and
and
fcomps
arpl
mov
add
insl
pop
xchg
mov
add
mov
xor
adc
jmp
shlb
out
inc
xor
pushf
dec
mov
aas
push
cli
aam
orl
sbb
cmp
xor
je
cmp
and
xor
dec
and
mov
jmp
mov
gs
ja
jo
fwait
fs
mov
add
insb
push
inc
orl
imul
mov
push
inc
jecxz
in
pop
stos
pop
icebp
js
jmp
adc
xchg
loopne
adc
dec
pop
je
mov
xlat
cs
sub
or
bound
dec
cmpsb
mov
mov
cmpsl
stos
xorl
fldenv
into
ds
mov
stc
ret
add
sahf
mov
add
mov
jno
jns
inc
inc
mov
hlt
mov
lock
scas
and
div
mov
mov
or
jge
lcall
jg
jo,pt
jbe
mov
jmp
sahf
and
lcall
jbe
mov
push
pushl
pop
mov
adc
fists
xor
jg
pop
incb
push
adcl
in
cmpsb
stc
cltd
xchg
and
push
fidivrl
pop
jnp
or
ja
into
pop
push
icebp
out
mov
bound
movsb
arpl
addr16
pop
dec
popa
movsb
cltd
ss
lret
incl
rcrl
sub
pshufw
popl
test
cmpsb
andl
push
lods
in
add
aam
pop
xlat
test
adc
cmp
repnz
mov
fst
cs
fcoms
vphaddwq
pop
push
inc
loope
imul
cld
and
or
popf
and
inc
les
loop
jae
inc
sbb
xchg
repz
and
sub
sar
sbb
dec
call
push
cmp
mov
cmp
mov
cmp
cwtl
std
or
add
adc
rcr
or
push
cmp
js
outsb
xor
cmp
push
adc
mov
xchg
dec
xchg
push
jecxz
sbb
lcall
bound
lods
adcb
mov
in
adc
test
fidivrs
xlat
in
jmp
sub
xchg
inc
and
dec
iret
push
iret
xor
jbe
pop
inc
fcoms
and
cmp
dec
outsl
por
fnsave
aas
ret
ljmp
rorb
inc
pop
fidivrs
movl
push
movaps
iret
cmp
sbb
inc
sysenter
pop
jns
adc
sbb
adc
inc
xchg
pop
icebp
pusha
or
pusha
lret
clc
pop
mov
lea
dec
ret
cs
add
ljmp
pop
mov
lret
mov
sbb
jbe
mov
add
xchg
sahf
jne
push
pop
cmpsb
inc
ficomps
push
ret
lods
adc
andb
setae
jecxz
add
pop
shrl
push
adc
ja
xchg
popa
call
aad
or
cmp
test
pop
and
push
or
cli
cli
push
adc
dec
lret
mov
jl
faddl
mov
repnz
add
addr16
pusha
jb
xor
cmpsb
fidivrl
push
xorl
pusha
sbb
pop
sbb
stos
push
push
movsb
lods
sbb
push
mov
data16
sub
and
shr
xchg
out
fsub
cmp
mov
lret
pop
mov
push
pop
inc
fcompl
xchg
cmpsb
outsl
popf
out
lcall
rorb
cmp
ds
cmpsb
jnp
in
cs
mov
fldt
shl
test
push
cmpsb
in
jae
sub
cmp
inc
insl
or
pop
insb
mov
nop
cs
stos
mov
fnstcw
shll
ret
dec
xor
mov
jecxz
jle
inc
lahf
es
push
shrl
inc
xor
xchg
ja
fsubrl
cmp
test
in
rorl
xor
loopne
mov
stos
add
ljmp
xchg
xor
lret
xchg
push
cltd
push
or
sub
cmc
sbb
or
dec
sub
xor
xlat
mov
inc
xor
popa
stos
scas
push
rcr
add
and
insb
mov
test
out
popa
repnz
pop
push
dec
in
dec
insl
cmpsl
movsl
mov
mov
xchg
ret
adc
and
and
adc
lret
imul
jne
mov
or
iret
add
pop
xlat
fcompl
push
xor
pop
hlt
nop
je
and
xor
les
aas
mov
mov
sub
cs
jmp
or
mov
adc
xchg
pop
sbb
jb
mov
xor
xchg
cmp
inc
int3
ds
sbb
pop
cmp
mov
mov
cli
sti
test
int3
icebp
pop
clc
and
xor
scas
sbb
pop
adc
mov
xchg
mov
and
stos
js
jl
popf
cmpl
mov
and
cmp
rclb
push
mov
shl
fbstp
dec
add
incl
enter
pop
mov
xor
add
pop
dec
cmp
lods
xchg
out
and
push
dec
push
int
cmc
jo
xchg
xor
cmp
jb
test
outsl
or
sarl
or
stc
mov
and
filds
in
xorb
dec
pop
cmpsl
xchg
ljmp
sub
add
test
je
lahf
mov
out
test
xchg
movsl
jno
lds
add
cli
pop
hlt
leave
dec
cs
sbbb
rcl
lahf
lods
mov
or
lock
gs
push
add
xor
addl
inc
cld
shl
inc
loop
imul
sbb
stc
jl
out
and
js
jno
pusha
stos
out
stc
daa
jg
cmp
push
push
jne
pop
adc
out
inc
sub
dec
dec
sub
int3
repz
call
push
int
lock
inc
lret
js
xor
xor
and
lods
dec
add
push
mov
cwtl
cmp
add
addr16
push
sub
mul
in
mov
adc
lcall
mov
insl
lret
sahf
jl
popa
mov
cmp
icebp
sub
mov
outsb
std
cmp
add
push
jb
sub
and
sbb
pop
fisubl
pop
out
sti
mov
call
int
xor
movsl
fmulp
inc
iret
xor
sub
mov
add
mov
adc
cmpsb
lock
inc
outsl
mov
xor
push
repnz
pop
jo
clc
dec
cmpsb
stos
roll
xor
push
shr
cmp
rolb
xchg
mov
jge
sbb
jo
or
pop
xchg
mov
aad
and
call
and
mov
lcall
popf
test
movsb
je
jnp
jl,pt
mov
in
fidivrs
movsb
push
bound
ficompl
xor
xor
clc
shll
cmpl
push
les
mov
sbb
pop
dec
pop
inc
mov
push
mov
es
lcall
xor
add
xor
lods
lods
aam
mov
push
outsb
std
mov
leave
scas
bound
mov
jnp
movsl
jmp
sub
jbe
loopne
mov
add
idiv
cld
leave
in
enter
int3
xor
fisubs
out
shlb
jp
testl
arpl
shld
movsb
mov
xchg
sbb
mov
cli
xchg
or
cmp
aas
add
xchg
in
jmp
inc
pusha
fnstcw
xchg
loope
outsl
or
mov
cwtl
pushf
xchg
int
sbb
cmp
daa
push
sbb
out
cmp
inc
div
dec
inc
mov
cmp
adc
xchg
hlt
cli
xor
ljmp
stos
aaa
popa
mov
lods
cli
ret
icebp
je
scas
jge
lods
add
dec
cmp
fimull
out
out
mov
inc
sub
rclb
dec
out
xchg
in
rolb
push
je
or
rolb
sub
icebp
stos
xor
add
xchg
xor
push
imul
rcll
lods
fdivrl
and
fimuls
lea
mov
jne
dec
in
outsl
repnz
mov
adc
lea
sbb
pushf
adc
adc
cmpsl
pop
movsb
jp
es
cmp
jae
adc
in
mov
pushl
scas
xor
pusha
add
lret
lock
lods
insb
pop
pop
mull
mov
and
cmpb
jno
jnp
push
dec
mov
jmp
push
dec
lds
out
add
sub
idivl
sbb
xor
jp
xchg
aad
add
mov
xor
in
dec
stc
xor
mov
mov
cmpsl
test
push
sahf
dec
neg
xchg
aam
inc
cld
xor
cwtl
movsb
mov
mov
ljmp
dec
js
jae
push
loop
inc
mov
shl
repz
dec
sbb
push
hlt
ds
fucom
sbb
std
test
xor
pushf
adc
je
jecxz
js
pop
mov
or
bound
and
pop
sub
add
ss
outsb
xlat
push
dec
cmpsb
imul
mov
clc
pop
int
push
fidivrs
xchg
dec
inc
xlat
add
cwtl
sub
xchg
in
inc
je
pusha
or
sub
fdivl
test
subl
xor
fldl
das
test
out
es
mov
insl
push
xchg
xchg
mov
mov
cmp
pop
shll
arpl
or
xchg
pop
mull
movl
scas
inc
fldl
push
pop
ret
aaa
sub
leave
pop
aaa
push
xor
or
ret
mov
test
mov
sti
fsts
loop
loop
pop
fsubl
pop
loop
sub
sub
lahf
sbb
ss
int3
pop
pop
sbb
adc
cld
cmp
cmp
in
pop
inc
aaa
lret
cld
ds
and
pop
xchg
cmp
fcmovnb
cmp
cwtl
bound
mov
lock
xor
mov
and
cmpsb
lret
pop
push
inc
pop
aas
mov
loope
movsb
lret
or
popa
or
pop
mov
ja
xchg
in
mov
loope
jge
mov
lcall
sub
movsl
pop
fimull
and
mov
or
loopne
cli
mov
adc
addr16
and
cmp
jb
mov
jmp
push
popf
pop
mov
sbb
inc
outsl
dec
js
fsubr
pop
ds
dec
fistpl
push
ss
push
lahf
mov
inc
or
lds
cmp
sub
push
inc
imul
daa
push
in
sub
jo
sbb
push
cmp
gs
pop
testl
loop
mov
adc
and
dec
mov
adc
push
fadds
sbb
adc
sbb
test
push
xchg
das
pop
mov
enter
sub
jo
dec
aaa
pop
mov
loopne
subb
rorl
mov
jge
push
add
leave
push
bound
xchg
ja
repnz
jecxz
pop
out
dec
addr16
mov
outsb
pop
test
imul
js
jge
adc
push
adc
dec
dec
fld
fnstenv
push
in
testl
xor
popf
inc
into
cmp
call
js
jno
hlt
inc
mull
test
gs
mov
xchg
mov
mov
sub
cmp
inc
mov
mov
push
mov
fsubl
mull
movups
inc
push
orb
inc
nop
sbb
insb
jne
fmulp
test
nop
frstor
jb
xor
arpl
or
out
jo
ds
xor
dec
ljmp
fsubp
ficomps
jno
outsb
in
and
mov
hlt
cli
mov
add
aam
mov
dec
and
mov
sub
or
push
mov
jo
in
mov
stos
lahf
pop
int
in
dec
cmp
dec
test
inc
inc
test
outsb
xlat
das
sub
aam
inc
xchg
mov
sub
scas
xorl
adc
cmp
dec
pusha
adc
and
push
pop
ret
stos
iret
ljmp
fcom
pop
pop
lcall
aas
jno
jno
test
cmp
mov
jp
inc
jl
jmp
mov
mov
sbb
and
fs
jmp
or
enter
stc
dec
sbb
push
pop
mov
fucomi
push
das
xchg
sbb
push
clc
dec
lahf
shll
icebp
scas
mov
mov
jne
sbb
mov
jne
or
cmpsb
inc
int
je
addr16
aaa
xchg
jg
xor
popf
mov
push
outsl
pop
mov
and
adc
mov
push
unpckhps
jo
jne
push
push
mov
jae
push
xor
aaa
cli
sub
or
faddl
fwait
loop
cs
std
call
xor
inc
icebp
jecxz
out
add
xchg
lea
mov
push
mov
add
push
pop
ljmp
sub
sbb
add
adc
cmpl
mov
push
jl
aam
xor
push
je
add
test
push
xchg
testb
sahf
imul
std
xchg
adc
and
inc
clc
ja
movsb
push
mov
icebp
js
jnp
jb
add
inc
bound
lret
add
ljmp
xchg
lock
adc
bound
adc
arpl
dec
clc
repz
push
push
lods
loop
dec
cmp
push
cmp
fwait
push
rolb
fisttpl
ljmp
mov
mov
jmp
dec
insl
jp
mov
decl
mov
mov
rorl
xor
adc
mov
xor
mov
addl
out
push
jecxz
ficomps
dec
es
pushf
push
jle
movl
xlat
lods
push
test
nop
shrl
arpl
cmpsl
scas
cmp
shl
dec
rorl
cs
cwtl
jl
or
lods
andb
imul
jmp
sbb
cli
push
daa
cmp
jns
shrl
inc
xor
mov
push
fmull
cmp
mov
lea
add
push
mov
sub
popf
mov
enter
fwait
notl
pop
and
push
pop
push
cs
mov
scas
outsl
dec
add
sbb
push
pusha
push
jmp
dec
jle
mov
outsb
mov
sbb
pop
mov
add
mov
roll
shlb
push
xchg
adc
push
fld
mov
mov
enter
cmpsl
bound
hlt
repnz
es
xchg
mov
sbb
pop
popf
push
inc
cmp
int3
inc
cmp
sbb
pop
or
jmp
sbb
dec
sbb
ds
stc
mov
add
jle
aas
xor
jns
add
inc
icebp
cwtl
daa
add
mov
add
incl
jecxz
xor
repnz
sbb
adcb
inc
clc
or
xchg
imul
adc
xor
addb
les
sub
push
add
push
imul
pop
inc
sub
jns
adc
adc
das
mov
add
xor
cld
outsl
jp
inc
das
pushf
movsl
rorl
push
sbb
gs
aad
push
int
stos
jno
cld
mov
sti
push
push
or
mov
sahf
lds
xchg
sbb
inc
ja
mov
mov
bound
adc
mov
xor
jae
imul
jl
in
add
mov
jne
mov
call
xchg
push
pop
pop
mov
push
push
mov
mov
pop
mov
out
jg
fwait
loopne
inc
cmp
cmpsb
mov
je
in
in
imul
adc
mov
daa
repz
sub
adc
in
pop
add
cli
andl
mov
xchg
xorb
out
xorb
repnz
jg
lret
gs
adc
pop
fs
enter
mov
jp
pop
dec
adc
test
sbb
adc
addr16
mov
and
movsb
pop
mov
ds
push
jae
jle
data16
cmp
loope
mov
std
ds
sbb
cmc
add
push
sahf
cltd
lret
ds
sub
inc
pop
pop
adcb
cmp
cmp
push
lods
fiadds
add
pop
mov
add
mov
lcall
push
lret
ljmp
sub
insb
inc
mov
or
sbb
xchg
mov
out
jmp
sub
in
test
lods
ffreep
sbb
jno
ds
aaa
cwtl
fwait
and
pop
movsb
lcall
cmp
cmc
dec
sahf
dec
sub
gs
lahf
scas
mov
cli
cmpsl
les
cmp
adc
jns
aam
xor
jns
cmp
mov
mov
idivl
sbb
out
jge
out
les
and
mov
jg
adc
arpl
ret
insb
adc
dec
adc
pop
ja
js
add
xorb
sbb
ja
pop
stos
in
and
sub
add
loope
mov
push
insl
and
adc
cmp
test
ret
hlt
cmp
in
ss
jecxz
dec
hlt
mov
jae
push
psrlw
sbb
adc
ss
inc
lods
test
inc
jl
xor
pop
add
and
push
or
lahf
jp,pt
dec
push
mov
add
sbb
xor
jnp
into
cmp
ret
daa
dec
aam
cmp
mov
push
in
pop
stos
leave
call
xor
mov
icebp
inc
mov
mov
leave
cmpb
dec
nop
gs
mulps
mov
push
nopl
cmp
movsl
fwait
into
push
sbb
sub
and
lahf
es
and
daa
xchg
xchg
jo
push
jb
push
inc
enter
lds
xchg
or
lret
je
jno
push
adc
das
jmp
ss
jne
test
push
push
icebp
xlat
xor
in
or
and
leave
pop
dec
cmc
out
inc
mov
jne
cmp
jmp
mov
scas
pop
inc
rcrl
gs
xor
mov
ds
sub
ficomps
pop
and
test
divl
dec
dec
insb
sbb
aad
data16
adc
adc
movsl
inc
inc
sub
adc
and
xor
cmc
cld
mov
and
xor
test
std
shlb
sahf
loop
rcrb
aas
clc
mov
in
adc
inc
repnz
fadd
mov
lahf
sti
imul
dec
andb
jns
adc
and
vpsubsb
mov
pop
sbb
repz
or
in
stc
ds
cmp
lds
ror
inc
push
pop
dec
and
dec
push
inc
fistpl
movsb
push
sub
or
push
jmp
rcrl
lock
sub
push
stos
jae
mov
dec
fidivs
jae
dec
cmp
xlat
sbb
jo
int
in
dec
cmpsb
shlb
subl
in
rolb
fidivs
cmpsl
lcall
cmp
imul
fisttpl
dec
inc
adc
mov
jp
aas
aad
js
js
imul
lea
or
sub
or
jbe
mov
jb
xchg
xchg
xchg
lret
sbbb
or
mov
loopne
in
xchg
push
inc
out
vmwrite
xor
es
dec
xlat
mov
mov
jnp
addb
cmpsb
shll
push
adc
and
add
cmp
xchg
mov
dec
pushf
add
insb
imulb
xchg
out
jb
bound
adc
mov
out
lea
and
xor
stos
fucomip
mov
adc
les
out
testb
jg
jbe
ds
popa
int
rclb
mov
cmp
or
mov
leave
xchg
xchg
inc
adc
sbb
mov
push
fs
pop
push
and
pusha
cli
jle
sub
loopne
pop
sti
and
rorl
in
mov
jmp
call
and
into
lock
mov
mov
sub
sub
divl
xchg
lcall
cli
push
leave
mov
icebp
push
popl
push
incb
xchg
shll
andb
outsl
js
xchg
cmp
test
lret
fisubrl
icebp
repz
fxch
jne
outsb
hlt
mov
aas
sbb
cmpsb
lahf
ret
xchg
xchg
mov
and
mov
dec
jp
pop
ja
mov
cld
push
dec
out
icebp
loope
jae
sarb
shl
rorl
xchg
add
test
aad
jmp
dec
push
mov
sub
loopne
mov
xchg
stc
xchg
push
adc
enter
insl
ret
dec
jae
leave
insb
lods
fwait
push
xchg
mov
xor
inc
scas
pop
icebp
push
outsl
cmp
and
cmp
leave
mov
ss
push
jecxz
jb
dec
mov
mov
fistpll
mov
cmp
dec
hlt
dec
outsb
mov
lds
pop
ljmp
and
mov
cmc
mov
mov
jle
pop
enter
ret
xorl
fisubl
jbe
mov
push
mov
pushf
lods
adc
xor
xlat
mov
adc
adc
rcr
mov
test
and
inc
lret
mov
mov
and
jnp
ds
int
xor
xchg
pop
mov
and
mov
pushf
test
inc
mov
pop
outsb
lcall
xor
es
cwtl
add
sub
xchg
js
dec
adc
pop
lods
enter
imul
fdivl
das
push
xor
std
daa
sarb
cmp
mov
lret
jno
jl
inc
das
sbb
adc
jae
fwait
sub
mov
add
sbb
inc
jle,pn
mov
aaa
push
dec
jno
ret
mov
adc
shlb
test
enter
xlat
out
es
ret
sahf
repz
jne
idivl
mov
inc
inc
movsb
ds
pop
jmp
sub
pushl
pop
ljmp
shr
mov
int3
lcall
pop
xchg
cli
pop
cmp
dec
andl
loopne
mov
pop
pop
pop
xor
adc
out
jge
dec
cmp
sub
add
xor
inc
adc
xor
jb
xchg
jbe
nop
and
and
dec
lret
ljmp
lea
enter
lock
adc
sub
push
and
push
xchg
aam
mov
shrb
test
mov
rorb
jo
xchg
dec
mov
sbb
inc
and
pop
jecxz
stos
out
xchg
sbb
movsbl
js
mov
dec
mov
jbe
aas
out
pusha
mov
movsb
xor
push
inc
nop
cmp
ljmp
jnp
subl
mov
and
jge
aam
pop
aaa
in
pop
sbb
or
xchg
andb
pop
dec
lea
movsb
jb
nop
fwait
popa
test
fs
mov
add
or
cld
iret
ja
pushf
cli
inc
aaa
icebp
in
jg
test
and
pop
test
dec
into
push
mov
aad
push
mov
add
sub
into
and
mov
ljmp
sub
aad
bound
push
stos
jns
or
mov
ds
jne
xor
mov
push
inc
push
push
fmull
fs
popa
shl
int
xlat
xchg
lea
xor
mov
popf
shlb
js
enter
iret
jns
add
sub
movsl
xchg
iret
enter
add
icebp
add
push
ss
mov
xchg
hlt
mov
movsl
loop
push
in
xor
stos
loop
sbb
dec
pop
aas
push
cmp
xchg
adc
pop
outsl
xor
jnp
imul
mov
loopne
mov
jp
push
mov
inc
mov
rep
cmp
cld
and
add
push
sub
mov
mov
lock
push
mov
sub
loop
jp
dec
in
cmp
lds
xor
stos
std
lds
inc
xchg
inc
rclb
imulb
jp
inc
imul
cmp
ja
jg
ret
cli
mov
sbb
stos
pushf
sub
loop
add
xchg
ret
jg
push
xchg
pop
xchg
mov
jg
xor
hlt
and
imul
rorl
lret
xor
and
shl
sahf
xchg
add
sub
out
jmp
jg
dec
cmpsb
dec
jl
mov
jle
sbb
andl
rcr
jne
jl
test
mov
dec
mov
push
mov
insl
inc
inc
push
lret
pop
push
inc
decb
xchg
pop
notl
jle
lret
push
push
insl
push
or
sub
xor
dec
jnp
pushf
push
test
adc
jmp
pusha
stc
outsb
jge
mul
daa
xchg
xor
dec
push
repnz
mov
sti
push
cmp
pop
ret
test
pushf
fdivr
ja
dec
stos
xchg
or
iret
notl
mov
sbb
pop
lahf
xor
add
test
repz
test
sub
jbe
inc
pop
iret
cltd
mov
shufps
and
hlt
cli
pushf
outsb
and
ljmp
inc
jns
sbb
dec
mov
jge
mov
jbe
aaa
jp
xchg
inc
roll
aam
push
xchg
add
orl
cli
xchg
jg
mov
add
cld
ss
jg
jbe
rcll
fdivs
das
clc
inc
into
add
js
dec
stos
and
movsb
cmp
nop
add
scas
rcrl
sbb
scas
inc
jl
outsb
and
hlt
inc
sbb
push
outsb
or
jbe
pop
fsubrl
xor
jle
jmp
or
dec
imul
in
mov
es
jne
mov
dec
into
outsl
cmpsl
mov
inc
rorb
pop
or
and
or
aaa
sub
adc
bnd
shr
popa
xchg
jbe
orl
testl
jl
pop
pop
inc
jge
jne
adc
js
or
xor
ret
cmpsl
test
das
push
mov
pushl
adc
and
arpl
shr
stos
orb
pop
dec
bound
cmpsl
sbb
arpl
xor
sub
and
and
lretw
jge
mov
insb
popa
and
aas
mov
mov
lea
out
sub
movsl
adc
fwait
data16
iret
push
sub
xchg
lcall
cmp
xchg
cmp
push
gs
dec
loop
insl
fwait
jnp
stc
inc
mov
rcrb
insl
cmp
bound
and
fidivrl
lock
and
mov
xor
jne
ret
mov
and
cwtl
and
dec
or
cmp
mov
pop
outsl
jns
ror
and
in
mov
push
sub
les
or
aas
fwait
mov
pop
add
sbb
dec
sub
arpl
xor
fldenv
xor
push
xor
add
push
jle
je
push
mov
test
lea
inc
daa
jnp
out
rolb
aad
lret
rcrb
jge
loope
rcrb
mov
dec
inc
nop
movsl
bound
pusha
mov
push
stc
mov
repz
les
ja
push
pop
mov
lods
insl
or
fs
lods
jns
subb
jmp
xchg
add
mov
xchg
cmp
leave
push
cs
and
pusha
sarb
adc
jp
ds
inc
mov
xor
sub
aaa
pop
int3
pushf
mov
mov
cmp
add
mov
jle
stos
push
xor
scas
jno
jo
sub
add
adc
sbb
inc
fidivrl
sub
push
inc
inc
mov
repz
sub
jge
lods
pop
bound
mov
mov
or
mov
outsl
push
xchg
stc
inc
xchg
inc
mov
test
mov
outsl
movsb
adcl
into
push
push
pop
fs
insl
movb
jae
out
sub
mov
dec
pop
cmp
mov
sub
inc
adc
jne
js
stos
enter
cmp
cs
xlat
and
jb
aad
xchg
ret
pushf
dec
je
arpl
je
mov
mov
lcall
xlat
out
mov
pop
jle
ds
push
pop
pushf
inc
add
and
or
cld
mov
xor
lock
and
repz
inc
subb
mov
fidivl
imul
sbb
mov
sbb
call
stc
rorl
mov
add
jnp
or
mov
iret
xchg
inc
dec
cmp
insb
fsin
mov
xchg
pushf
mov
inc
into
mov
dec
pop
mov
xchg
push
xorl
adc
xchg
mov
pop
push
mov
add
pop
cmp
sub
subl
xchg
neg
out
addr16
pop
ret
mov
fisttpll
xchg
adc
arpl
push
mov
jl
mov
sub
and
and
or
cs
jle
xchg
lods
int3
fucom
xchg
inc
call
lret
lods
cmc
lods
stc
lods
setg
iret
sbb
ja
mov
aam
xchg
das
pop
fists
push
add
pop
or
stos
lret
cmp
mov
lahf
mov
iret
test
inc
inc
adc
pushf
or
ja
mov
xchg
pop
stos
mov
push
dec
push
cmc
dec
inc
sahf
daa
mov
lcall
cmp
adc
push
sarb
sub
inc
xchg
jns
pop
sub
xchg
mov
sub
inc
or
lahf
mov
fcoms
mov
out
adc
push
mov
mov
fcmovnbe
push
das
jl
popa
cwtl
icebp
fs
gs
mov
add
push
popa
xor
loopne
cmpb
add
imul
int
jnp
iret
adc
jnp
mov
jne
fmuls
push
add
test
lods
mov
mov
cli
push
js
push
out
adc
mov
std
adc
jge
mov
jo
xchg
adc
mov
cmp
or
adcl
mov
push
sarb
push
push
int
js
stos
mov
out
mov
out
in
push
pop
xchg
out
pop
sbbl
les
sti
ljmp
dec
dec
stos
les
mov
or
bound
jl
popa
jge
fsubrl
adc
adc
fbstp
jge
and
sbb
push
mov
push
aam
push
mov
test
ja
clc
pop
jmp
mov
loopne
pop
inc
xchg
stos
and
int
out
sbb
std
enter
andb
push
pop
je
jbe
outsb
add
xor
or
inc
or
mov
repz
pusha
xchg
or
xchg
test
dec
outsb
add
dec
mov
aad
add
test
bound
pop
jne
rcrl
movsb
mov
xor
insl
jns
pop
mov
lods
ljmp
aam
rclb
lret
ds
cmpsl
or
add
xor
lods
call
lods
cmp
flds
ss
jno
lcall
loop
adc
add
ds
pop
stc
andb
jbe
lds
xchg
dec
jmp
icebp
addl
or
data16
xor
push
xchg
mov
lret
shrb
push
sbb
call
mov
sub
ret
xor
jno
negb
pusha
ret
adc
xchg
aad
mov
shr
mov
lds
and
lea
dec
mov
add
xchg
clc
push
fchs
loop
and
add
jecxz
add
push
adc
outsl
hlt
lods
lcall
sub
std
xor
sub
sbb
ljmp
jne
repnz
inc
push
push
arpl
pop
inc
daa
jl
xchg
ret
repnz
or
sub
dec
fidivrs
inc
jl
sub
push
pop
xchg
pop
jle
loop
and
adc
xchg
fucomp
shll
xor
fsts
xchg
dec
jo
jmp
and
jmp
pop
add
xchg
inc
add
jno
jmp
cmp
insb
adc
xor
dec
push
repz
orl
or
popl
add
popa
jno
movsb
mov
lods
movsl
jb
div
adc
aaa
fnstcw
and
dec
add
pop
pop
pop
nop
mov
or
pusha
scas
scas
fcoms
pop
mov
ljmp
jle,pn
fcompl
cli
mov
out
fwait
std
dec
add
fbstp
sbb
call
fwait
aas
ss
lods
icebp
cmp
repnz
inc
jns
add
dec
imul
in
and
push
jnp
or
fcom
test
mov
and
mov
aam
js
add
jo
jbe
sbb
mov
add
jp
sbb
adc
aad
out
movsb
popf
loope
add
and
cli
andl
in
sbb
jae
inc
mov
sbb
fistpl
out
sti
divb
mov
cmp
push
sbb
fnstenv
xchg
mov
sub
cs
inc
mov
xor
sahf
mov
pop
mov
sub
adc
mov
mov
add
in
push
data16
mov
pop
push
in
dec
mov
mov
and
lcall
push
shlb
ds
mov
lods
or
adc
data16
inc
mov
cmp
rorl
sbb
sbb
out
xchg
push
and
push
mov
popf
inc
repz
mov
popf
jne
mov
push
cmp
cmpsl
push
mov
hlt
mov
aam
std
dec
lock
insl
sbb
out
cmp
inc
and
shl
inc
adc
rcl
pop
inc
negb
inc
mov
mov
sahf
daa
xlat
inc
outsl
and
ror
in
pop
and
pusha
mov
insb
fcmovne
fwait
cmp
out
stos
call
call
pop
sbb
imul
in
mov
or
sbb
cmp
cli
jne
sbb
push
out
push
and
into
shr
cmp
xchg
xchg
lods
mull
fdivrs
sahf
sahf
cmp
and
push
jl
in
andl
or
out
push
or
jno
fchs
cwtl
das
dec
cmp
out
mov
sbb
fmulp
sub
mov
into
js
push
pop
mov
jne
cmp
ret
xchg
pop
cwtl
testl
xor
movb
lcall
repnz
in
jo
dec
lock
lods
dec
adc
mov
hlt
sub
pusha
and
adcl
lods
mov
jo
xor
cld
add
pop
daa
push
fs
arpl
fcompl
jge
sbb
pop
test
pop
test
and
push
fbstp
clc
sbb
mov
mov
mov
adc
cli
adc
movsl
add
sahf
out
out
push
test
push
lret
imul
jne
scas
mov
fsub
subb
push
push
add
lret
aad
loopne
pop
adc
dec
mov
sbb
fldt
add
cmc
add
push
ret
inc
or
jne
jns
hlt
hlt
fldenv
pop
dec
pop
mov
into
arpl
and
jg
jno
adc
adc
mov
sbb
adc
inc
mov
and
or
cmp
sub
dec
sti
pop
adcb
test
inc
popa
mov
mov
inc
insb
pop
into
ja
dec
dec
sbb
sbb
ja
mov
pop
and
cmp
pop
mov
add
cmp
xor
mov
pop
data16
inc
cmpsl
outsl
xor
dec
int
cld
pop
outsl
and
inc
jb
mov
aad
fadds
xor
xchg
stos
movsl
mov
mov
push
pop
sbb
cs
push
xchg
arpl
and
outsb
sbb
and
push
cwtl
xchg
hlt
jns
cwtl
outsb
test
xor
pop
gs
dec
pop
fsubrl
cmp
pop
fwait
jmp
lock
xchg
xchg
mov
xlat
stos
pop
jbe
ret
pop
call
sub
sub
cmp
push
imul
fdivs
lods
or
adc
push
movsb
andl
adc
jg
inc
std
mov
push
cmpsl
fsubl
addr16
xorb
pop
orb
sub
mov
enter
adcb
dec
test
and
in
dec
sbb
cli
insb
fidivrs
xchg
in
insl
inc
sbb
jb
enter
aaa
rorl
repz
mov
xor
xlat
or
das
lret
pop
mov
movsl
fcmovb
mov
aam
cld
pop
imul
mov
insb
inc
xlat
adcl
pop
in
jmp
dec
enter
je
sbb
hlt
jl
mov
and
test
lahf
outsb
loope
mov
and
gs
pop
out
lods
push
adc
test
xchg
mov
push
out
dec
mov
rol
fcoms
add
outsb
sbb
idivl
jge
jno
or
cwtl
xor
jno
cltd
out
xchg
add
cmp
decb
jno
ds
clc
sbbl
int3
push
stos
out
fwait
data16
js
pop
push
shrl
push
sti
lds
sbb
or
cmpsb
and
into
subb
enter
into
cli
shlb
lahf
mov
jnp
push
inc
jo
loopne
push
push
add
jb
push
adcl
jno
insb
lea
adc
loopne
or
mov
pusha
add
push
loopne
push
pusha
in
out
cmp
pop
mov
sub
pop
jnp
call
dec
jecxz
add
shlb
mov
jno
xor
pushf
rcl
cmp
push
mov
add
lea
sbb
dec
jnp
dec
adc
das
push
popf
dec
pop
pop
movsb
outsl
and
stos
aaa
test
mov
in
popf
xchg
ror
inc
ret
cld
mov
cmpsl
repz
rorl
test
inc
rcrl
dec
xchg
jg
dec
mov
decl
aad
mul
setle
push
jne
bound
mov
push
fyl2xp1
push
outsl
add
and
mov
js
mov
popf
and
jg
scas
into
fs
subl
scas
pop
incl
pop
fnstsw
mov
ss
int3
cmp
jl
mov
inc
sub
daa
mov
ss
decl
mov
js
in
shll
out
xchg
mov
xchg
stos
into
inc
or
rcr
sbb
cltd
pushf
outsl
sbb
in
sti
sbb
pop
push
pop
xchg
dec
add
adc
out
push
lret
ljmp
push
repz
bound
dec
out
shll
test
inc
ret
dec
inc
xlat
rcr
insl
jae
push
push
imul
pop
int
jne
dec
negb
push
cmp
es
cwtl
cld
jg
hlt
outsb
jecxz
mov
mov
push
adc
push
push
cmpsb
pop
scas
je
into
add
mov
fidivs
push
rcrl
add
cmp
int3
lahf
push
int
cwtl
fmull
cmp
sbb
jno
xchg
or
lcall
sub
je
inc
adc
sub
xchg
jge
movsb
push
mov
push
movsb
pop
bound
sahf
lret
and
mov
cmpb
ja
call
jmp
imul
mov
popf
push
into
or
mov
pop
jo
gs
addl
xchg
mov
mov
test
xchg
out
popa
das
test
test
and
gs
xor
push
ja
repz
mov
push
push
add
pushf
pop
and
xor
ja
bound
sbb
das
imul
fnstsw
loopne
fsub
and
add
sbb
add
pop
push
loope
push
xchg
fbstp
jns
aas
dec
xchg
xorb
xchg
push
dec
shll
ret
mov
push
int
sti
mov
jne
push
cmp
pop
test
push
sub
add
addl
jge
loope
testb
shr
mov
or
xlat
mov
mov
das
jno
xor
pop
es
cwtl
push
loope
mov
jecxz
daa
int3
leave
dec
int3
or
sub
mov
test
cmp
bound
add
sbb
enter
dec
mov
mov
into
fildl
inc
les
sbb
add
and
fs
mov
dec
test
sub
and
sahf
aas
andl
push
inc
pop
bound
adc
mov
pop
mov
cmp
mov
in
mov
sbb
data16
add
pop
lret
dec
insb
fimull
inc
data16
cwtl
dec
ljmp
lds
repz
bound
inc
push
lods
fdivl
adc
cmp
repz
sbbb
xchg
jge
pop
js
fdivl
orb
mov
lcall
dec
adc
sbb
aas
sbb
adcl
nop
cs
mov
push
inc
inc
xchg
xor
jg
pusha
in
adc
sub
jbe
jge
cmp
outsl
dec
mov
loope
cli
inc
ljmp
lret
daa
mov
mov
iret
in
in
push
test
or
jl
ret
stos
ja
add
inc
xchg
in
in
dec
out
call
aaa
cmp
fcompl
jne
pushl
sti
stos
cmp
loopne
inc
mov
add
addr16
mov
in
jne
cmpsl
add
pop
mov
inc
leave
and
fmull
push
sbb
jmp
in
inc
inc
push
pushf
lods
lcall
fistl
shl
xchg
add
js
lahf
push
xchg
movsl
pop
addl
sbb
mov
mov
or
out
xchg
iret
cmp
adc
lahf
mov
ss
pop
and
insb
outsl
sbb
sbb
cli
fimull
pop
push
mov
data16
out
cld
fsts
pop
jecxz
dec
sbb
xlat
xchg
xor
loop
inc
ja
ljmp
pop
push
mov
shll
das
add
or
icebp
dec
test
outsb
js
adc
fsin
push
add
and
mov
hlt
nop
dec
aaa
in
xlat
mov
hlt
movsl
test
lods
movd
and
testl
insb
fiadds
push
fiaddl
jmp
jl
fidivrl
xchg
pop
pushf
roll
ljmp
int3
pop
imul
mov
in
arpl
jne
push
and
loope
mov
loope
leave
xor
sub
push
leave
push
mov
lods
or
gs
les
lock
and
mov
push
js
or
insb
cld
rcll
or
mov
scas
inc
sbb
popa
inc
ds
adc
cmp
stos
jp
pop
cmp
js
push
mov
xlat
aas
add
pop
cltd
add
mov
mov
rcll
sbb
xchg
cld
rcrl
mov
jmp
mov
stos
fwait
bnd
sbb
sbb
or
lahf
in
das
jb
lahf
icebp
lahf
fs
repz
aas
jae
cmc
dec
negb
and
add
inc
adc
mov
jp
sti
xchg
push
sahf
xchg
sub
stos
std
inc
and
ja
sub
notl
add
in
mov
loope
cmp
sbb
out
in
mov
mov
mov
jnp
inc
jnp
fimuls
fadd
scas
cmpb
jns
cmp
divb
aas
out
xchg
mov
aam
jg
push
mov
jae
or
in
test
call
in
lods
leave
cld
pop
aas
inc
pop
adc
popf
pop
ss
push
xor
xchg
test
mov
mov
stos
in
xor
add
outsb
insb
fldenv
ret
cli
mov
sti
mov
and
or
jl
test
in
sbb
adc
pop
mov
loope
adc
push
mov
sub
cld
rcrl
ljmp
push
push
stc
dec
test
inc
add
mov
adc
add
or
and
dec
aad
popf
sub
nop
xchg
shl
mov
fdiv
jmp
sbb
mov
in
fxch
xchg
jo
push
xchg
inc
loopne
xchg
dec
jmp
add
or
inc
cmc
mov
sbb
aad
sbb
pop
mov
push
scas
fisttpl
dec
inc
je
arpl
into
in
aas
jmp
popa
je
sbb
jmp
lahf
pop
mov
add
xor
mov
jae
popf
fcmovnbe
das
and
jo
mov
mov
cld
xchg
mov
ljmp
lret
adc
cmp
xchg
sbbl
sbb
xor
dec
into
gs
dec
insl
in
xchg
sbb
fs
lock
push
sarb
pop
loop
ret
and
push
jecxz
fmuls
push
test
sub
test
push
in
jle
jnp
loope
std
dec
inc
or
dec
mov
lods
push
cmp
in
dec
mov
roll
pop
popa
enter
insl
or
inc
insb
inc
jl
push
pop
outsb
sub
pushf
fisubl
int
repnz
std
mov
int3
xchg
cli
xor
sub
dec
mov
push
or
cmpsb
mov
cmp
fstpt
dec
pop
test
aad
and
in
les
xorb
inc
xor
sub
decb
or
adc
addr16
adc
push
xor
test
jns
xchg
inc
jge
lds
dec
sub
adc
gs
cmp
sti
xchg
sub
sbb
mov
int3
imul
insl
and
push
jecxz
insb
in
fstps
icebp
daa
cmp
ja
dec
xor
test
xor
mov
dec
rdtsc
mov
int3
shrb
test
sbb
ret
adc
sbb
cmp
xchg
sbb
inc
xchg
and
xor
adc
jb
ret
cmp
fadds
mov
or
fcoms
pop
pusha
sub
mov
outsl
or
mov
nop
dec
push
or
pop
mov
test
xchg
adcb
rcrl
scas
sarb
rorl
fldcw
subb
leave
fcompl
hlt
popf
xor
push
repz
cmp
push
xchg
daa
popf
imul
sahf
popf
and
shrl
cmp
pop
js
mov
and
aas
lretw
xchg
and
adc
icebp
negb
subl
jmp
pop
and
jmp
dec
push
stos
cmpsb
test
add
and
push
adcb
sbb
jae
movsl
sbb
mov
in
sbb
pushl
xchg
mov
mov
pop
push
mov
addb
xor
jmp
xchg
enter
push
lret
repz
xor
flds
cmpl
jmp
gs
jmp
fsubrs
or
lret
mov
inc
lock
pop
gs
cwtl
jge
movsb
imul
mov
sub
mov
dec
lock
jae
popa
imul
inc
or
test
cltd
mov
jnp
ds
jle
movsb
cmp
sti
xor
xor
mov
das
sahf
jp
push
fwait
sub
xchg
adc
push
dec
mov
lods
sub
gs
stos
lret
jb
inc
rcll
inc
pop
in
mov
xchg
xchg
add
cs
and
sbb
xchg
aad
std
xchg
or
fdivp
adc
push
sbb
add
push
mov
sbb
arpl
movsl
cli
push
jb
repnz
icebp
test
push
mov
inc
push
mov
negl
das
pop
cmpsl
or
push
aad
loopne
and
popa
dec
jmp
mov
test
popa
jmp
push
cwtl
push
add
adc
dec
fsubs
jle
mov
add
dec
add
rclb
sub
sahf
lods
mov
sub
mov
push
inc
cmpl
into
mov
loopne
cmp
lods
stc
bound
inc
push
cli
dec
sub
and
jbe
fnstenv
aaa
push
roll
js
pusha
into
mov
insl
pop
sbb
sbb
mov
mov
popf
insl
push
inc
aas
xor
sbb
jp
negl
inc
dec
outsl
or
call
jmp
mov
inc
mov
int3
push
bound
and
push
out
aad
fcoms
dec
mov
jnp
push
or
and
inc
inc
incb
sbb
out
and
insl
ficoml
lret
or
mov
jnp
sahf
fstpl
test
popf
mov
adcl
sub
mov
movsb
cwtl
xchg
push
and
xchg
adcb
imul
xchg
push
push
mov
mov
xchg
xor
shl
outsl
pop
popa
out
fisubs
call
clc
sub
rclb
int3
stc
mov
in
push
sbb
outsl
data16
mov
adc
push
dec
dec
cli
adc
lcall
xor
add
mov
scas
roll
out
pusha
sbb
sbb
stc
push
testb
imul
sub
mov
fwait
scas
into
cmpsb
fcmovnbe
dec
or
or
hlt
or
sub
cmpsb
push
push
xchg
lcall
pusha
outsb
cmpsl
or
jl
outsb
les
xor
insl
dec
das
arpl
stos
addr16
cwtl
pop
and
sbb
sub
adc
fs
jae
test
sbb
sub
cli
icebp
xchg
push
pop
pop
add
dec
popf
inc
jb
mov
imul
repz
jg
add
mov
outsb
pause
lahf
pop
adc
xorl
cwtl
push
jnp
outsb
and
es
mov
push
mov
jnp
xchg
xchg
or
push
push
repz
adc
in
int
outsb
lock
and
sub
aam
cmp
mov
decl
sub
fdiv
sbb
mov
fs
fnstenv
mov
fsubs
clc
pop
rcr
xor
out
inc
lds
hlt
jb
outsb
xchg
pop
adc
jae
icebp
cwtl
or
pop
shl
nop
mov
lcall
mov
fnstsw
mov
or
rolb
or
pop
clc
xchg
mov
xor
sub
inc
cmp
xor
ja
nop
bound
sbb
pusha
int
cwtl
mov
negl
imul
imul
das
mov
iret
cmp
mov
push
ret
push
sahf
call
into
pop
sbb
sub
nop
push
push
inc
jle
dec
cld
lret
lods
cs
clc
jbe
in
adc
dec
mov
in
mov
cmc
inc
arpl
cmpsl
jl
push
dec
xor
cltd
ja
pop
lods
xor
or
jo
pop
pop
sti
xchg
mov
adc
push
add
and
adc
pop
cmp
icebp
lods
cltd
movsb
loope
arpl
mov
and
sbb
in
push
xchg
mov
sub
mov
andl
aaa
pop
outsl
mov
sbb
sbb
dec
les
ret
out
inc
or
sub
test
xchg
jmp
mov
or
cwtl
xchg
out
cmp
aaa
jl
or
xchg
xchg
gs
mov
shrb
add
lahf
or
lods
xlat
pop
adc
dec
cld
aad
push
mov
sbb
arpl
add
push
add
in
push
je
int3
mov
jle
cli
push
dec
fldenv
or
shll
imul
dec
mov
jecxz
je
lea
adc
into
mov
mov
fildl
cmpsl
push
cmp
jae
jne
mov
and
leave
shll
xlat
pop
and
notl
xchg
sbb
lods
push
cmpsl
dec
or
ficoms
xchg
inc
mov
mov
in
movsl
dec
stos
mov
adc
cs
test
sub
jae
sbb
jbe
lret
jbe
sub
insl
or
gs
sbb
test
aam
sub
das
mov
sbb
test
lds
and
out
imul
add
pop
add
push
ret
and
add
inc
mov
or
fdivr
xor
ja
add
add
xor
int3
movsb
fsubl
mov
xchg
pop
js
sub
mov
mov
inc
adc
lock
fnstsw
push
daa
xor
xchg
fcomps
fidivrl
push
outsb
adc
cmpsb
xor
jbe
and
movl
fldt
cmp
xchg
mov
sbb
mov
stos
outsl
cmpb
in
jo
mov
push
pop
sub
lea
bound
mov
mov
sub
ss
cwtl
test
push
dec
aam
gs
and
je
arpl
adc
push
fnstenv
push
ficoms
cmp
pop
mov
cmp
and
repz
lds
aas
les
std
sbb
clc
or
jnp
stos
sbb
push
cmp
pop
outsb
enter
xor
mov
inc
loop
mov
mov
out
or
sbb
add
stos
in
call
pop
jecxz
test
adc
jl
jmp
adc
mov
outsl
adc
mov
repz
cmp
and
cs
and
call
pushf
xorl
jmp
cs
test
icebp
pop
add
outsl
shl
sub
mov
aaa
sbb
inc
dec
scas
and
outsb
sub
sub
leave
scas
roll
inc
jmp
mov
sbb
sbb
pop
ret
dec
fdivrl
mov
push
mov
sbb
mov
mov
xchg
push
fs
pop
jns
sbb
xor
and
and
imul
sbb
shrl
xlat
les
into
xchg
scas
mov
loope
mov
shrl
xchg
adc
out
or
adc
shl
sbb
push
fnstcw
cmpsl
inc
mov
call
jo
and
push
lds
xor
pop
adc
ret
mov
gs
les
push
arpl
cld
lods
jge
push
xor
or
aas
lods
dec
xor
cmp
movsb
lock
push
sbb
test
rcr
push
mov
jns
ret
cmp
leave
daa
mov
icebp
push
cmpsb
sub
mov
scas
ds
sbb
push
push
push
xchg
pop
adc
bound
iret
xor
xchg
cmp
in
mov
and
pop
push
ss
cmp
pushf
or
mov
jns
bound
adc
dec
add
enter
scas
sbb
push
jae
push
into
ficoms
push
popf
cmp
mov
dec
adc
popf
pop
inc
pop
jno
adc
mov
mov
repnz
imul
pop
repz
inc
push
jle
push
lcall
jecxz
pop
sbbl
mov
test
leave
lock
fadds
xor
mov
popl
push
in
adc
xchg
loope
loop
mov
mov
push
push
pop
repz
les
sub
call
insb
loope
mov
mov
stos
xchg
xor
nop
sbb
shrb
rolb
mov
mov
adcb
je
cmc
xor
xor
mov
cmpl
out
cmp
add
xor
mov
mov
imul
sbb
adc
int
mov
dec
lret
xorb
xchg
ret
daa
frstor
sub
ljmp
dec
lahf
fwait
lock
into
fisubrl
pop
cs
pop
in
cld
sub
fcmovnbe
jle
fwait
jmp
popf
int
lea
lods
dec
push
fldl
push
in
gs
pop
mov
bsf
out
fucomi
sbb
pop
pop
ret
outsl
push
clc
out
jmp
cli
inc
cmp
imul
das
fdivl
ja
xchg
push
out
and
mov
jbe
push
push
out
fstpl
mov
cmc
cmpsl
push
adc
dec
cmp
ret
insb
cmp
add
sub
jmp
enter
jb
jb
xor
mov
pusha
movsb
das
cld
incb
les
stc
mov
dec
fldenv
jle
clc
loop
jb
mov
insl
fidivrl
mov
fildl
push
icebp
aam
sub
push
cld
and
shr
or
or
push
shl
jne
sbb
adc
inc
loope
je
stc
std
and
push
push
sub
sub
aas
stos
jge
inc
movsl
loopne
dec
jbe
pop
mov
bound
data16
mov
cwtl
pop
mov
adc
movsb
inc
adc
jl
pop
data16
sbb
insb
add
or
outsb
mov
add
test
push
call
add
mov
fsubs
jmp
add
mov
mov
lds
adc
cmp
jmp
jecxz
sub
std
lds
fcoms
lock
xchg
stc
sbb
call
jecxz
into
jecxz
push
imul
xchg
adc
xchg
mov
xor
pop
idivb
gs
pop
xchg
or
jmp
imul
cmpsl
inc
mov
mov
js
mov
ss
pop
popf
inc
int
popa
je
mov
lock
xor
out
sbbb
dec
fcomp
jo
popa
shll
iret
jne
adc
adc
add
arpl
adc
jbe
dec
xchg
lods
pop
adc
pop
loopne
inc
repz
fbld
dec
popa
cmp
push
add
xchg
cmp
jle
mov
fldenv
insb
flds
cltd
or
test
and
lds
out
cmp
pop
xchg
dec
jge
push
fwait
lahf
adc
mov
insb
cltd
push
repz
imul
sti
dec
adc
fnstenv
sahf
sahf
and
popa
mov
add
imul
mov
adc
movsl
sbb
ret
mov
std
xchg
addr16
xlat
call
dec
mov
pushl
dec
xor
addb
sbb
stc
and
and
icebp
pop
dec
jne
insl
sarb
or
insl
mov
cmp
mov
sub
dec
adc
pop
dec
xchg
sub
lock
cwtl
es
mov
mov
sbb
fwait
xchg
and
stc
jns
int
int3
inc
sub
pop
mov
sbb
loop
incb
std
and
ds
or
push
ficompl
fsubp
test
push
leave
cmpsl
leave
mov
pop
movaps
cltd
lock
cmp
fisttps
pop
mov
dec
scas
hlt
dec
frstor
rcr
mov
push
sbb
pop
mov
xchg
mov
ss
cmp
mov
inc
ret
xor
shrb
hlt
push
mov
mov
mov
dec
xchg
daa
es
fnstsw
xlat
mov
aas
iret
loope
movsb
jle
xchg
lahf
push
imul
adc
jge
adc
adc
cmp
lods
mov
push
fs
adc
push
adc
mov
mov
leave
mov
jmp
add
fdivs
movsb
movsl
gs
adc
pop
dec
test
stos
loope
xchg
mov
in
jle
daa
int3
mov
out
mov
stc
xor
xor
cmpsb
das
pop
jle
add
adc
mov
dec
mov
mov
adc
push
lock
out
cmpb
mov
jnp
inc
dec
roll
pop
loope
sti
dec
arpl
dec
mov
dec
add
out
lret
bound
mov
cli
pop
mov
es
je
fwait
adc
mov
int3
imul
lock
lods
insl
pop
cwtl
test
adc
neg
jmp
jbe
pop
xchg
and
dec
adc
ucomiss
or
cmpsb
add
lahf
sbb
jl
cld
mov
add
fsub
dec
or
rorl
mov
inc
mov
movsb
repz
pop
ds
js
in
testl
adc
sub
and
mov
inc
jmp
daa
cmp
pop
xor
aaa
mov
cli
nop
xor
push
add
ja
lahf
jl
icebp
push
cltd
fcompl
xlat
xor
sarb
ficomps
mov
ss
inc
add
int
mov
in
addr16
out
nop
pop
push
lret
pushf
or
lods
fildl
lret
js
jb
lret
sub
push
mov
push
ret
push
in
cmp
add
es
sbb
sub
fs
cmp
adc
mov
icebp
or
pop
mov
test
stos
imul
nopl
orb
adc
repz
mov
and
scas
pop
and
mov
gs
push
push
pop
xor
add
dec
fstl
inc
push
jp
xchg
stos
cli
repz
jge
inc
push
mov
pop
lret
movsl
repnz
out
jg
and
stc
int3
rolb
cs
mov
fisubl
xor
mov
add
ret
cltd
ss
ljmp
push
xchg
xchg
mov
or
dec
outsl
or
and
lret
into
movsl
xlat
les
enter
inc
pop
add
clc
popa
aam
cmpsl
movsl
xchg
jns
mov
sub
popf
jmp
out
stos
js
push
jecxz
mov
repnz
xorb
test
ffreep
out
hlt
sahf
lahf
into
call
loope,pt
sbbl
sub
jns
jp
xor
xor
test
insl
test
mov
sub
mov
and
push
sti
inc
xlat
mov
mov
rclb
cltd
test
out
inc
aas
lahf
xchg
pushf
xor
inc
push
mov
movsl
dec
dec
data16
scas
push
push
xchg
jne
fsubl
jnp
push
dec
int
ret
jmp
fnstcw
sarb
loopne
dec
fmull
dec
loope
in
stos
add
mov
lea
adc
adc
int
mov
dec
popf
sti
adcb
mov
rorb
imul
fmul
add
fwait
sbb
addr16
push
test
mov
xchg
dec
pusha
mov
test
jl
jcxz
push
jl
pop
pusha
cltd
sub
ss
lret
aaa
cmc
jmp
or
repz
orl
push
xchg
or
push
xchg
lcall
out
out
mov
dec
shl
in
mov
aad
push
mov
adc
fimull
adcl
mov
push
aam
cld
jne
shrb
rolb
gs
jle
shll
mov
sub
push
fwait
outsl
lds
xchg
xchg
and
and
outsl
imul
test
incl
pop
rcrl
add
gs
es
xchg
add
ds
sarb
xor
cmp
or
and
inc
out
or
mov
cmp
mov
rorb
imul
or
mov
negb
lods
dec
sbb
stc
adc
repz
mov
inc
mov
das
jae
arpl
add
inc
roll
adc
mov
mov
outsl
insb
fst
lock
jb
adc
pop
jg
add
jbe
fnsave
not
mov
fs
sbb
push
xchg
pop
xchg
std
mov
jmp
xor
push
icebp
stos
fnstcw
mov
adc
call
push
dec
or
mov
pop
testl
sub
mov
imul
xor
sub
fsts
mov
sub
in
push
outsl
outsb
int
mov
mov
fnstsw
iret
push
adc
leave
dec
leave
add
aad
pop
adcl
out
or
fbld
inc
in
or
in
aas
test
push
popa
adc
sahf
add
mov
fistps
cmp
xor
jae
les
push
pop
aam
mov
clc
pop
nop
pusha
jp
jb
push
dec
dec
aaa
inc
out
xor
mov
ljmp
negl
jmp
popf
in
mov
jle
sbb
nop
add
stos
test
xchg
flds
fwait
pop
call
fs
jmp
xchg
pop
aad
add
aad
ret
push
lret
or
push
in
sub
push
mov
popl
aad
imul
mov
jnp
gs
push
sar
mov
inc
cmp
mov
out
or
add
shlb
and
jns
and
into
adc
mov
jmp
roll
lret
ljmp
loope
lcall
inc
dec
sahf
roll
pop
inc
fmulp
ds
icebp
jbe,pt
jp
mov
daa
or
and
aam
cmp
dec
pop
dec
jge
nop
jl
and
hlt
push
cli
inc
enter
test
inc
dec
mov
mov
loop
mov
aaa
push
pop
mov
add
lahf
xchg
jae
hlt
imul
sub
mov
xor
dec
cmc
das
in
jns
lods
add
stos
fisttpll
mov
fwait
inc
or
sbb
adc
movsb
inc
xlat
xor
mov
adc
in
dec
or
cmpsl
pop
or
iret
ret
xor
mov
xchg
lret
pop
mov
pop
add
xor
adc
and
mov
adc
sbb
insb
mov
sahf
std
rcll
add
dec
je
jae
pushf
mov
shrb
and
cmpsb
mov
mov
push
pop
pop
push
into
mov
iret
repnz
inc
mov
out
jmp
jg
lahf
and
mov
roll
mov
out
dec
push
cmp
pop
pop
scas
mov
ret
inc
sub
jno
sti
pop
inc
and
xchg
pop
xor
mov
scas
lcall
leave
fimuls
loope
add
mov
mov
cld
inc
mov
adc
les
jge
adc
adcb
fstps
test
xor
fmul
fildl
push
test
xchg
sub
mov
std
jnp
clc
js
out
sahf
and
mov
fwait
movsl
xchg
jecxz
out
cmp
sti
mov
shll
test
mov
movsb
xchg
xor
in
mov
or
scas
cmp
packuswb
fwait
out
test
std
inc
imul
adc
pop
cmp
insb
xchg
dec
lods
pop
push
dec
adc
cmp
pop
mov
inc
cli
jae
pop
mov
jge
inc
sub
leave
jp
imull
push
push
jae
loope
push
outsb
bsf
xchg
jnp
addl
popl
cwtl
and
sub
pushf
cmp
lcall
jns
and
sub
movsb
hlt
mov
jecxz
jmp
jmp
insb
nop
push
jmp
dec
aad
clc
sbb
icebp
test
adc
ret
subb
test
movsb
insl
sbb
leave
cmp
mov
mov
xchg
popa
ss
mov
add
add
jns
xor
loope
mov
shld
inc
sbb
jne
addr16
sbb
mov
mov
xchg
es
out
xchg
push
sti
add
mov
ret
xor
xor
faddl
add
rcll
pop
dec
dec
push
dec
add
es
pushf
add
xchg
cmc
and
cmpsb
je
dec
sub
ljmp
js
jns
or
push
cmpsb
or
in
mov
nop
mov
ljmp
jo
imul
leave
xlat
int
cmc
mov
test
pusha
pusha
outsb
aaa
jle
mov
dec
sub
push
pop
jecxz
sbb
rolb
fldcw
mov
sbbb
cmc
fwait
adc
vucomiss
ss
orb
enter
lahf
push
filds
dec
xor
and
mov
inc
xor
stc
pop
rolb
ficoml
or
mov
sub
mov
jg
inc
in
xor
into
imul
push
cltd
mov
pop
jns
cmp
mov
into
loop
xor
mov
sahf
fbstp
clc
inc
pop
hlt
aam
pop
push
std
pop
fwait
jnp
push
mov
sbb
mov
imul
mov
fiadds
sub
and
mov
dec
test
insl
fldl
lock
add
or
push
inc
push
enter
dec
test
mov
adc
mov
adc
in
mov
loop
inc
sti
dec
xor
pop
movsb
gs
pop
out
and
inc
ret
mov
shll
pop
and
and
mov
mov
jne
adc
out
out
movsl
nop
inc
mov
test
cltd
sbb
mov
lods
mov
je
xchg
popa
in
pusha
movl
jb
jae
cwtl
in
add
fsubs
repnz
cmc
cmp
mov
sti
push
outsb
mov
add
dec
js
or
or
inc
push
scas
or
inc
sbb
and
mov
adc
subb
jnp
mov
outsl
icebp
adc
or
pop
popf
fstps
dec
cmp
push
loop
fnstcw
gs
int3
popa
pop
arpl
xor
sbb
movsb
out
dec
push
dec
mov
xchg
lahf
mov
dec
jl
sbb
fildl
ja
bswap
mov
mov
mov
sbb
add
mov
xlat
jno
fildll
or
mov
mov
inc
gs
pushf
into
fs
add
les
mov
js
mov
jno
dec
cmp
inc
push
pop
pop
call
das
mov
jge
sub
inc
sub
or
in
and
pushf
hlt
mov
inc
cld
outsl
mov
pop
lea
or
dec
or
test
or
pop
lea
mov
lock
ljmp
mov
pop
xorl
sbb
lods
push
cmpsl
data16
aaa
mov
jle
sbb
out
push
scas
stos
xor
sbb
imul
sbb
cwtl
jae
enter
lds
lods
mov
mov
jp
dec
sahf
lock
aad
adc
mov
xor
nop
outsl
cmp
push
pop
or
mov
aam
jo
incb
pop
pop
cmp
xchg
test
out
push
std
jge
xor
cmp
push
js
cmpsl
sbb
mov
addr16
hlt
sub
inc
out
jge
xchg
aam
pop
call
sbb
loopne
dec
xor
lods
lcall
adc
rcrl
fildll
adc
scas
dec
cmp
jp
stos
sbb
sbbb
out
ret
ljmp
mov
daa
loope
xor
insb
xchg
fildll
xor
mov
jbe
and
lds
jb
movsb
mov
adc
cmp
sub
jbe
fidivrs
fmuls
xchg
lcall
lcall
fstl
fldcw
or
sbb
add
jmp
push
scas
cmp
out
adc
shll
xchg
mov
dec
loopne
inc
mov
mov
int
add
inc
and
jnp
lret
data16
adc
nop
cwtl
xchg
pop
std
ficompl
push
lahf
clc
xor
push
or
push
pushf
fstpt
arpl
mov
or
cs
mov
jbe
sub
xor
pop
aas
push
cmp
mov
leave
sub
bndldx
adc
test
shrb
inc
aas
push
jle
add
fstp
ret
jnp
mov
cmpsl
icebp
sbb
insl
cmp
pop
mov
lea
loopne
loope
xchg
xor
aad
and
cmp
dec
lods
jecxz
in
int
stc
pop
mov
aaa
cmpsl
outsb
mov
lret
std
cld
sub
add
test
and
aad
shlb
dec
gs
dec
pop
iret
jae
push
loop
push
das
arpl
imul
pop
mov
sahf
cmpsb
stc
mov
negb
push
insb
outsb
pushf
pop
ret
dec
lret
mov
push
adcl
mov
cmpsl
sub
dec
fcompl
inc
ror
or
xor
xchg
repnz
fidivrl
jmp
in
jb
adc
ljmp
mov
gs
sbb
mov
mov
or
fwait
jmp
jmp
adc
out
inc
adc
pushf
rcl
xchg
cwtl
dec
inc
aad
cmpsl
stos
stos
rcl
daa
lret
in
mov
push
xor
scas
push
setge
xchg
fadds
xchg
outsb
adc
pop
ficoml
je
and
push
ret
mov
test
mov
or
push
mov
rorl
cmpl
mov
in
jnp
cmpsl
add
and
jmp
icebp
cmpsb
jb
lahf
ret
lods
arpl
fdivl
xor
in
xlat
inc
cmp
cmpb
push
mov
pop
jmp
pop
mov
jnp
outsb
loopne
arpl
out
mov
push
sub
test
pop
jb
pop
test
push
add
push
push
idivb
mov
test
in
sbb
dec
sub
js
and
imul
xchg
fwait
cmc
scas
std
adc
adc
xor
test
stos
inc
test
clc
sub
push
dec
push
jl
outsl
sub
push
iret
mov
push
arpl
clc
sbb
andl
sbb
cmp
or
cmp
pop
jmp
xor
sub
push
push
lock
dec
xchg
mov
pusha
mov
push
inc
iret
test
imul
test
mov
and
and
pop
and
insl
xchg
in
fistpll
outsl
push
xorb
xorb
adc
aad
push
es
inc
ror
addl
xor
pop
pop
mov
jg
push
subps
lret
mov
nop
int
out
imul
push
and
call
sar
testb
sbb
add
xor
and
cmp
ret
adc
test
or
outsb
cmp
ljmp
call
roll
into
in
inc
scas
insb
insl
push
loopne
add
rep
and
push
ret
lods
imul
xor
mov
mov
push
movsb
and
dec
or
mov
push
and
bound
jge
xchg
mov
sub
lock
in
dec
sub
xchg
repz
cmpsb
popa
ja
pop
push
iret
sbb
fsubrp
test
popf
cld
jle
cwtl
pop
cld
shl
cld
adc
xchg
out
mov
sahf
xor
jge
mov
ljmp
ds
mov
mov
mov
inc
jl
in
xor
fprem
pop
push
jle
movsl
lret
imul
mov
push
push
sub
inc
pop
jne
in
mov
sbb
sub
divb
sub
fwait
insl
push
subb
inc
and
les
les
sub
movsb
test
mov
and
in
das
pop
sbb
sti
add
scas
pop
out
sub
push
in
mov
cmp
pop
or
xlat
inc
jno
cmp
xchg
cmpsb
push
orb
push
jbe
push
push
fs
fistl
in
jne
sub
inc
pop
inc
mov
jns
rol
lcall
pop
out
test
iret
mov
scas
cli
xor
test
aas
shl
jae
xchg
in
lret
gs
cwtl
cmp
jno
in
add
mov
jnp
pop
cwtl
xor
icebp
out
mov
mov
lahf
aas
aad
nop
fistps
ds
add
adc
add
dec
cmp
je
lret
jbe
adc
pop
dec
sti
imul
lahf
push
adcb
and
insl
xor
aaa
sub
or
js
je
movsb
pop
lods
mov
int3
mov
frstor
pushf
lds
dec
pop
add
cmpsb
mov
xchg
or
sbb
cmpsl
in
jge
pop
push
xchg
adc
sti
insb
mov
sbb
xor
mov
addl
addr16
jbe
mov
sub
aas
int
mov
sbb
xor
dec
clc
adc
hlt
sbbb
mov
lds
xchg
in
es
or
mov
add
ss
subb
adc
fwait
jnp
test
in
mov
mov
cmc
inc
ja
and
mov
das
xor
sub
cmpsb
push
inc
in
lock
out
xor
cld
xchg
scas
or
push
ja
cmpsb
pop
add
in
sub
add
fisubrs
dec
mov
mov
mov
rclb
lahf
sar
jp
loopne
xchg
hlt
or
sti
dec
xchg
add
test
or
mov
orl
and
push
roll
adc
ja
hlt
dec
sbb
mov
xor
cmp
pop
fiaddl
repnz
jo
mov
jecxz
lock
ror
dec
push
hlt
cli
mov
popf
cltd
mov
mov
pop
add
aas
cmp
addl
xor
xor
sti
sti
adc
xchg
mov
sub
int3
lds
mov
das
lahf
imul
test
test
enter
arpl
in
movsb
rclb
sahf
fmull
fstps
dec
cmp
pop
xor
sbb
cld
ret
add
shlb
insl
stos
sbb
int3
or
fmul
pop
push
ds
fcomps
mov
sahf
int
xor
in
cltd
push
cs
iret
rorl
cmc
lahf
xor
pop
shlb
out
cmp
popa
or
arpl
lods
cmp
iret
xor
cltd
xchg
and
pop
adc
sub
cmp
pop
fistpll
mov
insl
addr16
aas
js
pop
in
aam
mov
jmp
add
mov
and
das
xchg
mov
xchg
sbb
vxorps
test
jbe
aam
jecxz
jge
push
mov
xorb
movsl
cmp
fcos
addr16
cmp
dec
xor
add
xchg
jmp
fwait
mov
cmp
mull
pop
es
cltd
dec
push
insl
mov
sub
addr16
stc
mov
sub
adc
insl
lock
sbb
into
push
add
cmc
out
push
mov
out
rcrb
leave
aad
dec
repnz
push
or
lock
mov
fisubrs
sar
testl
jg
std
insb
popf
pop
xchg
mov
jno
cmp
jge
das
imulb
dec
add
mov
insl
mov
jg
inc
stc
inc
jmp
or
pop
xchg
cmp
insb
aas
out
cmp
add
xor
negl
push
clc
orb
sbb
cli
mov
xchg
scas
sub
mov
or
lret
imulb
mov
sbb
xor
in
cmc
aam
cmpsl
xchg
loop
adc
jp
sbb
nop
push
jmp
adc
inc
test
or
sub
pop
sarb
imul
adc
divb
cwtl
aas
insb
hlt
and
sbb
dec
sbb
mov
dec
mov
test
nop
adc
jle
mov
jae
les
push
call
out
repnz
in
or
xchg
aas
fdivs
add
cmp
daa
popa
lret
sub
pop
jae
adc
or
jmp
mov
inc
sbb
jb
test
test
inc
fdivrl
loop
daa
push
adc
mov
icebp
jl
adc
xchg
fcompl
out
std
xlat
sbb
push
pop
popf
xchg
inc
int
jbe
xchg
add
es
push
cltd
mov
pop
and
adc
xor
push
fdivs
popf
jne
dec
inc
sub
imul
sti
mov
pushf
pop
vpunpckhwd
add
xor
push
jne
adc
addr16
and
cmp
push
iret
es
adc
shll
fnstsw
xchg
inc
adc
pusha
xor
enter
mov
mov
and
adc
fistps
xor
mov
pop
sub
xchg
add
sub
inc
xchg
dec
sbb
dec
mov
dec
adc
sti
xor
std
cwtl
call
xor
movsl
mov
xchg
hlt
add
sub
cmp
mov
push
out
int
push
in
cmpsl
pop
add
leave
sbb
cmp
inc
ss
jae
out
psrlw
outsl
push
jmp
lret
movsb
cmp
into
pop
push
push
add
push
and
lods
pop
inc
add
mov
jp
ja
hlt
mov
out
sahf
sarb
jno
clc
xlat
jbe
ja
mov
add
xor
inc
cmp
subb
gs
bound
out
dec
scas
js
je
dec
je
sbbb
int
in
sbb
jle
sbb
ficoml
pop
out
xchg
and
icebp
xchg
test
mov
std
pop
ss
inc
jb
in
mov
pop
and
aas
andl
mov
jbe
sbb
flds
insl
adc
pop
xchg
loop
pop
cmp
cmp
jle
ss
hlt
scas
ficoml
data16
pop
arpl
add
mov
mov
and
fcmovnu
subb
xor
adc
sub
aam
int
or
mov
xor
add
or
pop
aad
adc
mov
dec
inc
fnsave
sbb
addr16
inc
and
mov
jg
je
xchg
out
fisttps
sbb
sub
or
cli
xchg
daa
std
nop
dec
adcb
pop
rclb
dec
fsts
scas
xchg
adc
cmc
fistpl
jmp
fldt
cld
loope
pop
mov
inc
mov
sbb
mov
mov
xor
or
dec
in
movb
stc
pop
in
xchg
cmp
add
test
testb
or
sbb
xorl
push
mov
sub
aad
xor
jmp
mov
mov
pushl
imul
xlat
dec
popa
hlt
dec
into
iret
mov
loopne
inc
mov
popa
mov
mov
dec
insb
add
lret
xor
mov
add
insb
pop
repz
xchg
push
dec
leave
ljmp
cmp
das
cmp
aad
mov
add
insb
stc
push
insb
dec
xor
push
mov
adc
mov
push
popf
jle
pop
or
cmp
xor
decl
int
add
scas
pop
das
pop
xchg
popa
jp
sahf
in
jp
insl
flds
or
popa
gs
outsl
sbb
les
adc
xor
jnp
mov
cmp
mov
sbb
js
pushl
and
mov
push
scas
adc
push
xchg
push
push
ds
jnp
xchg
std
push
push
mov
jbe
jmp
hlt
fst
les
je
push
jp
stos
sbb
movsb
dec
es
mov
dec
push
sahf
jl
dec
jl
adc
fwait
icebp
aad
push
sti
cwtl
add
sub
lds
jns
ljmp
add
mov
sti
std
push
jns
test
push
aas
sbb
mov
adc
popf
mov
adc
mov
lcall
arpl
fwait
rcll
push
pop
into
xor
push
test
mov
adc
xor
pushf
jle
or
jmp
lret
in
xor
lret
divl
je
mov
arpl
das
sbb
cmp
cmpsl
cmp
and
adc
inc
jecxz
mov
lcall
call
scas
roll
ret
cld
add
pop
jg
dec
inc
mov
pop
out
and
mov
xchg
out
pop
mov
mov
xor
jp
lods
gs
sbb
scas
inc
jns
shl
jae
cmp
adc
sub
dec
aaa
loop
push
aaa
aam
pop
xchg
aas
inc
inc
popf
xchg
xor
push
mov
pop
or
fisttpl
ficomps
es
mov
and
std
cli
cmp
sbb
cmp
ja
mov
inc
cmc
aad
loopne
pop
pop
in
push
call
sahf
or
mov
push
out
cltd
push
jae
test
add
jns
adc
dec
pop
insl
pop
mov
out
sahf
cld
sbb
mov
outsl
fisttpll
repnz
xor
pop
dec
push
lods
addr16
xlat
stos
cltd
xor
lret
jb
bound
mulb
fisttpl
daa
xorl
mov
mov
cwtl
std
sub
repnz
add
mov
mov
int3
lds
pop
xchg
insb
mov
mov
sub
sbb
ss
dec
shll
cli
jno
iret
adc
mov
cmpsb
int3
mov
jb
stos
mov
push
xchg
out
inc
pop
push
pop
push
aam
data16
js
imul
add
sub
jle
loop
xchg
enter
outsl
ret
aaa
xchg
icebp
dec
mov
push
repz
inc
mov
data16
add
adc
jae
lret
cltd
jmp
and
stos
call
sbb
jae
insl
daa
pop
jle
mov
jns
and
add
hlt
sub
ss
add
lcall
movsl
or
into
jnp
scas
push
or
push
rorl
mov
push
sar
jmp
es
xor
in
repz
cmp
mov
out
add
fisubl
jns
inc
lods
xchg
mov
pop
sub
xchg
push
mov
mov
xor
xchg
adcb
rcll
std
jge
js
inc
xor
addr16
mov
or
mov
sbb
shrl
mov
dec
and
push
dec
mov
mov
inc
mov
xor
mov
xor
add
stos
mov
jae
xor
fcmovnu
gs
pushf
es
int
mov
ret
lods
mov
ret
loop
mov
popf
daa
lea
xor
mov
js
loope
xor
stos
jp
or
sub
cs
sbb
jmp
scas
mov
test
mov
lcall
pushf
movsl
and
hlt
pop
aaa
daa
sbb
ret
ljmp
and
jne
sbb
pop
dec
jb
mov
in
mov
cwtl
push
push
addr16
scas
aam
pop
shl
imul
push
mov
scas
ja
jae
xor
gs
push
ljmp
pop
or
icebp
inc
sbb
popa
neg
loopne
mov
xchg
fwait
sahf
add
xchg
push
xchg
xchg
js
lret
inc
ret
mov
mov
popa
imul
jmp
mov
pop
jbe
push
loopne
lock
pop
pushf
filds
dec
sub
adc
rcr
and
xchg
mov
dec
jno
mov
jnp
sub
xchg
jmp
aas
and
fdivrl
pop
or
test
xor
push
sbb
test
or
push
sbb
adc
inc
out
leave
jns
leave
cmpsb
addr16
repnz
pextrw
adc
or
adc
scas
mov
daa
sub
bound
pop
and
insl
mov
dec
imul
jbe
push
sti
adc
filds
xor
cmp
inc
rcrl
popa
cmc
xor
cmc
inc
jecxz
repnz
mov
sub
jle
test
orl
aad
pop
mov
test
and
aad
daa
call
mov
stc
ljmp
testl
xchg
fs
in
ja
xchg
outsl
ret
fs
aaa
movsb
mov
push
orb
pop
and
xor
lods
icebp
push
mov
push
adc
mov
test
push
outsb
repz
repnz
push
mov
shr
inc
mov
cli
push
lret
shll
inc
add
enter
ret
and
fnstsw
mov
mov
push
jle
inc
sti
inc
add
repz
nop
loopne
dec
cmp
push
ss
iret
xchg
pop
ss
popa
mov
sub
adc
sbb
mov
push
inc
insb
xchg
xor
scas
push
cmc
pop
and
shlb
jg
dec
fildl
psrld
jno
in
fcomps
in
mov
sub
inc
pop
xchg
sub
pop
repz
dec
cmp
ret
filds
mov
das
fcompl
mov
test
lods
gs
adc
sbb
into
cmc
nop
xor
mov
mov
lods
jmp
or
jecxz
addb
fs
inc
popf
das
imul
cmp
test
mov
push
inc
cmpsb
jb
add
pusha
xchg
dec
mov
ss
popf
das
xchg
ljmp
fmul
pop
fdivl
mov
icebp
and
aam
test
aas
or
imul
xchg
dec
xchg
jae
cmp
jbe
mov
roll
dec
lods
cs
jge
mov
stos
stos
inc
mov
fiaddl
dec
mov
mov
leave
inc
nop
fiadds
out
pusha
mov
pushl
scas
imul
inc
hlt
pop
out
cmp
add
and
lock
pop
mov
mov
jo
les
mul
or
push
ja
pop
stos
pop
lods
cmp
add
dec
and
cmp
lcall
mov
aad
sub
push
jg
in
mov
adc
cmp
jae
mov
cmpl
aas
mov
or
push
push
jae
sub
into
pop
push
rcrb
mov
pop
pusha
aam
das
bound
push
shlb
lea
mov
dec
adc
and
jb
es
push
push
incb
gs
aas
ds
ja
mov
jmp
rdpmc
mov
pop
arpl
xchg
das
xchg
push
sub
sbb
pop
jns
stos
xlat
cltd
shlb
sub
fistps
inc
sbb
imul
popf
icebp
inc
fcoml
jl
mov
cltd
dec
lcall
jle
dec
lds
in
pop
stos
ret
notb
test
out
xchg
jl
xchg
jge
push
out
popf
rcrl
ja
sub
xor
enter
mov
push
lea
movsl
cli
scas
das
mov
in
in
or
call
pop
push
fimull
gs
push
pop
loop,pn
jle
stos
adc
xor
push
das
and
push
dec
pop
subb
xor
mov
jns
imul
jbe
cmp
movsl
push
ficoms
push
pop
sbb
sub
popf
dec
test
adc
mov
data16
data16
add
add
xor
fs
arpl
add
dec
add
jl
add
dec
add
add
in
inc
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
dec
jmp
.byte
push
pop
jg
xchg
xorb
pop
ljmp
incl
inc
push
data16
ja
jg
decl
inc
add
ja
incl
pop
movb
jg
pushl
sbb
movb
jg
sbb
movb
add
cli
fistl
push
sub
sbb
test
ja
sub
or
arpl
popa
xor
popa
xor
cmp
bound
gs
data16
arpl
aaa
data16
data16
data16
ss
and
dec
insb
imul
and
jae
push
ja
and
insb
sub
insl
gs
bound
gs
jb
jae
imul
and
and
jae
and
and
jo
sub
je
outsb
and
and
gs
and
aaa
aaa
bound
data16
cmp
