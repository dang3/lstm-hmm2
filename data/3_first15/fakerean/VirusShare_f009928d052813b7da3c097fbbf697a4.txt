jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
movsb
inc
add
or
mov
mov
cwtl
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
sub
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
mov
std
leave
adc
add
nop
add
dec
std
leave
adc
mov
std
leave
adc
add
cwtl
add
jo
leave
adc
mov
std
leave
adc
add
mov
add
cmp
mov
add
test
int3
adc
add
add
std
leave
adc
add
mov
int3
adc
add
int3
pop
mov
std
leave
adc
add
rolb
dec
adc
cmp
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
xchg
inc
add
cmp
xchg
inc
add
cmp
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
dec
mov
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
inc
xchg
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
jg
inc
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
push
call
mov
in
push
jp
cwtl
popa
add
jle
mov
push
add
out
fisubs
clc
into
test
mov
cltd
add
add
add
add
cwtl
mov
add
mov
push
add
add
add
lock
add
mov
stos
add
roll
sti
aam
js
add
test
outsb
add
add
pop
movsb
add
add
movsl
add
repnz
xchg
add
mov
xlat
outsl
out
ret
out
jb
pop
add
add
add
je
add
add
push
neg
mov
test
rolb
sahf
add
cmpsb
cld
jecxz
add
ret
add
add
test
add
js
mov
add
scas
xchg
mov
sahf
push
push
mov
add
push
push
push
push
push
push
call
popa
hlt
loop
mov
add
jecxz
add
pop
in
add
cli
add
lret
les
jmp
add
add
bound
add
add
xchg
xchg
in
cmc
mov
xchg
addl
xchg
mov
je
xchg
mov
add
addr16
add
add
jnp
add
addr16
mov
lea
pop
movl
popl
push
push
push
push
lea
push
lea
push
call
push
cmpsl
mov
lcall
fildll
add
test
add
xchg
xlat
lods
add
push
movb
mov
add
xchg
add
loopne
mov
aam
add
mov
bound
mov
lds
mov
add
jne
cli
push
add
icebp
mov
xor
push
add
scas
shll
adc
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
addb
add
outsl
ret
jge
movsl
ja
mov
add
int
fprem1
add
add
popa
mov
lahf
add
mov
xchg
push
lods
lock
ljmp
roll
add
imul
ja
testb
scas
mov
clc
push
pop
jecxz
add
add
in
add
fucomp
je
add
add
add
push
lods
icebp
mov
lea
pop
call
call
push
push
lea
push
lea
push
lea
push
push
push
push
call
jmp
xchg
int
imul
lcall
cwtl
int3
faddl
add
add
push
add
testb
add
stos
add
outsl
add
add
add
sahf
add
add
add
add
add
add
sahf
aam
jnp
add
out
add
mov
cli
add
add
mov
aad
fmull
add
mov
lret
push
push
lea
push
lea
push
call
pop
roll
mov
mov
add
jne
add
add
add
popa
xchg
jle
fwait
leave
popa
add
add
mov
add
add
add
aad
lock
movl
add
add
imul
jae
pop
xchg
mov
add
add
add
out
add
mov
lea
pop
call
jmp
ret
push
push
push
push
call
push
testb
imul
addr16
fstpt
mov
stc
sbbl
push
add
jl
cwtl
mov
stos
sti
add
mov
mov
add
bnd
mov
pop
add
outsl
add
cmpsl
jb
add
std
in
add
add
movsb
add
popl
jb
add
ljmp
movsb
rolb
add
lea
pop
mov
mov
push
push
push
push
push
push
lea
push
push
call
add
fucomip
pop
xchg
les
add
mov
add
insb
ljmp
pop
add
xchg
mov
imul
add
add
mov
roll
add
mov
int3
lahf
jle
add
push
add
add
push
add
movsl
add
je
fildl
lret
enter
mov
fistpl
call
pushf
in
shr
add
mov
add
pop
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
js
push
add
push
rolb
jns
add
icebp
mov
push
add
add
addb
mov
lea
mov
push
add
iret
ljmp
mov
jmp
jnp
push
jae
push
int3
xchg
loop
add
sti
xchg
movsl
jmp
test
mov
shlb
mov
mov
mov
lea
pop
add
add
mov
xor
push
lea
push
push
push
call
push
mov
movsl
ret
add
push
add
icebp
add
jmp
add
testl
add
add
mov
add
cltd
icebp
add
lods
jmp
add
add
add
jbe
arpl
add
ja
add
sbbl
push
lcall
push
add
add
clc
add
jle
scas
push
enter
mov
add
lea
pop
add
call
push
push
call
cmpsb
gs
add
push
mov
jecxz
add
add
add
lods
jl
loop
aam
add
cmpsb
scas
into
add
add
sahf
stc
mov
testb
cli
hlt
add
mov
push
mov
ret
scas
mov
fisubl
add
add
cld
movl
push
pop
enter
pushf
testb
add
test
add
lods
mov
lea
pop
mov
push
push
push
push
push
call
fprem
jo
add
push
add
int
mov
add
leave
roll
movsb
mov
mov
neg
fnstcw
xchg
leave
pushf
add
xlat
loope
mov
jnp
lcall
fiaddl
add
jno
fwait
add
in
mov
ljmp
scas
test
add
lock
enter
jmp
push
add
xor
add
mov
scas
add
xchg
push
mov
aam
bound
pop
xor
push
push
push
lea
push
call
nop
add
mov
add
mov
cmpsb
add
mov
jbe
mov
add
add
add
test
mov
add
add
add
icebp
loope
add
add
popa
pusha
add
xor
scas
out
sahf
mov
in
xchg
push
jae
add
std
mul
divl
mov
lea
pop
add
push
push
push
or
not
add
xor
dec
inc
inc
sub
lea
shr
pop
rol
lea
sub
pop
push
push
push
call
lcall
aad
add
popf
add
iret
std
add
cmpsb
xlat
jmp
mov
add
lret
popf
push
mov
roll
mov
jns
add
mov
neg
rolb
add
add
add
ljmp
stos
add
repnz
push
add
test
jno
mov
add
mov
mov
add
add
out
in
add
mov
lea
pop
pushl
push
push
push
push
lea
push
call
lods
xchg
xchg
cmpsb
shr
lods
lcall
insb
fsub
lods
add
add
int3
shrb
rolb
out
add
add
shlw
out
add
loope
add
add
stos
add
mov
out
nop
insb
loope
pop
shlb
pop
fsubl
push
add
out
add
mov
xchg
add
out
add
mov
jno
add
addb
test
test
int3
lea
pop
call
mov
push
push
call
cli
outsl
std
add
je
subl
add
add
popa
lods
cmpsl
add
add
rcr
cli
mov
add
leave
jno
add
xchg
mov
add
lock
add
arpl
hlt
push
add
mov
cld
test
add
xchg
rolb
in
js
add
rcrl
add
int3
lea
pop
movl
lea
push
push
lea
push
call
cwtl
mov
xchg
test
push
push
add
rolb
add
and
add
jp
add
add
cmpsl
add
add
pop
add
mov
mov
jbe
xchg
add
add
add
add
insb
add
add
add
add
out
hlt
lea
pop
pushl
pushl
call
push
push
lea
push
lea
push
push
push
call
popa
mov
addb
add
fidivrl
fbld
add
cmpsl
in
add
jp
roll
faddl
add
add
push
add
popf
add
pop
add
add
add
insb
add
mov
add
gs
add
add
add
pop
addl
test
push
add
add
add
mov
lea
pop
pushl
push
push
call
mov
shrb
mov
mov
xchg
lea
add
xlat
arpl
jns
add
add
in
add
jns
add
xchg
mov
arpl
repnz
add
add
add
add
fbld
add
rolb
xor
mov
mov
aad
lods
loopne
mov
fildl
pop
andl
jae
cmpb
mov
pop
add
mov
lea
pop
pushl
call
push
push
sub
shl
push
sub
add
ror
not
dec
not
sub
xor
shl
shr
pop
sub
lea
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
add
je
insb
add
fwait
jnp
jl
lret
mov
lret
ja
mov
jae
hlt
movsl
push
mov
addr16
add
add
add
mov
add
je
add
add
add
into
add
add
fiaddl
add
flds
jae
xchg
push
movsl
jecxz
add
jge
lret
pop
mov
fadds
add
xchg
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
popa
sahf
add
add
mov
movsb
add
add
int
addb
aam
in
add
add
mov
nop
add
jle
mov
add
pop
out
add
lods
add
xchg
mov
add
add
mov
add
mov
in
jno
mov
movsl
mov
addr16
add
out
mov
lea
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
jae
into
add
add
nop
add
add
add
jnp
jp
mov
add
popf
scas
cltd
testb
lods
testb
add
add
ja
push
push
add
mov
add
int3
movsl
jns
cmpb
add
lahf
lcall
int3
popf
add
loopne
add
rolb
add
push
pop
add
jbe
outsl
imul
roll
add
mov
lea
pop
push
push
push
lea
shr
push
sub
add
rol
inc
sub
ror
ror
rol
shr
pop
not
add
inc
pop
push
push
push
push
push
push
lea
push
call
popf
jae
add
mov
mov
sti
fadds
out
test
mov
bound
aad
pop
add
int
imul
rorb
shr
add
add
add
add
add
add
jno
add
repnz
sub
add
fstl
add
add
cld
fcomip
add
outsl
xchg
stos
jns
xchg
add
add
rorb
push
call
push
push
push
push
push
lea
push
push
push
call
jle
mov
jp
mov
jmp
push
shrl
add
mov
rol
jp
pop
mov
add
loope
add
add
enter
mov
mov
add
jo
add
insb
push
stos
hlt
pop
add
pop
add
ljmp
push
lods
add
add
push
add
mov
mov
push
add
mov
pop
mov
push
lea
push
push
push
push
push
call
subl
mov
add
js
add
lcall
add
out
push
cltd
push
mov
fnstsw
call
mov
jns
icebp
idivl
add
js
add
push
sahf
movsb
movsl
mov
in
enter
add
jecxz
add
mov
mov
fwait
xchg
jns
jns
lret
roll
push
aam
bound
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
xchg
add
popl
push
pusha
add
lcall
add
insb
add
jmp
cli
add
add
jno
faddl
add
xchg
xchg
jno
xchg
add
cltd
jbe
mov
mov
add
push
add
add
add
add
mov
aam
bound
mov
add
add
push
push
push
push
call
mov
add
pop
add
mov
pop
push
add
jecxz
mov
add
add
push
add
add
repnz
ja
xchg
test
add
add
faddl
movsl
lds
cli
imul
mov
cwtl
lods
mov
stos
lock
into
add
pop
stc
add
add
fdivs
hlt
push
add
add
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
push
mov
mov
push
push
jp
lods
add
add
cmc
pop
imul
mov
je
add
jb
add
xchg
in
lret
add
hlt
mov
pushf
add
add
add
pop
addl
add
pop
add
pop
add
aad
cld
push
mov
rcr
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
ljmp
jmp
jl
add
pop
push
push
leave
push
add
ret
hlt
hlt
mov
add
js
add
shlb
add
ret
add
add
aam
add
xchg
add
jb
mov
fsubrs
add
add
lods
push
jae
lahf
insb
lcall
divl
jo
test
add
fisttpll
sub
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
jmp
add
add
jle
pop
mov
add
add
lea
ret
cli
add
mov
pushf
pusha
loope
lds
xchg
loope
out
add
mov
test
xchg
addr16
cld
iret
add
fldl
add
les
sarl
pop
enter
jo
fdivr
add
in
add
add
add
fcoms
in
into
add
pop
add
push
push
lea
push
push
push
push
push
push
push
call
andb
add
shll
into
jnp
pushf
loop
add
mov
ret
add
xchg
add
lahf
iret
test
push
add
xchg
add
out
jno
add
add
fwait
cmpsl
add
push
add
jo
add
add
jbe
mov
add
leave
add
out
add
add
mov
push
lock
add
lods
stc
add
push
mov
push
xchg
lock
add
add
arpl
add
push
mov
xor
push
push
push
lea
push
push
push
lea
push
push
push
push
call
into
pop
add
rolb
pusha
xchg
mov
add
xchg
testl
add
mov
jo
fildl
add
add
add
add
mov
add
lock
add
cmpsl
fisubl
push
popa
push
xchg
add
shr
mov
add
add
add
test
add
add
add
out
push
mov
lea
pop
add
pop
mov
xor
push
push
push
call
pop
rolb
mov
mov
gs
add
add
add
jle
xchg
jnp
push
lods
jmp
roll
fiaddl
pop
les
cli
test
mov
jle
push
js
mov
int3
bound
jbe
jmp
add
add
add
loope
add
cld
lea
pop
push
mov
push
push
push
push
lea
push
push
push
push
push
call
fwait
push
mov
add
shrl
mov
loopne
test
incb
int
mov
movsl
int
out
lods
add
add
add
xchg
in
add
add
add
rorl
faddl
add
pop
add
mov
add
aam
cmc
add
push
jecxz
fistpll
jnp
stos
rorl
xor
push
push
push
lea
push
push
lea
push
push
push
push
push
call
imul
in
mov
xchg
imul
mov
movl
flds
test
add
add
add
stos
fiaddl
add
add
std
mov
xchg
sti
pushf
lcall
add
add
add
mov
add
test
jno
ja
add
arpl
pop
add
push
push
push
call
mov
add
stc
std
popa
stos
mov
add
clc
add
add
ja
shr
add
mov
add
mov
add
add
add
jbe
add
in
add
add
ret
iret
add
add
xchg
mov
jmp
add
jl
add
cwtl
add
insb
add
mov
add
ror
push
int
out
add
lea
pop
sub
pop
rep
push
lea
push
push
lea
push
push
push
call
std
add
movsl
sti
lock
add
les
add
jmp
popf
cwtl
idivb
scas
add
fcoml
rolb
in
jns
lds
roll
loop
lahf
lds
rolb
mov
ret
std
add
addr16
insb
pushf
test
mov
mov
add
popa
xchg
jno
test
add
popa
add
mov
fwait
add
add
out
add
add
sti
int
popf
add
add
mov
add
outsl
jb
mov
lea
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
mov
xchg
int3
addb
add
add
fiadds
fs
add
pop
add
push
lds
add
add
add
add
jbe
in
add
in
mov
icebp
lcall
repnz
mov
add
mov
add
fsubrp
lcall
add
mov
roll
lahf
add
add
lahf
pop
cmpsb
add
jno
ret
add
pusha
mov
lea
pop
mov
add
push
push
call
loopne
rcr
add
add
jae
add
mov
arpl
mov
mov
mov
nop
add
add
add
add
add
jle
popl
add
out
add
aam
icebp
mov
add
mov
pop
jle
fnsave
fdivr
add
add
xchg
add
aad
std
cmpsb
add
add
add
add
sarl
pop
orb
add
add
push
push
push
call
add
nop
add
pop
add
mov
js
stos
cld
add
scas
enter
shll
add
jae
ret
add
fstpl
pop
cmpsl
enter
add
add
xlat
out
les
add
mov
push
add
add
push
pushf
add
lret
xchg
ret
pushf
xchg
add
add
icebp
add
cld
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
fisubrs
imul
out
mov
idiv
in
int
mov
add
pop
mov
pop
addr16
les
pop
push
add
insb
test
mov
pop
add
add
in
jno
int
popa
test
add
mov
popa
stc
popa
push
add
movsl
roll
jle
add
push
add
fimull
add
jmp
add
aam
les
push
cmp
movsb
shll
push
push
push
call
jno
push
test
xchg
xchg
add
add
fbld
lret
loope
mul
out
add
add
pop
pop
add
ret
scas
mov
mov
add
call
mov
lds
mov
push
add
add
mov
mov
add
jo
add
add
xorb
cmpsb
add
xchg
add
mov
sti
outsl
push
out
add
pop
xor
push
push
push
call
jns
add
add
jge
add
mull
out
ljmp
stos
mov
in
push
out
js
in
jns
pop
test
add
lods
in
in
hlt
push
stc
add
pop
hlt
add
fiadds
add
mov
add
cmpsl
jge
test
mov
arpl
mov
aad
add
out
mov
insb
test
lcall
pusha
or
add
push
push
push
push
lea
push
call
jbe
pop
pop
rolb
fldl
mov
rorl
add
mov
stc
fiaddl
loop
add
add
push
add
pop
add
js
add
jmp
shll
fwait
add
mov
into
idivl
fdivr
mov
add
shll
add
add
add
add
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
push
push
push
call
int3
jnp
lods
in
add
popl
out
push
add
pop
add
add
add
cmpsb
add
add
rolb
insb
pushf
mov
stc
addl
popf
jo
negl
add
movsl
push
mov
add
out
push
xchg
lock
fnstenv
lock
mov
add
add
push
pop
mov
jl
mov
mov
add
add
aad
add
mov
lea
pop
add
add
mov
push
push
inc
sub
push
and
add
shl
sub
sub
not
not
pop
shl
pop
push
push
push
push
call
add
add
roll
xchg
shll
add
imul
into
cmc
call
gs
repnz
enter
pop
add
xchg
jle
mov
fs
push
out
add
push
pop
jmp
add
pop
add
mov
add
jp
icebp
lods
add
test
test
int
add
mov
xchg
add
mov
mov
gs
add
mov
test
int3
lea
pop
pushl
call
push
push
push
sub
add
shl
push
and
add
dec
sub
add
rol
not
pop
dec
shl
add
ror
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
xchg
mov
imul
add
roll
xchg
stos
jns
jbe
in
add
lcall
ror
movsl
fdivrp
addr16
ljmp
mov
rolb
fnstsw
add
je
mov
add
add
mov
add
add
int
add
loope
add
add
mov
lea
pop
push
push
call
push
push
push
call
push
mov
add
add
popf
add
add
add
mov
clc
add
insb
loope
add
add
addb
jno
add
mov
add
addb
mov
xchg
xchg
scas
shl
ljmp
jnp
scas
jae
add
add
add
mov
mov
add
jns
mov
add
add
xchg
mov
ret
aam
fisttpl
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
addr16
mov
lret
pop
out
mov
sahf
mov
test
sahf
cld
mov
mov
add
mov
add
jo
mov
int
movsl
fisubl
fists
in
mov
add
add
movsl
pop
add
leave
xchg
test
fs
imul
mov
sti
outsl
mov
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
imul
leave
rcll
add
mov
jnp
pusha
add
add
icebp
add
push
cwtl
add
jmp
jmp
insb
imul
push
in
rcrb
mull
add
mov
movb
add
faddl
add
shrl
jmp
hlt
lea
pop
mov
add
add
push
lea
push
push
lea
push
lea
push
call
push
pop
cmpb
add
jb
shrb
add
jle
fildl
insb
test
add
add
fmul
add
add
lret
mov
fldt
add
les
mov
rolb
jbe
mov
add
add
mov
orl
xchg
jb
popa
shlb
add
add
mov
aad
into
lock
in
lahf
into
add
pop
popf
enter
add
pop
add
mov
push
push
lea
push
call
jl
fiaddl
sahf
movsl
fwait
enter
mov
pop
jp
add
mov
stos
loopne
add
jle
mov
add
iret
add
sahf
mov
add
push
out
add
movsb
add
add
fwait
add
stos
mov
stc
xchg
mov
add
lock
add
xchg
jp
add
add
xorl
les
in
data16
add
add
je
mov
lea
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
mov
jns
loop
in
xchg
add
add
icebp
stos
shl
add
clc
fldl
xlat
out
add
mov
mov
add
add
sar
add
add
mov
outsl
add
arpl
fcoml
mov
icebp
add
add
js
pop
add
add
aam
bound
pop
add
push
push
push
lea
push
push
push
push
call
jo
add
mov
jecxz
xchg
jno
iret
add
xchg
add
fcomip
add
sti
mov
jae
mov
std
bound
cli
add
sahf
in
push
add
jns
add
test
add
mov
pop
in
mov
cli
flds
add
in
add
mov
pop
add
add
add
add
mov
add
loopne
in
mov
lea
pop
add
push
push
lea
push
lea
push
push
push
call
repnz
add
push
jmp
lea
add
jns
js
add
mov
pop
xchg
add
add
hlt
ja
add
clc
add
xchg
shll
les
pop
add
mov
xchg
xchg
lahf
mov
pusha
add
add
data16
add
pop
add
popa
push
add
add
mov
test
xchg
jnp
add
aad
mov
lea
pop
mov
xor
push
push
push
push
push
call
testl
jbe
push
jmp
lods
loopne
add
add
mov
subb
mov
shr
movl
mov
add
in
data16
pop
lods
add
gs
icebp
scas
add
add
fcmovb
iret
fwait
add
add
add
mov
add
jnp
mov
add
add
rclb
arpl
add
push
push
push
push
push
lea
push
push
push
call
idivb
imul
add
add
imul
mov
add
mov
add
add
add
add
clc
add
fsubr
push
sar
add
jmp
add
add
shr
lcall
add
jo
add
lea
jno
add
add
movl
add
cld
lea
pop
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
notl
jne
add
add
imul
add
push
xchg
out
popa
pop
add
mov
xchg
push
test
scas
sarb
jmp
add
xchg
add
cmc
cmpsl
xchg
add
stos
push
jl
test
add
mov
add
mov
xlat
mov
stos
mov
je
mov
lea
pop
xor
push
lea
push
lea
push
push
push
push
lea
push
push
call
enter
add
jo
add
fstpt
jne
shlb
add
mov
add
int
iret
push
add
add
jno
add
add
cltd
xchg
xchg
add
mov
add
out
loop
pop
pop
scas
mov
add
add
pop
mov
xchg
add
add
add
pop
add
leave
lock
mov
in
add
add
and
les
push
lea
push
push
lea
push
push
call
add
jns
mov
jo
stos
sarl
add
in
add
xchg
ror
add
add
add
rolb
add
mov
add
add
mov
leave
add
movb
test
pop
jne
in
out
mov
pop
cld
out
add
add
add
add
jge
out
mov
xchg
outsl
jge
std
add
out
add
add
les
lret
mov
lea
pop
rep
mov
push
push
lea
push
push
call
je
mov
add
roll
add
ljmp
add
add
flds
add
add
shrl
pop
add
lock
add
mov
fisubl
xacquire
xorl
add
add
mov
add
mov
rclb
mov
add
insb
mov
lea
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
jl
jge
add
stos
xchg
add
cltd
xchg
je
xchg
add
aam
mov
fimull
pop
add
add
mov
add
in
add
or
add
add
nop
add
stos
mov
test
scas
pusha
mov
push
out
les
add
enter
js
filds
popl
add
mov
pop
add
push
push
push
push
lea
push
call
mov
add
call
add
roll
lahf
imul
add
jge
mov
push
add
rolb
add
out
add
cmc
add
je
add
add
add
push
add
add
imul
imul
addb
lcall
int
insb
add
in
mov
lea
pop
or
je
mov
push
push
lea
push
push
push
push
push
push
call
push
mov
nop
push
pop
jno
cmpsb
xchg
mov
mov
add
add
pop
pushf
add
xchg
add
add
stos
cmpl
xorb
add
filds
cmpsl
mov
add
add
mov
xchg
outsl
add
mov
add
add
add
imul
and
push
lea
push
lea
push
push
push
call
add
cmpsb
lahf
push
xchg
add
mov
pusha
xlat
cld
add
iret
loopne
add
fiadds
add
into
push
nop
mov
fcmovnu
add
pop
ljmp
push
xchg
scas
add
out
add
add
cmpsl
mov
jns
add
add
mov
xchg
add
cli
lods
add
arpl
mov
andl
sbb
les
add
push
lea
push
push
push
push
lea
push
call
jle
add
add
out
bound
js
shl
add
mov
push
fcomp
add
gs
add
shl
mov
imul
rcl
add
out
mov
add
pop
add
cmpsb
cmpsl
cmc
add
add
add
add
add
mov
test
mov
sbb
push
xor
sti
push
push
push
call
add
jne
add
stc
lock
add
cld
add
imul
jmp
add
mov
jo
test
imul
jmp
test
test
add
leave
add
addl
add
or
add
subb
out
movsl
add
mov
mov
fldl
rolb
out
add
add
add
hlt
push
add
pop
add
push
push
push
push
push
push
push
call
add
cli
add
ja
movsb
add
mov
pop
pop
add
add
xlat
xchg
add
add
iret
jb
les
ljmp
fs
lret
push
roll
lret
cmc
sarl
add
mov
mov
add
out
push
jno
xchg
fwait
add
aam
mov
lea
pop
add
push
push
lea
push
push
push
call
popa
add
rclb
pop
arpl
data16
mov
mov
test
mov
ja
repnz
add
mov
mov
add
int
repnz
add
int3
add
rclb
jne
mov
out
stos
out
int
add
pushf
add
mov
jecxz
mov
xlat
xchg
pop
imul
add
add
push
xchg
mov
add
adc
inc
and
shll
lea
lea
push
push
push
push
call
in
add
add
mov
add
imull
cli
cld
clc
jbe
int
test
cld
out
add
xlat
addb
mov
and
pop
je
addr16
add
test
mov
lds
mov
add
imul
add
add
jne
lock
push
cld
mov
add
pop
into
xlat
mov
mov
scas
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
leave
popa
jge
push
jno
add
mov
jb
add
roll
js
add
jnp
add
ja
lret
jae
mov
push
cltd
movsb
rcr
fiaddl
mov
lock
add
add
sti
pushf
mov
sahf
mov
add
add
test
std
add
add
jp
add
iret
add
add
add
sub
les
push
push
push
lea
push
push
call
mov
les
add
cltd
add
jmp
lods
add
add
insb
add
mov
loopne
add
in
jne
mov
mov
mov
add
add
pop
add
add
mov
add
aam
add
add
jae
test
clc
sarb
add
add
lods
add
mov
sbb
lock
push
lea
push
push
push
push
push
push
lea
push
call
mov
stos
in
pop
jle
add
add
scas
add
sahf
cmpsl
mov
icebp
addb
loop
mov
mov
in
add
push
cli
add
sahf
mov
add
mov
clc
loop
fsubrp
add
in
fsubs
mov
loopne
add
outsl
cwtl
cmc
scas
add
add
js
orl
and
movsb
mov
push
push
push
lea
push
push
push
push
call
fadds
add
add
roll
scas
fldl
add
pusha
mov
mov
add
jo
fiaddl
pop
add
add
scas
add
jbe
fadds
mov
lds
add
add
add
jbe
jbe
add
jp
add
add
mov
add
cwtl
loop
xchg
incb
pop
out
push
add
add
push
add
out
add
shrl
aad
fmull
or
push
push
push
lea
push
push
lea
push
push
push
call
add
leave
pop
loopne
add
movb
push
sar
add
add
add
mov
add
lods
jmp
add
add
add
add
cwtl
add
push
push
push
insb
mov
add
add
mov
add
jp
mov
cld
arpl
add
mov
push
hlt
add
mov
data16
pop
add
push
push
call
test
push
add
mov
jbe
add
repnz
cld
sahf
push
fstps
add
outsl
push
mov
pop
jo
mov
mov
stc
fdivrs
mov
add
add
add
fistpll
add
cld
in
add
mov
test
mov
xchg
sub
pop
cli
gs
ja
add
add
repnz
lea
pop
or
je
push
add
shl
pop
mov
push
add
dec
ror
pop
add
push
ror
shl
lea
shl
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
push
mov
push
bound
int3
ficompl
add
mov
out
jp
cltd
push
mov
xchg
cwtl
add
in
movsl
add
movsb
enter
push
testl
add
rcrl
push
enter
jno
subl
mov
addr16
ja
add
popf
mov
mov
stos
add
mov
lea
pop
rep
pop
push
push
shr
add
shr
push
or
inc
add
xor
sub
rol
pop
shl
pop
push
shl
dec
pop
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
fwait
add
cmpsb
into
cld
xchg
mov
jecxz
nop
add
add
add
fisubs
add
lods
xchg
add
add
jbe
add
add
addr16
mov
xchg
fs
jge
mov
add
js
add
popa
add
jne
pop
iret
add
flds
rolb
lea
mov
mov
add
lea
pop
mov
mov
push
not
pop
jmp
push
push
push
push
lea
push
call
into
add
lret
add
add
addb
aad
xlat
loop
out
add
je
popf
into
mov
mov
out
jns
into
add
out
pop
ret
add
lea
jne
add
testl
add
add
gs
mov
mov
mov
nop
add
push
nop
add
mov
fnclex
movl
add
adc
push
push
xor
add
pop
mov
push
ror
sub
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
call
scas
add
pushf
add
add
add
outsl
js
sarl
into
mov
lods
pusha
add
mov
fadds
test
pop
jnp
push
aad
push
jge
add
shl
add
loopne
add
add
int3
add
xlat
add
adcl
add
clc
cmc
idivl
ret
les
pop
cwtl
add
icebp
add
lds
call
and
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
in
movsb
mov
add
add
arpl
pop
add
add
test
lea
add
add
add
add
xchg
jmp
pop
out
jnp
lcall
pop
add
cli
jno
les
add
movl
jmp
add
add
gs
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
test
pop
push
add
add
jo
jne
call
add
popf
xlat
xchg
push
add
jle
add
jecxz
fs
add
add
into
mov
rolb
pop
add
mov
test
add
mov
add
add
jp
data16
add
int
je
add
add
jnp
add
add
add
nop
mov
lea
pop
push
mov
push
not
pop
pop
pop
pop
push
sub
pop
pop
push
not
pop
leave
push
push
push
push
call
add
mov
add
jnp
mov
cmpsl
mov
add
movsl
pop
negl
add
add
add
add
add
jle
xchg
js
call
push
add
push
in
lock
pusha
add
add
lret
mov
lods
add
add
iret
push
mov
add
cmc
add
add
xchg
add
mov
lea
pop
ret
push
rol
shl
inc
pop
push
push
push
push
push
push
push
call
jecxz
add
addr16
add
in
lods
add
add
mov
shl
shr
add
fistpll
add
push
add
xchg
ret
add
pop
add
adc
add
hlt
mov
jmp
scas
xchg
in
add
mov
addb
add
jecxz
add
test
fidivs
add
imul
push
add
xchg
add
add
mov
add
sbb
in
add
push
push
push
lea
push
call
fs
movl
add
loope
add
lods
mov
add
add
mov
test
add
fdivl
mov
out
add
out
lret
std
mov
scas
add
nop
int
add
pop
add
lcall
add
mov
fildl
loope
jne
add
mull
add
jl
in
add
rolb
les
push
push
push
shr
rol
pop
movl
push
push
push
lea
push
call
add
add
add
cmp
loope
rcrb
push
jno
mov
add
mov
add
enter
pop
add
add
add
fdivrs
xlat
fs
stc
fcoms
add
repnz
fiadds
add
add
add
mov
rolb
add
add
add
add
enter
add
bound
add
lea
pop
addl
push
push
call
movsl
stc
fdivl
push
popa
push
pop
add
fadds
addb
test
filds
add
add
add
push
add
add
add
pop
mov
add
add
add
shll
data16
divb
add
add
xchg
add
add
rcl
mov
les
rorb
add
add
mov
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
flds
jbe
les
jecxz
cli
add
jmp
lds
jno
pop
add
add
add
lcall
lock
jae
push
mov
mov
add
in
add
add
je
stc
pusha
mov
add
scas
aad
stos
jmp
xchg
addl
clc
mov
bound
mov
lea
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
jo
mov
cli
xlat
fwait
outsl
mov
shrl
test
add
fildl
leave
stc
popf
jns
popf
push
in
jae
pushf
add
add
xchg
add
test
lea
add
add
shrl
jnp
push
jno
test
lcall
pop
add
aam
xchg
mov
add
add
add
pop
cltd
add
out
pop
add
les
pop
push
dec
lea
shl
sub
pop
leave
ret
push
push
push
push
call
add
mov
test
add
add
add
add
add
add
push
fwait
les
add
sti
faddl
mov
mov
add
cli
movsb
add
add
cli
add
int3
add
mov
push
cld
nop
out
pop
and
add
icebp
andl
roll
mov
cltd
xchg
mov
mov
lea
pop
mov
push
rol
xor
dec
ror
pop
add
push
push
push
not
pop
push
push
testl
push
rol
sub
pop
addl
push
xor
shr
rol
pop
push
push
shr
sub
pop
call
push
shl
pop
mov
pushl
push
push
push
push
push
push
push
push
push
call
push
add
icebp
xchg
mov
cmpsl
arpl
cwtl
lea
bound
movl
mov
add
out
add
mov
add
lods
hlt
mov
add
lea
call
add
add
cmpsl
add
fadds
les
cli
in
aam
test
pusha
mov
add
push
out
add
fwait
add
add
hlt
lea
pop
push
call
cmpl
jne
push
push
lea
push
push
push
call
jmp
add
add
jo
push
add
add
add
incb
lods
pop
add
frstor
add
cltd
scas
add
leave
movsl
jns
aad
jbe
xchg
add
add
add
lret
add
add
bound
pop
test
add
add
mov
push
add
scas
bound
mov
aam
bound
pop
push
sub
shr
pop
pop
push
push
push
push
push
call
hlt
jo
jmp
pop
add
xchg
lods
add
cmp
into
lock
cmc
jb
add
xchg
arpl
add
add
pop
bound
add
add
test
add
ja
xchg
mov
add
jne
add
add
mov
jl
jmp
mov
add
les
push
push
push
push
push
call
clc
mov
add
push
jnp
out
stos
faddl
add
jp
jmp
add
add
mov
ror
push
xchg
add
pop
je
pop
add
lods
popa
stc
mov
repnz
test
mov
add
mov
add
leave
mov
fstpt
mov
push
xchg
add
shlb
push
pusha
add
add
push
add
xchg
add
add
pop
pop
push
push
lea
push
lea
push
push
call
je
add
add
stc
add
bound
add
popa
rolb
add
xchg
xchg
mov
add
popa
scas
add
mov
mov
add
xchg
add
int3
jl
imul
mov
fcom
add
insb
icebp
xchg
addb
push
loope
mov
add
popa
loop
ficoml
add
mov
test
mov
roll
mov
lea
pop
leave
ret
push
push
lea
push
push
push
lea
push
call
add
add
add
pusha
clc
add
jecxz
lods
add
add
movsb
mov
ja
lea
push
incb
push
jmp
jno
jno
cwtl
pop
pop
add
add
adcl
leave
add
fisubs
add
in
add
ja
movb
arpl
add
mov
add
shll
add
add
add
add
arpl
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
call
xchg
sti
add
mulb
add
push
xchg
add
aad
add
out
add
mov
add
nop
add
mov
stos
insb
mov
pop
add
add
add
add
add
xlat
add
add
add
stc
lods
add
cli
test
add
add
add
icebp
add
les
mov
popa
mov
lea
pop
add
push
push
shl
xor
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
jp
add
add
mov
mov
leave
jbe
add
test
rolb
xchg
add
fmull
add
pusha
xchg
add
add
leave
scas
mov
repnz
aam
ljmp
push
hlt
fildll
mov
add
call
enter
push
lret
add
loope
movsl
int3
add
in
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
loopne
stc
in
repnz
cltd
lahf
add
add
nop
fildl
add
lcall
roll
add
add
fidivl
xchg
add
pop
lret
add
add
jbe
push
mov
add
int
add
cmpsl
add
pushf
add
add
out
add
push
int
add
add
fucom
mov
push
add
add
lods
sbbl
jo
pusha
icebp
add
data16
add
pop
movl
push
call
push
lea
push
call
hlt
lock
xchg
push
xchg
add
add
mov
fst
add
movsb
mov
icebp
add
add
test
add
bound
pop
jl
aad
add
add
add
call
mov
js
add
mov
mov
mov
hlt
add
outsl
add
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
loop
ja
jbe
add
out
add
add
add
loope
div
test
xchg
add
mov
add
add
testb
push
pop
add
add
add
lea
std
xchg
mov
mov
mov
add
jns
popl
add
xchg
mov
mov
add
add
roll
push
mov
lea
pop
call
subl
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
popf
scas
into
mov
jo
pushf
pop
into
lcall
movsb
fldenv
fnsave
push
sti
add
call
out
out
add
add
add
in
xchg
sahf
loope
data16
add
add
loope
push
arpl
pop
fdivs
mov
add
popa
data16
mov
rolb
pop
add
lods
test
sub
jge
add
test
lcall
push
push
push
call
aad
cltd
add
add
add
je
jb
add
cltd
add
scas
add
loop
xchg
jns
push
add
insb
add
fincstp
cltd
neg
mov
enter
movl
add
add
add
jnp
add
aam
loopne
add
popa
add
mov
js
je
cmc
jbe
scas
add
jo
add
jo
leave
xchg
imul
mov
lea
pop
pop
push
ror
lea
xor
pop
pop
push
push
push
push
call
xchg
push
roll
add
imul
std
add
movsl
jmp
add
add
mov
pop
hlt
jnp
mov
mov
test
pop
xchg
hlt
xchg
add
movsb
mov
lret
in
popa
mov
mov
add
ret
not
and
std
scas
fdivl
add
add
jbe
jns
mov
adc
ret
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
push
add
add
add
scas
ret
insb
jb
add
add
xchg
mov
lods
add
add
add
rol
mov
sti
add
add
add
cmc
add
pushf
stos
jecxz
mov
add
mov
add
push
add
xchg
add
enter
les
in
push
rol
add
sub
pop
add
push
push
push
push
push
push
push
push
call
push
ror
add
add
jl
movsb
js
loopne
jae
pop
add
sti
add
movsl
cwtl
add
notb
pop
xchg
push
lahf
add
shr
pop
mov
scas
add
push
pop
repnz
jmp
add
pop
jne
mov
mov
movsl
xchg
mov
scas
add
xchg
pop
add
popa
mov
lea
pop
push
push
push
push
push
call
add
mov
xchg
add
xchg
add
add
mov
add
add
add
add
push
nop
sti
jmp
add
add
iret
mov
add
add
jecxz
add
pop
movsl
add
ja
xchg
pop
add
add
mov
add
add
xchg
imul
add
jae
in
add
mov
lea
pop
mov
lea
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
aam
cmpsb
mov
mov
add
nop
shll
js
pusha
xchg
add
cli
add
fmul
add
mov
xchg
jne
mov
xchg
add
scas
add
rol
cli
jl
add
add
add
call
add
jno
add
mov
out
add
add
push
add
gs
add
cltd
lods
stos
scas
add
int3
lea
pop
sub
push
push
push
lea
push
push
push
push
lea
push
call
pop
mov
jo
lock
repnz
add
add
rcll
flds
ljmp
xchg
int3
add
pop
add
insb
hlt
add
xchg
int
out
je
add
mov
add
xchg
fldl
cmpsl
test
ljmp
add
push
fcmove
mov
repnz
iret
scas
add
add
add
addr16
add
add
lcall
arpl
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
push
call
push
add
add
add
jmp
aad
add
jp
scas
jae
add
add
pop
bound
add
movsl
ljmp
add
add
add
add
ljmp
test
push
mov
call
rorb
add
jle
out
add
add
mov
lea
pop
shr
push
pop
add
push
push
lea
push
push
call
add
push
add
pop
andl
mov
add
mov
add
add
mov
add
mov
add
add
add
call
cli
add
jbe
int3
imul
add
push
mov
cltd
add
stc
lcall
xchg
jns
add
push
testb
mov
mov
add
push
lea
shl
add
inc
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
call
cmpsl
add
faddl
add
std
add
in
add
rcrb
mov
add
mov
mov
lahf
pop
jp
add
loopne
fucomip
pop
in
add
fildl
xchg
lds
add
mov
add
fildl
mov
add
add
add
add
xchg
je
mov
out
xchg
je
fs
add
imul
xchg
pop
mov
mov
cmp
jne
push
sub
dec
pop
cmp
jne
mov
push
push
push
push
call
add
jecxz
mov
add
nop
add
sti
push
lods
add
divl
add
push
add
mov
hlt
xchg
add
mov
add
cmc
push
movsb
mov
add
into
mov
add
arpl
push
roll
add
add
add
jmp
popl
out
add
add
add
add
push
into
imul
pop
mov
add
pop
movl
push
push
lea
push
call
add
lret
mov
jmp
fdivs
add
push
fiadds
lea
add
add
add
lods
add
pop
xchg
arpl
mov
icebp
rcr
jnp
in
add
repnz
faddl
add
shll
rolb
add
stc
stos
pop
roll
add
pop
push
jmp
add
cmpsb
add
add
pop
jmp
mov
mov
push
shr
pop
sub
jne
push
sub
pop
mov
movl
jmp
push
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
fadds
loop
repnz
mov
addr16
imul
mov
cld
add
push
je
lock
loopne
pop
mov
lods
add
add
mov
popl
pop
add
add
xchg
push
roll
in
mul
je
rolb
add
fistpll
addl
mov
add
nop
loope
mov
scas
test
imul
sub
nop
mov
add
push
push
call
xchg
data16
mov
push
add
not
cmpsl
xchg
mov
add
mov
add
add
ror
add
add
add
mov
add
xchg
cld
add
lahf
testb
add
add
add
xchg
lods
negb
mov
cli
mov
add
add
test
add
into
add
mov
bound
pop
cmp
jne
push
not
shr
shr
pop
mov
movl
push
push
push
lea
push
call
data16
arpl
pop
add
push
jle
lods
add
in
add
xlat
imul
add
add
lods
pop
clc
add
add
xchg
fldl
in
mov
addl
add
jne
add
add
fmul
imul
push
mov
frstor
in
hlt
aam
lret
push
outsl
add
addr16
add
adc
aad
add
push
add
inc
xor
pop
mov
push
shl
pop
cmpw
jne
push
lea
push
push
push
push
push
push
lea
push
call
jmp
jne
pusha
int
add
popa
add
pusha
flds
stos
jl
add
data16
jae
xchg
add
xchg
lock
xchg
scas
std
pop
imul
lods
mov
cld
push
mov
add
lea
jmp
hlt
add
popl
jl
mov
add
xchg
pop
add
iret
std
add
add
lret
ja
jecxz
jo
in
stc
add
add
jmp
push
add
out
hlt
lea
pop
mov
push
shl
pop
movl
push
lea
pop
jmp
push
lea
push
push
push
lea
push
lea
push
push
call
add
data16
outsl
jb
add
add
popa
add
rolb
mov
stc
test
add
add
add
cmpl
add
push
cmpb
add
leave
aam
add
add
stos
movsl
add
mov
add
stos
add
rolb
fadds
add
add
jo
fiadds
push
int3
lea
pop
pushl
pop
push
push
lea
push
push
push
call
mov
in
add
rolb
fdivrl
jmp
aad
add
mov
mov
add
add
add
movsb
jne
fbstp
push
roll
xchg
add
fists
jp
add
jp
add
and
push
fistpll
add
ror
add
popf
ljmp
jle
jmp
push
addb
add
fildll
rcrb
add
in
in
out
mov
add
pop
mov
bound
mov
push
sub
sub
pop
mov
push
push
push
push
lea
push
push
push
call
mov
lcall
shl
loope
add
xchg
icebp
add
jp
mov
in
out
xchg
mov
mov
out
add
lods
js
sahf
loop
add
shr
add
jno
mov
add
lock
js
popa
push
repnz
pusha
jge
std
leave
xchg
add
cli
add
popa
mov
add
mov
add
lods
fldl
add
pop
mov
push
push
inc
not
rol
xor
push
or
not
add
dec
add
sub
sub
rol
pop
add
pop
push
lea
pop
push
push
sub
shl
xor
pop
call
push
add
lea
pop
cmpl
je
push
push
add
not
push
and
add
sub
not
inc
shr
sub
shr
pop
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
shrb
xlat
std
add
jmp
test
add
xchg
mov
lcall
add
add
dec
push
pop
add
std
add
jae
in
jnp
ljmp
add
xchg
xchg
shll
pop
add
add
flds
add
out
test
add
add
jmp
add
stc
add
divl
pop
cmc
loopne
add
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
ret
add
mov
add
push
add
mov
lds
push
sti
add
add
add
hlt
add
add
mov
add
add
add
jno
add
mov
jl
lea
add
repnz
out
add
add
add
icebp
loopne
fs
add
fldl
popa
pusha
jecxz
jle
aam
bound
pop
call
push
push
push
lea
push
push
push
push
call
add
ja
int
cltd
add
add
fiaddl
cltd
in
jnp
in
add
jecxz
add
scas
sahf
jae
mov
fiadds
mov
in
add
add
mov
loope
mov
add
add
add
mov
lea
scas
int
add
pop
mov
loopne
sti
repnz
xlat
add
add
add
bound
cmpl
je
push
push
sub
rol
add
lea
push
sub
add
ror
shr
sub
add
shl
pop
add
add
pop
push
inc
pop
push
call
cmpl
je
push
push
shl
shr
inc
push
push
pop
add
not
add
add
sub
shl
pop
dec
inc
sub
pop
push
shl
pop
push
call
cmpl
je
push
push
xor
push
or
inc
add
shr
sub
dec
pop
pop
push
pop
push
push
lea
push
call
lahf
ja
add
call
test
out
add
push
add
add
add
mov
add
add
add
fs
cld
imul
mov
fadds
out
add
js
add
add
jge
out
fisubs
add
test
popa
add
add
add
pusha
xchg
pop
call
cmpl
je
push
push
add
xor
push
or
inc
add
sub
lea
not
add
sub
sub
pop
shl
sub
xor
pop
push
push
lea
push
push
call
push
add
pop
cmpsl
sahf
add
add
push
sahf
add
cld
push
mov
sti
jne
lcall
stos
add
add
shlb
add
pop
push
add
outsl
aad
push
add
add
movsl
add
outsl
aam
add
add
testl
push
lahf
add
fwait
add
mov
add
mov
add
in
mov
cld
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
add
cmpsb
add
mov
mov
lea
add
nop
sbbl
aad
jnp
mov
lcall
flds
add
add
mov
add
jae
ja
add
add
loope
jbe
jle
loop
jns
add
faddl
jno
push
xchg
repnz
xchg
flds
mov
pushf
in
xlat
mov
jne
cwtl
lock
lea
pop
call
push
lea
pop
cmpl
je
push
push
inc
add
lea
push
or
inc
add
not
sub
rol
shl
pop
sub
pop
push
push
pop
call
push
sub
not
lea
shl
pop
cmpl
je
push
push
add
push
or
not
add
inc
shl
sub
sub
xor
rol
add
not
pop
not
pop
push
push
push
push
lea
push
push
push
push
push
push
call
jecxz
add
js
jns
add
jl
fwait
add
push
mov
add
fidivl
add
out
add
sarl
add
add
mov
fdiv
addb
add
in
stos
stc
push
add
add
xchg
mov
pop
les
xchg
xchg
test
add
popf
fsubl
mov
lea
pop
push
push
push
call
mov
pop
add
add
add
add
mov
mov
les
add
lret
repnz
js
in
stos
jno
add
add
add
add
add
ljmp
mov
cli
cltd
pushf
add
out
push
add
add
mov
rcr
jns
add
mov
cmpsb
mov
add
popf
test
shl
jmp
aam
bound
pop
call
push
sub
pop
cmpl
je
push
push
ror
xor
push
xor
add
ror
shl
add
sub
sub
add
not
xor
pop
inc
rol
pop
push
rol
xor
lea
pop
push
call
cmpl
je
push
push
dec
push
or
not
add
shl
sub
inc
xor
ror
ror
pop
lea
inc
pop
push
sub
inc
xor
pop
push
push
lea
push
push
push
call
adcb
pop
add
add
mov
add
add
add
mov
ficompl
cli
add
addl
fists
add
in
int3
add
out
hlt
mov
push
cltd
popa
add
add
js
leave
jp
clc
in
jnp
add
add
add
xchg
insb
movb
fisttpll
pop
call
cmpl
je
push
push
rol
dec
push
or
not
add
ror
ror
shr
sub
ror
sub
lea
pop
ror
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
into
out
add
add
add
jp
add
clc
xchg
add
mov
pop
in
mov
add
add
fiaddl
pop
mov
mov
in
mov
movsl
add
mov
stc
push
fisttpl
mov
add
jo
add
add
add
jl
lds
addb
lods
add
pusha
and
push
push
push
push
push
push
lea
push
call
push
hlt
pop
hlt
in
mov
add
mov
jl
add
xorl
hlt
add
push
dec
mov
sti
pop
add
cld
add
fdivr
push
cwtl
xchg
insb
add
ja
push
add
lds
add
lahf
push
mov
add
jns
sti
push
add
pop
lret
push
add
addb
mov
incb
cmc
loop
jmp
push
add
in
and
movsb
bound
xchg
mov
jnp
push
mov
lea
pop
call
cmpl
je
push
push
rol
push
or
not
add
inc
sub
xor
rol
pop
rol
add
add
pop
push
push
push
call
add
addb
mov
fiaddl
add
add
mov
leave
loopne
pop
flds
add
jle
xchg
add
testl
mov
mov
jb
je
addr16
jb
movsb
add
xlat
loopne
fdiv
in
jnp
cld
add
add
ret
mov
add
ret
int3
add
add
int3
pop
fcomps
aam
bound
push
call
push
pop
cmpl
je
push
push
ror
add
dec
push
or
not
add
sub
not
xor
xor
pop
dec
shl
xor
pop
push
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
movl
add
add
push
mov
jo
rcl
fistpl
xchg
add
add
jecxz
mov
lea
mov
xchg
lods
add
push
popl
js
stos
testl
mov
add
add
add
add
jmp
cmc
lcall
bound
pop
call
cmpl
jne
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
add
out
aad
add
testb
push
add
push
add
xchg
shlb
clc
add
test
add
jbe
add
clc
ret
lods
lahf
jbe
add
add
add
mov
pop
xchg
mov
jbe
add
add
out
add
imul
lea
pop
movl
jmp
xor
push
push
push
call
jno
push
add
ret
add
xchg
in
hlt
mov
in
add
push
push
add
loope
add
add
jne
imul
loopne
imul
mov
add
lods
les
add
add
add
add
add
adcb
add
mul
push
std
pop
push
xchg
popf
push
jmp
hlt
lea
pop
pop
pop
pop
push
push
lea
push
call
mov
add
fwait
pusha
jle
movsl
out
add
mov
fildll
ja
mov
stos
add
add
xchg
xchg
add
in
jo
addl
add
je
push
pop
lcall
jne
push
filds
addb
lret
add
mov
add
lcall
cwtl
pushf
mov
lea
pop
pop
push
push
push
push
push
push
push
call
jp
add
gs
add
movsl
add
cmpb
add
enter
fsubrl
fsubs
arpl
add
mov
add
mov
clc
stos
push
aad
aad
imul
add
add
add
imul
xchg
outsl
add
out
cli
test
mov
add
pop
leave
ret
push
push
call
mov
add
sahf
jne
fsts
loope
enter
scas
add
push
add
stc
sti
xor
rolb
add
test
ret
imul
add
add
add
add
add
insb
lea
add
stc
mov
add
mov
xchg
fstl
mov
pop
hlt
mov
arpl
mov
push
add
rclb
sti
add
pop
jle
mov
mov
lea
pop
push
mov
push
dec
inc
add
pop
add
push
shr
lea
ror
pop
cmpl
jne
push
push
sub
dec
push
or
inc
add
shr
shl
inc
add
sub
shr
add
pop
add
pop
push
push
push
push
push
lea
push
push
call
loopne
lahf
in
stos
add
push
leave
add
cmpsb
imul
add
jne
cld
rcll
xchg
stc
mov
add
xchg
in
aad
mov
movsb
push
jmp
bound
lods
xchg
add
jl
jge
std
xchg
add
add
add
mov
add
imul
add
add
cld
lea
pop
pushl
push
xor
add
pop
call
push
shl
add
not
pop
push
push
shr
pop
call
jmp
push
inc
not
pop
cmpl
je
push
lea
add
shl
pop
cmpl
jne
leave
add
push
sub
ror
pop
pop
pop
push
push
lea
push
push
push
push
call
pusha
add
add
add
testb
cltd
mov
lea
add
add
outsl
add
add
in
js
jnp
sahf
mov
add
add
lret
pop
mov
sbbl
add
mov
mov
jb
mov
mov
mov
jmp
add
rol
add
add
add
lret
add
add
mov
sbb
pop
leave
push
push
lea
push
call
xchg
mov
popf
icebp
not
add
nop
jp
push
mov
cwtl
add
test
loop
add
add
imul
leave
mov
add
scas
add
cmpsb
add
loope
addl
in
add
cmpsl
lcall
enter
jp
jno
add
pop
add
fadds
imul
add
add
add
cmpsb
pop
mov
aad
movsb
add
mov
lea
pop
add
ret
jmp
push
inc
pop
cmpl
jne
push
push
xor
inc
push
push
pop
add
lea
shr
sub
add
lea
inc
pop
sub
pop
push
shl
xor
inc
pop
pushl
call
push
xor
add
add
pop
push
push
lea
sub
add
pop
call
jmp
push
ror
not
pop
cmpl
jne
mov
mov
push
lea
pop
jmp
push
pop
push
dec
pop
dec
jne
push
push
call
mov
lods
add
push
bound
aam
add
add
mov
add
add
jp
add
pusha
add
mov
add
jnp
add
lods
enter
add
cmpsl
add
xchg
nop
xchg
add
pop
rolb
lock
jge
add
mov
xchg
add
mov
addl
push
add
loopne
repnz
add
int3
lea
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
push
call
sti
ljmp
add
pop
add
mov
add
add
push
add
add
add
mov
add
jns
fwait
pushw
test
ret
add
xchg
into
jmp
out
add
add
imull
out
xchg
jbe
add
rolb
lahf
mov
add
add
add
out
pusha
add
add
pop
add
pop
jmp
call
push
push
lea
shl
not
push
or
inc
add
sub
add
inc
pop
dec
pop
push
push
push
push
push
call
add
pop
push
add
add
add
add
add
rolb
subb
imul
add
imul
filds
leave
lahf
xchg
add
add
push
push
mov
pop
add
sti
add
mov
ja
jle
add
xchg
xchg
add
add
fsubrs
mov
mov
pop
outsl
jae
mov
add
adc
pushl
push
rol
sub
shl
dec
pop
call
push
push
push
push
push
lea
push
call
addr16
fildl
add
imul
add
testb
mov
cli
call
lds
ficoms
add
add
add
pop
arpl
add
mov
stos
insb
add
arpl
add
movw
test
fdivr
lret
add
add
jle
imul
repnz
add
mov
lea
pop
call
mov
push
inc
pop
lea
push
push
ror
push
and
add
lea
sub
sub
inc
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
int
add
mov
lret
cwtl
std
lods
mov
push
rolb
int3
icebp
stos
lock
flds
add
mov
add
push
add
add
shrl
add
cld
add
push
out
fld
xchg
jnp
pusha
add
fucomip
add
test
push
pop
pop
inc
add
xlat
add
ja
sahf
fisubrl
ljmp
jl
into
jb
fmull
jne
call
push
sub
not
inc
pop
push
push
push
call
add
push
fnstsw
jns
push
pop
add
add
jge
jmp
test
add
add
cmpsl
loope
add
rcr
push
ljmp
add
add
pop
fwait
add
shlb
imul
out
add
add
cmpsb
loope
add
add
push
orl
lods
in
scas
fiadds
stos
xchg
mov
pop
call
push
push
rol
lea
ror
push
xor
add
ror
shr
lea
xor
sub
add
xor
pop
ror
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
cwtl
aam
add
add
add
push
gs
in
out
movsb
pop
rcrb
fiadds
into
fidivs
les
add
mov
xchg
mov
mov
add
push
add
push
add
mov
mov
add
test
add
add
in
jbe
add
add
data16
pushl
call
push
not
shr
add
pop
call
push
push
push
push
push
push
push
push
push
call
sti
add
add
arpl
mov
mov
push
data16
add
arpl
add
add
cwtl
pusha
frstor
add
pop
jns
push
add
ljmp
scas
jecxz
add
js
add
add
imul
mov
addr16
fwait
in
add
add
xchg
add
jmp
and
mov
push
dec
sub
lea
inc
pop
lea
push
push
add
lea
not
push
sub
add
xor
inc
not
sub
shr
add
pop
lea
xor
sub
inc
pop
pushl
push
shl
ror
pop
call
push
pop
lea
push
push
push
dec
inc
add
pop
push
push
push
push
push
lea
push
push
push
call
xchg
addb
add
push
add
fucomi
add
stos
xchg
add
lahf
jno
pop
addl
clc
add
add
add
shll
add
add
cwtl
roll
mov
pop
add
roll
push
add
add
imul
mov
xchg
jno
fs
add
jne
mov
test
add
push
pop
in
sti
outsl
jne
add
add
int
loopne
loop
add
mov
lea
pop
pushl
push
push
add
rol
not
sub
push
push
pop
add
sub
not
rol
sub
not
pop
dec
rol
dec
pop
push
push
call
out
popf
rcl
popf
push
xchg
add
in
fwait
add
mov
add
sti
add
cli
xchg
add
add
add
pop
mov
rcrb
add
mov
add
add
pop
jae
add
jnp
lea
les
jmp
mov
fiadds
add
addb
add
add
faddl
fcoms
pop
push
push
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
add
jne
testb
add
fdivrs
lods
fs
add
add
jp
add
xchg
cwtl
lcall
mov
add
icebp
xlat
into
loopne
je
add
add
lds
imul
mov
add
add
fists
insb
test
xchg
xchg
aam
add
push
shll
loop
test
xchg
mov
add
pop
call
push
push
dec
shl
xor
push
or
not
add
shr
sub
dec
add
sub
shl
pop
shl
ror
xor
add
pop
push
lea
push
lea
push
call
addb
je
add
popa
mov
mov
pop
data16
hlt
sti
in
imull
cmpsl
cltd
add
add
xchg
js
mov
js
add
mov
lahf
add
icebp
aad
add
push
mov
add
jno
add
add
cwtl
add
add
cmpsl
int
pop
enter
ret
add
movsl
cltd
add
push
mov
ja
add
mov
lea
pop
pushl
call
push
shr
pop
push
call
push
push
dec
sub
push
and
add
sub
xor
add
sub
not
pop
shr
pop
push
push
call
mov
add
je
add
add
add
add
add
gs
jae
add
data16
test
rcll
xchg
add
pusha
out
lods
gs
xorl
icebp
mov
cmpsl
add
movsb
jge
push
add
scas
loop
imul
push
jmp
mov
add
aad
addl
call
call
push
inc
lea
inc
pop
jmp
push
push
push
push
push
call
mov
ret
xchg
add
les
add
add
add
mov
add
add
add
loop
jne
out
add
pusha
pop
push
mov
add
pop
scas
cmpsb
add
xlat
movsb
pop
xchg
jmp
xchg
add
aam
fildl
sahf
ret
jmp
addl
add
xchg
in
mov
lea
pop
pushl
mov
jmp
push
push
shr
not
lea
push
or
not
add
sub
xor
sub
sub
pop
sub
pop
push
push
call
add
xchg
lods
add
sti
arpl
cmpsl
imul
fcmovnbe
jo
data16
add
add
test
imul
outsl
add
cmpb
add
fucom
fiaddl
add
sarb
cmpsl
aam
add
xchg
jne
add
add
hlt
cmc
add
mov
or
jne
push
inc
sub
shl
pop
call
push
push
push
call
add
mov
cmc
mov
xlat
lods
push
add
scas
add
add
xchg
std
addl
add
add
add
add
add
pop
add
scas
add
add
hlt
popa
xchg
jge
lret
push
add
pop
add
mov
add
lea
jp
add
add
add
push
jno
ljmp
mov
lea
pop
call
push
push
ror
sub
push
or
not
add
dec
sub
sub
add
pop
shr
pop
pushl
push
lea
push
push
push
push
call
add
nop
add
scas
out
add
push
add
push
lock
add
add
mov
jnp
add
add
add
add
stos
add
add
out
mov
add
xchg
add
mov
mov
add
add
fimull
add
jo
add
incb
add
clc
mov
add
add
add
add
add
je
std
add
add
cltd
xchg
fs
lea
pop
call
push
inc
rol
lea
pop
push
push
shl
rol
pop
call
leave
add
push
add
not
pop
pop
pop
push
shr
rol
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
gs
add
mov
pusha
add
mov
add
cwtl
lock
add
cld
stos
mov
add
add
jo
add
idiv
add
pushf
iret
roll
mull
sbbl
movsb
lea
add
enter
add
add
add
mov
lea
pop
pop
push
sub
pop
leave
add
ret
push
push
push
call
pushf
movsb
add
movsl
pop
int3
mov
popa
push
mov
lods
add
call
testb
ret
mov
mov
fldl
add
in
jb
add
lret
stos
fbld
push
add
lea
divl
add
imul
std
ret
jno
add
mov
add
mov
lea
pop
leave
ret
push
push
lea
push
push
lea
push
push
call
add
into
mov
add
add
std
data16
push
out
add
scas
add
add
scas
test
jp
cltd
add
jnp
ret
push
mov
add
add
add
fwait
in
add
add
add
add
xchg
cld
mov
addr16
pushf
add
mov
int
lock
xchg
pop
mov
push
shl
shl
dec
pop
cmpl
jne
mov
jmp
push
rol
pop
mov
push
ror
sub
pop
and
push
lea
push
lea
push
call
pop
leave
add
loope
rclb
add
icebp
lahf
mov
jne
jbe
jns
add
stos
insb
add
mov
addl
std
add
js
mov
std
add
add
mov
add
jbe
jnp
mov
idiv
add
in
rclb
xchg
lret
jnp
rolb
add
xlat
icebp
pusha
xchg
add
pop
xor
push
push
push
push
push
push
lea
push
lea
push
call
nop
add
add
jnp
add
add
add
imul
add
add
rolb
add
icebp
mov
cltd
add
add
add
jl
xchg
faddl
ret
movb
add
lds
mov
xchg
mov
add
faddl
popa
mov
add
add
je
mov
lea
pop
xor
add
xor
push
lea
push
push
push
push
push
call
test
cmc
add
add
add
add
add
push
lds
pop
test
lods
ja
sarb
mov
scas
push
push
add
popl
push
add
add
add
add
mov
insb
add
xchg
scas
ljmp
fbld
popa
add
rorb
jmp
add
mov
mov
lea
pop
dec
sub
push
push
lea
push
push
push
lea
push
push
call
add
add
xchg
cmpsl
xchg
add
enter
std
add
jmp
xchg
rcrl
add
xchg
jecxz
mov
add
icebp
add
sti
cltd
lcall
add
test
hlt
jbe
out
add
lods
mov
add
add
push
push
add
add
cmpsl
jge
cmpsb
pop
mov
pusha
sbb
jmp
sub
pushl
push
push
push
push
call
xchg
add
lret
add
add
add
add
jae
add
bound
add
mov
xchg
mov
add
fidivl
pop
nop
jmp
cld
fs
mov
add
ja
add
add
incb
add
add
push
bnd
loop
int3
clc
test
and
lea
add
add
add
xchg
add
bound
mov
mov
lea
pop
pop
push
xor
lea
pop
sub
push
rol
not
pop
cmp
jne
mov
lea
push
push
push
push
lea
push
call
add
cli
add
aad
fiadds
add
add
jbe
stos
add
push
pop
jmp
mov
jo
icebp
mov
add
mov
xchg
mov
fnstcw
add
lock
cmpsb
fmul
add
and
test
lods
pop
cld
add
push
jnp
test
frstor
popa
add
in
add
icebp
add
xchg
add
add
fmull
jmp
cmpsl
aad
xchg
add
add
add
add
ret
add
add
add
les
add
add
mov
add
int
xchg
test
pop
rol
add
cmpsb
xchg
popa
mov
test
insb
scas
mov
rolb
movsl
add
add
jb
roll
xchg
icebp
out
add
fiadds
pop
mov
pop
mov
popf
add
mov
add
lret
xchg
add
pop
mov
push
sub
shr
ror
pop
shr
add
sub
push
lea
push
lea
push
push
push
call
rcl
test
add
add
add
add
xchg
add
int
test
add
shlb
loopne
std
xlat
add
pushf
imul
lret
bound
push
add
pop
ja
add
insb
mov
rolb
xchg
add
clc
jno
add
mov
add
subl
lea
pop
pushl
pop
shr
push
sub
add
xor
pop
and
push
add
rol
pop
sub
cmp
jne
leave
push
push
lea
push
lea
push
call
les
rol
fisubs
mov
mov
fwait
mov
add
add
ja
aam
in
enter
ljmp
add
les
xchg
lcall
add
add
pop
jno
add
std
add
add
aad
add
lahf
cmc
cmpsl
imul
adc
add
push
mov
push
shl
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
push
xchg
testb
add
ret
add
cltd
ljmp
add
test
add
add
in
add
mov
scas
fiaddl
int3
add
mov
ja
xlat
mov
pop
add
nop
fwait
addl
add
add
add
data16
mov
fwait
lahf
add
push
add
add
add
add
repnz
push
add
add
add
popa
and
push
push
push
push
ror
add
pop
push
push
sub
sub
pop
mov
push
xor
inc
pop
lea
sub
push
push
lea
push
push
push
call
in
add
mov
xchg
push
mov
add
add
mov
pop
add
add
rolb
ficoms
add
add
sahf
shl
add
mov
add
add
mov
mov
mov
add
add
js
add
add
mov
xlat
nop
loope
fadds
mov
lea
pop
mov
shr
push
lea
sub
lea
pop
add
mov
add
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
ret
add
ror
push
rcll
add
add
mov
add
sahf
fdivl
pusha
test
lock
add
mov
add
mov
push
leave
mov
add
jmp
loope
add
lcall
mov
add
lods
add
add
push
mov
add
mov
fs
lea
pop
mov
add
push
sub
pop
xor
push
pop
mov
and
call
push
add
xor
pop
add
push
shr
pop
cmp
je
add
push
ror
ror
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
call
pusha
out
mov
pop
pop
mov
std
mov
imul
ja
jno
pop
ja
mov
gs
add
add
add
mov
add
jae
mov
cmc
jae
mov
lret
add
mov
add
jns
mov
add
mov
cmpl
ret
pop
add
pop
xor
pop
pop
push
lea
push
push
call
aad
cmpsl
jmp
in
add
add
pop
add
add
sahf
in
mov
mov
add
incb
mov
add
add
add
popl
pushf
cli
mov
push
add
std
add
mov
test
add
cltd
cmpsb
add
mov
add
add
mov
mov
add
fwait
lea
fucomip
pop
add
bound
pop
pop
pop
push
lea
push
push
push
call
pop
add
jae
add
js
mov
add
in
leave
mov
pop
stos
clc
ja
add
add
add
add
iret
jae
subl
loope
pushf
mov
pushf
push
clc
mov
pop
ljmp
imul
add
add
add
call
mov
add
movsl
lods
loopne
test
shl
lret
add
add
nop
shl
aad
rorb
pop
leave
push
sub
add
pop
ret
push
xor
sub
xor
pop
mov
add
push
push
push
push
call
fstpl
add
jno
fistpll
mov
jge
scas
fdiv
cmpsl
pop
mov
add
mov
movsl
add
ljmp
add
imul
pop
add
fcoml
cwtl
arpl
out
roll
add
add
and
add
fwait
add
lahf
aam
mov
mov
add
push
add
loopne
outsl
add
ljmp
mov
lea
pop
push
push
push
push
push
push
push
call
add
test
mov
rcrb
push
shr
rcrl
add
add
add
scas
jb
in
lods
rcl
jo
add
cwtl
add
lret
jl
addb
cltd
add
scas
ljmp
jl
test
stc
aam
add
pusha
push
int
lret
leave
add
out
add
add
in
add
hlt
lea
pop
pop
pop
push
sub
add
pop
mov
push
add
pop
push
call
push
push
call
lods
addl
mov
aam
add
out
sbbb
incb
mov
jns
add
jno
test
cmpsb
outsl
push
mov
jl
add
jb
add
into
add
mov
add
add
in
pop
jno
add
mov
push
add
pusha
push
rcr
data16
add
add
hlt
jnp
push
add
lods
mov
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
add
lds
lods
add
add
jp
push
mov
pop
add
jle
jno
mov
add
int3
mov
aad
mov
pop
add
mov
add
mov
hlt
add
jne
add
sahf
add
push
add
push
enter
testl
iret
mov
lea
pop
pop
pop
push
push
call
add
add
push
add
movl
in
xchg
add
add
lret
add
add
add
lds
cld
add
add
arpl
jbe
add
add
les
js
hlt
idivb
add
jle
cmc
jo
mov
loop
mov
lea
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
call
add
add
add
jmp
testb
add
add
add
mov
jae
push
add
add
push
rolb
lcall
bound
push
pushf
add
scas
pop
fs
add
jle
lock
pop
mov
add
add
add
add
add
lret
add
lret
mov
add
add
mov
lea
pop
pop
leave
push
inc
pop
ret
push
inc
pop
push
push
rol
pop
mov
add
push
lea
lea
add
pop
push
push
push
lea
push
push
lea
push
push
call
mov
mov
add
jecxz
mov
jl
add
xchg
mov
popa
add
mov
fstps
add
ror
mov
add
in
add
push
popl
incb
add
lods
pop
add
add
into
cltd
jb
pop
aam
mov
aad
xlat
js
test
add
mov
lea
pop
push
push
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
mov
add
mov
loopne
test
in
add
pop
add
add
add
jmp
add
jne
add
add
mov
add
add
add
add
add
mov
xchg
std
add
gs
xchg
add
lods
add
arpl
pop
push
pop
push
rol
lea
not
lea
pop
lea
push
push
push
lea
push
push
push
push
push
call
jne
mov
sahf
in
xchg
clc
rorb
ret
leave
idivb
add
shl
scas
add
add
add
jne
add
frstor
std
les
add
add
lods
add
push
js
popa
fildl
mov
xchg
mov
in
push
add
add
mov
mov
jo
add
lods
insb
push
add
add
iret
imul
int3
lea
pop
sub
mov
shr
push
lea
pop
add
mov
add
push
shl
shr
sub
pop
pushl
popl
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jno
xchg
pushf
mov
mov
add
push
in
outsl
xchg
test
lea
add
push
pop
mov
lea
add
add
popa
push
add
lret
cltd
lods
add
add
imul
pop
add
add
add
pushf
mov
sti
fistpl
jmp
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
add
scas
mov
scas
fildl
pop
mov
mov
add
lahf
add
cmpsb
rcll
add
mov
outsl
add
lods
repnz
lret
in
data16
outsl
stos
rorb
add
push
cld
add
push
test
mov
add
pop
mov
mov
pop
bound
xchg
scas
jb
add
pop
add
xor
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
push
std
xchg
mov
nop
push
add
add
add
xchg
bound
add
jnp
movsl
add
mov
mov
stc
add
aad
les
mov
addr16
xchg
add
add
mov
mov
jo
add
mov
divl
out
pop
add
add
iret
lods
add
fcomps
push
jle
fisttps
add
mov
lea
pop
lea
push
ror
not
pop
mov
add
xor
push
sub
pop
call
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
clc
je
movsl
xchg
lret
mov
add
fisttpl
add
add
pop
data16
xchg
fxch
add
mov
add
pop
pop
in
test
add
shl
mov
mov
add
mov
add
mov
lea
pop
nop
push
dec
inc
add
pop
nop
cmp
je
nop
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
nop
add
jne
lahf
xchg
add
mov
add
add
sahf
lods
data16
mov
call
mov
jecxz
jl
cli
add
imul
cwtl
shlb
cmc
push
js
fildll
add
cltd
add
jmp
add
lret
pop
add
lret
rolb
divl
mov
add
add
add
enter
hlt
lea
pop
nop
inc
push
inc
pop
nop
nop
cmp
jb
push
add
pop
xor
jmp
mov
push
rol
sub
rol
pop
add
movzwl
mov
push
add
ror
pop
add
mov
xor
push
lea
push
push
push
lea
push
push
call
add
add
add
add
je
pop
add
stos
xchg
add
int3
scas
add
add
shrl
movb
add
jne
pushf
lods
add
add
add
add
mov
mov
repnz
jo
add
pop
rcrl
add
outsl
sti
mov
jb
mov
fwait
xchg
add
fs
mov
add
lea
popa
xchg
add
call
mov
lea
pop
xor
shl
xor
push
push
push
push
call
add
add
fsubl
fwait
add
lret
jno
add
add
xchg
ja
cli
addl
sarl
int
mul
xchg
add
jp
add
mov
mov
mov
add
add
mov
add
lods
ret
pop
stc
enter
add
xchg
add
les
add
add
stos
out
jmp
ficomps
push
mov
pop
push
mov
lea
pop
shl
xor
shl
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
leave
add
cmpsl
mov
xchg
xchg
add
roll
add
push
fldl
mov
mov
mov
add
mov
mov
rcl
out
sahf
add
fsub
add
add
pop
add
add
mov
nop
mov
popf
mov
mov
add
icebp
out
add
mov
and
xor
mov
push
rol
pop
add
push
rol
dec
pop
pop
push
push
call
add
add
lcall
clc
jns
add
lds
add
jle
enter
add
stos
into
not
add
pop
bound
add
add
add
int3
mov
add
jae
call
mov
add
fst
mov
cmpsl
lods
mul
add
arpl
pop
pop
pop
pop
push
shl
lea
shr
pop
leave
ret
push
push
add
pop
mov
push
push
push
push
push
call
add
icebp
mov
jae
mov
add
cmc
add
iret
add
subb
pop
ret
cwtl
call
add
add
jbe
arpl
add
data16
pop
pop
jge
add
loop
fwait
stc
movsl
xchg
add
add
add
jo
jae
fnstsw
pop
ret
jo
mov
add
jecxz
add
leave
mov
add
stc
add
mov
jae
mov
lea
pop
push
push
push
rol
shl
pop
push
mov
mov
push
shl
pop
mov
test
je
push
dec
add
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
push
fs
add
pop
add
ret
lahf
pushf
add
jecxz
addl
lahf
rcll
test
xchg
add
add
xchg
jno
add
int
jbe
add
outsl
add
jmp
add
fadds
push
mov
rcl
add
mov
add
add
add
add
add
mov
lea
pop
test
je
push
inc
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
cltd
mov
add
fucomi
aam
add
push
icebp
add
push
add
outsl
loopne
add
push
xorb
add
addb
je
std
pusha
add
icebp
hlt
pop
loopne
add
roll
add
int
cmc
add
hlt
rolb
mov
jmp
add
push
add
add
mov
imul
add
mov
and
dec
or
push
push
push
call
mov
imul
cld
add
push
jge
cmpsl
push
call
fs
pusha
mov
add
cmpsb
pop
enter
icebp
add
mov
xlat
pusha
xchg
add
add
icebp
mull
arpl
add
scas
mov
test
add
add
add
addl
into
hlt
movsl
jl
fadds
add
test
add
hlt
lea
pop
mov
push
rol
pop
inc
cmp
je
test
je
push
add
sub
dec
shl
pop
mov
inc
push
push
call
add
addl
mov
loop
add
clc
add
pushf
add
cmpsb
sti
pop
scas
jae
ljmp
ror
int
in
lods
fidivrl
xchg
aad
add
je
mov
add
les
add
add
add
add
sti
push
fiaddl
add
mov
loop
lock
add
mov
pop
cmp
je
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
lahf
rclb
add
into
add
add
loope
add
add
shrb
add
jo
mov
arpl
mov
cld
mov
fiaddl
cld
add
fldt
int3
aam
test
iret
dec
faddl
int3
mov
sbbl
add
add
stos
mov
add
add
pop
add
xchg
pop
add
int3
add
add
clc
in
hlt
mov
call
sub
rorb
aam
call
out
and
icebp
sub
shr
pop
xor
pop
pop
push
not
inc
lea
sub
pop
pop
push
push
lea
push
push
push
call
pop
movsb
lret
xchg
add
testl
pop
arpl
scas
rolb
add
add
test
mov
cld
insb
add
subl
mov
add
mov
add
rcrl
test
iret
add
imul
xchg
insb
xchg
xchg
add
cli
add
xlat
stos
test
mov
in
rolb
xchg
add
mov
lea
pop
pop
push
dec
pop
leave
ret
push
dec
dec
sub
pop
mov
push
sub
pop
inc
push
push
push
push
push
call
add
mov
add
lods
mov
add
bound
lock
lret
cmpsb
add
jns
jecxz
pop
add
fildl
jns
add
ljmp
lock
stc
hlt
repnz
add
mov
add
push
cmpsb
add
jb
jae
add
stos
add
loopne
iret
add
jl
mov
into
movsl
add
outsl
add
movsl
add
int
scas
incb
mov
aam
bound
cmp
jne
lea
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
add
icebp
add
filds
pop
push
pop
add
jnp
mov
xlat
xchg
add
pop
add
mov
in
rolb
add
mov
add
push
jge
add
add
shll
add
scas
add
fnsave
repnz
mov
loopne
mov
add
add
pop
test
je
mov
add
push
push
push
push
push
push
push
push
push
push
call
push
jl
jl
add
jb
mov
mov
and
add
add
lahf
subl
enter
roll
add
push
testb
mov
bound
fistpll
cmc
add
pop
add
stos
cltd
add
add
pop
cmp
jne
push
shl
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
lcall
mov
sti
pusha
add
xchg
addb
add
lret
add
mov
add
add
mov
cltd
shlb
jbe
add
mov
add
add
add
out
add
mov
push
movsl
add
add
add
xchg
iret
mov
push
add
pop
test
je
mov
push
lea
push
push
call
push
add
iret
add
in
popf
xchg
fisttps
add
jl
push
add
add
movsb
add
mov
addb
xorl
mov
cwtl
xchg
cmc
stos
ja
pop
js
mov
add
addr16
add
jns
mov
add
jge
sar
add
lcall
or
add
push
add
sub
pop
cmp
je
jmp
push
rol
pop
xor
pop
push
lea
push
push
push
push
push
push
call
add
mov
pop
loop
jmp
nop
pop
pop
add
xchg
or
pop
push
add
add
lea
pushf
fdivrl
add
mov
ljmp
je
outsl
call
pop
ja
add
imul
add
mov
vpshaq
pop
lahf
std
fsubr
jp
mov
add
add
xchg
add
add
mov
add
out
lods
pusha
mov
lea
pop
pop
push
add
add
dec
pop
pop
push
dec
add
dec
pop
pop
leave
push
push
push
push
lea
push
push
call
pop
mov
jge
mov
add
add
add
add
add
push
rclb
leave
lret
add
int
cmc
xlat
add
add
push
pusha
fsubl
movsl
insb
add
add
out
pop
add
testl
add
push
out
rolb
jge
mov
lea
pop
ret
push
sub
pop
lea
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
in
add
loop
movsl
add
cwtl
mov
add
in
add
add
arpl
hlt
stos
mov
addr16
shll
pop
je
push
add
clc
repnz
add
pop
add
scas
jl
rolb
sahf
add
rcll
enter
scas
add
stos
lea
add
add
pop
add
push
add
add
fiaddl
add
cmc
mov
lea
pop
pop
pop
push
push
push
push
push
push
push
call
push
add
out
ljmp
fidivs
add
scas
add
mov
shl
sbb
add
lds
mov
add
add
aad
add
add
add
lock
pop
fisttps
jmp
jl
xlat
out
leave
jbe
or
add
pop
leave
push
rol
pop
ret
push
ror
ror
pop
mov
push
shl
sub
shr
lea
pop
pop
pop
push
shr
lea
pop
pop
push
shr
pop
pop
leave
push
push
push
lea
push
lea
push
call
jmp
in
push
mov
push
movsl
add
popa
add
add
int3
add
mov
lret
fs
stc
jae
fildl
scas
hlt
add
negb
mov
aad
add
add
add
fldl
scas
add
add
andb
xchg
add
add
xchg
test
add
mov
add
int3
lea
pop
ret
push
push
push
lea
push
push
call
lock
push
addb
mov
fs
add
add
add
pushf
add
cli
aad
mov
add
jno
mov
fldenv
add
jmp
ja
imul
add
mov
lods
cmpsl
out
add
jle
add
add
fadds
fdivrl
imul
shl
add
movsl
xlat
push
jnp
nop
add
add
out
add
pop
pushf
mov
mov
lea
pop
rol
rol
xor
push
not
rol
shr
pop
inc
push
lea
push
lea
push
lea
push
push
push
call
out
add
pop
add
testl
aad
xorl
add
into
add
push
jp
add
mov
add
jecxz
xchg
add
popf
les
outsl
push
les
scas
mov
popf
xlat
lahf
faddl
add
popa
mov
add
fsts
add
mov
jne
adcb
add
outsl
test
mov
lea
pop
cmpb
jne
push
shr
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
push
mov
sti
pop
jmp
sti
movsb
xchg
mov
sti
pop
loope
sti
movsl
scas
mov
sti
movsb
sub
sti
sub
mov
add
sub
inc
cs
out
ficomps
jns
or
cltd
xorl
cmc
jle
aas
mov
decl
or
or
popa
jo
jns
jae
sbbb
xchg
xchg
aam
adc
in
je
cmc
aaa
push
push
dec
outsb
int3
sbb
pop
out
dec
pop
push
cmc
jb
mov
test
mov
adc
push
or
lods
cwtl
fdivs
sbb
inc
loopne
mov
scas
xchg
test
jno
mov
sub
xchg
fbstp
mov
xlat
pop
push
out
mov
inc
jmp
mov
ja
mov
add
dec
cmp
les
sbb
pop
xor
adcb
xor
sbb
in
movsb
pop
mov
xchg
popf
inc
jb
dec
jmp
push
fisubs
jb
or
sti
loopne
inc
ljmp
push
push
stos
mov
and
cmp
push
stos
sbb
insb
addl
mov
pxor
mov
cmpsb
mov
outsl
pop
dec
iret
sbb
mov
in
jnp
mov
jmp
clc
jge
loop
mov
loope
push
add
xchg
push
inc
push
dec
test
lods
jne
rorl
lds
cmp
xchg
bound
cs
mov
fisubrs
mov
pop
jo
in
rolb
adc
adc
add
fildll
addr16
sbb
mov
fwait
shlb
sub
sbb
push
dec
xchg
jae
pop
jb
mov
insb
fnstsw
jg
inc
cmp
test
xor
sahf
sub
rorb
out
jl
outsb
das
arpl
inc
dec
dec
negl
and
cwtl
dec
inc
adc
fbld
mov
iret
fcmovnbe
dec
pop
insb
or
or
xchg
das
lods
jb
xor
mov
push
xchg
rorb
test
jne
adc
daa
ja
sub
adc
das
jg
mov
ret
sahf
xchg
roll
insb
lea
pop
cmp
add
test
aad
add
mov
adc
sub
lret
imul
into
hlt
lret
pushf
ljmp
xchg
adc
xlat
inc
inc
cmp
sub
sub
add
int
xchg
xorb
sub
sub
out
dec
mov
push
push
in
enter
aad
mov
loop
inc
cmpl
sub
repnz
in
mov
aad
mov
cmp
decl
hlt
pop
xor
add
add
push
jmp
xchg
sub
cmpsb
sub
push
movsl
jne
adc
jbe
orl
test
fimuls
xor
jno
or
xchg
loop
mov
lret
mov
rclb
fisttps
and
jb
pop
cmp
stc
push
add
insl
int
inc
cli
popa
push
out
adc
pushf
mov
sub
stc
cmp
pop
xchg
ret
std
pop
sub
add
sub
mov
mov
push
xchg
lods
je
pop
movsb
adc
mov
sub
out
test
inc
mov
lcall
sub
shll
rclb
jmp
fistps
add
inc
sbb
pop
aam
dec
add
cld
in
ss
in
jecxz
mov
mov
xchg
push
daa
xchg
fsubrs
ds
jns
mov
push
lahf
pop
mov
mov
mov
data16
jb
js
xor
insb
data16
pop
xchg
nop
fsubrs
ljmp
lds
or
lahf
push
aad
fldenv
mov
push
sahf
out
cld
mov
arpl
icebp
test
jmp
jg,pn
jb
sbb
lock
mov
lods
stos
call
lock
xor
dec
lds
test
test
xorl
jecxz
xor
pushf
ss
adc
andl
inc
jg
or
pop
stos
and
lods
pop
sub
adc
adc
xchg
jo
lea
out
dec
sti
sub
gs
movsl
pushf
pop
clc
push
pop
jmp
dec
jge
pop
leave
sub
xor
mov
das
jnp
dec
add
jnp
dec
leave
icebp
mov
cmpsl
ljmp
inc
mov
jnp
in
push
xor
loope
xor
sahf
sbb
sbb
dec
xorb
rcr
xchg
dec
stos
cmp
xchg
xchg
movsl
bnd
jle
pushf
cmp
sbb
sub
push
lret
incl
jbe
rcrl
xor
sbb
aad
dec
aaa
in
push
pop
ss
push
push
jb
xlat
mov
jnp
push
loope
test
lret
mov
lret
outsl
jae
out
rclb
ret
or
stos
stc
sti
lock
int3
repz
add
es
ljmp
sub
pmullw
or
add
sub
dec
push
and
mov
in
jnp
and
xor
ret
int3
rcll
ss
push
or
inc
inc
pop
xchg
loope
ljmp
sti
mov
lock
into
aad
inc
lea
mov
xchg
xchg
enter
test
lahf
lods
pop
push
addb
sub
xlat
pop
mov
pop
fistpll
xlat
in
stos
outsl
mov
jb
das
cmp
mov
cmc
xor
jg
fisttpl
lds
xor
lret
negl
cltd
inc
jg
cmp
add
push
sbb
dec
sbb
fidivs
idivl
ljmp
mov
cs
push
push
sbb
inc
xlat
sbb
add
in
xchg
jns
imulb
jae
int3
pop
cltd
loopne
nop
jle
ss
stos
ljmp
lea
gs
sbb
mov
loopne
adc
aaa
sub
inc
popf
sbb
dec
mov
pop
cltd
or
mov
ret
inc
lret
dec
mov
inc
les
mov
mov
xchg
sub
push
mov
adc
es
rorb
push
mov
cwtl
aad
arpl
and
push
dec
mov
adc
push
inc
mov
push
push
cmp
imul
adc
jg
jmp
lods
test
std
mov
pop
rclb
movsl
lds
jo
and
and
xchg
insl
insb
js
cmc
and
sahf
das
loop
adc
stos
adc
pop
fbstp
cwtl
idivl
mov
dec
fbstp
push
mov
add
out
jb
sbb
in
aas
sti
js
cmp
rol
cmp
pop
call
jmp
xchg
push
adc
aad
push
movsb
fldl
inc
aam
popf
add
nop
ds
or
cs
adc
xchg
or
add
insb
ja
sbb
add
les
insb
mov
cmp
mov
lods
cld
cli
mov
add
xor
and
insl
push
pushf
std
sub
popa
nop
jecxz
xor
mov
sub
lcall
jge
add
and
je
push
mov
jnp
sbb
adc
loopne
lock
xor
add
mov
loopne
dec
xlat
push
cmp
inc
xchg
fsubs
imul
xchg
xor
mov
mov
cld
cmp
push
std
imul
loop
inc
int
lretw
adc
mov
js
mov
or
les
or
pop
lcall
mov
xchg
popa
xor
xor
jb
push
and
imul
repz
jg
iret
push
or
pop
cs
subb
aas
test
stc
loopne
cmp
xor
mov
ja
ja
xchg
inc
adc
push
push
xchg
ljmp
mov
mov
push
test
outsl
pop
addr16
fcomp
add
inc
out
stos
in
arpl
mov
pop
jo
cmp
jl
mov
pop
cmp
test
mov
sbb
jg
push
mov
mov
jecxz
popa
push
in
std
testb
jno
jmp
repz
mov
jae
lds
adc
mov
in
out
dec
inc
xchg
add
in
pop
adc
rol
xlat
jle
xchg
xor
adc
loope
mov
sbb
add
mov
stc
sub
cli
cwtl
sahf
pop
sbb
adc
jg
jmp
pop
ljmp
call
mov
cmp
fwait
je
jae
cmp
dec
xchg
mov
imul
divl
jae
andl
orb
test
ret
bound
aaa
adc
call
jae
jns
dec
pop
dec
icebp
mov
out
add
pop
push
stos
mov
sub
xchg
mov
movb
push
cmpsb
mov
pop
repz
mov
ret
jb
mov
cwtl
sbbb
loop
test
xor
or
in
jne
cmp
pop
mov
out
jecxz
xor
or
jnp
xor
push
adc
rcr
es
popf
imul
movsl
pusha
or
cmp
outsl
insb
or
cli
ljmp
es
jl
ds
dec
fdivrs
sub
inc
lret
cmp
je
or
mov
push
mov
repz
xorb
stos
sub
sbb
arpl
xchg
mov
or
mov
mov
sbb
sub
stc
jb
xchg
repnz
adcb
ficoms
sbb
xchg
mov
sahf
cmp
sub
das
leave
lods
dec
icebp
test
movsl
sbb
push
push
mov
jg
dec
adc
pop
xor
cmp
cmc
call
push
dec
xchg
fidivl
mov
or
out
imul
push
push
sbb
add
cmp
and
notb
nop
std
or
mov
ss
push
cmp
xchg
cmc
in
cwtl
cmp
inc
mov
test
loop
test
sub
popf
scas
mov
push
out
push
mov
sete
popa
adcl
arpl
outsb
mov
iret
mov
xor
cld
and
xlat
adc
dec
push
stc
cmp
aam
dec
pop
mov
pop
mulb
scas
mulb
test
push
jge
scas
pop
cli
add
cmpsb
mov
inc
adc
cmp
jnp
or
cmp
call
int
inc
dec
xchg
shrl
pop
imul
mov
test
add
sub
and
loop
cmp
addr16
outsl
sahf
jmp
out
das
imul
in
fidivrl
out
mov
cmp
push
repz
pop
jmp
push
jns
or
mov
sub
pop
lret
sbb
cwtl
fxam
cmp
nop
lea
add
push
jp
mov
jg
int
out
adc
push
adc
mov
adc
push
idiv
mov
dec
int
stos
test
filds
inc
fld
mov
jnp
outsl
in
cwtl
mov
push
xchg
jbe
outsl
sub
mov
jge
arpl
mov
cld
jecxz
lods
xlat
in
popa
mov
lods
mov
cli
cli
loope
enter
stos
dec
cli
push
adc
pop
pop
pop
out
xor
stos
out
and
pop
insb
cmc
sub
fdivrs
mov
jle
fnstenv
xor
dec
iret
xor
sub
pushf
inc
push
xor
neg
in
jg
sbb
imul
sbb
out
sub
jp
dec
repz
imul
mov
dec
lcall
fidivrl
push
or
jl
js
adc
xorl
imul
mov
xchg
xor
imul
shl
mov
aam
cmp
or
cmp
stos
imul
xchg
jge
pop
mov
sahf
fildll
sti
aad
push
imul
cltd
push
in
cmp
inc
xchg
pop
clc
into
std
mov
dec
or
add
arpl
cli
ja
or
pop
clc
pop
pop
adc
int
push
cmp
pop
sub
mov
fsubrl
insb
out
and
dec
xchg
fwait
xchg
jp
or
dec
xchg
sub
aas
sub
inc
ret
gs
mov
pusha
int3
xlat
lret
arpl
jecxz
and
dec
push
inc
in
mov
jnp
cmpsb
cld
loope
xlat
pushf
js
enter
pop
cs
aaa
or
shlb
cmc
lea
dec
jl
push
les
push
xlat
shll
popa
mov
xchg
stos
sti
push
push
add
jo
sbb
inc
cmp
xor
push
repz
clc
loopne
das
inc
dec
sti
push
loopne
adc
lret
mov
scas
les
sbb
mov
pop
sbb
inc
jbe
push
loop
adc
clc
or
push
adcl
push
xor
and
stos
xchg
in
popa
add
mov
inc
and
push
lahf
add
cmp
das
hlt
push
imul
cld
pop
lcall
adc
fs
mov
mov
pusha
fstp
push
pop
shll
pop
xor
nop
stos
out
sub
or
mov
popf
mov
mov
pushf
mov
leave
test
cmp
dec
call
and
cmp
jmp
leave
and
inc
dec
and
test
scas
add
push
mov
push
cld
mov
and
fwait
adc
movsb
popa
mov
pop
adc
repz
mov
mov
pushf
xor
mov
addr16
fsubs
jae
andl
jge
ljmp
shr
mov
inc
std
fldl
pusha
mov
shll
lds
xchg
pop
inc
push
adc
mov
lcall
ret
js
icebp
out
jo
mov
cmp
lret
adc
loopne
lods
je
adc
mov
jge
ret
add
jb
adc
pop
push
mov
cmpsb
inc
xor
mov
int
mov
sbb
std
jge
adc
mov
add
popa
mov
xor
xchg
xorb
dec
sbb
das
fsubrl
stos
roll
adc
adc
into
cmp
add
mov
stos
mov
aas
jl
lahf
mov
fsub
lods
push
std
mov
push
das
mov
stos
jp
aad
mull
fs
xchg
fs
sbb
int3
js
push
mov
scas
mov
hlt
test
cmp
fwait
push
fmuls
dec
daa
mov
pop
arpl
popf
rcl
ret
adc
inc
stos
mov
ret
xchg
sbb
popf
dec
add
or
fwait
or
inc
mov
jns
push
fmull
ja
cli
dec
add
ret
and
mov
leave
cmp
pop
pop
add
enter
out
or
cs
adc
sub
mov
fistps
pop
cmpsl
sti
loopne
dec
xchg
add
mov
xchg
fisubrl
jbe
subl
outsl
pop
outsl
dec
je
insb
rorl
add
and
shrl
fcomip
flds
sar
inc
push
repz
int3
push
inc
je
and
out
mov
mov
mov
cmpsb
cmc
jbe
cmovl
pop
fcoms
scas
pop
ret
mov
imull
jl
inc
mov
mov
adc
jecxz
mov
dec
daa
sbb
jmp
nop
add
fisttps
insb
dec
dec
mov
dec
loope
imul
sbb
adc
xor
fdivrs
clc
and
sub
push
add
pop
xchg
or
push
mov
adc
xor
movsb
imul
repz
xchg
test
imul
xor
push
cmp
cmpl
sar
test
sub
mov
jg
lret
dec
bound
mov
add
or
jecxz
insl
cmp
sahf
mov
stos
push
dec
ret
push
xchg
dec
idivb
std
dec
or
push
insb
fmul
fs
push
lcall
inc
jnp
js
inc
lods
jo
sbb
jnp
jns
je
cmp
add
fmul
ficompl
inc
sub
push
insb
lret
andl
outsl
push
dec
jb
shr
popa
lgs
adcb
mov
test
in
mov
xchg
nop
rorb
mov
lret
imul
dec
sub
data16
lretw
or
stos
xchg
cs
std
es
sub
jb
and
mov
inc
mov
sub
in
and
popf
lcall
cwtl
mov
push
dec
lret
gs
dec
loop
push
out
shr
mov
xchg
mov
les
sub
pop
jl
push
pop
rorb
pop
jne
out
iret
and
pop
fsubl
out
dec
adc
pmuludq
dec
xchg
inc
mov
or
mov
cmp
ljmp
jle
in
mov
bnd
xchg
daa
repnz
mov
jno
push
sar
sahf
inc
jne
inc
cmp
nop
sbb
push
jno
outsb
fistpl
jp
add
xor
adc
xchg
jo
push
sub
aaa
adc
aaa
mov
test
std
inc
mov
nop
push
cmp
cmp
cmp
or
dec
movsl
sub
xchg
push
add
sub
xchg
arpl
cmc
xor
xchg
xchg
add
adc
lods
jns
ror
rorl
outsb
cmpsb
dec
push
das
mov
sub
lods
idiv
xchg
in
cld
add
fsubr
xchg
push
aad
dec
mov
mov
fld
xchg
in
movsb
mov
jge
iret
jne
lds
fsubrs
and
xor
cld
stos
dec
mov
dec
fimuls
sbb
cltd
cltd
incl
adc
cmp
into
hlt
and
cltd
or
inc
cmp
shll
int3
or
es
inc
pop
push
xchg
sbb
pop
mov
push
loope
fnstenv
in
pusha
push
xor
pop
push
scas
rep
repnz
cmc
fcoml
inc
test
mov
fldcw
inc
push
pop
add
pusha
adc
pop
jo
mov
pop
dec
inc
rcrb
pop
sahf
shl
dec
nop
leave
and
bound
dec
rcr
aad
insb
xchg
imul
lret
xchg
sbb
mov
ljmp
add
lahf
jecxz
push
mov
sub
sub
sub
lea
mov
jbe
out
cli
pusha
xchg
inc
and
aam
rolb
lcall
ljmp
popf
repz
aam
adc
jb
or
mov
sub
or
dec
sbb
xor
cmp
add
or
in
scas
test
std
or
hlt
xchg
ljmp
mov
stos
mov
pop
gs
fcoml
cmp
loop
push
inc
and
adc
ja
sti
ror
daa
scas
push
dec
enter
xchg
add
or
inc
sar
out
xor
xchg
enter
inc
xor
movsb
pop
in
mov
cmpsl
jmp
lcall
adc
imul
test
push
adc
fcmove
mov
sub
stc
xor
pop
jecxz
or
inc
sbb
sub
pusha
mov
xchg
jno
cmp
ret
lret
es
add
scas
in
mov
cmp
xchg
shll
pop
call
inc
in
jmp
or
ret
insb
dec
leave
lcall
sbb
stos
xor
out
inc
mov
add
jp
fistps
clc
loope
je
mov
cld
decb
cmp
aas
insl
sub
sarb
repnz
push
iret
push
mov
inc
addr16
faddl
pop
adc
fs
inc
rcll
icebp
stos
fdivl
ret
insb
inc
mov
mov
cmp
pusha
insb
pop
sub
pop
mov
ja
data16
nop
sbb
mov
dec
clc
dec
mov
inc
xor
xor
popf
inc
mov
jae
adcb
fwait
or
pop
adcl
scas
lods
dec
mov
aas
and
cmc
mov
xchg
push
das
adc
and
iret
xor
push
jne
fsubs
aad
lods
inc
rcrb
adc
int3
aad
mov
imul
add
mov
movl
mov
insl
icebp
lods
scas
push
mov
test
lcall
stos
add
pop
xor
std
lds
out
movsl
mov
rorb
pop
ret
add
cld
repnz
imul
push
add
dec
enter
mov
adc
lahf
jns
jecxz
mov
insb
cmp
pop
lret
imul
jg
mov
pop
sbb
rcll
and
cmp
or
mov
cmp
ss
inc
xchg
push
test
in
iret
pop
leave
or
sahf
inc
xchg
movsl
jno
divb
loopne
mov
xor
jl
xlat
mov
jno
jmp
fisttpl
adc
cmpsl
std
jp
push
mov
idivb
xchg
aas
ljmp
jmp
inc
fwait
push
adc
mov
inc
sub
push
nop
mulb
pop
jne
daa
cmp
aad
fmuls
pop
roll
jbe
lea
dec
xchg
xlat
xchg
mov
inc
jmp
jb
pop
stc
inc
mov
orl
es
pop
out
inc
pop
das
orl
out
addl
loope
popf
shr
dec
mov
inc
rcr
lods
fsubs
pop
nop
jg
mov
push
lods
push
and
sarb
jle
cmp
daa
ds
test
push
cmc
ret
or
sbb
ss
jns
cwtl
adc
stc
mov
xor
sub
push
cwtl
mov
daa
js
push
cmpsb
jns
adc
ds
mov
push
or
sbb
loopne
pop
or
out
cli
fistps
imul
dec
xchg
dec
loope
lcall
cmp
ljmp
xor
outsl
or
movsb
xchg
xchg
lods
add
jp
scas
fwait
orl
int
iret
dec
outsl
cmp
push
aad
imul
stos
push
ret
stos
inc
or
into
pusha
push
mov
test
outsb
dec
ljmp
adc
jne
gs
divl
sub
cmp
mov
jns
and
cmp
rcll
xor
repz
mov
sub
add
jno
mov
in
scas
mov
iret
inc
push
cmp
scas
push
std
mov
int
in
sar
test
mov
pop
lcall
xchg
pop
add
cmp
mov
push
int3
pop
cli
jecxz
cld
sub
xor
inc
fists
insl
sti
jmp
and
scas
push
in
pop
inc
inc
in
mov
or
sbb
nop
pushf
jle
ja
ret
pusha
sbb
mov
dec
pop
add
ror
jge
push
mov
mov
insl
mov
stos
in
push
push
push
mov
mov
mov
jl
push
emms
out
cmp
xor
adc
push
repz
data16
das
jle
cmpsl
scas
inc
idiv
or
loope
cwtl
mov
adc
mov
jb
jo
shlb
mov
leave
sti
outsb
adc
adc
out
dec
icebp
mov
sbb
lahf
fucomip
ja
cli
nop
test
jle
rorl
cmp
mov
pusha
inc
dec
decl
xor
in
inc
adc
out
bound
fcoml
xchg
xadd
cmp
mov
leave
inc
mov
call
dec
leave
adc
andl
or
out
pop
sub
mov
fsubrs
les
inc
aam
lods
inc
lea
inc
sub
stos
dec
mov
jne
ret
aam
jle
lret
dec
pop
xchg
add
outsb
lcall
xchg
jbe
inc
sub
mov
sub
mov
hlt
mov
ja
ret
fisttpl
dec
out
add
xlat
xor
jb
pusha
sbb
xchg
fcmovne
int
addr16
loope
cmp
popa
jmp
ljmp
jle
adcl
push
mov
into
push
cmpsl
push
fs
int3
imul
xchg
inc
fnstsw
dec
mov
rcrl
aaa
sbb
mov
dec
jl
lods
push
bound
inc
aam
push
clc
push
jo
add
mov
pop
sub
adc
dec
lret
mov
push
add
outsl
cmp
jmp
dec
push
cmpsl
xor
push
cmc
pop
xchg
je
pop
xchg
ljmp
push
sarb
cmp
mov
mov
lods
adc
adc
inc
pop
data16
pop
data16
jp
outsb
shrb
mov
divl
les
inc
pop
push
dec
mov
jno
shrl
in
push
testl
fs
mov
fucomip
pop
mov
cmp
cmp
sarl
mov
mov
mov
jne
rcrl
out
sub
cmp
adc
dec
sbb
jmp
mulb
idivb
inc
leave
cmc
sahf
or
je
retw
and
jge
je
sbb
call
or
add
into
nop
in
or
pop
mov
cwtl
xchg
dec
mov
cmc
nop
mov
test
cmp
aad
sub
lcall
gs
pop
mov
fsubs
jg
loopne
js
fwait
pop
je
sbbb
sub
xlat
xchg
insb
inc
int3
pop
loop
nop
mov
scas
rorl
mov
dec
add
inc
mov
push
jo
mov
dec
popa
in
das
pop
hlt
pop
mov
add
shlb
enter
sub
pop
adc
and
scas
inc
ret
mov
jb
sbb
pop
cmp
pop
lods
insb
outsb
movb
ds
and
mov
or
movsl
aaa
or
jne
jge
dec
xor
inc
add
push
repnz
rcl
lret
jecxz
arpl
imulb
popa
jecxz
cmp
imul
cwtl
jecxz
ret
xor
sarb
sbb
push
push
add
sub
imul
imul
cmc
mov
ret
adc
sub
call
xor
add
xchg
inc
stc
jns
pusha
mov
mov
sub
or
add
push
rolb
cmp
dec
adc
push
lcall
xchg
xor
fsubl
jb
std
cwtl
iret
repz
push
push
jg
mov
sub
pop
add
sub
mov
mov
cmp
mov
lods
add
mov
sarb
pop
jecxz
sti
push
push
xchg
cwtl
in
pop
mov
jecxz
dec
out
cld
adc
cli
idivl
stos
data16
add
sbb
xor
xchg
mov
add
movsb
mov
test
pop
pop
out
mov
js
push
int3
inc
in
cmp
arpl
lret
ds
pop
mov
dec
xchg
cli
rorl
mov
lds
sub
pop
scas
pop
adc
and
or
mov
pop
pop
sbb
into
int3
sarl
push
inc
inc
or
dec
shrl
andl
mov
xchg
pop
or
sub
pop
pop
jmp
add
jns
iret
popa
sarl
aaa
sbb
adc
cmp
ja
pop
out
mov
and
jb
or
jecxz
add
enter
jb
mov
fstp
rolb
dec
mov
stos
pop
mov
js
mov
in
inc
clc
lahf
mov
enter
in
andl
jg
dec
std
fdivrp
inc
mov
cwtl
js
ds
dec
push
int3
imul
inc
lea
pop
movsl
sarb
ret
mov
cmpsl
pushf
popa
cmp
push
add
jbe
insb
imul
add
js
repz
fcmovb
aas
pusha
xor
adc
fisubrs
sti
clc
je
xchg
cmp
lods
inc
loopne
popa
inc
jb
stc
mov
mov
in
mov
repz
in
pop
push
sub
test
ret
jo
inc
and
cwtl
sbb
xchg
sbb
lret
in
dec
outsb
mov
mov
bound
adc
sti
fmulp
jle
mov
xchg
imulb
pop
out
cmp
imul
inc
je
insl
rorb
inc
notb
out
adc
scas
sbb
and
clc
call
mov
jl
pushf
les
shrl
jbe
int
xchg
addl
or
dec
jecxz
dec
mov
and
xchg
mov
js
mov
xlat
lret
cmp
jb
cmp
loope
aas
inc
push
shlb
and
mov
jns
shl
pop
jae
push
mov
fbstp
jge
sub
push
and
push
das
adc
inc
dec
sbb
outsb
rolb
fsubrs
cmc
sub
int
and
dec
pop
lcall
cmpsb
lret
loope
les
orb
cs
imul
mov
stc
repnz
cmpsb
std
cwtl
add
jo
in
ficoms
lcall
lea
pop
ja
stos
insb
fisubs
sarb
xor
rolb
js
mov
int3
push
hlt
decb
ljmp
jmp
daa
test
pushf
lret
stos
xchg
test
jae
cltd
icebp
lds
cltd
xor
je
mov
insl
fisubs
popf
test
lea
in
pop
xchg
mov
mov
adcl
imul
cmpb
les
cmp
dec
push
mov
lods
aam
rclb
inc
shll
cmc
leave
cwtl
or
inc
adc
shlb
mov
xor
mov
filds
push
fwait
insb
xchg
test
push
jp
jnp
popf
gs
and
sbb
push
jns
rol
dec
add
jg
cwtl
mov
mov
lahf
mov
push
ds
aad
sti
jns
jge
cmc
mov
pop
scas
shlb
icebp
cld
or
leave
aas
xchg
mov
in
or
lret
insb
test
pop
fwait
push
clc
orl
or
or
inc
fidivrl
cmc
inc
dec
rorl
lea
shlb
jmp
or
or
test
sub
mov
movsb
ret
adc
sub
sub
fchs
leave
dec
rorl
jo
lret
loop
xchg
jl
arpl
lds
movsl
lahf
ret
and
inc
xor
push
movsl
and
in
add
sbb
inc
adc
pop
inc
sub
jne
push
xlat
int
sbb
je
lret
stos
xchg
jno
adc
test
div
repz
in
shr
mov
cli
ret
repnz
mov
clc
out
sbb
cmp
dec
dec
lock
xchg
dec
pop
into
xchg
dec
and
push
push
lods
lds
mov
test
idivb
test
mov
incb
mov
add
xor
sub
sbb
xlat
sbb
pop
ret
loop
jae
xor
jl
pushf
cld
pop
mov
inc
add
pop
bound
and
sbbb
mov
or
out
ret
dec
cmpsl
jp
pop
jl
dec
pop
sub
sbbl
orb
aas
adc
push
pop
mov
pop
cmp
mov
xor
pusha
xchg
and
insb
or
rol
xor
mov
test
imul
fbstp
dec
pop
mov
jo
jle
aas
xorb
mov
call
inc
pop
out
lods
in
loopne
loopne
fldcw
jp
dec
andb
xor
test
jns
into
sbb
adc
xchg
and
fisttpl
ficoml
ljmp
daa
lea
daa
cmp
or
pop
adc
or
pushf
shl
jge
ss
add
data16
xlat
xorb
fwait
lret
cmc
dec
sub
sub
xor
fwait
lret
cld
mov
fnstcw
push
sub
mov
sub
cmp
jae
xor
dec
push
ljmp
sub
xchg
mov
sbb
xor
push
shrb
hlt
sub
ret
movb
stos
inc
int3
add
cmp
sbb
push
mov
lods
push
es
cmp
push
xor
testl
je
lret
lds
and
mov
bound
add
movsl
mov
pusha
bound
std
cmp
lret
and
pop
push
pop
cwtl
and
clc
and
mov
das
jl
mov
sti
out
inc
jne
adc
mov
xor
and
push
incl
cmp
mov
outsl
xchg
dec
cld
int
iret
out
std
imul
sub
and
mov
pop
jb
dec
daa
ret
lret
call
dec
sub
decb
cmp
imulb
rep
pop
xchg
add
fwait
jnp
stos
jns
mov
test
loopne
sub
lea
adc
mov
lods
orl
jecxz
push
loopne
repz
shr
test
loop
mov
in
insl
call
mov
jae
ljmp
cmp
insl
repnz
loop
movsl
sti
inc
pushf
divb
sub
xchg
fbld
cmp
xchg
pop
pop
cltd
mov
pop
enter
cmpsb
and
pop
mov
and
test
je
cmp
data16
xor
inc
jl
sbb
ljmp
sbb
out
sbb
add
push
push
sbb
daa
mov
cmp
std
call
cmp
cld
negb
mov
xor
lods
and
mov
mov
sub
repnz
rcr
aad
insb
jnp
in
cmc
xorl
dec
mov
loope,pt
mov
xchg
push
shrb
dec
pop
iret
aaa
clc
nop
pop
cmpsb
dec
rclb
sahf
jbe
hlt
mov
sbb
mov
jnp
pusha
sub
mov
out
pop
nop
push
pop
lea
ja
sbb
subl
xlat
test
pop
repz
loope
mov
insl
mov
jae
pop
xchg
adc
push
popa
push
arpl
or
add
iret
xchg
fistpl
push
pushf
int3
fcmovnb
inc
mov
or
sub
int3
cmp
xchg
dec
xchg
int3
sub
std
popa
mov
out
or
xchg
cli
icebp
iret
sub
cld
arpl
or
jle
mov
pop
enter
rcrb
add
and
je
mov
push
mov
adc
scas
iret
sub
and
adc
loop
xor
rorb
in
mov
out
jns
jne
sti
aam
cli
push
andl
daa
inc
pop
lock
sub
insb
pop
inc
sbb
xor
push
out
nop
and
outsb
mov
into
mov
test
mov
fisubrs
and
jecxz
mov
xor
stos
inc
xchg
sub
and
fmull
lcall
jns
and
xchg
push
repz
inc
xor
fsub
clc
aam
push
push
dec
bound
mov
std
jmp
sbb
inc
inc
insl
cmp
fstps
inc
cmp
scas
cmp
inc
sahf
roll
leave
cmc
hlt
inc
shll
pop
movsl
pop
jbe
cli
out
in
pop
movsl
sub
shl
or
lock
iret
jle
inc
dec
mov
push
lret
jecxz
insb
mov
push
mov
and
out
loopne
mov
divl
adc
ljmp
and
popf
pop
in
imul
jae
lret
sub
test
int
lcall
lahf
call
and
lcall
lock
mov
push
stc
ljmp
in
xchg
mov
inc
adc
add
test
cmp
and
shlb
xor
repz
lahf
fldt
fstps
mov
lcall
mov
jnp
or
pop
nop
outsb
cmp
dec
enter
dec
dec
mov
mov
ss
fistps
cmp
enter
pop
outsl
and
in
push
ja
mov
push
jbe
pop
push
xchg
cmp
mov
inc
data16
xor
loope
fnstsw
or
shll
xchg
fsubrl
cmp
in
out
xchg
adc
call
mov
lea
sbb
cli
xor
dec
add
mov
fsin
jg
mov
enter
sub
or
lods
inc
push
jg
push
fstpl
fcomip
bound
jbe
lahf
xchg
add
test
pop
xor
cwtl
test
mov
cmp
mov
and
add
xchg
sbb
pop
fnstcw
es
les
cmp
lds
sbb
pop
add
clc
in
sti
mov
jecxz
push
rorb
pop
jb
jl
sub
cmc
fs
int3
mov
in
ficoms
dec
pop
cmp
mov
dec
push
dec
jb
sahf
push
imul
add
mov
aad
cmp
daa
dec
outsb
dec
dec
add
push
dec
and
ljmp
pusha
xor
les
dec
shlb
cmp
int3
aaa
addb
scas
mov
repnz
jb
pop
inc
sbb
roll
xchg
dec
sbb
cmc
adc
jbe
dec
fisttpl
outsb
js
dec
mov
mov
mov
icebp
mov
mov
mov
or
sub
lods
les
pop
or
sub
xor
fldenv
push
shll
xor
cmpl
sbb
sub
movsb
scas
test
push
jmp
cs
xor
cmp
xchg
shlb
mov
jbe
mov
movsb
or
mov
cmc
add
mov
cmp
xor
aam
fsub
cmp
rorb
int
inc
pop
jge
adc
sti
gs
dec
cld
push
jo
xchg
daa
xchg
roll
hlt
cmp
movsl
repz
addb
push
int
call
sub
iret
sbb
pop
or
shufps
jb
les
or
xchg
jbe
jle
adc
incb
and
outsb
jp
push
xlat
les
jle
sub
ljmp
adc
xor
cmpsb
xchg
call
xchg
adc
fsubrs
push
push
cwtl
sbb
jmp
sbb
mull
mov
push
pop
dec
or
mov
inc
add
inc
jl
adc
mov
mov
xor
mov
pop
test
sub
dec
rol
insl
push
sbbb
xchg
stos
pop
add
jecxz
enter
idivl
pop
mov
ja
mov
stc
or
xchg
xor
dec
sub
out
and
fildll
ljmp
pop
lahf
sbb
ds
mov
inc
rorb
push
fisttpll
and
in
cli
pop
iret
fdivp
imul
sub
adc
das
push
dec
movsb
push
mov
sub
flds
and
insl
jb
cmc
xchg
sub
iret
sub
lods
dec
cltd
pop
repnz
in
iret
dec
lcall
push
jno
std
ret
out
mov
dec
movsl
lea
iret
aam
xchg
dec
enter
dec
or
push
mov
scas
add
or
pusha
rol
sub
mov
es
add
push
pop
sbb
shrb
jno
loope
shrl
jmpw
aam
push
sti
mov
sub
xchg
aad
xor
das
shlb
mov
mov
dec
lahf
ds
or
loop
add
in
stos
ja
jbe
je
arpl
adc
sub
add
add
push
rcr
inc
scas
repz
sbb
insl
lret
cmc
xor
mov
pop
xor
or
pop
pop
loop
sbb
imul
cmp
cmp
jecxz
add
sbbb
out
in
mov
stos
inc
std
inc
mov
pop
ja
dec
js
aas
shlb
dec
out
jae
or
xchg
lock
cmp
imul
int3
xor
jp
inc
push
lcall
sbb
fcomps
lret
mov
sbb
push
stos
push
xor
out
lock
cmp
in
pop
sub
enter
inc
or
add
add
or
push
jle
xor
test
push
cmpsl
push
clc
and
cmpsb
out
pop
jecxz
insb
mov
pop
pop
and
inc
jmp
dec
xchg
and
xor
cmp
out
xchg
push
movsl
mov
cwtl
orl
jnp
cs
cmp
mov
in
add
jae
lds
xchg
leave
mov
pop
mov
loopne
cmpb
es
mov
aad
in
int
push
sbb
sub
mov
cmp
loope
pushf
sub
mov
fwait
sbb
and
dec
gs
out
mov
sbb
stos
push
dec
xor
cmp
clc
add
xchg
in
insl
fwait
lahf
xchg
xchg
inc
test
in
leave
repnz
xlat
lods
rcrl
incb
inc
adc
lea
pusha
lcall
loop
bound
dec
lahf
sub
push
pop
mov
mov
inc
mov
shll
adc
sbb
lea
sbb
jnp
pop
sbb
icebp
adc
push
int3
pushf
mov
ds
call
mov
lock
jbe
and
in
push
adc
lea
mov
inc
pop
sbb
add
dec
sbb
mov
fldl
pop
add
cmp
add
push
xchg
lcall
test
js
add
in
jb
jle
push
cmpsl
mov
stc
std
jecxz
aas
mov
cltd
xchg
mov
int
std
xchg
cmp
pop
xchg
fsubl
aaa
sti
inc
inc
je
das
dec
adc
in
test
sub
and
loopne
lds
mov
in
mov
pop
clc
pop
subb
adc
scas
sub
mov
or
push
xchg
mov
or
jmp
add
loope
mov
pushf
jg
pop
cwtl
mull
xor
inc
nop
inc
and
out
pop
and
jbe
dec
popf
out
inc
mov
test
cmp
pop
xor
and
or
jns
repnz
ret
insl
and
mov
xchg
and
iret
out
flds
imul
inc
cmpsl
stc
fs
push
mov
orl
xchg
popf
and
bound
dec
bound
add
cmp
stos
test
mov
test
and
mov
add
ss
cwtl
mov
out
mov
adc
sahf
mov
jne
inc
mov
inc
push
shrb
clc
dec
dec
pop
dec
or
std
int
pushf
in
dec
aam
shl
xchg
loop
jmp
sub
fs
xor
cwtl
es
jb
pop
ja
sti
addr16
outsb
std
in
rolb
mov
jbe
cs
mov
jl
dec
rclb
in
je
push
xchg
sub
pop
shlb
add
mov
mov
pop
pop
inc
loope
xor
test
stos
add
jo
adc
cmpsl
and
lock
es
movsl
pusha
dec
shll
or
xor
jo
test
cmc
aad
adc
mov
in
mov
rorl
aad
cmc
hlt
leave
add
loope
mov
sti
inc
mov
or
adc
out
cmp
mov
push
out
sub
cmp
scas
mov
and
popf
inc
adc
mov
jne
sbb
loop
ljmp
jmp
add
cmp
addr16
push
rclb
cmp
add
int
jns
dec
cmpsl
daa
jo
insb
sbb
mov
push
movsl
and
popa
jmp
scas
xor
ss
out
ficoms
inc
xchg
push
mov
mov
adc
and
test
sub
out
int3
add
sbb
or
jle
rorl
add
sub
rcl
inc
push
xor
mov
dec
push
xchg
addr16
add
mov
jbe
stos
addl
xchg
ds
repz
add
or
push
rcr
inc
sub
ljmp
mov
rcrb
pop
cs
fldl
and
pop
pop
xchg
and
aam
nop
dec
cmpsb
xchg
pop
push
and
hlt
cmp
stc
mov
sahf
jecxz
lret
cmp
out
mov
mov
push
inc
cmc
test
mov
or
push
or
out
popf
out
fidivrl
add
or
jle
pop
cmp
mov
mov
ja
andl
push
call
mov
mov
loope
add
stos
cmpsl
orb
divb
cmp
lods
jns
inc
fisttps
pop
ja
push
mov
call
xorb
pop
out
xchg
rol
xchg
adc
xchg
inc
mov
cmp
and
sarb
in
xchg
and
fiadds
xchg
xor
sahf
je
sub
fbld
mov
sarb
movsb
mov
push
and
and
inc
iret
pop
push
ss
test
loopne
pop
pop
cwtl
jnp
in
inc
imul
jp
aam
outsb
mov
pop
movsb
jge
sub
aam
and
iret
add
and
inc
cmp
je
push
xor
loopne
mov
fsts
cltd
push
dec
repnz
pop
mov
test
jo
push
in
out
pusha
mov
mov
push
lods
mov
inc
in
xlat
pop
mov
hlt
sbbb
cmp
add
mov
lcall
jne
mov
push
outsl
xchg
mov
shrl
pop
pop
pop
add
daa
cmc
pop
jbe
out
int3
repz
das
cmc
pop
adcb
into
jecxz
cmp
dec
push
mov
fsubrl
jno
add
push
popa
int
cmp
jns
adc
mov
adc
mov
mov
adc
dec
lock
jno
xchg
data16
adc
test
pop
mov
xor
jle
or
js
outsl
mov
sbb
adc
xor
loop
mov
out
sub
sbb
sbb
xor
xchg
push
mov
adc
xchg
test
insb
mov
cmp
pop
movsl
fisubrl
mov
inc
mov
test
xchg
dec
or
push
jo
jnp
pop
rorl
push
out
mov
cmp
sub
aam
jns
pop
and
cbtw
repnz
aam
in
inc
mov
sahf
sti
fmull
jae
sbb
push
frstor
pop
outsl
mov
cmpb
arpl
dec
mov
ja
jge
add
lods
jno
aaa
xchg
mov
mov
fsubrl
fadds
mov
inc
sub
stos
push
testl
pop
fidivs
roll
mov
cmc
popf
add
inc
inc
pop
ret
xchg
sbb
and
push
ret
and
inc
push
lahf
push
scas
cmp
ds
mov
inc
bnd
push
jne
lret
sbb
sbb
and
or
dec
frstor
mov
dec
imul
xchg
mov
push
int3
xlat
mov
lahf
daa
pop
rorb
subb
lret
dec
xorb
push
xor
ficomps
fldenv
pushf
lea
out
scas
sbb
fwait
stos
jl
inc
mov
pop
cwtl
ficoms
jno
sub
mov
fistpl
jmp
repz
iret
mov
out
dec
mov
in
cli
mov
lds
bound
ret
cli
inc
lret
sub
cmp
insl
mov
arpl
and
add
sub
pushl
xchg
jne
stos
fstps
movsb
mov
mov
enter
sti
add
sub
mov
or
in
aam
sub
sarl
enter
fbstp
daa
aad
add
rcll
lds
adc
lret
cmp
popf
imul
lods
push
test
lods
mov
and
imul
or
inc
nop
dec
mov
sahf
sub
rorb
inc
mov
sub
xchg
dec
rorb
pop
aad
pop
xchg
mov
add
addr16
dec
stc
sbb
testb
sti
pop
int
inc
mov
incb
or
loope
xchg
std
cmpsl
adc
lret
or
rorl
push
lcall
push
rcll
int3
cli
dec
stos
dec
push
orl
pushf
pusha
loop
imul
icebp
subb
fisttps
or
add
add
push
push
xchg
push
mov
dec
enter
mov
jmp
add
xchg
xchg
mov
mov
flds
mov
mov
jecxz
int
mov
cld
xor
adc
cwtl
loop
adc
into
iret
clc
cmc
rcr
push
inc
pop
push
xor
ja
jno
xor
aad
lret
xchg
jecxz
dec
imul
xlat
decb
xor
cmpsl
mov
push
jnp
icebp
fisubrl
xchg
xor
push
add
loope
inc
sahf
fisubrs
xor
cmc
xchg
add
jmp
out
lock
imul
pop
rolb
sbb
jne
test
lds
push
fsubrs
sub
test
mov
movsb
push
xchg
jno
xchg
aaa
rcll
push
or
xchg
sub
dec
push
pop
adc
or
pusha
sti
out
jmp
imul
mov
inc
int3
push
push
jp
and
xchg
out
inc
leave
xchg
push
mov
or
jg
jno
jle
add
jbe
pop
jecxz
push
jae
inc
jns
ds
sub
or
sbb
lock
cmpsb
cmp
andb
outsl
repnz
arpl
aas
test
and
jle
ficoml
jp
jno
in
cwtl
lret
faddl
fs
cmp
sbb
std
outsl
jne
inc
mov
aas
add
js
push
into
xchg
mov
dec
leave
shrb
mov
dec
cmpsb
jae
xor
add
dec
js
pop
es
xor
lret
nop
xchg
test
out
ds
leave
testl
ljmp
sarb
shlb
push
adc
mov
or
add
jne
sub
mov
ret
lods
or
jmp
and
mov
daa
inc
sub
lahf
ss
mov
jbe
pushf
es
or
inc
sbb
ret
adc
dec
jmp
outsl
lods
jmp
insb
push
push
mov
test
xchg
lcall
adc
jne
mov
nop
ljmp
dec
mov
into
sbb
push
mov
mov
ljmp
in
aaa
cmp
or
test
cmpsl
sub
test
je
mov
add
jle
xor
bnd
pop
dec
lret
ds
leave
ret
push
mov
ds
and
xor
xor
lcall
push
pop
aam
dec
hlt
out
cmc
xor
lahf
in
push
mov
push
xor
push
jb
fildll
ja
pop
dec
popf
clc
sti
inc
jnp
xchg
inc
clc
je
jne
push
imul
test
mov
or
add
aas
icebp
cli
mov
inc
test
push
aas
sahf
xchg
lock
and
test
insl
into
js
mov
adc
fmuls
out
inc
inc
popa
push
lret
dec
cmp
inc
inc
fdivrs
jno
shr
push
dec
jno
loopne
sub
mov
push
pop
xor
aad
mov
imul
repnz
or
adc
sub
sahf
mov
dec
mov
push
xor
mov
xor
mov
sbb
aas
sbb
inc
cmp
push
and
xor
aas
loope
lds
jo
enter
inc
ds
sub
test
movsb
push
in
loop
imul
cmp
xchg
pop
adcb
fdivrl
and
out
into
mov
imul
lods
fwait
xor
mov
fwait
sahf
stos
sarb
cmp
test
push
pushf
lock
or
sbb
test
andb
xchg
sbb
imul
jnp
push
leave
push
mov
movsb
loopne
adc
mov
into
or
sbb
dec
sub
loop
imul
dec
push
pop
movsb
jmp
lret
pusha
and
sbb
test
lock
or
push
jge
lret
leave
popf
ss
and
push
lock
cs
andb
das
es
daa
ljmp
push
dec
sbb
xchg
fisttpl
psrlw
inc
ret
dec
mull
loop
int3
adc
loope
xchg
pop
aam
cltd
pop
popl
fdivrs
stos
test
mov
pop
insl
xlat
mov
sbb
loopne
in
aad
ss
test
cmpsb
push
mov
outsl
ror
inc
mov
sub
lahf
dec
jns
pop
or
mov
aam
push
scas
mov
lock
arpl
aad
ljmp
push
cmpsb
movsb
data16
sbb
scas
gs
xchg
aam
sbb
es
in
mov
mov
jge
icebp
xchg
mov
or
shrb
mov
es
mov
loopne
enter
add
pushf
je
frstor
clc
sub
pop
daa
lds
add
aas
xor
ret
dec
add
xor
push
inc
ja
pop
idivb
lock
leave
push
mov
psubw
ds
stc
js
orl
addl
xor
ljmp
aam
fcoms
ljmp
mov
pop
data16
imul
xor
jp
inc
lea
xor
push
xor
ljmp
rcr
js
pop
cmp
or
xor
xor
sbb
and
push
push
dec
popf
fwait
int3
push
into
adc
popf
call
inc
or
int
divl
shlb
jl
xchg
ror
cmp
stos
mov
xchg
push
call
cmpl
lcall
ret
addr16
rorl
xor
xchg
inc
les
sbbl
add
xchg
pop
dec
ss
push
jge
or
jno
push
xor
cld
insl
arpl
sbb
cmp
hlt
or
jno
sbb
inc
imul
xchg
adc
pushf
lret
orl
cmp
xchg
mov
adc
xchg
leave
movsb
push
cs
sub
xchg
loope
fldl
lea
sub
pushf
stos
push
xor
repnz
add
pop
lret
and
js
xchg
bound
fnstcw
data16
xor
lods
loope
cltd
dec
bnd
std
inc
cmp
mov
jne
pop
cmp
jmp
int3
leave
sbbl
mov
cld
insb
lds
orb
cmp
out
adc
fwait
sbb
movsl
nop
dec
cmc
jnp
out
mov
imul
adc
jg
ret
mov
pop
fnsave
adc
adc
sbb
push
mov
stc
mov
das
andb
adc
popa
inc
cld
iret
ret
lods
pop
mov
call
jnp
cmp
xchg
dec
push
push
cltd
mov
xor
and
mov
addr16
pushf
xor
ja
sub
cmp
insb
and
pop
jge
fisttpl
xor
mov
sarl
sub
into
outsb
loopne
mov
fs
or
xor
cmp
popa
out
mov
insl
pushf
sub
insl
outsb
fildl
inc
ds
or
cmp
push
gs
cld
cmp
test
fisubs
jb
hlt
cmp
and
and
mov
lock
sub
out
mov
or
sub
das
mov
inc
mov
lods
jl
mov
idivb
add
cld
pop
sub
cmp
outsl
push
rolb
cwtl
fs
xor
cmp
das
shrl
mov
push
add
add
and
cltd
push
jecxz
adc
inc
ds
mov
inc
loope
add
jne
jp
repz
out
dec
mov
mov
mov
mov
repz
jl
mov
pop
jno
dec
daa
pop
or
shrb
lahf
adc
sbb
dec
out
cmp
sub
mov
sub
jle
repz
es
aad
lds
adc
repz
or
popa
rcrb
ljmp
jl
ljmp
js
pop
jae
cltd
add
aaa
into
inc
stos
cmpsb
cmp
fs
popa
rorb
dec
sub
xbegin
lret
ds
adc
adc
push
gs
pop
mov
data16
mov
test
ja
mov
add
mov
xchg
jo
sti
mov
in
and
sbb
lods
mov
shll
push
mov
jbe
loop
mov
or
inc
dec
in
sbb
daa
mov
mov
nop
stos
outsl
push
xlat
pop
dec
movsl
inc
rcl
xchg
shll
cmp
adc
sbb
ljmp
aaa
and
into
sbb
imul
pop
add
in
xchg
divb
sub
add
xor
call
cmp
mov
lods
fdiv
adc
xchg
lock
xchg
outsb
movsl
inc
inc
inc
push
cmpsb
inc
xor
call
data16
aas
scas
inc
lret
nop
jo
int
jmp
call
gs
ficomps
push
adc
mov
test
push
sub
dec
mov
sahf
movsb
adc
jo
mov
loop
adc
xlat
loop
lret
out
sub
push
add
pop
push
cmpsb
icebp
imul
jno
pop
mov
push
or
loope
out
out
stc
or
nop
sbb
mov
ret
and
sbb
popf
mov
popa
je
clc
jnp
xlat
cmp
xchg
or
pop
lahf
shll
xchg
ret
in
sahf
sbb
xchg
fucomp
fildll
lahf
in
dec
add
stos
call
out
int3
arpl
call
push
loop
in
or
mov
into
scas
shll
out
test
and
in
enter
movq
or
lods
icebp
rorl
incl
dec
xor
jno
adcl
es
ret
mov
mov
outsl
and
inc
and
ret
jmp
sub
test
mov
lcall
and
aaa
out
ret
lcall
enter
icebp
xor
adc
sbb
fsubrp
mov
xor
sub
xor
out
xchg
jl
mov
imul
lock
pop
and
mov
inc
xchg
ljmp
xor
mov
ja
mov
xchg
and
adc
std
pop
mov
pop
or
push
lret
jnp
fcompl
mov
stos
je
xchg
pop
sub
pop
pop
enter
fsub
or
inc
jmp
or
movsb
jecxz
adc
pop
test
outsl
xchg
into
movsb
xchg
leave
pop
xchg
mov
xlat
mov
sbb
dec
dec
js
ljmp
dec
popf
jg
loop
adc
in
out
out
push
in
inc
jnp
out
jno
scas
repnz
inc
in
bound
call
int3
lea
int3
aam
pusha
fdivrs
leave
sbb
xchg
xchg
addr16
mov
popa
loope
outsl
dec
add
push
jl
loope
add
ja
minps
jnp
cwtl
fstps
out
push
nop
not
xor
call
repnz
jmp
jo
cmp
out
imul
movntps
scas
loopne
dec
inc
mov
ljmp
push
sub
andb
push
pop
mov
inc
cmpb
enter
cmpsb
sbb
xchg
inc
jns
and
cmp
and
data16
ret
pushf
test
divb
outsb
orb
cld
dec
enter
sbb
outsb
mov
call
scas
dec
jae
xor
movsl
jp
and
xchg
sti
dec
add
jg
or
cmp
push
pop
add
rolb
dec
int
mov
dec
pop
les
xlat
jb
std
jp
or
out
sub
push
push
jae
inc
mov
jg
jo
mov
mov
cmp
outsl
mov
lods
add
dec
sub
lods
xchg
test
jne
cli
fs
sbbl
int
out
mov
inc
popf
not
scas
add
sbb
lcall
or
dec
sbb
xor
nop
mov
jo
adc
or
mov
inc
sbb
xchg
out
dec
mov
lock
or
mov
test
sub
cmp
jns
out
inc
rcl
pushf
in
stos
les
ds
push
mov
mov
mov
dec
rolb
xchg
mov
stos
loope
lods
lea
sbb
mov
and
cmp
cmp
jg
shll
and
mov
imul
adc
roll
out
xchg
pushf
or
xor
fwait
lahf
adcb
xchg
and
cltd
into
jp
out
imul
notl
jb
in
and
mov
dec
ja
jbe
mov
xchg
add
jp
sbb
sbb
ret
stos
and
pop
mov
test
test
sub
insb
cli
fcoml
push
ret
pusha
outsl
idiv
inc
xor
repz
out
int
xchg
inc
fabs
es
jl
push
ret
jnp
mov
adc
jae
and
lahf
push
push
xchg
sbb
adc
xor
in
aas
in
das
or
fistps
js
out
nop
loop
jecxz
sub
mov
pop
push
dec
gs
inc
into
in
sbb
jp
aad
push
jl
mov
push
fisubrs
movsl
test
adc
shlb
dec
iret
stos
sbb
repnz
mov
dec
jge
jmp
sbb
jae
lds
fsts
mov
pusha
xorl
adc
out
mov
push
ljmp
imul
sahf
in
in
testb
cs
fists
mov
push
scas
mulb
xchg
xor
sbb
fisubrs
scas
ret
dec
push
fdivl
cmpsb
out
lds
arpl
inc
sbb
stos
std
shlb
inc
push
ja
je
xchg
sub
xchg
jmp
out
imul
fdivl
cld
lahf
sub
in
sub
push
in
add
xchg
pop
push
aas
in
fcomps
orl
into
cmp
in
pop
mov
mov
mov
mov
dec
jnp
sbb
cs
stos
repz
das
pop
imul
ljmp
nop
mov
fisubrs
loope
sbb
add
mov
jmp
fildl
out
xchg
stc
push
out
sbb
xchg
pop
jae
jbe
in
in
scas
push
lds
testb
sti
insl
in
bound
out
fidivrl
xor
mov
std
fcmovu
mov
push
loop
pop
dec
xchg
fwait
and
pop
dec
cmp
and
xor
ss
nop
mov
sbb
enter
jno
pop
cmp
push
leave
sarl
add
sahf
test
imull
test
arpl
insl
hlt
faddp
loopne
iret
sbb
add
pop
push
in
aam
mov
jecxz
inc
fstl
add
inc
adc
lea
cmpsl
dec
repz
pusha
pop
jg
in
cmpb
pusha
stc
xchg
movsl
mov
aad
push
sarb
and
adc
clc
movsl
xchg
fwait
push
mov
adc
dec
mov
push
arpl
dec
push
es
sub
mov
dec
adc
out
inc
mov
pop
mov
inc
mov
pop
push
inc
loop
inc
mov
insl
inc
mov
in
out
mov
lds
lock
bnd
add
mov
das
dec
dec
sub
mov
ret
and
pop
test
xor
ret
jg
mov
cmpsb
mov
xorb
sub
stos
adc
add
jp
in
out
stos
popa
cs
lods
lea
js
push
ljmp
push
dec
mov
xchg
call
les
inc
out
loope
cmpsl
cmp
add
push
or
sarb
and
sub
push
dec
jg
xchg
jns
jns
xor
fsubrp
divl
jg
dec
in
out
add
bnd
push
js
push
push
mov
add
inc
fsub
outsb
cmp
out
ja
jmp
inc
in
inc
xor
ficomps
xor
ljmp
int
xchg
lock
fsubl
jae
pop
cmp
sbb
inc
and
dec
mov
dec
add
push
mov
movsl
jle
inc
dec
mov
into
push
cmpsl
adc
or
push
ja
repz
sub
push
mov
fldenv
inc
push
aaa
arpl
in
xchg
jmp
and
fcmovnbe
jmp
ret
scas
std
jbe
mov
and
in
and
testb
mov
test
adc
mov
sub
or
in
xchg
push
jmp
mov
xchg
in
filds
adc
add
shll
pop
enter
or
inc
sti
push
aas
mov
xor
dec
sub
add
xchg
lock
mov
loop
lret
mov
std
add
mov
xchg
fcoml
push
data16
mov
inc
push
sub
cmp
inc
sti
lea
sar
pop
fs
outsb
adc
testl
adc
clc
push
rcrb
in
jg
andb
xor
xor
aas
jne
and
rorb
lret
cmp
or
dec
fists
testb
mov
cmp
out
jle
or
lods
dec
fcmovnbe
sub
movd
pop
addr16
call
add
sbb
or
and
out
mov
mov
add
out
lea
xchg
adc
clc
ret
insb
pop
dec
push
xlat
out
insb
cmp
lret
dec
xor
aas
and
ja
ja
andb
mov
push
mov
dec
insb
adc
and
or
jae
loop
cmpl
filds
and
mov
mov
shll
lfs
or
cmp
mov
shll
and
out
stos
push
xchg
lods
aaa
pop
add
xor
or
jmp
sbbb
fwait
test
fcoms
push
sub
outsl
dec
test
pop
out
cmp
out
loop
dec
jle
push
test
shrl
movsl
mov
in
mov
push
lahf
pop
lods
gs
dec
out
js
or
pop
lcall
fists
and
cmp
pop
cltd
loope
jnp
dec
mov
outsb
or
sbb
imul
jp
mov
mov
ja
and
pop
jecxz
sbb
cmp
push
sub
scas
psrld
in
or
add
jl
pop
sti
pushf
push
mov
add
adc
cmp
dec
aam
fdivrl
cmp
xchg
and
xor
pusha
pop
popf
adc
or
xchg
mov
xchg
push
xchg
mov
mov
mov
dec
scas
pusha
into
fs
xor
notl
cmc
and
mov
or
mov
mov
fnstcw
xchg
xor
dec
mov
fwait
sti
inc
cmp
pop
adc
cmp
sbb
adc
adc
push
pop
cmc
sub
and
in
shrl
xor
and
in
push
adc
jp
movsb
inc
sub
int
mov
jmp
inc
xchg
sbb
sbb
aas
aam
fldenv
leave
scas
jae
test
mov
mov
cli
sbb
mov
ret
dec
repnz
outsl
xor
jnp
and
add
inc
ret
stos
push
add
sbb
lods
rcrl
sbb
loopne
pop
lahf
ds
aas
inc
jns
seto
adc
xchg
or
push
cmp
lods
test
xor
jle
push
xlat
cmp
pop
adc
lcall
out
jne
xchg
and
in
pop
push
and
test
test
jnp
mov
cmp
inc
adc
enter
ret
sub
xchg
ljmp
sub
das
inc
mov
push
push
push
adc
clc
cmpsb
sbb
dec
shrl
mov
or
ljmp
fs
test
stc
subb
or
and
aas
push
or
push
sbb
push
mov
cs
jl
sahf
xor
inc
loope
jnp
lret
aam
xor
mov
in
pop
push
rorl
lea
mov
cmp
lcall
lret
aad
insb
stos
daa
xchg
mov
dec
inc
jnp
sub
in
int
orb
mov
push
xchg
jne
insl
or
ljmp
scas
nop
hlt
insb
movsl
leave
push
push
scas
imul
iret
rcll
push
mov
popa
jl
jae
lods
lea
les
lahf
push
push
mov
cmp
ud0
andb
movsl
jae
pop
or
dec
popa
inc
xor
and
jmp
mov
jae,pn
inc
sbb
in
dec
lcall
cltd
cmp
add
imul
sub
mov
xabort
test
xor
ret
ss
dec
mov
pop
jb
push
sub
dec
call
arpl
das
push
insb
jg
dec
jo
push
inc
xchg
int3
dec
mov
orl
icebp
mov
in
in
adc
loope
push
ljmp
sbb
icebp
aas
test
cld
int
lret
mov
jnp
xlat
add
and
dec
sahf
jnp
imul
fcomp
adc
call
dec
and
int3
mov
cli
cmpsl
lock
pop
mov
or
mov
das
mov
inc
insb
fistl
cmp
push
cld
add
xchg
xchg
mov
inc
lret
notb
sbb
shlb
inc
sub
xor
add
call
sbb
rcrl
push
je
call
int3
adc
stos
push
mov
andb
pop
call
lahf
xrelease
add
push
mov
adc
or
sub
xchg
lahf
imull
sub
vmovhps
sub
cli
aad
push
xorl
xchg
and
dec
lds
sbb
iret
mov
dec
hlt
fstps
mov
fstps
pusha
push
jmp
dec
addr16
ret
mov
pop
inc
cmp
sbb
test
sahf
in
loop
ljmp
fdivrl
jecxz
call
cmp
pop
mov
lcall
mov
jg
push
inc
mov
mov
inc
jmp
fcmove
pushf
dec
jl
shr
jle
xchg
inc
jbe
jecxz
xor
push
xlat
nop
dec
fsubrl
pop
cmp
sbb
aam
add
jo
or
stos
cmp
fsub
or
pop
add
test
lea
mov
xchg
pop
mov
ret
add
xchg
popa
fcoms
xchg
orl
bound
lret
out
js
aam
push
mov
add
jns
test
pop
dec
inc
cmp
lods
pop
mov
jmp
pop
mov
test
inc
shr
push
fcmovbe
mov
xchg
xor
sti
pop
imull
ret
cmp
mov
push
dec
mov
es
pop
sub
test
cmp
mov
xchg
jl
jo
inc
push
sub
mov
adc
xor
sti
add
ljmp
mov
and
mov
mov
cmc
inc
or
out
lea
ret
mov
add
cmpsl
loopne
cs
lock
lods
fs
pop
sub
dec
cmpsb
mov
pop
jge
sub
sbb
idivl
std
push
xor
push
je
repz
leave
mov
outsl
xchg
adc
out
movsl
push
xchg
movsl
add
pop
call
or
jo
push
inc
push
js
addl
or
mov
inc
xchg
and
inc
cmc
and
loop
dec
mov
xorl
push
popa
dec
lods
leave
outsl
mov
bound
fsubl
cltd
movd
sub
jnp
out
in
mov
cmc
jge
dec
fists
movsb
test
outsl
sub
sbb
fcmovu
jno
test
mov
outsb
add
cld
jbe
dec
dec
fadd
int3
pop
sti
jmp
std
pusha
xchg
icebp
fs
or
mov
adc
popa
and
inc
pop
jg
add
dec
cmp
inc
push
xor
daa
push
mov
mov
sbb
ds
loope
xchg
sub
adc
push
mov
ficompl
ss
test
inc
fisubrl
out
xor
out
arpl
bnd
mov
rorb
inc
xchg
cmp
xchg
in
das
mov
cmp
in
cmp
jbe
mov
rcrl
sub
xchg
cwtl
cld
lret
xchg
daa
aam
xor
sub
lahf
jecxz
cwtl
jbe
iret
cmp
mov
test
loop
test
xchg
js
sbb
fistl
sub
call
loope
or
lds
sbbl
and
clc
dec
mov
xor
inc
cmc
sub
aaa
incl
divb
xorb
pop
mov
cltd
xchg
pusha
lods
scas
arpl
mov
pop
and
hlt
or
pop
adcb
ljmp
cmpsb
mov
pushf
push
mov
shrl
cmp
adc
sub
pop
insb
out
mov
rcll
push
loop
mov
mov
popf
push
ljmp
fcomps
pop
in
dec
add
xchg
add
cmc
jbe
cld
lahf
jl
jle
inc
cwtl
pushf
dec
test
int
lret
shll
mov
mov
dec
in
outsl
cmpsl
test
std
scas
movsb
mov
push
fisttpll
jns,pt
lret
mov
add
sbb
jns
add
insl
jecxz
testb
cmp
lcall
pop
add
lahf
cwtl
ret
xor
cmc
and
cmp
dec
es
cmp
dec
ljmp
adc
into
lock
arpl
movsl
inc
dec
leave
cmpsl
add
push
sub
mov
sub
pusha
mov
mov
sbb
adc
dec
dec
jle
aas
stc
lods
cmp
pop
inc
cld
testb
adc
mov
rcrb
lds
mov
push
mov
mov
pop
cmpl
mov
inc
mov
sub
sub
and
scas
arpl
push
push
leave
cwtl
ds
or
add
pop
lcall
pop
and
mov
cmp
inc
fidivrl
pop
cmp
mov
repnz
loope
cld
ret
aam
lea
jmp
loop
mov
add
adc
out
add
fs
and
loop
int3
mov
ds
into
stos
cmc
lret
or
jae
aam
pop
mov
insl
in
shll
ret
cltd
dec
sar
jp
fst
sbbb
mov
pop
xor
or
push
xorl
pop
dec
push
mov
rcll
fadd
not
in
push
mov
xlat
push
mov
mov
mov
ss
ss
pop
sub
push
sub
pop
mov
in
pop
mov
lock
scas
inc
and
push
xchg
xor
je
out
pop
and
addr16
stos
aaa
ficompl
repz
jb
incb
daa
nop
out
xchg
fs
sti
mov
lret
dec
mov
sti
hlt
addl
cli
sbb
or
mov
sub
aad
inc
adc
jp
push
adc
pop
jp
popf
pop
push
mov
xor
cmp
addr16
or
jle
dec
cltd
aaa
jnp
jae
adc
imul
mov
push
in
clc
adc
cwtl
sarl
mov
mov
inc
xor
and
jbe
fnsave
dec
mov
hlt
mov
sbb
movsl
std
outsl
shlb
push
inc
test
cmpl
shr
jecxz
shrb
xchg
xor
fsubrs
xor
add
leave
test
jb
mov
lahf
mov
aad
notl
es
sbbl
xchg
pop
add
mov
imul
mov
inc
imul
je
int3
pop
adc
mov
mov
rcrl
arpl
inc
test
cmpsl
mov
push
push
inc
sub
jmp
xor
mov
imul
pop
or
adc
insl
cmc
out
or
dec
test
lcall
sbb
insl
or
mov
adc
jb
add
lcall
cwtl
or
inc
push
push
cs
cmp
and
repnz
movsb
push
outsl
fwait
lods
je
cltd
push
adc
jge
jnp
adc
fwait
mov
ret
push
push
mov
and
mov
jmp
mov
cmp
sbb
popf
adcl
xchg
mov
or
xchg
js
mov
loope
insl
scas
jo
dec
add
popf
ja
imul
repz
mov
fdivrl
stos
xchg
and
call
ljmp
shlb
addr16
aaa
aaa
cmp
sbb
inc
movsl
loop
imul
mov
push
or
shll
cmp
jl
shr
mov
xchg
popf
and
arpl
out
mov
daa
add
sub
lock
fmuls
loop
xchg
fcoml
mov
imul
lods
shl
push
fists
orl
dec
jecxz
cmp
int
ss
out
bound
inc
movsb
rorb
mov
arpl
fidivs
add
fcomip
sub
inc
loopne
pop
sbb
lahf
mov
test
cs
addl
pop
mov
mov
xor
sub
add
imul
pop
xchg
xor
cmp
cli
xor
sbb
pusha
pop
fsubr
sbb
sbb
fsubs
cmpsb
nop
dec
dec
adc
cld
jle
adcl
xor
pop
mov
jge
lock
and
in
out
add
cmc
pop
mov
pop
js
andl
enter
call
mov
dec
xchg
icebp
bnd
xchg
push
cmp
fcoml
pop
push
aaa
mov
sahf
cmp
lcall
in
sub
xlat
loope
sbb
xchg
sub
or
fsubs
sbb
test
iret
clc
clc
add
xchg
push
repnz
jmp
xchg
dec
loopne
imul
rcr
adc
outsl
out
inc
fsubl
xchg
xchg
rcrb
jg
mov
leave
test
lds
daa
iret
jp
outsl
lea
push
push
data16
inc
je
cli
sub
mov
add
mov
xchg
or
pop
into
leave
adc
pop
xchg
cltd
lcall
ror
push
jnp
mov
jl
jl
lahf
js
dec
push
xchg
cmp
daa
xchg
movsl
mov
push
jns
shlb
cmp
enter
in
jecxz
pop
inc
push
push
in
inc
std
mov
icebp
pushf
and
push
mov
mov
mov
mov
movb
int
dec
cmp
mov
out
and
repz
cli
xor
loopne
bound
fcompl
and
push
add
mov
push
and
xchg
xor
faddl
cmp
inc
adc
hlt
rclb
inc
lds
sbb
dec
bound
rcrl
cli
test
js
cmp
inc
sahf
sub
sub
pushf
pop
pop
jecxz
pushf
mov
cmp
lret
pop
xchg
testb
adc
inc
or
pop
insb
or
sbb
xor
cmp
add
andb
jb
mov
mov
jnp
jns
inc
jnp
xor
mov
repz
lods
clc
and
xchg
insl
movsb
mov
aam
pusha
test
pop
sbb
leave
push
cmpb
fdivl
repnz
fistps
dec
ljmp
jge
sub
mov
jnp
stos
or
and
sahf
pop
add
jo
xor
pop
sti
jne
cs
xchg
or
fwait
inc
stos
inc
jnp
jns
lock
push
mov
popf
fdivrs
pop
and
js
je
push
mov
or
das
fs
fstps
fs
stos
add
outsb
or
mov
cmc
cmpsb
leave
imul
adc
dec
jnp
mov
adc
push
push
push
jne
push
pop
xchg
ljmp
dec
mov
jl
es
xchg
sbb
inc
clc
js
mov
pop
jmp
pop
test
cmc
inc
or
lret
cli
and
dec
push
test
xor
push
xor
mov
sbb
adc
stc
mov
clc
jmp
outsb
aaa
repnz
cmpsl
xchg
popf
shlb
push
loop
pop
inc
add
es
ja
arpl
gs
outsl
mov
test
movsb
fldcw
movsb
mov
loopne
aaa
movsb
push
sbb
push
sub
jnp
fadds
xor
add
mov
leave
xor
adc
add
mov
loopne
pop
hlt
push
rcr
into
bound
pop
inc
push
push
jle
push
lds
mov
mov
adc
shrb
push
xor
push
fwait
ss
out
shrl
xchg
add
xor
adc
pop
pop
leave
cmp
xor
mov
jmp
test
clc
mov
or
popl
xor
cli
xor
rcrb
out
rcr
icebp
inc
xchg
outsl
jo
jmp
mov
adc
jo
push
jno
xor
mov
and
sub
js
data16
pop
pusha
ret
jl
pop
cmpl
lds
int
push
inc
fnsave
jecxz
mov
mov
idiv
push
pop
push
inc
leave
cmp
fmulp
popa
sbb
xchg
fiaddl
cmc
push
jmp
dec
lds
push
adc
xchg
push
arpl
daa
xor
test
decl
mull
mov
push
add
xlat
nop
jne
iret
rol
mov
push
or
aad
pop
mov
xor
pop
in
sbb
call
sbb
loope
mov
sbb
xchg
dec
cmp
push
out
bound
xor
roll
stc
jl
sbb
ds
inc
test
popl
cmc
out
sarl
add
fstps
les
push
loopne
xor
test
adc
roll
out
fisubl
inc
fcoml
cwtl
ja
xor
pop
call
ljmp
sbb
mov
mov
ud2
repnz
ljmp
insl
jecxz
lahf
xor
fldl
push
aas
push
xchg
les
or
call
jb
jo
add
movsl
aaa
loopne
mov
lret
cs
pop
out
sub
push
inc
xchg
xchg
arpl
aad
or
mov
or
dec
jge,pt
adc
inc
out
push
flds
jns
or
sbbb
pop
mov
mov
int3
mov
ja
imul
pop
inc
lret
cmp
clc
loopne
je
jge
mov
dec
adc
into
enter
push
test
adc
adc
and
fsubl
fwait
add
mov
mov
jl
sbbl
jne
push
mov
adc
add
jp
sub
pushf
insb
in
jmp
mov
int3
and
in
hlt
ret
rol
jecxz
xlat
int
sub
or
cmpsb
imul
ror
mov
jl
mov
mov
adc
dec
xor
add
jb
cmp
push
shlb
dec
scas
shll
aaa
mov
sar
jp
aaa
rclb
sbb
mov
scas
mov
add
cltd
add
mov
jecxz
xor
jg
pop
sbb
cmc
jno
mov
mov
mov
adcl
aas
call
in
daa
mov
add
adc
call
mov
and
addr16
popa
shll
push
jl
pand
mov
incb
fidivrs
mov
das
ljmp
xor
gs
test
outsl
icebp
adc
leave
pop
mov
lcall
jno
cmp
or
xor
ret
mov
cli
enter
mov
push
lea
sub
cmp
rorl
stos
cmpl
lahf
sub
xchg
dec
mov
mov
and
mov
mov
lret
mov
adc
push
mov
cmpsl
out
adc
les
scas
out
pop
fwait
push
sbbb
loope
test
pop
icebp
cli
cmpsl
xor
or
and
xchg
js
xor
xchg
iret
mov
int
push
xchg
sub
inc
xorb
dec
cmp
pop
in
test
push
shl
shrl
jnp
pop
sbb
dec
outsl
sbb
pop
inc
jae
in
push
mov
addl
add
jno
call
push
xchg
inc
bnd
lds
xchg
filds
sahf
mov
mov
in
loopne
outsb
add
push
lret
inc
jle
das
mov
icebp
les
adc
fcomps
test
and
adcl
jecxz
daa
push
xor
adc
flds
xchg
xor
in
lock
lods
popf
loopne
mov
sti
sub
push
inc
mov
addb
lods
fbld
js
mov
cmc
out
cmp
es
es
js
xor
jns
aad
lds
inc
jo
mov
jb
push
dec
xchg
cld
in
xor
jg
stos
adc
xor
lret
insl
sti
jne
stc
push
sbb
movsl
xchg
mov
jge
scas
xor
mov
push
sub
xor
mov
popa
lahf
push
mov
stos
cmpsb
pop
sahf
stc
inc
xchg
inc
test
pop
inc
inc
imul
cltd
and
repz
or
pusha
test
or
xchg
js
jle
jg
jp
sti
or
dec
rcrb
push
shr
adc
adc
lret
xchg
jl
cmp
add
xor
dec
xor
clc
repnz
js
xlat
scas
pop
dec
mov
aad
inc
push
test
out
mov
fldl
sbb
pop
in
pop
add
pop
je
push
adc
add
push
xchg
add
xor
fidivrl
or
pop
xchg
scas
fcoml
sbb
mov
dec
cli
in
mov
jno
push
xchg
cmp
xchg
or
mov
mov
lds
repz
jmp
es
inc
stos
jae
std
or
add
loop
div
xchg
insl
andl
jge
fidivrs
mov
movsb
lcall
test
ret
hlt
dec
insb
pop
jg
xor
jecxz
mov
adc
icebp
push
add
outsb
loop
mov
dec
and
mov
andb
pop
mov
mov
mov
sbb
mov
mov
imul
add
dec
scas
mov
push
xor
adc
mov
or
sbb
gs
jnp
sarb
jae
pop
cmpsb
test
imul
rcll
lods
loope
shlb
sbb
add
mov
jbe
stc
sbb
xchg
xor
subb
jle
push
lds
cltd
popa
xor
inc
shr
pop
mov
mov
mov
scas
and
dec
mov
leave
cwtl
lea
cmp
repnz
in
cli
adc
test
stc
daa
xor
les
gs
subb
test
jb
xchg
mov
aaa
mov
mov
les
bound
fucom
sbbl
xchg
std
jb
and
inc
loope
cli
cmpsl
out
xchg
xchg
pop
xchg
jbe
or
test
sub
or
jp
shll
cli
xchg
inc
scas
add
xchg
cmp
cmp
out
repz
inc
arpl
mov
or
lock
push
mov
push
in
sub
in
movsl
fists
popf
and
aas
mov
div
mov
imul
adc
pop
test
loop
mov
in
sahf
cli
fisubs
aaa
scas
sti
cmp
or
xchg
xchg
mov
out
push
sti
add
das
js
xchg
clc
mov
mov
sbb
outsl
xor
arpl
js
push
cwtl
cmpsl
mov
sarb
or
cmp
into
or
push
fadds
pop
sbb
xchg
adc
popf
sti
cld
jecxz
mov
repz
je
jle
mov
jg
add
sub
cmp
movsb
decl
sarb
flds
sbb
sbb
mov
push
clc
addl
shl
and
loopne
pop
adc
orl
stos
pop
lcall
ds
inc
or
enter
cmp
in
lret
mov
xor
mov
mov
cmpsb
stc
sub
int
xchg
add
jg
clc
jbe
mov
jecxz
cmpsl
loop
sahf
repnz
bound
ss
sbb
xchg
shl
mov
adc
in
imul
mov
push
std
lods
shrb
jp
data16
jecxz
jo
pop
push
leave
ljmp
sti
loope
cmp
cmp
jno
push
daa
push
push
mov
aad
xchg
cli
notb
push
inc
mov
sub
adc
sub
fldcw
sbb
iret
mov
mov
mov
mov
out
xor
clc
insl
cli
ljmp
xchg
hlt
call
pop
push
sti
movsl
add
cli
mov
mov
fldcw
jp
jne
pusha
movb
adc
push
shl
pop
nop
sub
lahf
mov
sbb
push
fiadds
cmp
hlt
in
rorl
das
mov
mov
mov
dec
push
xchg
xor
pop
sub
add
cs
pop
cmp
or
xchg
test
pusha
push
call
xchg
out
repnz
nop
cmc
shr
inc
mov
fwait
movsb
mov
shr
and
inc
sbb
xchg
jp
push
xor
repz
data16
popf
add
pand
add
enter
arpl
iret
sbb
movsb
cmpsl
das
stos
pop
xor
les
in
add
cmpsl
std
stos
clc
push
sbb
leave
jno
inc
adc
inc
jae
and
jae
das
outsl
into
jmp
pop
jmp
pushf
lds
sub
ja
lcall
sahf
mov
out
mov
jnp
js
nop
je
arpl
jge
lock
pop
fcmovnb
fs
ds
pop
push
mov
xor
dec
mov
push
mov
movsb
adc
cmpsb
sbb
mov
lcall
jne
cltd
sbb
mov
lea
jp
mov
xchg
cli
into
mov
fcoms
addl
mov
cmc
in
push
adc
aas
mov
pusha
jg
xlat
xor
test
mov
clc
sbb
mov
add
into
lret
ljmp
repz
xor
or
mov
movsb
test
push
and
int
and
cmc
popf
cmpl
dec
int3
insl
cmp
aas
fdivrl
clc
sbb
sub
jbe
lret
fmuls
cli
and
mov
adc
arpl
ret
es
jle
repnz
push
sub
sub
cmpsl
push
out
mov
push
inc
sbb
fcmovu
push
inc
pop
es
test
xor
aaa
add
fs
push
out
cwtl
movsb
mov
pop
or
stos
aad
sbb
int
jb
test
mov
rolb
mov
clc
mov
in
adc
adc
shll
and
scas
in
and
and
aaa
lds
sub
jg
jmp
mov
inc
dec
test
imul
add
cltd
mov
push
add
push
in
icebp
out
push
in
lods
popf
pmuludq
sti
jecxz
add
popf
sub
test
xor
push
cmpsl
sbb
and
xchg
dec
mov
outsl
xchg
adcl
fcoml
movsl
test
jecxz
pop
into
jb
iret
push
in
mov
mov
loope
repz
repnz
dec
push
mov
repz
mov
insb
lahf
mov
sub
mov
add
lods
xor
jecxz
add
sub
jl
loopne
std
fnstenv
out
sbb
lds
imul
or
add
rcl
mov
repnz
dec
cmpsb
jbe
add
sub
pop
pusha
test
test
mov
push
stos
adcl
rcr
sbb
pushf
fs
pop
loopne
stos
push
xor
outsl
sbb
in
mov
imul
clc
jge
pop
pop
or
sbb
shrb
daa
xorl
rcr
cld
pop
movsl
cmpsb
pop
sahf
clc
sub
push
movsl
mov
and
jg
call
mov
or
add
inc
aam
mov
ds
cmp
xlat
mov
lcall
fwait
add
inc
adc
mov
mov
pop
xchg
add
sub
aad
inc
iret
loop
gs
idivl
js
dec
inc
or
aam
cmpsb
or
aam
xchg
sar
and
xchg
jl
sbb
cli
sub
shl
andl
clc
ret
stc
cmp
out
push
add
dec
lock
aad
js
xchg
fisttpl
or
in
add
addr16
decb
fwait
sbb
and
mov
mov
inc
mov
sub
hlt
out
fwait
push
int
loop
and
inc
sti
and
sub
cmp
pop
push
pop
xor
mov
repnz
dec
inc
cmp
aas
aad
pop
or
dec
mov
xchg
adc
inc
lods
ljmp
shlb
mov
and
insb
fwait
gs
std
cld
js
cwtl
jp
imul
xchg
jo
xor
jnp
xor
inc
shlb
sahf
mov
mov
dec
jp
inc
cmc
inc
and
push
iret
mov
jge
int3
in
mov
in
adcl
popf
inc
jns
jl
mov
int
cmpsl
push
pop
les
jge
mov
hlt
iret
dec
mov
push
clc
mov
xchg
out
xchg
sbb
das
pop
clc
sub
sbb
call
sbb
notb
fidivs
xor
stos
repz
lods
test
ret
push
ret
movb
or
lret
xchg
adc
jnp
mov
or
insb
inc
aas
inc
jmp
push
mov
inc
lock
jmp
mov
out
add
mov
sbb
mov
mov
rorl
fs
push
pop
cmp
adc
enter
jb
jle
scas
adc
movsb
adc
push
leave
adc
xor
pop
shll
pop
push
jmp
mov
cmp
add
call
inc
or
and
inc
pop
insl
sub
xchg
sbb
mul
in
and
ret
adc
lea
aaa
pop
sbb
rcll
fs
popf
roll
push
ja
push
mov
test
push
and
sti
js
sub
and
pop
cmp
jno
mov
and
mov
call
std
cli
dec
jb
add
jns
mov
pop
movsl
in
repnz
add
pusha
xorl
stos
and
inc
in
pop
popa
fcomi
mov
repz
xor
sbb
pushf
aaa
push
pop
dec
addr16
adc
rol
ret
cld
push
mov
ds
cmp
aad
xor
mov
std
mov
mov
or
push
pop
ds
pop
lea
pusha
enter
sub
dec
lds
xor
fildl
add
xchg
out
xor
push
pusha
mov
mov
js
inc
jl
mov
aam
ss
sbb
push
adc
dec
shrl
push
test
loope
movsb
pop
sahf
pop
cmp
push
inc
push
mov
lea
stos
mov
packsswb
inc
sti
pop
push
mov
pop
inc
loop
cmpsb
movsl
sbb
insl
lahf
dec
lods
out
dec
sub
fistpl
sti
mov
pop
lds
pop
add
shrb
enter
test
xchg
outsb
sub
in
inc
dec
pop
jmp
fdivl
enter
cli
jns
xchg
inc
cli
and
nop
aam
popa
jge
je
hlt
jecxz
cmp
in
xor
int
aaa
xchg
jmp
mov
push
sbb
adc
sbb
xor
cmp
cmp
pusha
fldl
stos
and
pop
pop
bnd
sbb
into
sub
jmp
aam
or
fidivrs
fwait
pop
bound
cmp
insl
inc
xor
pop
outsl
sbb
ror
xchg
inc
inc
pop
push
scas
xchg
mov
test
adc
into
sbb
sbb
mov
sub
jg
adc
adc
shll
mov
les
loopne
pop
cmpsl
mov
and
pusha
jnp
popa
out
or
in
pop
imul
fisubl
sti
push
mov
fwait
xor
stos
mov
ds
loopne
or
xchg
fisttpl
adc
xor
and
insb
pop
outsb
xchg
jle
fisttpll
mov
in
adc
pop
jbe
xchg
daa
mov
push
pop
jmp
push
push
adc
dec
jbe
sbb
stos
das
fisubrs
orl
pop
jl
rcrl
sub
lret
mov
jp
popf
pop
jb
in
es
adc
imul
clc
lahf
fcoml
jae
mov
fmul
daa
xchg
pop
dec
push
and
test
cmpsb
insb
push
cmc
cmpsb
cmp
mov
cmp
lahf
pusha
movsb
shll
nop
icebp
call
xchg
inc
fbstp
pop
insl
stos
es
add
push
fldcw
mov
inc
fists
jl
int3
test
mov
sub
pop
ljmp
pop
inc
sti
aaa
mov
out
push
cltd
out
pop
aas
addl
mov
fistl
fadds
pcmpeqw
test
pop
mov
jecxz
cmp
mov
pop
mov
push
popa
fmul
push
lds
cmpsl
adc
in
out
pop
mov
or
and
cltd
pop
out
lods
shll
out
fs
gs
add
popf
mov
mov
push
push
ret
sarb
mov
ja
fidivl
pop
push
mov
icebp
lods
dec
and
ret
rorb
clc
cmp
pop
mov
or
push
repz
cmp
pop
cltd
push
inc
adc
fnstsw
mov
pop
xlat
in
add
dec
adc
xchg
nop
cmp
add
ss
clc
dec
icebp
push
cmp
scas
pushf
imul
add
test
sbbl
lock
mov
jg
push
sbb
mov
adc
movsl
adc
lret
cmpsb
adc
movsl
pop
out
mov
test
mov
repnz
es
int
cmp
push
mov
lock
lahf
and
sbb
pop
test
mov
inc
mov
in
xchg
mov
out
cmp
cmp
lods
push
dec
lahf
adc
dec
adc
int
add
stos
in
getsec
mov
mov
push
outsb
mov
mov
mov
xor
pusha
xor
imul
lret
lds
jae
ret
fadds
repz
roll
adc
dec
repz
iret
ds
xor
pop
repnz
stos
jp
inc
mov
mov
or
popa
arpl
shlb
inc
jl
cmpsb
push
les
mov
xchg
cmp
mov
mov
xchg
or
inc
sti
fiaddl
or
cs
mov
add
and
xchg
push
mov
and
jle
jmp
mov
adc
sbb
ror
push
int
out
or
adc
cltd
inc
mov
sbb
test
or
sub
pop
cwtl
pop
mov
adc
nop
jns
add
test
pminub
in
jp
adc
mov
fwait
xchg
ja
js
out
leave
dec
es
jmp
xchg
cld
dec
mov
sbb
sbb
sub
push
daa
xchg
dec
push
sbb
or
inc
mov
mov
xchg
pop
mov
lods
inc
jnp
dec
rcrb
inc
ret
adc
stos
hlt
fadds
loope
pop
mov
mov
fcompl
sbb
ss
mov
orb
out
pusha
enter
xchg
inc
lock
cmp
fnstcw
outsb
push
xchg
jmp
loopne
or
scas
rolb
repz
fiadds
sti
xchg
add
nop
stos
lret
fsubp
mov
mov
lcall
push
fwait
dec
mov
and
fwait
sub
jg
insl
add
inc
sub
arpl
xchg
inc
sbb
dec
add
jp
dec
sub
scas
rolb
mov
xor
and
rcll
js
xor
cld
sub
loopne
dec
inc
insl
sub
xchg
sub
push
and
sbb
mov
cwtl
push
into
shlb
adc
sbb
in
insl
push
jbe
cmpsl
add
lret
or
inc
test
pop
out
fisttpll
dec
jl
add
inc
les
das
pop
jne
pop
iret
fcomps
aaa
xorl
sbb
mov
sbb
repz
pusha
fiaddl
lods
out
mov
push
clc
rcrb
and
push
rcrb
xchg
mov
in
and
and
and
push
dec
mov
mov
and
das
icebp
jl
add
js
loop
arpl
daa
ds
sbb
push
xor
in
lods
mov
xor
push
xchg
fbld
xor
cmp
out
push
cmp
inc
push
pop
cli
test
xor
mov
sahf
jle
inc
fistpll
or
push
fmulp
negl
cld
or
rcll
or
cmp
imul
scas
xchg
movsl
jp
lcall
das
mov
lret
inc
and
ror
dec
sub
push
loop
xchg
shrl
mov
out
cmp
pop
cmpsb
push
push
inc
dec
dec
roll
push
jo
push
stos
lret
scas
add
sbb
inc
inc
std
mov
xor
push
add
ja
or
xor
enter
dec
xchg
rcll
jecxz
call
ss
popf
ret
scas
fcomps
inc
xchg
mov
sti
std
lcall
xor
or
jae
ljmp
out
lock
sub
cmp
imul
jno
push
cld
and
clc
sub
pop
imul
lahf
xchg
mov
lret
add
sub
call
mov
pop
mov
mov
mov
xchg
gs
jo
jo
cmc
dec
mov
hlt
inc
loopne
xor
pop
test
mov
sar
rolb
cmovb
or
std
dec
data16
or
dec
push
fs
jb
shll
push
movsb
xor
inc
cmp
mov
mov
xor
aas
cld
mov
sub
rcll
ljmp
mov
popa
out
cld
fstpt
into
mov
mov
jl
test
pop
sub
mov
add
sbb
jg
aam
outsl
les
dec
pop
push
testb
pand
mov
in
pop
scas
scas
sbb
xchg
add
pop
or
repnz
ret
stos
mov
mov
std
ret
push
repnz
cmpsl
cmpsb
add
dec
sbb
mov
jmp
lea
adc
insb
and
das
or
icebp
outsb
aam
mov
xchg
mov
div
in
jl
push
mov
icebp
inc
sahf
mov
add
lods
lds
or
out
es
shrb
mov
inc
and
popf
xor
sub
inc
gs
xchg
mov
data16
dec
xor
daa
sbb
enter
pop
add
mov
add
add
xchg
arpl
push
xor
fwait
js
add
fwait
movsb
lods
mov
xor
mov
out
lret
jle
das
xchg
push
push
mov
sub
dec
fwait
xchg
cmp
mov
enter
addr16
jb
imul
test
fwait
xor
icebp
cld
xchg
test
test
sbb
andb
pop
xchg
fcmove
mov
jl
pushf
stos
push
xchg
jno
mov
imul
xchg
insl
and
bound
or
jbe
cmp
mov
add
fwait
stos
aas
fs
pushf
xchg
lcall
fidivl
test
stos
lods
push
das
mov
lret
out
insl
popf
daa
es
jbe
mov
stos
in
cld
xchg
addr16
popa
aas
popa
int3
dec
std
data16
test
adc
jmp
jae
pop
aas
sub
push
or
mov
mov
sub
std
inc
dec
jbe
add
dec
jp
jno
pop
inc
fimuls
push
mov
jecxz
pop
fwait
sbb
std
mov
addr16
rclb
jecxz
adc
or
ss
divl
sbb
xchg
xor
clc
sti
xchg
subl
cmpsl
mov
push
sub
pop
testb
jp
pop
pop
test
hlt
sbb
jp
mov
cmp
xor
cmpsb
aad
push
loope
call
xor
test
jae
adc
jns
das
push
or
jecxz
mov
insb
sub
imulb
xlat
leave
or
and
sbb
xchg
enter
xor
mov
ja
inc
cmp
adc
cmp
jne
in
jo
out
popf
adc
pop
jl
push
inc
lcall
popa
cli
pop
arpl
out
es
mov
addl
mov
add
and
pop
pop
push
fistpl
push
int
and
mulw
pop
dec
int
fidivrl
fisttpl
cld
add
xor
mov
xlat
sub
lret
enter
das
iret
stos
pop
mulb
ret
mov
cmp
out
jle,pn
cmpsl
mov
movsl
mov
xchg
dec
ljmp
pop
orb
inc
mov
lock
mov
mov
andb
pop
sbb
stc
scas
lock
ja
cmp
das
into
or
sub
sti
daa
mov
dec
sub
jno
inc
xchg
clc
mov
xlat
adc
clc
jne
adc
jnp
testb
xor
pop
loop
lods
int3
mov
jbe
push
sbb
cmpsl
or
mov
and
mov
int
adc
lahf
pop
xchg
rcrb
arpl
test
cmp
fnstenv
adc
dec
mov
inc
pop
in
push
xor
jl
dec
mov
aam
insl
fbstp
jnp
in
mov
fildll
cmc
push
mov
dec
or
xorl
jl
xchg
pushf
ljmp
mov
je
out
sbb
inc
sub
sub
iret
jmp
mul
mov
fimull
mov
push
rcrb
add
cmp
push
inc
fnstcw
ss
rcrb
adc
and
imul
or
jle
jl
or
push
inc
sbb
aam
out
aas
aaa
test
frstor
enter
jp
call
sbb
pop
shr
repz
sub
jne
out
lahf
or
inc
jl
cmp
into
push
clc
mov
jo
adc
test
rcrb
adc
xchg
orl
inc
inc
js
out
pushl
int3
les
pop
clc
pop
sbb
sti
mov
mov
repz
lcall
in
mov
mov
jbe
addr16
fnstsw
jbe
neg
push
mov
push
int
and
cmp
scas
cmpl
mov
xchg
pop
cld
add
or
push
mov
pop
mov
jo
inc
xchg
mov
imul
sbb
das
movsl
lahf
mov
testb
push
xchg
pop
sub
lods
mov
xchg
bound
fisttpl
mov
jae
int3
lods
push
adc
test
stos
mov
imul
sub
orl
ljmp
negl
fildl
sbb
xchg
mov
pop
dec
aam
pop
jecxz
insb
xor
fcoms
addl
in
push
mov
idivb
movsl
jge
ds
cmp
mov
ffreep
xchg
imul
cmp
jecxz
jge
jp
shlb
pusha
in
frstor
jno
and
lret
jl
arpl
mov
xor
push
cmp
jne
sub
mov
push
scas
ss
leave
int3
out
push
mov
pop
pop
dec
push
cmpsl
shll
xor
in
sub
xlat
das
sub
add
inc
hlt
scas
loop
inc
and
lret
push
mov
gs
fs
sub
adc
pop
cltd
add
cmpsb
into
loopne
int3
rolb
inc
jo
xor
mov
add
add
inc
sbb
jl
xor
shl
adc
movsl
dec
in
lcall
cpuid
cmpsb
inc
scas
pop
sbb
and
push
push
sub
fwait
pushf
or
add
mov
into
push
xchg
cs
int
movsb
add
stos
dec
mov
mov
les
in
add
rorb
add
mov
js
les
adc
sub
out
inc
int
enter
test
mov
push
std
mov
popf
mov
mov
cmp
or
das
add
adc
adc
and
inc
in
sub
xchg
inc
cwtl
gs
add
arpl
ret
btcl
lret
sbb
push
xchg
xor
cmp
sub
or
outsb
loopne
loop
ficompl
subl
mov
sbb
or
cli
jno
std
mov
insl
insb
xor
lret
xlat
jmp
loop
and
sbb
jbe
cmp
cmpsl
adc
repnz
cld
jmp
imul
adc
rcrb
out
jge
mov
addr16
cmpsb
shlb
movsl
mov
pop
daa
sub
scas
data16
pop
icebp
lods
mov
jle
xor
pop
repnz
jl
mov
mov
out
data16
add
outsl
insl
stos
fucomip
mov
xor
inc
imul
aad
add
adc
pop
and
out
mov
push
mov
pop
jno
aas
nop
dec
jp
inc
icebp
and
jbe
scas
inc
in
inc
xchg
imul
pop
add
insb
adc
inc
shll
jo
mov
lds
hlt
mov
popf
shll
or
xor
addr16
clc
and
call
adc
adc
inc
sbb
or
ljmp
fwait
jae
lock
and
lea
dec
jns
les
sbb
mov
decb
pop
orl
sub
roll
js
pop
shrl
imul
xchg
fisubrl
mov
std
jns
mov
mov
and
mov
pop
adc
jle
pop
jno
jmp
test
mov
or
icebp
mov
mov
int
ja
pushf
xor
dec
jbe
fs
test
fs
mov
ret
sbb
es
mov
mov
jmp
arpl
cld
ds
pop
mov
test
mov
shr
lods
inc
fiadds
mov
xchg
icebp
cmpsl
sub
in
std
ss
out
xlat
repnz
jecxz
js
dec
jb
cmp
es
aam
aam
mov
test
ss
inc
or
clc
jmp
rorl
sahf
pushf
clc
inc
fbstp
clc
jle
mov
push
leave
xchg
add
mov
imul
test
dec
and
roll
into
xor
insl
mov
fnsave
add
push
cld
fldln2
movsb
jp
sbb
sbbb
push
sar
cli
lock
outsb
push
int3
sbb
nop
dec
aas
popf
cmp
and
cmp
aam
loop
mov
sahf
cmp
fimuls
or
int3
arpl
adc
cmp
dec
leave
into
clc
add
xlat
and
in
dec
xor
mov
loope
pushf
mov
mov
gs
sub
inc
mov
adcl
loope
int
xchg
into
sbb
jno
shll
add
fstpl
push
into
faddl
mov
insb
or
in
iret
jae
pop
fsubrs
scas
jne
cmp
xchg
movsl
out
dec
test
inc
mov
xor
pop
adc
lea
add
push
pop
inc
jecxz
jecxz
mov
dec
test
mov
js
push
test
pop
js
pusha
out
scas
stc
cmp
mov
cltd
out
jae
jno
andl
hlt
xchg
mov
xchg
mov
fs
add
jmp
loope
sbb
inc
fdivr
lds
les
jne
mov
pop
js,pn
mov
scas
pop
xchg
lahf
jbe
sbb
insb
filds
push
or
adc
and
icebp
jge
clc
pop
subl
test
fisubrs
rclb
xchg
pop
mov
jne
inc
pop
stc
in
jg
enter
or
in
out
popf
cli
inc
mov
sbb
testl
push
loop
cmp
sbb
sub
nop
or
cmp
dec
push
je
inc
cmp
mov
cmpsb
add
mov
mov
in
rcrb
je
push
or
pop
and
test
xchg
ja
movsb
mov
and
and
mov
aad
movsb
mov
jmp
hlt
rolb
or
pop
bound
dec
hlt
cwtl
mov
sarb
icebp
and
jno
pop
popa
fwait
out
pop
cld
repz
pop
adc
cmp
fwait
clc
and
es
cwtl
xchg
adc
stos
mov
icebp
dec
or
xor
ljmp
ret
xchg
int3
jb,pn
mov
aam
orb
dec
fcoms
sub
jno
xor
pushf
rclb
fs
jne
cmp
cmp
enter
sbb
inc
test
mov
pushw
mov
xlat
mov
push
dec
dec
rcr
mov
xchg
js
xlat
les
loop
push
sbb
dec
movsl
sahf
js
dec
in
inc
ljmp
jge
rorb
loop
or
jge
adc
aad
sbb
fdivr
cmp
and
fisubs
inc
inc
stos
ret
mov
push
and
sub
sbb
pop
mov
and
xchg
aaa
clc
sub
push
in
aas
iret
or
cmp
sbb
cli
add
push
or
out
dec
stos
or
lea
mov
sbb
jno
pop
cli
pop
jp
out
mov
mov
inc
mulb
xchg
ss
xor
pusha
ss
inc
fstpl
test
or
pop
mov
xlat
push
jle
dec
jne
push
outsl
dec
lea
js
sbb
inc
dec
mov
hlt
mov
insb
stos
pop
arpl
cmp
pushf
das
in
jl
rcrb
sbb
fcomi
pop
sarb
push
sbb
sub
inc
push
push
test
in
mov
or
adc
leave
mov
add
fistl
pop
sbb
xchg
shrb
cmpl
or
jl
in
push
stos
fbld
rcl
ja
iret
push
or
lods
xlat
fcmovb
test
popf
cmp
adc
jl
mov
lret
std
imul
cli
pop
out
cmp
aad
testl
invd
cltd
cmp
mov
and
arpl
fnstcw
inc
lret
mov
dec
cmp
sbbb
test
into
testb
negl
fisttps
add
aas
xor
loope
pop
leave
push
outsb
add
mov
mov
push
enter
cmpsl
das
arpl
fs
and
stos
fsubl
cltd
aad
lock
in
inc
mov
repz
jbe
mov
cs
out
movsb
pop
adc
pop
rcr
add
push
sbbb
adc
pop
dec
jmp
fstpt
daa
jae
loop
popf
pop
pop
lret
push
xchg
test
pusha
cmp
stc
int
adc
test
mov
mov
addr16
push
xchg
nop
adc
sub
pop
cmp
jbe
pushf
pop
mov
jl
xor
leave
xchg
jne
cmp
pop
pop
push
xor
inc
ret
and
js
stos
inc
lret
test
std
test
mov
xchg
xor
xor
or
and
ret
repz
cmp
lods
add
lds
cmpsb
inc
fdecstp
sbb
ja
jg
push
fsts
fidivrs
stos
sub
or
ss
cmp
imul
fmuls
mov
or
fcomps
ss
or
je
inc
cmpsl
add
push
cmpsb
mov
cmc
mull
xchg
and
repz
int
shrl
mov
fcmove
mov
mov
dec
jmp
and
lods
jnp
call
stos
xor
mov
sbb
bt
stos
mov
inc
mov
adc
mov
xchg
mov
sahf
popf
pushf
int
rolb
lahf
jecxz
jbe
notb
xor
push
mov
pop
inc
pop
inc
in
mov
add
outsb
fs
and
xchg
jne
mov
ja
mov
jp
sub
lcall
jg
cli
push
mov
sbb
inc
mov
push
pop
push
or
cmp
or
mov
aas
shl
loop
xchg
mov
subl
and
andl
pop
sub
jl
add
mov
xor
lock
xor
outsl
pop
inc
dec
roll
or
incb
loop
adc
cmc
out
lods
xor
inc
mov
cmovae
or
mov
ss
and
int3
mov
gs
test
cmp
stc
imul
in
stc
cmp
enter
ss
xor
xlat
pop
imul
push
jl
mov
sahf
push
add
rcll
mov
xchg
push
add
test
dec
popa
orl
fcmovnb
dec
fisttps
xor
pop
inc
inc
push
bound
rcll
add
std
push
cmp
imulb
or
lock
push
inc
mov
arpl
xchg
jno
inc
jp
cli
pop
pop
xlat
xchg
nop
and
data16
cs
icebp
lahf
lods
rorl
inc
repz
xchg
dec
stos
iret
push
push
cwtl
mov
xlat
sbb
lret
scas
sbb
inc
stc
cs
mov
lock
and
inc
iret
ds
push
mov
push
subb
jbe
outsb
and
mov
mov
add
sbb
lea
pop
xorl
pusha
into
scas
stos
mov
sub
call
jae
lret
test
or
inc
scas
adc
fbld
jmp
lds
flds
nop
shll
lret
das
daa
les
mov
je
movsl
xchg
push
data16
mov
mov
inc
leave
insb
dec
idivl
outsb
sbb
add
xchg
daa
pop
mov
ret
mov
sar
outsl
jno
mov
sub
jo
test
loop
pop
roll
mov
insl
and
dec
mov
rclb
mov
loop
dec
into
pop
std
or
pop
sbbl
in
pop
push
jbe,pn
mov
sub
xlat
mov
int
lahf
fsubrl
out
cld
mov
cmp
xor
inc
shlb
push
add
mov
fwait
adc
imul
mov
sahf
imul
cmp
in
add
ret
lock
cmp
fcoml
pusha
fs
jns
cmpsl
leave
or
xor
popa
aam
stos
cs
int3
pop
xor
pusha
nopl
xchg
push
stos
xchg
scas
xlat
mov
stos
aad
xchg
pop
ss
mov
stos
call
notb
fstps
sub
jecxz
es
pop
into
jno
xchg
adc
inc
pop
cmp
shll
xchg
arpl
jo
add
scas
add
test
jb
fadds
jns
in
push
lretw
jecxz
or
lods
hlt
push
cwtl
lldt
les
dec
scas
xor
insb
or
lret
or
xor
push
push
arpl
lods
pop
adc
enter
aas
aam
fimuls
mov
addb
sbb
dec
lret
push
aad
adc
mov
test
sub
adc
or
test
dec
dec
mov
loope
dec
inc
add
mov
icebp
js
push
mov
push
inc
ds
push
adc
jne
loop
add
jne
shrb
dec
pop
xchg
aaa
mov
xor
sub
cs
and
cld
sar
cmpb
pop
sti
sub
mov
sbb
test
adc
sbb
push
add
add
fstpl
jne
cmp
shrb
iret
and
subl
lods
inc
jo
push
mov
and
fnstenv
add
dec
xor
mov
jno
ss
and
lods
jmp
roll
or
fisubl
scas
es
xchg
inc
das
test
mov
jbe
je
mov
pop
ficomps
repnz
dec
cli
push
std
add
push
and
jecxz
xor
aas
jecxz
sbbb
scas
dec
push
lahf
cs
pop
add
mov
sub
mov
ret
repz
push
bound
cld
push
arpl
daa
orl
stos
jns
mov
adc
push
or
sub
and
push
sub
sbb
mov
rol
scas
fists
sub
mov
bound
xchg
mov
lock
fistps
call
loope
mov
mov
adc
push
std
negb
push
push
dec
mov
xchg
roll
stos
mov
inc
test
and
fcoml
mov
add
mov
leave
xor
or
movsb
mov
shl
popa
jp
jecxz
adc
xor
xchg
popa
inc
inc
jmp
push
pop
pop
bound
cs
xchg
loope
mov
in
dec
sub
movsb
aad
mov
ljmp
push
sbb
jp
push
adc
xor
push
inc
aas
cmp
or
jnp
lahf
hlt
push
mov
icebp
inc
test
pop
je
add
push
xchg
mov
shll
add
xchg
mov
push
je
push
jno
pop
test
adc
jge
add
imul
sub
xor
mov
sahf
jg
andl
orl
lds
mov
xor
or
xor
mov
xchg
iret
ret
xchg
into
xor
xchg
data16
rclb
mov
pop
add
icebp
mov
data16
mov
xchg
xchg
mov
push
push
int3
inc
stos
adc
jle
cmp
mov
push
stc
push
jle
movsl
test
pop
sub
popf
insb
cmp
mov
loop
sarb
jle
jecxz
das
add
repz
xlat
cmpsl
and
sub
lahf
or
pushf
and
scas
push
adc
ds
xchg
cmc
push
xchg
cmp
push
std
jne
popf
xchg
rcl
leave
dec
and
int3
movsb
sub
lock
addr16
and
jge
sbb
ja
add
ret
insb
stos
pop
jo
mov
add
mov
inc
inc
pop
mov
and
push
mov
add
push
mov
in
sub
jns
ss
pop
mov
mov
ljmp
and
imul
pop
repz
mov
bound
insl
mov
into
sbb
lret
lds
rcrb
sub
lea
push
inc
jo
dec
data16
jbe
lret
cmp
push
movsl
test
push
in
and
pop
jnp
pop
cmp
adc
push
fdivl
test
loope
inc
sar
jmp
xor
sahf
sub
fisubs
ja
roll
pop
js
lea
js
dec
out
mov
or
fidivrl
es
inc
enter
fldt
and
cmp
lahf
movsb
adc
ror
fwait
pop
cld
mov
mov
pop
xor
sahf
pop
testb
lock
mov
push
xor
mov
sbb
mov
inc
lods
ja
add
mov
cld
mov
xor
jne
mov
outsl
fwait
lcall
ljmp
xchg
test
add
imull
je
mov
ljmp
dec
mov
push
aad
mov
sarl
cmp
push
sbb
mov
push
js
mov
pusha
jmp
rol
or
mov
jno
and
int3
xor
cmp
push
pusha
xchg
fstpt
push
push
scas
adcb
fdivrp
sbb
push
popf
shl
popf
out
in
add
fs
push
ja
cmp
dec
mov
pop
cmp
sub
sbb
fisubl
cmp
in
cs
ljmp
push
test
stc
shrb
fs
add
mov
cmc
int
into
outsl
adc
xor
pusha
je
hlt
jmp
repz
jl
cld
out
add
sbb
xor
inc
lds
arpl
stos
stos
gs
adc
xchg
and
adcl
adc
mov
call
pop
pop
aas
sub
stc
movsl
mov
fldcw
ds
negb
xchg
mov
or
outsl
bound
push
sub
in
xorb
addr16
cltd
xchg
lret
push
cmp
scas
dec
and
jb
scas
popf
lods
mov
xlat
push
loop
fimuls
psubsb
loope
inc
lahf
cli
push
jmp
mov
mov
shrb
mov
cltd
adc
jmp
out
add
or
pop
rcll
lret
fldl
lods
inc
adc
jae
fwait
scas
adc
ficomps
hlt
idiv
cwtl
in
ret
icebp
inc
cmp
scas
cmpsb
shrl
lods
aaa
add
aas
cld
inc
test
mov
lcall
jnp
inc
mov
cmp
pop
jge
loop
lods
cltd
pop
pop
dec
jl
shr
and
jnp
mov
pushl
cmp
cli
or
imul
and
mov
into
jp
sbb
into
push
adc
pushf
mov
push
jb
mov
inc
jl
insb
gs
dec
sub
adc
sub
std
add
inc
sti
dec
push
inc
cmp
fcoml
shl
and
sbb
xchg
sbb
xchg
incl
xor
movsb
sub
in
fstpl
iret
sbb
mov
inc
and
inc
inc
jle
icebp
aam
mov
jp
rcr
xchg
int
lods
jmp
sbb
aaa
sbb
jnp
mov
out
stos
lcall
lods
test
addl
jge
test
andl
leave
add
and
xchg
jne
and
sbb
outsb
mov
add
add
aas
mov
std
push
sahf
mov
icebp
test
loop
and
mov
std
cmp
xchg
adcl
stos
int
cltd
icebp
cmp
pop
loopne
leave
test
sub
cltd
and
dec
jge
jb
pop
rcrb
pusha
mov
scas
mov
xchg
imul
cltd
repnz
xor
xchg
sub
add
jae
push
xor
dec
push
shr
mov
popa
arpl
cmpsb
fcomps
pop
sbb
mov
mov
adcl
test
jg
in
inc
sub
stos
aam
lds
iret
shlb
stos
shrb
das
shrl
scas
xchg
sub
push
lret
stos
ret
leave
mov
movsb
xor
fisttpl
mov
xor
shrb
and
std
gs
add
jns
lret
fs
mov
inc
repz
sbb
jo
test
imull
cld
rcrb
pop
pop
es
cmp
and
fimull
xchg
push
push
cmpsb
mov
mov
dec
sbb
pop
aam
sbb
testl
ja
aad
je
aaa
pop
shlb
xchg
mov
mov
xor
dec
popf
jae
dec
roll
in
mov
in
fwait
cmp
div
adc
push
iret
es
pop
fsubl
jecxz
inc
mov
push
pop
bound
pop
jge
jg
rsqrtps
sbb
xor
daa
test
add
cmp
ss
add
loop
pop
lcall
pop
dec
aaa
bound
cs
arpl
inc
fidivrl
xor
and
dec
js
and
mov
cmp
mov
das
xchg
shl
cmp
add
aad
call
es
push
and
xchg
arpl
jns
and
sbb
iret
mov
sti
sub
and
ret
popf
xchg
xchg
aad
insl
sub
add
into
mov
cmpsl
xchg
push
xchg
ss
mov
data16
pop
sbb
stos
or
jge
mov
icebp
pushf
mov
cmp
pop
xchg
push
dec
mov
int3
movsl
adc
dec
xor
movsl
aas
mov
cmc
pushf
sub
js
push
mov
outsl
stos
cmpsb
scas
xchg
testb
sbb
lods
repz
pop
and
inc
push
push
imul
filds
xchg
jmp
xchg
pop
add
push
in
lock
sub
jmp
mov
push
and
pop
pusha
outsl
dec
mov
xor
pop
int3
cmp
sub
movsl
mov
std
xor
out
vmwrite
pop
adc
pop
dec
add
xchg
cwtl
xor
cli
dec
gs
and
adc
mov
adc
loop
fldcw
mov
jecxz
dec
and
lea
cwtl
stos
insl
lahf
jae
aas
mov
sub
movsb
fisttpl
test
xor
fisubl
sbb
inc
cmp
aam
cwtl
mov
push
cmp
push
insl
cmp
sbb
inc
inc
xchg
push
daa
test
pop
in
ljmp
lahf
lds
ret
hlt
adc
aad
inc
sahf
lret
or
mov
popa
adc
ret
xlat
xchg
cwtl
pop
loope
mov
and
aaa
loope
mov
and
inc
jno
push
sub
repnz
mov
mov
sub
cmp
jle
dec
rcll
dec
negl
ja
push
cmpsb
fdivl
jb
jae
leave
push
and
daa
outsl
addl
in
push
dec
fisttpl
shlb
adc
mov
cmp
dec
mov
scas
insl
pop
enter
lret
sub
push
inc
inc
or
test
ret
sub
pop
rcrb
cmp
ret
pop
inc
push
cmp
add
ss
sub
sub
xor
inc
xchg
mov
scas
push
fisubs
loop
pop
jp
xor
fs
pop
sbb
clc
cmp
int
adc
cmp
add
scas
cmpb
ret
xor
repz
loope
adc
jl
inc
hlt
fwait
xor
jmp
fildll
hlt
pop
out
and
and
sub
dec
std
or
sbb
mov
cmc
sbb
xlat
sbb
cmp
shrb
sub
and
cs
scas
stos
leave
jp
in
xor
mov
repz
sbb
pusha
jge
jge
sti
lds
stos
and
inc
rcll
iret
loopne
rorl
mov
push
xor
inc
out
inc
aaa
pop
loop
sbb
sub
outsb
fdivl
push
sti
aas
dec
and
push
ljmp
or
add
pop
cmp
into
push
adc
nop
jne
dec
ret
push
sbb
dec
lret
cmp
mov
pop
sbb
fsubrs
dec
mov
lods
clc
outsl
sub
and
cmp
repz
sbb
lods
lcall
cmp
xchg
and
sbb
inc
push
or
adc
dec
or
jl
cmp
cmpsb
cmpsb
cmp
adc
lret
or
jle
add
push
jecxz
adc
insb
ljmp
out
clc
cmp
test
or
mov
mov
frstor
dec
outsb
and
mov
and
mov
aam
les
sub
mov
lock
pop
adc
subl
or
insl
shlb
lods
push
jl
lea
pusha
jno
sub
push
out
in
cmp
stc
push
or
sbb
mov
xor
ljmp
sub
shlb
mov
mov
int
add
cmp
scas
addr16
fwait
dec
in
or
jg
clc
xchg
rcll
xchg
minps
jle
mov
bound
push
cmpsb
cmp
ret
fimull
in
lods
adc
mov
and
shll
insl
adc
je,pn
cs
repnz
jno
rorb
pop
or
cmp
fstpl
stos
add
or
or
pop
mov
out
sub
les
and
add
and
int3
xchg
jl
jne
xor
push
mov
push
dec
and
lods
and
add
jbe
jmp
mov
stos
inc
xor
xchg
mov
mov
icebp
imull
add
mov
rcrl
inc
ljmp
sbb
xor
cmpsb
or
mov
cwtl
sub
add
xor
int3
fisubrs
adc
jns
stos
jb
and
adc
inc
test
lods
adc
xchg
push
mov
cmp
xchg
in
inc
sahf
stc
fcoms
jle
outsb
cmp
hlt
mov
mov
sti
cmpb
xchg
in
pop
dec
in
or
push
icebp
test
jle
jl
push
out
rclb
lret
mov
cmpsl
push
scas
xor
mov
shlb
or
out
cmp
jne
mov
std
mov
popf
daa
sub
incl
icebp
fildll
jne
or
cld
cmp
testb
lods
rclb
jmp
fiaddl
pusha
mov
or
sub
xchg
and
sub
gs
xchg
sbb
xor
sbb
adc
lcall
les
adc
ret
fiaddl
xchg
lret
mov
push
es
lea
sti
jge
in
push
lret
pop
dec
dec
jo
ljmp
in
and
icebp
mov
into
gs
dec
push
daa
imul
call
or
or
sub
out
mov
in
in
testb
cmp
fadds
push
popa
outsb
dec
cmpsl
pushf
cs
mov
push
inc
xorb
ret
pop
imul
sbb
insb
bound
or
nop
pop
aam
shr
in
xor
xchg
pop
pop
push
ja
cmp
popa
and
xchg
imul
into
ja
jno
jo
pushfw
jp
lea
pop
call
fstpl
mov
rolb
ss
dec
in
orl
inc
and
icebp
xor
fstl
sti
inc
jno
rorl
dec
popa
ror
sbb
js
xchg
sub
dec
cmpsl
shl
cmp
stos
cmp
faddl
pop
add
bound
xchg
mov
sbb
hlt
les
jb
dec
cmp
movsb
imulb
fcmovnu
lea
push
test
or
into
jp
into
push
cmp
adc
test
sahf
or
repnz
stc
add
or
sbb
test
push
int
add
xchg
jne
adc
pop
insb
adc
lods
movsl
in
adc
insl
pop
jmp
outsb
mov
stos
test
lret
xchg
ds
je
pop
mov
adc
lock
push
pop
inc
mov
mov
inc
mov
les
jnp
sbb
and
in
jne
nop
adc
xchg
or
adc
mov
out
cmp
je
cmp
sub
cli
in
mov
adc
jle
test
test
test
fdivl
sahf
adc
lods
loope
dec
adc
outsb
mov
add
mov
mov
adc
fistpll
sub
xor
je
fisubrs
aam
mov
or
test
lea
movsb
insl
ss
mov
xor
mov
inc
cli
movl
ss
sub
mov
call
cltd
push
push
stos
inc
popf
sub
nop
movsb
inc
mov
push
mov
insb
mov
mov
cmpsl
add
insl
negb
sub
pop
sahf
gs
fidivs
repz
data16
ret
divl
dec
dec
les
pop
sub
xor
dec
mov
adc
out
jp
sbb
popl
out
xchg
pop
nop
fsubrl
fbstp
sbb
adc
sub
pop
loop
or
lahf
sub
ljmp
pop
or
jne
stos
lret
push
je
cmpsl
or
xor
cmpsb
sbb
sub
jne
lock
mov
movsb
lods
mov
icebp
xor
fcmovne
or
lcall
test
sbb
xor
enter
xor
mov
jb
mov
cmp
adc
mov
pop
add
insb
sbb
sahf
mov
add
test
jecxz
mov
rcl
mov
xorl
mov
cmpsb
dec
sub
icebp
pusha
cwtl
sarb
jle
xchg
jnp
mov
or
data16
or
mov
out
sti
xchg
mov
push
lahf
sbb
sbbl
idiv
lcall
mov
cmp
repnz
popa
cld
cmc
test
mov
daa
std
add
push
cmp
sar
mov
ds
xor
aad
enter
jp
sbb
cmp
and
int3
pop
lcall
push
icebp
inc
dec
jae
dec
lods
std
notb
xor
adc
loope
loopne
es
xchg
add
mov
or
arpl
jl
xchg
cltd
enter
inc
xor
and
aad
outsl
fisttpl
add
hlt
and
lea
jecxz
cmpsb
fldenv
pop
fnstcw
lret
or
movsl
cmc
lock
adc
mov
xor
mov
sub
les
pop
into
dec
fistps
ljmp
icebp
ret
lret
stos
fwait
arpl
xor
add
daa
xor
inc
push
jg
mov
xor
sbb
jmp
xor
fists
mov
cwtl
aas
adc
in
inc
xchg
or
sbb
shlw
pop
fucomip
push
dec
xor
lret
in
cmpsb
pop
cmp
mov
fnstcw
test
and
or
mov
andl
scas
adc
imul
push
in
test
and
outsl
loop
inc
imul
xchg
icebp
test
add
shll
scas
scas
fsubl
or
add
das
sbb
imul
int
movl
lods
ljmp
clc
ss
roll
push
inc
cltd
add
adcl
xchg
clc
jge
lock
fwait
in
sub
out
xchg
sahf
and
mov
xchg
repz
rcr
das
adc
add
pusha
or
push
cmp
add
cltd
cmp
jns
dec
out
cmp
fstpt
mov
xchg
xchg
xchg
jnp
scas
imul
add
loop
cltd
lret
ja
aad
mov
mov
mov
mov
movsl
push
fmulp
pop
fucomi
popa
push
xchg
push
int
add
inc
out
jae
push
adc
mov
inc
pushf
inc
pop
jecxz
sub
aad
loopne
gs
imul
xchg
mov
lret
dec
or
push
cmpsb
sbb
xchg
repnz
fdivrp
ret
hlt
pop
sub
insb
clc
out
jge
dec
push
jp
scas
push
mov
lcall
xor
pop
mov
xor
ja
or
push
repnz
pop
and
rcrl
dec
decl
sbb
push
sarb
mov
mov
dec
xchg
fdivrl
cmc
jmp
xchg
dec
lret
out
int3
aad
add
adc
xor
lcall
push
ror
mov
lcall
outsb
lcall
clc
push
cmp
xchg
out
add
sahf
lret
cmpsb
push
mov
xlat
std
inc
repz
jle
in
jmp
div
dec
fidivs
cmpsb
or
out
pusha
nop
xchg
stc
or
xor
lods
jmp
repnz
mov
icebp
cmp
fdivr
mov
fcmovb
mov
sbb
jl
add
dec
dec
jmp
xor
mov
mov
ss
adc
sti
and
mov
cmp
rcll
pop
rorl
in
mov
mov
outsl
cmpsl
sbb
inc
push
or
mov
xchg
push
outsb
and
mov
mov
in
push
add
xchg
mov
mov
add
push
xor
sbbb
add
ja
mov
adc
sahf
jmp
jbe
mov
enter
mov
mov
and
push
xlat
add
cmc
stos
int
sbb
test
imul
jmp
and
sub
add
imul
shrl
xchg
jmp
int
ret
add
clc
stos
and
pop
jg
insb
and
or
int
sbb
jge
jne
mulb
addb
jns
stos
mov
inc
push
push
xor
das
or
sub
xchg
add
xchg
ja
cmpsb
push
push
fisttpll
movsl
stos
sbbb
cmp
lahf
outsb
jno
ret
xchg
inc
xlat
cmp
xchg
icebp
sub
mov
inc
inc
mov
dec
outsl
iret
outsb
insl
stc
sbb
pop
or
leave
sub
add
aam
les
scas
sbb
ljmp
push
pop
jge
popf
jo
leave
lds
mov
jns
jb
call
ja
mov
mov
rol
xchg
sub
test
or
jmp
es
xor
add
adc
dec
inc
aad
push
add
sbb
pop
enter
jle
xchg
fnsave
pop
test
push
mov
dec
mov
sarl
xchg
cmp
lahf
lcall
ss
cltd
add
iret
xchg
adc
mov
sahf
or
xchg
jmp
outsl
repz
imul
dec
mov
adc
mov
fbstp
cs
outsb
clc
js
cwtl
cmp
aas
pop
and
mov
iret
push
scas
jp
outsl
jne
int3
xor
adcb
out
not
sbb
test
mov
inc
push
sti
stos
jo
sahf
fmuls
mov
icebp
sub
push
imul
mov
out
mov
mov
pop
mov
inc
mov
aaa
jbe,pt
or
inc
out
fcompl
sbb
adcb
jp
fisubs
cwtl
mov
imul
test
imul
cmpsl
rclb
ret
mov
inc
pushf
daa
insb
mov
roll
or
bound
popf
in
out
sub
mov
cmp
and
push
or
movsl
aad
outsl
das
and
out
push
add
mov
mov
push
sarb
into
repnz
pxor
repz
inc
jbe
push
rep
adc
out
xchg
test
mov
jae
pop
loopne
push
repnz
lock
movsl
xchg
lods
push
sub
mov
inc
mov
cmp
ret
mov
inc
xchg
ret
imul
insb
mov
loop
adc
enter
fstpt
xor
pop
add
repnz
push
arpl
lock
loop
imul
aad
push
sub
or
mov
imul
test
stos
aam
gs
sti
mov
lahf
test
stos
out
xlat
dec
repnz
je
into
in
mov
add
add
sbb
testb
mov
sbb
sbb
gs
sub
push
mov
or
or
ret
ja
jge
mov
xor
jmp
add
xor
movb
cs
insb
ljmp
addr16
sbb
je
mov
sarb
mov
sbb
push
sbb
popf
dec
loop
sahf
repz
jno
sbb
xor
shll
lods
sub
push
es
mov
imulb
xorl
push
cmpb
push
cmpl
xchg
cmp
lods
mov
scas
jp
test
shlb
mov
cmpsb
mul
aad
ficoms
mov
imul
das
push
add
fists
loop
mov
mov
out
and
sbb
jne
mov
loop
inc
ja
lcall
mov
adc
pop
imul
mov
fmul
mov
xchg
cmp
xchg
test
cmp
in
inc
xchg
cmpsl
insl
sti
lret
sbb
fmuls
in
inc
mov
adc
sbb
clc
imull
leave
push
push
cmpsl
lcall
mov
rolb
negl
sbb
adc
xor
fistpl
cwtl
cmp
mov
fldt
cmc
mov
jmp
xor
outsl
popa
and
fwait
lds
bound
sarl
mov
jo
dec
mov
clc
sub
dec
dec
sahf
pcmpgtw
mov
xchg
clc
out
add
jmp
xor
mov
cld
jge
push
test
xor
pop
mov
xchg
or
fisttpl
pop
imul
popa
fisubrs
jp
mov
cmc
sbb
cmp
cmp
xchg
push
addr16
pop
sahf
pop
rcrb
sub
or
jmp
xchg
mov
xor
lcall
sub
mov
mov
std
xor
lock
push
jl
pop
icebp
pop
xchg
inc
emms
sbbb
bound
nop
push
mov
into
mov
out
xor
jbe
mov
insl
lahf
divb
lahf
cmc
push
and
add
inc
ror
insl
mov
pop
ljmp
sbb
jo
pop
add
dec
scas
fisubrs
iret
std
movsb
xor
adc
fs
divl
imul
jp
and
xchg
xchg
in
divl
jne
or
sbb
push
mov
je
adc
popf
pushf
mov
test
leave
out
jg
jne,pt
add
pop
shll
shrb
adc
cwtl
xor
xor
xchg
xchg
mov
jae
inc
sbb
dec
cmp
push
dec
push
rorl
jno
mov
pop
cltd
pop
and
mov
push
dec
xor
arpl
sbbb
or
adc
sbb
mov
mov
pusha
sbb
loop
inc
test
mov
jae
aam
ds
mov
das
mov
pop
sub
adc
mov
lcall
xchg
sarb
out
or
out
addr16
add
sarb
or
mov
insl
es
xor
inc
ljmp
pop
sub
fdivrl
jge
ret
pushf
popa
mov
or
mov
sti
push
push
andl
sbb
orb
adc
dec
scas
imul
jno
pop
shlb
xlat
leave
and
test
adc
data16
cmpsb
test
ljmp
push
or
xchg
sub
inc
or
iret
in
fs
jbe
mov
mov
inc
addb
stos
rorl
xchg
push
push
sbb
mov
inc
add
inc
push
dec
mov
jae
pusha
shr
sub
jbe
out
rcll
xor
jg
loope
pop
rol
ds
std
pop
xor
stos
inc
fwait
dec
cmp
pop
pop
xchg
jge
mov
ljmp
xor
add
int
sbb
int
in
aaa
dec
xchg
clc
shlb
lret
sbbb
std
aam
push
pop
popa
mov
test
hlt
andl
mov
rclb
sahf
scas
xor
mov
faddl
inc
nop
push
mov
push
cld
mov
int3
gs
ja
outsl
in
xchg
ficoms
jne
dec
add
mov
push
sbb
sahf
or
inc
xchg
fs
dec
pop
ja
cmp
pop
mov
dec
mov
dec
push
cmpsl
inc
dec
cmp
in
sbb
pop
push
adc
jmp
xchg
mov
xchg
int3
inc
addb
mov
ds
insl
fisubrl
stc
inc
mov
in
cltd
fiaddl
sti
lret
stos
shll
xchg
or
xchg
jg
mov
data16
into
push
nop
cmpsb
ds
popf
stos
adc
push
mov
jne
sbb
mov
cmc
mov
shr
and
stos
xor
mov
sub
cmc
xchg
out
enter
cmp
fnsave
xchg
fsubl
loopne
sub
push
xlat
lds
in
push
jmp
jmp
and
inc
imul
aas
dec
ret
movsl
test
pop
sub
shll
aam
call
sbb
xchg
pop
mov
or
loopne
fcomip
mov
daa
iret
jecxz
dec
mov
ds
int3
inc
cli
pop
mov
mov
inc
cwtl
out
loope
sub
pushf
mov
lahf
inc
mov
ja
mov
mov
pop
movsb
inc
nop
dec
pop
popf
and
das
ret
loopne
lret
jmp
adc
or
mov
pop
xchg
sub
inc
dec
imul
mov
xlat
mov
out
mov
sbb
add
daa
jno
mov
sbb
test
mov
dec
xor
pop
mov
fdiv
dec
lcall
push
push
into
bound
or
insb
int3
loopne
sbb
pushf
repnz
mov
mov
adc
xchg
roll
mov
pushf
js
pop
add
cmpsl
fldcw
arpl
enter
sbb
testb
cli
jns
inc
add
push
push
adcb
out
hlt
in
call
mov
add
fstpt
or
push
int
scas
cltd
mov
mov
xor
sbb
jbe
mov
sub
test
adc
add
aad
shll
jmp
xchg
movsb
mov
ds
sub
cmp
xchg
cltd
push
or
mov
pushf
jb
repz
notb
leave
push
idivl
ret
mov
pop
fnstcw
xor
add
fcoms
in
sahf
or
dec
add
sub
fdivrl
add
dec
int
and
scas
out
test
lahf
adc
fidivrl
movsl
ret
jmp
in
and
jb
outsb
pop
mov
les
fiadds
fisttpl
cmp
addb
or
push
stos
or
mov
mov
dec
mov
out
and
mov
push
cmp
mov
iret
jne
mov
xchg
ljmp
cmp
mov
push
xchg
jge
mov
aas
cmp
jae,pt
sarb
xchg
in
cmpsl
and
imul
jo
dec
pusha
fwait
xchg
ja
sti
push
jnp
sbb
lret
rolb
push
aam
enter
loopne
xor
shlb
ficompl
jno
popf
pop
add
jmp
mov
das
pop
sub
fnsave
and
popa
mov
test
xchg
pop
mov
dec
pop
or
call
cs
ss
in
sub
xor
js
cltd
fwait
adc
scas
enter
testb
push
jg
scas
push
int
inc
or
mov
std
sbb
dec
mov
mov
push
xchg
jns
add
das
push
shll
outsw
jle
ret
sub
and
sti
inc
popfw
add
outsb
into
mov
lea
adc
jge
sarb
js
mov
data16
pop
fcmovbe
shlb
push
sbb
loop
add
xchg
lods
cmp
mov
aad
push
dec
xchg
out
adc
lcall
xchg
rcll
lods
fsubr
mov
pop
inc
inc
jo
mov
xchg
sub
mov
loope
xlat
mov
or
dec
xchg
rol
cld
in
and
stc
cmpsb
outsb
int
and
xchg
sbb
mov
icebp
sub
mov
call
pop
xor
test
nop
jns
mov
sub
sbb
cmp
je
mov
adc
mov
iret
cmp
lret
jecxz
dec
xor
jbe
aaa
mov
lahf
jp
mov
and
xlat
lret
xlat
lcall
mov
mov
add
push
xchg
and
insb
xor
popf
das
and
stos
push
outsl
test
rolb
cmp
test
adcl
push
adc
or
shrl
stc
jno
add
enter
cmp
adc
pop
cmp
inc
add
clc
jno
loop,pt
sbb
aas
cwtl
insb
mov
dec
jl
insl
xchg
add
out
ret
pop
cmc
insb
inc
xchg
je
pop
and
mov
dec
lret
pusha
test
lret
aad
fsubl
imul
mov
das
sub
sub
jge
adc
scas
imul
pop
cli
test
loop
xor
mov
cwtl
push
repnz
add
fldt
rcrb
stc
outsb
mov
mov
add
and
jmp
lods
add
bound
mov
sbb
scas
pop
adc
cld
orb
loop
adc
sub
cmp
cmp
mov
push
lcall
xchg
cmp
je
cli
or
jge
dec
sub
lea
int3
or
aas
ljmp
xor
data16
cwtl
std
sbb
popf
jmp
bnd
inc
cmpsb
in
or
cli
stos
and
jle
cmc
fwait
jns
ja
mov
idivb
int
fbstp
clc
lahf
js
dec
out
pop
xchg
lods
push
negb
push
out
ja
ljmp
xor
rclb
jo
iret
inc
pop
sbb
addr16
pushf
mov
dec
scas
push
add
nop
cld
inc
outsl
inc
mov
cmp
jecxz
and
fdivrl
adc
stc
dec
pop
sub
xchg
mov
cmpsl
insl
sti
add
inc
push
stos
jge
mov
or
xchg
arpl
jmp
sbb
pop
xchg
in
nop
push
ret
and
aam
stos
stos
mov
mov
sti
mov
aam
lahf
rcll
mov
mov
mov
jecxz
inc
and
iret
sbb
outsl
add
sub
or
or
push
test
adc
sub
pop
pop
jecxz
pop
and
imul
add
and
jno
aam
mov
add
ror
push
mov
leave
je
add
mov
or
fldenv
sbb
xorb
shll
mov
inc
sbbb
cmc
adc
enter
nop
mov
and
mov
les
xchg
xchg
adc
dec
push
ret
xchg
pushl
sbb
push
pushf
xchg
std
sub
xor
push
push
dec
test
ljmp
adc
or
subb
and
mov
jmp
cmp
dec
fldcw
js
jg
add
sub
icebp
repz
mov
orl
mov
loope
icebp
xchg
scas
out
inc
mov
lcall
jno
mov
inc
dec
repnz
or
aam
fcmovnu
cmp
movsl
sbb
pop
add
in
pushf
add
fxch
push
cli
pop
lods
xor
mov
sub
rcrb
in
scas
je
mov
push
push
fisubrl
mov
lea
cltd
sbb
push
dec
and
dec
push
test
outsl
test
mov
push
insb
add
je
sbb
aas
xchg
or
add
xchg
shll
rolb
add
dec
jge
fcomps
mov
mov
sti
sti
ds
das
jecxz
inc
or
addr16
mov
shr
loop
dec
sti
push
push
xchg
pop
out
cmc
rcll
int3
int
push
dec
jmp
or
popf
fldcw
fwait
pop
in
addr16
or
jno
xor
sub
or
aam
imul
push
repz
mov
repnz
adcl
mov
popf
adc
repnz
sbb
ret
jl
scas
loop
mov
push
dec
mov
xchg
pop
ss
loopne
add
jns
push
incb
mov
std
lea
adc
gs
in
mov
push
adc
add
popa
xchg
shlb
add
jbe
movsl
fadd
jno
xchg
jge
test
fwait
jge
mov
cmpsb
imul
inc
clc
shll
push
gs
mov
jne
xor
popa
jp
lret
jecxz
clc
sub
cltd
mov
jnp
mov
cmp
jno
insb
jno
or
imul
lock
mov
add
sub
mov
adc
shr
fmuls
xlat
popf
cld
pop
in
stc
dec
rcrb
cmpl
or
sub
sub
fists
xchg
fwait
xchg
sbb
leave
mov
in
cmp
xlat
sahf
aas
mov
push
out
inc
inc
lock
insb
movb
mov
out
push
mov
lcall
loopne
test
and
in
cmp
subb
ss
rolb
dec
push
bound
daa
jbe
mov
xor
outsl
int3
jne
lret
gs
and
dec
xor
sti
pop
mov
push
adc
enter
sti
dec
loope
popa
rcrb
dec
ss
xchg
and
std
popf
test
push
iret
mov
aas
pop
or
pop
push
je
rcr
or
aad
cwtl
fnstsw
hlt
das
sbb
sbb
or
mov
push
mov
xchg
call
xlat
aaa
dec
pop
mov
aaa
test
sub
jnp
xchg
cmp
out
sbb
loopne
xor
and
ss
push
push
pusha
aaa
pop
inc
mov
cvtpi2ps
mov
call
fsubl
mov
outsb
sub
push
jae
enter
dec
ret
xchg
shl
mov
dec
out
test
lcall
mov
pop
shll
push
or
cwtl
cmp
je
sti
push
xchg
jp
jno
cld
sub
xor
roll
iret
addr16
mov
pushf
cmp
xor
std
imul
dec
pop
sbb
push
stc
inc
insl
mov
add
cli
pop
push
cwtl
xchg
mov
cmpl
lea
loop
mov
pushf
push
xor
js
imul
daa
rorl
mov
cmpsl
imul
sub
scas
xor
push
lahf
fsubs
xor
mov
ss
or
clc
int3
ja
imul
inc
js
js
outsl
push
lahf
test
mov
mov
pop
or
enter
imul
sub
mov
movsb
jnp
nop
sub
imul
in
fadds
xor
mov
ficoml
mov
mov
movsl
out
outsl
sbb
lea
dec
cltd
testb
sysret
mov
mov
fidivrs
inc
pop
mull
jle
mov
addb
xor
mov
jnp
mov
inc
scas
out
data16
jnp
mov
mov
in
fisubrs
and
sub
pop
movsl
mov
jae
xchg
sub
pop
mov
fxch
sub
xor
inc
inc
xchg
mov
inc
inc
or
sub
fildll
cmp
adc
cmpsl
aad
inc
adc
pushf
scas
roll
cmpsb
mov
aad
push
sti
fcmovnb
cmc
arpl
test
enter
pop
push
sbb
fpatan
add
and
std
cmp
int3
jo
std
xchg
fwait
or
int3
js
fildll
pop
xchg
sub
in
outsl
or
sbb
mov
xchg
dec
call
jge
xor
mov
mov
stc
sbb
and
sub
lahf
lods
icebp
sub
jbe
test
cltd
xchg
mov
xor
movsb
jns
ljmp
adc
cmc
xor
mov
mov
ljmp
push
or
push
out
in
lods
sub
jecxz
je
inc
xor
mov
insb
dec
js
xor
jno
add
adc
inc
imul
bound
int
cmp
call
mov
or
int3
mov
sbb
sahf
iret
icebp
adc
test
into
fdivs
xor
jmp
into
lock
pop
inc
jp
hlt
ret
cmp
and
loopne
iret
pop
pusha
sub
rolb
test
jecxz
rorb
outsb
cmpsb
sti
icebp
leave
insb
adc
dec
mov
mov
xchg
lock
ret
aad
lock
jl
or
out
pop
movsb
mov
jno,pn
jns
inc
cmc
leave
mov
inc
cmp
fbstp
inc
fcomps
das
std
stc
cwtl
mov
test
cmp
mov
push
mov
enter
lret
dec
mov
dec
insb
pop
int
sbb
rcr
fwait
gs
xor
aaa
ret
pop
adc
and
movl
and
daa
scas
push
cmpb
popf
dec
sar
sahf
decb
cmp
in
push
stos
cli
and
xchg
repnz
test
mov
dec
lea
pop
add
mov
and
mov
jae
push
push
out
mov
js
xor
xchg
add
xchg
clc
data16
ja
sti
xchg
clc
divps
jecxz
sbb
push
xlat
fs
dec
mov
xchg
sbb
xchg
sbb
mov
clc
xchg
ret
sub
jge
jb
pop
int
sbb
mov
and
addr16
loope
test
out
inc
mov
add
movsb
jbe
lods
in
lcall
ret
arpl
add
inc
test
ds
cmpsl
loopne
xor
and
adc
pop
inc
xchg
jp
repz
out
imul
xchg
mov
jne
test
xchg
lret
ffreep
push
stos
lahf
adc
dec
cmp
mov
mov
out
mov
mov
testb
pop
scas
in
test
sar
ret
shrb
sbb
daa
imul
jne
jge
repnz
inc
aas
sub
and
sbb
sti
es
pop
or
mov
sub
repz
adc
dec
call
cmc
or
xchg
bnd
shll
mov
pop
incl
xchg
filds
adc
mov
cmp
jb
loope
hlt
xor
int3
and
lret
mov
ljmp
out
sti
mov
push
mov
cmpsb
shll
mull
inc
pop
adc
test
xor
int3
inc
not
xor
pop
mov
xchg
and
and
jno
inc
inc
mov
cli
shll
loope
mov
push
push
stos
mov
hlt
or
loop
pop
test
mov
dec
mov
pop
jecxz
jne
sub
mov
xchg
or
pop
push
xchg
sub
daa
outsb
dec
out
mov
in
lods
add
movsl
xorb
jno
adc
sbb
inc
xor
xchg
jmp
sbb
lock
pop
outsl
movsb
scas
inc
shrl
push
push
popa
mov
fs
dec
jo
rol
cltd
dec
dec
gs
leave
dec
scas
dec
lahf
cmc
addb
cmp
adc
out
into
jno
pop
mov
js
dec
push
xchg
mov
in
enter
mov
jno
sti
jb
xchg
outsl
sub
pusha
mov
std
pop
loope
mov
inc
sbb
aad
xor
add
inc
jle
int3
insl
fsubrl
mov
cwtl
pop
gs
and
xchg
int3
or
sbb
jnp
fnstsw
out
das
add
sbb
les
inc
dec
adc
stc
popa
push
jns
mov
jo
ljmp
sbb
mov
xor
or
movsl
mov
popl
xchg
jne
shrb
cmp
test
sub
dec
test
sti
int3
mov
push
inc
pop
jbe
pop
lret
jle
pop
in
test
ret
mov
fnstsw
pop
mov
add
stos
pop
sub
andl
lret
xchg
addr16
mov
xrelease
xor
add
xchg
add
test
adc
sub
push
test
or
pop
xor
pop
jle
in
ljmp
lock
adc
pop
push
lcall
mov
mov
nop
insb
cmp
xor
das
stos
movsb
mov
sub
sbb
rcr
ret
or
popf
mov
and
add
je
add
out
cwtl
lret
sbb
ds
mov
movsb
xor
imul
sar
stos
addl
fwait
pop
cmpl
fwait
bound
sbb
je
mov
insl
mov
aad
xor
nop
push
pop
sbb
shll
or
pop
adc
repnz
xor
mov
fisubrs
cmp
adc
shll
in
inc
jg
test
cmpsb
push
fbstp
ss
dec
add
mov
jns
xchg
ja
out
aaa
popf
cmp
jmp
stc
subl
and
fdivs
js
repz
xor
and
sbbb
xchg
repnz
sub
cmp
sub
add
int3
shrl
sbb
andb
dec
mov
mov
inc
lock
and
jae
addr16
and
sub
enter
insb
inc
in
lcall
ficoms
mov
into
mov
jp
hlt
inc
ret
in
je
jl
jp
mov
rcl
cmp
adc
push
sbb
les
stos
orl
lret
pop
xor
frstor
add
movl
dec
jb
jno
sbb
call
pop
adc
fcompl
mov
addr16
dec
popf
xchg
mov
add
cmc
add
bnd
mov
adc
dec
xorb
jb
cmp
into
loopne
popf
test
addr16
adc
or
out
shrl
cmp
xchg
sub
xchg
sub
xor
push
out
out
cmp
hlt
sbb
cmp
mov
daa
data16
push
mov
mov
shlb
adc
mov
shlb
jge
and
add
and
leave
xchg
enter
addr16
mov
sub
xor
dec
int
lds
push
xor
push
xchg
hlt
cwtl
cmc
pushl
aam
lret
lds
call
bound
outsl
cmp
and
mov
jge
or
inc
mov
sbb
neg
notb
cmc
cmp
cltd
cmpsl
pop
mov
out
sub
rcll
sbb
js
or
imul
dec
jle
stos
clc
inc
cmp
stos
test
arpl
sbb
inc
loop
jns
sbb
in
popa
and
xchg
and
or
lahf
js
into
pop
push
cmp
insb
aam
mov
inc
scas
sahf
xor
int3
aaa
xor
xchg
sub
mov
mov
stc
pop
jge
jge
test
xchg
out
les
mov
and
xchg
and
int
mov
bound
mov
cmp
jb
mov
imull
inc
push
hlt
or
xlat
add
cmp
mov
mov
xchg
call
movsl
test
mov
or
mov
adc
jae
jno
hlt
sbb
jge
scas
loopne
jae
scas
stos
std
jns
push
fcmovnu
pop
push
mov
int
pop
lods
das
and
je
andl
mov
ljmp
cmpsb
push
es
clc
hlt
insl
ljmp
scas
cmpsb
pop
leave
inc
dec
roll
fisttpll
adc
gs
mov
dec
mov
out
popa
pop
jle
mov
lods
int3
sbb
mov
xchg
aam
jnp
xorb
ljmp
pop
mov
ds
iret
cwtl
bswap
test
in
or
imul
and
je
std
add
popf
ljmp
addr16
push
pop
pop
cs
cmp
cmp
sub
xchg
fistps
mov
dec
jno
pcmpgtd
clc
xor
sub
lea
out
mov
jnp
add
xchg
and
cmp
stos
popa
push
mov
mov
fsubrl
xchg
test
gs
lods
repnz
mov
and
or
add
leave
ss
imul
scas
jmp
hlt
add
xchg
mov
cmp
ret
cwtl
mov
push
rcl
cmp
clc
cli
fwait
xchg
jmp
mov
pop
sarb
xchg
lret
inc
jo
pop
pop
cli
es
sub
mov
cld
cmp
insb
add
inc
inc
mov
rcrl
dec
decb
aam
inc
ret
mov
fwait
ja
clc
mov
ror
fmuls
pop
sti
and
push
pop
pop
insl
in
xor
adc
mov
dec
dec
bound
das
push
clc
adc
test
out
pop
ljmp
pop
adc
clc
mov
jno
sarl
jns
dec
lods
xchg
xchg
icebp
sub
or
mov
inc
mov
sahf
adc
subb
shlb
xchg
xor
sbb
enter
stos
test
pusha
add
dec
cli
and
xchg
into
popf
divb
mov
push
add
push
out
pop
test
sbb
sub
xchg
xchg
daa
aad
mov
fdivl
jnp
mov
subb
in
jnp
mov
mov
dec
fildll
and
push
mov
sub
mov
sub
xchg
cmp
fsubrs
mov
xor
shlb
pop
test
sbbl
lret
out
pop
adc
mov
std
mov
jno
cmpsb
and
dec
out
or
mov
sbb
into
xchg
lods
and
cmc
pusha
cmp
vpcmpgtd
adc
subl
lret
in
test
or
fistpl
or
iret
mov
fucomp
stc
int
je
adc
cli
rorl
sbb
mov
mov
ljmp
leave
jne
sbb
or
ss
dec
dec
sbb
mov
sub
lahf
movsl
or
aaa
mov
sbb
xor
test
test
xchg
dec
adc
sub
xchg
mov
outsb
lret
xchg
sahf
loope
in
jae
std
scas
idiv
add
mov
ffreep
sbb
inc
push
push
jo
aam
sahf
lret
jnp
jl
xor
jbe
shlb
fisubl
movsl
push
mov
in
sbb
cmpsl
xchg
mov
pop
sbb
jg
pop
jae
xchg
flds
xchg
or
sbb
xor
cld
cmp
or
xlat
push
pop
sbb
addr16
pop
mov
mov
out
or
inc
jo
shrb
adc
lret
fisubl
cmp
or
and
lods
xchg
movsl
inc
mov
es
rcl
add
add
and
push
repnz
mov
xor
dec
les
loope
jmp
mov
shl
and
fldenv
xor
popf
pop
ja
pop
cli
fidivs
pop
push
aas
add
imul
cmp
jnp
jp
rorb
jne
mov
aas
loope
adc
lcall
sbb
cmpsb
sbb
pop
add
stos
shlb
jl
decl
dec
jmp
cmp
xchg
movsb
xor
push
lea
lock
adc
push
mov
out
bound
fimull
test
pop
cs
xchg
cmpsl
adcb
fimuls
add
rclb
add
fnstsw
push
int3
jae
and
out
rol
push
or
into
out
jmp
cs
int
mov
mov
imul
push
inc
aas
and
add
enter
je
clc
loop
mov
sbb
loope
popa
sub
out
call
pop
lahf
and
out
iret
fcompl
aam
dec
jp
mov
pop
inc
dec
insl
cmc
cmp
pushf
xchg
mov
cmp
jl
sub
pop
xchg
data16
out
movsl
sbb
xchg
lahf
scas
pop
js
lret
decl
xor
fnstcw
mov
push
mov
pminsw
cli
inc
sbb
lods
hlt
inc
mov
xchg
pop
ror
xchg
int
aas
lock
add
mov
jg
jmp
outsb
xor
mov
sub
xchg
fwait
stos
pop
push
loope
scas
aas
ret
xchg
jge
dec
jg
adc
dec
fildll
xor
cmpsb
xchg
ret
jb
push
enter
add
or
cmpsb
inc
push
pop
add
ss
mov
sbb
fs
cmp
das
sbb
pop
call
push
repz
dec
sub
in
inc
inc
and
xchg
loope
and
scas
xor
jmp
and
test
out
cmp
addr16
idivl
negb
sub
into
pop
mov
cltd
fwait
mov
call
or
clc
pushf
or
add
call
mov
mov
fsubl
push
out
scas
aas
xor
mov
and
push
inc
popa
fsubrl
movsl
mov
cmp
and
mov
cmp
mov
xchg
sbb
xchg
xchg
pop
js
inc
js
and
pop
cmp
mov
inc
sub
mov
fbstp
mov
lods
jmp
mov
repz
lahf
pop
dec
sbb
add
in
lods
cwtl
cmpl
sbb
sarl
dec
mov
lea
in
mov
pop
xchg
pusha
bswap
xchg
and
data16
and
test
mov
adc
ffree
dec
push
mov
mov
test
sbb
out
or
lahf
aam
es
push
leave
insb
out
mov
je
addl
or
rcll
adc
pop
aas
movsl
jbe
pop
mov
outsl
std
fmull
xchg
jne
insb
cmpsl
gs
cli
push
fiadds
sub
test
xchg
push
push
mov
mov
pop
dec
iret
mov
test
lret
push
xor
test
xchg
cltd
adc
shll
mov
enter
adc
out
insb
pop
lock
sbb
pop
jne
insl
fbstp
test
insl
push
mov
xchg
jl
negl
cmpsb
pop
and
lcall
push
movsb
cltd
rcrl
bnd
nop
dec
add
insb
les
mov
and
mov
jle
push
inc
aam
xchg
arpl
sub
jp
lret
test
test
cmp
push
dec
push
gs
mov
inc
add
std
orb
inc
jmp
enter
push
xchg
jge
adc
xchg
into
out
pop
sub
inc
movsl
mov
divl
dec
enter
aad
push
shll
adc
inc
nop
add
js
pop
cld
call
rolb
lock
arpl
int
pop
sub
popa
imull
mov
cmp
or
aam
push
dec
lret
sbb
aaa
cld
xor
add
insl
jnp
xchg
mov
lea
mov
xor
jl
ror
push
mov
mov
mov
lock
fimull
arpl
out
jmp
and
push
test
push
dec
push
mov
adc
fdivrp
mov
or
xor
pop
repz
in
sbb
int
addr16
or
loopne
xorl
imul
fwait
xchg
scas
sbb
out
pop
fs
aam
int
xchg
dec
popf
cld
mov
popa
mov
fstpl
xchg
sub
or
xorb
stos
mov
add
push
mov
jge
adc
roll
mov
jne
sbb
push
and
dec
add
push
cltd
xor
adc
js
push
jno
add
pop
fisubl
imul
shrb
aas
fs
add
inc
test
cld
call
xchg
mov
jp
lret
mov
sbbb
dec
sbb
or
pop
in
repnz
xor
inc
pop
jg
push
scas
arpl
fs
lock
in
cld
cmp
pop
pop
sub
jp
cmp
cmp
push
push
adc
bound
sub
xchg
dec
cmp
int3
adc
push
push
enter
aam
push
and
xchg
outsl
adc
insl
inc
shlb
mov
lods
jno
pusha
fmuls
xor
aad
stos
mov
cmp
xchg
test
pop
dec
cmc
xlat
sbb
icebp
cmp
adc
dec
inc
aad
jbe
sub
mov
js
fidivrs
scas
xchg
jmp
outsl
hlt
jmp
sub
jecxz
or
iret
das
vpmaddwd
mov
lds
or
pop
xchg
and
xchg
imul
sbb
jae
mov
mov
testb
fnstcw
lock
jg
imul
shlb
xor
xchg
push
pinsrw
data16
jns
jge
lods
movsl
mov
lock
pop
cwtl
mov
xchg
mov
and
pop
jp
and
inc
mov
mov
cli
adc
dec
jno
add
nop
dec
push
bound
fisttps
cmp
shrb
dec
or
xchg
adc
dec
cltd
xchg
push
shlb
xor
jbe
imul
xchg
mulb
inc
mov
dec
adc
inc
inc
aas
sbb
int
enter
lcall
cli
push
xor
roll
dec
call
aad
int3
push
pop
insl
pop
jp
cltd
shl
jo
out
cwtl
jo
das
dec
add
xchg
adc
sbb
cmpsb
jg
mov
loop
pop
adc
rclb
in
dec
mov
mov
cmp
push
lret
pop
in
cmc
or
pop
rol
outsl
xchg
xchg
xor
adc
jmp
leave
pop
mov
lods
dec
shl
in
xlat
rclb
sub
outsb
inc
sbb
jge
cltd
subl
fidivl
push
adc
mov
xchg
push
or
pop
fcmovne
std
fidivl
test
dec
not
mov
pusha
out
rorl
cmpsb
lea
jae
push
or
and
sbbb
aas
xor
or
xor
fdivrl
js
mov
sbb
mov
sub
jb
sub
xor
fcomi
test
lcall
nop
fnsave
push
inc
mov
push
rorl
jns
mov
rcrl
push
push
andb
fdivs
cwtl
adc
sbb
add
cli
lret
xor
repnz
addr16
movsb
or
mov
mov
movsb
ljmp
cmc
or
shll
ljmp
dec
pop
out
bound
jnp
mov
das
adc
fcmove
xor
inc
mov
xchg
dec
or
sub
cmpl
lahf
or
imul
mov
jne
imul
jb
enter
pop
xchg
test
movsb
sbb
mov
jmp
movaps
fidivrl
xor
and
rolb
adc
scas
rcrb
sarl
sub
je
out
pop
shll
in
outsl
test
in
pop
stos
jmp
jbe
xor
in
push
cmc
subl
insb
mov
push
cmp
out
mov
clc
mov
mov
js
or
test
cwtl
mov
iret
int3
or
addr16
jecxz
aad
cwtl
outsb
out
lods
ja
idiv
sbb
dec
clc
je
pop
shr
mov
add
stc
xchg
into
inc
lods
into
loope
add
fwait
js
xor
sub
mov
cwtl
mov
test
testl
push
lods
int
push
sub
pop
mov
clc
push
rcr
pop
jle
aam
outsb
sbb
add
inc
mov
mov
sub
and
mov
je
lock
insb
xlat
call
lret
cmp
jnp
cmp
mov
add
cltd
cmp
in
insb
inc
js
add
and
xchg
les
push
std
cmp
xor
negb
iret
lods
into
outsl
gs
lcall
push
in
and
jp
mov
adc
popa
mov
arpl
inc
jo
or
outsb
call
movsb
sub
testl
xchg
adc
pop
fwait
mov
mov
scas
adc
leave
fadd
mov
jne
movsl
jae
fsubs
sahf
jo
xor
int
pop
jb
xor
aad
imul
mov
arpl
pop
cmc
mov
nop
xchg
pop
in
popf
cmp
js
loope
sub
ret
xchg
icebp
je
or
test
and
push
movl
adc
cltd
out
aam
jl
js
jae
pop
mov
adc
add
mov
sub
mov
test
popa
cmp
mov
ret
std
scas
add
out
jmp
jmp
test
mov
sub
fdivr
fucomip
les
cld
sbb
mov
mov
lods
in
push
cmp
ud0
mov
shlb
add
aaa
cli
pop
adc
sub
mov
enter
pop
xor
dec
test
in
adc
sub
dec
icebp
out
xchg
ljmp
dec
mov
cwtl
lock
ljmp
push
or
add
mov
mov
test
and
or
adc
jo
inc
mov
dec
and
test
imul
mov
cmc
pushf
cli
aam
mov
jns
sti
ja
shll
insb
popf
repz
mov
insl
cmpsb
jmp
bound
bound
dec
test
test
mov
insl
pop
lock
loop
in
sub
lds
xchg
xchg
mov
movsb
jno
aam
xlat
or
sub
divl
divb
jb
sbb
xor
ror
inc
jae
dec
cmpsl
enter
out
cltd
test
enter
add
and
pop
lret
rol
flds
mov
ds
or
sti
xor
mov
mov
mov
inc
stos
cmpsl
jmp
gs
push
sub
hlt
mov
add
or
xor
std
xor
popa
adc
inc
ja
pop
mov
in
enter
mov
sbb
std
push
idivl
arpl
cmp
jae
imul
inc
jns
in
mov
fmull
fs
int3
test
loop
and
fbld
adc
mov
mov
js
and
jmp
pop
clc
add
pop
and
push
in
lahf
shl
fistps
xor
icebp
and
andl
adc
xchg
mov
jno
icebp
outsb
shl
sbbl
jl
sub
pop
lahf
add
fisttpll
add
add
aas
orl
dec
lret
xchg
xor
sub
enter
push
push
shlb
pop
cmpsl
cli
ror
addl
mov
push
cwtl
and
dec
jle
dec
fs
sbb
sub
jns
icebp
sub
jae
into
jmp
inc
jp
xor
mov
loope
xor
sbb
cmc
ss
adc
fsubrl
adc
mov
inc
lret
les
mov
xchg
jae
rcl
aaa
fstps
in
dec
cmp
gs
pop
int3
nop
adc
jg
jp
push
fsubl
out
jae
aad
adc
outsb
js
fwait
mov
icebp
imul
add
or
pop
ret
inc
movsl
shll
iret
testb
arpl
xchg
xor
xchg
jl
outsl
adc
in
add
imul
lods
out
std
out
and
push
popf
inc
cld
jbe
nop
stc
lret
mov
aaa
insl
adc
aam
add
call
mov
andb
jg
mov
lret
add
pop
adc
sub
cltd
insl
ret
cli
xchg
mov
test
mov
nop
or
jno
lods
jp
sbb
dec
imul
or
mov
inc
jns
mov
xchg
xlat
bound
or
lds
hlt
mov
mov
jecxz
sub
test
jmp
mov
lds
fucomi
movsl
cmp
jno
or
sarb
inc
cmp
popa
xlat
fcmovu
pop
xor
sahf
and
stos
gs
and
jno
cmpsl
dec
mov
out
fisubrl
sbb
add
aam
xchg
jne
je
adc
hlt
clc
jno
std
jo
dec
bound
dec
sub
mov
flds
jno
mov
pop
bound
nop
enter
push
mov
mov
or
mov
subl
movsb
and
nop
mov
out
sub
addb
popa
mov
sub
movsl
test
fildll
test
imul
push
cs
inc
ljmp
mov
mov
adc
xchg
inc
jecxz
mov
push
mov
mov
scas
jbe
movsb
jbe
sbb
fs
std
dec
push
movsb
dec
mov
in
outsl
jmp
inc
push
std
dec
jge
popf
or
adc
add
stc
orb
cmp
cmp
fwait
aas
imul
hlt
xor
mov
ljmp
adc
rcrb
and
call
mov
inc
sbb
imul
lds
rolb
popf
rolb
xchg
in
jae
loopne
in
xlat
xchg
add
js
cmp
push
lods
and
push
dec
call
mov
inc
fwait
mov
out
xchg
add
mov
out
je
inc
leave
addr16
lcall
fdivrl
fisubs
cs
xchg
dec
jecxz
in
xchg
and
lcall
outsl
push
lock
lock
mov
cltd
xorl
in
out
add
fiaddl
or
in
jae
je
jae
clc
push
xchg
mov
imul
sbb
sbb
xchg
dec
mov
pop
fwait
inc
sbb
mov
enter
int
push
dec
insb
insb
dec
add
js
stc
sahf
dec
test
dec
and
out
icebp
add
stc
sbb
icebp
xor
jo
std
iret
das
mov
jno
push
sarl
push
lret
xchg
leave
and
testl
loope
lret
insl
scas
orb
adc
sbb
mov
shrb
lods
push
inc
push
push
push
dec
jb
cmp
stc
stos
or
nop
mov
pop
int3
test
push
jg
popa
push
jno
lods
ljmp
popa
sbbb
enter
sbb
push
aad
inc
out
pop
out
xor
mov
lret
test
in
push
lea
lret
cmp
or
enter
fiaddl
fiadds
mov
bound
cmpl
mov
mov
shl
cmc
shll
loop
sbb
xchg
nop
icebp
sahf
lret
mov
cld
mov
adc
dec
test
and
andl
or
dec
scas
push
inc
inc
fstpl
mov
dec
movsl
and
mov
out
bound
out
mov
in
mov
movsl
adc
dec
pop
mov
add
adc
push
cmp
mov
shr
stos
jmp
enter
push
dec
mov
lret
mov
and
clc
pop
push
push
test
inc
mov
jns
popf
aas
ja
jle
jo
cmpsb
add
stc
stos
xchg
hlt
pusha
in
subb
xor
lcall
xor
insl
inc
mov
adc
push
push
pushf
push
mov
mov
push
mov
imul
jge
test
mov
add
adc
iret
add
mov
stos
mov
dec
adc
xchg
mov
es
dec
repnz
push
mov
shlb
lcall
jbe
cmp
jae
jno
adc
push
aad
lret
push
das
leave
into
jge
enter
push
sub
and
cmp
push
and
mov
pop
sar
push
pop
cmpsb
pop
xor
call
call
or
pusha
cmpsl
add
sti
fsubr
repz
das
xchg
aas
or
lods
and
in
fwait
and
movsb
pop
outsb
test
out
fcmovbe
test
clc
mov
lret
scas
repz
xchg
mov
pop
fdivs
fstpl
or
repnz
cli
sti
aaa
sbb
aad
int
add
mov
mov
mov
and
bound
sbb
ljmp
stc
cs
pop
sbb
add
push
fbstp
repz
lods
jno
out
frstor
lock
or
adc
fs
test
pop
push
mov
shlb
pop
scas
gs
cmp
or
popa
lahf
mov
mov
jp
mov
fcoml
cmpsl
das
pop
dec
jecxz
fwait
xchg
cmp
leave
movsb
inc
outsl
popa
dec
adc
cmp
or
jl
test
cmp
mov
in
and
popa
cwtl
fdiv
xchg
adc
xchg
leave
push
push
or
and
sbb
adc
jnp
shr
push
cmp
sbb
xchg
jg
mov
fnstsw
lods
and
ss
icebp
fcmovne
andl
mov
clc
outsl
and
nop
shll
fst
adc
inc
repnz
sbb
rolb
jl
jmp
push
mov
lds
xor
inc
fs
idivb
mov
cmp
das
push
fsubrp
negl
subl
movsl
js
jo
jmp
shl
dec
mov
test
in
into
lret
arpl
and
dec
cwtl
lahf
cmp
in
cmp
xor
ds
xchg
xchg
pop
xchg
adc
ret
in
movsb
lahf
bound
add
xor
mov
xor
out
test
loopne
inc
in
and
push
loop
fidivl
dec
mov
xorl
test
mov
orw
inc
repnz
fbld
inc
nop
cmp
dec
fsubp
test
fwait
jae
lahf
mulb
fs
lcall
lret
inc
add
inc
mov
jg
sbb
fcoml
mov
adc
pop
mov
jmp
mov
jl
loopne
cmpb
sarl
in
cmp
pop
mov
js
stc
xor
cmp
bound
push
mov
xchg
sub
add
add
jecxz
sub
jecxz
pop
cli
pop
mull
andb
outsb
dec
lcall
les
push
test
jmp
xor
adcl
in
loope
push
jae
cmp
dec
pop
cld
jmp
lcall
fdivl
or
or
jmp
sbbl
rcl
sbb
lea
repz
cmp
jmp
icebp
dec
fcmovu
sbb
out
dec
sti
sbb
or
rclb
test
pop
xor
pusha
fsubrp
xchg
insb
bound
adc
jbe
inc
push
xor
mov
push
pop
sub
cs
pop
mov
mov
js
test
loopne
xchg
push
lock
cmpsl
test
out
push
and
cltd
ds
cmc
xchg
je
je
bound
icebp
dec
int3
and
int
into
cmp
add
mov
mov
outsb
pop
push
mov
xchg
cmp
shlb
rol
adc
lods
jg
in
xor
pushf
je
dec
das
call
sti
aaa
xlat
add
aad
add
testl
adc
lods
inc
inc
mov
les
jp
xlat
rcrl
cmp
fnstsw
sti
jecxz
fnsave
dec
rolb
mov
add
cmpsl
les
ljmp
jge
cld
sub
jge
mov
mov
dec
arpl
ret
or
pusha
and
popf
fwait
mov
scas
dec
in
movsb
mov
cmpsb
outsl
call
pusha
mov
mov
ja
add
lods
xchg
mov
lcall
inc
call
sub
sub
outsb
mov
hlt
test
call
aad
pusha
sbb
test
cmove
jg
or
js
or
xor
stos
dec
jl
inc
ds
aaa
cmp
push
mov
icebp
iret
in
push
ljmp
adc
scas
adc
es
cmp
push
mov
add
ret
cmp
loopne
fnstsw
aaa
mov
int
xor
mov
cmp
fimull
aad
sti
mov
mov
ss
aas
lahf
insb
sbb
fcomps
or
jns
divl
aas
adc
adcb
into
pop
add
add
fistpll
in
fwait
xchg
lea
sbb
add
mov
push
ss
stos
cmpsb
orb
adc
cmpsl
jae
sub
call
loope
prefetch
int
inc
sub
cmpsl
adc
cmp
adc
xlat
mov
mov
and
inc
xchg
aaa
cli
add
add
and
push
xor
movsl
mov
ret
xor
wrmsr
mov
ficompl
test
cmp
xchg
cmpsb
negl
jbe
int3
sub
adc
arpl
cmc
mov
fucomp
out
and
pop
rcrl
ficompl
lea
xchg
mov
test
fcompl
in
into
xchg
ja
fildll
xlat
mov
xor
inc
dec
outsl
adc
jl
pusha
test
orb
mov
pop
mov
inc
dec
dec
xor
in
enter
jecxz
daa
fwait
sub
les
pslld
imul
imul
ds
or
cmpsl
xor
clc
xor
push
fwait
test
aad
stos
push
sbb
iret
aam
testl
rorb
pushf
aaa
cmp
cmp
and
and
push
mov
rcl
sub
pop
ret
scas
sarb
ret
cmp
push
in
jg
mov
fbstp
mov
or
fmull
dec
xor
jo
add
cli
push
sbb
sub
sti
cs
jnp
in
dec
sub
in
mov
cli
packuswb
lret
jns
cmpsl
xchg
xchg
fistpl
push
sti
js
pop
daa
and
lea
idivb
mov
cmp
mov
leave
int3
je
fistpll
pop
add
insb
push
jne
mov
mov
add
push
jns
nop
jns
mov
loopne
add
out
aam
xor
adc
cmp
pop
out
flds
and
enter
mov
mov
dec
adcb
lret
lods
jge
mov
sbbl
sahf
xor
stos
je
pop
aas
and
movsl
sti
iret
test
push
xchg
imul
mov
scas
push
pop
or
sti
fs
stos
cmpsb
jo
test
out
shrb
ret
add
mov
jb
aas
sbb
aaa
push
dec
lahf
aam
inc
xchg
fistl
addr16
xchg
mov
fcoml
pop
pop
dec
gs
daa
sub
inc
sub
or
out
repz
mov
xlat
pop
jmp
dec
mov
pop
mov
fsubl
outsl
js
scas
dec
fcoms
mov
ljmp
mov
mov
sbb
dec
or
fmull
cmp
push
inc
cmc
fadd
ficoml
adc
cmc
subl
insl
jge
cmp
outsb
mov
cmp
mov
mov
add
in
pop
pop
rcrb
bound
aas
pop
mov
inc
or
fisubrs
shll
or
das
or
pusha
icebp
adc
movsl
or
mov
push
fdivl
mov
rolb
sbb
outsb
jl
cmpsl
jg
push
and
push
lods
lods
ss
shr
or
push
or
fistpl
data16
dec
push
imul
sbb
dec
push
cli
cmpsl
jp
xlat
mov
aad
test
cmc
inc
mov
and
jl
xchg
jl
dec
jp
je
mov
mov
jae
jg
cwtl
paddsb
jo
je
sub
push
cltd
or
lcall
je
out
aad
ror
aaa
jae
into
jae
jp
outsb
sbbb
adc
xchg
xchg
call
xchg
dec
into
push
xchg
rcrl
and
test
push
and
xchg
sub
lea
cmp
insb
push
push
hlt
in
arpl
push
xor
pop
test
test
dec
push
mov
push
xor
repnz
dec
dec
jp
inc
ret
adc
mov
add
hlt
cwtl
sti
movsb
icebp
cmpsb
or
push
cli
jno
pop
sahf
incl
mov
movsb
mov
or
and
jo
push
sub
and
mov
mov
pop
xorl
out
dec
or
enter
mov
inc
mov
fcompl
sti
jle
push
sbb
xlat
xlat
leave
and
mov
jns
xor
fidivrs
cmp
dec
push
popa
ds
test
pop
adc
sub
sbb
pop
sbb
push
sbb
cmp
subb
xchg
sub
adc
movsb
lret
mov
pusha
xchg
jae
dec
jbe
sarl
cmp
loop
mov
jp
rcl
in
fs
add
pop
js
dec
dec
fsts
pop
pushf
inc
xor
mov
adc
inc
pop
mov
dec
aad
jo
jl
scas
dec
bound
call
sbb
sbb
int3
subl
adc
adc
dec
nop
test
xchg
inc
jae
aas
loope
and
jg
sub
xchg
lret
sub
sbb
push
insl
inc
push
movsl
lcall
leave
sahf
and
add
jle
int3
and
cld
cmp
ss
in
cltd
mov
mov
pop
pop
jp
sub
out
movsl
ret
pushl
mov
pop
popa
jnp
push
jne
in
js
mov
push
jp
jb
pusha
lahf
and
mov
stc
ljmp
pop
iret
xchg
push
andps
pushf
outsb
mov
adc
icebp
pusha
mov
daa
add
jnp
pminsw
int
insl
lret
dec
sub
inc
ljmp
mov
sti
pop
lock
and
cmp
xchg
cli
mov
cmp
and
lock
cmp
xchg
outsl
pop
cmc
mov
sub
loopne
push
mov
sbb
pop
daa
in
daa
sub
pusha
cmp
sbb
data16
jno
xchg
out
push
pop
fidivrs
xor
fprem
inc
cwtl
pop
lds
mov
xchg
ss
scas
mov
nop
test
adc
mov
leave
inc
lea
roll
and
jle
jno
xor
pop
jno,pn
lods
xor
pop
xor
push
cwtl
sub
push
or
fnstsw
inc
faddl
fadd
test
xchg
cmpsl
mov
mov
popa
bound
sub
and
push
pop
pop
outsb
icebp
push
ljmp
mov
jecxz
push
pop
loopne
mov
xchg
dec
xor
fildll
adc
lret
cmpsl
xor
ret
shrl
xchg
jecxz
pop
or
daa
aas
arpl
jp
add
cmpsl
adc
repz
push
fs
and
pop
cld
rclb
mov
xchg
hlt
mov
or
loope
mov
cmpsl
scas
mov
adc
cltd
scas
and
mov
inc
add
mov
push
fsubrs
je
add
mov
and
push
test
cmp
pop
pop
xor
ja
adc
mov
push
lods
loopne
mov
test
lock
adc
xchg
mov
jmp
sub
sbb
lret
loop
dec
aam
je
adc
ret
imul
or
popa
ss
test
jb
jne
sbb
and
mov
nop
mov
mov
push
sbb
mov
or
mov
in
rcll
outsb
mov
jne
pop
gs
js
cmp
mov
inc
arpl
mov
movsl
mov
sub
hlt
fbld
mov
jne
in
mov
xlat
dec
xlat
leave
je
pop
jns
dec
pop
fsubrl
in
xor
sbb
push
dec
sbbl
xor
dec
fs
push
cmc
fidivrl
mov
negb
js
stos
scas
adc
mov
cmp
cmp
dec
xor
jbe
jbe
inc
ret
xor
dec
popa
loop
cmpsb
ljmp
out
push
pop
dec
std
mov
sbb
jecxz
sbb
and
call
or
adc
push
daa
lcall
or
lret
pop
jmp
sbb
movsb
push
shrb
mov
lret
xchg
cmp
pop
inc
mov
add
xchg
jno
addr16
cli
or
xor
xor
dec
push
cltd
mov
and
aas
ret
jns
jne
das
fdivrs
lods
test
icebp
fldenv
sbb
jnp
pushf
into
sbb
loop
add
xchg
mov
outsb
shrl
mov
mov
stos
subl
int
fnsave
xchg
xchg
sbb
fisttpl
daa
jle
addl
jno
pusha
in
dec
push
imul
mov
pop
test
mov
push
xor
xor
mov
arpl
xchg
pop
xor
sbb
loope
mov
adc
mov
inc
orb
jb
cmc
xchg
xor
add
cmp
add
fisttps
push
mov
mov
decb
ss
mov
jo
pop
inc
xchg
xchg
pop
fistpll
mov
test
xor
xchg
xor
dec
adc
xchg
je
data16
push
das
sbb
adc
inc
sbb
add
jns
test
mov
scas
test
leave
dec
lods
in
dec
xor
pop
xacquire
iret
sub
sub
cwtl
test
mov
rol
sub
dec
insb
incl
mov
int3
adc
or
mov
pop
incl
push
xchg
sti
sub
cmc
push
pop
sbb
sbb
loopne
lock
sti
loope
repz
adc
cwtl
clc
jbe
mov
lret
stc
inc
or
leave
int3
stc
mov
cmp
sub
bound
imul
stc
inc
lret
fsubp
xchg
push
mov
pop
inc
adc
inc
movsl
lock
hlt
aaa
and
inc
ljmp
cmpl
pop
popf
jle
mov
and
jg
push
imul
mov
cld
int
mov
out
xor
insb
xor
and
outsl
ss
adc
xorb
pop
mov
or
in
dec
sahf
les
pop
fmulp
mov
jnp
inc
mov
and
dec
jno
stos
inc
jne
aad
int
cltd
loopne
fnstsw
and
sbbl
mov
outsl
test
mov
outsb
mov
inc
add
jns
lcall
push
hlt
mov
jb
mov
jp
xchg
imul
push
in
sbb
mov
push
cwtl
lahf
xchg
adcb
lods
sbb
lret
ret
xchg
sti
adc
lret
mov
pop
or
xchg
inc
sbb
xchg
cmp
inc
cmp
jnp
inc
mov
sub
mov
addr16
mov
shll
lods
xor
pop
or
jbe
add
xor
mov
shl
shufps
inc
mov
cmp
cld
sub
rcrb
xchg
pop
je
mov
add
push
cwtl
test
mov
and
and
lock
push
not
push
pop
stos
insb
ret
sub
popf
add
aad
in
mov
inc
fildll
in
lahf
daa
lds
shrl
push
inc
mov
pop
cmpsl
scas
es
add
andl
nop
push
imul
es
sub
mov
inc
sbb
fldl
sbb
adcb
pop
jmp
mov
aaa
dec
sub
xchg
stos
inc
sbb
test
out
cld
out
xor
loop
cmc
xchg
xor
lret
push
hlt
jne
mov
rcrb
cmp
stos
mov
iret
out
sbb
fdivrl
xchg
mov
push
rep
mov
shlb
sub
dec
adc
es
add
jno
bound
mov
fimull
dec
les
popf
dec
fwait
xor
rclb
mov
mov
add
loop
icebp
add
or
ficoml
xchg
add
lret
insl
jle
ljmp
inc
jno
cli
sub
fstps
xchg
lds
mov
fadds
loopne
shlb
insb
pop
cmp
aaa
sub
mov
mov
cs
test
push
xor
lahf
mov
hlt
inc
fistl
or
mull
and
push
loopne
push
cmp
shll
add
jg
push
and
sbb
and
sbb
jg
mov
xchg
fsts
cmp
dec
int
cmp
jle
in
dec
clc
adc
rclb
popf
xchg
sub
push
push
imull
inc
shlb
lret
adc
xor
and
push
loop
iret
xchg
test
or
sbb
xor
and
cmpsl
push
hlt
repnz
arpl
aad
mov
jno
out
add
loopne
dec
stc
lret
test
outsb
mov
jns
sub
fmuls
pushf
movsl
cmp
in
sub
es
mov
sti
inc
xchg
or
pop
push
jmp
shrb
lock
or
in
test
push
inc
cmpsb
les
dec
sti
and
ficoms
pop
dec
cld
mov
ficoms
loope
and
inc
fcmovne
test
mov
into
jecxz
mov
std
sti
lods
es
cmp
xchg
ror
add
ret
repz
jbe
adc
stc
js
jl
call
mov
jnp
or
imul
out
sbb
sbb
xchg
mov
mov
dec
dec
mov
loopne
popf
ja
lds
negl
sub
mov
cli
pop
sbb
ds
cld
in
inc
in
mov
out
repnz
cmpsb
pop
out
fdiv
stos
pushl
adc
sub
push
jno
gs
arpl
adc
add
push
repz
or
pop
jecxz
push
into
jmp
repz
xchg
mov
inc
les
pop
inc
jmp
movsb
lods
cmp
cmpsb
fdivrp
xchg
ret
in
and
fildll
mov
ss
cwtl
ds
xchg
paddusb
cwtl
dec
cmp
mov
and
xor
rorb
xor
mov
dec
mov
cmpsl
mov
fildl
cmc
ss
nop
and
and
sub
xor
or
repz
mov
jmp
xor
xor
outsl
or
mov
out
add
popa
push
sbb
daa
pop
adc
int3
jbe
lock
adc
fucomip
stc
in
adc
jecxz
pop
xchg
dec
xor
in
lret
push
mov
arpl
stc
jns
fxch
mov
push
mov
inc
mov
jl
test
icebp
adcb
jecxz
out
or
imul
test
mov
xor
adc
hlt
test
setg
add
shrl
sarb
testb
out
fdivr
sbb
jecxz
jo
lret
neg
xchg
xchg
adcb
jp
jl
jl
stos
out
fldcw
fldcw
lea
lock
xor
out
ror
test
ljmp
loope
leave
mov
pop
into
fs
push
cmp
sub
fnop
xchg
mov
cmc
mov
addr16
int3
pushf
mov
jle
or
xchg
mov
add
mov
movsl
cmp
fldt
imul
sbb
out
mov
inc
sbb
add
inc
cld
or
out
testb
xchg
sahf
mov
sbb
test
push
pop
fidivrs
aad
or
or
pop
arpl
std
add
sahf
scas
les
in
xchg
fistps
lods
dec
inc
mov
cmpsl
cs
cwtl
mov
sub
dec
sub
test
jnp
shll
xchg
mov
shll
imul
cmp
push
jmp
cwtl
push
mov
and
sbb
push
lret
xchg
or
sbb
xchg
rolb
mov
xor
mov
xchg
sbb
fsub
aam
cmpsl
addr16
cs
adc
push
cmp
mov
sub
xchg
cmp
ret
xchg
add
or
jl
mov
adc
add
ficoml
in
xchg
in
lcall
pop
xor
mov
subl
popl
lret
sti
testl
add
lret
mov
xor
xchg
sbb
xchg
arpl
data16
pop
push
dec
adc
scas
jno
in
imul
and
es
and
int
push
inc
mov
jg
in
mov
mov
sub
and
xlat
int3
push
inc
sub
pop
jl
loope
cmp
push
jmp
xchg
fucompp
dec
xchg
mov
inc
insb
lock
mov
pushf
push
mov
scas
dec
sub
insl
mov
add
jl
sbb
scas
je
pop
fdivs
jmp
push
scas
lahf
loope
xchg
push
pop
xor
fmuls
bnd
mov
add
xor
fstpl
sub
mov
pop
and
pop
jmp
cli
movsb
mov
shr
jle
jge
cld
lahf
jae
and
and
mov
imul
jno
stos
inc
daa
or
push
push
pop
or
cmp
or
fidivl
adc
jo
cmp
inc
push
cmp
sahf
xor
cmp
stc
in
add
mov
xor
subb
mov
cld
xor
das
xor
inc
lahf
push
sub
xor
push
loope
in
push
sti
stc
popf
sbb
test
pop
mov
jnp
push
int3
sub
jb
stos
push
xor
or
adc
add
lret
out
popa
out
andl
inc
and
loop
fnstcw
ror
cmp
ljmp
and
or
sahf
ss
jo
arpl
ret
pop
popf
pop
pushf
in
mov
imulb
dec
aaa
stos
lret
and
add
lods
lahf
insl
insl
xchg
stos
jb
push
daa
jge
add
mov
scas
xor
pop
test
cmp
fldl
addr16
xor
or
cmp
gs
loop
dec
xor
inc
add
push
icebp
ret
mov
jg
gs
or
fbld
mov
dec
adc
cmc
lret
push
mov
int3
cmc
in
mov
jmp
xor
or
pop
mov
or
loop
stos
add
cmpsb
mov
fistps
mov
loopne
push
mov
or
and
cmp
lahf
add
lds
fildl
jmp
pushf
jb
sub
push
movsb
mov
aam
sbb
push
iret
and
mov
rorb
sub
insb
cmp
jb
mov
mov
std
lods
push
mov
add
inc
stos
mov
loopne
addb
cmp
sbb
xchg
jnp
sarl
rcll
data16
xchg
pushf
or
not
xchg
movsl
into
daa
sahf
add
test
lret
gs
and
std
es
pop
pop
out
daa
test
or
sbb
int
jle
dec
fadds
fdivl
lods
pop
adc
inc
cmp
dec
sbb
sahf
mov
push
mov
and
shl
insl
lods
xchg
ret
movsl
mov
add
notl
sbb
shlb
push
push
out
xlat
mov
daa
cmp
mov
or
outsb
xchg
shll
sbb
xor
or
cwtl
sub
scas
or
cmp
push
sub
push
jecxz
jae
adc
jl
aam
daa
adc
pop
cld
xor
mov
cmpl
mov
pop
sbb
sbb
jne
rcll
insb
xor
mov
add
xchg
repz
icebp
and
in
dec
shr
cld
sub
or
adc
lods
push
mov
sahf
filds
pop
xor
fsubrs
lods
xor
jbe
add
mov
mov
pop
mov
iret
or
out
lcall
iret
mov
jmp
ret
jg
xlat
xlat
jo
push
ss
fldenv
sbb
mov
insb
xchg
jne
imul
cmc
dec
lods
sbb
sub
in
fwait
clc
mov
in
in
scas
pop
cwtl
out
cld
sub
pop
popl
cwtl
popf
or
lcall
add
adc
aas
fstpl
mov
stos
or
dec
in
cmp
subl
sbb
pushf
cmp
repnz
ret
and
cmp
stos
mov
icebp
out
sub
jne
adc
mov
daa
imul
not
fs
aaa
push
pop
inc
or
sub
imul
std
jge
scas
scas
out
decb
andb
and
mov
js
movsl
ja
pop
lcall
inc
xchg
push
mov
test
inc
push
mov
xor
mov
xor
lea
mov
mov
fiaddl
xchg
adc
out
xchg
adc
and
pop
das
in
sbb
js
pop
das
add
mov
mov
xchg
jne
jb
jne
pop
pop
icebp
test
jns
push
jo
mov
pushf
jb
movsl
rcr
insl
lret
aad
cmc
in
push
cmc
xchg
movsb
outsb
pushf
mov
and
pop
push
cmc
outsl
int
push
mov
mov
pop
fiaddl
sub
fcomp
arpl
daa
into
int
popf
and
add
xchg
lods
cmp
cwtl
fidivs
xor
sub
jp
stos
sub
inc
jbe
sar
pop
or
imul
sahf
leave
pop
arpl
cmpsb
popl
lret
or
cwtl
mov
outsb
lea
mov
out
std
scas
data16
and
or
pop
adc
xor
mov
addr16
insl
das
mov
hlt
arpl
xor
les
xchg
cmp
xchg
dec
sub
jo
and
dec
adc
js
jl
jo
sub
or
dec
jo
dec
xchg
mov
lret
cmp
jg
in
or
mov
loop
fwait
mov
or
lret
aad
into
xchg
xchg
xchg
getsec
sbb
lods
ret
inc
ss
sbb
pop
sti
xchg
js
fidivrs
jae
imul
lds
insb
mov
and
pop
aaa
jbe
add
sbb
push
leave
jl
fisubl
punpcklwd
push
fcmovu
push
sbbl
repz
xchg
jnp
mov
dec
mov
movsl
or
out
aas
adc
add
jnp
movsb
sub
lret
xchg
mov
lcall
add
leave
stos
jns
jno
nop
stos
imulb
imulb
std
mov
insb
lret
adc
in
push
lret
jno
fwait
stc
aad
imul
and
mov
xchg
pushf
fs
clc
lock
arpl
dec
inc
mov
mov
inc
lcall
sub
xchg
cmp
cmp
push
or
sbb
scas
inc
xchg
cmp
or
jmp
loop
int3
imul
jo
rorl
cmp
or
add
out
repnz
pop
in
jns
push
imul
mov
sub
out
or
inc
int
inc
cmp
add
xor
mov
les
je
mov
dec
or
mov
in
mov
cmp
dec
inc
ds
cmc
push
and
or
adc
xchg
lods
mov
pop
pop
xorl
pop
out
pusha
loopne
and
out
aaa
lea
dec
dec
xchg
pop
stc
lods
inc
repnz
jp
pop
bound
jl
xor
or
sub
lds
imul
jno
cltd
jno,pn
mov
mov
mov
add
push
lret
imulb
push
rorb
ja
adc
mov
sub
mov
fdivr
cmpsl
and
jmp
push
shll
adc
mov
jmp
mov
mov
xchg
dec
stos
stc
adc
iret
mov
push
mov
inc
test
lock
cld
aas
jp
cmpsb
lea
mov
lret
sarl
sub
hlt
pop
das
cmp
aad
xchg
ficoml
fdivrl
loop
cltd
inc
sbb
inc
cld
add
push
sbb
mov
lahf
lea
call
test
dec
mov
add
adc
and
aad
mov
push
fucomp
popf
mov
fidivrl
push
mov
fs
dec
mov
adc
nop
clc
jmp
out
in
jne
sahf
xchg
mov
mov
xor
push
fsub
jg
sbbl
movsb
push
or
popa
adc
xchg
imul
inc
sbb
movsb
lcall
ljmp
shll
sbb
jge
outsb
inc
cmp
fisttpll
daa
jno
stos
push
dec
int
sbb
dec
ds
inc
ljmp
xor
je
mov
fbstp
cli
das
xor
jnp
jecxz
add
xor
lret
into
adc
mov
ds
xchg
in
xor
dec
adc
int
mov
fldenv
scas
mov
in
decb
ds
jae
imul
cmp
add
xchg
sbb
pop
out
rcr
daa
or
jb
inc
std
into
arpl
mov
or
mov
fmul
adc
neg
icebp
sahf
test
xchg
test
call
pop
insb
movsb
mov
and
xor
sub
fwait
adc
push
data16
sbb
out
fiaddl
dec
mov
pop
jb
add
push
jno
insb
ja
pop
mov
cmpsl
loopne
adc
xchg
mov
xchg
clc
push
sbb
jb
push
test
hlt
add
push
mov
adc
hlt
idivl
push
lahf
insl
sub
leave
dec
mov
xchg
sub
sub
jl
jo
loope
and
ret
or
repz
cmp
lods
xor
int
cmp
icebp
test
aad
enter
or
in
fs
iret
in
mov
or
add
out
test
pop
mov
xchg
mov
jg
mov
inc
inc
add
stc
stos
in
or
or
and
adc
shlb
push
mov
std
imul
cmc
push
pop
mov
jno
add
or
cs
inc
jp
cmpl
daa
push
addb
push
lcall
les
adc
push
stos
xchg
out
and
iret
sbb
cmp
pusha
sub
mov
lret
icebp
jne
mov
mov
gs
sbb
adc
lods
push
mov
lret
mov
es
add
mov
scas
push
clc
push
cs
mov
mov
and
fsubrl
or
pop
gs
mov
xor
pop
and
sub
adc
imul
nop
sbb
fwait
push
sbb
mov
mov
adc
fnstsw
fs
inc
push
add
dec
aam
ret
jp
xchg
add
dec
in
fistps
in
pop
in
jmp
jl
lahf
repz
sbb
jg
sub
add
add
pop
imul
add
sti
std
and
dec
push
sub
lahf
pop
cmc
lahf
jns
adc
or
cmp
push
test
xchg
adc
and
mov
mov
and
ljmp
add
sbb
pop
clc
and
add
clc
in
repnz
xor
mov
cmp
out
push
insb
add
bnd
and
fsts
int
lods
jp
hlt
xchg
pop
pop
dec
jp
sub
or
push
push
movsb
in
test
jecxz
jo
inc
and
insl
mov
orl
popa
mov
add
xor
scas
jbe
inc
jp
scas
test
cmp
dec
sub
add
xchg
and
push
xor
arpl
xchg
sub
negl
test
test
pop
dec
lcall
adc
aam
test
jle
in
mov
cmpsl
pop
subl
fwait
pop
dec
or
pop
test
sub
es
inc
sti
mov
lds
push
add
pop
stos
and
adc
daa
icebp
dec
insl
sahf
mov
mov
sbb
out
stc
push
lahf
xchg
add
test
arpl
pushf
xor
ljmp
ret
lea
adc
sbb
aad
cmp
cmp
shlb
int3
sti
mov
jb
bound
es
lds
sbb
outsl
into
rorb
and
and
jle
test
loop
cltd
iret
aad
add
and
xor
dec
xor
mov
loopne
jnp
mov
add
xchg
sub
lahf
sub
scas
stos
cmp
in
or
cmp
pop
xor
incb
lds
popf
shrl
cmp
push
ret
mov
out
xchg
dec
leave
mov
sbb
es
sub
pop
add
pop
or
popa
pop
add
mov
popa
jnp
je
rcrl
clc
sub
mov
fs
push
sub
sbb
push
test
test
arpl
add
jae
lea
and
dec
xorl
fcoml
inc
xor
and
xchg
sub
and
stos
lret
inc
sahf
mov
sbbb
dec
pop
cld
sub
jecxz
repnz
in
pop
or
fcompl
sub
insl
push
ret
xchg
or
jmp
sub
inc
repnz
andl
pushl
stc
ret
or
test
sbb
xchg
sbb
cltd
cmp
or
mov
pcmpeqd
cld
add
jecxz
fs
push
or
inc
adc
xchg
jge
js
lds
out
fstp
jno
sub
into
push
test
inc
pop
dec
mov
adc
jg
or
and
addl
push
adc
xorl
mov
sbb
lods
arpl
xchg
mov
mov
movsl
in
lods
jns
add
push
mov
push
insb
mov
jbe
fmul
inc
fistl
cltd
popa
inc
repz
add
sti
pminsw
icebp
cli
cmp
addr16
inc
mov
aas
jg
shll
pop
add
jl
in
add
cmp
fmuls
push
js
inc
sub
pop
outsl
inc
loope
jns
add
sahf
mov
xor
xor
outsl
lahf
mov
loope
cmpsb
pop
cli
add
jnp
or
jne
dec
sbb
jp
insb
add
jp
dec
mov
orl
ss
sub
pop
roll
dec
ret
lret
int
shlb
test
add
sub
outsb
and
cwtl
stos
mov
push
cld
je
stc
fiadds
out
fld
mov
mov
jmp
xor
les
or
loop
ljmp
cld
ret
ret
ret
cli
adc
imul
out
jb
xchg
cmpsb
clc
mov
and
imul
pop
and
int
add
adc
js
aaa
jecxz
int
cmp
pushf
imul
cld
nop
jno
in
jbe
data16
mov
inc
lods
popf
cmp
push
xchg
dec
cmp
push
jp
outsb
pop
xchg
ljmp
push
sbb
push
xor
lahf
adc
pop
fs
ficomps
es
cmpsl
cmp
pop
sbb
icebp
jmp
loop
ret
sbb
aam
cmp
test
bswap
addr16
jmp
in
popf
in
and
sbbb
inc
jg
lahf
roll
xor
xor
xor
xor
adc
lock
fs
lcall
jge
test
push
pop
xchg
jno
mov
movsb
movsl
lds
xor
inc
push
pusha
nop
pmaxub
dec
push
add
cmpsl
stos
fcmovbe
xorb
gs
inc
aas
mov
cld
jo
jo
ds
push
cmp
push
popa
sbb
lock
pop
mov
aam
bound
aad
xor
cli
xchg
add
cltd
cwtl
xchg
mov
out
xor
mov
push
adc
aas
jg
fdivrl
test
hlt
cmp
repz
mov
jl
push
imul
cmp
div
cmp
cmp
push
nop
ds
inc
sub
xchg
int3
jnp
jmp
lods
sbb
pop
jmp
jmp
inc
push
sub
adc
out
loope
pushf
pop
mov
movsb
lea
mov
icebp
xchg
adc
push
test
rorb
fisubrl
push
mov
aad
push
mov
and
mov
scas
adc
cmp
xchg
xlat
scas
cmp
pop
jle
sahf
andl
fdivrp
add
push
mov
xchg
pop
mov
adc
jb
aam
mov
add
push
addr16
orb
jecxz
xchg
sub
bound
std
pop
in
xor
fistpll
xor
cmp
ljmp
int
mov
test
insb
ror
stc
adc
loope
and
lret
xor
bound
xor
in
pop
scas
aad
in
and
and
push
inc
fistps
cmp
clc
sbb
jo
movsb
into
mov
cmp
sar
push
xrelease
jno
inc
xor
push
adc
aaa
sub
push
fstpl
pop
rorb
sbb
loopne
sbb
ljmp
nop
sub
addb
in
sub
mov
mov
add
andl
adc
xchg
xchg
scas
jg
das
or
pop
repz
mov
arpl
sub
ficompl
xchg
mov
gs
mov
insb
insl
daa
mov
out
enter
andb
and
pop
nop
push
dec
repnz
xchg
imul
or
mov
imul
lods
mov
push
mov
rcrl
cmp
cmpsl
or
xchg
cwtl
cmpsb
xor
xlat
nopl
inc
sti
mov
mov
in
outsb
adc
mov
das
xor
and
mov
cmp
movsb
mov
sti
jns
add
divb
shll
mov
aas
xor
dec
inc
cmc
in
aaa
dec
or
inc
inc
daa
adc
call
test
pop
leave
insb
xchg
les
mov
mov
ret
sub
mov
push
cmp
outsl
mov
fisubrl
in
cmp
inc
shll
and
ja
or
add
sbb
jecxz
pop
out
aaa
sub
movsl
and
pop
xor
mov
ljmp
mov
inc
movsl
cltd
call
aaa
out
sub
jg
or
pop
mov
mov
fdivl
push
and
pop
cwtl
scas
mov
loop
std
out
aas
aad
xchg
das
imul
movsl
xor
pop
frstpm(287
jg
mov
and
lcall
xchg
sub
push
inc
cmpb
adc
stc
dec
sahf
pop
stos
js
xor
inc
fiadds
adc
sbb
mov
cmp
js
ficoms
mov
xor
icebp
pop
and
adc
xchg
stc
lcall
and
pop
push
mov
pop
xchg
cmp
adc
pop
inc
jmp
cwtl
jle
mov
js
push
test
and
outsl
push
mov
loope
in
cmpsl
call
mov
cmp
push
jg
scas
out
adc
das
mov
mov
mov
add
push
jge
mov
sub
hlt
aas
inc
mov
dec
and
pushf
cmp
cmp
imul
js
imul
jnp
shl
xchg
xor
pop
iret
imul
enter
dec
sbb
cmp
and
in
mov
push
shrl
mov
call
shll
mov
mov
cli
jb
jecxz
addr16
lret
adc
movsl
xchg
adc
xchg
push
jle
and
sub
mov
std
stos
mov
pop
lret
in
xor
mov
mov
je
fistps
mov
cmp
or
lret
dec
in
jg
movsl
jecxz
in
mov
cs
ror
arpl
negl
dec
add
jmp
mov
repnz
repnz
push
imul
pop
dec
xchg
clc
dec
push
les
aad
sbb
add
xor
jo
stos
aad
ret
mov
fidivl
push
push
sub
jne
push
int
mov
ret
lods
jns
ss
sub
jnp
enter
sbb
or
arpl
xor
xlat
mov
call
pop
xchg
xor
push
jecxz
pushf
call
loope
xor
dec
xchg
pushf
cmc
push
addl
call
test
sahf
pop
xorl
sbb
cmp
push
mov
add
mov
xor
and
sub
icebp
jno
xchg
call
mov
btl
mov
jae
test
jns
data16
xchg
sub
dec
cltd
push
push
add
lods
push
inc
je
imul
daa
imul
add
repz
out
mov
push
adc
into
mov
arpl
mov
fstpl
pop
or
and
adc
loope
adc
mov
mov
dec
dec
daa
fwait
jp
bound
les
xor
in
xlat
int3
cltd
imul
stos
xchg
pop
test
adc
pop
cwtl
pusha
sbb
lret
jmp
addl
cmp
adc
ja
dec
cmpsb
cmp
das
lock
clc
jmp
push
inc
mov
lret
dec
jl
fdivl
mov
lret
adc
leave
mov
inc
leave
insl
cmpb
mov
pop
sbb
rorb
push
and
xor
or
leave
push
js
lahf
pop
pop
clc
cld
pop
test
out
and
clc
test
xchg
dec
aas
aam
or
dec
scas
pop
push
mov
add
imul
jmp
mov
imul
jle
xor
pusha
jbe
out
imul
pushf
inc
in
add
movsl
fsubl
popf
mov
mov
pop
sub
mov
aam
and
das
or
lret
stos
fnsave
test
aam
addr16
inc
out
rcrb
fistps
push
and
imul
lret
pushf
jecxz
dec
adc
repz
push
repz
ss
addr16
mov
jge
das
sarl
and
stos
mov
dec
cmp
stos
fstpt
xor
xor
pop
sub
sti
std
sbbb
mov
or
mov
pop
fisubl
test
mov
mov
cmc
sbb
cmp
in
cmp
arpl
push
inc
inc
and
inc
shrb
add
aaa
fistl
adc
sub
in
ss
mov
sub
shl
movsb
stos
inc
je
lret
pop
xchg
test
das
loop
xor
inc
jbe
cmp
mov
mov
adc
push
and
in
sub
movsl
inc
or
imul
mov
mov
cmpsl
mov
push
out
dec
and
and
and
adc
pop
inc
push
lahf
jbe
daa
addr16
and
adc
sub
call
out
cmp
dec
jbe
push
cmpl
sub
test
das
ret
or
aas
push
jno
push
iret
push
call
and
loop
mov
mov
jne
je
xchg
jecxz
mov
pop
mov
sub
ss
mov
iret
jle
pop
or
es
ds
je
pop
xor
lcall
and
inc
imul
mov
inc
push
mov
mov
outsl
hlt
or
in
adc
adc
dec
das
and
mov
pop
outsb
lock
or
lds
push
jo
ret
insb
push
daa
cs
or
xchg
ss
push
mov
int3
int3
push
inc
stos
xchg
dec
ja
inc
dec
xchg
and
cmp
mov
imul
scas
inc
fwait
outsb
or
fiadds
inc
mov
sub
xchg
add
add
push
inc
pop
js
lcall
jecxz
mov
or
push
inc
fnstenv
mov
jns
add
ja
pop
pop
in
repz
fcmovnb
pop
sbb
lea
loopne
pop
imul
fisttps
xchg
addr16
and
or
pop
push
lods
mov
lret
dec
loopne
cmp
mov
mov
xchg
fistps
lods
xchg
lea
inc
daa
pop
mov
xchg
adc
add
push
sub
add
sar
add
mov
stc
sub
mov
or
pop
fsts
aad
push
movsl
stos
test
dec
inc
clc
push
popf
out
jnp
cmpsb
ret
pmaxsw
sahf
ss
inc
pop
add
sub
sub
add
pusha
outsl
adc
and
jl
addl
rcrb
je
out
jl
jecxz
pop
sub
lock
out
xchg
xchg
mov
adc
aam
xlat
je
cmc
add
stos
cltd
and
mov
adc
xor
andl
sbb
in
stos
jecxz
pop
jbe
hlt
not
adc
adc
jo,pt
dec
xchg
sbb
lds
jb
xor
push
lock
push
aam
cmpsb
in
mov
sbb
cmp
imul
adc
fimuls
sbb
test
mov
dec
in
mov
adc
jl
scas
pop
mov
loop
sub
push
xchg
sysexit
ret
xor
movsl
divl
dec
and
and
cwtl
mov
adc
bound
jbe
pop
jae
push
cltd
add
mov
arpl
repz
lret
call
add
mov
mov
xchg
std
inc
push
mov
popf
in
sahf
sub
xchg
or
mov
jnp
mov
js
test
push
icebp
aad
rorl
lea
pushf
ss
mov
dec
inc
loop
sahf
adc
jo
adc
pop
mov
pop
add
xor
jecxz
sbb
insb
push
sbb
aam
jmp
jge
adc
fdivrs
cmpb
or
fwait
aas
das
pop
pop
cld
insb
sbb
dec
mov
xor
jbe
mov
fwait
adc
shlb
das
mov
xchg
lret
mov
mov
xor
enter
sbb
push
dec
sbb
xchg
lcall
mov
lret
xor
test
jbe
adc
push
adc
inc
adc
dec
sub
or
das
fistl
je
es
add
xchg
data16
lods
dec
aaa
pop
inc
or
scas
xor
mov
pop
lret
mov
jge
jae
lea
icebp
fs
pop
inc
and
adc
outsb
and
mov
cmpsb
ficoml
mov
ret
mov
nop
sbb
xlat
sub
add
dec
mov
fildll
lods
xor
out
push
pop
ss
adc
shrb
stos
out
cli
bnd
adc
jne
inc
cmp
and
inc
inc
fisubs
mov
xchg
in
pop
das
das
jge
cmp
arpl
push
push
lret
mov
xchg
inc
jge
lret
scas
lods
inc
lea
add
jp
call
shl
adc
add
pop
arpl
cmp
lods
jo
or
and
sbb
roll
mov
pop
push
mov
cwtl
dec
jle
dec
sbb
ret
inc
mov
subl
imul
das
jbe
mov
jg
mov
int3
js
mov
adc
mov
pop
push
shll
dec
mov
icebp
mov
js
adc
insl
cmpsb
sbb
push
das
jmp
imul
call
mov
cmc
xor
sbb
xor
iret
pushf
je
loope
mov
mov
roll
or
movsb
push
pop
insl
jmp
out
xor
inc
mov
jmp
ljmp
scas
adc
jle
adc
mov
or
cltd
in
push
lock
sub
lods
add
inc
movsl
and
mov
sub
mov
jne
out
cmc
pop
sub
enter
dec
loopne
insb
adc
and
jg
jle
call
dec
inc
idivl
dec
lahf
xchg
inc
push
movsl
mov
push
in
push
int3
mov
sub
push
out
mov
pop
mov
push
mov
jg
or
push
int
mov
mov
repz
clc
push
push
mov
cmp
sbb
inc
fisttpll
pop
ljmp
sahf
lret
je
out
loopne
add
stos
dec
jg
movsl
outsb
pop
xor
iret
dec
jo
jle
and
push
test
fdivs
aaa
add
cmp
insl
test
notb
pop
ljmp
loopne
rolb
adc
sub
out
popa
int
xchg
inc
arpl
sbb
mov
lock
lods
push
adc
fcoms
xchg
out
pop
and
out
jg
mov
popf
mov
shlb
sub
xor
push
inc
mov
and
cs
adcl
adc
push
rcr
sti
push
sbb
test
movsl
inc
mov
pop
inc
dec
movsb
jg
fisttps
xchg
xor
xchg
sbb
daa
lret
test
jnp
and
fcomip
add
add
es
test
les
scas
lahf
cmc
xor
mov
push
pop
data16
add
jg
cs
inc
pop
pop
and
and
sbb
sub
mov
movsb
jne
jg
mov
add
inc
ret
sti
dec
or
push
loope
pop
mov
cmp
xchg
ror
fsubp
push
pop
cs
cmp
cltd
je
pop
int3
sti
andl
mov
push
sbb
and
jnp
shrl
jne
clc
fsubrl
push
jmp
pushf
mov
or
inc
or
and
add
lahf
inc
dec
fsts
add
stc
mov
add
cld
aas
push
aad
jle
loope
addl
sbb
push
out
aam
outsl
adc
sbb
jle
cmp
pusha
dec
sub
or
rcr
sub
mov
in
inc
arpl
mov
and
xor
addr16
mov
pusha
out
lcall
push
xor
cmc
outsl
vpcmpeqd
jno
push
cmp
imul
sub
mov
mov
jbe
int3
sti
hlt
mov
sub
sub
sbb
dec
into
dec
xlat
or
mov
sti
mov
sub
dec
adc
lahf
js
lret
vhaddpd
inc
sub
pop
shrw
orl
and
mov
mov
and
mov
test
aam
test
test
push
mov
mov
push
out
push
add
sub
rolb
fldl
fimuls
push
les
mov
mov
popf
clc
cmp
pop
test
or
xor
xchg
jbe
movsb
pop
cld
or
xchg
popf
lods
out
push
arpl
inc
dec
js
pushf
clc
or
xchg
hlt
push
in
inc
adc
sbb
pop
pushf
push
rclb
pusha
xchg
jo
push
fidivrs
sbb
push
test
into
mov
push
push
loope
mov
ficompl
xor
jns
stos
fstl
and
jae
push
jl
mov
cmpsl
pop
mov
ja
mov
inc
in
orl
out
cmp
mov
cmp
dec
lret
adc
lds
cmp
jns
sbb
xchg
push
icebp
cltd
lcall
adc
dec
fiaddl
js
mov
push
xchg
xchg
jb
push
jmp
xor
daa
pop
mov
mov
inc
imul
lcall
adc
xor
inc
scas
cmp
pop
cltd
outsb
pop
mov
into
aas
push
ret
mov
push
xlat
dec
popa
out
xchg
pop
xor
test
mov
xchg
fcomi
cmc
jle
sub
adc
fs
int3
dec
inc
in
mov
add
sbb
pop
xchg
lret
adc
mov
xor
cmpsl
js
out
adc
lcall
mov
sbb
lcall
mov
cmp
cmp
mov
mov
pop
sub
cmpb
adc
jne
and
icebp
daa
cmp
adc
fnstenv
aam
pop
stos
ds
mov
js
dec
add
add
cmpsb
cmpsb
js
je
mov
test
aad
call
rorb
mov
xchg
xchg
scas
push
xor
pop
nop
ja
leave
scas
in
ud2
outsl
leave
pop
hlt
imul
loop
mov
out
stc
add
dec
jmp
jbe
sbb
pushf
add
sti
incl
and
push
pop
loop
pop
sbb
and
scas
rcr
dec
sub
std
push
ljmp
insb
adc
ds
ss
cmpsl
pop
mov
mov
mov
push
pop
je
lahf
scas
cmpsb
mov
cmc
mov
push
arpl
and
sbb
jnp
fisubrs
data16
inc
mov
stos
in
push
notb
pop
push
je
push
out
in
and
and
imul
xor
cltd
inc
lea
enter
push
hlt
adc
cmc
or
xor
aam
lret
cmpsl
and
ret
mov
and
loop
ja
adc
loope
adc
mov
aad
xor
inc
add
push
mov
imul
dec
inc
xor
sbb
enter
bound
mov
rorb
test
in
adc
lahf
jns
lcall
js
mov
ret
adc
cs
pop
push
out
icebp
mov
ficoms
out
std
xchg
mov
sub
movsl
adc
push
push
sbb
jae
and
cmp
faddp
test
lock
jmp
stos
or
push
test
inc
iret
mov
jecxz
or
inc
clc
adc
jne
ljmp
mov
dec
ret
nop
fs
sub
xor
adc
dec
dec
clc
hlt
aas
dec
cmpsl
pop
lret
push
sub
sbb
jmp
aas
ja
divl
push
jmp
mov
mov
imul
gs
inc
pop
fdiv
inc
out
je
adc
dec
in
jnp
mov
fmull
gs
rol
notb
repnz
int
out
hlt
movsl
outsl
jnp
mov
fcmovnbe
je
loop
mov
xchg
cmp
repz
mov
cmp
aaa
and
add
sbb
dec
cmp
xchg
mov
mov
mov
add
les
inc
dec
out
dec
sbb
mov
and
mov
mov
in
inc
pop
gs
xchg
orl
sub
in
mov
mov
fdivr
add
xor
fildl
and
mov
in
pop
or
inc
dec
out
sbb
inc
ret
cmp
jecxz
adc
dec
xchg
outsl
sub
ds
mov
and
push
cmpsb
sub
and
xor
sbb
jp
fisttps
xor
adc
insl
push
adc
sbb
daa
push
std
fwait
fisttpl
sbb
and
fiaddl
cmpb
lods
leave
jl
cmp
in
mov
xor
cld
mov
pop
pop
xor
test
ret
inc
xchg
pop
gs
mov
mov
into
push
popa
jns
pop
leave
inc
addb
lret
inc
aaa
bndstx
push
jo
rol
adc
push
mov
fsubr
xor
mov
lcall
cld
cmp
movsl
mov
mov
mulb
sbb
fistps
ret
cs
inc
inc
out
sbb
in
test
and
pop
lods
cmpsl
scas
jnp
les
lods
push
movsl
test
jmp
adc
fs
pop
stos
and
nop
loopne
lods
jg
mov
adc
jno
icebp
or
xchg
pop
mov
inc
pop
bound
fs
out
push
test
xchg
adc
add
inc
xchg
cmp
xchg
xchg
add
pop
mov
xlat
mov
nop
sahf
fsubr
lods
pop
xor
test
dec
lcall
pop
and
mov
cmpsl
inc
jne
cmc
stos
addr16
jnp
lods
fdivrl
xlat
inc
int3
mov
in
xchg
jns
jo
and
inc
scas
mov
call
mov
mov
stos
jb
shlb
cld
popf
mov
sub
lods
daa
cld
mov
ljmp
int
xlat
lret
add
push
test
test
lcall
pop
scas
dec
cs
inc
movsl
cmpsl
addr16
pop
xor
push
lock
add
outsb
add
xchg
xchg
and
or
cmpsb
into
fs
mov
pop
cmc
lock
jb
cmp
pop
xchg
xchg
mov
push
xor
test
cmpsw
ss
or
testl
fnstenv
cmp
jmp
add
int
stos
fisttpl
lret
roll
jge
loope
jge
inc
cmp
sub
mov
pop
out
sbb
aad
in
push
shll
adc
cwtl
into
lods
push
sub
adc
jno
shlb
push
mov
jae
pop
fstl
or
and
and
ret
outsb
jb
cli
daa
movd
cmpsb
loope
mov
mov
jno
sbb
dec
push
in
or
sti
mov
adc
jb,pn
dec
int
or
lcall
or
dec
inc
push
sbb
sbb
arpl
shll
jle
mov
mov
sbb
add
mov
or
mov
pop
and
jl
jae
cmp
cmpsb
dec
leave
std
fwait
movsl
out
jns
cltd
shr
fisubl
xor
push
mov
fcompl
inc
mov
test
push
push
jmp
addr16
sti
out
loop
out
pushf
ljmpw
testb
pop
push
mov
aas
js
hlt
jmp
mov
lahf
test
mov
mov
js
test
out
inc
test
mov
lret
push
sahf
dec
aad
or
jmp
adc
mov
xchg
push
pusha
in
mov
inc
push
mov
mov
into
bound
mov
out
cmovbe
xchg
and
addl
inc
out
sub
cli
xchg
add
cmc
popa
push
call
fimull
test
inc
mov
inc
push
mov
filds
xor
or
cmc
nop
push
xlat
xor
inc
xorb
aas
mov
das
je
mov
in
xchg
pushl
jbe
test
mov
pushl
fdivs
daa
scas
push
icebp
push
push
loopne
filds
andb
xchg
xchg
xor
sbb
mov
imul
in
inc
mov
in
mov
cmp
push
es
add
xor
imul
cmp
adc
adc
push
fcompl
mov
add
dec
xor
pusha
dec
push
ljmp
roll
lods
shrb
mov
pop
rcrb
sarb
lcall
loope
inc
mov
shll
mov
mov
sub
and
ljmp
hlt
xor
cmp
inc
sbbl
cld
dec
or
pop
popa
fnstcw
xor
iret
cmp
mov
sahf
fdivl
inc
mov
scas
dec
inc
and
adc
addl
adc
jb
loopne
popf
cmp
jmp
push
or
lret
js
xchg
push
movsl
jp
xor
shll
shlb
rcrl
sub
out
es
ja
test
jns
mov
lcall
inc
shl
adc
pop
lahf
push
jne
pop
pop
push
fadds
sti
sti
sbb
or
rolb
mov
arpl
fucomp
out
add
daa
jp
sbb
push
aam
mov
mov
sub
mov
xchg
loope
push
repz
cmp
sbbb
dec
loopne
arpl
sub
or
pop
repnz
push
mov
das
stos
jg
pusha
dec
rol
adc
push
int3
test
sbb
sub
dec
dec
xchg
iret
outsl
xchg
pusha
sbb
sbb
dec
push
clc
mov
xchg
and
cmpsl
imul
and
add
dec
jge
adc
arpl
xchg
add
jae
sti
add
iret
call
xchg
push
or
das
repnz
xlat
sbb
add
xchg
or
sarb
fsubrs
add
fadd
cmpb
pop
xor
test
lret
adc
cmpsb
scas
jecxz
rolb
aad
lds
test
sahf
mov
int
cvtps2pd
js
sbbl
mov
aad
mov
cmpl
cli
aas
dec
mov
fildll
jl
pop
push
pop
xchg
stos
lods
outsb
cmp
dec
xchg
nop
or
scas
scas
int
xor
push
cmpb
addr16
test
and
jg
or
cld
hlt
push
mov
movsb
and
movsb
sub
pop
scas
xor
push
adc
mov
push
adc
push
fwait
sub
incl
icebp
mov
mov
jae
push
out
pop
sbb
sti
add
mov
inc
pop
mov
dec
pop
xor
test
out
shl
test
push
out
xchg
add
repnz
pop
icebp
mov
sbb
adc
das
cli
xor
imul
cmp
int3
test
rolb
pop
mov
mov
add
lret
test
mov
jmp
mov
ja
push
and
out
or
xor
ret
cmp
mov
mov
sbb
and
fwait
xor
pop
fsubrp
int3
icebp
add
pop
rcll
jmp
pop
mov
pop
mov
cmpsl
mov
mov
pop
jae
nop
lret
js
pop
repnz
mov
loope
outsl
hlt
push
test
sub
mov
cmp
rol
cmp
cmp
and
or
pop
testl
inc
fsubrl
mov
adc
and
pop
scas
sti
adcl
out
or
lahf
mov
pop
rolb
unpcklps
mov
sub
push
ja
sbb
ret
pop
cli
sbb
inc
mov
xchg
imul
js
nop
sti
loope
ja
lahf
inc
add
xchg
out
arpl
fstpt
xlat
stos
lahf
pop
dec
dec
fwait
je
push
push
mov
xchg
cmpsb
mov
test
lods
jns
lret
jle
fwait
pop
or
stos
outsb
je
inc
adc
in
mov
pop
scas
scas
outsl
pusha
out
fdivl
cmpsl
fiadds
stos
dec
mov
inc
inc
sub
xor
enter
mov
repz
mov
push
sti
pop
rcrb
push
int
loopne
sbb
push
popf
sbb
adc
and
jmp
mov
xor
cld
lret
xor
sub
push
sbb
add
pop
pop
cmc
aas
and
mov
aas
mov
fists
add
push
lods
popf
cltd
fists
outsb
pop
lods
sub
adc
xchg
jmp
xchg
lock
clc
or
jbe
sub
xor
jo
test
push
and
sahf
pushl
pushf
insl
push
push
xorb
outsb
std
je
pop
push
testl
pop
movsl
adc
pop
or
icebp
dec
or
fwait
aad
mov
sub
std
cmpsl
mov
shrb
pushf
mov
jbe
push
or
lret
xchg
movsb
stc
xchg
in
in
sbb
adc
fdivrl
std
int
int3
mov
mov
nop
dec
push
out
sarl
sbb
out
int
mov
imul
repz
fstpt
outsl
sbb
push
fstps
mov
jp
rcrb
inc
in
push
cmp
int3
and
fs
sti
inc
inc
push
mov
mov
pop
inc
push
cltd
cmp
ret
mov
push
jns
add
jne
and
mov
push
cmp
popa
push
out
push
shll
dec
mov
jns
pushf
or
daa
push
rcrb
jno
push
ljmp
dec
clc
popa
mov
fstl
and
sbb
adc
loopne
jns
les
repnz
sub
fistps
inc
sbb
sub
je
lock
xchg
pop
daa
fstl
ret
mov
xchg
and
pop
imul
push
mov
sub
sarb
outsb
cmc
pop
mov
mov
clc
fimull
push
stos
sub
leave
jno
ficomps
outsb
inc
mov
insb
ret
add
jns
inc
das
sahf
jg
sti
cmpsb
mov
adc
insl
and
daa
or
add
jl
mov
cli
mov
inc
inc
dec
imul
mov
lret
in
fs
fimuls
pop
loopne
stos
call
cmp
mov
pusha
add
gs
cmp
and
pop
popa
in
push
sbb
rorb
popa
cmp
jno
xchg
out
pop
mov
cld
lret
inc
mov
xor
call
aam
fsubr
mov
inc
int3
jne
pop
mov
and
ljmp
pusha
mov
xor
push
add
dec
mov
repnz
bnd
mov
sbb
xor
enter
dec
push
inc
daa
cmova
arpl
movl
std
ret
fbstp
es
mov
or
nop
insl
icebp
je
cmp
fldt
jecxz
nop
inc
in
cli
inc
fs
mov
cld
cmovo
xchg
test
push
shrb
ret
fst
cmc
loop
ja
cmp
mov
popf
jae
xlat
js
pop
shll
out
testl
push
mov
shlb
fistpll
mov
push
jmp
add
repz
ffree
mov
test
mov
add
sbb
int
fnstsw
pop
rorl
mov
stos
adc
fwait
loopne
in
xchg
dec
sub
sarl
adc
adc
fsubs
jl
jno
mov
imul
out
addr16
and
xchg
test
lods
add
jg
in
pushf
xor
xlat
icebp
bound
mov
loope
stos
mov
sub
in
test
lret
mov
das
adc
gs
insb
insl
shr
in
std
add
ret
xchg
xchg
std
or
addb
dec
or
loope
pop
xchg
faddl
cmp
lcall
add
sub
loope
lock
mov
adc
push
jmp
mov
setp
mov
lods
sub
fwait
mov
mov
cwtl
iret
jmp
movsl
and
arpl
lds
jge
test
cmpb
inc
cmp
sub
inc
popf
cmp
hlt
int3
mov
in
cmc
sub
inc
xchg
addb
pop
inc
add
decl
fcomps
imul
add
mov
inc
rcrb
pop
add
in
femms
adc
insl
aam
jg
pop
xor
repnz
sbb
out
js
adc
cltd
out
andb
dec
ljmp
sub
lock
lret
les
push
cmp
cmpsl
enter
and
mov
js
scas
pop
cmp
dec
mov
test
dec
dec
jp
xchg
mov
push
sub
nop
scas
cmp
inc
jl
stc
mov
and
loop
pop
mov
xchg
dec
sub
mov
jp
push
fcmovne
lcall
xchg
jb
mov
xor
jnp
fwait
ss
lds
stos
pop
fs
inc
push
or
mov
adc
stos
push
cwtl
scas
jle
fwait
test
les
mov
stc
bound
inc
lds
add
adc
js
mov
mov
scas
adc
sub
xchg
sub
lea
or
pop
add
jmp
and
ja
lds
testl
or
xor
sub
sub
mov
out
leave
in
mov
repz
mov
pop
das
or
loope
pop
pop
add
inc
or
adc
jae
shlb
inc
xor
adc
push
mov
mov
xchg
out
in
out
aam
popa
jl
lea
cli
sub
cmc
xchg
mov
mov
jp
dec
inc
push
push
fcoml
sti
into
mov
dec
fsubrs
inc
fwait
sarb
xlat
test
popa
pusha
aas
leave
jge
dec
dec
jecxz
xlat
stos
push
pop
cmp
jb
cwtl
mov
cmpsl
fisttps
lea
out
je
dec
push
ss
stos
dec
addr16
decb
push
lcall
xchg
mov
les
pop
call
rcll
xor
and
std
xchg
inc
dec
mov
jbe
pop
and
mov
adc
and
xor
mov
pop
xor
rorl
inc
cmp
mov
addr16
lods
test
or
cmp
xor
leave
negb
pop
fdivrp
lds
xchg
lcall
repz
jo
fmuls
mov
inc
hlt
ss
push
clc
adc
xchg
test
cmp
cld
sub
pop
mov
mov
loop
shlb
lods
and
sahf
out
pmaxub
jo
jae
iret
inc
jp
dec
imul
xchg
adc
push
cmp
and
retw
push
and
jbe
and
data16
xor
cs
lods
fstpt
iret
xor
or
sub
mov
stc
mov
add
out
inc
adc
push
nop
mov
ljmp
js
fwait
adc
mov
roll
mov
push
imulb
cltd
cli
sub
das
or
gs
or
ja
mov
into
outsb
jo
mov
sub
icebp
test
add
jb
gs
les
movsb
mov
mov
sub
jle
sub
adc
sub
xchg
pop
arpl
in
xor
mov
loope
in
adc
push
sub
xchg
mov
ficompl
mov
dec
push
out
insl
lock
jns
popf
add
adc
sbb
adc
repz
adc
sbb
push
mov
push
xor
stos
adc
enter
inc
scas
xchg
je
pop
mov
or
in
test
inc
jnp
jecxz
mov
lds
inc
xchg
rcr
sub
sbb
mov
imul
call
mov
xchg
adc
and
test
ss
in
sbb
and
lahf
cmp
cmp
mov
leave
out
mov
mov
shrb
push
or
or
mov
add
adc
mov
dec
bound
jg
lcall
hlt
pop
or
pop
or
leave
lock
xchg
hlt
inc
or
jmp
sbb
push
fs
or
lds
int3
sarb
js
adc
daa
ja
in
xchg
jo
fisttps
mov
sub
leave
jg
sahf
loope
cmp
call
in
test
pop
add
mov
dec
sbb
ss
sahf
ror
ffreep
popf
out
xchg
jno
xlat
xor
mov
adc
clc
imul
sbb
stos
adc
rolb
xor
sub
xchg
or
insl
outsl
add
push
jno
jne
mov
mov
rcrl
push
sub
add
push
sbbl
add
sbb
fnsave
lods
sbb
mov
sahf
cwtl
in
mov
clc
adc
adc
mov
or
aaa
out
pop
movsl
lret
popf
aaa
scas
sub
popf
jb
push
push
rol
cs
xor
fistl
lret
or
int
add
ficoms
in
dec
cld
mov
int3
mov
push
int
loope
dec
js
notl
jno
outsl
sub
fwait
in
mov
outsl
paddd
cmp
bound
xor
fistpl
jecxz
and
hlt
mov
jnp
push
inc
pslld
pop
sbb
les
mov
popa
mov
popf
jg
popf
mov
shr
dec
fdivs
jne
imul
loope
xor
push
mov
sahf
inc
stos
mov
clc
sub
xor
and
add
inc
pop
adc
xchg
jo
scas
test
cmc
or
sbb
add
fsubrs
loope
repnz
or
xor
outsl
mov
lock
out
je
movsl
out
outsb
mov
in
fwait
sbb
lcall
cmp
pop
fildl
outsl
cmpsb
popf
jb
roll
jle
or
imul
stos
sub
adc
pop
lret
jge
cwtl
jne
insb
dec
lods
jecxz
sub
sarb
imul
popf
insb
popf
push
mov
mov
sub
mov
dec
movsb
add
add
adc
std
jb
sti
clc
int
in
lcall
add
mov
test
dec
aad
out
outsl
cmpsb
repz
int3
inc
aaa
sub
movsl
lret
gs
fidivl
sbb
xor
and
push
xchg
add
pop
push
scas
pop
jl
mov
sub
stos
fistpl
jno
repz
iret
popa
incl
or
sub
xchg
dec
or
pop
cmc
pop
adc
imul
lcall
in
mov
fdivrl
test
adc
dec
push
lods
inc
cwtl
or
pcmpgtd
mov
lods
jae
sub
cmp
test
xchg
lahf
sti
cmp
sar
movnti
push
fsubrl
push
flds
repz
adc
fnsave
lret
sub
mov
mov
mov
fwait
jmp
daa
shlb
inc
cmp
inc
mov
sub
xchg
cwtl
popa
pop
jbe
add
outsb
xchg
int3
ja
andl
enter
add
shrb
fwait
mov
movsl
stos
dec
xchg
add
movsl
jecxz
dec
inc
mov
xor
adc
pop
flds
or
mov
jne
shlb
push
mull
jae
and
inc
in
div
icebp
nop
adc
es
or
dec
out
data16
and
add
orl
dec
lahf
repz
sub
jbe
in
jmp
popa
add
xlat
data16
mov
sub
negb
nop
inc
push
decl
sbb
sbbl
or
pop
add
enter
inc
push
inc
push
lcall
mov
xchg
mov
jbe
adc
daa
inc
or
and
mov
cmp
mov
test
pop
push
sbb
jp
sub
ss
adc
cltd
sbb
and
insl
fwait
mov
adc
pusha
xchg
aas
out
push
aaa
sub
mov
cmp
imul
adc
pop
or
fldl
imul
inc
inc
pop
dec
pop
daa
sahf
lcall
mov
inc
inc
cmpsb
xor
out
jp
popf
mov
dec
or
inc
in
pop
imul
jp
add
sbb
test
adc
loopne
loop
xor
arpl
pusha
ja
shrl
dec
lds
movsl
sbb
sbb
sub
dec
dec
cli
leave
cld
inc
fs
inc
xor
mov
cltd
gs
and
mov
and
pop
das
mov
sub
fincstp
mov
push
xor
aas
mov
fsubs
dec
sbb
sbb
scas
pop
arpl
out
push
sbb
rclb
add
enter
add
mov
cmp
inc
fimuls
jae
jmp
testl
icebp
test
and
cli
icebp
inc
pushf
mov
imul
outsl
adc
mov
cmp
in
or
xor
std
dec
dec
shll
stos
mov
adc
and
push
fstps
sahf
dec
push
or
jp
out
pavgb
pop
sahf
cmp
or
push
lock
je
dec
rolb
pop
inc
fidivs
adc
xor
xor
push
jns
mov
cmc
fwait
push
pop
jp
dec
movsb
adc
scas
push
sbb
cmp
dec
les
dec
lret
out
aaa
lahf
push
js
jg
sbb
adc
mov
jecxz
pop
ds
cmp
jae
test
test
or
cmp
pushl
sub
jb
lcall
popf
sbb
cmp
pusha
dec
cs
xor
sub
mov
mov
cmp
mov
je
cmp
cwtl
cmpsb
adc
fstl
test
or
movsl
mov
std
cmpsb
and
std
dec
adc
cli
or
pop
mov
jo
add
or
lock
xchg
lahf
ret
sub
sub
xchg
xlat
movsb
sbb
cwtl
xchg
xor
rorb
mov
sbb
xchg
and
add
lret
mov
je
push
mov
jle
leave
stos
fmuls
ljmp
out
fldt
leave
lods
xchg
add
inc
nop
add
xchg
dec
sub
mov
mul
cmp
xor
jb
and
in
scas
mov
sbb
inc
aas
xchg
je
je
in
sub
sbb
cwtl
repnz
mov
add
mov
daa
psubw
jge
ljmp
dec
or
cld
push
mov
inc
sub
ret
mov
sahf
out
and
imul
cmpsb
divl
adc
pop
out
xchg
rcl
aaa
sahf
mov
out
or
test
sub
pop
lods
mov
mov
call
jae
inc
icebp
icebp
cmc
fwait
adc
jl
mov
xor
inc
pop
fnstenv
and
push
xchg
loop
or
shlb
sbb
ret
loopne
jmp
cli
sti
outsl
hlt
mov
insb
jg
cld
imul
subl
and
scas
pop
jne
sbb
jp
mov
push
cmp
sarb
sahf
scas
sub
add
mov
jno
push
or
push
jbe
mov
sub
xchg
subl
incb
push
int3
mov
addr16
in
jp
xchg
negb
mov
adc
push
jno
sub
pop
shll
aas
pop
pop
jge
or
mov
push
fisttpll
push
cmpsb
das
stos
jge
and
cs
xor
das
and
jae
mov
jb
and
xchg
lods
mov
xor
mov
ret
in
mov
xchg
push
mov
mov
and
clc
enter
out
es
inc
mov
mov
es
dec
roll
push
pop
repz
pop
mov
xor
in
scas
cmp
push
dec
repz
testb
xlat
outsb
leave
pusha
in
in
fs
cld
xchg
stc
imul
out
in
or
xchg
jmp
je
mov
cmp
cs
fwait
popl
lea
imul
divl
fwait
push
sar
je
mov
inc
rcrb
lret
xchg
cmc
push
cmp
dec
ds
shlb
push
xor
mov
insb
sub
das
fsubrl
clc
jl
jg
add
push
les
xchg
xchg
lds
cli
xor
sub
push
jecxz
or
gs
testb
xchg
sub
inc
jl
out
pop
aas
das
nop
mov
movl
inc
mov
lods
xchg
fidivrs
sub
in
and
pop
pop
xlat
pop
fnsave
xor
pop
push
push
push
sbb
call
fnstenv
adc
aad
decl
aaa
lret
inc
sub
into
outsb
dec
loopne
mov
loopne
gs
push
lods
call
outsl
cmp
xor
pushf
movl
dec
imul
cwtl
adc
inc
push
inc
adc
mov
cmp
in
inc
gs
mov
test
dec
dec
and
inc
xor
xchg
xchg
dec
pop
push
aad
mov
lods
xchg
mov
ret
loop
andb
inc
push
rcr
popf
inc
icebp
pop
ljmp
outsl
lods
dec
or
mov
loope
adc
dec
int3
addb
sbb
push
scas
insb
test
mov
mov
and
out
aam
arpl
mov
pop
sbb
mov
les
mov
mul
mov
mov
shlb
std
out
push
mov
xchg
cmp
adc
jge
jbe
inc
out
lea
cmpsb
pop
in
out
pushf
or
dec
sub
jo
gs
jne
lods
mov
popl
add
outsl
mov
cmp
push
ljmp
or
mov
cmp
test
stos
push
pop
cmpsl
dec
mov
inc
aaa
inc
lsl
inc
ret
in
pop
xchg
push
dec
lret
mov
addr16
cltd
sub
and
sub
test
jne
cmp
and
adc
mov
fsubp
cmp
pop
inc
mov
sbb
jmp
idivl
xchg
insl
pop
popf
int3
mov
cmp
mov
scas
and
andl
dec
test
shl
dec
out
mov
mov
das
dec
cmc
mov
dec
xorb
mov
xlat
xchg
outsl
xor
ds
sbb
repnz
dec
outsb
adcl
jmp
scas
jecxz
lcall
xor
ljmp
test
inc
jmp
jp
aad
jmp
cmp
cmp
cmp
add
inc
push
outsb
arpl
add
data16
in
jg
and
mov
bound
push
cmp
loopne
pop
loope
pushf
dec
mov
and
fs
fidivrs
mov
mov
inc
int3
in
xchg
std
lcall
cmpsb
cmp
pusha
mov
mov
decl
mov
sbb
mov
pop
mov
and
push
mov
fs
xchg
outsb
pop
mov
rorb
in
mov
cmp
xor
ret
imul
mov
jnp
inc
xlat
insb
xchg
ljmp
lret
in
mov
jmp
and
popa
jb
out
rcrb
jae
adc
std
inc
adcl
mov
cmpsb
sahf
or
mov
aaa
lret
mov
mov
mov
pusha
or
lock
or
sbb
loopne
sbb
jge
pop
loope
or
aaa
xchg
iret
pusha
aad
cmpsb
imul
pushf
test
pop
push
scas
xor
inc
sub
shlb
pop
or
out
xor
cltd
loopne
and
sub
imul
mov
mov
imul
cmp
lea
push
and
into
add
jg
dec
mov
lahf
outsb
mov
les
popa
push
mov
insb
cmpb
lcall
les
fdivrl
lods
jecxz
inc
jle
push
pop
fstpl
insb
pop
sbb
dec
mov
xor
test
add
or
xor
movsl
std
pop
sub
sar
mov
sbb
adc
jl
jp
ja
xlat
or
mov
xchg
jbe
aam
int3
or
xchg
jne
lahf
ds
mov
fisttpll
inc
movsb
je
pusha
leave
stc
rclb
push
test
adc
xchg
stos
cli
mov
insl
xor
jnp
push
cltd
imul
jecxz
in
cld
das
out
xchg
cmp
add
mov
ljmp
pop
test
popa
orb
inc
adc
mov
push
mov
cmp
stos
add
dec
inc
cmp
mov
jg
ds
jnp
mov
imul
push
ss
je
mov
pop
cmc
pop
bound
int
inc
popf
sub
js
pop
test
xor
and
and
cmp
es
cmp
and
dec
cmp
inc
cmc
test
add
stc
xor
or
pop
mov
leave
arpl
stc
outsl
fistps
cli
adc
arpl
cmpsl
cli
or
inc
sub
pop
lock
sub
imul
outsl
jns
pop
ljmp
push
dec
data16
push
dec
ljmp
ja
mov
flds
das
test
dec
adc
ljmp
cmp
clc
test
xchg
mov
xchg
scas
mov
in
or
gs
aam
sub
and
idivb
push
xchg
or
loopne
pop
pop
jbe
outsl
sub
push
dec
rcrl
mov
imull
lds
imul
sub
sub
cmp
xchg
jae
jle
sub
ds
es
cmp
add
fisubs
movsl
outsl
leave
and
aas
sbb
adc
repnz
ljmp
push
mov
adc
adc
xor
shrl
or
movsb
out
sbb
xor
xor
adc
cmpsl
pop
sbb
insl
adc
nop
gs
jne
daa
mov
mov
mov
stos
jo
daa
rcrb
add
in
fisubrs
stos
imul
dec
stos
jae
sub
ss
aam
cmp
adc
jae
pop
ss
add
adc
ljmp
xchg
ja,pn
and
push
mov
adc
sbb
mov
jg
pop
pushf
jge
dec
clc
and
or
les
mov
cmpsb
fs
outsl
test
addr16
xchg
into
or
or
jo
pop
sub
xbegin
aad
movsl
mulb
sbb
fistpll
sub
mov
cmp
push
pop
or
pop
sub
cld
mov
fidivrl
sahf
leave
in
lret
idivb
mov
mov
mov
mov
jbe
addr16
pop
mov
stc
pop
xor
movsb
jge
add
inc
cmp
mov
fisubl
stos
sub
mov
sbb
mov
cltd
rcrb
scas
movsl
lahf
leave
and
or
mov
adc
cmp
insl
mov
pop
mov
mov
mov
xorb
push
cwtl
xchg
jmp
mov
sbb
mov
decb
int
xchg
loope
inc
std
and
js
les
cltd
ret
fmull
sub
loopne
sarb
cmp
arpl
loop
inc
mov
or
xchg
mov
mov
lock
ss
ret
xorb
xor
push
cmp
js
sbb
arpl
add
bound
cli
imul
je
fidivrs
xor
xor
ret
xor
mov
int
popf
dec
lahf
sti
dec
jge
adc
lahf
fnstenv
negl
ficoms
call
test
fcompl
int
and
push
cmp
or
xor
lcall
mov
xor
pop
insb
jbe
movb
movsb
int
mov
dec
ret
dec
push
pop
loop
and
adc
jl
loop
in
sub
loope
fwait
jnp
nop
iret
and
stc
shll
movsl
xchg
xor
jnp
outsl
daa
popa
xchg
ds
fwait
add
test
xor
mov
add
inc
inc
xor
clc
fiadds
mov
es
jge
push
xor
mov
dec
jbe
movsl
fisubl
xchg
mov
mov
and
jo
stos
nop
add
pop
mov
cli
inc
div
push
loope
out
dec
cmp
cmpsb
sub
dec
cmpsl
arpl
add
xchg
adc
inc
push
lahf
lahf
repz
movsl
fcompl
outsl
lock
add
add
pop
xor
fdiv
cmp
sbb
out
push
cmpsl
xor
test
add
inc
stos
imul
lret
xor
cmp
inc
xchg
sub
pop
sbb
mov
aad
mov
push
shl
mov
jle
out
fmulp
xchg
mov
add
sti
mov
and
push
sar
test
push
push
shll
xchg
pop
test
mov
out
rcr
jae
add
aad
push
data16
imul
or
mov
stos
outsb
test
out
out
sbb
push
and
lds
out
mov
inc
sub
inc
pop
mov
xor
cmp
jmp
xor
push
mov
sar
cmpsl
xchg
jno
push
mov
and
jae
push
rorl
loop
imul
dec
push
mov
imul
fnstenv
mov
and
ret
lds
cld
sub
mov
sbb
mov
out
mov
add
ret
pop
dec
dec
sbb
mov
mov
ja
pushf
data16
mov
inc
pop
mov
mov
mov
in
nop
shlb
fscale
fistl
lea
call
les
cmp
mov
pushf
in
inc
push
push
pop
inc
push
sbb
cmp
mov
adc
out
fcoms
aam
aaa
pop
imulb
jl
inc
push
clc
cwtl
sbb
sbbl
ja
sarb
call
popf
int3
xorb
iret
std
pusha
shll
push
xchg
push
fdivl
xchg
jle
adcb
in
int
outsl
add
rclb
mov
dec
shll
jae
cmpsl
push
lret
pop
cmpsb
shll
xlat
cmpl
xor
jl
mov
jnp
mov
arpl
pop
pop
cwtl
lret
mov
jg
pop
cmp
loope
or
adc
add
rclb
sbb
test
or
push
lcall
dec
fistl
push
in
sbb
sub
cmc
adc
lods
pop
fnstsw
mov
fs
or
outsb
shlb
sar
and
mov
and
add
dec
inc
das
dec
sti
scas
ljmp
fists
pushf
sbb
jo
jnp
sub
aas
cld
daa
cmp
loop
cmp
cmp
pushf
sub
dec
movsb
add
outsb
sub
stc
cmp
push
dec
xor
insl
add
dec
adc
jns
xchg
stc
movsl
and
inc
mul
sbb
pop
mov
xchg
jecxz
icebp
mov
pop
xor
out
mov
outsb
cmp
mov
pop
jb
popf
jns
or
in
and
xchg
mull
or
enter
jle
inc
xchg
clc
push
in
stos
jnp
mov
ret
lods
xor
push
scas
out
aaa
hlt
call
ss
cmp
inc
pop
ror
je
mov
lods
int3
xchg
mov
push
roll
cs
cmp
jns
mov
in
xlat
or
sub
movsl
cmc
mov
lahf
leave
jno
push
cmovo
adc
inc
pop
in
movsl
sub
scas
adc
push
jmp
pop
js
sub
mov
repz
stc
push
and
or
js
pushf
dec
cmp
xor
jecxz
rol
andb
sbb
outsb
jp
mov
xor
mov
cmp
in
pusha
lods
out
jnp
mov
mov
decb
into
test
sahf
xchg
cmp
push
and
or
ret
xor
cld
add
or
mov
pop
adc
push
cltd
stos
pusha
xlat
lret
daa
sbb
mov
rorl
sub
cmpsl
mov
xchg
mov
out
pusha
pop
iretw
push
subl
xor
pop
mov
gs
jb
out
or
int
cmp
loopne
cmp
jg
sub
sub
and
lock
sub
xchg
push
sbb
aas
fdivrs
push
roll
push
push
cmpsb
sub
adc
or
nop
rolb
xor
sarb
imul
xchg
push
mov
aas
adc
leave
push
xchg
xchg
and
sbb
push
push
lea
scas
repz
push
inc
aam
pop
jg
mov
outsb
imul
bound
ds
rcrl
sarb
push
mov
xchg
cmp
out
test
scas
push
imul
ljmp
sbb
fdiv
sbbl
les
bound
ljmp
jae
cli
lock
and
mov
xlat
lret
scas
repz
mov
inc
cmp
lret
aad
mov
jmp
repnz
pop
dec
xchg
sub
stos
movsb
cmp
push
xchg
insl
push
cmp
cwtl
aam
in
or
inc
push
push
mov
fwait
xchg
sbb
inc
mov
jne
mov
xlat
and
inc
popa
xchg
pusha
imul
pop
push
out
in
cmc
call
cmc
stc
test
mov
negb
lea
fcmovnu
jp
movsb
pop
dec
daa
mov
pop
std
pop
pop
addr16
jmp
push
arpl
cli
in
mov
dec
inc
pushf
sbb
mov
jmp
mov
mov
rcl
hlt
mov
popf
push
jl
mov
aaa
shl
cld
mov
mov
pop
jno
pop
sub
or
pop
sub
mov
jb
adc
shll
test
xor
push
imul
pop
shrb
cmp
int
dec
xchg
enter
adcb
xor
femms
sbb
into
pop
mov
adc
xchg
sbb
pop
and
dec
jbe
inc
ss
test
test
or
xchg
cmpsl
clc
xchg
jmp
fisubl
aas
adc
decb
leave
loope
pop
sbb
mov
out
sbb
pop
out
ljmp
cmp
imul
mov
jnp
inc
outsl
sbb
mov
int3
and
dec
scas
std
cld
mov
mov
mov
jmp
insb
jge
adc
nopl
mov
mov
lcall
jae
add
repnz
sbb
enter
jle
clc
loop
mov
fcmovnu
test
sub
addr16
outsl
or
and
xchg
sbb
fbld
pop
or
insl
imul
xlat
jno
push
sti
loop
mov
mov
inc
xchg
push
insl
dec
popf
lcall
jl
jnp
jg
pop
sub
lds
cmpsl
int
mov
push
fnstsw
and
sub
in
push
adc
or
push
push
adc
push
cld
jle
or
sub
push
enter
in
shlb
shl
dec
xchg
push
push
out
fsubr
fcmovnb
cwtl
das
cs
pop
push
sub
movsl
rorl
test
aam
inc
inc
pusha
imul
lods
or
sub
ja
push
je
int3
daa
rcrl
enter
popf
cld
jl
pop
sub
fsubs
mov
jmp
pop
repz
mov
scas
rclb
out
cmp
lret
mov
push
incb
mov
pop
sub
pop
mov
enter
or
out
or
out
fdiv
sub
out
jmp
ret
xor
jo
dec
test
pop
ljmp
xor
pop
cs
jns
dec
das
popa
pop
mov
inc
lds
lret
sub
mov
ds
xchg
cmp
mov
fistps
in
enter
mov
imul
mov
shl
out
dec
scas
movsb
lcall
or
dec
loop
and
mov
xor
shlb
push
outsl
imul
pop
aam
lea
xchg
repnz
xor
ret
pop
add
push
stos
pop
inc
jge
insb
sbb
cli
js
mov
and
mov
push
das
pop
cli
js
insl
pop
fcompl
roll
inc
cwtl
aaa
push
sbb
int
push
aas
std
sub
mov
and
setns
fists
pop
lret
popf
mov
rcrb
gs
dec
jg
jnp
leave
xor
fsubr
pusha
push
rol
xchg
test
sbb
dec
out
or
jge
cmc
inc
jmp
fimuls
sbb
test
dec
rorl
je
mov
sub
test
scas
mov
inc
movsb
xlat
jl
inc
dec
or
sub
mov
sbb
scas
add
xchg
stos
mov
cld
je
adc
fs
mov
cmp
pop
dec
xchg
jl
inc
andl
cmp
cmp
cmp
cmp
and
mov
lcall
add
push
mov
sar
adc
out
fists
xchg
jno
repz
in
divb
insb
shrb
push
lods
inc
push
push
in
push
sbb
sub
mov
push
inc
inc
ds
push
lods
js
scas
cmp
add
xchg
and
call
fldenv
adc
adc
addr16
lret
mov
sbb
pop
ja
xchg
xchg
cli
push
adc
xchg
xchg
cmp
mov
mov
cmpsb
repz
add
sbb
js
and
iret
jg
stos
repz
push
enter
sbb
loope
jmp
jae
xor
jbe
mov
xor
popf
add
mov
popf
leave
mov
call
xchg
addr16
repnz
ljmp
into
scas
jmp
mov
movsl
cmp
popa
movsb
inc
fldl
mov
inc
and
cmp
lods
ficoms
add
lret
xchg
lret
movsb
adc
sbb
and
loope
xor
hlt
xchg
mov
pop
cmp
mov
jmp
movsl
push
gs
mov
cmp
outsl
hlt
cmp
dec
mov
jne
sbbl
test
mov
outsb
mov
mov
fcomps
pop
inc
mov
mov
test
aas
popf
lcall
loop
jnp
sbb
fsub
pusha
test
out
push
icebp
xchg
dec
pusha
leave
pop
mov
lds
sub
sti
test
mov
pop
cmp
ds
fidivrl
adc
or
sarb
jne
sub
fwait
loopne
push
aam
mov
mov
das
fnstsw
cmp
adc
xor
xchg
cs
pushf
dec
and
movsb
fdivs
pop
stos
cmp
repz
out
icebp
loop
lods
clc
subl
jo
inc
cmpl
xorb
cmpl
or
std
roll
jecxz
cwtl
xchg
or
into
clc
stos
jnp
cmp
enter
mov
movsl
inc
sbb
push
hlt
sbb
jb
jnp
ret
pop
mov
pop
imul
popa
aam
jnp
je
movsb
out
pop
outsb
sub
adcl
hlt
fists
mov
iret
or
das
mov
inc
mov
adc
enter
ret
outsl
cmp
dec
push
neg
jp
and
mov
sti
lock
push
pop
mov
xor
sbb
xchg
add
iret
dec
xchg
int
and
and
orb
ret
mov
fstpl
loop
or
hlt
outsl
or
sub
push
and
int
cmp
ja
dec
jmp
mov
mov
ficompl
lods
daa
test
mul
adc
and
cld
jg
mov
fstl
icebp
or
cmc
adc
sub
mov
in
enter
jle
push
js
ret
mov
stos
mov
jmp
nop
ds
jmp
nop
cmc
inc
adc
test
lcall
clc
mov
push
pop
movsl
sub
jbe
es
or
aam
mov
and
jo
repz
mov
out
xchg
xchg
nop
push
in
and
dec
leave
int
mov
test
movsb
pushf
or
add
lods
out
sub
inc
shrb
jmp
decb
mov
rcrb
mov
fcmove
dec
jns
or
jecxz
sub
cmpsl
push
out
jle
enter
leave
arpl
dec
scas
add
xchg
xor
mov
push
popl
test
xchg
push
adc
or
mov
jae
inc
and
into
pop
mov
inc
mov
add
adc
xor
lea
and
cmp
test
ja
pop
pop
add
mov
and
popf
popf
aad
es
pop
imul
push
lcall
test
xlat
ds
xchg
sub
jnp
sub
clc
shll
xor
xor
add
mov
pop
jb
xchg
mov
pop
add
push
daa
cmc
dec
xor
mov
cltd
adcl
cwtl
repnz
ds
or
gs
pop
mov
pushf
test
sarl
push
add
inc
push
shlb
popf
and
into
push
rol
xchg
cmp
adc
adc
int3
bound
test
sahf
outsl
fwait
lods
ds
xor
adc
cmp
les
mov
jnp
repz
add
add
push
push
pushw
ss
inc
stos
mov
xor
jo
sbb
mov
jnp
add
jge
mov
push
iret
xchg
mov
sti
jne
repz
lock
stos
mov
dec
sbb
dec
imul
data16
mov
push
out
pop
aas
sbb
inc
jle
aas
psllw
test
rclb
ja
xchg
cmp
mov
ds
push
je
xchg
xchg
mov
loop
push
pop
popa
out
scas
maskmovq
negl
mov
mov
aas
sbb
xchg
fcmovbe
inc
leave
mov
fcmovnu
sbb
out
lcall
inc
lea
sub
std
aaa
sub
inc
rolb
cmp
insl
pop
cmp
pusha
mov
outsl
cltd
and
ss
hlt
adc
jno
cmpb
loope
jb
sub
into
mov
mov
sbb
xchg
push
test
ds
pop
inc
mov
xchg
lds
sarb
sahf
sarl
xchg
flds
or
lahf
movsb
mov
mov
mov
inc
lahf
dec
stos
scas
and
mov
lods
sbb
scas
out
insb
adc
icebp
cmp
mov
loop
jb
xchg
ja
dec
jmp
lahf
xchg
inc
movsb
add
pop
adc
sbb
rorl
jb
jp
jno
jbe
push
pop
test
mov
rolb
jnp
xchg
mov
loop
push
test
fwait
ss
and
movsl
xchg
mov
pop
adc
jmp
xlat
ficoml
test
frstor
sbb
fwait
sub
or
cwtl
push
add
nop
pop
aas
fildl
adc
aaa
sarl
xlat
scas
sub
sbb
xchg
mov
pop
jecxz
ficoms
out
stos
jae
stos
pop
mov
cmpsb
pop
in
mov
jge
xor
xchg
mov
loope
mov
xchg
jge
aam
inc
sbb
loopne
mov
mov
imul
js
lods
pop
clc
xor
cmp
cmpsb
insb
lcall
and
repz
ret
test
out
xor
or
add
xchg
mov
cmp
test
sub
pushl
add
leave
xor
push
sahf
mov
fs
adc
adc
jne
add
xchg
outsb
jecxz
iret
out
adc
pop
leave
push
mov
out
push
push
pop
fildl
cmpsb
ret
int
repnz
sbb
cld
in
push
or
add
jmp
ret
and
pop
xchg
rclb
or
repnz
test
div
jns
lret
push
lret
test
and
insb
and
inc
and
or
out
mov
sub
xor
pop
xor
sub
jge
psubw
mov
sbb
popa
es
dec
sub
or
dec
and
jge
mov
outsb
jle
cwtl
movb
fptan
cmpsb
adc
pop
xchg
dec
in
sub
pop
jg
or
push
dec
cs
add
or
mov
or
mov
into
in
stos
ds
pop
loop
test
hlt
cmp
jmp
and
dec
mov
jb
jge
mov
cmp
push
mov
pop
ss
inc
cld
sbb
mov
sbb
add
loopne
and
mov
dec
testl
je
imul
adc
dec
mulb
sub
jmp
pushf
insl
or
inc
clc
push
sahf
lahf
mov
test
push
hlt
push
jge
fs
mov
js
rorb
add
mov
hlt
jl
fbstp
or
dec
dec
stc
sti
je
loopne
mov
mov
insb
inc
imul
xor
data16
mov
inc
or
mov
aam
pop
mov
inc
and
xchg
pop
push
enter
pop
mov
xchg
xor
cmpsb
push
dec
movsl
add
xchg
nop
clc
shll
mov
adc
push
pushl
cmpsl
or
aas
sti
push
push
mov
xchg
sbb
ret
push
sub
xorl
cs
sahf
add
mov
or
sbb
test
push
adc
push
push
mov
xor
pop
jno
scas
es
jp
popf
fidivrs
lods
cltd
mov
out
mov
add
insb
hlt
test
mov
cmp
pop
es
mov
sbb
popa
add
stos
cmp
dec
inc
inc
xchg
xor
jecxz
popa
dec
pusha
in
lods
xchg
cmp
lcall
ljmp
xor
adc
xchg
xchg
push
fptan
dec
fildll
push
inc
mov
gs
sub
add
shll
lahf
into
or
or
test
xchg
nop
fwait
insl
call
mov
and
sub
push
enter
pop
sbb
int3
rcl
scas
push
icebp
rcll
dec
pop
hlt
cmc
nop
das
adc
test
mov
mov
sub
js
add
push
loop
jmp
mov
lcall
clc
sbbl
repnz
imul
mov
fistl
inc
cmp
jno
sahf
pusha
fistpl
or
pop
pop
ret
js
mov
adc
insl
ret
loope
add
not
add
jne
jle
and
cwtl
pusha
push
stos
ja
mov
cmpsl
and
in
xor
push
jae
pop
fisubrl
frstor
sbb
fists
stos
inc
adc
clc
loopne
stos
xchg
xlat
loope
ret
sbb
inc
ficoms
and
mov
std
in
push
adc
cmp
adc
xchg
fmuls
out
in
lods
bound
or
or
icebp
cmpsl
ret
mov
scas
sub
stc
adc
scas
jae
outsl
pop
jnp
adc
jecxz
cmp
xchg
dec
jmpw
push
xlat
cmpsl
test
xor
int
call
shrb
outsb
sar
jmp
cmc
or
nop
imul
mov
fsubl
je
sub
mov
jnp
cmc
scas
mov
or
dec
and
in
push
test
sti
mov
mov
mov
fcmovu
test
push
cli
push
xchg
hlt
inc
and
and
movsl
or
int3
jo
out
loopne
jl
imul
daa
pop
sahf
lcall
fbld
ja
dec
mov
test
mov
loopne
inc
mov
inc
pop
and
xor
fwait
mov
xchg
icebp
mov
sub
cmpsl
mov
push
inc
je
cmp
pushf
movsl
jbe
sahf
popa
imul
pop
jg
mov
fcoml
cmpsl
bound
rolb
mov
and
cmp
orl
outsl
out
int
aam
lods
add
xlat
dec
pop
fisubrs
mov
push
sub
mov
mov
daa
or
push
ljmp
clc
dec
cltd
fiaddl
in
sub
cmp
mov
dec
mov
cmp
push
mov
push
xor
es
or
fnstcw
pop
mov
loope
sbb
or
mov
outsl
popf
icebp
or
xor
fbstp
or
push
les
shll
pushf
in
ret
mov
xor
ljmp
stos
dec
pop
repnz
loopne
or
inc
xor
call
dec
mov
adc
pop
imul
cmp
fidivrs
add
sub
cli
shlb
js
inc
repz
mov
in
lret
sub
rorb
xor
mov
mov
ret
inc
sub
cmp
or
pop
pop
sahf
cwtl
mov
xchg
or
and
lret
sub
jg
lcall
pop
sahf
pop
arpl
push
testb
xor
in
jno
cli
push
cmp
test
mov
push
cwtl
std
inc
push
jno
dec
pop
out
pushf
mov
add
sub
out
ja
lds
cli
insl
pmuludq
inc
icebp
add
enter
and
push
ffreep
mov
pcmpgtw
ret
aaa
adc
add
push
xchg
outsb
mov
fisubrs
nop
xor
add
xchg
push
mov
fcomip
and
sbb
fstl
sub
call
mov
dec
outsb
imul
lret
ljmp
popf
cmp
int
cmpsl
scas
lods
inc
fnstenv
add
gs
jp
fcos
mov
pop
xor
imul
xor
subb
sbbb
loopne
inc
and
loope
add
mov
mov
push
sti
fwait
mov
mov
lret
mov
hlt
jne
int3
loopne
pop
pop
fadds
imul
mov
dec
xchg
fwait
sub
cmc
mov
incb
cmp
add
jg
data16
js
mov
adc
clc
es
sti
rclb
add
xchg
push
out
andb
jo
dec
push
imul
repnz
mov
ljmp
sub
dec
bound
arpl
mov
repz
mov
sahf
stc
int
pop
cmp
cltd
into
sarb
xchg
jmp
pop
sub
and
xchg
pop
mov
rcrl
push
flds
hlt
or
fadd
xchg
xor
fwait
jge
add
or
jo
pushf
xor
repz
dec
xchg
mov
push
mov
sbb
sub
push
addr16
je
dec
and
inc
in
testl
jne
mov
add
out
jp
rcll
adc
mov
xor
mov
out
loopne
into
pop
repz
sbb
test
fiadds
jecxz
das
aam
sti
lahf
xchg
gs
cwtl
pop
imul
test
test
xchg
cmp
subb
adc
repz
sub
add
jecxz
fcom
cmp
sub
inc
and
xorl
dec
das
imull
or
inc
adc
fdivrl
sbb
lock
test
jg
dec
insl
out
mov
adcb
xchg
sub
popf
shll
xchg
mov
mov
inc
add
je
sub
adc
icebp
inc
xchg
insl
jge
outsl
sbb
es
ja
xchg
call
mov
fistpll
jnp
mov
jns
dec
mov
addb
js
js
sub
mov
mov
scas
leave
aaa
adc
lock
mov
imul
stos
push
jbe
inc
cmp
daa
pop
nop
pop
clc
jle
mov
scas
movsl
orl
shlb
cmpsl
stos
pop
mov
out
jb
and
frstor
clc
mov
fstpl
inc
add
sub
arpl
sub
mov
lahf
mov
fbstp
pop
leave
mov
push
out
clc
repnz
lret
in
in
push
xor
xor
movsl
bound
sub
jnp
clc
dec
add
push
pmaxsw
xchg
push
xchg
out
fnstsw
xchg
mov
push
mov
data16
hlt
cmp
cmpsb
xlat
adc
cmp
in
xchg
mov
cmp
mov
das
loop
daa
jnp
inc
push
adc
es
dec
bound
hlt
xchg
clc
inc
mov
lret
lcall
mov
mov
and
nop
movsl
sub
std
push
js
lret
cmpl
push
pop
mov
pop
xchg
pop
lcall
cmp
adc
fbstp
add
sub
pop
ljmp
frstpm(287
jle
xor
subl
jl
fwait
gs
ljmp
lahf
sub
lcall
or
mov
xor
jle
out
outsl
jne
mov
lcall
aas
cmc
test
insl
data16
xchg
jne
fisttps
push
push
sub
andl
cmpsl
xchg
adc
and
inc
add
leave
fdivl
decl
lcall
push
jg
xchg
lahf
call
movsl
pop
out
sbb
std
out
push
movsb
aad
sti
jae
or
int
movsb
aam
aad
inc
into
nop
mov
pop
push
inc
dec
cld
sub
pop
ret
mov
mov
lods
dec
inc
mov
mov
iret
xor
push
out
enter
fistpl
pop
sub
mov
adc
push
std
adc
test
inc
mov
jle
stos
cmpsb
lock
cmp
dec
lret
ljmp
fcompl
inc
or
bound
xchg
lds
fcompl
popa
aaa
js
rcrb
adc
jl
testb
adc
mov
loope
mov
aaa
xchg
dec
push
sbb
outsl
xlat
xchg
insl
add
cwtl
lods
ret
xor
fsubl
test
push
fiadds
testl
lea
pop
pop
jno
jge
mov
jle
aad
mov
jl
scas
xchg
mov
adc
mov
push
jae
subl
ljmp
scas
pop
push
push
test
lods
lds
aam
daa
inc
xchg
in
lea
movsb
dec
xchg
mov
xchg
scas
jecxz
cld
xchg
inc
jl
jnp
cltd
cmpsb
push
dec
gs
jge
xor
jle
push
aas
orl
mov
sbb
sbb
ret
mov
jns
shl
test
fdivs
pop
cmp
imulb
mov
out
sti
pop
inc
aaa
int
shll
jg
pop
pusha
xchg
xchg
push
lock
ja
xchg
loopne
loope
mov
call
cwtl
xor
rcrl
bound
jmp
or
pop
mov
or
fstpt
mov
sub
add
out
fsubrs
mov
mov
mov
xlat
or
fdivl
mov
push
sahf
sahf
int3
jae
mov
sub
mov
mov
leave
fisubl
testb
xchg
mov
cmpsl
xchg
ss
test
dec
movsl
adc
sbb
or
shll
and
pop
and
dec
out
mov
xchg
xor
jae
fs
and
lcall
testl
sbb
jmp
jo
and
cmpsb
xchg
or
std
inc
or
paddusw
stos
sar
pop
jo
cld
insl
xchg
inc
fcompl
xchg
imul
fnclex
or
loop
inc
pop
arpl
lret
out
lret
pop
mov
xchg
iret
dec
add
sub
lods
int3
add
pop
jg
movsl
dec
pop
icebp
or
jae
or
subl
mov
in
ljmp
sub
shrl
test
rol
push
out
jecxz
fldenv
adc
popa
imul
pusha
cld
sahf
sub
push
gs
in
lea
shrb
sbb
cmpl
in
jl
lea
pop
and
ss
imul
push
or
out
sub
rolb
sbb
add
jne
jno
leave
ret
mov
xchg
ret
push
mov
push
cmp
ljmp
dec
pop
xlat
mov
sahf
popa
cli
test
lcall
xchg
pop
addr16
and
xchg
mov
pop
fistpl
mov
bound
push
outsb
push
sbb
repz
lret
sbb
sub
sbb
outsl
fsubrp
xchg
daa
imul
bound
push
push
movsb
add
out
xchg
test
les
or
fwait
dec
lea
rorb
and
in
daa
lea
xchg
insl
adc
and
mov
jmp
imul
pusha
sahf
add
push
lods
in
dec
xchg
pop
rcrb
jle
aaa
xchg
push
rclb
mov
pop
sbb
inc
cmpsb
and
xor
dec
cmpsb
xchg
jl
shll
jmp
outsl
push
xchg
or
addr16
pop
nop
mov
mov
sbb
out
adc
outsl
in
cs
jbe
fcomi
fistl
fnsetpm(287
jbe
lahf
xchg
push
xchg
xor
mov
test
stos
cld
sarl
xor
push
xor
dec
adc
cmp
pushf
data16
pop
cmpsl
jns
loope
adc
rcl
inc
movsb
push
pop
shrl
or
push
jmp
dec
cltd
xor
jecxz
mov
flds
ret
xorb
int3
pop
xor
add
rcrb
mov
and
lret
mov
and
fsts
aas
push
dec
das
ret
fidivl
lcall
push
xor
shlb
rcrl
cmp
aas
arpl
leave
int
xchg
popf
mov
lcall
push
mov
ds
subl
iret
loopne
xchg
jg
hlt
jne
inc
fwait
push
repnz
mov
rolb
sbb
sahf
adc
and
push
xor
dec
cmc
lods
mov
xchg
cld
inc
jbe
mov
or
ss
pop
mov
and
js
gs
pop
sbb
and
les
cmpsl
ret
mov
pop
notl
fidivs
pop
sbb
jnp
in
inc
sub
or
inc
jnp
push
js
lcall
mov
js
ret
aas
push
cmpsb
cmpsl
dec
cmpsl
xchg
cmp
jge
out
and
mov
movsl
mov
repz
out
ret
dec
mov
lods
int
nop
sub
repnz
mov
mov
iret
arpl
push
dec
inc
xor
and
xchg
out
sahf
loopne
cli
add
inc
aad
out
xor
xor
mov
lret
xchg
or
ss
mov
cltd
push
pop
jne
sahf
call
xor
loopne
outsl
push
sub
mov
std
xchg
ret
js
adc
std
les
xchg
xor
hlt
push
mov
mov
out
jmp
movaps
sub
jbe
jp
push
daa
idiv
push
cld
rcrb
push
inc
fwait
es
xor
loope
aam
into
pop
push
out
sahf
xchg
mov
sarb
cmc
aam
jno
push
lea
mov
repz
ja
mov
dec
pop
or
dec
xchg
ds
jp
pop
data16
lods
push
rcrb
ret
fstpl
das
pop
sub
shrl
sahf
mul
inc
xchg
into
mov
or
jle
mov
lahf
push
push
inc
mov
add
xchg
icebp
icebp
push
mov
cmp
adc
stos
lret
push
sub
cmpsb
add
mov
gs
mov
lea
das
push
xchg
stc
mov
fld
aas
por
or
sub
adc
sbb
sbb
movsl
in
fisubrs
push
push
jecxz
movsl
mov
fsts
in
cmp
sbb
insb
movsb
jne
mov
and
sarb
push
xor
xchg
xor
sbb
and
insl
xchg
shlb
pusha
and
push
idivb
subl
mov
cmp
orl
jae
mov
pop
sub
ljmp
xchg
js
and
mov
or
pop
pop
mov
add
in
jae
repnz
outsb
jl
dec
adc
mov
dec
xor
movsb
shrl
and
mov
std
repnz
sbb
xor
push
mov
ds
cmc
cmp
pop
xor
sbb
popa
sbb
or
and
or
jmp
and
stos
sub
icebp
lock
rcll
bound
js
fwait
mov
aad
adc
or
pusha
call
jp
stc
cmp
dec
pop
lahf
mov
mov
fcomp
mov
repz
in
clc
jbe
fbstp
or
and
adc
cmp
nop
in
int3
xor
xrelease
subb
les
inc
idiv
mov
mov
test
jbe,pn
nop
sub
fisubrl
xchg
mov
or
fsts
pop
add
cs
xor
sub
mov
mov
mov
dec
shrl
shlb
cmc
cs
xchg
movsb
cmpsl
mov
dec
out
outsl
out
inc
ficoms
and
or
es
jg
movsb
incl
test
stos
imul
and
mov
mov
dec
push
sub
enter
aas
stos
cmpsb
nop
pop
inc
out
imul
jecxz
ffreep
mov
outsl
mov
xchg
lcall
pushf
shrl
mov
sbb
jbe
pushf
pusha
push
inc
mov
ljmp
test
ja
out
es
shrb
dec
jp
and
mov
dec
repnz
ss
idiv
dec
mov
dec
jecxz
xchg
testl
push
arpl
aaa
fistpl
add
addl
scas
mov
fldt
aam
into
push
ljmp
bound
int3
xchg
out
fiaddl
sub
add
stc
roll
mov
lock
imul
subl
sbb
xor
mov
pop
cmpsb
cmp
adc
and
lahf
mov
mov
faddl
xchg
pop
divps
inc
hlt
sahf
pop
int
rcll
cmpsb
fwait
mul
add
fiadds
and
and
rcrb
pop
pop
mov
inc
loopne
dec
stos
and
shr
mov
xorb
xor
sbb
cli
ret
cli
ljmp
add
mov
int
fcmovb
cltd
fmull
shlb
adc
cli
dec
icebp
clc
cwtl
mov
and
lret
and
cmp
pop
xor
popa
out
popf
lock
mov
push
cmp
div
imul
inc
mov
je
xchg
daa
nopl
jp
mov
jno
in
imul
ljmp
das
jp
dec
mov
ljmp
adc
sbb
mov
pushf
adc
insl
mov
pop
sbb
pusha
cmp
pop
jp
mov
or
add
xchg
out
mov
ret
and
outsl
out
dec
shll
in
pop
and
aaa
push
jp
ret
mov
jne
icebp
lods
mov
mov
add
xchg
sub
les
icebp
pop
mov
pop
in
xor
jno
arpl
mov
dec
mov
cmpsl
and
push
loopne
sahf
out
pusha
or
aam
inc
cmc
push
mov
mov
cmp
jne
xchg
inc
lret
pop
cmpb
les
es
sub
ja
pop
lret
and
push
stos
mov
adc
sub
push
bnd
adc
insl
xchg
xchg
jne
mov
ds
fs
cwtl
aaa
fsubl
adc
mov
mov
leave
test
repz
lea
push
or
das
fs
mov
pop
sti
push
fcmovbe
int
or
jp
cmpsb
sahf
xor
xchg
add
mull
push
ret
icebp
call
out
add
test
fwait
mov
mov
out
mov
outsb
dec
fisubl
int3
clc
xchg
pop
add
xor
out
loopne
xchg
daa
cmp
icebp
stos
loop
mov
cmp
pop
cwtl
sar
mov
outsl
push
xchg
popf
add
xor
or
lods
in
repnz
xor
sub
lahf
and
icebp
mov
jmp
add
pop
cmp
ja
out
sti
scas
cld
dec
or
sahf
lret
loope
push
push
jmp
or
mov
sarb
mov
and
inc
pop
sbb
sub
mov
out
daa
dec
xchg
add
xchg
js
add
jl
xchg
int3
jmp
imul
call
lods
lds
ja
ret
adc
or
jecxz
fsts
cmp
or
gs
mov
out
fwait
aaa
aas
inc
or
sub
addb
imul
cli
ret
push
push
pop
pop
pop
mov
push
cmp
pop
jne
ret
repnz
lds
fldcw
jecxz
push
ret
xor
push
aas
xchg
mov
xchg
mov
outsl
sbb
sub
push
bound
clc
sbb
out
test
aas
or
test
lret
inc
enter
scas
inc
jo
xchg
std
test
pop
push
gs
or
adc
pop
sbb
cmp
dec
rclb
adc
addr16
sarl
shl
cwtl
inc
mov
loopne
aaa
mov
daa
es
sbb
add
das
das
bswap
scas
adc
mov
sarb
rcrb
push
scas
loope
int
inc
scas
xor
xor
adc
aas
xchg
lods
sbb
fdiv
lea
inc
xlat
stos
mov
and
ljmp
shlb
mov
adc
jle
scas
add
fistl
dec
sbbb
stos
mov
mov
add
outsb
nop
sbb
mov
popf
pop
and
xchg
stos
loop
mov
xchg
or
sub
jecxz
jp
pop
sti
and
outsb
inc
stc
mov
xchg
ljmp
and
and
sbb
jp
arpl
rol
mov
loopne
xchg
and
jg
xor
fiaddl
pop
pop
jge
mov
jo
jnp
mov
mov
lahf
jle
mov
fisubl
jo
data16
mov
jne
cld
or
outsl
add
lds
outsb
shrb
lahf
push
jnp
lock
stc
and
sub
popa
cld
cmp
ret
push
jns
cmp
push
sarb
bound
divl
decl
cld
ret
dec
sbb
shrb
and
pop
inc
mov
arpl
loop
or
xchg
aam
sbb
mov
imul
xor
out
fcoms
imul
cld
push
pop
push
aaa
lcall
popa
jo
cmp
paddq
popf
lock
xor
jge
sbb
and
inc
sub
insb
sbb
dec
and
mov
out
push
aas
sub
scas
mov
pop
mov
jb
nop
sub
adc
mov
dec
ffree
rorb
pop
cld
push
movsb
rorl
lods
sbb
in
inc
add
dec
or
cmp
lods
push
mov
fisttpll
mov
push
daa
rclb
gs
jnp
pop
lock
hlt
cmp
enter
imul
je
sub
fbstp
popa
aas
inc
idivl
inc
xor
ss
imul
jbe
fistl
loopne
jl
jle
cmp
jae
cmp
into
and
jmp
mov
ret
in
adc
cld
add
mov
in
adc
lock
into
push
inc
ljmp
mov
dec
les
push
out
fwait
jmp
push
and
mov
in
sub
jge
ja
mov
mov
sti
xchg
pop
cmp
push
jo
sbb
mov
int3
lret
pusha
push
sbb
inc
mov
and
testl
push
popf
mov
cmp
mov
lea
pushf
inc
cmpsl
xor
cmp
mov
hlt
add
mov
in
xchg
mov
push
push
iret
mov
xor
dec
cli
xor
movsl
cwtl
push
jae
mov
push
out
ret
aad
loopne
dec
mov
enter
inc
push
out
int3
jne
fstps
cmp
sar
clc
pop
sti
xchg
aaa
adc
loope
jns
jbe
or
mov
push
pop
add
xchg
shlb
bound
les
in
leave
add
addr16
pop
jno
insl
pop
fimuls
pop
negb
mov
ljmp
xchg
test
lcall
sub
les
sbb
mov
sbb
pop
call
fistl
outsb
sbb
mov
jg
lret
test
scas
dec
mov
lahf
cmp
sub
test
loope
fiaddl
test
and
int3
pop
and
lds
jge
lret
pop
movsb
shrl
mov
cli
stos
dec
push
lret
sub
sbb
test
jo
in
jb
adc
cmpsb
cmp
fstpt
pop
movsl
mov
push
shrb
xchg
xchg
mov
mov
and
dec
cmpl
rcrb
and
jno
fiaddl
loop
or
ja
and
lahf
dec
mov
mov
mov
cmp
xlat
es
aad
mov
stos
pop
push
jne
sbb
pop
inc
les
lods
in
mov
fwait
add
pop
jae
cmc
sbb
ret
fsubs
add
push
and
jmp
aaa
inc
lods
insb
outsb
mov
xor
les
cmp
sbb
cmpl
cltd
insb
test
dec
incb
lea
hlt
sub
adc
add
ret
jge
and
or
lret
add
or
test
or
and
mov
aad
jne
inc
ret
test
fbld
lcall
mov
pop
out
movsl
adc
in
outsl
xchg
push
mov
dec
icebp
adc
adc
jmp
test
data16
add
xor
dec
sub
mov
leave
inc
data16
xchg
out
mov
add
cmp
mov
aaa
adc
test
adc
and
dec
pusha
in
daa
and
inc
add
cmpsb
cmc
push
cmp
mov
dec
add
out
pop
dec
sbb
sbb
daa
in
jb
mov
mov
lods
cld
sub
adc
mov
jge
cmp
addr16
cmp
push
int
test
or
sub
loope
lea
xchg
punpcklbw
mov
cmp
movsb
scas
lock
repnz
sub
mov
mov
test
push
pop
adc
hlt
push
dec
jne
adc
sbb
hlt
jmp
jno
xlat
mov
or
push
je
add
cld
iret
xchg
lock
and
push
sahf
sbb
inc
rcrb
push
popf
int
cmc
mov
dec
sbb
or
or
or
jbe
imul
cmpsb
in
out
dec
sub
inc
pop
dec
add
lods
xchg
and
add
cmpb
sbb
cli
add
xor
cmc
mov
lds
aam
fstps
push
mov
or
or
popl
ss
lds
mov
mov
icebp
je
xor
mov
sti
mov
xor
xchg
push
pop
in
fiaddl
mov
mov
jne
int3
adc
adc
pusha
in
or
cmpsb
mov
scas
pop
and
aaa
insl
shlb
jns
pop
cmp
push
xlat
inc
push
dec
mov
ja
sub
pop
adc
dec
outsl
xorb
iret
mov
imul
das
sub
outsb
insb
jle
sbb
imul
pop
into
movsl
test
jecxz
lock
insb
lock
loope
jb
into
adc
fmull
adc
mov
mov
and
mov
lods
mov
jmp
add
ljmp
xor
sub
cwtl
std
ret
pop
adc
in
jmp
in
aaa
jo
and
notl
fimull
imul
xor
test
scas
mov
and
jl
insl
cs
mov
and
in
rol
popf
push
icebp
sti
ds
adc
leave
imul
cmp
out
push
lock
mov
pop
dec
call
xor
stos
dec
mov
xor
sub
dec
push
ds
clc
and
fdiv
xor
mov
add
repnz
mov
push
out
xor
jg
mov
movsb
pop
insb
aam
lds
hlt
filds
std
lds
and
mov
in
dec
jmp
negl
rcrl
xchg
mov
jne
or
iret
lock
imul
in
andl
cmp
cmp
dec
loop
xlat
pop
rcrl
sub
out
inc
fstpl
aaa
icebp
outsb
cmp
andb
shlb
cmp
loop
inc
lock
xchg
rclb
shl
xor
int3
xchg
aaa
or
dec
and
push
and
js
popa
xlat
or
inc
fildll
dec
inc
cmp
iret
jmp
mov
jb
xchg
daa
sbb
hlt
inc
stos
lahf
scas
xchg
fisttpl
adc
dec
xor
add
and
fnstcw
push
cli
loopne
outsb
fsubl
xor
lock
and
test
fs
jmp
mov
loopne
pop
aad
adc
xor
mov
jno
mov
out
mov
xor
jne
adcl
leave
scas
push
scas
call
xchg
dec
ret
inc
idiv
jg
add
dec
inc
cltd
sub
and
inc
test
xor
pop
xchg
xchg
faddl
xor
mov
stc
pop
push
mov
loope
imul
subl
add
dec
xchg
jp
loopne
idivb
xorl
sbb
or
iret
lds
mov
dec
mov
lret
and
xor
dec
mov
sbb
pop
push
pop
inc
shll
in
fs
mov
cmpsl
jnp
icebp
das
fs
mov
or
xchg
jbe
int
imul
andl
mov
cmpsl
es
mov
hlt
and
popf
in
xor
enter
movsb
enter
jo
xchg
repz
ss
push
repz
rolb
daa
jae
lahf
ret
cmp
sbb
dec
ror
mov
inc
mov
jne
jns
adc
loopne
mov
pushf
jo
subb
push
jl
loope
adc
mov
adc
sub
insl
pop
repnz
sub
sahf
inc
stos
push
in
sub
mov
and
inc
in
xchg
mov
xor
jp
test
into
xchg
ss
or
xor
mov
adc
rcrb
mov
and
cmp
pop
loope
mov
fiadds
shl
pop
pop
push
addr16
xor
test
xor
add
adc
shll
test
cmpl
cld
sbb
adc
sub
icebp
lea
xlat
or
movb
xchg
adc
or
int3
jo
or
rcrl
scas
mov
fnstcw
ss
adc
jo
aad
mov
adc
mov
rcr
push
lods
stos
daa
into
stc
int3
jp
jg
les
sbb
scas
clc
fistpll
stos
out
sub
and
popf
mov
xor
out
loop
dec
ss
pop
cmpsl
cmpsl
inc
scas
inc
pxor
jp
movsl
jnp
and
jo
lcall
adc
or
bound
dec
out
jbe
aam
je
int
loop
and
xchg
leave
ret
or
jno
dec
std
stos
fmull
add
gs
xor
jae
aad
sahf
cltd
xor
iret
call
dec
xchg
incb
out
jl
or
jmp
fcomps
cwtl
mov
cld
cmp
negb
movsl
repz
fwait
sub
or
mov
mov
mov
jo
lret
jge
adc
xor
cmp
add
or
lea
pop
xorb
icebp
push
aas
repnz
cmpsb
xor
mov
pop
lahf
inc
icebp
xchg
mov
fsubl
add
jns
aam
add
lret
lock
mov
push
mov
and
or
jbe
inc
cmpsl
insl
add
adc
outsb
gs
sbb
rcrb
pushf
sahf
dec
je
dec
popa
adc
icebp
push
loop
mov
mov
ja
test
adc
or
sahf
or
push
in
sub
test
xchg
test
aam
mov
aaa
movsl
xor
xor
mov
pop
push
inc
adc
add
sbb
mov
xchg
xchg
add
nop
jo
fisubl
aam
shr
into
shrl
outsb
loope
test
mov
es
fadd
pop
pop
rcrb
iret
ret
jbe
push
mov
dec
or
push
dec
dec
and
js
mov
fldenv
jle
sbb
inc
jecxz
mov
sub
push
mov
or
movsb
insb
push
cmp
adc
imul
push
in
sbb
lahf
and
and
sarl
xchg
sbb
jp
cmpsb
notb
pop
outsl
subb
cmp
cmp
iret
insb
sbb
es
dec
insl
insl
cmp
stos
sub
ret
xorb
adc
inc
and
pop
cmp
pop
dec
cvtpi2ps
bound
cmp
clc
adc
adc
dec
nop
mov
subb
jae
js
inc
cli
sbb
test
and
jle
sub
movb
push
in
pop
addb
in
inc
push
cmp
ds
popf
push
mov
std
popf
and
and
icebp
mov
loope
bound
cli
xchg
shrl
test
xchg
test
cld
push
fstp
lret
cwtl
imul
jecxz
das
mov
stc
fs
jbe
push
mov
imull
jg
cmpsl
adc
mov
jle
mov
xchg
cs
enter
xchg
imul
jbe
jae
imul
xor
cli
add
hlt
into
push
nop
fstpl
xchg
imul
cmp
movsb
mov
bnd
icebp
adc
sbb
scas
hlt
lea
scas
sbb
cmp
mov
test
notl
cli
add
testl
icebp
inc
and
lcall
daa
pop
ljmp
mov
imul
mov
xor
lahf
dec
push
add
jg
cs
loope
dec
ss
iret
stos
dec
mov
or
movsl
dec
pop
fadds
push
scas
add
insb
and
xor
ficomps
pop
stos
push
pop
daa
push
scas
test
aam
stos
fdivrl
jb
adc
jns
push
inc
rcrb
cmp
ja
les
call
iret
pop
inc
sbb
movsl
daa
stos
mov
inc
ljmp
xor
mov
mov
repnz
xchg
cltd
sbb
adcb
std
inc
outsl
pop
dec
ret
add
add
push
popa
dec
popf
stc
imull
repz
arpl
imul
pop
lock
mov
adc
mov
enter
jl
lahf
lock
rol
add
adc
out
in
mov
jmp
pop
das
jecxz
jo
xor
cwtl
gs
ja
inc
mov
enter
bound
iret
lcall
sbb
pusha
iret
int3
out
fsubrl
dec
pop
and
pusha
loop
es
aas
pop
fxch
cmp
aas
xchg
scas
push
pop
push
add
sbb
jns
bound
out
jmp
dec
lret
scas
xor
hlt
mov
mov
call
pusha
into
xchg
ss
push
lods
out
idivl
int3
add
and
mov
or
mov
add
popl
jns
cmp
sub
push
es
cli
imul
bound
sub
out
je
cwtl
xchg
stc
fldcw
or
jle
fisttpll
inc
push
inc
icebp
push
add
sbb
cwtd
cmp
dec
pop
push
jecxz
push
xorb
pop
xchg
insl
mov
fnsave
frstor
xchg
leave
mov
addb
xor
shll
mov
fwait
pop
mov
push
lock
jbe
pop
mov
pextrw
outsb
adc
pop
pop
cmp
and
adc
xchg
popa
jecxz
dec
cmp
and
push
push
mov
test
cltd
sub
fnsave
lods
sbb
mov
xchg
mov
call
or
aaa
les
fdivr
cwtl
sbb
rol
jl
push
mov
fnsave
jecxz
stos
aad
jp
push
xor
insl
cmp
sbb
push
pop
cmc
das
aam
push
pop
jge
jbe
ss
int
daa
loop
fidivrs
sbb
add
fwait
add
dec
push
daa
sbb
lods
mov
rclb
inc
mov
out
xchg
mov
lcall
mov
popa
push
aam
scas
push
push
push
jp
inc
iret
lret
fcomip
scas
out
fimull
cs
jecxz
inc
addb
and
xchg
andl
test
pop
mov
pop
fldenv
std
dec
cld
jno
ret
movsl
inc
outsl
and
push
add
and
incb
ds
xlat
adc
sbb
jnp
inc
adcl
push
test
sahf
mov
daa
push
scas
jo
push
sbb
jp
test
inc
data16
cmp
cmpsb
adc
push
insl
loopne
insb
lcall
add
pusha
xchg
push
or
mov
mov
movl
repnz
iret
push
rcrl
mov
aam
xchg
outsb
pop
icebp
out
mov
add
ret
adc
cmp
xchg
insb
pop
imul
loopne
arpl
imul
mov
and
je
jnp
add
or
jg
jl
mov
ljmp
adcb
mov
test
repnz
mov
lret
and
in
xor
pop
or
pop
mov
xchg
das
data16
mov
inc
xor
popa
adc
xor
andb
xlat
adc
xchg
dec
cmp
xchg
xor
in
rcrl
sti
sahf
idiv
xlat
push
fsts
or
mov
mov
push
mov
add
imul
jb
call
or
lods
lds
and
sub
xor
sub
push
incl
sti
scas
cmpsb
gs
pop
mov
pop
scas
mov
pushf
movsl
lods
loope
out
and
out
outsb
pop
test
push
pusha
pop
in
and
jns
pushf
insl
jae
push
and
jg
test
lret
lock
ja
fs
dec
pop
mov
mov
jnp
xchg
popl
jno
push
sbb
shlb
enter
outsl
fidivl
lds
pop
mov
ret
pop
sbb
inc
stc
call
push
jae
cli
cmp
jl
jae
push
inc
divl
cli
xchg
stc
out
negl
ftst
shll
lods
mov
inc
insb
mov
sub
out
fistpll
dec
jle
aas
push
push
stos
insb
dec
sahf
sub
sub
add
adc
lret
lea
dec
lret
movsl
popf
mov
inc
sbb
mov
stc
mov
mov
popl
es
in
fnstsw
xor
pop
mov
mov
scas
cmp
cmc
mov
and
out
andl
add
push
in
xor
and
inc
outsb
repz
inc
cmp
testl
jne
jae
xor
sub
pop
out
adc
ja
or
sub
les
andl
push
cltd
cld
cmp
inc
sbb
stc
dec
adc
inc
movsb
out
sub
mov
jo
cmp
adc
lea
scas
mov
lods
push
scas
pop
cmc
cmp
jg
stc
lock
dec
lock
mov
pop
out
shr
ss
clc
subb
adcl
inc
push
mov
stos
sub
xlat
inc
sbb
adc
divb
mov
xor
fnstsw
sbbl
mov
aas
xor
cmp
aad
sbb
test
xor
aad
aam
leave
jne
and
aas
or
loope
sbb
rolb
addb
push
and
xor
insl
xchg
add
scas
add
das
into
mov
push
ret
mov
mov
fwait
rorl
ds
and
mov
xor
cmpb
jmp
dec
sbb
or
mov
jmp
fdivp
pusha
lahf
or
or
gs
mov
cmp
jle
push
sub
pushf
mov
and
jo
push
jge
push
and
add
pop
mov
ficompl
hlt
mov
in
or
push
inc
ja
cwtl
icebp
push
push
jne,pn
test
sti
movsl
addr16
push
hlt
cmp
sbb
pushf
cwtl
and
mov
and
gs
testl
or
in
sbb
fisttpl
or
push
inc
xlat
lods
test
lods
testl
xchg
cld
loopne
sti
jge
dec
sbb
xchg
repz
inc
mov
pushf
xlat
sub
lods
fucomip
mov
pop
fdivp
jg
sub
adc
out
or
pop
sbb
add
pushf
push
imul
mov
mov
mov
mov
pop
cld
or
dec
daa
lea
imul
xlat
pop
and
xchg
repnz
mov
scas
xor
pushf
inc
and
std
pop
in
inc
aas
stos
cmpsb
dec
sub
add
add
aad
ret
repnz
cmp
or
in
movsl
out
ret
inc
pop
add
mov
mov
into
add
lea
in
push
xor
xor
rclb
je
shrb
ret
pop
cmp
in
and
xor
orl
push
dec
pop
xchg
pop
enter
cmp
mov
or
loope
cs
dec
mov
call
lds
cmp
pop
sub
jo
push
loopne
pop
fs
shr
xchg
or
or
mov
sbb
cmp
pop
pop
shl
test
scas
sbb
js
or
imul
rcll
pop
jl
lret
mov
test
aaa
pop
mov
cmp
cld
cmpsb
jae
lods
xor
xchg
pop
pop
mov
scas
or
xchg
and
mov
sub
mov
xlat
icebp
ret
xchg
ret
mov
andl
int3
cld
mov
jle,pn
decb
sbb
cmc
jp
repnz
insl
iret
aad
sbb
xlat
stos
cmc
into
fildl
mov
push
pop
dec
ret
popf
daa
pop
lahf
sbb
inc
aam
test
cmp
inc
or
sub
rcrl
andl
dec
repz
shrl
mov
testl
cvttps2pi
cltd
outsl
inc
cmp
mov
mov
shlb
push
inc
addr16
mov
push
pop
loope
adc
and
xor
dec
daa
test
adc
loope
sub
mov
inc
fisubrs
pop
mov
nop
dec
stos
ret
cmp
jns
sub
fcomps
cltd
sub
sub
xor
inc
xchg
popf
add
jb
push
push
test
mov
mov
js
popa
xchg
aam
sbb
add
lds
repnz
push
jnp
jecxz
mov
push
rorl
fisubl
int3
pusha
dec
jmp
stos
lcall
inc
cs
lahf
lods
adcl
andb
xor
push
inc
inc
bound
inc
lock
push
test
jle
fisubl
add
insl
in
jge
imul
mov
test
add
icebp
cmp
lods
imul
xor
mov
aas
and
nop
sub
cmp
push
lret
data16
lret
jnp
sub
outsl
and
lahf
push
std
inc
sbb
or
xor
dec
or
cmc
testb
repnz
repnz
and
inc
xlat
aam
adc
mov
mov
fadd
cltd
dec
push
mov
bound
pop
fimull
and
mov
xor
and
ss
mov
mov
out
loope
add
lcall
mov
rcrb
sub
sub
std
mov
adc
lret
xlat
rcrb
cld
leave
add
mov
push
sbb
cmc
in
jg
cmpsl
jno
fstpl
mov
cmp
dec
mull
in
ficompl
add
or
or
add
cmp
mov
xchg
aam
mov
pushl
sub
add
stos
inc
xchg
push
ljmp
xchg
divb
cmpsb
mov
in
arpl
jecxz
jns
jge
pop
es
movsb
inc
insl
fisubs
gs
fcoml
push
jecxz
shrb
imul
rcl
lret
mov
xlat
push
mov
pop
pop
outsb
int
xchg
loopne
pop
je
call
mov
push
xor
xchg
cltd
dec
mov
sbb
pop
dec
mov
mov
and
mov
and
mov
or
add
aam
push
stos
and
lea
mov
sbb
pop
dec
repz
pop
and
mov
pop
and
adc
jmp
inc
prefetch
cwtl
popa
dec
push
xchg
or
mov
mov
push
xor
mov
mov
mov
shr
test
rolb
push
dec
lcall
dec
xchg
push
movsl
and
ja
pusha
jmp
fisttpll
loope
lods
xchg
shr
shrl
jno
pop
imul
push
xchg
cmp
repnz
or
sub
fld
xchg
pop
jmp
stc
pop
and
rclb
sbb
mov
daa
nop
ljmp
xor
and
cmpsb
mov
push
or
leave
scas
dec
mov
shll
cli
ljmp
push
test
inc
and
test
add
push
mov
cmpl
push
mov
mov
out
mov
repnz
mov
movsl
and
inc
pop
push
test
sarl
out
sub
adc
icebp
ret
add
fwait
lahf
stos
xlat
mov
lret
sbb
aas
inc
xchg
inc
xchg
scas
adc
pop
mov
test
leave
sbbl
jo
leave
push
gs
sub
push
js
rorb
iret
dec
adc
cli
add
lods
pop
lret
shll
mov
pop
xchg
sbb
sti
inc
and
sbb
sbb
std
xchg
mov
add
