jbe
out
push
ljmp
push
ljmp
push
mov
aad
in
or
xchg
mov
icebp
ja
lret
repnz
mov
lret
xchg
adc
or
jp
dec
rcl
or
fistpll
out
jnp
inc
mov
inc
out
add
jne
cmc
repnz
dec
dec
pop
jbe
sub
xlat
pop
jae
push
lret
push
jno
xchg
aad
xlat
push
ljmp
xchg
fmul
and
in
push
xlat
push
mov
mov
pop
ds
push
xlat
xchg
jne
push
addb
ret
push
ret
fs
fldt
push
repz
jge
imul
mov
imul
jns
rolb
jb
lds
sti
push
mov
and
jae
jg
sub
xchg
insl
jle
jmp
xlat
push
dec
push
adc
or
dec
jp
mov
xchg
mov
adc
lcall
dec
repnz
fisttpll
stos
add
aam
or
dec
test
or
lret
fidivs
int
push
stos
xchg
push
add
add
or
xlat
lcall
aam
pop
mov
cltd
push
lds
add
jbe
inc
lods
lcall
movsl
dec
out
push
ljmp
dec
stos
push
pushf
xchg
imul
ljmp
xchg
movsl
clc
insb
dec
xchg
push
push
ljmp
push
in
push
into
mulb
add
jno
add
xchg
xchg
push
jae
into
dec
stos
push
add
jae
iret
xchg
mov
dec
push
fldenv
xchg
dec
ljmp
xchg
cmp
dec
ljmp
sti
dec
lcall
stos
push
mov
clc
jae
add
dec
xchg
dec
ljmp
sti
inc
int3
push
and
cld
dec
push
add
out
or
push
xor
add
cltd
add
rcr
dec
stos
push
dec
dec
out
push
add
xor
stos
js
sti
jo
and
push
cmc
shll
add
or
arpl
in
pop
or
sub
push
add
jb
sti
nop
sub
inc
in
arpl
nop
push
pop
out
nop
imul
cs
mov
out
imul
xchg
mov
xchg
push
es
addr16
xor
dec
insl
xchg
cmpsl
sub
fsubr
or
insb
push
lret
pop
sub
pushf
popf
gs
jg
dec
pusha
cmpl
nop
jb
push
jmp
movsb
push
rol
lds
inc
std
xorb
jecxz
aad
jb
mov
mov
add
std
adc
mov
fcomi
cld
hlt
mov
or
jge
in
out
pop
or
mov
pop
loope
pushf
dec
push
imul
mov
leave
jb
add
aam
repnz
jb
xor
bound
out
in
cltd
or
imul
in
cld
and
mov
fsts
vpavgb
cli
icebp
fs
test
or
in
sub
lods
pop
fmul
outsl
repnz
test
fmul
outsl
xchg
push
cmp
mov
js
mov
out
mov
aam
mov
vpmuludq
insb
push
push
mov
outsl
jecxz
loopne
pop
fmul
popf
xor
xor
sub
add
lods
lret
loopne
mov
mov
data16
loopw
xchg
cmpsl
dec
cmp
mov
dec
sbb
dec
mov
inc
repz
and
bound
repnz
sbb
dec
popa
cmp
imul
into
out
or
or
mov
stos
lret
imul
xchg
lock
and
xor
gs
jae
cmp
loopne
mov
inc
push
adc
sahf
out
in
outsl
pop
fdivl
hlt
enter
mov
sub
push
rol
lds
inc
std
xorb
roll
sub
dec
mov
enter
and
popa
test
dec
fdivrp
sub
or
mov
mov
mov
mov
lea
mov
cmp
dec
pusha
addr16
push
lret
or
jle
fs
outsl
daa
push
int3
loope
fisttpll
jae
dec
shlb
sub
std
fwait
dec
mov
mov
and
lea
mov
loopne
pop
fmul
sub
sbb
daa
mov
add
mov
mov
push
lea
mov
dec
lcall
mov
outsl
pop
xchg
test
js
sbb
leave
outsl
pop
sbb
pusha
xor
xchg
cmp
enter
inc
sub
or
mov
bound
xor
mov
jnp
bound
or
push
jb
jmp
test
popf
mov
lret
dec
leave
cmc
add
push
pop
leave
sub
imul
fsubrl
add
mov
sbb
sti
add
adc
or
hlt
les
aaa
add
cmp
push
nop
pop
mov
rclb
mov
enter
cmp
pop
jl
out
test
adc
bound
lahf
test
jnp
jp
cld
shl
mov
pop
fdivr
std
lret
xor
sbb
or
in
test
test
pusha
not
xchg
push
jg
fcmove
outsl
test
gs
mov
sbb
lds
enter
dec
push
sub
jge
jecxz
std
ja
bound
pop
jno
insb
pusha
sbb
push
pop
icebp
dec
ss
add
dec
ffree
fcomip
pop
fmul
or
call
ffree
sub
fdivr
add
xor
pusha
sbb
jcxz
add
addr16
mov
jecxz
test
sbb
imul
jg
inc
lock
or
or
leave
pop
mov
xchg
out
repz
mov
nop
and
or
cld
addr16
cmp
mov
or
sbb
adc
push
lret
dec
pusha
ss
dec
jg
fxch
outsl
sub
cmp
mov
mov
mov
subb
mov
addr16
push
pop
sub
pop
addr16
jae
test
push
addb
or
xorb
fnstsw
scas
xchg
addr16
std
lods
mov
sub
faddl
add
sbb
in
cld
or
xor
addr16
mov
addr16
insb
test
dec
je
outsl
pop
dec
nop
or
mov
jg
pop
mov
movsl
aas
push
dec
movsl
ret
shlb
scas
add
xchg
arpl
pop
add
pop
insb
cmc
int
mov
loope
sbb
cli
insl
outsl
arpl
aas
bound
aaa
enter
add
pop
push
lods
jge
cmp
cmp
lret
bound
jb
or
xchg
stos
xor
ficompl
fiadds
pusha
cld
pop
negl
sub
mov
adc
neg
and
add
sahf
adc
std
jb
jecxz
jg
add
mov
dec
inc
and
cmp
sbb
push
jge,pn
mov
jne
mov
popa
mov
jno
out
dec
sar
and
adc
imul
cmp
sub
outsl
inc
dec
add
mov
imul
xchg
adc
loope
mov
pop
mov
inc
mov
xor
push
or
lret
movsl
fisttpl
rcrb
xchg
movsl
mov
push
in
fnstcw
psubusw
aaa
mov
mov
inc
adc
dec
cmp
cs
test
in
push
adc
scas
push
popf
pop
idivb
pop
fiadds
adc
add
mov
jae
xchg
or
fmull
sbb
bound
jbe
xchg
mov
pop
ret
shll
xor
inc
xor
add
outsl
insl
call
iret
jecxz
aam
out
or
insl
xchg
and
sarl
dec
pop
lcall
mov
cmp
inc
in
fsubrl
sub
test
adc
lcall
call
lods
pop
int3
addr16
cld
cmpsl
lret
or
push
adc
push
xlat
addr16
cmpsb
ss
mov
nop
adc
cmpsl
fdivrp
xchg
xchg
inc
js
imul
lcall
jg
in
xorl
hlt
xchg
and
sub
dec
insl
xchg
mov
les
imul
cmc
cmpsl
pop
cs
out
enter
jne
scas
cs
push
sbb
cwtl
push
cwtl
jns
xor
xor
cltd
pusha
mov
out
inc
loope
in
les
sub
movsb
pop
test
mov
lock
gs
sub
cmp
jl
dec
shll
jecxz
sbb
xor
adc
sub
dec
mov
and
mov
pop
test
out
xchg
xor
data16
leave
lods
loopne
out
fadds
dec
inc
sahf
cmova
mov
movsl
bound
scas
pop
jne
cli
ficomps
stc
pusha
nop
sbb
pop
stos
std
pop
imul
jb
jmp
inc
pop
lea
jbe
sub
lahf
push
sub
add
test
lock
add
call
imul
adc
dec
pop
push
or
cmp
adc
movsl
fstps
icebp
cmpsl
or
push
mov
pop
push
push
test
enter
roll
ja
test
add
dec
push
fwait
pop
jge
js
sub
js
adc
jnp
pusha
aad
jnp
add
push
fldenv
inc
das
es
inc
dec
mov
xor
push
push
test
sub
mov
aam
out
hlt
bound
xor
nop
nop
fistpl
lahf
jecxz
outsb
xor
loop
in
adc
jb
jo
inc
je
dec
ds
sbb
or
xchg
and
fwait
arpl
ret
xchg
stc
frstor
popf
mov
cltd
ss
lods
ds
adc
sbb
mov
cmc
lret
iret
test
jae
aaa
cmp
jns
lahf
popf
sub
jno
add
bound
push
dec
outsl
sti
add
xlat
pop
fadds
cmp
mov
fwait
pop
adc
arpl
sarb
sub
jno
jne
fisttpll
test
sbb
addr16
mov
es
les
sub
add
dec
mov
out
clc
mov
sbb
repz
push
pop
mov
xchg
sti
jg
mull
std
pop
test
pop
pop
adc
out
adc
xor
data16
mov
dec
pop
loop
xor
out
aad
outsl
insb
sbb
and
add
mov
dec
push
mov
mov
push
add
xchg
lret
int3
push
mov
mov
outsl
sub
pusha
lods
or
xor
jle
sub
mov
xchg
hlt
std
push
xor
imul
stos
adc
movsb
daa
cmc
lahf
cmc
out
pop
push
mov
and
loope
das
stos
popa
and
call
push
xchg
pop
mov
mov
loop
jge
xor
arpl
lds
sbb
js
push
dec
jae
inc
cwtl
std
jo
jecxz
jnp
and
rcll
sbb
sbb
shlb
push
inc
add
pop
in
xor
or
mov
mov
push
or
test
dec
jp
call
scas
jnp
xor
add
fs
clc
setne
test
das
jnp
insl
cmp
pop
inc
cld
dec
lock
sub
or
and
test
dec
insl
jmp
cwtl
xor
in
invd
jmp
dec
fdivr
push
sbb
or
pop
je
sub
sub
movsb
or
mov
push
push
jp
daa
or
mov
jne
and
bound
das
inc
dec
mov
adc
mov
das
xchg
ffreep
or
and
mov
fsubrp
andl
mov
push
les
pop
cs
shlb
sbb
xchg
adc
pusha
nop
add
cmp
mov
std
xchg
incl
mov
inc
inc
mov
lcall
sub
cmp
call
mov
das
dec
das
js
and
inc
mov
aas
push
cli
loop
xchg
lds
inc
pop
enter
push
je
adc
and
in
and
scas
popf
test
icebp
jmp
test
in
arpl
inc
sbb
lods
fidivrs
and
stc
frstor
sub
cmp
lret
cmp
shrb
fdivl
sti
subb
dec
dec
fldl
jne
cmp
lret
and
push
adc
cmp
sub
jl
gs
adc
jp
sub
repz
fwait
inc
adc
leave
cmp
xor
push
cs
aaa
leave
aaa
push
pop
mov
xchg
adc
mov
ljmp
jg
adc
jmp
test
stos
cmp
cmpsl
add
push
lds
pop
pop
push
pop
add
loopne
mov
pop
pop
mov
insb
mov
jge
mov
jg
xchg
ja
xor
test
push
pop
cmpsl
repz
sbb
test
out
mov
mov
or
xchg
std
add
or
jae
xchg
adc
je
fs
sub
jmp
imul
push
mov
outsb
inc
mov
rclb
jmp
in
pusha
ss
cltd
int
jns
cmp
popf
add
xor
or
or
cmp
gs
sub
fiadds
in
mov
popf
test
mov
xlat
imul
fdiv
mov
shlb
hlt
mov
add
sti
cs
sbb
jne
cwtl
sub
add
adc
out
mov
leave
push
in
or
je
push
cmp
roll
pop
and
orl
adc
fwait
cmp
jno
xor
hlt
push
std
imull
xchg
sahf
push
popf
fidivl
test
ds
inc
imul
add
mov
jno
jbe
test
orl
pop
or
int3
cmp
testb
jno
add
push
lods
mov
pop
inc
or
subl
sbb
or
cmp
popa
cmp
sti
call
sbb
sbb
stos
xor
xchg
or
dec
mov
sub
and
push
push
rcr
or
xor
ss
xor
xchg
loopne
jbe
cmp
sbb
mov
dec
inc
imul
adc
sbb
imul
adcl
jmp
inc
fidivs
push
popa
lahf
js
push
outsb
shrl
aam
adc
ja
into
inc
gs
jg
push
mov
push
mov
cli
push
xor
dec
testl
sub
push
push
cmp
cmpsb
out
inc
in
pop
scas
add
ret
mov
mov
pop
out
enter
mov
jg
pop
sbb
cmp
jle
outsb
cmc
cmpsl
bound
adc
es
cli
lret
mov
or
cmp
and
cmp
cmp
push
nop
push
pushl
das
pop
cmpsb
in
pusha
sub
in
mov
and
pop
arpl
imul
and
mov
sbb
mov
pop
jns
sbb
test
lret
xchg
jmp
incb
mov
roll
addr16
hlt
aas
add
lcall
lds
inc
dec
pushf
ret
mov
jle
xchg
movsb
imul
imul
jae
sub
call
mov
sbb
mov
arpl
push
stos
add
mov
xchg
lods
roll
or
mov
in
xor
or
pop
test
sub
lcall
lea
cltd
outsb
xor
jnp
aas
std
jl
inc
in
push
sub
lahf
mov
jo
aaa
cmp
pop
pop
popa
movsb
xchg
mov
inc
int3
mov
fisttps
fstps
shlb
pop
cmp
addr16
sub
cmp
loop
xchg
mov
js
stc
mov
icebp
outsb
adc
xchg
mov
test
insl
filds
sti
aaa
leave
cmp
mulps
add
adc
add
shrb
mov
scas
sub
std
stos
and
clc
mov
movsl
iret
inc
subl
daa
stos
xchg
push
xor
negl
sub
and
ja
sbb
aas
jb
cmp
mov
jmp
mov
cltd
out
out
movsb
sti
xor
popa
mov
jp
xlat
clc
repnz
clc
pushf
out
cmp
nop
dec
ja
popa
nop
adc
lahf
push
inc
xlat
mov
fwait
jo
xor
fisttps
adc
cmp
push
inc
fwait
mov
ljmp
clc
mov
xchg
adc
fwait
xchg
xchg
sbb
dec
pop
xor
ficoms
lret
jb
push
test
cmp
mov
pop
sbb
sbb
cmp
or
in
cmp
jmp
movsb
mov
add
jnp
xlat
mov
mov
push
xchg
int3
inc
or
dec
mov
add
jmp
inc
mov
and
adc
jmp
dec
or
xor
inc
js
je
sub
movl
sub
aad
mov
test
xchg
xchg
mov
push
imul
scas
dec
out
inc
imul
icebp
add
xor
cmp
mov
adc
clc
xchg
out
mov
hlt
jnp
sti
pop
dec
lods
add
cwtl
sub
out
jb
cli
push
dec
inc
mov
add
mov
push
int
xor
jp
adc
fisubs
cmpsl
pop
mov
adc
mov
jecxz
jne
repnz
sbb
cmpsl
mov
es
sub
lods
lret
iret
push
imulb
pop
lcallw
sti
cli
sub
ds
adc
push
popa
jmp
arpl
in
pop
pop
mov
push
jo
jl
push
mov
in
outsl
loopne
cmc
push
sbb
ss
push
pop
nop
rclb
mov
inc
and
cli
lahf
popf
mov
or
jbe
push
mov
lods
mov
addr16
xor
mov
ret
jle
cltd
scas
cmpxchg
jmp
arpl
or
cmp
cwtl
cmp
xchg
pop
enter
sub
mov
lea
aam
inc
cmpsb
push
rcll
lret
cmp
hlt
in
out
push
and
jl
adc
push
add
or
and
mov
cmc
fcomps
push
stos
sbb
cmp
adc
jle
mov
sub
dec
gs
cmp
or
pop
fcomip
test
mov
imul
rcll
lea
jne
jne
and
aam
sbb
popa
xchg
xor
icebp
cs
mov
insl
fisubrs
pop
sbb
push
stos
call
stos
sub
lods
repnz
mov
mov
cld
push
add
dec
lret
les
cltd
mov
jmp
xchg
fldt
js
or
add
xchg
sbb
push
pushf
pop
scas
xchg
jl
and
scas
sub
stos
xchg
sub
ljmp
xchg
mov
add
subb
or
cwtl
lahf
lcall
loop
roll
inc
cwtl
icebp
add
jge
inc
negb
sbb
out
cmp
mov
push
in
sub
leave
lds
cmp
mov
sbb
inc
adc
lock
insl
push
sub
pop
jbe
pop
out
dec
jae
scas
push
imull
es
mov
cmp
mov
addr16
mov
addl
iret
data16
xchg
inc
lds
mov
cmp
clc
cmp
mov
mov
mov
push
lcall
push
sub
outsl
cmp
hlt
inc
pop
lret
jae
insb
mov
cmp
xor
int3
cmpsl
bound
int3
inc
push
pop
aaa
dec
jmp
push
fcomps
mov
test
cmp
fisubl
add
jne
push
push
ret
push
adc
movl
push
dec
rol
sub
loopne
loopne
dec
xlat
out
into
aad
not
push
aaa
or
cmp
scas
and
jl
cmpsb
or
lret
sarb
test
jb
inc
lods
pop
ja
jns
and
push
subl
das
adc
adc
int3
mov
pushf
cmpsb
outsl
pop
add
pop
jbe
jo
aaa
jg
jg
mov
into
push
das
cmpsl
sub
aad
les
lds
int
jecxz
sub
mov
pop
jle
daa
inc
adc
fisttps
fisttps
stos
les
dec
mov
or
or
dec
loope
or
mov
loop
push
arpl
mov
scas
movsl
pop
movb
mov
call
sti
ds
std
jae
mov
shlb
movsl
outsl
add
popf
pop
pushf
loop
in
xor
lock
subb
xchg
fdivl
and
dec
jmp
jle
sbb
outsb
push
jg
cmc
scas
ljmp
movsl
push
mov
mov
fnsetpm(287
jmp
push
and
subl
add
sbb
fisubl
aas
fwait
inc
movsl
vcmpps
xchg
push
cmp
cmpb
test
add
inc
addr16
pop
jb
aad
aas
sbb
lea
add
or
nop
push
jo
lret
inc
push
test
mov
icebp
movsl
pop
adc
rolb
stos
nop
cmc
and
dec
sbb
mov
fwait
xlat
push
cmp
aam
int3
test
push
and
call
dec
xchg
jbe
jmp
fcomps
clc
and
stos
lds
jbe
xchg
cmp
xchg
cmp
mov
adc
scas
mov
mov
cltd
test
mov
clc
sbb
dec
dec
xchg
imull
ljmp
rcll
popl
add
xor
js
push
mov
sub
xlat
gs
mov
pop
push
pop
pop
inc
add
loope
cmp
pop
mov
sub
cmpsb
shll
lock
mov
orb
jno
push
clc
mov
pop
jl
sub
push
out
dec
hlt
outsl
ror
lods
shlb
rol
pop
dec
mov
mov
jmp
inc
pop
ja
or
stos
bound
std
and
push
decb
arpl
out
inc
sbb
lds
mov
dec
pop
in
mov
pop
dec
inc
inc
cltd
inc
lock
push
jl
sub
dec
loopne
xchg
cld
scas
and
lcall
push
imul
mov
call
test
jns
cs
leave
and
push
imul
orl
cmp
pop
dec
filds
imul
notb
sbb
popa
lcall
cmp
gs
adc
mov
popf
ret
rclb
add
lea
inc
jl
out
mov
jb
adc
not
mov
push
add
pop
enter
xchg
xor
iret
aam
ljmp
loopne
stos
call
sbb
xchg
and
fisttpll
das
mov
adc
ljmp
xchg
outsl
sbb
dec
mov
sub
pop
fimull
mov
xchg
negl
das
sub
repnz
ljmp
sub
pop
push
hlt
fs
movsb
xor
scas
xor
pop
mov
subl
das
inc
cmp
fistl
jmp
bound
stos
cmp
out
test
push
aad
clc
aam
dec
sub
jbe
push
jbe
mov
dec
mov
mov
cmp
push
mov
push
test
call
add
sub
popa
popf
cwtl
xchg
jno
xchg
inc
int3
jnp
out
imul
cld
xor
inc
pop
fistps
jecxz
push
push
cmp
std
adc
sub
xchg
mov
shl
test
shl
out
not
xor
push
inc
jne
push
inc
xchg
jns
movsb
je
jg
nop
jns
movsl
rclb
mov
xor
push
sbb
and
pop
mov
push
mov
mov
mov
pop
mov
mov
inc
nop
mov
and
inc
movsl
fisubs
adc
das
outsl
add
or
cld
xlat
and
or
push
subl
faddl
xor
in
imul
jp
test
jno
inc
mov
mov
inc
js
je
ds
sub
into
jmp
sti
mov
jl
sbb
pop
fucom
push
dec
jbe
test
jno
cs
hlt
test
loope
lock
movsb
inc
leave
idivl
mov
test
add
mov
clc
lods
mov
and
outsl
mov
xchg
pop
test
inc
sbbl
mov
std
push
icebp
rclb
sbb
aaa
icebp
and
shrl
push
insl
movsl
lcall
mov
ret
sub
adc
rcll
sbb
pop
pusha
inc
lock
pop
dec
mov
mov
jnp
pop
call
lock
mov
xor
mov
xchg
xlat
subl
fildl
popa
inc
jecxz
clc
push
filds
fisttpl
dec
xchg
shrl
cmp
call
int3
add
ja
xchg
inc
push
ljmp
in
loope
iret
push
cmp
das
xlat
clc
mov
rolb
incl
sbb
xor
sub
xor
popf
popf
or
dec
push
js
inc
and
pushl
shrb
xor
dec
inc
adc
loopne
jns
xor
or
or
std
mov
jecxz
xchg
sub
into
jns
sbb
push
out
fcomps
xor
test
lcall
push
sbb
push
fsubs
test
pusha
in
xchg
mov
or
mov
inc
push
sbb
insb
movsb
sbb
jmp
xchg
cmpsb
testl
test
xchg
inc
add
fld1
inc
in
mov
inc
add
out
icebp
mov
xchg
adc
cmp
sbbb
jecxz
pop
int3
or
adc
sbb
push
inc
cmpsl
mov
mov
loop
pop
scas
movsb
shll
jmp
aaa
push
in
inc
cltd
sub
ja
mov
test
shll
sub
xorl
xor
insb
cmc
lds
dec
mov
jns
adc
mov
inc
or
outsb
pop
cmpsb
dec
and
adc
aad
add
or
test
pop
and
les
jl
test
cmp
stc
in
mov
aaa
cltd
stc
jge
fstpl
jae
cltd
lret
sti
rol
push
fs
fstps
scas
jb
pusha
sub
test
outsb
or
or
xor
sub
nop
pushf
xchg
adc
fisttpl
inc
adc
jbe
push
xchg
push
testb
popf
mov
push
addl
fcoml
mov
mul
sbb
push
lods
mov
fbld
adc
add
fsub
aaa
leave
push
mov
pop
sbbl
test
pop
xor
aam
mov
mov
pop
add
push
lods
push
das
cli
arpl
cltd
out
xor
imull
iret
pop
add
inc
ret
mov
push
mov
sbbb
cmpsb
jae
xorl
inc
add
xchg
push
push
or
movb
mov
icebp
jle
aam
int3
adc
jb
add
push
addr16
mov
or
mov
cmpsb
pop
out
add
dec
mov
jle
mov
imul
test
aas
addr16
jg
fsubl
and
clc
cmp
adc
stos
sbb
push
lcall
call
lahf
scas
sub
jae
aad
cmp
sahf
mov
dec
jb
lret
cmp
sub
js
push
outsl
aas
insl
push
fisttps
test
movsl
sbb
sbb
xor
clc
vpmovzxdq
sub
pop
mov
mov
sar
dec
or
aam
adc
add
enter
push
les
ljmp
sub
dec
gs
iret
or
pop
fnstsw
mov
jp
xchg
pop
add
sub
mov
xor
frstor
jnp
mov
ds
mov
call
jne
push
pop
imul
cmp
cmc
js
jg
or
fcoml
loopne
pop
in
cmp
dec
shll
sub
call
xchg
sbb
cmp
push
add
icebp
inc
and
dec
ss
push
push
jle
dec
ret
push
inc
dec
test
cmp
sub
mov
sbb
nop
movsl
mov
xchg
cwtl
repnz
mov
clc
cmpsl
xchg
ja
jp
loopne
xchg
rorl
and
andl
mov
push
es
sbb
ret
and
scas
xchg
inc
leave
jae
mov
cmp
popa
sub
mov
jno
lret
dec
push
test
fst
sub
lret
pop
push
pop
stos
cli
push
and
jl
negb
or
clc
xchg
pop
or
push
mov
mov
es
cmp
leave
sub
dec
addr16
mov
in
stos
aam
xlat
inc
les
push
addb
cmp
adc
ljmp
stos
xchg
xorl
xchg
call
movsl
jb
jmp
mov
jp
push
int3
bound
loopne
es
lcall
jb
stc
fwait
inc
enter
outsl
in
add
imul
xchg
jo
call
ret
popa
sbb
mov
pop
retw
popa
clc
push
lea
jle
sbb
in
jno
out
aam
jl
ljmp
stc
sarl
xchg
jp
cmp
xor
sub
and
mov
pop
dec
shlb
in
ss
xchg
mov
stos
neg
fldenv
aad
dec
pushf
shlb
add
xor
std
loop
out
jle
aaa
mov
push
imul
pop
aam
cmpsl
push
imul
lcall
jmp
jl
or
stc
or
shll
xor
pop
lods
push
std
inc
jmp
scas
and
jg
xchg
scas
loopne
inc
sub
fistl
cmp
push
cld
pop
mov
hlt
mov
sbb
pusha
jb
jb
jae
addl
ss
and
pop
std
add
adc
inc
mov
fisttpl
pop
lds
pop
fdivrs
lret
mov
aam
cmp
and
jb
add
or
ja
dec
bound
jb
lcall
daa
cmp
mov
inc
mov
dec
es
lret
jbe
cmp
add
push
lret
ds
imull
fcoms
adc
nop
lds
xchg
aaa
scas
xchg
out
jmp
pop
and
cmc
push
vmread
push
popa
inc
xlat
nop
jge
dec
ror
es
scas
jae
sar
aaa
fildl
sub
imul
lods
cmp
ds
jp
daa
inc
jecxz
push
xchg
cmp
xor
faddl
sti
jne
sub
jecxz
mov
stc
push
aas
ret
mov
xor
sbb
mov
add
and
ja
ljmp
cmp
sbb
lods
mov
mov
insb
lods
mov
pandn
jp
jp
imul
aad
or
xchg
push
shll
xchg
pop
jp
jbe
inc
stos
dec
mov
cltd
push
jb
sbbb
je
dec
test
sahf
nopl
clc
mov
and
jl
pop
cwtl
mov
cltd
sbb
sbb
inc
mov
xor
out
push
daa
fdivrl
shl
xor
cwtl
pushl
ja
adc
das
clc
push
sub
pop
sbb
inc
jns
inc
sub
test
fisttpl
add
jns
xor
in
fisttps
adc
push
sub
jns
movsb
xchg
insl
push
mov
ljmp
push
cld
inc
add
outsb
push
dec
push
dec
gs
jg
jecxz
outsl
push
ret
addr16
sbb
and
and
jbe
adc
adc
and
test
mov
mov
mov
std
mov
mov
sbb
xor
xchg
fdivs
cld
xchg
jne
sub
sub
outsl
sbb
pop
xchg
and
xchg
nop
mov
subb
incb
pop
jmp
aad
aad
mov
ja
test
clc
jb
in
insb
xchg
pusha
dec
scas
lcall
ljmp
add
pusha
ficoms
xchg
push
iret
adc
std
inc
fildl
arpl
mov
lds
add
or
aaa
test
xorb
mov
insl
sti
inc
popl
lea
in
pusha
xor
pop
fimull
jns
je
or
daa
mov
test
sti
xchg
fistpll
push
mov
mov
sarb
outsb
adc
sub
lret
dec
test
scas
inc
bound
fdiv
ss
mov
sbb
lods
inc
jo
insb
negb
divl
xchg
aaa
xor
and
stc
rolb
test
adc
mov
mov
shrl
imul
imul
pop
ret
inc
pop
adc
hlt
mov
dec
push
in
adc
imul
push
mov
mov
loop
in
dec
sbb
fwait
or
jl
outsb
inc
push
das
in
cmp
cwtl
pop
pushf
imul
cmp
fisubrl
mov
insl
les
jae
das
sbb
rcll
mov
mov
sbb
shll
dec
pop
cmpsl
sub
dec
pop
xchg
aad
movsb
lcall
cs
and
mov
hlt
pop
incl
hlt
pop
cltd
das
jmp
sti
cwtl
dec
sub
leave
sbb
xchg
mov
push
loopne
xchg
pop
jle
fsts
test
cmp
lock
add
mov
mov
out
jbe
stc
ss
add
roll
fsubrl
aas
imul
icebp
jecxz
sbb
fisubs
repz
sar
movsl
mov
imul
cmp
dec
in
ja
or
mov
arpl
xchg
out
clc
cmpsb
xorl
scas
ja
test
das
dec
cmc
adcl
or
push
jle
dec
nop
outsb
xor
dec
fs
rcr
sbb
shll
jns
mov
jl
decb
int
or
adc
sbb
and
xchg
ret
or
cwtl
rorl
mov
out
bound
stos
inc
jg
and
stos
pushf
xchg
scas
orb
mov
fcoms
cmp
imul
mov
movsb
test
dec
and
es
bound
xor
push
inc
dec
lea
addb
bound
cs
rorb
mov
addr16
test
xchg
xor
add
jo
lea
jg
mov
pop
ret
neg
add
repz
fnstcw
stos
pop
call
jne
stc
xchg
sub
and
sbb
jno
xchg
adc
pop
cld
inc
sti
ljmp
push
ds
aad
dec
jmp
add
fbstp
fnstsw
xchg
add
rcrb
lds
mov
dec
sbb
nop
int3
std
frstor
or
jb
and
imul
jg
decb
in
cmc
stos
mov
out
xor
clc
notl
test
ljmp
into
iret
js
xor
out
negl
add
jg
xor
pusha
jnp
dec
loopne
clc
cmp
inc
jo
mov
and
sahf
pushl
shlb
jecxz
lret
xchg
test
jl
stos
inc
fcmovu
je
add
std
sub
pop
sub
insl
inc
imul
push
jne
test
push
sub
jae
imul
add
repnz
fidivs
enter
cmp
adc
inc
add
leave
test
in
aam
push
xor
add
xchg
jecxz
ss
fcompl
dec
and
les
icebp
es
push
jns
sbb
sub
lock
or
and
je
outsl
xor
pushf
jnp
xlat
je
xor
dec
stos
xorl
in
rcll
in
push
scas
pop
inc
sub
adc
and
mov
in
sub
and
out
sub
fdivl
or
mov
dec
or
insl
cmp
js
scas
rolb
addr16
iret
lds
icebp
lock
sbb
das
rorl
fldl
sub
xchg
in
adc
iret
pop
lods
loope
addr16
das
shlb
xor
xor
mov
push
push
cwtl
push
xor
ljmp
mov
scas
test
out
andl
cs
js
test
stos
add
test
popa
cmp
cs
push
addb
bsf
or
push
mull
out
sub
pusha
mov
add
icebp
dec
andl
jns
out
cli
fsubp
int3
jl
fs
xchg
adc
xchg
imul
inc
rol
stos
xor
into
cmp
iret
sub
push
mov
std
idivl
xchg
mov
test
add
inc
sub
push
sahf
jo
sbb
pop
inc
or
ret
lock
outsb
or
jbe
mov
or
cli
pop
adc
fisttpl
jbe
in
cs
icebp
fldenv
pop
xor
sub
ficoml
add
pop
pop
idivb
out
mov
inc
in
mov
sbb
mov
mov
sahf
scas
sub
mov
iret
jp
and
in
movups
mov
and
inc
sbb
sbb
stos
xchg
and
adc
pop
dec
mov
inc
and
jge
aas
push
inc
jp
mov
mov
lahf
icebp
pop
push
imul
pop
cmc
fnstsw
fs
imul
lods
mov
js
mov
xor
sub
test
add
mov
fs
or
cmp
fwait
pushf
add
pusha
pop
subl
fst
icebp
cmp
je
cmp
popf
mov
les
stc
js
lods
mov
fdivl
inc
lcall
in
lret
jmp
jl
addl
mov
adc
xchg
loop
xchg
call
inc
xchg
cmpsl
adc
das
push
or
add
mov
inc
push
aas
dec
jne
add
mov
or
jno
xor
xchg
mov
push
push
cli
jecxz
push
jns
lahf
sub
loopne
faddl
loopne
adcl
pop
daa
sbb
mov
in
mov
push
dec
roll
fidivs
xor
xor
ss
or
mull
shrb
push
aas
daa
lcall
adc
std
cmp
call
subl
lcall
cmp
sbb
add
jle
stc
xchg
fwait
ss
test
mov
aad
aam
ja
jl
xchg
inc
bound
cmp
push
cs
lods
hlt
pushf
cltd
dec
push
mov
cwtl
jl
mov
pop
push
inc
sbb
leave
data16
cmp
imul
daa
rorb
adc
push
mov
jl
outsl
insl
inc
sti
cmpsl
cmp
rorl
jp
pop
pushf
jb
adc
clc
jae
ja
mov
aaa
push
out
test
jle
scas
dec
pusha
pop
xchg
sbb
mov
xchg
dec
daa
add
testl
dec
pop
dec
mov
xchg
std
sub
sbb
ret
cmc
cwtl
in
mov
adc
pop
andb
movsb
jb
push
push
dec
popa
je
lea
fidivrl
jo
sbb
xchg
out
lahf
pop
dec
testl
in
cs
lods
mov
loop
pop
sarl
xor
mov
lods
arpl
ret
xlat
cmp
sub
adc
cmpb
sub
sub
xchg
xorl
into
and
sub
cmpsl
hlt
jae
mov
in
mov
push
fimull
or
cmp
sbb
xchg
mov
stos
in
test
and
dec
mov
shl
sub
iret
lcall
sub
fwait
imul
leave
ljmp
aam
jb
push
and
jns
add
xor
mov
dec
cmp
js
dec
mov
add
mov
add
or
push
andl
inc
mov
jg
cwtl
gs
arpl
pushf
jl
clc
jl
nop
insl
inc
repz
imul
mov
cmc
cltd
out
lcall
jge
inc
push
cmp
sbb
sti
ss
push
data16
enter
or
iret
fs
cli
add
scas
add
or
shll
adc
pop
addb
js
xor
lock
bound
cwtl
jnp
dec
mov
push
xor
cmp
xchg
push
inc
fwait
jbe
test
mov
adc
loope
cltd
decl
cmp
cmp
iret
mov
mov
mov
insb
sbb
inc
mov
xor
adc
repz
fstpl
mov
mov
xchg
cs
push
push
bound
scas
rcll
mov
loopne
xlat
cld
pusha
xorl
out
mov
iret
lock
cmp
fdiv
pop
andl
cwtl
js
aaa
pop
scas
jno
js
mov
popa
mov
xor
test
lahf
rep
sbb
pop
in
cwtl
cld
iret
in
cmpsl
lods
mov
leave
daa
adc
sub
lahf
test
add
mov
in
mov
mov
xchg
adc
adc
clc
mov
jecxz
mov
mov
jg
call
pop
jb
in
pop
test
es
out
adc
mov
jle
shrl
in
push
dec
jle
push
or
lea
adc
out
lcall
arpl
push
ret
aad
jmp
add
out
popa
push
out
jmp
out
inc
loopne
sbb
ds
push
push
adc
pusha
lcall
and
int
jl
fcoms
jns
loope
clc
stos
inc
loop
ljmp
pusha
inc
xor
sbb
xor
loopne
jmp
icebp
imul
test
scas
cmp
dec
pop
loopne
xor
incb
testl
pop
xor
cmp
ja
lods
pushf
xchg
jns
aam
xor
sub
fxtract
inc
fwait
in
jmp
dec
xor
push
rorb
push
xor
popf
pusha
mov
mov
xchg
push
pop
sub
scas
rcl
mov
dec
bswap
pop
inc
into
pop
out
mov
fwait
stos
add
fistpl
cmpsb
in
mov
insb
imulb
ja
sar
cmp
fldt
std
lahf
aaa
jo
das
jb
or
adc
inc
outsl
pop
mov
sub
sub
out
cmp
jne
add
xchg
loop
pop
inc
adc
mov
pop
xchg
jp
lahf
stos
cs
adc
xor
lret
jnp
inc
fnstsw
jb
cmpsl
xlat
jmp
fidivl
mov
mov
xchg
inc
push
mov
int
les
push
movsb
inc
jle
jl
ljmp
out
mov
mov
pop
in
popa
cmpsb
inc
imul
fnstenv
jnp
inc
xchg
dec
shrl
cwtl
pop
jbe
or
ja
push
dec
scas
lcall
sbb
repz
dec
hlt
add
in
xchg
pop
setnp
dec
add
inc
inc
lahf
das
hlt
mov
xchg
lods
mov
and
je
sbb
dec
sub
add
xchg
in
subl
xchg
cmpl
cmp
pop
inc
popf
out
fidivs
push
mov
in
in
shlb
rol
mov
inc
les
inc
aam
aaa
orb
xchg
shrb
pop
fwait
std
test
push
addr16
jg
cli
negl
in
jns
in
push
ret
jp
mov
adc
outsb
xor
ret
jp
or
cli
sub
mov
push
fsubrl
xor
jl
sbb
and
leave
call
movsb
push
iret
ret
jmp
cs
dec
inc
add
insb
aas
xchg
mov
sub
iret
cli
shl
out
mov
pop
or
andb
sti
mov
repz
cmpsl
rorb
add
jle
mov
inc
mov
stos
adc
stc
dec
cs
inc
adc
pop
sub
popf
mov
add
push
xor
iret
sub
jno
jle
in
popa
outsl
call
rolb
push
pop
sbb
das
cmpsl
jne
enter
pop
gs
shll
movsl
cwtl
fisubrs
add
inc
leave
enter
and
xor
or
xchg
fdivrs
dec
clc
bound
mov
sbb
dec
movb
lret
arpl
bound
fsubrl
in
popa
mov
cmp
push
lods
cmpl
and
push
add
or
movsl
stos
inc
adc
push
inc
xchg
cmpl
das
sbb
pop
push
inc
icebp
int3
mov
sbb
mov
mov
ja
sub
shrl
mov
popf
inc
enter
lock
and
cld
nop
dec
scas
stc
das
test
mov
repz
lret
ret
imull
ljmp
fldenv
int
mov
dec
test
add
mov
jb
ret
in
adc
divl
divb
popa
xchg
movsl
les
aas
ret
fsubs
dec
pop
lock
xchg
fs
push
pop
pop
mov
insb
lret
and
decl
mov
imul
pop
pop
cmp
pop
pop
sbb
icebp
mov
gs
pop
imul
mov
repz
lock
pusha
daa
cmp
repnz
movsb
cld
sub
pop
repz
inc
mov
nop
dec
pop
push
push
cmp
mov
push
push
mov
adc
add
test
xchg
rcl
sub
push
cwtl
fisubrl
inc
in
fidivrs
inc
xlat
inc
cltd
gs
jb
insl
lods
icebp
ja
rcr
inc
icebp
inc
or
loopne
add
loop
sbb
in
sbb
mov
push
jle
aaa
pop
mov
insb
jnp
daa
and
xchg
cmp
mov
pop
test
pop
pop
mov
push
hlt
pop
inc
sbb
xchg
and
pop
lcall
into
mov
mov
jae
imul
nop
xlat
lods
jl
sub
fstps
dec
mov
sarl
cmc
mov
and
dec
cmp
xor
sbb
syscall
rol
xchg
jns
and
push
insl
lahf
hlt
jb
push
cmp
pop
and
mov
loop
dec
imull
sbbb
xchg
add
dec
jmp
inc
cmp
test
and
insl
nop/reserved
lret
mov
pop
pop
mov
add
sbb
mov
fcompl
push
add
imul
push
paddsw
jmp
je
mov
sbb
mov
and
sub
inc
pusha
xor
adc
pop
das
stc
xchg
test
cltd
pop
jno
fstpl
aaa
jns
pop
iret
lahf
dec
rcrb
and
adc
xchg
orl
lahf
fstpl
sbb
mov
bound
xchg
adc
mov
out
mov
add
mov
xchg
test
fstl
pusha
sbb
add
or
inc
andb
rep
cmc
cmp
jg
test
jbe
in
push
sub
or
cmc
pusha
ss
cmp
pusha
dec
fisubl
lds
sbb
sbb
outsb
fidivs
stc
sahf
jecxz
std
cmpsl
jmp
mov
pop
imul
test
les
jmp
cmpsl
dec
inc
lcall
inc
mov
sbb
inc
inc
mov
dec
and
push
jmp
call
sarb
mov
popa
inc
push
les
adc
sbb
and
aas
adc
or
rorl
repnz
loop
jmp
cmpsl
arpl
cmpsb
dec
cmp
mov
verr
lods
and
xlat
dec
call
inc
pop
or
or
fst
mov
mov
push
dec
sbb
sbb
test
dec
iret
fwait
xor
adcl
test
dec
mov
xchg
mov
test
repz
pop
mov
popf
inc
in
mov
xchg
outsl
out
cmp
adc
cs
or
roll
test
ret
xor
dec
xchg
gs
push
sub
imul
xor
xor
mov
and
add
xchg
sub
sbb
je
and
pop
fldl
icebp
mov
inc
mov
sub
adc
sub
sahf
mov
inc
sub
aam
hlt
mov
mov
sbb
mov
imul
sbb
rcrb
dec
hlt
xchg
cmc
decl
pop
loope
xchg
addr16
sbb
ds
sbb
sub
or
pusha
xor
jbe
ret
fdivl
cli
pop
dec
pop
sub
insb
aas
stc
xchg
push
in
shrb
pop
or
jg
out
sahf
arpl
mov
mov
sub
mov
mov
nop
and
sub
popf
iret
out
mov
push
inc
cmpsb
mov
bound
cmp
or
ja
ds
xchg
adcl
adc
jb
ds
mov
lret
inc
mov
dec
repz
fwait
iret
ds
sbb
or
leave
mov
decl
inc
xchg
icebp
call
push
inc
add
lods
sbb
jne
lea
mov
mov
out
mov
mov
sub
inc
xchg
xor
mov
mov
andb
push
movsl
inc
pop
scas
cmp
cld
jle
pop
mov
jle
jl
rol
fldt
jns
push
sbb
mov
mov
cmp
push
testl
push
jecxz
fst
and
dec
xor
sahf
shl
adc
push
fidivrs
push
push
lret
push
and
stos
js
inc
adc
inc
loopne
jo
stos
mov
orl
nop
nopl
mov
aaa
sub
jns
into
add
mov
adc
cmpb
pop
push
mov
sub
loope,pn
xor
push
pop
pop
andl
or
scas
sub
push
icebp
aad
pop
jbe
fdivrs
shl
push
fstps
in
xchg
jae
pop
out
imul
mov
es
sub
jbe
ljmp
cmp
jbe
into
daa
mov
in
push
pop
popf
int
sub
adcl
adc
into
lods
or
aas
mov
cli
divl
out
jb
pop
aaa
sub
adc
mov
dec
and
lods
mov
or
rorb
jge
push
add
jmp
inc
in
rcrb
data16
fidivs
ret
cmpl
imull
push
jl
nop
push
les
and
hlt
sbb
test
dec
int3
adc
jno
shlb
and
mov
shr
xlat
lods
movzwl
add
out
xlat
xor
divb
insb
lds
cltd
decl
ss
sub
add
jb
and
rcl
push
addb
xor
sahf
jecxz
das
inc
sbb
jle
fstpl
out
lea
xorl
call
int3
push
mov
cs
push
pop
mov
enter
andb
inc
lods
outsl
cli
dec
inc
out
fildl
mov
test
jo
sub
sahf
es
or
daa
mov
les
jb
add
fwait
aam
mov
loopne
sub
jg
mov
mov
dec
loopne
mov
daa
cmp
add
jnp
add
jns
out
mov
inc
aas
out
std
mov
repz
sbb
adc
ds
cmp
nop
imul
test
sub
dec
mov
pop
add
shll
rclb
stos
test
inc
add
in
ljmp
cmp
adc
xor
cmp
das
add
pop
add
ljmp
das
pop
add
cld
lds
sub
incb
in
add
insb
jbe
xor
mov
roll
add
dec
pop
lcall
testl
sbb
vmovapd
in
mov
mov
inc
cmpb
lods
cmpb
and
add
loopne
xchg
clc
adcl
add
sbb
mov
push
jmp
add
notb
push
in
mov
clc
mov
or
enter
dec
add
stc
js
or
imul
stos
lods
fcoml
xchg
mov
aam
push
out
mov
push
sub
adc
out
imul
pop
dec
or
xor
xor
in
jns
lds
add
push
mov
push
inc
and
aam
jnp
push
hlt
and
mov
repnz
aas
fiadds
js
sub
idivl
outsl
xchg
dec
clc
sbb
add
mov
inc
sahf
push
sub
pop
cs
mov
lcall
ds
idivb
jle
adc
pop
dec
xor
int
je
in
nop
xchg
fstp
mov
mov
test
sbb
add
or
or
inc
jg
mov
push
sub
sarl
jno
scas
mulb
dec
mov
dec
lea
pop
pop
testb
lret
adcb
mov
je
insb
xor
cs
xchg
jge
dec
sbb
pop
mov
add
mov
es
clc
adc
loopne
pusha
or
lret
jle
add
sarl
jne
xlat
or
adc
repz
daa
pop
pop
sub
and
push
mov
sub
dec
cmp
push
sbb
ds
xchg
les
xlat
inc
xchg
jne
arpl
movsb
add
jmp
mov
fs
loopne
movsb
mov
ror
push
in
jnp
and
push
mov
cmp
mov
fcoms
lcall
inc
pop
sbb
mov
push
sbbl
sbb
out
and
in
mov
rol
mov
xchg
pusha
sbb
stos
inc
pop
cwtl
stos
jmp
fists
mov
dec
or
paddw
in
cwtl
mov
dec
push
push
cmp
xor
adcb
push
aad
shlb
das
xor
sub
or
pop
xor
cmc
pop
sbb
fcomp
dec
ret
xor
cmpsl
mov
js
fcom
test
dec
cmpsb
lahf
and
in
cmp
repnz
xchg
sub
repnz
jg
jl
push
cltd
subl
add
sub
rorb
fs
pop
mov
shrl
inc
lds
call
jo
int
lods
adc
bound
xor
lods
dec
lcall
mov
xor
arpl
sub
lea
subl
scas
pop
insl
inc
jne
cli
pushf
std
mov
aad
cwtl
sub
jo
dec
stc
das
aas
pop
loop,pt
xchg
cmp
imul
jle
jg
xor
mov
mov
icebp
inc
dec
pop
mov
js
and
sub
arpl
popf
nop
sti
pop
sub
adc
jnp
sub
aaa
xor
jg
adc
mov
addr16
fistps
mov
xor
call
test
xchg
sbb
push
or
mov
test
sub
jns
fcmove
out
jmp
jecxz
mov
mov
insl
data16
repz
clc
jge
xlat
jb
mov
and
into
or
mov
xor
loope
inc
xchg
pusha
push
mov
addr16
dec
aad
xor
cmpsl
push
aaa
addb
stos
hlt
pop
dec
adc
push
cwtl
jae
outsb
jns
sbb
into
push
mov
std
cmpsl
push
test
es
dec
ja
mov
xchg
andl
enter
ret
scas
cmpl
pxor
lds
inc
shld
retw
popa
lahf
mull
cs
pop
add
and
push
scas
jge
popa
mov
jb
xor
adc
pop
test
mov
int
inc
test
popf
mov
in
add
pop
adc
popf
mov
add
mov
push
dec
cmpsb
adc
inc
mov
scas
push
xorl
sbb
lods
gs
sub
das
aad
jbe
popa
cmpsb
sbb
mov
dec
fadd
sbb
movsb
mov
test
xor
sbb
mov
addb
push
in
fwait
mov
test
adc
mov
lahf
inc
stos
lret
jb
and
mov
scas
cwtl
mov
ret
add
sahf
mov
cmp
decb
in
fnstcw
xchg
mov
xchg
ret
das
dec
add
or
mov
rorl
xchg
movb
fidivrl
pop
sbb
push
cltd
adcb
sarl
mov
mov
test
data16
sub
adc
cmc
lock
push
popa
imul
scas
loope
xchg
rcr
push
inc
aaa
adc
dec
sub
fmull
jecxz
dec
push
dec
rcrl
pop
and
test
repnz
mov
mov
cs
icebp
int
andb
or
or
fsubrl
movsl
shrb
js
mov
stos
inc
lods
mov
inc
mov
cli
dec
pop
xorl
cmp
pushf
movsl
add
dec
sub
dec
dec
lea
rcl
xor
fisubrs
push
xor
sub
rcll
cwtl
and
inc
lcall
stc
ret
inc
and
iret
push
jo
outsl
lret
xchg
mov
popa
lcall
popa
in
add
inc
pop
pop
inc
test
jo
movsbl
xchg
sub
in
fnsave
add
test
notl
stos
int3
mov
jne
dec
mov
movl
repnz
lahf
lods
push
xchg
les
cs
loope
pop
filds
popa
movsl
pop
cmp
fsub
jno
aas
mov
iret
adc
xchg
nop
iret
inc
pop
adc
fcoml
jno
adc
imull
xor
mov
push
or
add
test
daa
mov
xchg
xor
cli
push
out
sti
jae
inc
arpl
sti
and
xor
sub
pushf
cmpsl
mov
test
mov
out
add
aaa
cltd
jmp
repnz
mov
insb
arpl
in
jp
mov
movsb
pop
ja
mov
mov
add
aam
sbb
push
pop
cmp
xchg
pop
fisubs
test
cmpsb
pop
pusha
in
jbe
std
push
jno
push
add
pusha
ror
jno
add
xchg
in
inc
adc
testl
fidivrs
stc
and
lea
cmp
pop
nop
lods
hlt
jge
inc
roll
pusha
cmp
pop
movsb
or
mov
sub
fwait
mov
shll
nop
outsb
aas
test
adc
mov
scas
dec
nop
test
getsec
or
mov
jb
xchg
ja
dec
sub
pop
inc
mov
mov
imul
add
push
dec
int3
outsb
in
dec
test
pushf
shl
xchg
gs
mov
jbe
cltd
dec
imul
sbb
out
push
xchg
test
adcl
jnp
xchg
dec
das
and
loopne
aad
pop
imul
frstor
adc
dec
sub
push
and
mov
fs
xchg
lods
mov
add
push
es
pop
pop
sbb
dec
push
std
adc
in
in
insb
xchg
aam
scas
repz
lods
aad
adc
mov
pusha
mov
out
push
sub
inc
mov
xor
iret
arpl
add
and
dec
pushf
jge
cltd
cmp
mov
ja
mov
pop
imul
add
lods
add
sub
jo
jo
and
jae
inc
jl
push
add
sti
inc
repz
mov
stc
sahf
sbb
mov
xor
movsb
mov
fwait
dec
fisttpll
or
xor
inc
xchg
push
arpl
inc
inc
pop
loop
sbb
enter
and
dec
adc
add
jae
mov
adc
inc
outsl
sub
inc
dec
div
and
pop
adc
roll
push
cmp
xchg
sbb
nop
xor
rorb
out
mov
shll
mov
mov
and
pusha
lea
mov
ret
test
daa
or
mov
popf
notl
mov
xor
xchg
fwait
push
lods
addb
sub
cmpsl
push
push
sahf
sti
divl
cmp
xor
dec
push
in
cmp
lahf
pop
in
adc
mov
xchg
test
jns
hlt
js
bound
call
xchg
fwait
rorl
push
jl
imul
pop
fdivl
cwtl
cli
cmp
mov
movsb
fildll
sub
inc
dec
mov
mov
stc
in
mov
jae
into
test
add
pandn
mov
cwtl
popa
pop
pop
in
movsb
lods
out
daa
add
fwait
lahf
orl
push
xchg
lahf
ja
stc
xor
outsb
into
push
les
jp
xor
jnp
cld
fldl
fs
xchg
rcl
mov
cld
cmpsb
xchg
gs
push
ret
cmp
rcrb
sbbb
inc
adc
cmpsb
fsubs
inc
xchg
mov
xchg
mov
iret
jne
bound
js
loopne
mov
mov
pushw
sbb
inc
and
inc
in
hlt
inc
test
sahf
cwtl
imul
cmp
shrb
xor
pop
ds
test
cmp
sbb
mov
nop
mov
decb
sbb
call
mov
jb
ret
std
sbb
cld
pop
fistpl
xchg
add
inc
sub
jl
popf
je
cvtpi2ps
push
xchg
cli
cmpsl
les
push
mov
lret
iret
mulb
imull
rolb
add
mov
mov
sub
in
int3
rcrb
movsl
fisttpll
xchg
xchg
cmp
lret
leave
dec
pop
dec
inc
mov
icebp
add
mov
pop
xor
mov
push
sarb
dec
adc
scas
mov
or
fsts
mov
xchg
decb
aad
xor
clc
and
sbb
adc
pop
enter
popf
jg
movsb
mov
adc
push
xor
std
push
loope
call
in
mov
stc
pop
insb
sti
iret
ss
add
daa
inc
mov
jmp
cs
add
rclb
cmp
clc
jecxz
jle
add
cmp
pop
test
subl
sub
bound
test
mov
cmp
and
add
inc
arpl
mov
mov
cld
ret
sti
mov
adc
fs
pop
cld
push
or
adc
pop
jp
test
sbb
dec
jge
mov
sahf
insb
cs
test
jg
shlb
adc
jo
xchg
cmp
sub
inc
sahf
into
cld
or
fidivrs
ja
call
ljmp
ds
popa
jbe
mov
add
test
and
xor
lock
and
inc
push
jle
and
adc
and
dec
xor
sub
leave
mov
ja
lock
pop
add
mov
pop
push
jmp
movsl
pop
sub
mov
stc
add
xor
insb
add
xor
or
xchg
xchg
xchg
add
fs
cmp
out
lret
inc
fs
cs
push
push
pop
adc
inc
jmp
lods
andl
divl
fisubrs
stos
cmp
and
cmpsl
fisttpll
stos
pop
or
outsl
xlat
inc
sbbb
push
dec
aas
scas
xchg
add
dec
sbb
jg
dec
pavgb
ss
cmp
cmpsb
push
xchg
dec
or
ja
cli
mov
in
pop
mov
xor
test
popa
sub
jg
lock
hlt
jecxz
jmp
das
mov
push
fdivr
cmp
mov
daa
cmpsb
jno
dec
dec
push
sar
mov
imul
mov
lea
xchg
fisubrs
popa
aas
jne
rcl
leave
or
mov
sbb
jae
mov
fsubl
mov
pusha
add
sub
cmp
lcall
test
add
out
scas
sbb
add
outsb
faddl
add
fldt
xchg
dec
fwait
mov
pushf
enter
leave
dec
jg
daa
push
pop
adc
cwtl
and
stc
loop
or
fs
jge
jmp
cld
or
andl
jecxz
or
fcomps
or
leave
and
and
mov
sub
jg
pop
je
addl
out
test
add
leave
sbb
or
loop
push
lock
repnz
fistps
js
pop
lcall
mov
dec
pop
out
inc
cmc
loope
mov
in
loopne
or
fstpl
int3
add
adcb
cmc
popa
sbb
mov
lods
dec
push
out
sbb
fstl
stos
inc
lea
icebp
mul
jnp
xor
sub
insb
les
sbb
aam
dec
loopne
out
pop
rolb
mov
xor
pushf
or
mov
add
inc
shlb
jnp
insl
or
mov
cmpl
lret
inc
dec
dec
add
or
jle
jecxz
in
faddl
int
lret
sbb
xor
dec
push
and
insl
stos
adc
pop
enter
cmp
mov
lahf
pop
in
jno
dec
stos
add
out
push
dec
lods
add
ret
fnstenv
out
sub
arpl
out
mov
inc
mov
shrl
pop
sbb
lock
fidivrs
and
lret
xor
rcrb
and
cwtl
mov
subb
scas
fstl
dec
xorb
scas
pop
in
add
fists
sub
cwtl
push
push
mov
clc
ret
imul
jb
pop
or
inc
ret
fdiv
or
dec
out
xor
inc
xor
xor
jecxz
outsl
pop
das
cmc
cli
adc
test
xor
push
sbb
pusha
sbb
cmpsb
cwtl
loopne,pt
push
xor
dec
sbb
pop
mov
fs
pop
mov
pop
xchg
aam
sahf
sub
inc
jg
mov
loopne
and
cmpsb
stc
pop
mov
xor
xor
mov
jns
mov
pop
cmc
in
mov
sub
adc
xor
push
dec
add
sti
loopne
lret
dec
hlt
mov
mov
xor
pop
add
push
fidivrs
sbb
movsb
in
adc
adc
in
insl
cmp
mov
mov
xchg
adc
mov
mov
mov
sbb
imul
js
test
ljmp
bound
cmp
ss
xchg
push
cwtl
test
cs
stos
add
inc
leave
fmull
and
mov
clc
ljmp
pop
lods
push
mov
fs
insb
mov
test
pop
fsubr
std
enter
xchg
ljmp
sub
inc
jge
lcall
loope
xchg
cmp
rorb
inc
lret
sarl
shrl
in
push
push
inc
jb
dec
pop
cltd
icebp
and
lods
adc
mov
mov
shrb
fstpl
mov
push
popf
and
pop
jl
rorb
mov
push
in
inc
stc
mov
pop
pop
pop
popa
outsl
lea
pop
cmpsl
sbb
cmp
lea
cmc
fmuls
div
xchg
les
pusha
add
adc
pop
sub
aaa
sub
sti
adc
inc
jmp
ret
cli
cmpsl
popa
jae
mov
push
mov
push
jo
cmp
pusha
mov
in
ret
add
push
loop
jbe
lcall
rorl
cli
inc
mov
arpl
lods
mov
aas
mov
or
fwait
add
jge
adcb
add
xchg
push
sbb
mov
cmp
sbb
xor
lahf
ljmp
in
cmp
sub
paddb
dec
inc
mov
roll
insb
nop
movsb
movsb
into
and
inc
cli
sbb
scas
daa
xor
push
inc
cmp
jle
loope
xchg
stos
test
xchg
mov
adc
pop
mov
data16
lret
adc
sub
mov
enter
nop
cs
push
jbe
adc
lret
sbb
add
mov
rcrb
fwait
mull
fdivrs
and
ficoms
dec
rcll
nop
aaa
cmp
pop
outsl
adc
dec
mov
aas
in
and
add
sub
jge
mov
push
and
pop
ret
shrb
js
notl
hlt
inc
into
pop
xor
push
xchg
pop
lods
ja
pop
push
js
or
jle
mov
mov
xorl
jns
js
sbbl
dec
xor
or
aad
and
movups
out
inc
and
movsb
ret
inc
push
jb
dec
cmc
ret
sbb
xchg
xchg
xchg
inc
sarl
sbb
sahf
ja
xchg
inc
cmp
mov
jp
out
push
sarb
add
frstor
jecxz
gs
popa
mov
jl
or
push
outsl
xchg
push
addl
push
push
rcll
xchg
rcll
cmpsl
fcoml
call
dec
sbb
sub
data16
je
sub
inc
call
add
lret
push
mov
mov
add
aad
push
add
nop
mov
cmp
insl
movsb
in
dec
jecxz
inc
mulb
fnsave
mov
pop
adc
dec
jno
insb
fiadds
jmp
addr16
sub
stc
xchg
ja
outsb
cmp
push
dec
cli
add
dec
inc
xchg
pop
insb
push
std
add
pop
call
subl
push
in
jnp
stc
arpl
xchg
iret
cmp
xor
cli
lods
pop
fldenv
ds
adc
cmp
jmp
loope
out
test
or
sub
lock
dec
xchg
or
xor
mov
ret
sub
stos
mov
add
push
inc
jg
and
je
dec
pop
mov
icebp
inc
outsb
sti
imul
and
dec
stc
xchg
inc
mov
iret
push
icebp
or
jb
push
xlat
dec
lock
lock
adc
mov
jo
push
jge
pop
adc
adc
pusha
push
rolb
aaa
loope
ja
push
andb
jbe
outsl
fldenv
sahf
mov
inc
mov
scas
jg
ficoml
in
jle
xchg
and
nop
mov
push
jae
xchg
scas
mov
movsb
daa
pop
sub
xchg
clc
popf
or
sub
aas
mov
add
stos
pop
fwait
dec
lods
arpl
mov
pop
jmp
push
push
add
pop
aad
xchg
mov
pop
add
out
pop
imul
std
je
out
sbbb
xorb
sub
push
mov
push
push
scas
movsb
cmp
xor
aad
xlat
out
in
out
cmp
inc
test
xor
inc
push
int
jl
mov
xchg
cmp
out
stc
cmp
adc
inc
mov
push
ret
es
cwtl
dec
pop
jmp
add
inc
iret
fnop
rolb
leave
push
pushf
mov
in
xor
xchg
rolb
sub
sub
sub
add
fs
lret
inc
loopne
ffree
int3
das
imul
cmp
fwait
and
xor
and
mov
loopne
push
in
ja
lods
xor
or
jmp
aad
lods
in
shl
dec
inc
das
lret
sub
sbb
push
jg
mov
xor
adc
add
in
cmp
outsl
mov
xchg
cmpsb
sub
add
mov
mul
divb
jb
mov
imul
iret
lods
shrb
push
jne
ja
sub
repz
sub
mov
inc
push
cli
insl
repz
lret
or
and
jle
mov
paddw
pop
push
fisubs
jns
test
testl
pop
ds
fstpl
pop
lcall
xchg
lods
movb
sbb
xchg
fwait
jo
inc
push
std
ret
addr16
popa
inc
in
sub
addl
adcb
mov
cmp
lea
stos
add
sub
and
in
adc
dec
icebp
mov
in
and
inc
fwait
pop
aad
mov
pop
dec
cmp
or
loop
adc
mov
in
movsb
fcmovne
or
frstor
sbb
dec
sbb
pop
dec
cmp
pop
sub
leave
popa
lret
pushf
pop
gs
inc
mov
jbe
adc
mov
cmp
or
xor
and
dec
dec
subb
adc
pop
int3
fbstp
xor
fisubrl
mov
movsb
lret
subl
pop
sub
rol
dec
fildl
push
lcall
out
lods
scas
mov
xor
stos
or
or
adc
movsl
dec
xor
ret
or
adc
scas
rclb
and
or
xchg
cmp
pop
push
mov
test
loop
xchg
enter
sbbl
popf
hlt
mov
outsb
pop
sbbb
xchg
iret
subps
loopne
outsb
mov
mulb
and
gs
inc
mov
or
loopne
mov
xchg
add
inc
mov
xlat
int3
pushf
pop
inc
xor
cmc
cmc
sub
dec
pop
test
jbe
or
imul
and
add
fs
cli
jmp
insb
sbbb
cmp
jmp
inc
add
push
push
or
add
sub
icebp
ret
cs
mov
repnz
andb
dec
pop
jne
xchg
pop
test
out
ret
sbb
push
dec
cld
fnstenv
aam
inc
inc
jmp
mov
packsswb
mov
dec
in
lret
and
push
fisttps
mov
and
xor
and
or
xor
mov
repz
xchg
cmpsb
sub
call
into
cmp
xorl
sbb
xor
push
jp
aas
jo
je
mov
push
lods
inc
cltd
js
and
mov
scas
add
test
cmp
outsb
icebp
out
sbbb
iret
push
loop
std
es
xor
imul
bound
push
pop
imul
mov
pop
addr16
xor
int3
and
std
mov
adc
lock
xchg
fs
mov
jl
sti
mov
push
adcl
int3
insl
xor
xor
into
cmp
inc
sbb
sbb
outsl
out
rorl
fnstcw
mov
xor
lds
les
xor
shrb
cmp
clc
les
call
pop
aam
loopne
and
inc
iret
cmp
inc
add
mov
addr16
xor
in
and
sti
iret
jne
sbb
cmpsb
imul
push
outsb
fst
mov
loop
outsl
mov
cli
mov
imul
push
lahf
pop
pushf
or
or
lcall
rorl
push
imul
mov
fs
ds
mov
add
ja
sbb
xchg
fsts
sub
pop
pusha
rcll
pop
scas
cwtl
inc
loopne
in
adc
jo
xchg
cmp
ret
mov
and
dec
testl
fisubrs
data16
rolb
push
pushf
jl
xchg
mov
pop
pop
sbb
cmp
pop
fidivs
jg
xorb
pop
inc
fiadds
in
aam
inc
cmp
fs
adc
mov
add
out
insb
out
mov
inc
or
mov
lea
loope
cld
pushl
icebp
xor
inc
aas
push
sub
xor
idiv
jge
adc
scas
inc
nop
or
fiaddl
sub
jnp
repz
adc
ss
sub
test
fdivrl
mov
loop
jp
popl
xlat
lea
or
adcl
scas
sbb
mov
pusha
xor
loop
pop
dec
lret
sub
jg
or
sbb
cmp
add
mov
pushf
bound
dec
adc
sub
gs
lods
jle
push
leave
xor
shll
rorl
jnp
pop
jns
cltd
sbb
fwait
cltd
stc
outsl
js
xor
jmp
jne
push
add
pop
jae
icebp
sti
daa
stos
in
jbe
push
jmp
jb
inc
xchg
jg
lahf
xor
je
out
or
jmp
push
fistl
enter
mov
push
push
das
mov
xchg
xchg
cmp
iret
jg
jmp
stos
push
aam
push
push
adc
cld
icebp
push
lds
out
incl
add
and
mov
xchg
addr16
inc
cwtl
arpl
sub
nop
xchg
inc
xor
out
sub
repz
pop
pushf
data16
cmp
notb
outsl
test
mov
pop
and
fisttps
call
or
clc
lcall
push
insb
xor
xchg
pop
pop
sbb
push
adc
aas
fmuls
cmp
lret
repnz
xchg
dec
loope
out
out
push
out
pop
icebp
mov
inc
int
lds
pop
inc
push
mov
push
enter
mov
addr16
xor
cmpb
jle
shlb
hlt
test
pop
pop
repz
rcrb
xor
mov
ja
mov
or
pop
inc
add
mov
inc
jp
enter
sub
sbb
pop
sub
jmp
jmp
das
push
mov
mov
push
lea
mov
add
fldl
jge
xor
inc
rol
sar
loop
scas
jecxz
imul
cmp
cmpsb
cs
mov
ss
jmp
xor
in
jne
jne
push
rol
out
cmc
insl
xlat
add
je
loop
push
mov
out
push
lock
cmp
push
popa
lcall
aaa
clc
arpl
inc
out
ds
lea
add
adc
je
mov
or
stos
rorl
nop
adc
test
xor
and
sahf
inc
pop
in
imul
pop
gs
lods
xchg
sbb
add
xor
inc
push
jge
decb
sub
push
enter
jge
dec
test
jo
inc
je
in
outsb
mov
movsl
insl
pusha
inc
or
pushf
je
fbstp
and
push
sahf
xor
jle
adc
inc
xchg
mov
cmp
xchg
jns
arpl
add
push
cli
cld
adc
adc
pop
add
pop
mov
insb
outsl
cmc
add
dec
mov
fwait
pop
pop
xchg
push
aad
mov
adc
inc
and
lea
jo
mov
mov
add
scas
jne
cmp
int3
jne
loop
cmp
pop
jns
and
xor
pop
je
xor
jnp
mov
sahf
ljmp
jnp
je
mov
sbb
dec
cwtl
mov
movsl
testb
stc
cmp
js
push
dec
sub
leave
mov
push
xchg
mov
add
insb
loope
call
mov
les
sahf
mov
out
data16
lcall
mov
dec
dec
inc
pop
or
sub
iret
lahf
mov
xor
or
cmp
pop
clc
mov
pop
les
daa
popa
mov
xchg
inc
les
aam
mov
mov
cmp
leave
testl
mov
dec
pusha
fstpt
imul
dec
fwait
mov
pop
call
sahf
bswap
and
adc
cmpsb
push
mov
test
leave
gs
sbbl
cmpsb
movb
bound
std
sti
outsl
addb
fisttps
adc
in
pop
fucomi
std
ja
inc
pop
cwtl
mov
gs
mov
leave
ds
xor
push
lret
cmp
cmp
je
xor
cmpb
ja
jmp
inc
cld
cwtl
in
cmpsb
adcl
lret
cld
xchg
or
clc
popf
mov
inc
cmpsl
repz
pop
scas
andb
add
jns
sahf
ret
cltd
push
xchg
arpl
or
push
jb
or
cmp
pusha
rorl
and
mov
cmp
or
mov
pop
call
jne
push
lret
sahf
and
sbb
mov
lods
mov
outsl
negl
inc
mov
lahf
jl
cld
sti
ret
mov
xchg
pop
lds
jl
mov
sahf
cmpsl
pushf
mov
mov
mov
in
ss
jo
lahf
iret
xchg
push
and
pop
repz
movsl
in
pushf
pop
test
aad
cmpsb
pop
rolb
mov
pushf
test
jo
sub
cmp
dec
xor
jg
mov
pop
jp
ja
sub
ds
sti
xlat
jle
jns
dec
jne
add
roll
mov
fnstcw
dec
test
push
mov
das
dec
mov
pop
add
cmpsb
sub
out
les
mov
xor
lds
cmpsl
jmp
push
pop
mov
pop
cltd
aam
mov
movsl
jae
imul
sti
mov
ds
pop
das
xor
push
pop
lret
push
mov
adc
nop
jb
and
sub
cmp
cld
jb
nop
dec
cld
xor
dec
movsl
out
rcr
inc
add
mov
sbb
xor
sub
inc
pop
pop
aad
sbb
lahf
out
hlt
iret
shll
stc
adc
lcall
insb
mov
sub
fldt
jo
sub
cmp
sbb
mov
cmp
mov
mov
les
and
js
or
cs
jae
pop
dec
les
shrb
dec
ret
int
orl
fdivp
sbb
pop
dec
jg
leave
test
mov
fdivrl
sub
filds
mov
push
aad
cmp
pusha
pop
add
sub
repnz
xchg
xchg
pop
push
jg
sbb
stos
leave
sarb
imul
test
add
adc
mov
add
sbb
dec
cld
sahf
jg
leave
in
push
insb
arpl
add
inc
cmpsb
inc
pop
xchg
scas
and
repz
pop
dec
mov
hlt
sarl
std
mov
push
xorb
cmc
sbb
add
icebp
stc
jne
add
xor
gs
pop
jecxz
sarb
cs
insb
sbb
test
mov
add
lds
adc
test
add
mov
ret
out
adc
sub
rcrl
stc
jle
lds
fistpl
and
scas
xchg
xchg
xchg
iret
xchg
sbb
xor
rcrb
adc
faddp
push
aam
xor
fcmovnbe
sbb
shll
fisttpll
scas
or
out
imul
out
dec
inc
sub
cmpsl
add
xchg
fisttps
and
push
add
xchg
mov
ds
xchg
sub
out
dec
clc
sbb
test
pop
xchg
ret
add
pop
rcll
fimull
pop
jbe
add
inc
fnstsw
push
xor
out
xchg
cli
xchg
add
mov
in
inc
orl
in
jae
sub
jbe
out
and
push
push
test
pop
xchg
mov
push
jo
rolb
mov
xchg
inc
popf
pop
xor
and
sub
jg
call
xchg
inc
xchg
dec
xchg
arpl
movsl
cmp
clc
jmp
filds
aad
das
movb
data16
pop
and
int3
mov
xchg
std
jp
push
inc
add
test
push
inc
insl
hlt
dec
in
sub
rcrb
sbb
jle
dec
shll
xchg
push
mov
cmc
ret
push
jge
adc
cmpsl
mull
fisubrs
inc
dec
fildll
jge
pop
cmp
sbb
jae
decb
add
cmp
in
lea
pop
cmc
or
frstor
inc
sbb
push
test
call
push
add
int
ficoms
out
push
movsb
pop
loope
stos
cmp
mov
std
insl
xchg
xchg
mov
xlat
test
aas
push
mov
shll
jg
jmp
inc
insl
cmpsb
sbb
inc
mov
mov
inc
sbb
mov
or
push
xor
push
inc
cmp
daa
jbe
xchg
jne
jbe
pop
cmp
and
cmp
cmp
in
out
out
cmpsl
dec
js
dec
das
in
cmpl
push
fisubrs
inc
sub
push
inc
addr16
dec
cmp
mov
aaa
adc
mov
das
or
aad
bound
leave
pop
addr16
add
pop
push
cmc
mov
push
cli
out
push
out
fimull
xchg
cmp
sub
sub
mov
xor
repz
mov
addl
xor
mov
inc
rolb
int3
push
out
add
mov
bound
pop
cli
dec
jae
add
outsl
mov
add
jmp
lret
inc
and
pop
sub
cmp
sub
push
push
into
lods
sti
jbe
icebp
jo
daa
cld
xchg
inc
stc
xor
jle
pmullw
mov
pop
xor
push
inc
push
xchg
push
nop
push
mov
les
mov
aad
lea
loopne
mov
push
rclb
push
jmp
push
lock
icebp
pop
insb
data16
lahf
negb
std
bnd
mov
stos
push
test
das
mov
xchg
and
push
inc
data16
in
imull
adc
decb
mov
cmp
cmp
jg
aas
out
mov
push
xchg
das
xchg
sub
jae
out
ret
mov
sub
in
dec
das
rcr
mov
clc
or
sbb
jb
scas
inc
pop
sub
pusha
ficoms
cmp
mov
movsl
push
inc
adc
and
mov
sahf
cmpsl
int3
call
shrl
xchg
in
into
xor
add
and
pop
inc
xchg
adc
cmp
jae
mulb
cmpsl
bound
enter
daa
jnp
and
dec
rcrb
mov
pop
popa
jns
mov
and
dec
fs
test
cmp
add
fistps
mov
jle
push
int
movsl
sti
repz
int
push
mov
mov
push
mov
and
push
neg
or
ret
mov
inc
test
mov
shll
sub
les
in
ret
push
test
sub
clc
fnstsw
push
call
sbb
data16
jl
arpl
mov
out
aas
jo
ret
sbb
notb
mov
in
or
jle
push
mov
lahf
out
jle
adc
lret
jge
int
lahf
mov
fldt
jnp
test
std
sbb
mov
mov
jge
shrl
xchg
imull
cld
cmp
mov
adc
arpl
xchg
pop
mov
test
fdivl
test
push
fisttpl
mov
jmpw
cmp
and
xor
or
fldcw
cmpsb
pop
stos
or
insb
jnp
clc
or
cli
mov
test
lock
out
mov
add
cvtpi2ps
push
mov
adc
gs
jns
cmp
movsl
xor
mov
mov
pop
jb
aas
add
pop
lahf
push
jbe
mov
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
sub
mov
and
and
or
add
leave
or
sub
and
or
or
push
mov
ret
dec
xor
push
and
and
add
or
mov
push
push
and
mov
xor
or
call
or
and
push
add
inc
and
mov
call
je
jmp
sub
sub
sub
ret
or
sub
push
xor
xor
xor
and
push
mov
mov
push
or
xor
add
push
and
push
call
sub
add
and
xor
mov
or
add
xchg
mov
and
mov
shr
or
and
mov
sub
lods
sub
and
mov
sub
and
add
xor
and
dec
inc
and
or
mov
xor
or
inc
dec
mov
mov
mov
mov
jne
or
pop
inc
or
xor
pop
add
pop
jmp
