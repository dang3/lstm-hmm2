sbb
add
mov
sbb
push
lret
ss
aad
into
inc
mov
outsb
in
push
sub
aam
frstor
negb
lret
nop
mov
popf
sub
jne
aaa
int
mov
fisttps
in
xchg
and
daa
fcomp
sbb
jmp
mov
aad
mov
add
push
lret
in
mov
pop
pusha
mov
cmp
and
das
dec
call
inc
arpl
daa
pop
mov
jmp
clc
out
adc
sub
xchg
adc
rcrl
mov
sti
in
mov
inc
and
out
adc
add
stc
cmp
sbb
xor
adc
or
or
pop
sub
fstpt
pop
xor
ljmp
outsl
icebp
dec
push
cmp
ret
mov
mov
fdivs
movsb
inc
add
mov
aaa
cli
out
push
mov
xchg
or
cmp
les
aas
daa
outsb
test
mov
xlat
mov
mov
dec
out
inc
int
push
gs
inc
adc
arpl
shl
shlb
jmp
sbb
push
int
out
sbb
push
jbe
jo
inc
cld
popl
sti
jl
je
aad
lea
and
or
cmp
mov
mov
xacquire
push
in
fcomip
mov
fadds
jo
add
and
out
jge
push
ret
std
add
dec
mov
pushf
cld
sarb
xor
outsl
mov
add
mov
into
icebp
adc
int3
dec
loope
sbb
pop
jge
in
dec
pop
into
dec
push
or
mov
xchg
pop
xchg
in
pop
arpl
mov
dec
popa
int
out
jne
and
int
adc
pop
insb
add
push
jle
inc
mov
subb
or
sbb
pop
int
mov
lahf
sub
mov
mov
sub
pop
es
mov
sbb
add
sub
xchg
negb
and
push
pop
lcall
roll
fstl
into
test
call
or
test
sub
xchg
aam
cmp
or
pop
mov
and
sub
call
mov
xchg
lahf
and
jl
mov
cmpsl
addr16
js
xor
nop
les
pushf
pop
pop
jnp
adc
enter
fsubr
ficoms
cwtd
mov
mov
cmp
aas
sub
addb
sub
int3
push
repnz
xor
cmpsl
jmp
mov
lea
cmp
mov
jo
arpl
push
cld
adc
inc
mov
adc
pop
shl
or
xor
shlb
repnz
jns
out
mov
xor
repnz
sub
sub
pop
mov
enter
test
test
adc
sbbb
xchg
cmp
inc
insl
xchg
cmp
gs
repnz
int3
inc
aas
ss
cmp
sub
mov
daa
and
xchg
jb
sahf
pop
shrb
pop
mov
sub
leave
cmpsl
popa
pop
in
or
pop
xor
out
xlat
xchg
subb
pop
mov
jecxz,pt
mov
out
int3
and
adc
hlt
out
mov
mov
mov
cs
sub
mov
cmp
ja
push
les
ljmp
ret
jb
jge
push
icebp
cltd
in
hlt
popf
push
mov
jno
ljmp
inc
xor
ss
mov
xor
out
ljmp
cli
fistpl
jge
rorb
inc
mov
xorb
fistps
ds
mov
test
lock
dec
rolb
add
adc
xor
dec
outsb
mov
cltd
movsl
decb
inc
fnstenv
lret
sbb
mov
push
pop
hlt
cmp
icebp
mov
ret
add
dec
push
clc
cmp
or
sub
sub
lods
mov
push
insb
and
lret
cmp
inc
mov
or
add
mov
xor
rcl
fidivl
or
mov
dec
inc
orl
aaa
lret
add
mov
nop
pop
lods
inc
mov
aam
mov
stos
xchg
or
jo
jge
inc
mov
sub
xchg
dec
divps
sbb
push
or
fxtract
je
js
adc
jmp
xor
cwtl
mov
mov
sub
lret
sub
lahf
mov
jge
lcall
btc
xchg
out
cli
and
mov
jp,pt
fidivl
push
fidivl
sub
push
sbb
mov
imul
push
inc
push
xor
lahf
sbb
mov
cmp
sbb
ficompl
sahf
push
in
cmp
jb
scas
jb
nop
and
iret
mov
mov
out
int3
xor
test
xchg
in
cmp
and
add
cmp
mov
push
imul
or
imul
call
cmpl
test
mov
fsubrl
das
inc
out
xor
stos
jno
pop
push
jmp
mov
movsl
daa
sub
fadds
jg
adc
jo
pusha
ret
or
pusha
cwtl
shrl
cli
pop
dec
je
hlt
ljmp
shl
addr16
xchg
adc
dec
mov
dec
iret
mov
les
and
xchg
jle
mov
nop
pop
jmp
dec
pop
test
dec
imul
dec
pop
imul
jmp
ds
push
cltd
mov
jae
add
fs
mov
push
lcall
or
jnp
dec
stos
lds
enter
or
call
scas
fs
jae
xchg
mov
jo
lcall
adc
mov
dec
movsb
pop
xchg
lcall
mov
adc
sub
mov
test
mov
adc
int3
mov
cmp
cmp
xlat
push
outsb
int3
outsl
ret
in
push
jg
sarb
pusha
jo
add
ljmp
or
mov
paddsb
fwait
sbb
jmp
lods
or
fldl
clc
inc
jnp
xchg
xor
pop
aam
dec
add
test
inc
fisubrl
cltd
or
popf
mov
xchg
pusha
xor
dec
loope
in
jmp
xchg
lds
or
popa
addr16
cmovge
and
mov
cvtdq2ps
dec
pop
xchg
mov
out
call
leave
movsb
cmp
cmp
add
add
xchg
sbb
jbe
and
fwait
sbb
fdivrs
lahf
sub
call
pusha
lahf
out
sbb
daa
mov
cmpsb
mov
pop
mov
pop
pcmpeqd
testb
fsubrl
fldt
aad
gs
in
out
pop
filds
pop
push
xor
sbb
out
mov
mov
xor
mov
xchg
jae
out
push
in
mov
lea
mov
fsubrs
repnz
fdivrs
jb
daa
js
outsb
jl
sbb
jge
inc
pop
lds
in
repnz
hlt
cmpsl
test
dec
bnd
rolb
jle
adcb
mov
mov
and
push
stc
cmc
adc
mov
pop
pop
mov
mov
mov
fisubrl
sbb
cli
jg
sbb
ret
xor
cmp
inc
ds
push
jg
out
pop
es
cmp
sub
jns
cmp
xchg
lahf
adcb
test
mov
mov
test
cmp
test
sub
push
push
cmc
cmp
popf
inc
jno
jnp
out
mov
ficoms
sbb
push
popf
jbe
fsubr
jnp
jno
repz
sahf
inc
pushf
mov
out
xor
xor
test
lahf
adc
das
sbb
mov
mov
ds
pop
das
scas
and
mov
out
push
lods
pop
push
pop
daa
loop
pop
jmp
cwtl
adc
mov
xor
xor
pop
test
mov
pop
and
repz
cli
pop
nop
in
add
push
pop
add
clc
divb
fwait
cmc
cmp
xor
sbb
ja
cld
movswl
inc
jo
movb
test
pusha
mov
lods
xchg
inc
sbb
xchg
into
jmp
daa
js
or
iret
mov
stos
movsl
mov
pop
mov
sub
movsb
or
dec
pop
xchg
outsb
dec
cmpsb
repz
push
ficompl
cmpsb
cmp
jge
jge
cld
dec
mov
cmp
push
test
imul
pop
or
xor
sbb
xchg
outsl
insb
adc
out
loopnew
sbbl
out
jns
sub
rcrl
arpl
aad
cmp
dec
inc
xor
dec
pslld
push
jge
mov
ja
xor
dec
scas
lret
stos
jo
add
shlb
or
scas
xorb
jecxz
aas
pop
cld
addr16
mov
sub
dec
in
and
clc
sbb
mov
dec
addl
shl
dec
hlt
mov
lods
jne
mov
pushf
and
mov
out
fnstenv
ja
repnz
xchg
test
push
mov
cs
dec
jl
sbb
loopne
fnsave
mov
sahf
push
mov
sbb
xchg
and
jp
sbb
push
fidivs
add
insb
jl
push
mov
push
cmp
adcl
push
or
movsl
jge
repz
jl
and
jecxz
popf
push
inc
cmpb
int3
fs
lock
lahf
int
xor
mov
xor
shrb
sub
scas
ds
lods
pop
cmpsb
fsubp
or
push
movsb
xchg
or
lods
std
in
jbe
negb
call
fs
jnp
stos
inc
jle
push
mov
sbb
outsb
xchg
movsl
addr16
cmpb
call
lods
popa
out
dec
or
dec
xor
add
mov
stos
push
mov
xchg
mov
push
mov
or
mov
cwtl
mov
ret
insl
jne
xchg
push
sub
dec
adc
aaa
xor
fcompl
mov
dec
repnz
cmp
lretw
and
aas
std
jno
stc
insb
and
cwtl
adc
movb
cmc
or
rorb
jmp
jge
push
inc
lcall
gs
jns
sub
pop
adc
xchg
stos
fwait
or
movsl
lods
popa
mov
mov
orb
xchg
push
loopne
pop
jo
shll
movsl
pop
dec
in
popf
and
sub
ret
mov
dec
mov
outsb
stos
jge
lret
dec
cmp
out
add
jecxz
or
and
fildll
test
dec
data16
cmp
hlt
xchg
aam
clc
mov
push
and
mov
out
mov
push
sti
out
mov
ret
cld
bound
add
rcll
add
lcall
push
int3
and
jmp
imul
cltd
es
cmp
sbb
add
pop
lods
andb
mov
sbb
mov
leave
jne
loopne
test
xchg
imul
imul
fstl
sbbl
xor
sub
insl
shlb
jecxz,pn
push
lods
sub
mov
movsb
cmp
mov
push
ds
ds
arpl
fistpll
push
xchg
xchg
sbb
jmp
mov
movb
gs
sub
movl
loopne
and
mov
pop
fwait
pop
push
lret
or
popf
lea
cmpb
cmp
fs
and
cmp
mov
jne
push
imul
dec
repz
mov
inc
test
mov
push
mov
xor
sti
sub
mov
adc
xchg
es
push
mov
pop
jg
and
xor
cmp
mov
push
and
add
mov
js
xor
cli
sbb
xor
loope
pusha
sub
push
repnz
sbbl
and
imul
cwtl
lods
sbb
sbb
mov
push
pop
rcrb
xor
add
popf
mov
push
fsubl
mov
clc
std
fisubrl
fisubs
cmp
imul
movsb
ss
adc
cmc
out
jo
jp
xchg
pop
or
push
cmp
inc
adc
mov
lea
sub
pop
push
adc
xchg
fsubrp
mov
cltd
jp
mov
ret
adc
out
insb
popa
es
push
pop
insl
cs
dec
push
sub
mov
push
cltd
inc
pop
cmp
scas
aam
loop
xchg
mov
iret
push
dec
pop
test
jp
pop
sub
fsts
test
inc
test
lahf
xchg
addr16
pushf
mov
mov
xor
xchg
int3
sbb
mov
popa
loope
outsb
addb
addr16
cmp
add
popf
pop
nop
stos
mov
mov
movsb
mov
xchg
pop
and
out
push
imul
push
dec
scas
cmpsb
aad
frstor
xchg
into
outsl
sub
push
insb
and
mov
xchg
or
cli
mov
or
cmc
push
xor
cmp
sbb
jecxz
push
or
ljmp
inc
mov
mov
jge
pop
adc
data16
ss
pop
in
jge
add
ret
ret
and
inc
add
ljmp
or
adc
mov
jmp
push
sub
in
in
pop
repz
sub
add
push
les
fistl
insl
push
dec
shll
cli
xorb
xchg
push
push
enter
sub
mov
add
sbb
fiaddl
xorl
push
lock
cwtl
clc
jp
xchg
pusha
out
push
inc
push
lock
dec
sub
clc
in
pop
jnp
dec
sahf
jb
inc
sub
push
int3
mov
lret
icebp
bound
mov
push
outsb
repnz
and
ret
sub
dec
push
arpl
cmp
mov
loopne
icebp
sub
xchg
cmp
mov
imul
and
mov
dec
ja
into
xchg
lret
mov
les
adc
imul
popf
stos
hlt
inc
pop
lods
fimull
roll
leave
mov
sub
pop
cwtl
cwtl
pushf
test
mul
dec
lret
add
adc
fs
jle
fscale
jno
dec
gs
shr
inc
pop
pop
xchg
lret
or
aas
in
pop
pop
and
cmpsl
push
fldenv
adc
testb
ds
xchg
xchg
ja
add
sbb
subl
fwait
lret
lods
xchg
imul
movsb
vpsubq
push
imul
or
daa
push
sub
mov
and
push
push
jl
mov
pop
mov
pop
inc
xchg
mov
out
aaa
jbe
jne
inc
jb
insl
xor
mov
bnd
data16
xchg
sbb
jg
sub
dec
dec
fstps
cmp
popf
test
xchg
dec
leave
leave
jl
cmc
ret
arpl
cld
test
sbb
lock
xor
and
jmp
mov
mov
leave
sub
jecxz
mov
imul
xchg
mov
jecxz
xchg
add
js
xor
stos
sbb
inc
call
out
rorl
push
or
test
mov
mov
aas
clc
fs
fstpt
cmp
out
push
daa
loopne
mov
xor
fidivl
cmpsb
push
popf
ss
xor
or
popa
frstor
push
push
push
imul
jns
fmuls
loopne
lcall
mov
sbbl
mov
xchg
daa
pop
pop
ret
mov
jbe
and
pop
out
jge
mov
out
outsb
insb
clc
in
pop
loop
xor
and
lods
xchg
jnp
push
icebp
pop
add
cld
add
negl
sub
jge
subl
js
lds
mov
ja
mov
cltd
cmp
push
cli
mov
jl
int
sub
aaa
sbb
aam
imul
jmp
scas
push
es
je
jge
ss
inc
movsl
push
leave
mov
or
outsl
jae
dec
cli
sbb
push
xor
std
inc
inc
mov
je
mov
insl
cmpsl
sub
mov
mov
loope
lahf
and
inc
xor
leave
jbe
mov
inc
pop
jle
mov
and
dec
das
push
push
push
dec
sti
pop
mov
in
inc
movsb
jne
es
in
aam
fstps
fnstsw
mov
push
test
shll
jae
ljmp
outsb
loop
ss
cmpb
call
mov
out
shlb
sbb
mov
std
ret
cmc
sbb
mov
inc
stos
scas
cmpsl
inc
mov
test
xchg
sub
cld
jae
sub
push
out
in
xchg
push
in
sbbb
dec
sbb
ljmp
dec
jno
psraw
nop
sbb
ss
mov
outsb
call
push
iret
mov
xchg
mov
pop
in
jns
push
jle
push
pop
int
loopne
jl
fld
mov
sub
inc
enter
inc
mulb
mov
lock
scas
enter
fnstenv
jne
xchg
and
cmc
aam
and
shr
add
push
lret
popf
mov
mov
pop
mov
out
xchg
or
push
shl
popa
xor
scas
xor
mov
int
pop
leave
imul
add
enter
dec
aad
cmpsl
sub
lea
mov
and
and
adc
dec
lret
push
cmp
mov
insl
cmp
pusha
aad
repnz
jecxz
cmp
jne
out
xor
data16
sub
shrb
data16
mov
xor
cmp
ret
push
and
dec
mov
jbe
push
addr16
mov
fadd
rcl
xor
cmp
adc
push
outsl
sahf
mov
jno
and
aas
pop
jecxz
or
inc
ret
aad
push
cmp
pop
mov
mov
testl
lock
popa
xchg
push
into
loop
div
cltd
pop
stc
adc
ret
popa
cmp
push
jle
inc
int
into
sbb
repz
rcrl
in
or
popa
mov
sub
arpl
pop
gs
jp
mov
lods
xor
test
xor
dec
lahf
insl
lahf
loop
mov
pop
imul
push
fcomip
dec
inc
and
xchg
xchg
push
and
je
mov
scas
or
add
or
sarl
mov
imull
mov
into
incl
cmp
out
jle
mov
mov
inc
xchg
fucomp
xchg
insl
inc
popf
cmp
cmp
mov
xor
xor
cs
sbb
jns
mov
push
cli
lret
addr16
in
mov
adc
mov
inc
adc
mov
pop
cmpl
inc
insl
xor
cmp
mov
inc
inc
inc
repnz
insl
pop
mov
cmp
push
mov
jne
movsb
stos
in
push
frstpm(287
mov
movsb
dec
in
jbe
pop
sbb
addr16
push
or
inc
clc
fcmovu
call
mov
jl
jae
jle
pop
lea
sub
cmp
mov
sbb
out
and
sbb
daa
mov
in
dec
inc
int3
rorl
cli
test
mov
mov
ljmp
jle
or
aas
lock
jp
mov
dec
in
or
arpl
aaa
test
jge
lea
adc
xchg
imul
mov
ss
test
lahf
or
dec
pop
jnp
push
cwtl
push
rorl
sbb
js
pop
dec
fiaddl
push
or
xorl
xor
in
dec
and
or
push
pusha
daa
xor
fwait
cmpsb
xor
sub
repz
add
push
jg
xchg
lahf
pop
pop
lea
push
mov
outsl
push
jnp
daa
mov
cmpsb
into
in
adc
in
mov
clc
mov
mov
cmp
pop
xor
adc
jnp
xchg
les
mov
inc
xchg
sahf
jecxz
mov
loopne
jns
jl
push
iret
cli
fstps
cmpsl
ja
ss
lea
int3
and
mov
call
outsl
cmp
cmc
xor
gs
cmp
sbbl
lea
jns
dec
shlb
decb
cmp
ss
mov
test
test
fidivl
inc
loop
sbb
mov
push
jb
push
inc
mov
shll
test
ja
dec
rol
pop
ljmp
jge
lds
clc
fdivrp
cmp
movsb
rorl
pop
xchg
mov
mov
ror
pop
push
and
xchg
pop
dec
scas
stc
adc
cmp
fldt
ja
addb
pop
sbb
cmp
add
xor
insl
jbe
stos
enter
cmp
adc
xchg
jns
cmc
cmpsl
repnz
fistpl
push
icebp
ja
je
xlat
mov
mov
mov
add
xorb
xor
lock
lcall
push
dec
push
dec
xchg
rclb
cmc
rcl
sbb
repz
data16
cmc
dec
xchg
inc
fwait
add
push
js
push
leave
pop
mov
mov
xor
lds
xor
cmp
and
pop
mov
pop
aas
push
cmc
clc
push
and
rdtsc
jmp
dec
xlat
xchg
mov
push
mov
inc
fadds
shl
cli
jns
mov
pop
cmpsb
fidivrl
out
cmc
cmpsb
sbb
add
add
in
hlt
xchg
or
xchg
push
mov
lock
jl
mov
sbb
sub
mov
loope
in
and
stc
jmp
movsb
ss
mov
mov
js
insb
fidivs
mov
outsb
and
pop
les
cmp
push
ja
stos
sahf
lret
scas
sub
inc
xchg
mov
jb
es
push
jl
xchg
pop
fs
in
scas
movsl
mov
mov
es
and
pop
cmc
jo
aas
out
loope
mov
orb
push
push
and
inc
pop
or
sbb
jecxz
jg
mov
test
mov
je
sahf
add
incl
mov
pavgw
dec
and
in
stc
clc
sbb
inc
lock
and
loope
movsb
fwait
push
dec
and
imul
mov
sub
or
xchg
dec
jle
imul
fimuls
jecxz
xlat
xor
add
mov
mov
cmp
jns
int
mov
xor
jecxz
out
testl
adc
mov
ficoml
inc
pop
cmp
pop
cli
inc
movzbl
lahf
loopne
fisttpl
aad
imul
mov
push
xor
out
xchg
std
mov
mov
mov
sub
xchg
push
xchg
insw
sbb
test
jmp
out
push
lret
sti
repnz
out
movsl
cld
fldcw
push
xchg
outsl
inc
fwait
inc
sub
imul
hlt
movsl
push
dec
in
fdivp
inc
and
dec
inc
cmp
fmuls
cmp
push
push
mov
pop
fimuls
mov
repnz
int
pop
sbbb
mov
popa
add
dec
ret
shrl
sarb
mov
or
pop
pop
sbb
loopne
out
mov
jo
addr16
sbb
movsb
dec
mov
cltd
int3
leave
sarb
sub
xor
es
adc
and
dec
sbb
pop
int3
inc
adc
mov
add
test
mov
lretw
add
pop
xor
inc
push
sahf
jp
cmc
imul
dec
mov
cmp
in
mov
xor
sub
mov
cmp
imul
clc
out
mov
fdiv
mov
pop
dec
cli
mov
arpl
cwtl
lock
lret
push
daa
dec
outsb
jb
pop
hlt
and
xor
pinsrw
cmpsb
int
inc
movsl
cmp
mov
mov
dec
mov
mov
cmc
leave
push
jo
mov
push
cmp
fistpl
stos
fstp
sbb
and
rcrl
imul
xor
xorl
out
jl
xlat
xchg
ret
jge
cmp
loop
leave
add
sub
bound
cmp
test
cmp
lcall
int3
add
leave
adc
push
mov
rolb
sub
or
add
cmp
sbb
shl
xchg
push
nop
fldt
outsl
mov
aam
arpl
push
enter
mov
insl
dec
addr16
or
jns
dec
repz
lds
pop
ficoms
js
mov
inc
test
jl
xor
cs
aas
mov
test
insb
sbb
jb
jns
pop
js
inc
loope
stos
mov
jp
sub
xchg
push
outsl
cmc
shl
cmpsl
pop
aas
adc
jmp
scas
fistpl
xor
adc
inc
adc
aad
mov
test
or
icebp
pop
lea
movsb
pop
popf
psrlq
push
ja
mov
es
fwait
add
jle
mov
pop
adc
mov
shrb
push
jnp
dec
sub
mov
cmpsl
bound
mulb
addr16
ja
mov
add
cmpsl
inc
mov
jp
inc
mov
push
mov
cmp
cld
add
sub
std
test
cmc
test
cmp
sub
or
push
ja
pop
jl
std
xchg
mov
les
imul
data16
and
outsb
cmp
add
and
pop
jo
dec
mov
push
outsb
inc
fldcw
fmuls
aas
repz
cmovp
bound
dec
ret
jne
dec
imul
inc
into
das
push
lods
mov
jge
hlt
scas
sbb
into
dec
icebp
inc
into
loopne
jmp
leave
jbe
ss
cmp
testb
and
fs
mov
and
or
sbb
mov
divb
in
shl
cmpsb
and
sahf
cwtl
mov
dec
or
out
mov
cmp
jno
rcrb
mov
insl
xchg
aam
or
sub
js
xor
mov
mov
sub
test
dec
adc
and
add
lock
jo
or
loop
loop
je
mov
sbb
mov
dec
inc
jp
xor
jcxz,pn
popa
int
xor
mov
push
addr16
stc
mov
or
push
push
pushf
fcoml
push
jno
shlb
popf
divb
vmovupd
lcall
in
xchg
stos
fiaddl
ds
pop
lock
adc
inc
stos
nop
xchg
orb
stc
and
in
jmp
xchg
inc
jne
xor
clc
rcl
sarl
ss
fsubl
pop
push
sti
xchg
sub
cmp
push
lds
jle
lods
es
mov
sbb
xor
push
sti
or
ss
mov
popa
xor
notb
fnstsw
jno
mov
jmp
pop
pop
subb
in
imul
push
imull
xchg
pop
ds
loopne
cwtl
mov
cmp
lock
mov
lret
punpckhdq
inc
aam
jne
je
repnz
mov
mov
mov
xchg
inc
ret
sarb
ret
fbstp
cs
pop
dec
icebp
xchg
faddl
repnz
push
mov
std
aad
cmp
push
jno
mov
mov
push
je
mov
movb
jge
lods
nop
int
jbe
sti
pop
enter
pop
xchg
ret
mov
mov
jno
sub
and
in
repnz
pop
fstl
addb
jmp
daa
lea
std
iret
sbbl
sbb
and
shl
dec
xor
xchg
mov
inc
test
push
ljmp
dec
cwtl
pop
xor
jae
repnz
push
inc
add
xor
scas
cmpsl
inc
ret
shlb
enter
inc
out
idivb
mov
not
movsb
shl
bound
add
les
or
dec
add
push
pushf
es
mov
inc
adc
jl
ljmp
test
mov
shlb
cmpl
or
rorl
add
and
mov
fwait
dec
sbb
push
mov
movsb
push
in
jbe
sbb
mov
xor
adc
and
sub
popa
ja
lds
pop
mov
das
cmpb
mov
inc
out
inc
push
out
in
test
andb
and
jo
fs
cwtl
xor
sarb
cmp
mov
imul
xchg
adc
mov
xchg
adc
jae
cld
pop
xchg
xor
ret
cmp
mov
xchg
mov
and
xchg
cmp
push
mov
jecxz
notrack
in
out
jg
xor
cli
imul
mov
push
inc
xorb
stos
fwait
vpminub
mov
cld
test
das
and
test
js
in
clc
push
fnstenv
mov
inc
pop
push
mov
fcomip
int3
arpl
push
cltd
jns
mov
stc
or
jne
cltd
and
fs
scas
xor
sub
xchg
lret
or
cmp
jbe
ljmp
lods
dec
adcl
mov
lahf
enter
sbb
push
in
fistpll
mov
in
mov
call
mov
pop
mov
hlt
dec
outsb
int3
and
shll
daa
fs
xor
aas
das
xor
mov
pop
nop
sar
push
cli
mov
fcmovnbe
imul
aad
and
xor
mov
cwtl
push
fdivrl
add
fwait
adc
aad
cmp
icebp
mov
mov
mov
inc
in
stc
and
mov
lods
mov
sbb
mov
and
lock
jg
sub
ss
mov
push
xchg
aam
mov
sbb
pop
ret
add
and
pop
pop
rcll
and
and
inc
inc
pop
jg
pop
incl
add
push
stc
aaa
je
and
adc
jne
sub
sbb
sub
sub
in
outsl
cltd
pop
jae
cmp
ljmp
or
adc
pop
inc
test
adc
fnsave
lret
fidivs
aas
mov
jp
call
bound
test
jae
mov
inc
shll
and
mov
jae
movl
loopne
cmp
inc
lods
cmp
out
push
adc
cmp
push
or
repnz
cmp
cwtl
mov
xchg
insl
and
icebp
pop
cmp
mov
and
jb
mov
mov
outsl
repz
repz
test
xchg
jge
pop
cmp
jbe
leave
mov
rcl
adc
ljmp
insl
adc
lret
mov
shr
cwtl
popf
js
xor
scas
scas
addl
lcall
push
pop
dec
cltd
aam
fldcw
and
pusha
addr16
pushl
jb
or
cmpsl
or
pop
hlt
xor
test
lods
inc
pop
test
push
xchg
jp
mov
cmp
sub
sahf
lret
push
fbstp
xchg
xchg
xchg
push
or
out
jp
fldl
les
ja
test
andb
outsl
mov
jecxz
mov
add
cmc
cmpsl
pop
popl
fsubrp
mov
cmc
and
gs
inc
mov
roll
inc
ret
jbe
or
or
dec
loope
and
out
xchg
je
cmp
mulb
std
and
sbb
clc
adc
push
enter
dec
mov
inc
mov
adc
mov
mov
mov
dec
movsl
pop
push
sbb
lods
lds
jg
xor
test
hlt
mov
pop
cli
add
mov
mov
xchg
xchg
and
sbb
mov
xchg
out
addr16
add
cmp
loop
outsb
imulb
push
mov
inc
int3
aad
enter
rcrb
outsl
dec
mov
add
xor
movsl
ret
clc
push
jle
stos
jbe
incb
out
push
mov
push
fmulp
lock
rorb
mov
int
dec
loop
mov
mov
icebp
xchg
imull
mov
xchg
jbe,pn
dec
mov
push
push
repz
ret
sub
fbld
mov
es
rorl
jge
ss
roll
jle
popa
cmp
sub
jmp
sbb
mov
dec
mov
lea
xchg
xor
mov
pop
mov
jae
pop
push
outsb
ljmp
dec
or
rcrl
mov
and
push
dec
movsb
mov
pop
fldl
mov
jnp
rolb
das
sbb
dec
or
popf
pop
divb
pop
jp
iret
in
dec
imul
loop
ret
outsl
add
xor
cmpb
pusha
movsl
push
pusha
mov
push
or
jne
jne
jecxz
dec
bound
imull
mov
popa
sub
outsl
gs
inc
sti
adc
test
adc
inc
daa
cmpsb
xor
ja
sub
inc
xlat
enter
mov
ljmp
icebp
out
mov
pop
xor
shrl
jle
cmp
out
test
cmp
shl
leave
sahf
sti
hlt
imul
inc
je
aaa
in
jmp
sbb
mov
dec
int3
sbb
aam
fstpl
xor
push
decb
incl
mov
push
sub
scas
and
insb
mov
jl
movsl
mov
mov
repnz
cld
cwtl
dec
mov
rol
int3
cmp
stc
dec
in
push
pop
dec
push
fimuls
mov
inc
std
inc
xchg
stos
jg
add
lock
rorb
jbe
stos
push
push
dec
lcall
mov
and
decl
xor
loopne
inc
test
rorb
pushf
imul
push
sbb
ss
push
mov
adc
sub
mov
gs
fsts
ljmp
adc
int3
push
cmpsl
es
sarl
hlt
xor
std
loop
or
add
insb
cmpsl
cmp
jmp
push
fimull
inc
sbb
in
fs
iret
enter
sbb
imul
push
leave
and
leave
push
imul
ret
cmpsb
xchg
sub
in
xchg
arpl
dec
sbb
sbbl
out
xor
dec
dec
push
xchg
in
mulb
lahf
inc
push
sbb
mov
lds
mov
and
pop
mov
push
push
pushl
mov
ficompl
roll
sbb
pop
nop
sbb
and
test
bound
fsts
test
and
cs
fcoml
xchg
pop
jbe
hlt
jl
icebp
or
jg
inc
mov
inc
lods
or
and
loope
decl
mov
push
and
movl
cmp
push
or
imul
lcall
je
lret
or
sbb
sbb
int3
ds
insb
popf
push
adc
out
mov
gs
add
jnp
fs
push
sbb
push
stos
popa
xor
outsb
inc
movb
cmp
imulb
int3
dec
cmpsb
cmp
jno
outsl
hlt
add
sub
inc
daa
pop
sbb
cwtl
add
xor
in
and
adc
push
outsb
cmpsl
push
sbb
ret
xchg
adc
push
cs
sub
jbe
ds
jb
adc
sbb
test
push
ja
imul
jne
mov
mov
jle
mov
mov
insl
mov
and
or
dec
cmpl
xor
lock
inc
adc
fwait
dec
nop
cmc
adc
outsl
jmp
daa
dec
jns
xor
sub
inc
repz
xchg
adc
mov
sub
mov
incb
pop
and
repnz
or
cmp
repz
adc
popa
push
sbb
out
cmp
adc
jl
repz
call
test
nop
jno
and
add
dec
sub
mov
xor
imul
mov
out
adc
loopne
xor
imul
std
sub
adc
movb
sbb
out
xor
das
push
shr
test
inc
and
ds
mov
pusha
mov
xchg
orb
mov
or
pop
addr16
aad
hlt
push
nop
dec
cmc
dec
add
sub
leave
xchg
lret
xlat
pop
push
leave
cmpl
popa
pop
jmp
add
inc
jp
shrb
movsl
mov
dec
inc
inc
jno
mov
jle
push
adc
add
mov
or
dec
pop
mov
cmpsl
or
and
inc
cmp
and
mov
sarb
jmp
add
imul
je
out
cltd
lock
inc
and
rclb
inc
icebp
pop
addb
iret
test
jae
ficoml
lret
stc
cmp
mov
or
inc
dec
subl
inc
filds
add
inc
mov
ja
add
mov
pop
xchg
mov
xchg
gs
cltd
aam
icebp
ret
leave
mov
xchg
xchg
nop
jne
stc
pop
inc
test
sbb
fisttpll
fs
push
imul
pop
sti
lcall
dec
push
add
sbb
imul
add
jp
outsl
jns
jg
clc
mov
data16
loopne
push
popa
sahf
in
push
scas
iret
cmp
add
dec
xchg
imul
cmp
and
lret
adc
test
mov
mov
out
mov
xchg
shrl
add
stos
add
push
sbb
leave
scas
inc
cmp
inc
mov
arpl
cmp
mov
addb
sbb
in
fcmovnbe
subl
jle
stos
dec
or
or
out
mov
pop
in
sbb
mov
push
xor
jne
cwtl
and
scas
fwait
mov
mov
push
mov
xor
lock
loope
add
inc
lods
cwtl
stos
sub
fmul
and
sub
lea
jge
rol
ss
std
arpl
sbb
pushl
lods
int
fdivrp
icebp
sbb
ficompl
sarl
in
inc
adc
push
and
sti
xchg
fstpt
aas
arpl
int
loopne
into
das
inc
jg
or
scas
mov
imul
xchg
adc
in
mov
mov
fucomip
push
add
add
mov
in
push
adc
push
xor
jno
mov
adcb
jp
bound
dec
pop
lock
scas
idivl
mov
add
xor
lahf
into
adc
shrb
ljmp
leave
jg
mov
adc
add
sub
stos
mov
adc
push
dec
sahf
or
mov
jmp
pop
pop
adc
jne
test
and
sub
dec
push
pop
push
jne
movb
outsl
fdiv
das
xchg
push
mov
out
adc
mov
decl
or
xchg
cmp
sbb
push
jnp
sbb
es
jb
and
mov
das
pop
test
adc
mov
out
into
mov
or
jl
and
icebp
lds
js
mov
pop
cli
insb
mov
sbb
aaa
dec
sarl
bound
lds
lea
or
dec
mov
fistl
pop
ret
hlt
xchg
or
xchg
fisttpl
mov
inc
lds
push
cmp
adc
push
stos
mov
mov
mov
fcompl
sbb
adc
repz
data16
jno
dec
add
dec
icebp
imul
xor
lock
rorb
fwait
imul
mov
lea
ss
and
mov
or
rolb
push
or
mov
or
adc
mov
add
dec
or
pop
push
daa
xchg
cmp
test
xor
jo
in
jbe
add
inc
out
test
inc
mov
pop
inc
outsl
inc
into
test
mov
cmpsl
iret
cmp
adc
and
fdivr
or
jmp
xchg
jo,pt
in
mov
xor
sbb
and
stc
in
inc
pop
daa
mov
pop
rclb
xchg
vcvtss2si
sub
dec
int3
shll
or
push
adc
cs
add
add
in
or
sub
xor
test
cmpsl
sub
adc
ja
nop
cmp
lock
std
mov
aaa
cmp
mov
sarb
cld
lahf
add
outsb
add
push
mov
add
pop
lock
into
jmp
cld
aam
hlt
daa
jmp
lock
xchg
jmp
ds
fldt
and
dec
pop
out
jae
xchg
nop
cmpsb
mov
cmp
sub
lods
add
xchg
fs
cmp
inc
lock
jmp
jo
lods
fiadds
xor
aad
fisubrl
aas
scas
cmp
popf
lods
ljmp
inc
testl
insl
call
and
fisttpl
adc
aaa
dec
jns
into
fadds
decl
sub
jl
mov
mov
push
pop
mov
cld
bound
push
pusha
cli
flds
xchg
cmc
or
pop
popf
cmp
jmp
loope
pop
js
mov
stos
pminub
xchg
push
ret
push
imull
add
xchg
ljmp
out
es
xchg
cld
out
dec
pop
jmp
mov
leave
mov
fdivrl
scas
adc
jbe
add
mov
lcall
jae
xor
sbbb
sti
insb
das
jmp
inc
lds
lret
or
xor
sti
fsubrl
pop
and
ret
jno
mov
and
ja
lea
push
mov
add
pop
ret
addr16
cli
sub
pop
test
cmpb
add
mov
jnp
out
icebp
push
fucomp
scas
adc
nop
pusha
sbb
loopne
movsb
lahf
lahf
les
das
imul
movsl
adc
and
shlb
xchg
mov
leave
dec
push
test
ret
and
cmp
filds
fwait
je
lea
push
and
adc
inc
dec
sbb
push
jp
adc
sbb
xor
hlt
aas
sbb
scas
jne
test
daa
adc
ja
or
push
cmp
out
mov
jp
dec
xchg
inc
aas
or
js
xchg
xchg
lods
out
int3
mov
xchg
mov
in
loopne
mov
push
push
cltd
jmp
dec
int
jo
sbb
push
gs
sbb
test
and
int
je
dec
add
rorl
or
ss
push
jno
and
shrb
fimuls
cmp
or
mov
ret
sub
test
andl
sbb
movsl
repz
shll
call
dec
fdivrp
pop
xchg
test
mov
in
pop
push
adc
cwtl
js
sbbl
sub
imul
out
and
cmc
xchg
or
and
dec
xor
inc
out
adc
out
lods
xlat
loop
test
xorb
mov
call
push
push
mov
aad
nop
or
mov
stos
int3
cmpsl
xchg
mov
dec
leave
inc
int
inc
push
jl
add
bound
je
cmp
inc
out
fldcw
push
push
nop
repz
inc
nop
adc
lods
mov
lcall
or
and
pop
sbb
repz
into
lods
jmp
iret
lods
cmp
rclb
pop
js
jo
dec
rcll
movsl
mov
adc
ljmp
movsl
xchg
push
repz
inc
lret
fistpl
clc
push
ja
popf
sarb
pushf
add
and
sbb
mov
loopne
inc
mov
pushf
xchg
xor
ret
mov
cmpl
nop
push
mov
adc
test
dec
mov
inc
imul
fsubl
andb
push
or
jg
imull
mov
mov
loop
cmc
mov
pop
incl
sti
mov
or
lock
jbe
push
inc
or
mov
mov
mov
cltd
adcb
mov
addr16
les
rcrb
in
ret
sub
xor
int
xchg
divl
fidivl
cmpsb
roll
cwtl
sub
aad
cmp
cmpb
pop
sub
lock
adc
out
aas
das
sar
lret
sub
js
pop
jl
lods
fnstenv
mov
adc
int
pop
xchg
pop
sbb
jns
data16
int3
cmc
gs
push
clc
roll
ja
call
mov
and
and
mov
rcrb
sbb
mov
adc
pop
xchg
int3
idivb
out
cmp
cli
adc
loop
jns
and
mov
xor
mov
insb
push
xchg
dec
pop
lods
test
inc
mov
cmp
into
test
sub
jne
fiadds
pop
pop
mov
movsl
movsb
jnp
dec
or
shrb
push
inc
mov
xchg
cld
xchg
insl
mov
and
push
das
ja
push
pop
push
lret
jle
dec
in
add
add
mov
cmpsb
clc
sub
aaa
mov
jb
jb
out
movsb
arpl
in
adc
inc
pop
jmp
rorb
xchg
nop
insb
push
mov
repnz
out
pushf
int
sbb
rol
into
inc
adc
das
inc
leave
xchg
mov
jne
sbb
aad
les
and
pusha
ret
cmp
mov
stc
jne
in
xlat
dec
push
sbb
sbb
std
repz
bound
out
rcrb
mov
pop
fbld
push
fstps
jne
cld
inc
jecxz
aam
shll
popf
sbb
sub
ret
hlt
and
xchg
adc
outsl
mov
xor
sbb
cmc
add
mov
fildl
xchg
pop
xor
icebp
mov
adc
push
jbe
push
orb
arpl
xor
xchg
les
add
gs
jle
jns
jns
je
loope
pushf
mov
test
xchg
dec
fildll
scas
jmp
jg
jb
mov
push
lock
insl
je
mov
fcom
sbb
cmp
xlat
vpsrlw
cmp
sbb
hlt
cmp
stos
flds
enter
sbb
add
pop
mulb
push
lret
or
sub
lea
arpl
imul
ja
cmp
aad
dec
fidivrs
fists
xor
and
mov
aas
ret
inc
sahf
das
xor
jmp
fsubp
mov
xchg
and
add
inc
nop
mov
test
adc
adc
mov
leave
outsl
lds
or
sbb
fidivrs
push
jno
leave
xor
pop
sbb
xor
std
loope
insl
ds
xchg
inc
lods
inc
lock
dec
sbb
imul
sti
jno
and
or
dec
xor
jecxz
enter
lcall
sub
pop
jne
and
xchg
jp
fldl
cmpsb
push
insb
outsb
mov
les
jae
cmp
mov
shrb
jle
fwait
insb
sub
je
popf
es
das
or
pop
hlt
subl
lret
dec
enter
jnp
ljmp
mov
xor
mov
sbb
cli
pop
mov
push
mov
sbbb
popf
lahf
cltd
nop
aas
loopne
sti
adc
lret
cld
out
into
mov
imul
imul
inc
in
dec
push
ret
push
mov
mov
lock
or
sub
cwtl
int
test
dec
insb
hlt
add
add
out
inc
and
ljmp
je
cmp
and
enter
or
addr16
add
inc
mov
dec
leave
mov
push
nop
jecxz
sub
jp
cmp
dec
or
xorb
popf
xor
sti
sub
stos
mov
sti
aam
mov
sahf
divl
popa
in
std
fldl
fyl2x
push
mov
mov
adc
push
xlat
xchg
adc
fs
pop
scas
mov
into
fsubrp
test
inc
shll
out
inc
mov
xor
inc
dec
daa
xor
or
es
xchg
les
dec
xchg
pshufw
lahf
jge
jg
iret
fdiv
xchg
out
mov
mov
cmp
mov
shll
mov
push
xor
in
fistps
adc
mov
pop
mov
orb
orl
adc
scas
cld
jae
mov
mov
inc
jmp
lcall
pop
arpl
aam
insb
mov
cmc
mov
repnz
xchg
hlt
popf
xorb
pop
cmp
andl
jle
pop
push
cmp
mov
fistpl
xor
lret
repnz
popa
xchg
pop
inc
push
jnp
test
in
pop
sbb
or
aaa
outsl
iret
ret
scas
push
pop
fisubl
and
roll
adc
jbe
push
shrb
inc
mov
lods
lahf
and
inc
fs
push
movsb
mov
xor
test
push
push
clc
test
jno
mov
dec
dec
fwait
push
clc
sub
xchg
and
cmp
pop
or
jns
sub
stc
inc
fsubrp
popf
xlat
out
sub
mov
add
leave
pusha
jb
pop
xlat
popa
sar
mov
loopne
cmp
dec
push
mov
xor
xchg
and
dec
and
inc
jbe
cmp
xchg
and
aad
mov
or
and
in
push
repnz
pop
movsb
cmp
inc
push
jae
mov
notl
ss
aad
lods
fcoms
xor
enter
push
icebp
sub
or
push
xchg
mov
sarl
sbb
xor
fistpll
xor
in
fcomps
shll
pushf
sub
sub
shll
xchg
iret
xchg
mov
in
movb
cmp
out
xlat
or
lock
xchg
js
shll
push
ret
pop
mov
lods
inc
jecxz
sti
mov
mov
cmc
outsb
jmp
sbb
in
movsl
das
xchg
aad
fs
mov
loop
xor
pop
ss
pop
gs
inc
lds
jne
clc
repz
shlb
cmp
mov
lods
das
and
push
insb
jb
cmc
jl
or
push
xchg
jae
cmp
jne
and
jg
xchg
or
inc
push
fsubrp
push
les
cltd
out
push
push
xchg
or
mov
jno
pop
mov
ljmp
add
into
subl
mov
cltd
add
bound
push
or
in
shl
jnp
scas
jmp
fists
pop
cmp
sbb
push
push
sbb
sarl
push
fs
fnstsw
imul
xchg
cmp
and
nop
pop
mov
sub
dec
lahf
fldt
inc
mov
mov
jl
add
clc
movsl
js
cmp
dec
aad
inc
stc
pop
mov
pop
jno
js
out
inc
xor
imul
scas
out
lcall
lahf
daa
mov
fcmovne
js
sub
mov
mov
ret
mov
fmulp
cmpl
mov
repnz
cmp
psllw
sbb
jle
lock
add
mov
jl
xchg
adc
mov
dec
or
adc
xor
push
xor
rorl
jb
lret
movsb
les
mov
clc
dec
ret
in
ret
decl
or
fcoml
push
xchg
push
xorl
addb
data16
out
gs
push
inc
ffreep
xor
push
mov
cmpsl
adc
push
mov
mov
jae
jle
aam
in
sub
popf
inc
inc
roll
inc
mov
xchg
mov
aaa
repnz
and
out
jno
faddl
hlt
mov
enter
arpl
ds
adc
stc
and
jbe
cwtl
movsb
imul
ss
insl
flds
cltd
repz
pop
arpl
addr16
xlat
inc
sbb
add
inc
push
pop
cmp
lods
scas
repnz
or
int3
fwait
les
push
pop
xor
cmpsb
mov
mov
pop
dec
out
sahf
sbb
negb
push
dec
sbb
pop
movsl
push
sub
inc
iret
mov
mov
fsubrs
cmc
inc
pop
push
mov
push
sub
cmpsl
cmp
aam
fwait
mov
inc
popa
pop
ss
outsb
pop
pop
inc
shrl
or
sbb
push
in
adc
clc
jno
jne
loope
test
cltd
cltd
push
arpl
inc
adc
or
out
cwtl
jp
add
fs
jbe
pop
cltd
push
sub
mov
fs
gs
rcr
xchg
jmp
ds
lret
push
stc
addr16
cmc
push
ja
lds
fcmove
cmp
lods
add
aam
xor
dec
cwtl
aam
mov
jnp
fwait
jg
mov
or
sbb
jbe
xchg
pop
out
sbb
pop
dec
add
popf
pop
mov
cmpsb
fs
dec
das
and
xor
data16
mov
sub
shrb
popf
ljmp
insl
into
dec
mov
repnz
or
cld
and
or
pop
xchg
test
sbb
xchg
mov
jno
push
mov
dec
insl
inc
mov
ss
adc
int
pop
mov
cmp
push
mov
mov
sbbb
and
xchg
ret
daa
bound
inc
int
ja
dec
add
xchg
fstpt
mov
xchg
push
mov
xchg
mov
mov
scas
cmp
xchg
ficomps
bound
out
mov
aaa
jle
add
js
pop
or
push
into
jo
inc
mov
adc
lcall
ret
test
mov
imul
dec
add
in
or
xor
xchg
in
or
mov
hlt
iret
repz
pop
lea
xor
pop
popf
adc
ja
scas
xchg
adc
out
lock
out
cwtl
xchg
xlat
cmp
pop
dec
subb
lds
in
pop
sahf
or
testb
andl
pop
jne
mov
leave
pop
sub
lea
jns
fnstcw
and
mov
lret
xchg
aad
or
mov
sbb
cs
jo
jno
fiaddl
mov
iret
cmp
jnp
mov
call
faddl
faddp
jge
fs
pop
ds
in
lods
sub
lods
sarb
and
lock
cmp
stc
and
sub
dec
inc
aam
inc
and
pusha
push
out
mov
lods
fs
xor
adc
in
xlat
addr16
leave
arpl
cmp
dec
int3
mov
jb
pop
pop
sub
pop
mov
dec
jecxz
push
imul
xor
xchg
and
jge
mov
cmp
cwtl
ficoml
cmp
cmp
xchg
pop
inc
ret
mov
mov
pop
lea
shrb
jle
ret
push
imul
movsb
and
adc
sarl
scas
jl
hlt
dec
add
push
stos
call
mov
xchg
test
push
loopne
ficompl
fimuls
jo
add
repz
fcmovnb
mov
add
mov
gs
or
push
mov
mov
mov
dec
test
mov
shlb
jns
xor
jae
mov
jne
jae
add
xchg
mulb
sahf
and
add
imul
js
or
cli
movsl
popa
and
mov
arpl
dec
cmp
push
subl
mov
mov
mov
lods
push
test
mov
push
pop
mov
std
fists
cs
lcall
aaa
popl
xchg
push
adc
sub
pop
jge
aaa
pop
scas
mov
loope
aaa
sub
nop
lds
sbb
xchg
mov
jl
adc
push
push
push
inc
in
fidivl
xor
jmp
jno
and
insb
je
test
insb
jmp
mov
adc
inc
aam
jl
add
loope
popa
loopne
test
addb
xlat
sbb
sbb
xchg
push
sub
add
mov
popa
jno
sub
adc
mov
dec
push
mov
or
les
int
mov
push
rol
add
inc
add
inc
enter
adcb
or
aas
cmp
cmp
in
push
xor
or
pextrw
test
in
arpl
fwait
movb
dec
jmp
je
xchg
add
xchg
pop
out
sbb
ss
shlb
fnstsw
mov
and
pop
stos
repnz
add
cmp
xchg
pushw
inc
mov
cmp
dec
out
cmpsl
sbb
push
sub
pop
rcrb
jnp
cmpsb
push
pop
dec
xchg
xor
dec
jp
mov
pop
mov
jne
insb
adc
stos
or
out
sub
inc
aas
and
sahf
pop
jg
or
ds
mov
int3
push
call
or
mov
sub
and
mov
fildl
sbbl
push
pop
aaa
dec
loopne
cmp
iret
je
inc
popa
jmp
mov
mov
sahf
push
addr16
test
cmp
mov
cmp
into
mov
adc
jmp
dec
ds
fnsave
push
inc
sbb
xchg
popa
mov
and
test
ss
shlb
or
mov
mov
je,pn
imul
shlb
mov
jmp
ljmp
xor
jle
call
add
aam
xor
jb
jge
ljmp
arpl
mov
add
xor
inc
sbb
shl
sbb
sub
push
arpl
add
pop
dec
cmp
pop
xor
xchg
stos
mov
mov
fwait
push
fidivrl
xchg
add
movsl
cmp
iret
test
jb
xchg
xlat
movsb
scas
jmp
insl
push
jecxz
or
mov
push
orl
ret
test
mov
cs
int3
mov
cmpsb
mov
into
xor
shlb
sub
or
or
data16
fmul
shrb
out
jmp
mov
into
mov
or
mov
mov
cltd
int3
adc
lcall
lahf
pop
fwait
in
xlat
add
mov
push
mov
adc
mov
dec
aas
xor
xchg
jnp
in
inc
imul
ficoml
mov
jb
sub
sti
pop
fldcw
dec
pop
loope
jg
incb
mov
cmpsb
dec
mov
loop
cmp
cmp
aad
xchg
mov
jge
and
lcall
sti
inc
push
aad
sbb
movb
jae
jmp
add
lock
lahf
cs
cltd
mov
popl
and
shll
jecxz
jno
sbb
cmpsl
outsl
jl
mov
cmp
invd
jns
xchg
adc
rcrl
popa
loopne
cli
movsl
cmpsl
leave
xor
add
lret
xor
inc
adcb
and
mov
std
sbb
push
adcl
inc
daa
sub
push
mov
mov
leave
cmp
or
fldt
dec
cmpsl
fldt
add
rcr
aas
xor
dec
sahf
cmp
ljmp
enter
mov
test
pop
subl
push
mov
mov
cmp
or
shrl
push
and
sub
xor
jne
sub
enter
xor
jecxz
cmpb
adc
loop
scas
imul
push
iret
addb
pop
lods
inc
push
hlt
stos
lock
scas
jne
dec
popa
sbb
mov
pushl
push
sbb
dec
sub
push
insl
lret
in
xchg
pop
push
xchg
repz
in
cmp
lea
dec
xor
data16
and
ret
mov
pop
inc
add
xchg
insb
sbb
shrb
call
leave
or
dec
mov
js
push
mov
das
cmp
sbbb
testl
jnp
add
pop
inc
cmp
adc
and
xor
or
add
insl
xor
inc
out
shlb
fwait
mov
hlt
addr16
adc
lret
mov
call
lods
add
push
test
pusha
or
sti
fisttpll
pop
mov
cmp
hlt
int3
lret
fisttpll
ret
push
js
call
sub
testb
or
ljmp
jbe
popf
scas
pop
mov
push
test
or
adc
mov
adc
mov
xor
mov
or
push
cmp
sub
ja
sub
push
push
adc
loopne
mul
dec
out
and
test
mov
and
daa
sbb
xor
repnz
aam
adc
inc
or
jbe
mov
fcoml
mov
sub
xchg
or
jae
push
xchg
das
cmp
mov
jecxz
repz
addr16
jge
sub
mov
ret
sar
in
xchg
cmp
fisubrl
pop
nop
or
insb
int3
push
xchg
jno
add
iret
and
inc
std
dec
jne
sub
sub
push
cmpsb
push
add
and
call
icebp
ret
fsubrl
cmpsl
and
xorb
sub
stos
rclb
cmp
pushf
jmp
lods
loop
lcall
sbbl
aaa
add
xchg
lods
enter
add
stc
add
mov
out
mov
les
push
fldenv
xchg
lock
imul
scas
data16
ss
dec
sbb
rcr
mov
or
insl
lret
stc
dec
inc
mov
jnp
nop
mov
andb
sbb
popf
xchg
dec
bound
push
or
xor
xor
adc
jns
lcall
or
icebp
xor
mov
test
int3
push
jae
jno
roll
test
jnp
or
pop
adc
sub
cwtl
lods
cmp
fimuls
adc
out
addb
in
ds
lret
dec
xchg
sbb
jge
out
mov
call
mov
mov
out
movsl
ret
jnp
shl
movsb
cmpsb
test
mov
sbb
into
std
setp
mov
out
fs
inc
insb
and
cld
dec
xchg
popf
push
inc
repz
data16
sqrtps
lahf
ret
jbe
dec
daa
bound
ret
dec
mov
mov
loope
repnz
lcall
pushf
jne
inc
cwtl
pop
fiaddl
inc
ret
sbb
pushf
push
insl
and
or
push
jb
enter
or
popf
add
lret
lcall
lret
stos
jl
xchg
mov
xor
div
cmp
xchg
sub
xchg
mov
adc
xor
sbb
push
fsubp
ja
daa
rolb
or
sti
enter
xlat
pusha
push
sub
fiaddl
ss
xor
pop
and
ljmp
sbb
mov
push
sbb
and
shll
mov
mov
rclb
jge
sti
push
mov
movsl
or
lahf
in
adc
nop
fxch
fildll
xchg
ss
lods
pop
repnz
mov
movsb
in
in
aaa
cmp
jae
sub
jmp
xlat
mov
test
push
add
or
test
pop
dec
xor
imul
sub
imul
movsl
fidivrl
nop
mov
scas
pop
adc
xchg
orb
icebp
lret
ret
insl
jno
imul
in
int3
pop
shll
ljmp
in
mov
mov
jmp
pop
les
neg
addr16
pop
jne
cmp
sub
sbb
loop
mov
into
js
iret
mov
or
rcrl
sub
les
jo
mov
addr16
js
push
movsb
data16
xchg
pop
sbb
loope
imul
aaa
dec
les
cltd
andb
xchg
daa
jge
xor
das
out
dec
mov
out
add
loop
daa
std
arpl
inc
ja
jmp
pop
push
xor
cmpsb
cmpsl
rcr
loope
cmp
and
jbe
das
sbb
lahf
sahf
jo
imul
sbb
das
test
cs
xor
mov
push
mov
or
mov
add
and
adc
jb
sub
ficomps
inc
shrl
dec
lock
and
push
xchg
stos
xchg
or
ja
xchg
add
mov
scas
and
pop
sbb
lret
mov
cmpsb
ret
xor
pshufw
jl
lds
ds
in
movsl
or
push
add
jbe
shrb
jae
imul
dec
aas
jo
and
lods
add
mov
dec
push
movaps
mov
cmp
cli
xchg
cli
es
fs
adc
pop
mov
inc
adc
sub
add
mov
mov
jae
xchg
jl
add
and
push
mov
shlb
dec
enter
xlat
mov
or
jbe
andl
fimuls
out
pop
repnz
sub
loop
out
addr16
push
idiv
jecxz
dec
adc
sub
out
leave
pop
popl
lods
dec
jge
adc
andl
jmp
jae
or
pop
xchg
xor
dec
lcall
dec
repnz
loop
scas
popl
je
lahf
add
add
xchg
pop
mov
out
mov
or
les
or
mov
xor
gs
fcomps
popf
xor
stos
fs
stos
and
mov
lcall
xchg
aam
lret
inc
sahf
mov
test
cs
pop
outsb
pop
iret
jl
push
xchg
pmaxsw
jmp
sti
dec
nopl
mov
jae
xchg
pushf
repz
lods
add
iret
sbb
nop
xchg
sub
dec
loopne
sahf
pop
push
sti
adc
sbb
and
out
push
ja
stos
test
jg
das
or
les
int
inc
pushf
xor
js
cmp
inc
cld
rol
pop
xchg
repnz
xor
jle
mov
movsl
mov
xchg
push
dec
xor
mov
filds
shrl
inc
ret
and
push
xlat
adc
push
cmc
xorb
scas
dec
clc
push
stc
fs
stos
in
pop
jo
mov
lret
scas
xchg
ds
movsb
imul
xor
adc
jl
imul
js
pushf
sub
mov
pop
data16
dec
testb
push
sbb
mov
xor
push
mov
add
loopne
sub
scas
clc
mov
test
mov
divb
xchg
or
add
lretw
sbb
frstor
dec
jge
lret
ret
out
inc
arpl
daa
jae
sub
je
jno
mov
in
in
decb
mov
sub
jge
dec
or
icebp
lret
or
iret
sbb
leave
pop
jno
cmp
jg
repz
cmp
sub
loop
mov
not
push
js
mov
mov
lds
jge
stos
call
in
ss
sbb
ret
loopne
and
jnp
mov
stos
jle
ret
arpl
mov
outsb
mov
cli
daa
cmp
jge
dec
mov
sub
es
ljmp
xor
test
push
decl
mov
mov
dec
in
test
mov
dec
prefetcht0
int
mov
jns
push
cmp
pusha
out
out
aaa
mov
std
or
xchg
clc
mov
pushf
and
outsb
fildl
lret
jle
sub
sti
sbb
aas
adc
mov
hlt
lea
or
sub
push
cmp
jno
ljmp
out
xchg
cmp
mov
cli
push
xor
or
in
test
dec
arpl
lods
cmp
inc
or
mov
jno
xor
enter
fs
inc
pop
jb
fdivs
mov
sub
dec
dec
lods
repz
icebp
pop
jl
rep
enter
push
cmpsl
and
cltd
pusha
xchg
idivb
xor
jge
push
das
sub
push
cmpsb
mov
in
pop
pushf
int3
lcall
add
gs
mov
xchg
and
mov
imul
repnz
push
mov
pop
mov
aad
xor
pop
mov
push
add
cld
rclb
rorb
xor
out
fstpl
hlt
aas
nop
mov
imul
in
mov
in
les
xorb
sarb
out
push
mov
mov
sahf
inc
push
inc
xor
mov
or
lcall
lea
push
inc
cmp
xchg
mov
inc
and
dec
adc
ret
rolb
in
mov
push
ret
lds
lds
scas
sarl
call
in
pop
mov
sbb
incl
int
ss
inc
push
push
into
cmc
jbe
jno
or
mov
xchg
lds
lods
adc
jle
mov
xchg
pop
mov
push
adc
jae
into
pusha
lods
roll
pushf
popf
inc
dec
fisubrl
fdivrs
ror
xchg
pop
inc
arpl
ror
ret
mov
sar
dec
push
and
push
out
pop
popl
pop
in
push
mov
shl
or
cmp
enter
jp
sub
push
sbb
mov
hlt
enter
push
outsb
shll
lcall
jge
vlddqu
push
push
ds
fcoml
loope
test
rcl
adc
mov
sbb
xchg
insb
cmp
inc
sti
nop
decb
adc
rorl
std
rcrb
jecxz
push
mov
scas
and
inc
or
mov
das
lret
iret
jnp
jecxz
stos
jle
cli
shr
js
shrl
adcl
imul
push
and
arpl
cli
movsb
inc
aad
aaa
jbe
gs
and
lods
in
leave
sub
lret
daa
into
or
outsl
imul
cltd
inc
jns
cmp
sbb
jg
inc
inc
aad
sub
in
int3
cli
aaa
adc
inc
mov
dec
in
dec
js
shrl
and
sub
insl
mov
mov
aaa
in
sbb
push
xchg
sbb
imul
cmpsl
pop
sbb
sbb
arpl
ret
sbb
sbb
push
insb
call
sbb
ret
jno
mov
xor
xor
shr
jnp
xchg
and
enter
push
int3
mov
mov
fadds
cmp
mov
push
aam
adc
xchg
jecxz
mov
fldcw
gs
int3
das
or
xchg
inc
cmp
and
xchg
pop
repz
bound
mov
push
shrl
and
repnz
bound
ret
adc
mov
testl
mov
push
test
sti
pop
xor
sbb
js
fisubl
xor
rcrb
add
sub
ficomps
xor
aaa
inc
jmp
add
mov
pop
add
sbb
loopne
std
in
add
fsub
add
int3
push
sbb
and
int3
sbb
call
jge
xlat
jmp
in
mov
adc
les
ss
sbb
cmp
xor
jl
cmp
scas
fisttpl
mov
sub
ljmp
pop
jp
or
xchg
ret
sub
xlat
popl
jo
jl
ds
in
jb
mov
das
cmp
ret
cmp
movsl
cmp
xchg
fnstenv
jge
aaa
repnz
rolb
pop
mov
mov
arpl
xor
cmpsl
dec
xchg
lcall
sub
jl
lods
out
jae
and
inc
int3
cmpl
mov
push
call
sbb
lods
mov
cmp
sbb
in
mov
sub
sahf
adc
and
out
mov
adc
pop
scas
adcl
imul
mov
and
cwtl
loop
xchg
icebp
pusha
mov
mov
or
xchg
lods
cld
aas
mov
enter
sbb
addr16
test
or
stc
sub
push
pop
dec
push
xor
das
xchg
jns
dec
mov
xor
aaa
push
push
cld
xlat
scas
add
roll
out
xorb
dec
sub
cltd
mov
jle
loop
adc
jae
and
shlb
enter
rolb
xchg
dec
je
in
sti
dec
pusha
cmp
lea
gs
push
xor
or
xchg
adc
fbstp
cmp
push
adc
cmc
xchg
jns
push
jo
out
sarb
hlt
repz
shlb
data16
and
es
iret
enter
cmc
repnz
loope
mov
push
dec
mov
ret
shrb
jl
pop
in
das
jmp
cld
sahf
movsb
add
inc
mov
clc
fistpl
mov
aam
and
orl
test
mov
sbb
jno
sub
mov
dec
loope
jg
sub
jecxz
or
mov
aas
ds
xor
leave
test
cmp
xor
les
mov
inc
lret
xor
call
adc
jnp
cmp
inc
xchg
jne
inc
popa
arpl
push
adc
sbb
push
mov
fsubl
lret
ret
lds
xchg
cs
xchg
xchg
psubsw
aaa
push
in
sti
sub
cs
cmp
cmp
nop
push
pop
enter
jno
stos
jp
adc
sbb
adc
loop
pushf
or
sbb
insb
sbb
ja
iret
test
or
ret
dec
lods
mov
xor
mov
lcall
add
mov
out
in
xor
sbb
in
sub
hlt
jno
mov
fnstcw
aad
sbb
jmp
scas
sub
sbb
jne
xor
mov
imul
stc
int3
adc
insl
mov
stc
out
repz
and
sbb
or
adc
or
mov
cmp
movl
inc
cwtl
add
sub
aas
push
add
test
fucom
cmp
fisttps
inc
pop
add
bnd
dec
into
jmp
push
push
or
lcall
add
jecxz
sbb
sub
xchg
addr16
inc
jne
enter
cmc
push
cmp
inc
cld
push
aad
lret
rclb
inc
ljmp
loopne
push
xchg
mov
pop
dec
stos
mov
stos
xchg
loop
xlat
push
dec
pop
in
mov
push
leave
fimull
push
sbb
ret
loope
jb
pop
rcl
insb
sbb
int3
daa
cs
and
fadds
jmp
in
push
rcrb
fwait
cmp
cmp
repnz
inc
xchg
repnz
jg
mov
fsubrl
dec
mov
into
loope
inc
scas
push
sub
jge
cld
jo
ljmp
adc
push
xchg
ljmp
adc
pop
mov
jns
dec
loope
or
cmp
mov
call
jb
xor
pop
into
jne
and
notb
je
or
pop
mov
rorl
xchg
sahf
sbb
cli
fisubl
and
push
sub
mov
lods
inc
cwtl
int
pop
call
jp
popf
lahf
xor
test
pop
mov
lock
movsl
nop
mov
repnz
cmc
fdivp
cmp
adc
cmc
hlt
lcall
adc
or
test
call
mov
jmp
xchg
in
sbb
sub
js
ficomps
and
das
cld
mov
add
sbb
mov
lea
mov
pop
dec
mov
es
pop
inc
addr16
adc
mov
cmp
cs
in
xor
sbb
jo
sahf
push
dec
mov
pop
push
fstpt
lods
mov
jecxz
jle
mov
dec
xchg
mov
sub
cs
xchg
push
in
hlt
outsb
stos
es
rolb
cs
or
rcl
arpl
xchg
popf
daa
icebp
jno
fmuls
test
mov
stc
fstpt
popf
mov
lds
popf
inc
cmp
int3
mov
ds
stos
xchg
add
aaa
mov
ss
sub
cmp
sub
adc
push
cli
inc
add
and
pop
or
add
dec
ss
xchg
jl
lret
pop
mov
icebp
dec
cmp
loopne
stos
dec
in
xor
fstpt
cmp
xor
cmc
ja
mov
mov
and
xlat
dec
adc
inc
lods
imul
pushf
push
cld
cmp
cltd
push
mov
push
push
les
inc
sahf
sahf
stos
xchg
sarl
sbb
imul
add
jo
out
fcmovu
xor
mov
cmpsl
dec
inc
je
inc
vpmacsswd
sub
adc
jecxz
mov
cwtl
mov
aaa
mov
push
add
fdivrs
out
loop
mov
xor
imul
mov
inc
dec
inc
fcoml
sbb
aaa
movsb
mov
push
dec
out
icebp
arpl
in
insl
or
rolb
add
sub
lea
adcb
mov
dec
mov
loop
test
push
jbe
push
rcll
inc
pop
sbb
xchg
jnp
cmc
out
add
xor
inc
loop
cmp
dec
mov
jg
mov
mov
scas
divb
sbb
sub
outsb
shl
dec
add
xor
xchg
sub
mov
sbb
inc
lret
rcl
roll
sub
push
pusha
mov
mov
mov
aam
into
out
pop
sbb
xchg
sbb
mov
dec
fmull
cmpb
adc
mov
cs
mov
cwtl
arpl
xorb
adc
repz
out
dec
and
repz
jns
decb
jecxz
in
fwait
imul
pop
pop
out
push
xchg
pop
les
es
test
fcom
pop
dec
xor
mov
incl
sub
div
inc
dec
out
inc
push
xor
jne
xor
data16
cmp
jae
sbb
or
push
movsl
mov
xor
bound
inc
or
roll
push
add
push
jb
cmp
cmc
fwait
mov
jbe
pop
test
icebp
scas
jno
or
fmulp
imul
push
ret
push
or
enter
les
stos
sub
mul
mov
xor
in
sub
inc
loope
mov
sbb
cltd
leave
push
out
adc
outsb
dec
fsubl
add
jbe
push
repnz
int3
or
jbe
std
adc
js
sub
fs
mov
dec
push
leave
stc
xor
cmpsw
mov
sbbl
sub
cld
sub
incb
cli
shrl
fwait
mov
add
or
adc
adc
ss
int3
hlt
fs
sbb
ret
mov
adc
leave
popf
mov
inc
pop
ret
sahf
pop
test
push
imul
xchg
or
cmpsl
push
lret
push
insl
or
cs
dec
lcall
push
xchg
push
dec
ss
lcall
stos
xchg
addr16
rorb
sub
jg
cmpsl
loop
mov
inc
std
push
repz
test
cmp
andb
loop
jne
sub
xor
movsb
dec
nop
outsl
shll
inc
mov
lea
lock
adc
adcl
and
inc
test
rcll
repz
into
popf
push
cli
sub
or
push
push
xor
cmp
sahf
stos
in
pop
lds
test
sarl
call
mov
add
xor
stos
dec
je
sbb
mov
push
cli
outsl
rorl
add
jbe
pop
lods
pcmpgtw
rcl
jle
sub
adc
and
pop
mov
gs
insl
mov
sbb
daa
mov
movsl
outsl
test
mov
jg
mov
mov
mov
push
leave
inc
xchg
adc
mov
sbbl
and
sub
nop
lret
in
mov
pop
sarl
sarl
pop
inc
inc
jmp
push
mov
sub
sarb
ror
paddd
rclb
fists
xchg
int
insl
xlat
pop
xor
std
lods
loopne
xorb
push
mov
jg
cmp
adc
inc
dec
sbb
es
sub
adc
mov
pop
jbe
cmpb
add
sahf
pop
arpl
mov
pop
sbb
ret
cmp
es
add
cmpsl
leave
fisttps
js,pt
test
mov
mov
fwait
add
push
mov
sbb
popa
insb
dec
xchg
or
shlb
and
push
cld
add
sbb
faddp
xchg
jo
and
psrlw
sub
mov
cld
ja
rcll
or
xor
loop
mov
xchg
pop
lret
fbld
cmpsb
xor
repnz
pusha
mov
ss
sub
fstpl
fildll
daa
les
ficomps
or
dec
mov
mov
sbb
shll
push
addb
rcrl
inc
mov
ja
fs
outsb
leave
mov
jne
lods
orl
mov
jae
and
push
insl
jp
add
mov
iretw
outsb
repnz
and
popf
mov
orl
add
or
loopne
jmp
inc
add
dec
add
xchg
lods
push
mov
and
or
scas
jb
push
sbb
enter
push
fstl
push
stc
and
iret
jmp
cmc
btr
enter
popf
div
ds
pop
stos
loopne
adc
aas
loop
jbe
lods
inc
cmp
jge
stos
fildll
loope
outsb
mov
lds
lahf
arpl
scas
aaa
cmpsb
into
push
shr
dec
subb
testl
fwait
rolb
push
lcall
cmpb
imul
je
or
mov
ljmp
dec
sarl
add
imul
jne
icebp
fisubrl
cs
jp
aaa
cld
les
add
xchg
popf
pop
cmp
sqrtps
outsl
cld
cmpsb
pop
jnp
sub
test
pop
popa
adc
mov
lret
out
sbb
hlt
addr16
andb
push
xchg
sub
mov
hlt
out
sahf
repz
push
and
sbb
sbb
sub
jns
mov
pop
dec
in
cmp
inc
fcmovnb
mov
xor
jle
outsl
pop
xor
adc
jae
push
inc
pushf
mov
mov
fimull
jp
push
add
test
scas
fmull
stos
addr16
mov
xor
dec
rcl
push
mov
jbe
jmp
mov
sub
push
into
pop
xchg
pop
paddusw
daa
pop
iret
cmpsl
repz
push
in
cltd
xor
pop
call
pop
dec
mov
popf
out
movq
sbb
pop
or
pop
inc
cltd
out
or
repz
stos
mov
roll
mov
ret
xchg
je
mov
pop
negl
hlt
adc
xor
inc
and
iret
dec
xor
sarb
mov
fildl
sahf
or
xchg
cmp
cld
mov
sahf
sub
aam
jb
mov
and
push
lret
sbb
jg
test
je
stos
loope
mov
popa
loop
jl
popa
cmp
addb
out
test
inc
scas
aas
je
push
pop
xor
xchg
adc
test
push
in
mov
mov
push
push
push
xor
add
mov
icebp
addb
ficoml
outsb
and
sbb
push
in
dec
cmp
popfw
popa
add
in
xchg
and
cmp
push
ljmp
movb
mov
addr16
xchg
mov
push
mov
jle
sbb
sbb
rolb
mov
mov
xlat
jle
hlt
shlb
mov
push
xchg
pushf
dec
jno
adc
sarb
jmp
ret
pop
push
scas
test
pop
jmp
jns
pop
jp
lret
jb
pop
cld
in
imul
xchg
mov
mov
add
mov
dec
insl
loope
xchg
shlb
in
xlat
or
sbb
dec
xchg
clc
mov
mov
in
sbb
xchg
das
or
fsubl
faddl
stos
lret
loope
push
in
fadd
jae
jno
and
pop
or
mov
outsl
add
or
inc
mov
arpl
push
mov
stc
mov
repnz
mov
dec
ljmp
aaa
loopne
fisubl
shrl
mov
push
push
insb
xor
jae
cmp
push
ds
and
sbb
fldenv
sub
sti
xor
leave
sbb
stc
dec
dec
cmp
pop
mov
inc
sbb
pop
pop
adc
xor
add
add
std
ljmp
int
sub
inc
cmp
int3
push
movsb
insb
xchg
cmp
cmpl
enter
test
movsl
mov
xor
push
and
stc
loop
xor
or
test
fiaddl
add
mov
add
sarl
insb
ss
mov
jp
mov
jle
lock
stos
mov
jne
je
sub
mov
mov
fldenv
mov
push
addr16
test
je
clc
test
shl
sub
in
push
scas
push
cltd
stos
adcb
sbb
jae
aaa
aas
ss
test
mov
and
push
aad
jo
inc
sub
fidivrs
mov
pop
add
add
push
lds
sbb
lret
lcall
and
mov
dec
outsb
add
fdivr
cmp
mov
dec
das
lret
cld
mov
aad
xor
mov
sbb
mov
add
popf
pop
cli
xchg
xchg
or
inc
aam
push
push
sbb
in
sub
add
fcompl
mov
adc
test
mul
push
lods
xorb
mov
imul
mov
push
int
and
repnz
lahf
fst
adc
shrb
jmp
mov
mov
mov
cwtl
xchg
and
mov
out
xchg
das
sub
lds
jmp
adc
jbe
add
push
sbb
std
fs
rcll
sub
imul
aad
push
pushf
fsubl
orb
jecxz
sub
incb
sahf
aam
cmp
aas
imul
inc
bound
xchg
in
mov
test
fidivrs
fsubr
mov
into
les
mov
sub
lahf
cmp
dec
ss
gs
cmp
mov
add
pop
add
pusha
cmpsl
test
and
stos
add
repnz
sub
jae
stc
out
pop
or
mov
es
shlb
divb
and
cmp
xchg
and
xchg
pop
mov
adc
ds
fwait
pop
inc
js
addr16
jno
xchg
or
sbb
lds
xchg
sub
popa
inc
fwait
test
inc
mov
dec
sti
lcall
movl
mov
mov
loope
and
jno
jae
wbinvd
mov
in
dec
or
test
mov
mov
addr16
aaa
enter
not
jbe
sub
inc
xchg
mov
cmc
loope
out
add
cli
mov
ret
cmp
mov
mov
out
adc
lods
test
clc
or
addb
inc
scas
popf
out
shlb
adc
and
sub
stos
add
sahf
mov
mov
cmc
xchg
push
ljmp
mov
je
xor
test
jne
insl
lods
shrb
add
pop
test
sub
jno
sbb
push
pop
sbb
mov
mov
cmpsb
cmp
test
imul
sbb
popf
mov
inc
mov
lods
out
mov
cld
sbb
or
cltd
pop
int
add
clc
and
mov
inc
vaddpd
scas
pop
or
pop
xchg
adc
test
jno
or
aas
movsb
and
adc
mov
int
xchg
cmp
lods
mov
mov
jno
xor
or
jbe
out
cwtl
ljmp
leave
cmp
sbb
movsl
insb
rol
sbb
data16
rcrl
xorb
push
shrl
mov
data16
add
inc
mov
dec
rcl
mov
mov
pop
fdivl
cs
adc
mov
xchg
xchg
lret
orb
mov
out
adc
fiaddl
adc
push
int
mov
xchg
sbb
fwait
add
xor
dec
cld
incl
push
mov
and
popa
push
add
pop
dec
in
xchg
sub
arpl
and
aad
mov
sti
aad
cwtl
loope
mov
fldcw
adc
jns
iret
adc
mov
mov
mov
iret
or
cmc
mov
adc
lods
cli
imul
adc
bnd
enter
mov
dec
lods
fwait
lds
sti
mov
inc
imul
int
jno
mov
pop
pop
pop
or
mov
inc
rcrb
call
cld
nop
jmp
xor
popf
sahf
jp
push
fsts
and
add
lods
add
mov
pop
pop
or
lods
loopne
cmpb
jae
cmpsb
test
nop
or
rorl
push
lods
mov
adc
add
sti
mov
cmc
and
jbe
std
jbe
mov
jge
mov
popa
mov
ljmp
popf
fsubl
jbe
sub
sub
mov
lret
cmc
test
or
repz
pusha
fcoms
pop
pop
clc
sbb
cmp
fisttpll
loop
sub
xlat
push
cmp
repnz
inc
dec
ret
jae
xor
je
test
xchg
jecxz
pop
cmp
loope
int3
mov
pop
fsubrl
mov
pop
dec
sbb
and
mov
jae
stos
push
mov
add
addl
mov
test
gs
mov
or
dec
adc
cli
cld
cmpsl
push
cwtl
lock
mov
leave
mov
mov
mov
jle
fs
mov
std
cli
sbb
add
inc
mov
cmp
repz
mov
fcomps
mov
rcll
sub
sbbl
cmp
addr16
aaa
cmp
cli
int3
adc
xchg
inc
arpl
fdivrl
fs
pop
xor
repz
xor
cmpsb
adc
adc
cmp
mov
and
out
jae
push
cmp
mov
jo
arpl
pop
mov
push
inc
js
mov
adc
popf
mov
clc
or
or
scas
sub
aam
add
dec
jl
ljmp
mov
push
xchg
cmp
mov
repz
pop
xchg
leave
add
leave
cli
jo
jmp
cmpsb
mov
into
mov
xor
push
enter
jecxz
and
outsb
mov
outsl
xchg
in
rcl
add
flds
lods
test
jbe
cmp
mov
mov
and
or
mov
imul
or
sarl
dec
jbe
inc
jbe
ljmp
add
call
adc
arpl
enter
sarb
fs
cltd
and
and
stos
out
int3
aad
fildl
sbb
icebp
sbb
addl
adc
push
jecxz
imul
inc
xchg
mov
xor
pop
ds
mov
add
out
cmpsl
int
pop
jb
xor
cmpsl
bound
pop
sbb
movsb
leave
out
lcall
shll
loopne
repnz
add
pop
add
add
xchg
out
mov
dec
push
add
loop,pt
imul
fstps
in
and
dec
loopne
mov
out
xchg
jnp
inc
fabs
mov
ljmp
sbb
testl
cld
mov
fisttpll
pop
int3
mov
sub
das
jo
or
pushf
dec
fldt
lds
pop
fists
sti
jl
int3
or
cmp
pop
sbb
xchg
mov
push
cmp
test
leave
mov
addr16
cmpsl
dec
cmp
cmp
xor
or
mov
or
hlt
push
xchg
add
xlat
out
stos
push
mov
rcll
jmp
and
pop
sub
lret
jne
sti
aaa
mov
sti
pop
adc
ret
mov
fcomip
push
lea
push
jb
cltd
dec
push
mov
mov
inc
loopne
cli
cmp
xor
mov
stos
push
pop
xchg
sub
pusha
inc
sbb
cmc
sbb
ja
adc
fcompl
sub
nop
mov
mov
or
ror
dec
lcall
in
out
push
fbstp
orb
and
insl
xchg
insb
arpl
and
mov
mov
adc
jp
and
inc
xchg
arpl
fs
sbb
sar
jo
aam
jne
adc
mov
push
mov
out
jmp
std
lea
cmp
rclb
aad
cld
out
mov
jmp
lret
lea
pop
jno
stc
jae
iret
fs
pop
sbb
scas
and
mov
mov
pop
arpl
daa
push
cmpsl
jnp
mov
pop
addb
jae
loop
popf
ss
mov
repz
icebp
or
test
gs
adc
idivb
xchg
adc
xlat
mov
in
add
dec
dec
cmp
add
mov
sbb
aaa
cmp
pop
xchg
xlat
pusha
pop
sbb
lcall
aad
inc
mov
inc
dec
xor
dec
push
cmpsl
push
push
outsl
in
sbb
sub
sbbb
sbb
push
jns
pushf
testl
jns
ret
gs
xchg
sbb
aad
imul
mov
push
fwait
hlt
lcall
loopne
fimull
sbb
aaa
jl
and
push
out
sbb
push
mov
dec
add
adc
adc
sbb
outsl
xor
pop
js
lods
je
out
mov
cwtl
add
xchg
add
jnp
mov
xchg
insb
adc
das
and
xchg
jns
mov
movsb
mov
adc
outsl
repz
fidivs
js
jmp
and
xchg
icebp
sbb
cli
add
push
mov
mov
in
out
pop
shlb
je
cld
mov
sub
outsl
mov
add
xlat
lret
lods
das
adc
xor
stc
call
pop
xchg
cmc
call
jmp
and
insl
pop
or
popa
in
or
jo
outsl
lods
sbb
das
lea
or
test
adc
mov
or
dec
adc
cmc
add
push
vandnps
inc
repnz
fcomps
rcll
cmc
cs
repz
xchg
jecxz
fnsave
call
in
sbb
xchg
test
pusha
adc
popf
cmp
out
sbb
mov
cwtl
nop
mov
mov
lods
lret
xchg
pop
inc
out
fnstsw
cmp
cltd
push
xchg
pop
cmpsl
mov
ja
and
inc
mov
les
adc
ljmp
mov
sarb
sbbl
or
jbe
or
cmc
fnsave
sub
test
cli
mov
add
xor
mov
pushf
sub
mov
fidivs
sbb
test
fisubrs
mov
push
call
pop
pop
mov
loopne
adc
mov
sbb
pop
and
gs
cmpsb
pop
shrl
adc
inc
pop
xchg
loopne
fldl
push
repz
sub
add
popf
mov
aaa
cmpb
clc
jns
sub
in
orl
stos
movb
adc
lea
addb
jne
and
sar
cmpsl
mov
jno
dec
hlt
pop
add
inc
call
adc
pop
out
fmull
movsb
repnz
int
jg
mov
xor
shl
ret
xor
sbb
pop
cmp
fldenv
adc
je
sti
mov
in
lcall
fcmovu
sbb
cmp
add
inc
or
out
adc
sub
insl
dec
cs
sbb
xorb
jg
and
pop
pop
pop
xor
test
outsb
inc
mov
int3
push
mov
icebp
into
les
cwtl
or
stos
jmp
mov
jo
mov
mov
mov
sub
mov
sbb
cld
mov
int3
pop
sub
mov
mov
je
repnz
jns
lcall
mov
ffree
repz
mov
or
sub
fldpi
rcll
pop
xchg
mul
leave
adc
aad
add
daa
lret
mov
lcall
jbe
mov
xor
addl
xchg
xchg
inc
scas
pop
and
cltd
ds
gs
mov
push
push
xchg
jb
aad
mov
stc
xchg
int
inc
push
mov
lahf
and
mov
std
sbb
sbb
shlb
leave
pop
aam
ljmp
pop
fcompl
pop
or
fimuls
pop
push
sub
out
in
lds
cmp
sahf
and
aad
rclb
xor
icebp
rcr
lahf
cmp
daa
lods
adc
sbb
sub
ds
out
pusha
jg
mov
dec
jmp
pop
lock
cmp
scas
aaa
je
icebp
lea
push
aaa
sahf
fs
or
mov
sub
in
pop
mov
add
pop
add
mov
aam
jmp
inc
filds
stc
daa
stc
push
inc
or
cld
push
adc
and
lret
mov
lret
fiaddl
push
ds
leave
ret
inc
shl
push
jecxz
into
pop
into
mov
jge
mov
push
shll
mov
push
fmuls
shlb
xchg
test
sbb
cli
gs
push
orb
std
jmp
aad
xchg
mov
leave
jo
adc
pushf
scas
xchg
mov
xchg
std
xor
ror
cmp
xor
mov
sub
mov
jp
es
sub
push
fs
incl
mov
cmp
push
stos
ret
mov
dec
mov
dec
sub
add
js
jl
pop
jg
pop
inc
into
pop
xchg
or
xorl
jbe
frstpm(287
push
sbb
push
mov
jl
mov
xor
mov
mov
mov
loope
lods
cmp
cs
inc
mov
outsl
andb
dec
das
push
mov
mov
lea
inc
in
cmc
es
sub
and
hlt
orl
cltd
add
or
jae
insl
fadd
iret
sbb
mov
in
mov
mov
inc
xchg
negb
imul
cli
jo
push
adc
xchg
pop
mov
sub
ds
mov
mov
dec
adc
cmp
loop
jmp
shlb
mov
xchg
and
mov
in
in
imul
mov
adc
mov
jb
clc
add
out
mov
rcrb
jnp
jle
fwait
jg
movsl
ljmp
addr16
xorb
push
scas
sahf
xchg
rol
xchg
into
push
mov
sub
adc
push
push
cmpsw
out
and
or
cmp
cmp
mov
gs
fstps
fwait
scas
sub
into
xchg
int
sti
adc
test
shlb
jecxz
sbb
fistps
jecxz
sti
mov
sbb
enter
cmpsb
jno
xor
cld
repnz
pop
loopne
data16
bound
repnz
mov
inc
jle
and
or
js
test
cld
gs
add
stos
inc
or
push
icebp
fistps
mov
shl
nop
jne
iret
pop
inc
movsl
scas
leave
xchg
in
int3
sarl
pop
ss
ss
push
in
int3
iret
andb
fcoms
std
mov
mov
dec
inc
or
test
xor
ret
stc
jae
sahf
mov
mov
and
stos
sbb
cmp
insl
lock
aad
iret
inc
inc
mov
in
cmp
imul
mov
sub
repnz
xchg
jbe
divl
add
dec
daa
sub
es
fs
cmp
sbb
xchg
add
jl
jmp
movsb
mov
fwait
lock
je
push
aam
dec
adcb
pop
or
fcoms
leave
test
ja
test
mov
in
test
inc
push
pop
mov
add
jbe
fdivs
pop
iret
test
enter
push
mov
xchg
add
push
lods
sbb
adc
aad
sahf
out
fldt
in
pop
rcrb
fisubs
stc
cmp
mov
scas
fidivl
sbb
sbb
ucomiss
imul
adc
push
pop
out
inc
imul
mov
sbb
mov
push
jmp
aam
push
cmpsl
popa
or
fwait
cmp
push
xchg
out
and
adc
inc
jecxz
jae
cmp
repz
pusha
addb
sahf
xor
test
jmp
shrb
roll
cmp
pop
add
cmp
pop
gs
or
aas
mov
mov
dec
pop
loop
mov
pop
jp,pt
lds
or
loopne
pop
lcall
lock
dec
and
into
mov
fisubl
movsb
jnp
mov
out
sahf
hlt
xlat
fidivs
or
dec
fwait
push
pop
les
out
arpl
mov
loopne
pushf
xlat
add
sub
fdivs
xor
cmp
loop
inc
add
adc
icebp
stos
rorb
xor
dec
sub
fmull
neg
push
and
mov
mov
adc
pop
out
in
cmpl
dec
xor
xchg
jb
xchg
cs
xchg
rorb
sub
inc
mov
pop
add
sarl
add
and
pushf
insl
xchg
jmp
jns
pop
pop
hlt
and
ret
int3
cld
cli
shr
push
mul
mov
dec
and
fisttpll
les
lods
sahf
jns
daa
cmp
addr16
rol
notb
push
in
adcl
insl
mov
or
or
xor
push
fnsave
cmp
cmp
sbb
fcos
inc
fdecstp
mov
aam
aas
dec
xchg
cmp
xlat
adc
xchg
loope
std
xchg
subb
mov
or
jnp
push
fimull
adc
xor
jmp
loopne
mov
sbb
stos
add
cmp
adc
sbb
dec
jecxz
loop
sbb
jne
mov
movsb
outsb
dec
into
cmp
mull
mov
dec
xchg
filds
dec
mov
fbstp
pusha
sbb
fimuls
xchg
rcl
cmpb
repnz
mov
dec
jnp
rcrb
or
sarb
mov
fdiv
ja
cld
call
enter
mov
leave
push
test
shrl
mov
inc
sarb
in
rcll
mov
or
adc
add
pop
hlt
xor
adc
push
daa
popf
sub
fisubrs
jno
hlt
popf
xchg
aam
add
out
inc
cmc
pushf
pop
popf
adc
pop
int3
lock
mov
sub
mov
popf
fidivrl
and
or
int
sbb
add
mov
sub
inc
popa
ljmp
or
lahf
in
stos
sub
and
xor
jmp
into
push
out
xor
jecxz
sahf
sub
popf
inc
dec
ja
xchg
dec
fsubr
xchg
in
adc
sarl
fwait
outsl
mov
mov
dec
and
das
lahf
sbb
add
iret
sub
stc
scas
and
or
push
xchg
xchg
dec
ror
cmp
je
sub
das
mov
jp
addr16
push
test
clc
fdivl
mov
std
out
push
jne
jo
pop
aam
dec
xchg
mov
daa
lret
lcall
dec
ja
in
adc
rcl
and
dec
std
stos
lret
addr16
push
adc
mov
test
stc
pop
sbb
sub
sbb
or
pop
cmp
cmp
test
inc
push
es
xor
arpl
pop
mov
xchg
or
sti
jo
ljmp
pop
rolb
andb
lret
xchg
cmp
imul
and
jle,pn
mov
scas
jno
mov
out
pop
dec
sti
cs
sub
push
in
ss
pushl
mov
addr16
push
testl
pusha
push
xor
lds
psrld
into
mov
cmc
lds
cwtl
movsl
faddp
movsb
data16
adc
xchg
sbb
roll
xchg
cmp
scas
popf
scas
sbb
mov
aaa
sub
pop
push
movsl
mov
add
inc
xchg
lahf
mov
movsl
jb
xor
icebp
pop
dec
addr16
pop
push
std
insb
test
addr16
dec
jl
push
movswl
adc
pop
or
xchg
lahf
pop
push
mov
filds
leave
push
fcoms
mov
sub
jp
and
jns
dec
pushf
mov
fwait
add
jo
stc
icebp
mov
stc
sub
mov
jb
shrl
test
fidivrl
and
inc
les
jmp
jg
out
push
rcrb
sbbl
add
push
cld
lods
outsl
fistps
fisubl
sbb
addl
jecxz
adc
insb
nop
dec
ret
dec
sbb
lock
cmp
fs
ret
pop
sarl
mov
mov
sahf
jecxz
dec
dec
add
sbb
dec
mov
shll
cmp
dec
xchg
ja
xchg
scas
arpl
aaa
pop
sub
cli
jecxz
cmpsl
stos
sti
jl
rorb
jmp
aad
xchg
pop
fwait
xor
addr16
aas
mov
mov
mov
and
inc
xor
and
jg
enter
xchg
push
int3
pop
adc
ficomps
inc
cmpsl
xchg
repz
push
mov
mov
out
imulb
xchg
lods
in
or
pop
lods
pop
test
sub
inc
xchg
add
out
jl
lea
and
add
iret
xor
and
ret
inc
push
adc
or
pop
mov
add
mov
add
and
pop
mov
pop
xchg
jecxz
enter
jp
data16
pushf
js
rcl
icebp
or
and
test
pop
ret
inc
or
sbb
repz
popf
ret
divl
in
or
pop
cltd
jae
mov
cs
movsl
ds
xchg
xchg
add
addl
ljmp
push
popf
fs
push
popf
in
imul
push
xor
lods
std
arpl
mov
mov
ljmp
inc
dec
fbstp
cmp
repnz
push
outsb
jmp
sub
xor
psadbw
dec
imul
out
or
push
aaa
push
jg
xchg
inc
push
push
leave
or
or
mov
jmp
mov
jb
mov
pop
fistpll
or
aad
cmp
sar
lret
jge
dec
pop
jmp
imul
popa
push
cmc
pop
xchg
sub
popa
in
sbb
push
ja
mov
inc
pop
mov
int3
ljmp
or
mov
enter
cwtl
sbb
sub
cli
scas
test
ret
push
insb
pop
and
dec
cmp
hlt
fcoms
adc
lcall
sub
mov
sub
push
bound
jae
ja
andl
hlt
add
push
push
out
cmp
test
add
imul
push
inc
adc
lds
mov
aaa
sti
mov
out
adc
clc
lds
insl
lret
ja
into
movsb
mov
lods
cltd
js
fdivrl
into
das
or
push
std
pusha
xor
dec
arpl
push
in
xor
push
xabort
in
mov
adcb
push
in
loop
or
mov
cmp
push
mov
sub
ret
sub
fdivrl
scas
cmp
mov
xchg
mov
les
pop
les
push
cmp
or
scas
cli
jle
test
arpl
add
sbb
add
dec
sbb
ds
pop
mov
aad
in
mov
addr16
jo
cld
adc
into
xor
mov
jnp
negb
lret
mov
cmp
pop
mov
mov
divl
dec
loopne
bound
mov
inc
repz
pop
mov
add
jns
mov
and
xor
pop
xchg
push
sbbl
pop
inc
lds
mov
mov
testl
lahf
outsl
or
xor
cmc
call
mov
dec
sbb
hlt
leave
cmpsb
filds
test
lret
shll
xor
lods
test
cmp
pushl
cwtl
jo
mov
jo
inc
and
push
add
imul
push
push
dec
idivl
add
dec
punpckhwd
dec
movsb
rcl
addl
fnsave
fs
int3
adc
or
xor
push
divl
jge
pop
cmp
jle
xor
stos
rorb
and
loopne
pop
xchg
loop
neg
xor
push
test
push
rorb
pop
cmc
loop
lea
and
and
mov
lcall
insb
jb
repnz
dec
inc
stos
jae
and
int3
inc
cli
imul
cmp
mov
pusha
jmp
addl
or
mov
lea
mov
and
add
xchg
xor
and
inc
aas
imul
inc
insl
nop
in
add
out
pop
push
daa
mov
adcb
iret
add
test
jno
pop
in
or
jne
in
sub
fdivl
xchg
inc
xchg
adc
popf
and
xlat
pop
cmp
sub
in
scas
dec
gs
jg
shrl
pop
pop
loopne
iret
sahf
sti
or
add
inc
mov
push
mov
xchg
pushf
dec
scas
pusha
push
ljmp
call
into
and
mov
insl
fcoml
adc
push
test
mov
cmp
dec
mov
or
outsb
pop
mov
push
scas
or
cld
rcrl
sub
xor
push
dec
add
jae
shrl
xor
lret
out
lds
hlt
mov
sub
call
xchg
inc
in
pop
mov
pop
sbb
in
das
int
mov
shll
cltd
test
cmp
inc
cmp
aam
inc
lods
xchg
sbb
stc
cmp
sbb
mov
fmul
inc
mov
mov
scas
out
dec
popa
lret
mov
xchg
scas
fnstenv
addr16
dec
stc
lock
adcl
out
test
fdivp
sbbb
fmuls
adc
mov
imul
sbbl
nop
lods
mov
inc
imul
xchg
inc
lahf
add
in
pop
movsb
in
adc
repz
mov
das
lahf
sbbl
adc
insl
imul
inc
call
mov
test
jns
mov
or
or
pop
add
xor
int3
push
push
dec
xchg
repnz
mov
mov
outsl
insl
jmp
and
sbb
ficomps
push
stos
movsl
stos
and
jmp
pushf
je
rcrl
fcomi
inc
jb
mov
mov
add
stos
push
decl
enter
test
jnp
dec
dec
ret
inc
nop
cwtl
lahf
ret
inc
out
cmc
lock
iret
mov
dec
pop
aaa
es
repz
jge
ja
nop
std
lcall
fxch
iret
aaa
iret
add
xchg
test
ffreep
and
in
lret
cs
pop
xchg
xrelease
enter
popa
cs
or
pop
ficomps
push
push
js
mov
dec
pop
lret
pop
adc
mov
rolb
mov
ds
cmp
push
popa
imul
in
or
or
cmp
scas
sub
xchg
aam
add
jg
std
and
and
int3
xchg
inc
ficoml
mov
dec
gs
cmp
jnp
cmc
mov
mov
filds
mov
fdivs
in
rorb
xchg
push
inc
aad
inc
jmp
std
bound
mov
loope
call
rolb
sub
jl
fisubrl
xchg
push
or
frstor
aam
xchg
mov
leave
out
daa
dec
and
xor
mov
js
dec
call
add
jge
rcl
jnp
je
shr
jp
fldenv
mov
or
ds
inc
push
adc
inc
icebp
int3
pop
cmpsb
sahf
push
adc
jbe
notl
push
add
lea
sahf
int3
mov
sbb
roll
mov
js
in
push
push
jmp
mov
sub
and
js
jno
sub
add
sbbl
mov
rcl
push
in
xchg
mov
roll
adc
fisubl
mov
or
mov
imul
mov
fimuls
adc
filds
jge
cmp
dec
test
imul
out
lods
in
mov
loop
and
fs
lock
outsb
lea
sbb
xor
mov
sbb
inc
sbb
fisubs
out
sbb
les
lret
imul
sbb
cmpsl
insb
mulb
sar
xchg
rcrl
push
inc
jl
pop
shl
pop
icebp
loopne
scas
pminsw
mov
sub
fwait
call
enter
ljmp
lods
pop
cmc
in
xor
jmp
leave
dec
daa
pop
fwait
inc
popf
cmp
movsb
push
or
and
add
mov
push
rcl
cmp
jnp
divl
stc
sub
xchg
xchg
mov
add
ss
mov
test
loop
imul
jl
sub
stc
mov
and
ss
notl
dec
cmpl
jo
cmp
mov
pop
sbb
ret
aam
sub
and
dec
in
in
sub
add
xchg
movups
pusha
and
inc
pushf
loopne
add
and
inc
lds
mov
arpl
inc
mov
sub
jmp
pop
stc
xor
mov
add
jbe
das
clc
and
stc
sub
jmp
mov
imul
pop
or
int
insb
fs
lahf
sub
fcomps
push
xchg
mov
pop
mov
ds
scas
push
outsl
in
sti
adc
andb
cltd
push
adc
fs
push
stos
dec
jmp
jb
cmp
mov
nop
mov
lock
or
inc
mov
sub
adc
mov
in
jl
cmp
les
call
jle
mov
adc
mov
addr16
xchg
movsb
repz
xor
sub
std
mov
add
test
jmp
iret
add
add
cmp
ss
pop
add
ds
repnz
mov
mov
jnp
and
sbb
and
pop
add
icebp
pop
push
ss
insl
sbb
sbb
cs
scas
rcrl
in
sub
mov
pop
push
xchg
push
fwait
and
mov
mov
movsl
mov
xlat
imul
in
sbb
stos
cmp
jae
stc
mov
repz
repnz
mov
adc
inc
mov
cmp
hlt
xchg
dec
fistps
inc
or
ja
movsl
pop
jg
out
fisttpll
mov
hlt
sbb
dec
ret
sub
bnd
insb
rclb
dec
iret
push
mov
outsl
out
inc
movsl
cmp
jne
negl
mov
pusha
mov
test
movsl
jg
pop
rolb
es
arpl
mov
fistl
aam
jo
mov
pop
es
into
adc
fldl
sbb
xor
es
in
jge
fs
or
mov
sub
adc
jne
and
test
loope
movsb
mov
cmp
sub
xor
add
test
lret
ljmp
cmpsl
mov
sti
inc
mov
inc
aaa
pop
mov
add
adc
leave
popa
push
sub
mov
cld
mov
insb
stos
push
jnp
mov
out
push
xorb
adc
out
stc
pop
clc
dec
xor
mov
clc
icebp
xorl
pusha
shll
cmovp
push
pop
rcl
pop
cmp
mov
cli
pop
pop
push
inc
adc
icebp
push
out
inc
inc
adc
lea
out
cmp
in
xor
add
clc
imul
push
xor
adc
sbb
dec
call
sarl
push
mov
and
inc
mov
outsl
mov
pusha
mull
dec
scas
fst
or
mov
div
data16
add
pop
jp
lret
jne
ljmp
fnstcw
sahf
call
cmp
inc
mov
inc
enter
cld
addb
loopne
mulb
roll
fcmovbe
cwtl
std
xchg
rcrl
xchg
shrb
ret
jb
mov
addb
lret
add
jecxz
addr16
daa
addl
pop
push
outsb
ljmp
shl
jbe
outsl
pop
ret
lea
push
xlat
nop
pop
lock
mov
stos
adc
dec
mov
shll
push
ja
sbb
test
mov
sti
sub
enter
ja
cmp
es
lods
in
xor
loopne
mov
jl
jbe
and
lret
ja
js
leave
movsl
arpl
xchg
mov
ds
pop
dec
xor
inc
call
sbb
sub
push
stc
jb
or
div
gs
jns
ds
dec
sbb
ljmp
lret
loope
ret
mov
xor
scas
out
xor
mov
or
pop
out
jne
fisubs
xor
xchg
or
adc
outsl
lcall
pop
xchg
or
xor
cmp
mov
cld
mov
dec
mov
hlt
xlat
loopne
out
fbstp
daa
fdivl
enter
or
pushf
inc
lahf
pushl
cmpsl
jmp
imul
mov
jp
or
sbb
sbb
jns
mov
jmp
cmc
or
sbb
outsb
mov
sbb
push
push
mov
lret
dec
mov
repz
and
inc
sbb
sbb
cmp
dec
xchg
ja
in
nop
cli
and
in
movsl
orl
xor
outsl
jnp
inc
jle
mov
and
fisubrl
sub
cmp
or
call
arpl
test
and
cld
sbb
pop
pop
and
inc
out
iret
lock
fcomps
scas
stc
cli
sbb
es
jb
les
loop
jl
in
add
int3
cli
cwtl
jo
xchg
rcrb
adc
cmpsl
ds
mov
nop
and
sub
xor
loope
insb
test
cmp
in
pushf
mull
outsl
xor
sub
fiadds
pop
cmc
mov
cmc
ljmp
xor
sbb
mov
fucom
lret
sbb
dec
lds
jg
cmp
sbb
mov
jle
mov
jl
mov
pop
idiv
lahf
add
inc
pop
push
inc
mov
cmpsl
jnp
add
dec
fmul
xor
data16
xor
push
mov
adc
mov
pusha
inc
ret
pop
mov
sbb
mov
jns
cs
mov
dec
adc
mov
test
add
inc
pushl
lcall
mov
lea
sbb
mov
sub
adc
in
pop
mov
inc
fdivrs
les
pop
cs
xor
lret
add
dec
dec
push
sub
push
cmpsl
in
add
cmc
int3
cmp
js
and
fadds
pusha
and
daa
push
cld
ret
das
fcom
ret
scas
jmp
adc
push
frstor
adc
fwait
pop
pop
mov
aam
and
comiss
xchg
ds
repnz
xorb
lretw
je
adc
and
test
sbb
movsb
xor
push
sub
repz
add
nop
pusha
stos
or
or
dec
inc
pop
sub
sub
cmp
push
stos
fwait
scas
inc
mov
sub
int3
jecxz
bound
mov
jl
dec
or
dec
add
and
sub
push
les
xchg
and
push
jns
jp
mov
xor
in
out
out
jmp
push
add
outsl
addl
inc
lret
sub
rorl
xchg
sub
lods
test
push
sahf
aad
mov
xor
ficoml
ss
push
mov
jge
sub
shrl
mov
mov
mov
mov
adc
lods
sarb
aad
inc
stos
jo
xchg
lock
ja
or
cltd
sbb
sub
sub
lret
ret
mov
jmp
out
pop
leave
adc
aam
out
mov
push
orb
dec
loope
jae
xchg
and
push
cmp
xchg
dec
nop
adc
stc
mov
jl
dec
je
lahf
adc
dec
jmp
lret
jp
addl
test
push
jecxz
sti
cli
in
jl
dec
cmp
and
rol
fistl
xlat
lods
xor
dec
out
out
xor
pusha
aam
cmp
aaa
mov
push
push
aas
jae
or
xlat
mov
ficoml
test
inc
out
pop
sahf
jo
jp
inc
ljmp
fsts
cs
lret
mov
stos
xor
jp
test
clc
in
mov
test
inc
adc
inc
dec
jb
std
adc
imul
push
aam
jbe
je
push
les
dec
pop
bound
adc
mov
cmpsb
mov
ret
pop
cmp
mov
xchg
adc
add
xchg
jb
imul
out
lahf
mov
dec
sub
or
je
and
pop
repz
mov
cltd
mov
lcall
into
dec
out
xlat
stos
xchg
jae
mov
and
jle
dec
jmp
gs
dec
xor
push
js
sub
bound
fbld
inc
loope
sbb
stc
and
je
vpackuswb
sbb
aas
movsl
add
xor
mov
dec
jmp
sarb
mov
flds
int3
inc
mov
call
adc
xchg
call
mov
sti
in
mov
mov
cmpsl
leave
or
out
and
das
jl
mov
mov
out
je
cmp
in
cmp
outsb
xchg
adc
sbb
and
sub
arpl
jne
adc
dec
idiv
xor
lret
ss
ljmp
ret
icebp
add
in
out
in
int3
xor
mov
inc
dec
mov
mov
and
push
fs
mov
arpl
mov
dec
int
add
push
push
dec
idivb
sbb
mov
mov
and
jne
add
les
les
cmp
stos
mov
sti
je
jae
pusha
cmp
mov
jae
jno
lret
pop
mov
or
push
and
shlb
mov
push
cwtl
add
sahf
mov
cli
and
pop
and
jmp
fbstp
xor
fsts
out
lcall
push
outsb
sub
xchg
cwtl
sub
push
dec
lds
sahf
test
xor
push
push
je
fneni(8087
mov
jae
mov
hlt
stos
cmp
pop
cmp
mov
sbb
cmp
inc
data16
rorb
xchg
repz
sbb
mov
mov
fcomi
repz
fstl
xor
sbb
xor
mov
nop
pop
sti
int3
out
push
jbe
arpl
jle
dec
pop
pop
or
mov
into
xor
add
jae
xor
in
pop
jbe
mov
out
outsb
xor
mov
mov
cmp
sub
inc
adc
ljmp
test
jle
mov
mov
jl
mov
mov
daa
lea
mov
sub
in
add
jns
jnp
movsb
mov
mov
nop
lea
sub
scas
iret
sbb
test
and
ret
mov
cmp
mov
mov
or
inc
add
stos
rol
inc
hlt
jmp
test
push
loopne
pop
push
mov
stos
js
add
mov
shll
inc
sbb
mov
inc
xchg
dec
ljmp
ret
lret
inc
int
dec
sti
cli
int
daa
xor
jmp
jecxz
std
popf
insb
and
ficompl
pop
adc
sbb
push
fs
lds
test
mov
sbb
lcall
adc
pop
cltd
pop
add
mov
lea
jne
je
dec
push
out
jnp
lret
xor
jae
inc
out
data16
popf
enter
cmp
movsl
adc
frstor
lea
sbb
mov
mov
rorb
aad
add
jns
aas
cli
insb
fwait
lret
bound
sub
out
mov
sbb
pop
nop
das
push
cmp
and
mov
mov
mov
cmp
cmc
sbb
xchg
mov
imul
mov
jae
into
adcb
dec
xchg
push
adc
imul
jne
test
xor
push
mov
ret
jl
mov
ret
negl
sub
pushf
push
sub
cmp
fsubr
call
movsb
in
mov
mov
stos
in
and
loopne
pop
fisubrl
jno
test
fists
std
ja
jo
jae
cmc
rdtsc
fbstp
pop
mov
ljmp
mov
out
ja
or
xchg
and
xchg
lea
xor
adc
push
shlb
movsb
call
adc
in
cmp
mov
pop
push
out
mov
and
sti
outsl
adc
and
nop
clc
pop
sbb
sti
into
or
repnz
jns
push
mov
mov
pop
lea
mov
jb
shrl
cmp
lea
add
mov
andl
cmp
shr
fnstenv
or
cmp
xchg
lock
std
roll
movsb
addr16
in
or
cmc
pushf
enter
mov
daa
and
fnstenv
rcrl
fisttpl
ret
incl
imul
or
js
popf
jmp
repnz
movsb
out
cli
jmp
hlt
mov
sbb
pop
pop
cli
loopne
loop
aam
daa
fs
xor
cmpsb
and
cmpsl
loop
mov
xor
outsl
mov
arpl
rcll
wrmsr
les
mov
and
or
outsb
jb
int
adc
adc
mov
or
dec
add
adc
fs
push
dec
ret
int3
rcrb
shl
cmp
fwait
cmp
sahf
into
mov
out
ds
lret
xchg
test
dec
xor
lods
pop
ljmp
dec
ljmp
shl
or
pop
push
addb
xor
sub
fcmovne
fs
mov
add
scas
sti
add
arpl
mov
xchg
xchg
in
push
cs
inc
jp
aas
outsl
mov
and
or
inc
sbb
js
enter
je
stc
mov
outsl
test
decl
arpl
aam
or
cmp
icebp
negb
mov
outsl
aas
cmp
xchg
mov
testb
pop
adc
xor
cmp
and
mov
or
leave
imul
push
inc
test
mov
push
push
mov
cwtl
add
and
fdivl
jo
call
aaa
sti
dec
fwait
insb
into
pop
mov
mov
cmp
dec
push
arpl
sub
fcomps
leave
scas
adc
sub
lret
pusha
les
mov
mov
fnstenv
xchg
sbb
int
rcl
dec
jle
aas
jmp
mov
cli
dec
sub
inc
cmp
arpl
pop
and
push
outsb
cmpps
pop
mov
data16
push
jne
pop
into
jnp
cmp
jnp
mov
ds
jbe
jl
sub
pop
mov
sbb
jbe
xlat
sbb
jno
mov
in
mov
lahf
scas
out
ror
imul
mov
ficompl
jp
mov
inc
mov
movsb
cmove
ljmp
rcr
movsb
mov
sahf
sbb
mov
mov
or
and
pop
inc
push
jnp
in
mov
sbb
cmpsb
loop
hlt
add
in
shl
push
pop
inc
fnstcw
test
in
xor
cmp
jo
xlat
jb
fs
mov
imul
mov
mov
pop
mov
xchg
repnz
add
or
xor
rcl
mov
out
push
aad
sar
lcall
and
rcl
mov
out
sub
and
cwtl
pop
inc
int
idivb
stos
in
jp
push
jge
js
repnz
adc
out
jb
in
inc
repz
in
mov
adc
pop
cmc
and
mov
xor
lret
mov
js
es
xor
dec
cmpb
add
add
xchg
xchg
pop
mov
sub
jl
push
lods
pop
push
jbe
jns
adc
fmuls
lcall
pop
jecxz
xchg
adc
scas
fs
adcb
or
mov
pop
fs
adc
xor
test
sbb
cli
mov
movsl
push
xor
call
mov
loope
fdivrl
cmp
stc
lahf
fsubrl
sahf
ja
and
cmpsl
fisubrs
rolb
mov
fcomps
sub
cmpb
repnz
lahf
cmp
daa
push
pop
out
xchg
pop
push
mov
push
cmpb
jle
adc
push
sti
lods
dec
js
mov
lahf
sbb
lods
out
push
xchg
xchg
std
mov
jle
int
sbb
jle
jo
leave
jns
pushf
xchg
lcall
jbe
test
out
pop
pop
out
push
rcrb
dec
xlat
cmp
and
stos
mov
fxch
int
add
jbe
outsb
shr
mov
pop
lods
fistpl
loope
jo
fstpl
daa
mov
test
xor
jle
stc
cmp
gs
inc
das
push
rorl
subl
xchg
adc
call
scas
inc
orl
movsb
cli
jp
push
xchg
or
jb
bound
jno
mov
movsl
sub
add
test
adc
jge
movl
mov
add
es
sub
orl
mov
jns
sub
mov
jns
dec
mov
js
add
scas
xor
cmp
add
mov
stos
cld
jp
insl
cltd
mov
ljmp
nop
ret
lret
rcr
fists
add
mov
mov
mov
adc
ret
call
mov
xor
and
jecxz
or
std
cltd
push
pop
shrb
ljmp
cmp
or
pop
mov
add
rcll
arpl
or
sbb
push
dec
mov
jno
xlat
xchg
push
repnz
or
or
stos
pop
hlt
hlt
adc
int3
lcall
cmp
xor
jb
jbe
movsl
bound
pop
movsl
push
hlt
fmull
mov
push
loop
pop
mov
sub
xchg
lret
push
cmp
cltd
pop
sbb
fmuls
je
xlat
shlb
and
jmp
inc
pushf
pop
fwait
es
ret
xchg
cld
and
or
inc
xor
jns
push
cmp
pop
push
add
ret
mov
sbb
das
jmp
jnp
insl
sbb
or
es
or
push
cmp
mov
cmpsl
pop
stc
xchg
xchg
fbstp
leave
adc
xchg
push
sti
jmp
mov
mov
sti
or
testl
lods
sbb
add
fsubrs
adc
or
test
xchg
cmp
xor
lret
lea
mov
or
scas
insl
xor
and
xor
or
iret
lds
pushf
sub
jge
shll
clc
mov
cmp
pop
ds
push
shr
lret
insl
cmp
pop
xor
inc
insb
sbb
fimull
shll
fs
out
stc
push
push
cmp
inc
dec
ss
xchg
and
or
xchg
cmp
or
dec
sub
aad
out
jmp
push
push
adc
mov
fisubl
shll
pusha
push
addr16
fwait
std
xchg
xchg
mov
cmp
sbb
mov
push
clc
rcl
mov
stos
xor
fisttps
ret
repz
xlat
xor
or
outsb
rol
sbbl
or
push
lods
add
mov
cmp
cwtl
stc
loope
xchg
orl
or
out
es
mov
into
push
ficompl
test
clc
rol
pop
sbb
cmc
inc
dec
or
fsubrp
repz
fcmovnb
pop
pop
push
imul
lea
dec
scas
js
sbb
jge
dec
lods
jp
sub
push
dec
out
jle
add
test
jp
lock
pop
pushf
cmp
jl
imul
pop
inc
mov
pop
popf
popf
cld
or
xor
push
jge
out
pop
int3
lods
rolb
xchg
pop
enter
lea
fs
movsl
orb
mov
mov
push
gs
push
lret
insl
cli
push
adcb
or
mov
insb
enter
xor
xor
mov
mov
das
inc
daa
rcrl
push
push
fimuls
mov
add
loop
divl
mov
jmp
pop
add
fcmovbe
pop
mov
sub
mov
add
pop
lods
cmpsb
and
stos
adc
jecxz
xchg
sahf
jne
xor
pop
ficoms
mov
shl
xor
imul
bound
out
push
mov
xchg
sbb
clc
cwtl
pop
shl
popf
or
adc
xchg
pusha
xlat
mov
or
add
std
lea
or
cmp
leave
fsubl
sub
pop
push
mov
lock
push
and
repz
or
arpl
xlat
les
sbb
and
cwtl
and
outsb
push
mov
les
icebp
xchg
adc
push
aas
add
xchg
out
loope
aam
incb
and
gs
call
enter
add
pop
into
sbb
sbb
ljmp
or
xor
aas
ljmp
push
ret
adc
inc
push
sbb
test
mov
mov
sahf
and
lret
inc
push
xchg
or
ljmp
adc
or
lret
std
add
clc
sub
mov
add
dec
clc
mov
pop
push
mov
inc
bnd
fcmovnb
int3
adc
rcll
sti
jbe
cmpsb
add
ds
mov
inc
into
and
xchg
fstp
cmp
mov
lret
or
loop
aaa
mov
es
sub
add
push
stc
xor
cmp
mov
out
mov
clc
sbb
push
movsw
adc
xor
fsub
cld
fwait
sub
incb
ud0
lea
in
popf
sbb
mov
fs
jg
cmp
adc
fadds
and
cmpsl
jno
jo
icebp
dec
push
scas
mov
and
shrb
mov
aad
push
testb
outsl
std
popf
pop
or
jnp
fdivs
shll
out
mov
mov
lods
inc
push
fiaddl
imul
ret
ret
dec
aam
xchg
ret
mov
mov
hlt
sbb
out
mov
clc
mov
pusha
and
jge
stos
clc
orl
sbb
xor
rcll
scas
push
xlat
hlt
adc
add
add
fsubs
mov
ljmp
lcall
jo
cmp
dec
rcll
jle
ret
ficomps
push
scas
sahf
add
xchg
jbe
subl
jmp
and
gs
pushf
loop
outsb
cmp
push
sbb
adc
dec
dec
faddl
bound
clc
popf
xor
or
pop
cmp
fistpll
push
pusha
sbb
sbb
pusha
sbb
xchg
dec
je
mov
mov
xchg
jnp
cmp
pop
mov
cld
xchg
test
sub
xor
add
add
mov
movsb
mov
jg
jno
mov
sub
enter
push
pop
add
xor
outsl
mov
ja
pop
push
cmpsl
insb
stos
inc
xchg
cltd
hlt
and
push
adc
fbstp
and
repnz
outsl
clc
stos
xor
lcall
ljmp
sbb
stos
push
push
xchg
dec
rorl
std
sub
xchg
in
mov
repz
mov
adc
push
xlat
out
push
xorb
sbb
cmp
lcall
fsts
out
out
into
dec
push
push
adc
mov
inc
jecxz
xorb
dec
stos
shll
mov
mov
hlt
xchg
xor
fiaddl
fcmovbe
mov
inc
out
inc
nop
cmpsl
loopne
push
xor
xchg
std
mov
pop
cmp
mov
mov
mov
cld
xchg
pop
xchg
push
js
insl
xlat
mov
and
addr16
xor
mov
hlt
test
mov
adcl
dec
mov
cmp
add
lret
insb
pop
mov
mov
inc
ret
inc
push
test
mov
xchg
push
adc
mov
push
mov
mov
push
xor
pop
out
mov
adc
scas
test
jecxz
inc
popf
adc
enter
outsb
jnp
pushf
adc
cmp
repnz
sbb
arpl
adc
cwtl
add
addb
lods
mov
aas
loopne
xchg
xlat
sub
ja
ret
mov
fcomps
or
mov
push
jbe
nop
push
dec
dec
sbb
cld
jo
push
sbb
sub
push
mov
ljmp
sub
mov
mov
xchg
sub
aas
adc
mov
in
fcompl
and
adc
xor
xor
add
push
jb
js
push
fldl
dec
fcoml
mov
pmullw
mov
ljmp
jle
gs
xchg
je
mov
mov
xchg
in
cmp
sahf
jl
out
das
adc
cmp
jl
mov
mov
add
cwtl
cmp
fidivl
xor
dec
mov
popf
test
inc
insl
pop
mov
lret
jns
mov
pop
lahf
cmpb
sbb
aas
mov
xchg
data16
shl
push
rcrb
sub
xchg
in
in
les
xchg
pop
fcompl
and
mov
mov
js
lret
test
or
cmc
adc
pop
test
test
cmp
insl
mov
jnp
jl
pop
imul
cmp
sub
adc
lret
jbe
test
les
pop
push
or
push
push
shlb
fwait
mov
bound
cmpsb
adc
inc
inc
outsb
or
pop
ljmp
iret
pop
nop
jge
xor
pand
scas
sub
mov
dec
fs
mov
lock
cmp
mov
into
leave
dec
out
mov
jge
aas
xchg
mov
outsb
and
sbb
xchg
jp
test
aaa
xor
sub
sub
test
push
mov
push
mov
shrl
pop
mov
movb
imul
outsl
out
push
xor
adc
gs
jo
xlat
popf
add
push
stc
hlt
cli
cmp
sbb
test
fistl
call
dec
sub
mov
push
ficoml
sbb
ret
jmp
loope
rcr
push
lret
jg
adc
and
and
pop
adc
out
sub
push
ret
dec
pop
jg
dec
gs
and
adc
xlat
mov
xor
sbb
lea
sbb
arpl
out
jb
inc
ljmp
mov
mov
lods
push
mov
cs
addr16
shl
bound
movsb
lods
mov
mov
imul
pop
inc
add
mov
mov
fcomip
ljmp
mov
subb
and
mov
inc
adc
in
xchg
inc
sbb
mul
mov
cli
add
cmp
cld
xchg
lret
inc
jmp
xchg
popf
aaa
push
sti
xchg
int3
inc
out
or
movsb
push
andl
and
test
and
jnp
movsl
mov
out
mov
sub
push
and
clc
dec
test
jge
cmpsb
xor
stos
cmp
jb
orl
lds
pushf
call
notl
jnp
mov
insl
iret
sub
cltd
mov
pop
push
mov
ds
popa
ficoml
jne
jecxz
adc
dec
mov
sbb
mov
sub
inc
clc
push
fsub
dec
sbb
xchg
xchg
sbb
into
mov
es
mov
add
mov
icebp
sbb
rcr
inc
cmpl
mov
stos
sbb
lods
xchg
push
jl
fbld
mov
lret
repz
loope
jnp
mov
cmp
mov
lods
xchg
es
jo
pop
dec
int
jno
mov
insb
in
nop
adc
in
js
movsl
pushl
std
xchg
mov
loopne
ljmp
das
cmp
add
popf
mov
lcall
add
mov
push
xchg
fs
adc
mov
inc
popa
adc
int
cli
cmp
mov
pop
cwtl
sbb
repz
into
dec
into
stc
xchg
stos
dec
cwtl
mov
cld
pop
scas
and
or
adc
lea
fsubrs
addb
cmp
push
gs
and
daa
jno
or
mov
sarb
mov
dec
subb
adc
or
fdivrs
sti
aaa
mov
mov
bnd
clc
jg
iret
mov
jno
test
mulb
cwtl
cli
xchg
xor
dec
mov
hlt
es
pop
push
jb
add
dec
sbb
pop
out
xchg
std
inc
loopne
mov
jnp
lods
jo
push
add
mov
and
xchg
mov
adc
fistps
push
mov
fwait
outsb
pop
mov
fcmovu
sub
mov
xor
push
xchg
aad
add
fisubs
mov
in
ss
mov
push
movsl
sbb
lcall
jae
sbb
inc
dec
pop
sub
imul
es
test
xor
mov
les
sub
ficomps
sub
rcll
mov
jecxz
leave
and
dec
adc
push
inc
adc
sub
jb
xchg
sbb
sub
aad
ret
inc
loop
sub
inc
lcall
mov
aam
jb
lret
movsb
cltd
add
jg
adcl
xlat
pop
aaa
xchg
fsqrt
int3
lret
ja
nop
lock
pop
cmp
jp
cmp
mov
mov
xor
jl
or
test
pop
lea
sbb
jbe
mov
sub
mov
and
test
shufps
push
fidivrl
and
jns
in
cmpsl
gs
mov
mov
imull
jno
jne
or
fimull
push
pop
lods
test
cwtl
lock
xor
adc
cmc
hlt
loop
mov
clc
mov
dec
pop
mov
ret
ds
xchg
pop
std
pop
stos
push
and
push
popf
or
loope
inc
adc
xchg
js
sti
mov
mov
xchg
mov
mov
aam
mov
movb
out
addr16
adc
sub
add
addr16
dec
dec
cmpsb
imul
imul
dec
and
and
mov
mov
inc
mov
testb
frstor
mov
in
sbb
sub
mov
ss
mov
mov
xchg
movsb
std
cmp
push
mov
addr16
xchg
hlt
popa
fs
dec
jns
jnp
ret
ja
jno
je
aam
cwtl
imul
mov
jmp
and
sbb
nop
and
inc
popf
and
xor
push
xor
mov
test
cmp
leave
inc
test
sbb
pushf
mov
pushf
mov
adc
test
decb
xchg
push
dec
fs
mov
in
loop
mov
add
lret
xor
out
sub
dec
cld
test
icebp
test
sbb
adc
mov
cmp
and
push
add
xchg
cltd
test
hlt
or
in
pushf
out
cmp
dec
aam
roll
mull
inc
adc
lock
fmul
es
xchg
loopne
jmp
xchg
inc
push
faddp
dec
int3
mov
data16
icebp
lea
adc
jns
lret
in
pop
fcmovnb
inc
addb
hlt
scas
sub
mov
fists
cmp
cmpsb
xor
pop
dec
sbb
xor
mov
mov
sub
sbb
in
call
hlt
orb
cld
shrl
out
mov
nop
icebp
outsb
push
mov
lods
cmpsb
int
and
push
mov
cli
jo
dec
int
insl
add
sub
mov
jge
addr16
les
push
xor
stos
cmp
jno
xor
pop
push
sti
vpunpcklwd
std
iret
cmpsb
setb
xor
xlat
lds
xor
in
adc
aam
mov
jnp
stos
and
insl
movsl
or
adc
adc
jno
and
rolb
imul
or
fwait
inc
enter
out
jnp
cmc
cmp
xor
movsb
stc
outsb
mov
xorb
jno
push
inc
mov
inc
sbb
imul
cmp
jno
popf
sub
in
test
rcrl
into
push
add
dec
xacquire
mov
or
push
inc
inc
inc
xlat
lcall
jecxz
mov
sti
push
dec
in
aam
mov
inc
mov
icebp
aas
pop
jecxz
jle
mov
cmp
in
movsl
add
xchg
testb
push
in
jg
in
pop
test
mov
jbe
loope
popf
arpl
fwait
addr16
mov
jo
mov
repz
inc
popf
mov
fmuls
cmpsl
xor
xor
lret
cmp
sub
popa
adc
js
mov
call
pop
test
pop
push
pop
sbb
das
dec
std
cltd
or
arpl
cmp
cmp
lcall
adc
insl
pop
xor
les
insl
lcall
std
sbb
ds
fidivrs
pop
cs
jecxz
outsl
int
out
in
sar
inc
push
gs
insl
into
cwtl
mov
out
inc
jecxz
fcmovnu
inc
outsl
in
arpl
xor
xchg
mov
add
stos
int
test
movsl
mov
movsb
in
cs
shrl
inc
mov
sbb
and
jg
xchg
mov
lods
icebp
pop
mov
out
gs
sbb
cmp
pushf
mov
push
or
outsl
fs
int
pop
jae
sub
clc
jnp
nop
sub
mov
inc
dec
and
lods
movsb
adc
outsb
xor
jae
idivl
fwait
cmp
stos
in
scas
pop
int
mov
stos
es
aas
xchg
les
xchg
add
les
out
out
lods
stos
cmp
scas
or
xchg
and
mov
sbb
xchg
adc
fs
push
add
nop
into
and
mov
pop
mov
sahf
cwtl
jo
data16
sbb
and
hlt
jne
pop
aad
inc
adc
lret
inc
fmulp
fs
adc
xchg
mov
mov
sar
jbe
jno
stos
ficoml
cmp
cmpsb
ljmp
scas
sub
jmp
jo
push
ds
bound
fsubr
cli
jecxz
dec
mov
aam
arpl
jo
stos
addb
loopne
loope
jno
fstpt
dec
rcrl
pop
fsubrl
cmp
data16
dec
outsl
lock
xchg
cvtps2pd
out
inc
inc
cli
pop
or
add
cmp
mov
mov
inc
outsl
dec
rorb
rclb
adc
lods
jno
repnz
or
push
jae
and
shll
shrb
dec
nop
xchg
pusha
add
ret
push
enter
scas
ret
fistps
or
push
mov
insb
push
xchg
sbb
mov
int3
into
cmp
scas
pop
out
cmp
jmp
lret
ficompl
sbb
sub
sbb
mov
cmp
mov
jne
push
mov
into
imul
je
mov
scas
cmp
scas
inc
sbb
inc
sub
mov
or
jp
mov
mov
outsb
inc
movsb
pop
mov
sti
daa
or
lds
pop
cwtl
cld
test
cmp
mov
ds
addr16
dec
mov
ljmp
or
popf
lcall
fwait
addb
mov
fsubr
divb
popa
jmp
push
or
nop
ss
mov
push
and
aaa
add
push
mov
ljmp
mov
mov
mov
fdivp
cld
or
std
aas
inc
sub
pop
push
fs
xchg
adc
roll
jno
inc
push
mov
cmp
dec
into
clc
test
inc
imul
aam
sbb
xchg
into
iret
lds
dec
xchg
outsb
aaa
filds
ret
into
pop
shrb
sbb
inc
popf
ss
jne
sbb
lahf
dec
cmpsl
mov
fsub
push
out
inc
ljmp
adc
cmpsl
fmuls
and
imul
and
repz
adc
push
cwtl
psubsw
push
xchg
rorb
cmp
lret
cmp
pop
cltd
std
insl
or
inc
xchg
pop
sub
std
mov
adc
int3
lahf
jno
sbb
scas
push
mov
je
push
sahf
icebp
mov
cmp
fidivrl
das
add
arpl
mov
daa
pop
je
fisubl
bound
jmp
push
rep
fistl
sub
inc
fildll
lods
shll
sahf
and
dec
sub
dec
mov
cmc
aaa
push
dec
daa
mov
popf
sub
sahf
lea
dec
or
mov
rclb
mov
leave
mov
shrl
lretw
in
and
adc
sarb
and
sub
shrl
lods
es
pop
stc
sub
pop
outsb
mov
fcom
and
scas
xchg
jmp
call
test
xor
jb
pop
stc
pop
testb
jp
pop
xor
and
fsubrs
das
int
cmp
inc
jle
cld
push
mov
jg
or
xor
mov
ja
xlat
sbb
std
push
jbe
xchg
xchg
sbb
icebp
and
out
iret
orl
nop
mov
mov
jle
mov
jne
into
fistl
mov
cmp
das
push
repz
call
add
das
sub
lods
je
xchg
ror
xlat
sbb
mov
mov
add
xchg
xor
imul
iret
dec
scas
outsb
lcall
imulb
dec
adc
push
je
js
push
jg
cmp
pop
imul
es
daa
cmp
cs
pop
and
push
icebp
outsb
adc
out
push
lods
and
dec
nop
jnp
add
je
cwtl
dec
add
lea
into
cld
fbld
cmp
add
lea
lret
ss
cmpsl
dec
dec
in
insb
jns
lods
push
mov
xor
inc
gs
cltd
ja
xor
imull
fdiv
call
js
nop
mov
inc
and
test
popa
popf
mov
mov
shll
les
lods
cld
add
pusha
sbbl
push
mov
inc
sbb
scas
mov
cld
loopne
xchg
in
or
insb
xchg
dec
sahf
xchg
cmp
arpl
dec
int3
ret
test
xor
xchg
dec
ds
aas
je
lret
and
repz
shlb
adc
xchg
dec
pusha
cmp
shl
and
out
cmp
and
ror
and
mov
mov
std
lcall
xor
cwtl
push
in
rolb
xor
dec
mov
int
popf
sub
iret
mov
jl,pn
inc
and
aam
add
mov
into
addb
sahf
or
sbb
cmp
push
inc
outsl
xchg
mov
jmp
jb
pop
push
cmpsl
enter
bnd
pop
enter
lcall
arpl
or
cmp
xor
sahf
pusha
cwtl
sbb
sbb
or
jb
je
call
add
mov
addl
sbb
shll
push
xor
adcl
je
cmc
xlat
test
xor
ja
int3
push
movsb
jbe
daa
jbe
arpl
mov
mov
outsb
jl
mov
lods
repz
sub
mov
cmp
and
clc
mov
push
jb
cmp
repz
rcrb
and
inc
fdivrs
mov
sti
test
mov
divl
push
filds
outsb
arpl
mov
jno
imul
into
or
aas
push
out
mov
pushf
imul
adc
mov
sahf
mov
insb
mov
xchg
sbb
adc
sbb
aaa
loope
lods
movsl
mov
mov
and
pop
shl
loope
mov
sbb
je
mov
xchg
push
shrl
push
stos
jge
out
bound
pop
sub
push
sbb
sub
mov
movsl
fdivl
cmp
mov
mov
outsl
and
mov
adc
adcb
push
xor
mov
rorb
loop
jp
test
adc
insl
mov
inc
bound
jge
mov
sbb
xchg
insb
lock
inc
xor
pop
inc
add
lahf
sbb
out
iret
mov
mov
bound
jg
adc
orl
lods
loop
push
add
mov
xchg
bound
sarl
js
jl
cmp
push
sbb
sub
orl
jp
inc
inc
push
pop
dec
add
test
jo
mov
gs
bound
popa
sbb
sbb
fsubrp
mov
incb
fcompl
sbb
dec
pushf
outsb
leave
and
inc
adc
stos
add
shll
fldenv
rcr
adc
bound
inc
mov
adc
pusha
std
loope
clc
andb
xchg
fcomps
inc
add
cmpsl
mov
jns
push
jo
fs
or
mov
test
cmpsb
jb,pt
inc
loopne
pop
pop
icebp
mov
adc
fstpt
mov
jae
mov
sbb
sahf
sarl
repnz
stc
adc
push
stc
or
or
es
and
in
ja
sub
mov
jl
sub
sbb
rorb
std
xor
les
cmpsb
mov
pop
sub
cmp
rol
adc
ljmp
out
call
mov
or
jmp
fcoml
inc
pop
mov
dec
std
fmuls
sti
cmp
sub
mov
dec
in
repnz
sahf
arpl
cmpsl
daa
sarb
mov
jno
cld
pop
rcll
or
cwtl
enter
xor
clc
push
rol
enter
or
scas
clc
shr
adc
pushf
lods
pop
push
push
jnp
and
daa
xor
cli
shl
push
sub
daa
jle
xchg
mov
pushf
push
jmp
lods
or
push
inc
mov
pushf
jnp
mov
sub
and
mov
ficoml
cmp
cs
aam
jnp
lods
xor
cmp
add
xor
or
stos
xchg
ret
inc
sbb
pop
scas
inc
mov
mov
adc
sbb
or
daa
xchg
inc
inc
push
pop
sbb
aam
pop
pop
neg
cmpsb
lret
int
and
mov
mov
faddl
out
ud2
shlb
imul
adcl
movsl
xor
xadd
inc
cmpsb
jo
negb
aaa
sub
enter
add
dec
ljmp
cwtl
leave
dec
fstpt
mov
mov
sbbb
pusha
leave
sbb
sbb
sub
add
fists
push
aaa
lock
loope
icebp
dec
leave
pop
popf
es
cmp
arpl
mov
inc
iret
faddl
xor
sbb
or
pop
je
dec
mov
xchg
fidivrs
jp
mov
and
jle
in
inc
pop
sahf
repnz
push
cs
cltd
fsubrl
mov
stos
and
in
ret
inc
xlat
shl
out
lods
cmc
mov
and
ja
popf
mov
popa
push
dec
add
mov
enter
out
jle
cmp
xorl
stos
cmp
mov
inc
push
mov
xchg
or
int3
hlt
and
mov
xorl
jg
clc
gs
mov
cmp
lcall
push
adc
testl
push
push
mov
leave
add
in
cmpsl
and
out
or
popa
inc
pop
repz
lea
shl
cmp
out
out
gs
mov
xchg
movsb
mov
in
or
xchg
das
icebp
sbb
cmpsl
push
lock
insb
push
jg
sbb
stos
mov
idivl
mov
lods
mov
movsb
jge
sbb
jbe
lds
in
xchg
repz
cmp
inc
insb
add
sbb
or
push
fucomp
test
imul
xchg
mov
aas
decl
clc
push
in
xor
cmp
xchg
mov
and
cmp
jp
insb
adc
pushw
cmp
test
lret
cmp
inc
push
push
sub
push
fiaddl
mov
add
dec
mov
gs
cli
sbb
mov
sbbl
mov
cmp
mov
fmuls
ja
inc
enter
in
or
int
aam
sahf
inc
scas
faddl
divl
je
cmp
sub
cmp
out
mov
fcmovnb
xor
mov
lock
push
add
mov
xchg
in
cs
xchg
xor
mov
or
mov
xor
hlt
or
imul
enter
mov
aas
loope
ret
movsl
ljmp
subl
and
outsb
push
lods
jno
lods
scas
xchg
dec
jb
xchg
mov
in
cmpsl
inc
cwtl
sti
xor
daa
push
jge
rcl
je
xor
add
mov
mov
ljmp
jo
pusha
mov
mov
jge
call
cld
and
insb
lds
cmp
push
gs
popa
pop
repnz
fcomi
cmp
pop
add
out
in
cmp
adc
jmp
jle
jnp
in
mov
shlb
push
decl
sar
sahf
loope
and
cltd
je
push
std
jg
sub
js
cli
add
cwtl
sbbl
je
cmp
mov
scas
push
pop
wrmsr
in
enter
or
pop
adc
cmp
mov
push
ljmp
fldl
sub
bound
cwtl
divl
push
push
cmp
mov
pop
adc
into
xor
jge
mov
subb
mov
mov
xchg
cmp
lcall
adc
push
xor
leave
fistps
pop
xchg
cmpsl
nop
lods
pop
ret
cli
daa
packsswb
dec
adc
adc
sub
fs
outsl
pop
orl
mov
hlt
sahf
mov
rcll
stos
ret
inc
call
cwtl
add
jecxz
or
inc
mul
imul
movsb
xorb
addr16
fstpl
or
repz
ljmp
mov
ss
mov
cmc
fisubl
rorl
inc
push
inc
shrb
push
or
leave
adc
nop
mov
loopne
movsb
push
lds
adc
jle
adc
pop
cld
inc
ljmp
jno
mov
pop
sbb
movsb
lret
scas
ror
xchg
push
sub
lret
cmpsb
inc
jle
dec
dec
adc
ljmp
mov
in
or
dec
lds
daa
push
enter
mov
inc
sbb
sbb
in
cli
pop
push
sbb
push
xor
data16
pop
shl
xchg
scas
cli
stos
iret
pop
enter
fadd
cmpsl
lcall
cmpsb
mov
sbb
bound
mov
pop
cmp
test
int
push
ret
mov
push
fs
ds
push
cmp
xchg
ss
push
xor
mov
push
ret
dec
mov
jmp
add
fcoms
lret
sti
bound
movsl
pop
or
push
push
leave
test
gs
and
jle
fst
xchg
mov
push
mov
sbb
movsb
mov
or
xor
or
xor
jne
adc
xchg
inc
inc
cmpsb
adc
xor
call
scas
mov
mov
push
shlb
es
incl
lret
fdivs
xchg
pop
enter
xchg
pop
jmp
push
mov
ss
and
dec
xchg
outsb
cmp
cmp
mov
push
js
or
mov
arpl
loope
mov
fs
shll
and
cmpsl
aad
in
xchg
push
dec
arpl
dec
mov
loope
xchg
mov
push
dec
xchg
sub
xlat
cli
mov
sbb
jbe
into
mov
and
mov
fcomps
cmp
dec
mov
pushf
jnp
pop
loop
pusha
cmpsl
or
popa
clc
loopne
mov
shrl
lock
lahf
inc
xor
jp
push
mov
sarb
cs
call
fwait
pop
xor
test
pop
cmpsl
shrl
jnp
out
cmc
mov
gs
xchg
lahf
jb
cmp
push
decb
bnd
inc
adcb
pusha
adc
jno
test
shll
daa
push
flds
fistpl
push
fcomp
dec
pushl
jne
mov
and
in
jecxz
adc
xchg
dec
dec
fsubl
or
movsb
xchg
dec
aas
adc
lea
insl
test
xchg
jge
lcall
rcll
jne
inc
dec
data16
or
iret
into
jae
cmp
sti
stc
pushf
add
push
cmp
cmp
or
jecxz
xor
movsb
and
rorl
nop
push
cmp
mov
stc
es
xchg
jns
and
scas
sbb
xchg
sub
sub
push
icebp
sub
mov
cmp
pop
add
jp
inc
pop
cmc
leave
sub
xchg
inc
adc
faddp
sub
xchg
pop
xchg
out
cs
xlat
or
ja
sub
jae
cmp
pop
clc
sbb
mov
mov
push
mov
jmp
daa
int3
shrl
cmp
fxch
mov
fsubl
push
pop
xor
mov
cmpsb
adc
adc
xor
or
divl
scas
test
adc
test
push
push
jae
call
bnd
and
pop
lds
inc
mov
stos
push
lahf
pop
arpl
insl
outsb
and
lea
xchg
arpl
pop
sti
mov
cmp
addr16
es
pop
cwtl
pop
mov
das
jns
push
gs
jmp
imul
and
aad
sub
sub
iret
ss
jae
shlb
add
movsb
mov
mov
test
popf
xchg
mov
mov
data16
pusha
cmpsl
arpl
dec
into
cmp
cmc
sahf
jae
mov
fcomi
movsb
gs
xchg
mov
adc
sub
pop
testb
dec
jnp
jo
out
test
mov
js
fstl
faddl
divb
pop
xchg
inc
adc
aaa
jno
je
sbb
add
mov
movsb
loop
inc
ljmp
movsl
fdivrs
cmpsl
or
std
into
inc
mov
dec
mov
push
and
lock
lea
ljmp
int3
lcall
ret
cmp
jge
imul
xchg
add
jecxz
call
sub
cmpsb
jae
fisubrl
jge
flds
lret
je
fnsave
xor
rcll
aaa
aad
inc
lods
daa
mov
loop
leave
sub
xchg
scas
jg
mov
push
dec
andl
iret
arpl
notb
mov
mov
push
test
jo
ljmp
add
jmp
xchg
or
daa
mov
jae
cmpsb
in
stos
or
or
add
pop
cli
out
repz
sbb
nop
shr
or
xor
lods
sub
xor
push
test
jmp
adc
testb
iret
lock
push
jno
fisubs
mov
aam
pushf
or
add
gs
lret
pop
test
xchg
cmpsl
call
je
and
add
sub
addb
pusha
mov
jecxz
cmp
mov
enter
mov
aad
jecxz
out
and
dec
or
adc
or
in
ja
cld
adc
icebp
data16
jae
add
testl
jl
mov
sub
mov
mov
sbb
mov
or
or
jmp
pop
push
inc
in
gs
pop
mov
pop
cs
add
and
loope
ja
fnstenv
out
ss
xchg
mov
into
movsl
dec
cwtl
cmc
cmp
pop
push
mov
or
add
fwait
icebp
pop
inc
popf
test
clc
pop
dec
mov
mov
adc
jmp
or
ljmp
pop
sub
mov
xor
addr16
fists
sbb
mov
mov
in
mov
aad
or
xchg
cmc
icebp
sbb
popf
mov
or
or
jmp
leave
mov
and
xor
inc
rcl
adc
mov
jmp
scas
push
test
cmc
jb
mov
cmp
xor
adc
sarb
dec
xor
push
mov
int
or
jno
jle
in
mov
sub
adc
xor
mov
shlb
fcmovnbe
cmp
dec
sarb
push
jne
rcll
adc
fiadds
out
add
insb
ret
enter
jbe
sub
test
lret
jmp
out
stos
loop
jns
popa
push
or
loopne
popf
fcomip
or
loop
sub
das
addr16
loope
xor
jbe
jg
and
mov
out
fcmovb
stos
lock
test
clc
mov
adc
mov
lret
out
xchg
ret
xchg
cli
sub
test
mov
fcompl
xchg
add
data16
or
add
inc
das
scas
repnz
andl
jnp
push
inc
add
out
gs
adc
lods
jbe
mov
xor
mov
cli
or
cmpl
jno
fmull
out
xlat
dec
mov
test
pcmpeqd
inc
enter
pop
scas
xchg
push
and
add
mov
cmpsb
lahf
into
jecxz
lahf
or
pop
out
pop
movntps
inc
fnstcw
sbb
lahf
dec
pop
adc
push
jp
out
push
push
push
lea
lods
inc
cmc
sbb
scas
scas
jmp
jl
out
add
or
test
stc
lods
push
xchg
lahf
js
mov
cmp
out
fisubrs
icebp
or
xchg
sbbl
xchg
mov
sbb
sub
fiaddl
cmc
inc
jae
mov
sti
loope
pop
mov
jb
and
lret
jmp
inc
xchg
lahf
in
cmc
ss
xor
push
iret
sbb
pop
pop
mov
ss
pop
arpl
push
and
stos
xor
shlb
xchg
inc
xor
xor
hlt
mov
pop
pop
and
push
xchg
push
test
jbe
dec
in
cmp
ror
lret
push
push
aad
loopne
sub
push
cmp
movsl
aaa
lret
xchg
xchg
lods
in
or
and
or
push
jle
aaa
int3
ret
fcompl
mov
push
icebp
xor
out
dec
fistpl
pusha
popf
pop
dec
and
push
jnp
fucomp
daa
mov
jns
rcl
ljmp
insl
pop
pop
pop
jno
idiv
repnz
lea
xchg
addl
mov
jge
rcrb
das
mov
jmp
push
and
dec
mov
daa
pusha
iret
sbb
icebp
mov
sub
adc
pop
xchg
gs
aam
mov
imul
mov
mov
mov
fucomip
das
and
arpl
xchg
hlt
hlt
dec
or
cs
push
mov
imul
icebp
jmp
adc
es
ss
push
pop
out
mov
es
jmp
enter
jp
out
ja
fstps
dec
sahf
lods
rorb
jb
shll
jae
loope
mov
mov
pop
je
jns
out
xorb
fimull
cmp
fwait
daa
test
fwait
dec
sbb
sub
ret
cli
jecxz
pop
mov
out
mov
add
jne
inc
fldcw
mov
scas
pop
mov
cmp
ljmp
lret
mov
jbe
les
cmpl
fwait
cmp
adc
mov
aad
out
add
adc
dec
xor
jmp
mov
push
std
adc
sub
out
adc
loope
mov
in
test
xor
insb
clc
enter
jecxz
in
stos
sub
cmp
lods
mov
push
out
aas
iret
push
dec
imul
aaa
push
sbb
ds
sub
test
add
sub
push
test
outsb
aam
push
test
and
adc
lods
fisubs
jns
dec
xor
push
xchg
enter
dec
or
fiadds
push
enter
or
call
or
mov
add
xchg
mov
xchg
dec
jae
dec
push
add
adc
cmp
inc
scas
outsb
dec
in
adc
inc
sub
xchg
test
test
loope
xchg
fsubs
inc
and
sbb
xor
mov
aaa
inc
push
and
vhsubpd
rclb
add
imul
adc
enter
jle
sbb
mov
dec
iret
sub
in
mov
cmp
xchg
ja
sbb
adc
mov
cs
push
xor
out
sbb
pop
aas
cwtl
jle
xor
and
xor
inc
jp
jmp
out
fidivs
inc
loope
int
push
nop
ret
inc
lods
xchg
and
mov
inc
das
mov
push
rol
std
sbb
lret
mov
sub
repnz
mov
push
jns
mov
sub
jbe
push
test
mov
mov
and
popa
jne
and
cmpsb
mov
push
and
bound
loope
fisubrl
and
and
xchg
mov
and
loope
jp
aas
push
and
aaa
and
cld
mov
punpckhdq
dec
adc
out
sbb
pop
repnz
cmpsl
mov
jo
ds
les
flds
pop
push
imul
mov
sub
sub
shrl
cmp
rorb
cmpsl
push
enter
dec
jg
fwait
int
popa
loope
mov
bound
dec
insb
cmp
lods
shl
je
aam
sub
cmpl
xchg
addr16
sbb
jae
out
fildl
sbb
mov
loopne
mov
adc
int3
test
ret
or
ja
ret
xor
mov
rcl
mov
or
inc
fbld
mov
jge
lret
jb
or
fdivr
outsl
sbb
mov
scas
xor
push
repnz
jno
lods
cmp
aaa
bound
test
mov
pop
pusha
in
push
push
pusha
mov
cltd
icebp
movl
fstpl
repz
nop
sub
sbb
ds
adc
shlb
mov
jnp
out
push
stos
sysexit
sub
pop
gs
inc
bnd
dec
in
mov
loop
jbe
mov
mov
adc
lcall
jg
pop
fsubrl
push
jp,pn
adc
ja
cmp
lds
sbb
cmp
push
cmp
mov
pop
mov
sbb
sub
pop
jl
out
call
lret
daa
adcb
test
and
inc
pop
loopne
xchg
and
sub
rorl
pusha
add
and
xchg
push
imul
mov
cmpsl
xchg
or
std
rol
adcl
inc
cmc
loop
popa
jo
jp
cs
fisubrl
or
in
xchg
loop
adc
ds
int3
xlat
shl
stos
xchg
popf
cmpsb
push
mov
mov
mov
xchg
or
and
mul
push
push
loop
imul
add
xor
and
lock
and
pop
clc
mov
cmp
ret
jbe
mov
in
movsl
dec
inc
mov
out
mov
mov
test
jl
dec
or
inc
push
cmp
cld
std
test
jno
inc
jl
call
sub
ror
jg
in
jo
sbb
adc
lahf
inc
lock
jmp
adc
gs
cmp
in
adc
cmp
pop
loopne
pop
fcmovne
lods
adc
mov
pop
out
sub
jae
cmp
jbe
inc
dec
push
out
dec
cmpsb
adcb
inc
test
or
ja
jns
add
cs
jmp
shlb
mov
fistpl
test
add
mov
popf
pop
or
outsb
fstpl
aam
test
and
dec
xchg
jne
fistpll
in
lret
push
inc
inc
dec
pop
arpl
mov
sub
pushl
cli
jae
repz
in
aas
sub
cmp
xor
and
pop
lds
cld
stc
jmp
mov
push
sahf
adc
call
xor
jmp
insl
das
bound
dec
adc
xor
mov
int
mov
daa
fimuls
xlat
cld
jg
cmpsb
cmpb
test
popf
dec
jbe,pt
sbb
outsb
repz
sub
sub
int
clc
hlt
push
push
pusha
sub
insl
sahf
push
inc
cmp
pop
fildl
mov
cmpsb
jge
fildl
mov
test
add
mov
orl
mov
mov
add
cmp
mov
addr16
sub
inc
dec
js
subl
stos
xor
add
pop
test
lcall
sbb
pop
push
add
hlt
scas
cmp
mov
mov
out
insl
out
inc
sub
xor
xor
mov
inc
push
and
jns
mov
dec
xor
mov
insl
cli
pop
popf
data16
cltd
shrl
inc
cmpsb
imul
outsl
test
pop
arpl
or
in
xor
stos
ficoms
mov
sbb
or
add
int3
mov
sub
aas
movsl
lret
aas
dec
out
lcall
pop
dec
or
lret
cmp
add
mov
mov
rcrl
jns
push
mov
nop
xchg
mov
inc
fmulp
mov
aas
jb
out
pop
call
sbb
ja
rorl
pushf
rcl
adc
adc
sahf
fsubrl
cs
add
in
dec
dec
sbb
adc
js
xchg
inc
jecxz
std
cmp
in
scas
mov
mov
enter
addr16
sub
push
je
aad
fs
xlat
mov
stos
mov
vmovd
pop
lods
adc
push
mov
fdivr
lods
enter
lods
out
mov
xchg
mov
clc
add
and
aas
sbb
jmp
xchg
ja
cltd
aam
lret
or
loop
jecxz
dec
repnz
inc
inc
mov
lods
aaa
fwait
iret
cld
cmp
add
xchg
jne
push
out
push
outsl
ss
mov
cmp
cltd
imul
out
and
test
je
loope
mov
int
mov
jae
imul
inc
call
mov
ret
xchg
cltd
and
pop
sub
sub
pop
clc
cltd
xchg
divl
push
divl
out
sbb
bound
add
jmp
std
ja
cli
xchg
jg
in
jo
aad
movsl
jge
loope
cmpl
and
shll
lcall
fmuls
dec
call
lea
inc
repnz
pop
cmp
insb
and
dec
andl
jmp
popf
je
mov
jl
sbb
cmp
and
repnz
leave
ja
pop
sbb
repnz
into
hlt
jbe
add
and
popf
fildll
inc
push
cmp
decb
sbb
mov
test
test
loope
xchg
sahf
xor
lret
push
or
add
ffree
test
loop
mov
push
dec
or
xor
xor
pop
jge
dec
fistl
sub
mov
dec
movb
mov
adc
std
pop
loope
cmp
and
cmpsb
cmpsl
or
and
xchg
loopne
les
repnz
pop
cld
push
cmpsl
test
cld
pop
push
mulb
mov
nop
hlt
xor
scas
popa
push
add
les
sbb
and
mov
mov
add
xchg
pop
pop
loopne
xor
je
scas
xlat
xor
dec
hlt
pop
test
xor
inc
pushf
imul
jno
ret
dec
jle
jl
hlt
sub
sub
rep
popf
shlb
loopne
stos
dec
and
or
repz
push
data16
int
xchg
add
fists
lret
mov
movsl
mov
mov
adc
ljmp
daa
add
bound
int
les
mov
and
in
push
inc
and
dec
jb
adc
test
jb
out
sbb
leave
test
mov
idiv
shll
push
jmp
sub
sbb
cmp
pop
shlb
inc
or
jl
jb
in
inc
and
mov
pop
mov
adc
rorl
or
inc
add
aaa
fs
bound
hlt
add
sbb
js
ret
data16
fists
cs
cmp
outsb
test
insb
fimull
inc
dec
stc
jb
mov
sbb
adc
add
pop
xorl
icebp
daa
iret
mov
cmp
fildll
adc
fimull
push
ljmp
cmpsl
mov
sub
pop
xchg
jge
cs
stos
fwait
das
subl
inc
pop
inc
pop
clc
sub
mov
dec
mov
lods
lret
or
filds
push
outsb
push
cmpsb
leave
inc
bnd
jl
int
testb
sbb
adc
pop
lods
pop
andl
adc
jo
movsb
jg
xor
rorl
lods
jg
sub
bound
clc
inc
and
adc
jb
inc
test
pop
pop
es
pop
push
push
rcll
fimull
outsl
adc
call
nop
int3
cwtl
pop
int3
mov
ljmp
mov
adc
sbb
cmp
mov
fsubrl
mov
mov
dec
subl
sub
add
hlt
sbb
xchg
and
adc
mov
cmp
jecxz
inc
inc
addb
cmc
or
mov
xor
lea
add
addl
mov
jecxz
xchg
test
push
inc
lods
movsb
lahf
lock
add
pop
push
fs
nop
jbe
jne
clc
xchg
sbb
clc
mov
stc
fs
adc
lahf
cmp
call
cld
mov
pop
push
loop
out
movsb
dec
cld
mov
in
push
in
xchg
inc
ret
push
adc
jmp
jecxz
mov
mov
sar
sbbb
loopne
lods
push
out
inc
xor
repnz
aaa
inc
lea
adc
fidivs
gs
xor
bound
xchg
iret
fs
hlt
add
inc
mov
add
fs
mov
dec
jp
mov
inc
test
test
int
fnstcw
test
xchg
test
sub
pop
pop
inc
stos
fstp
cmp
jbe
or
lods
call
cld
sbb
push
xor
movsb
or
inc
sub
rcll
xor
xchg
and
mov
rcrb
mov
shrl
bound
and
rcrl
arpl
repnz
or
mov
ret
xchg
call
into
sbb
enter
ss
fdivrl
adc
xorl
xchg
sub
fisttpl
or
push
aam
cmpsb
jle
call
lahf
pusha
loope
lret
test
jg
or
inc
push
mov
stc
data16
sbb
icebp
icebp
out
cmpsl
xchg
xchg
outsb
mov
idivb
cmp
jae
js
addr16
sti
xchg
pop
xchg
and
xchg
repnz
mov
hlt
les
inc
or
insl
and
gs
xchg
aas
movsb
jo
mov
mov
cwtl
mov
lcall
xchg
add
gs
insl
push
mov
add
pusha
das
inc
cmp
ror
loope
loope
xchg
clc
add
mov
and
xchg
stos
xor
iret
lahf
in
jmp
push
mov
jno
or
or
std
dec
and
mov
mov
sahf
int
push
push
movsb
inc
and
stc
adc
or
subb
adc
out
dec
stos
ja
data16
insl
push
mul
rcrl
xor
push
lods
stos
repz
pop
xor
sbb
mov
xchg
push
stos
loope
push
jmp
iret
in
out
inc
stos
lea
pop
nop
jb
cmpsl
dec
mov
push
ljmp
lret
lods
gs
repnz
daa
cmp
cmp
inc
push
and
sbb
mov
mov
xorl
adc
mov
dec
push
pop
hlt
dec
push
outsl
lret
mov
rolb
cmp
pop
pop
scas
jns
sbb
dec
ja
movsb
jns
xor
cmp
mov
sahf
icebp
mov
lret
mov
pop
lret
cmpb
adc
mov
sbb
pop
inc
and
inc
fs
stos
mov
pop
mov
cli
push
sarb
jecxz
sbb
dec
ja
push
inc
add
fists
add
bsr
out
test
lahf
in
ficoml
lahf
ret
test
out
inc
pop
hlt
filds
imul
or
or
fisttpll
cmp
xchg
sbb
jnp
imul
pop
fcmovnb
push
addl
lock
in
push
les
pop
cltd
outsb
ror
xor
push
fcoml
jae
jp
pop
sub
test
ljmp
mov
out
pop
mov
xor
xor
ljmp
les
mov
sahf
jle
mov
leave
scas
popf
add
cmpl
push
rclb
hlt
pop
adc
cmovl
in
add
fnsave
imul
xor
pop
shll
testl
adc
fisubrl
jne
fldenv
dec
mov
cli
pop
cli
cmpsl
cmp
and
pop
sarb
sub
adc
jl
aaa
out
jecxz
nop
mov
ja,pn
xchg
push
popa
enter
jmp
cmpsb
mov
cmc
push
mov
add
repnz
push
int
daa
xchg
mov
push
mov
cmp
mov
mov
inc
mov
xor
cmpsl
mov
sbb
xchg
mov
dec
xchg
out
or
and
sbb
push
mov
pop
cmpsl
ds
mov
lret
sbb
hlt
adc
cmc
jno
mov
aad
add
test
paddusw
arpl
in
test
shrb
mov
std
inc
loope
sahf
lcall
loope
lret
and
add
pop
es
push
pop
adcb
dec
cs
aas
add
mov
pop
insb
cwtl
cmpl
xor
divb
sbb
cltd
xor
test
bnd
idivb
sbb
adc
adc
das
pop
xlat
mov
iret
cmpsl
or
lea
or
adc
mov
xchg
mov
lcall
sbb
cmp
dec
push
mov
or
mov
insb
lret
mov
ja
insb
sbb
add
mov
push
insb
lock
in
addr16
xchg
dec
mov
fwait
dec
clc
push
in
fwait
adc
xchg
int
rolb
addr16
cmp
push
movsb
psubusb
jge
aas
sar
or
insl
in
adc
cld
movsb
into
inc
jecxz
jge
xor
ret
mov
xchg
mov
jnp
insl
arpl
out
lret
loopne
mov
lods
test
aaa
xchg
stos
rep
inc
stos
fst
bound
xor
cs
pop
dec
xchg
std
aas
fs
or
movsl
mov
mov
scas
in
dec
sbb
dec
out
sub
add
dec
cmp
inc
out
rorb
test
shrl
pop
jecxz
xor
add
test
ja
cmp
roll
push
jo
lock
hlt
arpl
les
adc
popa
pop
pop
sub
xchg
add
dec
repnz
cs
jns
cmp
insl
add
jge
mov
aam
push
test
pop
sti
ret
xor
mov
xchg
stos
mov
pushl
inc
jo
mov
repz
loopne
out
push
ss
lea
pop
mov
sub
sub
add
imul
pop
ja
imul
lock
stos
stos
out
mov
fidivl
aam
cmp
xlat
cmpsb
test
push
lahf
sarb
sbb
flds
sub
sbb
lahf
andl
cmpsl
cmp
mov
lcall
mov
cltd
mov
xchg
pop
xor
in
nop
ret
xchg
int3
popf
mov
scas
addr16
or
andb
es
test
mov
outsl
out
mov
inc
es
sahf
adc
dec
and
sub
sahf
fdivrs
aam
insl
xchg
sbb
imulb
xchg
ja
lods
and
jmp
mov
stos
shl
icebp
subl
cmp
std
inc
std
stos
xchg
adcl
das
sbb
xchg
mov
mov
outsl
shrl
cmp
jnp
mov
iret
test
jno
lahf
inc
jnp
inc
cmp
out
inc
mov
outsb
test
push
jb
mov
sbb
mov
mov
int3
pop
sbb
scas
xchg
rcpps
loope
inc
stos
leave
dec
inc
add
mov
or
sbb
ljmp
mov
inc
cmpsb
lock
cmp
mov
sbb
lret
push
and
jle
mov
xor
outsl
mov
lds
repz
jle
out
gs
pop
loopne
sub
rcl
xor
loope
das
dec
into
inc
cltd
int3
xchg
push
or
cmp
pushf
inc
cmp
jecxz
lock
jle
mov
testl
adc
adc
xchg
or
js
inc
and
imul
repz
sbb
fldpi
and
pop
cmc
stos
adc
adc
add
mov
lret
dec
jge
pop
dec
test
and
mov
es
js
sbb
push
push
out
aad
loope
mov
pop
int3
sbb
inc
and
and
inc
jecxz
dec
dec
mov
popf
cmp
pop
movsb
dec
pop
sbb
mov
fmulp
pop
pop
andb
fwait
pop
jns
pop
dec
insl
ja
jmp
cld
outsl
and
je
sbb
cmp
outsl
add
rclb
mov
in
cmp
aas
xchg
lea
arpl
push
aaa
push
mov
mov
popf
sub
pop
call
movsb
ficoms
faddp
jg
dec
jns
jg
frstor
mov
and
xor
iret
inc
test
or
mov
xchg
xlat
xchg
nop
loop
jne
iret
insb
cmp
cmp
js
sub
push
dec
push
and
xchg
jno
mov
xor
jecxz
aad
xchg
or
out
loop
push
adc
ds
arpl
jns
sub
int3
pop
out
cmpsb
mov
je
mov
out
mov
sub
paddd
loopne
pusha
cwtl
mov
hlt
mov
in
mov
loope
ret
mov
pmaddwd
rcr
cs
pop
ret
jg
das
mov
mov
loop
jae
fnstenv
pushf
pop
jg
cs
bound
dec
insb
jle
jo
mov
jp
subl
popa
push
jb
and
or
dec
and
push
cmpsl
loope
dec
push
mov
cld
lahf
mov
pop
pop
cli
cmp
or
movsl
in
xorl
std
mov
ja,pn
xchg
jl
jne
xchg
fistpll
xor
je
inc
jns
fdivrl
js
push
nop
mov
and
jbe
inc
mov
push
test
out
fidivrl
loope
jge
dec
and
lds
imul
adc
fsubs
ret
rcl
mov
sahf
jl
outsb
cmp
cmp
or
adc
sub
jge
pop
mov
mov
test
addr16
mov
subl
jne
inc
and
adc
inc
xchg
fstl
out
data16
imull
sbb
shl
push
inc
inc
mov
cmpsl
mov
fadds
pop
nop
adc
dec
decb
push
jecxz
add
cltd
cmc
jp
inc
cmp
out
out
push
pop
sbb
mov
aad
lahf
gs
imul
lcall
mov
xor
sub
dec
adcl
lret
and
notb
cmpsb
rol
fistl
mov
mov
push
xchg
lret
cmp
pop
loop
push
pop
fsubrs
mov
or
sbb
xchg
xchg
lock
push
test
mov
sbb
lahf
mov
pusha
push
mov
sahf
ljmp
iret
jmp
movsl
fnstcw
inc
inc
and
inc
dec
cli
insb
ja
push
mov
sub
enter
test
in
cmpsl
sub
outsb
jns
cmp
cmovb
test
sub
cmp
or
fistl
xchg
cmp
mov
cmp
xchg
xlat
in
decl
sti
imul
sbb
stos
xor
adc
mov
push
out
cmp
push
sub
outsb
loop
mov
sbb
dec
mov
data16
dec
cmp
jnp
adc
dec
mov
mov
fdivl
mov
je
rcrl
dec
mov
arpl
aas
les
std
pop
stc
in
sub
fidivs
mov
push
dec
fucomp
das
xchg
mov
mov
mov
lods
push
cmpsb
pop
fidivl
mov
out
xor
into
pop
mov
shll
loope
sub
mov
outsl
add
icebp
jl
js
adc
xor
daa
pop
scas
out
idivb
pop
mov
jmp
sahf
adc
jge
testl
push
mov
push
enter
xchg
movsl
xor
inc
or
mov
cltd
xchg
and
and
pop
adc
fisubrs
fists
add
add
push
stos
fs
push
rcll
cmc
sbb
inc
ret
xor
rcrl
sub
jp
xchg
mov
mov
adc
sub
mov
xor
jbe
movsl
mov
mov
xor
inc
mov
popa
push
sahf
rol
fldl
push
pop
xor
inc
and
test
iret
push
cmp
cmp
int
in
mov
bound
ja
out
insb
jecxz
cmp
add
sub
lods
inc
or
dec
lahf
lock
jb
adc
xor
js
leave
pop
mov
pop
jmp
cld
mov
cli
repnz
inc
lods
outsb
mov
pop
cli
das
je
in
jge
pop
cmp
jle
lods
push
in
pop
mov
pusha
sbb
insl
hlt
push
add
jecxz
or
scas
mov
mov
adc
decl
add
test
mov
mov
movsl
fiadds
out
and
add
mov
out
push
inc
call
mov
jmp
test
das
imul
pop
xchg
adc
add
pop
stc
int3
xor
aad
call
stc
cmp
cmp
out
std
inc
push
mov
push
jl
data16
movsb
add
jecxz
lcall
xchg
je
pusha
inc
adc
insl
fnclex
iret
mov
ret
cmc
mov
shrb
cli
or
mov
push
fidivs
repz
jl
pop
pop
mov
jno
shlb
movb
or
adc
cmp
adc
in
fadds
cmp
lods
cmpsl
stc
test
inc
jns
dec
dec
stos
cmpsl
push
mov
push
lock
lret
fcmovne
push
fnsave
fstps
mov
mov
inc
outsl
outsl
xchg
adc
cmpsb
call
jge
iret
push
pop
sub
fsubrp
add
testb
dec
and
cs
xchg
mov
xchg
daa
repz
dec
ds
xor
rcll
push
das
imul
stos
push
notb
std
jne
call
xor
jb
or
cmp
mov
aad
dec
ljmp
inc
xchg
pop
push
inc
enter
daa
incb
in
mov
and
cmp
xchg
cltd
cmp
jnp
jnp
cmp
dec
adc
fsubrp
fidivrs
into
and
adc
pop
sbb
mulb
xorl
mov
imul
sbb
inc
or
mov
push
adcl
test
daa
movsl
pop
dec
scas
mov
das
mov
pop
adcl
out
xchg
aas
push
sub
stos
fisubs
mov
pushf
jno
pushf
push
out
aas
imul
mov
mov
mov
and
in
lcall
adc
sub
ds
leave
push
adc
sub
faddl
stos
call
cmp
loopne
pop
je
jmp
pop
stos
xchg
push
push
sbb
sbb
jno
mov
nop
testb
pop
imul
jbe
lea
data16
xchg
push
lcall
fwait
movsb
stc
push
ja
jne
push
mull
in
sbbl
pop
scas
insl
jecxz
push
stc
push
push
pop
mov
mov
adcb
mov
aad
or
call
lods
lret
xchg
cmc
loopne
adcl
enter
lcall
jns
mov
cmp
push
fsubl
mov
rcrl
cwtl
loop
pushf
pusha
in
pushf
arpl
xor
xchg
adc
mov
or
jns
js
das
push
in
fadds
push
xor
jnp
les
push
and
call
push
mov
enter
fsubrl
pop
jno
xor
sbb
hlt
mov
jecxz
imul
xor
loop
pop
cmpsb
pop
mov
and
push
push
shrb
sbb
loope
sub
aaa
outsb
into
lret
int3
pop
mov
repnz
mov
mov
iret
icebp
nop
mov
sbb
mov
nop
loope
inc
cwtl
jnp
stos
iret
adc
mov
test
and
cltd
mov
sub
mov
sbb
jns
lods
xchg
in
sti
jle
pop
dec
mov
call
lock
sahf
mov
das
xor
pop
minps
dec
mov
jl
push
popf
mov
mov
ficoms
rorl
push
leave
sub
xlat
jo
cmp
sub
gs
lcall
dec
nop
and
sbb
call
loopne
or
push
inc
push
push
mov
jl
pop
sub
ret
js
imul
sub
pop
loope
pop
nop
adc
xor
and
sbb
and
pop
fsts
insb
add
aam
mov
sub
pop
xor
cmp
lret
sbb
xor
pop
lea
xor
popa
pop
int
cld
mov
xlat
stc
stc
cwtl
xor
divl
iret
notl
or
xor
movsl
int3
push
push
push
or
cld
addl
ficompl
push
add
fistl
imul
fmul
repz
mov
jg
test
adc
data16
push
mov
or
js
ds
clc
xor
mov
std
jle
clc
add
xchg
mov
enter
sti
sub
jbe
and
dec
jecxz
fwait
cmc
icebp
loope
mov
mov
push
out
imul
xlat
adc
adc
iret
xchg
fdivrl
pop
jno
push
shlb
popa
je
push
out
xchg
icebp
add
stos
call
pop
repnz
adc
repnz
stos
addr16
and
icebp
adc
or
sub
jnp
sub
into
cmpl
sahf
out
leave
push
cmc
pushf
dec
sti
decl
mov
mov
push
adc
shl
movsl
mov
adc
test
enter
or
gs
pushf
xchg
lds
js
xor
add
mov
dec
stc
insl
pop
xchg
iret
add
ret
push
mov
and
mov
imul
cmpsl
pop
iret
mov
out
jno
sub
and
inc
mov
cmp
mov
outsb
sbb
pop
ret
xor
and
mov
push
loopne
jb
bound
pop
call
mov
pop
cmp
lds
addr16
rorl
dec
mov
jne
cmp
out
lahf
movsb
mov
and
loopne
push
xor
sbb
lock
rcrb
and
inc
push
data16
outsb
out
jns
mov
mov
adc
lds
inc
jle
pop
pusha
pushf
dec
fiadds
xchg
xor
mov
pusha
jno
test
fists
sub
mov
or
push
jnp
cwtl
lea
clc
adc
std
jge
es
fs
add
cmp
stc
xchg
mov
mov
data16
jo
lret
adc
ja
mov
push
xchg
jg
imul
push
or
addb
bound
sti
lahf
shl
cmpsb
adcl
cmp
add
out
pop
sbb
push
mov
ja
test
cmp
test
ds
fnstsw
lret
pushl
jmp
inc
xchg
adc
addr16
ljmp
xchg
sub
test
imul
lret
mov
mov
lahf
sbb
je
stos
inc
cmpsb
mov
adc
das
jo
and
in
pop
sub
ss
ja,pn
xchg
mov
mov
inc
dec
lock
out
push
out
push
cmp
test
pushf
or
sub
ret
xor
sub
nop
mov
mov
cmp
test
daa
nop
xchg
and
inc
shr
imul
lods
ljmp
xchg
push
out
mov
mov
addr16
popf
xor
les
pushf
pop
setp
inc
loop
add
mov
jo
mov
cmp
jp
fadds
out
adc
fmull
adc
push
xor
flds
mov
fwait
xchg
mov
jae
inc
int3
insb
loope
add
mov
and
mov
dec
je,pt
loope
rclb
mov
pop
in
test
dec
sbb
bound
iret
jnp
push
xor
add
into
cld
xchg
popa
out
pusha
jae
cwtl
popa
jg
outsb
push
cmp
ror
mov
dec
insl
aam
lea
push
mov
sbb
pop
bound
inc
sbb
data16
aaa
leave
and
mov
pop
mov
add
arpl
xchg
out
jae
js
test
pop
inc
out
mov
call
mov
jo
test
in
adc
mov
out
int
push
mov
add
mov
cltd
flds
repnz
mov
mov
add
jp
pop
xchg
sti
sub
imul
mov
xor
mov
mov
addr16
jmp
inc
cmp
jp
cmp
das
xchg
and
pop
aaa
test
mov
stc
push
xchg
xchg
xor
cmc
mov
jle
popf
pop
lods
xchg
dec
mov
sbb
clc
jl
push
outsb
pushf
rcrb
gs
xor
repz
pop
mov
ret
lods
adc
jmp
and
mov
repnz
pop
pop
add
mov
lea
sbb
js
mov
add
outsl
andb
in
insb
popl
and
dec
sbb
outsl
dec
mov
imul
popa
frstor
push
cmc
sub
add
inc
pusha
xor
mov
loop
jb
xlat
jnp
lds
dec
jae
mov
add
cmpb
mov
int3
adc
imul
xchg
sbb
ja
adcb
leave
pop
or
dec
or
pop
addr16
xor
aam
iret
push
add
ljmp
call
mov
loope
push
clc
pop
fwait
ror
pushf
mov
ret
and
out
push
fdivr
insb
sub
jp
sahf
mov
out
lea
mov
jno
rolb
adc
dec
add
cltd
dec
cmpsb
shrl
pop
pop
or
cmpsl
and
rcr
stc
dec
mov
jno
mov
xchg
xchg
mov
dec
jle
inc
add
and
jmp
dec
and
sti
rclb
outsl
imul
test
mov
xor
sbb
dec
jp
aam
inc
mov
or
repnz
lcall
andl
add
add
ss
je
pop
mov
mov
xchg
inc
leave
jnp
xor
dec
cmp
xor
in
jle
and
jge
pop
dec
jbe
mov
sbb
jnp
push
dec
in
mov
pop
in
ret
leave
sbb
push
fnstsw
jge
jle
sti
and
popf
es
hlt
mov
xlat
lock
into
lods
cltd
xchg
jns
fmull
dec
je
xchg
push
test
lds
lods
std
mov
push
mov
or
jmp
popf
into
or
mov
movsb
push
push
mov
jge
cmpl
mov
rolb
mov
jb
adc
outsl
xor
push
mov
cs
add
sub
shlb
sbb
rorb
mov
iret
or
or
xchg
xor
adc
and
and
ljmp
mov
jmp
call
icebp
loope
push
insl
call
ja
or
cmp
mov
fcomps
add
xor
pop
cmp
push
loopne
inc
mov
pushf
mov
mov
inc
push
sahf
lock
js
shrb
xchg
scas
push
outsb
aam
mov
pushf
dec
out
sub
xchg
int3
inc
mov
mov
pop
dec
cmc
test
mov
mov
in
xor
or
sbb
int3
adc
cmp
mov
dec
push
pop
xchg
stos
sahf
or
gs
jl
ja
xchg
add
push
aad
fisubrs
gs
bound
test
push
popa
cmp
fdivs
pop
aaa
xchg
sub
and
mov
shl
pop
pusha
push
jle
xchg
inc
jp
sarl
rolb
sbb
push
in
xor
xchg
pop
add
int
clc
lods
loope
mov
or
dec
xchg
or
and
hlt
sbb
movl
call
jae
jle
leave
cmp
jne
shr
mov
xor
mov
jns
xor
leave
xchg
or
add
outsl
adc
lods
and
cmp
or
dec
ficoms
divl
or
mov
subb
mov
mov
in
loope
rorl
pop
fiadds
aaa
shl
repz
lcall
stos
add
pushf
fwait
gs
sub
sub
push
mov
lock
adc
cltd
mulb
mull
fildll
and
aam
fs
daa
lcall
mov
das
sbb
cmp
dec
ret
or
sbb
pop
mov
add
mov
sbb
js
loop
or
mov
inc
scas
daa
sbb
popf
adc
loop
fucomp
jbe
iret
sti
mov
add
sbb
or
cwtl
mov
mov
add
pop
jne
sbbl
lea
movsb
dec
pop
sub
notl
bound
pushf
mov
lods
ss
add
fidivl
das
dec
sub
lds
out
mov
repz
sub
out
je
testb
nop
xchg
jg
mov
sbb
decl
data16
mov
sub
imul
xor
hlt
and
ret
arpl
sub
out
sub
pop
fwait
leave
test
adc
xchg
xchg
das
inc
shl
fwait
push
push
addl
and
xchg
mov
pop
or
xchg
xor
sbb
mov
mov
adc
pop
inc
movsl
jbe
mov
inc
jl
pop
push
xlat
in
push
mov
fiadds
adc
in
add
das
sub
in
shll
popf
and
fstps
sbb
push
movsl
scas
loop
mov
movsl
adcb
push
mov
stos
xchg
dec
int
mov
xor
ret
pop
push
out
add
jle
pop
fldt
mov
popa
pop
or
mov
daa
sub
sub
sbb
in
jno
les
xor
xchg
test
mov
fwait
cltd
sbb
push
xchg
or
or
stos
jmp
cltd
enter
push
or
jne
cmc
lret
and
aam
popa
int
out
xchg
add
mov
std
rcl
dec
daa
daa
sbb
stos
adc
popf
mov
and
pop
mov
or
xor
mov
popa
andb
xor
in
xchg
jg
sahf
roll
mov
into
mov
inc
orb
or
inc
adc
push
fwait
insl
pop
js
js
cs
sub
fnsave
in
imul
fistl
mov
add
cmc
lds
pop
popf
mov
movsl
mov
mov
addr16
and
pop
add
xlat
xor
jns
outsl
mov
sub
cs
xchg
aaa
andb
mov
cmp
leave
ss
mov
pop
out
mov
ja
and
dec
dec
mov
movsb
jg
pop
ja
pop
enter
sbb
pusha
fdivl
ret
jge
js
daa
lcall
lcall
mov
das
int3
push
adc
or
or
xor
adc
adc
mov
xchg
loop
inc
xchg
pop
inc
xor
xor
jae
lret
mov
adc
jnp
inc
or
sti
adc
mov
pushf
mov
push
mov
roll
popf
popf
movsb
jge
dec
out
scas
add
aad
clc
jae
xor
or
ss
lods
nop
arpl
sbb
xchg
pop
outsb
cmp
mov
xor
jmp
in
cmpsb
mov
adc
popf
inc
adcl
dec
mov
roll
lds
data16
pop
cmpsl
xchg
or
ss
scas
cs
enter
push
or
dec
or
lock
icebp
repnz
sub
pop
cmp
dec
mov
roll
cmp
aas
mov
pushf
shl
popf
mov
jns
pushf
or
dec
push
fisttpll
ds
jge
pop
les
or
sub
out
pop
lret
imul
rcrb
push
fsts
fwait
cmp
jb
adc
cmp
jl
mov
data16
cmp
pop
call
jb
xchg
inc
scas
cmc
stc
test
mov
jecxz
sub
dec
sub
and
mov
lret
cwtl
hlt
inc
ss
push
xchg
push
xchg
pop
stc
mov
mov
sbb
xor
adc
pop
or
xor
into
dec
jbe
lret
movsl
mov
cmp
sbb
xor
and
mov
xchg
jnp
adc
or
adc
jno
mov
jb
sbb
push
fcomp
sub
addr16
inc
adc
push
and
jo
shll
xorl
inc
cld
mov
inc
call
insl
lcall
hlt
outsl
popa
pop
hlt
inc
jne
sub
adc
fnstenv
popa
lcall
iret
sbb
fdivl
mov
mov
das
push
sbb
aad
loopne
fcomps
insl
sbb
cltd
mov
sbb
xchg
mov
insb
sarb
scas
inc
lods
loope
cmc
outsb
adc
stc
mov
pop
xchg
testb
dec
lods
out
add
cmp
dec
push
xor
iret
inc
cmc
cmp
insb
pop
shrl
sbb
jnp
les
and
enter
adc
cmp
pusha
repnz
xchg
sbb
fistps
mov
push
fnsave
xchg
cmp
pop
cmp
lret
lds
cs
xlat
loopne
push
mov
cmp
jbe
fcoml
adc
int
aam
notl
lret
push
push
mov
jp
and
enter
mov
pop
mov
add
jnp
xlat
loopne
dec
adc
out
inc
pop
mov
daa
sub
shr
add
sbb
sbb
int3
stos
mov
jo
cmp
insl
xchg
fucomi
loopne
dec
loope
and
das
mov
inc
leave
mov
sbb
je
pop
data16
mov
xchg
push
pop
adc
cmc
fdivl
mov
push
daa
adc
fdivr
enter
subb
mov
mov
adc
lret
aas
rcr
jns
testl
popf
mov
jge
dec
mov
es
or
das
mov
outsl
lock
aas
jl
cld
jl
data16
adc
fmull
roll
fcompl
mov
jl
sub
xchg
inc
cltd
inc
fneni(8087
ret
jno
bound
outsl
rcrb
or
add
mov
in
ret
pop
lidtl
xchg
dec
sar
int3
dec
or
arpl
outsb
add
out
mov
mov
push
sub
adc
arpl
mov
fs
cld
jp
lds
or
or
inc
lcall
clc
outsl
scas
incb
mov
ljmp
xor
jbe
test
dec
mov
in
add
out
sub
movsl
add
ficompl
fs
mov
gs
mov
xor
cmpsl
insb
sbb
jo
or
cmc
cmp
push
lcall
aam
xchg
js
pop
pusha
and
data16
sbb
xchg
es
hlt
and
and
int3
testl
sti
xchg
lea
cld
push
sbb
mov
cmpsl
loopne
frndint
stos
push
sbb
dec
jl
gs
scas
in
testb
push
insl
jno
movsl
clc
xor
cs
jmp
out
imul
popa
sbb
repz
loop
bound
pop
sbb
cltd
mov
dec
fwait
pushf
lahf
imul
push
lods
out
ss
int3
mov
cwtl
rcrl
jle
mov
pop
iret
sarl
and
fstps
and
mov
outsb
rcrb
out
adc
movsl
sbb
dec
movsb
xchg
xor
jne
loope
bound
loopne
fstpl
in
push
mov
jg
call
pop
jne
bnd
dec
out
lahf
cmpsb
out
faddl
mov
pusha
and
icebp
sbb
es
test
xlat
xor
imul
jae
fnsave
nop
mov
mov
dec
into
je
mov
or
mov
aam
xchg
mov
jae
push
in
das
xchg
int
lea
pop
mov
cltd
arpl
idivb
iret
imull
jge
jl
fucomip
jne
negb
push
xor
imul
and
lret
test
lcall
loopne
inc
mov
out
add
jns
and
push
icebp
cmp
or
xchg
lock
pop
mov
lock
xchg
push
repnz
lahf
jbe
mov
ficoms
in
or
xchg
jl
sbb
push
xor
cwtl
pusha
inc
movsb
int3
push
cmp
push
lret
fisttpll
out
test
repnz
xchg
insl
rclb
int
or
and
mov
and
dec
mov
pop
cmp
adc
cmp
fsubs
xchg
xchg
std
cmp
out
jbe
jno
mov
movsb
dec
xchg
outsb
lcall
jle
and
cmpsb
and
mov
outsl
pop
mov
call
push
lods
cmc
pop
dec
icebp
std
mov
dec
inc
std
jp
sbb
push
push
dec
xchg
divb
cmp
ljmp
push
lret
data16
lret
inc
dec
ret
push
in
xchg
push
out
xchg
insl
sbb
std
aam
clc
lret
leave
cltd
push
add
push
out
xor
add
fxch
adc
jnp
add
push
dec
out
push
shlb
fdivrs
pop
mov
repz
pop
nop
inc
xchg
mov
out
add
lcall
adc
fnstsw
mov
fcoml
in
bound
or
push
sbb
jbe
push
fwait
or
out
sarb
neg
mov
fmull
fdiv
les
push
popf
icebp
cmp
xor
push
add
jb
call
push
xor
sbb
and
addr16
fsubl
add
adc
push
pop
ret
vmovaps
in
or
dec
jns
adc
pop
add
sub
leave
dec
dec
jb
xor
out
jecxz
xor
cmpsl
es
addr16
shll
inc
mov
arpl
lcall
daa
sub
lock
and
stos
xlat
push
das
std
sti
imul
xchg
mov
or
mov
mov
stos
xchg
add
out
push
jno
daa
fmulp
loop
push
pushf
or
xchg
std
sti
imul
ja
iret
packssdw
fs
lret
lds
lods
add
popf
jnp
jl
xchg
rol
sar
add
test
adc
shl
or
pop
fisubrs
xchg
fs
sbb
xchg
xor
out
mov
inc
in
fs
sahf
mov
test
rcl
stc
stos
add
fnstcw
jnp
repnz
repz
imul
test
and
adc
sub
mov
fwait
test
je
out
mov
test
push
mov
xor
xchg
ljmp
test
ficomps
xchg
sub
fistl
jo
lods
push
adc
push
sbb
iret
or
sbb
push
jbe
inc
pop
rorl
dec
shlb
sbb
sub
sbb
mov
out
imul
sub
pop
xchg
stos
mov
test
negl
repnz
dec
pop
imul
add
add
inc
mov
int3
pop
mov
cmpsb
popf
daa
aas
frstor
ja
mov
inc
sub
sub
js
xchg
or
cs
or
popf
cmp
mov
mov
ss
jmp
outsl
mov
sbb
inc
or
or
and
outsb
icebp
mov
mov
xchg
jp
xchg
aaa
and
lcall
frstor
cld
add
test
mov
rcrb
xor
and
add
nop
mov
pushf
adc
push
aad
dec
push
lock
stos
pop
lock
and
and
lahf
scas
test
gs
sbb
inc
adc
inc
in
fisubrl
addr16
cld
fcomip
repnz
lea
push
mov
and
lsl
jnp
subb
dec
lods
gs
or
jecxz
and
in
jecxz
sbb
mov
bound
int3
out
and
pop
or
lahf
pop
inc
je
cmp
mov
mov
ret
cmp
xchg
mov
or
jns
test
insb
cli
ljmp
mov
mov
mov
sbb
pop
ficompl
enter
and
lcall
test
clc
jmp
inc
add
inc
subb
mov
inc
std
inc
movsl
sbb
mov
adc
push
nop
mov
es
and
jns
int3
mov
cmpsb
xchg
sub
adc
lods
mov
sub
mov
mov
daa
outsl
jge
add
mov
mov
inc
jns
push
mov
jecxz
mov
jbe
jl
add
lahf
jg
mov
je
addr16
insl
and
cmp
xchg
outsb
mov
loope
xchg
or
xor
jae
xchg
roll
rorb
mov
inc
cmp
dec
ret
jge
or
or
popa
test
mov
ja
fcompl
lea
imul
shl
data16
and
outsb
fisubrs
sbb
cmp
cmpsb
xchg
mov
outsb
mov
jecxz
loope
mov
int
cmp
xor
push
rclb
mov
ret
es
inc
xchg
adc
jns
call
stos
sbb
mov
xchg
nop
inc
fcmovbe
pop
lret
cmpsl
scas
sbb
mov
in
fstpl
ja,pn
sti
in
pop
adc
jae
dec
jmp
cmp
mov
dec
adc
pop
rcrl
pop
call
and
sub
adcb
sbb
sbb
jge
inc
hlt
repz
pop
and
adc
and
data16
in
int
sbb
adc
sub
daa
stc
insb
sti
testb
cmpsl
sub
cwtl
mov
dec
add
mov
jmp
mov
std
and
insb
xor
stos
shlb
movsl
dec
dec
push
add
push
addr16
push
jbe
inc
in
xor
sbbb
mov
hlt
mov
push
cwtl
adc
or
das
stc
arpl
adc
mov
dec
push
mov
mov
jge
sbb
movl
clc
cmpsb
jbe
xchg
xor
les
outsl
jno
cmc
out
jle
ljmp
decb
xor
int3
push
mov
sub
jp
movsb
mov
add
xchg
mov
shrl
je
inc
lcall
inc
lock
lahf
test
movsb
outsb
jbe
leave
inc
mov
hlt
test
pop
push
jecxz
movsb
mov
sbb
mov
jmp
add
iret
inc
sbb
nop
mov
leave
dec
mov
or
aaa
adc
shrl
jle
bound
mov
inc
sub
push
clc
das
out
popa
sub
add
mov
lfs
jl
add
in
add
inc
insl
jg
jb
aad
cwtl
jo
inc
fists
push
scas
bound
rcr
jns
popa
xchg
sub
popa
jne
sub
pop
push
jle
cmp
and
sbb
mov
stc
inc
gs
xor
mov
lahf
cmpsb
jo
jae
ds
shlb
faddl
sbb
xchg
jg
repz
push
repz
sahf
pop
mov
inc
dec
aam
xor
inc
mov
lods
ds
jecxz
arpl
xchg
xchg
jge
xchg
fucom
ret
lock
mov
and
sahf
sbbb
imul
sub
cltd
pop
adc
mov
pop
outsl
pop
mov
sbb
je
and
pop
das
add
jo
jge
push
cmpsl
add
push
cmp
and
mov
mov
lcall
cmpsb
pop
or
or
fs
lret
lds
dec
and
dec
jge
mov
mov
ja
cli
or
adc
clc
xchg
aaa
cmp
gs
sub
push
dec
jp
or
jae
imull
push
scas
mov
cmp
jl
pop
cmp
adc
xchg
mov
out
dec
icebp
xor
push
repz
dec
mov
jl
fdivrp
es
and
push
stos
out
out
push
and
xor
sub
cmp
adc
jne
xchg
sbbb
or
sbb
pop
jb
outsb
in
pop
clc
add
and
je
dec
inc
pop
fisubl
push
stos
mov
pop
add
push
sub
outsb
jae
cld
sbb
scas
mov
push
repnz
imul
mov
add
cmpsb
adc
xorb
fsubl
xlat
mov
in
icebp
aas
aaa
push
subl
mov
xchg
std
dec
mov
cmp
push
stc
push
cs
or
xchg
adc
lds
dec
mov
add
cmc
push
lds
inc
sbb
popa
test
mov
xor
cmp
xchg
je
push
mov
and
add
ljmp
lcall
roll
popf
cmc
add
aam
jb
push
jge,pn
pop
jne
jbe
mov
std
adc
push
mov
fisttpl
jns
cmpsl
sbb
add
jmp
adc
push
push
test
pop
movq
sub
cltd
sti
pop
and
loop
shrl
mov
sub
leave
fwait
aas
jnp
push
push
loop
or
xor
mov
jae
inc
js
icebp
push
xor
jmp
sub
rolb
cmp
fdiv
sub
into
loop
lods
lcall
cmp
jbe
inc
enter
pop
loopne
mov
mov
lea
mov
movsb
pop
lret
push
std
pop
es
ds
scas
add
fistpl
movsl
call
and
lock
arpl
xor
mov
mov
imul
sub
test
mov
fsubs
cmp
std
push
incb
sub
push
sub
lahf
stc
and
pop
daa
push
push
out
sbb
ss
dec
mov
push
mov
aas
or
and
in
xor
fwait
xor
mov
pusha
inc
sti
pop
push
and
pusha
xchg
out
and
scas
or
add
push
inc
add
inc
adc
lock
pusha
push
stos
cmp
jae
sbb
sbb
push
xchg
imul
icebp
add
lcall
ljmp
shll
loope
scas
in
cmp
and
cmp
gs
inc
pop
mulb
fs
insb
aam
sbb
cmp
sub
jp
jg
mov
xor
inc
bound
shl
cs
push
add
sub
jle
sbb
inc
enter
mov
mov
push
and
fidivrl
ljmp
ds
push
xchg
out
lret
jecxz
lds
jg
lods
aaa
xor
add
push
addb
rorb
pop
adc
push
pop
inc
aam
imul
jae
jge
adc
mov
add
ret
or
add
insb
adc
test
inc
fcomps
arpl
mov
xchg
inc
lods
les
push
xchg
xchg
lret
jne
inc
or
push
mov
aas
stos
jo
aas
cmp
les
xor
addb
cmc
pop
mov
xlat
xchg
inc
hlt
dec
add
or
mov
lret
push
mov
xor
movd
rcrl
stos
ficoml
hlt
mov
lea
ljmp
jl
clc
or
inc
sahf
inc
push
popf
pop
loope
sahf
cmp
outsl
jecxz
inc
lods
enter
mov
outsl
mov
testl
cmp
int3
psubusb
push
arpl
hlt
imul
in
cmp
aam
daa
push
xchg
nop
mov
push
clc
jae
or
lret
jae
mov
jnp
sbb
outsl
pop
add
cmp
call
leave
cmp
dec
xlat
scas
sub
jle
jge
data16
inc
arpl
jb
sub
and
loop
mov
pop
inc
int3
out
fdivs
adc
push
cli
bound
xchg
dec
dec
lret
roll
and
sbb
inc
pop
dec
fwait
pop
mov
fsub
or
mov
and
gs
insl
shrb
add
js
shll
data16
popa
sbb
stos
xchg
sbb
test
jmp
mov
sub
or
gs
adc
push
xor
add
sbb
mov
das
dec
popf
outsb
in
lds
jns
ss
and
aad
andl
dec
pop
fstpl
mov
out
sbb
xchg
out
dec
sbb
rcrb
cmpl
fisttps
cli
mov
fdiv
dec
xchg
das
push
cmp
out
ja
xor
add
imul
mov
jns
pushw
mov
mov
push
push
fists
adc
test
mov
loop
in
mov
pop
rcrl
mov
sub
imul
jg
in
xor
mov
sbb
mov
ror
loop
xor
xchg
sbb
out
shlb
mov
pop
or
cmpsl
rclb
push
inc
cmp
lods
xchg
or
jne
xchg
or
dec
push
sub
push
xor
sbb
add
scas
iret
test
adc
inc
mov
cmp
icebp
and
push
in
cs
push
pushf
jp
adc
insb
sub
addb
inc
cltd
in
les
ds
loopne
jg
sbb
inc
push
sahf
inc
cltd
push
mov
mov
jae
and
nop
cmpsb
outsl
cmp
repz
xlat
imul
popf
lea
in
or
mov
push
cmp
pop
or
mov
inc
fisttpll
mov
add
push
or
test
cld
sbb
aad
stos
mov
cmpsl
mov
andb
js
outsl
pop
or
sbb
int3
inc
mov
repz
cmp
jnp
and
rclb
and
xor
jno
and
int
cmp
pminsw
sbb
cli
es
shrb
or
adcb
mov
mov
test
add
js
mov
in
lods
and
sub
mov
push
and
xlat
mov
sahf
repz
aam
sub
mov
fadds
jb
fists
add
jno
std
fists
pusha
dec
adcl
xchg
cmp
mov
pop
pop
xchg
cmp
cmp
adc
aad
nop
xor
sbb
adc
mov
out
fdivrs
mov
fisttpl
add
sub
aaa
jle
jmp
sub
lret
push
inc
shll
xchg
xlat
shl
mov
orps
and
dec
std
pop
js
add
les
jmp
jmp
sub
testb
jno
popa
pop
mov
imul
aad
xor
xchg
inc
or
push
cld
lock
cmp
adc
jmp
je
lret
and
lock
or
nop
cmp
and
sub
fwait
pop
in
bound
mov
jo
cli
or
cwtl
xor
test
ljmp
pop
push
sub
xchg
das
ss
call
enter
pop
push
sbb
mov
mov
out
sbb
add
je
cmp
stos
xor
and
or
sub
jb
rclb
aad
or
adc
sub
mov
js
cmp
lret
pop
and
or
daa
nop
inc
outsl
jg
push
gs
addb
cmp
ret
jle
popf
loopne
push
pop
lock
mov
inc
or
or
movsb
mov
outsb
adc
arpl
les
xchg
int
xor
insb
xchg
cmpsl
push
push
les
mov
enter
cmp
sub
xchg
sbb
out
mov
cs
xor
adc
mov
cmp
fsubr
pop
add
jge
pop
ss
mov
push
sbb
jle
xchg
jg
shrb
mov
dec
pop
xchg
sub
gs
cmc
fidivs
out
lahf
hlt
fs
sbb
push
dec
sub
fsubs
ss
cmpsb
fcompl
dec
les
movsb
cmp
sbb
out
pop
lahf
imul
je
inc
push
lea
fsubl
test
pop
into
rorl
mov
movsb
inc
fnstcw
loopne
push
mov
jge
or
pop
icebp
test
mov
ss
inc
jbe
loope
adc
lret
out
loope
push
push
arpl
add
xor
popa
xor
iret
cmp
ret
test
out
jno
add
push
add
and
xchg
and
mov
insl
and
mov
mov
mov
repz
sub
add
or
inc
jbe
fldt
in
sbb
jne
clc
xor
arpl
cwtl
es
mov
in
scas
lods
cmp
jecxz
stc
hlt
and
add
and
or
xor
mov
mov
es
mov
aad
popa
bound
fwait
push
test
frstor
pop
mov
xor
pop
push
ljmp
stos
lods
lods
sub
xorl
mov
and
jnp
subb
mov
dec
push
mov
cmp
and
in
mov
add
imul
pop
icebp
push
je
add
jp
in
push
add
rorl
ljmp
sub
mov
cmp
movsb
insb
repz
push
cld
dec
int
xchg
lods
xchg
mov
movb
dec
push
push
lahf
rorb
jl
and
xor
or
mov
xchg
scas
ds
adc
jo
mov
xchg
cmpsb
shlb
bound
lcall
or
das
inc
out
mov
adcl
pavgw
test
repz
nop
lds
repnz
in
data16
stos
test
pop
das
mov
add
jge
xor
push
andl
lock
orb
mov
sahf
mov
push
jne
dec
decl
movsl
cmpsb
icebp
push
lret
xor
pop
pop
xchg
scas
dec
and
adc
mov
pop
std
cmpsb
inc
mov
mov
test
xchg
pop
pop
jle
pop
fdivrl
cmp
mov
fisttpl
gs
xchg
push
mov
mov
mov
addr16
insb
push
lock
mov
daa
stos
es
iret
add
js
mov
xchg
jmp
adc
pop
ret
dec
daa
inc
in
sti
sbb
lret
scas
push
mov
ljmp
adc
fstpl
inc
int3
inc
mov
outsb
pop
mov
divb
push
sub
out
dec
int3
gs
sub
pop
mov
dec
fucomp
and
shl
or
sub
cli
stos
push
call
ljmp
adc
inc
or
jne
and
push
movsl
pop
movl
insl
js
dec
rorl
inc
jb
dec
jne
scas
push
jb
bound
ffree
xor
sbb
jo
sbb
bound
dec
nop
push
popa
mov
pop
and
imul
mov
into
sbb
fwait
insb
xor
cmpsb
ret
rcl
daa
ja
cmp
or
xor
sub
jne
dec
and
xor
jp
mov
dec
lods
and
ljmp
adc
stos
scas
pusha
push
fsubrl
push
cli
sub
xchg
add
movsb
pshufw
sbbl
lahf
and
push
sbb
mov
xor
fistps
je
dec
sub
xor
stos
inc
enter
adc
sub
pop
int3
mov
add
pusha
bound
and
pop
outsb
sbb
rcrl
mov
out
lods
add
cmp
pop
in
iret
push
jno
mov
orl
hlt
dec
leave
scas
adc
add
mov
inc
cmp
adc
pop
add
ret
lret
dec
jnp
jbe
imul
clc
jb
push
push
xor
shll
lock
xchg
es
push
jl
push
pop
adc
and
ret
cmp
jo
mov
movsb
jecxz
mov
cwtl
mov
xchg
iret
sbb
popf
arpl
jns
imul
mov
pop
adc
insl
xchg
outsb
mov
mov
jmp
xchg
and
es
pop
data16
mov
add
imul
mov
lcall
push
adc
xchg
dec
cmp
push
lret
in
pop
cmp
cld
inc
iret
inc
stos
notl
in
xchg
xchg
roll
mov
cmp
sub
sub
adc
add
sub
test
loope
mov
inc
inc
sahf
inc
lahf
outsb
sbb
pop
cmpsb
jge
rcrb
int3
jne
mov
xchg
xchg
pop
xor
iret
int
subb
jne
or
cmp
loop
rcr
cmp
jp
andb
xor
stos
cwtl
xchg
xchg
es
or
cli
inc
jmp
jmp
cmpsb
mov
mov
fnstenv
pop
ficoml
sub
nop
sbb
adc
mov
insb
lock
test
movsb
xchg
gs
dec
or
or
inc
sub
cmpsl
mov
cld
sub
fucompp
aas
push
adc
into
mov
sub
js
jo
addr16
pop
xchg
cli
fs
and
jg
xor
xchg
pop
jb
add
addr16
and
adc
cwtl
inc
ds
adcb
cmc
or
xor
xor
xor
inc
shll
loope
daa
or
jle
jae
shrb
mov
xor
mov
push
mov
cmp
test
out
fldt
and
jne
ror
push
in
inc
xor
mov
gs
arpl
push
jp
mov
or
mov
fimuls
sub
arpl
add
test
fs
loopne
lahf
mov
add
add
xor
mov
mov
mov
test
popa
fdivp
xchg
xlat
push
mov
or
mov
cmp
idiv
mov
out
fldenv
dec
mov
mov
lds
cwtl
iretw
pop
setnp
push
add
sub
mov
xchg
mov
jae
cmp
inc
ja
test
addr16
scas
push
pop
push
dec
shll
insl
insl
loopne
dec
adc
sub
cld
cmp
push
ret
repnz
rcpps
or
jae
pop
push
sbb
sbb
adcl
ret
add
idivb
repnz
add
mov
cmp
add
xchg
and
jg
lods
cmp
xor
out
push
idiv
sbb
mov
sar
rcll
mov
lcall
daa
cli
rolb
pop
aas
lods
lock
popf
jecxz
jmp
inc
jne
clc
arpl
add
jl
mov
int3
and
adc
insl
jo
and
call
fcoms
test
icebp
mov
pop
movl
cwtl
subl
movsl
movsl
lret
sahf
lds
cwtl
rclb
push
stos
dec
inc
mov
fiadds
xor
cld
pop
push
jl
dec
ja
dec
out
ja
lds
in
xor
adc
insb
mov
xchg
or
adc
dec
pusha
shlb
repz
jns
pop
test
test
test
addb
xlat
jmp
dec
cltd
mov
addr16
inc
mov
bound
cmpb
mov
bts
fld1
adc
stos
lock
stos
inc
test
pop
repz
cmp
fisubrl
dec
mov
gs
idiv
jp
ret
cltd
outsl
and
pandn
imul
push
dec
lods
mov
fsubr
int
add
dec
sahf
push
or
xchg
outsl
mov
cmp
in
mov
jne
adc
adc
mov
xchg
nop
push
sahf
sub
imul
push
mov
cmpb
jb
push
data16
cmp
loop
mov
push
insb
push
push
insl
xlat
imul
push
inc
xchg
xor
cmp
dec
lods
pop
cli
mov
ljmp
sbb
xchg
adc
and
inc
lock
or
cmp
dec
dec
imul
fisubl
mulb
push
imul
sbb
clc
lahf
cmp
out
shl
out
mov
jg
fldl
in
xor
or
ss
add
dec
xchg
ret
lea
repz
out
mov
xor
lea
sbb
fcmovnbe
mov
dec
mov
mov
jecxz
jecxz
movsl
push
pop
test
scas
mov
in
loopne
xlat
mov
dec
adc
lea
add
mov
out
out
das
daa
pop
cwtl
xchg
popa
push
pushf
fisttpll
stos
out
mov
cmp
sub
insb
mov
in
xor
cmpsb
pusha
lahf
cmp
lods
dec
or
inc
add
js
mov
push
in
sub
fucom
dec
mov
int3
mov
leave
sbb
ret
push
xlat
ljmp
mov
mov
enter
push
insl
iret
sbb
lds
xor
pushf
std
adc
mov
cld
std
outsb
adc
inc
fldenv
sti
aam
mov
icebp
add
cmp
popf
bound
adc
cld
or
movsl
js
test
adc
add
into
push
xchg
mov
stos
xchg
sbb
movsl
ljmpw
push
mov
andb
je
aaa
pop
outsb
loopne
ljmp
xlat
lret
or
cltd
sbb
mov
sbb
insb
cmc
and
and
push
push
sbb
sub
mov
gs
test
inc
lahf
nop
and
add
arpl
cmpsb
jne
jmp
or
add
push
outsl
xor
mov
push
fdivrl
push
das
decl
push
xor
jbe
xchg
insl
pop
mov
jb
mov
pushf
jmp
dec
test
push
rcrb
push
mov
adc
dec
in
cltd
adc
adc
xchg
push
insl
loop
daa
sahf
test
or
iret
call
imul
test
icebp
jno
test
cmpsb
cld
jae
inc
pop
add
push
js
xchg
repnz
jg
add
shlb
pop
dec
or
pop
fdivl
int
or
cmpsl
cwtl
clc
xchg
insl
dec
jns
pop
or
pop
jle
dec
in
shrb
shlb
mov
sbb
cmpb
mov
int
pop
out
repnz
cmp
push
jns
dec
cld
faddl
sbb
pop
inc
imul
push
xor
pop
gs
jg
lea
popf
cmp
lcall
or
das
mov
xchg
sarl
dec
pop
pop
shrl
cld
je
out
outsb
roll
and
sbb
dec
cld
fnstcw
mov
int3
jnp,pn
orl
pop
mov
je
mov
inc
or
sub
gs
jge
adc
clc
or
sahf
dec
enter
scas
roll
call
pop
and
jae
jg
mov
push
int
cmp
aad
movsb
and
add
pop
imul
jmp
mov
pop
repz
je
jae
ret
xor
mov
jmp
jg
cmpsb
xchg
push
jge
and
leave
movsl
outsb
jno
mov
cmp
arpl
insl
loope
add
data16
or
insl
sti
aas
inc
imul
jl
add
je
inc
xchg
fnstenv
fidivl
cmc
sbb
pusha
repnz
mov
mov
cmc
fadd
jg
push
mov
ja
mov
xchg
or
xor
xor
dec
and
mov
ret
inc
fisttps
dec
or
push
add
mov
in
or
es
pop
inc
cmpsl
push
movsl
aas
and
mov
stc
fisttps
ffreep
jns
into
xor
inc
pop
push
js
xor
int
push
cltd
clc
movsl
stos
cwtl
xor
push
dec
or
insb
jge
xor
jl
sub
test
or
mov
ja
movsb
fsubrl
dec
in
lds
jecxz
ss
sub
ret
pop
fstl
cmpsb
outsb
pop
stc
xchg
hlt
jae
xor
or
xchg
add
loope
mov
cmp
sbb
ja
cli
push
push
xor
popa
imul
pop
dec
mov
xor
lret
pop
pushf
dec
push
jge
fld
and
xchg
xchg
or
scas
add
xchg
pop
cmp
and
sub
aam
lea
cmp
push
dec
fcoml
or
jne
dec
push
subl
adc
add
lods
pop
xor
mov
lcall
fdivrl
fstp
and
add
mov
and
jl
mov
push
popa
dec
sbb
jmp
dec
pusha
xlat
cmp
repz
jo
je
pop
adc
ret
xchg
int3
mov
test
andb
pop
shll
or
inc
jg
icebp
mov
pop
pop
xchg
subl
inc
std
stos
xchg
xchg
jns
std
xchg
js
push
in
mov
sbb
pop
stos
jmp
cmp
fsubp
mov
xor
call
mov
add
dec
lods
lock
dec
iret
testb
mov
loopne
jp
adc
jns
xorb
xchg
movsb
enter
mov
and
in
pop
lods
sub
outsb
arpl
shlb
xchg
dec
pop
movsl
iret
sub
add
fldt
mov
insl
and
hlt
sarl
icebp
stos
inc
outsb
sbb
cmp
mov
ds
js
ret
fwait
leave
loop
sub
fwait
into
in
lcall
and
fcmove
push
lods
add
ds
xchg
and
pop
and
dec
jae
aas
nop
scas
imul
out
ja
into
push
push
inc
inc
scas
push
int
test
push
xor
movsb
push
lret
into
and
out
add
movsb
pushw
or
or
lods
sbb
les
pop
das
leave
mov
xor
fcmovne
pop
int3
push
mov
adc
mov
clc
cltd
push
hlt
nop
jbe
pop
dec
lea
imul
mov
cmp
or
pushl
inc
push
ret
pop
test
dec
adc
lret
dec
jnp
aam
sbb
push
test
push
cmp
and
je
fs
xchg
roll
xlat
jo
insl
jb
sahf
push
mov
fwait
sti
adc
popa
shlb
js
jb
dec
inc
in
add
mov
pop
jne
outsb
repz
xchg
sbb
pop
cmp
imul
xchg
adc
push
int
mov
dec
test
in
lock
je
cmp
call
pop
aas
push
bound
subl
push
cmp
sub
inc
mov
mov
outsl
sbb
xor
or
out
dec
mov
pushf
das
mov
add
ret
sbbl
sub
bound
test
sbb
mov
xchg
add
xchg
call
ds
mov
int
stos
mov
mov
sbb
xor
xchg
push
movsl
xlat
lret
mov
mov
cmp
or
add
outsb
imull
dec
and
int
test
pushf
jo
sbb
sbb
cmp
mov
sub
jle
cmp
ss
popa
adc
in
mov
int3
xlat
mov
ja
out
dec
jnp
push
jge
add
lahf
aas
int
mov
and
mov
pop
lea
imul
mov
out
pop
push
xor
jmp
gs
loope
sub
sbb
movsb
mov
enter
push
push
je
mov
test
dec
sbb
pop
fwait
pop
into
pop
xchg
dec
pop
dec
enter
or
lcall
push
hlt
xchg
lea
mov
jnp
xor
call
stos
std
into
cmp
xor
pop
and
sarl
or
jo
adc
xchg
stos
mov
mov
cmp
and
bound
xor
repz
rcrl
or
push
inc
jmp
leave
bound
cmp
inc
aam
insl
or
or
ret
int
jne
mov
addr16
xchg
mov
out
xchg
test
popa
or
cwtl
inc
inc
push
testb
test
xor
fistps
mov
sub
xchg
aam
pusha
pop
cmp
out
jbe
sbb
push
outsb
sub
das
push
dec
ret
jecxz
dec
mov
add
repz
into
fisubrs
jbe
out
mov
rcrl
adc
add
aaa
mov
out
mov
fistl
jp
adc
mov
sub
stos
mov
jmp
push
jo
and
icebp
movsl
add
push
int
dec
jmp
push
data16
pop
test
jecxz
sub
outsb
gs
mov
mov
iret
sti
adc
imul
test
cmp
ds
aam
dec
xor
cmp
sbb
add
movhps
inc
mov
inc
js
imul
cli
fdivs
imul
inc
stos
outsb
sub
mov
sbb
loope
sbb
push
int3
lcall
or
push
mov
into
inc
lret
jns
sbb
or
mov
mov
mov
or
popa
pop
mov
cmp
mov
jo
cmc
dec
cmpsl
lods
add
fldenv
aam
dec
mov
push
or
add
xchg
dec
ljmp
cmpsl
je
sbb
and
dec
int3
pop
sub
or
xchg
insl
xor
cs
add
cmpl
shlb
sti
mov
pop
insb
mov
or
test
xor
xchg
andb
loop
cwtl
adc
jp
mov
xlat
fidivrs
aam
lahf
xlat
std
aad
call
fstpl
sub
cwtl
subb
in
push
jae
aaa
std
add
out
pop
scas
push
pop
jo
fs
push
jae
push
movsl
adc
xchg
popl
pop
xor
popa
mov
outsb
hlt
push
lea
mov
call
xchg
rorl
inc
pop
inc
push
out
and
xlat
adc
push
sbb
outsl
call
in
stos
pop
call
xor
imul
movsl
daa
xor
pusha
and
mov
repz
and
pop
aas
inc
scas
sti
sub
push
xchg
pop
cli
sbb
inc
xor
rcrb
in
mul
add
in
pop
pop
jecxz
adc
test
sbb
les
rclb
jl
in
jmp
jle
lea
or
mov
mov
jle
bound
cmpsl
icebp
and
mov
fistpl
out
insb
rcrb
je
test
mov
es
add
loopne
daa
push
cs
mov
pop
das
shlb
std
pop
jl
jmp
into
sarl
jmp
jnp
std
cmp
aaa
jne
adc
mov
sbbb
movsb
sarb
shl
fstl
pop
or
fstpl
mov
push
xchg
add
leave
push
sub
pop
cltd
sub
xlat
stos
pop
cmp
push
ret
out
sub
xchg
jnp
mov
push
fsubr
cmp
sti
shlb
mov
push
sbb
rolb
fisubrl
fsubrl
dec
fadd
mov
jnp
inc
dec
push
pusha
pop
or
sub
inc
into
ljmp
cmp
or
lret
jge
shl
cli
mov
xor
xor
sbb
xchg
pop
cmp
inc
jo
xor
pop
js
nop
mov
xor
loop
mov
ja
ss
push
les
lock
enter
andl
mov
popf
inc
adc
mov
or
cmp
aam
jne
dec
lahf
fs
fnstcw
cmpps
push
add
aaa
cli
xchg
lods
mov
and
cmp
jbe
pop
sbb
xor
xor
cmp
push
and
xchg
out
push
jnp
into
aam
push
imul
jmp
push
lret
pop
fsub
imull
roll
arpl
or
stos
mov
cmp
push
lret
mov
fxam
int
fwait
lret
sti
sub
lret
jb
outsl
pushf
mov
add
out
bound
lds
push
adc
insb
ss
jno
out
sbb
lea
cmp
aad
orl
jae
repnz
clc
mov
sub
jmp
loop
push
sub
fcompl
ljmp
and
les
sahf
xchg
out
xor
insl
xchg
std
mov
pop
inc
adc
cld
ret
shll
fsubrl
shrl
xor
inc
adc
test
jnp
xor
scas
lea
sbb
out
iret
sbb
nop
addr16
cmp
pop
or
cmp
in
add
xchg
adc
push
push
in
ljmp
pop
pop
data16
das
faddp
pusha
xor
out
push
inc
cmp
mov
mov
ret
cmp
mov
push
mov
sbb
add
repz
mov
sarb
jns
xor
rcll
jo
cs
int
aam
lret
sub
mov
std
lcall
sbb
pusha
iret
mov
dec
mov
aam
jmp
stc
pop
push
stos
mov
mov
sbb
cmp
add
mov
push
push
std
dec
mul
cltd
adc
mov
adc
or
fcompl
in
mov
fcomi
lods
jg
jge
in
int3
jne
das
fnstcw
pop
sti
sbb
idivl
adc
xor
into
mov
and
sub
pop
cmpsb
jnp
insl
fistpl
call
jmp
mov
es
pushf
push
lods
call
or
insl
and
add
bound
adc
out
jbe
or
cmpsl
scas
cmp
xchg
dec
das
push
int3
mov
jb
push
sub
hlt
loopne
cmp
sbb
push
adc
pop
and
or
mov
add
jge
cmp
fadds
push
mov
mov
dec
mov
adc
cmp
insl
loope
and
subb
mov
jmp
in
add
call
push
imul
hlt
mov
mov
fs
or
jmp
unpcklps
jmp
xchg
lret
push
aas
jmp
and
push
adc
mov
push
nop
add
sbb
inc
repz
sbb
cltd
sbb
ficoml
call
loop
mov
adc
scas
jne
mov
pop
clc
push
and
repnz
aam
xorl
xchg
outsl
add
cmp
mov
fsincos
mov
out
fcoml
sub
jl
xchg
pushf
lret
sbb
jne
mov
lahf
fidivrs
push
add
stc
iret
mov
insb
push
addr16
and
aam
mov
nop
mov
xchg
and
sbbb
mov
stc
or
int
rolb
shlb
int
or
ja
sbb
imul
test
imul
pop
stos
ret
les
xchg
sbb
or
data16
mov
pop
cmp
sub
lret
and
popf
test
call
or
mov
mov
test
pusha
fsubrl
addr16
lods
push
fstl
or
lea
cli
rorl
pop
test
es
popf
sub
sub
pusha
outsb
adc
cwtl
xchg
gs
dec
out
leave
and
loop
icebp
pushf
bound
adc
fsubrp
fldcw
arpl
xchg
xor
sar
fwait
out
movl
js
test
mov
loop
stos
into
adc
dec
jno
pop
repz
stos
hlt
popa
pusha
nop
push
mov
imul
dec
fcmovnb
clc
stos
lds
notb
jle
data16
or
sub
mov
lds
lcall
xchg
or
sar
scas
add
call
insl
pusha
stos
adc
jp
dec
insl
hlt
imul
xchg
push
add
and
mov
test
xchg
cmp
cmp
aam
and
sub
push
sub
leave
lcall
push
ss
js
aam
add
jbe
jmp
sahf
xor
xchg
sub
pop
mov
mov
push
lods
pop
movsl
inc
das
mov
or
imulb
ja
scas
jne
gs
inc
inc
xor
sub
push
or
mov
or
das
ja
lcall
sub
fiadds
xlat
sbb
push
mov
repnz
roll
jno
out
inc
cmpsb
mov
mov
add
and
sbb
call
lock
adc
xchg
out
mov
sub
xchg
adc
sub
addr16
or
mov
add
add
sbb
cmovae
add
sti
xor
js
sub
enter
adc
test
scas
fsubr
push
mov
dec
gs
inc
cmp
push
cmpsb
or
stos
cwtl
cmpsl
scas
sbb
cmp
loope
dec
or
push
xlat
push
mov
insl
ja
sarb
loop
mov
outsl
mov
ret
dec
jecxz,pn
sahf
cld
jmp
cmp
in
cmpsl
inc
xor
or
lods
ljmp
js
cmpsl
cwtl
jno
adc
xchg
cmp
das
popf
pop
movsb
and
sti
xchg
add
sar
arpl
fiadds
shlb
cmpsl
or
xor
inc
dec
push
xchg
or
fcoml
sbb
or
adc
mov
aad
orl
test
add
sbb
gs
leave
push
inc
call
roll
es
mulb
imul
push
jnp
cmp
jmp
rcrl
outsl
sbb
shll
and
or
xor
call
cmpsb
jno
cmp
loopne,pn
notb
sbb
hlt
jnp
xorb
ss
hlt
mov
and
sbb
xlat
push
mov
sub
cmpsb
fsubrs
lods
mov
fidivs
movsl
inc
xor
pop
cmpsb
cmp
testb
add
call
jmp
and
cmp
mov
dec
push
int3
out
sub
hlt
xchg
inc
addl
out
xchg
pcmpeqb
stos
dec
popa
lret
cltd
mov
inc
in
scas
test
or
ja
sbb
bnd
ror
orb
pop
jge
add
xchg
dec
fcmovne
test
mov
pop
outsl
mov
in
pop
jmp
add
mov
jbe
imul
push
mov
filds
mov
cmp
mov
mov
dec
inc
mov
xor
sbb
pop
lret
dec
sbb
ljmp
js
stos
imul
jo,pt
mov
xchg
cmp
mov
xlat
or
jbe
push
arpl
call
adc
pop
push
dec
mov
xchg
adc
xor
outsb
add
jge
outsb
repz
cmpb
out
stos
cltd
mov
ds
mov
mov
mov
mov
sbb
mov
repnz
mov
xchg
out
dec
mov
sbb
xor
jg
sbb
adc
xchg
lods
mov
pop
out
aad
xchg
or
sbb
xchg
out
mov
imul
push
cld
imul
call
jp
data16
and
addb
test
pop
add
loop
adc
outsb
cld
push
add
xor
xchg
pop
or
jle
loope
dec
dec
jmp
sbb
adc
cmpsb
ficompl
or
clc
hlt
lods
test
outsl
xchg
mov
sbb
sti
test
sbb
cmpl
sbb
adc
jmp
aam
adc
sbb
ljmp
cmp
aas
jmp
dec
leave
mov
inc
aaa
sub
adc
icebp
jp
xor
jl
push
outsb
ss
test
jns
xor
push
mov
in
loopne
xor
ret
mov
push
xor
pop
cmp
push
mov
xchg
lods
cmp
mov
jae
jmp
popf
xchg
jge
pop
sub
push
inc
hlt
sbb
xchg
inc
sub
sahf
into
pop
push
gs
loop
nop
in
js
inc
pop
push
push
or
shrb
mov
inc
out
int3
and
xchg
xchg
es
jl
xlat
nop
and
aas
xor
stc
adc
add
subb
loop
inc
push
scas
add
inc
push
orl
mov
lahf
push
aaa
scas
das
jnp
inc
mov
mov
cltd
jnp
outsb
mov
fnstsw
cmp
or
xor
push
ljmp
or
dec
arpl
movsl
sbb
fdivrl
out
lods
bound
imul
and
xor
lcall
mov
inc
mov
mulb
mov
push
mov
sub
je
bound
cmc
cli
inc
loop
and
sbb
cmpsb
inc
jne
sbb
push
scas
lcall
ret
dec
ss
aaa
stc
or
flds
xlat
xchg
lods
mov
insb
jns
xchg
or
or
add
adc
add
push
repz
std
aaa
xchg
mov
and
cmovbe
lods
rcrl
xor
fiaddl
push
dec
lcall
inc
mov
xlat
xor
mov
out
mulb
insl
push
movsb
xchg
inc
pop
mov
mov
mov
std
lret
gs
cld
jbe
mov
mov
test
stos
fdiv
jbe
shll
mov
push
xor
jb
xchg
and
scas
xorl
mov
ret
dec
add
bnd
in
lods
cmp
mov
mov
mov
fdivl
test
push
xchg
out
mov
mov
aam
and
sub
and
fisubl
aas
push
mul
lcall
and
inc
pop
outsl
into
xchg
sarb
inc
pop
rcll
dec
fisubs
dec
pop
cmp
scas
daa
dec
dec
or
xchg
aas
cmp
ja
iret
imul
sub
jno
into
iret
and
mov
negl
out
leave
add
lds
mov
pushf
sarb
in
xor
leave
jle
mov
in
jecxz
out
mov
jmp
mov
sub
mov
cwtl
addr16
cmp
and
cmpsb
jmp
cmp
jp
inc
test
jg
into
jge
sbb
shll
mov
lret
dec
dec
stos
and
jmp
inc
loopne
adc
out
xchg
cld
sahf
stos
stos
out
and
inc
inc
and
and
dec
inc
jne
ds
jp
stos
mov
movsl
fstl
push
jbe
jnp
sti
int
loope
pop
pop
popa
test
mov
out
adcb
xchg
fcompl
movsl
sub
adc
push
lea
into
sbbb
out
arpl
es
jns
push
cli
es
cld
fiaddl
stos
int
cmpsl
push
dec
fwait
clc
cld
xchg
lea
outsb
das
aas
sbb
mov
mov
faddl
sub
push
xchg
push
outsl
repnz
add
ret
lret
jmp
in
mov
rcll
addr16
push
mov
gs
adcl
mov
mov
push
fbstp
push
mov
iret
faddl
mov
fdivs
sbbb
adc
ljmp
mov
jno
push
fs
rclb
rcll
lret
cmp
sarl
stc
cld
sbb
pop
jle
outsl
ror
dec
sub
insb
push
xchg
mov
add
aam
aaa
add
stos
push
mov
data16
out
scas
pop
push
sub
imul
pop
jecxz
mov
test
mov
mov
iret
and
test
in
jmp
add
and
mov
enter
or
xor
xor
arpl
aaa
test
mov
cmpsb
sub
mov
movsb
lahf
sbb
lea
sahf
pop
ret
push
test
data16
add
jl
mov
push
lret
shll
js
idivl
cmp
dec
sbb
movaps
push
push
mov
pop
inc
arpl
orb
mov
cmp
mov
mov
lea
adc
pushf
hlt
lods
mov
sub
sahf
push
mov
in
mov
inc
inc
pop
and
inc
or
push
cmpl
add
add
mov
jbe
jg
jl
hlt
cmp
repz
push
cmpsb
or
mov
inc
pushf
pop
xchg
popf
jecxz
mov
adc
popa
or
enter
pop
sarl
sbb
cmp
mov
movsb
pop
xor
push
and
and
or
jmp
roll
push
push
or
jp
mov
xchg
out
push
push
repnz
jge
daa
xchg
jne
movsb
in
xor
pop
xchg
dec
loopne
orl
dec
xchg
stos
jle
testb
cmpsb
pop
xlat
sbb
add
xchg
sub
push
aam
pop
xor
adc
sub
out
push
shlb
pop
cwtl
jmp
stc
mov
loop
imul
stos
ffreep
dec
loope
cmc
and
cs
clc
iret
aam
push
jns
in
insb
int
ss
cmpsl
outsb
fnsave
jp
sti
aas
pop
push
sbb
mov
xlat
aad
push
out
jp
les
scas
test
jb
sub
lods
sbb
jne
sub
lahf
push
je
jb
xchg
lds
pop
xor
imul
gs
dec
adc
int
popf
xchg
mov
push
mov
sbb
sar
jg
unpckhps
enter
jno
ret
inc
bound
sbb
fdivrl
pop
dec
out
stc
ljmp
pop
mov
dec
lret
mov
testl
add
mov
loope
rcrb
mov
mov
dec
mov
inc
jb
push
mov
movsb
mov
stos
mov
cmp
add
js
sbb
pop
or
aam
and
pop
dec
aam
jb
lahf
jnp
dec
jg
jp
subps
imul
lds
enter
sbb
sbb
sbb
and
add
adc
mov
scas
mov
cmp
loope
dec
inc
or
mov
pop
pop
stos
je
es
mov
pop
dec
or
xor
and
lods
mov
sub
leave
jl
dec
test
cltd
cld
leave
repnz
enter
cmpsb
int3
movl
dec
outsl
cltd
cmpsl
jecxz
push
pushf
addr16
mov
cmpsb
sti
inc
shll
icebp
inc
addr16
imul
aaa
leave
orb
imul
mov
int3
js
xor
cmp
incl
clc
in
fidivrl
xchg
xchg
cmp
and
fstps
push
xchg
dec
add
in
or
xlat
sti
aam
sahf
aaa
test
in
push
mov
ss
outsl
jp
repnz
xchg
pop
pop
and
aam
add
and
arpl
mov
ficompl
jb
add
mov
or
mulb
loope
xchg
leave
jnp
mov
daa
push
cmc
xlat
scas
aaa
pusha
repz
adc
sbb
pop
jl
inc
dec
sub
xchg
xor
insb
fbstp
nop
repz
pop
pop
mov
ret
outsb
mov
or
xchg
mov
pop
dec
xchg
test
rclb
subl
pop
hlt
pop
sub
fisubl
dec
cmp
add
cmp
xor
mov
mov
inc
dec
cmpsl
sti
xchg
ss
sbb
pop
or
pop
pop
push
aaa
or
es
in
mov
jmp
movsl
out
jge
sbb
subl
ss
repz
fimuls
imul
cmp
enter
xchg
lea
cmpsb
mov
dec
push
insl
jmp
adc
ljmp
iret
adc
fs
xor
xchg
arpl
mov
dec
xchg
out
in
pop
or
dec
cmp
or
test
jns
lcall
mov
lret
faddl
insb
test
or
dec
sub
jns
and
adc
adc
mov
into
in
mov
rcll
pop
mov
movsl
cmp
aam
xor
mov
cltd
shll
lret
dec
jb
sub
lret
dec
pop
sub
je
sbb
addr16
mov
cltd
pushw
ret
movsb
hlt
sub
lea
pop
subb
out
and
je
mov
outsl
pop
inc
aaa
inc
xor
lret
push
stos
icebp
arpl
loop
movsl
popa
or
inc
cld
aas
adcb
fcom
dec
or
out
sub
arpl
mov
bound
gs
add
lock
imul
xchg
leave
and
mov
jae
pop
data16
push
push
sbb
pop
or
jmp
xchg
outsb
pop
sub
sahf
xor
lahf
icebp
idiv
jb
xlat
bnd
dec
dec
mov
jbe
outsl
mov
mov
mov
jecxz
scas
xchg
sti
ret
jmp
lds
ljmp
scas
aas
push
ljmp
xor
xchg
mov
cmp
data16
sahf
inc
jecxz
inc
out
pop
mov
sub
mov
call
popf
pop
mov
or
das
dec
out
std
xlat
cltd
mov
mov
or
jp
je
mov
pop
dec
imul
ds
jno
loope
das
in
and
push
addr16
mov
aam
roll
out
cmp
jge
int
dec
push
xchg
push
test
xor
je
add
scas
pop
cmpsb
mov
dec
sbb
mov
call
jne
lods
int
aam
movsb
pop
ja
inc
rcl
repz
adc
into
add
js
rcr
fstps
mov
pop
add
mov
int
or
or
ljmp
cmp
dec
inc
repnz
mov
incl
dec
lret
pop
sub
xor
cmp
and
xchg
xor
lea
push
cmc
js
and
movsl
popa
dec
adc
hlt
pop
mov
push
or
movsl
push
cld
insl
lods
fadd
scas
jge
fwait
popa
pop
mov
cmp
test
loope
fucom
je
nopl
sbb
xor
jno
lock
out
dec
cmc
sbb
cmp
jns
add
xchg
andb
div
enter
xor
popa
dec
cli
cmp
lcall
xchg
ss
ja
lcall
jmp
mov
mov
mov
das
xchg
adc
movsb
test
fldl
decb
and
sarb
es
push
lock
ss
mov
push
insb
adc
and
out
out
mov
dec
jp
jp
mov
sub
wrmsr
lahf
xchg
jne
fimull
sub
sub
push
adc
cs
jbe
xor
cmpsl
test
and
imul
scas
int3
mov
insb
jge
mov
xchg
dec
lcall
jle
lahf
mov
in
aad
pushf
cmp
sar
mov
out
mov
inc
clc
shll
push
rcrl
jb
sub
scas
pop
mov
push
xor
cmp
mov
lods
inc
xorb
pop
cmpl
movsb
repz
lock
cld
das
pusha
out
stos
dec
int
inc
imul
pop
xor
movlps
adc
sub
jb
add
call
jae
movsl
pop
daa
hlt
imul
call
xacquire
out
ret
or
fdivs
sub
sarb
add
insb
inc
mov
adc
arpl
ljmp
cmc
and
push
pusha
es
fimull
rcrb
xor
sub
xchg
in
dec
dec
xchg
push
stos
jb
sub
jno
pop
fstl
pop
inc
loope
insb
lahf
push
adc
pop
jmp
jnp
mov
testl
inc
sti
sbb
cmp
xchg
outsl
div
stos
loop
lods
jae
inc
stos
movl
nop
rcr
mov
imul
scas
xchg
mov
cmpsl
incl
sub
adc
sbb
cmp
dec
aaa
xor
stos
cmpsl
into
lods
xchg
mov
addl
mov
fmuls
in
outsl
pop
and
cmp
adc
loopne
aas
in
cmp
js
sub
pop
subl
ds
dec
mov
movsb
cmc
mov
mov
stc
pop
sub
icebp
inc
jo
rcr
leave
rdmsr
jmp
icebp
xor
sti
jno
sub
int3
sbb
xlat
jp
push
and
sbbb
int3
pop
hlt
cmpsb
or
dec
test
add
stos
ret
ret
jo
aam
pop
ja
sub
shll
pop
or
lret
inc
inc
das
adc
aad
jmp
shr
das
popf
or
and
xor
sbb
jns
or
xchg
xor
cltd
stos
or
outsl
cwtl
sub
jns
fs
add
mov
xlat
test
adc
mov
aam
dec
loopne,pt
lret
pop
push
adc
shrl
push
xlat
adc
outsl
aas
fsubs
mov
pop
cld
sub
mov
mov
into
xor
ja
jecxz
jl
insl
rcl
js
cmpl
std
rcrl
and
push
int
arpl
mov
pop
incb
std
jle
into
pop
xor
daa
insb
lret
cmpsl
mov
add
inc
inc
sub
fs
imul
pushf
xchg
mov
popa
outsb
inc
mov
out
insb
push
fisubrl
cltd
jp
fdivrs
mov
int
outsb
test
jge
sub
cli
fistpl
rorl
shrb
bswap
ficoml
andl
adc
and
cmp
dec
fld
xor
cmp
sub
cmp
imul
out
loope
jle
xchg
mov
pop
and
pop
mov
xchg
insb
and
cmpsb
mov
lods
cli
jmp
xchg
sti
add
dec
push
std
dec
cmp
jne
pop
xchg
sub
push
push
nop
mov
aam
fs
jne
divb
pop
lea
lret
daa
rcll
leavew
lret
jbe
push
xchg
adc
lret
popa
sub
sub
clc
push
push
sbb
subb
mov
sbb
xchg
divl
fs
xor
lods
sti
jo
das
jge
mov
or
pop
cld
sbb
adc
repnz
rclb
pop
add
sarl
sbb
ficoml
mov
loope
cmp
pop
cli
add
mov
pop
mov
inc
dec
dec
xchg
scas
and
add
xor
and
fsub
xor
out
adc
test
jl
inc
push
cltd
std
add
jb
cmp
lret
lret
cmc
push
test
sti
mov
mov
cmp
push
out
mov
lret
mov
std
cmc
sub
int3
push
cmpsb
cmc
test
iret
jmp
dec
pop
xor
das
roll
xor
addr16
push
in
jo
je
mov
stc
out
fwait
jmp
mov
and
mov
jno
mov
xchg
pop
push
adc
pusha
fs
pusha
sbb
sti
test
icebp
mov
subl
and
xchg
loop
xchg
outsl
pop
in
push
add
jl
fisttps
lock
mov
fsubrs
imul
movsl
xor
adc
sub
std
cmp
adc
xchg
jle
fsub
aaa
lods
outsb
leave
mov
push
add
push
dec
les
fstps
decl
in
inc
loopne
or
into
push
mov
inc
in
or
mov
inc
andl
sbb
mov
dec
inc
adc
lret
xchg
jbe
pop
fstps
pop
mov
sbb
mov
pop
jno
outsb
cmpsb
int3
inc
mov
xorb
aam
adc
and
negb
inc
xor
daa
in
push
movsl
mov
push
jle
fsubr
dec
popf
add
add
repz
xor
cs
dec
sub
dec
inc
push
add
sbb
mov
mov
pop
or
fisttpl
cmp
nop
push
xor
cmp
or
sbb
rclb
inc
add
pop
xchg
clc
pop
xchg
addr16
dec
sti
loopne
push
add
xchg
insb
xchg
in
ss
rorl
fs
dec
mov
xor
mov
negb
or
mov
jmp
mov
or
mov
mov
in
and
cmp
mov
push
lods
mov
mov
pushf
movsl
clc
lahf
pop
mov
iret
loopne
fldl
jmp
es
mov
jne
imul
inc
push
hlt
pop
mov
push
clc
js
push
and
ret
sti
mov
cwtl
lea
mov
enter
and
out
mov
adcl
and
sarb
xor
push
in
push
jo
fstps
mov
movsb
push
cli
addr16
mov
mov
enter
rcrb
xchg
and
mov
push
test
leave
sub
hlt
out
xchg
cld
addr16
mov
imul
jmp
mov
adcb
lcall
stos
adc
int3
cmpsl
outsl
cmp
stos
jae
cld
fs
pop
lods
adc
mov
pop
inc
cmp
repz
xchg
imul
cmc
push
jae
inc
inc
test
ficoms
fstl
jae
and
jmp
inc
shrb
mov
cmp
jbe
movsl
xor
sbb
push
cwtl
fdiv
rolb
sbb
jno
aas
jmp
xchg
inc
pop
setge
lahf
daa
hlt
scas
xchg
pop
cld
mov
mov
add
or
dec
rcr
push
cmpsl
sbb
mov
push
imul
or
call
shl
and
cmp
call
xor
add
mov
cmc
mov
mov
xor
loope
jecxz
enter
xchg
and
xor
push
push
dec
inc
mov
or
jb
pop
sahf
gs
xchg
sbb
dec
clc
and
push
sub
out
cmp
jne
nop
rolb
rorl
clc
lahf
lods
xchg
cld
ljmp
mov
nop
or
dec
lret
inc
xchg
xchg
cmp
js
push
pop
inc
cmp
mulps
push
pop
loopne
sahf
cwtl
push
shlb
adc
dec
sbb
mov
push
shl
jmp
add
addr16
les
ja
jmp
add
mov
ret
pop
test
mov
ss
je
sub
push
mov
aas
push
inc
cmp
adc
adc
les
scas
inc
pusha
lea
stos
clc
insl
add
adcb
or
push
lods
jo
mov
pop
lods
test
ret
mov
lods
jb
or
pop
add
and
mov
pop
stos
mov
add
dec
or
xchg
pop
ficoml
fimull
lods
mov
int
mov
mov
pop
dec
jle
imul
dec
jmp
shrl
mov
mov
loope
jge
adc
pop
cmp
sbb
push
fistpll
pushl
mov
lret
fisubl
sbb
sub
cmp
mov
fstpl
or
and
mov
xor
sub
repz
push
popf
sub
mov
clc
xor
pop
push
jl
dec
shrl
xchg
ror
movsl
adc
scas
aam
loopne
loope
sbb
inc
es
rol
lcall
cltd
jmp
call
dec
in
ja
mov
int3
stos
mov
dec
jb
xor
mov
in
pop
push
stos
mov
pushf
pop
mov
xchg
dec
nop
ret
mov
out
pop
aas
out
in
test
cwtl
ja
out
lods
add
and
push
clts
cmp
daa
pop
es
cmp
sbb
dec
in
push
outsb
adc
jbe
scas
jmp
jnp
aaa
cwtl
xor
sub
push
test
cmp
mov
push
sbb
lahf
inc
mov
adc
pop
bound
fidivrl
test
in
fcoms
pop
mov
icebp
jns
aad
int
pop
out
lock
jmp
test
cwtl
cmpsl
push
xorb
shrl
inc
xchg
mov
and
cmpsb
popfw
push
xlat
xchg
out
subl
or
stos
and
xor
xor
adc
jae
scas
mov
int3
outsb
pop
pop
inc
and
sbb
adc
cmp
cwtl
lret
jge
ret
cmpsb
pop
mov
cld
pushf
fwait
stc
add
push
dec
mov
in
ds
push
pop
int3
push
popf
fsubp
mov
enter
imulb
lcall
test
test
cmpsb
iret
xor
xchg
lar
jbe
add
add
sbb
scas
jmp
fadds
push
pop
stos
add
dec
scas
popa
sub
sub
daa
movsb
inc
shl
mov
add
mov
mov
retw
jmp
loop
pop
jb
push
inc
out
popf
out
sub
lock
cmp
add
push
or
shrb
insl
mov
lcall
loope
arpl
cltd
adc
sahf
jne
and
xlat
insb
call
push
cmp
xchg
pop
mov
sbb
adc
scas
nop
int
xchg
insl
add
push
rolb
jbe
test
outsb
icebp
outsb
cmpsl
sahf
sbbb
repnz
outsb
dec
cmpsb
sbb
shl
adc
or
pop
dec
sahf
pop
rorb
jge
popf
lcall
add
call
ret
inc
out
iret
jmp
rcrl
ljmp
sbbb
jb,pt
jno
xor
pop
lea
clc
jmp
repz
sbb
xor
das
cmp
out
shlb
add
push
insb
xor
js
fstpt
rcl
ljmp
cld
mov
loopne,pn
xor
incb
repz
stos
xchg
sbb
in
imul
xchg
insl
mov
lret
cmp
insl
shll
jne
xchg
in
imulb
pop
push
adcb
cmp
mov
mov
into
std
leave
mov
movsl
mov
sti
iret
inc
out
xchg
out
sahf
add
cmp
sub
in
clc
aas
stc
out
cli
lret
adc
scas
jle
mov
mov
shrb
insb
pop
pushf
lds
testb
add
jns
adc
addr16
insb
cmp
rcll
sbb
mov
cmp
out
hlt
mov
or
dec
fbstp
ljmp
int3
ds
or
lret
xchg
mov
or
jb
es
dec
push
mov
push
mov
in
arpl
shr
dec
dec
dec
mov
bnd
push
popf
push
scas
lcall
out
fiaddl
cwtl
out
mov
cmp
cmp
mov
pop
es
xchg
es
inc
ficoml
xchg
xchg
cmc
int3
fiadds
xor
sbb
or
stos
les
or
jl
insb
in
mov
mov
cltd
xor
fsubr
enter
icebp
imull
mov
scas
clc
sub
test
sahf
in
roll
push
sub
xchg
xchg
push
xchg
pop
push
xor
ret
ss
out
jns
scas
cmpsb
cmc
aaa
and
mov
cltd
in
sbb
cld
xor
xchg
xchg
pop
fldenv
sub
repz
into
mov
or
mov
pushf
cmp
jecxz
inc
push
mov
xor
xor
jb
fistl
lret
inc
push
std
repnz
fistl
jl
xchg
sti
das
fwait
lcall
ret
sbb
and
cmp
fwait
dec
cmpsl
xlat
mov
out
and
fistps
insl
jle
fdivl
in
aad
jmp
mov
subb
sbb
adc
stos
les
mov
repz
xchg
ds
mov
fimull
sbb
stos
das
sub
lock
addr16
jl
std
push
lahf
mov
dec
es
or
or
test
dec
xchg
and
lock
adc
fpatan
ret
in
cmp
repnz
and
in
push
sbb
loope
movsb
cmc
inc
cld
sub
pop
or
inc
inc
pop
icebp
addr16
adc
sbb
mov
test
sarl
cmpsb
lret
nop
ss
pop
jae
jmp
xchg
ljmp
cld
jge
dec
inc
xlat
add
pop
pop
jbe
mov
pop
inc
mov
in
cmp
mov
outsl
data16
sbb
sub
repnz
xor
aad
sub
mov
dec
adc
sbb
dec
jp
inc
je
int3
xor
aad
sarl
fdivrl
push
cmp
sbb
adc
xor
push
das
movsb
leave
shrl
fwait
scas
mov
fcomps
call
add
fstpt
mov
stc
mov
xchg
popf
mov
rcll
in
lods
and
jp
repnz
or
addr16
dec
adc
push
xor
sbb
popa
mov
repnz
dec
shrl
jecxz
mov
mov
or
xor
lret
adc
push
mov
bound
and
outsb
js
or
jecxz
cltd
inc
xor
xchg
repnz
push
testb
mov
pop
scas
lret
rolb
dec
mov
cmp
jno
in
and
jle
dec
dec
xor
shll
sub
stos
mov
hlt
icebp
shrl
dec
ret
lcall
xchg
sub
pop
inc
or
mov
xor
pop
mov
cmp
popf
stc
or
push
dec
mov
gs
fimuls
sbb
lock
and
rorb
inc
stos
gs
push
mov
pop
fdivl
pusha
push
push
enter
mov
repz
das
outsl
xor
fstl
mov
sbb
ficoms
jg
adc
push
mull
arpl
mov
and
aad
fidivl
popa
mov
mov
adc
add
jp
loop
jp
std
test
dec
test
test
or
inc
es
sbb
add
and
mov
ret
rcrl
lea
sbb
and
movl
jle
xchg
mov
dec
sub
or
pop
mov
jne
mov
jmp
popf
adc
pop
out
shlb
or
dec
andl
into
xor
cmp
pop
xchg
movsb
inc
sti
outsb
xlat
cmp
lea
pop
lods
and
mov
or
cmovle
pop
mov
adc
stos
pop
mov
test
mov
cs
mov
fcmovu
cmp
xchg
mov
pusha
test
sub
aas
scas
xor
sub
dec
push
into
out
mov
ret
jbe
xlat
push
or
xor
mov
test
inc
imulb
push
test
scas
int3
jecxz
imul
mov
jl
sbb
xlat
popf
into
je,pn
cmpsl
cli
add
gs
sbbl
int
adc
int
or
inc
push
or
sbb
mov
mov
cmc
or
repz
int
dec
testl
fcoml
sbb
test
nop
cld
loop
shl
call
out
add
jns
call
or
adc
int
mov
push
push
pop
pop
out
push
push
or
mov
pop
aaa
pop
and
mov
inc
mov
in
push
mov
inc
mov
das
jne
mov
jle
sbb
or
lcall
fidivl
or
enter
das
addr16
jp
fidivl
sub
loop
test
push
int
xor
sbb
gs
incb
mov
adc
push
rcrb
lods
jp
or
pop
testb
loopne
in
scas
lret
xor
xchg
ja
inc
xor
movsl
push
int3
lea
dec
sub
sbb
mov
adc
mov
pop
inc
push
ss
xchg
mov
imul
lods
jecxz
popa
jge
scas
cmp
xchg
jnp
fdivs
in
fdivl
pop
inc
rclb
outsb
add
push
stc
jmp
pop
aaa
and
jae
dec
sbb
jmp
in
adc
pop
decl
jle
ret
lea
mov
ficoml
test
xor
sub
dec
mov
dec
ss
into
cmp
notb
cmp
sub
test
lds
jmp
cmc
in
clc
out
dec
lds
push
dec
repz
clc
push
adc
pop
add
addb
adc
clc
mov
ja
movsb
pusha
push
jmp
aam
outsb
mov
cmpsl
pop
add
pop
in
jno
bound
mov
cld
ds
sbb
xchg
push
pop
aad
inc
cmp
adc
cmp
jns
xor
inc
andl
arpl
sarl
mov
cmpsl
mov
cmp
or
inc
jno
dec
lret
xchg
xchg
test
xchg
leave
mov
out
dec
pop
push
jbe
and
xchg
jecxz
je
addr16
and
mov
or
push
or
cmp
arpl
xchg
cmp
cwtl
test
mov
and
mov
insl
mov
jecxz
insb
add
pop
jb
ds
push
out
jl
mov
sbb
pop
adc
sbb
mov
cmpsb
adc
in
out
xchg
out
push
inc
fwait
out
adc
mov
xor
cwtl
out
cmp
jge
inc
xor
test
imul
and
mov
xchg
icebp
dec
js
jns
dec
mov
inc
adc
mov
std
mov
pushf
dec
fs
test
add
jnp
sub
jmp
xchg
in
outsb
sbb
lock
mov
xchg
aad
call
inc
out
cltd
and
adc
cmc
xchg
jo
jbe
xlat
pop
jge
push
mov
or
mov
das
push
inc
stc
jns
aad
out
mov
test
stos
in
movsl
mov
pop
jbe
sbb
xlat
popf
jb
mov
cmp
icebp
pushf
mov
xorb
scas
mov
test
mov
jb
inc
rcrb
sub
cwtl
cltd
decb
loope
inc
pop
and
imul
jmp
dec
or
xor
out
mov
call
add
sahf
mov
cmp
jno
lods
jns
sbb
outsb
mov
mov
mov
mov
push
dec
xor
dec
dec
stc
scas
mov
addr16
adc
jecxz
ret
stos
pushf
dec
int3
xchg
push
cmpb
adc
inc
add
daa
cmpsl
pop
sbb
mov
add
push
inc
jp
rorl
inc
hlt
cs
insl
in
outsl
rcrb
add
push
mov
dec
in
mov
fisttpll
xlat
dec
cmpl
inc
sbb
adc
cmp
fildl
jle
mov
cmp
pop
mov
mov
and
sahf
jmp
add
xor
jnp
lcall
mov
jno
mov
sbb
test
and
flds
ret
xchg
int
jne
outsl
outsb
xchg
out
adc
mov
sub
mov
jmp
dec
hlt
lret
inc
data16
and
adc
loope
jnp
cmp
fdivl
fisubrs
inc
cltd
test
xchg
cmp
cmp
mov
adc
or
jae
and
sub
jne
sti
jnp
lret
xor
ficompl
dec
sarl
mov
jl
aam
jnp
cli
xchg
fbld
jbe
shll
push
mov
stos
iret
pop
fisubs
xchg
adc
adc
lcall
sbb
add
les
cmc
shrb
and
into
punpcklwd
test
ja
lock
fs
mov
xor
in
sbb
jp
jns
adc
sub
test
jnp
pand
jno
dec
mov
sar
lret
inc
cltd
fs
pop
sbb
push
cmp
mov
push
xor
pop
dec
mov
sub
add
dec
sbb
inc
mov
popa
cltd
push
cmp
test
leave
in
mov
dec
ljmp
pop
scas
mov
xchg
cmp
test
sub
or
mov
adc
sbb
ficompl
cmp
loopne
inc
arpl
xor
mov
mov
enter
sti
insb
sbb
sbb
out
scas
mov
bnd
and
mov
scas
sbb
mov
popf
je
jp
inc
dec
sar
jp
out
adc
dec
shlb
jns
negb
push
lret
cmp
sbb
mov
sbb
andb
pop
sbb
sbb
imul
fdivrl
stc
xchg
mov
mov
mov
and
sub
insl
mov
arpl
cmpsb
mov
mov
push
movsl
pop
mov
jle
inc
andb
pushf
ljmp
pop
push
imul
sbb
out
jp
aas
ss
sub
cmc
add
inc
out
fldl
arpl
movsb
in
mov
clc
das
cmp
call
out
ficomps
cmpsb
sub
xlat
out
xor
mov
mov
sub
add
lret
mov
jle
or
out
jecxz
ss
sbb
popf
test
iret
xor
cli
pusha
inc
sbb
xchg
inc
mov
jecxz
into
add
dec
pop
adc
jge
dec
sub
fbstp
fsubrl
jmp
dec
add
mov
jg
or
mov
pushf
mov
mov
fbld
xchg
jg
sbb
xchg
and
lahf
mulps
andl
mov
scas
add
mov
and
lret
xchg
in
lods
sub
dec
sbb
pop
daa
pop
mov
sub
push
sub
jmp
imul
inc
int
fdivrl
cmp
jecxz
data16
pusha
mov
lds
pop
or
and
push
xor
pop
repnz
add
sbb
dec
cmc
imul
mov
lods
nop
ret
bswap
fisttpll
pop
fmuls
js
enter
mov
cmp
hlt
scas
sub
xchg
jmp
mov
cmp
xor
scas
mov
jecxz
or
cmp
cmpb
test
or
popf
shr
rolb
fimull
divb
sbb
pop
nop
ja
dec
inc
sbb
icebp
jns
lret
les
ja
cmpsb
inc
aam
sbb
pop
and
pop
push
mov
pop
sub
xchg
ss
sbb
sahf
fadds
fstps
pop
ss
dec
push
inc
clc
cwtl
xor
test
xor
inc
movsw
pop
int3
pop
mov
movsb
xchg
adc
movsb
sub
sbb
fcomps
mov
inc
stc
mov
push
sahf
push
fisubrs
fistps
sbb
jb
jo
scas
mov
scas
enter
inc
int
iret
fs
cmp
fiadds
mov
out
and
aam
ret
mov
xchg
fwait
sti
ljmp
xor
cmp
test
push
test
jo
xor
test
dec
mov
je
push
ja
shll
loopne
loope
jge
cmp
mov
cmp
cli
out
or
or
out
jo
scas
and
adc
test
sbb
cmp
xor
sub
adc
dec
test
xor
push
pop
gs
dec
imul
stos
jns
mov
out
or
dec
js
nop
xchg
xchg
cmp
sub
addl
and
mov
imul
inc
jb
in
push
fnstcw
xchg
cs
and
xchg
adc
inc
or
push
test
or
in
test
cmpsb
add
test
sti
mov
xor
mov
movsl
pop
test
dec
jns
jne
xor
sub
mov
xchg
cli
mov
push
sbb
mov
addl
out
sub
stos
stos
inc
xchg
mov
imul
fidivs
jns
jbe
stc
pop
sub
and
popa
js
test
mov
gs
push
cltd
shrl
bnd
aad
sbb
pop
test
daa
xchg
adc
mov
fstpt
lret
in
popf
stos
add
jb
or
jmp
call
push
inc
call
push
aaa
push
mov
dec
sahf
mov
shl
ret
rcrb
dec
mov
xor
int3
dec
jmp
in
test
jmp
fldenv
jmp
mov
push
stos
push
adcl
dec
arpl
in
sbb
jbe
inc
loopne
push
lcall
xor
fwait
xor
or
dec
outsl
cld
hlt
daa
jb
xchg
insb
out
sti
cs
ljmp
cmpsb
push
sub
inc
push
dec
cmpsb
fdivrs
cmp
sahf
addb
mov
sub
fld
or
scas
insl
mov
jecxz
sbb
and
movsb
das
sub
dec
mov
pop
fdivrl
fistpl
add
std
push
mov
adc
jnp
cs
adcb
add
jcxz
ja
in
jne
jp
punpcklwd
cmp
sbb
roll
nop
ret
aas
and
rolb
aaa
or
push
iret
pop
jns
pop
movsl
clc
xchg
cmc
add
fwait
bnd
mov
xor
lret
push
mov
fs
leave
jae
aam
pusha
fisubrl
cs
cmpsl
pop
pop
bnd
mov
push
xchg
pop
mov
add
xor
add
dec
in
xchg
xor
std
push
mov
cs
mov
imull
mov
xchg
test
scas
pop
pop
push
cmp
sbb
push
cmc
andl
stos
sbb
push
add
adc
mov
pop
test
cmpsl
mov
dec
cli
cmpb
inc
or
movsl
inc
dec
fistpll
mov
dec
cmp
pop
outsl
inc
xchg
xor
movsl
ss
push
packsswb
xchg
in
filds
stos
jo
xor
or
loopne
cmpb
rclb
pop
fwait
popf
jl
vcmpss
in
pop
jns
and
fisubs
xchg
inc
loope
mov
adc
daa
cwtl
push
aad
idivl
cmc
jg
les
push
loopne
or
add
int
not
neg
ficoml
lahf
shrb
or
mov
mov
in
adc
test
xor
in
push
rcll
pop
movsb
mov
rolb
push
xor
std
cmp
push
and
mov
inc
fstpt
sbb
stc
int
add
inc
jl
mov
xchg
mov
fdivrl
and
jg
or
xlat
xlat
add
xor
lahf
mov
arpl
sub
rolb
sbb
out
mov
or
push
fimuls
hlt
std
ret
fcomps
int
shrl
insl
add
fsubrs
mov
pop
jp
or
cwtl
dec
sbb
jp
push
dec
mov
dec
fistpl
out
loop
int
mov
adc
xchg
or
or
xchg
inc
xchg
cmp
and
aad
lret
aam
pop
pop
inc
rcl
enter
xchg
adc
jb
mov
jg
jne
push
sbb
xchg
test
test
sti
lret
frstor
inc
out
lret
inc
mov
sbb
loopne
nop
lea
iret
dec
mov
pop
loope
je
fsubrl
hlt
out
dec
or
pop
cmpsb
mov
daa
cmc
pop
mov
or
loopne
pop
xchg
fnsetpm(287
mov
aam
loop
in
enter
loope
mov
add
adc
cmp
stc
out
loope
lock
pop
andb
sub
lods
lods
lret
mov
xchg
mov
fucomi
aam
inc
adc
scas
cwtl
cmc
cmp
sub
pop
ds
sub
pop
outsl
xchg
mov
pusha
jg
jno
je
mov
ljmp
adc
jnp
mov
int3
cmp
push
or
test
pop
std
gs
pop
je
adc
hlt
pop
fisubs
mov
mov
pop
jnp
shlb
and
fists
cmp
xchg
inc
loop
jo
aas
sbb
inc
mov
dec
shll
in
mov
ret
push
jnp
mov
dec
add
dec
lods
dec
pop
cld
ja
lods
inc
xor
es
xor
ds
dec
adc
or
lods
ds
je
mov
cmp
cmp
xchg
xor
pop
jmp
cli
aaa
cs
sahf
stos
aaa
dec
mov
push
sbb
or
push
and
inc
movsb
sub
or
rorl
sub
xor
sahf
or
rorl
xchg
and
mov
bound
or
test
jp
sub
mov
or
movsl
push
repz
js
lcall
xlat
jmp
inc
int
xchg
popa
arpl
clc
mov
js
test
loope
div
xor
mov
fwait
sub
mov
inc
dec
call
push
outsb
push
or
pop
test
push
cs
add
mov
es
jo
jne
mov
aam
ljmp
add
and
mov
cmp
clc
sahf
int3
or
sbb
mov
arpl
fmull
mov
cmp
xor
arpl
sbb
aad
sub
adc
movsb
int3
or
xchg
outsb
test
stos
sti
add
outsb
inc
push
pop
xchg
sbb
xchg
stos
fucomi
addr16
mov
sbb
ficompl
cld
es
test
lods
cmpsb
aad
test
in
mov
mov
and
dec
push
push
add
cmp
xchg
loop
cld
pop
clc
sbb
pop
inc
cmp
aaa
fldpi
lds
aas
test
push
xchg
and
jae
push
add
and
fsubs
aas
cmpsb
inc
adc
push
ljmp
out
fnsave
outsb
mov
add
addr16
dec
mov
dec
mov
movsb
xchg
inc
cmc
cltd
incb
mov
adc
nop
movsb
sub
loope
add
ss
dec
add
cmp
enter
xor
pop
pop
jne
mov
int
pusha
iret
cmpsb
mov
std
cmp
call
shrl
mov
in
mov
inc
mov
add
pop
jno
sbb
xor
or
sbb
outsl
leave
inc
test
xchg
out
aas
cmpsb
xchg
add
shlb
sbbl
sub
outsb
rclb
dec
out
fstpt
leave
pushf
in
mov
movsl
pop
sbb
pop
stos
and
cmpsb
lcall
mov
mov
lcall
jp
adc
sbb
mov
and
push
enter
cmpsb
das
mov
js
loope
lods
daa
xor
jb
add
repnz
out
mov
push
adc
arpl
mov
shr
xchg
rorl
mov
sbb
and
test
movsl
js
cltd
ds
dec
sbb
push
fs
ret
out
or
add
sahf
push
push
shll
sahf
jg
mov
xchg
jp
cld
inc
loop
inc
les
int3
xchg
xlat
test
pop
xchg
jp
mov
push
leave
push
cs
or
cli
sbb
ret
es
into
add
icebp
xor
stos
lea
push
jmp
mov
adc
xchg
addr16
lahf
dec
daa
pop
inc
cmp
mov
adc
sahf
mov
mov
or
stos
in
mov
inc
lahf
icebp
xchg
imul
mov
lea
enter
mov
loopne
testl
xorl
repnz
cli
xor
jns
stos
xchg
jle
bound
fnstenv
pusha
adc
pop
gs
stos
mov
mov
adc
xchg
xlat
ret
xchg
jne
sbb
mov
lea
or
std
sbb
insl
mov
mov
jmp
sbb
sbb
jecxz
imul
mov
dec
or
push
into
mov
mov
ljmp
push
arpl
leave
lahf
mov
stos
adcl
mov
dec
jp
cmp
pop
lods
addb
fmull
outsl
mov
dec
mov
adc
scas
decl
ds
xor
popa
mov
pusha
dec
inc
dec
pushf
push
and
je
popf
push
jne
fidivs
addr16
cwtl
or
sahf
push
fnsave
aaa
cs
adc
inc
pop
es
or
mov
popf
dec
add
lahf
shll
ss
jo
rorl
xor
jo
dec
xchg
pop
inc
mov
push
jle
adc
push
mov
sbb
lahf
add
pop
leave
dec
test
iret
arpl
mov
adc
adc
sbb
stos
mov
ss
push
dec
mov
fadd
fldt
dec
sub
sti
ficoml
jb
mov
data16
in
mov
nop
cmp
rorl
adc
rorb
cwtl
mov
movsb
cmp
xchg
lods
fcoms
ficomps
mov
das
pop
and
insb
xor
sub
push
xor
out
and
sbb
cli
mov
mov
push
aas
fstpl
cmp
jmp
inc
out
js
cmpsl
test
stos
in
cmp
out
test
dec
xor
insl
or
and
mov
mov
sahf
mov
mov
test
test
xor
popf
mov
ja
in
shlb
jae
mov
pusha
cs
pop
sbb
jbe
movsb
and
push
mov
mov
jle
xchg
shrl
es
sub
imul
xlat
push
or
jo
mov
push
add
and
das
jno
sub
push
adcb
push
stos
sub
js
fsubp
cmp
enter
iret
or
sbb
stc
mov
push
lret
adc
dec
int3
xor
push
divb
outsl
fwait
xor
add
xchg
adc
es
mulb
mov
jmp
mov
jbe
add
mov
pop
pop
scas
cmpb
pusha
jae
iret
sti
jae
call
cmpsb
popf
in
pop
pop
and
sub
insl
xchg
stc
test
cmp
mov
add
addb
scas
mov
mov
push
mov
mov
fcomps
neg
addr16
mov
pop
sbb
test
xchg
jge
lock
sahf
arpl
mov
in
sbb
mov
mov
in
fistps
out
enter
inc
test
xor
sub
out
in
pop
sbb
xchg
cmpsl
jbe
sub
outsl
int
mov
dec
test
add
mov
push
xlat
add
int
ffree
add
repnz
out
loope
stc
xor
pop
loope
lock
popa
jl
pop
mov
ret
jmp
dec
fisubrl
add
pushf
lock
adc
dec
or
jg
and
adc
insl
sahf
or
dec
mov
inc
sbb
push
xor
std
orl
aam
cmp
xchg
dec
hlt
cmc
iret
lahf
inc
mov
mov
or
push
push
and
dec
mov
sbb
mov
inc
inc
repnz
jbe
hlt
aam
or
in
outsl
inc
or
rcrl
out
lods
sbb
leave
bound
popf
adc
fs
or
js
enter
outsl
sbb
dec
mov
mov
icebp
je
lret
iret
adc
and
cmc
xor
test
pop
gs
push
mov
pop
sub
jb
int3
movsl
cmc
jns
cmp
jns
or
adc
int3
cmpsl
fnsave
scas
add
repz
fcmovnbe
cmp
inc
push
sub
jno
sub
dec
xchg
std
ljmp
jecxz
cwtl
dec
inc
out
das
lds
out
adc
dec
popa
outsb
aad
lcall
xchg
fcomip
imul
scas
popa
pop
cmp
loop
cwtl
out
in
pop
xor
dec
pop
sahf
outsl
sbb
or
popa
and
add
aam
shr
cwtl
mov
inc
jmp
adc
sub
sub
pop
ljmp
fadds
out
dec
mov
nop
xchg
jl
xchg
dec
inc
lahf
jmp
mov
pop
scas
sub
call
das
rorl
jae
out
cmpl
fbstp
out
dec
sub
pop
stos
in
test
scas
pop
mov
xlat
fucom
mov
and
add
les
nop
pop
stos
jne
scas
or
into
loopne
frstor
js
lret
jl
mov
jl
mov
pop
pop
aas
in
and
mov
and
cmp
mov
fcmove
loop
and
and
pop
test
sbb
dec
push
gs
cltd
push
in
in
cmp
nop
xchg
inc
mov
fsubs
adc
push
xchg
daa
out
aam
ljmp
sti
push
dec
pop
and
inc
data16
loop
inc
mov
scas
inc
jbe
outsb
mov
lds
pushf
test
push
movsl
jnp
or
fcom
xchg
mov
mov
inc
push
xchg
lods
adc
sbb
jp
in
into
pop
into
aas
hlt
mov
and
int
mov
cmpsb
add
movsl
test
imul
jl
inc
inc
icebp
sar
pop
imul
dec
pop
mov
ljmp
cld
andb
sub
pop
inc
mov
repnz
and
ljmp
add
lock
setle
pop
and
pop
push
jbe
cmc
jns
lret
lret
push
pop
ret
cltd
out
mov
and
mov
ret
push
push
adc
cwtl
cmc
push
pop
xor
loope
insl
xchg
daa
shr
sbb
dec
xlat
sub
mov
mov
mov
lock
rclb
int3
in
cmp
mov
xor
sub
xor
pop
es
dec
xchg
push
inc
xchg
and
out
dec
lea
dec
and
rcl
gs
pop
inc
inc
jno
mov
mov
push
add
daa
lret
xchg
fmuls
xchg
cmp
sbb
js
out
sub
pop
fwait
dec
mov
rorb
xchg
outsb
sub
jge
xchg
or
les
sbb
mov
in
rolb
push
add
mov
sub
sub
or
hlt
sahf
push
cld
adc
xor
fsts
ss
push
addr16
xchg
jae
popa
jo
adc
xchg
in
mov
shll
push
xchg
adc
enter
mov
shrl
mov
and
outsb
cmc
scas
xchg
pop
xchg
fldenv
fmuls
add
pop
lock
mov
decb
jne
in
jbe
jge
mov
cmp
ror
gs
insl
je
sbb
dec
ljmp
stos
add
dec
sub
sti
mov
pop
push
and
mov
xchg
stc
mov
aad
divb
ret
or
add
xchg
xor
mov
sahf
sbbl
push
lret
push
in
inc
pop
call
lret
lcall
dec
add
dec
std
pop
sub
or
jns
sbb
mov
ds
es
adc
fs
mov
mov
jg
jge
xor
mov
mov
pop
jo
outsl
cmp
pop
fldl
mov
mov
addb
test
test
mov
sub
nop
xchg
xchg
pop
cmpsb
xchg
xchg
rcrb
out
popa
out
shr
jb
insb
dec
push
cltd
adc
cmpsb
mov
adc
ss
fstl
adc
add
bt
loop
dec
hlt
and
pop
xchg
movsl
cmp
mov
jno
or
clc
sbb
mov
out
mov
adc
cmp
sbb
add
fmul
fmuls
ljmp
push
call
pop
add
mov
ror
or
jmp
mov
push
jne
outsb
push
cmp
scas
xchg
call
cmp
xor
sbb
imul
mov
out
mov
hlt
sbbl
fwait
sbb
cwtl
movsl
test
mov
push
inc
fidivl
xchg
imul
je
xor
repnz
cld
loope
push
cld
insl
push
test
inc
scas
jb
insl
rcll
mov
fs
imul
jns
repnz
lds
aas
jns
mov
xchg
push
lods
cmp
push
cmp
add
mov
or
xchg
aaa
test
test
out
leave
arpl
dec
mov
mov
rclb
ds
mov
aad
xor
sbb
mov
dec
add
sub
jg
ds
scas
add
loope
lret
aas
adc
int
jg
cmc
bound
lret
scas
mov
les
or
push
lods
jmp
std
addb
fstpl
clc
mov
shrl
icebp
fnstenv
fcom
xchg
adc
sub
dec
push
jl
rorl
pop
out
xchg
sahf
sbb
lret
cmp
adc
in
jp
jmp
bound
or
mov
inc
fiaddl
cmpb
mov
dec
dec
cmpsl
lret
cmc
in
push
xchg
mov
lods
mov
dec
mov
xchg
jp
imul
add
iret
testb
cmp
mov
xchg
or
in
push
adcl
bound
pop
jnp
mov
repnz
cmc
and
lds
fistpll
xchg
les
pop
or
jb
jmp
dec
testb
sbb
in
fwait
pusha
loope
cld
scas
xor
fmull
sub
addl
jg
out
faddl
shrb
shll
dec
dec
mov
cmp
dec
repz
push
pop
popf
jne
jl
pop
clc
ds
icebp
add
inc
cmp
jno
pop
sub
cwtl
cmp
mov
sbb
daa
mov
aas
loope
shrb
mov
adc
mov
dec
lods
pusha
or
push
add
rclb
out
sbb
stos
xchg
cli
cmpsl
pop
mov
dec
lods
jmp
add
mov
pop
lods
movl
xchg
div
cmpsl
mov
andl
lods
adc
inc
mov
mov
push
mov
xor
cwtl
adc
out
jp
stos
xchg
div
or
sub
dec
and
ds
pop
or
lea
in
pop
mov
sub
mov
adc
push
popf
sbb
sbb
pop
adc
scas
pop
test
sbb
adcl
inc
jns
out
sbb
adc
out
xlat
mov
push
popl
inc
repz
add
into
int3
mov
lcall
hlt
inc
mov
or
sbb
arpl
cwtl
bound
pop
repnz
ss
mov
xchg
adc
sahf
je
push
jbe
cmpl
repnz
jb
push
mul
xlat
orb
ss
stos
xor
xor
xchg
in
adc
ljmp
fcmovnbe
pop
enter
enter
pop
shrb
push
nop
cmp
psrad
test
dec
das
lods
mov
movsb
scas
and
outsl
cltd
mov
repnz
add
fadds
inc
popa
sub
rorl
mov
xor
enter
movsl
cmp
dec
mov
mov
dec
in
jle
je
xchg
data16
mov
addr16
bound
jnp
sub
aaa
lock
stos
mov
scas
lods
mov
fnstenv
movsl
cmpsl
aad
push
jecxz
xor
mov
mov
cmp
jo
cmp
ret
pusha
cmc
cmp
pop
jo
dec
cmpsl
pusha
cmpb
dec
lret
jno
daa
xor
add
divb
dec
or
fcmovu
or
cmp
sub
popa
sub
push
stc
xchg
pop
insb
xchg
call
dec
fdivr
xor
daa
push
mov
cwtl
mov
js
mov
aaa
cmp
js
sar
or
mov
and
xor
pushf
push
scas
xlat
addr16
jae
sahf
or
ljmp
hlt
bound
iret
adc
mov
rorl
adc
repnz
repnz
jb
cmpsb
mov
and
popf
hlt
sub
xchg
cmp
push
sbb
and
jne
shr
cld
dec
push
mov
bound
xchg
inc
arpl
ja
pop
jne
gs
push
xor
int
cmp
out
xchg
rcrb
inc
xchg
adc
dec
mov
xchg
mov
mov
mov
mov
inc
mov
jnp
mov
fmulp
sub
shll
or
adc
and
sti
insb
lcall
stos
lock
gs
mov
sbb
subb
sbb
lret
dec
scas
lds
and
icebp
cmpxchg
and
push
mov
out
mov
jmp
stos
sub
flds
dec
push
incb
lock
je
adc
cmp
and
imulb
es
fildll
sbb
imul
pop
pop
in
pushf
inc
das
sarl
es
ret
ja
imull
pop
in
std
icebp
loopne
mov
scas
push
push
sbb
sub
pushf
clc
fimuls
or
rcll
mov
add
lock
mov
imul
cli
xor
enter
and
sahf
aaa
inc
push
shlb
xchg
mov
addr16
lcall
push
rcrb
push
cltd
inc
push
cmp
mov
xchg
fsubr
push
cmp
test
faddl
push
cld
mov
inc
int
mov
sub
imul
xor
xor
jmp
mov
pop
repnz
shlb
mov
and
push
imul
std
mov
scas
sbb
sub
jno
xchg
pop
jae
icebp
fsubs
in
xor
mov
mov
enter
dec
sub
call
lds
aaa
rcll
mov
int
loopne
xor
add
loop
lret
cltd
loope
imull
sahf
mov
repz
int3
mov
fsts
aas
pop
in
leave
pop
mov
or
aas
cmp
mov
push
jmp
popf
adc
push
int
xor
insl
push
rcl
popf
icebp
add
loop
loop
jecxz
mov
shlb
movl
scas
mov
cmp
mov
pop
inc
sub
mov
push
push
imul
dec
sbb
mov
and
xchg
mov
scas
iret
je
ret
sub
dec
sti
adc
xchg
push
out
dec
repz
sub
icebp
sbb
add
xchg
repnz
mov
cs
cltd
shl
movsb
dec
cltd
gs
imul
push
lock
dec
adc
shlb
shl
jo
cmp
addb
mov
add
das
aaa
and
outsb
insb
fwait
pop
sarl
pop
sbb
cmp
mov
test
cld
out
xchg
push
lret
jns
inc
scas
cmpsl
mov
mov
jle
cmp
roll
sbbb
fmul
dec
es
pop
enter
icebp
cmpsl
sbb
cld
popf
lahf
fucom
sbb
clc
mov
inc
stc
jnp
add
dec
cmp
out
arpl
loope
test
movsl
into
pop
dec
xor
sbb
xchg
pop
xchg
cltd
int3
out
inc
rcrl
cmpsl
sub
mov
pop
push
inc
lock
xchg
out
in
inc
out
mov
scas
sahf
imul
sbb
mov
or
imul
rolb
insb
test
mov
inc
popf
aas
jb
test
orb
scas
xchg
test
lahf
out
jbe
and
sbb
fnsave
sbb
lods
call
mov
cwtl
dec
subb
inc
add
into
sahf
movb
in
in
push
scas
jmp
xchg
mov
ret
inc
sub
mov
cmc
or
and
jns
push
leave
cwtl
mov
add
dec
or
cmc
sub
in
js
sbb
aaa
faddl
mov
jmp
fdivrl
xor
xchg
rorb
pop
subb
xor
scas
cltd
notl
outsb
xchg
sub
xchg
nop
inc
rorl
orl
into
out
dec
out
scas
xchg
or
jl
icebp
jecxz
rclb
sub
adc
movsl
adc
mov
inc
fiadds
inc
int3
imul
lcall
xchg
sub
fcmovbe
jp
xchg
scas
lret
mov
lcall
movsb
xlat
lahf
mov
les
and
int
pop
nop
pusha
inc
stc
testb
scas
fmull
mov
add
add
addl
adc
jge
test
dec
sti
ja
out
pop
subl
movb
cltd
imul
cmpsl
mov
sbb
cmp
js
and
stos
jp
mov
fdivrl
ljmp
xchg
mov
xchg
in
and
cmp
cld
add
push
loopne
jae
jne
pop
inc
adc
test
lret
sbb
call
or
montmul
cmpsb
test
in
imul
xor
jmp
out
add
push
xchg
inc
cmpsb
cmp
aaa
icebp
mov
stos
mov
lods
mov
push
cmpsl
mov
xchg
cmc
jg
out
rclb
cmp
test
dec
mov
pop
fwait
mov
xor
add
movsb
das
xchg
test
sub
clc
sub
fidivrs
rorb
dec
hlt
pop
and
cmc
dec
jp
enter
push
push
sbb
mov
mov
pop
divps
or
gs
int
rorw
add
mov
out
scas
jp
gs
loop
adc
lcall
cmp
add
mov
loope
dec
adc
adc
fs
in
insl
mov
fcom
std
xchg
dec
in
mov
pop
in
or
mov
push
mov
adc
sub
ss
stc
xchg
test
mov
scas
ss
push
int
adc
pop
cmp
push
mov
cmp
mov
cmp
subb
adc
xchg
enter
inc
push
add
or
sub
jns
into
clc
sbb
repz
bound
cmpl
cs
add
sub
jg
shl
test
xchg
ss
popa
insb
arpl
arpl
jle
inc
ja
pop
dec
sub
lea
jb
inc
gs
lods
lods
pop
fsubp
adc
jb
or
mov
push
pop
aam
pop
and
mov
or
adc
inc
inc
inc
test
jge
sbb
mov
push
mov
xchg
sub
fistps
and
outsb
fs
xor
loopne
and
cwtl
push
in
cmp
jo
pushf
loope
mov
shlb
cmpsl
lret
pop
jns
push
or
mov
call
rcll
push
sbbl
fsts
in
push
mov
inc
cwtl
adc
jmp
loop
lds
test
push
inc
or
nop
cmp
push
sbb
mov
jae
iret
pop
insb
out
lock
adcb
outsb
ds
jg
add
out
sub
movsl
push
das
sub
sub
mov
ljmp
push
adc
pop
dec
clc
outsb
call
flds
push
leave
lock
jae
and
cli
push
push
pop
in
dec
pop
stos
in
iret
shlb
push
jge
ljmp
leave
pop
mov
pop
aas
xlat
xchg
xor
pop
push
sbb
jmp
dec
sbb
sub
jne
les
idivl
inc
lret
sbb
es
cmp
xchg
negb
mov
xlat
mov
leave
lock
sub
xor
and
push
xor
das
imul
lock
outsb
lcall
mov
mov
inc
sbb
addr16
shl
in
push
rolb
pop
mov
or
outsl
aas
xchg
jno
test
lods
enter
sbb
scas
xchg
and
sbb
test
fcomps
sbb
jecxz
pop
fs
sahf
ds
mov
pop
ja
mov
dec
outsb
std
push
ja
lods
cs
pop
cmp
imul
add
pushf
mov
fadds
cs
sbb
pop
fsubr
test
jge
fidivl
fst
lret
or
popa
mov
xchg
xor
clc
pop
mov
icebp
dec
addr16
cmp
push
mov
cmp
xchg
mov
lea
ficompl
xlat
jbe
xor
jmp
adc
mov
jecxz
cli
and
xlat
or
lods
in
dec
pop
cld
pop
jae
mov
pop
xchg
mov
sub
jle
mov
cmp
out
div
push
or
dec
ret
in
lret
jbe
lods
lret
or
pop
mov
sbb
or
push
mov
shl
fxch
sbb
cs
fcomps
sub
inc
inc
inc
cmpsb
inc
fstl
js
insl
sub
popf
xor
sbb
jp
mov
mov
movups
notb
fadd
pop
and
pop
cmpsl
pushf
bound
dec
mov
push
nop
mov
adc
mov
stc
loope
das
inc
notb
pop
or
and
sbb
enter
add
or
xchg
fnstsw
pop
fisubl
jbe
inc
cmp
lret
jae
mov
fs
mov
push
sarb
jp
mov
sti
gs
adc
push
movsl
rorl
cwtl
sahf
popa
adc
or
sub
or
push
repnz
add
cld
dec
mov
inc
pop
or
nop
mov
mov
cmc
mov
inc
xor
hlt
cmp
mov
in
push
cmp
stos
adc
divb
and
pop
test
in
das
rcl
pop
mov
ret
mov
jecxz
push
jb
mov
outsb
push
loopne
inc
call
xor
mov
jle
jno
jge
adc
imul
cmp
adc
mov
test
das
cmpsb
out
jae
pop
loop
push
enter
xor
cltd
mov
dec
jp
scas
fldenv
mov
pop
movzbl
push
std
sbb
push
xchg
xchg
adc
or
sub
inc
in
mov
out
pop
imul
adc
adc
or
mov
fwait
and
jae
shr
pop
jl
outsb
pusha
jl
or
sbb
push
loop
sbb
mov
imul
lea
fisttpll
mov
les
in
insb
data16
sti
pop
mov
add
std
fimull
scas
mov
lds
xchg
sub
mov
and
fdivl
fnstcw
fdivrl
test
mov
outsb
fwait
mov
add
pop
shll
sbb
mov
cmp
repz
cmp
popa
arpl
push
cltd
cmc
jo
pop
sbb
add
jmp
xchg
sbb
jbe
cltd
xchg
mov
inc
and
push
pop
ja
cmpsb
pop
les
and
cwtl
pop
mov
jl
cltd
cmpsl
shlb
sub
push
or
mov
in
outsl
out
pusha
jbe
xor
aaa
pop
or
mov
mov
int3
sbb
call
jae
out
sub
shrl
adc
daa
mov
bnd
jb
mov
clc
cmp
sub
arpl
ret
insl
clc
cwtl
jae
sti
push
lret
push
mov
mov
mov
ss
mov
pop
pop
test
mov
out
add
sti
out
pop
sbb
fwait
cmp
push
jle
sub
jp
pop
push
and
lock
or
adc
out
push
rol
mov
loop
jae
stos
pushf
push
inc
adc
dec
repnz
adc
jb
imul
shll
mov
cs
std
push
fs
push
xor
jb
js
xchg
sahf
mov
inc
ja
xchg
in
adc
push
outsb
mov
mov
je
imul
dec
mov
dec
sti
fs
xchg
mov
test
cmp
xor
mov
popf
in
add
cmpsb
pop
and
in
movlps
lcall
xchg
call
add
ja
orl
shr
pop
push
inc
inc
xlat
pop
pop
pop
fcmovnb
sti
xor
inc
cmpsb
int
hlt
gs
mov
adc
imul
mov
subb
loope
hlt
pop
movsb
cmp
int3
pushf
xchg
pop
cmp
mov
mov
push
cltd
lods
jmp
divl
ret
dec
add
imul
pop
pop
inc
mov
xchg
dec
cmpsb
or
xor
pop
jmp
sub
pop
test
mov
ja
pop
dec
push
test
mov
jo
mov
mov
mov
daa
and
pushf
sbb
xchg
popf
scas
mov
fnsave
repnz
enter
push
xor
push
inc
and
jmp
sub
das
jbe
pusha
scas
push
jge
mov
mov
in
pushf
pusha
je
rcrb
xchg
inc
mov
sbb
mov
push
mov
sub
dec
cmc
and
cmpsl
sub
mov
xor
pop
das
dec
test
call
test
xchg
lcall
movsl
cmc
pop
in
pop
mov
push
inc
fisttps
mov
xor
xchg
je
sahf
push
inc
dec
shl
shr
out
or
test
fstpl
mov
sbb
or
pushf
loopne
into
adc
inc
lahf
into
xchg
inc
push
dec
outsb
cs
pop
fnsave
add
imul
push
lahf
xlat
cmc
mov
mov
push
pop
fnstsw
add
scas
repnz
xchg
sub
dec
add
inc
aas
scas
mov
or
add
pop
imul
cmpsb
push
sahf
movsb
loop
arpl
imul
add
mov
iret
cwtl
test
xchg
adc
enter
fwait
icebp
aas
cld
outsl
xor
rol
push
cmp
popf
jae
movsb
adc
xlat
sbbl
mov
int3
aaa
adc
adc
dec
fstl
jmp
cmpsl
stos
lods
enter
test
mov
xchg
repnz
mov
mov
sub
mov
mov
cmp
sub
pop
xor
pushf
jne
add
jecxz
xchg
and
mov
and
fstpt
fimuls
pop
and
stos
pop
lods
hlt
push
fwait
shrb
cmpsl
or
loopne
jecxz
imul
stos
push
or
rcr
push
sbbb
movsl
pop
loopne
scas
pusha
movsl
imul
or
inc
es
mov
cmp
adc
pop
clc
test
fists
fxch
loop
xor
jae
jmp
cmp
jbe
enter
xchg
movsb
dec
repz
mov
mov
and
lock
adc
mov
xchg
pop
push
fldt
test
leave
ja
mov
xor
mov
push
adc
pop
lea
lret
jle
ds
cmp
jne
into
divb
push
cmpsb
add
orb
add
lods
mov
jbe
mov
mov
xchg
jnp
bound
mov
jno
cmp
in
shll
and
inc
mov
pop
imul
mov
scas
and
adc
std
mov
in
jmp
add
lcall
push
push
stos
mov
ja
lods
out
jmp
std
cmp
stos
mov
xor
mov
out
das
imul
mov
pop
rcl
or
push
or
mov
pop
adc
shll
movsb
jle
ret
roll
fadd
bound
je
pop
ret
lret
fdivl
mov
mov
xchg
addr16
test
inc
xor
rorb
out
in
popf
ljmp
jnp
test
pop
js
cwtl
sahf
flds
pop
xor
sar
sub
xchg
cmp
loop
sti
dec
ljmp
int3
sub
push
push
cltd
jae
dec
push
fucomip
xchg
jmp
push
jle
neg
mov
icebp
pop
pop
xchg
or
or
mov
push
add
mov
aad
jns
push
dec
arpl
push
jecxz
sbb
cmp
xlat
repz
int3
lret
adc
cmp
addr16
sub
js
inc
fldcw
aaa
andb
pop
shll
inc
push
out
cli
mov
pop
ret
cmpsl
mov
adc
mov
jns
ss
mov
ffreep
adc
push
sub
scas
push
or
repz
adc
sahf
stos
int3
mov
inc
setge
es
bound
add
je
scas
rcl
popa
sbb
stos
imul
les
sub
loopne
pop
mov
es
pusha
jae
sub
lods
les
adc
fdivrs
mov
xchg
mov
xlat
fs
adc
dec
fwait
adc
xchg
aam
xchg
xchg
mov
sbb
pop
fisttps
sahf
pop
inc
repnz
iret
inc
cmp
xchg
dec
ss
add
cmc
das
repz
push
mov
int3
mov
lock
ljmp
push
fnsetpm(287
lods
aam
or
lods
pushf
pop
ja
imul
inc
jnp
mov
inc
lods
sahf
xor
sub
push
rclb
imul
iret
and
push
cmpl
fsubr
add
mov
add
out
add
cmp
cmpsb
sub
push
stc
pop
adc
loope
bound
add
loope
andb
add
sbb
int
and
aam
xchg
and
pushf
add
jl
and
push
int
in
sub
test
or
fwait
out
pop
inc
testl
xchg
sarl
roll
pop
cmp
push
or
push
dec
scas
or
ret
push
ret
cmp
and
mov
repz
and
or
jl
inc
push
repnz
popa
out
fdivl
int3
and
int
push
xor
mov
xor
add
mov
fcoml
jmp
cs
push
push
lret
or
sbb
sbbl
push
dec
push
ss
stc
test
repnz
and
push
imul
popf
movsl
test
ljmp
add
sarb
cmp
fdivl
mov
lahf
fsubl
ror
xchg
call
lcall
push
in
cmc
sub
mov
rclb
cwtl
es
mov
test
lret
cmpsl
subl
jecxz
sub
sub
xlat
push
inc
pop
xchg
shll
out
jno
scas
inc
mov
mov
stc
fidivrl
dec
aaa
pop
pushf
in
addl
fnstcw
add
sub
aaa
xor
add
cmp
cmpsl
popa
xchg
pop
mov
inc
jmp
sub
ds
nop
inc
clc
sbb
push
sbbl
mov
lods
subl
out
fwait
and
sahf
inc
negl
repz
inc
sub
leave
lea
mov
pop
es
les
mov
and
sahf
sbb
ds
cmpsl
lods
stc
leave
pop
pop
outsb
and
pop
loope
mov
xor
push
int3
sub
mov
bound
in
lds
mov
in
jle
and
push
call
movsb
lcall
pop
sbb
pushl
dec
push
pop
mov
jae
adc
mov
sbb
int3
mov
stos
fcomp
out
or
std
loopne
pop
dec
and
xor
test
pop
es
cltd
or
ja
test
push
jp
loop
jne
in
js
testb
popa
jmp
jbe
xchg
sbb
jge
movsb
xchg
inc
and
out
popa
je
add
jle
in
mov
cltd
sub
out
fnstsw
call
or
pop
aam
ds
xchg
jns
mov
adc
gs
mov
cmc
mov
mov
mov
xchg
jns
and
scas
je
int3
adc
mov
xor
mov
push
push
xchg
clc
add
mov
lcall
inc
loopne
xchg
pop
mov
mov
subb
imul
in
das
cmp
test
loope
popa
or
fwait
jl
enter
int
lods
divb
in
int3
push
jo
in
lods
add
add
xchg
pop
rep
ret
scas
xor
out
sbb
ljmp
sub
adc
loopne
jg
mov
add
mov
xchg
mov
das
ficoml
ja
inc
pop
sbb
mov
cmp
and
lds
rorb
pop
sub
xor
imul
add
testb
sub
inc
cld
in
cmc
leave
daa
push
test
xchg
jnp
gs
sbb
inc
pop
mov
imul
daa
or
mov
call
jns
imul
sub
stos
nop
out
int
enter
fcomps
ret
aam
push
push
inc
inc
mov
loope
inc
or
jb
insb
cmc
jp
add
test
sti
mov
rcl
add
sub
pop
cmp
imul
xlat
pop
cmp
jecxz
bound
adc
ja
jnp
mov
xor
cs
fwait
insb
jne
mov
ret
aam
dec
gs
int3
outsl
mov
jg
jmp
cld
pop
sldt
mov
cmpsb
and
popa
rol
lds
mov
cmp
inc
dec
cmpb
add
div
std
pushf
cs
sub
aam
xor
insb
bnd
mov
pop
inc
neg
ret
test
syscall
pop
out
xor
add
lahf
cmp
in
mov
stos
js
xor
mov
push
fmuls
lods
loop
inc
pop
add
ljmp
ja
lods
or
ljmp
mov
add
sub
movsl
insb
hlt
imul
push
imul
adc
leave
xchg
pop
sub
js
xor
sbbl
hlt
out
mov
cltd
sbb
ds
and
rolb
lea
mov
cmp
loop
and
add
jae
popa
test
inc
xchg
push
jg
jb
adc
test
testb
xlat
dec
pop
aad
push
xchg
lahf
loope
push
sbb
ror
pushf
jbe
leave
sbbb
push
pop
imul
jmp
or
repnz
pop
fs
cmp
sub
mov
into
dec
inc
aam
sbb
popa
or
adc
push
jne
enter
jl
jmp
push
or
jge
nop
jp
dec
sbb
cwtl
jo
frstor
mov
testl
jecxz
or
mov
xchg
mov
sub
into
xchg
sub
xor
sub
out
inc
fistps
lahf
daa
and
lds
mov
xchg
jo
test
push
insb
add
xlat
int3
dec
movsb
inc
nop
sub
sbbl
dec
sub
data16
dec
pop
std
inc
xchg
test
rol
pop
sub
adc
sub
rorl
or
cld
jp
fildll
les
inc
push
test
jl
xor
push
xor
test
mov
adc
loopne
mov
push
cmp
repz
fdivrl
fiadds
gs
fsubs
dec
pop
addb
sub
rolb
add
push
adc
jae
lods
lods
dec
aas
add
out
sub
pop
test
mov
pusha
incb
in
xor
fimull
or
es
notl
xchg
popa
into
idivl
sbb
jl
lcall
jns
sti
mov
push
repnz
insb
filds
or
aad
push
mov
int
jne
arpl
insb
stc
push
dec
addb
stos
mov
test
mov
mov
xlat
cmp
push
add
dec
adc
jge
dec
cld
inc
int
lret
lcall
ret
mov
sbb
add
adc
cld
insb
hlt
mov
adc
inc
dec
xor
cmp
xchg
xor
pop
inc
jecxz
lret
daa
pop
outsb
mov
cmp
pop
cli
adc
dec
push
mov
dec
inc
mov
sbb
les
out
add
ljmp
repnz
cmp
mov
test
mov
pop
nop
or
or
adc
clc
cmp
sbb
ret
inc
fdiv
mov
mov
call
cmp
jbe
jnp
and
sahf
xchg
inc
mov
mov
mov
sub
ja
xorb
sub
insb
jl
test
add
xor
mov
add
adc
mov
xchg
lods
fwait
andb
push
and
pushf
mov
movsb
pusha
jg
adc
and
test
ljmp
dec
inc
xor
outsl
add
int
or
sub
test
pop
sbb
jmp
pushf
jge
push
mov
push
lret
mov
pop
gs
ficoml
and
sbb
cvtdq2ps
arpl
pop
and
or
lods
push
lcall
bound
int3
ret
je
mov
arpl
repnz
ret
or
std
das
rcrb
cld
jae
cli
jp
fsubl
call
sbb
mov
mov
push
jb
xchg
aam
jmp
xlat
jnp
scas
cmp
lods
imul
push
mov
pushf
jl
push
sbb
inc
pop
xor
test
mov
cs
and
shlb
fdiv
stc
leave
jg
pop
push
out
xchg
test
push
xchg
sub
flds
fwait
mov
xor
das
aam
sbb
lods
out
pop
xchg
add
lods
sub
add
xchg
out
and
mov
mov
or
xchg
mov
rcrb
int
push
shlb
insl
cmp
adc
or
mov
pop
pop
rcr
pop
lret
cltd
jbe
clc
mov
rcr
lret
mov
jecxz
lret
jns
addr16
or
inc
and
insb
xor
aam
mov
push
icebp
sbb
mov
aad
lret
mov
mov
loop
iret
sub
scas
ds
shrb
into
aam
daa
pop
in
sbb
mov
push
int
or
mov
fucomip
mov
ret
jno
ljmp
sub
cmpsl
push
pop
lds
inc
loop
ret
jno
outsb
mov
mov
in
push
jns
add
or
dec
or
sarl
mov
sub
rolb
cmpsb
lret
mov
repz
testb
ja
push
stc
jno
add
aaa
stos
loope
movsl
ret
daa
lods
mov
add
es
sub
negl
int3
insl
addr16
jl
mov
dec
fs
ret
pop
lret
es
mov
push
pop
dec
or
insb
mov
leave
cli
mov
and
stc
xchg
in
mov
jmp
or
into
in
stc
notb
js
leave
jne
and
es
sbb
out
mov
xor
xchg
add
xor
out
jns
cmp
sub
fcoml
jmp
notb
jl
clc
xrelease
jl
sbb
sub
les
mov
sbb
pop
dec
ret
pop
stc
pushf
push
clc
lods
cli
arpl
push
dec
mov
in
in
xor
xchg
mov
sti
cmp
or
hlt
mov
jnp
sbb
out
jmp
test
xlat
cmp
pop
cs
lods
sub
dec
xchg
jl
adc
stc
sub
movsl
test
loopne
ljmp
popa
ret
push
shll
xchg
dec
je
and
into
xchg
jb
icebp
andl
or
je
mov
dec
xchg
add
addb
add
popf
in
int
loope
ja
add
mov
jae
in
adc
popa
push
mov
push
jae
repz
jbe
mov
dec
mov
add
arpl
jmp
fcoms
int
inc
in
jg
dec
jne
jo
mov
pop
sbb
lahf
add
in
scas
mov
les
push
fistpl
mov
add
arpl
add
popa
ja
push
or
loope
jnp
into
stos
fisttpll
xor
inc
insb
mov
cmp
add
aas
scas
shlb
cwtl
std
inc
das
enter
sbb
mov
in
cmp
in
lahf
call
ss
xor
in
add
xor
les
pop
push
adc
call
sub
xor
add
int
xchg
mov
mov
inc
popa
push
mov
rorb
sub
xchg
stos
cmp
scas
decl
mov
sti
add
xchg
mov
in
loope
fs
cmc
dec
pushf
fcompl
in
out
fnstenv
xchg
fldenv
or
cwtl
fcoml
inc
mov
mov
mov
movsb
bound
testl
xchg
fs
dec
adc
sbb
lea
pop
xor
pop
mov
add
and
fwait
hlt
imul
pushf
and
xor
mov
fwait
or
cmpsl
mov
cli
cli
pop
jmp
arpl
dec
ss
daa
mov
pop
mov
xchg
mov
push
or
pushf
inc
xor
xor
lret
xor
xchg
jbe
or
sub
pop
outsb
imul
jmp
xor
and
scas
pop
sti
cmp
sbbl
inc
subb
pushf
mov
cmpl
sbb
push
push
and
mov
mov
loopne
call
add
xlat
dec
adc
jae
jbe
mov
xor
xor
cmpsl
popf
stc
mov
mov
shll
lea
fstp
sub
adc
and
int
pxor
cmp
xor
jge
mov
sbb
jno
aam
insb
inc
insl
jo
jae
fldl
cld
loopne
lock
outsl
call
call
out
cmpsb
fists
inc
xchg
add
mov
cltd
repnz
cmp
or
pop
in
or
jmp
daa
push
sub
mov
jne
sbbb
sub
jmp
xchg
lret
jge
dec
jge
ljmp
daa
xor
loopne
push
fadd
test
push
pusha
dec
lahf
nop
insb
out
xor
mov
adc
inc
mov
sbb
mov
arpl
cmp
and
sbb
shl
mov
push
mov
xor
push
gs
pop
shr
rclb
scas
out
jge
inc
arpl
push
pushw
sub
inc
shlb
test
add
shll
cltd
xchg
popf
nop
adc
shll
sbb
pop
sbb
orl
adc
xchg
mov
idiv
push
lods
inc
mov
push
ret
xor
jmp
xchg
mov
sar
push
adc
jle
inc
test
mov
ja
pop
pushl
cwtl
cmpsl
push
pop
dec
mov
les
adc
push
push
enter
mov
xlat
mov
mov
push
mov
xchg
pusha
push
arpl
mov
jge
xor
push
xchg
scas
dec
mov
lret
xor
lret
jb
cmc
and
lock
movsb
mov
addr16
fsubrs
sub
fimuls
ljmp
mov
xorl
rcrb
aaa
mov
popf
sub
fildll
add
and
lret
xchg
aad
or
lahf
out
push
outsb
repz
je
or
loopne
stc
fsubs
inc
sbbl
push
ret
imul
cwtl
inc
out
jecxz
int3
bound
rclb
popa
mov
int
mov
pop
fisubrl
and
mov
inc
xor
pushf
jns,pt
mov
ds
daa
je
pop
ds
xchg
adc
mov
cmp
test
scas
lea
mov
adc
pop
xchg
and
dec
lcall
xchg
scas
loope
sets
sahf
mov
inc
push
iret
xor
dec
in
adc
jge
cmpsl
lahf
fisttpl
and
push
push
mov
dec
js
xor
push
pushf
in
jne
lods
ror
nop
and
adc
push
xor
dec
push
fcmovu
rcrl
dec
aaa
rorl
out
add
xor
jno
pop
movsl
and
push
xchg
pop
mov
push
xchg
js
fwait
es
sbb
in
leave
mov
push
push
push
shrl
mov
mov
lods
aas
mov
pop
lahf
sahf
add
mov
loopne
jge
stos
ja
fisubrl
xor
orl
popf
jp
mov
incl
cmpl
adc
pop
dec
pusha
xchg
lds
jle
outsb
mov
and
movsl
outsl
repnz
mov
fneni(8087
xor
filds
xchg
jns
mov
adc
adc
loop
mov
stc
sbb
shll
sahf
jnp
sbb
xor
adc
in
mov
jns
lret
subb
mov
dec
sub
enter
fisttps
in
clc
lods
pop
mov
mov
mov
sub
jl
testl
xchg
movsb
mov
cmpsl
stos
mov
dec
and
jmp
stc
sahf
or
rorl
insb
mov
mov
or
repnz
test
divl
shrb
shll
mov
movsl
mov
inc
inc
jp
mov
sti
sbb
dec
xchg
sbb
ret
add
xor
popf
out
pop
std
xor
xor
pushf
mov
out
mov
mov
inc
adc
push
inc
ljmp
popa
mov
sarl
mov
xchg
push
bound
int3
and
mov
xor
pop
and
cltd
push
dec
in
in
cli
adc
inc
mov
cmpb
int3
or
jb
sti
push
loopne
push
cltd
mov
dec
outsb
fistpll
ss
jg
inc
or
sbb
sbbb
push
in
bound
pop
fdivrp
test
repnz
cmp
dec
push
cmp
and
fimuls
mov
mov
ja
add
xor
jmp
cmc
imul
dec
inc
or
lods
adc
and
or
popf
sbb
aaa
push
ljmp
mov
xchg
push
and
in
jmp
jmp
add
sub
push
adc
push
ficompl
movsl
xchg
adc
adc
mov
jne
pop
adc
push
mov
inc
sub
mov
out
xchg
cli
sbb
out
mov
xchg
mov
and
xchg
pop
sbb
in
dec
loope
pop
fdivrl
add
and
out
lods
arpl
je
popf
mov
add
rorb
ds
lea
outsl
adcl
and
pop
sub
push
ss
sbb
jb
std
lret
pop
jne
xor
and
adc
ja
ss
adc
aaa
push
mov
stc
sub
sbb
psrld
dec
push
subl
jmp
jb
inc
stos
fcomps
lock
popf
mov
pusha
push
pop
and
sub
or
ficoml
xchg
call
ja
or
lret
push
cs
sub
pushf
xchg
xchg
jo
shl
adc
mov
mov
mov
cmp
sub
sub
test
fdivrs
dec
sarb
inc
mov
mov
inc
pop
aad
jns
sub
cmp
sahf
mov
jle
sbb
ret
jne
call
scas
xchg
lds
inc
xchg
sti
sub
pminsw
stc
lcall
and
sbbb
fs
sub
sub
pop
add
movsl
or
out
ds
mov
out
mov
xor
shll
sub
repnz
shll
rcll
pop
cmpsb
cmp
add
data16
fs
push
inc
cltd
ja
jnp
jo
push
sti
cwtl
cli
in
ja
enter
jecxz
mov
js
adc
cmp
std
pop
cmp
cltd
iret
or
push
xchg
sub
or
daa
neg
outsb
arpl
mov
dec
mov
sahf
or
ds
add
nopl
insb
add
out
sbb
adc
into
pushf
mov
aam
dec
out
pop
shl
sti
test
rcrl
or
mov
and
or
in
or
getsec
imul
test
js
rolb
cld
xchg
cmc
insl
sbb
aam
sub
fdivl
jg
cmc
inc
cli
and
pusha
cmp
dec
inc
xor
fstpt
cmpsl
daa
pusha
mov
add
dec
push
mov
pop
scas
push
jecxz
jecxz
jne
clc
sbb
addl
imul
mov
xor
adc
shll
jl
xor
negl
lods
inc
push
in
ja
add
push
sbb
sbb
dec
and
fwait
mov
jle
daa
scas
xchg
mov
mov
test
int
push
pop
push
mov
dec
ds
es
mov
into
sahf
fs
and
cmp
outsl
xor
mov
lea
clc
es
aad
and
adc
out
push
imul
jns
and
rcll
scas
dec
flds
cmp
stos
xchg
dec
push
loop
sbb
xchg
jge
xor
sub
stos
lret
daa
loop
xor
lods
into
push
pushf
in
notb
popa
out
adc
call
dec
jns
pop
or
cli
outsl
pop
cmp
xor
cltd
xchg
lods
daa
roll
inc
call
aaa
jmp
lcall
sub
scas
fmull
inc
aaa
sbb
inc
test
lds
mov
fsub
mov
push
jg
mov
test
adc
mov
jne
pop
clc
adc
out
sbb
adc
sbb
int
outsl
ss
jns
cmp
inc
cs
daa
lcall
repz
hlt
jle
mov
push
jno
add
push
inc
or
mov
mov
aad
adc
xchg
and
pop
pop
in
lret
subb
dec
jl
ljmp
dec
cmc
ficoms
jne
push
sbb
push
pop
sahf
and
mov
pop
inc
aam
push
insb
fcompl
movsl
pop
lods
outsl
add
or
fwait
lods
shlb
xchg
xchg
mov
add
push
fistps
push
ds
push
enter
arpl
pop
cs
dec
mov
push
ja
mov
mov
jno
out
add
stos
xchg
test
jmp
inc
adc
cwtl
sub
cmp
repz
std
ljmp
cld
loopne
fadd
lods
cmpsl
pop
aad
jg
pop
adc
fiadds
sbb
lcall
inc
adc
out
clc
daa
push
cmp
sbb
and
pop
xor
cmp
mov
fstps
pop
mov
mov
rorl
lea
loop
mov
mov
cmc
mov
shll
xorl
xor
js
dec
pop
jl
lock
fcmovnu
cmpsl
or
push
sbb
mov
in
or
sbb
hlt
add
jno
add
arpl
mov
adc
cmp
stos
aam
push
ret
or
cmp
jne
fs
cltd
and
mov
pop
lret
pop
inc
out
ja
ss
test
dec
pop
xchg
dec
in
xchg
pushf
push
mov
pop
shr
mov
adc
imul
imul
push
and
outsb
mov
das
dec
sti
cmp
push
dec
clc
in
push
mov
outsl
sub
sahf
aas
test
shlb
and
cmp
mov
dec
outsb
lea
int
mov
pop
xchg
mov
sbb
icebp
arpl
xchg
xchg
xor
sbb
mov
jl
inc
mov
fstpl
xor
scas
icebp
mov
pop
fcomps
ret
decl
mov
ds
push
testl
cmpb
mov
arpl
cmp
mov
sub
xchg
sbb
sbbb
jno
aaa
xor
push
and
adc
jecxz
jl
inc
xor
inc
jae
dec
mov
jmp
daa
push
or
lea
nop
push
pushf
adc
jb
mov
sti
and
int
std
jle
lahf
cmpb
sub
push
cwtl
js
mov
icebp
or
sbb
or
or
mov
cmc
or
bound
dec
in
dec
es
mov
push
mov
shr
lock
xor
jb
sub
cwtl
cmp
cmp
pop
pop
jae
jle
insl
jge
bound
loopne
lret
xchg
inc
lock
mov
pusha
cs
pop
inc
iret
lods
xchg
inc
mov
pop
xor
cmp
rolb
rorl
sub
dec
push
in
mov
cmp
jno
xchg
jl
addl
add
cwtl
fucompp
mov
pop
rcr
mov
sub
mov
push
push
pusha
sti
mov
dec
test
add
dec
shrb
cltd
das
or
scas
and
repz
leave
ficoms
xchg
mov
push
outsb
pusha
lcall
mov
sbb
dec
test
or
loop
xchg
push
or
pop
xchg
mov
xchg
lds
and
xor
leave
cmp
cmpsl
pop
mov
or
incl
addr16
fistps
or
out
cmp
xchg
push
gs
xor
ja
gs
scas
gs
cmp
idivb
stos
sahf
xor
inc
push
repnz
mov
pop
mov
and
daa
ljmp
and
mov
sbb
xor
rorb
call
lcall
or
ds
roll
std
sti
movsl
adc
cmpsl
sub
pop
xor
and
adc
enter
inc
jbe
sbb
mov
aad
lret
or
test
jb
jnp
lret
iret
jno
ja
push
test
cmc
scas
outsl
sub
nop
sub
daa
xchg
or
jp
mov
or
mov
loope
or
lods
rorb
das
or
jmp
mov
mov
mov
push
jae
sub
jg
mov
mov
or
lock
fnstenv
cld
mov
jecxz
pop
mov
push
mov
mov
add
cmpsb
ljmp
lock
cmc
mov
pop
dec
pop
pusha
mov
andb
orl
movsb
push
mov
cmp
in
push
cmpsb
scas
push
dec
aad
xor
mov
mov
jp
jo
cwtl
movsl
adc
loope
jbe
fcoml
outsl
xor
loope
call
xlat
sub
les
inc
lcall
popa
jb
jne
mov
movsb
sbb
push
add
mov
cld
ja
in
nop
jo
cs
into
popf
add
xor
jb
mov
sbb
or
js
mov
cmp
jmp
data16
and
pop
pusha
jl
sbb
cmp
or
dec
lods
fwait
in
push
sar
pop
shlb
loop
popw
adc
pop
and
in
push
fcoms
shl
rorb
cmp
jle
movsb
rcll
bound
mov
cmp
push
mov
test
movsb
scas
fsts
push
mov
sbb
mov
pop
loopne
add
add
rorb
push
scas
ja
hlt
hlt
push
icebp
pop
test
pop
jno
jnp,pt
nop
dec
mov
enter
loope
inc
pushf
sbb
and
out
lods
sbb
ljmp
test
push
nop
cld
jae
dec
sbbl
int3
mov
out
shrb
sti
dec
add
js
push
mov
cmp
push
aam
lret
ljmp
inc
lret
inc
into
xchg
pop
pusha
jmp
xchg
pop
sbb
pusha
movsb
cmpsl
xchg
jno
pop
stos
jo
nop
ja
or
loop
sbb
mov
adc
mov
enter
loope
push
jecxz
ljmp
fbstp
in
ljmp
xchg
sarb
push
sbb
inc
or
push
jnp
in
pop
lret
jns
pop
decb
outsl
lcall
or
addr16
aas
addr16
and
adc
outsl
push
xchg
mov
outsb
cmpsl
jno
cs
xor
fcoml
scas
clc
je
mov
push
add
push
xchg
xchg
fs
lock
std
jnp
adcl
outsb
mov
fwait
out
xchg
testb
cmp
aas
mov
sub
outsl
add
xlat
lods
sarl
lcall
pop
pop
lea
push
mov
jo
dec
jnp
jne
aas
xchg
mov
inc
shl
sub
mov
jo
add
aaa
movaps
pop
call
pop
aam
imull
push
pop
xchg
movsl
inc
and
popa
popa
dec
mov
inc
shlb
popa
push
xchg
push
addb
mov
push
sbb
cmp
lods
cli
cmc
in
test
xor
cmp
lret
aam
push
aad
adc
cld
cmpl
inc
dec
cmp
outsb
inc
push
xlat
xor
cli
inc
loopne
mov
jge
in
cmp
jne
cmp
movsb
add
lcall
mov
test
test
ljmp
mov
pop
nop
push
call
in
adc
dec
inc
or
sti
arpl
fcomps
mulb
mov
xor
lcall
cltd
movsl
test
sarb
xchg
and
lcall
lock
into
push
dec
fnstcw
cmp
js
sbb
mov
out
outsb
movsb
jl
or
adc
pop
xor
mov
stc
fistps
dec
test
mov
mov
mov
hlt
dec
xchg
jo
in
ret
fisubs
push
rcr
ss
mov
clc
stos
push
outsb
leave
push
dec
cwtl
or
xchg
sbb
leave
xchg
mov
outsl
sahf
and
lcall
jae
in
js
jbe
icebp
hlt
mov
push
test
lret
dec
cld
mov
xchg
int3
iret
jmp
in
into
fisttps
cli
sbb
je
xor
ficoms
jmp
sbb
pop
or
and
fldt
fcmovbe
movsb
nop
xchg
mov
movsl
mov
ss
bound
jno
out
loopne
out
das
sbb
pushw
adc
aaa
in
lods
lahf
jae
xor
clc
mov
xor
popa
ret
insb
mov
popa
js
out
sti
je
into
mov
sub
jno
fsubrs
push
push
std
pop
hlt
pusha
stc
pop
iret
sub
inc
out
test
popf
cmp
mov
inc
mov
fistps
sbb
ret
inc
inc
sub
je
cmp
jno
in
push
daa
andl
shll
test
mov
ljmp
lea
pop
pop
mov
outsl
bound
dec
xlat
insb
test
insb
fcmovnb
clc
xchg
xor
cmp
pushf
les
cmp
movsb
rcr
and
mov
xchg
jno
push
mov
jp
popf
add
js
sbb
and
jle
jge
push
ss
xchg
sarb
cmpb
les
sti
inc
sti
push
cmpsb
add
xor
scas
inc
xchg
mov
and
lds
lahf
adc
test
push
pop
out
stos
push
mov
mov
ljmp
clc
pop
or
aad
jp
adc
rcrl
scas
jne
out
mov
adc
mov
jmp
xchg
inc
jbe
mov
inc
neg
add
insl
ffreep
cmp
mov
insb
pop
mov
pop
das
jnp
fs
fsubrl
pop
push
mov
je
ret
sub
xor
or
aaa
in
das
mov
push
aad
shlb
push
xchg
mov
je
rorl
repz
jnp
or
xchg
fadd
mov
ja
or
inc
mov
push
xchg
jo
movsb
sti
and
add
inc
aas
lret
cs
and
sar
push
mov
fimull
mov
cld
cmpsb
cmpsl
icebp
mov
out
hlt
iret
ja
addr16
leave
sub
dec
jnp
lds
lret
sbb
mov
inc
daa
cmp
cmc
jge
lret
mov
jbe
jecxz
test
mov
int3
bound
push
dec
loop
mov
xchg
dec
and
dec
jmp
repz
mov
cmpsl
mov
mov
mov
lret
cmp
mov
push
daa
pop
mov
sbb
and
rclb
or
jo
es
xor
inc
mov
mov
lahf
bndstx
adc
and
rorl
jne
leave
mov
clc
out
mov
mov
rcrl
and
lea
dec
dec
cmp
xor
dec
push
push
outsb
scas
ffree
repz
insl
rcrb
lret
pop
ja
popl
andps
test
mov
push
xchg
shr
xchg
sahf
and
mov
mov
xlat
fistl
pop
aam
pusha
push
cmpb
inc
sbb
mov
sbb
int
xor
lahf
mov
xor
sub
bound
push
out
xorb
sti
push
cmp
fmull
add
xor
or
xor
jg
add
outsl
dec
push
push
xchg
or
lahf
das
mov
call
hlt
or
push
fildl
loope
int
fs
mov
push
out
mov
shrb
jp
dec
sub
push
cmp
jl
mov
sbb
pop
xor
mov
fisttpl
xchg
pop
cmp
adc
loop
xlat
stc
pop
int
dec
inc
adc
dec
add
xor
sbb
not
arpl
aam
add
hlt
push
xchg
add
cmpl
pop
mov
stos
mov
testb
push
dec
punpckhdq
rol
mov
cmp
cmp
push
mov
sbb
xchg
testl
cltd
dec
jmp
or
or
jmp
pop
sbb
push
push
lahf
in
arpl
frstor
shll
imul
dec
rcrb
push
jns
lret
sti
mov
mov
and
xor
mov
push
fnstsw
jnp
outsl
rcrb
lods
xor
or
jno
in
lret
cmp
or
not
push
and
paddusb
add
sti
lcall
sbb
shlb
aam
add
or
leave
dec
cmpb
in
clc
push
fisttpll
and
fisubl
movsl
pop
mov
lret
mov
jno
mov
iret
mov
dec
lods
cmp
sbb
repnz
jmp
enter
imul
xchg
fistl
sub
cmpl
js
sub
ds
insl
shll
lret
xchg
mov
jl
jnp,pn
repz
and
jne
sub
clc
or
jbe
fisubrs
popa
mov
jge
fwait
push
mov
dec
adc
sti
adc
inc
fildl
push
xchg
lds
pop
jae
sbb
dec
loope
mov
je
add
inc
lret
push
fs
pop
push
xchg
ja
lahf
mov
lahf
pop
ds
lods
sahf
rcrl
pop
cmp
cmp
add
pop
cmp
mov
ror
push
mov
flds
jno
rcrb
sub
das
mov
sub
iret
loopne
repnz
dec
pop
adc
int3
loop
push
push
xchg
jmp
push
push
clc
mov
sub
in
insl
cmp
jge
sti
scas
loopne
and
movsb
sub
sub
or
add
cltd
cltd
or
and
jg
push
pop
adc
inc
repz
jo
cltd
inc
loop
dec
inc
sahf
orb
clc
add
xor
leave
jge
dec
and
lea
ret
addr16
mov
mov
fsubr
lock
mov
fdivrp
add
addb
adc
push
xchg
iret
inc
cmp
push
mov
dec
hlt
jge
aam
out
adc
cmpsb
xchg
add
push
aaa
aas
jp
ret
jae
pop
xlat
decl
arpl
pop
addb
clc
xchg
jo
test
ret
sub
inc
out
icebp
dec
adc
jp
scas
fistps
xchg
mov
add
or
mov
mov
data16
inc
cs
pop
notl
int
lahf
lcall
imul
iret
fadds
cwtl
negl
in
sbb
lcall
fistps
out
iret
and
xor
jb
and
pop
and
test
cmp
adc
mov
or
les
faddp
or
test
shl
fstps
cmpsl
push
loop
pop
jg
push
dec
inc
and
xchg
inc
mov
mov
js
inc
add
and
mov
test
adcb
lahf
loopne
pop
jns
fildl
iret
std
aaa
sbb
call
xor
ja
mov
jge
sub
push
xor
xchg
sbb
adc
mov
inc
sbb
cmp
aas
sbb
arpl
sub
out
rorb
xor
cld
movsb
shl
lds
test
repnz
inc
sbb
adc
lret
push
fistl
dec
or
data16
addr16
jmp
les
xchg
icebp
int
jge
mov
xor
mov
std
adc
mov
mov
scas
mov
dec
es
adc
idiv
cwtl
jbe
bound
sub
adc
ret
fld
out
fs
loope
les
call
leave
lret
popa
xchg
add
sti
dec
sub
sahf
push
add
cmp
sub
sub
incb
lahf
lea
cltd
je
mov
and
imul
neg
lds
mov
push
out
sbb
shr
jg
daa
in
popf
pop
mov
popa
test
xchg
jmp
adc
fsubrs
das
testl
pop
fsubrs
ret
fidivrs
dec
adcl
sub
fistpl
imul
and
gs
in
das
pushf
jg
lock
fsubl
pusha
mov
and
rcrb
fldenv
fisttpl
sahf
neg
mov
test
dec
jmp
push
sbb
clc
es
and
les
movsl
shll
clc
cmp
filds
leave
in
ret
xor
jo
xchg
adc
add
mov
test
push
jge
push
pop
xchg
iret
incl
cmpsl
sbb
jmp
out
shll
stos
mov
cmp
xlat
cmp
mov
mov
push
test
push
or
sbb
aas
mov
mov
jae
flds
push
jmp
fiaddl
dec
cwtl
roll
sti
ret
mov
push
push
fstps
adc
hlt
movsb
das
xchg
jae
movsl
movsl
dec
add
stos
mulb
mov
testl
mov
mov
clc
sbb
out
vsubpd
sub
xchg
js
adc
xor
jno
loopne
iret
jmp
add
inc
sbb
test
cmp
or
push
mov
fcmove
jg
mov
add
add
mov
xchg
push
dec
push
sub
inc
mov
in
shlb
roll
sbb
mov
cmpsb
push
xchg
in
adc
test
xor
push
fwait
xor
sarl
xchg
shr
xchg
pushf
mov
xchg
aam
jl
cwtl
ret
dec
addr16
aam
mov
jo
test
cmpsb
stos
pop
inc
sub
mov
or
pop
cltd
mov
mov
mov
xchg
cmpsl
test
push
leave
pop
test
dec
mov
dec
xchg
jl
shl
inc
insl
xchg
add
adc
ret
lods
lods
adc
xor
scas
icebp
jo
xchg
ss
iret
test
dec
stos
cltd
xchg
adc
cmpsl
xor
xchg
dec
lret
dec
mov
inc
mov
and
jmp
ret
xor
lds
cmpsb
xchg
loop
jle
mov
sub
sub
or
jl
cmp
repz
fnstenv
imul
into
aam
repz
pop
scas
jnp
add
xor
aaa
mov
and
adc
int3
jmp
mov
clc
sti
lret
xlat
in
sub
nop
jns
movsl
outsl
movsl
loop
ds
popf
into
or
push
scas
add
pop
add
mov
xor
mov
js
cmpsb
mov
inc
push
iret
xor
lods
sti
or
je
push
jae
fisubrl
mov
add
and
dec
mov
and
xchg
dec
les
fadds
imul
or
les
push
jb
push
mov
mov
cmpsb
or
cmp
and
cmp
pusha
mov
cld
push
add
ret
lcall
fldl
dec
pop
sbbb
cmp
xchg
call
aam
dec
std
inc
mov
pop
jno
mov
mov
rcrb
insb
cmpsl
add
mov
cmp
pop
data16
cmp
cmp
xchg
fldl
stos
mov
or
xchg
aam
and
lcall
int
add
jbe
mov
cmp
shll
push
shld
cmp
push
pushf
call
sub
sbb
icebp
xor
gs
adcl
jp
dec
es
mov
sub
mov
or
sahf
std
notb
dec
pop
dec
ret
push
movsb
pusha
in
sbb
mov
leave
repz
cld
mov
sub
sub
addr16
adc
push
sbb
enter
push
mov
fcomp
arpl
or
test
int
push
push
mov
shrl
sarb
outsl
movsl
add
cmp
push
insb
rcrb
cmp
pop
in
jmp
xchg
lcall
dec
add
adc
xchg
fsubrl
inc
insb
sub
jns
inc
xchg
add
jns,pn
rolb
or
aas
cmpsl
dec
sahf
mov
mov
mov
inc
ficompl
jnp
inc
notl
or
xor
xchg
cmp
insl
lds
ret
jmp
xor
dec
mov
fwait
jl
incl
mov
adc
les
mov
dec
lock
xchg
dec
aam
jno
in
and
push
lcall
in
lcall
mov
pop
inc
push
test
fsubrs
insl
fldt
in
sbb
jno
or
scas
xchg
pop
rorb
fdivrl
addr16
scas
xor
add
cmp
jb
push
push
pushf
sbb
push
inc
sub
cmpsl
or
sbb
fldcw
and
imul
scas
or
mov
repz
pop
loope
and
xor
fstpt
fwait
je
or
xchg
into
and
shrb
gs
dec
iret
inc
push
and
pusha
xchg
lret
cld
stos
jmp
push
not
out
push
xor
xchg
das
scas
and
mov
cwtl
repnz
jle
sub
not
sbb
test
xor
mov
mov
xor
jb
fistpl
mov
add
andl
pop
cmpsb
adc
call
das
and
shlb
daa
sub
dec
mov
test
sbb
or
xchg
mov
mov
pusha
int
scas
sbb
dec
xchg
cltd
rcrb
jb
or
mov
jecxz
aaa
test
and
pop
nop
shll
out
add
xchg
mov
jg
inc
pop
or
xchg
adc
cmp
bound
or
mov
xchg
dec
js
xchg
cld
in
stos
out
popw
pop
push
jge
shrb
shl
sbb
bound
jl
pusha
rcr
push
lods
scas
aaa
adc
adc
jno
cmpsb
xor
and
mov
icebp
push
jl
adc
in
or
pop
les
xor
scas
in
xor
sarb
push
out
imul
ss
stos
or
add
dec
ret
dec
js
arpl
fs
lods
jbe
outsl
loop
pop
sub
push
aad
or
jnp
mov
clc
xchg
sbb
dec
mov
push
pop
bound
in
std
fistl
ret
movsl
stc
mov
mov
rep
leave
hlt
mov
pop
jno
ljmp
movsl
inc
clc
mov
push
mov
pop
stc
xor
and
push
xlat
cmpsb
dec
pop
popa
fnsave
mov
push
dec
pushf
jecxz
call
push
lods
filds
mov
and
inc
lcall
shl
mov
enter
aad
in
xchg
test
stos
and
pop
mov
pop
movsl
test
ret
push
lea
hlt
inc
push
mov
mov
popf
daa
xlat
jo
in
movsb
xchg
xor
dec
mov
imul
lods
ret
sub
aas
cmpsb
lds
sbb
mov
jmp
call
cwtl
push
ret
mov
pop
js
push
sub
repnz
imul
lea
daa
aad
sub
mov
je
push
dec
mov
jo
lock
pushf
push
and
test
iret
xor
or
iret
dec
out
stc
fisubrl
cmc
push
outsl
je
sbb
push
adc
ja
pusha
in
pop
sub
adc
jnp
gs
movsl
pushf
xor
dec
les
sub
inc
movsl
pop
mov
xchg
or
sub
sub
push
ret
lock
xchg
xor
jmp
pop
incb
adc
outsl
cld
sarl
ljmp
mov
fwait
js
add
and
add
jno
cmc
cmp
jle
cwtl
cmp
aam
roll
or
xchg
fwait
push
popf
mov
sub
xor
sbb
xor
shll
lods
fnstenv
outsb
or
or
mov
int3
or
xor
clc
fists
stos
xchg
xor
sahf
adc
cmp
sub
jg
cmc
dec
shlb
scas
nop
xor
and
and
and
outsl
ret
out
and
inc
stos
out
mov
pop
out
sbb
cmpsl
not
push
pushf
jmp
xchg
jo
inc
dec
jae
xor
sarb
cltd
int3
out
mov
imull
sbb
nop
mov
add
xchg
fmull
pop
push
repnz
jg
push
test
mov
push
xchg
cltd
incl
mov
es
in
or
loop
and
and
adc
dec
ljmp
fisttps
mov
pushf
and
stos
push
orb
mov
xlat
divl
jl
pop
inc
sbb
mov
mov
cltd
test
cmp
inc
sub
sbb
idivl
ret
push
adc
xor
sbb
xorl
pushf
or
add
push
mov
fbld
cmp
sbb
leave
jg
cltd
cmp
pop
psllq
jmp
jl
enter
ds
add
xor
mov
mov
add
test
ret
ljmp
sbb
lahf
lret
fcoms
sahf
or
flds
mov
push
sub
out
dec
fxch
popa
cwtl
cmc
std
stc
pushf
jge
syscall
pop
push
dec
scas
das
push
test
nop
test
or
lods
loope
mov
inc
cmp
jo
add
test
cmp
push
jl
dec
pushf
or
push
mov
mov
xor
xlat
mov
loope
pop
test
ret
lods
jecxz
pop
xor
ds
push
mov
inc
ss
in
nop
fnstcw
addr16
pop
mov
movsl
cmp
imul
jle
mov
xor
push
and
lahf
fs
mov
mov
notl
inc
cmp
xchg
mov
xchg
dec
lods
mov
hlt
repz
lahf
stos
xor
mov
xor
movsl
xchg
lds
repz
jnp
pop
jno
fcompl
insb
lret
dec
inc
xchg
mov
jp
sub
xlat
and
fwait
mov
loopne
sbb
js
or
and
popa
hlt
in
pop
fsubr
out
or
cli
jns
imull
dec
jp
das
xchg
push
outsl
mov
dec
movsl
leave
pop
sbb
ret
pop
push
mov
mov
iret
aas
cmp
pop
sbb
mov
xor
mov
or
and
dec
test
and
xor
xor
add
adc
call
mov
clc
mov
pop
mov
int
int3
jns
push
nop
add
mov
scas
mov
dec
jge
cmp
jge
push
mov
mov
jno
push
imul
adc
insb
xor
inc
push
add
add
popf
je
test
hlt
insb
mov
arpl
push
imul
and
loop
mov
gs
aaa
mov
in
sbb
xlat
push
mov
dec
jge
jb
scas
fistl
add
nop
mov
aas
fdiv
inc
xchg
jmp
or
mov
pop
adc
mov
jno
in
cmpsb
mov
cmc
lods
mov
rclb
stc
push
add
or
ja
pop
pop
xchg
subl
jb
xor
push
insl
push
adc
mov
or
and
es
pop
aaa
rcr
fisttps
adc
push
fs
cmpl
push
fsubrl
mov
dec
inc
movsl
ret
pop
ret
loope
roll
push
stc
mov
testl
mov
sbb
fwait
sbb
daa
ja
aad
subl
dec
movsl
orl
push
lea
or
sbbb
sti
je,pt
lds
loop
add
sbb
sbb
or
adc
rcrl
shll
lret
push
stc
cmp
mov
jb
insl
sub
add
jnp
mov
andb
lods
test
fwait
and
xchg
shl
aam
mov
pop
test
pop
or
mov
push
dec
add
icebp
clc
in
std
lret
gs
rol
lret
pop
aas
cmp
cmpsb
leave
inc
mov
add
cmc
sub
imul
sub
jecxz
pop
xorl
add
inc
rcr
push
ljmp
lods
mov
pusha
lds
cltd
call
movsb
sbb
xor
jns
cmp
mov
and
push
dec
adc
ret
inc
outsl
sti
push
scas
sbb
mov
inc
xchg
mov
stos
mov
sub
sub
sbb
ss
or
loope
fs
in
stos
add
clc
adc
push
mov
pop
dec
dec
inc
mov
pop
lods
stos
xchg
les
inc
not
inc
cltd
push
aaa
dec
bound
inc
xor
rcrb
sbb
nop
sub
les
sub
jae
int
or
xchg
ljmp
negb
adc
push
mov
jmp
xchg
in
aaa
in
inc
mov
cli
stos
dec
add
push
int
loop
cmpsl
xchg
in
pop
mov
or
sahf
inc
test
mov
push
add
out
inc
mov
pop
push
je
shlb
xchg
add
test
pop
insb
push
lahf
jmp
mov
nop
jle
inc
and
lea
out
bound
mov
cmp
stos
pop
pop
mov
xchg
xor
add
push
sub
in
mov
pusha
xchg
call
insl
lcall
nop
pop
adc
andb
mov
outsl
rcrb
in
popa
cmpsb
fs
push
and
loop
fsubrl
cmpsl
pop
and
cli
nop
xchg
or
inc
enter
ret
aas
call
mov
sti
sub
aaa
and
mov
cmp
scas
cmc
add
loopne
mov
call
leave
ret
call
aaa
mov
leave
cmc
sbb
incl
inc
not
adc
rcll
sbb
daa
iret
jo
xchg
cmc
ds
gs
mov
xchg
in
fistl
imul
in
dec
mov
sub
mov
lcall
pop
xor
in
mov
pop
xchg
xor
sub
insb
mov
push
push
pop
into
mov
bound
jb
push
or
mov
mov
je
lahf
dec
and
lods
ljmp
lret
popa
or
lret
ss
fildll
decb
and
lcall
xor
xchg
cmp
ret
mov
aaa
push
std
ret
pushf
sbb
mov
mov
dec
cmpsb
add
inc
ret
out
xor
pop
inc
inc
mov
andb
pop
test
inc
in
nop
and
loop
and
gs
mov
cmpsb
int
xchg
xor
sub
push
or
add
jbe
daa
pop
push
mov
jmp
inc
cmp
jns
aaa
xchg
fisttpll
adc
mov
push
mov
xor
decl
nop
xor
push
or
xchg
repz
icebp
cmpb
jno
idiv
cld
mov
xlat
leave
sub
mov
push
jno
xor
lods
inc
fisubrs
adc
aad
imul
jne
inc
shrb
iret
fldcw
sbb
adc
jle
jne
stos
inc
cld
mov
ja
mov
jo
mov
and
xchg
dec
xchg
cmpsb
mov
stc
or
fldcw
repz
out
jne
in
push
into
sbb
movsb
addr16
sub
pop
push
or
outsb
sub
cli
js
popa
inc
in
pop
dec
loopne
cmp
icebp
sbb
xchg
add
stos
push
push
outsl
push
mov
ret
xchg
inc
and
das
add
pop
xlat
mov
ss
mov
xor
push
xchg
aam
ljmp
mov
push
and
stos
mov
dec
cmpsl
push
sbb
mov
sub
add
push
insb
pop
lods
lds
clc
dec
dec
mov
mov
ret
inc
inc
push
ljmp
jecxz
nop
mov
into
mov
outsl
std
in
rcrl
add
adc
mov
int3
ret
mov
sbb
aad
sti
cs
push
xchg
dec
and
ja
fdivs
imul
das
mov
fnstsw
mov
mov
sbb
divb
flds
mov
lds
aam
sub
inc
lods
mov
testb
sbb
out
insl
out
aad
dec
fistpl
dec
adc
movsb
add
ja
xchg
icebp
xor
outsb
out
out
scas
sub
pop
pop
mov
pop
xor
into
cmpsl
insb
sbb
roll
and
and
jo
or
inc
lods
scas
stos
jmp
inc
cld
xchg
in
or
sbb
imul
hlt
lea
aas
les
cmp
imulb
outsl
xchg
sub
inc
loope
sub
decl
cmp
fwait
daa
inc
inc
es
ret
out
roll
fisubl
bound
nop
jmp
cs
and
xchg
rorl
and
cmp
lods
mov
lcall
fwait
int
movq
aas
mov
popa
test
popa
std
movsb
ror
pop
fidivrl
movl
add
in
dec
pop
mov
ja
loope
in
leave
push
shll
dec
fidivl
ret
mov
aaa
test
mov
mov
and
cmp
xor
loopne
aam
mov
mov
mov
push
mov
jp
cwtl
xchg
and
cmc
out
push
stc
push
rclb
sbb
in
jl
xchg
sbb
xchg
adc
fiaddl
lods
lret
aaa
push
repnz
icebp
xlat
popf
pop
cmp
inc
push
mov
and
dec
dec
inc
sbb
inc
jno
sbbl
aam
test
inc
in
pop
push
push
movsb
cmp
push
notl
jns
inc
add
dec
popa
shll
ss
mov
les
push
insb
leave
or
ficoms
ret
sbb
sub
call
xchg
dec
ret
jp
aad
sub
bound
push
xchg
pop
lret
out
cld
int3
cmp
and
lret
add
loop
fsts
shr
push
sahf
and
inc
scas
jno
shll
jl
popa
call
sbb
push
push
mov
sbb
test
push
mov
push
int3
mov
ds
divl
scas
les
jae
stos
popa
aas
lahf
shlb
sub
clc
loope
test
sti
addr16
je
cmpsl
negb
xchg
sub
jmp
xchg
xor
sbb
ret
int3
loope
dec
inc
je
das
mov
ret
push
add
movl
cwtl
movl
pop
and
jl
dec
and
xlat
int3
xchg
and
imul
and
in
and
jo
popa
lea
test
xchg
les
inc
test
or
imull
sub
cld
std
lret
cmp
addl
sbb
divb
lea
cmp
adc
je
pop
jo
jg
icebp
mov
orb
jne
push
sbb
int3
inc
fidivl
ret
dec
fistl
mov
pop
out
ja
pop
push
and
repnz
movsb
xchg
mov
adc
std
jg
out
sbb
sub
cli
movsl
pop
dec
mov
sti
sub
fchs
jae
and
mov
test
fbld
push
xlat
pop
push
pop
xchg
adc
rclb
cmp
adc
xchg
cltd
stos
fildll
test
icebp
pusha
pop
or
lods
push
lods
mov
mov
in
mov
loope
adc
movsb
out
sub
push
ret
add
adc
jl
mov
xlat
dec
movsb
sbb
ret
inc
rcl
leave
xorl
lahf
sbb
push
ja
ljmp
sbb
orl
push
paddw
mov
pop
popa
aaa
inc
pop
mov
mov
mov
mov
dec
out
imul
pusha
divb
fsubl
cmp
or
shlb
fcompl
push
pop
mov
rcll
and
popa
adc
les
inc
dec
push
aaa
inc
mov
pop
mov
mov
out
lret
push
aaa
jge
fs
and
sub
test
cmp
orl
shrb
cmp
fs
dec
cwtl
fwait
bound
jne
pop
adcl
mov
xchg
ss
cwtl
cmp
in
jl
insl
ret
jmp
pusha
pop
mov
and
fsubr
enter
xor
lret
sbb
stos
add
into
cmc
leave
rcrb
outsb
test
jecxz
xchg
or
stos
pop
addr16
jle
cmp
jo
out
jmp
xchg
cmp
xchg
lods
sub
inc
inc
add
sti
mov
ss
scas
mov
and
popw
subb
aad
sub
orl
in
jae
jle
adc
popa
lods
jge
jae
jp
xchg
aas
jl
insb
inc
dec
les
or
cmp
ss
mov
out
pop
xorb
fstl
inc
jb
mov
sbb
mov
out
jo
add
jo
sbb
xor
and
mov
ror
sub
insb
sbb
or
xchg
pop
dec
sbb
test
insl
push
int3
dec
mov
icebp
jb
scas
cld
sbb
test
or
ret
data16
call
adcb
pop
movhps
in
out
lret
dec
lret
push
dec
pop
aam
adcb
or
lea
jnp
dec
push
outsb
jg
inc
push
xchg
push
pop
insl
call
orb
mov
test
mov
mov
push
jo
out
xchg
xchg
xor
and
xchg
sahf
jae
test
fmull
jno
mov
ja
lea
paddb
and
sub
outsl
jmp
js
les
pop
xor
xchg
movsl
test
cmp
add
gs
rcr
or
scas
cltd
ret
call
push
mull
scas
cmc
mov
je
arpl
ret
jae
xor
sub
out
repnz
and
sahf
inc
or
ja
jp
lods
mov
lcall
pop
dec
cltd
vpackssdw
out
clc
insb
ja
jno
mov
sti
mov
pop
jo
imul
scas
idivl
cli
pop
and
xor
insb
inc
inc
daa
xchg
xor
mov
sbb
call
popf
and
jl
sbb
xor
add
test
imul
push
jl
std
int3
daa
fs
stos
and
out
jns
and
fwait
add
pop
sub
xchg
sub
mov
pi2fd
leave
mov
push
xor
sub
add
pushf
pushf
fs
stc
pushf
push
gs
pop
and
inc
test
xchg
cmpsl
cmc
mov
int
std
sbb
stc
pop
push
cmc
lds
push
aas
mov
mov
test
out
inc
pop
rcr
clc
pop
shll
cmpsl
xchg
add
lds
ja
sub
ss
out
inc
iret
ret
fldl
dec
cmpsb
push
mov
pop
jno
adc
and
adc
add
pushf
mov
push
mov
push
repnz
test
xor
orl
imul
rolb
int
adc
adc
mov
sti
clc
roll
add
add
inc
inc
popa
aam
lock
lret
cmp
das
adc
dec
outsl
aam
jb
cmp
cs
dec
sti
movsl
adc
fnstsw
add
fucomip
loop
push
cmp
mov
mov
ja
nop
hlt
jmp
inc
xlat
fs
fsts
stos
or
dec
mov
rcr
imul
lcall
mov
push
pop
push
xor
mov
test
dec
lret
jecxz
add
and
es
xor
ds
lret
lcall
pop
inc
mov
cmc
add
push
pop
out
pop
adc
mov
leave
nop
inc
outsb
push
mov
int
inc
lock
or
sti
mov
jecxz
inc
rclb
aad
dec
cmc
imul
imul
pop
jmp
roll
push
stos
xchg
jno
movd
stos
aaa
sub
jmp
lcall
adc
dec
ret
addr16
aam
inc
out
jae
subb
xchg
xor
jno
arpl
lret
mov
cmp
push
add
cltd
jle
jecxz
in
cli
test
rcrl
nop
fnstcw
and
sbb
ja
orb
sbb
repz
and
xchg
andb
insb
mov
add
mov
mov
jnp
mov
imulb
add
lods
mov
addb
inc
xchg
clc
ljmp
mov
dec
jae
aas
daa
and
sti
mov
mov
dec
mov
test
inc
aam
lcall
test
popf
inc
subb
test
cltd
mov
xor
dec
add
jle
pop
cmp
xchg
inc
push
cltd
loop
push
cmp
sbb
xor
xor
ja
insl
clc
sub
xchg
xbegin
fbstp
stos
pushl
sub
adc
mov
push
mov
push
adc
xchg
jg
push
int
jmp
pop
adcl
imul
in
ret
pushf
pushf
mov
icebp
push
dec
scas
mov
mov
lret
push
mov
jp
aaa
icebp
jg
repz
ja
push
push
inc
add
pop
dec
adc
movsb
jo
mov
pusha
orb
jae
out
mov
rcrl
test
sti
mov
loop
aas
sbb
faddl
and
fsubrs
movsl
cmpsb
xchg
sub
pop
mov
test
leave
and
lret
js
add
push
in
add
mov
repz
mov
in
add
js
mov
cmc
inc
popa
cmp
es
shrb
loopne
cltd
shll
add
mov
or
push
test
cli
insl
cmp
mov
pop
cs
mov
mov
addr16
cmpsl
mov
sbb
lea
add
adc
mov
sub
sub
cltd
lahf
mov
cltd
cld
adc
lds
or
inc
cld
repnz
fucomi
cltd
les
out
adc
addr16
mov
jl
mov
out
sbb
cmp
mov
mov
pop
dec
and
cli
loopne
outsb
lahf
sub
cltd
pop
pusha
pop
add
rclb
into
subl
push
sahf
adc
les
cwtl
repnz
and
aad
sbb
out
mov
pop
popf
lcall
addb
rol
arpl
sub
add
cmp
in
addl
mov
xchg
cmp
xor
jns
cmp
xlat
push
inc
dec
loope
lea
push
icebp
outsl
ficoms
jb
insl
mov
out
jg
add
ja
push
jp
or
push
pushf
jmp
iret
mov
pusha
push
into
mov
mov
rcrb
jo
gs
sbb
into
mov
xor
les
mov
push
je
popa
popf
pop
fistl
jge
add
and
and
jb
mov
insb
pop
repz
jb
xor
pushfw
xchg
sub
cli
jb
rcrl
notl
ret
cltd
xchg
xchg
in
loop
pop
mov
mov
fisubl
in
xchg
mov
ret
fwait
loope
add
pop
test
les
xlat
jbe
jle
mov
sbb
or
dec
clc
mov
dec
dec
sbb
imul
sbb
pop
aas
repz
mov
pop
dec
mov
mul
mov
call
lahf
in
mov
mov
adc
aad
jg
xchg
xchg
imul
out
lock
inc
jmp
pop
mov
xor
pusha
cmp
test
inc
xchg
test
inc
sbb
xor
scas
sbb
stos
fwait
out
push
mov
push
sub
push
adc
push
xor
xor
orb
pop
add
lahf
sbb
dec
mov
inc
add
xor
mov
lea
cmc
xor
or
idivl
cwtl
pop
adc
mov
and
and
mov
pop
bound
lds
mov
mov
sbb
stc
cmp
sarb
push
or
out
aas
shl
fiaddl
rcrl
in
out
lret
mov
mov
pop
subl
xchg
pop
lea
inc
pushf
mov
popf
loopne
push
xor
jae
fistpll
mov
int3
out
cmc
ds
lcall
push
adc
seta
cmpsb
pop
mov
add
clc
jb
pop
mov
jae
and
fs
mov
cwtl
cmpsl
sbb
pusha
negb
pop
popa
lock
icebp
xchg
in
mov
push
and
daa
cltd
outsb
pop
sbb
iret
das
rorb
ret
out
sbb
push
cmp
sbb
les
hlt
loop
mov
div
push
adcb
cli
outsb
repz
or
fstl
stc
sbb
sub
imul
daa
scas
stc
aaa
orl
dec
sbb
push
or
or
sub
xor
nop
adc
popa
pop
dec
adcb
lcall
push
mov
sti
mov
inc
push
pop
aas
inc
cld
or
add
mov
dec
movsl
adc
push
xchg
add
or
dec
scas
add
pop
xor
xor
inc
xchg
add
lahf
into
push
mov
movsl
mov
in
call
pop
icebp
fdivs
shll
and
dec
mov
rol
dec
pushl
mov
inc
clc
push
in
jmp
sti
inc
sub
test
pop
inc
mov
bswap
mov
mov
xchg
icebp
dec
mov
nop
mov
dec
sar
dec
add
out
or
cmpsl
dec
xor
push
cmpb
negl
daa
cli
outsb
mov
sti
ds
jnp
sahf
cli
mov
les
jmp
pop
xor
incb
or
sbb
stos
loopne
xor
mov
jnp
jns
inc
jl
xchg
dec
cmpsb
out
lahf
cltd
rorl
xlat
stos
and
mull
push
xor
mov
cli
fists
xor
sub
mov
inc
and
xchg
pop
mov
ficompl
insl
popa
loop
fstpt
adc
mov
and
jbe
push
adc
fdivr
addl
xor
add
cmp
mov
dec
or
std
jno
outsl
je
sbb
int
jmp
loopne
scas
jmp
cli
xchg
jg
gs
adc
test
dec
and
fidivrs
ret
pushf
enter
divb
add
mov
lds
jne
dec
stos
repnz
hlt
adc
or
stos
cmp
sbb
loop
pop
rcrl
aas
enter
mov
xchg
rorb
incl
outsb
imul
push
sti
cmp
pop
jge
mov
mov
ret
lods
lcall
movsl
das
adc
jbe
and
insl
sbb
mov
mov
adc
cli
iret
cmc
sahf
rolb
sbb
adc
xchg
pop
js
orl
push
sub
je
dec
mov
out
fistps
into
and
ret
andb
in
out
inc
jle
stos
xor
out
ds
rorb
dec
loopne
scas
hlt
fistpl
mov
xor
outsl
add
jge
fadds
mov
pop
add
sub
cmpsb
sbb
mov
xchg
incb
enter
mov
rclb
shrb
adc
push
jg
mov
cwtl
push
bound
push
rcr
fstl
in
xlat
pop
in
fisubrl
jmp
mov
aas
xchg
mov
add
bound
clc
mov
frstor
lds
xchg
call
mov
mov
into
out
mov
pop
or
mov
lds
or
sar
jmp
sub
hlt
daa
in
mov
adc
inc
stc
or
xchg
arpl
sub
fwait
sub
shrb
mov
iret
scas
jg
mov
out
arpl
cmpsb
data16
xlat
adc
mov
xchg
dec
pusha
sub
int
cli
cmp
add
jno
inc
sbb
jbe
test
sub
mov
dec
mov
lock
sti
sbb
mov
xor
aas
jmp
push
out
push
into
stc
loopne
in
test
inc
movsb
cmpsl
jo
lcall
and
lods
sub
iret
xor
scas
movsb
loop
dec
mov
ljmp
jmp
push
jns
or
movsl
aam
pop
clc
mov
inc
and
das
xor
imul
outsl
mov
mov
test
sbbl
cmp
mov
stos
cld
xchg
pop
inc
inc
or
and
push
aas
adc
adcb
cmp
mov
mov
mov
mov
xchg
pusha
loope
enter
dec
cmp
fldcw
or
inc
dec
jno
mov
mov
rcrb
movsb
cmp
xchg
repz
test
xchg
mov
xchg
shlb
xchg
pop
sub
xchg
jmp
repnz
dec
jb
push
jb
and
lds
jbe
pop
sbb
and
pop
dec
pop
cmpl
ja
cmp
jnp
je
jo
pop
add
fiadds
pop
out
pop
ljmp
stos
aam
and
inc
ja
arpl
ss
es
jns
lock
jge
sbb
xchg
dec
adc
mov
cmp
jns
jl
jne
rcrl
rcrb
jp
aaa
or
add
push
insl
in
sbb
xor
data16
xchg
sub
jmp
add
int3
fadds
clc
mov
and
cmp
mov
or
add
scas
in
fsincos
xor
xchg
repnz
frstor
dec
je
bound
jne
ret
aam
aam
ljmp
dec
ja
mov
pop
adc
push
dec
adc
jp
dec
dec
mov
cmp
xor
xor
addl
or
lahf
adc
xor
mov
mov
jnp
cmp
fists
jge
fldl
leave
or
int
jae
push
sub
movsl
int
dec
jp
jg
loop
in
ds
mov
push
ss
scas
lret
popa
pop
xchg
push
ljmp
xlat
mov
lret
movsl
adc
jns
adc
pop
dec
arpl
mov
cmpsb
inc
push
dec
sbb
lods
mov
cmp
int3
mov
cmp
jl
pop
jae
icebp
cmp
aas
mov
add
and
test
lret
mov
cltd
xlat
stos
mov
pop
mov
je
std
jecxz
xchg
cmp
into
out
jp
dec
add
dec
sbb
jp
int
cmp
lret
sbb
mov
xchg
pop
jmp
lea
xor
adc
movsl
out
icebp
ficompl
subb
xor
and
inc
xor
mov
les
repnz
or
mov
or
xlat
or
int
or
outsb
enter
mov
cli
xlat
lret
mov
xchg
and
popa
xor
xchg
hlt
test
jnp
push
and
or
sub
popf
stos
sbb
inc
push
gs
inc
int
and
sahf
lahf
mov
xchg
fildl
mov
dec
jno
pop
fdivr
rcrb
mov
repz
pushl
movsb
pop
push
mov
pop
mov
jae
xor
mov
frstor
std
xor
pop
and
adc
bound
push
popf
add
in
sahf
inc
insb
cmp
shrb
adc
mov
cwtl
test
in
inc
xor
bound
rorl
dec
addr16
bound
adc
add
js
mov
cmp
sub
cmp
out
push
int3
lret
js
mov
jae
in
and
test
jg
pop
jg
dec
and
imul
or
popf
mov
out
lds
jb
mov
push
lock
push
dec
pop
lea
aas
jo
jbe
sahf
popa
mov
xor
popl
dec
jmp
mov
aam
xor
pop
repnz
mov
adcb
push
inc
je
cmp
daa
mov
lcall
cs
or
add
es
push
push
popf
stos
icebp
mov
ljmp
and
jne
fists
aaa
pop
dec
cld
test
pushf
mov
sub
xor
rcll
inc
lret
shl
sbb
cmp
ds
arpl
jmp
mov
cmc
ljmp
adc
mov
pusha
cmp
leave
lods
jb
jbe
pushf
inc
filds
pop
dec
int
push
adc
xchg
jno
mov
into
push
aam
test
jge
jmp
enter
push
aam
sbb
xor
jae
pop
ss
hlt
out
push
dec
repz
pop
lods
sbb
xor
int
and
popf
add
push
jmp
dec
in
inc
and
jns
push
mov
cmc
ljmp
pushf
mov
sbb
inc
sub
mov
xor
or
sar
mov
pop
aad
xchg
stos
test
mov
mov
jno
xchg
push
dec
cmp
add
andl
sbb
test
adc
lods
push
mov
pop
fimull
sbb
inc
mov
sub
jbe
out
jg
inc
cmpsb
stos
cmp
in
mov
dec
leave
mov
dec
pop
lock
lahf
add
repnz
imul
pop
icebp
test
or
in
fimuls
shlb
inc
hlt
adc
jne
jl
mov
push
pop
bound
nopl
inc
in
lea
mov
push
imul
ficompl
call
std
add
cli
or
nop
cmp
pop
ret
mov
xor
inc
xchg
pushf
adc
lret
test
hlt
mov
push
adc
add
lahf
jmp
movsl
dec
aaa
es
sbb
cwtl
adcb
out
mov
std
les
in
hlt
dec
inc
pusha
xor
out
xchg
sub
sub
xor
aad
stc
gs
jbe
mov
cld
or
cmpsl
jb
fbld
imul
adc
xor
fwait
adc
pusha
shlb
dec
js
mov
mov
outsb
ss
cmpsl
out
sbb
ds
ljmp
jno
mov
mov
sbb
pop
ret
jae
lret
into
fldt
ret
mov
inc
adc
subb
fcompl
xchg
push
jmp
cmovae
stc
les
outsb
push
je
rorl
adc
mov
push
icebp
xor
push
pop
lds
xor
dec
cmpsb
inc
xchg
push
cmp
xchg
cmp
dec
and
sub
cli
xor
aam
nop
xor
imul
add
mov
sub
call
loopne
ret
xor
out
test
repz
xchg
inc
mov
mov
jnp
test
imul
sub
sti
movsl
sbb
aaa
pop
int
cmp
insb
dec
mov
icebp
sahf
pusha
cltd
jecxz
mov
mov
inc
shlb
cli
inc
xchg
pop
jbe
in
sub
les
and
popa
jle
pushf
popa
or
inc
bound
xor
jbe
aaa
cmp
mov
push
push
addb
addb
jl
pop
add
scas
test
fwait
cli
or
fisubrs
sub
cmp
push
insl
lds
inc
call
pushf
cmp
or
mov
xor
inc
mov
or
jbe
fwait
inc
sbb
scas
sub
xor
cmc
orb
out
fisubrl
jb
pop
data16
adc
fcoml
jmp
xchg
les
out
fsubrp
repnz
jbe
mov
movsb
sti
xor
into
dec
mov
jp
shrl
cli
rcrl
lods
ja
sbb
push
rol
mov
cltd
xor
stos
xchg
sub
jns
pop
ret
mov
dec
jne
lahf
sbbb
sub
out
push
xchg
mov
mov
add
lret
int3
or
and
push
push
xchg
mov
popf
test
mov
jbe
nop
pop
adc
mov
pop
daa
int
adc
stc
cltd
imul
dec
test
or
jp
inc
cmpsl
sub
mov
insb
xchg
idiv
mov
aad
in
cs
aaa
fildl
mov
leave
mov
ja
mov
fisttpll
push
cmpsl
out
inc
mov
stos
jge
in
shrb
lods
inc
jb
lods
cmpsb
pushl
ret
xchg
add
dec
mov
int3
add
popa
pushf
lods
ds
mov
inc
xchg
je
dec
ds
lret
das
jmp
mov
cmp
mov
pop
inc
das
sub
test
test
xor
imul
js
mov
xor
xchg
mov
add
scas
inc
dec
fisttpl
rol
stc
xor
pop
in
mov
xor
cmp
insb
push
push
jg
xchg
pop
cmpsl
adc
inc
lcall
jne
lahf
push
pop
dec
les
adc
cld
xor
inc
lods
stos
cli
push
push
movsb
jb
cmp
lds
mull
or
pop
sub
test
lcall
jnp
test
fs
mov
fisttpll
sbb
fs
lcall
fnstcw
int
jnp
mov
cmp
popa
data16
xorl
mov
pusha
imul
cmp
mov
pop
xchg
dec
das
jmp
xchg
lcall
mov
out
pop
std
dec
mov
jae
xchg
adc
mov
and
jnp
aaa
push
frstor
xlat
lcall
xchg
sub
loop
or
jg
cmp
push
dec
mov
cltd
jl
jo
lock
inc
add
pop
mov
outsl
es
scas
stc
inc
xorb
pop
push
jge
jg
or
fistps
xchg
jl
ret
xchg
fstpl
stos
mov
xlat
mov
in
lcall
mov
cmpsb
lcall
lahf
mov
sbb
std
stc
inc
adc
xchg
add
xor
fwait
imul
es
push
in
fnsave
aaa
dec
pop
inc
jg
ja
add
aad
cmpsb
mov
aas
mov
pop
push
mov
adc
and
rcr
push
push
mov
mov
and
cmp
xchg
push
clc
jmp
xchg
push
idivb
sbb
mov
push
mov
mov
sbb
jb
push
mov
add
int
push
xor
adc
mov
mov
fwait
inc
sbb
in
fs
int3
pusha
jl
push
push
cmpsb
sbb
xor
sbb
in
inc
mov
testl
xchg
jo
cs
inc
dec
lock
lods
lds
rcll
nop
mov
out
lahf
xlat
cmp
xor
cmp
pop
jnp
mov
sub
outsb
inc
cmp
stos
push
repnz
xor
jno
shrb
leave
jnp
mov
dec
fsubrl
jmp
jecxz
jo
sti
test
add
aad
clc
dec
sbb
dec
push
lock
adc
clc
rcll
cltd
fcompl
inc
jp
and
sbb
rclb
lock
mov
inc
xor
mov
xor
out
pop
lret
jno
xchg
adcl
lret
mov
or
add
mov
adc
test
mov
add
mov
sub
popa
clc
mov
movsl
mov
inc
mov
ljmp
or
in
test
add
loope
cmp
mov
test
jns
testl
scas
xor
jecxz
clc
push
int3
icebp
enter
pusha
jnp
and
cmp
mov
lods
push
mov
mov
cmc
sbb
push
leave
inc
mov
outsl
imul
call
nop/reserved
mov
icebp
jns
mov
loope
rcrb
or
jge
cmpsb
add
push
ss
cmc
cltd
test
fninit
js
movsb
mov
stos
sbb
xor
dec
ret
div
sub
shll
adc
inc
or
jle
push
mov
in
lds
or
inc
cs
xlat
fisubrs
jno
push
outsb
idivb
dec
cmpsb
je
inc
add
add
outsl
popf
jns
xor
mov
movsb
andl
fidivs
test
dec
mov
cmp
pop
xchg
mov
adc
rcrb
imul
xor
sbb
fisubrl
lods
outsb
adc
movsb
xor
nop
mov
jo
jecxz
test
inc
pop
inc
pop
ds
adc
jns
ficomps
mov
mov
cli
push
test
xlat
sbb
dec
mov
jmp
xor
xchg
ljmp
test
push
push
mov
sar
inc
inc
ss
dec
jle
push
jl
scas
test
sbb
dec
or
lret
fsubr
push
push
orb
add
and
dec
jne
xor
mov
enter
scas
cmp
push
shlb
or
or
movsl
jnp
and
jmp
xchg
push
popa
outsl
aam
data16
adc
xchg
shrb
test
popf
jb
jne
rolb
pop
mov
por
aad
fimull
pop
test
push
mov
mov
and
mov
out
sub
les
ret
xchg
push
sbb
jae
adc
mov
push
dec
mov
push
fisttps
mov
push
out
cld
in
add
xor
cwtl
push
adc
lret
rolb
mov
incl
or
daa
mov
fcmove
bound
push
dec
dec
fstl
repnz
xor
xchg
lret
movsb
push
xor
fcoms
sub
pushf
loop
sub
fidivrs
rclb
mov
mov
jae
cmc
or
insl
inc
ja
cmp
mov
data16
dec
xor
leave
push
int3
insb
fidivs
iret
stc
shlb
adc
sbb
clc
pushl
cli
jmp
mov
push
mov
add
push
adc
lea
shlb
outsl
lods
xor
xor
repnz
xlat
sub
mov
pop
loope
mov
xor
repz
andl
inc
cmp
xchg
das
in
ljmp
clc
sti
movsl
and
xchg
or
adc
ret
fisubs
mov
pop
xor
and
ret
xor
enter
js
inc
mov
fiaddl
cwtl
test
roll
inc
mov
push
add
jp
push
inc
jno
std
pop
popa
test
aas
mov
pusha
mov
adc
into
pop
adc
xor
adc
test
fwait
lock
aam
mov
loope
push
mov
leave
std
push
rol
sub
out
jbe
fstp
mov
int
inc
out
cmpsb
mov
mov
outsl
sbb
or
ja
repz
add
xchg
les
mov
push
or
sbb
cmp
push
sbb
ret
cmp
and
mov
or
jnp
add
outsb
repz
pop
and
or
addb
push
and
cmp
repnz
aam
jae
adc
sahf
mov
cwtl
cmpsb
dec
xor
lahf
enter
cwtl
xchg
ficoml
mov
sub
push
orb
int3
ja
mov
pop
or
jmp
dec
mov
int3
ror
pop
call
movsb
repnz
adc
jmp
ja
cmpsb
xor
rcrb
inc
sub
push
out
daa
mov
dec
sarl
jge
push
movsl
cmovg
adc
nop
jno
pop
pop
push
push
mov
xor
stc
jecxz
jg
mov
mov
add
or
mov
jmp
mov
aas
or
mov
div
and
xchg
fbstp
lret
imul
mov
push
scas
insb
xchg
in
inc
leave
dec
inc
das
fbstp
hlt
mov
pop
addr16
leave
xchg
push
jnp
pop
or
lcall
jl
jo
mov
je
jecxz
dec
cmp
loop
adc
adc
push
fsub
repnz
cmp
add
mov
push
xlat
pushaw
mov
mov
adc
cmp
pop
inc
xchg
cmp
mov
xor
ja
adc
lock
cmp
jle
lods
sub
rcll
fs
jne
xor
mov
adc
roll
pop
jmp
xchg
xor
inc
add
pop
cmp
arpl
out
sub
shrl
call
movsb
lahf
icebp
lahf
dec
push
rcr
jae
sub
inc
or
ficoml
fimuls
jbe
dec
iret
adc
int
test
aaa
mov
pusha
lret
or
lods
pop
jecxz
push
fldcw
pop
ds
in
push
inc
jmp
adc
pusha
jns
lret
stc
adc
jle
adc
and
or
pusha
out
lods
lock
pop
sbb
shrb
jge
inc
mov
mov
ds
in
ljmp
mov
mov
imul
scas
hlt
mov
test
mov
jl
xor
mov
popf
add
ja
pop
pop
mov
clc
ret
rolb
icebp
pop
lock
leave
or
add
jae
push
mov
int3
test
lret
popl
in
sub
daa
movsl
pop
sbb
sub
insb
mov
aaa
shrl
cmp
into
insb
gs
mov
push
dec
and
xchg
xchg
mov
jnp
adc
sub
xor
mov
aad
jno
sbb
les
fdivr
dec
lock
jnp
pushl
aad
mov
out
sbb
cmp
sarb
pop
lea
jg
aas
adc
loopne
les
or
sub
cld
xchg
pop
js
adc
or
pop
leave
lcall
into
adc
push
and
std
mov
mov
push
adc
fs
in
fstpt
repnz
cmc
sbb
jle
mov
mov
stos
aas
mov
inc
inc
pop
popa
xchg
mov
jnp
aas
leave
loopne
and
repz
xlat
in
pop
loop
xchg
or
inc
xor
enter
and
dec
or
in
pcmpgtd
cld
jne
jge
inc
subl
pop
push
or
or
scas
fsubr
or
push
xor
bound
pop
jb
repz
int3
data16
xlat
or
xor
int
dec
addr16
out
inc
inc
shll
sti
xchg
lcall
jge
lcall
mov
ja
mov
add
add
jnp
jl
mov
jae
cmp
pushf
push
lock
ret
sbbl
insl
addl
pop
das
cmp
lea
stos
add
xor
add
push
or
mov
sub
daa
mov
enter
mov
mov
mov
rclb
jb
or
hlt
fwait
mov
xor
pushf
stos
fdiv
jne
xchg
cmc
or
push
ss
add
popf
or
cmp
adc
mov
std
mov
push
adc
notl
cs
lret
cmp
movsl
sbb
out
movsl
in
sbb
mov
mov
pop
dec
shlb
cli
pop
int
jbe
lds
rorl
flds
add
in
sarb
sub
sbb
fistpll
xor
ret
nop
push
aaa
xor
and
push
jae
fwait
push
mov
mov
push
ja
xor
jg
pop
scas
mov
in
scas
pop
imul
in
mov
scas
jle
sbb
xor
push
test
lret
bnd
cmp
inc
cmp
sbb
out
cs
out
lret
popa
cmpsl
cmp
mov
lods
test
divl
scas
leave
xchg
mov
push
jbe
push
mov
test
arpl
mov
icebp
and
sbb
je
stc
arpl
out
test
lahf
add
scas
or
test
and
xchg
push
sbb
dec
fbld
lahf
mov
cmp
stc
fimull
enterw
sub
pop
dec
and
jo
pop
and
enter
sbb
dec
lods
xchg
jl
fiadds
or
xor
or
clc
test
mov
inc
ss
mov
lret
cmp
aas
test
push
or
pop
or
fbld
mov
js
lock
inc
xchg
test
fldenv
cli
arpl
andb
xor
jl
roll
mov
mov
xchg
and
or
mov
inc
add
shll
repz
clc
rcrb
aas
lds
das
repz
sbb
clc
or
xor
mov
movntq
dec
or
lret
cld
popf
scas
mov
lcall
mov
orl
jns
push
out
or
scas
rcrb
xorl
cmp
fidivrs
sbb
sbb
cli
movsl
lcall
pop
push
jnp
push
pop
popf
adc
xlat
push
pop
cmp
mov
das
sbb
pop
cltd
and
push
add
mov
mov
popf
pop
xchg
imul
cmp
dec
insb
fmul
stos
movsb
or
insl
cs
icebp
cmp
pop
xchg
hlt
and
fisttps
in
push
mov
cmp
adc
add
in
jo
dec
xor
add
fwait
fwait
mov
fidivrl
aas
arpl
pop
scas
hlt
adc
pop
movsl
sbb
sub
leave
lcall
enter
mov
lods
cli
xlat
push
popa
out
and
jns
frstor
sbbb
sbb
xor
pop
fisubrs
inc
mov
xor
sbb
imul
int3
stc
scas
and
sbb
cltd
icebp
cwtl
xor
test
cmc
icebp
aaa
inc
test
out
sbb
xchg
sbb
in
push
cwtl
pushf
decb
lcall
adc
push
inc
imulb
jmp
out
xor
push
out
jp
jbe
in
xchg
pop
aaa
jbe
mov
sub
loopne
test
push
in
loope
pop
jnp
pop
aad
sbb
sub
pop
aad
out
gs
fdivrl
loopnew
ljmp
adc
pop
inc
or
mov
aas
add
sub
pop
add
ret
add
jbe
sbb
pop
roll
sbb
test
pop
xor
stos
ret
inc
jle
dec
les
call
push
jecxz
out
aas
call
jl
jp
fs
shlb
mov
or
mov
inc
mov
sbb
pop
inc
arpl
stos
jns
xchg
push
mov
jp
xlat
pop
or
sub
xchg
aas
push
add
das
cld
xchg
mov
dec
mov
or
mov
cmp
cltd
sbb
rolb
jg
int3
les
std
or
shrb
xor
in
stos
pop
stc
enter
leave
and
int3
dec
out
jle
add
or
add
jnp
int3
lea
cmp
xchg
lds
add
or
fidivl
int
std
push
outsl
jb
dec
hlt
sub
shll
rcrb
decb
xchg
into
sub
cmp
or
push
aam
sbb
lods
ds
dec
es
adc
sub
pop
insb
dec
push
and
push
jl
movsl
mov
sbb
ficomps
lar
lea
ret
xchg
cmp
aas
mov
xchg
mov
outsb
inc
mov
mov
shr
mov
xor
sbb
shlb
out
sbb
or
repz
mov
dec
rclb
rorb
pop
pop
push
or
mov
mov
sub
cmpl
mov
sbb
cmp
nop
cmp
arpl
ret
add
cmovne
xlat
repnz
mov
rorl
hlt
loop
pop
test
std
scas
jle
jmp
in
xchg
clc
cmp
and
cli
int3
das
jmp
xchg
cltd
fwait
lds
and
adc
adc
loope
push
movsb
inc
cltd
es
std
add
inc
mov
sub
add
jb
push
cmpl
dec
mov
sbb
xorl
std
notl
insb
xchg
xchg
inc
movsl
dec
xchg
xchg
fldcw
sbb
xchg
xchg
xor
push
ds
jne
or
mov
mov
jno
pop
mov
lahf
mov
sub
jmp
in
sub
sbb
gs
gs
ss
xchg
fnstenv
aaa
int
shll
xor
mov
sub
push
fwait
mov
shl
addr16
xor
xchg
stc
sbb
dec
and
jl
cld
cmp
lret
dec
popf
sarb
push
add
cmp
mov
aad
mov
in
cltd
pop
cli
cwtl
dec
call
inc
dec
bnd
shlb
test
rclb
nop
mov
xor
mov
xchg
clc
out
inc
inc
je
adc
fnstsw
adc
pushf
push
xchg
xor
fisubs
add
dec
outsb
lret
jno
into
jo
sahf
mov
mov
pop
jns
xor
xchg
cs
iret
add
mov
mov
adc
xchg
or
inc
stos
add
mov
sub
aaa
sbb
div
add
loope
sub
mov
jge
and
scas
xor
and
call
sbb
mov
mov
mov
sarl
jmp
mov
dec
mov
sarl
into
addb
xchg
aas
sub
jno
fbstp
stos
inc
ja
out
jp
jle
mov
les
out
jno
pop
inc
jmp
and
xchg
cmp
sub
pop
sbb
sub
adc
push
stos
ror
add
iret
pop
fstpt
shll
xchg
pusha
push
cld
xlat
add
sub
add
mov
into
stc
arpl
sbb
sbb
fucomip
scas
cwtl
fwait
lret
add
mov
negl
jmp
pusha
or
dec
push
sub
adc
movsl
js
bound
lret
xor
or
aaa
lods
jp
and
mov
sahf
dec
stos
push
add
sub
add
cmpsl
dec
roll
shll
add
orl
jmp
xchg
out
stos
adc
repz
mov
adc
sub
adc
inc
mov
into
or
out
or
mov
jp
adc
or
inc
lods
jne
dec
xor
shl
cmp
push
insl
mov
pop
adc
push
and
cmc
ds
xchg
xor
in
add
or
and
lock
cmp
jp
cmpsb
andl
cmp
aas
lret
cwtl
xchg
cmp
jne
enter
cld
pop
add
mov
in
jge
test
jmp
and
inc
dec
dec
mov
idivl
lcall
mov
dec
push
clc
icebp
push
std
sbb
push
sbb
pxor
lea
hlt
xchg
pusha
cmc
fs
out
and
push
push
mov
in
repnz
ss
cld
mov
ret
pop
sbb
mov
mov
xor
pop
inc
insl
fidivs
and
dec
add
xor
xchg
std
cmp
push
add
and
fdivl
mov
mov
mov
pop
jnp
out
out
xchg
repz
aad
mov
insb
rcrl
std
jge
jp
lahf
adc
pop
cld
ds
cmpsb
cmp
aad
cmpsb
mov
icebp
in
mov
jge
xchg
popf
lret
xor
in
leave
mov
test
loop
loopne
jae
loop
test
add
push
fnsave
stos
scas
addb
imull
or
wbinvd
mov
repnz
imul
xchg
lods
test
cmp
jb
push
or
divl
nop
aaa
sbb
xchg
lds
clc
dec
cli
xlat
aas
jmp
pop
lea
pop
dec
outsb
clc
pop
ret
push
lahf
inc
adc
and
les
dec
sbb
test
repnz
inc
sub
or
and
iret
leave
scas
push
popf
outsl
add
jmp
mov
ss
inc
pop
adc
movsb
inc
adcb
scas
cmp
dec
mov
dec
push
pushf
mov
sub
loopne
iret
lock
aas
add
fwait
cs
mov
es
daa
xchg
sub
dec
jg
cmp
push
int3
jbe
imul
xor
adc
mov
data16
test
or
dec
inc
push
push
ret
pushf
int3
sahf
xor
pop
lea
sbb
sub
add
insb
push
mov
sbb
jle
xor
scas
imul
stos
cltd
pop
repnz
mov
cli
pop
cld
jne
movsl
cmpsl
xlat
in
repnz
loopne
mov
fsubrl
xchg
xlat
lcall
rol
in
xchg
dec
popa
xor
out
nop
jle
cld
xor
arpl
inc
sbb
xchg
sub
arpl
xor
daa
std
sbb
enter
in
sbb
imulb
jne
jo
xchg
xchg
push
inc
mov
in
sub
xchg
aam
incl
cmp
xor
cmpsl
xor
and
pushf
jnp
pop
imul
js
out
cmp
ds
notb
xor
mov
jno
xor
ljmp
xchg
cmp
or
filds
daa
fidivl
test
ds
sbb
or
pushf
pop
jnp
aam
cmc
gs
sbbb
add
sti
pop
inc
sti
repnz
test
arpl
std
fidivrs
js
dec
rol
mov
push
and
hlt
sbb
mov
push
cwtl
cmp
lret
or
stos
popa
pop
xor
mov
test
push
adc
pop
inc
push
fnsave
or
scas
in
cli
pop
sub
inc
dec
lcall
pushf
in
dec
add
xchg
inc
lock
les
test
aad
cmp
mov
test
mov
mov
add
andb
addr16
cmp
in
xchg
cmpsl
pop
add
mov
in
int
pop
mov
sbb
psllq
xchg
cmp
mov
mov
xchg
into
mov
sub
inc
sub
jb
jnp
ret
shll
mov
push
jp
outsl
and
pop
xor
mov
push
lret
vprotb
push
outsl
out
pop
or
inc
arpl
xchg
fstpl
mov
or
push
aad
testb
pop
popf
test
and
mov
dec
xchg
mov
fdiv
sbb
popf
sub
xor
push
mov
das
cld
mov
jbe
ljmp
mov
xchg
dec
add
sub
sbb
inc
std
aam
sar
daa
leave
mov
mov
call
fdivrp
inc
int3
stc
or
movsl
outsl
mov
sti
fcomip
repnz
test
out
and
sbb
dec
jns
ja
cs
xchg
sbb
ret
arpl
jl
pop
imul
lea
push
mov
push
mov
movsl
mov
cmpsb
scas
ret
mov
xor
addr16
loop
idivb
push
push
and
ficomps
clc
inc
fidivl
aaa
movsb
pop
nop
lods
xor
add
ffree
outsb
cwtl
dec
outsb
bound
adc
fstp
bound
add
push
adcb
or
jg
std
inc
in
sahf
mov
scas
shll
xor
ja
mov
icebp
jae
push
fcompl
xchg
cltd
jno
push
sub
test
push
cmp
fsubrl
mov
sarb
jg
cwtl
clc
pop
or
leave
jg
or
fisttpll
sub
pop
arpl
xor
sbbb
outsl
pop
dec
jmp
inc
rclb
movsb
insl
ja
jnp
sub
add
hlt
xchg
fnstenv
mov
fs
inc
cmpsl
sbb
fcos
iret
adc
sbb
daa
mov
push
push
mov
or
stc
jno
test
mov
xchg
mov
push
push
sub
pop
jmp
sbb
or
fs
xor
cwtl
addr16
xor
sahf
or
push
enter
cs
and
sbb
leave
xchg
push
arpl
mov
push
aas
lahf
add
adc
add
loopne
inc
pop
mov
jecxz
mov
imul
jbe
leave
xchg
adc
mov
mov
cmp
sub
test
pop
pushf
adc
notb
std
mov
dec
clc
mov
mov
mov
gs
movsl
orb
mov
cmp
xor
stos
xor
push
dec
mov
adc
ret
and
movsl
adc
js
int
shl
and
je
into
leave
test
sub
movl
xchg
inc
test
mov
stos
or
std
or
push
enter
test
cmp
stc
cmp
add
adc
xchg
mov
or
or
nop
mov
js
rol
test
xor
pop
clc
mov
loope
pop
cmp
dec
mov
fstpt
sub
cmp
add
inc
rcl
aam
aas
shr
sbb
mov
adc
mov
das
dec
push
mov
mov
jmp
and
fistps
sbb
xchg
sbb
mov
mov
mov
lods
fsub
aad
fcomi
ss
loope
adc
inc
in
inc
cmp
addb
sub
lret
inc
in
nop
sahf
and
or
out
test
cltd
mov
cmp
push
xchg
roll
cmc
add
ret
outsl
sbb
gs
scas
push
cmp
stos
cli
xchg
dec
inc
xor
sub
fstps
les
jg
jecxz
nop
jl
rorb
in
sub
push
inc
icebp
xor
cmp
aad
ficompl
bound
mov
jecxz
sbb
or
inc
inc
aas
arpl
addb
inc
ret
negl
dec
xchg
adc
lret
push
mov
pop
pop
push
xor
iret
sub
push
ret
pop
xchg
icebp
test
in
icebp
or
add
and
xchg
mov
popf
xor
push
inc
xor
mov
rorb
cmpsb
and
cmp
and
add
icebp
daa
pop
dec
cmpsb
sbb
jns
std
gs
loope
add
ss
es
nop
jbe
bound
xor
mov
or
xchg
sub
out
cwtl
addr16
sub
jbe
mov
aam
ret
sbb
aas
lock
push
add
stos
push
dec
outsl
dec
mov
loope
jp
pushf
cmp
out
daa
push
push
adcl
jmp
clc
adc
push
cli
call
sub
pop
test
sti
pop
mov
loop
adc
nop
and
pop
jmp
clc
mov
notl
lahf
lahf
sub
cbtw
dec
arpl
inc
and
cs
fst
insb
or
push
std
mov
xor
and
aad
cmc
add
jns
movsl
push
sub
cmc
cltd
loope
xchg
cli
mov
repnz
push
mov
sbb
dec
xor
lds
ss
data16
jle
loop
mov
in
aas
mov
mov
sub
stos
mov
jno
std
jg
ljmp
jne
lret
jbe
xchg
xchg
arpl
xchg
add
ds
pop
sbb
xchg
pop
dec
lods
mov
pop
test
lods
dec
or
xchg
cwtl
insb
pop
imul
fadd
pop
mov
cmp
jae
imul
mov
and
cmc
cmpsl
imul
adc
nop
push
and
jns
inc
pop
outsb
xchg
pop
outsl
lea
mov
sti
inc
nopl
jno
mov
test
imul
cli
lods
data16
add
call
inc
pushl
test
mov
lcall
cltd
stos
sub
mov
ljmp
ret
or
mov
rcrl
daa
or
mov
fyl2xp1
jbe
sbb
mov
fwait
push
icebp
adc
shlb
jmp
shrl
xchg
dec
or
mov
daa
inc
imul
sub
xor
int3
outsb
pop
outsl
and
push
cmp
xor
ss
das
dec
mov
cltd
movsb
and
cmp
dec
rcrb
push
adc
sub
xorl
cmpsb
mov
jg
inc
mov
popl
mov
dec
sbb
sub
cmp
adc
aad
sub
adc
out
add
rol
je
cld
xchg
icebp
orb
shl
pop
add
jp
arpl
sub
out
inc
push
add
ret
pop
lods
xchg
mov
and
dec
xor
sub
dec
push
sbb
xor
and
stos
add
mov
push
mov
adc
xchg
xor
leave
or
subl
clc
daa
jmp
jns
sahf
mov
or
cmp
pop
xor
add
bnd
fwait
pushf
stos
mov
jb
push
test
testl
out
adc
cmp
mov
cmp
scas
insl
imul
sbb
xchg
pop
lret
mov
sub
and
sub
jp
fimull
in
stos
mov
adc
in
pop
cmpsl
xor
daa
mov
imul
sub
ljmp
je
mov
pop
dec
popf
imul
push
xor
or
out
adc
cli
sbb
mov
jle
mov
inc
cmp
push
fldt
shlb
xchg
xor
xchg
mov
mov
inc
jae
insb
js
jne
mov
push
xchg
cmpb
xchg
sbb
xor
lods
dec
mov
push
xor
pusha
test
fcmovu
pop
mov
adc
mov
or
mov
out
bswap
cmp
inc
mov
cmpl
add
cltd
jns
insb
je
mov
ljmp
xor
jne
xorl
xor
mov
mov
pop
mov
cmpsl
jmp
lcall
dec
fidivrl
ds
fstl
scas
loopne
iret
fwait
les
pusha
mov
mov
add
inc
shll
push
out
aam
test
and
fs
mov
push
fidivrl
subb
or
lds
in
mov
ljmp
jge
push
and
mov
adc
in
js
pop
adc
outsl
xchg
dec
stos
and
dec
add
add
mov
mov
inc
test
mov
jg
adc
lea
xchg
mov
rclb
sahf
rcl
ljmp
jb
sahf
pop
aas
imul
xchg
sub
in
shrb
outsb
lods
std
jbe
xchg
jne
outsb
mov
jp
imul
mov
in
dec
sub
or
cltd
fistps
mov
test
jb
mov
dec
mov
mov
popf
test
fwait
push
and
movsl
stos
loope
jb
xchg
jbe
sub
jmp
fs
movsb
in
orb
xor
loopne
stos
insl
add
jmp
sarb
test
adc
adc
mov
rcll
inc
repz
sub
ret
add
fcmovne
mov
jecxz
xor
jbe
stc
sub
pop
in
push
jmp
adc
push
pop
ja
xchg
cmp
pop
jmp
stos
mov
adc
jl
pop
push
jbe
push
add
cld
data16
cmp
fstl
nop
xor
xchg
fcoms
cmp
lock
mov
xchg
hlt
repnz
add
dec
xchg
adc
dec
aas
scas
std
add
scas
mov
push
jp
roll
inc
sbb
sub
sbb
ficoms
mov
jl
lcall
and
mov
stos
out
incl
pop
ret
idivl
enter
cltd
in
sbb
clc
and
or
pop
push
rcrl
test
jmp
push
lock
jb
insb
fldt
jecxz
pop
mov
mov
outsl
fsubs
push
int3
imul
xchg
cld
stos
ds
push
incb
aas
or
mov
mov
popf
repz
xchg
push
xor
cmpl
cmpb
data16
cs
mov
sub
fiaddl
jg
xchg
enter
popa
jl
test
adc
and
loop
jmp
arpl
pop
aam
je
ficoms
inc
mov
jno
xchg
inc
sub
jle
adc
fs
or
and
jl
loopne
xchg
stc
out
xor
addr16
and
mov
int
lods
xor
pop
push
into
pop
dec
mull
dec
xor
sub
push
aaa
aad
adc
dec
adc
mov
mov
dec
add
sbb
adc
pop
push
xorl
loopne
pop
jo
and
add
mov
out
push
xor
push
dec
inc
or
push
push
or
shlb
fsubp
pop
mov
pop
and
or
leave
push
jg
ja
sub
mov
pop
out
and
cmp
xor
fsubl
inc
insb
jg
push
xchg
or
sub
ret
dec
call
mov
adc
push
push
mov
dec
sub
dec
push
adc
cmp
test
xor
xor
ljmp
jmp
out
dec
fsubs
nop
mov
dec
popl
inc
push
aam
push
cli
cmp
xorl
push
or
addr16
out
xchg
enter
sub
shrl
out
mov
or
aad
sbbb
sub
xchg
ret
add
pop
cmp
push
mov
faddl
imul
jp
adc
mov
outsl
xchg
sub
repz
testl
subb
mov
or
enter
mov
jle
movsl
ficompl
es
roll
jmp
jmp
cmpsb
adc
bound
cmp
inc
push
les
and
pop
jge
adc
xor
add
in
mov
push
push
enter
movsl
pop
inc
es
ficoml
fsubs
lods
repz
cmpl
cmpsl
sahf
cld
cmpb
xchg
and
cmc
aaa
and
fmulp
out
test
lock
push
pop
xor
in
push
fs
in
mov
dec
add
push
iret
mov
sti
add
lcall
push
flds
xor
imul
xchg
in
xchg
outsb
imul
sub
push
adc
sbb
aam
pop
add
and
lea
push
lock
mov
xor
fwait
dec
mov
cwtl
out
pop
popf
pop
popa
push
aas
jno
cld
enter
mov
push
imulb
push
mov
pusha
scas
lods
repnz
mov
mov
sub
or
fcmovnb
and
mulb
int3
adc
js
iret
das
test
scas
and
leave
fbstp
or
add
outsb
mov
cltd
sbb
mov
scas
das
jo
mov
cli
sbb
xlat
repz
dec
push
scas
mov
push
out
scas
sti
push
xchg
xchg
fadds
fistl
sbb
das
stos
mov
mov
mov
cmpsb
dec
addb
add
outsb
movsl
cli
lcall
orl
mov
daa
lock
pop
jbe
addl
and
in
call
xchg
lahf
movsl
mov
mov
and
jb
stos
outsl
cmp
jmp
test
jg
mov
outsl
jg
les
mov
ret
sahf
hlt
xchg
pop
jae
movsb
sbb
mov
xchg
cmp
sub
push
or
xor
clc
insl
cld
sbb
pop
dec
lret
in
jg
imul
adc
push
std
addr16
mov
pop
mov
ljmp
sub
es
push
addr16
xchg
mov
push
jp
jp
mov
stc
in
mov
mov
push
jae
mov
lods
push
and
clc
mov
mov
pop
add
les
mov
xchg
testb
repz
push
jp
cmc
or
cmp
cmc
arpl
sbb
add
clc
out
xor
cmp
fwait
pop
aam
xor
sub
and
mov
sub
pop
repnz
aad
sbb
xor
mov
test
ret
cmp
and
test
mov
inc
add
jns
jno
in
push
jle
mov
jp
dec
out
dec
lret
divl
dec
int
inc
jnp
mov
push
sub
sub
clc
pop
inc
dec
mov
inc
scas
repz
iret
ja
add
mov
stos
lret
enter
rcr
and
add
cld
cmp
inc
in
subl
adc
ds
mov
int3
ljmp
lea
pop
or
add
gs
icebp
outsb
mov
bound
xor
xchg
jne
cltd
out
stc
xlat
push
fwait
mov
pop
inc
mov
inc
pop
leave
out
and
push
je
je
leave
dec
clc
push
int
pop
mov
outsb
dec
fwait
mov
cltd
int
mov
mov
mov
movsl
test
mov
int
xchg
sahf
ljmp
sbb
jno
cwtl
lahf
xchg
rolb
dec
data16
cwtl
jo
inc
pushf
fimull
lret
dec
pop
and
and
inc
push
imul
neg
popa
loope
jb
fs
test
mov
imul
mov
push
sub
xchg
mov
add
dec
xadd
mov
iret
lods
xor
cltd
xor
pop
rcrb
les
jg
adc
mov
xchg
mov
cmp
add
mov
rorl
lret
bound
cmp
rcll
xchg
lret
xor
xor
inc
adc
jne
pop
mov
sub
leave
fwait
in
test
mov
and
andb
jg
mov
jge
icebp
xor
stos
faddl
lock
and
in
add
cmc
test
addr16
mov
xor
add
js
mov
in
clc
repz
inc
xchg
cmpb
and
mov
pop
lret
mov
js
adc
pop
mov
test
lret
pusha
cmpsl
les
test
ret
mov
push
dec
adc
xor
aam
lea
cwtl
imul
xor
cmp
and
fidivrl
inc
adc
or
jg
jle
adcb
imul
ds
push
imul
clc
sbb
inc
aaa
enter
sbb
xchg
mov
lcall
jns
inc
dec
cmpsb
testl
outsl
lods
push
adc
ds
inc
notl
icebp
pop
jno
dec
dec
movsb
imul
pop
xor
inc
push
add
xchg
and
stc
out
lahf
mov
cltd
ss
insl
lods
das
add
sub
cmp
in
dec
lock
mov
jns
xchg
stos
pop
xor
lret
xchg
pop
jo
mov
lcall
aas
adc
dec
push
mov
inc
add
inc
jle
in
xchg
lock
push
dec
mov
jae
insb
xchg
inc
xlat
fdivl
nop
xor
in
dec
jge
xor
rcr
jle
cmp
scas
push
arpl
adc
sub
or
test
aad
mov
stc
mov
pop
mov
jecxz
inc
mov
mov
push
call
pop
lahf
test
push
loopne
push
sbb
je
aam
negb
out
pushf
mov
xlat
sub
sarb
jae
mov
in
movsb
outsb
insl
inc
enter
movsl
or
mov
addr16
mov
in
jne
lcall
leavew
stos
lret
xchg
out
cltd
add
pop
popa
movsb
sbb
ret
sti
lret
loope
pop
nop
xlat
dec
idivb
mov
fcoml
nop
jae
pop
fs
fistps
mov
addb
sbb
popa
icebp
cld
inc
jecxz
jmp
mov
rol
sbb
mov
call
testb
test
cmpb
or
cli
push
mov
jno
push
lahf
sub
rcr
mull
adc
repnz
shll
mov
cwtl
idivb
ret
push
rclb
lods
test
mov
sbb
setae
mov
outsl
add
pusha
mov
xchg
mov
cmp
pop
rorb
aad
sbb
push
jnp
push
sbb
lods
and
dec
lods
adc
leave
pusha
push
ds
or
cmc
sti
mov
in
mov
ret
xchg
jne
mov
mov
ja
sbb
fimull
dec
jbe,pt
cli
sar
aam
sbb
inc
scas
inc
outsb
in
xor
push
pop
ror
cltd
jmp
jo
cpuid
and
jno
in
jo
das
pop
inc
or
mov
cmp
adc
movsl
ret
sahf
mov
lahf
jmp
pop
stos
xchg
faddp
int
addr16
cli
loopne
sarl
enter
ja
ret
xchg
fdivs
or
sub
sub
push
inc
xor
inc
or
dec
fcomp
mov
jp
inc
or
jbe
scas
push
pop
mov
adc
inc
sub
jns
daa
add
test
adcl
ja
bound
xchg
data16
outsb
mov
repz
pop
scas
mov
xchg
mov
adc
dec
dec
cld
pop
fisttpl
add
les
adc
lcall
ja
sbb
fwait
push
ja
repz
mov
pusha
in
addr16
mov
lods
mov
es
jl
sbb
ret
push
jbe
xchg
mov
jmp
or
mov
adc
into
jo
pusha
adc
push
dec
sbb
push
adc
jl
dec
mov
icebp
sub
shrl
sti
jnp
push
sub
sahf
push
popf
fs
das
dec
mov
jae
sub
xor
dec
mov
jecxz
sub
push
lods
mov
inc
xor
into
ret
push
fucomi
push
mov
mov
or
sbb
sahf
jp
shll
jno
inc
jmp
jo
fsubp
inc
jmp
testl
cmp
sbb
mov
arpl
out
push
enter
and
sub
add
inc
mov
call
mov
js
mov
test
jbe
sti
arpl
sbb
sbb
mov
mov
xor
sub
push
dec
mov
test
test
iret
rol
sub
xor
jle
or
pop
shrl
ss
cmp
fsubrp
gs
dec
clc
cmp
sub
pop
cmc
je
je
dec
movl
and
sub
movb
sbb
lods
jp
jno
gs
sbb
push
jbe
jne
and
in
push
or
and
xchg
orl
xor
xor
jl
mov
test
jns
lds
fstl
popf
cmpsb
pop
cmc
idivl
inc
lret
jae
jne
add
ret
loopne
mov
fiaddl
das
and
data16
jl
repnz
ds
jge
int
pop
cld
sahf
push
jp
xor
xchg
pop
mov
adcl
arpl
inc
sub
sbb
cmpsl
sub
hlt
mov
pop
fldl
add
outsl
insl
rolb
push
cli
xchg
mov
test
imulb
and
shl
rcrl
repz
bound
sub
or
xor
rcrb
lret
cmp
mov
sarl
aad
clc
xor
jl
push
loop
add
jmp
adc
pop
rorb
xor
inc
or
push
dec
xor
cltd
sbbl
stos
cmp
movups
in
ret
fldt
mov
clc
fistl
mov
xor
push
enter
movl
jg
nop
sti
xor
int
je
sub
aaa
clc
push
sbb
fcoml
adc
aad
lret
pop
cmp
pusha
pusha
xchg
lock
sti
out
and
xor
and
jp
mov
insl
adc
cld
outsb
out
lahf
in
cmp
test
mov
test
jnp
pushf
sub
sub
enter
and
sahf
repz
stos
pop
testb
dec
jae
fldenv
mov
shrl
cwtl
or
xchg
sub
cld
int3
mov
mov
divl
xchg
sub
and
mov
xorl
imul
jns
ds
out
jl
pop
cmp
stc
stos
sbb
pushl
out
jb
insl
ret
dec
mov
cmp
xor
shl
loope
sarl
fcmovnb
sbb
stos
imul
hlt
mov
aaa
jg
fiadds
std
mov
mov
stos
rclb
pop
xchg
sub
adc
jecxz
int
xchg
xlat
icebp
or
sub
add
xchg
mov
scas
lock
push
adc
pop
mov
lahf
fcomp
inc
and
push
inc
fwait
sbb
out
and
inc
xor
outsb
enter
mov
lea
xchg
add
std
push
test
add
sar
movsb
ljmp
cmpsl
pop
loope
icebp
mov
inc
add
mov
mov
cmpsb
test
mov
mov
das
shr
sbb
sub
and
loop
and
adc
push
pusha
mov
addr16
shlb
test
sarl
enter
insl
pop
int
push
push
push
fisubs
in
lods
lcall
pop
jns
leave
test
xlat
and
addr16
lock
add
mov
xor
stc
popf
arpl
mov
es
push
lcall
push
aad
repnz
mov
mov
in
pop
xchg
and
jge
xchg
hlt
roll
adc
rcl
icebp
cmp
cmp
insb
jp
shl
rorb
sbb
sbb
jle
popa
fcmovu
pop
test
loope
mov
scas
pop
jns
ror
in
sahf
mov
jecxz
add
das
xor
mov
push
lahf
ja
or
sub
xchg
mov
data16
mov
lock
dec
sbb
xchg
dec
in
dec
test
sbb
arpl
bound
and
in
push
pop
push
mov
aam
pusha
fmull
jb
ss
mov
sbb
adc
dec
in
add
bound
or
jle
cmp
sti
add
cwtl
lds
iret
push
xor
or
sub
inc
pushf
mov
pop
dec
arpl
cmp
dec
and
dec
shr
mov
jmp
in
jmp
or
test
mov
sub
pop
push
cld
inc
fildl
mov
sbb
repnz
jae
sub
lods
sub
out
inc
rcl
js
jl
ficomps
pop
int
mov
ja
push
jns
inc
mov
ss
push
push
ud1
cltd
sarl
mov
mov
pop
cs
push
into
add
ret
jnp
ja
imul
fcoml
std
outsl
cltd
add
rolb
add
popf
mov
add
ret
movsl
pop
mov
mov
scas
pop
mov
add
push
xorb
push
ss
loop
pop
repnz
dec
test
jle
call
lds
in
mov
movsl
push
or
das
out
icebp
fsubs
xlat
aaa
dec
adc
cmpps
loop
or
xlat
ret
jle
dec
aaa
loop
insb
add
fstp
lcall
stos
pusha
in
xchg
int3
enter
mov
ds
stc
mov
cmpsb
daa
lds
jmp
enter
and
xchg
pop
pop
aad
rcrl
sbb
movsl
addr16
mov
adc
sub
or
mov
rcrb
push
ret
jge
push
sbb
add
iret
in
add
add
fs
jb
xlat
mov
mov
sub
fiadds
xchg
or
push
sub
and
lods
xlat
imulb
pop
inc
inc
aad
lcall
fsubp
outsb
dec
enter
lock
lds
fwait
idiv
adc
sbb
xchg
je
pop
push
movsb
icebp
jns
pop
adc
outsl
and
push
rcrb
push
sub
loop
sbb
xchg
js
xor
filds
mov
inc
test
cltd
loope
cltd
dec
jnp
pop
into
jmp
sarb
aam
loopne
stos
add
ja
movsb
lret
and
push
and
xchg
sub
cmpsb
jnp
xchg
popa
imul
adc
mov
imul
in
in
add
imulb
shlb
aas
sub
aad
inc
add
inc
lods
add
fs
sbb
jp
popa
sbb
dec
push
inc
pusha
jae
pop
adc
das
fisubrs
movsl
xchg
jae
outsb
stos
lret
out
hlt
repz
repz
xchg
jne
fildll
pop
ret
in
pop
fsincos
loopne
aas
ret
mov
scas
test
addb
mov
cmp
int
out
pop
add
cmp
jle
out
add
faddl
add
pusha
pop
cmovnp
jg
inc
push
dec
cs
in
das
mov
add
cmc
inc
or
add
xor
push
sbb
push
push
xchg
cmpb
mov
insl
pop
ss
pushf
sub
jecxz
stos
arpl
mov
jnp
push
ficomps
divb
xor
xor
or
sbb
push
dec
mov
movb
xchg
loop
dec
mov
push
mov
cmp
inc
push
hlt
mov
shl
or
dec
mov
les
mov
xorb
ret
aad
sub
int3
bound
add
xor
push
lret
jg
xor
movsl
mov
and
jns
jg
mov
arpl
jo
scas
inc
insb
adc
pop
shrb
fmuls
pop
shrl
rorb
push
pop
mov
mov
frstor
aam
ljmp
lock
mov
sub
int3
xchg
sub
jp
icebp
repz
dec
or
jnp
imul
mov
in
cli
clc
cltd
push
mov
xchg
mov
mov
inc
cmp
mov
sbb
outsl
cmp
movsl
pop
sbb
popf
lods
xchg
lahf
mov
sub
je
push
pop
adc
arpl
ds
test
pop
push
cmp
and
jmp
and
jg
cmpsb
fwait
cmpb
negb
mov
adc
orps
mov
mov
mov
mov
and
adcb
jg
and
or
imul
lahf
test
inc
inc
mov
sub
dec
pop
fnstsw
stos
movsb
mov
mov
sbb
sub
shlb
shl
or
push
aas
sub
xor
bound
loopne
add
sub
stos
sahf
sbbb
insl
insl
shlb
push
adc
mov
addb
insl
cltd
out
sub
mov
push
clc
cmp
ja
out
lock
rcl
in
mov
sbb
mov
test
paddusb
jno
adc
xchg
lret
leave
mov
jne
push
adc
jle
mov
hlt
inc
imul
xor
sub
fwait
add
xor
push
pxor
and
sti
cltd
xchg
out
or
orl
push
fadd
aaa
jp
sub
jl
push
into
push
in
cmp
shrb
xor
test
mov
incb
aam
push
jg
push
and
data16
xchg
pop
lret
test
pop
frstor
inc
outsb
sub
push
in
xor
pushl
inc
push
mov
movsl
cmpsl
or
shll
mov
hlt
xchg
lcall
inc
adc
fadds
shlb
sti
push
jg
test
xchg
mov
out
mov
movsb
push
push
repz
iret
pop
cltd
ss
dec
xchg
les
mov
dec
sub
push
xorl
mov
sub
adc
sbb
jp
mov
popf
loope
pop
push
leave
std
pop
mov
pop
out
inc
sub
cmc
sahf
push
xchg
xchg
push
inc
les
xorb
xlat
mov
inc
xchg
mov
stos
mov
lret
xlat
adcb
add
mov
mov
push
es
pusha
dec
int
mov
nop
cmp
xchg
lods
lds
popa
out
xor
in
mov
mov
or
push
mov
xor
adc
test
je
cmp
add
dec
sub
push
fbld
or
gs
cltd
inc
les
outsl
sub
push
ljmp
stc
sbb
cwtl
in
mov
or
jbe
addr16
adc
inc
jne
inc
cmp
cmp
out
xchg
imul
ret
pop
lods
mov
dec
adc
or
scas
leave
dec
and
xchg
fnstenv
sbb
pop
mov
or
xchg
gs
call
adc
popa
stc
lcall
es
mov
stc
push
push
test
inc
test
or
and
in
xchg
push
rcrb
hlt
fcmovnb
sar
add
mov
in
sub
mov
rcrb
mov
lcall
mov
or
test
push
xor
cmp
cwtl
inc
sbb
push
mov
adc
outsl
mov
push
shll
sbb
xchg
test
mov
nop
xor
adc
iret
mov
push
xchg
je
cli
inc
arpl
loopne
out
dec
into
xor
in
aas
jno
adc
fisubs
lret
test
push
pushf
bsf
adc
or
sbb
pop
sbb
rorb
inc
mov
shr
sbb
jge
je
jl
lea
push
adc
repz
xchg
mov
ffreep
push
and
adc
loop
test
mov
and
mov
sub
mov
inc
jle
call
pop
mov
add
daa
stos
cmpb
add
loope
push
sbb
and
xlat
data16
mov
sub
enter
mov
cmp
sub
dec
and
rolb
stos
pop
test
sub
xchg
jno
cmpsl
xor
pop
es
out
mov
in
mov
fnsetpm(287
iret
sbb
dec
int
xor
loop
aam
sbb
jne
arpl
jmp
push
dec
cmpb
inc
lods
mov
lods
cmp
addr16
jge
arpl
roll
popa
mov
andl
out
jecxz
add
cwtl
movsb
xchg
xchg
mov
sbb
shlb
jno
imull
or
xchg
loope
jnp
and
and
hlt
in
mov
repnz
iret
and
js
outsl
add
jp
jb
mov
dec
cli
dec
xchg
jmp
aam
sub
dec
les
cmp
sahf
and
inc
jb
jg
cli
mov
aaa
in
daa
mov
filds
in
sub
mov
adc
xor
jg
and
jb
and
out
fwait
mov
test
add
pop
pop
sub
sbb
and
pop
xor
pop
adcl
xchg
imul
das
xchg
sti
repz
sub
add
ror
rorb
jmp
testl
push
cmp
push
push
jecxz
dec
fadds
pop
push
cmpsb
pop
jl
test
mov
psraw
fimull
add
cmpsb
push
ljmp
rcr
adc
cs
xlat
mov
mov
pop
mov
pop
mov
or
and
adcl
dec
arpl
add
les
inc
imul
add
add
pop
insl
fwait
and
fisttpl
sahf
sarb
divb
pusha
and
xor
jl
add
int
shll
mov
mov
ficomps
xchg
push
cmp
or
dec
sbb
mov
neg
movsl
outsl
xchg
dec
outsb
je
push
adc
movsb
jl
push
roll
lods
sete
fadds
ds
hlt
pop
inc
cmpl
out
insb
xor
sub
addl
mov
add
out
mov
lea
into
and
dec
mov
stos
jl
roll
pop
push
or
mov
mov
jle
pop
arpl
hlt
jge
cmpl
fwait
in
inc
jp
mov
mov
push
jle
fidivl
mov
fbstp
cmpsb
dec
nop
mov
cmp
fcomip
mov
aaa
xor
xchg
sti
ds
ret
out
cltd
jp
sarl
dec
lret
add
sub
imul
jb
aaa
mov
dec
addr16
xor
mov
rol
loopne
adc
fidivrl
inc
outsb
dec
xchg
les
icebp
mov
add
pop
decl
adc
lahf
inc
xchg
fsubs
dec
movsl
dec
cmp
adc
jae
clc
lahf
fistpll
jp
stos
loopne
xlat
mov
jecxz
xchg
enter
cli
push
pop
les
sub
mov
imul
data16
jle
xchg
cmpsl
cld
inc
shl
shlb
shlb
cwtl
and
inc
mov
mov
mov
sbb
or
dec
bound
movsl
call
add
stos
inc
lods
lea
jmp
push
or
mov
cwtl
lods
xchg
push
sbb
mov
xorb
pop
out
and
push
jg
jle
push
cmpsb
lcall
scas
mov
push
push
repz
pop
pop
adc
addl
xchg
outsb
test
ss
or
jo
insl
mov
bsf
mov
push
stc
sbb
push
push
cmpsl
or
jo
je
adc
xchg
dec
jmp
jbe
in
clc
sahf
xchg
pop
mov
pop
mov
jnp
mov
lods
sbb
int3
cmp
pop
insb
add
lahf
aad
push
mov
stos
lcall
scas
pop
int
add
xchg
push
nop
jp
push
shl
pop
fcoms
cmp
and
adc
mov
arpl
push
pop
xchg
or
test
jae
mov
call
mov
icebp
aam
movsb
ss
jecxz
rcrl
imull
andl
pop
xor
pop
popa
jge
in
nop
xor
sbb
xor
add
movsb
stos
pusha
add
in
fwait
imul
pop
fisubrl
mov
sarl
std
jecxz
sarl
mov
pop
inc
push
out
mov
lods
or
out
xchg
adcb
pop
stc
aad
std
xlat
dec
mov
inc
and
fiadds
stos
xchg
mov
scas
push
stos
test
stc
pop
std
fidivrs
out
data16
js
or
movsl
repnz
aam
nop
xchg
mov
add
mov
jge
sub
test
es
cmp
addr16
movsl
mov
dec
mov
repnz
ficompl
add
jno
ficoms
jmp
int3
dec
jne
cmp
jge
push
dec
add
lock
xor
sahf
pop
ret
inc
jl
xchg
sub
enter
mov
movsb
pop
lahf
loopne
arpl
push
xor
sar
or
clc
das
mov
sbb
mov
in
jnp
outsl
in
xchg
imul
xlat
pop
repnz
scas
xchg
dec
iret
push
cmp
test
xor
mov
cmp
inc
inc
es
sbb
fiaddl
xchg
call
in
sbb
scas
mov
icebp
add
push
mov
outsb
iret
out
shlb
daa
mov
push
ljmp
sbb
lods
pop
pop
ficoml
and
dec
lock
push
push
dec
adc
cmovns
xchg
adc
out
rolb
mov
std
jmp
and
negl
and
cmp
push
dec
cmc
mov
push
int
test
xchg
xchg
nop
jp
jne
cmpsb
sbb
adcb
or
mov
cmpsl
jl
rcr
xor
in
jo
add
cmp
ds
or
out
dec
sarl
addb
gs
adc
mov
mov
mov
jg
mov
neg
inc
xor
int3
or
mov
fmul
push
mov
outsb
push
addl
jge
sub
jge
daa
ret
push
out
ljmp
jbe
jp
sbb
gs
mov
sbb
popf
and
push
mov
xlat
stos
out
out
orl
mov
xor
loop
add
pop
jge
push
cmp
test
in
pop
pop
push
mov
es
ficompl
aad
xchg
ljmp
mov
sbb
mov
xchg
push
mov
outsl
adc
mov
negl
hlt
lret
push
addb
cli
inc
mov
xorl
cltd
fidivrs
sub
movsb
push
in
mov
les
jl
inc
xchg
mov
sub
jae
nop
sub
test
jl
insb
icebp
and
adc
push
xor
jmp
daa
stos
stc
xchg
and
xor
mov
or
and
xor
xchg
xor
mov
mov
es
outsb
adc
dec
test
mov
out
jns
lret
rorb
cmp
mov
dec
orl
dec
pop
and
jecxz
mov
jg
ss
int3
or
scas
xor
xchg
dec
mov
sbb
jbe
push
adcb
cmpsl
cmp
jl
gs
fcompl
clc
stos
arpl
scas
add
lret
jne
jae
pop
pusha
in
add
push
ret
cwtl
in
pop
aas
xchg
sbb
mov
rcrl
movl
mov
sub
repz
or
mov
arpl
or
mov
sbb
cmp
pushf
dec
aaa
cmp
dec
rorl
push
leave
add
inc
mov
fsubp
rcl
cwtl
lahf
mov
mov
int
push
xor
gs
fbld
xor
sub
test
mov
lcall
lcall
inc
push
fisubrs
out
fs
pop
xchg
fcomps
push
shl
mov
imul
add
cmp
dec
cld
test
enter
pop
mov
ss
out
sub
adc
mov
icebp
dec
mov
jns
into
mov
lods
mov
push
fistps
push
shr
pushf
sub
imul
gs
jecxz
mov
inc
aad
js
cltd
mov
idivl
loopne
rolb
enter
shlb
idivb
mov
int
and
push
lahf
jne
push
inc
insl
inc
jo
push
lods
push
pop
rol
in
xor
stos
cmp
mov
or
movsl
ds
add
dec
sub
inc
push
and
dec
sbb
test
pop
arpl
adc
mov
cmp
shrl
mov
orl
rorl
sub
push
ret
ret
jmp
mov
lcall
ljmp
push
or
fwait
xchg
je
cmpsl
movsl
mov
mov
imul
insl
popa
adc
or
pop
xchg
popa
int
into
xor
mov
xchg
and
cmpsl
shrl
inc
push
scas
mov
scas
or
or
xlat
push
fdivr
cmp
sub
rcrb
movsb
out
out
test
sahf
pop
lret
test
jae
mov
in
cs
lret
test
nop
ja
nop
pop
and
sti
mov
add
enter
fmulp
xor
sub
dec
cs
adc
sbb
pop
aad
jno
inc
mov
rcll
jne
roll
stos
fldcw
sbb
pop
mov
bound
sub
push
inc
shld
iret
hlt
out
into
mov
cmp
sahf
data16
jno
call
popf
lcall
inc
call
addb
mov
cmpsb
sbb
lret
inc
mov
cmp
mov
add
repz
adc
int3
pop
je
xchg
mov
scas
stos
or
add
aas
push
lea
leave
loope
stos
or
mov
sub
cltd
mov
lret
out
iret
bound
leave
adc
sbb
cmp
inc
movsl
add
push
xchg
sub
xchg
sub
dec
lods
push
add
mov
stos
xchg
sub
nop
nop
sub
xchg
or
add
inc
xchg
lret
testb
push
mov
shll
insl
mov
push
sbb
dec
mov
scas
sarb
scas
mov
pop
cs
imul
push
xchg
in
mov
rol
mov
cli
and
les
pop
stos
push
push
clc
mov
ss
xor
jbe
mov
lcall
add
and
dec
gs
lock
dec
jnp
or
xor
mov
mov
or
into
sub
add
inc
lcall
pop
pop
pop
cmpsl
dec
sahf
jmp
or
adc
and
mov
inc
in
add
fidivs
js
push
cmc
jecxz
shll
mov
in
dec
sbb
imul
imul
or
or
mov
int
pusha
mov
outsl
sbb
ss
inc
addr16
popa
sahf
xchg
negb
lret
arpl
add
das
xchg
aas
lods
scas
mov
dec
ret
xor
xor
shl
inc
or
pushf
xchg
loopne
or
inc
lret
ret
cmc
mov
pop
fwait
add
shll
arpl
xor
cmp
xchg
pop
adc
xchg
xor
and
icebp
out
out
ficoms
lods
out
jnp
mov
mov
outsb
push
outsl
inc
lods
outsb
dec
cmpsl
inc
int3
xor
jmp
or
mov
pop
push
ja
inc
cs
xchg
roll
jge
in
dec
adc
call
or
jl
test
das
inc
pop
fcoms
fnstsw
cmp
jo
add
aad
sub
ds
popa
in
xchg
bound
repnz
inc
scas
mov
mov
cmp
lahf
xor
xchg
insl
lcall
pushf
jle
out
cmp
cld
es
sbbb
mov
sarb
shrb
ror
pop
test
dec
dec
jnp
sti
pop
mov
dec
mov
std
call
mov
cmp
cmp
inc
les
cwtl
insl
scas
incl
cmpsl
arpl
out
jno
or
pop
sti
fildll
popf
inc
mov
scas
xor
fldl
adc
mov
lret
jg
xchg
jg
dec
lods
push
and
mov
inc
shlb
add
rclb
lods
insb
pop
push
xor
dec
mov
dec
xchg
push
mov
mov
sub
add
in
cmp
dec
enter
leave
rorb
cmpsl
movsl
cmp
push
or
push
insl
sbb
sub
or
push
or
jle
pushf
insl
cmp
add
inc
mov
aaa
jo
push
add
rorb
and
xchg
jg
pop
repnz
pop
cwtl
test
ljmp
aad
mov
aam
data16
xchg
cmpsl
cmp
lret
cmc
cmp
mov
sbb
fsub
and
stc
clc
push
push
fistpll
scas
pop
fisttpl
cmpsb
cmp
fdiv
shll
ret
pusha
mov
divb
mov
and
icebp
test
leave
in
outsl
cld
and
dec
push
adc
outsl
cmpsl
push
addr16
push
enter
enter
mull
and
test
icebp
lock
xorl
dec
jle
xor
popa
cmp
pop
mov
sbb
ffree
adc
pushf
add
lds
or
push
jmp
add
lods
ret
jp
pop
test
jbe
dec
jl
fidivrs
mov
imul
xlat
ja
cmc
mov
insl
jle
or
lods
icebp
push
mov
aaa
jo
cld
xchg
mov
xchg
and
adc
fcomps
adc
imul
cmp
shl
insb
pusha
ja
lret
adcl
sti
and
or
les
rcrb
sub
push
das
adc
sub
cld
push
jnp
push
push
adc
cmpsb
fsubs
pop
or
in
mov
push
stos
shrl
xorb
icebp
ficompl
shl
adc
std
outsl
add
xor
xchg
ss
add
icebp
enter
or
stos
dec
std
popa
pop
mov
sbb
xor
cld
shlb
dec
jae
inc
sbb
adc
lods
push
cmp
inc
cmp
inc
cli
dec
jnp
enter
lahf
dec
gs
mov
add
sub
pop
call
inc
test
aas
xchg
sarb
loop
jecxz
lea
jno
icebp
dec
and
ret
adc
sbb
fistpl
push
push
insl
ret
cwtl
adc
pop
xchg
fs
unpckhps
jp
dec
ret
xor
xchg
push
bound
sub
add
sbb
subl
inc
or
shrb
pop
test
in
jbe
cmp
insb
push
xchg
or
sbb
iret
hlt
add
test
xchg
mov
addr16
aad
xchg
test
xchg
dec
or
punpckhdq
pop
jecxz
sahf
mov
adc
mov
mov
adc
push
inc
pop
cmc
inc
jge
cmc
loop
adc
jne
mov
in
inc
aad
fildll
js
dec
adc
inc
mov
mov
inc
lea
in
push
cli
fnstsw
imul
in
jg
or
adc
push
fsubs
test
adc
sbbl
fstps
add
je
mov
and
xor
into
sbb
int
fs
pop
pop
and
mov
stos
mov
mov
inc
leave
repnz
js
cs
sub
jb
out
jg
test
fdivrl
and
in
push
enter
sbb
and
mov
mov
popa
ficoml
jmp
fsubrl
lcall
xchg
adcb
sbb
fisubrs
ljmp
lds
add
pop
stc
subb
shr
movsb
outsb
orb
mov
push
add
loope
dec
xchg
pop
mov
xchg
dec
inc
fs
inc
lods
and
add
mov
xchg
scas
and
inc
mov
not
pop
pop
shl
xchg
push
dec
rcrl
in
rcrb
stc
mov
sbb
mov
push
int3
xor
jno
lods
fst
test
pop
sbb
cwtl
in
push
imul
sbb
add
xor
iret
cmp
rolb
loope
mov
dec
jl
icebp
and
mov
xor
cmp
jl
xor
xchg
dec
mov
aas
roll
push
push
mov
cmc
mov
inc
gs
clc
mov
sahf
lret
sahf
lret
sbb
and
sbb
xor
fstps
pop
and
cltd
pop
mov
stos
hlt
mov
gs
icebp
lods
mov
mov
fadds
int
mov
xor
pushf
cltd
pusha
push
jge
sub
add
adc
mov
clc
xor
subb
cmpl
sbb
iret
jg
xchg
or
fs
out
jge
xor
imul
pushf
mov
insl
sar
lods
sub
xchg
lcall
fisttps
ret
loop
or
ret
les
ljmp
out
fwait
push
xor
out
popa
push
pop
adc
call
fdivs
or
lret
push
jl
add
cmp
dec
clc
xchg
push
push
addb
mov
and
test
xor
orl
pop
adc
xchg
leave
cmpsl
or
daa
xor
das
imul
fisttps
add
mov
and
xchg
mov
loope
sti
and
sbb
bnd
mov
mov
fcom
gs
repz
dec
aad
sti
adc
xchg
in
push
xor
jecxz
or
mov
js
stc
jae
aad
fisubrl
cmc
add
rolb
dec
cld
test
test
mov
jno
or
lods
xchg
pusha
out
nop
shll
mov
es
mov
jmp
mov
add
sbb
cld
in
mov
test
xchg
mov
push
dec
stos
jb
xor
sub
or
iret
xchg
call
shr
xchg
sub
add
iret
fnsetpm(287
xchg
movsb
jl
movsl
and
cltd
call
mov
ja
pop
bound
mov
add
daa
inc
push
idiv
jno
push
je
or
xchg
int3
imul
push
movsb
xor
das
mov
inc
stc
xchg
adc
aaa
lods
add
test
into
mov
ds
rcr
dec
push
iret
arpl
xchg
xchg
add
out
pop
jo
mov
sbb
push
pop
mov
daa
adc
jae
fstp
adc
rol
testl
mov
mov
enter
add
insb
shrl
lret
inc
div
jb
mov
sbb
mov
cmpsb
xor
or
repnz
test
push
pusha
scas
aaa
pop
lcall
mov
xchg
xchg
in
adc
mov
dec
mov
mov
xor
adc
xor
les
sub
sub
lds
pop
dec
cmp
dec
stc
xor
push
test
xor
int
mov
mov
xchg
fmull
or
and
jle
imul
ljmpw
push
loopne
dec
pop
mov
dec
sub
mov
adc
adc
popf
mov
xchg
fbstp
mov
negb
imul
mov
ficoml
xchg
jae
ljmp
mov
jge
stc
and
lods
xor
xor
inc
cmp
out
stos
pusha
and
push
xchg
dec
push
out
jg
jb
xor
xchg
mov
movsb
or
ret
shr
lret
mov
in
xor
cmpsl
jbe
aaa
dec
mov
cwtl
stos
cmc
xor
clc
and
arpl
sbb
test
es
aam
imul
or
mov
jo
cmpsl
or
cld
mov
xor
sbbl
gs
dec
lea
out
xchg
sbb
jns
sbb
ret
mov
cld
pop
jecxz
lret
sub
jecxz
push
jne
addl
in
jae
push
fdivs
xor
sub
fsubrl
imul
jne
adc
push
push
decl
sbb
or
jbe
int3
fsubl
push
sub
ljmp
lcall
or
mov
shlb
test
outsb
push
and
rcr
mov
testb
ret
xor
out
pop
and
lock
dec
add
jge
and
pop
mov
rol
mov
add
cmp
bound
outsl
xchg
lods
lock
xor
xorl
int
addr16
or
adc
pop
dec
sub
or
push
inc
adc
cmp
cwtl
cli
jle
add
xor
dec
popa
or
inc
sub
sbb
push
repnz
mov
repz
pop
sbb
mov
xchg
cmp
pop
dec
jbe
test
mov
cwtl
cld
mov
inc
xchg
cmp
lret
inc
push
and
sbb
sub
lea
xlat
fs
xlat
mov
add
xchg
push
mov
and
jl
push
loopne
mov
iret
dec
jbe
adc
aam
mov
and
pop
adc
or
ja
call
js
popa
add
and
sbb
xchg
nop
push
pop
and
dec
inc
fsubrl
mov
or
in
mov
xchg
aam
pop
adcl
lea
clc
jbe
aad
mov
xor
inc
scas
xor
in
insb
incl
or
lock
or
mov
lods
mov
sub
int3
or
mov
clc
dec
jl
inc
test
sub
sbb
inc
lock
mov
and
sahf
dec
xor
lods
and
daa
dec
movsl
pop
nop
movsl
cmovae
sbb
adc
xchg
out
lock
jmp
je
in
sti
fmull
imul
mov
icebp
push
subb
stos
sti
icebp
fcomi
mov
and
sub
sbb
in
sbb
add
fmuls
inc
xchg
pop
push
mov
das
or
adcl
fiadds
sub
scas
sti
ljmp
cwtl
cmp
add
in
xor
and
mov
stos
push
cmpsb
push
mov
popf
scas
lcall
test
jo
jne
andl
aad
sti
push
mov
sbb
lds
test
push
jnp
pop
pop
jae
negl
inc
aaa
daa
repz
mov
gs
xlat
sbb
pop
iret
mov
aas
pop
scas
xor
fcomps
shll
mov
push
test
jmp
pop
repz
and
cmp
or
and
dec
pop
ds
or
movsb
into
fnstenv
call
or
movsl
jg
mov
daa
sub
nop
lods
mov
into
sbb
mov
inc
aas
out
sbb
and
jo
inc
push
jne
fldcw
add
dec
lcall
add
adc
push
ds
imul
addr16
cmc
pushf
and
and
mov
notb
jmp
sub
cmp
lret
jne
sarb
dec
mov
pusha
scas
pop
mov
and
lea
xor
std
sbb
cmpsl
das
cs
and
jmp
int3
xor
mov
jbe
jecxz
cld
movsb
push
loopne
xchg
mov
repnz
sbb
ja
daa
loope
inc
fistl
and
stos
pop
mov
aaa
mov
enter
push
cwtl
scas
dec
xchg
and
iret
and
or
mov
inc
jne
iret
mov
dec
pop
in
into
das
adc
push
add
sbb
xchg
rorl
mov
stc
jecxz
imul
hlt
add
push
insl
int
push
mov
repnz
stos
cmp
sbb
stos
rorl
push
int
push
pop
mov
notl
mov
outsb
or
aam
out
scas
inc
ret
scas
dec
mov
sbb
jg
fdivrs
mov
nop
xor
xchg
ret
iret
outsb
xchg
icebp
loopne
and
or
jae
mov
hlt
rclb
test
add
ds
xor
lods
jle
testb
ds
and
jl
ret
lahf
add
add
stc
push
inc
aad
inc
xchg
fwait
xchg
jo
int3
rcr
in
movsl
mov
les
or
mov
pmulhw
push
or
jno
dec
mov
inc
pop
shrb
or
lods
xchg
pop
push
addr16
push
cmpsl
sbb
xchg
inc
lahf
int
scas
jnp
js
dec
je
inc
dec
mov
mov
sub
xor
scas
xchg
and
inc
into
lahf
in
sub
dec
out
mov
sub
sbb
inc
cli
dec
mov
dec
jo
data16
imul
lret
stc
push
aaa
hlt
les
int
push
jmp
out
daa
aaa
mov
xlat
fcmovu
fisttpll
pop
sub
xchg
jmp
lods
sbb
ds
jns
roll
rcll
mov
xor
add
add
sub
into
fidivl
mov
lret
ret
leave
mov
mulps
cmpsl
dec
mov
repnz
mov
mov
cwtl
pop
stos
arpl
insl
sub
and
jns
wbinvd
adc
in
pop
cmpsb
pop
push
das
repz
sbb
clc
push
shll
fcmovnu
repz
sbb
sbb
xor
dec
enter
cmp
push
aad
aad
es
xchg
xchg
sub
dec
sbb
mov
push
push
mov
and
test
mov
test
icebp
xchg
inc
xor
xchg
jb
hlt
enter
lcall
inc
lcall
inc
push
cs
and
sar
loope
sbb
xchg
lret
mulb
xchg
jl
sbb
mov
js
and
cmpb
shll
ja
in
mov
stos
mov
xchg
out
push
lea
jge
rcrb
rol
fldcw
leave
jle
hlt
xchg
and
cld
out
repz
jmp
fiadds
sub
push
ror
and
push
mov
push
in
push
lret
push
lret
lods
xor
popf
sub
fs
sub
out
sub
outsl
adc
leave
hlt
ss
insb
cmc
aas
mov
shl
sub
and
push
push
push
add
mov
xchg
repnz
push
mov
cld
xor
imul
adc
add
test
mov
lcall
sub
and
mov
fsubr
out
sub
jg
push
in
push
jmp
push
sub
fimull
xor
enter
ret
adc
add
loopne
outsl
cmpsl
jbe
or
sbb
inc
push
lcall
inc
pop
test
lret
inc
jb
repz
add
and
ja
or
arpl
into
int3
pop
or
hlt
xchg
mov
aad
ljmp
or
xor
imul
pop
cmp
mov
jmp
jmp
mov
scas
ljmp
push
dec
leave
mov
push
fistpl
push
inc
clc
or
fstl
cmpsb
and
movsb
in
jno
into
mov
jno
mov
cmp
jmp
adc
dec
mov
addr16
stc
jp
mov
inc
add
fisubl
mov
jg
pop
or
sbb
cmp
fldenv
pop
adc
adc
mov
jl
mov
sbb
dec
out
mov
sub
jge
popf
std
mov
mov
mov
fistpll
pop
movsb
pop
ss
cmp
mov
mov
mov
dec
sti
popf
pop
pop
cmp
sbb
imul
popa
sbb
mov
fstps
push
sbb
xchg
mov
sub
and
in
sub
dec
sub
jnp,pt
push
std
test
cmp
pop
xor
xchg
mov
inc
les
shll
movsb
add
pusha
int
xor
repnz
arpl
shr
dec
loopne
push
cs
fldcw
mov
cmp
je
out
adc
add
call
cmp
mov
jmp
rcll
stc
repnz
pop
pop
jmp
inc
mov
test
imul
out
test
rcrb
ffree
cmpsb
int3
cwtl
pop
jp
fisttpll
lahf
int3
sbb
ja
jo
xor
xor
lods
in
mov
mov
sub
bound
pop
aas
adc
lds
sahf
jecxz
add
adc
pushf
iret
repnz
flds
jge
testb
iret
mov
inc
push
cmpsb
fldl2e
lahf
rcrb
imul
xchg
cmc
jmp
mov
or
dec
adc
cmc
orl
jg
cld
orl
pop
cld
fwait
mov
jmp
xchg
fsubr
inc
xchg
pop
popa
rolb
adc
adc
add
sti
push
mov
aas
dec
jecxz
pop
cmpsl
mov
stos
divl
sub
xchg
xchg
mov
add
cmp
call
loopne
jns
aaa
loopne
mov
inc
scas
dec
or
in
cmpl
add
movsl
or
int3
in
loope
jo
das
sbb
xor
jne
iret
mov
jne
test
mov
jmp
mov
mov
scas
sbb
push
mov
pushf
sub
sub
mov
xchg
sub
xor
lods
scas
mov
jge
sbb
and
push
jns
out
xchg
cmp
mov
idivb
pop
ljmp
and
pop
into
and
ficoml
adc
jecxz
lock
scas
in
cmp
xor
jae
repnz
xchg
or
inc
push
int
in
aad
das
xor
fwait
sub
pop
mov
xchg
lcall
dec
icebp
iret
push
ficomps
loopne
mov
cs
jle
or
subl
sbb
movsb
xchg
lock
inc
xchg
pop
mov
imul
mov
cmp
sbb
sbb
or
jge
scas
leave
and
mov
or
cmp
jae
dec
imul
xor
add
mov
cs
les
ljmp
loopne
mov
pop
push
call
inc
popf
pop
aam
rclb
shl
xchg
or
xlat
and
mov
mov
repz
mov
out
in
out
and
pop
fcompl
jle
adc
into
and
mov
lahf
ljmp
loopne
call
js
sub
mov
and
or
xchg
mov
xor
dec
and
pop
jnp
repnz
cmp
sub
cli
and
sbb
add
or
jg
cmp
or
inc
xchg
daa
dec
mov
jl
aam
test
cmpl
sub
insb
add
outsb
and
dec
push
and
imul
data16
and
data16
pop
sub
push
adc
repz
pop
xchg
addr16
sub
into
mov
inc
cmpsb
div
pop
mov
mov
push
rcll
push
clc
es
sub
pop
xor
jge
jne
xor
mov
aad
sub
repnz
lret
jle
addr16
repnz
test
mov
sub
dec
ror
nop
pop
mov
inc
into
fsubs
cmp
repz
add
sbb
xor
addl
dec
lret
mov
jne
sub
lods
loop
inc
es
sbb
je
jns
adcb
jb
mov
jg
addr16
xor
jp
cmovns
sub
sub
jo
or
and
movsb
pop
jge
insb
inc
out
rcll
mov
mov
or
mov
loop
ja
inc
dec
and
pop
pop
sub
pop
test
jecxz
cmp
jbe
sysret
cwtl
mov
jb
xor
cmp
outsl
adc
fcmove
nop
addr16
dec
cld
clc
inc
xor
add
mov
add
out
or
xor
dec
sub
add
mov
int3
xor
and
xor
addl
int
sbb
and
js
leave
int
xor
pop
lcall
sub
mov
cmpsl
out
inc
sub
into
popf
shlb
cmc
xchg
fwait
nop
and
loopne
adc
and
jmp
imul
sub
push
cmc
aad
ja
les
in
loop
mov
out
hlt
fildll
inc
jns
inc
push
fstl
cmp
dec
pop
orl
jns,pn
inc
sub
sub
iret
pusha
pop
inc
mov
js
fldl
xchg
cs
jle
jmp
inc
iret
rcrb
dec
movsb
test
pushf
push
shll
xchg
das
call
sti
stos
sub
testl
stc
inc
mov
adc
xchg
sbbl
or
call
sub
lcall
xor
or
pushf
popa
push
out
fisubs
xchg
xor
sub
jns
fcomps
addr16
mov
mov
jmp
imul
testl
sbb
sub
lea
xchg
stos
stos
and
mov
push
fadd
lret
xchg
idivb
xor
push
mov
mov
xlat
adc
adc
std
mov
pop
jbe
scas
dec
in
adc
std
das
jnp
adc
dec
xor
int
sub
lahf
repnz
mov
in
les
sbb
adc
sbb
fisttps
push
call
pop
loope
int3
gs
ja
push
mov
fidivrs
test
and
or
xor
sar
jo
jl
inc
pop
push
or
mov
out
dec
int3
ret
jle
mov
cmp
mov
sbb
ds
cmpsl
into
mov
jbe
nop
add
pop
jle
sti
mov
cld
frstor
mov
sarb
xor
or
stos
mov
xor
pop
cmp
pop
push
jge
add
mov
cmpsb
xor
outsb
xorl
in
xchg
sbb
cwtl
stc
adc
jo
jmp
pop
mov
aam
sbb
sbb
push
xor
mov
lret
shl
cmp
fdivrs
add
add
sbbl
mov
mov
shlb
lea
mul
stos
ja
pop
dec
and
dec
sarb
mov
mov
mov
mov
and
inc
xor
and
je
cli
ds
popa
pop
js
ss
add
orl
inc
insb
pop
push
call
adc
popf
jbe
das
data16
mov
add
in
shll
or
mov
inc
mov
cmp
or
aas
jo
xchg
mov
add
into
sub
pop
adcb
add
mov
fucomip
xchg
icebp
inc
adc
cmp
dec
icebp
outsl
mov
aaa
es
dec
jp
inc
dec
and
fsubp
cld
xorl
mov
mov
bound
test
insl
jge
mov
test
dec
xor
insw
test
jg
add
stos
xor
dec
jp
xchg
mov
popf
rol
inc
loopne
push
dec
pop
xchg
dec
mov
dec
mov
int
or
push
data16
ret
ds
cltd
imul
mov
or
jle
pop
insb
adc
lods
inc
out
xor
dec
repz
jb
fsubrl
stc
stc
wbinvd
sti
sar
jb
fisubrs
addr16
repnz
sarb
stos
cld
adc
fs
jp
mov
imul
fcompl
push
leave
jp
and
mov
cmp
call
loopne
xchg
adc
mov
jp
adc
mov
cmp
outsb
or
sub
mov
sub
fisubrs
ret
jecxz
or
rcll
aam
sub
sub
fnsave
jae
mov
sub
lock
iret
lret
mov
or
cld
cli
xchg
enter
and
ret
push
jnp
insb
dec
xchg
loopne
jbe
xchg
enter
pop
cmpsb
jp
xchg
fs
sbb
mov
dec
movsl
mov
lods
pop
sub
cmp
xchg
loope
sahf
push
mov
add
ret
push
shll
xlat
test
repz
enter
mov
fwait
mov
cli
jb
xchg
sti
adc
mov
xor
ret
testb
jns
sub
daa
shlb
mov
sarb
insb
loopne,pn
mov
sbb
cmp
dec
mov
movsb
ds
popa
and
sbb
stc
push
xchg
and
cmp
je
mov
jnp
jmp
nop
hlt
jno
xchg
adc
mov
sub
cmovg
lods
lds
inc
in
popa
sbb
arpl
mov
cwtl
push
rorb
xchg
lret
cmc
fdivrs
xchg
icebp
or
pusha
test
call
mov
mov
or
cmc
std
sub
cmp
cmp
andb
scas
lods
xor
shll
cvtdq2ps
lods
mov
mov
xchg
bound
push
lds
push
aaa
insb
out
scas
pop
mov
push
push
loope
sub
dec
mov
test
xchg
add
shl
ret
jg
xchg
outsl
repnz
stos
sub
movsb
adc
aad
push
push
hlt
out
xchg
jl
sbb
jb
aaa
cmp
aas
mov
lcall
loope
cli
cmpsb
das
inc
add
iret
mov
bound
jnp
scas
lea
or
xchg
shrb
lock
pop
insl
push
mov
leave
dec
cld
inc
mov
dec
mov
dec
mov
adc
adc
rorb
push
mov
movsl
lret
sub
xor
xchg
out
sbb
test
arpl
icebp
cmp
fisttpll
mov
fwait
popa
dec
sub
jl
and
cmc
dec
lret
or
pop
jle
dec
jmp
popa
and
test
into
sbb
mov
sarl
push
pop
out
mov
mov
adc
mov
shl
dec
jae
and
scas
mov
and
in
cmp
or
rolb
aas
add
jmp
ds
and
fsubrs
cld
iret
hlt
push
cld
scas
icebp
clc
jge
call
sti
decb
enter
in
cs
dec
pop
out
cmp
mov
repz
and
xor
jns
enterw
ljmp
ljmp
cmpb
imul
insb
jg
jne
pop
imul
push
in
movups
nop
aaa
and
iret
test
cmp
push
test
mov
xor
and
mov
js
aad
movsb
adc
sbb
mov
mov
pushf
mov
frstor
sub
data16
dec
dec
test
dec
sub
or
push
test
in
in
mov
mov
fisubl
aad
andl
leave
cmp
push
rcrl
shr
dec
hlt
fs
jle
push
pusha
push
add
loope
test
mov
inc
decl
mov
and
mov
cmp
push
subl
sbb
sarl
pop
out
pop
call
ljmp
mov
cmpsl
add
dec
mov
ja
cmpsl
cmc
push
mov
lods
outsl
out
mov
cmp
and
insb
iret
enter
xor
or
les
repz
xor
push
ret
add
adcl
push
push
and
loopne
mov
in
cld
adc
mov
cltd
jo
div
and
sti
mov
stos
sub
ss
leave
addr16
lds
sub
mov
xor
int3
sub
lods
repz
jmp
fidivrs
xchg
ret
sbb
enter
adc
hlt
lods
mov
not
jb
inc
jg
das
data16
cmp
ret
lock
ljmp
mov
dec
mov
push
xor
xchg
imul
cmovbe
das
movsb
out
push
dec
mov
mov
inc
in
jnp
mov
cmp
ja
xchg
or
xchg
mov
mov
mov
and
in
mov
mov
lret
cmp
mov
sub
inc
lret
repz
aad
fsts
mov
dec
out
adc
adc
outsb
mov
stos
shrb
pop
popa
rcll
sbb
sahf
jno
cmp
cli
jg
push
fidivl
adc
inc
pop
sbb
adc
in
cmp
test
pop
repz
popf
jns
sbb
mov
cmpsl
sub
inc
inc
int3
xchg
std
dec
in
mov
adc
repnz
arpl
sbb
cmpsb
cmc
xchg
lret
mov
data16
call
mov
stc
das
xchg
cli
jb
mov
pusha
push
ret
dec
jno
lods
in
mov
lret
cmp
sbb
bound
out
mov
or
roll
mov
jge
mov
sub
mov
insl
je
adc
stos
add
arpl
add
dec
cmp
lcall
stos
data16
call
push
mov
mov
inc
arpl
cmpsl
pop
pop
sbb
and
push
cmp
je
mov
jae
sbb
mov
stc
mulb
or
sbbl
addr16
adc
pop
imul
pop
js
xchg
dec
mov
call
push
imul
add
xor
imul
pusha
outsl
push
dec
fiaddl
idivl
xlat
push
pop
into
lds
mov
call
push
pusha
les
push
sbbb
pop
call
dec
ljmp
ret
add
xchg
bound
pop
push
lcall
jge
inc
lds
test
cwtl
push
addr16
stos
lcall
cwtl
fs
lods
je
sbb
sub
push
xchg
or
jno
cmp
nop
lahf
arpl
rorl
pop
fnstcw
or
outsl
sar
jb
or
sub
das
add
push
xchg
ja
jmp
fisubs
dec
fidivrs
arpl
stos
mov
cli
or
add
add
mov
enter
jmp
push
sbb
das
popf
lret
sbb
adc
fs
and
cmp
scas
ljmp
mov
fcmovnb
popa
sub
push
dec
lock
push
cmpl
mov
es
inc
xor
add
jns
mov
lret
or
pop
jnp
sbb
sbb
test
mov
repz
dec
push
xor
adc
inc
dec
xor
ret
inc
clc
insb
push
aas
mov
sbb
pusha
mov
cmpsl
and
jne
pop
sub
and
shrl
adc
cltd
je
jle
cmp
rcrb
insl
mov
je
pop
or
xor
push
das
pop
jge
cmp
xlat
fcoml
mov
scas
test
sbb
sti
icebp
adc
out
lods
xchg
sub
mov
idiv
leave
stos
mov
outsb
mov
loope
cmp
mov
push
and
add
xor
es
jb
sbb
scas
sbbl
insb
push
sahf
js
fxch
xchg
xchg
es
push
xor
mov
inc
and
repnz
clc
inc
add
inc
or
je
movsl
gs
mov
loopne
mov
and
fdiv
jae
cld
hlt
lods
call
mov
mov
jmp
in
pop
sbb
pop
cwtl
add
imul
or
pop
mov
js
aad
xchg
mov
mov
scas
push
adc
scas
idivl
out
cmp
mov
xor
mov
or
test
js
adcl
pop
adc
in
ds
jecxz
adc
jae
repz
mov
xlat
test
xchg
ret
xor
cmp
enter
pusha
push
or
pop
xchg
jo
xor
dec
cli
shlb
inc
xor
cwtl
nop
or
lods
in
sbb
and
out
inc
mov
mov
cmp
out
enter
cwtl
sbb
cltd
subb
rcrb
mov
sub
adc
or
lea
cmp
inc
xor
dec
push
dec
push
sbb
pop
rep
out
pop
arpl
cmc
movsb
cmp
mov
sub
dec
mov
mov
mov
andb
sbb
mov
pop
lcall
mov
xchg
sbb
in
js
test
sub
fldcw
inc
push
test
rol
mov
testl
enter
out
or
fs
pop
fwait
sub
aam
mov
fs
pusha
or
adc
sbb
and
inc
push
cmp
movsl
jnp
sbb
mov
xchg
jg
into
clc
mov
mov
xchg
push
jmp
loope
aas
jne
dec
andl
cmp
pop
lcall
dec
cld
imul
sbb
fbld
hlt
xor
xchg
hlt
cmpsb
and
in
test
xchg
repz
inc
lahf
add
push
pop
lock
ljmp
cmp
pop
dec
test
push
xor
testb
repnz
dec
insb
hlt
and
mov
xchg
jg
adc
dec
dec
ret
loopne
outsl
dec
adc
lea
incl
pop
push
sub
test
sarb
ds
add
push
adc
adc
mov
push
sbb
int
int3
nop
cmp
stc
shl
cmpsl
ds
jmp
sub
movsb
test
in
in
mov
cmp
xor
push
outsl
mov
or
lock
call
insb
mov
cli
adc
sub
jle
inc
adc
cmpsl
adc
or
popf
inc
jmp
xchg
ljmp
xor
xchg
ja
test
ss
jae
out
dec
adc
push
cs
loopne
jg
pop
imul
mov
add
pop
out
jne
lahf
and
and
mov
mov
lods
add
push
cmp
rorl
popa
divb
jle
jbe
jge
testb
pushf
jl
mov
arpl
pop
stc
popf
rorl
push
cmp
xchg
cmp
data16
decl
ja
fwait
mov
lock
leave
adc
sti
push
ret
hlt
test
ror
ds
ret
movsb
popf
in
xor
sti
loope
aam
pop
rcrl
daa
adc
hlt
push
sub
movd
out
mov
in
or
push
and
or
les
mov
call
mov
in
push
mov
pop
jp
or
inc
sbb
enter
out
cmpsl
jmp
pop
loop
dec
sbb
jmp
pop
stc
jae
push
cmp
js
mov
std
and
scas
outsl
or
fistpl
shrb
out
add
jae
popa
imul
insl
mov
testl
ret
mov
pop
movl
cmpsb
loopne
stc
and
jb
pop
lods
imul
sti
dec
mov
sbb
lcall
dec
xor
dec
push
int3
cmc
ss
loopne
icebp
push
pushf
nop
imul
and
inc
bound
inc
lea
sub
cmp
xchg
hlt
xchg
gs
mov
adc
adc
lahf
lcall
test
dec
and
push
les
or
sbbl
out
add
insb
aas
xor
sarb
stc
decl
add
pop
popa
add
push
loop
sub
cmpsl
mov
xchg
cmpl
pop
fldenv
bound
cmc
pop
push
inc
scas
call
dec
inc
outsl
sbb
mov
xor
xchg
and
push
pop
out
mov
inc
add
pushf
loope
mov
lds
je
leave
jg
mov
mov
jne
jg
mov
inc
or
daa
sbbb
sub
dec
scas
mov
ljmp
add
shlb
mov
fucomip
sbb
fs
adc
cwtl
mov
mov
out
jno
sti
adc
sbb
rorb
dec
testl
mov
adc
push
outsb
arpl
xor
pop
add
xchg
fadds
movsb
push
pop
jo
xor
mov
imul
jbe
sub
loop
push
ds
into
loopne
and
test
push
cwtl
sbb
xor
outsb
mov
scas
insb
daa
inc
and
jl
insb
pop
push
test
xlat
jb
mov
lcall
lcall
jg
mov
into
ss
xlat
mov
xchg
sub
ss
call
mov
lret
inc
sbb
cmp
mov
sub
adc
mov
jno
std
push
xchg
fnstenv
testb
pop
je
add
xor
xchg
inc
push
sbb
repnz
dec
jmp
loopne
mov
sub
mul
fstps
push
out
mov
mov
jbe
mov
pop
mov
inc
mov
and
jmp
push
and
aaa
fdivl
jae
std
push
adc
enter
push
inc
ret
push
mov
aam
stc
push
lock
out
clc
adc
icebp
cli
cmp
dec
and
jbe
fwait
bound
lret
push
sbb
lcall
fstpl
cld
cld
shrl
and
imul
lods
cmp
cs
addl
add
sti
cmp
in
xchg
jg
mov
mov
add
arpl
arpl
jbe
repnz
xchg
jge
xchg
adc
and
cmpsb
ret
fsubrp
arpl
daa
outsl
push
push
inc
daa
popa
ja
pusha
das
add
aad
and
adcb
popa
xchg
mov
scas
subl
cwtl
test
lcall
scas
fists
fldcw
jmp
fdivr
shll
sbb
jb
jb
push
jmp
jmp
fsts
push
sub
pushf
repz
pop
sub
push
sub
sbb
dec
mov
add
xor
xchg
js
in
xchg
into
scas
adc
lods
and
sahf
or
mov
mov
loop
fdivrl
ja
cmp
or
aaa
aaa
insb
in
push
inc
push
cmp
test
fisubs
pusha
dec
data16
adc
rorl
adc
rorb
lock
dec
jmp
adc
lea
mov
out
fildl
adc
cmc
ret
jb
xchg
ret
je
cmpsb
xchg
aad
mov
mov
pop
push
adc
mov
mov
ljmp
lret
or
xor
shll
cmp
in
adc
push
push
lods
inc
jecxz
adc
enter
insl
mov
mov
mov
repnz
clc
inc
and
aad
add
fadd
jle
fdivrs
out
in
cmp
cmp
loop
andl
dec
out
icebp
ret
cwtl
pushf
mov
lahf
pop
gs
xchg
sub
sub
sub
jno
sbb
sahf
repz
call
test
push
addr16
cmp
les
mov
inc
dec
hlt
jno
ret
test
mov
pop
jmp
sbb
mov
mov
je
mov
jle
mov
outsb
orl
jle
dec
mov
xchg
add
leave
push
jnp
lret
jbe
pop
ds
cmp
jle
jno
push
daa
mov
ret
testl
stos
in
test
rdtsc
add
test
in
cmp
loop
push
fistl
lock
dec
hlt
enter
sti
cli
loope
fisubrl
cmp
outsl
adc
rcll
adc
mov
out
sub
imul
mov
inc
inc
add
add
jo
mov
xchg
pusha
or
idiv
add
and
inc
arpl
jne
arpl
fcompl
sbb
js
icebp
push
mov
jl
jl
jl
inc
mov
add
test
lds
xchg
arpl
xchg
pusha
mov
data16
outsb
popf
bound
jp
fists
cli
xchg
push
sub
jg
lock
jmp
cmp
dec
mov
movsl
and
rcrl
fistpll
out
xchg
repz
pop
xor
in
shlb
lret
rcl
pop
jmp
popf
jne
sub
cli
dec
pop
mull
insl
inc
jbe
cmpsb
mov
jmp
lock
rclb
iret
xchg
xor
cmp
daa
lret
fidivs
imulb
inc
or
dec
pop
mov
xchg
imul
js
push
xchg
call
fnstcw
or
rclb
pushf
adc
cs
flds
xor
xor
push
sub
add
pop
inc
rep
test
hlt
fsubs
adc
cmp
mov
mov
in
shrb
sbb
pop
mov
fdivrs
push
mov
or
jl
dec
pusha
fldt
dec
mov
xchg
sub
jecxz
out
jnp
sub
out
cli
dec
sub
lods
xchg
iret
adc
jg
out
mov
jg
pop
dec
jnp
ret
movsl
add
paddw
or
sub
jl
inc
imul
cmp
lret
sbb
lcall
lea
ja
jnp
xchg
sti
jmp
mov
rorl
mov
adc
inc
adc
sarb
cmp
add
mov
rcrb
push
add
cmp
or
enter
or
push
inc
xlat
xor
clc
cwtl
adc
inc
inc
popf
inc
loop
mov
imul
fwait
inc
cmp
and
mov
and
xchg
jns
sub
insl
aaa
or
pop
fmulp
pop
and
pop
scas
data16
pop
aad
das
repz
mov
lock
push
jne
mov
ljmp
aaa
cmp
cmpsb
ljmp
mov
sti
cmp
xchg
enter
lret
pop
inc
dec
les
psubusb
adc
mov
pop
pop
pop
aam
cmp
adc
or
cld
test
rcrl
lock
sub
iret
push
push
outsb
push
adc
dec
lods
iret
push
out
das
mov
adc
cli
loop
xchg
lods
psubusw
rcl
and
je
cmp
mov
outsb
jne
add
lahf
jb
add
sbb
push
bound
call
div
adc
mov
jp
push
jo
das
div
push
mov
movsl
inc
outsb
cmp
cmp
int3
xor
fwait
pop
mov
repz
adc
add
xchg
mov
scas
lods
xor
jb
ret
faddl
imul
cmpl
and
mov
xor
xor
xchg
jg
fidivrl
inc
cmp
testb
enter
push
mov
int3
rep
mov
xlat
stos
aad
inc
mov
push
iret
mov
imul
aam
loop
cmp
inc
test
ljmp
adc
sbb
std
cmp
xor
inc
jbe
lea
test
xchg
sub
mov
push
enter
cmc
shrl
push
fldcw
add
inc
loope
mov
nop
subb
jb
std
bound
iret
adc
lods
iret
jns
inc
out
push
into
movsb
xchg
loop
mov
movsb
aam
jb
xchg
push
imul
cmp
in
adc
cmp
xchg
aaa
adc
xchg
stos
in
jg,pt
ljmp
xlat
inc
xchg
mov
cmp
cmp
pop
fldln2
adcb
lock
icebp
call
cmp
sysret
rorb
xchg
test
push
pop
dec
or
pop
and
fadd
lcall
int3
sub
loop
jmp
sub
pop
mov
daa
cmc
lcall
mov
adc
popf
imul
stc
mov
icebp
aam
lock
scas
sub
and
clc
fistpll
aam
sti
push
repz
lret
iret
adc
fildl
and
daa
int
jne
push
jnp
pop
jmp
ds
cmpl
dec
shrb
bound
xchg
xchg
or
xlat
mov
rcl
fcmovnu
add
lods
sub
sbb
push
stc
adc
cwtl
clc
jno
jmp
lods
pop
sbb
cmc
add
test
adc
outsl
out
and
loopne
movsl
adc
mov
dec
sbb
sahf
in
adcl
pop
das
push
ret
testb
daa
movsl
rol
xlat
or
jo
push
and
dec
nop
mov
dec
add
lds
in
loop
and
lds
jns
jge
insl
mov
xor
ret
lret
dec
adc
imul
divb
jle
gs
mov
mov
test
lret
lods
xchg
imul
cmp
push
cmp
sahf
xor
insb
jns
sub
ljmp
shr
test
test
test
push
push
xor
test
jns
aam
mov
pop
and
or
loop
mov
jno
sbb
xchg
jg
std
lds
icebp
inc
sbb
loope
sahf
ficoml
sti
jno
lods
cmp
push
and
mov
push
and
inc
rorb
jb
push
test
arpl
stc
mov
in
mov
xor
nop
xchg
add
xor
ds
and
sbb
in
push
cmp
mov
dec
test
adc
arpl
pushf
aad
in
push
sub
ljmp
mov
sbbl
xchg
jo
fdivl
xchg
mov
aas
or
call
popf
mov
lret
or
movsb
mov
xchg
xchg
or
mov
ret
xor
testb
jmp
mov
hlt
adc
daa
lock
dec
dec
adc
in
pop
andl
imul
sbb
push
or
xchg
inc
shll
lcall
repz
pusha
mov
popa
je
xor
pop
ljmp
insl
cmp
fwait
xchg
mov
std
shr
cmc
lock
lahf
loope
jae
sub
sub
and
lods
inc
pop
icebp
pusha
cmpsb
adc
test
mov
bound
add
mov
add
and
enter
repnz
pop
or
icebp
jne
mov
push
pop
lock
jecxz
pop
xlat
iret
loopne
or
lds
pop
mov
lcall
enter
xchg
push
cmp
fbstp
out
sbb
push
movsl
mov
call
sbb
or
push
adc
mov
stos
cmp
inc
loopne
sti
hlt
scas
pop
ret
xlat
push
push
add
and
scas
sub
addb
repnz
mov
int
push
mov
push
shr
inc
push
cmpb
push
cmpsb
and
xlat
lods
or
std
dec
jb
xor
imul
mov
scas
push
mov
sbb
insl
or
xchg
pop
push
push
mov
arpl
sub
scas
call
xor
dec
jo
or
sub
or
movsb
sar
pop
dec
test
or
incl
sub
into
out
aam
mov
cmp
orl
inc
mov
ficomps
mov
and
dec
dec
add
xchg
fwait
pop
fildl
jb
movsl
xchg
push
enter
xchg
xor
adc
adc
jno
and
ret
pop
loope
pop
dec
cmp
popf
cmp
jle
and
jae
stos
or
add
gs
mov
mov
popf
lds
addr16
dec
mov
mov
rorb
pop
aad
insl
cmp
mov
jecxz
ret
shll
ret
pop
out
in
and
cltd
cwtl
jge
daa
fists
movsb
and
lcall
xbegin
mov
pop
xor
ljmp
push
in
notb
xchg
into
jnp
mov
shlb
sbb
xor
sub
mov
jp
enter
insl
stos
or
xchg
adc
daa
xor
pop
dec
iret
jno
and
push
lret
and
pop
jae
movsl
push
ds
xchg
lods
sbb
mov
push
mov
movsb
sub
lods
out
cli
adc
scas
aad
aad
aaa
jno
ss
and
push
jae
cmp
jne
orb
rorl
push
xchg
lea
fdivs
call
in
das
mov
pop
test
push
push
pop
das
lds
cmp
push
in
shll
pop
mov
andb
xlat
in
xchg
imul
sub
sub
and
movsl
es
ja
pop
aaa
jo
xchg
lcall
xchg
ret
aad
stos
mov
cli
mov
repnz
ja
out
in
sbb
cmp
adc
adc
js
lahf
adc
inc
test
cmp
leavew
int3
sbbb
inc
cmp
or
jns,pt
mov
sahf
out
xchg
xor
dec
adc
mov
fdivs
insb
repnz
inc
and
repz
orl
xchg
repnz
lret
shlb
aaa
pop
fidivrs
call
arpl
jle
cmp
cmp
repz
popa
aaa
add
pushf
mov
popa
out
push
add
jecxz
negl
jno
std
iret
mov
or
dec
mov
out
mov
mov
in
jle
aam
jnp
cmp
dec
sbb
xor
and
les
hlt
mov
ja
je
lock
stos
notl
xchg
and
scas
cmc
or
nop
xchg
ror
or
jle
xor
cmp
dec
pop
sbb
and
shlb
ret
adc
xchg
xor
add
or
jp
out
jle
and
push
adc
arpl
add
jmp
addb
fsubr
or
in
or
xor
mov
jnp
insl
test
cmp
adc
dec
shll
inc
in
out
mov
add
rcl
aad
imul
ret
addr16
repnz
pop
mov
aam
push
fdiv
ds
popa
jl
dec
or
pop
loop
xchg
cmp
or
iret
jns
dec
and
xchg
mov
inc
fs
dec
out
mov
xchg
mov
mov
lock
enter
popf
xor
xor
xor
jg
ret
in
popf
in
mov
pop
pushf
dec
pop
xchg
fbld
in
inc
push
gs
mov
sub
mov
fdiv
add
popa
xchg
dec
mov
daa
xchg
pushf
dec
in
and
loop
pop
xor
and
addl
les
adc
push
in
jl
fnsave
add
inc
xor
cs
daa
clc
add
popf
repnz
fdivs
push
popl
lds
jno
mov
xchg
or
stos
pop
idivb
mov
lret
out
or
pop
xchg
lods
leave
hlt
movsl
pop
adc
popf
adc
add
dec
xchg
dec
mov
or
imul
stc
jg
sub
cmpsb
adc
ja
repz
add
jl
outsb
cmp
icebp
data16
dec
xor
inc
mov
inc
dec
mull
scas
jmp
ja
int
mov
xchg
gs
push
lock
lret
data16
hlt
mov
fnstcw
lea
lock
pop
inc
jp
add
cmp
mov
shlb
xor
cld
aad
inc
mov
push
and
mov
das
fmull
push
popl
test
xor
jle
pop
jl
fistpll
and
cld
push
cwtl
xchg
mov
mov
push
xchg
sbb
xorb
lret
lcall
inc
push
les
adc
fisttpll
ss
imul
lea
xchg
mov
and
add
adc
lret
or
pop
filds
inc
out
inc
inc
mov
mov
push
jo
mov
fsubs
inc
jno
movl
inc
stos
lods
pushf
daa
inc
inc
hlt
outsb
and
inc
cli
in
pop
dec
in
cmp
repz
sbbl
dec
bound
fidivl
insb
and
pop
adc
repnz
jae
dec
nop
or
inc
icebp
cmp
cwtl
cmp
adc
aaa
jl
scas
xchg
jmp
aaa
mov
imul
or
mov
push
dec
sbb
sub
fsubp
lahf
rdmsr
pop
sub
in
clc
fnsave
sbb
xor
sahf
sub
cld
or
jnp
insl
repz
cld
ljmp
dec
clc
and
adc
dec
imul
nop
lds
rolb
cmovae
jle
add
xchg
mov
mov
pop
sbb
mov
sarb
das
cmp
jecxz
lods
movsl
push
insl
add
cmp
stos
adc
je
and
sbb
mov
sub
les
adc
jle
mov
jae
popf
in
cmp
or
and
pusha
mov
imull
enter
arpl
jbe
sub
out
in
arpl
push
jno,pn
ret
jecxz
push
xor
mov
lock
fidivl
aam
mov
mov
movsb
ds
push
jge
not
sarl
mov
lahf
psraw
inc
push
cmpsl
lock
and
pop
sbb
xchg
stos
cli
sarb
pop
movb
cmpsb
xchg
sbb
cwtl
mov
dec
sbb
cmp
mov
lret
jp
dec
idivb
adc
loope
sbb
xor
push
data16
adc
popf
cmp
or
iret
nop
pusha
jne
fcomi
xchg
pop
lahf
into
adc
mov
fldl
fbstp
in
mov
icebp
ljmp
aaa
leave
cli
and
xlat
jbe
mov
lret
ret
and
cmp
aad
inc
push
movsb
mov
iret
xchg
rclb
xor
dec
sub
fistl
pop
out
inc
iret
add
mov
and
jb
sbb
jb
adc
mul
sub
adc
cmpsl
jmp
aaa
outsl
lret
jmp
fsubs
movsb
adc
shll
aas
es
jne
mov
lea
sar
cmp
mov
and
rclb
enter
dec
adc
scas
cld
xchg
sbb
sbb
outsb
sbb
adc
inc
dec
mov
lods
sbbl
xor
rcl
pusha
push
push
mov
lods
testl
daa
dec
and
and
insb
cmp
lea
cmc
inc
mov
fchs
jecxz
adc
std
xor
stos
rcll
mov
mov
sarl
lret
jmp
inc
xor
inc
mov
mov
lods
imul
inc
fs
rorb
sbb
xor
out
out
and
and
push
in
sbb
xor
mov
xor
jno
pop
into
cs
jbe
xor
aas
in
cmpxchg
dec
push
xchg
cltd
pop
stc
xor
push
and
pop
mov
xor
cmp
idiv
jge
pop
cmp
xchg
adc
shrl
sbb
mov
pop
enter
jbe
cmp
cmc
test
push
add
fimull
or
xor
pop
std
mov
push
imul
lods
fcoms
scas
sbb
cltd
xor
jbe
xor
fwait
sbb
lea
nop
test
or
pop
sub
dec
dec
push
push
hlt
add
xor
je
xor
jno
dec
cmp
subb
data16
xor
xor
out
loop
nop
bswap
outsb
out
jg
cli
mov
icebp
cmp
pop
insb
pop
out
mov
xchg
mov
call
fstpt
adc
inc
lcall
inc
lcall
jmp
push
dec
and
bound
sbb
jmp
loopne
jecxz
cld
aam
mov
lret
cld
aad
aad
stos
mov
xlat
mov
mov
in
xchg
xor
push
xchg
ret
stos
or
out
out
push
xor
sbb
andl
cmpsl
mov
cld
add
call
iret
xor
mov
scas
pusha
xlat
mov
mov
stos
ret
xor
fmulp
lods
jecxz
and
mov
ror
fisubs
loope
pop
jbe
aas
jge
inc
mov
das
enter
mov
popf
mov
add
xchg
mov
loope
xchg
push
std
mov
push
add
inc
dec
aad
in
lods
pop
in
nop
sbb
jl
aaa
jle
sbb
xchg
dec
inc
fcmovnbe
sub
push
inc
add
lret
or
std
testb
imul
mov
xor
push
xor
subl
cmp
dec
pusha
loopne
scas
mov
test
sahf
loope
arpl
lcall
fisubl
cmp
push
iret
xlat
inc
mov
and
mov
xor
popa
push
insl
sbb
scas
cmc
mov
or
push
push
mov
xchg
jbe
dec
arpl
pop
jno
jmp
mulb
test
aad
int
filds
stos
sub
push
cmp
sub
mov
xor
jg
pop
pop
clc
idivb
roll
push
or
shl
into
mov
iret
add
sarl
mov
iret
cld
add
js
aas
shrl
loopne
rol
fsubrl
jp
xchg
cltd
lcall
sub
dec
data16
pushf
push
or
insl
xchg
push
mov
push
daa
fnstenv
and
pop
push
js
xchg
stc
push
minps
call
mov
aaa
ja
mov
into
cwtl
xchg
mov
mov
mov
cmp
dec
outsb
fldenv
dec
dec
sub
shrb
pusha
pop
inc
lahf
and
mov
add
or
xchg
jnp
outsb
gs
or
cmp
pop
in
lea
ret
enter
ret
in
mov
dec
cmp
dec
ss
icebp
pop
icebp
fisubrs
push
add
and
out
jg
pop
lock
or
aam
push
jle
fmull
sub
lods
lcall
push
cld
or
sub
test
hlt
sub
lahf
pop
pop
mulps
and
cmp
iret
pop
sub
mov
inc
rcrb
aas
sub
xor
lods
and
pop
addr16
fidivs
shll
push
pop
nop
add
cmpsl
dec
push
mov
mov
cmc
and
jb
lahf
jbe
xchg
mov
pusha
pop
imul
or
xchg
mov
int
push
or
push
inc
xchg
mov
cltd
sbb
cwtl
inc
xor
adc
mov
pop
fidivrs
mov
and
loopne
stos
pop
hlt
adc
sub
jne
pop
adc
inc
jge
mov
cmp
jge
call
imul
jle
sbb
cmp
xchg
cmp
jo
repz
pop
sbb
push
mov
cld
jecxz
cmp
adc
cmp
mov
adc
jg
aad
imul
or
outsl
dec
mov
clc
fidivs
pushf
inc
sahf
cwtl
cmp
xchg
cwtl
inc
mov
scas
or
jle
repz
in
mov
push
ret
les
pop
dec
stos
mov
inc
mov
cltd
push
or
scas
test
popa
fistps
mov
cmp
in
add
adcb
sbbb
mov
out
repnz
mov
xor
push
dec
cmpsb
icebp
cmp
icebp
dec
int
rorl
pop
icebp
insl
pop
negb
outsb
into
xor
clc
adc
rorl
mov
ljmp
repnz
dec
and
sub
dec
popf
add
fbstp
lods
mov
dec
insl
imul
cli
push
or
cmpsb
sub
add
adc
ret
test
mov
test
inc
pushf
pop
push
cmpsb
add
insl
loopne
stc
jp
movsb
pushf
mov
pop
adc
xor
xlat
shr
faddl
outsb
cmp
sub
aam
fimuls
cwtl
inc
inc
or
adcl
jne
pop
cmp
jnp,pt
adc
and
mov
imul
lea
dec
cs
xchg
pop
scas
mov
stc
sbb
mov
pop
sub
or
mov
test
loope
sti
and
icebp
fcomp
sbb
fadds
or
mov
cmpsl
es
outsl
fisubs
test
roll
mov
inc
dec
ret
arpl
pop
dec
psubusw
outsl
repnz
ret
add
sti
mov
bnd
popa
bound
pop
stc
mov
cmp
stos
out
bsf
sahf
jl
add
and
pop
mov
lahf
mov
aad
out
popa
cmpb
lds
sub
ds
jecxz
mov
pop
sbb
xchg
mov
loopne
lret
loope
jmp
add
mov
mov
dec
mov
mov
jl
pop
stos
add
and
lock
sbb
push
xor
movsl
movsl
jp
sti
pop
icebp
sbb
xor
sub
dec
xchg
dec
inc
cmpsb
call
into
dec
lods
ret
cmpsl
inc
sub
stc
sbb
sbb
loope
nop
out
aaa
sub
lcall
xchg
dec
jb
xchg
push
shrb
or
xchg
lret
popa
test
test
and
cmp
ret
je
iret
arpl
mov
pop
dec
icebp
hlt
insb
movsb
les
push
mov
xor
or
cmp
loope
jg
cltd
mov
jno
sbb
insl
fwait
sub
dec
repnz
movsl
dec
or
out
and
sub
inc
aas
mov
sub
and
bound
or
cmpb
inc
jb
jnp
hlt
test
lock
repz
lock
push
fninit
test
mov
hlt
sbb
xorb
sarl
push
lea
ja
push
shll
call
adc
push
push
ljmp
test
push
sub
jg
mov
leave
out
cmp
popa
movsb
jns
sarb
popf
inc
jmp
shll
cmpsl
clc
mov
fldenv
lods
lcall
iret
movsb
inc
lock
xchg
add
scas
mov
cmp
push
ffree
or
mov
mov
jbe
lret
cs
test
shr
pop
xchg
int3
gs
mov
lea
enter
loop
ds
xor
arpl
cmp
pop
mov
push
pop
or
inc
repnz
push
aam
fwait
dec
ja
sub
les
mov
js
out
or
sbb
into
or
mov
mov
xchg
lret
rcll
sub
out
jg
inc
fdivr
xchg
mov
sub
xchg
lds
or
and
imul
mov
arpl
stc
and
test
xchg
mov
push
mov
xchg
push
jge
stos
xor
sbb
test
sub
lcall
pop
jns
loope
pop
cwtl
cmp
jmp
sbbl
or
std
mov
popa
daa
mov
sahf
mov
cmpsb
pop
stos
loopne
and
fcoml
fidivrl
pushf
xchg
in
popf
jno
popa
stc
push
jg
jb
inc
or
popf
popf
les
or
mov
rcrb
daa
lock
sub
xchg
cwtl
out
jnp
out
mov
cmc
leave
mov
in
cmp
cmpsb
xchg
pop
and
loope
adc
push
dec
or
lds
mov
lods
jae
cmpb
xor
je
in
mov
cmp
push
mov
outsb
lods
test
xchg
cmp
or
daa
cltd
or
clc
inc
rolb
fucom
sarl
push
mov
mov
sahf
push
aam
pop
fstps
xchg
rclb
loope
shrb
cmpsb
outsl
cmp
mov
adc
jns
popl
push
outsb
fistps
inc
pop
call
mov
push
xchg
inc
push
fmul
xlat
push
jle
rcrb
jae
rorb
and
insb
stos
xor
jae
or
mov
in
push
leave
cli
imul
or
lods
sub
fidivrl
imul
shll
cwtl
inc
or
lock
and
testl
inc
call
js
cmp
fstpt
les
push
fstl
mov
movsl
and
xlat
dec
push
fmull
push
roll
fbstp
std
iret
in
adc
jo
push
mulb
fistpl
and
jge
jnp
adc
in
dec
testb
out
cltd
lods
aad
xchg
stos
js
pop
xor
push
xchg
sbb
mov
jmp
xchg
movsl
jnp
into
dec
pop
or
sbb
mov
in
pushf
push
scas
dec
repz
mov
sbb
mov
movsb
push
xchg
mov
ror
add
bound
mov
push
push
push
pop
fsts
push
cmp
mov
in
into
push
fucom
imul
mov
cmpsl
cs
mov
cli
fmuls
mov
sahf
and
mov
ret
in
shlb
loopne
std
adc
ret
inc
sub
cmc
sbb
push
cld
mov
cmp
aas
scas
jle
pop
mov
ds
xchg
aam
filds
mov
jno
adc
push
pop
test
push
ret
xchg
test
test
add
mov
ret
sarl
adc
cmc
dec
xlat
mov
dec
jg
int3
sahf
cltd
sbb
xor
jae
dec
pushf
jae
xchg
mov
pop
add
mov
jle
dec
and
sub
rclb
cmp
inc
pop
jmp
in
fisubl
movsb
or
stos
or
stc
ret
insl
icebp
popf
sbb
hlt
shrb
jl
arpl
xor
cmp
inc
add
shrl
inc
and
js
pop
insl
jecxz
in
pop
push
fwait
add
xchg
and
enter
enter
mov
addr16
jge
aad
jno
add
loopne
testl
insl
jno
pop
add
adc
test
lcall
aaa
mov
ds
or
jnp
iret
push
icebp
push
movsl
jmp
leave
out
mov
lret
pop
fistl
daa
adc
xchg
jb
std
notl
xor
cmp
in
jnp
or
xor
jmp
push
outsl
pushf
cwtl
cmp
sbb
add
xchg
imul
sbb
mov
pop
rolb
push
add
mov
push
jl
sub
out
adc
mov
test
js
imul
sbb
nop
faddp
adc
nop
mov
dec
fisttpl
pop
dec
jmp
adc
movsl
sub
mov
inc
pop
bound
mov
or
pop
adc
dec
addl
mov
sub
push
mov
sub
jmp
inc
mov
shl
sub
icebp
lret
daa
imul
inc
xor
pop
int
mov
ret
test
imul
jg
lea
mov
pop
lods
pushf
lock
cmp
shlb
pop
jp
mov
hlt
jge
lcall
mov
inc
imul
or
jno
xor
icebp
lret
xchg
ret
pop
rclb
call
inc
int
inc
jmp
dec
jae
ficomps
add
mov
out
adc
mov
das
dec
xor
mov
mov
rolb
pop
xor
mov
xorb
inc
cmpl
cld
jmp
shll
mov
loope
mov
int3
jae
adc
and
cmp
loopne
out
loope
sub
in
lods
imul
scas
cmc
mov
subl
mov
mov
sub
sub
xchg
mov
xor
add
jp
bound
dec
pusha
in
inc
add
push
sar
jge
scas
or
push
push
adc
iret
bnd
add
pop
adcb
fldenv
aas
aad
lock
test
lahf
mov
lods
invd
pop
sbb
sbb
adc
js
lret
xor
or
jno
lea
pop
xchg
outsb
adc
mov
stos
sub
jmp
iret
push
xchg
js
jb
and
pushf
and
xchg
lods
push
xor
cmpsb
sub
inc
popa
popa
iret
xchg
mov
fbstp
ffree
fnsave
sub
push
movsb
xlat
jg
or
push
add
cmpsl
lods
cwtl
insb
mov
mov
push
or
cld
dec
call
mov
imul
shrb
jle
sub
sbbb
lret
mov
pop
dec
mov
lcall
mov
jge
out
insb
fs
push
test
stc
pop
push
rol
push
push
imul
cld
xchg
fildl
mov
pop
inc
sbb
enter
dec
in
jb
mov
sbb
ljmp
jp
and
xor
lcall
mov
add
sub
rorl
fcoms
test
lds
push
xor
test
cmp
ss
lret
push
cmp
jecxz
testb
int
cmp
cmpsl
adc
push
mov
adc
mov
fistpll
test
hlt
inc
or
mov
int
xor
fwait
pop
xor
stos
jg
add
xor
mov
xchg
mov
sub
fdivr
pop
mov
adc
popf
adcl
push
daa
xchg
xchg
ror
pop
dec
enter
les
scas
ja
scas
cmp
dec
sbb
or
lods
xorl
outsb
mov
xor
push
push
cmp
rolb
rcll
cmp
ss
scas
inc
cltd
or
xchg
aaa
lds
iret
stos
push
or
into
pop
cwtl
das
ljmp
xchg
xor
fsubr
add
push
mov
rorl
insl
loopne
leave
cld
dec
shlb
dec
cmp
ret
dec
push
dec
in
negl
mov
xchg
push
cmp
out
lods
or
call
jl
jmp
sbb
inc
push
ljmp
jecxz
rorb
jae
sbb
pop
mov
gs
pop
push
lods
jg
loope
push
es
iret
sbb
cmp
scas
fisubl
jg
mov
xor
cmp
mov
lcall
dec
cli
loop
sahf
lcall
les
dec
sti
fmuls
lea
fistps
inc
jbe
lahf
imul
rorb
mov
jle
ret
cmc
insl
fstl
or
mov
xchg
jns
orl
push
cwtl
push
movl
in
in
pop
inc
cmp
scas
movsl
in
xchg
cmpsl
inc
rorb
popf
and
mov
iret
dec
movb
lret
fwait
movsl
iret
mov
sbb
or
pop
stos
std
mov
mov
mov
fstps
lcall
inc
in
cmc
out
xchg
fnstcw
inc
mov
inc
xchg
add
test
cli
xlat
cmc
bound
push
cmp
fwait
negl
inc
shrl
out
gs
push
inc
inc
data16
jne
iret
inc
nop
popa
push
and
jp
mov
scas
mov
jecxz
cmp
add
pop
or
cli
orb
imul
idiv
pop
push
scas
out
sub
imul
mov
arpl
mov
rcll
hlt
push
dec
insb
out
fcomps
mov
call
and
negl
push
data16
push
out
dec
push
out
and
pop
push
lret
mov
push
or
repz
call
fwait
mov
adc
mov
xor
inc
pop
movsb
jl
xlat
mov
pop
in
dec
dec
xor
rolb
sti
out
dec
jnp
test
and
into
addb
dec
scas
sbb
hlt
push
test
int3
movsl
sbb
sbb
push
dec
or
push
push
adc
out
out
cmp
sbb
mov
imul
stos
les
mov
lea
xor
andl
hlt
adc
mov
pop
adc
mov
jne
bnd
inc
jo
cmp
push
bsf
cld
xchg
cld
xchg
shll
sbb
daa
out
imul
rolb
push
aas
xor
mov
movsb
mov
jbe
xor
mov
test
xor
jne
xchg
jnp
and
jl
push
xor
xor
into
popa
jb
xlat
pop
stc
leave
out
shl
jecxz
sahf
fistpll
in
out
scas
adc
addb
mov
jne
mov
out
inc
aas
mov
xorl
or
ja,pt
lcall
imul
xor
xor
fwait
cmp
xlat
and
push
cld
scas
rorl
jno
testb
pushf
mov
imul
cmp
and
mov
arpl
in
push
lahf
pop
or
pop
sub
int
enter
dec
test
xchg
or
pop
xor
sti
inc
mov
mov
or
int
cs
pop
jp
jbe
xchg
sbb
mov
mov
pop
cmp
aas
dec
pop
out
mov
inc
sbb
dec
mov
add
aad
lret
pop
push
movsb
bound
neg
bound
push
icebp
xchg
stos
push
pxor
shrb
movsl
fldenv
sub
xor
andl
enter
adc
scas
addr16
cltd
inc
movsb
outsb
xlat
insb
inc
push
cmp
sub
mov
ret
stos
pop
daa
std
cmp
addr16
dec
mov
arpl
sti
fwait
and
or
and
xor
bound
sbb
mov
aam
es
push
and
jb
jge
sub
fsubr
in
lock
aaa
cwtl
pusha
leave
pop
out
loop
pop
xchg
push
jnp
mov
movsb
mov
fst
push
jl
fdivrl
icebp
cmc
cld
hlt
inc
divl
cs
in
outsl
dec
xchg
inc
lods
aad
dec
mov
jnp
push
ret
mov
out
pusha
xchg
iret
ficomps
ja
movsl
push
out
ret
push
ja
test
lods
push
mov
rorl
mov
cmp
cmp
cmpsl
and
push
insl
sti
xchg
xchg
jne
or
rcr
jmp
in
or
push
fmuls
sbb
cmp
push
mov
push
adc
lret
fsubl
dec
and
aas
inc
xor
push
cmp
sbb
repz
out
adc
mov
xchg
xchg
sahf
cld
rorb
ret
mov
jb
es
loopne
mov
scas
jno
std
mov
sbb
andb
ljmp
fnsave
outsl
pop
into
jno
mov
dec
mov
dec
subb
push
fbstp
push
hlt
aas
cmpsb
dec
stc
inc
das
mov
hlt
pop
xlat
jne
outsl
rcr
pop
adcb
subb
pushf
jge
and
faddp
in
rcrl
sbb
mov
sbb
sti
cmpb
dec
xor
test
cmpsl
add
xchg
push
sub
ljmp
mov
test
lock
inc
adc
out
mov
shl
add
inc
insb
push
xchg
jle
in
shrl
jle
pop
jno
into
ss
int
and
adc
add
or
pop
sbb
in
lret
inc
add
lcall
inc
rolb
jo
lock
lea
xchg
inc
adc
mov
adc
lock
int
arpl
jb
mov
xor
ja
jmp
and
adc
cmovp
jo
in
ficoms
ds
jns
mov
lds
es
mov
ret
pop
or
iret
cmp
imul
jbe
or
es
or
les
fwait
gs
jno
aam
test
jnp
lds
ret
mov
pusha
cmc
dec
add
mov
loopne
rcrl
ds
mov
inc
inc
jne
movsb
xchg
add
xchg
leave
pop
sub
push
xchg
jb,pn
jle
out
mov
daa
pop
push
xlat
xor
jmp
adc
in
add
fisubl
mov
fsubl
push
jo
sbb
jno
jno
mov
or
rorb
ds
stos
call
or
imul
push
leave
xorb
push
cs
shrb
jno
fidivrl
jg
test
repnz
cmp
mov
lea
pop
fldt
int
dec
sbb
and
repz
adc
out
adc
testl
mov
dec
fisttpll
movsb
inc
fnstsw
cmpsl
or
pushf
push
mov
sti
push
lcall
push
push
test
in
sbb
xor
popa
ljmp
push
lret
mov
mov
and
xchg
out
sub
loopne
in
fwait
out
pusha
test
dec
jb
clc
fimuls
jmp
gs
jp
ljmp
add
loop
test
mov
sbb
es
xchg
push
or
mul
jns
sbb
mov
pop
adc
add
loope
cmp
lcall
jnp
pushf
aaa
push
cli
mov
pop
inc
cmpsb
jnp
mov
addr16
cmp
lret
xor
out
dec
sub
adc
mov
lds
sbb
push
shl
xor
outsl
xor
xchg
push
mov
mov
jns
imul
stos
scas
lcall
cmp
inc
pushf
adcb
sbb
dec
lcall
pushf
dec
pop
dec
inc
mov
mov
mov
jbe
sbb
call
insb
loope
sbb
mov
in
mov
fwait
xchg
xlat
popf
out
aas
lcall
fildl
jmp
cmp
les
mov
test
mov
adcl
sbb
icebp
xchg
outsl
cmp
cmpsl
add
xchg
pcmpeqb
add
or
push
mov
dec
roll
sahf
shl
call
sub
rcl
dec
loop
insl
pop
out
lock
adc
mov
push
xchg
lds
and
adc
mov
jmp
xchg
add
cmp
arpl
cmpsb
nop
lds
ja
pop
pop
int3
aas
mov
not
fcomip
push
int3
in
clc
adc
addr16
std
cltd
xor
mov
inc
stos
fadd
pop
push
push
push
push
add
outsl
scas
out
adc
sarb
cmp
outsl
cltd
arpl
popf
add
movsb
mov
and
movsl
and
push
xchg
aam
mov
xchg
jp
je
mov
pop
lret
xchg
pop
add
sub
into
inc
mov
sub
inc
or
scas
xchg
shl
inc
xchg
out
add
push
and
mov
mov
lcall
ret
icebp
mov
jmp
xor
xchg
loope
mov
jle
add
jne
sahf
inc
outsb
xor
fsubrl
scas
sti
bnd
mov
and
jp
jge
pop
jbe
negb
popf
or
inc
loope
mov
cmpsl
pop
xor
and
loope
in
dec
mov
or
jbe
lods
jne
fcomp
dec
xor
pop
mov
xchg
cmpsl
call
inc
cmp
jecxz
inc
or
pop
ret
inc
popf
loopne
loop
dec
mov
in
cwtl
pushf
in
data16
adc
mov
xor
cltd
outsl
mov
ljmp
mov
sbb
mov
pop
add
gs
jle
je
int
int
pop
jo
mov
pushf
outsl
jle
std
xchg
bound
into
cs
cmp
lea
rorb
rolb
cmp
add
lcall
dec
pop
gs
xchg
jno
rcll
out
adc
xor
cmp
gs
sub
popa
sub
lds
aam
aaa
add
ss
mov
jge
mov
mov
mov
outsb
xchg
fcom
dec
xlat
jmp
jp
mov
or
fisubrl
pop
pop
cltd
into
sarb
aam
decb
lcall
rorb
aaa
xor
repz
mov
pop
push
scas
pop
adc
mov
call
mov
push
stc
xor
fsubrs
sbb
push
shrb
jnp
cld
mulb
xchg
in
jno
scas
out
mov
mov
xchg
cs
dec
xor
repz
enter
adc
push
js
pop
ja
pop
std
xchg
ss
and
mov
popa
lock
lret
mov
dec
xlat
sub
pop
aad
pop
adc
and
lods
sub
mov
stc
rclb
mov
jno
inc
push
push
push
dec
mov
jb
mov
and
adc
aad
aad
daa
adc
push
jge
mov
dec
daa
rcr
insl
lcall
add
and
jnp
xchg
dec
test
mov
cmpsb
outsb
push
repnz
cmp
test
push
push
dec
jb
lret
imul
jg
andb
and
les
cmp
pop
mov
jbe
out
call
clc
dec
je
jae
pop
addr16
loope
mov
and
push
dec
out
pop
xchg
ljmp
mov
dec
in
mov
push
test
add
cmp
sahf
test
popa
sub
and
xchg
lods
mov
pushf
push
pop
dec
jge
push
add
iret
lds
ficomps
add
dec
fs
xorl
leave
push
cmpsb
popl
pop
mov
jne
sub
daa
sti
jmp
movsl
les
dec
fldcw
xchg
pop
into
mov
xor
xchg
cmp
mov
cld
je
stc
orl
jb
insl
repnz
dec
mov
sub
push
arpl
jns
into
xchg
sub
divb
rcr
and
jae
pop
pop
cmc
push
outsl
call
sti
add
fldl
cmp
call
dec
out
int3
clc
push
stos
movsl
jp
mov
into
mov
mov
xlat
mov
cwtl
aas
mov
shlb
push
xor
xor
dec
adc
cli
xchg
aad
out
and
xchg
pop
aad
add
jnp
or
std
add
fisubs
ss
scas
mov
repnz
sub
cs
cmp
pop
andl
push
ja
mov
dec
mov
xchg
loopne
jae
xchg
pop
leave
or
scas
clc
add
push
nop
adc
cmp
scas
jl
repz
pop
pop
dec
fildll
mov
cmp
shlb
mov
mov
lahf
leave
jbe
mov
or
xor
shlb
pusha
lods
orb
insl
mov
push
pusha
js
sarl
inc
inc
loope
jno
xchg
xbegin
cmp
sub
addr16
pop
fisttpll
int3
test
fisttpl
into
daa
stos
pop
hlt
mov
das
test
stos
sahf
nop
add
jecxz
pop
mov
test
in
ds
jg
push
xchg
sub
push
xchg
pusha
add
call
ljmp
mov
sub
cmp
mov
jp
divl
sub
push
adc
cmp
jb
nop
cmp
add
es
fcomp
xchg
cli
cmp
cmp
inc
jecxz
fs
pushaw
adc
jbe
and
mov
insl
inc
faddl
shrl
lret
adc
insl
dec
popa
sub
adc
adc
hlt
mov
lret
pop
test
call
push
clc
pmulhw
adc
inc
dec
repz
mov
fsubs
cli
les
data16
jno
jmp
jbe
addr16
movsb
pusha
pop
or
inc
xchg
lcall
xchg
ljmp
pushf
mov
dec
sub
jmp
jbe
test
inc
mov
jge
dec
lods
fnstenv
cmpsl
dec
jl
jge
divl
cmpsb
cld
insl
inc
addl
nop
push
add
in
stc
and
adc
lds
pop
mov
pop
movsb
test
shlb
les
ja
pop
test
dec
jb
call
hlt
loopne
jecxz
insl
popf
std
mov
fwait
inc
sahf
incb
insb
lods
push
or
fdivrl
push
fmulp
ljmp
nop
fstpl
ljmp
fistl
popf
aas
mov
push
repz
clc
push
jae
add
in
jg
pop
add
notb
and
fcmovbe
push
mov
inc
bound
fwait
mov
ds
and
mov
jl
dec
xor
leave
repz
je
dec
push
mov
mov
and
cmpsb
and
icebp
js
and
rorl
jmp
sbb
lock
xchg
mov
push
push
push
lret
call
lods
adc
pop
pop
je
cs
addr16
cwtl
out
dec
push
fidivrl
and
mov
lds
sub
out
mov
inc
mov
hlt
pusha
sbb
lock
addb
js
adc
imul
pop
jle
lahf
sarl
loop
sub
mov
inc
ret
jne
dec
ret
enter
mov
daa
add
repnz
cld
pusha
adc
mov
xchg
xchg
jp
inc
pop
aas
xchg
pop
xor
jns
mov
gs
pop
sub
add
push
or
jb
shlb
xor
sti
icebp
cmpsb
and
xorl
xchg
add
pop
ss
pop
ret
imul
int3
sub
pop
dec
movsb
xchg
scas
push
cli
sbb
jb
xor
arpl
xchg
mov
rcr
or
popa
dec
dec
outsb
imul
rolb
out
aad
shl
notl
cmp
cmp
repnz
inc
jmp
andb
scas
cmpsb
and
cltd
aas
xchg
sbb
xchg
cmp
adc
loopne
hlt
mov
push
lret
mov
push
pusha
aaa
inc
in
scas
jle
fdivl
sub
lock
adcb
mov
test
jb
sub
jae
mov
or
int
cmp
or
mov
jge
xchg
xor
test
in
int
cmp
mov
pop
fisubs
pop
lahf
cmpsb
xchg
pop
inc
cmpsb
add
lods
and
and
inc
ljmp
roll
or
mov
sbb
pop
out
aad
or
or
jp
lahf
push
adc
mov
mov
popf
push
addr16
dec
mov
sub
xchg
sbb
mov
pop
mov
xor
icebp
pop
popa
push
ret
and
mov
fidivl
test
push
jbe
movsl
add
jle
jb
mov
in
imulb
repnz
outsb
pop
and
pop
sbbl
xchg
push
and
jae
loop
out
fstps
xor
rcl
xchg
cmpsb
xlat
dec
push
or
je
xor
mov
in
addr16
push
sbb
or
hlt
movsb
mov
adc
cmpsb
pop
scas
popf
loop
bound
pop
lahf
mov
popf
xchg
fldenv
push
loop
push
ror
adc
push
and
out
and
xor
iret
rcl
adc
adc
xor
and
sub
mov
sub
lret
inc
xor
or
mov
ss
xchg
cmp
outsb
inc
mov
daa
mov
lds
pushf
into
mov
lret
mov
sbb
xor
popf
xor
nop
push
ja
inc
mov
push
addr16
mov
outsb
and
xor
xchg
outsb
jne
lahf
sub
loope
dec
nop
push
data16
sbbl
stc
push
loop
fsubrp
xchg
pop
mov
push
fisttps
add
ss
jge
jne
jno
sub
jo
leave
inc
imul
xchg
adc
call
mov
ljmp
jne
sbb
sahf
mov
movsl
mov
shrl
or
sub
repnz
or
jg
xchg
cltd
in
xchg
mov
push
lds
and
or
xor
jle
push
jno
add
outsb
and
mov
fdivp
ret
lock
inc
fstpl
mov
inc
and
fidivl
mov
mov
das
mov
or
xor
cmp
add
ret
test
and
test
sarl
and
adc
pop
lods
orb
push
xchg
insb
xchg
or
out
mov
dec
add
sahf
mov
out
pop
into
push
xchg
test
adc
xchg
jnp
xor
insl
pushf
xchg
and
push
adc
cwtl
jbe
add
jno
cli
jae
and
int
addr16
scas
jecxz
lea
mov
outsb
outsl
inc
xchg
and
ficoml
mov
inc
imul
aad
popf
xor
push
ss
clc
and
jns
sbb
test
lahf
cwtl
cwtl
push
shrb
inc
jmp
push
mov
or
xor
ficompl
jp
sub
xor
xor
adc
dec
and
sti
daa
std
mov
aam
cmc
push
ljmp
aas
call
cltd
jg
mov
in
lods
adc
sub
mov
or
and
mov
adcb
lods
xchg
fucomp
push
hlt
jo
push
inc
das
dec
or
int
add
std
icebp
fwait
ret
push
and
dec
xchg
pop
fidivrs
xor
repnz
mov
fsts
mov
jns
addr16
mov
mov
das
jl
in
movb
out
adc
inc
dec
pop
jl
add
add
xor
loope
inc
sub
mov
push
das
push
cmc
call
movsb
lret
inc
js
inc
ljmp
cltd
cmp
lock
add
test
jae
pushf
scas
sahf
xchg
xlat
fsub
test
enter
insb
call
hlt
xchg
scas
test
out
inc
ret
movsl
sbb
push
push
mov
rcrl
mov
in
cs
cmpsl
repz
mov
mov
jmp
adc
sub
pop
sub
push
xchg
xchg
inc
clc
inc
ljmp
or
fisubrl
xor
es
lods
loop
mov
push
dec
pop
in
jae
mov
sub
xchg
pop
and
in
adc
out
jge
clc
popl
hlt
push
mov
sbb
push
adc
dec
loopne
aaa
and
adc
test
mov
xchg
xor
pop
mov
mov
add
or
loopne
sub
inc
mov
inc
les
jecxz
scas
cmp
outsl
rol
mov
adc
xchg
cltd
pop
loop
hlt
add
sbb
in
dec
push
rorl
mov
mov
push
mov
ret
stc
xchg
cmpsl
or
add
and
comiss
add
pop
gs
inc
add
out
lahf
pop
shl
sub
jo
imul
dec
out
or
mov
sahf
arpl
lahf
pop
dec
mov
mov
add
jmp
cltd
fsubs
mov
pushf
cmpsl
mov
insl
stos
test
neg
add
pop
sti
int3
push
fadds
jmp
xor
jne
mov
shlb
mov
pushf
pop
in
push
aam
aas
popa
or
adc
shr
fwait
iret
mov
adc
int3
into
jnp
in
push
push
outsl
sbb
adc
pop
and
es
adc
rorl
mov
ret
cmpsb
cmpsb
lods
loope
sub
lcall
add
jmp
add
adcl
jg
cmp
push
fimull
repz
adc
icebp
push
lock
in
les
fnstenv
xchg
into
lea
ljmp
inc
xor
inc
lahf
jmp
xchg
stc
xchg
cmp
hlt
or
mov
imul
xchg
xor
dec
push
imul
jecxz
scas
fs
ret
mov
addr16
lcall
xor
sbb
test
scas
lock
test
xor
mov
lds
sahf
push
movsl
fidivs
andb
cltd
push
dec
pop
aam
test
fnstenv
pop
fcomps
xor
dec
ficomps
shll
push
add
ljmp
jno
pop
sarb
test
and
shlb
imul
cld
cmc
aam
cmp
cmp
inc
fnstcw
cmp
outsl
xchg
mov
es
cmc
sbbb
mov
mov
push
movsl
lret
dec
jo
lret
jp
adc
add
lods
xchg
cmp
sbb
push
pusha
mov
test
test
push
dec
cmp
jmp
les
add
lcall
jl
out
popa
scas
adc
jae
aaa
fcomip
cmc
gs
or
aam
dec
push
jns
lcall
adc
and
pop
aad
fisttps
repz
mov
push
dec
out
daa
pop
or
mov
fldl
push
adc
pop
jne
lcall
jge
insb
dec
or
xor
push
add
mov
and
mov
xchg
add
adc
add
mov
aam
fsubrl
mov
call
jp
aas
inc
into
incl
repnz
lret
jne
mov
dec
jge
inc
pop
ds
jge
sub
adc
jbe
inc
inc
and
adc
aad
push
cmp
push
add
mov
push
mov
inc
and
aad
jns
lds
jns
or
cmp
or
outsl
cmp
sbb
inc
pop
repnz
push
xchg
mov
and
mov
aaa
sub
or
stc
pusha
push
pop
push
and
nop
fsubrl
mov
sbb
je
enter
enter
rcr
adc
jmp
mov
pop
lods
iret
mov
or
xchg
sub
mov
sub
sahf
rorb
cmp
fwait
push
add
pop
mov
jmp
popf
xchg
inc
xchg
sbb
mov
cmp
ret
mov
dec
sti
mov
hlt
inc
lret
std
push
sub
rorb
mov
nop
cs
test
pop
xchg
int
mov
jns
popa
mov
pop
gs
sub
xor
and
push
sbb
sbb
mov
mov
mov
xor
xchg
fmuls
fisubrl
add
and
outsl
sbb
fisubl
ret
mov
inc
sahf
pop
imul
cld
jb
mov
test
hlt
dec
inc
and
popf
hlt
mov
dec
dec
icebp
ss
imul
or
inc
mov
arpl
mov
movsb
or
enter
pop
lods
and
movsb
leave
inc
inc
fisubrl
js
lahf
xor
cwtl
cltd
mov
push
sbb
mov
sarl
pop
jecxz
lds
lcall
cmp
adc
xchg
pop
jecxz
cwtl
xchg
inc
jg
dec
cmp
cmp
cltd
cmp
mov
lods
sub
daa
cwtl
paddd
ret
mov
int
sbb
iret
xor
ret
addr16
add
mov
fxch
ret
lahf
mov
mov
inc
mov
stc
mov
lods
lahf
cld
adc
leave
or
mov
push
repnz
add
std
push
cltd
gs
out
sahf
sub
xor
jmp
push
pushf
scas
xchg
sbb
out
adc
push
push
xor
cmp
daa
or
pop
cmp
jle
enter
fbstp
cltd
sahf
data16
loope
pop
add
in
xchg
ficompl
loope
in
mov
add
in
pop
mov
mov
in
clc
arpl
inc
int3
cmpsl
push
lcall
daa
jg
cmc
xchg
out
fs
adc
rcll
xlat
divl
sub
push
or
in
jns
cmp
jmp
sub
lret
mov
push
push
call
lods
dec
jno
rorl
lds
sbb
stc
adc
int3
jae
xchg
inc
push
sub
jns
and
lods
jle
sbb
cmp
sbb
cli
mov
mov
xor
xchg
je
aaa
sub
push
jns
or
cli
adc
add
xchg
fstl
push
cli
std
pop
inc
push
pop
icebp
cmpl
into
cmp
aaa
inc
dec
cpuid
fidivrl
adc
sub
sub
xchg
cmp
dec
enter
std
int
adc
fwait
or
add
xchg
adc
adc
fadds
out
mov
fmul
xchg
mov
lcall
addr16
lcall
int
mov
sub
popf
mov
loope
jnp
sbb
pop
stos
mov
mov
mov
cs
pop
jbe
add
cmp
lods
pushl
lret
cmp
fsubrp
fsts
ret
push
cmp
daa
std
shrl
dec
pop
cmp
lods
dec
mov
push
cmpsb
cltd
enter
fisttpll
pop
arpl
std
cmp
cmp
pop
pop
cmpb
imul
mov
adc
je
hlt
iret
mov
mov
add
xor
sarl
xor
negl
and
ficoml
scas
mov
xchg
add
shlb
xchg
sub
inc
out
pop
mov
inc
xor
xor
mov
inc
imul
mov
push
jnp
pop
in
mov
jo
jg
repz
cmp
scas
push
testb
dec
add
sbb
xchg
jb
stos
inc
inc
out
lods
xor
push
or
insb
sub
cmp
cld
xor
ret
adc
clc
mov
scas
rclb
call
sbb
push
cs
imul
push
insb
sbb
jne
pop
sbb
shrl
mov
outsb
pop
dec
cmp
mov
sbb
jp
push
lea
inc
shlb
sbb
lret
dec
aas
dec
das
outsb
data16
fisubrl
sub
cwtl
das
mov
imul
jns
sbb
mov
and
dec
inc
push
jge
es
add
pop
mov
test
xchg
or
jbe
xchg
pop
xchg
mov
aam
adc
rcrb
xor
push
call
in
subl
and
dec
cmp
inc
mov
fmuls
xor
fidivl
in
bnd
cmp
dec
fstp
and
sub
jmp
testb
je
mov
insb
ficomps
push
addr16
adc
push
or
call
xlat
mov
movnti
daa
int
mov
jnp
js
cli
jp
jg
out
out
ljmp
mov
sub
mov
dec
mov
xchg
xchg
int3
out
sub
and
lock
pop
and
xor
imull
push
popa
rcl
adc
cmp
lcall
inc
adc
xchg
inc
rcrb
imul
shr
mov
sub
cmp
push
cmp
mov
jp
mov
fadd
jb
stos
mov
adc
dec
and
mov
aad
mov
mov
and
push
daa
nop
enter
cmp
in
es
loope
cs
pop
sub
sub
arpl
testb
jnp
dec
shl
sub
push
dec
std
add
int3
jl
cmp
dec
aad
rcll
and
cmp
pop
aam
pop
mov
push
jecxz
adc
mov
cmp
inc
sub
and
xor
mov
test
sahf
adc
ret
adc
cltd
and
and
cmc
xchg
test
jno
fmulp
addr16
into
add
sahf
jge
fxch
imul
inc
pop
in
leave
add
lods
dec
and
cld
pop
fcompl
ljmp
popa
into
mov
sti
dec
add
aad
dec
add
inc
mov
push
ficomps
jno
test
lret
or
cs
mov
cmpsl
xchg
mov
fwait
rorb
sbb
syscall
lret
ja
mov
rclb
push
mulb
hlt
inc
add
jae
xchg
xor
pop
or
inc
and
inc
leave
inc
iret
repz
jecxz
push
imul
lea
fidivrl
dec
push
xchg
hlt
nop
push
sub
adc
js
sub
adc
sub
add
mov
stos
repnz
mov
jmp
add
clc
mov
pop
test
icebp
xor
shll
mov
cmp
outsb
test
adc
sbb
push
pop
or
mov
lea
mov
fsubp
xlat
and
test
sub
in
fstl
call
xchg
cli
mov
xchg
mov
or
pushf
gs
movsb
lret
ret
imul
pop
popf
sub
jg
hlt
aam
or
fwait
pop
cmp
test
and
in
push
adc
fistl
daa
scas
mov
lods
cmp
adc
imul
push
into
rcl
dec
data16
jo
insl
stc
shlb
cmpsb
sbb
or
test
or
push
pop
sub
jbe
jp
hlt
and
xor
push
mov
sbb
push
inc
dec
out
bound
push
test
xchg
and
aas
outsb
push
out
xchg
mov
sub
aaa
sbb
rcll
cli
mov
daa
and
jle
repnz
sub
aam
inc
cld
dec
into
push
out
scas
aam
dec
mov
mov
jmp
sub
pop
xor
inc
mov
jnp
outsb
pop
mov
mov
inc
shlb
div
out
lahf
lds
movsb
fldl
pop
cmp
mov
out
lods
sub
test
aad
mov
stos
fldcw
ja
xchg
jae
mov
jnp
iret
push
movhlps
fisttpll
ja
mov
xchg
xor
loop
and
adc
or
inc
dec
mov
and
sbb
test
ret
fwait
xorl
mov
mov
icebp
stos
sarb
adc
inc
mov
jge
and
aad
add
test
idivl
adc
jmp
mov
jge
in
inc
ficompl
jo
pop
xor
es
jge,pn
mov
aas
xchg
ja
sti
sti
test
shrb
xchg
shlb
sub
orb
add
jp
loope
stos
inc
outsb
in
popa
lret
jmp
int3
pop
mov
jg
mov
ljmp
mov
enter
lock
xchg
mov
add
xchg
xor
jp
add
bound
push
lret
mov
or
shr
gs
or
dec
sub
xchg
out
mov
lods
insl
mul
lret
popf
cwtl
inc
negl
movsl
and
mov
jmp
in
cmp
cmp
cmpsl
xchg
mov
pushf
jne
dec
pop
jg
jmp
outsb
lods
pop
das
xlat
cmpsb
cli
lods
mov
mov
sbb
sti
testl
jmp
xor
iret
jg
adc
sub
xchg
fwait
dec
sbb
faddp
adc
jle
inc
cmpl
xchg
mov
adc
mov
xor
sub
testb
popf
push
jbe
jmp
lret
mov
dec
or
gs
cmp
int
ja
inc
dec
les
fucomi
dec
xlat
out
cli
daa
jne
stos
jb
push
rcll
lock
stos
jnp
rorl
sbb
push
outsb
mov
sbb
jno
sbb
push
pop
sbb
cmpsl
fnstcw
xlat
std
lds
ja
fucomip
add
ret
adc
pushf
cmp
xchg
int3
jae
sub
push
pop
lcall
les
sub
jecxz
jecxz
stos
pop
pop
rorl
ret
jecxz
mov
sub
xor
sbb
sbb
sbb
add
xchg
adc
jb
out
push
xchg
push
pop
cmpsl
sbb
mov
fnstcw
xchg
aam
mov
in
out
mov
dec
es
adc
push
int3
xor
mov
mov
push
push
sub
adc
jmp
inc
push
adc
xor
push
pop
iret
dec
cld
dec
hlt
cmpsl
push
sbb
jg
dec
sbb
in
fistpl
fidivrl
loopne
push
jnp
sbb
pop
ret
inc
add
mov
lret
pop
pop
mov
dec
sti
jo
aas
pop
lret
les
dec
arpl
push
sub
pop
inc
pop
fsubs
pop
mov
and
and
pushw
xor
xchg
push
hlt
cmp
mov
imul
adc
adc
push
xor
jl
xor
push
dec
sub
les
xor
and
mov
imul
jl
push
xor
cmpsl
es
adc
cmp
cmpsl
popa
mov
lods
and
mov
xor
and
inc
std
inc
or
outsl
mov
xchg
rol
jb
testb
inc
pop
gs
sub
daa
loope
push
stos
and
fwait
imul
nop
cmp
xor
jmp
je
popa
add
clc
jno
loope
repz
pop
mov
inc
and
sbb
std
scas
ljmp
std
jo
xchg
push
adc
sbb
mov
adc
out
jle
lahf
int3
negl
leave
cli
cmp
dec
cmpsl
cmp
rcrl
scas
mov
clc
mov
outsb
ret
cs
bound
sub
ror
rolb
pop
insb
inc
daa
xchg
mov
gs
in
jns
out
sbb
iret
insl
push
pop
mov
push
dec
mov
dec
fbld
ret
push
adc
mov
rorb
sub
stc
js
cmp
lret
loope
or
lock
leave
jp
push
leave
xlat
inc
sti
loope
into
gs
es
mov
cltd
jae
fdivl
inc
loop
mov
sarb
lahf
imul
jae
jl
fs
inc
cwtl
mov
xchg
jnp
ficompl
test
je
orb
in
add
xor
jp
pop
and
fmulp
test
pop
cmp
stos
pop
repz
enter
jecxz
inc
xor
adc
insl
adc
rcrl
add
pop
lods
enter
lods
mov
dec
mulb
mov
mov
into
ljmp
mov
nop
outsb
or
and
data16
dec
jle
mov
fstl
test
jo
push
sbb
mov
sbb
call
cmpsb
cmp
ljmp
jmp
and
xor
daa
out
sbb
mov
adc
push
outsl
test
flds
mov
add
in
pop
out
or
push
xchg
pop
cld
into
jl
in
mul
enter
adc
adc
sar
add
aad
es
pop
xor
jl
dec
sbb
dec
sub
and
sub
pop
pusha
iret
outsb
mov
xor
mov
clc
add
rorl
mov
push
mov
pop
imull
hlt
cmp
add
aad
sbb
ret
mov
mov
pop
lds
push
leave
pop
mov
xor
repnz
xchg
xor
lds
mulb
xchg
jmp
sbb
dec
xor
popa
mov
clc
shl
das
fiaddl
mov
mov
dec
imul
js
sub
shrl
gs
int
out
loopne
cmp
pop
loop
test
stos
push
fcmovne
push
sub
push
cmp
sub
lret
arpl
shrb
shll
rorb
dec
push
pusha
mov
sbb
jmp
mov
cmp
test
mov
shlb
push
xlat
push
add
inc
mov
cmp
bound
jmp
icebp
add
xchg
xor
dec
xchg
fnstsw
xchg
jle
inc
rolb
in
sub
inc
push
xor
shlb
movsb
test
addb
insl
int
enter
push
sbb
sub
dec
push
mov
adc
aaa
adc
push
cmp
js
stos
in
imul
or
cmp
dec
inc
cltd
add
es
lods
xchg
adc
pop
rcl
xor
adc
lret
in
out
insl
sbb
rorb
sbb
jmp
arpl
insb
test
outsl
nop
mov
in
mov
imul
cmp
data16
mov
push
loope
cmp
bound
insb
xchg
lods
xchg
jns
mov
mov
bound
out
in
push
add
pop
rorb
xchg
mov
cli
test
test
push
enter
sbb
xchg
jo
push
ss
daa
push
addr16
jecxz
popl
jmp
cmp
jmp
cld
jp
mov
fsubl
mov
dec
xchg
ja
movb
mov
aas
inc
nop
dec
out
jp
push
cli
dec
add
pop
xor
adc
aam
or
mov
sub
mov
xor
add
fs
xor
or
hlt
push
sarb
insb
cmp
clc
inc
sub
or
or
call
adc
pop
sahf
mov
out
int3
mov
adc
ror
push
push
ret
loope
enter
dec
add
pop
push
adc
je
out
cmp
out
jns
jmp
add
test
add
push
mov
or
cltd
enter
pop
std
cmpsl
lds
and
cmp
pusha
mov
or
fs
pop
sub
push
jmp
pop
pushf
sbb
or
mov
add
nop
call
loope
addr16
and
lds
pop
repz
cmpsl
pushf
ret
loope
push
out
add
test
or
rol
inc
shll
lret
rclb
push
push
ja
fimuls
push
inc
mov
push
fcomps
jmp
int
and
cmp
lock
test
cmp
pusha
sub
test
jmp
xor
mov
mov
hlt
das
pop
out
ljmp
je
xchg
mov
inc
mov
or
imul
inc
pop
inc
add
add
loope
das
call
ja
jnp
jne
cmp
arpl
movlps
dec
add
xor
out
mov
loopne
cmp
pop
lret
mov
pusha
loope
adc
dec
mov
cmp
sub
pop
out
aaa
jae,pt
xor
aas
and
or
sbbl
adcb
xchg
out
loop
pop
pop
mov
mov
popf
stc
mov
test
mov
xchg
mov
cmp
iret
mov
aad
add
ja
inc
out
jp
icebp
mov
xlat
xor
in
stc
or
std
les
inc
jl
sbb
movsl
stos
stos
and
out
lds
xchg
jns
aam
fldenv
adc
in
push
or
cs
mov
fidivrs
cmpsb
pop
movsl
push
push
push
pop
xlat
add
sbb
into
int3
jae
mov
adc
cmpsl
pop
mov
in
loope
jnp
and
inc
xchg
mov
mov
mov
iret
mov
sbb
xchg
push
imul
pop
orl
cmc
jmp
fldenv
dec
mov
dec
shll
addr16
add
push
cmp
std
popa
xchg
or
mov
mov
scas
add
shll
imul
rorl
sbb
ret
jo
push
adcb
stc
dec
jge
add
adc
push
stos
sub
fwait
push
xor
call
push
mov
add
xchg
sub
lds
xor
or
jno
sahf
shlb
and
aad
movsl
data16
in
int
data16
mov
mov
push
insb
jge
ljmp
mov
stos
test
test
push
push
push
cmpsl
xlat
mov
xchg
mov
ja
inc
cmp
daa
mov
stos
or
push
ret
and
jle
jmp
and
push
dec
mov
push
enter
sbb
sti
int
xor
or
add
out
repnz
sahf
xor
movsl
roll
out
sbb
cli
mov
mov
dec
or
mov
je
mov
xor
mov
add
dec
fsubrl
fldt
loopne
stos
insl
xor
int
dec
fwait
xor
cli
mov
sub
rolb
sub
lret
dec
imul
loop
jae
in
mov
movsb
cmp
push
mov
int3
xor
push
xchg
cmp
jae
sbb
iret
push
lcall
add
aad
xchg
and
mov
andb
pop
rcr
ds
sbb
and
inc
bound
sub
fsubs
jl
jo
push
sub
aam
jp
repnz
test
jnp
jnp
inc
mov
sub
jnp
jnp
adc
lds
out
lcall
jle
pop
sbb
imul
inc
lcall
ja
push
loope
or
out
push
insl
cmp
shll
and
les
ja
sbb
push
bound
and
sbb
fsubrp
out
jmp
fcmovbe
pop
movsl
pop
iret
int
and
aad
mov
inc
mov
cmpl
pop
lock
scas
xor
loop
mov
mov
inc
jb
xchg
sub
inc
jecxz
outsl
jecxz
arpl
push
pop
pop
inc
pop
sub
cmp
daa
adc
push
xchg
pop
sbb
int
rclb
pop
fdivrl
cld
jmp
dec
dec
adc
mov
sbb
icebp
mov
shlb
and
cld
mov
mov
fistps
addr16
out
cmp
xorb
mov
inc
mov
leave
cmpsl
xchg
and
sbb
dec
roll
fcom
adc
inc
pushf
mov
adc
lock
xor
outsl
cmp
jae
adcb
fimull
loopne
fstl
and
cmp
test
xorb
sub
sub
jno,pn
lds
xorl
out
xchg
inc
xlat
dec
in
sbb
sub
and
dec
jg
aam
jmp
pop
push
cmp
lea
hlt
mov
sub
icebp
movsb
fwait
adc
lret
movsl
pop
cmp
repnz
aaa
adc
add
repnz
ja
sbb
cmpsb
cmp
push
and
jmp
fdivr
pop
in
ljmp
aas
rorl
sub
dec
int3
insl
push
jo
in
cwtl
lock
xor
pushf
adc
cmpsb
mov
incl
subb
in
addb
xchg
or
mov
mov
cmp
dec
aaa
mov
cwtl
pop
add
jbe
out
mov
pop
jae
sub
sbb
pop
jg
pusha
cmp
add
xorl
or
add
lock
lds
ds
aas
mov
dec
add
fsubr
xchg
jle
or
loopne
arpl
out
lret
jb
fldenv
sub
jmp
hlt
out
cli
dec
outsb
mov
pop
les
sub
ret
jle
pusha
movsb
aam
adc
mov
dec
mov
xchg
xchg
pop
outsl
stos
and
push
mov
cmp
pop
dec
mov
jge
xchg
dec
rolb
cwtl
cs
movsl
call
mov
jg
cmp
jo
or
or
jae,pn
pop
sbb
inc
pop
mov
lods
jbe
iret
mov
fs
pop
push
shll
test
mov
insl
and
shll
lods
in
test
pop
xchg
xchg
mov
cmp
xchg
mov
and
lret
lcall
pop
lods
scas
leave
dec
xchg
out
cltd
push
cmp
movsl
outsl
les
cld
into
pop
shrl
and
rorb
fdivrs
xor
jg
pop
sbb
xor
out
pop
push
fistpll
stc
hlt
jge
ret
bnd
adc
xlat
rclb
lahf
dec
xor
test
push
bound
push
mov
sub
sub
test
test
jle
pop
mov
push
test
arpl
pop
add
and
clc
jl
mov
cmpsb
jmp
push
xchg
jmp
adc
call
pop
nop
mov
into
xor
dec
enter
inc
jg
inc
rorl
push
adc
push
jno
scas
dec
std
jmp
ljmp
lea
movsl
rclb
cwtl
jno
xchg
or
mov
aad
je
in
pop
jmp
xchg
insl
iret
nop
fnsave
adc
push
call
pop
cmpsb
test
std
lock
test
cli
mov
xchg
mov
rcrl
push
std
inc
lds
adc
adc
sahf
sub
lock
test
cmpb
idiv
or
push
adc
jns
adc
jo
xchg
mov
sub
lret
movsl
xchg
mov
mov
mov
mov
jecxz
das
call
out
loopne
xchg
add
test
and
mov
aaa
mov
sbb
jnp
add
aas
add
rclb
addr16
imul
mov
or
xchg
and
bound
and
nop
leave
jb
aam
mov
push
sbb
fisttps
dec
popa
shrl
stos
nop
inc
fsubr
push
adc
add
lcall
fists
xchg
sub
popf
or
stos
mulb
pop
out
sub
mov
aaa
lock
das
test
mov
iret
ret
push
clc
mov
cmp
in
ljmp
repz
dec
pop
icebp
sar
gs
add
mov
jnp
cmpb
xchg
cmpsb
add
shrl
imul
aad
mov
hlt
bnd
sahf
and
stos
or
pop
inc
ss
push
push
ror
in
sub
push
dec
mov
jge
pushf
jns
mov
xor
int3
int3
sub
icebp
xor
xor
out
or
cmpsl
cs
pop
mov
addl
add
icebp
jmp
inc
popa
sub
push
push
sub
inc
mov
push
rcll
jns
sbb
insl
jns
int
or
xchg
sbb
pop
add
ds
inc
or
sub
shll
stos
ret
push
push
repnz
sbb
dec
xor
cmp
cmp
call
mov
push
hlt
cs
xchg
test
pop
movl
pushl
in
jo
test
fwait
jne
iret
cld
jmp
adc
lock
inc
and
mov
shrb
mov
fucomp
mov
cmp
push
sub
pop
push
and
outsb
es
inc
pop
mov
cld
ljmp
cmpl
push
cltd
popa
mov
xlat
ficompl
push
repz
movsb
mov
scas
daa
hlt
aam
and
out
fcomi
mov
inc
dec
inc
xor
push
mov
push
cmp
push
mov
stos
or
aaa
decb
enter
push
push
jns
sbbl
cs
andb
fwait
shll
sbb
xor
fwait
mov
cmp
dec
and
cmpsb
xchg
and
dec
xor
imul
xchg
jo
stc
xor
sub
add
sahf
addb
shll
sub
es
imul
sbb
sub
test
scas
test
jno
insb
jno
leave
addr16
push
test
pop
daa
in
hlt
jne
cmpsb
add
out
and
mov
and
pop
xchg
gs
imul
ficomps
xor
pushf
inc
push
and
sbb
adc
dec
rcrb
pop
out
aam
por
mov
pop
mov
sbbl
stos
aas
fisubrl
sub
pop
xchg
add
inc
mov
or
mov
out
ficoml
dec
and
divl
cld
xor
add
adc
mov
test
cld
in
mov
cmc
add
or
dec
fisttps
pop
and
mov
adc
xchg
ljmp
xor
push
orl
or
into
push
inc
mull
push
jo
popf
jne
sbb
mov
xchg
int3
repz
outsl
test
push
inc
inc
popa
aad
and
inc
mov
ret
mov
pop
sahf
push
cld
or
lea
mov
inc
cmp
add
or
push
pusha
jo
insb
push
popa
and
xlat
and
mov
and
xchg
mov
lea
cwtl
xorb
fsubs
add
mov
pop
push
adc
pop
dec
in
out
mov
xor
inc
xchg
lods
ljmp
xchg
pushf
cmp
int
aam
xchg
insl
negl
inc
push
cld
outsl
adc
inc
cmp
stos
mov
dec
popa
sub
movsb
psllq
iret
in
lds
fistpl
pop
rol
into
sub
add
lahf
jb
jl
arpl
jns
xor
cmp
push
push
pop
int
je
sbb
pop
mov
dec
ljmp
ret
movb
xor
daa
test
add
adc
mov
mov
and
fwait
add
inc
pop
mov
test
divl
sub
and
adc
mov
inc
call
add
add
cld
pextrw
das
adc
sub
aas
jae
test
fcoms
lock
cwtl
and
pop
insl
dec
in
lods
pop
das
aam
sub
add
cmp
cmpsb
cmp
push
cmp
je
add
orb
inc
cmpsl
orb
cmp
xchg
popf
test
testl
iret
lock
shr
push
mov
adcl
rorb
inc
add
mov
mov
cmp
jg
dec
hlt
out
jo
into
sarl
xchg
aaa
jnp
sub
cltd
stc
dec
mov
and
mov
mov
loop
push
jle
push
sbb
sbb
adcb
cmpsb
xchg
scas
lods
and
or
mov
and
popa
pop
ljmp
and
neg
int
dec
xor
fsubr
sbb
mov
leave
in
enter
nop
dec
insb
cmp
lds
ljmp
push
sbb
pushf
or
mov
or
cs
out
popf
mov
int3
mov
loope
mov
int3
addr16
push
leave
push
mov
dec
add
sbb
jb
stos
outsb
cmp
or
fdivr
shrl
mov
lret
cs
mov
xchg
xchg
test
outsl
inc
mov
setg
mov
test
and
imul
push
xchg
enter
imul
inc
cld
push
arpl
cli
sub
sub
cmp
gs
mov
pop
push
jecxz
mov
inc
and
or
in
xchg
mov
ja
mov
jge
pop
push
xor
adc
adc
call
mov
arpl
add
test
cmp
xor
jp
out
jl
or
push
daa
or
mul
push
ja
addr16
xchg
clc
rcrl
fs
xchg
adc
imul
lock
dec
xchg
mov
inc
sbb
clc
xor
adc
dec
dec
stos
insl
cs
sbbb
and
inc
daa
sti
sahf
int
dec
mov
and
xlat
out
rorb
jbe
dec
out
popl
sub
leave
mov
ror
push
push
mov
xchg
shlb
xchg
and
popf
outsb
fstps
stc
sbb
leave
testl
and
outsl
call
pusha
sarl
dec
sbb
pop
pop
and
xlat
into
sbb
pop
test
sbb
pushf
mov
xchg
incl
in
jno
clc
inc
arpl
add
adc
outsl
lea
mov
dec
ljmp
push
dec
mov
in
xor
aam
cltd
sarl
shlb
xchg
adc
aad
mov
inc
mov
fbstp
push
cmpsl
dec
adc
jl
jno
xor
nop
and
movsl
lods
add
jo
mov
lcall
sbb
or
adc
adc
cmp
adc
dec
push
inc
and
popf
mov
pop
lcall
scas
mov
or
daa
data16
sbb
add
lcall
pop
fldcw
lret
xchg
stos
cmp
ljmpw
xor
repz
mov
jae
jb
sti
adc
fdivr
jge
cmp
inc
popf
dec
add
out
xchg
xchg
fldl
leave
fprem
in
sbb
pop
add
mov
xor
push
repz
mov
push
sbb
jge
fs
in
and
fwait
mov
add
or
ljmp
cmp
repz
pop
lea
incb
pop
clc
xchg
repnz
xlat
in
or
fsub
adc
xchg
mov
mov
adcl
lods
mov
insb
pop
mov
xchg
mov
sarl
rol
sub
push
cmc
jae
push
stc
aaa
push
mov
scas
adc
div
sub
mov
in
cmpsb
mov
insb
subb
cltd
fwait
shlb
push
pop
cltd
jge
adc
push
out
and
in
ljmp
sti
or
cmp
fstpl
daa
mov
loopne
sub
nop
fisttps
xchg
jns
cmp
sub
jecxz
stc
lret
andps
or
out
xchg
mov
int
subl
scas
cs
mov
jnp
sub
xlat
dec
xor
cmp
call
mov
mov
nopl
pop
and
sub
add
repnz
sbb
loop
imul
add
dec
in
pop
arpl
ret
movsb
test
mov
mov
mov
pop
inc
sahf
xchg
or
outsl
mov
out
push
and
sarb
outsl
int3
leave
jb
dec
ds
rcl
pop
out
jo
cmp
xor
mov
pop
int3
jge
dec
das
stos
es
scas
dec
sbb
in
aam
iret
dec
xchg
push
pop
insl
fisttpll
and
clc
popf
push
sbb
out
cmp
jnp
pop
push
out
jne
lea
mov
push
in
mov
in
xor
push
jmp
out
jl
mov
inc
leave
stos
jae
mov
and
loopne
and
sub
add
lock
xchg
jne
sub
lods
dec
or
rolb
mov
test
jno
ds
ljmp
lock
dec
xchg
xchg
mov
mov
testb
pop
and
mov
push
pop
vaddpd
rorl
nop
jno
inc
test
adc
or
xor
add
jbe
test
dec
into
cs
cmp
mov
pop
or
xor
enter
pop
xchg
xor
movl
adc
dec
adc
push
jo
inc
insl
mov
mul
cld
mov
leave
mov
rclb
xchg
out
cmpsb
lcall
push
mov
ds
shlb
sbb
jns
sub
out
pop
push
mov
out
jle
mov
pop
pop
cmp
xchg
icebp
push
loopne
mov
mov
test
mov
sti
test
adc
xor
cli
pop
jno
xor
add
mov
loope
scas
lret
scas
xchg
push
and
sub
mov
and
pop
mov
inc
insb
sub
bound
cli
xchg
push
push
pop
mov
sub
enter
mov
aas
popa
adc
and
in
inc
in
jb
xorl
xchg
insb
jp
repz
mov
or
iret
repz
repz
jle
sbb
aam
fsubr
pop
jecxz
cld
mov
lret
insb
or
sbb
lret
psllq
inc
xor
pop
pop
sbb
pop
xor
cltd
push
cwtl
jnp
sub
dec
dec
popf
xor
lea
mov
add
sbb
insb
mov
cmc
dec
out
into
add
arpl
sarl
cmp
inc
ss
addl
cltd
dec
roll
mov
icebp
cmp
xor
xchg
jmp
sbb
push
mov
daa
decl
push
cmp
test
jp
sti
clc
arpl
jb
inc
dec
cld
pop
cmp
xchg
jecxz
cmp
fdivrl
xchg
fsubs
aas
inc
mov
jecxz
adcb
adc
out
push
or
adc
popa
aaa
jb
mov
das
rorb
pop
fwait
loop
cmpsb
roll
push
scas
movsl
imul
outsl
xchg
les
daa
add
leave
aaa
jmp
pop
clc
or
int3
add
mov
push
adc
imul
sub
cmpsb
stc
rcrb
jmp
mov
das
xor
adc
dec
rcrb
push
dec
cmpsb
push
xor
inc
push
dec
imul
cmp
pop
sub
fbstp
out
lret
push
int3
fidivs
push
push
mulb
inc
dec
and
fdivp
ror
jmp
xor
sbb
pusha
fadd
add
or
jg
push
lods
sub
aad
mov
push
js
pop
fstl
fimuls
push
mov
jb
sub
mov
jns
push
sbb
mov
fmull
mov
xchg
cmc
add
fldt
mov
mov
cmpb
push
or
mov
inc
xchg
enter
cs
movsl
adc
jno
jl
jle
sbb
jne
mov
jecxz
sbb
mov
push
insb
ljmp
inc
push
pop
scas
push
jecxz
sub
dec
or
mov
sub
dec
mov
outsb
test
iret
lods
inc
mov
into
sbb
push
icebp
out
add
pop
add
push
test
clc
test
dec
sti
sub
lret
sub
das
fnstsw
sub
clc
ljmp
inc
sub
mov
rcl
jp
push
sub
mov
into
dec
xchg
xchg
inc
addl
loop
push
mov
repnz
pop
push
data16
sub
pop
jbe
movb
jmp
outsl
mov
out
daa
jmp
std
cmp
data16
dec
insl
push
push
adc
pop
cmp
cmpsb
testb
or
mov
xchg
cmc
aaa
out
mov
sti
sbb
jbe
mov
ss
stos
mov
fiadds
pushf
adc
out
mov
jg
addr16
push
insb
fcompl
sbb
clc
je
ror
std
cld
fdivr
push
or
enter
mov
lahf
mov
and
mov
push
into
jno
adc
loop
xchg
jb
sbb
into
sub
sbb
push
dec
cmp
mov
loopne
add
mov
enter
ret
test
std
aam
int
inc
stos
mov
stc
and
je
out
xchg
push
adc
mov
pop
push
mov
cmp
xor
mov
fcmovne
mov
mov
gs
mov
lcall
dec
ljmp
mov
jle
and
jge
movsl
and
loop
stos
ret
mov
xor
shll
jo
cmp
xchg
dec
cwtl
xlat
adc
insl
dec
sahf
cmpsb
roll
mov
xor
cwtl
xor
cs
stos
xor
js
not
xlat
and
arpl
push
ret
imul
test
out
mov
mov
iret
mov
jbe
mull
ret
insb
loope
add
pop
xchg
pop
xchg
adc
cmp
rcl
imul
xchg
adc
stos
mov
test
inc
mov
dec
mov
lret
fwait
lods
sbb
insl
dec
xchg
mov
cld
and
mov
out
ss
push
xchg
xor
xor
mov
sbb
je
push
sbb
fwait
rclb
sbb
test
cmovp
dec
daa
mov
ljmp
push
add
and
outsl
xchg
inc
pop
loope
call
or
repz
sub
subb
movb
sub
sti
xchg
nop
repnz
xor
jb
das
fisttpl
cld
aad
dec
in
xchg
popf
mov
push
pop
push
sti
pop
or
lds
dec
test
jle
aam
sarb
dec
xor
movsb
imul
rolb
adc
xor
repz
test
mov
aad
xchg
in
mov
stos
sub
js
push
aaa
loop
adc
cmp
fwait
sub
mov
out
pop
jg
dec
pop
int3
sbb
clc
pop
hlt
push
inc
mov
jno
and
icebp
aam
xchg
ret
push
outsb
xor
cwtl
stos
mov
shl
ret
dec
dec
xor
xchg
jne
push
pop
imul
cmp
je
mov
and
iret
lods
mov
inc
clc
mov
jp
add
jmp
in
add
mov
jge
lds
psubusw
add
inc
xchg
test
hlt
jg
das
outsl
inc
flds
push
xchg
push
mov
and
xlat
leave
mov
mov
xchg
xchg
call
jecxz
cmpsb
enter
mov
or
lods
pop
cmpsl
stos
pop
pop
xor
in
pop
mov
shl
xor
sahf
sbb
fs
cmpsl
pop
push
xchg
sbb
ds
mov
sbb
leave
dec
jg
clc
nop
faddl
inc
and
das
rolb
sbb
popa
pop
jp
mov
mov
int3
ret
jge
ja
add
mov
ror
mov
xlat
adc
jbe
icebp
mov
cmpsl
mov
xlat
rol
sbb
aad
cmp
sub
iret
jg
aaa
push
in
jmp
adc
sarl
jb
mov
or
subb
dec
fs
inc
jle
mov
call
sbb
sub
mov
int
mov
cmpb
lahf
mov
mov
cmp
div
mov
push
jno
xor
inc
push
xor
jno
pop
fwait
push
jge
mov
xlat
inc
rorl
andl
jg
cmp
dec
fimuls
popf
push
and
mov
scas
or
or
aad
jl
arpl
add
cmp
pop
push
mov
ljmp
cmp
popf
inc
shl
je
lods
pop
ret
int
ret
arpl
clc
rolb
sub
bound
cmpsl
cltd
enter
int
jb
sub
and
cmpsb
cmpsb
push
dec
stos
repz
sub
sub
mov
cmp
dec
popf
pop
dec
mov
inc
pop
scas
arpl
cld
rcll
adc
mov
mov
icebp
cmp
cwtl
or
jbe
outsl
loop
add
fisttpl
mul
push
icebp
inc
mov
mov
cmp
jae
cmc
adc
fnstcw
adc
dec
pop
or
adc
das
lret
push
adc
pop
jnp
mov
ja
ljmp
cmp
inc
jnp
mov
or
sub
cmc
pop
sub
adc
pop
ret
lret
cld
div
inc
sub
pop
lods
lods
cmc
xor
mov
ja
xchg
adc
push
xchg
push
lcall
test
sarl
adc
es
test
scas
add
pmulhuw
fstpt
or
and
pop
test
dec
push
mov
in
add
cs
sbb
enter
xor
das
int
insl
cwtl
xor
mov
lret
jg
popf
das
js
xor
jecxz
rclb
jg
add
mov
pop
mov
punpckhdq
cmp
pusha
add
shl
les
mov
push
jecxz
mov
jns
inc
add
xchg
sub
popa
mov
mov
into
pop
rolb
in
loope
xor
iret
jl
mov
pop
mov
sbb
les
xchg
xchg
insb
or
jle
mov
fsub
add
or
mov
faddl
cmovge
in
fmull
icebp
push
sub
inc
lahf
or
cmp
gs
mov
aam
in
mov
and
out
bound
ficompl
jno
xchg
inc
and
jb
or
lret
es
pop
pop
xchg
das
push
scas
and
clc
mov
pop
and
arpl
pop
mov
iret
pop
sub
pop
lock
popf
jecxz
test
movsl
sub
movb
ret
xor
and
shlb
leave
cld
ljmp
rolb
xchg
lahf
mov
xchg
ret
fildll
mov
mov
xchg
inc
adc
add
and
push
xchg
fldenv
and
adc
in
leave
xchg
pop
pop
push
xchg
sbb
mov
je
xchg
enter
push
stos
jbe
dec
stos
cvtdq2ps
insb
pop
cmpsb
pop
xchg
pop
sub
jb
movsb
push
mov
sub
repnz
rcll
adc
mov
dec
call
push
enter
dec
pcmpgtw
xchg
fwait
sub
pop
cltd
cltd
inc
pop
ljmp
jmp
jmp
jl
mov
push
dec
push
into
icebp
ficoms
adcb
pop
outsl
jmp
add
jmp
xchg
mov
shlb
mov
xor
iret
push
call
popa
push
out
and
add
insl
pop
cmp
jno
aas
fisubl
insb
idivl
ljmp
fists
rclb
ljmp
repnz
mov
pop
jb
cmp
push
and
mov
stos
sbb
mov
mov
sbb
call
inc
cmc
push
xchg
inc
push
sahf
fildll
cmp
bound
aaa
pusha
sbb
repz
and
or
and
test
daa
leave
and
pusha
push
fwait
mov
lret
push
ret
mov
lods
add
jmp
in
or
aas
xchg
dec
or
ret
xor
fs
std
cli
or
imul
hlt
push
or
add
mov
adc
jl
cltd
sarl
pop
popl
into
lods
rorl
nop
sti
fwait
pop
sar
pop
jne
jle
cltd
xor
jnp
add
int
je
fiaddl
repz
cld
push
movsb
imul
adc
cmpl
xor
sub
in
or
dec
loope
in
out
popa
jns
dec
das
repz
sbb
in
in
nop
pop
jb
call
mov
adc
xchg
push
pop
xlat
jo
iret
je
scas
test
cmp
scas
push
cmp
inc
and
lret
ror
mov
mov
orb
test
jo
push
shll
mov
adc
pop
cmp
mov
pop
xor
dec
mov
sub
data16
in
push
or
cmp
push
and
push
cli
cmpsb
dec
lods
mov
adc
sbbb
lret
insb
cmp
push
ja
dec
pop
xlat
roll
jmp
ljmp
mov
daa
mov
dec
pop
xor
and
lcall
inc
clc
shl
inc
sbbl
insl
cmp
sbb
ja
cmc
jne
push
pop
push
aaa
out
cmp
das
lcall
inc
adc
pop
stc
pusha
fyl2x
shrb
adc
stos
sub
xchg
insl
xor
fcmove
pusha
or
or
popa
mov
xchg
push
daa
pusha
ficoml
into
cld
xchg
out
sti
xchg
daa
sub
xchg
push
insb
push
xor
cltd
and
sbb
mov
mov
std
and
ja
nop
pop
movsl
adc
dec
popa
xchg
cmp
adc
sbb
pop
pop
pushw
lahf
pop
cmpsb
sbb
pusha
push
out
enter
repz
xlat
push
sub
test
fnstenv
scas
push
mov
mov
pusha
imul
aam
push
mov
dec
rclb
clc
mov
fsubrl
push
and
pop
out
shlb
jbe
push
and
pop
jb
dec
jns
int3
aas
dec
stos
es
imul
stc
ja
dec
repz
jle
mov
sub
or
cmp
cmp
stos
jl
push
inc
sbb
clc
test
add
cs
std
cmpsl
dec
stos
dec
int
jge
imul
mov
jne
aas
minps
ljmp
test
cmp
clc
shlb
in
jns
push
daa
push
xchg
xchg
xchg
popa
push
push
icebp
add
pop
mov
fs
iret
dec
and
jnp
lods
pop
xchg
pop
cmp
insb
inc
jmp
adc
mov
insl
sbb
xchg
repnz
ret
dec
inc
popf
adc
fnstsw
pop
push
jns
out
scas
fdiv
in
outsb
aas
test
inc
dec
fwait
fs
scas
subb
aas
sub
inc
sbb
jae
cmp
cmc
je
arpl
mov
mov
in
in
jl
jae
stos
into
xchg
insb
xchg
nop
data16
popf
hlt
decb
add
repz
pop
repz
inc
cwtl
pop
iret
sbb
aad
in
ret
cmp
mov
dec
hlt
pop
jp
dec
pushf
cmpsl
clc
push
dec
xchg
test
out
add
or
pop
rolb
xor
sub
data16
insb
clc
xchg
push
add
jb
rorb
iret
dec
call
and
je
fs
loope
push
aas
sbb
inc
iret
iret
adc
jl
scas
test
dec
cmp
jno
mov
pop
pushf
repz
push
add
mov
test
xchg
mov
add
add
xor
jge
xchg
pop
add
or
xor
fstl
or
dec
mov
and
in
out
and
xor
icebp
insl
mov
inc
enter
jl
stc
sub
dec
mov
xor
xor
push
popf
es
lock
mov
push
push
outsl
ret
mov
push
scas
and
pop
subb
cld
pop
fstl
inc
cmp
sbb
rcrb
and
mov
xor
pop
mov
movsl
push
pop
dec
xchg
fistl
lret
and
push
iret
hlt
push
or
jb
sbb
outsb
mov
out
xor
shrb
adc
fucompp
push
lds
mov
jle
cmp
jbe
mov
in
sub
mov
hlt
out
loop
mov
or
pusha
inc
fsubr
jb
loop
jb
xlat
hlt
iret
lahf
cmpsb
dec
dec
xorl
xchg
sbb
xchg
push
mov
loopne,pt
mov
or
adc
dec
jo
outsl
push
push
imul
and
push
leave
mov
push
addr16
add
repz
cmp
mov
sbb
jmp
fisubl
fs
or
pusha
push
push
movsb
lock
adc
cld
push
outsl
cmp
inc
fwait
xor
push
dec
mov
mov
subb
js
lret
aas
lds
or
push
mov
lret
daa
mov
pop
push
push
stos
push
leave
push
sbb
mov
cmp
and
andb
cld
fiadds
dec
sub
mov
imul
or
cltd
cmc
lock
pop
testl
adc
add
sbb
test
pop
adc
xchg
imul
sub
hlt
and
jecxz
or
or
add
ret
addr16
xchg
xor
fldenv
in
inc
sti
mov
int
in
push
test
or
and
clc
lds
rcrl
push
lock
add
out
pusha
jl
stos
or
inc
inc
jno
popf
cmp
dec
test
mov
pop
push
ss
popa
orl
jb
mov
out
sbb
or
inc
mov
jg
sub
sbb
out
or
test
cmp
pop
xor
popa
xchg
xchg
push
nop
or
adc
outsl
jmp
cltd
das
sbb
shr
jge
mov
mov
iret
jae
add
push
jle
sbb
xchg
adc
aad
push
loopne
adc
adc
testb
je
ret
xchg
xchg
je
ret
and
jcxz
pop
pop
push
mov
mov
stos
mov
add
add
sti
mov
push
bound
mov
cli
and
into
nop
ss
inc
loop
dec
ret
out
idiv
stos
popa
out
sbb
jmp
jmp
int3
or
pop
push
xchg
cwtl
inc
cmp
neg
test
xchg
shrl
fsubrs
in
and
std
das
cmp
mov
dec
pusha
or
cmpsb
dec
cld
ss
outsl
jge
mov
jne
loope
push
scas
pushf
dec
pop
mov
insb
cli
mov
mov
sbb
mov
pop
aam
jle
je
int3
inc
rcr
mov
pop
pop
sub
cmp
repz
shll
jmp
lds
dec
pop
hlt
fmuls
xchg
jmp
imul
test
mov
call
mov
mov
mov
subb
imul
mov
jo
aas
test
push
cli
dec
fwait
pusha
int
mov
std
mov
decl
jb
add
das
jecxz
mov
pop
lock
adc
mov
pop
or
add
xor
je
sub
add
dec
add
xor
and
jmp
daa
loope
test
test
cwtl
movsb
lock
mov
add
jecxz
inc
adc
mov
lods
aaa
int
cmp
pop
xlat
push
cmc
or
cli
outsb
dec
fwait
xchg
xchg
arpl
sbb
cmp
cs
mov
cmp
and
addr16
sahf
mov
insl
inc
aam
cltd
sub
or
jne
pop
sub
popa
xor
xchg
sub
or
inc
jmp
lea
add
in
jg
es
into
add
push
dec
outsl
pop
adcl
aaa
hlt
xchg
lds
push
sti
fdivs
cmpsb
or
add
test
mov
mov
movsb
xor
test
and
dec
inc
ja
out
inc
mov
test
aad
jo
ljmp
add
xchg
fcomps
lcall
sbb
pop
jno
jo
fldcw
jecxz
test
add
arpl
mov
xchg
lods
fnstcw
daa
fldln2
push
mulb
aad
or
scas
xchg
sbb
das
dec
jg
add
push
push
into
xchg
mov
xchg
leave
addr16
dec
dec
xor
lods
aas
clc
sbb
inc
data16
mov
pop
push
lods
data16
repz
fidivl
inc
sub
push
iret
and
pop
scas
add
aas
or
dec
sub
xchg
repz
or
lods
aam
mov
ljmp
xchg
imul
sub
cmp
lcall
scas
pop
push
inc
scas
rol
inc
out
pop
mov
out
popf
cmp
rcrl
xchg
repz
jne
movb
stos
jne
mov
mov
in
xchg
fiadds
inc
rcll
inc
adc
push
cmp
push
mov
leave
mov
xchg
lods
sbb
pop
sub
ficomps
rcr
sbb
sbb
add
jp
xchg
dec
push
inc
mov
mov
icebp
xchg
mov
jge
data16
pop
cltd
jge
sbb
pop
test
sbbb
aas
stos
adc
inc
jp
jl
mov
pop
mov
stos
mov
dec
cmp
xor
xor
fcom
xor
or
mov
dec
int
testl
imul
test
stos
jns
mov
jb
mov
jnp
add
xchg
jo
or
xchg
sub
ds
jmp
dec
dec
push
dec
mov
nop
imul
fcom
js
popf
add
xchg
pop
and
mov
cmpsl
inc
repnz
mov
mov
xchg
xchg
dec
addr16
push
pop
mov
mov
ret
or
pop
fisubrs
jbe
xchg
gs
scas
mov
fcomps
les
mov
repnz
cs
adc
or
cmp
mov
lock
xchg
push
rcr
push
cs
outsl
pushf
xor
xor
aas
mov
sbb
stos
and
cmpsl
push
push
jle
pop
jg
adc
dec
or
fnstsw
clc
sub
orb
cmpsl
jle
xor
enter
adc
or
jns
add
cmpsb
lds
xor
and
mov
call
mov
xor
mov
scas
insb
push
shlb
subb
mov
push
fnstenv
loop
xor
loope
aaa
in
cmp
sub
movl
cwtl
scas
and
adc
popf
test
repz
dec
add
mov
adc
lea
add
lret
shrl
aam
mov
inc
icebp
dec
mov
or
enter
int
xor
push
dec
add
loope
jns
lret
sbb
mov
aad
push
mov
jnp
jae
in
std
out
ret
add
xlat
fs
jbe
mov
push
test
and
sub
xor
das
dec
cmp
xor
mov
orb
insl
test
mov
xchg
xor
mov
fwait
arpl
xlat
xor
aad
lods
jle
out
in
jnp
pusha
xchg
out
in
or
test
mov
and
pop
pop
dec
xchg
std
adcl
add
and
push
mov
cmpsl
cmp
fisttpll
dec
pop
pushf
cld
decb
sub
roll
dec
sbb
xchg
out
lods
shll
add
mov
hlt
xchg
push
xlat
cmp
outsl
lea
push
xor
pop
xchg
ljmp
subb
mov
adc
mov
dec
pop
dec
push
gs
js
jbe
pop
add
insl
cmp
dec
pop
mov
lahf
and
jo
lcall
arpl
in
leave
shrb
test
sahf
aas
and
loopne
cmp
mov
jl
repnz
jmp
leave
sub
mov
sbb
cs
ljmp
pop
adc
adc
cmpsl
in
mov
cmp
loop
mov
pusha
scas
add
pop
scas
mov
mov
jnp
lds
pop
mov
data16
lret
ret
iret
daa
xchg
inc
inc
cmp
mov
fidivl
nop
jns
push
lret
add
mov
idiv
bound
mov
bound
sub
jmp
inc
inc
cmp
xor
insb
mov
imulb
inc
push
mov
int3
fadds
add
pop
push
js
mov
in
adc
dec
loope
xor
and
push
and
fsts
sbb
push
test
into
add
inc
aad
mov
sub
and
loopne
push
add
pop
xchg
pop
xor
aaa
ret
mov
iret
inc
pop
aas
sarl
arpl
and
notl
sub
popf
inc
add
icebp
cmp
vcvttps2dq
push
xor
xchg
sub
push
mov
or
mov
fwait
mov
sub
cld
shll
pop
or
lea
lock
cmpsb
hlt
mov
push
jge
in
or
lock
dec
out
stos
sti
retw
mov
mov
imul
adc
stos
inc
cmp
sub
movsb
outsb
shl
add
icebp
cld
and
xchg
aad
adc
dec
sub
aam
mov
pop
bound
arpl
or
into
lahf
pushf
rcl
icebp
pop
push
jb
in
and
mov
sbb
in
mov
add
cmp
dec
mov
shll
cmp
mov
lahf
or
xchg
sub
call
dec
and
test
loopne
mov
stos
mov
mov
xor
jl
pop
cld
loopne
repz
pushf
out
jmp
lds
fbld
repnz
ljmp
dec
test
andl
sbb
data16
jmp
sub
jnp
xor
fbld
test
push
popa
repnz
jmp
fiadds
ljmp
sub
adc
outsb
dec
xlat
xor
xchg
lcall
js
frstor
and
mov
dec
fmull
andb
sti
xchg
and
xor
ret
add
sub
push
nop
pop
aam
out
cmpsb
add
lahf
or
ret
lods
add
push
push
xchg
xor
aam
aaa
inc
lret
cmp
ret
popf
jnp
stc
jns
ret
shll
out
shll
pop
mov
rcrb
xor
adc
dec
bnd
in
mov
lahf
in
test
stos
js
push
neg
movsb
sahf
mov
pop
insl
stos
adc
cmp
jmp
test
pop
inc
neg
lds
mov
adc
and
outsb
jle
add
jae
mov
jne
adc
inc
nop
mov
push
or
adc
pop
push
test
jge
por
scas
sub
mov
mov
stc
lcall
sbb
adc
sahf
push
es
cmc
mov
test
push
outsl
bound
sbb
sti
mov
xor
sub
pop
das
add
push
push
es
int3
cmp
jle
daa
jae
and
lea
push
and
call
add
mov
aad
mov
leave
lcall
sub
cmp
cmp
shl
mov
adc
mov
pop
mov
mov
jb
mov
loop
fadds
xchg
sub
mov
fdivr
mov
and
test
loope
add
fcmovb
lret
scas
movsb
dec
mov
mov
pusha
adc
pop
inc
bound
mov
mov
push
and
xchg
pusha
dec
xor
stc
and
fs
clc
lods
dec
pop
outsb
fucomi
sub
es
inc
add
scas
push
fwait
adc
subl
xchg
push
pop
imul
jmp
mov
add
fdivl
aad
in
arpl
mov
jecxz
mov
aaa
ffreep
insb
jecxz
inc
add
sarb
jl
xchg
movsl
inc
addr16
fmuls
xor
mov
das
pop
cmp
pop
xlat
jp
xor
jne,pn
adc
popa
js
test
xor
js
in
fcom
or
loop
out
jae
aaa
xchg
sub
adc
std
lock
les
pop
aam
movsl
xchg
inc
mov
cs
stos
push
or
inc
arpl
fdivl
push
mov
jns
push
es
out
fs
adcb
push
add
jne
aas
aas
inc
pop
stc
hlt
sbb
cmpsl
jmp
in
mov
adc
mov
into
mov
popa
fs
mov
sahf
jle
jmp
jl
mov
push
inc
push
sbb
adc
std
adc
clc
mov
jmp
and
ljmp
push
adc
push
mov
inc
call
test
aaa
pop
and
jg
test
jg
adc
repnz
or
out
test
sbb
push
fidivl
adc
xchg
cli
enter
dec
lea
pop
mov
and
jg
mov
fnstenv
outsl
cmp
push
add
inc
or
dec
pushf
dec
cmp
dec
push
pop
mov
and
mov
insl
fiadds
push
mov
mov
stos
in
shrl
ds
mov
pop
jmp
mov
into
sbb
pop
sarl
adc
cmp
sub
stos
loopne
ljmp
hlt
popa
ljmp
lods
mov
mov
cmp
cwtl
and
push
sbb
in
jo
and
ret
test
gs
loop
mov
add
adc
ja
cmp
jo
shll
loope
mov
mov
inc
push
fdivr
pop
push
inc
movsb
cmp
sbb
in
pop
inc
jecxz
inc
leave
in
mov
fwait
test
add
aad
xor
insb
adc
and
sbb
jbe
sub
repz
into
lock
xor
int3
jecxz
sbb
or
jg
jbe
sbb
mov
divb
shl
in
inc
fldl
adc
mov
mov
pop
imul
jbe
or
xor
fsubrs
dec
mov
jnp
fcompl
mov
jg
fcomps
xchg
or
mov
cmp
push
sub
jmp
and
testb
clc
xchg
aad
dec
andl
jl
fsubrp
mov
fnstsw
mov
jecxz
xchg
cltd
iret
sbb
outsl
inc
dec
in
popa
cmpsl
xor
add
lds
hlt
sbb
mov
out
int3
add
push
push
push
xchg
mov
in
in
mov
add
or
stc
movsb
mov
adcb
ss
out
int
xchg
and
dec
pop
pushf
adc
lret
cmc
in
push
jae
test
pop
insb
mov
mov
cmp
jb
test
adc
lcall
loope
mov
mov
sub
imul
pop
clc
pop
ljmp
lret
push
loop
and
call
cmc
cmpsb
cwtl
jg
adc
test
stos
mov
or
out
subl
push
mov
sub
xor
mov
mov
push
ret
shlb
jnp
pop
mov
dec
lods
jbe
popf
xor
pop
mov
sbb
fdivrs
adc
mov
leave
insl
adc
faddl
lahf
orl
sbb
add
loop
outsl
mov
std
mov
sarl
jecxz
push
pop
or
pushf
sub
sub
dec
mov
sub
mov
js
or
inc
fs
push
sahf
mov
ljmp
in
mov
push
int
stos
jnp
mov
mov
sbb
sbb
nop
inc
xor
pop
loopne
mov
cmp
cmp
sahf
ret
cmp
mov
dec
pop
jmp
or
int
cmp
sar
mov
iret
jbe
orl
jae
movl
aad
pop
add
cmpsb
in
dec
dec
mov
into
ja
add
pop
fstl
ret
push
fsts
sbb
sti
and
inc
add
pop
pop
lahf
cmp
dec
and
insl
outsb
mov
xlat
and
imul
inc
push
mov
adc
shrb
mov
mov
or
pushf
xchg
int3
add
les
shlb
push
mov
push
add
lgdtl
xchg
roll
jg
lea
jbe
out
stos
js
mov
jmp
inc
sub
shll
popa
iret
mov
out
stc
push
inc
inc
jge
xor
mov
jbe
and
sub
sbb
xchg
mov
sub
loopne
leave
mov
cwtl
bound
pop
data16
add
jo
push
bound
push
adc
in
mov
in
xchg
cmp
rclb
add
pop
dec
add
sbb
imul
push
lods
xchg
jge
or
jno
or
pop
insb
sub
mov
mov
and
push
pop
push
pop
mov
scas
xchg
cld
xchg
push
lods
mov
mov
and
sub
and
mov
and
add
mov
subb
or
clc
scas
mov
mov
dec
or
mov
push
cwtl
outsl
cwtl
jbe
mov
cmp
push
mov
mov
std
in
push
aam
stos
arpl
scas
sbb
xor
in
mov
mov
pop
push
shlb
daa
mov
loop
dec
and
cld
paddusw
ja
je
pop
sub
insl
sbb
out
aas
xor
xor
mov
dec
or
rcrl
ret
adc
repnz
push
ret
jmp
out
cld
int
cltd
sti
jns
push
cmpsl
movsl
hlt
adc
push
and
cwtl
inc
push
out
or
out
inc
jae
cmpl
dec
int3
mov
cmpsb
inc
push
daa
pop
cld
inc
cmpsb
cmpsl
call
ljmp
or
fcmovnb
sbb
mov
std
push
cmp
dec
dec
inc
in
lahf
jge
xor
fldl
cltd
pop
xchg
std
out
sub
fstp
cli
sub
push
test
loopne
xchg
dec
in
mov
movb
xor
and
aas
jmp
ljmp
fs
aam
mov
in
pop
je
lret
mov
cmp
sbb
fmuls
cmp
ljmp
cmp
add
loopne
cmp
inc
movsl
int
lret
pushl
adc
fiaddl
in
jbe
xchg
sbb
add
mov
shrb
repz
add
aaa
and
inc
xchg
inc
and
js,pt
scas
add
lods
xor
dec
loope
and
jmp
test
lods
pusha
cmc
jnp
lods
or
sub
ljmp
out
or
pushf
and
addps
movsl
vpmulhuw
mov
outsl
call
inc
cld
cmp
lds
jno
arpl
clc
xor
sub
xor
push
mov
jae
cmpsb
out
cmp
in
outsb
daa
pop
sbb
sub
ja
jo
into
shlb
daa
ja
or
ljmp
add
fnsave
mov
mov
lea
sbb
or
inc
bswap
out
xchg
sbb
add
out
notb
pop
inc
sub
pop
adc
jbe
add
sub
mov
xor
int
fdivr
loope
sbb
mov
inc
test
lock
xor
xlat
outsl
fisttpl
adc
test
adc
add
loope
bound
jmp
xchg
mov
jle
enter
loope
ss
push
push
pop
lret
jo
and
add
cmpsl
test
es
adc
pop
movsl
lods
loope
in
fistpll
clc
xor
push
xor
mov
mov
push
cwtl
int3
insb
xchg
andl
inc
jnp
jge
push
int
repz
xchg
mov
sub
pop
mov
and
fcompl
xchg
and
in
sbb
cmpsl
shlb
roll
xchg
or
hlt
sbb
and
inc
fmull
loopne
push
mov
jae
lods
mov
cli
fbstp
mov
fisubs
mov
push
push
push
jp
mov
sbb
jmp
gs
lock
push
jo
loope
out
nop
rol
leave
fs
cld
and
xchg
pop
mov
pop
sub
fidivl
ficomps
and
xor
inc
cwtl
mov
loopne
popf
popf
insl
mov
loope
or
mov
dec
push
jne
adc
aas
xchg
into
div
lea
out
ret
or
addr16
ss
pop
inc
mov
scas
mov
inc
sub
dec
rcrl
or
mov
mov
sbb
cmp
pop
dec
mov
sahf
sbb
gs
cmc
push
xchg
idivl
inc
push
ljmp
push
call
xchg
orb
sbb
and
pop
add
stos
add
jp
jb
cmp
push
lahf
mov
shrl
inc
xor
mov
push
push
push
int
enter
ret
inc
movsl
rorb
mov
push
mov
repnz
movsl
pop
je
xchg
inc
out
add
mov
aam
test
leave
test
sbb
adc
push
push
jp
cmpsl
mov
pop
xchg
inc
cmp
shrb
lahf
adc
dec
inc
mov
pop
loop
xor
push
mov
fdivr
clc
mov
mov
push
mov
femms
mov
lock
pusha
shlb
sti
test
xchg
imul
add
test
xor
lea
in
mov
jae
loopne
pop
inc
imul
cmp
pop
or
aas
fdivp
inc
mov
pop
in
and
mov
incb
jp
popf
std
xor
mov
jns
das
cltd
cld
cld
lcall
lock
testb
arpl
jge
int
outsb
movsb
xor
cmc
jo
outsl
mov
add
in
or
dec
xchg
out
outsl
mov
xlat
xor
or
pop
sbb
aas
mov
cmp
mov
in
push
add
fs
shrl
movsb
imul
xor
scas
shll
sub
out
insb
mov
mov
movsl
mov
test
stc
dec
xchg
mov
sbb
out
inc
push
psubw
leave
jns
or
jbe
mov
or
loop
or
or
jbe
cmp
and
sub
xchg
ja
xor
loop
sub
mov
xlat
popaw
out
mov
addr16
nop
adc
filds
inc
ljmp
in
aas
inc
pop
scas
ss
ja
push
dec
int3
jle
cmp
inc
sub
mov
js
sbb
xchg
test
aad
lcall
sub
and
push
add
cmp
in
cmp
xchg
push
es
call
cli
int3
cmpsb
inc
mov
int3
adcb
xor
fisubrs
arpl
ffree
fwait
xchg
sbb
pop
lods
or
rcrb
mov
inc
ret
out
mov
jp
inc
cltd
xor
add
rcll
clc
stos
mov
les
fnstsw
mov
in
pop
dec
imul
mov
adc
mov
arpl
jne
aaa
jb
dec
mov
mov
xchg
sub
mov
jg
js
add
ljmp
addr16
lods
jne
rcr
test
dec
arpl
sub
push
inc
inc
inc
and
inc
inc
ret
pop
mov
fs
xchg
in
hlt
fs
and
cmp
mov
nop
jmp
enter
mov
lods
sbb
jmp
sub
jb
popf
ss
adc
or
inc
sbb
and
inc
jo
sbb
cli
adc
nop
xor
add
and
arpl
dec
sbb
jae
jbe
cmp
iret
xor
loop
mov
stos
mov
cmovbe
in
mov
jmp
ds
pop
rcr
bound
scas
cltd
mov
hlt
jne
lock
adc
dec
movsb
bts
clc
pusha
pop
xchg
or
data16
cmp
dec
push
enter
shr
outsb
sub
lock
pop
clc
xchg
mov
inc
loop
pop
movsb
pop
pop
fs
jbe
mov
push
insb
inc
movsb
mov
fadd
ret
ljmp
imul
push
js
call
mov
sub
movsl
mov
dec
std
add
imul
adc
or
dec
or
or
lahf
mov
mov
push
test
cwtl
pop
out
or
insl
cli
aad
test
popf
jno
ret
jl
jb
xor
sub
subb
mov
dec
out
pop
pop
sub
lods
scas
cmpsl
mov
sbb
jg
int
outsl
xchg
cmc
in
add
push
push
arpl
ret
pop
mov
insb
in
pop
loop
rorb
std
cmp
xor
jnp
push
out
test
sbb
push
pop
fnsave
dec
sbb
insl
dec
dec
cmc
loop
shr
adc
add
in
pop
jae
push
jo
repnz
es
push
adc
jp
arpl
cmp
adc
cmpb
sbb
jg
sbb
gs
sbb
mov
mov
jg
arpl
xchg
dec
lods
mov
xor
dec
push
loope
pop
cs
int
insb
aas
jmp
cmpsb
incb
sub
xor
inc
jne
sub
aam
jmp
fidivrl
xchg
jne
test
arpl
inc
pop
xor
lock
cmp
and
mov
out
jge
dec
roll
or
aas
jmp
push
stc
or
push
sub
mov
xchg
movsb
sbbl
mov
js
lret
shrb
aaa
jbe
out
add
push
das
fists
jl
or
pushf
aaa
adc
jl
incl
mov
lods
daa
sahf
cli
and
mov
pop
xchg
out
sahf
cmp
repz
cld
dec
xchg
fcmovb
movsb
stos
jle
icebp
sub
jg
popf
test
xorb
das
repnz
add
nop
in
insb
sbb
call
out
jo
es
cmp
or
int
in
adc
iret
adcl
lret
push
out
xchg
fimuls
aad
mov
stos
lret
jge
xor
bound
dec
xchg
ljmp
xor
xor
inc
aaa
test
mov
out
notl
xor
fsubrl
sub
cltd
js
out
stos
aaa
xor
das
mov
sahf
xor
lcall
out
outsb
test
lock
inc
and
xchg
xor
enter
sbb
imul
pop
stos
add
into
dec
repz
mov
sbb
and
mov
inc
sbb
inc
aas
mov
test
out
dec
jl
clc
push
sub
adc
pop
loopne
jge
out
roll
lea
mov
xor
jmp
cmp
push
leave
mulb
loope
add
mov
xchg
stos
mov
aam
cli
sbb
cmp
repz
pop
ret
mov
sub
push
jge
adc
xor
loop
jnp
xchg
inc
outsb
mov
cmc
clc
popf
test
fwait
pop
movsl
mov
mov
popa
enter
cmp
push
mov
jle
call
sbb
sub
push
imul
ret
sub
aad
addr16
push
shrl
aas
in
fdivl
mov
scas
sbb
sbb
cmp
cmpsb
sbb
push
sbbb
sbb
scas
push
cmp
sub
sbb
lret
and
jbe
lea
jge
sbb
jmp
sbb
or
mov
je
outsb
into
fstl
pushf
mov
imul
xor
jge
sub
sub
xchg
mov
and
bound
sar
add
lret
jo
pushf
mov
sbb
stc
or
mov
and
mov
adcb
dec
sti
mov
xlat
lahf
scas
or
xor
rorl
push
cmp
pop
jl
rcr
loop
fsubp
std
cmp
adc
inc
sbb
mov
mov
add
shlb
in
sbb
and
dec
jmp
add
cmp
lods
mov
into
sub
inc
icebp
das
stos
ljmp
insb
repnz
pop
push
shl
adc
test
mov
mov
ss
out
push
adcl
movsb
xchg
cmpsb
sbb
clc
mov
sbb
test
jecxz
mov
dec
test
lea
and
pop
xchg
test
sub
xchg
xchg
xchg
test
sbb
sbbl
jae
pop
xchg
xor
and
fdivr
push
push
enter
outsb
adc
leave
xor
sub
jmp
cmp
dec
cmpsl
adc
add
mov
pop
xor
pop
mov
xchg
and
ret
sub
mov
fs
mov
fsubr
pop
mov
loope
in
inc
pop
test
or
dec
imul
sub
js
mov
aad
test
jno
outsb
movl
stc
pop
jne
cmp
lret
mov
je
and
lret
arpl
sub
xor
movsl
xor
mov
jge
iret
sti
sti
loopne
lock
adc
xor
out
push
inc
mov
and
adc
xor
aaa
push
sub
xlat
rcl
es
adc
ljmp
fcmovnb
int
loopne
dec
xor
mov
push
jo
jno
sbb
roll
dec
into
int
and
into
out
jno
sahf
fcom
mov
mov
cmc
adc
push
push
mov
movsb
pop
or
and
and
mov
push
adc
jg
mov
xchg
les
inc
pop
mov
adc
cwtl
jno
mov
xor
pop
cmp
into
add
mov
xchg
push
sub
push
push
xlat
popf
push
scas
jp
les
adc
xor
cmpsb
pop
in
cmp
sub
xchg
adc
roll
jo
sbb
lret
mov
mov
xchg
loope
or
cmp
movsb
sti
js
and
jmp
idivl
lds
xchg
mov
adc
sub
jg
xchg
mov
inc
mov
mov
dec
movsb
test
ret
pop
dec
stc
pop
lret
adc
jae
and
filds
fs
pop
add
push
mov
cltd
ds
add
enter
pop
in
sti
int3
push
jge
mov
icebp
adc
adc
push
inc
data16
add
push
xchg
jb
fistpll
sahf
or
bound
pop
or
or
add
cld
dec
stc
and
leave
pop
pushf
loop
inc
jns
int
push
test
jns
ret
arpl
testb
enter
inc
and
aam
cmp
pushf
jp
jmp
call
ds
mov
out
dec
inc
sub
cmp
mov
mov
sbb
or
fs
out
out
mov
jmp
xchg
and
jmp
aam
push
div
fnstenv
pop
cwtl
imulb
loop
pop
inc
aas
jg
jmp
lods
mov
test
sbb
mov
xchg
aaa
jb
stos
jbe
pop
jno
mov
lret
inc
cmp
outsb
lea
xor
push
xchg
add
adc
adc
aaa
dec
mov
fnstcw
mov
or
roll
jmp
adcb
dec
jmp
mov
pop
dec
lock
xor
inc
dec
mov
mov
hlt
or
loopne
push
sbb
jae
rolb
rclb
sbb
push
mov
loope
mov
jle
jnp
xchg
push
shll
push
add
cmp
pop
lcall
or
ficoms
cmp
or
dec
pop
mov
jae
pop
repnz
push
pop
lret
das
aad
jb
mov
call
cltd
imul
fidivrl
push
getsec
xchg
add
popf
popf
stos
pop
outsb
xor
test
sub
sub
iret
pop
and
shrl
aad
jno
scas
sub
adc
shrb
cmp
call
xchg
mov
cwtl
xorl
lret
jns
les
cli
aas
movsb
push
mov
gs
out
aad
or
jl
in
mov
push
push
fidivl
ljmp
cli
loopne
jp
cli
out
sub
outsb
mov
xchg
jne
adc
mov
jae
mov
pushf
mov
sbb
mov
fwait
imul
sbb
sbb
cmc
push
stos
test
lret
stc
lret
sub
fistpl
cmpsb
add
rcrb
imul
pop
in
ret
adc
sarb
jg
xchg
mov
sbb
fdivs
cmp
nop
cs
and
mov
mov
dec
scas
dec
xor
adcl
call
fcoml
scas
push
lret
jl
repnz
sbb
cmp
push
cltd
hlt
xor
lret
xchg
movsb
into
mov
aaa
addr16
and
push
enter
add
cmp
incl
fs
dec
pusha
push
sti
fs
adc
xor
dec
mov
mov
movsb
inc
cld
insl
mov
leave
jbe
popf
adc
shll
lock
jle
test
xchg
or
sbb
stos
mov
gs
pushf
loope
adc
sbb
or
insb
mov
push
or
jmp
fldt
das
push
sub
push
jns
popa
mov
sub
xor
movsb
sub
icebp
int
push
popf
jmp
jae
bound
and
or
and
arpl
pop
cmp
xchg
xorl
shrl
dec
jmp
adc
loopne
lret
xor
into
inc
adc
pop
and
push
mov
orl
and
push
jle
bound
rorb
ja
mov
mov
clc
aam
notl
add
roll
hlt
mov
pop
pop
fucom
lcall
or
int3
jl
pusha
dec
mov
sti
mov
xchg
fcom
aad
push
arpl
les
iret
mov
and
popa
adc
pop
mov
mov
inc
aam
sub
jbe
adc
add
icebp
sahf
pop
mov
repz
aad
cld
xchg
das
int
add
shlb
popa
leave
cmp
fcomps
std
lret
pop
test
inc
mov
adc
dec
mov
cmp
cmc
jb
inc
mov
mov
repz
sar
sbb
fwait
lahf
pop
or
std
lahf
outsb
imul
inc
mov
push
pop
jmp
inc
outsl
sub
imul
leave
add
pop
mov
push
sub
jmp
mov
xchg
nop
cmp
mov
sub
adc
lock
rolb
and
adcl
sub
notb
pop
cli
cmp
sarl
sti
inc
inc
lock
std
and
test
cmp
dec
adc
insl
and
arpl
adc
pop
mov
js
nop
mov
cmp
scas
mov
mov
ja
add
mov
dec
in
cs
pop
pop
sbb
movsb
data16
cli
and
rcl
out
jp
jbe
pmuludq
mov
cs
mov
dec
aaa
das
sub
jbe
pop
xchg
mov
cs
mov
push
lock
pushf
pusha
push
xor
sub
enter
into
outsb
sbb
lock
js
dec
into
jle
scas
xchg
xor
sarb
fnstcw
lret
xlat
pop
ffree
lods
ret
rolb
imul
cmp
push
jp
sbb
ficompl
stos
dec
jg
pop
addr16
ss
cmp
adc
mov
stos
lret
lods
xchg
testb
lds
test
inc
xor
dec
les
xlat
cwtl
aad
sbb
mov
and
rolb
sub
pop
clc
ljmp
add
mov
int
mov
imul
aam
xor
cltd
data16
jp
lret
call
das
loope
int
lock
movlhps
shlb
pushf
pop
sahf
fs
xor
in
or
mov
in
iret
mov
push
mov
xchg
loop
divb
xor
scas
cld
cwtl
pop
mov
sub
stos
test
mov
xchg
pop
sbb
mov
imul
divb
cwtl
adc
das
and
inc
jecxz
fnstsw
fsubl
clc
xor
nop
lret
ja
cs
inc
cld
xor
sarl
pushf
cmc
and
and
push
out
jp
out
adc
jne
jmp
dec
es
popf
adc
dec
mov
mov
stc
std
mov
push
mov
jb
xorb
fs
and
cmpsl
insl
adc
sub
xchg
fnsave
dec
mov
fdivs
lds
inc
out
mov
cmp
mov
hlt
push
push
ljmp
cmpsb
ret
insl
out
push
jp
cmp
xlat
and
das
dec
mov
shll
ja
mov
repz
fstpl
pop
mov
push
sub
jl
and
push
das
sub
out
or
les
out
insl
jmp
das
dec
imul
sub
push
cmc
mov
jbe
stc
pop
mov
mov
sahf
cmpsb
pop
xchg
xchg
push
stc
loop
jl
sub
fldl
add
scas
push
inc
cmpsl
shl
ret
adc
pop
pop
out
adc
dec
jmp
sbb
out
loope
sarb
enter
xchg
adc
inc
sarb
jl
cmpsl
inc
add
inc
fisubl
nop
dec
arpl
fnstcw
xlat
push
pop
std
push
fucom
inc
pop
inc
shl
add
and
insl
aam
aam
outsb
data16
jne
aaa
push
rorb
xchg
jp
xor
fwait
bound
sti
pop
adc
ja
or
imul
sub
ret
jp
ja
repnz
jo
fisubl
sti
and
cmpsl
sub
mov
push
adc
cmp
aad
icebp
adc
sub
lds
mov
popa
andl
pop
ljmp
addl
aad
mov
push
jb
fnstcw
fidivrs
xchg
cmp
inc
and
imul
xor
add
dec
iret
call
sbb
adc
xchg
xchg
pop
sbb
dec
mov
push
imul
stc
rcrb
add
lds
mov
fildl
out
cmp
pop
in
pop
cmp
cmpsb
cmpsb
mov
and
push
jnp
invd
inc
jo
fwait
adc
or
cli
jl
fsubl
inc
mov
popw
cmp
movsl
sahf
jmp
xor
xchg
jg
aas
imul
outsl
orb
lods
es
inc
fs
push
out
xor
push
repnz
xchg
scas
adc
push
or
and
arpl
dec
mov
cs
repz
jns
fiadds
pop
bound
imul
and
jns
mov
cwtl
pop
stos
pop
dec
inc
cltd
jno
adc
jmp
push
pop
mov
addr16
test
mov
fldt
dec
add
and
xor
cmpsl
sbb
jae
lret
orb
shl
mov
mov
or
lcall
pusha
mov
xor
in
mov
pop
test
dec
sti
cmpsl
and
xchg
cld
mov
stos
dec
ja
mov
adc
pop
sbb
je
push
or
ds
mov
andl
sbb
push
mov
cs
push
roll
push
pop
and
insl
push
mov
mov
pop
pop
push
test
pop
push
sub
sub
xchg
loop
adc
jmp
push
sbb
test
jmp
jnp
addr16
in
fmull
cmp
iret
test
outsb
gs
xchg
jns
lea
sbb
push
cmpsl
std
pushf
sub
stos
std
cld
pop
mov
cmpsb
mov
xchg
leave
mov
xor
cmp
bound
xor
xchg
adc
dec
loop
pushf
in
sbb
test
movsb
xor
push
cld
mov
dec
or
rolb
adc
cltd
pop
cwtl
loop
mov
je
or
lods
sahf
cmp
xchg
sbbb
xor
add
test
lods
ror
push
xor
mov
in
mov
loopne
adc
loopne
jmp
inc
iret
and
or
loopne
xchg
imul
dec
leave
mov
stc
stos
filds
cmp
dec
out
adc
shll
stc
or
xlat
dec
aad
js
mov
imul
jbe
fidivs
dec
mov
mov
mov
fucom
rcll
test
mov
in
into
pop
enter
xchg
add
jnp
fnsave
test
cmp
jae
mov
and
mov
jl
cmp
cmp
mov
arpl
std
data16
and
loope
adc
mov
andl
xor
shrb
lahf
lods
je
rol
ja
xchg
repnz
into
sar
adc
and
cmp
push
mov
xchg
mov
push
int3
adc
jmp
dec
inc
clc
add
lods
pusha
and
enter
mov
cs
cmp
imul
daa
sub
cmp
adc
addl
repnz
pop
pop
rolb
int
dec
mov
movsb
sbb
rorb
push
lea
mov
movsbl
fists
jmp
pop
push
xchg
daa
xchg
jg
cltd
jmp
ror
in
out
cmpsb
sbb
outsb
inc
cmc
fistps
inc
sub
cli
lods
fdivrl
mov
add
int3
fcom
clc
icebp
pop
sbb
sub
pop
insl
sub
sub
cmp
push
mov
push
dec
int
pop
daa
xor
je
mov
sub
jl
pop
popa
push
mov
xchg
and
cmpsb
pop
fldcw
movsl
jecxz
jecxz
dec
loop
dec
negb
scas
testl
xor
push
mov
ds
and
jbe
sub
push
xor
xor
sbb
push
pop
push
std
fcmovb
push
inc
sbb
test
lods
in
add
adc
imul
mov
and
mov
inc
mov
or
xor
sub
out
inc
aad
decb
lea
std
lods
test
mov
xchg
sarl
ja,pt
nop
xor
ret
aas
jmp
xchg
stos
out
push
test
scas
sbb
xchg
xor
loop
mov
sub
adc
mov
adc
int3
push
stos
push
nop
sbb
inc
jl
sub
sub
repnz
cltd
sbbb
fidivs
jg
cmpsb
sbb
cmpsl
mov
adc
fneni(8087
insb
pop
int3
xchg
or
pop
aad
pop
insb
add
out
ret
ss
inc
addb
pop
je
mov
stos
adc
mov
xor
repnz
and
sbb
mov
xor
xor
mov
jnp
int3
cmp
aam
mov
sbb
pop
dec
cmp
pop
xchg
pushl
mov
fidivl
out
or
sub
rorb
sub
out
lds
adc
pop
int
and
addl
aad
imul
cld
pop
bound
jnp
mov
xor
movsl
push
push
leave
and
inc
push
mov
xor
push
rorl
adc
sbb
mov
sub
xor
ljmp
jae
cmp
sub
inc
les
mov
or
xchg
add
outsl
sub
dec
lods
adc
xor
pushf
jmp
addl
and
cltd
push
or
shll
dec
sbb
and
call
pop
dec
push
fbld
jl
dec
repz
mov
sbb
jo
pop
clc
xchg
add
jle
sbb
dec
add
add
frstor
and
lahf
cmp
or
push
mov
push
mov
or
loopne,pt
cmpl
rclb
sbb
pop
xchg
jno
sbb
cs
xchg
cmpb
push
push
jl
jle
scas
aam
or
aaa
cmp
repnz
cmp
push
dec
sub
lahf
inc
sar
iret
jl
cs
xchg
cwtl
xchg
es
mov
int3
lods
or
iret
and
xchg
inc
mov
sub
or
xchg
mov
xlat
jp
lsl
push
inc
popa
faddp
jno
and
push
pop
jecxz
lock
call
inc
fs
sub
sub
pop
inc
push
jne
cmpsl
mov
and
fs
stos
gs
cmp
jo
outsb
out
lahf
pop
call
unpckhps
adcb
inc
mov
and
xchg
hlt
and
jge
mov
mov
xchg
sbb
testl
les
mov
push
popa
xor
data16
aas
adc
pusha
fmull
and
push
hlt
mov
xchg
mov
popa
cltd
in
jge
nop
mov
in
subb
cmp
push
cmp
mov
push
pop
and
mov
xor
mov
dec
movsl
lea
mov
push
loopne
push
lahf
xchg
xchg
adc
scas
lret
add
fadd
jo
push
push
sbb
sbb
xchg
lods
jne
test
jl,pt
lds
xchg
or
stc
arpl
fmuls
stc
out
clc
mov
push
dec
lea
movsb
mov
lock
lcall
add
adc
test
mov
push
int3
fistpl
in
movsl
shrl
or
sub
and
adc
push
sub
idivb
popf
mov
sub
xor
pop
negb
add
jno
push
insl
sbb
lea
xor
aam
xchg
inc
dec
adc
lcall
dec
iret
shrl
lods
cli
xorb
scas
std
clc
pop
popl
mov
fisttps
pop
mov
push
movsb
fsubp
popa
add
lret
loop
data16
rcrb
xchg
push
out
test
bound
notb
adc
mov
mov
insb
repnz
cwtl
divb
inc
mov
cmpsl
loopne
cmpl
out
out
aaa
cmove
adc
imul
mov
rcrb
xor
sub
mov
outsb
cltd
cmp
push
mov
sbb
add
push
xor
xchg
test
icebp
mov
push
mov
test
ret
andb
push
pop
imul
mov
hlt
dec
pop
dec
cmp
jmp
pushw
adc
mov
add
loope
std
push
test
cmp
or
sbb
popa
test
sti
decb
in
mov
das
mov
jmp
mov
sbb
mov
pop
sarb
arpl
fldenv
sub
pop
xchg
sub
rcrl
cmp
mov
pusha
pop
mov
lahf
mov
outsl
out
hlt
rcrb
xchg
sbb
repz
fxch
sub
sub
mov
and
lds
and
mov
movsb
ja
fadds
xchg
lods
mov
push
cmp
mov
stc
ja
cmp
inc
das
pop
push
scas
enter
addr16
lock
mov
jae
aam
arpl
rcl
fcmovb
cld
fidivl
pop
fcomps
call
mov
mov
cltd
daa
jnp
xor
xchg
mov
xchg
add
cli
dec
dec
data16
shr
jge
or
inc
mov
and
adc
aad
jnp
loopne
cmpsb
addr16
adc
add
jp
movaps
push
out
mov
fnsave
jle
cli
data16
cmp
push
rorb
mov
mov
mov
mov
pop
outsb
lret
mov
jb
loopne
mov
popa
movsb
cmp
mov
imul
cmp
lcall
mov
xchg
and
sbb
fstpt
std
jb
loop
adc
lret
xor
inc
adc
cmc
lock
xchg
pop
stos
pop
pop
out
imul
jno
dec
jl
clc
imul
enter
sbb
add
mov
mov
enter
sbb
subl
sbb
add
xor
jge
xor
enter
loop
sbb
loopne
mov
add
hlt
sbb
mov
stc
daa
mov
repnz
fsubrs
push
jl
fwait
cmp
mov
mov
inc
out
cltd
sub
inc
add
inc
ret
sbb
cmp
xor
loope
arpl
pop
std
fimuls
cmpsl
pop
hlt
xor
push
or
sarl
sahf
iret
adc
movsb
arpl
jns
adc
les
jns
mov
mov
insl
xor
mov
xchg
loopne
inc
inc
icebp
sarb
push
jmp
cmpsb
test
pop
xor
and
shll
call
sub
lahf
xchg
outsb
adc
cmp
mov
adc
push
loope
sub
mov
sub
mov
mov
out
es
call
insl
adc
insb
push
mov
imul
adc
sbb
jb
fcoms
sahf
es
pop
inc
test
je
cmp
adc
pop
clc
xchg
test
xor
test
xor
nop
inc
sub
push
add
inc
daa
enter
pop
testl
fwait
sbb
adc
adc
sub
xchg
jp
es
fists
insl
mov
in
jns
lds
xchg
pop
icebp
and
adc
sub
test
mov
xchg
out
jecxz
mov
inc
sbb
cmp
lret
cwtl
or
lock
sti
fimull
push
adc
mov
das
sub
sub
rclb
cmpsl
jmp
inc
xlat
sub
pop
ljmp
addl
das
inc
adc
pop
lcall
push
mov
adc
add
and
dec
in
cmp
lret
sub
bound
out
stc
js
test
sbb
xor
jnp
rorb
out
pop
cmp
aaa
push
mov
xchg
jge
aaa
ja
sub
icebp
pop
jo
push
cwtl
popf
dec
xchg
lock
out
adc
data16
cld
lds
int
xchg
sbb
mov
and
js
fcomp
shll
jl
or
das
fisubl
push
icebp
sub
pop
in
aas
insl
fs
add
fcomi
mov
jne
out
out
daa
lret
push
cmp
jno
rclb
lock
aas
loope
cli
xchg
cmpsl
mov
in
dec
test
jno
pop
ss
out
adcb
into
cmp
push
ficoml
pop
test
cmp
int
fbld
outsl
ljmp
sbb
inc
adc
cmc
fwait
jno
ja
js
sub
xchg
rcrl
aam
and
test
outsb
push
push
shl
add
xchg
inc
xor
lretw
cwtl
loop
adc
or
push
pop
dec
jl
repz
pop
loope
cli
jl
dec
xlat
and
hlt
jecxz
orb
mov
mov
jle
mov
cmc
pushf
test
and
arpl
mov
mov
sub
jo
cmp
xor
sbb
jecxz
adc
mov
fst
push
es
and
insb
enter
push
shrb
pushf
xlat
mov
loope
inc
stos
or
cltd
ret
loop
fcoml
and
in
cmc
mov
scas
xchg
mov
push
fdiv
lock
shll
iret
jge
sbb
in
mov
sbb
add
and
adc
mull
adc
fsubl
js
mov
mov
rcll
repnz
ja
jb
push
inc
dec
jge
xor
pop
cltd
jne
adcl
ja
aad
xorl
push
dec
sbb
maskmovq
notl
movsb
aaa
add
divl
pusha
push
nop
push
pushf
jge
fsubs
jl
cmc
mov
das
jle
add
xor
xchg
fwait
push
pop
test
out
add
mov
sbb
sbb
dec
repz
lock
pop
cli
repz
mov
cmp
dec
and
jl
daa
jl
xchg
fsubr
xchg
inc
add
fidivrs
scas
mov
sub
aad
cltd
sbb
loopne
xchg
ja
pop
ss
inc
fstp
sub
sub
cmp
pop
xor
xchg
loop
loope
inc
repnz
aam
jle
dec
sub
push
push
js
dec
xchg
mov
mov
jb
pop
ja
and
das
ss
nop
vmovshdup
les
mov
add
jbe
add
adc
lret
sbb
jns,pn
xor
lcall
stos
xor
cmpsl
ss
push
pushf
xchg
lret
and
into
sbb
add
dec
adc
sub
add
and
insb
push
pop
dec
cmc
adc
icebp
adc
push
add
jb
dec
pop
pop
push
leave
mov
rclb
xchg
xchg
fistps
xchg
imul
inc
aam
nop
stos
xchg
roll
sbb
test
cmp
xor
cmp
lds
add
movsl
sbb
adc
data16
xor
push
rcl
adc
nop
inc
add
negl
add
dec
ret
adc
xchg
negb
inc
test
or
icebp
out
fimuls
inc
fwait
arpl
xor
stos
pop
icebp
sahf
scas
adcl
pop
into
inc
mov
sbb
les
mull
lret
loop
hlt
xor
mov
and
repz
jo
ja
cltd
inc
adc
rcr
lret
adc
and
cmc
cli
xor
and
push
add
and
stos
mov
sub
jp
pop
data16
fcoml
adcb
sub
mov
cmp
pop
lds
xchg
xor
ljmp
outsl
xor
test
add
sub
ds
push
movb
cmp
cwtl
cltd
call
lahf
arpl
sbb
fcoml
pushf
movsb
or
cmp
adc
add
dec
outsl
jg
inc
or
ds
inc
xor
hlt
insb
pop
bound
adc
lods
mov
idiv
js
xchg
stc
aaa
push
fnsave
xchg
jg
push
sub
inc
mov
rorb
sub
xchg
dec
jbe
lods
jl
test
icebp
and
imul
lcall
aas
pop
rolb
push
xor
jmp
daa
test
daa
push
es
sti
out
scas
int3
sub
mov
movsl
adc
inc
add
xor
dec
pop
aam
rclb
mov
les
ret
mov
sar
mov
outsb
ret
sahf
int
pop
xchg
dec
cld
mov
insb
cmp
inc
inc
adcl
out
sub
pop
jne
add
or
adc
cmp
ret
lret
in
and
orl
mov
insb
loope
in
jb
push
popa
pop
lret
fidivs
jge
or
mov
pop
inc
and
cmp
or
push
in
adc
je
cltd
push
cmp
out
pop
xchg
bound
and
ljmp
or
arpl
loope
test
mov
adc
dec
cltd
push
mov
fstpt
rcll
int
mov
push
cmp
nop
ds
cmp
inc
test
mov
add
sub
pop
mov
pop
jl
sbb
push
adc
es
push
jle
out
ret
enter
add
dec
int3
mov
dec
mov
xor
adc
cltd
popf
test
mov
idivb
mov
out
ss
fsubrl
jge
daa
cmc
enter
jno
pusha
test
leave
lock
cmp
mov
arpl
mov
mov
or
in
stc
jns
lahf
add
scas
mov
inc
and
mov
and
push
fwait
cmp
adc
mov
imul
add
frstor
and
ds
lcall
clc
xchg
mov
jnp
add
jbe
sub
mov
sub
cmp
sub
mov
out
cmp
into
int
aas
test
fs
xchg
push
ret
imul
cmp
cmp
out
in
ficomps
pushl
sti
sti
adc
leave
test
push
aad
idiv
out
pop
jl
cmp
stc
and
dec
pop
int
and
cmp
int3
mov
call
sti
xchg
adc
mov
cmpb
enter
mov
dec
or
and
icebp
data16
jae
cmc
cmp
icebp
and
jge
cmpsb
mov
std
cmp
push
pop
test
dec
jp
rcl
std
mov
loope
mov
lods
roll
xor
and
pop
ljmp
mov
jns
mov
jl
xor
aaa
pop
lret
and
ret
sbb
mov
addr16
push
inc
mov
add
dec
mov
dec
aad
in
push
push
mov
push
in
negl
jo
jnp
test
in
scas
sub
mov
pushf
rcr
je
xlat
fimull
pusha
add
inc
pop
mov
and
sbb
addr16
lea
nop
addl
shl
mov
mov
std
dec
xor
pop
push
stc
rcr
push
xorb
mov
out
jno
jle
in
sahf
adc
nop
push
adc
or
insl
aas
xor
mov
or
adc
pop
out
fscale
mov
leave
cmc
jns
jecxz
out
pop
sbb
xchg
das
add
dec
test
mov
or
pop
gs
das
sbb
mov
cltd
xchg
xor
adc
cmpb
cmp
icebp
or
cmpsb
add
push
arpl
push
cmc
jo
mov
iret
mov
push
ret
jmp
pop
and
adc
mov
loop
mov
jae
jp
xchg
adc
test
adc
shlb
jmp
repnz
mov
repnz
out
jns
or
cwtl
push
fisttps
push
scas
add
outsb
lock
ljmp
fldt
jbe
popf
je
add
dec
ds
push
out
popa
adcb
aaa
nop
inc
pop
or
jbe
or
cmp
pop
cmp
jne
jge
mov
loopne
in
test
jbe
decl
xchg
dec
int
xchg
lods
adc
sbb
gs
jp
cs
adc
dec
jmp
mov
pop
test
mov
jns
sbb
shr
out
jge
repz
mov
in
fcomps
shrd
xchg
push
mov
push
push
fisttps
les
mov
pop
push
scas
cmp
stos
cmp
dec
dec
mov
adcl
addl
lahf
add
inc
bound
cwtl
sub
add
int
fsub
sbb
add
sarl
xor
jecxz
ret
in
incl
testl
inc
test
rclb
cmc
xchg
neg
dec
stos
lock
movsl
xor
lods
out
rcll
enter
adc
lea
and
mov
fdivrl
add
sub
add
mov
js
xchg
inc
out
lods
inc
sti
xchg
push
bound
fstl
adc
xchg
scas
int
pop
clc
sub
xchg
sub
add
mov
inc
add
icebp
rorb
mov
dec
into
dec
outsl
jae
mov
pcmpeqw
aad
and
leave
dec
pusha
nop
out
xor
cmp
xchg
aas
xor
lret
dec
add
sbb
fidivrs
pop
mov
imul
mov
cmova
pop
jecxz
and
mov
int
loop
push
xor
xor
push
andl
jb
mov
pop
clc
shrl
sbb
jg
jp
inc
inc
adc
loop
lahf
test
and
addr16
sbb
dec
enter
add
cmp
adc
subl
loop
adc
mov
gs
dec
xchg
in
loopne
mov
mov
stos
cmp
js
rorb
js
stos
mov
push
dec
jle
out
or
mov
mov
fnstsw
stos
pop
mov
test
sub
iret
jg
cli
imul
bound
mov
ret
ds
negl
sbb
lods
outsl
dec
push
test
pop
mov
push
sub
dec
sti
cmp
outsb
jns
in
insb
pop
cmp
push
icebp
sti
ror
xchg
in
test
popa
xor
into
lods
scas
and
dec
inc
inc
idivl
pop
shlb
jns
mov
xor
fnstenv
out
mov
les
je
mov
mov
inc
mov
fdivrs
inc
xchg
jl
pop
movsb
jl
xchg
jb
push
mul
mov
lea
pop
xchg
push
cli
or
xor
popf
sahf
jmp
addl
loopne
addr16
aas
pushf
cld
in
aam
sbb
push
sub
dec
and
fwait
jae
xchg
repz
arpl
cwtl
in
ret
mov
mov
fsub
scas
frstor
xchg
popa
jbe
push
xchg
sub
pop
jb
mov
movsb
push
inc
daa
insl
loope
add
insl
add
es
add
daa
arpl
pop
sahf
xchg
daa
das
sbb
fsubs
mov
ljmp
add
scas
or
inc
cltd
add
jecxz
das
sub
scas
xlat
sub
xor
stc
mov
add
jg
and
test
out
mov
stos
push
scas
adc
sub
gs
ret
cmp
das
rcll
int3
sub
fldt
pushf
cltd
stos
xchg
rorl
lcall
xchg
ss
mov
iret
dec
and
adc
and
js
jo
pushf
sbb
mov
popa
es
lods
lods
scas
repz
push
sbb
xor
ds
push
das
sub
lcall
int
cwtl
adc
jno
or
mov
adc
mov
mov
adc
sbb
jl
cmp
xor
stos
cmpsl
and
cmp
xor
cmp
push
xchg
movsb
mov
out
mov
push
or
addr16
add
mov
test
pop
ficoms
into
cmc
fistl
inc
popf
in
daa
fisubl
add
out
ljmp
mov
pop
mov
lcall
xchg
sarl
jo
xchg
adc
jmp
stc
jg
pop
incb
shlb
cmp
clc
test
call
repnz
and
xchg
popf
jg
adc
rorl
xchg
xchg
in
cmp
sub
dec
sub
in
xchg
push
jb
cwtl
add
popa
inc
pop
xlat
sahf
mov
notb
or
inc
insb
lds
gs
loopne
push
mov
xor
aas
insb
inc
sbb
xor
ja
pop
stos
jge
ljmp
pop
cmc
xchg
add
or
sbb
out
mov
jp
out
dec
add
inc
jb
jle
xchg
fldenvs
sbb
movsl
lods
push
mov
and
mov
jae
pop
cld
mov
nop
sbb
js
cmpsl
xchg
adc
in
iret
call
lods
and
das
sbb
jbe
cmpsb
adc
fcoml
lea
sub
xchg
fwait
mov
jno
sbb
addr16
mov
pop
movsb
mov
test
das
jno
sub
xor
paddusb
test
mov
pop
or
out
xchg
adcb
mov
out
xchg
sub
inc
sbbb
iret
scas
mov
shll
clc
popa
or
mov
cmpsb
cmp
dec
in
in
push
mov
bound
mov
rcr
inc
xor
xchg
pop
sbb
and
sbb
nop
jnp
fists
sbb
icebp
popa
test
cld
add
dec
jo
shrl
cwtl
inc
mov
mov
lcall
rcrw
lret
push
mov
mov
lret
int3
fs
mov
std
loop
ja
popa
mov
inc
ja
cmp
movsb
add
inc
out
xorl
out
add
push
fstps
xor
cmc
jb
jmp
cmp
cmpsb
cmc
inc
mov
cmp
fidivs
push
ss
cmp
adc
pop
lds
and
push
enter
add
subb
rorl
mov
dec
mov
mov
mov
pop
in
inc
cmp
jmp
push
out
xor
jno
mov
inc
lret
push
test
or
cltd
movsl
jle
iret
leave
es
hlt
int
lahf
mov
pop
incl
cmpsl
lahf
aaa
insb
mov
lds
andps
leavew
pop
stos
movsl
mov
mov
xchg
xchg
iret
nop
mov
or
sbb
push
pop
add
mov
xor
jle
sub
jnp
test
das
xchg
jb
jle
mov
pop
gs
mov
jno
or
mov
pop
add
add
popl
sbb
cmpsl
outsb
outsl
sub
inc
mov
cltd
sti
daa
xor
ret
dec
mov
push
vprotq
fildll
add
ljmp
repz
cwtl
mov
mov
jae
dec
jne
mov
sub
out
dec
cmp
mov
js
ljmp
fistpll
les
ds
inc
and
xor
fimull
cmpsl
inc
xor
fdivs
sbb
push
push
mov
lret
pop
add
pop
inc
mov
pop
sub
ljmp
aas
lock
mov
cltd
or
sbb
inc
fsts
xor
test
xchg
jl
dec
inc
add
movsl
mov
outsb
jl
movsl
pushf
xor
sbb
cmp
popa
pusha
mull
clc
movsl
mov
pop
int
stos
push
aad
ret
test
or
mov
clc
inc
mov
lret
sbb
sbb
or
xchg
xchg
xchg
ss
and
xchg
sbb
inc
clc
mov
dec
fdivs
sbb
cmc
xchg
pop
mov
cmp
push
cmp
xor
iret
lods
pop
pop
popa
xor
cmp
add
jb
inc
inc
pushf
or
jl
xor
dec
pop
pop
push
xor
jecxz
clc
lods
jne
decb
shrd
add
sbb
adc
pop
leave
hlt
mov
or
inc
jmp
jnp
lods
test
inc
push
mov
mov
addr16
mov
test
mov
add
inc
fldl
mov
or
pop
cmp
int
inc
adc
mov
repz
mov
xchg
cmp
rclb
or
and
clc
popa
jecxz
mov
pop
add
mov
push
pop
call
imul
push
and
sahf
stos
and
xchg
lods
push
jcxz
and
data16
pop
mov
jnp
ja
jb
and
push
jmp
pop
and
insl
es
push
fldt
mov
xchg
add
dec
cs
out
xchg
add
icebp
jp
push
mov
jo
pusha
scas
enter
inc
insb
sti
xor
sub
dec
cwtl
jecxz
sub
sbb
inc
lods
and
xor
pop
mov
daa
mov
push
jne
mov
cmp
sar
adc
dec
aad
mov
jae
cmp
rorb
xlat
ljmp
lcall
push
mov
xchg
pop
mov
pop
sub
lods
mov
sub
xchg
adc
inc
jle
mov
jecxz
inc
xor
in
cwtl
test
dec
mov
inc
stos
vunpcklps
fmuls
mov
pusha
jo
dec
fsubr
repnz
arpl
pop
loope
and
dec
push
data16
sub
jb,pt
std
loop
call
push
sub
adc
mov
sub
cmpsb
sub
inc
cmp
mov
dec
cmp
std
test
jecxz
mov
xor
jb
sub
adc
sbbl
out
mov
subl
xor
test
lret
xchg
fnstenv
xchg
xchg
dec
mov
pop
loop
inc
pop
jo
jecxz
aas
push
jb
movsl
inc
xor
loopne
inc
fisubs
ds
push
sahf
mov
int3
xchg
mov
sub
or
or
or
loope
dec
xchg
push
sub
scas
pop
sbb
cmpsb
int
or
int3
nop
and
mov
sbb
adc
cs
jns
mov
pusha
or
scas
std
dec
sbb
mov
dec
sub
push
test
data16
sarl
cltd
ss
shrb
or
addb
mov
mov
daa
repnz
xor
cmc
clc
rolb
sti
xor
gs
and
cltd
aaa
sbb
dec
cmp
in
test
cmp
pop
mov
in
mov
out
loop
sbb
loope
jle
push
ret
mov
daa
xchg
rep
sbb
shrb
mov
cwtl
les
lret
ret
hlt
lods
jo
sti
sub
lods
mov
push
in
xlat
lret
scas
xchg
mov
in
jne
or
clc
sbb
in
pop
push
jno
aad
nop
mov
adc
mov
jp
pop
lret
pop
mov
dec
sub
aam
sbb
adc
outsl
ds
cmovb
mov
lock
insb
mov
push
lcall
aam
xchg
ljmp
addr16
scas
lods
push
clc
cwtl
movsb
dec
push
fldenv
js
xchg
inc
in
dec
lret
dec
mov
xchg
adc
cld
lret
hlt
mov
sbb
add
imul
push
out
fyl2xp1
daa
jl
sbbb
ret
popa
loop
fisttps
push
cmp
icebp
rorb
sahf
add
cmp
cmc
xchg
out
inc
xor
sub
fistpll
xor
mov
or
dec
dec
test
xchg
inc
fidivrl
insl
into
add
or
in
sbb
repz
xchg
jns
leave
add
hlt
push
and
hlt
fwait
cmpsb
mov
data16
sbb
sub
mov
cmp
and
leave
cmpsl
insb
adc
loopne
pop
add
outsb
inc
add
aas
call
mov
ds
and
cs
fmull
pop
je
push
cmp
sub
imul
dec
adc
or
jbe
pop
repnz
xor
ss
sub
in
rorb
sub
test
jb
fcmovu
test
orb
outsl
push
in
stos
add
loop
cmp
neg
fsts
lea
dec
popf
call
and
imul
shrd
in
pop
lcall
faddp
pop
je
adc
addr16
jp
mov
out
or
cli
fnsave
inc
fstl
pop
int3
shlb
stc
insb
mov
cmpsl
jge
sbb
mov
xchg
mov
pop
mov
iret
push
inc
cld
cld
xchg
sub
mov
mov
test
shl
rorb
sub
dec
mov
mov
test
rcrl
xor
lahf
sbb
out
aam
stos
xchg
inc
xchg
loope
cwtl
pop
sub
fcomps
aam
jno
cmp
movsl
out
sti
lea
xor
stos
popf
fisubl
mov
psrad
sub
inc
sbb
xor
mov
popf
cmp
jno
cmp
add
hlt
adc
pop
push
ss
mov
shll
call
jg
lock
gs
xchg
pop
pop
push
iret
pop
mov
push
jo,pn
mov
adc
cli
outsb
push
dec
push
fadd
call
insl
inc
xchg
inc
lcall
mov
stos
std
fiadds
sbb
pop
lret
data16
mov
inc
clc
aaa
idiv
jecxz
jp
or
cs
add
lret
mov
clc
xchg
cltd
add
movl
mov
imul
les
lcall
pop
sbb
sub
push
cmpsb
xchg
imul
fwait
pop
daa
pop
adcl
out
mov
aas
negl
mov
xor
mov
cmpsl
out
cmp
int
cs
orb
xor
sub
cmpsl
mov
dec
pop
and
leave
aaa
push
das
mov
mov
cmp
fadd
xor
jg
in
movsl
subb
test
jae
xchg
or
dec
lods
loope
test
xchg
stc
sub
mov
adc
push
decb
addb
je
mov
in
loope
clc
in
push
fdivs
adc
push
adc
mov
dec
mov
jp
mov
sbb
xor
jle
insl
loopne
push
gs
adc
adc
push
xor
xchg
pop
mov
and
rcrb
jno
jge
jo
out
mov
notb
pop
ljmp
cmp
add
outsb
out
adc
mov
cmpl
xchg
lock
aad
dec
xor
insb
xor
arpl
lret
rol
inc
jecxz
mov
cmp
xchg
icebp
xlat
aaa
cmpsl
push
popf
mov
mov
and
mov
fbstp
or
push
xor
mov
adc
lea
imul
in
andl
add
mov
pusha
push
popa
lret
out
mov
inc
fs
fists
fistl
cmp
sbb
mov
push
jmp
pop
adc
or
insb
inc
push
sbb
cmp
dec
and
add
les
shrl
xorl
ss
add
pop
enter
or
cmp
popf
in
sub
mov
scas
mov
and
jae
out
int
inc
mov
or
cs
cmp
jnp
xor
and
adc
cmp
fldt
pop
cli
aad
pop
jle
ret
daa
les
jle
dec
in
mov
movsb
jae
rcr
es
outsb
loop
rorl
mov
inc
push
sahf
pop
cmpsb
inc
xchg
jb
jle
mov
lock
inc
sub
into
mov
fcmovnb
les
xchg
push
pusha
dec
int
mov
insl
aam
subb
mov
dec
jae
push
stos
push
sbb
xlat
add
js
or
mov
leave
addr16
pop
jge
inc
std
dec
lahf
mov
adc
test
mov
jmp
shr
out
sbb
imul
mov
dec
mov
notb
sarl
cld
cmp
mov
jg
cmpb
jns
mov
das
add
adc
add
cld
int3
add
ffree
aam
xchg
pop
ja
in
inc
or
test
les
xor
jle
push
je
addr16
andl
mov
js
fs
xorb
int3
mov
lret
stos
mov
xchg
cli
test
ret
jb
sub
cmp
push
andb
pop
mov
cmp
or
insl
ljmp
cmp
scas
push
lods
jns
mov
cs
cmc
orl
push
loop
in
xchg
lret
xchg
pushf
adc
and
imul
jge
test
pop
or
cltd
cmp
sbb
leave
dec
faddl
fucomi
cld
imul
push
mov
test
cmp
icebp
shl
mov
jno
iret
popf
sub
cltd
push
add
outsb
pop
hlt
rcrl
inc
mov
xchg
repnz
xor
mov
add
mov
add
mov
dec
or
dec
pusha
call
or
sub
lods
out
mov
in
sahf
push
cmpsl
or
cmp
fldl
int3
push
xchg
out
pushf
pop
sbb
xor
test
bound
adc
rcrl
push
outsb
dec
add
push
pop
lahf
jo
xchg
cmpl
js
arpl
cmp
xchg
pop
inc
faddl
push
sbb
inc
ret
sti
pop
out
xchg
inc
mov
mov
inc
and
pop
ds
jbe
mov
pop
jne
dec
lcall
xchg
adcl
add
mov
push
test
add
and
and
out
dec
in
cmp
les
ret
and
cld
jne
inc
cmp
jecxz
aam
repz
sub
push
cmp
les
icebp
cmp
pop
lods
push
mov
fs
jmp
enter
adc
sub
mov
adc
cmp
mov
outsl
jmp
mov
movsb
lret
in
cmp
ljmp
jg
test
or
lcall
jb
sub
loop
ljmp
orb
jmp
ss
dec
pushf
cli
lock
adc
test
xor
xchg
inc
fwait
shrb
in
pop
cvtps2pi
mov
add
mov
mov
mov
and
ret
aas
ja
sub
insb
and
bound
stos
aas
adc
mov
xlat
sub
xchg
sti
test
jns
cwtl
out
mov
pop
nop
jo
mov
cmp
clc
cwtl
lret
or
aaa
into
sahf
shrl
jecxz
push
in
clc
daa
js
xor
out
sub
xchg
imul
xchg
aad
sahf
loope
mov
xchg
addr16
enter
push
jae
pusha
cmp
jne
pop
push
mov
andl
leave
mov
rorl
pop
in
out
jns
mov
div
int
lahf
adc
cmp
push
out
int
inc
shll
mov
push
cmp
add
cmp
jmp
aam
mov
sub
push
xchg
or
mov
ja
jns
lret
div
sub
add
xchg
and
mov
mov
pushf
hlt
popf
lods
pop
dec
jl
mov
jb
hlt
pop
stos
mov
mov
sbb
push
sbb
or
and
outsb
out
fdivl
xchg
subl
cmpsl
jecxz
lret
ret
lahf
insb
scas
inc
shlb
out
iret
les
push
cmp
add
mov
aaa
pop
sub
repnz
mov
icebp
arpl
push
mov
sbb
mov
outsl
aad
push
cmpsl
clc
or
mov
inc
xchg
push
fs
bound
iret
sti
test
jp
mov
cmp
cmp
xor
lret
xorb
pop
xor
xchg
mov
lds
pop
cmp
lcall
cld
js
adc
iret
or
pop
test
outsb
or
psrad
xor
shl
mov
sbb
push
out
jle
cs
data16
pop
arpl
jbe
and
jl
aaa
dec
lock
mov
mov
add
dec
jbe
sti
cli
les
test
xchg
push
mov
xchg
mov
rcl
pop
mov
mov
insl
jns
pop
incb
lea
insb
dec
fistpll
sub
sarb
jne
test
and
add
mov
add
rolb
fildll
push
enter
cmp
push
pop
add
test
enter
movsl
cmp
pop
in
dec
add
mov
and
lret
pushf
jnp
adcb
je
and
cltd
imul
xchg
push
xchg
xchg
sub
mov
mov
sub
sbb
je
ds
clc
cmp
shll
xchg
int
test
ret
divl
sbb
mov
stos
popf
cmp
mov
pop
add
mov
and
jb
xor
mov
fisttpll
hlt
and
pusha
mov
popa
mov
push
xor
mov
xor
test
popl
xor
mov
xchg
ror
or
sbb
aaa
sahf
mov
aam
rcrb
jle
inc
or
xchg
cmpsl
movsb
pop
mov
push
push
inc
inc
je
jl
mov
scas
jmp
lcall
sbb
int
inc
pushl
loope
jg
lcall
testb
arpl
mov
or
push
push
push
mov
popa
push
pop
or
mov
push
fcoms
mov
xor
dec
push
das
xor
mov
daa
jno
fstps
test
cmp
daa
movsb
and
cmpsb
mov
lret
test
shrb
adc
std
lahf
inc
scas
sub
ljmp
sbb
adc
or
aas
aaa
xchg
inc
mov
xor
enter
xlat
aad
mov
stc
adc
xor
inc
addl
push
in
movsl
lods
dec
rcrb
insb
sub
dec
addr16
push
sub
dec
inc
jnp
adc
or
push
fdivs
mov
jae
xchg
adc
stos
std
xor
in
mov
mov
mov
xchg
ss
ds
push
xlat
mov
inc
cmp
mov
sarl
xchg
jb
cs
aad
cmp
jbe
jmp
dec
repz
sahf
enter
inc
push
loope
pop
ds
sub
xor
mov
push
mov
xchg
aad
sbb
inc
jle
insb
push
inc
and
dec
sub
addr16
loop
in
sub
cmpsl
mov
xor
daa
xor
ds
fnstcw
ret
dec
push
repnz
push
dec
mov
jl
fcmovnu
lea
iret
dec
cmp
rcrb
aaa
clc
mov
cmc
adc
movsb
sbb
cmp
cmpl
xchg
xor
test
mov
xchg
outsb
and
xchg
and
mov
jge
fstps
and
adc
dec
shl
outsb
cmp
sub
mov
pop
adc
lcall
js
mov
lods
pop
adc
xchg
ss
mov
gs
jo
enter
call
or
sahf
icebp
mov
test
in
mov
sbb
fildll
inc
mov
imul
jne
pop
cltd
add
and
sahf
stos
out
mov
std
sbb
insb
decl
mull
cmp
pop
push
sahf
shl
movsb
cmpsl
aad
dec
cmp
adc
lret
gs
xchg
sbb
subb
and
jp
mov
push
cmp
shll
ds
aam
into
xor
jge
mov
adc
xchg
addr16
mov
cmp
push
dec
cld
int
add
mov
enter
mov
out
push
xchg
leave
sbb
nop
cld
pushf
dec
jns
adc
add
fists
jge
push
fisubrl
add
pop
inc
or
xchg
sarb
pop
mov
sbb
pusha
sub
pusha
fstps
outsl
icebp
movsb
mov
daa
xchg
fmull
gs
push
je
fisttpl
jno
adc
fdivp
in
mov
push
push
lcall
mov
add
mov
arpl
jo
inc
aam
scas
adc
cmp
adc
and
xchg
cld
not
cmp
sbb
push
in
adc
jae
addr16
shrb
push
aad
in
sub
sti
and
shll
cmp
fdivp
push
pop
movb
mov
sbb
sbb
jg
push
and
inc
mov
rol
and
add
mov
sbb
push
xor
ja
or
pop
iret
in
aam
int
mov
das
mov
mov
enter
loopne
not
je
push
test
pushf
cld
test
shrl
push
push
lock
push
stos
adc
mov
xorb
insb
mov
icebp
jmp
repz
lahf
out
iret
addr16
dec
stos
imul
fincstp
cmpsl
icebp
clc
jno
xchg
sub
xchg
mov
jns
xchg
push
insl
mov
push
cmc
and
pop
fidivl
sahf
cmp
out
and
in
cmp
je
sub
pop
jae
or
push
mov
and
mov
jle
and
push
loope
scas
in
out
repz
jbe
sbb
lahf
leave
sub
fidivrl
jnp
mov
xchg
or
sbb
ljmp
lret
cmp
mov
mov
nop
sahf
fdivrs
negl
cmp
pop
ja
sbbl
xor
nop
stc
cmpsl
sub
xchg
movsb
cmc
pop
movsb
inc
shr
adc
xor
mov
push
outsl
xchg
test
sub
adc
js
insb
outsb
mov
aaa
or
or
ret
mov
std
scas
pop
mov
cmp
stos
push
sti
pop
in
lret
pop
sbb
icebp
dec
lea
push
add
pop
fsts
int3
shlb
inc
js
mov
mov
xor
ret
notl
sbb
int
inc
iret
aam
sub
mov
jg
sbb
pop
outsb
cs
sbb
xchg
push
adc
loopne
dec
cmpb
xchg
inc
movsl
pop
cmp
test
jbe
push
push
in
push
or
push
stc
ds
sub
jl
cli
dec
test
and
jg
jecxz
xchg
pop
mov
ret
push
lods
repz
nop
lods
mov
stos
jmp
xchg
out
cld
dec
je
repz
inc
and
mov
fisubrl
insb
loope
jmp
mov
inc
int
clc
inc
js
adc
clc
sbb
in
shl
iret
stos
push
xor
add
ret
or
in
fcomps
repnz
pop
ret
push
and
or
jae
inc
adc
pop
inc
and
gs
test
in
arpl
jmp
cmp
jge
test
push
add
mov
outsl
rcl
test
sub
sub
imul
lds
mov
xchg
fistpll
or
call
push
inc
sbb
sub
cmc
int
aam
jo
addr16
scas
jecxz
sub
loopne
adc
outsl
aad
out
dec
ret
inc
mov
dec
add
sbb
cmp
pop
pushf
pop
popf
je
jmp
or
int3
inc
in
xchg
insl
or
sub
push
in
sarb
add
rorl
aas
sbb
jno
addr16
xor
out
arpl
dec
mov
xchg
jo
mov
xchg
push
ja
sbb
jo
mov
add
cltd
xchg
inc
push
mov
popa
test
xor
mov
ret
test
and
movsl
push
orl
pop
mov
je
loope
xor
inc
xchg
push
mov
repnz
int3
repnz
fisttpll
fildll
int
es
out
popf
xlat
es
push
xor
iret
fildl
pop
pop
jl
xchg
mov
aad
lods
jl
movl
cmc
fdivl
sbb
cmp
mov
sbb
push
movsb
dec
push
pusha
popf
xor
pop
mov
mov
stos
jg
mov
les
xor
adc
cli
nop
dec
dec
jno
shl
mov
push
loop
out
sti
xchg
xchg
mov
jb
sbb
pop
jnp
aaa
ret
jno
leave
or
cli
push
les
imull
outsl
dec
rcrl
and
int
hlt
sub
pop
mov
inc
xor
xor
js
mov
mov
lea
inc
mov
push
and
add
popf
mov
test
push
fadds
mov
push
inc
ret
mov
ljmpw
cld
mov
shrb
jae
test
inc
cwtl
xchg
ret
inc
or
jp
or
push
je
out
hlt
jg
sbb
push
loopne
in
mov
jns
sub
lret
and
or
cmp
es
jmp
push
repz
push
ss
mov
rclb
es
mov
lahf
ljmp
xor
rcr
pop
pop
leave
lcall
fistpll
inc
dec
into
repnz
roll
insl
inc
add
rcrl
pop
into
and
imul
pushf
fidivrs
ret
sti
enter
jbe
mov
push
sbb
pop
mov
lcall
test
imul
xor
sbb
int3
aaa
mov
das
push
lea
adc
cmpsl
test
movsb
adc
mov
inc
sub
pusha
cmpsb
sti
pop
lahf
icebp
cli
scas
push
out
mov
cmp
mov
testb
sbb
or
cmp
lock
stos
dec
adc
pop
orl
push
pop
lea
cmp
pop
imul
and
inc
inc
cmp
lock
or
pop
adc
adc
in
and
mov
sub
push
sahf
sbb
sti
dec
push
mov
inc
ds
loop
dec
out
test
push
imul
or
pop
decb
cmpsl
mov
aas
xchg
mov
test
lahf
pop
and
add
test
adc
inc
movsb
hlt
sbb
inc
xor
xchg
sahf
cs
cmc
cmp
popa
cs
pop
mov
imul
js
adc
cs
add
mov
dec
daa
pop
fwait
xchg
xchg
lret
mov
xor
push
pop
pop
pusha
test
xor
lea
test
or
adc
nop
jo
mov
mov
jl
pop
and
lods
pop
cmp
or
outsl
add
icebp
adc
scas
inc
and
data16
dec
outsl
mov
xor
arpl
jno
add
xchg
loope
cmpsl
mov
and
mov
in
popa
int
and
inc
in
pop
jae
xchg
mov
mov
push
insb
push
mov
pop
jo
push
lcall
mov
jb
cltd
push
les
fildl
cmovle
stos
fnsave
fwait
cltd
fs
or
dec
outsb
mov
mov
inc
test
or
dec
inc
out
xor
inc
call
test
rcl
mov
mov
xor
and
outsb
sbb
out
iret
ret
push
dec
rcrb
adc
rcrl
sbb
xor
insb
inc
xchg
shrb
out
push
or
icebp
and
mov
rcl
mov
out
inc
fwait
xchg
movsl
jne
cmp
push
dec
sti
leave
fwait
xchg
mov
fdivs
inc
test
fidivrs
mov
sar
ret
pop
mov
lds
push
in
dec
or
int3
jg
lods
ret
rolb
in
xchg
mov
movsl
lcall
mov
jmp
roll
test
roll
add
sbb
xchg
sub
mov
inc
or
and
stc
lods
add
iret
out
hlt
insl
mov
add
sti
sbb
aaa
cmpsl
and
rorl
repnz
into
ret
push
addr16
and
stos
pop
dec
sbb
cs
cld
cli
or
test
ljmp
add
inc
push
aad
insb
dec
mov
call
cmp
push
dec
mov
xchg
pop
xor
push
sti
adc
pop
stc
xchg
mov
sbbl
and
sbb
add
insb
stc
sub
or
into
sbb
push
xchg
xor
lods
xorl
aas
movsb
int
lea
lret
mov
movsb
or
aam
lock
or
xor
lea
mov
stc
ror
add
outsl
out
adc
jg
loop
and
and
movsl
movsl
inc
sbbb
rol
hlt
cld
lea
mov
fwait
mov
adc
sbb
das
fnstenv
movb
push
mov
mov
cmp
mov
inc
cmc
pop
data16
es
pop
sbb
clc
mov
cmpsb
jle
ja
filds
lds
sti
inc
pop
and
push
inc
insl
insl
test
cwtl
pop
inc
add
jo
out
ljmp
and
pop
jae
mov
dec
jae
sub
scas
repz
or
push
cmp
push
leave
outsl
sbb
mov
loope
push
in
enter
mov
xchg
insb
and
js
jmp
fadds
adc
push
push
mov
pop
sbb
mov
je
xor
dec
push
or
sub
sbb
pop
fdivs
inc
sub
sub
push
add
or
pop
sbb
repz
xchg
in
sbb
sbb
inc
add
jb
fcomp
dec
in
sbbb
jne
and
pop
loope
adcb
adc
fiadds
test
mov
mov
inc
lret
lcall
push
xchg
popf
adc
pusha
adc
jmp
iret
std
push
add
or
mov
lcall
and
cmp
sbb
dec
mov
rcr
les
sbb
pop
es
je
arpl
jns,pn
jmp
mov
clc
push
mov
mov
nop
adc
adc
icebp
or
inc
std
xor
xor
lods
out
fisubl
jnp
movsl
sub
adc
outsb
jno
loop
imulb
scas
inc
adc
lods
inc
das
mov
stos
and
iret
xor
in
movsl
in
imull
and
add
fiadds
pop
cmpsl
mov
nop
add
xchg
imul
inc
adc
rcrb
dec
call
cli
mov
rcll
mov
das
adcl
fcompl
int
setge
movl
out
aam
mov
es
mov
xor
mov
fmull
inc
dec
xchg
fcoml
lods
ja
out
xchg
pushl
and
in
push
clc
and
add
adc
sahf
loope
gs
sub
std
test
jmp
cli
fs
add
pusha
dec
stos
cs
mov
pop
enter
and
pop
fwait
lret
add
shlb
clc
pop
jbe
inc
inc
or
movsb
mov
mov
call
push
jae
sbb
and
dec
pop
sahf
xor
call
pop
rcrb
xor
xor
and
in
pop
cmp
out
xor
neg
sub
dec
fcoml
cmc
adc
call
das
ja
lcall
rolb
mov
dec
cli
lret
inc
outsl
mov
lcall
sbbl
pop
or
mov
rorb
ljmp
push
jno
mov
xchg
mov
lret
lock
hlt
push
jp
dec
jmp
or
loop
mov
in
les
mov
repz
movsl
mov
xchg
enter
mov
lds
les
and
xchg
aad
sbb
adc
dec
cmp
cmp
cmp
cs
xchg
push
test
sbb
dec
inc
cmpsb
cmp
jb
xchg
sub
inc
and
cmp
cmpsb
add
adc
push
hlt
mov
dec
mov
loopne
addr16
scas
and
lock
int3
popf
jb
xchg
mov
psubd
adcb
icebp
jbe
push
addl
fs
pusha
jg
jecxz
in
mov
jne
aam
xor
imul
loopne
adc
movsb
jbe
outsb
rolb
pop
cli
das
jb
cmp
adc
mov
dec
std
xor
mov
filds
mov
cli
pop
loopne
rcll
int
ja
sub
scas
jae
pop
jge
xor
adc
lds
lods
push
push
inc
ret
shlb
rolb
aas
popw
stos
mov
push
fdiv
in
loope
stc
shrl
xor
leave
hlt
pop
push
push
clc
sub
add
fisttpl
stc
sarl
mov
mov
push
leave
lahf
aam
fsubp
andb
push
mov
sahf
add
mov
mov
xor
insl
jmp
or
test
inc
xchg
inc
stos
mov
xchg
add
mov
rcrl
sahf
fxrstor
rcll
inc
gs
sub
or
jns
inc
pushl
push
jge
cli
mov
push
pusha
jno
les
mov
pop
sbb
std
iret
sbb
push
mov
sub
mov
mov
jl
cmp
into
repnz
imul
sub
aad
adc
int
sarl
and
repnz
add
mov
push
cmp
fwait
in
pop
or
sbb
ja
leave
nop
imull
and
bound
dec
test
pusha
jmp
add
lret
pop
ljmp
push
hlt
lock
mov
cmc
pop
xchg
popa
pop
pop
daa
add
movsl
cmp
push
enter
inc
call
cmp
xor
arpl
jne
sbb
and
sbb
mov
sub
sub
and
jecxz
arpl
fidivrl
jb
subb
in
or
fsts
lods
fs
jmp
in
adc
jae
xchg
test
mov
cmp
inc
shrl
or
pop
mov
sub
cmc
and
pop
and
push
dec
and
dec
xchg
mov
push
jae,pt
outsl
es
rcr
mov
cmp
mov
xchg
mov
dec
loop
ret
insb
dec
icebp
les
cwtl
mov
insb
pand
pusha
jo
popa
repz
testb
sbb
iret
repz
cmp
ds
add
xor
clc
adc
jae
adc
add
dec
imul
pushf
adc
jo
ljmp
dec
mov
div
das
sub
pop
xor
push
data16
addr16
xchg
xor
shl
movb
dec
movsb
and
int
addr16
push
xchg
jge
pop
push
lock
mov
popf
dec
popf
loope
adc
and
mov
movsb
into
mov
pop
mov
lods
mov
cli
gs
push
xchg
add
lret
popf
pop
fwait
or
div
sbb
ret
sarb
sub
cmp
cwtl
jno
cltd
pop
lret
ficomps
mov
and
popa
std
dec
subb
push
test
ljmp
cld
sbbb
shl
in
dec
fbstp
rorl
xor
sbb
aam
test
inc
adcb
sahf
nop
fwait
jno
sbb
add
lods
push
adc
jo
sar
jge
outsl
push
or
stc
or
jo
ja
mov
popf
xor
mov
jp
mov
pop
cwtl
ss
sbbb
mov
cmp
pop
imul
add
mov
pop
mov
inc
gs
sahf
pop
int3
in
aas
pop
jg
mov
push
adc
enter
inc
divl
out
jg
jle
hlt
fisttps
imul
popf
shrl
cwtl
pop
mov
in
mov
icebp
mov
sahf
cmp
sarb
adcb
adc
cmp
loope
dec
jle
cld
fs
repnz
leave
int
scas
outsb
dec
push
sbbl
inc
mov
jmp
outsb
mov
or
fs
loope
in
into
mov
xorb
mov
lret
in
movb
push
movsb
icebp
cli
lcall
jnp
inc
rcr
lock
adc
add
imul
clc
ret
add
mov
sub
subl
inc
addr16
sar
enter
inc
mov
insl
rcll
movsl
stc
stos
jno
repz
xlat
orl
repnz
outsl
push
adc
hlt
jmp
cs
xor
cmp
xchg
push
ja
xlat
loop
mov
jmp
mov
in
dec
push
stos
cmc
lods
cs
jnp
sahf
clc
inc
addr16
dec
jmp
sarb
pop
jmp
mov
dec
bound
dec
xor
and
lret
pop
jb
into
sub
mov
push
fdivs
ljmp
loopne
adc
lret
pop
cmp
sarl
dec
mov
test
in
push
mov
adc
push
pop
and
xor
jge
xor
mov
push
or
push
std
or
sub
cli
loop
outsb
mov
arpl
popa
sbb
repnz
inc
xchg
js
xchg
loope
inc
lods
pop
rorl
jo
push
push
testl
hlt
int3
fmull
scas
sub
mov
and
test
aam
sahf
pushf
fsubl
je
mov
cwtl
add
jp
daa
push
xchg
pop
add
sub
cmp
lods
test
push
mov
xor
leave
imul
inc
cmp
stc
xchg
dec
jecxz
scas
scas
mov
orb
add
test
or
lds
sub
pop
cwtl
push
inc
fcoms
cmp
mov
shr
shlb
or
rorl
push
in
xor
mov
je
stos
xchg
mov
xchg
pop
decb
xor
decb
test
xchg
std
in
dec
daa
lds
push
shll
xchg
mov
fisubs
sbb
mov
sbb
inc
cmp
xchg
pop
jne
mov
sahf
repz
fsubr
sbb
shl
or
inc
mov
test
cmp
cmpsl
cmp
and
in
cmp
insb
jns
push
push
mov
adc
and
and
lahf
cmc
outsb
inc
push
out
push
negl
inc
fdivs
test
inc
dec
push
cmp
mov
icebp
sahf
xchg
pop
and
add
add
push
xchg
ret
divb
xlat
fadds
rorb
dec
test
xchg
jne
cmp
daa
dec
sub
mov
lock
dec
int3
mov
xchg
and
sbb
mov
lods
and
aaa
jno
xchg
mov
sub
sbb
adc
out
sbb
in
dec
iretw
jns
adc
movsl
scas
imul
mov
inc
inc
lret
jl
test
adc
pop
out
add
xchg
jnp
std
test
xlat
mov
mov
mov
pop
aad
les
inc
inc
hlt
jg
pop
test
call
out
fcmovnbe
getsec
inc
aam
push
sbb
sub
lods
cmp
popf
xchg
add
arpl
jge
sub
lcall
push
dec
add
out
ss
mov
cli
add
xchg
daa
mov
mov
icebp
xchg
inc
mov
sti
mov
xchg
or
clc
cld
pop
fstpl
and
jno
push
popa
subb
xor
test
pop
dec
pusha
dec
rcrl
cwtl
jg
fdivrs
adc
nop
inc
and
subb
shl
stc
cmp
jle
movsb
mov
sub
pop
fwait
lods
and
adc
enter
rolb
jno
mov
shrl
popf
jb
out
aas
mov
jecxz
mov
and
cld
mov
and
push
out
sub
lea
push
shr
mov
push
cmp
pop
js
xchg
push
and
je
push
or
test
pop
out
daa
or
sub
bound
pop
insl
insb
add
dec
sti
xchg
jnp
clc
inc
pop
lea
mov
aas
dec
add
das
sub
shlb
sbb
sti
add
push
ret
xor
psrld
xchg
fisttpl
dec
das
out
xchg
faddl
dec
je
mov
xor
ds
dec
aam
lock
pusha
and
push
rclb
in
add
mov
mov
push
rolb
dec
inc
mov
pusha
inc
clc
or
dec
xchg
negb
cmp
push
mov
aas
push
dec
sbb
mov
lret
lea
adc
in
cmp
iret
addb
pop
pusha
adc
add
mov
jne
popl
or
fs
mov
mov
movsb
mov
push
xor
or
xor
mov
sbb
push
dec
enter
aam
mov
fnstsw
lock
cmp
mov
stc
imul
mov
push
addb
dec
gs
push
mov
or
cmpsb
lret
sub
popa
stos
pop
and
xor
pop
movsb
imul
jg
mov
mov
jo
movsb
jne
test
adc
adc
mov
sbbb
and
test
int
outsl
daa
sub
mov
fimull
hlt
adc
add
repz
push
fdivp
and
repnz
sarb
enter
dec
hlt
fiaddl
stos
roll
xchg
cld
stc
adc
fsubl
ja
mov
addr16
lret
ret
mov
mov
jae
mov
pusha
dec
pop
out
jmp
cwtl
xor
jno
ljmp
xchg
lds
fistl
movsl
pusha
dec
mov
jne
inc
pop
stos
or
pop
and
outsl
dec
and
bound
sub
jno
incb
sbb
pushf
rcrb
mov
mov
mov
das
pop
fwait
push
cltd
sbb
fsub
pop
inc
aad
mov
xlat
mov
inc
sbb
push
push
add
or
in
fucomp
aaa
add
insb
or
pop
mov
lret
and
data16
jle
push
sub
ljmp
and
add
jo
pop
repnz
mov
add
fsub
push
inc
vpaddsb
loop
jle
pop
inc
xor
add
push
and
or
sti
dec
jo
call
mov
jnp
add
lock
cmpsb
ss
test
outsl
pop
mov
fildl
movb
sub
and
cli
fists
cmp
jecxz
dec
test
xchg
lods
mov
mov
xlat
inc
cmpsl
imul
push
ds
jmp
loope
dec
ss
lret
in
cmp
roll
insl
adc
pop
sub
or
lods
aas
and
scas
imul
movsl
fnsave
aas
js
sti
in
jo
jge
push
repnz
or
fdivp
push
mov
push
xor
jecxz
popa
repnz
fcompl
sub
sbb
adc
xchg
sub
mov
pop
push
xor
pushf
and
lret
jmp
jae
jnp
and
popa
ds
mov
loop
mov
sub
or
mov
test
add
adc
in
call
or
ret
sbb
lea
xchg
cmpsl
and
mov
xchg
call
negb
pop
jns
ja
add
sbb
popf
xchg
cmp
add
test
cmc
xchg
inc
rclb
jecxz
adcb
xchg
mov
dec
add
xchg
mov
adc
jmp
ret
out
jmp
inc
mov
pop
in
pushf
and
sahf
aam
push
pop
jmp
and
and
mov
xchg
sub
loope
xlat
mov
pop
add
addl
jmp
inc
sbb
clc
push
add
pop
jbe
or
mov
scas
xor
enter
fldenv
dec
stos
jb
mov
lods
fiadds
in
roll
xchg
mov
xchg
dec
adc
outsl
stos
ss
xchg
jb
xor
xor
push
and
out
insl
mov
aam
jns
sbb
inc
cmp
jno
xor
cmp
cld
cmpsl
sbb
sub
cmp
insl
or
lods
pop
hlt
jb
scas
or
push
cmp
mov
in
mul
sub
lock
cmpsb
hlt
xchg
fdiv
jecxz
mov
in
add
sbbl
outsl
in
pop
adcl
xchg
pop
addr16
push
push
mov
mov
mov
pop
cmp
or
mov
push
or
jp
jns
xchg
adc
cmpsl
dec
jo
sti
mov
loopne
stos
mov
cmp
data16
daa
imul
rorb
and
mov
or
test
jnp
js
add
addl
push
popa
or
pop
mov
push
mov
lret
les
lcall
in
dec
ss
jg
lret
rcrb
pop
icebp
push
repz
jb
movsb
insl
in
add
sbb
lds
or
nop
mov
mov
mov
outsl
mov
mov
test
jae
sbb
sbb
or
and
adc
xchg
loopne
jne
cmp
jp
push
in
or
add
insl
in
or
jb
mov
out
xor
shrl
and
push
movq
mov
jns
add
push
mov
lds
inc
and
adc
inc
clc
test
mov
repz
mov
fnstcw
fsubl
pop
sarl
lahf
inc
jp
loop
add
sbb
mov
jbe
nop
dec
sub
fadd
dec
jno
xor
jnp
jb
xor
fbld
icebp
iret
pop
cmp
mov
xchg
idivb
sub
push
pushf
jb
cltd
xor
and
scas
sub
add
daa
aad
in
adc
iret
movsl
sbb
jno
xchg
inc
mov
mov
cmp
out
xchg
repnz
icebp
sub
mov
test
leave
stc
out
cmp
xor
ss
mov
push
xor
arpl
aam
call
jp
clc
push
subb
dec
sub
push
xchg
ficompl
int
iret
stc
dec
and
cmp
cmp
shlb
xchg
jne
lret
mov
movsb
stos
jno
push
repnz
dec
dec
lea
hlt
inc
ljmp
daa
shrb
sbb
addr16
test
cmp
clc
xor
cmp
add
adc
pop
lret
loope
push
jnp
jno
mov
cmp
popf
adc
in
popa
stos
sbb
mov
mov
or
xor
or
dec
sub
sub
arpl
testl
jns
out
aas
test
dec
jecxz
test
xchg
lock
jbe
insb
sub
mov
dec
in
lcall
push
adc
mov
clc
sbb
jmp
mov
mov
push
sbb
sar
jb
sub
inc
jp
icebp
mov
push
jecxz
mov
sar
pop
pusha
pop
push
push
xor
mov
lock
stc
insb
mov
sub
mov
xchg
inc
in
cmp
push
jae
popa
xchg
cmc
dec
shlb
push
xlat
pop
sbb
fists
fisubrl
test
cwtl
dec
mov
icebp
sbb
ss
mov
dec
dec
leave
outsb
shl
imul
roll
pop
or
push
sahf
into
jno
pop
ret
dec
mov
jge
inc
or
pop
add
sub
jle
push
mov
lcall
sub
lock
test
pusha
sub
lds
pop
jbe
loop
in
popa
adc
mov
cmpsl
cmpsb
out
xchg
xor
loop
pushw
cmp
rcll
lahf
in
pop
xchg
pusha
lods
mov
orl
shll
mov
fimull
pop
pop
aaa
adc
sahf
pop
inc
sar
sub
cmc
jbe
pop
das
xchg
cs
loopne
imull
xchg
mov
fucom
scas
pushw
ficomps
dec
jge
stos
pop
shll
in
jnp
xchg
dec
sub
mov
xlat
sahf
fcmovb
jg
pop
adc
inc
dec
test
cmp
mov
jg
mov
push
sub
imul
aam
arpl
xor
push
ds
mov
mov
adcl
xchg
push
imul
lahf
pop
jne
pop
outsl
jg
xchg
mov
mov
push
jbe
pop
add
mov
fimuls
or
push
mov
nop
int3
mov
cmp
and
scas
sarb
mov
popf
aaa
ficoms
mov
testl
outsb
pop
daa
ficomps
cpuid
mov
aad
orb
mov
fimull
jnp
inc
js
xchg
mov
xchg
push
push
loope
mov
mov
xor
pop
addr16
fildll
and
scas
mov
iret
cmp
mov
imul
inc
sub
xor
mov
clc
xor
popf
int3
jbe
push
jge
fstl
cli
cmc
fidivl
pusha
add
jmp
nop
add
push
push
sbb
xchg
sbb
fisubl
jge
cltd
stos
push
dec
divl
mov
jae
xor
push
fldcw
and
jbe
orl
push
cmp
inc
loop
sarl
mov
mov
sbb
pop
mov
mov
mov
clc
sub
rcrl
ficoml
pop
lcall
insb
pusha
xor
ret
test
gs
add
test
mov
call
jmp
push
data16
xchg
xor
sbb
pop
xor
mov
pop
mov
pop
mov
test
sub
mulb
stc
jp
lcall
adc
leave
jne
add
xlat
sub
cmc
adc
insb
sbb
lods
inc
or
jmp
test
cmp
fwait
add
ljmp
xor
dec
repz
data16
cwtl
cmpsb
dec
in
fistl
push
mov
add
out
xor
fmul
lret
lods
orl
mov
push
lea
add
sbb
pop
inc
cmp
xchg
pusha
xor
addr16
sbb
filds
in
arpl
add
dec
lcall
pop
int
push
imul
push
mov
testb
inc
inc
push
cmc
filds
inc
scas
shr
ret
ret
rcrb
mov
aad
and
popa
inc
cmp
into
mov
and
lcall
pop
scas
mov
movsb
dec
rcrb
pop
faddl
pop
pop
mov
sbb
adc
cli
js
push
outsb
xchg
jmp
inc
mov
sub
hlt
lea
push
fsubrl
scas
repz
cmp
lods
mov
xchg
sbb
pop
in
mov
or
xchg
sub
loop
cmp
mov
into
sbb
mov
pop
xchg
and
ja
repz
gs
je
dec
xchg
sub
and
cmp
in
cs
pop
mov
test
leave
mov
xor
ret
mov
fs
xchg
xchg
xchg
fsubrl
sti
out
xor
push
sahf
adc
dec
jae
pop
fnstsw
sti
rorb
mov
jb
or
les
inc
mov
jg
repz
jno
icebp
lods
push
cmpsl
push
xchg
or
mov
shr
leave
or
inc
jbe
div
rorl
clc
sub
sub
outsl
jne
xchg
dec
jno
and
push
addr16
jmp
sub
rclb
movsl
sub
ja
aaa
enter
xchg
in
ret
pop
popf
push
jae
cmp
push
or
idivb
pushf
jb
lret
shl
inc
imul
addl
ljmp
sbb
dec
test
out
dec
adc
mov
sbb
das
pop
mov
fwait
ret
cmp
into
mov
out
jmp
jns
push
xchg
push
adc
or
dec
sbb
and
sbb
popl
push
sbb
outsl
mov
mov
pop
cmp
jp
push
in
sbb
sbb
scas
and
cmc
icebp
jg
xchg
add
dec
int
stos
icebp
inc
jmp
das
xchg
mov
jmp
std
pop
inc
js
xor
xor
arpl
jle
sub
outsl
loope
jne
mov
mov
mov
in
push
cltd
fsubs
push
mov
adc
cld
dec
scas
pop
xor
sbb
add
les
negl
in
loope
fiaddl
aas
ja
cmpsb
nop
shll
sbb
jg
jp
mov
xlat
pop
jl
aad
jmp
lret
in
roll
lods
bound
loopne
shlb
dec
call
adc
mov
mov
cld
mov
gs
sti
pop
sbb
cmp
sahf
xchg
ficoml
adc
mov
lahf
jl
insl
arpl
pop
inc
cmp
out
xor
jae
mov
inc
mov
paddsw
adc
outsb
jp
fcoml
sbb
cld
ljmp
mov
adc
lret
popf
sbb
scas
nopl
sbb
pop
dec
and
and
das
js
sbb
shl
int
loop
sub
hlt
loop
xor
dec
stc
jp
fidivrs
mov
shrl
inc
add
or
lahf
rorl
sub
jbe
int3
mov
and
fiaddl
lahf
dec
push
mov
or
into
stos
stos
repz
sti
sbb
mov
orb
cmp
jo
clc
and
sti
mov
xchg
sub
add
int3
sbb
aad
popa
rep
adc
mov
jp
push
dec
hlt
rcll
mov
cmp
lock
insl
pop
fwait
orl
adc
adc
je
mov
shr
inc
jp
xor
lods
inc
lods
mov
clc
cmp
loope
sahf
outsl
popf
add
xor
lock
sbb
xchg
push
pop
xchg
jb
cwtl
and
jg
mov
lock
pop
rcrb
push
xor
enter
pop
mov
in
cli
dec
push
lret
inc
adc
mov
pushf
std
jmp
faddl
push
test
out
sbb
in
js
ret
test
mov
aam
fwait
or
add
loope
mov
lock
fcomps
movsl
adc
xchg
mov
adc
std
mov
imul
push
cmc
mov
adc
call
push
mov
lods
outsb
js
repz
ljmp
fs
call
xor
loop
mov
jns
cmp
call
pop
jmp
fdivrs
mov
push
scas
push
sarl
inc
loop
nop
mov
int3
jns
push
stc
pop
mov
scas
xorl
mov
adc
mov
cmp
mov
jmp
push
repnz
mov
loope
movsl
ja
in
or
popa
push
adc
push
jge
cmpsb
or
mov
outsl
xchg
pop
loope
inc
jl
arpl
sub
pop
cmc
jge
cltd
leave
pop
movsb
inc
fsubp
jge
mov
scas
dec
pop
sub
stc
out
adc
rorb
push
pop
push
leave
out
clc
ret
enter
in
cli
pusha
cwtl
xchg
pop
sahf
xlat
stos
adc
and
out
xor
dec
ljmp
inc
int3
cmp
decb
fadds
test
adc
mov
nop
cmc
mov
add
pushl
pop
call
mov
inc
inc
dec
movb
ret
add
ret
sub
mov
in
rcrb
add
cmpsl
pop
cmp
js
xlat
pushf
pop
mov
mov
test
int
cld
into
lcall
xchg
mov
push
icebp
iret
loop
dec
mov
imul
xchg
and
lcall
dec
in
mov
faddl
in
mov
into
mov
lods
insb
push
pop
push
jne
data16
fldl
xlat
xchg
push
fiadds
pushf
mov
mov
pop
cmpsl
adc
pop
sub
jo
das
iret
push
int
popa
jge
mov
push
scas
dec
rcrl
mov
lods
adc
getsec
imul
xchg
jmp
stc
daa
inc
cmp
mov
mov
push
push
gs
in
cmp
mov
dec
xchg
arpl
cmp
or
imul
push
int
outsb
mov
aas
lds
sub
fwait
pop
lds
pop
sub
push
cmp
pushf
xchg
mov
ds
fidivl
insl
mov
jg
shlb
ljmp
xchg
jecxz
loop
sbb
insb
clc
leave
mov
mov
cmp
xor
add
adc
push
pop
jbe
das
push
test
adc
sti
inc
adc
push
jp
ljmp
gs
jle
sti
ljmp
popa
es
cmc
xorl
add
stos
clc
push
mov
iret
aam
ljmp
lret
repz
mov
mov
andb
push
rcrl
sub
in
cmovo
popf
xchg
push
mov
sub
sub
shr
popa
sbb
cmp
xor
mov
bound
jl
lret
adc
loope
das
mov
in
mov
mov
push
test
jno
movsb
jns
push
pop
push
stos
cmp
jns
cmp
add
nop
sti
dec
dec
pop
aas
sbb
sbb
call
push
call
shrb
sbb
mov
dec
ss
enter
es
mov
mov
jmp
push
xchg
dec
sub
js
je
lret
jmp
in
imul
mov
es
jae
imul
fcmovu
lahf
push
mov
mov
mov
es
push
mov
adc
adc
out
push
mov
xlat
fdivp
adc
mov
loopne
movsl
fadds
xor
cwtl
pop
fimull
push
sbb
int3
out
xor
call
cmp
std
shll
mov
cli
pop
pop
xlat
inc
lods
sbb
divl
dec
nop
and
lods
ja
out
push
mov
xor
loop
ljmp
mov
enter
leave
sahf
inc
movb
add
test
jno
lods
insl
xchg
cmp
fmul
mov
shll
out
daa
xchg
add
sbbb
mov
add
pop
orl
cmp
lea
push
sbb
push
adc
mov
rcl
das
xchg
cmp
push
add
jnp
mov
jns
xchg
cs
mov
push
sub
push
in
movl
movsb
mov
into
mov
push
insl
sbb
mov
and
xor
jns
sub
aaa
push
ja
test
lods
gs
push
cmp
jle
jg
test
test
mov
mov
xor
clc
loop
in
rorl
pop
addl
out
pop
jle
xchg
pop
jg
rclb
cli
test
or
jmp
add
es
xchg
repnz
js
cwtl
and
push
dec
std
jl
push
push
sbb
shrl
fisttps
iret
movsb
lahf
dec
mov
test
dec
and
cmp
adc
test
jnp
push
sbb
sub
rcrb
xor
xchg
imul
pop
stc
mov
pop
push
cwtl
dec
out
xor
sbb
jno
sub
pop
dec
fnstenv
ljmp
dec
or
in
lret
je
ds
test
fildl
out
dec
stos
cmp
and
shr
sbb
add
push
repnz
mov
mov
ret
pop
jo
xchg
das
push
inc
mov
orb
xor
aaa
jo
loope
insl
ds
jmp
pop
or
jp
inc
xor
lock
dec
or
dec
pusha
sbb
adc
mov
sbb
scas
mov
dec
mov
and
out
mov
sbb
gs
mov
mov
xor
mov
mov
stos
mov
and
push
lcall
jns
or
cltd
jge
out
pushf
mov
sub
add
in
xchg
imul
or
cld
mov
adc
icebp
iret
out
aad
mov
pop
out
neg
sub
insl
jle
mov
mov
adc
in
xor
xchg
or
std
inc
insl
loope
cmpsl
repz
mov
xchg
xchg
sahf
loopne
sbb
adc
enter
jl
inc
dec
mov
les
push
popf
and
enter
mov
stc
into
aam
inc
xchg
adc
ret
jl
fldl
out
fdivs
nop
xor
sbb
or
gs
js
push
dec
addr16
sub
fildl
decl
mov
imul
push
mov
push
cmpsl
ja
jmp
xor
mov
inc
das
call
mov
jbe
stos
fsubr
sub
cmp
outsl
push
sbb
mov
and
jno
ljmp
in
aad
scas
sub
dec
incl
mov
pop
xor
jnp
addr16
lmsw
je
stos
out
cmp
sbb
fcmove
in
movsl
xchg
sub
or
and
into
add
cmpsb
lret
cmc
loop
inc
push
xor
test
pop
push
sbb
jo
jge
add
mov
push
insb
jne
daa
sbb
sub
loop
jbe
push
aaa
icebp
leave
and
call
or
into
scas
pop
test
clc
jg
dec
fldcw
ret
sub
mov
fadds
inc
or
insb
adc
jmp
or
js
add
addr16
mov
sub
mov
mov
pop
mov
outsl
es
mov
xlat
ljmp
sub
xlat
dec
sbb
sahf
pop
xor
pop
out
and
lahf
adc
insl
sar
mov
and
push
push
jns
int
loop
jle
adc
fiadds
imul
xlat
pusha
pop
xchg
sahf
xchg
jns
fstps
test
xchg
inc
mov
sbb
mov
aaa
icebp
inc
cmc
movsb
outsl
arpl
push
sub
popf
cld
or
jae
pop
inc
adc
dec
out
jecxz
stos
fildll
pushf
mov
sbb
mov
adc
lea
push
and
inc
std
mov
movsl
cmc
enter
in
mov
sub
mov
cmp
cmc
fstpl
lea
sarl
lret
mov
sub
orb
xchg
cmp
sub
pop
push
pop
inc
cmp
jnp
xlat
add
test
sub
pop
ret
mov
mov
or
add
lcall
gs
jb
es
in
push
orl
jno
test
xchg
data16
pop
adc
es
mov
adc
in
faddl
xor
inc
dec
push
clc
inc
pop
adc
push
and
push
aaa
jle
sub
cmp
mov
je
cmpsb
fcmove
stos
add
jg
rcrl
fildll
test
test
xlat
jle
sub
out
test
adc
jg
or
push
inc
fadds
cmpsl
dec
dec
fs
fistpl
js
pusha
loop
int3
adc
xchg
outsl
dec
jns
in
push
push
inc
pop
enter
pop
test
adc
mov
lods
push
push
cwtl
sub
pop
dec
pop
mov
dec
cwtl
pop
test
push
fucom
inc
rcr
lcall
adc
inc
rcll
pop
or
cwtl
mov
sub
dec
std
push
maxps
inc
adc
je
jns
shlb
ss
cmpsb
inc
add
rcrb
xchg
add
fsubrs
add
pop
popf
mov
sub
ss
mov
inc
inc
inc
outsl
das
repz
jbe
mov
stc
test
and
fsub
imul
andnps
movsl
aas
test
stc
popl
add
add
in
push
out
inc
out
mov
lret
and
sub
mov
hlt
inc
add
adc
jl
enter
outsl
gs
pushf
or
cltd
jecxz
pusha
push
mov
pop
iret
and
mov
cmp
dec
daa
shrb
push
mov
pop
xchg
outsl
fnstenv
shl
jp
inc
sub
mov
cwtl
int3
dec
loop
pushf
ret
fldcw
xchg
ds
popf
cltd
js
jp
in
inc
or
divl
fistl
pushf
mov
icebp
pop
sti
xor
int3
cmp
ror
nop
xchg
enter
repz
outsl
test
adc
outsl
shlb
fprem
test
xor
jno
out
pop
mov
xchg
mov
push
enter
sbb
cmc
pop
movsl
shll
inc
leave
jle
aas
flds
arpl
dec
fldl
pushf
dec
dec
test
and
movsl
jmp
hlt
into
xchg
je
in
and
repz
pop
lock
sbb
jge
cltd
push
xchg
and
loopne
out
push
and
shr
mov
dec
loop
pop
mov
loopne
aaa
mov
mov
dec
mov
xchg
mov
fwait
sub
sbb
xchg
stos
inc
and
inc
test
movsl
pop
scas
xchg
xlat
mov
jmp
push
rcrl
or
inc
jge
add
dec
inc
pop
jecxz
and
push
insb
mov
fs
data16
sub
xchg
in
es
bound
adc
pop
pop
and
sbb
jl
sub
pop
cwtl
and
out
enter
or
push
push
popf
cmp
dec
leave
push
sub
bound
mov
and
rclb
ret
xchg
and
in
add
mov
stos
in
in
jnp
xlat
push
sub
pop
fadds
pusha
xchg
inc
adc
jp
scas
hlt
add
mov
cli
add
add
cld
adc
mov
pusha
jg
out
push
and
and
jnp
xor
cli
pop
out
lret
inc
mov
sbb
mov
push
aaa
jo
clc
sbb
in
sbb
cld
push
dec
push
xchg
inc
mov
sbb
and
popf
jns
arpl
ss
ret
and
dec
sahf
out
out
lock
clc
adc
bound
push
scas
inc
cmp
arpl
jb
inc
lock
add
test
jb
mov
add
insb
xchg
lret
fwait
ds
xchg
sbbl
stos
push
cld
sub
inc
xchg
iret
mov
arpl
dec
dec
pop
lret
addr16
or
nop
dec
adc
mov
fcompl
mov
cltd
xor
inc
and
movsb
lock
push
sub
movsl
fbld
stos
nop
outsl
cmp
in
cmp
mov
sarb
xor
push
gs
jns
fcomip
and
out
cs
mov
popa
mov
lea
sbbl
inc
aaa
lret
fidivrs
aad
int3
rorb
push
int
les
push
adc
rcll
popa
xchg
int3
cltd
movsb
xor
sbb
loop
ret
lods
outsb
pop
out
xchg
imul
sarb
ret
lea
push
aas
mov
or
iret
cmp
fmuls
jmp
mov
leave
xchg
sub
pop
cmpb
out
fisttpll
je
fs
push
add
cmp
or
sbb
inc
lret
jge
push
xchg
js
mov
icebp
push
dec
js
stc
js
jl
bound
inc
inc
jg
in
pop
call
pushf
mov
adc
lea
sub
inc
arpl
and
jecxz
sub
shrl
outsb
repz
mov
in
sbb
or
cmp
mov
mov
sbb
dec
mov
lahf
cld
pop
mov
inc
xor
int
mov
push
push
mov
xchg
out
sub
in
arpl
sbb
in
sbb
sbb
daa
inc
or
ret
nop
clc
inc
xchg
lret
stos
jl
rclb
imul
aad
stos
bound
ret
rcll
fsubrl
jmp
out
adcb
lods
xchg
lods
dec
add
in
jle
arpl
lret
mov
push
inc
push
sub
pop
xor
add
or
mov
test
fcoml
out
mov
in
cmc
mov
call
andb
inc
add
and
es
nop
inc
fidivl
js
je
push
test
mov
movsb
clc
cmp
pop
fimull
mov
iret
daa
test
adc
fwait
xchg
nop
push
in
out
push
or
scas
jbe
lret
aas
test
sbb
cmp
aam
push
xor
sub
mov
jp
xor
ss
stos
mov
xlat
sub
testb
js
mov
fadd
adc
jmp
shrl
adc
jmp
arpl
lret
repnz
and
out
inc
lahf
clc
pop
stos
jo
dec
mov
aam
mov
xor
mov
incl
cmp
loop
jg
int3
lret
sub
mov
daa
shr
cmpsl
mov
shr
mov
push
cld
lock
mov
outsb
loope
xor
sbb
test
in
cmp
mov
int
sarl
jne
xchg
mov
pop
jno
dec
add
outsl
std
orb
add
mov
xchg
sbbb
jne
js
mov
xor
test
pop
adc
ret
add
pop
je
lahf
jnp
or
sub
in
push
add
lret
add
dec
jmp
out
dec
sub
popf
cmp
aaa
dec
clc
movsb
xor
lret
data16
fs
mov
daa
stos
leave
pusha
fucom
daa
shlb
jbe
jl
shrl
pop
add
dec
mov
sbb
and
popa
in
pop
inc
or
ja
daa
and
jns
xchg
loop
mov
mov
fimuls
inc
push
ja
adc
mov
jo
pop
inc
mov
pop
pop
push
xchg
and
mov
mov
mov
sub
sbb
sbb
outsb
inc
gs
jecxz
adc
je
lcall
out
idiv
mov
mov
push
jns
imull
or
jecxz
nop
fs
and
cltd
add
fcmovb
pop
mov
js
pop
daa
fsts
cmp
sub
sub
ja
push
scas
and
mov
jne
add
cmp
sbb
aas
and
pop
or
movsl
addl
fnstenv
lret
ret
mov
add
lods
fs
sbb
imul
jge
inc
cmpsl
pop
or
pop
add
call
xchg
pop
adc
sub
vpaddb
test
cmp
call
sub
call
lahf
mov
ss
xchg
dec
sbb
xor
push
mov
std
fistpll
sti
adc
cwtl
in
scas
sti
mov
insb
xor
dec
xchg
fwait
push
divb
imul
xchg
pusha
outsb
mov
scas
lods
and
xchg
lret
fstps
nop
sbb
jle
push
sub
cmp
ret
es
fsubs
xchg
pushf
or
cmp
add
xor
pop
mov
lods
mov
lcall
dec
faddl
pusha
jmp
test
insb
or
jp
jecxz
add
loop
hlt
clc
jae
mov
daa
push
imul
xchg
cs
mov
repz
jge
sbb
sub
aaa
xchg
pop
add
xchg
jns
add
jns
outsl
out
sbb
movzbl
inc
or
push
push
mov
hlt
push
sub
dec
ret
mov
fwait
and
push
pop
jnp
aas
mov
ljmp
sbb
and
or
inc
sbb
xchg
clc
mov
xchg
inc
or
pop
push
notb
cmp
or
inc
adc
and
out
sbb
add
outsb
and
sbb
out
imulb
mov
out
ret
movsl
dec
bound
fiadds
lock
sub
les
mov
and
xlat
in
lret
push
mov
xchg
subl
sbbl
pop
and
or
sbb
pop
pushf
push
iret
repnz
adc
je
and
push
cmpsb
xor
and
dec
mov
mov
aaa
mov
fimull
dec
xchg
jp
insb
dec
adc
jmp
dec
addr16
das
testb
shl
rorb
sub
sub
or
push
sbb
sub
out
jmp
leave
outsl
push
sbb
jnp
cltd
sbb
xchg
lods
lods
frstor
sub
add
add
inc
mov
inc
dec
xchg
push
xchg
repnz
loop
pop
xchg
sbb
fwait
pop
out
push
fwait
sub
xor
pop
mov
inc
sub
adc
xchg
inc
jns
add
ja
jecxz
jo
inc
arpl
sbb
mov
pop
sbb
rcl
jne
jb
or
ret
mov
push
repz
repz
movsb
sub
out
clc
xchg
mov
cmc
cwtl
test
push
insl
lods
adc
lea
sbb
in
ss
xor
scas
pcmpeqb
in
inc
pop
shrl
aad
jno
cmc
cmp
mov
loope
add
jmp
cld
das
js
adc
lods
test
jae
cmp
xchg
in
jnp
cs
popf
fsub
pushf
push
push
mov
fwait
push
xchg
scas
jl
inc
in
mov
xor
add
mov
cwtl
jne
xchg
and
cmpsb
sbb
rcr
fdivr
add
fs
mov
test
push
xchg
out
loop
les
shrl
inc
lret
inc
and
jg
into
push
std
stos
int
loopne
icebp
jnp
mov
outsl
aad
push
imul
mov
cmpsl
cmc
stos
out
sbb
scas
push
and
mov
fcmovb
push
test
push
outsl
mov
paddsb
out
cld
roll
push
sti
sub
xlat
outsl
mov
icebp
ret
pop
icebp
je
dec
fdivs
loopne
iret
test
dec
fstl
jle
jns
mov
dec
fists
mov
cld
in
add
or
jecxz
imul
inc
arpl
lods
cmp
pop
cmp
fiaddl
sub
lods
clc
andb
mov
dec
mov
or
jnp
xchg
shrl
addl
sbb
push
mov
cltd
cs
jne
mov
or
lcall
cmp
sbb
enter
mov
mov
sbb
sub
mov
sub
dec
aaa
push
inc
sub
arpl
pop
sbb
arpl
insl
cmpsb
push
xchg
mov
jae
xchg
sbb
mov
mov
push
sti
insb
ret
jb
daa
imul
or
es
arpl
pop
mov
lahf
icebp
icebp
shrl
pop
and
lods
popa
xchg
imul
and
out
out
aam
mov
push
mov
mov
mov
addl
mov
adc
jg
cmpsb
xlat
mov
add
push
icebp
jmp
fcmovnbe
push
xor
fwait
xchg
es
mov
or
mov
cmp
in
int3
push
mov
mov
cld
mov
stos
cwtl
sbb
movsb
xor
test
loop
dec
pop
cmp
xor
mov
mov
pushf
mov
push
dec
insl
sbb
ffree
and
push
xor
cmp
daa
fst
mov
sbb
mov
add
cmpsl
push
add
test
idivb
push
inc
ret
or
shl
mov
mov
out
testl
les
mov
icebp
pop
int
and
cmp
cld
out
pop
fldt
ja
cmp
add
ljmp
jno
push
cmpsb
int
mov
cmpsb
inc
je
lahf
mov
andb
inc
cmpsb
jae
mov
pop
push
in
add
testb
stc
add
out
xorl
sub
dec
xchg
ficoms
iret
or
mov
decb
sbb
and
sub
aam
addr16
ret
push
push
out
inc
jmp
imul
ficoml
push
minps
cmc
mov
inc
jno
jp
jb
test
lods
push
and
or
inc
insl
add
inc
insl
xchg
icebp
scas
lea
mov
mull
daa
test
fistpll
mov
scas
pop
outsb
jno
xlat
jp
inc
shll
inc
ret
scas
fmull
sub
xlat
cmc
fadds
cmp
lods
daa
inc
mov
mov
gs
data16
cltd
and
loopne
pop
jp
pop
out
xchg
popf
push
add
xchg
jbe
js
aaa
lods
mov
sub
and
inc
push
push
mov
mov
bound
push
push
inc
add
mov
es
dec
scas
stos
jle
shll
inc
push
mov
push
mov
jl
out
inc
insl
inc
shrb
xor
mov
cmp
sahf
inc
jl
int
and
dec
inc
xlat
push
scas
and
jbe
mov
jge
subb
jecxz
jle
pop
xlat
sub
in
fists
movups
and
jno
mov
sbb
sarl
cwtl
mov
xor
gs
pop
or
aas
jns
frstor
push
mov
jae
dec
or
pop
hlt
arpl
pop
loop
sbb
mov
out
into
mov
clc
fisttpll
popf
pop
push
adc
xor
cmp
and
or
fadd
in
bnd
mov
jno
dec
push
and
sub
inc
adc
fsub
imul
push
in
xchg
imul
icebp
jnp
cmpsl
ja
mov
adc
add
mov
mov
icebp
shrl
fidivrs
push
xchg
cmp
push
dec
xchg
xchg
aad
sbb
inc
cli
dec
ret
adc
test
push
jb
je
xor
outsl
add
mov
dec
dec
out
mov
jbe
js
inc
popf
inc
or
add
pushf
adc
ja
rorb
mull
and
or
mov
dec
inc
ja
nop
sub
sbb
inc
or
or
adc
bound
sbb
mov
cmp
sti
out
xor
sub
or
jmp
scas
jg
mov
dec
int3
aas
add
jbe
bnd
pop
cltd
xchg
ret
adc
mov
xor
add
iret
ficoms
cmp
pop
cli
nop
aas
cmp
daa
je
ja
lock
daa
pmuludq
mov
adc
mov
lods
cwtl
enter
mov
inc
sub
neg
mov
stos
call
add
hlt
or
imulb
jb
mov
xchg
je
daa
std
sbb
out
dec
clc
jge
fmuls
call
fadd
lods
adcl
push
cmpsb
inc
or
xchg
cmpl
shll
cmp
nop
add
mov
pop
sub
fcmovne
divl
lcall
call
stos
adc
les
imul
test
adc
aam
mull
jl
xchg
or
lods
push
push
test
mov
fwait
adc
int3
cwtl
call
ljmp
xor
dec
movsb
xor
sbb
add
jo
adc
jbe
pushf
adc
movsb
ret
lcall
scas
fisttpl
sub
repnz
movsl
pop
inc
cmp
add
fsubrl
cmp
int
xorl
sub
fstpt
mov
push
pusha
dec
js
dec
out
inc
cmpsb
fcmovu
or
rcrb
loop
cld
xor
andl
adc
sub
sbb
xchg
and
call
fwait
dec
pop
cs
jbe
pop
adc
lret
arpl
js
pop
xchg
fnstenv
push
test
ss
idivl
push
cmpsb
ja
xlat
pop
fucom
and
scas
leave
in
ftst
aas
mov
xor
inc
movl
mov
cltd
dec
pushf
add
xor
nop
leave
dec
xchg
lds
cmp
es
mov
in
scas
shrb
jge
and
gs
and
mov
int
sub
mov
push
mov
mov
pop
out
xchg
mov
mov
xor
inc
mov
into
addr16
cmp
clc
movsb
es
std
sub
shl
sbb
je
mov
adc
push
or
fs
and
cli
daa
dec
dec
jl
lods
shrl
sbb
fadd
dec
sahf
and
seto
dec
lds
adc
int3
and
cli
stc
jl
sahf
jle
mov
cmpsb
je
out
jl
pop
out
jmp
pop
insb
insl
shll
hlt
adc
sub
cmp
jecxz
xor
nop
test
orl
push
or
xor
fistl
call
sbb
push
ret
test
lret
fmull
gs
call
imul
dec
lock
fcmove
call
lea
test
dec
sub
sti
mov
xor
addr16
insl
out
daa
or
popf
dec
les
push
and
icebp
call
dec
fstpt
pop
cmpsl
jne
test
in
ds
mov
pop
lods
mov
ficomps
xor
int
addr16
scas
das
pop
mov
sub
or
cmpsl
cmp
stc
jnp
fs
cmc
mov
push
test
jns
cmc
fucomi
stos
in
sti
fmull
jnp
and
cmp
push
jle
xlat
mov
fs
jecxz
dec
mov
jb
jae
or
mov
jecxz
sbb
pop
fisttpll
mov
cs
mov
repnz
in
xchg
hlt
cwtl
lds
inc
pop
push
cmp
mov
out
movsb
lods
lcall
xchg
inc
jae
push
mov
jge
cmpsl
sbb
shrl
clc
sbb
rcrb
or
adc
mov
cmp
mov
ds
aam
fnstcw
jmp
in
mov
or
xchg
cmpsb
inc
fildll
cmpb
loopne
push
dec
mov
out
cs
and
jbe
push
shlb
fnsave
cmp
ja
ret
jnp
iret
pop
and
sub
dec
jo
mov
hlt
cmp
pop
sbb
lahf
imul
jo
test
dec
subb
dec
lock
adc
jne
outsl
sbb
mov
adc
push
arpl
and
pop
or
pusha
dec
into
jmp
mov
sub
into
jge
loope
cmp
dec
jae
mov
dec
add
jge
rcrl
cli
add
push
loop
push
pop
mov
pop
or
mov
out
fdiv
sbb
lock
daa
aas
push
fidivrs
xchg
add
xor
jnp
les
jle
sub
clc
cmp
push
add
and
inc
pushl
or
clc
add
jb
int3
xchg
add
imul
daa
pop
out
jae
push
xchg
cmp
mov
rol
je
insb
mov
push
and
jbe
stc
pop
aad
rolb
pop
xor
out
jo
jge
das
dec
imul
and
jnp
sub
movsl
and
popf
roll
push
cmpl
aas
sahf
pop
out
add
lock
aad
in
icebp
or
loop
outsb
jbe
inc
mov
dec
cmpsl
iret
cmp
fisubrs
lret
mov
jne
subl
mov
ljmp
addr16
mov
rolb
nop
push
insb
aaa
cmp
and
shl
push
icebp
xchg
icebp
push
mov
nop
mov
ret
jno
call
int
cmc
dec
adc
adc
adcb
aad
ljmp
outsb
or
pop
aas
addb
pop
stos
jp
xchg
mov
popa
jl
popf
mov
sti
lret
aas
add
clc
cltd
xor
fnstsw
sub
ss
sub
xchg
jb
sub
in
pop
or
xchg
outsb
pushf
in
dec
sbb
xor
int3
cmp
shrb
les
lcall
jecxz
lea
jb
xlat
add
movsl
mov
movsb
mov
push
push
cmp
cmp
push
add
sti
mov
adc
ret
fstps
or
aam
sbb
mov
bound
inc
sahf
mov
mov
rorb
pushf
cmp
push
mov
or
dec
movsb
clc
mov
ficoml
movsb
je
aad
clc
loope
pop
fs
mov
jle
lea
out
push
add
jle
jns
shll
pop
mov
jecxz
aad
cmp
sti
cmp
add
pop
lahf
inc
shlb
movsl
fwait
inc
inc
pop
orl
ret
inc
mov
addr16
pop
insb
cmpl
out
es
dec
cmp
mov
int
jae
mov
sti
insl
into
call
xchg
mov
jmp
mov
jge
mov
inc
shrl
mov
ds
adc
ficoms
pop
sti
shl
arpl
sahf
xchg
fisubl
xor
cmc
jbe
inc
push
int
pop
in
or
sbb
movsl
fwait
cltd
pop
popf
jnp
pop
cli
insb
or
fwait
sub
mov
or
push
ja
fisttpl
jo
data16
dec
aam
pusha
jl
and
lods
les
dec
ja
test
pusha
test
nop
inc
outsb
and
jmp
mov
mov
and
adc
sahf
dec
cmpsl
popa
pop
icebp
out
loopne
test
stc
adc
mov
shl
test
andb
outsl
lahf
cmpsl
jecxz
rolb
aam
cmp
loope
jecxz
sbb
out
or
push
ret
aad
jno
jp
gs
scas
hlt
mov
mov
fucomi
je
scas
rclb
xchg
fwait
adc
xor
arpl
xchg
in
shr
mov
rcrb
sbb
sbb
out
out
and
cmp
pop
mov
add
std
jmp
int3
test
inc
cmp
popf
cmpsl
lahf
mov
xlat
xor
cmp
mov
push
pop
mov
pop
ror
fcompl
add
inc
add
fstpt
jb
movsb
lret
les
ja
jle
xchg
inc
mov
and
push
or
sub
ja
adc
shlb
stos
mov
out
ret
jg
cmp
dec
lahf
dec
out
push
sub
inc
push
and
lret
shrl
adc
das
jnp
jg
sbb
mov
mov
xchg
decl
jle
inc
loopne
into
aas
cmpsb
stos
gs
dec
pop
dec
or
lock
add
or
adcl
fcompl
mov
mov
js
xchg
sub
lahf
and
lret
xchg
cmpsl
sbb
jp
icebp
stc
mov
jne
cmp
iret
mov
ret
xchg
fisttpl
jne
adc
pop
pop
aaa
arpl
rcr
add
daa
repz
sub
pusha
mov
inc
arpl
pushf
or
pop
xchg
outsl
addb
rcrl
mov
lret
pop
js
mov
int3
mov
push
mov
cmpsl
mov
add
cld
fwait
jecxz
testb
push
test
push
addr16
in
pop
in
dec
jnp
push
jae
or
pusha
popa
in
sbb
jmp
jns
push
mov
pop
pop
insl
in
rcrb
jbe
loopne
sub
adc
test
jl
cli
push
xor
mov
xor
sbb
leave
jbe
or
or
mov
imul
mov
xor
jmp
xchg
clc
scas
xor
jmp
out
stos
add
push
sub
rcrl
mov
insb
dec
int3
stc
out
jae
pop
cltd
scas
cmpsb
mov
mov
cs
mov
mov
lcall
repnz
sbb
std
sarl
push
mov
dec
mov
loope
test
imulb
cld
ss
sti
popf
inc
data16
les
test
mov
add
ljmp
test
mov
movb
outsl
mov
loope
mov
mov
cmp
push
push
imul
adc
cwtl
movsb
mov
aas
push
mov
adc
xchg
js
or
rolb
xchg
and
or
sbb
sbb
pop
sbb
inc
inc
data16
sbb
pusha
loop
pop
ss
dec
out
sub
mov
mov
rol
xchg
inc
and
inc
outsl
jg
mov
aaa
mov
lahf
fistpll
xor
repz
movsl
push
insb
shlb
ss
hlt
mov
sahf
outsl
mov
inc
loope
mov
sti
cmp
pop
push
jecxz
xchg
fwait
add
jno
pop
sub
adc
adc
xchg
mov
loopne
xlat
mov
cwtl
mov
cmp
icebp
outsb
add
push
popa
std
insl
sub
cwtl
jns
xchg
pop
dec
hlt
adc
mov
out
mov
scas
hlt
inc
fldcw
repz
push
and
sub
es
sub
jp
pop
cwtl
scas
ja
push
scas
adc
aam
xor
lds
lods
adc
jae
mov
scas
mull
mov
and
mov
stos
aam
std
xlat
sbb
pop
sar
repnz
sbb
orb
fdivl
pop
psrad
adc
dec
lock
mov
mov
or
jl
xor
pop
fwait
in
rol
addr16
lahf
sbb
arpl
mov
mov
sbb
lret
loop
shll
mov
pusha
mov
fs
push
jp
push
mov
mov
and
xchg
and
mov
mov
jne
mov
pusha
cwtl
mov
dec
adc
jecxz
mov
js
nop
sub
ljmp
push
bound
es
mov
test
rol
xor
mov
dec
mov
cmpsl
mov
mov
out
jno
sbb
test
cmp
adc
dec
pusha
mov
inc
mov
pop
rolb
decl
lods
or
movb
sbb
adc
ret
jo
fcoml
test
and
loop
or
sub
sub
xchg
xor
jg
fcmove
or
jmp
stos
mov
mov
push
nop
hlt
jbe
fidivl
jns
xchg
lea
jne
je
fst
push
and
sub
push
fistpl
jmp
psrld
mov
sub
sti
in
rclb
mov
xchg
pop
cmp
fmuls
outsb
jmp
xchg
rorl
in
adc
xchg
pop
xchg
sub
xchg
inc
shlb
shll
pop
mov
roll
jmp
sub
mov
movsl
add
jge
pushf
adc
add
and
mov
ljmp
push
mov
arpl
and
push
repnz
xchg
jae
clc
mulb
bound
aas
mov
and
cmpsl
cli
pop
insl
je
mov
inc
xor
xchg
fincstp
outsl
sbb
push
insl
inc
mov
jmp
xlat
sahf
cltd
sub
std
push
repnz
dec
and
and
out
mov
and
icebp
sahf
addr16
inc
dec
insb
inc
mov
aas
sbb
clc
movsb
jbe
pop
sbb
mov
mov
imul
cmp
int
aaa
call
mov
les
mov
dec
xor
mov
adc
lcall
push
cmpsb
dec
loope
mov
daa
aas
out
jmp
fmuls
movsl
loope
dec
arpl
arpl
xor
out
pop
bound
sub
test
test
and
incl
ljmp
lcall
sti
push
icebp
or
je
pop
enter
mov
push
jnp
push
shlb
add
and
icebp
arpl
push
cmp
adc
xchg
or
xchg
addr16
pop
out
or
cmp
dec
sbb
repnz
dec
xchg
imul
and
push
cmp
dec
sub
in
mov
inc
cmpsb
xorl
dec
cmp
movd
adc
in
int
xor
loope
clc
insl
xlat
sub
inc
jp
cli
pop
mov
dec
int3
dec
outsl
or
scas
sbb
or
jmp
negb
iret
fst
xchg
je
insb
xchg
jp
adc
ss
pop
mov
test
icebp
xchg
sbb
cltd
sbb
out
add
adc
iret
fldcw
jmp
insb
xor
sub
dec
clc
ret
xor
inc
add
add
jnp
icebp
test
xchg
jge
or
fwait
jb
inc
xor
xchg
xchg
inc
push
out
dec
lahf
adcb
add
cmc
int3
pop
adc
jmp
imul
push
mov
bnd
xchg
lahf
out
insl
sbb
pop
cmpsl
mov
test
add
out
mov
push
faddl
sbbb
repz
lcall
out
pusha
ss
mov
fs
push
mov
cmp
lock
pop
mov
push
cmp
xor
mov
repnz
orl
pop
cmpsl
jp
data16
inc
pop
sub
sub
pop
jbe
mov
dec
mov
xchg
jns
fcoml
bound
pushf
pop
sub
mov
ja
loope,pn
arpl
inc
mov
outsl
ret
repnz
ror
cmpb
pop
jb
adc
dec
jle
in
daa
cltd
mov
loope
mov
gs
movsb
ffree
jle
fwait
pop
dec
test
hlt
sahf
call
bound
dec
cmp
dec
aam
leave
scas
jns
inc
lcall
xchg
or
lahf
mov
lahf
mov
xchg
sarl
test
dec
test
rcrb
mov
sub
sbb
int3
testl
rcrb
test
mov
mov
int
daa
cs
rcr
and
jne
call
out
sub
push
fs
mov
cmp
addr16
ja
sbb
xlat
jmp
mov
clc
dec
iret
idivl
cmpsl
test
xor
xchg
data16
ret
or
test
inc
ret
sub
inc
push
cmp
inc
or
data16
loopne
fadd
or
add
es
pop
stos
pushf
bound
push
jne
jmp
scas
test
aaa
lods
jns
inc
repnz
notl
push
push
fwait
jmp
mov
fadds
jno
daa
mov
test
pop
cmc
jae
lock
pop
or
test
arpl
adc
push
jbe,pt
cmp
pop
cwtl
jbe
inc
cmp
into
add
pop
test
or
dec
dec
lret
fstpl
xor
ja
jo
loopne
and
inc
loope
sub
js
shll
iret
pop
sbb
jns
mov
jle
xchg
out
test
sti
lcall
adc
int3
add
sbb
adc
sbb
in
pop
xor
mov
les
push
pop
andb
subl
cli
outsl
cltd
imulb
jmp
push
fwait
or
lcall
adc
test
fidivl
jns
imul
scas
pop
fnstsw
in
push
pop
scas
inc
jmp
jge
pop
pop
jle
ret
es
xchg
mov
js
and
sahf
inc
inc
es
and
push
scas
sub
push
scas
mov
and
fimull
mov
mov
dec
or
sbb
add
fsts
add
xor
iret
xor
xor
stc
call
in
pushf
popf
add
das
sub
jne
cld
cmp
pop
xchg
mov
mov
dec
xchg
adc
sbb
es
out
jno
fidivrs
fadd
loope
daa
sbb
xchg
adcb
add
stos
and
pop
push
dec
mov
lods
nop
test
int
pop
out
jmp
std
gs
das
mov
repz
and
xchg
orb
testb
call
push
or
mov
add
pop
nop
or
idiv
test
xchg
cwtl
out
scas
out
sbb
mov
lret
jb
push
sbb
xchg
dec
fcoml
adc
mov
xorl
lods
pop
popf
lods
popf
test
jae
loopne
push
xor
jne
mull
jecxz
icebp
lods
or
inc
mov
xor
rcr
pop
mov
sahf
in
leave
lods
or
lds
in
adc
push
inc
push
xor
roll
sub
xchg
bound
cmp
dec
fs
inc
push
xor
pop
adc
call
aaa
mov
pushf
sub
shlb
fnstsw
push
inc
sub
fs
xor
push
cli
pushf
dec
jg,pn
sub
sbb
cmc
sahf
sahf
fs
or
hlt
cmp
test
lea
mov
movsl
xor
lahf
mov
dec
jp
sahf
push
dec
jbe
jg
and
sub
nop
pop
or
adc
sahf
push
icebp
nop
adc
ds
test
sub
push
mov
inc
mov
insb
cltd
cli
int
notl
test
mov
js
mov
bnd
sbb
jbe
xor
in
adc
xor
into
scas
mov
fldlg2
setbe
cmp
arpl
pop
lods
mov
or
test
test
in
xchg
test
adc
xchg
ficomps
adc
ja
into
push
enter
lods
movsl
insb
loope
dec
or
lds
or
loopne
push
or
xchg
sub
roll
inc
outsb
mov
inc
mov
in
js
aad
aaa
stc
popl
adc
fidivl
mov
in
and
shll
adc
ds
pop
push
sahf
test
and
cmpsl
or
mov
aam
inc
imul
and
adcb
daa
sub
aaa
sbb
mov
fsts
inc
push
lret
movsl
repz
test
aas
sub
jb
inc
and
adc
arpl
pop
fnstcw
dec
bound
lcall
fistps
fsub
cmpb
cli
xchg
in
sbb
jge
flds
into
xchg
cmp
aas
xor
cmp
sub
adc
dec
pop
aaa
dec
or
movsb
ja
scas
mov
int3
cwtl
imul
lods
xor
dec
jl
test
orb
sub
jmp
sub
daa
out
shl
jns
or
jne
fs
xor
jnp
das
push
sub
xor
mov
leave
dec
cli
pop
iret
outsb
cmpl
jbe
loope
cs
mov
ss
loop
loope
out
inc
mov
mov
sbb
jge
add
imul
lds
popf
mov
aad
xor
or
std
push
aam
and
stos
push
jl
insb
ljmp
shlb
stos
les
les
dec
outsb
jae
mov
mov
xchg
jle
daa
mov
loope
xor
inc
dec
icebp
lcall
outsb
fwait
dec
ja
dec
ss
push
sti
cmpl
loopne
lret
fsubs
outsb
in
mov
mulb
push
adcb
and
push
cmp
and
insl
push
push
adc
sbb
hlt
or
loop
mov
or
stos
add
pop
sets
xor
sbb
dec
dec
test
lea
in
pop
sub
inc
inc
ljmp
xor
imul
shrb
sub
stc
jecxz
add
cs
pop
incl
vphaddubd
sbb
cmp
js
lods
mov
mov
and
inc
shl
inc
dec
insl
stc
jnp
in
mov
jno
fsubs
cltd
in
sbb
adc
ret
idivb
inc
xchg
imul
in
ds
xlat
sub
cmpsb
mov
rolb
sub
mull
pusha
mov
xor
cmp
cwtl
pop
ret
sbb
fwait
in
xchg
cmc
jecxz
mov
pop
inc
dec
and
push
dec
jo
in
out
mov
cmpb
xchg
mov
scas
scas
or
jae
mov
popa
sbb
imul
rclb
mov
pusha
inc
jmp
dec
enter
lods
pop
cmp
outsb
mov
addr16
sbb
iret
nop
sbb
pushf
or
cs
inc
outsb
xor
test
mov
sub
sbb
mov
push
out
cmpsl
popf
dec
mov
jo
sub
cwtl
dec
les
add
in
fmul
inc
loope
push
push
shlb
xchg
insb
jbe
mov
mov
dec
lock
or
js
fadd
mov
mov
out
repnz
jns
pop
fisttpl
push
add
arpl
sbb
andl
mov
es
mov
cmp
jl
add
xor
mov
jb
bound
cwtl
jo
add
push
sub
cmp
icebp
in
gs
inc
add
add
adc
push
xchg
ss
syscall
popa
insb
bound
cli
rcrl
mov
jb
shrb
inc
cmp
adc
xchg
adc
mov
out
or
dec
add
popl
aas
sbb
jge
int3
mov
jp
rorb
lret
xlat
cmp
sub
rolb
jmp
ja
popa
mov
mov
pop
std
loope
adc
mov
mov
add
push
jbe
dec
mov
sbb
scas
pusha
sub
ja
adc
loope
sub
lahf
jne
push
mov
aaa
xor
dec
call
dec
cmp
cmp
xchg
pop
fs
insl
pop
iret
arpl
dec
out
mov
imul
inc
pushf
repz
stos
in
inc
cmp
lea
mov
fists
cmpsb
cmp
cs
cld
stos
push
mov
xchg
push
aad
gs
test
mov
nop
call
lock
in
movsb
jae
mov
inc
dec
leave
dec
fucomi
inc
dec
cmp
add
stc
jle
jnp
out
in
cmp
stos
xchg
orl
fisttpl
push
push
arpl
popa
ss
outsb
pop
fdivs
xor
nop
adc
xchg
cmpsb
sub
mov
mov
fisubrl
pop
out
xchg
data16
rcrb
jge
fnsave
mov
push
jle
jg
sahf
adc
js
das
jne
dec
mov
ljmp
xchg
sbb
mov
sub
scas
mov
cmp
mov
aad
pop
cli
xor
sbb
jp
frstor
stos
jmp
mov
dec
xchg
pop
push
jnp
popa
mov
adc
dec
shll
imul
pop
lcall
inc
mov
fwait
and
stc
mulb
rcrl
outsb
mov
mov
xor
imul
mov
dec
int3
notl
cmp
das
jp
and
cbtw
rcr
incb
adc
lock
push
mov
add
dec
sub
dec
sub
repnz
add
inc
addr16
dec
add
in
pusha
xchg
add
mov
and
cmp
xor
adc
or
movb
std
test
fldenv
add
stos
mov
mov
sti
clc
jmp
stc
testl
cmp
imulb
frstor
mov
adc
sahf
mov
mov
mov
cmpsl
fdivrl
mov
mov
cmc
jmp
add
imul
ret
jecxz
inc
hlt
mov
std
mov
idivl
mov
jp
lcall
cmp
imul
dec
mov
cmp
cwtl
pop
and
pop
test
std
lahf
pop
jbe
sbb
sub
sbb
sub
mov
insb
xor
sub
and
pusha
push
int
out
adc
push
adc
repnz
ficomps
outsb
sub
inc
lcall
leave
pop
scas
mov
cwtl
lds
jge
ret
insb
adc
sub
push
popa
sub
inc
rorb
or
bound
stc
mov
or
cmpsb
xor
cmp
pop
dec
dec
aad
add
js,pn
sbb
out
pop
out
dec
push
out
sbb
and
out
push
fs
out
cltd
jno
iret
loope
fiaddl
sub
mov
ret
xor
push
dec
testb
push
mov
pop
stos
pop
lahf
mov
pusha
mov
cmp
pop
repz
lcall
and
push
mov
and
mov
mov
aas
xlat
icebp
pop
pop
stc
xchg
test
icebp
inc
and
pushf
lret
bnd
dec
xor
cmp
sbb
and
das
add
or
mov
push
xor
jmp
adc
ss
push
and
xchg
cmpb
mov
scas
leave
pop
cmp
xor
xor
rcr
cmpl
fildl
dec
sahf
push
and
rcll
xchg
adc
sti
mov
and
mov
mov
mov
fldcw
pop
adc
in
jp
data16
mov
sarl
dec
lods
test
incb
pop
add
mov
push
cltd
mov
xchg
dec
in
imul
jge
fwait
cld
inc
mov
int3
xchg
cmp
adc
adc
sub
mov
or
jmp
mov
hlt
cmp
mov
sub
into
pop
inc
cmc
sub
in
lcall
arpl
mov
and
clc
jae
add
repnz
out
mov
test
ds
push
xchg
push
sahf
insl
sbb
pushl
fistl
cmp
les
cmp
pop
mov
in
and
jae
into
lret
imul
das
es
shll
cli
cmpsl
daa
jle
inc
mov
fs
daa
int
pop
mov
xchg
mov
insb
movsb
jno
aaa
stos
sbb
mov
xor
testl
sbb
fcomp
sti
repnz
xchg
inc
mov
std
jmp
cs
push
js
in
inc
loopne
push
cmpsb
sub
inc
xchg
jecxz
sub
stc
pushf
xlat
call
jmp
int3
ds
push
jg
jns
add
leave
fdivl
xchg
insl
cli
cmp
pop
sbb
and
sbb
push
push
dec
mov
sbb
push
out
and
arpl
addr16
dec
or
jge
inc
aas
mov
test
adcl
jecxz
aas
mov
sub
outsb
add
push
pop
xchg
jne
xor
ret
add
in
call
scas
lret
pop
int3
xchg
shr
fmuls
in
mov
cmp
lret
fs
sub
mov
mov
aad
jnp
ret
xchg
pop
sub
sub
lock
mov
je
popf
pop
or
addl
mov
xor
hlt
and
mov
xchg
mov
mov
jmp
xor
ds
rorl
or
ficompl
adcb
cmp
sbb
and
in
xchg
mov
jle
xchg
or
addr16
fsubrl
mov
in
fnstcw
outsb
lock
mov
or
incl
cli
fwait
scas
int3
jne
lret
adc
fsubs
adc
mov
insl
iret
rorl
sub
dec
cmp
std
or
dec
lds
int
call
dec
jno
mov
or
sahf
push
out
shlb
or
jmp
pop
jne
icebp
and
lret
inc
push
mov
add
dec
push
pop
xchg
add
fxch
xor
mov
mov
stc
adc
cmp
insl
stos
jmp
adc
push
in
mov
or
imul
pop
push
xchg
inc
aam
leave
xchg
sti
sbb
add
je
jmp
int
xchg
adc
cmpb
cmp
mov
xchg
je
xlat
stc
mov
adc
ret
in
inc
fwait
cmpsl
ja
pop
cwtl
jns
mov
jl
movsl
sbb
test
jne
xchg
stos
push
xchg
es
notl
ja
mov
push
mov
cmp
jp
fucom
push
jg
aaa
add
fs
lods
pushf
fistpll
scas
arpl
aaa
loope
jecxz
mov
push
popa
test
pop
xor
lcall
dec
ss
out
mov
ljmp
or
ljmp
cmp
sahf
rol
pop
inc
xchg
ret
js
xor
rorb
xchg
sub
bound
fsubs
outsl
adc
pop
mov
dec
test
jle
int3
xor
mov
addr16
fldcw
mov
call
pop
dec
add
mov
jno
dec
xlat
pop
loope
xor
insb
cmpsb
jmp
and
jl
add
mov
sub
xor
lret
inc
add
mov
pop
call
pop
mov
or
xor
mov
imul
test
xchg
sbb
out
ficoms
mov
cli
sub
mov
add
jecxz
pop
inc
push
xchg
adc
add
mov
adcb
call
cmp
mov
ja
iret
adc
cltd
enter
cs
and
popa
jo
jbe
pop
sub
je
mov
out
mov
xchg
pop
push
mov
sti
xchg
sub
push
insl
lret
sbb
stos
cmp
loop
dec
inc
mov
sbb
pop
in
sbb
add
rorb
shrl
mov
cwtl
xchg
cwtl
xchg
mov
test
sub
or
mov
in
xchg
mov
enter
je,pt
cmp
mov
pop
add
aam
scas
mov
xchg
shl
clc
pop
adc
lcall
dec
sbb
outsb
jge
add
insl
mov
xlat
or
push
in
test
nop
xor
cmp
std
or
push
sar
xor
adc
pop
in
imul
inc
iret
xchg
test
shl
mov
cmp
dec
jnp
loopne
test
dec
mov
pushf
pop
jg
cld
pop
cli
cmpsl
pushf
and
stc
out
or
mov
je
flds
cmpsb
or
es
mov
test
xor
imul
cld
test
ret
es
push
pusha
dec
iret
add
jmp
mov
add
stos
push
sub
mov
fnstcw
and
inc
push
mov
insl
dec
insb
or
sub
cmp
pop
inc
cs
test
cmc
pop
jb
jmp
pop
mov
stos
movsb
fists
push
pushf
aam
loop
and
imul
mov
and
std
xchg
dec
sub
lods
add
inc
xchg
cmp
sbb
in
inc
mov
pop
out
repz
sub
sub
sub
stos
cmpsb
push
lods
outsl
mov
ret
mov
mov
imul
or
es
fldenv
or
xlat
jle
lahf
add
dec
jne
popf
mov
inc
push
pusha
mov
aad
cmc
dec
fisubrs
adc
sar
loop
cld
lret
jle
dec
js
out
jmp
mov
or
insl
je
in
outsb
push
sbbl
mov
pop
pop
out
add
adc
sahf
in
iret
xor
cltd
mov
dec
ret
cltd
ds
jp
inc
aaa
cmp
mov
sub
pop
push
addr16
mov
lods
and
shr
inc
sub
icebp
faddl
fdivrl
gs
and
xor
je
xchg
sbbb
pop
out
inc
popf
outsl
int
adc
mov
xchg
jle
fnstenv
addb
pop
mov
mov
add
in
in
shlb
lds
jl
adc
add
push
mov
pop
loop
mov
fldl
mov
subb
mov
or
ret
push
sahf
call
enter
push
pop
sbb
adc
lahf
repnz
in
into
shl
push
sbb
repz
andl
mov
icebp
sbb
push
stos
jge
push
nop
dec
pop
in
sbb
dec
in
sub
add
cmp
and
push
outsb
pop
cmp
shr
loop
push
lcall
bound
dec
js
xor
roll
xchg
xlat
stc
out
mov
in
fistps
mov
shl
inc
lahf
sub
jecxz
repnz
out
push
push
dec
into
or
pop
subl
xor
push
adc
xchg
mov
xor
and
mov
sub
xchg
decl
cli
cmp
push
or
sar
dec
dec
movsb
dec
jbe
sti
insl
aad
mov
mov
pusha
mov
xchg
iret
das
out
pop
pop
outsl
push
addr16
daa
bound
test
jle
adc
lea
mov
ja
dec
cmpsl
fstpt
push
rcl
shr
mov
bound
xor
mov
lods
jb
ss
sbb
mov
test
sub
fwait
lret
dec
scas
cmpsl
xchg
cwtl
mov
in
mov
jo
insb
pushf
or
cmp
xchg
inc
adc
cs
addr16
ja
dec
mov
test
push
std
mov
push
call
pop
fidivrs
in
icebp
sbb
push
test
sub
jne
pop
pop
into
shlb
mov
shlb
jno
sbb
loope
aaa
dec
xchg
fwait
movsl
mov
repz
jae
sarb
stos
loope
stc
call
lcall
jle
cmpsl
sbb
ret
inc
aaa
fisubrs
ficoml
pop
mov
pop
push
push
mov
mov
adc
mov
imul
add
push
pop
fwait
inc
or
insb
sub
mov
test
sbb
pop
popf
mov
sarb
mov
mov
cmp
shlb
hlt
xchg
sbb
sahf
push
jp
jge
or
test
aaa
aaa
mov
lcall
jae
sub
mov
shlb
cwtl
test
cmpsl
sub
mov
test
js
cmova
imull
pop
jp
xchg
lods
sub
repnz
mov
add
cmpsl
mov
fldenv
lods
lock
in
pop
or
bound
xchg
xor
jbe
call
xchg
sti
lock
fidivs
adc
push
fwait
lgs
xchg
cmp
lock
sub
out
int3
adc
mov
shl
mov
movsl
mov
or
and
mov
cs
aad
fwait
pop
xchg
mov
xor
or
and
lret
arpl
xchg
cmp
ds
jl,pn
mov
or
jle
push
inc
popf
clc
lcall
mov
mov
pop
sbb
xlat
imul
int3
sti
push
ljmp
rcrb
clc
pop
cmp
xchg
mov
arpl
imul
and
jl
mov
push
out
xorb
xchg
pop
xor
or
mov
icebp
inc
xlat
dec
dec
mov
lret
ret
gs
imul
cmp
shll
rcl
in
or
mov
mov
jno
sbb
pop
in
and
sbb
ds
push
ljmp
xor
add
push
iret
push
aad
dec
fadds
and
jl
out
in
sbb
xor
push
scas
out
or
jns
jbe
les
in
inc
xchg
push
das
in
lock
sbb
gs
ds
sub
jle
lcall
xor
inc
xor
xor
push
dec
flds
sbb
push
adc
mov
out
sub
push
xchg
jnp
roll
push
stos
mov
sti
stos
xchg
mov
into
mov
mov
sarb
ds
out
push
in
push
pop
stos
xchg
xor
xorb
rcrl
push
lock
popa
cwtl
mov
push
adc
sbb
push
lret
sti
or
mov
in
out
jns
jo
push
decl
mov
fst
loop
arpl
push
pop
decb
iret
add
pop
les
les
out
mov
or
repz
ret
jb
test
stc
inc
inc
inc
push
xchg
rclb
test
loope
mov
lea
sbb
inc
sbb
mov
in
andl
inc
pop
jmp
pop
dec
insb
in
push
push
cwtl
data16
dec
add
sbb
insl
push
scas
push
xor
inc
adc
and
lret
xchg
and
cmp
iret
add
pusha
scas
jge
push
jae
movswl
xchg
adc
rcrl
or
mov
lret
lret
fstpl
jge
or
inc
jae
push
mov
push
testb
jnp
sti
ret
xchg
sbb
div
stos
movsl
insb
sbb
xchg
loopne
shrb
mov
xor
sub
arpl
dec
xchg
vandnps
sub
jg
fisttpl
cmp
cmp
dec
sbb
add
out
jmp
sti
mov
add
and
mov
mov
or
jmp
adc
dec
and
push
push
mov
test
outsb
mov
mov
or
shlb
push
and
daa
push
jo
pop
dec
test
incb
inc
push
jae
gs
nop
mov
ret
inc
pop
push
lea
add
xor
jmp
sbb
adc
adc
in
inc
cmp
sbb
mov
and
inc
lea
xor
in
les
shlb
push
and
pop
cmp
xor
out
movsl
cld
add
or
or
mov
xor
incl
dec
fistps
jge
and
mov
lahf
xchg
xor
in
repz
fdiv
outsb
popf
jne
push
dec
xchg
loopne
xchg
rclb
into
sbb
adc
xchg
adc
popf
cmpsb
mov
mov
lret
push
fisttpll
or
cs
ljmp
inc
fmul
dec
iret
mov
push
pop
sbb
push
xchg
mov
or
in
inc
mov
cwtl
ret
lods
push
sub
jecxz
xchg
std
mov
push
cld
jb
lahf
imul
sbbb
add
mov
or
or
xchg
add
jle
lds
inc
aad
outsl
js
movsb
out
mov
pop
and
mov
sub
mov
mov
and
bound
fidivs
cmp
cld
mov
mov
call
clc
sub
xor
sbb
les
or
popa
dec
mov
sbb
cmc
push
xchg
cmp
mov
mov
addr16
add
fisubs
movsb
stos
stos
jg
pop
pop
mov
aam
xor
test
push
outsl
enter
inc
adc
in
lea
jge
paddd
jbe
pusha
pushf
sub
cwtl
daa
sub
test
cmp
cmpsb
or
imul
or
lret
mov
mov
cmp
jle
call
cmp
daa
cmc
daa
cmp
lcall
or
push
or
pop
ret
mov
stos
popf
dec
mov
ret
data16
lcall
out
hlt
in
sahf
xchg
push
hlt
fstl
outsb
jbe
stos
psubb
roll
cltd
xorb
cmpsb
mov
push
or
and
jo
lds
iret
pusha
mov
push
pushf
leave
jg
mov
ljmp
cmp
or
xchg
out
das
pop
cwtd
rcll
or
pop
sar
idivb
stos
in
and
add
or
data16
jne
pop
sbb
sbb
mov
xor
int
insl
icebp
lock
fcom
dec
pop
cwtl
mov
sub
cs
jmp
sbb
ror
scas
pop
adc
pop
cmp
fisttps
add
mov
inc
loope
and
lea
stos
popf
ja
jae
mov
testl
adc
lock
cld
cltd
dec
shr
cltd
sub
jmp
sbb
xor
inc
pop
adc
xorl
and
enter
idiv
call
pop
xor
dec
mov
mov
in
imul
cs
cmp
mov
jmp
int
mov
jbe
dec
cmp
orb
cld
loope
lds
mov
loop
mov
leave
adc
lock
or
movsl
lds
arpl
aad
inc
fs
adc
pop
xchg
xchg
jp
jae
movsl
mov
xchg
fldln2
dec
cltd
adcb
inc
mov
es
rorb
out
cmpsl
or
fcoml
cmp
dec
outsb
pusha
ljmp
fs
xor
dec
mov
mov
into
mov
clc
sbb
clc
jmp
add
out
xchg
test
sbb
xor
xchg
in
dec
das
cmpsb
adc
sbb
dec
ja
mov
clc
addb
stc
pusha
cwtl
push
lea
mov
inc
xchg
leave
sub
fs
fdivs
rolb
sub
dec
push
sbb
and
mov
je
aas
push
add
sbb
dec
cltd
pop
jp
sub
int
nop
in
mov
mov
divl
mov
dec
lret
and
ljmp
insb
ficoms
mov
sbb
ret
add
lret
push
je
xor
aad
out
sbb
movsb
aam
dec
dec
pavgw
mov
add
hlt
lahf
pop
jg
clc
xchg
push
icebp
das
mov
rol
add
lahf
push
dec
test
pop
ficoms
enter
cmp
je
subb
in
push
jmp
jns
enter
call
adc
out
dec
data16
in
in
push
dec
cmp
in
xchg
cmpsl
in
test
inc
adc
inc
daa
jae
mov
leave
push
insl
fcoms
push
mov
pushf
pop
jno
cmc
pop
aaa
es
ljmp
pop
je
fldl
inc
dec
rcrl
sub
lret
stos
into
mov
daa
adcb
adc
in
adcl
stc
cmp
cmpl
inc
popf
arpl
mov
pop
mov
test
jp
test
dec
mov
ret
adc
jle
aaa
pushl
cmpsl
xchg
push
test
cmc
jns
test
aas
test
and
rcrl
sbb
jge
xorl
push
add
pop
nop
in
outsl
adc
js
lods
sub
test
addl
sub
loop
loop
and
mov
xchg
fstl
add
leave
push
std
pop
shlb
jmp
jle
subb
int
mov
popa
pop
pop
outsb
bound
dec
cltd
mov
frstor
xchg
pushl
gs
aad
mov
fstps
data16
mov
jb
mov
inc
or
fimull
rorb
jbe
sarl
pop
and
ss
adc
in
mov
pop
push
nop
bound
nop
call
insb
xor
cwtl
test
push
test
mov
dec
repnz
sbb
lds
icebp
xchg
mov
mov
sub
sbbb
push
call
stos
fnstsw
mov
or
mov
sub
mov
xor
fisttpl
je
sub
jmp
xchg
fadds
out
sub
repnz
cmc
mov
add
outsl
movsl
cltd
cwtl
rorl
cmpsl
ficoms
inc
imul
mov
or
into
jmp
arpl
lods
pop
cmp
cmp
dec
sarl
fs
jg
push
test
jns
xor
xchg
mov
lret
loope
loopne
aad
into
cs
ja
mov
cmp
maskmovq
idivl
aad
cmp
pusha
adc
inc
or
popf
pop
int
icebp
addr16
pop
xor
das
sahf
subb
in
test
ljmp
jne
xor
jnp
lret
adc
ret
mov
out
test
xchg
mov
cmpb
insl
jp
mov
pop
or
data16
imul
xchg
cwtl
out
cmp
loope
imul
out
dec
push
push
xor
mov
sbb
adc
pop
fwait
ret
testl
clc
negb
mov
stos
test
in
lods
test
or
mov
dec
pop
sub
fdivl
outsb
mov
pushf
rcrl
aaa
sub
pop
xor
sahf
lret
jne
pop
and
jmp
cmpsl
pop
rcrl
dec
sahf
aas
enter
cmpsb
xor
mov
lahf
jge
jle
sbb
cmp
fwait
addr16
fsubr
clc
scas
insb
mov
call
mov
repz
sub
dec
xor
mov
inc
idivb
dec
mov
clc
mov
in
push
jnp
jne
pusha
int
adc
xor
call
fs
imul
jge
cmp
fcompl
jge
dec
mov
mov
cli
sub
cwtl
cmpsl
pop
fwait
mov
dec
sbb
push
inc
loope
orb
leave
insb
jbe
out
testl
popf
mov
xorl
pop
insl
in
push
jle
sub
gs
fldenv
mov
jnp
rolb
inc
jbe
in
cmp
into
ja
insb
popf
pop
lods
in
inc
mov
mov
arpl
subb
stc
ss
jbe
enter
es
daa
or
aam
ficoml
pop
aad
pushf
nop
in
mov
push
int3
adc
pop
jl
xchg
add
movsl
pop
ja
and
stc
shrb
ficoms
or
imul
popf
xlat
sub
jae
outsb
lcall
or
mov
add
mov
and
outsb
mov
pop
movsb
pop
xor
cmp
pop
andb
mov
jae
ss
lds
popa
mov
mov
cli
loop
lahf
cmc
fcoms
sub
fisubs
movsl
cmp
adc
aaa
iret
push
ljmp
jnp
rcl
push
jmp
out
ret
popa
in
and
cmp
push
xchg
mov
xor
je
jmp
int3
inc
mov
pushf
lds
adc
loope
andb
ret
push
nop
data16
mov
outsl
dec
xchg
xchg
hlt
repnz
push
shl
push
jmp
adc
lods
aam
punpckhbw
gs
movsb
fbld
test
lods
mov
cmp
arpl
cmc
cmpb
inc
nop
shll
adc
dec
ret
clc
xor
lret
jecxz
sub
gs
shll
test
mov
sub
xchg
inc
out
jo
add
sub
test
cmp
loopne
cmp
sbb
imul
adc
leave
push
dec
outsb
cmp
loope
dec
mov
out
pusha
fwait
in
loopne
aad
push
negb
dec
cmpsl
insl
rclb
test
fwait
sti
ja
jecxz
stos
lods
jbe
xchg
cmc
dec
dec
xor
in
in
aas
jo
add
xchg
sbb
sarl
mov
adc
pop
movsb
mov
jge
xlat
scas
sbb
pop
aad
inc
adc
xchg
mov
mov
dec
pop
bound
rcrl
lds
aad
out
and
arpl
jo
orl
pop
das
xor
in
jne
repnz
mov
xor
or
in
pop
loopne
add
jp
into
mov
pop
cmp
mov
inc
test
shll
sbb
popa
imul
mov
mov
and
aas
inc
shrb
and
cwtl
test
jecxz
lods
jecxz
pop
xchg
fimuls
jb
and
mov
sahf
fstpl
xor
imul
bound
adc
daa
mov
or
aas
arpl
or
xor
fldl
jmp
cmp
lcall
jp
int
and
sub
inc
repnz
sub
jg
sbb
xchg
scas
jbe
xchg
add
jl
pop
mov
sbb
enter
scas
jge
lods
push
mov
test
xlat
push
dec
stos
mov
test
fmulp
xchg
mov
adc
xorl
inc
ffree
xchg
xor
sub
dec
xor
dec
andl
jb
jle
insb
xchg
fs
mov
sub
mulb
mov
aaa
mov
test
std
pushf
jae
popf
lea
sub
push
dec
lods
rolb
cmp
cs
dec
sbb
adc
pop
xor
adc
jl
push
iret
inc
dec
repz
outsb
mov
mov
add
popf
sti
cmp
add
in
loopne
push
inc
dec
nop
add
repz
out
xor
or
mov
or
jae
mov
popf
adcb
sbb
mov
push
imul
or
and
cmp
fwait
je
cmp
jb
adc
jnp
push
sub
jp
mov
adc
or
cwtl
cmp
xchg
cmpl
sbb
sub
cmpsl
subb
ffreep
les
aas
xor
xlat
ror
xchg
popa
popa
mov
inc
adc
sub
ret
daa
inc
test
inc
lret
fdivrs
ljmp
push
xchg
imul
lods
jno
or
push
mov
push
lret
push
or
mov
iret
push
sub
or
sbb
and
call
iret
mov
cmp
xchg
shlb
mov
std
stos
aaa
test
dec
xchg
mov
rorb
cmpl
arpl
fstpl
push
jecxz,pt
ds
addb
insb
push
pop
out
mov
test
pop
dec
mov
into
cli
push
lcall
adc
mov
imul
jb
repz
repz
sti
lahf
fadds
aaa
pop
int
mov
mov
and
mov
cmc
daa
jle
sbb
repz
js
aas
iret
cmp
cwtl
iret
test
pop
aam
inc
repnz
and
ret
inc
sbb
push
dec
rcll
mov
imul
ret
mov
mov
popa
shrl
push
and
dec
mov
mov
lret
cmp
scas
mov
mov
out
inc
call
aam
sub
jb
mov
or
loope
mov
test
jns
fildll
rorb
xor
in
lahf
jmp
mov
mov
xor
icebp
mov
enter
rolb
push
mov
out
and
cli
ret
mov
pusha
std
push
lcall
adcb
pop
test
scas
out
xlat
add
jnp
jno
dec
jae
mov
fildll
mov
pop
push
push
or
mov
mov
cld
xchg
jno
jno
sti
inc
and
test
and
add
push
imul
xlat
into
or
mov
jge
mov
lret
fisubrs
fimuls
sbbb
nop
ret
dec
test
cmp
in
pusha
mov
push
gs
movsb
dec
les
test
clc
jecxz
test
dec
fbld
mov
add
stos
shll
lds
dec
sub
inc
mov
rcrb
mov
repz
xchg
or
sbb
sbb
jno
bound
ljmp
xor
sub
mov
faddl
adc
ds
mov
ret
jno
pop
mov
sub
mov
xchg
jae
cld
xchg
outsl
xchg
mov
cmp
sbb
mov
jo
scas
mov
nop
out
and
xor
iret
ja
imul
or
dec
pushf
mov
push
data16
popa
cli
xchg
movsl
ficoml
test
push
lods
aad
and
jo
mov
stos
imul
aaa
repz
out
push
cmp
adc
sahf
pop
fisubs
dec
adc
mov
insb
sub
out
mov
sbb
xchg
in
ja
scas
adc
subl
xchg
scas
mov
push
std
js
js
mov
jae
cmp
inc
mov
repz
stos
arpl
negb
clc
lret
dec
jns
je
mov
sti
pop
lods
add
icebp
sub
imul
fbstp
lret
loope
and
clc
adc
sbb
jge
inc
sub
das
and
mov
inc
push
mov
pop
test
inc
xor
fidivs
mov
dec
push
scas
addb
sahf
xchg
jp
jb
lea
into
repnz
cmp
adc
shrb
xchg
cltd
pop
and
movsl
decl
mov
inc
inc
out
xor
mov
cmp
xor
cmp
push
mov
and
lcall
push
push
xor
jle
in
aad
cmp
inc
inc
int
nop
and
inc
pop
inc
mov
push
pop
hlt
lahf
adc
push
test
xchg
cmp
mov
jnp
jno
lock
imul
push
leave
jmp
mov
popf
dec
or
mov
xchg
fdivrs
inc
scas
lret
das
mov
popf
popa
mov
xchg
and
pusha
push
data16
aaa
outsb
cli
jb
jnp
pop
aaa
dec
pushf
shl
mov
mov
pop
mov
dec
push
dec
test
movsl
jmp
sahf
divl
inc
andb
mov
sub
xchg
jnp
sbb
sahf
addr16
mov
push
mov
add
mov
mov
adc
push
pop
notb
ss
loop
call
xor
jge
jb
stos
pushf
aam
ret
gs
inc
xchg
push
pop
jecxz
ret
and
pop
cmp
sti
scas
jno
scas
dec
dec
addr16
lods
sbb
flds
pop
pop
sub
sbb
dec
sbb
xor
xor
fld
pop
mov
loope
and
in
jno
mov
jno
mov
xchg
pop
aas
cmp
scas
mov
cmp
xchg
inc
ret
call
mov
scas
jg
insl
xchg
loope
hlt
fs
xor
xor
pop
leave
insb
imul
mov
or
mov
into
xor
call
jmp
lds
xor
ss
sbb
dec
xor
addr16
test
shrl
xor
stos
pop
std
xchg
in
lock
mov
aas
and
sbb
xor
adc
out
add
shrb
add
stc
out
in
jg
lods
imul
pop
iret
fldt
inc
push
or
sub
clc
stc
test
imul
xchg
and
mov
mov
push
nop
add
rorb
adc
pop
mov
push
loop
mov
or
aas
push
adc
dec
xor
cmp
stc
out
jecxz
mov
mov
pop
xchg
xorb
cmp
or
daa
inc
loope
pop
aas
fists
jge
mov
mov
pop
test
mov
fsubs
pop
mov
insl
push
stc
mov
jge
or
push
popa
inc
push
outsb
je
mov
out
sar
push
mov
fdivrs
mov
dec
adc
dec
scas
sbb
fcmovnu
inc
loop
push
int3
or
xchg
inc
sbb
adc
mov
out
mov
adc
inc
push
xor
and
repz
out
jmp
cltd
mov
orb
ja
xor
jge
push
movaps
shld
cmpsl
jnp
sbb
and
dec
push
dec
loope
and
test
sub
jle
pop
sub
dec
std
xchg
incl
fs
bound
inc
mov
mov
mov
add
pop
mov
enter
cmc
scas
sub
xor
aas
repz
jbe
pop
xchg
mov
add
insl
out
aas
pop
inc
jmp
fidivrl
push
pop
sbb
loop
loope
jmp
aad
add
xlat
in
daa
clc
pop
mov
fimuls
mov
mov
lahf
or
sub
test
int3
cmc
mov
mov
pop
mov
push
dec
sub
call
push
mov
repnz
cmc
xor
xchg
mov
lods
push
fdivrl
jg
fcmove
daa
fwait
mov
je
data16
xchg
and
jns
add
or
shl
jbe
in
mov
add
ret
orl
pmaxub
or
push
das
or
pop
mov
popf
or
enter
xchg
pop
nop
and
clc
test
std
int
sub
mov
mov
inc
ljmp
ret
sub
and
xor
jae
cmp
lods
xor
jbe
inc
call
mov
loope
xchg
xor
inc
push
les
leave
bound
mov
adc
adc
scas
pop
ss
xor
mov
xchg
daa
jge
stos
cwtl
sbb
sub
insb
iret
cmpsb
jle
test
or
adc
pop
not
jns
out
and
xchg
xlat
stos
jo
popa
dec
mov
imul
pop
mov
daa
xor
mov
iret
lds
adc
nop
jle
lret
cmp
jno
xchg
gs
cmpsb
mov
std
jae
or
or
or
push
xor
xchg
or
data16
mov
lods
sub
call
out
mov
push
mov
dec
in
push
xchg
sbb
mov
cmc
stos
or
cli
cmpsb
repz
push
cmp
fwait
bound
cmp
hlt
dec
xor
test
cld
scas
and
enter
fistpll
adc
add
dec
mov
pop
dec
test
int3
xchg
nop
adc
or
xchg
stos
int
xor
add
sarl
xor
mov
icebp
int
inc
sub
mov
clc
add
mov
jmp
xchg
adc
inc
push
pusha
inc
inc
mov
pop
add
pop
pop
push
dec
adc
je
cli
mov
pop
push
mov
cmp
pop
jne
adc
mov
push
imul
push
jae
in
pop
scas
out
adc
adc
add
popf
add
and
jp
xchg
in
dec
xchg
scas
outsb
push
and
sbb
add
jne
mov
lods
stc
maskmovq
negl
adc
push
inc
loop
out
sub
arpl
xlat
stos
out
lret
cs
xchg
mov
cltd
adc
int3
int
dec
add
jo
dec
mov
lea
mov
mov
rcll
out
xor
pop
jne
movsl
jo
lcall
mov
sub
xor
lahf
push
mov
out
fsin
cwtl
iret
imul
pop
pushf
xchg
lahf
repnz
mov
xchg
sbb
dec
call
adc
mov
jo
lret
add
lods
and
ss
insb
cmp
loop
inc
cli
andb
das
insl
nop
out
lods
incl
insl
mov
xor
dec
xchg
pushl
cmc
sbb
push
repnz
sbb
into
push
shrl
xchg
mov
jns
insb
fwait
fwait
cmp
daa
dec
cltd
in
jmp
sub
jns
aad
shll
in
int3
cltd
in
cmpl
mov
das
and
sbb
inc
push
lahf
or
xchg
pop
fs
in
out
jle
lods
out
sarb
adc
ffree
lds
test
icebp
dec
adc
and
inc
pop
ds
out
fucomp
cmp
push
and
push
jmp
mov
sbb
sbb
and
mov
mov
push
sub
lret
or
sbb
dec
dec
mov
jno
loopne
lcall
sub
dec
cmpl
mov
dec
in
sbb
lds
push
mov
mov
cmpsb
jne
std
xor
xchg
je
icebp
xor
stos
fnstsw
mov
inc
mov
cmc
sahf
iret
rorb
lods
aam
fldt
fstl
mov
addr16
in
adc
test
shll
dec
inc
and
sbb
pop
out
mov
inc
lcall
aad
mov
js
add
push
push
xchg
push
inc
add
aaa
and
jne
pop
push
pop
js
xor
and
jmp
shlb
in
inc
push
gs
mov
pop
sahf
push
jns
fs
and
das
mov
cld
mov
mov
or
int3
inc
xchg
ljmp
aaa
xor
lret
adc
test
sar
adc
xchg
mov
cmp
xlat
cmpsl
fistl
push
mov
out
movsl
lea
insb
fmul
sub
jge
cmp
push
inc
dec
clc
adc
mov
mov
in
lret
add
dec
movups
stos
xchg
repnz
or
push
nop
sti
jecxz
or
push
in
fsubrl
dec
jl
xchg
and
push
ret
push
lds
mov
xchg
sarb
or
push
lods
in
inc
sub
or
scas
mov
jnp
add
pushf
and
lret
xor
mov
xor
jle
lock
and
pop
ja
pop
push
dec
adc
jb
push
or
inc
mov
cmpsl
xorl
subl
scas
sub
clc
fsubrs
int3
pop
push
pusha
fcomip
cmc
cmp
out
xchg
test
cltd
mov
lods
mov
mov
adc
adc
in
mov
jnp
dec
test
cmpsl
mov
mov
cmc
test
es
lds
pop
xchg
fiaddl
shlb
ret
cmp
je
mov
pop
stc
mov
xlat
and
testl
mov
jb
shr
push
lcall
nop
rorb
mov
data16
pushf
test
fs
xchg
sar
rcll
sbb
enter
sbb
pop
push
dec
sub
pusha
mov
movd
leave
lds
ror
jns
aam
adc
mov
popf
mov
pop
adc
push
ss
cmpsl
call
pusha
loop
inc
inc
cli
adc
push
jno
xchg
jae
push
mov
iret
aas
sbb
sub
adc
stc
inc
adc
rcll
inc
dec
daa
lods
add
repz
adc
and
adc
sbb
movsl
pop
jle
orb
stos
or
dec
mov
sub
scas
xchg
push
mulb
adc
and
cmp
or
push
mov
push
pop
adc
or
andb
xchg
loope
or
pushf
xrelease
or
jb
sbbb
xchg
push
pushf
fisubs
pop
cmp
dec
and
xchg
mov
or
mov
hlt
aad
sbbl
daa
add
scas
mov
sahf
fwait
pop
repz
mov
xor
dec
sub
mov
insl
jo
pop
inc
iret
push
not
lret
lret
jp
or
ret
mov
out
std
stc
aad
inc
imul
in
test
int
stc
mov
cmp
jnp
sbb
xor
jo
sti
jle
push
cwtl
hlt
jle
push
addr16
shr
xor
xchg
sub
adc
addr16
jmp
sbb
jo
ret
jmp
sbb
xchg
cmp
and
aas
adc
lock
sub
rcrb
xchg
iret
ljmp
into
and
cwtl
shrb
pusha
pop
mov
sbb
xlat
dec
cmp
pop
push
out
outsl
add
fnstenv
sbb
jae
loope
mov
dec
ror
and
xor
jecxz
cli
pusha
and
xlat
pop
sub
mov
cmp
pop
mov
xor
jno
icebp
loopne
cmp
outsl
scas
pop
mov
xor
out
cmpsl
lods
mov
out
push
dec
mov
loope
lods
jo
int
leave
sbb
fisubl
and
jne
cmp
js
pusha
mov
loope
pop
mov
ljmp
dec
fldcw
shrl
mov
mov
test
or
xlat
xor
fcomp
sub
dec
fnstsw
out
sbb
mov
sbb
push
jmp
mov
pop
inc
push
pop
fsubr
mov
in
sbb
imul
jp
jbe
dec
imul
es
or
mov
sbb
pop
add
mov
pop
sbb
mov
mov
dec
loopne
aas
jbe
jo
jg
cmp
push
sub
pop
rcrb
add
out
adcl
pop
mov
and
aas
jecxz
inc
imul
test
outsl
mov
jno
lahf
scas
pop
sub
fists
repnz
jecxz
inc
mov
addb
push
nop
leave
dec
add
enter
mov
ret
ljmp
fxch
pop
dec
lret
mov
mov
push
pop
mov
fnstcw
adc
aaa
push
jge
xchg
shll
aad
dec
sbb
mov
addr16
lret
enter
int
aas
push
push
stos
jns
fs
pop
push
insb
loope
lds
cmc
in
push
mov
xor
jl
scas
enter
add
sbb
add
or
call
cli
xor
mov
fiaddl
test
daa
mov
in
rclb
nop
fs
add
out
inc
xor
fidivs
push
xchg
push
sbb
mov
xor
jae
fisttps
cmp
push
cmpsb
pop
rcl
rcll
scas
dec
leave
loope
jmp
xchg
sbb
or
repnz
xchg
mov
add
iret
xor
push
sub
and
fisubrs
mov
and
mull
adc
or
or
or
dec
sub
rcl
sbb
test
arpl
pop
jbe
add
arpl
fldcw
fs
outsb
dec
push
add
lods
sbb
mov
cmp
out
cmp
enter
mov
stc
pushf
fidivs
ficoml
orl
pop
sbb
cmp
mov
mov
and
in
jl
fistl
and
dec
pop
or
inc
or
pop
ja
dec
xor
pop
ds
lock
jnp
mov
push
fnstsw
mov
mov
mov
fs
ret
repz
scas
adc
mov
fadds
pop
jnp
dec
cmp
pop
rcrb
movsb
inc
dec
jnp
lcall
dec
pop
cmp
cwtl
mov
and
pop
pop
or
xchg
pop
jae
fdivrp
mov
in
fcomps
push
sbb
ds
cmp
lods
imul
or
xlat
je
cmpsl
loope
movsl
ret
rcl
out
mov
idiv
es
sbb
adc
mov
pop
cwtl
pop
mov
cmp
add
ficoms
roll
test
push
les
test
jle
imulb
fs
test
repz
pusha
inc
pop
cmp
icebp
mov
push
sub
jp
dec
ret
and
stos
lock
add
popa
mov
sub
testl
mov
aam
push
jno
test
jge
arpl
nop
ds
mov
pop
and
lock
std
or
scas
xor
je
push
rorl
js
push
xchg
scas
jnp
add
dec
inc
mov
and
cmpsb
or
or
idivl
arpl
mov
xor
cmpsb
mov
pop
sbb
lcall
jp
je
stc
sub
jecxz
loopne
push
pop
pusha
sub
imul
cld
cmp
dec
dec
jno
add
add
aad
pop
hlt
or
rcrb
imul
dec
lahf
nop
fsubl
xchg
sub
mov
lods
mov
lods
jnp
jle
xchg
cli
xor
push
jae
ss
ds
es
ljmp
pop
dec
loop
or
xchg
pop
subb
jo
dec
jecxz
lods
jle
xchg
xchg
sbbb
outsl
jns
adc
test
in
sub
es
pushf
xchg
sub
inc
sub
arpl
lcall
clc
jae
push
xchg
dec
arpl
xlat
lods
or
divb
loope
ds
cmp
sub
sub
mov
add
xor
mov
mov
mov
inc
int3
adc
sub
testb
call
fstp
mov
mov
cmp
adc
jmp
or
stos
cmp
cmp
data16
sub
in
push
inc
jo
aaa
hlt
push
xchg
xchg
jo
cmp
subb
and
int
xchg
or
into
data16
sub
fisttpll
sahf
add
xor
lods
popf
sbbb
jg
sahf
shrb
fidivl
dec
rcrl
push
lods
jb
into
orb
mov
sub
scas
xchg
cmp
fwait
and
xchg
mov
sub
ret
fsts
rcl
dec
clc
js
adc
jmp
mov
lock
loope
mov
pop
mov
add
popf
mov
pushf
xor
mov
rolb
push
loope
sarb
ja
xor
mov
testb
pop
dec
push
clc
xlat
adcl
rcll
dec
push
mov
xor
out
fimull
sti
in
rcll
sar
or
lret
pop
or
adc
rorb
int3
or
icebp
hlt
xor
nop
stos
call
mov
mov
icebp
scas
push
inc
cmpsb
in
sub
xor
xorl
ds
mov
stc
and
mov
gs
int3
imul
enter
xlat
sbb
stos
aas
mov
mov
sub
test
gs
and
pop
lods
xor
inc
ffreep
mov
insl
bound
rcl
add
xor
aad
jmp
pop
cmp
mov
sarb
pop
dec
sub
scas
dec
fdivl
sahf
imul
mov
jno
icebp
xor
divl
ljmp
cwtl
push
les
cwtl
push
unpcklps
sbb
mov
negb
ljmp
aas
popa
and
sbb
cld
lret
inc
inc
imul
popf
jne
ja
jne
loope
cmp
or
jns
sub
and
sarb
mov
in
incb
dec
bound
rorb
in
xchg
push
adc
aam
popf
adc
mov
adc
cmpsb
popl
ret
push
and
jmp
cmp
in
jb
sbb
mov
inc
cmp
xor
loope
jno
jae
dec
xor
repz
or
add
cmp
mov
dec
mov
push
insl
inc
inc
rol
lret
lcall
lcall
movsb
movsl
or
das
pop
adc
sbb
in
jl
clc
jmp
shll
or
push
push
pop
lahf
jle
movsb
js
stos
imul
xor
cmp
push
cmpsb
outsl
or
mov
sarb
loope
adcl
push
adcb
insb
int3
int
dec
les
add
xchg
add
push
dec
repnz
mov
int3
fcmove
mov
lcall
xchg
adc
lods
and
xchg
nop
jp
in
ret
mov
dec
mov
aad
xor
sub
pop
mov
cmp
mov
fwait
dec
out
pop
fwait
mov
cmp
mov
sarb
mov
jb
popf
cmp
int3
push
sub
sbb
rcll
inc
out
mov
mov
cld
sub
xor
xchg
mov
jecxz
pop
js
mov
int
inc
or
mov
imul
cmp
cmp
stos
cmp
ja
out
pop
xchg
data16
mov
mov
outsl
mov
sbb
cwtl
repnz
outsb
sbb
daa
sub
mov
das
xor
push
movhps
dec
sub
push
jecxz
push
and
cwtl
rcrl
sar
mov
mov
xlat
hlt
xchg
aas
mov
outsl
and
js
mov
pusha
sbb
aaa
int3
jp
mov
cmp
push
lcall
adc
jle
or
jnp
jb
aam
and
leave
pop
xchg
xchg
lcall
push
outsl
test
ficoml
adc
mulb
push
lea
es
pop
test
out
out
mov
lock
cmp
pop
sbb
lds
loopne
ficoms
sbb
rol
arpl
into
in
inc
subl
inc
cwtl
ljmp
clc
xor
and
dec
cmp
stos
jno
outsl
xlat
arpl
or
cmpsl
sbb
arpl
inc
fs
call
xchg
sub
xchg
adc
cld
push
adc
mov
testl
pop
push
pop
dec
lcall
mov
dec
cmp
scas
push
shll
xchg
hlt
rolb
popf
mov
xchg
mov
rcl
pop
lods
adc
jno
xchg
lock
pop
mov
outsl
sahf
push
repz
sbb
jl
xchg
test
test
int
fisubl
mov
decl
and
lret
cmp
jmp
push
pop
push
lret
pop
in
pop
mov
cmp
jnp
xchg
icebp
int3
dec
cs
fwait
pop
dec
xchg
cwtl
inc
imul
xor
shrb
xor
adc
out
and
test
stos
push
push
stos
shrw
mov
dec
ror
divb
mov
loop
mov
arpl
cmpb
jle
add
shlb
add
ds
mov
inc
fldl2t
inc
int
in
push
das
cmpsb
fadds
out
dec
xor
push
jns
mov
testl
loopne
push
int3
lea
cmpsb
ret
shlb
mov
mov
dec
jnp
out
lcall
lods
or
out
mov
clc
xor
sub
xchg
push
mov
sub
imul
or
les
sar
push
inc
sub
jo
int
jno
dec
xchg
inc
push
test
jne
jo
adc
mov
int
loopne
xor
test
xor
mov
sbb
popf
pop
xchg
int
add
mov
sbb
pop
fcmovnu
jns
xchg
clc
xor
xor
mov
or
les
dec
iret
call
or
or
roll
jnp
push
dec
lds
mov
sti
push
stc
cld
mov
mov
xchg
incl
or
int3
pusha
stos
fildll
and
pop
jbe
divb
xor
sub
dec
out
push
sub
mov
push
shll
push
testl
jp
xor
xchg
jl
or
mov
stos
insl
popf
divl
pop
sbb
mov
sub
ficomps
jbe
stc
test
test
fistl
pop
sub
and
sbb
add
pop
mov
out
or
cmp
dec
imul
xchg
jnp
cmpl
xor
mov
pop
xor
ja
sub
addr16
rol
mov
mov
cmp
loope
xor
pop
sub
stos
fmuls
in
adc
out
int3
xor
mov
repz
jb
add
xchg
movsl
xchg
mov
mov
adc
cmp
inc
inc
lods
mov
and
les
sbb
ret
outsb
xor
cmp
and
pop
out
xor
pusha
mov
mov
out
stos
xor
lahf
scas
aam
mov
sti
xchg
inc
jne
dec
mov
movb
cmp
sbb
int3
cs
into
push
jmp
ljmp
xchg
sbb
scas
test
inc
ja,pt
or
pop
shll
mov
mov
and
dec
inc
adc
add
xchg
dec
cs
test
std
cld
aaa
cli
orl
xor
and
sbb
xchg
rol
daa
decl
mov
shll
adc
aam
iret
cmp
das
adc
sbb
jg
dec
or
mov
les
mov
mov
mov
addr16
or
addr16
ret
pop
cmp
sbb
mov
ret
adc
lds
jle
pop
adc
jge
popa
sub
lods
mov
push
xchg
push
sbb
sub
fcmovnu
add
adc
sub
jmp
cmpsb
insl
sbb
xchg
push
jmp
sbb
and
ds
ds
mov
xchg
and
jl
sbb
mov
or
jbe
fdivl
mov
dec
shlb
cmc
stos
in
push
pop
movsl
andl
hlt
dec
loopne
faddl
sub
mov
popf
xor
pop
jmp
or
mov
mov
inc
lds
mov
dec
lcall
iret
out
sbbl
mov
lds
or
cli
xor
negb
inc
mov
data16
pusha
xchg
dec
mov
mov
pop
jge
sti
lock
subl
cmp
in
mov
add
lcall
add
add
fnstsw
push
stos
xrelease
xchg
xor
push
scas
inc
or
mov
insl
adc
mov
hlt
dec
push
xchg
mov
or
je
imul
insl
mov
in
xchg
jmp
or
es
add
addr16
cmp
or
nop
sbb
xor
lock
test
adc
pop
test
mov
pop
out
and
dec
stos
test
out
adc
ret
sbb
dec
cmp
jno
jb
inc
sbb
outsb
xchg
mov
pop
sub
push
add
jae
movsl
mov
lods
mov
inc
add
repz
xor
cmpsb
mov
out
div
or
mov
ja
ret
jmp
adc
outsl
mov
sub
enter
movsl
xor
pushf
add
jne
xor
xchg
jg
push
icebp
xchg
insb
scas
xor
sbb
lods
lahf
cmpsl
jmp
daa
lret
mov
xchg
loopne
fisubs
fildl
adc
mov
jmp
dec
jns
fistpll
stc
mov
std
loop
daa
push
cli
fdivrl
movsl
push
xor
dec
adc
shrb
mov
xchg
sahf
adc
cmpsl
imul
lods
addr16
fwait
xchg
mov
in
ja
xlat
jge
out
ret
or
bound
repz
fs
fs
xor
mov
jl
sub
dec
sbb
insb
jg,pt
lret
nop
xor
dec
ret
and
xchg
pop
mov
mov
push
scas
leave
std
or
or
push
mov
ret
test
xor
adc
push
sub
jp
push
fidivrs
xchg
fisubrl
mov
dec
add
pop
repz
cld
or
pop
sbb
stos
insb
lret
lock
aaa
aam
scas
dec
adc
out
sub
pop
or
push
dec
or
rorb
push
sub
andl
jp
or
mov
frstor
arpl
imul
or
mov
cli
dec
in
push
and
sub
add
pop
mov
sub
mov
add
jns
mov
inc
or
dec
push
sub
out
jp
mov
ret
or
sub
pop
lea
out
sub
mov
adc
sbb
cmp
cmp
sbbl
adc
loop
ds
lret
cld
adc
hlt
stos
add
pop
scas
add
mov
fs
pop
enter
subl
into
mov
inc
movsb
and
cli
mov
imul
frstor
fcomp
inc
andl
jae
cmp
xchg
xchg
dec
js
mov
dec
imul
pop
fs
aas
clc
pop
dec
in
pushf
push
in
push
jge
cmc
lods
notl
mov
pop
lret
jae
repz
add
mov
pop
jb
insl
mov
xchg
pop
cmc
hlt
sbb
clc
lock
cmp
fistl
sbb
negb
rclb
mov
dec
std
jns
dec
dec
fwait
sub
mov
sti
das
mov
movl
push
popa
enter
adc
in
test
jl
ja
pop
mov
scas
mov
mov
call
scas
andl
push
out
cwtl
loopne
push
xchg
cltd
dec
imul
test
xor
sbb
out
cmpsl
ret
xor
test
xchg
mov
cmp
xchg
push
pusha
push
test
mov
xor
xlat
mov
ljmp
orl
test
jp
lret
mov
pushf
ljmp
mov
jb
mov
pushl
aam
shll
xchg
xchg
into
mov
cmp
xlat
movsb
or
mov
xchg
mov
lods
inc
sahf
fidivrl
sub
fstp
or
add
xor
fs
xor
fsubr
sbb
test
adc
inc
push
shll
push
fidivrl
jns
js
jecxz
or
or
insl
pop
test
stos
sub
push
push
adc
mov
ja
mov
ljmp
js
imul
pop
ret
jecxz
fwait
icebp
imul
xor
ss
jb
icebp
jae
mov
in
cltd
add
xchg
adc
mov
insb
adc
not
test
adc
push
add
dec
ret
ficompl
roll
call
mov
jl
sub
xor
roll
outsb
ss
sbb
push
cmc
dec
push
push
push
iret
icebp
jg
sbb
pop
flds
enter
pusha
mov
shlb
shll
xchg
jl
pop
out
jae
aad
cmp
mov
jne
mov
into
mov
fwait
jge
repz
xchg
xchg
sbb
mov
mov
out
pop
testl
add
dec
enter
pop
pusha
cmpl
cs
jae
mov
xor
aaa
les
and
inc
pop
inc
mov
adc
ja
xor
fnstsw
addr16
int
shlb
lahf
lcall
and
push
sahf
pop
int3
int
add
in
out
scas
idivl
mov
dec
cmp
jg
shlb
lahf
int3
mov
or
dec
add
mov
ret
mov
dec
icebp
push
mov
sub
inc
bound
mov
and
movsb
dec
and
mov
movsl
in
fldt
lea
sub
lret
and
std
in
sub
fs
ret
or
shrl
mov
mov
jne
cmpsb
cmovns
ja
ja
mov
scas
pushf
cmp
dec
outsl
addr16
je
data16
pop
gs
test
jl
insl
xchg
mov
fstpt
mov
inc
into
notl
cs
shll
imul
loop
sbb
xor
je
mov
insb
je
shr
adc
hlt
in
dec
or
aad
mov
popa
adc
cmpsl
push
pop
jne
jge
sbb
jnp
bound
mov
and
fdivrl
stc
imul
jno
cld
rolb
and
xor
and
push
xor
repz
cmp
jg
stos
xor
mov
cmp
imul
in
sub
push
cmp
shl
adcl
leave
jns
jnp
aam
scas
add
add
loopne
jp
add
inc
and
int3
lea
lahf
mov
jp
test
int
loope
gs
mov
test
pop
out
call
loop
andl
sti
mov
clc
and
dec
push
fidivl
rcll
mov
rcll
dec
adc
xchg
divb
jecxz
pop
cmp
add
lret
and
push
inc
sbb
sarl
call
xlat
mov
cs
arpl
mov
mov
mov
icebp
aad
and
sbb
repnz
dec
gs
ret
jp
out
mov
cwtl
jnp
adc
je
jmp
daa
dec
sbb
dec
cmpsl
inc
or
jmp
loope
icebp
cmpsb
pop
jns
movsb
sarl
cmp
cmp
test
xor
mov
and
xchg
pop
ljmp
lret
and
sbb
call
xor
cli
jnp
pop
and
jnp
loope
sub
adc
cmp
or
sti
cmpl
pop
cli
dec
loop
mov
pop
add
mov
movsl
int3
mov
shl
cld
xor
bound
inc
cmp
scas
jno
out
fistps
dec
stc
jo
and
data16
inc
xlat
test
ja
dec
pop
and
fndisi(8087
out
mov
mov
xor
pop
inc
push
or
or
mov
mov
arpl
jae
cltd
std
cmpsb
lock
into
push
fs
sbb
int3
ret
dec
mov
mov
pusha
pushf
sbb
into
cmp
dec
sbb
push
push
sbb
sti
jl
clc
pop
pop
mov
pushf
cld
mov
je
leave
xor
sub
lock
push
inc
daa
testl
ja
mov
in
sub
xchg
dec
stc
inc
popf
push
faddl
jbe
dec
jl
iret
mov
add
arpl
pop
mov
in
push
mov
loopne
je
mov
std
push
dec
pop
and
xlat
sarl
icebp
test
and
push
shrb
xchg
js
fimuls
pop
pushf
fwait
xchg
in
mov
or
loopne
insw
subb
fnsave
xlat
pop
adc
and
pop
cli
jecxz
jge
add
out
xor
jae
jecxz,pn
nop
dec
jge
xchg
xor
movl
inc
repz
sub
ret
aaa
jle
push
cmp
dec
jl
pop
insl
mov
xchg
push
popl
xchg
mov
push
into
xor
pop
je
int
adc
sub
out
push
cmp
lret
pop
sub
in
icebp
cmp
movsl
ret
js
and
and
push
repz
lods
sbb
mov
push
jl
sub
fimuls
mov
sub
or
int3
ja
test
imul
test
inc
mov
outsb
arpl
push
test
mov
stos
xor
sahf
aas
or
stos
fcmovne
rorb
mov
mov
push
jno
mov
leave
cmp
pop
mov
cltd
add
arpl
lock
cs
sbb
arpl
jnp
xchg
lods
xchg
or
in
mov
jbe
xlat
xor
mov
xor
call
mov
or
sbb
adcb
inc
or
mov
mov
sti
out
in
out
push
and
jns
sub
test
mov
out
jb
hlt
xchg
pop
subl
or
jge
cmp
cmpsl
or
data16
jae
push
shrl
lock
push
xchg
xor
mov
ret
sub
loope
lcall
dec
je
sarl
push
je
cld
sbb
aad
inc
mov
sub
pushf
mov
dec
jle
lds
fisttps
adc
outsb
inc
loope
cli
loopne
mov
lods
cmpsl
shl
in
fs
cmpb
sbb
shll
in
mov
and
inc
mov
arpl
push
pusha
inc
mov
popaw
mov
js
xchg
enter
mov
aam
push
out
dec
jae
adc
shl
xchg
xchg
addb
into
jae
mov
sahf
inc
fwait
shl
std
in
std
xlat
adc
adc
das
jle
mov
sarl
mov
aam
push
or
sbb
jae
jb
jb
pop
lret
cmpsb
fidivrs
flds
push
por
sarb
mov
add
je
mov
jp
mov
xchg
das
add
and
lahf
xchg
dec
add
aas
or
mov
mov
repnz
jl
lea
test
mov
and
mov
pop
inc
pop
jo
mov
bound
cmp
fnstcw
and
roll
scas
lods
fisubs
jno
xchg
add
dec
into
mov
lahf
xorb
into
icebp
cld
cmp
inc
pop
out
stos
or
adc
fildll
js
sbb
lods
jp
outsl
push
pusha
dec
in
and
xchg
pop
callw
mov
lcall
mov
lahf
lock
mov
cmp
cwtl
push
xlat
mov
stc
lcall
ja
jne
stos
cmpsl
sub
out
mov
dec
sub
inc
adc
adc
jg
sbb
ljmp
add
mov
xor
xorl
hlt
ds
pop
cmc
mov
mov
cmp
push
mov
sub
clc
dec
fmul
add
adc
xor
xor
pop
xchg
ljmp
and
cmc
mov
mov
ret
xchg
faddl
cmp
inc
sbb
dec
fwait
mov
xchg
fistps
jne
pop
arpl
lret
pushf
insl
push
or
je
addb
mov
and
adc
mov
inc
dec
fmuls
pusha
xchg
pop
pop
sbb
in
shlb
clc
mov
cmc
je
aaa
push
pop
aad
sbb
push
insb
xchg
int
cmpl
fldenv
and
pop
mov
jg
lret
dec
fiaddl
movsl
add
push
enter
mov
call
cmc
mov
sbb
adc
xlat
sub
and
jle
or
cwtl
pusha
std
into
mov
mov
xchg
inc
out
or
cmp
test
test
xchg
and
ficompl
dec
push
push
rcll
add
xor
jae
jne
push
js
lods
cmpsb
jle
or
mov
mov
int3
outsb
fildll
add
xchg
js
lret
dec
jl
fisttpll
rcrb
mov
push
scas
fbld
push
pop
leave
cmpsl
jb
jbe
mov
mov
loop
dec
fisttpll
shlb
fdivrs
repnz
push
loopne
das
dec
mov
pop
sti
xchg
ret
dec
test
inc
xor
sbb
xor
xchg
xchg
cwtl
push
mov
loope
gs
push
or
pusha
cmpsl
into
sbb
lahf
repnz
insl
jge
mov
aaa
dec
out
cmp
in
cmp
mov
cmc
je
call
mov
dec
push
jl
xchg
pop
out
cmp
pop
or
push
push
dec
push
stc
pop
repz
int
adcb
xchg
and
mov
pop
or
mov
xchg
dec
in
cmp
movl
push
jmp
jne
cmp
adc
xchg
inc
call
lret
out
jle
les
sbb
sbb
or
fcmovnbe
sarl
inc
mov
in
out
mov
jle
cmp
stos
call
popf
lret
leave
inc
test
xchg
iret
sbb
mov
xor
jbe
add
inc
aas
in
mov
mov
leave
mov
jp
dec
fcomps
and
pusha
mov
cli
cmpsb
popa
mov
je
ds
adc
scas
hlt
lds
lods
jnp
jmp
call
or
test
subl
loop
aaa
ljmp
jno
inc
daa
adc
gs
and
ret
mov
xchg
add
popa
jl
aaa
mov
lahf
int3
lret
js
test
ljmp
cmp
in
push
xor
insl
int
sbb
or
enter
imul
dec
push
xor
shrl
in
sbb
out
sahf
rol
daa
sub
mov
jp
mov
add
sti
aam
push
sub
cmp
shll
sbb
push
lea
mov
inc
xor
fbstp
pop
imul
cmpsl
mov
dec
imul
jp
pop
or
imul
push
sbb
xchg
mov
pusha
push
xchg
daa
dec
mov
test
dec
mov
inc
sbb
insb
pop
repnz
mov
and
push
xchg
add
dec
loopne
cmp
pop
adc
mov
xchg
mov
inc
xchg
test
lcall
jbe
stc
call
dec
pushf
aaa
pop
loope
das
xor
dec
rorl
sti
hlt
jno
sahf
push
jecxz
jbe
es
js
sbb
mov
mov
lea
js
divb
mov
or
pop
xor
mov
aaa
push
cmp
xlat
pusha
add
and
pusha
mov
or
gs
pop
dec
lea
jae
xor
fdivs
repz
mov
es
bound
arpl
xchg
push
out
enter
cmp
js
call
je
and
mov
push
sub
or
inc
mov
or
mov
lods
fs
sub
sub
in
scas
jnp
jge
ret
xlat
pop
xor
ret
aaa
push
inc
movsl
dec
ljmp
mov
mov
dec
lock
push
mov
and
insl
mov
dec
loope
adc
scas
sbbl
and
mov
pop
orl
xchg
dec
mov
inc
cmp
lret
sub
dec
inc
cwtl
aam
loop
daa
aas
jb
push
repnz
call
dec
pop
into
push
add
aaa
adc
lea
jmp
je
es
pushf
mov
lods
mov
scas
push
mov
push
sahf
cmp
ret
ja
mov
xlat
movsl
jp
push
or
xchg
popa
add
outsb
xor
js
out
pop
lods
stos
dec
jl
in
mov
lea
out
mov
es
mov
cs
ljmp
sub
jmp
or
cmp
out
cwtl
pop
jp
addr16
xor
sbb
xor
test
inc
dec
push
adc
mov
cmp
test
pushf
ljmp
pop
mov
scas
into
aam
movsb
das
sbb
push
jle
mov
push
int3
rorb
mov
lret
outsl
shrb
lods
push
mov
lock
pop
dec
dec
push
push
pop
pop
push
movsb
sbb
inc
outsb
ds
movsb
rclb
inc
fisubrs
bound
jbe
mov
scas
push
out
scas
jo
test
jge
push
sub
js
and
xor
push
or
fdivrl
push
push
cmp
test
add
push
pop
int
imul
hlt
andl
sub
mov
push
or
push
mov
sbb
mov
xchg
lds
mov
mov
inc
cmp
lods
dec
sti
das
pop
add
nop
into
aad
push
mov
rcll
mov
sbb
pusha
mov
xor
stos
pop
aas
test
xor
in
mov
mov
pusha
ret
and
leave
cmp
bound
mov
pop
mov
jp
push
mov
xchg
sub
stos
imul
pop
outsl
push
enter
imul
out
jno
stos
add
vmread
lret
push
sbb
ljmp
jae
adc
mov
out
dec
lahf
loope
outsb
nop
hlt
repnz
ret
xlat
and
pop
inc
mov
mov
test
push
fsubl
insl
orl
pop
iret
repnz
pusha
jl
or
cmp
dec
out
test
and
leave
mov
cmp
mov
mov
stos
lahf
inc
sub
outsl
pop
push
mov
xchg
ja
push
and
mov
call
push
cmc
dec
fxch
mov
sarb
gs
fsts
pop
daa
mov
mov
jmp
sub
dec
xchg
add
add
fstps
sbb
adcb
mov
fbstp
push
mov
lock
xor
cld
jge
into
dec
out
jmp
inc
imull
inc
testb
repnz
fstpt
sbb
ret
lret
pop
sti
jne
and
lret
xchg
dec
std
push
mov
lea
jmp
inc
pop
jp
mov
stos
push
lods
aam
lods
xchg
ljmp
xorl
sbb
or
push
ss
cmpsl
inc
rcrl
sar
push
pusha
mov
es
dec
gs
mov
pop
push
pop
and
ficomps
outsb
cmp
mov
hlt
adc
shlb
bnd
lock
data16
cmp
mov
mov
in
neg
mov
push
adc
cltd
sub
push
mov
cmpl
pusha
gs
arpl
cmc
leave
sub
push
pop
daa
clc
lahf
lcall
movsb
in
push
dec
pop
pushf
arpl
dec
nop
into
std
inc
and
leave
mov
bound
rcl
push
dec
sbb
xor
lahf
jns
loope
int3
in
xchg
in
cmp
dec
cmp
ja
push
dec
push
adc
pop
adc
xchg
mov
outsl
inc
inc
int
fiadds
out
mov
das
aas
xor
inc
and
leave
xor
pop
sub
cwtl
scas
xor
out
iret
and
clc
cmp
ja
lods
sbb
subb
jns
pop
mov
fsts
std
dec
adc
sub
dec
aad
sti
stos
addr16
dec
pusha
aad
and
lret
sub
ja
ss
pop
popa
mov
pushf
xchg
mov
js
icebp
jecxz
hlt
cmpsb
sarl
ds
test
das
nop
push
bsf
test
cmp
sbb
and
fwait
mov
add
jne
clc
popa
dec
dec
xchg
rep
or
shll
mov
or
adcl
testb
bound
pop
loop
pop
or
dec
sbb
jno
dec
push
inc
push
jp
lds
jmp
js
aam
mov
test
daa
dec
pop
pop
cmp
sbb
cwtl
mov
ret
push
iret
pop
pushl
sub
mov
jne
push
push
jl
inc
not
dec
jle
dec
push
add
mov
or
xchg
out
repnz
mov
mov
xchg
xorb
mov
jns
lods
mov
pop
push
bound
in
push
xchg
push
out
cmp
stc
add
jbe
push
xlat
std
push
imul
lahf
and
lods
xchg
orl
xchg
and
xor
and
add
in
movsb
sub
popa
xchg
push
inc
mov
inc
dec
test
mov
mov
push
or
xor
sub
inc
mov
cmc
adc
adc
mov
test
and
push
int3
bound
cltd
fs
nop
cld
xchg
mov
cld
jmp
orb
data16
repnz
mov
jmp
dec
lods
add
sbb
mulb
testb
cli
clc
ret
push
lret
xchg
lock
rcll
out
jo
pop
imul
popa
sub
hlt
mov
negl
bound
xor
in
cmp
into
pop
cwtl
inc
aad
jle
sbb
sub
sub
inc
inc
mov
jne
lret
mov
mov
xor
es
push
push
iret
ja
sbbb
or
fistl
inc
push
mov
loop
int3
jne
ljmp
mov
call
push
fnstenv
mov
mov
out
lcall
fcoms
mov
movsb
push
iret
fucomip
lods
mov
fmuls
cmp
sti
push
jns
int3
lods
or
adc
sub
xchg
outsb
sub
dec
out
mov
adc
lods
push
cmpsb
jbe
mov
popa
addr16
in
jne
aad
or
cmp
mov
stos
inc
mov
cmp
mov
jnp
movsb
push
and
iret
stc
ja
sbb
pop
jle
in
call
cwtl
repz
repnz
movsb
arpl
iret
inc
pusha
mov
repnz
leave
addr16
lea
lcall
xchg
outsl
dec
jno
sarb
fistpl
insl
sub
out
fadd
lods
loopne
jecxz
jne
inc
pop
jnp
sbb
fs
imul
sarb
pop
lea
xchg
pop
xchg
jle
jge
in
lahf
push
dec
mov
jmp
jo
jle
xor
es
adc
mov
pop
mov
and
lods
mov
mov
and
hlt
dec
imul
dec
or
lret
cmp
or
cld
mov
sub
fistps
cwtl
icebp
cmp
cmp
negb
fcmovnu
lret
or
scas
movsb
lea
xor
ret
adc
xor
outsb
xchg
in
jecxz
mov
das
mov
insb
mov
pop
gs
jne
pop
and
adc
xor
mov
setbe
mov
xlat
cmp
jmp
int
imul
lock
add
jmp
push
sti
or
scas
icebp
mov
and
cld
ja
mov
sbb
and
and
enter
add
inc
xchg
mov
cld
inc
pop
dec
mov
aas
sbb
inc
or
sbb
jecxz
movsb
dec
gs
lcall
mov
sarl
inc
inc
sbb
or
in
stc
iret
push
sbb
call
xchg
sub
arpl
dec
pop
rorb
push
mov
mov
out
inc
das
push
xor
rep
dec
push
mov
lret
xchg
lcall
jno
cli
inc
mov
int
mov
mov
scas
sarb
and
xchg
subb
push
xor
icebp
pop
cld
mov
mov
jl
dec
imul
pop
data16
loop
or
aas
xor
outsl
and
and
stos
out
add
jns
sahf
sub
mov
filds
push
movsl
jl
pop
and
insb
jg
leave
push
jae
movsl
xchg
mov
mov
in
iret
cli
inc
movsl
xor
or
push
cmp
inc
jno
adc
in
scas
sbb
and
inc
xchg
rorb
test
into
icebp
xchg
inc
mov
dec
rcr
cmp
cmpsb
inc
lret
xor
xchg
mov
jne
in
pop
insl
aas
inc
push
mov
pushf
js
rorb
pop
pop
and
rcrb
inc
mov
mov
or
adc
dec
cs
dec
xor
arpl
cmc
mulb
cmp
or
lret
dec
ljmp
adc
inc
out
aaa
mov
pop
xor
roll
xor
jmp
mov
add
xor
insl
gs
lahf
in
fnstenv
push
jmp
mov
adc
ret
xor
arpl
ret
fidivrs
mov
inc
mov
jbe
sbb
mov
jb
push
insb
outsl
xchg
cmp
in
xchg
ficompl
and
cmc
and
test
dec
es
lock
imul
fcompl
shll
mov
shl
in
cmp
cli
jle
addr16
lds
repnz
xor
iret
int
jle
or
add
dec
call
das
ljmp
mov
pop
in
sub
xor
push
lret
dec
fs
add
hlt
popf
lea
mov
inc
xor
ds
inc
jl
cli
and
jbe
or
xchg
and
inc
sub
cmp
push
inc
inc
and
outsl
imul
dec
mov
jns
int
mov
hlt
xchg
cwtl
jmp
clc
aaa
cs
mov
adc
xorl
mov
mov
fs
mov
cli
cli
insl
cmp
outsb
mov
pop
jl
pop
aaa
jp
adc
inc
add
ret
repz
aam
pop
sub
xor
mov
fidivrs
pop
push
mov
pop
hlt
clc
xor
jnp
lcall
cmp
popa
orb
fst
test
imul
cmp
ror
fidivs
mov
sub
lods
fstps
dec
xor
sahf
stos
loope
pop
hlt
add
inc
jp
enter
pop
mov
fdivrs
loop
lahf
push
stc
xor
adc
mov
and
popa
add
sub
icebp
push
pop
mov
sahf
xchg
inc
imul
aam
out
dec
das
mov
mov
and
inc
hlt
pop
stos
pop
push
rorb
ljmp
inc
push
test
clc
insb
cltd
jno
jo
ficoml
or
aaa
js
jb
sarl
loopne
dec
xor
cmp
rorb
jns
mov
mov
pop
inc
shll
xor
or
stos
in
dec
dec
cmc
jp
sbb
cmp
outsb
xchg
pop
mov
xor
pop
lcall
and
add
adc
es
fs
sar
test
in
pushf
dec
scas
pop
sti
adc
fsubl
mov
movsb
mov
adc
sbb
mov
xor
arpl
jb
arpl
jg
inc
imul
mov
adc
adc
and
shrb
sbb
or
add
iret
push
ds
bound
sub
repnz
mov
sub
push
push
lret
mov
repnz
in
call
stc
and
cmp
idiv
push
cld
test
xchg
leave
push
pop
out
in
jno
dec
sbb
mov
and
xor
xor
test
cmp
pop
addr16
dec
lret
sbb
sbb
cs
sbb
add
dec
loopne
cmp
movsb
push
jno
out
sbb
jb
xor
out
in
test
dec
je
bound
xor
inc
dec
mov
jnp
and
inc
sti
or
xchg
jb
xor
cmp
cli
imul
lods
jle
dec
sti
pop
aaa
dec
les
inc
lds
call
inc
bound
movsl
clc
push
xchg
test
addr16
mov
test
or
cs
sub
jnp
adc
pop
lahf
mov
inc
stos
push
dec
mov
push
add
sbb
test
sub
fisubl
sbb
testl
stos
inc
aam
or
int3
imul
mov
xor
pop
mov
int
test
mov
sub
jno
xor
pop
shrb
lret
pop
jb
call
sbb
hlt
push
push
adc
or
push
inc
jecxz
lcall
ss
ljmp
nop
add
mov
pop
arpl
ja
dec
xchg
lds
push
pop
ds
push
add
cltd
lods
jl
mov
mov
gs
push
gs
mov
je
fdivl
jl
jbe
jns
cmp
mov
test
popa
pop
dec
out
mov
xchg
xchg
xchg
mov
adc
ds
lods
das
or
push
test
hlt
mov
and
das
test
fsubrl
or
ret
dec
cmp
adc
push
js
mov
movsl
push
aaa
ljmp
movq
add
out
das
mull
in
imul
xor
mov
leave
or
mov
dec
loopne
arpl
inc
push
shr
pop
cs
inc
rcll
add
cmp
cli
addb
fdiv
pop
sub
jecxz
scas
mov
arpl
jmp
lea
xchg
out
sub
jg
insb
mov
inc
adc
xor
or
and
bound
mov
fdiv
gs
pop
subl
sbb
add
cmpsb
sbb
pop
mov
mov
cs
push
daa
ror
dec
int
sub
outsl
sub
sbb
mov
mov
in
pop
pop
pop
ss
mov
xchg
scas
rorl
sub
jne
pop
aad
xchg
cwtl
mov
ds
add
dec
insl
fldcw
adc
lea
sbb
jp
pushf
pop
sub
test
mov
aam
sub
or
dec
lcall
or
in
test
dec
in
cs
lcall
and
mov
iret
icebp
outsb
cmc
cmp
int3
xlat
sbb
or
mov
aas
push
dec
pop
adc
sbb
test
call
and
ret
in
adc
sti
into
pop
cmc
adc
in
dec
sti
push
xor
xor
pop
pop
pop
add
js
sub
incb
imul
jae
push
mov
inc
jl
shll
pop
xor
pop
xor
pop
jmp
dec
pushf
sub
dec
ret
test
inc
or
sub
lret
sbb
jle
sub
test
ret
inc
pushf
pop
and
inc
mov
imul
push
xor
mov
mov
outsl
jmp
repnz
adc
popa
add
repz
cmp
or
int3
jne
sbbb
dec
mov
lds
loope
mov
gs
push
ds
xchg
stc
xchg
mov
leave
mov
into
inc
sub
pop
sbb
loop
movsl
outsb
dec
fsubrs
sub
out
jl
sbb
push
mov
jge
leave
stc
hlt
jmp
mov
mov
sub
adc
cmp
inc
cmp
jbe
cmp
xor
pop
out
test
xor
shl
mov
enter
popa
pusha
add
push
dec
in
sub
insl
data16
loope
push
addl
bound
push
lret
outsl
addb
jmp
inc
pushf
jmp
and
push
cmc
int3
pop
subb
pop
mov
mov
enter
push
mov
sbb
sbb
jecxz
sub
jp
test
cs
jg
cld
mov
loop
repz
dec
adc
sub
cmc
dec
sub
cmp
imul
ja
mov
jl
push
xlat
loopne
shrl
dec
mov
pop
hlt
sahf
or
outsl
ret
fs
xor
cmpsb
xchg
addr16
in
xor
inc
movsl
mov
addl
out
fstl
lahf
dec
mov
call
mov
sub
loopne
sahf
push
push
mov
fs
imul
pop
pop
ja
sar
stos
insb
pushf
mov
std
jecxz
lock
pop
jnp
inc
hlt
cmc
aam
std
or
and
inc
dec
pop
mov
fwait
in
mov
adc
inc
imul
movsb
adc
lret
add
xchg
leave
cmpsl
andb
xchg
jo
cli
cltd
pop
adc
je
ss
mov
pop
imul
out
mov
pop
add
jne
mov
pop
add
cmp
ljmp
call
push
enter
fists
pop
pop
aad
jo
push
push
sbb
jmp
pop
std
gs
inc
and
sbb
test
fnsave
add
jnp
and
mov
jae
pop
nop
jns
roll
fdiv
or
sub
stos
cmp
push
imul
imul
jge
ret
push
lods
sub
or
stos
sbb
ss
cmp
cltd
adc
jl
push
push
lcall
in
outsl
rorl
mov
ljmp
sbb
jg
or
dec
je
or
imul
mov
cmpsb
jmp
xor
sub
jnp
lret
cli
sbb
pop
push
sahf
xor
xchg
mov
or
dec
push
jo
xchg
inc
mov
dec
and
lahf
mov
inc
cmp
push
mov
jmp
inc
stc
pop
sti
jmp
sub
cmp
sub
loope
rorl
jbe
mov
or
cmp
lret
leave
xor
or
lds
aad
lret
or
adc
roll
fldenv
loopne
mov
and
xchg
jmp
bound
js
adc
cli
sub
arpl
repnz
cmp
rorb
fcomps
stos
mov
jo
in
push
das
push
int
out
lret
inc
stos
cmpb
leave
sub
mov
push
sub
loop
nop
incl
cmpsb
add
mov
out
fwait
mov
push
or
sub
sti
inc
push
outsl
and
into
push
fcomi
jge
xor
nop
scas
xchg
popa
push
je
jp
pop
popf
push
adc
add
xadd
std
mov
dec
sbb
call
cmp
mov
sbb
add
fisubrl
jl
xor
inc
xor
cltd
repz
int
xchg
ljmp
mov
dec
dec
inc
fldenv
scas
sub
mov
stos
aam
inc
sahf
stc
test
lea
jge
sub
xchg
cltd
jno
fiaddl
push
gs
popa
lcall
xchg
call
scas
loopne
imul
lcall
or
shrl
pop
jno
enter
imul
dec
aaa
push
faddl
jnp
or
cmpsl
sub
mov
pop
sub
xor
adc
push
xchg
adc
adc
iret
add
sbb
inc
adc
rcr
xchg
cmp
xor
jnp
jecxz
adc
lret
aaa
test
adc
xchg
cmp
cld
xchg
mov
outsl
cwtl
jl
jge
stos
push
mov
mov
add
mov
jne
push
push
out
sub
push
push
divb
or
scas
clc
cli
jb
hlt
popa
push
mov
inc
aaa
xchg
mov
cld
daa
jo
jb
ffree
xchg
or
lahf
xor
ficompl
ja
in
arpl
movsb
shl
lods
mov
mov
or
scas
cmpsb
insl
clc
jp
inc
fdivl
loopne
sub
stc
jge
mov
daa
fcompl
arpl
sub
lea
sbb
xor
fisttpll
cmp
mov
jb
xor
outsl
mov
mov
cmp
fidivrl
sub
lret
jae
aaa
mov
mov
adc
lcall
inc
jne
inc
imul
jg
shr
or
xchg
roll
mov
pop
xor
pop
or
fildl
inc
dec
ret
lcall
dec
xchg
lar
mov
jge
mov
or
in
jae
in
push
mov
xchg
popf
or
add
sub
shlb
lock
jno
add
inc
addr16
into
dec
int3
ficoml
jecxz
inc
ljmp
dec
mov
rcrb
xchg
mov
mov
dec
icebp
add
adc
adc
or
xor
or
lahf
sub
out
add
int
cltd
mov
mov
mov
jp
pop
xor
adc
mov
add
insl
stos
fidivrs
mov
pop
mov
popa
enter
xor
push
mov
xlat
push
fmull
fidivs
loopne
call
pop
or
and
sub
dec
arpl
hlt
mov
push
mov
mov
xor
jne
fstpt
std
sub
lret
sbb
pop
int
jl
mov
aam
int3
cwtl
push
jbe
or
cltd
icebp
in
push
aas
lds
mov
stos
inc
mov
lods
popf
ret
ret
ficoml
cmp
inc
aam
jl
imul
dec
sub
mov
outsb
insl
data16
insb
cmp
shlb
or
scas
dec
and
fiaddl
mov
lock
add
adc
daa
repnz
icebp
in
dec
in
pop
xchg
xchg
jae
mov
cltd
xor
mov
sbb
outsl
dec
cmpsl
dec
jp
lret
rclb
arpl
fmul
imul
mov
pop
fwait
sarl
fwait
sub
mov
lret
cmc
sbb
fidivrs
ret
mov
mov
f2xm1
in
or
jmp
xchg
inc
push
and
xchg
dec
pop
and
imul
pop
add
dec
fldl
dec
jbe
mov
enter
test
jbe
adc
jge
add
mov
mov
mov
push
mov
test
divb
inc
scas
mov
xchg
pop
pop
jo
out
adc
jle
addr16
and
rcrb
inc
pop
inc
testb
dec
ss
js
fdivrl
clc
jnp
push
push
sbb
enter
jne
cltd
or
pusha
sbb
loope
add
outsb
jb
leave
cmc
xchg
dec
cmp
scas
inc
jne
jne
xchg
inc
mov
mov
xchg
pop
fwait
inc
fisttpl
stos
movsl
mov
outsl
fdiv
adc
js
orl
cmp
jmp
or
test
mov
js
dec
mov
dec
dec
adc
push
movb
daa
and
adc
das
sub
repnz
jl
add
lret
push
push
dec
adc
hlt
add
cs
xchg
mov
sub
inc
push
mov
mov
popl
lcall
stc
nop
fucomip
and
sub
mov
repz
xchg
push
das
pop
daa
mov
bound
stos
mov
aad
inc
idivb
inc
roll
add
in
or
mov
cmpsl
test
jnp
pushf
scas
push
movsl
adc
push
aam
repz
dec
mov
in
mov
in
jg
ds
sub
ret
out
jmp
pushf
scas
pushf
out
pop
iret
aam
mov
add
aam
in
push
push
push
ret
pop
push
test
xchg
lods
je
dec
xchg
mov
pop
test
push
jb
adc
fwait
adc
dec
imul
xchg
lods
div
out
mov
cli
shl
arpl
mov
mov
repnz
mov
sbb
popa
inc
or
jmp
dec
ret
lcall
lahf
ja
pushf
cmp
popa
jne
jecxz
pop
scas
stos
std
pop
jnp
out
in
jae
scas
mov
jg
push
or
jp
mov
dec
add
xor
pusha
jmp
cmp
pusha
adc
xlat
adc
add
aaa
js
mov
or
mov
mov
pop
hlt
fcmove
scas
ret
aas
sahf
mov
pop
xor
je
fcmovbe
inc
adc
add
scas
xchg
xchg
ljmp
cwtl
imul
mov
add
jg
ror
mov
xor
aaa
out
cs
and
cmp
pushl
test
push
xchg
lahf
sub
dec
or
add
xor
fs
or
nop
lret
jl
pop
test
mov
and
jb
cmpsl
mov
jle
push
test
xchg
xor
adc
rcll
lods
xcrypt-ofb
cmpsl
insb
iret
sub
jae
push
mov
mov
jmp
jns
mov
jmp
cmpsl
cmc
jb
mov
push
ljmp
xchg
and
aad
dec
pop
or
push
stos
mov
lock
adc
repnz
adc
ror
lahf
ret
data16
mov
repz
in
data16
scas
mov
or
mov
psubsb
les
mov
dec
aas
dec
in
pminub
xchg
sub
sub
xchg
dec
cmp
add
repnz
or
andb
addl
std
push
cmp
mov
or
iret
ret
sahf
add
call
mov
cmc
test
sub
lret
cmp
in
mov
push
pop
mov
jns
cvtpi2ps
popf
cmp
push
xor
xor
outsl
cmp
mov
pop
stos
inc
cld
lods
test
adc
fnsave
loope
add
push
cmp
jb
lea
push
call
sbb
jne
jne
sahf
loop
adc
add
sbb
movsl
jno
inc
das
popf
cmp
jb
cmp
push
xor
pop
js
inc
cmpsb
cmp
test
decb
int
rcrl
ficoml
dec
call
mov
out
xor
mov
ljmp
sarl
inc
movsl
cmpsb
xchg
mov
adc
lcall
std
or
lods
push
sub
mov
and
sub
add
dec
cmpb
cmp
sub
xchg
rcll
inc
mov
mov
in
enter
push
xchg
or
push
and
sbb
jg
popf
jae
addr16
loop
bnd
xchg
jg
loope
setle
jp
data16
dec
adc
pop
mov
sti
xchg
sti
lods
jae
lret
mov
or
out
mov
mov
add
scas
mov
lods
int3
adc
jne
setbe
jne
in
ror
stos
aad
call
sub
or
stos
out
cmc
daa
adc
push
cmp
enter
test
adcb
mov
loopne
cwtl
and
into
cmp
aam
cmp
lods
pop
out
pop
fs
and
mov
out
or
mov
push
mov
lds
pop
out
fidivrl
mov
adc
pop
mov
mov
scas
xlat
push
sbb
fs
addr16
or
sbb
mov
lcall
pop
sub
mov
adc
jno
fistps
jg
sti
sahf
mov
push
cmp
fiaddl
rcll
aas
jb
push
lea
idivb
fdivp
out
filds
pusha
jp
mov
mov
add
mov
in
mov
js
xor
add
testl
and
imulb
mov
cmp
mov
jno
jbe
pop
scas
cwtl
push
ja
stos
insb
xor
lock
popa
pop
out
cmpsb
out
aas
jo
sub
xchg
es
fsubr
bound
shl
push
das
gs
push
into
dec
add
test
jg
movsb
shl
push
ret
or
dec
inc
int3
push
jo
jae
ret
push
sub
xchg
cmp
lock
inc
scas
clc
dec
test
sahf
mov
fsubl
dec
push
in
dec
jns
inc
sbb
fwait
lret
inc
in
and
or
sbb
xchg
mov
dec
cmp
idivl
xchg
les
jnp
lea
inc
fsub
mov
addl
cmp
daa
push
clc
ds
lcall
mov
mov
cld
mov
mov
adc
lods
xor
sub
or
ret
add
aad
dec
addr16
jae
ja
insl
iret
inc
shlb
cmp
rcrb
xchg
jbe
mov
xor
and
inc
cmp
mov
pop
adc
pop
adc
sub
inc
push
enter
push
in
or
dec
in
enter
cmp
cs
xchg
stos
add
fdiv
daa
xor
in
xor
scas
loop
ret
addr16
pop
jp
jge
xor
lock
lcall
inc
orl
xchg
xchg
push
xor
mov
push
cltd
xchg
out
mov
inc
test
daa
sahf
dec
push
out
pop
inc
into
push
pop
and
pop
insb
int
in
xor
movsl
dec
sub
and
and
sub
imul
mov
mov
cmp
out
mov
pusha
movsb
out
fbstp
hlt
xor
jae
repnz
or
xchg
loop
push
adc
movsl
dec
xchg
lea
push
mov
cmp
stos
and
bnd
out
cmpsl
mov
jbe
add
int
sbbb
leave
jg
add
xchg
mov
dec
and
ljmp
dec
test
rclb
jns
out
xor
inc
mov
js
out
fmul
dec
sbb
loopne
mov
test
mov
popa
jle
std
xchg
mov
push
popf
mov
int3
in
data16
add
mov
jecxz
xchg
inc
push
lcall
int
out
lcall
test
lods
or
cmp
test
dec
dec
lea
sub
loopne
push
xorb
test
ret
js
in
push
loope
jmp
in
add
sbb
es
adc
xchg
cmp
jl
mov
test
pop
lods
stos
lea
popf
mov
add
popa
fldcw
daa
cmpsb
or
sub
cmp
or
imul
sub
mov
repz
fcoms
int3
adc
pop
sbb
add
and
push
jge
andb
lcall
aas
lret
dec
jecxz
or
sub
mov
sub
cs
push
push
inc
das
push
icebp
cltd
cmp
in
fcmovnu
sti
push
das
sti
sbb
lock
mov
test
aaa
jge
loop
sub
leave
test
push
aad
xchg
push
lret
and
stos
loope
out
inc
push
rclb
call
adc
jne
jns
mov
lods
idiv
aaa
cmpsl
sahf
dec
nop
cmp
ret
repz
and
adc
push
pushl
mov
fnstsw
clc
add
test
pusha
push
ss
es
cmpsl
sbb
das
pop
loope
aaa
loopne
insb
shll
incl
movsb
popa
cmp
jmp
cs
adc
pop
jbe
cmpsb
xchg
lcall
shll
cwtl
outsl
lods
cmp
int3
mov
and
loopne
aad
or
inc
ret
push
mov
jb
mov
pop
pop
sbb
dec
mov
jg
jnp
cmp
push
pop
inc
and
xchg
test
popf
mov
pushf
je
adc
lahf
push
cwtl
lods
loop
lret
lea
data16
iret
and
daa
fdiv
mov
xorl
ds
mov
and
stos
cmp
pop
pop
rcr
dec
testb
dec
pop
mov
xchg
into
jmp
and
inc
lahf
and
sti
cmpl
std
mov
insb
jge
pop
nop
loop
adc
jge
loope
stc
xlat
jbe
and
add
inc
notb
xchg
fdecstp
insl
rorl
out
mov
pop
ret
jae
adc
jp
fs
pop
adc
lea
minps
mov
or
shrl
lret
pop
cmc
mov
stos
mov
and
in
aad
inc
lods
push
and
and
jae
add
data16
orb
fnstenv
jg
mov
lret
xchg
cmp
out
shrl
pop
push
pop
fidivrl
jo
out
push
in
mov
js
jecxz
insb
fsubrl
push
xchg
je
mov
jl
cmc
jge
dec
daa
mov
pop
sbb
xchg
jo
sbb
arpl
pop
iret
xlat
rolb
cwtl
in
mov
jle
inc
cmpsl
mov
or
cli
dec
fnsetpm(287
in
jno
test
and
cmp
xchg
and
fnstsw
inc
mov
les
leave
fwait
adc
and
and
adcb
xor
add
movsb
and
jnp
dec
aaa
xor
lea
stos
movsl
pop
clc
mov
jae
std
sti
shll
mov
mov
push
fucomi
or
and
mov
lea
mov
push
movl
mov
pop
xchg
xchg
enter
sbb
scas
sub
xor
pop
out
pop
mov
addr16
mov
fstp
movsl
lret
rcl
bnd
nop
lock
jl
push
bnd
cs
les
xchg
test
mov
dec
inc
in
lods
popf
jnp
inc
into
adc
mov
mov
mov
fs
inc
lods
add
sub
pop
gs
pop
shlb
pushf
pop
jl
shll
dec
test
inc
push
mov
rorl
mov
outsl
repnz
jno
ret
ja
sahf
cld
rclb
outsl
or
or
xor
sbb
aad
cmp
add
and
push
sbb
pop
push
push
jge
sub
mov
xchg
adc
mov
lahf
aas
jno
cmp
pop
mov
jnp
inc
inc
jg
mov
popf
and
in
cwtl
pop
sub
and
mov
inc
andb
push
xchg
dec
sub
xor
loope
pop
ljmp
adc
xchg
insl
pop
xor
push
into
push
lock
fadd
push
enter
repz
scas
cmc
int3
cmc
push
pushf
test
rolb
jne
cwtl
pop
xor
imul
xchg
sub
je
mov
sub
push
or
push
addl
xor
out
aam
mov
push
shr
pop
popl
jl
mov
jmp
push
push
sbb
stos
subl
imul
pop
loop
jl
movsl
enter
icebp
not
sub
jg
outsb
push
enter
jae
cltd
jmp
add
xor
sub
or
mov
pop
test
push
sub
imul
ljmp
adcb
arpl
test
jp
pop
or
sub
lds
mov
mov
cmpsb
insb
mov
xor
fsub
lahf
lods
aad
mov
pop
sbb
rorl
test
cmpsl
daa
leave
mov
mov
jmp
add
xor
mov
cli
jecxz
out
pop
mov
sub
mov
flds
xchg
ja
in
arpl
lods
jno
add
xor
push
stos
xchg
jmp
dec
xor
push
fstps
push
xor
mov
push
into
sub
mov
fcmove
push
inc
insb
xor
add
pop
bswap
cmpsb
mov
dec
and
add
ret
bound
notb
push
ds
push
pop
cmpsl
push
out
mov
xchg
insl
mov
mov
cltd
lods
sbb
les
adc
cld
jbe
shll
pop
fs
es
jle
in
aad
jl
push
mov
idivb
adc
push
sbbl
mov
jne
jb
xchg
inc
int3
and
mul
or
cmpsb
aas
aaa
xor
hlt
dec
mov
add
or
xchg
adc
add
add
add
popf
mov
mov
loopne
pop
jle
inc
ss
inc
test
cmp
loopne
sarl
push
sub
pop
sar
gs
ss
es
nop
and
add
lahf
lret
jbe
push
mov
fdivs
and
xchg
jmp
mov
cmp
pusha
dec
cmpsb
sub
cmpl
inc
mov
mov
push
es
inc
xor
lds
movsl
adc
call
aad
dec
jno
inc
fs
jae
dec
pop
pop
insl
mov
pop
into
ret
scas
push
mov
adc
dec
mov
repz
pop
or
ja
add
daa
adc
lock
mov
rcll
dec
inc
aad
mov
jb
add
das
jb
divb
frstor
push
sub
in
sub
cmp
and
mov
lods
mov
dec
ja
arpl
mov
push
fst
int3
icebp
adc
lods
sub
dec
mov
inc
cmpsb
sarb
xchg
fiaddl
cltd
xchg
int
sahf
fstpt
int
leave
jmp
or
add
cld
adc
cld
mov
mov
pop
push
dec
jo
out
out
in
mov
add
sub
scas
and
mov
pop
out
add
xchg
dec
adc
add
je
and
add
and
mov
push
cmp
insl
js
push
lahf
je
mov
pop
inc
stos
cwtl
shll
outsl
ret
push
sub
pushf
aad
test
sub
mov
sub
cmpsb
test
xor
push
ljmp
mov
xlat
imul
inc
outsl
jne
mov
ljmp
sti
or
std
dec
insl
scas
fbstp
loop
mov
ja
int3
dec
leave
jae
push
mov
js
and
jmp
and
test
mov
mov
fcompl
xchg
lds
fldenv
mov
frstor
mov
sbb
cwtl
sbb
int
push
pop
cs
outsl
and
icebp
rcll
pop
sub
ret
sub
lock
pushf
ret
fsubr
sbb
lds
jne
xchg
clc
stos
xchg
xchg
push
loope
sub
aam
xor
push
push
xor
or
ja
xchg
jmp
xor
and
in
inc
or
push
out
or
ficompl
jmp
sbb
call
dec
fistl
je
xor
call
cld
xor
jo
pop
jp
xchg
sub
ss
cli
or
mov
mov
out
pop
loopne
ficoml
sub
add
sub
dec
push
xor
ljmp
and
mov
in
jmp
or
mov
in
pop
int3
dec
jecxz
pop
dec
divb
or
adcl
push
add
movsb
pop
mov
hlt
dec
xchg
jg
push
js
aam
imul
add
dec
std
nop
out
jae
stos
adc
lods
xor
sbb
gs
pop
mov
outsl
shlb
out
inc
sbb
jns
sbb
in
shlb
mov
aaa
sub
into
mov
call
loop
adc
mov
mov
mov
xchg
or
fs
mov
lds
push
jnp
xchg
in
cmp
shlb
fwait
or
inc
pop
jo
mov
xor
sbbl
inc
cmpsl
mov
cmpsl
push
aad
pusha
or
xchg
add
inc
or
sbb
popa
or
push
and
pop
mov
icebp
dec
dec
rolb
inc
dec
rorb
nop
imul
cmp
lcall
lcall
and
sub
loop
sbb
xchg
xor
mov
pop
sbb
dec
push
jge
push
fs
popa
sub
popf
jne
imul
cmp
imul
inc
adcl
cmp
mov
aam
int3
loopne
int
iret
push
push
ljmp
xchg
es
push
lret
add
dec
pop
loope
jns
and
aaa
pop
mov
sbb
pop
xchg
inc
lcall
fdivrl
push
add
imul
mov
dec
sub
cmp
mov
or
sti
cld
hlt
jno
std
push
sbb
loopne
push
mov
dec
xchg
jle
pop
and
push
out
sub
cmc
mov
adc
sbb
mov
or
mov
mov
shrb
xor
mov
divl
outsb
or
xor
and
rcl
fnsave
leave
dec
ffree
clc
sbb
push
mov
pop
add
pop
ds
adc
mov
lahf
test
iret
test
sbb
es
popa
jle
scas
push
mul
sbb
inc
push
movsl
push
inc
imul
jmp
xchg
mov
inc
xchg
or
and
inc
shll
pop
push
in
or
ret
xchg
pushf
imul
insb
jae
movsl
das
in
push
mov
push
outsl
test
dec
iret
testl
lcall
out
iret
repz
sbb
test
int3
sub
popa
lcall
shrl
fcmovbe
pop
and
lcall
sahf
mov
inc
stos
outsb
mov
pop
inc
fldenv
in
lret
lahf
jmp
jne
and
pop
mov
pop
add
cld
jl
out
jbe
sbb
jge
or
shrl
insl
push
or
mov
dec
loop
fsts
sbb
mov
mov
jbe
hlt
cmc
cltd
scas
mov
imul
daa
and
movsb
mov
add
cwtl
repz
xchg
add
mov
fs
inc
lock
pop
xor
pop
mov
xor
insl
pop
mov
pop
lcall
pop
add
lcall
xor
dec
or
xchg
xchg
pop
xchg
shr
xchg
mov
add
test
daa
jbe
mov
jl
adc
imul
mov
lock
aam
neg
fdivrp
dec
xor
int3
call
push
and
cs
mov
lahf
jp
imul
xor
mov
sub
sbb
scas
repnz
inc
push
loopne
pushf
movsb
mov
sbb
sbb
push
ljmp
xor
xchg
loope
data16
pop
insb
xor
insb
mov
lret
js
fucomip
pop
push
lods
jno
xor
ds
pop
xor
or
xchg
pop
pop
adc
fwait
xor
int3
jmp
fstpl
and
and
fxch
sub
iret
jmp
icebp
mov
and
mov
cmp
sbb
adcb
xor
cmp
insb
fstps
in
mov
sahf
jno
rorb
scas
sub
sub
cmc
adc
out
add
push
shll
stos
xchg
and
dec
shrl
adc
ret
lock
add
test
fnstsw
or
pop
sbb
xchg
lock
xchg
loop
stos
inc
int3
pushf
imul
icebp
pop
pop
hlt
sub
add
cmpsl
test
push
pop
lahf
add
test
jnp
cmc
and
push
pop
lods
lret
andb
test
ljmp
sub
adc
out
mov
adc
pop
mov
sbb
push
mov
xchg
sub
shrb
popf
mov
mov
subb
xchg
leave
cmp
mov
mov
mov
sbb
sub
je
ss
add
jle
cld
mov
test
call
jp
mov
mov
inc
push
mov
scas
xor
inc
sbb
data16
imul
cmp
arpl
push
sbb
inc
sbb
jbe
test
dec
gs
dec
lea
push
or
cmpsb
ds
push
shrl
shrb
mov
inc
repnz
jecxz
movsl
pop
std
enter
int
cmp
incb
pop
fcompl
fistpl
fistpll
ss
loop
in
das
out
nop
xchg
push
mov
push
xchg
mov
inc
adc
cmpsl
data16
dec
dec
dec
pusha
jno
mov
or
adc
mov
cmpsl
fs
cmpsl
pop
cmpsl
push
sbb
or
pop
nop
shl
roll
bswap
repz
cmc
aam
into
or
inc
and
mov
and
pop
dec
scas
loope
sub
fcompl
mov
inc
out
inc
fwait
mov
sbb
mov
xchg
in
jne
mov
cmp
stos
xor
mov
imul
adc
pop
cmpl
rolb
mov
repz
cltd
data16
lods
mov
sbb
mov
shrb
in
loopne
xor
ss
fmul
ljmp
cmp
out
fnsave
inc
ret
in
clc
xor
push
divl
or
pop
enter
sbb
mov
add
fwait
movsl
lods
xorl
inc
dec
frstor
and
andl
dec
out
out
ds
int3
test
xchg
adc
lods
adcb
mov
inc
mov
xchg
jae
push
ja
out
imul
sub
mov
and
test
out
shlb
cmp
pop
pop
pusha
xor
dec
rorb
test
std
inc
dec
or
cmc
adc
loop
aas
jnp
mov
dec
push
cld
mov
fnsave
flds
out
imul
dec
xor
xor
movsb
push
mov
popa
addl
add
mov
fstps
shll
xchg
lods
ret
dec
sub
sbb
cmp
ret
sub
xchg
push
adc
mov
loopne
fsub
cmpsb
repz
pusha
push
mov
pop
adc
push
je
adc
inc
repz
inc
aad
ja
outsl
pop
mov
dec
jne
das
ljmp
aaa
std
in
imul
mov
inc
cmc
or
sub
pop
lods
je
pusha
movsb
push
insl
scas
fildll
and
mov
inc
outsb
dec
dec
fsubl
ret
dec
cwtl
stc
pop
inc
ds
pop
push
ret
pop
imul
scas
es
xlat
sub
ss
insl
sub
pushf
icebp
xchg
sti
int
inc
pop
fisttps
and
cmp
mov
and
xchg
mov
xchg
stos
add
outsl
jo
popf
xor
icebp
xor
ret
lods
mov
das
fxch
mov
fisttps
dec
stos
mov
mov
mov
xor
cltd
pop
cmp
xor
push
ret
inc
cmp
dec
cmp
loopne
movsl
pop
fisttpll
pop
lods
dec
fwait
int3
xor
inc
gs
mov
int
push
and
mov
push
adc
enter
mov
insb
mov
xchg
cli
shl
adc
push
testl
cltd
pop
std
sbb
popf
enter
xchg
mov
fnsave
xorl
pop
inc
mov
inc
mov
je
testl
bound
mov
mov
or
lods
push
mov
sub
pop
xor
sbb
scas
test
pop
inc
psrad
insb
pop
jmp
cmpsb
hlt
push
push
scas
sub
scas
push
xchg
popf
xchg
inc
aam
mov
out
stc
out
push
add
mov
dec
jns
ljmp
cmp
sarl
nop
and
xchg
ret
in
pop
leave
dec
loope
bound
call
push
push
scas
movsl
inc
pop
cwtl
insb
mov
jbe
pop
jno
push
push
xchg
inc
fisttpl
push
push
pop
lahf
jbe
and
jl
in
lods
cmp
or
push
sbb
xchg
rep
push
das
lods
shl
cli
icebp
pop
fld
daa
aad
daa
pusha
imul
push
loop
mov
fisttps
xchg
mov
add
adcb
sub
or
and
lcall
jp
push
loope
push
mov
and
pop
cmp
notb
sbb
mov
jnp
mov
lock
jp
xchg
push
pop
sub
subb
push
mov
pop
cli
scas
mov
pop
mov
imul
test
jo
repz
xchg
mov
lods
or
dec
int3
or
mov
jns
add
mov
subl
inc
ret
iret
cwtl
mov
lea
cld
rol
test
jp
jle
aam
sub
jp
mov
cmp
jge
xchg
int3
cmp
loop
push
cmp
mov
pop
dec
jecxz
push
ret
or
adc
dec
out
mov
dec
fcmovnb
mov
mov
cli
aaa
sub
out
adc
mov
aad
mov
mov
lahf
xor
xor
or
repnz
es
mov
mov
sti
test
pop
push
cltd
xchg
adc
mov
ds
aas
fcoml
in
sub
mov
not
sahf
mov
popf
xor
xlat
xchg
sub
bound
mov
int
js
rorl
call
add
daa
push
and
scas
cmp
dec
inc
push
in
out
test
and
mov
pushf
faddp
mov
mov
push
xlat
jo
xlat
das
cli
pop
jg,pn
scas
inc
outsl
movsb
stos
push
out
jecxz
ja
push
shlb
icebp
cmp
dec
sub
or
pop
push
xchg
dec
test
stos
cmp
icebp
int
movsl
out
jno
lods
jns
cmpsl
sbb
jnp
jnp
loop
jbe
push
push
jle
and
addr16
adc
pop
lret
mov
adc
aaa
mov
out
lods
pop
dec
in
sahf
rcr
scas
and
cltd
jns
fsubr
add
inc
push
pop
adc
fmull
gs
add
fidivs
mov
inc
adc
pusha
pop
out
xor
movsl
xlat
jno
jno
push
cmp
ficomps
fisubrl
xor
in
inc
pop
xchg
std
jmp
mov
add
cli
mov
dec
loop
nop
dec
popf
loopne
mov
mov
repz
mov
addr16
xchg
jmp
mov
adc
mov
cvtps2pd
lcall
push
pop
daa
mov
or
xchg
dec
jmp
dec
inc
cmp
test
push
and
mov
jnp
insb
mov
in
in
mov
out
cmp
mov
xor
jne
out
mov
xor
add
stos
mov
lds
leave
cmp
pop
jne
mov
mov
inc
out
cwtl
popf
test
pop
sbb
jo
adc
icebp
pop
jmp
fs
cltd
scas
push
sub
sub
popf
ljmp
mov
xchg
jecxz
imul
rcll
lcall
ja
inc
mov
mov
lret
sbb
inc
repz
push
cmp
cmp
icebp
sub
das
cmp
add
adc
cwtl
cmp
sarl
mov
or
scas
adc
push
xor
push
adc
lds
lret
lret
aas
mov
xor
cmp
pop
jb
mov
hlt
push
xchg
xor
xor
mov
call
lret
sahf
imul
ret
mov
cmc
addl
push
nop
add
outsl
adc
pop
bound
ljmp
sahf
sub
xor
in
sub
xchg
dec
test
sub
inc
xor
lods
inc
call
outsl
cmp
dec
rcrb
lods
xchg
popf
icebp
push
push
int3
jnp
bnd
fstl
pop
scas
or
xchg
cmc
cmpsl
mov
adc
movsl
jp
jge
sub
mov
leave
jo
les
in
mov
cmp
xchg
test
add
dec
sbb
adc
add
or
cmp
mov
sub
sbb
mov
adc
mov
je
movsl
dec
pop
xor
shl
ds
fisubs
push
push
call
icebp
sub
fistps
push
jecxz
jl
sub
mov
out
decb
ja
lds
repnz
cltd
fidivs
outsl
and
cld
or
mov
stc
test
dec
daa
xor
gs
and
cli
int3
xchg
adcb
jo
aaa
inc
dec
mov
jmp
mov
sarl
cmp
add
mov
in
jle
adc
sbb
xor
push
or
push
push
xchg
sahf
mov
mov
mov
sub
lcall
divl
mov
test
aad
dec
aad
jl
nop
sbb
mov
loop
movsl
adc
jp
outsl
xor
sbb
mov
sub
sahf
dec
fnstsw
push
jb
push
rcrl
adc
inc
shrl
movsl
sub
out
test
pop
out
pop
xor
test
cli
xor
scas
fs
fs
lods
push
out
adc
sub
inc
into
clc
mull
stc
inc
dec
test
std
jo
mov
test
call
xchg
in
cmpsl
iret
addr16
jbe
xor
mov
xchg
fldcw
std
nop
push
subb
mov
sbb
jle
push
xchg
jg
icebp
aam
adc
add
push
addl
xchg
seta
inc
add
arpl
push
sub
repnz
leave
sbb
pop
adcl
xchg
sub
stos
test
sbb
fstpt
loope
repnz
out
xlat
push
gs
mov
and
lahf
insl
sbb
adc
fldln2
xor
int3
fs
mov
add
je
lret
add
cli
leave
xchg
int
xchg
jns
push
movsb
cld
ja
sbb
jns
push
fwait
in
icebp
loopne
cltd
lods
or
shll
xor
xchg
repnz
jp
out
pushf
out
fwait
add
cmp
scas
fsubs
sbb
lret
mov
jno
cltd
add
fwait
iret
add
sbb
mov
shlb
movsl
nop
dec
dec
push
inc
and
sub
rcrl
xor
in
mov
lret
vpshad
test
jbe
jle
adc
mulb
jns
orb
and
lahf
leave
mov
mov
fstpl
cmp
jg
push
sarl
sub
or
jg
ror
sub
dec
cmp
fwait
pop
push
jbe
hlt
popf
pop
stc
jb
mov
jae
mov
roll
adc
pop
lret
sbb
ljmp
push
jge
mov
push
add
rclb
call
pop
add
leave
and
sbb
outsl
dec
pop
mov
pop
mov
js
movsl
cmp
bound
dec
fsubrl
mov
sbb
lea
stc
testl
std
insb
jns
cmp
jb
jae
pop
adc
ret
sbb
ds
xchg
xchg
add
and
sub
je
jae
cmp
mov
subb
loop
xor
xchg
int
jmp
fisttpll
cmp
pop
out
pop
sub
popa
es
push
add
fwait
xchg
xchg
imul
outsl
xchg
repnz
adcl
push
in
dec
xor
ret
sbb
std
sub
fsubr
scas
mov
movsb
repnz
sar
cmp
push
das
enter
test
push
cltd
xor
shrl
sti
dec
cmc
xchg
movsb
jo
add
sub
lcall
xor
jne
in
test
push
fwait
out
jnp
or
fwait
xchg
pop
clc
sbb
and
xchg
lods
xor
sbb
pop
cltd
sbb
mov
outsb
stos
inc
in
jge
adc
sub
cmp
in
cwtl
lds
cmpsb
call
mov
stos
pop
test
lret
xor
out
movsl
adc
cwtl
out
mov
push
add
out
or
icebp
mov
sbb
jne
outsl
mov
xor
push
xor
cmpsb
test
in
aaa
sub
lret
nop
loopne
jns
cmp
int3
push
nop
out
xor
and
xchg
dec
out
jbe
or
mov
aad
xchg
insb
or
jns
gs
pop
jbe
inc
sti
andb
out
mov
fimull
cmp
mov
lcall
divl
push
setl
iret
imul
sub
int
insl
nop
pop
fdivrs
hlt
out
sahf
adc
cmp
pop
scas
push
repnz
lock
inc
aad
clc
push
sarb
push
test
mov
cmp
movsb
dec
mov
and
lcall
dec
push
mov
push
cmpsl
sub
mov
scas
sti
aad
dec
sarb
push
jmp
test
aaa
popa
cmp
inc
std
jmp
add
insb
cmp
sti
xor
inc
inc
mov
add
xchg
fdivp
push
and
shl
jmp
sti
gs
push
sub
adc
mov
sub
pop
setae
sarl
mov
cmp
sbb
ds
push
iret
xchg
test
mov
paddsw
or
xor
fdivrl
add
jecxz
mov
push
jp
stos
scas
ss
gs
das
inc
repz
sbb
cld
dec
gs
push
push
inc
ret
dec
ss
std
jae
xor
lea
xchg
insb
pop
loopne
xchg
and
xchg
adc
aaa
adc
aad
js
fists
in
or
jp
and
pushf
rclb
enter
loope
or
mov
cmc
adc
out
or
fsubs
adc
dec
add
test
jae
push
ja
xor
inc
xchg
dec
adcl
loop
stos
add
or
xor
xor
mov
outsb
stos
or
aad
xchg
jae
addr16
and
fildl
cmc
add
xchg
lods
loopne
fbstp
fs
jae
jecxz
mov
add
dec
mov
mov
pop
sbb
push
aas
stc
loop
movsb
insb
stos
loope
jb
hlt
in
out
inc
xor
xchg
xor
xor
push
std
nop
dec
lods
sbb
sbb
xor
jbe
syscall
mov
je
outsl
xor
sbb
inc
mov
inc
repnz
insl
test
xorl
pop
lods
outsl
aam
ret
imul
or
cld
repnz
ss
jl
push
xor
push
jge
xor
add
dec
repnz
frstor
sbb
jle
mov
test
sbb
push
shrl
mov
dec
xchg
jmp
movd
push
cmp
fs
inc
fistps
jp
xor
lods
mov
in
push
cmp
imul
xor
sub
lds
gs
pushw
test
sub
adcb
fcmovbe
adc
lea
mov
adc
popf
xchg
pushf
lock
cmc
dec
ficompl
js
notl
push
sbb
testb
push
push
clc
mov
mov
bound
push
imul
in
inc
lret
or
adc
lea
xor
out
inc
repnz
jbe
sub
dec
xor
inc
sub
into
add
dec
out
mov
dec
cld
xchg
push
jns
add
adc
adc
popa
test
mov
push
lock
pop
or
sub
pop
cmc
mov
xchg
jbe
insl
enter
mov
lcall
fists
lret
pop
mov
div
dec
loope
xchg
xor
jl
clc
jne
pop
mov
mov
jecxz
call
mov
mov
stos
and
add
fwait
add
jp,pt
sub
shll
rcll
imul
lds
inc
mov
loope
xor
icebp
pop
sub
mov
sahf
out
mov
push
inc
pop
jns
dec
push
std
xor
enter
rcrl
inc
fstpl
pop
jge
inc
jmp
std
je
pop
outsl
and
xor
push
fisttpll
push
jo
xor
or
lods
pop
adc
mov
dec
sub
flds
ja
push
ds
cmp
or
mov
pop
xlat
sbb
push
stos
sbbl
sbb
in
add
test
sarl
sahf
hlt
xchg
ror
jne
mov
jbe
push
lahf
cli
movsl
push
pop
negb
scas
adc
out
stos
call
scas
scas
out
loope
cmp
incl
rsm
inc
lods
repnz
cmc
sbb
cmpsl
pop
xchg
mov
fcompl
pushf
sub
icebp
lret
adc
shrl
adc
jle
jecxz
cmp
add
mov
cmpsb
subb
shrb
nop
js
pop
loop
lcall
nop
dec
rclb
xchg
arpl
fldcw
lods
pop
or
insb
in
idivl
stos
aam
push
push
push
scas
xchg
jno
xor
outsb
adc
fs
inc
test
ret
push
ljmp
je
loopne
xor
adc
int
xchg
leave
mov
test
inc
xchg
cmp
ficoml
add
mov
mov
or
pop
inc
mov
das
mov
xor
mov
sbb
ret
push
addr16
sahf
jp
sbb
in
pop
jb
jo
push
pop
fsts
adc
adc
aas
int
movsl
push
mov
mov
mov
pop
clc
push
in
jl
addb
xchg
adc
cwtl
cmpsl
nop
ljmp
nop
xchg
or
lods
int3
cmpsl
lret
iret
lret
mov
das
dec
push
lret
sarl
xlat
fs
dec
fsubs
std
inc
xchg
mov
push
inc
xor
leave
adc
push
sti
fcmovnb
fs
hlt
sbb
push
sbb
rclb
sub
sub
arpl
mov
scas
fimuls
sar
test
mov
lret
push
out
cmp
loope
in
aad
popf
push
push
pop
or
jbe
sub
or
xor
push
push
fidivrl
cli
jb
xchg
jnp
jecxz
sub
push
sub
pop
push
mov
scas
pop
add
shlb
push
adc
mov
sbb
xor
fimull
xor
rclb
data16
dec
xchg
add
adc
cmp
lods
movsb
push
addl
adcb
out
sbb
lcall
mov
repz
xchg
push
ds
inc
inc
push
in
mov
add
sbb
jg
aad
shr
nop
mov
outsb
push
shl
jno
pop
pusha
push
clc
push
add
inc
push
sbb
fwait
cmp
enter
not
fcom
mov
ljmp
xor
test
sbb
mov
jb
adc
pop
push
adc
xchg
inc
push
sbb
dec
mov
cmp
in
ret
bnd
mov
fcoml
inc
inc
add
and
or
stc
dec
sbb
adc
lahf
es
aas
push
ret
mov
xor
mov
inc
mov
or
fwait
leave
xchg
xchg
daa
cli
out
jge
sbb
inc
lret
inc
cld
dec
adc
sti
inc
pop
fistpll
jae
add
cmp
pop
pop
jae
cmpsl
daa
rorb
aam
jmp
push
movsl
push
push
out
xchg
fcoml
out
jne
cmp
std
pop
xchg
fs
mov
imul
subb
cmp
jmp
aad
sub
rcrl
add
mov
insb
sub
mov
out
xor
imul
es
cld
pop
and
int3
frstor
stc
mov
ror
jno
dec
call
incb
dec
sbb
fistpll
repz
mov
lods
sti
jle
cmp
adc
insb
lods
cmp
decb
push
sbb
fnstcw
or
mov
inc
cld
mov
dec
lds
cltd
push
out
sub
mov
mov
mov
pushf
dec
nop
clc
sahf
and
xchg
add
or
or
jl
push
icebp
inc
sti
sub
inc
inc
test
idivl
cmpsl
jp
test
xor
jmp
xlat
add
inc
rcll
pop
mov
or
mov
add
mov
out
inc
enter
out
xor
or
divl
cltd
inc
jbe
sbb
iret
aad
xchg
das
cmp
in
xchg
rcll
imul
cmp
insl
jbe
mov
sbb
and
mov
jno
scas
jno
movsl
xorb
js
and
sbb
popf
inc
jae
out
xor
xor
cmp
and
jo
test
mov
loope
cmpsl
inc
clc
jne
mov
movsl
mov
mov
cld
sub
xchg
push
lods
ds
jl
call
scas
sbb
or
cwtl
rcrb
sub
push
and
xor
pop
fstpl
out
ljmp
jns
and
lods
out
je
cmpsl
pop
pushf
push
mov
inc
stc
inc
add
fsubrs
fwait
mov
cmp
aad
jmp
lret
in
cld
pop
test
jo
xchg
subb
ret
xor
and
rcrl
fs
jp
and
int3
aad
mov
mov
outsl
and
dec
and
pop
and
sbb
push
rcr
mov
jns
pop
cs
outsl
lcall
adc
pusha
inc
pop
call
mov
cld
sub
pop
pop
test
add
sub
xlat
fidivrl
push
rcr
repnz
scas
fsts
insb
mov
jmp
and
insb
iret
xchg
out
xorb
sbb
sub
test
adcb
loop
mov
adc
pop
pop
loopne
adc
notb
mov
aaa
js
ret
add
or
sub
jnp
inc
call
nop
xchg
popa
pop
dec
dec
hlt
test
bnd
nop
jp
int3
scas
push
and
sub
jo
por
stc
mov
out
loopne
pop
popa
push
scas
jge
lret
pop
movsb
mov
pop
xor
jae
or
push
jns
push
sub
movsb
push
xor
mov
mov
popa
or
stos
hlt
decb
push
jns
sub
lea
push
lcall
enter
test
icebp
push
mov
inc
add
cli
push
bound
lock
orl
jbe
blsfill
incb
nop
test
icebp
aas
mov
inc
xchg
jmp
daa
shl
std
loop
jnp
inc
xlat
lahf
sahf
xor
and
hlt
pop
scas
push
xchg
pop
lods
inc
sub
hlt
adc
rcrl
clc
mov
out
int3
fsubl
xor
xchg
and
movsb
sbb
pop
lods
push
stos
jne
push
lret
fdivrl
jno
pop
push
mov
scas
imul
std
push
xchg
xor
mov
int
mov
pop
adc
cs
lock
xchg
ret
mov
cmp
in
jmp
push
sub
mov
dec
je
fnstsw
fcmovb
roll
out
adc
xchg
jbe
test
test
adc
gs
out
xor
cmp
fiadds
push
pop
sub
and
add
adc
mov
pusha
add
imul
out
int3
and
fs
sbb
adc
cmpb
lret
sbb
shlb
mov
sti
mov
idivl
shrb
xor
mov
jle
and
xor
pop
push
jp
jmp
cli
add
mov
inc
scas
sbb
movsl
lahf
es
add
cmpsb
daa
add
test
pop
cs
mov
repnz
ds
mov
cmp
xchg
jb
mov
adc
inc
mov
sahf
xchg
pop
jmp
fwait
push
pop
sub
push
push
adc
dec
push
dec
sbbl
dec
in
adc
and
mov
dec
aad
cmp
pop
push
xor
dec
int3
in
cltd
movsb
ljmp
lock
xor
jae
insb
out
dec
data16
push
sbb
roll
jmp
mov
or
lock
popf
lret
stos
mov
push
xor
aam
cld
pop
cltd
push
mov
sbb
xchg
rolb
and
mov
in
dec
psubusw
pop
dec
inc
mov
loop
inc
arpl
fiadds
xchg
sarb
jg
add
jge
jg
pop
je
inc
fwait
mov
fs
pop
or
xchg
xor
stc
loopne
sbb
js
ljmp
addr16
xchg
mov
lcall
out
fnstenv
cltd
sbb
fcoms
push
loope
or
les
test
mov
aaa
pop
daa
es
mov
pop
imul
or
sub
dec
xor
int
mov
sbb
pop
in
in
push
and
cmp
pop
or
imul
cld
sbb
aam
mov
es
xchg
mov
xchg
mov
sub
jbe
test
stc
xchg
push
test
adc
lock
mov
xor
lods
cld
in
cmpsb
lods
xor
nop
sbb
and
addr16
jmp
sub
insb
add
cmpsb
push
xchg
outsb
mov
cmpl
cmp
mov
leave
mov
gs
mov
cmp
xchg
data16
ret
cmp
je
js
cmp
test
jne
push
mov
jae
testb
jnp
js
jl
dec
mov
insl
sub
mov
xlat
adc
push
repz
aad
lods
jl
xor
loop
adc
je
add
mov
frstor
push
mov
cs
xchg
push
rcrl
sbb
loopne
pop
sbb
mov
das
and
in
push
sbb
mov
loop
shll
cmp
pop
outsb
lock
push
pushf
mov
roll
jl
jp
ss
jp
xor
in
xchg
sub
pusha
xchg
mov
dec
jne
out
sti
pop
sbb
inc
jbe
mov
adc
adc
sub
or
xor
pushf
imul
gs
or
out
bound
inc
push
jne
xchg
imul
or
notl
adc
mov
adc
and
idivl
lods
shlb
repz
call
mov
fadds
mov
fidivl
daa
outsb
test
hlt
shl
xor
dec
mov
scas
imul
mov
sub
adc
mov
jp,pt
jp
rcrl
aam
adc
xor
or
sbb
inc
or
movsb
pop
and
arpl
adc
cmp
sti
rorb
clc
jns
aas
iret
push
lea
stc
mov
int3
jae
sahf
jns
ret
lcall
jp
pushf
mov
sarl
stc
jo
andb
repnz
xor
add
hlt
clc
jecxz
outsb
aad
sub
dec
js
mov
mov
add
lcall
jp
sub
jmp
adc
int
mov
scas
mov
in
lds
pop
jle
imulb
dec
adc
sub
in
jno
orb
push
test
inc
lods
stos
cmp
or
imul
jge
or
pop
pop
sub
adc
in
and
clc
leave
nop
movsl
inc
add
test
or
lds
dec
and
jnp
out
mull
jl
in
cmc
leave
or
aad
cmpsb
xor
test
cli
mov
inc
out
dec
sbbl
mov
mov
xchg
and
insl
in
ficoml
test
mov
mov
jp
fcmovbe
mov
add
pop
arpl
dec
fsts
inc
dec
test
xor
inc
idiv
push
mov
sbb
dec
xchg
push
add
xor
add
jmp
ret
cmpsb
xchg
popa
inc
mov
sub
or
sbb
movsb
cmp
js
adc
dec
cld
loope
push
lret
sub
jne
cmpsb
sub
xchg
xor
pop
adc
stc
pushf
mov
add
mov
shrl
and
cmpsb
fbld
fs
sub
ror
push
scas
dec
adc
ret
sub
stos
mov
mov
mov
fadd
data16
add
nop
stc
inc
pushf
pop
sub
out
mov
fwait
gs
xor
mov
mov
mov
xchg
or
xor
jge
pop
mov
fistps
outsb
push
and
orl
dec
outsb
sub
xchg
xchg
sbb
inc
fistpll
movsl
push
fsubr
lret
dec
pop
jnp
sub
push
sbb
adc
push
lcall
fnstenv
xor
les
fsubrs
cmp
and
pop
les
out
mov
call
mov
loop
mov
incl
loopne
cmp
adc
out
das
cmpsl
push
sti
repnz
push
jmp
mov
popf
mov
mov
add
jecxz
xlat
pop
lds
cmp
or
hlt
push
jge
push
jp
hlt
daa
xor
shlb
jge
inc
mov
popa
sbb
inc
push
mov
movsl
sub
mov
sub
ja
popf
nop
inc
or
lock
lea
or
sub
lret
push
inc
test
popf
scas
stos
xchg
xchg
imul
xor
adc
sbb
push
adc
bound
jnp
add
lcall
mov
hlt
movsl
icebp
bswap
stos
stos
or
fldt
mov
and
pop
pop
fistps
hlt
shll
dec
mov
daa
or
into
pop
xor
std
div
pop
fcmovne
idiv
ja
pop
dec
push
enter
or
pop
cmpsl
iret
ss
xchg
in
cli
lods
xor
xchg
hlt
fisubrl
mov
scas
decb
mov
popa
jg
movhps
repz
ffreep
mov
clc
inc
testl
pop
cmc
aaa
hlt
fmull
cwtl
rol
jno
iret
push
inc
in
mov
outsb
xor
test
cmpsb
xchg
or
mov
mov
imul
orb
adc
push
jbe
test
cmc
sub
xchg
mov
add
fidivrs
sub
push
bound
mov
aam
cltd
xchg
fucomip
adc
shlb
adc
fsub
jnp
nop
aas
push
sub
fwait
rcl
mov
movsb
rcrb
out
push
out
cwtl
dec
push
sbb
sbb
inc
aad
es
cld
push
test
insl
mov
out
ja
into
sub
leave
sub
stos
mov
test
loope
nop
add
in
mov
jnp
lds
in
push
sbb
mov
or
ja
adc
stc
inc
push
sarl
push
mov
das
xor
neg
push
lock
cmp
sti
imul
xchg
or
push
sub
popa
jae
xchg
xchg
idivb
test
mov
or
wbinvd
sti
movsl
shl
mov
addr16
xchg
jmp
lret
shlb
dec
lock
fs
push
call
jmp
add
sbb
sub
push
shl
ss
ljmp
xor
pop
je
ret
jecxz
pop
or
sbb
iret
imulb
mov
mov
cmp
test
mov
push
sbbl
fsubr
mov
lahf
dec
sub
mov
mov
ljmp
jns
out
xchg
iret
or
push
mov
test
scas
mov
dec
xorb
sbb
mov
std
jne
ss
jnp
lock
mov
cli
mov
cmovl
push
pusha
shl
jmp
bound
adc
jno
jno
sbb
mov
adc
lods
sti
leave
adcb
pop
repz
dec
xchg
mov
movsb
in
push
adc
or
add
jne
or
imul
jae
imul
pushf
aaa
pop
pop
lock
fbstp
arpl
and
lret
repz
movsb
xchg
add
mov
ss
push
shlb
push
sub
mov
sbb
fs
rorl
sbb
movsl
mov
jge
loope
movnti
sbb
not
push
push
cmpsb
mov
jnp
jge
fcoml
adc
push
bound
xchg
rol
lret
add
sbb
pushf
pop
mov
loopne
ljmp
add
lock
inc
adc
sbb
sub
loop
sti
loop
push
cmp
outsl
icebp
mov
pushl
das
fwait
and
pshufw
sub
xorl
stos
ds
mov
cmc
ret
in
xchg
enter
lcall
jo
js
xor
push
repz
scas
cli
jmp
jne
sub
push
ja
sbb
sbb
daa
rorl
loope
daa
adc
test
mov
cmp
sarl
lret
hlt
fdivl
add
jmp
scas
outsl
dec
inc
or
add
sbb
ja
outsb
jl
mov
dec
cmc
lock
mov
movsb
push
aam
loop
outsb
loop
sbb
dec
push
lea
out
fneni(8087
pop
jne
fnstcw
jecxz
add
shll
mov
gs
mov
push
pop
fisubrs
push
roll
xchg
mov
fmul
sbb
cmpsb
adc
movsb
or
loope
and
movsb
std
sub
xchg
adc
aad
ficoms
testb
inc
push
pusha
and
cs
push
mov
xor
mov
mov
icebp
idivb
lret
mov
movsb
fldt
xor
xlat
popl
push
add
sub
mov
icebp
mov
int3
adc
mov
imul
int3
jg
cli
xor
push
mov
cmp
xchg
divb
mov
add
call
loope
out
aad
mov
loope
jne
dec
aam
dec
aaa
and
adc
pop
mov
lea
cmc
xchg
push
imul
add
lods
push
subb
imul
and
mov
push
lods
pop
cmove
mov
inc
test
sub
data16
add
cmpl
xchg
mov
imul
fcomps
cmpb
outsl
add
scas
test
in
jne
in
sub
lods
push
or
mov
lods
push
add
in
imul
cmp
cmp
andb
mov
fwait
push
test
or
push
mov
pop
push
lea
fiadds
pop
xorb
movsl
sbb
and
and
insb
jo
sbb
in
mov
dec
mov
mov
loopne
xor
dec
das
jb
inc
adcl
mulb
js
push
je
call
cmp
repnz
decb
in
xchg
push
movsb
xchg
cs
lahf
jge
mov
sub
leave
lahf
sahf
lcall
xchg
loop
sub
int
testb
mov
stos
mov
sahf
jbe
push
mov
in
or
and
xor
sub
adc
fndisi(8087
and
xchg
and
ja
push
jl
dec
jle
in
cld
leave
js
jg
add
lahf
inc
mov
inc
cmp
notl
cmpsb
xchg
xchg
jle
out
dec
push
mov
or
jecxz
decb
add
lods
cmpsl
pop
loopne
sub
or
icebp
pop
ficoml
loop
insb
stc
movnti
pop
dec
xor
add
cltd
pop
ficomps
add
pushf
dec
cwtl
sbb
jle
jle
dec
cmp
out
leave
xchg
and
xchg
mov
mov
mov
add
or
pop
push
in
bound
cltd
popa
sub
addr16
mov
mov
popa
inc
push
test
push
call
call
mov
mov
inc
xlat
aaa
sarl
fistpll
pop
add
cmpl
push
cmp
cld
sbb
jmp
sarl
jge
stc
adc
xchg
gs
xor
icebp
out
inc
push
loop
mov
add
cs
leave
push
pop
adc
adc
dec
mov
test
sub
inc
lahf
shlb
lahf
lds
mov
es
int3
push
lret
adc
int3
pop
and
cmp
icebp
test
insl
ljmp
mov
pop
and
int3
pop
jecxz
leave
and
inc
data16
pop
nop
ss
fnstsw
fidivl
cmp
sub
adc
add
jbe
sbb
adc
leave
pop
jb
jmp
adc
mov
adc
sub
cmpsb
cmp
iret
jp
inc
lret
push
jnp
mov
mov
adc
or
aam
aaa
push
ja
sub
push
inc
fxam
xlat
pusha
xchg
arpl
rcll
out
inc
mov
jl
aam
in
daa
bsr
rclb
pop
and
out
push
xchg
out
mov
daa
or
jnp
dec
dec
lods
neg
pop
xchg
test
repz
lcall
cmp
mov
or
push
push
cmp
in
scas
cmp
shrl
pushl
js
xchg
stc
shr
xor
sub
xor
addr16
and
push
into
pop
lods
xchg
daa
scas
add
ret
cmpsb
aaa
imul
frstor
ret
mov
test
clc
cmp
jno
cmp
sub
call
xor
out
mov
loope
dec
lcall
daa
cmc
pushf
pop
or
inc
cmc
inc
mov
adc
jmp
xchg
add
into
sahf
bound
jg
jle
xor
mov
ds
sub
aam
loop
or
loop
mov
mov
pop
push
and
add
ja
lods
out
xor
sub
gs
sub
pop
out
ret
cmpsl
mov
mov
jp
aas
ret
mov
cmpsl
aam
ja
aaa
std
pop
jge
mov
lret
outsl
imul
add
mov
adc
mov
xlat
sbb
jno
adc
cmp
scas
adc
sub
pop
xor
nop
mov
cltd
shll
addr16
imul
scas
test
in
dec
or
test
xchg
stos
outsb
stos
popa
das
sahf
jge
mov
inc
je
push
jl
inc
mov
js
xchg
jmp
loopne
or
lcall
into
push
sbb
and
loop
into
cmp
pushf
cmpsb
adc
xchg
xchg
xchg
sbb
sbb
push
and
inc
pushf
iret
rcl
pop
add
shlb
jmp
js
sub
rclb
and
dec
loope
rclb
mov
mov
push
call
pushf
out
test
xor
and
outsb
xor
mov
aam
push
fs
push
stos
jmp
sub
or
xor
and
das
sub
ljmp
add
js
mov
pop
js
xchg
xor
push
xor
jo
andb
mov
inc
cmp
xchg
mov
sahf
cs
nop
sub
stc
out
mov
rclb
mov
pop
adcb
mov
xor
repz
sbb
pushf
pusha
or
sti
fcompl
call
repz
cmp
jge
xor
loop
mov
xor
pop
jecxz
xor
jmp
mov
sub
mov
push
cwtl
jg
jmp
or
xor
inc
insb
mov
push
hlt
loope
push
xor
rorl
inc
lock
scas
push
pop
hlt
dec
insl
mov
aas
leave
push
fisubrs
push
jp
movsl
xor
sbb
in
mov
repnz
lods
test
arpl
mov
shlb
push
stc
xor
xchg
jg
inc
popf
ret
pushf
mov
mov
mov
insb
xor
dec
mov
lret
sbb
loope
pop
push
mov
jl
lods
xchg
stos
xchg
xchg
jle
xlat
mov
lahf
mov
mov
xchg
outsl
stc
test
shr
and
or
and
lock
adc
sbb
je
push
pop
call
mov
insb
rclb
dec
jge
jne
pop
adcl
aam
cwtl
add
and
pop
addb
xor
sarb
and
xchg
inc
adc
in
adc
xor
es
xchg
xchg
inc
sub
and
ret
arpl
sub
adc
jb
push
fs
icebp
adc
std
out
ljmp
cltd
popa
jmp
dec
insb
dec
ss
lock
mov
notb
cmp
push
ret
and
gs
ds
sbb
in
push
imul
lcall
jle
add
sbb
cmp
incb
or
xchg
std
mov
xchg
movsl
add
lods
push
sbb
nop
pop
mov
in
sbb
cltd
ret
push
push
jl
jb
sub
mov
cmpsl
movsb
and
js
scas
cwtl
andb
jge
sbb
pop
inc
xor
repz
mov
jnp
lds
xchg
in
cmpsl
sbb
imul
dec
jo
pop
mov
pop
stc
iret
orl
int3
or
mov
les
and
jb
out
arpl
push
shl
orb
pushf
mov
imul
scas
jns
mov
lods
ds
cwtl
imul
mov
dec
loope
ret
je,pn
call
add
les
dec
jbe
and
push
popa
pop
mov
push
gs
sarb
addr16
jae
aam
js
data16
xor
enter
fcompl
mov
mov
sbb
fwait
loopne
addl
push
sbb
push
lods
mov
inc
dec
push
insl
adc
mov
jl
jg
pop
mov
and
dec
cmp
sub
push
call
dec
daa
adc
adc
push
insb
lcall
or
not
call
imul
jmp
iret
lret
enter
fdiv
add
out
lods
cwtl
les
fmul
mov
ss
clc
out
add
push
or
ja
mov
leave
ret
or
test
adc
pop
je
xchg
push
push
pop
mov
push
jnp
mov
mov
mov
sub
test
and
gs
mov
jno
in
pop
and
int3
stos
inc
dec
mov
out
add
ret
lret
clc
jb
inc
push
ror
lahf
testl
jge
jne
je
inc
adc
jbe
mulb
xchg
mov
and
shll
adc
repnz
popl
clc
enter
jnp
mov
outsl
or
sub
call
aas
cs
cmpsb
call
aaa
in
xor
pop
or
movl
mulb
stos
icebp
mov
or
mov
push
pusha
icebp
pop
pop
lods
daa
aas
je
mov
lods
pop
mov
leave
sbb
cmp
push
xchg
out
pop
mov
testb
fidivrl
mov
inc
jge
pop
push
sbb
leave
cmpsb
cmpsb
in
jle
add
cmp
xchg
sbb
mov
and
loopne
mov
add
adc
addr16
mov
dec
jb
adc
cmc
mov
in
bound
pop
clc
stos
imul
or
adc
sbb
dec
lock
pop
and
inc
push
cmp
aad
add
cmp
lods
push
roll
imul
jg
add
pop
sub
orb
int3
mov
adc
lret
cmp
cmp
mov
xchg
xor
jne
ficoml
and
into
rclb
or
mov
jno
and
dec
lret
mov
int
sti
rolb
lea
cltd
push
jecxz
xor
outsl
add
aam
sbb
or
in
pop
xor
sbb
inc
mov
dec
push
test
push
repz
jmp
adc
inc
mov
fists
insl
adc
jecxz
pop
pop
xor
test
in
mov
ret
cmp
outsb
inc
fwait
adc
sbb
and
and
gs
xchg
add
lret
arpl
loop
jecxz
xchg
rol
lahf
fbstp
hlt
xchg
shlb
test
xchg
mov
scas
mov
xorl
cmp
xchg
push
xlat
xor
or
rorb
pusha
pop
mov
stc
jle
cmc
add
lcall
test
dec
or
lods
pop
push
xchg
jne
xorl
lret
jo
sbb
push
mov
mov
pusha
repz
fcmove
lret
lcall
xchg
adc
adc
jle
adc
push
pop
scas
jb
sub
adc
mov
imul
mov
int3
addb
cld
push
test
mov
imul
jnp
sar
lahf
adc
in
xor
adc
jl
in
clc
in
daa
aas
data16
inc
hlt
push
test
in
stc
sub
imul
scas
outsl
jne
test
and
push
jno
sub
inc
daa
iret
pop
push
pop
mov
jg
sti
sahf
flds
cmp
cltd
push
jge
jl
divb
test
popa
sarb
xchg
mov
fldcw
or
ret
aaa
daa
mov
cmp
xchg
das
xchg
and
pop
cmp
out
jns
sub
xchg
jae
push
shr
xchg
cmp
xchg
fstpl
daa
mov
lds
mov
xor
mov
orb
movsb
mov
test
movsb
sbb
pop
nop
xor
in
xor
notl
jns
mov
pop
mov
jmp
cmp
mov
loope
mov
lcall
cltd
pop
and
outsl
les
test
push
in
loop
jbe
mov
clc
jno
call
jecxz
addr16
jns
jae
movsb
xchg
int3
test
mov
push
ret
out
xchg
outsl
repnz
and
in
pop
sub
fcomps
pop
cltd
movsb
aad
push
cmpsl
fnstcw
insb
ficompl
mov
ffreep
ds
cmp
sub
lock
outsb
paddsw
rcrl
inc
cmp
fdiv
pop
shrl
in
call
into
lahf
in
mov
pushf
aad
ja
pop
cmp
loop
dec
inc
jp
test
insb
add
sub
add
mov
mov
movsl
pop
call
inc
outsb
cld
outsb
out
dec
stc
sub
dec
fadd
ja
mov
addb
popa
stc
data16
stos
mov
and
iret
rcr
loope
sbb
inc
out
sar
div
mov
enter
pop
imul
arpl
addr16
in
add
test
orl
sarl
adc
into
mov
movsl
imul
inc
fcmovbe
idivb
mov
pop
push
sbb
stc
clc
or
add
lds
mov
adc
daa
lds
lahf
pop
mov
inc
insl
mov
out
es
popf
leave
sub
ficomps
js
sub
cwtl
movsl
xor
mov
test
pop
adc
fidivrl
xor
sub
push
mov
sub
test
add
and
test
hlt
jle
inc
or
jbe
jl
jo
xor
ljmp
imul
push
dec
iret
pop
mov
mov
add
mov
iret
pushf
adc
test
xlat
mov
pop
fidivrs
jne
lds
xor
add
and
icebp
xchg
shll
mov
pop
pusha
jo
inc
repnz
notb
xor
push
mov
adc
xchg
xor
fdivl
loop
xor
mov
sub
cmpsb
cmp
dec
in
fcom
ret
out
ljmp
mov
jnp
push
adc
sbb
adc
xchg
adc
cmp
dec
mov
imul
sarl
clc
or
xchg
mov
xchg
sub
cmpsb
in
cmovne
inc
pushf
add
jg
and
rcll
and
and
cwtl
sti
icebp
xchg
aad
mov
inc
and
jb
jmp
sub
adc
arpl
xor
sub
mov
jne
or
fimuls
sbb
pop
mov
add
and
push
and
pop
fbld
jbe
push
xor
and
insb
mov
out
dec
add
cld
stos
popf
repnz
repz
jno
mov
adc
aaa
lods
ret
adc
mov
xor
js
xor
jle
hlt
lds
inc
mov
repnz
out
enter
inc
or
add
outsl
scas
data16
or
inc
dec
mov
int3
push
fsubs
lds
loopne
ficomps
xchg
push
inc
adc
fucomp
stos
or
js
xlat
mov
in
les
test
in
sbb
dec
data16
lret
push
mov
orl
mov
mov
inc
inc
iret
lds
pop
mov
sbb
int
ds
dec
cmpsb
lods
add
cli
sub
jmp
clc
inc
lret
loop
test
push
pop
shl
dec
in
push
rorl
mov
inc
and
adc
repnz
sub
mov
xor
mov
shlb
lret
js
enter
out
cltd
xchg
sbb
mov
fimull
mov
add
add
mov
arpl
and
jp
jno
jno
outsl
out
test
leave
mov
xlat
mov
maxps
lds
dec
aad
adc
aas
inc
les
es
fs
in
jo
imul
pop
lret
push
pusha
jae
sbb
jne
push
cli
sbb
push
in
ret
jb
cmpsl
in
mov
inc
mov
out
and
loope
pop
mov
cmpsl
dec
adc
popa
stos
pop
jge
loopne
and
xchg
cltd
jle
test
add
cld
int3
or
repz
sbbl
xor
lret
outsl
popa
mov
and
fiaddl
jle
xlat
xor
test
or
loope
push
or
and
add
inc
repz
ds
sbb
xchg
push
std
and
fldcw
ja
pop
lods
inc
inc
js
idivl
jg
ljmp
adc
push
dec
pop
xchg
adcl
or
mov
jecxz
fs
mov
pushf
or
push
jno
or
adc
lcall
out
arpl
cld
lret
push
cmp
test
jae
ret
sub
xchg
out
sub
clc
inc
inc
xor
dec
inc
hlt
shll
mov
sub
mov
fmuls
stos
jnp
stos
mov
fs
add
dec
test
int3
test
out
add
and
jecxz
inc
loope
jmp
push
comiss
ja
aam
popf
push
scas
push
mov
mov
mov
mov
ljmp
loope
adc
lods
add
xor
outsl
cs
add
mov
and
xor
pusha
inc
sub
jb
xlat
xor
lock
mov
pop
pop
add
leave
mov
leave
jb
cmc
lahf
push
add
sbb
lcall
add
pop
and
aaa
sub
pop
xor
cmc
and
or
mov
add
cmpsb
pop
test
jbe
mov
int3
pop
pop
and
fcmovnbe
mov
push
fwait
xchg
arpl
shll
arpl
das
push
movsb
pop
sarb
cmp
sub
mov
sbb
push
add
rcrl
push
mov
fwait
sub
jge
in
insl
icebp
dec
stc
ja
cmpsb
mov
dec
xchg
int3
cmp
test
mov
xorl
in
push
mov
in
add
roll
ret
add
inc
mov
sub
cmp
cmpb
mov
sub
nop
test
and
fdivrs
cwtl
inc
leave
xchg
cmp
clc
incl
das
std
loopne
pop
xlat
mov
cmp
lret
jg
nop
push
pop
and
les
test
shll
fisubl
nop
pop
xor
or
or
and
add
mov
inc
fdiv
icebp
pop
pop
adc
or
mov
js
ret
fsubrs
int3
lods
aaa
add
xchg
loope
pop
mov
push
dec
sahf
push
and
mov
scas
addl
clc
loopne
stos
dec
mov
sti
stos
lret
frstor
cmp
pop
mov
or
insl
cmp
in
and
cmpsb
leave
push
lea
jo
dec
sbb
adc
or
mov
xchg
xor
and
out
mov
loop
mov
aam
insb
jae
sbb
or
jecxz
dec
adc
and
int3
dec
cmp
mov
or
inc
add
repnz
mov
sub
inc
outsl
aas
mov
arpl
mov
outsl
xor
loope
inc
hlt
jg
xor
lret
jle
xchg
test
lds
mov
out
lods
xor
arpl
orb
sub
inc
push
out
int
cwtl
outsl
jg
popa
dec
mov
dec
and
add
xchg
daa
pop
jg
cmp
add
mov
into
mov
pop
ud2
cmp
lods
and
adc
inc
push
mov
repnz
push
jl
sub
sbb
dec
mov
inc
dec
std
mov
and
js
xchg
stos
fwait
sub
fisttps
mov
push
pusha
cmp
lods
adc
mov
or
call
and
andb
outsl
adc
testl
cld
cmp
inc
loop
aaa
dec
pop
stos
sub
mov
lods
fbstp
jge
rcl
iret
stc
adc
shll
int3
cli
xchg
shl
into
dec
pop
outsl
and
jne
fldcw
mov
fwait
ja
and
jmp
fiaddl
fsubrp
adc
dec
mov
xlat
arpl
mov
divl
imul
shlb
int
and
movsl
or
xchg
mov
loopne
ljmp
aad
fs
sub
and
stos
mov
cmc
sbb
cmpsl
mov
test
push
mov
in
mov
lods
pop
inc
cmpsb
inc
inc
rcll
dec
push
jle
addr16
lcall
cs
mov
or
aam
out
jl
cmp
or
imul
popa
mov
xchg
dec
xor
dec
add
xor
mov
sub
push
loop
fisubl
adc
les
jle
fsub
ja
mov
movsb
jl
mov
pop
ret
fadd
repnz
aas
test
sarb
int3
clc
cli
loope
xor
ss
leave
pop
jge
fsubl
pop
lea
sub
stos
mov
push
cmp
mov
xchg
push
mov
cmpsb
scas
fwait
xchg
push
push
in
mov
cmp
out
test
sub
lods
dec
pop
out
imul
lods
scas
xchg
in
fdivl
and
repz
and
or
adc
idivl
pop
outsl
inc
call
es
inc
pop
xor
imul
icebp
or
sar
mov
loope
decl
mov
dec
push
js
ffreep
jns
out
test
pop
int3
outsl
inc
sbb
add
bound
push
push
lret
mov
lahf
cmc
jb
sbb
into
and
mov
fwait
dec
jns
or
mov
push
or
ret
push
mov
cmp
fdivs
imul
inc
aas
and
mov
shll
and
ss
jno
nop
mov
js
enter
cs
adc
cmpl
mov
lcall
and
and
xlat
cmc
dec
ja
fimuls
sub
stos
mov
push
mov
add
cmc
loope
int
cmp
sbb
test
pop
jecxz
out
mov
jo
repz
mov
xchg
push
inc
and
decl
incb
pop
add
sbb
je
repnz
xor
adcb
jmp
and
mov
pop
in
arpl
mov
es
jne
xlat
mov
movb
jmp
fcomps
push
cmpsl
mov
lds
lret
sbb
mov
lcall
scas
in
inc
int3
pusha
jecxz
pop
add
test
imul
cld
inc
insl
pop
shll
fnstcw
pop
jo
jg
or
push
lret
and
inc
cmp
dec
xchg
movsb
sub
or
dec
mov
push
or
pop
jno
cmpsl
adc
frstor
pop
js
add
jmp
aas
repnz
adcb
xor
fisttps
ljmp
loope
insb
inc
aam
dec
dec
add
add
aaa
push
cwtl
adc
into
andb
dec
push
xchg
movsl
js
dec
lock
jge
cltd
or
mov
cmp
int3
or
cmc
mov
cmp
pop
repnz
cmpsl
je
inc
inc
sarb
fs
sbb
ss
pop
cs
icebp
push
mov
inc
sbb
cmp
outsb
inc
push
insb
inc
loopne
lret
subl
lock
sbb
jo
fidivs
jbe
xor
xchg
inc
pop
mov
fdivrl
pop
push
sahf
adc
push
out
dec
add
das
lahf
hlt
in
cmp
scas
push
outsb
pusha
int3
mov
mov
xchg
aas
mov
add
dec
sbbl
xor
mov
xlat
xchg
jns
add
push
mov
inc
xlat
jle
fs
mov
xchg
inc
xor
icebp
xor
out
popa
mov
xor
mov
pop
js
cs
js
inc
dec
push
cmp
fs
mov
shr
pushf
xor
movsb
xor
push
cltd
mov
sub
orb
out
sub
out
out
negl
fcom
fists
sbb
cltd
lcall
dec
scas
or
pushf
dec
hlt
cmp
push
mov
fcomps
xchg
cwtl
or
jbe
xor
lea
jmp
clc
push
inc
sbb
cmp
das
inc
push
mov
xchg
cmp
sub
test
jae
movsl
in
icebp
sbb
pop
leave
in
int
xchg
add
fmuls
rcrb
imul
inc
rcrb
mov
or
add
mov
adc
cmp
ret
inc
pusha
adc
sub
pop
dec
int3
mov
adc
or
mov
insl
leave
gs
in
lds
xor
or
insb
repnz
lds
xchg
cmc
cmp
cs
cld
sub
sub
dec
mov
pop
add
fcomi
daa
pushl
xchg
push
int3
inc
iret
shlb
pop
push
andb
ret
xchg
jo
icebp
pop
sub
sub
mov
scas
notb
jno
shlb
sub
leave
push
mov
push
add
jnp
inc
push
dec
nop
lods
mov
xor
sbb
cmp
cmp
cmp
jnp
xor
xchg
sub
add
stos
xchg
pop
mov
rol
lea
ds
adc
xlat
adc
mov
into
mov
pop
mov
cmpsb
ja
xor
lds
push
xor
in
icebp
push
xor
subb
loopne
sbb
push
lods
pop
adc
leave
push
xchg
sbb
sahf
or
xchg
xor
xor
sub
xchg
jl
out
and
inc
pushf
arpl
dec
pop
repnz
jnp
testb
imul
std
lock
jmp
mov
stos
push
push
mov
dec
int3
in
and
loop
aam
mov
enter
outsl
subl
jge
fnstsw
xlat
push
int
push
xchg
addr16
xor
xchg
scas
out
cmp
xor
hlt
push
mov
pop
adc
mov
cmc
jbe
or
adc
or
pushf
outsl
les
mov
sbb
push
and
fstpt
in
xor
sub
xchg
add
xchg
xor
mov
push
out
mov
jb
cs
cmp
popa
lahf
dec
push
ret
mov
movsb
mov
out
psrad
push
inc
rcr
sti
out
mov
sbb
leave
mov
cmp
rorl
dec
loop
inc
pop
std
fcomp
inc
je
xchg
push
mov
aas
loope
je
ffreep
out
jl
out
rcll
mov
rolb
adc
lods
and
adc
adc
mov
icebp
je
sub
push
mov
xorl
loopne
cmpsl
sub
jmp
mov
mov
clc
sarl
cltd
mulb
ds
cwtl
pop
daa
out
stos
push
mov
jbe
mov
inc
fs
sbb
jmp
int3
inc
enter
jae
dec
stc
fcom
arpl
xchg
das
subb
xor
mov
subb
and
push
test
xchg
and
out
mov
ret
rcrl
testl
mov
pusha
mov
or
into
shlb
mov
sub
pop
or
fdivp
and
in
imul
test
les
lret
hlt
pop
and
inc
inc
fadds
ljmp
pop
pop
sub
sbb
int3
fistl
cmp
xor
sub
dec
jmp
lcall
xchg
out
add
cmc
sbbl
fildll
ss
pop
and
jle
aas
std
out
pop
sbb
sti
outsl
rclb
jb
pushf
dec
sbb
js
and
stc
dec
inc
neg
pop
inc
lcall
xchg
cmp
fdiv
cld
and
sbb
outsl
repnz
and
mov
jnp
pop
add
roll
sahf
cmp
mov
xchg
imul
loope
pop
aam
cmp
inc
jnp
add
dec
adc
sbb
mov
push
mov
push
jge
cmp
movsb
sbb
xchg
hlt
dec
fs
or
std
mov
xor
pusha
sub
push
jge
aad
cmp
jle
mov
mov
je
push
nop
jnp
aam
mov
clc
cs
push
test
sbb
loope
imulb
or
nop
push
dec
dec
or
lahf
sbb
lret
add
mov
xor
cmp
dec
push
fiadds
insb
jmp
jnp
js
test
lahf
call
push
cmpsb
jns
clc
outsl
jmp
inc
sbb
out
rorl
mov
and
pop
add
jae
dec
int3
rolb
inc
sbb
out
mov
add
sbb
mov
les
xchg
inc
fcompl
jnp
or
stc
mov
cltd
mov
dec
jp
mov
mov
enter
jb
dec
sti
xchg
xchg
adc
shrl
sahf
xchg
fstpt
sub
xor
push
push
pop
repz
fistpll
ret
lret
push
pushf
and
xchg
lea
adc
push
es
enter
xor
shl
fs
push
or
call
mov
sbb
xor
movsl
adc
jp
mov
mov
inc
ret
cli
ljmp
pop
std
pop
out
mov
subl
int
testb
dec
xchg
sub
mov
dec
cld
add
xor
imul
mov
ret
and
ret
add
mov
call
mov
sbb
cli
dec
sub
fisttpl
or
mov
cs
xchg
in
push
jge
out
mov
pop
lret
jns
xchg
jo
sub
mov
pushf
sbb
aam
push
int
test
test
cmpsl
push
pop
mov
dec
pushf
xor
sub
lahf
aas
xchg
jg
xlat
insb
popa
mov
xlat
push
add
andb
add
in
xor
shlb
fs
jb
out
push
push
push
aad
mov
push
sub
mov
mov
and
dec
adc
stos
xchg
sarb
and
inc
sar
loop
insl
mov
fiadds
ja
inc
lret
clc
xchg
cwtl
pushf
push
push
aas
icebp
dec
jbe
add
pop
imul
jne
enter
lock
jg
inc
mov
clc
mov
out
add
pop
adc
addr16
dec
or
rcrb
outsb
lock
sub
add
pop
push
cld
inc
cmp
pop
cmc
adc
mov
ss
loop
cmp
loop
jmp
xchg
lahf
fsubp
mov
sub
jl
scas
pop
notl
or
or
int
dec
mov
in
xchg
mov
loope
popf
loopne
pop
cmp
jmp
pop
lcall
mov
mov
push
mov
jns
pop
aaa
xor
mov
mov
adc
mov
popa
pop
stos
xchg
out
roll
pop
pop
push
in
shll
out
das
aas
iret
cltd
mov
pushl
fs
inc
sbb
cmp
shl
dec
enter
jae
repnz
pushf
mov
inc
add
rcrl
or
cmpsb
daa
jno
pusha
and
int
into
nop
stos
cld
adc
xchg
fwait
push
add
xchg
shll
xchg
testb
xlat
pop
push
jbe
sub
or
and
dec
pushf
or
jo
repz
or
leave
xchg
cwtl
mov
scas
sbb
lds
cli
push
lret
test
mov
inc
push
mov
mov
repnz
sub
mov
inc
mov
dec
push
push
addr16
in
or
stos
in
rclb
in
iret
inc
out
repz
sub
lret
gs
cmp
xchg
push
bound
dec
fcom
mov
inc
push
gs
pop
cmc
add
inc
lods
mov
cltd
mov
xchg
sbb
cmpsl
cmp
mov
mov
xchg
cmp
lcall
xchg
inc
push
jmp
push
mov
jmp
dec
repnz
mov
mov
sub
cmp
xchg
push
in
sbb
add
lods
frstor
je
jb
loope
scas
leave
mov
insb
xor
push
inc
add
cli
daa
jbe
fidivl
fdivrs
jg
adc
rcll
pop
pop
lret
scas
xchg
movsl
dec
pop
push
test
add
cltd
adc
leave
mov
testl
mov
popa
scas
iret
popf
ret
mov
insb
les
jae
and
jae
outsb
cmp
sbb
std
jb
imul
xor
inc
ja
test
add
stos
or
push
fst
jecxz
loope
mov
lret
mov
mov
dec
test
dec
adc
cmp
jb
cmpsb
daa
lods
or
data16
cwtl
jg
lods
gs
and
pop
scas
sub
mov
je
xchg
mov
sti
push
add
inc
sbb
add
jns
jp
pop
mov
lret
xlat
mov
cltd
add
push
push
cmp
mov
mov
in
dec
ret
mov
lea
js
mov
ret
iret
ret
or
cmp
daa
and
and
push
sbb
sbb
push
add
mov
jge
bound
mov
gs
shr
std
sbb
hlt
mul
shrl
jnp
xlat
in
mov
xchg
lret
push
sbb
cmp
fistpl
ds
sbb
imul
sarb
test
jg
and
iret
mov
or
or
lcall
pop
or
xchg
dec
je
bound
xchg
ret
loop
jmp
cmp
and
arpl
cwtl
je
xchg
incb
inc
push
mov
inc
fisubs
xchg
mov
xor
mov
xor
inc
ret
loopne
pop
pop
adc
mov
in
gs
clc
sub
xchg
xlat
ljmp
out
push
frstor
xchg
jnp
fcoml
div
jmp
in
mov
in
jmp
fisttps
scas
mov
inc
out
xor
out
loope
movsb
jg
in
pop
and
in
dec
imulb
clc
pushf
mov
das
outsb
int
dec
in
sub
icebp
adc
loop
jb
push
push
pop
mov
pop
inc
ja
imul
int3
call
inc
or
adc
dec
sub
outsb
scas
xor
push
popa
inc
jbe
cmpsb
std
add
shrb
sahf
or
and
mulb
and
pop
mov
cmp
das
imul
pop
jno
push
jle
pop
pop
jp
outsl
rorb
push
dec
inc
ret
sub
push
cmp
lret
xorl
jb
or
adcl
filds
mov
fdivrl
nop
jbe
dec
and
repz
xchg
jp
hlt
shl
in
aad
push
hlt
ret
mov
arpl
mov
xchg
mov
and
or
lret
icebp
sub
mov
pushf
test
adc
pop
jge
or
push
or
loopne
xchg
pop
mov
outsl
insb
push
mov
idivb
popa
xlat
mov
je
inc
jl
mov
je
fdivr
out
das
addb
pop
pop
pushf
dec
out
test
mov
adc
mov
xor
xor
xor
insl
jne
jmp
mov
insb
push
repz
gs
cltd
xchg
push
add
out
out
xlat
sub
add
adc
movsl
orb
xchg
outsb
mov
jg
cmp
cmp
jl
xchg
push
xchg
cmp
cmp
testl
js
stc
dec
or
cltd
mov
xor
bound
aam
jle
imul
mov
into
lahf
scas
lret
lret
dec
mov
cmp
fisubl
std
or
jp
mov
loopne
jecxz
xchg
mov
lea
mov
push
movsb
das
out
mov
jecxz
push
das
sti
dec
push
mov
dec
out
pop
sbb
mov
dec
jnp
into
ds
push
mov
pop
cmp
or
add
mov
adc
push
mov
mov
aaa
push
dec
rol
cs
jmp
iret
lahf
insl
cmpsl
or
jbe
test
mov
dec
jno
dec
cmpsb
inc
je
imul
jle
xor
aad
xor
jge
aam
rcr
das
dec
push
xchg
scas
pop
pop
and
adc
push
ja
in
dec
bound
sub
cmp
jl
hlt
jnp
xor
pop
jecxz
pop
inc
push
jge
mov
push
mov
pop
xor
int
lea
pop
outsb
insb
mov
adc
and
xor
push
inc
sbb
sbb
clc
rol
adc
and
sbb
cmc
xchg
arpl
pop
cmpl
and
mov
fs
push
and
notl
dec
js
addr16
jl
ret
pop
das
sub
jnp
push
mov
jle
fsubrs
fwait
inc
dec
rcrl
sahf
ljmp
das
jnp
movsl
jne
pusha
loop
movsl
insb
mov
test
addr16
ljmp
jmp
clc
sub
pop
mov
pop
lcall
shll
fnstenv
dec
inc
std
mov
mov
dec
xor
xchg
idiv
negb
clc
sbb
fmuls
add
mov
sub
in
lock
fld
popf
push
aad
stc
mov
mov
ja
das
fimull
in
mov
pop
push
repnz
jp
lea
cli
add
repnz
dec
hlt
add
cmpsb
and
push
mov
and
into
imul
scas
or
movsl
jp
jno
adcb
shrl
bound
jp
mov
in
loopne
fstpl
je
rorl
test
xchg
outsb
daa
or
mov
daa
fisttpll
popf
sub
outsb
lods
or
lods
ror
xchg
pop
push
xor
gs
pop
int3
aaa
lea
cld
jmp
xlat
outsb
or
out
and
and
sub
mov
mov
jae
lret
iret
loope
mov
loopne
mov
in
jb
pop
sbb
ja
int3
aas
sub
mov
dec
and
sbb
lds
inc
jb
fnsave
dec
xchg
pop
mov
xor
mov
pop
and
mov
pop
popf
leave
fsubrl
inc
adc
or
or
pop
adc
in
cli
leave
or
sub
fiadds
nop
pop
shlb
pop
cmp
pop
rorl
sbb
mov
fstpt
mov
pop
push
push
or
scas
filds
icebp
imul
imul
jge
pop
test
mov
sub
xor
jo
xchg
sub
xor
adc
jp
cmp
jo
sahf
jns
pop
insl
lret
icebp
cmp
cmp
hlt
adc
mov
in
sbb
ret
dec
je
jbe
out
dec
mov
push
pop
and
or
adc
aad
xchg
push
add
mov
dec
aas
sbb
nop
sub
popl
dec
out
popf
mov
xor
daa
repz
js
ljmp
cmpsl
push
loopne
and
mov
cmpsb
imul
test
leave
push
ss
add
jp
dec
std
sub
imul
mov
adc
ds
pxor
aad
push
xor
fcom
cmp
and
stos
lock
mov
not
movsb
inc
sub
rolb
sub
in
adc
int
xor
push
das
push
and
lods
cwtl
add
ret
pop
cld
or
cmp
sbb
call
js
pop
lret
mov
mov
add
sub
adc
clts
insl
arpl
xor
cmpsl
push
or
in
in
rcrw
xchg
or
std
arpl
and
inc
shll
int3
and
cs
int3
xchg
jo
push
sbb
aas
jo
test
pop
jb
and
or
jne
mov
cmp
cwtl
pop
dec
xchg
mov
stos
xchg
dec
je
aam
xchg
xor
xchg
add
pop
add
mov
push
mov
pusha
push
add
in
shlb
cwtl
test
lahf
dec
in
jl
shl
fucomi
mov
pop
lret
fadds
push
hlt
fcompl
xchg
xor
pop
cwtl
cmp
andl
mov
pusha
mov
cmpsb
jbe
and
outsl
mov
xchg
cmp
jle
cmp
out
adc
cmp
pusha
imul
push
fmul
lret
jl
fs
gs
and
icebp
psrlw
mov
mov
mov
add
fbld
aad
jecxz
jg
dec
jns
cld
loop
xchg
rolb
xor
adc
cmpsl
cmp
mov
pushf
inc
mov
loopne
xchg
xchg
in
mov
and
cmp
mov
mov
in
in
cmp
xchg
push
ljmp
addb
lcall
pop
mov
pop
and
mov
push
or
push
push
mov
cs
hlt
movsb
push
in
fidivrs
add
sub
mov
clc
push
cmpsl
rcl
repnz
mov
adc
cmp
fnstcw
ret
jg
cmc
xchg
or
xor
push
addb
xchg
dec
lds
or
mov
xor
adc
push
jbe
xchg
mov
push
sbb
mov
jp
inc
movsl
sub
mov
sbb
and
daa
xor
dec
add
out
cmpsl
int3
or
cld
repz
or
mov
or
std
push
lods
mov
cmp
mov
inc
push
xor
shr
mov
lods
inc
sub
orl
add
lea
jle
loope
xor
jg
jnp
inc
cld
ret
sahf
insl
dec
adc
popf
mov
xor
insb
xchg
dec
pop
push
enter
pop
insb
rcll
and
lea
and
adc
es
inc
test
sub
gs
and
daa
addr16
or
icebp
aas
out
les
inc
xor
jmp
dec
inc
dec
jge
inc
push
fsts
xor
incl
les
jle
xchg
fstl
adc
std
movsl
inc
fcomp
int
shll
xor
push
gs
orl
mov
inc
mov
pusha
cli
sbb
aas
pcmpeqw
imul
enter
dec
fadd
mov
mov
das
insb
push
mov
jnp
push
cmc
les
push
mov
sti
filds
inc
in
in
add
int
ret
cmp
sti
in
mov
mov
cmpsl
cld
sub
push
fisttpll
mov
inc
inc
xchg
dec
rorl
sahf
mov
scas
and
xchg
xchg
inc
mulb
push
lcall
and
mov
addl
xlat
icebp
jno
mov
inc
inc
and
jno
add
xor
mov
out
jl
push
in
push
cmpsb
add
lcall
stos
shlb
jns
movb
mov
dec
or
aad
movsl
jne
mov
out
dec
mov
fisttpl
stc
mov
sahf
movsl
jecxz
test
aam
into
add
std
jo
sbb
iret
enter
mov
lods
push
into
mov
mov
aaa
test
mov
or
fstpl
xor
dec
xlat
mov
mov
dec
in
loope
pop
ds
lahf
shl
sbb
insb
popf
pop
into
mov
out
mov
adc
add
cmp
movsl
push
mov
mov
movsb
fldt
mov
mov
cltd
xchg
mov
mov
lock
sbb
enter
fistl
jne
xor
xor
sbb
pop
add
pushf
ficomps
stos
subb
pop
daa
cmp
jo
lret
rcrl
gs
mov
xor
xchg
xorb
cwtl
test
adc
shrl
fwait
adc
jge,pt
arpl
outsb
gs
incl
inc
fiadds
inc
or
in
mov
sub
dec
xchg
push
dec
lods
mov
push
test
shll
or
psubq
push
into
nop
jmp
push
mov
pop
shr
xchg
cwtl
sub
rorb
mov
sub
leave
nop
and
xchg
insb
movsl
sti
std
in
std
stos
out
hlt
stc
mov
sarl
mov
pushf
jecxz
cld
pusha
pop
push
fldl
out
jmp
call
pusha
mov
es
in
xorb
and
sbb
sbb
enter
fwait
inc
aaa
call
stc
sub
mov
sub
rclb
pusha
std
sbb
xor
xchg
stos
xchg
cmpsl
mov
iret
jae
test
mov
inc
sub
xor
imul
insb
cmpl
mov
jne
adcb
adc
cld
inc
push
mov
cltd
out
mov
dec
aaa
add
add
fstpl
pusha
ljmp
mov
inc
dec
test
sub
xor
scas
xor
test
xor
fwait
imul
add
ret
jb
push
fwait
test
aam
mov
fsubl
cmp
repz
lock
fisttps
lret
sub
add
add
cmp
std
jo
fnsave
pop
pop
roll
shll
aas
xchg
mov
adc
sbb
add
data16
imul
mov
mov
jecxz
mov
das
lods
jmp
orps
dec
mov
ja
jns
pop
xor
lea
cld
push
xchg
out
sti
aas
adc
stos
insl
push
cmc
sub
cmp
sar
xchg
push
mov
add
lods
mov
mov
pop
into
mov
fimuls
out
sbb
inc
xchg
cmp
jecxz
std
cmpsl
loop
orl
ljmp
insb
cmp
adc
pop
mov
jns
fnstsw
add
nop
push
xrelease
push
ss
xor
cmp
dec
out
lcall
lea
cmp
mov
int
and
mov
mov
aam
addr16
adc
stc
add
dec
push
jb
add
sub
inc
scas
mov
cld
mov
jbe
test
movsl
pop
aaa
inc
mov
imul
andb
hlt
mov
add
mov
enter
pop
or
pop
mov
fcoms
cs
ljmp
push
outsl
ds
cmc
popf
xor
or
and
fcmovne
movl
dec
fadds
fstpt
mov
xor
xchg
out
int3
hlt
popa
adc
add
dec
fcmove
jl
add
loopne
inc
add
mov
push
add
fcompl
out
out
and
rorb
inc
je
sub
jmp
int3
mov
adc
adc
fisubrs
inc
adc
push
pop
lods
in
adc
fistps
sbb
cmp
or
pop
xor
mov
hlt
ljmp
adc
xchg
lcall
inc
mov
mov
jns
mov
icebp
enter
js
sbb
push
ret
jns
imul
xchg
loope
fcompl
pusha
sti
cmc
shrl
push
push
xlat
mov
xchg
mov
adc
in
out
cmpsb
pop
or
jmp
testl
das
jl
js
repnz
clc
sar
fistps
popa
push
divl
rclb
jns
mov
andl
mov
jnp
negl
mov
incl
hlt
jmp
movsb
dec
mov
loop
mov
fidivl
mov
adc
jl
call
int3
inc
sub
fsubl
mov
cmp
lret
mov
push
or
pop
lock
shlb
jg
pushf
stos
daa
mov
xor
push
rorb
or
xor
bound
xchg
cmc
aas
lcall
add
push
adc
lcall
std
push
pop
pop
ret
mov
shl
hlt
add
dec
sub
mov
adc
adc
cmp
aaa
pop
or
mov
and
pop
sahf
fldcw
and
fdivs
jecxz
mov
fisttps
sub
pop
pop
jb
imul
pop
mov
mov
sbb
sahf
ret
rol
xchg
fs
shlb
pop
dec
ret
repz
push
add
push
push
aad
rcrb
int3
pop
push
rcrb
add
insb
sub
add
loopne
loopne
pop
add
ret
cli
or
push
bound
cs
int3
mov
jno
cs
xchg
and
clc
add
mov
movsl
repz
pop
daa
pop
sbb
addb
dec
push
jbe
push
mov
lahf
inc
fcoms
sarl
aaa
mov
stc
fs
add
push
cmp
add
sub
idivl
and
dec
jne
fstpl
sub
adc
push
ficompl
mov
cmp
mov
lea
adc
xor
lcall
test
mov
fs
popa
jge
fmull
imul
nop
xchg
leave
scas
sbb
mov
fadds
shr
jmp
pop
push
test
movb
sysexit
imul
insb
or
mov
adc
mov
rcrb
ret
cmc
stc
into
push
out
or
mov
dec
jbe
pop
cmp
jg
push
inc
dec
sbb
es
repz
in
lea
rcr
mov
pop
cmp
dec
cld
out
xchg
mov
lods
test
push
mov
subb
mov
or
mov
fisubs
je
dec
lods
hlt
js
mov
pop
mov
or
mov
xor
dec
aaa
jl
add
or
pop
scas
leave
mov
mulb
scas
leave
aam
and
jmp
and
cld
sbb
or
mov
es
and
push
shr
call
xor
test
ja
or
lret
lret
and
cmp
ret
dec
bound
aaa
push
xchg
mov
dec
cmp
dec
mov
imul
add
inc
shrb
push
xchg
xchg
jns
cmp
in
int3
and
fcoml
imul
inc
leave
xchg
inc
adc
in
inc
inc
arpl
shlb
icebp
mov
addr16
int3
cmpb
jl
and
jmp
and
ljmp
rorl
scas
mov
push
imul
ss
inc
xchg
in
popa
js
int3
ja
mov
push
inc
rorl
bnd
or
jne
mov
inc
jle
sbbl
jle
and
test
push
sbb
daa
inc
lret
or
mov
sub
dec
mov
mov
and
test
xor
fwait
insl
mov
hlt
cmp
adc
roll
push
push
mov
repnz
addr16
shlb
dec
mov
inc
dec
mov
sbb
adc
dec
mov
mov
mov
test
add
mov
fbstp
cld
es
cmp
std
xchg
cmpb
pop
dec
add
cltd
pop
add
xor
daa
stos
jg
add
jne
aam
dec
dec
movsb
sbb
or
dec
outsb
xchg
mov
ss
adcl
mov
loop
in
cmp
mov
jb
pushf
push
nop
in
clc
cmovle
cmp
out
xor
repnz
sahf
addl
lock
mov
lret
sbb
add
loopne
mov
pop
adc
arpl
loop
adc
dec
lods
xchg
addr16
mov
mov
fdivl
sub
aaa
sub
add
movl
dec
paddq
popf
cld
pop
popa
outsb
int3
mov
ffree
fcoms
pop
lods
shll
mov
sub
lcall
repnz
shl
sub
sbb
clc
xchg
mov
mov
stos
insl
ja
dec
test
add
lret
adc
inc
push
sub
mov
cmpsb
mov
out
pop
mov
lret
mov
ficompl
pmulhw
dec
fsubrs
jmp
xor
inc
leave
test
and
lock
enter
jle
ficoml
mov
add
push
pop
add
mov
fimuls
fnstcw
pop
xor
add
stos
in
add
test
add
xor
andb
push
fisttpl
outsl
outsl
test
ficoms
test
ljmp
ds
push
and
mov
cmp
inc
inc
xor
push
outsl
repz
call
test
loopne
idivb
add
pop
pop
scas
shrb
out
cmpsl
sbb
stc
sbb
xchg
shr
adc
roll
add
aam
adc
test
add
daa
jno
shlb
fs
pushf
fistps
cmp
loopne
jae
inc
loop
jmp
add
call
and
cmp
mov
adc
jb
rcr
out
mov
mov
mov
std
adcl
sti
out
cmp
dec
mul
push
jno,pt
dec
push
and
adc
xchg
out
jmp
cmp
mov
in
mov
movsb
or
push
dec
int3
int3
hlt
imul
ss
or
aas
push
cltd
lock
ds
xor
enter
xchg
and
in
dec
int3
repz
sbb
out
xchg
mov
cmc
push
mov
push
mov
sbb
push
adc
add
daa
neg
inc
push
iret
rep
lods
enter
inc
or
stos
sub
aaa
lods
xor
xchg
loopne
das
ret
and
xor
xchg
insb
pop
and
shrl
pop
es
inc
test
or
inc
jle
out
push
cmpsb
les
cwtl
jno
fists
xlat
jb
mov
addb
xor
sub
adc
cli
test
dec
pop
cmc
fmul
mov
adc
je
cmpsl
add
pop
lods
loope
inc
xor
mov
mov
mov
pop
mov
push
xchg
pop
rcrl
jns
insb
fdivrs
mov
jo
xor
inc
jae
loop
mov
mov
inc
mov
mov
xchg
pop
lcall
dec
adc
xorl
test
daa
enter
out
mov
lcall
stos
inc
loopne
clc
loope
je
repnz
iret
push
dec
fbstp
adcb
sbb
push
sub
mov
in
div
fwait
cwtl
imul
inc
and
push
rcl
inc
cmp
out
or
push
cmc
or
adc
adc
sti
pop
jg
add
inc
jle
push
in
jmp
outsb
ljmp
xchg
mov
mov
xchg
iret
dec
dec
jecxz
stc
faddl
call
nop
mov
cmpsl
push
xchg
loopne
adc
or
mov
push
divl
lea
repz
sub
dec
mov
les
xor
das
push
jmp
jnp
add
filds
jbe
orb
ret
cmp
pop
jmp
jbe
mov
mov
inc
sbb
mov
xchg
cmp
sbb
xor
lods
ds
adc
push
lock
pop
and
dec
add
lea
push
and
pop
jecxz
jns
sbb
ja
fwait
gs
mov
ret
lods
ss
mov
cltd
das
lods
mov
sub
push
subl
ret
xchg
lods
and
dec
jno
sbb
sti
dec
loope
jl
cs
in
pushl
cmp
rcrl
icebp
das
addb
mov
sti
out
leave
xchg
mov
fsub
pop
cmp
out
ret
jo
std
cmpsb
lcall
pop
push
lock
aad
sub
jne
xlat
leave
dec
jno
pop
sbb
imul
js
sbb
and
test
mov
mov
cmpsl
out
jp
fcmovne
lods
mov
rcrl
movsb
addb
ret
jno
sub
dec
sti
subb
push
testl
nop
pop
push
shrb
xor
and
inc
stc
add
movsl
nop
xchg
sbb
jmp
pop
roll
mov
out
sbb
cmp
xor
sbb
lahf
in
loope
pop
pop
jnp
and
push
push
sub
mov
stc
xchg
or
cmpsb
push
daa
push
imul
mov
push
test
dec
outsl
sbb
faddl
mov
sbb
sub
repz
lea
lods
in
pop
jge
stc
out
dec
gs
cltd
mov
mov
lret
sub
rcr
sbb
rorl
roll
ds
ftst
push
lds
pop
or
fisttps
mov
pop
cwtl
mov
js
inc
jno
pop
mov
xchg
fadds
xchg
daa
jecxz
mov
jge
in
int3
inc
jns
inc
jmp
mov
rcr
jns
loopne
add
arpl
push
gs
mov
adc
push
lods
fwait
nop
pushf
xchg
aas
dec
mov
pop
into
adc
or
fnstenv
cmp
xchg
in
mov
and
push
xchg
pop
push
xlat
inc
std
arpl
or
lods
cmpsl
jecxz
in
sub
mov
pop
dec
and
lret
jne
push
aas
push
adc
fstpl
xchg
arpl
fsub
sub
xor
mov
lcall
inc
or
cmp
cli
loopne
sub
dec
push
inc
shlb
pop
xchg
mov
xchg
jecxz
cmpb
jle
addr16
leave
jl
movsb
and
repz
cmp
xor
lcall
adcb
aas
inc
mov
sbb
jns
test
cmp
xchg
push
test
ss
and
xchg
repnz
xchg
sub
pop
testl
pop
jns
icebp
psubq
movsb
dec
in
jge
cmc
aas
cmpsl
mov
push
mov
aad
pusha
outsb
mulb
divb
mov
xor
rcrl
sbb
scas
dec
jae
mov
lock
push
aam
fldcw
les
push
push
sbb
popa
scas
test
mov
popa
mov
and
imul
loopne
insl
loopne
push
and
outsl
popf
xor
cwtl
jae
jb
and
lods
jns
mov
mov
cmp
aaa
ss
lret
into
mov
xchg
popf
mov
sbb
repnz
or
cld
mov
cmp
imul
jg
cmp
cmpsb
scas
sbb
mov
and
mov
leave
outsb
inc
notb
popf
jmp
push
in
lods
icebp
cli
lahf
jmp
roll
xchg
jne
and
add
xchg
xchg
pop
jmp
fimull
inc
insb
adc
int
mov
mov
shll
rorb
push
rcrb
dec
jb
loope
mov
mov
xchg
inc
adc
lahf
mov
xchg
pop
sahf
pop
add
jbe
or
push
pop
mov
cli
nop
ret
adc
mov
outsb
repz
dec
dec
jp
std
pop
fwait
mov
test
imul
mov
imul
adc
ljmp
push
in
dec
cmp
imul
popf
or
imul
pop
xchg
repnz
popf
divl
inc
lock
lds
idivl
int3
cmc
ss
and
fmulp
nop
and
mov
or
inc
lea
pop
pushf
jecxz
imul
data16
scas
ja
and
outsb
xor
cmc
outsb
daa
sub
push
in
lret
or
cld
mov
jmp
js
loope
and
jg
mov
jbe
les
into
jecxz
mov
dec
fsubr
adc
push
jne
ret
mov
pop
lcall
gs
inc
cmp
add
adc
inc
jno
les
lods
imul
jae
mov
ss
cltd
adc
pop
and
jns
pop
insl
push
mov
jbe
xlat
xor
jge
cmp
cmp
mov
lahf
lods
sbb
sub
es
shll
cs
adc
aaa
xchg
xchg
adc
inc
ficoms
cmp
fldl
gs
push
scas
out
not
or
jns
lahf
inc
loop
jle
mov
fs
jb
sub
inc
int3
jnp
cmpsb
outsb
push
jno
aaa
in
std
cmp
push
xchg
sbb
subb
push
xor
in
hlt
daa
and
or
and
into
mov
cmp
mov
out
ljmp
js
xchg
ds
mov
fadds
inc
das
hlt
or
jbe
add
or
add
ss
jmp
jne
fcomps
nop
addb
push
xchg
pop
cmp
push
cmpsb
jp
mov
add
mov
jns
sub
or
shll
mov
jg
sbb
xchg
pop
jp
xlat
add
aas
out
jge
mov
jp
inc
mov
sbbb
adc
into
xchg
lret
popf
push
lods
push
push
ret
push
sbb
arpl
daa
adc
aaa
sub
dec
loop
mov
inc
lods
in
cmp
ja
and
lods
pop
test
cmpsl
mov
int3
mov
xor
sbb
dec
xor
dec
arpl
inc
mov
movsb
add
stos
xor
popa
ret
je
and
jns
jae
je
or
arpl
movsb
inc
enter
into
or
or
ja
dec
or
xchg
testb
jns
and
add
push
jne
mov
ljmp
outsb
out
mov
ja
insb
test
mov
sti
add
daa
xchg
aas
sbb
sub
add
sub
add
or
lret
lret
aad
popf
and
ss
into
out
pop
daa
movsl
xchg
inc
stos
fwait
adc
je
outsl
inc
mov
cltd
loopne
insb
dec
mov
mov
adc
mov
xor
add
ss
pop
jne
inc
mov
push
and
cmpsl
or
xor
hlt
mov
jb,pt
mov
lods
sbb
inc
push
pop
sub
cmp
mov
dec
xchg
inc
test
add
movsb
pusha
push
xchg
push
xchg
pusha
rcr
adc
data16
push
mov
adc
repz
icebp
push
jae
xchg
ds
loope
fsubrs
push
add
out
and
imul
and
fs
stos
fdivs
xchg
mov
sbb
xor
cmpsl
push
shrl
xchg
xor
fcoms
push
xchg
shlb
jbe
dec
mov
jmp
lret
lods
repz
lods
and
scas
and
test
and
in
movsl
mov
rclb
mov
sub
jbe
fsubs
xor
pop
adc
xor
jno
or
leave
jl
ret
loopne
stos
inc
cmp
add
lcall
mov
pop
lods
hlt
inc
mov
jecxz
adc
sub
adc
ret
jge
aam
sti
xor
push
les
or
cmp
mov
test
jp
loope
pop
jno
jnp
mov
adc
iret
jecxz
adc
ret
mov
jbe
mov
repnz
jb
xor
dec
jg
cmp
ror
sbb
sbb
hlt
push
pop
mov
aas
pop
jns
lods
xchg
or
pop
test
insb
xchg
inc
ja
decb
daa
imul
sbb
jae
sub
push
mov
jmp
daa
je
iret
xor
sub
adc
and
out
ljmp
nop
cld
mov
or
adc
mov
and
jg
adcb
loope
xor
arpl
loop
jmp
inc
adc
and
lock
sub
jne,pn
aaa
mov
call
lret
jae
bound
and
mov
hlt
addl
push
pop
ret
es
mov
scas
insl
mov
int
inc
inc
inc
xchg
mov
pop
dec
hlt
sahf
or
cmp
fdivrs
jg
xchg
fs
mov
aas
nop
or
daa
add
inc
sub
pop
xchg
fsubl
loope
in
xor
mov
or
push
sub
fsubrs
loopne
cli
jbe
or
mov
ja
adc
jle
sbb
xchg
adc
cli
out
mov
pushf
xchg
adc
cmp
jp
cli
psubsb
dec
or
clc
fiaddl
push
enter
data16
loop
adc
xor
cld
sbb
xorl
lret
add
push
mov
mov
dec
push
and
inc
mov
dec
fsubr
jae
int3
addr16
mov
xchg
mov
mov
jg
movsb
jg
jl
fisttpl
mov
pop
adc
rol
jmp
mov
fadds
inc
pop
out
dec
jno
pop
push
and
xor
xchg
push
cld
xchg
cmp
mov
dec
insl
xchg
mov
sbbb
sarb
dec
outsb
inc
mov
lret
xchg
xchg
fmul
js
mov
rolb
adc
scas
mov
jne
mov
lret
mov
and
mov
ja
xchg
push
aas
add
in
aad
mov
and
mov
mov
xchg
dec
aam
sarb
inc
inc
push
subb
pop
punpcklbw
fsubp
sti
pop
mov
bound
lret
popl
sub
jb
fisubl
sahf
in
cmp
arpl
out
movsb
movsb
jne
mov
xlat
xchg
cmpsb
mov
insb
mov
out
cwtl
idivb
add
inc
adc
xchg
loop
rcrb
std
mov
cmovle
je
xchg
xchg
push
arpl
lret
mov
les
sbb
les
insb
inc
mov
dec
je
push
pop
lds
jge
or
cmp
shll
dec
jl
testb
inc
jbe
sbb
cld
cmp
sbb
cwtl
mov
xor
faddl
jbe
scas
dec
aaa
inc
or
pop
mov
aam
lea
add
and
notl
pop
xchg
mov
push
mov
in
mov
add
mov
xor
lcall
js
inc
xor
lds
add
sub
cs
cli
and
add
sub
jbe
mov
imul
pop
pop
roll
push
mov
pop
mov
xchg
rolb
push
rclb
fistl
mov
adc
rcrb
sbb
pop
rcll
mov
outsb
in
movsl
das
jl
push
jge
mov
int
mov
fisttpl
mov
fcmove
icebp
fninit
push
pusha
push
cmpb
lahf
xchg
push
jg
xor
inc
jb
push
repz
ret
push
popa
pusha
xchg
inc
pushf
ss
in
jl
orl
xor
repz
or
xchg
cmp
pop
xor
adc
cmp
inc
das
inc
addb
cmpsl
mov
aam
rorl
jae
inc
xorb
fwait
pop
lret
mov
lock
jle
fstpl
sar
dec
xor
fstl
xlat
popa
repnz
dec
addb
in
cli
cld
sub
mull
insl
and
in
pop
cmpsb
cli
add
mov
aaa
lock
push
insl
and
jmp
jnp
inc
pop
fs
mov
push
xor
push
sub
icebp
add
test
and
pop
sub
adc
ret
shl
cli
xlat
pop
sub
cmp
and
js
xor
inc
xchg
mov
cld
adcb
and
mov
or
icebp
jne
scas
xor
bound
cmp
adc
movsb
push
mov
mov
xor
mov
dec
pop
inc
cwtl
pushf
cli
rclb
push
xchg
cmc
add
mov
mov
andl
and
dec
mov
or
cld
pop
pop
fistps
sbb
in
mov
inc
xchg
mov
jl
xor
xchg
pop
jge
dec
iret
adc
fwait
enter
inc
testb
push
cltd
cltd
xchg
or
sarb
and
shlb
push
aam
and
popa
mov
sub
xor
dec
jecxz
adc
add
ja
imull
fdivl
push
inc
mov
xchg
scas
push
push
jl
sub
xchg
mov
mov
jns
push
das
push
ljmp
jae
ficoms
imul
add
loope
aaa
loop
xchg
test
fisubl
repnz
js
outsl
push
cltd
and
stc
push
or
and
jmp
loopne
pop
mov
es
das
add
or
or
xchg
repz
mov
sbb
push
aad
aaa
aas
cmp
add
mov
sbb
data16
mov
or
scas
es
repnz
and
clc
lods
mov
notb
js
test
lds
fdiv
dec
outsl
rcll
test
daa
stc
jno
test
sbb
in
xchg
mov
test
sarl
repnz
jle
jge
shll
cmp
bound
sarl
nop
das
into
ja
push
mov
mov
lods
cmp
lret
addl
or
mov
xor
mov
ds
adc
adc
dec
mov
pop
sub
and
jle
es
xchg
pop
mov
dec
sub
adc
std
jp
imul
pop
outsl
cmp
mov
aas
lods
or
and
test
outsb
dec
pop
inc
mov
jmp
and
push
cld
scas
cli
or
ret
call
push
lahf
test
jge
into
or
add
cmpl
pushw
fdivrs
rol
jno
je
pushf
push
mov
out
rep
mov
outsl
mov
hlt
inc
stc
fldenv
jg
lea
mov
ret
fisttpll
mov
and
cmp
test
jnp
inc
scas
data16
mov
adc
cmpsl
and
push
add
movsl
fdivrl
jnp
pop
cmp
mov
fs
andl
cmp
mov
push
faddp
xchg
in
lcall
adc
sbb
jg
rol
hlt
lea
dec
in
lea
or
xor
scas
pop
xchg
pop
lods
sbb
and
cmc
inc
call
mov
scas
cmp
xchg
jmp
std
iret
loopne
rorb
xchg
push
push
dec
mov
push
pop
cmc
fisubl
aad
dec
mov
mov
add
mov
lea
cmp
xlat
ljmp
fneni(8087
mov
aas
jae
mov
add
test
push
jmp
mov
sbb
lret
sbbb
dec
xchg
push
lahf
adc
and
pop
push
in
mov
fcmovbe
lods
std
jge
inc
sub
dec
cmp
jo
mov
clc
sbb
fbstp
sbb
sbb
jbe
mov
call
test
push
push
mov
enter
xchg
xchg
pop
or
bnd
lds
clc
movsl
ss
xchg
cmp
cmp
mov
jmp
test
fnstsw
and
cld
hlt
popa
mov
pop
push
mov
jnp
cmc
pop
fadd
int3
lods
inc
jo
xor
dec
jno
xlat
add
ret
and
seto
sbb
enter
mov
xor
aad
lods
lock
xchg
pop
orl
xor
addb
loopne
mov
jno
repz
xor
mov
jnp
ljmp
jmp
inc
cmc
adc
fs
mov
xor
xchg
rcll
clc
popf
fsts
shll
xor
stos
xchg
mov
js
lret
fsub
nop
imul
sbb
stos
add
dec
insl
insb
mov
aas
clc
repz
inc
cmp
test
sar
xor
dec
push
cmp
sbb
fcmovnu
shrl
popf
xor
or
push
pusha
xchg
mov
mov
mov
and
sti
sbb
enter
aam
fbstp
cmpsb
outsl
cmpsl
arpl
insb
jae
push
mov
mov
mov
test
jmp
sub
add
lds
adc
and
cmp
cld
mov
sub
xchg
mov
imul
cmp
jl,pt
clc
mov
cwtl
hlt
mov
cmp
dec
inc
sub
iret
dec
add
fdivl
icebp
push
sub
int3
stos
xor
fsts
test
insb
jge
outsl
les
sarl
std
inc
int3
mov
cld
jmp
loopne
sub
push
pop
int3
and
sub
dec
in
sub
popf
mov
repnz
pop
mov
adc
mov
xchg
cld
pop
push
gs
rolb
sub
sub
jle
mov
add
inc
aam
fimuls
mov
adc
pop
xchg
or
inc
or
lea
sub
lods
insb
fisttps
lahf
sub
insl
push
lcall
mov
js
negl
clc
std
push
cmp
push
in
stc
sti
movsb
icebp
mov
mov
imul
pop
xor
mov
ljmp
sbb
push
out
imul
sbb
adc
mov
mov
je
dec
and
stos
inc
cmp
jo
in
xor
jg
int
mov
lret
xchg
je
cwtl
add
push
or
out
sbb
adcb
add
scas
push
cmpl
jb
mov
mov
iret
cli
pop
mov
out
cmc
cmp
or
push
cwtl
rorb
mov
xchg
jl
lea
xchg
fsqrt
popa
inc
popf
add
mov
jns
add
lock
dec
mov
xchg
pop
sub
shl
ja
lret
push
rorb
mov
add
jae
and
mov
lcall
cmp
sub
dec
dec
call
xor
and
mov
jne
fisubs
and
popa
inc
or
inc
push
sbb
rorb
mov
fs
lock
aam
cwtl
pusha
in
cwtl
mov
mov
push
xchg
add
and
ljmp
xor
mov
sub
cmp
sbb
jge
cmp
mov
stos
mov
push
push
mov
cmpsl
sbb
sub
mov
sahf
mov
mov
aas
mov
andb
add
lahf
fdivrp
or
test
mov
jne
xchg
lods
or
jle
push
and
shr
fimull
cld
cltd
jecxz
xchg
sub
fwait
jmp
sbb
inc
or
js
dec
or
mov
loopne
dec
jp
shld
das
fldenv
lods
sub
inc
in
je
mov
cmp
out
cltd
test
jg
and
pusha
dec
adc
in
cltd
cwtl
orb
test
insl
xchg
bound
daa
sbb
pusha
cmp
fildl
sar
push
add
shll
repz
jns
data16
xchg
sbb
xor
mov
sub
gs
es
in
add
dec
jae
lock
fcmovne
js
popa
es
leave
mov
adc
pushf
test
mov
pop
fadds
xor
adc
inc
ja
scas
sbb
frstor
push
enter
xchg
int3
inc
leave
lods
xchg
scas
lock
xchg
shl
clc
mov
lds
leave
fiadds
dec
js
inc
repz
lahf
and
mov
sti
and
mov
inc
sbb
stos
outsl
sub
cmp
xor
loope
xchg
loop
pop
add
dec
leave
mov
add
dec
dec
int
mov
inc
push
aas
jno
aad
shlb
xchg
push
out
and
and
pop
fnstenv
and
sbb
and
cmp
int3
and
sbb
cwtl
out
dec
and
js
cli
sub
sub
dec
cmp
sub
iret
fmull
add
pop
xchg
or
jns
iret
addl
pop
and
sub
insl
fstpt
or
jb
dec
cmp
in
bound
pop
xchg
inc
mov
pop
or
stos
insb
aaa
lcall
test
xchg
jnp
jle
cmp
sub
adc
pop
in
pop
push
inc
mov
xchg
frndint
gs
mov
sbb
or
call
arpl
adc
test
inc
out
sbb
fsubrs
std
aam
jecxz
jno
inc
sbb
aad
pop
jno
pop
lds
cmp
mov
out
je
push
inc
or
and
loope
mov
idivl
adc
sub
dec
cmp
rclb
pop
dec
sub
int3
inc
cmpsl
cltd
or
adc
cmova
dec
mov
or
divb
xchg
jge
mov
cli
xor
inc
inc
jmp
incl
xchg
push
bound
rcrb
jp
subl
cwtl
push
js
mov
test
loopne
inc
sub
lret
ljmp
xorb
xlat
sub
sti
inc
xor
pusha
stos
cmp
jmp
ljmp
jbe
pusha
daa
mov
pop
gs
fwait
sarb
movsb
mov
adc
sub
aam
push
popf
int
mov
aas
xchg
push
cltd
icebp
sub
mov
or
pop
test
adc
and
jmp
xchg
icebp
mov
inc
inc
pop
add
int3
jbe
sarb
scas
jl
fs
hlt
ret
or
mov
ja
enter
aas
and
fists
xlat
loop
dec
loopne
or
inc
test
bound
cmc
add
fimuls
shl
xorl
jnp
aas
inc
push
lret
cmpsb
stos
addr16
adc
enter
loope
jnp
imul
or
jmp
adc
arpl
inc
cmpsb
mov
xchg
lcall
or
jbe
or
xor
leave
test
mov
orl
cld
rclb
inc
add
dec
leave
mov
xchg
xor
clc
xchg
dec
pop
adc
ret
shlb
cmpsb
in
push
cmp
push
lret
loop
stc
hlt
in
dec
ret
adcb
shl
pushf
jns
test
xor
imul
mov
add
pop
xor
aaa
mov
jbe
insl
stos
xchg
fucomi
pop
sbb
xacquire
mov
add
inc
mov
pop
hlt
jbe
inc
dec
xlat
das
push
das
mov
hlt
leave
sub
mulb
aas
ss
mov
int3
mov
subb
mov
add
xlat
lret
bound
jmp
xchg
and
cmpsb
out
xchg
push
inc
insl
jae
cmp
jl
pop
jg
mov
mov
iret
data16
dec
jge
pop
mov
fldl
lods
mov
shl
or
xorb
jno
inc
and
mov
add
aaa
inc
mov
stos
mov
std
pop
pop
ret
mov
mov
sbb
mov
sbb
js
mov
js
inc
aad
xchg
jno
lods
clc
cmp
adc
dec
cmp
xchg
dec
lock
xchg
adc
jge
andl
js
xchg
imul
or
mov
mov
cld
gs
ja
mov
or
inc
cld
fwait
testb
stos
add
jmp
outsl
movsb
xchg
fisttpll
shrb
jle
xchg
call
ret
lods
lods
repnz
or
repz
xchg
imul
in
or
jg
shll
cmpsb
cmp
daa
fistpl
jno
lods
sarb
jo
inc
test
lcall
push
add
xor
rcll
leave
add
mov
pop
sbb
cmp
sbb
xchg
cld
insl
push
aad
mov
aaa
dec
xor
rcr
aam
inc
pop
cmp
dec
test
mov
jmp
xor
sbb
push
outsb
lea
mov
push
mov
gs
les
fstl
or
into
jge
inc
adc
outsb
xor
cmp
ficomps
ficoms
lods
adc
addr16
pop
inc
push
cmp
divb
add
inc
inc
fs
nop
xorb
fsubrl
mov
cli
sbb
daa
iret
mov
xor
adc
add
andl
inc
das
int3
fcmovnbe
insl
imul
clc
or
fldenv
aad
lret
pop
inc
dec
cmp
mov
stos
and
mov
outsb
push
mov
and
jle
ss
mov
sahf
adc
xchg
cs
xchg
add
call
inc
fmul
sub
mov
xchg
sbb
cmpsl
push
mov
movsb
jb
ret
mov
mov
xor
cli
ret
enter
adc
mov
push
in
xchg
fucom
jno
inc
cmp
or
sbb
mov
xchg
jne
shll
notl
add
ljmp
outsl
sbb
jo
fs
mov
sub
gs
test
add
add
cmp
jle
shll
jecxz
jno
clc
popa
mov
adc
mov
inc
rcrl
in
stc
int
dec
pop
insl
mov
mov
push
dec
sarl
adc
add
fs
jo
insb
stc
les
insb
add
inc
cmp
jb
rclb
push
lret
mov
mov
insb
dec
push
pop
pop
mov
pop
dec
sbb
lds
std
push
jae
loope
xchg
or
test
or
xchg
push
jae
lcall
pop
sarb
mov
pop
clc
adc
cmp
jb
scas
mov
aad
or
xchg
or
bound
iret
push
cmp
lea
and
insl
push
repnz
pop
or
lock
or
lret
ficompl
xchg
xor
mov
xor
push
or
outsl
add
sub
push
pop
fldenv
pop
sti
out
sbb
test
sti
sub
push
pop
call
lcall
push
mov
jp
jmp
scas
dec
mov
cmp
test
mov
pop
adc
jns
stos
adc
mov
add
jbe
adc
aas
popa
jbe
pop
push
aas
or
push
movsl
push
push
test
sar
imul
daa
push
mov
pop
loope
sbb
adc
mov
xchg
push
shr
xor
jmp
scas
jae
xor
sbb
push
fadds
test
lds
in
mov
push
dec
movsl
pop
push
mov
xchg
in
fildl
aam
nop
inc
ret
dec
sub
xchg
cmpb
lods
and
ret
adc
fwait
aam
out
loopne
pop
mov
arpl
incl
add
sbb
div
cld
mov
test
ret
push
sarl
int3
and
ficoml
inc
lcall
pop
loop
add
mov
add
push
xchg
rcl
or
mov
test
out
test
ret
ss
cltd
test
mov
test
dec
js
fisttpll
inc
lret
dec
adc
push
inc
jne
xchg
movsb
sahf
rol
scas
fsubl
dec
lahf
roll
fwait
mov
inc
cs
out
mov
test
sbb
dec
fwait
cmp
daa
fcmovnu
fsts
xchg
inc
mov
or
leave
daa
add
sub
xchg
cli
scas
inc
rcll
dec
mov
dec
popf
mov
adc
push
cltd
inc
out
aas
sbb
cld
movsb
push
call
je
or
leave
jns
insb
cs
xchg
or
xchg
pop
push
int
lock
pop
cmp
jge
inc
push
inc
ja
sarl
push
xor
xlat
cmp
gs
push
push
lahf
cmp
loop
mov
dec
or
sub
push
dec
stc
adc
push
movsb
mov
call
notl
cmc
test
test
fsubrl
scas
xchg
fcmovne
mov
sub
and
push
push
mov
out
mov
and
out
stos
out
out
lock
xchg
adc
hlt
push
xchg
or
lret
jmp
and
push
lcall
and
aas
cmpl
adc
mov
packssdw
ret
mov
in
test
jp
call
adc
stos
and
xor
out
push
fiadds
cmp
push
cld
cmpsl
xchg
lret
push
imul
sbb
rclb
mov
xlat
test
stos
and
pop
inc
and
sub
in
fdivl
popl
mov
fmull
pop
aam
and
dec
mov
ret
mov
mov
xor
jl
push
ror
sarl
cmpsl
addl
lds
mov
dec
lret
das
xor
cwtl
pshufw
popa
add
int3
push
push
jno
push
cld
jmp
inc
push
and
mov
lret
mov
or
sub
cmp
sbb
push
and
and
adcb
mov
test
push
cltd
xor
loop
mov
imul
ja
adc
sub
mov
mov
popf
ljmp
inc
add
xchg
mov
jns
or
cmpsl
push
sbb
sub
lahf
inc
add
mov
pushf
js
iret
cltd
fdivl
push
and
mov
xor
test
mov
adc
inc
add
jg
mov
je
lods
adc
or
inc
pop
outsb
push
lds
std
mov
cmp
inc
add
pushf
aam
jno
cmp
mov
sub
sbb
sbb
sbb
ljmp
ret
inc
lret
movsb
enter
lea
sub
inc
push
and
jo
stc
and
sub
add
aad
pop
jae
lods
xchg
aas
sub
mov
xchg
pusha
cmp
daa
and
xchg
add
jl
out
hlt
dec
ljmp
lods
pop
movsb
ja
mov
add
std
scas
add
add
mov
movsb
loopne
lahf
mov
mov
add
xor
pushl
cwtl
out
lods
sub
xor
andb
add
jb
fdivrs
and
push
cltd
pop
add
sbb
loop
fdivrs
jge
fsubr
jp
imul
add
loopne
sar
push
js
lret
cmp
insl
addr16
movsb
enter
mov
cwtl
inc
sub
and
insb
or
mov
mov
ucomiss
shll
popf
in
gs
add
loope
sub
cmp
ss
jbe
jp
jnp
mov
in
sbbl
jno
ss
jo
sbb
cmp
xor
and
cltd
dec
aaa
jp
pop
inc
cmp
cltd
xchg
inc
int3
shlb
fbstp
fbld
add
jle
clc
xor
std
mov
push
xchg
dec
lods
push
stos
mov
push
inc
cmpsb
and
aam
jno
and
lret
jno
xchg
xchg
movsl
pop
sbb
push
gs
pop
xor
pop
mov
xor
xor
lock
sub
jno
imulb
outsb
push
xchg
dec
adc
outsl
adc
clc
outsb
clc
sbb
cmpb
xchg
icebp
pop
lea
jp
add
out
push
pop
dec
les
adc
bound
sti
pop
jnp
pop
mov
push
test
aaa
and
enter
arpl
in
mul
outsl
push
or
xlat
jno
inc
or
aad
dec
xlat
in
roll
xlat
addl
fs
in
stc
mov
push
in
cmc
shlb
or
jge
pop
adc
aaa
add
aam
lret
cwtl
sbb
sub
pop
inc
mov
pusha
xchg
push
add
fldenv
mov
cmp
push
fldcw
les
sub
inc
mov
sub
dec
fdivrp
popf
jmp
cmp
out
xor
mov
sbb
and
cmpsb
sub
fimuls
push
stos
jb
jle
jnp
add
xchg
sub
movsl
das
jmp
sub
ret
pop
push
incl
lock
outsw
popf
dec
inc
fisubs
push
adc
int3
pop
jne
dec
jb
ss
cltd
xchg
lcall
ret
fsubl
or
sbb
mov
cwtl
mov
xor
sub
mov
xor
dec
in
sbb
clc
ficoml
dec
std
xchg
push
pushf
dec
jbe
xchg
push
in
jo
cli
xchg
pop
repnz
add
pop
inc
xor
mov
add
jg
inc
sbb
xchg
lea
pop
and
jns
inc
das
adc
aad
sub
outsl
mov
cmc
xor
inc
sti
push
aad
lods
adc
lahf
dec
mov
fistps
stos
das
xor
in
pop
repnz
jmp
jge
or
xor
ret
adc
pushf
jo
cmp
icebp
fwait
in
loope
popf
shll
testb
mov
adc
or
dec
fildll
pop
or
push
inc
sbb
xchg
inc
ljmp
stos
jbe
repnz
repnz
scas
addr16
rol
dec
xor
push
outsl
js
inc
ret
jbe
inc
xor
inc
adc
pop
in
cld
push
inc
push
mov
sub
shrl
inc
movsl
sbb
out
mov
dec
jg
adc
fsts
inc
push
lcall
jne
fidivs
inc
scas
hlt
adc
sbb
add
icebp
adcb
xchg
pop
lahf
in
dec
mov
icebp
xchg
lahf
ljmp
leave
cmp
sbb
dec
imul
sbb
add
dec
js
jle
mov
adc
imul
gs
movsl
aad
ja
dec
loope
rcrb
ret
jg
jne
inc
xchg
jnp
add
push
das
hlt
or
stc
and
std
fwait
push
pushf
pushf
sti
or
std
popf
mov
push
cmp
push
push
nop
fisttps
pop
mov
mov
mov
mov
call
nop
and
and
xchg
stos
enter
subb
sti
sub
xchg
adc
and
xchg
leave
nop
xchg
mov
mov
mov
testl
push
rolb
outsl
ja
sbb
add
fsubrp
mov
adc
sbb
xor
add
pop
mov
jmp
xchg
dec
xlat
cmp
sbb
jp
ja
add
aaa
pop
idivb
cmp
or
aas
adc
mov
test
sub
nop
lds
push
imul
je
int
loopne
lret
scas
pop
jo
sbb
das
jno
clc
lea
in
enter
pop
mov
push
lea
push
cmp
sub
and
idivb
jp
mov
lods
data16
int3
jnp
andl
add
mov
adc
sub
jp
cmp
mov
add
pop
xor
mov
scas
mov
aad
movsl
mov
mov
pushf
add
test
pop
mov
and
pop
mov
push
lea
lret
sub
mov
jmp
mov
cmp
dec
push
xor
sub
fwait
shl
inc
dec
jp
adc
add
mov
jmp
cmp
push
push
cmp
mov
mov
and
mov
insl
ljmp
in
mov
pushf
inc
pop
fnstenv
sbb
je
pop
test
aas
mov
sbb
sbbb
stos
push
arpl
inc
jl
adc
and
pop
sub
ljmp
fmul
dec
mov
pop
inc
bound
pop
enter
xlat
adc
push
out
push
push
scas
pop
js
xor
or
push
ret
rorb
out
lock
test
in
pop
jge
add
sbb
adc
pop
push
lcall
addb
xchg
clc
shr
dec
push
fucomip
cld
pop
sub
arpl
and
jl
jge
mov
cli
push
add
ljmp
stos
inc
fsubr
shll
xor
jle
jecxz
xor
mov
aad
mov
push
sti
dec
xor
sbb
rorb
lret
and
mov
jno
pop
sbb
out
mov
fld1
push
sbb
pop
jo
lahf
add
out
stc
inc
test
lret
aas
icebp
adc
sub
cmp
scas
scas
popf
xor
mov
ljmp
popf
in
mov
cli
xlat
loopne
stos
movsl
ja
xchg
out
jle
mov
pop
addb
les
movsb
or
enter
subb
icebp
push
pop
movsb
cmpsb
dec
mov
sbb
add
jg
xchg
in
mov
in
add
or
fcomi
push
jo
inc
fcmove
test
adc
mov
fwait
repz
js
pusha
xor
add
xchg
push
iret
cmp
lock
inc
adc
aam
or
xor
ja
fisttps
pop
fwait
int
test
cmp
xchg
mov
adc
jne
adc
or
mov
mov
fs
repnz
out
mov
mov
leave
sbb
gs
mov
sarb
and
or
dec
sbb
ja
ja
int3
add
jae
xchg
fldt
pop
xor
out
cli
movsl
jle
in
inc
lahf
std
rorl
inc
add
xchg
mov
push
mov
lret
bound
in
pmaxub
orb
xchg
push
ds
jne
pop
xchg
inc
leave
test
lods
pop
mov
mov
imul
pushf
sbb
movb
cs
stc
roll
dec
bound
xlat
pop
in
xchg
push
scas
lret
leave
shrl
jae
pop
xchg
ret
pushf
inc
mov
dec
fsubs
lret
dec
idivl
mov
arpl
std
aaa
std
ss
mov
loope
je
mov
adc
mov
mov
mov
ja
inc
mov
lea
inc
lods
mov
xor
sub
xor
pop
lods
das
sub
xchg
and
loop
or
jp
in
loope
sub
sbb
sbb
mov
loopne
add
pop
sub
mov
or
out
push
inc
sbb
hlt
mov
adc
roll
and
sub
daa
push
test
repz
pop
imul
insb
loop
imul
adc
xor
sbb
enter
and
sbb
pop
push
in
les
xlat
pop
fiadds
cmp
daa
sbb
inc
cmp
push
in
clc
aas
pop
xchg
pop
dec
in
in
rorl
or
pushf
sti
sub
push
add
add
adc
xlat
xchg
and
loopne
in
in
ja
out
and
mov
cld
outsb
sbb
fwait
popa
stos
addb
leave
fsubrs
jecxz
adc
arpl
scas
inc
movsl
mov
or
test
jle
jbe
xchg
sub
loopne
xchg
cli
push
lods
cmp
pop
dec
in
mov
pop
das
jns
push
cmpsl
inc
sgdtl
push
cmp
pop
das
mov
int
out
cmp
mov
fdivrl
test
sbb
push
cmp
pusha
push
int3
push
push
gs
rclb
sbb
xchg
loope
rol
enter
lret
pop
xor
push
in
hlt
add
jmp
bound
push
in
push
xchg
into
jecxz
stos
insl
mov
ret
jmp
stos
faddl
mov
cmp
ja
adc
inc
fcmove
pop
adc
mov
adc
jmp
fucomi
or
sbb
into
jecxz
lret
sbb
test
xor
mov
or
push
adc
mov
movsl
xlat
mov
sub
cmp
mov
stos
push
and
int3
into
or
mov
cmc
xchg
sahf
dec
xchg
gs
out
ret
hlt
adc
push
and
pop
jle
dec
xor
xor
dec
aaa
int3
lcall
cmp
jb
xor
shr
pop
pop
push
fmuls
in
nop
scas
sbb
pop
bswap
dec
add
mov
jns
xchg
icebp
sbb
dec
cmc
and
fs
pop
rolb
ret
mov
push
aas
stos
nop
push
aam
mov
loopne
lret
test
push
jno
lcall
mov
test
enter
gs
cmp
mov
loopne
ficoms
dec
rcll
push
out
enter
push
or
out
sub
push
push
movsb
pop
mov
fwait
adc
nop
mov
ret
into
xlat
or
insl
repnz
dec
scas
mov
xchg
pusha
dec
push
jno
dec
test
out
add
dec
ret
mov
or
mov
jns
ss
pop
push
scas
ds
dec
push
push
mov
mov
orb
xor
adcl
cltd
push
sbb
aas
sahf
mov
idivl
fisubrs
or
or
or
inc
sahf
or
push
ss
test
fsub
rcl
sub
repnz
add
test
mov
sbb
adc
nop
call
push
pop
mov
push
pop
in
sbb
push
cmp
mov
nop
rcll
pop
test
shl
pop
push
rolb
lds
dec
clc
sti
push
lock
add
jno
aad
xor
stos
ja
sbb
mov
jo
popf
jle
add
xchg
rcrb
fs
pop
or
pop
insb
cmp
or
int
imul
mov
and
inc
mov
push
imul
ja
lods
dec
out
jle
call
pop
push
loopne
inc
stc
and
and
jge
sub
cwtl
xchg
ret
add
into
loopne
jecxz
aad
bound
inc
movsl
lods
xor
cwtl
push
dec
andl
popf
push
fldt
outsb
jnp
aas
sub
and
lret
insl
hlt
jmp
es
jne
dec
cld
sbb
pop
jecxz
les
jle
into
pop
jbe
sbb
lds
jbe
ss
jnp
fimuls
dec
push
jmp
out
ds
cltd
ss
subl
lds
nop
push
add
xchg
roll
dec
mov
adc
jb
push
mov
jmp
jnp
imul
adc
fnsave
cmpsb
pop
movhps
mov
test
lahf
les
jo
jmp
mov
sbb
stos
xchg
jnp
lret
cwtl
test
sti
mov
add
fldl
rol
cmp
ljmp
sbb
push
hlt
mov
mov
adc
mov
js
cmpsb
out
daa
or
and
push
push
in
inc
stos
jl
out
ja
addb
leave
cs
adc
mov
push
mov
mov
xchg
cs
push
cmpsl
xchg
pusha
cmc
dec
int
pop
mov
pushf
xchg
faddl
enter
pop
mov
fs
fwait
mov
daa
push
icebp
insb
leave
inc
pop
shll
dec
jecxz
cli
inc
cmp
dec
cli
sbb
mov
jbe
stos
outsb
ficompl
mov
loopne
jle
addl
mov
lret
ljmp
push
cmc
xchg
dec
mov
push
and
cmc
dec
push
das
and
or
fcomi
lea
push
push
clc
sbb
jb
outsl
fsts
jmp
dec
sub
into
les
or
insb
mov
inc
mov
jg
sbb
jg
mov
jp
xchg
or
sub
test
lea
mov
and
or
pop
imull
or
mov
shll
xor
inc
mov
cmp
sbb
adc
push
adc
pop
sbb
add
sbb
jbe
and
scas
stc
cmp
adc
jg
pop
pop
out
dec
das
lcall
sbb
push
lea
fdivrl
insl
lea
push
setl
stos
mov
int3
jno
mov
cmp
decb
push
jb
mov
ret
sbb
int3
lcall
aad
ffreep
xor
or
subb
shrb
fwait
sbb
aaa
loop
inc
scas
xor
fdivrl
repnz
in
dec
in
outsl
and
jp
push
in
idiv
incl
ja
jnp
lock
out
imul
mov
push
mull
outsb
or
insb
icebp
jno
out
imul
arpl
xor
pop
lahf
fstpt
lahf
insb
inc
adc
out
cmp
ds
jg
push
or
mov
shr
sbb
int3
pop
and
cwtl
mov
loop
xor
mov
mov
es
inc
dec
imul
cmp
push
inc
push
aaa
jb
lods
test
push
xchg
arpl
inc
mov
mov
popa
xor
rorb
insb
jg
fidivs
out
push
lret
rcrb
adc
dec
cmp
sub
push
imul
rcrb
cld
pop
sbb
test
mov
int
pop
xchg
add
movsb
ljmp
add
jmp
adc
shlb
adc
sbb
sarl
ret
ret
repnz
jge
inc
jnp
cmp
dec
adc
sbb
hlt
dec
xchg
add
sbb
insl
sbb
sar
clc
or
icebp
jne
cld
lods
inc
xchg
mov
test
stos
xor
test
imul
orl
inc
in
mov
and
xor
lock
gs
inc
lods
arpl
scas
lret
stc
xchg
imul
inc
add
fiaddl
mov
push
ficompl
lcall
pop
xchg
push
fsubrl
jbe
lods
xlat
les
jle
movsb
nop
test
bnd
roll
pop
sub
es
pop
stc
jl
push
push
jo
mov
scas
cwtl
xor
filds
adc
add
cmpsb
mov
stc
sbb
movsb
rclb
dec
sub
pop
adc
movb
sbb
pop
jae
fsubrp
jns
mov
push
jns
mov
push
imulb
lock
or
xor
test
nop
mov
leave
into
adc
jmp
and
jno
out
mov
or
adc
fwait
mov
push
mov
es
js
xchg
mov
jmp
call
fmul
cmp
rcr
and
mull
xchg
sbb
loopne
mov
movsb
or
cmp
insl
loopne
repnz
shrl
sub
adc
xor
inc
adc
adc
ljmp
or
inc
xor
fcomps
xlat
dec
ja
pusha
mov
fwait
push
cmp
inc
adc
xor
xchg
dec
ja
cmc
sub
mov
jmp
hlt
mov
mov
jns,pn
out
adc
fs
test
fildl
xchg
fsubrs
or
repz
mov
sub
mov
xchg
jne
mov
fmull
fstps
pusha
dec
cmp
int3
jg
bound
sbb
insb
loop
jnp
loopne
xchg
pushf
imul
stos
shr
jno
aas
or
pop
divb
xchg
je
test
mov
sti
xchg
xchg
loopne
push
or
leave
inc
xchg
inc
lods
sbb
sub
xor
das
cli
cmp
das
xchg
out
sarl
sbb
add
inc
clc
cmp
push
pop
lret
sub
sbb
outsl
fsubr
xor
mov
adc
lcall
pop
insb
jle
inc
jmp
push
gs
mov
in
iret
pop
inc
dec
dec
clc
mov
and
add
inc
jg
ss
add
fs
repnz
lea
sub
xor
add
xchg
xchg
fdivrs
cmpsl
shlb
scas
add
lods
icebp
movsb
insb
and
pop
pop
push
insb
adc
arpl
shll
cmp
dec
jns
mov
jmp
mov
sbb
aaa
dec
negl
jmp
sahf
jg
inc
dec
popf
out
or
cli
stc
sti
adc
adc
stc
lcall
adcb
cmpb
jg
shrl
adc
inc
repz
aam
std
pop
aad
fstl
xlat
stos
pop
loope
pop
sub
add
popa
sar
gs
movsl
daa
or
daa
outsb
fldcw
cmp
mov
jl
aaa
das
or
mov
pop
andl
or
addr16
inc
jle
mov
dec
mov
jae
mov
xorb
data16
push
rep
cmp
fdivp
mov
aam
jns
push
stos
mov
enter
push
cmp
lcall
mov
mov
insb
sub
cmp
cmp
xor
adc
popa
lods
scas
fisubrl
ss
cld
cmpsl
mov
or
adc
inc
cli
pop
lds
xchg
aaa
lds
jp
xchg
imul
add
fcmovne
insl
fwait
out
mull
fcmovu
scas
push
shll
ret
xor
lods
xor
das
or
cmp
rolb
xlat
adc
mov
in
pop
cmp
movsb
xchg
test
sbb
jns
insb
pop
jnp
aaa
nop
fnstenv
fisubrl
jp
pop
andl
jle
push
jmp
fldl
inc
dec
icebp
adc
loope
xchg
iret
adc
cmp
jb
loop
xchg
ja
in
dec
fisttps
inc
aas
add
jo
inc
mov
mov
adc
lret
fidivs
fwait
mov
push
xor
dec
jno
inc
bound
lret
dec
push
xchg
sub
jecxz
pop
mov
inc
bound
and
mov
xor
movsb
push
daa
jae
imul
std
pop
mov
popf
adc
aas
inc
xchg
fimuls
jno
out
sbb
stos
insl
cmpsl
dec
movsl
pusha
adc
cmp
sbb
leave
lret
sbbb
push
icebp
jo,pn
push
loope
mov
cmp
sub
scas
sbb
lret
mov
push
lahf
mov
das
les
xchg
or
hlt
sub
pop
ja
cmp
lcall
out
pop
add
inc
lock
dec
aad
xchg
and
nop
ret
sbb
push
fdivrl
and
cmp
cmp
insb
icebp
repnz
cmpsl
cs
or
jnp
jmp
sbb
insb
jne
lcall
movsl
adc
xor
inc
pop
mov
mov
jg
fldenv
mov
cltd
pop
inc
mov
mov
pop
inc
jg
mov
pop
in
loop
pushf
pop
push
adc
cli
mov
jne
jecxz
cmp
fiadds
mov
and
fsubs
fsubrp
and
jno
and
adc
sbb
mov
bound
stos
rcll
test
jge
mov
jae
mov
aaa
ret
jbe
xchg
adc
cld
and
mov
xchg
gs
or
outsb
rolb
push
scas
insl
adcl
mov
mov
out
jae
cmp
push
push
loopne
push
jp
push
xchg
and
fcom
pop
mov
push
cltd
jns
adc
push
xor
shr
push
xchg
loope
ds
loop
mov
xor
jle
sub
lahf
adc
sahf
pop
mov
aas
cmp
sub
rorb
mov
lods
pop
loope
sub
push
and
jge
xor
arpl
mov
out
cmp
and
jecxz
das
out
mov
out
rolb
xcrypt-cfb
cmpsl
and
inc
cmp
std
push
nop
xor
sub
adc
pop
aad
iret
hlt
orl
iret
shll
add
mov
sbb
fdivl
hlt
mov
adc
jns
imull
xor
mov
push
jg
or
fninit
pushf
scas
lods
fwait
adc
hlt
inc
and
xorb
std
lock
jecxz
or
inc
inc
ss
mov
lret
pop
fs
pop
push
jbe
jle
in
shrl
shrb
jl
and
xchg
leave
push
jge
adc
out
aam
sub
daa
xchg
dec
add
icebp
xchg
inc
adc
dec
psrld
and
rclb
push
ret
push
addr16
jge
jl
mov
cmp
mov
fs
add
xor
and
sub
ret
push
into
pop
jecxz
mov
int
pusha
repnz
daa
xchg
push
mov
xchg
mulb
dec
sbb
cld
popf
jae
inc
xlat
imulb
push
shl
fcmovne
jns
movsl
in
scas
push
xchg
sbb
jle
daa
imul
sbb
lods
mov
adc
xor
divl
out
idivl
adc
loopne
cmpsl
sub
sub
xor
cmp
cmp
pop
dec
rorl
fucomp
adc
or
inc
dec
test
dec
cltd
stos
aaa
lea
dec
inc
out
stos
shll
daa
fcompl
sub
push
mov
dec
xchg
inc
sub
adc
jp
adc
cmp
sti
pushf
lods
xchg
pop
call
dec
mov
repnz
pop
sbb
lcall
pop
mov
cmp
sub
lods
aam
dec
leave
mov
aaa
and
jle
sahf
jnp
cmp
ss
mov
mov
hlt
mov
addr16
add
cmpsl
insl
push
cmpsl
icebp
mov
aad
and
push
dec
lea
dec
mov
je
push
rorb
cmpsl
ss
sbb
adc
test
fistps
ds
mov
adc
or
mov
push
loope
arpl
imul
call
sbb
sbb
mov
mov
sub
inc
mov
mov
ja
loop
xchg
mov
data16
mov
insb
nop
cmp
ret
popa
mov
stc
sbb
call
push
adc
xchg
enter
lret
test
sbb
inc
push
pop
mov
hlt
push
mov
mov
filds
add
inc
out
mov
ja
sbb
jmp
cli
clc
js
cltd
cmp
push
mov
xorl
roll
mov
dec
xchg
add
jecxz
mov
jle
xor
test
movsb
sub
or
test
jbe
xor
cmpb
ja
insl
sbb
nop
dec
push
ds
addl
cli
out
lret
or
repnz
mov
lods
fstpt
gs
mov
xor
sub
fidivs
adcl
or
icebp
aas
test
push
sbb
cmpsb
in
add
stos
jae
sub
push
add
cmpsb
mov
shll
sahf
push
cmpsb
test
mov
cli
in
or
mov
mov
ficompl
jns
pop
test
pushl
or
icebp
adc
nop
imul
jnp
push
cmp
addl
das
cmp
push
mov
push
sub
loope
jecxz
movsb
shrb
aam
xchg
dec
andb
inc
shll
jl
fisubs
pop
xchg
jb
mov
ljmp
jmp
cli
mov
loopne
xchg
fs
mov
jecxz
fcom
jo
push
cmp
insl
inc
jmp
inc
xor
push
movsl
pop
mov
push
imul
mov
xorl
gs
out
mov
idivb
lea
sti
xlat
inc
pop
mov
fbld
cmpb
push
mov
or
dec
ljmp
mov
dec
aam
out
lahf
adc
nop
add
pop
or
jp
sub
test
lock
stc
xor
adc
dec
adc
adc
pushf
cmp
adc
lods
adc
pop
call
movlps
fisubl
dec
sub
sbb
jbe
add
in
and
cli
push
out
add
popa
popf
bound
and
sbb
testb
sbb
cmp
push
xor
enter
push
inc
jne
push
stos
lock
mov
sbb
popa
adc
leave
clc
inc
inc
insb
jmp
sahf
sbb
cmp
fimull
dec
jne
scas
jns
add
mov
inc
rorb
lods
xor
lret
jmp
cmp
inc
movsl
push
xchg
sub
lods
hlt
loop
mov
insl
push
mov
or
or
das
jle
pop
scas
or
dec
ficompl
loope
inc
scas
pop
gs
mov
es
fdivrp
or
add
stc
mov
dec
xchg
mov
rorl
mov
lods
test
adc
mov
adc
je
or
xor
das
or
lret
xlat
pop
xlat
stc
loopne
addr16
cs
fs
or
mov
mov
xchg
das
xor
sub
jb
and
mov
adc
lds
push
ret
mov
jne
pop
mov
mov
or
mov
shrl
stos
std
sti
xchg
icebp
imul
aaa
repnz
cltd
jb
push
xor
jle
sub
bound
jne
pop
test
insb
mov
inc
inc
push
in
sbb
mov
push
dec
adc
daa
push
pop
mov
xchg
rcll
sbb
push
mov
pop
movsl
cltd
cmp
and
addr16
ljmp
push
das
je
mov
fcoml
inc
adc
ss
stos
inc
gs
fildl
sub
sub
ja
dec
push
popa
in
shlb
das
inc
jg
xchg
adc
cmpsl
out
jno
ret
mov
push
out
ljmp
sub
stos
xor
jo
mov
dec
lahf
sub
fdivl
xchg
popa
leave
dec
mov
push
xor
mov
inc
stc
jge
loopne
mov
insb
push
or
cmp
loopne
test
loopne
in
fdivr
lods
push
lods
lock
icebp
cmp
push
out
cs
rorl
jg
cmp
and
mov
xchg
js
insb
sbb
xchg
push
sub
adc
mov
out
and
sub
inc
hlt
data16
das
sbb
cmc
xchg
mov
dec
sub
orb
daa
rcr
jg
inc
adc
stc
out
dec
test
sbbl
jno
xor
xchg
cmp
jge
clc
rcrl
cli
fdivs
mov
push
popa
mov
enter
sub
sbb
jb
add
gs
js
mov
pusha
lret
sbb
subb
inc
cmc
inc
sti
mov
hlt
xchg
mov
out
mov
push
dec
xor
cmp
mov
movsb
pop
subl
adc
sbb
lods
push
cmpsb
lahf
fs
ffree
jge
call
jle
xor
ljmp
movsb
cmpsl
in
fisubrl
xorl
test
pop
push
mov
pop
ficomps
insl
inc
sti
jmp
xor
popl
in
xchg
mov
pop
sbb
xor
sub
lahf
pusha
sbb
mov
lret
or
fidivrs
scas
dec
adc
ja
add
xchg
xlat
dec
in
stc
add
bound
data16
imul
cmp
cs
stos
inc
cltd
in
std
ffree
mov
and
fisubrl
cld
lret
lds
mov
aaa
aam
or
inc
push
push
mov
xchg
cli
xchg
imul
mov
mov
adc
test
and
lahf
jbe
sti
push
cmp
notb
sub
fdiv
call
sar
push
repnz
push
jp
push
jmp
push
ljmp
mov
js
mov
int3
imull
lret
orb
popa
push
xor
jnp
jae
les
or
push
inc
mov
inc
pop
shrl
cmp
arpl
jne
repnz
mov
jle
mov
add
adc
aaa
pop
jg
inc
xchg
int3
cmp
jle
cmp
repnz
mov
dec
sub
rcrl
inc
lods
jns
xchg
xor
push
in
int
lcall
push
sbb
push
std
lea
jle
jns
add
lret
sar
test
mov
movsb
testl
in
bound
push
xchg
push
gs
repz
push
aam
imul
in
add
inc
xor
fst
aam
fcomps
test
adc
jnp
adc
in
cltd
icebp
pop
inc
shlb
icebp
aaa
mov
or
add
mov
in
sahf
les
enter
out
mov
lock
idiv
and
cmpsl
jmp
sbb
cld
lods
insb
in
inc
mov
pusha
cwtl
hlt
push
dec
xor
dec
cmp
ss
adc
repnz
and
xlat
aaa
mov
mov
push
cmpsl
cmpsl
cmpsb
pop
sbb
jno
cmp
fidivrs
lock
cmp
test
push
dec
jge
bound
fcomp
and
pushf
roll
or
pop
andb
and
fwait
icebp
cmp
test
lock
mov
sbb
xor
mov
jmp
lret
nop
ret
sbb
or
jne
fdivrs
pmaxsw
nopl
cmp
bound
dec
int3
test
lods
push
pushf
fidivs
sar
fimuls
addr16
repnz
lret
ret
clc
push
sbb
push
hlt
mov
xor
js
ss
fldt
stos
xor
xor
lds
ljmp
and
adc
jmp
insb
adc
mov
rcrl
repnz
ret
movsb
xchg
jl
mov
jle
cmpsb
mov
ficoms
loopne
pop
mov
aam
sarb
out
in
pop
sub
test
push
test
xor
jmp
xchg
inc
in
pop
cmp
clc
cmp
cld
mov
push
cmpsb
push
lcall
add
fimull
jo
sbb
xlat
sti
push
les
inc
lock
daa
push
nop
out
gs
ja
sub
loop
sub
xor
mov
cli
push
movsl
jo
insl
insl
out
push
ret
jg
xor
push
hlt
loop
inc
jae
lods
sahf
pop
repnz
jnp
mov
out
icebp
sti
sub
aad
pop
lds
cs
nop
dec
sub
stos
rolb
jp
mov
mov
ja
xchg
test
mov
in
les
test
stos
addr16
cs
xchg
les
cwtl
les
insb
push
push
mov
rcll
fdivrs
test
lods
push
fldt
xor
popa
cmp
jne
mov
jmp
fcomps
mov
add
add
sbb
ss
sbb
xor
pop
fcmovnbe
mov
push
jg
sub
push
in
sub
std
pop
xchg
inc
icebp
js
ss
mov
dec
leave
inc
sbb
and
fwait
mov
push
xorb
and
jp
aad
dec
inc
xlat
bnd
mov
repnz
and
sti
data16
push
push
cmp
enter
push
aam
pop
dec
ds
dec
imul
jo
dec
ds
mov
lahf
push
loop
aas
in
cmovg
mov
mov
add
pop
adc
add
add
bound
or
pop
inc
sub
lock
aas
mov
std
inc
lods
lcall
notb
ds
or
outsb
jns
mov
pop
xchg
push
imul
fistl
sub
jne
lock
testb
push
xchg
iret
ret
push
sub
jp
movsl
ret
push
cmp
jb
sahf
dec
cltd
jle
lret
sub
push
adc
mov
popl
push
inc
sub
js
outsb
lret
pop
aad
fstl
pop
add
xorb
addl
nop
dec
sub
test
rcrb
lret
icebp
mov
sbb
jnp
mov
pushf
mov
shrl
fistl
cmp
rcll
mov
loop
jne
nop
push
jne
stos
xor
es
xchg
push
and
std
repnz
sti
mov
cmp
ret
jl
lock
pushf
xchg
loope
cli
xchg
dec
lcall
pop
in
inc
std
repnz
sub
jns
decl
sbb
mov
mov
mov
and
ror
jmp
outsb
cmp
and
addr16
pusha
inc
lds
jnp
repnz
test
cmc
xchg
and
pop
std
mov
xor
dec
lahf
incl
cld
inc
adc
ds
and
mov
pop
hlt
ss
addr16
inc
add
add
aam
or
loop
mov
addr16
scas
xchg
enter
push
pusha
and
fildl
ja
xor
lahf
push
push
adc
fwait
mov
mov
jmp
sub
sub
mov
ljmp
mov
or
jbe
sbb
shll
mov
cmp
cmp
int3
scas
lahf
push
jbe
mov
xchg
daa
xlat
pinsrw
test
icebp
aas
jnp
sbb
ret
and
fs
std
xor
repz
pop
cmc
mov
push
clc
jae
in
aas
mov
sbb
aas
sub
inc
fsubrp
in
dec
dec
in
or
mov
pop
mov
cmpb
inc
fists
outsl
fcom
sbb
sub
scas
leave
sub
ret
jbe
iret
pop
insl
dec
and
sbb
ret
lock
pushf
iret
out
xor
in
lea
or
add
dec
xor
mov
or
mov
sub
je
enter
xchg
mov
daa
test
ljmp
cltd
stos
std
push
mov
outsl
mov
iret
jae
adc
adc
xor
stc
sbb
xchg
dec
dec
xchg
push
xchg
add
xor
push
ret
cmc
scas
pusha
pop
jge
mov
popf
mov
mov
js
jle
sbb
nop
rorl
mov
jno
mov
jmp
xchg
jecxz
xor
or
xor
fbstp
aad
jb
mov
pop
roll
pop
pop
pop
movsb
xchg
jmp
pop
nop
movsl
cmp
popf
aas
add
push
mov
imul
loop
inc
out
or
das
jo
cs
sbb
test
xor
fsubl
jo
lods
insl
push
dec
mov
fistpll
ret
scas
je
lea
adc
fstpl
insl
sahf
mov
mov
pop
dec
dec
jg
inc
pop
daa
popf
xchg
dec
dec
push
add
call
sahf
outsl
gs
jge
jno
xchg
insl
int
iret
jle
mov
nop
sub
pop
or
addb
xor
xor
dec
out
push
cli
mov
sub
dec
pop
das
mov
jnp
sbb
arpl
jp
rorb
dec
mov
mov
sti
into
xchg
and
mov
movl
dec
push
les
push
or
outsl
push
jg
or
rorl
sub
xor
cli
add
imul
aaa
dec
lret
mov
pop
out
sbb
jno
sbb
cmp
adc
mov
add
sahf
mov
cmp
stc
mov
pop
mov
xchg
xchg
icebp
cmp
mov
mov
icebp
inc
xchg
hlt
or
dec
fdivs
ja
test
call
repnz
divl
je
push
js
inc
sub
leave
insl
leave
pop
movsl
add
cmp
xchg
in
push
js
insl
pop
adc
push
ja
dec
pop
mov
call
adc
push
or
clc
sub
and
mov
mov
pop
jmp
cmc
mov
dec
rcl
add
sbb
or
add
and
dec
adc
sbb
inc
mov
cmp
mov
xor
sub
mov
mov
xchg
test
outsl
mov
cmp
into
repz
iret
sbb
mov
mov
push
inc
andl
cmp
insb
rcr
dec
ja
stos
mov
adc
pop
popa
es
add
xlat
pop
fbld
inc
push
inc
leave
sbb
stos
sar
inc
int
mov
mov
clc
arpl
mov
movsl
push
xchg
push
pop
int
cmp
icebp
inc
arpl
loope
aam
xor
adc
mov
mov
jns
cmp
int3
jmp
cs
xor
std
stos
pop
and
std
lret
pop
repnz
mov
je
push
pop
shrl
inc
fimuls
addr16
ds
xchg
xlat
fstpl
add
or
and
ja
or
dec
popa
enter
dec
cmp
jae
jle
test
or
pop
arpl
push
mov
mov
sub
mov
cmp
or
dec
xor
aad
pop
xor
adc
jno
cltd
icebp
imul
cmp
or
scas
or
popa
test
out
test
nop
int
pushf
sahf
push
pusha
push
pop
ret
sbb
fneni(8087
inc
mov
pop
xor
dec
cld
loop
call
sub
adc
ss
imul
arpl
push
ficoml
pop
insb
icebp
cmp
stos
ljmp
mov
adc
pop
test
cld
push
jmp
xor
pop
out
sti
dec
pop
imul
out
rcrb
outsb
data16
stos
nop
movsl
jle
insb
mov
in
lret
mov
mov
je
inc
std
cmp
adc
orb
inc
lret
push
arpl
push
push
cmp
sbb
sub
cltd
xchg
xchg
sbb
in
jns
mov
in
xchg
aaa
std
pop
mov
popa
and
inc
mov
sub
cmp
xlat
inc
push
mov
clc
hlt
dec
int
jecxz
arpl
je
lret
cmp
lods
call
shl
jae
cli
std
ljmp
or
dec
out
mov
or
out
sbb
dec
push
flds
pop
cmpsl
lret
push
scas
mov
iret
fdivl
fldl
and
xchg
ja
xor
cmc
jno
lods
jmp
pusha
pop
sti
movd
dec
cmpsb
mov
inc
sar
xor
adc
clc
pop
fwait
aaa
aad
fnsave
xor
push
outsb
rcl
scas
enter
push
and
mov
jge
gs
divb
out
and
push
push
jae
fstpl
mov
outsb
lret
push
or
clc
add
lds
repz
test
aas
test
lods
adc
int
adc
loope
rorl
sbb
sub
mov
iret
pop
adc
in
stos
popa
out
dec
iret
in
mov
xchg
jmp
cmp
out
add
dec
xchg
jge
lahf
inc
lcall
inc
andb
jl
les
sub
sbb
popf
or
in
pop
inc
cwtl
movl
fs
test
sbb
bound
mov
sbb
cltd
jle
gs
cmp
movsb
loop
daa
pop
cmp
mov
scas
movsl
and
stos
in
fwait
and
hlt
mov
addr16
cs
jbe
fwait
nop
dec
ret
pop
adc
sahf
adc
stos
xchg
test
or
adc
cmp
cmp
popa
sub
shr
mov
or
sbb
sbb
lret
out
pop
push
imul
cltd
or
mov
fcoms
mov
cmp
orl
lcall
adc
fsubrs
push
jo
imul
sub
jns,pn
mov
and
cwtl
or
xchg
xchg
mov
sub
cwtl
dec
cmp
mov
jns
or
imul
jp
cld
test
ret
sub
in
xchg
mov
lret
arpl
repz
push
int3
inc
movsb
aaa
movb
rcll
push
cmp
jnp
adc
je
repnz
in
stc
or
nop
push
or
inc
sub
jno
xchg
push
rorb
std
lods
jmp
sbb
imul
int3
icebp
out
inc
inc
jnp
sub
int3
ret
mov
xchg
xor
in
nop
subl
js
push
sarl
iret
repz
js
les
outsl
rcrl
sti
jbe
add
xlat
and
lods
cmpsl
mov
and
fwait
xor
aas
addl
iret
ds
mov
sahf
sub
mov
fldl
in
mov
out
cmp
testl
and
jle
dec
mov
cmp
push
mov
mov
sub
push
mov
sbb
adc
data16
jmp
push
add
jmp
mov
das
loop
popf
ret
mov
inc
cmpsb
lea
or
and
mul
mov
cld
mov
sub
push
dec
cwtl
fcmovne
mov
add
dec
cmc
jl
jb
xchg
inc
inc
xor
or
xchg
cmc
inc
js
popa
sub
xor
pop
in
aad
push
mov
fidivrl
ret
clc
pop
cmpsb
mov
cltd
les
loopne
xorl
mov
and
loope
movsl
shlb
push
jg
das
adc
push
adc
sbb
ret
mov
sahf
pop
dec
lret
mov
push
sub
rorb
ret
jecxz
outsl
or
in
push
pop
or
cli
xchg
nop
aad
stos
mov
mov
adc
dec
jne
fcomp
adc
lods
test
test
shl
xlat
xorl
xor
xchg
inc
jne
loopne
mov
jecxz
jbe
xor
mov
in
fistpl
cmp
push
pop
cmp
cmc
jg
ljmp
inc
cmpsl
mov
sbb
mov
cld
insl
cmp
push
dec
or
and
mov
add
mov
mov
mov
inc
in
je
fsubrs
or
popf
iret
nop
xchg
push
sti
loop
mov
ljmp
cltd
scas
cmpsl
push
sbb
sti
call
ret
cmpsb
cmp
pop
sbb
xchg
xor
add
in
loopne
sub
aam
cli
and
inc
out
lret
or
lods
idiv
stos
adc
scas
fdivs
hlt
pushl
sbb
das
inc
sub
sti
mov
daa
rclb
test
shlb
mov
sbb
stc
pop
pop
cs
dec
lret
sbb
mov
lahf
sbb
jne
sub
mov
pop
loope,pt
addr16
dec
jno
dec
sti
jae
insl
fsubs
cmp
pusha
push
cmc
push
test
dec
in
lahf
jnp
dec
pushf
or
dec
dec
adc
or
stc
in
mov
pushw
adc
push
das
push
push
cmp
es
ja
imul
xchg
xor
test
fcmovbe
out
data16
aad
sarb
xchg
add
pushf
push
out
jns
test
out
leave
push
hlt
popa
lret
sbb
cmpsb
repnz
mov
popa
pop
shll
sub
outsl
test
push
out
xor
adcl
insb
mov
jle
xor
inc
mov
jae
xchg
pop
std
into
inc
jg
mov
jb
push
je
cwtl
sbb
shrl
inc
popf
jle
bound
sti
jecxz
cmp
cmp
dec
cmp
scas
xchg
into
int3
inc
int
dec
inc
cmp
xor
ret
or
movsb
xchg
sub
outsb
jae
stos
shl
sahf
jo
cmc
rclb
enter
fidivrs
push
cli
and
insl
lahf
lea
sbb
and
pop
divb
out
shll
add
push
cmp
les
push
popa
pop
cmp
pop
or
sahf
imul
cli
pusha
mov
adc
dec
dec
mov
push
out
xchg
cmc
pop
xchg
lds
xchg
dec
or
sahf
mov
xchg
mov
clc
jecxz
iret
out
aaa
inc
ljmp
sbb
cmpsl
es
outsl
push
pop
addr16
out
dec
repz
adc
mov
stos
imul
pop
pop
mov
addr16
outsb
jp
sbb
adc
add
stos
test
test
cmpsb
adc
into
pop
mov
call
sub
jmp
add
cmpb
cli
jl
cmp
jp
rclb
lods
adc
imul
pop
sahf
out
jmp
mov
mov
dec
bound
bnd
xchg
orb
ret
pushf
and
pop
cmpl
xor
sbb
or
inc
adc
in
mov
ficoms
sub
push
push
test
mov
cli
lcall
pop
and
inc
hlt
or
sbb
lea
lret
mov
pop
test
adc
sub
push
or
jne
loopne
and
icebp
or
idivl
mov
lods
inc
cmp
and
fwait
scas
pop
and
xchg
loop
sbb
cltd
dec
int3
xor
stc
stos
hlt
xor
push
push
dec
push
sbb
xlat
lods
xchg
mov
push
inc
pop
sbb
ljmp
out
loopne
inc
incb
lods
dec
inc
lahf
cwtl
int
fistpl
mov
cmc
negb
inc
and
lret
xorl
adc
popa
xchg
mov
pushf
fiadds
xchg
cmp
sub
push
xor
push
mov
mov
jle
xor
pop
and
pop
shrb
xor
push
test
lock
push
out
dec
gs
inc
dec
in
imul
jl
enter
xor
jle
dec
xor
arpl
and
pop
in
and
jg
jecxz
cmp
sub
les
dec
lods
push
or
and
cmpsl
pushf
mov
sub
stos
call
stos
and
ds
fwait
jmp
cmp
ja
cs
fldl2t
test
dec
ja
cltd
xchg
rcr
pushf
clc
xor
mov
add
popf
add
mov
sbb
xorl
sbb
testl
adc
inc
ret
xchg
inc
sbb
std
mov
hlt
into
gs
mov
mov
mov
push
sub
roll
jmp
xchg
mov
nop
stos
xchg
call
subl
adc
movsb
hlt
inc
push
or
mov
cmp
daa
scas
repnz
pushf
rcrb
hlt
js
enter
mov
jl
daa
test
sbb
jns
jnp
js
lahf
mov
xchg
aad
inc
fldenv
ret
pop
stc
jbe
add
test
inc
xchg
out
int3
in
inc
mov
sbb
subl
inc
cld
sub
js
xor
fmull
push
xchg
test
mov
mov
ds
cld
movsb
sub
push
movsb
xchg
in
ds
push
pop
xlat
jae
dec
imull
mov
pop
faddl
gs
cs
dec
mov
sbb
jmp
nop
lret
jmp
in
jmp
into
ret
imull
push
rolb
movsb
cmp
mov
xchg
jmp
imul
insl
jbe
ret
fsubrs
lock
mov
movsb
pop
lock
rcrl
mov
sbb
mov
xor
testl
arpl
ds
leave
aam
cld
dec
inc
pop
popa
sbb
jmp
push
lea
push
pop
push
nop
cmc
repnz
mov
push
mov
inc
mov
pop
cmpsl
mov
jno
loope
ret
in
loope
xlat
jae
mov
mov
outsb
dec
or
inc
xchg
push
repz
or
mov
pushf
jae
daa
jl
leave
and
adcb
mov
aas
jp
inc
fsubrl
cmp
adc
in
lahf
pop
shl
call
pop
bound
xor
aas
fildll
cli
in
loope
stos
or
dec
rcl
cmp
js
mov
push
popf
sti
shrl
iret
movsl
xchg
jae
icebp
or
stc
xchg
insl
cld
paddusw
ds
mov
aas
popf
lahf
scas
inc
nop
mov
call
or
enter
or
test
lret
mov
stos
inc
fwait
cwtl
loop
in
pop
adc
sub
dec
and
jp
sub
in
push
push
rorl
out
pop
sbb
fstpt
stos
ret
dec
mov
movsb
cmp
jbe
call
in
gs
ss
inc
out
dec
mov
bound
fldcw
mov
ja,pn
outsl
dec
lret
push
repz
and
xlat
push
js
enter
iret
adc
jg
sbb
iret
lds
adc
jb
sti
clc
sub
in
push
push
push
fcoms
pop
xor
or
dec
cmovbe
dec
imul
hlt
xorl
jle
and
push
jne
xchg
mov
pop
test
sub
cmp
hlt
mov
dec
mov
push
fsubrl
aaa
out
adc
loop
cmp
pop
fld
push
es
faddl
fldcw
int3
cmp
mov
dec
xor
lret
movsl
lods
int3
inc
cmp
icebp
xchg
dec
pop
xchg
icebp
xchg
jle
bound
adc
cwtl
inc
pop
adc
sub
pop
push
in
outsl
cld
xlat
sbbb
pop
jno
loopne
hlt
xor
mov
mov
fcmovb
xor
jmp
jmp
shrb
and
testb
add
pop
lret
popf
jnp
inc
xchg
sbb
neg
fcoms
cmp
and
jae
fildl
inc
rcll
mov
push
sub
test
aas
xchg
pop
or
in
cli
int3
push
repnz
jns
mov
add
push
in
fisubrl
mov
xor
push
xchg
rcll
mov
pop
je
jno
jae
ja
adc
cmp
fmuls
jl
xor
or
pop
iret
sbbb
fiadds
dec
lret
pop
xor
sub
shlb
ret
mov
repz
jbe
rcr
sbb
sbb
subl
mov
es
mov
xchg
ss
test
mov
and
xchg
or
xchg
loope
outsl
mov
jnp
orl
cmp
mov
and
enter
and
lods
cmp
mov
xchg
inc
into
daa
addr16
xor
mov
ret
xor
inc
das
lds
movb
mov
lds
arpl
jp
jae
push
aaa
add
pop
add
xor
out
ss
ret
mov
pushf
dec
push
xchg
dec
pushf
lea
xor
mov
js
cwtl
insb
pop
insb
cmc
and
negb
xor
mov
jecxz
jl
ds
or
ja
push
sub
sti
rclb
jmp
cmp
mov
sbb
push
dec
dec
dec
cmp
push
add
in
in
lods
in
lds
inc
push
and
hlt
mov
notl
dec
imul
fsts
sbb
ficomps
cltd
push
cltd
loopne
cwtl
cli
and
adc
cmp
or
push
rcll
inc
xchg
pop
test
lods
or
movsb
fidivrs
lock
test
out
imul
movsl
xorl
push
pop
mov
outsl
movsl
push
arpl
mov
cmc
test
push
push
or
test
cmp
or
aam
out
dec
xchg
sub
adc
and
xchg
push
push
mov
xor
and
push
inc
icebp
push
lods
js
mov
scas
loope
mov
jmp
mov
enter
inc
pop
or
nop
lods
sbb
popf
push
mov
outsb
push
cmp
dec
cli
fwait
push
jae
pop
fcoml
aaa
cli
mov
iret
push
pop
repnz
ja
xchg
out
bound
jo
mov
sbb
or
les
fcomp
inc
pop
add
mov
push
nop
mov
sar
arpl
fmuls
outsl
int
lret
lods
pushf
push
mov
pop
stos
mov
xor
mov
out
dec
cmp
fcomp
sbb
arpl
push
pop
mov
rcrb
addl
popa
ficoml
sbb
fisubrl
jle
cmp
fldt
leave
cmp
sub
int
and
rolb
out
hlt
out
fs
out
sahf
push
jp
movsl
outsb
cmpsl
ds
cmpps
jo
aas
adc
bound
push
jmp
mov
cmp
ds
or
cmp
fsubrp
scas
pop
lods
jge
ss
repnz
lods
dec
jle
pop
lods
push
loop
stc
inc
cmp
idivl
pop
xchg
fdivrl
mov
and
xchg
mov
test
sub
mov
sbb
inc
or
cld
mov
adc
adc
sbb
push
insb
xor
stos
sbb
fstpt
pop
sbb
jnp
push
testb
or
cmp
xor
outsl
rcr
or
pop
popf
mov
cmp
mov
sbb
inc
test
out
cmp
push
mov
or
es
push
push
addr16
push
arpl
cs
outsb
lret
xor
add
push
shlb
popa
and
jge
xchg
xor
mov
adc
cli
mov
fidivl
imul
push
inc
insl
js
ficompl
add
pop
orl
insl
jl
cmp
xor
push
mov
jo
call
pop
aaa
rorb
pop
imull
ljmp
xor
cmp
lock
mov
inc
daa
pop
in
lock
lds
ret
rcl
arpl
adc
scas
cmp
outsl
aas
push
sbb
stc
push
loope
sbb
jnp
in
cmp
jb
mov
xacquire
xchg
cmp
dec
sub
inc
add
pop
repnz
movups
lea
dec
movsl
jnp
in
cmp
nop
addr16
mov
into
popa
sbb
divps
aam
clc
mov
test
mov
dec
dec
mov
sub
rorl
mov
iret
mov
dec
sbb
fldt
mov
cmp
in
xchg
xor
lods
push
test
and
jmp
movsb
insb
jo
jle
jno
repz
sbb
shll
xchg
jnp
or
imul
daa
imul
test
loopne
js
arpl
mov
stc
inc
mov
inc
mov
mov
inc
and
sbb
jbe
mov
hlt
out
push
sbbl
or
add
push
and
add
dec
js
push
imul
pop
into
loope
xchg
and
inc
pop
inc
jp
push
pop
sub
mov
loopne
sbb
mov
push
push
dec
lcall
movsl
andl
inc
cltd
jp
and
push
adc
scas
cs
arpl
adc
push
xchg
hlt
call
nop
mov
leave
inc
xor
jmp
or
inc
sbb
aam
fucomp
pop
xchg
mov
das
icebp
jecxz
inc
sbb
xor
adc
sub
pusha
sub
jo
adc
out
xor
fldl2e
repnz
icebp
pop
xor
and
xchg
or
mov
pop
daa
push
and
inc
push
mov
iret
movsl
aam
sub
push
push
test
movsl
sbb
jp
inc
adc
data16
outsb
cmp
xchg
pop
push
sbb
sub
popf
shlb
adc
sbb
push
inc
call
addb
addb
sub
pop
dec
inc
shll
imul
pop
repnz
inc
pop
daa
test
xchg
sbb
mov
push
in
mov
adc
mov
jo
js
dec
adc
movsl
or
adc
int
mov
and
addl
or
pop
out
add
insb
mov
and
jne
sub
pop
cmp
rcrb
fdiv
xchg
int3
fucomi
jns
lahf
std
rorb
dec
jnp
pop
into
imul
loop
imul
testb
lock
mov
cli
test
insb
or
and
push
cmp
pushf
icebp
jno
jns
mov
and
aam
xchg
push
jmp
cwtl
leave
in
dec
jae
insl
out
push
lock
in
test
test
push
cs
adc
sub
repnz
lahf
std
icebp
shlb
inc
rorb
and
and
xchg
fstpt
lods
and
push
push
ret
shll
arpl
cmp
inc
pushf
pop
pop
xchg
fcmovnbe
fwait
movsl
push
mov
xchg
pop
fidivrl
cmp
mov
vcvtps2dq
mov
or
ja
gs
mov
xchg
or
rclb
lahf
inc
dec
pop
xchg
mov
push
xchg
out
mov
xor
aam
add
ja
or
pop
sub
out
mov
stc
loope
mov
in
mov
push
ss
sbb
cli
push
sbb
sar
inc
in
cs
sbbl
cs
xor
rorb
fbstp
push
test
add
ds
sub
lock
sbb
sbbl
and
outsb
clc
pop
std
leave
push
mov
into
testb
cmp
shll
push
pop
fldt
sahf
or
shll
arpl
pop
pop
scas
dec
mov
push
clc
loopne
mov
outsl
lock
insl
dec
xor
mov
lods
mov
pop
xchg
sub
and
cmp
jns
mov
jb
jg
jb
jge
adc
aad
or
inc
lock
notb
mov
dec
xchg
dec
mov
scas
pop
mov
jle
daa
adcl
outsb
mov
lahf
test
pop
fwait
or
cltd
in
fwait
and
xorl
lds
pop
dec
outsb
stos
mov
xor
dec
sbb
js
out
adc
dec
das
and
sarw
stc
push
push
in
insb
shll
xchg
mov
adc
mov
push
movsl
jge
aad
les
test
test
js
cmpsb
inc
inc
movsl
out
dec
jle
shll
in
rcrl
jge
jl
and
cmpsb
push
xor
sub
push
in
jle
xchg
xor
aam
cmpsl
mov
mov
push
pop
rolb
jp
ljmp
cli
mov
mov
in
pop
sarb
testb
cltd
xor
ljmp
std
or
repz
dec
loop
jmp
in
inc
scas
into
cmp
adc
test
push
mov
inc
xchg
lods
jl
lret
add
xor
adc
aas
xchg
jmp
cmpsl
and
in
enter
jne
lret
iret
push
push
xchg
pop
out
push
je
push
inc
shr
std
mov
push
repz
or
imul
enter
ds
cli
faddl
cmp
aam
sbb
std
jp
push
mov
test
jo
test
scas
loope
sub
or
adc
sbbl
or
and
cld
mov
sub
jnp
fmuls
xor
jno
nop
loop
cmp
std
mov
add
jle
ret
jb
add
imul
roll
cmp
andl
nop
pushf
shrl
cmp
inc
loop
int
fmuls
aaa
lods
out
lcall
sub
mov
jge
mov
mov
jmp
push
das
mov
mov
sbb
mov
mov
adc
dec
cmp
cld
adc
aas
xchg
jecxz
iret
cmpsb
inc
xchg
subb
mov
rclb
mov
ljmp
out
mov
dec
pop
arpl
addr16
jmp
pop
jnp
stos
dec
pop
icebp
push
cmpsb
lds
pop
call
adc
xlat
bound
pop
pop
xchg
and
and
fstps
cmp
mov
std
nop
sti
inc
mov
es
icebp
mov
jg
and
nop
xor
dec
xchg
jne
adc
aas
adc
push
adc
mov
stos
adc
in
and
ficompl
inc
mov
lret
rol
xor
mov
call
cmp
cmp
shrb
cmp
jb
push
lcall
mov
cmc
jno
stc
lds
loope
dec
loop
dec
out
xor
mov
sbbb
cmp
inc
push
add
mov
and
mov
inc
pop
cmp
nop
adcb
sar
cmp
bnd
sub
sub
lret
xor
and
lock
mov
mov
imul
xchg
push
icebp
mov
cmp
aas
loop
aaa
push
insb
pop
les
lcall
mov
push
lea
and
xor
mov
xchg
rorb
fnstsw
xor
stc
xchg
arpl
push
test
movsl
sbbb
out
ja
xor
bound
sahf
ficoms
test
stc
or
enter
into
movsb
rorl
mov
pop
insb
cmpl
loope
sub
push
cmpsb
int3
pop
icebp
inc
mov
popl
out
push
inc
add
lods
loopne
mov
aaa
mov
enter
jo
jmp
mov
pushl
into
and
ljmp
cltd
loope
pop
cwtl
sub
repnz
jno
or
icebp
mov
mov
inc
pop
outsl
hlt
pop
cs
jg
push
rclb
mov
into
pop
sbb
mov
mov
dec
sbb
mov
iret
sub
addl
xchg
lods
es
and
jmp
sbb
bound
aam
in
xchg
hlt
addb
jns
inc
rolb
xchg
push
inc
out
out
pop
aam
dec
jnp
sahf
lds
stos
fs
fnsave
lds
scas
push
int
or
pop
xchg
adc
jge
cmp
sar
sbb
cmc
cmp
in
adc
outsb
inc
fucomp
mov
in
push
loopne
pop
lock
cmp
adc
mov
lds
xchg
in
xchg
dec
lahf
nop
test
jecxz
pop
insl
roll
mov
dec
and
lret
imul
mov
inc
clc
inc
and
xchg
lret
dec
mov
push
dec
imul
pop
jg
and
ror
divb
fldt
jmp
pushf
push
mov
push
or
push
xor
dec
cmp
divb
mov
push
jmp
inc
sbb
cmc
test
pop
xchg
std
shlb
hlt
clc
jp
push
inc
sahf
scas
xchg
lock
pop
fwait
pop
wrmsr
jmp
inc
repz
mov
adc
cmpsb
jg
pop
sub
mov
pop
lahf
lahf
push
or
sub
mov
lods
jbe
rcl
push
cld
mov
sarb
insl
mov
xor
jecxz
add
adc
xchg
sbb
enter
xor
push
add
out
adc
adc
enter
mov
frstor
testl
shrl
xor
repz
icebp
push
out
stos
test
pop
sub
dec
aad
push
or
inc
mov
nop
into
fisubs
sbb
jae
cmc
jb
aaa
pop
mov
testb
mov
incb
xlat
xor
aas
xor
add
pop
mov
fisubs
pop
and
push
inc
out
xor
jg
jbe
mov
sbb
in
mov
cwtl
sub
gs
nop
push
sub
es
sub
mov
das
in
call
adc
sbb
sbb
jbe
push
cmp
fldcw
push
repnz
negl
hlt
push
and
loope
ds
call
ljmp
jo
add
fisttpl
imulb
sbb
stc
xchg
cmp
loopne
aas
data16
mov
movsb
lret
adc
sub
mov
xchg
into
call
data16
mov
rclb
outsb
mov
add
adc
xchg
popf
ljmp
inc
lock
xor
test
push
pop
push
mov
xchg
jnp
fcmovbe
int
lret
push
rclb
push
aad
mov
sub
pop
ret
xchg
xor
mov
inc
aas
popf
leave
inc
jne
jge
or
push
jl
out
cmc
cli
mulb
cwtl
faddl
orb
repnz
jb
sbb
xor
jb
lds
mov
test
aad
les
sbb
inc
inc
dec
int
adc
lcall
pop
adcl
adc
mov
add
hlt
xor
add
add
xor
stos
loope
mov
stc
fwait
imul
pop
mov
mov
dec
mov
jns
lret
dec
ds
fwait
inc
xlat
data16
test
or
dec
lcall
lret
push
mov
in
das
pop
mov
mov
stos
xor
xchg
cmp
inc
sti
mov
fisttps
mov
mov
xchg
not
icebp
out
adc
add
adcl
pop
or
pop
pop
stos
mov
mov
inc
xchg
xchg
lret
and
sub
icebp
sub
push
out
sub
daa
sarb
add
inc
adc
push
add
loopne
pop
sub
xor
sahf
test
out
int3
outsb
mov
leave
stos
cmp
sub
cmp
test
rol
xchg
bnd
mov
outsb
lcall
loop
jae
dec
push
addr16
movsb
mov
adc
fsub
int
xor
mov
lahf
dec
mov
stos
mov
dec
or
push
in
out
mul
dec
out
sbb
jb
sub
cmp
push
mov
lcall
jno
popa
pop
loope
push
sub
lds
dec
in
adc
notl
xchg
movsl
inc
mov
inc
btrl
add
scas
xor
and
inc
mov
mov
fldpi
nop
in
stc
or
pop
out
xchg
push
jnp
insl
xchg
adc
xchg
pushl
sub
fcoms
mov
out
push
cld
inc
mov
shrl
xchg
push
rolb
call
mov
dec
dec
jl
inc
jecxz
nop
pusha
movb
insb
popa
lret
inc
xchg
out
scas
stos
mov
cmp
mov
sbb
or
cld
call
hlt
xor
fcoml
add
rolb
arpl
adc
jecxz
fs
int3
jnp
lods
mov
leave
jnp
arpl
mov
cmp
push
testl
add
f2xm1
mov
out
xchg
jmp
mov
sbb
cmp
and
lcall
mov
addr16
add
movsl
mov
xchg
ljmp
xchg
nop
inc
repnz
fstl
clc
cmc
lret
dec
jp
test
inc
and
or
add
mov
inc
jbe
out
push
dec
push
cmpsl
jle
cwtl
add
imul
and
out
jnp
xlat
lods
push
and
dec
cmp
sub
inc
seto
adc
xchg
fs
aad
cmp
icebp
nop
sahf
sbb
mov
jbe
push
adc
aad
loop
adc
dec
jo
dec
pop
sbb
imul
xor
push
pop
lret
and
xlat
je
mov
xlat
out
cmp
mov
mov
cltd
xchg
mov
jb
mov
popf
mov
jp
adc
movsl
jg
test
pop
dec
pop
loope
cmovns
jle
jmp
mov
lahf
sub
mov
cs
cmp
repz
mov
add
data16
xorl
iret
inc
aam
sbb
test
lahf
mov
popa
mov
cmp
push
push
int
pop
xor
mov
add
push
xchg
dec
dec
js
loope
pop
jbe
fwait
mov
ss
ss
inc
mov
adc
rol
cli
cmp
pop
sbb
and
mov
or
dec
jnp
mov
mov
lea
jmp
push
scas
mov
ljmp
jne
mov
clc
mov
sbbl
sbbb
std
fmuls
rolb
ficoms
adc
pop
repnz
gs
and
cmpsl
loop
sub
std
inc
arpl
push
mov
mov
imull
jne
or
mov
imul
ljmp
mov
aam
push
jno
iret
ss
sub
push
ljmp
fsubl
insb
jecxz
sub
sub
lcall
int
das
sti
jb
jae
cmpsb
insl
xchg
test
out
adcl
xor
mov
scas
sub
sub
cmpsb
dec
pop
jno
shll
jmp
aad
push
das
loopne
insl
jns
ds
push
jecxz
sub
mov
sbb
fisubrl
pop
cmp
dec
and
jo
pop
test
mov
xchg
addl
aad
push
fwait
sbb
int3
daa
mov
cmp
adc
push
repz
dec
fwait
sbb
jmp
xor
test
rcrl
cwtl
ret
imul
gs
enter
sahf
xchg
sbb
int
mov
data16
xchg
xchg
mov
add
ljmp
jmp
andl
mov
xor
test
jne
push
dec
pop
add
cmp
mov
lret
ja,pt
out
push
popa
adc
int
rclb
mov
mov
popf
lea
push
push
inc
inc
test
xor
jbe
fldl
xchg
mov
nop
sub
lcall
adc
mov
xlat
rep
mov
jge
testl
jmp
or
pop
aaa
adc
lcall
dec
hlt
test
mov
adc
mov
cltd
imul
cmp
cmp
cltd
mov
push
jne
enter
and
ss
hlt
daa
push
dec
ds
xchg
push
out
ret
sti
fsubrs
sub
mov
xchg
fdivrp
icebp
add
jecxz
sub
adc
mov
test
jmp
mov
imul
pusha
dec
shlw
es
lods
outsb
hlt
lods
adc
lds
pop
dec
dec
data16
cmp
repnz
popa
lock
mov
or
or
inc
lret
push
aad
andb
aas
push
arpl
pop
push
add
loope
popa
jmp
jp
sub
inc
xchg
pop
int
shrb
push
shlb
gs
push
lea
or
sub
sub
xor
xor
mov
je
popa
cli
push
mov
leave
pop
push
lret
jb
xchg
fadds
rcr
or
sub
sub
inc
inc
adc
js
add
popa
cmp
sub
adc
and
aaa
int
jg
movsb
pop
jg
cmp
mov
fwait
mov
mov
hlt
jl
xor
mov
lea
ja
bound
cmpsb
rcrl
jmp
aad
xchg
fldl
js
mov
imul
rolb
cmp
inc
pushf
enter
fstps
sub
jnp
cwtl
mov
pop
jle
and
icebp
cs
fisubs
cmp
dec
jp
leave
shl
inc
aad
lds
fmull
shlb
mov
js
pop
and
cmpsb
pop
les
rcrl
mov
insl
jnp
pop
cwtl
lret
daa
mov
adc
test
ficomps
js
ret
lea
add
jl
imul
push
ds
adc
push
orl
add
shll
stos
sub
jne
add
or
lret
cld
xor
xor
inc
mov
fst
insb
push
adc
ds
insb
cmpsb
jecxz
push
addr16
pusha
rolb
xorb
pop
sub
cmp
dec
or
test
les
or
divl
call
jp
xchg
or
xchg
sub
inc
jle
inc
call
hlt
mov
out
mov
cmpsl
bound
js
test
stos
push
and
lds
add
or
incb
push
cwtl
arpl
xchg
gs
outsl
or
jns
fsts
jecxz
xchg
jno
bound
sub
ds
insb
in
inc
insl
int
inc
out
popa
int3
mov
sub
mov
xor
adc
add
shll
xchg
xchg
sti
dec
cli
es
call
pushf
pusha
mov
imul
mov
aas
xor
shlb
js
add
ja
mov
xchg
and
fildl
mov
adc
pushf
jg
or
hlt
popf
sahf
and
jg
mov
imul
ret
mov
cmpsl
jl
orl
xchg
out
or
cmp
mov
popa
mov
in
in
idivl
sub
mov
push
movsb
ljmp
cmc
loopne
dec
in
loop
inc
test
aad
and
push
mov
loop
pop
js
mov
or
test
movzwl
jnp
fsubrl
mov
insl
add
inc
push
pusha
fcmovne
das
pop
popa
lcall
ss
cmpsl
jecxz
leave
pop
jp
add
imul
inc
arpl
arpl
dec
pop
jmp
test
cmp
imul
sbb
xor
inc
mov
and
ror
bound
sub
pop
dec
push
test
cwtl
mov
das
gs
sahf
call
sub
hlt
ja
fldl
pop
inc
xor
movl
sbb
sti
lcall
mov
xor
fs
jae
inc
pop
mov
adc
out
jne
test
inc
imul
or
xchg
inc
dec
rorl
mov
filds
out
insb
daa
mov
sbb
test
or
mov
cmpsb
std
sbb
pop
adc
shlb
sbb
mov
rolb
lods
mov
mov
or
test
inc
push
insl
and
das
pushf
sub
sbb
mov
pushf
loope
mov
push
adc
rcl
shrl
pop
notb
mov
cld
xlat
lds
das
xchg
pusha
sbb
inc
sub
test
cmp
push
jbe
rcll
adc
imull
arpl
ucomiss
adc
je
push
incb
jb
shr
std
aad
sub
stos
jge
push
out
subl
inc
fcoml
jecxz
mov
sbb
adc
mov
add
pop
cs
aas
out
scas
es
lods
scas
daa
xchg
cld
dec
adc
aas
adc
ret
aad
imul
inc
adc
jb
je
cs
sbb
xor
ljmp
dec
pop
in
dec
cltd
cmp
mov
in
leave
pop
pop
shrl
push
cmp
push
std
inc
loopne
sub
sub
jmp
or
shll
xor
int
mov
xchg
xchg
push
pop
mov
push
add
push
lcall
ds
adc
mov
push
idiv
jg,pt
jle
push
and
jnp
fmuls
test
jecxz
inc
pop
subb
enter
repz
iret
mov
jb
lods
arpl
popa
push
nop
mov
call
out
mov
push
lahf
jp
sub
mov
std
outsb
stos
in
push
sub
arpl
sti
lods
repz
mov
lret
mov
jo
fisubs
push
cli
dec
pop
ljmp
xchg
add
cltd
fisubl
push
loop
add
sub
daa
ret
js
sahf
cmp
or
jbe
es
ret
cmp
stos
pop
jle
cmp
jnp
negl
imul
in
and
cmpsb
test
pop
dec
es
fsts
push
scas
sub
mov
testb
imul
and
mov
and
push
lcall
jo
mov
js
cmp
insl
lcall
or
cwtl
add
cli
std
sbbl
push
dec
ds
inc
and
add
lock
xchg
mov
out
outsb
repz
mov
xchg
cs
dec
cltd
push
jecxz
sub
movsb
outsb
xchg
test
push
sub
inc
fsub
punpcklbw
enter
scas
scas
jb
mov
mov
test
ret
in
and
xchg
in
outsb
repz
lcall
mov
leave
in
callw
mov
cmc
pop
lods
insb
jnp
scas
popa
jbe
mov
mov
or
push
mov
dec
dec
mov
lea
daa
jae
mov
dec
lahf
adc
movsb
sub
ds
push
cltd
ret
mov
push
dec
jo
arpl
cmp
cwtl
and
sub
xor
aad
xchg
ret
xchg
add
fdivrs
mov
inc
lods
popf
push
ja
out
int3
iret
jl
mov
sub
pop
mov
lock
pushf
repz
cmc
mov
jmp
sub
shll
enter
ss
cltd
in
clc
cmpsl
cmp
addl
call
push
dec
mov
xchg
jmp
dec
popf
jno
add
movsb
in
aaa
ja
pushf
ret
call
push
ja
or
push
pop
test
jns
nop
push
jns
pop
cmpsl
aaa
ret
movsb
mov
daa
and
cmpsl
mov
aas
insl
add
mov
sbb
lret
xlat
dec
lret
cmpsb
pop
mov
fsubrl
pushf
into
mov
sub
testb
xlat
fisttpl
inc
orl
nop
sarb
cld
es
mov
adc
push
pop
inc
xor
sbb
adc
pop
lret
into
imul
das
xor
mov
mov
in
adc
xchg
fldcw
jmp
test
mov
xchg
in
pushf
push
dec
jp
shll
cmovbe
jne
sub
or
ror
sub
xchg
cmp
mov
in
adc
in
xchg
pop
icebp
ret
dec
dec
mov
dec
js
in
cmp
jnp
push
aaa
mov
mov
roll
lret
lods
inc
fs
xlat
mov
mov
sti
lods
dec
fs
and
cmp
sti
ss
daa
xchg
dec
push
frstor
movsl
outsl
adcb
dec
add
pop
sti
shl
mov
scas
push
xchg
mov
xchg
or
pop
adc
mov
hlt
jb
inc
jp
fs
ja
lcall
je
sbb
pop
and
and
jle
sub
test
das
jbe
inc
fistps
adc
testb
outsb
jge
cmp
addr16
in
xchg
addr16
xor
dec
xor
or
aaa
arpl
pop
mov
mov
push
jne
popa
jp
xor
cmp
out
mov
imul
or
push
sub
addl
push
xchg
mov
mov
stos
push
mov
mov
pushf
cmpb
outsb
stos
movsb
icebp
cld
push
cmpl
orb
dec
jne
test
test
js
adc
lea
dec
loopne
lahf
pop
arpl
repz
inc
cmpsb
cmp
adc
rcr
lods
and
dec
push
iret
and
push
jg
fsubs
sbb
in
jmp
mov
adc
pop
insl
sub
es
vpaddsb
and
sti
insb
mov
test
lcall
inc
xlat
sbb
shlb
mov
bound
lahf
and
inc
mov
pushf
pop
pop
hlt
in
inc
inc
dec
jecxz
cs
jno
sbb
dec
inc
lret
les
sub
mov
test
xor
fadd
es
adc
mov
pop
sbbl
imul
pop
fidivl
enter
sar
add
mov
or
or
dec
pop
lret
mov
ret
repz
loop
push
xor
ret
mov
add
std
lret
jb
repz
xchg
outsb
mov
push
mov
adc
inc
push
pop
cmpsb
mov
dec
cs
push
sub
push
xchg
out
jecxz
mov
fwait
push
sbb
mov
pusha
dec
pushf
icebp
push
xchg
and
inc
mulb
fnstenv
data16
mov
lcall
push
test
icebp
das
mov
clc
insb
push
mov
insb
shlb
rol
mov
daa
test
aam
shll
call
cmp
fbstp
in
jne
mov
or
rolb
mov
les
int
movb
mov
ret
sbb
loop
stos
shll
push
aas
jle
pop
jp
sbb
inc
sub
rdmsr
mov
mov
sub
jle
pop
push
mov
dec
inc
dec
fs
cmp
sbb
mov
lds
in
xorb
bound
and
mov
into
pop
xor
jnp
notb
int3
push
add
jnp
dec
xlat
cmp
fcoml
dec
push
dec
inc
mov
leave
mov
notb
inc
xchg
cli
push
or
and
nop
ret
mov
jae
dec
cmp
cld
cltd
lcall
outsb
sub
rcrl
pop
mov
movsb
xlat
cmp
jp
or
dec
dec
out
sub
cmp
div
out
and
xlat
push
out
dec
cmp
sub
dec
fs
loopne
cmpsl
xchg
adc
pop
stos
mov
sub
push
lea
lock
jmp
cld
into
cs
add
fs
push
js
imul
cwtl
lock
jg
mov
shrl
pushf
or
aaa
sub
xor
aad
sub
ret
fnstsw
divb
pusha
test
add
lods
popf
cmp
pop
cmp
not
cli
cs
jbe
or
mov
fmull
ret
cld
lea
hlt
xchg
jo
daa
sub
push
mov
sub
sbb
adc
push
jg
lea
or
daa
jae
orb
jl
jbe
data16
xor
cmpb
xlat
std
push
or
inc
dec
imul
mov
cmp
fwait
out
inc
les
test
fcmovbe
mov
push
lahf
je
jae
cmc
xchg
stc
jecxz
add
push
jb
push
mov
sub
js
xchg
xchg
fisttps
stos
ret
jl
ds
leave
test
jg
lret
lret
lds
pop
xchg
adc
and
mov
fistl
data16
mov
das
push
bnd
cwtl
cmp
in
iret
out
out
jle
in
adc
jo
sub
in
iret
arpl
fisubl
cli
mov
mov
ret
xor
jle
in
jno
fs
inc
aam
xlat
sub
sbb
into
int
xor
push
fdiv
adc
xchg
gs
pop
mov
xor
xchg
push
in
dec
cmp
mov
and
mov
jb
aad
inc
sahf
mov
sbb
stc
sbb
cmp
xor
or
xchg
xor
jo
insl
mull
mov
rclb
xor
dec
ret
mov
mov
add
sti
add
xor
push
mov
add
out
xchg
lret
dec
test
xchg
cmp
add
aad
popf
pop
and
mov
cmp
imul
cmp
jge
shl
test
movsb
sbbl
or
lea
aad
mov
call
push
mov
rolb
push
enter
scas
dec
adc
mov
lret
cmc
les
mov
repnz
cs
imul
sub
adc
test
mov
mov
arpl
xor
jge
adc
outsb
lods
movsl
push
popa
out
sahf
aam
xor
push
sub
jb
aad
inc
popf
mov
in
or
push
subl
sahf
inc
inc
jmp
fldcw
jno
sbb
pop
ficompl
test
clc
fsubr
shl
pop
cmp
es
inc
mov
xor
push
fisttps
xor
dec
xor
push
cmpsb
push
and
and
xor
icebp
add
test
sbb
sbb
inc
sbb
jge
out
cmp
sbb
fisttpll
push
xor
cmc
lahf
fcmove
and
in
imul
shlb
push
mov
fbld
cld
dec
xchg
aas
pop
push
dec
pusha
mov
jbe
xchg
mov
mov
cmpsb
fst
popf
call
xor
sti
and
sbb
mov
addr16
sub
out
push
loopne
sbb
sub
pop
dec
pop
int
lret
sahf
imul
pop
test
shrb
lods
rclb
insl
mov
or
cmc
add
fcmovu
dec
inc
push
dec
mov
or
sbb
or
test
sub
imul
loope
mov
sbb
in
rcrl
movsb
inc
jl
arpl
cltd
pop
sbb
fldl2e
int
cmp
jnp
les
add
sbb
lret
push
rcrb
jg
ds
stc
xchg
add
jecxz
push
js
mov
xor
rcrb
mov
movsb
dec
lahf
insl
repz
std
ljmp
xor
gs
sbb
shll
mov
pop
jnp
sub
push
push
nop
popa
sbb
and
push
nop
mov
push
jecxz
pop
adc
cmc
fisubs
jns
push
mov
add
es
test
sub
mov
imul
fucomip
and
xlat
std
push
lods
cmc
js
fwait
popl
shl
mov
cmp
sub
lock
lea
xor
pop
mov
push
in
mov
cltd
jno
ljmp
and
xorl
inc
adc
xchg
imul
mov
adc
std
movsl
out
inc
jp
repz
sub
mov
outsl
cs
repz
iret
mov
icebp
popa
sbb
mov
jo
leave
xchg
ss
sbb
sar
flds
add
aad
push
sub
shrl
dec
pushf
ds
push
add
loop
fsts
mov
jl
leave
mov
add
xor
xor
xchg
push
inc
adc
dec
xchg
loope
stc
fisubs
sub
xlat
inc
sti
cmp
int
push
xchg
cli
dec
out
jo
in
in
sbb
insb
mov
cmp
jg
aaa
push
mov
or
call
push
popa
aam
lcall
or
mov
orb
sbb
adc
out
pusha
cmp
lods
or
push
jo
mov
or
test
data16
ficoms
fdiv
push
xchg
loopne
xlat
outsl
icebp
push
ja
sub
jne
jle
xor
pop
repz
mov
push
popa
in
mov
adc
icebp
jo
xchg
lahf
fcompl
xor
xchg
jb
lret
pop
lret
jb
pop
std
lret
in
jbe
movsl
pop
and
fistps
movsl
pop
push
dec
sub
inc
in
dec
out
add
xchg
add
repz
sub
jns
rcr
iret
repz
pop
mov
xchg
cmp
dec
cmpsb
push
push
addr16
in
cmp
cmpsl
int3
inc
or
test
inc
mov
jnp
les
inc
mov
adcl
xchg
stc
in
cmp
xchg
sti
mov
arpl
or
pop
aaa
pusha
pop
xchg
sub
aas
leave
jo
xor
and
mov
pop
pop
out
dec
mov
fistpl
ret
insb
adc
hlt
arpl
sub
inc
repz
dec
push
push
jge
and
adc
push
xchg
xchg
cmp
in
test
mov
and
mov
jge
mov
mulb
push
dec
nopl
sub
inc
movsb
and
xchg
das
pop
pop
or
add
test
out
cmpsb
jl
mov
outsl
aad
sbb
aas
aad
mov
clc
dec
pop
imull
cmp
xchg
mov
jnp
jns
sbb
mov
xor
xchg
add
mov
cwtl
loopne
into
dec
cmp
pop
inc
in
imul
and
mov
mov
repz
repz
cltd
or
sub
repz
test
cmp
cltd
inc
lahf
or
sbb
mov
mov
xchg
mov
lahf
imul
fisttpll
stc
or
adc
out
inc
and
cmc
in
rorb
lods
movsl
leave
mov
stc
neg
mov
outsb
ljmp
out
rcrl
scas
addl
setbe
fucomip
out
adc
add
inc
adc
fcom
es
push
push
dec
xchg
subb
xor
fisttpll
mov
gs
faddl
mov
fstp
ja
sub
xchg
loopne
rorl
fcmovnbe
fldl
jno
cld
int
inc
test
and
sahf
xor
popa
pushf
mov
xchg
or
mov
iret
mov
pop
cli
cmp
enter
imul
scas
inc
dec
adc
imul
push
in
add
addr16
ret
sbb
loopne
adc
mov
jg
int3
mov
xchg
arpl
dec
pop
mov
ss
adc
sti
arpl
sbb
out
push
jmp
stos
jl
pushf
sub
int
stos
ss
lahf
pop
shlb
scas
inc
rcrb
jmp
pop
sbb
outsb
sub
dec
cmp
outsb
imul
ds
aas
sub
imul
rclb
lret
jl
pop
movsb
insb
out
clc
xor
les
in
out
sbb
ja
fiadds
loopne
nop
push
jno
pusha
push
andb
divb
pop
mov
lahf
xor
push
dec
dec
lds
cmp
cmc
es
mov
movsb
fldl
pop
jp
inc
push
aas
hlt
cmp
or
cltd
pop
jecxz
inc
mov
push
cmpsb
jg
inc
push
mov
jo
mov
sub
cmpl
insb
stos
jbe
faddl
mov
xchg
movsb
sub
insb
pusha
insb
mov
sbb
sbb
repnz
adc
mov
cli
iret
push
in
mov
xchg
fimull
mov
adc
lcall
clc
lds
inc
loope
jp
push
mov
out
mov
ss
adc
or
jmp
xchg
inc
xor
fsubr
cmp
pop
sarl
aaa
dec
inc
decl
popf
std
ret
pop
pop
imul
mov
dec
sub
push
xchg
sbb
and
or
xor
push
mov
jecxz
ds
xor
sarl
jns
mov
in
jge
mov
pop
lahf
add
push
mov
sbb
insl
bswap
sarb
rorl
lods
inc
inc
push
inc
xor
repz
adc
inc
fnstenv
dec
dec
pop
push
xchg
mov
cmpb
mov
adc
add
sbb
lahf
notb
js
fcmove
sbb
cli
jl
jo
dec
mov
cmpsb
cmp
imul
stos
pop
jb
sub
outsl
xchg
movsl
loope
dec
xchg
xchg
fcmovbe
mov
mov
lret
out
or
cmpsl
pop
fwait
dec
lock
dec
outsb
je
mov
lcall
jno
adc
lcall
cmpsb
sarl
test
pop
ds
add
inc
mov
aad
mov
pop
lds
aas
inc
cmpsb
out
out
mov
bound
movsl
jns
test
cmpsb
aaa
int
mov
inc
xchg
dec
lahf
xchg
dec
mov
add
xor
jbe
dec
cmp
xchg
testl
sarl
flds
sahf
aad
pop
ret
enter
leave
repnz
inc
mov
add
test
sbb
enter
add
divl
loope
insl
sbbb
jno
sbb
addl
mov
add
sbb
ja
loope
scas
mov
jae
mov
sub
hlt
jmp
xchg
fmulp
or
inc
scas
cs
jecxz
or
shr
xlat
cltd
jge
lahf
or
lahf
pop
cmp
test
dec
xbegin
das
arpl
faddp
loope
shll
scas
sbb
je
iret
dec
mov
fistl
cmp
dec
movsl
push
stos
cmp
and
inc
icebp
xchg
cwtl
mov
xchg
mov
jnp
movl
mov
push
mov
push
push
shlb
xor
rorl
fisubl
sbb
push
mov
out
dec
mov
inc
movsb
xchg
aam
int3
int
jl
mov
mov
jno
sbbl
cmp
outsl
sbb
pop
daa
test
or
lahf
xlat
xor
data16
pop
sbb
mov
aas
pop
jae
sub
mov
pop
cmp
jle
clc
adc
mov
and
and
mov
pop
cs
shll
lret
psrad
xchg
movsl
cmpsb
and
mov
sbb
adc
frstor
insb
xchg
inc
xchg
sbb
inc
into
jo
xor
or
dec
lods
pop
jb
xor
or
aaa
mov
pop
fldenv
icebp
int3
das
sub
xchg
es
out
jno
in
pop
ljmp
mov
fnstsw
fs
sbb
les
push
test
xchg
loop
js
mov
inc
mov
sti
je
pop
mov
cmp
push
xchg
mov
or
jge
and
fwait
mov
adc
pop
imulb
xchg
adc
or
in
aas
or
in
inc
adcl
sbb
aaa
or
push
cmp
or
jl
stos
cmp
cmc
mov
shll
rcrl
jmp
add
in
je
outsl
sbb
inc
icebp
or
mov
bound
sahf
cmp
std
and
pop
push
shlb
shr
adc
cmpb
stos
rol
adc
add
imul
cmp
cld
jne
mov
js
icebp
pushf
cmpsl
mov
xchg
imul
or
lret
inc
paddb
insl
shld
das
shl
stos
fwait
enter
add
lds
mov
and
rolb
cmc
cmp
ret
push
inc
mov
xchg
das
sub
add
rcrb
cmp
push
inc
xchg
adc
mov
aam
decl
adc
das
cmp
mov
cmp
cmpsb
stos
fdivp
push
dec
push
add
dec
addr16
test
xchg
pop
movb
add
test
dec
mov
jg
loopne
add
jae
inc
mov
cli
sti
cmp
lcall
inc
lcall
mov
mov
xor
and
out
addl
iret
nop
sub
and
xchg
sbb
cmp
dec
xor
ljmp
xlat
jbe
repz
popa
cltd
decl
cwtl
lcall
jge
xchg
arpl
lret
insl
adc
imul
test
pop
sar
stos
pop
xor
outsl
add
push
lret
fisttpll
cmp
lds
int3
or
cmp
and
movsb
jno
xchg
mov
add
mov
xchg
inc
mov
inc
or
cmp
es
ds
inc
pop
xor
cltd
xchg
mov
mov
push
icebp
pop
dec
or
jnp
pop
pop
inc
pop
inc
sahf
out
loop
push
rcl
cmpsb
dec
pop
add
out
sbb
loopne
ds
mov
xchg
addr16
mov
cmp
jmp
ret
adc
outsl
lcall
insb
loopne
sbbb
out
sbb
popa
out
out
fcmove
or
pop
in
addr16
push
and
push
or
into
aaa
ret
pop
mov
lahf
add
xchg
lea
mov
cltd
xchg
xor
mov
lods
scas
push
call
stos
iret
xorb
xchg
push
notl
jne
lods
push
cltd
dec
jl
pop
or
gs
and
call
test
sub
gs
fcompl
imul
add
pop
andl
adc
insb
cmp
fstpl
inc
and
xchg
fsubl
sub
adc
add
push
xor
mov
je
rcrl
ret
mov
lahf
in
out
jp
inc
cmp
push
aaa
pop
rol
or
jmp
inc
pushf
jmp
imul
xchg
xor
std
dec
push
loopne
adc
lret
das
scas
scas
cld
sbb
xorb
pop
and
stos
push
push
faddl
pop
and
iret
mov
inc
das
jmp
push
xchg
mov
sbb
dec
ds
push
aad
jnp
sbb
scas
add
aad
sub
stc
dec
adc
inc
lds
and
call
pop
adc
out
jb
es
das
stos
xchg
xchg
jecxz
inc
loopne
push
sbb
jg
xchg
xchg
adcl
mov
inc
sahf
lods
jecxz
fcoml
xchg
dec
aas
rclb
cmp
pop
mov
addr16
into
jo
adc
std
nop
mov
lcall
imul
fisubrs
or
mov
pop
leave
mov
push
repz
movsb
xchg
lods
popa
aam
mov
sahf
xor
pusha
call
test
shr
cwtl
out
int
sub
nop
xor
push
hlt
dec
leave
cs
cmpsb
xchg
cwtl
aaa
lods
inc
and
mov
das
imul
mov
ficomps
xor
out
inc
add
mov
adcl
add
jo
xlat
insb
mov
fidivrl
pop
sub
in
pop
xlat
cmp
das
mov
ss
enter
shll
xchg
in
cmc
fmuls
sbb
push
dec
mov
pushf
jnp
add
mov
sarl
imulb
fildl
sbb
xor
test
xor
mov
ret
insb
mov
ds
iret
dec
push
dec
inc
mov
xchg
mov
cmc
inc
aas
je
adc
enter
dec
repnz
mov
lret
adc
dec
mov
popa
mov
push
je
rolb
add
fcoms
and
push
iret
clc
sbb
ja
mov
in
rcll
pop
and
jmpw
data16
mov
test
jmp
sbb
in
mov
hlt
mov
add
leave
push
out
loopne
dec
lds
inc
test
movsb
in
xor
out
test
psrld
sti
jmp
xor
ficoml
xlat
idivl
adc
loope
push
testl
jp
sbb
xchg
lret
xor
xchg
jns
pop
test
jge
cmp
mov
ret
jno
stos
and
shll
and
push
out
jbe
mov
adc
aaa
movsl
gs
or
adc
mov
aas
out
push
dec
clc
jo
pop
adc
jle
inc
stc
sbb
dec
dec
or
pop
lods
lahf
inc
fsubs
mov
pop
dec
mov
outsb
shlb
imul
push
jge
dec
ljmp
fcoms
fwait
pop
sub
movsl
pop
test
sarb
adc
es
inc
adc
repnz
fs
shl
nop
iret
inc
adc
pop
mov
stos
xlat
out
sub
in
mov
dec
cmp
daa
daa
add
add
std
ficomps
add
lods
sti
jnp
lcall
loope
mov
dec
fdivr
loope
sbb
sub
adc
imull
sub
inc
lods
xchg
arpl
imul
leave
out
cltd
xchg
dec
xor
push
push
sub
pop
out
push
shl
or
sarl
pop
in
mov
mov
jg
test
js
jae
in
fldenv
cli
mov
cmp
out
das
mov
jnp
push
fidivrl
ret
rorl
xor
sub
imul
nop
push
cmp
lret
cmp
inc
ret
loop
outsb
xor
inc
cmp
or
add
push
int3
cld
lods
lret
xchg
cld
lea
sti
sbb
and
repz
xor
lea
out
jg
ss
dec
pop
popa
mov
mov
shlb
push
out
fld
stos
add
test
cld
test
ja
rcll
xchg
and
push
pop
mov
pop
lret
and
les
adc
imul
or
daa
gs
fistl
push
repz
ljmp
jae
ja
leave
stos
aas
lods
inc
xor
push
mov
bound
xor
and
ret
lods
mov
sbb
sbb
xor
and
fidivrs
adc
mov
mov
test
test
jg
les
jns
aam
mov
xor
pop
mov
fiaddl
mov
out
aad
xor
gs
or
dec
enter
sbb
insl
jle
fistpl
jg
insb
test
fisubl
sbbb
out
pop
sbb
scas
sub
mov
ja
pop
loop
jns
sbb
in
or
xchg
in
or
test
sbb
xchg
cmpsb
mov
daa
mov
ljmp
mov
mov
sbb
pusha
in
andb
dec
loopne
sbb
xchg
cmp
cmp
xchg
and
dec
aas
push
psrld
jg
xorb
clc
out
mov
lahf
shlb
inc
test
lret
sbb
pop
dec
push
inc
stos
in
jge
inc
inc
iret
cli
push
mov
lock
push
sbb
imul
scas
ja
rcl
xor
mov
sub
shl
inc
int3
dec
jecxz
pop
xchg
data16
popa
fiaddl
adc
ret
pop
cmp
call
incb
mov
mov
rcrl
xor
shlb
ret
pop
sbb
repz
gs
xchg
mov
outsb
cmpsb
shr
mov
lds
mov
sub
pop
lea
mov
lea
int3
mov
mov
enter
mov
aaa
outsb
sahf
divl
sti
ds
cmc
sti
push
int3
popf
dec
mov
rcrb
test
cld
lret
sub
dec
push
adc
sub
lods
in
cmc
dec
xchg
xor
inc
leave
jge
lret
shr
popf
mov
movsb
fcomip
test
mov
fwait
test
data16
xchg
fisubs
or
xor
andl
xchg
mov
outsl
dec
outsl
mov
xor
pop
rsm
es
mov
xor
and
pop
mov
xchg
rorl
xchg
nop
stc
mov
mov
jp
or
sbb
add
cli
pop
sbb
ds
lods
cli
test
push
sub
dec
jmp
xorl
mov
in
pusha
mov
sub
rol
sbb
roll
dec
or
inc
xor
addr16
adc
leave
std
out
lret
clc
sbb
mov
je
cs
int
sub
xchg
scas
mov
fnsave
jae
pop
lods
pushf
mov
dec
cmp
sub
lcall
aas
sbb
xchg
out
subl
mov
cmp
mov
mov
sub
es
test
push
lods
loop
stos
shll
into
dec
sub
fdivr
push
imul
pop
ljmp
ss
imul
imul
sub
cmp
cmp
pop
cmp
xor
push
pop
mov
add
inc
arpl
jo
xlat
lods
int3
sbb
je
sarb
std
xor
jle
cltd
mov
pop
xchg
cli
lock
fwait
data16
arpl
or
mov
je
push
mov
inc
mov
push
adc
faddp
dec
sub
xchg
lret
ss
ja
into
jo
sti
test
out
int3
cmp
xor
xchg
imul
shl
dec
push
push
pop
je
rclb
pop
pop
xlat
lods
mov
xchg
pop
push
jne
sahf
jle
and
dec
stos
and
test
mov
cmp
push
jb
int
insb
jle
les
inc
scas
jno
xorl
insb
dec
fbld
pop
shll
push
mov
ficoms
popf
dec
adc
xchg
adc
ret
sub
cli
nop
cmp
cmc
pop
subl
lods
mov
or
cmp
inc
lret
push
pop
test
inc
add
mov
cmpsl
and
iret
add
inc
xchg
push
cmp
mov
mov
jno
push
sbb
mov
cmp
fcoms
pop
inc
jmp
cmp
push
dec
loopne,pt
adc
or
add
jg
cmp
popa
iret
popf
mov
popa
mov
jns
xchg
jl
int
xchg
push
jmp
inc
xor
push
push
lret
cmp
cli
dec
adc
dec
mov
and
aas
jg
mov
outsb
and
mov
pop
pop
das
add
pop
or
int
adc
ret
xlat
pop
push
sub
repz
and
leave
push
sbb
cmp
cmpl
sbb
es
sbb
sbb
push
xor
mov
add
scas
jne
or
dec
cmp
into
icebp
cmp
jbe
inc
pop
frstor
mov
jecxz
jo
test
enter
fwait
jmp
iret
or
sub
push
xchg
scas
sahf
jae
std
or
pusha
dec
dec
in
mov
lods
or
push
scas
int
push
decl
jg
push
push
push
loop
mov
clc
test
mov
inc
push
adc
fisttpl
popa
and
pop
gs
bound
insb
pavgb
and
cmp
in
rorb
jecxz
sbb
cmc
or
sub
push
pushf
lret
insl
pop
mov
cmp
orl
pop
jno
and
in
or
add
jge
insl
shrb
shll
hlt
imul
or
std
es
push
xchg
or
sbb
add
jo
imul
lcall
push
jp
or
or
lret
push
adc
pop
adc
loop
mov
pusha
sarb
out
lahf
sub
mov
pusha
cmp
push
outsb
xor
jl
vpextrw
mov
xchg
push
sub
sbb
xchg
add
dec
stc
arpl
lea
test
mov
or
or
dec
sbbb
jl
test
push
jo
xchg
fs
mov
sarl
push
adc
in
mov
add
cmp
inc
unpcklps
xchg
out
je
adc
out
test
es
popf
cmp
sarb
iret
and
dec
pop
outsl
fsubs
push
std
int3
jb
call
int3
out
repnz
or
ret
int
mov
adc
cwtl
outsb
sbb
inc
xlat
or
stos
sub
scas
jp
cvtpi2ps
int
in
xchg
faddl
push
xchg
or
pop
dec
bound
or
mov
pop
movsb
sbbl
repz
cmp
and
adc
push
push
insb
xor
sub
xor
fsts
stos
scas
int3
add
adc
fld
movsb
scas
push
adc
jmp
xchg
xor
push
jl
sub
jle
test
mov
leave
jae
test
test
push
push
repz
arpl
aad
push
or
mov
and
add
push
jbe
popf
xor
pop
xor
pop
push
cmp
cld
lahf
ljmp
pop
mov
jo
xorb
pop
lods
ljmp
inc
dec
cmp
loopne
popa
xchg
jnp
dec
repnz
mov
andl
pop
or
sub
push
test
xor
aaa
mov
test
lcall
nop
mov
cmp
xchg
movsl
inc
and
loopne
mov
loopne
jae
out
jne
out
push
mov
xor
lds
les
repnz
xor
add
sahf
mov
sub
enter
cli
imul
push
mov
gs
ljmp
pop
pop
jl
xor
loopne
adc
sub
xchg
sub
popa
sbb
data16
loopne
push
fbstp
hlt
les
cmp
stos
mov
cmc
mov
popa
or
mov
iret
cltd
outsb
int3
mov
add
bound
stc
sbb
rcr
mov
lea
nop
gs
xchg
add
xchg
add
mov
add
cld
add
popa
add
cmp
stc
in
mov
repz
data16
add
sbb
andb
sbb
sbb
ds
and
pop
lds
adc
mov
test
movsb
mov
inc
test
sbb
push
psubsb
add
inc
add
add
mov
mov
pop
test
mov
inc
adc
cmp
in
inc
call
and
jge
in
cld
pop
loop
inc
mov
sbb
repz
nop
mov
cmp
shlb
lea
leave
push
jnp
addr16
mov
shl
push
cs
cltd
xchg
out
mov
cmp
xchg
call
test
inc
sub
adc
scas
add
dec
cwtl
mov
jecxz
pop
xchg
cmp
test
cmpsb
dec
iret
inc
xor
pop
int3
sbb
jge
inc
pushf
aam
pop
adc
andb
in
xchg
pop
aad
pushf
dec
sbb
pop
xchg
cmp
adc
out
je
fsubs
dec
push
push
rcrb
mov
sub
stc
roll
jb
mov
xchg
lcall
adc
repz
call
pusha
pop
cmp
jo
jl
incb
mov
and
lds
ljmp
xchg
insl
xchg
adc
sti
ds
sub
cli
int
lahf
mov
repz
enter
out
in
xor
dec
cmp
push
jge
inc
daa
cmp
pushf
lods
lods
loopne
xlat
sbb
push
dec
call
jae
fisubl
call
jge
je
lock
push
push
add
pop
lcall
sarl
push
sbb
jb
das
mov
hlt
aam
popf
add
inc
inc
not
ja
push
xor
add
stos
cmp
cwtl
dec
nop
lret
xor
and
push
mov
sti
mov
push
insl
jl
cld
sub
sahf
scas
fcmovne
stc
mov
out
xlat
jp
enter
mov
add
jno
clc
aam
dec
mov
push
call
lds
repnz
popa
data16
fisttpl
adc
jno
test
sub
push
jb
jg
ret
sub
mov
mov
and
jg
call
push
scas
test
xor
xlat
ljmp
sbb
adc
adc
mov
xlat
outsl
aad
test
mov
or
adc
add
les
and
mov
roll
inc
xchg
stos
sub
dec
aas
cmpl
push
dec
jecxz
mov
imul
lcall
ja
jbe
sbb
add
jb
in
fisttps
nop
orb
xor
sbb
cmp
jle
pop
rcll
aad
or
scas
out
mov
loop
adc
into
and
aas
cmp
push
outsb
arpl
or
scas
ja
orb
inc
cmp
fimuls
xlat
stos
mov
sub
cmp
xchg
int
mov
adc
loopne
push
inc
insb
mov
hlt
test
pop
scas
ret
cltd
cmpb
lret
jl
and
stos
xchg
shl
add
out
mov
add
repnz
xor
iret
ljmp
cmpsb
test
dec
pop
xchg
mov
sub
push
popf
push
fildll
cmp
test
fsubp
push
movsb
daa
cmp
push
and
xchg
pop
ret
xchg
push
pop
cli
lret
jb
test
sbb
add
inc
cmp
xchg
data16
sbb
in
in
and
jns
push
or
out
arpl
add
xor
pop
or
sbb
inc
cli
btr
mov
jae
inc
dec
jmp
fcmovnbe
out
loop
adc
jecxz
push
lock
mov
icebp
movsl
cwtl
mov
out
add
fisubrl
or
cmp
ret
adc
insl
lret
jl
xchg
aaa
mov
adc
jns,pn
fisttps
call
mov
push
adc
mov
mov
mov
lahf
jmp
outsb
mulb
xchg
inc
scas
nop
jge
in
mov
icebp
fwait
notb
icebp
mov
aad
push
les
or
cmpsb
test
pop
and
mov
daa
hlt
dec
jns
cwtl
mov
js
sub
jnp
push
mov
je
movsl
xchg
nop
movl
and
cmova
adc
xchg
ss
fdiv
xor
lret
movsl
pop
dec
and
cmp
mov
cmp
arpl
rcrl
dec
pop
inc
and
push
cmpb
out
stos
iret
mov
pop
sub
outsb
sbb
jp
pushf
mov
inc
cmp
test
pop
sbb
mov
jb
and
enter
sub
mov
sub
sbb
inc
sub
push
call
aaa
stc
mov
out
dec
dec
xor
lods
push
ss
fwait
mov
faddp
mov
in
aas
popa
lock
push
leave
lcall
test
arpl
sub
add
sarl
pop
fnstsw
mov
data16
sbb
mov
sub
mov
ret
scas
iret
imul
inc
sbb
movsb
jg
fdiv
xchg
rol
test
into
stc
fadds
pop
and
and
pop
cltd
pop
js
insl
mov
shrb
mov
xor
out
cmpsb
imulb
push
out
push
jle
cmp
addl
mov
sub
and
je
leave
sti
pop
add
aas
es
loope
and
push
mov
mov
sub
imul
iret
dec
inc
lds
pop
mov
ds
add
mov
mov
sti
push
mov
or
jae
push
cmp
ret
and
jns
inc
xchg
jp
in
jb
ret
add
out
ss
jns
scas
dec
and
popf
xchg
lds
adc
fwait
push
fdivrs
jbe
shr
stc
jge
adc
in
add
xchg
sbb
add
aam
loop
scas
ret
or
pop
outsl
js
pop
adc
mov
jo
mov
test
pop
insb
jge
in
jbe
mov
sahf
mov
pushf
inc
aaa
outsb
hlt
xchg
adc
cmp
or
test
fisubrs
rol
inc
adc
addr16
mov
add
sub
fnstcw
cmpsb
sbb
icebp
lock
xor
cmpsb
jb
mov
fdivrs
mov
or
jge
or
mov
adc
shrb
daa
in
cmp
hlt
fdiv
pop
add
dec
mov
adc
in
mov
es
cmp
xlat
and
loopne
and
repz
mov
pusha
imul
sbb
lahf
lea
xchg
pop
sub
in
cld
icebp
push
sub
mov
mov
data16
lods
insb
xchg
cmpsl
lods
shrb
cwtl
dec
adc
shl
mov
pop
or
stc
ss
adc
push
daa
xor
fisubrs
testb
xor
ret
das
lret
hlt
repz
push
jo
inc
lock
repnz
and
and
mov
sbb
insl
aaa
ljmp
add
lcall
cmc
ret
sbb
adc
lds
shl
jns
jmp
mov
lret
mov
pop
adc
inc
jne
sub
lods
jmp
mov
pop
adc
nop
and
addr16
fnstenv
jg
jecxz
lock
inc
jl
xor
sub
pushf
ss
xor
pop
fwait
xor
mov
jne
loope
fstps
aaa
test
inc
mov
xchg
icebp
shll
insl
shrb
and
aas
insb
xchg
lods
imul
dec
pusha
bound
pushf
cmp
jle
aad
testb
in
fnstcw
icebp
std
inc
shll
sub
sarb
add
cmp
mov
aaa
nop
inc
jmp
mov
mov
xchg
mov
test
inc
repnz
sbb
cwtl
stos
and
xchg
sub
jne
mov
call
pop
mov
incl
inc
pop
fnstenv
and
outsb
xor
pop
outsb
and
mov
call
pop
dec
jns
aam
xchg
lcall
add
mov
push
shrl
jbe
test
sbb
cmpsl
leave
fucomip
lea
jmp
mov
push
cltd
popf
mov
sarl
dec
ret
mov
sub
cltd
and
sub
pop
jmp
dec
mov
iret
rep
push
push
pop
aaa
cmpsb
lods
loopne
lock
cmp
mov
in
cmp
mov
insl
outsb
ljmp
and
inc
in
mov
sti
movsl
push
enter
imul
cmp
push
fwait
std
xchg
in
mov
mov
insl
ja
xor
frstor
pop
movsl
cmc
int
adcb
popf
push
jo
mov
push
xchg
std
adc
jo
xchg
in
fcompl
repnz
xor
and
xchg
pop
sub
mov
ljmp
sbb
ret
jmp
sub
sti
xchg
jp
int3
stos
sub
xchg
negl
push
gs
push
dec
mov
jnp
sbb
orb
fnsave
pop
adc
and
in
test
ss
dec
adc
dec
pop
push
lods
xchg
in
pusha
les
pusha
dec
cmc
fldenv
cmp
int3
dec
jp
rol
adc
or
out
mov
out
sti
mov
shlb
popf
arpl
cmp
push
jnp
rcrb
pop
fdivs
and
cld
cs
jnp
arpl
cmp
cmp
push
inc
loop
mov
incl
lret
lcall
xchg
movsl
jbe
jns
lret
cwtl
inc
int3
test
test
mov
rcrl
lret
ret
loop
in
aas
faddl
mov
popa
subl
mov
test
pop
stos
xchg
xor
loope
dec
into
sub
mov
jo
daa
or
or
loop
push
dec
mov
inc
repz
cmp
loop
lret
mov
inc
cmpsl
outsb
push
sbb
adc
cmp
inc
xchg
clc
stos
add
push
jbe
and
inc
movsb
xchg
jne
sbb
lock
aaa
mov
mov
dec
dec
daa
add
sahf
call
jno
jbe
stos
pop
lret
cmpsl
push
cmp
mov
lea
and
addr16
sub
insb
adc
mov
jbe
iret
ss
adc
jle
dec
pop
fdiv
insl
iret
repz
ficomps
jg
movsl
xchg
jecxz
jno
rcl
addb
jbe
icebp
push
gs
fstps
outsb
scas
jl
cmc
shl
in
lcall
xorl
mov
jns
push
add
mov
lock
roll
xchg
inc
xchg
add
push
test
xor
outsl
pop
lret
mov
psubsw
pop
lea
jo
xor
mov
das
mov
idivl
in
call
mov
aaa
imul
rcrb
pop
mov
arpl
sub
or
pop
std
jns
les
cmp
aad
or
dec
test
fstps
mulb
mov
imul
lret
xchg
loopne
loope
shll
pushf
mov
sub
xchg
or
jmp
cmp
test
jecxz
xchg
xor
jno
inc
mov
adc
push
ret
negl
shrl
xor
into
repnz
push
mov
dec
or
and
jg
xor
mov
dec
les
jg
or
xor
jns
sbb
jbe
fsubp
ljmp
bound
push
hlt
andb
jge
mov
dec
repz
and
push
mov
test
xchg
mov
popa
fadd
scas
dec
into
cmp
fdivs
or
xchg
int
mov
sub
sub
sub
sbb
fwait
push
jae
std
and
adc
stos
mov
sbb
mov
dec
adc
sbb
lods
pop
stos
jns
cld
xor
mov
inc
fsubp
roll
xchg
mov
jecxz
stc
repz
data16
cmpsb
in
loope
test
pop
mov
sar
stos
stc
push
clc
dec
pop
pushf
jecxz
repz
pusha
add
cmp
inc
test
mov
out
pushf
sbb
xor
sbb
mov
adcl
cld
fidivl
mov
jns
cmp
in
adc
mov
sub
and
in
mov
sbb
xor
fmul
sbb
sub
addl
mov
jp
cld
pop
div
aam
pop
test
lods
sub
cmpsl
or
dec
sarb
incl
and
fwait
fs
and
cmp
mov
lcall
push
mov
mov
xchg
mov
clc
stos
and
push
xor
pop
cmp
jnp
lret
xchg
mov
in
shrl
mov
mov
cmpsb
pop
push
mov
test
mov
test
outsb
cld
rorb
cmpsl
pushf
and
inc
andl
xor
popa
in
sbb
and
shrl
pop
mov
fcmovnb
push
mov
adc
sub
xchg
enter
rorl
outsl
js
push
add
les
int3
stos
outsb
sarb
pushf
lcall
cmp
sbb
cwtl
aaa
push
sti
push
adc
jmp
cmpsb
out
cmp
push
pop
add
xchg
sub
sbb
lods
outsl
iret
mov
dec
cmp
loope
out
xchg
dec
fdivl
pop
xor
adc
test
and
xlat
js
jns
cmp
pop
jle
mov
inc
in
push
into
push
pusha
fisubrs
xchg
scas
in
push
shlb
jne
fisttpl
pop
xlat
cs
and
cmp
js
add
or
movsl
inc
xor
dec
fnstsw
rcll
ds
cld
mov
pushl
fdivrl
mov
push
mov
xlat
cmc
lea
and
mov
lcall
add
push
or
cwtl
jne
sub
pop
aas
cmp
mov
leave
popa
lds
insb
ja
pop
nop
nop
pop
pop
or
pop
xchg
bound
ret
push
mov
pop
push
cmpsl
lods
push
adc
adc
hlt
ret
dec
pop
lods
popa
lds
sub
sub
enter
shl
loope
push
or
adc
insl
stos
imul
pop
ja
and
test
shlb
hlt
scas
repnz
xchg
adc
pop
scas
into
and
arpl
mov
mov
fcompl
ret
sahf
sub
ss
inc
ficoms
mov
adc
test
jmp
dec
jns
insb
dec
mov
and
fistl
js
fadds
sbb
movsb
cmp
mov
mov
inc
shl
out
sbb
mov
int
pop
enter
test
test
dec
ret
pop
jnp
test
xchg
jl
das
jne
imulb
dec
gs
mov
loopne
in
xchg
lahf
fwait
push
loope
call
lret
out
pop
fs
addl
testb
jns
cwtl
pop
xchg
cmp
icebp
jbe
cmp
jp
sub
dec
clc
cmp
fcmovbe
jmp
scas
jle
adc
insl
sarl
int
sub
cmovl
mov
sti
int3
decb
stos
test
and
mov
bound
mov
cmp
xchg
fstpt
fwait
push
out
int3
aad
lahf
mov
leave
adc
and
jp
ss
mov
jmp
cli
pop
out
push
push
xchg
pop
sub
dec
pop
xor
cs
or
and
xlat
xchg
inc
pop
dec
xor
push
mov
sbb
lret
dec
xchg
lahf
fsubrs
aam
pop
pop
jl
xor
xchg
jne
push
test
scas
sbb
mov
mov
sbb
mov
mov
rorb
cmc
imul
push
leave
xor
inc
pop
es
sub
cmp
sbb
icebp
inc
cmp
les
add
pusha
cmp
push
fidivrl
push
mov
clc
xchg
imul
mov
cld
out
test
repnz
cmp
lods
lods
push
aad
cmpsl
push
jnp
pushf
adc
mov
out
mov
lahf
mov
je
gs
sbb
dec
cli
icebp
push
stos
mov
scas
or
mov
dec
sub
jne
test
mov
add
incb
xor
sbb
pop
jno
shlw
aad
xor
popl
adc
das
pop
das
mov
fwait
nop
ljmp
mov
jns
push
cmpsb
jp
push
test
fimuls
shrb
push
add
sub
mov
into
mov
loopne
add
dec
loopne
fmuls
cld
mov
scas
jns
mov
aas
mov
xor
cmpsl
in
mov
nop
notl
mov
or
add
push
inc
pop
add
push
stos
xchg
and
add
adc
sbb
or
ret
dec
xchg
cltd
jb
loop
cmp
jns
cmp
rolb
cmp
xchg
inc
cmp
inc
les
sbb
mov
ljmp
push
jmp
mov
dec
mov
pop
mov
stc
add
fldcw
test
icebp
dec
test
xchg
push
push
push
dec
imul
push
pop
add
sarl
cmpl
push
xchg
sti
negb
mov
stos
jecxz
iret
xchg
out
addl
scas
clc
repz
ror
daa
pusha
hlt
adc
test
inc
jmp
call
stc
rcrb
mov
sbbb
ss
pop
push
inc
inc
xlat
inc
movsl
aas
push
push
add
jb
sbbb
jle
idivl
mov
pmaxsw
sub
insl
pop
test
fs
je
cli
scas
xchg
loop
dec
movsb
sar
jmp
add
std
or
mov
sub
insl
dec
std
inc
sub
jne
stos
test
mov
lds
add
outsb
sbb
jnp
lds
fists
lcall
shll
stos
in
xor
fwait
and
and
push
mov
in
ret
enter
into
mov
in
pop
fdivrs
cld
js
imul
xlat
jo
stc
dec
cmc
cmpsb
add
loope
std
add
mov
mov
les
sbb
adc
cmp
mov
push
stos
xlat
xor
divl
xchg
push
and
testb
add
stos
sbb
test
negb
or
test
cmp
sub
rcrb
aam
adc
sbb
jbe
call
jg
icebp
movsb
xchg
xor
stos
lds
adc
es
add
xor
cmp
xor
hlt
dec
sub
mov
cmp
mov
sub
jle
out
mov
pop
xchg
lcall
loope
test
push
enter
vunpckhps
addl
xchg
sub
ja
js
gs
scas
js
test
andb
out
loope
cmp
inc
xchg
out
idiv
ret
sbb
pop
pop
scas
jmp
test
cltd
cli
dec
pop
into
fsubrl
sbb
jp
mov
subl
ficomps
mov
nop
ret
push
xchg
repnz
adc
dec
loopne
out
nop
mov
bound
push
add
push
int3
data16
test
xlat
sahf
mov
cmp
adc
add
pop
pop
into
daa
std
jmp
fcompl
dec
mov
jp
mov
out
sbb
das
cmp
stos
jp
xchg
loopne
fwait
inc
sub
divb
pop
mov
mov
inc
pushf
in
lcall
in
data16
fcmovne
inc
jns
inc
sahf
pop
cmp
xor
ret
ja
sub
loop
xorl
popa
mov
xchg
xchg
cmp
jmp
enter
jno
ljmp
push
jmp
jne
and
subb
dec
out
outsl
xor
clc
and
loopne
xchg
adc
sahf
out
mov
stos
pop
mov
aam
test
mov
enter
xor
and
push
lret
stos
mov
push
aad
sub
lds
popf
and
nop
mov
xchg
mov
iret
xchg
enter
fildll
sbb
or
pusha
imull
mov
add
in
inc
dec
stc
hlt
jne
pushf
cmp
shl
outsl
xchg
fimull
out
adc
mov
mov
lahf
fwait
lds
mov
lock
inc
or
lahf
repnz
dec
cmpb
fsts
sbb
das
and
cwtl
lret
mov
sahf
popl
lock
hlt
cmp
leave
bound
in
xchg
enter
jae
jo
cld
pop
xor
xor
mov
jae
xlat
pop
cltd
fldl
imul
mov
sbb
inc
rol
push
dec
aaa
repnz
dec
push
dec
hlt
aaa
imul
mov
mov
and
fbstp
sahf
ret
xor
push
mov
bound
cli
les
daa
inc
adc
fisttpll
sub
call
movsl
mov
shlb
add
scas
push
filds
sbb
int
xlat
inc
inc
push
xchg
gs
testl
pop
fsubl
cli
jae
cmp
in
xchg
jle
ja
cmp
xor
push
clc
cld
lds
js
or
lock
out
cmpsl
in
dec
jb
add
or
mov
push
jbe
imul
das
mov
sbb
jae
jae
lods
iret
mov
pop
frstor
mov
call
xchg
inc
ror
sbb
movsb
leave
xbegin
orps
call
les
lcall
adc
dec
jns
mov
or
faddl
add
pop
or
shll
iret
out
or
shl
mov
xchg
push
jp
xor
mov
xor
inc
sti
cs
jo
dec
jbe
add
mov
repz
mov
lret
jbe
xchg
push
inc
push
mov
mov
fiadds
push
mov
ja
lret
loope
rcll
fstps
inc
movsb
es
cmp
and
jge
icebp
xor
pop
shrl
adc
call
jmp
sub
stos
xchg
stos
sbb
and
ret
inc
test
xchg
notl
sti
cmpsl
lock
jge
ret
jmp
pushl
lea
xchg
scas
lret
outsl
out
xchg
xchg
dec
movsl
and
lret
mov
pop
push
je
out
jmp
lods
mov
xor
inc
gs
scas
fistps
mov
jp
xchg
xor
test
push
sub
es
lods
cmp
lods
pushf
inc
jge
daa
cmpsl
dec
xchg
sahf
pusha
mov
pop
dec
out
shrl
mov
xchg
sbb
adc
arpl
in
xchg
les
scas
shrl
push
or
aam
mov
mov
jp
add
jbe
testl
ljmp
pop
fdiv
rcll
mov
cmp
push
push
jl
jns
inc
bound
adc
xchg
inc
pop
pop
lcall
pop
std
outsl
mov
xchg
xchg
mov
in
cmc
jle
inc
pop
jno
call
ss
push
imul
and
mov
mov
rorl
fildll
sahf
lcall
inc
and
fsubl
adc
ljmp
movsb
rcrl
ror
jo
rorl
icebp
fcmovu
mov
test
nop
push
clc
aad
pop
clc
mov
testb
xor
cmp
adc
add
cmp
or
dec
outsl
push
mov
and
or
xor
test
ds
leave
dec
mov
jb
add
dec
inc
pop
addr16
icebp
adc
pop
add
sbb
mov
je
mov
and
mov
pop
inc
std
hlt
adc
lret
cmp
pop
cmpsl
jno
pop
jl
add
jecxz
dec
add
clc
imul
xchg
enter
dec
mov
cmp
stos
cmp
call
ja
sbb
cmp
dec
mov
lret
loop
and
rorl
push
adc
cmp
jecxz
dec
adc
cmp
push
ret
add
and
xchg
xchg
clc
pop
pminsw
in
scas
push
jp
cmc
imul
stos
movzwl
loopne
or
scas
pop
data16
out
add
mov
mov
jmp
push
xchg
jo
sub
insl
out
test
popa
jno
push
out
cmpsb
xacquire
inc
or
mov
dec
int
jmp
pop
lods
mov
or
and
sbb
mov
ret
adc
mov
pop
leave
adc
icebp
or
rorl
test
add
cmp
cmpb
mov
into
mov
lahf
lahf
push
out
mov
hlt
inc
cmp
xchg
jl
iret
sbb
pop
int3
mov
cmp
jmp
push
inc
out
out
data16
out
push
adc
and
xchg
movsb
push
nop
loop
adc
mov
xor
xchg
cmp
dec
lds
stc
inc
fcmovbe
stos
xchg
sbb
imull
cmp
mov
inc
mov
fwait
rclb
ja
add
popf
mov
fadd
test
mov
daa
mov
iret
mov
push
mov
hlt
jno
inc
in
cmp
jne
jle
ror
jg
xchg
dec
pop
mov
fsub
loope
in
mov
mov
mov
push
lcall
in
pop
pushaw
sbbl
shl
imul
rcl
xchg
iret
sub
roll
mov
mov
in
cmpsb
lods
add
movsl
loopne
and
sub
in
bound
in
push
adc
in
sub
mov
pop
fcomps
adc
rcll
cmp
cltd
mov
movsb
inc
or
lret
inc
sbb
mov
add
and
stc
daa
cmp
xor
loope
sub
xchg
popa
sahf
cs
cmc
das
jne
lea
hlt
mov
dec
cmp
pop
mov
outsb
imul
cmpsb
subl
add
cltd
jmp
repz
in
in
int
or
notb
xor
stc
adc
imul
jl
fimuls
dec
shll
repz
lar
and
in
outsl
loopne
test
pop
inc
cmc
int3
loopne
push
jle
sub
or
xchg
or
jns
stos
outsb
mov
lret
xor
cld
inc
aam
test
ret
jle
xor
jge
scas
cld
mov
pop
notb
out
clc
or
mov
mov
mov
in
pop
jnp
addr16
stc
sbb
xchg
les
les
imul
jb
or
mov
scas
pop
xchg
jno
xorb
mov
aad
dec
and
pop
sub
rcl
mov
lods
add
pop
pop
leave
xor
imul
mov
xorl
add
pop
jo
sbb
push
push
out
or
add
sub
lret
scas
outsb
mov
mov
fbld
cld
push
mov
sub
and
inc
fistpl
add
loopne
cltd
sti
push
xor
push
pop
sub
pop
scas
out
aaa
and
xlat
lock
mov
sub
push
mov
gs
xchg
dec
xchg
cmpsl
ja
pop
xchg
cmpsl
mov
xor
mov
cltd
mov
sarl
into
or
mov
mov
lds
adc
popa
cmp
int
jmp
sub
sub
inc
in
sub
cwtl
mov
add
mov
rolb
jmp
lods
lock
dec
jle
les
xchg
mov
cwtl
push
idivl
adc
icebp
stos
mov
nop
push
push
into
and
xor
loope
push
mov
shr
std
lea
stos
add
ficoml
cltd
xchg
cmpsb
adc
or
cmp
and
cli
mov
pop
sbb
adc
push
adc
in
mov
pop
and
mov
nop
jbe
mov
push
ss
orb
mov
int
sbb
sbb
fmul
push
jmp
or
lock
pusha
pop
sub
in
sti
sbbb
gs
xorl
shr
adc
dec
jl
les
push
add
mov
stc
cmp
sbb
ret
and
inc
lods
insl
fidivrs
and
les
or
mov
insl
shl
movsb
inc
andb
dec
mov
add
les
xchg
jo
push
cmp
cmp
into
addr16
cwtl
jl
loopne
pop
sub
xor
cmp
push
cmp
push
or
insb
sti
jp
test
outsl
cs
sbb
and
push
sti
add
fidivl
cmp
dec
pusha
xor
jl
loope
in
lret
and
es
push
int3
pop
in
jl
pop
add
es
adc
loop
mov
les
int
mov
push
cmpsb
test
out
lea
andl
xor
imul
jae
adc
sub
cmp
testb
cld
xchg
int3
ja
icebp
fistpl
nop
cmp
js
sbb
scas
pop
jge
fs
and
and
push
xlat
and
push
imul
xor
ja
fildll
shr
daa
into
or
scas
cltd
fbstp
mov
mov
mov
and
int
ljmp
push
adc
shll
pop
inc
mov
and
out
scas
out
push
clc
in
popf
jae
mov
popa
push
and
pop
aaa
and
movb
je
push
sub
mov
sbb
sub
jnp
into
cmpsl
inc
pop
es
jge
movsb
mov
lahf
ficompl
lods
inc
fs
push
push
repz
lods
dec
dec
mov
out
aam
sbb
in
ret
imul
in
subl
cmp
and
dec
test
jecxz
mov
loop
addr16
out
inc
inc
xor
cs
popa
jp
mov
out
pushf
jecxz
scas
into
ret
fistl
xchg
std
adc
xchg
push
xor
pop
inc
mov
push
adc
incl
icebp
mov
in
out
or
loopne
hlt
xchg
mov
fs
mul
push
insl
mov
int
mov
clc
and
add
lea
test
sti
xchg
and
lods
cmpsl
sbb
lods
push
cmp
arpl
cmp
adc
sub
inc
fsubr
cld
stos
xchg
jg
mov
xlat
cld
xchg
xor
inc
popf
fadds
mov
je
dec
pop
push
movsb
and
jl
cmp
push
insb
popa
mov
mov
and
pop
cwtl
cld
xchg
dec
in
sti
loopne
andl
es
imul
sub
aaa
and
xchg
or
mov
pop
cmp
rcrl
adc
push
mov
cltd
and
jns
subb
pop
lret
pusha
std
aaa
mov
mov
jne
test
cwtl
stc
movsb
imul
adc
inc
jne
call
movsl
out
inc
cmp
movl
and
or
push
popa
lods
jns
add
push
cwtl
jns
dec
fdiv
loopne
xor
testb
ret
scas
adc
aas
mov
das
pop
repz
add
jae
push
lret
into
in
adc
and
fistpll
clc
pop
loop
dec
mov
xchg
js
mov
adc
push
add
jl
sbbl
jae
icebp
lret
jp
add
jl
xorb
es
adc
pop
fcoms
inc
sbb
loope
mov
mov
cmp
jne
repz
outsl
pop
sbb
pop
xchg
lea
cmc
aas
jecxz
dec
xor
fdivrs
jle
jle
or
push
and
or
adc
adc
pusha
cltd
jle
orb
push
jmp
mov
xor
push
mov
outsb
fs
push
out
stc
inc
pop
sub
pop
jo
mov
dec
jge
jns
dec
mov
fcoms
pop
add
int3
jle
dec
insb
cmp
leave
jle
jb
shlb
cmp
pop
test
stc
mov
jae
jbe
xchg
les
adcb
push
pop
mov
push
iret
mov
test
lds
inc
stc
xor
sub
iret
and
ret
lods
in
nop
lcall
in
es
aas
enter
pop
jmp
les
in
lods
data16
loop
popa
mov
push
jp
mov
mov
nop
lahf
and
fsubrs
aad
and
shrl
sub
add
mov
js
inc
nop
cld
mulb
frstor
lcall
xor
roll
jle
imul
push
outsb
inc
into
inc
repnz
out
add
pop
adc
xchg
jbe
sub
xchg
mov
fwait
jnp
xchg
add
or
push
in
arpl
fcoms
insl
jge
pop
cmpsb
hlt
das
pop
add
scas
mov
je
mov
xchg
mov
ds
in
push
mov
dec
xor
iret
jb
mov
push
dec
and
mov
sbb
call
icebp
xchg
inc
jno
mov
icebp
pusha
adcb
les
fbstp
into
mov
popf
mov
xchg
test
pop
jno
mov
mov
sbb
ss
rcll
xor
inc
and
lds
push
insb
xchg
mov
lcall
das
shlb
lret
repnz
cltd
mov
mov
xchg
pop
outsl
adc
sbb
jnp
and
jno
jae
and
shlb
cmc
or
or
push
filds
sub
lea
cmp
xchg
adc
test
sub
mov
adc
dec
sti
jnp
inc
repnz
roll
je
leave
jo
loope
fidivrl
xchg
mov
xor
jle
mov
jb
push
xorl
pop
mov
ret
pop
add
xchg
pop
xlat
mov
sbb
jmp
mov
clc
out
add
out
jp
sbb
fcomi
fldenv
std
adc
inc
popf
mov
fs
dec
xor
fidivs
adc
mov
aad
push
xlat
pop
inc
xor
cmp
dec
dec
sub
cmpsl
dec
and
mov
jo
mov
popf
pushf
ret
or
dec
add
jle
inc
int3
xlat
cmp
mov
mov
test
jle
rorb
out
xlat
popa
aad
sub
jae
ja
mov
and
popl
push
clc
jnp
xchg
jmp
lock
mov
ljmp
ds
and
add
inc
repnz
pop
fmuls
sahf
gs
js
cmpsl
jo
daa
cwtl
outsl
movsl
push
fstpt
sbb
mov
sti
pop
sti
aas
iret
xor
les
and
aam
mov
stos
imul
dec
inc
push
sbb
movsl
mov
mov
mov
adc
push
xchg
pop
jle
adc
test
popf
int3
add
shlb
sub
jecxz
ja
mov
mov
in
mov
popf
jns
daa
add
jp
mov
push
sub
dec
movsl
mov
dec
xor
test
push
or
jo
ja
movsb
xchg
addl
sub
pop
daa
sarb
mov
add
ja
mov
int
test
inc
repnz
psadbw
int3
es
dec
out
scas
xlat
lcall
les
adc
lret
rclb
jne
arpl
or
mov
mov
ficoml
ret
xlat
rclb
jno
mov
dec
or
je
add
and
xor
pop
fcoml
dec
fcom
or
mov
mov
rclb
xchg
in
jmp
pop
pop
sbb
popf
inc
push
fsubrs
pop
jno
fmuls
aad
cmp
jnp
in
repz
mov
mov
cmp
movsl
andb
test
add
call
mov
outsb
in
mov
cwtl
xchg
mov
lock
pushl
pop
mov
cs
mov
add
cld
fdivr
lahf
cmp
mov
xchg
mov
push
call
fsub
sarb
add
xor
adc
fwait
xor
or
mov
ret
mov
repnz
jnp
lock
sub
sbb
dec
rcrb
lods
out
ja
icebp
xchg
xchg
sub
xchg
lcall
jnp
lahf
and
and
or
xor
adc
sbb
in
sub
or
pusha
insl
pop
mov
push
jg
mov
gs
movsb
leave
fstps
or
shrl
mov
test
in
push
adc
aad
xor
cmpsb
popa
hlt
lods
fnstcw
popl
and
add
int3
sub
add
movsl
pushf
outsb
jo
sbb
out
nop
and
std
test
ljmp
fs
and
out
jnp
pop
xchg
into
pushf
pop
xchg
xor
dec
inc
push
dec
push
inc
inc
out
mov
lock
pusha
sub
scas
aas
mov
test
add
xchg
int
dec
pop
leave
fmull
add
cmpsb
dec
fcomip
mov
movsb
lods
outsl
dec
cmp
add
test
es
test
lds
rolb
insl
lea
mov
inc
test
push
js
and
aaa
dec
rorb
js
mov
inc
and
enter
mov
aad
mov
pop
outsb
mov
es
rcll
insb
mov
sub
ljmp
imul
test
in
cli
cmpsl
lea
and
mov
inc
pop
test
cmp
sub
jno
jmp
mov
icebp
push
or
pop
popa
lret
int
sahf
xorb
jge
aam
js
inc
into
lock
push
cmpsb
xor
rorb
fs
and
and
xor
xchg
and
lods
mov
dec
dec
ret
sahf
inc
call
xchg
rclb
inc
dec
dec
pop
pop
stc
or
mov
sub
and
or
stos
dec
fidivs
iret
int
xchg
rol
sbb
adc
sbb
cmpsb
cs
mov
aaa
push
and
fiadds
pop
push
rcrb
orb
stc
sbb
ja
test
sarl
xchg
fcoms
push
jo
lock
jecxz
movsl
call
subb
lahf
and
jns
mov
sbb
daa
pusha
pop
stos
sarl
adc
stos
pop
shlb
popf
rclb
adc
lea
or
dec
push
push
test
out
std
aad
cmp
sbb
fmul
outsb
dec
daa
js
mov
mov
add
sarl
daa
jp
xor
insl
adc
addr16
into
xchg
push
push
sub
lds
dec
jp
hlt
in
popa
xorb
mov
mov
mov
pop
jmp
push
sbb
aad
mov
mov
xchg
repnz
out
aas
fsubs
mov
cwtl
mov
scas
cmp
fisttps
inc
rclb
movl
push
xor
xor
mov
or
jge
popa
cmp
xor
cmp
sbb
std
mov
mov
dec
sbb
ret
jno
push
or
cmpsb
xor
in
dec
or
mov
stos
inc
stos
icebp
insb
jno
mov
inc
in
jle
cld
xor
insb
mov
addr16
xchg
int
clc
add
loop
xchg
or
add
sbb
xchg
cmp
inc
adc
cmp
adc
aaa
arpl
jecxz
pop
in
sbb
mov
inc
jg
shlb
pop
addl
popl
inc
test
lret
xchg
cmc
movsl
inc
or
rol
leave
ficompl
lcall
sbb
dec
stos
and
bound
sbb
push
lret
mov
daa
sbb
fdivrs
ret
and
loopne
inc
ret
jp
jb
pusha
sub
imul
push
cmc
inc
inc
fadds
push
xor
and
fimuls
dec
test
mov
inc
addr16
and
pop
sub
pop
cli
dec
sub
jae
jl
pop
pushf
sarl
or
mov
lock
popf
xchg
mov
or
pop
dec
or
int3
call
aad
pushf
loop
and
loopne
sbb
mov
les
sub
and
xchg
and
insb
mov
push
xchg
aam
mov
ds
out
xchg
clc
dec
xchg
lcall
mov
dec
shrb
ret
ja
fwait
cmp
je
loop
icebp
shll
ret
test
bound
mov
cld
pop
jbe
adc
imul
fs
pop
pusha
add
loop
adc
sub
filds
add
dec
dec
jb
data16
test
xor
popf
fwait
movsb
pushf
ljmp
inc
jns
int3
in
add
add
jb
sbb
cmpb
xor
mov
movsb
clc
xchg
pushf
add
psrlq
sbb
pusha
rcr
ja
iret
fsubs
mov
and
sbb
imul
pop
add
push
lret
jae
fwait
sahf
jp
out
loope
xchg
cmp
push
insb
lahf
pop
sbb
jno
push
imul
js
inc
push
add
inc
pop
or
cmp
inc
pushf
je
jo
mov
ljmp
lret
lock
pop
test
sub
xchg
mov
pop
lds
and
mov
sub
and
mov
icebp
aad
push
gs
adc
rclb
insl
mov
xchg
in
mov
mov
mov
push
mov
imul
aam
mov
sbb
cld
sahf
movsl
loopne
sub
sub
jecxz
enter
sbb
push
adc
sub
pop
gs
jno
add
mov
add
cmp
in
xchg
repnz
sub
ja
cld
lds
or
outsl
inc
xlat
mov
xor
cmc
mov
pop
lcall
fs
lahf
push
xor
xor
sbb
cmc
dec
ret
daa
rorb
das
int3
add
push
mov
mov
adc
cmpsb
sub
xor
clc
adc
mov
xchg
sarl
loop
push
xchg
ds
mov
inc
test
ret
fisttps
mov
xchg
pusha
mov
scas
mov
xlat
fistl
jge
nop
loopne
inc
xchg
aad
js
xchg
call
inc
flds
mov
shlb
movsl
in
jl
cmp
lahf
mov
cmp
fdivrl
repnz
dec
sahf
inc
mov
movsb
arpl
add
lcall
xor
pop
inc
pop
outsb
loopne
mov
push
lds
cmp
leave
mov
mov
cmp
mov
push
stos
xlat
rcll
das
int3
push
in
aad
pushf
pop
leave
out
out
dec
stos
outsb
pop
and
inc
lahf
out
lret
mov
mov
rclb
adc
mov
stos
fs
adc
enter
jecxz
mov
mov
jg
adc
cmp
outsb
add
push
xchg
jp
lret
aam
and
push
in
and
pop
mov
lcall
or
inc
adc
mov
repnz
sti
sub
aad
pop
inc
sbb
insw
arpl
rolb
inc
cmp
sub
das
adc
push
outsb
imul
scas
insb
push
mov
test
mov
shlb
ret
or
out
pop
test
cmpsl
stos
pop
jne
cmp
filds
hlt
or
pop
out
mov
sbb
cmpsb
arpl
pop
push
jae
in
jle
inc
adc
mov
jb
sbb
xor
dec
cmp
inc
mov
sub
xchg
push
cli
and
sub
loope
stos
mov
int3
inc
sub
std
jae
enter
pop
cmp
inc
cmp
ret
push
fildll
stc
shlb
loopne
cmc
mov
out
cmpl
into
pushf
mov
icebp
fiadds
push
pop
imul
adc
lret
mov
push
push
imul
add
icebp
rcll
mov
cmovl
xor
mov
or
lret
es
cmp
xchg
jb
insb
fiaddl
aas
movsl
cmp
pop
lds
jb
push
cmp
clc
iret
pusha
insl
xor
lret
xlat
add
add
pop
fadds
mov
pop
out
mov
push
add
jne
push
out
cltd
stos
mov
xchg
add
jb
cli
icebp
fucomi
or
jae
adc
xchg
insl
sub
or
mov
lods
je
cmp
and
addr16
test
fsubrl
mov
cwtl
mov
ret
outsl
jns
cmpb
or
jb
cmpsb
das
lret
mov
adc
mov
arpl
lods
loope
push
cmc
mov
ds
test
cmpb
jecxz
mov
jb
and
xchg
mov
ret
sbb
pop
test
cs
test
and
insl
jns
iret
or
cmc
repz
jb
sbb
mov
xchg
push
cmp
sarl
lock
mov
sub
mov
lret
hlt
orb
xor
shlb
std
cmp
mov
push
sbb
test
cwtl
pop
ljmp
jle
and
and
shrl
pop
cmp
mov
pop
aas
pop
add
jp
cmp
lret
xchg
aaa
inc
sbbb
ret
dec
mov
lods
loope
fs
cwtl
pop
pop
push
bound
in
rcrb
sbb
mov
sub
dec
push
daa
in
pop
mov
xor
js
xor
insl
adc
or
in
data16
jmp
je
sbb
ret
in
fcmovbe
dec
fldenv
arpl
out
dec
iret
call
subb
add
daa
mov
sub
jmp
sbb
add
adc
cmp
hlt
adcl
imul
popf
pop
cld
mov
pop
cltd
mov
rcll
testb
popf
repz
pop
xor
sub
aad
int3
imul
mov
mov
mov
enter
jl
mov
loopne
lods
jnp
fwait
pop
xchg
mov
jae
pusha
dec
jg
add
push
mov
fimuls
std
pushf
addl
pop
ds
pusha
jmp
add
iret
scas
mov
test
notb
jno
icebp
in
call
cmpsb
mov
jmp
and
xchg
xor
inc
push
pop
or
xchg
ss
add
inc
xchg
sub
icebp
adc
jb
ja
push
mov
cmpsb
mov
push
les
loopne
test
push
mov
and
push
sub
adc
cli
pop
enter
aam
fcomi
xor
mulb
mov
sub
dec
xchg
insl
loop
jge
dec
cli
ss
sub
imul
fdivrs
add
jbe
and
fwait
sub
outsl
mov
lcall
outsl
mov
call
leave
add
add
test
subb
add
insl
xor
out
adc
adc
les
xchg
pop
xchg
mov
sti
leave
data16
cs
cmp
sahf
mov
out
mov
jp
jb
inc
sub
push
dec
inc
movsl
stos
xor
psubq
sbb
mov
ss
mov
ljmp
xchg
cld
dec
inc
xlat
imul
lcall
loopne
jne
mov
cmp
outsb
xchg
jle
in
out
mov
sub
xor
add
jnp
movsl
adc
push
push
insl
iret
iret
insb
cmp
jl
movsl
adc
shll
push
add
push
add
mov
mov
push
test
int3
inc
dec
cmc
ret
lret
std
stc
shl
add
pop
fs
cltd
add
push
test
dec
ljmp
data16
push
cmp
je
push
rcrb
mov
clc
and
bnd
adc
xor
mov
adc
mov
mov
fdiv
test
push
sbb
je
inc
das
adc
and
jp
in
push
push
inc
push
lea
ljmp
xchg
test
cli
insl
pushf
lcall
mov
out
inc
hlt
xchg
and
push
nop
fs
mov
xchg
gs
mov
sbb
stc
push
int3
mov
imul
fbstp
adc
inc
inc
or
mov
mov
or
pop
dec
shr
xor
iret
lods
pop
cs
mov
lcall
mov
mov
dec
std
outsb
neg
and
mov
cmp
push
loop
inc
pusha
push
adc
cmp
mov
sbb
icebp
xchg
btc
enter
or
mov
lods
ljmp
mov
outsl
xchg
daa
int3
jmp
std
mov
cs
and
mov
lret
es
push
aam
orl
push
push
inc
mov
xchg
je
jnp
fsubrs
rcr
jmp
loop
int
jl
mov
faddp
lret
xor
cmc
xor
aad
push
inc
mov
xchg
lcall
mov
punpckhwd
je
mov
add
test
lds
fidivl
push
push
mov
test
sahf
add
mov
fidivs
mov
pop
or
aas
jge
add
dec
shll
nop
lods
jne
add
xchg
cmc
or
add
mov
inc
jnp
sbb
stos
sub
jp
in
clc
dec
les
das
int
mov
or
mov
int3
mov
test
data16
sub
add
mov
adc
fcomi
cmp
dec
mov
push
aas
data16
in
mov
leave
adc
daa
and
xchg
push
nop
sbb
jg
aas
xor
xchg
pop
incl
mov
xor
cmpsl
test
adcl
add
les
cmc
jg
lahf
xor
loop
mov
inc
mov
pop
cmp
mov
cmp
sbb
adc
rcrl
adc
test
dec
bnd
lret
cmp
xchg
les
popl
or
movsl
arpl
aam
lds
mov
pop
cmp
das
movsb
jne
cmpsb
lock
sbb
xchg
pop
pop
shll
fisttpl
das
arpl
jmp
jge
insl
and
mov
out
xchg
xor
pop
fwait
jge
shrl
cmp
outsb
push
ret
int
lret
add
push
sbb
in
lahf
pop
iret
dec
push
jecxz
test
fndisi(8087
ja
ds
jge
out
sti
push
cmpsb
dec
jecxz
in
popf
loope
imul
lret
sub
jno
je
or
mov
jge
scas
or
out
adc
imul
jae
pop
rcr
mov
jl
jae
sub
fs
jmp
dec
imull
repnz
rcrb
pop
sub
inc
loop
push
out
sbb
and
push
pop
ss
mov
mov
sbb
out
ret
dec
push
adc
outsb
xchg
push
mov
das
repz
les
dec
mov
cmp
das
pop
adc
rcl
pop
push
cmpsl
or
or
insb
xor
mov
pop
lret
adc
xor
mov
roll
sub
lea
aad
xor
je
and
mov
sbb
cld
mov
jg
inc
adc
sbbb
sub
int3
or
andl
jae
push
lock
outsb
test
lahf
out
mov
mov
lcall
imul
mov
mull
fbld
fistps
xchg
fisubrl
repnz
movsl
adc
jl
je
push
pop
add
and
scas
mov
adc
pop
mov
xorl
pop
inc
cmp
aaa
ja
xor
sub
jnp
ja
cmp
mov
pop
mov
lret
mul
or
jmp
mov
xchg
push
mov
xchg
jae
repnz
xlat
jp
push
ja
jl
fisubs
pop
fiadds
in
or
sub
and
add
xchg
inc
call
inc
in
in
dec
sub
xor
loope
enter
sub
call
push
pop
push
adc
jno
sbb
int
or
mov
mov
pextrw
cwtl
add
or
mov
xor
das
repnz
xchg
daa
mov
mov
mov
xorb
jnp
bound
enter
shl
cld
push
in
pop
dec
cld
push
or
test
dec
pop
popf
lcall
pop
mov
adc
mov
xchg
js
popf
das
add
adc
roll
xor
iret
jae
test
and
inc
fdivrl
je
dec
loopne
push
cltd
add
repnz
out
hlt
jl
ret
loopne
mov
or
fs
fistl
rcrl
cmpsl
xor
adc
pop
push
push
pop
iret
clc
pop
outsl
dec
loopne
and
push
cs
out
xchg
push
add
mov
ljmp
shll
sbb
fwait
icebp
and
in
dec
dec
clc
das
fs
adc
pusha
adc
dec
push
repnz
push
lods
mov
xchg
push
sub
jbe
fidivs
xchg
fxch
icebp
je
sbb
jae
adc
jge
rorb
loop
add
mov
xchg
dec
mov
sti
sub
jb
jecxz
push
shll
push
int
aam
mov
pop
loopne
stc
and
fisubs
mov
je
or
outsb
jne
sbb
mov
je
into
in
lock
jbe
push
xlat
mov
stc
in
sub
xchg
inc
aaa
inc
adc
xchg
jmp
xchg
sbb
mov
adc
sub
iret
or
sub
mov
out
popl
mov
dec
ja
ficoml
nop
lret
pop
cmpsl
push
mov
jle
mov
sub
push
pop
jb
in
push
dec
ds
fcoms
mov
imul
hlt
jb
loopew
sbbl
or
fcomp
add
mov
jl
loopne
arpl
push
adc
push
in
icebp
jl
mov
inc
lds
mov
into
loopne
push
and
fisttpll
fwait
xchg
lret
lods
add
int
jl
pusha
mov
jo
push
ret
shlb
push
push
mov
push
ss
das
js
mov
jno
inc
fsts
add
pop
sbb
push
dec
imul
mov
in
add
or
add
inc
xchg
xor
mov
in
jae
and
popf
xchg
orb
ds
mov
add
lahf
in
mov
sbb
pop
mov
push
xor
sub
ret
fnstenv
add
bound
inc
cmp
lea
inc
push
icebp
cwtl
outsl
dec
or
push
inc
push
adc
in
pop
and
lds
movsb
push
or
xor
or
daa
fstps
mov
mov
loope
jb
inc
mov
and
lods
and
sbb
mov
adc
out
jne
sbb
mov
jbe
mov
mov
fistl
jnp
je
adc
mov
lods
loope
hlt
push
add
xchg
xchg
bound
shlb
adc
mov
sbb
cmp
xor
xor
jle
lods
and
push
mov
mov
lds
jecxz
add
aaa
lret
sbb
or
jge
mov
shrl
add
mov
ret
cmp
cli
lret
xor
popf
add
dec
in
jnp
testb
negl
push
lock
push
xor
jno
push
mov
sub
lds
xor
stos
pop
pop
add
mov
dec
xchg
test
push
cmp
movsb
cmp
clc
stc
inc
or
in
insl
jg
xchg
loop
adc
fstpt
lahf
mov
das
testb
pushf
cmpl
push
sar
popa
cld
xor
movsb
xchg
pop
loope
out
out
loope
hlt
push
or
stos
dec
movsl
xchg
mov
xor
test
dec
pop
lods
addr16
lock
sti
cld
fdivl
mov
inc
xor
jg
in
es
sbb
iret
push
leave
xchg
repnz
out
std
xlat
cli
test
stc
aas
or
inc
xor
mov
push
inc
sub
push
cmp
pop
mov
dec
popa
imul
add
adc
cmpsb
subb
call
jae
ss
sub
shl
push
into
cmpl
out
cld
push
call
lret
xchg
nop
and
pop
aas
cmp
pop
cld
sbb
sahf
mov
mov
cmp
xchg
mov
jnp
sub
lock
aas
push
push
xchg
mul
js
jno
jbe
xorb
ja
jg
xchg
mov
jmp
repnz
add
in
cmc
pusha
pop
ret
clc
movsb
loopne
pop
mov
loope
loopne
sti
pusha
cwtl
cmc
iret
out
mov
or
cwtl
rorl
push
jge
sbb
dec
xchg
pop
pop
push
fidivl
add
jecxz
cmp
and
movswl
and
pusha
iret
fisubrs
dec
inc
pop
push
sub
mov
mov
xchg
inc
jmp
and
adc
inc
mov
outsl
data16
push
insl
push
xor
fcoml
push
lret
stos
leave
inc
test
jae
rcll
movsb
out
pusha
and
mov
es
dec
or
ss
ljmp
mov
test
push
std
jmp
jne
xchg
sbb
cwtl
test
xor
stc
mov
jmp
push
daa
ret
fimuls
inc
jle
fisubrl
mov
push
dec
mull
sarl
scas
sti
in
outsb
xchg
js
mov
pushf
xor
dec
dec
push
test
repnz
and
adc
jb
mov
pop
push
mov
das
sub
jp
repnz
fimuls
jb
scas
inc
cld
jo
insl
cmp
fildl
push
add
jecxz
fs
mov
pop
imul
pop
mov
lods
ret
jns
xchg
jb
sbb
rorb
jbe
scas
clc
mov
repnz
and
mov
lods
aas
movb
pop
outsb
and
test
jle
cs
testb
ljmp
aad
imul
testb
add
inc
int
jmp
or
push
jge
inc
out
out
mov
jge
sub
test
cmp
mov
cmc
out
std
jl
mov
push
xor
pusha
aam
int
pop
movsl
adc
movsl
fisubrl
mov
push
mov
mov
stos
adc
rcrl
sbb
pop
clc
push
sbb
loope
mov
lcall
mov
push
adc
and
xchg
cmp
loop
xor
dec
ds
les
pop
push
adcl
xor
mov
lods
in
mov
aam
int3
dec
pop
jo
js
es
negb
inc
dec
lods
sbb
mov
jae
lahf
lret
insl
rcr
gs
mov
lahf
repnz
cli
dec
add
jno
imul
imul
lahf
sub
lret
mov
push
rcrb
xchg
pop
call
mov
cmp
into
mov
imul
xor
cli
cmp
mov
push
mov
outsl
pop
cmp
imul
pusha
pop
ds
imul
jmp
mov
xchg
push
adc
insb
push
mov
mov
cmp
jp
int3
pop
iret
lock
insb
and
lahf
stos
cmp
mov
mov
aad
sbb
or
fistpl
add
loope
push
insb
cmp
idivl
adc
lods
dec
repz
mov
push
mov
push
cltd
add
scas
jo
cmp
sub
rclb
cs
dec
addb
test
jne
shll
or
adc
jp
sbb
std
jmp
daa
pop
lods
xor
lock
inc
and
mov
xor
outsl
loope
mov
sbb
in
test
xchg
aas
rol
negl
movsb
inc
pop
data16
adc
push
shl
in
ja
sub
aad
cwtl
pushf
pusha
xchg
sarl
lea
dec
std
divb
dec
xchg
ljmp
xlat
pop
mov
stc
inc
or
movsl
cmp
das
mov
cmp
jmp
leave
sbb
jne
pop
and
cmp
aas
pop
repnz
sti
and
mov
or
lock
sti
pop
rcr
imul
pop
shl
fnstenv
aad
int
pop
outsb
int
lock
jnp
fisubl
jp
xor
aas
cmp
pushf
fs
inc
rcl
mov
mov
push
xor
sub
sti
jmp
adc
sbb
push
enter
xor
popf
das
cmc
shr
mov
cmc
adc
push
test
push
lea
and
xor
inc
add
repnz
fnstenv
jle
ret
adc
cmpsb
shl
and
fxch
push
sti
out
popf
divb
jne
lahf
movsl
cmpsl
inc
cli
addr16
ds
bound
shl
and
popf
movsl
movsb
mov
test
roll
jmp
stc
ss
jp
repnz
gs
jbe
inc
push
ss
roll
inc
faddl
dec
dec
xchg
pop
pop
outsl
sub
sub
and
cmp
or
pop
lock
aad
xchg
enter
sbb
mov
mov
in
push
addb
loop
add
jns
xor
xchg
dec
mov
int3
js
sbb
sub
je
rcr
mov
fwait
cmc
icebp
jecxz
inc
inc
and
sbb
push
testb
inc
fwait
xor
ret
je
mov
repnz
cli
mov
test
xor
cli
call
and
adc
mov
xchg
fcmovnbe
std
int3
or
pop
ret
xor
aaa
xchg
push
or
lods
lret
dec
jmp
mov
fcmovb
add
pop
mov
mov
xor
jge
lcall
sub
sub
scas
sub
pop
xlat
bnd
cli
or
push
leave
arpl
or
sub
push
fists
rcrl
xor
fisttpll
pop
add
push
sbb
and
fdivs
into
jno
shrb
in
lods
sub
lods
mov
push
inc
xlat
mov
xchg
insb
in
push
std
aas
push
xchg
mov
ret
jnp
fstpl
mov
inc
call
inc
out
call
or
sbb
sarb
fdivl
xchg
fcompl
jns
mov
ror
sub
fstp
in
inc
xor
jmp
cmp
adc
movsb
cmp
into
mov
sub
ljmp
aam
and
mov
jo
ret
cltd
ret
mov
push
outsb
ret
test
push
jge
out
out
mov
cmc
fsubl
or
scas
xor
aad
sbb
push
out
xchg
mov
dec
ds
cmp
dec
and
aam
ds
mov
imull
ret
sub
adcl
jae
mov
xlat
mov
clc
lock
mov
test
cltd
rep
dec
pop
into
mov
mov
and
repnz
test
or
in
or
mov
mov
cmp
pushf
sbb
andb
cmp
cltd
cwtl
push
and
cmp
xchg
ss
jp
lcall
sub
in
loop
ss
fldl2e
pop
icebp
loope
xchg
popf
mov
ljmp
mov
mov
push
stc
faddl
mov
mov
mov
dec
cwtl
and
test
outsb
mov
mov
test
imul
dec
fsts
scas
loopne
daa
loopne
movsb
adc
fsts
cmp
push
mov
movsb
mov
push
addr16
pop
subb
cmp
dec
inc
xchg
sub
push
test
aas
and
jnp,pt
mov
xchg
aas
mov
mov
out
xor
inc
shlb
xchg
je
fs
call
test
or
push
aad
shlb
fistps
imulb
arpl
out
rol
cli
jle
aam
mov
scas
adc
dec
mov
pop
out
jge
push
push
mov
or
popa
mov
mov
test
mov
daa
pop
test
fmuls
lock
cld
repz
push
repz
mov
cmpsl
xchg
in
fdivrs
pop
mov
movsl
and
hlt
fs
push
mov
push
repnz
pop
add
mov
imul
fidivrs
sub
fs
call
adc
push
sti
loope
lret
jmp
jg
or
daa
mov
xor
xchg
int3
xor
pop
pop
pop
mov
test
mov
fsubrs
or
inc
xor
sub
sub
aaa
shlb
adc
aaa
imul
mov
aad
and
and
cmp
xor
movsb
aam
mov
pop
jl
jb
pop
imul
push
jne
bndldx
ret
xor
or
fsub
mov
mov
jnp
sub
shl
pop
outsb
adc
in
aad
sub
push
fldt
movsb
dec
jns
rol
xchg
inc
jbe
jle
jecxz
push
pop
push
pusha
addl
imull
ja
ds
xor
mov
mov
movsb
pop
and
pop
cld
pop
lds
sti
imulb
add
push
and
mov
and
repz
cmp
sahf
pop
or
pop
push
ret
pop
icebp
mov
dec
or
sbb
jg
lahf
sbb
mov
stos
bound
in
fwait
addr16
iret
adc
js
adc
test
rolb
sbb
pop
pop
dec
test
or
push
dec
in
fcompl
jno
xchg
cli
cmpsl
mov
call
clc
jmp
sbb
mov
push
clc
lock
test
mov
pusha
xchg
jbe
out
popf
xchg
std
movsb
xlat
cmp
xchg
add
div
and
jbe
push
fnstenv
das
push
pop
pushf
jae
pop
fwait
fwait
cmpsl
fwait
lods
outsl
sub
mov
xchg
repnz
mov
pop
inc
pop
sub
cld
mov
adc
movb
out
cs
cli
in
and
adc
push
in
dec
mov
xlat
addr16
stc
jecxz
mov
xor
es
sbb
std
add
out
or
jmp
cmp
fcompl
dec
xor
adc
xchg
in
out
scas
jo
add
cmp
ret
pop
in
sub
or
inc
jnp
dec
jb
sbb
xor
lock
jp
dec
stos
jmp
or
inc
pop
mov
jne
mov
jnp
cmpsb
insb
out
jp
out
bound
fs
sbb
adc
aad
xchg
jne
stos
xchg
popa
dec
sbb
pop
into
scas
popf
fwait
and
cmp
sahf
lock
jg
sbb
mov
push
mov
inc
js
addps
adc
jbe
sub
and
daa
jb
rorl
sub
icebp
xchg
xor
lcall
inc
cmp
outsb
movsb
movsb
xlat
sub
icebp
adc
mov
pcmpgtd
add
mov
cmp
lods
jno
xchg
mov
outsl
cpuid
lods
loope
adc
add
jl
in
dec
lods
pop
xor
cmp
jg
popa
pushf
cmc
mov
mov
movsb
and
call
dec
mov
mov
decb
incl
push
push
xor
push
add
jl
iret
sahf
into
mov
ja
mov
incb
and
mov
sub
mov
xor
stos
mov
out
mov
jg
sub
mov
dec
mov
or
cli
stos
int
sbb
into
pop
popf
cmp
dec
xchg
movsl
mov
negl
or
inc
pop
sbb
push
sbb
or
cld
mov
stos
out
pop
lods
fwait
sti
sbb
stc
jmp
stc
push
std
push
or
rcll
arpl
push
test
daa
loop
test
lods
movsb
xchg
aas
jge
jne
loope
dec
dec
je
popf
cmpsl
pop
aad
xchg
mov
movsb
sbb
pop
push
clc
jnp
imul
imul
frstor
or
inc
jns
pop
jg
test
sti
lods
jle
test
in
out
or
fnstenv
xor
in
jg
inc
insl
cmpsb
xor
aam
add
jne
out
loop
popa
pop
add
mov
xchg
pop
xchg
ret
xor
in
mov
in
dec
out
out
or
out
popa
ljmp
sbb
mov
std
hlt
push
ret
jb
inc
sbb
pop
mov
int3
mov
xchg
lret
xchg
leave
testl
mov
sub
scas
dec
stos
mov
dec
mov
mov
imul
jae
xor
sbb
lcall
loop
mov
cmpsb
add
cmpl
jnp
out
pop
js
xor
dec
int3
xor
xchg
ret
test
add
jg
repz
sbb
roll
jle
inc
sbb
xor
and
movl
or
jno
sub
decb
mov
cmc
in
ret
ljmp
popl
add
fxch
stos
jns
push
jmp
or
pop
jno
adc
fnstenv
test
push
js
stc
and
adc
push
dec
std
shl
push
lcall
jo
fiaddl
jmp
fldt
mov
xor
xchg
divb
jbe
sbb
jae
adc
lcall
inc
ret
aaa
aad
xchg
cmpsb
jo
sub
into
fsubr
inc
mov
pop
repz
cmp
cmp
adc
dec
dec
push
xchg
adc
inc
jle
push
fisttps
and
inc
insb
add
mov
into
imul
jmp
xlat
or
mov
sbb
cmpsb
arpl
sbb
push
jae
test
sub
imul
jmp
or
push
sub
int3
pop
xchg
push
xchg
lret
mov
pop
mov
jp
int3
pusha
dec
movsl
notl
sbb
repz
cmpsl
add
test
nop
lret
lock
jae
in
mov
sarb
stos
or
xchg
mov
dec
sub
jns
fildl
xchg
mov
pop
and
jb
dec
fnstsw
insl
inc
pop
sub
dec
inc
sub
xorl
jle
add
mov
stos
sbb
jecxz
pop
adc
pop
out
mov
adc
jno
inc
jae
jp
add
push
cmp
cmp
xor
js
in
cmp
jo
cwtl
adc
in
notl
ja
mov
subb
sbb
inc
imul
cmp
pop
out
and
js
add
lods
hlt
and
lcall
mov
fldenv
insl
inc
cmp
xchg
jle
aam
adc
insl
push
fwait
adc
adc
sub
cs
sub
ljmp
fisttpl
nop
fcmovu
pop
pop
mov
dec
mov
xor
cmp
jne
rorb
int
shrb
in
rcrl
mov
f2xm1
cmp
add
mov
in
out
ljmp
pusha
adc
orl
scas
or
imul
test
test
cmp
rcl
inc
mov
jnp
mov
movsb
stos
pop
repz
inc
inc
sbb
dec
sti
inc
jbe
gs
add
mov
ljmp
into
jle
adc
out
shlb
test
xlat
jmp
aas
jp
add
sbb
xchg
fdivl
xor
das
test
mov
fwait
add
cltd
subl
inc
clc
xchg
add
inc
std
test
aam
test
vmovdqu
push
sti
mov
cmpsl
mov
push
xchg
adc
inc
inc
test
or
dec
mov
scas
fwait
movsl
pop
sbb
lcall
outsl
fidivl
dec
mov
into
or
cmc
gs
popa
aas
or
cmpsb
cld
jb
in
dec
adc
cmpsl
mov
cmpsl
popf
stos
lods
gs
jmp
pop
sahf
aad
mov
lea
stc
les
dec
xchg
fs
xchg
jle
js
fs
sar
mov
and
and
and
push
push
sbb
scas
into
mov
scas
int
ret
sub
jmp
sti
xchg
adc
xorb
ljmp
mov
stos
ss
lret
jle
inc
push
iret
movsb
jp
xchg
mov
push
fnstenv
and
adc
sar
test
and
pop
jmp
cmp
push
add
sub
adc
and
cltd
adcl
pop
cwtl
mov
out
enter
push
outsl
out
in
mov
das
mov
inc
lods
xchg
or
jle
std
addr16
dec
ljmp
pop
sbb
pop
sti
in
daa
movsb
and
sbb
sbb
int3
inc
mov
popa
sbb
leave
ljmp
xchg
fistpll
int
aas
xchg
jno
sahf
imul
mov
aam
xor
jmp
test
out
arpl
icebp
push
dec
xchg
sbb
lods
jae
jbe
and
adcl
pop
pop
fisubrs
ret
sets
jnp
push
xor
inc
gs
faddp
and
mov
mov
mov
stc
mov
jp
in
or
int
les
lock
xchg
inc
ret
mov
xor
jo
pop
negb
fdivp
pop
cmp
outsl
ret
in
fildll
dec
movsl
jae
cs
mov
jns
inc
rcrb
gs
popa
sub
and
out
fwait
outsl
out
mov
adc
mov
lds
jns
in
fs
jp
iret
pop
dec
std
sub
adc
lret
adc
ljmp
and
mov
in
mov
int
int
push
xor
loop
add
push
popa
adc
aaa
jmp
inc
mov
sbb
mov
fwait
mov
shl
jbe
enter
pusha
in
or
dec
rcrb
jo,pn
xchg
pop
add
enter
jae
sbbb
push
adc
pop
mov
sub
xlat
cltd
int
mov
cmp
jp
jbe
js
ja
add
pop
sub
in
or
add
imul
xchg
cmp
icebp
imul
mov
pushl
jg
and
shll
stos
sbb
negb
add
test
vmwrite
insb
add
stos
test
mov
or
repz
mov
or
mov
call
pusha
jne
int
xor
mov
mov
xchg
mov
add
outsl
cltd
mov
scas
sbb
std
xchg
xor
xor
mov
add
jp
push
mov
mov
pop
movsl
cli
xchg
sbb
cltd
push
sub
dec
xor
xchg
daa
aaa
cmc
pusha
pop
push
js
pop
cmpsl
push
xchg
test
add
into
insl
adc
mov
cwtl
inc
mov
sub
mov
imul
cs
rcll
dec
mov
rorb
rolb
pop
pop
addr16
movsb
push
bound
add
xor
push
scas
xchg
cs
jg
pusha
adcl
bswap
pop
stos
push
mov
movl
cld
sbb
add
inc
cmp
or
or
push
mov
and
xchg
jo
or
shr
sbb
mov
adc
pop
stos
aam
lahf
sbb
push
pop
aas
jne
adc
test
pusha
mov
scas
jle
imul
mov
and
mov
aas
adc
or
incl
add
mov
cmp
fwait
out
mov
popf
nop
adc
pop
ljmp
lret
into
xchg
cmp
in
mov
pop
and
ljmp
data16
and
mov
mov
cwtl
ds
push
lods
lods
lds
adc
call
mov
xor
mov
outsl
in
into
cmp
add
and
iret
xchg
lods
out
xchg
sbb
in
xchg
xchg
imul
inc
call
out
js
lahf
mov
sbb
dec
add
and
dec
repz
xor
mov
jmp
repnz
and
xchg
pusha
std
cwtl
int3
out
push
cmpb
iret
adc
jl
jne
ficompl
jns
xor
sbb
sub
dec
lods
sub
lods
fistpl
popa
enter
stc
add
mov
push
dec
call
incl
in
cmp
stos
lods
xchg
xchg
jno
ja
dec
dec
imul
push
push
mov
or
clc
push
mov
jne
cmp
mov
test
sbb
xchg
xchg
mov
loope
daa
adc
jnp
pushf
push
adc
jbe
loopne
mov
or
xor
scas
cmp
subb
sbbl
les
mov
adc
jge
fs
sub
das
cmpb
arpl
scas
loop
stos
xchg
push
cmpsl
addr16
mov
dec
xlat
cltd
adc
mov
test
inc
or
xchg
lods
and
scas
aas
or
std
sti
mov
insb
jne
and
roll
fsubs
mov
sub
lods
lret
pop
push
daa
in
in
in
loope
fst
mov
jns
push
and
ss
or
cltd
mov
fst
xor
outsl
inc
xchg
jb
ret
stc
mov
dec
pop
mov
out
scas
hlt
bound
lahf
loop
outsl
cmp
push
call
cmp
test
or
or
je
push
push
lock
jle
jle
mov
aaa
adcl
ret
sub
aas
dec
movsl
addb
cmpsl
loopne
mov
mov
ret
and
andl
mov
cmp
adc
fsub
or
ret
dec
mov
popf
jp
xor
sub
rolb
mov
mov
movsb
rcll
popa
push
dec
sbb
dec
jp
sahf
aam
mov
mov
adc
dec
loop
jmp
mov
xorl
xlat
jbe
pop
lods
loope
sub
stc
push
mov
xchg
pop
jae
fildll
adc
iret
push
ljmp
inc
sahf
mov
pop
or
stc
insl
ljmp
jo
mov
push
je
lcall
cli
in
xchg
push
mov
push
push
and
das
inc
movsl
cmp
int3
xchg
xlat
das
push
sub
and
sub
sub
dec
pusha
and
mov
mov
pop
lahf
or
jge
rcrl
outsl
xor
fimull
rcr
dec
sub
sub
jle
add
movsl
in
mov
cmp
in
popf
imul
lret
cmp
roll
std
rorb
jbe
push
popa
sub
jbe
rorb
shll
aad
sbb
lret
cmc
in
xchg
sub
inc
inc
addl
mov
xchg
and
add
mov
mov
add
inc
nop
add
sbb
xchg
cmp
cmp
cli
loope
jmp
lds
leave
shrl
inc
and
push
stos
sbb
push
cmc
inc
mov
in
ds
std
add
mov
loop
sbb
imul
push
and
and
pop
icebp
imul
cltd
inc
lret
lcall
or
loope
push
or
lea
loope
sahf
cli
cmp
sahf
stos
inc
test
xor
push
lock
repnz
add
jle
mov
ljmp
jle
mov
mov
add
mov
ret
test
jnp
stc
mul
addr16
test
dec
jp
rcrl
sub
in
jno
lock
sbb
std
push
stos
rcr
pmulhw
cmp
fidivrl
repnz
out
addr16
fists
cmpsb
adc
push
cmp
pop
pusha
popa
insl
sbb
pop
mov
add
divl
movl
pop
sbb
xor
ss
add
xchg
lahf
arpl
xchg
inc
inc
sbb
shlb
fs
out
shlb
sub
sahf
pop
imul
mov
icebp
in
into
mov
popf
in
stc
xlat
loope
ret
sti
add
push
inc
in
imul
lds
pop
scas
js
mov
push
jg
int3
negb
mov
adc
adc
mov
pop
dec
inc
rcrl
jno
fidivs
pop
add
loope
cmpsb
test
mov
out
cmp
pop
mov
popf
loop
test
andl
pop
shl
mov
cmpsb
out
pop
or
add
adc
fwait
arpl
push
mov
push
cmp
mov
int
cwtl
call
pop
add
aad
push
insl
jb
xlat
in
add
lock
cmp
iret
cmp
ljmp
int
and
mov
inc
jo
adc
les
les
mov
cmp
das
cli
fnstsw
out
sbb
iret
mov
aad
adc
scas
loopne
xchg
sub
mov
mov
out
mov
and
mov
sub
pop
jns
lods
mov
ficomps
inc
bound
push
mov
test
push
push
cmp
jb
lea
mov
lods
sti
xor
pop
adc
and
and
xchg
mov
mov
in
aad
and
cld
pop
iret
jmp
and
jne
ss
pushf
pop
push
outsl
lea
inc
cmc
mov
cwtl
ror
imul
mov
lret
stos
iret
pop
push
jns
sbb
repz
xor
into
scas
insl
adc
xchg
xor
mov
mov
mov
stc
or
pop
lock
xchg
pop
lea
mov
ret
loope
mov
sti
sub
pop
dec
fsts
imul
mov
aam
fwait
pushf
cld
or
cld
pop
scas
cmp
jne
sbb
and
inc
xor
xchg
incl
and
sub
xchg
fstpt
nop
pop
jb
dec
icebp
or
movsb
add
xchg
outsl
push
cmp
outsb
jge
hlt
loope
loopne
and
popf
shl
xor
ss
cmp
cmpsl
lods
mov
mov
loope
and
sbb
cltd
lods
jmp
jg
xchg
aaa
dec
jle
cltd
das
sbb
clc
cli
sbb
cmpl
aam
pop
movsb
mov
fistps
aam
push
add
jle
sahf
add
loop
inc
jno
pop
das
ret
push
jp
dec
dec
sub
repz
hlt
mov
push
lret
xchg
sub
add
mov
dec
pop
test
jno
aad
cltd
pushf
push
cmp
add
fld
in
fcoms
pop
mull
adc
push
in
push
or
push
pop
repnz
push
xor
pop
sbb
jae
and
push
imulb
sbb
cmp
hlt
imul
inc
mov
std
push
inc
xchg
add
xor
xor
pop
test
cwtl
push
or
inc
sub
insb
lock
ret
jae
xchg
shrl
int3
aad
push
into
lods
lret
imul
xchg
jg
movsb
testb
insl
movsl
loope
lcall
shll
lea
pusha
in
roll
jae
idiv
mov
popa
repz
push
mov
mov
pop
or
cli
add
dec
dec
sub
cli
lcall
xor
xchg
sbb
dec
xor
lock
sbb
bound
bnd
xlat
mov
dec
mov
int3
pop
mov
pop
jns
sti
rcll
repnz
add
inc
dec
pop
xor
das
mov
pop
bound
xchg
xchg
movsb
lock
ret
pusha
andl
mov
xchg
add
cmpxchg
dec
ja
lods
xchg
mov
cmp
pop
mov
cld
jnp
shlb
mov
int
divb
cmp
out
push
adc
dec
mov
or
pusha
insw
adc
push
mov
test
push
outsl
insb
add
aam
fcomip
and
or
inc
mov
mov
fdivl
push
es
cmp
or
scas
leave
inc
jns
xchg
xor
pop
cs
inc
insl
test
jmp
sbbl
mov
ret
jecxz
popf
outsb
ja
xor
and
iret
push
cs
lods
jmp
rcll
pop
sub
pop
fsts
push
xchg
test
stos
ds
fcompl
stos
and
pop
call
dec
inc
mov
vaddsubpd
mov
sbb
stos
sub
push
or
pushf
adc
je
fwait
dec
dec
mov
es
popa
mov
add
aas
and
lods
ja
inc
movq
pop
add
pop
std
repnz
mov
inc
pushf
les
or
sub
mov
repnz
xchg
mov
lods
sbb
cld
jl
loopne
int3
sbb
icebp
mov
xor
inc
or
dec
cmp
ret
xchg
imul
jecxz
mov
addr16
clc
and
xor
fstps
fmul
js
mov
and
in
daa
xor
in
fldenv
leave
lds
sbb
xchg
outsb
fadds
xchg
nop
dec
push
sbb
imul
mov
mov
lea
pop
or
lahf
lds
pop
fstl
rcll
orl
lods
xorl
dec
or
dec
repnz
mull
mov
inc
sti
add
addr16
cli
inc
cmp
rorl
mov
jp
and
push
xor
insl
sub
addr16
mov
lods
adc
sti
ljmp
ret
scas
inc
fsubs
xchg
pop
sub
mov
jmp
adc
adc
imul
js
in
faddp
loop
shll
in
push
jne
sub
ret
sarl
or
cwtl
int3
ss
pop
mov
mov
into
mov
adc
sub
inc
or
push
loop
sub
out
out
cmpsl
sahf
stos
shrl
or
call
sbb
aas
in
jg
mov
xor
push
dec
loop
orl
orl
cld
adc
jmp
mov
xchg
dec
mov
test
sub
adc
stos
and
sarl
add
leave
mov
inc
push
mov
lea
jle
add
jmp
mov
fnstenv
adc
sbb
outsb
ret
pop
inc
jb
jo
sub
lret
cmp
int3
mov
inc
mov
js
mov
in
subb
jmp
dec
and
sub
stos
andb
cmpsl
lcall
pop
ljmp
push
ss
je
jle
mov
std
mov
or
push
mov
std
std
adc
sub
scas
adc
xor
dec
push
xchg
push
jmp
xchg
loop
je
stos
inc
inc
mov
insl
loope
cltd
daa
out
enter
inc
xchg
jmp
cmp
mov
rclb
sbb
fldt
lock
sbb
lea
out
inc
inc
add
mov
and
into
mov
sbb
pop
shrb
rcl
mov
outsl
mov
sbb
leave
jnp
pop
fnstcw
mov
cmpsl
addr16
pop
pop
pop
idivl
nop
fildl
xor
and
cwtl
xor
jnp
ja
mov
fcmovb
jecxz
jbe
lock
loopne
fsubrp
insl
xchg
inc
in
xchg
sar
pop
fadd
pop
int
jp
pop
sti
out
inc
iret
dec
das
pop
push
dec
and
test
xor
inc
shlb
jmp
cmc
pop
pop
inc
ljmp
or
fs
in
pop
mov
or
sub
and
lahf
jle
test
dec
cmp
cmp
js
test
cld
fcmovne
daa
mov
fiadds
add
shlb
fdivl
and
in
mov
dec
mov
xchg
jnp
mull
sbb
and
nop
fstpl
dec
inc
dec
sti
test
popf
leave
addr16
xchg
sub
pop
pop
xchg
push
ds
fistl
xchg
pop
out
jle
movsl
ljmp
push
into
jp
dec
fsub
xor
shll
mov
hlt
test
and
push
aam
int3
test
sahf
dec
jae
ss
mov
push
xor
mov
adc
movb
cs
pusha
pop
inc
ja
mov
cld
std
mov
mov
call
adc
roll
outsl
loop
fdiv
fdivrs
or
inc
scas
ljmp
leave
std
arpl
imul
shlb
lods
push
shlb
pop
call
sbb
adc
lret
mov
mov
loop
push
jo
jnp
inc
mov
jns
movsl
stos
mov
xchg
scas
mov
test
and
cmpl
stc
and
orl
push
ja,pt
jecxz
lock
dec
pop
popf
sbb
fstps
imul
adcl
xchg
scas
jp
xchg
cli
sbb
mov
dec
mov
ja
or
or
jb
and
ret
sbb
xor
adc
mov
lods
loopne
cld
lock
arpl
push
out
adcb
sbb
push
mov
add
in
push
mov
into
fistps
iret
fiadds
iret
pop
ljmp
cmp
jle
lock
cmpsl
out
int3
jmp
fistpll
dec
dec
sub
imul
gs
imulb
pop
xor
gs
out
push
shlb
mov
sub
sbb
cmp
test
mov
push
repnz
std
xor
enter
cmp
movsl
js
pop
jns
mov
cli
sub
mov
adc
pop
jg
int3
jne
xchg
cwtl
push
or
pop
push
call
movb
sbb
jg
shll
dec
jbe
rep
cwtl
lds
mov
les
pusha
int
and
movsb
cmp
pop
test
cli
hlt
insl
cmp
xor
xor
push
push
outsl
pop
mov
cs
cli
add
std
add
dec
repz
dec
push
dec
mov
mov
mov
cli
inc
and
mov
js
in
add
dec
pop
xorl
fidivrl
xor
mov
adc
xchg
loop
xchg
mov
inc
nop
lea
les
mov
loope
jnp
shl
mov
es
xor
jnp
test
inc
data16
add
outsl
mov
xchg
adc
add
in
orb
push
push
push
xchg
and
cmpsl
add
adc
jne
dec
cltd
out
jmp
in
xlat
and
imul
mov
mov
ret
and
push
popf
push
sar
push
xor
mov
ret
in
or
mov
test
and
inc
xchg
icebp
outsl
sub
mov
aas
mov
adc
pop
bound
mov
inc
add
cmpsl
insl
enter
iret
mov
ror
inc
sbb
test
enter
xchg
add
inc
icebp
cmp
cmp
popa
sub
imul
push
sub
jecxz
in
jecxz
mov
mov
scas
push
push
call
cmpsl
push
push
roll
dec
sarb
jle
out
inc
cmc
mov
dec
xor
dec
dec
inc
push
add
mov
adc
xor
or
cld
out
xorb
stos
mov
xchg
jmp
test
jl
aas
mov
std
adc
in
xchg
jbe
loop
rcrb
jns
nop
mov
jecxz
lret
xor
int
cmc
xor
and
mov
and
arpl
fidivrl
call
jo
adcb
mov
je
in
mov
lea
jp
mov
cmpsl
dec
pop
xchg
push
fwait
daa
outsl
xchg
pop
fs
test
or
fucomip
mov
jo
push
xorl
ljmp
sub
mov
sbb
sarl
mov
cli
pop
scas
pop
mov
sbb
push
push
sub
out
mov
jge
popa
mov
inc
test
divl
xchg
or
cmp
stos
icebp
sub
clc
test
inc
out
insl
and
sbb
icebp
pminub
enter
adc
icebp
rdpmc
inc
into
and
movsl
iret
repz
imul
neg
dec
mov
je
testb
int
mov
add
shrb
fsub
jns
push
arpl
dec
xchg
xlat
xor
fnstcw
add
add
adc
aam
pop
dec
in
cmp
out
test
int
sbb
lret
adc
pop
sbb
fcmove
add
xchg
sbb
xchg
test
jb
daa
mov
mov
sub
jae
pop
loop
roll
dec
mov
mov
mov
shlb
movsb
dec
jae
push
gs
jnp
adc
ret
xchg
jecxz
test
aas
push
rolb
enter
lcall
mov
pusha
test
movlps
mov
cwtl
push
pusha
or
lds
shlb
fwait
mov
sbb
jp
pop
push
cmp
lret
ljmp
loopne
iret
cmpsb
in
popf
repz
or
popf
rcrl
xchg
pop
mov
pop
jg
insl
sub
xchg
lret
in
adc
mov
mov
mov
dec
add
outsb
mov
xor
mov
mov
rol
cld
test
aas
mov
mov
ja
pop
mov
mov
jle
jmp
call
bound
shrl
jne
dec
ffreep
sbb
inc
lcall
loopw
mov
arpl
scas
in
xchg
cwtl
xchg
inc
mov
jo
sahf
iret
sub
adc
mov
pop
sbb
cmpsb
movl
ficomps
ljmp
jge
imul
adc
mov
out
sbb
mov
outsl
aaa
lcall
shlb
pop
sahf
sbb
fwait
pop
adc
mov
repz
jmp
test
popa
loop
rcll
ss
cmp
mov
andb
insb
inc
aam
mov
xchg
imul
pop
lods
dec
mov
jmp
scas
shlb
xchg
out
xchg
sub
rcrb
pop
mov
testb
sahf
dec
and
add
xchg
lret
aaa
xchg
inc
test
inc
rcr
sbb
ss
push
test
sbb
sbb
bound
nop
cmpsl
sub
loopne
cli
outsl
pusha
into
mov
sub
xor
cmpsb
outsl
inc
xchg
sbb
cwtl
mov
push
xor
lea
push
mov
lds
add
mov
lods
add
movsl
cld
and
stos
jnp
push
outsl
jno
ja
mov
inc
mov
mov
fsubrs
lock
int3
push
addr16
xorb
inc
dec
sub
mov
cmpsl
and
mov
jns
jbe
add
pop
scas
xor
push
ficoml
fiaddl
outsb
pop
xor
pop
addr16
icebp
stos
xchg
cmc
fdiv
cmp
jne
sub
nop
stos
sub
fisubs
imul
inc
mov
add
xchg
jns
xor
add
aaa
or
das
mull
pop
ffreep
stc
das
mov
in
insl
fcompl
cli
dec
or
add
ret
ret
es
je
mov
push
sub
lret
sbb
jbe
push
adcl
cld
xor
rclb
in
push
push
mov
int3
cli
jnp
dec
ret
lret
fcompl
xor
movl
or
xchg
adc
mov
movsl
inc
out
jb
in
xchg
inc
cmp
and
mov
insb
in
cwtl
test
dec
pusha
cmpl
jle
ror
sub
jecxz
int
mov
enter
stc
add
repnz
insb
pop
jp
sub
out
or
bound
insb
mov
mov
adc
arpl
dec
cli
lahf
sub
xchg
nop
mov
aam
mov
test
das
dec
repz
dec
push
lcall
jecxz
cmp
inc
pop
dec
or
dec
test
stc
dec
in
pop
cmp
mov
repnz
push
mov
iret
out
repz
out
adc
cmc
sub
lods
xchg
std
xor
adc
sub
das
iret
sar
jle
inc
imul
add
dec
lret
jbe
mov
imul
adc
xor
loop
loop
dec
adc
xor
add
dec
adc
int
sbb
and
arpl
xchg
andl
inc
popa
push
push
adc
dec
sub
mov
loopne
rolb
daa
imul
outsl
xchg
out
inc
or
fiadds
sahf
jns
or
xor
adc
incb
adc
sbb
outsb
mov
jecxz
sti
ja
inc
inc
sub
pop
and
mov
push
pop
push
add
lds
sub
lds
mov
add
jmp
mov
ret
cltd
xor
pop
push
lret
push
mov
hlt
push
inc
dec
and
mov
dec
xchg
arpl
mov
repnz
fdivr
adc
or
nop
stos
pop
jl
fidivrs
jns
adc
clc
sbb
sbb
xchg
xor
xchg
or
xor
mov
bound
ss
pop
jne
mov
leave
adc
test
loopne
or
sbb
out
loope
dec
addl
xchg
pushf
sahf
pop
fnsave
mov
xor
ret
js
or
push
dec
insl
pcmpeqw
pop
imul
fisttpl
mov
jns
call
ret
pop
cmpl
fldenv
jmp
in
aam
pop
xlat
stos
push
sbbl
dec
add
inc
in
xor
push
pop
jns
test
xchg
xor
and
mov
sbb
cmp
mov
jae
mov
and
push
mov
pop
bound
pushf
sbbb
inc
in
jl
ljmp
in
mov
nop
jo
xor
dec
and
outsb
sbb
insb
mov
sbb
lds
cmc
or
sbb
pop
test
cmpsl
jg
pop
add
push
push
xor
mov
out
sarb
xchg
push
mov
push
jmp
pop
pop
or
push
in
lahf
test
loope
push
lock
push
adc
divb
add
incb
pop
sub
adc
cmp
rol
scas
xchg
mov
push
loope
mov
push
adc
leave
sub
insb
inc
daa
push
scas
add
scas
sbb
inc
cmp
test
inc
mov
lods
bound
push
jae
cmp
jno
ret
sar
enter
rcll
push
rcll
data16
jecxz
jo
xchg
mov
pop
imull
jge
xlat
mov
test
cmp
sbbl
mov
and
call
aaa
mov
adc
jbe
lahf
and
jg
aas
mov
jl
push
add
scas
adc
push
sub
mov
or
mov
or
adc
push
popf
add
bnd
push
scas
add
jne
pop
mov
mov
and
push
mov
nop
ret
dec
nop
dec
pop
sub
leave
sub
push
mov
movsl
xchg
mov
xchg
mov
push
popf
imul
lret
enter
test
shrl
adc
xchg
fs
add
push
jecxz
lcall
pop
ficompl
sub
icebp
arpl
outsb
mov
xchg
xchg
push
stos
in
nop
js
js
or
sub
fwait
test
or
std
and
sbb
std
adc
andl
imull
incb
push
xchg
rcl
negl
popf
sub
push
dec
lret
sti
mov
lds
push
cmpsl
mov
dec
xchg
mov
fsubs
mov
jle
xor
lahf
mov
pop
lcall
mov
dec
stos
scas
pop
icebp
bound
add
ficomps
cmc
xchg
mov
sbb
clc
inc
mov
sub
adc
movsl
and
mov
popf
dec
xchg
insb
lahf
adc
pop
ret
testb
js
or
mov
out
sbb
stos
jl
add
push
add
in
sub
sbb
scas
movsb
mov
sub
les
jno
hlt
push
sub
xchg
int3
sti
rclb
add
fldt
mov
aam
test
stos
adc
inc
loopne
push
mov
pusha
mov
adc
mov
das
test
pop
pop
jge
adc
leave
cmc
jno
pop
sub
stc
fdivrl
push
jb
dec
stc
movsb
int
sub
lods
repz
xor
mov
mov
out
lret
int
lods
xor
dec
loop
cld
xlat
push
dec
inc
fstpl
sti
ret
adc
test
data16
out
stc
cwtl
sbb
sub
inc
dec
mov
mov
std
push
dec
cmp
sbb
jmp
mov
test
xchg
cmp
mov
fcmovnu
jmp
leave
push
lds
aam
xor
mov
jb
mov
mov
or
ret
add
in
dec
pop
sti
dec
gs
arpl
adc
mov
and
test
push
stos
or
add
call
sbb
mov
inc
and
sub
addr16
push
add
add
inc
xchg
leave
push
loop
mov
cmp
int
fcomi
jg
mov
add
cs
in
mov
inc
imulb
xor
xchg
fsincos
lods
push
daa
and
pushf
into
repnz
add
cmp
repz
mov
fisttpl
inc
icebp
and
mov
pop
xchg
or
in
sub
push
fs
add
in
push
xor
loopne
adc
fs
test
pmullw
xchg
sbb
jae
or
inc
mov
and
dec
push
push
pop
pop
sub
pop
jo
inc
xlat
sbb
push
es
fld
test
add
sarl
mov
mov
mov
sub
pop
mov
fcomps
imul
fsubrl
movsl
or
mov
pop
cmp
fmull
cli
mov
sub
push
imull
sub
xchg
mov
sahf
inc
sub
enter
sar
cmp
jno
jbe
fmull
daa
lcall
or
fbstp
cmp
aam
shlb
dec
lock
mov
add
jne
cwtl
mov
and
insb
sbb
and
scas
ljmp
dec
repnz
pop
int3
mov
lock
iret
jecxz
sbb
in
xchg
fists
or
lret
pop
and
pusha
aad
shl
dec
sbb
jae
push
cmp
sbb
add
xor
jns
pop
mov
cmp
movsl
add
jge
jmp
stos
outsl
jp
xchg
fcomp
movsl
adc
into
fisttpll
pop
fiaddl
xchg
dec
adc
push
mulb
in
pop
fiadds
dec
loope
pop
loope
inc
xor
jbe
jne
push
pop
dec
test
enter
and
cli
push
je
in
sub
repz
xlat
mov
cwtl
orb
sub
daa
stc
or
decb
es
mov
inc
mov
pop
xchg
shll
aaa
lcall
jb
lea
hlt
inc
into
jae
popf
sub
mov
and
pop
in
jp
cs
cmp
in
mov
mov
test
xchg
lahf
dec
clc
lds
shlb
jo
aam
aas
cmc
mov
pop
std
xchg
jnp
scas
cwtl
dec
mov
mov
jae
jge
xor
mov
add
fcmovu
cli
fwait
stos
dec
xchg
lret
and
pop
shl
jne
dec
cmp
lahf
mov
in
push
shll
inc
out
into
pop
inc
jecxz
add
movl
stos
push
pushf
fcoms
scas
shl
sub
jbe
lahf
fildl
test
ret
mov
pop
or
push
cwtl
push
push
icebp
jne
dec
repnz
inc
test
rolb
andl
es
popf
pusha
lahf
mov
mov
adc
stos
xor
sbb
inc
andl
xor
loope
out
pushf
rclb
pop
insb
mov
outsl
cmp
jno
faddl
out
into
aas
movsl
in
dec
add
jp
test
sub
ds
jae
xor
push
or
xchg
or
sbb
mov
imul
cmovp
and
insb
adc
jp
xchg
dec
and
cli
push
dec
sub
divb
les
add
jecxz
gs
repnz
insl
pop
in
adc
dec
jmp
imul
popa
testb
jb
cmpsl
lods
iret
xchg
push
shr
loop
dec
imul
mov
and
xchg
call
popa
aaa
push
xor
lahf
leave
push
push
jbe
test
pop
push
in
jge
lods
negl
clc
inc
or
mov
dec
mov
and
rolb
sti
por
cmp
cmp
jnp
push
mov
imul
sahf
cs
hlt
movaps
scas
xchg
test
in
mov
pop
mov
mov
mov
adc
and
mov
sbb
mov
sbb
jbe
mov
pop
mov
sub
jmp
mov
cmpl
mov
and
dec
sub
test
aaa
in
add
imull
ljmp
ret
call
mov
push
dec
dec
jns
adc
pop
sti
fwait
cli
negl
sti
repz
mov
sub
lret
jne
insl
jnp
mov
imul
inc
xchg
cmpsb
das
js
insb
xor
add
stc
outsb
pushf
out
mov
jp
add
repnz
call
sbb
das
xchg
out
stos
fscale
adc
sub
je
stc
push
scas
mov
ficoml
sub
addb
or
ror
and
out
xchg
hlt
std
subb
add
es
aaa
or
sarl
stos
cmp
add
loopne
shrb
cltd
pop
or
loopne
shll
sbb
mov
adc
in
iret
cmpsl
and
js
test
cmpsl
adc
xchg
sbb
mov
mov
shlb
xchg
vmresume
flds
cli
dec
dec
push
sub
rorb
jne
add
dec
ret
aam
push
mov
pop
adc
push
push
sti
lret
ljmp
shrl
lods
mov
outsl
mov
xchg
ret
xchg
sahf
das
inc
and
into
test
cld
xor
jmp
out
dec
ljmp
sub
gs
jo
sahf
stos
out
dec
test
jmp
pop
shrb
mov
andb
and
push
adc
and
mov
dec
xlat
fnsave
das
mov
xor
test
cmp
cmp
and
lods
adc
add
or
inc
or
sbb
xchg
shrb
xor
sbb
dec
inc
mov
mov
test
push
mov
fistpl
ficompl
icebp
and
sub
jns
shlb
fwait
inc
dec
mov
repz
imul
jno
test
in
negb
mov
sub
and
cmp
jns
push
jp
test
adc
loopne
mov
inc
ficomps
ljmp
repz
stos
mov
scas
aam
mov
nop
shrb
addr16
clc
inc
enter
sub
mov
leave
xchg
sarb
add
sub
std
cmp
xchg
sub
and
jns
mov
fistpll
inc
push
push
push
sub
mov
push
pop
aam
pop
ret
mov
mov
sub
push
dec
gs
orb
cld
movsb
call
mov
sub
sub
stos
dec
push
inc
lds
imul
and
push
and
push
and
test
add
dec
loope
sarl
outsb
jne
fs
push
xor
or
push
xor
xchg
push
cmp
sbb
js
adc
sub
and
inc
out
dec
pop
sti
pop
jbe
orl
jmp
dec
sub
xor
sub
orb
jne
add
dec
lahf
push
xor
or
jle
mov
outsl
dec
cld
leave
pop
xor
and
jae
push
insb
or
inc
lcall
daa
cs
stc
sti
jl
adc
or
enter
lahf
push
in
lea
push
in
dec
add
outsl
inc
sahf
inc
pop
pusha
test
std
xchg
clc
xchg
jecxz
mov
movsb
ljmp
jb
mov
fisttpll
push
js
addr16
sarl
mov
jmp
jg
xlat
shll
ljmp
pop
pop
test
push
mov
imul
orl
xchg
and
mov
mov
or
ja
imul
adc
lcall
cmc
fs
stos
jp
xchg
and
movsb
das
lock
pusha
mov
rol
push
insl
mov
push
xchg
mov
sti
cmp
mov
xchg
adc
loopne
cmp
sbb
pop
in
xchg
push
rol
in
test
js
pop
jae
mov
xor
loopne
adc
lret
or
sub
out
enter
inc
rorb
fiaddl
mov
jmp
jo
sbb
fnsave
aas
pop
pavgb
push
cmp
data16
push
sarl
js
int3
daa
fwait
pop
divl
and
lock
sbb
push
and
nop
push
fisubs
xchg
add
pmuludq
pop
into
in
xchg
mov
xor
mov
imul
push
jmp
mov
rorb
push
push
inc
mov
or
test
or
or
jg
test
sbb
xchg
pushf
pop
and
loope
insl
roll
xor
xchg
jle
jecxz
dec
sarl
and
pop
or
xlat
add
dec
ss
lcall
sub
int
add
aad
xchg
pop
in
sub
push
pushf
pop
loop
scas
add
push
ffreep
adc
sub
sbb
int
je
dec
imul
dec
mov
inc
stc
mov
push
mov
bound
inc
dec
sbb
dec
pop
mov
repnz
dec
pop
and
push
fisttpll
int3
inc
mov
cmp
daa
cmp
rol
fwait
call
movl
icebp
xchg
and
or
movsb
pusha
fmuls
mov
sbb
dec
in
push
or
daa
or
aas
call
push
add
sub
or
into
stc
std
jb
gs
jecxz
mov
push
fldenv
out
ds
negb
cmp
fists
jp
lods
sbb
mov
lret
movsb
out
enter
mov
xor
outsl
and
pop
xor
in
je
sbb
sub
leave
loop
dec
and
push
jns
jle
aaa
hlt
lcall
movsb
cmp
mov
sub
and
and
push
xchg
sbb
xor
jge
imul
push
mov
popa
xchg
pop
je
out
xor
lcall
pop
cmpsb
sub
enter
in
sub
stos
rcrb
sahf
mov
xor
xchg
jae
xor
sbb
inc
les
ret
int3
push
cmpsl
dec
mov
jl
push
mov
cmpsl
pop
or
es
fwait
jno
in
mov
loope
push
mov
push
xor
mov
lds
push
int3
push
pop
faddl
test
pushf
xchg
mov
aam
mov
nop
jnp
push
cltd
loope
aaa
adc
ljmp
push
jbe
or
rclb
subb
mov
stos
scas
mov
sbb
sub
ret
inc
fmuls
mov
sub
stos
jg
cmp
out
scas
iret
mov
lret
mov
mov
inc
push
mov
and
icebp
test
sbb
push
push
cltd
movsl
andb
arpl
adcb
test
sub
iret
inc
xor
insb
test
push
je
lds
cmp
xor
mov
or
push
or
adc
mov
sub
mov
cmp
cmp
cmp
xchg
scas
inc
movsb
or
or
insl
jno
cmpsb
insb
push
adc
dec
test
daa
inc
push
xchg
sbb
mov
frstor
pop
dec
cmpsb
ds
push
jae
rol
movsb
aaa
sahf
xor
mov
cmp
testb
mov
test
test
leave
xor
pop
ret
mov
es
push
popf
cld
ror
enter
outsb
or
repz
in
stos
inc
in
iret
xchg
popf
sahf
xor
xchg
je
std
sbb
sti
mov
cltd
push
into
xchg
lret
lea
adc
and
or
int
add
add
push
lea
movsl
xchg
mov
shll
js
mulb
cmp
fiadds
movsl
inc
test
mov
cmp
add
pop
imul
punpckldq
add
mov
or
pop
ret
jmp
adc
clc
mov
cmpsb
and
mov
mov
stc
nop
into
inc
fildl
xchg
std
add
dec
dec
cli
imul
xchg
ss
jmp
and
push
push
ljmp
mov
jbe
mov
xlat
cld
mov
sbb
jnp
clc
movsb
js
jp
sbb
cmp
mov
into
pop
loopne
sbb
icebp
mov
ja
cs
inc
cmc
and
inc
subl
inc
out
sub
mov
jbe
outsb
add
sbb
pop
mov
mov
lds
dec
ds
int3
jle
xchg
sub
fldenv
das
inc
cs
dec
inc
push
add
sbb
ss
repnz
mov
fldenv
aaa
out
jg
leave
pushf
pop
mov
shll
jmp
and
lahf
sti
pop
xor
adc
movsl
add
pop
repnz
mov
inc
flds
dec
push
or
lods
sub
data16
fisttpl
or
pop
addr16
mov
sbb
mov
popa
clc
sahf
into
orb
push
jmp
nop
xor
outsb
cmc
mov
or
xchg
xchg
int3
dec
push
aaa
pop
cmp
rcrl
ja
out
mov
insl
jae
pop
push
pop
repnz
lret
push
cmp
xor
pusha
lea
pop
cs
test
shlb
or
orb
das
xchg
rcrb
mov
lock
sbb
in
mov
gs
sub
sahf
negl
js
dec
mov
stos
or
repz
int
cmc
xor
das
lahf
push
popf
test
jp
stc
mov
lock
outsl
pop
ja
cmpsl
mov
mov
sub
loop
pop
insb
sbb
imull
push
xchg
pop
mov
aas
xchg
mov
das
mov
sub
mov
repnz
test
popf
xchg
mov
aas
aad
fildll
or
jge
cmp
push
xor
jmp
stos
cs
fdivrl
out
fnsetpm(287
das
scas
movsl
scas
test
fnstsw
cmpsb
fwait
mov
sbb
inc
xchg
insb
outsb
cs
mov
mov
pop
mov
jle
fsubrp
add
scas
push
sub
dec
xor
push
aaa
sub
pop
dec
fs
outsl
fcomi
les
les
cltd
pop
dec
movsl
fistpll
movsb
mov
xchg
sbb
xchg
stos
aad
adc
inc
lret
scas
fstl
rorb
fwait
stos
or
or
add
and
jl
test
push
dec
loope
insb
addl
or
dec
jne
mov
popf
cmp
mov
movsl
jecxz
shlb
mov
add
add
mov
jmp
jle
outsb
push
adc
inc
idivl
pop
lahf
in
xchg
cmp
jl
insl
sub
push
test
js
cmpsb
xor
dec
insb
loop
xor
imul
lret
gs
mov
cmc
inc
xchg
fnstsw
insl
and
xchg
cmc
mov
loop
mov
arpl
xchg
lret
jg
push
push
xor
jmp
sub
js
push
inc
shll
call
inc
lods
cs
out
push
dec
sbbb
add
cmp
scas
mov
sbb
or
fwait
inc
sysret
gs
es
pop
stos
fisttpl
xchg
add
xchg
arpl
int
mov
sarb
rsm
ja
enter
fisubrl
idivb
sub
dec
jmp
shlb
sbb
stos
outsb
mov
movsl
or
lcall
mov
scas
cmp
jle
jae
and
in
rorb
arpl
xchg
stos
lret
call
mov
lock
fsubs
push
sub
rcrb
cld
jecxz
inc
test
sub
push
mov
xor
loopne
push
test
ss
or
sbb
es
stos
adc
frstor
aad
cmp
and
call
inc
jo
sbb
js
lock
sub
xor
mov
jns
icebp
out
adc
sub
jns
sbb
fdiv
xchg
or
adc
or
xor
mov
adc
sub
testb
sub
scas
jp
push
inc
mov
mov
mov
add
lea
sub
add
add
imul
pop
roll
xor
mov
jns
inc
out
sbb
or
cmpsl
enter
rclb
lahf
out
iret
orl
mov
mov
js
fs
push
gs
adc
pop
fsts
adc
push
lret
adc
push
outsl
xchg
popf
jcxz
fsub
pusha
and
pusha
shlb
mov
fimuls
movsl
je
adc
andb
call
jg
mov
jne
fwait
int3
loope
scas
out
int
or
adc
or
daa
outsl
inc
mov
push
sub
ret
jmp
subb
or
cmp
ret
xchg
mov
aaa
push
adc
pop
inc
stos
jp
out
fidivrl
nop
out
lret
adc
es
ds
dec
push
stos
testb
cmp
dec
add
out
xorb
and
subb
or
cmpsl
add
mov
sarb
test
push
jge
ds
cmp
fwait
scas
xchg
daa
dec
stc
into
or
cmp
inc
nopl
insb
sbb
inc
mov
aad
aam
xor
int3
jecxz
adcl
test
insb
scas
dec
xor
loopne
inc
jb
les
mov
jg
adc
cmp
mov
lods
mov
and
js
push
repz
test
push
fldl
jecxz
push
fnstcw
jae
nop
fwait
inc
mov
or
cmp
mov
call
push
incb
jle
mov
out
adc
jmp
inc
sub
arpl
fwait
sti
sbb
push
call
xchg
add
cmp
js
shl
je
mov
pusha
lds
gs
fwait
test
inc
push
dec
inc
sti
add
xchg
mov
mov
push
iret
sbb
push
mov
push
insb
popa
adc
aaa
mov
jle
jmp
push
pop
cmc
sbb
lods
adc
mov
popf
ljmp
or
adc
lds
push
or
sbbl
in
xchg
jbe
mov
bnd
sbb
adc
mov
push
mov
mov
lret
push
xor
xchg
push
pop
cmp
insb
jno
scas
shll
lret
and
rolb
mov
rolb
fbld
pop
sub
or
mov
aas
cmp
dec
or
mov
movmskps
mov
mov
or
ret
cs
sbb
aaa
cmpsb
xchg
cs
int
add
mov
add
adc
cmpsl
pop
pop
cld
pop
fiaddl
fisttpll
xchg
negb
adc
stc
dec
push
mov
enter
jnp
dec
sahf
xchg
popf
adc
mov
adc
add
jle
ljmp
js
clc
or
mov
into
push
pop
push
sahf
jmp
loopne
addr16
push
iret
xchg
adc
mov
lahf
dec
inc
adc
push
mov
loop
stos
insb
xchg
xchg
cmpsb
pop
push
xchg
add
nop
stc
daa
inc
ret
add
movsb
cmpsb
jbe
fcompl
xor
or
add
sbb
jns
push
cmc
adc
enter
push
mov
popa
sbb
cmpb
mov
fs
stos
push
rolb
iret
pop
push
jae
aaa
xchg
xor
fcmovnu
cmp
psllw
js,pn
sbb
xor
add
add
inc
fcmovu
dec
push
mul
loopne
and
mov
pop
test
sarb
outsb
mov
call
xorl
rcl
lods
dec
subl
push
sahf
dec
push
movb
mov
popf
pop
mov
iret
in
sub
lds
lds
push
inc
std
ret
push
pop
in
aam
lds
sahf
popa
pop
aas
add
arpl
pop
xchg
and
push
adc
push
sub
fistpl
fdivrl
out
jb
pop
mov
test
inc
jl
enter
add
mov
movb
cmpsb
loopne
push
mov
lret
add
push
xchg
xchg
loope
ror
iret
out
int3
fidivrs
bound
mov
sbb
cmp
mov
das
into
in
and
dec
mov
pop
loope
cwtl
pop
cmpsb
cmp
loop
jg
push
jns
stos
xor
pop
adc
push
rol
out
nop
leave
jb
test
inc
inc
stc
pop
adc
pop
fnstenv
in
sub
pop
pop
mov
mov
addb
ret
lahf
pop
inc
ljmp
aas
cmpsb
leave
rolb
je
sbb
aad
cld
stc
mov
sub
inc
popa
xchg
loopne
ss
dec
mov
mov
push
jp
and
push
inc
mov
cmpsl
xor
pop
shl
jae
lret
pop
and
cwtl
mov
hlt
sbb
dec
rorb
dec
add
ret
mov
sbb
sbb
mov
test
and
jmp
push
dec
and
push
sbb
mov
std
jb
stos
xor
out
fidivl
jno
jecxz
mov
mov
sbb
dec
mov
adc
xchg
js
xchg
popa
enter
or
leave
push
fidivrl
fstpl
xlat
jns
stos
add
pop
fildll
and
dec
inc
cmpsl
xchg
mov
popa
mov
fsubrp
fdivr
call
jae
mov
out
jp
pusha
and
in
dec
jno
data16
xchg
aaa
ljmp
fisubl
dec
push
test
dec
inc
pop
stos
insb
hlt
adc
in
imul
fdivl
add
jbe
pop
xchg
outsl
mov
pushf
mov
mov
arpl
arpl
dec
push
and
sub
adcb
outsb
fistl
xchg
pop
movsb
gs
je
cld
stos
sub
xchg
or
repnz
mov
lahf
enter
insb
sub
aaa
jecxz
dec
dec
mov
mov
xor
enter
xchg
clc
sub
insb
inc
mov
fcoms
xor
push
mov
add
aam
pop
dec
jecxz
jmp
pusha
dec
mov
ja
xchg
xor
mov
enter
movsb
ljmp
sub
dec
lcall
sub
or
mov
out
fnstsw
sarl
pushf
push
std
shlb
out
pop
xor
imull
sarb
les
jne
nop
add
ljmp
xchg
add
shr
shlb
lret
xchg
cmp
std
dec
pop
push
in
mov
in
cwtl
mov
pop
jg
ds
paddb
mov
mov
outsl
pop
or
std
add
inc
add
arpl
dec
stos
xor
rclb
cmpsl
fistpl
cmovl
sbb
sub
xchg
mov
popa
enter
adc
fyl2xp1
repz
push
sbb
xchg
mov
sub
sub
or
dec
xchg
adc
fmuls
xor
mov
sub
jle
and
dec
outsl
lahf
sahf
cmp
inc
hlt
lds
or
addl
pop
xor
dec
outsl
xor
ret
mov
sbb
cmp
imul
imul
xor
sbb
xor
xchg
xchg
mov
jp
sbb
or
rorl
cmc
xor
mov
lds
mov
es
dec
pop
inc
cwtl
rcl
jno
outsb
xchg
dec
adc
xchg
jns
pop
sahf
imul
movsl
push
adc
mov
ret
stos
mov
sub
cwtl
sarb
aam
jnp
cmc
push
add
dec
mov
cwtl
mov
rcr
mov
push
das
pop
xchg
mov
pop
in
mov
js
xchg
movsl
jle
imul
add
jne
insb
outsb
in
add
pop
fistpll
jmp
sub
sbb
mov
rolb
push
fimuls
es
mov
and
imul
std
xor
pushf
into
outsb
call
mov
inc
pop
pop
test
jne
adc
xor
sub
inc
insl
fsubs
mov
pop
je
mov
sbb
fisttpl
push
xchg
pop
pop
gs
pop
and
push
pop
fisubl
lret
lahf
cmp
xchg
mov
pop
mov
shll
and
push
xchg
inc
std
inc
jl
movsl
fdivrs
mov
pop
sahf
bnd
es
or
mov
and
xchg
popf
filds
cwtl
cmc
repz
mov
shll
lret
xor
xchg
or
sub
and
xchg
jbe
sub
push
imulb
mov
repnz
mov
cs
jecxz
bound
add
or
lcall
xchg
sub
and
int3
mov
in
push
data16
test
mov
push
jb
pushf
pop
xor
inc
popf
jmp
lahf
nop
jg
popf
cli
mov
lret
jbe
push
sbb
sub
push
adc
xchg
repz
sub
jle
imul
jne
into
inc
xor
and
dec
jge
pop
xor
adc
xlat
je
pusha
inc
xchg
adc
dec
ficoml
or
pop
sarb
sbb
sub
scas
lods
mov
xchg
scas
cmc
scas
ret
push
inc
dec
fmul
xchg
ljmp
sub
xor
add
adc
lret
ljmp
cmp
mov
add
add
lret
pop
pop
dec
rolb
xchg
les
mov
cld
das
in
out
jl
and
pushf
dec
enter
test
inc
push
xchg
test
cmpsb
test
cmp
mov
dec
fsts
test
cmc
jns
adc
inc
out
lret
pop
push
push
pop
pop
add
ret
in
adc
lret
add
pop
lea
imul
jecxz
sub
adc
decl
dec
lods
sbb
or
test
addr16
punpckldq
out
inc
dec
fcomi
cltd
inc
jne
shr
sub
push
fiadds
je
xchg
or
jno
and
test
pop
out
cltd
mov
testl
test
sub
negb
mov
jl
imul
scas
inc
imul
and
or
jmp
push
repnz
push
cmp
xchg
inc
jae
xchg
out
andl
add
push
lods
and
mov
cmp
jne
pop
xor
and
push
aaa
mov
and
push
jno
test
stc
mov
stos
scas
xchg
or
out
rorl
and
mov
test
out
rcll
mov
mov
adc
xlat
ja
jl
mov
sbb
mov
gs
adc
adcl
out
jecxz
aas
xor
sub
sbb
inc
scas
hlt
je
xchg
mov
negl
stc
add
jmp
jbe
xchg
rcrb
dec
pop
ficomps
and
jecxz
pop
ds
jae
stos
ja
mov
adc
jae
scas
in
cmp
push
cld
mov
mov
mov
inc
js
dec
add
out
nop
mov
sub
rclb
stc
jb
decb
ja
and
mov
jl
jnp
rcrb
dec
icebp
imul
aaa
addr16
mov
sbb
xchg
xchg
cwtl
inc
loop
xchg
loopne
ret
stos
imulb
push
out
pop
mov
add
repnz
imulb
pop
pop
dec
mov
mov
fstpl
loop
int
jns
xor
cld
mov
jmp
fbstp
dec
xchg
call
aad
push
xchg
testb
fs
jmp
pop
mov
and
and
pushf
pop
aas
mov
loop
int
adc
ret
xchg
jb
test
or
int3
jge
push
rcll
dec
sbb
mov
fstpl
popf
dec
or
inc
fwait
sbb
repz
pop
repz
decl
ret
js
inc
repnz
fsubs
mov
stos
scas
lret
and
adc
iret
fdivs
leave
jne
add
and
lcall
sub
jno
das
push
movsl
into
dec
mov
dec
icebp
mov
lea
adc
or
in
test
jb
cmp
pop
bound
add
sub
mov
insl
lea
mov
leave
adc
pop
aaa
cmpsl
mov
and
xlat
icebp
es
stos
lea
lock
adc
xor
jae
je
iret
in
notb
cld
mov
inc
int3
dec
xchg
cmp
fsub
or
not
mov
inc
fbld
push
loop
in
jecxz
xchg
sub
fwait
pop
hlt
rorl
dec
psubw
or
inc
lods
and
mov
mov
aam
jne
nop
out
repnz
movsb
out
aas
pop
imul
push
roll
out
testb
sub
dec
sahf
mov
xchg
sti
dec
in
loop
sub
ret
mov
cwtl
xor
xlat
sbb
pop
pop
xchg
aad
mov
fprem1
fistps
mov
idivb
call
btr
push
mov
sahf
mov
test
adc
sub
shrb
ja
mov
sbbl
xchg
mov
cmp
arpl
shl
pop
pop
subl
scas
jle
mov
pop
push
xor
sbb
mov
fcompl
lret
adc
in
pop
fcomi
xchg
cwtl
cmp
fnsave
or
fadds
xchg
into
pop
mov
fwait
inc
mov
sbb
xchg
cmp
mov
frstor
out
push
adc
add
inc
sbb
cli
xor
pop
mov
sbb
pusha
and
xchg
push
mov
mov
rolb
dec
pushf
jb
push
ror
subb
loope
out
in
sbb
mov
daa
lods
cs
daa
mov
pop
jl
out
add
xchg
mov
dec
mov
cld
aam
test
and
movsb
cmp
cmc
inc
mov
push
xchg
movsb
rolb
adc
mov
adc
pop
xor
xchg
lods
sub
loopne
inc
inc
xchg
imul
cld
xor
xlat
mov
cmpsl
or
jns
adc
int
inc
sbb
pushl
inc
es
ja
inc
out
mov
mul
fldl
jecxz
adc
mov
mov
jecxz
pop
lcall
sbb
pop
test
mov
cltd
loope
xor
ja
or
add
insb
mov
mov
pop
push
adc
inc
mov
lahf
out
iret
xchg
pop
mov
sub
mov
dec
ffreep
cli
sub
icebp
lret
xor
fucomp
xchg
and
xchg
mov
mov
in
dec
jne
lods
jmp
adc
sbb
adc
int3
mov
jne
test
add
test
jnp
cld
lea
fdivrs
sub
repz
enter
loop
subb
enterw
call
pop
add
xlat
jb
adcb
inc
stc
je
or
bound
rcrb
fsubrl
dec
adc
ja
popf
or
aaa
inc
sbb
pusha
dec
adc
lahf
jnp
or
push
inc
and
sbb
in
mov
mov
decl
xor
mov
sub
mov
ja
dec
movsb
shrb
inc
pop
push
push
mov
adc
adc
sti
aad
mov
fisttpll
test
mov
inc
lret
pop
jg
jl
fisttps
adc
and
int3
pop
aad
jl
push
mov
jb
xor
dec
popf
mov
fs
mov
xchg
stc
xor
jb
out
aad
cs
xor
jge
or
int
aad
pop
adcb
jno
mov
jecxz
loopne
xorl
cld
sbb
xchg
pop
insb
or
dec
mov
repz
jb
xor
jl
scas
mov
cmp
push
push
mov
in
jmp
xor
jae
adc
test
mov
or
push
push
jmp
dec
cli
xchg
movsl
mov
mov
mov
aas
in
and
sbb
xchg
mov
add
mov
cmpsl
adc
scas
add
nop
push
stos
cli
mov
push
rclb
adc
lods
dec
jne
lret
inc
xchg
jno
xchg
fistps
pop
mov
popf
sub
dec
fdivrl
pop
stos
and
cmpsb
cmp
subb
xor
cli
pop
sub
out
sub
sbb
push
mov
or
dec
stc
jl
pop
cmp
int
rcl
mov
fs
inc
sbb
push
into
adc
in
fldt
fs
cwtl
xor
jae
sbb
lea
add
lock
call
mov
adc
cmp
jae
or
fldenv
add
popf
xchg
xchg
sbb
mov
bt
les
mov
jmp
dec
xchg
xchg
data16
or
fs
icebp
sub
sub
stc
xchg
sti
cmp
mov
mov
push
jmp
xor
xor
mov
std
add
pop
ss
xchg
inc
dec
out
test
mov
xor
enter
in
push
shlb
inc
icebp
xlat
iret
jl
aad
xor
xor
std
arpl
lods
fcom
add
stos
orb
cwtl
cs
jne
adc
rcr
lcall
add
ret
xchg
out
daa
in
fs
popf
pushf
fcom
push
out
insb
movsb
outsl
aaa
lret
movsl
das
gs
jl
movsb
pop
jle
cld
fstpl
sahf
xchg
call
out
daa
xor
or
in
sub
das
pushf
gs
movsb
adc
shl
push
inc
int3
inc
aas
adc
jnp
dec
mov
sbb
mov
xor
dec
ds
jo
mov
push
sub
or
insl
push
addr16
xor
cmp
xor
out
aaa
stc
int3
push
cmc
sbbl
out
into
movsl
test
sbb
shl
sub
sbb
mov
or
in
mov
sub
mov
sbb
mov
cmp
mov
jbe
sub
mov
dec
jl
mov
jmp
jb
mov
adc
mov
push
mov
mov
jp
mov
push
clc
xlat
dec
dec
jge
jnp
mov
xchg
add
jb
inc
xchg
cmpsb
push
cmp
mov
setl
andb
cltd
sbb
bound
sub
psrlq
das
sbb
cwtl
ror
cwtl
sti
or
dec
mov
icebp
daa
cmpb
mov
lock
pop
cmp
cli
or
xchg
outsl
cmp
ficoms
fcmovnu
lret
jg
mov
xchg
popa
call
lods
xor
sub
mov
pop
dec
dec
pusha
stos
rorl
into
out
inc
push
jge
into
bound
in
sbb
mov
ror
adc
sbb
pop
fistpl
dec
icebp
jno
or
sbb
aas
jge
es
test
fcompl
cwtl
mov
cld
inc
aam
test
jecxz
jle
stos
nop
mov
adc
sti
push
mov
cmp
cmpsl
fistps
sbb
or
mov
add
sahf
push
mov
mov
in
push
pop
pop
push
mov
sub
mov
scas
sbb
stos
inc
xor
or
cld
ret
cmp
cmp
sbb
mov
or
xor
fs
cltd
aas
fistl
enter
add
xchg
add
pop
bnd
mov
outsl
sti
jo
xchg
fnstsw
dec
popa
dec
mov
push
scas
xor
mov
imulb
cmpsl
xorb
rcrl
push
test
js
test
call
stc
stos
icebp
test
mov
aam
push
push
mov
aam
adc
fldenv
aaa
sub
sub
dec
insl
cs
pop
adc
mov
testl
sub
cli
mov
mov
stos
push
jmp
dec
pop
inc
lret
in
leave
popa
dec
daa
inc
sti
xchg
outsb
adc
dec
or
roll
mov
daa
test
cmp
int
out
push
in
or
xchg
movsb
call
jnp
push
xchg
stos
fistl
bound
subl
gs
xchg
js
rcrl
out
lret
dec
fsubr
push
loop
add
mov
push
test
push
adc
icebp
test
sti
or
push
lret
fcoms
stos
mov
enter
add
push
add
cwtl
adc
xor
xchg
mov
pop
je
push
lock
pop
push
das
ljmp
pop
cli
push
shll
arpl
into
pop
jge
dec
aaa
add
insb
pop
std
mov
cld
cmpsl
or
aam
repz
bound
fs
xchg
push
xor
cmp
xor
daa
inc
arpl
roll
ret
std
fadds
std
fiaddl
adc
add
divl
push
stos
push
stos
outsl
mov
sub
sub
and
lcall
inc
loopne
mov
lcall
cmp
push
sbb
je
ret
pushf
or
sbb
pushf
push
mov
bound
addr16
dec
lret
adc
pop
negb
inc
call
inc
xchg
leave
add
jmp
push
enter
cmp
jmp
lret
incb
std
mov
mov
adc
add
ds
js
shrb
fldcw
sub
scas
add
pop
or
in
push
pop
call
xchg
inc
sub
dec
adc
lret
xor
int3
sarb
dec
adc
les
faddl
inc
add
ds
frstor
pop
out
pop
fpatan
int3
cwtl
pop
out
inc
fstl
ss
cld
scas
fdivrs
outsb
adc
ss
jbe
divb
sahf
es
lods
dec
test
pusha
jmp
or
cwtl
insb
pop
jns
stc
and
add
fsubrl
inc
mov
mov
scas
loopne
and
in
insl
in
shrl
ljmp
hlt
mov
fldenv
and
in
inc
les
sub
cli
jns
pusha
aad
leave
xchg
mov
mulb
lcall
inc
fistl
jns
mov
push
scas
jl
rorb
push
adc
sbb
mov
adc
imul
xor
mov
or
fsts
leave
es
sti
push
xor
iret
push
fwait
hlt
or
arpl
mov
mov
outsb
test
dec
repz
fmuls
movsl
in
xor
adc
inc
sbb
and
mov
sub
xlat
fimuls
lret
std
shll
in
je
lods
cmp
ja
cwtl
mov
dec
adc
cmc
cmpsb
lahf
or
test
xchg
adc
cmpsl
fsubrs
push
inc
dec
push
pop
xlat
pop
aas
jecxz
and
push
mov
sbb
shlb
ja
mov
fs
js
test
sahf
in
mov
mov
stos
lea
rcll
mov
push
inc
jns
push
adcb
ss
cwtl
and
mov
jmp
pop
add
test
ja
into
push
and
xor
inc
enter
ret
jge
and
shl
lcall
sub
in
imul
rol
repnz
scas
and
inc
movsb
jp
mov
pop
loope
sub
and
inc
int3
in
add
xchg
adc
pop
jge
or
jp
stos
aam
add
out
ds
movsb
jns
cmp
leave
insb
xchg
xchg
push
jae
aaa
pop
stos
lock
mov
dec
js
mov
adc
jle
mov
call
movsl
hlt
loope
mov
add
rcr
dec
mov
xor
cmp
jge
ja
cmp
pop
clc
inc
inc
or
pop
subb
fisubs
sbb
out
test
outsb
pop
jge
imul
add
dec
sti
mov
notl
popa
add
insb
mov
cltd
daa
in
incb
stc
mov
xchg
mov
cmpsb
xor
out
xor
cmp
jns
push
mov
repz
pop
or
dec
jle
adc
push
sub
cmp
icebp
xchg
or
fidivrl
neg
lds
adc
cmpsl
mov
mov
mov
xchg
and
fadds
push
jb
xor
mov
and
arpl
notl
mov
lods
cmp
jle
xor
pop
jne
xor
outsl
in
fs
sbb
fistps
push
xor
cmp
imul
popa
push
mov
xchg
stos
mov
movsb
es
push
iret
imul
fldl2e
jmp
dec
leave
push
mov
ret
insl
mov
dec
jo
and
fs
push
mov
pusha
leave
cmpsl
popf
pop
insb
les
lret
lods
out
inc
scas
push
in
xchg
adc
jnp
mov
push
cwtl
test
sti
dec
mov
cmpsl
pusha
mov
pop
rolb
cmpb
mov
push
pop
mov
test
psubusw
cwtl
sti
sbb
mov
mov
mov
xchg
clc
bound
rol
arpl
adc
lods
bound
add
stc
xchg
fiadds
repz
jl
xorb
sub
sbb
ret
mov
jnp
pop
mov
cmp
nop
and
ds
cmpsl
xchg
pop
mov
or
ret
sbb
ss
and
push
repz
pop
push
js
pop
push
or
aad
xchg
sbb
adc
ja
ss
cltd
push
dec
loope
test
xor
test
xrelease
adc
adc
sub
pop
sahf
addb
data16
xchg
cltd
xlat
fwait
popf
aaa
bound
ds
jae
inc
inc
and
mov
dec
lcall
mov
push
ljmp
mov
sti
xchg
add
push
mov
js
push
xchg
add
bound
push
adc
cmp
xchg
xor
inc
repnz
test
push
jl
aas
jns
or
mov
lahf
mov
fbld
push
ret
and
sub
mov
into
dec
insl
movb
xlat
pop
call
jp
xchg
cwtl
push
and
mov
xor
jl
lea
sub
enter
andl
dec
subb
jge
addr16
mov
movsb
subb
pop
lret
jne
mov
mov
jge
pop
popf
xor
outsb
in
mov
cmc
enter
call
mov
sub
cmp
je
sbb
pop
ja
mov
fistpl
sub
add
adc
cmp
cmc
cli
out
incl
push
mov
or
andl
in
dec
into
mov
mov
addr16
jmp
lret
dec
adcb
stc
mov
jl
hlt
push
outsb
mov
push
pop
inc
cmp
addr16
jge
clc
xor
sbb
mov
adcb
mov
aaa
fmulp
push
aam
negb
sahf
fimuls
push
int3
add
clc
xchg
aas
add
or
nop
lret
icebp
push
mov
sbb
pushf
adc
movsb
xchg
push
rcll
leave
shll
xlat
cmp
and
aaa
mov
xorl
mov
jo
sub
xor
lret
jae
push
and
sbb
call
les
mov
pop
sbb
jo
outsb
lock
mov
sub
mov
mov
int
mov
jbe
call
shll
cld
xchg
cmpb
sub
outsl
leave
lret
sub
xor
jno
fdivl
lahf
push
cmp
cmp
push
mov
loopne
pop
adc
loope
dec
xchg
testl
ss
xchg
or
stc
dec
lods
mov
cwtl
mov
mov
clc
pop
ret
adc
push
or
inc
cmp
ss
test
mov
ljmp
daa
into
cs
inc
pop
sub
pop
jge
add
xchg
into
mov
dec
ret
cmp
ds
das
sti
out
call
out
jae
inc
push
ljmp
cmp
push
add
add
stos
cmp
setae
aad
jne
sub
jno
or
cmp
xchg
fcom
pop
sbb
jmp
cmp
xchg
pop
mov
ja
pop
jl
hlt
cmpsb
inc
daa
stos
ja
outsb
in
outsb
loope
xchg
jp
push
sub
jmp
das
aaa
add
sbb
push
inc
sbb
mov
mov
cmp
mov
dec
jne
ret
loopne
adc
sti
xor
xor
push
ret
popf
cmc
sub
and
xor
cmp
sub
xchg
mov
pop
popa
pusha
jp
dec
push
aam
mov
mov
mov
lret
mov
test
sti
outsb
xrstors
cmp
cmp
mov
dec
mov
arpl
movsl
jb
insb
adc
jle
xor
popa
pop
fnsave
dec
and
add
pop
loopne
and
jl
push
pop
sub
dec
into
rcrl
ja
es
pop
inc
pop
cmp
pop
inc
repnz
cwtl
push
sbb
xor
jmp
or
push
lret
push
mov
lock
out
test
adc
or
jo
jnp
jl
cmpsl
test
pop
stos
jge
jge
sub
inc
daa
es
popa
outsb
nop
push
mov
outsb
cmp
mov
jle
xor
fimuls
ret
dec
jmp
jge
cmpsl
and
xchg
lock
shll
dec
popa
inc
test
pop
clc
or
mov
xor
xchg
clc
jg
subb
icebp
pop
inc
mov
mov
in
mov
push
popf
int3
test
jns
test
sbb
push
iret
cltd
pop
stos
adc
xor
mul
ja
cld
xchg
push
push
in
testb
inc
lea
rclb
test
sub
mov
lret
cmp
xchg
push
repz
outsb
push
les
in
dec
mov
pop
in
xchg
in
out
xchg
sbb
xor
cmp
loopne
loopne
pop
xor
fnstcw
iret
roll
int
mov
fistpll
and
sti
out
inc
dec
lret
aam
push
lods
dec
and
xchg
cmp
lret
icebp
mov
int3
and
xor
fs
lahf
pop
sbb
test
cld
lret
sub
orb
lods
insl
adc
aad
push
mov
mov
fldcw
call
cs
pop
dec
pop
rolb
mov
dec
fisttpll
push
adc
in
hlt
imul
xchg
sbb
jmp
dec
mov
dec
repnz
pop
test
out
xor
mov
mov
outsl
repz
out
out
xchg
test
in
into
pop
mov
cmp
pop
stos
lods
shll
xor
mov
or
inc
int
clc
jle
mov
mov
mov
dec
testb
jno
mov
and
pop
cmp
sub
or
dec
mov
jb
stc
lcall
or
sub
cmp
fcompl
xor
movsb
mov
add
inc
push
sub
cmp
test
out
cmpsb
mov
xchg
leave
lret
dec
dec
int3
or
mov
xlat
sarb
push
mov
popa
fdivrs
lret
lcall
push
and
aad
repz
dec
shlb
dec
cmc
lret
ljmp
dec
aaa
jae
sub
sub
and
lret
cmp
xor
mov
cltd
push
sbb
mov
ljmp
jecxz
xchg
scas
jmp
inc
test
loop
aas
faddl
sahf
lods
inc
std
or
addr16
push
iret
and
sub
cld
lret
xlat
fwait
pop
jl
sub
mov
or
ja
mov
jp
pop
add
clc
cmc
fcmovnu
add
inc
push
into
dec
test
flds
sarl
mov
mov
push
imulb
lods
in
xchg
mov
jle
pop
cld
outsb
sbb
mov
lret
jp
fnstenv
dec
inc
pop
sub
sbb
sahf
test
xor
cmp
mov
aam
mul
test
leave
xor
jg
aad
xor
mov
fisubl
fs
cmp
dec
lods
addr16
sub
mov
mov
push
pop
add
sub
inc
or
imul
mov
lcall
call
mov
test
loope
fstpt
cmp
popf
and
repnz
imul
xor
inc
outsl
jno
mov
sbb
fldl
clc
mov
test
jge
mov
imul
aas
sub
pushf
in
mov
xchg
sbb
test
cli
add
fs
mov
mov
jno
sbbl
div
xchg
push
and
xchg
arpl
out
sub
mov
ret
xchg
jl
cmp
fistpll
mov
out
inc
into
or
stos
xor
dec
sarl
inc
push
cld
inc
sub
push
cmpsl
call
jo
mov
cmp
add
sarl
dec
xchg
inc
icebp
iret
xchg
push
push
xor
or
dec
test
test
and
mov
sub
into
addr16
mov
jl
push
data16
dec
inc
xchg
xchg
dec
sbb
lods
push
in
sub
mov
popf
das
sub
and
pop
mov
mov
lret
cmp
xchg
stos
add
fwait
shr
lds
pusha
jp
sub
jecxz
xchg
cmpb
jno
ret
mov
push
in
lcall
mov
cmp
mov
jecxz
inc
jb
stos
pop
cmp
and
inc
mov
sbb
mov
dec
push
gs
or
push
rcl
ja
xor
mov
ds
mov
pop
std
pop
push
nop
repz
fsubr
mov
aad
inc
adc
pop
repz
mov
push
pop
cmp
loopne
cmpsb
mov
in
xor
fmull
orb
cmp
xchg
dec
dec
xchg
inc
dec
and
xorb
xor
jmp
dec
adc
xor
push
cmp
aam
fwait
sbb
insb
pop
dec
sub
out
pushf
inc
loopne
push
int
js
xor
adc
insl
mov
adc
daa
xchg
in
mov
push
mov
xchg
cwtl
dec
pop
mov
or
xorb
jmp
test
in
fimuls
add
sub
or
mov
fs
and
fldl
sub
dec
adcb
add
lods
add
adc
and
dec
sub
int3
fdiv
int
mov
mov
stos
rol
cmp
or
and
push
aaa
and
fcmovnu
pop
ss
mov
jmp
mov
mov
les
mov
jmp
jno
cmp
addb
sahf
test
inc
out
fcomps
fisttpll
push
or
xchg
cmp
cmpsb
sbb
xchg
imul
sbb
mov
pop
jnp
jne
add
sarb
pushf
and
sbb
cmp
fistps
jae,pt
imul
add
xchg
lea
mov
loope
cs
push
pop
mov
push
dec
add
data16
int3
mov
pop
jb
mov
mov
daa
fdivrl
jmp
mov
sub
iret
adc
pop
cld
adc
ffree
mov
nop
xchg
mov
cld
xchg
out
lahf
out
jns
in
das
sbb
jmp
cmc
inc
fs
and
xchg
js
sub
xor
push
cmc
mov
rolb
cmpsl
das
inc
or
dec
pop
cmc
jb
xor
jmp
jns
sbb
jmp
xor
les
ds
test
pop
cmp
jp
gs
bound
test
or
testb
stc
cwtl
mov
and
sbb
aas
mov
clc
repnz
rcr
add
dec
nop
sbb
loopne
mov
sub
in
push
lods
ds
fstpt
sbb
scas
pop
in
addr16
test
pop
lret
xchg
sub
ret
or
in
add
and
or
xor
adc
add
mov
add
lds
shrl
jg
pop
bound
sbbl
mov
cmpsb
jns
pop
jo
das
jo
inc
jne
stos
add
sub
dec
sbb
lea
mov
xor
dec
int3
rcr
shl
pop
sub
xor
test
jmp
aam
or
cmp
mov
or
push
fidivl
xor
mov
test
hlt
data16
test
mov
loop
and
and
jmp
cmpsl
xor
jns
xchg
adc
jl
push
into
cmp
push
shl
and
sub
mov
arpl
sarl
or
je
loop
push
cli
push
test
pop
lds
push
lahf
mov
mov
roll
cmp
jae
inc
cwtl
rorb
mov
aas
sti
dec
and
psubusb
clc
mov
fsubs
pop
adc
jno
movsl
mov
fwait
hlt
inc
std
jne
cwtl
jo
push
or
rolb
xchg
in
mov
loop
add
ffreep
mov
xchg
sbb
pop
pop
popf
pcmpgtw
jle
sarl
jns
push
adc
lods
mov
sbb
cwtl
jmp
mov
jecxz
jne
repnz
cld
push
inc
adc
pop
add
aad
cmp
aas
jno
push
push
sbb
in
js
inc
dec
jae
pusha
jle
fstps
xlat
add
lea
jno
lods
orl
sub
repz
mov
ljmp
mov
popa
out
mov
cli
das
jo
dec
icebp
fsin
scas
jmp
out
out
xlat
jg
ficoms
dec
add
ficomps
push
and
add
cld
xchg
call
push
mov
pop
stc
xor
mov
pop
and
jb
xor
sarb
mov
sbb
add
xchg
data16
cmp
loop
jp
shlb
inc
mov
pop
adc
jg
or
lds
xchg
mov
addr16
push
pop
std
clc
adc
out
and
push
imul
stc
add
rcl
push
adc
repz
sbb
repnz
out
repnz
jg
popa
mov
cmp
add
int3
scas
loop
clc
add
and
ja
out
cmpb
leave
dec
in
push
sub
out
jne
xor
iret
jp
je
jp
inc
shll
iret
call
and
cmp
pop
dec
mov
and
imul
rorl
aam
lcall
lret
enter
push
inc
popf
dec
insb
mov
dec
xor
jp
into
lods
mov
sbb
push
sub
and
in
dec
cmp
jnp
rcl
xor
fidivs
dec
jnp
lds
das
and
gs
fadds
inc
loop
jnp
mov
adc
ss
movsb
and
fwait
or
outsb
in
push
aam
dec
fwait
stc
loope
and
les
lods
dec
mov
cmp
lcall
and
pushf
xor
sub
cld
ds
aam
ja
lods
inc
leave
mov
or
inc
test
stos
dec
loope
sub
mov
lock
or
std
cmp
pop
adc
inc
cltd
mov
mov
and
add
out
xor
sbb
sbb
push
mov
mov
jecxz
out
mov
and
lods
mov
and
cli
popl
mov
int
out
adc
mov
cmp
xor
jnp
mov
jp
arpl
xor
clc
inc
add
data16
lret
jmp
push
adc
std
shl
push
add
mov
jbe
cld
dec
push
popf
jns
idiv
fbstp
lea
push
cwtl
loopne
jecxz
adcb
jmp
ret
in
or
jge
pushl
outsl
mov
shlb
inc
xchg
arpl
and
mov
sti
iret
cmp
push
in
negb
inc
adc
dec
mov
sub
sub
pop
insl
dec
lcall
rcrb
pop
jle
fsubrs
xorb
and
aam
pop
enter
cmp
shlb
bound
pop
add
cld
push
fisttpll
rcl
cmp
pushf
sub
movsl
push
aam
scas
stos
add
in
sub
mov
jns
push
icebp
outsl
bound
jo
and
inc
fstpt
xor
inc
sub
cs
in
jle
xchg
lret
nop
loop
test
ficomps
inc
sbb
lret
sbb
dec
lock
lcall
js
mov
lock
jge
outsl
mov
inc
and
mov
mov
xchg
mov
loope
lods
pop
scas
fsubr
mov
adc
aad
es
cmc
leave
addr16
sahf
movsl
popa
clc
jge
sbb
and
mov
pop
mov
adc
fdivrl
adc
sbb
cltd
orl
sbbl
mov
inc
dec
inc
scas
mov
cmpsb
stos
jmp
hlt
daa
add
imul
int
mov
sub
mov
mov
xchg
lret
shl
add
hlt
mov
outsl
mov
dec
cld
jle
loopne
imul
andl
jmp
mov
data16
mov
mov
imul
pop
mov
pop
push
or
cmp
arpl
and
inc
lahf
jo
cltd
push
inc
xor
push
fcmovne
outsb
mov
xor
sub
es
stos
test
and
nop
in
xor
xor
mov
repz
pop
mov
ds
push
jg
xor
hlt
adc
cmc
clc
jmp
fwait
jo
imul
fiadds
jg
in
inc
aaa
sbb
scas
lcall
shl
repnz
sub
cli
xor
pusha
fistl
ret
xor
mov
mov
xchg
cmp
outsl
insb
xchg
fs
xchg
mov
call
cli
bound
iret
push
loop
jmp
jae
dec
je
ret
hlt
repz
add
std
sub
cmpsl
hlt
sub
sbb
jns
sub
jns
sbb
fsubrs
leave
stc
jnp
rcrb
cwtl
sub
or
sbb
loopne
sbb
and
lcall
sahf
cmp
pop
out
in
mov
add
cmp
or
jo
mov
cli
pusha
cmp
xchg
or
mov
pop
frstor
insb
sbb
fmulp
add
cmp
sub
sbb
stos
fstpt
js
aad
cmp
lods
adc
push
add
push
in
in
sbb
jle
leave
xor
or
inc
mov
push
leave
nop
rorb
sub
xchg
cmp
xchg
push
mov
add
movsl
or
sbb
push
xchg
fisubrl
je
inc
test
dec
lret
cmp
inc
fnstsw
and
lret
fwait
add
jg
add
or
xchg
popa
in
dec
mov
cmp
std
adc
inc
ljmp
sbb
out
cld
outsl
and
xchg
std
xlat
cld
xorb
cmpsl
subb
sub
repz
add
xchg
iret
fsubs
jno
je
sbb
into
mov
cmp
cs
sub
hlt
mov
call
aam
add
mov
in
test
fistpll
repnz
adc
xor
add
mov
jl
jmp
pop
lock
jl
xchg
leave
sbb
call
daa
jmp
dec
mov
sbb
add
cmp
sub
pop
lahf
inc
int
mov
sbb
mov
out
sub
inc
xor
int
sbb
sub
mov
dec
mov
or
aad
stc
test
cmp
imul
xchg
ret
stos
and
clc
push
in
jnp
jge
xchg
xchg
cmpsb
sub
rcll
xor
lea
mov
add
ret
mov
and
ret
xchg
cmp
or
mov
cmpl
fs
lcall
mov
in
cmp
jp
ret
xor
push
lock
sahf
nop
daa
lret
mov
push
lods
imull
insl
push
mov
adc
pop
mov
outsb
repnz
les
add
pushf
fcomps
je
adc
mov
fisttpll
outsl
cmpsl
and
hlt
adc
mov
hlt
mov
std
loope
test
mov
inc
aam
mov
imul
out
in
dec
pop
scas
imul
and
mov
and
xchg
fdivrs
push
adc
xchg
test
mov
jecxz
inc
fbstp
aas
mov
cmpsb
push
cmp
xchg
add
cmp
mov
jae
sti
or
dec
outsl
or
clc
pop
addb
mov
mov
push
in
stc
adc
pop
add
test
rol
movsb
and
cmp
rcll
imul
sbb
sub
insb
push
mov
sbb
lret
aaa
out
mov
jp
push
adc
loop
push
cmc
sub
ss
inc
iret
bound
out
sub
sub
mov
lea
sahf
mov
call
ljmp
rcll
pushf
pop
push
mov
jl
push
lahf
scas
psrld
mov
popaw
shl
call
iret
or
push
mov
xchg
mov
sti
fdiv
cmp
xor
outsb
scas
lahf
rcr
aaa
pop
js
ljmp
xorps
outsl
cmpsb
jecxz
adc
rorl
cltd
xor
loopne
push
jo
mov
test
sbb
xor
je
cmc
out
xchg
or
xchg
cltd
in
inc
arpl
jb
add
pop
dec
sbb
pusha
xor
pop
and
push
pop
jle
sti
pop
rcll
dec
lcall
xchg
sahf
stc
adc
jp
push
jbe
nop
enter
std
cmp
inc
push
cltd
fiaddl
adc
inc
mov
subb
mov
movsl
out
into
scas
pop
xchg
and
add
test
push
or
daa
sbb
push
sbb
inc
xchg
lcall
cmp
ja
pop
xchg
loope
xchg
pop
jl
movsl
stos
fldenv
lret
or
xchg
dec
sub
nop
fwait
mov
xor
pop
aas
mov
mov
pushf
push
adc
es
push
data16
mov
cmp
jecxz
jo
outsb
and
movsl
mov
jb
sahf
lahf
mov
insl
mov
incl
imul
mov
pop
push
jb
popf
jg
fnstsw
push
aaa
pop
fstps
sub
shlb
das
dec
xor
push
shrl
in
jnp
bound
cwtl
pop
push
fcomip
ret
fidivl
sbb
push
xchg
jle
std
mov
xchg
xchg
xor
inc
pop
sub
cmpsb
dec
jbe
adc
push
push
ficomps
lods
mov
aam
dec
ljmp
shlb
dec
pop
xor
lahf
in
lahf
aaa
dec
fsubr
and
std
mov
lea
outsb
sbb
adc
dec
mov
sbb
jmp
pop
dec
std
sub
mov
andb
xchg
outsb
les
mov
les
lcall
sub
mov
les
sbb
data16
in
pop
imul
lods
stos
fcoml
xlat
mov
inc
xor
mov
sub
dec
add
insl
jae
ljmp
or
mov
movsl
fnstsw
into
or
sahf
push
jp
clc
add
push
js
pop
mov
cmpsb
shr
push
sub
fisubrl
push
in
add
xor
popf
sahf
mov
pop
pop
repz
scas
clc
jge
xor
lock
jmp
sub
cli
das
cmp
cmpl
into
jp
fimuls
stos
dec
jno
add
pop
gs
dec
inc
cmpsb
xchg
and
pop
test
into
dec
outsl
sbb
cmp
inc
or
scas
out
mov
cmp
fs
push
movsb
dec
pop
xor
mov
mov
xchg
lcall
mov
fisubrs
fdiv
inc
leave
test
dec
adc
xchg
and
mov
xor
shll
std
popa
nop
leave
inc
inc
andb
cli
fldt
movsb
jne
rcrb
je
mov
dec
xchg
jnp
xor
mov
sbb
ss
leave
dec
outsl
add
adc
or
add
xor
jl
xchg
bound
push
testb
jns
call
cwtl
int3
jo
insb
insl
push
imul
stos
jl
push
lahf
stos
inc
inc
dec
cld
jno
pop
cli
scas
pop
in
mov
xchg
out
xchg
aad
xchg
mov
fsub
das
adc
shlb
lods
and
out
add
test
repnz
out
fadds
call
sub
incl
add
ror
xchg
mov
sti
out
decl
outsb
or
ret
xor
repnz
pop
stc
fisubrs
outsb
jle
push
mov
jne
adc
adc
pop
sub
jo
or
xor
push
mov
out
nop
mov
scas
data16
data16
cmpb
add
leave
stos
jmp
iret
push
dec
ds
lods
cmp
adc
sbb
or
sbb
cmp
mov
testl
push
out
testl
pop
mov
call
aaa
add
sbb
sbb
mov
add
jp
in
sub
mov
pop
mov
aas
sbb
dec
push
add
sub
test
pop
lcall
add
xchg
or
cmp
add
cmp
sbbb
icebp
movsl
add
lods
pusha
sbb
fs
shl
rcll
pop
pop
and
divb
mov
out
lcall
movsl
iret
aaa
test
insl
mov
cmpsl
sub
xchg
sub
jecxz
mov
pop
repz
das
adc
cltd
xchg
push
shrb
mov
inc
jb
repnz
dec
xchg
repnz
shrl
xor
in
lret
inc
lea
dec
imulb
pusha
cmpsb
jb
fsub
add
push
mov
push
xchg
test
mov
mov
sub
leave
cmp
add
jge
mov
into
xchg
out
imulb
cmp
xor
push
jo
dec
push
data16
push
inc
cmp
push
clc
int3
pushf
js
imul
xchg
mov
sahf
in
add
aaa
cmp
out
dec
mov
jbe
orl
stc
mov
push
fs
xor
leave
mov
adc
aaa
test
sub
lock
aad
cltd
mov
les
adc
pop
pop
testl
cwtl
mov
test
add
sub
inc
or
add
loope
jne
nop
xchg
jnp
add
fildl
xchg
pop
cmp
insl
pusha
mov
pop
int
pop
ud0
cli
and
stos
dec
add
rcr
jmp
ret
ljmp
add
and
jg
std
inc
and
adc
push
inc
mov
pop
insl
mov
dec
cwtl
scas
out
mov
push
or
or
push
inc
mov
fisubrl
mov
pop
gs
mov
sbb
into
mov
decl
jbe
dec
in
fdivs
es
push
fstpt
adc
jnp
sahf
scas
jno
in
mov
data16
aam
int
jle
jno
mov
lret
add
mov
push
mov
pop
jmp
jecxz
clc
pop
sbb
or
cwtl
xchg
cltd
lds
jp
inc
pop
cwtl
jae
jbe
xchg
jmp
popf
orl
pop
fimull
and
stos
mov
icebp
fadds
repnz
mov
or
sbb
cmc
dec
xor
inc
cmc
xchg
ljmp
jb
push
stos
push
push
out
lods
xchg
roll
in
addr16
mov
outsl
xchg
pop
cltd
ss
icebp
mov
fmul
mov
mov
sbb
outsl
fwait
pop
scas
ss
cmpl
and
pop
mov
lea
mov
sahf
and
cli
aas
jge
fldl
pop
fwait
dec
xchg
clc
andl
dec
pop
loope
popf
dec
pushf
rcrl
sbb
mov
stos
cmp
cltd
hlt
mov
cmp
in
jnp
std
inc
mov
sbb
fdivrs
loopne
fmuls
mov
lock
fstps
jecxz
push
jmp
jnp
sbb
jge
nop
popf
imulb
rorb
adc
sar
or
pop
adc
pop
lds
push
mov
xchg
jb
and
inc
frstor
in
sbb
pop
mov
mov
or
mov
fildl
data16
ljmp
leave
mov
add
cmp
movsl
jle
dec
ror
movsb
es
push
bound
adc
aas
repz
push
sbb
pop
add
inc
add
stos
mov
mov
xor
dec
or
dec
mov
sbb
ja
ud1
push
mov
ss
sub
mov
ja
mov
aaa
xchg
out
mov
in
sti
lods
in
jb
imul
lahf
fldl
adc
mov
and
push
and
andb
xchg
mov
pop
int3
or
cmp
and
dec
out
and
lock
jle
push
adc
into
lret
and
fisubs
lods
enter
dec
stos
enter
jns
push
mov
push
xchg
popa
ja
mov
pushf
xchg
stc
pop
icebp
in
rcr
add
outsl
js
mov
sbb
lea
mov
or
jle
and
scas
cmp
scas
fadd
sahf
adc
loopne
mov
dec
fadds
sbb
stc
es
xor
ds
mov
mov
jbe
cs
je
xor
mov
mov
hlt
ja
shlb
xchg
jne
pop
xchg
push
and
adc
das
mov
mov
mov
push
addr16
cmp
jecxz
mov
cltd
jl
or
sub
shlb
mov
ss
shrb
dec
xor
cmp
xlat
xchg
sbbl
jmp
lahf
mov
pop
fisubs
sub
mov
sbbl
mov
gs
jno
ja
aaa
pop
mov
mov
jb
movsl
cld
cmp
jecxz
xchg
or
sbb
es
imull
js
call
pop
out
xor
or
inc
jbe
popa
jbe
cmpsl
inc
cmp
mov
mov
and
mov
fdivrp
xchg
pop
sub
push
xchg
rcrb
stos
xchg
xor
nop
cmp
push
cli
xchg
jg
movsb
add
icebp
sub
xor
imul
or
aaa
jle
jecxz
pop
pop
push
cmp
push
mov
add
cld
adc
push
fs
mov
sub
call
xchg
push
mov
pop
mov
test
pop
adc
frstor
mov
or
inc
cmp
sbbb
mov
repnz
sahf
inc
cltd
or
es
dec
push
xorl
mov
inc
addl
mov
divb
outsb
in
divl
mov
inc
int3
sahf
orb
sub
xchg
or
les
int3
movsl
push
in
and
and
ja
and
cltd
cmpsb
push
and
jmp
adcl
adc
push
inc
or
rcll
mov
jg
inc
pop
outsb
mov
add
push
mov
dec
pop
adc
pusha
in
fcomi
lcall
mov
inc
inc
xchg
add
mov
mov
push
mov
mov
clc
sub
in
sbb
sbb
sti
xchg
pop
inc
popa
mov
rcll
imul
mov
into
push
out
sbbb
fwait
mov
push
fldt
dec
jb
imul
call
push
xor
in
fdivp
dec
jae
cli
xor
std
scas
aad
cmc
mov
pusha
mov
push
or
enter
cli
movsl
ds
data16
outsl
mov
mov
in
pop
push
inc
outsb
ret
into
arpl
jo
jg
jno
das
cmp
pop
jl
out
adc
pop
dec
in
push
scas
pop
cmpsb
out
fnstsw
xchg
cmp
push
mov
enter
sbb
loopne
in
icebp
inc
shlb
in
jno
rcr
push
bound
andb
cmp
sahf
xchg
jle
scas
xchg
nop
and
je
loopne
push
push
lds
sti
ljmp
loope
push
pop
iret
ds
aas
addr16
pop
mov
jno
mov
sub
add
xchg
adc
adc
cmp
adc
nop
popf
sub
int3
mov
lods
jp
cmpsb
outsb
fidivrs
out
sahf
test
push
scas
pop
shrb
cli
rorl
into
lods
cltd
xchg
pop
sub
mov
pop
cltd
pop
sbb
push
ljmp
ds
xor
add
pop
add
bound
pop
or
xchg
jle
je
sub
and
mov
int
adc
lods
mov
out
subb
mov
data16
fbstp
xor
movsb
or
or
insb
or
rolb
xchg
iret
test
and
pop
sti
pop
mov
or
adc
xchg
icebp
repz
mov
dec
add
jmp
andl
popa
ja
fldenv
adc
pop
scas
lds
test
aam
and
loop
mov
lods
pusha
aaa
sbb
push
decl
sbb
cwtl
out
outsl
out
mov
leave
and
lods
lret
arpl
sbb
cltd
dec
cmp
sarl
add
inc
shrl
adc
sbbl
cwtl
outsb
push
pop
jp
jmp
sbb
jno
fistps
or
ficompl
mov
pop
push
jmp
dec
jno
dec
aad
xor
and
pop
mov
mov
mov
pop
jb
imull
xchg
xchg
fisttps
out
add
xchg
lret
fidivrl
push
sub
test
out
xchg
outsl
call
pop
lds
fidivs
test
cmpsb
or
icebp
call
cs
call
in
xor
mov
outsl
push
add
push
and
fcmove
xchg
pop
lods
lcall
inc
cmc
aaa
aad
mov
divl
cltd
adc
jbe
mov
das
mov
push
inc
push
and
sahf
jl
xchg
cmp
and
xor
mov
xor
xor
icebp
xchg
lahf
cmp
std
in
jnp
iret
cmp
sahf
and
orl
and
fadd
xor
xor
xchg
subb
jae
mov
push
jp
pop
je
in
adc
mov
sub
orb
lds
adc
inc
ret
loop
sub
jmp
out
imul
cltd
jmp
outsl
jp
xor
lea
lods
dec
pop
fisubl
fldt
mov
idivb
notb
stc
jp
repnz
shl
pop
xlat
stos
jne
cmp
cli
sbb
mov
scas
or
mov
sbb
lret
cmpsl
xor
push
fnsave
stos
sbb
pop
sub
ljmp
cmp
jp
sbb
mov
dec
pop
mov
xor
ljmp
jmp
rol
loop
push
jnp
xchg
outsl
inc
mov
idivl
rclb
addb
shrb
add
dec
dec
dec
in
in
arpl
notl
out
push
sub
lret
ja
xchg
and
sbb
pusha
aam
aaa
mov
mov
jo
pop
fistpll
cmpsl
into
in
push
adc
push
pop
pop
xor
mov
cmpsl
dec
push
adc
pop
adc
fldl
pushl
push
sbb
jl
pop
xor
outsl
icebp
pop
into
inc
push
inc
stos
in
stos
jl
push
lea
fidivrs
jb
add
mov
pop
mov
fsubrl
mov
ret
fucomi
movsb
and
test
aaa
out
mov
out
scas
mov
push
das
mov
sub
sahf
int
stc
cld
psubsw
aaa
lock
imul
cmp
inc
fimull
gs
ljmp
inc
mov
ljmp
or
stos
adc
out
push
xchg
adc
pop
push
cmp
adc
imul
rcrl
ljmp
lods
cwtl
jo
cmpsl
xchg
paddsw
adcl
sbb
lret
lds
mov
xchg
imul
negb
dec
aas
stos
xchg
out
sbb
pop
inc
mov
inc
push
add
xchg
cld
cltd
aas
sbb
push
mov
loopne
out
cmp
mov
pop
je
xor
popf
test
fsubs
dec
add
lock
ljmp
test
roll
out
fidivs
and
pop
mov
frstor
sbb
adc
into
lahf
xchg
cli
sbb
mov
inc
test
rorb
in
jmp
xlat
dec
jo
aaa
imul
jle
jecxz
sbb
shll
pop
pop
stos
je
out
repnz
int3
stos
xchg
push
stc
push
scas
cwtl
bound
xchg
sub
jo
test
fldcw
pop
add
and
or
add
popa
daa
shr
ja
mov
xchg
inc
mov
push
jp
push
ret
lahf
sti
repz
sbbb
lods
jge
es
nop
shll
jle
cmp
lahf
add
push
icebp
jbe
cmp
addr16
rcll
sti
rclb
mov
in
pushf
adc
imul
xor
adc
mov
inc
or
pop
cmp
mov
insb
sub
jp
mov
push
movsl
test
cmp
inc
mov
mov
test
jbe
inc
dec
push
je
xor
lea
das
jae
mov
repnz
orb
and
add
mov
xor
xchg
add
daa
dec
add
inc
int
xchg
adc
lea
jns
pop
xor
mov
addb
inc
int
sbb
adc
push
cmp
inc
lret
sbb
arpl
inc
jl
fcmovu
std
jge
out
push
xchg
jb
mov
add
jnp
lods
pop
push
sub
xor
or
push
sub
and
push
cmpsl
daa
sub
test
loop
dec
fwait
xchg
add
in
loopne
jns
push
stos
jns
stc
xchg
mov
enter
popa
dec
negb
mov
popf
imul
outsl
sub
fistpl
cmpsl
xor
dec
push
push
push
sbb
dec
call
mov
bound
lahf
pop
xor
dec
cmp
fistpll
mov
int
inc
in
repz
divb
aam
dec
jno
lods
rcrb
xchg
scas
loope
aas
mov
out
mov
mov
frstor
pushl
scas
adc
into
push
inc
inc
sub
data16
xchg
loop
insl
push
and
inc
push
jp
cli
rolb
mov
mov
stc
stc
cmp
pop
test
rorl
addr16
fistpl
mov
pop
ret
mov
mov
fisubrs
leave
dec
jl
mov
in
or
sub
push
popa
in
data16
xchg
add
cmp
xor
adc
or
jns
mov
movsb
xlat
mov
cmp
pushf
aam
mov
xlat
les
fs
dec
adc
cld
insb
xchg
cmp
adc
nop
int
out
sbb
pop
aam
sub
mov
lock
xchg
sub
daa
push
pop
pushf
pop
or
cli
jb
mov
mov
iret
xorl
inc
les
cmp
aas
xchg
jge
jg
xchg
add
inc
inc
xor
cs
xchg
sbb
xchg
jae
sub
mov
push
add
inc
pop
sbb
xor
addr16
add
push
add
cmp
mov
insl
bound
out
and
sbb
insb
mov
mov
fwait
imul
popa
jo
or
int
push
xor
mov
jle
std
out
and
test
cmp
mov
loop
hlt
js
leave
mov
ret
lds
inc
mov
add
mov
aad
sbb
ror
movsl
clc
decl
jge
cltd
mov
test
cmp
out
fdivp
xor
sbb
repz
movsb
pop
xchg
loopne
mov
cltd
mov
divb
pxor
andl
not
sub
dec
das
rol
mov
sub
push
sbb
shlb
inc
or
jp
in
cmp
mov
imul
jle
cmp
push
sub
sub
dec
shrb
sbb
mov
jnp
xlat
loope
popa
or
hlt
push
cmc
sub
cmp
mov
lret
xchg
lret
test
std
xor
in
cmp
stc
push
mov
pusha
pop
pop
cmpsl
sub
repz
mov
jp
aas
in
repnz
or
cmp
jge
daa
adc
adc
xchg
dec
cmp
movsb
sub
cld
rclb
nop
sbb
mov
push
negl
fists
out
shrl
add
loop
push
and
add
inc
sahf
pushf
and
push
popa
inc
lock
sub
mov
aaa
fcmovnb
mov
aam
cwtl
jae
jae
imull
dec
mov
test
loopne
rorb
inc
nop
dec
jnp
gs
and
sarl
mov
mov
cmp
lods
nop
pop
int
icebp
sub
int
addl
mov
pop
out
call
or
mov
inc
mov
xor
adc
xor
adcb
sub
int
inc
xchg
pop
push
out
mov
sbb
dec
lret
xchg
lret
repnz
cmp
lock
testl
xor
sub
insl
pop
out
xchg
xor
movsl
push
test
cmp
cmpsb
ret
mov
lea
adc
inc
add
pop
xor
ud2
sbb
xchg
and
lretw
ret
je
lods
sbb
and
std
popa
popa
es
out
pop
jne
test
pop
inc
xchg
mov
ret
sbb
lock
out
push
roll
outsb
sub
hlt
add
xchg
sbb
inc
ds
pop
or
stos
fs
and
or
aad
push
mov
jmp
cli
xchg
test
test
ljmp
flds
icebp
je
pop
add
int3
lods
mov
ja
xor
dec
es
push
ret
scas
sbb
shlb
mov
movsl
jno
mov
pop
ret
sbb
ds
mov
or
adc
loope
mov
xadd
in
lock
xchg
xlat
into
or
adc
or
pop
pop
ret
cwtl
cli
sub
inc
dec
adc
fisttps
fisubl
xchg
push
inc
pop
or
push
xor
out
inc
jmp
movsl
subl
adc
aas
stos
ret
add
push
call
push
jge
mov
ja
out
dec
loop
mov
shlb
repz
imul
xchg
sti
ljmp
sar
out
rcrb
xchg
cmp
scas
inc
or
repnz
icebp
jae
xchg
aad
adc
aam
sbb
fsubrl
push
stos
sub
mov
adc
mov
xlat
sbb
inc
jp
xchg
or
cmp
and
mov
mov
xor
data16
stos
dec
clc
add
dec
push
mov
testb
jl
repz
rep
mov
jge
sub
xchg
and
xchg
bound
aas
aam
mov
inc
lret
inc
jmp
lods
adc
xor
iret
xrelease
ss
ja
add
dec
lret
push
test
xor
fildl
dec
movsb
sahf
jg
cli
and
inc
jno
popa
out
ret
xchg
cmp
divb
test
test
pop
in
xor
adc
daa
pushl
outsl
loope
xor
push
xchg
filds
sahf
fcmovnb
sbb
nop
adc
cld
aam
sbb
out
lds
je
divb
fisubrl
cltd
fistps
nop
mov
faddl
mov
cltd
stos
mov
mov
mov
push
adc
loopne
stos
push
stos
testb
pop
xchg
jmp
jno
fistpll
in
push
cld
dec
jmp
stos
setno
sbb
xor
jl
mov
sbb
test
ret
popa
or
or
xchg
jno
and
cmp
or
add
pusha
ffreep
mov
fs
mov
pop
pop
lods
inc
xlat
adc
push
out
xor
roll
pushf
inc
dec
cmc
xchg
jne
mov
call
sub
jae
sub
incl
xchg
int3
into
js
jge
dec
or
pop
in
xor
sbb
mov
mov
cmp
pop
jnp
inc
les
mov
inc
add
scas
cld
sti
dec
cmp
and
push
shll
sbbl
fldenv
dec
fs
int3
sub
leave
add
inc
lods
push
mov
or
outsl
ljmp
lcall
mov
and
add
andb
movsl
cmpsb
sti
imul
call
adc
and
and
rorl
mov
push
nop
mov
shl
call
xchg
pop
mov
sbb
mov
movsl
pop
xor
mov
inc
push
repz
sbb
push
jo
or
cmpsl
stos
lahf
popf
jnp
jle
imul
popa
aas
inc
daa
cli
repz
sub
mov
pop
sbb
jp
inc
mov
mov
repnz
push
sbb
bound
test
xchg
push
lcall
push
repnz
xor
cs
jne
in
push
mov
jecxz
movsb
sub
xchg
arpl
cltd
push
push
ja
das
subl
adc
sarb
jno
jno
jno
int3
test
das
xlat
sbb
icebp
mov
xor
cmp
push
or
sub
and
lock
mov
pusha
xor
mov
add
int
push
sbb
and
sarl
nop
cmp
push
xchg
testb
ficoml
jbe
jno
getsec
in
pop
inc
cmp
ret
mov
or
gs
pop
in
out
pop
xchg
outsb
sbb
pushf
xchg
orl
fnsave
push
stc
and
inc
ja
les
in
sahf
lret
push
in
lock
mov
push
nop
in
cmpsb
mov
out
mov
push
and
dec
bound
out
inc
movsb
iret
fmuls
vandps
iret
mov
outsl
pop
shll
or
adc
mov
jge
push
jmp
mov
fisubrl
pop
addl
out
into
pop
sub
addr16
adc
sub
repz
pop
or
or
jns
ljmp
xor
mov
inc
push
fistl
out
mov
test
mov
push
ret
cmp
sti
ljmp
filds
pusha
sbb
xor
fwait
adc
sti
scas
xchg
imul
jns
mov
lahf
or
mov
scas
test
pushf
movsl
sbb
mov
scas
dec
cwtl
sub
lds
mov
mov
mov
dec
mov
imul
sub
mov
inc
outsl
inc
pop
outsb
es
icebp
dec
mov
and
and
fldt
jno
dec
fdivrs
jns
inc
mov
xchg
sub
js
movsb
sub
popa
sub
inc
std
lods
mov
adc
dec
insb
adc
or
dec
imul
test
xor
dec
xchg
sub
push
test
ljmp
push
adc
shll
push
dec
or
fucomi
xchg
outsb
addr16
xchg
mov
mov
adc
stos
test
clc
cmc
sbb
lds
inc
lock
jb
mov
cmc
fbld
mov
jl
shrl
ret
movsl
in
jmp
sub
in
cwtl
dec
orl
pop
adc
mov
or
cltd
lcall
mov
cmpsl
jl
cmp
or
not
call
mov
jae
push
lahf
sub
sub
gs
mov
or
mov
mov
hlt
pop
scas
mov
movsl
inc
push
inc
rol
dec
and
pop
xor
ror
dec
imul
mov
add
shll
shr
bnd
push
push
push
cld
jae
rorb
call
and
js
pop
roll
dec
cmp
cmp
insb
fdivrs
pop
psubd
test
xor
les
jg
xor
out
or
out
cmc
or
into
movsb
pop
xor
jae
mov
mov
add
adc
xor
mov
mov
push
xchg
xor
xor
pop
pop
jb
out
dec
cmp
adc
ret
pop
dec
inc
xor
sub
or
arpl
mov
xor
pop
fdivrl
jge
adc
imul
mov
inc
adc
das
lods
sbb
sbb
jl
pop
rcr
mov
pop
repnz
pusha
mov
mov
inc
xor
mov
add
adc
sbb
ljmp
pop
lock
rolb
imul
test
push
jp
inc
pop
mov
das
mov
push
and
dec
pop
pop
bound
orb
stc
ss
and
lods
dec
push
mov
inc
shll
mov
push
adcl
mov
movzwl
test
xor
das
push
dec
jns
insb
mov
ja
mov
enter
out
cwtl
pop
push
popa
jno
ds
push
jo
xchg
add
icebp
xchg
jmp
imul
pushf
lcall
mov
rorb
bound
and
cmp
mov
inc
xchg
dec
scas
aas
sub
nop
loop
insl
call
sub
add
sub
test
sbb
scas
pusha
xor
aas
and
sub
xchg
rcll
pop
outsb
int3
insl
call
xlat
mov
aas
scas
leave
sub
mov
imul
xchg
cmp
push
jns
push
test
stos
pop
and
and
shrl
movsl
jp
aam
push
out
cmpb
cmp
inc
bound
push
cltd
inc
mov
fwait
cld
mov
xor
mov
mov
pop
clc
adc
fistl
and
subl
das
es
cmpsl
push
inc
cmp
mov
push
mov
pushl
test
movsl
inc
fs
fldcw
xchg
fldcw
cmp
movsbl
sbb
div
mov
jp
out
loope
imul
dec
pop
and
push
or
jb
es
imull
mov
sbb
fimull
xchg
and
push
mov
lods
test
push
ret
cmp
dec
mov
jb
sub
aad
and
mov
cwtl
mov
sbb
sub
mov
arpl
test
cmpsl
xchg
scas
shlb
int
xor
fs
roll
xchg
addb
adc
fildll
dec
sub
push
xor
cmpsb
xchg
out
xchg
addr16
aam
out
shlb
push
xor
mov
push
daa
int
push
sbb
fisubs
jecxz
adc
cmp
xchg
out
shrl
or
stos
movsb
sbb
sub
jl
lret
out
pop
rolb
fdivrs
xor
in
push
xor
ja
sub
sbb
into
and
ret
repnz
sti
fadds
nop
adc
test
ljmp
xchg
test
dec
rolb
adc
cmp
lret
out
mulb
sahf
jle
je
push
popa
or
lods
jo
or
mov
es
ret
sahf
sub
dec
jns
and
xchg
jbe
rcl
or
sub
xchg
les
add
ret
xchg
inc
add
imul
iret
pop
dec
sub
adc
lret
movsl
les
mov
scas
jno
aas
and
jmp
push
xor
mov
mov
bound
test
gs
hlt
mov
pop
outsb
sbb
aas
loope
icebp
in
cmpsl
dec
pop
jo
std
scas
lcall
std
pushf
lcall
insb
pop
xchg
subl
in
mov
stos
cltd
or
sarl
mov
pop
int3
fucomip
mov
roll
or
pop
inc
lea
cltd
scas
test
jb
and
leave
and
in
shlb
or
mov
out
fnsave
outsb
enter
lret
pop
das
adc
mov
sub
outsb
fucompp
nop
adc
nop
stos
mov
xchg
movsl
aaa
cwtl
push
xchg
lahf
outsl
inc
fyl2x
dec
rolb
stos
fdivl
push
and
stos
xor
sbb
add
push
mov
lock
jp
rcrl
outsl
inc
lcall
push
jmp
into
lods
out
add
jns
push
or
movsb
xor
or
scas
test
add
es
enter
mov
cmp
loop
fcmovbe
stos
jl
push
inc
aaa
push
xor
aaa
popa
cmc
shl
ret
fdiv
lods
jo
push
mov
xchg
ret
sbb
test
sbb
dec
jbe
ljmp
cmp
pop
jbe
aad
dec
cmp
inc
sub
push
inc
pop
movsb
dec
push
sub
or
mov
into
out
addr16
clc
fwait
into
jnp
gs
cmc
fidivl
xchg
sbb
in
push
mov
loop
cmpsl
jnp
xorl
dec
cwtl
add
mov
sbb
nop
loop
fsts
std
andl
daa
cmp
mov
js
leave
mov
jmp
jg
sub
or
test
imul
test
popa
pushf
ret
push
stos
jns
xchg
xor
adc
shlb
and
sti
inc
mov
int3
dec
ss
ja
adc
inc
das
arpl
fwait
push
movsl
inc
dec
xchg
cs
sub
ja,pn
cmc
pop
xchg
or
out
sub
push
call
adc
push
daa
stc
ds
in
sti
add
xchg
mov
repnz
sub
dec
imul
int
into
mov
mov
jnp
les
jno
push
cmp
pushf
and
dec
mov
cwtl
fsubs
lcall
add
dec
ljmp
add
push
rcl
xchg
xlat
stc
inc
es
shrl
jle
sbbb
ret
mov
fnstsw
jnp
sbb
xor
xor
inc
ja
sbb
cmpsl
add
clc
xchg
sbb
pop
jno
es
sub
adc
and
and
fcomps
mov
mov
push
xchg
jge
cmc
sbb
lods
jmp
aad
xor
add
mov
lods
push
mov
add
fdivrl
xchg
cmp
push
push
xchg
sub
out
out
jle
add
movsl
sub
push
fidivrs
add
adc
adc
clc
inc
xchg
mov
push
mov
jns
sbbb
aam
aam
test
cmp
jg
push
shll
outsl
outsl
outsb
les
mov
lret
inc
adc
in
mov
cmp
xor
xor
sub
leave
jge
out
aaa
and
aad
out
ficompl
mov
mov
cmp
aam
outsb
fildll
dec
mov
and
js
inc
lock
xor
addl
popf
and
das
addb
or
and
roll
add
sbb
cltd
cmp
jle
pop
mov
das
icebp
in
pop
mov
lcall
arpl
pop
push
gs
mov
repnz
inc
xchg
xor
xchg
xor
ror
movsl
mov
mov
inc
xchg
je
xor
ljmp
dec
adc
inc
ljmp
sbb
mov
cmpsb
cmp
pop
js
jbe
sti
pop
movsl
xor
pop
lock
dec
mov
idivb
cli
aad
shlb
push
out
jecxz
sub
nopl
xchg
lcall
cwtl
cmp
lahf
in
sub
push
dec
popa
fs
popa
lods
dec
shr
mov
and
add
xchg
dec
jg
jno
or
push
sahf
adc
sti
loop
sub
push
test
or
icebp
lret
pop
push
push
rcrb
insb
out
push
outsl
mov
hlt
mov
sub
xor
mov
mov
mov
leave
cmp
jb
lock
into
jnp
leave
daa
test
mov
adc
mov
adc
ret
inc
idivl
push
xchg
lea
cmp
scas
mov
incb
mov
jbe
stos
mov
ficomps
xchg
aaa
dec
mov
dec
sbb
in
or
push
xorb
xchg
inc
scas
and
outsl
jno
xorb
cmpl
mov
aad
lahf
pop
inc
xchg
adc
xchg
movsb
pop
cmpsl
inc
pop
dec
dec
popf
dec
mov
mov
leave
xor
shrb
pop
and
pusha
out
loope
xchg
mov
push
jbe
cmc
gs
inc
cmc
shll
add
adc
xor
js
lret
cmc
sub
jle
xor
xor
xor
adc
inc
push
sub
aad
or
nop
cmp
push
or
mov
xchg
jae
or
subb
cwtl
push
stc
ret
and
popa
mov
push
mov
dec
ss
adcl
add
pop
test
push
sub
test
icebp
insb
fisttpl
movsl
orb
mov
jg
popa
jns
sub
push
push
std
ficompl
and
int
add
mov
dec
cmp
pop
xor
push
pusha
xor
push
and
jl
xchg
fucomp
clc
ret
iret
lea
sbb
iret
cmp
js
pop
mov
jo
stos
sbb
pop
dec
push
imul
lods
jae
xlat
cmp
dec
stc
inc
push
adc
jmp
pop
or
fdivl
stc
add
test
cmp
dec
orb
jb
stc
sub
out
addb
sub
pop
sub
loop
sbb
dec
xchg
cs
pushf
popa
xor
mov
imul
inc
aaa
mov
daa
dec
int
aaa
cmp
push
xchg
shlb
int3
or
xor
fs
push
mov
mov
jae
mov
lret
jne
bnd
sahf
sub
call
call
popa
gs
in
in
add
pop
xor
aas
or
movsb
xchg
add
or
jbe
add
stos
test
push
icebp
movsl
mov
and
xchg
mov
xchg
shlb
test
imul
lahf
cmp
sbb
xor
dec
loop
sbb
pop
in
aaa
sub
loope
adc
xlat
das
adc
xlat
or
mov
mov
mov
pop
and
sbb
aaa
xchg
adc
sahf
jp,pt
add
mov
hlt
lret
push
sub
sbb
cmp
and
pop
dec
add
push
pop
mov
out
aaa
rcrb
out
pop
test
jl
add
fs
sbb
lock
bnd
xchg
outsl
sub
mov
and
jl
in
sub
jge
dec
mov
ret
out
and
mov
iret
repz
xchg
mov
data16
dec
cwtl
inc
xchg
fdivrl
popf
int3
push
lret
in
mov
insb
jb
push
into
lods
sub
adc
push
dec
sbb
sbb
pop
mov
ficompl
pop
in
pop
pop
testb
fwait
rclb
pop
inc
adc
jno
inc
outsl
cltd
sub
mov
or
dec
nop
cltd
cld
insb
repnz
les
xor
loope
adc
loope
dec
lods
mov
pop
adcb
dec
cmp
and
xlat
bound
es
stos
out
repnz
mov
mov
mov
mov
hlt
or
xor
stc
out
fldenv
pop
xorb
call
les
iret
mov
inc
sbb
mov
lahf
or
mov
mov
push
or
ss
leave
scas
or
xor
jae
leave
pop
adc
add
cmp
jmp
mov
pop
imul
fisttpl
aas
adc
jnp
aas
jge
shlb
int
jmp
pusha
cmc
add
repz
inc
xor
insb
inc
dec
sub
nop
mov
outsl
and
jbe
xor
push
cmpsl
add
shr
test
repnz
ja
and
and
into
dec
add
decl
rcrb
jne
cmpsl
lods
mov
and
lods
sbb
es
int3
inc
arpl
outsl
inc
mov
mov
cmp
push
out
lods
mov
push
inc
lahf
pop
jb
shll
push
or
out
sub
ret
push
dec
sbb
push
push
xorl
imul
mov
pushf
xorl
jnp
out
push
aaa
repz
ret
xchg
lret
or
test
lods
lds
cli
scas
scas
int3
dec
pop
mov
repz
faddp
xchg
call
insl
adc
push
xor
push
into
cmc
iret
pop
andl
mull
xorb
push
add
jmp
repnz
lahf
dec
xor
pop
xor
pop
pusha
out
xchg
pop
ret
lcall
out
dec
test
xorl
shl
mov
pop
inc
rorl
insl
stos
aaa
xlat
in
icebp
addr16
push
jl
out
movsl
cmp
xor
sub
stc
mov
or
in
into
xchg
dec
and
xor
adc
jmp
adc
fimull
mov
jnp
add
mov
adc
sbb
cs
int3
push
ret
cmp
inc
ror
push
mov
test
cmpl
add
jp
psubb
jbe
js
test
out
xor
leave
test
gs
movsb
mov
mov
js
xchg
push
fcoms
out
mov
std
push
hlt
adc
out
mov
sub
ret
mov
stos
pop
lds
xchg
daa
jnp
adc
loopne
ret
mov
gs
les
adc
test
popf
ds
jecxz
pop
jne
xchg
jl
inc
dec
testl
and
push
inc
push
adc
stc
hlt
adcl
cmp
pop
push
jle
fs
dec
out
rcll
sbb
lock
insl
add
jbe
stc
or
ja
adc
inc
enter
cmpsl
xor
dec
mov
jecxz
aas
adc
iret
out
out
xor
xchg
xchg
xor
push
ret
xchg
mov
into
mov
bswap
insb
lods
xor
in
fwait
aam
adc
fildl
mov
arpl
ss
or
cwtl
adc
xor
jmp
mov
stos
pop
cld
sub
push
lret
push
mov
xchg
xor
aam
xchg
repz
out
daa
faddl
lock
mov
push
das
mov
roll
and
jge
mov
cmpsl
in
mov
ds
push
and
adc
lods
scas
inc
fcompl
mov
dec
xor
mov
std
int
js
dec
fwait
mov
push
push
out
movsl
rcl
dec
pop
fdivs
pop
rolb
xor
mov
xchg
cmpsb
cmpl
push
insb
loop
or
mov
and
fwait
jle
pop
xchg
sbb
dec
fcoms
jge
ret
fcoms
mov
xchg
cmpsb
pop
sub
fadds
outsl
outsl
lds
in
mov
xchg
loop
add
jno
subl
mov
test
sub
add
pop
or
push
xchg
mov
add
push
push
insl
xchg
xor
inc
add
xchg
sbb
std
mov
cmp
jns
jmp
jp
fsts
cmp
sub
popa
or
aas
jg
jl
and
dec
pop
lea
sbb
arpl
mov
lcall
push
inc
fidivrl
pushf
bound
lods
pop
pop
pop
push
stos
int
and
in
or
push
pushf
sbb
mov
dec
jg
sub
sti
std
or
jns
out
or
scas
add
shrl
call
mov
mov
push
enter
call
sub
sbb
mov
enter
punpcklbw
arpl
icebp
pop
jmp
jecxz
jae
stos
mov
imul
push
mov
dec
mov
pop
sub
insb
pop
mov
mov
pop
mov
add
out
inc
fidivrs
cmp
adc
mov
movsl
push
js
xor
jmp
into
addl
xor
cmp
inc
pop
mov
sbb
xchg
sub
jmp
leave
in
mov
pop
gs
test
mov
inc
sbb
add
jle
cli
jbe
loopne
or
sarl
push
lock
sbb
sar
jb
popa
loopne
sub
pop
loopne
das
das
pop
ja
push
in
inc
pop
pop
popa
loop
add
hlt
mov
scas
sub
enter
lods
xor
pusha
xor
mov
cmpsl
pop
lds
or
icebp
test
pop
test
mov
xchg
cmp
push
leave
test
stos
cmp
movsl
push
jg
mov
cmpsl
cld
mov
rcrl
sbb
or
add
push
add
frstor
jl
lret
fistl
add
aam
jne
loope
sbb
cmc
add
sub
in
out
pushf
xor
ret
inc
jbe
or
movsl
stos
daa
mov
ficompl
pop
xchg
jae
pushf
repz
fistl
cmp
xchg
sbb
mov
insb
ja
mov
xchg
shrb
dec
mov
xchg
mov
jae
cmp
sbb
push
adc
mov
into
or
mov
xchg
add
loope
dec
adc
popa
add
mov
ja
or
jb
jne
lcall
adc
or
fs
xor
cmp
inc
or
ficompl
scas
push
pop
adc
push
push
insb
test
push
mov
fstps
je
sahf
dec
inc
cmp
xchg
push
pop
add
sbb
adc
cmc
insb
hlt
aaa
jns
jge
xorb
cmpsl
sub
jns
xchg
js
lds
cmp
jo,pt
add
and
test
and
and
or
mov
cmpsb
xor
and
mov
call
fs
scas
inc
stc
jg
setbe
test
das
and
sbb
adc
cmp
jl
insb
inc
xor
or
push
add
add
xor
stos
push
clc
push
mov
push
lock
cmp
cmpsb
adc
sbb
dec
or
sub
shll
lahf
loope
and
mov
jnp
jl
jg
sbb
loopne
jne
popf
pop
pop
sub
movsb
out
pop
xchg
and
imul
fmull
inc
adc
pop
ficomps
add
lea
inc
stos
jg
mov
cmpsb
cmp
mov
jns
iret
fwait
jno
cmpsb
and
or
xor
push
jno
mov
ret
mov
push
jae
shrl
sub
sub
mov
push
pop
add
inc
hlt
jno
push
cmp
mov
jno
jno
inc
mov
and
nop
test
cltd
add
push
lret
enter
jp
dec
jae
xchg
fcmovnb
push
adc
inc
pop
es
loopne
adc
filds
inc
and
mov
insb
mov
jg
cvtdq2ps
fdivrl
xlat
add
push
jae
dec
fidivrl
add
jmp
xor
sub
loop
jle
dec
stc
hlt
cs
mov
fisttpll
shll
xlat
push
rolb
xchg
repnz
out
enter
stos
xor
push
aad
testb
push
jae
cmp
inc
outsb
fimuls
daa
je
or
mov
mov
lock
movb
or
mov
jo
cmpsb
dec
cmpsl
mov
sbb
repnz
dec
xchg
cmp
mov
and
jl
call
lock
add
leave
cmpsb
mov
clc
pop
add
adc
sbb
sti
test
cmpsb
add
sub
pop
and
add
dec
fwait
push
aaa
mov
adc
push
mov
cmc
dec
notl
cltd
lahf
gs
cmp
xchg
es
cltd
inc
pop
sahf
fcmovnb
xor
mov
fimuls
cmp
xor
stos
fsubs
mov
or
push
sbb
cmp
aas
pop
call
inc
fcompl
les
adc
cli
inc
and
outsb
xor
incb
jae
bound
fwait
push
jne
mov
xor
or
cmpsb
mov
cmp
out
push
rorb
or
adc
cmpl
push
sbb
and
cmp
cmp
jo
sbb
fidivs
xchg
int
pminsw
sar
adc
push
fsubrs
aad
cmp
jecxz
or
repz
jecxz
cmp
push
add
dec
and
jo
push
or
rcll
jae
clc
scas
xlat
mov
adc
xor
dec
inc
in
add
scas
aas
repz
sbb
fs
xor
out
dec
shll
cltd
and
lcall
mov
or
push
inc
or
lret
mov
or
lcall
mov
mov
shr
es
cmp
call
adc
imul
and
push
cmp
out
pop
int3
outsb
enter
in
sbb
scas
insl
icebp
sub
push
out
jae
and
mov
lcall
push
rolb
pop
adc
cmp
pop
out
shl
mov
pop
rol
cmc
pop
or
pop
fists
push
lahf
lock
mov
or
push
fsubl
dec
jmp
mov
pop
shll
lret
jae
sbb
adc
in
mov
and
sbb
push
xor
mov
adc
push
add
pop
repz
out
or
sub
jmp
sub
xchg
xlat
sub
ds
jnp
gs
xchg
addr16
icebp
adcl
je
out
outsw
push
pop
adc
bound
push
cs
pop
pop
ret
add
rcrl
jne
xlat
std
adc
insl
adcb
insb
pop
clc
out
in
mov
js
int
mov
pop
xor
test
imul
adcb
or
cmp
and
ja
loopne
aas
mov
xor
mov
std
mov
imul
mov
push
mov
pop
pop
jne
cltd
mov
mov
mov
jae
xorl
xchg
cmpsl
inc
cs
lods
cmp
push
scas
cmp
pop
inc
out
dec
push
xor
mov
xor
test
shlb
mov
and
xchg
jno
aam
mov
mov
sub
xchg
xchg
sbb
in
hlt
shrl
inc
jb
push
loop
lret
les
add
sbb
stc
inc
dec
in
pop
dec
aad
fs
sub
popa
lds
dec
ljmp
cmp
outsl
xor
scas
inc
xor
pushf
cwtl
sar
adc
nop
dec
testb
push
stos
pop
sbb
lcall
cmpl
mov
int3
fdivrl
pop
mov
and
mov
std
mov
sbb
sbb
aam
scas
hlt
fwait
mov
imul
paddq
scas
inc
and
shrl
stos
dec
jae
scas
push
dec
sbb
es
inc
inc
dec
insb
fistpll
les
adc
mov
add
imul
mov
scas
sbb
jne
adc
inc
push
fsubrs
in
xor
aas
dec
pusha
sbb
test
xor
add
cltd
mov
aas
addb
mov
jb
icebp
cmpsl
data16
mov
and
lret
in
cwtl
test
xchg
add
xchg
cmp
mov
push
xchg
mov
mov
ds
adc
mov
cltd
xor
add
jnp
in
fistl
xor
pop
mov
jne
popa
pop
in
or
xchg
mov
sbb
loope
scas
nop
xchg
mov
adc
test
rolb
jbe
push
scas
ret
das
push
push
and
pop
repz
fsubl
or
adc
push
adc
scas
test
mov
lahf
ja
int
repz
inc
das
das
popf
jl
enter
pop
mov
jge
sarl
mov
sahf
out
xchg
dec
cmp
test
jbe
lods
cmp
inc
sub
sbbl
dec
inc
cmpsb
push
adc
daa
movsb
dec
cmpsl
loop
fistpll
repz
pop
or
fistpl
aas
push
outsb
and
scas
movsbl
mov
mov
fs
adc
in
push
jo
xor
into
cmpsl
jmp
data16
mov
mul
xor
inc
scas
mov
arpl
cmp
cmpsb
push
insl
shll
mov
jge
in
movsb
aad
and
push
out
sub
sub
adc
lds
push
pop
data16
bound
dec
mov
gs
or
mov
int3
gs
das
scas
jo
jge
push
xchg
loopne
xor
stos
and
mov
mov
jp
lahf
fwait
aad
dec
xor
imul
mov
int3
cmc
mov
sti
mov
pop
dec
sub
jmp
js
sub
pusha
sub
jg
inc
leave
add
int
jb
jo
push
iret
ret
lods
inc
mov
stos
lds
test
sub
push
push
inc
fbstp
aam
push
xor
and
sbb
and
mov
into
sbb
stos
adc
xchg
dec
hlt
mov
insb
dec
pop
xchg
cmc
in
mov
or
sbb
mov
push
add
outsl
add
push
xchg
mov
xor
idiv
pusha
push
dec
fists
nop
sahf
out
imul
push
out
arpl
ret
sub
out
shl
enter
push
adc
cltd
or
stc
je
loope
call
sbb
out
and
lock
mov
repz
push
cs
cli
dec
outsl
mov
andb
repnz
pop
and
aam
dec
stos
rcrb
or
fs
or
jg
add
sarl
xor
inc
fildl
int
mov
sub
cli
adc
xor
int3
jne
inc
test
mov
dec
mov
jecxz
and
mov
ljmp
fwait
cwtl
jp
and
xchg
inc
nop
fistps
outsl
stos
leave
dec
sbbb
dec
xchg
or
xor
dec
cli
call
mov
mov
dec
ret
ds
in
mov
inc
mov
pusha
pop
adc
jp
inc
imul
push
cmpsl
popa
sbb
cmp
and
andl
cltd
push
insb
ljmp
negb
mov
popf
test
pop
sub
ds
in
push
or
push
sub
and
add
push
and
lea
sbb
sub
pop
add
icebp
dec
call
aad
out
cmp
into
sbb
popa
cwtl
mov
cmpsl
pusha
push
out
jge
stos
add
jae
int3
stc
push
adc
call
mov
negb
xchg
lock
imul
mov
mov
xor
pop
push
shrb
mov
mov
ret
aam
xor
xchg
inc
subb
jo
dec
ror
icebp
or
mov
pop
sub
adc
lea
and
inc
sbb
lods
ljmp
pusha
push
imul
icebp
aaa
inc
sub
std
mov
xchg
loop
js
jbe
pop
pop
jne
lcall
out
lds
jb
das
push
icebp
inc
ds
imull
sbb
add
sbb
std
lahf
stos
rclb
sbb
sahf
cmp
and
and
push
xor
or
mov
dec
xchg
rcrb
cmp
push
xchg
sahf
loope
xor
push
lcall
xor
insl
mov
std
lods
jmp
cmpsb
mov
lcall
daa
fadds
dec
mov
sub
add
xor
xlat
enter
ljmp
stos
sub
cmpl
sahf
cmp
repz
outsl
nop
ficompl
ret
push
inc
stos
dec
push
jo
and
cmp
add
dec
cltd
dec
sbb
stos
cmp
dec
shlb
xchg
jnp
mov
jne
jns
inc
cmp
filds
pop
dec
sub
bound
cmpsb
int
pop
pop
sbb
push
out
push
aas
jo
jg
mov
pop
lret
xchg
loope
pavgw
inc
fadds
or
adc
cmp
and
jbe
mov
iret
fsubl
aaa
mov
push
mov
lret
jne
push
fs
cs
rcrb
in
insb
jle
mov
mov
mov
dec
add
cmp
dec
push
push
and
iret
jns
mov
xchg
imul
aam
popf
dec
in
stos
pop
stos
les
dec
xchg
jbe
sbb
outsb
cmp
adc
stos
xchg
jecxz
dec
jge
pusha
dec
dec
or
pop
inc
dec
ljmp
out
jae
cwtl
sub
cli
aad
pop
andl
dec
ljmp
xchg
mov
pop
mov
arpl
in
jmp
adc
repz
lret
sarb
jbe
mov
jp
ret
inc
ret
bound
xchg
pop
mov
daa
push
ret
cmc
inc
popf
adc
stc
lcall
repnz
inc
in
inc
xchg
lret
test
mov
test
test
fs
sub
aad
push
inc
sbb
jb,pn
pop
mov
fldcw
lds
adc
es
and
js
aad
push
inc
ret
push
xchg
out
add
testl
xchg
cli
ret
pop
xchg
nop
cmpsb
dec
jne
cmc
in
adc
push
and
push
rcrb
test
insb
lret
popf
out
popa
pop
cs
pushf
addl
xchg
sbbl
int3
push
loopne
imul
adc
jl
sub
and
push
sbb
cmp
movsb
jns
es
sbb
out
sbb
cmp
sub
and
scas
js
mov
ljmp
mov
jno
push
xor
inc
mov
xchg
xor
clc
xchg
push
test
jno
pop
jnp
xor
and
cmpb
or
cmp
js
fdivrl
jp
mov
xchg
jno
popf
sbb
push
ds
pop
stos
sbbb
xchg
jo
jno
lea
xchg
push
leave
sbb
arpl
lret
xchg
xchg
sbb
stos
je
int
inc
cmpsb
addr16
mov
pop
fidivrs
iret
dec
xchg
je
pop
cmp
add
add
mov
fsts
xchg
mov
pop
mov
xchg
and
pop
cmpl
cltd
inc
mov
mov
mov
ficomps
dec
inc
cs
lahf
mov
pop
outsb
out
in
adc
mov
mov
cmp
int3
push
jg
and
popf
js
jecxz
lds
repz
je
sarl
adc
aad
cmp
and
loope
cmp
das
mov
sub
pusha
inc
add
xor
push
daa
in
push
js
pop
sahf
enter
fiaddl
inc
bnd
ret
adcl
testb
push
popf
mov
repz
jnp
fcomi
inc
or
dec
pop
mov
add
push
xor
mov
sti
sar
cmpsb
jl
jae
sub
test
std
out
adc
fldenv
stos
mov
add
repz
popf
xchg
outsl
sub
add
leave
lock
and
dec
lea
pop
lcall
add
sbb
lock
adc
fcoms
or
sub
out
mov
popf
mov
push
jle
fdivl
addb
xchg
add
imul
dec
dec
out
das
dec
scas
in
and
sbb
add
rorb
loop
mov
aam
icebp
lods
mov
mov
cmpsl
test
xlat
repz
add
das
xchg
lcall
in
push
cmp
pop
pop
mov
mov
push
push
jns
jno
xor
aas
jne
mov
nop
add
out
mov
mov
enter
adc
ret
or
stos
data16
loop
push
mov
data16
loop
repz
cli
outsl
int
rolb
xchg
push
gs
lods
mov
je
lock
add
movsb
mov
push
fwait
test
xchg
mov
mov
add
call
lret
inc
mov
lea
jno
mov
js
inc
adc
bound
js
xchg
push
xor
dec
mov
cwtl
pop
sti
rol
mov
test
lahf
imul
sbb
sbb
mov
cmp
add
pop
push
rcr
popa
daa
mov
adc
mov
mov
xlat
mov
cmpsb
pop
dec
push
or
rorb
sub
mov
fldcw
icebp
fwait
in
pop
lds
xchg
aad
pop
mov
enter
sbb
out
imul
mov
xchg
inc
jo
mov
add
cmp
sbb
fs
sbb
mov
push
ja
test
or
sahf
shlb
xor
add
ffreep
repz
cmp
rol
out
loop
sbb
adc
aad
out
dec
and
jae
mov
dec
gs
cli
fiaddl
jg
movsb
dec
and
mov
jmp
test
jle
lea
pop
jge
shr
sbb
sub
test
sub
test
idivb
xchg
lret
movaps
adc
repnz
mov
xchg
call
fmuls
cmp
ljmp
inc
pop
fstp
xchg
addl
lods
lock
movsl
pusha
rcl
rorl
jg
adc
outsl
jmp
js
push
int
fdivrp
addr16
or
lahf
xchg
xchg
push
repz
and
pop
sub
loopne
xchg
stc
xor
pop
sarl
xchg
mov
mov
and
ret
pusha
rol
ds
sahf
scas
out
out
lods
add
testl
lea
sub
imul
lcall
mov
scas
mov
mov
jg
movzbl
push
sbb
mov
mov
pop
add
lret
daa
cs
into
fbld
call
out
call
or
lahf
cmp
or
jle
push
les
push
inc
scas
xchg
mov
jle
jae
out
mov
pop
pop
jmp
ljmp
addr16
sub
fdivrl
cmp
add
jg
scas
and
xor
pop
out
cmp
and
in
lds
pop
test
xor
mov
movsl
add
cwtl
in
int
stos
mov
outsl
sbb
adc
sbb
test
inc
dec
es
adc
sbb
in
xor
and
pop
sbb
mov
xor
fbstp
sahf
dec
jo
fisubrs
hlt
shlb
jne
mov
das
ret
dec
mov
pop
xchg
icebp
hlt
add
xchg
xchg
xchg
fimull
and
hlt
insl
data16
dec
mov
shll
xchg
mov
out
jp
lret
pop
and
repz
pop
pop
lret
mov
jmp
repz
pushf
mov
fcomps
dec
fnstcw
cmp
js
sub
push
sbb
cmp
lods
inc
fildll
jmp
in
push
lock
outsb
adc
jmp
lret
mov
push
pop
dec
stc
pop
jo
mov
pop
push
mov
ljmp
push
mov
pop
pand
cld
fdivr
ss
and
mov
xlat
dec
adc
sti
push
pop
add
or
xchg
jmp
dec
push
add
enter
jmp
std
popf
pop
test
addl
sbb
inc
dec
adc
xchg
or
shll
mov
cld
jbe
arpl
cmp
pop
mov
sub
or
jle
xchg
and
mov
iret
es
int
xchg
leave
cld
ss
sub
cmp
sub
push
scas
xchg
data16
fbstp
aas
sub
addb
xor
lods
das
adc
mov
sub
add
std
andl
jmp
cmp
adc
popa
imul
mov
xor
movb
jne
sub
mov
jecxz
repz
scas
sub
xor
add
ret
cmovbe
fisubrl
mov
mov
or
rcrb
push
push
out
cmp
pop
push
in
loopne
or
aad
punpckldq
fcmovnb
iret
pushf
cld
mov
jb
mov
push
or
lret
add
std
mov
jle
xor
push
pop
mov
iret
jns
jmp
xchg
je
aaa
jo
scas
mov
dec
and
lret
outsl
in
cmp
std
popa
std
out
scas
lret
mov
and
adc
mov
fisubl
add
out
push
vphaddwd
dec
jne
call
out
adc
mov
lret
push
pop
mov
test
adc
ret
sub
je
jbe
aas
xchg
push
or
xchg
inc
pop
lret
test
sti
and
mov
inc
push
lock
jg
pop
jl
jge
push
or
fnstenv
inc
rolb
js
mov
aad
xor
insl
sbb
scas
and
mov
js
loopne
fs
mov
es
add
repnz
xchg
xchg
stc
lods
jge
adc
cmp
ds
ljmp
call
add
lds
gs
loop
pop
sbb
push
dec
xor
pop
xchg
cmp
test
mov
xor
sbb
pop
mov
mov
mov
fstps
pop
pop
cmp
sbb
test
adc
shr
ss
lds
mov
imul
add
cmc
mov
in
aad
insl
cmp
aaa
sbb
popa
cli
and
dec
ss
imul
dec
mov
je
insb
aas
fildl
fst
mov
push
dec
sbb
sub
int3
out
daa
mov
sbb
leave
outsl
sub
jecxz
adc
scas
pop
mov
dec
jecxz
xchg
lret
inc
mov
fisttpll
mov
push
out
mov
mov
pop
leave
test
or
fwait
ss
arpl
push
dec
jge
cmpsb
lcall
cld
xor
imulb
and
inc
in
adc
fs
fisttpll
mov
xchg
mov
fstpl
dec
out
out
sub
jp
xlat
notl
fadd
cmp
pop
push
roll
xchg
and
adc
dec
and
push
int
icebp
jge
mov
or
roll
mov
pusha
xor
ds
push
push
jge
fwait
outsl
enter
iret
std
popf
push
push
pop
dec
sub
imul
sub
mov
inc
sbb
outsl
sbb
movsb
pop
imul
or
nop
cmpsb
mov
testl
sub
cmp
inc
dec
adc
repz
sbb
cld
idiv
cs
sub
dec
jb
dec
aas
data16
sub
js
pusha
test
movsl
xor
ret
in
js
enter
sbb
cmp
out
ljmp
jp
xchg
das
jl
and
lods
test
mov
mov
lods
fldcw
sbb
mov
test
pop
push
gs
adc
rol
pop
jmp
xchg
int
clc
pop
jge
mov
mov
push
adc
stc
cltd
faddl
out
cmp
outsb
in
push
sub
aam
mov
jge
mov
inc
fsubs
test
ret
pop
sarb
and
xor
je
or
jo
cmpsl
jbe
ret
xchg
jne
sti
xor
shufps
scas
jg
pop
loope
nop
or
push
mov
mov
movsl
adc
jno
out
or
iret
in
xchg
inc
jmp
inc
add
sbb
enter
ret
loopne
aas
mov
fs
insl
xor
mov
dec
mov
les
xchg
push
out
imul
or
push
shlb
and
mov
mov
clc
push
mov
cmp
pop
inc
jno
add
or
dec
roll
mov
sub
cmc
in
cmp
push
fldcw
sub
sbb
fnstenv
repz
in
xor
lcall
mov
ret
es
push
xchg
add
sub
sub
mov
xchg
fildl
lods
push
das
fidivl
push
movsb
shll
dec
cmp
enter
push
mov
test
inc
xor
sbb
pop
mov
push
xchg
push
int
xchg
adc
and
lret
jae
inc
xchg
pusha
sbb
mov
jmp
test
mov
das
cmp
push
push
in
and
loopne
add
les
add
push
lahf
adc
nop
cmpsb
nop
icebp
jmp
cld
cmp
mov
enter
mov
pop
nop
pop
ja
sbb
in
mov
or
xchg
iret
daa
fistpl
ret
call
test
js
inc
jg
mov
jnp
lock
lcallw
pop
cmp
in
outsl
out
ja
sbb
mov
sahf
adc
xlat
pusha
fnstcw
div
inc
mov
xlat
xor
adc
mov
sbb
outsb
adcl
sbb
push
sub
pop
sub
inc
push
dec
subl
pop
inc
sbb
sti
xchg
test
inc
or
dec
mov
inc
mov
or
sub
cmpsb
inc
out
xor
add
xchg
mov
sarb
dec
pop
test
call
jb
sbb
ss
test
call
lahf
dec
sub
outsl
dec
push
inc
subl
xor
jbe
inc
mov
xchg
jns
mov
popf
mov
lds
lahf
pusha
iret
push
xchg
fs
push
xor
dec
sub
lea
mull
xchg
pop
mov
mov
sub
xchg
sbb
pushf
mov
jge
aam
ror
or
data16
jno
pusha
push
out
insl
push
pop
pop
adc
push
imul
in
inc
test
dec
mov
rcl
xchg
repnz
loopne
imul
or
call
xchg
je
out
stos
ds
dec
push
lahf
call
inc
xor
dec
in
mov
add
enter
js
xor
mov
mov
xlat
cmpsb
or
js
xchg
or
fdivrl
int
mov
dec
idiv
cmpsl
fistps
mov
cmpsb
fistpll
cmp
cmp
adc
mov
or
int3
sbb
ljmp
and
je
xchg
dec
imul
mov
xorl
mov
cmp
xor
jl
or
fimull
or
inc
lock
sub
movsb
mov
cmpsb
pop
call
idivb
xor
rorb
in
ja
dec
mov
pushl
xor
sbb
bound
mov
dec
push
push
int
cmp
cmpsl
inc
mov
fnsave
mov
lock
cmp
push
xchg
cmp
mov
dec
adc
cmpsb
cmpl
mov
addr16
or
pop
hlt
mov
out
push
adc
jl
shrl
jb
ja
lret
js
ds
dec
pusha
mov
fsts
insb
cmp
stos
jle
adc
in
inc
push
adc
pop
mov
sbb
push
sahf
sbb
or
add
push
cltd
mov
mov
sub
aas
rcrl
and
ficoml
aam
cwtl
mov
js
repnz
jo
loopne
orb
xorb
pop
jo
fwait
push
fnstcw
es
xchg
jle
arpl
xor
inc
xchg
aad
in
xor
sbb
mov
sbb
pop
inc
xchg
push
or
adc
dec
aad
jl
fwait
xchg
cmp
arpl
cmp
mov
in
push
mul
cmpl
out
sub
and
or
andl
outsb
ja
adc
lcall
enter
lret
ret
je
test
mov
mov
add
inc
shl
xchg
cmp
jo
test
mov
add
rep
pushf
sbb
out
int
je
enter
into
mov
into
add
sbb
les
ds
into
mov
sar
scas
mov
scas
dec
push
push
mov
popa
jp
cmp
mov
hlt
outsl
inc
sub
int
icebp
clc
xchg
lret
cmp
sub
sub
test
push
sar
pushf
lcall
adc
jecxz
jae
fsubl
js
cmpsb
in
or
pushf
movl
adc
pop
mov
mov
sbb
add
mov
adc
and
pop
jns
pop
push
test
mov
lret
test
loope
out
inc
fidivrl
pushf
pusha
xchg
rcr
js
ror
andl
dec
xchg
stc
imul
xor
fldt
leave
in
pop
xchg
subb
dec
mov
enter
shrl
lret
dec
jmp
mov
fildl
or
fstl
add
arpl
xchg
test
repnz
add
popa
sbb
shll
das
xor
jge
inc
mov
bound
sbb
sbb
gs
loopne
hlt
shlb
jle
jns
jecxz
test
push
enter
sbb
icebp
pop
scas
daa
call
nop
mov
lods
adcb
sub
jae
push
sub
test
ljmp
adc
movsl
xor
out
testb
mov
jbe
inc
xchg
sub
inc
push
pop
out
insl
andl
mov
mov
scas
xlat
fidivl
pop
out
dec
sub
movsb
cmp
sahf
add
data16
push
push
out
pop
fsubrs
dec
xchg
sahf
imul
pushw
lahf
sub
aas
sub
jg
arpl
mov
pop
adc
loope
mov
mov
mov
xchg
js
sbb
nop
insb
inc
cmpsb
add
inc
xchg
mov
in
or
xor
pop
sbb
int
push
fwait
mov
adc
mov
push
mov
mov
cmc
jnp
inc
pop
cmp
fiadds
mov
lock
imulb
insb
sbb
imul
stos
ss
xor
subb
mov
out
xchg
jecxz
pusha
push
pop
jmp
dec
scas
scas
push
mov
cmc
or
fnstenv
fs
test
sahf
clc
jbe
mov
pop
add
lahf
cmpsl
and
sub
mov
inc
movsb
push
sbb
leave
cli
jmp
in
cli
das
jae
js
cli
test
mov
fistps
fnstcw
xchg
ds
push
clc
pop
xchg
decb
inc
mov
add
aaa
and
fbstp
ds
add
scas
loope
hlt
xor
addl
jge
lea
pop
dec
mov
and
inc
rclb
pusha
dec
jbe
inc
std
sbb
lds
in
push
cmp
mov
ss
aas
jne
lds
jmp
mov
rolb
in
movsl
push
cltd
or
sahf
adc
adc
jl
jg
std
sbb
icebp
aaa
incl
pop
add
repz
push
xor
cmpsb
repz
mov
outsl
xchg
sub
xor
adc
jo
xor
cmovbe
loop
jne
inc
loop
inc
push
dec
xchg
dec
loopne
sbb
cmpsl
lods
jp
outsl
call
stos
lods
cmp
repnz
pusha
sarl
xchg
fwait
add
rclb
fwait
xchg
ret
push
sbb
aad
jns
icebp
xchg
int
test
mov
fnstcw
jb
std
ret
lods
fdivl
pop
mov
es
ja
and
fcomip
inc
push
out
push
divb
pop
movsb
mov
push
xor
jl
fistps
xor
lock
sarb
icebp
out
rol
sub
lock
sbb
pop
mov
mov
hlt
pop
pushf
mov
push
stos
inc
add
fisubrl
inc
or
lahf
push
or
pop
std
shlb
dec
cmp
mov
push
int
sub
add
pop
clc
jnp
daa
test
insb
push
push
pop
mov
mov
lahf
cmp
sarl
xchg
add
adc
lahf
or
repz
test
cld
or
xor
ficompl
cmp
mov
adc
push
sbb
outsl
imul
or
add
out
sub
std
or
gs
je
les
loopne
xor
sbb
push
loop
add
cmp
frstor
inc
mov
imul
int3
aas
icebp
fbstp
test
sub
sub
maxps
cmpsb
out
pop
imul
test
pop
int
icebp
cmp
pushf
push
cmpb
push
scas
repz
mov
neg
sbb
xchg
push
adc
push
push
in
je
dec
jns
and
arpl
dec
mov
inc
inc
call
in
scas
sbb
xor
add
jae
sahf
test
add
pop
mov
lds
stos
arpl
sub
adc
dec
pop
nop
out
lahf
aas
cmp
mov
testl
icebp
or
in
mov
or
dec
inc
stc
jmp
cmp
dec
cs
shr
lcall
inc
js
mov
dec
inc
movsl
pusha
not
inc
xor
icebp
outsl
out
mov
loopne
stos
jg
mov
aam
leave
stc
adc
je
jge
js
cwtl
in
call
jne
sbb
dec
jne
lret
subl
out
cmpsb
mov
div
pusha
cmovl
dec
repz
dec
loope
jae
int3
push
lret
and
dec
shll
xchg
pop
push
xchg
call
or
mov
inc
aaa
pop
and
mov
adc
push
add
xchg
inc
mov
xchg
out
adc
iret
xor
push
addps
imul
in
dec
dec
fwait
cmp
testb
push
fsubrl
aas
dec
push
push
jno
movsl
jbe
mov
ret
xchg
sbb
test
xor
movsb
sub
xchg
push
divb
sub
nop
mov
test
mov
sub
xchg
mov
xchg
fdivs
pop
dec
mov
adc
push
mov
mov
bound
jb
mov
or
gs
hlt
push
lahf
mov
daa
dec
loope
sub
arpl
test
mov
loopne
dec
loop
jmp
xchg
pushf
ficoms
in
push
inc
mov
sbb
imul
subb
cmp
pop
mov
jl
testl
pushf
push
and
jp
and
je
loop
jmp
ror
and
rcrb
inc
dec
fcoms
pop
mov
loopne
add
es
sub
movsl
mov
dec
arpl
xchg
mov
adc
outsl
nop
ficompl
or
add
cmp
push
pop
sbb
cld
dec
adc
fcoms
sub
shl
push
lcall
adc
jl
sbb
jp
inc
inc
sbb
xor
mov
xchg
push
pop
sub
xor
mov
mov
divl
sub
or
sub
mov
int3
push
pop
out
rorb
adc
xchg
mov
sub
dec
push
cwtl
adc
decl
mov
cmp
clc
adc
add
inc
sbb
leave
xor
sbb
pop
andb
mov
cwtl
insb
mov
mov
mov
hlt
sbb
mov
lds
inc
xchg
jmp
pop
flds
out
mov
shrb
icebp
inc
mov
bound
sub
and
mov
into
cwtl
std
mov
repz
or
lods
jge
fnstsw
je
sbb
das
and
push
xor
insl
loopne
fiaddl
cmp
mov
imul
cmp
mov
mov
add
and
sbb
pop
imul
adc
lcall
scas
cli
pop
push
xchg
enter
and
jecxz
shrl
mov
imul
in
lea
inc
push
xchg
sbb
jge
push
sub
dec
cmpsl
adc
rol
out
adc
andnps
mov
jne
jae
dec
popf
jecxz
movsl
negl
in
adc
sub
mov
pushf
jo
pushf
sbb
inc
mov
lods
mov
scas
and
cmpsl
sub
mov
pop
cltd
xchg
popf
loop
xor
pop
rcrb
push
push
call
push
cmp
test
lock
loop
out
enter
sub
scas
into
arpl
cmc
cmpsb
or
xor
ds
mov
andl
add
xor
imul
cmp
dec
mov
stos
or
cmp
jp
mov
rclb
ljmp
shll
jle
adc
push
std
jns
jae
dec
js
jecxz
jno
adcb
mov
add
adc
incl
subl
int3
jge,pn
pop
cmp
or
mov
cltd
inc
mov
aaa
xchg
sbb
mov
dec
xor
adc
xchg
mov
loop
or
test
inc
jp
inc
popa
cmp
mov
cmp
jecxz
mov
xlat
cli
inc
addr16
jne
fwait
inc
pop
test
hlt
and
xor
mov
das
clc
std
cmpb
sbb
pusha
xchg
aad
mov
pop
jae
adc
push
das
dec
inc
mov
jge
cli
xor
jge
stc
inc
pop
mov
imul
or
fistpl
imul
movsb
push
adc
out
stc
sysret
mov
gs
add
imul
jmp
xchg
pop
jge
push
and
xlat
cmp
out
lods
mov
cmpsb
sahf
clc
xor
add
mov
sti
test
inc
cmp
mov
mov
pop
sbb
xor
sbb
sti
pop
or
fldenv
shrl
adc
jmp
push
movsl
popf
push
xor
call
xchg
mov
xorb
dec
repz
xchg
push
adc
jecxz
rorl
adc
jge
leave
insb
or
pop
stos
cmpsb
shufps
ja
adc
leave
xchg
adc
popf
cwtl
mov
cmpsb
xchg
les
sub
outsl
scas
stos
inc
xor
jb
sbb
push
jecxz
add
pusha
xchg
mov
popf
and
repz
insl
xchg
das
mov
mov
sub
movsb
dec
aam
sbb
aaa
jg
xor
js
mov
mov
adc
pop
lahf
stos
xchg
loop
int
dec
push
and
rolb
mov
cwtl
sbb
mov
mov
sub
and
pop
cmpsl
adc
subl
xor
mov
pop
xchg
mov
push
aaa
cs
aas
out
xchg
push
into
xor
pop
pop
pop
out
lea
aaa
inc
fs
xor
pop
lret
mov
imul
mov
ret
mov
and
push
pop
or
sbb
nop
inc
fisubrl
out
jp
or
and
mov
lods
adc
or
xor
fs
dec
mov
inc
insb
shll
and
mov
fwait
sub
gs
and
add
mov
mov
repz
adc
and
dec
hlt
and
fs
scas
sbb
xor
xor
push
push
repnz
dec
in
ret
add
ja
mov
in
or
pop
mov
movb
gs
and
cltd
push
adc
xor
mov
inc
sub
je
pop
stc
xchg
jge
ficompl
lods
outsl
dec
mov
cmp
outsb
ss
stos
in
xchg
and
push
xchg
into
pop
jne
ror
add
loop
jbe
lahf
in
call
or
aaa
lds
add
jb
loop
pop
nop
xor
sti
in
push
out
add
fwait
popf
mov
pop
clc
test
arpl
fisttpl
jbe
pop
pop
push
xorl
lods
hlt
sub
arpl
or
cmp
sub
nop
sbb
or
fwait
xchg
sub
pop
fwait
daa
mov
fwait
push
cmp
bound
pop
into
jmp
xchg
lret
jge
add
xor
xor
pop
icebp
pop
mov
cmp
pop
out
pop
cmpsb
jno
jb
shll
out
cli
adc
xor
loopne
inc
loope
dec
js
and
ret
mov
lds
pop
push
lret
inc
cmp
loope
mov
ss
sbb
loopne
adc
into
sti
or
sbb
cli
sahf
push
mov
add
inc
and
daa
xchg
cmpsb
lea
pop
js
push
adc
inc
pop
pop
lock
loope
jmp
xlat
repnz
xchg
cld
or
test
arpl
sub
aad
jno
fisttpll
jbe
out
mov
call
or
addb
xchg
rorl
jp
xorb
inc
push
pop
hlt
push
and
setb
in
xchg
sahf
mov
arpl
pushf
outsl
shrb
shlb
add
rolb
aad
fsubs
fs
outsl
inc
push
popf
out
stos
mov
rorl
jmp
loop
sbb
cmp
lock
dec
test
movsl
fisttpl
das
cmpsb
cld
jmp
repz
in
mov
cmc
sub
sbb
aaa
bound
outsb
push
mov
fistpl
dec
popf
insl
mov
ljmp
les
xchg
out
jo
xor
jns
std
outsb
pop
pop
mov
jne
data16
xor
int
test
lea
jne
push
pop
icebp
xchg
movntq
clc
cmp
mov
test
into
int
cld
ret
push
or
bound
lret
call
insl
pop
mov
int3
rol
inc
bound
std
dec
mov
push
out
mov
movsb
loopne
and
and
jg
mov
xchg
les
push
mov
loop
jp
mov
and
roll
test
test
xor
stos
andb
push
sub
inc
fildll
mov
mov
fimull
jle
cli
imul
pop
int3
and
sub
stos
and
sub
std
rcl
rcrl
rep
enter
jae
mov
loop
xor
pop
ficompl
hlt
cmp
loop
hlt
nop
dec
inc
aad
dec
mov
sbb
clc
fwait
dec
loope
pop
push
xchg
sahf
into
pop
lock
popa
xchg
xlat
loop
push
add
hlt
movsl
out
ja
mov
jmp
cmp
or
xchg
int
mov
or
jb
sub
shl
scas
xchg
aad
rcr
nop
test
pop
add
cwtl
push
int3
dec
out
cmpsl
mov
xchg
and
rcll
xchg
in
inc
fistpll
into
jp
div
mov
pop
js
loop
push
cmpsb
mov
mov
add
pusha
popa
test
mov
je
jg
ja
dec
lock
sub
mov
jmp
pop
daa
xchg
jns
jle
cmp
sub
mov
xchg
mov
not
andl
fstpl
dec
test
lods
js
cmpsb
jl
xor
mov
sub
pushf
cld
dec
inc
sbb
add
stc
es
mov
mov
jmp
jbe
mov
out
sbb
sbb
js
cmp
shll
mov
dec
jecxz
sbb
jp
pop
call
imul
push
lds
inc
mov
stc
lods
leave
ss
loop
mov
push
dec
outsb
adc
sub
jae
pop
leave
mov
aaa
addb
fcmovnu
jmp
std
or
imul
mov
push
sbb
movsl
mov
push
loopne
xor
aas
inc
pop
lahf
rcrb
adc
scas
dec
lret
lds
or
pop
inc
call
lahf
mov
pushf
cmpsl
dec
je
sbb
and
dec
adc
jb
fldt
mov
clc
lock
mov
xchg
inc
or
out
cmp
adc
dec
call
movsb
sbb
ds
popa
adc
jg
mov
mov
pop
sub
mov
xor
shrd
cmpsb
pop
inc
imul
push
into
aam
ljmp
pusha
std
push
cld
mov
sbb
or
sub
mov
lods
rolb
inc
inc
jg
bound
test
insb
fwait
lcall
mov
sub
std
push
int
in
adc
pop
mov
sub
nop
das
sub
ljmp
adc
push
loopne
pop
or
popa
cs
dec
or
rolb
es
xor
leave
into
dec
mov
dec
popf
or
mov
dec
subl
mov
add
mov
hlt
loopne
xlat
inc
sub
mov
and
sbb
call
das
push
pop
les
add
push
xor
jg
jns
push
outsl
mov
les
mov
push
jne
mov
lods
jbe
mov
mov
mov
sbb
outsb
test
repz
ss
push
dec
dec
fildll
adc
mov
jne
cmp
stc
loop
test
jecxz
sub
sub
insl
stos
movsb
inc
jmp
add
in
dec
inc
mov
lcall
out
dec
out
in
in
sahf
loope
in
hlt
fwait
shlb
enter
mov
test
loope
inc
xor
arpl
adc
pop
pushf
popa
xor
icebp
mov
add
fmul
or
mov
lods
ss
jno
lods
stos
fnstsw
daa
pop
scas
mov
mov
inc
or
push
fstps
xor
js
leave
shrb
movsb
or
xchg
cmp
pop
add
or
add
pop
inc
adc
popa
out
out
aaa
loope
enter
dec
subl
push
or
xchg
inc
jg
fnstenv
mov
cmp
andb
jae
xchg
push
push
in
push
stc
inc
dec
adc
mov
inc
lds
push
lea
or
in
dec
xor
mov
cld
femms
sarl
mov
dec
inc
mov
std
add
push
mov
or
inc
pushf
pushf
call
sahf
sbb
sbb
or
mov
xor
movsl
pop
lret
rcrb
lock
ljmp
mov
sar
loopne
hlt
cltd
sub
pop
out
jp
mov
xor
mov
jg
frstor
scas
popw
or
sub
adc
test
ja
ret
roll
pop
nop
cmp
dec
aaa
pand
or
pop
xchg
push
frstor
nop
dec
cmp
pop
mov
jns
sub
xor
mov
scas
fidivl
add
jle
loop
xchg
pop
xchg
cwtl
mov
insb
sub
aaa
andb
cmp
pop
push
mov
or
hlt
fisttpll
bound
pop
test
add
cmp
cmp
stc
jns
imul
ja
cs
push
push
jb
ds
cmpsb
mov
out
sub
push
cmp
inc
adc
mov
stc
fwait
hlt
pop
test
fsubrl
mov
push
in
or
imul
xor
and
push
adcb
adc
nop
mulb
adc
xchg
in
out
test
arpl
pop
dec
dec
je
aaa
hlt
fsubs
enter
sub
cs
gs
push
sbb
xchg
fidivs
jle
jo
loopne
cmp
mov
jmp
xor
mov
jae
cmp
mov
pop
mov
or
pop
adc
clc
imul
mov
mov
or
insb
mov
sbb
shlb
shlb
in
push
popf
xchg
mov
inc
or
sarb
movsl
add
testl
cwtl
xchg
sub
sahf
xchg
jne
addr16
jb
cmp
inc
adc
repnz
std
incl
sub
leave
xchg
ror
mov
iret
fldcw
push
xchg
jecxz
outsl
jae
add
sti
int
adc
arpl
cwtl
and
push
mov
push
jmp
clc
push
imul
mov
leave
shl
xor
scas
dec
scas
lods
xor
push
inc
mov
push
xor
mov
das
incl
add
push
movsl
push
cmp
mov
fadd
add
or
inc
loopne
rclb
dec
jmp
xor
aad
sbb
jno
test
test
pop
xchg
int
rolb
and
ret
lods
lret
push
popf
scas
lods
jbe
xchg
inc
mov
imul
cmc
lcall
sti
xchg
fwait
imul
push
cmc
ljmp
inc
fs
sbb
sarb
cld
xor
arpl
icebp
ret
out
adc
fdivr
sub
sub
loopne
insl
fisubs
adc
in
push
mov
js
aaa
jbe
xor
xchg
push
movsb
adc
gs
cwtl
out
mov
fwait
dec
das
cmp
movsl
mov
leave
xchg
pop
ja
std
jge
sub
lds
xor
inc
aam
adc
scas
loope
imul
add
and
dec
dec
iret
push
mov
xor
xor
dec
std
and
testb
jg
call
cli
shrl
es
fidivrl
mov
cmp
jge
dec
repz
xchg
xor
shll
push
cmpsl
mov
mov
call
sub
sbb
in
sub
add
fisubrs
orb
lock
mov
imul
xchg
dec
psubsb
enter
repz
dec
and
in
pop
test
inc
cld
adc
stc
cmpsl
cmp
into
xchg
fsts
pop
push
push
outsl
dec
fcmovbe
sahf
mov
sbb
insl
repz
cmp
test
loope
inc
ds
sbb
lock
mov
das
or
jmp
lahf
out
pop
div
push
push
cmp
es
cmp
xchg
lds
movsl
leave
fucomi
lcall
dec
aam
icebp
incb
data16
int
popf
in
roll
push
or
movsl
cmp
movsl
add
ds
dec
sbb
push
xchg
sti
ret
out
and
jg
lds
in
and
addl
mov
mov
cmp
cmp
jmp
lret
ljmp
aaa
mov
add
pop
aam
cmp
adc
cmc
xchg
jbe
pop
push
scas
mov
mov
les
mov
add
fstl
in
sub
xchg
cwtl
rcrl
mov
add
cmp
and
pop
jge
inc
pop
cmp
andb
lods
movsb
insb
loopne
scas
mov
divl
mov
ret
pop
add
mov
pop
and
arpl
es
jbe
mov
cmp
and
fcomps
cs
call
test
xchg
xchg
push
mov
jecxz
mov
push
sbb
into
rorb
jo
add
repz
sbb
mov
test
or
xchg
inc
push
movsl
fchs
aad
sbb
push
nop
pop
inc
inc
int3
enter
lds
or
fnstenv
jbe
xchg
sti
or
jb
ret
cwtl
add
mov
stos
mov
divb
movsb
popa
inc
into
sub
or
push
les
cmp
mov
les
sub
aad
pop
dec
fdivl
pop
es
in
insl
sub
lea
push
fwait
pop
xchg
and
mov
push
push
btr
in
mov
es
xor
test
shll
and
js
clc
lahf
sbb
cli
test
push
mov
sbb
push
imul
adc
and
rolb
popf
shll
mov
dec
fisubrs
aaa
in
mov
mov
push
add
mov
icebp
jo
fmuls
cltd
mov
jbe
fwait
mov
inc
xor
mov
inc
leave
loope
in
sub
divb
push
fildl
jne
dec
lret
xchg
pop
cmp
adc
lea
loopne
xor
xor
mov
xor
mov
ja
stos
jae
outsl
out
shll
jo
insb
adc
loop
mov
icebp
lods
sbb
cmp
cmp
push
je
mov
and
mov
inc
sahf
loopne
pop
pop
sbb
movsb
push
movsl
test
mov
insl
mov
cmc
xchg
enter
daa
mov
movsb
dec
orl
sbb
add
fcomps
js
xchg
pusha
xchg
inc
lret
mov
cmp
dec
icebp
push
xorl
ret
inc
bound
mov
xchg
pop
push
cmp
icebp
lods
xchg
pop
mov
ljmp
call
mov
pop
iret
gs
cmp
cmc
mov
xlat
aam
adc
fimuls
das
sub
sar
hlt
pop
mov
in
or
inc
sarb
lret
in
lahf
jns
jne
lods
pop
adc
or
andl
and
dec
add
ret
inc
adcl
aam
out
fwait
stc
jle
aaa
jne
mov
test
and
sbb
xchg
faddl
iret
das
addr16
hlt
leave
adc
andb
enter
push
mov
dec
xor
cmp
sar
loop
add
mov
in
adcl
lods
push
xor
sub
mov
ja
gs
mov
loopne
icebp
cmp
cmpb
xor
sub
fwait
xchg
dec
jns
adc
pop
cld
and
push
movsl
xchg
cmpsl
or
bound
or
sub
mov
in
mov
in
dec
testb
mov
pushf
ja
dec
sbb
ljmp
scas
xchg
insb
sbb
mov
adc
jno
test
add
or
data16
imul
inc
ljmp
push
xor
int3
into
and
pop
mov
lds
iret
aam
into
test
push
insl
les
and
xorl
mov
sub
jb
add
pushf
ficomps
and
inc
lods
neg
inc
pop
xor
mov
and
cmp
inc
ret
cmp
stc
inc
xchg
pop
pushl
lods
loopne
xchg
jnp
lahf
mov
out
notb
xchg
or
stos
mov
imul
xchg
mov
pop
jl
xor
push
jns
xlat
repnz
jns
jge
jbe
add
or
mov
jg
mov
lock
pop
xchg
ficomps
add
sbb
aas
nop
adc
jnp
incb
mov
insb
hlt
cmp
push
mov
ss
fildl
xor
xchg
lcall
rol
xchg
mov
loope
mov
pop
in
ret
push
fistpll
cmp
inc
test
sub
outsl
cli
cmovge
add
pop
cs
test
cltd
adc
fdivr
xchg
xchg
cmpsb
xchg
loop
sub
pusha
add
data16
scas
loop
stos
jecxz
adc
sbb
stos
cmp
mov
test
jns
push
xor
pop
stos
pop
lods
stc
dec
int3
push
imul
fidivrs
cmc
push
xchg
pop
fs
outsb
int
pop
repz
fdivrs
jl
cmp
add
sbb
mov
push
cmp
icebp
pop
xor
mov
add
mov
mov
push
cmp
pop
jmp
mov
mov
push
jg
js
out
loopne
lea
data16
clc
dec
mov
push
inc
lods
in
jnp
jne
leave
and
mov
sub
fwait
mov
sub
mov
ret
sti
xor
fisttpl
popa
jl
loop
js
ds
les
cltd
adc
pusha
stos
jg
lret
lea
mov
andb
mov
add
adc
cmpsl
jmp
xchg
push
hlt
pusha
movsb
sub
inc
lahf
mov
xchg
fwait
pop
adc
jae
ds
jne
insb
sbb
push
nop
xor
shl
fistpl
sbbl
xor
push
arpl
test
mov
cmp
fldl
or
arpl
inc
in
sbb
jno
mov
int3
imul
cmpsb
pop
cmpsb
or
outsl
dec
out
idivb
pop
sub
xchg
ja
pop
rcll
push
sbb
sub
pop
sub
push
inc
shlb
int3
nop
imul
pop
xor
mov
mov
aas
test
xchg
jl
clc
lods
pop
adc
call
imul
xor
loopne
or
push
sub
push
rcrb
mov
push
dec
out
popa
xchg
jge
xor
movsb
mov
jecxz
adc
insl
inc
mov
mov
mov
imul
inc
sbb
data16
je
popa
jo
mov
ret
xchg
sbb
roll
je
xchg
adc
sub
sub
imul
cli
cmp
inc
push
mov
cwtl
adc
fnsave
test
lods
xchg
pop
jmp
xchg
rcrl
dec
xchg
lock
push
xchg
in
mov
inc
push
lock
inc
addr16
cmpb
lea
push
aad
cmpsl
and
mov
sub
repz
mov
pop
jl
xchg
dec
in
fldcw
movsb
mov
rclb
pushf
push
xchg
dec
in
xchg
jb
pop
sub
mov
jne
adc
jae
popa
push
fsubrp
mov
add
ljmp
rolb
lock
out
mov
dec
mov
fisttps
js
dec
cmpsl
mov
push
cmp
mov
mov
int
arpl
and
mov
in
sub
sub
push
xlat
test
rorb
mov
adc
or
jp
popf
out
shl
and
std
xor
cmp
std
shr
adc
jbe
xchg
imul
out
adc
iret
dec
mov
or
das
mov
fxch
mov
aas
in
shl
repz
aaa
adc
data16
xor
movsb
ss
in
lds
and
ss
adc
mov
xor
jne
mov
jno
loope
add
push
nop
fsub
sbb
pop
les
loopne
sub
push
lea
mov
lock
adc
ss
and
out
dec
xlat
inc
nop
jo
test
fcmovnb
pushf
popf
push
pop
shr
popf
push
repnz
leave
pushf
outsl
jbe
push
push
inc
push
jb
adc
xor
xchg
cmp
push
popf
int3
xor
xor
push
outsb
fdivr
jne
cmp
xchg
mov
or
ljmp
addr16
gs
cmc
sar
push
dec
dec
cmp
notl
and
rcrl
stc
fisttps
dec
and
mov
inc
test
andl
inc
sahf
xorb
pushf
sbb
jne
scas
test
dec
fdivl
test
xchg
jb
cmp
aas
dec
dec
inc
pusha
pop
or
dec
test
aas
adc
dec
cmp
stos
or
add
out
lods
stc
ret
das
arpl
dec
adc
out
push
cltd
cmpb
or
dec
push
xchg
and
jg
outsb
cmp
popa
cmpsl
das
jo
cmp
mov
xchg
shll
cmc
into
rcll
stc
aam
mov
xor
sbb
xor
mov
push
fwait
and
scas
push
mov
sub
pop
jne
lret
std
es
ds
sub
mov
enter
mov
out
cld
xchg
dec
lds
dec
stc
push
hlt
or
and
xor
xor
sub
adc
or
addl
xor
push
mov
xor
roll
filds
test
xchg
imul
sbb
test
and
cmpsl
mov
mov
xchg
fs
dec
fidivs
sbb
dec
enter
or
fimull
sbb
jg
outsl
cs
cmpsb
fldenv
int
out
shll
testb
mov
out
xsha1
cmpsb
dec
fnstsw
cmp
aas
jae
dec
out
outsl
mov
lock
mov
adcb
pop
jl
mov
lcall
rclb
movsb
inc
out
mov
jecxz
or
ds
std
inc
fcmovnb
push
lret
pop
jo
inc
roll
test
hlt
inc
sbb
push
mov
lahf
pop
cli
lahf
cli
dec
divl
mov
adc
ds
testb
and
jl
and
fcomps
int3
cmc
in
jmp
adc
and
cwtl
imul
jg
cli
out
or
jno
pop
jnp
sbb
jno
push
xor
add
cwtl
hlt
mov
in
arpl
fcoms
xchg
xor
mov
and
mov
jle
sar
fsts
pop
mov
inc
pop
push
push
push
xchg
push
dec
ss
rclb
mov
mov
sub
jne
arpl
sti
test
fs
insb
scas
cmp
shlb
lcall
xchg
clc
cmp
cmp
fbstp
pop
sbb
xor
cld
sbbl
aam
mov
xor
stos
rol
sarb
pop
mulb
mov
mov
roll
jae
movsl
mov
leave
mov
and
sub
mov
lret
gs
call
sub
std
gs
out
push
cmc
call
mov
push
sbb
fs
inc
arpl
int3
insl
push
daa
rol
sbb
push
icebp
xor
mov
add
dec
mov
cld
imul
cld
shr
stos
pop
sbb
enter
das
or
jbe
mov
loope
dec
mov
inc
add
daa
fs
movsb
xchg
pushf
je
push
int
mov
aas
cmp
xlat
aad
in
cld
mov
out
cmp
jo
push
ss
add
inc
pop
xchg
inc
push
cmp
test
sarb
data16
stos
lods
sbb
cmp
dec
sbb
xor
mov
mov
les
adc
xchg
in
loop
sbb
or
cmc
jle
adc
dec
sbb
fmulp
mov
pop
xchg
pop
mov
mov
xor
lea
pop
insl
loope
mov
jge
in
jae
stos
xchg
add
cmc
cltd
cmp
push
xor
push
dec
xchg
inc
sbb
jae
push
add
push
push
mov
and
pop
lcall
imul
imul
xor
mov
pop
mov
leave
inc
mov
sbb
sub
xchg
xlat
inc
pop
cmp
aas
mov
into
cmp
pop
adc
lds
addr16
je
arpl
je
mov
sub
icebp
insb
or
mov
and
aaa
sub
jl
pop
pushf
push
xchg
pminub
or
mov
fnstsw
enter
aaa
lret
lret
pop
mov
push
cmp
jge
xchg
shl
xor
inc
int3
pop
mov
xor
add
rcrb
add
loope
in
adc
sbb
add
jne
xlat
pop
cs
fistps
shl
ret
push
out
pop
push
and
mov
xchg
into
imul
sbb
fwait
sub
and
mov
out
iret
dec
or
cmp
lds
mov
sub
mov
test
xchg
imul
loopne
fistpll
sbb
sbb
sub
dec
adcl
ret
mov
and
xchg
test
ret
inc
fstpt
mov
leave
andb
test
sub
daa
jle
mov
xchg
sbb
jle
dec
test
repz
mov
rcrl
push
push
sti
in
lea
xchg
aad
mov
mov
repz
jg
rolb
std
enter
pop
dec
leave
jne
xchg
inc
mov
mov
orl
in
jb
pushf
stc
icebp
je
lret
inc
in
rolb
add
pushf
cmpsl
out
out
lret
imul
and
fsubrs
andb
loope
add
pushf
addr16
enter
inc
pop
xchg
inc
mov
cmp
popa
add
icebp
and
dec
or
jl
push
inc
js
sub
mov
or
das
std
sub
cmp
or
ficomps
mov
xor
mov
rolb
sub
outsb
inc
dec
lods
sti
inc
inc
je
lock
daa
xor
int
sbb
les
push
mov
sbbb
es
aas
jmp
and
adc
mov
xor
push
rcr
aas
out
ljmp
inc
mov
cmpsb
pop
xchg
outsl
lods
adc
les
addl
push
add
rorl
add
into
iret
lret
pop
mov
fnsave
fidivrs
ljmp
sti
mov
fistl
sub
pop
adc
loopne
loope
ror
and
ss
mov
and
pop
negl
sub
inc
les
hlt
or
pop
clc
xchg
pushf
in
adc
sbb
cmc
mov
sbb
cmpsl
dec
cmp
nop
jbe
decb
fcompl
and
fidivl
push
iret
xchg
xor
and
cmpsb
xchg
and
and
xchg
dec
cmp
sbb
mov
xlat
in
xchg
xchg
pop
icebp
dec
lret
mov
leave
cmp
and
push
repnz
mov
dec
and
xchg
rolb
dec
test
insb
mov
int
jns
sbb
dec
adc
mov
add
pop
xchg
xor
mov
pop
jo
arpl
or
lea
adc
mov
adc
and
pop
sub
xor
nop
cmp
outsb
cmpsl
movb
dec
ljmp
test
jle
pop
inc
xchg
xor
sub
cmpsb
sbb
add
dec
fidivs
inc
add
ja
flds
sub
icebp
cmp
lods
cmc
mov
and
jg
jmp
or
into
mov
loop
pop
scas
adc
xchg
pushf
adc
cld
stos
jno
mov
pop
cwtl
mov
xchg
or
pop
inc
mov
cli
fxch
xor
in
pusha
incl
fnstsw
xor
mov
jo
xor
mov
addl
scas
and
pop
inc
xchg
shrb
dec
movsb
jns
lods
pop
int3
pop
inc
lods
enter
ss
push
popf
js
and
jmp
call
sub
mov
mov
aaa
xor
sub
cmp
pop
jl
repz
inc
or
dec
dec
frstor
pop
xchg
xor
dec
mov
adc
iret
sub
sbb
mov
les
in
arpl
cmp
cmpsl
repnz
dec
xor
and
mov
outsb
mov
push
push
fisubs
jl
imul
les
or
mov
cltd
cmp
dec
ss
and
push
cld
xor
lock
icebp
sbb
jl
and
or
cmp
dec
xchg
testl
les
pop
les
sub
sarb
aaa
lds
cmp
pop
js
movsb
es
pusha
adc
mov
jnp
out
jge
mov
jg
adc
jne
insl
pop
ror
sbb
aad
pusha
dec
dec
gs
cld
cld
jnp
mov
mov
fcomip
adc
cmp
pushf
cmp
cmc
add
push
mov
enterw
or
inc
xchg
jg
lock
lahf
xor
scas
add
dec
jmp
push
icebp
fdiv
dec
add
adc
lahf
loop
nop
dec
dec
scas
sbb
pusha
rorb
aas
sarb
push
ds
ljmp
ljmp
lret
jb
cmp
js
lcall
mov
gs
ljmp
jne
je
pmaxub
adc
movb
dec
mov
xchg
fldcw
fstpl
xor
xor
mov
cld
mov
jns
adc
cmpsl
add
and
in
fisubrl
ficomps
repz
jae
insb
je
lods
out
mov
pop
or
xbegin
mov
cs
pop
cwtl
outsl
repnz
pop
and
adc
cmpsl
test
mov
cmp
mov
and
int
add
pusha
pusha
outsb
jp
mov
addr16
das
inc
ja
mov
cwtl
rcrl
or
stc
dec
sbb
lret
xlat
out
xor
sbb
das
orb
pop
ficoml
loopne
test
fbstp
jns
jge
add
fsts
mov
mov
push
js
adc
push
jne
lcall
push
xlat
sub
sub
int3
and
lock
hlt
inc
or
test
or
lock
mov
imul
scas
and
fcoms
movsl
dec
push
inc
cwtl
sbb
fwait
shll
mov
xor
jb
sub
shll
les
pop
scas
idivl
out
adc
jp
mov
pop
sub
out
dec
or
xchg
loope
in
cmp
js
xchg
adcb
jmp
xchg
mov
dec
ror
clc
mov
add
sbb
mov
xchg
out
and
rcr
in
xlat
inc
lds
test
sbb
aas
push
fistl
data16
mov
insb
adc
lock
pop
dec
out
adc
out
das
cmp
pop
mov
jo
cmp
dec
gs
pushf
dec
mov
imul
and
mov
stc
idivb
mov
xchg
and
outsb
outsb
imul
jae
push
call
mov
cmp
mov
jae
test
cmp
cwtl
jb
div
div
in
loope
add
std
adcb
rorb
or
in
ret
mov
cmpsl
or
in
sbb
aas
loope
test
cmp
push
push
imul
mov
loope
out
or
call
mov
clc
and
sbb
xchg
mov
in
int3
inc
jl
and
pop
loopne
pand
stos
sub
pop
orl
fcoms
lret
movsb
add
push
mov
or
mov
cs
imul
sub
xchg
test
loop
aam
jl
addr16
or
shrb
pop
lret
call
cmp
xor
cmc
and
repz
in
outsl
cmpsb
addl
mov
loopne
sub
jo
sub
or
ss
push
andb
out
mov
ret
push
hlt
or
lret
iret
jns
mov
adc
mov
jne
and
mulb
adc
dec
xor
mov
aas
repz
imul
pop
fistpll
ja,pt
dec
and
cmp
push
adc
movsl
jmp
popa
loope
sbb
ss
pushf
popa
lea
jb
mov
ret
loope
idivl
adc
mov
fwait
xor
cmpsl
mov
negl
pop
movsb
inc
fidivl
fs
scas
andb
inc
mov
lcall
mov
jno
adc
push
movb
jge
push
movsl
aas
mov
cmp
xchg
cmp
dec
mov
iret
das
les
and
cli
inc
subb
repnz
add
dec
sbb
push
outsl
repnz
pop
cltd
mov
in
dec
dec
fiaddl
std
inc
push
hlt
inc
inc
jl
arpl
mov
xchg
scas
pop
jno
test
bound
mov
xsaveopt
push
clc
or
pushf
dec
popf
sub
dec
test
inc
negb
inc
insb
stos
sbb
movsb
adcb
popa
push
shr
stc
arpl
mov
std
adc
pop
movsb
pop
mov
cmp
lcall
arpl
dec
inc
lret
cwtl
arpl
jno
jb
push
fidivs
xor
cmp
ret
je
jbe
xchg
sbb
sub
imul
jb
push
in
jb
idivb
sti
dec
fsts
jae
xor
pop
sbb
daa
jb
in
xor
in
aaa
push
sub
adc
shrl
push
pop
in
xor
pop
sbb
stos
loopne
inc
std
mov
outsb
mov
lret
inc
test
out
xlat
iret
sbb
clc
mov
cmpl
leave
adc
dec
mov
sub
stos
subl
xor
or
xor
inc
icebp
int
test
ror
movsl
sbb
pop
push
mov
aaa
xchg
push
imul
dec
mov
cmp
imul
jecxz
cwtl
lahf
pop
mov
inc
xchg
dec
je
ljmp
dec
gs
out
jo
hlt
mov
aas
inc
push
sub
push
iret
xchg
mov
and
dec
mov
shlb
mov
rcrl
adc
mov
jbe
add
xlat
and
xor
pushf
aam
test
pop
cwtl
mov
int3
test
loopne
sbb
jp
popa
mov
inc
and
int3
inc
ss
icebp
cmc
bound
xor
out
pop
loope
sbb
pop
push
pushf
dec
into
ret
jbe
jge
inc
rol
mov
or
in
jne
stc
mov
push
mov
stos
cmpsb
out
data16
cmpsb
mov
jns
jmp
and
mov
les
and
filds
ds
jb
leave
and
jb
sub
bound
dec
sbb
push
in
or
sbb
fstpt
inc
mov
out
fcoml
mov
sbb
repz
shr
jnp
cmp
add
in
fbstp
mov
into
imul
aaa
sti
mov
clc
pusha
repz
aaa
mov
pop
push
gs
int
pop
xor
or
insb
sbb
inc
add
ss
jb
jae
fsubl
adc
push
loope
sub
xor
mov
jecxz
fisubrs
lahf
es
mov
test
ds
fcoml
pop
adc
pop
add
add
cmc
data16
push
jecxz
pushf
aaa
clc
and
ret
inc
push
cmpsl
es
jmp
adc
in
lods
jle
in
jg
test
dec
lret
pusha
adc
ficomps
jp
xchg
xor
jecxz
mov
mov
loop
inc
jg
daa
mov
mov
mov
jae
jno
mov
insb
lret
or
push
sahf
and
jno
aad
mov
jl
outsl
jne
pop
add
mov
aas
sbb
cmp
push
add
lock
sub
pop
dec
jno
inc
dec
inc
lcall
jle
out
jp
aas
jnp
xor
subl
xor
mov
outsl
xchg
mov
test
movsb
pop
dec
jb
pop
xor
pop
adc
or
mov
nop
in
sub
cmpsb
inc
adc
jbe
in
fistpl
mov
push
cwtl
arpl
scas
jnp
mov
inc
int
in
fnsave
arpl
fldl
jno
andb
add
push
sbb
test
out
mov
sti
lea
test
sti
xchg
pop
adcl
scas
test
in
out
inc
mov
popa
ret
push
fcoml
outsl
nop
jbe
das
loop
int
and
jmp
xlat
cltd
mov
jg
adc
mov
push
data16
lds
inc
mov
test
out
aaa
inc
call
add
or
sbb
mov
push
daa
hlt
sahf
lret
sbb
sub
pop
repnz
popl
dec
push
clc
sarl
dec
or
xchg
mov
fldt
je
mov
jns
ret
jmp
mov
push
aad
cmp
mov
sub
sbbb
cmp
sarl
repz
btrl
dec
mov
aas
cmp
xor
jo
aaa
addr16
mov
xor
cs
adc
fstl
loopne
xchg
in
jg
xchg
stc
jno
pusha
insb
push
data16
pop
loopne
dec
and
add
aam
xchg
out
pop
mov
rcrl
push
sub
push
or
xchg
jne
ja
adc
mov
lods
cltd
sahf
push
xor
or
xor
cli
lcall
push
andb
adc
xchg
or
mov
jge
sbb
mov
jmp
es
sbb
dec
loopne
mov
adc
xor
enter
jbe
xor
shlb
ds
cmp
stos
js
xor
movb
sub
shlb
cmpsb
xor
adc
imull
adc
sti
mov
mulb
das
mov
push
fs
ljmp
repz
mov
ss
movsl
lahf
shl
stos
in
xchg
xchg
cli
jns
push
mov
rcrl
out
push
sbb
jg
fisttpll
jns
xor
sbb
inc
divl
jno
mov
stos
mov
mov
jg
dec
arpl
sbb
fwait
pop
push
add
xchg
xchg
shl
dec
sub
sub
pop
js
and
pop
pop
js
filds
sbb
push
fwait
adc
imul
arpl
popl
cmpb
call
xlat
bound
push
add
cmovns
clc
pop
loope
xor
mov
out
outsl
add
in
xor
pop
mov
movsl
ljmp
sub
cmp
movsb
ds
and
jge
lcall
add
fcomps
jns
xchg
pop
stos
enter
xchg
jbe
push
imul
add
je
test
lock
jg
push
xorb
leave
mov
pop
stc
icebp
shlb
cltd
leave
inc
sub
inc
sahf
push
pcmpeqw
clc
xchg
pop
pop
jo
popa
sbb
lods
adc
inc
cmp
xor
in
shll
iret
imul
fwait
adc
and
int3
repz
adc
movsb
mov
ljmp
push
mov
aas
jmp
into
inc
lea
mulb
ja
addr16
sahf
stos
bound
jbe
xorb
fadds
mov
dec
cmpsl
shlb
lea
pop
xchg
mov
adc
push
sahf
pop
incb
dec
insb
ss
adc
fcmovnb
call
and
jns
jno
cmp
mov
cmc
cs
or
iret
mov
fsubs
stc
mov
push
xchg
or
mov
or
xor
cmp
cmc
ret
add
jecxz
test
jge
andl
sub
cmp
andl
or
shll
jmp
mov
shrd
ljmp
fildll
mov
jle
mov
ja
dec
fdivrs
popf
out
in
mov
imul
fcoms
push
fidivrs
dec
dec
es
aas
ret
sbb
push
xor
pop
popf
xor
xor
sbb
xor
pusha
cmpsb
aam
mov
nop
leave
test
fisttpl
mov
outsb
inc
push
rcrl
xchg
pop
je
or
cmpsb
gs
jge
push
cmp
repnz
jo
data16
xchg
mov
imull
cmpsb
dec
pop
or
lods
ret
dec
shll
sbb
fs
pop
cmpsl
test
pop
xor
mov
xchg
mov
xchg
cmc
xor
in
adc
mov
adc
push
popa
add
or
mov
scas
xor
fsubrl
aad
mov
pop
mov
push
mov
test
add
add
call
scas
imul
ljmp
insb
add
jnp
out
out
adc
call
test
stc
cmp
xchg
sbb
addr16
mov
arpl
push
hlt
in
pushl
sbb
cmp
mov
mov
out
aaa
push
jle
out
xchg
aad
inc
cmp
scas
mov
dec
in
sti
imul
cmpsb
je
dec
call
xchg
pushf
dec
push
cmp
addl
or
in
jne
out
shrb
and
cmpsl
and
sbb
or
sbb
arpl
mov
daa
sbb
sbb
sub
adc
pop
dec
jecxz
repz
rol
loop
cmp
or
and
out
data16
mov
mov
jecxz
loopne
inc
pop
aaa
push
jbe
pop
mov
pop
mov
flds
lret
cs
ret
addr16
in
stc
sub
es
cwtl
cltd
mov
mov
shrl
mov
sub
outsl
xchg
pop
arpl
inc
imul
dec
call
lcall
jnp,pt
jo
xchg
pop
decl
into
xchg
sbb
in
out
dec
mov
and
les
cld
inc
add
xchg
shll
daa
enter
sarl
add
sbb
pop
nop
inc
and
adc
jmp
and
jecxz
jle
mov
int
sti
push
xor
rcll
seto
fcmovnu
negw
pop
loopne
and
dec
mov
pop
or
out
cmp
cmp
jmp
jmp
dec
mov
mov
stc
loopne,pt
mov
fcompl
in
mov
push
sub
inc
call
ss
lret
mov
jp
mov
cmp
lahf
sarb
data16
xorb
ds
mov
cli
ds
jge
adc
call
iret
dec
leave
addb
leave
neg
push
xor
pop
mov
cmp
jecxz
mov
xor
ret
shlb
ret
fldt
outsb
scas
inc
std
hlt
jge
rclb
es
bound
movsb
icebp
pushf
adc
cmpsl
daa
pop
movsl
test
pop
dec
ds
mov
pop
dec
ret
push
xor
daa
out
mov
push
rorb
popf
out
cmpsb
xchg
dec
lock
shrl
shlb
ret
inc
ja
and
mov
pop
adc
adc
jae
mov
jmp
push
dec
mov
psubw
dec
repz
aam
push
pop
sub
mov
data16
push
adc
pop
cmp
into
cwtl
mov
mov
pop
xor
test
push
cli
push
add
lds
inc
inc
pop
lods
mov
aas
and
std
scas
mov
leave
jle
in
mov
insb
mov
in
pushf
int3
inc
std
fists
scas
popa
or
ficoml
and
aaa
in
push
bound
mov
mov
shl
xchg
fsubrl
bound
cmp
movsb
pusha
push
test
dec
push
inc
mov
push
cltd
xchg
test
cld
cmpsl
jge
cmp
jb
scas
sbb
adc
xor
pop
push
test
ss
xchg
iret
repz
cmpsb
out
outsl
lods
divb
sub
lods
popa
lea
sbb
xor
push
pop
popa
sub
sub
lret
mov
jne
xor
xchg
jo
fidivrs
into
enter
mov
in
sbb
setno
loope
ja
dec
push
xchg
mov
outsb
aaa
popf
hlt
mov
jne
push
addl
xchg
je
mov
mov
fld1
mov
lahf
push
sahf
stos
xor
imul
daa
push
push
sub
lock
mov
pushf
pop
xor
dec
in
loop
enter
lret
xchg
cwtl
sbb
popa
jp
xor
shrl
jae
mov
popa
shrb
add
pop
loope
stc
pusha
jg
sti
dec
lods
add
xchg
add
push
xchg
rorl
test
rcll
movsb
test
jae
mul
cmp
push
clc
cwtl
test
out
bound
dec
or
cmpsb
pop
loope
and
and
mov
add
out
in
mov
mov
push
fcom
push
mov
out
daa
cmp
pop
add
fdivs
stc
ficoms
push
mov
jbe
and
inc
addr16
lods
jb
rcr
sbb
cmpsb
imul
lcall
mov
mov
dec
pop
js
inc
clc
hlt
dec
imul
inc
repnz
in
adc
aaa
or
popa
stos
jge
movsl
popf
mov
xlat
dec
inc
bound
xchg
jmp
push
clc
aaa
psadbw
loop
scas
inc
pop
mov
mov
leave
aad
jnp
push
cmp
movsb
inc
and
adc
mov
add
in
arpl
xchg
cld
ja
or
rorb
jae
imul
inc
dec
stos
push
dec
shr
adc
mov
inc
cmp
mov
mov
adc
in
mov
cmp
arpl
ret
xchg
das
jl
loope,pt
loope
pop
stc
push
cltd
repnz
stc
inc
sbb
xchg
xchg
lea
movsb
call
push
aas
pop
adc
std
sbb
xor
cmpsb
jo
mov
adc
pop
aaa
add
push
cmp
inc
out
mov
dec
adc
fnstsw
cmp
sub
or
push
pop
mov
xchg
idiv
aas
push
jp
jmp
pusha
mov
test
mov
adc
cmp
outsl
repz
dec
sbb
inc
push
dec
mov
and
or
mov
iret
sub
xchg
cltd
sbb
adcl
roll
xchg
push
call
scas
mov
pusha
roll
leave
mov
jbe
adc
or
test
jge
mov
insl
test
ja
pop
test
aaa
jae
xor
and
or
mov
daa
mov
call
popa
sub
in
call
aad
add
sbb
mov
test
arpl
mov
or
loope
lock
dec
cmp
insb
mov
sub
pop
lds
inc
sub
sub
daa
or
or
test
lea
pop
rcrl
fcomp
push
dec
add
out
lds
push
daa
movl
push
sbb
jge
rorl
mov
dec
adc
mov
test
iret
push
pop
mov
mov
cmpsl
xchg
add
mov
movsl
lcall
adc
and
mov
das
mov
sub
test
icebp
int3
insb
js
or
or
movsl
sbb
dec
or
mov
pop
in
fstpt
xchg
pmulhuw
cltd
and
call
pop
int
mov
pop
push
shlb
xchg
sbb
mov
movsl
or
xchg
out
outsl
imul
sti
or
xor
pop
fwait
add
fimuls
push
test
jbe
out
int3
in
cmpsl
mov
fwait
mov
sub
jp
testb
xchg
lds
mov
lahf
sub
dec
addb
loope
mov
mov
ja
add
jp
inc
add
mov
enter
or
push
loop
adc
push
push
lods
xor
dec
xor
add
push
push
push
imul
add
out
fiaddl
sbb
int
stos
imul
xchg
xor
aaa
cmc
in
cmc
out
in
push
lods
adcb
fisubrl
das
ljmp
fs
add
loopne
movsl
mov
mov
push
dec
imul
outsb
insb
lods
fstps
add
idiv
xor
rorb
cmp
push
repz
sbb
insb
icebp
enter
xchg
cmc
jmp
cmc
cmpsb
push
sbb
mov
sub
jl
push
loopne
adcb
and
bound
mov
enter
xchg
mov
cmp
xor
sbb
pop
and
outsb
and
mov
or
cmp
inc
push
scas
ja
repnz
daa
pop
js
or
and
div
enter
add
in
pop
lock
dec
andb
addr16
and
jp
xor
shll
dec
int
shll
cmpsb
out
ljmp
addr16
jp
cmp
jmp
pop
push
cs
dec
lcall
jmp
mov
aam
setae
dec
dec
push
mov
jmp
popa
cli
mov
add
adc
push
jmp
pop
stos
jno
pop
cmpb
or
mov
dec
mov
stos
out
sbb
call
ds
stc
test
or
adc
out
and
cmpsb
in
pop
mov
and
ret
dec
pop
ret
mov
inc
mov
imul
and
inc
pop
jne
faddp
test
popa
fcomps
mov
cli
mov
dec
int
dec
cli
out
mov
iret
inc
push
dec
cld
push
push
add
cltd
jns
ja
shrl
out
lahf
test
sub
sub
popf
hlt
cmp
shlb
lcall
nop
clc
mov
mov
daa
xor
mov
jb
gs
xchg
mov
in
adc
call
xchg
aam
pusha
dec
jle
cld
or
test
lret
push
add
dec
int
mov
arpl
push
lods
gs
mov
aaa
push
sbb
call
jbe
mov
pop
xor
xchg
imul
fs
adc
mov
add
aaa
repnz
and
cmp
inc
outsb
cmp
jle
or
fsub
gs
pop
cmp
mov
add
or
sbb
inc
je
loope
dec
imul
push
cs
adc
xor
and
xor
std
nop
and
cmp
jmp
clc
adc
sbb
mov
add
or
stc
jmp
pop
sub
mov
test
pop
pop
rcl
lods
fimull
in
cld
xor
cmp
js
cltd
jbe
inc
mov
xchg
fildll
imul
enter
jae
stos
push
mov
daa
mov
add
xorb
in
sub
push
mov
add
icebp
sub
mov
xorl
push
daa
push
jmp
pop
dec
mov
jbe
pop
and
mov
jb
or
and
rcrb
cmp
mov
popa
pop
cmp
pusha
push
clc
jno
ss
or
fwait
cmpsb
hlt
jl
adc
and
cmp
nop
jg
dec
sub
outsb
int
adc
cmp
arpl
pop
dec
jo
btc
lds
ds
inc
sbb
lods
pop
xor
push
push
fwait
xchg
cmpsb
fs
xchg
xor
add
outsb
mov
out
out
mov
xchg
dec
cwtl
loop
inc
imul
mov
lret
lahf
cs
mov
ret
adc
dec
sar
pop
inc
ficomps
xor
mov
inc
iret
sbb
aam
or
icebp
or
and
mov
call
xchg
sub
arpl
das
dec
inc
cli
mov
inc
sbb
pop
add
stc
outsl
ret
sbb
and
cmpsb
aas
xor
mov
cmp
inc
je
sub
mov
out
gs
test
pop
lret
jp
adc
lret
inc
lock
push
adc
adc
push
std
mov
dec
scas
or
pop
dec
xchg
leave
mov
loop
and
ret
sub
xchg
movb
into
mov
push
imulb
dec
adc
jmp
add
cltd
enter
adc
and
cmp
xchg
mov
movsb
add
xor
enter
xor
adc
mov
ror
fs
in
not
sub
loope
mov
xor
inc
inc
mov
or
inc
int
insb
fcmovb
jp
mov
jmp
fisttpl
and
xor
xchg
scas
push
sbb
mov
imul
pop
xor
mov
add
sbb
mov
mull
add
sti
idiv
jnp
dec
test
hlt
pop
xchg
dec
pop
and
xchg
insb
push
and
push
inc
mov
dec
hlt
sub
outsl
mov
rcll
pop
gs
sub
mov
loope
sbb
shrb
mul
cmp
xor
jno
mov
xchg
push
lcall
movsb
aad
in
std
in
dec
and
mov
push
xchg
lods
ljmp
and
call
jae
test
push
xchg
in
or
out
add
pop
out
sub
pop
pop
ret
lea
mov
jbe
add
ja
cmc
notl
outsl
mov
mov
dec
xor
adc
add
fcoml
movsl
notb
test
mov
jl
lds
ficomps
mov
pusha
repnz
mov
push
and
mov
lods
mov
and
aas
test
out
push
ret
xor
adc
fimull
es
mulb
fiaddl
pop
std
ror
neg
popl
jnp
jge
daa
dec
push
sub
pop
and
outsl
imul
xlat
daa
testb
sub
ljmp
pop
adc
add
mov
mov
lods
ds
ja
or
repnz
mov
xchg
sub
inc
jns
cli
je
shr
in
push
cmpsb
jb
jo
or
test
pop
cmp
cmp
sbb
sub
add
cld
sahf
cmpsl
push
xchg
mov
popf
sub
push
xor
cltd
js
or
dec
jae
stc
jnp
idivl
sub
fwait
mov
cwtl
and
roll
pop
popa
pop
insl
lods
adc
es
and
and
or
dec
mov
pop
fldt
push
or
mov
cmpsl
out
sbb
addl
mov
jp
pop
mov
sub
lods
adc
mov
enter
cld
or
cltd
into
mov
bound
and
js
dec
jb
dec
pop
push
out
out
loop
scas
lods
int
mov
orl
ljmp
xchg
fildl
movsl
sbb
add
jne
lcall
cmp
pop
dec
bound
inc
jmp
jmp
pmullw
aam
mov
pop
nop
sub
xchg
adc
mov
dec
sbb
cmp
xchg
fs
cwtl
clc
add
xchg
dec
xchg
cmpb
mov
mov
push
leave
cmc
add
call
xor
lret
cmpsl
pop
or
lock
das
hlt
push
int
inc
or
sbb
pop
sbb
mov
sbb
inc
out
std
les
mov
mov
cmpsl
imul
jno
add
scas
adcb
mov
or
mov
fistpll
push
or
je
pop
iret
mov
lods
jmp
or
sub
dec
into
int3
rclb
pushf
lods
lods
jno
sub
mov
dec
jb
scas
sub
jb
sarl
iret
xchg
or
repz
pop
stos
dec
xchg
mov
enter
sub
jns
inc
push
mulb
and
jecxz
cs
xor
ljmp
insb
mov
add
cld
and
mov
test
mov
pop
shl
or
arpl
je
hlt
mov
sub
push
and
ljmp
sahf
sbb
popf
adc
in
out
or
fisttpll
lahf
imul
push
popf
add
out
mov
and
test
sbb
pop
daa
out
or
lods
loopne
jmp
dec
mov
mov
lret
xor
or
sub
call
jo
sbb
push
sub
push
push
xor
pushf
xor
mov
sbb
hlt
mov
stos
adc
inc
scas
jno
dec
and
or
pop
insb
inc
sbb
jecxz
es
fdivs
aas
mov
ds
adc
scas
cli
je
test
xor
arpl
dec
adc
sbb
mov
xor
jne
mov
scas
mov
pushf
dec
inc
inc
das
mov
stos
movsl
push
fimuls
out
fyl2x
pop
jno
adc
daa
aad
mov
cmpsl
sbb
cmp
lret
fildl
add
mov
mov
pop
add
loopne
sub
fucomip
hlt
inc
mov
or
mov
lds
dec
inc
jae
scas
jne
icebp
cmpsl
and
adc
shll
into
sbb
pop
jnp
and
and
xchg
xor
mov
insl
pop
movsb
inc
ljmp
xchg
rcrl
cmp
mov
xchg
xor
mov
sub
dec
inc
cmp
hlt
xchg
rclb
lods
push
or
lods
mov
out
cld
test
movsb
outsl
or
mov
sub
jnp
cmp
cmpsl
cmp
popf
mov
cli
mov
cmp
push
mov
pop
mov
stc
sbb
fwait
cmc
push
bound
sahf
push
pop
add
popa
vandpd
addl
push
mov
pop
clc
mov
jnp
push
cmpsb
cs
push
jle
jle
push
add
jnp
mov
in
jmp
jge
push
mov
jae
cmp
clc
in
fwait
cmpsb
jno
ficoml
cmp
xchg
jne
ret
mov
push
es
add
imull
aas
pop
cmpsl
inc
mov
cmpsb
scas
push
inc
jmp
sarl
mov
or
negl
cmpsl
add
sbb
lcall
push
and
imul
or
es
scas
mov
shlb
dec
pop
cld
push
mov
xor
fs
cmp
test
aad
pop
out
lock
in
dec
adc
cmpsl
ja
sbb
loop
out
addb
lahf
insl
iret
xchg
adc
fnsave
push
add
cmpsl
sbb
mov
push
or
ret
mov
adc
cli
test
les
mov
inc
dec
out
adc
push
xor
cmp
sahf
in
inc
inc
pop
xchg
pop
jno
fwait
int
adc
and
xor
inc
pop
data16
add
xchg
shrl
sar
daa
mov
xchg
sbb
loop
test
jmp
outsl
mov
ret
adc
push
jno
cmc
ret
add
das
lods
fwait
stc
adc
stos
jnp
test
add
sbb
ss
dec
addr16
push
or
imul
sbb
push
xor
aam
pop
insl
pop
xchg
xor
lret
push
cmp
into
inc
xchg
mov
xor
repnz
or
insb
xchg
inc
xor
push
mov
xor
cwtl
mov
push
int
cmpsl
loope
add
cmp
bound
sbb
jae
push
pop
fisttpl
pop
rcrb
pushf
dec
pop
cmc
gs
mov
lcall
imul
xchg
mov
xchg
popa
sahf
mov
icebp
adc
and
inc
cld
stos
mov
xchg
scas
mov
out
adc
cmp
dec
sub
cli
rolb
mov
mov
mov
xor
or
lock
std
and
leave
inc
test
pop
outsl
mov
or
jns
dec
jae
cmovnp
xor
mov
jmp
out
outsl
mov
ds
mov
sbb
mov
aaa
ds
cwtl
inc
mov
fnstcw
mov
mov
in
hlt
adc
cltd
clc
dec
stos
sub
outsb
xchg
shlb
inc
add
stos
cmp
mov
cmpsl
sbb
mov
add
es
mov
adc
or
cs
push
xor
mov
jecxz
mov
icebp
loop
jecxz
push
dec
xor
xchg
mov
and
pop
mov
aam
mov
add
xchg
jbe
adc
dec
inc
jno
inc
fcmovnu
ret
sbb
or
or
sbb
iret
add
or
lods
jle
fwait
pusha
adc
or
cmp
int
xsha1
cmpsb
dec
lahf
dec
js
stos
popa
dec
fmuls
testl
fcomps
push
fmull
ljmp
jmp
jbe
adc
inc
sub
enter
adc
jle
jb
movsb
cwtl
fstpl
sbb
stos
inc
xchg
or
xchg
xchg
cmp
or
pop
clc
pop
in
test
mov
test
mov
pop
mov
into
adc
in
scas
sbb
jne
add
sbb
enter
lret
out
lea
sbbb
or
mov
xchg
sub
and
rclb
cld
iret
xchg
aaa
repnz
rorb
insb
add
lea
mov
adc
icebp
js
movhps
fstpt
mov
inc
or
cmp
dec
push
jno
cmp
pusha
sbbb
inc
ret
push
scas
arpl
iret
aam
mov
aaa
insb
insl
mov
xor
daa
cmp
scas
xchg
pop
jnp
sahf
je
xchg
shl
or
in
test
aad
das
es
cwtl
dec
mov
mov
inc
sbb
pop
xchg
dec
mov
mov
fsubr
je
sbb
inc
jmp
push
add
sbb
pushf
movsl
mov
ljmp
xor
add
lret
incl
sbb
mov
dec
out
inc
test
mov
push
xchg
std
rcl
xchg
repnz
or
loope
xor
mov
xor
cmp
lret
fdivrs
movsb
shlb
lea
ljmp
and
cmp
xchg
imul
dec
std
lods
movsb
cmp
pop
xchg
aas
mov
jno
imul
inc
leave
fbld
sub
je
test
jns
loopne
pop
rol
xchg
cmp
mov
mov
sbb
mov
fs
ja
pop
inc
push
and
xchg
push
push
orl
cmp
fidivrl
lock
lcall
push
insl
and
movsl
push
dec
lea
mov
jb
cmpb
push
dec
add
adc
aad
movsb
cmpsb
dec
mov
inc
cltd
adc
lds
jbe
dec
or
mov
in
loope
or
rcl
ds
ret
scas
mov
dec
xor
push
mov
in
adcb
mov
leave
fnstcw
in
aaa
mov
mov
mov
or
insb
fistpl
mov
popa
lods
aaa
arpl
shlb
pop
sub
push
jns
add
in
mov
adc
add
enter
cmp
inc
pop
xor
xchg
insb
mov
sub
xchg
repnz
ficoms
and
xchg
lret
sbb
shll
imul
pusha
out
std
fcompl
jg
mov
xchg
leave
jb
mov
pop
mov
push
lods
aaa
inc
cmpsl
or
and
cmp
sub
mov
add
das
in
imul
imul
pusha
pushf
lcall
xchg
call
dec
in
test
stc
ja
out
push
push
lea
mov
pushf
fldcw
push
fs
inc
mov
or
adc
push
inc
scas
test
jnp
mov
sbb
add
xchg
adcl
push
sub
pop
xchg
jo
xor
lret
or
cmpsb
mov
lods
mov
jmp
mov
sbb
xor
cmp
pop
hlt
fstpt
xchg
mov
outsb
out
jns
aad
pop
xchg
fistps
lods
sub
adc
cmpb
inc
int3
popa
in
dec
xchg
sar
test
test
mov
push
mov
je
xchg
cmpl
dec
and
inc
mov
and
or
push
stc
lcall
jl
and
movsl
pop
xor
in
dec
mov
pop
mov
or
xchg
push
pop
mov
mov
ror
leave
xchg
scas
xchg
leave
lret
je
mov
cmp
xchg
xchg
or
xchg
push
lds
mov
jb
loopne
fistpl
add
xchg
repz
push
jno
push
fs
js
in
pop
mov
jnp
cmpsb
cwtl
jns
shlb
mov
xchg
push
and
push
test
pop
jecxz
shlb
inc
fidivrs
jae
xchg
ljmp
jmp
mov
inc
and
and
shl
dec
mov
frstor
sub
shl
sbb
xor
ret
hlt
arpl
push
stos
repnz
in
jmp
jl
adc
lods
test
jne
xor
mov
mov
fwait
lods
ffreep
icebp
icebp
jnp
pop
cmpsb
ret
mov
inc
out
cmp
dec
push
fucomp
lahf
stc
scas
enter
push
pop
xor
js
adc
mov
lea
cmpsb
jp
jp
and
add
jg
call
pop
mov
jg
andb
out
push
cs
mov
push
test
ja
pop
jae
xor
xchg
sahf
add
cld
out
es
xchg
lods
lods
push
addr16
cmpsb
xchg
cli
mov
jp
xor
pop
sti
jp
or
lahf
inc
add
int3
mov
leave
xchg
xor
mov
sub
push
inc
inc
inc
sahf
dec
mov
xor
flds
and
mov
adc
xor
add
int3
scas
mov
int
in
dec
notb
sub
andl
sbb
cmp
jl
fsubrp
pop
in
hlt
pop
outsl
loopne
shll
outsl
nop
js
jbe
and
addb
pop
mov
insb
scas
fwait
dec
xlat
aaa
lcall
shr
mov
xchg
lea
scas
imul
adc
insb
mov
cmpsb
or
cmp
fdivrs
add
ja
pop
adc
fcomps
mov
mov
aad
mov
pop
mov
add
out
mov
and
and
push
out
in
sub
dec
cmpsl
call
push
cmp
push
loopne
mov
push
inc
xlat
sub
jae
je
mov
icebp
in
sub
popa
xchg
icebp
pop
mov
or
jae
in
xor
inc
pushf
mov
loope
sbb
jg
ds
pop
pushf
outsb
cwtl
cmpsl
dec
pop
test
or
outsb
mov
fsubl
jge
lret
jnp
insb
sbbb
pop
notb
cwtl
jnp
mov
cmp
xchg
jmp
and
add
aad
cmp
mov
jp
daa
fildl
cmp
and
add
lods
adcb
fnstcw
or
mov
xor
inc
ds
stos
jp
push
and
xchg
mov
dec
add
jecxz
push
xchg
int3
fcompl
push
icebp
push
imul
sub
repz
imulb
xchg
add
cmpsb
mov
sbb
sub
mov
mov
cmp
jge
xchg
xchg
cld
push
mov
lahf
or
add
mov
mov
sbb
xchg
cmpsl
inc
sbb
sub
lret
jno
dec
loope
jl
std
fldl
inc
cmp
mov
jge
ret
push
dec
pop
test
pop
lret
xchg
stc
pop
inc
push
outsl
or
inc
loope
pop
insl
loopne
shl
repnz
jmp
mov
mov
sbb
lea
aam
pop
adc
jnp
out
test
lods
mov
sub
movl
aam
xchg
push
mov
daa
mov
mov
enter
push
push
aaa
dec
pusha
xor
les
xlat
rorb
insb
jno
leave
push
sub
arpl
ja
pop
into
adc
inc
popf
shll
mov
lret
mov
sbb
jmp
sub
push
fnsave
mov
in
mov
enter
imul
add
clc
lahf
jbe
inc
mov
ljmp
dec
loopne
sub
push
xchg
clc
gs
leave
scas
negl
push
add
cmc
push
ss
cmp
add
dec
xchg
ret
cmp
push
mov
ss
dec
xchg
push
rolb
int
mov
inc
jno
adc
scas
ljmp
dec
mov
lods
pop
dec
cmp
das
fsts
mov
stc
mov
std
movsb
test
divl
jae
and
cmp
les
xchg
jno
mov
mov
scas
push
fsubrs
and
or
leave
pop
rorl
test
enter
add
shll
bound
xlat
adc
add
mov
repz
ljmp
adc
and
or
movsb
sbb
pop
push
fsubl
ret
xorl
out
out
jnp
sbb
rcrl
fidivl
ss
mov
xor
ror
mov
add
fidivs
push
xchg
mov
insb
fistpl
imul
sarb
or
in
xchg
cmc
scas
push
out
mov
scas
in
mov
dec
das
xchg
nop
test
roll
pop
out
mov
or
das
sbb
jne
cmpsl
and
rorb
fisubrs
loope
inc
xchg
mov
sub
in
cmp
lret
test
and
push
push
xchg
jae
xchg
fcmove
push
sbb
cmpl
xchg
hlt
int
mov
int3
inc
or
aas
push
mov
das
fwait
pop
push
iret
add
or
jns
jae
sahf
dec
xor
shll
inc
mov
mov
jnp
lea
adc
gs
test
jge
test
repz
lock
jbe
inc
ret
sub
push
and
mov
test
outsl
push
aad
push
rorb
mov
and
std
fwait
xor
pop
push
mov
mov
jmp
mov
mov
lret
std
test
lock
into
mov
aaa
mov
mov
inc
fldcw
mov
inc
mov
lods
call
nop
shr
call
lea
jb
repnz
scas
mov
lea
hlt
pop
jo
push
hlt
mov
incb
loope
push
ret
pop
push
ljmp
sar
aaa
pop
ret
push
pop
fnstsw
cwtl
xor
aad
xchg
xchg
pop
xor
ljmp
mov
dec
add
inc
cwtl
sub
inc
or
fcompl
test
xor
inc
push
rcll
js
xor
bound
adc
push
bound
cs
mov
jle
or
dec
fwait
and
test
daa
cmp
jns
pop
insl
adc
push
lret
adc
cmpsb
pop
cmp
inc
paddw
ljmp
std
cmp
rcr
push
sbb
jle
clc
adcl
nop
mov
iret
std
sbb
cmpsl
enter
pop
cmp
mov
adc
jp
stos
jbe
ja
pop
and
lea
jg
mov
sub
das
in
jb
dec
adc
scas
arpl
xchg
xchg
mov
outsb
cmpsb
test
mov
pop
cli
aaa
test
add
add
xor
push
fucomi
out
jle
dec
addr16
out
in
adc
mov
in
sahf
or
pop
call
je
mov
jnp
inc
and
imul
out
out
xor
outsl
sbb
ret
dec
mov
adc
dec
out
loopne
cmp
lea
jnp
arpl
test
sbb
jae
jns
mov
or
bound
dec
movsl
pushf
xor
rcrb
dec
stos
in
test
shr
push
push
mov
mov
mov
adc
mov
xchg
mov
es
adc
sub
call
jno
arpl
movsl
adc
insl
jnp
loope
cmpsl
xor
fisubrs
ret
out
jmp
sub
test
cmove
popf
inc
cld
pop
xor
loopne
test
sti
dec
mov
nop
inc
dec
jmp
in
and
pop
jge
fwait
xchg
fildll
mov
sbb
mov
dec
or
shrb
push
sub
sub
sbb
out
push
push
inc
or
ret
pop
ja
loop
push
push
pop
jnp
pushw
xchg
popa
lgs
test
push
xor
dec
xlat
dec
nop
dec
popa
std
into
sbbl
push
adc
and
scas
add
in
jg
mov
add
shrb
sub
in
ljmp
dec
add
sbb
sahf
jge
mov
dec
push
pop
cmp
lods
lret
mov
fdivp
dec
xor
stos
mov
cmp
popf
movsb
cmp
aam
jmp
lret
or
je
adc
mov
sahf
ss
int3
ss
ds
add
xchg
xor
sub
and
sbb
lods
push
dec
in
roll
mov
cwtl
rorl
pushf
movsl
adc
aaa
cld
enter
mov
repnz
test
sub
jb
scas
add
popf
dec
std
push
enter
cmp
fwait
lret
mov
in
mov
jecxz
daa
and
test
or
sbb
rcrb
call
movl
and
cmp
ret
adc
fs
clc
mov
sub
ljmp
sub
xchg
dec
pop
dec
lds
das
mov
in
rcll
push
mov
cltd
jno
mov
push
out
ja
xchg
insl
popf
repnz
pop
xchg
cmp
shrb
xchg
add
gs
aad
mov
add
pop
xchg
ret
mov
repz
and
out
fists
imul
lret
cmp
xor
repz
and
pop
xchg
push
pop
or
mov
scas
das
sub
lock
mov
push
rcr
repz
pop
push
xchg
dec
pop
xor
push
inc
push
sbb
inc
xor
jl
movsb
lods
repnz
cwtl
test
pusha
arpl
daa
adc
push
notl
pop
xchg
arpl
outsl
in
pusha
cmp
mov
xor
fstps
cmp
scas
rcr
in
push
or
popf
dec
push
out
ss
ss
cmp
add
rorb
jg
lods
mov
enter
inc
sub
xor
cmp
in
add
dec
jl
inc
iret
jge
add
push
in
or
in
cli
aad
cmc
adc
jmp
lock
ljmp
push
and
pop
repnz
movsl
ja
call
cmp
sbb
enter
call
mov
fwait
add
xor
lods
xchg
pop
pop
pushf
xchg
sbb
adcb
dec
andl
lret
and
push
xchg
lock
or
dec
push
add
dec
fmull
xchg
fisttpll
mov
xchg
sbb
pop
sub
sbb
cmpsb
push
mov
cli
mov
push
or
push
adc
aas
inc
nop
and
pushf
jnp
xor
pop
cmp
jge
out
add
dec
fldt
js
enter
ss
jns
aaa
imul
xchg
imul
xor
mov
and
push
imul
mov
rolb
dec
push
dec
jno
xchg
jo
mov
lds
lock
xor
cmc
dec
test
cli
fnstcw
push
enter
in
int
mov
dec
sbb
out
xchg
pop
inc
gs
push
fwait
cwtl
mov
add
push
mov
mov
mov
scas
orl
pop
add
imul
ja
out
cmp
cmpsb
arpl
cmp
hlt
cmp
cmp
push
fdivl
leave
test
fwait
cld
inc
jnp
pop
dec
push
jno
xchg
push
scas
dec
ljmp
cmpsb
lods
je
std
push
aad
ffree
sbb
sbbl
cwtl
cld
jecxz
pop
mov
adc
dec
imul
dec
jno
and
pop
mov
inc
leave
add
add
pop
push
dec
repz
jle
out
and
pop
add
xchg
scas
jge
test
jb
fnstenv
dec
cmpsl
insl
pop
out
fwait
outsb
xor
jo
push
xor
ja
rol
jge
add
lods
filds
mov
inc
sarb
sarb
pmulhuw
mov
dec
iret
jle
aas
inc
ss
imul
pop
negb
jo
push
sub
je
xor
ljmp
adc
aaa
sub
in
ficoms
lret
clc
pop
jecxz
repnz
inc
mov
add
mov
popf
rorl
mov
in
mov
shlb
jbe
rcll
dec
mov
ret
adc
test
push
jmp
jno
cld
scas
lea
insl
aaa
mov
fs
in
sub
imul
cmp
cltd
subb
and
test
push
fcomip
in
mov
inc
mov
mov
pop
mov
cmp
mov
xchg
dec
jge
xor
addr16
scas
sub
test
enter
add
pop
jnp
out
xchg
gs
cmp
mov
cs
adc
or
sti
test
jge
fs
xor
dec
aam
adc
iret
in
and
dec
scas
popa
sbb
add
jns
in
gs
cmp
sbb
xchg
adc
push
rcrb
lret
mull
jb
daa
xchg
je
insb
imulb
xor
call
inc
pop
gs
call
or
ficoms
add
sbb
cmp
repz
mov
mov
enter
pop
jle
mov
sti
push
insb
and
lahf
popf
inc
inc
dec
in
mov
xchg
xor
int
inc
rcrl
add
push
ds
popf
roll
cltd
cmpsb
aam
fisubl
and
pop
pusha
xchg
mov
sbb
ds
cmp
mov
push
pop
lock
mov
mov
cmpsl
add
and
inc
push
push
mov
xchg
add
xchg
inc
mov
mov
scas
pop
mov
imul
mov
test
pushf
push
push
adc
lock
pushf
je
and
imul
cld
rcrb
push
pop
repnz
add
sub
lods
jo
data16
testb
dec
addb
mov
adc
dec
cmp
jle
stos
test
icebp
clc
sbb
iret
sub
sbbb
subl
fnstsw
xor
push
icebp
jb
movups
ljmp
shlb
push
cmpl
jne
aad
jmp
rcr
mov
test
xchg
or
aas
fmull
lret
ss
dec
daa
repz
mov
in
mov
push
jp
cmp
popf
arpl
sub
loop,pt
gs
les
clc
arpl
daa
decb
out
mov
add
jmp
xlat
mov
xchg
scas
test
outsb
and
lods
mov
lret
mov
mov
mov
movsl
aas
mov
push
movsl
xlat
out
pop
jo
push
sub
sub
js
in
mov
jno
pop
test
sub
or
enter
pusha
or
cld
sub
mov
loopne
sbb
jmp
shll
mov
loope
mov
xchg
lea
test
negl
and
cmc
in
jecxz
les
lahf
pop
imul
adc
sahf
mov
inc
xor
in
dec
mov
loop
lods
add
lcall
jne,pt
push
and
sbbb
inc
filds
mov
data16
inc
ret
and
ljmp
lods
pusha
sub
add
adc
jge
push
dec
gs
daa
test
aam
and
clc
mov
mov
test
mov
sbb
je
jae
gs
mov
sub
inc
sbb
jg
xchg
sti
test
into
push
fwait
cli
dec
mov
out
mov
pop
sti
dec
fisttpll
mov
hlt
mov
mov
jl
out
push
ret
test
scas
push
jmp
and
in
mov
idivb
mov
xchg
push
fsub
lods
lock
add
push
mov
lahf
jo
repz
pop
dec
inc
lahf
into
mov
adc
cmp
inc
outsb
aas
xor
lahf
ds
testb
mov
out
push
hlt
int3
std
scas
lahf
lods
rcrl
lods
aaa
and
in
std
mov
xlat
mov
filds
sub
sbb
ret
jg
push
rcll
rcr
cmp
rclb
stc
jl
push
pushf
mov
inc
daa
mov
std
js
mov
pop
jbe
fimuls
pop
lods
xor
pushf
dec
in
test
test
iret
movb
call
push
sub
call
sub
out
ds
pop
sahf
stos
mov
or
in
jne
sub
xchg
mov
mov
pop
sub
mov
out
stos
mov
lret
mov
dec
mov
out
xchg
mov
cmp
or
jg
pop
inc
and
dec
fists
inc
push
sbb
inc
xchg
icebp
int3
je
dec
mov
pop
out
adc
push
push
fnstenv
xlat
pop
sbb
hlt
xor
mov
dec
mov
test
mov
cmpsb
dec
sub
xchg
cmp
xchg
mov
push
insb
cmpsb
mov
movsb
cmp
jae
xor
mov
movsl
out
leave
nop
addr16
jae
popaw
aam
ret
cmp
test
cmp
jbe
pop
nop
in
ja
push
mov
pop
imul
mov
data16
subb
mov
mov
fisubrs
outsb
sub
add
xor
rcrl
mov
inc
fbld
push
mov
out
mov
xor
daa
adc
cltd
push
inc
push
sbb
pop
sub
in
repnz
shll
fisttpl
push
lahf
xchg
push
iret
int3
aaa
jne
movsb
push
push
out
lock
cmp
in
or
ret
cld
dec
pop
shl
testl
arpl
cltd
dec
call
stos
aad
sbb
not
mov
lcall
xchg
ljmp
test
loopne
cld
mov
mov
cmp
pop
xor
adc
ret
cmpsb
shll
lds
pop
adc
loopne
xchg
cmc
mov
cmp
xor
dec
add
and
sub
sbb
xchg
int3
sahf
cld
pushf
ret
das
mov
stc
cltd
mov
lret
xlat
int3
or
lcall
fs
inc
mov
into
pop
inc
sti
cmp
shll
ds
fs
mov
jmp
scas
stos
mov
lahf
sbb
mov
or
push
and
xchg
mov
enter
dec
mov
shlb
xor
sbb
popf
xor
sub
mov
mov
mov
repz
out
gs
jns
inc
add
sub
popa
mov
push
jecxz
mov
test
shr
sub
popf
cmc
lea
mov
mov
int
cli
test
sub
lret
imul
lea
addb
jmp
loop
and
sbb
popf
aad
loope
lcall
das
push
add
in
jle
mov
jbe
fwait
nop
idivb
push
add
inc
or
cmp
js
icebp
mov
xor
setbe
insb
jecxz
and
xchg
mov
adc
dec
xchg
dec
test
icebp
test
loopne
xor
insb
dec
test
inc
sti
cli
add
xor
or
in
push
xchg
in
and
or
xchg
mov
xor
cmp
xchg
arpl
xchg
or
cmp
mov
add
aam
sub
lret
out
xchg
add
sbb
push
jns
lods
push
cmp
pop
jmp
or
xchg
and
and
roll
push
cmpsb
mov
nop
in
mov
enter
jecxz
iret
add
pop
pop
mov
clc
stos
ja
leave
inc
sarl
xchg
lock
loopne
filds
cmpsb
mov
in
or
in
adc
xlat
add
lods
xchg
mov
pop
loop
filds
xchg
xchg
sbb
inc
pop
mov
fimuls
pop
daa
sub
mov
sbb
pop
inc
in
xor
cs
adcb
data16
push
push
popa
jg
icebp
popa
push
cld
arpl
sub
adc
icebp
push
mov
int3
mov
dec
stos
in
xchg
out
insb
push
pushf
sahf
and
pop
push
imul
pop
inc
or
mov
and
and
fs
leave
dec
push
movsl
pop
fistps
inc
adc
rclb
je
dec
imul
aam
ficoms
dec
push
add
jo
shrl
add
mov
cmp
jne
flds
and
sub
cld
fwait
mov
lahf
lret
rorb
ljmp
cmp
push
lret
sbb
stos
mov
cmp
insb
inc
cmpsl
lods
popa
adc
test
fsts
rorl
shl
loop
and
cmpsl
cmpsl
rcr
enter
jge
ljmp
jnp
cmpsb
cpuid
cmp
lahf
push
push
ret
mov
push
cmp
sbb
add
imul
jp
lods
or
jae
test
arpl
cli
lret
inc
pop
iret
pusha
pop
adc
ja
xchg
pop
sbb
je
es
sahf
sarl
rorb
mov
inc
mov
aas
or
add
ret
fldpi
sbb
sbb
inc
cmp
cwtl
repnz
scas
cmp
or
mov
jp
stos
dec
mov
mov
mov
add
in
bnd
aaa
mov
das
jns
or
out
inc
and
jl
push
out
push
sbb
mov
fcoml
mov
das
push
imul
pop
xchg
aad
inc
xchg
cli
fmul
and
mov
mov
push
iret
gs
insb
stc
mov
ds
cmp
pop
sbb
pop
int
mov
jge
shll
jns
jmp
popf
inc
fwait
out
fs
add
push
cmp
fstl
dec
jns
inc
pop
cmp
cs
test
sbbb
test
mov
sub
hlt
push
inc
mov
popa
or
fadds
dec
mov
cmp
es
xor
es
int3
and
sbb
shrl
imul
test
and
add
les
push
or
dec
lahf
xchg
imull
inc
sub
xor
sbb
inc
xor
xor
xchg
ret
jne
adc
nop
and
outsb
jmp
xchg
gs
leave
cltd
push
xlat
adc
nop/reserved
pop
fdivs
adc
dec
inc
mov
and
shll
mov
sbbl
jp
lahf
mov
enter
and
out
cmp
ret
fisubrs
stc
ss
and
and
jno
pop
fcoms
or
dec
and
mulb
ja
mov
or
mov
mov
dec
incb
out
lahf
or
pop
add
inc
mov
add
les
pop
pop
mov
push
dec
and
ljmp
add
xchg
repz
inc
sbbl
inc
sub
test
inc
cmp
test
push
loope
mov
dec
je
or
adc
hlt
add
push
xchg
xor
sbb
mov
adc
loop
insl
add
add
ja
sahf
or
mov
fldcw
mov
imul
pop
inc
xor
ljmp
loop
js
or
test
repz
leave
dec
out
inc
push
mov
movsl
cmp
cs
or
enter
mov
pop
orb
cmc
jae
push
sub
or
pop
ljmp
pop
fldl
cli
pop
loope
mov
dec
xchg
mov
mov
addl
inc
add
in
add
mov
xchg
outsl
xchg
adc
std
outsb
inc
jg
outsl
dec
ret
mov
lahf
dec
sarb
dec
or
xor
lods
jne
dec
inc
cmp
lahf
sub
dec
push
pop
fadd
cltd
shl
inc
mov
out
jecxz
xor
loop
dec
xchg
mov
test
ja
add
test
mov
dec
adcl
jl
push
pop
dec
add
cltd
ljmp
mov
movsl
jo
xor
xor
push
cmp
ret
into
fucom
cld
loope
or
insb
pop
pop
aaa
orl
jbe
ficomps
lods
lea
xchg
xor
out
jg
cmp
jp
es
lcall
in
jp
mov
sbb
pop
les
xchg
jecxz
lds
inc
push
not
enter
cwtl
arpl
xchg
das
cs
cmc
iret
loop
neg
dec
mov
xor
mov
add
push
outsb
mov
test
sahf
push
test
fstp
cmp
mov
out
addr16
inc
popa
idivl
push
jle
pop
ds
push
into
mov
cmp
mov
pop
sub
testb
add
jno
adc
ds
adc
mov
cwtl
xor
scas
adc
and
add
scas
jnp
mov
ret
rcrl
jne
xor
push
adc
xor
shrl
push
ds
and
sti
gs
jge
adc
xor
pop
adc
loope
loope
fwait
out
aad
jmp
scas
les
insb
lret
sarl
push
pop
fst
inc
out
mov
inc
cmp
cmp
push
mov
call
mov
stc
inc
pushl
je
out
mov
and
mov
scas
fnstenv
test
sbb
xor
int
sub
push
fsubs
movsb
mov
loopne
pop
imul
sbb
rcll
cmpsb
test
repz
insl
push
jmp
cmp
in
fstl
mov
movsb
mov
or
xchg
jbe
clc
cmp
lahf
jno
fwait
js
sahf
lret
sbb
adc
adc
xor
aam
inc
aam
les
mov
inc
pop
lahf
cmp
mov
mov
sbb
fsubrl
cmpl
gs
and
pop
adc
test
xorl
adc
int3
imul
lock
pop
add
cmc
repnz
cwtl
aam
idivl
in
mov
adc
or
mov
stos
ss
xchg
movsl
int3
in
stos
jnp
call
test
stos
test
je
sub
inc
xor
sbb
xor
adc
or
jns
xchg
pop
inc
out
scas
and
lods
push
int
xchg
or
sub
stos
xchg
dec
shrl
dec
nop
aaa
push
inc
sbb
inc
repz
in
push
in
adc
sub
lods
dec
and
lods
aad
js
sbb
fstps
or
inc
cmp
inc
frstor
das
mov
cltd
scas
mov
mov
in
cld
sub
outsb
mov
jmp
hlt
mov
test
sub
push
and
jns
arpl
xor
fs
jle
les
inc
scas
ja
fnstsw
cmp
loop
es
cld
jb
sbb
mov
xlat
push
add
jl
mov
add
jg
faddl
mov
pusha
or
xchg
mulb
test
xchg
adc
dec
jne
fistps
mov
es
jmp
xor
mov
aas
cwtl
mov
xchg
pop
fs
ja
fisttps
movsb
xchg
mov
inc
push
cwtl
xorl
dec
jno
rcr
xchg
sub
and
int
sarl
xchg
xor
mov
jecxz
and
adc
insb
out
pop
jne
rcll
mov
jmp
mov
shrb
jbe
inc
test
pop
imul
dec
jo
dec
lods
inc
fs
stos
repz
xlat
mov
repnz
mov
out
cltd
rcr
dec
pop
xchg
outsl
outsb
pop
stos
scas
inc
pop
les
das
jg
inc
cs
incb
mov
push
orl
and
mov
fistpll
out
jl
aad
iret
adc
and
cmp
ret
imul
add
lret
or
ljmp
push
or
add
and
sub
mov
lods
mov
pop
scas
add
arpl
aam
addl
sub
sub
loope
ljmp
jo
inc
dec
push
mov
sub
daa
add
and
sbb
arpl
roll
call
hlt
leave
insl
movsl
clc
lock
mov
enter
cwtl
scas
push
lock
out
mov
mov
loopne
sti
mov
push
insb
push
test
cli
add
mov
push
es
fdivs
dec
lds
xor
or
leave
out
out
jmp
aam
jb
add
jl
adc
or
or
iret
fldl
mov
testl
int
fucomi
xchg
pop
pop
cs
mov
sub
pop
mov
adc
shrb
add
jnp
out
inc
out
mov
xchg
inc
or
in
mov
push
adc
jg
insl
scas
testb
into
nop
ds
mov
jb
es
inc
xor
add
and
mov
push
mov
stos
cmpsl
xor
push
ss
lods
pop
ret
out
xor
iret
xor
out
stc
test
std
sti
cmpsl
aam
adcb
jae
pop
xchg
and
sub
popf
pop
mov
and
xchg
test
inc
xchg
sub
int
aam
daa
push
leave
lock
cwtl
jnp
and
lret
int
movsb
push
mov
jl
fyl2x
lds
out
or
push
mov
push
imull
pop
pop
inc
pop
mov
loope
mov
sbb
outsl
xchg
lcall
fistl
mov
rolb
mov
mov
stc
fistpl
arpl
ret
xchg
mov
nop
xchg
jo
lret
andb
stos
jle
inc
push
or
xchg
mov
sahf
mov
aaa
pushf
jecxz
cmp
incb
and
inc
cld
sub
push
addr16
mov
sbb
xchg
add
adc
lods
xor
push
sbb
outsb
and
aas
or
push
push
pop
dec
ds
jb
imul
pusha
pop
popa
pop
add
sbb
popa
mov
or
decb
sahf
or
and
stos
mov
push
sti
add
les
mov
xor
call
add
jno
in
mov
cmp
rcl
inc
xchg
mov
xchg
mov
cmpl
in
sub
mov
xchg
and
cmp
sub
lret
cli
or
cmp
shlb
xor
pop
jbe
clc
and
icebp
dec
cmp
pop
incl
insb
mov
fidivs
repz
andl
or
pop
js
sbb
stc
mov
loopne
pusha
fnstcw
cmp
sti
xor
mov
movaps
das
shrb
pop
les
push
fbld
mov
out
sub
jp
enter
aam
dec
outsl
add
mov
or
pop
and
repnz
scas
das
fwait
enter
mov
das
and
sahf
ret
sahf
lea
cmpl
cvtps2pd
pop
nop
dec
jno
xchg
rcll
shl
add
jl
lahf
test
fistpl
jecxz
sbb
and
popa
jnp
push
sbb
cli
push
mov
in
out
jb
dec
lcall
negb
icebp
inc
mov
ljmp
ret
out
xchg
test
dec
mov
mov
inc
push
jg
xchg
sarb
mov
dec
int
and
adc
jbe
push
sub
imul
or
push
jb
inc
push
add
xchg
shll
push
adc
cmp
inc
and
cmp
arpl
ret
mov
and
sbb
pushl
xor
jae
and
mov
cmp
cmp
scas
or
lods
loop
fidivl
mov
sub
lea
sub
mov
aas
cs
jbe
addr16
cli
hlt
xor
mov
bound
sub
or
mov
out
fimull
outsb
xchg
inc
push
in
sbb
push
movsb
add
mov
adc
in
cmpsb
enter
jnp
hlt
fstpl
loop
cmp
out
sbb
cmpsl
stos
push
fwait
scas
push
es
inc
mov
outsl
cmpsb
imul
leave
sbb
test
dec
mov
dec
data16
push
stos
dec
frstor
std
insl
and
adc
push
cs
lcall
or
arpl
scas
aaa
iret
or
lcall
scas
ret
call
dec
fdivs
into
mov
out
inc
mov
loop
ja
out
out
daa
jbe
push
cmpsb
sti
sub
fwait
mov
mov
pushf
xor
fwait
mov
and
dec
in
cmp
xor
sub
das
lods
dec
push
sub
aam
dec
push
sarb
repnz
in
cmpsl
aad
fildl
sub
mov
mov
mov
pop
jno
shll
pop
mov
and
mov
cmp
push
insl
rolb
mov
xchg
test
imul
sub
dec
insb
or
aad
xor
dec
xor
daa
add
mov
mov
lods
test
adc
ror
fildll
push
and
test
mov
or
negb
inc
ss
test
into
mov
pop
sub
out
jae
jge
jge
xchg
rcrb
inc
cmpsl
mov
addr16
or
mov
xchg
aam
clc
enter
and
flds
push
sarl
scas
dec
adc
cmp
jmp
iret
scas
addr16
je
inc
pop
loopne
lret
add
and
in
and
xchg
adc
lods
lds
mov
jmp
popa
subl
mov
xlat
adc
add
mov
lret
jo
ljmp
rolb
xor
enter
loope
int3
ss
rclb
pop
sub
jecxz
adc
jae
bound
pop
jns
mov
dec
jmp
je
loop
aad
cmp
fwait
add
push
pop
mov
adcb
test
fstpt
push
jo
aam
mov
ljmp
pop
mov
mov
mov
push
cltd
or
out
cmpsb
mov
int3
jp
cmpsb
jnp
push
xor
jnp
fisttpl
leave
push
in
movsl
stos
imulb
les
mov
outsl
fimuls
add
cs
xchg
push
pusha
repz
dec
jo
push
lods
push
test
in
fnstsw
cmp
outsl
bound
lods
or
sti
pop
jne
das
popf
lcall
inc
jmp
fistps
cmp
loop
in
jmp
pop
and
mov
jne
pop
out
jl
pop
dec
xchg
call
loopne
fidivrs
pushf
and
in
xlat
xor
repnz
sub
jmp
lds
jge
scas
stos
pop
jae
setp
scas
fstl
inc
xchg
cmpsl
push
push
mov
jecxz
push
mov
mov
inc
xor
out
fimull
mov
movsl
movsl
out
push
mov
add
lcall
or
std
sub
jmp
insb
push
out
add
lds
out
xchg
sub
mov
leave
movsl
ss
gs
aam
sbb
sbbb
mov
stc
xchg
fidivl
popa
data16
sub
in
sub
orl
pop
fwait
insb
push
inc
ljmp
mul
jno
addr16
iret
lret
adcl
arpl
sbb
xchg
jle
out
fistpll
adc
jmp
adc
cltd
sbb
sahf
scas
movsl
mov
or
sbb
mov
jmp
mov
sbb
lds
addr16
mov
aam
push
jbe
cmp
fbstp
push
pop
pop
mov
movsl
sub
ja
in
mov
les
rorb
sti
add
arpl
jb
lret
jns
insl
adc
push
ficompl
mov
lea
rcrl
pop
jb
jnp
add
xchg
lods
sbb
sub
mov
stc
pop
push
cmp
cwtl
or
adc
or
cld
dec
dec
lret
inc
sbb
mov
je
mov
adc
pop
jo
push
cmp
dec
shll
mov
shlb
mov
lds
rcrl
fildl
notl
js
jle
fs
push
adc
sub
jnp
pop
adc
imul
and
in
test
insl
mov
ds
cld
xor
push
ds
sarb
mov
loope
adc
push
push
movsb
shrb
xor
lods
call
jae
ret
faddl
sub
movsb
pusha
xchg
movsl
cli
sub
jo
call
mov
cmp
call
xor
pop
daa
mov
addl
mov
jmp
mov
add
dec
adc
ficompl
daa
test
jne
jns
sbb
mov
scas
push
sbb
mov
test
push
fdivrs
sbb
dec
outsl
adc
push
ja
aas
xchg
ret
enter
inc
mov
shrl
mov
daa
sub
jo
mov
mov
push
pop
or
cltd
orl
icebp
adc
les
clc
cmp
iret
out
imul
insb
pop
int3
fistpl
popf
test
ss
addr16
mov
adc
cmp
and
stos
inc
mov
rol
test
out
push
jb
jnp
jns
fiadds
mov
js
inc
stc
jl
mov
xor
test
pop
jae
pop
dec
outsb
adcl
push
dec
mov
loop
in
stos
jl
dec
mov
nop
mulb
rcrb
out
dec
mov
lea
and
idivb
add
pop
data16
andb
jp
rcl
das
or
push
xchg
cld
cmp
test
and
sarb
and
enter
cmc
rolb
pushf
data16
push
gs
push
out
cmp
sbb
add
jns
mov
movsl
out
pop
pushf
stc
nop
fildll
mov
xor
in
jle
mov
mov
pop
cmp
mov
mov
fs
and
repnz
int
jge
ret
rol
int
imul
add
add
mov
les
mov
inc
out
pop
dec
ljmp
negl
dec
aam
test
xchg
insl
cld
inc
es
into
xor
or
dec
dec
fstps
pop
add
ds
mov
xchg
repnz
sbb
jns
call
orl
sbb
mov
pop
sub
outsl
int
scas
or
sub
out
sbb
mov
and
out
insl
nopl
movb
mov
push
cmp
std
push
aaa
add
xor
out
xor
jne
fs
mov
jmp
ret
inc
out
lahf
aam
fisttps
inc
xchg
pop
xor
mov
jge
aad
nop
xor
les
add
cwtl
jb
rdpmc
stos
add
cmp
mov
xor
sub
movsb
out
and
sub
hlt
lcallw
adc
jl
or
push
or
insl
adc
stc
insl
jl
ljmp
subl
out
cmc
mov
xor
jno
je
mov
cmp
add
insb
dec
pop
mov
loopne
and
and
fadds
sti
test
iret
shrb
sahf
cmp
insb
push
lock
in
jae
ret
adc
test
sbb
popa
popa
rcr
test
pushf
jle
sbb
out
mov
jae
xchg
xor
add
and
inc
gs
into
rclb
dec
xorl
lods
dec
mov
push
stc
jle
sbb
xchg
dec
pop
cmc
mov
test
xchg
mov
ljmp
adc
pop
out
mov
sti
mov
push
sub
xlat
pop
sbb
ror
shr
decl
xchg
dec
xor
mov
hlt
cli
mov
rcrb
movsb
mov
push
and
arpl
xor
jnp
push
aad
mov
fdivrp
sub
icebp
and
fwait
int
xchg
es
rorb
ljmp
xor
jge
push
in
mov
gs
pusha
mov
ss
dec
es
in
jno
xor
inc
scas
mov
pop
cmp
cmc
xor
jmp
push
mov
jmp
cltd
inc
inc
sbb
scas
or
stos
adc
ss
imulb
fwait
dec
pop
mov
dec
mov
stos
sub
test
push
stos
cmp
jns
jne
inc
into
fdivl
int3
add
pop
xchg
add
test
leave
xchg
fcom
mov
data16
mov
sbb
inc
sarb
jle
lock
and
jo
jb
push
jno
sti
loope
movsl
loope
jno
das
mov
ret
imul
aas
dec
es
notl
mov
sarb
jno,pn
and
shlb
leave
cli
pop
aam
xchg
push
std
iret
mov
call
push
ss
cli
pop
sub
pop
jne
jmp
mov
xchg
push
mov
sbb
scas
xor
popa
adc
fstps
fstpl
testb
jp
xchg
pop
pop
xlat
loope
std
jbe
xchg
cwtl
sahf
pop
pop
mov
fdivr
jmp
subb
into
dec
mov
loop
add
sub
out
sbb
xorl
les
hlt
test
mov
push
push
dec
aad
jmp
test
push
out
add
das
fdivrs
mov
sti
adc
inc
ja
mov
sbb
mov
pop
inc
or
imul
out
sbb
daa
mov
outsb
xchg
sti
popa
lea
ja
mov
js
or
and
pop
in
lods
mov
push
leave
repz
das
xor
aas
push
jl
mov
mov
mov
sbb
inc
mov
pop
jg
mov
push
dec
pusha
aam
mov
movsb
cld
jle
popa
fistpl
lret
jns
jbe
xchg
int
sub
sbb
cmpsl
fsubl
dec
fs
nop
jo
pushf
or
enter
and
out
jge
stos
xchg
lods
dec
popa
lret
divb
add
mov
pop
das
fwait
clc
mov
or
cs
dec
aam
clc
xchg
sub
cmpsb
lcall
inc
aaa
mov
repz
pop
mov
jo
outsl
jae
dec
mov
movsb
jge
sbb
and
stos
pusha
cld
imul
mov
push
adc
xor
mov
mov
test
fsts
in
imul
sub
adc
inc
loop
daa
repz
xlat
out
ret
dec
popa
mov
inc
cwtl
push
mov
hlt
in
or
xchg
pop
out
iret
dec
fistps
rcll
outsl
ds
jb
cmp
mov
mov
jecxz
negl
movsb
mov
push
addr16
loop
and
cmpsb
mov
push
aam
push
inc
sbb
dec
mov
icebp
adc
rcrb
pop
sub
mov
out
scas
jecxz
andb
mov
repnz
ja
pop
cmp
xor
pop
cli
dec
jg
sub
adc
push
jnp
repz
mov
loopne
pop
xor
jo
cwtl
mov
adc
pop
or
or
push
popf
inc
fwait
sbb
int
jno
pop
cmpsl
mov
cmp
xchg
push
mov
pop
mov
test
repnz
xlat
cmpsl
mov
dec
das
subb
iret
stc
je
jmp
push
add
xor
jp
imul
lret
test
dec
sbb
lods
in
ficoml
mov
push
xchg
xchg
mov
pop
xor
addr16
mov
filds
lahf
test
daa
outsb
jno
sub
sarl
int
mov
push
mov
sub
sbb
dec
mov
adc
test
test
rorb
fsubrl
push
jle
mov
pop
mov
pop
dec
pop
shlb
ror
xchg
arpl
lret
scas
lret
cmp
pop
stc
arpl
inc
mov
nop
stos
je
and
mov
pusha
icebp
push
dec
out
es
leave
push
dec
je
fidivl
cmpsb
sbb
in
leave
pop
bnd
jp
fistpll
sub
cmp
lds
outsb
movsl
inc
test
daa
shl
int3
popf
mov
int
mov
cltd
in
sbb
inc
icebp
int
jne
loop
in
xchg
cld
xchg
arpl
dec
xchg
xlat
movsb
xor
arpl
and
mov
adc
mov
dec
ja
cmpsl
leave
arpl
pop
out
int
push
sub
lods
sbb
mov
mov
lea
dec
aad
sub
push
mov
push
push
cs
dec
gs
and
dec
stos
sbb
xchg
or
and
mov
inc
inc
mov
hlt
aad
fiadds
icebp
shll
and
pop
mov
lods
std
add
pop
mov
lds
mov
or
mov
sbb
divl
mov
sbbl
arpl
mov
stc
pop
mov
test
leave
and
sub
mov
sub
lret
xchg
js
mov
outsb
add
pop
sub
and
cmp
sub
mov
add
mov
and
pop
addr16
push
in
cli
push
sti
out
push
loop
sbb
adc
addb
mov
std
std
shrl
mov
push
movsl
je
clc
int3
pop
test
or
testb
jle
in
fistpl
add
cmpb
jb
cmp
scas
cmp
xchg
push
xchg
mov
gs
mov
push
xor
inc
xchg
pop
cmp
jns
das
aad
out
insb
mov
ds
stc
dec
cmp
and
xchg
cmpsb
mov
cmp
aam
loopne
shlb
xor
inc
pusha
aas
adc
cmpsl
enter
cmpsb
aaa
mov
mov
xchg
out
mov
mov
mov
pop
sub
cmc
pop
push
cwtl
ret
aas
cltd
lods
loope
push
aam
pop
cmp
call
sti
jmp
arpl
aas
cmp
js
cwtl
ret
mov
subl
outsb
mov
mov
ss
sqrtps
sub
outsl
inc
mov
or
stos
sub
mov
pushf
jle
in
xchg
inc
icebp
or
xor
sbb
xchg
xor
in
push
pop
int3
int
jno
pop
out
and
cmc
shl
pop
push
sarl
nop
mov
mov
imul
int3
cwtl
jb
test
adc
out
mov
ret
add
or
lds
dec
jle
adc
orl
xor
pop
dec
xorl
hlt
and
fdivrs
add
pop
or
cmp
out
call
sbb
mov
jle
test
pmullw
mov
int3
sbb
push
xchg
dec
leave
and
mov
xchg
cli
inc
inc
movsb
inc
adc
add
aad
push
cmpsb
hlt
sbb
and
sarb
gs
cmpsl
add
xorb
icebp
cmp
insb
cs
out
add
lahf
rcrb
add
ss
lret
shrb
inc
mov
push
pop
inc
or
sub
inc
jno
lods
jg
iret
push
and
or
in
lcall
cmpsl
lock
xchg
cmp
scas
sbb
into
cwtl
dec
add
out
xchg
incl
addr16
sub
xor
cmp
adc
add
pop
add
mov
fidivl
lds
enter
jg
orb
and
cmp
enter
xor
stc
rcr
adc
mov
rol
add
push
popf
ret
pop
bound
push
xor
sbb
xor
je
mov
lcall
hlt
dec
mov
xor
clc
test
mov
adc
in
mov
cmpsl
dec
push
xchg
inc
mov
mov
adc
sub
in
or
and
sarb
inc
insl
cwtl
mov
cld
mov
or
das
out
lahf
xor
adc
pop
jle
fimuls
sbb
or
shlb
cmpl
daa
and
rorl
fcoml
push
push
repnz
cwtl
loope
sbb
mov
decl
xchg
enter
sbb
cmpsl
stc
pop
or
shll
ss
and
cmp
mov
ret
loope
out
jge
jb
lods
xchg
dec
mov
roll
iret
arpl
jle
lcall
push
test
dec
push
push
outsl
cmp
push
inc
xchg
sub
cmpsl
addr16
nop
std
stos
sti
mul
mov
idivb
xchg
dec
mov
sarb
es
pop
xchg
in
dec
dec
push
pop
sahf
pop
pop
mov
xchg
shlb
xchg
dec
ret
idivb
mov
jbe
pop
dec
push
add
mov
das
dec
adc
lret
int3
cmc
jbe
push
or
xchg
inc
jno
xor
push
pushf
out
bound
jns
mov
in
gs
sub
xchg
xchg
fimull
sub
mov
mov
push
mov
or
push
imul
push
js
sbb
jae
sahf
mov
inc
int
mov
mov
arpl
mov
adc
push
ljmp
adc
mov
imul
fcoms
xor
mov
jb
add
push
loope
hlt
les
fnstcw
xchg
xor
mov
add
subb
sbb
add
dec
and
add
out
dec
outsl
subl
aam
pop
lea
mov
mov
mov
fdivp
or
pop
mov
cmp
mov
jns
mov
pop
adc
popa
push
mov
ljmp
stos
inc
cmp
xor
andl
add
jmp
jo
mov
mov
cmp
outsb
push
push
sub
pop
sbbb
out
xchg
push
xor
mov
and
cmp
pop
mov
xor
pushl
cld
shlb
mov
test
andl
xor
fbld
or
shll
cltd
test
add
fcompl
adc
sub
inc
mov
cmp
pop
pop
rclb
pop
push
rol
sbb
int
rsm
sbb
cmpsb
sbb
in
fucomip
mov
sbb
sbb
cmp
fidivs
jecxz
test
cmp
popa
mov
jae
outsb
jae
or
inc
out
pop
call
inc
leave
sub
push
jle
aam
pusha
inc
mov
sub
and
push
push
ret
add
cs
sbb
in
mov
mov
lock
divl
adc
cmc
shll
push
popa
push
aad
mov
jne
jmp
cwtl
inc
sbb
lret
or
sarl
cmpsb
je
xchg
stc
mov
outsb
mov
mov
mov
xchg
rolb
xchg
sahf
jnp
icebp
mov
test
and
sti
jno
mov
shl
cmp
or
sbb
loope
and
fidivrs
cmp
cmp
mov
fwait
aad
mov
xor
mov
jg
mov
cmp
fucom
insl
loopne
jae
ret
aad
lcall
pop
outsb
jl
push
xchg
sbb
jg
rcll
xchg
cmp
bound
mov
leave
fbstp
mov
mov
pop
roll
jb
mov
icebp
rcll
out
push
leave
aam
mov
dec
mov
aad
cmp
fcompl
icebp
loopne
push
mov
pop
xchg
xor
xor
std
pop
jp
or
xor
and
loop
sti
bound
jno
aaa
jmp
cwtl
sbb
lcall
fidivrl
jb
add
push
insb
sbb
popa
add
mov
mov
push
mov
ljmp
pop
fisubrs
repnz
cmpsb
xor
jmp
jo
scas
loopne
adc
or
dec
nop
xchg
shl
lret
jae
dec
cmc
into
repz
arpl
push
xchg
dec
mov
mov
orl
xchg
jmp
mov
sub
pop
adc
cmp
sbb
mov
add
stos
inc
sub
xchg
adc
cltd
dec
popf
ds
jl
test
mov
int3
inc
loope
xor
test
icebp
gs
inc
outsl
mov
or
inc
dec
fcompl
jae
es
sbb
sub
sub
je
daa
cmpsb
enter
inc
mov
push
adc
icebp
mov
push
out
sarl
pop
push
jecxz
add
in
inc
cmp
fcmove
jnp
push
jle
push
test
sbb
and
xor
sub
dec
add
icebp
cmp
dec
mov
jns
xchg
and
lods
xchg
pop
jno
sub
push
pop
ljmp
pop
add
je
push
jmp
clc
jmp
fs
cmpsl
fdiv
cli
in
add
jecxz
mov
jbe
fwait
xchg
int
mov
cltd
adc
cmp
lret
out
push
cs
ljmp
je
out
in
ljmp
cmp
xchg
fwait
jg
inc
fistpll
sbb
test
fs
and
pop
jno
cli
push
in
add
ss
fisubs
jmp
mov
mov
xor
jge
adc
xor
inc
mov
sbb
sbb
hlt
jle
pop
mov
out
in
mov
out
sets
cmp
into
loopne
sub
arpl
inc
mov
mov
jge
jbe
stos
ficoms
mov
mov
in
cmp
inc
in
add
cs
leave
mov
pop
lods
inc
ret
or
pop
push
push
clc
hlt
xchg
adc
int
jno
push
popa
fcoms
sbb
lods
test
cmp
es
cmpsl
mov
es
or
adc
pop
adc
dec
stos
add
or
das
mov
jp
dec
and
test
cli
inc
mov
push
fldl
mov
xor
lods
pop
hlt
pop
mov
les
xchg
mov
jmp
lahf
fwait
mov
mov
sbbl
push
mov
test
dec
mov
push
icebp
xor
sub
adc
jmp
add
jno
ret
xchg
add
and
es
rcll
jp
mov
xchg
sbbl
sub
addr16
mov
cmpsb
sub
int
repnz
stos
xchg
inc
inc
mov
fisubl
cmpsl
xor
sub
jae
jge
pop
daa
pop
mov
shl
push
xlat
cli
ret
pop
or
lea
sub
lea
mov
add
in
adc
jnp
shrl
fisttpl
icebp
cli
sti
idivl
inc
fwait
or
imulb
dec
loopne
clc
js
mov
mov
stos
mov
or
cld
int3
stos
inc
mov
cmpsb
loop
arpl
sbb
mov
lods
adc
inc
test
cs
or
push
mov
test
cmpsl
and
or
mov
mov
cmp
push
push
frstor
jge
pop
cmpsl
and
dec
cmpl
inc
push
cwtl
adc
out
cmc
adc
sbb
insb
out
jae
and
addr16
out
out
ror
mov
outsb
inc
mov
jmp
pop
jle
and
stc
xchg
loope
imul
mov
sub
push
jo
in
repnz
sbb
daa
xchg
mov
lods
or
test
xchg
hlt
pop
or
sub
jne
push
in
loope
jecxz
push
aas
mov
pop
sub
fiaddl
jno
scas
jl
imul
cli
shlb
insl
fsubl
add
add
inc
push
lods
repnz
hlt
cmp
xor
xor
fadd
aas
pop
pop
jecxz
fcmovne
jb
lret
movsl
in
mov
xor
sbb
mov
pop
enter
add
fdivrs
adc
lret
dec
icebp
pop
scas
push
mov
cli
push
cld
cmp
fs
cld
fs
adc
xor
cmp
pop
fcomp
aad
adc
pop
or
in
lcall
xchg
scas
adc
rol
mov
cs
dec
ljmp
dec
sub
mov
sub
in
sub
mulb
mov
aam
or
sbb
mov
stos
jbe
mov
movd
pop
rcrb
fwait
xor
cmpsb
lea
add
push
sti
xlat
xchg
dec
stos
adc
jae
inc
sbb
mov
aad
xor
test
xchg
insb
jl
out
cmp
adc
jbe
je
stos
add
push
add
mov
inc
les
xor
jge
enter
clc
nop
loop
inc
lahf
mov
pusha
movsb
fs
adc
in
mov
mov
ja
dec
pop
sub
shlb
dec
push
mov
mov
or
sub
sbb
push
push
imul
mulb
and
fwait
and
pop
lods
pop
xchg
pop
xchg
shrb
inc
lods
fdivrs
imul
mov
xchg
or
jbe
mov
xor
out
in
sarl
lret
lcall
shr
in
leave
loopnew
cmp
add
dec
cmp
leave
jae
movsb
push
inc
iret
lods
mov
cli
mov
inc
lods
inc
in
dec
aad
xorb
push
je
xchg
lea
adc
sbb
jp
sbb
stc
add
inc
mov
xor
loopne
sbb
rorb
stos
into
cmp
mov
aas
jp
push
gs
mov
rcr
aam
es
mov
in
cmpsb
push
fidivrs
adcl
mov
cwtl
sub
movsl
shll
aam
rclb
jg
mov
lea
sub
sub
add
aas
in
imul
bound
imul
fisttpl
jno
sub
push
stc
cmp
data16
pushf
add
cltd
jecxz
popa
rorl
popl
loopne
xchg
add
and
mov
pop
sub
cmp
ljmp
mov
pop
jns
sbb
xlat
inc
cs
out
add
retw
sub
or
sahf
inc
bound
loopne
jno
pop
add
fstl
xor
mov
mov
call
lret
jbe
stos
add
xor
arpl
sti
pop
push
popa
cltd
jnp
or
in
in
pop
pop
lret
cmp
iret
xlat
sbb
mov
adc
in
mov
sbb
inc
jb
pushf
xchg
enter
mov
xchg
dec
adc
test
push
push
and
mov
mov
sti
mov
fwait
mov
int
dec
out
shl
out
outsl
pusha
dec
inc
lahf
in
sub
andb
adc
jbe
ss
test
mov
pop
movsb
loope
mov
cmp
push
int3
bnd
lods
sbb
xor
notl
jo
mov
mov
or
sub
push
sbb
xlat
mov
pop
div
lock
insl
jae
pop
or
les
pop
sub
into
ljmp
add
fucom
mov
push
jecxz
movsl
mov
mov
mov
sbb
dec
push
inc
movsl
jg
mov
movsb
pop
xchg
fnstsw
mov
scas
iret
lahf
sahf
insl
pop
js
faddl
cltd
sub
fcomps
loope
and
xchg
push
je
mov
jl
out
ljmp
pusha
pop
insl
pop
sub
mov
xlat
in
xchg
jge
fisttpll
cmp
xchg
dec
or
push
mov
push
ret
cmp
push
or
sahf
fwait
mov
flds
push
test
and
xchg
sarb
cmp
ret
dec
movaps
icebp
cmp
rcrb
or
jae
testl
dec
xchg
mov
stos
inc
mov
cwtl
mov
add
ja
jne
jae
or
cmc
incl
ds
jecxz
shlb
out
and
imul
cltd
or
lods
jb
cmp
jl
pop
lock
xchg
pop
test
xor
aam
jle
or
adc
or
pop
mov
sub
aaa
pop
mov
mov
jno
sbb
inc
js
add
ds
mov
cli
jmp
jns
push
xchg
mov
pushf
xchg
sub
mov
push
jbe
mov
jmp
pop
lods
jmp
push
sbb
jns
sbb
add
sbb
outsl
add
xor
mov
jno
inc
mov
and
jl
mov
repnz
sbb
push
or
movb
push
lea
loop
fisubrl
subl
mov
xor
jge
psubusb
mov
cmpsl
dec
mov
sbb
push
sbb
fcompl
js
scas
sbb
jno
push
xchg
sub
ret
mov
test
out
jns
out
or
inc
inc
push
cmp
fidivrl
pop
lods
popa
lea
cli
xchg
je
xchg
sbb
popf
mov
dec
dec
push
mov
xchg
jg
les
cmpsl
mov
movsb
add
adc
pop
lds
ljmp
out
into
lds
outsl
jg
jge
fstpt
fs
jmp
jnp
push
sbb
jo
ja
push
das
and
adc
pop
cmc
inc
stos
fiaddl
int
xlat
mov
aam
add
mov
out
sahf
repnz
imul
scas
cld
add
dec
pushf
sub
cmc
iretw
icebp
mov
fists
add
push
adc
mov
fldcw
in
mov
dec
cmp
pop
punpckhwd
shl
mov
test
test
cmp
pop
out
pop
xor
mov
cli
std
or
in
cld
aam
sbb
push
ljmp
ljmp
cmp
js
sbb
xchg
out
clc
in
xor
dec
push
cmp
fisttpl
rclb
or
pop
cld
leave
rclb
clc
sbb
lds
mov
jb
xor
xor
testl
and
fists
adcl
inc
ljmp
xor
or
sbb
jg
mov
sbb
sbb
cs
jle
orl
push
lds
mov
mov
jns
dec
xchg
mov
push
mov
mov
cmp
or
dec
sbb
ret
mov
and
movsb
adc
jns
lcall
sub
push
sub
xchg
and
mov
lahf
lahf
pop
sbb
adc
rcrb
nop
movsl
push
dec
pop
sbb
cli
mov
cmp
gs
cmp
mov
test
mov
lea
sbb
cmp
xchg
imul
jae
sub
jecxz
dec
and
cmp
inc
bound
mov
mov
xrstors
clc
dec
sbb
fisubrl
loop
push
test
add
fisubrs
int3
inc
push
cli
push
cmp
enter
adc
pop
mov
sbb
pusha
imul
mov
cmp
fwait
movsl
int3
xor
cmpsl
pop
test
addr16
sub
mov
add
sbb
jmp
out
dec
sub
push
fsts
sub
repz
loope
pop
sub
pop
ss
mov
push
sbb
arpl
and
or
jge
adc
add
inc
and
pop
aam
scas
in
daa
subb
lods
into
inc
xlat
pop
xor
jns
les
mov
out
mov
xor
ret
scas
bound
jle
in
sbb
sbb
xchg
fbstp
jmp
dec
jmp
addr16
daa
in
shlb
jecxz
add
negl
mov
insl
jmp
lods
lcall
inc
add
imul
mov
cltd
mov
add
popa
mov
lods
ljmp
popf
sbb
bound
jnp
inc
adc
add
mov
sti
push
push
push
test
adc
rcr
mov
mov
mov
mov
dec
movsb
or
popf
les
mov
pop
das
dec
push
in
xor
and
fcmovnbe
fisttps
rcll
push
sub
xor
je
xchg
insl
mov
jp
pusha
xchg
ret
jmp
js
cltd
arpl
in
leave
mov
inc
imul
mov
mul
mov
push
pop
paddd
stos
aam
cwtl
xlat
xchg
test
in
sbb
pusha
pop
aad
adc
sbb
fidivs
test
mov
or
lds
scas
lock
mov
jl
cmc
popa
mov
fdivs
jbe
loope
jns
cmp
xor
sub
inc
cld
jmp
mov
sarl
xchg
mov
or
inc
test
mov
xor
or
ret
shlb
mov
fs
xor
leave
sbb
call
sbb
xor
insb
enter
fiaddl
jb
rcrb
fistpll
inc
and
test
mov
imul
cld
adc
cmp
std
fwait
push
mov
int
ret
jmp
mov
push
dec
mov
das
lds
mov
stc
mov
lret
scas
shlb
js
xchg
fwait
pop
xchg
stos
sub
jbe
lahf
sbb
jb
inc
imul
lods
mov
mov
jbe
sbb
xchg
hlt
push
cmp
je
dec
andl
sbbb
or
lods
xchg
int3
xchg
dec
cld
push
push
rcr
lods
mov
pushf
dec
fs
ret
xrelease
xchg
mov
sub
xor
mov
out
call
xchg
dec
cltd
xor
and
and
fcom
in
dec
imul
push
cmp
addr16
jecxz
fisubs
adc
xchg
popa
lds
lret
jns
xchg
dec
lods
or
sub
adc
pop
mov
lahf
call
ljmp
push
arpl
test
dec
adc
in
clc
js
les
dec
inc
ljmp
loop
iret
arpl
icebp
pop
out
clc
add
lcall
dec
xchg
insl
stos
mov
and
std
sbb
cltd
shrl
pop
sar
xor
nop
shrb
mov
jp
insb
rolb
push
pop
orl
push
mov
test
sub
push
or
fdivrl
push
in
fstpt
xor
dec
dec
inc
or
cmp
push
xchg
out
and
loop
daa
xor
cmpsl
ja
add
imul
andb
mov
repz
dec
stos
stc
ss
xchg
sub
test
sbb
and
cmc
movsb
xchg
test
sbb
pushf
inc
repnz
xor
xor
mov
leave
sbb
sbb
jnp
cs
or
mov
call
add
mov
sub
sti
dec
rorl
das
fildl
or
adc
mov
fcmovbe
adc
in
repz
adc
das
mov
adc
in
das
push
push
test
mulb
mov
jnp
gs
push
push
hlt
pop
push
pusha
in
jl
pop
stos
and
jle
sub
lea
sub
mov
and
iret
lret
or
repz
das
icebp
hlt
nop
xor
cmp
daa
mov
dec
jle
rcrl
pop
xor
xor
mov
je
adc
xchg
or
mov
jg
icebp
bound
jae
insl
cwtl
push
dec
out
cmp
xchg
stc
aaa
mov
xor
aad
int3
xchg
cmp
mov
pop
pop
sahf
push
daa
push
cmpsl
add
push
fiadds
cmp
testb
xorb
cs
aam
in
stc
pop
call
sbb
gs
and
mov
rcl
jge
enter
and
lock
mov
arpl
insb
inc
imul
sbb
and
adc
icebp
test
or
sub
les
sub
fwait
xchg
repz
xchg
fdivr
sti
push
add
pushw
rorl
mov
out
xor
inc
inc
enter
pop
aam
cltd
insl
adc
and
cld
std
loop
ret
pop
lods
push
out
mov
jle
icebp
add
nop
sbb
aad
ljmp
and
cmc
int3
aam
jo
fldl
outsl
or
push
sbb
shlb
jge
fldenv
or
add
xchg
and
xchg
lds
ds
adc
jnp
adc
jae
call
outsb
leave
or
mov
jle
jecxz
mov
sub
fdiv
jnp
lret
stos
cmpl
or
je
shll
popa
outsl
test
jo
sbb
push
repz
or
xchg
push
mov
cmp
daa
mov
jo
lret
ss
rorl
dec
test
shl
mov
mov
add
cmp
mov
push
fsts
hlt
xor
cmp
inc
out
popf
out
btr
loope
push
stos
lods
sbb
rol
and
adc
adc
xor
fistl
loope
cltd
xor
ds
pop
mov
sub
add
add
push
xchg
mov
dec
test
push
hlt
sub
mov
push
xchg
dec
testb
add
in
push
sahf
fdivrl
xlat
mov
xor
stos
and
sub
and
movsl
jae
dec
mov
frstor
or
mov
adc
jb
and
jno
xor
xchg
loop
fidivl
inc
into
jle
and
sub
cmp
adc
or
mov
or
dec
or
sbb
data16
sbb
mov
push
mov
mov
cpuid
fnsave
gs
sub
or
jns
cmp
mov
mov
mov
mov
mov
add
or
dec
cmp
xor
out
sti
fistpll
outsb
pop
scas
jg
sbb
fucomi
jo
lds
adc
lret
fstps
cld
mov
mov
test
in
ja
dec
popa
mov
fisubrl
lret
cmp
mov
in
fbld
sbb
and
fisubl
push
jl
insb
ss
pop
loop
inc
mov
adc
xchg
xor
push
jb
gs
imul
lcall
lcall
test
ret
test
jnp
dec
lods
and
mov
ds
mov
mov
xchg
jp
fmulp
inc
repz
sbb
das
mov
cmp
pop
gs
cli
ljmp
mov
pop
add
xchg
push
mov
fld
arpl
dec
mov
iret
mov
and
dec
pop
mov
xchg
loopnew
repnz
rcrl
push
test
or
jmp
popf
lahf
jge
dec
test
bound
cmp
outsb
data16
jmp
or
mov
mov
mov
gs
into
mov
sti
in
mov
xlat
sub
mov
into
mov
insb
inc
fcoml
xor
push
pushf
js
das
test
jg
push
sahf
and
ljmp
mov
into
sub
sbbl
sub
mov
mov
imull
pop
push
cmp
inc
xchg
sbb
loope
aaa
xchg
push
stos
jecxz
daa
hlt
ss
int
sub
insb
push
scas
repnz
cs
lock
lea
jbe
fdivrl
push
inc
les
mov
adc
adcb
mov
or
push
outsl
ss
jmp
mov
aam
jne
mov
push
mov
test
xchg
inc
push
dec
xchg
leave
icebp
je
add
int
cmp
ss
push
pop
adc
inc
scas
jae
xor
insb
mov
push
pop
ja
mov
add
xor
cmp
xchg
fidivrs
mov
lret
lds
fldcw
cld
repnz
test
jnp
movb
ffreep
in
clc
rclb
aad
js
lods
pop
repz
lret
push
and
inc
test
clc
and
fnstcw
or
je
adc
in
icebp
jg
adc
ds
and
fldl
shlb
sub
enter
sahf
push
jbe
add
or
das
dec
addr16
sahf
in
xor
mov
sbb
stos
fmull
dec
into
test
hlt
sarl
sti
inc
sbb
mov
addr16
jb
mov
and
inc
jns
lret
xor
pushf
cmp
rcrl
mov
push
mov
cmp
cmp
or
sti
xor
jae
lahf
cmc
jno
rcll
sub
jns
mov
gs
bound
rorl
dec
cmpsb
lret
cmp
rcll
pop
shr
out
in
repnz
adc
lahf
ljmp
sub
fldcw
jmp
xor
jge
insl
pop
mov
ror
pop
es
adc
dec
push
outsb
sbb
ret
cmp
push
popf
lcall
and
dec
push
push
mov
sub
and
mov
push
pop
out
imul
inc
cmpsl
nop
pop
lret
mov
lea
xchg
pop
push
dec
mov
cmp
aam
cmp
rcrl
dec
test
lock
aad
movsl
fidivrl
insl
iret
aad
mov
push
xlat
xchg
sbbb
mov
test
jb
imul
adc
mov
adc
push
sub
add
test
jecxz
xchg
xor
daa
ljmp
mov
icebp
jg
fistl
lock
fiaddl
pop
xchg
add
mov
int
xchg
xchg
jbe
fdivr
push
mov
mov
insl
mov
enter
xchg
sbb
fs
cmp
jbe
shrb
cmpsl
adc
adc
repnz
mov
subb
dec
pop
rcl
mov
int3
or
shl
in
int
mov
lret
sub
mov
test
inc
lea
stos
pop
xchg
mov
jmp
aaa
mov
inc
mov
sti
cmpsb
cltd
and
mov
mov
outsb
sub
inc
imul
dec
dec
lock
mov
jmp
or
mov
daa
push
push
push
jns
imul
cwtl
mov
and
add
mov
and
mov
inc
jae
ljmp
push
insb
insb
pop
test
xchg
sub
mov
and
scas
test
dec
sahf
stos
cmp
adc
cmpsb
push
mov
ss
dec
mov
add
sub
lret
jne
lahf
fdivr
and
ja
subl
lret
cli
insl
xchg
add
cmp
lods
fs
insb
ja
xlat
mov
ss
or
sub
daa
jle
jmp
hlt
or
int3
outsl
mov
daa
jo
int
pop
pop
jle
push
mov
fsubrl
xor
loopne
xchg
test
lret
sub
dec
test
aam
outsl
addb
adc
int3
cli
aas
fwait
mov
sub
int
nop
mov
add
pop
sbb
or
xlat
aad
scas
lahf
arpl
dec
push
std
dec
out
shlb
jne
cmp
sbb
sub
jge
sbb
sub
gs
nop
jbe
out
mov
fidivs
stos
adc
ds
xor
repz
lods
jge
mov
xlat
sbb
jnp
ds
push
mov
and
or
sbb
hlt
aam
mov
xchg
fcompl
xchg
inc
jmp
out
fisubl
sub
imull
insb
jecxz
ret
inc
adc
lds
cmp
cs
inc
loop
js
sub
repnz
sbb
and
jge
mov
pop
sub
icebp
pushf
xchg
inc
shl
pop
inc
xchg
enterw
aaa
lea
pop
sub
adc
and
sbb
arpl
lret
das
and
xor
cmp
stos
adc
mov
jp
sub
adc
pop
mov
dec
adc
add
movsb
int
adc
frstor
jl
mov
pop
das
jle
mov
test
cli
push
mov
movsl
imul
rclb
xor
push
cmp
std
xor
cwtl
outsb
movsl
jge
xor
push
cs
movsl
popf
jecxz
dec
stos
ds
push
mov
lahf
pop
sub
mov
lods
scas
cmp
jbe
adc
test
rorl
inc
add
adc
mov
mov
jge
mov
test
mov
roll
pop
cmp
shrb
push
je
pusha
mov
jnp
sub
mov
and
cs
add
jo
dec
cld
jns
stos
push
ds
pop
outsl
iret
or
cmp
iret
stc
sbb
in
in
pop
jmp
mov
fidivs
jbe
arpl
jns
loop
fcmovu
addr16
jge
in
push
lock
jmp
adc
cmp
cmp
lods
movd
add
and
jg
int3
or
cmp
xchg
xor
push
mov
mov
std
fwait
push
fiaddl
pop
lahf
and
mov
rcrl
pop
ljmp
andl
xchg
idiv
icebp
in
jg
es
dec
or
rcll
cmp
daa
xor
stc
push
mov
fisubl
je
push
sbb
add
xchg
cmp
push
ds
loop
sub
xor
imul
mov
sub
xor
mov
lock
loope
fwait
sub
shl
jp
xor
mov
pop
sbbl
in
add
mov
pusha
test
lods
mov
xor
mov
push
mov
xchg
mov
stos
jle
nop
mov
mov
dec
shrb
or
out
xor
popf
cmp
mov
mov
inc
and
pop
sub
xchg
xor
cmpsl
push
pop
mov
cmp
test
dec
fsts
hlt
in
lret
std
repnz
shr
cltd
arpl
daa
adc
xchg
and
pop
and
imul
mov
mov
cmp
test
mov
ja
mov
ficompl
inc
mov
push
inc
push
sbb
add
hlt
loope
cmp
popl
mov
sbb
push
xor
imul
xchg
dec
or
or
dec
lods
jne
test
and
xchg
fwait
adc
mov
sbb
xor
mov
mov
scas
mov
xchg
test
lods
jge
jecxz
rol
jb
dec
or
call
cli
push
sub
lret
movsl
xchg
xor
add
push
clc
sub
out
xlat
hlt
cmp
xlat
push
jae
gs
loop
fcoms
dec
dec
scas
xchg
inc
cmp
fs
cltd
rcrl
imul
outsb
pop
push
ja
testb
sbb
jl
xlat
or
sarb
out
dec
sbbb
cmp
jl
pop
jecxz
je
fcoml
mov
jmp
sbb
addb
xor
loopne
test
push
inc
scas
xor
jno
rcrb
jge
lcall
and
xor
or
mov
xor
sub
ret
mov
xlat
addl
xchg
sbb
adc
insb
jb
jne
ds
int3
int3
dec
and
inc
dec
adc
ja
dec
test
mov
sub
mov
fstpl
jo
mov
mov
pop
push
lea
inc
sub
fisttpl
shl
jbe
add
fnstcw
cs
mov
mov
cli
pop
mov
pop
xchg
and
dec
loope
inc
jbe
push
scas
adc
xchg
inc
bound
out
pop
int
popa
push
inc
fcoml
fs
cmp
mov
cld
cmp
popa
roll
aad
rcr
mov
add
xor
mov
rol
mov
mov
mov
jns
pop
out
or
lcall
sub
push
dec
inc
add
cmpsl
xor
insl
dec
pop
das
mov
sti
dec
rcrb
aad
cmp
pop
add
mov
das
gs
push
sysenter
lahf
je
pop
inc
xchg
and
push
std
mov
or
add
and
std
sub
mov
mov
clc
adc
mov
dec
mov
and
data16
inc
scas
push
mov
and
or
pop
shr
in
rclb
ds
ret
mov
xorb
xchg
sarb
fabs
xor
pop
mov
pop
or
pop
mov
xor
add
add
pop
leave
dec
inc
or
leave
jg
lahf
push
push
dec
scas
push
pushf
int3
jno
mov
rcrb
sbb
dec
sub
xchg
sbb
jne
sub
mov
pushf
sahf
out
dec
fisubs
xchg
popf
ret
jo
inc
test
cbtw
movsl
mov
xchg
adc
pop
pop
xlat
js
cmpsl
int
roll
xchg
pop
sub
fcomps
insb
push
shrl
mov
leave
pushf
mov
jg
mov
jne
add
loope
fsts
clc
dec
stos
xchg
push
clc
sbb
inc
ficoms
pop
lock
popa
out
loopne
sti
pop
ss
mov
psrlq
sahf
out
cs
popf
int
in
cltd
adc
sub
xor
and
fimull
jb
push
push
movsb
addl
inc
adc
mov
jno
test
xlat
std
add
and
push
fildl
add
test
inc
lock
bound
and
call
mov
ret
inc
sti
rcrl
fmuls
dec
mov
mov
loope
xchg
out
jl
pop
test
fldenv
stc
adc
pop
add
es
cmp
push
neg
cs
and
and
in
pop
repnz
fcoms
mov
pop
inc
test
das
movsb
xor
mov
pop
inc
ds
cli
and
push
jge
es
cwtl
sub
sub
cmp
pop
jno
ret
mov
adc
mov
push
ds
roll
mov
mov
lods
mov
sahf
sarb
mov
or
push
and
lret
push
sbb
pop
lret
lahf
fists
jo
sub
jns
popf
mov
cmc
roll
sub
fidivl
pop
pushf
sbbl
push
mov
mov
lahf
loopne
aam
xchg
mov
cwtl
lret
test
ret
or
push
xchg
icebp
jecxz
sub
xor
stos
add
jne
add
in
bound
sbb
fsts
test
xchg
xchg
test
shl
repnz
push
mov
hlt
add
jge
fistpl
lret
mov
insb
xor
add
xor
fidivrl
mov
cld
icebp
sbb
fdivrl
rcr
push
mov
mov
mov
in
jbe
mov
mov
enter
mov
mov
shl
aas
dec
ret
stos
ja
add
push
shll
ret
lcall
es
test
jbe
mov
xor
das
jge
std
aad
xor
and
xor
inc
push
test
dec
xchg
mov
fildll
fidivrl
jmp
fwait
push
sete
adc
add
pop
test
push
dec
and
out
and
mov
xor
in
ljmp
pop
xor
cmp
pop
mov
repnz
adc
mov
sub
adc
in
sarl
push
daa
adc
int3
mov
inc
mov
add
dec
mov
out
fisubrl
lock
or
xadd
sub
pop
ja
jns
or
out
call
enter
cmp
mov
push
loope
push
adc
ljmp
and
fnsave
and
xchg
push
sub
in
loop
push
dec
nop
negb
and
add
xchg
cmp
mov
fst
push
pop
xchg
jb
mov
dec
jo
jg
cltd
cld
xchg
jle
and
mov
mov
ja
lret
xor
jno
xlat
push
lret
lods
outsl
fwait
lahf
add
sarb
cmpsl
in
int
repz
pop
jne
jns
cwtl
test
aaa
test
jmp
pop
xlat
dec
xchg
push
call
inc
imul
arpl
push
adc
jl
lcall
pushf
lcall
in
mov
cmp
inc
lea
je
pop
leave
push
dec
cmp
jecxz
rol
and
adc
das
test
ljmp
shll
and
lahf
cmp
jg
pop
dec
ret
fisttpll
rolb
cld
add
xor
mov
cmc
lret
dec
pusha
cmp
push
sub
xchg
pop
fmull
push
pop
fmulp
jno
xor
xchg
cmpsb
cmp
mov
call
fisttpll
dec
sub
push
or
dec
cmp
enter
fstl
lock
or
jge
mov
pop
daa
icebp
cs
fnstcw
cs
sub
out
test
mov
or
or
pop
imul
mov
sub
negl
fisttpll
xchg
jge
jo
sub
faddl
mov
sub
shlb
add
xchg
sbbl
icebp
cltd
cmpsl
jns
cmp
push
aad
repz
test
insb
xchg
or
clc
packuswb
and
sti
test
mov
adc
ret
mov
nop
sub
or
cltd
mov
shl
cltd
mov
sbb
cs
push
xchg
push
jl
sbb
jnp
sbb
xchg
out
in
jecxz
decb
sub
pop
clc
xor
mov
sub
cmpsl
and
mov
and
add
push
out
imull
jb
in
pusha
les
fs
icebp
lods
sbb
mov
ljmp
mov
in
outsb
mov
add
fs
jo
lcall
je
dec
nop
das
mov
jne
test
jae
fiaddl
mov
daa
fsts
sti
adc
or
adc
or
shlb
repz
inc
push
xchg
add
movsl
insl
sbb
mov
and
ljmp
and
arpl
std
ja
cli
and
hlt
inc
pop
loop
inc
jge
sub
jle
and
or
fsubp
scas
and
inc
lcall
and
lds
xor
mov
imul
push
ja
dec
loopne
cltd
adc
into
and
popa
jno
mov
testb
lds
daa
jo
mov
jecxz
inc
out
rcll
ss
outsb
movsb
jp
add
mov
out
out
je
js
pop
out
fwait
mov
test
mov
fldt
popa
jl
nop
xor
push
mov
jl
into
pop
mov
mov
scas
in
pop
jno
pop
push
aaa
ss
pushf
inc
pop
jmp
jmp
lret
add
inc
lods
or
pop
faddl
gs
ljmp
adc
dec
push
pop
cmpsl
pop
inc
jmp
push
xor
int
movsb
mov
or
fimull
ret
es
xor
inc
jmp
mov
cwtl
ret
sbbl
cld
jbe
add
mov
sbb
stos
ja
scas
movsl
mov
js
jno
jmp
sti
js
call
call
lock
ret
nop
mov
adc
lret
jns
mov
add
aam
test
sbb
pop
bound
insl
add
ret
in
sbb
or
pusha
les
movsb
cli
add
dec
sbb
je
lock
into
xchg
lods
hlt
dec
sbb
pop
les
sub
fdivs
daa
or
xor
out
and
push
fs
repnz
daa
mov
rclb
fmuls
in
push
jbe
jno
sbb
gs
push
incl
adc
add
bound
mov
push
cmpsl
lods
xchg
dec
cli
jb
cmp
mov
lahf
or
ret
add
mov
sub
xor
mov
mov
ljmp
fs
mov
scas
repnz
pop
incl
pop
xchg
les
mov
aaa
pop
mov
dec
iret
mov
mov
jl
dec
repz
fstpl
insl
sub
fistpll
ret
sti
xor
sbb
pusha
pop
xchg
lret
push
sbb
cs
xchg
mov
and
jl
dec
jae
jnp
rolb
or
int3
mov
movsb
movsb
sbb
pop
testb
mov
movsl
cltd
jnp
mov
pop
addr16
cmp
mov
sbb
hlt
xchg
dec
inc
add
pop
stc
decl
imul
pop
inc
inc
aaa
sbbl
lods
call
out
les
mov
lods
pop
rclb
test
cwtl
sub
test
adc
sbb
jne
lahf
add
push
and
mov
and
movsb
adc
pop
leave
aaa
mov
and
add
pop
mov
push
es
in
ror
xor
inc
cwtl
out
cwtl
mov
jne
add
xchg
sub
pop
mov
fimuls
call
int3
dec
gs
call
mov
jl
jp
ss
and
orps
inc
dec
xor
addr16
dec
push
dec
in
unpcklps
pop
push
lods
cwtl
dec
fs
or
mov
push
mov
test
sbb
fsubrl
loope
jge
hlt
movntps
fisubrl
leave
cmp
stc
jle
and
sbb
and
xor
lret
pusha
insb
mov
xor
shlb
test
lahf
xchg
fisubrs
fiaddl
jge
ficoms
stos
iret
std
pop
dec
or
adc
aaa
jne
push
inc
adc
push
clc
xor
popf
dec
popa
and
adc
outsl
and
mov
cld
pusha
sti
ret
jae
cmpsb
mov
repnz
sahf
sub
out
pop
mov
mov
mov
in
push
sbb
in
in
pop
jmp
dec
xor
dec
roll
mov
or
cmc
stos
mov
orl
xchg
js
xorl
push
or
sti
in
sub
dec
adc
test
sbb
iret
fnstsw
and
cwtl
jl
xor
mov
ret
mov
add
fucomip
adc
out
loop
repnz
stos
sub
test
mov
lret
and
or
mov
mov
xchg
cwtl
loop
iret
jg
or
call
jg
adc
sub
test
stos
test
mov
push
jecxz
or
ds
mov
sub
shrl
add
or
jae
mov
inc
popa
rep
in
pop
xchg
mov
scas
test
aam
sbb
invd
push
jmp
sbb
fildl
in
cmp
insl
hlt
pop
ret
out
aaa
dec
push
and
fidivrs
push
jge
fmuls
fnsave
add
push
clc
mov
mov
hlt
xchg
cwtl
fsubp
add
adc
dec
movsb
pop
push
push
ss
arpl
xlat
test
loopne
scas
cld
inc
cmp
aam
hlt
stos
dec
mov
subb
xlat
scas
mov
add
pop
pop
xor
dec
loope
ret
jb
cmpl
lea
repnz
scas
adcl
cwtl
xchg
cli
loopne
stc
movsl
out
in
fists
cmp
scas
inc
sub
and
pop
push
inc
sub
fiaddl
push
rcll
test
js
or
or
loopne
test
jmp
mov
mov
jge
clc
clc
decl
fistps
xchg
aam
or
adc
bsr
imul
mov
push
and
mov
mov
mov
sbb
imul
add
or
mov
imul
dec
aaa
mov
jae
out
repz
mov
mov
cmp
pop
fcoms
iret
fsubl
jne
xorl
into
mov
and
pop
mov
push
pop
cmp
in
mov
iret
dec
pop
mov
xor
sbb
pop
adc
xlat
ds
mov
cmc
and
mov
cmpsb
adc
popa
enter
mov
flds
fdivs
in
push
sbb
jo
jne
and
call
xor
lods
or
jecxz
xchg
cmp
insl
xlat
add
sub
dec
icebp
cs
or
lods
jle
lods
stos
sub
arpl
outsb
shl
lret
stc
pop
mov
xchg
or
lahf
or
imul
cmp
xchg
loopne
incl
and
jo
enter
pushf
insb
loop
int3
inc
aad
cwtl
movsb
stos
lods
bound
in
adc
inc
fidivs
sti
mov
and
es
out
xchg
fsubs
mov
test
xor
jae
insl
and
pop
push
push
sub
hlt
mov
pcmpeqb
adc
adc
lea
pop
push
mov
test
outsb
bound
shrl
jp
add
in
cmp
pusha
sub
pop
and
cld
fimull
les
or
aas
adc
ds
mov
pop
out
mov
push
repnz
shl
mull
bound
sti
pop
cmp
je
and
mov
outsb
xlat
and
repz
fmul
sbb
mov
adc
nop
or
inc
insl
mov
cmp
cs
xlat
lret
in
jno
jns
push
xor
test
add
mov
inc
sub
inc
mov
ljmp
mov
cmpsl
ljmp
fisttpl
xchg
je
mov
in
repz
fs
stos
jo
repz
mov
loop
add
pop
in
sub
xchg
jecxz
cld
sbb
xor
bound
je
cmp
sahf
stc
add
in
enter
cld
repnz
inc
pop
mov
shrb
inc
lret
cs
cmp
sbbl
push
cs
mov
jle
mov
out
cmp
xchg
xor
dec
call
insb
push
jge
lret
popa
shlb
std
mov
push
mov
popf
enter
jl
jne
das
addr16
ja
sub
inc
leave
cmp
pop
rcll
mov
ja
sub
xchg
or
mov
and
shll
insb
push
and
pop
mov
movsl
andb
daa
pop
pop
push
push
pop
test
lahf
ds
cltd
jb
andl
aas
lds
sub
push
insb
inc
xchg
inc
int3
ror
mov
sub
fwait
aaa
out
or
push
pop
xchg
push
movsb
add
imul
ret
pop
inc
call
and
inc
cltd
xchg
jecxz
mov
add
aad
imul
jnp
testb
inc
dec
sahf
mov
inc
in
xchg
fstps
in
or
cltd
fsubrs
cmpsl
cwtl
push
mov
nop
outsb
push
dec
mov
xchg
negb
aas
int3
mov
repz
stos
outsl
adcl
fidivs
mov
jmp
daa
push
and
xchg
cli
dec
in
out
call
cltd
rcrl
or
aad
inc
cld
dec
jae
or
push
add
les
icebp
rolb
dec
mov
mov
pop
sub
stos
mov
add
sub
test
sub
fwait
addb
inc
in
push
dec
hlt
jecxz
cmp
xchg
sbb
pop
dec
adc
fldt
mov
shr
dec
cmc
inc
mov
pop
popa
jle
sub
mov
popa
je
jbe
xchg
mov
fwait
bnd
mov
dec
les
jl
aaa
aas
sbb
rcl
lret
cmpsl
add
adc
xchg
repz
sbb
mov
inc
shrl
int3
popfw
add
adc
test
out
arpl
cmp
insl
dec
icebp
test
in
sub
mov
inc
fs
inc
inc
fstl
in
clc
lds
test
jno
add
pop
and
sarb
pop
adc
fcompl
mov
jl
jge
daa
push
sbb
and
push
stos
mov
fcmovnu
xlat
out
out
pop
lods
movsl
add
pop
xor
cmp
inc
out
mov
push
sub
in
mov
ss
xor
lds
das
xchg
aam
lods
mov
lods
jne
xchg
ficompl
xor
icebp
and
dec
in
aaa
dec
and
rol
adc
mov
test
stc
inc
jge
xchg
mov
inc
repnz
sub
add
push
add
jb
std
pop
xor
mov
lock
arpl
insb
xchg
addb
mov
lea
hlt
mov
push
dec
and
mov
push
ret
sub
xchg
aad
mov
push
fs
fs
jo
pop
jecxz
jl
lock
scas
jl
rorl
xchg
sbb
jp
repnz
cwtl
ret
mov
arpl
inc
test
fistpll
jmp
xchg
ss
mov
arpl
cmp
push
leave
push
push
scas
bound
out
mov
adc
addr16
inc
pop
popf
cltd
cs
xlat
or
scas
in
push
lds
insl
in
push
sbb
jmp
pop
cltd
ja
push
out
push
in
adc
xchg
dec
mov
xor
mov
or
outsl
cld
add
push
sub
dec
xchg
insb
pop
sub
pop
cmpsb
fidivrs
mov
adc
int3
add
mov
andl
sub
sub
adc
mov
repz
and
lret
repz
sbb
les
or
dec
frstor
jb
xchg
push
mov
pop
pusha
repz
and
shrb
and
jae
lret
insl
jae
in
test
out
push
mov
mov
repz
repnz
pop
icebp
inc
adc
in
ljmp
mov
push
cmpsb
jno
jg
cmpsl
push
dec
cmpsb
inc
pop
push
pop
jno
out
cmpsl
xor
jg
xor
xor
inc
xchg
mov
push
insl
pop
nop
add
outsb
adc
inc
cmp
jle
and
movsb
cmc
mov
jnp
fwait
cmp
jmp
addl
test
push
mov
es
cwtl
jbe
stos
scas
adc
dec
bound
loope
lods
out
hlt
mov
out
mov
inc
inc
push
push
ja
and
fstpl
xchg
in
add
stos
lock
jmp
push
out
andl
lods
push
or
jae
inc
imul
pop
pop
xor
sub
lret
dec
mov
ss
mov
sbb
jmp
mov
addr16
and
adc
dec
dec
fmull
test
loopne
add
dec
dec
mov
or
iret
in
insb
jnp
shrb
inc
cwtl
test
loop
xchg
scas
push
hlt
cmc
pushf
pslld
cltd
push
xor
mov
dec
imul
ja
scas
cmp
cltd
lcall
test
popa
ljmp
pop
lods
loop
cmp
clc
pop
pushf
cli
pushf
fstpt
arpl
orl
out
iret
gs
enter
dec
mov
aas
fbstp
adc
fmull
std
pop
enter
repnz
xchg
push
inc
xchg
bound
ret
inc
sub
andb
push
mov
scas
sbb
jno
sbb
sbb
shr
pop
leave
mov
push
imul
mov
push
prefetch
or
test
lahf
jns
ficomps
sub
jbe
mov
stc
ja,pt
bound
imul
dec
inc
mov
jo
xor
int
push
lds
xchg
inc
inc
xchg
pop
sti
inc
push
test
mov
pusha
fimuls
fwait
sbb
adc
dec
jg
add
xor
push
in
cli
pop
stos
adc
insb
cmpsb
imul
push
mov
xorl
adc
push
cltd
dec
daa
inc
insl
ljmp
cmp
push
push
mov
sub
mov
out
cli
pop
cmp
push
jl
xor
push
jne
lahf
mov
push
popa
ljmp
ljmp
push
mov
push
jmp
mov
cld
stos
fs
hlt
mov
sbb
push
mov
jbe
scas
mov
inc
add
add
push
and
lahf
rcrl
pop
int
fimull
sbb
or
cmpsl
sub
je
repnz
pop
loopne
jbe
add
sbb
xchg
popf
jle
lret
sarl
push
and
mov
leave
out
cltd
add
jb
sbb
call
add
mov
add
in
out
fwait
in
shl
sahf
pop
adc
sub
xchg
xor
roll
rclb
xchg
sbb
push
mov
lcall
mov
or
mov
add
dec
les
sub
sub
scas
mov
add
push
loopne
mov
sbb
fcmovbe
rol
leave
test
mov
imul
lret
ret
xchg
add
rorb
iret
jne
mov
or
pop
xchg
sti
sub
sti
daa
pop
fisttps
out
jo
inc
jne
mov
lods
jg
xchg
nop
ja
out
sbb
pop
mov
shr
lods
rcl
jmp
cmc
rcr
insl
aaa
into
inc
mov
inc
sub
cmp
out
xchg
jl
cmp
mov
enter
pop
cwtl
mov
aam
fdiv
mov
stos
aas
sub
jno
dec
inc
shl
xchg
push
pushf
jge
sub
movsl
bound
cmp
aam
or
mov
inc
in
hlt
out
cmpsl
jmp
cld
cmp
xchg
pop
push
adc
dec
push
dec
sub
cmp
xor
sbb
fimull
xor
ljmp
xchg
mov
push
mov
jmp
ret
lods
es
mov
test
jp
mov
mov
jns
repnz
imul
adc
mov
or
movsl
pusha
sub
call
xchg
mov
shl
and
lods
std
pop
add
xor
and
ss
inc
out
or
test
in
cli
lds
push
lds
inc
ficomps
add
xchg
ds
sbb
mov
and
and
cli
lods
cmp
cmp
cltd
mov
dec
cmpsl
popl
shr
repz
scas
xchg
push
push
sub
ds
icebp
cwtl
mov
ret
pop
call
or
mov
sub
out
pop
stos
adc
inc
hlt
inc
sbb
cmp
movsb
adc
xor
pushf
pop
fistpl
in
push
dec
ja
mov
sti
call
fld
fcomi
std
shr
stc
jnp
rcll
inc
mov
sbb
jl
and
ret
cld
or
push
test
or
jg
loop
in
cmp
mov
pushf
jle
aas
mov
mov
fbld
xor
enter
xlat
mov
repz
es
adc
jle
mov
bound
into
stos
aaa
pop
push
mov
iret
jle
cld
jmp
jl
lret
sbbb
mov
sbb
cld
pushf
cli
jno
popf
dec
loope
mov
insl
pop
fldl
add
xlat
jg
xchg
xlat
jge
cmpsb
fsubl
inc
add
rcrb
stos
int3
dec
je
or
sti
js
sub
xchg
rolb
sub
inc
loope
dec
adc
arpl
fwait
int3
out
imul
jle
repnz
pop
push
add
inc
int3
aaa
mov
xchg
adc
push
xor
mov
pop
aad
cmp
mov
in
repz
out
les
mov
inc
das
xor
outsl
pop
cmpsl
add
stc
sub
incl
or
sahf
xor
loopne
jb
lods
aam
mov
mov
pop
stos
jmp
or
cli
mull
push
arpl
es
stos
sahf
pop
dec
mov
lea
ret
jbe
lret
sbb
cmc
mov
jecxz
gs
mov
sti
aad
leave
pop
push
xor
xor
outsb
stc
out
repnz
out
cwtl
or
insl
iret
js
ret
push
popa
push
sbb
insb
jp
in
push
pop
sub
clc
adc
cmp
dec
imul
mov
aas
lds
add
andb
stc
mov
xchg
push
into
mov
iret
jne
cltd
mov
and
jle
ss
in
out
adc
pop
sub
add
sbb
in
mov
xchg
add
add
sub
gs
sub
jmp
or
push
dec
pop
fwait
stos
xchg
adc
popf
sahf
and
shlb
jnp
and
xchg
xchg
testl
cmp
iret
cmp
sarl
or
stc
adc
loope
jmp
dec
mov
xor
jnp
andb
mov
cmpsb
adc
sub
and
and
lret
mov
cltd
cmp
push
cwtl
les
mov
int3
stos
es
inc
stos
outsb
filds
cmp
lods
sub
mov
and
adc
add
outsb
mov
push
inc
dec
inc
mov
adcb
push
insb
out
cmp
push
fs
push
xchg
pop
adc
in
clc
sub
jno
pop
xorl
push
xor
cmp
add
ljmp
frstpm(287
add
out
cld
pop
and
fcoml
add
pop
xchg
mov
nop
inc
shl
scas
mov
jns
clc
shld
addr16
xlat
out
lret
mov
xor
loopne
mov
pop
leave
ffree
mov
and
call
push
fildll
dec
push
notb
leave
dec
addb
mov
in
aad
test
ds
mov
stos
cltd
out
arpl
stos
add
mov
bound
mov
adc
lret
mov
adc
dec
cwtl
and
dec
inc
addr16
adc
sti
lods
mov
mov
rcrl
out
bound
add
cmpsb
dec
loope
xchg
jns
xchg
push
jnp
je
inc
mov
or
mov
jbe
repz
aad
mov
negb
loop
pop
stos
sbb
cmpsb
aam
aas
push
notb
fldcw
xor
sub
leave
dec
add
jp
mov
out
inc
movsb
idivl
mov
fucomp
mov
stos
mov
inc
testb
xor
imul
lcall
dec
jo
sbb
or
pop
jb
aas
xor
es
inc
mov
xor
clc
and
clc
call
fstpt
or
xchg
xor
pop
pushl
inc
dec
cmp
sti
adc
ss
dec
jl
fs
nop
cmpsb
mov
stos
fwait
sbb
out
jo
lods
orl
push
movsb
xlat
out
faddl
je
adc
lcall
sahf
push
jl
pop
scas
lret
adc
dec
pushf
mov
push
mov
jnp
push
out
lret
dec
fmul
dec
xchg
rcrl
int3
jg
adc
pop
fiadds
aam
in
std
in
or
ret
mov
push
sti
push
and
push
es
jge
cwtl
xchg
in
cwtl
push
pushf
dec
pop
movb
out
cwtl
xlat
push
enter
fistl
cwtl
addl
stc
call
test
int3
in
into
scas
sub
pop
lea
aad
inc
int3
push
dec
jmp
cltd
xchg
bound
sub
notl
mov
es
or
je
lcall
mov
push
jbe
xchg
sub
subl
mov
aas
push
lds
in
xor
lods
test
sahf
movsb
sti
pop
sbbb
loope
jno
fcomps
sbb
scas
mov
and
shlb
stos
mov
loope
std
fisubrl
fcomps
mov
sub
mov
les
inc
das
add
sbb
push
pop
imul
cmpsb
push
lret
mov
pop
mov
dec
jno
jp
test
stos
ljmp
xlat
rolb
arpl
jl
into
dec
inc
stos
push
insb
xchg
outsb
adc
fnstcw
sti
mov
xchg
test
inc
inc
in
in
adc
sub
sub
ret
aas
subb
xor
cmp
loope
cmp
mov
push
push
and
ret
inc
mov
scas
sub
mov
sub
lcall
and
push
add
jmp
les
ds
fiadds
mov
and
pop
cmp
xor
mov
imul
dec
and
inc
aas
sbb
xlat
mov
or
jp
outsb
xor
pop
sub
ss
push
mov
out
xlat
lcall
cltd
scas
pusha
inc
sbb
jl
inc
dec
xchg
out
jbe
pop
xor
inc
dec
insb
and
dec
mov
sbb
mov
mov
sbb
cltd
fsubrs
cmp
mov
cli
mov
cs
repnz
jge
cwtl
add
mov
jg
or
xlat
mov
repnz
std
jbe
pusha
shrl
popf
movsl
and
ret
int
cmp
push
in
dec
daa
mov
jle
mov
lret
inc
mov
call
jae
fcmovne
call
movsb
push
pop
clc
lock
jle
pop
inc
mov
pusha
cmp
sub
xchg
push
or
or
shl
pop
and
sbb
iret
mov
mov
sbbb
xor
inc
push
iret
rorb
in
rcrb
icebp
jae
mov
adc
fisubrs
in
scas
call
mov
es
std
inc
and
xchg
jp
shrb
sbb
mov
mov
sub
loopne
mov
xor
mov
clc
dec
inc
jb
jmp
scas
mov
pop
test
data16
loope
ret
inc
lahf
sub
cs
das
fiadds
into
stc
jmp
mov
jge
test
fsubrs
clc
mov
adcb
pushf
mov
adc
mov
mov
sahf
or
dec
add
mov
int
adc
decl
mov
push
push
rcr
jnp
call
lods
add
fisubrl
and
pop
mov
jno
push
lods
les
fisubl
and
rcrl
test
fcomps
inc
rcr
add
and
loopne
lret
sbb
xor
test
mov
xchg
inc
sbb
imul
sbb
mov
push
xor
sbb
fwait
inc
ficomps
inc
insl
adc
inc
adc
add
fnsave
fs
sbb
add
and
jle
mov
hlt
jle
test
xor
xor
jbe
jmp
bound
fnsave
mov
push
decl
jp
jge
pop
jno
sbb
subl
mov
ss
cmp
add
or
xor
sub
push
and
int3
inc
in
leave
out
pop
shrl
fstpl
xchg
xor
test
and
es
je
xor
pop
adc
pop
xchg
mov
xchg
mov
das
inc
aaa
and
movsb
fdivs
lock
jnp
fwait
pushf
les
jns
dec
ss
mov
repz
and
add
fsubrl
aam
out
push
mov
mov
subl
sub
push
pop
xor
add
addl
sub
or
pop
push
adc
mov
bound
inc
fwait
xlat
negb
and
mov
or
sbb
mov
xorb
out
adc
mov
inc
or
pop
mov
aaa
orb
int
cmp
fldenv
mov
jl
push
push
sub
lods
xor
test
add
sahf
jnp
popf
jns
pop
daa
scas
pop
mov
popa
lds
or
pop
push
insb
ret
push
cmp
pop
cli
dec
or
dec
and
mov
fdivrs
insl
pusha
and
xchg
ffree
aad
iret
cmc
inc
repz
out
ds
int
insl
outsl
pop
push
int3
xchg
mov
mov
lds
int3
out
sub
outsl
add
xchg
pop
ret
and
mov
shlb
or
pop
sbb
adc
push
inc
daa
push
xor
fists
and
sbb
or
int3
dec
in
sarb
pop
fistl
push
pop
xchg
es
mov
and
mov
pop
inc
jo
dec
push
bound
mov
out
loop
sbb
adc
adc
pop
ds
push
orb
xor
dec
mov
pop
stos
addr16
notl
mov
lret
jae
fsub
inc
sbb
add
mov
pop
mov
mov
add
adc
shlb
mov
sahf
call
add
lcall
adc
jge
fisttps
dec
jnp
cltd
xchg
xor
jecxz
push
cmp
shld
je
out
cmpb
popa
pop
jb
in
add
pop
mov
sbb
ljmp
loop
rcll
gs
cltd
movsb
mov
xor
mov
shrb
mov
negl
outsb
in
jmp
cmpsl
outsl
mov
stc
out
fildll
inc
out
mov
cmpsb
jp
rcr
or
lahf
and
int
pop
and
sub
add
insb
xchg
std
dec
iret
sub
rolb
push
ds
incl
mov
cwtl
inc
test
sbb
adc
insl
and
outsl
inc
fwait
jbe
imul
add
out
jl
xchg
imul
hlt
adc
sub
addr16
and
dec
pop
adc
lods
push
inc
loop
lds
pop
push
inc
push
hlt
mov
mov
lret
mov
insl
pop
out
dec
aas
ss
inc
jo
or
adc
sub
pusha
cmp
lods
jecxz
lock
ret
flds
sar
inc
popf
push
cmp
rcll
adc
int
push
xlat
cs
rorb
aas
movsb
jp
in
fucomi
lret
cmpsb
cmpsb
xchg
cli
js
cmp
test
fildll
dec
ret
pop
popa
call
pop
sub
xor
xor
jno
inc
mov
lock
mov
aad
stos
js
jne
loopne
sub
clc
xor
dec
or
xchg
mov
imul
pop
mov
cs
imul
dec
mov
scas
ficomps
cmpsl
idivl
icebp
inc
jae
mov
dec
jns
or
cs
hlt
or
mov
call
or
xchg
xor
inc
in
pop
fildl
mov
pop
xlat
mov
xor
cmp
pop
push
sbb
or
popa
stos
sbb
mov
lahf
mov
ficompl
xchg
jmp
push
sbb
loopne
jle
mov
or
mov
lods
sbb
dec
icebp
push
sbb
dec
mov
popf
leave
cltd
outsl
mov
fbld
cmp
push
cmpsb
cmp
gs
inc
mov
and
add
pushf
rcrl
enter
sbb
and
insb
sub
mov
data16
cmpsb
jbe
xchg
push
leave
imulb
and
ret
push
movl
adc
clc
pop
mov
lock
lret
jae
pop
adc
enter
inc
mov
jb
lea
arpl
aas
adc
xor
int
xchg
jg
rcrl
sahf
and
sub
sub
cmp
xor
dec
mov
loop
ret
push
jne
xchg
out
rcrl
cmpsl
cs
push
pop
bound
lock
mov
int
js,pn
xchg
mov
xor
imul
addr16
adc
test
sub
jg
insl
sub
jae
mov
mov
ss
push
lds
add
cmp
adc
sbb
shrb
jmp
in
movsb
lods
aam
int3
into
dec
pop
pop
rorb
push
popa
out
sub
pop
mov
lret
xchg
sub
idiv
out
fwait
lds
xor
pop
push
xchg
repz
mov
add
mov
dec
add
jne
push
mov
mov
movsl
sbb
jno
push
repz
push
push
leave
jb
cmp
sub
dec
cwtl
loope
scas
adc
xchg
add
int
lods
pop
cltd
cmp
cmpsb
clc
roll
or
dec
mov
inc
mov
or
cmpsl
lcall
push
pushf
jbe
pop
into
fmuls
lea
pop
cwtl
cmp
fwait
mov
sub
push
lret
xchg
cltd
out
std
jb
jns
push
mul
out
pop
push
or
add
cmp
test
push
and
jp
scas
bound
xor
cmp
dec
ret
dec
cmp
xchg
xor
mov
and
daa
xchg
xchg
loope
stc
iret
lods
jae
lahf
adc
iret
scas
sbb
test
jnp
mov
ds
and
jge
movsb
add
daa
testl
repz
icebp
sahf
hlt
mov
and
add
push
push
shr
iret
aad
add
adc
add
outsl
pop
inc
or
jae
sbbl
imul
xchg
outsl
lcall
cwtl
and
clc
push
outsb
cli
push
outsb
push
cmc
inc
mov
jmp
ljmp
jl
scas
mov
xchg
into
das
fs
addr16
jmp
nop
cmovns
adc
push
and
insb
addb
jle
jg
cmpsb
inc
and
add
imul
or
in
xchg
nop
rcll
pop
cwtl
mov
pop
fcomps
or
mov
shrl
add
sub
adc
shr
movsl
cmp
mov
or
sbb
out
and
mov
jno
pusha
push
or
jbe
mov
push
test
cs
xchg
clc
push
jo
int
push
inc
adc
mov
sbb
rclb
int
dec
frstor
insb
jb
bound
inc
ret
add
mov
mov
cli
sti
jg
pop
push
cli
push
push
popf
lret
dec
fnstsw
push
addr16
and
fisubrl
sar
sbb
or
adc
outsl
sbb
mull
sub
sub
jno
jne
sbb
cld
out
sbb
dec
cs
fnsave
and
jae
adc
call
lret
inc
and
and
sub
fwait
sbb
add
je
lods
testb
repnz
movsl
scas
xor
mov
dec
jmp
mov
mov
incb
jl
fadd
inc
call
scas
stos
push
pop
jbe
dec
cmp
negl
lods
cmp
xchg
pusha
sbb
mov
push
cld
lret
ja
ret
pop
and
fs
sbb
rorl
lret
push
push
in
sbb
lods
xchg
xchg
adc
xchg
dec
dec
dec
lea
into
cmc
jae
test
ljmp
mov
sub
or
sub
xor
enter
bound
out
pop
and
xchg
jnp
movsb
xchg
xor
inc
jbe
adc
cmp
lds
jp
adc
leave
ficoml
sub
mov
inc
jns
adc
cwtl
dec
je
adc
sub
js
inc
dec
lret
stc
push
gs
popa
repz
pop
pop
sub
shl
gs
ljmp
jne
int
ss
fmul
pop
sbb
rcrl
sub
andb
test
fldt
ret
push
push
je
mov
pop
mov
cmpsb
cwtl
fcmovnb
hlt
loop
dec
data16
adc
jp
popf
dec
icebp
repz
outsl
subl
cltd
pop
or
scas
sahf
xchg
sbb
int3
cmc
mov
xchg
inc
test
mov
jno
dec
out
insl
xchg
cltd
test
repnz
mov
inc
mov
dec
cmp
or
mov
mov
add
dec
add
sub
xchg
pushf
ljmp
and
jmp
out
ficoms
je
mov
jge
cs
and
outsb
jl
in
pop
mov
aam
adc
fsubrs
and
and
ret
push
mov
mov
popf
sbb
or
jne
inc
and
sbb
ss
push
and
mov
lock
imul
pop
push
jo
movsb
or
or
add
mov
aaa
xor
push
es
push
jnp
dec
sbb
push
loop
roll
enter
popf
test
push
xchg
repnz
push
and
dec
lcall
add
aad
cld
and
push
mov
mov
rcrb
cs
push
push
shrb
lods
adc
pop
test
cs
adc
inc
mov
xchg
stc
mov
sbb
and
add
mov
jae
push
pushf
pop
popf
cmpb
leave
jg
loopne
int
sahf
jnp
out
in
cmp
lds
push
movsb
imulb
cli
jbe
add
aas
addl
ret
jp
jae
push
xor
xor
fbstp
cmpsl
and
cs
push
xchg
jb
xchg
cli
mov
loope
icebp
pop
inc
movsb
push
test
add
rol
movsl
int3
sub
repz
test
adc
mov
push
fdecstp
int
orl
xor
inc
sbb
push
test
aaa
fwait
imul
jb
jp
cs
in
jbe
pop
ja
jmp
mov
mov
push
adc
int3
popa
ja
jmp
pushf
loopne
jmp
pop
lods
jecxz
pop
outsb
adc
cld
fmull
adc
les
xsha256
cmpsb
push
cld
and
push
and
lahf
push
cmp
cmp
mov
ret
add
outsl
daa
outsl
push
pop
jb
jne
fadds
cmc
jno
sbb
add
jg
mov
jb
mov
call
movsl
test
inc
ret
imul
push
lods
in
sub
arpl
out
xacquire
mov
xor
mov
es
sub
movsl
mov
lahf
inc
dec
fnstcw
sbb
mov
sahf
mov
pop
lods
cmpsl
fcomps
cmp
fidivrl
cmp
fidivrs
in
push
inc
mov
pusha
outsb
mov
push
dec
iret
pop
outsb
dec
ret
in
test
and
add
xor
xchg
push
ret
jge
push
mov
mov
cs
xor
jecxz
dec
repz
std
jns
pop
fisubl
aaa
sub
ljmp
adc
lret
sub
and
psrld
sub
ja
aam
jg
lahf
loopne
mov
loop
adc
imul
ds
sub
mov
push
js
pop
mov
or
mov
fsts
shll
arpl
mov
push
jbe
push
mov
jle
push
ret
mov
mov
cwtl
pop
out
xlat
mov
cmc
and
dec
push
inc
arpl
fdivrp
outsl
gs
stos
mov
and
push
sbb
ss
mov
and
cmpsl
mov
sbb
adc
push
inc
mov
cmp
arpl
rcll
bound
test
and
in
mov
test
movb
mov
cs
adc
sahf
ljmp
lods
and
dec
rcll
xchg
add
fcoms
lods
pop
mov
loopne
sbb
clc
hlt
xchg
fldt
push
mov
dec
ja
lods
cmp
mov
xor
inc
data16
std
addr16
cmpsl
cmp
lea
and
adc
je
lods
inc
fucompp
adc
xchg
cwtl
and
es
testb
adc
icebp
pop
pushf
shll
dec
iret
mov
mov
fistpl
js
das
test
insl
push
stos
mov
lret
pop
aas
cmc
push
test
inc
fldt
in
jae
femms
lahf
and
push
out
or
mov
sub
test
les
cltd
notl
clc
arpl
lock
mov
cwtl
dec
in
or
push
mov
sub
sbb
and
sbb
mov
shl
idivl
jecxz
shll
pop
push
pushf
dec
scas
ret
push
adc
or
jge
mov
cmpsb
cmp
mov
mov
pop
rcrb
mov
repnz
lahf
icebp
or
jbe
gs
sub
adc
xor
movsb
dec
cmp
add
sahf
adc
mov
push
and
xor
cmp
and
rorb
inc
inc
pop
in
imul
outsb
aad
mov
and
jl
insl
xchg
pop
sub
sahf
dec
push
mov
fstpt
jl
xor
dec
and
arpl
cld
jmp
dec
shrb
xor
jb
jmp
fcomps
sarb
mov
xchg
dec
int
xchg
sbb
pop
call
sub
aas
push
xchg
pop
xchg
sub
std
and
and
xchg
adc
and
scas
mov
xchg
stc
push
pushf
jb
mov
inc
icebp
sub
sbb
inc
repz
cmc
add
pusha
adc
sub
cmp
pusha
adc
ljmp
xor
cltd
inc
push
mov
mov
lahf
fidivrl
lods
mov
jae
lahf
cmp
inc
inc
sub
jle
aas
xchg
or
lods
jge
mov
jbe
ds
das
or
sti
stos
movsb
dec
jo
push
movsl
lret
std
pop
push
pop
jle
bound
mov
push
cmc
pop
dec
repnz
cmp
jg
js
ret
insl
pushl
out
roll
bound
outsl
mov
sbbl
rorb
mov
jge
push
dec
xchg
lahf
push
stos
mov
ret
sahf
sarl
inc
and
aaa
pushf
inc
rcr
in
cmp
rcrl
movd
imul
insl
ret
lret
pop
or
ret
cmp
cmp
sub
jb
inc
dec
sub
imul
jae
xor
int
leave
push
pop
cwtl
push
xchg
or
addl
xor
adc
sbb
adc
xchg
int3
lret
push
push
pop
ja
inc
fsubs
pop
xchg
fcmovne
mov
out
aas
cmc
in
push
xchg
cltd
jbe
ljmp
mov
mov
pop
fistpl
out
and
rcrl
pop
dec
orb
bound
sub
shr
jp
dec
add
lea
pop
movsl
adc
ficompl
add
jp
xchg
and
xchg
sti
outsl
ss
cmpsb
xchg
pop
inc
fdivs
adc
inc
sbb
data16
inc
xor
sbb
jp
das
test
jmp
cmp
mov
xor
sbb
idivb
test
pushf
ja
fs
out
out
call
mov
jns
push
pop
jne
jno
inc
nop
mov
cltd
das
rcll
push
movb
sub
outsl
mov
in
dec
mov
cltd
aas
sub
jg
jbe
mov
mov
inc
out
shrb
insb
inc
and
fldenv
lods
bound
out
decl
iret
in
sbb
cmc
aas
in
add
ret
insb
in
in
pop
gs
jl
jns
jbe
push
inc
insl
mov
xor
push
dec
jo
dec
dec
push
xchg
jb
movsb
out
pop
xchg
jnp
jmp
add
inc
mov
cs
or
sti
xchg
mov
cmpsb
inc
inc
dec
push
xchg
adc
jp
jle
loope
scas
and
fwait
into
jae
jp
mov
stos
shll
xor
pop
mov
pushf
mov
xchg
je
xor
shrb
and
flds
iret
pop
mov
sub
out
cli
jp
dec
imul
icebp
push
mov
shll
sarl
adc
fidivrs
inc
aas
out
addr16
jno
mov
xchg
rcrb
mov
jns
int3
or
inc
into
push
sbb
sbb
outsl
je
xlat
xor
sub
cmpsb
stc
xchg
mov
adc
test
mov
jbe
dec
cmp
fistl
or
imul
inc
pop
hlt
and
inc
cmp
js
lods
dec
int
mov
insb
xor
adc
push
push
xchg
jnp
xchg
arpl
cli
aaa
dec
mov
push
push
lock
and
cmp
cli
ficoms
aam
rolb
ds
int3
shl
mov
jae
ret
in
insb
or
ja
test
cmp
push
pop
pop
cmpsl
xor
test
in
or
add
sbb
xor
cwtl
popa
cmp
cwtl
test
js
add
push
xchg
movsb
out
sbb
daa
jg
lods
pop
cmp
or
sbb
es
xorl
pop
mov
clc
jo
iret
adc
call
inc
fwait
nop
mov
popf
pop
ss
out
lea
mov
imul
fstl
int
add
bsr
push
mov
ret
jg
mov
and
sti
cli
in
out
je
out
orb
xor
mov
xchg
shll
rolb
sbb
lret
div
fsubrs
push
cmpsl
imul
mov
sahf
pop
jno
jmp
dec
shlb
jae
dec
mov
jmp
lock
push
das
mov
nop
pusha
and
and
imul
das
test
fmulp
insb
test
jns
inc
lods
push
cwtl
repnz
addr16
loopne
cmp
adc
xor
nop
ret
sbb
push
cmpsl
sbb
dec
mov
xor
ret
pop
rcl
sub
not
inc
pop
es
fnstsw
lcall
sub
xchg
inc
mov
mov
jmp
push
pop
js
push
mov
test
cmpsl
test
ja
xor
push
inc
sbb
push
arpl
inc
daa
sub
adc
aad
in
sbb
xchg
int
xor
sub
or
cmp
jg
add
aas
clc
inc
test
out
data16
notb
imul
bound
mov
jo
jl
cmp
ss
pop
iret
fildl
mov
pop
or
jl
xor
mov
imul
movsb
adc
sti
adc
pop
stc
scas
loope
loopne
out
dec
mov
mov
dec
and
sbb
adc
add
stos
sbb
xlat
lods
fdivrs
pop
mov
and
xchg
lods
mov
in
outsb
lret
push
jg
fmulp
int
xor
enter
scas
div
test
inc
ds
sub
push
shll
cmp
filds
sub
mov
mov
repnz
pop
fbstp
push
sub
icebp
outsb
out
mov
aad
sub
out
dec
lods
fstl
xor
in
cmp
jae
dec
fcompl
lds
out
dec
inc
or
std
pop
sbb
inc
cltd
inc
xchg
xchg
mov
scas
test
xor
jns
psubsw
mov
dec
and
call
in
or
add
loop
iret
pusha
insl
xor
mov
or
imul
mov
aaa
and
add
insb
jmp
jns
addb
push
and
inc
pop
lock
enter
fiaddl
popa
insl
arpl
scas
shrb
loope
xor
sbb
insb
pop
jns
sti
jecxz
outsl
es
push
cmp
sub
inc
jno
rorl
xchg
lcall
mov
rclb
sub
pop
int3
jecxz
addr16
repnz
pop
mov
dec
and
xchg
xchg
rcl
dec
movsb
inc
mov
pop
dec
inc
outsl
les
mov
sub
in
pusha
sub
and
add
cmpl
sbb
adc
xchg
pop
imul
aad
mov
nop
ds
and
clc
add
xchg
ds
adcl
xlat
xor
movsb
mov
cmp
call
jbe
test
outsl
and
pop
out
aam
and
movsb
xlat
loop
sub
adc
sbb
pop
outsb
push
out
mov
rcrl
fistpll
js
add
call
cwtl
xor
mov
das
jb
mov
ss
fstpt
ljmp
test
lcall
aam
adc
push
das
xor
loop
pop
mov
push
mov
jmp
add
xor
xchg
ja
int3
dec
or
sti
lods
push
stos
adc
dec
fwait
lret
cmp
xchg
cs
sub
cmp
fists
and
ffreep
xorl
xor
bound
jne
sarb
mov
scas
jg
xchg
cmc
inc
outsl
jl
lods
and
xchg
pop
dec
sbb
ret
add
push
enter
ds
sub
cwtl
pop
lahf
sti
nop
xchg
jg
jle
and
subb
sub
mov
test
lds
je
subb
dec
fdivp
sub
std
mov
fadds
sub
pusha
mov
adc
test
adc
push
shl
cmp
mov
sbb
icebp
and
dec
xchg
cld
xchg
movsl
mov
sub
mov
xchg
mov
mov
sahf
cmp
jp
test
push
ret
loope
aas
dec
sub
mov
mov
xchg
mov
jns
insb
pop
mov
or
xor
add
test
add
popf
mov
adc
stc
push
jmp
out
mov
cmpsb
adc
push
loop
sub
adc
xor
mov
movsb
pop
mov
les
xor
cmp
enter
push
push
push
pop
in
loopne
inc
xor
and
pop
insl
insb
sub
dec
insb
add
mov
mov
stc
push
test
xchg
push
pop
sbb
stos
jb
xor
sub
lcall
loopne
out
scas
sbb
out
jbe
inc
hlt
shr
and
add
sbb
xchg
sub
xor
int3
pop
loope
mov
adc
add
aad
cmpsb
jmp
inc
in
and
sub
mov
mov
xchg
sub
mov
inc
outsl
dec
jnp
fwait
mov
mov
xor
jae
ficomps
lock
pop
xchg
shll
mov
test
lret
iret
cmp
mov
push
jns,pn
adc
sbb
jno
pop
cmp
into
pmullw
push
adc
outsl
jp
stos
sbb
cmp
and
lods
mov
push
shrl
xorl
push
out
inc
lds
imul
pop
sbb
add
jne
or
popa
jp
push
gs
arpl
xchg
and
imul
jmp
popf
mull
mov
or
cmp
pop
push
cltd
mov
and
jns
scas
jbe
fxch
sbb
sarb
jge
adc
aaa
dec
repz
lcall
enter
push
xchg
inc
sbb
xchg
call
shl
xchg
int
add
cmp
out
pop
scas
push
shr
jo
mov
aaa
xchg
mov
sub
cwtl
jns
jge,pn
fwait
pop
sub
test
cmc
xchg
adc
dec
add
imul
movsl
in
sbb
out
pop
lret
cmc
loop
pop
scas
cs
dec
jecxz
popa
data16
gs
xchg
jl
lahf
cmp
dec
mov
sub
push
lcall
xchg
inc
rorb
hlt
dec
push
xor
stos
mov
cmp
std
fsub
push
in
push
gs
test
or
sub
sub
sbb
mov
pushf
cmpsb
into
push
frstor
aam
mov
movsl
or
out
lods
into
scas
lods
dec
hlt
xchg
jge
mov
insb
jle
leave
pop
or
ja
sub
jno
ja
xchg
sub
arpl
dec
int
dec
push
inc
clc
cmc
sub
fcoms
xor
cmpsl
ljmp
test
inc
pop
sbb
inc
sub
mov
xorl
cmp
insl
or
loope
sahf
xor
outsb
hlt
nop
mov
fistpll
mov
mov
into
lods
icebp
enter
mov
push
cltd
cwtl
pop
into
mov
dec
pop
cltd
sub
jbe
pop
inc
je
push
xchg
cmp
cmp
bnd
sbb
ja
or
mov
mov
cmp
mov
pusha
lcall
ret
xor
enter
insb
cs
sbb
sub
push
stc
icebp
popf
fdiv
push
add
mov
jo
out
std
fmull
int
xchg
lahf
sub
outsb
jl
dec
mov
daa
fs
dec
stc
pop
aaa
jbe
xchg
inc
add
mov
cmp
cmpsb
les
mov
daa
dec
sub
insl
lcall
lds
lods
fmuls
insl
jmp
mov
mov
cwtl
xchg
popa
sub
pop
mulb
pusha
cmp
data16
lret
pushf
mov
cmc
sbb
xor
repnz
into
scas
icebp
jge
loopne
jecxz
jb
notl
xchg
lods
loopne
leave
les
ret
jge
arpl
xor
push
inc
jnp
mov
divb
add
jecxz
adc
loope
mov
out
adc
mov
mov
clc
inc
mov
pop
cli
out
cmpsb
les
fwait
jle
ror
sahf
mov
dec
lds
sub
sub
push
fsubs
popf
mov
int
aad
enter
adc
ret
push
fisubs
mov
sysexit
gs
lds
mov
imul
scas
clc
xchg
test
dec
sbb
ds
pop
mov
rclb
cmpsb
mov
mov
add
loopne
xchg
hlt
mov
addb
rorb
or
in
lret
or
stos
sub
jno
dec
and
lock
insl
scas
jmp
das
jae
rep
insb
jae
shll
lcall
lret
jbe
repz
or
std
cmpsb
mov
and
and
mov
hlt
outsb
out
bound
test
add
movsb
lret
mov
jb
jle,pt
mov
popa
mov
xor
and
pop
jp
fadds
imul
push
add
mov
repnz
pop
jnp
inc
dec
fwait
sbb
imul
test
mov
push
jmp
or
clc
ret
add
xorb
fwait
imul
cmp
sbb
pop
or
sub
sub
dec
sub
xchg
movsl
in
nop
push
xor
sbb
ja
mov
aas
nop
push
and
addl
pop
jae
push
mov
cmc
sub
and
ljmp
lret
mov
or
jg,pn
mov
xchg
pop
add
and
test
mov
je
jno
aaa
lcall
cmpsb
pop
jo
ret
inc
inc
in
js
jb
dec
and
sbb
dec
mov
cs
mov
shll
in
mov
rorl
out
cmp
add
xor
ljmp
xor
insl
cli
test
inc
ja
adc
packuswb
rclb
jge
or
roll
loop
push
fs
mov
pop
loopne
f2xm1
push
jl
xchg
inc
dec
out
mov
repz
xrelease
and
and
jae
dec
int
inc
les
mov
xor
push
jae
out
sub
jne
jo
cmp
andl
xlat
roll
mov
add
jno
data16
popa
adc
lock
in
iret
and
and
and
ret
push
sub
shll
add
stos
inc
and
sub
mov
je
repnz
sub
negb
cmc
xor
into
dec
ficoml
xor
cmpsb
mov
rorb
sbb
mov
inc
xlat
mov
cwtl
pop
add
out
jae
es
fsubr
xor
inc
pushf
jb
test
xchg
aaa
push
rcrl
inc
sub
pop
dec
out
cmp
sbb
aaa
loopne
test
int3
jl
cmp
adc
in
icebp
inc
dec
xchg
jge
jno
jge
jg
mov
cmpsb
notl
enter
fsubs
and
jb
mov
out
dec
outsb
test
cmp
es
pop
cmpsb
stos
roll
jb
cmp
adc
xor
aad
stos
sbb
dec
outsl
shlb
int
add
fists
fsts
jg
pop
in
dec
jp
push
cmp
jle
cmpsb
rol
test
rcrl
push
add
cltd
cmp
call
push
out
push
xchg
gs
outsl
fmull
out
jge
fidivrs
jecxz
stc
sbb
push
test
fimuls
repnz
mov
push
pop
mov
pop
xchg
cltd
jl
and
xchg
cmpsl
cltd
or
dec
test
inc
xor
cmp
lret
stos
cmp
addr16
outsb
push
lea
adc
mov
sbb
shll
mov
sahf
mov
lcall
ret
xor
mov
pop
rorb
cli
cmp
inc
cwtl
pop
scas
inc
pop
xor
add
sbb
mov
pop
outsl
out
jns
ja,pn
mov
xchg
shr
sub
push
dec
jae
jg
lcall
pushf
addr16
add
test
movsb
jecxz
insl
push
dec
cwtl
addr16
push
scas
xor
lahf
loope
fcompl
or
mov
mov
inc
imul
dec
addb
imul
cmpsl
xor
aas
fiaddl
cwtl
sbb
and
aaa
sti
cli
sub
fisttpl
push
mov
movsb
xchg
fdivl
out
fsubr
inc
addr16
pop
fnstenv
mov
inc
lea
mov
nop
xchg
or
and
ret
and
xor
push
xchg
mov
xchg
cltd
jae
xchg
jle
scas
pop
push
jb
pop
sub
in
mov
jle
es
rol
sbb
std
xchg
aam
and
sub
imul
sub
mov
pop
test
push
pop
js
xchg
push
pop
add
imul
adc
mov
iret
inc
xor
push
repz
das
ffreep
fld
adc
loope
test
jbe
in
out
fisubl
pop
mov
cli
mov
ja
xchg
jle
sub
out
in
fwait
lock
push
call
stc
out
cmpsb
mov
out
icebp
pop
leave
add
bound
stos
push
sub
ljmp
mov
jne
ljmp
je
stc
jmp
jno
out
xor
push
sti
divl
mov
xorl
or
mov
roll
mov
imul
lock
adc
icebp
mov
rdmsr
pushf
lods
cltd
xchg
adcb
sub
sub
xchg
test
out
mov
jns
mov
clc
pop
cmp
pop
fildll
inc
sbb
scas
test
cltd
ljmp
in
xchg
imul
cmc
lods
or
sbb
rol
inc
or
test
mov
sbb
and
ss
js
sbb
pop
scas
push
jmp
add
mov
xorl
push
fwait
lcall
dec
xchg
add
insb
xchg
mov
iret
jle
pop
mov
into
popa
pop
out
ljmp
or
add
into
inc
dec
lret
or
fs
cli
push
repnz
xchg
call
xchg
inc
and
xlat
test
push
cld
adc
jp
add
rcll
addb
pop
aad
outsl
insw
popf
inc
push
sbb
and
lahf
int3
int
jno
xchg
mov
dec
or
adc
pop
mov
cmp
mov
pusha
sbb
jbe
test
fwait
xchg
mov
jg
popf
xchg
orps
sub
stc
pop
xchg
sub
pop
mov
cmp
fisttps
shlb
pop
mov
and
out
or
xor
scas
test
sahf
push
xor
xor
out
outsb
aam
lock
jp
test
xchg
pushf
pop
fists
lea
mov
xor
sub
cld
xor
and
inc
outsb
notb
push
in
mov
icebp
sqrtps
add
lock
test
clc
mov
std
jnp
orb
jns
xor
or
xchg
adc
dec
xchg
lret
cmp
inc
dec
outsl
xchg
mov
mov
and
pushf
insb
cmpsl
mov
cmpsl
cmc
push
jbe
or
rcrl
ds
add
repz
test
adc
xchg
jge
add
push
loope
in
lock
ss
sub
mov
cmp
fs
js
jae
mov
inc
push
xchg
hlt
cmp
mov
xchg
xor
ljmp
mov
sub
aas
sub
out
push
imul
lret
dec
ljmp
out
mov
pop
lahf
mov
loop
cmp
and
aaa
cwtl
lds
mov
dec
adc
in
lea
sbb
and
scas
dec
cmpsl
lcall
js
sbb
mov
stc
inc
fs
stc
lret
or
addr16
inc
xchg
sbb
mov
decb
jae
stc
jns
pusha
or
mov
das
inc
ds
test
aam
dec
jmp
faddl
das
cmp
jo
dec
and
icebp
test
stos
mov
and
jbe
in
xor
int
cmpsl
mov
pop
cmp
pop
sub
test
and
das
inc
hlt
insl
pusha
adc
rcr
mov
and
enter
cltd
dec
daa
push
jg
repnz
push
or
in
cmpsb
jmp
cmp
push
es
push
push
dec
xor
inc
mov
jne
fs
cmpsb
xchg
adc
insb
jno
lods
jb
aas
mov
stos
mov
popa
fbstp
mov
xor
xor
stc
shll
lret
stc
shll
movsb
into
pop
ret
ss
add
sub
int
cmp
pop
movsl
or
loope
adc
add
ss
xchg
inc
idiv
les
rolb
pop
mov
pop
adc
adc
fcoms
insl
test
pop
mov
cmp
imul
cmp
add
cmpl
inc
out
dec
adc
and
mov
addr16
leave
ret
sbb
adc
pop
add
repnz
mov
push
mov
sub
outsl
rorl
mov
loope
mov
cmpsl
lahf
dec
jl
push
stos
mov
sbb
fwait
push
je
pushf
pop
jbe
imul
ja
and
hlt
inc
and
bound
clc
sbb
sub
xor
or
or
fildl
mov
and
fsubl
movsb
add
bound
shll
and
sbb
push
lahf
mov
or
or
and
jno
cmp
sbb
mov
in
adc
pop
mov
test
leave
xchg
pop
push
cwtl
cwtl
movsl
sub
js
push
data16
push
insb
mov
pop
jne
loopne
inc
add
pop
add
or
repnz
xchg
imul
xor
into
lcall
lcall
loop
aas
adc
adc
mov
jmp
aad
loop
int3
gs
scas
roll
stc
movsl
in
fistpll
gs
jl
push
ljmp
shrd
push
mov
cmp
cmp
in
push
mov
xor
cmpl
jge
loop
sub
sbb
push
dec
rcll
and
sbb
lahf
xchg
in
inc
add
jg
cmp
sub
into
push
in
sub
jg
nop
sbb
les
xor
push
in
mov
fstpl
fildll
cmc
ret
jo
jae
fsub
inc
mov
mov
stos
jnp
rorb
les
fwait
cltd
push
xor
mov
outsl
faddl
dec
repnz
mov
xchg
cld
xlat
push
jne
fnstcw
rorl
in
sbb
and
fsubrl
or
popf
push
repnz
jge
inc
iret
push
or
inc
push
pause
mov
xor
scas
ja
sub
mov
jge
push
mov
xor
nop
inc
scas
xchg
adc
jne
xlat
data16
ss
cmpl
arpl
pop
lock
shl
dec
xchg
jne
lret
jns
lahf
jge
in
mov
imul
adc
sbb
out
xor
adc
fcomi
jge
pusha
inc
neg
jecxz
mov
popa
pop
mov
ror
loope
mov
mov
ret
sbb
sbb
clc
mov
jmp
outsl
jno
mull
dec
mov
or
mov
adc
shrl
xchg
das
call
dec
outsl
inc
lods
pop
inc
inc
push
bound
orb
loope
push
xchg
add
and
je
popf
push
pop
ja
pop
fsub
jp
lods
push
push
js
enter
arpl
xchg
and
icebp
rcrb
in
dec
jns
add
cmpsl
push
cmpsl
pop
push
xorb
sbb
sub
stos
fdiv
xor
sbb
nop
pop
sub
jb
and
popa
xor
lret
pop
pop
aaa
sub
fistps
dec
mov
mov
xchg
dec
imul
inc
out
ds
cmp
fbld
jne
cmc
inc
outsb
mov
and
mov
adc
sub
mov
adc
cmp
mov
lods
push
mov
sti
mov
dec
add
iret
pop
fcom
jb
xchg
ja
imul
jmp
sbb
cld
test
into
xorl
mov
lahf
test
rep
sub
pop
rclb
outsl
fcompl
sub
jmp
xchg
pusha
push
xchg
xchg
aad
cmp
sbb
mov
loope
sahf
jae
mov
adc
loop
sub
mov
popa
lret
lret
mov
pop
popa
cwtl
int3
mov
std
daa
pop
or
cmpsl
popa
fistps
das
and
jge
in
movb
cmp
popf
jge
rclb
mov
sub
std
rcrb
fdivrl
aam
xchg
xchg
aam
shlb
cmpsl
rcrl
inc
and
inc
pop
sub
clc
ret
mov
push
icebp
inc
inc
pop
bound
les
push
sub
ja
ds
es
roll
and
xchg
stc
das
stc
mov
mov
mov
repz
out
loope
inc
stos
ficoms
push
xor
dec
push
aam
and
mov
sbb
leave
cltd
filds
aam
adc
in
fwait
pusha
arpl
scas
inc
movsb
data16
sub
test
je
mov
int
adc
push
pop
jnp
mov
fdivrl
and
repz
scas
fidivrs
je
aad
std
inc
ds
addr16
insl
add
loopne
mov
roll
jo
stc
insb
jle
jnp
lret
jns
mov
jo
xor
cs
stos
rcrl
jmp
mov
sub
cmp
inc
fidivl
insl
jns
int3
fldcw
mov
lods
mov
or
ret
add
dec
rcrb
push
push
out
mov
pop
jp
cltd
in
push
cmpsb
xchg
cmc
idivb
sbb
sbb
lods
leave
aaa
or
frstor
loope
fmuls
notl
movb
pop
das
cmp
lret
dec
rolb
jge
push
data16
ja
aaa
out
sbb
jl
mov
fldl
xchg
push
stos
popf
inc
insb
fdivl
mov
or
stos
cmp
std
mov
ficompl
aam
xchg
arpl
test
xchg
loopne
test
and
xchg
jle
clc
xchg
addb
sub
cmp
mov
pop
mov
sarl
jnp
addr16
shll
imul
out
addr16
clc
mov
repz
lahf
repnz
xchg
xchg
and
fistpl
add
aad
mul
xor
mov
jo
out
rorb
inc
adc
pop
mov
mov
testl
std
shl
test
push
jnp
pop
ljmp
clc
dec
rcr
xor
mov
loop
lds
nop
in
movsl
dec
orb
jo
test
out
jl
dec
fistl
lods
pop
mov
in
sub
cmpsl
repnz
dec
cmc
pop
sub
dec
insb
pushf
shll
mov
xchg
xchg
int3
push
lock
push
and
stos
imul
mov
loope
add
aaa
out
mov
incb
scas
jne
adc
inc
jp
iret
push
lcall
sbb
sbb
int3
mov
pop
cld
ja
fdivs
xchg
cmp
lahf
leave
sub
in
and
cmp
sti
sbb
cmp
inc
jl
jle
dec
pop
mov
mov
inc
nop
cmp
sub
out
jmp
out
add
mov
xchg
dec
mov
lret
sahf
xlat
jmp
insl
fists
mov
jmp
jg
add
lret
mov
dec
sbb
adc
add
lock
and
xchg
in
rorb
mov
or
std
ret
pop
fildl
les
mov
mov
mov
les
shlb
cli
in
dec
stos
fs
out
cld
test
mov
sub
decb
pop
insl
pop
mov
lods
and
int
adc
xchg
jle
pop
jmp
xor
shl
sub
jp
sub
pop
push
inc
xorb
jb
dec
mov
mov
fisubrs
xor
mov
cltd
sbbl
jnp
in
testb
xor
mov
pop
jne
gs
pop
adc
pop
nop
pop
test
push
outsb
or
push
pop
outsb
popa
pop
and
movsb
mov
clc
xchg
out
outsb
pop
outsl
rclb
out
mov
inc
pusha
mov
fs
mov
inc
push
mov
test
loop
or
pop
adc
xor
xchg
and
add
hlt
push
pop
das
xchg
and
jae
add
cltd
xchg
ds
repz
cmpl
icebp
jmp
sbb
mov
movsl
mov
nop
inc
add
push
cmp
std
shr
pop
mov
mov
jb
imul
pop
pop
push
ret
imul
mov
nop
outsl
add
inc
repnz
iret
cmp
inc
jg
out
mov
pop
cmp
fwait
mov
adc
dec
repz
into
inc
cmp
iret
in
jb
ljmp
js
outsl
or
lahf
and
pop
mov
sbb
lock
push
fs
adc
and
lahf
loopne
nop
jb
imul
arpl
push
or
adc
testl
pop
dec
xchg
push
xor
imul
push
test
and
shl
es
mov
dec
stos
dec
imul
outsl
adc
aas
mov
lcall
or
hlt
lea
and
popf
in
push
sbb
sbb
dec
xor
sti
push
int3
dec
jmp
mov
and
or
sbb
rolb
jns
data16
xchg
jge
mov
lock
les
bound
sahf
adc
jae
cs
fdiv
lds
ret
lahf
mov
nop
fidivrs
pop
fists
and
lcall
and
ljmp
xor
movsl
dec
xchg
xchg
test
xchg
int
pop
je
je
bnd
xor
sub
js
xchg
cmp
ja
pop
inc
add
out
cmpsl
enter
xchg
cmpsb
jmp
int3
mov
or
fidivrs
aas
or
add
stos
pop
out
gs
fdivs
neg
mov
push
cwtl
and
daa
aad
dec
mov
in
dec
cltd
sub
mov
cmp
lock
and
in
dec
xor
arpl
xlat
arpl
scas
int3
fisubl
push
push
jbe
cmp
rorl
scas
cmp
mull
or
push
mov
xlat
repnz
sbb
xchg
mov
movl
popf
pop
jno
test
inc
mov
inc
and
loop
jg
stc
sbb
push
push
js
aas
jmp
clc
and
inc
push
mov
outsb
cmpsl
dec
dec
scas
push
loopne
cmp
clc
aaa
pushf
out
sbb
insl
ds
mov
mov
push
fdivrl
dec
imul
pop
pop
cmp
stc
out
rcr
cmp
fildl
adc
loope
dec
stc
outsl
dec
mov
enter
adc
jecxz
pop
lret
push
cld
sub
cmp
adc
xor
gs
scas
stc
call
cs
adcb
adc
not
cmpsl
aad
mov
and
sub
aad
add
lahf
inc
sar
dec
jp
jp
lds
hlt
sbb
push
addr16
xchg
mov
subl
inc
sbb
push
arpl
mov
jbe
pop
sub
icebp
mov
daa
push
scas
lock
aam
test
or
hlt
fs
shll
mov
xchg
cmp
or
stc
mov
xor
les
sahf
cmp
xor
sub
inc
js
jae
les
xor
mov
xchg
jge
sub
loopne
outsl
push
insb
lahf
jmp
loopne
inc
stos
add
sub
mov
xchg
inc
shr
adc
sbb
jge
in
mov
xlat
mov
leave
sub
mov
inc
in
mul
xchg
dec
cmp
mov
dec
pop
push
arpl
jge
in
push
push
and
ss
lea
cmp
sub
push
sub
outsl
lods
pop
pusha
lahf
jp
movsb
insb
add
mov
aas
jmp
jno
xchg
mov
mov
inc
fwait
mov
and
adc
xor
int3
cmp
pop
insb
xchg
je
lods
or
sub
and
pop
jmp
mov
inc
notb
ds
inc
sbb
insl
pop
xchg
je
roll
mov
pop
cmp
lret
je
push
and
pop
sub
dec
leave
mov
jno
sub
ret
mov
out
lahf
push
add
cmp
push
and
add
mov
pop
sub
mov
test
addl
xchg
adc
icebp
xorb
xchg
pop
daa
int3
ror
and
adc
sti
in
push
add
xchg
mov
orl
dec
adc
mov
mov
dec
cmp
stc
popa
or
ss
movsl
jnp
loope
inc
fmuls
fildll
sub
push
das
inc
sub
bnd
add
dec
jbe
dec
mov
out
xor
movsb
cld
cmc
mov
dec
push
in
mov
inc
dec
mov
cmp
jo
mov
iret
aas
cmp
inc
xlat
push
xor
or
push
jle
xchg
sub
int
mov
dec
icebp
xor
int3
aas
loope
in
add
movsb
testl
xchg
push
mov
add
fwait
cmp
fidivs
push
pop
out
xchg
or
loopne
add
sbb
jmp
iret
inc
mov
scas
or
xor
lods
sbb
pop
xor
or
add
test
fsubrl
sbb
jg
nop
test
mov
push
pop
mov
cli
dec
pushf
jno
or
outsl
pop
xor
lret
pop
outsb
int
fbld
in
add
iret
call
mov
setle
xchg
xor
jecxz
pop
or
mov
daa
sbb
dec
insb
es
movsb
cmp
dec
and
lcall
arpl
sub
sbb
dec
rcrl
imul
and
dec
fisttpll
hlt
ret
out
inc
cwtl
fisubrs
mov
push
mov
cmpb
repnz
mov
decl
dec
addr16
ja
dec
mov
lea
mov
mov
pusha
inc
xchg
xchg
pushf
loopne
inc
aam
iret
jb
daa
rorl
inc
or
lret
fwait
lods
xor
cmpb
jnp
xchg
es
adc
sahf
xchg
ljmp
in
sahf
sub
fildl
inc
imul
jle
dec
mov
pop
stos
sbb
fcmovb
pushl
mov
push
jmp
dec
jae
test
mov
mov
ja
pushf
sbb
ljmp
pushl
cmpsl
xor
push
cli
sub
pop
xor
xchg
test
inc
lock
cli
fwait
or
cmp
cs
ja
lods
scas
jbe
in
es
sahf
pop
loope
and
frstor
fcmove
mov
ret
aad
push
lret
add
loopne
movsb
sub
jmp
xchg
xchg
pop
dec
xor
jb
xor
jp
cmp
cltd
pusha
enter
mov
jno
pop
rcll
mov
push
aas
xor
inc
test
pop
clc
push
dec
hlt
fdivl
sbb
and
in
pop
and
xor
stos
gs
sarl
scas
and
addl
dec
jo
aad
filds
dec
xchg
pusha
xchg
jp
es
test
lds
das
xor
ret
jbe
cmpsl
das
cmp
imul
ret
inc
add
sub
mov
int3
xchg
aaa
cmp
test
xchg
into
and
stos
sub
scas
fld
xchg
push
sub
aas
or
jle
cltd
out
fistpl
cmp
mov
aaa
dec
add
pop
test
sbb
sbb
pop
loopne
push
bnd
mov
loopne
jmp
dec
mov
adc
sbb
xchg
jns
adc
or
pshufw
pop
data16
insl
pop
add
lret
push
xor
jecxz
cmp
repnz
testl
sbb
or
dec
pop
pop
inc
mov
jmp
mov
hlt
sub
push
inc
jle
adc
ja
and
dec
and
jle
sub
push
fwait
int3
adc
test
imul
out
mov
test
scas
outsl
les
sbb
out
sub
lods
add
xchg
nop
adc
jno
pop
xor
rorl
push
xchg
cmpsl
mov
xchg
rcrb
test
push
xor
inc
jmp
mov
push
addl
outsl
lock
dec
out
cli
cwtl
and
cltd
das
ljmp
stc
and
fildll
lret
or
xor
and
int3
out
std
or
pushf
jmp
mov
aad
pop
cmpsb
xor
out
push
add
jo
mov
icebp
push
and
adc
inc
jae
mov
mov
mov
adc
lahf
std
test
mov
or
and
inc
inc
push
jmp
pushf
rcrl
jle
lcall
jo
clc
xchg
rorl
and
adc
imul
pop
arpl
mov
arpl
pusha
xor
mov
pop
sbb
sahf
das
add
add
adc
fcoms
jno
cmp
jne
test
inc
and
xchg
pushf
adc
jge
or
fwait
pop
es
orl
and
cld
pop
loop
mov
lret
rolb
aad
out
mov
lds
sbb
std
sbb
sbb
dec
test
lcall
sbb
test
aad
pop
xor
jb
lret
adc
add
mov
pop
cmp
mov
push
insb
inc
xor
sub
inc
rol
test
in
cld
dec
sub
faddp
ret
sbb
or
outsb
pop
lret
jns
inc
adc
dec
ret
insl
jno
jge
lock
dec
xor
hlt
sarl
and
mov
lock
or
dec
iret
jbe
or
out
daa
lcall
fbstp
pop
inc
sub
test
add
mov
sub
mov
xchg
loopne
scas
fdivrs
dec
mov
xorl
or
movsb
push
mov
test
cld
shlb
mov
jo
jge
mov
and
cld
mov
pop
push
lds
stc
aaa
les
xor
sti
stos
mov
sbb
daa
xor
shr
jle
and
xchg
int3
cs
cmp
xor
add
mov
dec
or
mov
aad
aam
mov
fistpl
cmp
xor
lods
std
mov
into
mov
arpl
cli
and
push
jns
xchg
sub
mov
aas
in
push
sub
push
pop
fcomps
inc
sbb
xchg
xchg
nop
push
cmpsl
push
addl
pusha
mov
adc
and
cmc
cmpsl
in
jge
pop
jge
adcl
js
insl
xchg
xchg
stos
out
shll
xchg
jns
lcall
roll
and
stc
or
popf
xchg
or
fisubrs
pop
std
cmp
ror
cmp
imul
push
cmpsl
icebp
fiaddl
xor
mov
mov
sub
dec
xor
pop
xor
inc
icebp
outsl
enter
mov
or
jl
test
ljmp
cmppd
sbb
stos
imul
xor
and
out
repz
pushf
dec
pop
movsb
push
test
sbb
insl
fisubs
bound
dec
cld
lock
ss
or
inc
mov
nop
dec
div
ja
inc
stos
sbb
or
or
adc
sbb
add
test
and
and
pop
fbstp
sub
stos
mov
mov
cmp
clc
scas
and
imul
insb
fisttpl
shrl
sub
xchg
jp
mov
lods
jne
jmp
arpl
pop
mov
pop
inc
clc
mov
sub
pusha
jl
xor
fwait
aas
jmp
xchg
xchg
inc
rolb
insl
jae
cmpsl
mov
xor
outsl
popl
push
adc
aam
inc
cs
stc
in
pop
adc
jge
nop
pusha
dec
or
bound
in
add
push
dec
daa
mov
cmp
jno
xor
fpatan
stos
jl
popf
fwait
addb
jno
popf
push
test
testb
gs
ds
cli
rcrl
mov
popf
dec
add
push
inc
inc
fldenv
stos
call
push
mov
inc
mov
insl
out
call
jg
scas
mov
cmp
mov
sbb
sub
cmp
adc
dec
jb
ret
pop
sbbl
fsubrl
mov
push
dec
xchg
scas
inc
movsb
stos
sub
insl
shlb
ja
cmp
jbe
out
insl
dec
cmp
mov
test
imul
mov
push
mov
mov
test
add
ja
pushf
mov
lods
cmp
test
or
or
aam
gs
pshufw
jnp,pn
jl
jno
out
in
sbb
addl
sub
sbb
fwait
repz
jp
pop
movl
fidivs
sti
sbb
int3
in
sbb
mov
mov
cmp
loopne
sub
add
mov
iret
lods
repnz
push
hlt
inc
inc
ret
je
add
jp
nop
adc
xchg
std
iret
call
cs
lret
and
fs
popf
push
xchg
cmp
enter
dec
test
or
das
jg
jo
adc
outsl
pop
xor
out
jl
mov
lods
negl
jecxz
mov
int3
sub
mov
xor
leave
dec
das
jbe
int3
cmp
in
add
fwait
mull
and
ja
jne
sbb
stc
cmp
dec
rolb
pop
in
ljmp
sahf
leave
adc
mov
jg
and
insl
cmpsb
inc
addr16
inc
jae
mov
bound
loopne
sub
in
dec
mov
mov
lret
lret
dec
jmp
mov
les
aam
mov
mov
loopne
lret
jle
icebp
push
int3
mov
xchg
jp
mov
sbb
fwait
mov
dec
dec
jo
mov
xchg
mov
pop
aaa
repz
stos
fidivrl
frstor
adc
pop
cmc
repnz
lock
add
cmp
push
lahf
add
fsubrl
pop
mov
mov
aaa
add
jl
daa
popf
addl
mov
add
mov
shl
push
dec
cs
aas
mov
stos
das
and
icebp
ror
cmp
repnz
xor
je
xchg
imul
sbb
dec
mov
popa
adc
aad
testb
mov
stos
and
pop
shl
cmp
add
push
lock
sbb
call
pop
sbb
sahf
jmp
lret
xchg
push
sbb
inc
lret
mov
test
and
sub
mov
into
sub
ss
or
xchg
sbb
mov
stc
mul
fldl
xchg
inc
or
shlb
test
std
and
and
sbb
nop
int
movsb
or
xchg
or
popf
xchg
sarl
ret
adc
pop
cmp
cmp
inc
cmp
enter
xor
cld
loop
mov
xchg
ljmp
negl
ja
lods
call
cmp
jp
mov
orl
loope
add
mov
roll
inc
lods
orl
inc
pop
cmpl
xchg
aam
or
daa
jo
push
sti
adc
xchg
popa
repnz
mov
mov
popf
inc
cmp
lret
loop
in
adc
mov
xchg
sbb
inc
mov
mov
cmpsl
pop
dec
aam
mov
inc
cmpsl
xor
fcomps
scas
and
sbb
push
out
ret
inc
ljmp
mov
dec
inc
ja
cmp
cs
add
sbb
pop
pop
inc
dec
inc
dec
xor
rcll
icebp
add
push
xor
sbb
sahf
cs
popa
inc
or
scas
cld
pop
xor
sbb
psrlw
dec
mov
repz
adc
es
xorb
xacquire
inc
xor
rorl
in
sti
mov
mov
mov
xor
das
jb
sbb
pop
cmp
jbe
lock
mov
movsl
outsb
jne
mov
cmp
fildl
fistl
dec
fnstsw
inc
cmpsl
xor
das
dec
enter
sahf
pushf
cmp
pop
mov
jbe
cmc
nop
sbb
popf
aad
loope
lret
jbe
xor
push
sub
insb
outsb
mov
pop
dec
repz
test
movsb
xor
call
mov
dec
stos
pop
in
hlt
scas
ds
sub
int
sahf
dec
push
dec
sarb
test
jns
shl
mov
and
sub
aam
push
das
bound
jg
xor
insl
jmp
adc
sbb
sti
mov
cmp
cmp
hlt
or
cmp
cmp
jb
int3
lods
arpl
sub
cmp
or
pop
jne
or
cmpsl
lret
jo
or
imul
out
and
dec
jb
pop
sub
push
sbb
push
jbe
sub
loop
push
push
jl
repz
pop
jmp
inc
shlb
andb
sub
clc
aam
push
sub
push
test
ja
cmc
test
inc
jle
pop
xor
push
sti
cmp
call
inc
dec
xchg
test
loope
daa
sarl
mov
or
mov
jno
roll
xor
add
outsb
xchg
push
pop
xabort
and
sub
sahf
xchg
lods
inc
dec
inc
sub
clc
cmp
pushf
jno
add
jb
jmp
stc
cwtl
sub
pop
pop
out
ror
insb
imul
inc
fisubl
sbb
push
push
jle
xchg
jl
jne
jns
xchg
push
mov
mov
xor
pop
dec
lret
aam
mov
mov
lock
sti
xor
arpl
push
pop
lock
fmul
cmp
dec
add
xchg
sbb
fldl
addl
add
xchg
es
imul
test
pop
stos
data16
sbb
scas
mov
out
pusha
test
pushf
add
push
dec
mov
sbb
adc
leave
es
xchg
jmp
and
sub
sub
lret
pop
push
loopne
and
fadds
push
stos
popa
add
push
cwtl
push
popf
repz
insl
jge
cmp
das
imulb
xchg
loope
jnp
jne
push
into
gs
xor
mov
jmp
inc
xlat
loope
stos
jbe
add
cmpsb
shl
or
test
lods
adc
mov
rorb
clc
insb
out
subl
jae
fs
insl
daa
arpl
xor
inc
jge
iret
loope
lret
aas
in
cmc
bndstx
lds
push
mov
cmp
gs
jecxz
lahf
push
pusha
sub
mov
xor
sub
inc
nop
aas
jo
and
shrl
lods
push
leave
fs
push
test
push
cwtl
imul
rcrl
pop
fsincos
cmp
push
fistl
sub
dec
mov
sub
inc
fs
scas
cmp
mov
test
movsl
adc
test
mov
fdivr
mov
repnz
repnz
mov
fwait
adc
inc
lahf
sarl
jmp
inc
sbb
push
pop
add
jecxz
cmpsl
or
mov
adc
push
add
pop
xchg
cmp
stos
shrl
inc
inc
fwait
aas
rorb
ret
cmp
cmp
push
shlb
enter
dec
add
cmp
out
dec
xchg
out
enter
lock
cmp
cmpsl
push
inc
fs
aad
mov
fisubs
or
enter
adc
mov
pop
jle
inc
or
dec
xor
push
iret
and
popl
pop
jecxz
inc
insb
xchg
xchg
or
fsubs
enter
pushl
xchg
out
and
dec
cltd
push
inc
imul
scas
jp
in
sub
test
fs
sahf
cmp
xlat
sbb
arpl
in
sbb
or
jae
xchg
mov
inc
add
aaa
sub
js
sarb
inc
fisttps
loope
adc
maskmovq
fldenv
mov
adc
xor
adc
add
pop
xchg
or
mov
xor
cmpl
sbb
dec
pop
outsl
mov
fcmovnu
mov
lcall
fcoml
mov
addr16
or
and
push
jle
int
out
inc
adc
mov
jno
rclb
dec
sbb
adc
adc
movsl
or
dec
xchg
mov
mov
mov
mov
std
push
ror
and
in
pop
call
jno
xchg
out
pop
out
push
fucomp
mov
jg
add
hlt
mov
and
sbb
rorl
fldcw
mov
mov
mov
cmpsl
jns
adcb
pop
fiaddl
mov
outsb
test
cmp
cmp
push
or
pop
inc
ljmp
int
test
les
mov
in
xchg
nop
push
xor
mov
sbb
xlat
jnp
cmp
sarl
adc
sub
add
sub
stc
and
fmull
aaa
nop
xor
push
stos
in
out
dec
mov
dec
dec
sbb
bound
lahf
inc
int3
cmc
xchg
and
fdivp
out
dec
lock
ss
cmpsl
mov
adc
cmp
adc
lcall
and
mov
jns
cli
mov
out
xor
adc
pusha
pop
ljmp
movsb
cmpsb
jbe
adc
inc
int3
imul
cmc
je
mov
xor
idivb
outsb
mov
cmp
ss
cli
jnp
or
push
jmp
dec
mov
mov
mov
or
call
cmp
outsb
and
mov
cmc
adc
and
out
adc
pop
mov
and
mov
pusha
mov
into
sub
mov
push
inc
add
mov
inc
subb
cmpl
insb
add
lahf
testb
mov
pop
pop
adc
xchg
jmp
push
shl
mov
xlat
sbb
push
add
or
dec
ljmp
insb
mov
movsb
dec
dec
ficoml
mov
jae
nop
mov
addr16
mov
adc
mov
lea
cmp
insb
icebp
gs
xchg
fucomp
mov
lds
lock
ret
jb
adc
pop
jne
sub
mov
cli
dec
out
stos
outsl
xchg
stc
or
push
push
arpl
sti
mov
push
or
lods
insb
and
push
xchg
or
jne
sub
dec
stc
rorb
xor
lea
adcl
lcall
jecxz
adc
push
arpl
movsb
mov
xchg
jmp
scas
daa
in
into
xor
xor
scas
ret
cmc
jp
daa
push
into
and
cltd
jle
jne
das
pop
mov
cmp
mov
addr16
pop
andb
popa
and
mov
mulb
cltd
pop
mov
loop
decb
mov
jnp
mov
push
pop
sub
pop
pop
dec
add
scas
dec
loopne
cmp
or
out
out
and
leave
cmp
dec
aaa
mov
pop
jne
insb
inc
mov
xchg
fisubs
pop
push
and
movsb
sbb
push
push
ds
sbb
jnp
pop
mov
cmpsb
dec
sbb
les
cld
push
mov
iret
mov
push
popa
inc
adc
inc
addl
gs
or
dec
mov
dec
mov
xor
mov
sub
repz
lret
jmp
ja
push
cld
add
lods
out
pop
xlat
out
jge
adc
rcrl
sub
mov
out
cmp
clc
out
inc
stos
das
jmp
sti
add
add
push
pop
pusha
jmp
clc
xchg
jbe
xor
aas
pop
arpl
pop
loope
sahf
sbb
bound
or
fimull
sbb
cli
pop
clc
fsubrl
mov
add
adc
add
test
data16
out
movsl
mov
mov
std
pop
mov
out
cmp
inc
jo
ret
push
fwait
mov
push
jmp
sbb
ljmp
mov
shr
out
pop
adcl
aaa
outsb
rolb
xchg
rorb
inc
call
daa
mov
ret
ljmp
stos
outsl
test
jmp
mov
lods
xor
xor
addr16
rclb
setle
in
in
lret
in
ljmp
sub
push
xchg
mov
add
push
sub
mov
movhps
mov
sbb
dec
rorl
int3
dec
sbb
mov
sub
sub
mov
and
dec
imul
int3
das
clc
mov
mov
in
sub
out
mov
mov
cmpsb
out
mov
dec
jp
nop
inc
out
xchg
sub
dec
pop
lock
sbb
ss
repnz
ss
ds
mov
inc
and
and
popa
pop
les
repnz
loope
pop
adc
out
pushf
repnz
mov
adc
andl
cltd
sub
outsb
outsl
aas
mov
push
shlb
push
scas
pop
lea
lods
cli
xchg
adc
dec
iret
push
and
pushf
adc
rorl
pop
dec
push
sti
inc
dec
call
rorl
and
data16
push
test
pop
int3
and
int3
adc
jge
xor
push
sbb
je
in
inc
adc
fldcw
sarb
and
lods
daa
shll
mov
push
pop
out
lods
sbb
xchg
jl
dec
leave
mov
iret
xor
ficoms
ds
call
fnstenv
adc
pusha
roll
sbb
cld
xor
mov
mov
aas
jmp
fsubs
cmp
sbb
cmpsb
and
sub
mov
movsb
out
push
inc
add
mov
add
inc
das
adc
cmpl
in
loop
jp
daa
or
xor
lret
pop
cmpsb
lods
jno
sbbl
cmp
mov
call
arpl
lock
in
out
imul
pop
mov
cmp
dec
jo
jno
orl
rclb
mov
mov
pop
rclb
dec
jne
push
mov
mov
mov
mov
int3
jle
add
popf
je
adc
daa
inc
enter
jb
rcr
int3
inc
inc
mov
mov
jno
popf
gs
sbb
into
add
jne
jne
or
sub
in
xchg
push
subl
int
pop
push
shl
or
outsl
shlb
lahf
movsl
push
popl
adc
jae
rcll
push
ficoms
cwtl
shl
mov
ljmp
fnsave
pop
xchg
add
in
mov
xchg
cmp
ret
cs
out
add
ret
jg
outsb
sub
ja
lea
repnz
data16
mov
pop
faddl
push
les
xlat
add
push
popa
adc
bound
dec
adc
or
pop
cmovns
mov
inc
jle
push
push
push
imul
pop
inc
sub
imul
sbb
push
je
add
add
inc
ljmp
out
into
shll
in
inc
in
xchg
jge
sahf
stos
std
mov
or
jle
movsb
mov
push
icebp
mov
cld
inc
subl
movsb
mov
and
ret
mov
fmuls
mov
repz
shrl
jp
lods
and
pop
mov
into
int
xor
dec
xchg
fs
test
ret
dec
sub
adc
pop
pop
in
sti
cmc
mov
lret
fcomps
enter
xchg
sbb
rolb
jge
cmc
data16
cmp
cmp
pop
or
jae
xchg
mov
xchg
jp
add
imul
jge
and
clc
mov
test
sarb
cmpsl
cli
je
add
mov
je
inc
insl
or
inc
jbe
iret
in
add
outsb
fwait
inc
in
lahf
cmpb
pop
clc
aad
mul
aam
pop
gs
push
sub
stos
stc
push
cmp
and
js
pop
jne
xchg
jecxz
out
out
and
dec
subl
and
in
or
jmp
movsb
pushf
fidivs
into
into
aas
cmp
sahf
out
stc
shl
xor
pusha
ret
adc
hlt
sub
movsb
popf
mov
inc
lret
dec
inc
sub
jp
cmp
or
lds
cli
sbb
add
and
in
mov
xor
pop
shlb
nop
bound
dec
inc
mov
jle
cmp
pushf
mov
or
cs
inc
inc
fcomps
stc
inc
repnz
orl
sbb
shl
sbb
lods
sub
adc
gs
mov
out
adc
stc
sar
xchg
lret
push
pop
daa
fs
aam
mov
cmp
xor
aad
adc
fidivrl
mov
mov
sub
jmp
lds
mov
cwtl
enter
int
jmp
inc
shll
dec
out
dec
aam
cmpl
push
mov
iret
insb
pop
sub
pop
cmp
lock
inc
push
loopne
jg
xor
and
mov
and
cmp
arpl
mov
inc
insb
jmp
es
push
cmpsb
insb
out
push
mov
call
xchg
mov
lods
lret
repz
test
rolb
inc
lock
adc
ret
stc
pop
ljmp
out
pop
jae
mov
adc
andb
cmp
sti
xor
mov
sti
adc
test
idivl
insl
push
jp
push
xchg
pop
add
ret
mov
mov
xor
cmp
push
cs
sbb
cmpsl
push
cmp
js
cli
cli
jmp
ret
je
imul
fcmovu
or
push
pop
fldcw
pop
les
pop
cld
ficompl
push
mov
loope
pop
fcompl
push
push
pushf
adc
and
loopne
pop
fbld
into
cmp
jno
les
push
sbb
inc
adc
scas
inc
xchg
popf
addr16
xchg
cmp
lds
aas
mov
jge
stos
movups
popl
loopne
std
insb
je
push
xchg
sbb
jbe
je
jb
xchg
nop
cmp
ljmp
xchg
inc
sbb
pop
fbld
imul
mov
and
scas
out
into
mov
jecxz
je
xor
inc
test
push
sbb
cmp
mov
int3
je
int3
shl
push
and
imul
mov
arpl
js
cld
movsl
mov
dec
test
mov
mov
cld
in
mov
fstpt
xchg
xlat
sbb
int3
or
test
fs
pop
xchg
jbe
xchg
jo
sub
push
ja,pt
fucomi
pop
xor
mov
push
stos
mov
cmp
nop
lahf
cwtl
mov
pusha
divb
scas
das
xor
test
test
cmp
loop
es
sbb
xchg
adc
adc
pop
add
xor
dec
rcll
push
mulps
pusha
cmpsl
gs
mov
addl
mov
push
arpl
pop
in
mov
jge
xor
fwait
pushf
sub
mov
fstl
and
or
aad
sahf
push
mov
pop
sub
dec
mov
popa
mov
in
xchg
mov
dec
mov
jnp
cmp
fidivrs
push
mov
and
dec
cmp
jae
jecxz
mov
cmc
enter
add
mov
adc
xor
sbb
out
testl
jnp
nop
xor
data16
pop
es
inc
xor
add
imul
mov
pop
fimuls
fidivrs
sub
xrelease
xor
xchg
xor
add
sbb
sbb
cwtl
push
pop
ret
mov
loope
push
xchg
mov
push
pop
jbe
leave
cmp
fs
lahf
adc
mov
adcl
jb
dec
leave
call
loop
xchg
imul
in
idiv
push
gs
sbb
into
sbb
movl
lret
ljmp
test
idivb
stc
sbb
ret
add
sbb
fwait
cmpb
xor
pop
inc
fisttpl
jbe
mov
cli
xchg
xor
sbb
sub
mov
xchg
push
lcall
push
push
push
cmpsl
and
outsb
rolb
test
add
push
xchg
adc
mov
sbb
repz
push
fisttpll
adc
rcll
xchg
mull
inc
cmpsb
sbb
outsl
or
aad
outsb
ss
mov
jne
test
or
je
sbb
cmp
push
xchg
push
insb
jae
mov
jle
jl
xor
cmpsb
cmp
inc
mov
shll
dec
add
jnp
jae
xchg
int
test
xchg
jno
imul
cmpsl
dec
and
add
and
fcoml
ljmp
sbbl
jmp
sbbl
outsb
mov
decb
in
jae
dec
xchg
dec
or
inc
je
pop
stos
mov
xchg
sub
cmc
xlat
dec
outsl
push
in
repnz
cmpsl
mov
sahf
sub
jl
jmp
iret
loope
dec
mov
mov
or
int
jg
lret
push
dec
mov
xlat
cli
lods
pushfw
insl
call
sub
sarl
imul
repz
stc
jmp
mov
or
imul
jnp
fnsave
sbb
ret
xor
sti
testl
imul
mov
add
push
mov
sbb
fadds
lret
pop
sbb
push
dec
inc
inc
rcrb
out
dec
xchg
outsl
dec
loope
imul
fcomps
cmp
fdivs
dec
pop
cli
ja
es
dec
fbld
ja
sbb
call
repnz
call
mov
add
inc
sti
push
or
rorb
push
add
add
jecxz
mov
ss
iret
cmc
cmp
or
mov
mov
inc
jns
push
lock
js
in
rcl
test
lahf
bound
int
sub
sbb
sbb
jl
divb
pop
mov
adc
adc
in
pop
mov
daa
cld
mov
mov
int3
test
add
stos
add
nop
xor
in
scas
add
stos
ss
repz
sub
loop
scas
add
psubusw
ret
xchg
and
mov
sub
inc
xchg
int3
dec
push
adc
out
pusha
cltd
mov
fstps
leave
jge
mov
fwait
dec
jecxz
lret
aas
mov
divb
mov
pop
add
pop
add
lds
inc
xchg
add
push
mov
pop
movaps
aas
mov
mov
adcb
jge
add
mov
or
mov
xor
mov
lahf
popa
xchg
pop
push
je
mov
add
mov
or
bound
int
sti
pop
mov
and
movsb
sbb
cmp
mull
cmp
dec
mov
xor
jmp
enter
jp
jl
arpl
daa
and
inc
cmp
sbb
jge
cs
leave
add
xlat
xchg
pop
or
movsl
insb
pusha
pop
test
popa
mov
hlt
lret
aas
insl
add
fsubrs
pop
push
ds
cmpsl
mov
jmp
scas
fwait
jg
pop
add
in
pop
cmp
out
xor
imul
testb
pop
out
aad
scas
dec
mov
cli
rcrl
paddw
pop
dec
jecxz
addr16
jae
in
leave
cmp
data16
cmovl
sub
movsl
jno
fwait
aaa
test
push
cmpl
not
jae
int
es
pusha
subl
ret
xor
insl
test
add
mov
in
add
sub
into
pop
sbb
inc
pop
mov
rol
in
ja
fs
and
imul
mov
adc
test
xor
push
cmp
in
sarb
fnstcw
mov
adc
mov
add
in
repz
jb
xor
enter
mov
cmc
or
jle
pop
in
push
test
sub
cli
xor
pop
hlt
fs
arpl
jg
mov
fldenv
adc
add
sub
push
fsubl
sub
dec
mov
add
scas
and
cmc
dec
jne
nop
push
incb
xor
in
in
push
mov
icebp
push
adc
jecxz
push
mov
loopne
rcr
fcompl
mov
xor
movsl
jge
inc
adc
xor
dec
or
inc
pop
scas
test
lock
mov
mov
test
or
ja
pop
pop
sub
rcl
mov
mov
adc
lcall
in
movsb
lret
mov
adc
test
push
or
out
sarl
add
push
add
loope
je
subl
pop
pop
adc
mov
test
in
jb
int
fsub
cltd
mov
ja
or
ret
nop
or
insb
sbbl
mov
ja
adc
leave
or
cmc
bound
pop
shll
mov
cs
pop
mov
insl
push
push
pop
xor
dec
arpl
lock
in
sbb
test
xor
mov
dec
jbe
das
test
push
movsl
fs
jg
lret
or
lods
lock
insl
sarb
push
test
lcall
test
push
out
out
out
into
xor
mov
mov
push
cmp
push
adc
jne
lret
jmp
sbb
inc
jecxz
dec
insb
inc
add
pop
sbb
fsubrl
arpl
xchg
jno
faddl
je
das
fwait
push
mov
jl
repz
pop
xor
push
adc
cs
mov
sub
loop
ret
fnsetpm(287
ja
jl
add
test
aad
ds
repz
rclb
fcoml
dec
cmp
and
fdivs
enter
in
int3
cmpsb
mov
mov
leave
adc
in
mov
into
or
mov
cltd
adc
lahf
scas
hlt
push
in
dec
cld
jae
in
out
fs
push
xor
call
pusha
mov
lods
inc
push
push
xchg
popf
shrb
cmc
and
in
push
xchg
cmp
into
dec
ja
aam
or
jno
popa
push
xchg
fisubrs
pop
mov
orb
lahf
stos
push
xor
pop
int
adc
mov
adc
sbb
hlt
mov
arpl
mov
out
shll
cmp
mov
push
mov
inc
loop
rcrl
pextrw
dec
fsubr
js
adc
sub
mov
sahf
dec
mov
clc
enter
lds
punpckhwd
outsb
mov
pop
inc
or
rol
pop
les
sub
cmp
sahf
and
inc
xchg
fimuls
mov
std
arpl
arpl
xor
in
mov
jae
sub
inc
pop
xchg
mov
adc
mov
data16
stos
sub
add
das
scas
sahf
dec
mov
mov
xor
pop
in
fxam
push
xchg
jecxz
inc
fwait
loope
xchg
cmp
sub
jle
out
jo
pop
mov
push
lds
add
mov
cmpsl
test
call
and
cmpsl
dec
add
inc
mov
outsl
fdivl
or
mov
push
jp
dec
jo
inc
roll
lret
push
push
and
jmp
adc
push
jmp
mov
add
dec
into
jb
inc
test
pushf
lods
mov
or
in
xor
sub
loopne
je
daa
sbb
arpl
icebp
cmp
sbb
leave
into
sbb
ljmp
jns
cmp
and
pop
add
jp
inc
int3
or
cmc
cmp
jne
out
pop
mov
and
inc
or
mov
inc
dec
sbb
sbb
pushf
sbb
mov
fcomip
cmp
fcomps
mov
xchg
ljmp
jge
jb
rol
push
rolb
mov
jecxz
pop
lock
inc
jge
xor
jg
rcll
mov
sbb
clc
mov
pop
push
iret
in
int
jecxz
dec
mov
inc
aas
or
push
mov
xchg
popf
aad
xchg
fmuls
orb
pop
inc
sub
les
jns
stos
ds
mov
enter
outsb
or
inc
rcl
mov
sbb
repz
cmp
sti
jae
mov
popf
mov
xor
stos
ja
lret
insb
scas
adc
fstpt
loopne
mov
xor
jp
adc
add
notb
xchg
ror
xor
fidivl
dec
es
sti
sbbl
or
aad
fcoml
int
int
outsl
jl
dec
lds
adc
pop
je
pop
dec
lods
neg
mov
mov
orb
shrl
cld
mov
inc
jne
mov
and
dec
jne
add
mov
sti
mov
insb
pop
stos
add
mov
dec
rclb
sbb
sub
cld
fnstsw
dec
gs
cs
stos
hlt
rcrl
xchg
pop
jg
jmp
popw
sti
jno
clc
je
sub
mov
xchg
lock
arpl
cmc
scas
sbb
mov
inc
sti
push
fiaddl
xor
pushf
scas
push
inc
mov
fildll
pop
test
cmpsb
dec
insl
xor
shrb
sub
push
int3
or
ficompl
push
dec
adc
shlb
jge
rcll
jmp
jno
mov
fdivrp
je
mov
jecxz
arpl
dec
sti
add
fnstcw
stc
and
dec
iret
jbe
mov
aad
pop
fisubrl
movsl
inc
inc
aaa
ljmp
add
inc
pop
and
add
dec
cs
pop
mov
dec
or
jp
mov
add
out
ljmp
xor
cmp
popf
ret
mov
dec
in
cmp
xor
push
jns
hlt
cltd
jle
pushf
cmp
mov
les
inc
test
call
or
mov
lcall
sub
das
jo
fnsetpm(287
mov
cmpb
mov
imul
xor
fadd
data16
mov
mov
sbb
mov
inc
jne
mov
popa
insl
sub
icebp
adc
lds
inc
movsl
nop
aad
mov
dec
cli
mov
sbb
and
mov
mov
add
cltd
add
lcall
cmp
mov
inc
cmp
js
mov
aam
punpckhdq
repnz
arpl
push
dec
inc
xor
inc
jecxz
pop
adc
inc
movl
or
mov
loopne
shlb
mov
decl
sbb
xor
mov
xchg
cmpb
jnp
stos
sub
xchg
insb
xchg
push
mov
xor
or
and
push
mov
push
mov
xchg
shrl
inc
jge
mov
xorl
inc
std
mov
add
xor
xor
insb
add
cmp
repnz
mov
sbb
jle
sbb
std
dec
loopne
out
repz
push
sbb
mov
xlat
jecxz
lret
mov
fisubs
pop
leave
dec
mov
fcomps
dec
fsubs
es
jmp
cmp
pop
add
pop
hlt
lods
xor
push
lcall
rcll
or
insb
clc
and
or
sbb
mov
sbb
push
xbegin
movsl
and
cs
div
dec
jae
test
jmp
pop
jg
xor
adc
lahf
fucom
dec
shll
jne
xor
inc
pop
iret
push
mov
test
inc
push
xor
test
lods
dec
jnp
pop
addr16
subl
je
aaa
test
mov
je
rorl
ds
mov
fs
stos
xor
mov
xor
stos
pop
cmp
mov
xchg
fucomip
test
cmp
cmp
clc
xchg
mov
mov
loope
xlat
xchg
adc
out
popa
jge
inc
lcall
sub
adc
inc
xor
xor
and
adc
out
jge
fdivs
out
mov
sti
imul
jae
adc
in
orb
fdivrs
lcall
adc
in
mov
addr16
mov
xor
aad
clc
mov
pop
rolb
in
and
adc
mov
mov
in
inc
or
loop
ljmp
jmp
sub
aam
xchg
sbb
jle
dec
outsb
and
iret
fwait
and
jo
push
shlb
adc
dec
test
mov
sbb
jno
clc
icebp
inc
inc
push
mov
daa
cmp
xchg
lret
mov
sub
jge
jbe
je
push
inc
mov
clc
test
xor
adc
cmc
jl
std
test
fs
mov
sahf
dec
in
call
inc
mov
or
pop
lret
jmp
popf
pop
xchg
pop
enter
movsl
cs
sbb
out
leave
insl
cli
fistpll
jns,pn
das
fcmove
fmull
addr16
mov
jmp
push
jno
in
rol
mov
or
push
nop
fsubrp
call
cmp
shlb
lahf
repnz
iret
loop
fwait
or
pop
cmc
jne
ret
sub
add
jl
or
int3
and
mov
sub
or
cld
add
in
ja
jge
pop
push
push
movsl
push
pop
outsb
aam
add
and
stc
mov
push
cmp
lret
cmpsb
jecxz
or
scas
fcoms
std
stos
xchg
mov
movsb
pop
pop
sub
test
mov
andb
out
jg
mov
in
jecxz
push
mov
arpl
mov
push
xor
and
in
fcmove
stc
sahf
pop
push
movsb
insb
xchg
roll
ja
adc
xchg
js
fcmovnbe
mov
push
mov
outsl
imul
add
push
into
push
je
xor
loope
mov
jp
fcmovne
pop
pop
fnstsw
cmp
xor
stc
mov
mov
lods
pop
popa
hlt
loop
dec
mov
fidivs
mov
stc
fmuls
mov
movsl
sbb
mov
cmpsb
mov
xchg
loop
add
loope
ret
pop
jno
sti
cltd
pop
flds
xor
popf
push
mov
jo
stos
add
xor
pop
aam
aam
outsl
push
rorb
push
nop
ljmp
dec
mov
or
jae
loope
mov
xchg
jb
lcall
inc
test
sub
jp
jae
aad
inc
sbb
add
fcomps
jmp
jne
repz
mov
out
jecxz
daa
jle
sub
iret
call
js
pusha
popf
add
mov
xchg
fwait
popa
mov
bound
xchg
outsb
icebp
das
popf
sbb
add
jns
add
call
jno
dec
gs
mov
outsl
xchg
insb
cli
ret
mov
ret
adc
repnz
jle
fiaddl
xchg
das
xor
loop
mov
jmp
sbb
aaa
cmpl
lds
push
sbb
call
xlat
inc
ds
fidivs
stc
mulb
and
add
inc
cmp
xchg
cs
inc
leave
shlb
movsb
sub
nop
loope
jns
lods
pop
mov
aad
cmpsb
pop
nop
aas
mov
hlt
divl
f2xm1
sbb
mov
fcoms
xor
xor
mov
jnp
jae
bound
fstl
inc
fisttps
mov
xchg
imul
lods
xchg
and
pop
jmp
jecxz
push
rorb
jae
loope
adc
xor
inc
dec
dec
stos
mov
arpl
pop
xchg
mov
test
adc
imul
xchg
or
mov
cld
cmp
je
and
rolb
sbb
jnp
shr
ds
mov
insl
pushf
testl
adc
ljmp
popa
adc
or
je
iret
je
ret
inc
jo
enter
nop
mov
push
aas
sbb
lock
ljmp
call
outsl
jg
push
je
mov
mov
fmuls
push
ret
push
movsb
pop
pop
cltd
icebp
jno
ja
sahf
inc
rolb
xorb
pop
and
mov
aaa
mov
out
adc
stos
and
xlat
and
pusha
and
dec
cmp
dec
out
or
dec
mov
les
outsb
iret
mov
mov
cmp
xor
push
cmp
shll
rcrb
sahf
movb
or
add
inc
mov
and
outsl
mov
adc
mov
sbb
data16
mov
pushf
sbb
jle
lea
ss
mov
scas
fstl
jns
jo
mov
jns
and
jnp
cmp
xchg
aaa
outsl
mov
imul
lds
arpl
jne
test
mov
sbb
lods
or
mov
or
mov
adc
dec
pushf
das
leave
or
and
cld
push
outsl
sub
jnp
pop
fistps
movsb
jecxz
insb
aas
push
adc
hlt
dec
cmp
sti
pop
or
popf
xor
mov
in
outsb
in
xchg
jnp
fistpl
shll
xlat
pop
jo
cmp
loop
aam
sbb
mulb
sahf
fistps
mov
pushf
cltd
dec
sbb
mov
jbe
aam
mov
add
dec
push
enter
sub
call
xchg
pop
mov
mov
int
inc
sub
ror
sarl
add
lcall
adc
into
pop
inc
adc
hlt
mov
dec
mov
mov
cs
lods
test
fs
cmpsb
in
imul
xchg
lret
xchg
mov
loope
mov
sbb
into
int
in
ret
mov
push
or
mov
add
ljmp
mov
call
or
jbe
lods
nop
sub
push
sub
notb
scas
clc
pop
test
push
adc
mov
mov
lahf
mov
scas
fwait
mov
nop
iret
fwait
es
rcr
bswap
pop
pop
cmp
push
nop
push
inc
xchg
adc
adc
into
shrl
sbb
mov
stos
aam
cmp
daa
and
testb
add
fwait
mov
in
data16
lds
loopne
inc
and
push
loopne
pop
into
sbb
xchg
cs
mov
test
xor
shrb
push
out
push
jp
cmp
repz
inc
mov
xchg
daa
push
pop
sub
cs
cmpsb
bound
add
adc
mov
sbb
call
and
adc
jl
int
pop
lds
or
xlat
daa
jo
mov
pushf
fwait
dec
adc
sbb
aad
outsb
sub
xor
add
mov
mov
adc
mov
add
icebp
inc
add
in
adc
sbb
add
stos
add
flds
les
daa
mov
fcomip
dec
dec
mov
jmp
data16
xlat
gs
adc
mov
pop
pop
sbbb
inc
push
aad
xchg
push
leave
jae
sahf
out
mov
lods
dec
dec
ss
mov
iret
sub
cmp
mov
outsb
dec
cltd
jno
cld
fldl
push
cmpsb
xor
or
call
xlat
pushf
test
adc
rol
inc
add
fwait
cmp
hlt
lahf
mov
scas
out
and
lret
sub
jp
sahf
clc
dec
std
movsl
test
or
rorb
imul
adc
add
push
and
mov
fisubrs
jp
pop
mov
mov
xor
sub
test
sub
jle
sub
adc
loope
sbb
and
les
mov
aam
and
enter
jecxz
ss
daa
pop
fstl
clc
mov
push
aaa
pop
xchg
int3
test
mov
pop
add
lret
cmp
xchg
leave
lea
push
aad
cli
adc
bound
xor
enter
inc
lret
shlb
mov
xor
mov
mov
cli
js
movsl
test
and
inc
xchg
stos
lcall
dec
xchg
push
mov
js
xor
dec
rorb
mov
push
sub
and
xchg
inc
jb
sub
std
daa
xchg
push
pop
xchg
rclb
mov
inc
jno
orb
enter
clc
push
jno
and
mov
add
fistpll
xchg
mov
lock
mov
ret
push
mov
pop
lds
outsb
imul
je
adc
mov
add
imul
cpuid
mov
and
inc
test
pop
sbb
imul
push
push
outsl
sbb
push
mov
jae
push
xlat
std
movsb
inc
pop
inc
adc
imul
pop
jg
inc
sbb
fucomip
dec
inc
xor
inc
ja
out
aam
stos
pop
inc
iret
dec
faddl
lock
sbb
mov
stc
std
inc
leave
leave
adc
fbld
push
imul
fwait
loope
jmp
call
and
aaa
or
jg
jmp
call
or
inc
cmpsb
pop
inc
hlt
out
pop
add
or
add
fninit
es
push
mov
scas
test
adcl
mov
jecxz
addr16
into
adc
add
pop
push
add
mov
mov
in
mull
out
xchg
adc
sub
add
shrl
pop
stos
lcall
hlt
xchg
pop
cmp
dec
mov
add
jbe
mov
fsubl
sbb
dec
test
fs
ret
xchg
mov
aas
dec
sbb
and
jo
ja
imul
imul
pushf
call
mov
mov
dec
push
push
imul
mov
insl
add
mov
lods
jo
repz
cmp
lahf
cmpsb
mov
pop
mov
sub
fistl
flds
fimuls
and
and
adcb
inc
loopne
pop
jecxz
and
xlat
movsb
or
sub
sti
sub
fldcw
aam
insl
ss
std
ficomps
mov
xor
sbb
clc
rcr
cmp
leave
out
mov
xor
mov
lock
cmp
fiadds
pop
push
jo
sbb
cmp
inc
xor
pop
adc
imul
inc
hlt
dec
sub
mov
popf
pusha
fxch
sbbl
pushf
adc
sbb
xchg
mov
pushf
ret
in
int
inc
daa
dec
inc
inc
and
mov
cld
test
addl
mov
mov
inc
imul
xlat
test
adc
dec
adc
cmpsb
out
mov
movsb
jp
inc
xor
stos
mov
jns
sti
lods
mov
mov
xlat
dec
mov
sbb
scas
or
bswap
repz
and
mov
mov
roll
jnp
test
mov
xchg
std
xchg
les
loopne
mov
mov
aaa
jge
cmp
nop
xor
cld
push
loopne
call
or
outsl
repz
insb
lret
out
jns
cmpsl
aam
rorb
jmp
gs
push
xchg
popa
aas
hlt
mov
ja
pusha
pop
iret
xor
jnp
dec
in
arpl
pushf
and
filds
into
test
push
jmp
mov
test
xchg
lock
je
jae
inc
sub
enter
jle
imul
testb
mov
test
adc
mov
adc
aaa
popa
push
ficomps
inc
xlat
lods
lock
std
dec
push
sub
stos
push
push
repz
jle
out
nop
loopne
add
test
cli
fstpt
out
add
push
clc
xor
push
inc
sub
xlat
ljmp
jle
sarb
xchg
push
insb
add
clc
test
and
xor
cmpsb
pop
inc
in
pusha
adc
and
adc
loop
ljmp
xchg
into
push
lret
add
incl
cmpsl
mov
ret
sub
std
jecxz
loopne,pt
out
xchg
ret
sub
aam
pop
int
push
into
and
subl
xor
xor
mov
sbbb
push
mov
push
fsubrs
fcmovnu
jb
cmp
loopne
ds
in
aas
pop
cwtl
testl
fmul
xchg
cmp
movl
push
test
push
sub
out
mov
ret
sbb
cmp
dec
in
sahf
add
sarb
test
xchg
leave
jg
mov
cwtl
xchg
inc
rcl
push
adc
jae
cs
push
shlb
mov
les
mov
stos
in
mov
xchg
xchg
nop
fisttps
outsb
pop
cmp
sbb
xlat
jne
jb
push
jb
xchg
roll
inc
out
cmpl
jecxz
aas
or
xor
xchg
and
insl
pop
aad
dec
in
out
icebp
or
xor
jo
push
cmpsl
mov
test
sub
sub
pop
adc
sbb
lea
cmp
push
mov
mov
cmc
stc
add
lahf
dec
jb
mov
adc
sbb
mov
sti
jp
jmp
dec
sub
sbb
stos
push
adc
sub
movsl
push
test
js
inc
cwtl
sub
das
inc
push
mov
jns
jne
jo
xor
mov
rcrb
or
jo
mov
test
lea
out
aad
shl
xchg
pop
mov
ljmp
loope
dec
push
push
xchg
into
cmp
cmp
push
negl
push
repnz
mov
and
sub
loop
xor
sbb
popf
test
sub
ja
mov
mov
aas
pushf
cmp
sub
test
pushf
push
xorb
jns
idivl
inc
mov
adc
cld
push
and
dec
xor
xchg
inc
dec
jnp
jnp
scas
lret
test
sbb
inc
sbb
test
push
arpl
fld
pushl
xchg
push
pushf
stos
jle
adc
inc
sbb
sbb
push
jle
xchg
popf
xchg
dec
aas
test
dec
in
adc
scas
push
inc
mov
pop
xor
sbb
add
es
shlb
dec
lea
add
fsubs
out
lea
ss
sub
inc
test
cli
pusha
cli
jecxz
cmpsl
fadds
mov
div
push
scas
test
hlt
dec
jg
inc
in
jg
aad
push
xor
stos
mov
das
cmp
aad
or
add
push
add
sub
add
pop
jno
add
std
daa
jae
xchg
xchg
pop
push
scas
inc
pushf
pop
lret
repz
ss
cmp
divl
movl
sub
cmp
fstpt
xchg
ret
sub
pushf
xorl
shrb
out
call
mov
mov
and
scas
out
mov
mov
cmp
enter
mov
cmp
pop
mov
test
jne
sub
mov
lret
or
jl
xchg
js
ja
fs
inc
dec
int
movsl
les
das
xor
jmp
adc
push
das
xchg
inc
pop
int
pop
pop
dec
sub
add
xchg
dec
ljmp
mov
mov
adc
out
outsb
jnp,pt
dec
leave
push
xor
popa
repz
xor
lret
xlat
into
xchg
adcl
dec
mov
sarb
xchg
aaa
pop
daa
scas
mov
mov
lea
and
int3
cmp
stc
mov
pop
push
and
int
xchg
xchg
xchg
jbe
jne
popa
ret
jp
ss
bound
push
cmp
setae
pushf
adc
cwtl
xchg
in
pop
push
lock
push
cmpsl
mov
imul
rcrb
ret
dec
mov
icebp
mov
adc
push
loope
loopne
aad
aad
sbb
into
insl
add
push
daa
mov
insb
cmp
sub
pop
js
inc
sbb
dec
and
fwait
and
pop
stc
mov
pop
mov
ret
leave
mov
adc
movl
iret
mov
mov
pop
and
test
lock
mov
pop
mov
dec
ljmp
fbstp
pop
xchg
inc
and
pushf
ja
stc
mov
fbstp
jns
sbb
fwait
lret
addr16
or
mov
cwtl
mov
mov
ljmp
fistps
testl
or
push
cs
jp
stc
bound
lock
fs
stos
mov
cmp
mov
stos
in
out
cmc
push
es
sub
ret
mov
stos
ret
repnz
xchg
pop
push
sub
mov
and
popl
ret
and
xor
pop
mov
sbb
rcrl
repnz
jge
popa
add
jmp
call
and
scas
mov
dec
insb
popf
add
je
inc
sub
mov
cmpsl
xchg
jns
jle
xor
sub
int3
dec
and
leave
sbb
sub
pop
dec
and
test
lcall
notb
loop
out
testl
xor
negl
test
iret
pop
jnp
rcr
xlat
test
xor
ret
subl
shll
push
mov
jge
faddl
outsb
aas
fildl
xchg
jns
fistpll
dec
fistps
rolb
into
xchg
ror
sti
test
mov
and
mov
mov
in
dec
push
rorb
jmp
add
loope
enter
pop
cmp
dec
mov
enter
or
jle
insb
pop
stc
pop
dec
pop
jl
push
shll
sub
ja
cltd
out
shlb
enter
xchg
inc
xorb
or
mov
and
icebp
leave
mov
and
enter
xchg
push
and
jmp
not
add
mov
adc
cmc
std
jae
cmc
loope
test
pop
jae
push
xchg
jl
xor
add
mov
xlat
mov
lret
pop
jle
xor
sub
and
cld
stos
test
popa
and
sbbb
dec
ljmp
hlt
push
in
imul
movsl
lcall
and
or
sbbl
sbb
mov
adc
or
dec
repz
push
ss
pushf
inc
adc
xchg
push
push
dec
sbb
dec
push
shlb
pop
add
sub
repnz
cmp
add
pop
cmc
xor
adc
xchg
push
jl
rorl
inc
or
sti
int
int3
stos
pop
gs
lea
adc
push
pop
das
and
mov
inc
in
add
invd
and
popa
sub
popf
mulb
or
repnz
call
xor
pop
js
stc
jg
adc
pop
imul
jnp
dec
or
or
jnp
push
inc
out
adc
inc
jnp
or
psrld
pushf
insb
cli
xchg
mov
mov
push
es
lret
add
scas
movsl
adc
sub
js
push
frstor
mov
fmull
scas
mov
inc
pop
adc
aad
dec
adc
inc
push
fsubrp
sub
add
dec
lcall
shl
stos
bound
cmp
cmpsl
add
xor
rclb
pop
and
sbb
mov
fstps
jmp
cmp
or
fwait
ret
arpl
mov
ret
fucomip
lahf
xor
pop
xchg
lods
mov
cmp
loop
addr16
lret
jnp
cmp
popa
add
rcl
clc
cli
pusha
daa
xchg
sub
loop
and
ja
xchg
cmp
xchg
jge
shrl
xchg
push
push
add
mov
xchg
flds
arpl
loope
cmpsb
mov
cmp
or
out
pop
xor
rorl
inc
hlt
mov
sbb
lods
test
cltd
js
sbb
test
pop
ficoml
shlb
or
mov
pusha
xchg
jns
aam
xchg
les
mov
xor
in
fbstp
fsubl
dec
ds
xor
in
pop
xchg
xchg
stc
and
add
mov
dec
lock
add
sub
cmpsb
add
lods
pop
cmp
xchg
jne
addr16
sub
mov
inc
xchg
inc
cmp
lds
cs
pop
and
xor
adc
clc
dec
movsb
push
aad
or
jecxz
jo
jb
xchg
ja
sub
arpl
adc
adc
or
into
jp
jnp
in
adc
jmp
sbb
insb
leave
mov
ds
push
mov
outsb
adc
add
sahf
jecxz
cmp
out
lods
pop
xor
rol
movsl
icebp
dec
pop
out
outsl
out
cmc
int
fldcw
in
xor
shrb
orb
das
aas
inc
sub
insl
rclb
int
not
cmc
loope
push
lcall
ret
mov
dec
out
pop
fsubp
clc
nop
das
dec
adc
es
pushf
jl
and
aas
inc
mov
and
insl
pop
adc
dec
jnp
xchg
mov
cli
inc
cmp
ficomps
pop
cmp
cmp
add
cmp
jmp
in
mov
hlt
push
xor
je
dec
ja
int3
mov
enter
test
ret
add
daa
xor
mov
movsb
jae
jno
mov
add
mov
fcompl
insb
gs
or
imul
data16
jb
push
push
xchg
loop
xchg
test
sub
int3
mov
stos
mov
adcb
ja
inc
jl
sub
xchg
cld
xchg
inc
scas
fstpt
mov
jbe
popf
mov
inc
inc
js
cmp
pop
jmp
cmp
xchg
icebp
push
leave
pop
mull
fldl
ror
arpl
pop
add
add
mov
pop
enter
lahf
daa
popa
xor
popa
popa
addr16
mov
or
pop
adc
or
arpl
sub
mov
push
clc
or
or
pop
leave
into
inc
sbb
sahf
fidivrs
sbb
mov
mov
loope
dec
fidivs
out
mov
adc
in
rol
mov
sbb
cltd
sar
jnp
sub
mov
adc
stos
je
cltd
mov
roll
out
sbb
scas
arpl
outsl
ret
pop
clc
cs
sbb
lahf
push
call
jg
jb
bound
nop
inc
imul
fsubs
jecxz
lods
pause
in
jl
jns
int3
jne
and
and
pop
arpl
ror
mov
and
lock
jmp
push
iret
arpl
lock
outsb
addl
jb
stos
inc
sbb
sbb
or
fdivrs
out
xor
pop
adc
stos
mov
jne
aas
mov
cs
pop
lds
cltd
mov
add
out
movb
shlb
xchg
lahf
ljmp
stos
scas
into
xchg
cmp
and
movsb
ja
jns
push
pop
sub
lahf
inc
fisubrs
fisttpll
imul
lea
out
dec
xor
mov
dec
mov
sub
shl
xor
leave
aam
xchg
push
icebp
in
jl
xor
andb
leave
sbb
pop
mov
mov
mov
fstpt
pop
inc
stos
xchg
roll
pushf
cmc
jge
shrl
popf
sbb
sbb
fcompl
addb
jl
ret
inc
xchg
aaa
cmp
xor
jns
push
xchg
clc
inc
push
lcall
outsb
fdivl
jo
jecxz
leave
insl
add
inc
inc
cld
cwtl
xor
das
jecxz
or
int3
std
jmp
fistl
push
push
sub
mov
divb
sbbb
mov
inc
movsb
dec
int
icebp
mov
add
jns
xor
idivb
xchg
aas
in
push
shrb
xor
pmaxsw
or
in
dec
push
ret
cmp
out
push
call
xchg
mov
divl
scas
in
pop
fs
push
pop
popa
popa
std
lods
je
shrb
out
lret
and
sub
shr
xchg
fs
int3
sub
mov
cmp
sahf
xchg
ja
dec
jno
pop
pop
lods
into
pop
inc
cmp
test
mov
je
fwait
push
cmc
jbe,pn
lds
inc
bnd
fidivrs
fimuls
test
loop
orl
out
mov
mov
loopne
mov
dec
mov
jmp
fidivs
les
int
ja
push
fwait
insb
jne
xchg
push
push
sub
sbb
and
mov
popa
sub
aad
xor
xorb
in
enter
add
jle
ss
out
pop
ret
xchg
push
sbb
sub
push
popa
add
in
push
cmp
pxor
or
neg
cmpb
scas
mov
outsl
mov
cmp
repz
add
xor
jne
pop
mov
scas
lods
scas
insl
mov
xor
dec
nop
shll
cmp
or
jmp
sbb
sub
jmp
ljmp
stos
mov
xorb
inc
or
orl
jecxz
pop
mov
out
lock
out
loope
xor
push
adcl
in
pop
mov
add
dec
push
out
out
jp
outsb
jp
jo
mov
inc
jg
clc
dec
push
test
daa
fdivrl
xor
rolb
daa
call
call
fistps
ror
cmpsb
addr16
add
sbb
inc
icebp
std
xor
push
loopne
cli
jbe
cmc
movsb
mov
xchg
sub
mov
sbb
lret
mov
sbb
mov
push
or
and
out
into
out
stc
lods
xchg
fcmove
push
daa
js
rorb
stos
and
xor
outsl
popa
sub
or
and
gs
push
and
xlat
es
outsl
ljmp
cwtl
rcr
push
cmp
jge
inc
xor
jecxz
jl
inc
ret
popf
sbb
call
cwtl
lock
jae
stc
cmp
or
andl
or
lcall
or
pop
loope
arpl
arpl
lods
mov
jp
sub
pop
cmp
sub
lods
jno
out
dec
lock
in
cli
fwait
rolb
fld
mov
and
pop
fisttps
addl
cld
xchg
adc
sbb
inc
mov
lcall
popf
or
movsl
fnsave
jnp
test
cmp
fs
xor
arpl
jge
ret
mov
xor
xchg
jmp
out
into
dec
xor
jno
jp
dec
jecxz
mov
xor
ds
lahf
push
popa
jns
icebp
push
movsb
in
or
and
into
jnp
push
xor
test
sbbb
pop
call
push
aad
sbb
das
movsl
decl
inc
loop
lods
das
std
les
jae
cmp
mov
je
jmp
xor
aas
xchg
and
lock
or
add
inc
outsb
hlt
push
gs
stos
add
xchg
jno
or
jg
ljmp
fisubs
loopne
jb
ficoms
test
shrb
xchg
lock
cli
fs
popa
jns
pop
pushf
jbe
mov
xor
jne
lret
repz
loope
cmc
add
flds
notb
lcall
in
fcmove
push
mov
push
add
sbb
pop
xchg
pop
jmp
mov
repz
roll
js
cmp
and
hlt
mov
pop
cmc
hlt
pop
pop
inc
jl
ds
mov
stos
inc
jo
jae
adc
xchg
idivb
mov
scas
jge
sub
cld
push
or
lock
jg
inc
or
arpl
xlat
subb
push
mov
and
es
and
mov
inc
cmp
shlb
cwtl
out
roll
inc
scas
jle
out
dec
out
sub
push
jbe
andb
jne
in
nop
adc
lods
xor
jg
aad
xchg
pop
mov
jg
stc
sbb
xchg
xchg
mov
ljmp
jp
fistl
adc
mov
xchg
faddl
push
filds
xor
rcrl
fcmovnu
push
lea
fmul
jae
and
ljmp
sbb
sub
xchg
pop
mov
push
push
leave
mov
jno
mov
jno
pop
out
add
jp
add
add
ret
add
push
in
out
arpl
fdivrp
inc
xchg
xor
pop
inc
and
idivb
out
push
outsl
lret
push
pop
mov
cmpsl
addr16
mov
mov
or
cmp
mov
mov
jns
jecxz
mov
je
xchg
cmp
pop
cs
adc
xor
adc
pop
les
xchg
add
xchg
lods
aas
inc
pop
das
and
clc
dec
popl
fildll
int3
jl
sti
jge
sbb
xchg
pop
or
dec
add
repnz
mov
sub
jmp
dec
sarb
lret
cmc
loop
cmp
mov
mov
stc
rorl
xchg
xor
test
inc
dec
add
pop
add
daa
clc
in
inc
rcl
fidivs
add
mov
jae
push
cmp
mull
xor
xchg
pop
sti
fucomi
lds
dec
fistps
or
jbe
xor
push
mov
adc
xchg
mov
and
xor
and
jns
and
pmaxub
dec
and
gs
cmpsl
fs
cld
jmp
inc
mov
imul
pop
inc
addr16
mulb
data16
loope
mov
mov
sub
int3
pushf
inc
adc
jmp
sarb
pcmpgtd
mov
mov
lahf
std
inc
and
cli
mov
ds
add
add
xchg
fwait
inc
push
popa
xlat
or
jo
es
cwtl
inc
xchg
push
out
pop
in
scas
or
xor
jle
insb
std
or
mov
dec
inc
cmp
sbb
cmpsb
jge
push
dec
or
popa
dec
pop
imul
repz
push
je
aam
lcall
test
adc
ds
jmp
loope
pusha
sub
popa
aaa
xor
jnp
jg
fld
lods
je
adc
mov
bound
and
mov
pop
inc
lahf
pushl
inc
ret
lods
mov
adcl
cmp
jmp
out
outsb
push
les
aaa
roll
cmpsb
andb
or
xchg
dec
rolb
in
cs
jns
fldt
bound
mull
mov
ljmp
cmovge
xchg
xor
add
jne
fcoms
adc
xchg
lea
int3
test
push
icebp
dec
mov
mov
subb
pushf
sbb
fnstenv
jl
or
dec
mov
jno
or
sub
ds
mov
loopne
in
lret
xor
inc
clc
push
jno
sbb
xlat
adc
ja
inc
daa
stos
mov
enter
dec
ret
pop
and
cld
cmp
cli
sbb
fdivs
pop
hlt
dec
push
popl
leave
pop
push
add
lods
jecxz
mov
sub
push
jnp
mov
ret
jnp
xor
cli
adc
fdivrl
mov
stos
pop
movsl
or
fidivs
mov
movsb
rol
imul
mov
pop
cmp
popa
push
es
and
clc
das
push
adc
jmp
sub
mov
fcoms
rorb
pop
adc
sbb
mov
inc
lds
mov
ja
xchg
inc
or
cmp
shll
adc
add
jns
inc
adc
mov
xchg
mov
test
mov
shrb
std
into
mov
fs
mov
outsb
jns
dec
cmp
inc
cmp
push
scas
mov
ret
mov
addr16
pop
add
ss
scas
inc
jle
jns
sti
push
cmp
push
inc
ret
out
fnstcw
jo
cs
adc
cmp
sbb
dec
push
test
sar
insb
or
cmp
dec
je
adc
cld
ret
dec
popf
roll
xchg
ja
out
addr16
xor
push
dec
test
inc
push
jmp
push
inc
inc
or
scas
mov
xchg
jae
dec
in
mov
and
insb
ja
inc
mov
xchg
sti
loope
aad
jne
sbb
pop
add
andb
ret
fistl
pop
cwtl
aas
movsl
push
add
jl
ffree
xor
pop
add
and
dec
push
ret
lahf
stc
cwtl
inc
jmp
push
dec
and
cld
popa
out
jle
pop
adc
jo
out
sbb
in
test
mov
mov
mov
fwait
pop
mov
aam
inc
push
or
ds
jbe
inc
jecxz
mov
sbb
cmp
and
out
mov
jns
xchg
mov
mov
pop
dec
enter
jns
mov
mov
shrb
imul
cmc
mov
dec
xorl
adc
iret
cld
mov
ret
fistpl
xchg
sbb
leave
xchg
pop
jl
xchg
ret
xchg
fnstcw
xor
sti
sbb
addb
inc
lods
inc
inc
sbb
mov
clc
mov
fwait
cmp
jl
and
into
stos
or
pusha
movsl
pop
xor
shll
in
arpl
jno
in
mov
xor
sub
pop
into
pop
mov
mov
sub
jae
lods
cmc
sbb
xorb
icebp
mov
std
adc
daa
lock
dec
loope
sub
mov
mov
mov
inc
hlt
pop
adc
sbb
movb
cli
divl
dec
xor
cmp
insb
adc
test
inc
push
push
movsl
loope
mov
pop
in
leave
adcl
and
jnp
out
sub
mov
jle
out
lds
xchg
insb
inc
jo
mov
cmpsb
stos
cltd
sub
or
push
adc
jno
outsb
mov
sbb
fwait
adc
bound
decb
pop
add
and
push
inc
xchg
push
mov
test
stos
cmp
mov
pop
pusha
sub
adc
std
sub
rorl
rcll
into
dec
dec
cmp
jne
cmpsl
inc
sbbb
in
cmp
xor
pop
ljmp
popw
dec
cli
divb
in
and
pop
daa
add
jne
dec
push
jmp
and
mov
rcrl
test
xor
mov
cmp
insb
mov
xor
add
leave
add
push
test
outsb
xchg
push
pop
cmp
inc
in
cmp
je
mov
insl
pop
jo
in
pop
call
add
nop
clc
es
pop
jge
ret
inc
cld
push
cmpsl
or
sub
jnp
mov
data16
or
stos
xchg
out
mov
arpl
adc
cli
mov
hlt
lret
pop
pop
mov
or
lds
mov
mov
les
test
fs
dec
inc
sbb
test
fwait
and
in
adc
sub
pop
push
xacquire
sti
jmp
mov
mov
int
cli
jo
ret
dec
sub
xor
sarb
add
pop
lcall
push
fisubl
ljmp
push
mov
lret
scas
inc
lods
inc
aad
cmpsb
cmp
push
pop
sti
mov
adc
outsl
lcall
pop
pop
adc
cmp
mov
aad
jae
jp
push
not
lods
dec
pusha
dec
push
jmp
enter
outsl
xchg
or
mov
mov
fisubrl
mov
sub
hlt
and
push
dec
clc
stos
fs
mov
push
ret
fnstenv
aas
jb
xchg
jl
mov
and
ds
push
mov
inc
stos
sarl
mov
jge
imul
jnp
fildll
mov
adc
icebp
dec
mov
inc
xchg
xorb
push
xchg
movl
dec
imul
into
data16
lods
jecxz
scas
xchg
cltd
jge
popf
out
stc
outsb
lods
sarl
fadds
sbb
dec
sbb
mov
jbe
js
rcll
subl
add
mov
in
stos
pop
sub
in
jp
dec
mov
movsl
pop
lcall
loop
sbb
adc
mov
in
push
lds
adcb
insl
fwait
sahf
out
scas
sub
and
mov
push
jg
add
mov
mov
ss
mov
mov
out
xor
scas
mov
je
lds
sub
pop
mov
sub
es
or
sbb
ficoml
imul
dec
scas
notl
inc
adc
cmp
mov
push
jns
push
dec
vpandn
mov
hlt
lret
scas
push
je
dec
pop
scas
dec
aaa
xor
je
imul
jns
mov
inc
fistpl
out
and
pop
out
push
dec
sahf
pop
mov
bswap
adc
xor
popf
nop
adc
or
loopne
sub
pop
int3
mov
and
dec
and
sub
pop
repz
cmp
mov
cmp
adc
stos
idivl
int
mov
inc
les
xor
addr16
popf
enter
cmc
mov
push
mov
call
dec
arpl
mov
mov
ja
cmpsl
ficomps
fidivl
ss
dec
xchg
aas
pushaw
mov
xchg
addl
mov
dec
stos
jno
fisubrl
negb
push
jb
aam
mov
ja
mov
jp
lret
pop
sbb
mov
cmp
iret
sub
mov
jg
and
andb
fbstp
xchg
repnz
inc
aas
shl
daa
stos
or
addr16
loop
jp
or
xlat
sbbb
xchg
movq
and
pop
xchg
popa
pusha
sbb
dec
insb
mov
std
outsb
push
or
rcll
int
in
rcrb
out
out
mov
cmpsl
push
adc
scas
int3
xorb
inc
test
cmpsl
mov
cmp
nop
lcall
inc
jmp
daa
fstpt
lcall
in
ret
ds
add
adc
shll
daa
mov
or
xor
das
dec
test
into
pop
rcll
outsb
or
sub
dec
movsb
sbbl
push
adc
add
and
pop
pop
mov
cmp
push
mov
shrb
add
daa
adc
inc
jnp
test
sub
pop
sti
in
sub
xor
dec
adc
mov
cmp
lds
mov
out
jnp
mov
adc
fwait
stos
out
lods
pop
ret
and
and
cmp
xor
mov
and
and
dec
jns
sbb
cmpsb
sbb
shll
cmp
dec
inc
cmp
ret
in
imul
jae
xorb
mov
inc
fdivrl
push
push
push
loope
adc
add
xchg
mov
lds
lods
leave
push
mov
mov
dec
jl
lret
mov
lods
lods
rol
dec
jmp
loop
cmp
imul
mov
out
inc
sti
test
cs
stos
orl
cmp
cmpsl
mov
push
rcll
sub
cmp
mov
in
mov
dec
jae
pop
pop
cmp
ficoms
pop
ficomps
leave
xchg
inc
adc
scas
dec
fisubs
movsb
fs
and
enter
shrb
mov
push
mov
popf
cltd
jo
cmp
jmp
sub
mov
cmp
mov
sub
or
ss
jge
pushl
out
ss
xchg
add
shll
popf
sti
fcmovnbe
addr16
insb
imul
adc
test
repnz
ja
enter
xchg
xor
mov
xlat
mov
mov
cmp
mov
dec
test
lds
aad
push
ss
jle
dec
fdivrl
loop
xchg
xor
xchg
int3
inc
jp
mov
jae
mov
mov
int3
mov
movsb
pop
ds
jbe
in
dec
cmp
xlat
filds
lea
fidivs
into
xor
sar
mov
push
inc
jbe
std
shr
jecxz
fwait
inc
mov
push
dec
adc
aaa
rcr
lods
rclb
cs
sahf
out
inc
add
mov
mov
shlb
mov
outsl
imul
das
pop
fcoml
xchg
sbb
xchg
nop
or
mov
fsubs
add
pop
jl
sub
gs
mov
das
mov
js
cltd
or
fildll
popf
cmp
fwait
mov
icebp
in
sbb
mov
fldcw
outsb
test
int
cmp
mov
loopne
out
scas
insl
daa
or
jb
lahf
sarl
inc
pop
cltd
inc
or
es
adc
scas
mov
sbb
cmp
in
pop
in
push
cmp
lahf
dec
pop
dec
es
jmp
mov
xor
cli
test
shll
push
pop
dec
push
dec
int3
insl
fisttpl
fwait
aam
dec
ret
iret
movsl
or
fstl
mov
iret
lea
aaa
loop
xor
adc
xor
push
test
std
or
mov
jg
dec
cmp
inc
xchg
out
mov
push
stos
jo
cmpsl
push
and
popf
sub
lods
xor
pop
lock
xchg
cmpsl
je
cmp
inc
mov
sbb
outsb
dec
mov
mov
sbb
das
adc
dec
pop
add
stos
call
push
movsb
jnp
mov
xchg
mov
vmwrite
mov
ja
rolb
fisttps
jo
dec
pusha
jge
mov
nop
aad
mov
addr16
cmpsl
dec
stos
or
sbb
clc
cs
sbb
shll
jle
xchg
sbb
mov
enter
cmc
xlat
les
shlb
mov
test
push
xchg
pushf
and
js
icebp
or
stos
adc
mov
mov
out
dec
dec
rcrl
inc
mov
lcall
mov
add
imul
insb
sbb
xchg
incb
pop
dec
insb
aas
add
xchg
pop
les
add
and
cmp
in
dec
sbb
in
bound
sbb
or
fsubrl
push
es
bound
shl
adc
pop
es
push
test
dec
dec
out
cmc
pop
pop
mov
dec
or
push
mov
bound
dec
shl
jle
xor
jae
les
out
in
jge
and
mov
daa
mov
inc
cld
hlt
lcall
pop
iret
cltd
mov
jle
sbb
add
jmp
jecxz
enter
cmpsb
daa
xchg
lcall
and
sbb
rcrl
add
push
ret
jne
rorl
fwait
xchg
sub
idivl
ss
movsb
cltd
pop
adc
cmp
int3
dec
jmp
in
aaa
add
add
es
sbb
stc
adc
test
lods
cmp
inc
push
orb
mov
ret
sbb
adc
ljmp
jb
add
fistl
mov
notl
mov
in
jns
push
je
ja
popf
ljmp
mov
add
std
sbb
test
mov
leave
int
js
aas
inc
sub
stc
test
int
in
out
xchg
mov
cli
xchg
data16
lret
fdivs
xchg
push
cli
fstp
das
repnz
cmp
push
or
xlat
fsubl
cltd
mov
jg
push
pop
sub
pop
fcompl
les
dec
add
jle
inc
in
ja
imul
outsb
sub
or
icebp
repnz
jmp
push
lcall
xchg
add
xor
mov
cmc
cmp
mov
pop
sahf
and
test
mov
mov
sbb
clc
pop
xchg
inc
es
out
loopne
xlat
or
cs
pusha
shl
nop
ljmp
mov
fisubrs
mov
scas
insb
or
into
loope
test
mov
jp
mov
scas
stc
call
pop
enter
fsubs
lcall
xchg
into
lret
stos
mov
sub
jo
insl
loop
jg
insl
test
divb
inc
sbb
rorb
pushf
jge
xlat
push
jp
jmp
sbb
cmc
cmp
xchg
fnstcw
sti
pop
in
loopne
jecxz
mov
dec
cmp
xlat
push
out
lock
std
xor
push
ret
pusha
gs
add
push
cli
dec
mov
mov
mov
fldpi
pushl
mov
adc
inc
push
mov
push
stc
push
cmpsb
or
popa
mov
mull
stc
xchg
xlat
sub
sub
int
imul
dec
pop
leave
daa
jb
jmp
scas
mull
xlat
test
push
ja
mov
mov
sub
lds
push
inc
pop
inc
dec
push
hlt
xor
gs
lea
mov
shl
xchg
fnstcw
mov
in
xor
adc
pushf
push
jle
popf
xlat
sub
clc
leave
in
and
repz
ret
and
xchg
sub
arpl
test
push
scas
mov
movsl
aaa
test
mov
clc
push
orb
push
cld
mov
jnp
pop
adc
repz
push
push
stc
adc
jg
fs
js
mov
dec
fldenv
push
mov
hlt
adc
outsl
imul
xor
xchg
or
lea
shll
and
xchg
jge
cmp
and
jbe
and
xor
xlat
sub
into
xor
push
add
test
jnp
dec
rcll
lahf
aam
pop
sub
cmpsb
jno
mov
xchg
cli
inc
push
xor
fnstcw
mov
sbb
sub
mov
xor
in
mov
inc
sbb
scas
push
cmp
pop
out
dec
jb
add
fs
xor
sbbb
hlt
stos
push
cmpsl
pop
and
jnp
sub
arpl
xchg
push
lahf
sbb
adc
sbb
mov
dec
cwtl
daa
pop
movsb
adc
lret
xchg
xor
sarb
cmc
cmp
mov
stos
inc
lods
addr16
fadd
or
es
and
push
sbb
and
and
mov
or
push
ja
loop
jge
mov
das
pop
lcall
fs
scas
xchg
pop
aaa
add
push
in
scas
xchg
and
pushf
mov
add
pop
lock
adc
jg
cmp
add
sbb
cmpsl
adc
dec
inc
push
and
xor
sbb
mov
aad
pushf
cmp
stos
jg
ret
sbb
pop
and
mov
pop
inc
push
adc
enter
cmpsb
mov
mov
cmp
cmp
repnz
test
xchg
sbbb
add
add
xor
xchg
cmc
in
test
jmp
and
or
dec
sub
push
pop
push
pushf
lret
mov
test
mov
dec
mov
adc
clc
or
pminub
lds
ds
cmp
jmp
push
imul
jl
hlt
pop
ret
out
pop
cmc
aad
stos
sbbb
ljmp
loopne
cmp
and
jns
ds
into
pusha
mov
daa
aad
pop
push
fwait
adc
out
fsubr
pop
push
scas
iret
in
adc
adc
pop
or
dec
int3
in
mov
dec
icebp
inc
pop
cwtl
pop
ljmp
dec
cmp
or
sbbb
or
mov
push
shll
aas
xchg
movb
add
xchg
movsb
stc
es
imul
xor
lret
xchg
adcl
jae
out
insl
add
jbe
fdiv
xchg
nop
or
jnp
adc
out
iret
out
stos
cmpsb
adc
pushf
and
popf
dec
outsb
pop
loope
fs
push
cmp
addb
jnp
ret
xchg
jg
mov
leave
pusha
insl
adc
pop
add
nop
dec
sub
sahf
imul
cmpsw
es
aam
pop
loopne
aas
in
dec
add
cmc
sub
daa
pop
in
imul
repz
inc
stos
call
sti
cmpsb
mov
divb
mov
add
jge
iret
or
sub
mov
enter
jne
ss
dec
pop
cmp
bound
jl
sub
pop
stos
xor
mov
lret
sub
call
jge
mov
lahf
movsl
sub
in
sub
adc
std
lods
cmp
sub
add
leave
lcall
inc
in
adc
mov
fbld
and
test
loopne
popa
mov
mov
insl
test
aam
cmp
loopne
adcl
fnstenv
ret
or
dec
xchg
mov
popf
not
fwait
mov
fcoms
fstpl
push
lcall
rolb
popa
mov
push
pop
dec
in
and
dec
adc
add
mov
lods
sub
lea
mov
inc
fldcw
in
and
outsl
mov
dec
xchg
mov
ret
addr16
jb
cmp
shll
add
arpl
stc
nop
xchg
dec
mov
push
mov
or
add
pop
popf
pop
test
dec
les
loopne
dec
lcall
outsb
inc
and
out
into
lcall
xor
in
adc
popa
sbb
mov
dec
stos
xchg
mov
fsubrl
pusha
arpl
push
pop
inc
mov
das
adc
stos
lret
ds
insb
inc
dec
xor
jno
lret
or
sub
fnstsw
xor
adc
inc
add
or
aam
fisttps
bound
imul
or
imul
cmpl
stos
idiv
xlat
xchg
shrl
pop
pop
loop
test
mov
mov
push
inc
mov
xchg
in
pop
dec
xor
sti
or
push
fsubrl
jae
in
adc
push
ror
subb
cmp
hlt
hlt
push
aas
and
inc
test
stos
ret
inc
mov
sub
out
inc
out
test
adc
ss
js
imul
bound
add
sti
inc
inc
dec
int
cmp
fstl
lods
std
or
or
popf
mov
out
stc
sti
jl
xchg
insl
xchg
xchg
mov
pushl
or
movsb
pop
test
mov
testl
test
cmp
in
enter
mov
sub
sub
dec
mov
jns
mov
test
and
pop
sahf
out
mov
and
jl
idivb
in
dec
aad
lea
mov
daa
cli
ret
xor
cmp
mov
mov
jmp
jmp
loope
and
data16
jp
mov
cli
adc
pop
movsl
xchg
adc
jns
or
and
popf
lock
add
push
or
jne
pop
push
xlat
movsl
mov
imul
mov
test
stos
stos
data16
pop
pop
mov
cmpsl
je
push
and
xchg
mov
cmpsb
js
inc
adc
out
notl
nop
fnstsw
enter
add
fisubl
pop
andl
sti
sub
sti
in
insb
test
sub
out
and
in
es
push
popf
fcmovbe
mov
mov
mov
leave
mov
sbb
mov
ds
and
mov
lret
inc
fwait
sub
pop
daa
fistl
jmp
push
imul
cmp
mov
dec
enter
mov
call
xchg
test
orl
lods
fs
jmp
pop
ds
lea
jle
or
push
push
pop
mov
das
fnsave
fistpll
jne
mov
or
dec
int
aas
sub
out
and
mov
pop
cmp
aaa
out
loopne
jmp
imul
dec
lds
sti
sub
jmp
jbe
int3
outsb
fwait
pop
movsl
sbbb
mov
mov
rorl
sbb
enter
out
imulb
out
rorb
rolb
mov
pop
jl
fadds
sbb
in
gs
sbb
insb
inc
inc
inc
mov
push
mov
push
pop
mov
hlt
jp
sti
adc
cs
inc
in
fs
lahf
cwtl
sub
jle
pop
lock
add
pop
sbb
out
insb
or
neg
popa
cltd
mov
imul
pop
pop
test
jg
fdiv
dec
xor
xchg
dec
lock
cltd
xor
mov
mov
xchg
es
outsb
push
push
pop
aad
leave
shr
dec
xchg
add
ret
jnp
mov
mov
push
mov
loopne
pop
cmp
sarb
jno
push
mov
push
filds
jb
int
cmp
in
dec
or
xchg
in
das
dec
out
stos
mov
dec
add
pop
scas
or
mov
add
and
test
stos
call
dec
fidivl
fldenv
sbb
dec
mov
mov
mov
lods
sbb
lahf
cmp
mov
sarl
arpl
leave
cmc
push
in
jae
pusha
mov
xor
push
pop
out
orl
xor
inc
mov
aad
movsl
pop
push
in
or
and
mov
lds
or
arpl
adc
push
xor
inc
sbb
fcmovnu
lds
jbe
sbb
xor
les
into
fistps
cltd
or
ffree
xchg
or
and
xchg
pop
imul
or
add
push
ss
pop
ret
mov
xor
xchg
xchg
shlb
xchg
in
pop
in
out
or
mov
int
iret
ljmp
aad
ret
and
lds
clc
xor
sub
sbb
sbb
loopne
inc
es
mov
pop
out
mov
cmp
lds
lods
arpl
fwait
xchg
rorl
adc
roll
xor
add
and
imul
lret
fsubl
fisttpll
dec
popl
and
movsl
sbb
dec
in
mov
push
insl
mov
pop
inc
jno
sahf
andl
daa
paddsw
push
imul
imul
mov
sbb
movsbl
cli
ja
jne
sbb
dec
push
ljmp
lcall
jo
jo
xor
pop
lret
insl
jae
and
lcall
call
out
jo
sbbb
cli
mov
pushf
xor
sbb
add
mov
scas
std
push
in
pushf
sti
pop
adc
into
aaa
xor
xchg
test
dec
mov
lahf
das
shrb
dec
jecxz
or
ds
push
dec
addr16
adc
test
in
test
pop
pop
or
and
mov
movsb
repz
pop
fsubrs
js
pop
dec
adc
stc
std
mov
jecxz
and
or
lret
arpl
test
inc
adc
movsb
hlt
cltd
push
insb
nop
push
imul
dec
mov
stos
mov
inc
dec
mov
mov
insb
mov
je
mov
orl
adc
mov
mov
lcall
movsl
data16
sub
xchg
shr
inc
xchg
add
pop
xlat
rcrb
xor
out
cld
and
outsb
in
xor
ja
aam
push
mov
dec
cli
xor
mov
push
add
xor
mov
ret
nop
data16
stos
xor
out
push
push
insl
xchg
adc
pop
cmp
cwtl
push
rcrl
sbb
sarb
and
add
cmp
cmp
jmp
aad
lahf
stc
push
pop
xchg
aas
dec
je
inc
ret
sub
dec
jnp
adc
mov
sbb
out
or
fildll
movsl
aaa
and
sub
shlb
jl
pop
sbb
xor
cs
cmpsl
dec
cmp
xchg
enter
cmp
test
jnp
in
loopne
popa
cmpsl
mov
xor
add
jnp
push
adc
in
pusha
ret
popf
sahf
stc
pop
mov
subl
je
dec
icebp
push
inc
dec
xor
lret
mov
mov
leave
pop
lret
in
aad
and
mov
dec
mov
lret
or
pushf
jb
lock
inc
add
dec
push
inc
and
xchg
inc
jge
sbb
xor
push
subb
iret
aas
sbb
pop
fistl
jecxz
hlt
sub
xchg
mov
xchg
or
sarl
repz
or
xchg
std
cs
jge
ficompl
and
cmp
fucomi
bound
push
sarb
and
dec
fcomps
xchg
cmp
fistpll
in
in
xchg
ret
jl
stc
add
ljmp
mov
ds
adc
xchg
ja
xor
pop
fnstenv
in
mov
cli
xchg
xor
push
sbbb
in
inc
mov
inc
mov
cltd
add
daa
sbb
xorb
std
sub
ficoms
repnz
sahf
add
jo
sbb
xlat
lods
push
test
sti
sub
out
je
xor
loop
pop
sub
push
sbb
and
xchg
cmp
test
fs
push
inc
rol
enter
pop
cmp
xlat
lret
rcrl
or
fcomi
lret
add
adc
sub
ret
div
dec
popf
sbb
add
dec
sbb
push
fmull
daa
jmp
push
pop
jno
cmpsb
mov
shlb
pop
ret
mov
fisubl
pop
fcmovne
sub
jle
ljmp
dec
jp
fsubrl
sub
dec
add
dec
test
fldt
inc
add
shrb
shrb
mov
mov
outsl
aaa
inc
jnp
pop
adc
mov
cmp
sub
pop
mov
dec
push
lds
loopne
cmc
inc
mov
pop
push
and
cmp
shll
jmpw
test
lds
and
fidivrs
push
paddusb
xor
int
and
mov
das
xor
outsl
cmp
out
pushf
out
call
adc
pop
clc
push
jno
xor
push
aas
ja
lock
xchg
xor
imul
out
loopne
ret
push
or
cmpsl
scas
test
imul
pop
inc
ror
insl
jo
and
mov
push
mov
cmp
mov
add
shrd
mov
sbb
mov
inc
bound
aas
das
adc
movsb
mov
add
hlt
xlat
push
icebp
cwtl
lock
stos
mov
movsb
sub
sbb
in
aad
inc
pop
and
pop
aas
sub
pop
mov
xor
or
stos
enter
gs
insl
jp
fistps
xchg
fmul
les
jnp
cld
and
rep
test
xchg
stc
pop
into
push
add
int
adc
ljmp
lods
push
jnp
xor
call
hlt
push
cmp
pop
xchg
loopne
and
xchg
call
sub
cmp
pop
scas
pop
aaa
les
in
sbb
sahf
in
cli
repz
xchg
xchg
pusha
push
mov
aas
mov
adc
dec
inc
xor
dec
stos
enter
shrl
push
ret
cmp
pop
cmp
cwtl
xor
push
inc
mov
enter
fldl
cli
mov
dec
sub
clc
xor
fisubrl
push
xor
mov
adc
enter
repz
adc
add
sub
lret
ficoms
add
stc
hlt
xchg
stc
movsl
sub
jne
call
dec
and
mov
notl
and
push
mov
lods
xchg
out
push
adc
push
mov
or
push
out
pop
dec
mov
mov
lods
ja
enter
out
sbb
js
pop
or
mov
loop
sub
jl
xlat
xor
outsl
std
inc
ljmp
call
std
sub
icebp
sub
mov
in
or
sbb
jno
add
mov
sbb
imul
loope
inc
inc
mov
pop
mov
cmpsl
and
jg
inc
mov
into
fsubrs
push
enter
xchg
pushf
fsubs
nop
gs
dec
cmp
jle
in
sti
adc
imulb
js
sbb
pop
dec
sti
repz
hlt
inc
lret
inc
aas
mov
sub
sub
add
sti
sbb
jge
inc
das
add
cmp
jp
mov
out
jbe
pop
insb
sbb
mov
sub
les
or
sbb
sbb
xchg
cli
rcll
lds
dec
sahf
iret
or
jmp
xor
adc
mov
ja
add
push
ljmp
jns
pop
lds
dec
dec
pop
mov
jge
loop
mov
dec
xor
hlt
das
jns
ljmp
dec
popa
or
cmp
pop
cmpl
leave
jecxz
das
push
call
sub
jns
xchg
aad
jge
or
int3
cmp
movsb
cwtl
jae
push
popa
xor
jp
xchg
inc
push
in
mov
jge
mov
test
sbb
lds
imul
ljmp
inc
inc
in
cli
adc
movsb
sub
or
inc
cmc
mov
pop
push
or
std
fldcw
out
loopw
outsb
sahf
push
xchg
sbb
in
pop
mov
sbb
test
xor
cli
das
dec
mov
dec
fcom
lea
sbb
test
mov
cs
dec
fists
movb
cmpsl
mov
sub
push
jge
xchg
mov
mov
jno
addr16
xor
repnz
fcomip
shll
addr16
and
and
loope
dec
xchg
cmp
lds
jl
lods
pop
or
fisubs
popf
repnz
stos
aaa
lods
xchg
pop
cmp
stos
xchg
inc
insl
dec
dec
xor
push
lret
jb
aam
jle
sbb
int
dec
mov
out
sbb
out
in
push
lret
mov
pop
setbe
push
mov
dec
pusha
mov
rcrb
shr
bound
sbb
mov
cmp
pop
push
add
or
enter
aas
lock
dec
add
or
pop
lret
fbld
add
adc
mov
cld
out
add
ficoml
pop
dec
cmp
mov
aad
pop
xchg
and
nop
push
xchg
dec
in
call
mov
and
leave
imul
sub
dec
push
adc
mov
xlat
in
mov
xor
xor
sbb
inc
jp
mov
imul
jmp
icebp
ja
mov
dec
roll
and
andb
or
push
subb
lods
mov
out
jne
std
xchg
je
loop
add
add
stos
rorl
cmp
push
push
push
adc
ds
cmc
add
daa
mov
popa
dec
pop
mov
fcoms
stc
jnp
xchg
mov
call
pop
sahf
jecxz
mov
inc
pop
popf
movsb
loopne
sub
push
loope
sub
mov
and
loopne
inc
push
test
inc
cmp
jle
dec
inc
mov
add
xchg
pop
xchg
mulb
cmp
test
mov
jg
insb
xchg
fcomip
or
outsb
les
fucomi
mov
fildll
loop
jbe
mov
xchg
pushf
and
sbb
sbb
push
adc
xor
cwtl
vsqrtss
pop
and
fs
lret
mov
mov
pusha
aam
daa
dec
add
push
sbb
scas
inc
inc
inc
push
mov
loop
xor
in
cmp
movsb
add
mov
test
int3
je
jno
jp
out
inc
mov
jne
dec
inc
xor
mov
scas
mov
dec
into
addr16
cmc
rcll
inc
addr16
and
dec
test
and
or
cmc
mov
nop
inc
pop
inc
xchg
pushf
xor
dec
mov
cs
jae
jle
jae
fistl
pop
cmp
cmp
nop
popf
pop
ja
mov
adc
mov
dec
scas
xchg
daa
in
in
or
inc
jne
hlt
lret
std
movsl
popa
js
int3
and
or
dec
cltd
je
and
movsl
add
popf
xor
data16
cmpsb
ficoms
leave
pop
pop
test
ds
sub
sub
dec
dec
into
out
pop
adc
decb
or
clc
lock
pop
or
xchg
jecxz
loop
add
mov
or
mov
std
call
pop
push
stc
nop
insl
notb
mov
inc
out
sahf
or
shr
lahf
add
sub
cld
xor
sbb
mov
mov
std
add
jle
daa
push
pop
cmc
mov
dec
sarl
sbb
sub
dec
add
add
lcall
out
das
movb
pop
add
sub
mov
das
jnp
fldcw
sbb
ljmp
pop
jg
jae
gs
jnp
aam
cmp
fadd
jp
std
out
sbb
xchg
sub
mov
inc
sbb
jp
je
inc
mov
ret
lret
sahf
rorl
loopne
out
cld
int3
sbb
ss
hlt
pop
pop
cltd
js
fcoml
inc
sub
push
sub
icebp
jae
movsl
orb
loop
les
movsl
dec
fs
add
jnp
imul
sbb
mov
cltd
repnz
nop
pop
cmp
mov
mov
dec
add
dec
add
xlat
mov
cmpl
lret
or
icebp
insb
repz
loopne
enter
add
insl
mov
in
mov
fcomps
cmp
leave
add
cs
mov
int
outsl
das
cmp
jae
dec
lret
lock
hlt
or
cli
pop
arpl
add
js
xchg
add
adc
cmc
loop
sti
int
cltd
xchg
jb
nop
rcl
loop
leave
out
pop
lahf
xor
mov
out
jp
push
push
repz
cmp
roll
and
call
mov
flds
push
mov
mov
jno
xor
mov
adc
notb
iret
lods
pop
jne
shll
sub
call
mov
dec
lcall
idivb
popa
mulb
sub
imul
into
xlat
flds
sub
iret
sub
aaa
push
and
and
loopne
xlat
jns
sub
test
sbb
cmpsb
ljmp
subb
jecxz
jno
scas
pop
sahf
cmp
roll
outsb
mov
add
jmp
pop
rcrl
js
and
push
int3
sub
ffreep
inc
loope
xchg
repnz
xchg
roll
repnz
push
mov
ljmp
cld
scas
ret
fnsave
insl
arpl
mov
xchg
lods
jecxz
mov
add
xor
xor
push
cmp
inc
jbe
cmp
sbb
mov
fs
cltd
pushf
jns
xor
scas
es
jae
jne
ret
stos
bound
add
mov
test
es
call
pop
push
ljmp
dec
sti
cld
pop
xor
outsl
inc
xchg
mov
sbb
sub
lds
cmp
loopne
fadds
jne
inc
xor
xchg
popf
test
mov
cmp
aas
add
xor
scas
lods
xchg
in
lahf
jmp
push
push
xchg
fstl
inc
cmpsb
jae
test
mov
push
jg
and
nop
pop
icebp
cmp
cmp
sbb
push
ja
lock
enter
lea
in
and
fwait
jns
lahf
dec
shll
adc
xchg
in
lahf
inc
lods
add
mull
push
insb
cmp
jne
in
inc
push
popf
in
adc
pop
dec
pmullw
sbb
int3
xor
rcll
jbe
mov
push
cwtl
out
push
inc
mov
xor
xchg
sub
jp
adc
ljmp
xchg
movl
int
jne
dec
cmc
jns
subb
sub
add
cmp
icebp
hlt
or
xchg
int3
loop
fs
jecxz
cmp
add
jno
xor
adc
pop
out
clc
gs
jns
xchg
lret
xchg
push
ljmp
or
notb
fbstp
dec
iret
cmp
or
dec
mov
sbb
mov
cmp
ret
push
gs
mov
push
loop
pop
add
sub
out
mov
mov
popf
xchg
fcoms
dec
xchg
cltd
int
daa
add
test
rorb
xchg
sbb
pop
cmp
xchg
and
push
aaa
stos
je
add
adc
lock
in
jo
fisubl
mov
leave
mov
push
jbe
movsb
mov
inc
lcall
xchg
inc
dec
or
out
add
xchg
bound
mov
cmp
xor
adc
rorb
stos
loopne
ret
rcrl
xlat
and
and
clc
test
clc
hlt
add
jne
dec
push
popa
add
jp
push
and
sahf
cltd
xchg
dec
adc
lods
test
push
bound
data16
arpl
or
inc
sbb
cli
in
into
xor
jbe
out
ss
outsl
lods
repz
rcrl
aaa
and
cld
cmpsl
orl
pop
test
mov
or
fstpl
mov
mov
sub
mov
scas
or
repnz
sub
lret
inc
orb
add
gs
outsl
stos
jmp
sub
pop
inc
popa
outsb
popa
cmp
mov
sbb
add
pop
test
jmp
sub
xchg
inc
xor
loope
sbb
add
movsl
and
xor
xchg
mov
daa
jno
int3
pop
inc
pop
cli
imul
jl
test
adc
clc
adc
repnz
mov
xlat
fdivl
int3
fstpl
lahf
pop
push
lods
push
stos
sbb
pop
jo
aaa
adc
or
jg
lret
mov
insl
jo
les
adc
pop
aas
cmpl
pop
ret
aaa
mov
cmc
xchg
cmpsb
cmp
je
popf
sub
decb
push
inc
push
fs
mov
add
mov
in
xor
loope
dec
test
bound
repz
inc
stos
pop
inc
fcomps
pop
adc
decb
out
push
pop
shll
aas
push
out
jecxz
imul
sbb
sub
fmuls
pop
cmpsb
mov
bound
jne
xchg
int
adc
out
mov
das
daa
cwtl
popf
adc
loop
test
xor
fdivs
and
mov
lds
scas
mov
xchg
inc
sarb
movsl
mov
xchg
push
and
in
mov
push
push
dec
xchg
aaa
sbb
dec
xor
loop
ljmp
out
popf
mov
out
ja
or
shll
ss
cmp
push
inc
mov
fcmovnbe
sar
mov
jg
pop
and
bound
and
sub
mov
and
fsubl
xchg
or
jp
imul
sarl
xchg
aad
sub
fsubl
ja
mov
insl
mov
or
push
push
pop
imull
pop
sahf
ficoms
add
push
push
movsl
cwtl
pusha
add
mov
int3
push
leave
push
pop
xor
jnp
into
out
push
mov
mov
mov
adcl
mov
fimuls
out
in
pop
sub
clc
sbb
scas
cmpsb
test
out
lds
notb
jmp
ljmp
mov
jnp
jnp
mov
jmp
adc
aas
cltd
cld
popa
or
xchg
cld
fidivl
pop
lods
ljmp
or
pop
out
push
in
sub
add
stos
xor
pop
dec
cmpsl
cmovbe
inc
xchg
lock
lret
cli
or
lea
les
sub
gs
dec
mov
lahf
test
outsl
es
insl
or
add
pop
cmc
addr16
mov
scas
imul
arpl
mov
negl
mov
push
sti
push
add
or
popf
mov
je
cmpl
mov
mov
mov
mov
adc
jmp
mov
push
popa
out
pop
and
in
mov
popf
jb
pop
das
loope
cmc
int3
push
push
dec
das
mov
adc
inc
cmpsb
stos
addb
std
daa
enter
ret
jg
pop
cmp
out
icebp
push
cmpsl
fucomip
jp
mull
and
stos
mov
popf
inc
push
cmp
mov
and
in
adc
sar
mov
mov
add
call
icebp
movsb
in
call
dec
mov
push
jne
push
cmp
mov
inc
mov
das
xchg
mov
pop
sub
test
cli
fisubrl
and
test
lret
hlt
cmp
inc
call
and
pop
scas
jae
xchg
jmp
outsl
pop
and
xchg
outsl
sbb
push
jne
mov
xor
jne
xchg
mov
das
dec
pusha
sarb
add
mov
sarl
inc
sub
ja
push
xchg
mov
insl
shrl
scas
jmp
or
xchg
lock
scas
inc
adcl
sbbl
nop
fbstp
inc
push
sbb
mov
rcrb
cmp
push
aam
pop
cmp
inc
shlb
dec
add
sub
and
std
cmp
ss
push
or
frndint
cltd
enter
insb
stos
jge
insl
jl
inc
mov
push
add
mov
xchg
mov
and
cmpsb
lock
push
rclb
dec
adc
mov
cmp
leave
pop
mov
mov
insl
fcomip
sub
aad
inc
lret
lods
pop
pop
pop
mov
inc
mov
mov
cltd
xor
jp
pop
jbe
outsl
mov
ljmp
shll
ret
bound
mov
mov
repz
jb
mov
dec
push
cwtl
icebp
iret
cmc
hlt
cmpsb
xchg
repz
mov
icebp
push
push
movsl
repnz
xchg
test
jp
push
lcall
and
sbb
into
or
lds
lret
stos
loop
idivw
jecxz
repz
add
mov
in
mov
and
in
xchg
out
or
int3
and
cmp
jge
enter
fwait
jb
cmc
clc
jb
add
pop
adc
ss
sbb
and
jl,pt
xchg
insb
cs
fsubrp
cs
stc
jne
mov
inc
push
pop
jl
xor
aad
outsb
outsb
xor
push
stos
enter
lock
jp
clc
push
out
xor
movb
sbb
outsb
mov
stos
adc
xchg
aad
xlat
mov
mov
cltd
adc
xchg
sbbb
pop
enter
les
lock
int
lock
cmp
call
rclb
fstl
loopne
lods
lods
into
ss
pop
pop
push
add
bound
mov
xchg
aad
fdivr
pop
mov
and
jmp
lock
pop
push
lock
adc
insl
ljmp
movsl
popa
cld
cmp
fnstsw
data16
testb
and
jne
mov
cmp
pmulhuw
pop
ja
rorb
inc
outsl
mov
in
xor
cwtl
fildll
xchg
fdivrs
pop
cmpb
mov
adc
and
adc
adc
mov
roll
sub
sub
les
xor
pop
mov
mov
adc
or
xchg
repz
push
pop
or
popf
fsts
push
lock
mov
jmp
lods
fdivrs
lods
or
xchg
and
inc
fidivl
inc
into
call
pop
mov
inc
push
pop
xchg
lahf
xor
ja
xor
out
and
pop
cmp
push
les
insl
pop
pop
mov
fimull
rorl
xchg
ret
jo
cld
or
mov
mov
loop
add
ljmp
inc
loop
sub
stc
adc
pop
dec
fsubl
fiaddl
aas
push
mov
loope
aaa
fldl2e
cmp
push
movsb
sub
data16
jecxz
fxch
aad
popa
psraw
and
call
cs
lcall
mov
xor
jbe
cmpb
mov
pop
push
mov
jbe
mov
jmp
pop
shll
mov
inc
mov
int
adc
add
xor
xchg
outsb
loopne
mov
inc
xor
dec
movsb
in
fistl
xor
repnz
scas
mull
mov
roll
mov
jge
lahf
loope
test
mov
mov
inc
getsec
jge
lret
in
add
mov
jle
mov
add
cwtl
arpl
or
push
rcll
fs
sarb
xor
xor
xor
dec
add
add
fisubl
inc
dec
and
xor
in
fistl
xchg
xlat
ret
cmp
repz
xlat
je
pushf
rorb
pushf
pushf
popa
xchg
dec
in
out
mov
in
mov
sti
notb
roll
hlt
cwtl
and
and
xor
xchg
jbe
or
pop
add
in
ficomps
test
jl
add
dec
jno
sub
in
push
cmp
inc
or
sub
cmp
pop
add
sti
rol
jecxz
cmc
lahf
sti
jne,pt
cs
sarb
stc
sub
dec
sub
sub
push
push
jecxz
cmpsb
mov
insb
adc
dec
mov
inc
jo
les
sub
cltd
fsubrl
pop
stos
adc
mov
mov
cmpsb
ror
xchg
push
inc
shll
fistpll
cwtl
dec
loopne
push
push
xor
dec
bound
jno
fwait
sbbb
pushf
cmp
stc
sub
loopne
jno
in
mov
sahf
mov
cld
je
jno
mov
call
pcmpeqb
mov
les
inc
ljmp
inc
mov
sti
sbb
and
mov
sub
out
fldl
cmc
pop
in
mov
test
rcll
dec
cmp
imul
rolb
mov
lahf
iret
xorl
in
cmp
push
lret
mov
jnp
mov
push
mov
pushf
jg
enter
int
dec
test
adc
outsl
int3
mov
mov
push
bnd
mov
mov
popa
xchg
scas
push
mov
add
or
and
cmp
add
or
ficompl
add
cmp
xor
inc
clc
push
dec
cmp
sub
mov
adcl
ficoml
sbb
xchg
xchg
stos
mov
mov
je
jge
inc
fmuls
jb
aas
out
mov
jmp
jle
push
sub
or
ds
fnstsw
cmp
into
test
js
cmp
popa
inc
dec
sub
imul
sbb
add
inc
adc
cs
mov
jno
mov
lret
cmp
cmpsl
lahf
add
mov
loopne
adc
mov
push
stc
pusha
cli
dec
pop
punpckldq
js
repz
xor
sub
xchg
imul
lods
dec
pop
es
in
and
dec
arpl
hlt
push
in
pop
hlt
sub
ds
cmp
pop
lret
push
xchg
in
lods
dec
pop
xlat
clc
jne
dec
stos
lock
gs
jecxz
push
insl
xor
push
int3
jecxz
dec
dec
inc
xchg
mov
pop
or
push
ss
std
inc
push
or
dec
pop
cld
mov
stos
jle
push
sbb
cmp
outsb
stc
jno
lcall
data16
xchg
fcompl
int3
pop
sbb
pop
hlt
push
push
bound
jne
xor
mov
xor
shll
mov
cmp
xor
mov
adc
sbb
lret
fistl
shlb
push
mov
and
adc
mov
loopne
inc
shr
or
mov
xor
mov
jo
xchg
xchg
cmpsb
jecxz,pn
mov
mov
xchg
sarl
notl
sahf
fistps
pop
or
xorl
int
mov
add
js
popa
add
dec
lods
scas
xor
cmp
fdivrs
cmpsb
rcll
scas
popf
lds
sbb
or
mov
mov
mov
push
in
xor
lahf
jne
aas
and
cmpsl
lcall
jnp
push
adc
xor
cli
ja
subl
xchg
mov
push
lahf
hlt
xorl
in
push
mov
gs
jge
lods
push
lcallw
lcall
xchg
push
iret
jne
fiadds
lods
and
scas
dec
mov
in
nop
lret
lods
xlat
inc
pusha
ss
fadd
pop
js
and
jle
mov
scas
ds
sbb
cmp
lea
pop
call
or
adc
push
div
xchg
sbb
dec
add
ja
arpl
loope
call
rcrb
mov
sbb
mov
in
and
test
sbb
repnz
and
xor
stos
or
out
int3
lea
sbb
pop
stos
and
sbb
fnstsw
pop
or
xchg
adc
or
repz
test
testl
cltd
cmc
ja
loopne
mov
js
out
mov
fs
jmp
stos
cmp
outsb
and
push
out
push
icebp
jbe
ja
xchg
fiadds
pop
dec
in
and
pusha
adc
xchg
pop
lret
adc
xchg
push
push
int3
outsl
dec
jle
out
pusha
jnp
imul
fbstp
xchg
lods
imul
subb
fldl
and
scas
jmp
xchg
cmpsl
push
in
inc
pop
imul
inc
cmp
push
fcompl
mov
jp
shrl
cld
and
ret
aam
xor
lret
adc
sub
out
lock
mov
xlat
call
jbe
in
leave
ja
push
push
lods
aas
stos
cmp
mov
push
pop
pushf
popa
fsts
jl
nop
cmpsb
xor
jge
add
sbb
loope
popf
cmpl
ret
pusha
push
xlat
mov
mov
fwait
call
mov
sbb
les
cmp
ja
je
lahf
inc
push
xchg
int3
mov
or
ficompl
or
push
xchg
rcll
out
cld
shr
sub
jae
divl
mov
mov
xor
incl
rcr
mov
sbb
pop
daa
mov
rorl
pop
add
outsb
aad
ss
sbb
and
push
and
xchg
les
aas
mov
in
sysret
loop
out
fcoms
inc
xor
mov
or
pop
les
dec
mov
or
pusha
jb
mov
outsl
mov
std
mov
mov
push
mov
out
test
mov
sbb
sbb
pop
jo
sbb
lcall
cld
push
into
inc
pop
add
orb
mov
mov
jbe
sub
pop
push
jnp
scas
inc
gs
dec
jge
leave
cmc
out
out
cld
jo
jno
mov
dec
adc
inc
and
pop
mov
gs
cltd
add
clc
dec
pop
mov
cld
popf
in
or
sbb
cmp
fisubrl
les
outsb
sbbb
in
sbb
push
push
nop
adc
pop
cmp
cmp
fisttpl
jmp
xchg
dec
mov
add
or
mov
push
cltd
addb
adc
inc
repz
rcll
aam
pop
lds
adc
sbb
dec
lahf
cmp
xchg
test
insb
sub
scas
xlat
sahf
push
jb
sbb
out
cli
xor
test
or
ds
push
jae
ret
cmp
dec
pop
les
xor
pushf
inc
les
lcall
pop
jl
cmp
jge
aad
fwait
xor
minps
mov
push
loope
jmp
mov
and
jnp
mov
inc
inc
pushf
pop
lea
mov
push
push
mov
dec
scas
pop
adc
mov
xchg
push
pop
sub
testl
inc
repnz
adc
cld
pop
lret
dec
test
mov
mov
xchg
jae
shrl
rolb
mov
repnz
in
inc
mov
lret
xchg
adc
xchg
jbe
adc
in
mov
daa
call
pop
lods
mov
fstl
pop
add
das
andb
push
je
mov
int
sti
out
pushl
pop
mov
pop
fstl
or
mov
xchg
negl
testl
pop
enter
insb
test
clc
mov
add
xchg
or
test
fldt
mov
ret
test
jmp
xor
lcall
push
inc
mov
or
mov
cltd
cmp
cltd
mov
or
mov
cmp
mov
or
ret
cmp
cmp
mov
loopne
mov
inc
xor
add
inc
cmp
sbb
mov
cli
pop
mov
gs
std
or
pop
rcr
mov
sub
jae
popf
mov
dec
jecxz
mov
pop
repnz
sub
pop
out
and
je
pop
mov
nop
jb
out
out
sbb
mov
cmpsb
enter
std
jae
out
imul
stc
dec
mov
xlat
push
mov
adc
clc
in
jp
data16
imul
adc
lods
add
sbb
movsl
inc
mov
fisubrl
and
push
stos
push
xor
icebp
xchg
andl
push
ljmp
aam
pop
jmp
cmp
jno
cs
ss
xchg
int
aaa
or
aas
lds
movsb
dec
xchg
lock
xchg
push
xchg
xor
bound
or
movsb
sbb
mov
subb
es
pop
testl
sahf
push
sbb
sbb
hlt
push
add
cmp
mov
imul
jb
xor
shll
loope
xor
inc
in
fisubrs
push
and
push
inc
dec
xchg
sub
stos
shll
cmp
js
mov
or
icebp
and
add
push
dec
out
fmull
sti
pop
xchg
add
aam
mov
adc
sbb
inc
sbb
xor
aas
jb
jnp
out
imul
das
pop
inc
mov
adc
rcrb
stos
pop
outsb
shrl
xor
mov
fnstcw
add
mov
cmp
push
test
ja
mov
arpl
cmp
orl
fwait
ja
andb
mov
inc
push
shlb
movsl
sub
popa
and
lods
sub
pop
out
into
or
pop
inc
jno
inc
popa
cmp
iret
mov
adc
adcl
ljmp
cwtl
sub
aas
jb
adc
imul
xorl
out
cmp
dec
jp
in
xor
sbb
push
js
cmpsb
ffree
cwtl
xor
fcmovbe
mov
inc
push
cwtl
out
sbb
push
cmpsl
pushf
repz
es
pop
push
add
scas
sub
mov
test
mov
xchg
sub
imul
test
aad
mov
sahf
stos
scas
sub
ja
cmc
cmp
push
xchg
sub
pop
xor
cmp
mov
ja
xor
jne
ret
sub
sbb
add
loop
test
and
push
mov
sub
jg
das
adc
adc
inc
push
or
sahf
imull
stc
dec
ja
fadd
jle
mov
dec
stos
fnsave
fs
inc
jp
leave
dec
mov
and
mov
sti
push
sbb
insb
pop
clc
jle
mov
insb
repnz
imul
push
adc
and
ja
xor
imul
mov
xor
xor
add
xor
pop
lcall
int
xchg
sahf
jns
push
xchg
int3
xor
imul
ficomps
mov
mov
dec
insb
xor
push
push
xchg
imul
xlat
bound
or
jne
xchg
insl
jbe
daa
repnz
dec
jbe
mov
fisttps
push
xor
push
outsl
mov
loope
repnz
xchg
cmp
push
jo
fs
mul
arpl
cwtl
dec
int3
jb
mov
or
pop
xchg
mov
pop
shl
in
test
bound
pop
cmpl
adc
in
add
add
fsubl
xor
clc
popf
jnp
je
lods
daa
cltd
cmp
sbb
cli
ret
loop
push
popa
ds
shl
and
ja
mov
out
gs
inc
mov
test
adcb
mov
xchg
fidivs
add
sbb
pop
xor
pop
sahf
movsb
pop
aam
repz
inc
sbbb
inc
xchg
xor
fs
out
jo
push
sahf
jp
out
xchg
cmp
xchg
js
fucomip
xor
daa
fcoml
pop
push
mov
fcmovnb
fsts
xor
or
xchg
cld
lods
std
push
inc
daa
lds
xlat
es
adc
xchg
pop
xchg
pop
pop
stc
adc
jnp
sbb
imul
jl
aaa
push
test
mov
dec
dec
and
aam
and
rcrb
clc
and
xchg
jg
test
or
popa
popl
out
aas
cwtl
pop
icebp
out
pop
shll
das
jmp
fcompl
mov
iret
or
pop
jp
push
das
pop
xor
cmp
and
sub
jne
lea
push
xor
out
shl
mov
sbb
fwait
movsb
mov
inc
fimuls
or
outsl
es
add
sub
data16
dec
mov
pop
testl
xlat
inc
adc
mov
clc
fmul
xor
xchg
sub
cmpsl
jne
xchg
fsts
inc
jmp
cmpl
mov
mov
test
xor
clc
lret
test
inc
jp
xor
mov
xchg
xchg
mov
mov
test
lods
js
out
sbb
jle
int3
daa
jne
clc
push
mov
cmc
or
xchg
mov
fwait
dec
lret
outsl
sahf
es
pop
mov
ja
xchg
pop
lret
jg
or
mov
mov
lods
test
insl
mov
out
dec
pop
xchg
and
hlt
xchg
cwtl
mov
and
sub
sub
lea
mov
cmp
and
pop
add
lds
adc
fcomps
lods
jle
mov
jno
cmp
or
ds
cmp
adc
cmp
pop
in
sbb
and
addr16
sbb
cmp
mov
push
mov
xchg
push
mov
dec
mov
and
nop
pop
add
jp
aaa
push
in
in
xchg
jnp
mov
fcmovu
fcomps
out
enter
test
fnstenv
lods
loope
sbb
or
mov
mov
imul
fcoml
stc
push
pop
insb
addr16
aad
add
popf
cmp
test
jo
repnz
cmpl
pop
xchg
cld
mov
loop
pop
insb
mov
cmc
aaa
cltd
frstor
and
adc
enter
jne
mov
push
stos
outsl
jle
push
xlat
repz
or
fsubr
ljmp
adc
mov
lcall
jae
or
inc
lcall
pop
add
sub
add
js
es
cmp
mov
call
xchg
adc
mov
sbb
lods
push
inc
divl
insb
inc
shl
mov
ljmp
inc
data16
xor
cmp
dec
das
jae
std
outsb
jge
dec
jg
mov
nop
es
xchg
loop
dec
jns
imul
dec
cmp
or
test
fmuls
or
fcoml
movsl
dec
xchg
movsl
add
pop
out
inc
add
push
inc
ja
rorl
xor
ljmp
clc
cmp
push
push
sub
mov
cmp
xchg
mov
stos
xchg
call
and
jbe
mov
push
cs
mov
mov
cli
std
stos
xorl
fwait
or
xchg
dec
pop
es
cmc
push
dec
push
jg
xor
adc
and
fistpll
xor
dec
out
subb
pop
xor
movsl
jb
cmp
xor
dec
and
sub
insb
push
sti
dec
mov
test
inc
fisubs
int
or
or
jnp
pop
mov
lea
lock
test
cmp
lods
xchg
sub
cmp
lds
pop
mov
lds
les
outsl
adc
out
mov
pop
jge
aaa
mov
xchg
xchg
fs
jmp
xor
leave
adc
add
lock
jo
sti
sub
divb
jo
cmp
movsb
sub
jns
lahf
pop
pop
jmp
xchg
mov
mov
nop
push
inc
push
mov
mov
sbb
pushf
sbb
and
or
xlat
sub
add
repz
outsl
sbb
fwait
mull
pusha
lcall
int3
xor
cmpsb
mov
push
stos
and
lret
xor
in
lods
enter
decb
nop
cmc
in
lcall
ds
push
push
push
mov
roll
int3
mov
xor
adc
and
out
jmp
sti
mov
test
sub
fnstsw
mov
xchg
bound
insb
sub
lcall
pushf
loopne
outsb
bound
aad
xor
xchg
lcall
jae
lods
lret
xor
out
cmp
xlat
bound
mov
into
lahf
sbb
cmp
shll
sbb
fs
xorl
fbld
shlb
test
ss
cmp
je
leave
subl
int
inc
or
outsb
pop
add
push
add
test
rorb
adc
fnstcw
mov
cld
loop
dec
push
hlt
lea
imul
xor
mov
fmull
mov
lods
xor
sbb
push
add
cli
pop
lock
in
roll
out
ss
cld
decb
ja
sbb
adc
jl,pt
rol
cwtl
jae
xchg
mov
ret
maxps
stc
mov
jbe
xchg
xchg
xchg
adc
mov
mov
inc
add
cmp
adc
pop
xlat
inc
xor
xor
test
fstl
xchg
mov
cmpsb
subb
rorb
shrl
pop
pop
xchg
filds
xchg
jp
dec
push
xorl
push
movsb
sti
dec
je
xchg
lcall
mov
mov
fidivrs
ret
jg
leave
or
iret
inc
and
push
xchg
pop
dec
push
pop
sbb
cld
adc
insl
push
das
mov
sti
test
add
mov
leave
mov
es
adc
push
push
aad
std
adc
cmp
xchg
cmp
clc
sub
pop
dec
mov
notl
ret
movsb
push
in
and
sub
out
inc
je
out
pop
outsl
testl
cmpsb
push
jle
fs
inc
movsl
es
add
cmp
rorb
nop
xor
push
push
lods
sub
fstp
sub
imull
sub
aam
int
sub
push
lret
mov
sub
aas
cmp
cmp
mov
repnz
outsl
lods
or
lods
or
cmp
jecxz
mov
adc
jae
fwait
popa
dec
dec
lcall
jb
mov
out
jecxz
sbb
sub
imul
imul
stc
inc
es
push
dec
mov
popf
fmuls
xchg
les
popf
cmp
lcall
icebp
movsb
hlt
lea
and
cmp
daa
jns
lea
cmp
iret
enter
cs
or
ljmp
inc
sahf
call
shrl
jp
push
or
cmpb
xor
cvtps2pd
dec
push
mov
das
lock
dec
push
or
mov
mov
cli
loope
lcall
pop
rolb
mov
mov
out
mov
xchg
pop
ja
cmp
pop
imul
jae
mov
cs
rcr
scas
add
xchg
into
mov
push
jmp
add
cmpsl
mov
xchg
ljmp
add
sbb
cmpl
cli
psrld
lea
std
fwait
shlb
mov
and
sub
pop
cwtl
clc
leave
adc
sbb
mov
pop
or
pop
repnz
xor
lds
inc
movsb
aas
ret
sub
inc
inc
mov
inc
xchg
icebp
pusha
cmpsb
faddp
ss
mov
imul
fwait
aaa
add
in
sub
std
insb
gs
cmpsl
jge
jae
and
bound
mov
repz
sbb
addr16
jne
mov
lret
mov
shrb
test
movsl
scas
out
fisubrs
mov
or
test
sbb
cwtl
jne
lea
jle
lods
push
xchg
dec
les
popf
or
fdivs
inc
stc
pop
and
dec
out
cmpsl
pop
mov
ds
notl
push
adc
mov
add
bound
dec
scas
cld
inc
imul
fstpl
and
adcb
dec
mov
or
mov
in
cmp
sub
add
xchg
je
out
pop
add
add
andl
lcall
push
add
xchg
sub
shrb
out
or
inc
lcall
jb
mov
and
ret
stc
pusha
sahf
sbb
stc
scas
or
pop
sahf
fcoms
loopne
and
mov
icebp
dec
shrb
ljmp
fidivrl
jae
xor
adc
cs
rcrl
out
inc
bound
mov
xchg
xchg
cld
pop
cmp
sbb
jl
push
mov
iret
mov
pop
inc
dec
mov
sub
add
jo
and
inc
fwait
xlat
sub
xchg
sub
pop
stos
xchg
aas
icebp
mov
jns
adc
insl
jbe
call
jbe
movsb
mov
pop
pop
repz
stos
cld
fcoms
xchg
cmp
cmp
es
sti
lret
mov
and
aaa
sbb
mov
stc
cmp
xor
ret
aad
mov
sbb
test
or
jle
mov
aaa
aas
jb
jo
icebp
push
adc
cmp
mov
lret
and
gs
add
mov
shrb
pop
ja
xor
pop
jns
xchg
jg
js
mov
dec
jnp
mov
aad
loop
inc
mov
mov
jmp
xchg
pop
call
mov
clc
shll
inc
test
lret
jae
shl
xchg
popa
dec
mov
xor
stc
sub
popf
push
vmwrite
mov
ret
std
adc
jns
push
dec
mov
pop
and
lret
fstps
dec
cmp
mov
mov
pop
out
add
jnp
mov
clc
roll
cmpsb
imul
jae
and
iret
ljmp
repz
notl
xor
xchg
loope
jp
xor
cmovne
inc
or
in
and
call
ret
lods
out
mov
lods
fsubs
xchg
mov
lret
dec
adcb
shl
js
mov
lret
pmulhuw
mov
sarl
test
xor
addr16
sti
ror
sahf
repz
fisubrs
adc
stos
pusha
push
jnp
dec
adc
outsb
sub
stos
xorl
sub
les
adc
rcll
js
pop
movsb
and
xor
jns
inc
push
mov
pushf
mov
cmpsl
xchg
cmp
add
adc
adc
divl
das
and
inc
lds
in
push
inc
push
inc
repz
sbb
xor
adc
mov
dec
adc
repz
sub
mov
sub
aaa
and
mov
inc
ljmp
imulb
add
add
mov
scas
mov
inc
pop
scas
inc
cmp
sarl
ja
inc
adc
rorl
and
aad
mov
push
xor
inc
jbe
insb
xchg
xchg
ror
adc
fcomps
ljmp
stos
inc
xor
jns
dec
out
adc
ret
hlt
pop
popa
cmp
add
push
xchg
roll
loopne
pop
int3
sub
sarl
xchg
mov
xor
cmp
xchg
into
and
mov
or
mov
jne
push
or
add
add
movsl
mov
ja
sbb
sbb
or
daa
mov
cmp
fildll
aaa
loop
fmull
sti
je
pop
mov
or
arpl
add
dec
idivb
nop
mov
fwait
shll
jns
sub
mov
insb
adc
ljmp
jne
shll
mov
push
leave
inc
dec
push
clc
lahf
sub
pop
mov
stc
shrl
mov
mov
xchg
cwtl
lock
jge
or
sub
into
mov
adc
jmp
fidivs
xchg
stos
and
push
ficompl
push
push
fmull
xchg
xor
pop
in
inc
inc
icebp
cli
inc
jmp
mov
mov
stc
pop
scas
xlat
fldenv
sub
jg
nop
adc
iret
jo
or
sbb
cmp
pusha
repz
out
push
or
sub
loopne
icebp
and
jp
dec
mov
xchg
fsubp
mov
cli
pusha
cmpsb
mov
ret
push
add
pop
fists
pop
fcmovu
pop
sbb
cmp
sub
movsb
inc
add
fsub
add
push
or
add
add
sub
sbb
sahf
push
fcoms
mov
sub
mov
notl
push
inc
xchg
repz
es
addr16
mov
fwait
stos
daa
xchg
inc
lret
add
daa
push
or
push
jo
out
mov
mov
in
inc
sti
jno
ret
xor
inc
mov
xor
fisttpll
in
mov
mov
xchg
or
insb
paddsb
adcb
scas
loop
sti
xchg
pop
xor
sbb
mov
ret
or
and
cmp
xor
fcomps
pop
mov
out
jle
sub
fmul
enter
insl
ficomps
pop
out
push
mov
xor
mov
mov
mov
sub
dec
dec
sbb
sbb
stos
jno
sahf
pop
nop
iret
adc
scas
fdivrl
les
xchg
xchg
loop
scas
xor
movsb
pop
addr16
stos
sbb
js
mov
outsb
mov
mov
jle
iret
adcl
adc
out
mov
data16
push
cltd
popf
xchg
ret
cmp
icebp
xorb
mov
in
sbb
add
mov
inc
sub
push
mov
je
repz
jno
jecxz
pop
stos
pop
push
mov
mov
xor
mov
dec
aad
dec
add
pop
jno
jne
fidivrs
movsl
and
cmpb
or
fidivrl
outsb
or
jmp
jb
pop
ss
add
or
jmp
or
xor
xor
sub
and
dec
rcr
sbb
jbe
push
xchg
push
inc
arpl
out
call
lret
pop
int
adc
add
xor
and
jne
lea
sub
push
andl
or
jbe
pop
lods
loope
push
andl
in
push
jno,pt
pop
jb
push
mov
rcrl
xchg
ljmp
imul
ja
jl
dec
aad
adc
test
test
loope
repz
jle
mov
dec
shl
lahf
mov
pop
xor
xchg
xchg
and
or
pop
mov
push
sub
adc
mov
out
imul
pop
pop
mov
test
js
mov
into
std
cwtl
xchg
pop
bound
pop
sub
mov
dec
mov
movb
add
cs
dec
adc
or
mov
insb
jp
fbstp
jno
fcom
xorl
mov
pop
pop
mov
movswl
xor
ret
icebp
stos
clc
sbb
add
or
fxch
aaa
lea
push
add
push
xchg
shll
xor
pusha
mov
roll
xchg
sbb
mov
cmp
outsb
adc
test
push
std
fisttpll
imul
mov
jle
mov
pop
cltd
fisttpll
jns
and
test
cs
fsubrs
dec
jnp
popf
push
insl
repnz
xchg
scas
mov
xchg
out
jb
jge
xchg
jae
xchg
inc
cmpsl
call
push
shrl
comiss
out
and
xlat
dec
jp
test
mov
lea
movl
daa
cmpb
jle
cmp
pop
and
stos
adc
adc
ret
sarl
dec
movsl
mov
loop
pop
inc
lods
movsl
jle
mov
pop
popf
outsl
ret
add
push
outsb
aam
addr16
loopne
mov
inc
mov
aad
lcall
imul
xchg
and
xchg
dec
int3
add
xchg
mov
out
call
pop
push
push
in
xchg
jle
fnstsw
rol
or
adc
mov
sub
ja
pop
call
leave
scas
out
pop
add
push
movl
mov
scas
sbb
dec
cs
ds
jae
sarb
int
inc
iret
lea
mov
pop
or
add
xchg
dec
adc
sub
test
fsubp
cmpsl
sti
push
dec
adc
imul
add
outsl
mov
mov
lds
dec
loopne
pusha
adc
add
xchg
or
mov
ljmp
mov
pop
roll
mov
sbb
lds
dec
out
clc
or
jle
jg
fs
mov
mov
adc
jecxz
lahf
lahf
xor
mov
push
xchg
push
je
cli
sub
xlat
fmull
add
inc
imul
lods
aaa
xchg
push
push
test
arpl
movsb
jne
clc
jne
shll
outsb
push
aad
xchg
cmp
add
in
mov
in
fcmovbe
cmp
jno
cmp
ljmp
in
je
iret
pop
js
sbb
push
xchg
in
push
xor
fisubs
das
mov
aas
outsl
lret
dec
test
cmp
lret
mov
cmp
inc
fmulp
das
sub
in
pop
repnz
push
dec
mov
xor
mov
mov
jg
cmpsb
xor
and
adc
faddp
mov
std
js
mov
sub
jge
aam
rcrb
repnz
aas
lock
jl
xchg
jbe
leave
leave
adc
or
test
icebp
bound
mov
ret
sbb
mov
xor
in
jecxz
shr
cmp
test
push
adc
lods
sub
jl
fwait
subl
pushf
test
negl
jmp
test
mov
fisubs
xchg
or
jge
and
mov
scas
mov
gs
outsb
mov
sahf
mov
rorl
sti
shlb
push
sbbl
mov
inc
xor
fistpl
sub
and
and
inc
mov
dec
push
xor
sbb
lahf
xchg
sub
push
add
adcb
into
mov
test
iret
bound
scas
js
clc
mov
int
jmp
mull
imul
push
push
stos
repz
daa
sbb
test
mov
pop
into
add
lods
clc
inc
xchg
and
pop
inc
imul
pop
adc
push
call
add
popa
push
js
insl
sub
fidivs
lret
lods
pop
mov
cmp
cltd
xchg
gs
and
pop
dec
mov
cs
cmp
adcl
inc
cmp
sub
stos
cld
pop
xchg
push
inc
adc
sbb
sbb
outsl
icebp
cld
push
test
pop
or
cwtl
shrb
addr16
or
cs
syscall
test
or
cmp
insb
dec
xchg
nop
xchg
scas
out
testl
ret
cmp
dec
xor
cltd
mov
aas
rorb
aaa
mov
gs
subl
xor
add
cld
xchg
or
mov
mov
es
inc
hlt
scas
adc
repnz
push
loope
xchg
pop
daa
pop
rcl
lret
test
in
xor
dec
pop
fsub
cmpb
push
sbb
and
daa
push
rorb
hlt
aam
mov
ss
into
scas
jge
push
pop
hlt
rclb
outsl
sub
test
sub
xchg
push
ret
mov
sub
cmp
push
lods
dec
push
jnp
mov
fistpll
mov
cmp
ss
cmp
dec
ljmp
adc
push
cmp
jbe
pop
cmp
inc
fidivl
mov
push
jbe
sahf
cs
clc
in
cmp
sbb
rcl
mov
push
mov
imul
and
jg
xor
jb
out
jge
insb
push
sahf
mov
sub
xor
mov
adc
cmp
or
pop
loopne
popa
mov
nop
sbbl
inc
in
mov
pop
ja
fmuls
inc
stos
pushf
lods
inc
jmp
out
test
bound
arpl
fsub
aaa
fmull
outsl
mov
mov
jne
sub
mov
pop
cmc
lds
aas
aad
mov
popa
clc
fnsave
or
insl
or
jg
scas
fsubl
lods
pop
pop
cmp
scas
pushf
push
dec
jne
xchg
xchg
xchg
movsl
fists
mov
mov
ret
into
dec
inc
pushf
fwait
aad
out
and
mov
dec
xor
cmp
sub
cmc
or
mov
je
int
in
pusha
jg
cwtl
adc
mov
jge
call
add
add
add
lret
mov
pushf
xor
push
push
fwait
out
mov
xchg
jg
icebp
call
dec
repz
mov
jp
es
push
ret
test
jne
aaa
sbb
cli
jp
cmp
add
mov
int3
cmp
scas
jg
not
addb
lret
add
and
xchg
mov
sub
cmp
lods
aas
sarl
rorb
data16
pop
lods
mov
or
lret
sub
shl
cmpsl
arpl
das
xchg
push
mov
mov
jnp
push
jmp
pop
test
scas
sub
mov
inc
inc
xchg
stos
jbe
outsb
addr16
ss
fimuls
sbb
cmpsl
push
enter
das
xchg
xorb
xchg
loope
mov
jp
hlt
daa
push
data16
sub
sbb
jno
adc
shll
push
push
jno
lret
dec
jae
sub
dec
jmp
mov
nop
jb
aaa
xor
in
mov
or
xchg
jae
test
int3
sub
pop
fs
dec
bound
fnstcw
imull
mov
iret
add
mov
in
xchg
and
shrb
in
pop
sub
std
test
roll
adc
or
insl
push
cli
sub
loop
out
cwtl
sti
lcall
push
mov
mov
ret
or
and
xchg
jmp
scas
js
cmp
cmp
fbstp
outsb
jmp
mov
int3
ret
push
mov
xor
push
pop
and
pusha
pop
je
xor
and
adc
mov
dec
flds
or
not
imul
push
mov
rolb
add
int
shl
sti
aas
add
movsl
cmp
mov
int
xlat
incb
call
int
rorb
arpl
sbb
cli
pusha
dec
inc
push
repz
mov
mov
cmpsb
jp
cmc
push
xor
push
sbb
xchg
jne
push
fwait
cmp
cmpsb
int
add
es
gs
iret
xchg
lcall
and
sbb
mov
pop
popa
movsl
xor
outsb
iret
jb
cltd
popa
sub
push
shrl
jns
in
mov
cmc
sarl
pop
jbe
or
mov
jne
fucomp
shl
mov
stos
mov
loop
mov
ret
enter
dec
outsb
movsl
pop
cmp
inc
sbb
cmp
mov
xor
aas
push
mov
sub
xchg
pusha
clc
push
cmp
sub
or
pop
inc
mov
jge
out
incl
test
dec
cld
jae
mov
pop
andb
ljmp
mov
in
outsb
int3
and
int
cmp
movsb
rol
and
or
out
xchg
subl
fimuls
orb
sbb
jnp
les
push
insb
pop
adcl
or
sbb
and
mov
pop
mov
lock
cmp
lahf
sbb
and
jns
lret
push
imul
sbb
test
mov
jb
inc
xor
jmp
ret
jle
jb
fwait
cmp
cmp
lahf
jmp
cmpsb
dec
sub
sbb
leave
dec
imul
push
aaa
push
add
mov
add
sub
and
xorl
hlt
dec
jg
adc
cwtl
pop
xorb
inc
xchg
aad
sarb
jge
xchg
out
inc
mov
mov
push
jnp
repnz
xlat
cli
push
movsl
les
push
dec
xchg
movsl
cmp
lret
fidivs
jg
dec
scas
testb
clc
jg
inc
bnd
cmp
xor
decl
add
mov
test
out
and
movsl
and
fadd
dec
add
cltd
cmp
pop
arpl
push
push
mov
fwait
dec
add
out
push
stos
in
push
cmp
and
fcmovnbe
jl
or
cmc
popa
pop
mov
xchg
rolb
xor
fidivrs
jns
ds
dec
dec
add
mov
push
rcl
dec
sub
fsubp
push
jb
adc
les
mov
les
xor
inc
sub
rcrl
addb
fisubrs
mov
clc
loope
ret
push
pushf
push
mov
pop
cmp
xchg
pop
fcomi
es
out
mov
dec
xchg
cmp
push
ja
addr16
dec
dec
ret
daa
data16
popf
or
lret
test
xchg
push
imul
xorb
movsb
imul
push
movsl
push
jg
outsl
push
ds
enter
xchg
jbe
mov
movsb
adc
cltd
or
rcll
test
sub
jp
push
sub
jmp
xor
cmp
and
shlb
ljmp
push
add
subb
cmp
xchg
push
jae
inc
fs
xor
cld
cmpsb
mov
inc
lock
popl
fdivl
sub
popw
pop
loope
sarl
lcall
stc
movsb
iret
call
les
jo
mov
decb
adc
mov
and
insb
mov
ja
lds
icebp
fstpt
in
sarb
xchg
xor
pusha
xor
and
adc
pop
mov
out
fstpl
inc
shll
ss
dec
jmp
cld
xor
stos
fidivrs
dec
sub
imul
mulb
pop
fwait
aas
je
gs
repz
neg
or
adc
push
mov
adc
xor
jge
shll
addr16
divl
dec
fidivrs
push
fucom
jne
std
orb
mov
ja
pop
mov
cmp
mov
popa
mov
mov
repnz
ror
push
sub
cmp
push
sub
or
cmp
std
pop
push
or
adc
addr16
stos
pop
add
pop
repnz
cmpsb
jmp
and
dec
es
mov
sbb
stc
out
adc
push
mov
jge
lds
in
lret
nop
ret
in
inc
inc
xchg
mov
mov
and
add
dec
aaa
repz
push
push
in
movsb
stc
mov
aam
and
mov
sbb
int
jecxz
push
cmp
xor
ja
pop
sbb
add
push
test
popf
mov
jp
cld
push
ljmp
pop
leave
stos
add
adc
fdivrs
mov
rcrl
add
lock
inc
call
aam
sbb
dec
mov
lock
stos
mov
cmp
aas
lahf
push
cmp
popa
xor
ror
shll
sub
fadds
je
or
pop
shlb
out
xlat
adc
add
push
xor
jne
and
inc
std
insb
loope
jg
adc
repnz
mov
scas
cld
jmp
stos
or
int
mov
push
ss
ljmp
rorl
sbb
push
jns
jno
lret
test
in
loop
testb
repnz
push
cmc
sbb
sbb
mov
mov
or
fcmovne
outsl
mov
xor
add
xor
cwtl
int3
ret
jmp
mov
call
int
les
push
repnz
in
movsl
xor
lea
je
rorl
ljmp
ds
out
mulb
enter
pop
sub
outsb
lret
cmpb
sub
fists
insl
fcomp
mov
and
mov
popa
pusha
inc
fdivs
add
fisubrl
mov
test
inc
pop
mov
xchg
inc
pop
fdiv
adc
xchg
jl
insl
inc
popa
jecxz
in
xchg
xchg
jg
in
mov
dec
shl
movsb
sbb
bound
adc
ds
fsubrl
or
in
mov
lods
xchg
pop
mov
or
jg
loop
scas
add
psrlq
and
and
es
mov
lds
sbb
jbe
mov
dec
nop
inc
pushf
lock
sub
popa
daa
popf
ret
jl
aas
imul
iret
sub
loop
fsubrs
pop
push
stc
adc
push
inc
jl
movsb
jne
xorl
jbe
mov
int3
idivl
pusha
clc
insl
add
aas
mov
clc
jno
and
leave
imul
or
jb
inc
scas
mov
shll
xor
mov
ljmp
leave
int
arpl
jno
dec
ja
lods
sti
xchg
mov
cmpb
add
push
mov
not
xchg
out
inc
pop
aas
mov
pop
xchg
mov
fdivl
fwait
out
xchg
test
sub
fcmovnu
lds
xlat
aas
outsl
inc
ss
cmp
xchg
fdivrs
mov
addr16
ljmp
jne
sbb
or
pop
in
adc
loopne
in
mov
cmp
mov
test
pop
fnstsw
inc
dec
jp
pop
addr16
cs
jae
inc
test
pop
and
imul
pop
jge
popf
and
hlt
jns
xor
nop
mov
adc
movsl
xchg
adc
test
and
mov
inc
sub
fimull
mov
sbb
push
addr16
cltd
add
mov
adc
sub
jne
std
adc
mov
xchg
in
add
jb
cmp
cmp
int3
fidivl
faddl
and
jp
in
or
stc
inc
stos
push
mov
adc
cld
cs
or
push
stc
adc
sbb
negb
in
mov
ret
rcrb
bound
mov
call
xchg
mov
fdiv
pop
es
orb
mov
push
xorb
sub
jl
cs
in
mov
lret
and
nop
jmp
adc
rorb
pop
adc
or
call
pop
insl
rcrb
filds
mov
push
xor
jg
pushf
xchg
xchg
inc
daa
push
scas
icebp
inc
les
and
fsubrs
insb
call
mov
shlb
ret
lahf
sbb
mov
cmpsl
adc
sub
sub
push
aam
mov
mull
lods
xchg
xchg
and
clc
in
mov
inc
push
pop
xchg
jne
gs
add
mov
mov
add
dec
cs
bound
scas
xor
lods
or
inc
es
jno
pop
pop
dec
mull
in
sbb
hlt
jmp
test
xchg
out
jl
sahf
lahf
enter
xchg
sub
push
push
push
dec
push
dec
mov
cmp
fs
or
add
cmpsl
sbb
pop
dec
xor
cmp
xor
iret
pop
add
xchg
xor
pop
xor
int3
cwtl
std
cltd
scas
in
mov
mov
orl
outsl
or
and
lds
and
fld1
lcall
enter
sbb
mov
pop
and
dec
fisttpll
rclb
inc
loop
aad
movsl
fnstenv
lcall
in
xor
ja
ja
mov
jnp
push
fstpt
sub
adc
fisttpll
repz
imul
mov
enter
mov
repz
test
jmp
pop
arpl
mov
lds
imul
jl
xchg
jmp
jnp
fstps
leave
js
mov
stc
xchg
jge
ret
push
jae
or
push
jo
inc
aas
mov
popa
sahf
loopne
data16
add
bound
das
jno
sbb
add
sub
bound
xor
jne
int3
add
lea
sub
bound
loopne
push
stos
sbb
out
shl
cmp
fcmovbe
cmp
jg
adcb
dec
jns
jnp
loope
pusha
cmpsb
popf
mov
movsl
adc
jg
pop
ljmp
inc
popa
xor
fidivrs
inc
popf
push
mov
mov
sbb
mov
sar
out
cmp
nop
cltd
jo
xlat
push
xchg
dec
and
dec
gs
mov
push
jg,pt
mov
sub
ds
mov
lret
mov
in
fs
fcoml
ja
sub
inc
jno
pop
cmp
dec
jecxz
je
ficompl
mov
roll
lret
stos
or
daa
mov
int3
out
call
sahf
adc
jae
mov
inc
and
fucomi
cmp
pop
dec
dec
inc
imul
mov
clc
pop
aas
adc
rcl
push
movsl
imul
xchg
subb
mov
cmp
loop
xchg
fcoml
insb
push
jb
pusha
lods
in
pop
add
icebp
hlt
in
jne
push
mov
xor
cmpsb
icebp
jbe
jno
test
test
out
fimull
push
xchg
call
push
jecxz
iret
imul
sbb
out
js
lock
xchg
insl
add
dec
test
mov
movsb
xor
adc
in
adc
mov
push
or
std
hlt
adc
lcall
and
rcr
jns
int3
sub
jo
adc
or
adc
xchg
scas
adc
hlt
xchg
movsb
movsb
mov
jmp
loopne
in
sbb
ja
ror
adc
and
sub
sarl
mov
lret
xchg
jnp
rclb
out
pop
test
dec
pop
in
loopne
cmpsb
jl
fs
sbbl
loop
mov
dec
into
mov
add
jno
mov
outsl
push
jo
vaddsubpd
adcb
pop
out
push
or
repz
in
cmpb
incl
mov
ds
enter
add
je
xor
or
mov
cld
mov
cmpb
push
in
cmpsl
in
mov
jmp
and
bound
aas
loop
in
movsl
push
repz
jb
fs
jmp
unpcklps
cmp
adc
or
mov
andl
mov
rcll
ret
mov
push
push
adc
ds
aad
movsb
push
scas
shl
xchg
mov
pop
mov
out
lcall
mov
jbe
dec
and
lcall
das
adc
shrl
lods
loop
out
inc
popf
sbb
mov
mov
js
mov
outsl
mov
adc
in
jge
dec
test
mov
pop
pop
fidivl
mov
and
sub
push
sub
lret
in
test
lahf
addr16
insb
inc
adc
nop
xor
push
bound
pop
scas
dec
fcom
lds
roll
jnp
ret
les
mov
mov
pop
cld
stos
faddl
xor
pop
cwtl
adc
xor
rcr
mov
push
outsb
stos
loopne
push
in
push
ljmp
add
push
cmp
mov
and
in
pop
and
dec
lds
test
jae
aas
mov
rclb
in
lea
jge
test
sub
add
test
loop
sbb
popf
push
cltd
test
jp
mov
out
cmp
test
imul
out
cmpsl
in
in
adc
inc
stos
cmp
into
mov
jge
sub
leave
test
push
into
or
lock
mov
in
and
or
fdivl
stc
sti
xlat
and
dec
pop
add
sub
xchg
ja
jp
rcrl
and
ja
jno
pop
mov
push
adc
rcrb
fstpl
mov
lock
mov
das
popa
jno
repnz
js
ret
stos
rclb
shrb
xchg
xchg
cwtl
inc
loop
cmpsl
xchg
jae
outsl
das
popa
bound
mov
sub
lods
out
or
in
cmp
pop
inc
pop
mov
jnp
cmc
mov
ret
push
int3
orl
adc
add
xchg
dec
test
adc
nop
pop
xor
out
push
frstor
lcall
xchg
aaa
shl
add
cmp
in
dec
test
aam
inc
aam
push
dec
test
fisubrl
xlat
jbe
sarl
lahf
aaa
ljmp
adc
sub
jl
mov
notb
orl
add
mov
loop
xorb
push
scas
or
test
or
lods
loop
adc
int3
cmp
mov
inc
in
clc
mov
loop
ret
dec
pop
pop
daa
int3
jb
nop
test
ljmp
out
idivb
xchg
xchg
pop
xor
jnp
or
or
xchg
add
movsb
cltd
cmc
sahf
sahf
ds
dec
xchg
mov
cmpsl
ret
aad
mov
jns
lods
xchg
mov
push
or
pushf
sahf
cmp
aad
push
lds
scas
mov
out
push
cltd
push
sbb
xor
mov
add
sbb
fisubrl
in
daa
daa
ret
shrb
mov
iret
repz
mov
or
imul
push
enter
adc
mov
xchg
pop
stos
pop
jmp
rcll
fnstsw
xchg
stos
mov
sub
lahf
mov
jns
je
jge
and
sub
or
out
lock
imul
test
das
mov
or
out
or
arpl
cmp
xor
loopne
sarl
push
int3
or
sub
pusha
push
nop
jmp
xchg
pop
pop
jle
jns
jl
or
sarb
scas
mov
push
push
bound
divl
repnz
jle
sti
pop
cmpsl
pop
sbb
in
je
xor
adc
mov
cmpl
push
xchg
subb
orl
aaa
rcrl
lahf
mov
fcmovb
scas
add
dec
mov
mov
mov
jmp
sbb
sub
mov
jl
xchg
xchg
add
inc
dec
pusha
add
in
insb
int3
or
aas
ret
out
cmpsl
add
test
add
sub
sbb
stos
xlat
mov
cs
push
dec
add
pop
dec
xchg
mov
dec
mov
xor
pop
ss
sbb
andl
scas
unpckhps
int3
lock
and
sar
aaa
insl
mov
fmull
jp
jns
das
neg
mov
or
push
lahf
sub
int3
and
scas
jnp
mov
pusha
shlb
xor
sub
push
xchg
jle
mov
sbb
popf
and
iret
outsb
jmp
mov
movsl
mov
orb
mov
out
mov
test
mov
pop
jae
stos
addr16
push
inc
push
imul
mov
arpl
out
cli
stos
xchg
dec
int3
inc
push
xchg
mov
fstl
rcll
ret
repz
out
mov
popa
lcall
xchg
pop
ss
add
out
jno
push
add
imul
lret
xchg
mov
sub
sbb
and
mov
pop
inc
inc
push
inc
sub
xchg
dec
xchg
fstpt
and
loope
testb
scas
lret
dec
shl
or
mov
mov
jns
inc
rorb
aaa
jle
movsl
fabs
aas
outsb
or
scas
push
mov
xchg
lods
loopne
dec
std
lret
sub
cli
ret
rcrl
or
mov
jl
lods
das
repz
sbb
in
pusha
sub
cwtl
mov
std
add
fisubrl
add
and
or
fdivl
outsb
mov
dec
in
mov
std
ss
adc
repnz
leave
mov
xor
cltd
enter
scas
xor
lret
mov
inc
adc
push
adc
cli
xchg
pop
rorl
add
sbb
out
add
xchg
std
push
pop
scas
lea
sarl
mov
into
or
mov
or
daa
mov
mov
sbb
lods
and
dec
sub
das
jmp
js
movsl
mov
es
mov
stos
jbe
popf
test
js
push
int
std
mov
inc
cld
pop
fs
shlb
sbb
andb
add
push
push
js
data16
adc
lret
roll
loopne
ret
jbe
pop
sbb
sti
data16
xchg
xor
mov
jg
push
lcall
xor
xchg
out
aam
xchg
cmp
loope
mov
jecxz
outsl
in
insl
mov
jo
int3
push
sbb
mov
rcrl
sub
adc
and
fisubrs
cltd
jle
xchg
aad
add
aaa
fcmovnb
push
popa
lods
mov
pop
pop
pop
lahf
xchg
loopne
test
jle
sbb
inc
sbb
repz
sub
jg
in
arpl
out
push
mov
out
adc
addr16
gs
jno
stos
jo
cli
push
or
xchg
into
mov
jns
scas
ret
push
add
enter
lea
sbb
mov
jae
mov
xchg
les
js
jnp
dec
jnp
push
insb
test
or
loope
pushf
mov
mov
wrmsr
leave
rcrl
sub
mov
scas
and
sbb
mov
push
mov
sbb
cwtl
test
aad
pop
lock
mov
mov
xchg
lea
andl
ret
leave
cmp
pushf
mov
cltd
iret
ret
inc
mov
mov
in
ret
andps
dec
lock
gs
push
nop
sahf
inc
sarb
sbb
fdivrl
gs
mov
inc
arpl
jg
call
sbb
cltd
fcoml
inc
in
lcall
ss
pop
adc
pop
adc
mov
dec
lods
adc
insb
loop
addr16
hlt
dec
push
movsb
mull
popa
lret
lss
push
fistl
mov
mov
pushf
je
arpl
dec
dec
lret
mov
aam
test
in
dec
xchg
dec
pop
push
ficoms
cs
and
mov
pop
or
jns
dec
lcall
add
jp
or
mov
rcl
fs
mov
xchg
pop
inc
les
add
push
loop
jl
stc
xchg
push
loope
push
jl
jp
pusha
out
mov
mov
cmc
ljmp
pop
pop
push
frstor
cmp
adc
inc
pop
cmp
pop
sbb
out
outsl
nop
adc
and
xor
test
inc
icebp
dec
loop
dec
lds
add
and
test
mov
scas
cmp
std
in
push
out
cltd
std
mov
xchg
push
xchg
jmp
sbb
stos
dec
mov
lock
or
in
add
dec
out
mov
push
sbb
push
inc
mov
mov
add
mov
pop
push
mov
aas
sub
repnz
add
rcr
insb
or
or
ljmp
jge
cs
dec
lret
push
cmp
pop
pop
in
sbb
addl
and
lahf
aam
lret
add
pop
xor
and
mov
mov
das
sub
arpl
orl
and
add
movsb
fcoms
mov
pop
push
mov
ret
push
adc
ret
hlt
aas
jo
loopne
repz
mov
sarb
negb
sbb
add
add
lds
xchg
test
xchg
adc
cmp
inc
pop
add
dec
mov
push
adc
cmovle
jge
cmp
sbb
fstps
xchg
push
scas
cli
pop
call
jo
xlat
add
mov
mov
cmpsb
sbb
cmp
pushl
and
js
add
pop
jge
jecxz
scas
fadds
add
outsl
nop
ret
jl
sub
sbb
mov
push
dec
mov
hlt
mov
test
sbb
jl
push
data16
jp
and
lcall
pop
xchg
rcr
pop
ret
out
pop
lods
subl
mov
cmpsb
cwtl
mov
xchg
das
pop
mov
ds
leave
mov
add
pushf
push
scas
ljmp
in
and
pushf
lock
jp
and
fbstp
mov
add
xchg
adc
lods
sbb
lods
cmpsl
dec
js
or
ja
lret
stos
rclb
cmp
mov
adc
mov
and
inc
imul
aam
push
insb
sub
pop
fldcw
sahf
std
push
nop
lret
fdivp
mov
je
or
or
pop
pop
insb
sti
ficomps
call
sub
test
xor
add
sbb
pop
push
loop
lahf
mov
cmp
jbe
fidivrs
repnz
inc
imul
sbb
push
subb
mov
or
ds
and
xchg
repnz
pop
add
mov
mov
into
insb
pop
cmc
mov
xor
add
adc
push
sub
insl
scas
outsl
push
xor
imul
mov
mov
out
ret
ret
push
adc
ss
mov
mov
push
outsl
xchg
mov
sub
subw
loop
jno
jbe
fwait
mull
inc
and
cmp
xchg
pop
xchg
inc
aam
mov
xchg
shll
push
sahf
outsb
bnd
dec
das
xlat
pop
jne
inc
popa
jp
jns
or
imulb
fwait
loop
aad
mov
stos
xor
std
mov
pop
daa
jb
and
insb
mov
inc
rcll
mov
cmp
jne
dec
fs
les
bound
push
jno
jp
push
mov
xchg
cmp
int
add
mov
adc
jp
dec
dec
stos
jle
xchg
movsb
lret
call
inc
lds
outsl
push
pop
jo
call
out
pop
push
enter
lahf
pop
xorl
test
mov
or
push
stos
mov
dec
cmp
mov
xor
adc
xchg
jge
mov
imul
clc
and
xor
pop
cltd
out
fwait
out
int
bnd
mov
mov
dec
sub
adc
insb
or
jp
clc
add
add
mov
pop
cmp
mov
mov
scas
in
movsbl
push
les
pop
xchg
movl
mov
movsl
out
ret
out
lods
mov
cmpl
push
mov
aas
inc
test
mov
stos
and
lret
add
daa
jne
int
mov
mov
push
clc
out
lods
jle
je
pop
inc
pop
into
cmp
mov
ss
pop
xchg
scas
cmp
cmp
aaa
ret
into
sub
sub
xlat
adc
jns
fwait
and
mov
xchg
orw
fstpl
dec
mov
inc
and
pop
add
ja
arpl
jge
mov
dec
out
push
push
stos
cs
test
pop
xchg
add
sbb
mov
loopne
and
loope
sbb
insb
aad
stc
mov
mov
or
test
lret
sub
pop
lret
xor
mov
adc
sbb
mov
xor
jb
test
cwtl
hlt
jmp
mull
int3
xor
jge
movsb
jo
shll
mov
add
jecxz
sub
ret
inc
das
pop
mov
mov
mov
sub
jns
ss
add
inc
ret
fs
mov
gs
push
push
lahf
cltd
xor
dec
in
dec
leave
jb
leave
xchg
scas
in
lret
mov
and
scas
or
or
xor
hlt
sbb
add
addr16
mov
cmc
je
and
scas
ficomps
or
jmp
add
into
enter
loopne
int3
fs
mov
sub
fstl
or
sbb
fmuls
test
shrl
hlt
out
call
loopne
sub
popf
adc
push
scas
mov
or
in
and
push
xlat
clc
imulb
jle
shl
xchg
out
ss
lahf
xchg
and
pop
pop
jl
add
clc
jmp
mov
into
vmovaps
and
pop
rclb
mov
xlat
pop
imul
inc
add
sbb
pop
adc
pop
fucompp
jns
adc
sub
adc
sbb
movsb
cmp
loop
push
pop
fidivrl
sub
int
in
mov
leave
outsl
ss
sti
aaa
cmp
jb
lea
adc
cmp
iretw
inc
test
aad
out
xchg
adc
lret
movsl
push
dec
or
arpl
mov
int
xor
jecxz
mov
cwtl
out
insb
mov
movsl
mov
rcr
adc
lock
data16
inc
lret
adc
dec
xor
cltd
sub
dec
fbld
mull
lea
push
popf
shll
push
ljmp
outsb
jl
bound
adcb
enter
sub
cs
mov
xorb
dec
sbb
out
pusha
lock
pop
or
cmpsb
into
out
inc
in
sub
fwait
das
mov
dec
xchg
es
sub
stos
loope
and
mov
fcomip
fwait
inc
std
push
negl
jnp
repnz
sbb
mov
das
fcomip
jp
scas
mov
push
hlt
outsl
ss
xchg
cmp
xor
cwtl
mov
xor
ja
iret
fistpll
cld
inc
or
adc
call
jmp
inc
ljmp
lods
mov
jb
sahf
dec
sbb
xchg
loop
cwtl
mov
xchg
data16
adc
sbb
pushf
sbb
bound
lahf
mov
jae
out
mov
out
push
int
iret
out
into
arpl
rcll
aam
jbe
loopne
inc
ficoml
outsb
hlt
mov
sbbl
popa
mov
mov
bound
notb
enter
and
ficomps
pop
and
lret
pusha
mov
movsl
lret
adc
jecxz
mov
cmp
xchg
inc
push
test
xchg
int
nop
mov
inc
mov
cli
scas
pushf
jecxz
lcall
gs
fimuls
pop
jmp
subb
ret
in
xor
push
scas
mov
ljmp
scas
dec
push
jbe
insb
aas
fbld
xor
jle
sub
inc
or
insl
xor
mov
out
xchg
dec
icebp
loopne
testb
imul
pop
push
jmp
data16
mov
and
out
dec
push
push
lahf
jecxz
fwait
adc
and
mov
mov
lret
xor
flds
mov
push
clc
testb
roll
jnp
rclb
popa
out
pusha
jbe
or
cmc
mov
add
rcl
xchg
outsb
mov
mov
cltd
movsl
int3
imul
loopne
shl
mov
imul
push
sub
sbb
inc
push
add
xchg
out
sbb
ljmp
adc
out
into
sbb
in
dec
xchg
sbb
out
mov
rcr
jb
pop
mov
rcll
data16
rorl
popa
sub
xor
push
sub
nop
jecxz
in
mov
add
imul
jmp
pop
xlat
stos
adc
pusha
dec
pop
and
fnstenv
out
xorb
repz
out
inc
push
sub
push
mov
ljmp
data16
shl
mov
fstpl
jb
stos
iret
mov
push
lahf
stos
push
adc
mov
ja
push
mov
jo
push
repnz
ret
mov
pop
push
inc
xchg
icebp
ljmp
enter
jmp
dec
fwait
jge
jns
dec
mov
loope
gs
cwtl
adc
jp
fsubrs
xor
xchg
shrl
imul
in
mov
incb
lods
lds
mov
jb
cli
mov
add
add
sbb
mov
inc
int3
xchg
mov
mov
mov
js
and
cmpb
cmp
movsl
push
test
cs
xchg
out
cmp
xorl
or
cmp
push
imul
bnd
mov
in
jg
repz
and
mov
test
sub
mov
lcall
into
dec
icebp
enter
push
pop
out
dec
and
inc
lds
inc
gs
out
loop
xor
das
cmpsl
sti
rorb
dec
lods
testb
dec
aam
test
mov
decl
cmc
xlat
mov
loope
idivb
mov
pusha
jne
jge
cmp
daa
jge
jb
test
dec
in
dec
hlt
cmp
leave
push
push
or
push
add
xchg
mov
enter
je
popf
pop
imul
pop
aas
bound
jo
movsl
and
cmpsl
faddl
adc
fmulp
jno
nop
mov
sub
dec
shl
loop
and
push
xor
cmp
pop
mov
mov
pusha
push
fidivs
cmpsl
mov
xlat
loopne
xchg
cmp
mov
pop
repnz
mov
pop
pusha
add
mov
dec
test
fisubl
mov
lods
inc
xor
call
neg
lea
sbb
push
inc
arpl
mov
fs
sbb
mov
movsl
shr
or
inc
jg
add
and
addr16
lcall
scas
shrl
lods
rcrl
xchg
std
xlat
stc
pop
xchg
xchg
incb
mov
test
addr16
add
ljmp
cmp
lret
mov
sub
sub
inc
mov
cmp
sbb
xor
jmp
xor
push
mov
outsl
lods
or
fs
and
add
or
sbb
and
scas
sub
sub
jnp
aam
insb
push
fimull
popf
sbb
lock
jae
push
mov
push
cmp
cwtl
inc
jmp
lods
sarb
adc
pop
cmp
sbb
adcl
movsb
xchg
into
fs
jbe
inc
es
shlb
ds
pop
sbb
jns
jno
pop
dec
scas
loop
mov
xchg
mov
dec
popa
jbe
pop
lock
push
test
mov
std
mov
cmp
pop
and
scas
stc
cltd
ja
xchg
add
outsl
pop
test
ss
push
adc
jecxz
loope
cmpsl
sbb
xchg
roll
addb
xor
push
out
popa
imul
jae
ja
mov
inc
mov
insb
pushf
jl
lret
daa
loop
jmp
popf
and
sbb
pop
push
pop
test
jle
push
cmpsl
or
nop
xor
lret
pop
stos
ja
mov
fcomps
jl
jae
add
insl
loop
or
call
imul
mov
mov
mov
xor
mov
in
ficoml
and
or
shlb
ret
hlt
mov
clc
pop
mov
les
fbld
sub
pop
sub
mov
pop
jae
fucomip
sahf
inc
jbe
jecxz
xchg
cs
push
lock
ds
sbbb
push
push
push
bound
pushf
push
into
loopne
lock
icebp
and
sub
stc
mov
mov
rol
xchg
int3
loop
push
push
pushf
mov
mov
push
and
and
xchg
in
lods
jae
and
or
add
fisubrs
sub
dec
and
push
fsubl
ficoms
dec
pop
into
and
iret
nop
stos
push
inc
pop
sbb
call
insl
shll
pop
inc
pusha
xchg
ja
fidivl
movl
push
orb
mov
pop
scas
xchg
fcmove
mov
xor
inc
cwtl
pop
lahf
in
ss
and
mov
cmp
mov
xor
scas
mov
shlb
push
out
leave
adc
dec
lods
addr16
in
or
aas
jp
mov
in
inc
or
jecxz
fisttpl
xor
sti
sbb
push
mov
subl
fadd
push
xor
push
xchg
fs
xchg
stos
sbb
rcl
xchg
add
scas
jb
cmp
push
push
gs
xchg
pop
jae
lcall
out
lahf
mov
sbb
cmpsb
lods
cmp
pop
push
or
stos
cmpl
or
pop
push
pop
xor
test
shl
lods
jg
mov
sub
or
pop
pop
push
inc
sub
imul
in
push
dec
in
ss
inc
fwait
xor
pop
ret
push
cmp
mov
movsl
repz
cmp
push
and
scas
inc
inc
out
push
inc
lahf
sub
jecxz
cmp
add
cmp
mov
pop
int
push
iret
sub
mov
jecxz
mov
leave
cmp
lahf
outsb
xchg
push
and
mov
or
cmc
add
js
add
push
out
xchg
push
push
js
mov
xor
in
pushf
aaa
popa
lods
or
mov
lret
inc
sbb
hlt
inc
and
dec
mov
mov
pusha
jmp
xor
lret
dec
pop
in
fisubrl
jecxz
adc
mov
pusha
jg,pt
ja
test
push
sbb
push
setp
fldl
ljmp
or
call
push
dec
sbb
push
sub
dec
or
add
push
scas
push
push
sarb
add
cmp
ss
mov
or
ljmp
fwait
add
mov
lods
add
outsb
js
imul
jb
xor
cmp
movsl
les
or
xor
adc
cmp
in
xchg
sub
or
mov
mov
jb
xor
cld
outsb
push
jnp
xor
xor
cli
or
add
and
loopne
pop
out
dec
lock
sarb
les
rcl
popa
or
movsl
icebp
shrl
inc
flds
inc
cs
mov
mov
insl
xchg
ret
sbb
outsb
pop
ja
sub
fisubs
pop
js
or
fldz
push
bound
shlb
push
pusha
incb
push
out
push
inc
xchg
into
mov
add
sbb
sub
cmp
out
pop
lock
out
push
movsl
jle
sub
sbb
ss
jp
js
jae
jle
loop
xor
cld
sahf
popa
dec
sbb
pop
xchg
mov
mov
mov
dec
lds
clc
mov
push
ss
inc
mul
rcll
cmp
xchg
lcall
rol
mov
stos
sti
or
dec
cli
pushf
mov
adc
cmp
mov
push
sub
arpl
test
test
and
mov
adc
insl
idiv
ret
adc
dec
loope
lods
in
out
incl
repnz
lcall
jmp
out
mov
mov
add
jno
push
test
arpl
add
stc
shll
jns
jle
int
add
sub
js
pop
xor
repz
sti
xchg
into
aaa
adc
test
ret
lahf
lahf
and
mov
and
daa
in
ja
cs
inc
stos
or
stos
or
cmp
das
rcrb
ss
leave
lods
adc
in
cwtl
mov
call
mov
push
jno
outsb
js
adc
stos
aad
test
mov
enter
adc
jo
in
and
std
iret
jmp
out
out
mov
sub
repnz
push
adc
pop
xchg
sbb
jbe
in
inc
outsl
xchg
fstps
imulb
push
jmp
in
popa
stc
adc
push
xlat
and
inc
or
mov
push
jbe
push
mov
push
std
xchg
inc
dec
pop
inc
fs
movl
and
mull
or
add
pop
pop
push
sub
xor
pop
mov
mov
int3
sbbb
hlt
mov
sbb
iret
cmpsb
xor
pusha
rcrl
rclb
test
xlat
insb
xor
pop
ss
repz
dec
stos
xchg
xchg
add
imull
inc
dec
jg
cwtl
les
insl
lahf
ss
outsl
cmpsl
and
mov
imul
leave
mov
enter
outsb
rorl
leave
insb
dec
mov
pop
inc
into
add
add
int3
dec
bnd
xlat
fcmovnu
es
leave
out
pushf
and
jp
jno
xchg
mov
fmull
lcall
xchg
insl
xlat
or
roll
shl
sbbb
xchg
test
push
fwait
sbb
xchg
imulb
outsb
ds
add
pop
lahf
stos
in
mov
pop
es
inc
fisttpll
popf
push
pop
or
mov
xchg
cld
mov
movsb
rcrl
outsl
shl
adc
mov
mov
fwait
sbb
fldl
xchg
jo
inc
xchg
adc
fists
sbb
xor
xor
sub
call
pop
dec
shrb
push
dec
mov
adc
pushl
inc
sti
dec
lcall
lods
rorb
cmp
jmp
int
daa
scas
popa
js
push
jg
ret
stos
test
and
enter
cwtl
test
mov
dec
ret
xor
sub
xchg
daa
pop
mov
and
jmp
rorb
js
cmp
scas
insl
inc
lret
inc
fisttpl
pop
mov
xchg
dec
jnp
lods
repz
gs
fwait
sar
and
xor
and
cmp
xchg
sbb
push
shrl
sub
adc
leave
pop
inc
dec
dec
stos
jp
mov
mov
int3
popa
aaa
push
pop
iret
inc
dec
xchg
rcrl
int3
mov
mov
dec
test
push
pop
sbb
cmp
add
mov
xchg
jo
and
dec
pop
ljmp
cs
test
and
sbb
mov
push
loopne
cli
inc
adc
rorb
pusha
push
je
lret
vpandn
or
shrb
adc
inc
push
lret
add
mov
mov
incl
negb
push
imulb
jle
into
xor
loope
scas
cld
movsb
xchg
fwait
pushf
pop
lahf
push
out
cmp
dec
imulb
iret
fstps
mov
loope
jecxz
cld
rcrb
mov
or
imul
xlat
push
cwtl
cltd
and
xchg
cmp
jge
inc
xchg
or
mov
inc
inc
filds
mov
lahf
lcall
adc
push
rcrl
cmp
add
pop
leave
popa
imul
icebp
les
lds
xchg
ret
or
lods
in
leave
das
movsb
push
mov
sbb
mov
fsubrl
repz
sub
lods
rcrl
mov
fcomi
jmp
das
ret
xchg
mov
sbb
pushf
stos
insl
and
xor
sub
jg
sbb
loope
xchg
cmpsb
notl
cmp
dec
pusha
icebp
fcoms
adc
mov
arpl
mov
xchg
ja
and
popf
shlb
outsl
xchg
xor
int3
mov
rcl
bound
fucomi
pop
in
mov
xor
jle
sbb
mov
lahf
pop
addr16
bound
das
pop
cmp
mov
clc
pop
xor
and
stc
shlb
add
insl
xor
jecxz
mov
imulb
inc
xor
pop
in
sub
mov
sbb
mov
dec
jne
sbb
mov
js
and
inc
shl
xchg
push
mov
lds
add
mov
in
lea
jno
pop
ljmp
ret
vmovsd
inc
add
or
iret
mov
sbb
mov
insb
leave
js
adcl
insl
push
shll
enter
fdivs
cmc
pusha
xchg
mov
jo
shr
xchg
pusha
lods
mov
mov
fdivp
dec
jo
icebp
xor
mov
pop
cmp
xor
pushf
lock
cli
cli
ss
test
push
mov
mov
shl
cmp
mov
ror
sub
stos
dec
pop
mov
popf
scas
aad
ljmp
xor
inc
xor
and
and
xor
mov
call
jns
insb
aas
lea
jp
sbb
into
movsl
sbb
mov
and
cmp
mov
add
les
sahf
rcll
add
xor
inc
pop
sbb
dec
push
inc
sbb
sbb
insl
dec
and
adc
inc
pop
mov
push
nop
pop
ret
outsb
lret
cs
mov
je
jne
jo
aas
leave
mov
mov
xor
mov
fildl
loop
jnp
bound
fsubrs
sahf
arpl
and
out
mov
loope
call
mov
push
xchg
xlat
inc
cmp
dec
je
mov
sbb
mov
cwtl
out
aaa
sub
cmp
xchg
mov
inc
sahf
sbb
insb
ds
fstpt
vphaddwq
xor
out
jb
adc
rorb
cmp
push
ret
push
inc
jle
pop
movsl
mov
dec
or
hlt
int3
fidivrl
aaa
leave
aam
push
lret
and
iret
and
xor
xchg
adc
push
push
sub
dec
pop
pop
js
push
leave
inc
inc
push
cs
arpl
lods
pop
xlat
out
or
push
push
mov
ret
push
xlat
push
ret
jo
push
ljmp
cmpsb
subl
pop
dec
aam
push
pop
push
adc
jecxz
repz
fnstenv
loopne
lahf
sti
test
fisubrl
sbb
scas
dec
mov
icebp
xlat
call
mov
fstps
mov
adc
and
mov
in
cmp
jmp
lret
xor
pop
dec
rolb
xchg
cmp
push
and
ror
xchg
jmp
outsb
or
jne
mov
mov
xchg
adc
mov
sbb
insb
pop
test
adc
imul
movsb
jno
shll
and
sub
add
xchg
ret
sbb
mov
movsl
add
out
push
xchg
mov
punpckhdq
push
aam
fldcw
popa
imul
jg
in
mov
inc
out
mov
dec
cmpb
dec
inc
mov
scas
jbe
mov
call
adcb
cs
mov
inc
jae
sub
push
xchg
inc
xor
js
mov
adc
daa
int3
ja
jb
leave
es
pop
das
dec
out
lahf
andl
jg
mov
mov
xchg
and
jmp
setle
cmp
jb
ret
inc
cmpsl
lret
mov
aas
jnp
and
fs
imul
cmp
inc
adcl
jbe
fisttpl
mov
xor
sbb
xchg
xor
jmp
cmp
jnp
addr16
ret
stos
fwait
jno
dec
aaa
jle
push
pop
jmp
cmp
xchg
call
pop
jmp
mov
lea
lret
outsl
enter
mov
cmp
icebp
dec
xorl
stos
jb
inc
int
mov
and
addr16
icebp
sbb
jmp
repz
ljmp
loope
insl
inc
push
mov
or
es
sbb
sbb
pushf
jae
push
leavew
push
mov
or
dec
je
call
jae
ret
clc
jg
dec
je
and
adc
adc
jb
imulb
add
mov
es
clc
add
stc
mov
add
cmp
shl
rolb
negb
xor
dec
in
cmp
mov
or
mov
popa
dec
cmp
ret
pop
pop
sub
jo
sar
add
popf
jne
hlt
jle
jge
leave
inc
les
daa
pushf
cmp
addb
lock
xor
xor
cmp
sub
cltd
mov
dec
adc
das
push
insl
push
push
sbb
cli
xor
loope
lods
fisubrl
arpl
aam
in
int
mov
dec
inc
enter
xlat
xchg
lea
cmp
shlb
movsl
adc
sub
cmp
ja
sbb
test
jbe
sub
pop
pop
daa
inc
cld
or
add
xor
sbb
cmp
imul
adc
cmp
jge
lret
sbb
adc
or
out
outsl
push
pop
or
push
aas
mov
jbe
js
sbb
cmp
pop
dec
pop
nop
lock
sbb
jle
nop
xchg
cmp
mov
or
sub
pop
nop
mov
xor
ret
pop
addr16
lret
lahf
mov
sub
mov
adc
mov
cmc
daa
jno
lds
cld
dec
sub
lods
and
outsl
cltd
popa
dec
incb
dec
enter
pop
xchg
pop
inc
mov
and
test
sub
cltd
push
sub
dec
aam
cmp
inc
in
out
or
inc
aas
mov
lcall
or
mov
fdivs
or
inc
add
mov
fldl
outsl
leave
aaa
lahf
lret
adc
inc
sub
xchg
mov
inc
dec
arpl
mov
movsb
shll
cld
bound
lds
cs
mov
xchg
jb
inc
cmp
ss
mov
xlat
mov
shlb
sbb
ljmp
arpl
jb
ss
loope
stos
jp
mov
mov
ljmp
roll
jbe
lret
sub
loope
ja
xchg
in
adc
js
lds
xchg
cmovle
es
cltd
or
xchg
imul
or
push
mov
dec
cmp
sub
in
sbb
movsb
mov
dec
cmp
iret
int
push
and
mov
push
mov
pop
xor
mov
and
jae
xchg
fisubl
or
out
mov
je
call
mov
fists
xchg
sbb
test
ljmp
adc
test
jle
sub
rcr
xor
cmp
bound
push
cmp
mov
addr16
and
push
add
nop
dec
pop
mov
test
ja
xchg
push
sub
jge
cmp
xchg
or
lret
sti
xchg
jle
mov
rcll
std
xlat
stos
call
xchg
sbb
and
ljmp
cwtl
cs
fistps
insb
adc
inc
lret
arpl
aas
cmp
push
sti
popa
das
sbb
lret
loopne
pop
out
inc
ret
js
leave
int3
pop
je
add
lret
inc
xchg
mov
push
xor
mov
js
cmc
add
je
repnz
xchg
movsl
jne
cmpsl
adc
in
mov
sub
js
mov
add
sub
stc
push
pop
jne
out
aaa
push
repnz
and
mov
out
cmp
jb
lock
hlt
push
inc
jecxz
shrb
jns
leave
ret
xchg
enter
add
sbb
mov
inc
xchg
jp
mov
sub
cli
ss
loopne
stos
mov
in
aas
test
insb
xchg
pop
mov
mov
inc
mov
pop
jmp
mov
jne,pn
push
es
sub
add
jg
clc
sbb
xor
stos
fcmovb
pop
dec
dec
xor
orl
mov
jbe
mov
push
push
sbb
imul
jae
jae
dec
pop
sbb
or
push
out
xchg
or
cmpsl
int
cli
pushf
and
std
icebp
sbb
call
fcomps
icebp
enter
push
mov
arpl
sbb
mov
xchg
inc
orb
mov
mov
enter
sub
mov
dec
lods
nop
push
daa
ficoml
icebp
inc
or
and
and
jb
ret
jnp
icebp
sub
inc
jg
mov
xor
mov
repnz
sub
add
outsb
pop
adc
aaa
xchg
out
cmp
push
mov
jbe
inc
jae
pop
aam
sub
fisttpll
lcall
aaa
mov
das
and
adc
mov
packssdw
out
repnz
jbe
mov
lods
xor
lea
add
loope
mov
mov
sbb
xor
xor
mov
ffreep
aas
fiadds
iret
jg
mov
jo
mov
aas
out
ret
out
sbb
push
fistpl
aad
call
lcall
repnz
mov
push
scas
xor
repz
fsubrl
xchg
loopne
pop
hlt
xlat
imul
lods
push
push
aaa
loope
in
lahf
pusha
loope
cld
ja
cs
pusha
arpl
push
testl
jecxz
insb
movsb
out
adc
aam
shrb
sarl
xchg
stos
leave
pop
sbb
pusha
push
cmp
xor
add
and
adc
pushf
cmp
jmp
std
inc
test
xchg
aad
push
lret
outsl
pop
sub
adc
push
in
mov
sarb
push
fmull
clc
adc
repz
int
mov
mov
push
push
stos
test
sub
and
in
shll
jecxz
sub
mov
iret
mov
cpuid
xchg
xor
cmp
fiadds
dec
or
xchg
jg
fs
xor
push
push
loope
push
les
mov
adc
mov
inc
mov
iret
sub
int3
fcomip
out
xchg
stos
movsb
or
ljmp
stos
divb
out
inc
push
sub
sub
ja
push
dec
sbb
test
loop
mov
sub
fwait
sub
scas
sub
es
outsl
hlt
dec
xor
mov
nop
inc
or
sub
and
cld
cmp
pop
xchg
xor
rol
mulb
cmp
lds
and
mov
loope
dec
cmc
fimuls
pop
push
cld
mov
cmc
lret
and
mov
cmp
enter
push
and
sub
xor
push
mov
push
in
sub
cli
lock
xor
bndldx
les
jmp
push
fistpl
rcrb
mov
adc
and
jmp
inc
sahf
xor
push
shll
cli
aas
or
dec
sub
sahf
mov
dec
cwtl
mov
adc
jo
mov
sub
lock
inc
and
arpl
cmc
jmp
gs
movl
cmpsl
jae
dec
sub
shlb
enter
les
mov
pusha
xor
inc
adc
ja
icebp
addr16
pushf
hlt
lret
adc
in
daa
push
fs
lods
hlt
jne
leave
test
mov
and
add
adc
xor
adc
push
jns
cmp
push
stos
cld
dec
pop
iret
pop
push
xchg
xor
out
test
fs
xchg
arpl
repz
out
jl
add
int
xchg
fldl
outsb
bound
mov
xor
fwait
outsl
test
pop
cmpsl
idivl
outsb
inc
xchg
mov
jg
dec
adc
inc
push
divl
jo
pop
in
or
scas
sub
in
idiv
xor
fdivs
pop
cmpsl
adc
mov
jmp
mov
lcall
and
push
jmp
addr16
inc
dec
inc
pop
mov
dec
lock
mov
mov
fisttpl
gs
je
popa
dec
popf
enter
sbb
push
dec
rol
pop
mov
xlat
loope
push
jle
jmp
flds
sub
and
lods
adc
insb
push
add
rorl
in
push
adc
pop
addr16
pop
xlat
mov
inc
xor
out
pop
shlb
mov
mov
pop
cmp
into
mov
adc
mov
cmp
inc
cmp
cmp
pop
xor
cmp
sub
jg
out
scas
outsl
cmp
or
add
std
jle
pop
mov
addr16
shrl
bound
jge
cli
fisttpl
stos
mov
sbb
adc
sbb
pop
out
ret
jmp
sbb
or
push
mov
fld
jmp
gs
rcrl
ret
sbb
out
fucom
pop
rcrb
aaa
fxch
xor
and
rcrl
cmp
push
add
dec
cltd
push
aas
sbb
iret
ret
jb
push
sti
cmp
cmp
mov
andb
rorb
push
mov
mov
push
xor
push
push
sti
pop
je,pt
gs
pop
out
cmpsb
out
dec
or
mov
xor
mov
data16
dec
ror
cld
jb
mov
push
dec
sub
test
out
inc
jbe
sub
add
or
ja
pop
orb
out
jbe
add
aaa
out
xchg
push
pusha
push
es
or
in
add
call
mov
test
jo
adc
sbb
cmp
popa
std
in
clc
xchg
xor
div
scas
mov
cmpsl
cs
shl
sbb
ret
inc
lds
push
and
test
sub
push
push
push
out
adc
std
fs
in
jg
mov
test
call
loopne
mov
loop
daa
mov
out
or
repz
xor
negb
pop
mov
jecxz
stos
cmpsb
add
test
sub
test
inc
push
enter
divl
loopne
xor
adc
and
sbbb
test
xchg
cmc
iret
in
rorl
cltd
test
mov
sar
int3
push
cli
cmp
mov
imul
jo
and
pushf
mov
fsubs
dec
rorl
add
dec
xchg
pop
fnstenv
cmc
add
xor
sarb
add
shll
ret
inc
jge
out
pop
daa
sub
shll
adc
std
adc
sub
push
int3
scas
jno
mov
add
insl
mov
roll
imul
adc
aaa
shlb
mov
lods
dec
mov
xchg
in
lahf
and
flds
push
jge
test
pop
insb
and
aam
mov
mov
fcmovnbe
jne
or
cmp
addl
mov
fsubrs
cld
rcl
out
pop
xor
mov
dec
imul
in
icebp
xor
and
repz
imull
inc
sub
ljmp
call
dec
jnp
inc
mov
aaa
mov
lock
jge
mov
pop
in
push
scas
outsl
daa
loopne
push
jo
and
fidivrs
or
cld
sahf
fisubl
flds
div
mov
je
jl
std
pushf
sub
repnz
outsb
mov
push
xor
ficomps
aam
sub
repz
add
sbb
dec
icebp
sub
cs
push
out
fwait
lret
inc
mov
lods
adc
jle
fdiv
shr
out
mov
stc
daa
in
repz
add
mov
cmpl
jo
lea
push
dec
sbb
sub
push
stos
add
or
dec
inc
loope
rcll
adc
daa
out
daa
jecxz
xor
sub
inc
push
pop
sub
movl
repnz
add
jge
cli
aam
jl
aas
pop
and
ss
mov
jbe
mov
pop
ja
add
cmp
sub
outsb
lahf
lret
dec
hlt
xor
xchg
lcall
mov
mov
inc
sub
adc
jbe
out
das
cwtl
les
dec
aaa
sbb
inc
scas
or
jg
in
sbb
sbb
or
sub
out
out
mov
hlt
add
mov
push
test
pop
xor
mov
adc
xorb
mov
adc
outsl
sbbl
mov
pop
hlt
mov
xor
mov
dec
js
insl
pop
stos
fstpl
dec
imul
scas
stos
and
fcoms
or
pop
stos
mov
sbb
or
hlt
dec
xorl
inc
sub
pop
jno
pushf
jp
stos
mov
inc
das
ds
mov
insb
cltd
outsl
fistl
mov
jl
scas
fcomps
aam
adc
pop
and
addb
jae
jp
movsb
pop
popa
fisttpll
adc
je
dec
shlb
shr
stc
mov
sbb
aad
cld
call
mov
jne
outsl
test
jge
bound
cltd
cmc
loopw
loope
cmp
pop
pop
lret
cltd
sbb
mov
mov
jns
xchg
mov
xor
jo
xchg
hlt
sti
gs
mov
mov
jp
and
mov
andl
sbb
push
loope
div
test
add
cltd
xchg
loope
push
sub
call
insl
addr16
push
xor
xor
rolb
lds
scas
mov
cmp
inc
mov
in
enter
add
std
in
outsb
jbe
mov
mov
push
and
add
arpl
stos
xor
or
icebp
out
mov
into
fs
das
ret
fbstp
xlat
data16
iret
jmp
into
lcall
enter
sbb
stos
mov
stos
data16
sti
insl
sub
lahf
jle
sub
mov
popa
lock
not
pushf
cmp
lret
mov
adc
cltd
addr16
int3
stos
jecxz
xor
pop
mov
mov
ljmp
addr16
stos
inc
mov
push
fucom
and
test
pushf
mov
cmp
dec
pop
jne
in
imull
mov
fisubrs
mov
mov
outsl
stos
adc
jb
xorl
outsl
negl
sbb
inc
cld
mov
xchg
aas
in
cmp
ss
subb
xchg
data16
mov
push
and
cmp
jle
iret
xchg
sbb
inc
pop
pushf
std
pop
divl
sbb
mov
mov
xchg
imul
xor
repz
mov
fs
test
sbb
mov
outsl
mov
inc
lods
mov
add
push
mov
jne
mov
int3
mov
in
loopne
push
add
mov
push
mov
and
roll
lcall
sub
jmp
jbe
inc
inc
sbb
shlb
mov
xor
orl
hlt
jne
cmp
clc
stos
loope
jge
add
xchg
sarl
iret
bound
inc
lods
stos
dec
inc
inc
mov
sub
xor
mov
mov
fadd
mov
enter
push
imul
xor
shlb
sahf
out
jle
scas
jge
sub
dec
add
enter
mov
adc
cs
sub
adc
aaa
pop
mov
in
sub
test
push
les
mov
xchg
iret
push
xor
stos
xchg
rcrb
inc
cmp
mov
imul
fucomi
scas
xchg
push
ljmp
pushf
loope
mov
out
cmpsl
mov
addr16
divl
cltd
jge
push
xchg
out
mov
insb
cmp
out
push
icebp
leave
pmaddwd
mov
sbb
cwtl
sub
push
ds
inc
push
popf
unpcklps
mov
lock
jmp
xchg
jb
xor
cmc
mov
xchg
int3
push
mov
jae
add
test
fisttpll
fiaddl
pushf
cmc
mov
inc
arpl
xchg
stos
fcomps
inc
in
jb
dec
fwait
addr16
fdivrs
or
adc
mov
mov
jg
insl
mov
jns
stc
ja
xor
orb
fistl
pop
shl
add
sub
jne
xchg
adc
dec
scas
mov
or
xor
xchg
or
lea
pop
pusha
adc
loop
cli
int3
mov
and
pushf
dec
push
xchg
sbb
cmp
pop
stos
or
push
icebp
sti
fdivs
pop
jecxz
rcrl
scas
xlat
mov
ja
xchg
jbe
sbb
faddl
jno
jge
pop
leave
or
xor
lds
sahf
je
adc
jl
xchg
lret
add
and
mov
cmc
bound
push
imul
push
into
and
pop
mov
out
popa
movsb
push
in
clc
repz
and
dec
mov
ret
js
xchg
xchg
sti
outsb
inc
imul
xor
mov
cmpsl
adc
jle
add
push
divb
xchg
pop
or
add
fyl2xp1
mov
mov
mov
and
mov
push
mov
lcall
jae
shlb
lods
movsb
push
add
inc
mov
loopne
and
sub
pop
jle
xor
in
push
xchg
in
fwait
outsb
loopne
dec
fwait
adc
ret
or
mov
mov
sahf
dec
xchg
fcoms
inc
nop
xor
fldcw
add
shr
cmp
insb
pop
mov
sbb
xchg
sbb
mov
icebp
xchg
or
test
out
sub
je
mov
ja
or
out
repz
xor
sar
subb
shlb
push
adc
in
inc
mov
fdivrl
call
nop
scas
adc
push
sbb
into
pop
xor
cmove
pop
das
icebp
in
mov
mov
outsb
adc
rolb
cmpsb
out
mov
adc
into
sub
xor
inc
xchg
js
inc
loope
je
jl
jle
cmc
jo
push
andl
cwtl
cs
xchg
jne
jnp
lds
scas
sarb
stos
fsubrs
iret
adc
rcll
lret
bndldx
jge
js
cmp
xlat
sub
in
call
cwtl
ds
sbb
ss
lret
pop
add
outsb
mov
fsubr
push
pop
nop
lahf
hlt
adc
xchg
pop
test
push
inc
dec
or
lods
pop
inc
test
movlps
mov
mov
add
popf
mov
and
imul
mov
int3
jne
lea
cmp
sbb
add
ret
fisttpll
loope
and
sub
fldl
dec
mov
in
mov
test
icebp
movsl
sbb
inc
pop
mov
hlt
insb
dec
lods
stos
repz
in
xor
sbb
enter
in
dec
mov
cmpsl
xor
pop
adc
sbb
orl
scas
fnstsw
inc
xchg
es
adcb
pop
pop
repnz
add
sub
rcr
or
std
aad
xchg
pop
jecxz
fidivrs
lahf
lcall
fnstcw
mov
push
icebp
gs
mov
int3
out
or
gs
jp
sbb
mull
mov
inc
push
xor
out
pop
aaa
jle
test
inc
shl
rcr
cmpsb
add
push
push
ficoml
nop
xchg
jp
jg
daa
repnz
loope
into
ss
rcrb
adc
inc
ret
adc
imul
in
cs
out
xorb
push
jno
mov
add
fbld
out
push
mov
jnp
aad
cmp
xchg
cs
jg
xor
sahf
add
fldz
fsts
loope
sbb
sbb
out
jno
cmp
sub
mov
leave
loopne
fcoml
mov
sarl
mov
adc
leave
and
lods
sahf
pop
jns
out
dec
xchg
stos
clc
lock
dec
lea
sbb
test
inc
mov
rol
into
mov
adc
fwait
andl
mov
popa
in
xchg
lret
adcb
inc
cmp
push
mov
int
ljmp
sti
jns
movsb
jge
xor
push
mov
shr
insl
dec
jb
inc
jecxz
xlat
cmp
push
sub
call
test
pop
aaa
sahf
std
test
das
lea
rcll
xchg
lods
inc
cltd
hlt
js
or
jl
lods
jp
shr
jmp
mov
pop
in
adc
rcl
adc
in
pusha
mov
das
cwtl
test
dec
jno
jmp
mov
aaa
dec
mov
cmpsl
jmp
mov
push
add
in
mov
push
inc
mov
adc
cltd
push
jns
out
inc
or
rcr
or
loopne
cs
sbb
push
imul
hlt
lcall
repnz
dec
fisubs
xchg
pop
pop
and
les
add
and
outsb
test
jbe
jp
hlt
movsl
fsubs
rcrb
push
add
stos
mov
or
pop
dec
outsl
and
xchg
iret
iret
and
sub
xor
mov
loop
lds
or
jecxz
sub
add
or
push
add
cmpsl
sbb
fsub
ss
mov
ss
ret
mov
cmp
xor
fistps
or
push
pop
imul
dec
and
xor
or
add
mov
insl
roll
inc
outsb
dec
fs
dec
fcmovnb
push
aas
xor
lods
mov
mov
shrb
xor
mov
mov
out
dec
in
fldt
sbb
push
jle
pop
mov
jmp
push
mov
loope
repnz
xchg
in
mov
arpl
dec
test
fld1
idivl
dec
and
xchg
insb
cmp
rcll
sub
loop
and
or
push
push
add
sbb
mov
shrl
mov
pop
sub
pop
cmp
in
ss
cmpb
cmp
jb
push
fs
leave
xchg
cld
data16
das
xchg
gs
pop
xor
fiadds
or
ficomps
scas
mov
call
inc
or
dec
sbb
push
outsl
test
pushf
mov
jnp
xor
inc
sbb
faddl
sbb
xchg
jbe
addr16
out
xor
dec
inc
popa
imul
mov
xor
lahf
add
mov
movsl
mov
cmpsl
loopne
lock
sub
jmp
cmpsl
fimull
ss
and
add
clc
movsb
xchg
sub
wbinvd
aas
dec
adc
push
les
outsl
adc
gs
cwtl
rcll
or
in
pop
mov
ss
iret
mov
lret
mulb
jo
ds
mov
or
adc
mov
jle
scas
sbb
mov
jo
lcall
mov
gs
push
jecxz
or
and
lds
or
jne
cmp
mov
cwtl
lahf
repnz
or
mov
add
imul
imul
dec
inc
outsl
fs
ret
push
mov
ret
lret
xor
cltd
inc
into
ljmp
cmp
push
loopne
or
mov
lret
inc
aam
inc
pop
jns
popa
xchg
std
push
lea
add
jle
notb
mov
cmp
cmc
lods
pop
sbb
jnp
inc
add
push
lods
repz
and
in
pop
sahf
mov
mov
cmpsb
push
loope
sub
jge
imul
and
and
mov
add
pop
and
cli
mov
mov
dec
lahf
cltd
xor
xor
cmp
push
fldcw
mov
mov
mov
push
jmp
rcll
ret
gs
xchg
fcomps
lea
movsl
clc
mov
ret
outsl
push
cmp
dec
or
mov
nop
loopne
jmp
ficomps
mov
xchg
cwtl
roll
sahf
out
and
mov
sub
push
and
fnstcw
pusha
pop
jmp
fimuls
cmp
bound
dec
dec
jb
xchg
mov
test
mov
movsl
orb
adc
sarb
inc
mov
mov
pop
cmpsb
scas
fidivs
mov
adc
clc
sbb
add
or
fildll
jb
adc
fwait
xchg
xchg
or
mov
dec
daa
outsb
jge
sbb
and
inc
jns
mov
push
xchg
inc
xchg
xor
rorb
push
push
jle
je
out
mov
lret
dec
aaa
subb
or
jae
out
in
test
xor
pop
pusha
call
mov
movsl
insb
int
fstl
pop
mov
inc
outsb
push
push
xlat
or
lds
pop
inc
test
mov
int3
cltd
shl
adcb
subl
ss
std
jg
fisubrl
in
testb
jmp
jbe
addb
mov
rol
cmp
xchg
sub
clc
movsl
xor
xor
lcall
sbb
pusha
inc
les
xchg
stos
sbb
pop
push
repnz
lcall
jnp
in
out
test
inc
inc
pop
das
and
mov
ds
cmp
ds
adc
jmp
mov
loopne
push
xchg
in
or
ss
pusha
lea
out
xor
out
aaa
movsb
sub
mov
pop
dec
sub
enter
push
xor
in
push
fadds
push
and
jno
pop
pop
mov
das
fldenv
xchg
test
mov
les
sti
mov
sbb
rcrl
fs
or
adc
jl
adc
lret
add
jp
sti
loope
ret
sbb
dec
jnp
jp
adc
incl
cltd
mov
mov
sbb
xorl
mov
mov
daa
xchg
dec
int3
loopne
iret
imul
dec
xchg
dec
test
and
in
mov
pop
mov
aam
xchg
xor
dec
pop
xor
jmp
js
cld
sbb
inc
adc
aas
stos
pop
inc
movsb
shr
sbb
lds
mov
mov
push
cmp
out
jl
cld
out
push
stos
subb
mov
lods
mov
ror
inc
stc
mov
bswap
std
dec
stos
or
mov
outsb
pop
inc
lock
fldt
lret
lret
mov
sahf
jle
hlt
int
nop
movsl
icebp
add
inc
sbb
add
sbb
xor
test
pop
adc
and
xchg
adc
pop
call
hlt
fs
push
inc
shrl
sub
bound
call
sub
stos
mov
xchg
rorl
pop
gs
add
loopne,pn
adc
mov
data16
jmp
in
in
mov
test
das
xchg
jb
adc
sbb
xor
sahf
in
inc
sbbl
rclb
adc
sbb
daa
mov
es
or
ds
xchg
push
xor
add
cmp
cmp
clc
mov
insl
movsb
testl
shl
mov
ja
scas
mov
add
jle
sub
shl
xchg
pand
mov
int3
push
imul
and
cmp
fmuls
pop
loope
jb
repz
hlt
xlat
sub
inc
push
cmp
adc
add
insb
das
loope
call
mov
xchg
push
inc
mov
adc
mov
test
inc
stc
sbb
jp
in
push
into
push
movsl
mov
movsb
movb
js
xlat
popa
cmp
mov
shll
adc
fists
cli
pop
mov
aas
adc
add
push
fistpll
call
aad
lret
lds
lret
hlt
repz
ljmp
push
mov
pop
cmpsb
xchg
and
ficompl
es
mov
mov
pop
stos
in
adc
add
flds
jle
xor
adc
and
ss
mov
mov
jle
int3
js
aam
dec
jb
insl
aad
mov
mov
fwait
aaa
adc
push
fstl
or
and
enter
gs
addr16
adc
ss
add
fadds
inc
lods
mov
xchg
mov
test
sti
and
ret
cmp
mov
push
pop
or
mov
add
push
dec
cli
nop
xor
cmpsl
insb
mov
sbbl
scas
in
cs
sub
mov
mov
xchg
dec
lock
sbbl
stc
lret
xchg
mov
jp
cmp
rorl
push
sub
lock
sbb
or
cmp
xchg
or
jmp
push
and
fld
mov
lcall
push
ret
xchg
mov
or
cmp
fwait
pop
in
aas
cmp
inc
nop
leave
inc
mov
jae
pushf
mov
mov
pop
pop
inc
inc
jnp
imul
test
enter
mov
aad
outsl
cmpsl
xchg
dec
push
push
les
sub
fdivl
rclb
test
aam
popa
xor
pop
sbb
mov
cwtl
das
push
into
mov
fnstsw
push
dec
adc
adc
jnp
mov
add
lods
iret
repnz
fcmovb
and
jbe
pop
mov
in
fwait
mov
cmp
clc
cmp
in
push
adc
pop
xor
sbb
stos
or
xchg
sarl
jns
xchg
jb
mov
jg
in
pop
lds
or
bound
jp
fisttpll
cmp
dec
scas
je
sbb
fwait
stos
mov
lds
jns
test
push
repnz
pop
sub
fwait
into
aaa
add
ficoml
add
mov
and
xchg
in
mov
xor
call
jmp
rol
mov
jge
push
add
sbb
sti
dec
dec
mov
lret
dec
scas
nop
sub
xchg
jb
mov
sahf
and
xchg
ret
mov
aam
cmpsl
dec
icebp
movzwl
xor
dec
std
dec
popa
sub
mov
pusha
negb
xchg
pop
push
out
stc
xor
es
xchg
lods
and
sub
push
dec
mov
mov
js
andb
into
push
daa
movsl
ret
clc
shl
out
shl
ds
push
imul
push
cmp
xchg
or
test
and
jecxz
jo
mov
data16
sbb
int3
pop
push
outsb
cmp
pop
adc
int
sub
outsb
or
push
arpl
push
test
cli
dec
sbb
sbb
jne
mov
mov
out
pop
inc
mov
jo
adc
push
pop
stc
stos
filds
push
mov
mov
or
push
push
sub
pop
sti
push
sub
imul
out
es
fwait
sti
lods
int
xor
call
mov
je
mov
cmpsl
adc
je
faddl
pop
xchg
sahf
insl
inc
and
shlb
sub
scas
xchg
mov
cmp
je
test
jge
add
xchg
enter
or
dec
popf
ss
movsb
sub
add
scas
repnz
test
push
dec
and
mov
les
push
push
repz
or
pop
in
dec
fistps
jne
push
in
adc
pushf
dec
push
or
inc
mov
mov
inc
stc
adc
lret
cltd
loopne
stos
sbb
inc
and
mov
push
push
in
and
pop
add
pop
push
sbb
adc
ret
mov
std
lcall
je
cmp
xor
mov
addl
sub
mov
std
lds
adc
jmp
xor
inc
inc
sub
sbb
inc
and
jg
or
add
repz
xor
or
mov
or
xchg
or
test
sbb
adc
cmovne
inc
and
test
push
les
jmp
sbb
lcall
sti
ret
sarb
stos
hlt
or
jg
push
push
fistpl
outsl
test
repz
dec
pop
data16
sar
jecxz
mov
mov
inc
mov
xchg
imul
repz
pusha
loopne
mov
push
pop
lea
movsb
push
cmpsb
xchg
fcmove
je
sbb
xchg
mov
xchg
out
in
cwtl
sub
mov
xchg
popf
jae
aas
jno
ljmp
jo
rcrb
cmp
orl
pop
out
sub
xchg
dec
adc
xor
repz
clc
sbb
sbb
jne
mov
jge
popf
push
pop
xlat
popf
push
sarl
cld
stos
adc
faddp
xchg
or
es
xor
rcrl
and
dec
and
pop
mov
and
icebp
lock
fcompl
insl
jmp
ror
dec
cld
mov
popf
loop
rcr
mov
and
mov
sbb
aam
test
jmp
and
adc
push
jnp
fs
das
pop
jmp
les
repz
imul
mov
data16
xor
sub
xchg
aas
push
add
ret
addr16
inc
and
xchg
add
mov
and
mov
orb
dec
push
fists
cli
testl
ljmp
sub
inc
out
or
push
ja
jb
or
fdiv
in
or
cld
aaa
rorl
int
pop
xor
inc
xor
les
lret
mov
in
cld
mov
pop
clc
dec
cmp
ljmp
aad
out
or
xor
nop
fsubrs
push
enter
add
rorl
negl
inc
insb
mov
hlt
cmpsl
cmp
outsl
insl
xchg
loopne
in
xlat
pop
xor
mov
jg
or
pop
or
cwtl
inc
rcrb
mov
pop
pop
scas
daa
mov
addr16
add
loopne
in
stc
sub
adc
iret
subb
adc
mov
rcrl
ret
pop
xor
add
push
mov
jmp
inc
data16
into
bound
loop
or
sbb
pop
push
ss
and
pop
dec
sub
adc
daa
aam
sbb
pop
leave
sbb
jge
dec
nop
push
out
pushf
dec
movsl
mov
sub
scas
push
cmp
pop
sbb
movsl
rolb
js
nop
sti
popf
in
shll
rorb
push
and
xor
icebp
loopne
mov
or
mov
sub
rolb
sbb
test
aaa
movsb
fistl
subb
addr16
arpl
mov
cmp
xchg
lret
add
orl
mov
cmp
cmp
and
outsb
daa
xchg
or
ret
rclb
iret
add
push
jg
outsb
pop
data16
stc
jecxz
mov
aas
inc
adc
or
imul
call
add
je
jl
es
dec
cmpsb
jbe
popf
and
repnz
outsb
xor
out
mov
pushf
sar
pop
popa
mov
leave
jb
jnp
mov
xor
fsubl
pushf
inc
dec
add
rol
stos
push
adc
jae
inc
fstpt
sub
cmc
push
popl
add
xchg
daa
sti
stc
dec
xor
shlb
fimuls
xor
adc
pop
ret
xor
pop
adc
lods
adc
pop
into
jg
sahf
and
xorb
out
je
loop
jnp
xor
cmp
mov
jno
scas
dec
fistpl
add
sbb
dec
je
icebp
aad
jp
jg
pop
dec
in
es
and
xchg
inc
roll
hlt
lret
sub
rcrl
pop
stc
add
ss
ret
xor
adc
push
and
jb
outsb
nop
pop
push
and
cmpsl
aas
jb
loope
push
mov
push
mov
out
fistpll
xchg
push
sub
cltd
mov
mov
movsl
push
in
cmp
roll
mov
repz
ret
push
dec
and
mov
movsl
ds
paddsw
outsb
scas
mov
scas
into
or
test
les
mov
mov
lods
xchg
int3
outsb
test
arpl
clc
test
std
repz
push
adc
dec
sbb
mov
push
popa
das
add
stos
dec
or
mov
mov
and
xor
pop
decl
mov
sbb
bound
rclb
out
xor
out
dec
pop
sbb
movsl
subb
push
pushf
out
jecxz
push
in
movsb
test
outsb
out
call
test
sti
cmp
insl
xchg
and
pop
or
mov
jne
dec
and
adc
inc
xchg
xor
sub
pop
sbb
arpl
fstps
add
testb
jl
loope
push
out
pop
add
jmp
ss
xchg
rorl
das
inc
mov
pop
push
xchg
or
mov
aam
out
lds
inc
je
dec
add
lahf
adc
add
or
push
ljmp
movsl
fbstp
roll
and
enter
ljmp
nop
xor
adc
push
sub
sub
lods
adc
and
dec
pop
push
fmull
push
leave
icebp
or
int3
xor
rorl
pop
sbb
fnstcw
cmp
fidivrl
sbb
pushf
lret
push
cmp
stos
test
stos
std
xor
push
add
push
inc
aam
jge
inc
ret
xchg
out
movsl
xor
or
mov
jae
sub
in
or
jmp
mov
daa
sub
mov
push
cs
mov
stos
mov
push
jb
jle
mov
mov
cmp
jmp
xlat
inc
gs
fists
into
nop
adc
sub
push
out
insl
or
stos
mov
aam
mov
xchg
lods
cmpsl
pop
aad
out
lret
pop
dec
es
stos
push
or
repnz
xchg
xor
dec
cmp
cmp
sbb
xor
data16
imul
in
mov
and
xchg
sbb
sub
sti
sub
jae
xor
in
mov
push
pop
jmp
dec
es
ficoml
movsb
mov
sbb
pop
arpl
bound
add
pop
dec
mov
cmp
jb
mov
insb
push
mov
ds
and
dec
out
mov
lret
cmp
lahf
push
fldl
pusha
cli
sbb
xchg
mov
movsl
dec
call
shlb
lock
mov
pop
push
repnz
pop
mov
pop
enter
sarl
mov
add
mov
fnstenv
lods
fldenv
ret
jle
dec
in
push
mov
xchg
shr
sbb
cmp
cmc
shlb
pop
mov
fstp
add
xor
mov
sbb
mov
popa
rcrb
mov
stc
add
clc
dec
push
xchg
aam
mov
inc
cmpl
jbe
ficompl
mov
cmp
push
scas
push
xchg
or
xchg
hlt
xchg
add
mov
mov
test
cld
sbbb
lea
pop
in
push
mov
in
fcoml
cmc
stos
jle
xor
fdivrl
ret
or
jl
cltd
pusha
mov
xchg
test
or
cmp
dec
push
jno
cmpsl
inc
push
jo,pt
push
push
das
sbb
xor
fdivrp
mov
jle
lret
arpl
xor
push
jnp
fs
daa
add
mov
inc
mov
imul
jae
jnp
ljmp
das
cmp
xor
pushf
xor
pop
daa
xchg
push
outsb
add
call
xlat
inc
shrb
adc
dec
data16
mov
mov
sub
insb
lahf
sbb
ljmp
out
jo
ret
pop
hlt
jne
xchg
arpl
popf
cmp
aam
test
lock
push
lret
jge
cmc
mov
sbb
data16
xor
gs
cmp
negl
loopne
xor
std
stos
sub
outsb
inc
pop
jecxz
pusha
repnz
cs
mov
adc
lock
repz
adc
cwtl
push
jae
lds
fcmove
out
mov
push
jne
mov
sbb
jp
xchg
fimuls
jmp
xchg
out
aam
dec
adc
cli
test
outsb
jb
call
inc
jle
in
std
and
and
stos
pop
sub
lcall
repz
cmp
addr16
pop
xlat
sbb
adc
push
mov
pushf
mov
inc
dec
in
notb
pop
movsl
sbb
imul
mov
add
nop
push
ss
neg
cld
inc
sub
mov
push
sub
dec
mov
xchg
nop
mov
push
enter
sbb
and
imul
mov
sbb
loope
push
xchg
xchg
dec
xorl
inc
movsb
jb
pop
and
add
gs
mov
adc
push
sub
setbe
jmp
or
pop
cwtl
lea
sub
fsubrs
movsl
test
test
aam
pop
add
sbb
shrb
or
adc
std
and
stc
clc
pop
or
jmp
sbb
cmp
mov
add
adc
xchg
call
pop
pop
insb
mov
mov
pop
pop
xor
mov
mov
ss
sub
xchg
and
mov
mov
and
test
imul
jbe
loopne
xor
lret
cmpb
adc
data16
xor
das
jb
jmp
stos
jns
pop
aad
orl
insl
adc
xchg
adc
jbe
adc
lods
mov
jns
fnsave
or
enter
cs
loop
adc
jle
lods
daa
sbb
ret
lea
scas
jg
cli
decb
and
sti
push
rcrl
cli
cli
hlt
inc
dec
or
jb
bound
xor
xlat
lahf
push
fwait
mov
pop
rcr
jecxz
xchg
cmp
cmpsb
pop
pop
pop
push
popa
inc
pop
push
pushf
push
fstl
sub
ljmp
loop
cmp
repz
xchg
das
xchg
push
xchg
jae
adc
add
pop
lds
jp
call
add
lea
push
mov
stos
jge
sahf
inc
test
mov
mov
fwait
cs
pop
insl
jmp
js
mov
clc
iret
cmpsb
mov
fimuls
movsl
xor
jmp
lds
cmpb
cmp
cmp
pop
cmp
cmp
mov
and
movsb
scas
and
xchg
std
movsl
jl
lea
push
mov
scas
in
adc
fnstsw
sub
mov
xchg
cltd
mov
sbb
bound
gs
mov
pop
aad
adc
mov
int
out
push
test
cmp
or
jecxz
jmp
int3
sbb
imul
jge
add
repz
add
push
jecxz
imul
sbb
sub
dec
inc
mov
jmp
or
xor
loopne
push
lea
mov
arpl
sbb
mov
lds
xchg
push
shlb
jne
mov
fcompl
addr16
mov
out
jno
rorb
and
lock
mov
dec
int3
sbb
xor
pusha
rclb
mulb
pop
push
xchg
scas
xor
cmp
rcll
ss
cwtl
imul
je
mov
mov
lret
jecxz
sub
mov
fsubrs
mov
mov
ds
dec
leave
push
imul
dec
sbb
insl
cmpsb
add
call
pop
outsl
cli
pop
push
cmp
mov
inc
mov
xor
icebp
push
test
out
out
sub
leave
and
nop
mov
mov
mov
inc
popf
sub
fwait
mov
or
sbb
mov
pop
mov
mov
mov
add
sbb
outsb
hlt
loop
nop
fisttpll
jmp
hlt
and
out
test
push
mov
mov
enter
divl
cmp
addr16
movsb
mov
mov
sbb
add
pushf
fistl
adc
push
insb
leave
das
mov
sub
jo
in
clc
sub
push
pop
outsb
mov
jp
cmp
pop
jge
jp
fidivs
adc
rclb
test
jle
and
push
ja
adc
lock
mov
addr16
add
sarb
xchg
test
sbb
imul
fsubp
and
add
sbb
loopne
xchg
stos
inc
inc
rorl
repnz
jae
mov
mov
lds
sbb
cltd
into
xchg
sub
cltd
mov
daa
mov
xchg
mov
enter
push
cmp
insl
cmp
aam
jo
lahf
or
cmc
lea
fwait
pop
lds
push
clc
lock
js
jmp
loopne
shlb
mov
fdivrl
outsb
xchg
je
add
inc
test
push
xlat
mov
popa
pop
push
sbb
mov
and
xor
out
orps
pushl
sbb
jg
outsb
adcl
divl
mov
mov
adc
xor
movsl
sbb
dec
sub
mov
or
stos
daa
add
and
fwait
jo
sbb
out
stos
insl
dec
clc
adc
mov
ret
sub
adc
or
in
mov
aas
das
loope
push
in
xchg
fistpl
pop
cmp
adc
xchg
movsl
jecxz
clc
pop
clc
fists
shlb
clc
std
mov
jle
inc
cmp
sbb
cwtl
scas
cwtl
push
sub
sbb
mov
add
leave
jecxz
lahf
popa
mov
sbb
xor
in
enter
call
shll
jp
cs
jmp
pop
sub
dec
nop
imul
incl
nop
icebp
pop
xchg
add
sbb
arpl
ja
xchg
xor
lret
jge
cmpsl
mov
adc
jle
pusha
and
inc
ficomps
ljmp
punpcklwd
js
cmp
pusha
loop
mov
lds
xchg
icebp
loop
mov
push
lea
insl
mov
cld
pop
push
jmp
cmp
mov
lret
scas
shl
sub
out
sbbb
insb
hlt
ja
fdivrs
pop
ret
mov
lock
push
or
xor
sbb
push
pop
testb
pushf
aad
pop
cmp
jmp
or
lahf
pop
or
or
jno
ret
mov
stc
nop
mov
and
movsb
inc
sbb
mov
fldenv
outsb
mov
pop
cld
fwait
je
jo
call
xchg
aaa
dec
cmp
dec
sub
outsb
cmova
nop
xchg
mov
mov
addb
adc
sub
rcl
mov
inc
daa
out
fbstp
dec
ja
test
xor
lods
enter
pop
pop
out
mov
jne
and
out
push
adcb
push
loope
test
or
cmpsb
or
pop
lahf
mov
enter
jno
cmp
incl
cwtl
popa
fs
push
int
shlb
fsubl
xchg
and
enter
jo
mov
int
inc
mov
stos
push
lahf
idivl
out
aas
inc
push
stc
push
mov
mov
mov
jp
fildll
icebp
nop
fsubs
icebp
faddp
cmp
clc
fisubrs
out
scas
jmp
jb
movsl
fdivrs
lods
and
adcb
cmp
mov
jecxz
es
jg
loopne
inc
jo
out
adc
into
jae
inc
aad
out
xchg
mov
leave
hlt
push
adc
push
in
xor
and
out
jmp
cmp
mov
out
xor
mov
adc
inc
push
test
sarl
mov
inc
pop
adc
ret
test
test
movsl
push
mov
dec
add
xchg
inc
pop
lock
xor
cmp
inc
dec
xor
daa
scas
das
jecxz
sub
and
aas
pushf
mov
jbe
insb
mov
lods
je
cmpsb
add
xchg
bound
cmpsb
sbb
cmp
dec
inc
cmp
shl
push
out
pop
add
inc
das
lret
or
roll
cmp
and
jle
adc
test
andl
push
mov
mov
scas
into
xor
scas
int3
jmp
ret
and
cmpsb
movsl
frstor
out
jp
ficomps
cmp
dec
mov
int
cmp
push
pusha
pop
lahf
movsb
repz
push
in
lret
jp
xchg
sub
ret
pusha
stos
mov
sbb
lret
scas
xchg
dec
ds
popf
push
adc
adc
cmp
fadds
mov
push
push
arpl
push
push
loop
mov
mov
outsl
popa
out
or
xor
sbb
mov
jecxz
push
lcall
inc
paddd
rcrb
jo
test
cmp
lret
adc
xor
inc
iret
jns
mov
nop
sbb
adc
mov
cwtl
push
jbe
pop
mov
test
xchg
xlat
fs
aaa
sbb
cmp
cmpsl
lahf
rolb
mov
aaa
ret
sub
ficoml
and
data16
lds
pop
mov
ror
call
xchg
jb
sarb
lock
cmc
xchg
push
lods
jns
lcall
hlt
bound
test
fdivr
into
and
and
ja
aas
mov
cmpb
xor
jmp
imul
pop
jne
loope
add
std
call
stos
mov
ds
jb
inc
test
mov
mov
loop
sbb
jle
xchg
adc
mov
ss
sbb
ja
cmp
es
cmp
rol
sbb
hlt
inc
pop
aas
repnz
and
xchg
js
mov
std
push
stos
test
mov
sub
adc
mov
insb
movsl
rcrb
daa
aaa
sub
call
in
adc
movsb
mov
sbb
es
fmull
fstpl
es
pop
cmp
cmp
xor
fadd
or
mov
and
stos
fsubrl
jo
lret
xchg
inc
push
sbb
push
pop
aad
les
push
inc
jns
aad
inc
shll
inc
popf
mov
push
xorl
clc
cmp
push
and
mov
pop
pop
push
adc
fiadds
loopne
add
lret
jnp
pop
sbb
sub
push
sub
mov
jp
stos
cmp
sbb
push
or
mov
mov
cmp
mov
sbb
xchg
shlb
and
loopne
scas
pop
push
jae
adc
push
in
pop
pop
and
aas
xchg
sub
pop
push
shrb
lret
xor
dec
mov
add
adc
inc
dec
popa
mov
cld
insb
xchg
movsb
jo
xchg
hlt
mov
cltd
dec
fldcw
xchg
pop
dec
cld
push
pop
mov
inc
inc
call
mov
jb
in
sarb
sbb
sti
lahf
rcll
scas
dec
daa
jo
adc
sub
jo
je
xchg
sbb
jl
pop
xchg
pop
sahf
rcl
push
mov
sub
icebp
push
push
xor
repz
cmpsb
lcall
repz
cltd
mov
xchg
addr16
shll
sub
inc
ljmp
das
mov
mov
clc
mov
int
pusha
mov
inc
int
cmpsl
jnp
aad
mov
jb
pushf
fisttps
adc
sti
xor
mov
out
int
lea
jne
fcmovnu
mov
xchg
jge
test
pop
nop
xor
orl
push
mov
push
je
fs
push
f2xm1
xchg
dec
xchg
imul
dec
fmuls
fsts
push
loope
rcrw
xor
and
sub
cwtl
push
jno
pop
hlt
frstor
negl
sub
fs
jecxz
mov
adc
out
jecxz
pop
xor
xor
push
fptan
outsb
movsb
vcomiss
push
or
aaa
adc
nop
fs
shl
add
xchg
ja
out
lcall
or
cltd
das
inc
pop
mov
xchg
arpl
in
jl
std
dec
aad
push
cmp
or
mov
adc
out
push
ficoms
fldcw
cltd
dec
adc
push
mov
ret
imul
jge
fadds
shrl
das
xchg
adc
add
clc
pop
inc
test
add
inc
cmp
jp
adc
jne
insb
aad
push
mov
pop
and
shrl
xchg
mov
ljmp
in
es
lret
jp
xchg
mov
mov
bound
rolb
mov
and
je
xchg
inc
jg
insl
mov
shr
jecxz
inc
pop
pop
pop
push
loop
movsb
sti
mov
mov
xor
add
adc
mov
inc
loopne
xor
mov
int3
and
sub
jmp
sub
in
xor
push
xchg
pop
lea
mov
sahf
daa
sub
lock
outsl
adc
and
out
decl
pusha
push
sub
cli
shr
imul
int3
push
cmpsb
aad
cltd
mov
outsl
inc
lods
xor
loopw
and
dec
pop
addr16
iret
ds
jp
mov
lods
mov
xchg
in
sbb
and
data16
insl
fsubl
enter
mov
or
je
ret
int
inc
sub
inc
mov
ror
push
pop
js
add
and
cmp
adc
and
pop
mov
enter
mov
mov
popf
out
fldenv
jge
mov
mov
xchg
les
xor
ret
cmp
cmp
pop
sbb
aas
xorl
and
ljmp
jbe
push
enter
sub
xor
or
iret
mov
fs
adc
fwait
dec
push
int
dec
inc
bound
sub
aad
push
jp
lcall
pop
dec
aad
inc
pop
mov
xor
icebp
cmpsb
cmp
repnz
out
ss
mov
inc
dec
mov
xchg
or
pop
mov
ljmp
jne
out
cwtl
loope
inc
cs
int3
scas
push
fnstenv
stos
arpl
ds
sahf
or
inc
cmp
in
inc
mov
fcmove
xchg
xchg
ret
jle
in
adc
push
add
es
ret
add
and
mov
call
lret
sti
dec
pop
push
mov
gs
out
aaa
pop
test
jg
dec
fldt
pop
aaa
sbb
xchg
mov
and
pop
adc
pop
jmp
cli
xor
inc
mov
mov
xchg
and
decl
imul
popf
push
xor
ss
test
aad
adc
ljmp
cwtl
rcrb
mov
ss
aad
cmp
lock
loope
out
mov
dec
add
movsb
mov
lret
mov
mov
mov
lock
pop
mov
pop
cwtl
add
xor
jl
xor
cwtl
fsubr
pop
and
movntps
test
push
pop
mov
cmpsb
int
imul
lea
dec
dec
xor
or
adc
xchg
iret
iret
pusha
or
les
or
pop
lock
mov
adc
push
int3
stos
ret
arpl
dec
xchg
lea
jae
ss
sub
neg
pusha
shlb
mov
inc
mov
lcall
scas
sub
xchg
in
stos
push
and
aad
dec
repz
popf
mov
adc
fisttpl
push
push
fsubr
out
jo
push
in
or
cmc
push
mov
xchg
cmpsb
and
sub
and
mov
aam
call
ret
lahf
xor
out
dec
les
xchg
sbb
sbb
inc
js
pop
outsb
dec
imulb
dec
or
nop
stos
jl
clc
lahf
ja
imul
movsb
dec
cmp
jg
pop
shl
outsb
sti
push
bound
es
push
pop
dec
rcll
push
jnp
cltd
cmpsl
aas
or
lahf
in
add
out
sub
xchg
not
dec
test
push
jle
mov
imul
les
mov
das
inc
arpl
inc
outsb
imul
jae
fstl
shll
cmp
jle
mov
xchg
push
jno
test
jae
sbb
rol
subb
adc
sbb
pop
jb
pop
sbb
sub
jp
or
push
push
les
inc
lret
lods
push
lock
xor
jns
lds
test
mov
call
mov
cmp
movl
inc
dec
xor
loopne
ret
push
mov
jp
inc
lds
push
sub
jnp
ljmp
ljmp
pop
push
nop
out
dec
inc
insb
scas
jb
sahf
repz
out
push
aam
sbb
adc
adc
xlat
arpl
xchg
xchg
dec
pushf
push
cmp
ljmp
inc
inc
xchg
sbb
das
dec
xchg
repnz
enter
inc
mov
std
mov
hlt
jmp
sub
lret
test
pop
insb
jbe
jge
push
lcall
les
adc
add
cmpsl
adcl
inc
call
cmp
jp
subl
shl
jl
mov
and
call
mov
xchg
cmc
dec
or
rorl
fimuls
test
das
push
imul
daa
das
fwait
bound
pop
sbb
or
mov
sub
clc
xchg
pop
test
in
popa
or
addl
mov
mov
push
xlat
pop
cltd
mov
shrb
mov
orl
loopne
sub
xor
hlt
mov
sbb
push
leave
jo
xorb
push
out
pop
pop
or
pop
pop
push
hlt
inc
vmptrld
jnp
loope
dec
or
orl
jle
test
sub
nop
enter
mov
or
fs
rcrb
les
sahf
js
dec
sbb
inc
pop
fwait
mov
cmp
mov
xor
and
loope
inc
sub
mov
cltd
jmp
and
mov
enter
inc
mov
std
lods
inc
movb
mov
jg
loop
mov
cwtl
mov
add
clc
or
add
sbb
mov
sub
test
adc
movsb
rolb
loop
xchg
push
sub
xchg
mov
dec
xor
push
lock
xor
mov
sbb
leave
xchg
aas
cmpsl
jno
jo
dec
inc
mov
loope
insl
mov
dec
jno
xor
push
mov
arpl
cmp
push
ret
push
xchg
not
loop
push
xchg
or
sub
mov
push
popf
loop
shlb
das
lods
mov
sub
adc
cmp
push
cmp
inc
add
pop
std
imul
cwtl
xor
mov
or
rcrb
xchg
out
outsb
dec
es
dec
jl
sub
inc
je
sbb
jb
add
in
sbb
xchg
movsl
not
push
fisubl
roll
mov
lcall
mov
into
in
or
mov
ja
inc
push
adc
lret
cmp
push
xor
roll
test
xchg
add
mov
xor
nop
mov
or
cmpsb
xchg
test
adc
sarb
ror
jmp
pop
sarl
jno
test
inc
lahf
cmp
insb
xchg
cltd
fisttpll
loopne
lret
sbb
adcl
push
iret
add
adc
ljmp
bound
pusha
add
mov
cmp
movsb
pop
or
mov
outsl
ficoml
mov
jge
pushf
jle
mov
int3
xor
movsb
iret
mov
sbb
bnd
jl
sub
cmp
and
mov
mov
mov
das
sbb
jl
jbe
js
xchg
test
adc
pushf
mov
xor
mov
push
xchg
mulb
pusha
cwtl
adc
shll
ficoms
test
xchg
fs
push
sub
data16
jge
push
push
lret
inc
das
ss
adc
out
or
xchg
cmpl
insb
mov
mov
push
arpl
push
fcmovnbe
ficoml
lahf
cld
test
inc
std
orb
arpl
adc
mov
out
fildl
fnstcw
sub
cld
pop
dec
dec
add
sti
xor
test
ss
loopne
scas
cmpsb
sbb
cwtl
idiv
or
xor
iret
pop
cmp
scas
cs
inc
shl
insb
sub
and
dec
rcrl
andl
push
add
bound
xchg
sub
sbb
daa
call
xor
rorb
decl
inc
roll
jo
dec
inc
fistl
push
outsl
into
adc
mov
push
stc
push
xchg
jmp
leave
bound
mov
lcall
jae
in
add
test
add
add
daa
in
or
bound
lcall
sub
inc
jge
lret
je
jno
test
adc
lods
test
je
adc
or
dec
cmp
sbb
in
nop
cmc
and
xor
or
in
mov
inc
dec
jl
movsb
inc
add
sub
mov
pop
je
mov
in
insl
sbb
lcall
adc
mov
icebp
or
lock
aam
mov
sub
ret
pop
lret
cmp
lods
ret
lods
xchg
push
lahf
rorl
mov
jp
flds
jp
adc
inc
sahf
jns
push
mov
orb
and
mov
movsl
test
or
cmp
mov
nop
jae
xchg
or
movsb
jl
cld
pop
popa
in
lods
sub
sbb
dec
cmp
xchg
lret
in
cmc
shrl
out
jae
outsb
dec
rclb
je
shlb
das
inc
cmp
inc
test
shll
imul
dec
int3
js
sti
sbb
mov
add
jo
cmp
adc
jg
in
jno
nop
xchg
or
insl
cmc
lahf
or
addr16
or
pusha
out
pop
inc
mov
mov
out
scas
notl
mov
imul
xchg
push
insl
mov
pusha
ss
mov
xor
clc
adc
xchg
mov
mov
mov
and
ja
cld
fiadds
or
xchg
cmpsb
mov
mov
ret
div
fldenv
ljmp
insb
jno
cmpsb
jb
ds
fsub
out
outsb
cmp
adc
push
aad
sub
enter
xchg
arpl
jbe
mov
loopnew
xchg
and
xor
idivl
out
in
cmp
fsubs
xchg
jg
xlat
cmp
jl
pop
movsb
sarb
jl
int
in
mov
push
xchg
hlt
outsl
xor
xor
cmc
cmp
fmuls
dec
pop
push
mov
leave
jecxz
orb
clc
gs
cmpsb
adc
sbb
mov
loope
faddl
jo
sti
inc
je
dec
into
daa
adc
jp
sub
fidivrs
cmpl
fstpt
mov
movsl
mov
int3
add
mov
jge
cmp
divb
addl
stos
adc
mov
shl
loop
and
pop
mov
inc
jo
cmp
in
xchg
out
push
mov
in
pop
pop
ucomiss
addr16
pop
hlt
jno
pop
dec
add
mov
sbb
movb
jnp
jnp
lret
inc
pop
fs
inc
sahf
pushf
pop
bnd
mov
dec
jo
test
repz
sub
push
sbb
mov
lods
dec
mov
in
and
push
cli
jecxz
pushf
push
flds
jo
xlat
pop
or
pop
add
pop
xchg
or
ljmp
lret
adc
jmp
insb
sti
mov
adc
xchg
adc
arpl
dec
inc
and
cmpsl
das
jbe
loope
in
cs
cld
aam
adcl
in
out
xchg
xor
xchg
sbb
out
pop
sahf
out
add
cwtl
cmpsl
scas
scas
pop
out
sbb
push
pop
sub
int
push
repz
stc
cwtl
or
jmp
mov
fs
arpl
xchg
xor
shll
fnstsw
push
xor
xchg
arpl
mov
scas
jp
arpl
ffreep
mov
pop
mov
jne
or
jmp
call
sbb
in
fxch
ds
jb
hlt
cmpsb
adcl
dec
in
cli
add
pop
adc
in
inc
push
ss
imul
das
mov
inc
pop
adc
push
loopne
addr16
pop
cmpb
push
fnsave
cmp
dec
cmp
inc
sbb
fwait
pop
and
xchg
pop
les
pop
adc
dec
nop
mov
cmc
mov
fnstenv
or
push
mov
push
lea
lret
jg
mov
cmp
lret
lret
nop
mov
shrl
insb
xor
xchg
xchg
mov
inc
xor
ret
mov
xchg
xchg
inc
inc
xor
dec
and
das
cmp
jb
sbb
adc
fsubl
out
test
cmp
fiadds
dec
xlat
and
jb
mov
les
shlb
into
mov
dec
and
clc
push
or
jp
xlat
js
pusha
jmp
hlt
sbb
sarl
sbb
lcall
mov
fcoms
pop
xchg
fxam
inc
pop
dec
ljmp
inc
mov
ljmp
aam
jne
stc
push
stos
push
loope
mov
xor
shlb
cld
or
lcall
pusha
jecxz
mov
dec
jl
roll
mov
mov
int3
pop
out
je
cmp
rcll
fs
push
lret
mov
mov
pusha
mov
lret
mov
lea
mov
sahf
and
jne
and
js
jp
sahf
jl
test
mov
mov
movsl
cwtl
lcall
aaa
jmp
mov
lcall
xor
mov
mov
mov
imul
push
in
lcall
addr16
push
sbb
xor
xchg
ds
dec
imul
cmp
adc
mov
popa
mov
and
cmpsb
sbb
xchg
or
xchg
imul
inc
or
jnp
inc
push
cwtl
jecxz
stos
repz
popa
nop
in
xchg
adc
test
xchg
push
pop
test
hlt
arpl
rorb
push
lea
or
jo
inc
lods
dec
and
pop
sub
sbb
mov
pop
cmp
lds
into
push
cmp
push
xchg
pushf
sub
and
dec
push
lock
or
jbe
cld
sub
cmp
push
and
cli
or
dec
call
in
mov
ds
ret
mov
in
push
cld
push
call
pusha
pop
xchg
dec
subb
repz
inc
mov
dec
test
outsb
das
stos
jno
inc
lock
cmp
pusha
push
cmp
ret
pop
mov
rcll
push
push
in
xchg
mov
fldt
jnp
mulb
fmuls
add
out
pop
cltd
sub
dec
aas
std
push
adc
or
jnp
inc
mov
or
push
inc
or
mov
cli
outsb
push
mov
and
int3
test
mov
jne
xchg
daa
fstps
mov
dec
ja
add
lcall
mov
sbb
out
cli
imul
aas
rorl
xor
mov
leave
cmp
data16
and
imul
fisubl
adcl
xchg
cli
hlt
test
fidivrl
jb
jl
jno
dec
dec
sub
inc
inc
jbe
mov
js
sbb
pop
push
cmp
sbb
shll
dec
lods
aad
mov
cli
aam
cmpsb
pop
lea
add
or
push
or
sub
lock
negl
pushf
loopne
mov
dec
sbb
jo
in
jecxz
bound
fsin
cmc
sbb
mov
in
pop
mov
bound
inc
dec
cmp
xor
rclb
jbe
mov
icebp
out
fsub
iret
mov
xchg
loope
fistps
lret
lahf
in
push
stc
mov
pop
mov
ja
mov
bound
iret
cltd
pop
lock
divb
jmp
enter
arpl
mov
or
pop
mov
mov
lds
ja
mov
cltd
pusha
sahf
cmp
sub
push
pop
daa
roll
sub
pop
in
mov
jns
adc
stos
stos
repz
xor
and
add
mov
gs
lea
push
push
pop
pop
fs
cmp
push
int3
adc
xor
pusha
xor
push
pop
dec
in
push
sub
popa
gs
aad
mov
mov
xchg
pop
je
jnp
shlb
mov
out
mov
movsl
hlt
xchg
xchg
add
sbb
xchg
cmp
jl
movsl
dec
jae
and
test
dec
add
shrb
lods
adc
jne
mov
in
cmp
push
std
lds
push
add
adc
push
sbb
adc
in
pusha
xor
movsb
xor
lret
aam
lea
push
pop
aaa
mov
jl
add
xchg
pop
cs
adcl
shll
out
call
les
jg
or
cmpb
dec
ret
jecxz
mov
out
fildl
lock
pop
xor
mov
and
dec
or
shll
fdiv
bnd
or
repnz
xor
insl
xchg
repnz
ret
fadds
mull
enter
cltd
pop
hlt
jmp
sbb
test
or
arpl
jne
mov
push
fsubrp
pusha
incl
mov
pop
and
movsl
jbe
out
or
push
out
push
fistps
pop
jae
mov
xchg
or
xor
scas
sub
mov
ret
jle
ja
test
in
cmpsl
or
inc
dec
in
popa
pop
call
ret
or
bound
jae
lret
das
push
cmp
sbb
jne
pop
cld
sub
add
mov
or
fmull
faddl
call
shll
add
mov
or
inc
and
jl
mov
mov
pop
ja
cmp
adc
add
lods
and
adc
sahf
in
dec
mov
cmp
jge
hlt
aas
and
pop
and
stos
pusha
addr16
push
out
push
movsl
jg
or
int
aam
int3
fisubrl
arpl
push
sub
sbb
ds
xchg
push
movsb
shl
fdivl
mov
loope
sub
jb
lcall
push
gs
jb
cwtl
sarb
push
xchg
or
dec
mov
je
clc
push
negl
mov
sbb
and
jmp
add
pop
push
mov
mov
movsb
std
addr16
fcom
inc
xor
popa
lea
xchg
sbb
xchg
lret
push
adc
fisttpll
test
cmp
repz
popf
movsb
sbb
std
sbb
push
js
int
and
dec
inc
mov
push
sub
in
roll
mov
jbe
das
jecxz
in
ljmp
push
movb
xor
hlt
adc
sub
jb
dec
and
push
mov
mov
inc
and
je
mov
cmp
pop
sbb
and
sbb
lea
loope
sub
or
jle
pusha
loopne
push
dec
sbb
add
xchg
push
cmp
iret
mov
jmp
mov
dec
ss
or
xchg
mov
rcll
add
mov
mov
fnstcw
cmpsl
mov
sub
outsl
jae
in
in
pop
jno
jns
ss
xor
lahf
or
adc
daa
fmull
test
push
sahf
xlat
lea
mov
rolb
rorl
sti
jo
mov
loopne
add
jge
mov
sbb
cli
stos
sub
stc
adc
xchg
and
xor
jle
test
push
pop
ljmp
in
inc
cmp
lahf
aaa
cmp
mov
jle
mov
insb
icebp
xor
inc
inc
xchg
fcoml
sbb
xchg
xchg
shl
cwtl
and
inc
fildl
data16
cmp
out
adc
cmp
fdivrs
xor
mov
sahf
stc
ja
out
mov
mov
cmpsl
insl
aaa
sub
test
cltd
jecxz
sub
xchg
xchg
lahf
cli
or
je
lret
aam
in
inc
jmp
call
repnz
xchg
pop
mov
lret
fcoms
das
sarb
jns
jg
mul
inc
arpl
divb
xchg
cmpsb
mov
mov
jns
bound
pop
cmp
sub
movl
cli
iret
mov
adc
cmpl
int
sahf
jbe
je,pn
mov
sub
outsl
mov
sbb
je
push
in
insb
lds
sub
dec
mov
xlat
stc
sub
add
mov
jb
inc
lret
aaa
mov
pop
dec
fs
fsts
and
mov
lea
repnz
push
hlt
js
dec
xor
icebp
add
data16
inc
cmp
dec
lahf
push
or
and
je
sbb
push
jl
sub
jp
jle
adc
pop
push
jne
loopne
push
out
pop
bound
cmp
jp
inc
test
fistpl
push
and
test
mov
sbb
stc
push
mov
push
jmp
rcr
cmp
dec
dec
out
push
ret
fwait
sub
ss
pop
scas
sub
rorl
popa
xchg
sub
pop
jmp
hlt
out
mov
and
out
popa
xchg
insb
pop
xor
xor
into
pop
xchg
or
lock
mov
mov
add
jbe
pop
push
es
movsl
sub
enter
push
insb
lea
shrb
inc
inc
dec
xor
nop
lods
jp
pop
shrl
fs
in
xchg
xlat
movsb
insl
in
icebp
jmp
push
lcall
push
sahf
mov
in
sub
pop
int
out
fildl
add
fwait
aas
int3
xor
lret
adc
pop
loop
mov
sub
inc
sti
bound
or
push
movsb
add
outsl
rcrl
push
inc
jecxz
adc
xchg
scas
shr
mov
loop
in
xor
mov
out
cmpb
aaa
lock
mov
mov
out
cmp
stc
xchg
bound
mov
mov
jle
xor
push
inc
popa
jecxz
sbb
lock
xchg
mov
out
out
inc
es
jne
or
bound
int3
sbb
xchg
jg
xchg
test
jge
mov
lds
test
ja
mov
movsl
loopne
hlt
pop
lcall
enter
imul
mov
sub
call
loop
inc
daa
fld
push
rclb
in
mov
jecxz
ret
push
pop
jge
and
inc
mov
pushf
jns
and
push
mov
inc
cwtl
jmp
aad
and
xchg
mov
into
xchg
sbb
mul
gs
pop
mov
mov
sbb
stos
cmp
ret
jmp
gs
inc
je
aam
hlt
leave
int
cmp
insl
xor
test
arpl
add
icebp
xchg
frstor
push
lret
xlat
test
and
jne
mov
inc
pop
lret
addb
push
xchg
jmp
out
dec
cmp
ret
rol
or
and
jmp
scas
adc
leave
ja
shrl
xor
orb
xchg
sahf
jbe
adc
and
cmpb
jl
bound
ret
and
xchg
imul
xor
jg
mov
mov
fstps
test
ret
push
push
rolb
mov
int
sub
push
push
xchg
cmp
mov
ljmp
fadds
pop
xor
and
fistpl
stos
loop
std
jle
push
shlb
bsf
repnz
aam
cmc
cmp
mov
or
or
cli
push
mov
stc
shr
mov
mov
jb
cltd
and
mov
in
pop
insl
and
mov
fisttps
jnp
jnp
push
call
pop
inc
scas
mov
inc
fdivr
adc
and
jne
in
scas
fiaddl
icebp
in
inc
sub
mov
add
mov
cmpsb
sub
je
cld
jae
inc
iret
sahf
pop
xchg
dec
out
test
xor
addr16
rcll
cmc
xor
push
jb
pushf
fxch
ret
sbb
and
pop
xchg
mov
xchg
or
jo
std
add
mov
xor
inc
aad
repz
inc
dec
jle
add
out
out
pusha
push
aad
cltd
bound
mov
and
je
shll
xchg
aas
jne
lea
ret
dec
xchg
ja
cli
dec
popf
xor
and
dec
cmpsl
xchg
xchg
push
sub
fwait
push
mov
xor
mov
cld
insl
jo
rcr
dec
popf
out
aaa
lret
aas
loop
inc
popf
pusha
orl
sub
outsb
loope
les
mov
icebp
sbb
fmul
pusha
leave
loope
fadd
xor
inc
push
or
std
imul
popf
fsubl
loope
lcall
outsb
pop
push
inc
sbb
mov
mov
into
cmp
lock
fnsave
mov
xchg
aam
ret
sbb
push
mov
and
cs
int3
xchg
xchg
and
xchg
std
xchg
push
mov
ds
icebp
lds
jne
or
cmp
bnd
cmp
mov
insb
xor
or
aas
cmp
adc
jecxz
out
sbb
dec
aas
push
mov
fs
pop
into
imul
mov
cltd
cwtl
shl
hlt
jns
jne
ja
nop
insb
add
pop
sub
lods
aad
sbb
mov
push
movsl
adc
dec
mov
xchg
jne
cld
scas
mov
and
mov
push
sbb
cmp
xor
cmc
ljmp
xchg
xor
pop
repnz
lcall
arpl
push
inc
leave
in
lret
mov
push
out
cmp
xadd
and
cli
fiaddl
pop
lds
push
insb
in
mov
xor
cmp
dec
sbb
mov
leave
mov
mov
scas
je
std
fs
mov
inc
loopne
mov
loope
jns
in
add
pop
dec
jmp
popa
pop
into
sbb
push
imul
xor
iret
adc
and
jb
in
sub
adc
add
lret
mov
aaa
adc
sbb
xchg
pop
mov
fcoms
mov
addb
xchg
mov
mov
scas
jle
and
mov
mov
shr
pusha
adc
mov
ljmp
xlat
mov
gs
lret
es
nop
int3
nop
ret
icebp
dec
adc
fwait
adc
call
stos
fldcw
imulb
hlt
and
fcmovnb
scas
insb
icebp
push
jge
mov
js
pop
mov
les
and
ds
or
test
fwait
sub
push
xchg
fsubp
dec
mov
mov
lahf
push
iret
pusha
push
in
mov
or
stos
insl
ja
pop
in
fisubrs
cs
fwait
xchg
jge
adc
inc
jb
jnp
or
rol
push
imul
dec
cmp
dec
add
sbb
and
cmp
outsb
dec
cli
ja
outsb
mov
aaa
xchg
outsb
pop
inc
jne
fsubrl
cmp
mov
mov
aas
push
ss
lods
mov
into
repz
sub
lods
jae
sub
cwtl
mov
outsl
aad
jle
mov
nop
mov
sbbl
cmpsb
push
movsb
cld
or
imul
sahf
cmp
sbbb
dec
inc
mov
mov
inc
xchg
inc
loope
xlat
jle
adc
xor
mov
dec
dec
xor
dec
cmp
test
std
inc
cwtl
jecxz
jno
dec
addr16
out
xchg
cwtl
cmp
ror
fnstcw
sarl
inc
or
sub
int
sub
mov
jbe
add
dec
sub
sbb
inc
aaa
sti
repz
scas
in
xchg
out
adc
das
movsb
adc
inc
push
or
mov
mov
jmp
xchg
mov
mov
push
enter
jecxz
out
scas
das
push
outsb
dec
nop
jp
out
stc
mov
ljmp
jb
jl
mov
jnp
mov
pop
mov
flds
xchg
mov
ds
ja
aam
test
aad
add
insl
add
cmp
inc
mov
pop
outsl
nop
sub
rcrb
dec
lods
xchg
xor
addr16
xor
inc
push
stos
jg
ret
push
loop
xchg
xor
test
xchg
add
jb
fcmovu
add
pop
mov
scas
mov
xchg
push
sub
loope
int
fnstsw
cli
jmp
aaa
ror
lds
sti
mov
push
jne
pop
in
push
sti
cld
test
inc
lret
cwtl
faddp
sbb
jecxz
call
sti
stos
das
lods
cmpsl
push
add
es
and
je
pop
and
clc
arpl
pop
inc
mov
inc
je
and
fnsave
sti
dec
xchg
test
xor
mov
pop
pop
sbb
lret
inc
sub
cmp
jg
lahf
out
or
mov
mov
or
pushf
adc
push
cmc
mov
cmp
xor
pand
movsb
fs
push
dec
adc
and
push
sub
jle
jb
enter
insb
dec
xchg
adc
fiaddl
cmp
pop
stos
lods
ret
pop
or
mov
adc
sbb
les
idivl
ljmp
movsl
test
xor
xor
mov
sbb
scas
ffreep
insl
cmp
mov
test
jno
sbb
mov
mov
movq
mov
dec
fidivs
mov
mov
pop
pop
aad
jl
stc
daa
out
cmp
pop
sahf
out
adc
sub
inc
icebp
sub
pop
jmp
stc
pop
lea
mov
pop
add
push
cld
ss
jg
cmp
xlat
pop
repz
pop
or
mov
xchg
mov
call
mov
and
ds
out
push
cmpsb
sub
jbe
cs
dec
aad
dec
xor
inc
jb
iret
int
mov
or
out
pop
notb
scas
sbb
jecxz
mov
dec
std
stos
push
dec
sub
dec
insb
sahf
frstor
sub
adc
inc
inc
loope
mov
jae
cmp
shrb
dec
outsl
adc
mov
or
sti
xor
fcomp
inc
es
jecxz
mov
cmpsl
cmc
cmp
popa
fdivrl
adcb
ficoms
stc
xchg
push
xlat
mov
scas
popf
xchg
jo
mov
ss
inc
ret
inc
lds
jae
adcb
fcoml
mov
cmp
xchg
push
mov
add
jp
mov
dec
lds
inc
cmpsb
into
test
repz
outsb
cmc
mov
je
mov
push
aad
mov
movsl
xchg
lock
or
test
xlat
lret
aaa
leave
adc
test
xlat
jne
and
xchg
out
xor
push
loopne
dec
scas
and
fwait
dec
mov
inc
std
xlat
out
out
int
leave
in
pop
xor
jno
sub
cmpsb
out
mov
push
cmp
push
xor
sbb
in
lea
push
cmp
repnz
shll
cmc
sbb
pop
mov
sbb
imul
add
fmul
xor
enterw
jl
jecxz
insl
and
gs
pop
xchg
inc
std
cmp
jns
cmc
out
mov
sbb
sub
dec
lret
dec
add
inc
xchg
es
cmpsb
cwtl
test
test
mov
fstpl
aas
test
sahf
fists
push
xchg
pop
out
jl
or
push
icebp
sahf
insb
xor
jge
mov
sub
xlat
cmp
xor
stc
jae
mov
mov
popf
pop
and
push
push
std
push
and
adc
lods
cmp
rorl
std
xor
pop
mov
repz
cmc
mov
cmpsl
cld
mov
mov
adc
js
sub
daa
ds
jp
jno
jbe
in
cmpsb
cmp
pusha
adc
and
fucom
inc
rol
in
xor
loopne
sbb
mov
mov
pop
push
sub
pop
bound
jle
clc
in
popa
mov
cwtl
xor
push
fimuls
clc
pop
js
sub
addr16
stos
daa
out
add
cmc
fwait
cwtl
cld
in
push
mov
push
ds
jno
es
mov
or
jge
jmp
sbb
pop
or
fdivl
mov
mov
icebp
mov
out
or
test
insb
rclb
in
jge
or
sbbl
dec
jnp
xor
negb
dec
loop
sub
sahf
adcl
test
xchg
xchg
pop
insl
test
inc
pop
testl
out
mov
fs
jmp
int
imul
mov
ljmp
xor
jl
arpl
fcoml
notb
and
sti
clc
xchg
mov
out
lcall
add
gs
dec
stos
sub
testl
inc
add
aas
dec
lahf
lcall
test
cld
in
insl
add
jg
pop
xchg
xchg
clc
in
mov
es
jnp
inc
mov
aam
leave
jo
or
mull
add
push
mov
mov
push
fsubrs
or
lret
popa
lock
mov
mov
ljmp
mov
jmp
mov
lretw
ret
sub
mov
out
mov
imull
mov
call
stos
imul
sbb
repnz
mov
movsl
inc
loop
in
xor
les
jl
lahf
movsl
in
mov
test
dec
jb,pt
dec
or
mov
add
je
push
imul
ret
cs
xchg
dec
jmp
mov
add
mov
xchg
fwait
ss
mov
js
add
pop
and
mov
repnz
enter
push
mov
or
adc
sbb
dec
fwait
pop
clc
inc
loop
aas
jbe
or
ljmp
rorl
scas
cli
out
inc
cmp
sti
je
and
mov
js
int3
insl
sub
imul
aas
mov
cli
mov
jle
lock
jo
stos
xchg
lds
inc
cltd
mov
outsb
loope
push
mov
xor
aaa
popf
in
adc
lds
lds
mov
scas
and
popf
hlt
xor
cltd
mov
sbb
push
shrl
xlat
mov
arpl
divl
pop
lods
popa
call
mov
sub
pmulhw
cmp
dec
inc
fnstcw
addps
push
mov
arpl
out
mov
and
stos
dec
lret
push
in
sarb
sub
pop
pop
lods
call
mov
aas
and
movsb
cltd
jg
movsb
jmp
push
or
bnd
pop
xor
mov
pop
dec
mov
cmp
or
sbb
and
les
aaa
repnz
repz
pop
fnstenv
xor
xchg
ss
push
scas
dec
or
inc
xchg
mov
cwtl
leave
adc
mov
aam
mov
setne
test
mov
addr16
inc
pop
in
andb
or
push
mov
xlat
les
jge
seta
inc
adc
hlt
xchg
iret
jno
scas
neg
adc
mov
or
cmp
out
data16
or
or
es
add
mov
scas
and
cld
jmp
lret
dec
push
sub
int3
mov
stos
out
inc
nop
out
sbb
lahf
addr16
xlat
stos
mov
insl
ds
int3
or
mov
dec
shr
xlat
push
das
sbb
push
mov
sahf
sbb
outsl
pop
jle
lea
insb
arpl
dec
mov
xlat
pusha
jp
jo
push
bound
shll
nopl
xlat
xchg
and
mov
es
cmp
or
jne
jmp
mov
std
aas
mov
adcl
in
fimull
loope
mov
iret
ss
dec
cltd
lret
leave
xor
pop
jbe
rcrb
roll
cmp
jecxz
aaa
cmp
pop
daa
xchg
pusha
xchg
out
rclb
xchg
rcll
cmp
repnz
jo
cmp
das
and
mov
into
mov
test
xlat
repz
ljmp
push
test
jg
fcoms
jecxz
into
rorl
jnp
or
adc
inc
xchg
popa
sub
lods
repnz
fimull
movl
jb
sahf
sub
lock
xchg
jb
mov
aas
jb
je
iret
mov
aam
fildl
repz
cmp
sub
sbb
mov
mov
adc
add
pop
rolb
in
mov
add
or
rorl
inc
sub
jecxz
jmp
push
xor
subb
pop
sbb
xor
out
hlt
jbe
mov
jne
mov
iret
aaa
or
hlt
push
or
push
jle
pop
mov
push
cmp
fistps
cmp
scas
je
int3
fdivl
pop
sbb
jo
lahf
inc
mov
inc
ljmp
xchg
daa
leave
jns
imul
or
mov
mov
loop
into
inc
jg
cli
mov
mov
dec
imul
popf
push
pop
loopne
fucomip
loope
addb
or
popa
rorl
push
popa
mov
popf
mov
inc
leave
jmp
sub
push
mov
int3
mov
or
or
mov
fsubs
cmp
mov
and
fidivrl
pop
lea
lock
test
jecxz
sbb
fcmovu
push
hlt
in
pop
xor
aaa
mov
and
cmpsl
mov
test
inc
sbb
stc
lret
push
xchg
aad
add
cmpsl
push
je
jmp
jg
or
ds
cmpsl
or
ljmp
mov
push
mov
cs
jno
pushf
testb
mov
mov
rorl
adc
jnp,pn
xchg
mov
mov
je
xorl
sub
xlat
mov
es
sahf
pop
je
inc
dec
hlt
lds
cmp
mov
xchg
nop
movl
and
jge
or
test
jge
push
xchg
insb
addr16
sbb
inc
arpl
into
pop
rorb
mov
jns
or
xchg
insb
lea
mov
ljmp
fwait
xchg
iret
pop
clc
jae
dec
mov
insl
neg
jb
push
push
cmpsb
and
mov
sbb
cmc
xchg
jp
inc
jmp
add
out
or
orl
ret
push
repnz
popa
sbb
aaa
out
xor
stc
rcll
push
jae
or
sub
cmc
ss
incb
jle
add
fists
add
popa
jge
inc
mov
sub
mov
sar
cmp
dec
sbb
nop
cmp
add
adc
inc
cmp
mov
insb
jecxz
mov
mov
jle
cwtl
xor
outsl
imul
xchg
push
sub
jb
out
cmp
push
mov
add
xor
aad
aam
and
xor
shlb
stos
add
orl
rcrl
data16
test
inc
ret
ret
add
mov
push
cmc
mov
insb
movsl
push
inc
nop
xchg
add
sti
sub
mov
jns
xor
cltd
fsts
inc
loopne
or
and
xabort
rol
popa
add
call
mov
sbb
and
mov
testl
popa
ret
jge
inc
mov
xchg
mov
insb
fcomps
test
rcrb
jne
jno
out
add
dec
js,pn
mov
jle
mov
xchg
xlat
pop
add
ficompl
sub
jbe
jmp
dec
pop
pop
pminsw
dec
leave
sub
out
xor
daa
push
xchg
push
inc
jns
daa
and
sahf
repz
mov
outsb
ror
fistl
les
mov
test
cmp
pushf
xchg
inc
xchg
scas
mov
mov
ret
scas
movsb
cli
push
test
ljmp
adc
imull
jb
daa
dec
sbb
push
xor
jge
mov
adc
jg
cmp
jo
jnp
pop
cmp
jmp
add
mov
xor
xor
stc
cmp
jle
loopne
les
into
add
add
pop
popf
and
imul
sbb
lods
cwtl
sbb
flds
lahf
aad
out
aaa
push
mov
fsts
stc
mov
mov
ljmp
fwait
lods
fs
loopne
pop
add
or
fisubrl
add
inc
sbb
mov
test
or
sbb
bound
mov
sbbl
test
inc
fmuls
xor
xor
push
fldt
clc
cmc
jb
orb
mov
in
sarb
sbb
mov
loopne
sub
pop
rorl
iret
mov
cld
cltd
pop
sbb
inc
lcall
cmp
dec
sub
mov
mov
imul
repnz
xor
or
jnp
inc
add
mov
inc
leave
lahf
js
stos
xor
mov
dec
push
jbe
pop
insl
and
aad
xchg
nop
nop
sbb
pop
shrb
popf
test
push
and
es
mov
jge
jge
lods
outsb
jns
movsb
mov
lods
sub
cmp
test
adc
stc
jp,pt
cltd
xor
bound
dec
inc
push
push
hlt
cmc
ss
or
cld
pop
das
mov
adc
testb
mov
arpl
push
hlt
mov
adc
jg
or
scas
xchg
insb
aas
mov
mov
push
es
std
inc
jb
cmp
pop
or
xorb
movsb
jno
mov
or
rcr
xchg
lods
and
fcmovu
addl
imul
cmpsl
mov
xchg
and
mov
sub
rcrb
insl
sbb
dec
push
dec
xor
fisubs
insl
jg
sbb
roll
mulb
or
dec
int3
jb
in
sub
or
sub
pop
test
sub
rcll
lock
inc
lds
hlt
adc
mov
xor
outsb
das
cmp
push
adc
cmc
sub
ljmp
rcrb
dec
mov
cwtl
pop
bound
and
aaa
pop
outsb
scas
and
stc
pop
ret
mov
outsl
ret
lret
stos
lret
aas
dec
je
push
push
int
movsb
lods
outsb
lock
idiv
lds
pusha
in
in
inc
inc
test
sub
loop
lcall
test
aas
lret
out
rol
xor
push
in
push
je
pop
sub
pop
adc
add
pop
sub
mov
fidivrl
outsl
imul
imul
push
shrl
mov
je
imul
ja
lret
lea
and
test
push
data16
inc
call
iret
pop
stos
xchg
jmp
repz
scas
add
sbb
xchg
xchg
mov
sbb
mov
in
xchg
mov
mov
push
cmp
inc
test
sbb
stos
outsb
lret
xor
xchg
and
cmp
cmp
xchg
mov
sbb
sbb
cli
push
stos
clc
push
fnstcw
xchg
push
mov
rcrb
jbe
pop
xchg
push
test
or
imul
in
enter
xchg
dec
sbb
fisubs
xchg
pop
xor
into
inc
fadd
outsb
loop
ss
mov
pop
das
sbb
xchg
push
mov
jmp
lods
cwtl
dec
mov
pop
rcrl
xor
lods
test
xor
xor
jo
mov
lods
mov
mov
jne
nop
popl
sbb
in
adc
pop
fldenv
std
push
nop
push
cmp
bound
ss
dec
in
daa
cmpsb
sub
mov
fldt
jne
ljmp
xchg
arpl
rorb
scas
mulb
adc
rcrb
dec
aaa
jbe
bound
pop
and
loop
xchg
mov
mov
mov
test
out
gs
icebp
sar
xchg
test
xor
fldl
fwait
adc
outsl
and
push
add
sahf
cmpb
inc
dec
mov
test
sbb
out
jns
push
dec
and
mov
mov
sbb
pop
outsl
inc
bound
dec
push
push
ret
sahf
pusha
pop
push
lcall
add
pop
xchg
addb
imul
fwait
les
stos
insb
out
push
icebp
dec
dec
js
sub
inc
and
mov
add
sbb
fisubl
fisttps
pop
popf
rorb
jle
dec
repnz
setp
shrb
mov
pushf
enter
ja
push
pop
jp
dec
ljmp
mov
jne
cld
out
outsl
xchg
sub
mov
sbb
ret
or
mov
or
push
adc
clc
dec
push
fmuls
push
jecxz
jbe
xchg
divb
out
xor
popf
pop
pop
jge
mov
mov
les
cli
in
push
dec
aam
mov
daa
xchg
xor
fsubr
jp
fs
sub
pop
or
lahf
adc
pop
inc
add
mov
ss
jne
frstor
mov
fs
jmp
jno
xor
jo
sub
out
mov
xor
ret
stos
insl
ljmp
xor
xor
jmp
nop
adc
sub
test
mov
push
lds
cwtl
in
sub
fcmovnbe
jge
pop
push
or
mov
xchg
ret
jb
sub
aas
jbe
sbb
icebp
dec
sbb
mov
sbb
sbb
ja
push
hlt
stos
cltd
orl
jge
lds
push
xor
lahf
jno
xor
adc
xchg
jne
std
cs
gs
or
push
add
inc
packssdw
cmc
xchg
rcr
pop
test
lahf
sbb
divl
mov
pop
sub
cmp
cltd
dec
xchg
je
in
pop
fstl
stos
push
fdivl
dec
jnp
mov
jo
lret
dec
fwait
cmp
call
stc
fcompl
cmp
xor
test
xchg
push
mov
ss
xchg
xor
cmpsl
shrl
mov
outsb
mov
mov
out
insb
sbb
shll
xchg
lahf
shl
or
inc
push
test
sbb
and
xchg
popa
dec
push
push
out
or
je
push
adc
jb
adc
je
and
jl
pop
pop
aam
mov
add
push
adc
pop
xchg
insl
scas
stos
push
jno
paddw
add
push
daa
fs
mov
xchg
les
add
cmp
insl
pop
testb
xchg
sbb
cmpsb
shr
lock
pop
bswap
inc
inc
fisttpll
cld
jmp
arpl
fwait
dec
sbb
inc
sub
inc
xchg
cwtl
insl
jb
repz
aam
int3
mov
jne
cmpsl
movsb
pop
ret
or
jecxz
and
xchg
std
int3
sbb
dec
movsl
popa
or
mulps
inc
cli
out
out
andb
sub
pop
std
xor
sbb
leave
xchg
rorb
adc
jbe
or
pop
stos
cmp
pop
stos
inc
popf
cwtl
sub
std
out
push
pop
add
bound
mov
fdivrp
xchg
fdivl
mov
test
adc
fisubrs
outsb
sbb
stc
lcall
ret
imul
push
inc
js
add
std
jp
xchg
cmc
jnp
adc
mov
jno
lock
cmpsb
cmc
mov
shl
flds
ss
fists
xchg
mov
pop
sahf
push
and
jnp
sub
cli
pop
dec
out
mov
mov
fcoml
cmpsb
pop
and
pop
adc
mov
or
dec
xchg
int
ret
das
and
pop
sub
jp
add
xor
xlat
jbe
jne
cmp
pop
and
jp
loop
lods
outsb
sbb
arpl
call
adc
lds
pop
xchg
adc
jp
je
cmc
ljmp
in
add
mov
push
xor
sbbl
cmpsl
inc
push
lods
jg
inc
sub
ljmp
shll
clc
jp
xchg
xor
scas
mov
dec
mov
jo
hlt
leave
mov
xor
shrb
xchg
mov
cmp
jae
cmp
lret
stc
mov
add
loope
inc
insb
sbb
xlat
fcoml
shl
rcrb
daa
cmpsl
clc
in
dec
cmp
insb
xchg
ret
in
lock
loopne
addb
mov
imul
insl
cli
insb
lods
sub
cmp
mov
icebp
fsubrp
add
xor
xchg
or
cwtl
fistps
sahf
outsb
push
icebp
ficompl
sub
adcl
jo
lds
add
cmc
inc
push
sti
in
lea
mov
mov
movsb
out
imul
adc
push
sub
lds
scas
mov
jge
daa
pop
push
sub
xchg
data16
lock
loop
jle
xchg
pop
cmpsl
or
frstor
jno
sti
dec
shlb
jo
cmp
out
dec
and
test
ja
jbe
mov
lcall
add
xchg
xchg
icebp
fdivrl
pushf
inc
dec
xchg
inc
cs
stos
sub
arpl
dec
rcrb
ss
lret
jno
cmpsb
push
add
mov
sbb
icebp
xchg
insb
ret
lahf
jge
in
or
mov
jmp
pop
js
sbb
sahf
inc
mov
pushf
cmp
mov
dec
repnz
xor
int
pop
add
jmp
adc
push
or
and
inc
push
ficomps
fisubs
mov
out
dec
pop
mov
dec
scas
sub
adc
out
xchg
push
outsb
je
lcall
imul
outsb
pusha
sbb
ljmp
mov
mov
push
xchg
dec
jg,pt
jne
fldl
andl
aaa
mov
in
out
and
pop
enter
cmp
into
xchg
xchg
lahf
and
xor
mov
pop
and
adcl
popa
mulb
or
ficompl
fwait
in
add
jl
add
pop
mov
movsb
mov
sbb
pop
rcrl
shrb
xor
mov
jo
adc
jp
fdivrl
insl
mov
pop
loopne
insb
ret
andl
xchg
rsm
pop
push
int
repz
movsb
and
rcr
shll
out
shll
leave
sub
inc
shr
lds
fcmovu
aas
adc
push
mov
sbb
movsl
sub
push
push
dec
pop
pop
stos
scas
in
mov
test
push
jmp
rcrl
hlt
push
imul
insb
sbb
mov
andps
push
fs
cmp
push
jne
dec
adc
inc
sti
mov
shlb
aad
sbb
cld
jmp
popa
call
add
mov
xchg
xchg
jl
int
push
jae
inc
jmp
cmpsb
pop
push
popa
jo
je
dec
mov
mov
jp
aaa
jne
data16
xchg
mov
fcmovnbe
push
leave
jmp
push
hlt
test
in
pop
ljmp
mov
push
int
xor
cmp
test
test
mov
jp
sub
pushf
add
mov
and
xchg
mov
sbb
lahf
mov
cwtl
push
shrl
out
mov
sarl
lret
fcoms
sahf
int3
scas
imul
jno
pop
sti
cmpsl
popa
adc
add
mov
insl
lret
sub
jmp
test
fadds
jbe
push
push
mov
push
imul
sbb
push
sub
adc
ja
sub
cmp
daa
int3
shr
mov
pop
lret
mov
imul
test
jmp
xchg
ss
sub
fidivs
sbb
ficoms
xor
push
call
mov
arpl
add
push
aam
dec
mov
std
mov
pop
pop
cmpsb
popa
xor
cwtl
mov
cmp
imul
and
cmp
or
sub
aaa
out
aam
push
or
gs
int3
inc
fcompl
and
sub
enter
jo
imul
shll
adc
int
dec
call
or
push
pop
into
ret
dec
sbb
sbb
or
pop
cmp
icebp
mov
inc
bound
imul
pop
pushf
add
in
sahf
sbb
aaa
mov
std
mov
pop
fists
dec
test
jbe
insb
cwtl
xchg
rcll
adc
xchg
out
loope
pop
inc
sub
cld
sub
dec
cmp
push
test
push
pop
clc
fcmovb
mov
sub
mov
jne
outsl
int3
hlt
inc
mov
inc
dec
sub
pop
or
ss
ret
ja
in
das
jne
subl
dec
inc
lahf
push
packuswb
push
arpl
mov
ss
dec
xchg
and
mov
xor
nop
sbb
dec
ja
cmp
pop
jo
aaa
sbb
mov
inc
ljmp
arpl
inc
pop
push
pop
stos
ret
repz
lods
hlt
sbb
push
push
iret
loopne
arpl
dec
test
nop
pop
inc
pop
cmp
pop
adc
jg
jne
test
mov
imul
sti
in
dec
inc
iret
fistpll
jno
fcomip
mov
mov
sbbb
mov
or
jecxz,pt
lcall
dec
in
sub
loop
cmp
jae
je
xlat
inc
js
popf
lock
stos
cmp
out
jp
fistps
or
cmpsb
and
mov
call
loope
rolb
add
das
mov
adc
data16
lret
pop
aas
lret
ja
js
movsl
mov
xor
test
out
loopne
xchg
ja
pop
xlat
fildll
ret
cmc
xor
repnz
aas
ficoms
jge
lret
popa
or
inc
lret
sub
movsb
or
xlat
adc
sti
cmp
xchg
cltd
lods
stc
xchg
or
xlat
movsb
mov
iret
stc
in
add
fcoml
adc
and
sub
into
and
add
xchg
push
sub
sub
sti
push
pusha
jbe
xor
pop
and
movsb
insl
jae
popa
bound
mov
aas
hlt
xchg
sub
aaa
movsb
andl
push
dec
int
or
cmpsl
xor
lods
test
push
adc
push
push
jno
lcall
xchg
jmp
fidivrs
pop
repz
adc
push
into
pop
pop
sbb
xchg
sbb
ljmp
icebp
push
push
test
cli
dec
int3
mov
mov
adc
or
loope
or
mov
adc
mov
clc
repnz
pop
mov
loopne
add
adc
mov
loope
or
dec
js
mov
and
jo
mov
push
in
inc
aas
dec
push
int
fwait
push
mov
push
in
jnp
scas
mov
dec
cs
insb
lds
imul
aaa
enter
arpl
stc
fstpl
pop
into
je
jp
fcoml
lret
cmp
insl
jg
into
out
lret
add
xor
std
mov
mov
xor
xchg
daa
pop
dec
pop
xor
mov
es
aaa
sub
mov
out
pop
xchg
mov
lds
andb
xchg
xchg
mov
xchg
outsl
inc
xchg
inc
inc
and
outsb
pop
or
popa
cmp
popa
cmovno
or
pop
lcall
jge
out
cmp
inc
inc
mov
push
ljmp
add
push
insb
push
test
or
or
or
adc
leave
cmp
cmpsl
mov
out
sahf
lcall
imul
das
aaa
push
cmp
mov
mov
add
push
xor
inc
jbe
das
in
lcall
mov
push
movsl
mov
cmp
xor
mull
shl
es
cmpsb
dec
adc
sub
cmp
and
stc
adc
cltd
nop
and
xchg
adc
test
orb
mull
xchg
sub
sub
cmp
repnz
pop
dec
loopne
sub
xchg
aaa
sbb
add
xchg
jnp
or
sub
out
idivb
notl
loopne
xchg
mov
lea
test
lahf
hlt
scas
jmp
aam
dec
jge
pop
xchg
je
ds
mov
js
inc
fwait
mov
push
negl
loope
imul
divl
stos
or
faddp
fwait
sbb
rcl
or
sub
inc
popa
pop
inc
jge
xor
push
ja
das
mov
out
jg
pop
sti
xchg
std
sbb
mov
into
mov
movsl
inc
ds
jmp
sub
jmp
ja
das
out
mov
movsb
mov
outsl
jb
xor
out
pop
test
jmp
fsubrs
pavgb
aaa
jl
pop
fs
and
sahf
mov
scas
adc
mov
les
and
mov
mov
cmpsl
stos
mov
ret
dec
adc
out
mov
lcall
sbb
test
mov
push
adc
xchg
xor
insb
daa
dec
and
cmp
mov
popf
iret
and
scas
out
mov
in
inc
bnd
adc
xchg
sbb
ljmp
jns
sub
test
sbb
loopne
std
iret
sub
push
jecxz
mov
orl
push
pop
mov
mov
jecxz
xor
es
push
imul
test
les
call
ljmp
jne
les
jecxz
es
ds
xchg
pushf
mov
hlt
ljmp
nop
fbld
add
or
cmp
xchg
shr
cmpb
jnp
imul
stos
adc
scas
rorl
and
call
addr16
sbb
nop
mov
mov
or
enter
add
mov
jb
mov
adc
push
iret
ror
or
push
mov
dec
jge
inc
add
loop
stc
add
jne
int3
ret
fimuls
inc
or
stc
and
inc
dec
adc
mov
add
fs
daa
sub
xchg
fwait
push
test
shrl
or
jb
int3
rorl
lea
lds
aam
xor
fcomi
dec
lods
inc
lcall
hlt
es
mov
adc
mov
adc
in
mov
jae
sbb
test
and
jbe
fists
push
shll
fildl
add
repz
cs
test
dec
push
in
stos
enter
js
mov
sub
cmp
sarl
leave
out
or
mov
push
std
inc
sti
pop
pop
adcb
pop
xor
hlt
sbb
pop
xor
popa
push
lock
cli
scas
ret
lods
shrl
out
lods
sti
hlt
jp
lret
xchg
xchg
mov
xor
int3
stos
cld
xor
inc
scas
mov
xlat
jae
mov
jge,pn
in
lock
mov
dec
loope
addr16
mov
cltd
adc
sahf
ja
xchg
push
push
out
pop
hlt
repnz
mov
sbb
mov
mov
xor
xchg
mov
js
cmc
push
push
test
imul
fsubl
push
out
fs
int3
sub
roll
or
es
pop
mov
adc
xor
in
or
int
in
into
popa
xchg
lods
lods
xchg
aam
lahf
pop
shrb
movsl
rcll
pop
lock
imul
out
pop
out
scas
inc
mov
xor
adc
xor
mov
inc
lock
xor
and
xor
sbb
add
cwtl
pop
adc
ja
and
xor
mov
xchg
jl
fistpl
out
js
add
filds
mov
pop
fwait
xchg
or
mov
out
repz
sarb
cmpsb
mov
sbb
scas
inc
push
shrb
cmp
pushf
dec
insb
rcrl
add
sbb
call
and
jmp
lods
and
mov
popf
daa
sub
sahf
in
loope
xchg
repnz
mov
mov
imul
cld
pop
test
and
adc
jmp
inc
aam
mov
repz
add
push
in
cmp
push
mov
bound
addr16
xor
pop
sahf
imul
out
add
std
test
cmp
inc
mov
aam
repz
das
sub
or
aad
jne
inc
movsl
jnp
mov
jns
mov
test
leave
lods
and
push
cli
mov
sbb
add
pushl
lret
lds
or
loopne
xchg
inc
mov
push
je
mov
sbb
pop
decl
add
xlat
push
je
jnp
xchg
test
or
inc
inc
sbb
mov
aaa
rcll
mov
fisubrl
lahf
cld
les
sub
popa
and
xchg
cld
pop
mov
xchg
iret
mov
cmp
ja
out
cli
hlt
popf
add
cmp
sbb
sub
iret
sbb
adc
outsl
insb
lods
jae
pop
jns
mov
ss
aam
into
pop
pop
xlat
xchg
and
popf
push
mov
pop
sbb
fisttpl
jae
mov
push
cmpsb
test
rol
in
sub
aad
xlat
inc
inc
call
call
idivb
pop
ret
or
out
pop
loopne
popf
loop
jge
add
push
mov
addr16
lds
push
mov
sti
sub
adcl
ret
jnp
pop
xchg
push
mov
sbb
test
addr16
leave
aaa
pop
dec
inc
inc
das
stos
dec
sbb
rol
ljmp
mov
xchg
out
mov
jl
push
daa
ja
jnp
fldenv
in
jecxz
sub
stc
out
jno
xchg
dec
js
mov
push
and
repz
pop
loope
add
mov
ss
jg
pop
sti
add
push
mov
and
sbb
in
out
lret
cli
hlt
gs
mov
jg
xor
in
and
dec
mov
jg
mull
cli
or
cwtl
je
fisttpl
das
push
movsl
mov
mov
dec
jb
test
lcall
testb
out
mov
icebp
shll
fwait
pop
sarl
int
xor
mov
insb
xchg
adc
xor
insb
pushf
mov
fstps
mov
jmp
mov
jno
or
mov
mov
in
push
insl
mov
fidivrs
cmpsb
cli
jae
ss
xchg
push
jg
xchg
or
pop
push
and
xor
jmp
inc
mov
fcmovnbe
mov
rcl
hlt
aad
sub
cld
lret
cmp
insb
aam
mov
mov
dec
mov
mov
mov
mov
pop
xor
mov
add
mov
aam
inc
out
loopne
lret
fcompl
adc
shl
dec
mov
jle
sbb
test
int3
mov
rcll
mov
testl
dec
sarl
addr16
mov
aas
fbld
xchg
clc
mov
xor
lea
enter
test
ret
in
adc
mov
push
inc
fsubs
rcll
in
jnp
mov
jl
mov
mov
push
inc
fcoms
in
jge
adc
test
dec
ja
pop
adc
mov
popa
lahf
dec
sub
inc
push
push
sbb
push
movsb
xchg
jnp
cmpl
popf
fistpll
and
pop
adc
aam
jl
mov
pop
cwtl
mov
cwtl
and
push
test
jmp
js
adc
aaa
shlb
mov
mov
out
jns
pop
imul
xchg
lds
repnz
pop
repz
movsb
pop
sub
xor
cld
adc
dec
dec
jle
orl
lret
sub
in
in
rcrb
xchg
pop
and
and
and
das
stc
mov
lds
lea
pop
stos
and
and
lods
lock
inc
lods
repnz
ror
cmpsb
outsl
cmp
nop
daa
ds
loop
iret
sbb
xchg
and
clc
addr16
outsl
dec
repnz
pop
jae
or
outsl
pop
push
dec
and
push
addr16
loope
xor
sbb
dec
cmp
mov
jnp
ss
enter
pop
sahf
repz
dec
xchg
rorb
and
mov
mov
cmc
mov
jbe
insl
ljmp
imul
ret
jnp
xchg
jecxz
scas
jge
notb
jns
sub
nop
int
test
sbb
cmc
cltd
repz
add
es
cmp
testb
push
int3
mov
in
lret
and
aad
bound
sub
sub
cs
imul
aas
std
and
push
push
or
push
pop
adc
push
lahf
popf
fwait
lea
cmp
mov
cmpsl
mov
popa
and
dec
sbb
imul
dec
jecxz
push
pop
add
push
movsl
xchg
inc
addb
ret
lock
ss
adc
adc
xchg
sub
mov
mov
and
and
fcompl
fs
repz
xchg
ljmp
xor
cld
int3
mov
sub
lcall
sub
push
push
gs
inc
lea
bound
movsb
xchg
jnp
jb
pop
add
sti
movsb
pop
xchg
flds
lcall
fwait
mov
loopne
filds
insl
aam
jecxz
jecxz
push
fwait
mov
imul
add
dec
aaa
es
pcmpgtd
dec
fistl
fstps
gs
mov
fdivl
lea
push
xor
lock
jns
adc
xorl
mov
cmpsl
mov
jns
push
in
iret
push
cmpsl
xor
xor
push
ds
mov
sub
repnz
mov
jo
insl
dec
jmp
divb
in
xchg
dec
inc
test
ds
and
jb
cli
out
xor
jbe
mov
aam
xor
subl
loope
cmp
scas
mov
mov
xchg
sbb
adc
or
out
dec
lea
popf
push
push
sahf
push
std
jp
call
push
shll
add
xchg
addr16
mov
cld
subb
push
dec
and
js
push
and
push
jecxz
gs
push
repnz
dec
cmpsb
mov
push
ljmp
mov
aam
xchg
fdivl
dec
dec
lahf
dec
mov
xor
push
xchg
cld
adc
jb
push
dec
lret
aam
pop
push
add
add
out
lock
mov
sti
rclb
pop
or
adc
stc
push
into
add
icebp
jmp
sti
les
mov
imul
push
sbb
rolb
in
cmpsl
insb
adc
ror
and
or
jns
lds
inc
jl
xor
jp
sbb
and
stc
lods
push
push
ja
bsf
lahf
jp
pusha
cmp
cmp
pop
scas
aad
fcompl
aas
int
sub
notb
xor
les
lods
movsb
cli
cmp
rol
jmp
popa
mov
jg
out
mov
imul
cmpsl
sub
negb
mov
jnp
jno
push
ret
jno
jp
dec
jno
sahf
and
aas
inc
movsb
fisubrs
sub
jle
dec
and
dec
cmp
add
ds
push
sbb
xchg
push
mov
int3
pop
mov
int
int3
popa
loopne
push
cmp
in
dec
jno
lahf
jae
xor
aam
jg
push
aaa
cmp
or
das
insl
ja
stos
data16
jl
je
or
pop
jg
and
mov
shl
push
pop
les
xchg
lods
mov
cwtl
xor
test
dec
fs
inc
inc
jg
or
add
mov
adc
jbe
popa
jecxz
sbbb
sub
mov
add
fwait
and
xchg
and
dec
movsl
out
addr16
mov
pop
daa
fildl
sbb
pop
sub
or
pushf
out
ror
pop
testl
or
outsl
sub
adc
lret
mov
scas
cmp
inc
adc
lods
stc
push
jnp
sbb
aaa
js
dec
inc
ret
jns
jge
adc
in
jl
mov
jb
jp
xchg
fisttps
push
dec
bswap
je
inc
or
push
adc
incl
arpl
cs
xor
push
add
inc
in
in
lock
stos
daa
test
cmpb
aad
lods
inc
ret
cmpsl
jbe
or
addl
pop
inc
test
mov
push
and
imul
mov
cwtl
nop
mov
jne
and
lret
add
les
mov
daa
shlb
fidivl
push
lea
and
and
scas
scas
xchg
mov
loopne
pop
push
dec
pop
ss
or
mov
push
fbld
adc
dec
cmpsb
jne
inc
sbb
and
pop
push
cmp
and
xchg
test
push
das
push
inc
adc
mov
pop
sbb
out
jne
icebp
mov
stos
mov
and
out
ljmp
adcl
sahf
mov
or
mov
call
inc
pop
movl
out
sbb
inc
loopne
sahf
cmp
imul
mulb
popa
and
xor
roll
mov
pop
dec
add
jecxz
std
lea
insw
add
push
adc
cmp
xor
movsl
inc
sbb
mov
mov
jns
fsubrs
or
es
es
pusha
or
xor
cmc
lock
cmp
xor
lods
sahf
enter
xor
push
call
mov
sbb
pusha
push
inc
adc
std
es
cmp
xchg
xchg
add
inc
mov
inc
sbb
adc
fisubrs
jae
push
sbb
push
pop
cmp
into
adc
roll
rclb
sbb
mov
lcall
scas
sbb
sbb
cmp
in
mov
xor
mov
xchg
dec
lds
add
mov
dec
fmuls
sbb
mov
pop
push
je
pop
lret
inc
xchg
mov
pop
push
push
or
je
int
testb
imul
mov
dec
rcl
fwait
loope
sarl
insl
and
xchg
adc
fbstp
out
scas
push
mov
mov
mov
aad
or
enter
test
sub
and
or
and
pop
insl
pop
insl
mov
into
mov
pop
das
pop
sahf
jg
add
call
cld
inc
test
inc
rol
mov
in
aad
hlt
outsb
les
mov
jae
fnstsw
inc
cmpsl
roll
pop
xchg
or
inc
lock
xchg
int
sub
dec
xlat
call
lock
subl
dec
lods
lds
mov
icebp
pusha
aad
loopne
and
stos
mov
and
xchg
sbb
aas
lock
in
or
dec
xchg
lret
fisttps
roll
dec
fsqrt
rcl
jbe
es
movb
iret
add
daa
cmp
cmp
mov
dec
push
xchg
imul
sbb
dec
jge
sarb
mov
in
jno
xchg
mov
ficompl
pushf
movsb
repz
shrb
es
lods
mov
sub
call
push
shl
add
or
scas
xor
jle
jnp
shrb
lea
andl
pop
or
xor
pop
mov
sbb
cmp
mov
std
xchg
cld
cmp
fimull
add
aas
imul
outsl
es
aaa
fwait
sbb
adc
daa
cmc
dec
and
push
roll
mov
fimull
repnz
dec
fwait
mov
xchg
xor
adc
lret
jno
cmc
scas
pop
mov
mov
mov
or
lock
cmp
test
into
sbb
xor
pop
xchg
mov
out
jle
jae
lea
test
cmp
shll
jo
pop
xchg
push
imulb
movsb
dec
cwtl
push
orl
cwtl
mov
mov
sar
adc
loop
sub
into
push
add
data16
stc
xchg
loopne
mov
testb
in
jne
push
test
or
int
add
mov
mov
push
inc
jnp
fnstcw
outsb
movsb
adc
imul
jne
push
mov
xchg
push
push
push
xchg
or
dec
in
xor
xor
cmp
shr
insl
push
inc
hlt
adc
cmp
shl
dec
inc
pop
sti
les
inc
xor
pop
mov
adc
loope
stos
push
loopne
les
shrb
mov
jno
outsl
jmp
out
adc
sub
lods
sub
fwait
mov
aas
xor
movsl
add
jg
sahf
lods
cmc
stos
pop
sub
mov
add
jns
inc
aaa
mov
shrb
adc
jae
push
cmpsb
mov
fstps
repnz
stos
pop
add
movb
arpl
iret
sub
jae
jl
fmul
pop
xlat
sub
inc
add
or
push
outsb
and
mov
hlt
fstp
jae
cmp
mov
push
mov
add
fsubrs
movl
mov
test
push
sbb
sub
jns
hlt
jne
xchg
dec
or
repnz
cmc
pop
notl
int3
inc
fldt
f2xm1
lods
xchg
push
mov
in
inc
popf
fimuls
popa
mov
imul
aad
cmp
sub
mov
adc
fnstcw
cli
or
xlat
lea
and
call
in
lahf
out
dec
cmp
mov
dec
fcoms
add
xlat
jecxz
and
arpl
sbbl
jle
in
adc
jnp
lahf
jmp
mov
cltd
dec
sub
filds
or
push
aas
xor
mov
movsl
movsl
jb
andl
xchg
mov
xor
cmpsb
jg
pop
mov
or
fisttpll
push
insl
mov
movl
clc
lret
push
lds
ja
ficoms
hlt
mov
dec
add
lock
push
lret
dec
sub
fwait
stos
pushf
mov
insl
pop
pop
loopne
in
push
xchg
xor
out
inc
das
lea
aaa
push
jmp
pusha
cmp
out
or
ret
mov
and
pop
push
mov
inc
mov
add
loope
mov
pushf
inc
cltd
sub
sbb
pusha
add
fcomp
push
ror
jbe
jg
cltd
loop,pt
dec
lret
and
jl
fbld
rcrb
inc
sbb
mov
dec
rorb
mov
in
stc
fnsetpm(287
adc
and
and
lods
aad
stc
cs
inc
dec
add
xor
adc
popa
add
inc
clc
fyl2xp1
cmpsb
stc
or
ljmp
pop
sbb
and
fstps
inc
pop
shlb
sbb
pop
imul
pop
fxch
cmp
sub
aam
or
pop
mov
jl
repz
sub
jle
ljmp
incb
jno
loop
icebp
das
clc
jmp
xor
or
cmpsb
jnp
mov
call
pop
or
ja
fs
mov
out
lea
adc
rcll
jl
cmp
push
inc
nop
fistps
jmp
sub
notb
xor
stos
fnstsw
inc
nop
sbb
aas
fwait
jmp
rclb
and
mov
add
sub
aas
mov
jns
bound
sbb
stos
arpl
xlat
rcll
add
inc
dec
ja
cmpsb
or
push
pop
mov
and
aas
sbb
dec
cmp
lods
sbb
dec
xchg
aad
iret
clc
mov
xchg
iret
mov
mov
mov
mov
out
pop
or
dec
js
out
pushf
mov
mov
mov
cmp
xchg
xor
addl
dec
push
inc
arpl
adcb
rcrb
insb
adc
adc
std
and
mov
scas
pushf
push
dec
shlb
dec
adc
or
inc
cld
cmp
pop
mov
ds
icebp
mov
xor
xchg
push
push
addl
inc
scas
push
sub
adc
fistps
pop
cmc
cmp
cmpsb
inc
test
in
dec
ljmp
gs
inc
data16
fildll
adc
dec
jne
mov
sti
mov
sub
push
pop
fimull
xchg
xchg
xchg
sbb
and
orb
and
mov
mov
movsb
pop
nop
cwtl
sub
jb
dec
cmp
push
es
push
call
xor
jb
in
jmp
out
cmp
fsub
pop
outsl
call
fdivrl
pop
or
push
lret
cld
es
inc
push
cmp
push
insl
mov
mov
or
and
xorb
shrb
cmp
ficompl
fsubrl
mov
sub
xchg
mov
xchg
xchg
or
test
shll
popa
pop
mov
mov
into
mov
and
sti
aas
das
scas
pop
mov
add
out
sbb
stos
xchg
sbb
in
jl
cld
repz
notb
mov
xor
ljmp
inc
lods
and
adc
cltd
mov
lcall
inc
add
cwtl
fs
jp
loope
in
in
ds
test
fstpl
sub
adc
cmp
xor
or
pusha
push
loop
xchg
dec
xchg
clc
test
sbb
push
adc
cmpb
pop
push
adc
or
xchg
fcoms
out
mov
pmulhw
iret
mov
add
mov
out
stc
in
mov
and
lods
sbb
imul
rcrb
lcall
rcrl
adc
arpl
dec
add
sahf
xchg
push
inc
push
stos
xchg
add
decb
inc
pop
icebp
or
adc
sub
aaa
loopne
push
sbb
add
ret
sbb
sub
mov
lret
dec
imul
mov
sahf
gs
push
adc
test
jne
pop
pop
stos
push
mov
dec
repnz
outsb
mov
outsb
adc
jno
and
push
cwtl
or
add
arpl
cmp
dec
mull
andl
aaa
push
mov
pop
addl
inc
leave
sti
and
gs
cmpsb
push
inc
sets
dec
sub
mov
out
mov
sub
cli
adc
jl
mov
mov
push
or
es
push
insb
xchg
xor
outsb
popf
xchg
inc
adc
aad
das
sahf
jl
push
testl
stos
pop
lods
pop
out
lcall
call
xchg
or
addb
cmp
push
fbstp
mov
jecxz
push
pop
pushf
sbb
test
sub
dec
xor
in
ret
sub
cs
jmp
out
stc
mov
outsb
pop
outsl
pop
bound
sarb
jmp
gs
xchg
pop
add
stos
ja
leave
and
mov
std
mov
xchg
mov
inc
sub
sbb
push
adc
int
imul
addl
mov
sarl
pop
inc
xchg
iret
ficoms
xchg
or
pop
sbb
xor
inc
inc
int3
in
push
jle
cmpsb
inc
dec
pop
mov
inc
mov
insb
xchg
xlat
xlat
mov
cmpsb
adc
fwait
inc
leave
push
xchg
mov
pop
jmp
cmpsb
repz
repz
out
mov
mov
jno
cmp
or
sbb
icebp
cmpsb
rcl
mov
mov
nop
scas
jp
push
xchg
fs
inc
add
pop
repz
jno
call
ja
push
fldenv
ss
jge
mov
adc
fildl
xchg
jo
xor
sbb
aad
sbb
daa
lods
jecxz
dec
push
and
push
iret
pop
outsb
pop
mov
add
decl
mov
ljmp
lret
add
in
mov
ljmp
loope
sub
and
nop
add
subl
insb
dec
and
xchg
sarl
rcll
jne
or
xchg
sub
das
jg
aam
popa
xor
ret
je
scas
xor
cli
shlb
lods
dec
mov
dec
sbb
loop
cmpsl
out
xorl
imul
cs
lahf
ljmp
sarl
jb
cmpsl
mov
loope
jl
and
inc
testb
gs
sub
and
inc
or
add
int
addr16
xchg
clc
mov
cli
mov
dec
in
xchg
xorl
xchg
popf
faddl
lret
leave
mov
rorl
insl
call
outsb
xchg
xor
inc
and
mov
and
nop
lcall
xchg
in
adc
jl
inc
jnp
scas
jne
clc
dec
mov
idivl
jae
mov
xchg
pop
add
lds
das
mov
xor
push
mov
out
mov
arpl
negb
mov
sub
repz
cmc
push
or
insl
mov
xor
push
xor
mov
pop
pop
fildl
sbb
out
test
loopne
mul
cmp
cmp
cmp
into
in
dec
xchg
sbb
mov
xchg
nop
cli
mov
cmp
jmp
jbe
fisubrl
cli
cmpl
out
mov
in
loop
mov
jle
mov
les
cli
jp
in
push
mov
add
les
lods
xchg
call
xchg
decb
jmp
xchg
mov
cmpsl
leave
popa
lds
cld
fimuls
pop
mov
xchg
das
xchg
insb
mov
lods
add
or
mulb
shl
inc
fs
mov
in
cwtl
shr
movl
or
mov
rcr
adc
sbb
outsl
dec
cmp
jae
pusha
xchg
mov
xlat
push
cli
add
mov
push
dec
js
stc
lret
rcrl
test
sub
mov
adc
cmp
and
popa
jbe
gs
repnz
addr16
lcall
jle
cmc
out
je
sub
inc
xchg
gs
pop
mov
cmp
jle
push
clc
nop
fstpl
hlt
jo
filds
shrb
stc
xchg
inc
push
mov
add
sbbb
push
icebp
mov
xchg
in
fs
in
push
pop
iret
xchg
cwtl
push
dec
outsb
jne
fmulp
pop
sub
fneni(8087
sar
test
jmp
fcmovnbe
loope
push
mov
sti
mov
and
mov
loope
sahf
test
fs
push
dec
inc
es
mov
jg
push
pop
xor
or
insl
mov
stc
adc
dec
or
outsl
addr16
xchg
mov
xchg
int3
xchg
fwait
pop
dec
sub
sub
mov
test
jb
std
push
movsl
pop
or
repnz
lea
notb
sbb
jecxz
pop
mov
arpl
js
sarl
pop
push
inc
stos
push
mov
and
aas
bnd
mov
ljmp
fbld
pop
inc
inc
fwait
jne
js
adc
scas
call
dec
mov
leave
addl
jle
push
fs
ds
jmp
pushw
inc
xchg
cmp
inc
cmpsb
sar
jmp
pop
sahf
adc
cmpsb
adc
lds
popf
cld
or
rcrl
mov
xchg
std
sahf
insb
fsubl
sub
xchg
inc
cli
dec
popw
out
imul
jmp
push
loop
adc
ljmp
pop
fistl
pop
sub
aas
aaa
repnz
cmp
shll
adcb
mov
cli
cmpsb
or
mov
mov
jg
mov
and
pop
fsubr
push
sub
jnp
push
shr
or
ficompl
push
clc
sbb
or
mov
outsb
pop
mov
lods
jmp
inc
shlb
sub
xchg
xorb
xchg
and
mov
ret
ja
xchg
jge
adc
stos
xor
inc
pop
and
popa
test
dec
push
jg
xchg
inc
mov
sti
xchg
or
xchg
stc
pop
in
adc
ljmp
je
outsl
test
fsubl
or
xchg
in
scas
adc
fmull
cs
pop
test
cli
push
aad
add
mov
imul
inc
mov
clc
mov
es
fsubrl
inc
std
movzbl
cltd
xchg
jae
push
sbbb
xchg
or
jbe
mov
sets
and
lret
sbb
xchg
aad
mov
mov
mov
sub
cwtl
lods
add
pop
xchg
pushf
mov
insb
repz
mov
add
lods
data16
stos
push
mov
pop
and
mov
push
outsl
jo
push
jecxz
mov
mov
pop
mov
ljmp
insb
das
mov
out
mov
pop
aam
test
sbb
add
ret
stos
inc
in
lds
jae
movsl
mov
mov
adc
jl
cli
mov
dec
dec
in
daa
iret
sbb
inc
adc
sti
adc
loop
aas
xor
imul
test
imul
push
mov
lahf
into
outsl
and
lret
push
es
dec
test
cmp
sti
jecxz
dec
ret
push
mov
rcll
inc
sarl
and
mov
mov
mov
sub
int
iret
rclb
cmp
push
es
repz
push
aaa
jecxz
mov
ljmp
andb
fidivrl
cmp
jne
mov
movl
jle
idivl
scas
mov
inc
xchg
pop
lahf
bnd
es
ss
popw
and
xchg
or
mov
mov
mov
fcomi
or
fwait
cmp
dec
pop
xchg
adc
pop
or
or
push
cmpsl
mov
mov
mov
jne
sbb
sub
jo
xor
add
test
or
aaa
fdiv
ds
xchg
shll
pop
cli
push
mov
push
mov
frstor
add
aas
pop
stos
cld
push
sbb
movsb
out
out
inc
rorl
negb
pop
mov
loopne
and
pinsrw
xchg
sahf
push
rcrb
arpl
aas
push
icebp
dec
stos
cmc
cs
pop
mov
shlb
or
mov
fnsave
or
dec
pop
insl
xor
mov
aas
adc
adc
push
dec
sbb
sub
ret
outsb
cli
sbb
int3
insb
cmp
vmovd
xor
out
enter
movsw
sbb
adc
mov
fstps
pop
or
mov
and
mov
cmp
in
xchg
aam
and
mov
mov
stos
cmp
lds
sub
addl
and
xor
call
pop
push
fnstsw
xchg
inc
xchg
icebp
add
dec
jp
cmp
rcll
outsl
dec
and
xor
pop
jb
pop
and
push
pusha
mov
dec
xlat
aaa
into
clc
xchg
jg
test
jnp
out
es
push
push
xchg
jecxz
mov
clc
and
sbb
aaa
fsubr
or
xchg
xchg
sbb
xorb
shr
mov
sbb
push
sub
jmp
mov
xchg
shl
orl
push
inc
bound
sub
push
pop
int
jno
cmpsl
mov
iret
arpl
lods
into
out
lods
aad
adc
mov
inc
dec
add
cs
fisttpl
imul
in
call
fcmovb
lret
insb
mov
inc
cmpsb
push
pop
inc
dec
pop
test
fcoml
jne
xchg
add
add
dec
lock
lea
xor
out
fsts
push
pop
rclb
inc
add
imul
bound
dec
orl
mov
js
jmp
pop
dec
xchg
fcmovu
fcompl
je
loope
push
cmp
jl
mov
data16
jecxz
sub
pusha
mov
imul
pop
out
in
ds
fs
adc
sbb
xchg
sbb
out
or
sahf
mov
xor
lahf
add
lds
out
scas
lods
inc
hlt
fnsave
mov
int
insl
push
mov
movsb
push
lods
lods
mov
lea
cmp
cmp
movsl
test
cltd
orl
mov
das
out
bnd
repz
jp
insl
jmp
std
outsl
addb
int
loope
inc
in
mov
or
sti
xchg
loop
sub
shl
mov
sub
sub
add
cmp
push
push
gs
test
xlat
rorb
mov
push
sub
sti
xchg
ss
sub
mov
xchg
inc
dec
sbb
loopne
gs
jg
fmull
sub
out
gs
cwtl
mov
roll
sbb
dec
out
scas
sub
mov
imul
in
jbe
xchg
pop
pushf
loopne
int3
mov
jle
jle
cmp
pop
dec
mov
sub
je
and
mov
lods
fmull
cld
and
push
lods
aas
dec
or
das
lea
lods
pop
mov
xor
sahf
push
repz
test
mov
inc
sub
das
push
insl
dec
leave
jb
push
dec
lret
stc
mov
sbb
sub
push
cmp
push
outsb
push
mov
rorl
imul
mov
aam
imul
pop
ja
xor
sbb
inc
and
mov
jp
push
jbe
or
add
push
cmp
xor
xchg
dec
imul
cmp
outsb
lds
xchg
and
mov
pushf
or
mov
cmpsb
in
int
xchg
fidivs
mov
cmp
jns
dec
notb
scas
push
ficoml
xchg
jecxz
sub
stos
aaa
pop
jo
pop
mov
xchg
mov
mov
cmpsl
pop
daa
push
pop
cmp
stos
cld
xchg
xchg
test
mov
sbb
idivb
into
xor
lcall
mov
add
and
mov
push
xchg
mov
inc
aam
or
sbb
insb
xchg
jno
dec
xor
adc
bound
cmp
cmp
mov
test
or
mov
cmp
xor
bound
adc
mov
push
mov
iret
out
mov
in
mov
mov
sub
ret
pushf
test
sub
xchg
lret
sbb
mov
inc
mov
std
lret
cmp
sar
js
out
cmp
bound
and
ret
jne
lahf
in
ljmp
imul
push
add
outsb
fldt
lods
inc
dec
dec
mov
push
stos
gs
fsubrl
cmc
jl
adc
mov
loope
fstpt
imul
aad
ss
cs
idivl
mov
mov
push
mov
out
mov
roll
addr16
dec
add
sti
push
icebp
xor
leave
fs
push
idivl
and
mov
mov
repz
mov
orl
sub
adc
cmc
out
out
sbb
jle
out
fs
push
mov
dec
inc
sub
testb
push
lahf
pusha
scas
test
cmpsl
dec
rep
pop
push
sbb
fwait
in
mov
sub
stos
lret
cltd
mov
test
in
shll
and
inc
int
xchg
loopne
push
inc
mov
mov
pop
mov
jae
mov
aaa
loopne
push
or
and
gs
jno
xchg
cmc
lock
jb
out
mov
jg
mov
shll
dec
cmp
jg
adc
sbb
mov
xchg
scas
sahf
fcmovu
test
sbb
loopne
dec
aaa
or
push
sbb
sub
lahf
loop,pt
insb
test
stc
movsb
in
mov
scas
jae
mov
mov
pop
pop
int3
outsl
dec
aas
mov
jne
jge
cmpsb
mov
dec
mov
test
bound
shrb
es
jmp
mov
push
xor
test
hlt
jae
xchg
das
scas
lahf
dec
int3
imul
ret
daa
sbb
cld
push
mov
sarb
lods
xor
pop
stos
add
and
nop
xor
sub
xchg
test
mov
movsb
mov
push
push
mov
or
cmp
das
push
pusha
aaa
fcmovnu
out
cwtl
push
jge
jns
push
cmc
lahf
jnp
testl
adc
or
imul
cmp
mov
push
je
ja
scas
aas
mov
cmpsb
out
fidivrl
xchg
stos
dec
ljmp
or
pop
sbb
inc
push
fsincos
or
pop
mov
scas
loop
aad
push
and
dec
rcr
je
iret
sbb
cmp
js
mov
xchg
les
dec
lret
xchg
loop
sub
xorb
loope
ret
in
adc
mov
cmc
sbb
and
mov
repz
inc
out
das
dec
adcb
fwait
xchg
stos
insb
ljmp
pop
sbb
scas
pop
loope
inc
and
aas
and
std
pop
loope
push
jnp
leave
ret
movsl
and
pop
pop
and
call
scas
cmpsb
loope
ss
xchg
test
or
mov
outsb
addr16
cld
xchg
sti
lea
out
and
jecxz
aas
les
pop
lods
daa
sub
jns
add
mov
in
pop
jl
dec
dec
lds
icebp
pop
sub
sbb
mov
outsb
hlt
jp
leave
loopne
xchg
out
test
sub
lahf
mov
mov
outsb
fisubl
adcb
shll
in
int3
push
xchg
divl
or
mov
fstpt
leave
cmpsb
je
mov
movsb
fidivl
fdivl
sub
xchg
aam
mov
lods
popf
lods
dec
mov
jbe
fs
xorl
lcall
mov
int
pop
push
out
pop
testl
imull
jmp
xchg
xor
mov
cmp
dec
or
inc
out
les
out
push
inc
ret
sarl
loopne
mov
and
mov
lret
add
lds
and
lret
push
push
mov
dec
fbld
lahf
out
cwtl
in
jle
pmuludq
ds
mov
inc
xchg
inc
and
stos
push
pushf
in
or
pusha
add
or
cmc
pop
int
push
inc
jnp
cmpb
mov
loopne
dec
xor
mov
cwtl
aam
mov
clc
cmpsl
add
pop
idiv
pop
xchg
mov
mov
stos
sbb
and
loop
pop
mov
pop
mov
addr16
scas
pop
mul
cmp
pop
and
fsub
sub
decl
test
sti
scas
fdivrl
mov
popa
pop
pop
push
cmp
cs
xor
in
stos
inc
movsb
push
mov
imul
in
pop
mov
dec
mov
mov
push
pop
nop
imul
mov
and
push
dec
and
pop
xor
jbe
stos
dec
cmp
in
mov
in
push
sti
dec
sti
loope
xchg
shll
sub
cld
out
sub
fwait
xor
scas
sub
cmpsl
rorb
addr16
out
adc
jl
cmp
add
out
jns
insl
add
in
mov
xchg
orb
fs
shll
out
std
mov
iret
mov
ficoml
adc
and
cmp
mov
pop
ret
stos
fisttps
fidivs
ljmp
pop
xor
jnp
jb
push
les
imul
or
lahf
outsl
jne
int3
and
enter
movups
out
jg
mov
adc
scas
adc
test
mov
shrl
stc
pop
sub
xchg
cmp
movsb
mov
pop
xchg
outsl
lret
mov
sbb
data16
scas
and
sub
dec
inc
pop
push
mov
insl
and
lock
and
pop
lock
loope
cmpsb
cmp
mov
inc
inc
mov
fcmovbe
das
test
in
cld
mov
mov
mov
iret
repnz
daa
push
mov
fs
push
or
rolb
scas
test
mov
popf
lods
and
mov
mov
test
mov
xor
std
pushf
lea
ds
es
add
leave
stc
nop
sub
pop
inc
mov
test
sbb
cmp
rclb
sbb
mov
push
sbb
rol
pop
inc
out
xchg
nopl
pushf
mov
add
add
sti
ja
dec
loop
ret
mov
push
pop
sbb
jnp
dec
in
ror
dec
lret
movsb
or
fwait
cmpb
test
arpl
cmp
in
daa
movsl
das
dec
div
jno
cmp
decl
shlb
adc
aam
in
lret
shll
adc
lods
push
lock
cmp
dec
mov
sub
gs
mov
add
adc
rorl
xor
mov
push
inc
lcall
stos
fnsave
cwtl
adc
cs
outsl
es
pop
mov
xor
movsb
stos
mov
hlt
je
movsb
jmp
icebp
sti
imul
jbe
jne
fisubrs
cmp
fs
shrb
mov
mov
dec
sbb
jno
jno
nop
and
dec
jnp
pop
movsl
pop
stos
jno
dec
push
lods
mov
or
daa
xor
mov
sbbb
pop
out
mov
cmpsb
stos
sub
inc
jg
arpl
clc
jmp
pop
mov
int3
into
xlat
mov
pop
and
rclb
das
leave
in
push
mov
ret
jmp
adc
outsb
adcb
rorb
mov
dec
xchg
cmc
jl
jbe
lret
sbb
dec
test
dec
pusha
lcall
jl
neg
jg
into
dec
lea
xchg
xor
adc
jnp
cmc
dec
loope
mov
pushf
push
sbb
sub
repnz
sbb
ja
lahf
mov
jb
cltd
fs
mov
mov
cmpb
insb
rcr
push
loope
into
push
cs
jmp
and
lret
inc
mov
imull
xchg
mov
fisttps
shrb
out
sti
adc
xchg
mov
stos
pusha
jl
push
popf
inc
add
mov
xchg
sub
dec
pop
push
cmp
scas
mov
repnz
cmp
cli
fnstcw
xchg
push
imul
xchg
fsubrs
xor
in
or
movsl
icebp
popa
cmp
xlat
pop
add
and
push
pop
dec
jecxz
mov
out
leave
sub
scas
js
adc
jecxz
xchg
sub
push
daa
inc
jo
je
cmp
test
std
mov
lds
aad
orl
notb
pop
mov
sbb
push
js
sub
push
ret
mov
xchg
push
scas
mov
aam
jp
sarb
addr16
sub
mov
push
mov
or
pushf
fimuls
push
in
mov
mov
cmp
or
sbb
daa
or
mov
jmp
jp
jmp
in
fimuls
sbb
js
call
mov
cmp
jl
inc
mov
push
ftst
addb
push
dec
jg
fiadds
mov
aaa
gs
iret
adc
in
xchg
sub
imul
pop
push
fstpt
rorl
mov
clc
je
movb
jbe
sahf
cmpsl
scas
rclb
push
rclb
cltd
imull
mov
xor
sub
jmp
cmp
sbb
push
and
fdivr
sbb
cmpsl
shrb
push
fistl
fucomip
dec
mov
adc
int3
jne
lock
test
fnstsw
mov
test
pop
stos
sahf
aas
adc
and
ds
cmp
jns
stos
jg
mov
xchg
mull
sub
fwait
mov
cmc
bound
add
ss
in
popf
lret
push
jae
mov
or
aad
mov
fcomps
pop
xchg
aaa
add
mov
mov
faddp
push
out
test
clc
cmc
call
push
pop
inc
jnp
dec
dec
inc
shlb
hlt
push
ds
xchg
push
stos
rolb
and
inc
insl
xor
mov
lcall
mov
lock
cmp
xor
inc
std
jl
xor
clc
scas
adc
scas
fwait
pop
push
ret
add
das
inc
adcl
rorl
loope
cli
fnsave
loope
cwtl
inc
push
mov
mov
repz
ss
or
fsubl
scas
push
push
mov
int
addr16
scas
nop
adc
inc
lods
sub
std
or
add
negb
lret
jl
cli
cmp
mov
fwait
push
mov
daa
shll
testl
mov
daa
adc
and
jl
mov
xor
andl
lods
lds
pop
lcall
add
jno
pop
int3
hlt
mov
lahf
dec
mov
popf
insl
pop
xchg
push
cmp
jne
stc
pop
or
clc
stos
leave
pop
loopne
jns
les
xchg
test
daa
adc
inc
or
repz
xchg
cmp
lret
je
push
pop
and
iret
in
sahf
cmp
les
cmpsl
movsb
cwtl
jne
sub
imul
jbe
add
std
dec
pop
popa
pop
dec
fwait
jmp
cs
xor
fldt
arpl
cmp
in
push
cmc
jno
or
xchg
jae
shlb
inc
xchg
sub
lret
push
mov
add
fcmovne
push
sbb
shr
test
sbb
jle
in
loop
je
lds
inc
out
adcb
mov
mov
cs
add
icebp
into
mov
cmp
movsb
or
jae
adc
fwait
sub
mov
inc
je
jp
xor
or
xor
inc
test
sti
push
dec
mov
add
mov
imul
xchg
dec
inc
jp
push
lret
xor
push
sub
dec
das
aas
cmpsb
in
jb
mov
add
cmp
fstpl
lcall
decl
add
mov
jno
xchg
fcmovnb
inc
pop
in
dec
bound
jns
add
push
mov
cwtl
in
xor
and
out
leave
imul
fstpl
mov
bound
pop
push
movsb
push
inc
pop
mov
inc
jmp
mov
sbb
fbld
outsb
xlat
sub
fsubrp
inc
cmpl
mov
mov
or
fdivr
mov
jo
xor
gs
jne
inc
out
dec
cmp
jl
das
scas
dec
inc
fcmovnb
mov
pusha
mov
jae
aaa
rol
xchg
dec
lods
pop
lret
in
pop
ljmp
dec
dec
and
leave
mov
faddl
in
xor
dec
add
mov
xor
hlt
dec
mov
fadds
xchg
pop
dec
or
jge
adc
adc
mov
pop
lods
repz
sbb
outsb
dec
shl
xchg
test
lds
test
sbb
sub
cmpsb
mov
dec
mov
outsb
imul
ljmp
aad
rcrb
adc
add
adc
jnp
in
psrld
jno
hlt
rorb
rorb
mov
mov
leave
adc
std
test
aaa
leave
mov
and
cmpsl
or
jmp
scas
jb
push
or
cmp
scas
mov
fsubl
scas
cwtl
adcl
and
xchg
scas
inc
aaa
and
rcrl
inc
pop
pop
test
sbb
orl
dec
xchg
mov
add
aam
or
jg
jle
hlt
lods
into
loopne
adc
shl
and
xchg
push
mov
sub
cmp
push
aas
mov
sub
shrb
je
inc
or
cmp
mull
and
jne
scas
push
aam
icebp
pop
addr16
hlt
lcall
mov
cmp
jl
mov
addl
xchg
add
fadds
les
push
inc
adc
inc
push
inc
icebp
fimull
popl
mov
lock
pop
stos
xlat
lock
testb
xchg
adc
and
scas
jns
lret
mov
push
ror
adcl
push
test
test
call
mov
testb
fidivs
cltd
pop
pushf
and
add
mov
shrb
sbb
add
in
stos
xlat
shl
test
add
cmpsb
mov
test
push
xor
or
push
data16
stos
shlb
leave
mov
pop
inc
into
mov
sbb
ljmp
or
shll
shrb
and
mov
inc
in
aas
pusha
outsb
push
sub
mov
add
fwait
and
xchg
sub
jmp
out
sahf
add
push
pushf
sub
adc
fidivrs
sub
bnd
pop
lods
mov
mov
fildll
imul
dec
mov
ss
into
testl
mov
out
mov
pop
sbb
add
sbb
and
ret
sub
jle
cmp
aas
xchg
je
jp
jmp
lds
xchg
lcall
mov
mov
mov
in
cld
push
jp
fistpl
xor
or
fidivrl
ficompl
inc
push
xacquire
jmp
int
xor
dec
jns
mov
addl
in
pop
dec
aaa
push
mov
sbb
imul
sbb
stos
ret
mov
mov
add
daa
jnp
xor
mov
fisttpll
ret
das
mov
mov
dec
xchg
jns
cs
and
lcall
cltd
mov
xor
lds
mov
cmp
lods
pop
push
pop
add
ss
sbb
lods
xor
add
push
lods
pop
orl
ljmp
inc
sbb
pop
popf
cmp
jnp
fisubrs
xchg
pusha
out
sqrtps
je
dec
mov
add
add
sbb
rcr
data16
jmp
cld
xorl
out
mov
add
lahf
xchg
rcrl
add
ja
mov
sarb
mov
arpl
adc
mov
jnp
sbbl
inc
push
cltd
dec
scas
push
push
out
pop
dec
jns
push
xor
jmp
xchg
jl,pt
sub
test
popf
divb
mov
leave
mov
pop
mov
jb
andl
adc
mov
cmp
rorl
test
push
les
clc
lds
or
dec
fwait
andl
stos
mov
push
sub
mov
ret
xchg
scas
jge
sbb
mov
pop
lods
mov
or
jb
mov
ficoml
sarl
adc
movsb
mov
jge
or
int
xorb
ljmp
xor
mov
pop
int
dec
sbb
cmp
lahf
and
testb
in
addb
out
mov
jno
scas
mov
test
xor
sub
cmc
add
cs
push
xor
adc
xchg
test
in
repz
pop
push
pop
aad
cwtl
int3
xor
pop
and
sub
into
dec
popa
sub
in
pop
pop
mov
add
imul
sbb
sbb
push
bound
push
ljmp
pop
xor
mov
lock
xlat
popf
cmp
pusha
in
dec
add
cmp
xlat
mov
adc
sub
mov
andl
ret
xor
sub
mov
repz
mov
cmp
dec
fisubl
int3
fldcw
aam
cmp
cmp
out
adc
in
sti
xchg
sbbl
cmpl
adc
dec
mov
and
shll
hlt
jo
sub
incl
ljmp
cwtl
aam
mov
sbb
in
jecxz
test
push
out
mov
lret
cmp
sbb
clc
jne
mov
jb
mov
les
sub
xchg
or
xchg
sarl
sub
scas
and
xor
pop
add
repz
iret
fnstcw
cli
or
sbbl
xlat
addr16
mov
rorb
push
ljmp
jb
mov
jle
mov
xlat
rorb
in
inc
add
inc
inc
out
mov
adc
dec
jle
xorb
sarb
sub
push
xor
clc
pusha
adc
jg
pop
cltd
jecxz
sbb
sti
or
mov
into
push
xchg
jns
jb
aad
hlt
movsl
pop
inc
sbb
cmp
lods
push
and
cmp
fisubs
fldt
pusha
mov
fists
pusha
arpl
sub
jnp
jae
xchg
dec
jle
fdiv
movsb
fistpll
push
sub
mov
and
sarl
leave
js
stos
std
movsb
xchg
mov
xchg
add
dec
mov
in
pusha
ljmp
enter
repnz
lods
iret
jne
js
mov
repnz
sbb
xlat
push
and
push
hlt
sbb
add
fsubrp
jbe
cwtl
push
cmp
adc
jle
inc
pop
test
pop
fisubs
mov
mov
and
in
pop
sub
dec
push
xchg
sahf
int3
int3
jns
cmp
or
jo
sub
jbe
mov
movsl
mov
sub
cmp
xchg
sub
fistpll
or
mov
mov
int3
repz
fisubl
adc
imul
mov
pusha
rcll
push
mov
ja
movups
jno
pop
jae
jns
push
cmp
mov
shrb
adc
mov
pop
sub
cs
test
repnz
das
add
pop
sub
pop
push
dec
adc
push
fistpl
xor
and
data16
cli
add
xor
inc
mov
sub
push
mov
xor
pop
xchg
push
fs
lret
sarb
add
xchg
call
cltd
inc
dec
dec
lea
imul
fistl
bound
scas
mov
mov
sbb
and
fidivrl
push
adc
adc
insl
xor
add
cs
cmpps
xchg
adc
lcall
or
and
fptan
mov
xorl
out
mov
in
out
test
mov
cmp
xor
es
lods
xchg
xchg
loop
pop
test
jne
ret
mov
push
dec
dec
ficoml
addr16
mov
hlt
popf
inc
adc
cmp
lds
mov
push
push
jg
hlt
sub
mov
xchg
adc
mov
lock
push
repz
adc
repnz
loop
push
cld
and
mov
aaa
or
mov
mov
cmp
xor
jl
dec
xchg
movsb
add
jmp
fwait
xchg
fiaddl
mov
scas
repnz
outsb
iret
stos
stc
push
cs
and
les
daa
fadd
jl
lods
mov
xchg
jle
iret
push
insl
ret
jns
bound
and
xchg
lods
mov
je
popa
int3
inc
inc
pextrw
aaa
imul
mov
test
lds
stc
push
and
adc
xor
rcrb
icebp
push
aaa
bound
mov
rep
cld
push
jp
xchg
add
sub
mov
jecxz
jbe
lods
pop
xchg
push
frstor
pop
inc
xlat
iret
sub
jnp
lret
hlt
mov
std
or
popf
out
adc
jle
jmp
add
sbb
lahf
adc
inc
adc
out
bound
push
add
sahf
scas
das
iret
mov
test
ret
xchg
pop
adc
or
fstpl
add
mov
mov
push
int
add
cmpsl
mov
push
inc
push
roll
movsb
cmp
dec
xor
cs
gs
sahf
pusha
clc
outsl
rcrl
mov
loop
js
lods
add
out
add
jae
xor
lret
pop
test
std
sub
in
pop
push
push
sbb
cmpsb
fmuls
push
or
xor
push
jbe
jmp
jmp
lahf
add
insb
lea
sub
aam
lock
push
lahf
xchg
pop
push
sub
ret
imul
jmp
flds
xor
scas
pushf
pop
dec
incl
pop
in
imul
in
out
xchg
aaa
push
xchg
subl
popa
or
push
ret
std
ficompl
xchg
xchg
push
mov
xchg
pop
jno
xchg
cmp
lret
push
cmp
pop
gs
gs
in
fnstsw
repnz
push
call
add
adc
lret
push
movsb
repnz
push
js
pop
add
xorl
mov
push
push
mov
js
jle
cmp
inc
and
dec
pop
lods
cmc
test
loope
pop
loop
push
and
or
je
sub
test
jmp
mov
dec
repz
clc
lds
inc
add
sub
or
mov
jae
imul
jbe
rcrl
sbb
xchg
or
dec
dec
in
ret
dec
add
in
std
pop
lods
adc
mov
adc
ds
or
loope
sub
xchg
insl
xlat
jns
mov
lea
rcrb
lock
addr16
aam
js
or
xchg
sbb
lahf
ficoms
sti
insb
outsb
aam
addr16
mull
cmp
hlt
cltd
adc
add
les
pop
loop
mov
jb
xlat
popa
xchg
adc
pushf
les
pushf
jmp
fldenv
pop
or
fs
popa
inc
popa
jle
outsl
fisttpl
jge
pop
arpl
xchg
or
out
mov
scas
pop
inc
push
nop
and
adc
or
dec
mov
aad
bound
xchg
push
xchg
imul
pop
es
xchg
aam
shlb
cmp
lock
push
push
movsl
sahf
sub
or
jo
cmp
sbb
fnstenv
jno
jg
pop
and
dec
add
cmp
lret
or
xchg
add
pop
inc
mov
adcl
mov
int
add
xchg
imul
pushf
pop
jle
out
jp
xor
pop
jnp
addr16
pop
mov
fisubrs
add
and
aaa
inc
jmp
repnz
cwtl
out
sbb
data16
xchg
out
xchg
push
out
pop
sti
or
cmovae
pop
repnz
xchg
aam
fildl
mov
or
jno
pop
mov
icebp
pop
in
dec
into
out
cmp
rcrb
or
test
jns
cmp
dec
sbb
and
sub
fs
out
and
out
sahf
out
in
insb
int
hlt
cmp
jmp
test
xlat
cmc
mov
jo
nop
arpl
cmp
aam
mov
pop
jbe
out
stc
lahf
push
xchg
push
cmpb
jae
clc
mov
cwtl
in
sub
inc
jno
and
jo
add
pop
mov
sub
xor
push
inc
mov
rcrb
nop
cmp
fs
ret
inc
cwtl
pop
add
dec
or
mov
mov
cmpsl
in
mov
ret
xor
cld
sub
mov
adc
jge
mov
xor
push
shlb
sub
lods
ret
das
sahf
cmp
lahf
loopne
cli
xor
push
enter
sbb
mov
into
inc
das
push
scas
pop
sub
clc
dec
cltd
xrelease
pop
scas
ds
addl
mov
movsb
outsb
mov
mov
clc
in
push
or
mov
cmp
sub
lahf
stos
pop
mov
sub
inc
ds
inc
push
fbld
push
rcrb
inc
jno
iret
pop
loope
les
mov
sbb
sub
bound
pop
popf
shll
ds
push
mov
pusha
sub
subl
push
and
xchg
pusha
mov
jae
les
je
out
ss
mov
sub
shll
jmp
fsubrp
fistps
repz
push
jns
inc
out
pop
dec
jnp
push
xchg
mov
cmp
xor
enter
cltd
jg
pop
or
push
push
ret
sbbb
inc
inc
sub
repnz
and
inc
stos
jg
fwait
shl
push
mov
inc
ja
mov
jecxz
sahf
fcmovnu
xchg
out
sub
in
dec
ret
adc
stos
mov
imul
inc
test
push
shrl
cmp
xchg
mov
sbb
pop
arpl
stos
fsubrl
test
sbb
rorb
push
add
sbb
dec
cmpsl
insl
sbb
rorb
push
sbb
mov
jb
cmpsb
push
cmp
scas
or
je
sti
ds
jnp
pop
xor
mov
aaa
or
loop
popa
cmp
rolb
pop
mov
popa
xor
sbb
mov
shlb
push
scas
jmp
clc
jl
movsl
pop
sti
aas
add
pushf
lods
shll
jno
or
jnp
sub
fwait
mov
ja
mov
mov
or
adcl
and
mov
jno
xor
push
xchg
rcll
nop
ret
or
es
and
or
inc
hlt
enter
leave
xor
fs
shrl
fisttps
imul
jae
dec
xchg
mov
divps
movsl
dec
movsb
push
push
lds
rcr
push
pop
insl
sar
mov
jge
lret
pop
sbb
mov
inc
jp
int
pop
mov
shrb
xchg
dec
fs
push
aam
daa
push
icebp
cwtl
mov
aad
xlat
xchg
sub
mov
push
lods
sahf
or
mov
mov
pop
sub
mov
jp
xor
adc
xor
lahf
xor
ljmp
inc
adc
lods
push
mov
test
in
mov
cli
pop
insb
ret
inc
idiv
inc
je
adc
mov
fwait
cmc
and
call
cld
outsl
push
insl
push
xchg
popa
adc
push
imul
movsl
loope
aas
mov
incb
movsl
add
andb
icebp
mov
lods
mov
mov
mov
aad
mov
mov
xor
hlt
mov
orb
stos
push
lret
test
jno
fwait
cmp
push
jne
imul
fisttps
popf
mov
in
rcrl
push
xor
jno
dec
xchg
push
add
or
stos
xor
inc
xchg
inc
les
lahf
cld
loop
mov
fs
and
adc
adc
lock
icebp
bound
xchg
imul
dec
xchg
sub
daa
imul
lcall
insb
bound
lock
jno
add
aad
das
jl
popa
daa
movsb
stc
inc
push
inc
pushf
movsl
les
pop
xchg
adc
inc
pop
mov
mov
or
xor
ljmp
xchg
daa
jl
xor
inc
mov
pop
and
test
jge
or
shr
xchg
cld
int3
mov
inc
dec
jmp
add
test
js
out
mov
dec
inc
lcall
sbb
pop
aam
fisubs
cmp
fbld
movsl
loopne
loopne
dec
popf
je
pop
mov
adc
or
jnp
or
rcr
addr16
adc
and
pop
sbb
daa
iret
mov
imul
pop
cmpsl
pop
cmp
je
enter
std
fisubs
pop
mov
jmp
mov
inc
inc
xor
test
into
xor
pop
ljmp
andb
aaa
jmp
cmp
popf
jg
dec
ficompl
ss
xchg
and
pop
addr16
push
icebp
jb
sbb
xchg
movsl
popa
sti
add
add
push
sbb
int
mov
in
mov
popf
dec
inc
mov
adc
dec
sbbb
std
push
or
xor
outsb
and
add
test
fnstenv
imul
sub
jp
push
mov
inc
mov
add
sti
xchg
xchg
or
adc
xchg
sti
fcomi
fstpl
cmp
cs
inc
push
push
push
test
lret
in
mov
add
jno
and
lret
rcrl
pusha
mov
sahf
jb
or
push
mov
mov
sbb
es
leave
inc
sbb
xor
mov
out
push
aas
leave
emms
sahf
pop
sub
ljmp
dec
jp
lock
adcl
into
jmp
dec
inc
shl
mov
push
int
push
mov
or
lods
jne
popf
fstpt
insb
std
adcb
adc
ret
inc
xlat
int
jb
jle
into
outsb
scas
dec
lcall
adcb
cmp
frstor
cmpsb
ret
div
scas
int
in
enter
loopne
std
dec
dec
mov
xorl
and
jle
roll
mov
add
mov
add
inc
cmc
outsb
jno
and
inc
testb
les
cmp
cmpsl
jae
adc
test
xlat
xor
rcrl
aaa
mov
icebp
sahf
jb
jmp
lods
aad
mov
sub
imul
rcrl
in
lcall
push
mov
xchg
ss
xchg
xor
inc
mov
repz
adc
jg
push
cmp
ret
in
cmp
cmp
adc
pop
inc
mov
pusha
pop
sbb
xchg
lods
loope
xchg
insl
outsl
addps
mov
mov
sub
mov
das
movups
shlb
cs
push
scas
mov
xor
stos
fs
jo
fdivrs
std
inc
mov
ja
repnz
arpl
ret
pop
mov
sub
pop
cmp
int3
rolb
mov
sbb
fwait
jl
mov
mov
stos
mov
mov
and
xor
enter
pop
testb
shl
jp
gs
out
cmp
imul
xchg
xor
lret
mov
fsubrl
pop
leave
mov
and
gs
fwait
in
sti
dec
xor
test
jecxz
and
mov
sub
in
pop
lock
insb
jle
ret
mov
popa
leave
subl
shl
repz
adc
dec
sub
cli
inc
ljmp
mov
push
ds
into
lcall
lret
push
xchg
cli
fs
test
enter
and
xchg
add
outsl
xor
stc
sbb
lock
jmp
push
sti
lea
test
fsubl
jge
mov
sbb
add
cs
adc
sbb
mov
lret
in
adc
pop
and
hlt
movsl
js
inc
lds
lret
repnz
push
pop
jae
pop
fs
fwait
sbb
es
jecxz
sub
rorb
push
call
dec
orb
add
pop
jo
outsb
and
mov
add
mov
ja
inc
lds
mov
jge
inc
and
and
mov
fmuls
cli
add
lods
mov
out
inc
int3
xor
lods
es
cmpsb
pop
add
movsb
cltd
pop
testb
mov
sub
inc
jle
xor
mov
inc
jno
mov
mov
push
xchg
adc
cmp
add
fistpl
inc
dec
mov
mov
ret
aad
adc
stos
mov
pop
sahf
cmc
pop
dec
bt
push
out
add
jb
cltd
push
bnd
fs
inc
cmp
fs
in
sbb
xor
out
nop
fidivrl
fcmovnbe
cmp
jbe
or
lcall
jg
xchg
fstpl
sbb
or
sub
dec
dec
mov
jne
clc
jne
lods
std
mov
mov
bnd
popf
sarl
sbb
sbb
cmc
pmaxub
test
mov
sbb
mov
fsubrp
dec
dec
jmp
and
loope
fwait
xor
es
push
stc
pop
ret
leave
cld
out
out
ret
sahf
dec
and
push
push
or
movsb
add
mov
jb
jnp
cmp
loope
pop
pop
bound
add
ljmp
jns
sahf
mov
sub
in
xor
cmp
add
push
test
push
out
outsl
sbb
sbb
daa
xchg
arpl
and
lock
dec
sub
into
inc
cmp
pop
mov
cmp
mov
test
pop
and
ds
or
push
pop
push
arpl
mov
lret
add
out
xchg
ret
sbbb
sub
pop
jecxz
sub
cmp
mov
test
scas
mov
sbb
or
and
push
jge
loopne
scas
ljmp
pushf
fsubrl
mov
add
subps
fwait
push
sub
faddl
rcll
in
mov
sbb
xor
mov
or
and
call
xlat
inc
jb
leave
mov
mov
fldenv
jnp
imul
or
pusha
push
imul
sub
mov
clc
push
loop
mov
int3
pop
fcom
repz
popf
push
filds
sbb
inc
push
rcl
mov
fwait
sub
jo
push
nop
push
cmp
mov
cmpsl
dec
stos
inc
cwtl
xor
and
pop
xchg
jae
clc
pop
ljmp
push
sbb
ficompl
mov
cmpsl
pusha
xchg
cmpsl
movl
sti
and
dec
test
sbb
insl
cli
outsb
das
and
nop
lds
dec
or
jmp
lods
stos
insl
cmpsl
adc
into
mov
addr16
punpckhdq
andb
mov
rorl
inc
xchg
gs
mov
sarl
ss
stos
dec
cmp
jae
outsl
xor
pop
mov
mov
or
out
adc
inc
popa
sub
dec
cmp
testb
dec
loope
repz
mov
sbb
xchg
dec
lea
xchg
test
insl
fld
sbb
out
push
jmp
xor
pop
outsb
dec
sbb
icebp
fsub
jg
movsb
push
mov
in
mov
daa
aam
and
push
dec
notb
inc
mov
inc
out
cmpsb
inc
dec
in
pop
mov
xchg
scas
nop
xchg
jb
scas
loopne
pop
adc
xchg
ljmp
adc
jmp
xor
loopne
jae
lahf
arpl
adc
add
mov
xchg
add
adc
inc
jne
call
cmp
fucom
in
xchg
pop
pop
push
std
in
push
dec
sarb
lret
in
jle
ja
jle
dec
fdivs
push
push
lock
dec
inc
stos
int3
mov
jb
imul
or
scas
out
imul
xlat
push
clc
loop
cmp
lcall
inc
subb
scas
or
and
lea
jecxz
lret
je
pop
scas
jge
aam
enter
fimull
mov
stos
push
mov
fidivrl
movsl
xchg
mov
cmp
or
xchg
xor
sbb
inc
xor
loopne
lret
push
pop
gs
in
jmp
xor
ds
mov
pop
mov
push
or
out
mov
int3
add
sbb
xor
aas
or
sbb
test
movsb
lods
push
pop
out
andb
xor
scas
jge
movsl
sbb
fwait
or
gs
flds
push
pop
cmp
mov
jnp
jo
popa
les
adc
insl
punpckhbw
lock
cmp
cli
aad
mov
pop
sub
mov
ror
lods
mov
sbb
lods
in
repnz
cli
mov
or
js
rorl
int3
fmul
cwtl
add
adc
cmpsl
xor
inc
stos
rorb
inc
repz
xchg
jbe
or
cmp
das
and
insl
mov
mov
dec
jl
decl
into
xchg
mov
shl
sbb
jnp
push
push
out
sub
add
xchg
shll
aas
push
or
lahf
jge
fs
push
add
inc
pop
add
jge
fistpll
dec
sub
xor
jg
mov
insl
sub
sbb
adc
pop
std
movsb
sub
mov
inc
dec
sbb
mov
fs
fs
inc
popa
repnz
dec
aaa
insb
incl
stos
sub
cmc
fisttps
ret
js
and
movsl
dec
dec
lods
aas
sbb
test
pop
setno
in
fucomip
mov
shll
dec
lds
aaa
fstpt
mov
push
ficomps
jne
pop
jno
push
dec
push
adc
incl
inc
push
mov
push
shll
insl
mov
sub
xchg
jl
inc
push
or
shr
jo
xchg
into
iret
sub
push
push
adc
xchg
push
push
cld
sub
dec
ret
or
imul
fists
sub
aam
xlat
add
hlt
sbb
mov
test
aad
stc
lds
jmp
xor
lret
mov
test
xor
inc
mov
imul
and
or
in
lcall
cmovle
inc
out
jnp
pop
sub
or
out
shlb
fs
lods
ficomps
push
or
stos
or
ds
les
cld
or
push
pop
mov
mov
sbb
stos
cmc
orb
mov
jns
ds
cs
inc
dec
cmc
pop
es
adc
stc
fstpl
sub
daa
adc
xor
dec
inc
jb
sbb
repz
mov
mov
mov
dec
cs
add
or
fs
ljmp
lea
or
sbb
cwtl
pop
inc
xchg
inc
lods
adc
mov
stc
bound
jnp
bound
shl
sbb
loop
cwtl
cmp
cmp
hlt
dec
cltd
xchg
je
es
adc
icebp
test
inc
sub
push
sbb
cmpsl
adc
xchg
divl
ja
in
sub
iret
inc
jno
repz
xlat
push
nop
pop
sbb
jmp
cmp
cmc
cltd
adc
xor
dec
jnp
out
ficompl
dec
jno
shl
jae
sub
cmp
sbb
cmp
imul
mov
out
mov
lret
or
mov
gs
dec
ljmp
stos
mov
inc
lods
mov
iret
jno
mov
ds
roll
dec
mov
dec
rep
xlat
enter
jge
cmp
movsl
pop
dec
shlb
out
movsl
dec
mov
pop
call
ss
push
fisttpl
adc
xor
inc
insl
mov
xorl
add
jae
jl
pop
cmp
mov
xchg
jae
mov
xor
cld
rep
frstor
outsl
pop
mov
xor
andb
insl
aam
test
pop
jecxz
test
push
mov
loopne
je
pop
add
ja
dec
mov
or
adc
push
popf
push
ljmp
cltd
andl
out
or
xorl
and
popf
fisttps
in
mov
sahf
jns
sub
mov
jae
inc
mov
ret
jp
sti
rorb
inc
pop
or
popa
cmp
xchg
popf
aam
movb
imulb
mov
jl
dec
mov
data16
addr16
movsl
push
mov
or
jle
fldcw
sbbl
cmp
bound
cld
mov
inc
sbb
inc
popf
or
cmp
jbe
inc
or
add
push
push
hlt
or
xchg
dec
jp
pop
pop
mov
mov
mov
mov
push
loopne
arpl
mov
add
add
xor
or
and
mov
push
sarb
inc
jle
xor
decb
das
push
lahf
lcall
iret
addb
dec
das
enter
jo
je
sub
ljmp
inc
mov
xorb
dec
add
sbb
inc
mov
popa
inc
ljmp
idiv
xor
nop
daa
shlb
les
aas
cmp
push
sbb
pop
push
sub
cltd
repnz
or
jbe,pn
sub
mov
stc
fists
icebp
sbb
pusha
push
mov
xor
loop
vcvttpd2dqy
and
cltd
in
popf
scas
test
test
cli
pushf
out
cli
and
pop
mov
mov
fsubrp
aas
call
inc
out
jnp
cmp
push
push
into
sbb
sub
lock
push
push
jb
nop
or
je
popa
jae
cltd
push
stos
add
leave
aam
mov
fsub
cwtl
ja
lds
mov
mov
mov
and
les
inc
xchg
xchg
cmp
insb
push
dec
mov
xchg
jns
pop
mov
pop
repz
repz
addb
outsl
leave
xor
add
or
je
push
lds
in
jnp
cs
arpl
mov
and
scas
cmp
add
gs
nop
je
push
push
inc
jp
popa
sbb
lret
xchg
sub
mov
cmpb
jmp
and
mov
shl
arpl
jae
pushf
movsl
dec
lret
sbb
fisubl
nop
mov
and
enter
push
or
pop
idivl
das
lods
xchg
or
mov
xchg
mov
sbb
clc
xchg
cltd
mov
scas
mov
arpl
sub
scas
mov
pop
mov
pop
fcoml
fistpll
sbb
insb
mov
dec
mov
imul
cmp
mov
and
sub
movsl
arpl
das
or
jl
rcrl
or
cwtl
js
adc
mov
or
out
xor
mov
mov
xor
jnp
mov
pushf
push
lcall
cmp
xchg
cmp
ja
jbe
bound
jbe
xor
jb
cmp
cmp
les
adc
repz
mov
getsec
rorb
out
push
mov
mov
fiadds
or
ds
in
mov
mov
shrb
dec
outsb
dec
lea
sub
into
iret
mov
pop
push
jmp
xor
xchg
mov
mov
sub
ss
cmpsb
lcall
xor
jmp
int
test
jae
jb
jb
mov
dec
push
push
mov
mov
pop
push
lea
jle
sbb
imul
or
and
cmc
hlt
pop
cmp
lahf
or
mov
nop
dec
outsb
cmp
ss
lds
dec
sarb
xor
icebp
sbb
mov
and
repnz
bswap
push
sarb
cmp
xor
sub
jb
inc
mov
dec
xchg
and
xchg
inc
cmp
fsubrl
lret
push
jmp
rcrb
jmp
inc
imul
in
das
lods
insl
push
jmp
adc
cmc
lret
fidivrl
gs
fmull
jle
dec
insb
ja
sbb
add
das
icebp
das
les
and
daa
push
ja
pop
loopne
jns
jno
test
in
js
call
cwtl
fadds
xor
and
xchg
shrl
addl
xor
pop
mov
inc
imul
or
dec
outsb
roll
les
and
add
sahf
add
or
mov
adc
ret
mov
jnp
fsubrl
adc
clc
aad
test
mov
shlb
mov
loopne
daa
add
mov
imul
ret
test
jns
mov
mov
mov
ret
or
aam
adc
mov
pop
inc
push
iret
loopne
mov
inc
jp
stc
inc
mov
xor
xchg
in
jo
in
sbb
loopne
in
inc
push
in
je
xor
enter
add
push
outsb
push
mov
push
mov
loopne
pop
rcl
and
cmp
pushf
int3
xor
scas
pop
popl
test
stc
jl
mov
adc
insb
test
and
xchg
sub
mov
loop
aad
fucomi
sub
cs
adc
and
push
mov
jns
movsb
imul
push
lahf
cmp
mov
mov
push
fmulp
push
sahf
or
fwait
cmp
mov
xor
xor
ss
leave
sub
or
notb
fwait
out
aad
outsl
es
mov
xchg
jo
in
cli
sub
leave
fcomi
ret
xchg
test
xchg
sub
xor
std
shrb
shll
or
jnp
or
pop
call
and
aas
mov
lea
jb
outsl
inc
ret
shrb
jl
cmp
mov
sbb
int
cmpsb
mov
ljmp
movsl
daa
lret
pop
aad
push
les
addr16
jb
jno
addr16
jp
and
inc
inc
int3
dec
sbb
roll
xchg
not
rcrl
add
inc
jp
sub
rorb
push
inc
aam
add
mov
lret
fildl
adc
test
add
mov
in
add
movsb
notb
adc
das
inc
mov
or
fchs
add
mov
imul
sub
test
mov
repz
sub
jne
inc
dec
daa
xchg
sbb
repnz
dec
dec
dec
out
inc
jmp
mov
push
add
dec
mov
sbb
sub
std
sti
lods
and
lock
cwtl
pushf
or
js
sarl
sbb
sbb
pop
add
cmp
je
stc
sarl
daa
pop
out
push
sbb
add
fucompp
sbb
lods
cltd
sbb
aas
lea
sahf
imul
push
aad
gs
mov
push
imul
add
mov
or
jo
mov
mov
ss
stos
sub
mov
pop
or
stos
cmpl
movsl
or
adc
jge
addb
out
push
mov
push
xchg
xor
ret
fwait
sbb
sub
mov
shrl
iret
pop
bound
fwait
add
sub
sahf
aam
push
lods
sbb
fildll
and
lahf
jmp
add
aaa
lret
jge
xor
nop
mov
inc
leave
sbb
hlt
cs
adc
jno
mov
adc
fwait
adc
push
xor
push
add
ljmp
fdivr
mov
pop
xchg
jbe
lcall
fimuls
inc
sub
xchg
loope
ret
xchg
push
jbe
xor
icebp
cs
mov
inc
hlt
inc
dec
inc
sub
dec
cltd
bound
iret
arpl
push
push
out
repz
ret
dec
in
cwtl
frstor
nop
mov
cmp
cmc
mov
mov
and
pop
add
sbb
jg
adcl
push
inc
mov
dec
cmp
jo
sbb
add
push
sahf
imull
scas
popa
or
das
mov
sub
mov
xlat
sbb
mov
loope
xor
mov
cmc
les
inc
pop
mov
add
addr16
sub
cs
jne
divl
call
cmpsl
mov
lret
cmp
jg
xor
cmc
mov
cld
ret
jnp
sub
jp
fstpl
call
dec
rclb
ja
jp
pop
push
fnstcw
sbb
into
jns
gs
popl
push
js
aas
dec
mov
dec
stos
xlat
push
push
sub
adc
outsb
pusha
fildl
sub
xor
call
in
sub
loopne
add
jge
loop
nop
add
inc
lock
jp
pop
roll
outsb
push
or
sub
cwtl
addr16
repz
fs
add
data16
cltd
mov
xor
sub
mov
pop
pop
das
jge
lods
test
add
add
add
pop
lods
aad
popf
cs
out
aam
mov
inc
inc
xor
leave
push
xlat
in
out
leave
pcmpgtd
cmp
iret
push
and
ss
pop
mov
add
mov
xchg
cmp
imul
mov
imul
cwtd
inc
add
or
adc
or
and
in
or
push
push
jno
insl
int3
mov
popa
gs
stos
mov
mov
leave
adc
pop
aas
cmp
cld
loop
xchg
aad
dec
ret
scas
mov
pop
stos
push
mov
movsl
jb
imul
and
dec
out
inc
popf
roll
popa
mov
sub
test
pop
and
xchg
xor
mov
xor
jo
xor
mov
daa
sub
cmp
mov
fmull
and
mov
push
movsb
add
lahf
ljmp
aas
mov
push
jne
je
xchg
lret
stos
jecxz
sub
mov
repnz
sarb
push
stos
lret
jle
cld
xor
inc
sti
test
cmpsl
jp
lods
ret
push
mov
sub
mov
sub
mov
shll
adc
das
je
pushf
mov
lock
and
les
fwait
inc
mov
inc
lds
pop
pop
push
fimull
lret
mov
or
mov
daa
sahf
jp
xchg
push
sahf
loope
cmp
outsl
mov
movsl
cmp
fbstp
add
cmpsb
loope
jp
jl
test
jp
shrl
js
insb
lahf
pop
and
scas
movsl
enter
dec
daa
xchg
test
shl
sbb
pop
les
sub
lret
je
xorb
mov
dec
sbb
xor
mov
mov
out
aam
repz
cld
divb
popf
arpl
enter
lods
scas
sbb
mov
lahf
fldl
mov
movsb
insl
rcrl
inc
or
mov
imul
lahf
das
or
hlt
mov
jno
movsb
scas
outsl
sahf
add
movsl
jo
or
fnstcw
js
dec
cmp
jmp
mov
test
decb
insl
cltd
js
lods
sbb
test
push
inc
cld
mov
dec
push
sub
pop
test
lds
jg
js
clc
popa
pop
les
inc
pop
orb
fsubs
xor
dec
in
nop
cmp
or
mov
repz
fcoms
xchg
sbb
pop
negl
cld
repz
xchg
mov
out
mov
xchg
and
rclb
push
dec
push
shlb
data16
push
jg
fcompl
push
js
lods
sbbb
mov
out
popf
mov
mov
call
add
jl
rolb
xor
fs
push
pop
jg
out
dec
xlat
dec
mov
divb
push
out
ret
cwtl
jo
cmp
sub
scas
add
inc
sub
dec
gs
xor
sbbb
movsl
and
je
lahf
jmp
cltd
xor
sub
inc
dec
std
mov
pop
into
mov
xor
and
enter
les
scas
cmp
fcmovnbe
movd
inc
cmc
insl
lret
pop
cld
imul
in
xor
int3
je
in
xorb
inc
in
mov
push
mov
enter
pop
fsubl
sti
mov
pop
push
pop
out
pop
pop
push
cld
and
pop
movsb
jno
subb
mov
ljmp
repz
cli
lcall
movsl
xor
inc
xchg
or
add
fnstcw
xor
sbb
pop
cmpsb
push
push
add
cs
hlt
add
rcll
mov
pop
out
aad
cmp
stos
or
sbb
jmp
xor
lea
xchg
imul
or
cmpsb
dec
subb
ja
and
ret
sub
or
jp
rorb
lahf
test
ss
test
xor
roll
ds
mov
pusha
or
inc
push
xorb
cmpsb
adc
jns
jo
andb
push
insl
add
nop
loop
mov
lret
fiaddl
cmpsb
xchg
push
ret
xor
ss
fisubrs
mov
push
jecxz
push
jb
cltd
jbe
fs
dec
movsb
in
and
jge
out
out
and
pop
pusha
mov
xchg
pop
aaa
push
jae
xchg
adc
cmpsl
out
pop
fisttps
xor
mov
xor
mov
repz
clc
mov
sti
adc
xchg
int3
bound
shl
mov
mov
aaa
xlat
pop
mov
aad
movsb
add
ljmp
rorb
sub
sub
cltd
lds
dec
mov
cltd
lcall
shl
bt
push
inc
dec
mov
jg
or
fcompp
sbb
pop
frstor
out
mov
xor
jo
lea
pop
mov
into
sub
pop
fcoms
and
or
pop
aas
out
add
loop
addb
pop
pop
das
add
push
lret
lock
mov
cwtl
pop
xor
nop
mov
scas
xor
sti
jmp
inc
imul
lret
lret
sti
pusha
and
mov
test
pop
add
push
or
inc
xchg
cwtl
cmp
je
jo
pop
and
jae
repnz
mov
ss
and
mov
jge
jmp
aas
insl
cmpsb
cmpsb
jmp
ja
jae
fidivl
dec
into
in
jmp
xchg
sahf
add
sbb
sub
loop
push
pop
or
shrl
idivb
pop
adc
ljmp
icebp
das
xor
dec
mov
or
mov
jle
out
popf
or
scas
in
push
fidivrl
inc
inc
pop
xor
mov
lock
jecxz
fadd
lret
outsb
ss
xor
jo
add
dec
adc
jno
mov
ret
inc
dec
mov
out
or
xchg
mov
sbb
pop
cmpsb
outsl
scas
add
int
popa
xor
lahf
jp
or
mov
inc
and
sub
sbb
leave
xor
or
cmc
add
fstpl
mov
mov
aam
testl
jns
push
clc
push
movsl
dec
push
mov
mov
ss
and
xor
test
and
sbb
xchg
testb
lods
popw
fsts
aad
cmp
push
xor
cmp
cmc
pop
mov
push
test
ret
pop
mov
pop
cwtl
out
adc
outsl
aas
popa
push
inc
std
rcrb
je
jle
sbb
out
adc
fldenv
sbb
cwtl
jno
sub
mov
inc
mov
or
ljmp
xor
mov
jb
scas
sub
cmp
into
xor
or
adc
add
push
test
pop
cli
lcall
xor
jl
xchg
fdiv
xor
mov
sbb
dec
xor
ds
jb
sbb
test
imul
shlb
ret
and
into
inc
bound
mov
shll
or
inc
push
and
add
xor
mov
inc
inc
mov
or
rol
mov
inc
xor
mov
adc
je
or
jg
lock
cmp
jp
insl
sub
cmpsb
outsb
or
or
sub
dec
pushf
inc
and
sahf
call
mov
in
xchg
pop
fadds
jo
icebp
cmp
sbb
xchg
xchg
adc
sti
pusha
call
jne
push
and
xor
out
xchg
call
imul
out
fisubrs
imull
call
das
or
add
sub
in
pusha
mov
in
and
pop
push
pusha
pop
mov
bound
mov
adc
mov
xor
push
stos
cltd
jmp
in
adc
mov
mov
push
push
scas
mov
push
adc
lds
xchg
mov
shrb
nop
adc
mov
loopne
push
pop
sbb
shlb
js
add
pop
call
mov
xchg
jmp
dec
push
mov
lcall
push
or
rclb
cmp
movsb
ljmp
shll
xor
add
ja
push
pop
cmc
mov
pop
xchg
scas
pusha
cmp
and
add
inc
dec
das
in
jo
dec
mov
int3
out
repz
jo
cmp
inc
jge
dec
stos
sarl
add
repnz
jne
imul
daa
cmp
ja
xor
enter
das
pop
mov
lock
repnz
jge
testl
hlt
in
ss
and
mov
fimull
mov
adc
push
jno
test
lods
scas
orl
sahf
push
pusha
pop
fsts
lret
or
int
add
add
cmp
push
jns
pusha
fidivrs
in
insl
cwtl
js
loop
mov
outsl
push
popa
cmp
jmp
test
aam
out
cmp
shl
mov
cltd
jmp
inc
out
popa
push
sbb
ret
sub
scas
mov
test
repz
repnz
sub
sbb
cmp
or
jno
iret
pop
cmp
push
int3
jge
adc
fsubs
clc
lahf
mov
add
imul
arpl
jg
sbb
jb
cltd
adc
sbb
insb
rclb
add
loope
mov
pushf
ud0
stos
mov
adc
xor
sbb
mov
stos
or
ljmp
insb
pusha
sbb
jecxz
cli
rcr
sub
jg
cmpsb
xor
stos
lds
mov
in
and
xchg
cmp
fs
jns
daa
imul
cmpsb
inc
jmp
out
sub
ret
cmp
lds
dec
push
and
scas
loop
les
cmp
cmp
imul
lods
clc
xor
xchg
clc
jbe
xchg
movsb
fists
hlt
pop
imul
pop
or
int3
jge
xchg
or
loop
inc
inc
xor
mov
pop
mov
aad
in
out
sbb
or
loope
adc
xchg
popa
loop
imul
sar
pop
adc
lds
pop
mov
inc
call
inc
std
pop
packssdw
add
clc
addb
cmpsl
jge
mov
push
mov
mov
xor
fisubrs
loopne
push
cli
fs
push
scas
rcrl
lods
ss
in
aaa
js
rclb
dec
roll
loope
cmc
imul
xor
xchg
cwtl
arpl
je
clc
loope
sbb
or
ja
dec
ja
rcll
or
push
push
push
jmp
fcmovu
cmpsl
push
mov
dec
lahf
in
shll
out
cs
cmp
jb
jo
nop
enter
or
xor
insl
aaa
jnp
test
jbe
xchg
rorb
inc
push
psubw
incb
mov
cmpsl
repz
xchg
scas
imul
cld
mov
adc
ja
push
aas
iret
mov
ret
cmp
mov
mov
rol
stc
ret
movb
adc
jae
jg
outsl
std
shlb
testl
pop
popw
mov
jl
xor
add
add
xchg
loope
pop
mov
xchg
popf
jae
adc
popl
jbe
scas
push
shrl
imul
jmp
cmp
pop
push
mov
pusha
aad
cli
push
scas
push
or
jae
or
in
pop
inc
dec
fwait
stc
or
out
lock
mov
rcll
loop
jmp
add
aas
inc
sbb
inc
rclb
dec
imul
mov
and
aas
out
dec
inc
and
dec
scas
jnp
sub
les
outsb
loopne
fnstcw
jle
sub
in
or
jle
movsb
sub
rcrb
adc
inc
test
scas
addr16
dec
iret
xchg
scas
mov
push
in
pusha
sbb
dec
dec
push
jns
and
lcall
xor
and
cmp
sub
lea
insb
mov
sub
mov
outsl
cmp
hlt
xor
push
enter
mov
insl
scas
or
gs
and
jl
jae
xchg
cmp
nop
push
adc
sbb
or
adc
xorl
pop
push
sub
xchg
aam
scas
cld
insl
jo
pop
sti
lods
jl
loope
aas
into
fbld
lcall
add
testl
dec
test
shll
sbb
in
xor
lods
mov
inc
add
icebp
js
jp
push
mov
sti
jo
jle
inc
std
movsb
mov
mov
leave
test
jg
and
xor
push
lea
les
and
mov
scas
dec
adc
adc
popf
jnp
out
mov
mov
and
sarb
fistl
sub
push
push
ds
jmp
rclb
aaa
imul
daa
stos
xchg
pop
in
dec
adc
jmp
and
cmp
jg
scas
scas
or
xchg
push
in
mov
inc
fimuls
fcmovne
dec
xchg
adc
xchg
sbb
add
xchg
sarl
pop
rclb
xlat
in
pusha
fwait
lock
adc
js
pop
push
mov
inc
inc
and
int
push
adc
pop
mov
pop
or
clc
jge
int3
je
dec
mov
inc
lret
sahf
mov
mov
mov
sahf
jb
cld
xor
int
js
es
pop
ret
iret
cmp
mov
jp
push
and
fisttpl
jae
mov
xor
sbb
test
pusha
fadds
pop
nop
sub
jl
cmp
lods
lret
cmp
pop
aaa
sbb
xchg
scas
out
jno
aad
adc
and
insb
pushf
ja
out
cltd
dec
aam
jl
sub
push
lods
dec
pop
pop
leave
xchg
sti
rcrb
int
xor
aaa
add
fdivs
adc
jg
stc
sub
or
testb
cmp
mov
and
mov
jae
cs
gs
aas
push
jg
lods
lahf
decb
stc
sub
adc
addl
sub
pushf
outsb
shll
call
fnstenv
sti
test
sbbb
mov
mov
hlt
xchg
loop
in
pop
xor
add
sub
lock
shufps
jp
imul
pop
shl
xor
std
mov
pop
xor
popa
dec
stos
jmp
pop
aam
cmp
into
ret
pushf
nop
sub
push
sbb
xchg
xchg
into
aam
stos
idivl
sub
sub
inc
jae
les
jbe
jnp
inc
int
dec
ret
stos
filds
test
int
mov
imul
mov
mov
arpl
sub
leave
out
rol
or
mov
or
push
test
xchg
cmp
repz
mov
mov
lcall
test
dec
aas
aaa
pop
nop
xor
popa
cmpsb
jge
cmp
add
pop
jecxz
sub
lcall
sbb
lea
negl
add
inc
rol
daa
push
sar
dec
pop
mull
fsts
pop
inc
bound
inc
or
mov
mov
cltd
mov
or
jp
pushf
aas
es
nop
aad
pop
sbbl
insb
xor
fidivl
mov
imul
xor
and
cltd
pop
shrl
jb
push
add
dec
sub
int3
mov
xor
and
roll
adc
cmp
push
testl
arpl
or
inc
and
jp
bound
into
and
and
loope
pop
inc
inc
push
xchg
lea
pop
sub
mov
xor
sbb
mov
in
aam
sub
into
inc
enter
call
leave
jne
mov
rcrl
dec
xorb
dec
sbb
mov
dec
aaa
aas
push
insl
mov
inc
repnz
adc
shlb
sbb
fcompl
test
xchg
adc
adc
cmpsl
cmp
mov
and
or
jg
push
pop
pushf
push
pushf
fisubs
xchg
xchg
int
imul
push
push
jecxz
jb
adc
pop
aad
pop
pop
sti
ljmp
or
xchg
xor
outsl
push
push
mov
into
cmp
sbb
xchg
adc
dec
or
pop
add
jmp
mov
sub
negl
jns
adc
iret
scas
dec
ss
fcoml
xor
mov
cltd
xor
sub
jg
test
popa
mov
lea
fs
push
int
jg
xor
pusha
inc
dec
les
sbb
push
push
push
jno
hlt
daa
cmp
cmp
mov
rolb
adcb
sub
nop
mov
fwait
pop
cld
into
into
dec
inc
adc
pop
das
negl
jg
fsubs
dec
push
add
xchg
popf
ljmp
out
lcall
js
or
push
shrb
and
pushf
sbb
in
daa
mov
sub
adc
aad
fistps
pushf
sbb
sti
mov
sub
movsl
jne
sub
fcmovbe
lcall
and
pop
cltd
push
test
ret
cli
std
icebp
sbb
test
orl
inc
jge
add
movsl
jo
push
lret
test
pop
or
subb
sbb
je
xlat
mov
clc
enter
in
and
inc
sbb
es
mov
filds
lahf
popl
or
jmp
push
loopne
mov
pop
xchg
dec
jae
loopne
fldcw
push
outsb
mov
xor
leave
bound
sbb
outsl
out
jp
xor
cmp
jp
ja
xchg
xor
sahf
faddl
jbe
shl
out
push
sub
mov
movsb
out
insl
xchg
xlat
lret
daa
mov
and
pop
xchg
push
push
inc
push
push
lock
fidivl
jb
mov
mov
cmp
jnp
dec
ds
mov
stos
or
lcall
or
xchg
sar
insl
pop
shr
mov
enter
imul
arpl
rcrb
mov
push
aaa
and
ja
inc
push
or
les
push
fisttpl
aad
popf
insl
pop
push
adc
mov
xor
mov
lea
lea
popa
xor
fadd
in
shrb
shl
ret
pop
adc
push
pop
rcrl
faddl
fadds
sbb
in
adc
jl
jmp
push
outsb
fwait
out
mov
xlat
shll
adc
sbb
loop
and
add
icebp
ret
dec
add
popf
insb
test
push
mov
insb
shlb
into
sbb
es
xorb
mulb
loopne
lods
push
daa
sahf
test
or
mov
jbe
lret
nop
stos
sbb
or
movsb
mov
repnz
es
xor
daa
and
stos
mov
inc
mov
fs
xchg
mov
popf
lret
fistpll
mov
pusha
cltd
or
lea
fiadds
hlt
pop
in
cmp
mov
and
in
loopne
iret
add
data16
orl
push
fistl
inc
jge
jge
pop
push
jns
xchg
pusha
and
pop
aam
les
leave
js
fidivrl
cltd
pushl
or
popf
mov
out
xchg
mov
jnp
adc
test
test
clc
aad
in
push
in
inc
fdivrs
xadd
popf
in
pop
xchg
or
insl
and
jle
notb
xchg
dec
sub
push
dec
and
rolb
adc
in
pop
frstpm(287
inc
push
pop
jge
lds
cmp
jns
mov
inc
mov
lods
stos
xchg
fsubrs
popa
dec
es
rol
out
ret
jecxz
mov
testb
add
cld
cmp
ja
aaa
dec
repnz
cwtl
sbb
movsl
sub
push
push
or
dec
mov
or
mov
in
add
iret
inc
std
dec
std
decb
dec
and
sub
xchg
jb
jb
int
push
lods
gs
pop
in
mov
stc
cmp
add
jbe
jmp
cli
mov
jo
adc
dec
push
sub
mov
int3
lahf
imul
daa
scas
adc
dec
sahf
inc
adc
mov
es
push
adc
out
call
sub
mov
mov
add
lret
ror
sub
outsl
jbe
daa
stos
popf
cs
ljmp
mov
push
icebp
sub
cmpsb
push
jbe
enter
xchg
mov
xor
lods
dec
fldl2t
int3
in
mov
xor
out
inc
sub
xor
xchg
or
dec
lret
lds
cld
jo
dec
jo
cmpl
inc
mov
and
jle
and
call
std
pushf
xor
inc
mov
mov
lods
mov
cwtl
jbe
pushf
add
fdivrp
adc
sbb
cmp
sbb
mov
adc
std
std
xchg
jnp
dec
dec
xor
in
push
sub
lea
mov
pushf
mov
add
xor
and
and
mov
sbb
test
and
and
inc
pop
movsb
push
sub
popf
push
xlat
pop
test
rcrb
lcall
mov
sub
mov
or
push
sbb
sbb
scas
lods
mov
sbb
aas
bound
cmc
ds
dec
adc
imul
aad
jo,pt
shlb
into
cld
mov
aad
xor
pop
jge
sbb
lods
call
aas
std
cmc
pop
mov
xlat
scas
push
in
mov
aam
jno
into
mov
repz
test
sbb
sahf
imul
cli
mov
repz
adc
call
sbb
jp
loop
push
lcall
data16
addr16
imul
ljmp
sub
lock
scas
jbe
sub
lret
add
cmpb
cmp
leave
adc
mov
or
dec
push
mov
ret
test
jl
pop
mov
repnz
std
bound
stc
rorb
adc
stos
push
jl
cmpsb
pusha
jne
push
test
adc
bound
push
mov
adc
or
jg
inc
imul
ja
orb
setbe
mov
ja
mov
mov
xchg
xchg
es
sub
shrb
pop
clc
sub
mov
pop
push
cld
aas
les
jno,pn
fldl
cmpsb
xchg
cli
decl
xchg
push
sub
push
and
sarb
clc
data16
daa
cmpsl
push
push
push
les
sbb
jae
fdivrs
and
mov
jmp
inc
cmpsl
mov
jmp
mov
dec
xor
dec
insl
mov
daa
mov
cmp
xchg
stc
sub
jl
lock
lahf
lods
cmpsl
outsl
out
jbe
cmp
xlat
xchg
aad
xor
xor
pop
mov
cmp
adcb
xchg
jge
pushf
in
ficoms
mov
shl
adc
fbld
sbb
clc
popf
mov
sti
mov
cld
add
jg
dec
out
sbb
bound
int3
fisttpl
scas
adc
shll
cmp
pusha
adc
clc
scas
mov
in
push
jmp
insb
inc
cmp
mov
jns
cmp
mov
popa
or
mov
das
sbb
daa
mov
outsl
mov
cmpsb
bound
test
repnz
mov
enter
ret
sbb
mov
push
inc
cmpsb
or
pop
scas
mov
inc
mov
dec
shll
aaa
ds
xchg
pop
aas
jno
lds
xor
cltd
cwtl
pop
ret
ret
pop
jle
or
std
adc
data16
and
fdivs
cmp
jmp
cmp
sbb
push
xor
loop
xor
xor
or
movl
stos
out
sub
cmpsb
test
out
mov
sub
fistpl
xchg
ljmp
or
popa
xchg
insb
nop
xor
mov
add
mov
jb
ret
das
cs
and
fbld
sbb
scas
mov
pxor
inc
out
and
test
xchg
cmp
add
and
push
dec
les
mov
lret
xadd
add
jg
das
test
cmpsb
pushf
fucomi
out
xchg
lahf
rcl
lcall
outsl
insl
aas
ret
xlat
sub
inc
dec
mov
pop
adc
add
and
jae
mov
sti
shll
mov
sbb
cli
testb
dec
ds
or
out
push
inc
or
mov
xchg
lcall
cmp
nop
mov
popf
stc
pop
daa
mov
push
repnz
mov
ret
jno
xchg
mov
orb
jmp
push
xchg
shrb
test
lret
xchg
add
dec
movsb
imul
rorl
lods
or
dec
xor
mov
mov
sub
push
test
dec
stos
out
das
pop
push
mov
nop
test
loope
int
or
arpl
clc
adc
repnz
lret
add
outsl
daa
pop
ss
rcr
lods
push
and
adc
push
jmp
xor
enter
arpl
in
repz
repz
jb
pop
outsb
int3
sbb
imul
fwait
je
pop
mov
fcoml
sar
dec
and
les
sub
sbb
adc
fwait
imul
pop
int
mov
pop
push
mov
popa
mov
dec
gs
add
js
sbb
xchg
dec
fstps
ss
call
out
mov
add
outsb
setns
mov
stos
imulb
jg
fucomip
gs
dec
mov
out
leave
test
popf
mov
push
es
enter
dec
pop
mov
outsl
xor
pop
scas
mov
xchg
int3
or
out
push
mov
lcall
popf
jmp
ja
cmp
clc
pop
mov
lahf
js
sarb
nop
mov
push
mov
mov
dec
pop
arpl
cld
cmpsl
inc
mov
inc
rclb
icebp
and
mov
pop
je
sub
bound
dec
in
push
leave
cld
sbb
fcmove
idivl
xor
mov
xchg
xchg
dec
xorl
cmp
dec
cmp
sbb
dec
jae
sub
pop
push
adcl
inc
fstps
cmp
push
sar
inc
sub
es
jmp
stos
sbb
push
jg
iret
out
and
imul
jb
inc
mov
xor
or
stos
jmp
push
test
ljmp
cli
fcomi
push
out
mov
adc
nop
mov
xchg
jle
stos
lods
ds
or
pop
bswap
jl
fs
loopne
cmp
pusha
fcom
pushf
and
es
pop
arpl
push
addr16
das
sbb
pop
push
xchg
dec
jb
and
cld
les
adc
ljmp
jo
daa
faddl
add
mov
fstpt
cmc
les
es
push
fstpt
in
in
jo
addr16
push
jae
mov
js
sub
add
loope
pop
and
stc
pop
int
xlat
mov
lahf
xor
dec
pop
lock
dec
es
movsw
push
jne
aaa
or
test
call
push
lahf
daa
mov
out
pushf
jle
mov
frstors
rorb
jno
rorl
xchg
scas
arpl
mov
test
fwait
hlt
lods
sbb
aam
xchg
xchg
and
push
cltd
mov
cld
shll
insl
push
cmp
dec
cmpl
out
pusha
cmpsl
mov
popf
iret
test
cmp
std
loop
mov
inc
scas
fmul
mov
int
jge
inc
addr16
repz
pushf
ss
mov
lcall
lahf
jge
mov
cmp
and
into
mov
imul
sti
ret
jp
cwtl
jge
push
in
cmpsl
adc
xlat
push
jo
sbb
jnp
push
sar
jge
stos
fidivrl
mov
popf
jno
inc
sbb
sub
fdiv
inc
mov
sbb
sbb
insb
inc
dec
mul
xchg
cmp
into
sub
out
int3
js
push
push
loop
ljmp
les
call
cmp
ret
test
out
push
movsw
lret
jle
int3
fs
push
ja
push
sbbb
iret
stc
push
aaa
loop
dec
push
je
pop
pop
ficompl
mov
push
dec
cld
cmpl
xchg
add
xchg
push
test
rcr
bnd
or
inc
sti
je
in
shr
gs
in
jo
js
gs
nop
add
movsb
push
adc
movsl
sbb
mov
xor
repz
imulb
shll
lods
add
sbb
pop
imul
ds
mov
test
ret
mov
jae
sub
push
adc
loopne
mov
dec
jnp
mov
add
jns
jge
js
subl
add
add
adc
cld
mov
jo
push
xor
stos
sub
cli
push
mov
pop
or
or
sahf
fwait
xor
push
jecxz
stc
adc
adc
xor
movsb
cmpl
mov
xlat
notb
shrb
jno
add
jae
xor
fists
rcr
jae
mov
cld
ljmp
jae
shll
dec
xor
jge
jl
jb
mov
mov
adc
lcall
sbb
adc
data16
mov
dec
or
stc
enter
loope
dec
dec
int
fldl2e
adcb
outsl
mov
out
inc
xchg
jle
xchg
jl
outsl
xchg
cmpsl
test
mov
mov
pop
xor
dec
sbb
rcrl
test
enter
lods
sub
adc
xchg
xor
out
push
das
add
mov
aad
hlt
dec
pop
test
fimuls
add
inc
adc
push
push
xchg
sahf
xor
daa
xchg
push
sub
push
mov
jle
and
ficomps
lcall
adc
and
dec
inc
je
js
loopne
jg
xchg
dec
adc
sbb
cmp
or
add
dec
mov
add
repnz
lods
sti
fsubrs
inc
test
clc
mov
sub
push
and
xchg
cmp
jp
neg
cmp
sbb
pop
insb
mov
dec
nop
dec
cmpsl
imul
ret
or
mov
lods
mov
inc
jle
sbb
cs
popa
scas
fiaddl
mov
imul
call
mov
inc
repnz
cmc
ret
sub
and
sub
gs
movsb
add
testl
inc
andl
xchg
clc
int3
dec
xchg
mov
xor
aas
inc
repnz
clc
lahf
das
mov
cltd
ja
jl
jp
imul
int
xchg
pop
push
xor
or
das
pop
out
popa
mov
xchg
arpl
pop
lcall
incb
rcrb
shll
xor
clc
xchg
int
mov
jmp
xlat
xchg
loopne
pushf
add
mov
sub
scas
shll
dec
cmp
inc
movsb
lea
push
jle
mov
leave
test
sbb
xor
xchg
les
aad
ficoml
outsb
mov
push
out
cli
ficomps
aam
add
mov
mov
mov
sub
or
mov
into
aam
pusha
data16
popf
aam
sbb
jmp
cmp
push
shlb
cltd
outsl
or
cmp
xor
cmp
fbld
sbb
pop
scas
fwait
inc
sbb
push
xor
nop
cmp
pop
pop
push
add
jbe
lds
fnstsw
inc
and
rorl
iret
sub
or
aas
pop
leave
dec
inc
add
add
cmp
dec
fidivrl
dec
loop
and
jb
les
out
cmp
mov
jnp
pop
out
gs
je
or
fisubs
mov
jge
or
ficoml
jb
std
inc
mov
xor
imul
mov
cltd
ds
jb
inc
sbb
lcall
movsl
inc
mov
xor
scas
mov
or
add
pushf
pop
xor
fdivs
stos
loopne
fwait
aad
sbb
push
adc
pop
pusha
sub
xchg
dec
outsb
lret
mov
add
adc
lret
int3
pop
adc
mov
mov
out
loopne
insb
loope
and
fdivrs
leave
inc
js
add
and
inc
cltd
cmc
repz
loopne
sbb
movsl
or
jmp
cmpsb
icebp
rclb
into
dec
adc
push
bound
mov
sahf
inc
repz
sub
fisttps
add
arpl
mov
xchg
add
ds
popl
dec
fisttpl
clc
jp
mov
into
ds
pop
jecxz
bound
mov
xchg
push
addl
les
icebp
cmp
sahf
and
pop
leave
mov
lock
cmp
into
sbb
into
fdivl
popf
icebp
iret
or
out
mov
clc
push
ret
insl
pop
sub
jmp
scas
enter
fstps
cmpsb
jne
cmp
decb
sbb
add
mov
aaa
lods
insl
mov
jo
mov
movsb
inc
fucomip
xor
cmp
ljmp
pop
xchg
sbb
sbb
jo
test
jge
fisubl
xchg
xchg
xchg
repnz
mov
jae
adc
daa
adc
fldl
out
and
jmp
or
aad
mov
mov
ret
movsb
pop
sbb
add
ja
add
mov
dec
mov
call
sub
push
lods
lret
rclb
les
fwait
inc
ds
or
dec
bound
or
shrl
cmp
pusha
int3
int
ja
mov
out
sub
js
xchg
ret
mov
imul
mov
mov
dec
mov
xchg
sbb
lock
push
adc
cmpsb
into
push
jno
mov
cvtps2pd
dec
xchg
cmp
cli
inc
and
ret
pop
sub
adc
sbb
outsl
and
data16
hlt
push
xor
push
jl
dec
and
push
xor
rorb
mov
repz
lea
aaa
add
inc
cld
pop
xor
aaa
lcall
add
jg
mov
fisubrl
mov
adc
mov
lret
push
shrb
mov
fcomip
pop
pop
insb
fisubs
addr16
fidivs
mov
xchg
mov
pop
sub
movsl
stos
fsts
adc
inc
out
jne
gs
push
dec
and
sbb
sub
jle
adc
fldl
mov
push
mov
gs
add
add
loop
mov
fildl
mov
xor
jo
dec
push
jl
and
rcl
int3
jns
out
je
aam
and
stc
addb
icebp
test
aam
sahf
fwait
mov
out
pop
xchg
mov
add
pop
pop
stos
nop
gs
cmp
arpl
cmp
inc
push
enter
pusha
rorl
xchg
push
xchg
into
mov
inc
testl
xchg
ljmp
scas
ror
inc
xchg
dec
pushf
test
cmpsl
jb
and
cmp
fdivrs
jns
push
and
mov
mov
pop
jl
pop
bound
mov
jge
sub
cmp
dec
adcb
cmp
dec
je
pop
jg
mov
cs
fs
fsubs
mov
pop
inc
pop
arpl
inc
or
outsb
mov
add
lcall
mov
outsl
xchg
cli
jg
or
fsubs
xchg
outsb
xor
int3
cmpsl
cmpsl
popf
nop
loop
leave
push
icebp
call
loop
cmpsl
sbbl
sbb
jl
test
mov
sbb
test
je
jp
loopne
mov
adc
clc
sub
jecxz
scas
xchg
adc
mov
das
test
inc
cli
pop
imul
xchg
cltd
mov
outsb
outsl
pop
fisubs
orb
mov
repnz
fiaddl
call
push
add
or
sbb
sbb
adc
cli
mov
std
jg
jae
mov
inc
sti
cs
nop
mov
ret
and
sbb
out
jle
pop
mov
pop
cmpsb
jg
and
in
xchg
xor
pushf
std
ss
divb
mov
dec
cmp
mov
mov
inc
outsb
cmp
dec
xor
jns
dec
std
push
pushf
mov
mov
scas
mov
cmp
mov
test
lahf
lret
ret
iret
cltd
xchg
mov
sub
push
cwtl
sar
inc
mov
sbb
sar
pushf
or
icebp
vcvtsi2sdl
adc
and
push
xor
cmp
addr16
jnp
pop
jl
jg
mov
jnp
addb
push
sbb
enter
xor
push
jae
sbb
shrb
scas
and
jge
cmp
and
mov
push
lsl
bound
jle
aaa
dec
inc
sub
and
sbb
push
or
or
les
pop
and
inc
xchg
cmpsl
repnz
aas
in
add
mov
xchg
cmp
jbe
sarl
cmp
push
hlt
icebp
jle
fimuls
in
addl
ret
xor
clc
adc
jo
icebp
sbb
and
icebp
mov
sbb
or
pusha
cmp
js
sbb
ljmp
push
xor
cltd
incb
es
int3
lods
lea
jcxz
into
xchg
add
stc
test
imul
aad
add
into
push
insb
stc
jecxz
stos
xchg
mov
lock
popa
jg
addr16
mov
cwtl
dec
fs
shll
stos
or
sti
inc
aas
xlat
gs
fldenv
mov
pop
push
pop
push
shl
addr16
and
add
push
cltd
add
adc
cmp
call
aam
and
pop
mov
xchg
xor
lea
js
outsb
jns
sub
out
mov
jns
inc
jnp
add
dec
jmp
fwait
jecxz
call
pop
and
jle
mov
cmp
xor
popa
fimull
xchg
jg
and
test
das
sbbl
push
inc
jg
mov
mov
test
adc
dec
ja
imul
fs
inc
cmp
push
push
mov
xchg
repnz
pop
jp
xchg
dec
push
sbb
mov
testl
jecxz
insb
loopne
cmp
cs
div
cli
ret
mov
aas
sbb
push
mov
adc
sbb
lods
pop
call
int
jno
push
xchg
fld
xor
fwait
lret
shll
clc
adc
loop
aas
xchg
xchg
shll
push
test
jb
mov
fwait
lods
lds
jnp
jmp
mov
mov
adc
lock
mov
mov
js
pop
aaa
jmp
and
mov
sbb
sbb
push
sub
lret
add
inc
cmp
or
pop
mov
mov
clc
add
ljmp
ss
pushf
cs
cmp
leave
lods
sub
xor
dec
in
mov
push
inc
dec
imul
lds
push
mov
js
mov
arpl
shlb
mov
stc
push
imul
jb
sbb
xor
clc
es
mov
jg
inc
out
addr16
sub
repz
enter
inc
push
lea
jnp
jne
xor
mov
jo
add
sub
xor
sub
cmp
cmp
aaa
test
dec
ja
sahf
push
and
sbb
clc
cmp
mov
pop
jmp
cli
cmp
xchg
dec
jmp
jg
dec
sub
inc
push
cmpl
jmp
push
rclb
std
in
adc
orb
loopne
imul
xor
xor
test
mov
arpl
lods
aas
adc
xor
add
sarb
movsb
sti
loop
xlat
push
scas
dec
hlt
push
inc
fisttps
adc
je
mov
lods
xchg
xchg
popl
mov
aaa
aaa
nop
xlat
jno
fbld
aas
imul
fiadds
push
push
loopne
inc
xlat
iret
dec
es
dec
mov
sub
popf
xor
adc
fistpl
mov
or
ror
mov
sbb
ja
bound
cmpsb
push
push
fwait
sbb
es
or
xor
cmp
das
push
cmp
imul
push
and
sahf
into
sbb
mov
mov
stc
sarl
jns
adcl
ss
or
rolb
mov
dec
std
or
test
int
mov
dec
cmp
in
outsb
or
pop
rcl
and
add
sbb
imul
mov
mov
cmp
add
add
lcallw
int3
aam
pop
movsl
mov
xchg
insl
mov
jns
mov
scas
in
lods
jno
cmpsb
pop
mov
aas
loope
inc
aas
testl
aad
nopl
cmpb
lret
xchg
mov
inc
inc
flds
fimull
stc
out
popf
add
pavgw
xlat
push
jns
pop
mov
addr16
push
and
dec
xchg
pop
in
dec
lds
bound
cwtl
or
repnz
insb
and
fisubs
fidivrs
adc
push
pusha
rcll
xor
cmp
out
push
jge
imul
arpl
cmpsl
mov
inc
mov
pop
push
push
int3
lahf
popa
inc
xchg
mov
mov
lds
cs
bound
adc
out
cmc
pop
cmp
fdivr
pop
inc
lods
lock
stos
dec
cltd
sti
es
and
mov
lcall
jp
sbb
int
mov
sub
xchg
jg
push
mov
leave
fistl
insl
push
divl
loop
rol
dec
sub
pop
lahf
movsl
xor
push
in
mov
cmpsl
nop
or
xchg
leave
inc
xchg
repz
scas
aas
xchg
mov
js
sub
aam
mov
sub
cmp
sbbl
cmp
mov
add
dec
dec
movsl
xchg
in
xchg
add
ror
bound
inc
mov
pop
push
or
subb
inc
xor
push
jg
and
ficoml
xor
jno
pop
lock
into
xchg
jo
nop
in
shl
lock
aaa
sahf
dec
enter
cmpsb
sub
pop
fidivrs
adc
inc
mov
inc
add
std
jle
push
sub
dec
imul
ljmp
and
mov
ljmp
ja
push
push
std
jns
xchg
jno
jle
inc
dec
inc
scas
sub
cmpsb
imul
fistpll
adcl
or
out
aad
dec
icebp
call
popa
pop
outsl
push
lods
dec
fisubrl
or
mov
dec
ljmp
scas
sub
jbe
hlt
jmp
icebp
dec
neg
lret
in
repz
mov
sub
cmpsb
movsb
mov
dec
mov
hlt
mov
push
fistps
push
mov
cmc
push
sub
sbb
push
pop
xor
xchg
es
loop
jle
popf
or
test
int3
insb
mov
sbb
in
stos
inc
cli
push
ds
daa
fs
icebp
adc
mov
or
lods
in
into
lret
jns
cmpsb
cmp
mov
jmp
js
shrb
ret
aas
add
mov
or
and
in
mov
sub
inc
imul
or
xlat
push
and
push
add
fcmovne
addb
push
xor
dec
pop
ret
cltd
xchg
mov
ds
pop
pop
xchg
mov
sbb
cmp
push
sub
stc
mov
jne
adc
popf
xchg
xchg
xchg
dec
xchg
mov
shrb
inc
jp
loop
ljmp
shrl
cmc
cwtl
pop
sub
out
xor
sub
lcall
movsb
and
dec
sub
jge
sarb
fnstsw
f2xm1
push
mov
rcll
cmp
notb
outsb
sub
jl
xor
pop
dec
shrb
and
or
adc
insl
ret
inc
add
add
and
lret
fdivs
xor
jl
imul
sbb
mov
push
mov
and
push
dec
mov
repnz
call
push
movsl
xchg
push
add
scas
and
outsb
push
das
out
icebp
jo
loope
dec
rcrb
push
mov
dec
jecxz
and
xor
cs
cmp
mov
aad
and
ljmp
aad
or
and
jne
xlat
dec
inc
mov
rcr
xchg
sbb
inc
and
hlt
adc
sbb
stos
loope
jo
jmp
push
push
pop
mov
sub
leave
cmpsb
dec
orb
lods
inc
xchg
sbb
stos
mov
pop
iret
mov
aad
inc
push
ret
xor
mov
or
ljmp
pop
push
or
jp
adc
div
dec
add
mov
sbb
mov
das
jnp
sahf
std
imul
xchg
xor
and
fwait
shrb
das
mov
adc
push
mov
stos
push
pusha
fadds
cld
add
arpl
cld
add
in
in
lahf
fs
adcl
scas
pop
lock
add
imul
fcompl
cmp
fmull
outsl
fwait
add
xlat
cmc
cmpsb
sub
push
sub
scas
mov
or
out
mov
leave
into
je
testb
and
push
hlt
lret
repz
inc
aaa
jle
xor
sub
movsb
push
in
lea
pop
pushl
xor
mov
xchg
shrl
mov
jp
ret
fxch
pop
fmuls
jbe
lock
loopne
cmc
fcomps
cmpsb
dec
stos
or
mull
xor
inc
push
call
jnp
cltd
jle
pusha
icebp
cli
ljmp
je
jmp
inc
test
daa
jg
pop
je
push
cs
sbb
xchg
xor
lret
fwait
rorl
or
jg
cmc
jnp
outsl
sub
aam
push
cmp
out
push
push
repnz
arpl
rol
ret
fadd
aaa
and
jo
movsl
imul
pop
lods
mov
scas
aad
jb
mov
and
inc
fwait
cltd
decl
scas
stc
outsl
lds
push
inc
push
sar
add
dec
or
fcoms
push
mov
xchg
jae
jne
mov
stos
push
dec
icebp
and
adc
mov
push
xor
or
shlb
sbb
clc
cmp
jmp
stc
mov
push
pop
fs
cli
dec
push
iret
or
and
xchg
mov
or
or
jnp
mov
inc
dec
nop
mov
cmp
mov
mov
jl
push
cmpb
pop
loopne
mov
jne
mov
mov
mov
lcall
mov
jecxz
js
cmp
cmp
mov
in
leave
jae
mov
mov
lcall
aad
or
mov
xor
fs
imul
mov
popf
in
jne
cli
idivb
mov
push
idivl
mov
addr16
into
xor
jecxz
xchg
adc
fs
xchg
mov
push
push
cmp
mov
int
test
xchg
pop
inc
xchg
xor
fstps
xor
push
push
daa
xor
xor
ret
sub
sub
lret
cs
mov
mov
movsl
ja
add
inc
stos
repnz
mov
fnsave
ret
mov
dec
dec
aad
and
iret
ret
in
enter
sarb
lahf
test
aaa
ljmp
xchg
jp
pop
data16
iret
lods
sahf
fistpl
lea
and
test
movb
inc
cmp
rclb
movsl
lret
xor
cmp
out
stos
insl
rol
loop
ds
xor
and
shl
mov
jb
hlt
out
int3
fistpll
aaa
add
push
mov
sti
cli
insl
xor
adc
pop
lds
inc
aas
lods
popf
xlat
int
adc
fdivl
dec
aas
and
cmp
sbb
ds
repz
xor
das
data16
fbld
fisttps
mov
xchg
ret
ds
test
dec
insl
xor
ret
pushf
loopne
pop
jno
scas
add
push
insb
dec
dec
clc
cmpsl
pop
andl
movsb
subl
xor
in
adc
push
js
repnz
pop
jecxz
int3
jmp
out
mov
push
push
movb
sbb
push
xchg
out
ljmp
pop
nop
push
cld
cmpl
ljmp
mov
sbb
mov
ds
pusha
jns
cmpsl
out
and
int3
mov
ljmp
sbb
cmp
adc
je
pop
test
sarb
addr16
ds
mov
adcb
out
repz
aas
pop
mov
xchg
and
mulps
lcall
pop
lock
push
sbb
mov
and
jl
cmp
lods
imul
pushf
pop
fimull
popa
ss
jmp
je
arpl
sti
imul
or
fstpt
push
shl
je
ficoms
pop
rcl
xchg
mov
aad
mov
popf
int3
data16
ja
vfmaddsub231ps
pop
ret
shr
ret
adc
mov
add
mov
dec
jecxz
pop
pop
fmul
insb
pminub
aam
les
icebp
cmc
add
test
lock
cs
negl
lods
mov
adc
stos
push
movsl
mov
push
sbb
jg
out
pop
add
jb
movsb
pop
js
sbb
jg
lcall
test
sbb
pop
iret
outsl
jno
dec
push
paddsb
insb
and
adc
cli
mov
test
cmpsl
in
fldpi
lods
sub
pop
pop
inc
xor
dec
mov
dec
jge
rep
lcall
rorb
cmpsb
sahf
enter
mov
jb
sbb
out
push
lods
sbb
fs
lods
lea
mov
cwtl
pop
mov
pop
adc
cmp
pop
dec
mov
fdivp
fisttpll
sbb
jp
jge
testl
dec
push
jns
push
push
or
jno
jb
jb
or
mov
mov
out
stc
outsb
ja
push
cmc
xlat
test
arpl
pop
in
insb
xchg
lock
mov
popf
cmp
mov
in
xor
les
jg
adc
push
xchg
mov
imul
insl
or
push
pop
adc
and
xor
testl
dec
mov
out
clc
pop
scas
pop
push
hlt
ljmp
inc
push
adc
dec
mov
sbb
add
add
cmpsl
xor
idivb
mov
inc
jg
jb
pusha
jo
mov
pop
xchg
cmc
mov
int3
and
std
ljmp
das
mov
mov
xchg
inc
in
and
xchg
jl
pop
push
lods
or
dec
es
lret
out
jle
or
xor
test
hlt
mov
aas
loopne
mov
sbb
mov
push
sub
pop
inc
in
sbb
sub
mov
cmp
jbe
jo
xor
iret
int3
sbb
lret
fwait
mov
inc
testl
sub
call
sub
lret
jae
inc
test
mov
aad
mov
jg
test
jp
aaa
insl
xchg
aaa
pushf
cli
leave
jecxz
jbe
xchg
and
jle
mov
xchg
adc
xor
or
insl
test
mov
mov
inc
xchg
and
pop
xchg
not
out
and
or
idivb
outsb
adc
sbb
inc
loopne,pt
mov
lea
adc
dec
or
push
scas
cmp
aaa
xor
xor
imul
pusha
dec
or
jnp
ret
imul
inc
pop
sbb
mov
add
cs
test
mul
mov
adc
cmp
add
out
cli
and
aam
test
data16
jne
idivl
sub
lahf
dec
ret
scas
pop
cmc
push
dec
and
stos
ds
mov
ljmp
lock
adcb
ret
je
repnz
testl
sub
add
cmpsl
xchg
lcall
and
pop
jne
cli
mov
dec
fsubr
cmp
sbb
pop
andl
pop
push
push
sub
jns
lods
fsub
xchg
push
push
imul
std
sbb
outsb
inc
sbb
push
push
insb
sti
outsb
hlt
orb
outsb
repnz
sub
icebp
aaa
mov
push
pop
enter
sub
adc
xor
sbb
mov
out
mov
xor
dec
pop
call
cmc
adc
cmp
ret
imul
mov
out
lds
sbb
lahf
or
mov
sub
test
and
sbb
sarb
jne
sbb
rorb
xchg
mov
cmc
leave
cwtl
rcrl
xchg
call
inc
add
jne
mov
rcrb
bound
and
repnz
jmp
fs
fadd
es
lock
shrl
jge
push
lock
imul
fs
push
mov
mov
mov
mov
mov
fldl
testb
sub
int
add
and
adc
sub
xor
push
nop
mulb
inc
or
movsl
sahf
pop
sub
adc
aam
pushf
ret
pop
adc
or
sbb
outsl
sub
inc
mov
add
and
adc
push
jecxz
xor
push
mov
out
jg
ret
shr
sub
adc
xchg
sub
andl
fsubl
adc
xchg
pop
xchg
add
cmp
mov
jae
xchg
jge
sbb
sub
mov
jle
imul
mov
inc
jecxz
xor
xor
dec
imul
in
mov
and
mov
lahf
sub
adc
leave
jbe
rcrl
jl
rolb
xor
and
sahf
pusha
mov
jg
and
or
push
adc
and
mov
dec
dec
dec
cmp
adc
mov
push
je
ds
notl
cmpsl
fldenv
pop
push
jp
insl
cmp
dec
jge
test
fiadds
xchg
mov
inc
lea
sub
leave
std
addl
out
cmp
xor
ss
cmp
push
jno
ret
xchg
lret
push
pop
std
xor
ds
leave
bound
clc
mov
pop
mov
pop
xor
inc
dec
xchg
arpl
mov
add
and
int3
lret
inc
int3
pop
sub
daa
repnz
lods
mov
jbe
cmpsb
popa
lock
leave
lret
add
add
adc
pushf
shr
sub
cmp
mov
es
jae
mov
mov
adc
jge
cmp
decb
icebp
sub
sarb
and
imul
stc
cmpsl
pop
mov
mov
imul
into
and
add
xor
shlb
lea
in
fildll
sbb
aam
rol
out
aaa
test
or
movsl
das
mov
cmpsb
into
and
rcr
add
fwait
push
daa
mov
dec
jb
jae
cmp
ds
jge
add
sub
sti
mov
jno
hlt
repz
pop
hlt
mov
add
repz
pop
stos
mov
lods
ds
cli
call
and
and
mov
push
imul
add
dec
rcrl
jg
add
icebp
pop
mov
cltd
dec
or
andb
or
cmp
out
loop
sub
push
jg
push
mov
sub
cmp
and
cwtl
ret
pop
in
mov
jmp
loopne
jb
add
sbb
pcmpeqw
pop
adc
scas
adc
jae
ret
stos
inc
mov
jg
mov
aas
inc
fimuls
imulb
or
jns
insl
fwait
addb
mov
mov
jp
xchg
icebp
notb
in
mov
jmp
dec
pop
adc
mov
pop
xor
mov
insb
sti
dec
pop
js
mov
inc
mov
cmp
sbb
lds
test
sbb
push
or
mov
jl
movsb
insl
push
loope
xchg
outsb
leave
jmp
sub
xchg
repnz
push
pop
inc
or
push
movsl
jns
outsl
mov
mov
add
mov
shll
and
ss
xchg
stos
jmp
push
jnp
push
and
xchg
or
dec
out
pop
mov
push
or
inc
xchg
pop
push
stc
aam
mov
aaa
imul
pop
dec
sbb
xlat
rep
call
and
mov
xor
test
sub
push
mov
sbb
pop
shrl
data16
cmovo
xor
push
cmp
cs
movsl
das
insb
mov
pop
in
inc
sub
pop
pop
add
pop
mov
call
jae
or
iret
sbb
mov
imul
xchg
pusha
xchg
push
movb
pop
ljmp
lea
outsb
dec
mov
xchg
adc
xor
pop
mov
push
and
ljmp
cmpsb
dec
cwtl
xchg
int3
xor
sbb
xchg
pushw
int3
loopne
ficompl
add
data16
jb
ljmp
add
jp
dec
mov
and
cmp
xor
cmpsl
insb
add
jg
push
mov
stc
sub
insl
sub
cmp
stos
pop
pop
sti
in
mov
pop
pop
aas
dec
add
xchg
movsb
cmp
add
dec
movsl
adc
jl
in
repnz
stos
cmpsb
call
lds
shrb
ret
xchg
dec
test
mov
dec
sbb
insl
adc
es
or
int
pop
or
mov
bound
loope
pop
ljmp
mov
test
xor
test
shrl
mov
test
ret
test
push
jne
pop
mov
popf
js
lods
jp
pop
or
popa
pushf
movsl
sbb
dec
inc
adc
and
add
xor
mov
in
lock
test
cmp
dec
jae
dec
lods
push
mov
ja
sbb
bound
js
movsb
int
in
xchg
mov
xchg
inc
lret
aad
sub
pop
mov
out
lods
push
or
outsb
add
out
push
imul
in
adc
or
push
dec
arpl
mov
adc
int3
sbb
adc
xorb
loopne
stos
sbb
sub
xor
mov
add
les
outsl
push
xchg
js
rclb
pop
lahf
sti
adc
add
and
and
lds
jle
mov
adc
loop
movsl
js
sub
stos
pop
dec
test
cmp
push
mov
insb
inc
mov
pop
dec
pop
mov
jecxz
cmp
inc
mov
outsb
dec
push
add
out
out
sub
cmc
outsl
and
adc
jno
int3
inc
faddl
sbb
add
add
inc
add
cmp
push
jg
mov
sbbl
or
rorl
jns
fcoms
insl
jno
sbb
dec
pop
or
inc
mov
popa
jne
push
out
xor
sbb
and
ficomps
adcb
jno
popa
mov
faddl
xor
int
aaa
mov
hlt
out
cmp
inc
stos
repnz
testl
inc
pop
or
dec
sub
cld
cmp
enter
pop
icebp
rclb
inc
xor
and
lret
mov
mov
aam
mov
mov
cmp
jnp
sbb
loopne
xchg
push
fldenv
add
xchg
pushf
fmul
stos
dec
int
sub
and
inc
sbb
push
xor
pop
adc
cltd
ljmp
jmp
stos
call
dec
xor
dec
xchg
in
jmp
xor
push
xchg
repnz
test
aas
push
fistpl
mov
stc
stos
aaa
mov
xchg
mov
gs
das
xchg
adc
push
mov
sbb
jbe
mov
jecxz
outsl
cmp
test
mov
std
add
incb
mov
adc
push
mov
imul
lret
push
adc
or
scas
sub
jmp
sub
cmpsl
cmpsl
aas
repnz
test
cmp
repz
imul
sub
add
sub
imul
arpl
and
xchg
push
jbe
push
and
mov
jg
cmp
leave
pop
andb
in
int3
fmuls
cmp
cmp
in
pop
mov
inc
adc
adc
aam
mov
negb
cmp
push
dec
sbb
sub
inc
and
dec
in
add
cmp
subb
jecxz
out
jmp
outsb
nop
push
adc
lods
or
daa
clc
shlb
sub
or
fdiv
cmp
cmc
mov
and
ficoms
mov
or
cmpsl
mov
dec
mov
mov
movsl
inc
mov
xor
and
outsl
loopne
bound
mov
dec
fnstcw
cli
sub
mov
cli
into
mov
popa
shrb
shlb
mov
divps
mov
lock
mov
jno
sarb
data16
jmp
xlat
sub
mov
and
mov
int3
push
or
sbb
mov
outsb
pop
xor
mov
mov
or
push
fxch
mov
mov
push
cmp
and
jge
imul
mov
div
fldcw
dec
inc
addr16
in
pushf
arpl
call
arpl
or
cwtl
mov
std
cmc
push
push
push
adc
inc
stc
cmc
inc
adc
inc
imul
or
push
popl
fisubl
xchg
sahf
sub
add
stos
dec
sbb
arpl
ret
das
cmp
movsl
adc
and
icebp
or
adc
movsl
idivb
dec
iret
inc
mov
and
pop
sub
in
stos
jg
aaa
inc
and
mov
fidivrs
xchg
and
dec
mov
shlb
jp
imul
fstl
jecxz
dec
cmp
xor
shr
and
or
sbb
lock
xor
pop
mov
lds
daa
lods
mov
inc
jno
sbb
and
jle
rcrl
xchg
rcll
dec
in
mov
ret
dec
ret
pop
mov
test
dec
sub
or
imul
nop
and
test
mov
aad
arpl
test
lds
cs
ljmp
inc
lea
sbb
imul
je
pusha
je
push
and
pushf
aas
inc
push
repnz
xor
mov
nop
or
fs
arpl
or
clc
ljmp
push
pop
mov
pop
test
xlat
dec
jge
loopne
cmp
aad
mov
add
jbe
mov
rorl
xchg
add
jge
test
out
stos
sub
rclb
jle
mov
sub
std
xchg
mov
lods
scas
stc
and
mov
mov
or
pop
stos
stos
adc
sbb
aaa
jo
xchg
mov
repz
in
jp
push
xchg
in
cwtl
adc
push
adc
int3
popa
or
adcl
mov
les
aas
stos
int
rcrb
xor
cmp
loop
or
sub
pop
mov
gs
mov
and
dec
test
imul
insb
add
insl
cmp
mov
arpl
add
mov
jge
in
scas
sub
lods
jge
shrl
test
cmpsl
xchg
stos
push
testl
jo
add
ret
fmul
addr16
mov
mov
xchg
mov
fmull
mov
mov
cmp
sti
add
push
jl
std
xchg
and
xchg
pop
push
mov
adc
out
scas
pop
loop
lahf
std
xlat
lock
cmpsl
xchg
lcall
xor
jo
mov
gs
push
outsb
cltd
dec
es
cmp
pop
add
lods
movsb
adc
call
inc
mov
dec
divl
cmpsb
aad
sbb
push
jne
adc
mov
js
cwtl
rorl
or
ret
aaa
xor
outsl
adc
pushf
rorb
or
or
loop
or
sbb
sub
insl
jmp
dec
xor
add
push
mov
mov
push
jmp
lods
mov
outsb
mov
mov
mov
sub
mov
imul
inc
or
cmc
nopl
mov
pop
sbb
in
cmp
and
repnz
pop
xchg
sbb
leave
mov
cli
push
dec
loop
ds
cmp
cmp
je
pop
aas
mov
arpl
cld
enter
shr
mov
sub
test
cmp
pop
scas
sbb
jge
and
sub
mov
mov
push
fbstp
jo
and
inc
mov
lds
bswap
jg
xor
es
lea
sti
mov
mov
cmpb
hlt
enter
xor
jg
xor
inc
call
addb
push
aas
xchg
inc
sbb
insl
add
inc
mov
xor
ja
push
or
icebp
aad
ds
not
xchg
and
js
out
mov
aad
pop
call
inc
mov
inc
inc
cmp
jle
xor
cmpsb
inc
push
push
cmpsl
test
std
stc
pushf
mov
inc
mov
or
xchg
sbb
bound
cmpsl
mov
pop
sbb
add
xchg
mov
jne
icebp
scas
mov
shll
pop
xchg
inc
sbb
dec
push
xchg
aam
out
repz
mov
mov
inc
clc
imul
pop
dec
add
rcll
inc
sub
arpl
test
test
lcall
mov
add
out
mov
lods
ss
das
or
cmp
lds
mov
int3
cs
jbe
or
pop
icebp
dec
aas
and
icebp
scas
mov
or
aad
add
xchg
or
dec
lea
pop
push
shl
jecxz
mov
roll
xor
adc
inc
adc
test
insb
inc
clc
aad
mov
xchg
hlt
pop
jge
add
add
xchg
iret
js
divb
sub
std
mov
hlt
adc
fmuls
into
mov
xor
cmpsb
loope
testb
dec
sub
and
pusha
mov
push
fwait
ret
ja
jg
imul
jb
jno
icebp
dec
inc
push
lahf
mov
mov
fiadds
lahf
fildll
xor
add
dec
inc
arpl
les
cwtl
int3
mov
jp
push
jns
add
sbb
sub
fs
call
cld
mov
loop
jno
outsb
bound
hlt
lea
jbe
jge
xchg
cmp
das
pop
push
lret
stc
jne
test
icebp
mov
mov
ret
dec
leave
push
aas
sub
push
stc
dec
mov
cmp
push
and
jb
mov
clts
pop
jg
fnstsw
or
mov
adcl
adc
negb
pop
lock
cmpsb
cmp
xchg
sarb
flds
pop
cmp
or
sub
pop
mov
cltd
in
aaa
jne
and
adc
mov
lcall
leave
push
movsb
scas
movsl
adc
fstps
div
xchg
push
mov
aaa
push
add
mov
je
sub
mov
jo
jb
cmp
push
mov
push
daa
sbbl
push
fstl
push
test
daa
push
add
xor
fdivrs
mov
fildl
lods
jl
dec
sbb
lock
push
cltd
adc
fildl
xchg
jg
pop
dec
xor
xchg
sbb
pop
fildl
xor
lret
roll
mov
adc
rcrb
and
dec
pop
jle
fdivrs
and
push
push
out
add
insl
outsl
ja,pn
mov
jle
and
pop
mov
fisubs
loop
cmp
sub
cmp
add
dec
fisubs
push
sub
loope
fwait
gs
ficomps
mov
js
adc
leave
cmp
push
stos
outsb
or
adc
call
xchg
push
add
jae
jp
loopne
adc
fcoml
xor
xorl
inc
je
xchg
icebp
xchg
xchg
push
dec
outsl
out
jle
neg
lock
lock
addl
add
push
mov
test
dec
mov
jge
outsl
std
pop
cli
stos
sahf
and
jo
fdivl
push
test
sub
inc
sbb
loope
mov
cs
mov
adcb
arpl
jno
push
sbb
dec
test
dec
pop
or
aad
lahf
sbb
mov
dec
fdivrs
hlt
cmp
movsb
push
cmp
call
push
in
pop
aad
sti
add
inc
inc
sub
mov
sbb
cli
jne
mov
mov
add
outsl
mov
shl
cmp
enter
add
enter
sub
or
jb
pop
fldenv
mov
xchg
xchg
ja
xchg
cmp
sub
sub
adc
pop
or
lret
xchg
pop
lods
fidivrl
fsin
inc
dec
leave
stos
mov
xchg
mov
andl
ret
iret
test
mov
out
mov
add
and
loope
out
mov
fstpl
sub
lcall
dec
out
push
sub
negl
pop
test
aas
movsb
fidivs
pop
aam
adc
jp
daa
outsl
imul
pop
cltd
jge
ss
cs
mov
ljmp
jne
or
in
roll
dec
cmp
cltd
push
andl
inc
cwtl
imul
jae
int3
fsubl
sbb
add
pop
daa
lahf
sbb
mov
fistpll
lret
jg
ljmp
sub
je
sub
jg
sbb
sbb
jns
lds
fmull
or
xor
call
mov
sbb
sbbl
sbb
xlat
imul
adc
jno
xor
mov
js
aas
mov
push
shll
daa
inc
mov
adc
sbb
das
xor
popf
inc
and
add
mov
pop
mov
push
xchg
lods
fldenv
jp
lret
sahf
cmp
scas
dec
scas
sbb
inc
add
mov
hlt
cld
inc
aas
sbb
pop
cmp
fldl
pusha
inc
ret
jmp
sub
sub
mov
jge
adc
pop
cmp
inc
mov
loope
out
xchg
das
in
fcomp
jne
pop
sbb
mov
or
sbb
adc
jle
jb
push
cli
shrl
pop
out
push
faddl
cmp
mov
jmp
test
mov
and
add
scas
xchg
roll
sbb
adc
outsl
rorb
push
pop
pop
pop
int
sub
sub
ds
fwait
mulps
dec
stos
out
cwtl
xor
pop
jbe
mov
shl
pop
add
mov
pop
sbb
push
adc
jp
mov
sub
xor
cwtl
fidivl
lea
sbb
pop
js
shlb
xchg
pop
out
cltd
pop
icebp
sti
adc
jbe
fsubl
cmpsb
or
mov
insl
cmp
stos
fs
inc
push
ret
cli
push
mov
jae
sub
xor
iret
or
mov
mov
mov
jge
xor
xchg
adc
incl
std
mov
orb
ret
add
mov
sub
lahf
pop
int3
mov
add
das
and
cmp
push
mov
xor
jmp
or
mov
jo
jge
stos
dec
dec
popa
rclb
addr16
fcoms
lods
cmp
mov
iret
out
cmc
jnp
mov
ja
in
std
sub
cwtl
add
rcll
hlt
stos
xlat
xchg
xchg
dec
dec
xlat
and
cmpsb
pop
aaa
or
lods
dec
insl
adc
jmp
pushf
stos
lahf
ficoms
dec
mov
dec
dec
dec
loopne
mov
push
jno
cld
push
jp
in
or
inc
ljmp
mov
lds
sti
or
sti
mov
pop
popa
enter
loop
and
sub
dec
in
push
je
scas
ds
and
mov
mov
lcall
mov
test
fmuls
cmp
xchg
jne
imul
das
arpl
pop
movsl
test
jae
push
ja
inc
sbb
push
add
push
rolb
addl
ljmp
decb
icebp
cli
popf
int3
adc
jns
or
cmp
pop
rol
aaa
popf
bound
in
shl
pusha
xor
leave
insb
movsl
dec
inc
repz
cmpsl
cli
jb
loope
add
sub
and
pcmpeqw
push
scas
lret
xorb
mov
inc
and
bswap
loopne
jp
stc
and
scas
lods
jnp
mov
cmpsb
pop
js
incb
push
arpl
leave
pop
push
pop
lods
je
or
outsb
mov
xor
xchg
cmpsl
imul
repnz
arpl
sahf
mov
push
xor
aad
mov
das
jl
inc
pop
adc
cltd
xchg
notl
lock
lock
imul
or
sbb
pop
push
or
call
mov
leave
aam
mov
pop
leave
push
cmpsl
es
sub
add
push
les
mov
lock
notl
out
cmp
jp
add
jne
sarl
lock
jb
fimull
popf
xchg
fstpl
add
inc
lret
mov
mov
cmp
shr
popf
jle
inc
push
or
insl
push
ficoms
or
addl
add
and
int3
lret
dec
pmulhuw
sub
jno
inc
lock
rcl
push
cmp
outsb
jnp
mov
mov
xchg
sarl
pop
mov
sbb
insb
mov
add
nop
rcl
movsl
insb
leave
sbb
pop
cmp
mov
mov
fmul
addb
imul
rorb
mov
faddl
mov
pop
call
push
sub
jle
push
add
push
xor
inc
push
and
dec
push
xchg
push
cmp
hlt
in
or
imul
or
mov
fstpt
pop
or
sbb
mov
dec
jge
ljmp
or
imul
mov
mov
icebp
leave
or
inc
ss
shl
aad
stc
sbb
cwtl
xchg
mov
stos
push
imul
aad
dec
push
jbe
push
jmp
sbb
adc
pop
ret
enter
pop
sbb
adc
add
bound
mov
sub
mov
cli
sbb
sub
data16
jnp
sbb
fistl
lds
xor
mov
xchg
lea
jg
inc
repnz
jecxz
sub
mov
das
xor
jge
adc
xor
cltd
mov
mov
cmc
dec
idivb
loope
inc
inc
adc
loopne
dec
xchg
fs
enter
jns
cld
jecxz
push
dec
pusha
lods
mov
push
aad
push
mov
fs
mov
ret
adc
push
mov
rcll
sub
mov
aas
inc
xlat
scas
fimull
xchg
popf
outsb
push
add
inc
and
add
and
mov
mov
imul
int3
outsb
fnstcw
sti
xchg
cmp
or
sub
clc
push
cs
inc
adcl
sbb
hlt
xlat
push
call
mov
jno
fdivr
dec
cmp
jp
dec
mov
mull
xchg
inc
subl
das
test
fnsave
daa
sbb
in
outsl
jmp
jae
inc
push
dec
rcrb
arpl
cmc
mov
inc
scas
cwtl
in
iret
iret
clc
add
es
stc
dec
incb
jg
idivl
into
adc
and
add
xor
aam
push
loope
lds
cld
add
lcall
inc
int3
or
iret
xor
fldt
or
je
jnp
jns
stos
mov
add
mov
test
shlb
test
jp
push
inc
xor
mov
popf
imul
bound
jb
jne
pop
sbb
addr16
cmp
jae
pop
jecxz
and
sub
adc
test
bnd
sti
pop
into
xor
insb
xor
sti
lret
movsl
dec
in
jl
mov
ja
lea
ss
mov
mov
stc
dec
jno
lahf
insb
inc
data16
cmp
repz
enter
shrb
lock
mov
push
mov
fimuls
cmp
call
xor
icebp
jl
gs
adc
add
ficompl
ret
shr
push
adc
jb
sbb
int
jo
sti
sbb
push
mov
mov
sbb
enter
ljmp
mov
mov
fwait
pop
mov
mov
fdivr
jge
xor
stos
ret
jmp
rorb
adc
hlt
aam
imul
lods
lea
sub
jge
mov
push
mov
out
lea
icebp
inc
repnz
adc
push
rclb
lea
and
pop
inc
sub
cmpsl
add
pop
ss
jg
in
int
pop
out
ja
pop
pop
fs
mov
mov
xor
inc
cltd
adc
pop
arpl
repnz
sahf
jmp
xor
xlat
cld
daa
add
arpl
mov
push
push
or
inc
aam
dec
or
jmp
rcrl
inc
ljmp
out
jno
mov
je
rorb
mov
or
pop
ficoml
fldcw
lds
and
test
push
push
add
pushf
fldcw
mov
mov
adc
sti
push
jp
jmp
sbb
leave
fs
lret
daa
sarl
fisubrl
pop
ja
dec
sub
push
pop
push
repz
xchg
adc
inc
jp
adc
push
xchg
ss
cmp
cmp
mov
mov
sbb
sbb
sbbl
cld
sub
sub
mov
repnz
pop
jmp
dec
push
dec
mov
cmp
sub
add
xchg
sbb
clc
jb
mov
testb
cmc
into
loope
int
and
out
pop
xchg
mov
arpl
xor
in
icebp
addr16
adcb
popa
pop
add
outsl
adc
xor
dec
popa
ja
inc
fwait
lock
jbe
fs
inc
cmpb
insl
cmc
call
addb
ret
inc
add
sub
lahf
add
js
mov
sbb
cwtl
mov
stos
ja
sub
mov
ss
xchg
pop
mov
lahf
movsb
aaa
jne
or
sub
lds
pushf
cs
pop
test
ja
loope
jbe
jecxz
push
xor
movsl
xor
jecxz
sbb
rcrb
push
sbb
testb
test
jno
dec
mov
std
mov
in
jg
stos
divb
cmp
aad
push
pop
lret
in
inc
es
push
pop
jne
sub
jp
and
in
sbb
lret
pop
outsl
mov
stos
jp
das
jp
pop
ds
popf
xlat
dec
gs
add
cmc
pop
inc
ret
fldcw
jnp
adc
mov
push
cmp
adc
xlat
or
lahf
call
iret
stc
insl
sub
sub
inc
pop
pushf
inc
sbb
mov
lcall
or
out
subl
shll
or
dec
cmc
xchg
push
mov
lods
inc
sbb
lahf
test
jle
mov
scas
jae
incl
jecxz
pushw
mov
pop
cmp
xor
inc
fcomip
cmpsl
mov
gs
inc
jno
das
xor
xor
repnz
inc
fucom
out
push
xor
xor
iret
cmp
cmpsl
xor
sub
cwtl
push
inc
outsl
or
movsl
jmp
popf
icebp
push
fdivrs
jb
insl
push
in
pop
enter
or
jmp
shll
adc
test
test
cltd
aaa
mov
mov
adc
cmp
mov
dec
cltd
mov
pop
adc
xchg
mov
cmp
push
xchg
lahf
mov
mov
loopne
adc
inc
sbb
stc
pop
out
in
test
in
adc
data16
orb
inc
es
fisubrl
pop
shl
xchg
cs
sbbb
xchg
in
jp
iret
lret
sbb
ljmp
mov
andl
jmp
jne
or
adc
ljmp
add
out
push
out
dec
int
in
call
cmp
aam
cltd
sub
mov
jo
add
outsb
push
les
jbe
xlat
adc
int
mov
sbb
imul
sub
cwtl
xchg
jnp
into
sar
xchg
sbb
aam
mov
fs
dec
sub
popf
jnp
in
out
lret
out
dec
flds
pop
mov
test
xchg
movsl
push
fst
or
in
pop
lret
jmp
inc
sbb
add
into
push
mov
stos
sbb
mov
aaa
pop
inc
aaa
lods
xor
add
iret
call
or
push
leave
adc
push
mov
negl
xor
jmp
mov
lock
int
jo
test
pop
dec
lods
lock
jle
shr
sbb
cwtl
out
data16
in
fisubrl
sub
mov
xchg
leave
sbb
dec
stc
js
btr
in
int3
add
repz
pop
or
lret
fbld
xchg
in
xchg
pop
cltd
cmp
jne
std
ds
mov
lods
pop
popa
xchg
mov
std
decl
pop
add
jl
nop
cmp
mov
out
frstor
cmpsb
lret
call
cmp
jno
mov
dec
aas
and
fdivrs
push
xchg
add
pop
lods
push
push
call
icebp
test
or
push
sub
mov
xor
push
mov
repz
mov
out
int
cmpsl
in
mov
push
and
pop
dec
lea
inc
xor
or
stos
pushf
insb
lret
xchg
sub
pop
jge
xchg
mov
jl
inc
lock
insb
sub
xlat
insb
andb
sbb
mov
inc
xor
cwtl
daa
movsl
adc
and
adc
add
lods
mov
insb
fmul
mov
cmp
and
movsl
arpl
cwtl
inc
pop
sub
divb
inc
sbb
into
andb
fimuls
lods
js
mov
out
sub
mov
pop
adc
jecxz
adc
cmc
dec
xor
rorb
jns
jne
sub
int3
mulb
loop
int3
pop
repz
jg
popf
or
test
movsl
ret
push
dec
bound
shl
mov
push
es
sti
stos
xor
cmpsb
xlat
imul
xor
sbb
jl
lahf
sti
adc
andb
out
scas
fdivp
jno
xchg
mov
call
movsl
pop
or
lret
and
push
daa
test
dec
je
loopne
das
sti
insl
sbb
bnd
jl
cmp
xor
push
mov
jmp
xlat
push
cmc
mov
push
push
in
enter
in
cmp
cmp
add
push
dec
cmp
rcrl
mov
jmp
adc
les
jb
addr16
mov
lock
sbbl
push
int3
ss
fucomp
pop
and
daa
movl
cmp
or
popa
xchg
fidivl
mov
js
imul
add
or
cmp
iret
pop
sbb
enter
ret
shl
ret
adc
mov
or
sbb
adc
add
mov
add
es
sarl
sub
icebp
adc
jecxz
cmp
push
bound
xchg
iret
xor
mov
imul
lcall
add
les
dec
cmc
sub
push
jp
jecxz
dec
or
sub
loop
jne
das
sbb
inc
adc
fwait
push
jno
jne
adc
jmp
incb
push
jmp
inc
jno
mov
dec
and
ja
xchg
addr16
or
mov
ret
jmp
push
and
std
dec
cmpsb
lods
jg
daa
mov
test
xor
lret
outsb
dec
icebp
mov
push
adc
mov
pop
movsl
jmp
sbb
mov
imul
mov
sub
jns
out
sub
pop
out
je
or
mov
push
lret
xor
or
gs
fstpt
mov
dec
dec
push
sub
add
iret
in
scas
push
mov
push
add
and
scas
mov
xchg
in
sub
decb
jo
push
orl
push
mov
xor
add
adc
xchg
xchg
lods
sub
test
dec
pop
dec
data16
call
jp
push
stos
xchg
mov
scas
pushf
inc
push
add
cmp
mov
cmp
aaa
std
sbb
mov
pop
addb
sbb
pushf
sbb
mov
sub
inc
or
add
dec
in
xrelease
xor
stos
jecxz
adc
dec
jmp
pop
leave
adc
cli
adc
jns
push
notl
cmp
fnsave
ja
aam
mov
sbb
ret
mov
outsl
push
cmpl
mov
jmp
push
or
daa
js
jnp
in
mov
and
jae
cmpsl
ljmp
icebp
lret
and
aam
lahf
add
adc
jb
mov
jae
imul
pop
movsl
fcmovb
das
xor
mul
dec
mov
fstps
adc
aad
mov
push
ficompl
mov
cmpl
pusha
aad
andl
xor
pop
roll
pop
loop
add
sub
pop
push
xchg
inc
pop
fsubs
rorl
movsl
sub
cmp
insl
repz
dec
aaa
inc
xchg
xchg
mov
pop
inc
out
scas
mov
divb
in
pop
scas
cmp
pop
cmp
cmp
mov
adc
push
imul
mov
adc
push
pop
mov
sahf
add
mov
jge
xor
lods
je
cltd
cmp
jge
in
call
ja
adc
sbb
pop
add
push
mov
jo
xchg
hlt
mov
and
popf
push
adc
bound
ljmp
push
push
push
rorl
iret
hlt
lock
and
jmp
loope
dec
pop
ja
pop
mov
orl
push
mov
adc
stos
loope
int
add
push
fmull
stos
push
sub
jns
ljmp
jbe
ror
lcall
out
gs
jmp
out
loope
sbb
test
push
mov
popl
call
push
sti
in
lock
cmp
cli
adc
scas
or
or
es
ret
mov
sahf
jl
pop
mov
and
pop
xor
mov
mov
sub
lret
xchg
pushf
inc
and
or
xchg
nop
push
jo
fchs
idivl
and
pop
cwtl
cmp
pop
or
mov
xchg
nop
fs
or
pop
pop
xchg
inc
and
inc
fs
mov
call
cmpsb
jl
cmp
or
or
push
xchg
jecxz
lods
je
push
push
jl
dec
lahf
or
xor
fnstsw
push
insl
iret
jne
outsb
movsb
aaa
jo
pushf
xchg
push
nop
std
fbld
mov
mov
aaa
subl
xchg
shll
data16
or
sub
sbb
jae
lret
adc
addr16
out
es
jbe
xlat
loope
lcall
mov
fldl
in
outsl
mov
xlat
lret
mov
mov
cmpl
inc
or
adc
cwtl
sahf
inc
mov
xor
cld
xchg
nop
in
and
add
ds
cmp
arpl
mov
daa
jne
xchg
mov
sahf
stos
cmp
pop
jp
daa
sub
outsb
inc
js
test
outsl
fwait
sbb
jbe
lret
sub
lea
insb
ret
jo
int3
push
pop
xor
repz
adc
aaa
mov
mov
xchg
sar
popf
movsb
loopne
dec
fdivrs
inc
dec
fimull
imul
cwtl
sub
xchg
xchg
call
pop
xchg
jnp
flds
rcrl
gs
xchg
jp
xchg
xchg
jle
add
bound
or
popa
movsb
aad
push
push
xorb
jecxz
ljmp
cmc
jne
leave
ja
and
fwait
outsl
adc
inc
and
std
jnp
mov
mov
and
push
imul
cmpsl
xor
sub
stc
xlat
pop
icebp
test
pop
out
inc
push
cmp
clc
call
outsl
pop
andl
and
mov
dec
inc
mov
into
mov
cmp
aad
jbe
pop
mov
or
jecxz
jecxz
mov
stos
mov
je
mov
fmuls
jle
das
xchg
and
in
jmp
sbb
inc
cmp
pop
ficomps
cmp
in
mov
adc
shlb
aam
mov
aam
push
outsb
iret
out
adc
mov
outsb
mov
adc
cwtl
rorb
shr
test
sbb
and
jmp
xchg
inc
sub
xchg
fmulp
fmuls
cmp
mov
leave
push
lcall
dec
xchg
xor
inc
scas
jge
int
xchg
ljmp
std
mov
fldt
pop
pop
adc
sbb
cmp
push
xchg
push
mov
push
xor
sbb
stos
daa
push
clc
call
adc
clc
test
mov
mov
or
scas
jecxz
test
and
cmp
xchg
lods
add
dec
inc
rolb
mov
add
xor
arpl
or
sub
pop
imul
adc
adc
stc
xor
loope
lock
and
sub
add
mov
push
mov
dec
shl
sahf
cmp
sub
hlt
or
add
xchg
ja
cmp
sub
cld
sub
fs
fpatan
pushl
cli
aad
idiv
dec
dec
push
jmp
mov
test
jbe
fmul
adc
arpl
add
repz
cmp
in
sub
dec
add
sahf
jmp
int3
cmp
sub
add
jle
dec
mov
or
adc
jecxz
into
test
xor
ss
cmp
repnz
sahf
mov
sbb
les
cmp
int3
sbb
movsb
xor
pop
jns
sarl
adc
add
int
out
mov
outsb
xor
out
sti
fcoms
arpl
and
mov
out
dec
mov
bound
repnz
push
pop
out
xchg
push
sub
fnstsw
test
inc
je
push
aad
dec
fdivl
pop
ss
pop
into
add
fildll
xorps
inc
js
dec
jge
dec
cmp
push
sub
add
or
aaa
nop
jge
xchg
nop
shrl
mov
cmc
adc
pusha
jns,pt
imul
sub
mov
push
aam
je
and
push
loope
dec
cmp
jae
or
iret
pop
mov
mov
outsb
lret
sub
aas
xor
pop
add
jl
arpl
sahf
xchg
inc
mov
or
jns
cmc
adc
push
push
fwait
pusha
cld
faddl
scas
aas
out
fstps
mov
addr16
xchg
sbb
ficoms
lea
mov
push
push
mov
inc
mov
loope
add
mov
xor
sbb
xor
sarb
aam
jmp
arpl
and
dec
push
add
mov
cmp
mulb
jecxz
clc
dec
pop
cwtl
shlb
xchg
jle
adc
add
out
mov
or
rorl
sbb
cwtl
cwtl
ds
pushf
jle
mov
adc
jle
mov
cmp
and
inc
sub
cmc
xchg
test
jmp
movsl
adc
andb
loope
orb
or
mov
sbbb
jne
test
mov
int
push
repz
push
insl
xchg
mov
adc
popf
aas
jbe
repz
jne
xchg
adc
ret
push
mov
leave
test
imul
lock
dec
xchg
xchg
inc
in
test
fimull
cmpsb
test
test
xlat
inc
xor
sub
pop
cmp
mov
push
in
xor
xchg
stos
fs
fcompl
mov
or
mov
mov
imul
xor
mov
cli
stos
lods
hlt
mov
xchg
rcrl
sbb
xor
mov
mov
mov
iret
mov
adcl
xchg
xchg
mov
xchg
pop
test
jo
pop
cwtl
nop
or
es
xor
add
push
cmp
andl
sbb
dec
add
xchg
cmpsb
lods
test
push
push
lea
push
fdivrl
test
push
insl
gs
pushf
jae
sahf
dec
mov
mov
push
jne
mov
pop
push
insl
xor
cs
xchg
fcompl
pop
adc
cmp
add
popa
or
inc
std
jbe
int3
jmp
loopne
pop
mov
aam
iret
negb
mov
popa
bound
cmpsl
push
adc
jno
lcall
xchg
mov
stos
out
scas
cmp
test
mov
aad
lea
pushf
popa
les
inc
lds
pop
arpl
adc
mov
ret
or
lahf
add
imul
pushf
inc
xlat
xchg
xchg
and
mov
push
and
mov
nop
mov
dec
test
enter
insl
and
inc
cwtl
inc
mov
xor
push
xor
fsubr
add
frstor
les
add
mov
repnz
stc
int
out
mov
dec
insb
nop
cwtl
cmp
mov
insb
xchg
or
daa
cmp
pop
and
inc
lds
mov
cltd
jno
decb
mov
cmp
cmp
jl
cmp
fnstenv
lock
adc
mov
icebp
xchg
pop
mov
xchg
inc
scas
xchg
pop
cmp
stos
add
fnstcw
cwtl
mov
push
jnp
or
pop
popf
jne
pushf
lea
adc
test
inc
sbbl
les
mov
in
dec
mov
dec
bound
or
cmpsb
stos
cmpsb
sbb
mov
rolb
shrb
and
iret
in
mov
leave
or
adc
fisubrs
roll
mov
cmp
ficoml
jecxz
std
jmp
hlt
sub
andb
into
mov
push
fidivrs
add
push
sub
insb
adc
cmpsl
xlat
lahf
icebp
cmpl
sub
inc
dec
mov
dec
jo
adc
dec
xchg
mov
ljmp
xchg
notb
gs
inc
sub
cwtl
push
inc
ficompl
mov
ds
dec
push
inc
xchg
sbb
insl
out
and
std
addr16
xchg
cmp
filds
push
loopne
adc
addr16
fisttpll
or
call
imul
pop
jp
sbb
imul
icebp
jmp
mov
lock
and
mov
dec
xor
in
sarb
nop
imul
inc
dec
dec
ret
stos
mov
jno
dec
mov
sbb
mov
mov
aad
xor
std
jmp
cs
jecxz
int3
dec
add
inc
inc
int
jle
cmpl
fstpl
mov
int3
jmp
aad
xor
cmpsl
gs
fidivs
mov
rcl
mov
xchg
repnz
mov
or
ljmp
push
or
rorb
jne
fmul
pusha
in
jne
adc
icebp
jne
push
shlb
adc
jbe
in
push
mov
stos
pop
lret
push
jmp
or
stos
add
pop
daa
lcall
clc
icebp
sti
roll
hlt
out
les
pop
push
jns
loop
imul
sbb
sub
jmp
cmp
mov
movsl
adc
decl
cmp
add
in
call
cmp
jae
mov
lds
stos
sbb
cmp
adc
ja
pop
lods
add
cli
or
push
lods
ret
sarb
jns
es
loopne
jb
fidivl
ja
imul
and
inc
inc
es
test
push
loop
out
lahf
out
mov
out
xor
inc
movsl
gs
subps
stos
in
sbb
imul
lret
idivl
mov
and
sbb
jge
int3
push
xorb
mov
pop
add
xchg
fs
lahf
and
push
scas
fwait
sub
jbe
mov
ret
sahf
in
lahf
stos
pop
mov
cwtl
push
stc
out
call
cld
pop
not
pop
xor
mov
lods
mov
sub
add
lahf
mov
imul
je
cmc
xchg
mov
sbb
xchg
clc
ss
pop
xchg
fwait
push
cmp
xchg
mov
insb
push
add
mov
inc
outsl
in
pop
dec
or
add
mov
popf
dec
popf
sub
mov
test
and
out
pop
sarb
cmp
mov
inc
jne
mov
int
pop
or
xchg
nop
rcl
fstpt
cmp
cmp
sub
mov
call
mov
or
cmpsl
sahf
fistpl
stos
or
mov
test
jno
jno
repnz
push
dec
inc
adc
fs
incl
add
frstor
sbb
test
jo
int3
push
aas
mov
stos
sbb
lahf
pop
fdivrp
push
mov
jo
pop
sub
mov
out
aas
int
or
push
inc
adc
stos
cmp
dec
ljmp
std
adcl
jbe
add
sbb
push
push
adc
and
in
mov
ljmp
cs
cmp
clc
jbe
in
dec
or
xchg
imul
mov
mov
repz
add
push
inc
pop
ficoml
push
pusha
sar
sahf
inc
mov
sbb
out
sub
inc
mov
std
sub
in
out
popa
sub
add
fldt
out
push
out
stc
ja
jl
jne
mov
test
mov
addr16
xchg
ja
repz
adc
and
xchg
aad
pusha
stos
mov
adc
ljmp
lea
xlat
cmpsb
adc
xor
shrl
sti
push
ret
outsl
xchg
or
test
ljmp
stos
pop
sub
add
icebp
fdivrs
xchg
inc
add
sbb
pop
sbb
or
fidivrl
mov
insl
aam
or
cs
loope
ret
or
daa
jno
sar
sub
jmp
push
aaa
mov
xchg
data16
cmp
jge
sbb
cmc
mov
ds
adc
xchg
out
imul
roll
mov
dec
mov
test
mov
pop
adc
cs
sbb
or
pop
stc
shrl
jbe
xchg
test
inc
mov
ss
fdivp
sbb
popf
dec
mov
pop
inc
fistpl
inc
pushf
cmp
xchg
mov
dec
movsb
mov
filds
popa
into
or
pop
popf
dec
dec
mov
nop
in
aaa
ret
out
xchg
mov
mov
sti
xchg
fidivrs
cld
stos
loopne
xchg
jp
aas
aam
stos
into
push
gs
mov
fcoml
xchg
outsb
adc
or
into
fnstsw
add
test
lods
pop
repz
es
imul
fadds
adc
loope
sub
sub
outsb
and
cs
push
xor
pop
mov
repnz
scas
push
jp
popl
fstps
fiaddl
not
xor
mov
imul
lahf
iret
and
ret
mov
sbb
mov
jnp
add
fstpl
dec
ret
cwtl
xchg
repnz
insl
inc
sbb
sub
fdivrs
mov
repnz
cmc
leave
adc
mov
js
les
jo
pop
imul
sbb
outsb
outsb
jnp
sbb
add
add
cmp
sbb
and
sahf
not
sub
xor
adc
dec
and
cmc
dec
and
lds
out
ljmp
add
sub
mov
pop
pop
fcmovnbe
movsb
shrb
mov
push
and
or
mov
add
cmpsb
jecxz
push
mov
inc
mov
mov
mov
cmp
push
clc
enter
push
push
ret
dec
xchg
mov
fidivrs
repnz
shrl
dec
test
push
add
pop
ficoml
scas
js
xchg
cmp
loopne
add
mov
push
pop
popf
push
xchg
jecxz
xor
cmp
mov
add
enter
in
daa
jae
pop
loope
call
xchg
mov
leave
mov
xor
mov
loop
gs
xorb
add
es
jmp
push
lods
shl
pop
adc
or
xchg
jb
movsl
mov
lds
jg
test
adc
xor
cli
icebp
xor
cld
int
cmp
cli
imul
lods
push
or
je
sbb
hlt
cltd
in
xchg
out
fstl
aaa
fsubl
and
xor
js
xchg
scas
push
ljmp
mov
xchg
scas
and
jmp
cmpsb
jmp
ljmp
adc
inc
dec
loope
cmpl
orb
fwait
sub
fsubs
fcmove
mov
xchg
scas
inc
pop
cwtl
mov
adcl
fdivs
mov
int3
lret
push
sahf
xlat
xchg
or
cmc
loop
jle
pop
jno
test
stos
dec
out
fsubrl
cltd
rorb
ja
sbb
arpl
push
adc
inc
shll
pop
inc
mov
and
repz
ret
cltd
xchg
sub
jnp
testl
xchg
inc
jnp,pn
cmp
jmp
sbb
call
nop
ds
and
or
out
jmp
push
adc
xchg
jmp
xchg
idivl
adc
xor
sbb
push
mov
lea
pop
xchg
les
fs
lahf
mov
inc
pop
pop
mov
add
sub
decl
adc
jl
inc
lds
icebp
pop
xchg
add
imul
scas
adc
into
xchg
shrl
mov
test
adc
adc
ds
jns
cmpsl
cmpsl
mov
xchg
and
cmpsb
dec
jp
xor
xorb
inc
mov
cs
adc
pop
sbb
insl
dec
or
popa
push
push
cs
and
mov
jl
jl
add
out
mov
mov
mov
pushf
pop
mov
out
and
cmp
xchg
stos
mov
mov
lret
mov
cmp
in
pop
lods
pop
popa
push
call
fdiv
mov
sub
cmc
ret
fwait
add
subl
aas
jbe
jb
std
xor
pop
adc
out
imul
insb
sub
mov
jne
aaa
dec
push
sbb
shrl
push
mov
mov
call
add
out
mov
inc
cld
mov
xor
dec
push
sbb
sarl
xchg
sub
in
push
mov
push
je
jbe
lock
pop
fwait
xchg
cmc
xchg
dec
or
mov
inc
inc
lods
mov
mov
ja
subb
cmp
or
imul
test
stos
adc
inc
loope
aaa
jne
pop
cmpsb
fisttpl
dec
int3
out
imul
push
inc
mov
imul
pop
mov
orl
push
cld
stos
xor
pop
sarl
inc
out
mov
dec
fldenv
stos
cs
inc
push
orb
mov
cmp
addl
stc
pop
data16
sahf
stc
sub
mov
push
mov
push
dec
shll
pop
aad
cld
and
push
hlt
test
mov
jecxz
jo
cmp
movzwl
insl
mov
je
lods
fdivs
xchg
lock
cwtl
ret
cmp
xor
mov
push
mov
call
loope
fisubl
jno
scas
cmc
add
pop
mov
push
jle
push
xchg
cmp
push
into
enter
lcall
adc
mov
mov
push
cmpsb
fbld
in
jmp
clc
cs
out
inc
inc
cmpsb
aam
aaa
jl
pusha
push
cmp
xchg
jp
xor
outsb
fwait
jno
dec
aam
fiadds
mov
fcomi
cmp
pop
sub
fdivrl
push
mov
aas
out
icebp
sub
movsl
cmp
insl
shlb
ljmp
mov
cmpsl
pop
cmp
mov
ljmp
adc
jo
add
out
push
xchg
dec
push
or
int3
lods
aam
mov
adc
push
gs
mov
pop
dec
adc
add
lcall
cmp
lcall
cmp
dec
xchg
js
aaa
push
movb
ss
iret
mov
mov
mov
cld
popa
loopne
dec
icebp
sub
movsl
jecxz
dec
push
in
sahf
jno
addr16
cmp
rcrl
add
je
dec
add
mov
lock
loopne
aaa
ret
test
cmp
stos
add
jp
lcall
insl
fwait
loopne
imul
pop
repnz
rclb
fdiv
inc
lahf
mov
add
push
sti
and
int
adc
xor
add
jmp
xchg
inc
mov
mov
pop
add
jae
in
enter
addr16
loop
jns
and
bound
adc
sarl
test
cltd
sub
bound
lret
loop
loop
stos
bound
and
shl
mov
inc
ss
ja
push
das
adc
cmp
mov
shrl
rcrb
mov
jae
out
push
mull
inc
xor
xor
lods
popa
es
prefetch
filds
pushf
test
loopne
ret
inc
sbb
lods
mov
cwtl
mov
jno
rcrb
popa
lock
mov
adc
mov
pop
call
je
subb
cmpsl
test
lock
cmp
mov
stos
js
adc
mov
mov
loope
dec
jmp
xchg
cmc
cmp
sbb
fisttpl
cmp
push
push
fnstenv
sub
xor
pop
push
sbb
mov
add
dec
inc
daa
mov
andb
jecxz
dec
pushf
movsl
and
movsl
out
sub
and
mov
jg
das
test
xchg
mov
pop
add
test
cs
dec
xchg
out
and
jmp
xchg
popa
test
push
pop
cld
mov
les
dec
sahf
test
add
add
xor
ja
push
negb
push
dec
rorl
lcall
lahf
xchg
adc
ds
mov
les
cmp
into
in
jns
jae
aas
cwtl
fbstp
jno
sbb
cmp
jp
and
xchg
std
out
and
sub
adc
push
bound
pop
mov
mov
sbb
cmpsl
mov
jo
lods
pop
les
outsb
jb
push
push
jge
jno
xchg
mov
or
test
pop
fdivl
and
shrl
pop
pop
add
stc
mov
push
push
and
xchg
sub
mov
mov
cmp
xchg
sub
lahf
mov
mov
jb
xchg
nop
lcall
mov
cmc
rol
push
sub
or
ljmp
leave
shrl
lds
ffree
mov
sbb
idivl
clc
and
hlt
dec
xchg
filds
lods
mov
filds
pop
in
jns
mov
inc
jne
icebp
xchg
sarb
ret
mulb
cld
cmc
xor
jne
xchg
push
sbb
xchg
or
and
ss
lret
repz
and
pop
enter
dec
fimull
fadds
into
dec
leave
inc
xchg
loopne
roll
jne
lcall
je
xchg
mov
mov
in
and
xchg
lret
sti
xchg
cmpsb
rcrl
push
je
mov
les
sub
push
fistps
mov
push
arpl
jecxz
fs
xor
lock
mov
aas
and
incl
mov
pop
lods
iret
jo
mov
sahf
mov
pop
fs
dec
pmaddwd
int
sti
mov
cmp
outsb
xchg
or
push
lret
sub
pop
bound
fs
adc
hlt
sarl
and
mov
jmp
cmp
subl
pushf
mov
dec
push
mov
js
in
and
xchg
stc
leave
andl
add
icebp
mov
inc
lods
mov
mov
cmp
sbb
xchg
int3
cmp
sub
frndint
mov
neg
rol
movsb
ds
mov
mov
out
cmp
js
pop
loopne
lahf
repz
push
stos
jns
scas
adc
and
jge
test
adc
push
pop
out
jbe
lods
imul
test
mov
mov
sbb
and
leave
loope
adc
mov
push
loope
and
adc
scas
aas
outsl
movsb
out
pushf
pop
cwtl
jnp
mov
xor
sub
pop
jl
sahf
addr16
jne
adc
cwtl
cmp
es
push
xchg
dec
add
sub
push
pop
test
sahf
mov
lds
call
orl
por
in
inc
mov
loopne
and
xor
pop
cmp
inc
or
imul
dec
mov
pushf
outsb
ds
dec
adc
fisubrl
mov
mov
push
std
xchg
xorb
push
call
stos
adc
jae
mov
pop
push
push
push
cmp
fcmovb
sbb
xor
gs
sub
imulb
leave
mov
lcall
ret
call
fs
xchg
in
mov
inc
cmc
int
fucomi
addl
ds
inc
pop
sub
cmp
add
jg
jmp
clc
movsb
insl
inc
pop
xchg
int3
clc
das
cld
mov
daa
cmp
push
fs
loop
adc
xchg
dec
imul
imul
insb
mov
or
mov
lcall
jmp
fs
cmpsb
mov
push
cmp
stc
xchg
aaa
mov
push
faddl
ret
mov
ja
sub
lods
ss
in
jo
stc
daa
je
enter
fcoms
icebp
push
xor
inc
xor
pop
lds
mov
mov
pop
lret
mov
ja
cmpsb
outsl
decl
dec
ljmp
outsb
shll
shl
sub
xor
jg
es
shll
push
into
repz
sub
adc
xor
in
popa
push
lods
mov
xor
add
inc
push
lcall
cmp
mov
out
xor
jno
insl
ja
adc
sbb
out
sbb
sbb
loope
in
mov
xor
jecxz
xchg
cmp
rorl
inc
sub
xlat
sub
out
stc
out
mov
aad
sub
pop
ja
pop
in
ret
dec
jmp
sti
mov
lret
jbe
pop
mov
jp
mov
fisttpll
neg
or
inc
icebp
repz
dec
mov
cwtl
jg
jge
xor
mov
mov
cmp
cltd
mov
jns
mov
test
and
sbb
push
jae
sbb
sbb
xor
cmp
sub
ss
sbb
shlb
dec
das
mov
aad
inc
int3
xchg
push
xchg
shr
dec
and
add
push
mov
and
call
dec
dec
ds
insl
mov
xor
icebp
inc
enter
imul
aaa
insb
and
sub
inc
mov
xor
inc
scas
popa
stc
adc
subb
or
dec
frstor
into
mov
push
and
sub
das
cwtl
and
cmp
jge
or
jne
test
and
insb
mov
inc
movsl
xchg
push
dec
pusha
xchg
das
nop
testb
and
dec
sbb
push
sbb
pusha
push
dec
adc
adc
mov
cli
pop
popf
mov
out
inc
xor
dec
cltd
arpl
leave
add
add
jne
shlb
xchg
sti
outsl
bound
add
adc
inc
xor
mov
ret
outsb
inc
xchg
jle
std
les
fistpl
ja
lock
bound
data16
popf
cmp
ljmp
in
fsubs
dec
or
or
jbe
int
stos
nop
dec
inc
sub
and
cmpsl
addr16
sub
xchg
pop
adc
sbbl
sbbl
add
dec
mov
sub
sbb
pop
lds
cld
xchg
ficoms
or
xchg
sub
push
pop
in
in
in
je
push
mov
add
mov
bound
fsubrs
loop
lods
ljmp
popa
mov
mov
pop
jmp
dec
pop
pop
mov
fbstp
push
cmp
mov
xor
in
jl
add
lret
cmp
cmp
lret
mov
and
or
inc
sbb
bound
je
fistpll
mov
add
lds
sub
lods
pop
frstor
in
add
aaa
push
fwait
adc
adc
inc
push
push
and
jge
xchg
dec
es
mov
lahf
loope
test
das
fidivrl
mov
xchg
bound
cmpsl
test
dec
sbb
xor
inc
inc
add
xchg
cmpsl
es
out
sub
pop
xorb
cmpsb
nop
into
inc
cs
pop
cmp
push
cmc
add
daa
jnp
pop
iret
test
jno
dec
lock
sbb
pop
js
cld
xchg
xlat
enter
stos
stc
sub
in
jmp
out
mov
shl
adc
mov
cmp
cli
mov
mov
fisubs
sub
clc
loop
es
fnstcw
scas
add
xchg
jbe
and
mov
popa
pop
mov
mov
call
inc
push
outsl
cmc
pop
in
lcall
dec
pop
xor
cmpsb
pushf
not
and
test
fimull
aad
mov
out
sub
and
dec
xchg
push
jl
mov
iret
xchg
in
mov
scas
clc
xor
ficompl
add
mov
test
bound
inc
test
inc
pop
and
adc
xchg
jnp
imul
cwtl
mov
cld
cltd
test
xlat
leave
sbb
rorb
jmp
enter
mov
out
cmp
mov
lret
clc
cmp
dec
jecxz
fidivs
out
fdivs
push
jecxz
adcl
out
mov
rclb
jno
jle
push
jo
fisubl
rcrl
dec
pop
mov
and
inc
into
scas
add
rcr
imul
call
cmpsl
repz
outsb
push
mov
jb
dec
cvtps2pi
mov
insl
add
out
add
out
lret
and
repz
xchg
xor
dec
mov
ss
pop
lret
cmp
repnz
outsl
daa
pop
cmpsb
sahf
test
or
popf
push
sbb
pop
loope
lods
pop
fidivrs
outsl
icebp
fmul
xchg
inc
push
mov
int
sbbb
push
xor
push
add
roll
xor
fsave
xchg
push
mov
push
jle
das
hlt
pop
fldt
in
dec
hlt
rcrl
xchg
mov
and
aas
inc
test
cmc
xchg
push
xchg
mov
mov
mull
jne
or
sarb
ss
rcll
mov
ja
cmp
pop
mov
add
pop
test
mov
movsb
mov
mov
stos
stc
xchg
ret
mov
in
jle
adc
scas
leave
lds
and
mov
lahf
lock
shll
inc
mov
adc
cmp
inc
sub
out
popa
lcall
cmpsb
mov
jp
push
gs
pusha
mov
je
cli
dec
jb
test
cli
jg
push
xorl
xchg
in
adc
mov
xchg
adc
mov
or
in
xchg
andb
clc
dec
mov
add
js
xchg
dec
int
adc
mov
rorb
out
test
scas
fwait
aad
sbb
xchg
cld
test
rcrl
decb
pop
sbb
cmp
xor
arpl
xlat
mov
cmpsb
xor
sti
test
mov
test
repz
xchg
pop
xchg
cmp
stc
cld
xchg
imul
mov
aad
xlat
pop
push
cmpsb
mov
test
jne
repnz
outsl
ret
scas
test
in
roll
pop
cwtl
xlat
out
jmp
inc
xchg
pop
pop
dec
xor
mov
mov
pop
loopne
lret
shlb
jg
dec
jmp
adc
and
xchg
or
popa
sub
dec
mov
addr16
cltd
ret
aam
xchg
dec
ret
inc
repnz
clc
pop
jmp
mov
pop
jle
lret
cmpl
sbb
pop
scas
scas
pop
sub
sub
js
or
adc
test
fisttps
jmp
decl
cmp
and
rep
pop
sub
and
jge
xor
xor
nop
int3
jp
aaa
xchg
pop
roll
pop
inc
popf
aam
dec
push
lret
sub
cmp
xchg
pop
adc
mov
mov
loopne
xchg
lret
test
cld
lahf
sbb
jno
movsl
in
mov
mov
mov
mov
jp
mov
pop
ror
addb
push
insl
push
sahf
inc
pop
stos
adc
push
sub
xchg
insl
push
xchg
out
sbb
movsb
mov
mov
notb
testb
cmp
icebp
mov
out
imul
std
fidivrs
and
xor
int
movsl
out
mov
xchg
mov
inc
push
dec
bound
mov
nop
and
push
jmp
stos
aad
int3
mov
iret
mov
pop
pop
ja
dec
xchg
push
in
mov
cwtl
adc
xor
cmp
jae
or
xlat
in
faddl
negl
js
pop
cwtl
mov
call
repz
xchg
dec
add
lcall
mov
int3
pop
push
pop
push
fsubp
pusha
xchg
mov
into
xor
ljmp
push
adc
cmc
push
dec
cltd
push
dec
add
mov
movsb
pop
cmp
adc
in
cmpsl
ss
pop
fmulp
rorl
mov
jmp
mov
push
mov
ficompl
and
mov
push
pop
stos
dec
dec
cmp
xor
and
ret
adc
and
mov
lds
mov
imul
add
fildll
jo
bound
in
loope
pop
or
xor
mov
stos
pop
sti
or
sub
push
arpl
sbb
sub
imulb
mov
cmp
xchg
jg
call
cmpsl
mov
adc
or
loopne
out
into
inc
push
repnz
enter
adcb
adc
fldenv
aas
lahf
and
cmp
jo
jg
cmovns
xor
jnp
insb
dec
outsl
xchg
push
inc
lock
fistpl
repz
nop
push
outsl
dec
cmp
sub
outsl
cmc
enter
lea
adc
mov
mov
movsb
cli
jnp
lret
mov
xchg
ja
fisubrl
lret
ret
xchg
out
or
leave
mov
aam
lret
adc
cli
push
jno
mov
insb
and
into
jno
jo
sub
lret
push
test
and
push
jo
fisubl
jo
movsl
das
and
fldcw
in
pop
out
or
xor
pusha
cmp
jnp
mov
pop
mov
push
lock
or
fcomi
lcall
lods
push
repnz
lret
bound
pop
sbb
and
imul
movsb
xchg
mov
sbb
repz
push
fmulp
add
pop
call
clc
jge
and
ror
and
sbb
or
push
in
pop
inc
out
sbb
or
and
stc
jbe
lcall
rcrl
movsb
cmp
adc
mov
push
jb
cltd
sub
mov
add
pop
outsl
lret
fs
mov
int3
pop
out
aas
in
inc
and
or
ds
imul
orb
jo
cmpsl
mov
sbb
adc
aam
mov
or
insb
pop
cmp
cmpsl
dec
loope
cmp
lea
push
and
cmp
mov
adc
rorb
imul
hlt
push
into
dec
push
cli
js
inc
add
sub
push
dec
mov
push
mov
and
push
jnp
add
mov
inc
pushf
or
ret
jl
pop
jbe
push
jge
mov
bound
and
sahf
pop
xor
push
outsb
sub
add
je
pop
in
fs
sub
shlb
sbb
pop
dec
cmp
pushf
lods
ret
call
push
sbb
in
paddd
jns
jae
sti
jae
insb
jnp
xchg
and
xor
xor
test
mov
xorb
or
xchg
aam
out
in
jp
mov
pushf
out
test
filds
inc
sub
pop
dec
and
push
jns
jns
xchg
pop
int3
dec
mov
nop
jnp
push
loope
mov
mov
inc
jns
jno
inc
lahf
mov
lods
inc
inc
inc
ljmp
stc
loope
jmp
xor
call
rorl
mov
repnz
stos
push
outsb
data16
ljmp
out
jmp
xchg
inc
imul
and
pop
addb
sub
lahf
cld
arpl
ds
insl
pop
in
pushf
mov
idivb
xchg
pushf
les
loope
fwait
aaa
movsl
mov
loope
outsl
sbb
les
fstl
and
pop
outsl
outsl
icebp
xchg
aas
xchg
cmp
stos
enter
ret
pusha
mov
pusha
cmp
test
mov
sbb
hlt
xchg
jp
aas
addl
or
pop
ret
aam
pop
jecxz
aad
or
sbb
and
movsb
xchg
jo
dec
inc
aam
in
je
movsl
movsl
dec
out
jb
or
fwait
pop
xchg
cmc
rorb
dec
xchg
cvtdq2ps
fdivrl
sub
pop
mov
mov
sbb
fcomi
pop
dec
inc
mov
mov
push
inc
mov
jecxz
push
cltd
repnz
out
cmp
jae
dec
sub
xor
sub
and
add
test
adc
ss
push
sbb
or
ds
imul
in
in
dec
arpl
jle
sarb
rcrb
ss
out
orb
jbe
cli
sarl
iret
jo
out
adc
xchg
lods
mov
xchg
inc
cmpsb
adc
xor
icebp
mov
mov
insl
mov
and
rclb
rdpmc
stc
lock
sub
cmp
dec
push
gs
add
sahf
lret
push
xchg
inc
stc
xchg
das
es
pushf
loopne
rcll
icebp
loope
aaa
ja
gs
cmp
testb
aaa
mov
adc
ss
push
cmp
or
fwait
adc
jl
xor
pop
icebp
test
sub
outsb
loopne
popf
lahf
or
inc
xchg
ds
sub
xchg
push
jno
adc
fildl
mov
add
push
mov
jo
into
ficoms
mov
inc
adc
mov
mov
mov
or
sbb
mov
es
and
and
shrl
jle
out
push
push
clc
cmp
xchg
pop
repz
inc
insb
inc
dec
xchg
out
ss
sbb
pop
push
data16
mov
in
mov
imul
dec
xchg
and
mov
lea
out
fwait
jns
addr16
fdivr
dec
mov
dec
fucomip
inc
adc
and
and
xchg
sub
inc
cmp
dec
push
ret
out
repnz
dec
xor
pop
push
loope
push
icebp
adc
mov
arpl
adc
cmpsb
in
stos
adc
jo
into
and
cwtl
ljmp
and
test
hlt
dec
push
cs
mov
push
or
sbb
das
out
cmp
les
push
not
into
stc
int
mov
cmp
les
jnp
cs
mov
div
adc
test
lahf
push
test
jae
cltd
inc
xchg
cmp
cli
xor
aas
dec
cmp
loop
into
cli
mov
mov
repnz
and
add
jg
pop
leave
inc
bound
scas
mull
mov
mov
fsts
push
scas
adc
jl
xor
xchg
dec
or
fldl
sub
push
enter
out
push
adc
ja
xor
pop
adc
jg
gs
pop
ljmp
rep
outsb
or
mov
pop
jg
imull
mov
cwtl
and
xor
cli
movsb
pop
dec
into
adc
adc
fstps
jecxz
insl
imul
mov
data16
bound
xlat
push
and
jb
pop
fsts
icebp
pushf
xor
aaa
addr16
popa
cs
dec
popa
pop
andb
push
out
mov
mov
dec
dec
mov
lret
cli
pusha
out
ss
clc
ljmp
orl
jl
lds
mov
fld
or
scas
push
inc
inc
ret
hlt
dec
js
xor
outsl
nop
or
xchg
ss
stos
sbb
inc
int
sbbb
or
lcall
sbb
inc
jno
push
shlb
shl
jecxz
cwtl
and
arpl
pop
sbb
xchg
pop
cmp
and
adc
shlb
xadd
scas
arpl
add
add
test
push
ds
popaw
mov
out
jns
inc
int3
cmp
enter
xchg
dec
sbb
lods
mov
add
push
lds
shll
pushf
push
pop
arpl
cmpsl
aaa
scas
loop
bound
loopne
mov
push
sbb
data16
or
cmpsb
inc
jge
mov
cltd
push
xchg
jecxz
outsl
inc
rcrl
jo
dec
fsubp
push
adc
test
cli
insl
dec
pop
test
outsl
sub
pop
dec
stos
push
pop
mov
push
fdivr
insb
shlb
aaa
addl
lcall
scas
std
mov
add
das
pop
pop
popa
pop
loopne
nop
mov
lds
adc
xchg
sti
out
or
xchg
test
test
loop
or
mov
sti
out
xchg
cwtl
jbe
xchg
cltd
sbb
inc
and
jecxz
sbb
push
or
das
push
fst
push
sarb
mov
xor
mov
clc
pop
dec
cmc
mov
sub
popw
loope
arpl
or
mov
dec
sbb
negl
or
bound
aas
push
fucomip
jecxz
mov
add
imul
push
or
lret
aas
pop
scas
sti
iret
push
fcompl
jo
push
mov
ljmp
addl
rclb
pop
out
or
jecxz
loop
loope
mov
sbb
sbb
jb
or
imul
cmpsl
mov
pusha
loope
lea
in
and
sbb
imul
cmp
sub
data16
fucomi
xchg
cli
jle
sub
int3
add
cmp
pushf
test
or
xor
cmc
das
and
bnd
mov
xor
pop
add
mov
imul
test
in
mov
fcoml
jo
inc
mov
dec
rclb
pop
outsl
ss
pushf
pop
pop
dec
shll
inc
xor
cmp
or
lea
push
push
addr16
cmp
mov
scas
and
push
sub
jp
push
ret
retw
and
xchg
and
mov
in
lds
sbb
cmp
cmpsb
sbb
icebp
sbb
das
xor
xchg
les
pop
dec
sbb
dec
add
test
mov
and
outsl
sub
cmp
hlt
jp
fstps
test
cld
xor
daa
jge
jl
fiadds
mov
sbb
loopne
out
out
jle
popa
jae
ret
pop
test
jbe
sarb
les
xor
ja
inc
rep
xor
fcomps
mov
xchg
shll
mov
jl
mov
nop
ficomps
mov
pop
cmp
cmpb
xchg
inc
add
push
push
pop
or
inc
xor
sub
bound
loopne
pop
push
cmpsl
mov
mov
xor
dec
rorl
popa
test
inc
lock
xor
jb
jns
xor
shrl
int3
ljmp
mov
jns
pop
push
xchg
xor
push
aam
call
stos
pop
pop
sbb
aas
sahf
mov
sbb
shll
imul
ja
repz
xchg
nop
jae
pusha
jg
add
fcmovb
rcl
shlb
mov
scas
mov
test
and
inc
adc
lret
cmpsb
scas
and
jmp
lret
out
dec
mov
jne
cmp
cmp
cmpsl
pop
data16
xchg
lahf
xchg
icebp
push
or
mov
adc
pop
push
stc
imul
int3
lret
popa
xchg
jo
and
nop
add
cmp
sbb
xchg
add
add
cmp
xchg
outsb
ljmp
jne
and
dec
push
or
sbb
cltd
icebp
mov
or
outsl
test
lret
pop
jo
shrb
dec
sub
push
dec
in
addr16
shll
add
cmp
test
lods
call
inc
jo
xlat
fcmovnb
dec
mov
push
out
int
sbb
sbb
ret
xor
jbe
cmp
into
jge
and
repnz
cmp
ds
inc
js
daa
jle
loope
nop
enter
xchg
jb
jmp
and
outsb
sub
ja
lret
out
es
cmp
cmpsl
add
jle
push
clc
fnstsw
adc
add
xchg
mov
push
push
data16
and
notb
xor
inc
and
xchg
sbb
repnz
lcall
popa
sub
aaa
jmp
adc
mov
std
push
insl
stos
push
leave
fiadds
hlt
xlat
int
scas
repz
cmp
jmp
dec
xlat
push
call
mov
or
xor
or
mov
ds
repnz
clc
in
out
dec
aam
xchg
mov
xchg
aad
xchg
xor
int3
in
repnz
sbb
js
pop
sub
push
cmp
scas
xchg
subb
inc
insl
in
xchg
fwait
outsb
sub
mov
push
les
xchg
call
cmp
sbb
addb
mov
mov
lods
lahf
lds
cli
test
loopne
lods
xor
add
add
je
fsubl
int
jge
mov
jbe
push
rorl
sub
mov
test
cmp
pop
push
mov
inc
pop
sbb
dec
stos
cmp
out
arpl
cs
xor
mov
lahf
movsb
pop
inc
jns
cmp
lcall
loopne
and
les
stos
stos
mov
push
push
jb
fldt
jecxz
addl
repnz
dec
in
sub
jge
cwtl
xchg
and
add
or
jp
pop
es
andb
pop
add
data16
bound
test
ficompl
in
sbb
repnz
sbb
adc
das
cmp
arpl
jmp
xchg
hlt
xor
idivb
push
sub
inc
ret
jle
clc
cmp
mov
int
mov
add
repnz
fcoml
scas
loop
icebp
jb
lods
add
mov
leave
das
cmp
push
xor
or
push
add
lds
mov
cmp
repnz
ss
add
mov
xor
ja
out
ror
bound
sbbl
dec
xchg
fwait
cmp
nop
js
mov
pusha
int
inc
movsl
xchg
pop
pop
icebp
pop
loop
fldenv
lahf
mov
stos
repz
ret
pop
or
sbb
xchg
mov
popf
in
xchg
in
sbb
adc
pop
popf
out
inc
fucomip
enter
lahf
sbb
mov
pop
fstpl
mov
xor
aas
jecxz
imul
pop
shl
dec
mov
push
sahf
push
shll
pop
sub
leave
movsl
adc
push
clc
and
xchg
or
stos
xchg
and
je
xlat
and
sub
rolw
xchg
mov
jne
mov
int3
test
sbb
pop
fistl
or
or
test
inc
and
cmpsb
sbb
scas
outsw
arpl
dec
mov
mov
dec
mov
sub
push
sbb
xchg
jno,pt
fucomi
push
pop
fimull
xchg
or
adc
ja
test
cmpsl
pushf
stos
stos
lcall
fisttpl
push
sbb
sub
negl
hlt
mov
cwtl
mov
pop
andb
pop
jno
les
xor
sbbl
icebp
jnp
out
jns
add
mov
push
pop
sarl
cld
cwtl
movsl
mov
cmc
fdivs
push
mul
mov
pusha
pop
loop
push
lods
pushf
shlb
arpl
or
xor
shl
cmp
push
cltd
and
sahf
pop
stos
sub
cmp
scas
movsb
sub
cmp
call
mov
xchg
shr
loopne
cltd
fxch
xor
xchg
xor
lds
pop
sub
xor
daa
sub
add
or
xchg
push
in
mov
clc
and
pushf
addr16
loope
xchg
sbb
mov
iret
lds
adc
pop
mov
jecxz
pop
jbe
arpl
sbb
sbb
cmpb
jns
push
jo
and
jno
or
push
test
jae
inc
sub
ja
jns
mov
mov
nop
cmp
cmc
jae
dec
and
and
dec
and
jp
dec
jp
iret
push
int3
add
hlt
add
pushf
push
divb
popa
lds
jno
stos
sub
xchg
mov
les
xor
icebp
daa
cld
imul
mov
dec
stos
loope
pop
xchg
xor
mov
int3
dec
dec
mov
push
test
mov
inc
es
dec
dec
ljmp
add
pop
int
pop
ljmp
or
or
pop
mov
and
push
push
cld
mov
stos
push
sub
push
outsl
or
inc
xor
sar
fisubrs
cmp
xor
test
fisubs
lds
mov
dec
iret
aad
lods
jl
xorb
mov
mov
jae
mov
push
sti
inc
push
sti
iret
push
and
lahf
into
jle
sbb
les
daa
add
lcall
jmp
sbb
enter
call
movb
mov
add
add
push
mov
orb
mov
mov
or
jno
adc
push
sahf
mov
aas
push
iret
xor
xchg
sub
std
pop
loop
mov
int
fildll
add
sub
push
in
or
cli
ret
inc
clc
sub
fisubrs
lods
loope
mov
orb
scas
push
in
xchg
add
sub
jg
in
pop
loop
mov
das
enter
xor
cmpsb
jecxz
cmpsl
stos
cmp
mov
sub
mov
daa
mov
cmp
mov
aam
jbe
cmp
aad
clc
adc
hlt
xor
lea
aaa
dec
pop
add
pop
xor
adcl
or
inc
popf
adc
aaa
cld
js
pop
sub
xor
xchg
adc
fcomi
push
aas
adc
enter
scas
jno
out
popf
adc
or
rcr
out
mov
or
adc
clc
pop
jns
push
fidivl
stos
lock
nop
mov
lods
cwtl
ss
push
xorl
sbb
dec
dec
shlb
repz
inc
lcall
dec
inc
daa
xor
ljmp
sub
mov
sbb
push
sub
aam
mov
mov
inc
insl
pop
pop
xlat
adc
dec
push
inc
adc
fcmove
jl
lds
movsl
shlb
addr16
lret
add
into
dec
imul
mov
fistl
pop
pop
lods
popa
iret
fiaddl
ja
mov
outsb
aam
adc
loop
cmpsb
into
adc
nop
dec
or
in
iret
movsl
mov
lea
jb
mov
adc
add
mov
add
jns
mov
sbb
sbb
hlt
push
test
mov
int
lret
mov
dec
fdivrl
lret
or
cwtl
xor
lret
dec
aas
ljmp
das
imul
and
inc
das
mov
arpl
jle
sbb
pop
jge
fwait
pop
dec
xlat
push
dec
mov
xchg
xor
aaa
xor
data16
cmp
mov
pop
sbb
dec
dec
loopne,pn
cld
lds
lds
xchg
jnp
mov
int
rol
cmpsb
repz
cld
sahf
pop
fbld
adc
mov
push
and
sub
mov
daa
push
xchg
push
fadds
rcr
cmpsb
clc
hlt
in
cmp
mov
or
outsb
add
jmp
sub
and
mov
cmp
push
jmp
addr16
ret
cmp
pushf
scas
cld
or
cmp
jo
pop
xor
pmaddwd
or
hlt
mov
push
enter
aaa
mov
out
pop
arpl
pop
jl
mov
gs
sub
cs
ret
outsb
xlat
test
pop
dec
cmp
xchg
iret
lcall
jge
stos
fisttps
pop
inc
mul
pop
shlb
scas
movsb
cld
mov
ss
test
lret
mul
popa
inc
cmc
int3
jl
ret
ss
dec
fisubl
mov
data16
cs
loopne
mov
popa
push
xor
in
lods
lods
mov
fists
in
add
push
nop
lock
adc
and
dec
adc
dec
lcall
popa
add
in
sub
stc
mov
or
or
movb
cmp
divl
imul
xorl
int3
cmp
lret
shll
das
jne
jmp
jns
mov
mov
mull
cmpsl
ja
inc
fdivl
mov
pushf
nop
aam
mov
mov
leave
add
xchg
add
nop
sub
xchg
stos
pusha
rolb
fwait
mov
xchg
aad
imull
stc
mov
fstpt
mov
cmp
mov
and
adc
fildl
lods
sub
call
insb
or
or
cmp
push
pop
in
pop
ret
shlb
hlt
call
imul
out
outsb
or
mov
in
addr16
cmp
sbb
adc
xchg
jl
mov
fadd
mov
jne
cltd
cmp
js
pop
rorb
xorb
dec
add
popa
add
jmp
mov
loope
rcl
hlt
popa
bound
test
insl
daa
inc
mov
scas
mov
pop
jb
out
call
sbb
pop
mov
stc
daa
mov
pop
arpl
inc
lds
mov
int
test
outsb
mov
mul
test
xor
xchg
mov
mov
sub
js
push
mov
or
lods
dec
mov
sub
mov
stos
ret
fldl
xor
iret
stos
dec
mov
cs
dec
enter
xchg
aad
cli
mov
xor
sub
imul
mov
movsl
push
mov
push
jecxz
and
bound
xchg
jns
and
out
inc
cmp
inc
mov
in
fisubrs
les
pop
cmc
pop
sahf
imul
cltd
outsb
les
mov
pop
and
std
test
lret
cwtl
jnp
or
or
mov
mul
rcll
std
out
mov
inc
lods
test
test
shll
pop
mov
pushf
adc
mov
jb
lahf
sub
call
sbb
dec
ljmp
push
scas
pop
js
jmp
fstpt
xchg
ds
cli
cmp
jae
sarb
decl
shlb
in
xor
mov
sbb
in
pop
mov
inc
jo
mov
rorl
sahf
pop
jnp
adc
bnd
dec
xchg
push
adc
movsl
or
hlt
leave
aaa
jmp
or
jbe
adc
pusha
cmc
std
movsb
jnp
mov
cmp
sar
mov
adc
jae
nop
or
cmp
inc
icebp
pop
in
xchg
or
or
sbb
xlat
pusha
push
push
fistpl
arpl
inc
xor
cmp
notl
test
add
push
loopne
dec
jge
shrb
xchg
fcoml
mov
sti
in
gs
jns
repz
inc
jnp
hlt
mov
and
out
mov
mov
sub
fs
int3
sbb
daa
sbb
sub
lcall
popf
and
pop
pop
icebp
dec
lock
sahf
inc
sub
jmp
mov
inc
dec
jmp
divl
jl
and
cmp
fs
sbb
inc
mov
pop
adc
pop
roll
frstor
mov
push
push
inc
mov
xchg
inc
add
sub
loop
jge
rcll
xor
xor
iret
fs
xlat
js
fwait
in
push
xchg
cltd
cmp
push
xchg
mov
roll
dec
imul
je
cmp
aaa
jp
xor
test
hlt
mov
jmp
sysenter
jp
dec
ficomps
xor
test
mov
fstpt
ficoms
pop
mov
aaa
fbld
jge
cmp
jns
insb
imul
out
enter
cmpsb
inc
fistpll
lods
jg
cld
lret
scas
pcmpgtb
fldt
sahf
aad
enter
cwtl
addr16
sbb
inc
mov
fcomi
xchg
jo
xor
pop
adc
cmp
stos
in
cmp
sti
lcall
mov
adc
jns
fadds
sbb
jg
or
pushf
xchg
ret
inc
push
icebp
loop
into
movsl
mov
or
push
jp
mov
sbb
sbb
cld
mov
outsl
jmp
cmpsl
push
in
stos
mov
push
out
mov
fdiv
cmp
xlat
call
test
dec
into
pop
es
jg
scas
and
pushf
adc
jne
jae
js
mov
mov
imul
cmpsb
sbb
jmp
xor
jbe
dec
push
popa
test
push
and
les
nop
jge
mov
adc
mov
xchg
inc
mov
decl
movhps
test
mov
mov
iret
mov
and
jl
ret
ljmp
or
insl
jnp
fisubrs
or
mov
js
faddl
test
jl
xor
push
lods
jge
ljmp
jl
add
je
sbb
jbe
scas
mov
inc
xor
arpl
movsl
xchg
sub
data16
jg
dec
scas
add
lret
xor
lahf
xchg
add
movsw
lock
adc
mov
and
add
fdivrp
mov
sbb
shll
iret
jmp
xlat
cli
jl
sbb
outsb
cltd
insb
test
mov
push
fstl
mov
sahf
and
shr
imul
cmp
push
sahf
cmpsb
and
cwtl
pop
xchg
leave
ficoms
out
insb
imul
jnp
lds
lcall
pop
mov
jno
dec
ds
sarb
xor
and
out
idivl
pop
cmpl
mov
loop
cmp
in
push
repz
jae
sti
pop
jl
aad
push
dec
std
mov
movsb
jnp
jne
xchg
adc
fwait
pop
ja
sub
mov
xchg
icebp
or
and
popa
imul
hlt
push
call
or
ror
in
test
sbb
ret
dec
cltd
mov
ret
and
pop
cwtl
cld
cltd
sub
push
out
adc
fdivs
test
cmpb
fwait
xor
sahf
scas
insl
xchg
out
xor
fistpl
inc
lahf
and
push
int3
sbb
jge
cld
xor
in
push
pushf
mov
jle
xchg
and
sbb
and
xchg
xchg
stos
ja
mov
mov
cmp
daa
mov
sbb
repnz
mov
ret
jnp
iret
in
mov
aad
mov
ss
repnz
and
pushf
push
aaa
mov
js
hlt
sub
mov
lea
jnp
bound
jnp
movsl
jmp
xlat
cmc
adc
aas
inc
stos
and
into
repz
out
xchg
xchg
popf
sub
xchg
addr16
inc
fnsave
xchg
cwtl
add
mov
dec
pop
jl
mov
pop
std
bound
pusha
je
dec
fsubrl
pop
cmpsl
addb
pop
icebp
add
cmpsb
loop
rolb
jo
out
stos
and
incl
leave
push
adc
jmp
or
push
cmpsl
adc
stc
jb
adc
inc
mov
cmp
out
pop
jo
ret
ljmp
jmp
rcrb
mov
pop
mov
scas
and
xor
out
dec
pop
and
in
push
mov
xor
enter
rol
fiadds
sbb
pop
mov
or
test
loop
ljmp
and
js
imul
mov
das
pushf
pop
sub
daa
int3
adc
cld
mov
aaa
leave
jg
lea
add
movsl
push
push
pop
jae
scas
push
stc
add
cmp
adc
xor
mov
jo
test
movb
lret
int
dec
sub
mov
out
pop
pusha
into
sahf
aaa
mov
cmp
ltr
popf
dec
jle
ja
out
test
add
add
jge
es
aas
scas
mov
repz
sub
pusha
sahf
mov
daa
jle
arpl
ficoms
scas
outsb
iret
cltd
pop
jo
loopne
test
ja
mov
adc
icebp
imul
clc
cmp
stc
call
xchg
xchg
sbb
pusha
shl
xlat
cmc
mov
mov
add
cli
js
es
mov
inc
or
adc
adc
pop
cmc
pop
pop
mov
mov
mov
mov
xchg
add
push
adc
aad
adc
pop
loopne
ret
sbb
push
jb
iret
adc
or
rclb
lahf
test
inc
push
test
sub
lcall
test
lods
adc
test
push
mov
idiv
jp
xchg
mov
inc
hlt
test
jne
push
arpl
adc
mov
push
push
repz
sbb
aam
test
add
lods
repz
in
xchg
pop
add
in
push
inc
add
lcall
ljmp
int3
add
xor
jns
call
mov
icebp
mov
mov
ss
int
sub
cmp
into
fstl
in
imul
dec
sub
ret
mov
push
negb
pop
and
adc
cli
sar
jno
adc
cmp
inc
mov
imul
jbe
aaa
clc
sbb
loope
ss
in
sbb
or
sarl
adc
jp
dec
mov
mov
pop
rolb
and
out
into
out
mov
in
jno
mov
sbb
dec
cld
das
ret
xchg
cmp
pop
leave
mov
lret
mov
sub
fs
std
xchg
jmp
pushf
xchg
cltd
testb
dec
cmp
pop
push
lds
ret
push
and
jns
pop
add
push
faddl
add
sbb
in
mov
fisubrl
sbb
jg
mov
in
scas
cld
imul
pop
lods
out
scas
cmp
dec
mov
cmp
xchg
out
lahf
and
ljmp
pushf
and
dec
mov
mov
out
jle
std
lock
dec
add
or
les
mov
shl
arpl
pop
lods
das
outsl
mov
xchg
addr16
gs
aaa
mov
sub
jae
ficompl
mov
adc
stos
inc
cmp
or
adc
push
js
stos
add
pop
mov
mov
add
jl
std
leave
xor
sbb
mov
xchg
xor
sarl
sub
clc
lcall
aaa
mov
lahf
scas
dec
jecxz
lds
fmuls
movsl
xor
jbe
pop
ss
int
mov
arpl
mov
orl
add
in
jp
lods
not
popa
stos
daa
test
aas
xor
andl
and
fdivl
in
pop
outsb
loope
push
mov
mov
adc
movsb
sbb
cmp
jge
cli
xchg
lea
mov
cmpl
sub
flds
movsl
daa
shrl
xchg
cli
fstpl
pushf
push
add
insl
sub
adcl
fcmovbe
jae
sub
outsb
mov
test
mov
jg
mov
xor
xor
in
mov
jb
sbb
xchg
mov
rorl
into
and
dec
inc
sub
outsl
push
stos
pusha
mov
add
jecxz
out
das
sbb
cmpb
out
pusha
lods
pop
loope
add
add
ficomps
js
notb
add
pop
add
push
add
and
lods
or
daa
mov
lea
lea
out
push
add
in
jl
adc
bound
sub
mull
xor
and
or
sti
js
jmp
nopl
push
sub
and
adc
aam
mov
sub
xlat
pop
shlb
shll
shll
push
sbb
sarl
xchg
test
sub
dec
cmpsl
xchg
imul
mov
jne
add
cli
sbb
sub
jl
mov
fs
jmp
pop
mov
rolb
xchg
andb
and
adc
or
xchg
add
adc
stos
push
and
mov
mov
adc
push
mov
push
jmp
push
mov
fprem
jmp
push
inc
inc
dec
or
mov
sub
or
out
jmp
mov
push
adc
push
repz
or
loope
or
xchg
dec
mov
push
mov
fisttps
fucomip
adc
aam
rcll
sti
mov
sub
pop
out
imul
mov
pop
mov
or
push
and
mov
pop
fcmove
std
sub
push
int3
push
pushf
inc
cltd
sbb
sub
je
in
into
jp
in
or
cmp
clc
mov
inc
fmull
dec
sub
adc
fisubl
push
sub
sbb
cmp
xchg
mov
mov
cwtl
pop
mov
pop
loopne
cmpsb
mov
dec
cld
push
dec
push
and
cwtl
add
aas
or
mov
push
push
jns
push
dec
dec
mov
adc
mov
pop
test
xor
sbb
adc
pop
xchg
jp
or
push
test
and
in
inc
or
pop
int3
notl
add
jge
addr16
lahf
add
sarl
inc
and
cmp
dec
les
pop
dec
xor
vandnpd
aas
xor
mov
jle
les
jae
mov
sub
fisubl
pop
aaa
sub
add
sti
hlt
sub
sbb
mov
push
pusha
fsubl
sarb
gs
push
push
xor
dec
enter
pop
test
loope
and
loopne
repnz
jno
add
lods
mov
jo
ljmp
lods
ss
enter
fnstsw
push
shll
fistl
push
rclb
lret
ss
insb
adc
jmp
hlt
out
adc
mov
jbe
jg
xchg
dec
xchg
lods
iret
mov
out
aas
mov
fisttps
dec
push
xchg
dec
aaa
repz
mov
ds
cmp
stc
dec
and
lcall
jle
std
adc
addr16
pop
fidivrs
sbb
mov
icebp
imul
push
sbb
xchg
outsb
dec
pop
and
imul
xor
mov
cmpl
shll
push
adc
ror
in
pop
cltd
xchg
xchg
xchg
imul
cmovno
fcoms
cmc
pushf
mov
fistpll
cmp
scas
push
sahf
inc
icebp
lock
xor
dec
jmp
mov
imul
inc
jbe
jns
inc
in
cwtl
or
dec
dec
loop
and
mov
leave
stos
cmp
test
pop
mov
or
das
rorb
test
xor
test
aas
cmp
add
add
enter
shl
outsb
and
adc
sti
and
sahf
mov
add
in
xor
repnz
and
xchg
push
mov
cmpl
ljmp
push
cltd
in
fnsave
fildl
xchg
ds
lret
cld
aad
sub
mov
loope
cmp
xchg
lahf
das
mov
xchg
cmp
xchg
hlt
mov
push
xor
lock
pop
dec
and
jb
and
inc
xlat
adc
fisubl
or
and
sub
push
mov
cmpsb
gs
rorb
cli
lods
dec
movsl
sub
xchg
jb
xchg
cs
sub
psrad
into
mov
mov
jb
movsb
out
mov
add
pop
push
push
mov
movsb
jmp
xor
jmp
and
jae
mov
out
jae
aas
pop
aam
popf
or
pop
xacquire
outsl
loope
inc
xor
cmp
daa
stos
sbb
icebp
and
pop
jne
insl
lahf
in
insl
repz
lcall
iret
jle
jns
ret
hlt
paddb
dec
add
cmp
fidivrl
dec
test
inc
dec
lahf
adc
adc
rorl
and
push
fcomps
push
int3
push
xor
stos
push
mov
jno
push
push
outsl
test
and
sti
sbb
inc
mov
jmp
test
pop
cmpsb
pop
mov
sbb
jecxz
cmp
mov
dec
lods
inc
fs
out
pop
lea
cmpsb
cmp
sub
adc
inc
inc
into
icebp
adc
jecxz
in
add
xor
rcrb
xchg
mov
rorb
sbb
dec
out
std
push
fstpl
mov
mov
fcoms
mov
add
fisubrl
pop
mov
ret
clc
lods
xchg
idivb
jne
and
dec
jle
xlat
arpl
and
aaa
in
xor
cld
rcll
movsb
imul
ljmp
movsb
movsl
lock
mov
adc
jg
or
push
insl
mulb
jge
dec
stos
or
mov
daa
mov
mov
or
adc
leave
jmp
int3
adc
rcrl
cwtl
jo
or
pushf
add
enter
cmp
or
mov
pop
call
mov
adc
or
ljmp
mov
outsb
jns
dec
lret
jo
mov
int
xor
sub
jo
loop
and
cmp
inc
jbe
cmp
cld
jo
leave
inc
adc
rcl
dec
lods
notl
xor
mov
xchg
adc
jge
ss
lahf
jnp
inc
lds
aas
mov
rol
adc
sahf
std
mov
popf
dec
lahf
inc
mov
popf
push
lea
pop
push
aad
mov
stc
test
adc
outsb
in
test
outsb
mov
inc
test
test
dec
or
pop
mov
pop
dec
out
fsub
cwtl
popa
jmp
push
xor
outsl
aaa
subl
cli
add
dec
push
ljmp
subl
push
fistpl
and
mov
test
stc
push
mov
xchg
and
add
pop
pop
mov
in
xchg
dec
sub
push
mov
push
sbb
filds
shll
xor
dec
push
inc
mov
pop
test
inc
in
add
add
jae
xchg
mov
shlb
insb
push
mov
shll
int3
mov
aaa
inc
lods
pop
push
rcrl
push
cs
inc
mov
cmp
ret
pop
in
les
adc
rcr
cmpsb
mov
jno
in
lret
xchg
data16
fmuls
push
call
lods
dec
cli
mov
dec
dec
les
cmp
jg
and
xchg
mov
outsl
imul
mov
loop
shl
sbb
mov
jns
les
fildll
mov
push
add
jae
jb
int3
mov
ljmp
pop
movsb
aas
hlt
test
insl
stos
fcmovnb
jae
out
sbbb
mov
loope
fiadds
icebp
addr16
xor
outsb
sub
cli
cmc
jecxz
mov
bound
sub
or
addr16
mov
dec
addl
aas
addr16
add
mov
mov
dec
les
aam
dec
les
adc
insb
in
jno
mov
loope
icebp
jecxz
sub
cld
lods
or
addl
and
daa
adc
je
ja
push
lahf
hlt
cmpsb
xchg
out
inc
inc
push
out
add
dec
icebp
sbb
orl
inc
lret
push
xchg
inc
or
jo
arpl
mov
shlb
inc
ret
adc
adc
cmp
dec
sbb
pop
mov
in
sbb
pusha
mov
sahf
sbb
pop
cmc
ffree
cmc
sub
mov
inc
cs
test
scas
mov
mov
lds
mov
imul
loopne
lahf
cmpl
jg
adc
inc
add
ds
jb
xor
and
push
sbb
mov
rclb
and
fstpl
jb
test
inc
mov
out
mov
cld
fbld
cmp
sbb
sub
cmpsb
stos
orl
adc
pop
lea
sub
sbb
mov
or
in
push
sub
arpl
icebp
je
inc
lds
push
sbb
jmp
mov
inc
ja
bound
dec
aaa
push
decb
pop
mov
inc
lods
iret
rolb
inc
js
les
mov
pop
lods
pop
pop
fmull
jge
cmp
and
leave
mov
add
push
sbb
rcrb
loopew
add
inc
and
or
lods
sbb
and
xchg
into
adc
fiaddl
push
decl
cmpsb
icebp
lods
bound
imul
aaa
push
push
push
test
adc
icebp
arpl
pop
jge
dec
xchg
cld
push
push
cld
sub
insb
or
loope
sar
dec
lret
xor
push
hlt
fs
jge
xor
sbbb
jne
cmpsb
jg
jecxz
test
in
fildll
inc
mov
repnz
mov
xor
mov
mov
or
xor
xor
dec
mov
in
add
lret
aam
lock
pop
test
pushf
fstpt
sbb
shll
mov
sahf
popf
sbb
push
pushf
fadd
mov
inc
stos
aad
aad
ja
scas
sbb
cmp
dec
movsl
mov
in
mov
sub
adc
inc
out
cltd
xchg
ret
push
add
nop
loope
fwait
cmp
mov
xor
and
add
jg
or
jge
dec
pop
mov
xchg
or
imull
sbb
rcrb
rolb
pop
xor
icebp
mov
jle
int
xor
pop
inc
sbb
dec
rcll
ss
in
adc
scas
lcall
cwtl
add
sahf
add
data16
mov
lods
ret
push
fdivrs
mov
push
in
loope
std
insl
xor
in
jo
into
test
sub
shlb
loop
sbb
pusha
or
mov
mov
popf
sub
fwait
push
addr16
adc
add
add
cmp
movsb
jecxz
outsl
cmc
and
cwtl
mov
popa
pop
and
pop
cwtl
jno
push
lret
lahf
mov
loopne
adc
arpl
addr16
sarb
pop
sbb
lcall
cli
cmc
or
insb
hlt
mov
add
mov
rcrl
mov
out
mov
mov
je
sbb
jg
mov
outsb
lcall
or
scas
dec
push
mov
test
jge
mov
or
xor
adc
mov
add
inc
popa
je
std
mov
aas
imul
jno
cmpsl
faddl
jl
shlb
pop
pop
cmpsl
mov
sbb
test
or
test
packssdw
fiadds
jecxz
mov
and
aam
pop
adc
cmpb
or
or
pop
or
int
test
mov
stos
popf
sarl
ficoml
sub
sti
aad
pop
mov
insb
lock
stos
pusha
jnp
or
rcll
dec
mov
mov
and
pop
mov
cltd
imul
push
xchg
jae
push
fisubs
inc
loop,pt
jp
pop
push
es
loope
enter
fsubrs
test
xchg
push
dec
rcr
arpl
dec
dec
nop
sbb
and
fs
inc
jl
in
fstpt
in
cmp
adc
pushf
mov
cli
jg
jne
add
cli
mov
and
add
lret
pop
jl
fmul
mov
adc
repz
pusha
inc
mov
push
inc
jbe,pn
xor
inc
cmpl
clc
jb
stc
jo
arpl
sbb
mov
sub
imul
je
test
cmp
xchg
jge
xor
roll
jecxz
sarl
mov
jle
mov
cmp
imull
mov
ja
pop
mov
shrl
sti
popa
dec
adc
testb
and
sbb
stc
sub
pusha
mov
in
lret
imul
inc
daa
out
dec
jb
push
out
sub
and
cs
sbb
jnp
lock
xchg
mov
inc
movsl
call
scas
scas
push
subb
movsl
mov
jg
push
jns
test
out
movb
pushf
cmc
xchg
into
cmp
insb
mov
cmp
and
cmp
push
fdivl
cmp
push
out
lea
push
in
daa
add
mov
aaa
sub
mov
shlb
jge
cmp
leave
dec
dec
jae
jl
mov
jl
shl
push
lods
ja
dec
jne
push
push
mov
test
cmc
dec
pop
inc
sbb
pop
cmp
lds
cld
gs
aas
cmc
inc
jne
and
dec
adc
mov
xor
addr16
jo
or
lret
dec
jge
mov
daa
int
fbstp
ljmp
xchg
xor
adc
jp
call
mov
mov
push
inc
jge
xchg
lds
fildll
aam
in
add
or
int
cwtl
adc
jae
leave
pushf
jecxz
arpl
adc
jbe
sub
pop
int3
pop
pusha
test
hlt
popf
pusha
les
dec
lds
ret
int3
sahf
mov
jg
add
mov
test
lahf
clc
pop
cmp
aaa
mov
pop
cmpsl
sbb
test
lods
out
xor
outsb
dec
or
addr16
cmp
imul
fistpl
mov
sbb
push
gs
adc
jg
test
test
aaa
xchg
jne
xor
pop
cmpb
jmp
jle
lcall
das
xor
ljmp
mov
dec
dec
gs
and
stos
movsl
clc
insl
push
inc
inc
test
mov
je
data16
dec
jb
inc
popa
push
and
cmpsb
ficoml
add
xchg
ss
lds
aas
push
into
fidivrl
inc
cmc
ror
push
imul
push
sbb
pop
fwait
lret
js
sti
jmp
filds
push
inc
fmulp
into
pusha
dec
imul
subb
jb
jle
addr16
add
out
lcall
testl
adc
bound
xor
lret
push
xor
push
lret
outsl
add
clc
fs
test
and
xchg
aam
cld
lock
dec
and
arpl
inc
jne
pop
jecxz
repz
mov
gs
out
out
sub
sub
adc
int
jle
pop
dec
scas
cwtl
sub
push
js
mov
outsb
adc
rclb
push
bound
lcall
push
cmp
js
int
mov
mov
inc
ret
iret
roll
push
insl
sbb
jbe
in
movsl
pop
jmp
dec
adc
or
xor
or
fstpt
icebp
aas
testb
inc
cmp
push
sahf
das
in
cmp
aas
add
gs
ficomps
addb
ds
pop
xor
mov
mov
mov
lock
lcall
hlt
test
fnstsw
or
pop
mov
iret
fdivrl
mov
mov
mov
mov
or
dec
mov
xchg
jge
daa
rorb
push
test
push
mov
enter
aad
js
stos
jne
mov
add
cmp
out
insb
sbb
mov
push
sub
sbb
das
stc
dec
add
sub
data16
cld
push
add
rclb
push
cwtl
mov
pop
jno
push
out
divl
cld
xlat
test
aam
ds
mov
jo
mov
lret
out
push
jmp
pop
add
mov
and
cmp
push
pop
les
movsb
jb
mov
pop
xchg
mov
lahf
inc
push
jbe
mov
int
sahf
mov
rorl
test
and
inc
jne
and
mov
or
sub
outsb
cltd
pushf
outsb
sub
hlt
xor
repz
fistpll
aam
pop
andl
and
mov
dec
jnp
pop
dec
daa
iret
aam
pop
jp
xchg
arpl
and
mov
and
les
or
cwtl
push
xchg
fimuls
sub
add
inc
xor
jno
xchg
or
xchg
int3
cs
aaa
mov
rcr
dec
pop
jno
lods
and
add
or
mov
out
mov
testl
pop
pop
stos
in
xchg
push
add
dec
dec
mov
xor
int3
or
adc
loope
mov
jmp
out
cmp
in
adc
test
xor
xchg
sbb
fsubs
mov
sub
jno
ss
dec
sbb
adc
jae
mov
lods
jp
xchg
lahf
stos
xor
cld
loopne
repnz
bound
icebp
iret
pusha
push
mov
pop
sbb
movsb
das
cmp
xor
mov
cmp
xchg
sub
and
adc
add
sti
add
cmp
dec
pop
sbb
icebp
jl
push
mov
test
sbb
mov
mov
jbe
lock
sbb
mov
mov
stc
inc
mov
add
xchg
xchg
ror
subl
sub
xchg
cld
aad
dec
stos
call
xor
adc
add
aad
mov
push
out
in
xchg
test
jns
shlb
pusha
mov
and
jge
mov
cmp
push
inc
mov
fsubr
xchg
push
shr
dec
rcrb
xchg
or
stos
cwtl
pop
dec
int
test
les
dec
clc
sbb
xchg
in
xor
cmpb
scas
xchg
inc
das
sub
vcvttps2dq
push
test
mov
cmpsl
stos
and
jae
cmp
pop
ret
mov
arpl
jo
pop
out
movsb
mov
xor
jle
sbb
jg
or
jns
lds
cmpsb
enter
inc
shlb
inc
adc
cmpb
xchg
cltd
add
adc
xor
dec
jb
inc
sbb
cmp
sbb
clac
or
jmp
jg
xor
cmpsl
in
mov
in
pop
das
mov
cmp
push
je
inc
mov
fstpt
or
lret
push
xchg
and
mov
movsl
mov
fcomps
repnz
xchg
nop
mov
cmp
adc
cmp
and
lea
enter
into
movsl
fisubrl
test
pop
jae
jge
mov
mov
ljmp
icebp
mov
jg
mov
cmp
dec
sbb
xor
mov
cwtl
mov
and
popf
inc
mov
fisttpll
lret
out
xchg
mov
test
scas
aad
push
push
js
es
jns
jmp
xor
dec
xor
cwtl
xor
pop
sbb
insl
add
mov
fs
movsl
mov
call
jge
aas
leave
xor
scas
push
repz
xchg
fwait
call
pop
ret
jmp
in
and
sub
aam
fisttpll
lock
add
xor
lods
arpl
mov
lock
adc
adc
pop
push
pop
sub
or
shl
pop
mov
shll
cs
enter
lcall
shrb
inc
add
repz
sbb
pop
inc
out
lret
and
fcoms
xchg
cli
jbe
addr16
std
xlat
rcr
mov
fildll
mov
insb
in
pop
lock
mov
push
dec
xor
inc
ret
icebp
ret
jns
push
jae
popa
repz
fnsave
and
jle
fst
or
or
sbb
hlt
dec
ret
pushf
pop
mov
push
int
pop
cmp
fdivl
jg
pop
scas
or
pop
mov
push
icebp
push
push
xchg
lods
dec
xorl
lret
ljmp
in
inc
movsb
mov
mov
ret
add
ret
inc
mov
outsl
or
mov
call
mov
ljmp
sbb
mov
in
in
fidivrl
cli
dec
ljmp
repz
xchg
mov
jne
shlb
mov
jp
arpl
mov
scas
jle
out
fwait
jle
jge
push
rolb
sbb
xlat
adc
jnp
in
in
loopne
pop
sub
or
and
mov
adc
or
xchg
inc
rcr
inc
cmc
in
pusha
pop
mov
je
div
repz
cmp
cmp
mov
pop
dec
jno
and
add
mov
leave
sbb
dec
outsb
aam
mov
fisubl
push
repnz
mov
fldcw
inc
ficoml
movups
pop
jmp
repz
lret
cwtl
insb
enter
shlb
aaa
push
adc
xor
bound
lret
hlt
adcb
jbe
fsubl
fcmovne
pusha
add
or
movsl
adc
btr
sti
je
jmp
push
call
xchg
xchg
mov
jo
scas
xchg
and
push
mov
cmp
pop
cltd
pop
cs
mov
cmpsl
jnp
test
mov
push
cmp
adc
mov
sub
cmpsb
outsb
push
jmp
push
int
jmp
push
mov
cmp
xor
and
ljmp
adc
pushf
dec
dec
xor
mulb
mov
data16
mov
pushf
add
push
mov
clc
clc
pop
out
inc
es
jb
lds
push
stc
jl
mov
jns
jne
mov
cmp
dec
fsubs
movsl
lcall
mov
dec
addr16
out
jae
jl
js
shlb
cmp
add
cmp
movsb
xchg
sarl
dec
mov
jmp
je
push
mov
sti
adc
je
je
adc
cmpsl
pop
test
jb
test
shl
addl
pop
test
mov
push
jle
pop
mov
leave
ret
and
fs
jae
bound
push
xor
shl
xchg
sub
mov
mov
scas
icebp
sbb
out
ret
mov
fwait
pop
push
jnp
dec
incb
xchg
clc
outsb
dec
jae
shrl
pop
xchg
rol
push
int
fwait
and
xlat
sbb
ja
or
pushf
test
jg
iret
jge
inc
fdivl
cli
add
sub
test
sub
and
out
fbld
adc
movsl
cli
xor
xchg
adc
fisttps
je
idivb
jnp
mov
add
sahf
in
sbb
jmp
ret
movsl
mov
dec
jbe
xor
out
mov
mov
mov
cld
jbe
sbb
and
adcl
insl
push
push
mov
pop
dec
adc
sbb
mov
cld
xchg
sbb
hlt
ja
mov
leave
push
xorb
or
lret
cmpsb
or
aas
cmp
bound
pop
daa
jb
ret
push
nop
rclb
mov
cli
gs
lahf
ret
dec
pop
and
add
lock
adc
mov
pop
cmp
clc
insl
pop
lock
and
pushf
add
fwait
sbb
out
xor
push
mov
push
mov
cmp
int3
mov
adc
pop
inc
pop
mov
test
xor
push
and
or
leave
adc
fstpt
push
pop
cmpsb
mov
js
pop
add
lock
test
pmuludq
push
dec
and
out
push
sti
bound
adc
ja
adc
stc
clc
xor
in
mov
in
jecxz
lret
adc
xor
daa
pop
jbe
fisubrs
cmc
rol
jno
imul
mov
imul
insb
fldcw
mov
jg
dec
mov
daa
xchg
pop
push
mov
aas
lds
xor
add
and
in
or
stos
adc
inc
adc
mov
cmc
cmp
inc
mov
xlat
pop
xchg
insb
jmp
xchg
mov
push
insb
mov
scas
inc
xchg
jno
bound
xchg
lock
cs
js
ffreep
lcall
movsl
pop
out
mov
shl
clc
xchg
jle
xor
or
stc
mov
sub
sub
dec
mov
ss
push
std
mov
sbbb
jbe
loopne
divl
push
hlt
addr16
inc
in
push
dec
pop
cmp
rorl
adc
shl
pop
pop
inc
scas
ljmp
adc
dec
icebp
and
mov
add
mov
or
and
out
loop
adcb
jno
lret
adc
in
mov
sub
repnz
pop
or
loopne
dec
dec
sarb
clc
mov
roll
mov
fstp
mov
adc
sub
stos
dec
mov
sbb
mov
out
sub
popa
jb
fistpll
xchg
jl
jne
int
ljmp
inc
popf
push
cmp
dec
xchg
push
mov
push
ljmp
shlb
cmp
dec
repz
add
jle
imul
loopne
adc
in
jnp
lret
lahf
mov
daa
fwait
push
fisttps
gs
pop
mov
inc
loopne
mov
insl
adc
xacquire
xchg
lcall
das
or
sub
dec
cmp
popa
jmp
push
mov
je
adc
sarb
iret
divb
addr16
frstor
lock
shll
test
inc
popa
stos
jle
inc
adcb
add
mov
fmuls
cmp
pop
ss
sbb
or
mov
out
clc
mov
loope
in
ja
sub
pop
push
push
orl
lock
emms
cltd
dec
adc
popl
xchg
ja
aad
rcrl
in
outsl
jns
pusha
jl
mov
sbb
enter
xchg
dec
xlat
mov
mov
hlt
and
mov
sahf
push
pop
mov
adc
fs
mov
je
rep
pop
or
icebp
sbbb
inc
cmp
repnz
stos
add
rcll
stos
add
jmp
push
jnp
mov
movsb
mov
pop
add
dec
orb
sub
pop
movsl
inc
repz
arpl
js
into
adc
cmpsb
orl
subl
arpl
mov
dec
aad
pop
push
adc
js
in
sbb
loop
mov
ficoms
in
pop
icebp
mov
inc
push
mov
das
mov
sub
adc
mov
das
add
repz
cmpsb
je
stos
inc
cmp
shrl
test
aam
jg
sub
and
cli
das
loop
iret
mov
in
mov
or
pop
and
popf
xor
add
stc
lock
adc
cli
cld
iret
sub
xchg
incl
jmp
test
pop
mov
popf
cld
jo
adc
xor
inc
lods
inc
mov
ffree
aam
and
or
cwtl
out
test
ljmp
mov
inc
adc
rol
int
jg
xchg
cmpsb
adc
pop
dec
jle
push
add
das
clc
push
mov
mov
std
hlt
push
sti
and
cmp
fildl
lods
movsl
fwait
push
test
lea
test
hlt
mov
and
in
cltd
push
xchg
ja
lcall
adc
adc
fdivl
lahf
push
mov
repz
jae
fisubrs
cmp
sarl
dec
jbe
outsl
inc
sbb
repz
push
fwait
jno
cld
ret
ja
outsl
add
lcall
push
ds
jne
cmp
push
add
mov
add
pmovmskb
scas
or
xor
xchg
or
fsubr
push
inc
imul
mov
push
cli
mov
mov
xchg
jb
shr
stos
into
gs
clc
or
rolb
pop
jge
fstl
mov
clc
scas
jmp
outsl
jg
add
mov
xchg
shrb
pop
addr16
iret
fcmove
xchg
add
ret
cli
lahf
in
imul
ret
xor
adc
fstpt
add
out
inc
xchg
adc
pop
mov
cwtl
cmp
push
mov
nop
cmp
fiadds
dec
or
rcrl
daa
mov
mov
ss
mov
xor
xor
enter
mov
cmpsl
add
lret
fwait
pop
and
and
push
frstor
mov
inc
lret
cmp
sbb
test
popa
es
adc
rclb
arpl
inc
and
incl
cwtl
mov
push
jl
into
decl
lods
inc
ss
sbb
iret
je
repnz
cmp
mov
xchg
pop
fcompl
sbb
jmp
sub
pop
mov
test
stos
and
inc
push
xchg
cmp
and
mov
and
cmpsb
xchg
sub
dec
inc
icebp
stos
jg
cmp
call
mov
and
sbb
inc
push
mov
cs
and
pop
sarb
mov
iret
leave
sbb
sbb
outsl
int3
sub
pop
pop
mov
push
daa
out
jae
hlt
arpl
mov
fisubrl
xchg
lods
cmpsl
int3
xor
xchg
sahf
lods
jnp
movb
and
push
cli
out
adc
loope
mov
inc
cmp
in
stos
out
mov
pop
pop
cwtl
pop
jo
mov
outsb
or
daa
mov
popa
push
dec
rolb
mov
add
inc
stos
sar
mov
jmp
sbb
ss
inc
ljmp
insb
cmp
aad
ret
fistl
in
cmc
std
inc
data16
lret
jp
sub
imul
xchg
popf
pop
movsb
ja
jmp
gs
outsl
flds
out
adc
movsb
lock
sub
xchg
add
aad
push
rclb
mov
adc
shrb
daa
mov
fwait
push
jo
mov
fsts
pop
inc
cmp
inc
pop
ss
mov
inc
fbld
les
inc
sbb
lods
mov
test
hlt
adc
sub
inc
jo
jl
xor
cmp
mov
push
mov
jmp
pop
lcall
jb
repz
xchg
lea
sbb
inc
aaa
or
ja
add
or
sub
sti
xchg
jl
sbb
lock
mov
faddp
xor
or
out
xchg
icebp
inc
lahf
cmp
jns
jecxz
adc
shlb
mov
dec
xor
dec
or
mov
test
sbb
pop
in
xor
test
mov
mov
inc
or
fstpt
repnz
daa
shrb
stc
xor
mov
jo
dec
xchg
inc
jmp
adc
test
adc
push
inc
mov
imul
lock
sbb
int
adc
movsl
in
mov
pop
loopne
sbb
jge
stos
mov
shl
lock
or
mov
lods
xchg
mov
je,pn
xchg
sti
mov
mov
mov
das
sbb
add
mov
push
xor
std
add
or
mov
fistps
jo
lret
nop
dec
jl
jge
fs
psubsw
test
adc
popa
test
xor
jae
ja
cmc
jo
cmpsb
sbb
cltd
or
sub
in
add
jns
sbbb
leave
ljmp
xchg
add
repz
pop
xor
es
mov
adc
or
jb
sub
sbbl
push
and
outsl
imul
nop
addr16
pop
setg
popa
and
ss
int
lahf
adc
or
ja
mov
mov
cmp
testl
or
test
shlb
ret
lcall
inc
sbb
xchg
test
jbe
in
enter
test
fidivrl
sbbb
jecxz
arpl
adcl
jae
add
fnstcw
push
scas
fsts
lea
jl
or
mov
xor
ret
adc
push
or
insl
push
pop
dec
mov
pop
popf
mov
jae
adc
lret
js
xchg
add
pop
lds
je
mov
cmp
xlat
inc
int
iret
and
pop
out
and
mov
into
rolb
clc
adc
mov
addr16
mov
mov
push
adc
cli
out
insl
jnp
inc
test
loopne
mov
sbb
popf
push
bound
add
xchg
pop
xchg
mov
inc
lods
cmpsb
lea
push
out
lds
fs
xchg
popa
leave
dec
or
mov
mov
fucomip
push
test
lods
adc
mov
sahf
mov
add
pop
in
in
xchg
xchg
neg
insb
xchg
push
jns
xchg
pushf
cmp
push
pop
rcl
hlt
loopne
mov
mov
inc
and
stos
or
inc
stos
loope
les
std
add
cmovnp
push
pushf
popf
leave
int3
rorb
or
and
lds
daa
and
stc
xchg
in
or
iret
xchg
test
cli
cmpsb
scas
repnz
ja
jae
xchg
cld
inc
cs
jno
jp
inc
fs
nop
push
scas
cmpsb
pusha
es
add
jmp
stos
adc
repz
fs
xor
icebp
fcomip
adc
jae
pop
xchg
xchg
shl
gs
pop
cltd
rcl
dec
cmp
dec
xchg
ss
mov
jge
mov
std
test
xchg
push
pop
xchg
into
ljmp
or
repz
insl
daa
xor
pop
push
shlb
mov
xchg
mov
movsb
jge
xor
test
xchg
push
inc
mov
push
mov
loopne
lds
mov
push
pop
xchg
adc
je
hlt
lcall
test
adc
mov
or
jae
cmp
das
pop
cmpsb
aaa
pop
test
and
adc
sub
sti
push
mov
mov
out
outsb
add
rcll
cld
lret
cmp
mov
shl
ss
enter
dec
iret
loopne
fcmovu
nop
jo
cwtl
outsb
cld
mul
jae
add
adc
popa
xor
push
rcr
loope
cltd
xchg
scas
cli
shl
outsl
fidivs
leave
xchg
mov
dec
fs
mov
or
stc
loopne
and
pop
repz
push
and
xlat
or
pop
xchg
add
lcall
cmp
xchg
cld
mulb
cmp
fs
adc
cmpsl
and
leave
xor
daa
xchg
mov
mov
mov
insl
rcr
mov
adc
aad
mov
insl
ret
mov
clc
sub
sbb
fwait
incb
adc
int3
xchg
stc
push
inc
cmp
cltd
adcb
mov
stos
jb
mov
arpl
cmp
bnd
daa
and
add
je
lock
mov
test
into
mov
jecxz
push
inc
fidivrs
test
popa
lret
cmp
cmp
arpl
jp
push
pop
pop
mov
test
imul
adc
mov
sbb
rcll
inc
rcrb
frstor
int
push
lahf
popa
imul
pop
or
flds
pushf
fsub
js
jo
jle
stc
jp
xchg
xchg
and
mov
adc
mov
cmp
push
adc
mov
inc
pop
iret
push
add
test
test
lods
fisubrl
mov
clc
xchg
test
pop
xlat
incb
mov
mov
mov
movsb
mov
cmc
dec
imulb
lock
rcrl
stos
add
rolb
and
lcall
addr16
arpl
add
pushf
loop
jns
jmp
out
mov
mov
in
arpl
or
jl
fwait
xchg
add
fisttpl
adc
jno
mov
out
cmpsb
shll
pop
out
xor
add
xchg
or
clc
dec
sub
adc
stos
fstps
loop
and
pusha
adcb
fistpll
stos
xchg
push
cmp
cmp
push
test
hlt
hlt
testb
orl
pop
out
xchg
jbe
sub
mov
fiaddl
adc
inc
add
outsl
outsb
push
add
ret
pop
fadds
mov
mov
bound
dec
or
mov
and
lea
mov
pushf
cmc
jp
mov
addr16
sub
ret
in
adc
addr16
fmulp
cmp
lahf
mov
cmp
or
and
aaa
pop
cmpsl
adc
notl
mov
push
aaa
dec
inc
lret
stos
clc
sub
hlt
jg
and
mov
push
je
mov
cmp
addr16
popf
push
cli
xchg
cs
mov
mov
movsl
imul
and
mov
sbb
cmp
popf
lea
or
lahf
adc
xchg
inc
jne
pop
mov
clc
mov
cmp
pop
in
sub
jbe
xor
das
ja
loop
pushf
xchg
sarl
out
jmp
mov
pushf
mov
ficoms
in
cmp
jnp
dec
cmp
or
fstpl
xchg
rcl
cmp
fcmove
pop
jo
ret
add
and
arpl
push
add
popl
js
push
xchg
pop
sbb
mov
pop
ljmp
sbb
je
mov
pop
jae
stos
movsb
cs
in
out
jg
shll
or
out
dec
xchg
xchg
sub
fcmovne
jnp
or
insb
lret
mov
push
lds
mov
rcrb
and
jle
int
std
dec
add
ficoml
ja
mov
mov
dec
ficomps
push
sub
stos
fdivr
movsb
in
in
sub
cmp
adc
mov
add
inc
mov
pop
sbb
adc
jp
ficoms
cli
outsb
movb
cli
xchg
in
add
mov
jns
loopne
popf
add
fdiv
movsl
push
sbb
dec
jg
dec
sbb
mov
paddb
push
dec
xchg
loop
in
inc
or
daa
das
inc
aas
inc
jmp
sub
pop
push
and
pop
ret
inc
outsl
in
or
mov
roll
mov
and
mov
mov
sbb
cltd
cmpl
std
sub
mov
mov
xor
cmp
out
ficoms
rol
imul
or
adc
out
jno
cmp
int
out
mov
dec
jb
xlat
ret
ja
arpl
xor
mov
xchg
mov
ljmp
bound
mov
lods
add
outsl
xchg
popa
xchg
add
mov
pushf
shll
xchg
sbb
mov
xlat
ja
adc
ret
cltd
les
addr16
inc
add
sub
pop
pushf
sub
cs
mov
pushl
popf
sub
ss
mov
or
imul
cmp
sbb
test
mov
bound
loope
xor
into
dec
or
aam
dec
mov
and
sub
aam
fldenv
inc
mov
int3
push
push
dec
push
mov
pop
or
int3
mov
loope
jle
push
xor
popa
daa
in
or
int3
fdivrs
cmpsb
or
pop
in
adc
mov
inc
mov
xchg
add
ja
mov
and
in
xor
lahf
mov
or
jns
adc
pop
or
mov
enter
xchg
sbb
iret
and
es
mov
cmp
xchg
testb
lahf
les
push
popa
push
push
xor
loope
and
das
imul
fstl
pop
mov
mov
or
dec
shr
sbb
sti
jecxz
rclb
mov
stos
sbb
or
cmc
pop
cld
mov
sbb
push
add
inc
cmp
ljmp
mov
repnz
aaa
push
inc
int
rcrb
sbb
push
pop
ret
out
clc
call
push
jg
pop
loopne
insb
fwait
mov
rcll
repz
and
pop
cmp
repnz
out
sbb
scas
xlat
outsb
jo
and
movsl
dec
imul
enter
imul
add
std
lcall
xchg
xchg
fidivrs
xchg
jmp
xor
ljmp
cld
pop
pop
je
xchg
repnz
push
arpl
cmp
clc
xor
scas
sub
pushf
mov
push
fdivr
push
pop
hlt
mov
sbb
mov
mov
fdivs
push
insb
jo
clc
lea
jb
scas
pop
adc
inc
loop
fstpl
repz
push
mov
xchg
add
cld
notl
cmp
or
data16
xchg
daa
dec
cmpsl
insl
call
jmp
xchg
lret
sbb
or
inc
adc
dec
dec
fistpl
sbb
ds
lea
cmp
push
nop
insl
dec
outsb
ljmp
mov
shlb
movsl
adc
mov
arpl
insb
add
sub
decb
xor
mov
sbb
imul
inc
mov
or
fldt
inc
sbb
xchg
or
jb
jnp
pop
add
loop
hlt
test
ret
sbb
jnp
call
les
out
ds
mov
ret
dec
xchg
mov
ret
rcll
mov
push
sub
icebp
int
call
lret
aam
out
mov
mov
or
pop
rorb
xchg
cmpsl
push
fs
inc
or
jl
pusha
pop
push
dec
jecxz
into
shl
in
lods
test
outsb
dec
cmp
dec
in
addr16
outsl
cli
cmpxchg
roll
inc
repnz
push
mov
pop
mov
inc
popa
push
sbb
ds
pop
mov
outsl
test
add
outsl
and
orl
dec
fwait
xchg
cmp
push
or
clc
sti
pop
or
xchg
testb
sub
xlat
sahf
xlat
cmp
dec
push
xor
test
and
ds
aaa
jae
push
clc
rclb
cmc
call
push
into
pop
cmp
inc
and
sar
cmp
les
mov
pop
mov
out
mov
cwtl
ja
gs
addr16
xchg
scas
cmp
dec
jns
push
adcb
shlb
xchg
fs
or
xor
dec
fldt
pop
fs
mov
mov
je
inc
lds
repz
aaa
xor
xor
jge
xor
aaa
push
clc
shl
js
xor
ja
imul
or
pop
test
sub
or
scas
scas
push
adc
pop
and
cmp
clc
aam
ljmp
ljmp
pop
xor
sar
add
inc
fldenv
add
sbb
cmp
mov
mov
or
cmp
insb
mov
push
sub
lds
inc
cmpb
cmc
sub
xchg
jp
lret
mov
jp
cwtl
lods
add
sub
jg
dec
pushf
fldenv
mov
jecxz
xchg
sti
loope
jp
outsl
jp
test
js
rcll
mov
out
in
sub
sub
fmulp
push
push
jbe
push
xor
xor
sahf
pop
xchg
into
adc
jmp
nop
jmp
jg
xchg
faddl
or
mov
int
nop
fisubl
mov
sub
xchg
sbb
inc
mov
loope
cmpsl
pop
mov
jns
mov
adc
adc
xchg
shlb
inc
sbb
pop
push
cmp
pop
sti
pop
push
pop
aad
fimuls
lods
adc
and
dec
mov
mulb
push
xor
loopne
push
clc
jp
inc
xor
testl
and
int3
dec
mov
out
dec
int3
inc
stos
int
lret
mov
gs
aaa
mov
mov
cwtl
push
and
rorb
repnz
or
mov
rcll
sti
lds
ja
inc
xor
xlat
or
mov
shl
aas
int3
popf
pop
fcompl
ret
rorl
in
stos
stos
xchg
shll
jecxz
dec
pop
lret
or
popa
lods
outsb
xchg
adc
sbb
out
mov
daa
aaa
ficomps
mov
xchg
mov
and
xlat
out
scas
add
push
xor
mov
or
push
incb
fiaddl
pop
fsubs
xor
cs
ss
test
pop
sbb
lret
cwtl
jne
pop
in
mov
xchg
ljmp
pop
or
mov
cmp
push
mov
mov
mov
mov
mov
cmp
and
adc
mov
movsl
fs
xor
lds
movsl
enter
mov
pop
pop
fcmovnbe
inc
mov
mov
jmp
idivl
inc
and
or
cmp
jmp
push
pop
insl
rolb
cli
clc
xchg
push
in
movsb
les
out
xchg
shrl
aam
mov
pop
push
sahf
ss
sub
fcmovb
push
lret
jg
cmp
sti
ret
lods
or
add
test
pushf
pop
pushf
mov
ficoml
adc
pushf
test
sbb
add
cwtl
ret
add
inc
xchg
gs
mov
add
inc
and
hlt
sahf
jmp
add
add
or
neg
ror
xchg
sbb
mov
into
mov
xor
or
cmpsb
cmpsl
mov
and
cmpsl
mov
leave
clc
lahf
insl
dec
xchg
xor
jl
sbb
inc
std
negl
in
fs
cmp
arpl
push
adc
xchg
shrb
stos
jg
jecxz
repnz
xor
xor
std
cli
inc
and
sub
pop
sub
insl
mov
mov
imull
fs
insb
push
cltd
rcl
fldl
fsubrl
dec
and
mov
jo
mov
shrl
sbb
fnstsw
aas
arpl
jge
les
mov
jge
lret
imul
and
pop
mul
inc
fiadds
ror
fwait
scas
jns
jns
lods
aas
pop
scas
pop
push
sbb
sbb
ja
jge
and
lods
fnstenv
inc
pop
dec
fs
dec
and
pushf
lods
xor
iret
pop
xor
pushf
popf
hlt
aaa
mov
movsl
xlat
insb
jae
sbb
sub
shlb
cmc
inc
ds
dec
in
pop
mov
mov
xchg
lods
out
sub
mov
dec
mov
loope
mov
js
scas
mov
scas
hlt
dec
clc
ret
repz
icebp
repnz
xor
rcll
sbb
xor
and
cmp
jo
call
mov
xchg
mov
out
adc
aam
dec
pop
push
push
and
roll
cmc
pop
imul
jae
stc
jle
and
hlt
or
fwait
lea
jb
aaa
pminub
ficompl
pop
ljmp
sub
popa
popa
outsl
or
sub
aas
xor
popf
xor
mov
lret
cltd
and
mov
or
jns,pt
movsl
mov
dec
sbb
mov
negl
push
mov
fbld
aas
je
ss
push
xchg
loop
adcl
aas
bound
dec
fcoml
mov
push
xchg
sub
lahf
test
outsl
rcr
sub
xor
popa
int3
mov
xchg
arpl
mov
jecxz
fwait
add
pop
mov
dec
xor
call
cmp
scas
fmul
inc
xor
mov
cmp
mov
fidivrs
test
mov
ss
mov
xchg
adc
mov
and
cmp
dec
mov
mov
push
shlb
mul
dec
xor
sub
push
inc
repz
inc
lock
mov
push
mov
outsb
dec
sub
mov
dec
mov
add
jb
cmp
jl
inc
adc
push
sbb
jecxz
outsl
bound
dec
or
std
sbb
sbb
aas
jno
push
jg
inc
mov
push
in
leave
fimull
dec
sbb
imul
adc
mov
adc
mov
mov
ret
jecxz
push
popf
xchg
in
lret
cmp
bound
pop
dec
mulb
jo
mov
subb
push
xchg
test
sbb
xchg
xor
arpl
mov
adc
out
and
rcl
shr
loopne
ss
xchg
jg
sbb
push
mov
add
push
add
in
dec
mov
push
xchg
push
sbbl
jmp
xor
sub
loopne
cwtl
in
push
and
mov
xor
pusha
push
aam
mov
movsb
dec
xor
clc
mov
std
or
out
xor
hlt
xchg
sbb
adc
fcompl
shll
icebp
out
fsubl
mov
stos
pop
mov
addl
addr16
leave
lret
xlat
jecxz
clc
icebp
cmpsl
push
imul
test
sub
sti
dec
ss
pop
dec
movsb
int
lahf
dec
mov
push
or
out
mov
mov
cmpsl
aad
push
pop
fs
test
sbb
outsl
movsl
jns
insb
cwtl
imul
dec
mov
insl
ror
test
sbb
out
shrl
addr16
pop
push
mov
push
sbb
and
sbb
push
mov
mov
dec
pop
push
adc
push
dec
cli
cltd
cmpsl
mov
in
xchg
jmp
pop
test
inc
fidivrl
pop
scas
std
mov
daa
outsb
xor
shrb
ret
push
push
repnz
fisttps
cmp
sahf
cwtl
jmp
repnz
xor
mov
cld
icebp
aas
pop
or
imul
mov
jmp
jnp
pop
scas
cmp
lret
stc
imul
shrl
aaa
cltd
movsl
pushf
dec
add
divl
into
pop
cmpsl
mov
adc
js
ss
push
add
or
hlt
gs
enter
loope
out
fcmove
xlat
push
aam
xchg
and
hlt
or
adc
mull
sbb
ljmp
push
ret
pop
push
int
jno
inc
insl
test
adc
stc
sbb
mov
push
or
enter
out
and
or
xor
adc
out
pop
insl
int
push
aad
rcrl
cmp
push
sbb
lahf
inc
xor
jge,pn
clc
mov
or
lcall
adc
jle
fdivrs
push
dec
out
pusha
mov
jl
dec
pop
xor
add
lods
sbbb
pop
je
icebp
fmuls
cmc
xlat
fildl
stos
cs
rol
jmp
mov
adc
mov
pop
dec
ljmp
into
mov
cmp
pusha
dec
xor
sub
or
jo
push
inc
and
xchg
adc
push
inc
pop
inc
or
push
std
and
lds
out
cmp
divb
divl
repz
xchg
filds
int3
sbb
lock
add
adc
inc
xchg
xchg
cmp
xchg
ljmp
lds
outsb
aas
loope
sbb
addr16
ljmp
push
insb
mov
push
lea
mov
push
inc
sub
mov
test
adc
jmp
xchg
ja
repnz
je
xor
cmp
int3
cmpsl
repnz
movb
aaa
addr16
pop
adc
mov
or
mov
mov
je
shrb
cmp
les
cmp
push
xchg
idivb
cmp
add
out
inc
test
out
mov
in
inc
sarb
pop
insl
cwtl
dec
add
jbe
stc
mov
push
enter
or
fcomip
movsl
xchg
fists
mov
movsl
testb
stos
insb
lods
add
xor
push
popa
fstpt
cwtl
shll
xchg
es
jno
push
cmp
jo
adc
mov
rolb
sbb
fisttps
out
into
jnp
inc
mov
inc
adc
sbb
cmp
frstor
xchg
stos
push
dec
mov
add
xchg
in
push
gs
or
leave
jge
lods
adc
dec
psubusw
popf
push
mov
imul
adc
into
outsl
fistpll
cmp
xor
data16
inc
je
insl
scas
cwtl
dec
rcrl
rcrw
lods
icebp
int3
mov
bound
ja
and
pop
out
cmp
fadd
push
jg
out
lret
mov
cmp
fldt
inc
shlb
cmc
imul
ljmp
loopne
cmp
fsubl
inc
loopne
mov
int3
lcall
aas
jnp
std
pop
adc
or
stc
add
sub
mov
ja
sahf
lret
fcomp
shl
scas
stos
jno
pop
mov
in
inc
sbb
dec
mov
jne
cwtl
std
insl
lcall
rorl
add
aaa
in
cmp
rorb
mov
sub
lret
outsl
cmp
sub
imul
mov
jl
psubb
and
std
sub
xchg
shll
inc
scas
push
fs
inc
cli
cmc
push
mov
push
add
dec
add
ret
pop
push
mov
pop
shll
aas
sahf
js
xchg
mov
mov
jbe
mov
fmuls
ret
inc
les
push
pop
outsb
mov
lods
sti
jmp
push
in
cli
ret
aad
outsl
fnstenv
cmp
xorb
and
sbb
adc
mov
es
and
fcomps
fistps
std
jae
ss
push
movsl
lds
push
jle
inc
lea
jmp
sbb
mov
push
pop
fdiv
cmp
push
js
add
in
imul
adc
pop
dec
mov
push
cmp
pop
lret
push
lods
mov
adc
push
fcmovnbe
loope
iret
aam
loope
sub
dec
mov
sub
outsb
mov
out
xor
fiaddl
cmpsl
mov
pushl
sub
cmpsb
cmp
addr16
rcll
outsb
inc
inc
scas
je
cmp
imul
in
mov
out
sbb
arpl
xchg
dec
loop
js
aad
fidivs
mov
int
xchg
mov
mov
shr
les
je
sbb
mov
adc
mov
lods
push
cmp
sub
and
lcall
ret
mov
push
mov
mov
ret
push
aad
mov
sub
sub
andb
xchg
into
shll
xor
dec
sti
push
dec
pop
aad
daa
sub
imul
daa
int3
ret
movsb
aad
test
add
lock
push
push
dec
mov
push
xor
inc
mov
hlt
adc
jmp
aaa
mov
inc
jg
adc
in
xchg
or
aad
mov
adc
fisubrs
mov
sub
adcb
mov
iret
lock
cmpsl
push
mov
pop
pop
mov
pushf
inc
test
cmp
push
push
pop
std
jmp
arpl
xchg
scas
arpl
mov
jge
aaa
mov
mov
sbbw
mov
lds
ret
cmp
das
pop
xchg
aad
lock
xor
pusha
dec
data16
jns
out
mov
loope
clc
fiadds
fs
cmp
dec
imul
test
call
xchg
mov
adc
mov
scas
xlat
in
jg
add
adc
dec
jmp
es
inc
nop
cmpb
cmp
lcall
stos
data16
push
fdivs
push
jo
ret
aad
cwtl
mov
mov
ljmp
xor
xchg
and
mov
or
dec
sub
iret
pop
sub
mov
pop
loop
pop
inc
call
cmp
xchg
inc
mov
dec
lea
or
cmp
cmp
mov
arpl
idivl
nop
inc
dec
stos
adc
pop
dec
sbb
daa
mov
jg
fidivrl
mov
and
pushf
fstpl
sub
rcrb
in
test
jb
jbe
movb
cmp
jne
jecxz
and
xchg
push
repz
xchg
adc
fs
pop
sbb
sub
mov
dec
mov
shrl
mov
aas
test
lock
in
adc
mov
add
inc
out
test
adc
test
shrl
out
cmp
incb
in
xchg
add
das
xor
clc
and
xchg
xchg
mov
stos
inc
test
lcall
mov
fwait
out
loopne
mov
adc
xorps
ds
orl
mov
scas
and
fisubrs
xchg
bnd
mov
cmp
out
pop
mov
inc
and
sub
push
outsb
lcall
scas
jb
pop
enter
jge
movsb
stos
lret
add
jb
addr16
cli
stos
out
mov
testb
mov
inc
jnp
mov
mov
leave
pop
decb
mov
lods
clc
fistpll
lahf
push
dec
jmp
les
dec
fwait
adc
xlat
test
fists
xchg
aaa
aas
inc
out
lds
sbb
jmp
dec
add
or
mov
jp
jae
dec
ret
call
rcll
addps
cmp
stos
jle
fisttpll
scas
aam
xchg
lahf
add
lods
mov
addr16
push
repnz
fisubl
mov
fstp
and
sub
jmp
lcall
imull
out
or
insb
lahf
ds
or
notl
xchg
mov
and
out
jge
and
fcoms
mov
push
lods
aaa
out
ret
push
call
dec
add
push
jp
cmp
orb
dec
xor
in
es
add
mov
f2xm1
imul
add
cmpsb
push
mov
repnz
xchg
ljmp
jmp
mov
rorl
dec
jae
in
xchg
cmp
mov
xchg
dec
in
jp
jp
dec
dec
mov
inc
push
or
xchg
ljmp
cltd
push
inc
add
add
jl
push
dec
add
push
push
add
lea
ljmp
push
cmpsb
in
mov
aaa
pop
add
push
jecxz
test
pop
push
fnsave
or
xor
mov
shrl
jmp
bound
xchg
cltd
adc
adc
mov
mov
inc
pop
xor
daa
pop
rcrb
insl
cs
pop
jg
cwtl
jns
faddl
mov
jl
ljmp
rolb
inc
adc
fdivs
daa
clc
sbb
or
gs
and
outsb
aaa
cmp
jmp
sub
ja
push
std
subb
jecxz
or
imul
clc
fcoml
shr
mov
xchg
scas
scas
es
push
sub
sbb
and
out
xor
adc
rcll
sbb
mov
mov
mov
int3
dec
jmp
jo
mov
inc
insl
or
sub
pop
push
imul
hlt
mov
sarb
ss
push
push
jo
adc
fldenv
push
mov
fbstp
mov
xchg
adc
adc
jns
inc
dec
add
es
dec
aas
stc
cs
addr16
pop
mov
xchg
mov
cmp
repz
mov
icebp
nop
inc
enter
sub
pop
shrb
leave
push
mov
or
fs
or
adc
icebp
in
adc
pop
pop
dec
out
push
mov
pop
cmp
or
push
mull
jns
call
adc
aad
dec
or
xor
shrl
or
dec
dec
adc
jge
insb
aad
mov
mov
adc
mov
or
scas
jecxz
aaa
jne
imul
ret
pop
mov
push
movsb
sti
in
pop
js
xlat
insb
out
sub
insb
int
jb
mov
xchg
or
and
mov
insb
filds
pop
cld
push
out
sbb
pop
popf
loope
xor
jae
jo
cmp
cmp
mov
inc
subl
ffreep
mov
cmp
imul
pop
jne
cmp
mov
xchg
movsl
inc
cmp
cmp
sbb
cmp
xchg
mov
pop
lcall
loope
out
inc
sub
movl
pop
xchg
out
adc
dec
out
jb
pushf
scas
les
fstpt
test
jns
xchg
sti
cwtl
xor
dec
mov
mov
lret
cmp
test
add
cmp
jle
xor
stos
mov
das
into
int3
push
adc
cmp
lds
stos
outsl
mov
push
in
cmp
dec
jp
mov
mov
add
pushf
pop
jmp
pop
notb
mov
popf
sub
enter
jg
and
push
mov
dec
push
adc
aam
fucom
sti
clc
jmp
cld
adcl
pop
std
mov
test
mov
adc
or
inc
xorb
push
out
out
fadds
cmp
xchg
dec
jecxz
clc
mov
mov
or
scas
decb
lock
push
xor
ret
pop
pusha
setne
pop
loope
insb
out
sub
addr16
js
loopne
inc
mov
arpl
push
or
fldcw
mov
mov
cmp
in
cmp
xchg
in
lds
and
ret
in
call
int
xchg
fisubrl
addb
lea
dec
cmp
ljmp
xchg
adc
jb
xchg
cmp
xchg
divl
in
insl
jge
sbb
sbb
push
dec
ja
bound
push
bound
push
add
push
cli
inc
ss
cmc
mov
mov
stos
mov
add
dec
xchg
icebp
add
mov
lds
outsb
mov
xchg
lock
aaa
in
int
outsb
js
addr16
je
sub
push
or
mov
adc
inc
push
push
sub
cli
cmc
daa
push
into
xchg
mov
repnz
jns
add
xchg
mov
dec
stos
in
cmp
pushf
mov
movsl
push
insb
mov
mov
in
mov
call
and
icebp
add
jg
test
aaa
bound
sub
cmp
mov
out
jb
pop
or
pop
mov
orl
sbb
push
rclb
ret
mul
mov
dec
ds
inc
mov
ja
mov
stc
mov
fwait
iret
pusha
call
push
stos
es
xor
inc
pop
dec
and
jmp
mov
push
mov
scas
test
jecxz
xchg
push
or
dec
int
mov
xor
adc
mov
mov
cmp
imul
pop
ds
jne
aaa
add
and
cmp
mov
xchg
fmul
shl
ret
mov
std
lds
add
and
push
pop
push
enter
stc
push
push
out
fnsave
jbe
pmulhuw
and
and
dec
fidivs
pusha
lock
jp
pop
repnz
adc
cmp
dec
out
fimull
jecxz
or
es
orl
imul
add
push
nopl
outsl
xor
pop
and
inc
jnp
mov
jp
xchg
push
mov
adc
pop
nop
test
hlt
and
pop
in
clc
lahf
cli
mov
cmp
xor
stc
add
sahf
insb
cmpsb
mov
in
push
movl
les
pop
mov
jnp
hlt
pop
cs
jl
sbb
addr16
inc
or
movsb
sbb
or
pop
push
jg
and
cmp
adc
arpl
gs
lods
xor
fisubrs
andl
ret
dec
mov
cmp
inc
cmp
ret
test
fldt
pop
rcr
and
outsb
lret
aas
adc
push
jle
fdivs
cli
enter
test
xor
jg
xchg
cli
push
int3
xor
mov
iret
cmp
pop
mov
hlt
leave
lret
lcall
mov
mov
sbb
jmp
pop
sbb
imul
fisubrl
cld
out
or
leave
cli
shlb
push
cmc
mov
lret
pop
xor
xchg
mov
cmp
test
xor
and
mov
xchg
inc
call
cwtl
stc
adc
in
push
and
and
mov
push
repnz
sub
mov
mov
mov
fstl
jno
mov
shrl
xchg
pop
movsb
inc
sahf
jg
lea
movsb
add
dec
mov
mov
dec
enter
dec
mov
das
in
cmpsb
or
pop
in
xlat
mov
dec
mov
mov
xor
shlb
testl
push
lcall
and
fdivr
fidivrl
mov
in
mov
setl
inc
and
cli
in
test
in
fs
mov
xchg
jge
mov
sbbl
insb
push
dec
call
jb
repnz
hlt
inc
push
loope
inc
push
js,pn
enter
mov
sub
sahf
scas
imulb
je
jnp
aam
sahf
scas
sub
mov
jno
sbb
out
mov
push
and
mov
test
js
sbb
fidivl
loope
mov
fdiv
aaa
jb
or
or
daa
test
lods
mov
adc
jmp
xchg
add
cmp
sbb
fisubrs
pop
inc
mov
inc
xchg
jno
lcall
fs
aam
jnp
js
cli
shll
xor
ja
dec
pop
fdivp
movsl
testl
roll
pop
sub
addl
push
lahf
clc
xor
xchg
mov
xlat
xchg
sahf
loopne
xchg
subl
jae
std
insb
mov
xchg
sbb
scas
mov
cmpsb
xchg
data16
dec
loop
leave
test
sbb
inc
and
xor
cmp
or
push
int
dec
mov
push
inc
iret
outsb
ljmp
sub
pop
lods
iret
mov
loope
pop
jns
cltd
lcall
popa
mov
int3
mov
int
xchg
lods
mov
xchg
jp
mov
popf
ficompl
mov
mov
imulb
and
and
push
dec
mov
lds
jg
xchg
jecxz
rclb
in
subb
mov
inc
dec
add
cmp
jne
hlt
pop
or
test
xchg
sub
or
out
rorb
js
sub
push
imul
scas
lret
add
enter
pop
adc
imul
mov
imul
dec
push
xchg
fcomps
jle
pop
dec
add
cltd
notb
cmc
sbb
push
sub
insl
es
out
rcll
mov
das
add
out
lods
xlat
out
xchg
xchg
int3
mov
clc
or
call
int3
daa
sbb
aas
dec
inc
mov
out
sbb
dec
xor
movsb
mov
pusha
shlb
or
ja
stos
mov
cmpsl
ljmp
pop
xchg
loope
cmp
push
jmp
adc
sbb
dec
ds
rcl
xchg
ss
cmp
xor
mov
xchg
insl
adc
inc
add
cmpl
popa
cmp
in
push
xor
xchg
fstpt
jae
sub
mov
jp
lods
pop
test
mov
lcall
pop
es
lahf
xor
mov
mov
add
es
decb
rcrb
daa
repnz
xchg
xor
fbstp
pop
mov
xchg
sub
lahf
scas
out
mov
shrl
sbbb
in
mov
xor
push
iret
ficomps
imul
mov
cwtl
aas
cmp
ror
stos
lcall
ja
insb
testl
lods
dec
dec
dec
jae
pop
dec
data16
sahf
outsl
subb
inc
fwait
in
jle
mov
push
dec
aaa
in
rcll
mov
je
adc
loop
xchg
cmpsl
lret
or
imul
push
stos
faddl
leave
xor
mov
xor
repz
cmp
aaa
outsb
les
cmp
in
xor
icebp
jl
mov
clc
jbe
jecxz
out
mov
sbb
lods
cmp
xor
pop
mov
sbb
das
sub
das
fsubs
jl
ja
and
or
loop
insl
stc
push
cli
mov
cwtl
pusha
in
aam
mov
push
fistps
test
sbb
jmp
pop
es
cmpb
rol
xchg
iret
mov
or
lea
fnstcw
lcall
movsb
imul
mov
aam
ss
and
mov
hlt
pop
pop
mov
cmpsb
xor
cwtl
and
mov
and
divb
mov
add
sahf
adc
mov
jb
or
fistpl
test
sbbb
mov
xor
loopne
xchg
add
add
insl
mov
lret
add
cltd
add
test
push
mov
test
aam
and
inc
out
sub
ljmp
xor
subb
adc
jbe
loop
and
dec
nop
lcall
orl
lock
ja,pn
gs
jg
scas
fists
jle
out
add
inc
lods
adcb
insb
pop
pop
lret
dec
insl
ds
jnp
jno
mov
sahf
test
aad
jmp
in
sbb
xor
addr16
insb
dec
pop
add
push
add
ljmp
sub
dec
jg
aaa
out
iret
push
mov
aad
lret
loopne
in
mov
cli
dec
orl
popa
pop
xchg
push
mov
or
cmp
mov
push
sbb
mov
sbb
sub
adc
stos
fwait
push
and
repnz
cmp
sbb
insb
xor
push
add
ret
shl
cld
inc
mov
mov
mov
sti
out
je
insl
icebp
mov
lds
and
rorl
xchg
daa
mov
movl
popf
xchg
xchg
test
sbb
iret
callw
or
inc
inc
stos
sub
add
out
inc
call
cwtl
pop
adc
adc
and
push
cli
jg
lcall
sbb
ja
inc
ret
loope
push
dec
cmpsl
pop
ljmp
je
ror
scas
stos
adc
fnstsw
adc
mov
xlat
in
adc
dec
out
test
std
add
xor
in
into
inc
mov
sbb
loope
lods
adcl
sub
testb
subb
scas
orb
rcrl
shlb
push
jnp
clc
mov
and
loopne
aam
lret
mov
jmp
cmpsb
fs
mov
or
sub
imul
pop
popf
aas
xor
pop
mov
movb
dec
les
stc
arpl
ret
rorl
add
pop
sarl
inc
ror
cld
and
pusha
cmpsb
iret
mov
mov
insb
xchg
hlt
adc
cmpsl
mov
cmp
inc
adc
pushf
fucomip
mulb
sti
in
adc
jnp
sub
movsb
xchg
jl
mov
xchg
mov
push
xchg
lcall
cwtl
adc
repnz
inc
ja
loop
shrl
cs
insl
lahf
pop
lds
ds
or
scas
orb
xchg
xchg
stc
jb
adc
pop
stc
add
mov
jp
jns
fldenv
out
mov
in
and
movsl
push
mov
push
test
xorb
popl
push
testb
addr16
add
dec
push
dec
repnz
mov
sbb
inc
or
add
xor
cs
rcrl
push
orl
pusha
push
clc
add
sub
jmp
cli
lock
fsub
and
lock
add
mov
sub
push
dec
adc
mov
pop
sub
adc
fnstenv
xchg
xchg
out
es
and
cwtl
pusha
pop
push
sbb
int3
jae
add
ret
mov
dec
cmp
push
call
imul
pusha
lcall
xor
rclb
cmpsl
xchg
inc
outsb
sub
rol
mov
cld
sub
dec
adc
adcl
gs
jno
cmp
dec
mov
xchg
mov
movsb
fcompl
sbb
mov
or
xchg
mov
scas
fiadds
loop
cmp
jo
sbb
adc
adc
pop
sbb
inc
inc
das
xor
jno
cmp
adc
inc
popf
dec
insl
xor
fcmovnb
push
orl
push
sbb
mov
mov
insb
jnp
sbb
ljmp
fmull
or
cld
mov
popa
mov
dec
dec
dec
xchg
jae
push
test
test
and
sub
pop
xor
sti
das
push
rcrl
adc
arpl
xor
in
inc
or
inc
arpl
and
cmp
stos
cmp
leave
sub
jo
or
loopne
imul
or
stc
mov
add
and
adc
xchg
sti
mov
mov
fisubrs
cmp
test
adcl
xchg
inc
adcb
mov
dec
jecxz
js
jnp
stos
adc
jge
and
lret
push
scas
fildll
sbb
pop
push
js
iret
mov
jnp
sbb
mov
sbb
adc
or
mov
mov
jl
filds
ss
add
and
in
hlt
inc
movsb
scas
fs
cmp
fdivrl
inc
loope
xor
mov
mov
cld
repnz
mov
adc
repz
inc
mov
cli
pop
jle
mov
imul
jecxz
les
in
loop
mov
inc
mov
int
dec
rorb
and
sub
imul
ficompl
bound
das
pusha
dec
jl
jnp
mov
or
das
and
push
pop
shrb
sub
aad
icebp
pushf
jnp
sub
jne
in
jae
in
pop
das
mov
pop
xor
out
cmp
bound
add
scas
push
lods
push
cmp
adc
lcall
cmp
scas
shlb
ljmp
jns
nop
outsl
rcll
sahf
or
push
testb
add
adc
jp
add
inc
lret
add
lea
int
mov
iret
faddp
adc
insl
jb
fistpl
push
out
ds
inc
cmp
jl,pn
sbb
sub
or
or
mov
push
and
mov
iret
adc
insb
lock
stc
mov
cmp
stos
shll
ret
mov
add
adc
in
mov
jl
push
pusha
mov
gs
rcll
mov
cltd
out
push
sbb
testb
repnz
out
adc
insb
inc
xor
jo
ret
cmp
leave
mov
mov
mov
aaa
jne
or
ljmp
in
mov
iret
js
enter
xchg
push
dec
jno
xchg
xchg
mov
gs
push
and
mov
lds
sub
inc
addr16
in
loopne
mov
xchg
mov
int
mov
sbb
adc
mov
scas
loope
sbb
in
aaa
mov
movb
sub
xchg
sbb
pop
xchg
sbb
movsb
int3
loopne
mov
outsl
xchg
stos
mov
bound
add
add
jp
scas
addl
lcall
cmp
ret
lret
and
in
jbe
push
cmovne
movsb
lcall
ss
cmp
cmc
pop
mov
aas
rcll
jg
mov
sub
lret
out
mov
outsb
movsl
dec
cmpsl
jmp
push
or
sarb
out
lahf
dec
mov
addl
and
pop
stos
mov
call
add
stc
xchg
xchg
mov
jp
in
orb
sub
mov
pop
les
dec
cmc
shlb
jb
call
ds
push
imul
mov
jp
lret
fnstcw
mov
cmp
cltd
stos
cmpxchg
mov
or
jge
jle
in
popa
fs
test
insl
jnp
daa
inc
mov
push
dec
cmc
sbb
nop
pusha
or
movsb
bound
jmp
mov
fldenv
loop
icebp
pop
fdivrs
out
pop
push
push
cltd
inc
mov
out
xchg
testl
imul
jo
adc
iret
add
mov
xlat
hlt
fsubrs
pushf
sahf
sbb
add
mov
and
in
imul
inc
call
and
add
xor
inc
mov
pop
mov
aas
cmp
dec
and
jle
inc
inc
fldt
sarl
ds
dec
mov
loopne
pushf
fdivr
jl
popf
jbe
dec
cmc
sbb
fistps
or
mov
cmpsb
sbb
or
cs
mov
mov
leave
xor
mov
jecxz
je
push
fsubl
mov
dec
jg
xchg
push
or
popa
jge
fstps
add
lock
jmp
sahf
push
in
shl
push
adc
imul
sti
testl
mov
jnp
add
jno
push
lret
test
fsts
sbb
dec
xor
and
pop
pop
fcmovnb
repnz
sub
out
sbb
movsb
leave
movsl
sub
push
sbb
xlat
icebp
out
mov
lea
movsb
xchg
rcr
aam
out
shlb
inc
ljmp
stc
pop
push
cwtl
and
xchg
or
sub
in
mov
leave
into
pop
pop
ret
cs
adc
icebp
ret
in
dec
fists
sbb
add
sti
pop
scas
das
lret
mov
xchg
in
out
daa
fwait
dec
int
xchg
loop
sub
leave
test
out
outsb
mov
fdivl
push
insl
cmpsl
xor
or
out
pop
loop
js
jp
sbb
stos
inc
mov
outsb
mov
cmpl
popa
pop
subl
aad
roll
popa
inc
insl
mov
xor
mov
cwtl
push
cmpsl
in
push
add
mov
xor
popf
jnp
adc
rorl
xlat
mov
push
cmpsl
imul
test
les
lret
daa
aas
cmpsb
xchg
lds
into
cli
ret
inc
inc
insl
mov
and
or
leave
out
sub
rorb
pop
pop
mov
push
adc
and
dec
xchg
jge
sbb
or
pop
mov
pop
push
mov
sub
ljmp
fwait
xorl
stc
mov
adc
imul
and
push
loope
mov
movsb
aaa
gs
lret
jb
in
inc
repz
pop
arpl
test
pop
loop
test
inc
aas
push
jne
mov
sbb
push
mov
aad
xchg
fldl
dec
out
test
test
clc
call
insl
dec
out
push
outsl
cmp
mov
and
pop
mov
dec
add
jp
xchg
into
lcall
xor
add
xchg
ja
cmp
mov
insb
sti
icebp
int
mov
cmpsb
add
dec
adc
or
mov
jmp
aas
mov
jns
add
daa
aas
mull
fwait
movsl
mov
pop
mov
lret
sar
cmp
or
pop
inc
dec
addl
or
and
je
test
mov
mov
addr16
shll
jb
cmp
scas
inc
lret
mov
int3
daa
jle
or
push
jmp
lret
cltd
and
cmp
mov
xchg
in
cltd
jbe
jge
mov
pop
imul
cmc
popf
cmp
push
push
aaa
testl
orl
pop
cmpsb
lock
mov
out
pop
jge
dec
fwait
dec
jmp
jecxz
imul
popf
jge
fimull
sub
jp
sarl
les
idivl
pop
sub
out
sysenter
add
sub
adc
xchg
xchg
loopne
aaa
adc
orb
daa
loopne
mov
sbb
inc
int3
cmp
int3
sbb
inc
cmp
dec
fs
ficoml
mov
movsl
pop
ja
dec
jmp
adc
rcll
pop
iret
decl
mov
je
ljmp
mov
and
clc
fsubrl
in
xor
mov
scas
insl
or
push
cmp
mov
fstpl
mov
pop
aad
jl
or
outsb
sarb
adc
dec
inc
adc
mov
stos
pop
scas
xor
mov
add
fisubl
out
andl
adc
arpl
jae
mov
int3
xchg
push
push
xchg
daa
cmp
push
xchg
xchg
cmp
xchg
test
mov
lcall
jo
in
or
fs
aas
pinsrw
jl
lds
dec
movsl
hlt
cmp
arpl
out
cmp
xor
fadds
inc
iret
mov
in
in
xchg
dec
adc
push
push
push
insl
in
shll
adc
mov
ds
jge
cwtl
in
test
pop
cmp
sub
dec
mov
pusha
in
pushw
shrl
or
stc
repz
mov
je
lods
repnz
out
call
mov
ficoms
mov
sub
lds
push
gs
lahf
and
inc
jmp
in
and
int
in
mov
sbb
mov
and
and
imul
dec
clc
or
sbb
pop
test
in
add
aas
popa
fildl
mov
jg
xchg
mov
gs
inc
clc
pop
inc
mov
pop
push
outsl
push
pop
fwait
cmp
mov
mov
xchg
inc
push
adc
push
push
fimuls
aaa
mov
sbb
and
push
pandn
cmp
stc
jmp
push
mov
jecxz
sub
adc
push
pusha
mov
repz
fisttpl
stos
pop
dec
jp
add
loopne
rorl
mov
popf
call
movsl
sub
mov
shr
movb
in
daa
movsb
add
mov
add
pop
push
popa
adc
cltd
popa
adc
lcall
and
xor
xchg
sub
iret
decl
or
push
repnz
cmp
int
loope
and
sbb
cmp
lret
pop
inc
sbb
push
imul
xor
jbe
xchg
in
testb
add
cmpsl
add
arpl
fdivrl
or
outsl
and
inc
scas
dec
pop
xchg
pop
sub
out
fwait
stos
mov
andl
pop
and
data16
and
rcrb
iret
mov
rol
fildl
cs
icebp
cmp
repnz
in
jbe
push
cmp
shlb
add
or
jnp
sbb
push
add
push
add
mov
adc
movsb
in
loopne
fnstcw
loopne
add
cmp
or
int3
fnstcw
mov
push
fs
rcl
xor
mov
inc
addr16
popf
xchg
xor
cmpsl
pop
xor
xchg
shlb
push
mov
mov
sbb
mov
iret
sbb
fsubl
add
fcoms
xchg
xchg
mov
sbb
add
leave
test
mov
icebp
xor
ficoml
cld
add
and
imul
stos
jno
gs
aas
and
loope
cmp
cld
inc
cltd
or
shll
int
push
push
jp
and
and
aam
ret
mov
lcall
aaa
mov
aad
dec
sub
adc
push
mov
xchg
add
pop
add
add
fwait
pop
add
pushf
jne
gs
lock
sahf
fcmovnu
in
lods
iret
in
sub
add
filds
les
and
jmp
mov
pop
and
lcall
in
sbb
into
push
mov
push
pop
into
es
cltd
enter
push
int
rclb
pop
fildll
sbb
and
je
loop
mov
push
mov
push
dec
pop
es
pop
call
hlt
cmp
fsubs
jl
iret
daa
andl
repz
mov
insb
leave
cmpsl
pop
inc
arpl
add
and
sahf
pushf
jmp
adc
mov
sub
pop
pop
dec
mov
and
nop
gs
inc
clc
fsubrl
xchg
xor
dec
pop
mov
jbe
pop
xor
push
pop
dec
movsb
out
jns
jbe
and
mov
out
xchg
dec
bound
jle
leave
mov
sbb
jb
sbb
out
xor
mov
add
mov
lret
dec
test
mov
add
fwait
cmp
mov
push
xor
mov
jae
push
ret
jo
je
mov
lock
cmpl
adc
dec
push
sub
lahf
cld
das
das
or
fists
lahf
loopne
mov
lcall
mov
popa
aad
sbb
std
fstp
cmp
mov
cmc
fildll
and
jo
inc
clc
push
jns
mov
xchg
cmp
loop
fmulp
lods
inc
cmc
jo
decl
icebp
fcoml
loop
and
push
ljmp
jns
icebp
sbb
mov
and
out
and
cli
mov
pop
fdivs
jbe
adc
sti
xchg
add
xchg
cltd
push
sub
xchg
or
inc
shrb
jl
cmp
fldenv
pop
fisttps
movsb
pop
cmp
xchg
mov
xor
dec
jae
sub
adc
aad
push
xchg
in
ds
stos
lahf
jb
leave
add
test
iret
leave
mov
mov
repz
pop
sarl
jmp
test
jae
call
mov
movsl
cmc
fimull
mov
ljmp
mov
or
insb
js
stc
int
push
inc
ljmp
outsl
push
pop
fnsave
mov
test
mov
fstl
or
inc
sbb
dec
es
scas
cltd
mov
aad
mov
stos
jl
cltd
cmp
push
scas
add
int
bound
jno
out
stc
pop
add
pop
or
decl
jnp
and
sbb
aad
mov
sub
mov
push
inc
mov
inc
repz
sub
ret
inc
sub
adc
xor
inc
xchg
lds
cltd
or
xchg
andl
jecxz
mov
sub
sbb
jle
xor
adc
mov
icebp
push
push
add
or
xor
popf
into
xor
scas
test
jno
sbb
outsb
in
xchg
les
daa
iret
ficomps
sbb
mov
fdivl
into
mov
mov
lds
outsb
cmp
cmp
sub
xchg
cmp
loop
mov
popf
inc
sbb
imul
xchg
outsb
xor
lock
xor
mov
scas
outsb
fsubrp
xchg
cmp
adc
inc
cmpsb
filds
inc
inc
push
cmc
and
jbe
sbb
nop
add
cli
xchg
pop
adc
xor
repz
mov
mov
fs
add
mov
cmpsl
dec
lahf
popa
in
out
mov
dec
stos
sub
pop
mov
xchg
sahf
ss
std
xchg
stc
mov
mov
les
gs
xchg
adc
int
loop
data16
jecxz
leave
xor
inc
dec
js
sub
and
in
push
mul
mov
orl
mov
lret
dec
stos
scas
jecxz
inc
dec
sbb
jle
fs
cs
dec
jbe
and
push
mov
into
lods
mov
pop
sahf
lcall
cmpsb
jns
popf
je
mov
sbb
push
fcoml
mov
mov
es
es
dec
lock
outsb
mov
fsubr
dec
mov
or
mov
les
adc
loopne
out
lret
adc
inc
out
push
add
sbb
jmp
int
mov
sbb
cmp
inc
shll
arpl
imul
push
call
pop
pop
mov
jb
pop
push
pop
mov
jno
aad
mov
test
add
push
sbb
sahf
adc
xchg
push
hlt
cmpsl
cld
arpl
and
lret
jns
orl
sbb
in
push
xchg
pop
ss
and
inc
in
cmp
dec
jmp
or
shrl
sahf
mov
stos
mov
dec
sti
inc
out
stos
dec
lea
adc
mov
aam
gs
mov
cmpxchg
cmpsb
sahf
mov
js
push
mull
dec
mov
lahf
je
and
aad
sbb
sbbb
jmp
mov
aas
mov
dec
ret
fstpt
fistl
enter
aaa
jae
outsb
and
or
or
dec
js
pop
call
sub
pusha
ret
cmp
lea
sar
mov
pop
lcall
push
bound
and
stc
mov
notrack
imul
push
adc
cltd
xor
fcomi
popf
in
scas
lock
adc
add
sahf
cld
jb
mov
push
sbb
xor
pop
and
int
data16
insl
sbb
mov
aam
sub
pop
pop
add
shr
bound
loopne
cmc
cmp
and
cli
mov
enter
push
jp
cltd
dec
inc
icebp
add
cmp
lret
push
outsl
stc
rcll
popf
cld
cmp
or
sub
leave
sub
pushf
mov
lds
shll
roll
test
pop
cmp
test
into
pop
imul
rsqrtps
sbb
dec
jae
or
test
push
adc
dec
inc
add
mov
ljmp
cmp
loopne
pusha
popa
test
ljmp
das
xor
adc
push
dec
cld
xorl
jecxz
mov
aas
popa
cmp
cmp
sbb
add
cmpsb
ret
xor
mov
repnz
lods
xchg
enter
cmp
inc
jmp
fcmovnbe
push
popa
sbb
cmp
pop
sub
sbb
xor
sbb
xor
pop
mov
std
dec
xchg
inc
inc
jb
hlt
call
mov
inc
push
sub
xor
sub
lock
pop
fs
imul
cmc
or
jne
cmp
xchg
sti
mov
je
andl
jno
in
pop
xchg
mov
push
push
xchg
in
lods
add
xchg
cli
pop
jmp
stc
incl
and
inc
rcrb
adc
scas
dec
insb
ss
adc
stos
or
mov
div
sbb
mov
cwtl
xchg
inc
outsl
in
dec
mov
cmpsb
jne
leave
arpl
pop
cli
fsubs
test
sbb
mov
mov
and
dec
leave
add
popf
adc
nop
or
add
or
xor
inc
inc
adc
xchg
sub
adc
xor
loopne
cmpsb
adc
mov
dec
ficoml
fwait
and
xchg
sub
mov
repnz
inc
fsubs
add
mov
ret
sub
aad
xchg
mov
stos
lods
out
repnz
mov
sub
cmp
shll
mov
mov
and
mov
pop
cld
in
lds
pcmpeqw
insl
push
add
data16
or
outsl
jmp
mov
jne
xchg
xor
xchg
adc
or
push
rol
pusha
aas
inc
cltd
pop
add
aam
and
fs
mov
ret
imul
mov
sahf
cmp
and
mov
and
ja,pt
insl
bound
mov
adc
jns
test
cmp
dec
outsl
in
cmp
mov
rcrl
popf
inc
xor
lods
inc
icebp
lods
daa
mov
sbbl
pop
fistl
push
gs
outsl
or
sti
leave
mov
scas
std
dec
xchg
test
xchg
shlb
pop
jb
mov
push
sarl
gs
cmp
mov
xchg
std
inc
jo
stc
sub
test
aaa
xor
aaa
cmc
or
or
fistpll
push
dec
jge
shrb
inc
das
or
fldl
adc
push
xchg
stos
inc
std
or
jns
rolb
lret
js
dec
fld
adc
out
adc
lret
pop
int3
shr
pop
xchg
xchg
cmp
mov
cmp
sbb
loopne
in
sahf
fs
inc
sub
and
mov
bound
sub
jbe
xor
jae
pop
mov
sbb
leave
cmp
lcall
xchg
jne
daa
jb
or
mov
out
sbb
pop
daa
std
mov
hlt
sub
adc
mull
sbb
mov
popa
fwait
cmp
and
das
cs
scas
lods
add
int3
mov
and
loop
lea
pop
test
sarl
and
cmp
rorl
add
mov
jle
mov
ret
lock
mov
xchg
bound
test
das
xchg
inc
adc
aas
addr16
add
cmpsb
stos
fisubrs
dec
jecxz
fdivrl
nop
add
lods
fsts
jnp
add
jecxz
fs
adc
pop
pop
or
xchg
ja
cmp
mov
xchg
push
push
mov
lea
mov
rcl
outsl
push
sub
fisubrs
cltd
cmpsl
adc
and
ret
pop
popl
sarb
fsin
lock
dec
push
out
popl
inc
clc
mov
xchg
pop
aas
mov
imul
les
addr16
inc
idivl
inc
push
movsl
mov
push
cli
cltd
or
sub
test
pushf
xor
fs
jae
push
mov
test
bound
aaa
aam
mov
pop
mov
jp
imul
dec
int
scas
sarl
adc
daa
lods
mov
adc
psrad
fs
aas
inc
aam
push
sbb
sahf
adc
lahf
jns
jg
add
push
jbe
jp
mov
push
imul
iret
roll
xor
and
sbb
insl
repz
pop
stc
mov
mov
cmpsl
jne
push
cmp
mov
add
scas
jg
mov
ret
iret
sahf
and
stc
scas
mov
shlb
stc
jl
mov
fadds
lcall
xor
in
xlat
scas
xchg
loopne
pmulhuw
pop
scas
sbb
pop
lds
leave
cmp
insl
jmp
lds
test
out
xor
bound
scas
aas
xor
arpl
pop
popa
mov
push
mov
xchg
mov
jmp
shll
decl
mov
pushf
scas
mov
je
xchg
mov
and
cld
ja
push
data16
std
call
or
pop
xchg
outsl
ret
test
jns
pop
mov
mov
add
cmp
jmp
mov
xchg
xor
insb
xor
xchg
dec
or
xorl
pop
popf
insb
mov
mov
inc
cs
mov
lds
fdivrl
into
add
pop
fisubl
push
mov
cmc
rol
cmp
gs
lods
insl
pop
std
push
mov
push
daa
lret
in
stc
andb
xor
and
dec
fcompl
shlb
adc
or
test
jle
push
jecxz
mov
dec
jle
dec
out
stos
push
loope
enter
sti
in
mov
dec
outsb
dec
adc
or
adc
sub
imul
aad
jmp
or
add
mov
jecxz
mov
mov
push
cmpsl
icebp
mov
and
push
out
inc
push
xchg
in
jns
xor
fistpl
mov
aad
dec
stc
sbb
jp
dec
aas
stos
imul
jno
mov
inc
ret
aam
fstpt
sti
xor
push
inc
sbb
xchg
mov
hlt
sbb
add
inc
dec
insb
jno
subb
in
stos
out
pop
push
int
xchg
cmp
dec
imul
out
push
dec
or
bound
push
cmp
sbb
cmp
cld
in
mov
xorb
xor
push
xor
mov
rcll
xor
mov
pop
jmp
xchg
pushf
scas
push
call
rcll
cmc
mov
repz
shrl
mov
cs
mov
mov
lcall
inc
xchg
imul
mov
sub
leave
pop
add
pushl
mov
rol
out
pop
dec
jno
inc
cltd
fsubr
add
dec
xchg
inc
fldenv
add
pusha
xchg
daa
hlt
mov
pusha
pusha
xor
push
push
into
add
lea
mov
mov
sub
xchg
repnz
inc
jg
popl
sahf
aad
or
aas
or
test
dec
pop
jnp
jg
cwtl
add
inc
xchg
xor
jge
sbb
sbb
jbe
movsb
je
add
inc
mov
clc
pop
fistps
jb
test
lret
push
cmp
movl
popf
sahf
add
mov
sub
cmc
push
sub
into
xor
sub
pop
fs
mov
aas
pop
mov
fwait
notb
ljmp
inc
lods
pushf
out
dec
shr
sbb
btc
fcompl
fmuls
inc
jbe
pop
push
pop
ljmp
pop
add
imul
cmp
lds
add
loope
das
pop
cmp
dec
aas
mov
inc
mov
inc
out
adc
and
das
xor
add
pop
je
rorl
lock
jge
mov
add
addr16
sbbb
loope
pop
clc
mov
in
xchg
jge
mov
fcmove
loope
fmull
fiaddl
fistps
adc
ds
and
daa
iret
mov
pop
out
addb
or
jp
out
mov
ljmp
push
mov
jnp
jge
in
or
dec
icebp
xor
mov
mov
fwait
fs
ret
and
xchg
scas
in
add
inc
enter
add
jbe
xlat
leave
dec
push
or
outsb
sub
sub
fwait
shll
les
or
in
in
shll
clc
cmp
inc
sahf
and
std
add
enter
mov
int
outsl
les
sub
mov
div
xor
fadds
sub
add
cltd
out
jne
jnp
aam
xchg
outsb
sub
or
out
imul
or
js
inc
aam
jg
cmpsb
outsb
cmp
daa
mov
in
dec
test
pop
mov
cltd
pop
add
movsl
stos
jne
jle
movb
fs
imul
sahf
xchg
pushf
cmp
lcall
lret
sbb
inc
adc
dec
xchg
data16
packsswb
in
iret
sub
xor
jg
mov
jb
stos
add
xor
jo
pop
lock
push
xor
adc
xchg
inc
scas
shl
in
jle
test
jecxz
mov
in
sti
inc
jle
movsl
adc
adc
out
xchg
xor
lds
cmp
cs
test
xor
jns
jecxz
pop
scas
lods
and
cmp
insl
int
xchg
ret
xchg
xchg
insl
jge
pop
roll
icebp
mov
test
outsl
push
lret
test
mov
sub
mov
jecxz
int3
add
dec
aas
cmp
frstor
movb
test
shll
fs
pop
aas
rcll
mov
lret
pop
adc
rolb
cli
sbb
dec
ror
mov
in
xchg
inc
jp
push
mov
imul
mov
fisttpll
push
inc
cmp
repz
pop
inc
inc
shrl
gs
and
mov
mov
xchg
data16
imul
mov
sub
or
insl
jecxz
push
mov
cmp
aas
cmpsl
js
jp
out
push
push
imul
lea
adc
jns
cmc
loope
adc
jns
negb
fwait
dec
mov
xchg
pop
dec
lahf
mov
out
in
sbb
jl
lahf
mov
es
movsb
daa
mov
add
cmpb
lret
shl
stos
pop
xor
daa
inc
fisttps
xor
cld
or
push
mov
and
jbe
aaa
es
flds
inc
mov
dec
rorb
jecxz
inc
push
pop
icebp
fisubs
js
push
fsubrl
lea
mov
je
inc
in
add
std
xor
mov
adcl
inc
push
xchg
pushf
mov
xchg
cmp
scas
daa
sub
adc
cs
addr16
xchg
cmp
into
lods
sub
outsb
in
scas
adc
hlt
sub
insb
imul
dec
gs
inc
jp
call
lret
jae
mov
outsl
sub
pop
cmp
add
mov
ljmp
ljmp
or
pop
inc
pop
out
dec
mov
test
daa
mov
jge
or
cmp
in
mov
inc
hlt
cmc
addl
push
aad
fmuls
test
cwtl
hlt
pop
subb
inc
pop
push
fst
insl
xor
push
cmp
push
mov
xor
jns
divb
fsubs
cwtl
in
adc
mov
lods
cli
xchg
mov
pop
lods
and
push
mov
sub
adc
cwtl
stos
or
mov
imul
cli
cmp
xchg
push
je
push
inc
or
xchg
fs
jne
or
or
cmp
cltd
lret
cs
popa
xor
pop
in
cmpl
jae
add
jbe
test
stos
cld
fs
jle
lahf
fcmovnu
jp
cmp
mov
inc
ds
fnstenv
mul
insl
inc
add
popa
ljmp
pop
add
ss
out
or
and
add
cltd
pop
add
lret
xor
inc
fnsave
es
xor
sbb
add
push
test
div
adc
dec
jo
in
test
cmp
das
lcall
stos
ret
mov
push
arpl
sub
shlb
xchg
sahf
ficomps
iret
in
dec
xor
jp
dec
in
xor
xor
mov
repz
add
test
jae
push
add
or
and
pop
xor
into
fwait
and
or
jg
loopne
sarl
cwtl
js
push
xor
sbb
popf
lahf
push
push
inc
xchg
lods
insl
sub
mov
movsl
and
xorb
push
or
hlt
andl
dec
sbb
and
xorb
lcall
loopne
ljmp
in
xorl
jbe
adc
ficomps
popa
xchg
std
sub
jp
xor
out
jmp
stc
lods
mov
sub
dec
sub
out
enter
xchg
bound
inc
mov
add
stos
insb
es
jge
mov
sub
adc
fs
psubd
mov
fcom
addb
cwtl
fdivrs
popf
mov
mov
sbb
gs
out
daa
iret
aas
adc
fidivl
push
jmp
xorb
test
ret
mov
dec
xchg
mov
mov
push
out
pop
pop
pushf
xchg
inc
imul
out
pop
popf
lret
lock
bound
mov
push
add
mov
loopne
or
lock
inc
cs
stos
fstpt
xchg
mov
push
adc
pop
mov
mov
mov
sbb
mov
or
leave
es
dec
arpl
adc
dec
xchg
insb
aad
xchg
shll
push
ret
inc
and
mov
jmp
or
fimuls
pop
sub
jge
dec
jl
sub
idiv
stos
add
and
add
sbb
ret
xor
in
dec
xorl
sub
mov
and
mov
imul
sti
mov
and
ficoms
or
ja
sbb
out
leave
mov
mov
push
ss
sub
pop
sbb
mov
bound
mov
mov
aam
and
jmp
add
pushf
cltd
sub
cmpsl
mov
dec
div
xor
rorb
add
leave
into
cmp
pop
cli
ds
push
loope
add
dec
pushf
push
mov
sbb
mov
popa
ljmp
imul
sahf
bound
in
xchg
xor
cmc
fnclex
jg
push
lret
test
adc
push
dec
jl
push
sub
enter
std
jl
aad
fs
repnz
lcall
lret
cmp
sub
jno
sbb
mov
or
lds
lcall
in
sbb
nop
add
xchg
pop
inc
sbb
sahf
inc
cmp
jecxz
enter
je
fisubs
decb
inc
sar
or
and
arpl
and
mov
aaa
je
pop
cwtl
data16
adc
insl
xor
push
pop
xor
fcoml
add
mov
sbb
dec
sbb
adc
push
sub
sbb
arpl
repnz
mov
fs
adc
mov
fldcw
lret
mov
cmpsl
dec
pop
xchg
nop
push
inc
scas
ss
xchg
clc
fwait
jns
movsb
pop
arpl
movsl
add
sbb
push
jle
ds
push
push
mov
sbb
mov
push
fwait
rorl
jno
fnstcw
push
ljmp
fldenv
sub
xor
sub
and
nop
sub
aas
ret
sub
cmp
repnz
cmp
leave
cli
std
mov
cld
lods
fs
jne
push
or
dec
xor
sub
movsb
sub
mov
cmpsl
fstpl
dec
and
lds
jae
cmpsb
jl
insb
mov
mov
cwtl
stc
mov
mov
mov
adc
aad
mov
insl
cmpsb
mov
xchg
sub
data16
jb
in
fiadds
scas
stos
stc
sbb
in
push
std
ret
fidivl
cwtl
std
push
push
mov
dec
mov
push
mov
adc
fnsave
jne
mov
cs
movsl
jb
sbb
xlat
vshufps
int
cwtl
pop
mov
fwait
rcrb
pop
sbb
and
aas
sbb
psrad
mov
pop
daa
jb
jae
push
rorb
insb
data16
inc
sub
sbb
jge
add
lock
mov
enter
push
stos
adc
mov
xchg
pop
or
and
add
mov
dec
jg
mov
stc
mov
push
mov
jns
movsb
test
ljmp
sub
cmp
sbb
cmp
les
repnz
scas
add
int3
mov
sbb
aad
in
fidivrl
out
stos
sbb
mov
sub
aam
sub
stos
sbb
aad
mov
push
mov
push
mov
push
ds
jl
data16
jno
aaa
inc
jmp
movsb
inc
xchg
push
sbb
push
inc
xchg
pop
or
fdivrs
aad
sub
cmp
insl
nop
jno
loope
sbbb
mov
out
fsubrl
lods
jbe
mov
inc
ljmp
mov
leave
loopne
movsl
adc
mov
movsl
lahf
pop
mov
es
xor
outsl
and
sub
mov
or
pop
arpl
push
test
fnsave
xchg
icebp
je
pop
lock
sahf
cmp
xchg
dec
pop
inc
mov
out
mov
jbe
out
jo
jp
xlat
into
in
pop
or
sbb
or
lea
mov
mov
dec
xlat
test
add
mov
inc
lret
sub
mov
ljmp
lahf
jo
stos
nop
and
push
push
rorl
or
fnsave
push
sbb
cmp
mov
lcall
push
in
insl
and
in
repz
mov
cmp
push
sbb
popf
inc
pop
adc
sbbb
xchg
and
inc
and
lret
mov
mov
pop
ret
mov
roll
lahf
scas
sub
in
mov
ret
cmp
sbb
stos
dec
aaa
inc
popf
lret
jo
mov
xor
mov
and
call
pop
rcrl
adc
mov
lret
push
call
sarb
loope
sahf
addr16
fidivs
pop
mov
rcrl
or
jb
pop
dec
test
or
push
mov
mov
sub
inc
fxch
push
lds
cli
xchg
add
mov
aaa
xlat
aam
push
aam
add
std
ret
or
inc
mov
sarb
call
and
adcl
jo
movsl
mov
aas
cmpb
jbe
shl
stos
lret
sbb
lahf
jmp
cmp
mov
mov
sbbl
cmp
mov
ljmp
outsl
notl
or
sub
daa
xchg
dec
mov
cltd
inc
enter
lods
dec
test
cltd
adc
sbb
popf
lds
outsl
lret
jbe
gs
mov
inc
mov
push
push
pop
inc
ljmp
dec
bound
inc
cmpsl
xlat
jae
stc
xchg
add
into
and
push
ss
inc
stos
cld
mov
mov
es
pop
and
and
notl
push
lods
xlat
std
imul
clc
cmc
adc
mov
or
jecxz
or
xchg
inc
gs
rclb
cmpsl
inc
ficoml
inc
cmp
pop
data16
sar
jbe
cmpsl
lods
stc
add
push
lahf
mov
loop
icebp
inc
je
fdivrl
push
scas
lock
push
and
xchg
xchg
mov
cmp
cmp
pop
dec
mov
stos
dec
shll
dec
add
loopne
rorl
das
out
fucom
mov
and
sbbb
jp
mov
divps
push
xor
sti
loopne
push
inc
bound
and
add
cmp
fiadds
mov
in
sub
cwtl
or
mov
sbb
cmp
and
out
rcrl
add
lds
mov
dec
xchg
jle
fnstcw
adc
pop
xor
out
inc
adcb
shll
stos
cmp
rcr
lret
push
mov
sarb
aaa
fdivrs
push
mov
fisubrs
xchg
xchg
ret
mov
push
das
shll
pop
xchg
sub
xchg
adc
movsl
dec
inc
adcl
dec
pop
cmp
dec
xor
add
stos
mov
outsl
jo
sub
das
and
daa
xor
fstpl
push
sbb
test
outsb
aad
popf
dec
test
xchg
test
bound
in
fidivl
xor
jae
std
pop
jbe
js
in
jne
andl
and
lahf
dec
mov
filds
xchg
daa
mov
call
add
aam
dec
pop
cmpsl
leave
lcall
push
andl
iret
fsin
or
je
mul
and
fiadds
xor
jae
jbe
in
cltd
mov
push
xchg
pop
xchg
adc
insl
repnz
lret
int
out
cltd
cli
iret
xor
stos
jb
int3
lods
aaa
sbb
sbb
sub
data16
mov
or
jnp
dec
mov
outsl
push
push
sbb
xchg
cmp
hlt
adc
inc
shrl
cmp
lahf
dec
mov
mov
mov
push
aas
leave
lret
stos
fbstp
or
cmpl
xor
fisubs
inc
jecxz
fimuls
and
and
int
dec
pop
mov
mov
lcall
mov
push
jecxz
stos
popf
lds
jae
mov
int3
pop
movsb
mov
mov
les
fs
mov
clc
cs
iret
jo
fstps
mov
lea
xlat
cmpb
dec
cmp
enter
sbb
cmpsb
dec
xchg
inc
jb
mov
xor
lds
add
mov
ret
jno
int3
enter
inc
cmp
adc
cwtl
cwtl
or
jne
push
jb
lahf
sbb
aad
sbb
aaa
cwtl
ret
push
data16
and
sbbl
jb
inc
arpl
cltd
hlt
ret
mov
fists
repz
daa
dec
mov
rcl
jg
jl
out
loop
std
adc
repnz
lea
mov
add
pop
push
popa
xchg
jge
in
mov
movntq
rcl
daa
cmp
pop
and
dec
adc
lahf
xor
repz
es
insb
hlt
repz
fwait
sarb
cmp
xor
xor
dec
scas
xor
sbbl
shll
in
mov
mov
mov
cmp
jmp
mov
setp
adc
dec
xchg
repnz
pop
mov
mov
xchg
sbb
adc
negl
push
dec
hlt
push
cwtl
jo
sbb
cmp
mov
fists
xlat
xor
es
xorl
pop
daa
outsb
mov
rcll
hlt
fadds
xor
add
mov
xchg
mov
insl
cmp
mov
adc
out
lock
cmpb
push
repnz
adc
pushf
xor
ret
jae,pt
xchg
or
out
fwait
push
fildl
cs
fiaddl
js
test
jns
movsl
mov
push
xor
test
rclb
mov
sub
decl
mov
mov
add
pop
pusha
push
dec
dec
sahf
out
jl
inc
jge
test
sbb
out
xor
push
je
dec
xchg
jecxz
popa
mov
pop
sarl
mov
push
push
ret
xor
dec
cs
pusha
xchg
popa
or
and
inc
popf
cli
mov
adc
fs
pushf
or
lret
sar
loope,pt
sub
adc
push
jns
lret
rorl
xchg
jl
xor
cli
test
nop
mov
adc
in
add
add
leave
aaa
rcll
adc
out
rolb
or
push
or
mov
dec
rcrl
lcall
movsl
cli
mov
lock
frstor
cmpsl
in
adc
and
in
xor
popf
inc
jl
mov
adc
jl
movsl
cli
pop
out
jecxz
test
mov
jle
test
sbb
dec
dec
jns
lock
dec
in
pushf
cwtl
mov
jle
leave
pushf
xchg
pop
pop
ret
and
and
mov
mov
mov
movsl
adc
jg
lret
jle
nop
inc
les
mov
push
or
les
fadd
cwtl
jl
test
iret
pop
adc
xor
in
xchg
xchg
xor
jp
pop
lret
out
and
dec
movb
leave
in
clc
mov
cmp
mov
outsb
cmpsb
fstps
sub
pop
pop
lret
pop
add
test
shlb
ds
rorl
mov
loopne
add
jno
pop
loop
inc
and
clc
push
orl
jbe
jne
sbb
cmp
fsubp
mov
push
mov
mov
mov
sti
bound
mov
adc
sbb
es
fprem
mov
jge
mov
push
add
popa
call
mov
cmp
das
mov
jl
jl
and
icebp
push
loop
cmpsb
arpl
leave
xchg
bound
mov
pop
mov
add
orb
pusha
jmp
imul
xor
addr16
jns
and
dec
pop
repz
xor
push
mov
inc
lret
mov
jae
rcrb
mov
jmp
jb
cmp
add
and
dec
loope
mov
pop
sub
cmp
pop
dec
in
repz
fwait
lock
and
sub
ss
shlb
push
aaa
lahf
inc
data16
mov
cmpl
push
dec
movsl
lods
jp
lods
mov
push
and
les
adc
sub
mov
inc
frstor
shl
test
mov
scas
pop
in
call
push
leave
aad
data16
add
shrl
rcrl
fisubrl
orb
bound
ss
leave
nop
xchg
hlt
lea
sub
mov
je
mov
xor
xor
daa
mov
and
xchg
repz
add
xchg
ds
mov
pop
fiadds
cmp
imul
pop
inc
dec
int3
push
jbe
dec
in
jge
pop
std
pop
out
cmp
cwtl
loope
cwtl
sbb
add
fs
int3
int3
das
dec
jne
clc
movsb
pop
cltd
push
pop
mov
dec
inc
lret
insb
mov
stos
fcmovb
data16
arpl
cmp
repz
cmp
clc
pushf
fwait
cmp
mov
mov
jge
xor
lods
in
lock
sbb
or
jecxz
adc
fstl
dec
xor
cmp
test
adc
es
aam
sbb
mov
imul
fsubs
stc
movsl
or
loopne
cmp
mov
inc
rol
mov
sbb
push
in
fdivrl
jl
outsl
push
add
add
ljmp
call
es
mov
mov
jp
rclb
outsl
pop
push
add
inc
or
sarb
jo
mov
xchg
adc
add
pop
xor
mov
fnstcw
sub
xchg
cmp
xchg
clc
call
push
xchg
jle
hlt
lea
daa
or
or
ss
in
mov
xor
iret
js
add
sbbb
fwait
out
adc
pusha
arpl
dec
movsl
cmpsl
push
and
repnz
xchg
xor
das
pushf
pop
shrb
xchg
shlb
sahf
lret
sub
gs
out
adc
pop
jne
xor
sub
cmp
dec
jmp
pop
ds
mov
pop
repnz
jbe
xor
mov
or
sub
scas
mov
cs
jns
and
neg
dec
enter
jne
jbe
dec
pop
and
mov
mov
mov
aas
push
fbld
push
lea
andl
das
sub
mov
pop
repz
mov
pop
enter
and
loope
rcrb
push
cmpsb
push
cmp
in
jae
adc
int3
or
push
insl
fistl
mov
mov
or
sti
movsb
dec
sbb
ret
rcr
jge
jecxz
cltd
jo
jle
xchg
mov
xchg
mov
in
push
sub
push
aas
push
lock
sub
xor
enter
insb
xor
inc
inc
fstps
rorb
inc
xchg
sbb
mov
ret
mov
repnz
mov
sti
xlat
movsb
mov
insl
negb
fisubrl
add
sti
inc
or
sbb
incb
hlt
ja
push
dec
lods
nop
inc
inc
xor
and
lock
mov
shll
xchg
movsb
jp
or
and
loope
push
mov
mov
ss
jmp
adc
popf
pop
in
mov
std
ja
cmp
jecxz
push
xlat
sbb
std
jb
cld
mov
lahf
and
aaa
sbb
in
cmc
jo
cld
in
push
movsl
xor
cmp
rcll
test
jo
push
pop
adc
outsb
adc
cmc
inc
movsl
push
repnz
outsb
stc
push
push
sub
cli
dec
stc
hlt
inc
push
sbb
mov
insb
hlt
mov
xor
call
in
and
xchg
sbb
push
dec
pop
jns
inc
sub
fs
into
sti
xlat
std
push
lds
sbb
subb
sbb
pop
clc
jl
cmovge
movsl
sub
mov
das
jns
or
mov
inc
mov
adc
lods
jle
outsl
jge
stc
push
orl
fcoml
and
addr16
mull
xor
or
lds
nop
jecxz
cmp
insb
iret
dec
cs
les
mov
xlat
mov
std
cld
xchg
add
daa
enter
push
push
mov
scas
jecxz
fiadds
aas
adc
xor
push
sub
pop
and
dec
mov
cmp
mov
mov
lods
sahf
mov
leave
dec
je
fistl
pop
aas
pushf
add
or
daa
push
insl
data16
movsl
es
mov
ficoml
sub
xchg
call
outsl
jg
jg
jb
push
lods
mov
aam
sbb
scas
add
jne
fcoms
lcall
stos
sarb
mov
out
sub
ja
ret
mov
fwait
mov
push
cmc
cmp
js
dec
xor
adc
pop
pop
fstpl
pushf
cs
pop
adc
aaa
pop
or
lods
pop
dec
pop
nop
imul
addb
jns
adc
mov
pushf
xchg
lock
add
ja
stos
push
pop
or
sbb
mov
aas
sbbb
pop
loopne
add
mov
movsb
inc
sbb
jl
cmp
in
and
jne
sahf
das
sbbb
popa
decb
add
sbb
mov
adc
pop
hlt
gs
test
mov
dec
pop
pop
sub
xor
and
xchg
xor
pop
into
lea
iret
out
repz
pop
push
xor
cwtl
cs
and
pop
cmp
xchg
mov
loop
das
mov
push
leave
push
sub
push
and
inc
sub
mov
xchg
push
test
mov
cmp
je
fwait
in
mov
mov
adc
ret
inc
or
lds
mov
test
loop
dec
out
mov
cmp
xchg
push
mov
xor
imul
idivl
mov
xchg
pop
sarl
mov
or
lahf
gs
and
shufps
mov
lock
sbbb
ret
jns
les
rolb
cwtl
cmpsl
mov
cmp
sbb
es
divb
push
or
jne
xor
xchg
xchg
add
jle
lret
push
sbb
ret
mov
dec
test
ret
xchg
sub
lcall
hlt
xor
push
sub
pushf
mul
cmp
sub
data16
outsb
jl
inc
std
je
pop
add
dec
les
inc
inc
rclb
xor
mov
not
ljmp
mov
out
sub
ret
loopne
cs
leave
lods
jae
test
sbb
xchg
mov
das
hlt
push
repz
out
repnz
jp
popa
aad
adc
dec
iret
push
jno
push
push
testl
pusha
sbb
les
mov
or
cmpsl
decl
mov
stos
add
jl
push
hlt
push
pop
pop
xor
push
fwait
cmpl
pop
lret
sti
dec
pop
lcall
fnstcw
lahf
fmuls
shll
aaa
pop
call
push
push
pusha
stos
sub
hlt
neg
push
push
dec
push
or
push
mov
pop
pop
lea
pop
icebp
sbb
pop
cmc
in
mov
cmpsl
out
jb
and
dec
sbb
jmp
push
jb
sbb
xchg
mov
mov
paddusw
repz
addb
ror
push
cltd
xchg
sub
mov
clc
sti
icebp
sub
xchg
xchg
fsubs
and
push
mov
fnstenv
adc
mov
jmp
jne
js
pop
xchg
lods
cs
fnstsw
lds
in
mov
and
inc
cltd
xor
mov
inc
cltd
push
jecxz
das
loope
and
daa
mov
lods
arpl
mov
out
mov
push
mov
mov
mov
shr
sbb
add
adc
cmpsb
inc
pop
fwait
out
fwait
mov
out
in
pop
cld
and
push
cmp
lcall
adc
lods
out
adc
dec
add
xchg
mov
mov
pop
insb
and
fiadds
test
pop
lds
psraw
or
mov
xchg
add
addr16
and
fldcw
mov
repnz
icebp
and
je
dec
dec
and
out
in
aad
or
mov
dec
pop
aas
jl
out
test
aam
test
pop
pop
cmp
xor
jmp
fiadds
gs
mov
cmp
nop
lret
jle
dec
out
xor
test
sub
mov
insl
lock
in
scas
outsl
insb
stc
pusha
pop
jo
mov
jbe
mov
mov
lret
sbb
std
inc
sbb
cmpsb
leave
mov
out
stos
ja
hlt
pop
cmp
jge
sub
or
cmp
xor
fs
mov
sub
jl
and
jmp
push
adc
lret
cmp
idivb
aaa
xor
add
je
outsl
enter
adc
jg
adc
lret
jl
jp
sub
push
and
inc
pop
and
scas
push
in
in
outsb
pusha
mov
xchg
sbb
ds
push
and
insb
addr16
dec
pop
rol
mov
xorb
dec
scas
outsb
sahf
jns
xchg
jge
jne
mov
and
cmpsb
out
push
lock
xor
jne
mov
sbb
and
fnsave
dec
xor
mov
cmp
lcall
inc
insl
sbb
scas
push
xor
in
decb
popf
cld
xor
jne
jle
jp
ffree
mov
subb
push
mov
cmp
sbb
xor
adc
push
mov
xor
popf
xorl
ja
mov
lods
jg
mov
mov
adc
test
ds
and
in
lcall
fisttpl
adc
xor
stos
xorl
and
and
pushf
jae,pt
stos
xor
dec
stos
fcomps
mov
add
sub
lods
aaa
mov
sbb
add
pushf
and
movsl
ficompl
xor
scas
jg
repnz
in
inc
inc
stc
and
add
inc
loop
mov
xlat
cltd
dec
je
jl
shl
inc
cmp
mov
nop
or
iret
call
mov
inc
pop
test
loopne
dec
les
sbb
imul
mov
push
lcall
orb
subb
movsl
insl
and
outsl
stc
out
mov
pop
adc
dec
mov
mov
mov
enter
cmpsl
mov
pop
mov
shlb
dec
aad
pop
mov
lods
ret
sbb
jmp
jo
cmc
imulb
mov
lods
xlat
or
jns
test
mov
cmp
sbb
ljmp
sarl
mov
enter
pushf
rclb
iret
aam
sub
cs
mov
mov
pop
sbb
das
ja
hlt
fxtract
test
xchg
stos
add
rcll
adc
mov
cmp
cmp
cmp
repz
jle
addl
sub
cmc
and
push
push
insb
mov
mov
or
or
sub
dec
and
jo
pushf
xor
push
stos
stos
mov
test
cmc
sub
lods
mov
jg
addr16
xor
repz
mov
aas
insb
adc
inc
fstp
stos
movsl
inc
neg
mov
loop
add
push
aam
dec
xchg
push
lds
push
add
dec
adc
adc
pop
pop
lods
pop
nop
iret
ret
push
sub
fmull
jecxz
repnz
push
push
testl
out
jne
divb
jne
ret
les
mov
lods
sbb
daa
test
call
insl
dec
or
inc
add
aam
je
dec
adcb
gs
adc
jae
sbb
enter
or
test
out
fnsave
jg
outsl
maskmovq
lock
xchg
fisttpll
ds
movsl
nop
sub
xor
pop
rcll
jbe
stos
rclb
lods
lcall
xchg
fwait
push
mov
fsts
das
or
and
jbe
pop
inc
add
inc
popa
or
iret
push
lds
pop
mov
call
dec
dec
repz
insl
fildll
scas
cmp
outsb
dec
cwtl
test
cmp
mov
ds
aaa
out
or
xchg
mov
mov
push
inc
call
adc
test
movsl
jecxz
sbb
xchg
mov
and
sbb
mov
in
or
pop
jp
add
dec
sub
loope
sti
add
jnp
std
test
mov
push
sbb
add
pop
out
add
scas
inc
mov
aas
pop
or
adc
fisubrl
dec
jg
mov
repz
sub
lods
imul
aad
xchg
ss
lds
mov
std
adc
pop
adc
insb
or
pushf
cmpsl
pop
int
xchg
dec
push
outsl
out
jae
stos
addl
fimull
mov
mov
int
int3
sub
adc
aad
sbb
xchg
insb
es
xchg
fbstp
mov
pmulhw
stos
aam
lods
sbb
adc
jp
adcl
sbb
jae
ret
push
push
cs
xchg
loopne
pop
sahf
mov
sub
mov
rcll
jbe
xchg
scas
and
push
jo
xor
fcmovne
push
jp
ret
lea
pop
inc
ljmp
inc
scas
mov
int3
mov
in
push
adc
stos
and
pop
push
adc
sub
orb
push
or
inc
dec
dec
scas
dec
loopne
xchg
mov
xchg
jne
sub
mov
xor
lods
sbbb
xor
mov
imul
jae
fsubrs
dec
dec
mov
lock
rorl
cmp
push
cmc
mov
les
mov
ffreep
sbb
fcoml
push
adc
adc
push
call
hlt
cmpb
outsb
pop
xchg
loopne
jle
cmp
pop
adc
sub
jnp
mov
jle
stos
xchg
mov
dec
in
cmp
lds
and
jge
jle
pop
inc
stos
fsubs
cmc
pusha
das
aam
and
or
pop
mov
inc
xlat
scas
mov
adc
cwtl
lret
dec
sbb
mov
lea
mov
push
sar
jno
in
mov
xor
data16
pop
push
and
sub
and
lods
jl
lds
sahf
adc
and
pop
orl
dec
pop
in
fcmovnu
frstor
notb
fnstcw
stc
in
daa
pop
jbe
stos
cli
cmpsl
repnz
nopl
and
jbe
lds
add
test
dec
loop
add
cs
inc
aam
lahf
jbe
or
in
scas
add
ret
push
arpl
cmpsb
repz
mov
xor
pushf
loopne
and
push
jne
sbb
fcmovne
cmpsb
pop
scas
jae
shll
sar
outsl
pusha
cmp
mov
cmp
jns
sahf
pushf
add
popf
fisubs
mul
push
pop
adc
loop,pn
mov
pushf
pop
mov
pop
xchg
fs
push
ljmp
test
int3
scas
int3
jp
dec
mov
int
addr16
xchg
mov
mov
fcompl
cmp
jno
push
inc
mov
dec
sbb
lcall
sub
lds
pop
jmp
xchg
scas
xorb
stos
icebp
out
into
std
jg
fs
jnp
in
push
inc
das
xor
aaa
or
cltd
xor
scas
cld
pop
dec
xor
adc
and
pop
test
sub
dec
sahf
lahf
adc
pop
lahf
icebp
dec
jge
bound
je
pop
pop
and
inc
and
push
in
test
jns
notb
call
nop
int
addr16
jbe
sbb
jmp
mov
pop
pushf
dec
pop
xor
outsb
inc
mov
jl
rolb
xchg
cld
jne
call
or
mov
int
xchg
outsb
lods
xor
sub
test
cmc
pusha
lahf
push
jno
pop
loop
shll
jns
addb
aaa
mov
cltd
into
jnp
out
push
lock
mov
mov
iret
or
fs
add
pop
xchg
pop
aaa
mov
popf
inc
mov
mov
cmp
movsl
lock
add
inc
dec
jb
mov
imul
orb
jge
or
dec
cmpsl
les
sti
je
shll
mov
dec
xchg
pop
cmp
mov
movsl
sbb
jb
lcall
fimuls
or
fisubrl
xchg
mov
push
cmp
cmpsb
ds
scas
inc
mov
dec
cwtl
clc
arpl
jo
je
mov
jb
dec
lea
mov
add
fs
lahf
push
xchg
test
mov
cmp
pop
fsubs
popf
outsb
aaa
adc
das
es
dec
js
idiv
mov
sarl
mov
pop
push
pop
aaa
andps
stos
into
clc
push
xchg
int
cmpl
mov
in
push
test
sub
mov
outsl
xor
imul
in
push
cmpsl
dec
sarb
pop
mov
xor
in
mov
jo
in
dec
adcb
and
and
inc
jl
cmp
jbe
mov
aad
roll
xor
pop
out
push
movsl
loopne
cmp
ret
test
int
lods
push
xchg
out
jno
jnp
std
xor
jmp
add
add
inc
popf
xor
jbe
rcrl
dec
ds
xor
xchg
inc
cmc
xchg
jo
stos
dec
pop
jl
in
sbb
cmp
shll
sub
cmp
mov
out
jmp
lods
nop
fldcw
push
mov
rcll
adc
jp
addr16
sbb
add
data16
push
sub
rcpps
mov
imul
mov
fstps
addr16
push
clc
sub
sub
shrb
push
pop
push
xchg
push
xor
imul
in
unpckhps
push
outsl
stos
shlb
pop
sbb
mov
or
adc
scas
sbb
pop
lds
inc
sub
inc
cmp
sbbl
mov
in
push
rol
ss
sbb
pushf
mov
sahf
push
pop
call
jmp
fsubl
repnz
lods
mov
jo
fcoml
mov
arpl
jo
and
cmpsb
jmp
jne
pop
adc
call
sbb
je
add
pop
pop
aas
jne
dec
inc
sub
jmp
popa
aam
imul
filds
call
iret
mulb
sub
jae
lods
jne
cmp
pusha
xchg
add
mov
or
mov
add
and
nop
sbb
inc
fxch
pop
mov
inc
jae
enter
or
dec
mov
cmp
pop
pop
and
xorl
shll
cmp
add
int3
mov
cmp
fstl
mov
or
call
inc
loopne
xchg
dec
mov
fcmovnb
in
shl
and
fadds
mov
xor
adc
fdivrl
xor
jmp
inc
pop
cs
sbb
cltd
popf
mov
lock
dec
scas
mov
mov
mov
add
hlt
adc
data16
xchg
mov
xor
sbb
pop
pop
ret
cld
xchg
sbb
mov
jl
subl
orb
fdivrs
cltd
dec
insl
push
mov
jo
sub
idivb
imul
outsl
fwait
clc
xor
adc
pop
jmp
push
inc
scas
xlat
mov
insl
aas
rol
cld
or
subb
ss
insb
nop
or
inc
sbb
int3
outsl
pop
stc
push
jl
mov
dec
daa
or
push
hlt
into
lods
add
ret
dec
daa
stos
insb
sub
cmpb
push
push
fstpl
jmp
sub
lds
test
fnstsw
out
jo
inc
sbb
jmp
loopne
pop
imull
inc
out
cwtl
jp
pushf
and
mov
mov
movsb
pushf
or
shl
dec
subb
daa
outsb
dec
pop
sbb
dec
mov
out
rol
and
addr16
sahf
and
aam
dec
data16
mov
xlat
sub
stos
mov
imul
sub
lret
out
loop
add
ja
fstpl
mov
sub
mov
dec
and
pop
sub
dec
mov
ljmp
mov
les
fs
lret
outsl
xchg
mov
cmp
int3
inc
lock
popa
test
jae
push
push
and
popf
cmpb
mov
int
sbb
mov
fsubs
repnz
pop
test
cltd
mov
mov
push
or
inc
and
lcall
fwait
push
xor
mov
pop
push
push
xchg
dec
mov
icebp
pop
xor
out
in
lret
sti
pop
cmp
cwtl
fwait
dec
xor
mov
push
add
lds
inc
jl
pop
movsb
cmp
arpl
out
popf
xchg
pop
dec
jb
inc
xlat
imul
stos
mov
shll
fdivrl
mov
jge
popa
dec
scas
lahf
imul
out
push
jo
inc
shrb
xchg
test
mov
push
insl
cmp
sub
jne
roll
dec
imul
xchg
inc
mov
cmpsl
lea
clc
pop
mov
arpl
outsb
push
sti
push
xor
xor
nop
out
pusha
dec
out
lcall
cmc
outsb
push
xchg
adc
mov
sub
fs
xlat
push
inc
cltd
xor
movsb
jecxz
scas
xchg
test
and
mov
pop
pop
sbb
or
sub
mov
inc
inc
or
mov
rol
mov
mov
or
popa
fdivrp
xchg
outsb
dec
lds
pop
sahf
aaa
imul
pop
xor
lods
or
popa
rcll
add
imul
inc
bound
push
int3
adcb
cmpsb
jb
insl
xchg
cmp
add
in
int3
dec
mov
push
and
inc
shll
ret
sub
push
xor
pop
xor
hlt
jg
cs
in
xchg
pop
sbb
mov
out
dec
push
pusha
push
in
hlt
imul
pusha
aad
sub
dec
pop
faddp
out
mov
mov
sbb
adc
aaa
std
mov
xchg
test
push
mov
into
repnz
xor
push
mov
xchg
dec
out
push
xchg
loopne
xchg
cld
ss
ret
popf
int3
mov
pop
adc
lahf
movsb
inc
mov
add
mov
xor
nop
daa
dec
scas
jne
xchg
inc
ss
in
inc
push
xchg
pop
pop
test
mov
cld
mov
push
mov
sbb
push
adc
jp
loope
pop
jae
xchg
fbstp
push
adc
push
arpl
pop
mov
inc
test
mov
dec
rcrb
mov
movsl
xor
pop
dec
cmp
and
mov
cmp
xorb
mov
jbe
sbb
inc
out
out
mov
add
lock
loope
sbb
rcll
test
xchg
inc
sbb
cmpsl
bound
add
test
dec
jg
jecxz
mov
out
dec
mov
add
dec
loopne
imul
jbe
mov
push
pop
loopne
adc
data16
mov
mov
pop
mov
inc
out
xchg
les
xchg
dec
imul
jp
fs
stc
mov
subl
dec
bound
stc
jbe
imul
std
cmp
xchg
aaa
jbe
bound
and
stos
adc
outsl
cmp
fwait
cmp
lret
repz
bound
xlat
mov
mov
sub
idivb
mov
repnz
scas
dec
pop
dec
daa
jmp
sub
mov
mov
cld
xor
loop
mov
daa
std
gs
mov
inc
imul
inc
imul
aas
pop
pop
outsb
mov
idivl
and
xchg
call
into
fidivl
cmpsb
and
and
xlat
and
mov
sbb
pop
or
popf
adc
adc
and
xor
mov
inc
pop
push
out
in
pop
pop
dec
ffree
lcall
inc
iret
dec
jge
pusha
xor
cmp
jg
pop
out
out
jnp
mov
mov
and
lret
inc
jp
or
jecxz
xor
lods
xchg
data16
shll
cmc
mov
outsb
pop
xchg
int3
xchg
add
aad
pop
call
das
and
push
iret
dec
mov
test
pushf
lcall
sbb
ss
inc
sbb
push
fnsave
js
add
arpl
sbb
jle
pop
push
xor
mov
push
mov
movsb
daa
add
xlat
nop
test
sub
push
push
xchg
fdivl
add
or
jo
int
je
inc
jno
sti
mov
lret
add
pop
xchg
or
mov
in
pop
sbb
icebp
pop
jg
mov
pushf
mov
shlb
int3
insb
cmp
in
out
loopne
add
popa
in
test
sub
out
jbe
sbb
int3
xor
std
lods
enter
aad
lods
cmp
adc
mov
out
stos
push
out
stc
ljmp
in
mov
and
jp
mov
xorb
adc
push
setbe
push
cmp
aam
call
adc
lahf
cmp
mov
xor
adc
xchg
sub
sbb
mov
lcall
xchg
das
jno
aam
rorl
dec
and
mov
nop
dec
mov
test
inc
or
xchg
fcoms
lret
jl
mov
fstpt
lahf
jno
imull
add
ret
ret
and
hlt
cwtl
out
cmpsb
das
std
sub
pop
popf
jns
ror
cmp
lahf
jns
insb
dec
in
insb
push
pop
enter
mov
jl
push
scas
add
xlat
cmp
sbb
inc
data16
ds
in
pop
lods
xchg
ja
test
add
lock
adc
jg
xchg
pop
lods
cwtl
cmc
sarl
test
jle
mov
mov
mov
bound
xor
mov
xchg
dec
and
ljmp
std
popl
aad
jb
add
sub
nop
jb
aam
dec
xlat
mov
inc
jns
stos
dec
iret
gs
and
cmp
push
mov
lcall
mov
out
ja
ja
popa
mov
sbb
cmp
mov
push
pop
pop
xchg
xchg
mov
fimuls
dec
out
movl
xlat
add
scas
mov
loopne
push
push
push
cld
sub
cmp
pop
dec
pop
sbb
xchg
mov
push
fcmovu
jns
incl
and
and
push
aas
and
movsl
lods
ret
and
movsl
mov
dec
push
lods
mov
xlat
lret
andl
adcl
loope
jl
gs
pop
repnz
xchg
shr
jge
mov
pop
push
loope,pn
mov
out
stos
add
cmp
js
xchg
push
int3
mov
in
sub
mov
in
mov
jle
mov
push
psllw
push
xchg
ss
in
pop
mov
inc
cmpsb
dec
sbb
leave
aam
pop
sahf
inc
fsubs
or
cmpsl
fdivl
int3
pop
mov
mov
mov
dec
sarb
xchg
add
xchg
in
icebp
enter
loop
in
in
push
sbb
int
popf
enter
xchg
dec
jg
notl
and
inc
mov
jo
out
nop
jp
lock
add
dec
repz
dec
cmp
push
insl
xchg
out
adc
je
lods
movsl
fistpll
xchg
leave
push
pop
dec
xchg
mov
in
in
adc
je
imulb
in
int
je
jmp
add
sti
call
sub
mov
or
and
and
fs
jne
mov
cmpps
pop
xorl
or
loopne
nop
sub
pop
sub
and
jb
es
shlb
and
mov
leave
cmp
sub
pop
repnz
js
ret
mov
out
mov
loope
mov
fldt
add
push
sahf
cwtl
inc
aam
mov
das
leave
or
push
add
popf
loope
mov
loopne
sarl
call
test
shll
add
inc
popf
cltd
pop
add
or
mov
lret
fistl
cmp
xor
hlt
leave
mov
pop
add
repnz
dec
sub
fs
xchg
popa
push
xor
lcall
insl
adc
inc
mov
inc
jno
cli
push
mov
fildll
jne
std
mov
mov
je
adc
fnstsw
mov
sbb
add
outsl
fs
cmc
mov
stos
andl
std
lret
inc
fildll
cmpb
and
cmp
mov
ja
sub
xlat
mov
pop
sub
mov
adc
insl
add
divl
jg
dec
rep
push
push
dec
test
icebp
jnp
scas
and
scas
scas
xor
cld
push
insl
in
hlt
adc
add
lcall
push
pop
lods
dec
adc
ja
std
sub
pushw
lret
xlat
icebp
inc
jmp
push
or
fists
or
jmp
xchg
shrl
in
mov
ds
gs
cmp
pop
jns
outsb
cmpsl
adc
icebp
pop
outsl
shlb
mov
imul
scas
shll
cs
icebp
mov
cld
mov
cli
xor
mov
push
mov
loopne
push
je
cltd
push
popf
and
xchg
mov
ja
out
daa
nop
js
jo
push
jg
bound
pop
test
cwtl
lcall
in
pop
mov
pop
ret
icebp
or
dec
fbstp
fistpl
mov
mov
dec
pop
std
das
or
dec
inc
sub
adc
inc
clc
inc
lods
jnp
xchg
cld
add
adc
mov
inc
cmpsl
fwait
adc
xchg
jp
mov
icebp
nop
ret
jae
xchg
jecxz
inc
xorl
add
inc
lock
sbb
sarl
mov
push
in
test
arpl
mov
mov
loope
incl
addr16
mov
jo
cmpsl
rcll
mov
add
push
gs
or
inc
sub
pop
iret
sbbb
cmpsb
xor
fwait
add
pop
popf
aaa
or
lods
das
mov
push
pop
or
inc
mov
lahf
and
dec
sbb
mov
jecxz
jae
in
insl
mov
mov
mov
iret
mov
mov
cmp
xchg
or
fadds
xchg
pop
fcomi
orw
mov
mov
sub
hlt
push
cmp
sbb
dec
sub
mov
jae
outsb
std
lcall
jbe
rorb
jno
call
gs
push
xor
push
call
pop
out
add
std
jmp
bound
popl
insl
roll
xor
inc
ds
sbb
adc
mov
adc
dec
subb
jns
push
inc
shrl
or
sbb
mov
adc
out
ror
mov
or
add
fwait
sahf
push
bound
push
push
pop
pop
movsl
mov
xor
adc
pop
xlat
outsl
movsb
sub
movsl
or
inc
jae
adc
mov
cwtl
pop
pop
or
std
pop
pop
mov
and
fidivrs
pop
insb
pusha
loop
fcompl
hlt
xor
and
sub
mov
addl
cmp
fnsave
insb
mov
mov
jae
pop
nop
push
mov
xchg
clc
sbb
pushf
sbb
in
mov
cmp
jecxz
negb
jne
push
mov
mov
insl
scas
bound
je
pop
xchg
insl
or
inc
sarl
std
rcrb
ret
mov
in
out
mov
sbb
jno
dec
pushf
adc
in
inc
xchg
out
xchg
dec
mov
add
jmp
test
cmpsb
xorl
adc
cmp
push
jae
sbb
or
xchg
cmova
test
pop
push
out
fsubrl
dec
sub
jae
stos
jmp
jge
mov
testl
js
inc
add
inc
xor
pop
mov
mov
out
push
incl
and
hlt
stos
pop
std
rcll
lret
inc
stc
xor
repz
fwait
dec
movsb
sub
jge
mov
cltd
movsb
sub
aaa
cmp
sbb
add
adc
pushf
xchg
pushf
arpl
pop
jp
inc
das
ror
push
or
push
out
pop
addr16
mov
repnz
mov
sub
int3
pop
cmp
push
or
sarl
jns
ret
mov
or
fldt
pop
mov
push
jns
pop
ret
xchg
push
cs
mov
cmpl
out
outsl
ljmp
jp
sub
and
pop
leave
add
arpl
jp
and
inc
push
ja
mov
cmc
adc
cmp
lahf
sahf
mov
dec
scas
scas
mov
pop
and
inc
push
jg
push
aad
rcrb
jbe
ficompl
cmp
jle
jmp
mov
arpl
loop
push
loopne
cmp
pop
jle
ja
push
inc
sbb
sub
and
adc
inc
cs
push
dec
decl
push
or
mov
lock
hlt
movsb
jb
movsb
jne
push
cmc
lods
daa
push
test
mov
movsl
shll
mov
lret
pop
cs
ja
lcall
push
push
adc
cmp
xchg
pop
loope
sub
mov
pop
fsubrl
dec
cmpb
or
imul
test
sarl
loop
pop
lea
mov
lds
mov
out
mov
pop
xlat
inc
cmp
adc
fsubs
arpl
fwait
ret
cmpsb
xchg
pushf
cmp
imul
push
cld
xchg
fldcw
mov
or
jb
movsl
cmpl
mov
sarl
pop
sub
adcl
sbb
add
add
ljmp
mov
loopne
cmpl
leave
mov
jb
dec
ret
cmp
jg
jns
pusha
bnd
or
push
mov
roll
jbe
repnz
insb
adc
dec
inc
sti
call
inc
mov
inc
cs
lods
int3
divb
xor
sbb
mov
out
push
inc
aas
sub
stos
mov
inc
pop
out
ret
rcr
cmpl
or
inc
inc
sbb
scas
popl
inc
mov
roll
or
xor
pushl
push
test
sbb
sarl
sbb
sti
lret
push
cmp
push
out
push
sub
push
adc
pop
jmp
dec
xchg
push
imul
mov
push
mov
or
lcall
stos
xchg
and
popl
notl
into
imul
popf
jge
add
rorl
pop
fsubl
mov
test
mov
xchg
sbb
out
outsl
dec
pusha
pop
xorb
pop
out
dec
jmp
push
sub
popa
jb
add
out
cltd
push
sub
sbb
jnp
dec
pop
pop
ss
and
lds
jo
xor
gs
mov
in
arpl
cmp
add
out
inc
adc
and
push
mov
add
mov
cmp
pop
lock
push
jg
fwait
xor
das
pop
dec
cmp
mov
inc
xor
das
icebp
lea
xchg
sahf
outsl
iret
adc
in
loop
push
cmp
call
pop
mov
and
inc
scas
cltd
push
shrl
dec
outsl
sti
es
incl
add
lahf
xor
mov
sbb
mov
dec
sbb
mov
inc
add
sbb
or
pop
jo
xchg
mov
add
leave
xchg
mov
dec
clc
and
adc
out
sarb
gs
in
psubd
lods
mov
sbb
out
cmp
cmp
rcll
insb
fsubrl
jmp
fiadds
call
es
iret
outsl
js
push
stc
sub
out
fwait
stc
dec
mov
pusha
add
pushf
sbb
mov
mov
jmp
jbe
stos
add
ret
bound
out
jmp
pop
jge
jb
jp,pn
cmpsb
push
dec
ficoms
lcall
mov
mov
jl
mov
adc
rcll
pop
fbld
xchg
fisubrs
adc
pop
or
stos
cmp
xchg
fwait
inc
sub
inc
sbbl
stos
int
inc
inc
push
stc
dec
inc
cwtl
fs
add
lahf
clc
imul
outsb
fmull
mov
into
mov
sub
push
es
add
adc
ljmp
outsb
xor
stos
sbb
inc
test
mov
mov
iret
sub
mov
js
dec
repnz
sbb
xchg
sti
lcall
aad
sub
mov
jo
cltd
std
adc
push
loop
xchg
scas
dec
leave
mov
push
push
adc
sti
jmp
test
push
imul
pop
sti
jb
jp
mov
sarl
fs
mov
mov
scas
cli
iret
cwtl
jl
cmpsl
leave
sbb
pushf
mov
orb
frstor
mov
sub
ret
xchg
sahf
push
cmc
jae
jae
mov
loop
pop
push
mov
xlat
mov
ds
mov
or
jmp
lods
push
in
sahf
push
xor
push
movsb
lods
sub
es
jnp
sti
cli
imul
mov
aam
lcall
test
in
pusha
push
fwait
xor
repnz
sahf
sbbb
adc
cmp
xchg
xor
jbe
mov
dec
xchg
pop
cmc
outsl
jo
inc
pop
ss
in
test
test
fs
repnz
lods
out
lods
pop
push
fists
arpl
outsl
or
cmpsl
and
test
xor
in
and
xchg
jecxz
lcall
lret
xlat
jbe
ljmp
dec
repz
pop
inc
jg
movsl
sbb
lcall
pop
jne
jbe
out
loope
nop
sbb
push
xor
add
sti
sbb
por
add
popf
int3
stos
aam
jne
dec
out
pop
and
mov
or
into
je
mov
mov
or
xchg
in
je
push
adc
cwtl
cmpl
scas
popa
pop
movsl
rcl
das
jecxz
stc
push
pop
or
mov
mov
adc
cld
jmp
movsb
pop
and
mov
jb
ljmp
mov
pop
leave
push
aaa
mov
adc
add
and
in
jae
das
repnz
pushf
xchg
scas
addr16
or
dec
repz
sbb
mov
cli
jmp
das
mov
xor
lods
dec
mov
adc
das
addr16
test
fidivrl
add
mov
lcall
mov
push
lret
cli
and
xchg
mov
lret
pop
shrl
shrb
pop
jne
test
stos
adc
js
and
xchg
mov
loop
pop
mov
imul
inc
sti
loop
sahf
jmp
outsb
sub
push
pop
or
mov
mov
ffreep
sbb
mov
nop
rcrl
andb
push
dec
xor
testb
adc
mov
sahf
adc
inc
daa
sbb
sbb
enter
out
lahf
pop
or
pop
sub
loope
in
xor
testl
into
sbbb
out
loop
cmp
mov
test
sbb
mov
add
cmc
dec
adc
mov
jg
test
shl
push
jb
daa
lods
fimull
jnp
lods
cmp
andl
sub
ss
pop
rorl
fimuls
lods
lods
lret
lea
rcrl
fcomps
sub
nop
sarb
mov
sbbb
sbb
fisubrl
hlt
aad
bound
aam
xor
mov
adc
in
imul
test
imul
daa
pop
and
fcmovb
xchg
sub
dec
cmc
adc
xchg
push
dec
sbb
dec
jmp
and
xchg
lret
pop
push
push
out
push
push
cmp
lret
mov
in
mov
fstps
xor
xor
outsb
mov
jecxz
subl
push
pop
mov
sub
mov
loopne
mov
repnz
cli
jle
jmp
jbe
mov
jns
insb
fcmovnbe
shll
popa
push
mov
push
mov
cmp
add
sub
dec
bound
adc
idivb
imul
pop
out
lret
jecxz
xchg
push
hlt
insl
fs
ret
xor
xor
ss
fisubrl
sar
dec
cmp
leave
sub
bound
pop
sbb
pop
adc
aad
daa
arpl
mov
enter
sub
or
outsl
mov
icebp
ljmp
xor
xchg
xor
outsb
lock
inc
and
aaa
xchg
stos
enter
add
xor
enter
je
adc
sub
adc
inc
imul
or
jns
loope
fldl
dec
sub
insb
jle
adc
adc
stc
or
sub
pop
stc
jno
lcall
cmp
jl
add
vorpd
mull
add
pusha
mov
pop
test
jnp
push
cli
lods
call
cmp
frstor
pop
pop
xor
xchg
enter
xchg
xor
and
ss
int
cmp
lods
ss
sbb
xchg
lea
add
xor
dec
inc
adc
cmp
cltd
dec
mov
sbb
lods
es
mov
scas
sahf
popa
jmp
xor
and
jge
sbb
mov
or
les
or
add
aad
mov
xor
dec
das
ficompl
or
inc
jg
pinsrw
inc
roll
out
jnp
dec
push
mov
push
pop
lea
push
xchg
int
insb
ret
loopne
adc
mov
movsl
addb
mov
add
xchg
addr16
enter
jmp
and
push
jmp
xchg
cmpb
pop
mov
lds
outsl
imul
lret
jbe
cmpl
ljmp
iret
rorl
sbb
idivl
mov
cmpsb
add
inc
jl
mov
mov
xchg
out
ds
mov
aaa
rclb
and
movb
or
mov
mov
inc
and
xor
push
push
inc
mov
sub
pushf
dec
test
loopne
repnz
mov
pop
mov
push
out
lcall
xor
repz
lods
pop
fsubr
lods
xor
mov
pop
aad
rcrl
adc
or
mov
mov
in
pop
mov
dec
loop
into
ror
mov
lds
xchg
sub
dec
adc
and
bound
popf
into
jb
inc
xor
mov
pop
popf
subl
out
sub
mov
js
add
mov
push
pop
movsl
xchg
pop
mov
jbe
sbb
shll
je
subb
call
mov
add
subl
jge
cli
int
ffreep
jg
shrl
cmp
in
in
ret
fwait
sub
xlat
jle
push
push
mov
or
adc
add
push
dec
loopne
cvtps2pi
mov
xor
sub
lcall
scas
lods
mull
enter
nop
out
and
mov
lods
xchg
nop
jg
sarl
in
shlb
addr16
add
push
adc
sbb
sub
add
and
das
es
lds
dec
fs
out
xor
xchg
sbb
mov
jmp
out
jb
xchg
ljmp
pand
mov
lret
adc
jbe
ja
pop
fdivrp
cmp
push
icebp
leave
add
not
sub
ds
mov
sbb
mov
lods
cmp
ret
das
movsl
das
jnp
shll
mov
cmp
sub
cli
icebp
or
adc
or
mov
lahf
or
fidivrs
cmp
dec
dec
lea
ja
and
das
mov
bound
fcompl
xor
lods
dec
jns
pusha
fdivl
neg
into
fistps
sbb
stos
jns
cltd
mov
out
js
stos
sub
cmp
dec
push
push
dec
lret
adc
jno
test
jl
cmp
dec
in
and
mov
inc
jnp
stos
out
or
jmp
stos
dec
and
mov
jns
xlat
cmpl
imul
push
xor
pusha
adc
inc
lock
fimuls
std
lock
pop
xor
cwtl
push
adcl
fs
dec
sbb
or
push
dec
jge
dec
shlb
popa
xchg
xchg
inc
add
ret
cmpsb
scas
mov
setnp
adc
cmp
data16
cmp
filds
stos
shrb
sti
jns
mov
icebp
jg
insb
pusha
test
push
aaa
shll
sbb
das
incl
ljmp
ret
ds
push
outsb
sbb
add
xor
add
in
cmp
fdiv
insl
dec
pop
push
cmp
fcmovnbe
cmp
cmp
push
sub
dec
dec
mov
dec
dec
loop
lret
icebp
movsl
xor
add
dec
fcom
outsl
insb
pop
or
les
flds
mov
daa
test
cmp
cli
cmpsb
loopne
and
aaa
outsl
jmp
clc
fiaddl
in
cli
push
adc
cmp
loopne
jge
nop
mov
push
lea
gs
or
mov
in
mov
xchg
std
lea
or
and
xchg
cmp
lahf
add
jle
xor
sbb
lret
adc
out
nop
xor
and
shrb
jmp
stc
or
cwtl
or
push
xchg
add
cmp
jg
insb
dec
mov
repz
or
push
punpckhwd
sahf
stos
add
outsl
xchg
cmp
adc
and
xor
fildll
inc
push
clc
or
mov
mov
and
movsl
cltd
lock
or
inc
or
rolb
fsub
xor
sbb
add
inc
push
movsb
outsb
jb
sub
add
push
and
jo
notb
jbe
inc
dec
dec
or
cltd
imul
and
cmp
arpl
dec
in
mov
lret
shrb
jns
ljmp
pop
ja
pop
cmovns
sub
push
xchg
inc
loope
sar
mov
dec
or
aaa
loopne
inc
sbb
xorl
mov
data16
mov
into
loop
insl
idivb
push
xchg
scas
adc
sub
data16
repnz
scas
popa
xchg
xchg
mov
loop
pop
popl
pop
inc
in
or
test
xchg
lcall
pop
and
pop
test
ficomps
ret
mov
dec
push
adc
jmp
and
test
mov
push
sbb
add
adc
or
inc
xchg
movsb
or
jbe
test
inc
or
xor
jge
mov
pop
cmpsb
adc
pop
dec
testl
dec
inc
enter
setp
xor
jns
mov
cs
pop
stc
push
sarb
mov
cmp
dec
movsb
mov
mov
adc
xor
cmc
mov
sub
xor
sbb
ljmp
mov
dec
jmp
mov
and
scas
jmp
out
inc
sub
mov
fsub
sub
pop
mov
xchg
push
ss
lock
push
std
iret
in
bound
iret
xchg
cmp
dec
inc
bound
inc
cwtl
pusha
loop
jno
mov
xor
or
stos
sbb
adc
sbb
jl
push
jmp
jb
in
shlb
das
clc
xor
inc
xor
les
pop
icebp
fstps
fwait
std
adc
xchg
mov
es
call
cmp
faddl
add
mov
arpl
inc
mov
data16
mov
pusha
aam
pop
loope
imul
fsubrl
js
xor
pop
adc
cmp
or
mov
hlt
mov
push
adc
xor
push
pushf
push
push
int
int3
pop
dec
in
mov
jg
lcall
ret
jg
aaa
cmpb
or
addl
lahf
mov
mov
cmp
stos
aaa
push
popw
xor
pop
pop
ja
ss
jp
popf
jae
scas
aam
inc
cmp
dec
xor
sub
xchg
xor
dec
out
or
test
mov
cmp
rcr
mov
cmp
sbb
icebp
leave
call
shlb
nop
out
inc
pop
mov
je
fs
fcoms
pop
jno
mov
cltd
mov
mov
int3
aam
in
js
jnp
in
js
shrb
jnp
stos
lahf
jl
sahf
out
cwtl
jo
movsb
aad
sub
shlb
lds
xlat
test
loope
cmp
jbe
scas
pop
fldl
dec
divb
pop
and
push
jns
and
xorl
pusha
popf
xor
rclb
stos
ror
fbstp
xchg
adc
movsl
fs
inc
jecxz
cmp
jmp
pop
xchg
xlat
inc
mov
dec
in
mov
or
cmpsl
push
test
dec
xorl
loop
mov
inc
scas
inc
adc
or
push
ja
pusha
addr16
ljmp
test
mov
out
pop
mov
aam
mov
dec
dec
push
aaa
loop
sub
repz
aas
gs
sbb
out
rol
addr16
sbb
add
cmp
mov
mov
movsb
scas
je
cltd
bound
cmp
or
pop
rcl
sbb
ja
out
sub
movsl
mov
neg
sub
xor
adc
imulb
sub
mov
loopne
popa
mov
jge
xor
jp
push
pop
jl
cmp
lds
xor
xor
jecxz
nop
inc
xchg
push
mov
popa
push
jp
loopne
adc
dec
or
push
adc
lods
idiv
popf
les
cmp
ret
push
mov
pop
push
mov
pop
inc
loopne
or
xchg
adc
aad
sub
sub
jg
in
sub
cli
push
arpl
mov
idivl
fists
dec
loop
jecxz
mov
stc
sar
jno
adc
adc
fsubrs
les
sahf
xor
xchg
loop
sbb
xchg
clc
bound
and
mov
pop
inc
jne
or
mov
adc
add
fnsave
fnstcw
sbb
lret
sti
pop
or
mov
push
mov
out
inc
add
push
dec
mov
adc
mov
adc
cmp
add
lods
mov
lret
cwtl
lods
call
dec
lcall
adc
repnz
insl
dec
pop
je
shr
sahf
jne
mov
mov
dec
jg
scas
mov
cmp
fnstcw
xor
mov
jl
sarb
ljmp
push
shl
lret
sbb
lods
cld
ret
int
mov
inc
mov
adc
addr16
icebp
pmaxub
or
in
into
cmc
iret
mov
scas
xchg
cmp
push
and
sub
popf
and
movsb
or
psubd
int
es
pop
push
mov
dec
push
push
xchg
adc
xchg
push
pop
pop
and
jb
sarb
lds
fimuls
mov
les
aam
cmp
aaa
or
xchg
mov
jnp
mov
dec
dec
mov
scas
inc
sahf
lock
and
xchg
push
in
gs
stos
ljmp
lcall
push
imul
mov
fnstcw
pop
push
ds
dec
pop
sti
mov
adc
jbe
cmp
mov
cmp
jmp
icebp
dec
int3
mov
aas
in
rcrl
mov
icebp
add
aad
pop
mov
or
mov
int
push
fst
fstpl
int3
add
push
cmp
jo
mov
inc
sub
cmc
fs
jb
sub
lahf
push
add
mov
mov
mov
cmp
shrd
out
push
jmp
mov
sub
negb
jns
out
mov
sahf
and
pushf
mov
enter
adc
daa
aaa
mov
les
push
adc
stos
in
js
bound
sahf
rcll
aaa
sbb
and
in
or
rolb
cmp
pop
das
jle
mov
popa
in
pop
incl
sbb
dec
jae
lahf
ds
pop
sbb
mov
xor
pusha
sbb
mov
adc
cmp
push
lret
mov
push
xchg
addr16
inc
push
push
pushf
popa
int
lret
xchg
xchg
mov
mov
push
jbe
cmp
push
pop
test
cwtl
pushf
fneni(8087
ja
popa
and
mov
aaa
sbb
or
sbb
into
hlt
sub
cmpsl
jle
xchg
mov
arpl
dec
out
mov
jb
jne
sbbl
shl
sahf
inc
push
test
dec
test
jge
ficoml
roll
cmp
xchg
ret
popa
enter
bound
pop
mov
pop
lret
sub
lock
mov
sarb
lahf
lods
mov
sub
shlb
gs
aam
adc
sub
xlat
pop
les
mov
outsb
dec
jmp
test
push
push
pop
lods
mov
movb
test
dec
dec
adc
xlat
jmp
stos
or
push
sahf
pop
sti
xchg
aad
leave
jb
dec
pop
cmp
jae
jp
and
stos
cwtl
inc
icebp
fmul
and
fabs
mov
mov
in
mov
ss
clc
xlat
push
dec
sub
div
jle
std
mov
and
dec
loope
pop
popa
and
pop
jo
jae
adcb
icebp
insl
test
mov
dec
in
pop
fwait
js
mov
fsubrs
in
pop
and
adc
add
scas
repz
jae
pop
out
daa
or
pop
std
mov
jmp
xchg
mov
movsl
in
sub
cmp
flds
mov
cmp
sbbb
js
pop
outsb
ret
fistps
andl
lds
lods
push
push
or
jmp
mov
or
outsb
push
inc
push
outsl
js
cmp
out
test
out
clc
mov
cmp
pop
adc
push
add
push
dec
repnz
mov
add
inc
nop
decl
faddl
push
or
sarl
fimuls
call
push
mov
add
xchg
cld
xor
imul
xchg
xchg
lret
push
push
jns
pop
in
clc
std
mov
fs
lods
jge
or
cmpsb
pop
adc
cmp
nop
in
pop
pop
test
sbbl
pusha
popa
push
std
subb
mov
sbb
pop
push
inc
leave
add
cmp
scas
call
sub
incl
es
int3
jp
jo
mov
dec
inc
ficoml
int
cwtl
insb
jns
mov
mov
pop
mov
fbld
or
sbb
mov
dec
ds
lods
lret
xchg
out
add
mov
cs
insb
roll
out
scas
stos
push
push
xchg
cwtl
push
es
ds
popa
mov
mov
stos
mov
rcll
das
mov
frstor
push
dec
xchg
mov
in
ret
mov
adc
orl
pop
push
hlt
stos
dec
insb
lods
pushf
test
adc
dec
sub
fadds
cmp
and
add
add
sub
pusha
dec
movsb
mov
and
rolb
sub
add
ja
enter
repnz
xchg
mov
mov
movsl
mov
dec
test
adcb
or
xchg
hlt
out
aaa
or
xchg
aaa
jnp
bound
in
sarl
dec
lret
cwtl
pusha
arpl
call
in
daa
push
xlat
in
inc
aam
dec
add
and
pop
push
sbb
out
arpl
push
add
mov
sbb
popf
movsl
xchg
add
shrb
mov
lock
cld
pushl
jbe
and
inc
inc
add
or
push
mov
lds
cmc
dec
xchg
sbb
rorl
enter
sti
sub
push
loope
imul
cmp
fdivrl
inc
push
lods
dec
jne
mov
jp
jecxz
sbb
repnz
mov
adc
insb
jp
push
mov
int3
sarl
sub
lods
lcall
aam
mov
mov
inc
mov
ja
int
mov
arpl
cli
iret
inc
ret
mov
daa
sub
arpl
mov
and
or
in
loop
cs
rclb
adcb
mov
pop
push
clc
das
stc
or
push
push
cmp
adc
leave
dec
push
sub
js
sbb
sbb
cld
negb
xchg
loope
leave
pop
inc
xchg
push
jo
out
into
ljmp
push
mov
mov
and
jl
cmpl
lock
mov
cwtl
pop
jmp
mov
in
add
or
lcall
pop
mov
faddl
inc
inc
ja
ret
shlb
pop
push
popl
in
adc
mov
mov
fdivl
sub
adc
shrl
mov
mov
mov
and
test
add
aas
jle
fimuls
inc
and
mov
fstl
add
imul
xchg
movsl
inc
hlt
shr
jmp
fst
xchg
std
loope
inc
pop
sbb
filds
shrl
mull
loopne
pop
xchg
inc
insb
jl
ret
inc
sbb
pop
xor
push
inc
sbb
jl
jmp
mov
test
add
xchg
aas
inc
inc
dec
or
imul
mov
mov
out
pop
jecxz
enter
es
or
icebp
jl
out
adcl
orl
fcmovb
cmpsl
push
sahf
and
aaa
pop
xor
mov
test
movsl
add
rcrb
je
pop
mov
call
imul
and
in
je
or
mov
lds
and
xor
xor
mov
loope
inc
push
das
mov
fdivs
fldcw
aad
roll
int
cli
mov
pop
and
sbb
jo
lea
push
dec
movsb
jnp
push
adc
adc
dec
negb
xchg
test
adc
in
jbe
testl
shrb
ja
fidivl
adc
sahf
pop
out
cmp
jbe
adcl
cltd
sar
pop
jae
imull
int
ret
js
jns
aad
ja
shr
loope
and
faddl
dec
fsts
adc
loopne
push
jp
rcl
in
das
dec
and
cmpsl
cwtl
out
pop
sub
mov
jl
and
and
jne
fcompp
sub
mov
addl
push
pop
scas
pop
pop
add
inc
ss
fwait
lods
xchg
mull
movl
push
xchg
adc
cmp
inc
out
sub
in
cmp
ds
mov
sahf
pop
cs
xchg
and
jg
mov
mov
rcrb
cmp
xor
and
or
fwait
and
mov
scas
sbb
js
cld
mov
out
fistpl
cmp
pop
mov
enter
mov
les
add
lret
icebp
sbb
sbb
sti
sbb
sbb
sbb
loope
xchg
pop
xorb
bound
pop
cmp
sub
pushf
frstor
push
sub
mov
mov
hlt
adc
or
cmp
jns
add
ja
movsl
sub
in
ja
lahf
fcoml
arpl
or
mov
xchg
cmp
pop
or
lret
xchg
es
sbb
jle
mov
hlt
les
lods
imulb
lds
mov
aad
fldt
cmp
in
jne
leave
xor
and
cs
movsb
loope
out
xor
dec
ljmp
movsl
dec
call
mov
sbb
fstpt
pusha
inc
add
lods
shl
jb
sub
aam
jnp
jmp
shlb
xchg
scas
loop
pop
rcl
and
out
push
imul
and
mov
addl
mov
inc
scas
test
adc
mov
xor
xchg
enter
xchg
stc
fwait
ret
xor
bound
xchg
insl
cmp
sbb
cld
dec
dec
test
pop
addr16
mov
into
pop
pop
mov
xor
pop
loope
jg
les
mov
repz
xlat
cmp
sbb
mov
inc
adc
cmp
mov
mov
push
adcb
jo
dec
roll
sbb
or
out
mov
mov
push
mov
dec
ja
jg
cmp
jmp
les
sub
dec
sub
inc
stc
xor
sti
jp
dec
std
out
cmc
jae
js
addl
lahf
movsl
lods
lods
cmp
leave
sbb
xchg
mov
mov
call
stos
inc
pushl
in
sbb
push
jns
sub
jb
pop
scas
inc
repnz
lea
ss
repnz
mov
pop
repnz
mov
les
neg
lea
sarb
pop
cmpsl
das
pop
pop
xchg
subl
inc
pop
sbb
jnp
pop
dec
mov
inc
test
shll
insl
enter
orb
ja
fwait
pop
cmpsb
iret
arpl
cltd
or
jmp
call
pusha
jle
add
mov
adc
js
mov
es
jmp
lods
jg
sbb
mov
ljmp
fwait
imul
add
or
add
bound
bound
in
mov
adc
loopne
and
pushf
in
lods
mov
push
repz
sbb
out
movb
popf
cld
call
jo
ljmp
jge
add
pop
cltd
call
xchg
add
rcrl
inc
pop
std
sub
lcall
mov
xchg
push
in
xchg
dec
adc
aas
push
data16
adc
lret
push
cmp
mov
lods
jmp
jns
mov
adc
mov
in
test
xchg
jo
pusha
push
lret
jb
inc
push
mov
sbb
inc
or
rcrl
movd
sub
popa
pop
rcrb
jg
xchg
dec
mov
xor
push
ds
adc
inc
hlt
lock
cmp
pop
inc
arpl
pushf
ss
mov
xor
pop
cmpb
mov
mov
mov
je
pop
js
das
mov
xor
jge
jecxz
push
ret
sti
es
movsl
add
cld
inc
cwtl
jae
into
xor
and
mov
hlt
dec
and
inc
in
ds
push
cs
and
loopne
call
xchg
test
movsb
fwait
inc
mov
sub
cs
jmp
in
jle
mov
cmpsb
add
int3
adc
xor
fnstcw
call
xchg
xor
jnp
pop
pop
stos
xor
shlb
mov
lea
lock
mov
lcall
xor
xor
xor
stc
mov
sbb
cmp
lcall
imul
xchg
cmp
bound
decb
jg
jb
rolb
daa
insl
pop
sub
cld
lds
push
lods
in
cmp
push
add
mov
roll
cmpsl
insb
cmp
mov
jmp
test
pop
repnz
popa
cmpsb
mov
sbb
lcall
add
movsb
push
mov
pop
loopne
movsl
std
imul
out
negb
outsl
fistpll
cmp
push
jg
fwait
in
pop
repz
insb
push
mov
into
or
dec
or
jnp
or
cmc
sti
sub
mov
add
out
adc
mov
xchg
fdivrp
int
movsb
xor
in
dec
mov
enter
in
mov
xor
hlt
fistpl
jecxz
mov
pushf
add
xchg
xchg
cmp
jno
add
push
mov
popa
pop
adc
fisttps
and
xor
add
cs
xorb
fsubrs
inc
dec
jne
mov
or
gs
faddl
hlt
push
xor
dec
and
call
jne
icebp
dec
push
lods
sbb
push
insb
test
sti
mov
sbb
xchg
fcomi
xchg
movsl
mov
repnz
in
daa
push
push
bound
adc
cmp
movsb
leave
leave
sar
jge
sbb
jno
jns
push
sbb
xchg
add
lcall
ret
jno
xlat
push
ljmp
push
aas
stc
int
xchg
pop
addr16
mov
arpl
jnp
xlat
scas
gs
mov
test
mov
dec
pop
ss
jb
sbb
das
jo
jle
pusha
insb
int3
and
and
pop
ja
adcb
xchg
or
push
xchg
sbb
sbb
push
andl
xchg
mov
cmp
into
mov
je
jno
fdivr
xchg
xchg
cmc
loop
inc
xorb
cli
or
xor
daa
mov
vcvtdq2pd
insb
sbb
jecxz
mov
jle
adc
sub
xchg
xchg
out
dec
dec
std
push
mov
std
movsb
or
call
in
adc
fisubl
inc
dec
cmp
lock
fwait
lds
call
nop
adc
mov
test
mov
mov
adc
out
lahf
jle
ss
out
adcl
insl
ja
pop
clc
movsl
inc
lods
repnz
mov
inc
aas
fwait
mov
xchg
inc
or
pop
push
mov
push
adc
fucomi
and
lods
sbbl
enter
orb
fiadds
mov
lock
mov
mov
sbb
lret
mov
popa
or
mov
xchg
cmp
mov
cs
mov
sbb
push
ss
nop
fucomi
out
jb
shll
mov
dec
inc
xorps
rcrb
hlt
adc
clc
nop
rolb
in
mov
sarb
pop
lahf
das
mov
cmpl
in
sbb
dec
stos
pop
sub
or
add
repz
sub
leave
lods
punpcklbw
sub
lret
xchg
mov
enter
push
push
lock
imul
rcrl
dec
imul
hlt
and
or
push
stc
shll
scas
ljmp
mov
movsl
pop
lock
xor
sbb
fistpl
jmp
push
lcall
jge
jmp
xlat
inc
mov
fs
pop
push
dec
gs
fcoms
dec
stc
pop
mov
sbb
ret
std
pushw
stos
movsl
adc
inc
xchg
call
mov
enter
mov
ret
xchg
mov
cmp
cs
dec
into
iret
fisubs
sub
cmc
mov
cltd
cmp
inc
js
iret
lods
leave
repz
adcl
sub
jecxz
cli
pushf
in
stos
cli
and
pop
imul
divl
fidivs
lcall
cmpsb
jecxz
lds
add
xchg
mov
dec
sbb
xchg
adc
dec
pop
daa
add
nop
imul
adc
insb
icebp
ja
stos
xchg
adc
mov
xlat
out
lods
add
fwait
mov
mov
fldl
xor
add
jnp,pn
enter
negw
cmp
andb
outsl
mov
lds
cld
cmpsb
les
icebp
xchg
mov
sub
xchg
fisttps
rcrb
les
jno
dec
test
mov
xchg
adc
xorb
stos
mov
sub
sub
insb
test
lret
sub
pop
sub
imul
sbb
sbb
mov
lds
adc
cmp
add
jge
cmp
pushf
push
sub
dec
enter
mov
push
lds
lcall
dec
cmp
jbe
pop
sub
sbb
add
dec
out
push
fstp
and
adc
push
addr16
call
mov
das
jns
or
or
lret
sbb
imul
imulb
xchg
mov
inc
mov
cmp
pop
adc
xchg
ret
sar
xlat
mov
lahf
repnz
ja
mov
or
cmpl
shlb
insl
cmp
sub
cmpl
adc
data16
loope
ficomps
add
out
lret
push
hlt
stos
dec
loop
test
pop
cmp
lahf
leave
jge
jae
mov
sbb
push
push
push
push
stos
xchg
jp
sbb
push
push
arpl
stc
push
cmp
mov
dec
testb
sub
xor
mov
cmp
sub
dec
jmp
adc
mov
out
xchg
loope
mov
rcll
push
mov
mov
lcall
add
jecxz
inc
cmp
or
pop
insl
hlt
xchg
and
adcb
cmpsb
cmc
mov
clc
xchg
loopne
jg
sub
clc
adc
cmpsb
inc
lret
daa
fbstp
leave
and
enter
jo
hlt
lret
inc
or
lea
xchg
xor
jge
outsl
dec
sub
inc
xchg
lcall
cmp
icebp
fcomps
test
call
or
mov
jge
stc
cmp
stos
pop
movsl
xchg
int3
mov
and
xchg
repnz
outsb
jno
pop
fstpl
stos
push
pushf
nop
loop
fcomps
lea
push
lods
mov
pusha
ficoml
jp
negl
mov
movsb
mov
sbb
xchg
bound
inc
cld
xchg
push
push
inc
inc
mov
mov
add
das
and
pop
jmp
sbb
add
out
ljmp
pop
jnp
int3
pop
pop
ljmp
test
fists
mov
push
sarb
fwait
subl
or
sub
fiaddl
decb
adc
stc
clc
xchg
loope
rcr
test
dec
inc
pusha
cmp
addl
add
sub
xor
popa
inc
pushf
aas
mov
lds
mov
jg
fimull
dec
in
add
jbe
push
shll
in
pusha
mov
leave
cwtl
pop
push
repz
nop
addr16
add
xorl
cli
test
sub
enter
cmp
movsb
cld
fnsave
jne
imul
loopne
fistl
pop
test
or
jl
outsl
jnp
outsb
int3
inc
cmc
push
or
sub
cmp
adc
test
dec
inc
addr16
sahf
mov
pop
stc
out
clc
in
pop
cli
gs
es
sub
insl
in
in
push
ljmp
in
and
lahf
sti
movsb
pop
inc
int3
fnstsw
ret
dec
aas
lods
mov
fisubl
pushf
cmp
push
fisttpll
int
sti
in
pop
sbb
push
xchg
mov
aas
rcl
mov
add
aas
out
xor
mov
dec
addr16
ljmp
mov
push
pop
cmp
std
rorb
add
xor
dec
leave
fdivl
mov
push
fwait
push
and
fnsave
and
cmp
hlt
test
cmp
mov
pop
mov
lahf
fmuls
test
ficoml
nop
cmp
es
mov
cmp
jo
scas
in
cld
dec
aam
stc
pop
cmpsb
icebp
mov
lea
and
pop
or
dec
sub
sbb
ss
pop
lahf
rcrb
push
jne
mov
ja
mov
adc
outsb
sbb
repz
stos
repz
adc
and
jnp
dec
fisttps
test
mov
xor
and
and
lea
es
daa
int
or
outsl
push
adc
push
imul
add
cmpsl
lcall
dec
lcall
xchg
pop
push
rcrb
movsb
loopew
xchg
push
jne
mov
jno
and
adc
in
mov
or
enter
xlat
icebp
mov
sti
push
repnz
adc
insl
mov
and
cld
arpl
dec
push
lods
movsb
daa
xchg
popa
xchg
mov
sub
push
xor
gs
dec
cmp
xchg
imul
shll
add
jl
shrb
test
mov
adc
mov
cmp
fnstsw
sub
add
pop
dec
xorl
mov
dec
mov
sbb
push
mov
mov
rolb
xor
iret
popl
push
lret
xor
rcrl
faddl
xchg
jae
jl
add
pop
ja
mov
cmp
inc
icebp
shlb
or
lcall
mov
clc
call
imulb
dec
repz
outsl
int3
xor
fisubs
xchg
nop
es
test
pop
or
lcall
push
loope
loop
shll
loop
xor
int
ja
movsl
fwait
push
or
notl
mov
ja
hlt
test
mov
iret
icebp
loopne
std
xchg
push
mov
jecxz
dec
nop
cmp
sbb
mov
sti
clc
fnstsw
xor
mov
adc
cmp
ret
into
in
xchg
pop
jmp
xchg
dec
fcoml
jl
stos
sub
dec
or
lock
in
imul
pusha
mov
pop
cmp
cmp
stos
add
sub
cmp
fildl
xlat
rorl
push
xchg
ja
mov
inc
push
lock
and
pop
dec
dec
loopne
push
push
and
mov
filds
jmp
scas
jle
popa
inc
dec
xor
push
clc
push
es
orl
xchg
cs
pop
outsb
out
and
cltd
and
imul
xor
cmpsl
mov
adc
addr16
fimuls
hlt
mov
stc
icebp
dec
insb
aam
xor
xchg
lret
jge
test
mov
int3
mov
addb
inc
dec
adc
sub
ret
mov
ja
arpl
cmpsl
pop
and
sbb
out
push
or
mov
fwait
jg
je
dec
repz
mov
fdivs
in
lds
js
dec
mov
lods
xchg
jnp
jge
cmp
lods
add
add
out
outsl
repnz
mov
inc
fnstsw
xchg
sti
cmp
sub
push
inc
sub
pop
xchg
leave
add
in
stos
xchg
or
hlt
out
sbb
and
sbb
push
fldenv
movsl
mov
ret
andl
cmp
xor
and
jp
cmp
mov
shll
pop
imul
test
lods
cli
sbb
jno
int
mov
mov
jnp
lock
mov
and
mov
mov
fnstsw
sti
outsb
or
movsb
lret
mov
movsl
and
ljmp
in
rorl
jge
cmp
or
mov
dec
push
ret
aam
pushf
inc
xchg
jmp
sbb
dec
lds
adcl
in
mov
test
popf
test
lcall
mov
jae
mov
sbb
out
jno
mov
popa
imul
test
test
leave
and
jle
mov
adc
push
lock
pop
int3
inc
andl
aad
xchg
sub
lret
mov
mov
adc
and
pop
mov
jb
sti
mov
xchg
movl
mov
add
mov
push
lods
or
in
mov
push
into
push
ret
mov
xchg
imulb
pop
in
cs
lahf
pop
adc
jle
out
and
in
add
and
adc
mov
ffree
push
add
popf
loop
repz
jne
jmp
insb
out
xor
and
mov
pop
jo
dec
lret
mov
hlt
ret
in
mov
daa
mov
cs
xchg
repnz
outsb
jae
sarl
cmpsb
jnp
mov
data16
test
push
jp
insl
push
push
es
xor
push
icebp
mov
int3
rorb
mov
mov
and
test
out
gs
fdivl
mov
mov
sahf
out
sbb
iret
hlt
stc
stc
jecxz
xchg
enter
data16
xchg
fimuls
or
push
pop
jmp
aas
jl
and
jg
mov
mov
js
inc
shrb
and
inc
lcall
pop
aam
cltd
addr16
xor
js
jno
xchg
repz
cs
cmp
sub
popf
mov
sbb
xchg
fnsave
sbb
inc
adc
scas
lret
mul
pusha
mov
xor
or
cmp
cmp
scas
xchg
pop
xor
inc
popa
fsubrl
mov
mov
outsl
sahf
outsl
rolb
mov
push
jle
mov
subb
pop
dec
testl
xchg
dec
or
movsl
jge
mov
rcl
fidivl
sbb
into
cmpsl
in
lock
and
sbb
mov
push
and
mov
cmpsl
mov
push
cmpsb
cli
mov
sbb
mov
das
std
jp
xchg
mov
popf
push
lods
add
mov
mov
xor
fidivrs
add
bound
adc
pushf
mov
inc
xor
xchg
mov
ss
jne
and
enter
pop
jmp
sti
and
mov
fwait
in
mov
dec
pop
xor
pushf
xchg
jmp
fcoml
jae
jecxz
into
jne
and
or
fdivrp
push
cwtl
push
je
mov
xchg
and
ss
xchg
push
fsubrs
rcrl
lret
and
ss
cmp
and
inc
sub
rcr
cmp
inc
or
pop
pop
jp
mov
icebp
loope
mov
jne
or
aas
in
mov
sarb
inc
andb
sbb
pusha
lret
lods
and
mov
lds
mov
adc
aaa
stc
dec
or
or
icebp
mov
rol
mov
lods
outsb
pop
cmpsl
pause
mov
sub
sub
and
cmpsl
xor
mov
sbb
xlat
pusha
dec
popf
in
cmp
js
xor
rolb
adc
nop
push
mov
test
aas
lods
std
add
dec
ficomps
xor
outsb
mov
js
push
pop
push
jne
mov
xchg
ret
scas
popf
push
mov
nop
and
fists
cli
cwtl
lock
push
outsl
push
repz
movsb
add
pop
in
lock
fs
or
mov
out
push
jge
les
mov
mov
adc
ss
daa
and
cmp
mov
adc
pop
lods
sar
add
cmp
or
aad
inc
push
xchg
outsb
dec
mov
test
mov
cmc
ja
and
adc
lahf
push
insb
xor
iret
or
inc
mov
cli
mov
je
mov
mov
jns
repz
in
sahf
dec
jnp
mov
sbb
mov
mov
dec
and
pop
jge
add
pmullw
push
pop
push
sbb
jle
mov
pop
mov
cmpsb
pushf
ja
fisttpl
inc
jno
mov
xlat
cmc
and
loop
xlat
scas
aas
ror
loop
inc
mov
mov
ret
leave
aam
or
pop
xor
mov
adc
cmp
outsl
leave
fwait
testb
inc
out
rol
sbb
jbe
out
xor
std
jns
sub
in
xlat
loop
mov
mov
cmp
pop
das
mov
cmp
out
mov
inc
xchg
add
pusha
int
pop
rcl
into
out
xchg
dec
out
faddl
std
iret
push
lods
adc
ds
repz
xor
sahf
push
in
fadds
mov
jl
nop
movsb
int3
cmpsl
test
popf
xchg
xchg
mov
adc
sbb
je
rclb
int
test
bnd
fnstcw
loope
push
fbstp
push
data16
fucomip
xchg
push
clc
stc
test
jae
sbb
inc
xor
dec
mov
ret
and
rcrl
pop
xor
repz
cs
mov
out
sub
adcl
imul
in
pop
ret
fcompl
scas
sbb
xchg
fisttpll
mov
js
add
jl
jb,pt
xlat
cmp
outsb
aaa
push
push
test
inc
ljmp
jge
rcr
pop
ffree
div
push
pop
or
movl
jno
aam
popa
xor
or
gs
jae
xlat
notl
cmpb
imul
loop
jmp
imul
loope
mov
out
adc
out
test
adc
cmp
sbbb
out
jne
ficoml
popa
mov
push
dec
push
pop
scas
stos
fidivrl
dec
mov
push
nop
iret
jl
and
inc
les
loope
fsubl
stos
jp
xchg
push
xlat
bound
cli
mov
inc
dec
cld
push
cmp
loopne
cltd
xchg
cmp
lret
xchg
inc
iret
jno
stos
pop
xor
add
mov
movsl
out
inc
fs
mov
sarb
fwait
mov
sbb
fmull
mov
ja
cmc
lock
cli
test
out
dec
jbe
cmp
cli
insb
call
mov
xor
lret
xor
aas
mov
and
inc
scas
inc
pusha
jne
dec
inc
xchg
and
or
cmp
test
xor
mov
les
gs
sbb
in
pop
mov
leave
orl
inc
mov
jns
in
and
outsl
mov
into
addl
hlt
sbb
lods
fnstcw
ret
es
cmpsb
bound
iret
inc
jne
loopne
sbb
aas
xchg
lods
lret
hlt
cwtl
push
mov
jle
insl
sarb
sti
add
sub
cltd
mov
add
test
push
add
cmp
cmp
sahf
sbb
push
aaa
pop
fidivs
ljmp
sub
xorl
sbb
sahf
mov
fstpt
addr16
cmp
inc
test
das
cmp
adc
dec
ret
call
sub
push
mov
frstor
clc
sahf
mov
shlb
lahf
cmp
insb
aad
clc
push
test
mov
gs
xchg
bound
mov
stc
cs
adc
fcmovb
repz
or
test
ljmp
mov
mov
in
sbb
es
dec
push
test
xchg
dec
push
fwait
jmp
add
cmpl
in
and
cmp
int
rep
jns
xchg
data16
and
mov
dec
jle
leave
dec
ljmp
and
cmp
cmp
inc
push
xor
popf
cmpsb
and
pop
ds
in
and
arpl
add
jo
popa
add
stc
leave
mov
dec
sub
cmp
enter
stc
test
pop
or
mov
lds
sbb
inc
aad
repz
inc
cmp
jge
mov
mov
jp
mov
xor
test
push
out
push
cld
pop
aas
jp
popl
cli
dec
and
jno
pop
xchg
push
loopne
mov
rclb
stos
or
std
ja
mov
dec
sub
jae
stos
jnp
orl
sbb
pop
sub
cltd
mov
sti
pushf
or
or
stc
addr16
loop
adc
and
imul
loop
cmp
add
push
fwait
cmp
jge
dec
repnz
pop
movsl
mov
mov
mov
mov
loopne
popf
out
add
xchg
fildll
pusha
mov
mov
xchg
cmc
or
out
dec
inc
fcompl
fnsave
mov
or
lahf
aaa
and
leave
icebp
xchg
lods
imul
ja
inc
dec
ret
sti
and
jecxz
dec
aam
push
cmp
mull
mov
xchg
or
imulb
or
inc
mov
mov
pop
adc
inc
mov
push
push
nop
jg
inc
cmp
loop
addr16
cmpsb
xor
movsb
pop
mov
int
mov
nop
xor
js
dec
adc
into
into
jb
add
ret
aad
pop
sbb
jno
lds
push
pop
pop
jecxz
sbb
cmc
aaa
arpl
mov
push
jmp
mov
fisubrs
shl
stos
mov
mov
cmpsb
shlb
enter
push
popa
mov
jb
xchg
adc
jmp
or
cmp
dec
js
jns
pop
dec
xor
std
sub
rcll
and
push
das
push
jge
movsl
lret
loope
andl
jle
cmpl
insl
pop
sub
cmpsw
push
xor
icebp
lea
xchg
das
scas
nop
dec
pop
add
mov
sar
aas
push
andb
push
out
out
adc
cli
jnp
dec
insl
rolb
loop
cmp
dec
lods
pop
pop
imulb
aam
and
mov
push
jno
leave
mov
lcall
testl
mov
daa
jmp
aaa
dec
dec
ja
inc
push
scas
inc
mov
shrl
jae
push
pop
add
stos
daa
inc
aad
ljmp
add
fisttpll
cli
mov
movsb
jae
dec
adc
sub
cmp
mov
fstpl
xchg
inc
cmp
test
fstl
lods
shll
pop
inc
jmp
add
mov
js
lock
mov
sub
jecxz
add
test
push
or
ljmp
inc
inc
adcb
movsb
mov
or
lret
mov
cmp
lods
cmp
dec
jbe
xchg
pop
ret
or
into
cltd
jns
xor
fnstsw
fisttps
frstor
pop
ljmp
pop
jne
outsb
lods
cltd
and
mov
mov
je
sbb
xchg
fisubrs
movsb
aas
ljmp
push
lds
aaa
std
sub
jecxz
iret
in
fbstp
insb
leave
inc
mov
loope
or
ds
aad
inc
and
sub
jae
jp
sub
xor
jmp
pusha
in
scas
add
fldl2e
dec
cld
dec
popf
mov
mov
xor
sbb
daa
sbb
lahf
push
dec
add
xor
les
stos
fsubs
dec
data16
int3
out
andl
xor
pop
pusha
cmp
cmp
nop
sbb
push
and
and
imul
or
aad
mov
and
fists
out
dec
xchg
cmpsl
in
xchg
xor
sub
and
popa
mov
and
pop
pop
dec
lods
fldt
aad
adc
jne
hlt
inc
mov
icebp
cmp
sub
cwtl
out
xor
andb
pop
cmp
pop
cltd
mov
pop
push
xlat
lods
insl
push
mov
repnz
roll
outsb
pop
lret
cmp
negl
cli
fidivs
lods
or
pop
not
fcmovnu
push
ss
aaa
cs
lret
sti
loop
mov
jo
cmc
mov
mov
cwtl
fdivs
das
pop
addr16
inc
mov
mov
sbb
bound
mov
daa
lock
add
fbstp
dec
jl
cld
push
out
ljmp
dec
mov
jae
nop
push
mov
sbb
mov
cli
rcll
mov
pop
dec
mov
mov
and
aam
or
inc
xor
add
and
shr
sbb
outsb
pop
add
lret
insl
dec
cmpsb
mov
mov
iret
divb
sub
adc
aaa
xchg
xor
cwtl
jnp
mov
shll
add
cld
inc
cwtl
mov
or
cmp
and
cmpsl
test
add
in
mov
mov
movsb
jge
into
imul
and
pop
int
lock
gs
mov
sahf
test
xchg
add
and
imul
int3
notl
pop
mov
lock
push
jg
dec
jg
testb
jnp
scas
lret
mov
adc
adc
shl
in
cmp
scas
mov
jmp
push
mulb
jl
sub
sbb
mov
sbb
mov
mov
into
insl
sbb
lods
shlb
into
std
add
nop
idivb
xchg
cmp
or
aam
sub
mov
aas
pop
call
pop
dec
lock
jno
shll
xchg
push
fdiv
insb
lcall
data16
pop
jl
cmc
adc
lock
cmp
jmp
lcall
xchg
pop
dec
hlt
and
sbb
push
inc
dec
inc
push
jbe
mov
mov
lods
mov
cmp
addr16
stc
xchg
add
xchg
jmp
dec
sbb
jmp
inc
mov
loopne
sahf
or
adc
cli
or
mov
dec
pop
ljmp
repnz
pop
sti
repnz
bound
cmp
repnz
je
shrl
rcrb
cmp
sbb
call
lahf
fidivl
lahf
mov
test
mov
mov
mov
cld
out
divb
inc
sub
jb
aas
out
jo
nop
fnstsw
and
mov
mov
jmp
shrl
fsubrs
sbb
pop
mov
cld
lret
inc
or
rcr
cs
dec
inc
ret
shlb
sbb
movsb
lea
add
xchg
dec
or
aam
pop
adc
outsb
enter
mov
adc
sarl
mov
idiv
fdivl
sbb
hlt
jo
jb
shrb
mov
int3
dec
or
test
stos
xor
mov
out
adc
add
pop
dec
aam
stos
popa
and
xor
test
inc
jne
mov
or
jp
lock
iret
cmp
dec
add
mov
push
push
inc
push
pusha
inc
jl
in
ss
sub
jnp
mov
cli
add
in
fs
jbe
ljmp
loope
sub
mov
in
call
imul
mov
fiaddl
jl
dec
xchg
hlt
adc
mov
into
lods
cmp
jecxz
das
mov
push
dec
sti
outsl
mov
out
xor
fbstp
xor
loop
repnz
push
test
push
jg
and
or
cmp
sub
add
jae
push
in
test
or
mov
subb
push
or
shlb
cmpsb
mov
leave
loope
stc
cmpsb
and
sbb
inc
adc
inc
jno
loopne
push
pop
and
push
sub
outsl
jle
adc
mov
outsb
clc
xchg
mov
push
adc
inc
repnz
add
and
cwtl
add
xchg
and
fstl
ficompl
pop
jo
pop
cwtl
xchg
jne
push
push
dec
aas
sti
cli
movsl
dec
dec
lret
xor
and
ret
push
push
test
xor
push
mov
ret
jo
lcall
sub
lahf
daa
inc
add
shlb
in
orl
sub
test
push
mov
int3
pop
and
pop
jmp
pop
sbb
mov
aad
jae
sbb
loopne
and
leave
sbb
xchg
mov
bound
push
rclb
cli
inc
outsb
fwait
mov
cwtd
add
es
mov
and
addr16
jmp
add
decl
movsb
dec
ret
push
add
iret
ljmp
sub
neg
cmp
dec
dec
add
pop
imul
push
leave
mov
fsts
shl
inc
stc
xor
mov
in
jge
xchg
dec
xchg
shll
adc
fldcw
test
pop
push
inc
inc
mov
int
cmc
and
add
movsl
test
clc
jl
ret
dec
lods
ljmp
sbb
mov
addb
jle
pop
and
rol
jmp
jl
or
sub
sub
mov
sbb
movsb
mov
cmpsb
test
sbb
jnp
fcomp
push
fldcw
aam
into
cmp
pop
test
les
xor
pop
mov
mov
ret
sahf
jge
dec
repnz
add
cmpsl
push
mov
xor
push
sbb
sar
out
or
pop
js
scas
jb
outsl
mov
popf
and
adc
aas
cmpsl
mov
fists
loope
ja
in
mov
popa
jb
xor
xchg
nop
clc
adc
out
test
int
adc
mov
sbbl
jne
arpl
xor
das
jle
inc
push
dec
inc
cltd
cltd
sbb
std
sub
sbb
ret
jmp
mov
adc
sbb
mov
pop
faddl
jb
mov
lea
aas
jns
adcb
movsl
js
loopne
adc
jns
cpuid
in
fidivrs
and
mov
lahf
loop
test
sub
iret
les
pop
xchg
cmp
or
test
movlps
je
repnz
mov
inc
int
pop
mov
aad
jge
stos
push
inc
imul
dec
pop
out
push
popa
xchg
stc
fsub
cmpsb
imul
mov
pop
test
and
or
negb
aas
mov
iret
popa
add
cwtl
js
mov
push
or
outsb
dec
mov
cmpsl
mov
je
jmp
cli
sub
add
outsl
xchg
stos
jbe
xor
test
call
movsl
call
xchg
das
stc
outsl
fstpl
pop
xorb
inc
mov
lea
cmp
repz
stos
aad
mov
rclb
push
lods
push
into
cmp
call
imul
xchg
xchg
ss
jg
sbb
pop
xor
aas
or
push
rcll
mov
cld
popl
dec
mov
std
popa
push
scas
outsb
add
and
repnz
mov
pop
mov
shr
jne
popa
sbb
and
push
adc
dec
pushf
ret
jae
xchg
lahf
faddl
adc
cld
int3
and
test
in
mov
and
pop
jo
mov
xor
xchg
dec
je
ret
jl
addl
loopne
pop
rclb
in
xchg
adcl
cwtl
push
push
int3
cmp
movsb
mov
loopne
xor
int3
inc
push
jne
jmp
fsubs
or
sbb
dec
push
mov
mulb
jle
xor
cld
ljmp
jecxz
lea
insb
push
cmp
jbe
in
cmpsl
inc
adc
sub
xchg
push
out
push
push
shll
adc
ret
or
sub
aam
dec
add
repnz
nop
push
sbbl
pop
jmp
mov
imull
xchg
sbb
cmp
xchg
cmp
and
rorb
push
xchg
push
sub
or
sbb
into
shl
and
xor
outsb
inc
mov
in
scas
adc
gs
cmovo
rcl
sub
jp
test
faddp
out
add
jg
lret
sbb
jnp
xchg
scas
sbb
fdivrs
or
cld
cmp
jb
push
push
adc
sti
xor
mov
call
adc
jle
push
and
mov
out
fists
lea
aad
popa
popf
popf
movsb
mov
push
mov
jle
push
add
orb
mov
adc
movsb
popa
jecxz
push
shlb
aas
pop
mov
mov
xchg
enter
ret
pop
popa
bound
jge
inc
lods
adc
inc
sub
or
shrd
mov
sub
in
cmp
loopne
dec
jp
xchg
add
lcall
call
imul
lock
sub
inc
add
mov
fsub
xchg
in
lods
dec
jo
sbb
sub
mov
xchg
mov
movsb
xchg
mov
add
andl
cmpsb
jno
in
sbb
or
mov
loop
js
sbb
aaa
int
pop
fs
fdivrs
xor
out
daa
mov
xor
mov
scas
loop
lahf
cmovl
and
and
sub
rcll
aaa
pop
ljmp
sahf
enter
and
xchg
sub
push
repnz
xchg
iret
jmp
cmpsb
fnstcw
repnz
xor
pop
mov
jnp
inc
xor
ret
lret
jo
or
add
ja
rcrb
decb
shl
add
sub
jmp
je
int
push
mov
mov
in
int3
stos
sub
repnz
sbb
jns
or
int
repnz
mulb
lock
test
mov
pop
lods
ret
adc
pop
cwtl
shl
std
add
in
shll
js
fdivrp
mov
add
add
jecxz
iret
cmpsb
adc
gs
mov
insb
add
adc
jp
imul
pop
xchg
sub
loope
sub
add
in
gs
xor
pop
out
in
xchg
sub
jg
cmc
dec
lds
imul
mov
aad
add
aam
add
shr
cmpsl
fisttps
push
pop
inc
dec
mov
cmp
lods
lea
and
jecxz
inc
data16
cmp
ret
jo
inc
jns
sahf
ds
dec
cmp
lock
push
clc
sub
push
clc
mov
lcall
mov
xor
mov
inc
iret
inc
insl
jo
adc
js
outsl
ja
pop
sbb
lcall
iret
pop
sub
ror
lret
push
cmp
cmp
add
adc
bound
mov
js
bound
mov
sbb
cmpsl
sub
negl
pushf
fisubs
sub
lret
stc
pop
lods
cld
dec
mov
or
gs
add
hlt
mov
dec
rcrb
arpl
mov
add
xlat
sbb
inc
outsb
mov
add
loope
sti
sbb
sbb
inc
and
arpl
daa
movsb
jno
loopne
push
je
fistpll
fildll
outsl
rsm
dec
fs
shll
push
add
jg
add
decl
sahf
mov
sub
sti
mov
dec
out
xchg
iret
mov
jge
outsl
add
outsb
jmp
pop
pop
mov
call
jp
andl
jo
cwtl
inc
xor
push
add
dec
ficompl
mov
add
sub
ds
push
jnp
out
push
dec
movsb
fcompl
mov
dec
lcall
xchg
dec
mov
mov
shrl
lea
xor
fwait
nop
dec
xchg
jo
fwait
call
inc
andl
outsl
in
xor
cmp
push
lds
rorl
jbe
enter
pop
sahf
sub
nop
ja
pop
mov
out
xchg
cmovl
test
ja
imul
cmp
lahf
in
or
xor
nop
subl
mov
dec
jne
imul
push
or
jecxz
imul
sbb
fmuls
jl
popf
xchg
fcomps
fwait
mov
std
sub
in
popf
outsb
push
mov
push
inc
jne
ret
add
sub
sbb
test
mov
dec
add
js
jmp
or
mov
and
cli
js
cltd
scas
mov
pop
jnp
xor
fidivl
push
sub
and
lock
dec
or
test
mov
xchg
mov
sbb
inc
sbb
test
jnp
jnp
popa
add
or
mov
addr16
mov
inc
pop
lds
jecxz
mov
shlb
pop
je
insb
sub
pop
addr16
xor
add
xchg
cmp
mov
xor
push
sbb
test
push
js
push
test
xchg
mov
jle
sbb
rclb
repz
mov
jp
lahf
sahf
int
nop
int
mov
mov
sub
into
lahf
incb
sub
push
mov
pop
leave
or
jl
or
fmull
je
js
fwait
mov
inc
pop
cmpsl
roll
es
scas
sub
xor
adc
cmpsb
das
push
fsubrl
popa
std
cli
and
fimull
scas
mov
es
leave
rcrl
dec
or
scas
dec
out
vpsubusb
jns
dec
rolb
fists
add
aad
imul
xchg
jnp
ss
dec
hlt
cltd
add
push
xor
icebp
ret
fldcw
cmpsb
sbb
jmp
test
in
add
test
int3
jnp
xlat
mov
fisttpl
cmpsl
sub
or
loope
dec
or
ret
mov
and
mov
aam
fisubs
mov
mov
nop
cli
pop
stos
lret
outsb
mov
in
mov
das
mov
jg
std
jne
xchg
adc
jmp
mov
and
mov
sti
cltd
aad
xchg
push
xor
inc
fwait
mov
andl
stos
jb
in
rcll
es
popf
mov
push
shlb
lods
xchg
stc
aad
mov
cmp
aas
aad
repnz
ss
mov
pop
adc
insl
mov
push
cmp
jl
lret
mov
imul
insb
xlat
sahf
cmp
mov
sbb
into
push
jmp
mov
shl
dec
in
mov
sub
adc
test
test
or
mov
lcall
scas
movsl
ret
add
sbb
scas
or
out
xchg
jbe
mov
fs
in
std
push
shlb
in
mov
pop
movsb
jmp
xchg
dec
mov
shlb
in
dec
xor
pop
mov
ret
fildll
in
cmpsl
jb
icebp
cld
das
xchg
jnp
sub
mov
cmc
or
stos
out
scas
xchg
inc
push
scas
sbb
repnz
leave
fsubrs
xchg
into
inc
lcall
mov
sbb
aad
pop
aaa
call
cltd
push
cld
cmp
sar
cltd
stos
mov
xor
sub
insb
jg
jmp
or
ret
and
sbb
inc
scas
jns
add
push
add
xor
adc
cmpsb
add
in
add
push
mov
sbb
xor
mov
mov
test
or
cpuid
fiaddl
or
movsb
lcall
xchg
orl
arpl
sub
sbb
cbtw
mov
hlt
test
cmc
aad
sbb
cmp
push
cs
sbb
hlt
sub
imul
add
cmpb
cs
int
sbb
shrl
jl
test
lcall
daa
push
repnz
fildl
push
push
leave
or
dec
lods
ja
mov
add
out
sbb
mov
ret
fistpll
loop
add
mov
inc
mov
and
mov
xchg
repz
pop
jmp
adc
shlb
scas
mov
xchg
mov
arpl
xlat
lret
outsb
in
and
leave
pop
les
push
popa
call
sbb
lds
in
imul
movb
push
lock
shlb
push
mov
add
pop
fwait
sub
adc
adc
scas
and
in
xchg
rcll
sub
push
lret
jl
jle
xchg
mov
add
mov
and
fisttpl
sub
out
mov
and
fistpll
mulb
cltd
pop
pop
adc
pusha
leave
addb
dec
xchg
stos
scas
inc
fcoml
fidivs
fisttpl
and
lods
jle
aam
hlt
xchg
dec
dec
lea
push
ja
pop
xchg
add
movsl
cmpsb
mov
aaa
sbb
push
inc
mov
and
sahf
mov
mov
inc
popf
sti
pushf
mov
push
fadds
mov
dec
mov
pop
push
leave
pop
push
xchg
adc
xchg
pop
mov
pushf
addr16
pusha
loope
test
push
xchg
in
test
stos
shll
xor
adc
push
enter
xchg
mov
aas
jne,pn
addr16
imul
add
cmpsb
out
test
xchg
cmp
push
mov
and
lods
pop
push
add
movsb
cwtl
pop
cmpb
dec
insl
sbbb
shrl
mov
jl
push
aas
pop
cmpl
xor
mov
xor
shlb
jl
clc
fldl2e
mov
pop
popa
push
aaa
cmp
mov
jg
add
add
push
rolb
mov
stos
jecxz
test
outsb
outsb
sub
pop
mov
pop
add
jg
xchg
and
add
or
adc
cwtl
incb
dec
ds
adc
xor
pop
xchg
mov
push
rcr
xchg
das
pushf
dec
xchg
mov
insb
inc
push
loopne
sti
into
sbb
filds
clc
ds
scas
std
or
cwtl
cmp
cmpsb
or
jae
mov
mov
mov
mov
add
loope
jnp
ds
mov
cmp
dec
aaa
bound
sub
aam
loop
dec
cmc
cmp
xchg
jmp
lods
repnz
shlb
lret
mov
rcl
roll
enter
movsl
sbb
scas
mov
imul
cmp
cmpb
inc
stos
xchg
js
jl
mov
mov
cmpsb
jno
lds
rorl
insb
cwtl
cmp
add
fwait
imul
xchg
mov
lea
xchg
sub
mov
daa
add
je
sbb
dec
jecxz
bound
mov
repnz
add
mov
pop
xchg
jo
mov
into
sub
xor
adc
js
shll
mov
sbb
imul
dec
adc
mov
pop
mov
gs
xor
test
scas
dec
xorl
pop
mov
sbb
es
lock
dec
mov
sahf
je
ds
mov
xchg
mov
loopne
push
out
in
aas
loope
jnp
je
and
mov
adc
mov
in
xor
sub
adc
dec
cmp
sub
fs
push
shrl
sub
xor
jnp
push
mov
and
add
inc
loop
inc
std
fidivs
into
adc
mov
mov
pusha
ljmp
push
push
stos
dec
push
xor
jo
pop
add
jno,pt
pop
add
push
stc
gs
cwtl
dec
je
cli
imul
xchg
jecxz
xlat
addb
insl
push
push
cmpsl
jecxz
xchg
fidivs
dec
das
pop
loope
jge
das
ficoms
addr16
orb
jmp
or
jg
sbb
pusha
sub
jns
sbb
jno
stc
in
inc
sbb
sub
stc
mov
add
mov
lret
pop
iret
ficoms
mov
cmpsl
out
jo
lret
sub
js
jg
ja
cmp
stc
stc
jo
clc
xchg
jb
in
rcll
iret
mov
dec
stos
xor
jne
mov
into
pop
mov
and
add
xor
add
push
jp
es
sbb
push
mov
jle
jbe
or
icebp
cmpsb
jne
cmp
jae
fldl
inc
pop
stc
mov
leave
js
aas
pop
dec
sbb
aad
lret
jbe
out
imulb
or
adc
hlt
xchg
xor
xchg
jp
dec
gs
cmpsb
mov
cli
in
mov
add
mov
repz
pushf
xchg
sbb
mov
or
inc
push
cmp
xchg
pop
add
jae
outsb
jmp
fsubl
int
sbb
mov
adc
add
mov
mov
jecxz
sbbb
scas
cli
xor
test
sti
xor
ljmp
cli
iret
scas
mov
mov
jl
cltd
mul
xchg
hlt
mov
inc
cs
mov
mov
jle
jp
cmp
inc
dec
dec
dec
popl
dec
pusha
in
stos
js
pushf
dec
and
dec
mov
ja
xor
mov
loope
je
jg
fisttps
adc
xchg
mov
cmp
inc
repz
inc
xor
xchg
push
shll
movsb
fimuls
cwtl
je
mov
mov
mov
movsb
out
lahf
aas
decb
mov
push
roll
cld
out
arpl
mov
dec
popf
adc
push
mov
out
loopne
cltd
ret
mov
fsubl
fdivrl
pop
nop
pop
push
jl
cmp
mov
push
lods
xor
sbb
popf
stos
lret
clc
add
add
mov
inc
mov
das
in
lock
and
sbb
jmp
int
negl
mov
fdivr
inc
in
mov
sub
sub
mov
mull
jae
adc
sti
out
mov
call
xchg
dec
xor
xchg
hlt
adc
fst
popa
mov
insb
movsb
mov
mov
xlat
pusha
pop
lods
shrb
mov
pop
ljmp
leave
pop
mov
pop
sub
sub
and
push
jecxz
sbb
or
xor
xor
inc
adc
inc
pop
jmp
mov
sbb
imul
rolb
scas
pop
es
sub
iret
paddw
pushf
xor
fdivl
pop
pusha
outsl
lods
lret
mov
jg
xlat
jne
mov
jmp
clc
cli
mov
sbb
xchg
inc
dec
ja
pushf
int3
stc
add
and
cmc
xor
push
shll
push
xchg
fwait
repnz
add
pushf
cmp
dec
shrl
das
clc
inc
cmp
pop
insb
mov
out
out
loop
cld
push
jne
push
scas
sbb
mov
pusha
dec
mov
fnstsw
lret
dec
sbbl
icebp
fbstp
mov
es
aas
mov
in
in
outsb
and
xchg
mov
dec
outsl
add
pop
pop
sbb
and
andl
mov
into
sbb
xchg
mov
leave
mov
mov
pop
mov
outsb
loopne
imul
int
test
inc
cltd
mov
outsl
mov
and
jb
inc
xor
stc
xchg
cli
daa
movsl
xchg
cli
fs
shlb
daa
arpl
push
mov
cmp
sbb
inc
dec
stc
inc
mov
popf
lea
ret
mov
iret
inc
jo
jbe
sbb
dec
inc
ficoml
shlb
bound
push
pop
push
lds
mov
sbb
jl
test
js
into
inc
not
subl
inc
cmp
sub
leave
xor
in
jb
mov
sub
mov
sahf
ja
adc
jb
mov
jns
xor
loope
sub
add
xchg
xchg
addr16
cs
pop
pop
jae
xchg
les
cwtl
daa
shrl
push
aam
imul
aaa
xor
jo
das
jb
push
mov
pop
xor
mov
repz
popf
add
sub
out
insl
adc
or
xchg
int3
fwait
dec
add
insl
push
cld
lock
pop
add
jb
inc
stc
pop
das
pop
popa
shll
test
mov
clc
mov
xchg
xor
jns
pop
pop
pop
dec
divb
dec
lock
sar
call
jl
into
mov
adc
enter
stos
and
push
loop
stc
ljmp
and
insl
sbb
fistpll
sbb
push
and
stos
in
sub
adcl
out
dec
outsl
cmpsb
xchg
mov
push
ret
jae
sbb
mov
clc
push
call
gs
and
lds
cmp
or
add
add
push
adc
inc
jae
stos
inc
adc
rorb
ret
fcompl
test
add
out
sbb
mov
daa
cmp
pop
std
mov
adc
mov
add
mov
mov
into
mov
xchg
cs
loop
and
mov
adc
rcll
cwtl
adc
das
sbb
add
orb
inc
inc
scas
mov
mov
mov
mov
loop
xchg
add
mov
icebp
hlt
sbb
dec
pop
sub
imul
mov
stc
stos
mov
push
outsb
adc
and
add
xor
inc
inc
cmp
cmpsl
inc
push
divb
lahf
push
lahf
sahf
xchg
mov
mov
dec
ret
into
dec
out
enter
sbb
pop
jo
push
leave
xchg
test
pop
jmp
pop
inc
cmp
sbb
lock
ss
leave
mov
rcrb
add
and
mov
sub
jmp
lods
test
stos
fstpt
in
xor
je
aad
pop
mov
outsl
cld
jae
push
pop
jl
test
and
push
xchg
mov
roll
xchg
jno
popf
mov
mov
pop
in
xchg
pop
dec
add
sbb
incl
push
jmp
cltd
filds
int3
mov
pop
xlat
popf
push
lret
dec
test
sub
inc
pop
jmp
aaa
push
lahf
mov
and
mov
xor
out
jns
lds
xor
xchg
rclb
pop
jmp
loopne
xchg
je
mov
sub
leave
sub
pop
adc
stos
sarb
add
push
mov
and
popl
and
loop
push
movsl
outsb
insb
push
pop
xchg
popf
xchg
push
les
mov
popf
insb
or
pop
mov
mov
push
and
lcall
movsl
sub
clc
les
loop
shlb
into
adc
jo
test
scas
out
std
std
jmp
call
and
nop
or
outsb
xor
mov
sti
popf
fwait
cmp
addr16
addr16
stos
cli
push
jb
xor
je
mov
inc
aam
lock
mov
clc
bound
mov
shll
mov
jns
inc
jp
sbb
nop
mov
aaa
lahf
xchg
popf
out
push
shlb
xor
mov
out
lods
jns
int
adc
insb
imul
and
mov
addr16
xchg
mov
jnp
in
insl
sti
movsb
aas
inc
ret
imul
in
push
dec
popf
dec
and
rolb
add
fidivl
jmp
sub
rol
mov
loopne
pop
xchg
stos
les
imul
sub
dec
jns
mov
mov
jae
xchg
xchg
subl
nop
sbb
int3
sbb
mov
aas
push
imul
movsl
insb
mov
divl
mov
imul
popa
filds
mov
insl
adc
jp
mov
mov
cmp
xor
sub
or
mov
arpl
icebp
test
cs
or
clc
pop
call
iret
cli
cmp
cmp
xchg
mov
shlb
pop
jmp
mov
aad
sub
ss
xchg
adc
out
fildl
xlat
cmpsl
inc
sub
jmp
loope
icebp
stos
les
ret
insl
int
mov
and
or
into
fidivrl
popa
rcl
js
fmull
scas
adc
and
xchg
in
dec
stos
shrb
mov
and
fimuls
dec
and
in
jecxz
fisttpl
shrl
pop
btr
les
ja
jae
fucomi
mov
lods
jae
addr16
pushf
out
test
sbb
mov
in
rcrb
jecxz
jmp
or
push
or
xor
cli
xor
cmp
lea
stc
mov
push
lods
das
jmp
in
in
ficomps
xlat
insl
dec
add
mov
out
ret
imul
mov
jo
mov
adc
movl
dec
add
add
pop
mov
outsl
popa
enter
and
pop
stos
sahf
scas
jmp
xchg
pop
gs
test
mov
mov
mov
pop
sbb
cmp
mov
in
mov
inc
call
rcll
jl
sbb
pop
xor
pop
dec
lds
adc
adc
cs
pushf
fwait
push
aaa
add
mov
jp
cs
mov
xor
cmpsb
gs
fldcw
loopne
mov
int
mov
neg
stos
mov
push
lea
repz
icebp
xchg
add
cs
pop
mov
sbb
ljmp
lret
xchg
adc
idiv
adc
lahf
icebp
inc
jecxz
ljmp
xchg
mov
aas
add
stos
adc
movsb
mov
and
jb
scas
lret
or
pop
or
push
and
xchg
pop
mov
push
xchg
cmpsl
adc
mov
shll
popf
sbb
inc
mov
cmpsb
in
in
xor
sub
dec
inc
aaa
push
cmp
inc
shl
pop
inc
push
pop
pop
clc
lods
test
adc
xchg
adc
mov
push
addr16
jno
test
jbe
lahf
inc
leave
imul
fwait
push
cbtw
mov
mov
out
test
lock
push
jmp
cmp
mov
cmpsb
mov
mov
xchg
rcrb
cmpsb
outsb
fsts
xor
add
pop
arpl
loope
cltd
sahf
addr16
mov
dec
cmp
push
popa
dec
lds
pushf
or
in
pop
imul
mov
pop
add
cld
lds
pop
pop
mov
inc
mov
dec
leave
sbb
jbe
and
and
adc
xor
int3
sbb
sub
or
jns
xor
xor
in
mov
sub
dec
test
xor
sub
ds
pop
mov
cmp
cmp
cli
loopne
lret
notb
ljmp
sbb
ds
ds
lcall
popa
repnz
bound
cmp
and
scas
mov
mov
push
mov
fisubs
cmp
inc
dec
adc
xor
insl
sub
std
daa
pop
mov
dec
dec
fistpl
cmp
insl
push
inc
push
cmp
jle
push
jno
cld
rorl
shll
iret
sbb
pop
cmp
pop
popa
out
out
push
mov
xlat
notl
and
call
sbb
ret
mov
push
pop
push
pop
enter
pushf
daa
or
dec
cmp
sarl
lahf
das
daa
bswap
pop
sahf
sahf
pop
mov
cmp
ds
push
fstps
and
je
mov
mov
mov
jle
mov
test
loopne
flds
mov
enter
add
mov
scas
lcall
xchg
xor
nop
push
scas
add
insl
xchg
pusha
cmp
push
sbb
pop
fldt
jne
cmp
bound
lds
in
dec
cltd
test
lods
dec
aaa
cmpsl
and
popa
mov
in
inc
cmp
movsl
inc
ret
gs
push
mov
ds
rcrb
or
sub
mov
nop
mov
add
mov
mov
adc
inc
ret
in
std
sbb
call
js
dec
and
cmc
inc
fisttps
decb
xor
loopne
inc
mov
pusha
divb
gs
dec
adc
mov
orb
shrb
es
dec
stos
mov
inc
push
in
insb
out
xor
icebp
xor
sub
shll
fcompl
push
stos
insb
or
pushf
stos
pop
dec
sub
cwtl
mov
mov
mov
xor
mov
daa
imul
or
mov
cmpl
jns
pop
push
cwtl
xchg
mov
cltd
sarb
fsubrl
mov
jnp
mov
jge
imul
mov
mov
inc
rorl
mov
addr16
cmp
pop
xchg
mov
es
and
adc
xchg
out
push
push
cwtl
push
out
pusha
adc
or
sbb
or
out
cmp
sub
insb
add
jno
adc
movsl
mov
inc
into
mov
movb
sbb
ja
std
data16
aas
shll
out
xor
idivb
fs
scas
sahf
push
inc
enter
and
aam
addl
pop
out
jl
pop
jno
cmpsl
xchg
dec
dec
add
mov
addl
bound
add
lcall
mov
je
popf
in
shr
cmp
pop
pop
les
loope
repnz
and
filds
add
inc
je
aam
sub
sbb
cld
mov
jo
lods
mov
clc
jle
sarl
call
jmp
js
sbb
fs
mov
inc
scas
mov
mov
pmaxub
xchg
jle
ljmp
fwait
xor
jge
and
and
loope
sti
sub
pushf
sbb
movsb
fwait
inc
cmc
push
rcr
orb
or
jnp
fstps
adc
push
pusha
out
dec
add
test
xor
xlat
adc
push
rorb
orl
ljmp
in
push
daa
add
pop
cwtl
nop
cltd
sub
xor
pop
outsl
push
mov
mov
pop
mov
xchg
pop
jno
fwait
add
jl
arpl
test
jl
sbb
xchg
ret
into
push
sbb
dec
fcoml
jns
ret
loopne
ja
push
negb
aam
push
jle
cmp
fisubl
out
lret
fmuls
push
adc
inc
adc
dec
scas
push
lea
loop
ja
loopne
sbb
repz
lahf
or
in
js
rorb
fwait
push
sahf
sbb
test
mov
lock
dec
cmp
xor
sbb
in
rorl
jbe
popf
pushf
mov
push
out
in
cld
test
pop
testl
lahf
out
fwait
jbe
pop
push
push
jbe
dec
cmp
adc
pop
pop
das
sbb
xchg
pop
cwtl
pop
inc
xor
pop
stos
inc
mov
stc
jo
dec
call
mov
inc
jecxz
out
adc
in
sub
adc
leave
mov
jle
frstor
and
and
or
clc
scas
les
insb
push
sub
aad
add
or
xchg
xchg
leave
mov
or
cmc
adc
insb
out
xor
das
xor
and
xor
mov
lret
in
adc
push
or
adc
cmpsb
stos
mov
outsl
xor
xor
adc
repnz
mov
jmp
insb
jne
adc
adc
outsl
lahf
cmp
cmp
cmc
fistps
jnp
or
int
scas
jg
jne
xchg
sbb
push
insl
jae
jbe
stos
gs
inc
shrl
lods
stc
add
icebp
in
cltd
test
pop
mov
mov
sahf
mov
xor
lock
xor
xor
mov
sbb
add
dec
pop
jg
jns
jl
jbe
jmp
std
mov
push
inc
nop
das
add
cmp
mov
add
xor
push
inc
mov
dec
inc
push
cmp
fisttpll
push
xlat
fdivs
mov
je
xor
push
out
ror
lret
test
lret
decl
adc
test
sti
push
fisubrl
lods
imul
popf
sub
scas
jne
cmovbe
jg
sbb
aam
or
mov
pop
into
insb
mov
pop
push
sbb
scas
or
loope
jno
cld
mov
push
jge
push
and
js
adc
xor
pushf
mov
adc
xor
in
mov
pop
pop
ret
mov
stos
push
pop
mov
leave
test
dec
add
xchg
pop
push
fwait
adc
sub
cmp
cmp
bound
movsb
mov
push
jmp
je
mov
scas
cs
aaa
cmp
mov
sbb
andl
hlt
pusha
pushf
lds
sbb
js
mov
sub
movsl
out
shlb
dec
mov
lods
jno
jne
test
es
jo
jg
adc
pop
ss
sbb
loope
and
mov
popa
push
mov
cmp
mov
lcall
add
adc
rorl
push
fs
xchg
dec
mov
add
popa
ret
cmc
xchg
dec
mov
or
mov
push
rclb
mov
ljmp
and
das
lods
daa
je
jns
ss
mov
mov
lahf
push
out
lock
mov
les
ret
pop
int3
jne
or
dec
push
add
and
pop
inc
test
aas
out
mov
cmp
sbb
lcall
lods
sbb
cmp
leave
fs
dec
xchg
or
push
pop
loope
int3
popa
jno
pop
push
jg
cltd
add
cwtl
jmp
xchg
jg
aad
sarb
xchg
xchg
stc
mov
movsb
divl
das
or
in
outsb
xchg
pop
insb
mov
fcoms
addr16
xchg
fbld
sar
and
cmp
mov
test
jecxz
cli
mov
or
cmp
dec
push
aam
jecxz
push
js
ja
xor
fucomi
es
insb
xor
adc
inc
pop
jle
aas
push
mov
adc
bound
insl
xlat
nop
cmp
stos
jno
or
bnd
cli
fcomp
gs
das
push
jp
out
inc
bound
push
and
inc
icebp
ja
gs
cmp
mov
jp
add
add
xchg
pop
and
je
mov
loop
push
adc
bound
push
sub
adc
jno
cwtl
xchg
lock
jbe
enter
mov
das
cld
add
movsb
jb
xchg
pop
scas
mov
loope
pop
adc
hlt
test
pop
xchg
xchg
push
push
cmp
outsl
jmp
shll
lcall
sub
in
adc
mov
insb
in
pmullw
aaa
test
mov
mov
lret
cmc
mov
ss
mov
mov
jmp
pop
pop
imul
dec
addr16
fcmove
jno
add
gs
jle
sub
sarb
and
sti
pop
fcmove
mov
fmull
cmp
or
lahf
std
movsl
les
push
les
aam
push
je
sub
jb
bnd
in
pusha
imul
icebp
aas
lret
pop
rorl
addl
and
test
fbld
jae
dec
loopne
jge
mov
into
fs
imul
out
mov
inc
or
int
call
lods
jmp
adc
test
fwait
jne
andb
aad
xchg
das
lods
mov
ss
cmp
mov
dec
aad
pusha
dec
fcoml
mov
test
dec
mov
lcall
in
adc
mov
test
cmpsl
repnz
inc
int
xorb
fimull
mov
dec
popa
mulb
dec
stc
mov
ficoms
and
cmp
sub
mov
or
mov
scas
stc
pop
andl
jae
xlat
mov
cmp
fdivrl
xchg
test
test
mov
sub
mull
mov
decl
frstor
addr16
mov
outsl
xor
jp
outsb
ret
nop
test
mov
xchg
xlat
popf
add
das
push
jl
or
cwtl
test
ljmp
std
stos
dec
inc
adc
xorl
jmp
and
mov
js
in
insl
gs
adc
imul
das
addr16
jmp
lret
mov
fidivrl
subl
jg
mov
sbb
lret
push
out
and
aad
test
orl
cmp
sarl
je
inc
jecxz
bsf
mov
pop
out
xchg
push
je
sbb
sbb
adc
call
xor
and
repnz
in
dec
or
andb
aas
in
pop
jle
ficomps
xchg
lcall
or
inc
cld
or
lock
ja
ss
pop
leave
mov
push
pop
jns
mov
nop
pop
pop
push
sub
mov
dec
and
cmp
jmp
jbe
or
mov
sub
cmp
divb
lods
pushf
mov
xchg
and
lock
out
push
int
jb
iret
mov
fiadds
mov
js
cmp
mov
pop
out
outsb
pop
xor
xchg
pop
aas
fwait
xor
mov
add
loop
jecxz
xor
in
movsl
in
push
and
inc
and
mov
push
mov
mov
adc
mov
adc
mov
inc
lods
pushf
fadd
jecxz
and
ljmp
decl
dec
je
inc
in
out
mov
test
pop
or
stos
jns
outsb
out
add
enter
xor
addr16
mov
jg
repnz
cmp
pop
daa
xchg
inc
arpl
sbb
loopne
pop
int3
cmp
ret
push
cmpsb
fdivrs
dec
jg
and
push
xor
ss
xchg
push
test
mov
jp
inc
cmp
cwtl
sbb
mov
dec
out
pop
or
ret
aaa
lods
out
xor
jge
push
jge
cmp
or
push
cmp
or
xchg
aam
lret
repz
lcall
mov
insb
addr16
andb
ffree
pop
fsubrl
jns
jb
sub
fs
jg
adc
icebp
shrl
test
dec
out
mov
dec
xor
fidivrl
or
rolb
fidivrs
cld
fistpl
shlb
mov
add
add
xchg
pop
mov
movsb
setae
jnp
stos
pop
shl
adc
repz
repnz
inc
lock
dec
xchg
pop
cli
inc
cmp
hlt
mov
push
jbe
adc
shll
inc
cmp
inc
push
mov
mov
mov
rcrl
ja
in
jo
pop
pusha
shll
int3
cmp
js
dec
cs
or
push
sbb
dec
push
jnp
mov
and
mov
adc
jge
mov
movsl
mul
fwait
fwait
jno
aam
hlt
insb
sub
fstp
lret
lret
push
or
mov
je
sbb
inc
sbb
fiaddl
push
mov
popa
and
fisubl
cs
fs
cmp
lea
icebp
sbb
or
xlat
mov
mov
mov
xor
je
push
and
enter
insb
loop
dec
stc
outsb
jg
add
nop
cmc
rcr
dec
mov
fsubr
sbb
dec
daa
rorl
jecxz
insl
pop
xor
xor
inc
fcomp
xchg
flds
jecxz
adc
imul
jb
sbb
adc
push
out
jo
test
xchg
lods
pop
ret
icebp
mov
hlt
add
dec
push
dec
jb
add
jbe
shl
leave
dec
out
lret
jns
and
pop
je
push
sub
std
jp
jno
movsl
sbb
push
push
push
repnz
cmp
ja
sub
idivl
leave
aaa
in
inc
fbld
test
sbb
fld
insb
in
bound
sbb
adcb
and
push
shll
sbb
aam
mov
fs
pop
stc
rorb
in
scas
xchg
icebp
adc
into
in
ss
sbb
repnz
pop
mov
pusha
in
push
dec
fstpl
xchg
lods
push
pop
stc
mov
push
lods
int3
push
aad
lret
int3
mov
stc
mov
adc
adc
fcomps
test
mov
out
xchg
xor
andl
sti
rcll
mov
mov
rorb
xchg
or
xchg
jbe
or
arpl
jmp
mov
mov
mov
sbb
in
ffreep
pop
iret
fbld
scas
dec
push
nop
jp
ret
and
clc
fidivrs
mov
xor
repnz
or
int
mov
and
pop
mov
ret
sub
lret
mov
imul
xchg
adc
and
enter
popa
test
rcl
jle
cmp
adc
pop
fistps
call
les
push
mov
xchg
xchg
jge
testl
int
xlat
das
inc
fstpl
cmpl
pop
lods
push
lds
pop
fistl
xchg
pushf
pop
mov
xchg
enter
imul
add
sbb
dec
popf
in
outsl
inc
test
out
gs
rcll
mov
dec
dec
bound
pop
pop
subb
aaa
mov
hlt
sub
or
sbb
popf
sbb
inc
into
imul
cltd
incb
out
xor
cmp
cmp
jnp
ficomps
xchg
sub
pop
and
les
rcll
xadd
cmp
adc
fcmovne
test
cltd
in
sahf
jmp
inc
rcl
mov
ja
and
jno
pushf
sbb
jl
pop
hlt
xor
sarb
fisttpll
jecxz
adc
sbb
xor
jl
loope
xchg
ret
mov
inc
mov
mov
mov
or
mov
popf
xchg
cmp
mov
adc
repnz
dec
mov
leave
mov
ljmp
xchg
xchg
shll
sub
push
shlb
and
flds
jns
jp
subl
cmp
stc
dec
iret
dec
popa
hlt
jl
fsubrs
push
sub
pop
ret
lock
push
clc
insb
mov
sbb
and
insl
nop
xchg
les
pop
sub
mov
loopne
adc
jmp
dec
pop
pop
and
add
jae
xchg
iret
aas
push
icebp
fildl
xor
adc
aas
add
cld
xchg
sbb
xchg
sbb
push
or
pop
sbb
cmp
dec
sti
and
in
jecxz
inc
cmc
dec
cmpsl
lods
pop
ret
imul
js
mov
sti
jmp
nop
inc
test
push
pop
sub
pop
jne
fdivrs
pop
cs
test
fwait
push
push
xor
sub
and
ljmp
dec
add
cmpsl
divl
in
or
mov
cmp
jge
push
pop
pop
clc
divb
in
pop
and
push
mov
les
insl
mov
add
mov
rcr
std
xorl
pop
call
arpl
lar
aam
imul
push
inc
shl
and
mov
sbb
mov
lock
xchg
scas
nop
sbb
lret
xchg
push
or
inc
sub
int
stos
push
fsub
push
dec
push
in
or
aad
mov
insb
ret
pop
or
xchg
lahf
sbb
mov
mov
jo
aad
lret
or
mov
mov
push
add
or
and
pushf
mov
fistpll
imul
js
inc
push
dec
add
ja
push
bound
shll
push
xchg
adcl
sbb
adc
inc
mov
xor
in
cld
mov
test
sbb
inc
pop
or
addr16
loopne
das
stos
imul
clc
stc
pusha
sahf
lret
mov
lds
mov
gs
insl
xrelease
and
pop
dec
rcrb
mov
inc
iret
sti
inc
imul
jge
pop
sbb
adc
mov
push
xchg
popa
and
pop
sbb
mov
inc
push
sub
push
xor
lods
push
add
mov
or
add
out
push
leave
ja
xor
mov
cmp
pop
outsl
mov
cmc
adcb
test
inc
or
cmp
cwtl
xor
es
pushf
iret
repz
dec
add
mov
scas
xor
and
dec
fwait
mov
cltd
dec
xchg
nop
or
jno
mov
testl
add
push
sbb
ljmp
lahf
inc
push
rolb
mov
sub
repnz
cmp
or
and
movsl
rcr
push
bound
int
adc
mov
push
pop
cmp
jno
mov
sbb
push
jo
pop
call
rcl
std
add
cmp
xor
dec
scas
fistps
cs
imulb
xlat
mov
xor
in
fsubl
jo
inc
xchg
jg
fsubrl
or
pop
movsl
aad
mov
and
pop
jle
test
or
add
mov
pop
push
sbb
jae
mov
hlt
sub
pusha
mov
inc
jae
or
das
movsl
jge
push
jno
out
pop
fwait
xchg
sub
insb
into
insb
or
xchg
inc
sub
cmp
pop
add
or
lds
dec
loop
pushf
pop
fsubl
sbb
xor
adc
dec
push
bnd
pop
mov
jns
lcall
or
mov
insl
cmp
lock
jge
arpl
setge
test
loopne
adc
pop
add
cs
clflush
xor
push
sbb
xor
sbb
cs
bswap
fldl2t
or
adc
mov
cwtl
scas
inc
xchg
mov
rcrb
in
xchg
cli
push
jmp
aaa
mov
or
mov
mov
xor
add
cmp
orl
jge
insl
cld
mov
stos
lret
js
push
push
inc
decb
cmpb
and
mov
lret
mov
aam
pop
loopne
cmp
int
xchg
and
loopne
int
pusha
push
add
scas
mov
add
scas
fbstp
mov
push
popf
cld
jmp
sub
cmp
pusha
aad
sub
int3
inc
imull
push
sbb
scas
scas
or
nop
lcall
add
outsb
adc
inc
insl
movsl
sub
jecxz
or
aaa
loop
in
bound
jle
lock
fisubs
inc
jecxz
movsl
ljmp
rclb
inc
push
dec
loopne
adc
mov
push
imul
inc
push
sbb
jmp
jmp
mov
pop
int
xchg
imul
mov
dec
dec
sbb
jb
mov
push
sarl
scas
out
mov
rolb
mov
inc
repz
repz
stc
cli
sti
ret
jle
loopne
push
pop
gs
xor
jno
sub
and
and
lret
or
push
loope
les
push
dec
add
add
daa
add
sbb
call
pop
mov
test
mov
pop
hlt
jne
pop
dec
jnp
dec
mov
or
daa
imul
jno
dec
adc
icebp
or
xlat
inc
sbb
dec
and
mov
dec
add
mov
jge
xchg
loope
loop
and
je
les
adc
pop
repz
movsl
cli
inc
inc
lods
test
cmp
addl
mov
mov
cmp
lods
rcr
ss
in
mov
mov
fidivrl
jb
les
xor
jne
lods
cmpsb
mov
push
fistps
pop
into
and
sub
push
into
mov
outsl
or
hlt
xchg
xor
mov
aad
jae
push
jg
dec
repz
adc
or
aad
pop
mov
aam
jbe
push
mov
cmp
outsb
sbb
dec
inc
dec
sub
mov
loope
cmp
xchg
pop
inc
add
je
mov
sti
sbb
cmp
cli
into
sub
sbb
mov
push
adc
sbb
lcall
cwtl
ja
add
adc
sub
fcmovu
cli
dec
scas
sbb
pop
jl
imul
push
mov
in
jae
testl
sub
mov
es
inc
lcall
test
adc
mov
mov
mov
daa
xchg
mov
xchg
loopne
fldt
enter
sub
movsl
lahf
push
in
sbb
adc
dec
mov
pop
aas
mov
lret
mov
les
inc
addr16
cs
data16
dec
setp
ja
and
scas
icebp
mov
lods
fldenv
pop
repnz
mov
mov
out
add
out
push
mov
jns
cmp
lret
pusha
hlt
adc
xor
push
imul
fs
shrl
fsubr
or
jno
sti
pushf
scas
pop
cli
jb
sbb
push
fsubs
loope
in
jl
rol
mov
sbb
mov
insl
mov
xlat
loopne
jp
imul
popa
pop
pop
jne
cld
or
jle
enter
stc
add
cmpsb
jne
push
incb
adc
rclb
lea
cmp
push
lock
xor
ret
mov
push
jnp
pop
jbe
and
push
shrb
fidivs
lahf
ds
out
shrl
adc
sub
and
mov
dec
dec
xor
enter
les
push
lret
mov
pop
pop
fsubl
jecxz
mov
in
dec
pushf
pop
cmpsl
out
das
cmp
push
jns
aam
inc
xchg
dec
insl
mov
loopne
in
or
out
add
xchg
add
xchg
lods
inc
cmc
pop
pop
je
js
inc
in
dec
jae
adc
jae
or
mov
cmp
pop
movsb
out
add
in
dec
fdivrs
and
sub
or
test
mov
push
rcrl
lahf
cld
pusha
and
and
sub
push
pop
sub
xor
push
add
subl
ja
jae
sahf
sub
pushf
ret
lea
jmp
adc
out
fwait
dec
pop
bnd
or
xchg
std
jle
sti
sbb
adc
lcall
jbe
je
mov
icebp
int
pop
sbb
bound
gs
fs
jno
scas
fcmovnu
out
xchg
add
adc
sub
aas
and
inc
mov
outsl
or
push
sub
pop
add
shl
testb
fstpt
out
pop
or
sub
add
sub
xor
push
pop
inc
jb
cltd
pop
cmp
orb
xor
push
xchg
cmc
cmpsb
rcl
in
and
stos
or
cmp
cltd
test
fwait
andb
mov
fiaddl
cmp
arpl
fidivs
and
pop
sub
ds
and
dec
js
sti
lcall
movsb
xor
ds
loope
mov
lret
push
lods
rorl
mov
mov
sti
cmpsb
bound
push
and
mov
xor
xor
lcall
inc
dec
stos
xchg
jo
aad
ror
and
addr16
dec
aam
ljmp
jne
stos
or
mov
mov
test
cmpsb
js
mov
nop
sti
xchg
mov
dec
test
pop
movsb
sbb
jae
jge
daa
push
shl
jo,pt
imul
scas
addr16
fstps
jno
mov
and
shl
pop
fmull
or
adc
jb
je
jecxz
dec
mov
adc
push
push
sub
mov
jno
data16
scas
xchg
push
or
lods
and
out
mov
xor
ficoms
scas
adc
dec
push
and
add
or
mov
xchg
pushf
ret
pop
mov
hlt
stc
and
push
sbb
out
sub
iret
xor
test
fwait
mov
shrb
mov
sbb
lea
jo
scas
push
inc
popa
enter
insb
fiaddl
and
and
pop
ja
sub
iret
outsb
leave
js
push
cmp
jmp
scas
xlat
pop
push
jle
outsl
dec
or
hlt
aad
icebp
xchg
or
out
pop
and
das
fisubs
aaa
dec
push
enter
out
xor
iret
sahf
lods
in
test
push
es
ficompl
adc
push
iret
cmp
xchg
mov
ret
xor
and
push
stc
std
divl
mov
in
xor
and
push
loope
imull
fst
stos
push
imul
orb
cmc
lock
or
and
or
bound
inc
and
mov
mov
bound
mov
cmc
je
sbb
mov
insb
int3
adc
enter
inc
adc
mov
sub
mov
popf
repnz
fisttps
pop
fildll
xor
aam
pop
jno
popf
push
shrl
pop
int3
clc
shll
sub
jns
add
jbe
xchg
leave
orl
mov
xchg
arpl
sbb
mov
int
into
xchg
inc
daa
xchg
fimull
test
xchg
mov
test
loope
in
cmc
mov
push
sbb
pop
sub
push
cmp
jo
lahf
pop
dec
shlb
notl
fnstcw
in
mov
adc
adc
pop
jmp
les
push
xchg
stc
pop
mov
jl
or
call
and
sbb
mov
or
test
mulb
pop
push
aas
lds
jns
loop
lods
repz
mov
loopne
call
xchg
lcall
in
pushf
xor
repnz
jg
test
sub
sarl
add
adc
repz
jl
call
pop
pop
cli
stc
data16
jae
std
inc
clc
cld
sbb
inc
mov
inc
mov
outsb
popa
sbb
scas
je
push
xchg
jae
in
inc
stos
pop
roll
push
and
daa
cmp
pop
jle
test
push
sahf
aaa
pop
add
dec
fldenv
add
dec
repz
cmp
into
mov
jmp
cmp
test
or
ljmp
repz
add
icebp
test
js
fmuls
mov
pushf
frstor
sub
jne
aam
mov
repz
scas
inc
iret
push
jae
lock
pop
xchg
sbb
xchg
shrb
sub
jge
adc
push
bound
add
rol
stc
jne
and
adcl
cmpsb
sbb
addr16
jbe
or
dec
mov
daa
into
cld
loope,pt
in
pop
xchg
adc
jmp
sbb
lods
loope
insl
icebp
arpl
push
test
mov
jge
movsl
add
out
lahf
cld
orl
mov
xor
mov
test
fisttps
push
data16
cli
adc
into
aaa
push
sub
dec
mov
mov
lock
push
call
mov
push
jns
xchg
adc
cli
adc
dec
imul
mov
mov
pop
adc
sbbb
inc
xor
imul
or
cli
jno
mov
test
xchg
xchg
pop
divb
sub
mov
stos
ret
push
mov
stos
leave
push
int
icebp
or
lods
cltd
and
sub
test
xor
imul
add
into
clc
cmp
repz
ljmp
in
sub
cmpsb
dec
jnp
lret
fwait
xor
xchg
repz
jg
out
aam
push
int
pop
pop
adc
cmpsl
popa
push
adc
cmpsl
movsl
lret
hlt
stc
fstpt
test
cmpsb
imul
stc
pop
inc
adc
sub
lahf
mov
sub
jno
lret
lcall
or
mov
jecxz
int
pop
xchg
mov
xlat
ss
cmp
popf
push
jns
jae
pushf
mov
int
pop
sbb
rcrl
push
repnz
jbe
js
pushf
xchg
xchg
pop
and
push
arpl
hlt
push
loope
rcll
cmpsb
fcomi
sbb
cs
jb
mov
inc
in
sbb
das
pop
jl
addr16
cmpl
pop
mov
and
adc
adc
icebp
xor
out
cmp
mov
cmp
pop
xor
mov
pushl
decl
xor
sbb
jne
inc
or
or
mov
lds
push
stos
mov
incb
pop
jmp
pop
scas
mov
lret
addr16
mov
enter
call
cli
and
stos
sub
test
addb
sbb
mov
and
repz
sub
pusha
or
add
jo
jne
or
mov
cltd
fs
ja
scas
popf
jl
or
or
imul
jmp
jbe
mov
dec
repz
fidivrl
mov
test
xchg
sbb
in
ljmp
clc
enter
push
pop
mov
ficoms
xor
fsubrs
outsb
inc
pushw
adc
pop
xchg
sbb
adc
je
and
ret
mov
scas
out
xchg
out
add
in
in
stc
fdivrl
adc
mov
sarb
addl
std
xor
sbb
or
push
int3
jge
inc
mov
fsubl
popa
rcll
lret
ja
xchg
push
add
aaa
mov
adcl
out
mov
scas
pop
sub
out
iret
jo
sbb
test
addr16
hlt
or
fsts
loop
popa
clc
jnp
in
mov
pop
jno
push
pop
inc
or
mov
not
aaa
les
fisubrl
xchg
mov
adc
mov
das
gs
and
mov
sub
out
adc
out
test
lea
icebp
push
out
xor
or
imul
iret
popa
jnp
pushf
repnz
iret
xchg
mov
jmp
sbb
adc
decb
pop
mov
das
xlat
sti
mov
inc
into
daa
mov
sub
lock
jmp
scas
inc
mov
jmp
sub
icebp
aad
sbb
mov
outsl
inc
xchg
int
cmpsl
sbb
jecxz
and
cld
sub
cmp
ds
push
test
dec
sub
ja
stos
into
mov
and
lcall
and
push
or
push
movsl
and
dec
add
cmpsb
pop
mov
lea
mov
xchg
fwait
jb
shll
js
in
dec
and
push
mov
int3
jg
pop
xor
pop
fs
pop
add
jno
fsubr
and
xor
jnp
adc
outsb
in
nop
iret
push
stos
fbstp
addr16
fisubs
cmp
lods
call
mov
jle
scas
and
xchg
nop
sub
enter
fistl
cmp
bound
lret
or
cs
aaa
adc
pushf
aas
push
pop
and
mov
and
nop
push
xor
and
xchg
push
aaa
loop
adc
in
mov
jl
notb
cmp
icebp
sbb
ret
and
movsl
jmp
in
aad
mov
js
into
outsl
enter
mov
popa
cmp
loopne
in
test
sub
mov
xchg
pusha
jmp
je
popf
subb
mov
out
add
fdivs
outsl
push
ljmp
mov
jmp
sar
push
sub
gs
insb
jns
cs
mov
mov
jg
cmp
test
aad
inc
mov
dec
adc
repnz
mov
out
out
sbb
inc
fistl
xor
es
sbb
xor
cli
adc
mov
mov
xchg
bound
add
popf
test
pop
sbb
xorb
test
mov
lret
or
push
shll
in
fbld
out
sub
and
pusha
and
iret
lods
push
js
push
mov
rorl
jo
xchg
mov
sub
push
mov
roll
outsl
mov
mov
mov
shrb
jecxz
xor
dec
insb
dec
aad
sbb
xor
prefetch
mov
out
add
or
lds
fstpl
lahf
arpl
dec
jae
and
or
jge
pop
add
dec
sbb
imul
jmp
xor
or
sbb
adc
and
mov
mov
cld
imul
pop
out
jmp
popa
xor
shrl
and
sub
pop
push
nop
mov
dec
gs
or
andl
and
lods
mov
cmp
lret
xchg
lds
jecxz
cmp
and
cmc
int
push
scas
push
pop
sbb
inc
mov
repz
push
and
iret
cmpsl
addr16
mov
and
lods
jne
inc
rcl
push
lret
cmpsl
andl
mov
imul
mov
adc
lock
mov
xor
xchg
push
dec
dec
popf
push
lock
pop
test
jge
sbb
loope
test
pop
and
or
push
loope
cmp
inc
daa
pop
dec
pop
or
fwait
int3
iret
xor
mov
andl
push
mov
icebp
lret
mov
loopne
mov
lahf
paddd
dec
sub
out
xor
test
gs
inc
push
add
push
cmp
inc
push
icebp
xchg
mov
mov
adc
jnp
mov
sbb
cld
stc
xlat
pusha
in
mov
test
add
push
movsl
add
jne
sub
xchg
lods
or
or
mov
rclb
add
or
or
lcall
xchg
push
mov
pushf
test
cmp
and
pushf
stos
xchg
xor
pop
inc
fs
sub
int
test
icebp
sbb
xchg
cmc
push
or
mov
dec
cli
or
push
aaa
js
pop
les
pop
cwtl
adc
jp
sub
jl
ret
cltd
es
int
sti
lds
sub
mov
pop
rorb
lds
add
sub
mov
mov
mov
stos
rdtsc
mov
and
xchg
xchg
sti
jmp
mov
mov
ljmp
mov
cwtl
inc
mov
pop
je
adc
or
mov
cmp
loopne
cmp
jg
lods
imul
jae
mov
adc
pop
fistps
scas
mov
idivb
fldt
stc
mov
pop
loope
mov
btc
call
mov
mov
push
pop
inc
aam
andb
jbe
aaa
mov
out
je
mov
xor
mov
mov
push
xor
push
int3
pop
stos
push
hlt
das
xchg
mov
insl
movsb
fmul
sbb
add
jmp
xchg
shrl
sbb
sub
cmpsb
aaa
aad
add
push
push
adc
jno
add
jne
push
incl
insl
pop
jmp
xor
pusha
push
aam
ss
mov
imul
loop
mov
xchg
mov
pop
or
movsb
mov
cmp
aam
push
popa
pop
andb
add
mov
push
insl
or
cmp
mov
and
movsl
jne
sbb
push
jno
cmp
arpl
fwait
mov
lds
fucom
icebp
sbb
aam
fs
sub
out
sub
inc
bound
add
hlt
repnz
xchg
mov
mov
lea
ret
mov
hlt
adc
mov
mov
ja
push
pop
sbb
cli
mov
inc
rclb
push
ss
fs
dec
or
jp
stc
test
dec
or
fwait
push
out
icebp
mov
popf
outsb
enter
test
subl
mov
mov
and
cwtl
cmp
sbb
jl
jmp
adc
out
icebp
pop
fbstp
gs
sarl
scas
cmp
divl
jecxz
lods
adc
adc
int3
or
mov
insl
cmc
loop
mov
out
and
xor
or
jecxz
dec
or
add
imul
icebp
adc
sbb
add
sbb
xchg
cmpl
mov
inc
xor
cmc
jge
call
xor
pop
gs
rorl
push
sbb
lret
lret
cmp
cmp
xorl
cltd
mov
xor
jl
outsl
pop
add
mov
mov
push
fcmovb
mov
push
xchg
add
call
arpl
ljmp
mov
mov
rclb
cmp
sahf
cmpsb
jbe
mov
and
jmp
push
popf
sahf
mov
dec
loop
nop
xor
push
imul
fistpll
jecxz
cmpsb
cmp
cmc
dec
leave
cmp
push
xchg
lock
lds
fidivs
and
and
sbb
scas
fmuls
stos
and
or
adc
sarl
fcmovu
lods
add
sub
cmpsl
scas
hlt
adc
inc
xchg
lahf
addl
xchg
lods
jecxz
popf
test
and
cmp
outsl
push
push
or
pusha
pop
lock
fs
inc
add
mov
outsb
incb
or
ret
fnsave
dec
xor
shll
add
fimull
test
xor
mov
inc
xchg
mov
cmpsb
or
push
iret
push
dec
mov
out
mov
sub
adc
mov
ljmp
dec
lret
mov
xor
movq
je
add
fisubl
repnz
jecxz
loop,pt
enter
xor
loopne
lds
mov
mov
pop
dec
iret
dec
mov
sahf
jge
pop
mov
dec
mov
scas
test
sti
orb
sbb
cmp
inc
mov
mov
insl
mov
mov
push
or
pop
jp
mov
cmc
jmp
test
mull
jmp
or
xor
add
add
xchg
jne
pop
out
mov
mov
inc
inc
fistps
sub
mov
sbb
or
dec
into
cmp
loopne
int3
push
xchg
dec
xlat
cmp
cs
adc
ljmp
add
xor
jbe
icebp
xor
add
jae
sub
shlb
sbb
xor
test
les
jbe
out
outsl
fwait
pop
sbb
sbb
movsb
mov
scas
and
push
ljmp
and
subl
loopne
mov
pop
dec
fstpl
sbb
cmp
fisttps
jnp
movq
sub
aaa
sbb
mov
mov
mov
pop
lret
mov
cli
test
fsubp
jp
les
jp
leave
jnp
push
fsubrl
and
jo
shrb
insb
cs
xor
stos
mov
lea
addr16
xchg
lahf
test
ret
cmp
adc
adc
sbb
push
mov
mov
jp
push
add
int3
inc
stc
xor
fistps
add
lcall
pop
cmp
lock
mov
pop
mov
inc
loopne
sahf
xlat
jne
loop
jo
fistpl
ljmp
lds
sub
jne
mov
lahf
lods
pop
cmpsb
and
pop
ja
jnp
pop
or
lods
sbb
out
sbb
pusha
and
test
sbb
popf
xor
mov
adc
icebp
mov
or
loopne
fistpll
enter
pop
inc
inc
bnd
hlt
lea
roll
lock
leave
cmp
and
in
fwait
push
sub
push
ret
dec
pusha
pusha
add
ja
mov
add
inc
int3
test
mov
movsl
sbb
insb
push
push
aam
fstpl
mov
jle
int
and
scas
data16
mov
or
out
cmpsb
xlat
ficoms
cwtl
movsb
cmp
mov
icebp
icebp
shll
push
dec
sub
pop
sbb
nop
dec
xchg
clc
mov
imul
xchg
xchg
ficoml
pop
ja
mov
mov
incl
shrl
movb
pop
push
mov
and
outsb
shll
sbb
lods
sbb
rcrb
or
in
add
loop
and
aas
lock
cltd
mov
xchg
mov
out
ss
out
out
cmp
es
imul
push
movsb
inc
mov
pop
mov
cltd
push
pop
cmp
mov
in
stc
mov
stc
bound
inc
and
lods
mov
adcb
xchg
jp
test
loop
mov
fdivl
jmp
test
mov
out
je
stos
add
add
inc
movsb
xchg
or
xchg
mov
jecxz
cli
sbb
sarl
cmp
movsl
inc
mov
xor
sbb
adc
cmp
test
fucomp
orl
mov
call
sub
xchg
cmp
xchg
icebp
push
insl
jns
cwtl
cmp
insl
pop
cmp
sub
repnz
push
dec
jp
fsubr
fdivrl
outsl
sbb
test
into
xchg
jb
sbb
jecxz
int
inc
movsb
data16
and
notl
push
hlt
cmp
mov
pusha
mov
hlt
mov
lcall
and
xchg
repz
fdivs
xchg
loope
push
mov
popa
es
loopne
test
mov
push
lds
out
push
loop
std
imul
or
negl
adc
scas
js
inc
movzbl
jae
mov
pop
dec
insl
mov
iret
push
xorb
mov
cmp
xchg
push
mov
aaa
out
lock
push
inc
push
pop
mov
notl
mov
imul
push
inc
jle
pop
mov
stos
mov
movsb
pop
je
dec
xor
enter
sub
mov
faddl
arpl
loop
push
test
sub
mov
pop
push
aas
dec
mov
scas
js
sbb
aas
mov
adc
std
sbb
bound
or
lcall
mov
and
inc
mov
mov
sub
int3
orl
adc
dec
ds
push
pop
sbb
push
inc
jge
add
iret
sub
sbb
pop
push
stos
and
push
xchg
fmull
pop
inc
or
xchg
jo
andl
scas
sbb
pop
xchg
mov
xor
test
cmp
mov
and
gs
mov
fists
std
jle
mov
ja
mov
loope
push
mov
hlt
inc
mov
std
popl
ljmp
call
jp
rcrl
sbb
divb
and
adc
jae
adc
and
stos
xor
fisttpl
mov
cmp
call
dec
or
add
mov
push
test
add
pop
add
and
aad
jbe
mov
mov
test
test
mov
push
lret
in
es
adc
mov
xor
pop
mov
hlt
shll
movsl
mov
out
pushl
pop
lret
inc
dec
add
jns
js
push
das
hlt
ret
or
and
stos
js
andl
mov
scas
iret
xchg
push
lock
subl
sub
mov
repnz
fwait
jl
mov
cmpsl
cltd
cmp
cmp
xchg
cmp
cmc
dec
xchg
out
push
shl
fs
xchg
xor
mov
cmp
fildl
add
addr16
stos
inc
imul
int3
pop
pop
mov
nop
ja
test
out
and
and
inc
and
test
jnp
scas
xor
mov
xchg
iret
pop
loopne
or
mov
xchg
sub
mov
out
dec
dec
popa
mov
mov
outsl
adc
jb
sub
push
push
lods
imul
adc
push
mov
mov
push
xor
xchg
insb
jle
icebp
mov
fnstcw
std
sbbl
inc
sbb
out
dec
push
ss
adc
adc
ja
movsb
push
out
mov
iret
aas
xor
dec
movsl
adc
fcomp
arpl
test
repz
adc
out
add
arpl
jne
int3
out
dec
aam
mov
daa
outsb
gs
dec
xor
and
test
cld
jno
nop
sub
in
and
mov
cli
jge
xchg
mov
and
fisubrl
jb
sub
aas
loope
and
cwtl
pop
xor
sti
inc
jae
pop
fs
test
fmuls
out
scas
push
scas
cmp
outsl
addr16
fs
add
jge
sub
sbb
mov
jb
and
popa
test
lahf
shr
add
push
imul
and
and
sbb
mov
adc
fsts
xor
fidivrs
imul
aam
xchg
aas
leave
push
push
push
shl
out
cmp
mov
js
stos
cs
adc
add
ds
test
testl
xchg
or
and
cmc
mov
add
jl
push
mov
adc
push
popf
cwtl
pop
jns
jo
mov
inc
leave
out
mov
pop
jae
sbb
push
mov
sub
mov
xchg
add
push
sbb
adc
adc
sbb
jle
sub
push
outsl
and
mov
add
movsl
push
sbb
pushf
and
mov
movl
pop
xor
ret
es
pop
cli
stos
std
add
adc
lods
pop
lea
push
std
ja
shrl
std
push
and
popa
sub
in
clc
inc
cwtl
inc
fs
dec
pop
cmp
dec
pop
shr
inc
pop
ss
dec
sbb
dec
mov
inc
dec
pop
mov
push
pop
ja
and
lahf
jbe
in
dec
mov
dec
pop
dec
test
in
lret
aaa
inc
enter
and
fs
pop
in
or
gs
xchg
inc
into
lahf
into
lods
mov
fwait
lret
jge
out
cmp
dec
mulb
and
sbb
gs
jbe
aas
divl
fisttps
dec
pop
xchg
gs
test
mov
and
mov
xchg
pop
jmp
int3
mov
or
sbb
cli
adc
lcall
stc
pop
test
in
movsb
stos
pusha
shlb
lods
arpl
inc
lret
dec
jg
out
push
test
inc
xor
test
cmp
popf
out
icebp
cld
bound
cmpsl
mov
test
sbb
dec
and
adc
mov
add
add
iret
sbb
ret
shlb
ficoml
lret
dec
lret
push
mov
mov
clc
lea
sub
andb
xor
psubsw
mov
pop
mov
std
sub
adc
inc
jno
pushf
mov
dec
xchg
mov
jmp
jge
jae
outsb
popa
mov
push
or
push
push
sub
add
xchg
or
loop
add
add
push
mov
add
in
push
ret
or
imul
pop
fistl
cltd
es
add
mov
bound
cmc
sbb
lock
push
mov
push
or
xchg
jg
cwtl
int3
or
into
push
addb
mov
dec
xchg
out
clc
je
cmp
jo
push
mov
xorl
test
push
add
lods
mov
leave
dec
xchg
call
stc
pop
out
push
push
push
jbe
mov
movsb
nop
loop
pop
scas
jno
aam
pop
push
enter
cmp
adc
or
cltd
daa
dec
jnp
pop
xchg
lods
push
loop
repz
push
pop
movsl
add
enter
aam
pusha
popa
push
orl
call
and
pop
push
out
dec
les
enter
jg
dec
jo
std
jno
pop
mov
mov
imul
cli
sbb
cmp
xchg
sub
dec
fcmovbe
repz
cmp
push
pop
ja
sbb
out
in
stos
fimuls
jns
lods
dec
adc
mov
and
sbb
nop
lret
aas
push
test
inc
in
push
pop
and
and
pop
jmp
shrb
cmpsb
repnz
xor
test
pop
sbb
dec
adc
inc
das
sbb
cmp
data16
add
cs
jne
insb
test
test
cmp
mov
je
loop
and
roll
loope
push
call
mov
mov
xor
movsl
les
xor
push
jp
lret
addr16
pop
loop
loop
mov
in
aas
pop
jbe
pop
pop
lds
lahf
adc
adc
enter
sbb
out
lock
movsb
jbe
stos
inc
mov
in
int3
repz
pop
mov
mov
cmp
ss
jno
cltd
add
loop
mov
mov
adc
pop
add
jg
push
sarb
lcall
cmp
iret
loope
jge
bswap
out
sbb
repnz
fwait
movsl
in
aaa
outsl
mov
repnz
dec
loop
sub
mov
outsb
mov
das
test
lcall
lcall
cltd
bound
repz
and
mul
mov
mov
jae
imul
sub
jne
dec
jmp
adc
jnp
fistl
pop
jmp
or
loopne
mov
fs
xor
jo
xor
mov
xchg
fidivrl
jmp
cmp
mov
pop
clc
insb
std
inc
xor
cmpb
mov
sahf
in
aas
scas
mov
inc
pop
and
iret
jo
stos
ret
sar
jnp
fidivl
sub
xchg
dec
mov
mov
popf
aam
fnstcw
pop
inc
loop
pop
add
jecxz
lcall
out
adc
test
xor
out
lret
cmp
jb
lods
cmp
test
call
dec
imul
xor
xor
lods
js
xchg
cmpsl
jne
cmp
jle
adc
cli
clc
mov
hlt
pop
push
stc
cmp
push
out
xchg
cld
data16
or
inc
pop
sbb
mov
inc
push
fwait
insl
dec
push
push
sub
xchg
inc
lahf
push
jl
dec
call
xchg
sub
pop
loopne
fs
add
xchg
std
into
gs
mov
push
xchg
std
cmp
ss
or
test
lret
push
es
cmp
outsl
fadd
lret
nop
inc
pushf
dec
cmpsl
icebp
and
mov
sub
dec
jle
xor
mov
mov
aad
daa
aaa
inc
adc
movsl
inc
add
mov
add
xchg
in
sub
ljmp
xor
popf
add
inc
ds
enter
outsl
inc
negb
or
dec
adc
loope
inc
in
rep
xor
int
dec
lods
mov
pop
or
andb
mov
sahf
mov
and
clc
fnsave
scas
and
xor
sbb
xor
sbb
mov
mov
popa
imul
pushl
scas
hlt
pusha
sub
inc
test
aaa
cltd
rcr
lea
mov
pusha
cwtl
cs
sub
jne
data16
xchg
mov
push
push
in
aaa
lea
and
mov
pop
inc
xchg
lock
jo
cmp
icebp
mov
out
lret
jecxz
movsb
std
ret
cmpl
inc
inc
iret
mov
sbb
sbb
mov
xchg
cs
lods
aad
mov
push
mov
jnp
in
mov
xchg
mov
nop
in
add
xorl
cmpsb
loope
jle
ljmp
jp
stc
jae
or
aas
in
out
push
adc
mov
sbb
in
sbbl
mov
mov
lods
inc
repnz
adcb
andl
sbb
leave
xor
in
jmp
inc
add
test
movsb
and
add
mov
cmp
mov
cmp
cli
xchg
jmp
add
push
xchg
cmc
lcall
js
sbb
movsb
push
pop
mov
lock
ljmp
push
pop
sbb
ret
lods
jp
inc
es
scas
mov
icebp
rorb
jg
ret
pop
das
cld
push
enter
insb
dec
ljmp
cmc
mov
inc
adc
fwait
aaa
call
adc
insl
mov
mov
push
jae
sbb
xor
push
xchg
int3
xlat
arpl
shlb
cli
cmp
rorl
or
imul
gs
popa
je
fs
sbb
sub
lds
je
sahf
xchg
divl
sub
pop
movsb
pop
inc
lock
mov
push
jle
sahf
jo
xor
loop
xor
ret
test
push
lret
push
lock
fsubs
scas
adc
xchg
xor
add
out
or
push
mov
sbb
cmp
lock
cmp
pop
sahf
lahf
movb
cmp
push
adc
mov
lret
or
cmc
bound
mov
mov
clc
jnp
lcall
and
addr16
lods
test
cmp
xor
xchg
push
int
outsb
dec
les
pop
push
scas
xchg
mov
lock
lcall
jge
les
lods
push
movd
inc
pop
jae
aam
xchg
or
xchg
sbb
lahf
pop
call
in
xor
insl
cmpb
icebp
jne
cmp
push
jle
loop
xor
mov
adc
lret
xchg
mov
movsl
adc
jl
pop
pushf
int3
push
cmc
sbb
outsb
mov
mov
mov
push
div
out
xor
mov
or
push
dec
enter
rorb
test
std
jp
lahf
std
gs
push
fidivrl
subl
jne
sub
fs
sbb
mov
add
add
mov
add
lea
mov
jle
fsubp
push
pop
cmp
imul
shll
ret
lods
jmp
push
or
sub
fldcw
rolb
add
push
pusha
rol
ja
dec
mov
stos
pop
sbb
xor
les
jb
push
out
test
xchg
add
pop
xchg
fistl
xlat
mov
js
push
xchg
or
aaa
lock
jb
imul
mov
adc
mov
pusha
pop
xchg
imul
insb
xchg
outsb
jb
push
inc
divb
pop
call
bound
pusha
sti
mov
mov
sub
loopne
or
rclb
jns
cmc
pop
mov
in
cmp
orb
adc
es
xchg
lds
push
pop
sbb
xchg
add
sbb
mov
sub
mov
mov
punpckldq
pop
mov
pop
popa
inc
pushf
leave
adc
jns
insl
pushf
loopne
clc
adc
xchg
cmp
ss
or
imul
sahf
sarl
imul
sbb
shl
std
test
addr16
push
sub
push
push
adcb
xchg
push
inc
je
inc
cmpsl
mov
xor
inc
cmp
xchg
pop
cs
push
fdivs
outsl
jne
jnp
inc
push
mov
jecxz
je
jns
call
xchg
dec
hlt
jp
enter
sbb
xchg
and
ljmp
push
and
push
dec
add
push
jo
je
bound
fucomi
ljmp
decl
mov
jnp
repz
adc
int3
add
hlt
icebp
adc
cmp
pusha
leave
and
and
dec
sub
or
lods
int3
aaa
ffreep
je
dec
mov
push
lcall
in
and
hlt
call
shl
sbb
pop
sub
jno
or
mov
sahf
enter
sbb
mov
or
and
enter
xchg
gs
or
daa
sub
cmp
xchg
fstpt
fisubs
push
or
inc
add
mov
out
cld
cmp
lahf
fs
testl
push
mov
movsl
and
pop
and
pop
popa
cmp
mov
test
pop
jp
jmp
std
add
mov
into
xchg
sbb
rorl
sbb
mov
push
cwtl
mov
inc
or
inc
pop
cmp
lea
dec
pop
loop
fs
dec
fsubrp
mov
out
push
add
cs
pushf
pop
sub
mov
dec
outsb
fs
push
andl
inc
pop
xor
pop
xchg
outsb
invd
jecxz
or
fisubrl
pusha
inc
and
dec
jne
dec
mov
pop
cmp
cs
data16
mov
inc
adc
daa
ljmp
inc
jno
mov
imul
movsl
in
daa
push
test
mov
dec
adc
cmc
add
and
lret
xor
ret
dec
cmp
pop
stos
call
packssdw
iret
ss
mov
fs
bound
fnstcw
add
bound
jp
xor
mov
fmull
gs
outsl
jp
mov
push
aaa
inc
loop
fsub
push
cmpsb
add
loopne
push
test
movl
fsubrs
and
adc
dec
mov
and
ja
popa
xor
jg
sar
add
and
les
rolw
xor
adc
push
bound
repz
ljmp
xchg
mov
ficoml
inc
xchg
adc
and
push
hlt
xchg
push
xor
add
mov
pop
loop
je
int
xlat
mov
inc
cmpsb
int
inc
outsb
in
repnz
sbb
sti
fcompl
andl
mov
sbb
push
mov
pop
add
or
mov
xchg
or
fwait
test
mov
or
jl
aaa
adc
cmp
push
jle
inc
pop
jno
inc
fwait
cmpsl
ret
sti
out
inc
inc
mov
pop
les
ret
ret
scas
orl
jnp
mov
shl
es
ficomps
inc
fst
fisttpl
pop
fdivs
mov
sbb
sahf
mov
rorl
xlat
mov
cmp
daa
push
test
inc
pop
push
in
push
shl
and
cmp
push
in
push
and
in
pop
lds
in
icebp
sub
iret
repz
filds
repnz
mov
scas
sub
inc
push
loopne
aas
lods
xchg
lcall
cmpsl
sgdtl
stos
adc
popa
aas
sbb
jl
ljmp
sbbl
jle
fwait
mov
adc
mov
icebp
test
in
cltd
pop
je
pop
xchg
ja
scas
cmpsb
movsb
cmp
mov
lcall
mov
mov
jl
jmp
jne
movsb
shrl
das
sahf
mov
push
icebp
movsl
cwtl
lods
shr
and
andl
xchg
icebp
mov
out
cli
jmp
adc
sbb
arpl
dec
cmpsl
stc
inc
aas
inc
subl
push
fiaddl
mov
rorb
mov
bound
dec
pop
insl
lahf
orb
mov
repz
push
inc
mov
jge
incl
addr16
repnz
adcl
das
es
ljmp
mov
daa
fimull
pop
mov
xor
xchg
loop
or
notb
or
mov
imul
out
ds
call
and
pop
cmp
ljmp
add
test
popa
xchg
sbb
in
loopne
cmpsl
dec
and
sub
push
lret
sub
push
or
insb
ljmp
mov
dec
sbb
mov
sbb
out
int
jno
adc
fxch
mov
aam
mov
xchg
cli
fsubrs
shrb
aad
and
and
popa
adc
test
mov
and
out
call
popa
in
std
adc
mov
jge
out
into
cltd
pop
inc
push
mov
mov
aam
js
ret
cmc
push
popf
leave
cmpsl
mov
jg
sar
mov
pop
xorl
push
xchg
loop
movsb
aad
out
jne
rol
mov
xor
jns
mov
sbb
leave
ljmp
rclb
out
xorl
shll
addr16
push
imul
dec
mov
mov
das
int3
pop
sti
jno
cld
mov
pop
frstor
pop
repz
dec
into
fbstp
das
cmc
jnp
test
cmp
inc
enter
adc
out
pop
insb
dec
or
jle
in
lds
je
cmp
sub
test
sbb
jecxz
enter
fimuls
lret
pop
aam
pop
mov
jecxz
rolb
sub
mov
lods
push
lock
ret
pushf
ss
pushf
lret
jae
lahf
jp
and
mov
jle
cmp
test
sbb
sbb
mov
daa
add
jmp
or
leave
test
das
add
bound
mov
sub
cmp
aas
and
jle
pop
mov
dec
clc
pop
cmp
pop
es
jge
ficomps
cwtl
sbbl
sbb
cmp
mov
mov
dec
jnp
xor
loope
inc
push
imul
xor
xor
in
out
call
in
sub
lds
cwtl
dec
sti
fisubrl
cmp
insb
sub
fbld
lret
xchg
push
aaa
aam
inc
popa
mov
cmc
pop
cmpsl
sti
int3
sbb
or
dec
inc
ret
cs
je
mov
in
sbb
mov
cwtl
test
add
test
inc
add
dec
stc
xor
push
dec
mov
add
cmc
dec
fmull
fildll
jno
push
push
sub
or
leave
sbb
test
dec
imul
lods
insb
push
fists
lret
pop
add
push
jae
mov
aas
jno
or
scas
imul
ds
jg
sti
xchg
daa
loope
jnp
push
push
adc
repz
or
aad
xchg
fcomp
fmull
sar
andl
mov
push
scas
xlat
ret
adc
movsl
dec
fistpl
mov
jl
jo
sub
cmpsb
outsb
xchg
cld
dec
into
add
cmp
icebp
test
rcrb
xor
pop
cli
sub
xchg
xor
mov
inc
hlt
dec
xchg
cmpsl
jmp
ss
test
lods
cwtl
mov
sbb
pop
push
pop
and
mov
cmc
fsubrp
mov
movsb
jbe
mov
pop
add
pop
dec
in
adc
add
inc
cmc
cmp
bound
sub
push
test
and
sbb
push
push
jmp
cmpsl
add
mov
jle
scas
pusha
mov
out
or
and
or
dec
scas
xor
lahf
cmp
xlat
inc
mov
push
fwait
testb
rolb
inc
fwait
push
or
leave
bound
pop
icebp
pop
adc
pop
outsl
inc
mov
fidivs
lock
enter
in
push
ficomps
sahf
loop
push
inc
push
mov
or
stos
push
mov
mov
iret
aam
lods
dec
adc
sub
cmpsb
outsb
and
inc
in
cs
jno
cmpsl
mov
test
or
sub
stos
lds
and
cmc
das
mov
fidivl
sbb
lret
cwtl
push
mov
add
mov
jne
xchg
xor
mov
inc
sbb
push
loope
and
pop
repz
and
ja
aas
xor
stc
mov
punpckhdq
in
movsb
jle
mov
frstor
jnp
ds
dec
fsubrl
and
stos
lock
ljmp
icebp
cld
sar
adcb
test
add
mov
cmc
xor
into
mov
jp
push
push
out
mov
jne
lods
add
jge
aad
sti
xor
loop
mov
push
fidivrl
gs
or
pop
xor
das
push
cmp
pop
repnz
sbb
pusha
mov
dec
hlt
insl
icebp
sub
aaa
xor
in
push
imul
xor
add
adc
pop
in
inc
ret
push
jne
dec
lret
xlat
and
shll
xchg
cmp
test
daa
add
mov
mov
ret
lock
cmp
xchg
addr16
cmp
hlt
lret
push
dec
mov
xchg
xchg
push
push
xor
add
test
addr16
xchg
xchg
sbb
repz
cmp
dec
pop
push
or
and
inc
xchg
sti
fiadds
mov
ds
decl
cmp
int
out
out
pop
pop
push
sarb
stos
push
adc
stos
push
jmp
pop
mov
insl
rolb
movsb
or
ljmp
push
pop
pop
pop
mov
jg
jg
stos
and
xchg
mov
fcmovnbe
jno
test
mov
mov
sub
add
add
in
data16
ret
pop
fxch
mov
xchg
push
cmp
mov
add
dec
fbld
inc
inc
jmp
xlat
test
int3
js
fmull
xor
pop
stc
xlat
ss
mov
xchg
jnp
push
push
mov
xchg
cmp
test
inc
push
add
mov
lods
sbb
movb
out
cmovg
mov
jbe
das
stos
xor
xchg
imul
jmp
mov
cltd
dec
imul
js
jle
mov
push
pusha
icebp
add
xchg
jnp
sbb
mov
jl
and
inc
pop
mov
test
add
test
lahf
mov
xlat
push
mov
dec
enter
insl
cs
fcmove
inc
rorb
push
fisttpll
mov
inc
mov
pop
lret
fwait
icebp
loopne
mov
loop
ret
test
loope
ds
icebp
iret
cmpsb
mov
push
ja
mov
sbb
pop
pushf
sahf
mov
mov
pop
inc
mov
jle
int3
pop
mov
pop
xor
out
push
sahf
sbb
sahf
inc
push
bound
les
xor
mov
rorb
and
mov
mov
lods
sub
mov
frstor
es
jmp
jbe
jae
or
mov
mov
sahf
mov
into
xchg
jle
sub
pop
mulb
or
pushaw
lret
out
cmp
cmp
jns
xchg
and
flds
mov
lock
icebp
fmuls
xchg
mov
xor
add
mov
mov
loopne
cmp
push
mov
pop
cmpsl
fwait
mov
dec
and
sahf
subb
in
pmullw
mov
pop
loopne
ljmp
repnz
fldcw
add
cmp
movsl
cmp
in
or
jne
lret
or
push
inc
lahf
addr16
cmp
outsl
cs
add
mulb
push
in
and
in
mov
cli
inc
pusha
ljmp
inc
push
roll
cld
int
xor
jne,pt
aas
jo
add
mov
adc
loop
sub
aad
popa
push
outsl
sbb
repnz
inc
sbb
jne
cli
sbb
mov
mov
scas
aaa
clc
stos
xchg
movsb
jne
aaa
adc
andb
sub
dec
jle
scas
inc
add
pop
pop
mov
imul
inc
fnstenv
or
push
loope,pt
in
out
sbb
js
jns
push
inc
addl
pinsrw
sub
out
and
cld
shrb
test
push
aaa
xchg
call
adc
xor
push
mov
mov
mov
mov
push
pop
push
aad
outsb
fnsave
in
or
popf
push
mov
sbbl
or
movsl
push
adc
out
mov
jle
aaa
ret
or
sti
insb
jne
xchg
xchg
sbb
cmp
hlt
mov
pop
cmp
stos
pop
pop
ja
or
jnp
stos
int3
ret
xchg
jmp
cmp
ret
div
lds
mov
lret
stos
push
mov
cmpsb
jle
pop
stos
dec
mov
dec
daa
dec
sbb
jle
jae
pop
inc
jns
cmc
ljmp
push
push
stos
stos
lret
stos
sub
and
imull
fimuls
in
jnp
loop
jge
inc
add
rcl
movsl
sbb
mov
push
push
push
fadds
jmp
imul
mov
add
cwtl
in
repnz
jne
xchg
es
add
xchg
fildl
ja
fcmovb
mov
add
stos
and
addr16
mov
mov
mov
or
std
notl
dec
and
lcall
mov
jge
mov
aad
out
adc
fnstenv
test
pop
pushf
jp
or
sub
mov
test
decb
push
mov
dec
sbb
lret
push
jl
pop
pop
das
inc
xchg
ljmp
icebp
movsb
in
cld
shlb
cli
mov
fildll
aas
inc
mov
cltd
add
or
rcr
shl
sti
xor
cmp
inc
popf
or
aad
push
sub
sbb
imul
and
dec
and
cmpl
arpl
mov
incl
xor
icebp
pusha
inc
gs
push
pop
sub
pop
popf
pushf
mov
cltd
cwtl
mov
add
dec
inc
cld
pushf
add
dec
adc
xchg
stc
lahf
sub
test
jle
pop
sub
cwtl
test
pop
lcall
fistps
inc
insb
pushl
aaa
mov
sahf
inc
lods
test
jge
add
mov
insb
inc
add
bound
jmp
sbb
xchg
ret
sbb
incb
test
sbb
push
loopne
xor
push
or
mov
hlt
arpl
cmp
insb
add
mov
orb
cmp
nop
cmp
mov
mov
mov
mov
dec
jl
mov
and
jns
adc
dec
cmpsb
mov
jmp
sbb
or
and
inc
jle
in
inc
jno
stos
inc
jecxz
xchg
inc
adc
outsb
out
add
inc
fcomps
test
int
out
clc
fdivrp
cmpsl
ret
or
cmp
repz
xchg
test
lret
add
out
cmp
cli
fstl
shlb
jno
sub
push
fwait
dec
dec
loopne
fwait
add
test
sbb
push
call
mov
inc
sti
loopne
mov
mov
test
sbb
lds
bound
popf
push
dec
xchg
movhps
sarb
cmpsb
enter
imulb
stos
in
fucom
dec
fidivl
jns
fneni(8087
lods
jge
cwtl
fwait
movsl
sar
rcrb
lahf
stos
sarl
daa
xor
int3
sub
xor
lea
jmp
xchg
push
lcall
xchg
sub
jecxz
cmp
cmp
pop
jb
and
xchg
pop
xchg
cltd
bound
inc
xchg
les
adc
mov
movsb
sbb
out
push
fstps
std
fwait
add
lea
fcoml
cld
arpl
mov
hlt
xchg
cmp
shl
std
cmp
inc
mov
jle
mov
mov
add
xchg
push
cmc
adc
mov
xchg
adc
in
ret
adc
or
mov
leave
mov
mov
loopne
mov
mov
mov
out
mov
lods
add
cwtl
arpl
mov
xor
push
inc
pop
cmp
ret
inc
mov
push
cmp
jmp
arpl
mov
frstpm(287
in
sahf
mov
rcll
push
adc
in
sbb
xor
cmpsl
sarb
repz
retw
cmp
cmpsb
andl
mov
adc
pusha
xchg
push
mov
or
nop
pop
test
cmp
or
sahf
xchg
outsl
arpl
pusha
mov
test
mov
mov
jg
xchg
shrl
dec
mov
xchg
std
sub
aas
xor
fadds
adcb
dec
packuswb
sub
into
insb
loopne
jno
sar
iret
cmpsl
xchg
jne
je,pn
cli
or
in
test
lods
and
mov
out
shl
and
in
insb
add
loop
mov
inc
hlt
pop
mov
and
cmpsb
or
out
stc
ds
pop
xlat
scas
lods
stc
jmp
outsb
sub
cmp
shll
sbb
loope
push
ss
rcrl
rcll
aas
jmp
dec
sub
imul
add
fst
arpl
out
pop
movsb
or
hlt
mov
fwait
sbb
pop
cmp
scas
lds
push
xchg
stc
in
stc
sbb
sbb
addr16
cmp
inc
scas
jp
out
movsl
cmp
inc
and
mov
shlb
int3
mov
cmpsl
das
fwait
lods
pushf
pop
out
in
jmp
loop
repz
pop
mov
or
negb
jae
xchg
sahf
into
stos
dec
push
or
jbe
push
mov
adc
jb
movsb
pusha
xchg
cmc
stc
and
incb
in
sbb
mov
pop
cmp
jns
test
jns
lret
sbb
cmpsl
mov
mov
sbbl
popf
cmp
xorb
popa
addl
jecxz
imul
inc
faddl
mov
rcll
in
cmp
xchg
lret
pop
lret
mov
arpl
cld
xor
test
std
xchg
mov
adc
ds
ret
jns
mov
into
ss
cmp
jnp
sbb
jnp
mov
push
ret
daa
xor
inc
sub
cs
stos
push
inc
pop
push
cmp
pop
lret
push
cmp
arpl
lds
es
loop
jb
movsb
cs
icebp
imul
and
jl
add
push
xor
jle
popa
pop
popa
mov
sar
add
dec
pop
out
outsb
pop
add
icebp
and
fs
cli
adc
and
js
int3
pop
xchg
mov
sub
nop
mov
pop
leave
nop
add
and
or
inc
mov
jnp
fadds
push
fsub
mov
add
jns
or
mov
loop
repz
mov
vmaxsd
ljmp
scas
xor
cmpsb
cltd
iret
sti
cmpsb
push
xchg
test
sbb
ret
ret
adc
pop
adc
add
and
mov
test
add
mov
adc
mov
data16
cld
inc
inc
xor
in
pop
sbb
dec
jecxz
xor
test
out
pop
daa
xrelease
stos
movsl
nop
test
xchg
sbb
cld
inc
inc
std
arpl
pushf
and
rcll
push
mov
enter
mov
push
dec
test
sub
mov
test
testl
stos
and
dec
dec
sbb
inc
test
mov
mov
mov
decl
rcll
mov
ja
mov
jle
or
sub
or
add
sbb
scas
ds
jecxz
sub
out
fistpll
adc
lods
into
lods
data16
inc
sub
daa
rcl
xor
pop
push
xlat
push
mov
addr16
ret
mov
sbb
test
push
pop
xchg
add
mov
push
sbb
jp
cltd
shl
inc
mov
test
inc
dec
xchg
ljmp
es
loop
cmp
mov
xchg
inc
popf
or
lahf
dec
clc
mov
push
mov
std
mov
inc
fcoml
push
scas
std
daa
stos
inc
inc
dec
adc
jbe
jl
test
fistl
mov
orl
or
dec
xor
xor
sbb
cmp
pop
cmc
xor
jle
dec
push
fildl
cmp
dec
jg
jecxz,pt
dec
daa
jle
jge
mov
adc
int3
xchg
loope
test
pop
mov
je
aad
imul
or
mov
into
mov
rorb
fldt
add
lds
lea
mov
jb
scas
xlat
or
and
loopne
sub
addr16
mov
push
fstp
iret
shrl
or
repz
jb
inc
iret
push
lea
adc
arpl
inc
mov
and
pop
xchg
xor
addr16
or
xor
xor
lret
inc
or
rorl
subb
arpl
sarl
dec
mov
pop
js
pusha
testl
les
xchg
lret
stos
movl
ficomps
jb
sub
out
out
inc
mov
data16
out
je
cmpsb
pop
popa
cli
ja
minps
rclb
sahf
mov
mov
jl
xchg
inc
fidivrl
sbb
push
flds
rclb
push
sti
pop
arpl
or
insb
cmpsb
inc
dec
add
les
loop
ret
dec
test
repz
add
aaa
inc
mov
mov
mov
mov
jno
inc
ja
fidivrs
jp
cmpsl
mov
push
in
push
lods
jle
je
pushf
dec
decl
decb
and
mov
mov
cmp
mov
push
leave
xchg
stos
arpl
mov
std
inc
out
xor
sbb
xchg
add
fsts
stos
movsb
es
mov
cmp
sub
mov
dec
das
movsb
xchg
shrb
mov
enter
lds
cltd
test
xchg
dec
inc
pop
outsb
dec
ljmp
cmp
stos
xchg
sti
mov
cmp
mov
icebp
movb
in
int
fidivrs
pop
mov
sub
push
jns
pop
pop
add
push
gs
xchg
adc
stc
stos
jo
movsb
lds
dec
cmc
aas
ret
loope
cmp
and
je
in
sbb
or
mov
fdiv
add
inc
stos
sub
adc
popa
push
xchg
fsubl
pop
add
clc
pop
xchg
add
in
pop
gs
loope
in
pop
inc
mov
ficoms
fstpt
cltd
pop
mov
jne
sbb
testb
sbb
mov
mov
add
push
push
pop
loop
loop
and
in
les
cmc
pop
xchg
and
cmp
loope
add
and
xorb
inc
cwtl
push
push
mov
popa
sarw
inc
push
jmp
scas
std
push
sbb
mov
stos
cmp
push
lahf
data16
mov
aaa
push
test
sarl
cmpsl
ret
push
out
dec
mov
insb
add
shll
jbe
lret
xchg
sub
adc
sub
pop
adc
xchg
jecxz
sub
dec
cmp
and
mov
push
inc
dec
loop
sbb
rcrb
jecxz
jae
mov
cld
hlt
xor
inc
mov
lret
pop
sub
xor
ror
lock
sti
insb
and
std
sahf
xchg
es
pop
daa
mov
rcl
mov
cmp
outsb
hlt
xor
aam
xor
addr16
das
cld
sbb
xchg
cs
ds
in
fldenv
pop
add
nop
sbb
pop
out
jno
out
test
test
xor
pushf
inc
std
fwait
inc
push
adc
mov
inc
push
xchg
xchg
inc
sub
imul
das
imulb
shlb
ret
mov
scas
jo
cmp
dec
fcomip
sbb
ret
iret
iret
cmp
sbb
xchg
add
mov
int
dec
mov
xchg
xor
jp
jae
dec
gs
mov
cmp
lds
mov
in
pop
sbb
shl
add
add
pop
or
adc
mov
jl
das
add
idivl
cmpsb
mov
repnz
xchg
push
movsb
dec
in
adc
sub
inc
xchg
ja
dec
cltd
mov
outsb
iret
addr16
cltd
adc
loope
cmp
xor
pop
xchg
repz
mov
pop
fildll
jns
xor
xor
xchg
and
ds
pavgb
mov
mov
loop
adc
mov
addr16
in
inc
add
in
push
fisubl
daa
outsb
pop
pop
push
or
jne
adc
stos
rcrl
fistps
inc
jle
mov
rcrl
sahf
out
ror
sbb
imul
inc
jge
fwait
xchg
insb
push
daa
cmp
loop
dec
and
inc
movsl
insb
ret
and
loope
lods
cs
pop
lods
cld
in
repz
mov
popa
test
pusha
cmpsl
push
sahf
popf
adc
bswap
nop
add
xchg
pop
fnstcw
and
outsb
xchg
cmp
dec
inc
sub
fisubs
in
scas
and
sub
jbe
add
fsubs
in
lret
rol
adcl
call
mov
inc
popf
mov
outsb
lcall
push
movsl
adc
xchg
popa
addr16
enter
movsl
sub
cltd
dec
fwait
jbe
pop
scas
jp
test
xor
int3
jo
push
and
mov
mov
pop
neg
push
cmp
std
mov
hlt
lea
pop
mov
data16
dec
loopne
pusha
jne
cmp
or
inc
std
icebp
fwait
popl
fsub
push
mov
arpl
adc
push
ds
xor
and
out
jbe
jae
jl
arpl
insb
std
movsb
popl
pop
cmp
into
xchg
inc
icebp
push
sub
xchg
dec
sbb
adc
mov
sbb
ljmp
std
jns
fisubs
add
vcvtsd2si
movl
or
jb
stc
mov
shl
repz
iret
dec
mov
mov
lea
bound
fidivs
xlat
mov
cwtl
in
inc
mov
dec
incb
pop
dec
jbe
test
mov
adc
ljmp
jb
add
stos
int3
jb
pop
dec
jns
add
inc
mov
ja
or
dec
mov
in
movsb
jnp
xchg
xor
outsb
xor
dec
test
mov
in
or
daa
add
inc
adc
mov
add
ss
daa
mov
mov
jecxz
bound
shl
cmpsl
jae
notl
divl
mov
in
xchg
fidivrl
jmp
mov
xor
or
push
inc
aaa
es
adc
das
sahf
xchg
setno
je
xlat
clc
loop
aad
scas
pushf
xchg
adc
loop
insl
pop
into
jne
adc
out
xchg
pop
or
mov
jecxz
pushl
pop
out
mov
jmp
es
mov
out
aas
xchg
in
jno
adc
pop
xchg
leave
sbb
inc
push
rclw
scas
or
outsl
or
lods
inc
jae
pop
int3
mov
xor
cmp
xorl
enter
daa
imul
inc
cld
push
fldenv
sbb
shrl
jns
pop
sbb
fmul
xor
outsl
lcall
test
mov
jns
mov
inc
sarl
imul
gs
lret
movb
mov
push
ret
jo
rclb
push
clc
inc
fsubs
or
xchg
or
xchg
testl
mov
xlat
push
cli
out
fists
enter
test
sahf
fsubr
insl
mov
cmp
pop
jmp
popa
pusha
pop
inc
cmpsl
into
rcll
fisttpl
in
mov
inc
inc
mov
mov
xor
push
mov
popa
cmp
ret
repz
test
lods
popa
mov
xchg
and
loopne
out
xchg
popf
into
shrl
push
stos
pop
scas
into
inc
xor
or
jo
mov
sub
push
lcall
out
fcoms
or
inc
loop
in
or
outsb
test
push
mov
mov
bnd
mov
into
jno
insl
das
gs
orw
cmpsl
mov
movsl
adc
jo
cmp
push
mov
lea
push
int3
mov
jle
xor
fdiv
and
jns
pop
pop
mov
mov
lcall
jp
sbb
adc
push
shll
dec
inc
push
rorl
push
xlat
rorb
cmp
enter
pop
test
lods
mov
pop
clc
out
out
dec
push
and
jmp
scas
add
xor
xor
cmp
icebp
dec
adc
xchg
pop
aad
cmp
outsb
cmp
sbb
cmp
inc
xchg
xorl
adc
xchg
outsl
jmp
js
ds
cmc
jl
test
and
sub
sub
or
push
jmp
subb
pushf
xor
bound
not
add
xlat
or
adc
loope
or
shll
sub
mov
adc
cmpsb
jns
call
leave
fisubrl
jne
out
cmp
xchg
std
es
and
mov
push
push
repz
push
cld
fs
mov
cmp
lcall
mov
and
adc
mov
push
mov
outsb
daa
pop
cmpsl
inc
arpl
mov
push
loopne
dec
sub
jmp
or
stc
mov
inc
push
mov
mov
mov
les
das
out
inc
sbb
push
dec
jmp
add
std
push
test
in
popa
hlt
icebp
aaa
cmpb
test
dec
sub
jp
mov
dec
orb
push
xor
inc
adc
add
lds
repz
clc
cmc
push
in
clc
push
fwait
cmpxchg
fsubrl
pop
jecxz
jp
rol
inc
out
or
push
mov
adc
stos
ja
sahf
dec
sub
fbstp
repnz
sub
int3
push
xchg
sub
inc
and
jo
pop
mov
dec
adc
data16
subl
add
or
bound
mov
cmp
sub
test
jb
mov
scas
mov
and
xchg
or
repnz
scas
subl
aaa
test
jle
mov
sub
lahf
int3
popf
loope
and
xor
aaa
add
fnstcw
test
mov
pop
mov
gs
pop
push
shll
addb
je
dec
add
jo
dec
scas
jp
jle
dec
inc
and
outsb
cli
adc
xchg
idiv
gs
add
in
pop
jl
pop
push
jge
ds
test
dec
mov
mov
sbb
stos
out
or
mov
push
add
cmc
and
xor
cs
mov
das
cmp
daa
fisttps
pop
ds
mov
test
arpl
xor
push
divb
ds
dec
fsubp
aaa
ds
test
jno
ret
jnp
enter
jecxz
aaa
mov
or
pop
mov
pop
sub
les
cld
push
add
mov
mov
lcall
pop
arpl
shrl
mov
call
andl
in
les
cmpsl
incb
aaa
dec
in
cltd
int
imulb
mov
or
dec
jmp
mov
mov
or
call
movsb
repnz
fcompl
sbb
sbb
mov
rcr
dec
rcrl
popa
mov
fcmovnb
ss
fmuls
mov
lock
dec
das
sbb
cmpsl
cwtl
sub
out
mov
pop
dec
int
or
notb
adc
int3
leave
adc
lcall
addr16
jp
outsb
sbb
pop
pop
cmpsl
sbb
sub
and
addr16
fldt
or
shrd
test
mov
pusha
inc
pushf
insl
popa
xor
hlt
cli
jae
inc
mov
inc
ja
jnp
fmuls
mov
cld
fstpt
add
mov
add
pop
test
fcoms
add
jmp
inc
jmp
mov
in
push
or
rcrb
enter
add
mov
mov
jmp
pop
sub
add
and
and
adc
inc
lahf
push
scas
mov
cli
mov
movsl
out
aas
movsl
xchg
aad
stos
popaw
imul
push
mov
in
in
inc
adc
cld
mov
push
jg
out
sti
jmp
inc
cmp
ja
adc
or
les
ljmp
push
imulb
adc
insb
insl
push
xlat
incl
mov
mov
sub
lods
testl
jne
and
push
aam
and
fstpt
inc
std
add
pop
ret
adc
pop
out
loopne
in
ljmp
scas
jl
cmp
xor
pop
mov
aam
mov
enter
cli
sbb
popa
jns
or
xor
sub
cs
rorl
out
mov
loop
pop
add
sbb
mull
xor
into
push
cmp
loope
iret
push
daa
dec
dec
cli
out
loope
shl
inc
pop
jge
mov
cmp
xlat
jp
lcall
in
pop
movsl
jbe
jmp
fs
xchg
push
sti
fstpt
mov
pop
in
sub
fisubl
mov
je
shlb
xor
nop
pop
push
imul
popa
adc
lds
aad
add
push
loope
lds
dec
shll
sahf
movsb
iret
inc
xchg
push
and
dec
inc
push
js
sarl
inc
push
xchg
filds
mov
jne
push
push
imul
movsl
xchg
cltd
adc
shlb
dec
xchg
xchg
mov
in
gs
decb
push
push
ljmp
fidivl
push
jb
xor
mov
popf
xor
sub
mov
cmpsb
ror
ret
lods
mov
pop
mov
add
stos
movsb
push
jecxz
cvtpi2ps
xchg
or
push
nop
mov
imul
cmc
adc
push
cmp
ds
inc
and
add
mov
add
loope
fcompl
xchg
lahf
mov
push
aad
fildll
sbb
fisubl
sub
pop
pop
in
dec
pop
mov
imul
iret
repz
jg
cltd
lea
je
mov
fmulp
ja
sub
mov
jae
pop
pop
outsl
cmp
roll
inc
subb
adc
xor
mov
aas
xchg
es
test
pop
pushf
out
nop
jne
lcall
insb
sbb
lock
jl
stc
lods
pushf
aad
mov
dec
sbb
adc
sbb
add
xchg
rcrl
cmp
jge
mov
daa
lahf
add
mov
insb
jecxz
leave
adc
iret
sbb
imul
push
push
mov
push
pushf
mov
mov
insl
mov
push
and
pop
xlat
pop
sub
mov
das
mov
movq
jo
int3
loop
cmpsb
shrl
xchg
fcmovnbe
dec
jmp
dec
add
xchg
jb
dec
lea
xchg
sbb
cwtl
lock
lret
pop
sar
andb
js
outsl
sbb
loop
sub
scas
cmpb
jmp
ret
push
sub
cs
push
mov
cwtl
inc
out
clc
mov
lret
and
mov
iret
leave
sti
test
stc
ss
test
movsl
stc
es
popf
out
cmpb
mov
sub
add
fucom
cmp
test
gs
fs
push
js
les
loopne
mov
or
sti
test
sub
pop
and
jo
cmp
imul
mov
mov
es
fs
pushf
dec
xchg
inc
or
cmpsl
jg
push
sti
and
xchg
mov
cs
movsl
fs
mov
lea
mov
out
lods
inc
loop
inc
enter
push
push
cld
mov
push
push
cmp
mov
add
cmp
jg
mov
sbb
ret
mov
add
mov
mov
xchg
push
into
rcrl
mov
cs
mov
fadds
inc
scas
test
lods
out
aaa
popa
roll
xchg
pop
iret
xchg
cmpsl
xor
mov
push
pop
dec
add
mov
lock
popf
inc
loope
xchg
arpl
lods
dec
fcoml
push
cwtl
ret
mov
xchg
cmp
loopne
fistpl
add
popf
xor
push
xchg
and
pop
mov
repz
xchg
cld
add
sbb
adc
inc
aaa
stos
add
mov
loopne
in
mov
addb
push
jl
mov
lea
fistpl
inc
je
popa
dec
xchg
xchg
jne
popa
imul
jae
jecxz
push
aas
pop
add
and
das
out
and
insl
test
inc
xor
sub
pop
fwait
inc
pop
pop
and
test
xchg
test
dec
lock
test
shll
lds
mov
pop
mov
sub
jp
shl
mov
sahf
lods
mov
sbb
xchg
jge
dec
lahf
mov
outsb
or
sub
inc
ror
fldt
push
scas
mov
imul
sbb
nop
shlb
dec
mov
loope
call
adc
push
leave
por
jae
mov
and
or
imul
pop
pop
sbb
loop
hlt
out
ljmp
pop
sarl
dec
mov
xlat
leave
mov
pop
insb
add
or
and
test
cmp
jmp
in
bound
out
xchg
and
hlt
and
and
ja
test
mov
ss
xchg
cmp
lahf
mov
ss
mov
repz
jmp
cmpb
mov
ljmp
push
enter
in
test
cmp
rol
int
dec
mov
cmpsl
adc
test
pop
sub
pushf
mov
fnstcw
mov
push
lret
jge
jge
inc
jg
mov
sbb
aaa
xchg
subb
pop
sbb
cmp
xchg
out
aad
repz
add
xlat
mov
lock
int3
sub
pushl
loopne
decb
loope
outsb
xchg
cltd
mov
adc
xor
jmp
daa
popa
sbb
sahf
sbbl
xchg
mov
aad
sbb
loopne
push
adcb
nop
mov
xchg
push
xlat
inc
push
cmp
in
cmc
popf
xor
sti
stos
jle
inc
loop
mov
mov
xchg
pop
sub
in
sub
and
mov
lret
sub
mov
xchg
add
aad
xchg
fnstsw
jnp
mov
pop
mov
push
mov
adc
out
aaa
imul
or
push
out
xor
lcall
xchg
sbb
cli
imul
ja
xchg
in
outsb
mov
inc
sub
or
out
push
sbb
xor
test
push
xchg
fiadds
fbstp
ret
gs
xchg
xor
cmp
dec
and
into
fistpl
sahf
xor
aam
and
mov
shr
ret
fiadds
and
cltd
mov
jne
pop
fistps
in
jns
xchg
dec
cmc
insb
mov
movsb
mov
daa
popf
sub
sub
or
push
fcoms
dec
adc
sbb
push
mov
popa
jb
xor
das
cmpsl
or
pop
mov
shrl
movsb
insb
and
in
int
lea
adc
lock
pop
fdivl
outsl
shl
aaa
xor
fmuls
mov
ret
in
adc
jl
ja
pop
jecxz
sub
push
lret
popfw
jle
and
pusha
push
ds
or
mov
lock
mov
fsubrl
pop
sub
int3
sahf
pcmpeqd
call
rolb
ljmp
fsubs
popf
sbb
fstps
das
adc
mov
and
or
xchg
sub
iret
test
ljmp
cs
call
call
scas
aad
movsl
aad
leave
addr16
mov
imul
inc
cmpsb
outsb
lcall
adc
push
sub
mov
ds
insb
push
pushf
sbb
aaa
hlt
and
sti
inc
in
xor
sbb
sbb
insl
fcom
outsl
addr16
sbb
cli
movsl
adc
xchg
add
addb
lret
outsl
or
ss
inc
pusha
pop
or
mov
cmpsb
pop
pushf
aad
xchg
xor
out
push
negb
in
xchg
pop
lods
push
mov
adc
push
xor
xchg
inc
mov
mov
std
inc
inc
or
mov
jne
xchg
stc
dec
ss
insl
lods
mov
push
lar
adc
cli
sbb
test
mov
shrl
inc
push
jns
or
or
fdivs
cmp
out
mov
cmp
nop
mov
jmp
adc
push
cmp
fmuls
ss
aas
fistpll
jne
push
xchg
pop
in
loop
jno
std
xor
add
inc
cmpb
push
adc
push
or
mov
mov
shrl
or
mov
outsb
stos
out
pop
and
out
rcl
aam
icebp
mov
in
jne
lods
hlt
scas
nop
push
dec
dec
js
xchg
ss
mov
dec
sbb
lods
stc
sub
inc
inc
xchg
mov
jle
mov
cmpsb
sub
xchg
push
out
repz
ss
lcall
loope
sti
push
push
in
inc
insb
fwait
inc
movsl
mov
xchg
into
cltd
sti
push
orb
or
push
mov
data16
enter
jmp
subb
lcall
movsb
in
fadds
repnz
cmpsb
into
mov
dec
adc
xlat
idiv
sbb
inc
ja
fisttpll
mov
sub
insl
push
fmull
jmp
mov
arpl
adc
adc
sarl
xchg
mov
and
cmp
mov
or
add
test
pop
arpl
test
outsb
sub
jns
cmpl
cmp
or
cs
inc
or
fstl
and
mov
mov
add
jmp
mov
popf
mov
ss
add
popa
xchg
xchg
mov
xchg
pop
adcb
call
mov
sbb
fdiv
push
stos
clc
cmp
addl
add
lods
lret
xlat
pop
ds
iret
outsl
mov
sub
test
inc
jo
add
sahf
mov
movsb
cmp
mov
pop
loop
push
mov
push
jnp
xchg
or
subl
scas
push
inc
dec
push
add
inc
int3
mov
push
push
cmc
push
adc
jo
imul
out
aam
and
aam
mov
add
jp
push
add
pop
in
js
mov
mov
mov
std
rolb
adc
mov
outsb
loope
pop
mov
xchg
add
cmp
arpl
xchg
inc
les
pop
das
lret
stos
into
lds
lds
jmp
inc
into
mov
cmpsl
pop
inc
mov
pop
pushf
xchg
stos
inc
jb
fisubl
push
lcall
subb
nop
xchg
push
push
inc
stc
lahf
mov
cwtl
xchg
mov
int3
xchg
xchg
cltd
jp
aaa
or
stos
mov
pop
sbb
inc
pushf
addr16
ficompl
je
loop
imul
pop
sahf
ds
dec
movsl
mov
add
jne
xchg
lds
mov
in
adc
nop
pop
or
dec
stos
and
test
xchg
xor
enter
pop
lcall
ficoml
mov
xchg
stc
clc
mov
data16
js
repnz
and
call
cltd
jo
lock
jne
or
or
push
test
out
hlt
fnstsw
int
mov
out
pop
movsb
sarb
dec
lret
xor
pop
shll
mov
and
aas
hlt
adc
xchg
bound
dec
mov
push
push
sub
push
ds
lods
push
movsl
inc
mov
inc
leave
popf
mul
sbb
fiadds
dec
repnz
inc
test
hlt
insb
cmp
daa
push
movsl
sub
loop
xlat
or
fwait
cmp
je
xor
test
lret
loope
lahf
cltd
pop
cmp
pop
int
xchg
rorl
mov
mov
lock
and
push
or
inc
cld
jmp
cmp
or
inc
or
sub
iret
mov
addr16
pop
pushf
or
popa
mov
test
es
call
imul
in
rcll
adcl
out
fs
pop
mov
jge
add
mov
xchg
sub
push
mov
inc
jge
cli
xor
or
icebp
hlt
insb
testl
sbb
adc
sarl
call
xlat
jae
pushf
das
dec
pop
lock
clc
push
int
add
iret
sbb
or
enter
out
cld
mov
sub
hlt
fbld
jg
pop
ds
pushf
jmp
lock
mov
adc
data16
mov
icebp
pop
fwait
dec
xchg
mov
or
mov
or
inc
sti
sbb
adc
adcl
js
mov
mov
pop
or
addb
pop
ja
push
inc
out
push
pop
fidivrl
repnz
mov
loopne
push
in
adc
popf
js
mov
and
or
add
pop
fldl
push
push
jp
xor
shrb
xchg
mov
out
icebp
imul
fs
and
aaa
jno
xchg
jg
lock
in
adc
outsb
cmp
cmpsb
es
xorl
pop
aas
lock
sub
inc
lret
add
mov
loope
mov
fsub
mov
imul
sub
test
nop
push
pop
add
xchg
lret
xor
mov
or
cltd
fwait
outsb
push
push
sbb
add
jl
aad
popa
stos
mov
cmp
push
cmp
jge
repz
cltd
sub
add
repnz
cmc
les
pop
jge
movsb
jl
xlat
lods
mov
imul
mov
push
sbb
in
aam
pop
addr16
pushf
cmp
push
push
pop
jg
ds
testb
inc
push
stc
pop
lcall
clc
inc
imul
stos
xchg
sbb
movsb
push
push
imul
jnp
xor
or
rclb
stc
aam
scas
inc
mov
jae
adc
and
inc
jmp
in
in
sub
loopne
lds
pushl
adc
hlt
mov
jg
fdivrl
outsl
fucomp
lods
insl
mov
dec
fdivrs
pop
cld
jp
jl
mov
dec
jg
dec
xchg
fisttpl
rcl
xchg
cli
ss
mov
sbb
or
out
push
xchg
lea
xchg
xchg
adc
inc
and
pushf
dec
push
dec
jge
cmpsb
pusha
xchg
cmp
dec
sarb
add
enter
jno
in
mov
sti
xor
enter
je
add
jp
ficomps
mov
lret
testb
push
loope
jnp
jae
ja,pn
cmp
fsubrs
or
xchg
loope
mov
insb
fmull
mov
ffree
jg
loopne
je
rolw
lret
inc
cld
icebp
je
mov
pusha
aam
ret
ficoml
cmpsl
inc
jmp
jno
jns
jno
ja
testl
mov
fyl2x
sub
in
adc
and
pop
add
and
pop
jmp
cwtl
inc
xor
pop
and
cli
jo
in
push
aaa
lods
pop
jo
sbb
in
stos
fmuls
repz
jp
push
std
dec
mov
mov
cwtl
and
movsl
mov
add
lods
out
or
add
adc
jne
sub
xchg
mov
push
fldpi
mov
cmp
sub
jl
inc
cmp
sub
xor
insl
cmp
pop
hlt
mov
cld
sbb
movsl
cli
outsl
adc
movsl
outsb
mov
sti
or
push
add
push
repz
mov
sbb
push
xor
push
xor
mov
movsb
add
pop
fadds
es
dec
inc
arpl
mov
mull
xor
adc
les
xchg
push
es
stos
push
and
ret
sbb
sti
push
imul
or
sub
mov
mov
scas
test
or
jge
jge
faddl
jp
gs
clc
cmp
and
xchg
jno
xor
sbb
test
jne
push
adc
in
rcl
in
and
inc
cmc
mov
in
and
rcll
mov
jecxz
mov
mov
pop
in
or
icebp
mov
out
lea
mov
movsl
aas
jp
les
push
loop
sub
mov
sbb
mov
loopne
ds
dec
ss
mov
ret
add
pop
sbb
pop
or
fisubs
mov
xchg
int3
pushf
out
or
jge
pop
sbb
mov
cmc
std
xor
inc
mov
aaa
lret
out
and
mov
inc
jle
daa
adc
popf
cltd
cmp
inc
mulb
aad
dec
loop
and
add
mov
pop
lods
fnstcw
mov
popf
push
cwtl
pop
and
lahf
pop
loop
cld
int
cmp
or
cwtl
loop
mov
ret
jecxz
and
sbb
lock
popf
xchg
out
fcos
mov
lret
in
and
dec
orps
mov
pop
fisubl
inc
push
cmp
into
out
leave
andb
push
lds
pop
int
aad
or
iret
sbb
sub
loopne
adc
stc
jmp
dec
adc
lock
add
jnp
xchg
lock
xor
lahf
sbb
and
out
lods
test
jne
sub
inc
push
int
repnz
and
arpl
xor
cmp
pop
push
pop
mov
xor
leave
lahf
adc
std
cwtl
outsl
push
scas
pop
dec
movq
pop
fldenv
dec
out
sbb
aad
data16
or
inc
movsb
dec
cs
sbb
sbb
cmpsl
add
pop
push
ficoml
adc
push
inc
mov
outsb
adc
xlat
dec
ja
repnz
jl
adc
aaa
xlat
xchg
addl
das
cmp
cmp
adc
std
sbb
pusha
xor
push
movsl
aad
sub
aad
mov
jbe
stos
ljmp
add
inc
rep
insl
dec
test
fld
in
pop
pop
orb
fsubrp
das
push
mov
mov
js
sahf
xchg
mov
adc
imul
ja
xchg
fildll
into
push
fiadds
sahf
das
popl
dec
cs
clc
clc
sbb
xor
nop
daa
roll
mov
clc
mov
popa
mov
mov
push
mov
loope
inc
or
sbb
jo
movb
xchg
stos
push
ror
cltd
mov
mov
jg
adc
pop
fisubrl
ret
lea
mov
mov
daa
push
dec
mov
jmp
bound
dec
cwtl
cltd
andl
fdivrs
bound
out
pusha
ja,pt
mov
adc
lret
arpl
adcb
jl
jbe
sbb
out
cs
adc
stos
testb
insb
cmpl
jno
pushf
cmp
jle
dec
inc
test
mov
rclb
loope
fmuls
add
sbb
outsb
jecxz
and
fucomp
or
or
jmp
clc
dec
test
mov
negl
fidivs
ffreep
mov
ficompl
and
scas
xchg
and
stos
aaa
insb
je
adc
xor
test
add
andb
btr
je
add
adc
addr16
mov
or
inc
jmp
mov
mov
incb
cld
stc
lret
mov
aam
and
in
dec
lods
xchg
jge
push
pusha
jnp
lea
les
psrlw
dec
les
jb
popa
hlt
mov
push
inc
push
jae
adc
or
xorb
inc
es
dec
ja
fwait
add
sbb
pushf
lods
inc
mov
add
add
push
icebp
add
test
jg
js
mov
mov
and
stos
ret
jge
cmc
xor
and
jns
test
xchg
sbb
daa
xchg
pop
cmc
push
xor
mov
push
or
out
cmp
out
jno
and
push
and
add
xchg
sti
inc
xchg
cld
lds
gs
xchg
jnp
mov
aas
xchg
mov
cltd
dec
ljmp
pop
mov
mov
les
data16
shrb
inc
cmpsl
adc
ret
adc
pop
sub
mov
xorb
pop
es
xor
ljmp
fbstp
sbb
mov
or
insb
ljmp
cld
cmp
in
fmull
add
sub
test
dec
in
lea
out
lods
lods
xor
jno
jmp
mov
sub
cmpsl
mov
imul
aad
mov
add
xchg
xorl
or
mov
aad
inc
adc
mov
in
leave
cs
mov
aad
mov
cmpb
lcall
out
pop
cmp
cmp
mov
cmpsb
neg
xchg
mov
mov
aas
outsb
push
inc
out
lock
jno
pushf
mov
ljmp
add
shrl
icebp
outsb
inc
cmpsl
pop
jg
bound
xchg
xor
fs
adc
mov
and
inc
popf
push
stos
inc
cmp
mov
add
fwait
add
push
sub
mov
fbld
pop
xor
xchg
xor
jle
jo
aas
push
sbb
push
jno
push
mov
shr
enter
pop
xor
sahf
sub
out
or
dec
jp
icebp
push
js
out
mov
out
lea
in
ficompl
add
or
push
addl
fildll
xor
and
xchg
addr16
out
and
cs
ss
jge
and
adc
xor
repz
cld
inc
stos
sub
lea
lahf
insb
inc
test
cmp
xor
out
data16
xchg
push
push
aaa
cmp
sub
ret
jno
mov
leave
or
call
xchg
loope
sub
cs
out
mov
jns
call
fsubs
jo
mov
test
fs
dec
orl
repnz
and
lret
cmp
pop
dec
mov
push
pop
dec
mov
mov
push
scas
hlt
flds
add
ret
add
shl
cwtl
insl
cmp
aas
push
sub
ret
iret
shll
daa
fwait
mov
fnstcw
push
mov
rcr
add
mov
test
imull
mov
xchg
fs
lds
shrl
fldcw
bound
out
aam
sbb
imulb
test
xchg
push
clc
and
sbb
push
jno
inc
mov
and
out
data16
outsl
mov
inc
nop
cltd
push
inc
rorl
dec
scas
fldt
add
sub
cmpsb
popf
std
cwtl
push
adc
pop
xchg
jae
sbb
push
add
lret
xchg
imul
jp
cwtl
cmpsb
nop
std
in
popl
add
jbe
mov
mov
jp
jae
mov
jbe
daa
or
and
mov
push
sbb
xchg
push
test
gs
mov
fcomps
pop
sahf
loop
mov
pusha
push
pop
daa
aam
jo
push
in
arpl
sub
push
inc
push
mov
sarl
pop
out
fmul
xlat
test
add
add
push
inc
adc
fsubrl
xchg
push
pop
xchg
adc
adc
inc
dec
pushf
test
repnz
popa
stc
mov
add
int3
add
fwait
mov
jne
dec
sub
sub
mov
pop
outsl
lret
push
movsb
jecxz
jle
add
int3
aas
nop
add
sub
jl
pop
into
xor
adc
mov
push
movsb
push
lods
push
pop
jns
je
sti
fidivrl
xchg
mov
icebp
lock
loope
test
sub
data16
imull
and
xchg
and
es
imulb
mov
imul
mov
rcrb
mov
jmp
mov
dec
mov
pop
imul
add
fwait
inc
mov
adc
push
sub
cmc
scas
fsubrs
xchg
adc
inc
fsubs
or
jle
insb
icebp
je
xchg
push
std
pop
lahf
dec
add
mov
cwtl
jb
lds
sbb
xchg
mov
push
int3
mov
aaa
shl
mov
add
jecxz
mov
cmp
xchg
dec
cmp
jae
push
xchg
sbb
xchg
mov
sarb
mov
lods
out
loope
iret
outsb
push
mov
aad
pop
mov
das
dec
movsb
iret
scas
in
mov
nop
jecxz
lods
fsts
sbb
cmp
mov
mov
or
aas
mov
ja
dec
lret
adc
and
test
aas
cmpsl
lock
imul
xchg
push
notl
mov
je
dec
fnstcw
cli
add
test
push
jmp
in
jae
pop
shll
loop
sub
in
jno
out
xchg
pop
in
std
and
sbb
jo
push
jle
sub
fwait
mov
test
cmp
leave
outsb
dec
jbe
mov
pop
sub
adc
clc
shll
outsl
outsb
gs
push
sbbl
add
sbb
sbb
stos
push
mov
loopne
mov
or
cltd
cwtl
or
test
stos
xor
jne,pt
mov
lods
cmp
mov
cmpsb
decb
lock
push
push
cwtl
test
mov
cs
mov
jns
in
mov
jnp
ret
mov
or
mov
div
test
out
mov
mov
cwtl
call
lds
fsubrp
inc
xor
xor
push
pop
jbe
mov
jns
cmp
pop
xor
lcall
cld
fwait
sub
push
idivb
mov
fwait
xchg
xor
dec
bound
fs
dec
sub
jp
mov
repz
adc
loopne
jns
or
fidivrl
xor
gs
sbb
gs
das
lock
rcll
fnsave
cmpsb
ljmp
pop
and
or
sbb
stos
push
mov
into
mov
mov
adc
mov
dec
or
and
aad
push
pop
pop
insl
inc
mov
push
push
fisubs
push
je
repnz
lods
push
jno
int3
inc
push
jmp
mov
das
mov
fbld
in
ret
jo
iret
mov
adc
test
pop
or
aas
sbb
in
adc
dec
push
fldt
les
mov
sbb
xchg
cmpsb
mov
outsb
and
jl
dec
xchg
inc
repz
pop
jge
shll
xchg
jbe
inc
testb
add
or
ret
loope
hlt
cmpl
mov
sbb
nop
lods
push
dec
rcl
sub
std
fcmovnu
push
icebp
mov
inc
daa
add
repz
mov
and
mov
push
add
xchg
out
movsl
in
bound
cmp
pop
mov
and
mov
mov
imull
sbb
adc
imul
xchg
fcoml
repnz
add
inc
jns
ja
jle
insl
inc
scas
out
push
addr16
es
cmpsl
lock
cltd
or
inc
push
dec
push
jp
test
pop
lret
xor
movsl
mov
sahf
sarl
mov
stos
xchg
sar
xchg
cmpsl
movsl
fs
repz
lret
adc
add
stos
sub
xor
mov
inc
push
jo
cmc
nop
and
popa
mov
ret
jmp
adc
fisubrs
mov
nop
mov
mov
push
or
gs
mov
bound
push
outsb
mov
sub
clc
lahf
adc
pop
into
sahf
xor
sbb
mov
push
inc
fcoml
fs
sbb
data16
hlt
ljmp
dec
sbb
sbb
xor
fadds
lock
xchg
hlt
lahf
cli
sbb
fwait
mov
cvtps2pi
jle
arpl
ja
sub
sub
les
shr
call
push
arpl
jbe
jne
dec
push
mov
stos
outsb
cmp
cmp
pop
jae
sbb
jg
sbb
inc
inc
icebp
adc
lock
sti
lahf
pop
mov
addb
insb
imul
stos
js
add
test
arpl
into
jg
loope
or
or
inc
sbb
pop
fsubl
or
popa
nop
mov
repnz
jb
lds
loop
adc
subl
lods
or
jns
cmc
rolb
dec
cltd
in
in
mov
mov
sbb
sub
and
sarl
pop
inc
mov
aad
push
addr16
mov
loopne
in
push
sub
out
add
adc
loop
aad
xor
inc
jno
mov
notb
pop
mov
cmp
push
aas
in
cmc
outsl
mov
fdivrs
add
mov
cmp
movsb
leave
jno
or
lea
cmpsl
push
and
jno
lcall
or
sbbb
pop
lret
lock
int
dec
repnz
lea
icebp
xchg
inc
aas
aaa
mov
inc
inc
sub
mov
fs
fistpl
mov
cmc
dec
lock
sbb
daa
lea
lcall
sbb
jnp
rorb
test
jbe
adc
test
push
in
das
pop
sahf
es
push
loopne
loopne
xchg
jg
dec
inc
lods
mov
xchg
jge
pop
and
add
sbb
jae
lods
mov
xchg
popa
adc
je
bound
or
sbb
push
iret
arpl
sti
mov
push
rcrl
daa
mov
push
pushf
xchg
inc
scas
cmp
scas
and
push
je
dec
push
adc
mov
mov
sbb
fwait
xchg
pop
std
pop
or
jno
sahf
mov
mov
cmp
int
xchg
out
pop
sub
pavgb
mov
mov
adc
call
xor
sbb
push
int
inc
int3
hlt
enter
fisttpll
push
fimuls
push
dec
sti
adc
cs
mov
xchg
mov
fisubl
mov
adc
xor
and
js
lcall
lcall
std
inc
dec
das
lcall
cmpsb
ss
pop
test
push
fsub
or
jg
mov
mov
cmp
roll
lock
nop
cmp
add
push
adc
rcr
xor
adc
xchg
into
lock
dec
adc
hlt
or
and
pop
inc
out
je
dec
dec
pop
adcb
rorb
imul
cmp
add
repz
adc
xchg
imull
in
pusha
jae
xchg
test
pop
in
out
mov
fdivr
push
xchg
ret
fwait
not
jp
cli
lahf
sub
sti
out
sbb
sbb
cmp
popa
mov
and
lahf
stos
and
mov
sbb
mov
mov
adc
jno
adc
cs
aad
mov
jo
adc
push
xor
iret
cmp
xor
and
sub
shll
adc
mov
jmp
cmpb
or
fadd
jecxz
in
mov
cmp
aas
xchg
sbb
dec
int3
xor
mov
xchg
rolb
pop
std
pushf
ret
cmp
cmp
dec
xchg
pop
std
mov
jbe
xor
shll
mov
daa
jmp
int
insl
loopne
ja
mov
call
mov
jo
js
fs
enter
mov
sti
xchg
sti
rclb
mov
not
xor
in
enter
pop
mov
xchg
fimull
gs
imull
ret
pop
jle
popa
add
insl
movsl
shrb
or
in
and
and
mov
cltd
testb
mov
lret
aam
dec
sbb
repnz
xchg
inc
int3
adc
push
repz
lret
or
mov
xchg
jno
dec
test
daa
cmp
ss
push
lds
push
sbb
repz
cmpsl
roll
lret
push
test
out
fs
xor
xchg
nop
cmp
push
sub
cmp
scas
push
or
pop
sbb
adc
imul
enter
test
into
movsb
movsl
rolb
lods
sahf
pop
pusha
pop
fnstenv
jns
nop
fnstsw
test
mov
sarb
mov
cmp
or
mov
fidivs
add
orb
int
push
rcr
add
or
rolb
add
imul
gs
repnz
xchg
sahf
mov
xor
dec
lea
pop
sbb
subb
jp
mov
lea
push
fnstenv
popa
and
sarl
sbb
mov
aas
das
inc
adc
and
adc
adc
mov
stos
ss
dec
fidivl
add
inc
pusha
mov
pop
jecxz
out
in
sub
jg
push
aam
lahf
neg
add
scas
push
xchg
mov
int3
enter
add
cmp
cmpsl
lret
fnsave
push
ficomps
icebp
rorl
dec
pushf
lcall
ss
je
and
add
mov
aas
jno
rorb
or
or
cmp
and
cmc
mov
je
int
enter
xor
fimull
fwait
inc
std
xchg
inc
mov
cld
js
cs
test
test
and
or
outsb
mov
popf
cmp
loop
sub
in
rcll
fwait
adc
lods
nop
aam
rcrb
imul
ror
ret
enter
fiadds
rcll
ja
jg
add
mov
adc
test
push
push
sub
std
pop
gs
scas
sbb
mov
dec
imul
push
lea
mov
adc
in
mov
outsb
call
sbb
in
pop
sub
clts
sbb
cmpb
aad
jno
loopne
ds
sbb
xor
aam
jae
fcomps
xor
pop
hlt
lods
lahf
push
sbb
jnp
push
repz
mov
js
pop
int
cmpsl
inc
mov
cmp
enter
mov
sbb
push
lret
xor
les
std
inc
ret
push
pop
arpl
mov
mov
xor
subb
xchg
jb
dec
inc
pop
shl
sub
inc
mov
lds
jmp
mov
xlat
cmp
loope
fs
fsubp
pop
sub
mov
out
add
repnz
cld
insl
pushf
outsb
jle
dec
cmpsl
das
jno
das
enter
test
aam
jmp
popf
fidivrl
dec
daa
cmp
iret
dec
sub
hlt
xor
cld
sub
scas
xor
adc
ja
outsl
gs
iret
jbe
and
test
cmp
sti
adc
fidivrs
inc
ds
popf
pushf
cmp
pop
sub
push
popf
jae
mov
imul
xchg
frstor
bound
movsl
lret
xchg
sbb
out
xchg
mov
sub
lds
cmp
je
add
pop
xchg
sti
das
sbb
mov
adc
out
push
int3
incl
je
pop
mov
mov
or
mov
cmc
mov
imul
jo
inc
push
jno
jl
sub
dec
pop
out
mov
mov
xchg
mov
mov
psadbw
dec
xchg
pop
xchg
addr16
adc
shl
scas
jnp
rolb
inc
and
divl
repnz
or
pop
dec
mov
jns
clc
int
and
mov
hlt
inc
sbb
lods
jp
insl
insb
fwait
lcall
inc
xchg
dec
dec
cld
loopne
jbe
mov
std
outsl
inc
mov
mov
sub
xor
lret
or
xlat
aas
mov
ljmp
std
push
loope
sbb
adc
sbb
adc
fsubs
sahf
repz
adc
cwtl
scas
jge
push
daa
inc
adc
sbb
sub
push
std
cmpsl
mov
adc
push
pusha
lcall
inc
cmpb
lahf
sarb
fistl
mov
jmp
pop
arpl
imul
shll
and
xchg
outsb
pop
jns
fsubr
sub
aad
mov
inc
sbb
xchg
lock
pop
add
aad
insl
pop
lea
lock
aad
add
mov
push
xchg
push
and
xchg
sub
jecxz
add
and
cmpsl
fildl
sub
sbb
jmp
lods
repz
imull
aam
iret
lahf
pop
inc
test
lret
mov
loope
fdivrs
jb
inc
xchg
dec
pop
pop
push
fdivrs
pop
out
lea
mov
jb
ret
push
lahf
dec
mulb
add
sub
mov
sbb
inc
mov
sbb
fisttpll
add
and
push
das
hlt
rolb
leave
and
xchg
pop
and
cwtl
or
ret
addr16
sbb
and
shrb
repz
or
jb
sbb
rcrl
nop
jmp
add
jo
push
mov
cmp
loope
sbb
lods
lret
dec
mov
pop
lcall
sbb
sub
jecxz
mov
cmpb
clc
dec
dec
or
xchg
pop
or
enter
push
push
movsb
jmp
mov
ret
sub
test
imul
push
push
loop
faddl
lret
popf
pop
jo
sub
mov
adc
aam
cmp
mov
fmuls
fmull
addr16
pop
leave
sbb
jp
fnstcw
clc
gs
lahf
rorl
aam
jae
dec
sarl
and
ja
inc
ja
insl
mov
outsb
sub
jno
ret
in
je
aas
mov
pop
outsl
aam
sbb
sarb
roll
into
das
dec
repnz
push
fstl
mov
leave
inc
push
dec
mov
mov
loopne
sub
addr16
xchg
cmp
xchg
rdpmc
mov
aas
add
jae
xchg
push
shll
jne
push
arpl
mov
inc
rcll
movsl
fwait
jno
pop
mov
jle
popa
jle
push
cmp
dec
or
rclb
inc
mov
adc
push
jle
push
sbb
mov
cmp
or
pop
popf
adc
aam
mov
jns
int
mov
mov
cmp
dec
and
mov
jle
xor
mov
jnp
pop
or
fstpt
mov
ss
pop
xor
add
lods
sbb
mov
pop
inc
insl
sub
cmp
jb
cld
jns
mov
jo
test
imul
xor
popa
add
xchg
mov
sbbb
cmc
xchg
es
shlb
adc
gs
movsb
jl
ds
mov
sbb
arpl
pop
imul
loope
ret
sti
iret
mov
in
jecxz
mov
insl
dec
jne
test
fimuls
and
scas
fs
jnp
or
xchg
jmp
hlt
mov
jbe
das
xor
dec
fcom
cmpsl
subb
je
iret
cmp
xchg
fcmovnbe
cli
inc
mov
sub
aam
adc
fmull
test
pusha
xor
fnsave
movsb
shrl
pushf
out
mov
sub
and
das
or
cmp
jne
jmp
mov
out
add
aam
fstl
imul
fsub
lcall
dec
sti
mov
push
jns
inc
fs
adc
push
cmp
or
pusha
addr16
outsb
mov
adc
jns
das
cmp
sahf
jnp
aam
inc
test
fs
sub
mov
fildll
pslld
cmp
jo
jae
ds
cmpl
dec
in
push
clc
inc
xor
and
jle
xchg
pop
cmp
xlat
andb
js
rclb
jle
adc
leave
mov
and
fst
lods
outsl
sub
pusha
inc
mov
ret
mov
outsl
lret
pop
fwait
jns
push
lcall
mov
std
and
leave
test
sbb
xor
add
push
mov
bound
shrb
inc
mov
test
push
pop
inc
test
testl
iret
sbbb
aam
ret
movsb
mov
ret
ss
dec
add
mov
mov
xor
fidivrs
or
fimull
cmpsl
push
jne
lahf
icebp
movsb
icebp
pushf
mulb
scas
ja
or
cmpsb
out
dec
ljmp
xchg
lods
mov
mov
adc
adc
xor
push
es
jl
arpl
cmp
scas
inc
test
add
cmpsb
popf
or
dec
pop
clc
aaa
adc
cmp
scas
mov
jge
mov
jp
cs
jg
sbb
xchg
fisubl
add
insl
aaa
repz
stos
fwait
int
xor
add
mov
adcl
xor
es
fwait
shrb
adc
push
cld
mov
xor
mov
mov
frstor
xchg
mov
dec
mov
in
sarb
push
sti
xor
sbb
xor
pop
faddl
jns
movsb
popa
xchg
dec
inc
xchg
mov
mov
mov
int
adc
mov
sahf
popf
iret
push
sbb
lods
insl
xchg
inc
pop
sub
xor
nop
sbb
cmp
push
icebp
mov
sub
push
xchg
and
xchg
pusha
mov
lahf
pushf
add
subb
sbb
adc
inc
jge
sarl
popa
dec
lds
aas
adc
adc
pop
inc
adc
icebp
int3
jno
sub
test
dec
pop
and
enter
mov
int
dec
mov
cld
out
mov
mov
and
push
outsb
cwtl
sbb
ss
jae
cmp
pop
in
jmp
cmp
push
lods
stos
inc
jmp
sbb
fcmovbe
jns
ret
cwtl
hlt
cld
loope
jge
jb
jae
sbb
out
movsl
pop
dec
shlw
add
ljmp
jge
sub
lcall
fsubrs
push
cmp
and
ret
jae
leave
or
dec
les
clc
jno
ret
sub
sti
fimull
call
xchg
jns
mov
pop
xchg
aaa
mov
and
adc
decl
add
push
lock
cmpsl
daa
sub
push
and
dec
and
mov
sbb
or
imul
mov
inc
mov
and
test
lcall
out
testb
xor
ljmp
loopne
repnz
repz
pop
dec
lret
int3
xchg
mov
shlb
sub
add
mov
xor
cmp
xor
shll
aam
jb
cmp
or
fists
adc
mov
and
test
or
sbb
mov
pop
in
lret
outsb
dec
xor
pop
out
add
mov
push
outsl
insl
sbb
jbe
je
lret
pushf
lds
fildll
cli
pop
scas
dec
and
dec
call
std
pop
dec
dec
or
int
mov
scas
cmc
nop
sub
or
shrb
test
leave
xor
xor
mov
dec
and
pop
test
test
and
pop
insb
add
fbstp
sub
repz
cld
adc
pushf
jecxz
xchg
adc
jne
pop
jae
xor
pop
sub
jno
add
insb
jl
jae
add
hlt
pop
neg
xchg
pop
xlat
test
aas
mov
add
sub
out
and
pop
int3
adc
push
jae
repz
cltd
xchg
les
in
pop
add
mov
inc
pusha
scas
dec
jo
or
ret
add
lea
push
xchg
shr
jb
repz
jb
inc
cmp
cltd
enter
jo
sbb
sbb
xchg
data16
cld
cwtl
and
call
push
mov
addr16
test
xchg
movsb
mov
sbb
push
outsb
jb
pop
shrb
ja
lods
pop
mov
mov
movsl
mov
xor
jnp
popa
cmp
aad
mov
push
adc
or
add
inc
cmp
push
xchg
loopne
and
mov
repnz
xchg
sbb
out
push
and
ss
movsb
in
pop
inc
xor
mov
dec
test
arpl
ret
add
adc
in
icebp
ljmp
mov
pop
js
and
pop
int3
adc
sbb
lahf
imul
pushf
xchg
dec
xor
mov
sub
pop
mov
push
int
int
out
adc
scas
rorb
vshufpd
add
lcall
adc
lods
pop
or
and
fstl
outsb
lods
mov
dec
jb
sub
vpmullw
push
jecxz
popa
add
pop
std
int3
stc
sub
enter
mov
sbb
test
fisubrs
pop
sbb
int
push
data16
pop
scas
sbbb
pop
idiv
rcrl
jo
add
adcb
adc
jb
movsl
pushf
mov
cmp
es
rcll
cmp
xchg
cmc
outsb
add
jecxz
dec
xchg
fdivrl
bound
jae
lret
and
add
and
imul
jne
adc
pop
xchg
pop
fdivrs
je
idivb
add
mov
or
xchg
sub
data16
mov
jge
mov
jno,pt
mov
jmp
aad
cmpps
push
inc
ljmp
mov
push
cwtl
add
hlt
outsb
adc
pop
aas
out
and
pop
and
shl
xchg
and
lds
sbbl
push
push
loopne
pop
vpxor
and
sti
mov
bound
dec
out
mov
and
or
aas
ja
inc
fdivs
lods
and
or
fs
shl
loope
cmp
inc
ljmp
inc
xchg
sbb
mov
das
insl
ljmp
add
daa
fiaddl
inc
psubusw
mov
fwait
outsb
or
das
ja
dec
pop
shlb
shll
sub
jp
xchg
xor
adc
cmc
int
int
inc
cmp
and
mov
mov
add
sbbl
mov
sbb
push
sbb
popf
mov
gs
push
jg
mov
addr16
cmpsb
shll
rcr
dec
jle
mov
adc
xchg
cmp
mov
or
or
lret
ror
out
and
xchg
lock
cmp
stc
arpl
mov
test
sbb
sbb
sub
dec
cwtl
in
and
push
inc
mov
mov
pop
insb
pop
lahf
xchg
into
inc
push
gs
sub
outsl
jl
hlt
mov
mov
dec
lods
and
in
daa
stos
adcl
push
fisttps
loopne
mov
mov
pop
add
pop
wrmsr
sub
paddb
movsl
xchg
inc
sub
lods
inc
inc
jmp
lret
pop
fidivrs
xor
or
xchg
push
mov
shlb
pop
xor
lods
jp
das
mov
ss
inc
xor
dec
cmp
andl
or
sbb
xchg
mov
push
mov
jae
fwait
inc
inc
dec
push
jge
pop
lahf
mov
and
lcall
sahf
ljmp
xor
out
jmp
mov
add
es
cmpsb
pop
xor
sbb
stc
int
adc
dec
jae
arpl
popa
sbb
gs
mov
out
add
mov
in
addr16
inc
ret
xchg
jecxz
lahf
adc
xchg
js
dec
pop
adc
das
loope
stos
fcoms
out
nop
cmp
lock
add
test
xchg
sub
sub
out
dec
lods
sbb
ret
iret
aam
cwtl
inc
icebp
pop
push
xchg
xor
ret
and
adc
cs
cs
stos
or
xchg
fcomps
das
cmpsl
mov
adc
div
out
movsb
adc
push
gs
ss
lret
mov
cmpsb
fisubrl
mov
inc
clc
fsubs
call
jge
mov
cmp
pop
jge
pop
cld
mov
and
repz
call
fdivrp
popf
dec
das
es
nop
scas
lds
mov
or
add
aaa
xor
cmp
cmp
mov
push
out
dec
imul
jbe
mov
mov
push
fnstsw
pop
jge
ds
pop
adc
mov
inc
dec
fwait
add
jnp
sbb
imul
inc
shl
mov
cmp
daa
add
cmp
es
and
fcmovne
out
stc
inc
int3
mov
sub
push
mov
in
ret
dec
sbb
sub
mov
push
sub
push
mov
mov
sti
xchg
jge
bound
adc
cwtl
iret
mov
lods
stos
rcrb
push
push
in
sbb
mov
int3
jo
add
lds
data16
mov
fdiv
andl
es
cmp
es
xor
mov
and
es
cwtl
pop
loope
inc
iret
and
jmp
mov
sub
mov
xchg
pop
test
and
mov
dec
outsl
arpl
push
pop
dec
xchg
aas
out
scas
jg
xor
sbb
ret
ja
js
lret
add
xlat
test
out
mov
xor
xchg
ds
jns
xor
cmpsl
mov
jne
jp
test
mov
mov
fdivs
sub
mov
aaa
fidivl
aad
fldl
push
arpl
je
mov
lret
clc
mov
mov
movsl
clc
ss
sub
sahf
sub
adc
js
scas
mov
jmp
xchg
call
fmul
xlat
lret
sti
aaa
in
sub
xor
fisubrs
lods
mov
adc
aas
sub
setne
sar
in
push
mov
xchg
jne
clc
mov
mov
cmp
push
mov
enter
xchg
into
jl
std
pop
int
ljmp
add
jle
insb
das
or
inc
icebp
push
mov
in
pop
cltd
test
cmp
or
add
mov
jl
roll
test
mov
jmp
xchg
dec
mov
pop
outsb
push
or
sub
sub
in
xchg
mov
ss
decb
arpl
imul
lock
leave
mov
jns
mov
std
cmpsl
imul
xor
insl
sbb
or
fcomi
cli
mov
xor
xor
dec
xchg
stos
lods
je
mov
sbb
fsts
add
xbegin
xchg
or
push
sub
xchg
jb
mov
push
push
ficoml
sub
jle
mov
mov
loope
pusha
hlt
sub
pop
xlat
mov
aam
xlat
push
jle
pop
arpl
jno
and
push
test
into
xchg
xor
mov
mov
jne
dec
std
shl
in
int
cmp
fisubl
pushf
mov
xchg
adc
jbe
pop
scas
mov
xor
pop
sbb
xchg
inc
leave
cli
loope
fidivrs
dec
add
jno
rcll
ret
inc
pop
andb
sub
inc
in
sbb
pop
cmp
xor
clc
jno
push
jbe
pop
les
add
fsubs
dec
les
out
out
push
dec
inc
mov
sbb
inc
repnz
aas
ds
fadds
clc
cmp
or
jb
repnz
jl
lret
adc
ss
nop
stos
fsubs
or
outsl
inc
or
fsubr
xchg
iret
xor
adc
xchg
xor
xchg
ret
insb
call
push
add
jle
push
dec
test
lahf
scas
cmp
int3
scas
pop
lea
push
stos
test
add
dec
lea
push
fildll
cs
fwait
and
dec
addl
scas
push
mov
dec
stos
mov
mov
add
mov
fcoms
shll
dec
pushw
mov
mov
pop
rorl
and
sahf
imul
sbb
pop
and
mov
xchg
insb
shl
dec
jb
or
shr
popl
mov
add
cmp
test
shr
sub
lods
fildl
orb
stos
aaa
sbb
push
mov
or
pushl
mov
jnp
clc
sarl
jno
outsb
push
nop
push
out
lret
fdivrp
mov
outsl
sbb
jae
imul
faddl
push
iret
cmp
mov
out
lea
mov
mov
addb
sarb
xor
fwait
rcrl
mov
stc
adc
lret
inc
pop
imul
jnp
and
inc
imul
mov
hlt
iret
xchg
test
clc
mov
das
adc
ljmp
jg
in
scas
push
cs
lcall
lea
and
cmp
jno
xchg
nop
aaa
movsb
jno
xchg
repz
arpl
or
fs
push
xor
pop
ds
fsubrs
mov
jo
dec
iret
push
int
inc
push
xchg
int
hlt
out
inc
xor
dec
stos
fcomps
mov
jmp
mov
lds
xor
out
xchg
in
xor
add
xchg
ret
fcmovne
lcall
or
lcall
push
gs
push
adc
push
xor
dec
decb
enter
mov
adcl
jmp
dec
sti
mov
inc
push
pop
jbe
or
push
mov
leave
stos
add
data16
mov
gs
fisubrs
addr16
mov
pop
push
mov
int
ror
add
pop
xor
inc
rcrb
lods
mov
jg
pand
xchg
mov
out
xor
mov
add
pop
repz
jno
jle
and
cmp
sbb
inc
xor
xchg
mov
or
aas
inc
mov
pop
sti
xlat
shlb
shlb
hlt
int
fwait
out
inc
pop
jecxz
fcom
outsl
cmpsb
repz
bound
or
mov
mov
inc
pop
mov
cmc
mov
cltd
test
pushf
aam
push
cmp
inc
repz
repnz
jle
push
cld
jbe
adc
jns
xor
imul
pop
out
mov
jae
xor
testb
adc
repz
cmpl
hlt
addb
arpl
fs
hlt
mov
mov
dec
fdivl
leave
or
jns
dec
mov
xor
sar
subl
push
shrb
pop
ja
rcr
mov
adc
pop
xchg
dec
outsb
fsts
iret
dec
inc
js
test
clc
xchg
push
gs
sti
sbb
lret
fdivs
push
inc
pop
flds
jp
fadd
mov
jnp
xchg
test
dec
xchg
mov
aam
gs
add
subl
loope
jns
clc
test
aaa
or
out
hlt
mov
or
xorb
lahf
dec
xchg
je
iret
cmp
jo
in
xchg
and
rcrl
and
outsl
negb
psllw
cmpsl
sahf
mov
nop
cmpb
mov
ss
ds
fdivrl
nop
cmc
ja
out
inc
adc
pushf
ret
ss
in
jbe
in
std
and
push
adcl
sub
dec
mov
pop
mov
jmp
iret
imulb
dec
cmp
add
sub
adc
test
cs
xchg
andb
xor
push
jle
sbb
leave
or
lods
scas
mov
cmp
dec
sbb
mov
push
jecxz
stc
mov
lds
mov
mov
jne
pop
or
cmp
js
dec
inc
and
xchg
add
pusha
imul
lea
test
sbb
daa
mov
xchg
adc
pop
sbb
repz
sub
dec
pop
repz
mov
add
addr16
xor
mov
cld
sbb
inc
adc
inc
pop
ja
jno
mov
fiadds
loop
movsl
add
pop
fsubrl
insb
xor
xchg
out
sahf
push
cmpsb
pop
cltd
mov
sub
fcom
push
push
test
das
fs
in
mov
adc
xchg
xchg
std
pop
jbe
xchg
aas
mov
ret
ss
jb
jbe
xchg
insb
loope
stos
pop
fsub
loopne
sahf
push
dec
insl
iret
push
push
fnsave
xorw
movsb
push
sub
mov
jbe
pusha
sahf
in
fwait
xchg
xchg
mov
xchg
pop
subb
pop
shll
jae
jae
inc
mov
cmp
jnp
jnp
aaa
pop
mov
sub
xor
lock
les
aad
out
scas
insb
cld
jmp
dec
icebp
cmpsl
loop
sbb
mov
cmp
cs
push
into
inc
dec
sub
sub
jmp
fidivs
dec
sbb
sub
mov
adc
repz
lret
scas
jle
ds
xchg
lcall
repnz
xchg
pop
jge
test
arpl
scas
mov
jbe
mov
outsl
adc
loop
sub
jg
mov
sub
jns
pop
movsb
hlt
repz
pop
sahf
mov
mov
bnd
jg
notb
xchg
cli
adcb
xor
das
or
fstpt
adc
jl
rorl
mov
popa
adc
inc
pop
outsb
jl
orb
inc
aad
xor
pop
sbb
push
imul
jl
std
add
add
push
xor
lds
xchg
mov
clc
out
outsb
pop
pop
das
popa
jp
js
push
enter
and
les
stos
aas
xor
shrd
mov
pop
jge
sbb
jecxz
or
test
cli
jnp
and
cltd
mov
pop
mov
mov
sar
jno
pop
fcoms
arpl
push
add
pushf
movsl
and
es
pusha
mov
shr
xor
enter
adc
sub
cmp
pop
jecxz
add
inc
jge
jecxz
xchg
or
mov
cld
pop
sub
add
neg
mov
lcall
movsl
cld
pop
and
icebp
xchg
pop
adc
std
and
mov
xor
ficoml
xchg
dec
xchg
jns,pn
mov
mov
and
hlt
dec
lcall
and
lea
push
dec
loope
rcrb
out
addb
inc
cmp
push
push
data16
fsubr
and
cli
pop
adc
test
sub
loop
dec
fsub
movb
or
cmp
fimull
cli
call
push
xchg
in
cwtl
push
xor
lcall
dec
xchg
adc
loope
lcall
js
pop
scas
hlt
jne
in
mov
loopne
inc
cld
ret
roll
dec
into
mov
or
test
sub
jg
jo
xchg
ficoml
fldcw
jge
and
xchg
push
out
fcompl
out
mov
xchg
mov
lods
jae
adc
mov
rol
sbb
mov
ds
or
aam
sbb
lret
in
pusha
jae
pushf
dec
add
xor
out
or
in
ficoms
popf
pushf
lret
sti
mov
mov
fcomp
pop
xchg
pop
les
test
jecxz
add
call
xchg
jne
inc
stc
push
cmc
add
push
push
xor
xor
pushl
fdivrp
adc
jnp
sarl
imul
cmp
and
sub
mov
add
bound
pusha
scas
dec
sub
pop
aad
inc
inc
lods
dec
fistl
enter
push
pop
loop
repz
add
repz
push
je
mov
jp
sub
dec
xchg
fildll
das
pop
data16
dec
loope
aas
sti
nop
push
les
push
movsb
pop
imul
fnstcw
adc
mov
pop
int3
sub
xchg
pop
sub
lcall
xor
inc
xor
dec
stc
adc
cmp
lods
nop
mov
sub
pop
mov
mov
pop
iret
cld
inc
sbb
cli
xor
jns
lahf
cmpl
scas
push
adc
pop
in
xor
xor
aas
add
jle
cmp
fimull
in
dec
ret
inc
jbe
in
sahf
or
mov
mov
gs
and
push
xchg
mov
xchg
rcpps
jmp
xchg
push
or
pop
ret
arpl
outsb
and
iret
bound
pop
dec
push
xchg
insb
jmp
leave
fs
loope
jae
dec
cmpsb
stc
jno
rcr
test
adc
pop
mov
lcall
mov
xchg
add
or
add
inc
dec
ds
sbbl
in
jp
add
pop
ret
inc
notb
test
js
loope
movsb
push
sbb
mov
dec
enter
cmp
xchg
ret
mov
pop
ja
jge
dec
popf
jae
push
xlat
insl
int
push
stos
cltd
adc
cwtl
fdivl
rorl
mov
mov
push
mov
daa
in
jmp
dec
es
insl
fstpt
popl
addl
mov
jno
push
lods
jp
jo
mov
lea
xchg
fs
sub
std
fiaddl
sahf
gs
and
sti
mov
icebp
jb
jl
andl
ljmp
jle
jb
jl
mov
insb
push
add
cmp
or
jge
int
jmp
inc
in
pop
repz
cli
lret
push
cmp
mov
push
outsl
adc
mov
sub
inc
push
imulb
in
fld
cmp
pop
lea
das
xor
out
pushl
jg
lock
cmp
outsb
clc
das
sub
mov
es
inc
insb
sbb
pop
xchg
outsl
sub
fiaddl
aam
or
adc
cmp
mov
rcrb
in
adc
dec
ret
mov
ret
fisubrl
aaa
adc
jae
repz
pushf
jl
xchg
scas
icebp
and
and
imul
rcr
pop
sahf
lea
fnstsw
mov
sbb
loopne
adc
shll
fildl
in
xchg
fsubrl
xchg
jb
decb
jmp
test
imul
lock
lods
jo
in
xor
cltd
outsl
arpl
jb
jno
inc
cmp
fbstp
mov
jge
mov
filds
pop
data16
cmp
in
imul
mov
jae
hlt
jle
xorl
pop
jg
mov
imul
push
out
xchg
mov
cmp
test
outsl
jg
push
and
dec
add
or
or
or
push
push
jne
jae
jmp
lahf
pop
fcompl
cli
push
inc
xchg
out
mov
mov
imul
fistl
xchg
gs
push
push
or
outsb
jno
in
movsb
mov
and
xor
cmc
xchg
lods
test
jae
jmp
jnp
mov
push
scas
mov
inc
shlb
andnps
push
xor
jmp
and
pop
clc
mov
std
ljmp
cmp
insb
mov
sub
and
repz
pop
fiadds
sbb
mov
jnp
xor
lcall
fsub
shll
xchg
inc
xchg
cwtl
ret
jmp
pop
rorb
out
cltd
cs
adc
dec
xchg
imul
int
lods
sub
sti
push
jbe
push
mov
pop
dec
push
je
jae
test
sahf
out
adc
test
into
fimull
xchg
and
pop
push
xchg
std
nop
fs
es
icebp
leave
jl
push
fwait
mov
into
cmp
mov
cmp
call
nop
inc
leave
out
out
dec
fs
push
xchg
pop
cs
sub
push
cmpsb
pop
mov
mov
pop
xchg
sub
add
mov
popf
add
repz
inc
dec
sbb
mov
mov
pop
mov
arpl
pusha
mov
xchg
in
insb
bound
ss
mov
lcall
pop
rorl
fistpl
jg
movsb
add
arpl
cmp
dec
sbb
push
jo
orl
cmp
fildll
adc
fdivs
sub
dec
mov
data16
loop
sub
pop
mov
sub
push
popa
or
dec
andb
jno
movsb
imul
mov
sahf
int3
fstps
sbb
sub
xor
aad
sbb
cmp
sbb
push
push
repz
scas
out
lcall
mov
pusha
cwtl
pop
mov
loop,pn
and
pop
xor
jo
jns
lret
inc
sbb
in
mov
call
ret
stc
es
sbb
xchg
xchg
adc
add
cltd
shr
mov
xchg
jge
repnz
stc
lcall
sbb
pop
and
cvtps2pd
leave
sub
daa
jecxz
call
push
dec
mov
cs
imul
cmp
call
loop
mov
adc
xchg
mov
inc
and
adc
xchg
into
pop
add
pop
mov
push
lret
cmp
inc
int
test
push
xchg
lock
in
cmc
jns
mov
dec
and
pop
je
int3
int3
and
push
pop
lret
cmp
inc
push
popa
pop
adc
aaa
push
int3
addr16
xchg
in
push
jecxz
jge
pop
mov
mov
sar
enter
dec
leave
mov
xor
fisttpll
insb
insl
das
mov
cmp
call
imul
or
push
mov
bound
and
mov
pop
or
shrb
push
pop
movsl
xor
jecxz
xor
fmul
xor
xor
fadd
adc
jge
push
aad
push
jo
in
pop
iret
mov
out
adc
pushf
sar
pop
pop
into
std
or
leave
pop
pop
sbbb
dec
lds
lods
dec
cs
in
mov
shl
xor
sahf
adc
push
dec
xor
mov
loopne
mov
shlb
add
xchg
xor
btcl
lret
jl
and
jge
test
inc
cmp
test
out
sbb
jmp
cld
es
call
push
pop
push
shrb
cld
dec
sub
and
in
mov
or
dec
lahf
mov
sub
loope
sub
movsb
int3
popf
nop
enter
or
add
cmpsb
sub
xchg
pop
outsl
jbe
push
pop
out
mov
and
inc
fistpll
js
lock
repnz
adcb
sti
jno
jo
cmp
jle
mov
jl
or
jns
clc
pop
leave
jecxz
aas
mov
pop
add
scas
push
ret
cli
adc
adc
and
bound
ds
xchg
cs
mov
xchg
mov
das
into
roll
les
or
mov
inc
movsl
dec
inc
jl
les
pop
jbe
clc
push
jbe
xchg
les
pop
pop
enter
mov
data16
pop
sti
mov
and
xchg
and
pop
lock
push
sbb
xchg
adc
sarl
pop
mov
shl
cmc
mov
fwait
lds
loope
lret
pop
imul
mov
rolb
fnstsw
lods
in
pop
in
adc
dec
jbe
shl
dec
or
adc
subb
mov
pop
cmc
imul
std
push
ljmp
pop
inc
ljmp
movsb
xchg
dec
fstl
jns
adc
fnsave
loope
or
aad
xor
push
and
inc
and
cltd
or
fwait
sub
dec
dec
mov
adc
call
leave
xlat
mov
out
add
bnd
rclb
fisttpl
add
or
sub
pushf
pop
add
out
std
push
shl
idivb
into
ret
stc
sub
xor
pop
push
xchg
dec
adc
mov
mov
pop
loope
inc
aaa
adc
bound
jl
pop
lds
bound
mov
arpl
pop
xor
pushf
jbe
test
xor
mov
scas
ja
mov
push
cmpl
hlt
lret
mov
mov
jmp
popa
rorb
add
and
aas
fists
sub
adc
repnz
imul
sti
mov
loope
rcl
or
dec
jg
mov
jno
stos
enter
jge
xlat
outsl
or
adc
cli
pop
in
mov
jb
clc
and
ret
add
lods
das
mov
das
shrl
dec
xchg
mov
stos
ficompl
shlb
lret
cltd
addr16
lods
gs
pop
clc
sub
ds
mov
lea
jno
ret
xor
fcmovbe
insb
sub
outsl
fidivrl
add
addb
int3
mov
popa
enter
jae
cmpsb
mov
insl
dec
adc
sub
sub
xchg
bound
jp
mov
mov
mov
cmp
jmp
mov
out
sbb
dec
cmp
jecxz
in
cmp
cwtl
mov
lds
mov
addr16
xchg
lret
test
dec
insl
test
jg
shl
repz
icebp
or
push
cld
movsl
out
inc
dec
pop
popf
out
push
ljmp
sub
loop
pusha
neg
push
ljmp
xor
leave
push
push
mov
daa
out
faddl
mov
or
pop
fimuls
push
imul
cmp
fildll
ror
mov
jnp
xchg
outsb
and
push
mov
nop
rorl
pop
pop
mov
dec
std
sbb
pop
orl
mov
inc
stos
inc
lods
sti
jae
jl
ret
xchg
sbb
mov
mov
js
xor
push
scas
xchg
imul
test
or
neg
lock
imul
cmp
sub
test
cld
inc
pop
xchg
inc
and
dec
xor
and
stos
insl
mov
or
sub
test
lods
dec
data16
and
cld
out
cmp
dec
lock
mov
mov
shrb
mov
xor
int
inc
lea
jb
pop
mov
xor
push
pushf
xchg
hlt
or
jge
fisttpll
js
xchg
in
or
sar
lea
lret
add
pop
mov
inc
mov
mov
mov
adc
daa
xchg
xor
mov
push
pop
inc
add
jp
icebp
fldcw
imul
subb
sub
and
dec
add
fwait
loopne
adc
js
cmc
or
jl
mov
aas
and
push
jo
push
or
jmp
jb
sbb
dec
test
test
outsb
nop
nop
mov
bound
jl
in
push
fnstenv
nop
faddp
ds
dec
test
dec
in
dec
fsqrt
shrl
sbb
jl
ror
add
cwtl
mov
sahf
movsb
sarb
lock
popf
cmp
fs
or
popa
xor
or
lods
clc
repz
aad
sbb
sbb
dec
ret
fadds
sti
add
dec
mov
push
adc
popl
jne
pop
pop
or
insb
jbe
das
push
repz
pop
dec
or
xchg
xchg
fisubs
or
sbb
lret
cs
inc
jle
jmp
repnz
in
xchg
test
xchg
and
in
in
es
pop
jecxz
stos
mov
pop
push
rol
or
sbb
pop
mov
inc
mov
leave
adc
inc
loope
int3
jae
pop
adc
movsl
push
cmp
bound
sub
nop
cld
mov
pop
sbb
push
jge
cmp
out
insb
add
fdiv
jo
jns
sbb
push
add
or
jge
push
insl
sub
jo
mov
jmp
jnp
sub
or
mov
xchg
pop
setae
push
xchg
mov
incl
xor
xor
pop
hlt
cmp
test
nop
mov
adc
add
aaa
mov
jo
xor
iret
fdivr
ror
mov
inc
sbb
jae
pop
shr
sbb
das
dec
add
jl
cli
ss
imul
shlb
ljmp
into
pop
xchg
jl
int3
sbb
movsl
cmp
fcomps
sub
sub
fwait
jne
sbb
out
cmp
insb
mov
gs
out
jecxz
aas
mov
stos
sbb
cmpsl
pop
adc
add
clc
and
cmp
or
je
jb
dec
imul
lret
sub
mov
rcr
jae
andl
push
das
addr16
xchg
mov
leave
pop
add
rorl
sbb
jp
jo
dec
int
cmc
in
stc
lds
popf
dec
loop
mov
push
jbe
mov
jne
test
popa
lds
and
adc
in
push
testl
clc
mov
cld
mov
xor
out
mul
cmp
out
and
and
push
mov
movsb
ja
out
inc
dec
xchg
sbb
nop
jnp
cltd
mov
xlat
dec
lret
pop
add
nop
ljmp
mov
xchg
mov
les
mov
sahf
test
xchg
lods
adc
inc
mov
into
fwait
mov
mov
push
lret
mov
sbb
pop
out
pop
les
mov
test
shl
sbb
push
ret
jnp
push
sbb
dec
daa
inc
in
cwtl
jae
dec
andl
xlat
mov
mov
and
jnp
jne
stos
pushf
test
test
pop
push
repz
popf
sbb
clc
dec
pop
cmp
pop
cmp
push
push
lods
gs
andl
sbb
enter
cmpsl
sarl
cmpsb
inc
mov
xchg
cmp
add
movsb
push
push
cmp
dec
out
mov
xchg
ss
insb
xchg
pop
jo
push
ss
cmp
cltd
or
mov
pop
dec
es
sbb
mov
les
pop
ja
imul
add
js
jnp
mov
les
mov
push
flds
cmp
sub
mov
jl
mov
sbb
jmp
pop
les
lret
cmp
mov
in
fiaddl
mov
cwtl
cmp
aad
jae
outsb
pop
jg
inc
mov
sbb
cmp
in
sub
stc
inc
cmp
dec
dec
aaa
stc
jmp
adc
sti
je
or
mov
adc
jbe
arpl
push
in
xchg
pop
lahf
push
in
repnz
add
pop
imul
mov
and
dec
aad
sub
sbb
test
insb
lcall
push
out
lret
popa
mov
shll
sub
jecxz
cmp
subl
in
push
xor
cmp
or
mov
sbb
ljmp
movsb
pop
pop
loopne
mov
lds
add
fistpll
pop
jecxz
inc
mov
pop
stc
push
repz
aam
xlat
mov
fs
cmpsb
lahf
dec
lahf
movsb
sbb
jecxz
add
in
or
imul
je,pt
imul
inc
dec
dec
mov
push
add
idivl
push
mov
jl
add
cld
push
fsubr
fnsave
ret
adc
int3
fsubrl
add
les
int3
pusha
or
dec
movsl
mov
loope
pop
inc
push
sub
roll
pop
mov
pop
incl
lea
test
ficomps
int3
sbb
xchg
cmc
sub
repnz
nop
js
fsubs
xor
stos
adcl
sub
push
add
lock
push
sbb
push
in
cmp
lds
mov
cmpsb
cmp
pop
push
notb
push
lea
das
iret
or
or
fwait
rcll
mov
out
in
sarl
jae
movsb
dec
mov
iret
aam
mov
cld
rorb
shlb
dec
inc
dec
mov
jnp
scas
je
xchg
into
inc
mov
les
cmc
inc
dec
leave
flds
and
cltd
shr
aas
sub
add
sti
scas
negw
int3
insb
testb
scas
es
jnp
loope
jns
adc
mov
sti
fs
sti
mov
and
leave
jmp
push
push
out
ret
lea
insb
lea
cmp
mov
cltd
loope
imul
imul
rcrb
nop
inc
iret
jno
cmp
pop
jb
mov
or
push
xchg
lahf
cli
add
xor
stc
leave
out
cmp
cmc
mov
pop
les
or
adc
and
je
lcall
sub
adcl
std
mov
sub
adcl
ret
cmp
dec
adc
imul
jbe
xor
jp
outsl
insb
xor
cmpsl
add
cmp
icebp
mov
mov
loop
jecxz
stc
jmp
iret
or
mov
mov
add
sbb
mov
push
cmp
push
sbb
outsb
dec
and
stos
mov
inc
stos
insl
xchg
out
into
clc
push
adc
adcb
gs
push
sbb
pushf
aaa
addb
mov
movsl
inc
dec
cmp
or
xchg
mov
cmp
pop
hlt
dec
dec
inc
dec
mov
mov
adc
jmp
shlb
jecxz
ret
cwtl
jl
cmp
xchg
aam
out
rclb
aas
insl
jmp
les
lahf
pop
test
scas
idivl
repnz
mov
inc
xchg
mov
mov
cmpsl
bound
std
push
xchg
rolb
loopne
or
aam
xor
stc
dec
mov
pop
into
add
mov
test
fnstenv
pop
mov
sub
aam
int
mov
icebp
std
pop
or
dec
and
inc
pop
xchg
cmp
ja
fdivp
dec
adc
lock
push
mov
push
jb
pop
xchg
pop
sbb
mov
pop
pop
xchg
lods
cmpsl
inc
mov
gs
xchg
dec
fdivrl
std
cld
fdivl
xchg
mov
sbb
clc
shlb
push
and
mov
xchg
pushf
iret
sbb
sbb
scas
add
fsubs
mov
push
adc
imul
rorb
xchg
test
push
repnz
adc
test
stos
or
in
shlb
sbb
aas
scas
daa
loopne
dec
inc
sti
push
aad
and
aas
sub
jo
add
jae
jbe
lods
out
popa
addr16
xchg
pop
and
dec
push
enter
sbb
hlt
push
jecxz
jno
lret
xchg
sahf
push
mov
icebp
das
cmpsb
dec
push
lret
and
pusha
sub
fcomps
jo
inc
jnp
xor
lar
xchg
inc
stos
push
imul
lret
inc
pop
cmp
and
clc
mov
cmc
test
cli
pop
imul
mov
sbb
xchg
lods
aam
call
xor
mov
mov
sub
cmc
sub
cmc
shr
into
outsw
inc
push
test
into
pop
sbb
mov
dec
sbb
sub
inc
call
pop
mov
push
xor
aad
mov
mov
adc
sti
addr16
jbe
lods
loope
pop
aam
lods
jmp
lds
das
xor
inc
int
push
insb
fsubrl
daa
sbb
add
sub
xor
mov
in
jae
and
pop
jmp
jb
pop
ss
sti
adc
sub
mov
jnp
out
stos
in
mov
test
mov
mov
xor
xchg
or
aaa
jno
outsl
cmp
jmp
sub
mov
lret
scas
mov
ret
pop
lock
jmp
ja
or
sbb
test
std
lea
jle
inc
sub
jno
jge
or
and
xchg
jmp
jge
das
jecxz
fcomps
test
lret
mov
leave
sbb
lahf
mov
loope
in
sub
fimull
fisubs
add
mov
lock
mov
pop
cs
sub
shlb
outsl
addl
ljmp
mov
into
cmpsl
iret
scas
mov
inc
mov
mov
xchg
bound
mov
dec
xchg
fwait
add
xchg
fcoml
mov
xacquire
push
iret
gs
int3
mov
sub
cmc
mov
loop
cmp
fwait
pop
mov
or
scas
pop
rcrb
das
sub
mov
stc
rcl
int3
push
rcl
xor
xchg
gs
gs
jg
mov
dec
xlat
pop
fsubr
push
add
lods
adc
mov
sbbb
xor
mov
mov
xor
out
and
jb
mov
imul
add
lret
pop
roll
adc
and
fdivrs
push
out
mov
clc
or
in
add
inc
xchg
scas
sahf
adc
ljmp
nop
cwtl
fsub
dec
loop
lret
rcll
adc
sbb
cmp
mov
push
loope
pushf
scas
or
adc
jg
inc
iret
sti
dec
lahf
push
mov
mov
shl
jl
sub
cmp
sbb
jns
cwtl
decb
cltd
dec
lea
add
cmc
push
subl
jle
mov
pop
cwtl
cmp
and
mov
push
jp
and
cli
or
jns
or
or
xlat
sub
addr16
in
mov
inc
adc
cmp
jg
data16
int3
xchg
leave
jb
xchg
es
inc
loop
stc
fmull
inc
or
cli
pop
fisubl
add
aad
movsl
add
into
adc
mov
pop
cmp
cmc
push
or
mov
dec
or
mov
nop
pop
push
and
adc
jne
mov
mov
xchg
sbb
mov
mov
dec
pop
sbb
jno
test
add
jmp
cmp
inc
orb
mov
inc
fs
xchg
jle
arpl
jbe
pop
test
cld
std
aaa
aaa
fadds
pop
and
stos
loop
sbb
sbb
push
cwtl
cmp
sub
stos
adc
out
push
jb
loop
std
push
mov
dec
cmp
jb
or
cmc
mov
mov
sub
mov
addr16
jle
jmp
or
clc
mov
jae
pop
xchg
in
dec
ljmp
push
popl
add
sbb
mov
xchg
loopne
push
and
xor
pop
add
or
jo
mov
in
pop
xor
iret
xchg
cmpsl
in
rcll
lahf
push
test
stc
popf
mov
lds
inc
nop
sub
mov
mov
test
jmp
adc
les
adc
lret
loopne
dec
ljmp
pop
mov
mov
push
stos
push
push
data16
pop
inc
lds
inc
movsb
in
mov
loopne
test
ja
cmp
push
or
mov
lcall
add
test
push
insl
sbb
mov
imul
fwait
xor
int
cmp
out
sbbb
and
push
loop
sti
sbb
loopne
rcr
stc
outsl
cwtl
ja
sub
sbb
mov
inc
int3
aam
cwtl
or
and
roll
scas
adc
pop
icebp
sbb
push
jl
pop
push
dec
mov
sbb
int
mov
mov
ss
stos
push
jp
rorl
std
decl
mov
hlt
repz
ds
outsl
movsb
add
leave
adc
mov
sbb
cld
pop
xchg
bound
leave
insb
xchg
ret
icebp
pop
fstpl
mov
lcall
push
cmp
fmulp
iret
arpl
cmc
notb
add
add
je
mov
pusha
jno
ja
je
dec
dec
stc
call
icebp
int3
ja
imul
enter
arpl
call
or
push
dec
jne
inc
in
and
lea
sarl
sbb
jl
je
bnd
or
sub
bndstx
pop
test
cmp
mov
xchg
push
xchg
shl
dec
xor
iret
adc
je
iret
jp
test
jg
inc
xchg
fisubrs
sub
and
sbb
and
stos
enter
test
pop
mov
or
popf
mov
es
xor
dec
add
xchg
push
clc
inc
mov
inc
cmp
popf
mov
bnd
out
pop
std
sbb
rolb
push
jl
jno
das
xor
push
sbb
out
inc
inc
lret
mov
fnsave
insl
xchg
cwtl
ljmp
adc
shlb
shrl
sub
xor
add
loopne
inc
xor
mov
outsb
mov
outsl
fldcw
imul
std
iret
jne
pop
test
idiv
xchg
xor
cmp
cmc
in
jge
and
fstps
sub
popa
jae
nop
test
add
fsts
or
pop
std
or
pop
jno
fwait
mov
push
add
or
int
lahf
xchg
call
enter
test
sub
lret
dec
cmp
adc
jle
jnp
movsb
dec
adc
xor
inc
sbb
inc
addr16
mov
test
cmpsb
scas
cwtl
bnd
jle
xor
icebp
out
test
std
mov
and
push
pop
xchg
inc
mulb
ja
mov
pop
aas
daa
push
sub
pop
aaa
pop
jo
and
mov
lea
push
push
xchg
cwtl
jnp
push
cmp
pusha
stos
push
jno
out
lcall
in
push
jle
mov
movsl
hlt
lea
nop
bound
push
rorb
xorl
clc
outsl
mov
push
sub
xchg
dec
adc
mov
xor
ficompl
in
cmp
scas
hlt
cld
int3
or
add
xlat
mov
mov
mov
movsb
test
daa
pop
push
mov
stc
jnp
cs
fcmovu
les
sbb
lods
bound
sti
push
fstpt
mov
ret
test
mov
or
in
stos
jne
inc
mov
inc
xor
cmp
ret
in
sbb
fs
or
sub
jo
xchg
lds
lret
add
mov
fisubs
scas
inc
fwait
sub
clc
dec
nop
xor
lds
xor
movsl
test
pusha
mov
fidivrs
fs
sahf
and
std
pusha
movsb
imul
sahf
fnstsw
inc
xchg
jg
iret
cld
mov
xchg
movsl
dec
rclb
push
int
push
dec
dec
mov
dec
jns
mov
sarb
in
cld
jl
test
cmp
push
pop
in
fs
repz
mov
fs
movsl
stos
jne
sub
xchg
inc
xlat
pop
insl
ljmp
mov
lret
sbb
cmp
stos
mov
daa
out
addb
inc
in
subl
and
lods
jg
fs
jp
aam
out
mov
loop
out
mov
push
mov
pop
and
xor
div
notb
sbb
jne
mov
cmp
and
mov
test
nop
or
addr16
push
ret
add
pushf
add
pop
jb
dec
incb
and
in
jmp
dec
adc
imul
outsl
imul
xchg
test
push
sub
icebp
xchg
add
sbb
ljmp
dec
fnsave
and
sub
mov
aad
jno
jecxz
mov
js
adcb
xchg
scas
lahf
clc
xor
push
fwait
add
insl
mov
lods
test
out
push
out
push
lret
xchg
add
rcrb
out
lret
adc
sub
aaa
sbb
test
adc
add
test
mov
inc
cld
mov
inc
popf
popa
movsl
sub
into
xor
clc
sti
jbe
divb
in
stos
adc
fisttpl
cmp
adc
sarl
and
dec
lcall
cmp
jl
xchg
popf
ds
pop
nop
mov
fdivs
adc
addl
jle
cmp
ja
cmp
dec
pop
test
pop
xchg
andb
outsl
or
rorl
and
sub
jecxz
pushf
pop
stc
ret
dec
test
cmp
inc
mov
popf
stos
stos
scas
sti
mov
das
stc
and
int3
out
dec
filds
jnp
jle
inc
inc
jecxz
inc
dec
insb
jnp
test
push
imul
sbb
in
mov
fisubrl
ret
fsubrl
aas
sbb
mov
add
dec
pop
je
adc
xchg
mov
aam
pop
jno
push
dec
aad
dec
dec
rol
stc
repnz
loop
pop
mov
and
mov
jecxz
pop
fdiv
js
jp
imul
xor
iret
icebp
mov
insb
sbb
cmp
dec
mov
inc
aam
cwtl
arpl
mov
roll
rorb
into
pushf
movsb
add
fwait
lods
aam
inc
cmp
aad
popa
sbb
rcrb
pop
jb
cmp
daa
pop
gs
push
mov
add
shrb
adc
sti
shrb
in
inc
ficomps
push
js
xchg
repnz
dec
sbb
push
mov
inc
sub
cmp
pop
jl
neg
jno
mov
cmp
xchg
jo
adc
cmpsl
sahf
loop
xlat
jae
jb
cld
daa
cld
inc
push
test
mov
push
sbb
or
outsb
repz
fiaddl
pop
mov
jno
insl
cli
mov
loope
lods
cld
outsl
ret
clc
mov
fsubr
js
pop
mov
cwtl
dec
add
and
lea
loopne
jne
fiadds
imul
stos
cmp
xchg
add
inc
ficompl
lods
fdivrp
mov
jne
cmp
jnp
jo
xchg
sbb
pop
fdivs
push
mov
inc
fs
sbb
dec
jecxz
movsb
xorb
jno,pn
mov
rol
iret
inc
adc
hlt
pop
fcoml
lea
popf
daa
shlb
fstpl
mov
jo
ss
dec
push
push
outsb
cmp
ret
shl
jnp
sbb
jae
mov
cmc
out
lods
dec
imul
cltd
inc
popf
jp
stos
xchg
out
cltd
mov
popa
dec
clc
jg
inc
jmp
sarl
pop
inc
les
repnz
into
ss
out
lcall
out
inc
inc
and
mov
add
cld
lahf
scas
outsl
sbbb
and
dec
jg
repnz
pop
cmp
cmp
pop
xchg
mov
inc
push
outsb
mulb
push
pop
enter
sar
scas
inc
jbe
pop
lret
rorb
adc
xor
jb
cmp
aad
cli
call
mov
cltd
aas
push
push
xchg
js
or
sub
jecxz
mov
out
mov
test
cmc
pop
push
jbe
outsl
out
cmp
stc
adc
aam
dec
mov
and
popf
sahf
push
das
dec
sbb
insl
pop
data16
in
scas
sbb
in
cmp
sbb
inc
loopne
jp
into
stc
pop
sahf
sub
sbb
xchg
sti
jle
mov
enter
jb
pop
adc
push
or
movsl
in
clc
sub
fwait
gs
or
test
xor
lea
jnp
jecxz
cmp
mov
imul
jb
mov
call
jp
mov
push
cs
push
mov
jmp
jo
pop
lds
daa
pop
cwtl
jg
shlb
outsb
add
dec
ss
xchg
shll
popf
mov
jmp
jp
lds
ret
mov
leave
inc
lods
sub
ljmp
mov
std
dec
leave
push
orb
jge
pop
jnp
popa
cli
sbb
cmp
in
cli
push
jbe
mov
cwtl
lahf
jae
pop
mov
xchg
push
int
popa
lock
test
das
cmpsb
pop
xor
xor
fnsave
nop
or
inc
and
cmc
inc
fcoms
arpl
cli
pop
push
adc
imul
jns
imul
mov
cmp
dec
inc
data16
js
jo
mov
loopne
add
inc
cmp
pushf
dec
iret
xchg
sbbb
and
pop
ret
pop
and
les
aad
loopne
jnp
je
xor
shll
rorl
lock
aam
pop
mov
mov
mov
cmc
adc
scas
lock
jbe
popf
jmp
mov
mov
pop
insb
xlat
neg
loopne
or
cmc
xchg
mov
push
sub
daa
call
xchg
xor
int
jo
in
jle
add
lahf
cmc
inc
imul
movsb
in
jg
cld
ret
iret
mov
mov
ret
js
jg
daa
inc
nop
ja
std
cmp
scas
test
out
jl
mov
push
or
mov
push
inc
aaa
sub
sti
xchg
ds
sub
fldcw
cli
pop
push
mov
xor
jp
lock
in
stos
in
add
lods
cs
imul
rclb
test
out
xchg
stc
dec
mov
lfs
jns
xlat
mov
push
xchg
xchg
xchg
out
jmp
es
dec
insl
pop
mov
mov
daa
ljmp
in
mov
lods
push
and
inc
in
fucom
aas
inc
pop
rorb
pop
sbb
js
mov
and
aam
push
dec
int3
pop
idivb
dec
jbe
mov
push
scas
adc
adc
mov
enter
into
push
das
cmp
gs
pop
mov
cltd
into
push
dec
adc
lods
cmp
bound
or
and
add
mov
dec
decl
xor
jae
test
pusha
insb
cmc
es
or
fisubl
fs
cltd
cmc
jns
jl
add
cld
pop
out
repnz
sbb
pop
mov
adc
mov
imul
adc
jmp
ret
out
sbb
or
sub
mov
mov
subb
mov
cmp
and
cld
push
mov
sub
cmp
mov
adcl
sub
inc
insb
mov
pusha
shlb
das
inc
scas
fildl
mov
cmp
out
add
xchg
incb
lods
shl
jae
xchg
repnz
cmc
rorl
pop
xchg
clc
dec
ds
pushf
and
fnstcw
shl
xor
push
lret
mov
popf
xchg
imul
push
inc
xor
jp
cmpsl
in
xchg
sbb
outsb
and
out
inc
les
dec
sarb
xor
mov
xchg
out
jns
lods
pop
cmp
sbb
fwait
mov
mov
outsb
dec
mov
cmp
lock
sub
jnp
sub
add
fdivrl
sub
out
inc
xchg
lret
cld
add
test
test
sub
je
add
cmp
xor
or
shrb
les
in
cmp
xor
sub
pop
cmp
mov
push
push
or
in
mov
int3
iret
pop
int3
cld
cmc
ja
test
cmp
cld
push
dec
cmp
fcoms
andb
or
das
dec
push
inc
adc
test
imul
adc
fwait
push
dec
insb
or
mov
push
and
dec
mov
shlb
push
insb
cmp
pop
repnz
repz
pusha
mov
cmp
xor
fidivs
insb
and
jge
test
out
pop
mov
aas
fwait
jne
dec
mov
int
je
add
and
mov
imulb
in
inc
xchg
lock
mov
addr16
dec
cmp
pushf
dec
fadds
push
cmpsl
fstpt
movsb
popa
adc
shll
mov
xchg
int3
jl
xchg
jg
xor
test
enter
adc
int
loopne
vpmacsdqh
or
cmp
xor
ds
test
test
sti
lods
in
or
xchg
roll
outsl
aad
dec
dec
add
sarl
mov
and
push
push
or
insl
cmc
sub
insl
inc
xorb
lock
cmp
mov
pusha
or
stos
xor
sub
xchg
push
jmp
xchg
pop
lods
mov
inc
js
hlt
ss
xchg
add
in
cmpsb
push
dec
les
dec
std
lcall
mov
add
mov
push
add
or
push
jbe
or
and
arpl
jl
mov
xor
cmp
pop
stc
mov
fldenv
mov
test
jl
out
pop
vfrczsd
je
popf
rorl
dec
mov
xor
inc
cmpsb
dec
in
in
loope
sub
lret
xor
xchg
sub
je
sub
gs
fnsetpm(287
xchg
inc
mov
cmp
aam
lds
daa
jge
jns
inc
add
mov
mov
push
test
cs
pop
xchg
outsb
cs
push
mov
jl
cmp
pusha
push
pop
jl
pop
cmpsl
shrb
in
cli
mov
sbb
or
jo
xchg
lea
pop
or
mov
push
xchg
xchg
lods
inc
fwait
iret
pop
testl
add
pop
push
mov
sbb
pop
lcall
add
cmp
mov
pop
push
ljmp
pushf
xor
daa
inc
inc
mov
mov
repz
jge
adc
andl
add
pop
testl
mov
test
iret
push
xor
pop
iret
aas
adc
adcl
scas
mov
fs
or
mov
xor
jbe
insb
repz
rcrb
push
push
xchg
stos
addl
roll
mov
lea
dec
push
hlt
or
ljmp
mov
jle
into
fsts
and
sbb
sub
fisttpll
movsl
mov
cmp
push
and
orl
das
sub
cmp
lods
or
das
ret
inc
std
cmp
popa
dec
in
jbe,pt
stc
enter
scas
mov
pop
out
push
ljmp
outsl
out
mov
in
add
bound
stc
push
adc
shlb
shll
jnp
pop
add
loop
push
pop
cmp
or
pop
fdivrl
mov
dec
add
push
xchg
xor
int3
pop
sarb
cmpsb
jg
mov
in
fldcw
mov
or
aam
rclb
sahf
pop
pop
jp
daa
mov
cltd
jl
pop
jae
fldl
stos
mov
inc
xchg
fstl
mov
aam
dec
push
stos
adc
or
icebp
push
jns
andb
loop
cmp
aam
lods
add
mov
js
popf
xor
out
inc
or
mov
iret
js
ret
or
testb
ret
lahf
jge
out
arpl
addb
shr
push
sbb
push
cld
push
inc
test
lock
or
jle
and
loopne
mov
test
xchg
ds
xchg
jmp
hlt
dec
fwait
repnz
icebp
push
cmp
mov
dec
jle
notl
dec
mov
mov
fisttpll
cli
lock
mov
cld
pop
and
out
jmp
out
pop
int3
subl
or
fsubs
pop
add
xor
jle
cwtl
lret
inc
test
loopne
inc
lds
fdivr
cs
loope
sti
flds
icebp
mov
jmp
mov
lcall
out
inc
test
jmp
inc
in
push
je
or
imul
pop
les
pusha
mov
xchg
sbb
push
push
fdivl
lcall
mov
mov
jbe
outsl
adc
fadds
jb
jno
mov
mov
stos
mov
stos
fcoml
je
imul
xlat
push
mov
or
out
push
xor
in
clc
xchg
pop
int
aas
dec
sarb
add
xchg
inc
mov
lods
pop
sbb
ja
fs
or
test
pop
popl
push
adc
xchg
inc
adc
in
jae
shrb
jmp
fcompl
decb
sub
push
in
dec
scas
stos
or
cmpsb
ret
jo
pushf
adcb
nop
icebp
and
repz
les
fs
cmp
jmp
hlt
cmp
pop
inc
pushw
enter
popa
stos
stc
fndisi(8087
push
andl
xor
or
ret
addr16
cmp
jecxz
mov
pop
sub
adcl
inc
push
sbb
fwait
mov
cmp
pop
addr16
dec
jb
test
and
fucomi
test
in
fmul
mov
lret
pushf
cld
mov
test
xor
push
sub
pushf
pop
imul
mov
xor
pop
out
outsb
insb
pop
add
sub
sub
je
push
fsubrl
sahf
mov
imul
push
icebp
jmp
jns
in
xchg
mov
pop
cmp
test
xchg
pop
cmp
popf
push
xchg
data16
bound
addr16
sub
fwait
pop
js
in
shll
cmc
xor
or
clc
xchg
in
mov
sub
lret
jp
or
les
xor
cmpsl
int3
stos
rcr
sbb
out
mov
and
leave
and
rcrl
stos
mov
testl
jnp
outsl
cld
into
mov
lret
lods
fsubp
inc
fsub
movsb
push
mov
test
lods
inc
pop
or
sbb
xor
sub
insl
aam
mov
mov
insl
mov
fnstenv
mov
notl
daa
add
dec
sbb
aaa
pushf
dec
pop
pop
lods
xchg
xchg
jns
sub
push
mov
loopne
xchg
pop
xchg
pop
cli
mov
sbb
jmp
int3
test
mov
xchg
ret
rclb
movzbl
dec
cmp
sub
pop
jbe
clc
mov
stc
decl
in
push
fucomp
into
sub
aaa
loopne
mov
push
test
inc
adc
iret
sub
fs
cmpsb
sbb
mov
in
sbb
and
sub
hlt
jbe
add
leave
mov
jns
lcall
lods
cmp
decb
outsb
push
jo
repz
cmp
test
rcrb
scas
add
out
testb
shl
pop
xchg
add
and
testb
fsubs
incl
dec
fdivs
mov
adc
test
push
pop
cmpsl
lods
fcoms
lea
push
mov
pop
lret
iret
mov
pop
insb
xchg
data16
cmp
xchg
hlt
clc
or
cltd
sbbb
repz
sub
mov
icebp
mov
mov
and
ds
fcomip
xchg
insl
mov
mov
loope
add
push
inc
cmp
jle
mov
test
daa
jno
mov
and
aaa
inc
push
push
fsubrp
scas
fwait
lret
pushf
sub
sub
adc
test
mov
xchg
push
mov
mov
sub
jle
fstl
call
sub
lret
fldcw
fs
push
jle
dec
outsb
ljmp
ja
xchg
nop
push
scas
loope
sub
les
cli
lods
cmp
stos
test
or
adc
dec
mov
outsl
arpl
in
pop
popa
mov
and
or
push
xchg
rolb
jne
xlat
ss
push
outsb
cli
in
or
jno
sbb
hlt
fdiv
push
adc
push
add
and
js
jg
add
xchg
sbb
ss
data16
movsl
mov
out
mov
lret
inc
in
mov
out
cmc
or
aam
pop
mov
ljmp
cs
loop
clc
fbld
rcll
cmpsb
pop
test
dec
test
mov
aam
sbb
sbb
test
inc
addr16
ficomps
ds
mov
imul
data16
out
je
cmpsl
xor
lock
sbb
jecxz
pop
popa
es
stc
mov
clc
mov
push
test
push
and
js
add
test
fs
adc
xchg
cmp
scas
mov
incb
mov
mov
imul
test
push
xor
movb
mov
and
lods
mov
outsl
dec
rorb
jecxz
push
hlt
jb
sub
jb
pop
imulb
int
out
dec
dec
cmc
mov
rcrl
lcall
cmpsb
rorb
jns
push
fstl
das
inc
nop
and
lods
and
jge
loopne
aas
stc
push
xchg
cmc
lret
scas
or
arpl
fiadds
push
aad
inc
call
shr
xchg
outsb
mov
jp
pop
mov
pushf
adc
je
push
icebp
shlb
sbb
loop
jae
lds
in
jo
lea
mov
xor
cbtw
fnsave
insb
xchg
loope
lret
inc
lods
cmpsl
fnsave
pop
jmp
aas
or
mov
add
ds
inc
or
out
sub
inc
adcl
sbb
jbe
inc
repz
jbe
mov
lods
idivl
or
or
cmp
cs
jne
jbe
int
mov
sbb
ret
popf
pop
addr16
adcb
add
dec
ljmp
aad
repz
loope
add
js
cmp
loope
sbb
xchg
dec
jle
sbbl
in
xchg
lods
outsl
scas
enter
and
lret
repz
dec
imul
les
ret
jl
pop
pop
orb
xchg
pop
test
and
mov
popf
inc
and
stos
clc
cmp
mov
jbe
and
stc
lods
xchg
lock
arpl
mov
lret
and
mov
lcall
leave
lds
inc
inc
pop
or
and
and
xchg
jg
int
jp
out
movsl
or
xchg
and
inc
out
pop
std
jg
inc
sbb
aas
loopne
dec
arpl
pop
aad
or
or
pushf
es
cmp
fnsave
lds
gs
fldl
mov
pop
inc
jge
aad
xorl
push
push
int3
ja
add
dec
mov
mov
pop
push
test
xor
inc
scas
push
loop
movsl
mov
mov
or
dec
ret
add
inc
mov
sub
jg
jp
and
add
inc
sub
cmp
repz
scas
lret
jp
leave
pop
cmpsl
sub
gs
or
mov
rcrb
gs
mov
aaa
and
cld
mulps
test
and
leave
mov
push
pop
mov
das
xor
add
out
mov
push
push
movsb
push
std
mov
jne
sbb
dec
xchg
cmp
incb
cmp
ljmp
pusha
mov
dec
imul
jmp
test
test
xchg
and
push
mov
inc
into
xchg
call
lods
push
test
shl
sub
ljmp
sar
test
jno
xchg
arpl
aam
cld
call
insl
div
ret
nop
mov
fadd
sub
xor
mov
adc
add
lock
fdivl
lods
xchg
pop
stc
fisubs
sub
in
sub
repnz
call
dec
mov
std
mov
nop
push
outsl
and
mov
cmpsb
xor
outsl
outsb
inc
in
pusha
iret
ja
adc
pop
into
mov
test
test
adc
mov
subb
popa
jecxz
push
jb
rolb
sbb
mov
mov
xlat
sti
cmc
adc
push
push
add
and
push
jg
xor
mov
inc
sbb
jns,pt
mov
mov
aad
xlat
bound
inc
sarb
xlat
xchg
mov
cmp
jae
cmp
inc
test
movl
pop
add
xchg
and
inc
mov
sbbl
mov
mov
mov
mov
mov
aad
push
lods
shrl
adcb
fmuls
inc
xor
fisubl
fidivs
mov
or
testl
andb
mov
adc
test
inc
bound
lods
xchg
dec
inc
pop
pop
sub
es
jmp
mov
test
imul
mov
cli
jo
cld
ss
ljmp
outsl
movsl
jg
xchg
sahf
xchg
in
mov
and
push
or
cmc
and
mov
xor
out
icebp
fdivr
repnz
daa
hlt
shll
loop
mov
and
sbb
lcall
xor
cmpl
fwait
sbb
lds
dec
fidivs
clc
gs
xor
mov
mov
popl
inc
mov
lcall
insb
push
daa
xor
add
shll
ret
adc
mov
test
xchg
divb
rorb
scas
cmp
push
and
push
daa
sarb
clc
pop
mov
mov
and
loopne
inc
nop
inc
lock
mov
jnp
inc
fcoml
mov
loope
mov
pop
cmc
repz
adc
jmp
jno
sbb
jno
mov
cli
jne
pop
mov
cmp
xor
mov
add
xor
inc
je
enter
pextrw
and
add
jne
pushf
roll
stos
cltd
int3
inc
inc
arpl
pop
mov
cmpsb
xor
push
leave
dec
inc
flds
sub
sbb
mov
mov
stc
and
sbb
fstp
mov
adc
adc
inc
sbb
fwait
sub
insb
enter
lret
loope
xor
jbe
xchg
push
stc
push
xchg
pop
bound
sbb
pushf
push
out
js
push
in
shlb
jnp
mov
stc
out
orl
ja
adc
aad
aas
jge
movsl
aam
rorl
push
cmp
gs
cwtl
adc
frstor
jle
dec
out
pop
rcr
inc
int
repnz
pop
push
cmpsl
xor
out
sti
dec
pop
rorb
incl
popa
outsb
push
cmpsb
rcrb
lahf
inc
outsb
out
push
jecxz
movsb
xchg
clc
xlat
mov
sbb
int3
enter
and
add
fcmove
shlb
pop
pop
xchg
aad
xor
inc
call
jbe
jmp
push
fistl
mov
cwtl
rcr
xchg
ja
clc
xchg
or
out
xor
xor
push
divl
ljmp
sarl
mov
aad
cmpsb
push
mov
sub
dec
stos
dec
mov
adc
jne
jmp
adc
in
adc
daa
mov
adc
dec
imul
cmpsb
fcompl
cmp
sub
pop
pop
sbb
scas
push
mov
or
mov
scas
push
mov
insb
cmpl
mov
roll
sbb
cmp
sub
push
fstpt
mov
dec
fidivs
mov
dec
loopne
dec
movsb
inc
ret
movsl
mov
adc
cmp
cmp
rorb
push
or
add
fmuls
je
dec
rolb
aam
xor
testb
sti
xor
jno
add
scas
cmp
or
inc
jmp
loop
scas
adc
clc
mov
or
mov
jle
xchg
rorl
jo
enter
xchg
mov
or
or
ret
int
dec
dec
mov
mov
xor
sti
push
ljmp
xor
test
dec
test
push
rcrb
mov
sub
push
lret
popf
and
jns
adc
mov
daa
loopew
shr
xor
or
or
mov
dec
xchg
stos
add
and
cmp
xchg
cmp
es
icebp
pop
add
aam
sbb
enter
and
xchg
push
js
mov
daa
or
xor
sub
mov
arpl
loope
std
mov
mov
sbb
cld
jmp
nop
jno
cmp
jl
notb
inc
popf
stos
dec
jmp
cmp
lock
mov
add
out
push
sbb
cmc
scas
adc
call
inc
scas
xor
or
les
cwtl
sbb
test
add
or
mov
xchg
mov
hlt
insb
jo
js
testl
std
mov
sarb
push
xor
pop
pusha
les
sbb
sbb
ret
das
roll
jb
lcall
lods
fimull
or
insl
sub
dec
adc
dec
mov
and
popf
bound
imul
sbb
pop
daa
mov
pop
es
ja
dec
dec
ret
add
loop
daa
push
fsts
mov
les
test
sbb
pop
add
push
mov
add
shr
dec
push
pusha
out
sbb
cs
xchg
mov
es
dec
dec
in
insl
cli
notb
pop
adc
loope
xchg
push
xchg
pop
xchg
scas
and
add
out
mov
add
sbb
add
ds
or
loope
lahf
sub
ds
xor
pop
lahf
xchg
lock
adc
cmp
sub
sub
mov
dec
icebp
pop
inc
adc
xchg
jg
inc
sbb
or
in
cmp
mov
or
mov
inc
mov
push
add
lea
xchg
xor
mov
inc
iret
lcall
stc
or
pop
mov
xor
lods
mov
daa
push
les
pop
loope
mov
adcl
xor
push
mov
bound
lret
jns
dec
pop
mov
ss
ss
lahf
jge
xchg
ds
pop
jecxz
shrb
and
jp
pop
sub
into
jg
aam
lea
aas
pop
iret
xlat
cmp
fldt
push
xchg
pop
std
std
pop
mov
leave
fs
int
and
test
xchg
mov
add
in
mov
cmc
das
imulb
rcll
xor
or
adc
add
dec
mov
lret
push
dec
dec
aam
test
dec
int3
lidtl
and
cmp
jb
adc
outsb
sub
or
stos
inc
push
and
add
ljmp
test
ss
cmc
out
or
inc
mov
jg
inc
lret
cld
scas
or
dec
pop
adc
xchg
xchg
jl
jae
daa
lea
mov
mov
insl
dec
jmp
outsb
xor
icebp
stos
rcll
testb
and
int3
scas
mov
fiadds
movsb
jno
pushw
xchg
mov
int
fmull
jmp
jge
das
cmc
add
cmp
dec
lock
loopne
shrb
pop
fwait
nop
cmp
push
mov
inc
imul
jg
push
mov
cwtd
dec
jecxz
jne
add
nop
pop
int
subl
call
xchg
out
loope
aam
and
mov
in
fs
mov
fcomp
sub
popf
jle
cmp
push
sbb
mov
sahf
fsts
leave
repnz
jecxz
xchg
push
cmpsl
iret
xorb
jp
in
mov
adc
push
xor
int
push
addr16
cld
insl
push
jp
xor
sub
and
inc
push
fucom
adc
leave
sub
fbstp
or
push
icebp
xorb
icebp
adc
sub
inc
sub
xchg
mov
cmc
cmp
daa
std
leave
inc
inc
aas
dec
jne
out
xor
pop
cmpsl
lds
shlb
loope
cmp
jo
adc
in
sub
js
jns
jns
and
sbb
adc
mov
mov
hlt
cli
mov
pop
mov
jl
test
scas
xor
aam
jge
fsubrs
js
jg
insl
add
cmpsl
lret
mov
mov
fs
sbb
pop
js
xor
sbb
lret
mov
test
mov
mov
and
out
jle
xchg
int3
cmp
div
sub
jg
call
icebp
mov
rep
cltd
sahf
adc
inc
mov
add
and
add
pusha
cwtl
or
aaa
xchg
jge
pop
push
add
negl
cmp
mov
xchg
das
loope
data16
sub
sbb
stc
add
cmpsl
shll
icebp
jo
inc
rolb
mov
jb
cmp
sbb
add
xlat
add
pop
dec
lds
lods
xor
mov
rcrl
pop
jo
push
movb
cmpsb
daa
mov
dec
fincstp
mov
sbb
clc
imul
aaa
imul
pop
pop
fucomi
xchg
aad
dec
xchg
es
out
test
push
adc
and
pushf
pop
jecxz
pop
into
and
add
fmuls
push
shlb
push
test
in
les
test
out
popa
dec
lods
mov
faddp
stos
sahf
test
and
aam
and
xchg
jp
jecxz
xchg
xchg
out
or
insb
insb
mov
add
outsb
popa
stc
stc
leave
mov
cld
xchg
scas
inc
cmp
push
pop
insl
insb
push
push
in
jnp
aam
dec
dec
dec
add
cmp
xchg
add
mov
jns
lcall
cmp
sub
xchg
dec
nop
clc
stos
mov
mov
in
pop
xchg
inc
sarb
fimuls
icebp
ljmp
cmpsb
add
mov
add
and
adc
xor
ja
xchg
mov
jg
fucom
ret
lds
ds
push
xchg
lea
mov
addb
dec
mov
sbb
cmp
roll
sub
movsl
or
test
xchg
push
inc
pop
jmp
stos
or
sti
mov
in
xchg
mov
and
rcrl
xlat
fucomi
in
push
pushf
inc
daa
jmp
pop
inc
sub
imul
push
mov
je
inc
hlt
insl
ds
imul
xchg
xchg
mov
add
pop
divb
repnz
outsb
jecxz
xor
in
mov
fs
lahf
and
and
xchg
popa
dec
out
aas
cmp
inc
add
test
sbb
sysexit
push
xchg
xor
or
push
or
call
mov
pop
aas
sbb
and
ficomps
add
mov
xor
cli
fdivp
stc
repz
and
sub
test
jo
xor
fdivrs
popa
mov
cld
stos
jecxz
push
scas
sbb
fisttps
mov
int
mov
hlt
jle
adc
test
cmp
out
jmp
and
jl
mov
adc
aas
xchg
out
pop
dec
xchg
adc
xchg
xor
pop
ret
jle
dec
out
sub
std
iret
dec
out
xchg
pop
es
ds
push
lock
mov
imul
and
aaa
xchg
cli
push
arpl
xor
je
cmpsb
xor
sub
jb
bound
cs
insl
stos
test
dec
cltd
dec
test
cmp
loopne
dec
and
pop
sub
push
cmp
dec
push
push
add
jle
sbb
mov
das
sub
leave
insb
adc
stos
mov
lods
mov
neg
aaa
and
mov
and
lret
mov
shll
insb
test
xor
repz
negb
in
popf
test
xor
out
add
inc
cmp
aas
pop
cltd
movsl
scas
xchg
xlat
jo
or
sahf
into
fldt
les
adc
xlat
xbeginw
subb
fnstcw
mov
adcl
sub
mov
je
fisttps
sub
clc
fadds
lret
cmp
in
add
pop
fwait
gs
in
cli
enter
out
jnp
sahf
fwait
pop
jno
jbe
das
push
mov
enter
inc
inc
das
dec
std
mov
pop
jle
sub
rcrl
mov
lahf
adc
mov
or
xchg
fwait
add
in
pusha
pusha
push
inc
mov
subl
scas
xlat
xchg
xchg
cmp
ret
cs
push
or
adc
test
or
jmp
lock
mov
lret
mov
mov
frstor
dec
dec
sub
dec
cmpsb
pop
mov
push
inc
mov
cltd
pop
sub
mov
add
lods
ljmp
aad
jbe
xor
sbb
daa
icebp
adc
out
inc
and
add
sub
cltd
xchg
adc
xlat
cli
inc
xor
push
andb
scas
test
cmc
push
mov
cmp
adcb
sahf
mov
push
inc
pop
dec
out
rcrl
dec
inc
pop
lea
fmul
dec
movsl
into
cld
repnz
xor
int3
jns
dec
add
outsb
js
sar
ret
loop
sub
sahf
jmp
gs
cmpsl
mov
es
jnp
rolb
addr16
in
mov
dec
or
inc
mov
mov
pop
les
dec
lret
ss
mov
jno
mov
push
sbb
das
cmp
mov
push
lods
and
adc
dec
adc
inc
dec
add
test
cltd
out
sti
or
jno
call
jns
jnp
dec
mov
out
lods
sbb
lea
inc
inc
mov
cmp
aam
ss
push
loop
or
mov
inc
arpl
mov
pop
add
xor
mov
into
ljmp
dec
call
aad
and
jno
daa
popa
xchg
and
addr16
cmp
push
mov
xchg
cwtl
mov
jbe
dec
inc
or
jle
inc
mov
lcall
repz
loop
mov
negb
dec
push
jb
cwtl
rolb
stc
out
xor
imul
dec
pand
rclb
mov
jae
mov
clc
adc
call
or
icebp
repnz
orl
xchg
cltd
repz
fisubrl
mov
dec
add
adc
pop
nop
ret
sbb
in
fs
xchg
mov
hlt
adc
shrl
ret
mov
ss
mov
dec
push
mov
or
sbb
jbe
pop
cmp
or
fcmovbe
push
aad
imul
push
std
ss
push
xchg
shll
stc
add
leave
adc
loopne
repnz
and
add
inc
in
lock
sub
fnsetpm(287
push
lret
sti
mov
xchg
dec
stc
inc
lock
insb
mov
jne
adc
adcb
adc
fldt
adc
loope
loopne
xor
or
dec
in
jo
cmovno
data16
mov
pushw
fnstcw
jbe
or
jmp
out
push
fisttpll
lds
push
cmp
cld
sar
sbb
add
cs
dec
scas
mov
pop
sub
cmp
addr16
pop
dec
and
or
push
pop
xor
mov
fimull
mov
pop
movsb
scas
rol
popl
push
test
loope
call
pop
xchg
cmc
sub
adc
and
push
ds
ret
repnz
sub
push
push
dec
gs
sub
dec
pusha
mov
aas
pop
cmp
push
inc
dec
shlb
or
dec
mov
mov
cmp
stc
arpl
movsl
shr
nop
xor
pop
sub
inc
xchg
push
popf
andl
insb
movsb
dec
push
sub
pop
adc
xchg
dec
cwtl
pop
leave
fsubs
test
or
mov
jl
cmpsl
mov
jmp
jg
jno
inc
adc
jmp
das
fists
fimuls
movsl
jb
or
cli
xchg
dec
jns
push
mov
sbb
scas
cmc
outsl
mov
xchg
xchg
std
mov
add
add
ds
pop
mov
call
dec
inc
push
decl
repnz
jae
push
cmp
in
fisttps
push
rcrb
xchg
push
cmovbe
rcrl
mov
pop
adc
insl
insl
lret
pushl
in
jb
inc
pop
adc
dec
cmp
cmp
movsb
push
cli
pop
xor
movsb
fsubp
dec
addl
sti
push
mov
int3
mov
adc
outsl
push
adc
cli
inc
sub
repz
ja
scas
inc
jge
cmp
daa
push
push
push
loope
inc
mov
stos
sbb
or
or
icebp
mov
bound
imul
sbb
hlt
xor
nop
xchg
mov
ds
and
bnd
adc
mov
lods
sbb
push
mov
jbe
fbstp
std
decl
xor
dec
inc
and
sbb
mov
push
jp
jo
ret
mov
cmp
lcall
mov
sub
aaa
scas
adc
in
gs
pop
xchg
or
popa
bound
dec
xor
xchg
enter
test
push
jge
sbb
aaa
adc
imul
bound
mov
mov
inc
jle
fisubl
sti
sbb
rcll
mov
sbb
scas
pop
add
outsb
inc
ret
fs
xchg
add
lock
jl
shrb
pop
mov
push
mov
pop
lods
push
mov
int
push
mov
push
jnp
popl
mov
andb
lret
mov
jns
cmp
loop
and
popf
mov
fcomps
pop
push
adc
mov
mov
pop
out
pop
inc
dec
add
out
fisttpl
or
xor
sub
inc
pusha
insl
nop
mov
xchg
dec
out
fcoml
jge
fstpt
in
icebp
outsl
push
imul
inc
mov
aad
add
cmpsl
push
cmp
sbb
das
rcrb
adc
or
das
push
adc
sbb
mov
sahf
add
pop
xchg
loopne
lret
std
addr16
push
jecxz
dec
push
sar
dec
aam
aaa
mov
aaa
sbb
push
aam
loopne
adc
jbe
int
xor
xor
dec
xchg
xchg
loope
imul
cmp
mov
pushf
aam
jno
test
rcr
xchg
push
jno
xchg
pop
addr16
xchg
mov
insl
lret
fwait
in
xor
xchg
mov
sarb
xor
pop
mov
mov
mov
fs
mov
xchg
mov
popf
push
cmp
xchg
out
mov
jp
sub
repz
push
cmpsl
xchg
cli
inc
mov
mov
push
mov
cmp
cmp
lds
jp
iret
push
dec
cmp
nop
bound
les
jno
lret
add
outsl
jno
pop
push
imul
mov
push
sbb
sbb
mov
or
in
ss
out
bound
ret
pop
stos
inc
jle
jns
fdivrs
in
iret
leave
ja
and
lcall
in
mov
adc
xor
cltd
hlt
jg
push
inc
pop
cwtl
fdiv
push
dec
cld
xlat
in
xchg
jbe
cwtl
mov
adc
mov
adc
cmc
add
std
mov
pop
sbb
loop
rol
movsb
pop
mov
into
xor
pop
hlt
jb
mov
out
adc
retw
mov
pop
insb
int
xor
push
popa
enter
sub
sarl
in
mov
clc
cld
sbb
mov
pop
mov
data16
or
mov
in
or
push
jle
and
cmpsl
sahf
arpl
stos
scas
je
enter
pop
push
scas
sub
cmp
mov
lock
lds
sbb
daa
mov
sub
xor
pop
addr16
int
sbb
insl
jl
add
adc
cmp
cmp
imul
inc
sbb
outsl
pop
add
ds
out
pop
dec
cmp
fldl
mov
xlat
mov
jp
pop
sub
jo
xor
andb
aaa
and
xchg
sub
add
stos
decb
pushf
inc
pusha
clc
in
xor
or
cwtl
cli
xchg
fsubr
add
or
push
scas
push
repz
jb
test
sub
pusha
or
xor
push
cmpl
or
jo
into
insb
push
fucomp
sub
int
cltd
adc
or
cmpsb
hlt
push
jns
lret
lahf
fs
icebp
addr16
jb
pop
pop
in
in
sbb
and
jge
push
cli
push
outsb
adc
jbe
or
icebp
iret
xor
mov
sbb
cwtl
mov
nop
pop
test
mov
repz
scas
pop
out
mov
jmp
pop
mov
dec
cs
xchg
sub
cmp
jns
sbb
mov
out
lcall
mov
mov
xor
fwait
arpl
test
xchg
fwait
aaa
gs
outsb
adc
mov
pop
push
das
in
int3
xchg
dec
ljmp
dec
iret
inc
addr16
scas
sub
int3
adc
fcoml
gs
scas
xor
ljmp
mov
adc
out
pop
adc
push
jno
push
pop
scas
push
fldcw
adc
dec
scas
std
in
jle
imul
testb
sbb
adc
test
jl
aas
push
roll
pop
pusha
inc
sbb
adc
and
xor
jmp
into
inc
jg
fwait
push
enter
xor
cmc
xadd
addr16
xchg
es
imul
mov
xor
std
mov
ret
adc
adc
sbb
cmp
cmp
mov
sbb
cltd
add
stos
add
mov
loope
rcr
in
push
inc
lahf
xor
xchg
pusha
pop
mov
xchg
dec
loope
mov
xor
outsl
push
fsubrp
frstor
dec
and
pop
popa
and
jmp
insl
xchg
inc
xchg
mov
mov
adc
cmp
xchg
add
mov
push
cmp
adc
push
scas
pusha
fwait
mov
shl
push
fistpll
add
test
xchg
pop
sti
addb
scas
in
and
in
mov
mov
das
stos
pop
gs
adc
fwait
mov
mov
xchg
outsl
std
int3
dec
ss
into
test
push
jbe
and
adc
cmp
ds
cmp
mov
and
cmp
xor
mov
adc
aad
pushf
and
mov
dec
jl
adc
dec
jmp
cmpsb
mov
jp
sub
std
adc
lret
roll
push
scas
fisttpl
bound
jle
mov
cs
jbe
mov
js
subl
xor
in
and
mov
and
outsb
sub
in
add
lock
and
pushf
rolb
lea
adc
push
jno
into
jb
cmp
repnz
xchg
dec
xchg
test
test
mov
adc
jnp
sbb
mulb
gs
mov
mov
push
fdiv
dec
mov
shlb
pop
fwait
cs
stos
mov
cmp
pop
jle
loopne
fistpl
mov
mov
sahf
mov
je
jmp
mov
cmp
gs
jp
pop
push
jge
test
popf
add
push
cli
add
sub
gs
out
insl
sub
mov
dec
sbb
push
les
push
call
aam
cmp
test
scas
aam
bound
stos
xor
std
add
pushf
out
pop
xchg
xor
dec
movsb
push
lahf
outsl
mov
mov
sbb
sbb
push
sti
push
inc
mov
pop
lret
popf
xlat
adc
sahf
inc
add
xchg
in
push
push
and
imul
mov
lea
add
push
mov
and
test
roll
enter
dec
out
je
outsb
mov
aas
pop
loop
mov
ja
adc
movsl
aad
xor
push
loop
xchg
data16
out
cmp
xlat
cmp
sbb
jb
push
mov
aaa
rcrl
jno
popa
das
inc
lcall
test
jl
mov
sub
cmp
jle
rcl
fmuls
leave
dec
mov
call
filds
dec
rorl
pop
js
xchg
and
fstps
nop
jl,pt
imul
mov
and
or
das
cs
xlat
adcb
lret
xchg
lea
push
test
rolb
into
in
out
jbe
sub
jno
add
cltd
int
int
clc
daa
mov
xor
mov
mov
out
jl
jne
push
push
sbb
adc
mov
adc
push
loop
cmpsl
xchg
test
stos
dec
add
mov
sbb
sti
cmp
sbb
push
mov
mov
adc
in
ja
data16
jl
xchg
loope
add
scas
mov
loope
sub
lods
mov
testl
add
lahf
jo
das
ret
sbb
inc
inc
fsubrs
out
xor
cld
or
sbbl
dec
push
mov
ret
jne
jns
push
sti
mov
cmp
jns
pushf
scas
mov
iret
aaa
pop
dec
xor
inc
mov
sub
mov
inc
jo
mov
into
rclb
xchg
and
jl
xor
testb
not
sbb
test
sarb
add
sub
int3
add
and
mov
jb
scas
jle
cmp
push
push
sub
rcl
in
or
les
mov
add
push
ljmp
mov
sbb
pushf
add
xchg
and
jno
push
pop
gs
imul
inc
ret
xor
lock
and
jmp
xchg
mov
sahf
jp
push
xchg
repnz
mov
stos
inc
lret
pop
pop
inc
mov
popf
addr16
iret
loope
xchg
sahf
mov
xor
push
pop
cli
rcrl
pop
cmp
jg
loop
mov
add
outsb
cmp
jnp
push
in
je
jbe
ret
inc
push
push
rcl
insb
push
addb
mov
fs
out
xchg
and
jbe
add
out
pop
adc
out
mov
movsl
mov
mov
test
mov
and
arpl
cmpsl
js
xchg
imul
xor
and
push
data16
div
cli
call
dec
repz
ss
rclb
and
fs
loopne
loopne
rorb
push
lods
jle
inc
inc
bound
mov
jg
and
jns
push
imul
mov
fwait
push
cmp
sbb
sbb
cld
popa
out
ds
je
fwait
sbb
fdivs
sub
pop
xchg
je
ljmp
inc
and
cmp
cltd
fwait
and
loope
scas
pop
mov
mov
lock
adc
dec
jns
pop
pop
mov
cmc
imul
jnp
and
lock
cmpsb
push
sub
push
pop
out
mov
rcll
fistpl
aas
push
xchg
ss
dec
lods
sarb
jl
xor
and
jp
mov
or
cmp
adc
mov
movsb
xchg
fldcw
inc
xor
andl
cmpsl
scas
stos
pop
add
loope
dec
push
adc
add
push
jbe
push
bswap
mov
xchg
sbb
cmpsl
add
cmp
or
cmp
sub
cltd
mov
std
lea
ret
repz
lods
imul
negl
or
cmp
cmp
mov
sub
outsb
sbb
pop
sub
test
mov
insl
adc
xchg
stc
shrb
iret
rcl
xchg
pop
cmp
sub
icebp
lahf
sub
add
xchg
add
outsb
xchg
shrb
into
xor
jae
xchg
jg
xchg
or
jo
push
inc
or
shll
cs
and
out
js
adc
xchg
adc
pop
mov
dec
inc
and
std
adc
cmp
push
stos
add
dec
ds
popf
and
dec
js
mov
xor
push
inc
cmpsl
scas
out
mov
in
stos
pop
inc
sbb
push
lcall
pop
dec
xlat
in
test
and
push
and
xor
stc
xchg
cmp
push
xor
out
mov
dec
jo
fwait
addb
mov
loop
ss
or
fs
inc
xlat
pop
pop
fidivrs
sarb
frstor
mov
sti
outsb
out
insb
ljmp
fbstp
xchg
dec
mov
mov
pop
push
into
insb
push
movsl
out
jnp
mov
fsubrl
shll
mov
pop
lds
mov
icebp
movsl
adc
mov
cwtl
mov
push
sub
sbb
mov
icebp
rclb
enter
stos
lcall
pop
lods
mov
outsb
out
out
xchg
lcall
nop
rcrl
mov
ficoml
cmpsl
into
adc
stos
cmp
cmp
sbb
iret
lcall
push
sbb
mov
rol
xchg
and
push
in
ret
xor
adc
inc
repz
adc
pop
or
cmp
jae
add
push
loop
test
adc
orl
js
xor
or
push
xchg
stos
mov
xlat
add
outsb
push
jne
sub
jae
jg
pop
mov
dec
icebp
enter
xor
lock
enter
rcrb
mov
pop
push
jmp
or
mov
out
pop
cltd
repz
in
fstpt
inc
mov
or
cmpsl
push
xlat
push
rorb
pop
inc
fmull
bound
mov
inc
mov
or
loopne
mov
sub
push
fisttps
les
arpl
imul
cmpsl
into
inc
out
cltd
fidivs
dec
fimuls
or
addr16
sbb
dec
jae
ja
fstps
jno
mov
jp
test
call
push
call
sub
mov
loope
imul
adc
cmp
test
jne
push
inc
or
pushf
sbb
loop
push
lds
pop
pop
xchg
push
cmpsb
sbb
and
mov
jns
inc
cmp
popa
pop
dec
movsl
lret
lock
sqrtps
jnp
aam
lock
mov
ja
outsl
mov
mov
xlat
push
loope
arpl
jae
mov
dec
sub
and
jle
pop
xchg
mov
fsubrp
and
adc
jmp
das
data16
cmpsb
fists
inc
adc
adc
jb
dec
cwtl
fwait
and
xchg
daa
in
std
cli
pop
leave
imul
rcrb
int3
nop
scas
dec
or
sbb
dec
xor
push
cld
fadds
dec
add
ds
cmc
pusha
mov
into
cltd
sub
js
xchg
cmp
cmp
in
fsubrp
les
lods
pop
push
xchg
popl
push
fldcw
or
xchg
in
mov
shrb
stc
out
decb
test
loopne
movsl
insl
dec
mov
outsl
inc
dec
hlt
pop
nop
std
mov
ja
jb
aam
mov
fmull
jl
pop
pop
jle
test
adc
pop
jmp
push
jno
jo
jecxz
lock
vcmpsd
pushf
cmp
xchg
adc
addr16
dec
bnd
cwtl
inc
test
iret
sbb
out
or
shl
jb
ret
jecxz
test
push
and
add
outsl
daa
bswap
xor
scas
cwtl
and
shl
pop
sub
arpl
pop
int
add
jmp
or
push
ret
xlat
fimull
lock
fists
lahf
xor
cmc
adc
scas
mov
outsl
mov
cwtl
sbb
adc
add
lock
sub
xor
mov
add
sbb
movsb
les
outsl
and
lret
scas
aad
test
inc
inc
dec
imul
or
out
push
out
adc
adc
add
pop
sbb
inc
mov
ss
aam
stc
or
jle
loop
out
sbb
jae
adc
jmp
mov
out
aad
lea
or
das
stos
fbstp
int3
imul
mov
test
rorl
sbb
mov
mov
mov
dec
gs
pop
and
push
mov
data16
mov
in
or
cmc
stc
xor
push
dec
andl
and
adc
ret
sbb
in
movsl
fmulp
jns
or
pop
clc
lcall
ss
mov
inc
ficomps
inc
inc
mov
scas
sbb
xchg
dec
sub
xor
push
test
jno,pn
adc
xor
cmp
fdivr
mov
mov
pushf
add
sbb
fisttps
cli
pop
xchg
shlb
cmpsl
xchg
jmp
sub
mov
dec
jae
push
cli
je
push
enter
lcall
inc
aaa
inc
dec
shll
jo
sbb
arpl
lret
loopne
in
adc
js
aam
jbe
sub
pop
loopne
mov
inc
mov
lods
or
les
xchg
add
dec
ljmp
rcrb
inc
shll
cmp
bound
jo
shl
fsubs
dec
inc
xlat
push
and
inc
pop
inc
inc
add
jge
addr16
and
push
movsl
dec
add
lock
es
lea
enter
int
loop
mov
pop
push
xchg
lods
into
sbb
xor
xlat
jae
sub
sub
out
push
inc
fidivl
loopne
push
cmp
sub
xor
or
test
add
sar
mov
out
xchg
rcll
test
sbb
mov
pusha
test
jge
mov
sti
dec
mov
imul
mov
push
pop
sub
jg
xchg
insl
lock
repnz
sub
icebp
dec
repnz
cmp
aam
and
shll
xchg
int3
stos
pop
dec
jns
test
hlt
pushf
adc
mov
cmp
fmuls
mov
push
xor
adc
lret
and
scas
call
cltd
out
xchg
xor
movsb
mov
sbb
scas
adc
xchg
movsb
xor
push
pop
mov
cs
sti
decl
lcall
sub
mov
or
add
xchg
mov
sahf
and
and
pop
lods
mov
inc
jle
int3
sub
xchg
repz
gs
stos
inc
es
fisubrl
mov
scas
add
incb
in
lock
xchg
cld
ds
adc
mov
push
xchg
aas
mov
sarl
xor
or
jmp
stc
rcrl
rcl
xchg
cmp
cltd
mov
cli
inc
scas
push
xor
clc
testl
xchg
cmpl
pop
in
mov
add
inc
jmp
add
push
or
dec
dec
fistps
xorl
mov
lret
nop
push
xor
std
fisubs
mov
pop
mov
ret
lahf
popf
shrl
jge
push
iret
movb
jo
mov
adc
mov
push
and
sbb
pop
adc
lea
cmp
and
int
ret
and
movsb
jo
inc
cld
cmpb
sbb
ret
aad
arpl
cmpsl
add
in
sbb
pushf
decb
mov
rorb
mov
clc
adc
sbb
sbb
pop
insl
rorl
mov
jecxz
mov
push
sarl
repnz
dec
js
xor
mov
dec
sub
push
out
in
test
add
fs
test
push
adc
das
movsl
ret
push
sbb
movl
int
in
cmc
push
push
fistpl
push
inc
fwait
inc
jge
stc
dec
jne
subl
xor
in
nop
push
or
or
jno
jge
aam
das
data16
andl
mov
sub
push
push
es
mov
inc
adc
in
mov
jmp
gs
test
mov
subb
aaa
leave
ficomps
cwtl
scas
mov
or
inc
stos
je
jg
adcb
mov
shll
add
std
jg
cmpsb
or
or
jb
adc
pop
xchg
mov
mov
fsubrl
xchg
push
adc
adc
mov
mov
inc
lret
dec
push
push
cmp
jg
mov
scas
or
shrl
mov
mov
imulb
mov
mov
and
ror
scas
imul
and
nop
outsl
fwait
dec
xchg
xchg
addr16
inc
jb
idivl
fs
out
adc
push
xchg
jo
pop
cld
adc
faddl
std
mov
pop
jns
outsl
mov
xchg
mov
mov
test
call
sarb
scas
add
push
lea
inc
mov
test
icebp
push
xchg
and
sub
pop
cmp
into
mov
test
or
test
adc
and
xor
cmp
clc
xchg
dec
int
mov
rorl
sub
test
popa
icebp
loopne
pop
into
sbb
out
add
mov
mov
incl
sbb
mov
push
scas
dec
in
imul
adc
pop
pop
ja
movsl
aaa
enter
xchg
call
mov
xor
jl
data16
cltd
repnz
mov
mov
mov
mov
pop
movlhps
dec
aas
scas
cmpsl
outsl
inc
pop
stos
xchg
push
lods
imul
adc
stos
adc
cwtl
mov
mov
cwtl
adc
int3
and
adcl
xor
xchg
ret
bound
xlat
mov
dec
jbe
mov
adc
nop
lret
in
scas
sbb
dec
jns
lret
pop
add
aas
push
rorl
into
aas
jecxz
xchg
fwait
mov
jmp
push
lcall
mov
sub
sbb
push
xor
ja
sbb
ljmp
mov
js
dec
cmp
add
movsb
jg
jnp
lcall
shrb
mov
jmp
adc
push
push
daa
pop
lods
and
enter
jne
inc
inc
popf
outsb
adc
test
popf
roll
call
adc
andb
fidivl
cltd
lahf
jne
xor
dec
mov
aaa
xchg
dec
lds
sbb
lods
xchg
test
mov
pop
movsb
aad
aas
js
or
scas
push
aaa
cwtl
imul
icebp
adc
das
mov
shll
xor
andb
pop
xchg
clc
dec
mov
adc
jns
jmp
das
nop
stos
xor
orl
pop
and
lret
int
inc
sbb
movsl
jns
or
cs
pop
pop
bswap
sub
mov
cld
andl
pusha
fucomi
push
inc
test
pop
xchg
dec
sbb
xchg
mov
daa
je
jne
add
push
add
mov
sub
jg
enter
stc
mov
jecxz
aaa
jle
sub
xchg
mov
pop
lock
fistps
repnz
sbb
cmp
pop
push
jle
pop
arpl
pop
push
jle
lahf
das
int3
mov
ja
cwtl
mov
sbb
mov
add
jns
xor
jmp
xchg
or
or
pop
ss
loope
inc
js
dec
xchg
push
sti
jo
mov
adc
push
push
daa
mov
jl
jmp
test
xchg
push
mov
pop
les
ljmp
dec
xlat
adc
inc
xchg
or
stos
shrb
mov
cmc
jmp
xor
outsl
sarb
xchg
loopne
fisubl
scas
and
movsl
sahf
fidivs
add
gs
pop
ja
int3
dec
cwtl
adcl
mov
aaa
data16
mov
inc
les
or
cmp
scas
xchg
jge
jl
mov
xlat
fstpl
cmpb
push
push
imul
sub
pop
das
in
mov
add
ret
jge
push
test
sub
je
and
cli
xchg
xor
stc
aas
xor
insl
imul
sbb
sbb
pusha
cmpsl
fstpt
cmp
jecxz
fsubl
push
popa
dec
and
push
fstps
leave
sub
adc
sbb
xorb
add
xchg
dec
nop
int3
push
cmp
mov
lahf
cmpsl
push
xchg
and
out
and
mov
sub
fyl2xp1
xor
pop
pop
fld
mov
dec
sub
call
inc
mov
nop
mov
mov
rcr
int3
xchg
aaa
mov
shl
loope
cmp
cltd
lea
xchg
cmp
int
mov
push
jmp
je
data16
lret
xlat
in
stc
cmp
insb
push
mov
inc
cwtl
lea
fnstsw
fsubs
mov
jmp
xchg
adc
or
daa
and
lahf
mov
jno
sbb
pusha
jne
dec
aaa
sahf
pop
popl
mov
and
imul
xor
mov
inc
jo
repnz
or
push
bswap
adc
repnz
pop
movsl
xlat
insl
xchg
mov
je
add
lret
pop
push
lahf
add
ljmp
filds
das
jecxz
mov
jns
inc
cmp
xchg
and
xchg
aaa
xchg
push
mov
xchg
pushf
inc
inc
popf
outsl
xor
cmp
aas
daa
ficomps
jns
cs
dec
dec
test
aas
pop
cli
mov
lock
movsb
shlb
xchg
or
ror
mov
popf
sbb
push
hlt
daa
je
cmpsl
mov
es
mov
loopne
or
popa
dec
inc
bound
sub
pop
xchg
rolb
repnz
and
pop
pop
mov
test
cld
sbb
xchg
inc
mov
fsubrl
scas
mov
xorl
aam
fstl
dec
imul
jo
add
push
lea
sub
mov
stc
cmpsl
push
xor
insb
and
jne
mov
ret
idivl
negl
push
mov
or
xlat
lds
pop
test
inc
xchg
rcr
sbb
test
xchg
adc
mov
scas
cld
stc
shrb
mov
dec
cmp
jbe
push
imul
or
cmpb
jns
inc
iret
mov
xor
adc
mov
outsl
aas
mov
dec
sbb
inc
push
dec
sbb
fwait
xchg
pop
movsl
mov
fstp
mov
ljmp
rolb
dec
adc
cmp
mov
mov
loop
cmc
into
fadd
adc
push
mov
mov
scas
cmp
adc
cmp
jecxz
inc
cmp
je
pop
xor
cld
jns
dec
cmp
out
mov
outsb
aad
insl
pop
inc
and
sbb
rcrl
pop
pushf
push
test
pop
rorb
movsb
imul
mov
enter
sbb
lret
mov
mov
sbb
jnp
ss
dec
jo
loopne
push
sbb
test
sub
adc
popa
inc
iret
arpl
lahf
div
or
push
add
xor
add
out
xor
sub
push
push
sbb
cmp
dec
push
in
js
push
sahf
out
leave
jge
cmpsl
fadds
inc
inc
fisttpll
stos
add
add
pop
scas
mov
mulb
mov
fildl
fsubs
mov
pop
in
sub
das
mov
mov
mov
sbb
lods
jnp
pop
mov
add
rdtsc
pop
or
cmpsb
insl
stc
sub
mov
in
cmc
ffree
imul
push
lods
pushf
test
mov
mov
mov
and
xchg
inc
lahf
pusha
in
adc
cmpsl
adcb
jecxz
mov
and
xor
dec
sbb
cmp
sti
pop
shrl
shll
xchg
in
xchg
loop
jg
mov
push
lret
xchg
hlt
jo
mov
inc
dec
lcall
jl
add
es
pushf
xor
gs
lods
push
add
or
adc
adc
sub
cltd
push
inc
popa
call
mov
mov
ja
jle
xor
jb
imul
nop
or
lods
adc
xchg
dec
outsb
or
mov
test
or
push
repz
cmpsl
pushf
rcll
ret
pop
imul
hlt
loope
test
mov
jbe
ret
cmpl
jno
push
pop
adc
cmpsb
lcall
lds
cwtl
cld
bound
test
fninit
dec
adc
enter
in
leave
out
sub
mov
cs
pusha
dec
cltd
jecxz
into
outsl
cmc
scas
mov
and
ds
adc
std
cltd
cmp
mov
mull
lods
or
cltd
jmp
aaa
sub
mov
push
add
fwait
out
mov
out
rorl
idivb
push
int
adc
scas
aaa
pop
test
add
sbb
lret
mov
inc
nop
in
cmp
pop
or
mov
cmp
xchg
ficoml
cmpsb
xor
xchg
dec
mov
push
clc
ljmp
pop
je
lds
repnz
mov
pop
stc
mov
mov
push
pop
test
xor
push
es
jno
cmpsl
fldt
xchg
lret
sub
inc
je
hlt
outsl
dec
xor
mov
cmc
push
hlt
call
call
sub
lahf
fadd
cmp
cmp
fisttps
iret
shlb
mov
test
mov
adc
inc
adc
sbb
sbb
jae
loope
mov
aam
imul
xchg
mov
sbb
testb
add
add
push
cwtl
cmp
inc
cmp
test
shrl
out
and
cld
jp
pop
xsaves
sub
inc
jecxz
pop
pop
in
xor
adc
mov
or
lret
sti
adc
scas
insl
mov
cmpsb
pop
push
mov
shlb
lds
mov
sub
sar
sbb
sub
sbb
sub
sbb
stos
rorb
cs
mov
pop
add
mov
and
sub
pop
stos
sub
cmpsb
popf
rcrb
outsb
sub
adc
push
call
push
cwtl
inc
add
sbb
push
ss
cwtl
std
decb
dec
sbb
xchg
adc
xchg
jnp
out
cmp
add
sub
shlb
imul
sub
mov
fwait
enter
mov
jnp
jle
and
fisubl
xor
cld
fincstp
and
add
sbb
lods
jl
inc
mov
or
jmp
push
shl
je
dec
inc
rcr
pop
in
add
shll
jae
in
fimull
and
cmp
mov
ljmp
movsb
jb
jl
and
mov
xchg
push
pop
xor
inc
mov
into
jle
cwtl
ret
shlb
fwait
mov
mov
xchg
adc
mov
sbb
mov
add
sbb
dec
fwait
and
adc
and
mov
adc
lahf
subb
push
mov
icebp
sub
and
xchg
xchg
movsb
iret
mov
sbb
dec
xchg
adc
mov
mov
and
sbb
lock
lahf
stos
xchg
je
mov
mov
out
loope
jecxz
push
mov
in
mov
leave
and
add
or
aas
hlt
pusha
push
dec
sbb
fbld
sbb
xor
sub
mov
fildll
xchg
sub
sar
testb
push
cmp
divl
out
pop
mov
rcll
bound
cmc
pop
push
fisttpll
mov
push
inc
scas
jnp
int
push
push
sub
sub
mov
cwtl
fstpt
sbb
imul
arpl
mov
jo
and
cld
fdivs
adc
hlt
imul
mov
mov
adc
int
fcmovnbe
cmp
pop
addl
mov
loop
and
and
test
outsb
scas
xor
mov
add
pop
rol
lods
out
iret
mov
cmpsb
out
test
lds
inc
fsubrs
call
dec
jne
pop
mov
xor
xor
cs
lcall
mov
push
xchg
rep
mov
jecxz
sub
jge
or
xchg
jae
cld
xchg
sarl
cmp
repnz
fcoml
sub
or
push
roll
flds
jl
or
jge
xor
ficomps
in
gs
pop
lea
sub
outsl
mov
rcll
push
push
inc
pop
adc
iret
mov
inc
mov
bound
subb
popa
push
ds
jge
mov
and
cltd
testl
movsb
push
mov
lods
subl
and
into
testl
cld
orb
inc
imul
mov
or
iret
pop
pop
dec
xchg
pop
fwait
xchg
cmp
aas
xchg
movsl
into
insl
pop
jecxz
stc
inc
iret
cli
ljmp
jno
imul
mov
and
add
or
lret
adc
and
cwtl
cmp
push
pop
xor
pushf
mov
pop
lret
stos
add
mov
inc
mov
test
cli
mov
out
mov
in
mov
dec
xchg
xchg
mov
xchg
push
jns
mov
gs
xor
into
push
xor
stos
and
cmp
pop
push
cmp
and
mov
mov
sbb
das
xchg
inc
sahf
cmp
out
fidivl
mov
xchg
jg
cmpsb
in
mov
imull
test
ds
xorl
dec
or
testl
adcl
jg
fcmove
inc
xchg
movsl
dec
fists
ljmp
cmpl
adcb
je
pushf
aam
sbb
pop
dec
sbb
cli
popf
mov
mov
flds
pop
cltd
dec
xchg
dec
popf
outsl
fsubl
mov
ja
pop
xchg
loop
sbb
inc
arpl
je
outsb
adc
and
popf
dec
adc
mov
test
pop
cmc
add
ljmp
ret
bswap
jle
aam
pop
sbb
mov
dec
jmp
cld
das
movsb
shlb
pop
mov
or
shrl
xor
cmpsb
xchg
xlat
testb
push
xchg
push
test
sub
sub
insl
gs
out
outsl
jmp
test
sti
icebp
adcb
adc
inc
nop
jnp
xor
jbe
test
and
xchg
sahf
repz
lahf
jle
adc
cmp
sub
rorl
xor
aas
or
adc
in
cs
adc
ret
rclb
push
pop
mov
mov
in
sbb
int3
movsl
mov
mov
pop
xchg
test
cmpsl
sub
notl
aam
dec
fistps
sub
push
mov
hlt
fidivl
mov
cmc
loop
inc
ror
cli
inc
adc
das
adc
lahf
add
les
add
adc
cli
mov
imulb
adc
mov
mov
ficoml
add
sub
fisubl
loop
adc
inc
neg
mov
pushf
ret
xor
sbb
mov
call
mov
adc
jb
mov
sub
dec
xchg
jge
test
enter
jo
lds
pushf
jbe
icebp
xchg
js
jbe
cmp
push
repz
mov
adc
sub
add
dec
lcall
mov
mov
cltd
or
mov
jg
jp
mov
push
scas
pop
and
out
push
push
scas
pusha
dec
mov
cmp
cmpsl
dec
pop
ret
adc
inc
shrb
pop
sub
mov
addb
addr16
test
or
add
sub
xchg
and
mulb
div
or
xchg
cmp
insl
inc
adc
pop
pushf
xor
dec
mov
int
ljmp
or
mov
idivl
xchg
mov
lret
out
xor
call
imul
movsb
fisttps
dec
dec
dec
shlb
sbb
pop
dec
mov
push
cmp
sub
incb
inc
push
mov
cs
xchg
push
inc
lahf
or
sti
rol
xor
push
shrl
xchg
push
xor
sub
sahf
push
sarb
aad
lods
daa
mov
dec
aam
cmc
arpl
pop
cmp
clc
fmul
inc
xchg
cmpsl
sub
cwtl
add
jnp
mov
xor
iret
mov
popf
dec
jecxz
fbld
outsl
shrl
or
mov
push
leave
mov
ficoml
push
lods
test
js
cmp
imul
enter
jl
stos
ss
push
scas
xchg
sbb
ret
lcall
push
in
cltd
mov
fidivrl
mov
sub
stos
iret
push
xor
es
add
push
test
sub
lea
sbb
sbb
rcl
popf
jle
bswap
or
push
movsb
je
cltd
fwait
jl
insl
loope
dec
shrb
mov
ret
xorb
dec
lret
in
lret
shrb
movsb
lahf
pop
push
lahf
mov
iret
ret
mov
out
lods
mov
scas
add
sbb
sub
sbb
addl
pop
push
cmp
sti
pushw
sub
loopne
or
jecxz
sti
jbe
push
xchg
jmp
inc
add
fnsave
dec
cmp
cmpsl
add
and
inc
add
mov
jae
out
sbb
shr
imul
or
or
jle
xchg
pushf
addb
cmpsl
js
fwait
in
adc
sub
shrl
and
or
sub
xor
add
icebp
mov
mov
mov
sub
push
cmp
out
sbb
repz
pop
xor
sub
lea
sbb
adc
mov
movsl
cmp
scas
cld
sub
daa
out
push
sti
sbb
add
or
and
push
insl
clc
shl
dec
popa
inc
jge
sub
neg
push
and
sbb
dec
or
jbe
dec
sar
sub
inc
lcall
jmp
in
in
iret
loopne
push
mov
cmp
xor
stos
adc
dec
shll
pop
addl
in
jp
aas
orl
and
imul
jbe
mov
inc
xor
fildl
cmp
sbb
in
decl
fidivrl
aaa
push
dec
or
addr16
mov
out
push
cmp
gs
mov
xor
adc
imul
push
mov
loope
adc
add
outsl
cmp
xor
add
scas
imul
js
pop
mov
sub
bnd
or
stos
dec
dec
jo
imul
cmp
jmp
daa
pop
icebp
add
repnz
sahf
out
and
verr
cmp
pop
aam
mov
inc
jbe
and
lods
call
xchg
call
test
mov
inc
mov
je
hlt
add
mov
movsb
clc
mov
inc
jns
out
stc
arpl
xchg
inc
stos
sti
xchg
aaa
push
sub
pushf
hlt
lea
pop
js
adc
mov
in
frstor
lods
imul
add
rorb
jbe
push
push
sub
stos
fistps
out
fildl
and
adc
shrb
mov
xchg
add
jbe
and
cwtl
push
ret
pop
mov
pop
xor
push
je
xchg
jns
xchg
js
pop
fdivrs
pop
fistps
pop
int
outsb
xor
jb
sbb
pop
pop
push
stc
jo
dec
stos
xchg
add
out
lret
lods
inc
xchg
loope
mov
dec
lret
or
fst
addl
jge
sub
inc
fst
fbld
pop
push
int
and
and
mov
jmp
mov
sbb
mov
sbb
adc
repz
jmp
inc
sti
inc
pushfw
mov
push
xor
jo
test
inc
mov
int
add
aam
add
xor
cmpl
stos
pushf
inc
sbb
lret
pusha
jecxz
xor
mov
or
out
mov
repz
cmp
adc
jae
lret
mov
sbb
leave
xor
es
adc
scas
sbb
fstps
xor
testb
shll
cmpsb
popa
ljmp
adc
repnz
and
adc
imul
mov
xchg
mov
inc
jno,pn
sbb
enter
push
lret
inc
mov
mov
adc
cmc
and
fiadds
in
aaa
loop
or
das
push
and
cmpsl
addl
cs
sub
lods
ficoml
scas
jecxz
xor
cld
lods
fmull
jo
pusha
or
ljmp
cmp
loope
xchg
inc
lock
cmpl
ret
inc
in
xlat
outsl
xchg
sbb
mov
lea
jns
repnz
mov
mov
pop
fsub
rorb
sbb
adc
cltd
add
sbb
xchg
push
pop
mov
test
cli
daa
addr16
rcrl
jg
daa
imul
ret
jno
cmp
cmpsl
sahf
inc
xchg
xchg
mov
jp
cmp
xchg
adc
jmp
in
pop
outsb
inc
fiadds
xchg
sbb
jl
xchg
aaa
adc
lock
sbb
sbb
addr16
das
lock
or
lods
push
jae
mov
fstl
sbb
xor
imul
add
popa
sahf
push
jne
fdivp
cmp
push
stos
add
clc
push
pop
mov
adc
xor
fisubrl
aas
das
jmp
or
sti
jge
ret
les
lret
in
xlat
sarb
fwait
sbb
push
in
std
or
mov
iret
xchg
popa
mov
jns
jb
test
out
pop
popf
aaa
mov
and
cwtl
lret
inc
xchg
bound
mov
call
adc
in
in
inc
sub
jae
repnz
adc
outsl
and
call
xor
fwait
push
mov
inc
dec
test
and
cmp
mov
daa
inc
fildll
or
cmc
pop
cli
out
jbe
in
adc
mov
icebp
cmc
sub
jns,pt
test
out
call
or
dec
adc
and
outsb
std
mov
mov
ret
push
rol
es
rcrl
pop
mov
xor
test
stc
xchg
adc
sarl
test
dec
rorb
or
xchg
ret
jl
xorl
cld
adc
ds
sbb
pop
lahf
jne
dec
sub
repnz
jmp
cmpsl
mov
sbb
in
sub
lds
sbb
inc
pop
push
mov
aas
sbb
leave
in
mov
jl
imul
je
jge
inc
iret
cli
mov
lods
insl
xchg
shll
clc
or
loope
fisttps
popa
inc
fisubl
xchg
xor
aaa
cmpsb
and
mov
scas
xchg
into
sbb
dec
mov
stos
pop
daa
data16
sub
xor
adc
pop
jnp
out
cmp
andl
dec
mov
add
xor
push
lods
data16
lahf
subl
fildll
or
ror
jp
push
les
sub
fnstsw
stc
daa
push
cld
das
pushf
pop
jae
sub
sub
mov
or
insl
mov
inc
xchg
or
orb
dec
add
dec
add
cmp
test
aaa
cmp
je
dec
pop
gs
push
xchg
push
sub
adc
cltd
sub
push
gs
mov
aad
test
cmpsb
insb
hlt
loop
push
mov
mov
test
mov
sub
repz
mov
mov
sti
inc
dec
shll
sub
xor
and
test
jbe
xchg
inc
loope
bound
adc
cli
add
xor
sti
jno
jmp
ja
mov
mov
dec
xchg
jo
mov
mov
cmpb
shlb
testl
sbb
sbb
jbe
lea
clc
leave
pop
xor
cs
mov
sbb
outsb
test
and
jne
cmp
mov
pop
xadd
mov
mov
imul
dec
ljmp
popf
xchg
xor
mov
test
pop
enter
jl
std
jmp
repz
cmp
add
jb
sbb
inc
mov
mull
mov
adc
adc
cltd
ret
cmc
or
sub
xchg
pop
fwait
ret
cmp
adc
fsubr
arpl
rorl
and
adcl
mov
mov
ja
leave
jle
stc
jne
test
inc
push
fstps
pusha
xor
mov
xor
pop
jnp
addr16
es
push
mov
mov
add
aam
cli
xchg
shll
pop
adc
stos
push
sahf
ret
movsb
mov
in
lods
sti
int
adc
push
fs
mov
lret
mov
sbb
popa
shl
jae
fldl
push
in
shr
test
pop
or
insb
nop
repnz
adc
pop
lea
into
xchg
pop
mov
mov
ficompl
lods
ja
dec
pop
fwait
pop
mov
jmp
arpl
xor
in
loope
ret
inc
movsl
shl
jb
js
mov
add
xchg
test
test
pop
push
add
sbb
fldt
mov
lods
mov
outsb
pop
sub
movsb
int
out
js
mov
or
jnp
inc
fs
mov
push
xchg
stc
fcmovnb
in
ret
aam
in
sti
sbb
jns
mov
sti
or
loope
mov
cwtl
push
sub
sub
mov
adc
orb
clc
add
push
or
xchg
and
jne
adc
arpl
aad
sub
sbb
add
ficomps
scas
gs
xor
sarl
mov
mov
dec
fiaddl
sub
mov
or
mov
jae
loope
cmpsb
lea
in
xor
out
push
push
add
push
jo
xor
cmp
out
pop
adc
pop
sbb
mov
pop
mov
bound
xlat
aad
cli
dec
mov
out
ds
clc
xchg
cmc
mov
xor
adc
imul
mov
cmpsb
movsl
in
popf
std
mov
lods
mov
test
ret
cmp
fmul
inc
dec
pushf
and
fisubrl
into
inc
fldenv
sarl
mov
mov
xchg
pop
ret
shll
jl
sbb
sbb
cmp
fwait
stc
sbbb
outsl
mov
lret
outsl
adc
jg
cmp
sahf
push
adc
lcall
out
jge
test
xchg
es
addr16
or
push
js
inc
dec
pop
xchg
nop
enter
cmpsb
jne
daa
xor
mov
pop
push
mov
cwtl
in
or
xor
inc
ja
das
add
mov
ja
jne
dec
or
mov
mov
sub
stc
icebp
xor
push
mov
inc
push
std
dec
add
add
in
sti
sbb
push
das
mulb
pop
pop
aas
xor
push
sbb
sbb
fdivs
repnz
push
ror
lock
mov
push
and
sub
sbb
rol
push
push
out
pop
cmp
cmp
nop
xchg
jle
push
pop
mov
mov
lods
bound
or
jmp
fnstcw
popa
adc
repnz
xor
cmp
fadds
xchg
aad
dec
inc
pop
xor
les
addr16
xchg
push
push
cli
dec
push
test
outsb
push
add
mov
out
jp
dec
mov
hlt
outsb
cmp
sub
lahf
and
xchg
mov
addl
mov
bound
jnp
in
inc
cmp
leave
adc
pop
inc
xchg
ljmp
jnp
cmp
push
jecxz
pop
lea
enter
outsl
aaa
jg
aas
push
cmp
add
sub
cli
jl
ret
and
mov
sub
mov
sub
in
or
cmpsl
and
enter
js
mov
add
sbb
pusha
add
in
cmp
jae
dec
scas
or
iret
add
mov
nop
int
js
int
sub
roll
sbb
fdivl
mov
sbb
sbb
dec
out
dec
adc
icebp
and
sti
std
mov
mov
or
push
cmc
cmpl
push
in
in
arpl
xchg
sar
imul
cmp
xorb
pop
mov
mov
xlat
jge
into
push
sbb
stc
or
mov
add
jns
dec
and
jmp
xchg
hlt
sub
jmp
xor
cwtl
push
lock
out
insb
push
lods
jbe
xchg
insl
lret
jge
pop
fstl
leave
lock
add
lcall
mov
setp
out
jo
mov
add
scas
inc
mov
mov
and
sbb
mov
pop
rcr
lret
jl
and
dec
xchg
and
subb
nop
mull
aad
or
lods
lock
loop
test
test
ss
jecxz
mov
xchg
cmc
inc
lcall
in
aad
in
lcall
in
sahf
dec
sub
loopne
adc
outsb
inc
std
fimuls
or
fwait
adc
shlb
scas
mov
sub
push
and
mov
jne
out
push
xchg
aas
and
pop
fists
dec
jp
sbb
xor
sbb
inc
div
lods
sub
inc
jg
ja
xor
adc
notl
icebp
mov
mov
out
scas
popa
cltd
enter
imul
sbb
jg
repz
sbb
push
mov
xor
jg
jmp
mov
nop
subb
dec
cltd
add
push
sub
pop
lret
mov
fdivr
or
in
add
pusha
bnd
test
push
out
fwait
adc
cmp
mov
cs
xor
add
push
sbb
xchg
jl
loop
imulb
ja
mov
pop
mov
pop
les
lods
lahf
in
cmp
sbb
mov
and
sahf
clc
lar
jge
xchg
dec
movsl
add
cli
xchg
dec
or
movsb
cltd
ss
mov
in
test
push
add
pop
inc
push
scas
mov
inc
or
stc
fiaddl
sub
sbb
or
jae
mov
addr16
mov
sbb
enter
mov
scas
jne
or
rol
inc
xchg
jl
sub
pushl
jecxz
and
movsl
div
iret
xchg
sbbl
lock
adc
lock
and
insl
inc
ds
inc
inc
inc
push
dec
sub
xor
jp
sub
push
sub
inc
push
xchg
pop
imul
insl
cld
sti
xchg
mov
test
push
ljmp
out
dec
sbb
mov
mov
mov
push
push
push
adc
in
and
pop
ljmp
mov
es
mov
inc
rorl
xchg
push
clc
mov
mov
fwait
pop
ljmp
xor
mov
psubb
stc
popf
and
mov
and
scas
mov
rcr
lcall
ret
iret
stos
scas
nop
and
xchg
xchg
minps
dec
popf
push
xor
dec
out
scas
sub
pop
aas
sbb
in
cmp
jge
test
in
lret
inc
rclb
or
data16
xchg
int3
inc
push
ja
stc
mov
sub
scas
sub
adc
adc
dec
aaa
cmp
sbb
je
pop
mov
out
out
push
and
clc
xor
jb
mov
test
push
mov
cmp
inc
or
fidivl
test
fidivrs
shll
pusha
pop
adc
sub
iret
cmc
jns
mov
add
sub
push
jg
mov
daa
xor
add
push
sti
addl
push
shlb
insl
repz
cmp
dec
adc
outsb
inc
xchg
imul
ret
je
adc
fcom
pushf
sub
push
ficoml
pop
in
fldenv
mov
jmp
jb
scas
cli
xor
icebp
xor
ja
mov
jne
jne
sahf
mov
dec
and
testb
sti
fsubrs
cwtl
pop
movsl
mov
gs
negl
inc
inc
dec
mov
and
jbe
sbb
push
popf
insl
xchg
test
cltd
adc
mov
lret
stos
js
jns
scas
sub
jb
dec
or
dec
jp
movsb
dec
dec
call
aad
test
adc
mov
pop
xor
imul
into
cs
fisubrs
xchg
out
idivl
pop
jne
dec
or
out
xchg
lea
push
imul
lock
mov
enter
xor
mov
xor
xchg
push
and
imul
jb
inc
mov
rclb
int
dec
xchg
mov
stc
inc
stos
xchg
nop
inc
int
adc
jo
rclb
xor
mov
mov
sub
rol
push
aad
ja
pop
inc
ret
adc
cmp
cwtl
cmc
repz
ds
mov
dec
popf
sub
xlat
mov
pop
jl
adc
loopne
adc
sub
inc
in
pop
adc
dec
testl
cwtl
pop
leave
imul
and
jae
pop
ret
sub
push
test
inc
cmc
or
fmuls
xchg
leave
jle
sub
loope
pop
mov
cmpsl
push
lcall
push
pop
movsl
lret
sbb
jno
scas
movsl
mov
sbb
insb
adc
push
fcmovnu
or
push
adc
enter
inc
pop
xor
pop
ret
lds
sbb
pop
jae
jne
les
insl
nop
pop
rcl
mov
daa
mov
dec
mov
aad
or
icebp
sub
mov
das
dec
fsubrp
xor
mov
in
and
pop
xor
fimull
xchg
push
and
pop
sbb
out
adc
jp
jne
dec
mov
jle
jmp
mov
cld
fwait
sbb
xor
insb
out
xlat
and
clc
mov
jmp
push
xchg
sahf
mov
lret
and
dec
ljmp
push
fwait
and
jo
xor
push
lret
fbld
js
aaa
leave
sub
mov
bound
sahf
popf
shrb
add
outsb
shl
xchg
ficomps
jle
rorl
out
pop
dec
xor
addr16
jo
jge
mov
clc
fdivl
js
dec
int3
inc
movsl
adc
sbb
push
mov
push
xor
ret
jnp
mov
pop
xchg
push
ds
ljmp
sub
mov
lret
jo
insb
dec
xor
inc
push
ret
xor
push
sub
out
mov
lea
stc
mov
std
out
pushf
call
roll
jae
icebp
insb
ret
out
jae
sub
sti
mov
push
je
sti
xor
push
pop
sub
push
stos
fdivs
cmpsl
testl
sbb
adc
outsl
jae
jbe
push
lret
mov
xchg
pop
hlt
imull
push
testl
out
pop
xrelease
aam
ret
mov
xor
iret
add
cwtl
add
mov
repz
push
and
push
icebp
icebp
cwtl
add
pop
mov
or
pop
in
inc
inc
adcb
nop
mov
loop
bsf
xchg
add
jmp
out
data16
ljmp
jle
cmp
das
in
jne
popl
pop
std
xchg
mulb
adc
pop
jmp
or
mov
mov
jge
lret
inc
test
xchg
push
or
cwtl
mov
cltd
xor
jae
jbe
lcall
xor
jae
testb
or
cwtl
mov
hlt
cmpsl
add
add
xchg
mov
xor
ss
mov
test
sbb
cli
mov
mov
adc
xor
dec
enter
mov
or
in
scas
mov
and
loop
lcall
adc
dec
roll
adc
dec
sub
jnp
fildll
ret
add
imul
cmc
int3
cs
sti
or
add
addr16
fists
popa
jle
push
dec
mov
aas
or
ds
int
inc
or
jb
and
das
sbb
scas
mov
es
shrl
dec
push
or
push
movsl
sbb
imul
pop
xor
inc
in
pop
sbb
popa
repnz
dec
sub
mov
sub
pop
insb
push
mov
inc
jbe
inc
sti
and
imul
and
fisubrs
mov
imul
sti
sub
les
jo
xchg
jne
in
stc
lods
push
adc
mov
cmpsb
xor
add
xor
mov
out
push
jbe
imul
xor
sub
push
popl
icebp
testb
push
scas
out
mov
sub
imul
adc
push
addl
stos
cmpsb
or
mov
or
cmp
clc
push
pop
cmp
mov
clc
gs
out
push
push
pop
out
pop
adc
sub
push
mov
lds
nop
sub
xchg
divl
inc
jnp
addr16
lret
cmp
aaa
sti
and
lret
pop
test
jge
xchg
stos
mov
pop
xchg
ss
mov
mov
jl
jg
incl
push
inc
mov
out
adc
dec
sbb
cmpsb
xchg
cmp
test
and
xchg
or
or
jns
adc
rcrb
push
inc
stos
enter
adc
in
and
out
roll
pop
dec
or
inc
push
xchg
dec
fdivl
xchg
xchg
leave
ss
lods
dec
loopne
dec
mov
ficoms
mov
cmpsl
in
repnz
jns
daa
pop
imul
sub
mov
fdivrs
adc
divl
lret
cmpsl
lea
push
fldt
dec
fwait
xchg
adc
out
imul
in
fsubrl
pop
and
xchg
add
inc
and
sbb
lret
or
test
ficoms
push
fcomps
fsubl
ljmp
je
dec
sbb
sub
repz
xor
cmp
cmp
pop
dec
add
mov
scas
fucomip
daa
outsl
xor
xchg
pop
add
mov
inc
sahf
das
mov
jmp
out
sbb
sub
sub
icebp
adc
pop
pop
xchg
adc
orb
push
push
test
mov
cld
mov
mov
or
jle
mov
into
imul
mov
shl
adc
mov
pop
sub
jge
mov
gs
and
pop
sbb
or
jmp
sub
aam
sbb
loope
xchg
sub
mov
xchg
cmp
scas
lret
sbb
in
adc
push
mov
sarl
test
and
mov
lcall
insb
adc
rcll
adc
or
mov
ja
xchg
and
cltd
add
test
bndstx
in
dec
fisubrl
and
adc
outsb
pop
int
dec
sarb
sub
jbe
sti
enter
pusha
lret
repz
and
xchg
push
xor
and
lds
lret
movl
loope
fisubs
into
insl
call
cld
jle
movsl
dec
daa
jne
mov
mov
and
cltd
lds
stos
fldt
ret
andl
test
mov
add
xor
shll
bound
push
cld
jbe
inc
sbb
in
fnstenv
imul
or
test
ret
cmp
aam
dec
and
sub
adc
jae
fcmovu
inc
cmp
leave
movsb
xchg
test
jnp
or
arpl
jne
sub
push
idivb
fisubl
mov
das
mov
rcl
sub
pop
test
pop
test
or
imul
repnz
sub
jl
or
add
adc
cs
jl
pop
fsubs
mov
push
mov
out
pushf
mov
jne
push
pop
and
push
push
add
push
or
aad
jns
pop
mov
repz
and
test
mov
push
popf
ret
sub
push
mov
es
psubw
push
jp,pn
out
lock
in
xchg
int
dec
clc
push
jecxz
and
jmp
jnp
stc
mov
ja
mov
xlat
sbb
jle
push
push
dec
add
pop
ss
push
mov
je
or
jae
cmp
jl
jl
andl
mov
rolb
push
cs
pusha
or
xor
jp
xchg
pop
ret
lret
xorb
hlt
fdivrl
xor
cld
aas
clc
and
xchg
fwait
and
push
xlat
push
notb
and
test
jmp
jge
lcall
loopne
inc
loop
scas
psrlw
ljmp
pushf
jmp
lret
add
sub
dec
mov
sub
pop
outsl
push
cmpb
andb
jns
adc
cmp
in
push
or
xor
jl
xchg
sub
adc
repz
jge
sbb
dec
scas
orb
shlb
dec
mov
sti
inc
popa
inc
mov
test
mov
xor
sub
fcmovnbe
test
ret
loop
iret
push
mov
mov
lret
jmp
cli
mov
add
mov
lea
nop
aad
xchg
cld
std
out
cld
jmp
sub
jnp
popl
push
xor
xor
pop
adc
insl
mov
mov
dec
pop
out
inc
jnp
dec
push
xor
xor
cmp
in
lret
push
push
adcb
mov
cmp
into
add
test
mov
rcrl
lock
cmp
leave
inc
and
mov
xor
xorb
pop
inc
sahf
xlat
xchg
in
inc
mov
not
lret
sarl
negb
test
inc
jb
lea
push
cmpsb
pop
mov
pop
pop
ss
and
test
lods
dec
lret
xor
aad
adc
add
cmc
sub
out
dec
pop
int
xlat
dec
xor
inc
std
test
cwtl
cmp
inc
mov
stos
lds
adc
testl
negl
sub
add
lret
stos
aad
movsb
jb
js
jle
adc
sbb
pop
fmull
fwait
mov
out
mov
fs
add
or
mov
push
popa
cli
push
aas
mov
or
stos
add
pushf
addr16
imul
es
arpl
xchg
sub
je
adc
aam
push
jmp
jbe
je
mov
repz
xchg
and
inc
shl
cmpsb
mov
int
bound
push
sub
dec
js
xor
fwait
lods
bound
in
cmp
jge
pop
lret
push
adc
adc
inc
push
dec
movsb
clc
int
and
mov
lahf
cmp
orl
rcll
pop
cmc
pop
adc
nop
rorl
push
ret
cwtl
test
aas
fcoml
sbb
imulb
movsb
xor
pop
loop
sbb
ja
xchg
icebp
loope
cld
push
lods
dec
int
lret
cmp
into
icebp
mov
push
rcrl
sub
push
sub
mov
sub
lahf
add
orb
shlb
movl
jmp
insb
sarl
lds
sahf
mov
rclb
sub
xchg
fstpl
mov
dec
jnp
xchg
icebp
mov
shrl
inc
and
cmp
inc
out
ljmp
cs
push
sbbb
push
sub
or
cs
fistpl
pop
jae
scas
cli
xor
ja
int3
pop
mov
inc
test
hlt
loop
mov
ds
adc
jb
fwait
insb
xor
adc
push
les
int
test
push
mov
jno
inc
loopne
scas
stos
shl
or
insl
and
or
cmc
hlt
in
cwtl
jecxz
test
sub
and
insl
jge
aas
xchg
mov
je,pn
js
mov
and
in
cli
sub
fadds
mov
pop
lock
sbb
fiadds
pushf
loop
pop
aaa
mov
cmp
add
inc
mov
push
mov
les
cmp
mov
inc
notl
sbbl
lds
in
std
inc
stos
repz
push
pop
mov
jns
imul
pushf
inc
sahf
cmp
xor
jg
push
nop
je
pop
push
inc
xor
adc
jecxz
icebp
into
jl
negl
mov
sub
icebp
mov
xchg
xor
daa
cld
in
cmpsb
aad
or
sub
scas
adc
cmp
fs
dec
inc
arpl
or
and
clc
dec
gs
idivb
dec
mov
xchg
aad
pop
mov
pop
cli
aaa
aaa
mov
xchg
push
out
clc
push
inc
stc
and
fsubs
pop
sub
adc
in
and
popf
jae
movl
fstl
xchg
movsl
jns
inc
mov
push
dec
cmp
mov
pmulhw
push
mov
pop
mov
icebp
nop
push
pusha
negb
in
popa
shr
arpl
mov
lods
jle
sbb
inc
mov
stc
dec
iret
mov
pop
subl
xlat
cmp
add
and
pshufw
cmp
test
call
push
adc
sub
js
xor
xor
subl
xor
mov
in
add
sarb
lds
fs
and
adc
stos
in
sbb
into
popf
pushf
xchg
or
mov
sbb
je
cmp
mov
xlat
ds
movsl
icebp
lea
outsb
adc
xor
inc
cwtl
lods
or
daa
push
mov
push
xchg
mov
in
sbb
push
pop
push
mov
insl
dec
xor
fstpl
xchg
stos
loop
jecxz
dec
inc
or
mov
add
rolb
stos
je
jg
cmpl
adc
out
aam
pop
lea
lcall
push
or
aad
cmpsb
es
dec
in
push
mov
cwtl
push
sub
popf
jecxz
rcrl
pop
or
fiadds
push
insl
sarb
mov
xcrypt-cbc
cmpsl
adc
fs
pushf
js
mov
sahf
mov
pop
dec
rol
or
iret
cmpsl
jle
bound
cmp
and
and
jecxz
push
leave
ljmp
in
popf
orb
in
scas
inc
push
das
xlat
inc
push
mov
stos
sub
negb
add
cmp
xchg
idivl
call
les
jne
inc
cli
and
xlat
lds
cmp
add
cmpsb
sbb
push
xlat
shl
repnz
pop
out
adc
push
pusha
mov
xor
aas
in
ficoml
gs
lock
je
mov
pop
or
or
into
daa
cs
push
inc
fdiv
stos
fadds
iret
jno
or
jmp
dec
inc
mov
in
ljmp
mov
xor
xchg
push
adc
test
sub
push
lods
aaa
xchg
xor
sbb
inc
fs
sub
insl
push
je
sbb
lea
add
sti
sahf
int
aad
cmp
adc
lcall
push
imul
stos
add
stos
std
aad
sub
cmp
orl
test
jno
aad
sub
push
pushf
aam
adcb
aam
fiaddl
movsl
enter
adc
sbb
mov
iret
xchg
ret
jmp
mov
movsl
or
dec
or
shl
and
sub
xchg
or
popf
or
sahf
inc
jnp
jge
pop
dec
lcall
lods
push
mov
mov
xor
das
inc
mov
jp
dec
mov
mov
xchg
push
xor
and
xlat
push
clc
imul
cmp
outsl
lods
mov
ror
xchg
inc
add
push
movsb
fisubrs
add
pop
pop
mov
fisubrs
fcoml
pop
inc
xchg
mov
sub
in
add
fscale
inc
xor
aam
ret
js
in
mov
std
push
cwtl
mov
jmp
xchg
mov
mov
sbb
shll
arpl
mov
fwait
xlat
andb
insl
fldl
subl
dec
dec
test
mov
data16
repnz
mov
js
cltd
cltd
push
add
fisubl
lahf
dec
loopne
out
scas
aas
pop
fwait
cmpb
out
sbbl
pop
add
movsb
jo
lock
popf
das
nop
or
xchg
sbb
dec
inc
xor
xorb
in
inc
rcrb
sub
je
insb
xchg
and
pop
or
or
dec
mov
add
js
mov
hlt
je
lret
mov
fistpl
mov
mov
adc
roll
push
cmp
inc
cs
insb
add
daa
inc
je
daa
push
sub
push
xor
cmp
mov
mov
pushf
std
and
dec
or
pop
cmp
mov
shlb
add
or
add
mov
or
mov
decb
fldenv
stos
sub
out
movsb
out
and
xchg
daa
jo
mov
fcmovb
rolb
xor
adc
orb
xorb
in
lds
or
lds
enter
fdivs
mov
push
mov
mov
int3
pop
imul
lahf
cmpsl
int3
cmp
nop
jle
mov
jge
roll
mov
fimull
outsl
pop
push
push
dec
jmp
cs
push
nop
add
jecxz
add
lea
ds
push
push
popa
xchg
test
out
ret
cmpsl
push
fstps
sbb
int
aam
stc
es
push
sbb
mov
pushf
pop
popf
aad
jbe
xor
fwait
outsl
jbe
adc
sub
xchg
shll
adc
ficoms
rcr
imul
outsl
call
push
das
gs
push
outsl
sbbb
test
dec
out
dec
cmpl
dec
cli
mov
repz
int
mov
mov
xchg
rorl
xchg
call
out
add
std
add
addl
push
jns
mov
or
push
stos
mov
jmp
mov
shr
fimull
pop
lds
mov
pop
roll
shlb
sub
loopne
enter
lock
lea
ficomps
push
pop
fdivr
mov
mov
sub
inc
data16
jge
sbb
orb
sbb
and
inc
adc
sbb
jnp
enter
ret
mov
imul
xor
fnstcw
xchg
stos
push
in
jmp
pushf
sub
loope
iret
xchg
fwait
fs
adc
les
xor
or
das
fadd
pop
shll
or
mov
cmp
inc
mov
cmp
jb
repz
xchg
test
ds
clc
xchg
arpl
mov
aam
das
push
mov
in
pop
sbb
aaa
or
ds
popf
loop
arpl
dec
popf
xchg
cmpsb
mov
movsb
adc
adc
incb
mov
mov
xchg
pop
shrl
aas
aas
hlt
xorb
jmp
inc
cmp
andb
jns
add
xchg
pop
in
jl
mov
pop
add
loop
fnstsw
xchg
pop
stos
push
shrb
es
dec
mov
ror
xor
std
shrb
test
dec
pop
idivl
add
inc
xor
insb
and
cmp
aas
lret
or
mov
jbe
dec
imul
mov
or
repz
lds
sub
pop
jne
mov
xor
sbb
fwait
pop
jecxz
add
mov
push
decb
xchg
adcb
mov
rorl
mov
idivl
dec
repnz
int3
ja
sbb
in
into
sbb
ljmp
lea
pop
or
into
mov
mov
into
idivb
push
out
jmp
mov
jecxz
dec
mov
js
sbb
call
into
cld
pop
jg
hlt
or
shlb
mov
std
subl
xchg
inc
pop
inc
sti
inc
stos
insl
mov
insb
icebp
test
sti
jecxz
push
push
pusha
cwtl
xchg
sbbb
sar
mov
lock
insb
push
inc
mov
shl
push
notb
iret
and
sti
mov
add
inc
stc
push
js
orl
sub
stc
sbb
in
jne
cmpsb
out
xchg
or
sub
and
aad
mov
lods
rcr
jnp
dec
lret
dec
adc
enter
mov
test
xchg
sbb
and
or
rol
inc
mov
rol
outsl
mov
dec
insl
mov
sbb
ss
jae
mov
or
clc
cltd
sti
jmp
dec
test
rcrl
jae
dec
and
je
xor
shlb
iret
xor
notb
lcall
adc
push
pop
aam
jg
jecxz
xchg
imul
and
repz
test
mov
sub
js
dec
das
and
pusha
xchg
ss
xchg
push
push
and
sub
add
pop
pushf
decb
mov
dec
fdivrs
jecxz
sub
inc
and
in
or
cmp
iret
movsb
insb
jecxz
xchg
daa
push
rorl
lcall
out
dec
jge
lea
pop
and
cs
pop
mov
push
jg
cwtl
ds
mov
pop
outsl
fsubs
pop
repnz
filds
icebp
dec
push
jne
add
repnz
mov
mov
paddq
mov
push
int3
insb
and
div
mov
push
inc
mov
jmp
xchg
fcmove
pop
xchg
sub
jp
xchg
jg
push
mov
in
xor
imul
fs
iret
shlb
fnstcw
fcmovne
dec
sbb
movsl
dec
mov
loopne
les
cli
movsl
jmp
imulb
mov
int
jmp
mov
mov
mov
lods
movsl
sahf
push
xchg
xchg
aas
dec
push
mov
add
jb
sti
cmp
das
loopne
xchg
in
shrb
pop
cs
jmp
int3
mov
out
or
push
stc
xchg
out
loop
mov
fldln2
ds
xor
popf
stc
in
jb
loopne
les
decl
or
popa
subb
or
xchg
dec
stos
xor
jl
adcb
xor
imull
mov
jg
js
stc
daa
add
mov
adc
daa
and
fsts
adc
mov
push
cmp
cmc
push
or
sbb
flds
mov
gs
mov
insl
xchg
pop
and
jno
adc
mov
sub
jo
or
mov
les
mov
int
je
in
leave
pop
xchg
fwait
add
dec
push
pop
mov
insb
dec
dec
jae
js
in
insl
jno
ret
loope
fistpl
int
sub
adc
mov
jne
loopne
test
or
push
jne
mov
sub
cmp
imul
adc
sbb
mov
mov
les
mov
les
mov
lds
lds
lea
in
loop
or
bound
mov
push
das
push
scas
adc
int3
pop
out
or
shlb
or
mov
mov
mov
dec
loopne
sub
jb
xchg
out
pop
cs
jle
pop
xchg
push
movsb
in
clc
jno
xor
pop
push
adcb
and
pop
mov
out
test
jmp
and
insl
fbld
iret
sbb
mov
loopne
jb
sti
push
fwait
xchg
jmp
pop
mov
outsl
xchg
ret
lahf
xlat
mov
push
push
addr16
pop
sub
pushf
lea
mov
pop
push
xor
pushf
sub
mov
hlt
push
push
shlb
mov
dec
xor
lahf
xor
loop
and
jg
fwait
adc
pop
cwtl
enter
mov
pop
ror
sub
xchg
add
popa
jle
sub
or
loope
pop
fistpll
xchg
cmpsl
cmc
dec
jbe
sbb
jle
and
push
ret
test
dec
je
dec
insb
outsb
mov
lret
jb
mov
xchg
lock
cmp
sub
sub
test
insb
int
xchg
mov
sbb
xadd
push
mov
jbe
push
push
and
imul
push
jp
lcall
std
stos
insb
rcl
dec
jle
sbb
push
or
sbb
mov
add
outsb
pushf
rcrb
xor
pop
cmp
sub
fincstp
jnp
lret
bound
sbb
sub
repz
cmc
mov
inc
add
mov
and
pushf
or
push
mov
in
dec
xlat
adc
sbb
pop
loop
les
adc
sbbb
push
sbbb
fsubrl
pusha
arpl
mov
repnz
ret
inc
push
push
push
iret
insb
and
mov
cmp
inc
push
in
dec
loop
cmp
mov
mov
dec
pop
adc
mov
cmp
mov
arpl
cld
push
xor
in
enter
stos
pmullw
dec
jnp
or
xchg
outsl
in
inc
xor
push
lods
jbe
subl
sub
std
xchg
and
adc
xor
jge
mov
stos
xor
cld
clc
mov
inc
dec
mov
inc
aas
add
push
pop
jp
sub
mov
mov
fwait
rol
xchg
mov
iret
test
mov
out
shrb
mov
adc
daa
xchg
jo
push
xchg
mov
or
mov
sbb
adcb
push
dec
add
movsl
hlt
lcall
outsl
mov
ret
fwait
push
or
pop
icebp
test
jg
sahf
fincstp
fwait
jbe
push
xchg
ja
dec
adc
or
add
mov
cmp
hlt
push
pop
js
jp
clc
jecxz
les
in
jne
push
sbb
inc
xchg
and
add
xchg
push
sti
movsl
cmp
xlat
or
outsb
xchg
addr16
ljmp
dec
jecxz
cltd
ss
mov
aad
cmp
inc
inc
push
cmc
imul
xchg
or
mov
jbe
xlat
fwait
push
cwtl
mov
sbb
mov
mov
repnz
aam
jge
jae
and
sbb
rcll
aad
inc
sub
stc
shll
in
pop
add
fs
or
cwtl
inc
sbb
cwtl
pop
push
dec
inc
into
dec
in
jecxz
dec
mull
mov
sub
aam
repnz
push
popf
or
mov
test
or
cwtl
dec
repnz
js
and
adc
popa
xor
mov
or
pop
mov
jp
cmp
data16
jg
jo
stos
and
and
daa
jo
mov
inc
shlb
daa
fcmovnb
out
xor
adc
pop
adcb
and
cmp
adc
flds
aaa
into
cmp
in
cs
add
es
push
ja
stos
gs
outsl
pop
dec
ss
pop
out
sarb
pop
fistpl
repz
push
sbb
dec
icebp
insb
jle
mov
pop
xor
add
test
inc
mov
and
and
cmp
jbe
loope
in
pop
sub
fdivl
aad
xor
fucom
loop
fs
lcall
mov
mov
sbb
sbb
test
pop
insl
or
sub
jg
lcall
xor
or
icebp
repnz
push
push
mov
test
mov
xchg
adc
clc
loop
cli
mov
cmp
jle
js
sahf
stc
hlt
inc
mov
sti
adc
xchg
inc
push
pop
sti
xchg
xor
sbb
aam
insb
scas
mov
or
xor
popa
addr16
test
stc
or
adc
cltd
cwtl
cltd
push
and
popl
scas
xchg
nop
or
mov
fadds
sbb
jge
lods
cld
ljmp
pop
lahf
jae
lods
cld
cmp
das
aaa
dec
lods
rorb
mov
sti
or
das
add
in
adc
jmp
or
jo
rclb
or
loopne
jp
jp
and
mov
jecxz
data16
fld
and
cs
stos
adc
pop
lcall
and
mov
inc
inc
sbb
mov
shll
add
mov
loopne,pt
push
in
fistl
cmpsl
xor
push
fnstcw
push
jl
shlb
add
aas
xor
call
add
imul
out
mov
xchg
mov
sbb
sub
xchg
cmp
or
pop
cmp
mov
adc
clc
in
push
mov
aam
dec
mov
shlb
jnp
jle
xchg
add
std
cli
daa
push
cmpsl
push
mov
imul
pop
push
dec
push
add
aad
xchg
jno
ljmp
int3
mov
xor
fistps
jmp
sahf
arpl
fldenv
pushl
js
push
enter
xchg
inc
pop
std
stos
mov
fsubrl
pop
clc
sub
pop
cmpb
push
js
pop
xchg
fcmovne
mov
jle
hlt
mov
jae
add
ror
out
jmp
sarb
xchg
fdivl
xchg
aaa
out
pop
das
enter
sti
jmp
fwait
lret
fiaddl
mov
pop
inc
mov
lret
std
inc
movsl
and
fwait
stos
icebp
fmuls
nop
mov
hlt
adc
dec
jae
dec
mov
add
outsb
movsb
leave
insl
jo
lea
sub
push
adcb
out
popf
or
imul
mov
xchg
iret
mov
jp
fcomps
int3
dec
mov
and
mov
cmpsl
stos
scas
popf
and
data16
adc
sub
dec
xchg
jo
pushf
or
cmp
test
lcall
les
popa
pop
xchg
dec
xor
loopne
popa
insb
jg
scas
daa
shl
not
out
adc
aam
iret
xchg
push
mov
fmul
lret
pushf
jl
mov
xchg
mov
mov
scas
out
add
stc
mov
sbb
cmc
int
jecxz
and
pusha
loopne
std
push
out
mov
cmp
jno
inc
fs
inc
xchg
loopne
cmp
out
ret
inc
inc
out
xor
sub
mov
in
stos
push
push
inc
xor
lods
push
subl
dec
out
rcl
fsubs
xchg
int
movsb
and
insl
stos
dec
fbstp
out
mov
hlt
inc
push
pop
lock
inc
xor
stc
and
sti
lock
sbb
popf
cmpb
imul
lods
stos
and
add
movsl
aad
dec
lock
pop
dec
sub
sbb
aaa
iret
mov
loopne
dec
repz
push
fs
adc
aad
out
leave
pop
cli
dec
cli
jne
daa
out
push
xchg
adc
negl
sahf
add
mov
jmp
xchg
inc
add
iret
push
mov
jbe
dec
pop
scas
repnz
movsb
sub
sbbl
cmpsl
jnp
cmpb
out
jmp
imul
std
mov
xchg
sbb
jl
loope
into
sti
inc
xchg
insl
es
cltd
repnz
push
xor
pop
in
jl
sbb
invd
cwtl
xor
push
jbe
loop
cmp
mov
fisttpl
mov
stos
aaa
sahf
cmp
dec
inc
in
imul
and
ljmp
and
jo
loopne
arpl
lods
jae
push
xchg
sub
arpl
jns
and
data16
lret
xchg
bound
out
into
jbe
push
lea
and
popl
sub
rorb
lods
arpl
jo
sub
and
inc
lock
aad
pop
mov
pop
repz
in
loope
push
xchg
loope
sar
decb
fldl
add
pop
push
shll
out
imul
jbe
sbb
lret
and
xchg
add
pop
outsl
testb
or
enter
cmp
js
sbb
pop
sub
test
mov
pop
fwait
int
inc
rorl
jnp
fdivl
inc
sti
dec
pop
popa
cmp
sub
les
aad
sub
mov
in
ret
and
or
push
icebp
or
or
cmp
pop
inc
lret
cs
fsubl
mov
pop
in
adc
jae
mov
gs
pop
imul
pop
sbbl
push
sahf
dec
xor
push
inc
pop
jnp
insl
std
mov
add
lret
sub
imul
test
inc
lret
cmp
push
pop
inc
das
fnsave
pop
clc
inc
adc
call
test
sbb
fmuls
leave
cwtl
stos
sub
dec
std
mov
xor
jnp
pushf
jno
loop
jmp
jo
idivl
es
shrb
sbb
aaa
mov
mov
ja
pop
mov
mov
addr16
cmp
loopne
daa
dec
fwait
jb
jns
call
dec
mov
mov
jmp
in
sbb
addr16
mov
jecxz
and
iret
mov
ss
fs
in
or
stos
repz
lcall
fsts
fstps
mov
scas
cmc
mov
mov
sahf
mov
mov
test
fimuls
ds
mov
dec
xchg
pop
mov
pop
pop
xchg
add
stc
int
popf
fldcw
es
rorl
test
ret
push
das
cmp
mov
jmp
push
mov
mov
dec
iret
pop
xchg
push
leave
mov
cmpsb
mov
in
scas
imul
xchg
outsb
repnz
mov
sarb
fistps
incl
adc
pop
andl
andb
ficomps
pusha
push
out
xor
cs
sbb
ja
xorl
sub
or
fstpl
mov
mov
gs
lahf
add
insl
sarl
clc
sbb
pop
inc
adc
add
fidivrl
out
push
lcall
les
xor
sbb
xchg
mov
xor
iret
mov
bnd
movsl
mov
ljmp
pop
mov
xchg
int
sub
leave
js
mov
and
inc
or
push
adc
adc
and
cmpsl
cli
nop
dec
iret
test
or
adc
push
fcmovu
loopne
inc
outsl
pushf
movsl
pop
popf
jne
adc
and
pop
sub
mov
cli
jg
inc
or
push
or
int3
fistpl
cmp
mov
cld
xor
xor
xor
dec
or
mov
aas
xchg
adc
fsubrs
pusha
sbb
adc
mov
dec
push
and
and
call
and
cwtl
fstpl
sti
test
pop
dec
push
mov
imul
mov
or
mov
dec
in
mov
dec
adc
xchg
cmpsl
ljmp
lods
pop
push
aad
aad
mov
out
imul
pushl
je
and
adc
fcmovnbe
sti
pop
cltd
pop
stos
jno
xorb
data16
cmp
int3
xor
adc
add
fwait
sahf
sbb
pop
arpl
or
enter
inc
hlt
xchg
xlat
sti
dec
inc
mov
lret
pushf
jmp
pop
sub
jg
add
fs
cld
sbb
jb
jbe
cmp
shrb
push
and
and
test
push
add
xchg
push
int3
inc
cmp
aas
pop
cli
mov
xchg
hlt
fucomi
das
xor
inc
mov
xchg
xchg
in
lret
xchg
jno
mov
pop
xor
add
ja
stos
out
cmp
movsl
xchg
jo
inc
pop
dec
or
inc
into
xor
cmp
mov
pushf
adcl
dec
xchg
inc
xchg
dec
xchg
jno
push
jno
jge
or
test
ficoml
test
imul
scas
test
adc
movsb
adc
sbb
cltd
daa
orl
push
and
xor
imul
inc
dec
lock
cmp
aaa
call
adc
scas
mov
sbb
dec
push
das
lock
xlat
cmp
mov
jo
xchg
mov
adc
movsl
or
mov
iret
dec
sbb
cld
insb
cmp
jae
dec
pop
fnstcw
lods
and
rep
cmpsb
shll
dec
addl
cmpsl
in
push
dec
jae
in
dec
adc
jb
cmp
rcll
mov
testl
add
mov
mov
push
repnz
in
pop
push
sarb
lods
mov
and
pop
and
mov
add
cmp
sbb
or
mov
pop
add
push
les
pop
nop
cs
scas
sbb
push
or
sub
dec
cmc
pop
cwtl
jnp
dec
and
sbb
loopne
mov
popa
jmp
in
in
loopne
lret
mov
in
pop
movsb
mov
inc
fsub
sub
and
rorl
mov
cmc
cmpsl
mov
ja
add
test
mov
sbb
out
push
fisttps
mov
incb
incb
sbb
dec
std
xor
icebp
mov
push
xor
add
and
fs
insw
add
jl
adc
popa
adc
ret
adc
stc
mov
cli
fadd
jg
aas
subb
mov
mov
or
cmc
outsl
adc
ds
lahf
and
enter
adc
loope
je
stos
jge
arpl
es
xchg
std
out
mov
cmp
dec
popl
test
mov
into
mov
dec
inc
xchg
subb
out
pop
dec
mov
mov
xchg
push
mov
mov
mov
ljmp
jp
lahf
dec
fnsave
lock
iret
fwait
test
xchg
in
shrb
daa
cmp
jae
bound
push
shr
aad
mov
xchg
sub
dec
movl
scas
shrb
in
fisubs
mov
inc
jae
ljmp
jecxz
rcrb
iret
pop
sbb
mov
daa
cmpsb
xor
xchg
cli
cmp
push
dec
and
pop
inc
pop
pop
cmp
jns
xchg
mov
bound
xchg
push
jb
test
jle
in
and
dec
arpl
sbb
inc
adc
inc
jne
or
dec
pop
xchg
pop
bound
mov
hlt
int
adc
and
lock
dec
fadd
xor
sbb
jmp
sbb
mov
push
mov
sub
scas
decl
jmp
stos
mov
scas
scas
loope
mov
sub
mov
mov
jmp
in
pop
adc
dec
xchg
and
dec
in
mov
repz
idivb
das
jae
mov
pop
add
mov
mov
iret
and
fcoml
shrb
in
fsts
sbb
into
add
je
js
push
jp
fiadds
daa
pop
mov
inc
shll
repnz
jne
add
outsb
add
xor
jle
test
mov
mov
enter
jle
dec
or
cmp
movsl
lret
mov
jp
push
jnp
clc
mov
imul
mov
sbb
rcll
movsb
hlt
shll
data16
jo
inc
pop
test
dec
in
outsl
insl
ja
sub
fists
mov
xor
imul
sub
xchg
sbb
hlt
xchg
outsl
pop
fiaddl
push
pusha
repnz
jbe
push
lea
test
movsl
das
in
xor
xchg
jl
ds
scas
fcomip
lcall
cltd
mov
nop
insb
test
inc
push
ljmp
dec
fistpl
inc
cmpsb
or
xor
fnstsw
rorb
pop
add
sbb
outsb
out
int3
cltd
push
pop
call
jmp
imul
add
or
les
jns
or
jp
sbb
xor
lcall
xlat
scas
cltd
ds
jnp
jmp
fs
int3
lds
or
pop
pop
out
into
int3
hlt
jae
inc
shll
neg
mov
pop
xor
out
jge
dec
mov
and
and
daa
xor
inc
addr16
mov
insb
leave
inc
int3
lds
cmp
aad
add
into
lret
push
cli
popf
mov
inc
mov
add
mov
out
adc
cs
fsub
lcall
xor
or
sbb
mov
cltd
icebp
push
imul
mov
inc
jge
adc
in
pushf
ljmp
mov
push
imul
pop
or
mov
jecxz
lahf
mov
js
fwait
dec
test
mov
add
jnp
sbb
and
leave
xchg
je
mov
pop
sub
push
or
movsb
sarb
jl
cmp
xchg
das
sbb
cld
mov
in
gs
dec
mov
movsl
fildl
movl
or
fists
lea
ss
cld
and
flds
aas
cmp
dec
fsubs
ss
ja
jb
lret
call
aad
ja
aam
loope
sbb
repz
lds
or
add
js
mov
push
lock
inc
int
rcrl
bound
cmpsb
out
clc
inc
or
gs
add
pop
int3
adc
jno
inc
push
add
jae
dec
jg
push
or
push
xor
adc
aad
lods
arpl
ss
inc
mov
fisubrs
icebp
mov
aas
jno
scas
enter
cld
and
das
dec
sbbb
push
cmp
lds
cmc
sahf
add
jp
xor
pop
call
f2xm1
inc
cmp
inc
mov
push
arpl
fbstp
sub
test
ss
sbb
push
push
mov
movsl
sbb
and
call
push
jno
sub
jbe
inc
adc
add
dec
call
icebp
scas
je
test
inc
jmp
iret
mul
and
pop
negb
in
sbb
fwait
addr16
mov
aaa
cmpsb
jns
iret
dec
push
pop
jno
std
fnstenv
jb
ss
stos
pop
notb
int3
adc
data16
push
cmp
mov
stos
nop
inc
mov
mov
sbb
and
mov
xchg
imul
push
roll
jo
mov
sub
pop
leave
imul
cmp
pop
sub
jp
jecxz
clc
cmp
ror
push
nop
in
lret
mov
jo
loop
pop
mov
mov
ret
pusha
rcrl
xchg
xor
not
filds
insl
dec
inc
pop
lods
imul
jmp
ss
inc
mov
dec
aas
arpl
and
adc
in
idivb
insl
dec
pop
cmp
jl
scas
push
mov
xor
cs
and
and
jmp
mov
fsubl
mov
hlt
imull
sub
jg
mov
clc
push
decl
mov
popf
scas
adc
cmpsb
imul
xor
adc
loop
adc
cmp
xchg
lock
out
enter
mov
xorb
lds
ds
out
jecxz
in
in
sbb
push
enter
jns
andb
rcll
test
sti
xchg
mov
cmp
dec
loop
pop
je
dec
xchg
int3
leave
ds
lcall
cmp
cs
sbb
les
jae
pop
inc
jno
jb
jae
gs
adc
imul
or
shr
stos
in
outsb
or
add
mov
xlat
jne
dec
fdivrl
and
sbb
adc
sbb
fsubl
fsub
push
fiadds
in
pop
inc
loope,pn
mov
decb
lea
enter
das
fisubl
aaa
xor
mov
negl
out
daa
sub
xchg
rol
jmp
mov
mov
mov
in
jb
arpl
dec
inc
pop
es
movsb
cmc
fwait
aad
ja
cmp
add
mov
test
scas
outsl
cs
cmp
loop
and
ret
push
push
dec
xor
iret
int3
push
test
jns
mov
movsb
mov
and
jg
sub
test
lahf
shrb
push
orb
pop
lahf
jp
jl
jmp
add
pop
fistl
or
insb
xorb
push
daa
xchg
sbb
mov
inc
adc
das
pop
pop
xor
cmp
or
jns
adc
mov
in
mov
sub
notb
aaa
les
call
arpl
and
adcl
cmp
pop
push
aaa
ja
insb
repnz
adcl
insl
jns
insb
out
or
mov
xlat
dec
wrmsr
add
add
or
pop
aam
cld
adc
or
pusha
bound
xchg
stos
in
mov
movsb
mov
push
arpl
xor
insl
nop
mov
adc
imul
push
stos
ss
xchg
xchg
repnz
lret
and
push
cmc
cmp
inc
popa
xchg
stos
into
inc
aad
cmp
xchg
js
sbb
pushl
arpl
adc
jl
out
mov
call
out
fwait
or
aad
imul
pop
sbb
or
mov
leave
and
mov
repnz
mov
or
xor
fsubl
lods
pop
daa
push
mov
mov
and
cmp
adc
cmp
shll
adc
jne
adc
ret
mov
iret
mov
mov
repz
jae
out
popf
loope
in
insb
in
icebp
xchg
sbb
lcall
jb
add
cwtl
lods
out
xchg
push
push
xchg
addr16
or
xchg
pop
xchg
loopne
sbb
lret
jno
ficoml
inc
jns
xor
mov
jnp
scas
mov
cmp
stc
and
cltd
mov
rcrl
inc
mov
aad
sbb
faddp
fsubrs
unpckhps
sti
dec
out
sbbl
xor
cs
into
sbb
ficoml
adc
or
push
xor
insl
xchg
adc
cmp
xor
inc
aad
clc
inc
or
add
adc
dec
sub
xchg
scas
xchg
and
outsb
pop
jmp
repnz
push
aam
je
cmp
mov
sbb
orl
aas
rcrb
loope
adc
es
dec
sarl
dec
js
popf
mov
roll
xchg
sarb
enter
arpl
adc
out
into
orb
cmpsb
in
leave
daa
sub
xchg
pushl
pop
aam
pop
push
scas
divb
dec
add
inc
in
clc
ja
imul
pop
xorl
push
inc
add
mov
mov
out
scas
jbe
mov
cmc
xchg
arpl
dec
dec
ljmp
jae
dec
mov
xchg
pop
aam
mov
negb
addl
pop
sub
mov
sbb
mov
aam
sub
push
xchg
jne
negb
xchg
xor
jne
mov
rcrb
ljmp
arpl
outsb
jo
fs
test
insl
cltd
jb
cmp
jns
test
loope
roll
push
cld
ret
popf
scas
inc
or
out
xchg
sbb
mov
and
rolb
sbb
sbb
jb
adc
pop
pop
pop
and
movsb
xchg
imul
cld
andb
inc
lds
movsb
enter
je
dec
jecxz
orl
pop
cli
dec
pop
popa
push
orl
inc
push
int
out
dec
nop
mov
sbb
hlt
jbe
pop
das
mov
cmp
sahf
add
push
mov
ret
ljmp
loope
hlt
test
jb
lahf
aaa
push
pop
stos
rcrl
pop
jmp
inc
test
leave
and
inc
popf
mov
out
in
sub
in
mov
data16
jecxz
out
push
add
cmp
inc
inc
leave
cmpsb
push
and
inc
inc
push
mov
push
stos
sub
or
out
adc
adcl
push
vunpckhpd
cmc
out
cmpl
mov
add
sarb
dec
mov
shll
stc
and
xor
mov
aam
cmp
inc
jo
jl
adc
das
das
lahf
fistl
xchg
aad
push
loop
fisubrl
cli
insl
lods
dec
rcr
int
mov
aas
lock
mov
xchg
in
ffreep
adcb
mov
inc
and
mov
nop
lds
es
add
add
test
fldt
jecxz
fcom
lock
or
push
or
aad
or
sub
mov
pop
xor
outsb
ret
xchg
es
mulb
adc
nop
je
ja
jo
add
fsubrl
sbb
fnstsw
push
pushf
imul
ds
cwtl
adc
out
sub
mov
or
xor
xor
push
mov
data16
mov
and
or
lods
pop
sarb
mov
jno
mov
out
incl
mov
sbb
mov
sub
movsl
clc
ds
out
mov
mov
mov
sbb
mov
push
sub
mov
fwait
mov
arpl
in
pop
jp
lret
push
out
ss
or
or
mov
outsb
adc
mov
mov
xlat
pop
imul
mov
jmp
fsubrl
or
scas
and
idivl
xchg
shrb
loop
xchg
jb
ret
jle
push
xor
adc
push
sub
mov
in
icebp
xchg
and
shlb
imul
mov
cwtl
lcall
push
xor
push
and
fmull
or
in
or
fbstp
inc
pop
inc
sarl
pop
addr16
sahf
mov
dec
cmp
dec
lret
addl
lret
out
outsb
mov
mov
push
fsubs
outsb
jo
daa
std
inc
int3
jecxz
dec
mov
ffreep
inc
and
addr16
rorb
jbe
adc
in
mov
mov
cmpsl
dec
cwtl
rep
je,pn
mov
js
out
adc
lret
call
jmp
in
xor
scas
dec
or
pop
jp
sub
lret
add
push
adc
sub
xor
mov
dec
sub
dec
add
push
leave
xchg
in
lret
fwait
push
test
leave
fs
loop
push
adc
pop
or
and
jb
lock
dec
and
stos
pop
inc
xor
outsb
mov
mov
ljmp
mov
fwait
push
aas
xchg
mov
scas
sbb
dec
jns
movsb
mov
jo
mov
scas
and
push
orb
lock
lea
cmp
xor
push
mov
jb
mov
insl
out
ficompl
sti
adc
negl
loop
outsl
repz
or
insl
adc
call
xchg
movsb
or
sbb
sub
shll
sub
sub
std
adc
clc
mov
test
pop
sbb
inc
cwtl
and
icebp
dec
sub
outsl
inc
and
jl
or
push
loope
mov
pop
adc
popa
dec
ss
jne
mov
mul
clc
scas
sub
adc
test
test
dec
jnp
xchg
negl
bound
dec
addr16
mov
lods
sub
and
mov
lds
push
das
hlt
fs
mov
fnstenv
push
or
jle
mov
and
cs
xlat
dec
scas
popf
ljmp
jae
out
mov
sub
sbb
jno
cltd
out
mov
call
adc
cmpsl
push
pop
aam
loop
sbb
in
xor
shlb
shrb
adc
andl
arpl
flds
aas
testb
mov
into
shll
fisubl
insl
jo
push
jl
xchg
repz
and
bswap
cmp
cmp
sub
pop
mov
mov
dec
sub
stc
xchg
repnz
mov
sti
xor
mov
nop
mov
outsb
lds
fbld
mov
insb
pop
enter
call
call
cli
adcb
mov
mov
aas
xchg
rol
pop
arpl
fidivrs
sub
dec
int
scas
fcmove
xor
orb
pop
int3
rcll
scas
call
add
push
pop
adc
mov
sub
cld
shlb
repz
mov
pop
jno
or
inc
lcall
enter
lods
jl
mov
lret
sub
out
dec
or
shlb
out
imul
add
mov
mov
aad
push
in
subb
mov
jmp
push
adc
push
mov
shll
sbb
cmp
and
sbb
push
inc
adc
mov
nop
lock
iret
fbld
jne
ss
mov
pop
jmp
mov
rolb
cwtl
inc
mov
es
popa
add
xchg
cmp
aas
in
dec
mov
lret
jp
cmpsl
jnp
and
fistps
fsub
adcl
test
ds
mov
in
sarb
cltd
inc
aam
mov
jo
mov
mov
incl
out
in
movsb
and
test
pop
lret
xor
iret
mov
pop
jecxz
sub
aad
adc
xchg
lods
in
sub
or
loopne
in
lea
cmp
push
cmp
mov
dec
and
dec
aad
daa
faddl
loop
add
int3
fcompl
int3
test
push
jle
lods
cli
or
xchg
enter
leave
stos
popa
inc
dec
lret
pop
push
lods
int3
pop
sub
push
outsb
sbb
cmp
pop
addr16
int3
xchg
decb
adc
cmc
movsl
cmp
cmpsb
out
xor
xlat
mov
je
adc
mov
pop
push
movsl
gs
jge
mov
imul
les
stc
jg
and
enter
aaa
fcomps
sbb
dec
cmp
cli
ret
and
adc
pop
mov
sti
stos
repz
xchg
mov
les
mov
cmp
sub
fldt
jp
je
dec
pop
sub
es
and
jecxz
inc
or
ror
stos
and
adc
mov
sbb
mov
insl
rcll
mov
push
lcall
jg
das
fsubrl
push
enter
mov
or
sbb
movsb
in
adc
lret
sub
jns
mov
out
dec
push
pop
aaa
icebp
adc
push
clc
adc
scas
aad
mov
cmpsb
push
nop
loop
lods
fldenv
xchg
outsl
mov
xchg
jae
fnsave
cmp
std
cmp
dec
inc
fidivrl
mov
adc
sbb
or
xlat
lds
add
bndldx
push
addb
js
lgs
cli
out
inc
or
xchg
add
push
xor
inc
mov
or
cs
cltd
pmaddwd
pusha
lahf
lret
fwait
pop
fwait
push
dec
pop
add
xchg
cmpsl
jnp
out
sbb
shr
mov
jo
mov
pop
lret
mov
mov
insb
inc
mov
jae
dec
shr
jmp
xor
pop
add
fmull
pop
into
cmp
jne
jmp
enter
roll
dec
shl
test
addr16
adc
lahf
push
mov
subl
outsb
mov
int3
test
inc
aad
mov
rclb
test
mov
daa
in
or
inc
mov
pop
inc
sbb
out
lcall
out
xchg
fldt
out
or
movsb
jno
rorl
sub
lcall
imulb
or
stos
cmp
sub
mov
pop
insl
mov
ret
adc
inc
sub
or
out
inc
addl
and
cmc
in
mov
mov
sub
pop
lods
fisttps
imul
jno
sbb
hlt
dec
setns
push
or
fisttpl
movsl
adc
icebp
stos
in
and
arpl
adc
shll
pushl
dec
pushf
pop
xorl
pop
lds
sbb
pop
outsl
stos
mov
dec
rclb
dec
sbb
or
pop
dec
lods
leave
enter
je
iret
or
sbbl
adc
jnp
rorl
in
push
stc
pop
xchg
push
inc
subl
mov
mov
jno
sbb
sbb
add
rcl
in
rorb
xchg
pop
daa
mov
adc
sbb
and
fs
lods
testl
cmc
pop
sub
fimull
pop
fldt
bound
and
insl
push
mov
mov
test
mov
or
adc
push
shlb
or
jp
jne
and
mov
pop
mov
mov
push
xchg
aad
cmpsl
ds
sbb
call
push
or
or
xchg
mov
add
and
add
mov
pop
mov
lcall
xchg
repz
mov
sbb
jle
enter
sub
je
cld
xchg
setg
xchg
sub
or
push
aad
jne
or
sbb
sub
xchg
xchg
fs
sub
adc
nop
cmp
daa
lock
inc
mov
nop
jge
inc
shr
aas
jle
shll
or
aad
sbb
lods
jno
dec
stos
adc
outsl
pushf
fwait
and
lcall
clc
testl
leave
add
out
in
mov
fcoms
xchg
mov
pop
xchg
mov
xor
dec
out
xor
mov
mov
rcrb
xchg
sub
add
scas
mov
daa
inc
mov
pop
call
push
cmp
rolb
or
push
loopne
out
ret
and
sbb
test
mov
bound
arpl
fwait
inc
test
xchg
imull
sbb
add
and
jecxz
cmpsl
cmp
montmul
cmpsb
add
add
inc
sahf
enter
andb
adc
push
mov
lret
jae
dec
pop
inc
push
mov
test
adc
lea
mov
hlt
jecxz
bnd
jle
popf
or
sub
adc
cltd
fdivs
fdiv
xchg
pop
add
pop
cld
mov
adc
mov
push
sbb
and
inc
in
push
and
jl
sahf
test
push
dec
stos
fninit
cmp
dec
ljmp
aaa
pop
arpl
sbb
push
and
and
jne
movsb
repnz
push
mov
cltd
les
out
dec
add
xchg
aam
pop
push
or
out
or
add
push
mov
pop
inc
or
adc
sar
int
push
mov
add
leave
sbb
leave
aam
jno
iret
loop
pop
imul
sti
lea
pop
cmp
push
rol
mov
push
std
std
cltd
cmp
cmc
loopne
mov
orl
int
jmp
test
idivb
jae
aaa
cmp
ja
outsb
sbb
std
add
dec
cwtl
test
mull
cmpsb
push
adc
jge
mov
mov
scas
test
pop
and
inc
cmp
sbb
push
stos
cmp
pushl
xor
in
jne
lret
dec
mov
push
lcall
leave
jne
in
and
loop
out
and
jb
xchg
fucomip
add
sbb
or
adc
sbb
jnp
mov
sbb
sub
adc
push
enter
shlb
sti
mov
jo
les
cmc
inc
in
mov
leave
mov
and
mov
pushf
inc
fwait
cs
outsb
js
pop
mov
ss
pop
sub
sub
loopne
and
outsl
into
ss
push
fbld
hlt
xchg
test
jecxz
imul
scas
into
testb
cmp
mov
movsb
adc
mov
sti
push
fdivrl
cmp
stos
inc
repz
sbb
into
dec
sub
lds
daa
pop
adc
add
jo
int3
xlat
pop
cmp
imul
push
jne
cmp
movsl
or
filds
lods
hlt
mov
sbb
push
dec
aaa
mov
pop
cwtl
decb
fwait
sub
addr16
aad
jbe
jp
mov
into
xor
mov
repz
push
mov
std
and
xchg
dec
ficompl
pusha
lods
fnstsw
push
das
out
inc
jae
fstps
sbb
inc
jae
fcompl
cwtl
aad
dec
xor
mov
xchg
out
mov
add
xchg
cs
ret
jno
mov
test
pop
cli
add
push
inc
push
ret
fwait
cmp
jbe
jmp
push
push
or
add
xchg
notl
sbb
mov
fs
sbb
xchg
int3
sbb
and
lret
iret
fwait
mov
push
sbb
sbb
or
aaa
aam
dec
inc
cli
pop
push
push
push
in
push
cmc
add
into
shll
mov
sbb
pop
add
leave
loop
sahf
ja
in
loop
mov
mov
insl
cmpsl
aaa
adc
mov
inc
add
sbb
mov
add
xor
mov
xchg
pop
aas
shl
sbbl
in
in
xchg
jo
subl
jp
lea
jae
or
leave
cmp
lds
lea
jecxz
stos
jo
pusha
adc
loopne
xchg
sub
idivl
cwtl
sbb
adc
sub
push
push
sub
and
ss
jge
fstpt
cld
adc
flds
dec
movsl
cmp
insl
xchg
fbld
mov
and
dec
outsb
adc
dec
icebp
dec
mov
test
aam
or
movsb
mov
xchg
les
or
push
xchg
data16
jecxz
mov
add
push
imul
jge
icebp
mov
subps
inc
bound
loope
int3
cmp
lcall
mov
lods
jmp
lods
fs
push
ret
fs
mov
rol
ret
cmpsb
movsb
decl
adc
hlt
int3
xchg
lea
push
jb
and
sbb
iret
es
pop
sbb
mov
fldlg2
ret
lret
fstpt
jo
xchg
and
dec
outsb
sarb
inc
cld
popf
add
out
xor
arpl
es
mov
mov
and
outsb
clc
aaa
nop
cmp
adc
in
mov
xor
xor
mov
xchg
lods
push
xchg
repz
lds
cmp
mov
cmp
jb
sub
inc
cmp
arpl
jmp
enter
or
dec
nop
lret
cmpsb
add
and
sbb
rcll
dec
sbbl
and
cmpsb
lods
jg
outsl
sbb
fs
call
or
mov
jb
shl
or
dec
xlat
lret
mov
or
psubusb
inc
ss
out
cli
adcl
mov
or
add
adc
jns
shll
in
and
or
lret
jno
stos
sahf
inc
shl
rolb
loop
add
push
gs
add
xor
xchg
sti
and
out
nop
push
and
dec
cld
int3
loop
aad
getsec
cmp
push
lahf
push
insb
shll
loopne
and
repz
in
jle
sbb
lahf
push
push
cmp
mov
outsl
xor
jnp
les
inc
pop
gs
pusha
icebp
mov
inc
xchg
repz
or
dec
xchg
out
mov
clc
ret
add
repnz
add
cli
push
mov
shrl
push
xor
daa
push
fisubrs
push
iret
adc
out
enter
mov
push
out
loope
jg
les
push
out
out
test
cmp
jecxz
dec
mov
divb
scas
add
mov
in
repz
cmp
adc
nop
xor
cmpsb
adc
ds
pusha
out
les
repnz
dec
pusha
mov
gs
cmp
lcall
push
bound
add
mov
sub
and
inc
movsb
dec
mov
xlat
bound
xor
ret
sub
pop
mov
and
cmp
test
enter
inc
aas
push
into
mov
pushf
mov
and
push
aaa
or
jmp
sub
xchg
mov
cmp
imul
insb
ret
lcall
sub
inc
mov
add
js
push
aas
mov
jne
stc
mov
mov
push
outsb
pop
scas
loop
cmp
mov
hlt
sbb
push
jns
xchg
andb
adc
sti
pop
scas
adc
mov
shl
out
pop
test
mov
pop
cs
inc
bound
sub
and
mov
sbbb
aam
pop
imul
out
into
xchg
bound
jecxz
or
push
ja
and
cmpb
nop
ja
out
outsl
add
fldt
in
ds
lea
lock
cmp
jl
loope
push
fucomi
push
sub
xchg
jo
jno
ja
inc
test
jg
jge
out
leave
pop
test
jne
lret
lret
mov
mov
sarb
popa
sbb
imul
dec
mov
sub
and
inc
dec
push
cmp
sahf
and
push
andl
pop
adc
cli
sbb
mov
jne
cmp
adc
push
bound
jo
xchg
adc
inc
xchg
xchg
rcrl
mov
jne
pop
push
cmp
inc
outsb
xor
sbb
es
adc
jne
test
push
cmpsl
aas
shll
stos
push
cmpsb
es
repnz
pop
or
imul
arpl
jne
jno
sbbb
addr16
dec
test
xor
aas
xchg
int
xor
ja
and
sbb
xor
push
ret
xor
push
pop
in
jo
xchg
popf
cmc
les
out
inc
sbb
scas
mov
ljmp
xor
ds
sbb
sbb
push
push
xchg
jne
test
popf
aad
push
addl
lods
mov
mov
adc
out
nop
mov
cmpsb
in
nop
scas
iret
mov
shll
orl
push
out
stc
cli
mov
mov
mov
aas
sbb
adc
loopne
xchg
and
leave
xor
or
cltd
mov
xor
mov
ljmp
mov
push
data16
outsl
sbb
repnz
mov
pop
cmp
push
jmp
dec
sbb
cmp
pop
sbb
in
cmp
pop
mov
cmp
mov
movd
inc
mov
rol
inc
adc
mov
jl
ja
cld
mov
or
add
cmp
push
jbe
mov
out
adc
and
adc
or
xchg
lcall
cmc
idivl
pop
stos
and
and
aam
lahf
push
mov
dec
push
push
sti
ret
popf
stos
out
cmp
push
pop
cmp
ds
mov
xchg
push
leave
sbb
dec
aas
pusha
outsb
jo
loopne
call
pop
popa
or
popf
mov
or
cmp
adcl
push
xchg
js
into
jp
add
rcll
jp
fwait
mov
pop
fildl
inc
mov
out
out
pop
lret
adc
subb
pushf
pop
loop
inc
fs
inc
xchg
dec
fldt
int3
jecxz
add
mov
rcl
call
in
sbb
in
aam
push
and
clc
enter
sub
je
lret
mov
pop
add
mov
and
mov
enter
movsl
cmpsb
sbb
add
gs
inc
mov
loope
sti
sub
dec
sahf
ret
add
dec
int
cmp
or
shlb
aas
int3
or
ja
add
mov
xchg
int
sbb
sub
call
loope
mov
and
or
pushf
rcrb
imul
jecxz
jae
mov
push
movsb
sbb
mov
mov
xor
pop
bound
push
aad
mov
xchg
adc
xchg
xchg
test
call
sbb
inc
pop
lcall
scas
aad
mov
in
sbb
xor
int3
sbb
mov
or
add
xchg
push
adc
jmp
add
pop
ja
popf
enter
out
adc
inc
fwait
add
xchg
pop
and
jns
ljmp
enter
sahf
and
push
mov
xchg
sti
or
fsubs
adc
es
fsubrl
ret
andl
fisttpl
cmp
inc
int3
iret
fdivs
mov
fidivrl
add
lock
mov
xchg
std
lcall
dec
cmp
sahf
popf
mov
sahf
push
nop
or
pusha
and
pop
lock
sbb
into
rolb
subl
push
jle
imul
lods
faddp
xor
data16
cld
mov
xchg
push
fdivrs
hlt
nop
push
jl
xchg
add
iret
cmp
dec
adc
inc
xor
cmp
or
xlat
or
bound
mov
arpl
mov
stos
mov
add
xchg
sub
push
das
mov
push
sahf
shrl
xor
ss
dec
clc
push
xlat
cs
push
xor
or
and
push
bound
and
in
mov
jne
sahf
bound
or
pusha
movsl
sbb
mov
or
mov
pop
in
mov
jns
in
add
jl
push
jge
std
pop
jno
push
lock
das
jb
inc
xlat
mov
imul
inc
popa
faddl
leave
scas
out
add
lret
pusha
adc
testl
cmpsl
imul
xchg
leave
mov
adc
test
andb
cmp
push
jle
and
sahf
pop
cmpsb
gs
inc
jle
xchg
push
jnp
jne
jns
jp
scas
fisttpl
adc
xchg
xor
into
mov
jns
fs
hlt
mov
arpl
mov
aad
call
jbe
cli
lods
pop
xchg
lods
cld
jp
ljmp
aad
cli
pop
xor
mov
in
std
pushf
call
push
xchg
enter
in
movsb
divb
pop
in
test
cmp
push
dec
in
call
imul
sbbl
mov
mov
addr16
pop
mov
mov
std
jb
jl
xchg
xor
cmpsb
cmpsl
and
push
mov
xchg
insb
loope
stos
cmp
outsb
repz
add
lods
jno
ljmp
clc
popf
add
dec
shlb
clc
mov
in
push
pop
xchg
cmp
push
fcmovnb
lahf
aas
lret
pushf
mov
push
mov
int
mov
fisubrs
out
and
pop
push
sbb
pop
cwtl
or
lea
mov
jnp
pusha
mov
stos
xchg
push
mov
inc
fdivrs
mov
adc
andl
xor
fwait
adc
mov
mov
xor
or
rcr
mov
xor
and
in
or
bound
out
fiadds
push
mov
imul
pop
push
int
push
dec
pusha
inc
jae
mov
sub
pop
stos
sbb
scas
adc
mov
cmp
and
in
out
sub
cmp
mov
lock
fnstenv
sub
xchg
fldt
sbb
fsts
aad
imul
jp
lahf
pop
push
xchg
push
jecxz
xchg
pop
sbb
push
xchg
mov
cs
sub
popa
ss
pop
jbe
je
orb
les
popa
in
pusha
sbb
ljmp
cmp
lahf
shl
inc
bound
call
mov
or
xchg
inc
loope
jnp
ja
xbegin
dec
cmpsb
lds
cld
pop
call
or
mov
fidivrl
cmp
xchg
jno
testb
fdivrp
jge
ret
and
shrl
out
inc
cltd
sub
pop
mov
or
pop
dec
mov
dec
lahf
es
shrb
or
mov
cmp
outsl
fimull
lahf
dec
cmc
push
xchg
mov
sub
adc
mov
jle
jg
adc
xchg
cli
pop
lock
dec
push
data16
das
lcall
movsl
call
inc
mov
iret
xor
repz
dec
addr16
lea
cmp
loope
ret
and
add
adc
sub
andl
add
push
mov
mov
cld
loop
out
push
flds
lds
insb
pop
push
gs
ja
cmp
mov
jns
sarb
inc
shrl
insb
int
dec
movsl
mov
nop
jl
stos
mov
pop
jecxz
test
dec
int
xchg
lods
mov
sbb
std
repz
push
xchg
shl
xchg
stos
push
or
cmp
fwait
rcrl
cli
jnp
and
cmc
ja
sbb
out
lcall
outsl
inc
push
sbb
sub
pop
lcall
and
lea
jg
inc
sub
add
dec
out
mov
jbe
imul
mov
jb
xor
stc
test
sub
dec
cwtl
sbb
imul
mov
or
loope
mov
pop
out
bound
adc
xchg
js
xlat
hlt
push
fisubrs
mov
int3
test
bound
pop
daa
and
jnp
mov
mov
xor
push
imul
dec
dec
int3
nop
mov
cmp
push
popa
xor
mov
xor
icebp
jle
xor
fwait
mov
fisubrs
jns
icebp
pop
std
into
imul
cmp
shll
push
cmp
pop
mov
fcomps
mov
sub
mov
xchg
dec
pop
xor
mov
enter
and
fmul
out
inc
in
cmp
fimull
cwtl
aad
stos
mov
je
arpl
mov
outsb
adc
filds
imull
lods
add
xchg
pusha
movsb
jle
dec
sub
icebp
sbb
push
iret
sbb
jmp
in
push
sub
cmp
test
mov
cmc
sbb
mov
add
sub
arpl
sarb
rol
adc
xchg
add
cs
push
pushf
xor
xor
xchg
jecxz
sahf
addr16
insb
repz
xor
imul
ja
inc
xor
test
not
xor
mov
mov
sbb
jg
push
pusha
jno
imul
jge
js
test
dec
lcall
mov
mov
inc
icebp
pop
ror
sti
movsb
fbstp
cmp
mov
or
fstpt
xorb
popa
sub
outsb
lea
shlb
enter
sbb
rolb
pop
mov
push
and
lods
mov
scas
dec
lock
lret
outsl
repz
inc
testl
sub
sbb
ret
movsb
mov
add
dec
add
into
cmp
adc
mov
add
insb
pop
cmp
adc
jl
cmp
lea
lods
sub
dec
outsb
push
push
xchg
sub
and
jmp
mov
mov
sbb
xchg
jbe
push
mov
mov
mov
sub
inc
lret
inc
lock
dec
jns
rolb
dec
adc
cld
or
cmp
cltd
adc
stos
cltd
mov
mov
and
andl
int
or
adc
aad
idivl
pop
fdivl
or
std
dec
loopne
dec
mov
or
imul
daa
lcall
push
sbb
ja
int
pop
into
inc
pop
fs
stos
ds
adc
pop
loopne
inc
jb
jne
or
or
inc
jo,pn
out
andb
cmp
loope
pop
pop
pop
mov
dec
add
xor
pop
repnz
mov
pop
inc
aad
cmpsl
out
and
loope
push
xchg
sbb
dec
incl
mov
int3
test
pusha
cld
push
mov
sub
lret
inc
loopne
fdivr
icebp
cmp
pop
sahf
pop
mov
data16
scas
jp
cwtl
pop
mov
outsb
imul
xchg
mov
xchg
jo
dec
in
xchg
pop
aam
addr16
dec
push
icebp
addb
stos
xchg
mov
sbb
filds
push
mov
inc
shrb
mov
popa
int
stos
test
adc
jbe
adc
in
dec
or
imul
inc
xchg
mov
mov
fstpt
or
add
idiv
aaa
and
mov
loope
mov
lds
lcall
dec
mov
movsb
adc
xchg
push
or
mov
loop
xor
jne
adc
jbe
rcrl
lods
pop
mov
repz
movsb
sub
ret
loop
inc
jns
ss
cmp
imul
adc
xor
xor
and
cs
mov
mov
inc
add
sbb
imull
test
dec
aaa
jg
dec
dec
fldcw
aaa
insl
dec
cmpsl
mov
push
out
pop
mov
push
lcall
repz
pop
adc
insb
mov
pusha
repz
popf
and
idivb
push
out
pop
push
pushf
jmp
dec
push
jecxz
jo
inc
push
inc
mov
cmp
out
addl
stc
and
mov
push
js
imul
rolb
ss
cmp
or
mov
mov
inc
add
cmc
push
stos
fistl
xlat
xor
loopne
ljmp
test
in
jbe
mov
imul
ljmp
sti
sarb
mov
stos
lret
stc
cmp
cld
enter
and
subl
ljmp
gs
dec
jge
jae
sbb
lahf
sbb
xor
cmp
nop
pop
or
call
cmp
push
popa
pop
or
pop
mov
scas
ret
inc
and
rcr
fisttpll
mov
repnz
xor
mov
mov
mov
jg,pn
xchg
pop
outsb
adc
int3
cltd
mov
and
xchg
mov
incl
push
insb
dec
adc
out
insb
je
ja
lret
outsl
fimuls
dec
push
or
ljmp
sub
out
repnz
or
lahf
mov
jno
nop
aam
mov
arpl
pop
jno
mov
inc
fwait
int
push
ret
mov
stos
mov
sub
pop
xchg
jns
xor
push
call
xchg
cld
addl
pushf
or
add
sahf
es
inc
push
bound
pop
sub
xchg
fisubs
cld
pop
fdivp
fadds
sti
inc
sbb
push
cmp
or
push
ficomps
mov
scas
cld
aaa
cmp
jg
mov
push
incb
icebp
outsl
and
das
mov
xor
dec
pop
jbe
dec
call
pop
dec
roll
sbb
shrb
mov
fcompl
ds
lds
out
add
repz
mov
enter
inc
pusha
mov
mov
inc
xor
xchg
shll
dec
ret
sti
sbb
ljmp
loop
in
push
xor
mov
int
mov
mov
mov
push
sbb
cmp
leave
pop
inc
dec
andl
push
push
fnsave
jecxz
push
sub
cmc
xor
pusha
xchg
and
jmp
sbb
sti
es
add
sub
imul
cld
stos
call
jle
sbb
arpl
addr16
pop
push
and
shl
or
mov
inc
dec
data16
pop
insb
push
cs
sub
pop
mov
adc
orb
aam
and
jae
cmpb
ds
scas
xchg
adc
int3
push
sahf
shlb
lret
out
mov
xor
inc
vxorps
and
outsb
sbb
mov
sub
cmp
jbe
pop
adc
add
jb
adc
out
cmpsl
adc
push
in
jae
mov
ja
cmp
jb
xor
push
sub
dec
clc
or
cmpsb
pop
daa
sub
jg
xlat
xchg
jno
xchg
mov
xchg
xlat
adc
push
pop
xlat
fxch
lcall
repz
mov
dec
push
sbb
in
mov
dec
jmp
mov
push
xor
fisubs
shll
insb
shlb
in
jne
movsb
cltd
clc
mov
fisubrl
stos
mov
outsb
popa
cmpb
test
movsb
and
scas
lret
push
std
leave
cmp
jecxz
pop
jge
sub
ficompl
pop
mov
into
fistpl
out
mov
adc
pop
out
mov
scas
mov
push
add
addr16
jmp
ror
mov
int3
fbld
cmp
out
xor
out
mov
xlat
adc
outsb
mov
pop
jp
inc
cli
mov
jns
sar
mov
add
pop
add
outsl
int
cltd
hlt
inc
out
xchg
inc
or
daa
repz
js
push
dec
pop
mov
lds
lock
ror
jmp
xor
inc
fs
call
out
inc
inc
and
pop
jae
ret
in
fcom
jl
push
adc
xchg
mov
mov
xor
mov
mov
es
mov
dec
ror
push
inc
addr16
jle
fisubrl
mov
jmp
inc
dec
dec
lock
sub
mov
mov
idivl
jnp
cmp
push
lret
pusha
fs
call
and
and
dec
fimuls
out
pop
xor
jae
cmp
and
or
out
ja
mov
insb
or
mov
mov
xorb
xlat
scas
fwait
xchg
xor
xchg
mov
adc
sub
jmp
push
push
jle
jne
in
dec
xor
mov
sbb
lcall
imull
shl
mov
es
xchg
popa
dec
mov
test
jp
popf
or
nop
and
sbb
sub
dec
fwait
out
dec
mov
push
cmp
sbb
rorb
call
rcl
mov
and
adc
jl
dec
jp
data16
out
fisttpl
mov
add
es
aad
xchg
ds
mov
push
in
arpl
cmp
loop
mov
inc
mov
sbb
outsb
fisubs
cmp
xchg
imul
aam
xchg
push
cltd
fdivs
inc
imul
movsl
xchg
stc
cmpsb
jb
test
jl
sbb
jmp
rcl
xchg
test
fwait
or
mov
out
xor
adc
push
fidivs
dec
stc
test
loop
inc
cmp
ss
mov
inc
movsw
cld
cmp
cmpsl
lock
insb
pop
mov
pop
mov
fucomip
xchg
xchg
adc
mov
push
mov
lods
movsb
xchg
jns
xchg
imul
movsl
mov
sbb
cmp
negl
inc
fistps
aas
add
test
cmc
mov
cmp
jo
aas
sbb
ds
loop
test
leave
mov
mov
mov
leave
cmp
xchg
cmpsb
rcl
jl
es
push
or
out
sub
dec
adc
mov
lds
imul
mov
cmp
aaa
mov
fcompl
cmp
inc
lea
loop
jno
out
int3
or
adc
std
outsl
mull
pop
push
imul
mov
pop
push
xchg
loopne
in
add
xchg
add
inc
aas
aam
mov
sbb
orl
popf
xchg
or
and
stos
inc
xor
cmpsb
sub
mov
subl
push
mov
sub
mov
sbb
jb
xor
inc
jp
jns
into
test
pop
xchg
int
ss
lds
scas
pop
add
mov
adc
sub
outsl
outsl
outsl
pushf
shlb
out
mov
jae
jmp
fstps
inc
xchg
push
les
mov
mov
sti
dec
fs
push
lret
xor
sbb
mov
std
nop
das
cmp
std
mov
iret
jno
cmc
icebp
mov
mov
mov
push
push
jle
call
mov
push
mov
inc
les
adc
push
idiv
or
or
lcall
lret
mov
inc
xchg
hlt
sbb
sub
sbb
sub
das
test
push
mov
les
into
mov
loopne
add
xchg
data16
in
jno
je
fld1
mov
int
sbb
int3
cs
rclb
dec
xchg
adc
dec
orb
ja
cs
dec
push
out
fnstsw
scas
inc
iret
xor
test
xchg
std
cmp
les
mov
inc
icebp
and
stos
cmpsl
testl
pushf
popf
xchg
jecxz
add
cmp
hlt
cmp
sub
lock
push
mov
inc
bound
xor
gs
je
repnz
cltd
movsl
in
push
adc
pop
mov
rcrl
pusha
ret
dec
lds
insb
ss
in
mov
sub
add
jnp
ds
or
mov
sub
lea
mov
ret
dec
outsb
cwtl
std
cmp
pop
fucomi
scas
outsl
xlat
sub
mov
pop
xchg
xor
sbb
js
clc
inc
mov
pusha
mov
or
pop
xchg
mov
sub
mov
pusha
sbb
xchg
jl
fcoml
rorb
out
nopl
sub
repnz
sbbl
sub
lods
inc
xchg
fsub
mov
push
mov
mov
jb
insl
out
clc
dec
leave
lahf
jnp
stc
addr16
push
dec
outsb
inc
gs
xor
daa
pop
idivb
lahf
push
push
sub
adc
ficoms
testb
incl
xor
jge
cmpl
fidivrl
adc
ljmp
fnstcw
and
or
out
xor
sub
mov
pop
lea
clc
and
jae
test
inc
loope
and
fwait
xchg
xchg
mov
mov
cmp
pop
stos
lock
pop
out
push
les
daa
call
cmp
leave
mov
and
jb
xchg
cmp
sub
push
sub
insl
push
xor
dec
sub
test
pop
fdivp
cmp
popl
lcall
cmp
adc
ljmp
push
cmp
jnp
jns
push
lahf
in
adc
dec
sahf
xchg
jae
xor
mov
or
int
pop
call
dec
nop
dec
push
sbb
xchg
xchg
sahf
cmpsl
dec
daa
idivb
cmp
push
leave
pop
in
idivl
pop
jne
imul
subl
je
sbb
sbb
nop
arpl
fists
mov
sar
or
arpl
cmp
cld
in
push
pop
adc
or
test
xchg
dec
test
or
lcall
sub
xchg
sbb
inc
push
cmp
inc
inc
aaa
lock
fsubrp
inc
add
add
jne
cmpb
mov
dec
sub
sarb
push
std
ss
mov
mov
sub
add
mov
hlt
ds
pop
nop
mov
add
aas
fdivrp
xchg
cmc
gs
adc
mov
clc
jmp
sub
xor
repz
push
es
mov
cld
shrb
insl
out
data16
fcompl
sbb
sub
xlat
pusha
aas
sub
sbb
sub
je
adc
xor
pushf
fldenv
pushf
mov
push
movsb
push
sbb
lds
dec
dec
sahf
imul
cltd
aam
push
insl
pusha
lret
mov
mov
bound
pop
jno
insb
ds
mulb
lds
cwtl
fimull
scas
mov
push
adc
jecxz
mov
pop
push
xor
insb
sti
pusha
mov
out
lods
cli
push
xchg
sbb
xchg
adc
inc
xor
movsl
lock
outsl
xchg
mov
pop
mov
mov
xor
sub
add
testb
das
pop
mov
stos
lcall
fnstcw
cmpsl
lock
cli
or
int3
cmp
leave
sti
hlt
out
push
mov
dec
or
pushf
sarl
push
sbb
lcall
or
call
mov
inc
scas
cmpsl
adc
cmpsb
iret
pop
subl
dec
ret
cmp
xchg
popa
cltd
dec
bound
xchg
mov
in
movsl
mov
sub
dec
out
pop
fidivrl
pop
mov
pop
es
mov
sub
xchg
sub
test
sbb
insb
movsl
popa
adc
mov
push
lds
leave
fucomi
sbb
dec
arpl
fsubr
shll
push
mov
cmpsl
out
lods
push
gs
pop
and
xchg
gs
int3
stc
loop
sbb
dec
mov
and
imul
dec
stos
pop
sub
mov
jb
jp
call
int3
jecxz
sub
mov
and
push
fisubrs
xor
insl
push
gs
ficoml
pop
push
and
pop
xor
cmovns
lahf
pushf
add
push
loopne
ja
mov
xlat
stos
icebp
mov
aam
mov
int
or
shll
jne
xor
arpl
push
notl
lret
mov
insl
test
out
jmp
xchg
lahf
mov
and
jae
rcrb
pop
icebp
enter
adc
and
pop
push
jbe
rcl
dec
lahf
repz
xchg
mov
int
xchg
xor
jg
dec
push
out
xor
jg
outsb
test
mov
popf
xor
add
xchg
mov
cs
mov
xchg
aad
lods
bnd
push
jecxz
imul
ret
sbb
inc
inc
aaa
or
and
push
out
pop
je
pusha
scas
cmp
xchg
sub
shll
js
and
in
xor
xor
xchg
cmp
push
pop
adc
bound
daa
and
add
and
sub
notl
jecxz
mov
das
sarl
rorl
push
dec
mov
xchg
inc
pop
repnz
push
mov
cwtl
loopne
cli
fistl
mov
pmulhw
fsubl
cld
cld
test
xor
pop
mov
mov
pushf
fisubs
xchg
ja
mov
cwtl
fdiv
and
mov
mov
jp
jmp
mov
cmpsb
fidivs
jp
test
js
out
cmp
cmpsl
push
adc
pop
adc
ja
fcomp
jg
inc
add
or
fcoml
aaa
xchg
push
dec
ljmp
sub
push
sub
cmc
cld
cltd
push
dec
lock
sbb
jbe
mov
or
loope
or
xchg
arpl
decl
addr16
add
shl
jo
push
jno
cwtl
loope
adc
es
and
jecxz
mov
pop
mov
jle
mov
sahf
xchg
ljmp
sbb
inc
mov
add
push
xlat
scas
xor
xor
cmp
addps
mov
mov
lock
push
xor
cmp
xor
mov
cwtl
aad
ljmp
stc
fwait
or
sub
jae
or
jle
lock
lret
jnp
lds
popa
adc
lea
xchg
xorb
cmpl
xor
push
aad
dec
ss
xchg
cld
sbb
insb
enter
movsb
push
or
sysret
test
push
in
xchg
out
jp
mov
sbb
push
and
aas
shlb
cli
leave
xor
ret
lds
movsb
bound
rcl
fcoms
push
mov
pop
push
les
dec
mov
mov
cmp
lcall
xchg
lea
push
adcl
add
fisttpll
imul
lcall
lock
sbb
inc
jo
movsb
out
out
push
addr16
pop
daa
leave
pop
inc
pop
jecxz
dec
andb
addr16
jmp
mov
loope
xchg
and
jmp
adc
jecxz
pop
push
dec
rol
or
jne
scas
add
fcoms
push
fmulp
in
push
enter
jl
mov
in
and
in
add
jp
jle
test
out
mov
jg
jp
scas
pop
dec
andb
pop
cmp
cmc
mov
ret
fstl
jbe
subb
push
cmp
jb
mov
outsb
mov
insb
loope
mov
pop
addb
into
pop
js
dec
ret
fidivrl
adc
sbb
inc
lahf
inc
and
xor
cmpsl
out
xor
mov
sbb
inc
jo
sldt
xor
jp
mov
movb
xchg
addb
fimull
dec
ja
pushl
shlb
xchg
push
mov
cmpsl
push
jle
mov
int3
jno
notb
push
xchg
xchg
arpl
and
sbb
mov
pop
cmp
push
in
inc
jecxz
dec
mov
rorl
add
xor
in
daa
mov
fcomps
cmpsb
dec
cmp
sbb
popf
adc
cmp
mov
sar
or
loop
rclb
lret
ds
ljmp
and
leave
icebp
cmp
shll
outsb
and
adc
cmpsb
adc
xor
mov
jno
loop
mov
iret
mov
hlt
dec
or
imul
mov
xorb
sti
push
iret
sbb
fcomps
cmc
adc
cmp
mov
add
inc
inc
pop
cs
xchg
cmp
cmpsl
sub
neg
pop
cld
push
push
mov
stos
notl
rcll
inc
xor
gs
je
jnp
repnz
ds
sti
sbb
add
jbe
stos
add
push
mov
stos
sar
ret
jno
jae
or
xchg
iret
add
sti
adc
pop
btc
test
dec
ficompl
add
cmpsb
push
lea
push
testl
loopne
lret
es
insl
rcrb
imul
fsubrl
mov
fwait
cli
rclb
imul
in
xor
xchg
jge
inc
or
js
mov
mov
jns
insb
in
shlb
pop
add
decl
sti
adc
out
mov
push
jb
add
lret
mov
mov
pop
pop
loopne
mov
pop
cmp
inc
ja
and
xorb
inc
mov
clc
mov
cld
daa
mov
sub
pop
ret
xor
inc
roll
lcall
mov
push
dec
test
mov
sbb
adc
idivl
sti
fnsave
fwait
mov
mov
loope
adc
bound
mov
fwait
clc
out
push
xlat
mov
cmp
loope
scas
lock
pop
mov
cmpsb
adc
jmp
iret
pop
pop
pop
enter
leave
mulb
clc
sbb
push
add
enter
cmp
adc
cmp
cmp
sahf
fidivs
fisttpl
in
jne
dec
call
sarb
mov
and
rcrb
xor
dec
jbe
mov
popa
loop
mov
lcall
pushf
lock
xchg
dec
cmc
fdivs
aas
dec
subb
ret
xchg
stos
adc
lea
xor
pop
sub
mov
sbb
in
xchg
mov
sub
inc
repnz
cmp
fwait
adc
jo
jmp
gs
into
aam
mov
xor
loope
add
les
mov
push
cmp
jle
insb
or
das
jmp
and
sub
and
jmp
sbb
sbb
fsubs
pusha
sahf
imul
stos
dec
sub
test
repnz
xchg
jbe
jecxz
sti
mul
sahf
into
mov
dec
idivb
cmpsb
dec
push
pop
lea
jl
jo,pn
cltd
cmpsl
out
ret
divl
add
cld
addl
mull
out
cmp
sbb
daa
mov
push
enter
inc
aas
push
lea
inc
icebp
xor
ficompl
inc
xchg
nop
les
or
pop
xchg
mov
jnp
mov
lcall
fs
repz
daa
loop
jnp
jnp
pop
ljmp
mov
jno
imul
sub
nop
movsl
loope
test
mov
jl
or
xorb
inc
mov
cmp
adc
repnz
sbb
sahf
cmp
sbb
push
rorl
int3
mov
pop
addr16
mov
mov
mov
and
insb
mov
cmpsb
mov
pop
inc
jns
loopne
insb
inc
push
dec
sarl
sub
mov
cltd
shll
or
aas
mov
daa
pop
add
xor
pop
hlt
xchg
in
add
add
imul
add
subl
jae
mov
fisubrl
into
cmpsb
jbe
leave
mov
cwtl
mov
fdivr
inc
push
jle
lahf
mov
or
js
nop
mov
xchg
jb
pop
pop
mov
shll
or
sar
dec
mov
pushf
mov
sti
ja
in
movsl
pushf
stc
cs
cmp
jp
sbb
fcmovne
xchg
push
movsl
inc
ret
daa
ja
xchg
imull
lods
inc
cmc
jno
mov
in
mov
dec
add
mov
in
flds
aad
sbb
sub
pop
sbb
fbld
mov
and
mov
stc
jge
or
ret
aam
and
jl
data16
out
jb
pop
mov
movsb
jmp
ret
hlt
repnz
pushl
sbb
adc
outsb
sbb
addb
mov
push
arpl
js
xor
fdiv
mov
movsl
dec
sahf
cmp
mov
push
and
cmp
je
mov
push
lods
sbbb
push
repnz
imull
jnp
mov
cltd
clc
or
mov
dec
sub
cmpsb
lss
fs
xchg
gs
sub
ljmp
arpl
push
inc
rcrb
aad
add
lcall
std
movsb
loop
clc
push
jns
out
repz
xor
dec
xchg
ss
shl
xchg
cmc
daa
enter
iret
xchg
jb
xor
repz
test
loop
cs
cmp
scas
jmp
fwait
mov
scas
or
outsb
jl
or
dec
insb
cmp
mov
imul
and
orl
cmpsl
hlt
mov
cmp
mov
push
or
outsb
fcoml
xchg
sub
xlat
sub
and
rorb
xchg
sub
or
sbb
movsl
repz
inc
xchg
mov
sbb
ja
ljmp
mov
mov
sahf
and
cmp
xchg
mov
outsb
inc
and
push
sub
scas
pop
repz
fdiv
sbb
loop
push
pop
cld
add
sti
lahf
sub
aad
loopne
xchg
cmpsl
sti
push
inc
pop
fs
sbbb
cmp
fnstcw
mov
lods
push
ds
mov
lgs
jo
adcl
xchg
cmpsl
sub
push
inc
push
sbb
xor
lcall
lret
push
das
ss
mov
paddw
je
sbb
fsubrp
mov
repnz
mov
lods
dec
jle
mov
in
or
xchg
js
pop
adc
fs
xchg
push
mov
pop
cmp
scas
rcr
cmp
xchg
adc
or
stos
push
cmp
jmp
je
add
into
and
into
in
pop
lds
imul
cmp
cmp
mov
fiadds
hlt
jb
mov
in
shrl
xor
xchg
fdivr
push
fstp
mov
sub
adcl
lea
lods
pushf
mov
add
inc
push
mov
repnz
xchg
clc
in
icebp
ficomps
push
mov
pusha
mov
adc
cli
sub
adc
xor
xlat
inc
out
mov
imul
xchg
dec
cmc
cwtl
or
jecxz
sbb
jb
aad
sub
test
mov
pop
clc
inc
sub
pop
hlt
pop
mov
xor
pop
in
mov
lea
sub
mov
outsl
test
nop
aas
dec
data16
cmp
loope
add
les
loop
or
shll
ljmp
add
into
int3
sbb
pop
mov
push
inc
pusha
or
in
hlt
cli
mov
adc
sbb
movsl
pop
dec
jno
adc
cld
call
push
jb
lcall
sbb
ja
std
das
test
out
or
add
aad
mov
arpl
sti
xor
mov
cmp
dec
dec
xor
inc
inc
imul
adc
addr16
sub
int3
mov
mov
pusha
push
jmp
xor
inc
nop
mov
mov
cmp
int
mov
jle
mov
test
aaa
nop
int
push
cmp
std
lcall
xchg
sub
xor
decl
push
bound
and
int3
mov
aam
pop
sub
dec
adc
dec
cmpsb
dec
mov
stos
stos
ljmp
mov
push
pop
lret
outsb
and
mov
dec
es
out
rolb
sarl
int3
mov
mov
xchg
out
sub
mov
cwtl
inc
add
adc
lahf
sbb
jb
push
mov
push
popa
jp
mov
stos
dec
loope
ret
dec
xchg
out
xor
popf
pop
mov
jae
lods
mov
add
fdivrs
je
cld
fcmovb
fsts
push
adc
sub
sbb
sarb
or
mov
xor
lock
dec
cmc
aam
ret
in
mov
or
dec
sub
and
push
mov
ljmp
pushf
insb
les
sbb
pop
sub
cmp
push
sub
adc
mov
sbb
pop
mov
out
addr16
and
lahf
ljmp
enter
jne
cmp
jnp
or
das
outsl
push
test
stos
addr16
imul
inc
int3
jge
sbb
push
jmp
nop
jbe
pop
pop
rorl
jecxz
mov
mov
cmp
mov
fsubl
roll
mov
data16
mov
sbb
leave
psubd
xchg
lea
push
int
cmp
cmp
inc
jl
mov
jne
test
or
cwtl
jmp
xchg
mov
mov
call
sub
out
cld
ljmp
mov
dec
fsubrl
shr
dec
jmp
jp
aaa
sar
inc
dec
into
jmp
jns
lock
mov
imul
test
sub
inc
ss
cs
mov
push
dec
xchg
addr16
mov
mov
popa
test
xchg
fwait
xchg
xor
stos
jns
std
jg
pop
and
inc
jb
mov
xchg
push
out
popa
ret
rcrb
fists
xchg
fcoml
enter
insb
orl
pop
push
push
cltd
ja
aaa
jmp
and
nop
mov
lods
push
int
push
icebp
inc
cmpsl
sbb
decl
rclb
lret
fisubs
pop
sbb
jmp
cmpb
insl
or
mov
cld
test
arpl
xchg
enter
or
in
mov
test
dec
leave
ja
sub
mov
testb
in
in
xchg
insl
mov
mov
fists
xorb
adc
and
imul
popa
sbb
xchg
or
mov
lahf
jmp
xchg
ss
mov
sub
and
rorl
sbb
xor
push
call
lea
iret
nop
fs
xlat
nop
fxch
jp
out
add
fucom
sub
lahf
sbb
mov
sti
inc
into
cmp
add
pop
shl
int3
inc
inc
rcll
sbb
mov
mov
mov
lahf
sub
cmp
mov
pop
dec
xchg
shlb
incl
repnz
sub
hlt
mov
dec
jp
push
or
mov
or
fsubrp
xor
arpl
adc
adc
xor
imul
pop
cmpsl
popf
cmp
push
push
out
pmuludq
testl
ret
push
pop
mov
ja
inc
add
and
adc
arpl
add
dec
mov
mov
pushf
cmp
mulb
es
jp
leave
jbe
jmp
aaa
add
gs
sub
negl
dec
adc
fistps
cmpsl
ja
xchg
xor
ret
cmc
and
mov
pop
out
aas
add
jg
ss
pop
insb
adc
adcl
pop
ds
sbb
arpl
push
in
pop
xchg
jmp
fdivp
fiadds
cwtl
cmp
pop
popf
sbb
add
xchg
push
lea
sbb
into
mov
xchg
repnz
cwtl
jmp
jl
dec
loope
push
leave
daa
lods
mov
insb
sub
aaa
cmp
std
in
inc
cmc
out
mov
xchg
shl
sub
sub
and
enter
nop
push
sub
in
cli
repz
aam
xor
add
clc
sbb
mov
iret
jnp
pop
sbb
hlt
daa
and
fldl
push
or
or
popa
mov
adc
cmp
outsb
mov
cmp
xchg
mov
insb
cltd
sub
jae
aaa
ds
pop
or
push
push
mov
mov
mov
jns
cmpsb
cmc
xor
push
xchg
stos
out
mov
jg
jg
cmpsb
jge
mov
pop
push
and
jle
sub
pop
and
sub
inc
mov
cmpsb
xchg
mov
nop
test
dec
adc
ja
cmp
push
jmp
ss
mov
das
add
out
ret
sarl
cmp
test
rclb
mov
in
mov
aam
data16
and
test
mov
adc
mov
sti
or
jne
sub
pop
push
test
nop
inc
int
fldl
aas
shrl
xchg
mov
pop
push
pop
pop
aaa
lahf
jno
push
insl
mov
scas
or
cmp
dec
or
nop
mov
xchg
xchg
pop
dec
insb
rcrb
mov
lahf
loop
lock
out
rolb
xchg
jle
add
inc
xchg
and
sbb
cmpsb
ss
push
jb
lods
loope
aaa
jbe
push
cmc
mov
shrb
xlat
mov
andl
popl
push
hlt
mov
shr
pushf
negb
in
in
out
pop
loope
stc
mov
rol
outsb
cwtl
add
cltd
ret
jo
sahf
shr
push
fsqrt
and
sbb
push
xor
mov
out
call
push
fs
and
ss
subl
adc
mov
mov
call
mov
mov
dec
and
push
add
jns
loop
mov
mov
loope
fcomp
xor
aas
outsl
lcall
inc
pop
jno
jbe
clc
mov
cli
jns
faddl
int
dec
in
jb
mov
and
mov
adc
arpl
mov
mov
inc
addr16
js
daa
pop
lods
imul
mov
addr16
insl
fcmovnu
leave
pop
mov
imull
push
pop
cmpsb
into
xchg
mov
popf
js
in
jge
test
lret
iret
std
pop
addr16
int
insb
pop
fildll
dec
jne,pt
cli
sbb
stos
rcrl
ret
mov
jp
sub
cmpsl
mov
ljmp
js
or
push
adc
ret
sbb
lret
shrb
push
in
lret
pop
jp
pop
lds
xchg
shll
lea
shrb
in
mov
imul
or
and
call
cmpsl
xchg
pop
xor
sub
xorb
setle
fwait
std
arpl
jne
int3
daa
fwait
mov
xlat
mov
and
xchg
jmp
mov
dec
jnp
jb
popf
iret
loopne
sub
cmp
je
adc
add
push
sahf
pop
dec
fisttpll
arpl
loope
fsub
subl
dec
pop
pop
push
mov
sbb
outsl
icebp
cltd
fnstsw
call
shll
ret
outsl
jmp
add
js
jae
mov
adc
inc
cltd
sub
aas
rcll
add
add
and
mov
mov
mov
push
movntps
jo
dec
jae
push
push
fcmovnbe
cmpsl
xchg
cmpsb
add
ret
js
jl
mov
mov
and
mov
add
in
jne
pop
aas
add
xchg
or
aam
loopne
sub
or
add
xor
ficomps
and
mov
out
stos
and
jmp
sbb
fimull
xor
pop
int
jmp
mov
push
sbb
addr16
dec
or
mov
lret
xchg
or
test
mov
cld
insb
mov
or
roll
in
sahf
cmp
mov
mov
cs
scas
lock
fldl
add
add
or
jbe
cmc
stos
adc
fisubrl
add
sub
rcl
sub
adc
cmp
ljmp
lcall
mov
mov
dec
dec
adc
mov
cmp
data16
in
jecxz
dec
sbb
fcompl
mov
cld
mov
and
mov
jne
cltd
or
sbb
in
aam
movsb
dec
xchg
push
data16
pop
sbb
test
clc
add
sbb
pushf
insb
xor
mov
in
cltd
nop
mov
int3
add
aad
xor
cwtl
sub
insb
dec
cwtl
data16
shlb
popa
out
mov
xor
shl
insb
lahf
dec
mov
inc
jg
jbe
and
pop
pop
xor
leave
fstl
loop
jp
mov
aas
and
push
les
dec
mov
inc
fcmovne
xor
sbb
inc
push
sub
test
jo
and
rorl
je
xchg
jb
inc
lret
and
push
adc
mov
idiv
insl
jb
in
out
cmp
imul
pop
rcrb
jl
and
sbb
negb
rcr
jmp
popf
outsb
mov
fsts
mov
dec
or
dec
lcall
cmpsb
cltd
sbb
jmp
lods
push
jmp
push
pop
or
mov
int3
stos
jg
sbbb
js
sbb
ss
outsb
dec
icebp
lret
jo
mov
mov
popa
or
out
sbb
xor
add
xor
flds
jge
int3
out
out
mov
jp
fs
pop
roll
xor
cli
js
data16
cmp
mov
xchg
pop
jmp
fsubrl
lahf
or
fistps
fcmovne
sbb
adc
push
and
pop
push
mov
mov
pop
ret
lds
ret
addl
cmp
xchg
xor
xchg
push
xchg
mov
xchg
test
jb
in
xor
push
out
cmpsl
stos
xor
dec
ja
mov
test
idivl
test
jg
sub
or
aas
cli
daa
xchg
or
sbb
lahf
fs
scas
fcomi
addr16
push
lea
sbb
sbb
and
movsb
cld
xchg
xchg
cmp
or
repnz
xor
lret
sbb
into
xchg
lods
punpckhdq
sbb
xchg
mov
and
ds
std
fldl
mov
cmp
mov
insb
pop
mov
add
push
mov
pushf
mov
or
mov
inc
xchg
adc
mov
jbe
inc
push
fs
push
cltd
or
inc
jno
bound
shrb
faddl
pop
test
or
test
je
inc
mov
lods
jns
jne
add
fistpl
shll
sbb
pop
mull
imul
jp
xor
les
mov
inc
jno
sub
dec
add
sbbl
xor
adc
and
mov
xchg
push
mov
add
xor
sti
push
push
mov
stos
loopne
or
cli
pop
fstpl
aaa
cltd
leave
add
sbb
pop
popf
movsb
popa
xchg
cmp
dec
cwtl
ss
inc
fsincos
inc
cmpb
dec
out
jnp
stos
adc
ret
pop
jbe
icebp
test
lea
pop
mov
push
xchg
push
fsubr
aad
mov
hlt
scas
clc
jmp
shlb
aad
mov
xchg
mov
dec
jne
push
and
addb
sbb
jbe
fbld
nop
jae
hlt
add
jecxz
bound
nop
pop
jmp
pop
and
aad
jo
cs
mov
clc
mov
out
inc
lret
in
dec
js
push
popa
fisubrl
out
cmp
jecxz,pn
adc
fsts
push
push
dec
mov
test
lar
dec
outsb
in
sbb
mov
xor
cmp
jl
imul
movb
cmc
add
cmpl
xlat
stos
fldpi
mov
sbb
xorl
jecxz
cmp
or
pop
popa
mov
and
faddl
leave
push
pop
repz
cltd
in
xchg
in
in
mov
shl
push
nop
ljmp
xchg
mov
fldt
xorl
lods
loopne
lret
insl
aad
mov
sbb
andl
push
sbb
xchg
les
add
je
xor
cmp
pop
cmp
or
adc
gs
jmp
shlb
and
cmc
push
fadds
outsl
movsb
cli
lret
jb
fisttps
mov
imul
xchg
or
jg
loope
pusha
mov
addr16
scas
dec
pusha
call
int3
out
cmpsb
int
dec
fsts
icebp
lea
popf
in
call
imul
out
arpl
je
pop
or
add
sub
decb
push
or
ret
or
and
mov
sbb
fisubl
insl
fwait
test
inc
outsl
push
sbb
pop
out
jmp
in
mov
jb
daa
imul
decb
divb
xlat
iret
mov
repz
pop
mov
jmp
pusha
daa
mov
push
dec
mov
daa
popa
pop
dec
mov
inc
or
xlat
jno
out
lds
imul
push
sahf
xchg
mov
jl
fisttpl
test
jnp
pop
pop
inc
out
incl
lds
dec
push
sbb
ss
mov
pushf
int3
mov
cmp
sub
icebp
dec
js
jo
push
and
pusha
dec
sbb
popf
cmc
pop
cmp
rclb
mov
mov
cmpsl
mov
stc
pushf
in
das
add
sbb
out
xlat
es
jns
adc
aad
leave
jge
cli
pop
jmp
adc
outsl
pop
sub
das
lret
jmp
xlat
xchg
imul
cmp
xchg
jg
mov
jecxz
fwait
xor
lcall
mov
push
sub
sbb
es
jp
outsb
push
fimull
and
imul
sub
or
movsl
push
pop
sbb
stos
dec
push
mov
jbe
jo
arpl
fisttps
pop
mov
fsubrp
mov
add
lret
orb
inc
cwtl
sarb
lock
or
loope
mov
push
jl
mov
xchg
push
sti
hlt
or
mov
lds
je
je
xchg
dec
lods
arpl
jmp
or
js
repz
movsl
cltd
xchg
iret
cs
cmpsb
insb
and
gs
in
sub
cmp
push
shl
mov
xlat
sbb
roll
fnsave
es
dec
jecxz
push
popa
imul
xchg
cmpl
cmp
repz
in
sub
xor
out
loope
dec
je
sti
add
push
lahf
rcr
mov
stos
xor
xor
cmc
mov
mov
adc
mov
js
adcb
jns
sbb
js
insl
insl
mov
ds
rolb
dec
xchg
scas
push
pmaxub
loope
iret
fwait
ret
loopne
and
cmp
mov
cltd
insl
and
push
pop
or
ss
icebp
jnp
sbb
or
subl
jnp
out
es
leave
cmp
mov
inc
mov
dec
cmp
cmp
fwait
in
xchg
jno
clc
mov
out
scas
test
pushf
pop
scas
test
test
push
testb
mov
xor
pop
dec
push
pop
push
out
in
aad
or
test
mov
outsl
sub
dec
lods
push
je
cs
pop
out
mov
dec
add
rclb
add
imul
outsb
mov
mov
sbb
ds
mov
popa
jecxz
jne
rolb
cmp
addr16
cmp
fucomip
fcompl
pop
rolb
loopne
inc
decl
adcl
divl
fisubrl
jge
xor
pop
mov
adc
jecxz
mov
rcrl
push
aaa
mov
popa
mov
lods
mov
jbe
jnp
stos
jnp
jnp
adc
out
lahf
ds
leave
aad
adc
inc
dec
scas
push
fldl
out
ljmp
ret
and
mov
mov
or
pop
je
add
adc
jbe
lahf
jmp
fstps
xchg
lock
xchg
ret
imul
pop
jmp
ljmp
fisubrl
in
test
jg
pop
test
xchg
or
sub
jo
jmp
mov
jbe
mov
pop
adc
aaa
pop
out
ret
lcall
sub
or
xor
stos
add
fwait
call
mov
shrl
je
fsubs
jl
cld
add
push
sub
cltd
lods
data16
clc
pop
or
fs
test
sub
mov
inc
sub
lcall
test
pop
sub
aas
mov
fwait
bound
mov
push
popf
stos
mov
xchg
rol
loop
fcomip
pop
add
js
mov
or
test
into
sbb
inc
in
mov
mov
es
xlat
sub
sub
jb,pn
jnp
pop
stos
push
stos
mov
adc
lock
scas
ljmp
xor
pop
out
sub
aad
adcl
xlat
and
popa
ret
adc
outsl
xchg
aad
jno
arpl
dec
adcl
xchg
outsl
xchg
arpl
xorb
mov
aaa
adc
xor
sub
jp
mov
mov
dec
sub
in
inc
cmp
icebp
fldt
mov
or
sbb
std
fsubs
pop
jne
outsb
and
xchg
dec
imul
mov
xor
lret
rclb
sbb
xor
or
outsb
test
addr16
outsl
outsb
xchg
cs
in
and
mov
mov
mov
enter
sti
aas
adc
mov
and
mov
adc
in
into
inc
cld
xchg
sub
lcall
mov
lods
fidivrl
jle
lahf
movsl
dec
jge
int3
mov
xchg
pop
adc
xor
pop
subl
fsubrs
iret
shlb
pop
mov
ret
fs
test
mov
sbb
jmp
aaa
cmp
stc
xchg
and
pushf
jge
xor
ljmp
pop
lret
mov
imul
cld
rcl
hlt
cs
add
scas
enter
pop
adc
lcall
mov
adc
add
lret
mov
inc
daa
dec
aaa
sub
add
or
out
fwait
jle
lcall
hlt
adc
xchg
sti
xor
popa
mov
pop
comiss
add
sahf
out
fs
and
pop
fstl
jmp
aam
or
lods
aad
dec
outsl
inc
mov
mov
int3
imull
jg
out
gs
inc
mov
rolb
flds
daa
and
mov
mov
lahf
bt
je
insl
aam
or
push
jnp
xchg
dec
dec
mov
call
cmp
pop
or
fcoml
mov
or
pop
mov
insl
xor
daa
mov
je
xorb
lcall
xor
ja
adc
cmc
div
mov
out
push
jb
mov
push
mov
jl
xchg
mov
imul
jbe
or
xor
push
push
jae
cmp
outsl
dec
es
addr16
add
or
popa
push
and
out
out
stos
adc
std
push
adc
xor
pop
sti
lods
mov
lods
pop
sbb
sbb
ss
je
cld
ja
fs
clc
subps
jno
dec
pop
cmc
inc
cmp
jnp
sarb
add
xor
mov
mov
mov
fxam
sahf
pop
in
jo
lock
popf
sbb
ffreep
repz
addr16
outsl
loope
ret
push
jmp
addr16
ret
xchg
mov
dec
aam
pushf
lret
ret
xor
into
out
or
fisttpl
popf
lea
dec
inc
add
jg
pop
imul
cld
fldcw
fnsave
rcrl
imul
xchg
dec
mov
mov
fldpi
hlt
incl
and
mov
outsb
adc
pusha
pop
mov
xchg
loope
mov
imul
ljmp
leave
cmp
in
lret
dec
ror
loop
rcll
pop
subb
fistpl
das
inc
fmull
jbe
mov
out
push
mov
dec
lea
sbb
in
add
cli
shll
jmp
sbb
and
inc
jecxz
jo
jle
call
jp
jb
xchg
stos
lock
movsl
es
inc
jno
stc
into
push
cmpsl
push
outsb
lahf
jmp
push
daa
call
jecxz
push
or
xchg
jmp
adc
cmp
out
pop
sub
mov
mov
in
movsb
jo
test
add
lahf
pop
sub
cmpsb
jp
mull
cmc
out
dec
push
clc
adc
sbb
pusha
sub
fsubs
pop
fidivl
mov
bound
push
out
repz
cltd
lret
inc
pop
sbb
lea
add
cmpsb
xchg
add
sbb
ss
inc
push
pop
jae
xor
aaa
inc
ret
mov
lea
xchg
dec
sbb
xchg
xchg
loope
je
jmp
dec
mov
popa
pusha
mov
rcr
or
scas
clc
push
sub
enter
loopne
or
add
rclb
add
cmpsl
test
add
fs
imul
fiaddl
jno
jne
mov
imul
sbb
push
jp
jg
mov
mov
mov
outsl
or
shrl
pop
pop
sub
lret
jg
pushf
inc
cmp
cmp
pushf
xchg
cltd
test
dec
cmpsb
push
mov
adc
pusha
dec
dec
dec
out
cltd
or
jno
push
jae
pusha
inc
fucom
clc
lret
ljmp
cmc
lahf
jmp
mov
fisubrl
setae
mov
or
jge
push
pop
js
mov
pop
enter
xchg
or
gs
pop
dec
push
adc
xor
stc
lds
insb
mov
pop
aaa
xlat
mov
adc
iret
dec
xor
bound
mov
mov
xlat
int3
and
adc
push
mov
mov
jecxz
add
mov
mov
inc
out
pop
pop
lcall
mov
popf
je
mov
xlat
in
sahf
sbb
add
loopne
jb
cs
cmp
xor
out
ret
outsl
mov
test
mov
and
idivb
mov
and
andl
jp
mov
sbb
call
int
fwait
push
inc
in
das
ds
pop
loope
daa
fidivl
xchg
popa
fistpll
inc
cmp
pop
daa
xor
adc
mov
pop
pusha
push
push
jo
fisubrl
mov
sbb
mov
std
cwtl
fstl
jnp
ss
or
fildl
lcall
out
pushf
mov
mov
mov
aam
mov
cwtl
aaa
int
pop
or
aad
insb
and
or
mov
out
sub
sub
lea
cli
lock
fs
mov
loope
or
sbb
lret
dec
jmp
cltd
jae
rcrb
scas
jle
in
dec
std
cli
cmc
ss
add
outsb
arpl
es
scas
sub
insl
mov
cld
ret
or
in
push
adc
jle
es
mov
and
shll
mov
sbb
add
in
out
popa
fstp
xlat
shll
rorl
or
ds
cmp
inc
mov
mov
decb
jl
aam
inc
ljmp
clc
dec
jle
mov
test
mov
cmpsb
jo
outsb
dec
movsl
shll
push
sbb
mov
add
xchg
mov
xor
arpl
xor
xchg
sub
mov
xchg
mov
into
mov
jp
decl
or
jbe
shll
in
sbb
pop
inc
or
cmp
popf
in
bnd
scas
mov
add
xchg
rep
xchg
int3
lahf
stos
push
mov
popl
insl
mov
xor
out
repnz
ja
xor
decl
leave
gs
inc
inc
and
bswap
gs
icebp
cltd
xor
stos
sbb
pop
cwtl
ffree
arpl
fstpl
push
imul
fldt
fidivrs
pop
stos
lahf
sbb
sbb
xchg
mov
dec
jg
ss
sub
dec
dec
inc
in
pop
push
xlat
fsubr
scas
and
nop
add
mov
xor
sbbb
es
leave
mov
jmp
cld
sbb
sbb
dec
cs
adc
pop
pop
nop
mov
fcompl
clc
ret
inc
pushf
test
in
xor
scas
push
fisubl
push
jle
pop
push
mov
in
cmpsl
jno
pop
iret
ret
popf
push
icebp
test
jo
outsb
xchg
push
dec
cld
loopne
mov
cs
sbb
lret
sub
push
stc
stos
mov
jecxz
inc
roll
sbb
call
mov
ja
pop
incb
adc
repnz
inc
std
daa
inc
add
push
in
pop
pusha
dec
xchg
andb
leave
push
sub
call
pop
popf
dec
mov
ja
push
lahf
sub
push
shl
dec
xor
leave
not
in
sahf
jecxz
xchg
lahf
loope
xchg
mov
mov
fwait
cmp
rcrl
pop
lret
scas
icebp
inc
jl
dec
out
mov
pop
jmp
in
scas
cs
inc
or
arpl
movl
pop
jne
cmp
jp
dec
pop
pop
mov
jae
mov
pop
inc
inc
sub
add
jno
das
dec
mov
jge
imul
dec
pop
add
jge
xchg
scas
fcmovu
jecxz
test
push
cltd
movsb
xchg
in
mov
roll
xchg
jns
xor
add
push
enter
lea
adc
sub
mov
lods
divl
sub
addb
aam
dec
test
mov
leave
pushf
decl
loope
js
pushf
shrb
jl,pt
pop
push
mov
popa
sbb
xor
xor
pop
push
pop
das
mov
lods
mov
scas
repz
gs
push
inc
outsb
in
mov
call
out
cwtl
into
or
xor
mov
jle
mov
mov
add
add
dec
pop
mov
mov
mov
dec
or
jo
cmp
mov
adc
jnp
dec
cmpsl
adc
std
mov
outsl
mov
cwtl
enter
add
push
dec
test
cmp
aad
fsubl
les
xchg
insb
jbe
sbb
jmp
lcall
mov
cmp
ss
daa
outsl
loop
testl
jb
inc
xchg
add
mov
in
lret
data16
aad
and
adc
icebp
inc
addr16
repz
mov
shlb
outsl
adc
rolb
mov
mov
aam
pushf
in
pop
js
push
subl
adc
xchg
out
in
xchg
mov
dec
xchg
jbe
jl
gs
mov
push
les
icebp
cmp
xchg
and
xor
push
mov
lods
leave
pusha
mov
aad
jmp
push
dec
aad
fs
pop
inc
stos
or
shlb
inc
mov
ss
in
mov
stos
int3
add
enter
or
lret
push
push
mov
inc
mov
jp
inc
or
cs
fidivl
or
in
fs
in
pop
mov
pop
jmp
push
in
loop
xchg
gs
jno
and
add
mov
mov
dec
adc
sbb
dec
daa
jbe
sbbb
js
sub
aam
flds
mov
ss
out
aas
data16
ret
daa
out
shrb
push
inc
imul
xchg
call
inc
cld
jg
mov
ret
mov
sub
pop
xor
enter
repnz
adc
shll
jecxz
mov
mov
fimuls
stos
pop
dec
lea
sub
test
mov
loope
das
or
jbe
lds
sub
out
dec
icebp
sub
sbb
andb
ds
rclb
daa
rorb
negl
stos
jns
pop
insl
rcrl
lret
dec
dec
mov
xor
and
inc
std
fnstcw
and
movsl
dec
pusha
ret
andb
neg
fwait
adc
jbe
inc
push
scas
pushf
or
shlb
fisubrs
jbe
inc
pop
loope
cmpsl
in
push
aaa
stos
sbbb
add
sub
sbb
xchg
cmp
repz
ret
xor
xchg
lahf
mov
add
shrl
cmp
add
pop
repnz
cmp
mov
xchg
shlb
cld
dec
inc
stc
mov
in
sbb
mov
in
jno
movsb
es
adc
test
nop
push
rclb
leave
cld
in
in
cmc
aas
test
ficoms
xchg
lret
sbb
sarl
cmp
movsl
in
push
pop
mov
pop
shrl
jno
lahf
arpl
hlt
sbb
fcmovnu
sbb
and
mov
cmp
push
nop
mov
das
pop
jno
pop
and
lea
inc
sub
fs
pop
hlt
mov
inc
lea
stos
test
enter
and
xchg
adc
push
xlat
jge
push
fwait
add
inc
sahf
out
das
pop
xor
loop
mov
movsb
and
std
daa
sbb
cwtl
xor
jge
clc
xor
andb
mov
es
fcomp
dec
mov
cmpsl
test
loope
ds
push
pop
test
inc
movsl
jg
cmp
adc
sbb
pusha
loop
dec
pop
add
mov
jo
inc
mov
movsl
loop
sbb
insb
or
xlat
or
sbb
jbe
imul
jmp
add
test
loopew
push
imul
je
rclb
mov
dec
roll
pop
fnstcw
and
ret
outsb
cli
pop
es
or
mov
xchg
mov
hlt
xor
adc
pushf
mov
test
jg
xchg
les
jecxz
cmp
enter
out
pop
inc
test
cli
hlt
pop
inc
shl
push
cmp
xchg
gs
lea
sbb
sbb
iret
loope
cmpsb
pop
iret
les
js
out
and
ljmp
cld
imul
dec
xchg
jecxz
lods
std
ret
inc
movsb
cmp
xchg
pop
das
dec
rolb
jb
jg
scas
and
sub
push
les
cmp
xchg
cmp
ja
daa
xor
push
mov
repnz
leave
out
sahf
les
ss
jp
cmp
cld
mov
fidivs
jle
mov
decl
push
pop
sahf
or
push
xlat
push
inc
mov
pushf
out
add
mov
repnz
out
mov
lock
dec
leave
insl
stc
or
cmp
sti
add
and
loop
mov
lock
inc
lock
mov
xor
or
jb
jno
popa
pop
jge
pop
out
movsl
sub
mov
push
pop
insb
dec
out
lret
ja
cmp
cmc
cld
xchg
in
or
sbb
leave
xor
push
scas
adc
test
out
jecxz
or
lret
popf
mov
icebp
adc
and
or
clc
mov
movsl
lods
sbb
xchg
push
pop
loop
push
addr16
mov
mov
outsl
fidivl
sub
clc
jecxz
es
sbb
jecxz
xchg
out
shlb
xchg
inc
pop
sbb
in
pop
push
push
mov
out
sbb
sbb
arpl
fs
pop
into
sbb
inc
fidivs
push
xchg
dec
mov
popa
icebp
sbb
mov
fucomi
outsb
add
ja
push
sarl
out
movsl
ficoms
imul
insb
stc
jle
mov
lret
ficompl
out
in
popf
mov
inc
fadds
pop
and
cwtl
orb
movsb
sbb
pop
sub
and
cmp
sti
add
mov
sub
or
incb
push
mov
psllw
fistl
jmp
cwtl
adc
pushf
jns
inc
adc
jns
imul
push
aam
fbstp
inc
jne
xchg
xor
inc
rcll
xor
sbb
or
mov
push
cmc
cwtl
ss
pop
jbe
lea
push
mov
pop
fstl
jns
or
sbb
test
inc
mov
ja
out
in
jnp
pop
jno
adc
mov
out
aaa
mov
pop
test
std
data16
jecxz
clc
loopne
dec
xchg
xchg
mov
mov
adcl
lret
xchg
jnp
inc
test
loop
scas
int3
push
xor
or
pop
popa
setge
aas
ret
scas
das
push
in
fdivs
inc
shrb
iret
add
call
jp
dec
sub
sbb
xlat
fucomip
jp
notb
rolb
xchg
addl
fwait
mov
pop
loopne
inc
pushf
test
push
sub
clc
les
stc
push
adc
cmp
je
out
mov
bound
test
movsb
cmpsl
mov
fwait
mov
inc
and
inc
xor
inc
xchg
sub
js
mov
insb
lcall
pop
stc
pop
into
push
fsubrp
out
data16
bound
lret
mov
mov
int
pop
mov
push
sub
popf
popa
in
xchg
lock
cmp
mov
cmp
jle
ss
push
dec
cld
popf
dec
inc
pushf
ss
hlt
test
repz
out
inc
xorb
mov
push
incb
adc
in
fxch
stc
lods
and
mov
pop
sub
jno
int
test
push
jle
addr16
mov
sbb
aam
mov
xchg
xchg
add
jg
js
mov
or
fisttps
shrb
inc
adc
imul
push
icebp
repz
sub
test
inc
push
xchg
mov
jae
mov
stos
ljmp
test
arpl
pop
js
mov
add
jge
test
stos
cmc
or
mov
sub
cmp
cwtl
jb
sub
cmp
inc
iret
cmp
mov
xor
sub
mov
outsb
imul
mov
cmp
pop
les
add
es
cwtl
cmp
mov
cmpsb
dec
mov
je
stos
shlb
fstps
jecxz
mov
andb
push
lret
lods
gs
shll
add
outsl
arpl
xchg
sub
lahf
add
mov
bound
mov
lods
push
out
xchg
ficomps
sub
sbb
imul
nop
jmp
mov
lods
pop
sbb
dec
mov
push
jnp
pop
aaa
outsb
movsl
loop
arpl
pop
loop
popa
sbb
aam
dec
inc
fs
inc
sub
rcrl
orl
jge
xchg
outsl
bound
icebp
mov
mov
rcr
out
dec
sub
xor
push
addr16
repz
jmp
adc
daa
add
jecxz
xor
mov
insl
or
mov
push
mov
xchg
pusha
loope
loopne
dec
fsubrs
mov
dec
testl
dec
jl
dec
loop
xor
imull
jg
dec
out
sub
mov
test
out
mov
mov
jbe
sbb
or
mov
push
test
lds
sti
into
fdivrs
pop
sub
shrb
cmp
push
xor
pop
sub
je
loop
fistl
inc
and
cmp
cli
psubq
lock
out
jp
adc
xor
adc
stos
mov
ja
xchg
popa
and
cmp
sub
mov
xor
add
or
sbb
fisttpl
mov
movsb
mov
push
pushf
fcompl
fwait
arpl
movsb
mov
movsl
out
inc
or
cs
scas
jno
mov
lcall
out
stc
jle
fistps
mov
fidivrs
sub
sub
mov
mov
xor
dec
ret
or
push
xchg
test
nop
pushf
xor
sbb
std
shlb
nop
dec
ret
std
or
cmc
cmc
cmpsl
mov
mull
mov
jbe
roll
jb
mov
aad
ss
pop
arpl
incb
cmpsl
xchg
mov
lods
adc
sbbl
cltd
daa
pop
xor
dec
cmp
ljmp
mov
bound
int
push
adc
ret
mov
push
adc
arpl
inc
xchg
sarb
mov
arpl
lret
jg
pextrw
adc
and
imul
adcl
mov
push
push
push
shr
ss
pop
pop
xor
stos
movsl
cmp
xchg
or
mov
push
sub
loop
push
add
inc
adc
cli
mov
imul
es
sbb
or
sub
sbb
cwtl
mov
mov
push
sbb
pop
jge
mov
sub
pop
rcl
das
push
shrb
cmpsl
divl
adc
lods
pop
lret
test
sbb
fnstcw
bound
test
mov
xor
inc
xchg
inc
ja
xchg
mov
xchg
lret
loope
cmp
mov
hlt
jg
inc
or
and
daa
mov
test
inc
sub
push
dec
add
sbb
cmp
mov
and
dec
add
fisttpll
or
mov
mov
pop
das
cmp
cli
jb
int3
xchg
subb
scas
sbb
xchg
inc
mov
inc
loopne
frstor
lcall
scas
call
push
inc
js
test
add
mov
sbb
xor
xor
or
or
repnz
mov
in
cmp
aam
jmp
sbbb
mov
scas
and
andl
cmp
cli
lods
std
push
inc
lock
dec
dec
test
mov
mov
and
mov
movsb
dec
out
mov
push
int
adc
mov
fcoms
xor
xchg
dec
out
pop
movsb
lret
mov
dec
gs
push
fcompl
icebp
test
or
inc
ret
lods
test
call
sti
fmulp
test
inc
jge
adc
cmp
mov
fdivs
mov
jb
xchg
lods
call
fistpll
and
mov
push
scas
clc
push
or
inc
mov
ss
jp
push
push
xchg
repnz
out
sar
fsubl
enter
sbb
cmp
sarb
cmp
out
xchg
fs
dec
lret
rclb
aad
inc
ljmp
push
lods
inc
repnz
in
notl
test
xchg
test
pop
ds
fs
jns
mov
fldcw
pop
stos
jno
and
call
push
add
jnp
jp
jl
cmp
cmc
xchg
out
mulb
xchg
jl
cmc
mov
mov
push
int
icebp
outsl
cmpsb
jmp
push
dec
in
mov
sub
test
mov
jl
add
xlat
scas
push
and
das
shlb
cmc
sub
inc
xchg
dec
pop
xchg
daa
pop
int3
lcall
pop
movsb
dec
or
push
insl
xchg
pop
jbe
lods
lret
test
jnp
mov
adcb
xchg
lret
flds
mov
push
mov
and
out
jne
repz
pop
mov
adc
rcl
jnp
xchg
out
or
xchg
mov
push
mov
cmp
push
int
jae
xchg
rcrl
or
push
aaa
lods
inc
jmp
mov
pinsrw
sub
xor
sub
test
roll
adc
mov
mov
cmpsb
fldcw
xor
mov
in
jne
adc
xchg
sub
inc
lock
push
fstpt
sbb
xchg
inc
aas
add
rolb
adc
out
sbb
mov
cmp
jge
gs
scas
jg
fsubl
jmp
rorb
push
mov
inc
mov
fcmovb
mov
mov
aaa
adc
mov
sub
mov
es
jbe
les
js
fnstenv
cmc
imul
jne
jl
mov
push
push
sub
movsl
fdivp
loope
jae
mov
out
hlt
cmpsl
or
xchg
mov
dec
and
out
lea
lds
movswl
sbbb
sub
nop
test
call
shll
addr16
insb
mov
mov
int3
outsl
scas
stos
in
fildll
loop
imul
xchg
pop
push
insb
or
cmp
shl
test
xor
dec
idivb
loope
mov
ds
mov
push
mov
aad
mov
bound
and
lods
pop
imul
cmp
lahf
loopne
pop
mov
out
or
sub
xor
in
imul
fbstp
repnz
mov
arpl
push
xchg
add
pop
cltd
shll
lret
mov
sub
das
sahf
inc
sarl
or
xchg
and
sub
punpcklwd
cmpsl
inc
xchg
xchg
mov
pushf
mov
loope
sahf
or
xchg
cmpl
jle
mov
pusha
mov
daa
das
mov
xor
popa
adc
ret
push
mov
cmc
push
or
mov
mov
jmp
jns
movsb
aaa
stc
push
xlat
imul
cmp
insb
fs
lret
xlat
fmulp
or
sub
sti
iret
pop
push
popl
xor
ds
xchg
fwait
inc
or
ja
sti
dec
xchg
push
mov
sbb
jmp
mov
dec
loop
push
fbld
shrl
in
mov
mov
xchg
xchg
das
adc
lret
adc
movd
jp
fidivrl
mov
jp
jne
push
adc
and
xchg
add
dec
jmp
mov
fcmove
sub
cmp
bound
gs
enter
push
into
popf
cmp
jno
out
bound
jl
dec
mov
shrl
add
jp
jns
adc
movsl
xorl
sbb
test
out
fcomps
xchg
stos
or
push
add
pop
fwait
nop
jecxz
rcl
vmwrite
popf
push
push
jno
in
pushf
inc
dec
push
fs
adc
loop
cmc
push
nop
xchg
xchg
sub
imulb
in
pop
mov
jle
out
xor
ja
or
jo
and
adc
rorl
stos
movsb
lods
adc
cli
cmpsb
addr16
push
mov
add
and
cmp
dec
add
lret
out
cmp
scas
das
rolb
mov
inc
mov
jg
pop
adc
pop
xchg
addr16
aam
cmp
adc
dec
cmpsl
lock
mov
or
les
add
jns
and
jbe
sbb
in
fidivrl
mov
mov
xor
shl
addr16
lock
xor
cld
js
jecxz
sub
out
es
inc
mov
stc
mov
sbb
cwtl
sub
mov
xor
mov
insb
xor
jae
sbb
adc
shrl
mov
fmuls
cmp
and
shll
inc
cmp
mov
or
test
or
jmp
ret
add
in
add
imul
jg
out
pusha
sti
inc
push
mull
xchg
and
fisubrs
push
fs
ja
xchg
out
push
jne
add
inc
outsb
stc
jmp
hlt
pop
icebp
fcompl
xchg
cmp
jbe
adc
cmp
sbb
add
sarb
addl
imul
lretw
pop
popf
orl
faddl
rcrl
inc
or
cli
lods
or
test
and
or
push
adc
pop
sub
mov
cmpsl
adc
es
push
fs
jl
enter
arpl
sub
mov
dec
leave
scas
pop
test
jo
cmpsl
and
adc
pusha
shrl
push
cmpl
dec
push
add
outsb
enter
int
pop
jl
dec
andl
addr16
imul
scas
and
cltd
stos
mov
sbbb
adc
cld
fadds
test
push
cmc
jecxz
repz
pop
mov
jmp
push
mov
pop
daa
gs
test
mov
inc
outsb
mov
out
out
xor
mov
or
sbb
xlat
sub
addb
inc
inc
fcompl
jle
xchg
lods
jo
jp
jae
xlat
sub
add
jnp
outsb
jecxz
movsl
aas
test
test
xchg
in
insl
test
adc
cmp
jecxz
mov
rorl
xor
dec
and
add
pushf
xor
cmp
jno
imul
cmp
ret
or
jns
xchg
jge
jne
iret
inc
pusha
push
jne
sbb
or
outsb
mov
push
cltd
out
jge
stos
dec
push
xor
iret
inc
sbb
lea
int
outsb
cmp
or
dec
call
nop
lods
mov
and
stos
pop
lret
mov
fcoms
push
inc
out
xchg
jmp
in
sbb
int3
addr16
addr16
mov
ret
jae
shr
fstl
insl
dec
int3
fsub
cwtl
lods
and
movsl
lret
xchg
dec
xor
xchg
jae
int
adc
inc
sbb
push
cmp
popf
mov
stos
jmp
dec
mov
dec
cld
push
stc
cmp
aam
nop
insb
cli
repnz
pop
stc
xchg
mov
sub
andb
lods
enter
out
sub
sbb
popf
jae
lahf
add
loopne
add
std
mov
jp
xchg
loopne
sarb
ja
data16
xchg
add
sbb
popf
push
filds
lea
mov
ss
pop
jp
mov
int
repz
ss
ds
iret
jle
pop
cwtl
movsb
pop
jl
aas
imul
sbb
push
cmp
daa
mov
xchg
push
xchg
mov
iret
mov
cmpsb
enter
mov
sti
xchg
testb
ficompl
push
rclb
sahf
arpl
adc
mov
je
sahf
stos
ja
and
es
insb
mov
mov
mov
pop
lea
scas
lahf
scas
push
mov
out
pop
mov
ljmp
filds
pop
inc
in
div
jno
leave
fsts
dec
add
jb
and
lret
in
in
test
shl
jmp
xor
xchg
sti
push
subl
enter
frstor
mov
int
mov
sub
xchg
lret
sbb
push
insb
push
inc
xchg
cmp
pusha
loope
movsb
cmp
std
inc
xchg
xchg
scas
fsubs
sub
cli
lods
cmp
adc
lahf
stc
mov
repz
mov
cmpsl
cmp
imul
sbb
add
mov
in
scas
lods
sbb
imul
shll
mov
push
xchg
movsl
mov
sub
lock
imul
aad
inc
and
xchg
aas
and
sub
mov
mov
adc
lock
std
push
jg
scas
jno
lahf
mov
sbb
lds
push
xchg
stc
mov
pop
lahf
stc
sub
lds
push
in
jns
jmp
pop
in
dec
adc
rolb
sub
jns
dec
lahf
jg
call
shlb
hlt
and
and
xchg
fwait
cmp
lods
mov
call
cmp
mov
sbb
sbb
or
das
cli
push
loopne
fldcw
sbb
add
mov
sbb
and
add
jno
xorb
mov
aad
mov
sub
inc
dec
das
nop
hlt
xlat
push
adc
lds
or
fidivl
aad
xchg
and
xor
push
jecxz
std
jo
cmp
out
movsl
sub
add
mov
cmpb
push
mov
adc
lock
cmp
call
jg
data16
andl
sbb
inc
lods
idivl
orb
out
xor
ret
ret
stos
jae
cltd
insb
sbb
add
xor
mov
and
ljmp
push
xor
mov
and
pop
mov
mov
fisttpl
jne
jmp
out
loopne
jnp
lods
fnstcw
out
jle
inc
mov
iret
vphaddwq
cmc
adcl
into
jns
loop
xchg
push
inc
mov
andl
cltd
cld
inc
test
add
cmp
and
and
mov
push
xchg
pushl
mov
push
mov
lds
dec
popa
sti
xor
inc
pop
jbe
sub
andb
xor
dec
mov
mov
and
sbb
pop
out
mov
xlat
pusha
inc
xchg
repz
int3
fldenv
mov
les
xchg
test
cmp
sub
std
mull
push
scas
in
dec
stc
outsl
iret
lea
iret
mov
adc
pop
orb
pop
cmp
call
add
lock
les
shlb
mov
jnp
cmp
sub
sti
out
xor
push
adc
test
out
xchg
lea
leave
cmp
push
sbb
mov
mov
cmp
and
aad
aam
pop
lret
or
inc
sub
in
imul
test
dec
inc
cwtl
loopne
je
add
ja
ljmp
movsb
stos
movsb
mov
jne
lods
mov
xor
ja
or
adc
xlat
aad
outsb
pcmpgtd
bound
mov
pushf
inc
imul
fidivs
push
inc
mov
rorl
imul
pop
std
mul
aas
icebp
repz
push
push
out
in
xchg
or
xor
jb
push
xlat
and
jo
stos
xchg
lods
sbb
sbb
and
or
sbb
pop
inc
mov
popf
mov
adcb
or
loopne
dec
xor
fld
add
cmp
adc
sarb
sarl
mov
scas
rcrb
movsl
leave
jno
mov
addr16
jmp
xchg
jb
jmp
ss
daa
xor
loope
rcrb
xor
cmpsb
cmpxchg
sahf
and
popa
xchg
pop
stos
xchg
repz
cmp
out
mov
pop
popf
aas
cmp
mov
xor
sub
enter
dec
or
lds
xchg
push
movsb
pop
cmpsb
aaa
push
cltd
push
sub
maxps
jae
ficomps
fnsave
repnz
and
or
mov
add
jmp
push
inc
je
inc
add
pop
push
cmp
xchg
sahf
aam
jne
mov
adc
mov
fsts
aad
cmpsb
mov
js
popa
cmp
aad
pushf
in
add
xor
out
mov
pop
cmpsb
aam
fstl
and
movsb
jecxz
cli
ret
and
xorl
es
int
or
cltd
stc
jb
out
out
sub
mov
ret
inc
out
push
enter
andl
sub
pop
enter
adc
popa
sbb
push
mov
addr16
inc
repnz
mov
fadds
add
out
movsl
sarb
popl
adc
arpl
movsl
adc
mov
movsb
fs
sbb
add
es
xor
popa
int
or
sbb
je
mov
out
outsl
xchg
insb
ljmp
lods
xchg
mov
push
sbb
sbb
pop
mov
jae
arpl
imul
rorl
push
adcb
push
dec
sub
popf
mov
sbb
cmpb
ja
push
push
mov
push
test
aas
mov
fiadds
xor
popf
or
push
mov
pushf
ret
xchg
inc
nop
nop
call
mov
sbb
dec
cmp
cli
filds
pop
mov
imul
adc
icebp
bound
insb
mov
dec
sbb
aam
mov
pop
jns
xchg
pop
add
xor
ret
and
mov
nop
jbe
jge
add
out
inc
xchg
arpl
dec
pop
sbb
fcomip
cmpsb
jmp
rcrl
dec
adcl
out
out
mov
shr
mov
xorb
stos
in
lret
aas
dec
sbb
mov
and
jnp
and
add
daa
push
ljmp
jmp
sbb
adc
or
jae
pop
je
mov
adc
mov
call
int3
xchg
dec
or
clc
xchg
xlat
pushl
add
cmp
ss
sbb
mov
loopne
scas
mov
sbb
loope
xor
out
add
fsts
cmp
or
dec
fwait
mov
push
dec
cmp
xor
test
inc
out
shll
push
sbb
push
insb
mov
and
cmp
pop
xor
push
imul
fs
mov
jae
or
aaa
dec
and
mov
leave
mov
xchg
pop
roll
lds
dec
and
loop
addr16
mov
dec
inc
or
add
test
lods
in
pop
or
movsl
call
cmp
shlb
incb
subb
push
xor
scas
cli
imul
call
cmp
push
cmp
ds
fnstenv
fmul
ja
add
and
cltd
divb
jno
cmp
mov
jno,pt
xchg
jg
mov
arpl
pop
hlt
ret
aaa
or
jb
inc
sbb
aaa
lea
out
stos
inc
fisubrl
push
adc
xor
data16
mov
and
pop
or
cli
repz
mov
fwait
jecxz
xor
sbb
lcall
lock
pop
cmp
inc
add
inc
xlat
mov
dec
js
aas
jo
sbb
xor
fisubl
cmpl
insb
jmp
in
adc
mov
and
aaa
scas
mov
sub
fcmovbe
adc
movsl
adc
rclb
in
repz
or
sub
arpl
jg
inc
lock
aad
push
std
sbb
mov
loope
hlt
aaa
ds
and
inc
xchg
mov
mov
inc
out
sbb
dec
movsl
cmp
cld
loop
ret
outsl
mov
leave
out
out
popa
add
cmp
xor
jp
sbb
pop
adcb
sarl
jno
sub
jae
inc
pop
and
push
lods
add
sub
cmp
mov
cmpsl
data16
xrelease
fstps
mov
cmc
out
and
out
adc
pop
mov
mov
ss
std
push
sub
stos
jle
mov
fwait
xchg
xchg
pop
outsb
add
in
jo
inc
sub
dec
mov
aas
xchg
cmp
push
out
fs
push
jbe
adc
repnz
pushf
out
out
iret
addb
sbb
pop
arpl
cmp
out
mov
push
rorb
mov
sbb
mov
dec
out
add
push
cli
sti
pop
jo
ds
mov
test
subl
mov
lret
cmp
push
imul
iret
into
cltd
lea
int
inc
xlat
mov
mov
mov
sub
rorl
mov
mov
fdivr
pop
sub
mov
mov
je
shlb
imul
jg
rcll
xor
mov
js
xor
lret
fdivr
jno
sub
fistpl
popf
inc
shrl
movsb
outsl
inc
sub
inc
fnstenv
dec
sub
in
dec
enter
pop
lret
imul
mov
repnz
stos
jl
stc
dec
inc
add
das
stos
jae
dec
pop
add
sub
sbb
jecxz
push
xchg
xor
int
jbe
xchg
test
outsl
mov
or
xchg
and
test
addr16
lea
mov
pop
jecxz
cs
xchg
jg
movsb
cmc
mov
or
ret
insl
sahf
filds
mov
fsubrs
lea
push
popf
xlat
fnstenv
push
dec
fdivs
cmp
dec
adcb
jno
addb
jo
test
gs
mov
js
roll
pushf
push
les
or
ss
imul
add
jb
jge
nop
loope
clc
and
mov
in
es
aas
pop
cmp
aam
mov
or
jmp
pushf
enter
dec
add
sub
out
pop
mov
jo
xchg
lods
clc
cmc
cltd
insb
ror
mov
mov
sbb
orl
shlb
sbb
arpl
iret
arpl
push
inc
mov
cmc
inc
aam
fxch
inc
test
xor
in
pop
call
pop
aad
adc
outsl
pushf
shll
popf
daa
cmpl
adc
cmpsb
push
sbb
sbb
mov
or
mov
or
jns
lds
fs
es
jno
mov
add
out
gs
inc
cmp
mov
pop
push
and
repnz
mov
jo
test
inc
andl
or
sbb
mov
adc
in
mov
scas
in
push
push
outsl
je
pop
aas
imul
fistps
jg
ljmp
pop
sub
adc
popa
xchg
inc
ss
cmc
das
test
sub
push
test
mov
fwait
mov
and
out
cmp
outsl
in
andb
jbe
mov
xlat
stos
sub
xor
xlat
movsl
in
mov
cmp
jmp
test
daa
repz
adc
cmpsl
popf
inc
push
cmpsb
arpl
sub
push
cmp
test
jl
cld
xor
loopne
call
push
and
sbb
mov
int3
shll
idivb
pop
xchg
xchg
and
scas
cmp
pop
cmp
out
and
adc
cmp
mov
fisubl
jo
pop
enter
push
sbb
xor
fs
sbb
data16
inc
subb
test
push
dec
push
xor
cmpsb
mov
mov
sub
es
inc
push
pop
test
outsl
lods
popa
mov
mov
mov
cmp
in
aad
test
and
ljmp
pop
cltd
add
lds
push
jl
push
xchg
cld
ret
pop
out
mov
mov
out
push
mov
adc
add
and
hlt
mov
pusha
fisubrs
in
xor
and
into
mov
inc
or
test
xor
test
xor
jbe
repz
sbb
pop
lret
mov
inc
adc
mov
icebp
jg
adc
sbb
jmp
fildl
mov
xchg
lods
lods
adc
mov
gs
sbb
add
add
jl
fwait
lret
push
pop
incb
push
inc
inc
jp
mov
movsb
int
lahf
fnsave
jns
pop
xorl
stos
push
jg
cmpsb
call
or
rclb
call
sbb
mov
popf
sbb
mov
jno
stos
cmp
cmc
jl
xchg
cmp
movsl
mov
add
mov
fst
push
movsb
lods
and
ret
test
xor
addr16
ficoml
test
pop
push
and
call
imul
push
bound
addb
nop
fstpt
pop
insb
dec
xor
inc
push
fisubs
lock
push
insb
jne
jae
add
or
rcrl
sbb
sahf
aas
xlat
movsl
mov
iret
xor
inc
call
out
xchg
dec
dec
push
lret
add
push
xchg
mov
out
stos
mov
jns
inc
lds
je
xor
sub
jg
or
xor
les
test
lock
lret
sub
dec
cmp
insb
idiv
cmp
fdivs
inc
movsl
add
outsb
es
and
pop
pop
rcll
shl
jg
add
xor
push
call
outsb
fnsave
pop
pop
pop
js
and
sbb
xchg
andl
loop
aam
xor
gs
xchg
xor
sub
rol
and
out
test
mov
sub
and
insb
cmc
mov
neg
movsb
dec
or
and
popa
adc
addl
sahf
out
inc
mov
push
push
mov
cmpsl
xlat
pop
movsl
adc
js
push
dec
clc
loop
shrb
push
in
cld
cmp
je
sub
mov
sub
dec
stos
fcmovne
sbbl
xor
sub
or
mov
and
push
dec
and
loopne
in
push
dec
repz
xchg
out
cmp
test
mov
lods
mov
xchg
outsl
and
sub
mov
je
adc
adc
sbb
push
lret
mov
test
jp
rorl
mov
sub
icebp
mov
gs
pop
in
jmp
fnstcw
sub
scas
push
cmp
pop
cs
cli
mov
xor
test
cmp
je
dec
adc
and
or
mov
inc
mov
xchg
jmp
popf
mov
test
std
adc
outsl
sbb
and
or
hlt
cmp
shl
xor
pop
jns
daa
pop
cmc
jge
popa
cli
rcl
mov
mov
dec
fildl
mov
pushf
enter
aad
jnp
sub
fdivrp
fxtract
xor
clc
jno
addb
cmp
dec
cmp
cmc
mov
lock
je
push
adc
loope
stc
push
pmaxub
aam
mov
mov
inc
mov
iret
push
cmp
pop
jp
insl
aam
aas
imul
pushf
outsl
jbe
dec
add
mov
push
and
fsubl
enter
push
pop
adc
sub
pop
inc
cmpsl
and
sub
jnp
orb
mov
xchg
fcmovb
xchg
xorb
dec
jno
sub
addr16
out
ret
xor
outsb
pop
movsl
aaa
mov
outsb
or
jnp
in
leave
and
cmp
fs
sar
dec
xor
fcompl
cmpsb
clc
sbb
xor
fucomip
ret
in
jo
inc
rclb
ja
xchg
mov
outsl
adc
test
xchg
sti
imul
int
cltd
sub
fisubrl
aas
roll
pop
neg
dec
mov
addr16
or
xchg
mov
cmc
popa
mov
xor
jo
je
push
out
imul
inc
ret
lea
scas
xor
xchg
sbb
jle
push
xchg
mov
fiaddl
imul
inc
lahf
andb
outsl
aam
je
push
jecxz
sahf
fldl
ficoml
inc
test
icebp
icebp
push
inc
jno
pop
inc
leave
inc
hlt
test
ror
icebp
insb
inc
push
xor
jne
sti
cld
jnp
ljmp
push
das
add
outsb
jmp
andl
test
add
sahf
dec
mov
mov
add
ljmp
jl
addl
push
aas
push
pop
mov
ret
enter
fadds
or
sbb
and
sbb
faddl
fcoms
jle
jb
mov
imul
mov
outsb
sub
cli
add
xor
pop
push
shll
xor
int
jmp
or
out
out
repz
rol
repz
push
pop
insb
or
fwait
divb
xchg
arpl
add
cmc
out
stc
stc
xor
sbb
mov
sub
mov
mov
mov
das
xchg
and
dec
inc
or
dec
push
negb
push
mov
jg
popa
shl
push
cs
mov
xor
pop
jbe
adc
shrl
xor
xchg
sbb
push
sub
stos
xchg
xor
inc
and
in
aam
xor
insl
hlt
stos
mov
ret
jbe
pop
and
push
pop
iret
push
cwtl
lret
push
test
loop
mov
hlt
popf
cmpb
inc
out
mov
jmp
ret
xor
clc
xor
loopne
pushl
pushf
call
or
push
test
insl
daa
add
add
in
mov
push
jne
enter
rcll
ret
test
lea
sub
cltd
jno
mov
and
xor
stc
xor
mov
sbb
shrb
sbb
dec
ret
ror
fstpl
dec
push
rcrb
inc
xchg
lods
sub
dec
sub
mov
inc
sub
repz
ss
xchg
xchg
jmp
sub
test
ss
lahf
int3
sub
cmp
out
aaa
cmp
mov
rcrb
dec
pop
dec
inc
or
rorb
sub
sbbb
sbb
sbb
jno
cmp
dec
inc
adc
rolb
push
enter
insb
mov
add
iret
popa
sarb
jle
adc
pop
mov
adc
dec
xor
push
mov
cmpsb
jge
out
aaa
ds
and
mov
sahf
stos
insb
ret
xor
add
pusha
sub
mov
arpl
addb
imul
push
jp
in
mov
and
cli
ret
mov
ret
std
sub
pop
in
hlt
test
mov
cmp
push
jno
xor
mov
cmp
jno
push
pop
fldl
sub
call
mov
lock
outsb
xchg
sbb
leave
add
inc
sbb
pop
fs
mov
jnp
or
jg
out
cs
incl
mov
pushf
add
test
sbb
addr16
pop
add
fdivrl
dec
imul
mov
pop
push
test
mulb
daa
cmp
and
daa
les
cmp
cwtl
xchg
aas
jnp
mov
xor
xor
add
test
lods
test
insl
lods
adc
scas
jecxz
lcall
push
xor
loopne
sbb
aad
lock
ss
and
and
cvtpi2ps
mov
into
add
ljmp
jne
inc
in
cmp
inc
push
ret
mov
jg
dec
and
jns
aaa
out
movsl
lds
jle
and
in
fistpll
cmp
jmp
push
loopne
jge
enter
add
leave
lcall
lea
mov
mov
pop
inc
aam
mov
ss
sub
push
xchg
inc
fs
or
data16
sarl
into
imul
into
push
stos
ljmp
xor
testb
ds
cwtl
aam
sbb
jo
jns
lods
xchg
adc
popf
out
pop
xlat
das
sbb
in
jmp
roll
data16
shlb
bnd
cltd
jo
add
cmp
pop
jbe
hlt
pop
popa
rcll
in
in
lahf
out
or
and
mov
xchg
push
push
add
popa
int3
mov
fadds
cli
pop
dec
inc
ffreep
mov
mov
and
fimuls
adc
push
add
aaa
inc
sub
adc
jb
mov
pushf
xor
sub
adc
mov
int
mov
icebp
fs
or
aas
inc
and
jbe
push
and
les
sbb
arpl
sahf
xlat
sub
cmp
negb
lods
jnp
jl
out
add
jmp
js
xlat
mov
test
aad
imul
shrb
and
movsl
xorb
nop
sbb
sub
int
inc
nop
add
out
or
and
or
pop
mov
sbb
pop
insb
fstpl
fidivrs
fs
mov
sbb
add
outsl
shlb
ljmp
xor
es
mov
jge
sbb
stc
stc
in
cmpsb
sub
push
mov
fcmovb
imul
ljmp
jge
mov
gs
xor
mov
jg
jnp
inc
mov
pop
nop
nop
cltd
dec
xor
shl
jno
mov
push
jecxz
test
es
dec
aam
cmpsl
lds
sbb
lret
push
sbb
mov
sahf
repz
sub
sub
xchg
aaa
out
andl
adc
mul
fdiv
or
xchg
out
sub
push
inc
decb
data16
cmc
imul
ficompl
imul
jl
push
mov
add
test
xchg
divl
inc
or
push
dec
clc
sub
pushf
inc
popa
faddp
push
int3
inc
pop
add
sti
das
push
frstor
lret
push
js
scas
fcompl
lock
popa
lea
mov
push
inc
repnz
mov
fwait
mov
flds
nop
fnsave
pop
scas
or
cld
jmp
dec
shlb
sbb
mov
aad
fldl
in
or
add
rcrb
ror
test
cmpsl
jle
xchg
or
arpl
cmpl
cmp
test
fadds
iret
push
outsb
jae
cltd
ret
jge
shlb
out
cmp
jno
dec
xchg
push
push
dec
mov
test
and
es
test
pop
cmpsb
dec
fldt
xchg
fmull
pop
sbb
or
dec
int
cli
lock
lret
cmpsl
sub
cwtl
push
and
popa
cwtl
dec
in
mov
pop
pusha
adc
pop
test
scas
rorb
hlt
fwait
or
bound
scas
test
lods
mov
sub
push
sbb
data16
mov
add
scas
pushf
sti
sbb
mov
xlat
sbb
xchg
add
xchg
cmc
xchg
in
in
repz
aaa
dec
inc
pop
mov
ss
jl
pop
jecxz
out
in
inc
push
inc
daa
outsb
cmpsb
adc
aam
mov
sub
repz
mov
das
push
sub
lahf
int
lea
dec
jg
jb
movl
out
xlat
fsubrs
xchg
fxam
dec
mov
lea
jae
hlt
pop
daa
arpl
dec
movsb
push
rcrb
jno
stc
jnp
mov
adc
test
dec
ret
mov
imul
xchg
out
and
addr16
cltd
ret
hlt
or
cmpsl
mov
add
sbb
jnp
jge
iret
xlat
in
inc
xor
mov
jne
sub
sub
push
aaa
sub
xor
movsb
mov
inc
mov
roll
or
adc
out
jb
xor
and
fstpl
jmp
fldl
aad
sar
jb
sub
lahf
mov
movsb
arpl
add
push
dec
sub
pop
insl
mov
je
jge
jmp
ljmp
pop
fsubrl
test
xchg
cmp
insl
insl
repz
loopne
pop
imul
bound
mov
test
daa
xchg
inc
inc
adc
fldcw
leave
data16
rcrb
add
nop
insb
or
test
mov
addr16
out
mov
push
in
xor
pop
push
add
dec
pop
or
mov
jl
sti
ret
aad
in
xor
mov
push
std
inc
pop
fwait
xchg
in
js
jl
in
imul
sub
loope
adc
jmp
add
arpl
inc
or
out
imul
inc
test
add
mov
ror
test
bound
iret
jnp
cmpl
ljmp
aaa
daa
pop
cli
sahf
xchg
mov
mul
inc
and
xor
sahf
inc
add
dec
push
and
ds
scas
addr16
mov
out
add
jle
pop
xor
dec
sub
cs
pop
dec
mov
sub
jo
dec
shrl
fisubs
jecxz
iret
popf
mov
cmp
or
inc
fidivs
xor
mov
ds
inc
bound
pushf
pop
rolb
jne
jnp
cmc
fnsave
lret
cli
dec
lods
dec
insb
icebp
or
mov
pop
sub
pop
stc
pop
leave
and
add
add
or
sti
aam
ret
int
pop
cmp
insb
test
pop
fs
inc
scas
jmp
push
push
jp
cmc
movsl
xchg
rclb
dec
add
inc
enter
xor
push
pushf
movsb
xor
out
pop
fadd
jp
loope
bound
push
add
loopne
pop
sub
push
shll
dec
xor
cmp
cmc
leave
sub
cwtl
lods
imul
add
or
mov
stc
push
mov
mov
sub
mov
enter
sub
cli
mov
cmp
or
inc
test
jns
repnz
mov
movsl
push
mov
cwtl
scas
pop
lret
lret
mov
xchg
xchg
fldl
mov
int3
aam
jp
jo
push
and
insb
mov
dec
dec
les
out
loope
inc
jl
mov
stos
lcall
xor
movsb
iret
xchg
ret
dec
or
in
adc
jnp
insl
sub
or
lcall
xor
lret
xor
sti
test
lea
ret
mov
shlb
clc
popf
push
cmpsl
enter
adc
or
outsl
je
fsubl
dec
loopne
push
scas
in
mov
mov
sub
gs
pop
xchg
inc
sti
mov
orl
les
hlt
imul
mov
xchg
hlt
xchg
or
xchg
lahf
nop
aas
loopne
sub
add
xchg
sub
lahf
movsl
imul
and
sbb
mov
fdivr
in
mov
fistl
adc
adc
stos
pop
fcoml
xchg
int
int
and
test
ret
push
sub
std
gs
data16
pop
insl
adc
cmp
test
pop
lret
pop
lahf
dec
xchg
les
pmaddwd
sbb
adc
orb
pop
aam
outsb
and
and
mov
in
gs
jl
lods
call
addl
add
js
int
test
cltd
outsl
inc
xor
pusha
gs
and
icebp
jle
mov
inc
mov
ljmp
sahf
pop
testl
movsl
ret
in
jg
mov
out
push
test
daa
xchg
mov
sbb
or
or
mov
inc
daa
loop
mov
ljmp
sbb
mov
lcall
fldenv
daa
pop
lahf
cld
cmc
fwait
pop
sub
mov
pop
or
mov
inc
jp
imul
jge
dec
call
cltd
repnz
lds
or
ficomps
push
and
sbb
shlb
xor
push
pop
jl
je
scas
dec
xchg
shrb
add
sbb
adc
pop
xor
dec
subl
mov
mov
ret
ja
mov
inc
push
out
sahf
test
fcomps
cmp
mov
sbb
or
push
int3
cmp
xchg
pop
lahf
push
in
pop
push
js
jecxz
inc
and
pop
mov
sub
lret
stos
adc
xor
mov
bound
test
imul
out
mov
adc
loope
es
ffreep
jg
outsl
idivl
fs
sub
out
mov
and
mov
inc
pop
data16
enter
repz
mov
mov
fldz
fdivp
fistpl
std
clc
loopne
fstpt
sbb
or
pop
in
jbe
in
fidivrs
or
add
pop
xor
adc
lea
fists
adcl
pop
sbb
out
out
and
mov
test
das
xor
clc
jle
push
test
sbb
dec
lret
pushaw
pusha
lds
inc
negb
stc
jne
jl
ds
xor
jns
dec
std
push
mov
pop
lods
not
xor
clc
lcall
loope
adc
out
ret
pushf
stc
dec
jmp
arpl
rcl
test
jnp
in
cmp
push
adc
dec
imul
pop
aas
add
xor
pusha
stos
or
lahf
add
xor
xchg
push
xlat
add
scas
std
push
push
cmpsb
rorb
stos
xchg
loopne
sbb
jge
test
push
andl
outsl
ret
push
leave
dec
mov
pop
pusha
adc
ljmp
sub
or
cmc
out
orl
rcll
lsl
or
sub
mov
xchg
xor
addr16
jmp
mov
jge
orb
fucomi
cmp
add
sbb
repnz
fistpll
dec
fistl
xor
pop
mov
push
stos
mov
jp
es
inc
and
pop
sub
push
aaa
xchg
fidivrl
adc
pusha
fcompl
pushf
fsubs
push
test
jmp
mov
nop
adc
sub
push
xlat
inc
lods
out
or
int
xbegin
xor
imul
loope
rclb
je
jae
cmpb
and
pop
dec
test
jle
call
and
add
mov
cmc
mov
jb
pop
dec
mov
adcb
pop
stos
mov
mov
jb
mov
pusha
push
xchg
mov
adc
and
and
bound
and
sbb
imul
fnstsw
subl
popf
mov
dec
aaa
push
rclb
jmp
pop
popa
dec
or
es
stos
pop
jne
add
add
fwait
xchg
ret
or
outsb
je
and
xchg
cmpsl
jecxz,pn
subb
mov
xor
xchg
mov
inc
in
and
jp
mov
decb
decl
in
movsl
imul
push
cli
rorb
pop
dec
pop
in
jmp
lock
sub
repz
nop
sub
sbb
mov
and
or
lock
sbb
pop
push
int
sbb
mov
loope
std
or
jg
push
or
enter
int3
mov
mov
fstl
mov
pop
pop
std
push
and
push
repz
jle
in
icebp
push
adc
aam
gs
xchg
xchg
fadd
jmp
jne
lods
lret
gs
rolb
mov
push
or
sub
popa
fwait
adcb
inc
or
push
in
mov
cmp
idivl
mov
push
ljmp
add
mov
loop
pop
and
lea
dec
mov
or
inc
rclb
bnd
jae
adcl
fsts
daa
aas
aaa
cltd
pushf
mov
fidivl
outsb
cli
movsb
fs
mov
or
adc
daa
arpl
pop
lods
fistpll
sahf
enter
lock
jo
cmc
mov
out
fcmovnb
add
xor
rcrb
ds
std
jmp
aaa
lahf
les
cmpsb
lfs
leave
jb
inc
fs
mov
rolb
cmc
pop
int3
inc
push
jl
dec
mov
mov
ss
cwtl
or
ret
out
sub
scas
jb
mov
loop
sbb
add
push
mov
das
arpl
lret
jo
ret
jg
sarl
je
cmp
fisttpl
es
mov
and
xlat
testl
sub
or
stos
jmp
bound
aad
ficompl
add
icebp
pop
add
nop
dec
fstpl
xchg
ja
inc
sub
in
inc
test
push
jl
addr16
mov
int
int
inc
xor
mov
sbb
add
popf
ret
rorb
sbb
mov
lret
rcrb
stos
pop
xor
aaa
rorl
icebp
lcall
dec
adc
cwtl
dec
mov
dec
cmp
sbb
cs
mov
jp
mov
pop
inc
inc
jmp
xchg
fiaddl
inc
cmc
xchg
add
dec
pop
xchg
jb
jge
int3
adc
ja
cmp
or
mov
outsb
arpl
sahf
mov
arpl
int
jl
push
lea
hlt
adc
inc
cmp
inc
inc
stos
xlat
and
test
inc
mov
mov
sub
mov
aaa
jge
popf
mov
cmpsb
stc
or
repnz
sub
jno
adcl
xor
lret
jecxz
and
hlt
add
dec
ja
jno
adc
int3
out
adc
lods
orl
in
mov
xchg
loope
push
daa
cmpsb
push
aad
movsb
insl
push
aad
iret
enter
sbb
mov
dec
push
cmp
mov
insl
dec
rol
fsubl
leave
mov
je
xor
jbe
mov
push
jae
mov
lods
shlb
inc
sbb
jae
lods
push
rclb
mov
jb
dec
mov
out
xor
xor
paddw
add
and
insl
or
ror
add
inc
mov
jns
sbb
pop
dec
cmp
loope
leave
gs
and
cmp
and
into
mov
pop
cmp
jo
ret
xor
push
push
mov
or
or
cmp
fimull
or
pushf
pop
hlt
push
mul
mov
testl
hlt
jecxz
clc
repnz
js
or
xor
add
scas
int3
repz
sbb
fs
scas
in
add
arpl
es
pop
inc
ss
mov
sbb
out
xchg
adc
fildl
or
pop
sbb
mov
cmp
fsubrs
enter
inc
adc
mov
into
push
lea
mov
sub
ljmp
arpl
stos
test
lock
jmp
das
push
dec
mov
lea
mov
out
xor
sbb
xlat
pop
testb
fwait
insl
jge
leave
int3
bound
stos
mov
pop
jmp
js
mov
stc
repnz
mov
add
outsl
adcb
enter
pop
mov
fstl
sarb
push
stos
repz
adc
subb
sub
mov
je
xchg
incb
leave
dec
and
cmp
add
inc
test
aas
xor
test
je
or
in
sahf
fdivs
mov
js
xor
jle
mov
bound
ret
and
ja
fs
mov
into
adc
pushf
mov
insl
movsb
cltd
cmp
outsl
inc
sbb
mov
mov
dec
or
xor
or
fidivrs
adcl
dec
data16
pop
mov
xchg
int
lds
or
lods
jbe
aam
fists
ret
push
pop
or
jbe
or
xchg
jo
xchg
je
gs
je
cmp
psubd
pop
lahf
dec
andl
xchg
nop
xor
push
mov
xchg
mov
addr16
popf
loope
stos
ja
jnp
sub
jno
ret
inc
add
cmp
inc
lock
adc
xor
pop
mov
jmp
arpl
xchg
ja
mov
xor
fadds
fst
xor
popa
leave
inc
scas
rcr
int3
ljmp
pop
loopne
repnz
mov
imul
inc
ja
xchg
jp
xchg
imul
aaa
xchg
xchg
sub
jae
lret
iret
mov
je
stc
and
dec
adc
and
hlt
jno
inc
stos
ljmp
fs
and
lods
adc
push
clc
imul
push
adc
pop
push
fildl
in
in
rorl
jb
jp
inc
xchg
push
shrb
int
xlat
lods
int
scas
sbb
cmpb
jo
sbb
cltd
mov
int3
popf
inc
jno
xchg
daa
adc
mov
sbb
jns
in
cmp
lods
mov
fimull
push
sbb
sbb
bound
in
mov
out
fs
adc
xchg
mov
and
scas
and
pop
or
pop
js
mov
adc
mov
cwtl
cwtl
mov
lods
shlb
negb
push
jl
jmp
loope
int
js
std
xchg
std
and
xlat
and
frstor
ja
jg
pop
mov
fcoms
jecxz
aas
and
inc
subl
into
adc
mov
jno
mov
loope
popa
sub
pop
iret
data16
ret
push
jmp
jbe
xlat
stos
jg
ljmp
xor
aad
xor
ja
lock
adc
dec
fcmovne
pop
mov
push
cld
push
clc
xchg
bound
cmpsl
mov
outsl
cs
xor
aaa
push
lods
pushf
mov
mov
mov
call
xchg
add
and
adc
dec
dec
pop
lret
pop
push
ret
in
cmpsb
mov
add
ja
add
shr
aaa
pop
rclb
bound
sbb
adc
lds
sub
test
add
addr16
mov
loope
ljmp
inc
and
stos
cwtl
mov
mov
shrb
or
repz
insl
faddl
mov
bound
mov
xchg
cld
push
xor
pop
loopne
dec
mov
imul
test
xchg
imul
lret
add
sbb
sbb
repz
cli
jo
mov
fs
loopne
push
xchg
insb
xchg
in
cmpsl
push
in
mov
dec
dec
mov
jl
sahf
stos
mov
cmpsl
adc
lahf
push
mov
cmp
shll
add
push
jge
cmpsb
sub
pop
mov
pop
push
sub
and
add
inc
les
cmpsb
cs
push
call
mov
jg
out
sahf
pop
sub
sub
cltd
push
lcall
inc
sbbb
xor
xchg
mov
mov
addl
sub
cmp
adc
or
mov
mov
xor
xchg
push
dec
leave
fisubrs
lods
push
call
xor
into
int3
lret
shl
gs
repz
cmp
das
mov
inc
add
pop
lret
and
test
jp
jb
xlat
jecxz
cmc
xor
add
push
adc
cwtl
mov
stos
in
call
mov
pushf
ja
pop
xchg
idivb
insb
int3
xor
xor
xor
lret
icebp
das
inc
sub
mov
les
and
fdivrs
cli
or
pop
test
movsb
add
pop
scas
sub
mov
add
jns
mov
jnp
leave
xchg
jp
push
iret
insb
push
mov
ja
pop
mov
cmp
mov
jb
inc
push
pop
push
data16
scas
cmpsb
inc
cmpsb
inc
pop
addr16
jl
hlt
mov
movsl
mov
xchg
sbb
aas
inc
imul
and
mov
rorb
dec
fisubrl
push
adc
mov
sub
movd
inc
into
push
repz
xor
mov
cli
fwait
outsb
iret
repnz
hlt
mov
pop
addr16
les
mov
mov
mov
movsl
cmp
and
xchg
push
adc
or
mov
leave
hlt
sti
aas
arpl
lock
repz
mov
mov
dec
dec
push
cwtl
xchg
mov
cmp
subl
dec
scas
push
dec
test
xchg
xor
add
testl
iret
inc
insl
dec
push
sahf
sbb
xchg
pushf
xor
test
and
pop
jecxz
sahf
shr
sbb
xor
aaa
int3
cmp
into
sbb
adc
lds
aas
add
xor
jl
imul
gs
cli
lahf
jae,pt
in
cltd
cli
je,pn
addr16
jp
cld
pop
mov
add
nop
mov
sbb
xchg
das
nop
push
push
aam
mov
hlt
or
in
hlt
iret
fwait
dec
mov
cmp
xor
test
add
xor
jb
cmp
mov
inc
mov
or
or
xchg
into
cmpsb
sbb
call
add
dec
push
push
shlb
sbbb
mov
fnstenv
mov
sarb
sbb
mov
dec
rorl
or
inc
sti
hlt
adc
or
movsl
add
jne
dec
scas
pop
push
inc
and
or
pop
and
sbbl
mov
lret
jne
cwtl
lret
mov
mov
fs
fstpl
dec
cli
scas
xchg
or
sbb
popf
test
jge
jp
xor
mov
ds
imul
ret
in
mov
sbb
cltd
xchg
adc
jne
pop
insb
xlat
nop
fildll
pop
dec
leave
dec
pop
push
jl
push
sarl
das
xchg
xor
pop
jbe
cs
xor
roll
std
mov
ss
or
sub
pushf
pop
dec
sub
or
adc
ffreep
enter
daa
inc
std
cli
lret
in
shrl
inc
test
xchg
lods
in
arpl
std
jns
pop
fdivl
add
dec
push
xchg
inc
out
scas
mov
shrb
push
les
repnz
sbb
out
dec
test
stos
xor
or
push
jp
int
jl
js
arpl
pop
pop
jmp
push
ds
cmp
sub
je
sbb
out
pop
bound
rorl
test
sub
jns
in
dec
cmpsb
enter
movsb
les
loope
xchg
jns
lock
std
insl
into
cmp
jmp
test
jb
ds
ja
and
lock
xchg
add
in
data16
addb
push
dec
inc
jne
mov
push
fwait
and
adc
andl
add
cs
cmp
mov
xchg
xchg
mov
push
inc
bound
sub
sbb
mov
cwtl
inc
test
sub
pusha
xor
lods
es
scas
imull
cmp
add
fsubs
cmpb
pop
loope
xchg
add
test
enter
mov
lcall
sub
xchg
xlat
je
std
jnp
in
xlat
mov
lret
andb
imul
jle
and
out
aam
adc
movsb
fs
loope
sub
gs
and
mov
lods
sub
out
lret
mov
ficoml
test
xor
sub
and
jg
fbstp
cs
sbb
sub
rclb
push
mov
out
gs
into
test
cltd
push
push
pop
in
cs
xchg
sbb
lods
int3
addl
lods
xchg
inc
sub
scas
imul
cmc
cmpsl
ss
out
pop
push
dec
cmp
adc
jns
xor
out
cmp
jns
movsb
dec
fistps
insb
xor
ret
test
inc
ss
or
cmc
es
mov
or
out
clc
push
and
mov
or
pusha
xchg
pop
cmc
or
inc
loope
imul
and
les
lcall
cltd
sub
dec
sub
sahf
stos
push
mov
pop
sti
out
jge
dec
pop
add
sub
mov
xor
int3
in
sub
sub
xchg
push
out
add
or
push
ret
mov
cmpsl
pop
imul
adc
inc
addr16
fnstsw
add
stos
in
mov
sbb
ret
inc
ret
iret
jns
in
or
aad
popf
test
lcall
xor
or
fldl
mov
cmp
mov
cld
js
cli
jne
mov
aas
fmuls
in
dec
cmpsb
xchg
sbb
mov
cs
xor
les
xchg
xchg
lods
and
pushl
sti
inc
packuswb
lret
cltd
mov
sub
subl
and
pop
mov
jp
push
ss
push
stc
add
cmp
lods
test
stc
mov
aad
in
lahf
lcall
push
aad
jno
ljmp
xor
xchg
jno
enter
mov
sub
mov
mov
into
out
pop
inc
cmp
out
inc
lcall
xchg
sahf
mov
icebp
cli
popf
outsb
in
push
fcmovnu
mov
roll
movsb
jae
in
addb
mov
loop
cmc
shld
lret
fisubs
lds
dec
xor
aas
fnsave
pop
daa
jle
pop
inc
push
rcrb
ss
push
in
and
dec
ffreep
pop
xlat
push
xchg
xchg
cmpsb
add
pop
mov
insl
jb
out
leave
in
daa
addr16
stos
jbe
jmp
mov
je
lret
ja
int
aad
xchg
into
sbb
shr
jle
cmp
push
jp
xchg
imul
sbb
out
arpl
xchg
sarb
in
mov
and
dec
xchg
mov
cltd
or
stos
adc
in
pop
push
xlat
mov
cmp
subb
inc
loope
bound
mov
or
pop
out
dec
mov
arpl
jnp
fdivrl
jge
pop
popf
cs
xchg
inc
push
dec
out
xor
push
movsl
mov
jecxz
mov
sbb
sti
jl
mov
and
jp
loope
pop
add
add
xchg
jp
inc
dec
mov
xchg
imul
xlat
inc
lods
imul
orl
mov
out
dec
mov
and
xor
popa
leave
gs
push
mov
je
push
fdivrp
mov
xchg
xchg
xchg
adc
test
sahf
xchg
pop
les
add
aad
add
mov
mov
pop
adc
cmp
mov
xor
dec
add
fcompl
dec
scas
xor
mov
jae
iret
lods
ret
xlat
imul
lods
mov
leave
sub
mov
xchg
sub
adc
js
fnsave
lcall
repz
cmp
cli
push
ret
mov
and
call
mov
adc
popa
cmp
mov
ja
push
or
leave
cld
std
sub
inc
movsl
xchg
lds
test
jl
cmp
decb
jns
pop
insl
inc
movsb
xor
mov
mov
xor
inc
in
push
dec
gs
sbb
in
push
fdivl
xor
xor
cmp
add
push
out
aad
lods
movsl
into
bound
and
sub
push
out
push
sub
jge
mov
mov
dec
mov
in
pusha
mov
cmp
dec
lds
cli
cmpb
in
or
aas
hlt
sub
subb
pop
sbb
push
insb
jae
test
adc
jmp
sarl
cld
dec
dec
adc
shl
xlat
fdivs
mov
add
lock
cs
xor
mov
fdivs
gs
jne
imul
jecxz
test
rclb
adc
cli
xchg
sbb
add
movsb
dec
xlat
call
jecxz
bound
dec
cltd
mov
jmp
pop
fmull
lret
scas
into
jne
add
or
pop
jecxz
mov
scas
or
scas
cmp
sarl
sub
rclb
mov
jmp
xchg
in
test
mov
sti
xchg
inc
sbb
and
sbb
sub
cld
test
bound
pop
leave
fcmovb
jb
and
jg
mov
or
and
jge
fdivs
adc
xlat
mov
imull
sub
ds
dec
or
loop
mov
push
push
sbb
inc
cmp
daa
adc
push
ja
pop
das
xlat
aas
psraw
mov
leave
adc
rorb
mov
jbe
add
cmp
pop
lret
jo
shll
mov
scas
inc
cmpb
data16
gs
dec
popa
in
sbb
lds
sub
movsb
add
jl
cmp
mov
out
xor
cmpsb
and
jp
imul
mov
push
add
dec
or
pop
dec
jmp
inc
gs
sub
xorl
int3
and
xchg
inc
rcr
jg
ds
imul
and
and
dec
and
ja
leave
inc
into
scas
in
mov
add
ja
test
add
mov
out
xor
and
push
int
std
mov
inc
xor
mov
lcall
push
stos
dec
pop
dec
int
jne
das
adc
imulb
cmpsl
jbe
or
nop
movb
in
mov
lret
mov
inc
or
cld
popa
imul
mov
inc
inc
ret
nop
mov
and
int3
push
cmp
push
mov
lret
insl
je
lret
lock
dec
out
leave
jbe
mov
mov
movsl
pop
daa
adc
sahf
sahf
jle
in
xor
mov
ret
sub
fistpll
aam
pushf
xchg
xchg
shlb
test
pop
iret
bound
dec
shlb
xchg
roll
sbb
insb
loope
jnp
ds
icebp
and
jge
push
pop
mov
push
sahf
cmp
popa
sarb
xor
sub
inc
or
and
dec
lcall
jg
or
fbld
iret
aad
fnstsw
mov
xlat
into
test
das
mov
xorl
aam
lods
xchg
or
push
adc
jp
mov
push
enter
loop
movntps
fmul
ret
or
sub
sbb
adc
insb
inc
adc
inc
jb
lods
fs
cmpsb
sub
fnstcw
fidivrl
mov
fiaddl
inc
xchg
xchg
mull
cmp
and
arpl
movsb
pop
and
mov
imul
mov
mov
xchg
ret
and
mov
mov
lret
flds
cli
mov
pusha
mov
ljmp
cld
cmp
gs
xchg
cwtl
and
test
mov
outsb
or
pop
lods
lcall
mov
adc
add
fstpl
fiadds
push
mov
loop
ret
mov
pop
pop
adc
dec
les
popa
sbb
pop
sbb
leave
into
das
adc
pop
xor
aas
scas
cmc
jmp
add
fildll
inc
pop
or
push
test
jmp
mov
sub
mov
push
lret
push
mov
mov
mov
lds
jl
cmpsl
inc
inc
sbb
fnstenv
xchg
jae
push
mov
lock
divl
icebp
out
scas
xchg
xor
cmpsb
sbb
addb
loop
inc
sbb
call
int3
pop
jb
jg
shl
pop
cmc
add
pushf
ficompl
sub
jbe
pushf
and
sahf
xlat
dec
sbb
jbe
and
sti
xlat
cwtl
js
mov
mov
and
cmpsb
cmc
mov
pusha
dec
testb
lods
mov
push
lods
pop
gs
cmpsl
aam
add
xlat
aam
rorl
sbb
iret
xchg
or
jo
sbbl
cld
jno
std
mov
sub
imul
out
jne
mov
jns
nop
jnp
cld
jmp
leave
push
push
js
repz
rol
ret
aas
jmp
pop
fucomp
or
cmp
adc
push
repz
idivl
push
sbb
mov
ds
scas
mov
js
into
push
mov
loope
and
mov
lret
ja
loop
jne
scas
imul
dec
mov
xchg
cmp
xorl
in
insb
xchg
int
cltd
sti
insb
ftst
pop
inc
js
insl
dec
push
mov
inc
fs
and
mov
das
mov
in
mov
mov
shll
jns
add
or
mov
inc
pop
cltd
aaa
xor
mov
inc
shrb
mov
mov
jno
in
sub
lret
mov
stos
dec
xor
jge
js
mov
daa
in
adc
clc
pop
pop
push
divb
inc
pop
and
pop
inc
adc
xlat
aas
je
inc
mov
inc
pop
enter
pop
leave
stos
jg
jns
mov
cmp
xor
or
mov
and
adc
test
scas
popf
dec
lcall
xchg
mov
pop
lahf
dec
lds
pop
and
and
push
xchg
mov
bound
out
int
scas
mov
ljmp
pop
outsl
jb
pop
sbb
cs
mov
repnz
jbe
arpl
xor
or
scas
movsl
fdivrs
jne
mov
std
cmpsb
mov
jnp
dec
pop
and
mov
and
out
pop
ss
xor
cmp
mov
and
int3
ja
push
test
add
cs
sub
pop
call
add
adc
sbb
pop
dec
sbb
xchg
fstpt
enter
in
fldenv
push
add
in
adc
or
jno
jecxz
in
repnz
fs
xor
xor
std
popa
andl
dec
packssdw
sbbb
mov
xor
lods
sarb
inc
mov
inc
jbe
or
shr
mov
push
jecxz
dec
inc
xchg
pop
lret
mov
mov
outsb
dec
sbb
pop
enter
into
cltd
fisubrl
test
sbb
ljmp
in
arpl
jbe
mov
int
loopne
jge
out
push
aaa
sub
dec
xchg
sub
pop
jo
mulb
adc
mov
xor
lea
cmp
es
mov
jl
push
or
mov
stos
ljmp
sbb
int3
jl
fdivl
mov
push
daa
popf
or
orb
icebp
inc
and
imul
lods
lock
lds
bound
mov
inc
dec
mov
jns
mov
js
jecxz
xor
jae
push
sbb
addr16
add
sti
pop
sti
mov
mulb
pop
jl
fcmovnbe
pop
xor
cmp
fstpt
inc
sbb
push
adc
push
dec
and
jne
stos
or
cmpsb
xor
scas
adc
or
shl
loop
pop
push
lahf
jbe
es
in
xor
mov
clc
movsl
sub
jecxz
and
jne
out
ss
sbb
and
pop
popa
gs
in
int
add
je
gs
dec
lcall
fisubl
inc
xchg
sub
mov
xchg
xchg
cld
adc
bound
inc
push
pop
mov
push
add
jmp
movsb
push
faddl
insl
leave
dec
lcall
stos
mov
out
and
enter
xlat
or
xchg
out
pop
xor
test
sub
sub
jecxz
xchg
xor
je
adc
jp,pn
jo
in
adcb
inc
or
fwait
mov
das
lds
push
rcrb
nop
in
mov
jns
mov
les
daa
lret
addr16
and
add
cmp
sub
js
ljmp
rcrl
addr16
test
shll
sbb
and
movups
xchg
xchg
xchg
lcall
mov
jns
mov
test
sbb
mov
shrb
lret
icebp
push
clc
or
dec
in
pop
fistps
and
aad
repnz
or
ficoml
test
pop
lret
xor
jnp
xchg
or
pop
fldt
das
lret
and
sbb
iret
jmp
test
in
jl
scas
outsb
inc
push
pop
inc
rorl
lock
popa
lods
inc
pushf
mov
jbe
inc
int3
inc
movsl
adcb
sbb
or
jne
xor
adc
sbb
mov
in
fadds
rcr
iret
stos
jne
fistl
imul
jne
lea
shrl
push
outsl
mov
nop
gs
lahf
mov
sbb
bound
pop
loopne
mov
call
cmp
dec
testb
mov
sub
and
call
mov
pushf
mov
cli
jns
ljmp
mov
add
mov
icebp
incl
arpl
mov
pusha
jne
jge
cmpsl
jbe
xchg
push
push
ss
sbb
xor
sub
divb
enter
aam
iret
fldl
bound
xor
notb
jp
inc
xor
adc
and
stc
ss
aas
js
inc
imul
lret
cli
test
subl
aam
test
rcrb
mov
leave
ret
inc
mov
cmp
push
pop
sbb
jecxz
gs
popa
cmp
jmp
dec
das
call
xchg
mov
leave
mov
mov
fwait
test
das
mov
push
inc
jnp
and
and
lea
loopne
add
cld
ud0
out
or
iret
sbb
out
inc
lods
aam
sbb
or
xchg
pop
outsb
fwait
int
jmp
add
bound
jp
add
xchg
or
mov
push
lods
add
mov
add
lcall
repz
lcall
fists
in
xor
push
fmuls
aas
push
or
pusha
add
lahf
push
inc
push
push
sub
and
call
stos
ret
adc
je
test
mov
cltd
outsb
lods
add
jl
push
imul
scas
xlat
pop
fidivs
ja
inc
outsb
jle
pop
out
lea
xchg
xlat
mov
imul
inc
mov
jmp
ljmp
adc
ds
and
xchg
out
jno
push
sbb
stc
add
jns
lahf
int3
lods
mov
cmp
push
mov
add
test
les
mov
add
movsb
lcall
movsb
inc
cmc
adc
fsubl
inc
xchg
xor
pop
adc
inc
cmp
repz
mov
pop
das
or
inc
and
sub
inc
or
jbe
sbb
push
je
popf
mov
add
push
mov
lcall
sub
mov
cmp
cmp
pop
into
dec
xchg
pop
fwait
loope
je
imul
or
cwtl
jo
cmp
imul
in
fisubs
neg
inc
fucomi
jg
jp
cmp
int3
mov
imul
pop
jp
jl
mov
xchg
sahf
and
fidivs
enter
int3
cmc
and
sbb
jecxz
testb
adc
sahf
sub
bound
das
movsl
mov
jmp
xchg
cltd
loope
cltd
and
adc
pop
out
ffree
fstp
xor
jb
data16
xchg
push
in
dec
sbb
shll
int
adc
jecxz
andb
stos
ret
mov
adc
dec
insb
shll
sbb
mov
cld
popa
sbb
adc
outsl
xchg
adc
pop
pop
dec
cmp
push
push
cli
cwtl
or
sbb
mov
insb
adcb
jl
gs
lcall
mov
lcall
pop
shll
incb
adc
pop
sbb
adc
jno
cwtl
adc
mov
mov
sbb
ret
sarb
daa
call
addr16
mov
in
stos
jbe
adc
scas
nop
daa
popa
fsubrp
mov
mov
loop
inc
cmpsb
xor
push
imul
scas
mov
ja
push
mov
jne
pop
adc
add
cmp
mov
xchg
and
mov
add
mov
rorl
sarl
in
pop
mov
pop
dec
movsl
stos
jle
mov
out
adc
call
cmp
movsb
fidivrs
xor
and
mov
jbe
sub
mov
call
or
push
sbb
inc
mov
pop
adc
lahf
insl
std
ret
pop
xchg
inc
jmp
sbb
fs
pop
out
fdivr
shrb
aas
scas
and
arpl
movsl
repz
test
out
cmp
rcll
jp
add
mov
and
jge
add
jmp
push
push
add
mov
mov
add
push
adc
pop
arpl
jmp
lods
inc
sbb
frstor
mov
roll
sbb
xlat
shll
jae
sbb
xchg
mov
cwtl
push
jg
clc
sbb
push
xchg
std
cmp
es
jg
std
jle
xor
pop
pusha
or
and
jmp
push
cmpsb
or
pop
and
enter
les
jae
push
cld
mov
mov
xchg
neg
pushf
div
ret
or
fisubl
fidivrs
hlt
lcall
and
mov
arpl
cmpl
mov
mov
rcrb
mov
and
push
sbb
add
rcrb
leave
hlt
pop
push
divl
sti
insb
cmp
add
ret
mov
add
dec
test
daa
push
xchg
or
rcrl
lock
aad
daa
aaa
sbb
xchg
pop
movsl
push
cmp
daa
xor
pop
mov
adc
mov
je
sub
inc
jbe
inc
loopne
fwait
pop
xchg
out
cmp
xchg
fnsave
or
lret
adc
inc
ljmp
or
xor
mov
es
pusha
push
and
and
test
sub
dec
mov
mov
cmp
push
cmp
cmp
fidivrl
sub
push
js
add
sar
call
xlat
clc
aad
push
dec
xchg
sub
xor
mov
cmp
mov
imul
pop
mov
dec
mov
cltd
outsb
repnz
lret
adc
lret
cmp
or
mov
mov
or
and
dec
loopne
mov
fidivl
fdivl
xor
jg
outsl
push
out
mov
xor
mov
inc
hlt
push
jge
xchg
or
cmp
cmp
mov
pop
push
jne
xchg
mov
in
imull
outsb
in
sbb
mov
inc
clc
out
outsb
fsubs
dec
push
in
pushf
pop
mov
push
jo
ret
sbb
xchg
dec
add
mov
pop
inc
jecxz
ja
push
and
fidivrl
in
xchg
mov
add
push
push
int
inc
icebp
push
movsb
and
lea
mov
gs
notb
fistps
xchg
cmp
movsl
jo
lds
push
iret
addr16
jo
int3
mov
lret
sub
pop
sbb
ja
sar
mov
mov
add
mov
jp
icebp
mov
stc
je
xlat
fwait
test
leave
ja
xor
push
ret
pop
daa
je
add
mov
fisubrl
adc
dec
outsb
shrb
cmc
lods
cmp
pop
shlb
sbb
sbb
push
add
imul
lods
cltd
repz
aas
movsb
sub
pop
cld
in
aam
jbe
addl
jno
sti
push
mov
and
push
inc
dec
xor
out
push
enter
mov
mov
in
in
out
jne
sub
pop
sbb
jo
xchg
cld
sbb
lret
rorb
aas
pop
inc
js
fbld
mov
jo
movsb
mov
dec
iret
add
mov
adc
push
fmuls
mov
clc
popf
iret
mov
mov
out
xor
gs
adc
cld
mov
fisubl
mov
jp
mov
jne
int
lea
fwait
mov
int3
inc
push
and
shll
mov
je
rcrb
adc
xchg
pop
stc
pop
jmp
mov
pop
add
insl
adc
xor
xor
xorb
add
push
lods
jo
aaa
les
inc
lcall
sbb
xchg
inc
push
add
inc
scas
sbb
inc
or
xchg
mov
mov
test
movsl
or
xchg
or
js
xlat
sub
divb
ljmp
cli
rclb
push
add
lods
inc
sub
inc
dec
stos
mov
or
or
jmp
xchg
xchg
push
dec
mov
xchg
sub
pop
pop
lock
jae
out
lahf
lahf
faddp
dec
lods
aas
xchg
xchg
adc
lock
adc
sub
data16
pop
das
and
sarl
sub
pop
loope
add
cmp
mov
and
lock
sub
push
mov
loope
mov
imul
xchg
pop
aad
subb
das
into
pop
adc
jg
ja
cmp
je
popa
inc
sti
lret
rclb
or
sbb
and
and
inc
dec
fistpll
rorl
jle
xorl
test
lret
add
dec
call
cli
or
test
and
hlt
xor
cmp
movsb
mov
nop
mov
pop
aaa
cltd
mov
pop
pusha
cmc
jno
push
inc
test
int3
cmp
jg
pop
dec
rcll
mov
dec
mov
mov
mov
repz
out
dec
cvtpi2ps
test
fbld
movsl
mov
shrl
xor
or
or
sbb
xor
andl
adc
popa
daa
sarb
or
sub
das
inc
mov
outsl
mov
cmpb
data16
addl
jnp
stc
cltd
fwait
cmp
arpl
loop
pop
testl
push
push
popa
js
jae
add
in
push
rclb
cld
clc
push
repnz
inc
dec
and
enter
add
ret
mov
adc
dec
rolb
data16
mov
mov
and
int3
loopne
mov
test
stc
movsb
orl
xchg
mov
das
lret
test
mov
mov
and
test
into
jnp
rcrl
sbb
push
arpl
ds
and
cmp
jo
ds
mov
or
fcoms
lds
or
sti
push
stos
sarb
xchg
xchg
mov
sti
adc
push
notb
sub
inc
sbb
cmp
mov
and
jmp
sti
xchg
mov
repz
push
mov
push
mov
pusha
adcb
dec
pop
rorl
mov
xchg
cmp
imul
sub
cs
aam
aas
inc
outsb
fcomps
pop
rorl
lahf
push
daa
mov
incl
lcall
hlt
mov
imul
xor
sbb
jmp
add
mov
in
and
or
mov
std
popf
dec
lcall
aaa
rclb
push
insb
push
test
xlat
call
outsl
jge
hlt
xchg
mov
out
insb
cmp
dec
cmpsb
outsb
and
fwait
loopne
mov
lds
scas
or
sbb
and
dec
mov
cmpsl
cwtl
lds
cli
andb
jl
sarl
lea
mov
loope
pop
aas
xchg
sahf
xchg
test
mov
aas
int
push
les
lds
and
arpl
and
sub
lcall
leave
sbb
push
fidivrl
stos
inc
adc
jo
incl
fstps
rolb
sbb
adc
inc
cs
push
jecxz
bound
ret
mov
movsb
loope
mov
and
mov
push
mov
fisttpl
negb
cmc
sbbl
lds
stc
ja
adc
popa
or
outsl
mov
and
mov
lock
mov
fsub
out
jo
mov
fimull
aam
xor
in
movsb
movsb
insl
adc
daa
js
fs
jbe
inc
mov
pop
lea
nop
in
in
mov
mov
leave
or
fisubl
mov
xor
dec
inc
adc
fisttpl
xchg
and
insl
adc
popa
jnp
andl
scas
cwtl
outsl
cmp
rcrl
fwait
es
cmp
ds
cmp
add
or
push
fucomp
pop
dec
fldcw
push
sbb
sbb
push
adc
push
mov
mov
cli
jb
jb
mov
call
adc
fucomip
repz
ljmp
ret
and
insl
das
inc
sub
xor
ror
addb
or
ja
out
inc
inc
iret
push
cmp
xor
fmull
pop
imul
pop
xor
push
fldenv
cltd
sti
pop
out
dec
push
aaa
test
mov
movsb
mov
cwtl
imul
pop
imul
pop
jmp
push
gs
je
mov
xchg
sub
xor
es
in
adc
push
ja
pop
add
sub
popf
orl
pop
es
mov
fdivr
jbe
xchg
les
push
mov
stc
mov
addl
es
clc
insl
cmp
add
mov
jge
inc
mov
fmul
push
test
adc
incl
mov
fadds
cs
or
lcall
movsl
gs
lcallw
push
cli
mov
push
mov
or
xchg
jne
cli
pop
movsl
aas
add
pop
addr16
imul
subl
or
lock
jle
test
cmp
push
lret
imul
push
lock
mov
mov
cli
int
dec
dec
push
mov
mov
lret
mov
ret
or
inc
sti
xor
jo
mov
pop
fidivs
testb
insb
mov
lcall
movb
sbb
jb
sbb
gs
jne
scas
mov
push
test
fsubs
in
xlat
pushf
pop
inc
test
add
xchg
sbb
lea
stc
in
mov
adc
test
movsb
in
sbb
push
mov
out
ficoml
cmp
outsb
test
jp
cmp
ljmp
sbb
stos
adc
push
or
xchg
add
push
cs
cmp
adc
pop
sub
mov
pop
push
xor
out
jle
dec
lock
stos
jns
adc
mov
xchg
mov
shlb
dec
pop
adc
mov
cli
arpl
out
les
pop
xchg
inc
into
add
orb
mov
jmp
fs
mov
mov
iret
sub
sub
addr16
pushf
pop
lcall
xchg
cmp
push
jnp
jecxz
inc
cld
shlb
rcrl
push
and
imul
ret
mov
sub
imul
pop
jmp
dec
in
pop
push
das
cwtl
cli
hlt
outsb
add
lcall
cld
cmc
xor
scas
bound
or
mov
push
or
jnp
xlat
pop
push
inc
out
subl
cmp
in
mov
cmp
js
sub
sti
ficoml
mov
and
inc
iret
push
push
aam
mov
std
mov
cld
cmp
push
mov
or
xchg
outsl
push
xor
and
fnstsw
xchg
mov
stc
sub
lret
push
push
aam
nop
xor
xchg
inc
cmpsl
jb
push
adc
test
mov
aad
jg
jecxz
movsl
sbbb
bound
idivl
imul
xchg
insb
mov
addb
imul
fldt
inc
lret
cmp
jg
adc
pop
sahf
cmpsb
add
dec
cmp
hlt
imul
push
fists
mov
jns
fdivs
jg
pop
xchg
iret
adc
hlt
pushf
xor
inc
and
sub
jl
cmp
dec
rcrb
loopne
mov
mull
jb
push
dec
jne
std
pop
mov
mov
or
add
fmuls
push
addr16
jp
ja
cltd
mov
sbb
sahf
xchg
and
rclb
dec
add
jmp
jns
sub
sbb
jns
xor
stc
cmc
fisttpll
push
mov
jmp
aaa
jne
pop
mov
and
mov
sub
arpl
jp
hlt
inc
cwtl
cmc
arpl
mov
jae
test
sbb
ljmp
mov
stos
add
push
int
fmuls
fbld
aad
push
and
fsts
das
shll
add
pop
imul
xlat
inc
inc
add
enter
in
pop
out
int3
xchg
sub
pop
call
scas
loope
xor
popa
add
inc
mov
addr16
test
jo
inc
jns
repnz
popf
movsl
mov
pop
mov
jp
daa
add
mov
fwait
dec
adc
xor
dec
movsl
pop
and
jns
ss
popa
or
mov
lret
adc
and
cmc
sub
insb
outsb
xlat
fisubrl
cs
pop
aaa
sbb
push
jae
pop
xchg
lea
xchg
push
fs
cwtl
sub
clc
push
sbb
jg
sub
incb
ljmp
fbstp
scas
sub
int3
inc
mov
scas
ret
pushf
in
icebp
ss
popf
dec
jne
into
inc
push
or
mov
pop
enter
cs
clc
pop
push
loopne
add
dec
out
push
fcompl
pushf
mov
pop
mov
jp
in
mov
cs
lret
outsb
and
outsl
fisttpl
inc
push
push
sbb
dec
in
dec
lret
mov
xchg
aaa
jbe
in
add
xchg
fsubs
push
andl
add
xchg
sub
aad
sub
in
outsl
dec
cwtl
and
out
jb
ret
mov
jnp
jg
add
or
mov
ficompl
ja
sbb
xchg
inc
mov
call
fwait
outsl
enter
rcr
push
jb
jle
jecxz
sbb
gs
out
les
cmp
sarb
sbb
test
stos
cmp
and
test
push
fisttps
cmpsb
xchg
loop
imul
pop
mov
mov
push
cmpsl
ljmp
sub
movsb
dec
movsl
mov
jle
mov
fdecstp
sti
std
leave
xor
iret
cmp
jne
dec
call
imul
fimull
stos
loop
pop
xor
mov
in
idivb
adc
pop
pop
mov
lock
sbb
or
xchg
push
add
xor
xor
sub
or
cmpsl
add
xchg
test
aas
xchg
mov
adc
bound
adc
outsb
adc
dec
add
push
mov
push
add
jmp
or
std
test
mov
sbb
je
cmpsl
call
jge
xor
divb
cmp
xchg
mov
in
pop
push
xchg
push
adc
aad
cmc
enter
stos
jnp
xchg
push
dec
pushf
mov
mov
test
jae
pop
cwtl
adc
repz
pop
jo
out
aas
push
xchg
adc
stos
lods
fsubrs
jns
inc
jl
inc
rorb
sarl
lcall
adc
shl
sbb
imul
in
cmp
dec
movlps
add
out
fwait
sbb
mov
jmp
or
adc
and
fs
sub
fdivs
mov
roll
jae
aad
sbb
loope
hlt
sbb
rclb
cs
add
les
cld
jle
and
lods
xchg
scas
jle
xor
mov
ret
push
dec
sbbb
ja
jae
sbb
mov
sbb
sbb
fisubs
pushf
data16
stos
mov
test
fsubrs
cwtl
mov
jp
call
repnz
fnstenv
ss
mov
sub
add
ret
mov
inc
daa
pop
cmp
push
push
int
add
enter
xlat
xor
mov
xchg
movsl
popf
cmpb
add
insb
mov
jl
push
or
gs
lock
mov
jmp
inc
loope
add
in
jmp
fs
jl
cwtl
es
stc
mov
insl
lds
jge
ror
push
data16
fnstenv
aam
sarl
dec
fwait
out
and
xchg
hlt
lock
mov
ja
add
ret
push
mov
jmp
jo
mov
shlb
inc
jle
in
dec
leave
jge
or
ljmp
push
inc
push
mov
movsb
pop
popa
pop
sub
testb
ljmp
loop
adc
xchg
push
and
and
sub
dec
loopne
push
scas
ja
push
repnz
lret
cld
daa
mov
leave
fucomp
stos
pop
imul
imull
leave
mov
clc
dec
pusha
pop
sbb
push
adc
dec
and
dec
popf
in
aam
push
gs
adc
mov
xchg
xchg
add
jb
inc
xor
shlb
out
in
cmpsb
aam
faddl
mov
fimuls
popf
xor
xchg
cli
dec
sub
adc
jmp
dec
adcl
jmp
xor
jnp
fdivr
dec
addr16
scas
mov
pop
or
fstps
jo
fcmovu
cmp
xchg
mov
in
mov
cmp
cmp
lods
pcmpeqw
xor
xchg
mov
aam
movq
cli
loope
ljmp
jo
add
je
fs
or
lret
rol
jo
fidivs
push
cmp
lret
or
push
mov
popa
fldenv
mov
dec
movsb
pop
mov
dec
cmp
pushf
arpl
jle
test
or
jo
jmp
jg
adc
movl
pop
mov
xchg
inc
outsl
jo
or
mov
push
fisttpl
js
mov
ljmp
cmc
lahf
push
xchg
add
sbb
ljmp
mov
ds
std
out
fisttpl
sub
xchg
cli
bound
mov
mov
dec
pop
xchg
or
push
xor
fwait
aas
ljmp
sbb
xchg
push
or
loop
mov
jle
xchg
fdivs
sub
xor
sub
stos
pop
scas
std
jnp
pop
outsl
cmp
repz
mov
gs
or
lods
icebp
retw
insl
fwait
jns
into
out
arpl
lods
jmp
mov
inc
imul
dec
sti
jecxz
mov
pop
loope
in
or
inc
jbe,pt
sbb
test
ret
push
bound
xchg
dec
adc
push
inc
insl
test
mov
jns
push
push
jl
jl
in
xorl
mov
shlb
or
into
inc
pop
jg
nop
dec
cmp
loope
fdivrs
jecxz
xchg
mov
xlat
lods
out
int
add
into
clc
stos
je
gs
rorl
ret
jecxz
fisttpll
into
push
xor
pop
sbb
enter
mov
js
imul
and
pushl
das
mov
push
push
shll
in
and
and
in
mov
or
push
sti
leave
sbb
jns
mov
push
repz
inc
cld
in
fwait
xchg
adc
addr16
shlb
and
or
nop
and
dec
int3
jbe
sarb
add
addr16
sub
call
mov
push
aad
fimuls
pop
mov
pop
imul
fcoms
sbb
loop
adc
subb
out
dec
imul
inc
insb
push
xlat
rcrl
mov
ret
mov
jnp
stc
scas
jo
mov
push
lret
jg
lahf
jmp
push
aad
adc
movsb
imul
flds
mov
lret
xor
sub
mov
fsubrs
bound
mov
mov
sub
ss
movsb
mov
shlb
into
pop
xchg
pop
lret
add
mov
inc
ret
loope
mov
ja
imul
lods
push
in
sub
sbb
out
mov
inc
dec
sub
test
add
sahf
fisubrs
sub
cmp
and
sbb
jb
pop
xchg
shrb
iret
mov
sbb
or
and
and
insl
pusha
mov
cmpsb
test
xchg
addr16
inc
jae
jno
orl
dec
shrl
mov
int3
dec
xor
mov
dec
lea
inc
pop
jb
inc
mov
pop
cmpsl
mov
adc
push
stc
int3
test
dec
leave
loop,pt
pop
and
inc
arpl
jno
test
xlat
sub
aas
mov
psadbw
ror
mov
fsubrs
pop
xlat
shll
es
lret
lods
push
cs
mov
and
nop
pop
jl
into
lds
sarl
lds
adc
mov
out
fldl
adc
flds
enter
mov
or
iret
adc
imul
add
dec
popf
mov
cli
and
outsl
outsl
add
stos
popf
pop
test
mov
push
decb
jp
scas
jge
out
mov
mov
lds
inc
and
dec
mov
fnstsw
add
jne
sub
outsb
dec
nop
psubusb
test
xor
push
test
ret
rcrb
popa
dec
aaa
and
mov
dec
or
xor
leave
adc
jg
jecxz
lahf
mov
mov
inc
imul
add
jecxz
and
mov
pop
jnp
adc
mov
dec
fisttpll
mov
jmp
sub
test
ret
addr16
and
sbb
je
jle
and
out
pop
dec
mov
pop
data16
adc
das
aam
in
mov
in
sarl
andl
jp
jns
mov
insb
mov
clc
jnp
fidivrs
sbb
adc
push
rolb
cmpsl
push
insb
jmp
sarl
ja
mov
sbb
clc
loop
mov
shll
sub
push
sbb
mov
jmp
call
pop
sbb
pushf
ss
lds
outsl
or
cmp
xor
fsts
lock
movsb
mov
or
and
ret
sbb
or
jmp
adc
pushf
arpl
pop
hlt
lods
gs
mov
movsb
and
call
ja
sbb
mov
and
pop
inc
cmp
or
jp
xchg
je
sqrtss
sbb
xchg
mov
pop
mov
mov
lahf
hlt
ds
cltd
push
jmp
rorl
fisttpl
fisubrs
add
mov
and
push
or
xchg
or
sbb
lods
loopne
push
adc
out
mov
cmpsl
sub
adcb
xor
ds
sub
fcom
xchg
pop
rcrb
add
test
lsl
es
in
bound
jmp
cmp
pop
rcll
inc
cmpsl
sub
pushf
add
dec
leave
in
daa
aas
clc
les
xchg
hlt
fimull
aad
and
xor
push
inc
fstl
ret
popl
int3
jmp
mov
mov
dec
mov
jl
dec
jl
push
out
movsb
mov
mov
dec
sub
pop
mov
mov
mov
dec
stos
repnz
out
mov
lods
rcrl
out
adc
jmp
sbb
das
mov
jae
js
clc
cld
mov
jno
inc
sub
sub
gs
lods
ret
clc
movsl
cmpsb
into
mov
push
and
movsb
stc
dec
fs
sqrtps
pusha
incl
cli
sbb
enter
inc
iret
and
push
inc
clc
sbbb
sub
movsl
mov
fimull
lods
out
cmpsl
aam
call
mov
insb
fucomp
mov
adc
cltd
pop
xor
or
xor
cmp
rclb
mov
popf
sbb
int3
pop
int3
div
dec
mov
jecxz
test
dec
pop
mov
jns
rcrl
sarl
mov
icebp
popf
push
addr16
lock
adc
inc
imul
pop
mov
mov
cs
inc
sub
adc
enter
add
fldt
mov
dec
pop
stc
adc
ss
ss
aaa
fmuls
in
cmpl
shr
mov
pusha
aam
sbb
out
and
add
rol
inc
inc
les
das
outsl
sub
sarb
push
dec
mov
push
mov
xchg
pop
mov
xor
push
cli
inc
jge
aas
inc
pusha
mov
mov
test
repnz
mov
mov
inc
lock
push
and
scas
adcb
mov
stos
jne
add
fisubrl
movsb
xor
call
cmp
mov
call
and
and
jnp
lock
inc
jne
pushf
pop
adc
xor
punpckhbw
jnp
sbb
and
aaa
push
push
and
sbb
fdivl
lock
lock
push
ret
adc
add
or
cli
aaa
iret
repz
clc
cli
pop
int3
lock
push
les
ret
pop
add
jno
sub
jge
aas
fwait
ljmp
sub
push
outsl
mov
adc
jecxz
stos
add
or
aad
inc
sti
arpl
jns
add
xor
outsb
jb
cmp
inc
testl
push
fwait
cmpsb
push
dec
cmpsl
je
sbb
mov
push
mov
sbb
push
repz
push
sahf
lods
addr16
push
std
jno
aaa
and
push
add
mov
outsb
mov
or
daa
xchg
fisttpl
mov
ja
lea
scas
jo
and
jns
push
adc
mull
push
ret
nop
int3
movsl
popf
dec
cmpsl
out
jnp
idiv
fsubl
bound
jp
dec
sbbb
lret
stos
inc
outsb
mov
xchg
fcoml
sbb
jae
cmp
adc
leave
hlt
arpl
gs
xor
sub
pop
mov
shlb
loopne
adc
cmc
mov
ret
daa
repz
push
loopne
mov
sub
lcall
add
and
outsb
ds
adc
in
jns
add
in
mov
mov
mov
add
jns
lds
out
sub
add
fidivs
sti
call
inc
xchg
leave
aad
push
inc
fidivrs
xor
mov
mov
test
mov
xlat
sarb
sub
mov
or
jg
pop
xchg
mov
daa
inc
addb
stos
lcall
pop
pop
and
mov
jmp
mull
lods
sub
cmp
cs
jmp
in
push
mov
add
jmp
icebp
push
jp
out
arpl
cld
jb
pop
ss
xor
xlat
test
jg
scas
out
shl
mov
test
test
or
mov
fnstsw
loop
mov
and
push
jle
sbb
xor
out
js
mov
jge
cmc
addr16
repz
jno
pop
push
stos
lods
lea
dec
lahf
mov
jle
xchg
push
pop
aaa
jns
inc
xor
in
sub
xchg
xchg
xchg
stos
lds
jle
or
jmp
mov
bound
addr16
or
rorl
popf
cld
fistpl
pop
pop
xchg
sbb
sub
repz
jmp
mov
idivb
dec
clc
pop
fwait
or
in
dec
xlat
js
xor
lea
fst
lcall
mov
imul
or
mov
stos
mov
daa
sbb
dec
push
rcll
jbe
mov
stos
cmpsl
scas
mov
ds
xchg
lea
mov
sub
fwait
and
aam
insl
iret
mov
sub
mov
jo
test
int3
cmp
mov
insb
shr
ljmp
repnz
jp
mov
mov
lods
sarb
jl
js
enter
push
sbbl
jne
movsl
dec
test
jmp
push
cmp
lret
sbbb
sbb
jmp
popw
xchg
push
sbb
into
sti
movsl
jno
push
outsb
xor
aam
inc
push
out
mov
mov
lret
and
lret
or
mov
mov
sub
add
fmull
xor
jb
enter
xchg
jns
stos
cltd
ficoms
cmpb
push
rclb
movsl
mov
mov
test
mov
adc
cwtl
nop
fmull
xchg
ja
cli
pop
mov
inc
out
jp
test
stc
dec
jb
hlt
mov
mov
push
cmpsb
sbb
push
lock
xchg
in
lds
insb
mov
push
inc
xlat
sbb
cmp
jp
sti
in
or
mov
fdivp
cmc
add
jmp
mov
es
cld
jl
frstor
cmpsb
ja
jb
or
dec
mov
sti
dec
ds
xchg
mov
jge
mov
or
pop
and
adc
pop
xor
adc
insl
es
shrl
cltd
cmp
mul
or
aam
rorl
std
mov
xor
jns
jle
sbb
lods
in
leave
pop
push
cli
jae
popl
inc
scas
mov
loop
ret
aam
sbb
jo
add
repz
imull
add
pop
xor
dec
sub
jno
das
cmp
std
jns
xor
mov
das
daa
pop
pop
add
fstps
and
push
popa
adc
push
fcomps
inc
pop
mov
jp
or
data16
repnz
pop
iret
inc
or
mov
mov
adc
aam
aaa
or
adc
fadd
mov
xchg
addb
jbe
dec
sub
pop
stos
inc
or
std
fimull
xor
pop
sub
mov
push
dec
arpl
add
pop
jno
aam
and
mov
adc
cmp
adc
sub
add
push
xchg
gs
xor
imul
xor
push
mov
cld
dec
pushf
mov
mov
iret
icebp
cltd
cs
push
inc
in
pop
cltd
scas
inc
jb
ret
push
jmp
mov
dec
sahf
lock
mov
pushf
xor
sbb
xchg
insb
popa
xor
lds
push
add
repnz
mov
adc
outsl
stos
push
push
popa
cmp
mov
loopne
repnz
dec
lret
enter
dec
out
xor
adc
cltd
leave
xorb
fs
int3
fnstsw
fnstenv
pop
inc
in
nop
cmp
push
stos
dec
daa
pop
mov
xchg
add
insl
push
pushf
lret
das
pop
sub
ss
ficoms
xor
movsl
cmp
add
inc
fs
inc
arpl
adc
jbe
cli
pop
pop
mov
ds
or
lret
mov
cmp
sub
sahf
outsb
lods
and
mov
inc
outsb
and
in
sahf
cli
insb
cltd
xchg
push
sbb
mov
jne
scas
adc
jecxz
lds
ja
sub
inc
div
sbb
cmp
das
sbb
rclb
mov
aad
dec
icebp
lret
jo
ljmp
outsb
scas
popf
cli
aam
cmp
fildll
add
in
dec
sbb
mov
mov
or
add
rorl
imul
and
jns
dec
mov
addb
std
add
fisttpll
push
add
inc
mov
jp
sbb
add
aaa
movsl
dec
dec
and
add
xchg
insl
clc
rorl
push
lds
dec
aaa
mov
data16
fsubrp
cmp
jae
xchg
in
dec
add
mov
jp
in
adc
das
ss
sarb
mov
scas
inc
mov
xor
mov
mov
sub
test
dec
cmp
outsl
out
xlat
cmp
ds
ret
imul
repz
out
jg
push
sti
dec
es
scas
dec
cmp
mov
mov
lods
push
out
push
sbb
pop
xlat
aam
hlt
sbb
jmp
stos
mov
or
mov
sbb
xchg
jle
cmp
jge
cmp
jecxz
push
mov
loopne
mov
fsubrl
jg
adc
push
dec
movsb
jecxz
and
iret
or
pop
sahf
or
imul
xchg
push
mov
sub
cmp
es
dec
cmp
lcall
lcall
rcr
push
mov
push
jge
cmpsl
add
cld
cltd
pop
leave
xchg
pop
in
dec
shlb
mov
bound
aaa
add
jo
out
xor
dec
fisubrl
cmp
outsb
loop
and
flds
shrb
mov
or
inc
xor
lock
loopne
xchg
loope
shl
pop
or
xchg
cmp
js
stc
pop
jge
ds
adc
mov
mov
inc
scas
fcoms
out
aas
sub
rorb
jp
nop
xor
xor
lods
rorb
adc
lds
dec
cld
mov
add
cli
fisubrs
jo
dec
aaa
xchg
dec
aam
sub
add
in
inc
loop
xor
ds
sub
sbbl
cwtl
loopne
mov
stc
xor
push
fisubs
mov
lret
dec
jle
sub
mov
pop
or
and
inc
lcall
xchg
dec
dec
idivl
jmp
repnz
dec
shrl
push
clc
gs
sahf
pop
mov
rclb
pop
gs
movsl
and
add
inc
fmuls
les
or
js
sbb
lea
cmpsb
stos
xlat
cmpsl
push
pop
cmp
mov
pop
int3
push
negb
aas
lcall
push
mov
adc
fstl
xchg
into
add
mov
mov
sub
sub
mov
cmp
or
sahf
jne
or
mov
pop
push
jne
out
mov
xlat
dec
repz
lret
je
cmp
mov
std
aad
aaa
insl
push
push
and
lcall
dec
lds
les
jle
out
gs
int3
aas
fadd
sbb
cli
sarl
push
and
addr16
add
dec
loopne
loopnew
add
lods
pop
mov
xchg
sub
and
fldt
sbb
jbe
inc
and
enter
xor
int3
cmp
adc
orl
hlt
sbb
cltd
js
loopne
loop
jmp
shlb
call
sub
adc
and
mov
cld
cmp
push
fdivrs
or
sti
pop
mov
mov
add
mov
mov
sub
or
mov
xor
pop
lods
adcb
shrd
lret
shrl
roll
imul
rcrl
dec
jle
aad
int3
lcall
std
sub
outsl
mul
ds
imulb
pop
hlt
push
dec
xchg
pop
mov
jg
mov
mov
push
jo
mov
out
inc
rcr
add
cmpsl
movsb
outsl
scas
inc
sahf
mov
jne
dec
pop
mov
cmp
movsb
or
mov
pop
sbb
jno
lahf
mov
cmc
xor
clc
outsb
rclb
ss
xor
dec
push
dec
adc
loope
int3
fs
mov
test
jae
dec
scas
cmpl
xchg
xor
add
leave
inc
add
add
mov
addl
jnp
add
fldcw
dec
insl
push
dec
xor
loopne
pusha
js
mov
mov
dec
cmp
int3
or
iret
ja
testl
xor
cli
out
stos
popa
pop
push
imul
mov
ret
push
xchg
jo
dec
addb
shrl
inc
lcall
rclb
xor
mov
and
shl
orl
andl
in
int3
jo
sub
mov
jne
loopne
inc
lea
push
cmp
jnp
daa
mov
stos
aaa
push
cli
dec
xchg
xor
push
sahf
inc
lods
adc
dec
mov
clc
inc
pop
push
je
ficomps
orb
mov
jmp
cmp
leave
cmp
cmpsl
push
pop
hlt
adc
jecxz
cmp
lret
shl
push
jp
dec
jge
sbb
mov
inc
mov
mov
dec
ljmp
sti
in
in
and
sbb
adc
out
ret
hlt
testl
loope
icebp
jmp
fcompl
sub
daa
jg
and
push
push
aas
subl
fxch
and
xchg
push
sub
arpl
lret
or
sbb
notb
adc
pop
xor
jp
cmpsl
xor
jecxz
push
sbb
ljmp
test
cmp
loop
lods
push
sbb
jg
inc
mov
jmp
mov
enter
mov
mov
enter
pop
out
fsts
jno
push
adc
mov
jnp
sahf
and
mov
addl
xchg
pop
dec
push
popa
enter
mov
movsl
mov
ss
orb
imul
aad
sbbb
loop
dec
fidivl
adc
cld
mov
test
add
mov
xchg
jno
cmc
pushf
icebp
push
subb
cld
js
pop
lods
and
sbb
imul
fisttps
ds
test
add
adc
or
sbb
stc
and
mov
adc
into
dec
or
insb
enter
push
push
mov
cmp
cmp
mov
fnstenv
test
aad
shlb
inc
les
into
mov
sub
dec
in
push
popf
push
cmp
push
mov
fistpll
adc
push
xor
test
and
mov
sti
call
lret
mov
add
dec
push
cmpsl
xchg
cmp
push
dec
loope
or
icebp
sahf
mov
xchg
pushf
sbb
cmpsb
jmp
mov
ja
mov
inc
mov
outsb
lret
out
sub
cmpsl
or
push
int
or
rclb
imul
mov
pop
mov
gs
jb
pop
int3
lds
in
mov
gs
ljmp
dec
mov
neg
into
pop
xor
mov
sub
ret
stc
or
fdivl
mov
mov
ljmp
cmp
mov
pop
notb
and
dec
aaa
in
push
lock
outsb
arpl
inc
sbb
add
push
push
push
dec
enter
insl
mov
subl
shll
inc
mov
xchg
push
dec
pop
arpl
sbb
jbe
jb
pop
pop
out
imul
out
sbb
test
data16
mov
outsl
cmp
js
pushf
xchg
sub
xor
add
inc
xchg
sub
inc
mov
gs
xor
repz
outsb
adc
insl
sub
pop
xor
jb
push
fucomi
scas
les
xchg
call
rcll
or
adc
and
adc
fldenv
outsb
jge
cs
inc
jno
inc
jbe
jns
testb
movb
into
in
xorb
inc
daa
cmp
sbb
stos
cmp
push
push
mov
xchg
gs
out
out
jl
fldt
jnp
mov
movsl
cli
out
mov
pop
add
flds
pop
push
push
mov
inc
push
add
imul
movsb
mov
ret
jo
lcall
mov
mov
rcrb
cmc
sub
xchg
lods
or
rorl
bound
fldl2t
jae
push
mov
pop
nop
mov
xchg
hlt
fs
mov
fildl
testb
fs
aaa
imul
pushf
and
out
mov
negb
fmulp
lea
test
or
arpl
sahf
js
inc
arpl
pushf
in
test
xchg
dec
dec
sbb
push
and
fcomps
data16
mov
inc
sbb
add
lret
je
shrl
sbbl
jo
xlat
adc
mov
mov
lods
scas
insb
imul
mov
xor
mov
inc
imul
or
and
sar
jae
popa
cld
jge
jmp
push
repz
into
aad
repnz
faddl
xor
push
xor
jmp
jae
ja
call
icebp
sbb
xor
bound
push
add
mov
lods
repz
popa
notl
lods
add
ja
jp
movsl
movsl
lock
stos
xor
lods
inc
mov
pop
fimuls
stos
mov
adc
or
aam
adc
mov
xor
and
xchg
or
xor
js
out
stos
mov
add
popa
sub
lret
sub
je
push
jp
daa
add
sti
and
stc
jg
dec
inc
mov
movsb
test
add
mov
mov
inc
ret
jne
stos
jnp
loopne
adcb
imulb
sahf
ljmp
lods
xchg
sub
xor
pop
dec
xor
push
jecxz
push
ds
nop
push
jno
sub
or
add
movb
out
fcmovnb
and
or
shrb
and
cmp
in
es
mov
mov
andb
mov
pushf
xchg
mov
xchg
rcll
jne
dec
mov
roll
clc
adc
xor
into
mov
cwtl
pop
add
popf
pop
xchg
lods
mov
shll
fsubrs
and
sbb
pop
sub
out
mov
clc
mull
movsb
or
or
fiadds
lret
sub
sub
aaa
xorb
andb
dec
mov
ror
lret
inc
pop
or
jle
mov
jnp
xlat
mov
test
jmp
mov
stos
push
shl
fwait
aaa
push
and
and
ja
cs
and
push
filds
outsb
mov
add
xor
fimuls
orl
pop
xlat
daa
inc
inc
mov
lret
mov
std
add
dec
jb
leave
fcmove
pop
js
sub
cmpsb
inc
pusha
mov
dec
popa
sub
js
cmc
scas
das
pusha
out
jbe
gs
rcrl
out
cs
ficompl
adc
addr16
fidivrs
std
cld
aam
cmp
xor
cld
cs
aam
hlt
mov
sbb
mov
jmp
mov
shll
loopne
les
push
jmp
jmp
pop
jl
stc
lcall
les
add
popf
mov
mov
adc
or
orl
push
pop
stc
cli
mov
add
xchg
mov
pusha
mov
mov
mov
xor
shlb
dec
sub
dec
lahf
and
gs
xchg
push
mov
xlat
bound
ss
icebp
mov
mov
or
add
and
cmp
test
outsb
rcrb
xchg
xchg
push
test
mov
test
push
repnz
push
dec
stos
mov
mov
stc
stc
push
jae
push
cmpsl
sarb
mov
jl
scas
jmp
push
ret
fwait
js
clc
jl
mov
iret
gs
add
movsl
mov
cmc
icebp
pop
or
pop
sub
mov
jle
pop
xor
add
roll
sbb
push
sbb
adcl
lcall
mov
cltd
mov
xor
aad
call
mov
inc
sbb
inc
pop
cmp
gs
cmp
fstps
dec
rorb
in
pop
outsl
ljmp
xchg
jecxz
cs
mov
mulb
sbb
lds
jae
ja
lods
outsl
sbb
fucom
fs
in
add
push
or
insl
mov
adc
lahf
push
int
cmc
daa
pop
inc
movsl
cmp
out
adc
lcall
repnz
loopne
pop
add
fmul
in
jle
lcall
xor
cmp
xor
aam
fdivl
jg
mov
movsb
add
jo
lds
xor
lods
and
pop
stos
ss
repz
xchg
fidivrs
fldenv
call
pop
cwtl
fucom
inc
and
jle
dec
push
mov
repnz
aaa
or
std
xlat
ret
bound
mov
cmp
bound
or
pop
mov
mov
sbb
vphsubbw
std
mov
sub
jmp
rcll
dec
mov
sbb
fs
and
jb
data16
call
pop
lahf
jmp
into
sbb
xor
mov
adc
test
mov
hlt
gs
insb
insb
xor
test
pop
mov
lock
xchg
cmp
fwait
out
or
es
imul
mov
dec
push
pushf
cmpsl
call
lsl
repz
push
shll
dec
fistpl
cmp
addr16
inc
ds
shlb
mov
shlb
imul
jbe
adc
pop
add
sbb
dec
lahf
cmp
inc
adc
addr16
jge
adcb
cmpsl
mull
xchg
negl
incl
inc
sbb
pop
jp
add
push
lret
popa
pop
mov
lods
push
adc
les
xchg
loop
xor
mov
lcall
ja
sbb
int3
fisubs
inc
scas
jecxz
jecxz
lahf
test
mov
popa
sbb
enter
dec
and
mov
mov
xchg
or
mov
mov
pcmpgtd
pop
inc
sub
push
fxch
and
lea
adc
push
adc
cmpsb
jb
iret
sub
cld
hlt
cs
dec
sbb
fs
xchg
xor
add
inc
in
in
xchg
pop
stos
add
jecxz
mov
sub
lods
mov
out
enter
inc
xchg
pop
aaa
pop
int3
sub
fs
fstpl
mov
bound
loope
aam
insl
bnd
mov
push
stos
sbb
add
out
xchg
aad
xchg
arpl
dec
push
fnstsw
xor
lret
pop
push
popa
sub
jae
movsb
sub
cmpb
jnp
out
lds
insl
xor
sti
lret
cmpsl
jp
dec
test
cmp
mov
mov
cmpsl
sbb
das
cmc
iret
pusha
test
lret
outsl
fcom
push
add
sub
arpl
lcall
mov
mov
lods
xchg
into
jl
enter
in
push
mov
int3
ss
nop
xor
push
cmpsb
or
mov
pop
mov
je
outsl
ficoml
adc
jmp
fwait
cmova
loop
das
cmp
mov
icebp
mov
rolb
xchg
mov
aam
sub
sub
cmp
inc
jp
pop
xor
cmc
ss
lahf
jl
in
jae
push
out
or
fnstcw
test
mov
cmp
xor
sub
jo
js
dec
xchg
movsb
enter
mov
out
sbb
daa
scas
les
outsb
out
jge
push
loop
ret
sbb
and
lea
xlat
lret
js
lock
ja
or
jle
lret
enter
lea
mov
call
das
lcall
jne
dec
sub
push
mov
in
jae
sbb
movsb
sub
mov
jl
dec
mov
xlat
out
int3
mov
xor
jne
dec
mov
imul
inc
out
cmp
icebp
push
dec
mov
inc
xchg
jnp
xchg
dec
adc
loope
pop
aaa
pop
and
xor
adc
push
popf
sbb
and
ficoms
cmp
push
fdiv
out
test
lret
fisttpll
dec
sbb
stc
push
movsb
mov
sub
cmp
test
and
nop
jnp
insl
sbb
mov
pop
push
sub
jmp
cmpl
cwtl
lahf
jmp
pushf
jmp
xor
xor
adc
push
std
or
outsl
and
xor
into
push
js
jae
imul
sbb
repnz
ret
stc
ret
add
mov
mov
jnp
jno
cmp
imul
fisttpll
push
pop
scas
cmp
jne
mov
push
aad
sahf
pop
xchg
push
adc
dec
fildll
xchg
xchg
inc
sub
fstpt
push
ror
pusha
or
pop
decl
inc
jecxz
push
pop
adc
sbb
test
sbb
test
mov
mov
jo
jl
mov
cmp
mov
jo,pn
rcrl
dec
or
ja
mov
lock
testb
dec
lds
fnsave
push
leave
xchg
testb
cmp
inc
out
fiadds
popa
repnz
cmp
addr16
pop
lret
das
sub
and
js
mov
sub
lret
mov
push
push
test
push
xchg
or
cmp
scas
shlb
lcall
jp
test
jecxz
xor
dec
cmc
mov
popa
pop
shlb
jmp
cmc
outsb
fsub
adc
sti
cmp
push
lds
ror
inc
shrb
shr
pushf
out
xor
dec
or
xor
lahf
pop
push
pop
xor
xor
mov
xchg
push
das
lock
cltd
cltd
inc
popf
cmpsl
vphaddbw
stos
je
mov
cltd
xor
mov
testb
std
cmp
adc
repz
jnp
lds
or
cmc
sub
loopne
out
cmc
int
push
int
test
jp
cs
push
in
lret
xchg
mov
cld
jecxz
dec
in
inc
lds
xchg
xchg
and
mov
and
dec
and
mov
mov
rcr
lahf
ja
xor
out
mov
mov
lock
rclb
loop
lea
hlt
in
push
xchg
mov
xchg
jns
pop
or
shrb
and
mov
pop
mov
cwtl
mov
xor
and
xor
mov
das
push
movsb
jl
popf
andl
pop
outsb
cmp
ljmp
aam
out
ja
adc
xchg
jno
ret
sub
pop
pop
into
fs
fbld
cmpsb
sub
and
out
std
inc
sub
sti
adc
lods
cmp
rolb
sbb
repz
lret
es
xchg
mov
push
inc
adc
or
push
arpl
cwtl
bound
cmp
stos
fdivrs
movsb
mov
xor
mov
imul
rol
sbb
fwait
pop
cmp
lahf
mov
adc
mov
popf
icebp
out
fidivs
stos
dec
dec
in
mov
push
imul
js
dec
inc
mov
sbb
popa
cmp
lret
in
adc
scas
fdivs
xchg
ret
test
jnp
adc
scas
sub
testb
jae
scas
addr16
xor
or
jnp
pop
movsb
fnstsw
nop
nop
mov
jmp
push
xor
xchg
push
shlb
push
jg
mov
nop
sbb
sbb
dec
icebp
jbe
popf
mov
xchg
repnz
jno
push
pop
mov
cs
repz
das
gs
add
sarl
outsb
cmp
push
cmp
add
xor
call
movsb
pop
fldcw
dec
sub
std
sbbl
insl
fadds
lcall
leave
outsl
gs
sar
sbb
leave
bound
push
push
insb
stos
inc
int3
add
and
xchg
int3
icebp
aaa
cmp
adc
xchg
fcompl
adc
mov
pop
mov
jo
orl
push
test
mov
clc
pop
mov
lods
mov
loop
in
adc
lods
jae
in
dec
int3
ficoms
js
je
arpl
mov
pop
insl
add
dec
ds
push
and
mov
inc
sbb
testl
sub
sub
add
rcl
cmp
sub
and
pop
insl
or
stos
cmp
jne
lcall
addr16
add
imul
jmp
icebp
add
sarl
insl
fcomps
mov
add
dec
mov
loop
shr
cmp
bound
push
cmp
add
jns
xor
loope
push
daa
or
lock
or
and
or
ds
sub
les
and
in
mov
pop
push
mov
sbb
pop
cld
push
stos
xchg
movl
pop
cmpsl
movb
or
add
fdivs
addb
std
imul
mov
dec
push
sbbl
add
iret
les
inc
dec
in
sub
mov
iret
inc
mov
push
mov
add
sub
stos
loopne
jl
or
fnsave
pusha
test
inc
das
imul
mov
insl
lret
cwtl
sbb
pop
enter
cmc
inc
int
out
pushf
inc
mov
leave
in
int
and
in
test
cli
int3
inc
cmp
sub
pop
icebp
mov
inc
xor
insl
mov
pop
sub
mov
or
xchg
jmp
and
xchg
cwtl
or
shrl
xor
dec
je
mov
in
gs
pop
int
fistpll
pop
dec
mov
int
fucomp
sbb
and
jae
popa
fs
sbb
sub
push
mov
cmp
repnz
test
jne
scas
mov
add
lods
in
dec
mov
lea
mov
ss
test
shld
nop
or
fadds
gs
or
cmpsl
pop
cli
mov
ret
rcrb
xchg
shll
dec
and
jecxz
or
adc
pop
mov
cld
jne
mov
mov
cmp
and
xor
adc
lret
out
cmc
jmp
fcmovnb
jne
cs
enter
mov
mov
xchg
lds
inc
mov
int3
sub
sub
shr
inc
sbb
mov
test
mov
jae
aam
or
push
lods
push
push
sbb
neg
lods
mov
xor
rorb
pop
add
lds
push
sahf
sub
ret
lret
add
fs
aas
lahf
push
arpl
fildl
cmp
bound
push
ss
adcb
movsl
shll
pusha
shrl
ficoms
pop
pop
sahf
les
aam
lods
fwait
loope
lret
dec
sbb
adc
shrl
sub
mov
scas
xor
imul
jno
and
push
mov
mov
mov
mov
dec
and
jecxz
rcrb
jne
mov
orl
addr16
in
jbe
dec
mov
push
dec
pop
xchg
push
stos
into
int3
xor
jle,pt
bound
fistpll
xchg
or
dec
mov
mov
sbb
lret
push
xchg
pop
mov
mov
mov
std
push
iret
push
sbb
pop
and
idivl
dec
pop
jp
ret
pop
xlat
xchg
sti
mov
in
mov
in
push
call
jge
repz
mov
jecxz
inc
insl
rcl
repnz
pushf
bound
mov
lcall
gs
cmp
jo
repz
xchg
jmp
rep
out
add
cmp
gs
mov
sub
ret
mov
fidivrl
xchg
add
cwtl
clc
mov
mov
adc
pusha
out
mov
cmpsl
sbb
rolb
lods
and
xor
gs
mov
repz
test
or
fwait
rcr
loopne
and
arpl
cs
lods
dec
adc
lcall
cmp
fildl
jecxz
pop
cli
xchg
jbe
arpl
cltd
mov
inc
dec
dec
mov
aaa
lahf
add
cltd
dec
mov
sbb
js
int3
movsl
dec
mov
jae
cmpsb
out
dec
mov
dec
cmp
sbb
sbb
in
dec
popf
iret
mov
ds
mov
out
icebp
cmc
mov
xor
sbb
fwait
sub
int3
or
aas
or
and
or
addl
mov
mov
sub
aam
xor
or
rcrb
ds
insb
ret
cltd
imul
jle
inc
cli
popa
mov
pop
int
daa
sysexit
xor
and
dec
mov
push
dec
dec
repz
fiaddl
andl
mov
inc
mov
int
rcll
cwtl
add
push
sarl
shl
stos
out
jnp
xor
pusha
sbb
sti
out
dec
add
dec
popf
jns
sbb
push
iret
test
and
loopne
out
mov
push
pop
add
sub
inc
add
popf
dec
ss
adc
push
cmp
repnz
dec
xor
loopne
mull
xor
in
mov
mov
test
call
arpl
inc
mov
or
rclb
xchg
fcoms
push
and
in
xchg
and
xlat
pop
mov
aas
xlat
or
adc
test
fildl
cmpsl
sahf
dec
and
sub
pop
imulb
jo
xchg
loopne
cmpsl
bound
xchg
sahf
jge
jmp
lret
fimull
adc
subl
sub
pop
inc
das
in
repz
or
rcrb
add
cmc
dec
rclb
lret
and
sub
cmpsl
pop
je
xor
mov
mov
xor
pop
mov
mov
push
out
out
std
std
mov
cmp
aad
xchg
xchg
or
mov
or
fimull
cltd
mov
out
jle
int3
mov
jno
push
mov
jg
jmp
loopne
rorl
add
std
jnp
cwtl
sahf
scas
jge
out
rolb
and
xlat
lds
fs
fistps
sarl
push
and
xchg
sub
sahf
hlt
inc
cmpsl
jo
push
push
repz
inc
ret
ds
dec
push
fstps
das
push
add
dec
and
leave
rcrl
mov
sbb
cmc
pop
popf
xchg
inc
xor
inc
int
mov
addb
xchg
mov
jno
add
out
stos
jne
mov
ja
insb
push
mov
sbb
scas
sbb
jmp
jp
loop
xchg
pop
mov
adc
sahf
outsb
fistl
cmp
dec
inc
rorl
shlb
cmp
mov
sbb
insl
xor
push
pop
push
pop
push
push
fildll
arpl
out
sbb
sub
lea
push
adcl
dec
adc
fidivrl
push
fwait
enter
mov
xchg
jge
arpl
pop
inc
mov
cltd
sbb
arpl
mov
nop
or
inc
xlat
or
pop
pusha
dec
sbb
inc
iret
push
and
ds
pop
mov
aam
jecxz
mov
lcall
pushf
inc
xor
mov
pushl
insl
dec
xchg
out
inc
mov
sbb
lods
mov
and
push
adc
cmp
rcr
ret
cmpsl
adc
test
cmp
sbb
push
shll
jl
imul
stos
or
lcall
out
data16
das
lds
into
push
push
adc
inc
stc
insl
scas
mov
mov
adc
inc
sbb
icebp
inc
xor
pop
or
sub
ja
fdivs
mov
cmc
adcl
outsb
mov
and
popa
sub
mov
push
in
in
mov
loopne
rcrl
aam
jno
ret
lret
ljmp
ss
xchg
and
mov
shrb
aaa
test
ljmp
xchg
sbb
mov
sub
ficompl
loop
pop
scas
rcrb
mov
arpl
mov
mov
cmp
popf
mov
mov
mov
xlat
sub
test
negb
movsb
xchg
xor
mov
cwtl
cmpsl
shlb
and
lret
mov
mov
in
movsb
cmp
mov
inc
mov
mov
and
jne
adc
rcl
and
popf
xchg
clc
mov
dec
mov
and
mov
movsl
push
test
push
mov
cmp
mov
mov
cmp
dec
and
imul
mov
sbb
push
mov
mov
out
repz
cli
inc
push
mov
inc
aaa
daa
dec
fs
mov
cwtl
adc
mov
lcall
cmp
mov
mov
sar
inc
jp
cs
jnp
add
andl
mov
adc
xchg
mov
in
aam
pop
test
cltd
cli
lret
push
or
cmp
pop
jb
sbb
dec
mov
and
push
lret
fs
rolb
or
cmp
and
xor
xor
xchg
pop
xor
lret
push
fstl
dec
mov
leave
out
fstl
sti
sub
mov
js
sub
enter
ret
jl
dec
out
or
ss
les
xchg
popf
pop
fs
ret
fcmovnbe
loope
push
xor
dec
cmpl
mov
cmp
lret
jns
repz
and
stos
stos
sub
pop
fldenv
test
lcall
xor
and
dec
push
cs
inc
mov
sub
jle
hlt
loop
push
sar
adc
jbe
add
iret
inc
fcomip
add
dec
add
or
jns
inc
aaa
out
adc
negb
test
sub
nop
jl
lret
xlat
or
inc
push
xchg
fisubrl
sub
aas
dec
add
or
mov
sbb
test
addb
dec
test
int
lret
xchg
and
pushf
out
pop
sbb
jnp
dec
xchg
jo
cmpsl
arpl
jnp
pop
rorb
sub
xor
dec
sub
in
mov
dec
aam
and
in
leave
add
shrb
or
out
test
lea
cmp
jne
adc
fisttpl
mov
inc
addl
cmpsb
fcomip
sbb
frstor
jp
call
stc
out
pop
pop
pop
xchg
das
movsl
sbbb
test
mov
mov
push
xchg
mov
pop
aaa
lret
dec
std
sub
lock
fldl2e
or
xchg
xlat
mov
lods
push
add
out
les
repz
sbb
mov
sbb
in
mov
dec
sbb
scas
xchg
mov
mov
sbb
xchg
xchg
out
test
mov
adc
push
sub
adc
bswap
xor
addb
pop
or
clc
bound
xchg
pop
adc
cs
add
adc
icebp
pop
jae
outsl
je
cmp
aas
pushf
ret
mov
hlt
gs
jge
pop
fwait
in
hlt
xor
jl
and
aad
jae
pop
cmc
aaa
test
xchg
xchg
sarl
or
or
clc
sbb
adc
sub
push
int3
inc
scas
hlt
xor
out
mov
pushf
or
fcompl
jns
mov
pop
cmpb
sbb
data16
hlt
scas
jmp
jle
jo
out
push
pop
daa
cmp
pop
lds
mov
adc
xchg
stc
pop
push
shlb
int3
das
mov
jbe
lock
sti
adc
setns
add
leave
mov
add
push
or
ja
rdmsr
data16
mov
mov
mov
mov
rcrb
or
mov
inc
loop
push
in
sti
rcl
or
clc
mov
xor
cltd
imulb
sbb
in
pop
dec
or
adc
cld
and
jnp
mov
sarb
or
adc
mov
jo
rcrl
push
out
jo
pop
push
sub
mov
inc
loop
mov
fiaddl
dec
and
inc
jnp
loopne
xor
or
pop
repnz
add
sbb
mulb
xchg
les
hlt
jns
stc
loope
xchg
imulb
lret
mov
sbb
sbb
pop
les
sahf
movsl
mov
hlt
xor
lds
addl
and
repnz
and
imul
fistps
inc
inc
insl
pop
jno
dec
jb
push
dec
push
ficoms
or
test
aad
pop
aam
mov
es
and
loope
jmp
call
cltd
cmp
jns
lods
xchg
jae
mov
pop
pop
lcall
xchg
jl
xlat
lret
leave
xchg
lahf
xor
add
loop
sbbb
out
cltd
add
divps
xchg
xlat
and
ds
xor
decl
scas
scas
jne
dec
std
popl
in
js
xchg
outsl
inc
mov
and
sbb
mov
jg
or
rorb
xchg
movsl
mov
push
sbb
jo
ficomps
cmp
mov
jecxz
in
inc
pop
jp
jno
mov
fs
sub
clc
test
push
fmull
jmp
mov
addr16
lods
xchg
enter
mov
lea
fistl
sbbb
mov
mov
adc
lcall
pop
sbb
cmp
outsb
nop
xor
or
push
mov
push
mov
push
in
add
xor
sbb
lret
sbb
mov
xor
imul
mov
scas
das
nop
sub
insl
repz
xchg
and
stc
push
pop
mov
imul
sti
les
jo
ljmp
pop
lcall
dec
pop
cmpsl
out
ds
mov
dec
neg
inc
sbb
cmp
push
lds
or
push
dec
jns
mov
outsl
xchg
dec
imul
jae
enter
xchg
cmp
xchg
imul
cmp
ret
mov
fcmovb
mov
jle
jmp
loop
sub
icebp
inc
in
xor
adc
push
cld
cmp
test
add
xor
lea
test
or
jno
jmp
mov
sub
inc
sbb
fidivrs
popa
mov
dec
aaa
cmc
dec
adc
out
mov
ja
inc
aaa
int
add
push
dec
inc
test
insb
and
dec
mov
cmp
idivb
inc
sahf
test
ror
dec
push
ds
clc
inc
in
inc
adc
inc
cs
xor
ss
xor
addr16
ficomps
ja
aaa
sbb
adc
push
push
lea
sbb
bound
das
inc
or
into
pop
fstl
mov
daa
test
bound
dec
push
lock
add
notb
loope
pop
xchg
jno
lea
lds
jae
xchg
gs
shll
fistpl
and
mov
iret
fprem
mov
inc
sbb
pop
popl
adc
and
lcall
fcoml
fnstenv
rolb
add
loop
imul
jbe
xlat
or
notb
xchg
add
mov
lods
sbb
fadds
xchg
fmul
sub
imul
ja
mov
sahf
fadd
add
sti
lods
or
jns
mov
and
in
lds
pcmpeqb
mov
sarl
cmp
jge
and
pop
pop
imul
rcl
push
jae
sbb
mov
sbb
pop
movsb
mov
push
aas
mov
mov
out
popf
jne
xchg
lods
sti
dec
cmc
ds
popf
mov
je
loop
pushf
fbld
negb
andb
mov
mov
mov
mov
nop
decl
inc
jnp
addr16
or
inc
outsb
cltd
xor
test
dec
xchg
test
adc
jmp
xor
dec
pop
push
sub
rolb
or
mov
mov
stos
test
in
dec
or
cmpsb
dec
and
adc
sub
mov
or
and
cmp
shrb
mov
push
lock
and
outsb
mov
xlat
mov
add
fldcw
scas
adc
xchg
and
dec
cmp
sbb
iret
and
scas
cli
dec
pop
and
leave
mov
je
rcll
inc
in
mov
int
and
adc
lods
bound
xchg
inc
push
mov
aaa
iret
iret
mov
lahf
or
lds
mov
int3
cmp
or
mov
scas
test
pop
jne
dec
ret
out
lahf
leave
aaa
dec
push
push
into
sbb
pushf
sti
pop
fcmovu
loope
or
add
adc
jge
jo
jmp
push
addr16
imul
cmp
cmp
dec
xchg
push
outsb
push
push
lahf
inc
lahf
add
pop
jb
cltd
push
dec
xchg
cmp
loop
fwait
orl
dec
adc
data16
fwait
jg
pop
popa
xchg
add
inc
mov
xor
test
cmp
jb
sbb
lea
ja
jbe
push
sbb
adc
push
addr16
and
dec
ret
outsl
mov
call
aas
les
sbb
mov
jo
jno
dec
ja
jnp
lock
push
and
ljmp
mov
nop
or
out
mov
jo
test
mov
push
hlt
sbb
mov
xor
in
rorb
scas
mov
sti
out
lods
push
fsts
xor
push
pop
lock
mov
or
jmp
cs
or
dec
movsl
sbb
clc
out
movsl
lcall
mov
arpl
lret
gs
xchg
mov
nop
jne
addr16
xchg
lods
mov
out
ja
and
jmp
jb
mov
lcall
add
sub
xchg
lods
xchg
mov
lds
test
push
clc
adc
and
xor
adc
pop
in
jns
jo
imul
idivl
pop
pop
mov
mov
cmp
push
mov
xchg
sub
loop
jb
jbe
imul
sbb
jg
jmp
out
lret
mov
les
es
add
data16
mov
or
cs
push
cmpsl
aad
pop
ja
out
cli
out
mov
cmpsb
mov
fmul
cmpsb
enter
jp
hlt
call
mov
ljmp
dec
push
or
fnstsw
jnp
xor
dec
push
sbb
inc
int
inc
cmp
cmp
pop
mov
testl
jp
fistl
loop
icebp
jne
scas
push
lock
dec
cmpsl
stos
leave
mov
les
out
push
xchg
out
in
aas
inc
lahf
xchg
stos
jle
cwtl
sub
inc
divl
sub
aad
ds
pop
lods
in
inc
test
cmp
xchg
sbb
dec
mov
push
loope
and
stc
sahf
or
stc
insl
in
xchg
mov
sbb
call
cmp
pop
mov
dec
sub
push
push
rorl
push
push
add
xor
adc
icebp
add
movsb
dec
stos
mov
and
mull
out
leave
je
shrl
dec
push
dec
es
jecxz
xchg
js
in
mov
scas
iret
sub
stos
ja
icebp
rcll
mov
xchg
inc
shlb
and
xor
push
xor
sub
adc
sub
inc
in
push
xlat
repnz
test
mov
pop
push
xchg
or
out
icebp
arpl
push
mov
dec
repz
mov
enter
mov
jo
mov
xor
or
aam
xlat
sbbb
mov
jbe
pop
xlat
xchg
xor
mov
je
into
or
jp
mov
push
sbbl
mov
mov
imul
or
jg
rorb
out
push
xor
push
jne
mov
fdivs
inc
mov
lods
nop
inc
andb
jbe
mov
mov
outsl
insb
rol
push
or
xchg
cmpsb
xchg
dec
cltd
dec
out
repnz
sub
xchg
daa
adc
and
fisttpl
push
mov
sub
or
add
and
out
adcb
ret
ret
mov
and
xchg
push
loop
insl
mov
stc
inc
rclb
mov
lret
xchg
jg
repz
cmp
and
aaa
es
xor
popf
pusha
out
jns
icebp
out
adc
xchg
jg
aam
cli
jnp
xchg
dec
iret
fcoml
pop
insl
xlat
adc
bnd
test
jae
outsl
and
ret
cmc
pop
in
cmp
add
pop
imul
inc
imul
scas
xchg
fnstenv
sbb
cmp
inc
std
push
sarl
stos
xor
push
out
sbb
jnp
xor
mov
test
cmp
ss
fwait
push
imul
sub
mov
rcll
ficomps
lret
in
dec
fldcw
faddl
sti
rcl
fsubrl
dec
jmp
pop
cmp
test
or
insl
inc
cwtl
jle
adc
push
cmp
dec
xchg
pop
in
sbb
call
push
ret
pop
dec
xchg
sbb
fwait
outsb
or
cs
addr16
bound
add
pop
jb
sbb
mov
dec
imul
ja
ret
cmpsb
and
mov
out
adcl
adc
sbb
inc
inc
enter
xlat
xchg
push
ljmp
enter
or
jb
sahf
adc
scas
lret
mov
dec
je
pop
test
add
adcb
cli
fsts
aad
jl
push
xor
test
sub
repnz
mov
add
bndstx
mov
rcr
sbb
fiadds
lcall
cmpsl
xor
jno
mov
mov
or
push
ret
inc
loop
dec
inc
push
insb
pop
mov
add
out
sarl
xor
cmp
xor
movb
cld
rol
mov
arpl
fwait
adc
mov
jnp
cmp
mov
mov
dec
mov
ljmp
fiadds
out
adc
xchg
dec
mov
cmpb
add
push
subl
cmpl
adc
sub
add
mov
cmp
into
bound
push
leave
xor
mov
lock
addr16
jns
push
cmc
xchg
ret
pop
xchg
sbb
cmc
pop
mov
xor
stos
test
cwtl
xor
ja
dec
jmp
adc
rclb
arpl
aad
sub
test
xorl
ret
adc
lret
xchg
adc
push
aad
pop
sub
dec
pop
fdivrs
loope
mov
mov
sub
dec
test
sbb
jnp
mov
or
sbb
inc
imul
push
out
stos
mov
and
push
adc
les
push
in
xchg
dec
stos
inc
or
jmp
pop
push
push
pop
cmp
outsb
add
cs
idivl
push
lea
xchg
cltd
data16
mov
popw
inc
popa
js
mov
and
cmp
ficomps
imul
lret
sub
xchg
int
mov
lock
mov
pushl
adc
mov
push
popa
adc
inc
pop
lret
push
xor
push
push
in
dec
ret
mov
add
cmc
pop
aam
sbbb
jae
lods
mov
add
jno
insb
xor
andl
into
jp
insl
mov
or
iret
loopne
icebp
je
and
ljmp
inc
jp
mov
loopne
cmp
mov
xchg
iret
xor
ljmp
lock
pop
sahf
push
mov
jmp
clc
jge
xor
lret
add
int
imulb
fcoms
add
sbbb
mov
mov
es
inc
pop
sbb
ror
sbb
cmp
lods
aaa
push
cmp
mov
lods
dec
sub
imul
or
cwtl
cmp
or
sahf
in
dec
push
mov
fildl
rolb
test
push
adc
popa
adc
lretw
pushf
adcb
pop
jno
xor
ss
ljmp
sbb
in
mov
ret
inc
sub
stos
hlt
insb
push
test
cld
rolb
jle
and
ret
lahf
daa
sahf
cmp
cli
dec
ss
pop
mov
rol
repnz
inc
xor
sbb
stos
inc
sub
push
and
mov
xchg
jbe
adc
cld
ds
mov
add
cmp
add
test
addr16
imul
loope
in
aad
dec
aas
call
pop
sbb
aas
mov
mov
fs
mov
bound
sub
mov
mov
data16
stc
es
enter
cmc
fs
pop
cmp
and
js
iret
push
rclb
test
sbb
xorb
insb
inc
push
fsubrl
nop
sbb
adc
xchg
pushw
adc
dec
insb
cmpl
into
dec
mov
daa
outsb
nop
sub
lahf
or
mov
mov
lock
data16
arpl
cmp
icebp
ss
imul
mov
push
mov
js
mov
jb
flds
mov
sbb
inc
push
les
push
fldcw
sub
xchg
sbb
mov
xchg
push
ffree
jns
mov
or
or
jecxz
scas
adc
stos
bound
out
outsl
xchg
fidivs
add
pop
mov
and
nop
frstor
out
push
cmp
xor
xor
push
xorl
adc
add
scas
xor
aam
inc
enter
loope
cmp
mov
out
xor
inc
ljmp
sbb
or
xor
cld
stos
lcall
jb
and
test
in
das
sub
push
pop
je
adc
inc
sub
pop
or
jp
test
scas
mov
cmc
mov
lret
mov
ret
cmp
cmc
xchg
push
jo
push
icebp
pop
mov
inc
in
jmp
xor
xchg
das
dec
popf
outsl
mov
enter
je
shll
and
out
movl
cmc
or
jbe
test
xchg
xchg
dec
adc
pop
inc
mov
sbb
shrb
adcb
pusha
sbb
fwait
mov
fsubp
or
mov
mov
adc
jb
les
ret
leave
orps
add
cmp
out
js
sub
adc
and
insl
cmpsb
mov
adcl
je
or
adc
fisttpll
ljmp
xor
movsl
pop
push
pusha
out
es
push
jmp
test
cmp
sub
push
inc
movsb
ds
jo
dec
out
mov
cli
and
sbbl
xchg
inc
call
add
inc
add
add
pusha
sbb
je
xor
jb
aaa
mov
xchg
das
shl
dec
bound
jp
mov
cwtl
pop
or
arpl
aam
mov
and
sbb
mov
and
cli
adc
dec
pop
inc
lods
sbb
push
ret
mov
movsb
push
push
inc
cmp
fidivrl
hlt
clc
rcrl
fucompp
fwait
int3
movsl
push
mov
in
xchg
xor
mov
loope
xor
sar
imul
fs
cmp
or
or
ret
loop
fisubrl
shll
push
stc
and
push
push
outsb
movsb
cltd
pop
sbb
xor
in
in
or
and
ljmp
pop
inc
dec
test
sbbb
ds
leave
shrb
and
fisubs
cld
lret
mov
sbbb
sbb
push
pop
ficoms
and
lret
mov
ror
push
push
loopne
repnz
mov
loop
into
sbb
lds
mov
mov
je
pop
lahf
add
imul
in
dec
pop
add
scas
sbb
jmp
shll
cmc
jns
mov
daa
pop
fcompl
dec
insl
pop
push
stc
aad
mov
test
popf
xorb
jmp
loopne
mov
stos
js
js
push
mov
xchg
cmpl
nop
cmpsb
loope
insb
pop
lahf
ret
mov
sbb
mov
in
and
js
sti
sahf
cwtl
pop
jmp
aas
into
fcmove
jge
mov
or
add
bound
gs
fwait
icebp
pop
mov
cmpsl
mov
mov
inc
or
adc
jmp
xchg
jecxz
in
lahf
cmp
pop
sub
mov
test
or
or
popa
inc
les
movb
in
test
push
dec
insb
mov
dec
jb
dec
enter
loop
ret
inc
mov
dec
push
pusha
add
inc
gs
in
mov
xor
imull
inc
out
push
add
dec
sub
sbbl
imul
pusha
je
cmpsl
cmp
dec
imul
lods
cmc
cmpsb
fldenv
add
jle
cmc
je
mov
popa
test
loopne
add
in
pusha
pop
inc
jle
sub
sub
and
sub
inc
or
cmpsb
cmp
scas
xchg
mov
fadds
sub
mov
mov
push
push
ja
rcr
jnp
js
inc
ja
aaa
mov
popf
and
jae
ret
mov
lds
js
js
mov
lcall
or
jg
mov
icebp
xor
test
loop,pn
cmc
xor
jp
xor
cltd
in
mov
loopne
xchg
mov
pop
mov
pop
les
add
bt
in
xor
aam
mov
sub
and
mov
mov
lret
fnstsw
test
call
aaa
add
mov
loope
sub
gs
xor
pop
inc
pop
popa
jmp
in
jecxz
inc
fldenv
xor
and
add
push
shll
xchg
fsubrl
dec
push
pop
mov
or
das
xchg
popf
mov
lahf
add
or
or
lods
clc
fisubl
test
push
cmp
mov
adc
sub
push
pop
cs
push
lods
ret
cli
insb
sub
xor
clc
mov
inc
push
je
dec
ja
push
mov
in
sub
int3
mov
in
fcoml
int
pusha
scas
lock
pop
mov
jecxz
push
mov
scas
sbb
xor
jl
lahf
test
adc
inc
lods
add
lods
ljmp
sti
and
push
jo
inc
shl
cmpsb
out
mov
sub
or
ror
clc
shll
dec
aad
or
mov
sbb
mov
pop
mov
adc
adcl
adc
out
dec
sbb
push
lods
fisubs
pop
cltd
push
notl
or
or
mov
nop
and
push
in
ss
pop
adc
push
or
jl
adc
mov
add
sub
incb
push
insb
or
fmull
dec
dec
and
jbe
mov
fwait
cld
xchg
mov
xor
shll
adc
pop
daa
pop
pop
push
cltd
push
pop
jg
fs
mov
mov
int
fs
outsl
pop
loope
es
bound
das
lods
pop
es
mov
test
subb
loopne
mov
out
imul
mov
sbb
jecxz
shlb
add
movsb
je
icebp
xor
sub
or
rcrb
or
sbb
jb
out
add
aad
mov
lcall
xchg
mov
inc
or
inc
lret
nop
mov
mov
daa
mov
cld
and
add
add
lea
xor
mov
leave
inc
pusha
xchg
loop
mov
dec
test
outsl
lock
dec
pop
xchg
mov
and
out
outsl
in
mov
pop
mov
add
movsb
into
push
gs
xor
adc
xor
lahf
mov
sti
rcl
sub
sub
mov
xlat
fidivs
fwait
adc
cwtl
lods
aad
adc
popa
les
cwtl
ss
call
sbb
shll
cltd
push
pop
jge
lds
loopne
in
pop
mov
cld
and
sub
inc
adc
push
xlat
aam
push
gs
movsl
inc
in
cli
push
aam
push
repnz
push
add
mov
pop
lea
jae
js
mov
jbe
cwtl
sbb
inc
push
popa
pop
in
xor
mov
ss
xor
push
pusha
cmpsb
out
aas
add
pop
sbb
sbb
pop
mov
pop
or
mov
jo
dec
fisubl
and
fs
dec
fcomi
les
movb
mov
ss
inc
ret
sbb
cmpsb
mov
inc
popw
pop
xchg
adc
mov
cmp
jmp
incl
fnstsw
loope
jmp
out
mov
aaa
lea
fs
cwtl
cmc
test
mov
repnz
scas
out
dec
dec
fistps
arpl
mov
scas
cmpsl
mov
out
or
js
adc
mov
pop
test
mov
fsts
and
or
mov
aad
add
test
jae
dec
daa
mov
mov
loopne
sub
imul
add
adc
mov
sbb
cmpsb
in
iret
xorl
test
xchg
dec
inc
jb
pop
scas
lret
nop
gs
push
mov
or
dec
push
int3
je
ss
mov
and
push
adc
ja
jne
int
xor
mov
sub
les
fsubrs
sbb
negl
imul
xchg
push
lds
sbb
jb
and
insb
lds
pop
sub
decl
push
and
mov
lret
mov
popa
add
and
pop
sahf
repz
pop
xor
mov
enter
push
fistpl
or
repz
je
lods
mov
jecxz
mov
inc
jae
jge
push
cmp
push
je
es
inc
and
adc
cld
jmp
mov
and
cltd
push
fistl
pusha
fs
cmp
addr16
mov
imul
jge
inc
xor
dec
test
test
inc
mov
lea
sti
shl
sbb
push
cmpsb
xor
cmp
and
adc
push
insl
lea
inc
rclb
adc
push
sbb
mov
cmpsl
mov
mov
rcrl
fisubs
pop
mov
les
ret
outsl
xchg
jno
inc
push
popf
hlt
sahf
lcall
lret
lods
je
test
add
daa
mov
mov
xchg
aaa
push
push
pop
sarb
loop
mov
ret
xlat
mov
int3
jle
mov
movsl
adc
stos
sbb
cmp
add
insl
pop
test
repnz
cld
mov
cmp
aam
xor
out
insl
jmp
mov
cli
sub
aad
push
fwait
clc
adc
mov
push
pushf
xor
mov
cmp
stc
inc
mov
shll
and
daa
fldcw
mov
adc
adc
jl
dec
push
mov
movsb
test
mov
addr16
pop
sbb
ret
sahf
lahf
sbb
mov
popf
clc
mov
fprem
dec
stos
add
xchg
aaa
push
xchg
subb
ficoms
filds
jg
xlat
inc
into
jne
lret
mov
sar
push
cwtl
cli
mov
das
dec
inc
mov
push
js
mov
clc
in
out
mov
rcll
inc
popf
dec
daa
or
sbb
and
cmp
cwtl
sub
fdivrl
stc
aaa
arpl
inc
stos
jo
mov
jae
sub
pop
clc
popa
iret
push
daa
adc
jmp
mov
fstpt
bnd
aas
xor
in
sub
fcomp
add
ja
les
imul
int3
nop
and
lret
seto
xlat
sub
sbb
mov
jg
fwait
jbe
xchg
adc
test
scas
adc
neg
pop
jnp
rcll
outsl
lds
loopne
fcmovnb
int3
test
outsb
fmull
pop
in
loope
jbe
lahf
stc
mov
xchg
jae
cli
fisubrs
stos
add
nop
xchg
add
inc
push
test
std
sar
movsb
test
out
pop
xchg
adc
andb
cmp
lret
inc
ret
mov
push
mov
xchg
push
add
xchg
scas
pop
je
mov
mov
outsl
pop
dec
lods
dec
idivl
mov
adc
push
adc
into
inc
adc
jp
inc
jno
pop
lods
jne
jle
dec
aad
movsl
inc
or
sbb
mov
push
sti
mov
push
les
push
mov
arpl
xchg
add
push
gs
aad
out
rcrl
idivb
add
and
xchg
lds
mov
xchg
je
xor
adc
cli
int
add
adc
subb
rclb
sahf
stc
jmp
popf
fdivr
subb
push
pop
fcomps
or
lods
or
push
sub
or
sahf
xor
popa
or
popf
out
mov
arpl
outsl
das
xor
jb
push
xchg
xchg
xor
paddq
add
mov
jmp
sbb
cmp
sub
cmpsb
xlat
sub
jno
aas
movsl
mov
jmp
cmpsl
enter
and
xchg
mov
outsl
fidivrl
inc
out
push
aad
add
sahf
outsb
andl
mov
cmp
inc
jo
push
shrl
lahf
xchg
and
jns
dec
jo
jae
test
fwait
sbb
sub
sub
jb
montmul
cmpsb
add
fs
shll
xor
test
inc
stc
add
cltd
jl
in
lock
lret
mov
adc
lds
push
insl
dec
in
mov
mov
daa
insb
or
mov
mov
mov
inc
inc
repnz
ret
js
cmp
sti
les
pop
and
fnstcw
lea
jne
mov
notl
in
xor
rorl
pushf
fs
ds
pop
mov
push
push
ret
pop
cmp
mov
insl
pop
lcall
lahf
fwait
push
jae
push
pextrw
cltd
imul
cmc
insb
sub
outsb
fadds
sbb
fmul
mov
sbb
add
lret
jge
mov
cmc
xor
jnp
lods
dec
jnp
push
dec
lods
jne
loopne
sub
mov
std
inc
clc
adc
cmc
mov
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
sub
pop
pushf
push
cmp
stc
push
pop
push
xor
inc
je
or
shr
push
push
sti
mov
in
adc
push
sahf
xchg
sar
add
cltd
xchg
hlt
xchg
mov
cmp
mov
daa
insl
aad
shll
movsl
add
sub
outsl
testb
enter
rcrl
test
push
ficoml
jbe
cli
out
and
sbb
add
loopne
leave
cmp
lods
lret
and
sbb
stos
adc
or
mov
push
push
cmp
and
jne
je
lock
jp
out
lret
inc
pop
stos
xchg
pop
pop
push
jne
mov
scas
js
xlat
xchg
add
and
stc
ljmp
and
cmpsl
xchg
inc
hlt
pop
sbb
ret
repz
test
loop
mov
sti
mov
js
mov
xchg
sub
sub
add
and
xchg
in
add
mov
loopne
test
outsb
popa
dec
leave
repnz
jae
cmp
sbb
mov
aaa
cmp
sub
push
jo
pop
and
mov
cmpsb
lods
iret
jo
aam
shll
pop
repnz
inc
sub
inc
jo
sbb
add
mov
dec
gs
std
ret
aam
jo
call
push
inc
ret
movl
lret
sub
sti
pop
mov
aad
gs
lcall
mov
mov
inc
movsb
pop
dec
xchg
push
xor
or
iret
xchg
push
cs
mov
mov
push
mov
mov
mov
mov
std
or
call
dec
pop
enter
in
inc
cmp
shlb
xor
add
pop
in
imul
popf
cmp
or
fs
sub
inc
movsb
das
xor
mov
inc
popf
lods
jb
in
nop
pop
sub
shlb
test
sbb
adc
ror
xchg
or
aad
push
std
add
es
or
in
jnp
push
in
xor
mov
sub
push
sbb
mov
mov
push
mov
test
sbb
es
xor
int3
push
aas
ja
in
lret
pusha
add
and
sbb
repz
call
adc
lcall
loopne
clc
or
stc
cmp
xchg
fistps
xor
xchg
pop
icebp
rcll
jmp
aas
iret
xchg
adc
cmp
xorb
jle
pinsrw
mov
or
aad
lret
pop
sbb
sub
addl
and
inc
or
inc
xchg
add
pop
xor
in
je
outsl
int3
mov
ret
out
add
pop
jnp
sahf
or
xchg
or
xchg
inc
xlat
and
mov
sbb
push
jno
xor
loopne
pushf
or
mov
dec
push
mov
jne
jecxz,pn
nop
inc
filds
and
pop
sbb
dec
pop
or
outsb
sbb
call
test
or
sub
inc
push
or
out
mov
mov
xchg
mov
outsb
pop
into
loopne
stc
stos
ret
mov
or
repnz
out
leave
clc
sbb
mov
mov
cmp
sbb
lret
movsl
push
sub
xor
sbb
sbb
subl
cmc
sub
sub
xchg
mov
sti
fildll
out
jb
stos
sbb
std
movsb
mov
mov
xchg
jae
sarl
inc
mov
or
xor
mov
mov
cmp
out
or
jecxz
adc
loopne
imul
dec
dec
push
jbe
jns
xchg
xor
ss
sub
popa
inc
jmp
mov
pop
stos
pop
mov
sarl
inc
shl
pusha
sbb
clc
cld
jnp
in
out
xor
lods
mov
jbe
ret
xchg
jp
sub
subb
jle
mov
cli
stos
leave
or
inc
aam
orb
lcall
cmpsb
test
jl
xor
out
repz
pop
pushf
fadd
cld
jg
jne
and
or
scas
mov
sub
mov
mov
wrmsr
xchg
sub
mov
loop
mov
sub
inc
xchg
lret
test
add
in
in
lods
add
rcll
jnp
dec
out
flds
jmp
rcl
adc
out
jae
mov
sbb
cmp
cld
aad
inc
add
pop
loop
inc
mov
and
cmp
out
xor
or
mov
add
cld
movsb
lcall
cwtl
xchg
and
into
xchg
inc
fistpll
and
inc
lock
inc
xor
sbb
pop
ljmp
mov
aad
jno
test
fsubs
in
mov
lret
imul
testl
mov
sub
outsl
sub
mov
dec
stc
dec
out
mov
sub
mov
loope
cmp
dec
fsubl
cli
mov
cmp
scas
ja
pop
or
sbb
xlat
dec
hlt
jecxz
lds
xchg
in
pop
xor
push
in
popf
scas
pop
in
inc
cld
lods
sbb
cli
aam
shl
jbe
test
loope
das
jl
push
insl
add
jns
mov
xchg
mov
pushf
mov
xchg
pop
sahf
pop
inc
xor
adc
add
shll
xor
jge
test
sub
out
mov
cmp
dec
sub
adc
cmp
mov
jnp
mov
imul
adc
and
js
and
test
outsl
sub
xchg
jo
xor
imulb
loopne
sbb
pop
jle
xchg
fldl
cmp
aam
cmp
mov
imul
fs
push
daa
jg
loope
call
cmp
adc
enter
stc
in
mov
into
dec
data16
fsubrl
fists
sbbb
jbe
iret
bound
cmpsb
mov
js
lock
dec
xchg
test
leave
scas
cmp
stos
pop
or
imul
and
lods
shl
in
dec
pop
mov
dec
dec
push
hlt
push
into
pop
nop
fs
push
dec
data16
and
mov
inc
ja
xor
xchg
imul
inc
xchg
mov
pop
jbe
jecxz
leave
jo
clc
add
leave
xchg
jae
insl
fprem1
addr16
pop
insb
ss
push
out
add
sub
sbb
arpl
mov
push
bound
xchg
scas
mov
mov
pop
mov
inc
push
aaa
ljmp
in
les
dec
push
sub
cmp
shrl
mov
xchg
mov
incb
in
inc
and
les
inc
pop
push
cmp
jo
jge
mov
inc
push
enter
daa
stos
push
inc
sbb
xor
jmp
jle
cli
mov
xor
cmp
cmc
jo
jp
loop
add
sbb
lahf
push
xor
pop
sti
in
sbb
mov
mov
mov
lcall
stc
out
xchg
push
test
jl
pop
sbb
xor
cli
adc
xadd
cltd
gs
mov
scas
lock
and
mov
push
cmp
icebp
dec
cli
lret
add
aaa
pusha
push
or
fwait
in
mov
inc
jle
push
les
adc
leave
xchg
inc
test
dec
cmpsb
pop
mov
inc
mov
shlb
daa
push
cmpsl
cmc
inc
pusha
xlat
rorb
movsl
hlt
outsb
adc
xchg
pusha
xchg
into
inc
ss
aad
push
jno
sahf
out
pop
sub
mov
jp
or
push
mov
shr
adc
jbe
out
lret
movsb
into
dec
jae
and
lds
jno
movsb
add
mov
lret
lods
push
or
xor
into
idivb
sbb
movsb
xchg
fstp
outsb
ja
addl
push
cs
sbb
popf
imul
push
fists
xlat
lahf
mov
xor
decl
dec
psubw
pop
push
adc
mov
inc
or
shl
push
out
pop
stos
les
fst
movsl
mov
outsl
pop
xchg
push
jle
push
dec
mov
in
jge
mov
loopne
addr16
stc
shr
icebp
sbb
mov
lahf
je
mov
cmpsl
or
and
push
test
icebp
adc
xor
cmp
popa
rol
or
je
fisttpll
and
sbb
push
in
psrlq
lock
fsubrl
push
repnz
stos
mov
pop
ror
hlt
aam
xchg
or
ret
addl
push
or
mov
xchg
ss
lea
xchg
loop
ljmp
sub
lcall
jmp
push
and
cli
bound
dec
jmp
fs
pop
dec
adc
shlb
lret
add
das
out
add
jmp
mov
mov
cmp
sub
rcr
dec
int
mov
adc
cmp
xor
incl
les
cmp
fcompl
lcall
dec
stos
stos
dec
and
inc
in
pop
mov
inc
test
pop
fstl
cmp
test
jecxz
cmpsb
fcoms
arpl
push
and
inc
pop
fld
inc
push
xor
out
inc
dec
jo
jl,pn
push
or
mov
aas
mov
or
shrl
pop
mov
fs
sbb
pusha
out
movsb
adc
mov
push
xorb
cmp
scas
xchg
add
sub
out
imul
repnz
sbb
sbb
mov
mov
aad
or
ret
pop
dec
call
das
pop
add
das
xor
jecxz
frstor
mov
fwait
out
imul
add
out
sub
sbb
cmpb
xlat
mov
mov
mov
mov
notl
pop
rol
or
push
cltd
jns
shrb
repz
xchg
cltd
pop
ljmp
popf
sbb
ds
jg
insb
loope
dec
xchg
adc
push
push
mov
mov
adc
push
add
inc
or
neg
push
inc
stc
cmp
cmpsl
sub
mov
cmp
enter
popa
shlb
adc
test
add
lahf
fldenv
mov
add
mov
and
hlt
inc
fdivl
imul
xchg
imul
cmp
hlt
in
mov
mov
fwait
cmp
mov
jae
add
mov
insb
push
push
leave
cli
enter
xlat
in
sub
rcr
int3
sarb
and
ja
out
xchg
mov
inc
repz
push
or
pop
stos
fwait
sub
pop
sti
dec
cmpsb
in
cld
pop
adcb
ds
movsl
xchg
pop
pop
pop
push
cmpsl
sub
sbb
jge
sub
sbb
mov
stos
sub
cmp
ds
xchg
adc
lahf
pop
pop
and
test
jp
imul
pusha
repz
notl
pop
xchg
popf
sub
scas
xchg
jl
shlb
dec
insb
lret
push
js
jnp
js
sub
sbb
mov
bound
iret
jno
testl
jae
shrb
jbe
jmp
xchg
mov
mov
pop
cmpsb
roll
lcall
pop
lret
and
pop
or
sub
int
aad
das
xchg
push
out
add
push
ja
mov
hlt
pop
mov
arpl
and
xor
jge
jmp
lret
std
scas
cmp
add
jle
cmp
ja
or
or
and
mov
adc
mov
add
add
imul
lcall
mov
cmpsb
xchg
dec
and
int3
dec
sti
add
or
inc
push
js
pop
push
xchg
cmp
mov
add
les
dec
push
arpl
mov
je
test
cs
add
push
into
xchg
mov
adc
shr
ss
mov
stc
pop
inc
ds
inc
outsb
inc
adc
dec
data16
mov
mov
enter
sub
loopne
jmp
push
lcall
dec
stos
jmp
mov
aaa
arpl
xor
test
into
mov
test
mov
push
icebp
adc
ss
jp
jno
mov
mov
lods
loopne
dec
lahf
and
pop
jmp
scas
inc
jb
add
aad
imul
pop
mov
cmpb
pop
pusha
sahf
mov
mov
inc
sub
lock
sbb
jns
push
jl
cmpsl
add
test
or
xchg
int
adc
out
aas
aaa
add
add
add
inc
xchg
jne
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
rcrb
